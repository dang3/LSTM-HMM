push
mov
push
movl
movl
movl
movl
movl
movl
mov
push
mov
push
mov
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
mov
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
call
mov
push
call
add
mov
pop
ret
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
lea
mov
mov
mov
mov
sub
mov
mov
pop
ret
int3
int3
int3
int3
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
push
call
add
movl
jmp
mov
add
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
add
mov
mov
push
mov
push
call
add
sar
cmp
jne
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
mov
push
mov
push
call
add
and
add
mov
mov
mov
add
mov
mov
jmp
pop
mov
pop
ret
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
add
mov
mov
pop
ret
int3
int3
int3
int3
push
mov
mov
mov
add
mov
pop
ret
push
mov
push
movl
movl
movl
movl
movl
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
movl
movl
movl
movl
movl
mov
cmp
jae
movl
mov
jmp
jmp
movl
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
cmpl
jne
mov
mov
mov
push
mov
push
mov
push
call
add
mov
push
call
add
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
cmpl
je
mov
mov
mov
push
mov
push
push
call
add
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
movl
mov
mov
add
mov
mov
sub
shr
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
push
ret
mov
pop
pop
ret
int3
push
mov
sub
push
push
push
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
push
call
mov
lea
push
mov
push
push
call
test
je
call
lea
push
mov
push
mov
push
call
test
je
call
lea
push
push
push
call
test
jne
call
push
call
test
jne
call
movl
movl
movl
movl
movl
movl
call
mov
push
call
add
mov
mov
push
call
add
mov
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
pusha
movl
movl
mov
push
push
mov
push
call
add
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
movl
mov
mov
mov
push
call
add
mov
mov
add
mov
push
mov
push
mov
push
call
add
mov
sub
push
mov
push
mov
push
call
add
mov
add
mov
mov
mov
mov
popa
mov
mov
mov
mov
push
mov
mov
mov
mov
push
mov
sub
mov
pop
add
mov
mov
mov
movl
mov
mov
mov
add
mov
ret
xor
pop
pop
pop
mov
pop
ret
int3
int3
push
mov
push
push
call
mov
mov
call
pop
ret
int3
push
mov
call
mov
push
call
add
mov
pop
ret
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
movl
mov
push
mov
push
mov
push
mov
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
movl
jmp
mov
add
mov
mov
cmp
jge
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
add
mov
add
mov
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
push
call
add
movzwl
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
jmp
mov
add
mov
mov
cmp
jae
movl
movl
movl
mov
mov
lea
mov
movl
mov
add
mov
movl
movl
movl
mov
mov
mov
mov
movl
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
jmp
mov
pop
ret
int3
int3
pushf
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addl
sub
inc
add
inc
add
inc
add
addl
adc
inc
add
add
addl
xor
inc
add
addb
addl
inc
addl
pop
addl
call
addl
cmp
inc
add
inc
add
add
addb
addb
.byte
inc
dec
pop
add
add
add
add
pop
add
add
push
add
add
add
add
add
add
add
add
push
add
add
push
add
add
push
add
add
push
add
add
add
add
add
add
push
add
add
push
add
add
push
add
add
push
add
add
add
add
add
add
push
add
add
push
add
add
push
add
add
pop
add
add
pop
add
add
push
add
add
push
add
add
add
movsb
pop
add
add
pop
add
add
pop
add
add
pop
add
add
pop
add
add
add
add
add
add
add
pop
add
add
pop
add
add
pop
add
add
pop
add
add
add
add
add
add
add
add
push
add
push
add
inc
add
inc
add
add
add
jae
add
pop
add
outsb
add
add
data16
arpl
add
add
xor
xor
xor
xor
xor
xor
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
gs
jo
outsb
dec
gs
add
add
popa
add
imul
add
add
data16
test
scas
pop
sub
dec
in
test
jns
sbb
rcrl
push
xlat
filds
mov
fldenv
dec
dec
scas
outsb
push
cmp
jo
sti
fcomps
xlat
out
mov
sub
jne
xchg
outsb
push
sahf
decl
iret
pop
xlat
jb
les
pop
jnp
mov
mov
imul
inc
inc
stc
lods
cmpsb
xlat
out
enter
jge
fwait
enter
test
ror
push
pushf
enter
repnz
mov
dec
mov
sub
idivl
jne
clc
or
mov
xchg
mov
fistpl
xor
jo
rol
in
and
or
jnp
bnd
fld
add
adc
sub
dec
or
fimuls
sar
repz
jnp
int
les
xor
int
shlb
or
inc
icebp
scas
in
push
mov
cli
or
in
popa
and
repz
push
ss
mov
and
add
sbb
cmp
ds
and
jno
iret
mov
loopne
and
std
sub
mov
stc
daa
and
shll
into
daa
rcrb
jmp
cwtl
xchg
imul
mov
push
xchg
aaa
lret
andb
mov
repz
ja
cmp
adc
mov
aam
mov
pop
in
xor
dec
sbb
sbb
aam
sbb
sub
mov
mov
adc
ds
mov
repnz
shlb
hlt
push
xchg
bound
and
cmc
ljmp
and
sub
add
xchg
sysenter
mov
jmp
adc
jmp
iret
xor
push
or
fistps
hlt
fildl
xor
or
and
xor
cs
xchg
adc
add
inc
sbb
or
popa
lds
add
dec
punpcklbw
dec
or
mov
pop
inc
scas
outsb
add
dec
punpcklbw
dec
or
ja
pop
inc
mov
add
inc
sbb
inc
sbb
insl
punpckhdq
or
and
or
inc
sub
inc
das
add
push
sbb
inc
sbb
and
sbb
add
das
dec
or
push
sub
inc
or
inc
xchg
and
sbb
inc
sbb
insl
punpckhdq
dec
or
and
cs
and
add
and
add
and
add
and
add
and
add
and
add
and
add
inc
sbb
or
popa
test
bound
pusha
pop
dec
or
ja
pop
inc
add
add
outsb
add
inc
sbb
xor
ss
add
and
sbb
push
inc
pusha
xor
add
inc
add
push
outsb
add
push
sbb
push
inc
pusha
ljmp
addr16
outsb
add
dec
sbb
jecxz
add
dec
add
and
add
outsl
pop
popa
test
dec
or
dec
sbb
mov
add
test
popa
jne
outsb
add
inc
pcmpeqb
add
and
sbb
jnp
pop
ss
add
and
sbb
or
popa
aaa
push
outsb
add
and
aaa
add
into
insl
add
int3
insl
add
int3
insl
add
int3
insl
add
int3
insl
add
int3
insl
add
int3
insl
add
int3
insl
add
int3
insl
add
int3
insl
add
add
xchg
int3
insl
add
int3
insl
add
int3
insl
add
int3
insl
add
fsubrl
xchg
int3
insl
add
int3
insl
add
int3
insl
add
int3
insl
add
int3
insl
add
int3
insl
add
int3
insl
add
int3
insl
add
int3
insl
add
int3
insl
add
int3
insl
add
int3
insl
add
int3
insl
add
int3
insl
add
and
xchg
xchg
and
xchg
xchg
and
xchg
add
add
and
xchg
xchg
and
xchg
xchg
and
xchg
xchg
and
xchg
xchg
and
xchg
xchg
and
xchg
xchg
and
xchg
xchg
and
xchg
xchg
and
xchg
xchg
and
xchg
xchg
and
xchg
xchg
and
outsb
in
add
add
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
cltd
lcall
in
xchg
and
outsb
int
daa
outsl
notb
outsb
in
frstor
outsb
call
test
outsb
in
xchg
outsb
in
movsl
and
outsb
call
add
add
outsb
in
xchg
and
outsb
in
rcl
xchg
add
sub
lods
sub
scas
sub
mov
sub
scas
cmp
scas
sub
jg
outsb
add
sub
mov
insl
add
daa
outsb
add
sub
outsl
sub
outsl
sub
aas
sub
aas
sub
das
sub
das
or
mov
add
aas
sub
das
sub
das
sub
jmp
outsb
add
daa
outsb
add
daa
outsb
add
daa
outsb
add
daa
outsb
add
mov
add
sub
xchg
mov
insl
add
mov
nop
sti
mov
mov
insl
add
mov
insl
add
mov
add
pop
insl
add
movsb
mov
add
mov
add
mov
insl
add
mov
push
mov
push
gs
pop
push
xchg
jo
add
mov
xchg
sti
adc
insl
add
mov
insl
add
cld
imul
inc
mov
xor
xchg
and
xchg
xchg
and
xchg
xchg
and
movl
add
add
and
xchg
xchg
and
xchg
xchg
and
xchg
xchg
and
xchg
xchg
and
xchg
xchg
and
xchg
xchg
and
xchg
xchg
and
xchg
xchg
and
xchg
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
add
add
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
add
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
das
and
add
and
add
and
add
and
add
and
add
and
add
mov
insl
add
mov
insl
add
mov
insl
add
mov
insl
add
mov
insl
add
mov
insl
add
mov
insl
add
mov
insl
add
jle
pop
xchg
lret
xchg
loopne
pop
add
add
lods
mov
pop
xchg
push
pop
xchg
cmp
pop
xchg
mov
mov
pop
xchg
idivb
pop
xchg
and
jge
xchg
and
pop
aad
and
push
aad
and
jmp
xchg
and
sbb
xchg
and
xlat
aad
and
add
and
fwait
aad
and
test
xchg
and
jecxz
and
xchg
xchg
and
das
in
xchg
and
shl
xchg
and
xchg
xchg
and
outsb
xor
outsb
pop
cmp
outsb
imul
outsb
adc
and
lock
clc
and
repz
xchg
and
add
and
xchg
and
outsb
scas
out
and
out
and
fisubs
outsb
rcr
outsb
ja
and
into
and
mov
and
outsb
sub
outsb
sub
pop
sub
pop
sub
dec
sub
dec
sub
aas
sub
cmp
outsb
push
insb
sub
insb
sub
pop
sub
insl
add
lock
add
out
insl
add
add
pop
lock
add
out
insl
add
out
insl
add
in
insl
add
out
insl
add
out
insl
add
out
insl
add
in
insl
add
in
insl
add
out
insl
add
out
insl
add
out
insl
add
out
insl
add
out
insl
add
out
insl
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
fldcw
aad
insl
add
add
sub
loopne
add
fsubl
pop
xchg
mov
movsb
pop
xchg
movsl
pop
xchg
movsb
pop
xchg
push
movsl
pop
xchg
or
pop
xchg
movsl
pop
xchg
push
movsb
pop
xchg
push
pop
xchg
movsb
pop
xchg
andb
jo
pop
xchg
ret
xchg
mov
mov
pop
xchg
test
pop
xchg
mov
add
pop
mov
pop
xchg
movb
xchg
mov
pop
xchg
and
ja
xchg
and
dec
rcll
and
or
xchg
and
or
xchg
and
xchg
and
in
rcll
and
fcmovnbe
xchg
and
add
add
and
fcoml
and
inc
fcoml
and
inc
fcoml
and
paddusb
outsb
jno
outsb
inc
outsb
outsb
das
outsb
outsb
pop
pop
outsb
jmp
outsb
fisttps
outsb
mov
inc
outsb
xchg
inc
outsb
gs
outsb
push
in
outsb
jg
add
in
outsb
insl
in
outsb
std
les
outsb
sbb
and
outsb
pop
in
outsb
sti
in
outsb
out
and
outsb
push
and
outsb
adc
and
outsb
arpl
outsb
pop
addr16
outsb
jge
and
insl
add
and
insl
add
mov
insl
add
and
outsb
test
add
xor
outsb
test
and
outsb
add
les
das
ret
dec
ret
out
and
add
lds
loope
insl
add
lds
mov
insl
add
shrl
les
fld
insl
add
les
xor
insl
add
shrl
shrl
and
test
shrl
les
xchg
xor
pop
add
add
shlb
xchg
xchg
mov
pop
xchg
pop
mov
pop
xchg
in
mov
pop
xchg
inc
mov
pop
xchg
jl
pop
xchg
mov
mov
xchg
add
pop
xchg
mov
xchg
mov
pop
xchg
test
pop
xchg
andb
xchg
clc
cmpsb
pop
xchg
data16
pop
xchg
sub
xchg
jbe
pop
xchg
adc
pop
xchg
and
mov
int3
xchg
and
in
xchg
and
sbb
xchg
and
xchg
xchg
and
jmp
xchg
and
xchg
xchg
and
inc
in
and
movsl
in
and
repz
and
fucom
xchg
and
add
and
xchg
xchg
and
mov
xchg
movsl
xchg
loop
and
xchg
xchg
movsl
outsb
fcoml
and
xchg
and
outsb
jae
and
jns
outsb
imul
outsb
jmp
cmp
outsb
pop
xchg
and
outsb
adc
xchg
and
out
fists
add
xchg
and
out
std
xchg
and
out
scas
repz
lcall
icebp
xchg
and
out
rclb
and
outsb
in
xchg
and
outsb
add
lds
scas
ret
insl
add
ret
insl
add
insl
add
insl
add
insl
add
insl
add
insl
add
insl
add
insl
add
insl
add
add
rol
insl
add
sub
sbb
insl
add
fldcw
or
insl
add
enter
sub
repz
leave
insl
add
leave
insl
add
enter
enter
enter
lret
ret
lret
cmpsl
enter
sub
mov
sub
rol
jne
jne
mov
push
jne,pt
jg
out
ret
add
adc
xor
lret
out
test
adc
lock
pop
rcrl
out
test
fbstp
arpl
jmp
pop
enter
out
cmp
loope
int3
and
dec
jle
leave
cmp
test
shrl
scas
faddl
cmpsl
pusha
xchg
sti
xor
loop
jbe
push
add
sbb
xlat
xchg
add
ss
and
add
adc
lock
sub
push
inc
cli
jno
aad
gs
and
dec
mov
dec
sub
push
mov
and
outsl
pop
xchg
xor
add
shl
dec
push
pop
adc
out
push
lret
cld
or
nop
push
ret
or
adc
addr16
test
dec
add
add
imul
mov
xor
mov
xor
xchg
sbb
imul
insb
xchg
es
aam
adcl
scas
lcall
adc
jg
iret
and
dec
insl
and
mov
add
jg
scas
and
dec
jne
sub
jmp
jg
xchg
and
sbb
mov
jg
add
add
and
xchg
ret
adc
adc
movsl
aam
andb
xchg
test
aam
inc
adc
dec
add
testb
test
mov
adc
cmp
sbb
mov
fisttpll
aad
mov
jmp
pop
mov
les
xchg
out
cli
leave
jmp
adc
add
add
xchg
out
xchg
sub
mov
adc
sub
pop
pop
pusha
jnp
cmp
adc
mov
xchg
sti
xorb
adc
test
out
outsb
lahf
jl
cwtl
mov
add
iret
push
sub
xor
cmpsl
push
mov
xchg
not
xlat
xchg
push
add
add
repz
add
add
lahf
ret
mov
popf
inc
lock
push
push
xor
dec
icebp
pop
mov
add
lahf
movsl
stc
inc
in
push
jge
sbb
and
into
insl
add
inc
test
lret
cmpsl
stos
or
into
pop
inc
fldenv
out
es
add
adc
xchg
or
xor
add
add
call
add
xchg
adc
jg
sti
insl
fs
adc
lock
mov
push
out
xchg
in
test
adc
mov
inc
adc
lock
mov
adc
lock
movsb
loope
push
popa
adc
xchg
or
mov
add
lret
addr16
inc
sbb
mov
pop
mov
xchg
movsb
in
xchg
and
outsb
cmp
xchg
sub
xchg
sub
pop
bound
xchg
sub
xchg
sub
outsb
loope
daa
outsb
or
fldenv
jmp
xchg
adc
outsb
in
adc
outsb
jge
bound
add
add
movsl
outsb
pop
int
outsb
cmc
xchg
add
outsl
pop
int
outsb
add
sub
add
sub
iret
push
add
sub
sub
jmp
outsb
add
and
mov
sub
jmp
sbb
add
sub
add
sub
scas
xor
add
xor
add
xor
add
add
into
add
xor
jg
out
add
xor
add
sub
add
xor
add
xor
das
sub
add
cs
add
xor
add
into
gs
into
fs
frstor
xchg
into
gs
xchg
into
gs
into
fs
into
gs
into
mov
into
fs
xchg
fisubs
xchg
into
gs
xchg
into
adc
add
xchg
mov
gs
into
xor
frstor
xchg
into
gs
xchg
into
and
into
add
into
gs
xchg
into
fs
xchg
fisubs
xchg
into
gs
xchg
into
sbb
and
xchg
stos
and
xchg
ds
xchg
jp
xchg
mov
xchg
ds
add
and
xchg
fisubs
or
and
xchg
movsb
and
xchg
or
and
xchg
fs
mov
popf
and
xchg
mov
xchg
xor
xchg
xchg
and
xchg
aam
xchg
jb
mov
cltd
and
outsb
in
lea
outsb
in
mov
outsb
in
add
add
ljmp
mov
outsb
fistps
dec
outsb
in
lea
outsb
in
mov
in
popf
das
outsb
in
popf
scas
outsb
in
lea
in
mov
outsb
in
popf
push
outsb
in
lea
outsb
sub
cwtl
imulb
popf
xor
rep
in
mov
outsb
fcompl
inc
outsb
in
lea
outsb
in
mov
outsb
in
popf
mov
add
leave
outsb
add
and
aas
xor
jo,pn
das
sub
add
and
add
cs
add
sub
add
sub
inc
add
sub
add
sub
loopne
out
sub
xchg
add
and
mov
sub
in
add
and
mov
sub
add
and
sub
dec
add
sub
add
sub
out
add
into
gs
xchg
into
out
fisubrs
xchg
into
gs
xchg
into
gs
xchg
mov
gs
into
gs
xchg
xchg
into
gs
xchg
into
gs
xchg
into
gs
xchg
into
gs
xchg
into
testb
add
into
gs
xchg
into
adc
mov
gs
into
xor
xchg
into
gs
xchg
into
and
and
xchg
sbb
xchg
cmp
mov
sahf
and
xchg
fwait
and
xchg
add
and
xchg
pop
and
mov
add
add
and
xchg
sub
xchg
fwait
and
xchg
dec
and
mov
xchg
and
xchg
movsl
and
xchg
add
xchg
and
and
mov
popf
and
outsb
in
lea
outsb
in
pushf
jg
in
popf
and
lea
outsb
in
pushf
mov
outsb
in
add
add
sbb
pushf
outsb
stc
xchg
bound
lea
outsb
in
cli
insl
in
mov
adc
lea
in
lea
outsb
in
mov
sub
lea
outsb
in
mov
and
lea
in
lea
outsb
sub
xchg
repnz
in
lea
outsb
in
out
insl
in
mov
and
outsl
sub
add
add
outsl
sub
jg
rolb
imul
sub
add
sub
add
sub
add
sub
aas
sub
add
and
add
sub
ljmp
mov
in
and
out
sub
add
sub
ljmp
rolb
sub
out
sub
add
sub
add
sub
add
sub
add
sub
add
add
sub
add
sub
add
int3
gs
mov
insb
push
xchg
mov
gs
mov
gs
mov
gs
xchg
mov
insb
add
mov
bound
xchg
mov
gs
mov
outsb
adc
xchg
mov
fs
add
xchg
mov
mov
mov
outsb
add
mov
gs
and
xchg
and
xchg
pop
and
xchg
repnz
xchg
aas
and
xchg
adc
xchg
aas
and
xchg
fisubl
xchg
xchg
add
add
lds
xchg
shlb
mov
test
and
xchg
das
and
xchg
or
xchg
iret
and
add
and
outsb
in
popf
pop
outsb
rcrb
or
lea
outsb
in
popf
imull
pushf
call
outsb
in
lea
in
popf
pop
outsb
in
pushf
mov
lea
outsb
in
add
add
outsb
in
pushf
enter
sub
lea
in
popf
movd
pushf
cwtl
outsb
stc
and
in
lea
outsb
in
popf
out
insl
in
lcall
in
lea
outsb
in
popf
ljmp
lcall
in
lea
outsb
in
lcall
add
push
cmp
push
js
jg
outsb
add
mov
add
push
sbb
add
jg
pop
add
and
add
push
or
push
dec
add
and
add
push
push
add
push
sub
and
add
push
xor
push
jo
aas
and
add
mov
add
push
adc
sbb
mov
fnsave
add
sbb
roll
sbb
loopne
xchg
mov
add
sbb
sti
mov
mov
xchg
mov
gs
xchg
into
nop
or
xchg
mov
bound
xchg
mov
gs
xchg
mov
nop
add
mov
bound
xchg
mov
gs
add
add
mov
gs
xchg
and
xchg
pop
xchg
pop
and
mov
xchg
and
xchg
andl
clc
insb
and
xchg
ret
and
mov
mov
xchg
mov
xchg
sub
and
xchg
shll
mov
add
add
and
xchg
std
and
clc
les
xchg
lret
and
mov
mov
and
outsb
in
mov
lea
outsb
in
popf
mov
outsb
in
mov
in
popf
push
outsb
in
popf
adc
rorb
add
popf
xor
popf
repnz
in
mov
outsb
fdivrl
outsb
in
add
add
add
mov
outsb
in
popf
mov
outsb
in
mov
outsb
fnstsw
sub
popf
dec
outsb
in
popf
or
mov
outsb
in
or
in
insl
in
add
outsb
add
sbb
ljmp
inc
add
mov
add
stos
fs
stos
in
mov
mov
add
sbb
mov
add
mov
mov
sti
pushf
sbb
jg
sbb
stos
pop
add
mov
add
sbb
jg
or
stos
dec
add
mov
add
stos
push
add
stos
sub
mov
add
sbb
aas
stos
xor
stos
jo
das
mov
add
sbb
add
mov
xchg
ficoml
mov
xchg
sub
add
xchg
mov
xchg
or
mov
xchg
cli
xchg
int3
add
add
adc
add
add
test
add
popw
xchg
add
and
add
or
addr16
xchg
jle
add
into
pushw
xchg
shll
xchg
iret
sbb
add
add
xchg
add
and
add
and
mov
cmpsl
and
xchg
add
sbb
add
and
popl
cltd
and
popf
pop
fwait
and
mov
xchg
and
cltd
pop
xchg
and
xchg
xchg
and
xchg
add
add
and
xchg
xchg
and
xchg
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
out
xchg
and
outsb
out
xchg
and
outsb
out
xchg
and
outsb
out
xchg
and
outsb
loope
and
outsb
loope
and
outsb
loopne
and
outsb
loopne
add
xchg
and
outsb
std
test
push
loope
sbb
sbb
xchg
and
outsb
in
xchg
and
outsb
add
daa
outsb
add
daa
outsb
add
daa
outsb
add
daa
outsb
add
outsb
add
outsb
add
outsb
add
outsb
add
daa
outsb
add
outsb
add
outsb
add
outsb
add
outsb
add
outsb
add
add
mov
outsb
add
outsb
add
outsb
add
outsb
add
outsb
add
outsb
add
outsb
add
outsb
add
outsb
add
outsb
add
outsb
add
outsb
add
outsb
add
outsb
add
outsb
add
outsb
add
mov
insl
add
mov
insl
add
mov
insl
add
mov
insl
add
mov
add
mov
insl
add
mov
insl
add
mov
insl
add
shrb
dec
insl
or
lock
loopne
or
call
insl
or
pop
insl
or
mov
or
cmp
xchg
subb
or
xchg
mov
or
cmp
xchg
and
jae
mov
add
sahf
and
inc
pop
mov
and
add
and
adc
add
and
adc
add
and
or
add
and
sub
pop
sahf
and
popf
pop
mov
int
add
add
and
outsb
ja
sbb
outsb
daa
lcall
arpl
sbb
outsb
lret
xchg
sbb
outsb
dec
xchg
sbb
outsb
sti
xchg
sbb
outsb
sbb
sbb
outsb
jae
sbb
outsb
xchg
xchg
sbb
outsb
pop
xchg
sbb
outsb
stos
add
add
sbb
outsb
rcll
sbb
outsb
imul
data16
and
popa
and
shll
add
and
mov
and
mov
and
outsb
and
dec
and
pop
and
pop
and
into
and
and
outsb
and
mov
data16
and
add
add
and
dec
and
scas
and
push
and
mov
data16
and
and
out
data16
and
and
data16
out
data16
mov
or
xor
insl
or
add
insl
or
xor
insl
or
add
insl
or
inc
push
xchg
jns
or
add
xchg
fldcw
add
add
pop
push
xchg
loope
or
test
insl
or
or
xchg
xchg
insl
or
test
insl
or
or
xchg
xchg
insl
or
shrl
dec
insl
or
icebp
imul
loope
or
popa
insl
or
and
and
mov
add
sahf
and
jb
mov
add
add
add
and
xchg
pop
lahf
and
xor
and
hlt
pop
lahf
and
aam
and
je
lahf
and
adc
and
push
add
and
hlt
pop
and
mov
lahf
and
sbb
and
outsb
es
outsb
add
add
outsb
push
lcall
xchg
lcall
xchg
outsb
xchg
outsb
push
lcall
notb
outsb
lcallw
outsb
xchg
xchg
outsb
xchg
xchg
outsb
xchg
outsb
xchg
outsb
push
lcall
xchg
outsb
ss
cmpsb
xchg
outsb
cmpsb
add
add
outsb
loop
outsb
add
sub
xor
addr16
sub
mov
addr16
es
daa
addr16
sub
nop
es
daa
addr16
sub
pusha
daa
addr16
sub
nop
es
daa
addr16
daa
addr16
sub
shlb
add
daa
addr16
daa
addr16
sub
inc
sub
inc
sub
add
add
sub
pusha
sub
pusha
sub
nop
sub
subb
add
sub
and
addr16
mov
xchg
subl
sbb
xchg
adc
xchg
dec
push
xchg
inc
imul
push
imul
mov
push
xchg
mov
or
xchg
jecxz
or
xchg
xor
xchg
fwait
insl
or
add
add
or
xchg
add
xchg
mov
push
xchg
imul
jecxz
or
xchg
xor
xchg
stos
insl
or
xchg
pop
push
xchg
push
imul
and
xchg
xchg
and
cmpsl
pop
xchg
and
mov
xchg
and
ja
xchg
and
popl
xchg
and
add
and
mov
pop
cltd
and
iret
pop
cltd
and
lret
pop
cltd
and
jmp
cltd
and
sti
pop
cltd
and
cmp
cltd
and
add
mov
les
sahf
and
outsb
mov
sub
outsb
in
xchg
sub
xchg
sub
add
add
sub
xchg
sub
xchg
sub
xchg
sub
xchg
sub
xchg
sub
xchg
sub
xchg
sub
xchg
sub
xchg
sub
xchg
sub
xchg
sub
xchg
sub
xchg
sub
xchg
sub
xchg
sub
xchg
sub
xchg
sub
xchg
sub
xchg
sub
xchg
sub
xchg
sub
xchg
sub
in
imul
add
imul
imul
insb
pop
mov
mov
push
or
fwait
imul
pushf
or
addr16
gs
addr16
jne
addr16
jne
addr16
fs
cmove
fs
sahf
cmovae
or
xchg
or
or
xchg
or
xchg
or
add
repz
gs
xchg
or
arpl
add
arpl
xchg
mov
xchg
cmpl
mov
mov
xchg
cmpl
mov
xchg
nop
jle
or
mov
cwtl
xchg
nop
jle
or
mov
cwtl
xchg
nop
jle
or
mov
cwtl
xchg
add
add
xchg
jl
mov
xchg
jg
or
jl
cltd
xchg
jg
or
adcb
mov
xchg
cs
mov
cwtl
push
mov
mov
xchg
cs
mov
xchg
xchg
adc
cmp
sbb
test
add
mov
cmp
lahf
pop
jle
lahf
pop
jle
mov
scas
mov
scas
ds
sbb
aas
insl
sbb
popf
sbb
sbb
outsb
xlat
mov
aas
je
xchg
inc
jne
mov
testb
jne
mov
jne
stos
inc
jne
mov
inc
jne
add
add
jb
mov
jb
cmpl
jb
mov
jb
test
cmp
cltd
cmp
mov
jb
mov
jb
cmpl
jb
mov
jb
test
cmp
cltd
cmp
xchg
cmp
mov
jae
cmpb
call
cli
cmp
ljmp
sbb
cmp
lcall
ljmp
sbb
cmp
mov
cmp
ljmp
sbb
and
mov
addr16
mov
bound
jp
arpl
jns
pusha
or
popa
or
jle
outsl
aaa
jle
pop
cmp
pop
cmp
insl
xor
xor
xor
pop
xor
xor
jp
and
jp
add
add
nop
jns
stos
jns
adc
jns
adc
lcall
mov
jnp
test
js
mov
jnp
adc
and
sbb
and
sbb
xchg
jne
jle
jne
scas
test
scas
test
sahf
je
sbb
je
sbb
and
jae
jg
jb
add
add
jb
scas
test
scas
test
lahf
jne
sbb
and
insl
push
jl
popf
sbb
lods
aas
lea
pushf
aas
mov
sbb
lea
insb
pop
jge
pushf
push
jge
pushf
push
lods
mov
lods
mov
popf
ds
push
lea
xchg
xchg
and
test
xchg
and
add
and
addl
xchg
and
popf
pop
xchg
and
mov
xchg
and
mov
aad
and
outsb
int
and
outsb
fstl
and
outsb
popf
xchg
and
outsb
jge
and
outsb
lea
and
outsb
in
add
add
and
outsb
in
xchg
and
outsb
out
xchg
and
outsb
jecxz
and
outsb
jmp
xchg
and
outsb
or
lcall
int
and
outsb
add
and
das
and
mov
outsb
add
and
outsb
add
and
ljmp
outsb
add
add
out
daa
outsb
add
xor
cmp
incl
xchg
sti
out
jecxz
add
inc
outsb
add
and
imul
popf
xchg
insl
add
xor
add
mov
scas
or
fistpl
mov
popa
int3
mov
xchg
test
xlat
or
xchg
xchg
mov
mov
add
lods
les
daa
sub
adc
mov
fldcw
inc
call
push
jb
aam
repz
cmpsl
popa
sbb
ss
jne
xchg
or
jno
or
aad
imul
sub
pop
arpl
pop
bound
mov
or
push
xor
repnz
mov
mov
add
add
sarl
ds
mov
or
lretw
pop
aas
insl
add
push
push
dec
insl
mov
mov
inc
movsb
mov
dec
data16
dec
fisttpll
js
dec
lahf
xchg
notb
pop
stos
test
aam
xor
xchg
inc
outsb
std
jmp
aaa
fs
in
xor
aaa
inc
loop
mov
frstor
sbb
mov
add
test
test
adc
fwait
push
mov
lret
dec
jle
enter
mov
std
push
clc
aad
and
cmpsb
mov
adc
pop
add
jns
in
loope
mov
ljmp
adc
xchg
pop
pushf
adc
sub
cmpsb
mov
jne
inc
push
in
mov
and
or
insl
shl
imul
add
mov
xor
outsb
jnp
mov
inc
pop
jns
and
ficoml
ror
iret
mov
je
mov
outsb
push
add
lret
jnp
add
rolb
sti
jo
xor
mov
push
fidivrs
insl
inc
sarb
scas
jbe
arpl
fwait
pop
imul
and
gs
push
add
push
add
add
or
or
mov
ja
mov
mov
pop
outsb
sub
sub
aam
inc
sbb
sahf
mov
jp
jo
in
out
dec
push
mov
ficoms
outsl
bound
or
imul
adc
or
add
add
lods
testl
inc
das
or
fildl
scas
imul
popa
push
scas
lahf
outsl
scas
sub
jo
jb
clc
sbb
pop
mov
fiadds
sti
mov
mov
mov
je
shl
push
std
aad
shrb
and
push
cli
add
add
dec
ljmp
inc
pop
pushf
ret
xchg
pop
addr16
sarb
push
mov
ja
pop
lea
mov
notl
sub
into
or
sub
aas
push
xor
sub
shll
out
or
out
inc
andb
add
in
push
lds
scas
imul
add
insb
push
fwait
sbb
fiaddl
sub
shlb
sti
shrl
adc
xchg
je
call
lock
or
insl
sbb
call
xor
adc
jno
mov
out
repz
or
aad
xchg
rcr
or
add
pop
sbb
xchg
daa
in
sub
mov
loope
cmp
xchg
mov
fildl
js
push
ret
movsb
loope
arpl
mov
insl
cmp
sub
push
aam
push
pop
dec
inc
inc
add
lds
mov
fstpl
mov
lods
jp
aad
pusha
imul
xor
sarl
add
add
mov
push
sbb
fisubl
sub
mov
push
push
xor
mov
fisttpl
sar
push
pop
dec
jle
js,pn
gs
stos
xchg
xchg
mov
push
imul
xchg
cmp
dec
xor
sub
shrb
dec
fidivs
pushl
pop
call
xchg
out
pop
push
pop
movb
add
vsubsd
mov
jne
sub
add
mov
adc
mov
lds
pop
lock
ljmp
rcrb
pushf
mov
adc
add
or
rep
xor
sub
xchg
notl
add
pop
pusha
in
adc
mov
add
es
out
iret
and
test
andb
jb
imul
shr
scas
mov
out
stc
sbb
inc
imul
sbb
out
popf
xor
outsb
adc
push
cmpsb
adcb
mov
ret
repnz
mov
mov
je
ss
je
mov
add
push
loop
xchg
sbb
push
xchg
push
ss
add
mov
adc
cli
sub
sbb
dec
shl
pop
push
sub
rorl
in
mov
fwait
lcall
xor
jnp
add
loopne
sbb
mov
int
and
out
xchg
mov
mov
add
add
pop
test
jle
nop
fwait
add
jo
jbe
mov
cmp
and
xor
xchg
cmpb
push
push
and
cmp
sub
js
nop
movsb
push
push
jns
dec
faddl
incl
dec
int3
leave
aaa
mov
dec
test
pop
mov
andb
sub
add
add
xor
aam
fisttps
call
or
jno
push
sub
sbb
and
add
or
push
xchg
scas
mov
jp
and
loop
dec
test
loopne
cld
aam
mov
xchg
lea
divb
mov
insl
cwtl
xor
je
ret
mov
push
shrb
jmp
add
fadd
sahf
fsubr
call
js
gs
inc
insb
mov
sub
mov
sub
cmp
add
add
pop
xacquire
inc
cmpsl
movl
jae
xor
imul
sbb
ficompl
mov
push
int
notb
aaa
and
lahf
jbe
or
pop
mov
add
add
jp
xchg
iret
xchg
mov
test
test
cli
sub
pop
and
push
ja
pand
out
dec
add
add
fs
outsb
icebp
movsb
sub
fsubs
mov
daa
jmp
out
sub
imul
subl
neg
xchg
mov
popa
lods
mov
not
cli
stos
fmull
add
add
movsl
lds
jle
pop
mov
mov
repnz
shl
std
sbb
call
movsl
ljmp
xchg
pop
sbb
aaa
movsb
scas
shl
lcall
fcmove
ljmp
dec
je
push
sbb
sbb
icebp
cvtps2pi
push
cmp
and
add
xor
test
rorl
ret
mov
mov
scas
xchg
and
loope
xchg
and
xchg
shll
inc
dec
or
xchg
push
cmp
mov
sub
divl
ds
into
add
adc
or
mov
push
daa
jg
out
addr16
xchg
in
dec
or
aas
push
adc
add
add
dec
rorb
pop
outsb
out
fists
mov
stc
push
sbb
loop
mov
mov
mov
add
jns
outsl
jae
loop
mov
stc
dec
dec
ja
ret
jp
xchg
push
rorb
inc
shrl
imull
scas
cmp
shlb
jle
add
ja
add
add
xor
xor
iret
nop
ljmp
xchg
in
pop
nop
testl
push
lcall
xchg
pop
push
ficoml
sbb
inc
lret
fs
enter
mov
or
cmp
mov
in
es
inc
enter
jb
sub
mov
xor
loope
add
push
xor
xchg
dec
xorb
lock
das
jb
sub
cmpsl
inc
push
dec
clc
fmull
dec
or
popf
dec
mov
adc
ljmp
dec
pop
rorb
cli
dec
outsb
mov
ljmp
sahf
addr16
inc
xchg
jb
sub
stc
dec
sbbb
dec
and
add
pop
cmp
mov
movsl
dec
iret
and
lock
aad
or
inc
stos
jne
inc
jl
inc
inc
fstps
rolb
in
popl
xor
lods
push
stos
push
mov
in
push
and
sbb
add
sbb
mov
sbb
sbb
insl
out
test
and
jno
bound
dec
mov
adc
jge
cs
jne
push
fcmovb
test
lahf
pop
aad
mov
adc
rclb
push
cwtl
xchg
push
cmpsl
fldt
pushf
sbb
ficompl
ret
insl
out
shll
add
in
gs
add
popa
int3
or
pusha
add
and
dec
rolb
dec
mov
push
decl
dec
mov
add
add
dec
xchg
add
pop
fucompp
test
roll
loopne
shl
flds
flds
inc
ror
mov
xlat
pop
and
dec
aam
sbb
ret
aaa
imul
test
cld
gs
xor
inc
xor
inc
cmp
push
test
cmp
cmp
cmp
std
out
pop
pop
sub
add
add
push
imul
test
push
bound
mov
pop
repz
mov
xchg
xor
sub
mov
mov
repnz
and
xchg
jno
hlt
xchg
data16
nop
and
inc
lea
inc
scas
push
outsl
test
cmp
and
pop
pushf
jg
sub
jle
mov
add
add
jge
pop
inc
jge
sahf
xchg
jbe
adc
mov
push
pop
je
inc
jns
js
xchg
sbb
mov
push
pop
js
dec
pop
outsb
jecxz
xorb
hlt
scas
jbe
mov
mov
popf
cmp
mov
xchg
mov
jmp
call
mov
repz
add
mov
test
push
sbb
stos
es
cwtl
lods
dec
adc
scas
jo
adc
push
inc
lock
pop
xlat
mov
sub
cmpsb
cld
stos
cmpsl
pop
mov
stos
mov
clc
xor
mov
xchg
enter
xchg
jecxz
xchg
pop
xchg
lock
cmp
add
rcl
add
setp
adc
into
push
xchg
cltd
mov
fistpl
or
push
pop
popf
sahf
pop
jbe
mov
out
mov
lret
sti
mov
mov
jge
push
dec
subl
nop
jp
xchg
outsb
mov
jnp
std
sbbb
xchg
adc
adc
bound
adc
add
xlat
add
enter
mov
mov
inc
xor
jl
imul
shrl
stc
outsb
divb
lock
jno
dec
mov
neg
cs
jecxz
hlt
sbb
add
xor
flds
and
sbb
and
mov
rorb
add
or
ret
push
mov
repz
rolb
ret
cmp
shr
add
sub
dec
mov
rcll
adc
mov
scas
mov
dec
aaa
fildl
dec
ds
inc
mov
sbb
mov
xchg
push
iret
pusha
dec
in
push
iret
mov
xchg
pop
mov
pop
dec
scas
aad
divl
mov
cmpsb
jnp
scas
sub
pop
insl
pop
and
push
jmp
test
enter
add
outsb
imulb
sbb
je
add
push
add
scas
jbe
lods
cmp
cmpsb
fcoml
out
inc
jmp
or
ljmp
cmpsl
or
repnz
stos
add
add
addb
lds
sahf
and
inc
xor
mov
in
adc
js
nop
insb
in
cmc
aad
add
mov
xor
fimull
cmp
and
mov
push
sbb
leave
lods
lcall
daa
add
jb
sbb
iret
lea
add
test
adc
movsb
test
xor
mov
sub
jg
loop
fld
lock
jnp
ret
aad
test
insl
cmp
jg
icebp
sbb
sbb
push
fbstp
jo
sbb
fstl
mov
call
mov
mov
or
mov
out
in
xchg
sub
filds
add
pop
arpl
jno
insl
push
outsl
push
mulb
int
sbb
daa
mov
dec
inc
and
cld
xchg
mov
dec
js
mov
xchg
dec
cmc
xor
fsubrs
xchg
sahf
loop
jge
inc
and
cmpsl
cmp
dec
dec
push
ljmp
add
cmp
cmpsb
xchg
pop
inc
xor
mov
pop
fisttpll
and
add
add
fadd
movsb
inc
jmp
jg
jb
sbb
adc
in
jae
arpl
dec
sahf
call
push
repnz
pop
out
mov
jnp
push
and
jge
jnp
lods
pop
sahf
dec
sbb
scas
movsb
insl
add
test
dec
push
sahf
out
js
xor
add
sbb
sub
add
add
sub
insl
int3
mov
cmpsb
push
mov
outsb
add
in
js
inc
jo
push
popl
jae
cwtl
in
ja
imul
or
dec
mov
jno
lret
inc
in
lods
sub
jg
add
push
dec
and
lcall
mov
and
push
fwait
arpl
mov
enter
sbb
shlb
mov
mov
and
add
mov
out
mov
pop
or
push
dec
loope
pmuludq
pop
and
sbb
ret
mov
jne
sbb
rorb
mov
shrl
inc
fcmovnb
sub
cmp
bswap
test
test
fbld
adc
roll
jbe
push
lret
repz
push
pop
ret
cmp
add
add
and
stos
lahf
lret
sub
pusha
scas
sbb
dec
jnp
inc
and
mov
out
arpl
jge
dec
and
aam
dec
adcb
repz
cmp
in
sbb
pop
and
xorl
aam
mov
outsb
ljmp
add
mov
sti
pop
pop
jno
in
pop
mov
cmpsl
sub
dec
cmp
movsb
mov
xor
daa
sub
call
nop
ror
psubusb
mov
stos
nop
pop
inc
or
inc
iret
movsl
cmp
jae
adc
jp
and
sub
inc
mov
xor
shll
stos
cmpsl
loopne
jnp
inc
pop
add
add
imul
nop
ja
lcall
dec
mov
sbb
jecxz
sub
int
sub
outsl
out
or
es
add
pop
xchg
and
test
push
mov
ja
bound
add
and
cltd
mov
inc
outsb
lea
add
call
pop
out
lret
jmp
rorb
dec
imul
adc
pushf
ds
hlt
and
pop
sbb
adc
or
test
subl
adc
jo
cmp
fldenv
dec
xchg
or
pop
lcall
sub
in
popl
add
mov
sbb
cwtl
cmpl
inc
cwtl
mov
add
aad
insl
iret
cmc
push
imul
inc
jge
add
repnz
arpl
adc
push
pop
xchg
mov
outsb
ds
aas
test
movhlps
in
mov
iret
test
popf
addr16
or
pop
lcall
mov
outsb
xchg
add
add
dec
and
and
cmp
lods
das
xchg
outsb
mov
add
mov
jle
jle
ljmp
sti
xor
repz
xor
int
subl
aam
lods
sbb
inc
or
jbe
cmp
in
jo
and
inc
pop
xchg
push
inc
push
add
gs
dec
xor
xor
push
lcall
add
add
daa
imul
sbb
mov
cmp
inc
pop
aaa
mov
and
fcomps
mov
or
js
push
fimuls
cmp
fisubrs
and
lahf
ss
lcall
xor
mov
sub
push
add
mov
jo
das
das
fisubrl
push
jmp
and
push
ret
sti
push
jae
add
add
aam
add
xor
push
mov
dec
or
stos
shrb
and
sub
mov
jno
mov
and
mov
inc
dec
mov
mov
popa
push
mov
cs
pop
repnz
and
xchg
lds
xchg
sub
push
js
sti
shr
add
or
sbb
mov
jl
xchg
cs
iret
lds
bound
pushf
jb
out
ret
dec
enter
cmp
popf
mov
les
fidivl
insl
mov
movsl
hlt
jno
pop
jnp
sub
je
ds
jmp
xor
cmp
imul
xchg
cli
fdivs
add
mov
int
push
mov
lods
rolb
or
fxch
cmp
aad
fnstenv
push
dec
negl
inc
fsubp
pop
jne
jmp
and
add
scas
dec
loopne
cmp
jge
dec
fisttpll
lcall
xor
push
sub
frstor
js
or
add
push
mov
aam
xor
in
ret
sub
rcrl
fwait
add
arpl
xor
jge
xchg
mov
imul
or
bound
mov
movsl
shll
dec
adc
xor
das
lock
and
pop
in
fimuls
fwait
pop
fldpi
dec
test
add
lret
out
data16
mov
pop
xlat
xchg
cmp
jecxz
xor
insl
cmpsl
cmp
inc
inc
mulb
outsl
imul
xchg
ds
dec
push
cmp
es
and
and
out
je
testl
adc
arpl
sbb
xlat
and
loop
and
dec
cmp
add
add
push
inc
mov
pop
fdivrs
inc
aam
pop
sub
push
shr
jbe
stc
jge
push
in
pop
pop
aam
hlt
push
add
or
test
imul
push
sbb
dec
daa
pop
lods
outsb
nop
insl
or
jb
cli
cltd
sahf
scas
pop
scas
xchg
lahf
iret
aaa
adcl
in
xchg
and
das
incl
add
push
add
lods
or
push
fwait
jns
cmp
sbb
xchg
test
pushf
push
stos
daa
ja
jge
mov
dec
movsl
xchg
pusha
fisubs
jae
and
inc
loopne
jge
mov
sahf
sub
jle
adc
mov
sarl
push
cmp
pop
xchg
cmp
stos
clc
add
insl
stc
pop
xor
sbb
xchg
push
pusha
movsb
sahf
popa
or
pop
push
call
pusha
lcall
jp
adc
daa
and
rcrb
gs
mov
in
mov
and
xor
scas
jae
lock
cwtl
push
mov
insl
mov
add
lahf
dec
aaa
jmp
sbb
std
jge
imul
sbb
jne
push
or
add
xor
pushf
repz
pop
scas
mov
add
movsb
push
sbb
lods
jge
mov
pusha
xor
pop
sarb
into
iret
clc
jge
fyl2x
dec
inc
cmpsl
pop
sti
fsubrl
mov
bound
push
dec
jp
shrb
cwtl
pop
sbb
xchg
lea
faddl
fcoml
rcrl
pop
mov
loopne
roll
add
lahf
rcl
dec
fs
or
test
pop
inc
lahf
or
cmp
int
or
sub
out
push
imul
cwtl
adc
or
dec
incb
mov
repnz
arpl
jmp
nop
and
mov
inc
jno
mov
xchg
outsl
jp
add
and
lods
dec
xor
pop
aad
jnp
repnz
or
inc
stc
pop
cmp
jg
push
push
ds
aad
jae
jecxz
mov
rcr
push
sbb
lret
cmp
pushf
mov
jo
push
lea
ja
sti
adc
sbb
xchg
adc
push
push
outsb
or
xchg
aad
add
add
rcll
push
adc
fs
outsl
cmpsl
fnsave
enter
cli
pop
add
sub
jle
pop
sub
lods
jns
scas
xchg
scas
in
jp
push
sub
subb
mov
mov
cmpsl
ljmp
cmp
pop
sub
xchg
dec
and
mov
adc
jns
cwtl
add
add
es
push
insl
push
dec
mov
or
in
sarl
cmp
leave
nop
dec
mov
shr
call
push
mov
mov
push
pop
jmp
daa
xor
imul
inc
sub
pop
imul
rcrl
xchg
or
xchg
jns
add
add
mov
cmpsb
stos
push
sub
fisttps
std
enter
stc
dec
cld
xor
movsl
cmp
mov
out
cmp
push
andl
cmpsl
push
mov
les
jb
aaa
jp
dec
jne,pn
adc
xchg
mov
rcl
mov
loop
mov
mov
pop
fadds
int3
shr
daa
icebp
or
pop
add
add
add
test
cmp
xchg
or
mov
xor
and
repz
fimull
in
adc
clc
mov
cld
and
xor
lret
dec
and
inc
dec
fisubs
sbb
sbb
stos
push
jp
or
jnp
cmp
xchg
mov
push
dec
or
dec
and
add
push
mov
pop
xor
mov
nop
mov
xchg
enter
popa
lahf
addl
dec
test
sub
mov
lcall
xor
fsts
shr
jb
xchg
or
ljmp
xlat
xchg
adc
mov
lock
jns
fisubl
mov
cltd
add
add
sbb
repnz
sbb
xchg
pop
jle
push
in
xchg
and
pop
out
sbb
out
shll
mov
arpl
loopne
por
jbe
mov
cli
icebp
ljmp
jge
pusha
pop
mov
inc
push
hlt
sub
sti
or
mov
add
sbb
add
flds
sub
xchg
xchg
lahf
cmpsl
int
cmpsb
or
icebp
mov
xchg
idiv
outsb
roll
outsl
adc
aaa
adc
fcmovu
jle
sbb
in
ljmp
inc
addr16
mov
pop
movsb
ljmp
pop
imul
adc
test
test
add
xchg
or
pop
shll
or
loope
and
mov
push
cmc
xor
iret
pop
dec
dec
dec
pop
or
popf
je
mov
mov
mov
push
and
mov
jmp
or
xorb
jb
sub
mov
mov
inc
jecxz
and
pop
es
add
add
jns
loope
jae
fdivrs
std
ljmp
dec
cmc
cltd
cld
xchg
cmp
xchg
mov
mov
inc
test
mov
iret
iret
adc
es
cld
push
adc
cld
push
ret
rolb
out
xchg
pop
sbb
pop
sbb
out
cmp
out
push
mulb
popaw
jns
and
add
xor
loop
lahf
sub
dec
add
outsb
addl
ficoml
xor
xchg
sub
sub
cld
sbb
mov
shrl
repz
and
or
lods
out
sti
sbb
lods
dec
inc
scas
bound
cmp
lcall
addr16
jecxz
aad
add
add
jecxz
cmpsl
repz
mov
mov
call
inc
sbb
insl
xor
adc
add
je
test
pop
mov
clc
mov
fisttpll
imul
sbb
or
sbb
arpl
add
cmp
ret
dec
or
leave
out
push
addb
gs
loopne
mov
pop
mov
add
push
aas
xor
xchg
xchg
mov
lcall
popa
sub
pop
xchg
test
jno
daa
xchg
in
jnp
jecxz
and
cmp
dec
sahf
inc
cmpsl
xchg
adcl
pop
jp
sti
dec
test
mov
and
loope
out
nop
mov
out
push
icebp
repnz
jmp
add
add
ret
jne
out
mov
stc
fmull
mov
pop
sbb
mov
movsl
pop
lock
push
mov
cmpsb
or
nop
jno
les
inc
or
push
loop
pop
cmp
or
stos
ds
sarl
push
xchg
adc
fstpt
cltd
fld
jns
in
movl
ss
add
add
out
sbb
fnstenv
xlat
sysenter
cwtl
outsb
adc
rcrl
ret
in
push
sbb
fstps
add
jno
iret
movsb
mov
lea
out
push
orl
sbb
sbb
sbb
loop
js
adc
or
mov
das
mov
iret
sbb
adc
inc
mov
mov
add
cli
lods
add
cwtl
mov
mov
mov
pusha
movsl
xchg
arpl
shll
hlt
je
xchg
xor
mov
push
paddusw
dec
dec
ss
cmp
addr16
dec
and
dec
inc
dec
xchg
cli
pop
inc
dec
and
lea
push
stos
mov
loop
mov
mov
mov
jnp
add
pop
mov
jb
jb
pop
jmp
xchg
push
pop
pop
xor
aam
dec
insb
aad
sub
adc
add
shl
xor
or
xchg
or
pop
jmp
pop
out
popa
adc
lock
add
push
inc
mov
fsubrs
out
inc
jmp
pop
and
add
add
and
add
dec
cmp
sbb
daa
push
jle
das
dec
cmp
test
adc
notb
int3
adc
jg
push
inc
fldt
add
jnp
jb
adc
movl
aam
and
sub
pop
lods
pop
stos
mov
fldl
arpl
add
add
inc
ja
xor
shll
xchg
sbb
in
out
push
in
xchg
dec
pop
push
pop
sub
repnz
jb
mov
fmull
sbb
cld
notl
dec
xor
ljmp
cmp
jge
mov
shl
adc
shlb
dec
adc
sahf
sahf
bound
test
add
sarl
test
sbb
out
iret
cmp
adc
sbb
std
xchg
and
xchg
push
mov
pop
shlb
dec
out
sub
push
xchg
inc
mov
mov
jmp
test
pushl
rcrl
push
inc
icebp
mov
mov
pop
rcrb
cltd
xchg
mov
outsb
int3
xchg
fs
adc
test
test
add
add
incb
scas
in
btr
adc
repz
add
xor
dec
test
mov
xchg
je
outsl
jae
push
rcr
jle
cmp
outsb
and
out
or
sbbb
cmp
popf
and
repz
test
andl
andb
popf
out
sbb
jns
aad
fsubl
aam
or
pop
movsl
pop
into
fadds
add
in
cwtl
pushf
mov
push
adc
test
pop
iret
jecxz
cmp
inc
test
test
ja
push
adcl
ret
out
cltd
sahf
into
jo
push
je
inc
hlt
mov
into
bound
mov
mov
lret
jbe
popf
sbb
push
scas
sub
add
add
lret
out
rcrb
xchg
mov
ret
and
mov
xchg
adc
loop
inc
out
sahf
mov
mov
cli
inc
adc
sbb
dec
jb
into
adc
push
insl
neg
stos
movsb
sbb
int
movsl
test
push
cmpsb
lods
popa
xor
pop
orb
cmp
sub
cmc
add
add
sbb
xchg
cmp
imul
mov
les
xlat
in
popa
and
inc
out
fwait
scas
and
in
fwait
mov
outsb
cmp
ja
sbbl
cwtl
lock
jl
mov
lahf
testb
outsl
pop
adc
sbb
inc
mov
adc
mov
mov
lods
add
add
shl
std
xchg
xor
dec
negl
push
lods
addr16
pop
add
mov
adc
imul
pextrw
jnp
sub
dec
into
sub
adc
jl
popf
loopne
push
js
dec
pushf
int3
ss
outsb
aam
daa
or
fxch
push
popa
mov
mov
daa
mov
ds
popf
negl
add
sub
aad
icebp
xor
sbb
mov
out
sarb
sub
cmpsb
dec
push
cmc
mov
cmpsb
pop
push
jge
add
xchg
cld
inc
sbb
push
adc
dec
mov
sub
orl
dec
xlat
pushl
xor
lods
frstor
subl
sahf
scas
aaa
mov
cmp
out
add
in
push
shll
mov
add
cmpsb
jecxz
pop
pop
stos
cmp
xchg
xor
loope
sbbl
xor
jnp
mov
dec
mov
inc
not
dec
cmpsb
pop
out
hlt
ds
mov
test
dec
xchg
inc
sub
inc
mov
ret
xor
seto
pop
push
add
and
inc
and
add
add
and
and
sub
jg
xchg
pop
insl
adc
imul
fwait
insl
aas
xchg
or
xchg
sub
xchg
lret
insb
cmpsl
xchg
or
xchg
dec
insb
add
dec
insl
add
jl
adc
jl
adc
jl
adc
jl
adc
pop
insl
adc
xchg
pop
insl
push
xchg
pop
insl
push
xchg
jnp
pop
xchg
jnp
pop
xchg
js
adc
add
xchg
pop
insl
adc
pop
insl
iret
xchg
add
xchg
dec
insl
push
xchg
dec
insl
add
inc
insl
or
and
inc
add
push
add
and
add
and
add
pop
xchg
xchg
sub
daa
xchg
adc
xchg
xchg
and
mov
xchg
mov
test
add
and
cltd
pop
test
mov
mov
and
mov
add
xchg
pop
mov
lcall
and
and
mov
outsb
cmp
aaa
pop
jb
push
push
or
or
stc
ret
dec
cs
mov
sbb
icebp
fadds
cli
out
add
and
add
insl
mov
xchg
and
call
in
test
call
stc
xchg
sub
mov
xchg
and
ds
adc
or
popf
inc
aam
loop
sbb
sbb
xchg
and
out
insl
lcall
insb
movl
je
pop
add
sub
lcall
outsb
add
add
mull
outsb
add
daa
outsb
add
daa
outsb
add
xchg
cs
nop
cs
xchg
cs
daa
gs
daa
outsb
add
shlb
ljmp
js
inc
inc
mov
test
push
sahf
out
popf
cmp
inc
mov
pop
iret
or
dec
pushf
push
sub
pop
mov
push
aad
push
lahf
jne
jno
lahf
insl
mov
mov
ds
add
add
sub
in
fucompp
and
rcr
jmp
aam
pop
dec
mov
mov
sarb
test
sub
push
sub
rolb
or
cmpsl
cmp
mov
push
xchg
or
rorl
hlt
xor
daa
xor
ret
xlat
dec
rcll
or
test
cwtl
push
cmp
or
and
mov
cmp
cmp
or
adc
mov
cmp
and
cmpsb
sub
cmp
cmp
or
cmp
or
cmp
or
cmp
xchg
nop
sub
cmc
outsb
or
jb
fsubl
add
mov
jecxz
repnz
cmp
or
bound
pop
cmp
out
pop
cmp
fistpll
clc
push
ja
jmp
outsb
aaa
sbb
inc
jle
jp
inc
mov
icebp
push
dec
jl
push
push
jl
push
imul
sbb
pop
js
xchg
arpl
aaa
jecxz
cld
pop
cli
les
sti
xchg
sbb
lods
and
add
add
push
mov
adc
mov
fcmove
sbb
rclb
add
std
xchg
add
inc
push
mov
out
inc
adc
sub
popa
push
xor
jno
or
faddl
pop
test
mov
roll
jmp
sbb
sbb
rcrb
push
add
jecxz
adc
ret
or
repnz
add
adc
sub
incl
or
fcoml
xchg
sub
rcll
inc
cmp
pop
push
cmp
pop
and
add
xor
roll
rolb
ret
adc
je
lods
mov
std
clc
jg
daa
movaps
cmp
push
mov
xchg
and
mov
inc
pop
or
pop
dec
add
add
pop
inc
ja
cli
cltd
push
ja
mov
shl
mov
paddusb
or
pop
sbb
pop
sub
pop
cmp
add
inc
dec
mov
push
leave
shlb
cmc
loop
xchg
ret
or
inc
shlb
push
hlt
pop
mov
xchg
pop
fadds
clc
pop
clc
rol
in
xor
cmp
pushf
leave
test
cmp
sbb
mov
sub
ss
sbb
add
sub
mov
icebp
pop
insl
cmp
lock
push
xchg
push
sub
mov
mov
pop
lahf
adc
push
fwait
xor
adc
pop
adc
bound
arpl
in
and
pop
call
cmp
dec
jg
or
sahf
enter
add
add
sub
loop
and
stos
adc
xor
adc
mov
cmp
jns,pn
inc
xchg
sub
mov
xor
xchg
push
mov
test
pop
xor
pop
pop
xor
xchg
scas
or
sbb
int
add
pop
gs
xor
fisubl
fstps
add
add
mov
pop
imul
xchg
decb
or
out
push
loopne
int
and
popf
pop
push
imul
xor
or
inc
xor
lods
es
mov
jbe
push
jmp
std
jns
out
push
xor
ret
or
mov
xor
add
dec
adc
mov
inc
and
sub
mov
adc
lahf
and
or
add
mov
adc
jnp
loop
dec
pslld
xlat
and
test
or
in
dec
pop
sarl
mov
jo
lods
inc
fimull
out
punpckhwd
sbb
push
sub
push
push
cmp
js
dec
leave
inc
mov
arpl
add
test
xor
and
aaa
push
or
cli
sbb
inc
mov
jle
inc
lds
inc
pop
dec
ljmp
ret
stos
inc
fs
mov
rorl
fdivrl
cltd
sub
rcrl
sub
sbb
loope
adc
push
add
fwait
and
stos
mov
jne
cmp
add
add
subl
ja
leave
hlt
movsl
mov
daa
xbegin
scas
addr16
push
add
lds
push
xor
cmp
addl
lock
pop
push
call
stos
fwait
push
fwait
mov
jnp,pn
iret
fsubs
je
or
clc
test
int
mov
mov
xchg
jecxz
xchg
fwait
add
add
pop
outsb
and
stos
sub
pop
fsubr
test
mov
shll
push
jb
mov
cmp
xlat
outsl
outsl
cmc
leave
inc
and
xor
fsubrl
mov
push
dec
out
mov
and
sets
xchg
mov
jl
cld
mov
lea
add
add
mov
pop
adc
inc
mov
cmp
fisttpl
imul
mov
sbb
sub
xor
jecxz
adc
inc
mov
cmp
lock
repnz
stc
push
dec
ret
xor
jae
mov
add
add
stos
std
and
out
inc
call
sbb
cld
mov
and
mov
out
mov
xor
scas
out
fwait
rclb
xchg
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
and
jns
insl
cs
jo,pt
xchg
dec
pop
add
add
push
pop
xor
inc
inc
add
cmp
add
cmp
gs
mov
mov
in
cwtl
mov
ror
jne
rclb
jge
cmp
pop
rcr
mov
loopne
popa
mov
fdivs
jne
adc
out
jg
jae
jo
xchg
xchg
and
xchg
xchg
and
xchg
xchg
and
add
and
xchg
xchg
and
xchg
xchg
and
xchg
xchg
and
xchg
xchg
and
xchg
xchg
and
xchg
xchg
and
xchg
xchg
and
xchg
xchg
and
xchg
xchg
and
xchg
xchg
and
outsb
in
xchg
and
outsb
in
add
add
and
xchg
mov
xchg
subb
jp
inc
xchg
jb
inc
xchg
push
inc
xchg
bound
inc
xchg
push
cmp
inc
xchg
inc
sub
inc
xchg
in
xchg
daa
insl
loope
sub
jp
xchg
sbb
inc
xchg
adc
fcomps
xchg
add
inc
xchg
cli
mov
inc
xchg
ljmp
xchg
fiaddl
add
mov
xor
pop
xor
add
rclb
sti
inc
rclb
sti
xor
nop
sti
adc
nop
sti
ljmp
outsb
add
sub
out
sub
mov
sub
scas
sub
scas
sub
mov
sub
scas
sub
scas
sub
jg
outsb
add
sub
outsl
sub
outsl
sub
jg
outsb
add
add
jg
outsb
add
sub
outsl
sub
aas
sub
aas
sub
das
sub
das
sub
aas
sub
xchg
dec
insl
add
dec
insl
add
dec
insl
add
dec
insl
add
dec
insl
add
dec
insl
add
dec
insl
add
dec
insl
add
dec
insl
add
dec
insl
add
dec
insl
add
dec
insl
add
dec
insl
add
dec
insl
add
dec
insl
add
dec
insl
add
dec
insb
add
add
add
dec
insb
add
xchg
dec
insb
add
xchg
dec
insb
add
xchg
dec
insb
add
xchg
dec
insb
add
xchg
dec
insb
add
xchg
and
xchg
xchg
and
push
xchg
and
push
xchg
and
push
xchg
and
push
xchg
and
push
xchg
and
push
xchg
and
push
xchg
and
push
xchg
and
xchg
add
add
and
xchg
xchg
and
xchg
xchg
and
xchg
xchg
and
xchg
xchg
and
xchg
xchg
and
xchg
xchg
and
xchg
xchg
and
xchg
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
add
add
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
popf
jmp
outsb
push
lcall
or
add
lcall
push
lcall
mov
adc
outsb
cmc
xchg
xor
outsl
add
lcall
mov
sub
outsl
add
xchg
sub
add
iret
dec
push
add
and
push
add
and
add
dec
push
add
and
push
add
and
push
add
and
push
add
and
add
dec
push
add
sub
sub
add
and
add
dec
push
add
and
add
dec
push
add
and
add
dec
push
add
and
push
add
and
add
dec
push
add
add
daa
and
add
dec
push
add
and
add
dec
push
add
pop
insl
add
imul
xchg
test
xchg
aad
add
lods
push
xchg
out
xchg
xchg
lahf
push
xchg
out
cmp
cli
xchg
xchg
push
insl
or
movb
xchg
mov
push
xchg
rolb
or
ljmp
add
add
sahf
push
xchg
testb
xchg
cli
xchg
xchg
push
push
xchg
in
xchg
xchg
fisubrs
xchg
clc
xchg
xchg
and
xchg
mov
and
insl
add
and
shl
jno
sahf
pop
xchg
lahf
pop
test
cmp
movsb
and
jg
cmpsl
and
add
and
push
add
and
das
jecxz
and
repz
and
aas
jecxz
and
aas
jecxz
and
lahf
loop
and
outsb
or
xchg
adc
js
insl
mov
cmp
insl
mov
cmp
insl
mov
sbb
cmp
insl
mov
add
add
insl
xchg
outsb
movsl
idiv
insl
cmp
std
insl
sub
std
insl
jmp
idiv
insl
xchg
xchg
daa
outsb
jmp
xchg
xor
mov
insl
mov
mov
insl
mov
sub
mov
insl
push
xchg
pop
outsb
lods
ja
insl
add
sub
dec
inc
push
add
and
push
inc
push
add
and
add
add
inc
push
add
and
mov
and
mov
push
add
sub
xlat
inc
push
add
sub
adc
add
and
sub
add
sub
addl
jg
addr16
inc
push
add
sub
pop
inc
push
add
sub
add
add
sub
sbb
add
sub
inc
push
add
sub
aas
inc
push
add
add
xchg
daa
push
xchg
mov
xchg
insb
insl
sbb
mov
mov
xchg
loopne
push
xchg
inc
mov
xchg
popa
insl
cmp
mov
mov
xchg
imul
xchg
ret
imul
xchg
xlat
imul
xchg
sbb
cmp
stos
cmp
xchg
cmp
add
xchg
sahf
cmp
cmpsb
cmp
lret
xchg
and
xchg
xchg
xor
xchg
and
repz
and
stos
xchg
and
jecxz
and
incl
mov
clc
pop
lret
and
aas
add
and
mov
add
add
adc
cltd
and
fiaddl
mov
and
outsl
xchg
movl
push
and
xlat
xchg
outsb
hlt
xchg
jecxz
mov
out
push
adc
insl
rclb
in
adc
in
mov
in
imul
insl
sbb
in
push
add
add
in
mov
adc
insl
sbb
in
sub
in
mov
and
adc
das
outsb
mov
lcall
fsts
in
add
and
cs
and
cs
and
jnp
cs
and
aas
mov
popa
add
add
aaa
mov
imul
cs
and
jmp
jo
mov
cs
and
out
cs
and
cs
and
repz
insl
add
mov
inc
add
mov
jns
ljmp
je
xchg
scas
cs
jmp
or
gs
adc
add
xchg
les
sub
inc
xchg
fsubrs
pop
out
xchg
icebp
insb
push
xchg
mov
insb
add
lds
mov
inc
xchg
insl
or
cs
adc
xchg
daa
insl
or
in
or
xor
xchg
inc
jmp
xchg
sbb
sbb
mov
xor
xchg
fsubrs
add
add
and
dec
adcb
pop
lcall
add
and
daa
adcb
add
and
inc
adc
sub
xchg
and
cmp
adc
faddl
mov
and
nop
and
roll
xchg
and
push
add
add
and
xchg
lcall
pop
mov
outsb
xchg
sub
sbb
insl
aaa
xchg
sub
sbb
insl
int
sub
and
out
je
sub
sbb
insl
icebp
xchg
sub
sbb
insl
dec
xchg
sub
sbb
insl
lods
xchg
movd
sbb
insl
jle
adc
sbb
insl
ss
adc
sbb
insl
pop
add
add
in
stos
xchg
sub
sbb
insl
lds
in
jo
sub
adc
sub
sbb
adc
insl
add
and
fwait
test
pusha
add
test
jg
xchg
pusha
add
test
jle
mov
and
das
test
jnp
add
add
mov
jp
add
jns
mov
sub
mov
jbe
scas
mov
ja
arpl
dec
add
mov
dec
add
mov
jne
imul
pop
xchg
scas
loope
xchg
fldcw
xchg
loope
xchg
mov
xchg
data16
xchg
cltd
insl
sub
add
xchg
jb
add
cltd
insl
pop
xchg
or
inc
xchg
jo
adc
add
xchg
dec
jecxz
xchg
pop
insl
sbb
subb
scas
loop
xchg
lock
arpl
dec
insl
add
icebp
insb
push
xchg
xchg
inc
xchg
stc
insb
cmp
xchg
in
insb
sub
and
mov
in
xchg
and
add
mov
hlt
add
and
testl
push
and
lahf
adcl
add
mov
add
and
fildl
popf
and
mov
adc
loope
cltd
and
pop
add
add
and
xor
and
push
out
mov
adc
insl
adc
out
loopne
adc
mov
xchg
push
outsb
fstl
out
arpl
out
jl
sbb
leave
adc
insl
and
out
je
and
adc
insl
cmp
in
sub
and
adc
insl
mov
add
add
in
and
adc
insl
repnz
pop
outsb
push
adc
insl
pop
xchg
outsb
push
adc
insl
add
es
add
stos
cs
outsb
add
outsb
add
and
outsb
add
and
outsb
add
dec
movsb
adc
movsb
adc
jecxz
ds
movsb
adc
cmpsl
adc
cltd
xor
mov
add
add
pop
inc
mov
mov
imul
xchg
sbb
outsl
insb
clc
addr16
mov
loop
xchg
pop
or
fsubs
jno
fstl
mov
xor
jecxz
or
mov
inc
cli
outsl
dec
repnz
xchg
les
or
lock
jne
jno
jo
scas
fwait
insl
aad
add
inc
jge
inc
dec
sub
cwtl
rol
sub
cltd
lods
inc
mov
adc
sub
adc
lods
loopne
mov
mov
stos
push
insl
xchg
push
les
cld
push
out
pop
jge
lcall
adcb
adc
mov
jp
xchg
dec
sub
cmp
pop
add
add
lods
out
lods
mov
ud1
cmp
lods
push
xchg
sbb
mov
loop
jl
into
inc
jno
mov
call
insb
xchg
xchg
and
pop
push
xchg
and
repz
and
sub
xchg
and
bound
xchg
and
pop
push
xchg
and
outsb
adc
add
xchg
and
outsb
or
xchg
and
outsb
or
and
outsb
leave
xchg
and
outsb
in
xchg
and
outsb
out
xchg
and
outsb
jmp
xchg
and
outsb
in
xchg
and
outsb
push
lcall
inc
lcall
push
lcall
inc
lcall
test
xchg
dec
test
insl
call
fs
add
add
add
sub
push
xor
add
add
add
sub
ss
add
sub
and
xor
add
add
add
sub
add
xchg
sti
int
das
add
pop
outsl
add
and
loope
outsb
add
and
lock
insb
add
and
iret
pop
outsl
add
add
and
mov
and
int
outsl
add
and
mov
sub
mov
outsl
add
sub
xchg
sub
xchg
cmpsl
insl
inc
xchg
dec
dec
add
xchg
dec
dec
add
xchg
es
add
xchg
xor
fwait
inc
xchg
dec
lcall
push
lcall
and
inc
add
add
pusha
lcall
pusha
lcall
cmpsl
insb
inc
xchg
pop
dec
add
xchg
pop
dec
add
xchg
pusha
dec
add
xchg
pop
dec
add
xchg
and
and
icebp
jno
and
icebp
popa
sub
lock
and
and
and
and
add
and
cmp
aam
lods
and
and
cld
add
xchg
and
jns
xchg
and
push
add
xchg
and
mov
xchg
and
aad
xchg
and
outsb
mov
xchg
out
sbb
out
sbb
add
xchg
out
sti
sub
cli
inc
sub
in
sub
aam
sub
and
xchg
in
mov
sub
and
in
adc
sub
add
sub
repnz
xchg
iret
in
sub
xchg
out
sub
and
inc
xchg
out
add
add
insl
add
inc
and
outsl
add
and
outsl
add
and
outsl
add
and
outsl
add
and
outsl
add
and
outsl
add
and
outsb
add
and
outsb
add
and
outsl
add
and
outsl
add
sub
add
pop
outsl
add
sub
add
pop
outsl
add
add
add
das
add
pop
outsl
add
sub
add
pop
outsl
add
sub
add
in
dec
add
xchg
push
dec
add
xchg
or
jecxz
inc
xchg
push
add
xchg
imul
xchg
mov
xchg
xchg
xchg
inc
xchg
xchg
xchg
mov
dec
add
xchg
jne
add
xchg
test
xchg
rcll
xchg
xchg
dec
add
xchg
loop
add
xchg
icebp
dec
add
xchg
add
xchg
nop
inc
xchg
cmovl
xchg
and
cmp
push
and
sub
push
and
cmp
xlat
and
sub
xlat
and
cld
cli
xlat
and
in
cli
xlat
and
cld
cli
xlat
and
add
and
cmp
xlat
and
sub
xlat
and
cmp
push
and
sub
push
and
cld
stc
push
and
in
stc
push
and
cld
stc
push
and
outsb
xchg
in
sbb
mov
insl
sbb
outsl
inc
mov
outsl
push
xchg
in
cmpsb
and
inc
add
add
and
xchg
jae
insl
fdivs
in
mov
push
in
mov
inc
in
movsl
inc
daa
xchg
in
xchg
and
xchg
in
xchg
xchg
syscall
in
jbe
daa
xchg
syscall
in
popa
add
in
push
in
xchg
iret
in
insl
add
add
and
das
add
add
adc
das
add
add
das
movd
sub
add
movd
sub
add
movd
sub
add
movd
sub
add
movd
sub
add
movd
sub
add
movd
sub
add
movd
sub
add
movd
sub
add
movd
sub
add
movd
sub
add
movd
sub
add
adc
add
add
add
das
add
sarl
mov
jle
xchg
xchg
xchg
inc
xchg
mov
xchg
inc
xchg
lods
inc
add
xchg
lods
inc
add
xchg
lret
xchg
ja
inc
xchg
jg
add
xchg
mov
xchg
inc
xchg
mov
xchg
inc
xchg
test
xchg
mov
inc
xchg
orl
cmpsl
xchg
inc
xchg
cmpsb
inc
add
add
add
addr16
inc
xchg
mov
xchg
ja
inc
xchg
ja
add
xchg
and
cld
push
and
in
push
and
cld
push
and
in
push
and
cmp
push
and
sub
push
and
cmp
xlat
and
sub
xlat
and
cld
xlat
and
add
and
and
lock
and
lock
and
cmp
xlat
and
sub
xlat
and
cmp
push
and
outsb
inc
cld
outsb
xchg
mov
outsl
xchg
out
outsb
cmpb
outsb
xchg
js
outsb
xchg
iret
outsb
cmpb
xchg
outsb
push
scas
outsb
pop
js
outsb
inc
add
add
and
push
outsb
ds
outsb
cltd
mov
outsb
cwtl
mov
outsb
jnp
and
xchg
dec
outsb
jp
and
xchg
outsb
gs
outsb
push
and
outsb
add
cmp
fs
add
dec
outsl
add
sbb
add
dec
outsl
add
push
das
add
dec
outsl
add
push
das
add
add
sbb
add
push
das
add
dec
outsl
add
push
das
add
dec
outsl
add
sbb
outsl
add
sbb
outsl
add
sbb
outsl
add
sbb
outsl
add
mov
outsl
add
cmpl
das
add
dec
outsl
add
sbb
outsb
add
sbb
dec
add
addr16
inc
xchg
push
dec
add
add
xchg
ja
inc
xchg
inc
dec
add
addr16
inc
xchg
fmuls
xchg
mov
inc
xchg
leave
dec
add
cmpsl
cwtl
inc
xchg
fimull
xchg
mov
inc
xchg
lret
dec
add
cmpsl
cwtl
inc
xchg
fcompl
inc
xchg
fisttpll
xchg
addr16
inc
xchg
mov
cltd
inc
xchg
mov
cltd
inc
xchg
bound
mov
inc
xchg
popa
dec
add
xchg
inc
dec
add
add
add
mov
das
es
and
pop
es
and
dec
es
and
jl
xchg
and
stos
and
push
and
in
repnz
and
cld
repnz
and
in
repnz
and
cmp
push
and
sub
xlat
and
cmp
xlat
and
add
and
cld
repnz
and
in
repnz
and
cld
repnz
and
outsb
xchg
data16
adc
sub
add
outsb
inc
or
pop
mov
outsb
push
or
push
mov
outsb
inc
call
outsb
xchg
jmp
outsb
shlb
shll
xchg
lret
outsb
ret
outsb
xchg
add
stos
outsb
popf
movsl
pop
xchg
movsl
outsb
pushf
je
outsb
inc
mov
jg
and
push
mov
jle
and
inc
imul
mov
outsb
xchg
imul
mov
outsb
xchg
outsb
add
inc
outsl
add
sbb
add
inc
outsl
add
sbb
add
inc
outsl
add
sbb
add
inc
outsl
add
sbb
add
inc
outsl
add
sbb
add
inc
outsl
add
sbb
add
add
repz
outsl
add
sbb
add
inc
outsl
add
sbb
add
inc
outsl
add
sbb
add
adc
sti
fstl
das
add
and
scas
and
scas
and
mov
outsb
add
and
pop
outsb
add
and
dec
outsb
add
and
pop
outsb
add
or
add
sbb
insl
add
std
jo
xchg
or
add
std
jo
xchg
or
add
add
xchg
sbb
insb
add
xchg
or
insb
add
xchg
or
or
push
xchg
or
push
xchg
or
push
xchg
or
push
xchg
or
push
xchg
adc
lcall
add
or
lcall
add
add
xchg
and
add
and
add
and
add
and
xchg
xchg
and
xchg
xchg
and
xchg
xchg
and
xchg
xchg
and
xchg
xchg
and
xchg
xchg
and
xchg
xchg
and
xchg
add
add
and
cmp
aam
outsb
out
jnp
outsb
inc
test
out
jnp
outsb
xchg
test
jmp
movsb
outsb
call
movsb
outsb
jmp
and
outsb
ljmp
outsb
in
and
inc
movsb
outsb
hlt
sti
and
push
movsb
outsb
out
and
inc
test
idiv
and
xchg
xchg
loope
sbb
cmpsl
outsb
lock
cmpsl
outsb
jecxz
and
outsb
repnz
outsb
std
jnp
outsb
inc
cmpsl
outsb
add
add
in
sub
dec
add
aam
sub
pop
add
add
sub
push
add
add
adc
sti
and
sub
push
cmp
adc
sub
and
outsb
add
xor
add
add
push
xor
add
add
testb
add
xor
add
add
push
xor
add
add
add
sub
lret
add
add
adc
add
aaa
outsb
add
ss
cwtl
outsb
add
xor
mov
addr16
xchg
in
mov
ja
inc
xchg
out
mov
addr16
xchg
das
mov
mov
inc
xchg
sub
inc
xchg
sub
cmp
jge
xchg
push
inc
xchg
jmp
add
ja
inc
xchg
in
add
addr16
xchg
cmc
mov
ja
inc
xchg
out
add
addr16
xchg
aaa
mov
mov
inc
xchg
and
xchg
xor
inc
xchg
and
xchg
push
inc
xchg
and
cmp
aam
mov
xchg
and
in
and
add
and
sub
aam
je
xchg
and
jae
dec
sbb
or
and
cld
or
and
and
aam
mov
xchg
and
mov
or
in
and
fucom
xchg
and
dec
out
and
jnp
leave
sbb
or
std
mov
and
add
arpl
andb
sub
nop
arpl
mov
arpl
andl
scas
andb
test
nop
arpl
mov
arpl
andb
stos
andb
movsl
mov
arpl
mov
arpl
andb
nop
arpl
test
outsb
and
arpl
xorb
add
sub
jno
outsb
add
sub
pusha
xor
add
sub
iret
xor
aam
sub
sahf
xor
les
sub
lea
outsb
add
sub
sbb
outsb
add
sub
or
add
sub
sbb
add
sub
or
add
sub
add
add
xor
sub
inc
xor
add
sub
ss
add
sub
add
sub
push
xor
and
sub
xchg
push
jge
xchg
mov
jge
xchg
mov
inc
xchg
jge,pn
xchg
mov
jge
xchg
jae
inc
xchg
sub
add
arpl
xchg
sub
bound
sub
xchg
jmp
add
add
xchg
mov
inc
xchg
call
jge
xchg
jmp
jge
xchg
out
add
sub
inc
xchg
cmpsl
jnp
xchg
repz
xchg
movsb
xchg
sti
add
inc
xchg
mov
add
jae
inc
xchg
mov
bound
and
cld
andps
in
andps
cld
andps
in
andps
cmp
add
add
and
fistl
aam
xchg
loope
and
xchg
loope
and
mov
mov
and
pop
adc
and
jnp
aam
shl
xchg
and
lock
and
jmp
xchg
and
out
loope
and
outsb
ja
and
adc
and
mov
outsb
push
add
add
outsb
inc
mov
outsb
xor
outsb
and
outsb
mov
outsb
insl
mov
outsb
insb
push
and
outsb
outsl
jnp
xchg
inc
mov
outsb
dec
and
outsb
imul
outsb
push
pushf
outsb
imul
outsb
xchg
outsb
push
pushf
outsb
gs
and
inc
add
add
outsb
add
pop
sub
jne
outsb
add
pop
sub
inc
or
and
sub
cmp
outsb
add
push
sub
sub
outsb
add
push
sub
cmp
outsb
add
push
sub
or
add
sbb
add
outsb
add
sbb
add
outsb
add
sbb
add
outsb
add
sbb
add
outsb
add
sbb
outsb
add
sbb
add
outsb
add
sbb
outsb
add
sbb
outsb
add
sbb
add
xchg
jge
xchg
addr16
xchg
test
xchg
ja
inc
xchg
jbe
sti
mov
inc
xchg
cmpsl
jnp
xchg
mov
inc
xchg
cwtl
jl
xchg
cmpsl
gs
xchg
mov
mov
inc
xchg
jp
add
cmpsl
gs
xchg
stos
jnp
xchg
ja
inc
xchg
pop
cmp
addr16
xchg
pop
cmp
add
mov
inc
xchg
pop
cmp
addr16
xchg
lahf
jg
test
mov
gs
xchg
mov
gs
xchg
mov
gs
xchg
and
cmp
push
and
sub
push
and
cmp
push
and
sub
push
and
cld
add
adc
and
cld
add
add
push
and
in
add
and
cmp
aam
aaa
out
adc
aam
push
out
adc
aam
push
out
adc
aam
hlt
out
adc
add
and
in
add
and
cld
add
and
xchg
xchg
adc
push
pop
adc
inc
cltd
arpl
out
xchg
push
cltd
arpl
add
add
adc
cmpsb
adc
xchg
adc
andb
outsb
jae
adc
bound
arpl
test
outsb
lods
fs
outsb
scas
adc
mov
arpl
aaa
and
outsb
add
push
outsb
add
daa
sub
imul
add
sub
mov
daa
sub
mov
nop
sti
push
daa
sub
cmpsb
cmp
inc
daa
sub
mov
xchg
or
add
xor
adc
sub
repz
adc
sub
loop
xchg
or
sub
icebp
xor
adc
sub
inc
xor
in
sub
aas
add
add
sub
push
add
add
sub
std
add
aam
sub
add
add
sub
xchg
push
mov
xor
sti
and
add
pop
jge
xchg
dec
jge
xchg
jae
inc
xchg
push
mov
arpl
xchg
inc
mov
jae
inc
xchg
xor
xchg
jecxz
add
mov
inc
xchg
fmuls
inc
xchg
leave
mov
mov
inc
xchg
mov
add
mov
mov
add
xchg
jae
inc
xchg
pushf
mov
arpl
xchg
popf
mov
jae
inc
xchg
lcall
xchg
and
pop
pop
aam
and
xor
in
add
and
cld
add
and
in
add
in
push
cmp
push
and
sub
push
and
cmp
push
and
sub
push
and
fistl
add
add
adc
and
cld
pop
push
and
in
pop
aam
clc
adc
and
add
aam
push
adc
and
outsb
dec
mov
and
outsb
pop
mov
outsb
cmp
outsb
cmp
outsb
sbb
outsb
adc
add
add
outsb
add
and
outsb
imull
outsb
out
and
outsb
rorl
outsb
rorb
outsb
mov
and
outsb
mov
mov
and
outsb
add
and
outsb
and
and
and
sub
outsl
add
and
add
add
and
and
add
and
and
and
repz
and
and
and
and
mov
sbb
and
lods
and
mov
and
lods
and
lods
and
jle
outsl
pop
jle
outsl
pop
outsb
and
outsb
and
xchg
addr16
xchg
adc
inc
add
add
mov
inc
xchg
popa
push
xchg
jl
inc
xchg
mov
add
pop
testl
mov
inc
xchg
mov
xchg
mov
inc
xchg
lea
xchg
jnp
inc
xchg
outsb
push
xchg
pop
clc
inc
xchg
outsl
push
xchg
jae
inc
xchg
dec
push
xchg
cmp
inc
xchg
dec
push
xchg
sbb
inc
xchg
stos
insb
add
aam
inc
xchg
stos
insb
add
sbb
inc
xchg
movsb
insb
add
add
xchg
leave
jecxz
xchg
xchg
insl
add
repnz
xchg
and
nop
mov
and
cmc
xchg
aam
sub
xchg
and
pop
pop
xchg
and
leave
pop
xchg
and
clc
pop
xchg
and
inc
pop
xchg
and
inc
pop
xchg
and
inc
pop
xchg
and
inc
pop
xchg
and
inc
pop
xchg
and
add
pop
xchg
and
push
push
int
and
sbb
xor
xchg
sub
das
outsb
cmpsl
mull
cmp
push
js
test
js
cltd
pushf
ja
sbb
sub
lods
ja
sbb
pushf
xor
sti
sbb
sub
lret
sbb
test
mov
mov
sbb
js
sbb
lahf
add
add
dec
mov
jbe
js
sbb
mov
pop
js
sbb
ja
sbb
ja
movsb
fdivl
sbb
ja
outsl
fdivl
sbb
ja
cmp
ja
sbb
add
clc
fists
loope
pop
adc
mov
mov
adc
adc
popa
lahf
pop
adc
outsb
add
lret
jb
outsb
add
add
cs
add
and
add
into
nop
sti
cmp
add
into
nop
sti
das
and
sbb
add
or
jecxz
pusha
or
xor
sub
adc
sbb
xor
sbb
add
dec
and
call
inc
sub
adc
xchg
test
pop
ds
cmc
pusha
leave
popa
icebp
fs
insl
in
dec
icebp
imul
add
jmp
xor
jno
xor
jge
cmp
gs
leave
popa
mov
cmc
insl
lods
or
imul
hlt
ret
jge
fdivrs
xchg
test
mov
std
xchg
add
xchg
in
std
js
lcall
or
in
dec
xor
add
add
sar
jb
into
outsb
fmul
loop
fadd
movb
lret
fmulp
ds
cmp
push
inc
repnz
out
fimuls
ljmp
xor
jmp
xor
out
push
sub
adc
sub
ss
cmp
and
aas
cs
and
sbb
xchg
xchg
and
decb
push
xchg
push
test
fwait
adc
add
subb
push
jl
orl
cmpsl
out
inc
stos
loop
outsb
inc
mov
stos
push
pop
adc
dec
push
or
xchg
inc
and
add
daa
jnp
adc
dec
arpl
or
push
imul
add
sbb
jb
mov
inc
pop
cmp
add
add
adc
insl
sbb
call
pop
jg
loopne
or
clc
jne
mov
lock
mov
cmpsl
push
xchg
mov
jnp
shrb
jbe
mov
xchg
aam
or
lods
xor
ret
aaa
inc
movsb
iret
sbb
mov
shll
jno
filds
add
sub
fistpl
dec
mov
adc
jecxz
and
iret
cmp
push
xchg
dec
dec
nop
sti
decl
outsb
add
daa
outsb
add
daa
outsb
add
daa
outsb
add
daa
outsb
add
push
insl
add
push
insl
add
push
insl
add
push
insl
sti
xchg
jl
add
xchg
insl
add
push
insl
add
push
insl
add
push
insl
add
push
insl
add
add
xchg
or
add
or
sti
xchg
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
jp
sti
xchg
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
push
inc
sti
cltd
and
xchg
xchg
and
xchg
xchg
and
add
es
sub
stos
subb
xchg
xchg
and
xchg
xchg
and
xchg
xchg
and
fsubrs
add
sub
addb
xchg
and
xchg
xchg
and
adc
add
sub
add
sub
addb
xchg
and
xchg
xchg
and
push
sub
add
xchg
add
xchg
and
push
in
xchg
and
outsb
in
xchg
and
outsb
add
xchg
in
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
lcall
in
xchg
and
outsb
in
xchg
and
outsb
insl
lcall
adc
insl
add
and
xchg
and
out
add
je,pn
cmc
je,pn
fstl
jl
int
jl
in
push
jl
fstl
jl
fstl
jl
aas
sub
adc
je,pn
mov
je
fstl
jl
int
jl
lods
push
jl
popf
push
jl
popf
push
jl
jmp
add
and
add
and
add
and
add
add
jg
outsb
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
push
insl
add
push
insl
add
push
insl
add
push
insl
add
push
insl
add
push
insl
add
push
insl
add
push
insl
add
push
insl
add
push
insl
add
push
insl
add
push
insl
add
push
insl
add
push
insl
add
add
xchg
push
insl
add
push
insl
add
push
insl
add
or
add
outsb
pop
inc
xchg
arpl
inc
xchg
jns
inc
xchg
lock
insb
out
shll
imulb
inc
into
insb
sbb
jbe
clc
lret
jne
add
sti
xor
insb
cmpsb
and
mov
test
and
les
push
mov
xchg
jbe
leave
mov
nop
ffreep
add
add
ret
and
lret
sahf
inc
jne
mov
insb
loop
xor
enter
inc
fwait
and
mov
hlt
mov
fwait
pop
jae
lahf
decl
inc
movsb
jne
fwait
in
jp
clc
mov
hlt
mov
jb
pop
xchg
and
je
ret
mov
or
cmp
enter
xchg
and
jae
mov
pusha
fstpl
outsb
and
outsb
push
lods
outsb
std
xchg
and
outsb
mov
outsb
mov
outsb
test
outsb
test
outsb
and
scas
outsb
xor
stos
outsb
clc
mov
outsb
jo
and
sub
add
add
nop
and
outsb
add
out
sub
add
fdivrs
push
aas
sub
fistpll
and
in
add
mov
cmp
mov
inc
inc
sub
cmp
and
sub
sub
sub
sub
sub
sub
sub
ljmp
add
mov
push
jno
and
sub
iret
mov
push
add
add
loop
inc
and
pushf
out
sub
sti
adc
dec
lods
in
nop
sti
popf
out
and
inc
sti
dec
sbb
push
iret
adc
sti
xor
inc
aad
mov
add
leave
movsl
push
pop
leave
insb
add
cltd
popf
push
pop
int
inc
dec
push
insl
add
les
sti
loope
aad
inc
iret
fimull
insb
add
mov
push
add
add
xlat
inc
fs
inc
xchg
sahf
test
add
fsts
inc
push
xchg
outsl
fildll
popa
lret
ja
push
fdivr
jns
clc
push
xor
fsubl
and
xchg
xchg
and
push
lds
mov
xor
xchg
xchg
mov
xchg
lods
mov
xchg
pop
xchg
and
cmpsb
mov
add
add
movsb
scas
push
lods
mov
jp
mov
mov
cmp
pop
xchg
and
xchg
xchg
and
adc
es
push
add
and
sub
xchg
and
cli
pop
xchg
and
outsb
mov
mov
outsb
jns
outsb
jbe
outsb
in
and
outsb
testl
add
xchg
and
outsb
fsts
and
outsb
jmp
xchg
and
outsb
loop
and
insl
mov
jb
in
xchg
and
mov
jl
mov
rorl
and
enter
xchg
jns
mov
xchg
out
and
jecxz
or
call
add
add
jno
dec
arpl
push
arpl
dec
sub
aas
and
xor
jle
mov
push
cmpb
cwtl
movsb
in
xchg
mov
stos
call
add
push
push
cmp
xchg
aaa
fldenv
push
out
and
add
push
xchg
pushf
bound
mov
pop
hlt
inc
push
fdivrs
xchg
arpl
xor
movsl
vandnps
add
out
test
and
aam
mov
add
mov
sub
int
popa
leave
sub
gs
rcrb
in
fstpl
adc
push
rclb
push
fisttpl
pop
fidivrs
insl
add
and
xchg
add
xchg
gs
in
inc
cli
xchg
cmpsl
xor
add
add
jp
add
dec
push
fcomp
dec
push
xchg
insl
add
cld
inc
call
xchg
mov
and
test
mov
xchg
add
adc
add
adc
or
movd
cltd
sub
xor
pop
es
into
les
lds
out
xor
add
adc
add
in
inc
xchg
and
pop
test
fnstenv
xchg
and
int
cmp
mov
mov
scas
cmp
pop
xchg
and
pop
xchg
cmp
in
xchg
and
pop
hlt
sahf
sub
repnz
insl
or
dec
dec
ljmp
outsb
adc
and
pop
mull
sbb
add
pop
orl
setb
mov
in
insl
lret
gs
sub
outsb
imul
sti
xchg
jb
iret
orb
push
jle
fldl
and
and
and
add
frstor
add
fs
test
mov
cwtl
sti
jp
lea
add
push
jno
xchg
push
sti
lahf
jmp
stc
jnp
pop
arpl
push
hlt
outsl
das
aas
sub
outsb
lea
jle
ret
mov
push
jae
cwtl
sbb
sub
jg
add
xchg
add
movsl
or
push
push
fnstsw
nop
sti
mov
and
loop
jp
icebp
stc
jns
rolb
sti
into
xlat
inc
cmp
add
insl
or
cmp
insb
add
jae
inc
ds
fstpl
fcoms
pop
rcrb
insb
add
add
xor
fdivrl
xchg
pop
jecxz
adc
pop
loop
or
ljmp
add
and
mov
and
dec
xchg
sub
and
icebp
roll
cmp
add
push
lret
sbb
or
xchg
and
xor
adc
adc
xchg
xchg
and
fisubrs
inc
addr16
lods
inc
imul
adc
pop
xchg
and
leave
cmp
out
cmp
dec
xlat
fldenv
add
add
inc
mov
sub
call
mov
aaa
jae
xchg
and
xor
or
ret
dec
push
in
repnz
cltd
popa
add
repz
sbb
arpl
jne
and
mov
mov
add
cmpsb
movsb
sbb
cmpsl
xchg
add
add
xlat
ret
ja
loopne
mov
lods
xchg
xchg
jnp
mov
in
xchg
and
lahf
jg
mov
push
test
inc
push
mov
cmp
data16
pop
imul
repnz
add
mov
push
lret
mov
add
sbb
fists
pcmpeqd
rcrb
or
cmp
add
xor
push
popa
pop
mov
nop
sti
incb
insl
add
mov
add
mov
outsb
add
jne
add
or
das
and
jecxz
mov
mov
cmp
lods
or
sbbl
fsubs
mov
xchg
js
outsb
add
ljmp
xchg
push
or
xchg
sbbl
xor
std
jns
xchg
sub
xchg
dec
cmp
ret
div
sbbl
rolb
add
aad
lock
dec
mov
je
dec
add
add
xchg
jo
scas
cs
insb
add
cmp
insb
add
movsb
adc
lods
push
push
fstl
add
push
cmp
dec
cmp
incl
add
sbb
sbb
fwait
pop
jg
and
xchg
xchg
and
xor
lahf
xchg
xchg
and
lcall
or
repnz
xor
sti
stos
and
xchg
mov
popa
inc
lds
sbb
jmp
or
inc
pop
in
xor
lods
xor
add
addr16
js
jmp
dec
mov
xchg
sub
aad
outsb
push
push
bound
sbb
aas
mov
sbb
or
mov
push
sub
xor
dec
mov
sti
xchg
shlb
sbb
xchg
and
jns
xchg
and
cmp
xchg
pop
and
adc
xor
add
jns
outsb
in
push
sub
dec
daa
xor
cmp
jns
inc
push
dec
pop
or
inc
outsb
cld
inc
inc
pop
rclb
cmp
and
and
pop
and
pop
arpl
nop
nop
sti
sub
xor
cmp
outsb
add
and
mov
push
shlb
fldt
fstpt
add
add
in
lahf
cmp
repnz
inc
loopne
xchg
adc
add
dec
movsb
out
out
sub
mov
cmp
mov
push
mov
in
xchg
mov
mov
mov
fmuls
popf
mov
xor
pop
push
leave
dec
mov
in
pop
mov
out
push
add
pusha
jbe
or
add
add
sbb
sti
int3
pop
jl
xchg
shrb
pusha
push
mov
insb
add
scas
imul
insb
add
insb
add
jg
or
xor
dec
cmc
and
mov
fistpll
scas
or
xlat
jg
stos
int3
xchg
or
and
xchg
incb
push
dec
stc
add
add
jnp
add
xchg
mov
xor
xchg
jl
mov
add
and
xchg
xchg
and
adc
movsl
adc
mov
dec
add
ljmp
and
test
lea
jae
popf
jnp
das
mov
xor
fildl
mov
push
push
push
insb
add
add
adc
outsb
pop
mov
ret
in
xchg
and
iretw
xor
jne
std
push
jb
xchg
and
addr16
lcall
out
sbb
leave
aaa
push
push
leave
cmp
sbb
leave
ss
xor
lret
cmp
loope
inc
or
xchg
xor
aaa
mov
out
xor
aad
aaa
mov
add
add
sub
pop
pusha
and
or
std
outsl
jl
pop
xor
inc
add
cwtl
add
xchg
or
pop
sbb
je
jnp
xchg
lods
jns
xchg
cmpsl
outsb
clc
xchg
call
mov
mov
imul
lds
xchg
push
xchg
lods
aaa
push
les
or
push
int3
stos
adc
add
popa
dec
les
jle
mov
fildll
std
shrb
stos
xlat
das
jno
movsb
mov
movsb
fadds
push
sub
or
in
lds
fisttpl
imul
clc
cmp
mov
xchg
add
cli
imul
in
add
testb
add
add
adc
push
mov
xchg
push
mov
and
and
sbb
xchg
mov
insb
mov
adc
test
cmp
mov
push
test
out
dec
mov
jo
mov
sbb
sti
ret
mov
enter
ljmp
ffreep
cmp
add
arpl
sarb
fucomp
push
in
xor
mov
dec
inc
mov
loop
repnz
sti
pop
xchg
and
sub
adcl
ljmp
mov
fwait
or
imul
pop
mov
outsl
cmp
pop
xchg
and
lret
pop
out
clc
mov
shrl
mov
lahf
cmpsl
mov
rcl
lods
popf
jl
repnz
test
std
test
imul
scas
jge
mov
jg
cli
push
jle
lret
and
scas
inc
test
fldt
and
pushf
push
mov
mov
cmp
pushf
notl
callw
jne
xchg
in
xchg
and
dec
sub
dec
and
jo
outsl
and
loopne
and
mov
push
iret
xchg
aaa
pop
mov
and
je
test
dec
movsb
mov
push
jne
push
jbe
ret
adc
loop
jne
xchg
or
xchg
dec
push
xchg
mov
outsb
lea
or
add
cmp
jmp
outsb
add
add
rclb
push
sbb
jno
sarl
sub
adc
out
pushf
xchg
inc
cmp
xchg
fwait
rclb
fadds
pop
fimuls
mov
pop
leave
lret
leave
sbb
dec
shlb
or
adc
mov
stos
sti
dec
sbb
push
xchg
cmp
outsb
or
xchg
mov
add
add
jo
divb
je
cli
pop
sub
pop
gs
xchg
mov
inc
inc
cwtl
xlat
dec
push
mov
rorb
cmpsl
dec
call
sbb
iret
and
pop
adcb
xchg
xchg
and
sub
cltd
and
and
push
je
mov
jecxz
and
add
add
add
repnz
das
and
dec
mov
sub
roll
xchg
xchg
and
inc
rorb
in
popf
test
inc
jno
lcall
sub
adc
jecxz
repz
pop
repnz
insl
pop
cmp
bound
mov
insl
jle
int3
cmp
xchg
mov
add
mov
adc
mulb
insl
sbb
js
push
xor
pop
sub
xchg
sub
push
inc
sub
inc
sub
nop
mov
insl
repz
cmpsl
jno
outsb
xor
inc
jo
out
inc
xor
cmp
in
xchg
and
xchg
push
jl
test
mov
mov
inc
cltd
out
add
add
ss
negb
mov
xchg
add
push
cld
test
pop
in
nop
fnstsw
lcall
mov
pop
ljmp
dec
jecxz
adc
sarl
icebp
jle
test
cs
adc
jg
mov
mov
sar
outsb
add
pushf
and
ds
pushf
sub
out
and
add
pop
sti
ret
sbb
loope
xchg
pop
insl
add
cmpsb
jmp
xor
sbb
xchg
fs
int3
shll
fbld
lret
insb
add
xchg
lods
pop
out
mov
negb
stos
lret
cmpsb
repz
imul
ret
or
add
rcl
inc
lret
add
add
mov
jbe
mov
dec
inc
jmp
mov
push
cmc
dec
data16
bnd
lret
out
pop
jno
call
es
and
mov
cmp
in
adcl
and
dec
and
and
jl
scas
ljmp
xchg
and
sbb
in
or
pop
add
add
xchg
sbb
and
out
aas
imul
jmp
cmp
jecxz
sub
xchg
xchg
and
xchg
xchg
and
xchg
xchg
and
xchg
xchg
and
mov
add
sub
ficoml
bound
daa
push
and
xchg
and
mov
xchg
aam
sub
xchg
and
add
outsb
dec
icebp
xchg
fidivs
lahf
xlat
push
xchg
and
jns
xchg
sub
insb
inc
jno
xchg
and
fdivs
xchg
shr
and
mov
movsb
js
mov
enter
ret
dec
pop
inc
shl
outsb
sbb
add
mov
outsb
add
inc
xchg
shll
mov
cmp
add
inc
sub
leave
aam
and
int3
dec
push
nop
sti
sub
stc
mov
dec
pop
ljmp
clc
pop
sbb
pop
xor
jno
push
les
daa
repnz
sti
mov
stos
jmp
fs
rcrb
mov
sub
enter
add
pop
enter
mull
sbb
xchg
add
xchg
int3
insb
add
pop
in
stos
sub
xchg
sub
out
cltd
or
push
popf
xchg
in
mov
js,pn
mov
add
rcl
dec
jmp
pop
dec
mov
add
les
pop
jnp
pushf
adc
push
adc
inc
push
lea
iret
insb
add
pop
sub
cmp
mov
add
add
divl
fistps
mov
xchg
and
sbb
inc
subb
adc
fucom
in
jmp
jmp
xlat
lret
add
jmp
and
xchg
and
ret
push
into
jl
pop
jg
and
cmp
loop
cmp
cli
lea
pop
xchg
and
cmp
add
add
mov
cwtl
rsm
push
mov
mov
add
push
inc
jp
pop
or
lds
jb
inc
ds
mov
sub
test
inc
push
xor
inc
sbb
in
xchg
and
fldenv
mov
cmp
fwait
lret
inc
and
aam
das
xchg
insl
insb
cli
pushf
addl
add
add
fildl
mov
lea
add
faddl
in
xchg
and
arpl
nop
sub
out
cs
cli
mov
mov
jno
mov
and
enter
mov
mov
mov
bound
lds
add
add
lds
pop
shlb
test
test
insb
scas
lods
aam
imull
in
sub
outsb
add
mov
xchg
sbb
cmc
pushf
or
cld
aad
mov
loope
mov
not
add
outsb
add
sub
xchg
xor
es
mov
sbb
push
add
add
xor
enter
or
and
cli
pop
arpl
pop
gs
pop
das
cmpsl
and
pop
jae
in
and
sarl
jae
fs
push
popf
and
push
int3
insb
add
dec
into
mov
lock
jle
icebp
rcrl
mov
addr16
xchg
and
sti
jno
sarb
add
xor
int
and
in
call
loope
pop
scas
add
popf
adc
sbb
icebp
xchg
jmp
cwtl
dec
mov
xchg
push
mov
sbb
cltd
or
pop
jno
mov
dec
addr16
jnp
je
inc
inc
xor
pop
xchg
and
add
add
add
or
pop
andl
mov
mov
imul
dec
ret
and
out
push
cmc
lcall
cmc
xchg
and
insb
out
jle
pop
adc
sub
int
and
mov
dec
les
push
inc
in
xchg
and
outsb
popl
add
adc
call
xchg
in
jg
xor
jmp
jecxz
add
cmpsb
addr16
loope
push
xorl
sub
cltd
jbe
cwtl
fildl
mov
mov
rorb
leave
cmpsb
pop
stos
loopne
repnz
shl
add
movsb
fdivr
in
std
cmc
add
cmpsl
sar
mov
test
or
lods
mov
mov
add
add
jo
dec
les
outsb
add
xchg
fisubs
push
lcall
and
in
mov
loop
call
jbe
cltd
mov
push
fildll
les
movsb
enter
cli
dec
aaa
loop
or
insb
add
sub
shlb
aad
xchg
xchg
mov
mov
aas
test
loopne
fisttps
int3
stc
mov
xor
aaa
aas
dec
xchg
jle
jge
fidivrl
lret
insb
add
jbe
idivb
sahf
call
lock
fsubrl
xchg
mov
inc
dec
mov
rorb
cwtl
pop
test
add
movsl
popa
adc
enter
lea
xchg
xchg
and
or
add
mov
mov
sbb
xchg
sbb
add
sub
xchg
xchg
and
jb
inc
push
jbe
inc
and
mov
mov
cmp
dec
inc
xchg
add
add
fsubrl
in
adc
insl
inc
mov
insl
mov
adc
std
dec
outsb
decb
and
daa
xchg
rcll
std
faddl
mov
nop
paddq
pop
jg
push
fmuls
or
je
js
jo
push
repz
add
movsb
sbb
outsb
push
jae
add
add
add
push
xlat
jp
add
outsl
adc
xchg
fmuls
decb
fiaddl
sub
les
jge
jnp
jb
outsl
aaa
inc
inc
daa
outsb
add
pop
and
dec
pop
addr16
dec
sbb
cmp
jae
daa
outsb
add
push
add
inc
adc
add
hlt
test
add
mov
in
ret
mov
add
add
fisubrs
fistpll
mov
add
xchg
cli
es
fwait
decb
sub
int3
jno
and
inc
cmp
add
push
xor
sub
stc
mov
jno
sti
mov
popf
fisubs
dec
dec
in
aas
jns
sti
jns
fldt
bound
mov
add
add
lret
movsl
mov
repnz
test
add
or
inc
lds
jns
pop
or
jg
rclb
les
sub
ret
jmp
add
xchg
cmp
fwait
and
pop
push
xchg
and
mov
pop
andb
pop
xchg
and
aad
add
add
pop
stos
pop
xchg
and
jmp
sarb
jmp
xchg
and
sti
push
cmp
jmp
inc
fildll
ja
push
and
and
aaa
xlat
and
sarb
and
aaa
push
and
leave
aaa
push
and
jp
xchg
and
push
add
aas
push
cld
add
add
sbb
xor
jge
and
outsb
fistl
and
outsb
dec
imul
outsb
subl
outsb
and
data16
ljmp
outsb
lret
frstor
sub
data16
test
data16
sbb
inc
adc
pop
outsb
pop
lcall
inc
xor
shlb
outsb
addb
add
outsb
ficompl
outsb
sbb
outsb
jne
bound
ja
sub
mov
jnp
add
subl
add
lea
fcoml
push
add
mov
xchg
subl
push
sbb
outsl
sbb
or
outsb
add
dec
punpcklbw
inc
or
push
push
pop
inc
aas
and
test
add
into
sub
add
and
aas
and
jl
and
sub
add
sub
add
sub
add
sub
add
sub
imul
push
xchg
xor
xchg
and
push
xchg
out
insb
ja
sbb
dec
xchg
nop
insb
pop
xchg
jnp
jno
mov
jmp
insb
push
xchg
jmp
insb
insl
xchg
lahf
insb
push
add
xchg
cwtl
insb
push
xchg
stos
insb
imul
insb
popa
xchg
mov
dec
insl
jo
push
push
xchg
or
jbe
punpckhdq
jne
push
xchg
imul
xchg
and
jnp
jle
xchg
xchg
and
xchg
sub
mov
jl
gs
and
rolb
add
cmp
cmpsb
pop
sub
lret
pop
stc
and
sti
pop
fisubl
aam
lods
and
fildl
popf
and
cmc
pop
fsubs
das
add
dec
add
dec
add
and
xchg
pop
pop
and
outsb
std
mov
and
outsb
in
xchg
and
outsb
insl
add
add
outsb
jle
outsb
mov
mov
outsb
pop
lods
outsb
fwait
mov
add
sub
mov
add
or
or
shlb
mov
stos
pop
and
popf
ret
xchg
out
jae
leave
jno
dec
sarl
inc
leave
imul
dec
mov
or
cmp
add
insb
add
dec
push
jne
daa
outsb
add
daa
outsb
add
arpl
dec
mov
and
push
jle
cmp
pop
cmpsb
pop
pcmpgtd
pop
outsb
les
push
push
pop
jbe
push
sbb
aas
pop
jle
adc
push
pop
xor
daa
outsb
add
and
ja
cs
leave
cs
rcll
add
add
jecxz
add
leave
nop
sti
jne
outsb
add
dec
das
add
dec
pop
inc
xchg
sarl
xchg
add
jnp
xchg
sbb
adc
sub
xchg
mov
inc
xchg
dec
jbe
xchg
les
insb
add
mov
insb
add
mov
xchg
fildl
xchg
cmp
xchg
push
mov
cmp
fisubrl
add
add
sbb
xchg
movsb
stos
inc
xchg
mov
outsl
inc
xchg
insb
jno
xchg
fsubrs
xchg
mov
mov
cmp
and
and
pop
and
xchg
and
and
cmp
push
and
sbb
push
and
sbb
push
and
push
aaa
push
and
add
jmp
push
and
mov
jae
cmp
pop
xchg
and
movsb
daa
xchg
and
cmp
aam
adc
aam
sbb
aam
sbb
aam
push
sub
and
out
dec
aam
outsb
in
xchg
and
outsb
adc
arpl
xchg
inc
outsb
cmp
jne
aas
lcall
inc
lcall
xchg
inc
outsb
in
xchg
and
outsb
adc
xchg
and
outsb
in
xchg
and
outsb
add
lea
outsb
andl
adc
arpl
mov
outsb
cltd
xchg
outsl
outsb
int3
xchg
push
outsb
mov
xchg
inc
outsb
mov
aaa
outsb
mov
jno
add
and
add
and
add
and
add
and
add
add
enter
aas
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
ret
and
add
and
add
add
and
mov
push
add
sub
add
ret
push
add
cmp
hlt
sub
add
cmp
lcall
add
and
add
add
push
and
add
mov
insb
imul
subb
adc
xchg
push
pop
inc
xchg
dec
pop
inc
xchg
inc
pop
inc
xchg
dec
pop
inc
xchg
push
pop
inc
xchg
outsl
pop
inc
xchg
insb
pop
inc
xchg
adc
jbe
inc
xchg
mov
inc
xchg
shrl
adc
addr16
inc
xchg
pop
adc
dec
adc
leave
cmovne
fisttps
inc
add
add
xchg
stc
inc
xchg
into
adc
jp
inc
xchg
rorl
inc
xchg
stos
insb
popa
xchg
and
cli
pop
ljmp
pop
shlb
pop
enter
stos
and
and
xchg
and
push
add
and
dec
add
and
sub
push
and
scas
mov
add
add
imul
push
and
xchg
pop
inc
and
je
fs
roll
add
xchg
xchg
and
outsb
mov
jmp
and
outsb
int3
sub
sub
xchg
sub
xchg
aaa
outsb
adcb
outsb
push
xchg
cmp
lcall
out
add
add
add
outsb
mov
data16
inc
inc
add
outsb
dec
ret
data16
clc
mov
and
outsb
icebp
dec
and
outsb
add
outsb
aad
and
outsb
lds
outsb
outsb
add
cmc
insl
add
imulb
push
popa
outsb
add
dec
sbb
andps
adc
je
sub
xor
add
inc
ret
inc
ret
sub
sub
sub
xor
inc
jae
cmp
pusha
pusha
or
pop
or
add
xor
inc
jae
cmp
xchg
pop
or
pushf
pusha
add
mov
mov
add
mov
add
fildll
add
lret
xchg
pushf
inc
xchg
lcall
add
add
es
xchg
test
push
fistpl
cmpsl
int3
insb
add
lea
addr16
lods
ss
lods
or
in
insb
add
xor
jno
jo
jae
jbe,pt
imul
sbb
jae
sub
ss
and
jo
adc
sbb
xor
sbb
insl
cmp
push
xchg
lods
jg
add
add
add
mov
push
mov
xor
and
aam
mov
xchg
xchg
and
aam
mov
cmpsl
pop
mov
and
ljmp
and
adc
push
sbb
push
cmp
push
cmp
push
and
xchg
and
push
pop
jg
and
aaa
sub
add
orl
push
push
js
insl
and
bound
inc
and
aad
jo
imul
and
outsb
mov
xor
push
dec
vmwrite
dec
loopne
dec
or
icebp
add
dec
lret
add
xchg
inc
outsb
xchg
xchg
and
push
jp
push
or
inc
das
or
add
add
dec
pop
je
fs
xchg
and
outsb
or
lcall
cs
sbb
xchg
and
dec
in
xchg
and
cmp
iret
and
add
and
add
and
add
sub
add
sub
insb
and
add
sub
add
sub
add
and
add
cld
sub
add
add
ljmp
pop
sub
pusha
or
dec
sbb
outsb
add
inc
sbb
pop
or
bound
jbe
dec
sbb
push
sub
mov
add
inc
sub
outsb
add
inc
sbb
pop
or
pop
add
dec
sbb
push
sub
xchg
push
or
ret
xchg
cmp
inc
xchg
inc
jmp
inc
xchg
mov
add
add
xchg
add
xchg
dec
or
cmpsl
dec
aas
add
js
pop
inc
xchg
decb
jns
push
aad
inc
sti
and
push
gs
dec
adcl
aas
add
js
pop
add
pop
inc
xchg
or
jnp
xchg
movl
adc
aam
mov
stos
aam
in
insl
dec
and
ret
es
enter
xchg
add
add
adc
mov
jle
scas
data16
test
add
adc
push
xchg
in
iret
aas
jns
pop
xchg
and
xchg
xchg
and
xchg
xchg
and
xchg
xchg
and
xchg
xchg
and
xchg
xchg
and
xchg
xchg
and
xchg
xchg
and
dec
lock
and
add
and
xchg
xchg
and
out
mov
inc
push
add
xchg
cmp
push
mov
in
push
mov
outsb
outsb
icebp
sub
data16
jl
lcall
pop
jp
lret
jnp
and
sbb
and
outsb
pusha
call
movsl
jne
pushf
xor
cmp
mov
add
add
adc
and
pop
xchg
sbb
and
aaa
jbe
pop
cltd
cs
loope
and
add
popa
outsb
in
nop
mov
mov
outsb
mov
daa
sub
stos
pop
xor
loopne
add
jg
cwtl
mov
fildll
add
jg
lods
loope
inc
cmp
cs
add
cmp
test
xchg
lea
sub
lea
sub
inc
dec
test
jbe
out
mov
sub
decb
out
jecxz
sub
mov
cli
loop
push
inc
stos
addr16
push
push
dec
aaa
mov
subl
cmp
sahf
cmp
sbb
cwtl
jl
xchg
into
xor
test
add
movsl
cmp
jb
icebp
ret
xchg
int3
insb
shll
int3
lds
out
jmp
fcomip
jge
fists
faddl
add
pop
nop
imul
push
xchg
add
adc
insb
add
es
sub
push
aas
add
push
xchg
or
and
mov
add
icebp
mov
mov
f2xm1
mov
repz
push
inc
add
adc
dec
jp
pop
push
pop
orl
into
test
mov
rolb
or
add
add
xor
call
sbb
daa
xchg
jb
mull
ret
dec
outsb
incl
add
push
cli
outsb
in
sbb
add
sbb
sub
sbb
jle
sahf
scas
movsl
lds
adc
imul
add
mov
cmp
and
jbe
mov
jle
mov
inc
fistl
xchg
clc
popf
adc
in
sbb
ljmp
adc
push
out
out
xchg
int3
imul
add
xchg
cltd
fisubrs
add
adc
add
stos
sub
in
or
out
jl
and
pop
mov
and
outsl
pop
imul
xchg
inc
mov
lret
bound
mov
push
insl
pop
imul
cs
mov
jo
stos
pop
in
add
add
mov
andl
pop
imull
test
pusha
mov
and
lret
cmpsl
mov
push
aas
stos
and
xchg
inc
push
or
mov
xor
pop
cwtl
pusha
rcr
cli
mov
in
dec
add
xor
add
inc
push
adc
lods
push
sbb
out
adc
ficoms
add
add
or
int3
insb
push
dec
xor
dec
sub
pop
mov
repz
mov
inc
adc
test
jmp
leave
xor
popa
sub
insb
add
add
xchg
and
xor
int3
ror
push
dec
stos
repz
loope
or
and
xchg
add
shrb
test
and
pop
scas
push
cwtl
and
xchg
jmp
and
test
xchg
mov
rolb
and
cwtl
sub
xchg
cmp
xchg
xchg
test
sub
and
add
hlt
test
stos
and
out
popf
es
adc
and
icebp
out
add
add
outsb
in
xchg
dec
jp
movb
pushf
gs
cmp
cld
push
and
or
popa
jo
xchg
pop
mov
lods
and
mov
insb
adc
sbb
inc
sbb
int
jg
and
test
push
mov
stc
rcrl
in
sub
insl
in
xchg
mov
jecxz
add
add
sub
sbb
insb
dec
and
movsb
in
xchg
sub
cmpsl
jp
push
das
lods
rorb
stos
call
pop
les
mov
outsb
add
ret
lcall
outsb
add
mov
dec
dec
shl
push
insb
shll
bound
dec
push
in
loope
xchg
push
sub
out
and
sarb
add
dec
add
in
xor
mov
add
push
sub
jne
rsm
popa
pop
shl
mov
in
jp
imul
and
imul
pop
push
pop
xchg
jo
adc
pushf
cmp
push
and
mov
push
gs
adc
push
mov
and
add
add
imul
jp
mov
cmpsb
scas
sub
adc
in
or
push
sbbb
les
mov
outsl
sbb
mov
and
mov
xchg
and
xchg
mov
mov
xchg
dec
or
jne
xchg
xchg
jmp
add
test
add
add
inc
mov
push
adc
mov
pop
xor
pop
xchg
and
mov
pop
ret
xchg
and
jg
leave
xchg
mov
xchg
inc
xchg
sahf
rcll
test
in
insl
jp
and
popa
repnz
outsl
in
xchg
in
pop
loop
inc
outsl
in
xchg
mov
pop
outsb
shrl
mov
add
add
outsb
in
shlb
in
cwtl
cmp
sbb
inc
imul
and
cmp
bound
repnz
and
lcall
jmp
pop
and
fwait
repnz
lret
xchg
ss
aam
and
in
adc
outsb
insl
in
adc
test
daa
outsb
pop
fwait
push
add
insb
icebp
imul
ja
add
mov
add
in
jp
shl
mov
cli
cmp
inc
cmpl
push
inc
push
pop
repz
or
cmpsl
bound
xlat
outsb
jno
test
and
mov
push
outsl
and
mov
add
xchg
pop
push
stos
loope
xchg
jmp
test
and
repnz
outsb
mov
scas
add
add
scas
and
add
adc
out
out
jp
imul
mov
stos
xchg
data16
push
call
imul
mov
imul
xchg
cmp
jns
mov
inc
push
or
dec
pop
and
es
pop
xchg
mov
in
mov
jle
xlat
fdivrs
adc
lods
ds
scas
jb
mov
push
add
or
and
or
xchg
sbb
xchg
xchg
in
test
sbb
out
std
mov
ret
pop
jns
arpl
mov
fdivs
lret
fwait
inc
ds
ljmp
push
pushf
mov
inc
arpl
pop
adc
add
aam
xchg
xchg
and
jmp
or
mov
repz
stos
cmc
xchg
inc
xchg
mov
or
lods
cmp
lea
dec
sbb
fldt
in
xchg
and
xchg
jmp
xchg
and
aad
sbb
push
and
push
jp
and
outsb
imul
push
pop
add
add
and
sub
stos
push
xchg
sarb
adc
in
push
sub
test
loop
scas
jle
insb
fistl
scas
popa
sahf
cmc
inc
dec
cli
and
cs
mov
xor
aam
outsb
insb
stc
add
cmp
add
out
and
inc
out
gs
xor
jmp
add
ret
and
mov
add
mov
adc
xor
pop
mov
je
imul
xchg
outsb
out
jge
insl
inc
push
sub
sti
sbb
xchg
scas
popf
mov
sti
stos
call
outsb
add
fwait
stos
xchg
sub
inc
and
xchg
ljmp
outsb
dec
mov
xchg
sti
ljmp
mov
xchg
mov
add
in
inc
jp
pop
push
sbb
repnz
add
xchg
or
jmp
jmp
and
mov
insb
add
insl
in
dec
mov
shrb
push
in
cmp
mov
repnz
in
lret
sti
mov
aaa
sub
ds
pushf
add
lods
mov
add
xchg
dec
cmp
add
mov
andl
and
adc
mov
arpl
mov
es
lret
mov
dec
sbb
xchg
mov
loopne
cwtl
dec
dec
xor
xchg
and
or
mov
add
rcll
rcrl
mov
pop
dec
add
add
daa
mov
ds
fcoms
and
add
cltd
sbb
or
sbb
rclb
push
xchg
sahf
push
fs
in
insl
dec
dec
add
mov
in
xchg
mov
outsl
in
xchg
push
jecxz
ret
in
cmp
test
xchg
and
ljmp
arpl
lock
in
push
outsb
in
add
add
jmp
aaa
cmc
lret
sbb
cmpsb
lods
cmp
mov
outsl
in
xchg
cwtl
sub
aas
pop
in
mov
adc
nop
adc
push
pusha
xchg
and
add
sub
mov
sbb
add
and
dec
push
fs
imul
jbe
dec
and
pop
adc
outsb
add
repnz
sbb
add
sub
dec
sbb
adc
add
in
sub
push
pop
sbb
outsb
push
gs
pop
and
loop
test
sbb
xor
jbe
in
in
xchg
or
lds
and
int3
movsb
pusha
dec
sbb
call
lods
jo
and
adc
jecxz
cli
imul
dec
sub
add
sbb
clc
xchg
jecxz
shrl
repz
sbb
ja
inc
jb
adc
scas
adc
mov
aad
lods
adc
loop
inc
jp
adc
mov
mov
sbb
jae
add
scas
mov
push
rcrb
jp
ret
mov
sbb
push
jno
andl
mov
and
add
cld
dec
lret
and
test
sbb
std
sbb
fs
sti
adc
jg
mov
movsb
mov
nop
movsb
pop
lret
stos
sub
pop
arpl
mov
fwait
enter
mov
mov
mov
popa
xor
mov
popa
incl
and
xchg
xchg
imul
add
outsb
fildll
lret
lock
xchg
mov
add
jp
insl
xchg
push
xchg
popf
xor
test
inc
test
jmp
mov
cbtw
and
test
xor
sahf
and
cmp
add
decl
les
dec
add
out
outsb
adc
adc
in
movsb
xchg
push
in
into
xchg
and
add
xchg
fsts
and
addr16
xchg
and
scas
push
fiadds
jb
into
add
adc
insl
in
xchg
scas
scas
add
and
xor
ljmp
and
xor
in
jle
nop
sti
jmp
dec
adc
sbb
dec
xor
and
in
jmp
xchg
add
xlat
test
pusha
or
sub
repz
push
inc
cmpsl
test
test
test
scas
jg
outsb
mov
and
mov
jmp
push
in
in
cmpl
xchg
mov
sbb
cmp
mov
xorb
mov
sahf
insb
add
mov
jp
aaa
cmp
add
add
dec
insl
and
mov
xor
popa
sub
lcall
and
pop
sahf
cmp
push
adc
jecxz
sub
sbb
and
xchg
mov
out
pop
or
movsl
pop
push
and
adc
mov
stc
imul
xchg
push
xchg
pop
pop
inc
sbb
sub
add
add
add
sub
adc
push
xor
mov
sbb
cld
or
sbb
jnp
xchg
or
testb
stos
xchg
xchg
and
sub
nop
stos
mov
dec
mov
mov
mov
and
pop
xchg
xor
xchg
xchg
lea
mov
stos
pop
xchg
and
pop
hlt
jns
mov
add
add
cltd
pusha
popa
or
icebp
jns
or
in
sarb
ss
cmpsl
cld
in
xchg
and
bound
mov
cli
out
xchg
scas
mov
clc
xchg
and
pop
xor
repnz
movd
and
cs
pop
loop
loop
insb
in
dec
ljmp
mov
add
aad
sub
sub
sbb
pusha
outsb
jbe
push
inc
xchg
jmp
add
and
jno
xor
dec
hlt
addr16
pop
pop
xchg
outsb
test
and
ffreep
pop
jp
xchg
xchg
nop
sti
mov
jmp
sti
js
pop
fistpll
sub
imul
js
pop
fbstp
addl
add
sub
push
lods
add
push
in
cmp
inc
push
andb
in
bound
pop
adc
outsb
add
sub
dec
jge
dec
scas
and
pop
inc
bound
rclb
insb
adcl
insb
repnz
or
out
insb
add
xchg
inc
push
dec
push
mov
pop
hlt
out
dec
xchg
mov
inc
add
add
into
insb
outsb
xchg
xlat
pop
dec
push
daa
dec
xchg
mov
dec
mov
or
inc
xchg
cmp
jecxz
pop
imul
aas
mov
mov
pop
lea
xor
pop
ds
hlt
scas
and
push
jge
mov
out
sbb
xchg
sub
xchg
sub
mov
add
add
jle
sub
frstpm(287
add
xchg
pop
xchg
sub
xor
pop
sbb
icebp
push
and
movl
adc
mov
adc
and
jb
and
sbb
out
sbb
xor
stos
test
mov
cs
sbb
add
shl
imul
add
lcall
lret
and
mov
push
and
inc
xor
xchg
repnz
std
stos
aaa
in
sahf
pop
mov
jbe
scas
xor
jb
pop
mov
jns
push
mov
mov
cmp
xor
xchg
out
xchg
mov
aam
test
jp
ds
jb
jle
jle
add
add
outsl
in
xchg
test
add
lcall
mov
push
xchg
sti
and
repz
fwait
cmp
sti
push
out
sbb
dec
push
orl
out
add
fwait
dec
ds
pop
sahf
jecxz
push
jp
add
jp
push
and
cld
mov
and
test
fildl
push
add
add
mov
inc
insb
push
jo
movsb
xchg
das
push
push
and
and
push
jmp
or
push
inc
xchg
xor
mov
jp
jnp
inc
and
mov
adc
and
sahf
insl
rorb
inc
and
insb
outsb
xchg
adc
mov
mov
add
add
pop
fninit
call
dec
and
add
add
insl
add
mov
sbb
pop
xchg
xor
and
stc
push
and
repnz
add
mov
out
movl
stos
push
in
gs
scas
add
xchg
jo
jp
insl
scas
mov
dec
cmc
sbb
xor
aad
inc
add
loop
push
add
add
inc
add
nop
loop
push
adc
xchg
shll
mov
lret
in
xchg
aad
fists
shlb
mov
inc
imul
mov
sub
sub
rclb
add
lods
mov
mov
mov
in
adc
ret
outsb
jbe
inc
jle
add
add
lock
aad
jo
out
xchg
scas
mov
in
hlt
sti
xor
add
test
push
test
loope
scas
xchg
or
push
push
xchg
and
jmp
movsb
mov
in
fldenv
insl
in
xchg
cmpsb
adc
xor
negl
es
pop
add
repnz
or
rcrl
add
add
lods
stos
aaa
mov
cltd
fwait
ja
test
test
sbb
aas
ficoms
mov
or
sub
fcoml
cmpl
cwtl
fwait
ja
in
inc
cld
mov
mov
or
insl
es
ret
jb
cmp
arpl
jo
inc
sarb
mov
sbb
cmc
dec
adc
add
mov
inc
std
hlt
rcrb
adc
loop
aas
xchg
test
push
mov
and
and
fdivrs
rclb
mov
lcall
cmp
pop
sub
jge
cmp
push
and
scas
scas
pop
add
jle
jp
xchg
adc
lods
jo
je
or
scas
cli
imul
push
add
add
das
xchg
test
push
loopne
inc
inc
xchg
mov
push
cwtl
das
nop
lret
daa
add
mov
xor
fists
jge
or
gs
xchg
and
jae
adc
inc
nop
pop
mov
lods
push
add
lea
rorb
repnz
adc
and
add
stos
adc
call
mov
xchg
or
out
or
adc
or
lock
stos
lret
cmc
sbb
notl
push
ds
push
test
in
adc
jns
ficoml
bound
inc
dec
pop
pop
inc
es
sub
stos
cmp
jge
sbb
adc
test
add
add
dec
in
mov
and
sub
ljmp
xchg
mov
sbb
adc
dec
int
mov
dec
loope
repz
in
xchg
inc
sub
insl
popf
and
dec
add
or
in
jp
xchg
dec
scas
add
out
insl
push
movsb
fimuls
and
aas
and
shl
sub
add
add
fcomps
fcomip
nop
jo
orb
insb
pop
fs
sti
jle
outsb
lret
push
inc
outsl
in
scas
lret
mov
in
dec
sbb
jae
xorl
outsb
mov
divb
cmp
xchg
cmp
dec
push
hlt
push
dec
sub
lods
sbb
lods
push
dec
std
dec
and
add
add
lea
xchg
xchg
adc
imul
and
adc
imul
aad
mov
mov
addr16
jecxz
jp
in
sbb
or
and
roll
nop
es
aam
fdiv
pop
and
and
rcll
xchg
call
ds
pop
jae
push
add
add
mov
sti
popa
jg
cld
cmpsb
xchg
push
sbb
arpl
or
push
or
cld
pop
ljmp
xchg
and
test
and
xchg
xchg
push
fninit
mov
xchg
xchg
pop
sbb
int3
sub
mov
lods
scas
xchg
pop
or
mov
addb
mov
popl
xchg
xchg
add
add
mov
test
sbb
push
add
inc
in
push
lods
xor
mov
sahf
inc
in
mov
insb
out
xchg
test
cmp
inc
lahf
imul
dec
jbe
in
imul
pop
inc
cbtw
mov
insb
out
mov
insb
sub
jp
xchg
insl
outsb
pop
xchg
jno
add
mov
cmp
test
out
es
in
and
dec
icebp
pop
sub
je
sahf
push
and
dec
cltd
repnz
lcall
xor
sub
lods
add
daa
pop
les
jecxz
pop
adc
les
push
xchg
xchg
cmp
mul
js
jmp
dec
sbb
pop
xor
add
add
mov
jb
popf
push
jbe
test
imul
xchg
sub
fildl
das
subl
mov
jg
das
pop
push
test
and
sub
orb
in
sbb
cmc
dec
sbb
cmp
in
lds
mov
add
pop
mov
shrb
ret
fs
sbb
add
lret
mov
and
mov
and
mov
sub
in
movsl
call
mov
sbb
push
pop
cmp
out
adcb
insb
add
mov
aaa
sbb
shlb
pop
lods
cmp
clc
mov
inc
out
mov
xchg
jl
outsl
jb
ret
pop
sbb
sti
pop
and
add
ret
or
insb
xchg
xchg
sti
inc
add
rcrl
cmp
pop
xchg
pushf
inc
in
mov
lods
mov
test
mov
push
adc
sbb
xchg
int
arpl
cwtl
movsb
xchg
xchg
and
lret
mov
mov
mov
ret
sub
pushf
into
pushl
jl
popl
add
sarl
push
xchg
and
or
nop
test
shl
xchg
pushf
insl
lock
in
dec
adc
aad
nop
mov
outsb
push
sbb
shll
and
leave
pop
stc
cmp
or
and
call
in
sub
pushf
and
xor
cmpsb
out
popa
dec
dec
pushf
lds
mov
outsb
sbb
mov
xchg
lcall
rcr
gs
dec
sub
out
popf
addr16
popf
test
imul
sbb
cmp
pop
cltd
dec
in
stc
mov
in
cli
imul
pusha
jecxz
daa
jbe
push
jg
mov
xchg
test
cmp
lret
pop
fcoms
jo
lcall
add
add
xor
in
movsb
jmp
add
ret
arpl
out
sbb
dec
std
mov
in
in
and
inc
lret
sub
xchg
xchg
mov
push
test
lret
xchg
and
inc
inc
imul
aad
dec
mov
out
fidivrl
mov
aas
or
cmp
outsb
add
add
cmpsl
in
mov
xchg
jl
imul
nop
insb
clc
cwtl
outsl
out
dec
xchg
jl
xchg
sti
roll
xchg
cli
stc
jnp
shlb
imul
xchg
jl
xchg
test
fnstcw
add
and
pushf
add
lret
xchg
sti
pop
add
add
jg
push
test
mov
cmp
jl
pop
loop
decl
xchg
sti
sbb
add
pop
adc
dec
and
jb
insb
inc
lcall
fldt
inc
testl
not
mov
jge
mov
mov
gs
mov
mov
add
add
scas
dec
and
insl
insl
xchg
and
sbb
repz
push
inc
pop
adc
and
adc
dec
add
lcall
fiadds
jbe
and
lret
loope
ss
pushf
jge
fistl
cmp
popf
adc
xchg
pop
in
inc
out
nop
test
jecxz
test
inc
inc
mov
mov
add
add
das
outsb
mov
mov
lahf
cmp
xchg
and
xchg
lcall
add
pop
jmp
jo
sbb
xlat
test
dec
and
enter
sub
out
push
outsb
add
lret
mov
pop
and
mov
fsubrs
inc
sbb
sbb
in
gs
mov
sti
hlt
loop
sub
dec
dec
sub
lods
sbb
add
mov
dec
sub
dec
dec
sub
or
or
pop
xchg
bound
pop
mov
movsb
lods
sub
and
movsb
popl
xchg
cli
xchg
jl
dec
jbe
pop
sti
xchg
jl
dec
jb
push
sti
xchg
jl
dec
jle
dec
sti
xchg
jl
dec
fs
sti
xchg
jl
leave
jle
hlt
cli
addl
add
lds
mov
sti
imul
mov
scas
jecxz
xchg
insb
add
mov
insb
ret
fdivrs
in
jb
insb
add
pop
into
push
scas
adc
pusha
incl
xchg
stos
pop
or
mov
sbb
xchg
jge
mov
and
jg
dec
lea
mov
inc
or
hlt
xor
add
scas
hlt
cmp
inc
bound
xchg
and
xchg
adc
and
mov
addb
call
imul
js
sub
xchg
jle
mov
and
jnp
push
and
push
rcrb
rcrl
jecxz
cmpsb
push
mov
mov
xchg
mov
in
add
add
or
xchg
push
mov
inc
inc
and
or
xor
lods
sahf
sub
mov
sahf
xor
imul
xor
jge
push
lcall
in
xchg
idivb
add
and
xchg
and
insl
in
xchg
sbb
outsb
in
lahf
sbb
ds
add
add
and
lods
ficompl
lcall
jnp
in
add
and
outsb
std
movsb
and
or
inc
lret
jg
lock
add
mov
mov
orl
mov
xor
and
jmp
adc
fwait
imul
push
jg
push
pop
pop
sbb
ja
outsb
add
add
sahf
movsb
sub
inc
repz
pop
jnp
mov
sbb
fwait
lahf
insl
add
fimuls
mov
and
xchg
add
stos
add
or
xchg
outsb
add
jb
mov
ds
pop
cltd
mov
pop
popa
mov
out
sbb
jmp
add
lods
in
inc
jp
cmp
dec
pop
pop
in
xchg
imul
stc
test
add
add
call
xchg
xchg
mov
insb
add
enter
xor
push
outsb
dec
out
add
adc
insb
add
stc
xor
and
movsb
prefetchwt1
adc
xchg
insl
inc
arpl
adc
shl
roll
pop
loopne
mov
sbb
mov
add
push
into
inc
jg
inc
add
xchg
and
test
jl
stos
xchg
and
imul
xchg
or
xchg
or
push
pop
add
xchg
roll
dec
sbb
adc
and
outsb
outsb
pop
xor
adc
imul
mov
or
test
inc
add
add
test
loope
jl
in
and
mov
and
jecxz
mov
insl
in
xchg
cmp
popf
xor
dec
jno
xor
in
xchg
mov
je
dec
jp
cmp
dec
ljmp
sub
adc
in
mov
jecxz
jbe
ss
repnz
insl
in
into
test
popa
xchg
and
loop
add
add
mov
sbb
shld
cmpsb
movsl
dec
test
sub
mov
test
add
daa
out
xchg
movsl
nop
sti
jmp
and
outsb
add
lods
dec
cmpb
dec
push
dec
in
and
std
and
das
mov
ljmp
jg
js
test
pop
xchg
mov
push
pop
push
dec
inc
add
dec
cmp
add
sub
dec
xchg
jg
outsb
sti
ret
loopne
outsl
daa
cmp
xchg
and
and
rol
jp
jo
int3
movsb
scas
sti
and
pop
adc
mov
aam
xchg
mov
lret
mov
out
xchg
pop
lods
pop
cmp
pop
xchg
test
add
xchg
mov
push
dec
mov
add
jl
push
xor
pusha
mov
ds
mov
ret
mov
add
je
movb
xor
repz
xchg
xchg
pop
mov
xchg
sbb
inc
xchg
fisttpl
or
add
jnp
and
pop
sbb
pop
scas
jge
and
push
lcall
xchg
add
test
and
cwtl
lods
cmpsb
loop
push
es
jp
and
xor
cmp
test
xchg
mov
add
and
inc
add
insw
cmp
movsl
nop
mov
dec
jnp
fwait
dec
movsl
std
in
xchg
and
out
mov
dec
pusha
jbe
add
inc
lods
mov
in
mov
mov
std
stos
adc
mov
and
jecxz
in
sar
in
icebp
fsub
cmp
xor
je
adc
and
scas
movsb
inc
in
xchg
and
jmp
mov
dec
jle
in
jb
jl
jg
dec
outsb
dec
std
cmp
push
icebp
test
add
add
js
aaa
sbb
enter
jl
les
adcb
sub
cmp
and
jb
dec
sub
pushf
pop
jae
and
js
inc
add
jb
dec
sub
out
nop
xlat
insb
gs
or
into
xchg
leave
xchg
int
gs
xchg
movsl
jbe
les
add
xchg
mov
pop
inc
bound
fisubrl
jp
sbb
inc
data16
repz
and
cmc
push
and
push
mov
je
dec
jb
jmp
xor
adc
js
int
notb
incb
sub
push
mov
lea
leave
adc
cltd
mov
jecxz
cs
jge
enter
add
adc
cmp
and
push
mov
fwait
hlt
pop
lea
xchg
and
pop
xor
and
arpl
or
pop
jle
mov
xchg
stos
rcrb
out
mov
arpl
or
xchg
xor
jo
stos
test
cmp
faddl
rcr
dec
add
add
stos
fildl
clc
xchg
pushf
cmp
mov
add
loope
push
ud0
inc
xchg
or
insl
data16
imul
jl
lods
mov
inc
outsl
push
mov
sbb
push
bnd
mov
mov
adc
xchg
repz
jp
jnp
addb
add
jae
sbb
repnz
pop
inc
mov
sub
push
mov
dec
test
xchg
mov
iret
nop
xor
sbb
pop
imul
xchg
jl
loope
test
add
cmp
mov
adc
jecxz
xchg
or
cmp
fsubrs
leave
out
jae
cmp
add
add
mov
push
addl
sti
clc
inc
popa
sub
outsb
add
out
xchg
mov
push
cmpsb
out
mov
xor
xchg
mov
pop
addb
bound
clc
lods
out
out
daa
in
call
and
cmp
add
dec
ja
and
in
add
add
lock
outsb
lcall
jno
mov
rcrl
mov
mov
les
mov
add
ja
divl
adc
mov
lods
cmp
push
mov
dec
jle
or
dec
and
push
sbb
add
arpl
jg
push
inc
lcall
add
add
and
mov
pusha
fcmovnu
enter
xor
out
mov
mov
repnz
scas
iret
test
enter
jecxz
sti
dec
or
ljmp
and
inc
add
jp
sbb
xor
inc
rorb
sti
mov
shrl
cmp
dec
test
or
or
dec
add
add
std
lods
pop
movsl
subb
adc
mov
movsl
adc
push
insl
xor
call
xchg
mov
ret
cs
outsb
fucomp
push
cmpsb
fistl
in
stc
aam
inc
adc
jbe
sub
push
pusha
xor
insb
stos
xchg
and
out
in
xchg
and
and
add
add
lds
in
xchg
lods
aaa
data16
dec
jmp
adc
and
jecxz
inc
lods
lahf
je
cmp
nop
imul
cmc
insb
add
and
mov
push
data16
and
push
lret
test
sub
decl
in
call
inc
push
loop
jmp
sub
in
xchg
stos
insl
cmp
lock
add
jecxz
aaa
andb
sahf
cltd
lea
sub
mov
aaa
fiadds
das
stos
cmp
sub
dec
pop
lods
movsl
jo
inc
push
push
or
or
lods
mov
insb
adc
mov
mov
bound
mov
push
mov
aad
dec
jbe
add
add
push
cmp
imul
cmpb
fbstp
fiadds
fimull
lods
add
push
xchg
mov
pop
mov
shrl
lcall
repz
dec
in
mov
inc
movsb
pop
insl
xchg
adc
pop
insl
and
test
stos
lds
add
sbb
gs
cmp
mov
stos
mov
rorl
loope
mov
push
dec
mov
leave
testl
and
push
lret
dec
ret
mov
or
push
xchg
and
pop
lea
jecxz
mov
test
or
xchg
pop
xchg
mov
into
cltd
cmp
add
jp
xchg
lahf
stos
inc
or
add
shlb
jge
and
stos
test
adc
in
push
bound
pop
sub
pop
in
xlat
stos
loope
iret
in
psubsb
fdivs
in
push
add
push
add
andl
and
stos
daa
in
insb
jne
aad
cmp
and
xchg
sub
fisubl
or
outsb
xchg
aaa
scas
popa
push
stc
jge
add
add
sbb
mov
inc
cs
inc
andb
push
dec
gs
cwtl
sahf
ds
ds
in
mov
insl
add
sub
aaa
xor
jecxz
add
add
push
pushf
add
ret
sti
push
jg
js
and
jo
sahf
and
ljmp
mov
add
call
insl
xchg
popf
sub
test
in
add
aaa
push
cmp
insb
xchg
push
movq
xchg
lock
jle
add
mov
pop
pop
or
lahf
mov
les
push
inc
outsb
add
mov
fs
cmc
pop
or
add
xlat
fbld
xlat
mov
cmpsl
lds
xchg
jle
cmpsl
std
mov
and
push
mov
xchg
add
pop
push
clc
pop
or
scas
jge
sbb
js
sub
ja
sub
xchg
cmp
je
movaps
and
mov
and
inc
xchg
pushf
inc
or
gs
addb
add
xchg
pusha
sahf
xor
push
movsb
gs
xor
sahf
rcr
test
sahf
rcr
movsl
sahf
pop
scas
and
test
sbb
or
xchg
and
pop
shll
rcrb
scas
push
add
xchg
andl
insl
out
enter
add
add
jle
sub
sbb
imul
xchg
es
in
xorl
sub
cmpsb
fdivrs
lods
xchg
cmpsb
test
pop
sub
out
xlat
and
imul
and
imul
lret
in
mov
push
mov
add
dec
in
aad
sbb
call
outsl
imul
pop
das
xchg
lea
push
jb
adc
inc
and
add
pusha
xchg
sub
and
roll
out
in
fistpll
xchg
mov
and
push
cmp
jbe
cmp
movsb
and
mov
lock
jo
add
and
sti
push
pusha
test
sub
lea
push
pusha
out
jp
xchg
das
or
aaa
es
inc
js
sub
mov
pushf
sti
shrl
or
hlt
jecxz
jbe
add
mov
xchg
add
mov
addb
jp
xchg
jl
add
add
add
add
mov
or
xor
insb
outsb
mov
push
pop
aad
jecxz
adc
dec
or
adc
mov
jge
in
jp
out
mov
adc
in
ja
add
add
sbb
fwait
xlat
ret
mov
lcall
add
add
and
inc
daa
fwait
mov
aas
aad
mov
aas
aad
aad
dec
xlat
sbb
lods
adc
pop
dec
lcall
shll
push
test
xchg
outsb
xchg
mov
lcall
mov
dec
mov
call
outsb
insl
sbb
scas
sbb
ret
or
movsb
fiaddl
outsb
nop
in
add
add
repnz
fstps
jle
xchg
sbbl
adc
sbb
in
xor
pop
shll
outsb
xor
insl
add
jp
sub
stc
movd
xchg
outsb
mov
inc
imull
inc
or
and
jecxz
mov
clc
lcall
icebp
push
ljmp
push
ljmp
pop
ljmp
add
pop
sub
dec
imul
inc
push
jge
inc
mov
insl
and
dec
mov
pop
add
xchg
insl
jmp
add
push
jge
subb
outsb
add
cmc
addb
and
or
sub
push
sbb
sbb
jecxz
pop
jl
add
push
push
jo
add
xchg
jne
xor
xor
mov
xchg
jns
lods
call
popa
or
lods
dec
int
mov
add
adc
insb
daa
outsb
cmpsb
jg
mov
sbb
xchg
out
mov
insb
mov
pop
hlt
xchg
jle
jg
push
insb
or
fsubrl
xchg
stc
and
cli
shll
jo
adc
adc
in
add
add
jge
inc
mov
pop
out
mov
and
adc
ret
fidivs
mov
rcrb
add
adc
mov
sub
loop
inc
in
gs
adc
fstps
inc
mov
cmp
jge
dec
or
push
in
mov
inc
in
mov
or
add
add
jbe
xor
mov
or
mov
lock
push
clc
les
ss
add
push
addr16
jl
mov
pop
inc
push
repz
push
mov
rcrb
or
outsb
and
gs
jg
push
aam
jmp
mov
and
mov
add
add
pop
pop
xchg
and
mov
in
sbb
test
mull
call
pop
fs
outsb
xchg
dec
aaa
mov
xorb
xor
or
lods
xor
sahf
and
push
addl
mov
push
xchg
xor
pop
insb
add
lds
jmp
je
or
popl
add
or
or
cmp
outsb
jp
or
inc
or
lds
mov
in
add
inc
xchg
jns
imul
xchg
push
jecxz
fwait
jns
push
lock
mov
shll
rolb
jp
sbb
test
dec
xor
int
push
je
mov
daa
and
add
add
xor
pop
jo
adc
insl
sti
test
aam
insb
push
or
pop
aaa
int
je
lcall
dec
movsb
mov
divb
mov
popa
add
add
cmp
adcb
das
xchg
mov
pop
push
xchg
loopne
inc
xchg
push
pop
push
loopne
xchg
dec
test
push
cs
loopne
mov
lcall
add
xchg
jle
sti
stos
inc
pushf
cmp
dec
sub
inc
jge
or
in
sti
jmp
imul
inc
xchg
iret
pop
std
lods
adc
pop
popa
sbb
pop
pop
inc
or
rorb
movsb
adc
dec
subl
iret
mov
les
js
inc
cmpsl
js
inc
mov
sbb
mov
scas
add
add
and
mov
mov
or
cmp
mov
pop
sbb
pop
not
and
add
xor
ljmp
sbb
ljmp
mov
bound
mov
cs
hlt
fwait
adc
sbb
dec
std
push
cmpsb
pusha
popa
add
add
nop
in
adc
dec
mov
cltd
and
jnp
lcall
cwtl
lcall
jbe
jle
add
imul
daa
outsb
push
xchg
and
dec
or
sbb
adc
push
add
pop
repz
sbb
cld
and
adc
add
subl
sub
cmpl
jl
jmp
jo
mov
sub
popl
dec
jo
scas
cmp
inc
lea
daa
sti
mov
js
mov
dec
pusha
push
mov
dec
xor
cltd
mov
stc
mov
jnp
je
or
lods
rorb
jb
in
xchg
jb
out
xchg
pusha
and
add
mov
add
cmp
pop
mov
pop
pop
sti
stos
pop
sahf
cmp
mov
sahf
cmp
cmp
cli
mov
cltd
loope
mov
sub
adc
xchg
orb
cli
or
dec
insb
shrb
pop
shr
jae
test
push
sbb
dec
hlt
mov
dec
insb
sti
add
add
sbb
mov
lret
push
add
addl
jno
xchg
fnstenv
mov
mov
pop
xchg
dec
push
ss
and
bnd
sub
inc
mov
cmpsl
mov
sti
test
xchg
fsts
repz
mov
dec
cld
sbb
add
add
add
or
xchg
jmp
and
xchg
xor
pop
rolb
add
sub
xchg
and
outsb
jbe
add
test
out
in
cmpsb
and
inc
popf
xor
in
cmpsl
bound
jecxz
outsb
dec
std
xor
in
cmp
or
pop
push
and
push
and
insl
in
aam
and
and
add
int3
adc
sbb
inc
call
and
aaa
jbe
dec
and
xchg
and
sub
sub
bound
in
xchg
and
nop
sti
aas
cmp
inc
aas
fdivp
movsb
das
outsb
sti
sbb
inc
fdivp
xchg
jmp
xor
mov
mov
inc
out
lods
jns
add
add
in
cmp
nop
sti
mov
adc
push
add
fcmovnbe
nop
mov
fs
and
insl
in
lcall
ret
jns
std
inc
outsl
mov
in
xchg
push
mov
outsl
mov
and
xor
loop
in
xchg
arpl
add
ret
lods
pop
push
push
insb
push
enter
xchg
dec
in
jp
adc
idivb
add
in
mov
xchg
cmp
cli
push
cwtl
mov
and
in
sub
insl
add
lahf
aas
add
pop
or
sti
clc
xchg
push
adc
mov
rorl
or
jecxz
mov
push
jno
add
out
dec
cld
rorl
push
bound
mov
addl
add
add
pusha
push
push
xchg
lret
xchg
arpl
add
scas
and
fadds
lcall
pop
xchg
stos
testb
xchg
clc
lahf
je
lock
pop
orl
movsl
or
inc
xor
movl
test
dec
outsb
inc
lock
mov
sbb
xor
pop
loopne
ds
add
add
xchg
movsl
adc
in
or
subl
adc
pop
shll
andl
sub
adc
cwtl
std
adc
ljmp
cmp
ds
rcrl
cmpsb
adc
outsb
cwtd
or
push
std
jecxz
add
aad
ljmp
add
xchg
and
cmp
out
inc
bound
xchg
and
jmp
mov
jecxz
adc
repnz
add
mov
outsb
pop
js
test
dec
out
fisubl
dec
frstor
repnz
adc
pop
mov
test
dec
sbb
and
push
iret
test
and
adc
sbb
xchg
add
add
and
dec
rorl
inc
rorl
in
jnp
insl
add
or
dec
sbb
pop
aas
ljmp
xchg
jge
add
lcall
jg
es
xchg
lea
jno
mov
pop
xorl
sbbl
xchg
xlat
inc
and
sub
sbb
inc
pop
in
add
add
jge
adc
subl
xchg
xor
sti
push
add
inc
mov
pop
outsb
jp
pusha
and
jmp
sbb
pop
cmc
xor
test
and
adc
insb
mov
out
push
xchg
and
lret
addb
lret
and
ret
sub
or
add
in
outsl
pop
xchg
lock
sub
xchg
repnz
sahf
xchg
pop
pop
adc
rorb
xchg
cli
les
test
and
or
jmp
add
rcrb
in
in
int3
mov
dec
int
and
test
xchg
and
addb
push
mov
mov
add
add
pop
jecxz
popa
sbb
in
call
inc
stc
pusha
xchg
and
pop
sti
aas
mul
mov
jle
cmp
cmp
push
push
and
jb
pop
pop
push
and
jbe
or
push
je
push
push
xchg
cmp
in
or
dec
aad
jle
jo
push
jbe
pop
out
mov
add
add
dec
adc
adc
xor
loop
xchg
and
cld
jno
inc
mov
outsb
popf
jb
push
add
mov
outsb
popl
push
aaa
mov
rorb
cmp
pop
repnz
inc
dec
outsb
loope
pop
bound
insb
pushf
and
in
cmp
ljmp
arpl
jmp
push
jbe
dec
and
add
subb
mov
movsl
push
add
mov
leave
pop
fistpll
test
and
adc
inc
insl
dec
sbb
lds
push
sbb
jo
inc
mov
jbe
xchg
mov
push
jae
dec
sub
movsb
outsl
push
sarl
add
ret
insl
and
rcrl
push
out
ja
sub
inc
jp
in
ja
adc
inc
jp
in
ja
or
imul
inc
cmp
and
pop
push
cli
jmp
push
dec
loope
dec
loope
mov
and
das
test
pop
add
idivb
test
or
xchg
fsubl
push
xor
arpl
jp
popa
pop
xchg
ret
lock
icebp
test
xor
in
cmp
adc
dec
xchg
jns
pop
sbb
dec
pop
add
inc
xchg
and
ds
mov
jge
or
pop
fisttps
loopne
sbb
sbb
fwait
and
outsb
bound
xchg
outsb
inc
add
add
es
jns
xchg
mov
xor
xchg
mov
lret
outsb
adc
or
ljmp
lret
xchg
loope
lahf
adc
mov
outsb
in
push
icebp
in
or
xchg
cmp
outsb
data16
daa
ret
cwtl
push
in
jge
mov
xchg
stos
mov
in
push
nop
xchg
jo
idivl
add
push
imul
mov
or
stos
sbb
mov
mov
inc
and
mov
decl
hlt
sub
nop
jecxz
inc
nop
sti
ljmp
and
push
add
pop
dec
push
notl
add
fidivrs
dec
jle
das
and
aad
loope
xchg
dec
and
add
add
xchg
push
pop
xlat
stos
out
lea
popl
push
out
and
aaa
int
loope
dec
insb
add
adc
mov
int3
insb
add
hlt
sarl
in
dec
dec
insb
add
aaa
add
cwtl
dec
popa
nop
push
inc
outsb
pop
call
add
in
lea
mov
adc
inc
in
add
add
cmp
insb
dec
lret
cltd
xor
in
adc
jnp
ja
ds
push
ja
pusha
xchg
ds
sbb
push
sbb
and
sti
in
mov
clc
repz
daa
fists
or
jns
or
pop
xchg
cmp
add
cmp
mov
mov
add
test
xlat
xchg
and
test
xchg
adc
sbb
sub
xchg
mov
xchg
and
sbb
daa
pop
lock
mov
jns
push
notb
add
dec
push
nop
pushw
nop
adc
outsb
in
push
fwait
mov
xchg
and
leave
in
xchg
and
outsb
data16
mov
in
add
sbb
in
jno
jecxz
test
rcrw
jge
in
ljmp
js
cmpsb
iret
gs
xor
in
jbe
in
adc
in
imul
or
xchg
dec
and
add
cmp
outsl
out
bound
outsb
push
mov
in
fldt
in
lret
cmp
push
inc
push
in
fildl
in
mov
xor
mov
pop
add
loopne
outsb
pop
mov
jmp
push
add
jecxz
xchg
sub
dec
movsl
shlb
iret
fisubl
jo
andl
test
add
imul
pop
test
xchg
les
ja
je
dec
xchg
cmp
push
adc
dec
and
into
add
inc
mov
jecxz
xor
or
add
jno
sub
xor
mov
and
inc
inc
scas
push
mov
adc
add
or
mov
cmp
es
add
or
cld
mov
ret
xchg
sub
xchg
mov
mov
cmp
or
testb
xchg
jmp
mov
les
xchg
pop
adc
bound
or
push
shll
sub
lcall
std
sbb
jne
sbb
push
cli
mov
inc
inc
out
fsubrp
pop
fnstsw
sbb
bound
inc
mov
sbb
out
dec
outsl
dec
aas
jl
fldenv
shll
stc
stos
and
mov
adc
jns
pushf
sub
jge
sub
and
jne
and
test
pmulhuw
inc
cli
nop
cmp
popa
test
jg
nop
xchg
push
sbb
aad
cmp
ret
lcall
add
add
dec
nop
mov
jecxz
jbe
in
jbe
ljmp
sub
push
sub
sbb
lahf
or
out
jns
nop
sub
add
add
pop
add
sbb
nop
or
cmp
pop
ret
push
and
or
aas
and
int3
mov
sbb
mov
dec
inc
add
add
and
aaa
and
subl
mov
gs
jo
or
cmp
sbb
cmp
aas
dec
cmp
push
cmp
ret
cs
sti
ret
cs
sti
shrl
push
push
dec
repnz
call
imul
mov
dec
add
pop
jecxz
movswl
add
loop
add
xchg
sbb
xchg
pop
pop
ja
pop
pop
ja
add
jp
pop
ja
pop
pop
ja
pop
pop
push
jb
add
shll
outsl
jp
mov
sub
sbb
jno
jg
or
rcl
imul
add
or
sti
out
adc
dec
pop
repnz
jo
mov
jo
test
mov
cmp
lods
in
add
add
sbb
or
imul
iret
ficoms
xchg
or
add
jp
in
sbb
xchg
hlt
or
notb
sbb
adc
mov
stos
push
scas
or
xchg
shll
ljmp
pop
or
repnz
outsb
xchg
or
lcall
movsl
jmp
out
add
add
fcoml
or
bound
insb
dec
repz
jo
cmp
add
shrl
push
rorb
xchg
rcrl
adc
loopne
jecxz
push
xchg
mov
nop
in
cmc
dec
sbb
jne
sbb
jne
sbb
stos
pop
in
in
shlb
or
adc
dec
jmp
mov
xchg
xor
add
sahf
dec
sbb
stos
dec
sbb
movsl
dec
sbb
movsl
mov
nop
adc
inc
push
js
dec
in
pop
cmp
cmpsl
ret
in
gs
mov
xor
add
iret
sub
dec
jl
cmp
xchg
jno
fcomps
or
push
pop
in
adc
sti
and
jl
or
test
lret
movsb
dec
fs
cli
mov
add
dec
fcomps
or
dec
push
dec
inc
fmuls
push
test
jno
xor
jno
xlat
sbb
dec
fs
mov
je
out
sar
and
xor
jmp
cmp
dec
xchg
adc
dec
pusha
sti
lret
jno
inc
sbb
in
stc
mov
mov
mov
or
adc
add
rcl
movsb
imul
mov
cmp
js
lret
inc
sbb
push
cwtl
or
rcll
and
inc
adc
imul
sbb
adc
cmp
mov
insl
mov
les
ja
adc
ss
cmova
mov
pop
push
cmp
mov
movsl
daa
mov
and
add
loope
cmp
repnz
arpl
fildll
dec
sbb
btsl
repnz
sbb
in
cwtl
popl
push
loop
pop
or
loope
pop
ret
and
outsl
xchg
shl
xchg
daa
mov
insl
loope
adc
shrl
xlat
popf
pop
sub
or
icebp
sbb
add
xchg
and
ja
bound
enter
push
jns
add
lret
cmp
or
sub
sbb
jne
outsb
jae
mov
negl
push
jecxz
int
dec
outsb
fcoms
xor
xchg
shll
sahf
push
add
cli
pop
out
mov
dec
nop
push
fst
outsb
in
xchg
sahf
and
movsl
pushf
movsl
adc
aam
fnsave
popf
sub
data16
loop
outsb
add
cmp
add
pop
in
stc
lods
and
push
xchg
dec
sbb
adc
stos
out
pop
cmp
cmp
in
xchg
pushf
lods
sub
ljmp
scas
mov
and
mov
and
mov
and
jo
mov
mov
and
push
sbb
aaa
outsb
outsb
jb
dec
sbb
insl
dec
aaa
mov
push
adc
inc
arpl
popl
add
ja
rorl
das
and
pop
push
add
cld
ret
adc
sub
in
xlat
pusha
push
push
dec
sub
xchg
insb
je
lret
and
or
popl
sahf
xorl
cmp
push
pop
sub
scas
lds
subb
dec
push
or
xchg
daa
add
cmp
add
mov
jle
xchg
and
mov
push
pop
inc
push
ljmp
test
push
mov
sti
lds
adc
or
xchg
outsb
add
es
dec
je
fcoms
arpl
pop
pop
add
mov
cli
mov
sti
sub
fs
rcrb
sub
lcall
add
add
pop
int3
dec
mov
orl
push
xor
or
stc
test
test
xchg
mov
or
push
in
test
adc
mov
xchg
mov
pop
jle
fbld
xchg
xor
mov
jbe
mov
xor
jge
or
pop
add
add
ljmp
fisttpll
xchg
and
jmp
lret
in
xchg
and
in
dec
sahf
and
imul
mov
icebp
in
push
xor
xchg
int
std
xchg
and
in
fisubrl
push
xchg
and
outsb
pusha
lret
mov
popa
mov
mov
inc
nop
imul
add
aad
jae
xor
popa
in
sub
cmp
pop
dec
cmp
xor
pop
cli
xor
jecxz
fwait
or
and
std
ja
daa
ljmp
push
sahf
push
outsl
sub
outsl
xor
scas
ja
out
cmp
test
dec
push
aaa
outsb
jnp
push
add
gs
adc
mov
or
jg
dec
sti
add
add
and
jle
adc
pop
sarb
pop
insb
hlt
sub
insb
xor
cmp
add
mov
cmp
push
dec
cmp
ret
xchg
scas
xchg
sti
add
mov
mov
sbb
cmp
shl
adc
dec
sbb
addr16
rcrl
dec
cmp
push
jecxz
inc
insb
add
stc
dec
adc
ret
xchg
inc
into
sbb
add
cmovg
fildl
mov
and
xor
push
sbb
dec
insb
mov
das
add
in
iret
push
andps
push
or
addr16
jo
cmp
out
test
cmp
inc
cmp
in
and
pop
adc
push
jns
mov
add
jns
sbb
add
add
cmp
mov
test
xchg
sbb
lcall
inc
lcall
inc
mov
sbb
inc
mov
xor
dec
insl
push
and
jo
jmp
cli
sbb
lods
dec
ficoml
inc
sbb
inc
sbb
sbb
outsb
pop
aas
fmull
add
add
in
std
js
sbb
jb
test
daa
outsb
and
nop
sbb
and
xor
nop
stc
xchg
in
pop
and
in
les
nop
bound
sbbl
in
xchg
and
xor
xchg
lods
mov
in
out
mov
xchg
out
mov
mov
mov
add
scas
mov
mov
mov
add
int
and
int
and
push
jecxz
xchg
fistl
in
or
add
mov
jmp
lahf
jecxz
add
and
mov
lds
push
mov
cmp
xor
add
mov
loope
shll
outsb
fcmovb
sbb
ja
sbb
cmpsl
sub
xchg
and
cmp
add
xor
insl
jno
enter
mov
jecxz
adc
sti
das
cmp
inc
loop
test
add
gs
inc
xchg
into
sbb
xchg
and
add
adc
bsf
stc
dec
adc
hlt
push
inc
data16
inc
pop
xor
push
sub
pop
jo
mov
dec
pop
jo
mov
js
add
add
push
push
adc
lcall
jg
add
lret
sbb
orl
out
ret
xchg
dec
insb
pop
jmp
mov
ja
and
jle
inc
ja,pt
cld
mov
pop
xchg
sub
pop
adc
mov
pop
xchg
mov
pop
sbb
xor
or
sub
add
add
mov
or
push
or
scas
shrl
add
or
xchg
stos
dec
and
cli
lock
xlat
add
adc
xlat
js
push
adc
and
pop
lret
insl
mov
mov
ljmp
dec
sbb
mov
loop
scas
call
add
mov
dec
cmp
dec
xor
dec
cmp
dec
xor
cmp
or
aad
test
in
xchg
mov
scas
popf
data16
xchg
and
nop
ficoms
cmp
cmpb
jbe
xor
cwtl
scas
xchg
cmp
mov
inc
ds
repnz
add
adc
mov
add
call
sti
or
movsl
sub
dec
dec
sbb
sbb
pusha
add
dec
dec
adc
out
jo
pop
ds
iret
enter
xor
jo
and
mov
and
pop
mov
xor
lock
dec
adc
pop
dec
adc
jno
sti
mov
sub
push
cmp
pop
call
add
in
add
lods
test
jge
xchg
adc
repnz
add
aam
insb
jmp
loop
adc
mov
mov
xchg
imul
sbb
and
xchg
dec
jno,pn
add
shrl
pushf
mov
push
sbb
popa
loope
mov
jo
jnp
pop
fyl2xp1
xchg
cli
dec
push
cli
add
add
fucomip
sbb
add
or
rorl
lds
mov
adc
in
xor
and
mov
ljmpw
aam
ljmp
xchg
test
pop
aam
jo
movsl
cmp
divl
mov
data16
aam
into
sbb
xchg
mov
sbb
add
add
rorl
mov
jb
add
sbb
ret
mov
dec
gs
dec
adc
gs
fs
cmp
test
je
dec
insl
pusha
dec
cmp
mov
mov
into
inc
pop
and
push
ds
in
or
sbbl
pop
pusha
add
add
add
rolb
in
xchg
stos
sub
ljmp
push
mov
inc
sub
xchg
and
cmp
mov
jns
push
jmp
jecxz
inc
fldl
jo
dec
cmp
sub
mov
nop
add
movb
sub
pop
pop
sub
add
cmpsl
sub
aas
jge
xlat
push
outsl
sub
add
add
lds
in
ss
jg
aas
and
inc
xlat
je
sti
jl
sub
in
orb
sti
adc
jnp
cld
and
inc
int3
and
repz
mov
add
mov
je
sti
push
mov
mov
enter
sbb
push
aaa
xchg
rcl
add
add
adc
dec
std
inc
cmpsb
sbb
cmpsl
push
adc
xor
in
adc
push
data16
jle
dec
insb
mov
cld
fsts
sbb
inc
repnz
sub
adc
xor
inc
xchg
jne
jecxz
shl
sarb
add
addb
pop
pop
mov
lods
in
mov
dec
xchg
adc
add
icebp
shll
add
add
pop
xchg
shrb
insl
sbb
jmp
gs
push
mov
push
or
or
mov
pop
nop
lret
ficoms
rolb
mov
ss
mov
leave
or
mov
mov
mov
xchg
test
outsl
leave
into
outsl
ss
fcomip
mov
and
addr16
add
add
stc
outsl
outsb
dec
dec
mov
ss
stc
aam
pop
in
pop
mov
jb
inc
mov
inc
stos
mov
mov
insl
in
or
lods
xchg
or
outsb
in
out
in
cmc
cs
xchg
jae
testb
jecxz
inc
repz
xor
cs
adc
out
insl
test
xor
ljmp
ficompl
mov
in
xchg
imul
xchg
inc
insb
gs
arpl
popa
pop
and
popf
xchg
and
outsb
in
adc
popa
and
popa
pop
roll
add
in
push
add
stc
movsl
add
cmp
nop
sti
scas
movsl
test
inc
bound
stc
push
add
xchg
movsl
add
cli
cld
nop
sti
add
add
test
loop
pop
mov
mov
or
xchg
nop
sti
outsl
movsl
test
ret
mov
xlat
mov
rorb
mov
movsl
test
ret
mov
cmpsl
pop
movsl
add
jp
nop
sti
out
stos
test
sbbb
xchg
or
xchg
data16
xchg
ds
mov
lcall
cld
jge
cmp
ds
mov
xchg
shll
cmp
cmp
mov
mov
push
cmp
cmp
mov
mov
das
push
cmp
cmp
mov
lcall
cmp
cmp
mov
xchg
shll
cmp
mov
mov
mov
test
mov
fmuls
leave
cmpsb
sti
aam
cmp
add
push
pop
or
cmp
xchg
jne
push
sahf
cltd
cmpsl
mov
xchg
adc
pushf
cltd
cmpsl
push
lock
insl
es
lret
popf
test
lret
xchg
sahf
sub
sahf
jo
mov
inc
mov
add
add
rcrb
fcom
mov
sub
mov
pop
movl
xchg
and
movsb
push
pop
lcall
out
jge
push
xchg
insl
in
xchg
in
lods
xchg
out
mov
jge
and
cmp
xchg
and
xchg
fists
in
add
nop
in
add
ljmp
insl
in
add
add
icebp
insl
ljmpw
xor
add
loopne
lcall
std
sbb
nop
nop
and
mov
jp
add
push
add
arpl
inc
roll
inc
out
xchg
in
out
add
sub
call
jo
out
push
add
mov
loope
mov
and
les
add
subb
jge
and
aas
pusha
insb
mov
shrl
or
jns
insl
fs
pop
sub
and
insb
add
mov
cmp
xor
fs
stos
outsl
xchg
push
add
jns
sti
rcrl
xchg
aaa
mov
out
inc
cmp
pop
dec
fmull
add
add
fldcw
adc
pop
lcall
add
adc
stos
xchg
out
xlat
pop
iret
jnp
add
jle
lock
sub
xchg
or
pop
mov
cmp
xchg
mov
pop
insl
sub
je
jecxz
mov
rclb
mov
je
ret
mov
jbe
sbb
jne
mov
push
loop
repz
stos
repz
add
aad
les
js,pn
fwait
aad
stos
inc
fadds
or
dec
cmpsl
in
xchg
stos
push
les
or
aam
repnz
outsb
xchg
cmp
push
mov
add
adc
ds
mov
mov
push
sub
aad
mov
push
add
add
xchg
mov
outsb
add
repnz
ret
xor
sub
in
ss
and
mov
pop
mov
int
data16
or
dec
leave
sbb
dec
or
add
outsb
ds
cmp
mov
fwait
int3
pop
xchg
inc
aas
pop
in
xchg
mov
jp
cmpsb
in
insl
pusha
fidivrl
mov
add
add
sub
jae
sub
insl
pusha
test
imulb
sub
add
fs
xor
adc
xor
jp
dec
xchg
jecxz
xorb
in
push
dec
sti
rclb
sti
sub
out
xor
fs
add
mov
insb
add
sahf
popf
push
inc
push
mov
add
jno
jecxz
cmp
sti
mov
sub
les
jmp
and
in
jnp
sub
jae
insb
xchg
hlt
push
mov
daa
out
addr16
xchg
cmp
int
jnp
xor
and
rolb
sbb
add
bswap
mov
jecxz
repnz
jno
cs
xchg
mov
mov
ja
add
add
gs
in
jns
ds
mov
movups
adc
mov
xlat
andnps
faddl
inc
popa
rclb
xor
cmpb
andb
mov
xlat
push
loopne
out
mov
aaa
jecxz
or
sbb
daa
xchg
or
and
mov
or
sbb
loop
call
add
add
sbb
fstl
cwtl
xor
xchg
out
stc
cmc
pop
xchg
cwtl
or
daa
xchg
sub
add
scas
dec
fisubl
aam
test
and
mov
mov
stos
mov
pop
leave
inc
ljmp
mov
mov
pop
push
jb
sbb
xchg
scas
add
add
and
in
in
xor
lods
repnz
sbb
sub
inc
and
in
push
cmpsb
dec
popf
xchg
and
loop
aad
loope
mov
inc
ja
xchg
and
xor
jmp
sub
fisubrs
sbb
ret
and
cmp
push
mov
and
in
movsl
inc
sbb
push
add
add
add
dec
add
and
ljmp
in
js
insb
add
loope
and
outsb
add
dec
adc
and
or
and
std
add
and
jle
das
stos
addb
xor
pop
push
popl
jp
jbe
dec
adc
and
add
aad
out
jae
loope
xchg
cmp
push
mov
xor
xor
sbb
icebp
pusha
dec
pop
scas
sbb
and
cli
inc
pop
call
imul
adc
sub
mov
jp
push
cmp
ds
cs
cs
les
aaa
cmp
cmp
dec
test
add
xchg
ds
mov
xchg
pop
dec
mov
insb
lcall
add
jmp
inc
mov
and
add
lret
xchg
and
cs
xchg
repnz
movsl
cwtl
pop
sub
aam
test
and
xchg
xor
test
loop
leave
lret
add
lret
dec
movsl
test
pop
pop
rorb
jne
lea
lcall
push
hlt
test
adc
jl
mov
inc
loop
mov
xchg
and
mov
mov
and
xchg
mov
inc
inc
cmp
xchg
fdivrp
adc
dec
roll
add
inc
cltd
sub
dec
mov
jecxz
xchg
mov
nop
ljmp
sub
cmp
loop
jno
imul
cwtl
loope
push
and
mov
mov
outsb
in
xchg
cwtl
jmp
in
inc
cltd
jmp
in
and
in
jbe
fwait
xchg
outsb
popa
daa
pusha
imul
fimull
mov
loope
add
add
jno
nop
fwait
push
outsb
add
cmpsb
in
sti
sub
aas
push
outsl
lods
iret
or
push
sti
jg
adc
sub
xchg
es
add
sub
mov
sub
mov
dec
inc
in
inc
cmp
pusha
subb
dec
and
mov
xor
add
pop
xor
sub
les
lods
cmpsl
add
sub
jo
add
fisttpl
ret
dec
and
lods
xlat
add
sub
xchg
xor
sbb
outsb
test
or
fwait
xchg
push
insb
mov
jmp
cmpsb
pop
or
inc
ja
xchg
cmp
fsqrt
sbbl
cli
insl
pop
ficoml
rolb
add
xchg
aaa
sub
fimuls
sub
xor
add
add
push
insb
shl
jg
or
repnz
push
and
xchg
add
loope
lahf
daa
andl
test
scas
fs
xchg
stos
test
addr16
and
or
xor
jne
dec
mov
stos
vmovddup
call
jp
push
fnsave
xchg
and
add
popa
notl
dec
popf
pop
cmp
addl
and
pop
xchg
scas
pop
mov
and
mov
jg
fs
aam
scas
dec
scas
pop
or
aad
popf
pop
xchg
out
fwait
pusha
adc
fwait
mov
and
andl
and
dec
scas
and
scas
out
subb
out
mov
add
add
and
xchg
ficoml
fisubrs
scas
and
call
scas
popf
xor
je
inc
jle
mov
jmp
fwait
and
sub
sub
scas
insb
in
xchg
scas
mov
jmp
test
in
xchg
and
inc
enter
add
repnz
cmp
clc
movsb
std
add
and
dec
jo
add
int
gs
sub
mov
rol
lcall
xchg
and
rcl
pop
out
jnp
sbb
imul
or
pop
xchg
outsb
add
xor
or
cmp
xor
aas
mov
lods
push
es
add
jge
xor
and
pusha
xorb
outsb
add
bound
test
add
xchg
mov
cwtl
mov
xor
fisttpll
xor
or
aam
add
pusha
xchg
mov
addb
imul
iret
daa
cltd
xchg
fimuls
sbb
insb
add
lds
ja
cli
mov
test
or
jo
test
adc
mov
cmpsb
or
add
add
push
insb
add
sbb
inc
xchg
ljmp
push
adc
mov
and
repz
or
in
scas
pop
push
and
mov
movb
add
push
stos
inc
inc
sbb
cmpsl
popa
mov
xchg
popa
lcall
and
cmp
xor
shl
sbb
pop
xchg
mov
add
and
test
mov
sub
fidivs
repnz
xchg
xchg
stos
sti
insl
inc
shr
insl
sub
sti
pop
xor
and
shrb
xchg
cs
sub
das
or
sub
sub
outsb
fs
inc
jle
push
std
outsb
in
xchg
mov
ljmp
cs
add
mov
and
push
nop
inc
insl
icebp
inc
or
lcall
xor
push
nop
push
fbld
adc
pop
pop
sub
inc
dec
insl
xchg
and
jp
xchg
test
add
ljmp
sub
cmc
add
sti
and
xchg
inc
daa
add
lcall
add
add
inc
xchg
call
sti
les
xchg
dec
aam
and
arpl
in
adc
insl
add
push
fwait
inc
xor
sti
repnz
dec
aam
sub
and
arpl
push
inc
inc
push
jo
sub
xorb
or
adc
cli
and
inc
add
add
pop
cltd
test
sub
in
adc
outsb
pop
loop
pop
dec
push
loopne
push
xchg
sti
inc
xchg
ss
sub
insb
adc
pop
pop
inc
mov
or
xchg
imull
dec
push
dec
push
adc
or
push
out
mov
adc
add
xchg
iret
daa
mov
add
and
iret
inc
xchg
and
lahf
ljmp
jecxz
dec
test
test
mov
call
xor
mov
or
inc
stc
lds
hlt
test
sahf
jnp
lret
hlt
fstl
ss
add
arpl
repnz
addr16
mov
jg
sbbl
test
add
add
addl
in
pop
lds
stc
mov
sbb
popf
sbb
mov
xchg
insl
scas
or
xor
test
sub
mov
test
and
push
push
out
jbe
cmpsl
cmp
scas
popf
xchg
fisubs
xchg
or
in
xchg
test
jp
add
add
xchg
bound
push
nop
lock
cs
adc
push
jle
pusha
pushf
lcall
add
aad
pop
pop
mov
test
imul
push
push
push
add
in
xchg
push
lret
in
jecxz
insl
add
sbb
out
sti
loop
rorl
or
es
and
jnp
add
add
mov
pop
mov
sub
sti
ret
inc
out
mov
mov
insl
sub
pop
outsb
lods
push
cmp
xchg
and
mov
push
addr16
idivl
xchg
loope
div
xchg
scas
loopne
mov
jecxz
jb
stos
sti
adc
push
lds
xchg
mov
ret
pop
add
add
sti
xchg
sbb
addr16
and
jmp
mov
inc
add
dec
sub
lret
xchg
push
mov
cli
rorl
lds
mov
jns
movsb
dec
push
ficoms
push
push
jecxz
mov
and
xchg
and
ds
ficoml
andl
clc
adc
add
fidivs
inc
add
xchg
shl
in
mov
outsl
or
pop
or
dec
movsl
pop
or
mov
popa
popa
or
test
sub
xchg
or
and
imul
inc
outsl
clc
mov
xor
xor
or
and
pop
add
add
and
outsb
mov
mov
outsb
in
xchg
jne
and
adc
mov
fwait
add
pop
jae
int
push
mov
out
arpl
inc
xlat
add
gs
sub
jbe
sub
xor
loope
xor
ds
shlb
out
aad
jmp
outsb
jecxz
icebp
xor
fiadds
pusha
pop
xchg
push
xchg
add
add
inc
dec
popf
arpl
in
clc
or
xlat
sbb
push
arpl
lds
jecxz
addr16
mov
mov
insl
outsb
add
jnp
pop
cld
addr16
outsb
outsl
lock
adc
xor
add
pop
xor
cli
in
xchg
bound
jecxz
mov
mov
and
push
call
repnz
add
add
icebp
in
aad
jecxz
xchg
dec
sub
and
nop
cmp
ljmp
xor
loopne
sub
mov
or
mov
sub
sti
xchg
dec
cmp
and
sti
cmp
bound
adc
sub
xchg
lret
add
xchg
dec
mov
ljmp
loopne
jb
lds
data16
bound
cltd
xchg
cmpsb
daa
lods
scas
bound
dec
and
add
jno
daa
inc
scas
loopne
jp
mov
add
adc
lds
adc
test
or
adc
daa
movsb
test
les
add
jg
fidivrs
jns
xchg
lahf
fldl
shlb
std
and
loopne
xchg
xchg
test
sub
jl
pop
sahf
mov
jecxz
dec
lret
sub
icebp
jecxz
std
in
xchg
and
add
ss
mov
cmc
shrl
xor
insl
outsb
add
add
add
loop
pop
push
and
add
mov
jno
loope
cmpsb
adc
jp
adc
adc
pushf
inc
adc
add
in
or
in
add
push
in
jge
inc
out
xchg
test
outsb
in
xchg
mov
jecxz
jp
inc
out
xchg
test
outsb
in
xchg
push
orl
mov
add
add
add
addr16
aad
adc
xchg
jge
xchg
test
add
xchg
call
js
outsb
jo
stos
adc
xchg
and
jge
ljmp
jno
pop
inc
mov
xor
insb
stc
pop
outsb
in
ret
subb
sbb
sub
cli
sbb
and
out
std
das
es
add
jmp
add
mul
lret
add
hlt
inc
push
das
xchg
iret
jo
stos
sub
mov
jnp
and
icebp
xor
outsl
add
mov
js
loopne
add
mov
cli
shrl
push
inc
jle
mov
rcrl
add
fsub
inc
jp
ret
pop
loope
scas
push
addl
out
cli
mov
subl
pop
shrb
xchg
sub
add
or
cmp
nop
mov
adc
in
stos
sti
or
inc
add
pop
ja
xchg
loop
mov
mov
insl
hlt
imul
sub
xorl
out
and
lds
or
sub
xlat
bswap
movsb
mov
pop
xchg
movsb
out
xchg
sahf
daa
sbb
sbb
add
add
gs
push
sbb
nop
iret
cmp
test
or
jns
enter
ljmp
jp
and
mov
call
pushf
push
mov
sbb
repnz
adc
add
in
pushf
or
xchg
or
xchg
add
outsb
imul
outsb
pusha
sbb
aas
data16
add
xchg
aam
and
jecxz
popf
push
cmpsl
fs
sub
ss
or
pop
ds
xchg
mov
pop
mov
test
adc
xchg
cwtl
inc
pop
lcall
adc
test
adc
push
cmp
in
inc
das
jmp
inc
setno
movsb
outsb
add
add
xor
sbb
sbb
je
nop
jno
inc
shrb
xorb
das
and
dec
mov
and
and
xor
insl
sbb
cmp
lcall
popa
xor
loope
fwait
xor
outsb
jp
sub
xchg
stc
nop
xor
rclb
mov
in
js
push
imul
adc
sbb
add
and
out
mov
jecxz
cmp
out
fwait
xor
xlat
xchg
cld
loop
mov
sbb
les
shlb
loopne
imul
xchg
sub
cld
btc
popf
mov
adc
enter
mov
jecxz
xchg
inc
out
dec
lahf
push
jmp
in
dec
mov
add
rcr
adc
jg
sti
dec
in
mov
ja
xchg
rorl
or
add
leave
ds
icebp
mov
sbb
or
push
cmp
pop
in
and
aam
mov
push
pop
stos
jp
xchg
inc
inc
movsl
mov
mov
test
or
add
pop
daa
or
and
push
lods
push
sbb
mov
lds
xchg
push
push
fists
test
inc
mov
mov
inc
sbb
mov
or
adc
loope
adc
dec
in
jne
test
pop
imul
jo
or
and
dec
or
sbb
dec
or
add
add
clc
add
shlb
sub
mov
outsb
jo
dec
jp
out
and
test
mov
outsb
pusha
push
cwtl
daa
outsb
inc
inc
jle
dec
dec
in
outsb
xor
sahf
sub
mov
aad
jbe
int
pop
dec
add
ds
imul
sbb
aad
cld
mov
jo
mov
jecxz
jo
cli
movsb
jae
sar
aas
mov
fbstp
scas
divb
pop
xor
stos
or
add
add
js
xor
mov
out
lea
or
dec
jecxz
outsb
out
xchg
in
cmp
pop
push
popa
mov
inc
jnp
xchg
sti
push
es
fistps
addr16
mov
sbb
add
pushf
movsb
sub
xchg
dec
lock
inc
push
dec
inc
lret
cli
in
stos
sti
sbb
add
lods
repz
adc
int3
xchg
push
scas
adc
mov
push
icebp
leave
popl
mov
jae
jns
imul
mov
out
inc
stos
stos
pop
xor
cld
call
js
add
xchg
cli
fmuls
mov
pop
dec
scas
fbstp
movsb
ds
xchg
jecxz
ss
sbb
pop
push
and
push
loopne
testb
insl
sarb
mov
jb
xchg
sbb
and
add
or
std
movsb
xchg
and
xchg
sub
mov
mov
xchg
or
test
add
mov
xchg
fiadds
xchg
jb
and
add
jns
jnp
jp
push
or
jns
cmp
xchg
mov
outsl
cmp
push
xchg
xchg
jle
push
sbb
movsb
xchg
nop
imul
cld
insb
mov
mov
or
push
pop
xchg
add
add
data16
das
xchg
sub
xchg
mov
push
add
das
xchg
and
js
xchg
and
in
sub
dec
or
push
dec
insl
ljmp
and
mov
outsl
add
and
jle
imul
dec
add
in
sub
xchg
jg
sbb
pop
int3
roll
add
add
sbb
imul
int
aaa
outsl
xlat
adc
xor
arpl
or
jmp
cmp
sub
aaa
xchg
int
outsb
mov
add
add
sub
sub
jnp
xor
jnp
imul
out
test
mov
aaa
imul
add
jl
imul
je
popa
jnp
daa
jle
jb
xchg
cld
imul
mov
adc
add
les
jecxz
imul
orb
lcall
add
mov
xchg
xchg
add
cld
cmc
sti
and
repnz
subb
ja
cmpsl
daa
pop
jns
daa
add
add
ret
and
and
xchg
clc
and
push
lods
add
jno
inc
in
lods
or
add
mov
mov
pop
push
test
adc
test
dec
jne
xchg
and
in
enter
sub
jne
lds
mov
in
gs
test
punpckhdq
and
adc
mov
jecxz
add
lods
in
leave
jecxz
aad
rcl
add
xchg
and
test
jg
dec
mov
lds
cs
jge
add
fisubl
test
in
jns
jbe
dec
and
adc
outsb
adc
sbb
fsubl
mov
xchg
mov
leave
xor
mov
leave
mov
push
cmpsl
sub
dec
inc
cmc
add
add
stos
test
roll
cmp
repz
insl
in
insl
push
dec
rorl
orb
mov
ljmp
push
in
xchg
push
popl
mov
inc
mov
out
cmp
sub
push
orb
lds
loope
addr16
xchg
insb
outsb
daa
cwtl
inc
xchg
add
add
add
push
inc
aas
shrl
stc
and
mov
jns
imul
cmp
pushf
adcb
lods
inc
add
out
xchg
cmpl
and
test
sbb
jae
sbb
int3
or
div
xchg
sbb
cmp
xchg
xor
jl
mov
pop
repnz
daa
cmp
add
add
or
movsb
pop
daa
push
cld
fcoml
fmul
daa
cmp
ljmp
pop
push
xchg
and
jns
test
nop
das
mov
imul
cmp
push
lea
xchg
aas
iret
jecxz
inc
int
fxtract
mov
xor
sbb
dec
fimuls
inc
jae
shll
cs
add
pop
scas
inc
sbb
sub
jmp
rorl
orb
mov
jecxz
jae
jecxz
js
lds
insb
inc
adc
mov
push
or
pop
leave
push
movsl
adc
sbb
mov
add
aam
or
push
mov
mov
push
les
add
mov
aad
idivb
fsubrs
fwait
or
jg
in
jmp
sub
add
add
or
movsl
nop
and
sbb
outsb
in
xchg
and
movsb
mov
adc
std
pop
das
mov
test
mov
out
mov
subl
push
add
add
sbb
frstor
movsl
lods
mov
cmp
cmpsb
lods
mov
fstl
outsl
outsb
daa
jmp
hlt
push
adc
mov
and
lds
dec
pusha
inc
push
ss
inc
jns
loop
fcmovnu
pop
outsb
scas
mov
outsb
add
les
add
hlt
xchg
outsb
popl
add
and
push
mov
mov
insb
fnstenv
jecxz
pop
daa
in
dec
adc
push
movsl
outsl
sti
adc
pop
movsb
xor
gs
mull
jmp
lahf
sarb
push
test
adc
movsl
inc
mov
cli
js
subb
rol
cmp
movsl
mov
mov
sahf
and
dec
xchg
or
leave
mov
add
mov
jp
mov
fucomp
call
insl
or
shrb
push
xchg
jns
and
mov
push
flds
inc
jb
adc
adc
clc
dec
adc
cmp
dec
into
add
fdivrs
push
movsl
stos
test
xchg
and
lahf
jle
and
xchg
stos
test
jae
pusha
adc
movsl
rorb
jbe
jle
sub
sbb
jne
repz
insl
jns
daa
test
inc
cltd
jp
jae
cmc
xor
inc
jge
push
mov
jl
inc
mov
aad
cltd
pop
imul
in
arpl
std
fs
mov
xchg
and
add
imul
push
pusha
in
outsb
in
outsl
push
xor
xchg
and
outsb
in
out
jecxz
mov
outsb
in
xchg
push
in
rcll
popaw
add
std
jp
or
and
ljmp
outsb
aad
mov
pop
mov
sti
sbb
addr16
push
and
push
pop
lahf
add
add
cmp
cmp
lods
xor
shrl
hlt
mov
sbb
je
dec
sbb
rep
add
xor
fcoml
inc
push
lcall
mov
inc
mov
jle
and
aam
inc
roll
in
pop
data16
add
jle
and
jle
and
pop
lea
fldt
add
add
lods
sbb
cld
insl
arpl
iret
in
les
cli
stos
inc
pop
push
mov
sub
out
and
xchg
int3
cmc
cmp
mov
daa
cmp
insl
xchg
sbb
dec
push
insb
pop
sub
out
xchg
push
mulb
mov
movsl
add
stos
mov
dec
add
push
pop
mov
mov
add
add
ret
sbb
or
aaa
mov
cmp
sbb
or
lcall
or
loop
xchg
mov
and
in
mov
and
int
jno
add
popf
test
xor
or
mov
or
test
add
add
jo
test
dec
test
sbb
mov
movsl
test
aad
out
fwait
cmpl
xchg
test
xor
test
add
clc
mov
movsl
test
push
sub
rcll
daa
filds
cmp
push
fs
outsl
es
in
insl
pop
add
add
stos
and
jecxz
cwtl
sub
clc
or
dec
jmp
fisubrl
pusha
sub
push
sbb
dec
push
xchg
and
jle
pop
cmp
js
fxam
loope
int
cwtl
or
pop
test
in
loope
mov
cmp
sbb
xchg
cwtl
push
imul
add
and
lret
xchg
pop
outsb
mov
pop
outsb
add
popa
xor
mov
outsb
add
pop
outsb
push
test
cltd
cmp
stc
adc
ret
dec
pop
xchg
imul
aaa
in
sbb
pop
in
sbb
cmp
inc
jno
test
push
inc
lods
out
mov
and
out
popf
ror
out
add
add
pop
nop
out
jns
xchg
jae
nop
pop
arpl
stos
stos
addl
or
mov
hlt
fmuls
push
push
imul
adc
sbb
or
out
xchg
or
outsb
lcall
cmp
stc
stos
sti
adc
jle
jmp
inc
xchg
or
outsb
xchg
jno
testl
add
ds
cmp
shrb
adc
or
cltd
daa
cmp
fisttpl
insl
mov
in
outsb
lret
jns
add
mov
sub
or
mov
adc
add
testb
xchg
push
or
mov
mov
push
mov
lcall
clc
or
sbb
cmc
add
orl
out
mov
and
xor
in
sbb
mov
test
fbld
addr16
sar
test
cltd
mov
insb
xchg
mov
jecxz
pop
or
lods
push
aaa
inc
lods
cmp
lods
xor
xchg
add
add
dec
inc
scas
mov
inc
scas
fwait
stos
aad
xchg
and
jecxz
push
outsb
in
mov
dec
in
xchg
and
pop
pusha
outsl
hlt
in
sub
fimull
sahf
ljmp
daa
outsb
inc
sbb
in
push
and
jbe
movsl
insl
in
xchg
mov
js
xchg
and
push
or
add
add
mov
sub
adc
or
mov
cmp
loopne
outsb
add
loop
orl
mov
sti
mov
sbb
mov
adc
cmpb
inc
lock
dec
add
mov
loope
inc
lahf
sub
je
in
stos
iret
jo
adc
mov
aas
pop
in
add
add
imul
push
or
jle
aaa
xchg
cld
imul
xchg
add
cmpsb
imul
cmpsb
daa
xchg
test
xchg
cld
loopne
mov
daa
sahf
jmp
jecxz
call
out
int3
ret
add
std
je
sbb
loopne
push
cs
and
push
cmp
adc
add
push
ja
xchg
cvtpi2ps
add
sbb
cld
fmuls
push
cld
imul
mov
aaa
test
sbb
add
orl
shll
sbb
or
and
js
mov
sbb
cltd
and
test
shlb
ret
jne
add
pop
or
cmp
and
add
inc
add
sbb
mov
repnz
ljmp
orl
inc
jge
adc
sbb
outsb
in
xchg
test
lahf
adc
push
clc
sbb
or
jecxz
inc
es
fisttpll
cmpsb
fldt
outsb
cmp
outsb
mov
xor
xor
jecxz
add
add
mov
cmc
sbb
dec
fnstsw
sub
xchg
jnp
fs
inc
jbe
mov
popa
and
and
jecxz
divb
lahf
sbb
xchg
and
cwtl
icebp
sub
sbb
fwait
and
daa
or
xchg
and
adc
movsb
adc
fwait
sub
cmp
decl
jo
or
xor
pop
addl
add
mov
inc
insb
mov
aas
mov
cmp
cmp
in
dec
hlt
filds
call
add
pop
xchg
daa
outsb
clc
lods
xor
stos
stos
or
repz
leave
mov
add
push
jb
dec
sbb
mov
jnp
out
stos
outsb
xchg
std
roll
push
cmpsl
daa
add
add
rolb
roll
call
ss
jae
jecxz
pop
insb
add
xor
jbe
mov
mov
sahf
std
imul
xor
dec
out
stc
or
xlat
std
pop
sbb
movl
andb
subl
pop
pop
and
push
jns
add
lahf
jae
mov
mov
mov
ret
cmp
mov
fidivl
xlat
ret
addr16
mov
lcall
aad
inc
lock
dec
xchg
mov
cmp
jle
add
test
inc
sub
and
jne
xchg
and
jp
fwait
imul
cmp
xchg
movsl
dec
insl
pop
std
and
xchg
and
jp
vpaddb
or
outsb
push
lcall
in
xchg
push
jecxz
lods
cmp
mov
jbe
inc
jp
xchg
out
sbb
adc
popfw
jge
sahf
in
xchg
push
push
fldl
out
popl
jge
mov
in
stc
lods
sbb
add
add
jecxz
aas
es
std
inc
lods
sub
jecxz
xor
dec
lods
fsts
mov
push
xchg
and
and
out
sub
and
xchg
in
popa
push
js
add
in
addl
push
lcall
outsb
add
adc
repnz
cmp
pushf
xchg
in
in
sti
inc
popa
sbb
add
add
xchg
sub
outsl
mov
int
sbb
sub
inc
fwait
mov
mov
add
js
repz
mov
and
xor
outsb
cmp
stc
std
pop
outsb
mov
in
cld
sub
out
xchg
std
imul
adc
cmp
fistps
push
js
ja
jle
sbb
add
push
mov
or
insb
add
jle
jge
add
xchg
inc
pop
lods
inc
sbb
in
lcall
jge
jmp
les
jne
cltd
andl
std
roll
cmp
fs
jnp
sbb
addl
out
jo
push
adcb
sub
jbe
lret
and
add
imul
xchg
mov
test
xchg
and
sbb
inc
jno
inc
and
inc
cmc
add
xchg
out
addr16
mov
pop
in
leave
add
movsb
nop
ljmp
push
out
test
adc
test
xchg
jg
scas
push
jg
scas
push
movsl
mov
add
jmp
imul
out
test
sahf
sub
xor
push
out
mov
add
cmp
sbb
int3
movsb
jmp
insl
mov
cld
pop
insl
xchg
sbb
ss
mov
insl
pop
sub
lods
xchg
and
cmp
jl
xchg
pop
sbb
das
adc
jmp
add
push
out
pop
inc
jb
push
test
fsubrs
adc
jmp
dec
xor
xchg
mov
nop
test
sbb
push
inc
pusha
mov
mov
sti
add
paddd
and
nop
test
adc
bound
hlt
pusha
loope
or
add
scas
jecxz
sbb
mov
jecxz
xchg
scas
jecxz
jae
jecxz
push
jg
aam
jecxz
outsl
jecxz
fsubrs
icebp
jg
icebp
jg
adc
outsb
jecxz
xchg
in
pusha
xchg
sbb
mov
adc
je
jnp
das
adc
rclb
jb
adc
jmp
add
mov
imul
add
jp
lahf
sti
push
adc
jp
ja
jle
add
lcall
fists
push
mov
adc
ds
sbb
test
sbb
mov
out
mov
push
mov
ss
mov
imul
and
pop
sti
aad
push
mov
inc
je
jge
cwtl
ret
add
add
jno
lea
mov
cmp
scas
jle
inc
mov
pop
enter
cmp
dec
in
mov
lcall
in
push
or
xchg
and
dec
jle
outsb
xchg
or
push
mov
push
or
xchg
xchg
sbb
mov
pop
push
ljmp
add
add
pop
ljmp
and
sub
jmp
xchg
out
jecxz
jmp
repnz
xchg
inc
sub
insl
xchg
push
mov
out
xchg
call
jmp
mov
jo
xchg
fcomp
mov
out
iretw
push
jmp
outsb
or
in
pop
pusha
insl
incl
movsb
jecxz
add
add
lcall
push
or
ret
je
xor
movsl
sbb
lods
arpl
imul
js
stc
fisttpl
in
popa
and
dec
loop
and
sub
or
xchg
int
add
cli
outsb
add
test
pop
add
sub
jae
imul
sub
push
loope
xchg
add
add
sub
shrl
daa
loop
cmpl
ficompl
push
aas
mov
add
sub
les
les
push
out
xchg
jecxz
inc
cmpsb
dec
sub
push
push
cli
inc
dec
jb
in
rorl
adc
fwait
sti
push
dec
xchg
jnp
sbb
jnp
jae
dec
jp
xchg
xchg
cli
das
int
sti
sbb
add
add
sbb
or
mov
cmpsl
shrb
std
pop
lods
xchg
incb
or
fiaddl
inc
shll
push
jmp
out
daa
jle
adc
jp
adc
cld
or
dec
iret
daa
movsl
and
inc
jl
or
pop
xchg
cmpsb
jmp
rcll
orb
push
xchg
test
add
cmp
jnp
or
push
cmovns
xchg
scas
xlat
rcr
cli
test
pop
mov
cmp
popf
sub
testl
push
imul
lods
and
pop
or
test
mov
cmp
jne
test
or
cwtl
jecxz
psrlq
add
push
dec
data16
jecxz
push
add
add
insb
jle
out
lods
and
adc
push
jnp
push
inc
arpl
xchg
scas
cmp
inc
imul
push
pop
push
mov
dec
or
in
sbb
mov
push
dec
push
shrd
jb
stos
mov
jmp
and
add
sub
xchg
repnz
jecxz
jmp
xor
add
adc
mov
test
add
in
test
aad
bound
jo
arpl
adc
arpl
mul
js
cmp
adc
cli
jl
add
pusha
sub
cmp
and
cmpsb
jo
bound
add
inc
lds
mov
mov
dec
xchg
sub
inc
or
sub
mov
and
popl
add
xchg
lds
es
popl
aad
leave
in
movsb
fs
jmp
sti
xchg
sbb
mov
xorl
lods
adc
dec
cmpsb
or
add
pop
fistl
xchg
sti
cwtl
and
lea
mov
cmp
and
daa
jp
inc
or
lea
daa
add
add
lods
push
xchg
mov
data16
ljmp
leave
fisttps
dec
adc
push
int3
xchg
in
int
data16
rorb
push
cli
leave
and
lds
fistpll
inc
pop
and
or
data16
scas
xchg
nop
das
pop
lds
push
add
mov
or
jno
test
adc
add
xchg
mov
add
out
or
repz
outsb
xor
fldcw
or
aad
lea
and
mov
or
enter
cmpb
clc
add
test
jae
xor
mov
scas
fcoms
mov
sbb
int3
in
shrl
int3
xchg
add
push
and
out
mov
sub
test
outsb
in
or
in
loop
fimuls
outsb
mov
pop
imul
push
je
and
test
jecxz
in
xchg
movsl
xchg
ljmp
adc
push
outsb
adc
stos
cmp
add
jecxz
push
add
ljmp
add
andl
nop
sti
jno
insl
add
imul
xchg
sbb
sub
jg
push
and
adcl
dec
adc
and
pop
cmc
xchg
insb
test
imul
aas
mov
and
jnp
ss
xchg
pusha
adc
fwait
insl
push
inc
mov
sti
fsubs
sub
jne
insb
test
add
inc
loopne
movsb
or
jg,pt
push
inc
xchg
into
loopne
sbb
aad
cmp
movsl
ret
adc
dec
imul
into
out
jg
shrb
push
int
in
imul
insb
sub
addr16
mov
jecxz
aam
add
push
decb
push
xchg
cmc
adc
ror
les
mov
daa
mov
add
or
lret
cmovbe
jmp
adcb
rcrl
fwait
push
pop
sti
scas
sbbb
enter
xor
hlt
stc
add
movsb
cld
std
nop
mov
sbb
lahf
into
jge
rcr
or
push
fwait
jge
add
repz
lods
xchg
movsl
sub
mov
add
jmp
add
add
lsl
add
lcall
mov
cld
cwtl
mov
add
push
xor
mov
mov
test
push
xchg
push
outsb
mov
fucomi
mov
sub
push
xchg
and
imul
mov
in
xchg
jecxz
in
pushf
ret
xchg
fucomi
bound
jmp
fwait
and
addr16
imul
inc
adc
aas
ljmp
gs
or
rcrl
and
stos
addl
insl
out
mov
xchg
ficoml
test
fwait
sub
add
fistl
sbb
test
out
push
ss
in
outsb
bound
add
je
jle
xchg
call
lods
bound
jbe
ss
mov
fstps
cmpsb
or
fs
cmpsl
and
mov
and
inc
scas
sbb
clc
call
popa
mov
pop
cmp
or
xchg
and
or
pop
xchg
sti
push
sbb
and
add
add
imul
push
or
jb
add
push
add
mov
jge
aad
imul
jle
jecxz
test
add
add
sub
pop
int
bound
mov
gs
cli
push
fs
or
xor
stc
mov
mov
jp
add
dec
sub
stos
lds
and
inc
cmp
add
add
mov
push
mov
lret
mov
sbb
and
add
xor
cmp
int3
out
pop
fsubrs
jae
movsl
fmull
mov
int
es
add
fdivl
pop
cmpsb
into
lret
xlat
add
mov
es
out
out
fidivrl
add
fmull
sbb
add
mov
sbb
or
xlat
add
xchg
pop
xlat
pusha
xchg
add
lcall
test
mov
sub
xchg
in
sub
in
mov
pop
and
push
movsb
xchg
outsb
adc
adc
add
adc
jmp
add
add
pop
gs
xchg
fildll
rorl
jge
mov
pop
das
insb
inc
inc
fildll
fistpl
das
outsb
inc
sub
mov
sub
push
lods
movsb
xchg
stos
insl
es
aaa
es
push
or
es
and
subl
sub
xor
js
jno
js
out
fildll
adc
lret
add
add
fildll
adc
loopne
add
or
ljmp
and
dec
loope
fadd
xor
jmp
cmp
outsb
test
sbb
and
in
out
cmp
push
push
out
sti
outsl
lahf
add
pop
fwait
stos
ds
cmp
imul
xchg
pop
jecxz
jmp
xchg
push
popa
test
push
add
jns
add
add
int
add
popl
cltd
dec
jl
xchg
mov
call
ret
arpl
in
mov
fs
ds
sti
cli
jmp
push
xor
push
fsubl
in
imul
imul
xchg
inc
inc
lds
les
mov
aas
ja
add
adc
mov
call
sahf
and
or
aas
xchg
pop
push
imul
push
into
scas
jb
movsl
addb
stos
adc
xchg
and
add
pop
cmp
push
test
add
xchg
pop
push
out
jbe
add
push
or
jb
cld
inc
pop
xchg
pop
cmp
inc
xchg
stos
js
xchg
and
cmp
add
add
rolb
add
pop
xchg
rcl
mov
mov
outsb
xor
push
inc
insl
outsb
jne
enter
repnz
xor
adc
and
pop
pusha
add
outsb
in
adc
lcall
mov
test
push
adc
insl
or
pop
popa
jae
mov
push
add
aad
adc
add
add
push
push
push
sarb
pop
fs
ja
mov
out
fwait
adc
push
adc
jns
fildl
es
incl
sbb
out
call
dec
jo
ret
mov
sbb
shlb
xor
xchg
and
mov
sbb
in
stc
xor
xchg
or
mov
add
mov
add
sahf
sub
out
push
ljmp
and
in
in
aam
ds
xor
mov
mov
dec
xchg
lahf
and
aas
leave
adc
inc
movsb
push
xchg
mov
call
jecxz
adc
adc
nop
dec
mov
add
add
xchg
mov
orb
mov
xchg
xchg
stc
push
add
das
inc
popf
stc
sbb
xchg
push
mov
call
subl
test
cs
mov
and
adc
sub
dec
lods
inc
xchg
out
inc
test
and
or
test
popl
add
mov
xchg
mov
std
imul
clc
pop
sarb
inc
push
insl
pop
inc
shrb
xlat
cmc
rorl
mov
out
call
or
shlb
insb
sbb
out
push
xlat
test
push
int3
subb
aas
pop
ret
cmc
jmp
add
push
clc
out
cmpsl
shl
cld
push
int3
fwait
or
add
sbb
adc
mov
or
fstps
and
out
ljmp
imul
movsl
sbb
arpl
push
mov
dec
pusha
sahf
xor
insl
dec
inc
pop
pop
push
shlb
out
xchg
and
xchg
push
cltd
mov
fisttpl
imul
and
add
insl
add
ljmp
add
out
movsl
mov
test
cwtl
and
cli
lret
imul
popa
addl
sti
enter
daa
or
inc
scas
daa
jmp
out
xchg
mov
jge,pn
xchg
aam
jbe
adc
dec
repnz
shll
nop
inc
cmp
cmp
mov
pop
xchg
sti
cmp
fadd
add
add
cltd
inc
jge
and
jnp
xchg
sti
movsl
dec
pop
jg
popa
pop
add
fwait
sti
cmp
pop
aam
nop
inc
cld
fwait
cmp
outsl
int3
pusha
or
xchg
sti
xchg
mov
mov
icebp
jecxz
aas
cld
imul
mov
daa
and
nop
outsl
adc
je
inc
xchg
enter
fs
cli
sarb
jp
add
add
cwtl
stc
mov
push
adc
out
lret
cwtl
mov
loop
test
in
jb
push
stc
push
add
jg
or
push
add
cld
ret
push
cmp
ds
es
jg
and
clc
icebp
sbb
test
mov
mov
icebp
stos
jecxz
push
add
add
int3
sbb
add
aaa
test
sub
mov
rcrb
push
stos
test
sbb
mov
into
pusha
icebp
movq
mov
add
push
pand
push
sbb
nop
sbb
sbb
mov
pop
outsb
or
lahf
daa
in
add
add
mov
leave
cmpsb
mov
jp
pop
add
mov
movsb
xchg
fdivs
and
jnp
int
loop
scas
imul
pushf
and
mov
sub
mov
mov
xor
fsubr
sbb
loope
sub
fildl
repnz
inc
gs
outsl
in
pop
popa
adc
loop
popa
dec
stc
add
add
out
sub
mov
sub
push
test
cld
es
push
dec
bound
pusha
xor
cmp
sti
and
or
ficompl
xor
and
inc
inc
fistpl
in
jg
mov
mov
das
dec
xorb
inc
mov
adc
rclb
inc
add
cli
push
xchg
sti
mov
cmp
pop
mov
xchg
add
add
lret
sbb
imul
mov
pop
in
scas
mov
inc
leave
sbb
dec
dec
dec
xchg
push
ja
push
mov
mov
jmp
in
cmc
flds
test
addl
xlat
adc
les
lds
test
add
rcr
lds
adc
add
xchg
gs
jns
jmp
std
xchg
xchg
rcl
insl
jecxz
adc
sub
pushf
int3
jb
adc
and
jmp
pushf
mov
xlat
rcrb
ret
xchg
pop
mov
xor
pop
leave
test
mov
enter
sbb
enter
decb
enter
sbb
sbb
inc
mov
mov
mov
sbb
sbb
inc
fcoms
outsl
fsub
and
orl
test
mov
dec
cmc
and
xchg
cmp
cmc
cmp
dec
lcall
outsb
sub
pop
insl
sbb
gs
rolb
movsl
mov
xorl
add
xchg
xchg
movsb
scas
cmp
loope
in
test
mov
in
leave
imul
movsb
scas
ficoml
out
andb
jb
popa
dec
int
in
test
mov
sub
mov
leave
repnz
in
insl
aad
cs
mov
pop
popa
scas
and
xchg
xchg
fistps
test
xchg
adc
sti
add
add
add
clc
mov
mov
dec
out
inc
ret
popa
outsb
cmp
dec
jns
aam
sbb
jb
sti
out
loopne
add
sub
xor
fdivrs
add
shrb
xor
cmp
outsb
add
leave
push
dec
ja
in
cmp
and
mov
mov
addb
add
lea
mov
mov
test
lret
xor
out
sub
movl
or
push
mov
cmp
cmc
push
stc
loope
push
or
xorl
push
movsl
lea
inc
aad
ret
insl
xchg
sbb
sbb
and
add
add
dec
nop
inc
sbbl
insb
cld
or
adc
adc
cmp
test
or
and
jbe
inc
in
mov
lock
add
shrl
lds
pop
fsubrs
sub
test
or
mov
mov
sub
mov
sbb
enter
add
add
insb
cwtl
and
xor
push
sbb
cmp
jb
adc
stos
gs
fwait
les
mov
add
cmp
push
rorb
imul
out
ret
fcomps
add
jno
xor
in
xchg
and
stc
icebp
or
in
xchg
and
add
mov
add
mov
and
clc
and
jmp
shrb
rorl
mov
imul
xor
aaa
scas
sub
jno
fsubrs
jecxz
insl
lds
xchg
cmpsb
scas
fnstcw
push
add
sbb
or
call
cs
and
jp
stc
daa
in
add
add
mov
mov
or
sub
fldt
jns
mov
xchg
sti
jne
jns
push
inc
sub
fwait
mov
sbb
jns
jnp
movsl
sbb
and
dec
cwtl
mov
xchg
iret
xchg
mov
lods
imul
ja
outsb
aaa
xchg
inc
xchg
push
add
add
les
add
mov
add
mov
add
les
add
lds
add
mov
add
mov
add
lds
add
lds
add
mov
add
mov
add
enter
loopne
add
mov
sub
enter
loopne
add
mov
sub
loopne
add
mov
sub
add
sub
mov
sub
loope
add
and
addl
push
mov
xchg
cmp
inc
xchg
mov
inc
xchg
jnp
inc
xchg
faddl
inc
xchg
roll
inc
xchg
cs
xchg
int
inc
xchg
xor
inc
xchg
stos
xchg
inc
xchg
outsl
test
xchg
inc
add
add
sub
mov
xchg
jns
inc
xchg
xchg
inc
xchg
cmp
inc
xchg
adc
inc
xchg
or
inc
xchg
aas
outsb
jecxz
and
test
aam
dec
ljmp
xor
aam
xor
aam
xor
aam
cmp
inc
out
cltd
xlat
stos
mov
sub
dec
cmc
stos
es
add
add
rcrb
in
lock
in
xchg
inc
push
and
popa
inc
push
mov
sbb
fwait
mov
or
xchg
xor
jbe
sub
xchg
stos
cmp
lods
push
into
insb
pop
xor
push
adc
push
inc
mov
adc
or
jecxz
repnz
mov
xchg
sti
enter
mov
outsl
cmp
add
in
dec
sbb
in
sbb
aaa
outsl
imul
push
daa
pop
int
and
in
cmpsb
decb
push
and
jne
in
out
xchg
fdivrs
sahf
xchg
sub
pop
int
or
hlt
mov
adc
cmp
jbe
movsl
mov
in
cli
xchg
mov
arpl
xor
add
add
lds
jmp
mov
mov
decl
jmp
xor
add
lret
ffreep
push
and
nop
sbb
cmp
adc
adc
outsb
xor
push
pop
nop
popa
in
adc
shlb
cltd
sbb
cmp
and
jle
pop
in
cld
add
add
and
cmp
mov
dec
test
pop
test
and
pop
loop
and
clc
pop
inc
jns
cmp
imul
clc
inc
inc
mov
test
mov
cmovae
sub
into
mov
and
cwtl
inc
xchg
mov
sbb
add
add
and
xor
mov
int3
je
int
sti
sarb
scas
xchg
and
dec
lcall
shlb
mov
xchg
xchg
and
sub
add
sbb
jb
dec
jmp
xchg
and
dec
icebp
jb
jecxz
push
ficomps
call
xchg
scas
test
add
add
out
in
loopne
subb
in
xchg
push
jecxz
mov
mov
outsb
pop
add
cmp
lds
in
add
outsb
add
cmp
psubw
outsb
inc
xchg
fsubl
ret
cs
mov
xchg
dec
daa
outsb
outsb
imul
movsl
jle
in
lahf
pop
outsb
add
daa
add
add
add
sbb
jo
xor
rol
sbb
add
stos
sbb
loop
mov
outsb
sbb
mov
aas
daa
ljmp
jg
push
test
psubsb
push
std
lock
in
xchg
inc
and
cld
mov
imul
jg
push
int3
out
dec
sarb
leave
loopne
jge
mov
add
add
pop
adcl
inc
mov
loop
jnp
cmp
or
int3
decb
push
pop
cli
xchg
int3
loop
jnp
in
popa
imul
int3
loopne
jbe
mov
or
xchg
lcall
jl
add
into
imul
xor
fisttps
push
repnz
sahf
adc
and
mov
sub
test
add
add
sub
adc
ds
sub
push
jp
pop
pop
in
les
leave
add
xchg
aas
sub
or
sub
outsl
out
mov
rorl
fsubrl
fisubs
data16
insl
adc
out
adc
xchg
lock
ret
scas
or
lods
ret
imul
pusha
sub
filds
pop
xchg
mov
add
jo
sbb
sub
cmp
cmpsb
orl
gs
xchg
insl
in
sbb
lds
sbb
and
ljmp
mov
lret
cmp
and
arpl
out
pavgw
jbe
xlat
pushf
mov
scas
cmpsb
lret
sbb
popa
push
movsb
xchg
insl
in
adc
fisubl
add
movsb
scas
mov
mov
push
imul
bound
and
stos
add
mov
push
jmp
cmp
add
and
push
dec
pusha
scas
adc
dec
enter
jg
in
xlat
scas
dec
add
pusha
dec
adc
in
adc
push
mov
in
movsb
out
mov
add
sbb
add
add
push
call
jnp
insl
arpl
mov
mov
add
and
and
lods
push
pop
addr16
push
ds
les
pop
daa
and
dec
cmpsl
or
mov
pop
daa
and
add
pop
imul
push
int3
out
dec
in
jb
incb
add
jp
pop
in
clc
push
cvttps2pi
incb
in
push
xchg
xchg
jmp
lcall
inc
mov
pop
fisubrl
pop
push
sbb
mov
sbbl
xchg
xor
and
inc
es
and
add
jb
and
and
xor
adc
rolb
add
sqrtps
sbb
loopne
push
in
and
test
shll
pop
fsubs
xchg
xchg
lods
dec
add
mov
xlat
and
pop
or
mov
sub
push
sahf
dec
sbb
mov
sbb
pop
mov
mov
outsb
fs
or
add
inc
mov
addr16
or
mov
enter
and
out
frstor
xlat
scas
mov
sbb
xchg
pop
mov
jp
std
push
ljmp
ljmp
mov
cmpsl
stos
fldenv
bound
mov
mov
in
ds
and
xchg
mov
data16
or
mov
inc
rolb
add
out
insb
dec
push
insb
in
xchg
out
mov
les
mov
es
add
sub
xchg
push
or
daa
sbb
fcmovbe
jnp
or
scas
popa
inc
out
sbb
xchg
adc
add
loope
dec
sbb
imul
and
jnp
push
sarb
or
pop
mov
mov
scas
lahf
sub
stc
sub
mov
cld
nop
adc
mov
add
sub
mov
mov
ljmp
shlb
mov
daa
add
xchg
mov
or
add
pop
leave
or
mov
sub
mov
mov
ds
sub
inc
sub
sbb
cmp
add
pop
sbbl
stc
stos
cmp
and
stos
ja
iret
stos
jecxz
mov
push
insb
insb
mov
mov
mov
dec
add
mov
arpl
data16
push
inc
testb
or
xor
cmp
test
and
dec
jb
inc
cmc
pop
push
lds
adc
add
sbb
test
aaa
add
cmp
mov
adc
popa
test
pop
adc
xchg
and
out
int
and
test
pop
dec
imul
pop
or
push
or
pop
mov
test
sbb
or
xor
testb
sub
jmp
imul
add
adc
in
and
and
inc
jmp
rcrb
dec
int
push
int
out
rorl
nop
fsubrs
adc
in
dec
pop
sbb
pop
cmp
pop
sbb
pop
nop
pop
sbb
aam
dec
sti
sarb
js
mov
test
jbe
imul
out
add
test
jbe
insl
fists
mov
push
and
add
add
fsubrs
outsb
add
mov
sti
jg
ljmp
inc
outsb
outsb
outsl
inc
outsb
outsb
aas
inc
outsb
mov
rsqrtps
fists
out
and
repz
pop
les
ljmp
movsl
dec
pushf
jmp
outsb
push
cwtl
sarb
and
pusha
rorl
outsb
ss
mov
jmp
inc
pop
mov
repnz
and
sti
loop
jl
add
add
das
xchg
jo
mov
in
lret
sub
xchg
punpcklbw
xchg
imul
adcl
inc
mov
pop
outsb
xchg
dec
dec
and
mov
push
lret
sub
std
push
sbb
mov
daa
adc
loop
mov
inc
dec
and
or
add
cwtl
insb
xor
xchg
jbe
cmp
test
lock
stc
rorl
loop
jp
jmp
pushf
mov
mov
push
sub
push
and
cld
sbb
scas
clc
push
dec
aas
cmp
push
pop
sbb
pop
leave
sbb
xor
mov
mov
sub
lods
and
xchg
lcall
enter
add
add
or
rorb
or
mov
or
mov
aam
sbb
inc
cld
lods
shrb
cld
rol
ror
xchg
and
push
arpl
or
mov
and
cltd
inc
adc
mov
in
or
cmpsb
outsb
in
xchg
sbb
jg
and
insl
fiaddl
add
push
mov
jecxz
lcall
mov
xchg
mov
sbb
mov
fisubl
imulb
test
imul
jecxz
in
xor
and
pop
jmp
loop
sbb
jae
inc
pop
lret
add
adc
les
jecxz
mov
gs
inc
add
add
in
jnp
mov
and
add
inc
dec
push
nop
inc
pop
push
ljmp
jle,pt
loop
dec
inc
psrlw
dec
push
in
inc
sub
inc
pusha
and
pop
popf
sub
lahf
sub
jmp
push
out
clc
popf
sub
dec
xor
push
adc
imul
add
dec
in
xchg
adc
sbbl
outsb
popf
xor
outsb
push
mov
dec
jp
cmp
mov
outsb
cli
rcr
dec
lea
lds
repnz
xchg
jno
out
mov
xorl
push
loop
xchg
mov
pop
cmp
scas
call
add
inc
stos
jo
xchg
popl
add
sbb
push
loopne
in
das
sub
sbb
push
add
js
es
aas
rorb
sahf
mov
pop
sub
pop
jp
mov
sbb
adc
mov
sbb
cmpsb
jo
stos
xor
pop
lahf
aas
mov
push
sbb
aad
rolb
aad
mov
in
add
popa
and
add
aad
dec
clc
jle
test
pop
fstpt
pop
mov
aam
bound
mov
push
scas
fbstp
pop
mov
pop
pop
xor
mov
hlt
xchg
jbe
mov
jecxz
test
ss
xor
leave
xor
sbb
jle
lret
cmp
xchg
icebp
aad
jmp
sbbl
in
pop
gs
sub
pop
mov
movsb
scas
fnstcw
and
and
sub
adc
sub
inc
xor
into
mov
loopne
loopne
mov
mov
cmpsb
mov
push
and
pop
clc
mov
add
pop
movsb
bound
imul
and
in
scas
cmpsl
sti
add
add
lock
mov
xlat
int
add
daa
sub
or
std
push
daa
push
fildl
sub
jl
outsb
outsb
sub
add
imul
je
and
add
mov
or
mov
stc
call
dec
popa
mov
aam
into
loopne
or
lock
lods
push
test
in
loopne
push
jmp
mov
ret
add
inc
xor
adc
xchg
adc
pop
bound
pop
ljmp
psubd
pop
add
pop
or
movlps
bndldx
pop
popa
inc
push
jle
inc
sti
addl
add
mov
xchg
jg
and
enter
inc
aas
and
xor
push
or
sub
xchg
movsl
flds
mov
add
and
add
and
test
push
xchg
mov
adc
sbb
test
aaa
or
popa
pop
add
in
test
xchg
lcall
pushfw
dec
sub
cwtl
inc
sub
pushf
dec
sub
cwtl
inc
sub
pushf
dec
sub
cwtl
inc
sub
pushf
dec
sub
addr16
dec
mov
add
xchg
and
adc
and
mov
xchg
mov
cltd
jbe
and
outsb
lods
xchg
pushf
xchg
pop
ljmp
add
cmpsb
add
out
add
xchg
push
pop
add
jo
add
mov
push
cmp
imul
scas
loop
frstpm(287
sbb
add
mov
dec
jnp
lcall
adc
scas
addr16
dec
add
repnz
shll
outsb
in
andb
mov
and
lcall
sub
pop
push
mov
dec
jl
pop
push
xchg
ss
jle
scas
std
aas
bound
je
std
je
xor
xorl
add
inc
in
dec
sbb
fists
dec
mov
stc
cmp
inc
scas
sbb
in
xor
js
xchg
push
ja
sub
addr16
ret
and
push
mov
xchg
lea
push
in
cmpsb
mov
push
xchg
out
pusha
xchg
mov
dec
jb
mov
mov
xor
adc
imul
add
bound
in
icebp
push
and
mov
pop
push
sarl
popa
jg
inc
adc
or
pop
xchg
dec
mov
jecxz
mov
inc
inc
or
dec
inc
push
adc
mov
pop
mov
mov
inc
inc
push
daa
push
push
add
add
lods
leave
and
jp
and
jg
sub
inc
jb
or
cwtl
scas
leave
and
les
xchg
fildl
sti
sbb
xor
jnp
xchg
push
sub
data16
xchg
data16
inc
cwtl
mov
shlb
jnp
les
dec
and
lea
cmp
popa
std
js
and
jl
add
loop
dec
fsubr
out
test
psubsw
xor
jns
mov
pop
lods
cmp
fsubrs
bound
mov
or
jmp
cmp
nop
movsb
lods
out
jb
popa
adcl
sbb
ja
insb
jo
scas
sub
push
bound
aad
stos
outsb
cmp
outsb
jbe
xor
scas
and
add
insl
cmp
insl
sbb
pop
and
insl
push
xchg
adc
outsb
mov
xchg
cs
and
imul
popa
outsb
in
ljmp
add
cmp
push
in
pop
je
add
jbe
or
outsb
out
and
and
sub
push
and
xchg
aaa
add
add
sub
and
cs
cmpsl
mov
in
mov
and
or
xorl
daa
push
in
outsl
and
sti
imul
pop
mov
jl
add
xchg
orl
imul
mov
stc
sbb
nop
lret
mov
add
mov
mov
imul
inc
push
imul
mov
xorb
jmp
mov
fstps
imul
dec
jb
adc
sbb
sahf
xor
lcall
lcall
test
orl
push
and
cli
pusha
lahf
test
sub
add
dec
add
popf
lock
sbb
adc
test
or
pusha
in
mov
inc
sbb
sbb
mov
mov
pop
xchg
sbb
pop
xchg
sbb
sbb
cmp
lea
xchg
and
test
jne
jle
dec
mov
mov
add
add
dec
jb
pop
daa
jecxz
cli
add
in
out
imul
cmp
mov
jbe
xchg
lods
stos
rorb
xchg
movsb
xchg
pop
dec
add
mov
insl
inc
daa
es
xchg
mov
es
icebp
dec
add
gs
sti
popf
aas
movsl
jmp
std
jge
jp
mov
mov
outsb
sarl
sahf
sub
cmp
gs
pop
sub
add
and
popl
xor
xchg
jo
and
sti
hlt
roll
and
pop
les
bound
fiaddl
push
lahf
jmp
out
test
mov
cmp
push
test
dec
or
and
leave
in
cmp
add
cmc
push
xor
scas
add
push
dec
jbe
jg
xchg
cmp
add
inc
or
sub
xchg
mov
or
mov
stc
and
stc
mov
fldlg2
fiadds
mov
pop
lea
leave
push
lods
or
push
adc
or
mov
movsb
or
sbb
fstps
stos
xchg
mov
pop
repz
push
jno
lea
xor
jo
push
daa
sbb
shll
sbbl
or
fs
stc
arpl
lea
push
sti
leave
or
in
ret
and
shlb
xchg
pop
ret
xchg
lcall
and
movl
notb
jns
pop
jg
add
cli
inc
mov
test
inc
xchg
jbe
jl
fwait
xchg
sbb
fwait
sbb
adc
and
imul
mov
and
lea
xchg
mov
mov
repnz
adc
test
pop
or
mov
es
in
xchg
pop
mov
jmp
add
test
movsl
out
rcr
outsb
jmp
jle
push
scas
mov
and
ds
ss
and
jmp
cmpsb
lods
push
sbb
aad
jecxz
cmp
jecxz
popa
xchg
cwtl
pop
mov
add
jmp
jecxz
push
imul
hlt
mov
cmp
cs
sbb
data16
add
inc
inc
add
dec
dec
and
icebp
dec
and
std
dec
sub
lods
push
sti
mov
xor
pop
bound
sub
cli
stos
adc
in
in
in
add
add
outsb
add
cld
in
arpl
outsb
add
fildll
and
xor
cltd
das
and
outsb
jno
test
sbb
and
add
xchg
xchg
jae
add
add
sti
inc
sub
cli
test
test
inc
add
push
xchg
adc
imul
adc
xor
pop
adc
pop
xor
cmpl
inc
xchg
in
outsb
xchg
addr16
or
xlat
lods
xchg
xchg
jnp
xchg
mov
mov
push
sahf
arpl
mov
arpl
add
xchg
or
sbb
andb
xchg
adc
adc
lea
xchg
mov
sub
and
dec
and
lcall
cwtl
stc
jecxz
lods
pop
lds
mov
les
xchg
or
stos
into
orl
mov
test
loope
cmp
jle
rol
add
add
mov
xchg
test
add
out
jp
outsb
movsl
cli
les
jns
mov
inc
mov
mov
mov
fs
lds
mov
les
and
loop
test
adc
xchg
adc
mov
push
and
jo
lods
mov
aaa
pushf
jmp
xor
and
push
nop
stos
in
rorl
adc
fildll
insl
outsb
jp
nop
fimuls
push
jmp
lea
nop
push
out
mov
cmp
in
mov
xor
jmp
arpl
push
addr16
xchg
sti
rclb
xchg
repnz
xor
daa
sub
cmp
pop
das
and
hlt
cmp
sbb
inc
testl
adc
inc
mov
loope
out
lods
stos
popf
lea
sahf
cwtl
jo
sarl
stos
addl
outsl
cwtl
test
outsb
outsb
add
fsubr
repnz
xor
outsb
cmpl
add
shrb
subb
in
xchg
mov
pop
insl
push
lods
mov
or
loopne
pop
imul
jg
xchg
jle
inc
repnz
rclb
xchg
sub
aas
push
push
or
es
jle
sti
mov
fstpl
inc
push
in
sbb
imul
ret
mov
inc
xchg
jle
add
ja
add
add
mov
imul
jle
push
xor
rorl
xchg
and
imul
lods
xchg
inc
xchg
mov
sbb
out
push
sbb
xor
incl
aas
push
and
popl
xchg
test
lock
shll
adc
xchg
andb
inc
add
push
lds
add
popa
out
xor
jl
std
adcl
cmp
enter
arpl
push
or
hlt
ret
sti
sbb
xchg
sahf
outsb
icebp
cmp
sbb
push
in
imul
mull
pop
sub
add
sahf
daa
in
rcrl
or
push
in
imul
movsl
push
in
add
add
ljmp
addr16
repnz
rep
loope
movsb
adcb
sub
fsubs
cmp
dec
imul
test
cmc
xor
xchg
mov
sbb
lret
rorl
test
dec
pusha
add
in
or
arpl
mov
popa
adc
outsb
add
hlt
add
cwtl
mov
add
add
ja
xor
mov
es
jg
jno
push
sub
push
cmpsb
iret
gs
js
es
rcll
jmp
fadd
cltd
push
adc
mov
xchg
jle
sub
in
lret
lods
mov
cmp
dec
notb
adc
push
mov
inc
push
aaa
or
nop
push
out
ret
subl
add
xchg
imul
imul
xchg
lret
mov
mov
gs
add
cmp
in
push
adc
mov
cmp
inc
push
mov
lds
imul
dec
xchg
lods
sti
sub
add
jno
inc
jb
push
mov
imul
stc
push
push
xchg
inc
push
mov
mov
add
and
mov
pop
orl
call
sbb
pop
xchg
test
cld
add
aad
xchg
xor
cmc
pop
or
xor
pop
out
fbstp
icebp
jecxz
popa
sti
loope
sarb
sbb
inc
xchg
jl
push
ret
cmp
adc
rolb
add
add
push
jae
scas
and
mov
loop
loopne
mov
cmp
push
sbb
sbb
dec
inc
sbb
dec
int
cwtl
das
in
xchg
movsb
xchg
jns
es
in
and
in
xor
dec
and
das
or
in
ljmp
mov
pushfw
xchg
aad
mov
scas
add
add
insl
mov
cltd
imull
addr16
es
loope
in
lods
xchg
push
lods
scas
sbb
xor
pop
mov
jecxz
sub
lcall
or
fdivrs
aaa
aas
xchg
xchg
popl
loop
inc
aas
push
pop
cmp
sub
sub
sbb
popa
mov
cmp
cs
add
add
or
addr16
pop
lret
aaa
outsb
add
das
dec
int3
cmp
out
sbb
push
cmp
push
mov
inc
sbb
insl
pop
in
pusha
xor
sbb
add
scas
cmp
cld
and
sti
lret
inc
scas
mov
xchg
jg
add
lds
lds
xor
ljmp
inc
add
add
rol
cld
stos
ds
push
and
lcall
add
inc
mov
sbb
add
jle
inc
lcall
outsb
xchg
push
scas
pop
out
lods
jge
xchg
stc
sete
es
dec
pop
jnp
ljmp
stc
sarl
jecxz
ret
or
popf
ret
sub
add
add
aam
cmc
pop
and
lea
sbb
pop
jle
mov
xchg
sbb
mov
pop
sbb
xchg
out
outsb
xchg
pop
xchg
sbb
rorb
test
pop
fs
mov
and
mov
movd
mov
push
mov
adcb
sbbb
cmc
add
add
mov
test
sahf
outsb
scas
imul
outsb
in
xchg
cmc
loopne
adc
mov
in
sbb
ds
push
mov
in
xchg
cmc
mov
mov
sahf
out
xchg
and
mov
xchg
and
or
xchg
and
outsb
in
adc
add
lea
xchg
cmc
loop
cmp
sahf
out
fisttpl
xchg
xchg
and
sub
add
and
hlt
fcompl
sti
test
outsb
inc
ds
outsb
add
fxrstor
xor
in
loop
outsb
lock
out
push
and
lods
pop
std
sbb
push
sub
popl
add
mov
xchg
and
xor
push
mov
pop
insb
add
fists
inc
out
or
sar
outsb
outsb
iret
movsb
call
push
cmp
ds
mov
insb
add
adc
add
lods
out
or
xchg
mov
mov
imul
lahf
sti
cmpl
lea
add
ret
stos
jp
xchg
mov
xchg
mov
xchg
jge
add
dec
in
andb
add
dec
cmp
arpl
stos
jp
lret
shlb
cmp
cli
stos
sbbl
lcall
stos
xchg
jle
adcl
push
mov
mov
out
xor
and
lds
pop
bound
pop
xchg
lcall
add
add
pop
addl
sbb
and
jnp
roll
rol
cmpsl
rcll
pop
pop
out
int
mov
push
xchg
and
mov
lahf
out
pop
xchg
and
test
lods
sbb
test
lcallw
test
xor
sbb
and
pop
shr
xchg
add
outsb
jmp
and
outsb
push
cltd
mov
arpl
xchg
popf
inc
mov
mov
roll
insl
in
xchg
or
in
sbb
jbe
jl
in
xchg
sahf
out
pop
xchg
scas
xchg
and
and
and
nop
and
loope
add
add
lds
push
lds
in
sbb
in
rcll
shl
fwait
loope
push
aam
sti
mov
arpl
jbe
data16
or
call
jmp
jle
add
and
outsb
xchg
jle
add
sahf
dec
xchg
jp
outsb
push
repnz
or
iret
add
sub
mov
add
pop
pusha
outsb
add
or
push
mov
in
pop
xor
mov
and
pop
push
pushw
das
popf
scas
jl
xchg
mov
dec
sub
push
aas
mov
and
nop
mov
les
sbbl
push
or
push
jbe
jno
jle
sub
shlb
out
cmp
pop
jne
mov
sbbb
imul
add
xchg
xcrypt-ecb
cmpsl
or
hlt
push
into
and
rorb
lea
dec
and
mov
add
dec
test
cmp
xchg
lds
mov
add
iret
inc
ss
and
pushf
xchg
sbb
sbb
mov
test
sbb
push
and
add
push
or
test
pop
push
ja
popl
dec
aam
test
mov
aad
test
lahf
enter
adc
pusha
je
in
sbb
pop
stc
pusha
loopne
fdivrs
add
loope
test
sub
cmpb
push
pop
das
daa
outsb
mov
sahf
and
cmp
add
data16
sbb
subb
inc
lea
dec
lcall
in
clc
popa
addr16
mov
aas
jne
inc
jle
jmp
mov
test
inc
pusha
jmp
dec
outsb
addl
in
leave
sbb
popf
xor
movsl
xchg
lret
sbb
ficomps
sub
mov
add
outsb
inc
mov
addr16
in
add
add
ret
lods
in
add
bound
mov
fsub
cmc
xor
pop
mov
daa
sbb
loopnew
add
mov
mov
addr16
sti
xor
dec
add
adc
push
fnsetpm(287
cmp
insl
push
loopne
and
mov
pop
daa
jo
sbb
hlt
ljmp
js
outsb
add
sub
add
add
jg
xchg
outsb
outsb
mov
push
jge
add
es
xor
in
xchg
imul
fisttps
stos
jns
orb
xchg
lea
cmpb
xchg
mov
inc
xor
xchg
mov
insb
mov
add
lock
cmp
and
stos
mov
xchg
mov
or
xchg
cwtl
jg
add
add
add
xor
cld
mov
aaa
mov
adcb
sbb
sbb
sbb
xchg
xchg
imul
xchg
sti
dec
xacquire
sub
jbe
sub
sub
sar
aad
call
add
add
out
and
mov
dec
sub
gs
add
in
aas
pop
sahf
and
cld
xchg
and
scas
and
jp
std
mov
or
or
jg
or
mov
cs
push
inc
add
sub
adc
push
decb
jo
lock
outsb
in
lret
adc
jbe
mov
es
and
das
sub
fsubrs
icebp
add
add
movsb
xchg
jb
cmp
lahf
xor
loope
and
in
cli
arpl
inc
cmpb
in
push
faddl
test
jg
pusha
dec
mov
xor
in
adc
jmp
mov
dec
pushw
and
in
xchg
movsb
cmpsb
ficompl
outsb
cmp
xchg
cmp
add
shr
repnz
add
xor
and
pusha
outsb
cmp
fwait
add
cs
add
and
sahf
sarl
sti
lahf
int3
jnp
in
loop
cmpl
test
mov
sti
ljmp
out
ret
or
bound
add
cmp
and
int3
nop
out
int
jp
push
add
add
xchg
pop
push
mov
xor
jo
add
mov
mov
and
rcll
push
outsb
xchg
xor
sub
das
sbb
in
imulb
adc
mov
imul
in
sbb
mov
stc
add
add
cmc
in
fwait
add
add
mov
add
mov
int3
mov
and
jae
mov
mov
mov
adc
push
repnz
insl
mov
jle
mov
sub
jge
mov
push
dec
add
push
rolb
push
jb
jns
popf
add
add
add
jp
mov
icebp
dec
addl
mov
rorb
psrlq
lods
mov
jge
stos
jl
mov
adc
and
outsb
outsb
cmp
icebp
dec
std
out
rorl
xor
dec
std
fsubrp
dec
fscale
inc
nop
ret
xor
sub
sbb
xor
xor
xor
lock
scas
lahf
rorl
sahf
jmp
mov
jp
leave
movsl
scas
cmp
add
or
sbb
cmp
mov
mov
mov
cld
xor
inc
jge
sub
aam
cwtl
lods
cmp
xchg
and
loope
ljmp
out
daa
ljmp
fs
int3
js
lods
test
insb
add
add
outsl
cmp
pop
insl
mov
dec
xor
into
out
test
daa
outsb
bound
xor
call
jae
jns
sbbl
jmp
in
jl
daa
sbb
je
out
std
jne
mov
pop
ja
push
outsl
data16
loop
mov
pop
imul
nop
adc
adc
add
data16
cmp
xchg
mov
add
jg
add
jl
inc
mov
xchg
or
insl
add
imul
and
ret
pop
dec
push
jl
jg
dec
out
push
push
enter
cmpl
outsl
add
jp
or
add
mov
mov
jg
add
mov
sbb
imul
mov
mov
add
add
lea
pop
pop
inc
lcall
gs
scas
imul
out
sbb
js
jnp,pt
mov
pop
jbe
ret
mov
lahf
cmpsb
lret
adc
inc
aaa
fdivr
inc
pop
inc
add
shrl
mov
movsb
sbb
iret
adc
add
jne
push
pop
jne
movsl
pop
mov
xchg
mov
mov
cmpsb
gs
cmpsb
movsl
mov
lret
jmp
fsts
xchg
and
cmpsb
xchg
js
out
adc
gs
je
insl
nop
popf
sub
in
xchg
and
test
xlat
fisubs
es
loop
jge
cs
scas
sbb
mov
add
and
mov
jbe
sub
outsb
cmp
or
xchg
adc
loope
lcall
cmc
adc
outsb
rorb
xorl
and
add
test
add
lds
fsub
insl
cmpl
in
xchg
add
dec
fisubrl
jg
cmp
sti
add
add
popf
cmp
jo
adc
rcrl
sub
xchg
stc
push
sbb
xchg
pusha
adc
cmp
or
lock
daa
stos
and
mov
xchg
stc
and
test
lret
out
and
rcrb
pop
les
in
int
dec
arpl
inc
mov
lcall
insb
add
add
fldcw
add
jns
push
push
mov
add
dec
jle
and
imul
fs
xchg
arpl
ret
pusha
jge
xchg
xchg
sbb
out
loop
push
lea
aam
mov
xor
xchg
jecxz
sahf
in
mov
cmp
add
or
and
xchg
cmc
sub
scas
lock
sub
add
pop
and
xor
sbb
xchg
mov
outsb
cmp
sub
mov
xchg
mull
and
pop
xchg
mov
scas
mov
jne
cmp
sub
push
mov
in
mov
sub
add
std
mov
xchg
stos
lds
add
fwait
aaa
lds
pop
in
lcall
addl
mov
in
xchg
test
fdivrs
lahf
sub
cmp
push
mov
out
nop
and
cmp
push
in
dec
in
mov
in
fisubs
test
and
push
sub
in
fs
in
in
xchg
sahf
sub
pop
movsl
sub
add
add
and
divb
rcrb
addr16
xchg
sahf
sub
or
and
cmp
xchg
and
out
scas
sub
inc
idivl
cs
xor
xchg
adc
jne
add
jecxz
push
dec
test
add
pop
push
add
dec
pop
inc
scas
aas
and
out
daa
push
inc
add
add
insl
insb
push
pop
push
add
jl
inc
outsl
aas
mov
hlt
sub
insl
insb
push
push
push
add
call
cs
nop
pop
add
loopne
xchg
pop
call
aaa
decl
pop
sub
lods
pop
pop
addr16
xor
jmp
dec
dec
mov
ja
imull
or
mov
jo
add
inc
mov
and
mov
add
xchg
bnd
sub
jecxz
push
pop
push
push
jl
cld
gs
dec
cltd
idiv
orl
fwait
sub
xchg
jp
sub
xchg
sub
xchg
jl
fildl
mov
push
jl
xchg
dec
jge
xchg
jnp
cmp
mov
and
adc
dec
sti
and
or
mov
sbb
or
add
fldcw
enter
add
insl
sbb
mov
or
fsub
mov
adc
call
mov
mov
movb
fsubr
mov
out
sahf
jo
movhps
test
cmp
lahf
outsl
xor
punpcklwd
mov
test
inc
jno
add
add
fwait
les
pop
push
loope
push
outsb
adc
and
mov
out
xchg
and
loop
lds
test
data16
or
popa
push
sub
push
test
ds
or
xor
gs
cld
out
iret
movsb
das
popf
and
in
sahf
subb
cmp
add
add
sub
test
loop
or
xor
xor
add
sub
rolb
aam
cmp
sti
stos
imul
dec
dec
shll
adc
in
sti
cmpsb
sub
mov
call
data16
adc
ja
add
xor
bound
add
and
xor
inc
mov
mov
push
pop
jnp
jb
cmp
insl
insb
in
push
add
mov
sbb
adc
lret
sti
push
inc
xor
cmp
ret
push
and
testb
xor
or
dec
shr
into
or
adc
jne
ja
idivl
add
add
test
sti
bound
jnp
orb
mov
add
ss
insb
sub
add
lods
cmpsb
cwtl
outsb
in
push
or
mov
push
dec
jge
adcb
push
sbb
addl
inc
jo
xchg
cs
mov
nop
sub
sbb
mull
xor
add
add
lods
int
xchg
and
clc
lea
aam
add
test
popf
jecxz
jne
test
inc
adc
sti
test
aam
xchg
test
or
lods
push
xchg
xchg
repz
mov
inc
test
pop
xchg
adc
repnz
jno
out
pop
push
fnstsw
insl
loop
add
inc
mov
stos
fsubrs
lret
sub
insb
xor
insl
lods
in
cmpsb
sbb
fdivs
cmp
sahf
popa
popf
adc
insl
pop
test
inc
jp
pop
pop
insl
in
popa
gs
dec
jmp
shr
dec
jecxz
loope
rcr
adc
xor
jl
cmp
mov
mov
cli
pop
insl
in
cmp
loop
add
add
jecxz
popa
sbb
xor
sub
dec
push
jl
hlt
xchg
lods
mov
jo
cmp
popl
sahf
mov
add
popa
sbb
call
fisttpll
sbbb
sti
test
incb
popf
lods
pop
mov
jno
add
push
mov
inc
mov
out
popl
add
scas
data16
pushf
sub
scas
popa
es
pop
insl
mov
or
push
jnp
sti
xchg
mov
lahf
xorl
jnp
in
insb
add
and
xchg
jl
xor
or
pop
addr16
ljmp
lods
sub
and
out
mov
out
in
lods
les
add
add
mov
inc
xchg
jecxz,pt
or
stc
inc
xchg
std
hlt
in
jl
js
std
hlt
imul
cli
inc
xchg
imull
push
js
int3
gs
out
adc
jl
sti
adc
je
xchg
or
jb
push
test
push
nop
repnz
pop
rclb
jnp
mov
mov
xchg
loope
loop
add
pop
ss
fs
sbb
rcrl
and
inc
add
sbb
push
and
adc
sahf
mov
sbb
bound
das
xor
mov
je
pcmpgtb
shrl
shll
outsb
sub
jl
outsl
mov
lods
mov
ret
fadds
add
add
outsl
inc
jl
xchg
pushf
sub
movsl
push
adc
outsb
push
ds
jl
xchg
sahf
cmpsb
cwtl
sahf
and
or
mov
movsb
push
loope
pop
and
cs
fsubrs
jge
loope
in
test
loop
lds
cs
jle
roll
and
sbb
in
lcall
dec
sbb
add
movsb
arpl
add
mov
insl
add
cmp
inc
ds
sti
mov
inc
outsl
xlat
loope
cmp
cmp
cli
pusha
xchg
in
cld
xchg
jnp
insl
in
stc
xor
divb
in
inc
jo
repz
push
out
mov
jns
xchg
sti
in
mov
bnd
jns
shll
test
xchg
aaa
imul
jne
add
add
int
and
fsts
iret
ficoml
iret
adc
add
lock
inc
pop
inc
mov
adc
mov
jmp
mov
pop
or
pop
push
sub
jecxz
and
stc
or
jo
mov
ret
inc
jp
push
mov
jl
inc
jp
sub
pop
inc
xchg
sub
add
flds
adc
sub
dec
ret
pusha
mov
push
pop
xchg
xchg
jl
loopne
lret
adc
es
movsl
mov
sub
pop
xchg
and
pop
sub
dec
inc
jb
int
and
lds
push
loope
out
mov
lds
push
loope
jmp
xchg
lds
psubusw
filds
add
xchg
sbb
inc
mov
in
adc
cmp
push
bound
insl
xchg
ja
or
or
out
sub
sbb
pop
push
addr16
enter
inc
mov
in
xchg
pushf
sub
lds
mov
xchg
mov
aaa
dec
sbb
pop
jl
xor
mov
fs
xchg
add
adc
ljmp
or
outsb
push
test
sbb
push
addr16
scas
cmp
insb
sbb
fildll
jg
movsl
lds
xor
jmp
addr16
in
scas
inc
out
test
das
add
ret
sbb
add
mov
mov
add
cmp
outsb
bound
add
scas
in
xor
sbb
sub
in
dec
and
dec
adc
call
push
fldt
scas
cli
mov
pop
lods
outsl
cmp
sbbl
sbb
jno
jno
cmpsl
xchg
mov
aaa
push
or
dec
lret
add
pop
bound
into
aaa
bound
jl
mov
in
insl
xor
xor
add
xchg
iret
movsl
adc
pop
imul
dec
xchg
inc
xchg
dec
js
push
dec
pop
stc
stos
ds
cmp
dec
xor
and
daa
repnz
rcrl
sub
xchg
out
imul
mov
cmp
mov
call
dec
scas
and
push
jbe
icebp
push
add
add
xlat
shr
ss
push
adc
dec
imul
push
jge
scas
inc
in
cltd
clc
in
pop
loopne
test
cli
clc
or
pop
xchg
cli
push
lahf
xchg
and
popa
xor
jno
or
mov
sbb
and
or
and
ja
mov
add
xchg
lcall
dec
fucomi
and
out
insb
dec
data16
add
xor
inc
jp
pop
call
push
and
inc
or
shrl
push
mov
sub
in
xchg
and
jne
cmpsb
or
aam
mov
dec
dec
imul
movsb
stos
cmc
ja
sub
add
flds
add
scas
and
sub
test
xlat
mov
lods
push
xchg
and
sub
or
dec
in
sub
popf
sbb
sbb
and
in
testb
jg
xor
pop
sub
jns
in
test
in
or
sbb
fs
jbe
xor
pop
mov
in
add
add
stos
sbb
or
pop
int
jo
sbb
push
add
adc
aaa
push
ss
and
sbb
jno
xchg
mov
pop
sti
sub
insl
mov
and
arpl
sbb
aas
and
and
push
mov
jmp
inc
loopne
add
xchg
push
insb
push
xchg
dec
xchg
xchg
imul
jg
add
add
test
mov
add
pop
push
push
jo
sub
mov
cmp
dec
jp
repz
xor
aam
and
fs
popl
sub
cmpsb
repnz
mov
push
outsb
cli
icebp
stc
jno
fs
leave
jge
xchg
jno
daa
jg
movsb
mov
dec
cmp
add
add
dec
pop
push
or
inc
in
cmc
cmp
sbb
pop
test
xchg
and
pop
dec
loope
or
or
test
or
loope
pop
xchg
cmc
in
cmp
test
testl
and
mov
lods
mov
dec
pop
lcall
movsl
lods
sti
mov
add
add
add
jmp
xchg
popl
sbb
or
test
outsb
in
gs
and
in
xchg
and
fsubs
xor
in
push
adc
adc
movsb
adc
in
shlb
scas
cs
cld
pmulhw
adc
lds
or
jge
push
or
add
add
xchg
push
pusha
mov
jae
loop
mov
repz
popa
sub
mov
pop
pop
pop
imul
pop
insl
add
pop
out
cli
cmp
sbb
sbb
xchg
adc
dec
add
nop
jmp
ret
or
jo
test
add
push
out
ljmp
je
ret
inc
ja
repz
inc
add
add
pop
int
and
je
xchg
or
outsb
dec
movsl
cwtl
jo
adc
dec
add
or
inc
mov
movsb
xchg
sti
loope
mov
sti
xchg
mov
xchg
push
inc
push
aas
sub
sti
xchg
pop
notl
dec
inc
lea
dec
pop
push
push
imul
out
cmp
lahf
das
cwtl
add
add
add
stc
xchg
sbb
or
adc
sahf
dec
mov
adcb
push
movsl
mov
sub
xor
lret
push
aam
add
adc
imul
hlt
stos
xchg
dec
adc
xchg
clc
test
xchg
and
popf
lahf
sub
add
movsb
gs
rol
push
pop
loopne
bnd
scas
lret
dec
popf
add
sub
ret
or
scas
jb
push
popaw
xor
pop
lods
loope
and
jp
rorl
arpl
mov
jl
sub
pop
xor
or
dec
std
insb
mov
add
and
int3
sub
mov
xchg
adc
adc
aaa
outsb
lods
xchg
push
mov
push
movsb
mov
push
gs
mov
xchg
adc
lods
cs
jecxz
dec
pop
sbb
cmp
add
fs
ljmp
lcall
sbb
imul
pushf
lods
insl
pop
xchg
pop
jle
pop
shlb
inc
pusha
push
xchg
add
add
jmp
stos
mov
pop
aad
and
insl
sub
negl
add
test
in
pusha
dec
nop
sti
hlt
in
xor
jnp
cmp
dec
pop
sub
cmpl
bound
cs
sbb
imul
push
movsb
cmp
jl
nop
jno
add
icebp
cmpsl
mov
sti
in
in
pop
cmp
cwtl
mov
cld
jge
call
adc
pop
les
or
jp
sti
add
xchg
mov
sbb
sub
adc
bound
mov
mov
adc
dec
mov
jo
jb
inc
add
add
decb
jb
inc
jb
add
rorb
mov
dec
mov
add
jbe
icebp
add
in
inc
xchg
xchg
test
push
xchg
dec
imul
mov
add
push
ret
sub
add
and
fldenv
xchg
cmp
mov
push
dec
outsb
jle
add
push
add
add
or
mov
and
or
jmp
aas
xchg
cmp
pop
adc
daa
or
sbb
lret
int
sbb
repnz
mov
negl
lcall
pop
lock
fstpl
lcall
in
stos
mov
jmp
mov
aam
shl
insl
leave
imul
push
popa
sub
push
pop
pop
xchg
lods
ljmp
and
lea
jmp
les
ss
xchg
and
ds
xchg
and
sbb
sbb
outsb
push
push
add
fs
add
je
add
in
xchg
and
insb
in
xchg
stos
sub
nop
mov
fs
add
fiadds
pop
je
add
mov
iret
pop
push
adc
in
add
and
jmp
movsb
pusha
nop
or
insb
insl
lds
gs
jmp
insl
push
divb
sub
sub
js
push
jle
scas
and
cmpsl
outsl
sub
clc
inc
pop
jmp
fadds
mov
sub
mov
dec
insb
movsb
imul
add
add
mov
ljmp
ljmp
mov
ljmp
rcll
mov
add
mov
fs
xchg
adc
add
ret
inc
mov
xor
mov
fs
or
imul
addb
lret
out
xchg
loop,pt
mov
push
xchg
xlat
out
xchg
imul
add
and
add
decb
sahf
loop
jb
push
xchg
pop
mov
or
mov
add
inc
jecxz
mov
imul
dec
loopne
xchg
inc
adc
mov
add
jae
or
push
test
dec
cld
sub
mov
push
daa
inc
mov
pop
add
add
add
icebp
test
xchg
in
xor
out
shrl
imul
dec
sti
outsl
mov
xchg
push
cmp
and
pop
cmp
test
push
cmpb
inc
cmp
mov
test
mov
test
and
stc
push
inc
les
outsb
in
mov
sub
push
inc
data16
add
gs
and
es
xchg
and
popa
mov
mov
jo
daa
outsb
in
sbb
dec
std
push
pop
or
sbb
imul
pushf
daa
adc
mov
jecxz
or
dec
aad
loope
rcll
sbb
xchg
and
stos
xchg
xchg
cmc
sahf
pop
push
daa
and
imul
push
push
jb
xchg
dec
data16
dec
add
add
xchg
sub
gs
sub
rcll
push
jecxz
in
and
sub
insb
in
lods
mov
cmp
es
sub
imul
into
jp
lcall
jno
mov
fmuls
adcb
movzwl
cmpsl
aas
ret
add
adc
les
imul
add
push
dec
adc
add
push
je
jb
mov
fisttpl
mov
lds
sbb
ds
xchg
lds
daa
lsl
adc
mov
add
shrl
sbb
imul
outsl
fisttpll
mov
cli
push
frstor
pop
cmp
cmp
jns
xchg
nopl
add
cmp
outsl
and
aad
daa
cmpsb
jp
lods
sbb
loopne,pt
jb
loopne
jp
add
xchg
and
add
add
or
sub
mov
sbb
push
sbb
push
jge
and
test
push
sbb
xchg
and
or
add
add
or
jp
and
pop
pop
iret
add
imull
popf
icebp
sbb
iret
xchg
mov
or
or
inc
lea
dec
or
nop
and
sbb
or
daa
stos
inc
outsb
fs
add
push
add
flds
inc
push
test
or
xchg
and
inc
cmp
movsl
lods
out
add
add
dec
add
roll
inc
pusha
aam
ds
aas
xor
aad
ss
sbb
xchg
insl
repnz
fisubrs
sbb
cli
in
xchg
and
mov
ret
jecxz
cltd
xorl
dec
add
push
pushf
sub
cltd
pushf
cmp
cli
sub
aas
lock
push
mov
add
lret
add
out
xchg
add
inc
in
jno
sti
rorb
inc
pushl
subl
add
popa
mov
sub
in
sbb
add
cli
and
int
mov
inc
popl
dec
cmp
dec
and
fmuls
and
inc
insl
loop
or
loope
push
insb
jmp
add
sub
outsb
xchg
aas
mov
das
rclb
imull
add
shrb
mov
ficomps
xchg
add
dec
or
inc
add
push
fs
hlt
push
add
ds
test
into
daa
stos
inc
rclb
dec
push
pop
les
iret
xor
xlat
iret
or
sahf
daa
add
jp
cmp
sarl
in
add
add
into
mov
or
mov
mov
imul
insl
jecxz
and
and
sub
and
addb
test
xchg
mov
adc
shll
or
xor
psrad
test
test
xchg
mov
rorl
add
mov
test
test
xchg
xchg
inc
pop
adc
test
xchg
in
subl
pusha
sbb
mov
jno
lahf
add
and
pop
pushf
outsb
test
arpl
leave
popa
dec
in
sbb
push
ret
test
out
xor
xchg
and
jge
mov
mov
or
jne
orb
add
add
sbb
mov
sbb
ljmp
insb
repnz
out
lods
xor
arpl
lcall
sub
flds
jp
sub
lods
xchg
and
movsl
lods
adc
and
jmp
repz
add
push
xor
xor
add
jle
sldt
add
xchg
popf
jmp
lea
and
stos
out
and
xor
mov
outsl
xchg
mov
jne
sti
mov
fldenv
andl
add
lea
mov
or
aaa
sub
mov
push
sbb
mov
ds
sbb
add
bound
sbb
push
pusha
clc
push
clc
xchg
xor
mov
xchg
nop
ds
sbb
stc
cltd
mov
insb
mov
cmp
sub
sahf
push
push
add
gs
stos
cli
jmp
jb
test
shlb
or
cmp
test
ds
mov
cmp
xor
xchg
ds
daa
stos
and
xor
inc
fiaddl
inc
dec
sbb
insb
xlat
icebp
sbb
outsb
jp
test
jmp
repz
sbb
int3
pop
fs
jbe
and
add
mov
or
jns
inc
adc
test
loop
jle
add
add
sahf
or
and
pop
add
add
loopne
sbb
sahf
add
and
pop
pop
mov
sbb
popf
add
and
pop
adc
outsb
in
or
sub
and
cld
mov
outsb
fisubrl
jecxz
sub
sbb
sub
int3
cltd
dec
jne
and
imul
and
mov
inc
lcall
pop
mov
ljmp
mov
in
mov
lcall
dec
mov
outsb
lcall
jle
outsb
add
lret
scas
and
roll
in
xchg
jne
sti
outsl
call
pop
xchg
xor
inc
xchg
add
dec
pop
and
and
xchg
mov
add
push
push
nop
sti
das
insl
xchg
mov
push
nop
sti
aas
aad
and
and
dec
movsb
in
jae
nop
sti
dec
or
cs
inc
subl
mov
sti
enter
out
and
stos
and
andb
in
dec
cmpsl
pop
mov
js
xchg
rolb
cmp
lea
outsl
in
clc
shlb
inc
xchg
dec
imul
mov
and
add
dec
imul
imul
pop
xchg
aas
lret
jge
dec
imul
mov
add
xchg
ret
xchg
adc
xchg
in
push
mov
push
or
dec
adc
mov
in
pop
dec
imul
push
cli
stc
arpl
ds
xchg
push
dec
sub
push
xchg
adc
mov
and
test
add
add
test
rsm
mov
adc
test
fnstenv
cld
test
test
jp
imul
and
roll
and
icebp
add
loope
pop
xchg
xlat
sbb
jo
mov
push
xor
mov
and
mov
add
and
test
sub
addb
add
sub
aas
xchg
dec
add
pop
mov
inc
jecxz
outsb
loope
in
xchg
call
fcmove
flds
in
push
pop
cmp
insb
in
xchg
fmuls
in
xchg
inc
fimull
inc
in
inc
scas
mov
dec
sbb
push
push
jns
in
dec
jns
out
aam
data16
test
inc
cmp
add
add
pop
jb
imul
fsubrs
push
mov
jbe
ljmp
popw
push
adc
pop
mov
and
nop
sti
mov
jnp
pop
scas
outsb
sti
pop
or
add
pop
jb
sti
outsl
ficomps
les
xchg
rcll
pusha
js
add
jle
gs
and
cmp
fbld
mov
daa
popa
mov
and
in
cmp
lahf
lea
or
in
or
jbe
ret
xchg
add
xchg
rolb
psubb
sbb
dec
imul
dec
imul
inc
pop
xchg
enter
dec
inc
push
add
add
dec
inc
pop
xchg
lret
xchg
dec
inc
pop
mov
dec
inc
pop
xchg
lret
xchg
dec
inc
pop
lret
cwtd
rcr
add
dec
xchg
mov
dec
adc
ds
sahf
inc
fldl
cmp
xchg
shrl
int
pop
js
jnp
inc
inc
sub
negl
cltd
lods
dec
cld
scas
arpl
sub
push
jp
add
push
xor
outsl
lock
mov
mov
adc
add
dec
test
sbb
add
xchg
scas
or
fisubs
test
cmpxchg
pop
xchg
and
or
loop
jge
xchg
mov
add
mov
aas
lock
repz
popa
or
and
add
mov
js
or
add
add
add
je
add
push
or
in
xchg
and
jbe
add
mov
cmp
add
push
or
in
xchg
and
xchg
jae
dec
rcrl
out
je
imul
movsb
lea
cmpsb
jbe
or
in
xchg
and
cmp
ss
xchg
and
ja
xchg
xlat
mov
add
jbe
insb
in
xchg
stos
cmp
mov
insb
aaa
or
or
add
and
ret
add
xchg
mov
xchg
sti
fisubl
enter
clc
mov
in
mov
mov
jbe
scas
roll
scas
fildl
jae
dec
push
subb
add
mov
outsb
push
adcl
add
add
mov
sub
xor
mov
in
aaa
mov
mov
mov
jo
das
push
in
fwait
pop
and
xchg
dec
imul
dec
imul
mov
pop
adc
cmp
xchg
dec
imul
adc
das
mov
ficompl
xchg
dec
pop
les
cmp
ret
jg
jne
sbb
data16
add
xchg
or
xchg
pushf
xchg
pop
cmp
daa
inc
imul
xchg
repnz
cmp
fsubrs
lea
adc
add
icebp
jg
sahf
push
xchg
push
jg
or
es
and
aad
test
leave
or
adc
mov
pop
shr
test
stc
int3
xchg
sti
adc
add
sbb
pop
add
add
jnp
lods
sub
ss
test
in
mov
push
es
in
mov
enter
std
hlt
mov
in
test
je
out
mov
fdivrl
cmp
bound
aam
test
das
ds
jbe
and
mov
shll
and
repnz
mov
icebp
add
add
insl
pop
sub
sub
jmp
mov
xchg
and
insb
pop
fisubrs
inc
repnz
mov
xchg
scas
daa
inc
lahf
cmp
xchg
dec
cmp
or
and
jbe
iret
push
movsl
mov
jecxz
mov
cld
mov
push
mov
in
xchg
shl
lcall
add
cld
test
clc
outsb
subl
outsb
mov
and
das
cs
mov
js
jo
mov
popa
subl
out
cmp
lods
es
inc
xchg
xor
ss
and
js
inc
add
mov
outsb
add
movsl
nop
sti
lock
pop
les
sub
jl
add
mov
in
add
sub
and
or
sub
add
mov
jg
jo
cmp
xor
pop
mov
mov
dec
imul
xchg
mov
lcall
and
cmp
add
push
dec
inc
js
lea
nop
add
add
push
arpl
or
and
dec
add
cmpsl
xchg
or
add
outsl
pop
repnz
jno
jg
pop
es
mov
add
mov
test
push
out
inc
xlat
cld
jmp
mov
add
lods
and
test
pop
cltd
mov
push
adc
movsb
pop
xchg
mov
adc
clc
push
and
movsb
pop
xchg
lret
mov
clc
sti
add
loopne
sbb
mov
mov
loopne
fucom
outsl
add
mov
sbb
cwtl
aas
xor
xchg
and
inc
sbb
leave
insl
loop
mov
push
cmpsb
psraw
and
call
aad
push
mov
add
add
xchg
push
mov
mov
repnz
xchg
jmp
ja
pop
aam
sbb
outsl
arpl
repz
nop
cmp
sbb
in
xchg
inc
jne
aaa
cmp
mov
repnz
jecxz,pn
sahf
idivb
in
cmp
mov
ret
nop
pop
pop
mov
push
sub
lods
lods
jp
and
push
pop
fwait
push
out
or
add
mov
pusha
cltd
add
mov
les
xchg
nop
sti
sub
sub
out
sbb
xor
mov
pusha
mov
popa
out
cld
add
lds
add
mov
in
cld
ljmp
add
cmp
and
xor
jno
mov
and
add
add
pop
das
or
dec
add
sbbb
test
mov
stc
push
jae
or
dec
das
stc
pop
mov
push
iret
or
test
scas
imul
gs
out
js
imul
inc
imul
insb
add
jno
add
dec
jle
and
push
add
add
ds
test
imul
pusha
das
stc
jnp
dec
add
aas
in
pop
stos
xchg
aas
mov
pop
js
and
test
xchg
test
sarb
adc
test
xchg
and
test
pop
lds
pop
inc
and
lea
xchg
call
mov
push
xor
pop
cs
or
add
sbb
pop
or
sub
xor
cmpsl
xchg
and
pushf
pop
jecxz
add
fnstenv
stc
shlb
and
add
jp
mov
and
cli
mov
xor
jne
outsb
ljmp
cs
and
jp
and
xchg
xor
imul
loop
add
and
sub
pop
pop
outsl
sti
sub
cmp
jno
xchg
lock
popa
int
outsb
in
mov
dec
in
xchg
and
ret
mov
cwtl
stos
lods
enter
adc
xor
outsb
and
jnp
add
cmpsb
xchg
push
shlb
cld
ret
adc
rcll
add
stos
imul
add
adc
pop
push
mov
lock
jo
in
sbb
xchg
cmc
rclb
or
imul
and
sub
in
sarl
and
add
push
push
loop
out
outsb
add
xor
push
jp
adc
add
testb
popf
mov
out
lds
pop
inc
psubw
add
add
push
pop
sub
push
dec
in
in
cmp
cmp
cmpsb
aas
jecxz
ljmp
adc
push
mov
popa
nop
push
jge
or
or
mov
popa
mov
aas
sub
mov
cmpsb
daa
cmpsb
cmp
inc
lcall
daa
xchg
inc
jb
out
fwait
pop
dec
or
inc
xor
adc
add
bound
or
les
cmp
mov
xchg
and
inc
and
pushf
dec
and
pushf
pop
and
pushf
and
test
bndldx
rcrb
test
iret
pop
jns
cmpl
js
test
pushf
hlt
push
adc
adc
pop
pop
fisubl
pminsw
psrad
xchg
dec
lds
add
add
or
loope
jno
rorb
xchg
sbb
and
jle
xor
orb
pop
mov
sbb
mov
insl
in
xchg
and
outsb
in
insb
jns
cmp
or
pop
push
pop
popa
test
outsb
in
cwtl
rorl
sub
andb
fs
fs
add
addr16
xor
lods
and
dec
flds
add
sbb
pop
stos
test
ja
out
test
out
push
dec
and
mov
and
sub
mov
or
and
sub
nop
push
or
add
outsl
lahf
lea
adc
mov
pop
jbe
dec
adc
cmp
daa
or
in
pop
popa
aad
pushf
dec
xchg
add
xor
add
ja
add
lcall
jg
sub
inc
mov
jno
mov
inc
push
sti
test
lods
imull
lea
cmovbe
aas
pushf
cmp
lahf
adc
cmp
popa
mov
sbb
add
xchg
outsl
sbb
adc
adc
or
adcb
add
add
cmpsb
daa
cmpsb
cld
loop
jp
jno
cmp
int3
cltd
enter
ja
js
sub
sbb
cwtl
sti
mov
imul
adcb
imul
cli
jo
mov
lods
adc
cmp
add
nop
rcrl
xchg
cmp
imul
pusha
jp
insl
sti
test
push
dec
out
movsl
and
add
cmc
xchg
mov
push
or
and
subl
mov
lret
sbb
out
lds
push
sbb
pop
push
rclb
push
add
dec
lea
data16
les
pop
pop
subb
inc
and
inc
cli
pop
push
out
inc
or
xor
add
ret
sahf
rcrl
loop
or
lds
push
out
data16
sub
movsl
push
sub
push
push
movsb
loop
xchg
dec
stos
aad
out
mov
pop
cmp
push
xor
xor
loop
sbb
mov
xor
add
sub
add
mov
add
sbbl
outsb
data16
add
cld
in
mov
pop
cmp
jecxz
mov
in
mov
pop
lods
push
mov
movsl
fldenv
push
xchg
and
in
fwait
xor
push
popl
daa
push
inc
fildl
popa
cmpl
cltd
sub
rorl
iret
jp
shld
sub
and
xor
add
out
fwait
add
aam
scas
daa
push
pop
shll
in
mov
outsb
or
and
push
pop
and
add
cmp
dec
adc
and
imul
popf
loop
jmp
outsb
add
gs
and
cmp
xchg
cmp
pop
add
xchg
rorl
cmp
inc
jno
cmp
add
add
popa
xlat
cli
fnstcw
clc
or
cli
leave
cmp
mov
call
in
mov
testl
or
cld
push
xchg
mov
daa
lret
daa
mov
mul
test
mov
or
outsb
inc
xchg
cmp
jo
ja
jb
and
enter
mov
push
sub
pop
add
add
sub
jb
test
xchg
cmp
push
or
mov
push
pushf
leave
sbb
out
mov
add
out
mov
or
push
sub
out
in
fiaddl
sbb
pop
sub
and
test
pcmpgtw
int3
mov
mov
add
sbb
add
add
outsl
imul
sub
js
test
add
in
xchg
and
jmp
jno
insl
loop
jbe
sub
mov
sbb
jne
xchg
sahf
ljmp
lahf
sub
mov
aaa
cli
add
xor
xchg
and
dec
inc
fwait
and
dec
xor
add
in
xchg
and
cltd
lds
add
in
and
sbb
mov
stc
add
in
xchg
and
push
add
std
jge
lcall
jnp
and
mov
push
out
dec
jmp
jg
call
js
cmpsb
sbb
enter
rcl
mov
cs
mov
nop
aas
cmp
xchg
lea
lods
bound
lea
add
repz
jns
inc
std
cmp
sbb
aas
or
push
out
shrl
push
push
and
or
subb
pop
jg
shlb
or
mov
stc
dec
cmpsb
ljmp
cmp
sub
sahf
inc
pop
lea
add
imul
out
add
mov
pop
xor
movsl
dec
adc
cltd
mov
sbbl
in
mov
leave
aaa
mov
inc
lods
idivl
push
ret
push
in
mov
outsl
adc
lods
push
outsb
mov
cmp
cmpsb
daa
scas
and
popa
sahf
lcall
aam
aam
aam
frstor
pop
push
push
ja
movl
add
mov
out
shl
test
adc
std
push
and
test
rclb
popf
push
and
cmc
push
xchg
and
xchg
jle
add
jle
add
pop
xchg
lcall
xchg
outsl
xor
sbb
pusha
and
inc
jns
add
into
test
push
repz
outsb
loop
fldenv
xchg
xor
out
cld
mov
add
jmp
and
in
mov
int
test
jecxz
outsb
push
je,pn
dec
inc
ljmp
dec
dec
in
adc
jecxz
subl
mov
pop
push
pushf
addb
adc
insl
in
xchg
xor
out
dec
mov
imul
fimuls
pop
add
add
mov
dec
inc
jle
outsb
mov
dec
inc
add
lods
add
fdivl
jl
outsl
sub
orb
sti
aas
call
ds
mov
dec
pop
sub
push
fisubl
jecxz
outsb
add
jb
and
sub
sarb
push
je
xchg
mov
daa
outsb
popl
add
inc
dec
cs
fstpt
and
ja
adc
jnp
sub
mov
or
mov
adc
arpl
add
ja
int3
and
into
mov
inc
inc
xchg
or
jecxz
stos
and
test
test
cmp
adc
fprem
xchg
test
adc
cltd
ret
pop
enter
add
mov
push
inc
mov
stos
sbbb
cmp
lret
fcoml
out
lock
test
inc
add
xchg
orl
or
lds
roll
jge
xchg
mov
and
push
in
cmpsb
add
xchg
xchg
pop
inc
sub
cltd
xchg
enter
jns
xor
and
pop
pop
imul
stos
jae
call
outsb
xor
jmp
popa
pop
xchg
and
jns
ret
and
and
and
pop
psubb
xchg
mov
jp
xchg
mov
and
and
test
pop
scas
dec
pop
xor
pusha
dec
adc
sub
leave
aad
in
imul
mov
cmp
adc
dec
sub
add
add
pop
mov
push
push
scas
sub
push
popf
pop
arpl
lcall
and
push
xor
mov
xchg
loopne
in
icebp
pop
sub
fisubl
test
bound
fsubrs
push
dec
int
fisubrl
out
fisubl
fbstp
scas
test
pop
inc
add
add
popa
nop
outsl
cmpb
es
sub
insb
xchg
sti
dec
out
push
mov
das
jg
aaa
das
in
inc
xchg
inc
in
add
pop
les
sbb
inc
outsb
imul
push
ss
and
push
test
outsl
cmpsl
mov
cmp
mov
mov
addl
add
scas
sbb
inc
jecxz
out
roll
mov
shrl
pminub
pop
shrb
pop
mov
sbb
cmp
mov
into
pop
test
or
cltd
sub
loopne
dec
push
push
dec
popa
aam
mov
inc
mov
add
jo
sti
pop
mov
mov
add
mov
clc
fimull
les
std
add
add
imul
or
ret
in
mov
inc
mov
inc
stos
flds
push
push
inc
cmpb
test
or
xchg
pop
push
cwtl
jnp
xor
jmp
fs
mov
sub
mov
js
xchg
insb
inc
iret
std
xchg
test
sti
lods
xchg
and
push
mov
add
add
mov
add
cs
inc
push
adc
or
inc
cmpl
scas
or
sub
add
xchg
lahf
xchg
sbbb
mov
pop
xchg
or
and
push
fidivl
jl
xchg
lods
sub
icebp
pop
in
jns
push
das
test
and
sbb
fs
in
je
add
inc
jp
bound
loop
xchg
and
pop
outsb
aaa
sbb
cs
mov
xchg
int
test
push
dec
xchg
and
jnp
xchg
scas
sub
inc
pop
in
mov
push
das
pop
in
pop
xchg
and
in
cmp
jecxz
in
sub
and
popa
xchg
jbe
sti
lock
insb
inc
add
add
jo
cmpsl
xchg
and
pop
push
movsb
scas
sub
sub
jl
mov
call
push
movb
jmp
sub
aas
call
push
aam
xchg
mov
adcl
std
bound
xchg
push
adc
mov
and
das
sub
popa
xorb
dec
adc
add
mov
push
xor
int
inc
mov
xchg
add
loope
fs
push
in
aam
sub
or
shrd
push
adc
inc
xchg
push
lcall
inc
dec
adc
xchg
scas
daa
stos
daa
sub
dec
out
cli
jno
jle
xchg
scas
daa
mov
pop
or
pop
imul
leave
outsl
add
add
or
mov
xchg
aaa
aad
outsb
sti
jne
xor
xchg
scas
rcrb
gs
les
std
cmp
adc
gs
les
test
mov
out
and
sbb
test
add
inc
mov
adc
scas
dec
and
gs
mov
or
mov
xchg
and
push
mov
fwait
test
mov
cltd
pop
pop
fsubl
sbb
adc
and
xchg
sub
je
pop
push
sahf
popa
dec
stc
aad
sub
push
pop
lods
ret
mov
in
xchg
and
sub
out
mov
in
xchg
push
movsl
lods
sahf
js
ficoml
sahf
add
fdiv
add
add
pusha
pop
addr16
pop
and
fs
lods
test
jecxz
jle
cs
inc
jp
fcoms
scas
sub
push
jp
ljmp
fsub
sbb
add
cmpsl
imul
mov
dec
adc
test
lods
jp
dec
pop
aaa
mov
cmp
push
pop
add
add
xor
jo
and
or
in
ret
add
icebp
pop
add
cmpsl
sub
jecxz
out
jecxz
push
cmp
xchg
cmp
mov
pop
cmp
lahf
xor
jg
arpl
add
lods
add
jg
in
les
lahf
xchg
or
push
imul
mov
dec
ret
or
add
adc
mov
imul
mov
popa
rorb
xchg
fcomps
in
xor
pop
popf
gs
sbb
xchg
inc
jp
jp
int
inc
lcall
inc
jnp
pop
inc
push
xchg
mov
xchg
daa
mov
add
orl
dec
stc
imul
mov
test
pop
mov
test
sbb
repz
outsl
adc
xchg
xchg
stos
stc
inc
ljmp
inc
dec
inc
flds
xchg
and
xchg
xchg
je
dec
push
and
inc
xchg
mov
sbb
jp
xchg
xchg
stos
enter
leave
jecxz
xchg
push
das
pop
test
pop
xchg
add
rsm
pusha
rolb
add
pop
fidivrs
sbb
call
cltd
adcb
sbb
outsb
ss
push
dec
movsb
rcrb
cltd
lods
adc
push
jl
jb
lods
and
xor
mov
nop
cmpsb
iret
push
int
sbb
ficompl
cmpsb
movsb
pop
cmp
out
negb
movsb
xchg
mull
cmp
add
add
sub
repz
sbb
fstl
sbb
jmp
pusha
mov
loop
arpl
push
faddl
dec
dec
add
add
jecxz
in
pop
and
or
sub
cld
data16
out
push
xchg
xchg
or
add
mov
aas
and
lret
mov
adc
cli
jo
in
add
add
hlt
add
insb
xchg
sti
mov
fadds
jl
addr16
cmpsl
xchg
and
pop
push
movsb
mov
sti
nop
call
mov
dec
push
xchg
sti
xor
dec
and
es
pop
inc
and
divl
xchg
or
or
add
dec
stc
adc
insb
push
stc
popa
jg
or
mov
cld
fwait
or
pop
add
add
dec
aas
adc
push
mov
fwait
lods
inc
pop
lods
into
mov
adc
sahf
cmp
rcrb
xor
mov
pop
xlat
sbb
cmpl
dec
push
in
cld
fwait
mov
aas
sbb
push
mov
lods
inc
insl
sub
push
stc
cltd
and
fscale
and
mov
mov
roll
add
sbb
aaa
insl
adc
jns
jns
test
cmp
lock
pop
fistpll
cmp
dec
or
xchg
and
or
filds
cmp
addr16
cld
gs
gs
ljmp
fldcw
add
repz
and
or
movsl
sbb
arpl
adc
push
dec
shl
mov
adc
add
add
loope
pop
adc
bound
pop
xor
sub
lcall
das
jg
dec
or
test
jle
outsb
mov
push
push
cwtl
jmp
pop
jg
adc
xor
xchg
insb
popa
xchg
push
dec
das
roll
pop
xchg
sahf
pushf
es
sub
mov
sub
add
add
jne
or
cltd
adc
ljmp
loope
aad
popl
ds
test
popa
mov
sub
repnz
sarl
and
insb
lds
gs
jl
out
jns
loope
out
in
insw
xchg
mov
call
mov
in
sti
aas
inc
xor
add
add
stc
sti
lcall
xor
and
xor
xchg
in
sti
out
cli
in
xchg
adc
xchg
cmpl
push
or
jge
stc
test
mov
pop
stc
or
scas
push
mov
push
inc
sub
mov
xor
xchg
out
fadds
add
pop
mov
push
add
out
xchg
movsl
mov
mov
sti
arpl
mov
and
lcall
push
mov
push
xor
mov
icebp
std
push
and
imul
xchg
and
ret
xlat
roll
add
xor
inc
test
push
push
scas
lret
and
or
add
add
gs
les
imul
or
mov
mov
and
xchg
xchg
and
aad
fisubl
mov
push
in
and
pop
and
mov
das
pusha
icebp
pop
cmp
mov
cwtl
xlat
or
popa
xchg
imul
sub
sbb
add
punpcklbw
and
or
sbb
jbe
inc
jp
sahf
inc
cmp
mov
in
xchg
and
and
xchg
cs
lcall
loop
imul
mov
addr16
mov
cmp
in
test
fildl
jbe
dec
xor
xchg
and
ss
xchg
and
add
fimull
fimuls
in
adc
add
in
sti
out
mov
xor
fcomi
sti
scas
cmp
fbld
push
sbb
aam
or
popa
imul
cmp
addl
outsb
add
int3
push
aas
aaa
and
outsb
sti
add
out
out
and
mov
dec
inc
sub
mov
add
das
mov
jmp
xlat
sub
pop
sbb
lds
enter
mov
xchg
sti
xchg
xchg
and
push
push
scas
mov
cli
fsin
jecxz
jp
push
jo
mov
push
lea
adcl
orl
icebp
xchg
loop
push
mul
or
push
xchg
inc
add
add
sbb
popa
xchg
scas
dec
xchg
push
loop
jbe
dec
sub
sbbb
push
jmp
push
xchg
push
ret
mov
fidivl
inc
mov
jge
push
jae
imul
pop
xor
inc
leave
add
or
fldt
test
lret
shlb
xor
inc
flds
xchg
and
add
or
nop
xor
xor
push
or
fisttpll
faddl
or
enter
sub
iret
xor
jb
in
bound
rolb
cld
aad
xchg
mov
jmp
stos
jl
outsb
adc
xchg
jbe
and
in
xchg
and
sub
mov
add
add
inc
jp
pop
test
xchg
pushf
jmp
in
aad
sub
rcrl
es
xor
xchg
and
dec
xchg
xchg
and
cltd
popa
outsb
insl
in
xchg
or
or
in
mov
and
mov
xchg
or
rorl
dec
fldcw
outsb
dec
icebp
out
test
pop
outsb
add
add
lods
rcll
add
mov
jmp
in
incb
outsb
aas
imul
add
inc
push
xchg
xchg
rorb
add
cmp
repz
pop
or
pop
data16
or
push
mov
movsl
scas
add
jbe
lret
std
jbe
and
orb
sti
in
dec
pop
outsb
and
add
jmp
mov
sti
xchg
push
pop
xchg
push
dec
sub
jb
imul
std
push
add
push
pop
push
pop
stc
adc
mov
iret
pop
stc
fsts
push
jg
adc
movsl
jmp
fdivrl
add
dec
lea
bound
pushf
mov
shl
jp
xchg
cmpsl
daa
cmpsb
inc
cmpsb
daa
mov
jnp
jg
dec
bound
push
aam
test
sub
rorb
clc
outsl
imul
cmpl
push
ret
mov
aad
cli
shrb
lock
test
pop
stc
jecxz
test
paddusb
or
add
add
jp
xchg
xchg
or
jecxz
test
mov
mov
nop
xor
lds
lret
mov
xor
jno
xchg
xchg
mov
or
and
pop
pop
fwait
and
adc
test
outsl
or
in
xchg
and
cmp
lea
movsl
sbb
push
out
pop
outsb
add
add
pop
xchg
iret
bound
ss
pop
and
into
inc
dec
ljmp
jmp
in
rcrl
ds
xchg
and
fcmovb
popa
pop
in
or
ss
xchg
jns
insl
in
xchg
or
add
popl
sub
mov
xchg
stos
xor
add
add
and
out
dec
mov
and
stc
and
aas
and
outsb
aas
mov
push
xchg
sti
add
and
sahf
pushf
add
and
orb
out
fwait
sbb
push
sub
and
and
and
xchg
mov
aad
sti
scas
mov
pop
jle
outsb
sti
lret
or
add
mov
sti
jg
call
xchg
fstpt
xchg
jecxz
push
call
xchg
push
imul
push
jb
adcl
mov
adc
into
or
adc
or
xchg
cmp
sti
mov
mov
add
shrb
xchg
rclb
push
jp
stos
dec
pusha
cmp
and
imul
imul
add
mov
push
imul
ljmp
mov
and
mov
push
jns
sbb
test
test
ds
or
jne
pushf
mov
sub
sti
push
dec
loop
sbb
push
push
ds
in
test
and
test
js
dec
xchg
push
pop
and
add
mov
xchg
xchg
mov
sub
dec
stc
add
add
jecxz
test
stos
mov
test
loop
leave
add
add
sbb
sbb
mov
pushf
aam
add
sub
jg
in
xchg
lods
cmp
stos
cmp
add
xor
sbbb
push
mov
cmpsb
leave
mov
jecxz
add
add
sbb
test
sbb
mov
stc
lds
adcb
in
xchg
cmpsb
lods
repnz
cmp
stos
or
push
sti
push
push
inc
jmp
in
mov
xor
lods
lods
imul
jg
in
outsb
or
sub
push
add
in
xchg
xor
je
lods
lods
movsb
xchg
or
add
add
add
push
xchg
and
movsl
xchg
push
sub
popa
andb
outsb
add
dec
bound
movsb
xchg
or
sub
std
jb
outsb
add
stos
nop
add
and
in
repnz
outsb
add
lock
cmp
outsb
add
movsl
push
push
fsubrs
sub
add
popl
mov
add
movntq
out
add
add
outsl
imul
mov
jg
mov
lea
xchg
push
imul
mov
les
mov
in
cltd
lcall
add
mov
xchg
test
adc
adc
lea
xchg
push
imul
je
aaa
loopne
push
out
aad
stc
flds
push
mov
inc
outsb
sti
add
add
and
ja
mov
imul
cs
xor
adc
lods
or
mov
scas
pop
in
gs
dec
mov
test
add
fcmovne
test
pop
in
push
das
ljmp
imul
pop
fistpl
test
out
aad
add
add
test
das
jecxz,pn
push
das
or
popf
lods
rcr
jge
addb
cmpsb
and
mov
icebp
in
shll
jmp
movsl
lods
out
xchg
and
pop
data16
adc
loope
cmp
in
bound
or
dec
arpl
mov
outsl
pop
add
add
pop
insl
in
xchg
xor
sub
decl
mov
aas
outsb
sbb
and
fiaddl
into
decl
xchg
mov
insl
add
and
lahf
jle
jo
mov
xchg
jno
subl
cmpb
or
mov
or
mov
data16
jl
out
jns
out
sbb
add
add
mov
dec
sub
data16
xchg
sti
add
dec
cmp
negb
xchg
and
and
xor
in
das
xor
pop
mov
jo
jo
sbb
fs
inc
xchg
or
out
xchg
or
mov
mov
or
scas
inc
xchg
or
inc
add
add
sbb
mov
ret
xchg
or
sti
jo
scas
pop
xchg
push
imul
xor
xchg
xchg
dec
jnp
pop
xchg
push
imul
lahf
inc
stc
sbb
xchg
xchg
pushf
inc
stc
andps
add
push
jb
or
cli
add
stos
dec
stc
cmp
or
es
mov
int3
fdivr
test
add
add
cmpsb
dec
mov
and
xchg
xchg
stos
icebp
add
dec
test
sbb
roll
das
aad
daa
dec
rcll
push
je
jnp
call
cld
cmp
pop
je
aad
adc
leave
adc
pop
std
adc
xchg
stc
mov
and
mov
in
xor
add
add
pop
adcl
cwtl
push
scas
jmp
in
aad
cltd
icebp
pop
insl
in
xchg
sub
test
cli
flds
into
cli
mov
test
std
and
xor
in
xchg
and
fld
push
cld
mov
mov
and
test
clc
mov
sub
xchg
stc
mov
lods
enter
add
xchg
lods
jmp
in
push
imul
xchg
sub
and
sti
mov
add
dec
add
jne
pop
outsb
pop
add
xchg
mov
in
sti
out
inc
fisubl
or
outsb
add
jle
in
fwait
push
xchg
sti
xor
addl
sub
sti
js
xor
andb
sti
jg
fcoms
out
sti
add
add
add
popa
mov
es
mov
in
sti
outsl
icebp
fadds
mov
cs
pop
bnd
sti
aas
and
xor
xchg
jb
out
dec
xchg
repnz
jno
or
jecxz
js
stc
sbb
or
inc
inc
pop
lcall
jb
imul
iret
sti
shlb
xchg
or
or
add
call
or
mov
loopne
add
mov
xchg
pop
scas
pop
xchg
push
imul
jmp
cli
jns
mov
lret
imul
in
negl
loopne
nop
insl
clc
dec
call
imul
mov
or
xor
mov
scas
inc
add
mov
mov
inc
cmpsb
fcoml
add
add
and
mov
sar
test
out
clc
in
pop
test
dec
lods
pop
sub
push
daa
adc
repnz
daa
or
jne
add
mov
addr16
pop
test
jo
test
fprem
pop
in
mov
scas
dec
add
pusha
les
test
or
rclb
pop
outsb
in
xchg
and
add
clc
fxch
fdecstp
mov
mov
dec
xor
out
test
push
sub
mov
stc
mov
mov
outsb
fs
insl
in
xchg
scas
cmpsl
push
addr16
mov
and
outsb
fidivrl
push
insl
lods
in
fld
push
clc
mov
movsb
scas
sub
mov
dec
mov
iret
movsl
movsl
jge
testl
xchg
and
xor
dec
xor
clc
flds
in
sti
aas
mov
iret
push
xchg
sahf
sti
lock
lods
or
insl
sub
jmp
xchg
sti
adc
icebp
add
and
inc
fcmovne
xchg
inc
xchg
or
scas
insb
lds
gs
mov
pop
aas
or
dec
inc
push
repnz
mov
and
add
add
sub
add
stos
sub
aas
cmpsl
sub
das
stos
call
mov
out
xchg
sub
inc
jb
jmp
sbb
sub
or
dec
jb
inc
and
mov
fistl
push
into
je
daa
bound
jo
cmc
jp
stc
or
imul
add
leave
pop
dec
shl
adc
loop
jp
imul
mov
daa
ss
sti
adc
pop
test
add
in
leave
imul
xchg
push
bswap
xchg
push
in
movsl
push
push
sbb
dec
pop
add
hlt
adc
int
test
fwait
mov
test
adc
test
in
xor
add
add
test
psraw
pop
mov
std
jo
jecxz
rorl
sahf
shl
xor
adc
test
xchg
xor
orl
test
adc
adc
fwait
jp
xchg
fimull
mov
cltd
test
xchg
mov
fs
hlt
sbb
fxtract
insl
jp
bnd
popa
xor
bnd
insl
ljmp
arpl
add
add
and
adc
popf
sub
ds
cmp
or
xor
out
pop
loope
icebp
mov
in
xchg
movsb
ljmp
js
test
jbe
inc
inc
push
testl
mov
stos
stc
in
xchg
and
insl
in
xchg
cmpsb
repnz
nop
sbb
outsb
add
out
mov
add
cwtl
lahf
sub
aas
mov
call
mov
std
into
add
daa
push
int3
jecxz
xchg
adc
adc
jecxz
ds
leave
stc
call
cmpsl
fwait
sti
cmp
test
mov
xchg
sti
and
dec
add
mov
dec
add
mov
dec
add
mov
add
scas
dec
add
scas
dec
add
scas
dec
add
mov
add
scas
dec
add
add
std
scas
dec
add
scas
dec
add
mov
add
scas
dec
add
scas
dec
add
mov
aam
xchg
or
cmp
mov
cmp
lret
xchg
push
fdivrs
xchg
xchg
out
cmp
cmp
cmp
xlat
sarb
xchg
xor
cmp
sub
cmp
ror
xchg
and
cmp
add
xchg
adc
int3
cmp
test
cmp
xor
cmp
lcall
xchg
movsb
cmp
and
cmp
mov
lock
test
nop
mov
and
xorl
and
fidivl
jo
mov
lods
pusha
and
add
xchg
mov
and
inc
xchg
shlb
xchg
mov
hlt
xchg
test
mov
cwtl
cwtl
and
dec
xchg
mov
pop
into
js
sub
push
and
jmp
popf
sub
sbb
mov
and
sbbl
data16
push
jae
pusha
or
jno
add
add
wrmsr
inc
dec
dec
or
dec
inc
add
cmp
pop
xor
add
pop
and
fdivrs
pop
aaa
jmp
pop
xor
les
push
vcvtss2si
ret
sub
daa
enter
out
xor
shlb
mov
int
adc
outsb
add
ret
adc
dec
add
ret
dec
add
mov
add
dec
add
dec
add
lds
faddp
dec
add
cwtl
dec
add
cwtl
dec
add
lds
lds
fcmovnb
dec
add
les
push
les
mov
dec
add
rorb
rorb
rorl
rorl
rorl
mov
dec
add
mov
dec
add
cltd
dec
add
mov
dec
add
rorb
add
aas
mov
sarb
mov
cmp
loope
cmp
jp
cmp
mov
cmp
add
cmp
xor
cmp
and
cmp
cmp
cmp
cld
push
sbb
stos
cli
sbb
loope
mov
jnp
daa
lcall
mov
jne
call
fmull
sti
mov
mov
and
int
cltd
pop
mov
insl
push
dec
leave
mov
jns
inc
dec
gs
mov
inc
mov
or
jb
test
xchg
and
and
xchg
and
cmp
xchg
and
xchg
xchg
cs
fldenv
test
add
add
pushf
add
xchg
and
sub
stc
outsb
lea
xchg
sbb
mov
jnp
test
and
mov
jge
and
xlat
and
outsb
cmpsb
jb
cs
nop
push
sub
roll
fs
dec
and
je,pt
dec
jle
gs
jmp
in
add
add
inc
xchg
in
xchg
and
or
xchg
sahf
test
jbe
outsb
js
inc
mov
pop
inc
push
insl
in
xchg
sahf
and
sbb
bound
mov
in
idivb
pop
pop
pop
lods
test
jmp
add
pop
sub
cmp
and
dec
xchg
leave
popa
mov
repz
stos
ja
flds
add
mov
mov
and
daa
outsb
add
push
pop
outsb
daa
outsb
jmp
push
add
push
aaa
outsb
add
mov
outsb
add
out
push
pop
outsb
add
mov
loope
mov
add
stos
lds
pop
sti
jo
stos
lea
es
pop
push
out
xchg
fsubrs
add
cld
in
add
add
mov
push
xchg
ja
add
push
xchg
and
test
and
std
push
or
pop
push
sbbl
out
add
cld
in
push
adc
and
push
cld
push
sbb
fists
adc
push
add
cld
in
push
and
and
jne
and
sti
push
sbb
pop
sub
xchg
hlt
les
add
add
ror
lds
test
xchg
pushf
add
aad
test
adc
xchg
sbb
test
xchg
and
test
xchg
pushf
rcr
sub
add
out
and
xchg
mov
test
or
xchg
xchg
xor
les
mov
sub
pushf
leave
unpckhps
adc
add
add
fs
adc
test
pushf
xor
ret
sbb
test
and
mov
cmc
cwtl
and
scas
stc
cmpsl
sbb
call
sub
xchg
and
push
in
xchg
xor
outsb
in
aad
sbb
call
cli
fwait
dec
in
mov
push
jns
in
in
xchg
jno
xor
add
dec
sbb
cltd
cmp
and
ficompl
popa
in
xchg
xchg
pop
std
imul
dec
dec
lea
lock
xchg
and
lods
aad
loope
add
and
out
fwait
out
fwait
mov
pusha
out
and
addr16
jo
dec
in
negl
dec
hlt
mov
add
add
add
add
sub
xor
dec
pusha
scas
and
push
mov
in
hlt
pop
add
out
cltd
stc
je
adc
lcall
scas
inc
insb
sti
cmp
inc
aas
push
cmp
xor
and
pop
xchg
sbb
rcr
mov
sbb
push
popf
jae
and
push
movaps
xchg
add
add
lock
jnp
and
std
push
xchg
jnp
and
cld
push
leave
subl
pop
jne
daa
push
divl
inc
xchg
cld
push
pop
js
addr16
cld
push
fnstenv
adc
xchg
jns
jo
movsl
mov
movsl
inc
pop
cld
adc
pop
add
cld
push
xchg
jmp
in
test
add
andb
add
lcall
gs
mov
pop
filds
fs
add
sbbb
pop
jecxz
call
add
mov
pushf
lea
out
repz
out
jno
add
dec
out
inc
pop
sahf
test
push
sbb
in
push
negl
jb
lcall
popa
test
adc
lret
rorb
insl
in
xchg
and
dec
cltd
lcall
fs
or
ja
pop
jbe
or
loope
outsb
in
xchg
mov
push
insb
lods
test
mov
scas
xor
cmc
lods
add
or
outsb
in
sub
dec
stc
adc
dec
adc
add
add
cmpsl
mov
jno
sbb
outsb
scas
sub
sbb
movsl
scas
sahf
adc
faddl
sbb
pop
cli
and
in
push
mov
movb
add
jecxz
std
mov
push
inc
xchg
mov
xchg
jbe
pop
add
mov
sub
jb
popa
addl
add
push
sub
inc
movsb
dec
adc
and
inc
push
pushf
dec
inc
shl
push
repz
daa
in
mov
lret
push
or
sub
enter
inc
je
sbb
xchg
xchg
int3
mov
imull
or
and
add
mov
scas
xchg
int3
push
repnz
xchg
int3
push
sbb
xchg
inc
out
inc
int
add
add
xchg
dec
xchg
int3
push
push
add
adcl
cmc
xchg
jmp
clc
dec
leave
fadds
arpl
ss
int3
push
sbb
inc
sahf
sti
cltd
inc
fisubs
notb
ja
ja
mov
xor
add
int3
adc
add
push
jne
jg
dec
fisttpll
or
or
xchg
fwait
cmpsb
insl
pop
add
add
xor
cmp
jecxz
pop
add
fidivl
pusha
ud1
sbb
test
jno
mov
adcl
xchg
pop
fwait
int3
loop
xchg
push
scas
inc
in
mov
test
xchg
inc
sbb
jecxz
and
pop
and
or
outsl
jmp
sbb
adc
into
int
outsb
flds
add
jp
lods
out
mov
and
inc
pop
outsb
adc
push
es
cmpsb
cld
in
xchg
and
pop
cmp
push
stos
push
cmp
cmp
out
pop
outsb
sub
mov
or
insb
sub
out
jmp
in
sbb
test
jmp
fwait
and
pop
inc
or
in
xchg
and
cmp
or
xchg
and
xlat
fwait
je
pop
test
add
and
fisubl
iret
sub
idivb
stos
sti
mov
xchg
cmp
outsl
and
push
mov
dec
and
imul
das
and
inc
pop
les
sti
xchg
sub
nop
add
and
sti
add
xchg
sti
lret
std
sbb
xchg
aas
inc
mov
or
outsb
add
add
ljmp
xchg
jp
movsb
nop
or
adc
mov
add
add
and
stos
es
mov
pop
cli
and
cmp
or
mov
jo
sarl
les
fbld
mov
iret
daa
out
pushf
fmuls
shrb
adc
push
or
jns
mov
int3
push
add
add
daa
mov
sub
test
insb
ds
sub
jbe
dec
arpl
mov
int3
adc
ret
arpl
push
aam
int3
push
ret
in
daa
xchg
xadd
call
cwtl
test
and
cmp
add
jl
pop
or
in
push
imul
in
add
popa
push
addl
add
add
add
add
icebp
add
popa
test
jb
and
inc
jb
test
xchg
stos
adc
add
fidivs
das
pop
or
xlat
inc
leave
or
xchg
cmp
or
push
jns,pn
or
pop
xchg
and
jns
push
fiaddl
into
fucom
or
stos
dec
in
mov
jecxz
leave
inc
insl
in
xchg
movsb
lods
cmc
in
js
add
add
sub
imul
repnz
imul
flds
out
in
xchg
and
sub
dec
xchg
dec
insl
xchg
and
test
or
add
out
adc
repnz
in
lock
dec
sub
pop
fnstenv
negb
into
sbb
or
test
outsb
add
add
or
sub
mov
cwtl
sti
mov
and
test
push
jle
outsb
lea
pushf
in
int3
mov
cmpsb
add
sub
das
lods
adc
add
dec
mov
stos
lds
nop
push
mov
stos
cld
rolb
daa
inc
mov
add
out
pop
and
in
add
xchg
cmp
daa
outsb
xchg
and
xchg
mov
ja
negl
rclb
mov
mov
push
pop
or
paddusw
int3
adc
insl
sahf
dec
iret
daa
mov
hlt
sti
push
call
sub
out
stos
int3
fisubrs
xchg
scas
and
add
adc
fisttps
ds
std
cli
sub
ja
push
daa
outsb
hlt
shll
xchg
int3
adc
dec
or
int3
imul
or
lea
xchg
fcmovnu
sub
inc
dec
test
jg
rcr
inc
inc
add
mov
movsl
fcoml
fisttpl
and
ret
pop
cmpsb
push
xchg
sbb
push
push
add
add
xor
mov
out
dec
push
cltd
add
xor
sbb
xor
xlat
push
aad
sub
pop
and
push
lods
push
rolb
and
test
inc
jo
sbb
stos
fnstenv
xchg
xchg
mov
in
lcall
add
ja
dec
add
xchg
and
add
xor
cmpsb
and
in
lcall
dec
roll
jp
xchg
and
imul
fcmovu
add
outsb
in
xchg
xchg
dec
icebp
xchg
and
ljmp
add
xchg
and
imul
jbe
loop
scas
test
sub
ljmp
data16
and
add
jmp
sti
add
add
mov
jmp
shlb
xor
aas
xchg
adc
and
shlb
int3
pop
xor
scas
test
into
or
jmp
sti
outsl
cmpsl
arpl
cmp
add
jge
adc
xor
add
adc
and
jmp
jne
jg
adc
mov
inc
xor
add
jmp
sub
sbb
andb
push
into
mov
add
into
imul
std
sub
mov
cmp
into
push
fwait
inc
insl
inc
xchg
fstps
fwait
push
xchg
inc
xchg
push
add
inc
enter
fisubl
dec
push
mov
mov
adc
xchg
pop
daa
and
adc
xchg
insb
add
add
int3
imul
imul
cli
ss
int3
imul
imul
cli
sub
add
mov
xchg
out
mov
movsl
push
sub
and
xor
xchg
jbe
mov
js
xchg
std
addb
jecxz
pop
cmp
mov
xchg
and
pop
push
push
and
test
pop
xchg
push
xchg
and
mov
cmp
add
arpl
std
fwait
inc
mov
or
test
xchg
and
test
xchg
and
notl
xchg
insl
leave
and
or
dec
or
and
jmp
jp
aas
jmp
xchg
imul
imul
dec
and
and
add
outsb
or
mov
push
mov
in
outsb
xor
mov
ret
in
xchg
clc
loop
mov
jecxz
imulb
xchg
mov
cmpsb
push
in
loope
fisubs
and
sbb
and
ds
aas
ret
arpl
push
das
sub
add
jp
mov
adc
mov
fildll
sbb
and
add
lahf
test
mov
ror
outsb
add
cmp
andl
mov
and
add
ret
outsb
cmpl
aas
outsb
in
push
outsb
add
or
sti
test
into
jo
outsb
sti
and
popl
aam
jo
loop
stc
pusha
inc
lcall
add
dec
push
data16
out
push
or
lret
sbb
cmp
push
mov
push
imul
shr
sbb
imul
jbe
cmpl
jl
cltd
jns
mov
adc
nop
clc
adc
push
dec
pop
push
or
repnz
je
lahf
cmpl
pop
mov
pop
add
add
dec
popf
stc
aad
cmp
and
cltd
out
or
test
xor
test
and
pop
xchg
sahf
dec
mov
and
pushf
or
test
or
or
jge
jge
jmp
rcrl
testl
adc
or
jb
or
and
pop
inc
addl
add
rcrb
movsl
cwtl
and
jne
cmp
int
gs
lds
push
in
daa
outsb
popf
nop
movsl
insb
in
xchg
jne
cltd
jno
xchg
nop
and
pop
fimuls
dec
adc
je,pn
xchg
jno
and
dec
or
xor
scas
js
cmp
push
mov
adc
cmp
add
push
outsb
dec
icebp
push
dec
dec
fstpl
push
dec
leave
push
ds
lds
xor
jns
cmp
stos
push
dec
mov
rcrb
leave
popa
sarb
rol
adc
cmpsl
and
sbb
jb
lods
add
or
repnz
pop
int
es
sbbb
or
sub
pop
ja
xchg
jo
or
add
xchg
adc
add
add
and
add
pop
loope
out
lahf
sub
insb
xor
jb
repz
sarl
fcmovbe
nop
inc
mov
and
jno
mov
xchg
jno
lret
sbb
hlt
in
cmp
sbb
sub
adc
pop
adc
sti
lock
into
jo
jbe
jno
lret
cld
mov
imul
outsb
add
sti
push
inc
lods
pop
add
add
jmp
cmp
stc
aad
cmp
js
push
or
out
fsubl
mov
inc
lea
and
dec
pop
mov
sub
bound
inc
stc
dec
sub
inc
loop
push
scas
fdivrl
xchg
inc
fwait
in
js
pop
and
pop
and
cmp
stc
or
inc
stc
add
popa
sub
add
sbbl
jnp
popa
sub
clc
or
adc
test
pop
test
cli
inc
or
sbb
lock
ja
imul
add
lods
cmp
adc
arpl
shrl
pop
aam
test
ja
sub
mov
or
adc
out
pop
xchg
test
je
lcall
xorb
jb
outsb
bound
icebp
test
or
push
xchg
push
outsb
in
and
dec
or
cmp
rcrb
or
mov
or
xor
mov
test
psrlw
outsb
sbb
sbb
data16
jno
add
dec
or
add
add
mov
stc
jo
and
xor
fdivs
outsb
adc
mov
orl
scas
push
add
aaa
jno
adc
or
shlb
sub
xchg
mov
sub
sub
dec
cmp
xlat
fbstp
adc
call
dec
in
add
add
sub
cmp
je
cmp
or
dec
inc
mov
popa
out
mov
gs
xchg
pop
xchg
push
and
call
sti
rcrb
or
add
mov
cmp
and
cmpsb
xchg
mov
inc
int3
pop
subb
pop
aas
add
add
xor
icebp
inc
inc
addb
stos
jb
pop
loope
cmp
js
imul
aas
stos
arpl
mov
pop
in
or
in
icebp
mov
inc
daa
and
mov
xorb
and
push
pop
jo
in
call
test
inc
sbb
push
add
add
pop
sbb
and
pop
jecxz
sbb
mov
add
int
imul
mov
add
mov
add
add
mov
pop
xchg
cmpsb
jbe
test
add
xchg
sbb
xchg
lret
test
or
cmc
push
or
pop
push
xchg
mov
add
xchg
sahf
xor
fmul
test
add
add
outsb
rcrl
dec
inc
sbb
or
jbe
pop
jns
add
fs
xchg
movsl
scas
mov
or
popa
mov
insl
in
xchg
mov
add
sbb
outsb
test
sahf
and
mov
daa
add
pop
sbb
xchg
sahf
jmp
in
jne
lock
dec
dec
mov
add
add
add
sbb
or
lcall
in
outsb
dec
add
mov
in
ss
xor
inc
dec
sbb
lret
inc
add
jae
nop
pop
mov
pop
push
test
adc
xchg
xchg
xchg
sti
adc
add
aas
mov
xchg
adc
sbb
add
mov
sbb
inc
outsb
cmp
and
add
fwait
add
js
add
js
repz
repz
or
popf
stos
outsl
mov
insb
in
xchg
push
jp
popa
mov
inc
sub
out
ja
add
inc
stos
or
es
and
loop
lea
inc
push
and
and
cli
inc
inc
or
add
jecxz
fwait
push
push
sub
repnz
inc
adc
mov
lea
ret
xchg
or
insb
imul
mov
imul
inc
cs
imul
icebp
or
add
sbb
pusha
lea
popa
popa
sub
mov
enter
mov
sbb
test
dec
or
pop
mov
addr16
mov
push
adc
pop
xchg
lcall
sbb
scas
mov
and
pop
jmp
shlb
mov
or
mov
add
sub
loope
sbb
cmp
mov
mov
mov
insl
in
add
add
pushf
sub
in
xchg
and
mov
jmp
int
xchg
and
dec
and
and
jecxz
jb
add
movsl
xchg
in
xchg
cltd
mov
xchg
and
xchg
outsb
push
sbb
add
sub
in
pop
xchg
and
push
jo
std
aaa
je
add
adc
add
mov
sub
stc
push
pop
pop
dec
fs
js
inc
pop
jbe
add
and
imul
outsl
ss
adc
and
les
pop
dec
je
mov
add
sbb
and
dec
and
jb
jo
push
in
jae
in
out
daa
outsb
add
incb
clc
stos
cmpl
push
cli
add
xor
add
xlat
aaa
dec
add
and
xchg
std
test
sub
jg
pop
pop
or
add
ljmp
or
inc
pop
or
int
xchg
inc
jbe
pop
sub
mov
or
pop
dec
inc
jo
into
push
xor
bound
sub
lea
ljmp
inc
ljmp
add
add
repz
xchg
inc
cs
movsl
stos
jno
adc
sub
ja
sub
dec
mov
mov
mov
push
shrb
es
jle
shrb
push
xor
jb
jge
andl
jle
or
js
or
test
in
outsb
push
inc
xchg
dec
fucomp
or
dec
or
or
cmp
or
mov
test
adc
inc
imul
lods
ret
out
jle
or
pop
pop
push
sub
bound
mov
or
adc
ret
sbb
mov
and
jle
into
jecxz
dec
ret
sbb
sbb
lret
pop
xor
push
in
mov
mov
cmp
add
add
stos
sub
popf
jle
in
xchg
and
test
call
pop
lods
dec
dec
pop
outsl
in
xchg
lods
xchg
pusha
ret
aaa
add
xchg
dec
outsb
jbe
lret
stos
shr
or
cs
outsl
rorl
xlat
sub
sub
and
js
pop
adc
add
jmp
add
sub
cmp
jnp
sbb
or
cli
xor
sti
mov
push
jmp
ljmp
and
xlat
iret
mov
fs
sti
sub
sbb
cmp
dec
and
cmp
mov
or
sti
and
in
daa
xchg
jb
outsl
notb
enter
in
jmp
dec
outsb
in
xchg
and
jp
dec
inc
add
push
loope
xchg
into
in
and
xor
jecxz
shrl
enter
int
fsts
in
pop
xchg
into
jbe
jl
xorps
into
push
push
xor
xchg
or
das
add
push
bswap
scas
dec
cmp
in
cli
add
add
mov
sti
cltd
nop
sub
cwtl
mov
dec
stos
insl
xchg
push
xchg
inc
pop
jnp
sbb
popa
and
push
mov
or
test
xchg
hlt
ss
or
add
test
das
or
lcall
jl
sub
test
cmp
lret
mov
test
iret
dec
xor
add
fs
jge
mov
mov
pcmpgtb
pop
xchg
int
xchg
stos
mov
jg
xchg
mov
or
or
or
xchg
and
outsb
sbb
int
aad
ret
in
mul
test
int
dec
fidivrs
sbb
pop
out
xor
mov
lods
sub
cltd
mov
add
xor
mov
test
imul
sbb
cltd
int3
in
aad
ds
in
pop
push
icebp
dec
ljmp
sar
cmpsl
sub
and
jecxz
jbe
sub
mul
sbb
push
or
rorl
insl
push
xchg
and
mov
dec
push
repz
sub
repz
add
add
mov
xchg
pop
mov
adc
inc
inc
sub
inc
das
and
and
and
ss
pusha
insl
pop
loope
std
clc
int3
ljmp
and
iret
or
jno
pop
outsb
outsb
mov
lret
clc
cs
push
jg
out
xchg
xor
or
fdivs
inc
mov
sti
add
add
outsl
insb
add
iret
iret
dec
jno
jbe
into
adc
fistpl
insl
test
les
lret
into
push
inc
dec
test
push
rorb
dec
test
movlps
adc
in
lcall
stc
mov
xchg
and
dec
inc
mov
aad
mov
xchg
into
push
imul
lea
and
xchg
into
adc
cs
pop
cmp
and
push
xchg
and
xchg
adc
sub
shll
pop
or
stos
add
daa
test
mov
test
test
jecxz
and
into
or
imul
mov
test
xchg
mov
jl
add
loop
and
rolb
add
int3
push
add
adc
test
xchg
mov
clc
xchg
xor
push
add
por
sub
sbb
loope
jbe
jecxz
out
cmp
inc
mov
cmc
xchg
xor
mov
push
sbb
addl
fstps
es
int3
int3
outsb
jo
push
push
out
add
add
ret
cmp
sbb
movsb
xchg
out
jno
jecxz
lods
insb
push
pop
mov
push
and
add
mov
sbb
dec
add
push
in
cmp
jo
cmp
jle
jle
cmp
iret
mov
jecxz
dec
push
ds
lock
mov
cmp
lock
cmp
sarb
data16
outsl
cmp
pop
lods
ret
jl
ljmp
inc
jmp
adc
in
pop
adc
rolb
mov
lods
and
push
decl
and
cmpsl
inc
sub
or
or
insb
add
add
xchg
int3
lods
add
into
and
push
movsb
and
xor
fadds
push
and
mov
xor
mov
xchg
clc
sbbb
push
out
fldt
add
verw
shlb
mov
or
lret
ud0
cmpsb
daa
pusha
lods
movsl
mov
xor
pop
ret
adc
mov
add
add
and
mov
inc
aam
test
lret
sahf
dec
js
mov
sub
xchg
lcall
repnz
add
push
imul
mov
addl
jecxz
inc
inc
fucom
pushf
pop
lds
cmp
xchg
lods
out
sldt
add
fisttps
add
bound
movhps
pop
in
insl
pop
lcall
jo
mov
pop
cmpsb
mov
mov
sub
sub
loopne
in
push
jecxz
sbb
xchg
outsb
jns
out
adc
add
sbb
cmp
push
lds
sub
in
repz
out
sub
jmp
xor
dec
insl
popf
xor
mov
mov
add
jecxz
lods
xchg
movsb
movsl
or
mov
add
and
inc
lret
dec
jp
xor
inc
and
cmp
adc
mov
pop
xchg
adc
insl
lea
in
lret
lcall
inc
insl
dec
adc
xchg
dec
add
add
js
mov
sub
inc
push
scas
in
jnp
sub
dec
cmpsl
sub
dec
repnz
xchg
mov
sti
pop
push
in
pop
stos
sbb
mov
and
xchg
loopne
je
dec
or
and
xchg
ror
mov
shlb
pop
inc
inc
sub
pop
ds
jecxz
xlat
clc
sarl
push
int3
loope
pop
jecxz
add
int3
aaa
sbb
lock
clc
or
push
push
int3
out
jns
lea
stos
xchg
movl
sbb
lock
daa
dec
push
mov
inc
push
and
add
pop
cmpl
jge
and
push
xlat
cmp
lret
rol
add
xchg
and
push
xor
insl
imul
mov
add
imul
push
es
rorl
in
and
test
mov
test
mov
push
outsb
xchg
mov
jne
arpl
and
pop
std
or
leave
addl
and
dec
xor
pusha
or
pop
stos
adc
jnp
mov
push
xchg
and
or
or
add
insl
in
xchg
movsl
adc
xchg
sahf
sub
or
dec
mov
sub
inc
mov
hlt
insl
fs
or
dec
or
lcall
xchg
xor
insl
lcall
lcall
and
outsb
enter
add
add
or
leave
or
mov
jb
orl
jecxz
sub
pushf
cmp
and
test
stos
out
or
jmp
xchg
out
xchg
add
and
adc
jl
out
add
outsb
lea
sti
out
xchg
popl
jnp
inc
push
xor
sbb
mul
lret
xlat
lcall
lret
mov
add
out
dec
dec
push
dec
stos
mov
jo
pop
sbb
arpl
ret
mov
test
mulb
ret
jns
daa
and
test
les
rclb
xchg
jl
stc
dec
and
dec
and
in
popa
mov
jecxz
outsb
pop
xchg
mov
in
cmpsb
lds
adc
add
and
push
stc
movsl
mov
add
and
leave
scas
fistpl
mov
or
cmpsb
jecxz
iret
imul
mov
sbb
push
or
mov
mov
mov
push
or
inc
or
pmulhw
out
sbb
shl
popa
mov
xchg
and
iret
cmp
adc
xchg
pushf
cmp
sub
mov
jl
stos
pop
add
add
sti
mov
repnz
adc
pop
pop
mov
shll
sbb
mov
sahf
mov
daa
adc
mov
push
mov
push
pop
mov
test
cmp
ss
pop
lock
xchg
sti
nop
test
mov
sbb
jns
mov
lods
inc
es
push
xor
add
add
outsb
mov
mov
sub
in
sbb
in
push
push
popf
xlat
imul
mov
insl
sbb
or
cmpsb
pop
mov
fcomps
cld
in
adc
xchg
mov
rcrl
test
shrb
loope
ljmp
shlb
test
scas
mov
sbb
ljmp
add
shlb
jmp
add
int3
sbb
sbbb
insl
arpl
and
outsb
sub
and
add
hlt
in
fdivs
pop
les
jmp
push
fucom
xor
call
in
shll
sbb
lret
xchg
jo
clc
cmp
ret
inc
scas
inc
outsb
push
add
add
push
dec
sbb
push
ljmp
hlt
add
sbb
decl
sbb
pop
cmp
add
outsb
push
cltd
or
and
popf
imul
cmp
add
orl
push
mov
cwtl
cmp
adc
jbe
movb
add
loopne
add
xor
and
icebp
out
mov
mov
push
push
mov
pop
stc
and
xchg
mov
mov
adc
test
adc
gs
shlb
call
sub
test
mov
cmp
test
iret
ds
push
test
add
add
push
sbb
jb
clc
dec
jb
fcomps
mov
fldcw
pop
sub
jp
xor
adc
out
push
mull
scas
arpl
aas
xchg
inc
add
sarl
xor
stos
xor
or
and
outsb
sbb
lods
aaa
sbb
insl
xor
lcall
mov
stos
add
add
icebp
mov
aaa
jb
add
out
inc
out
inc
pop
movb
push
movb
dec
add
arpl
or
sbb
dec
aad
test
bnd
insl
in
xchg
divb
popa
or
int
mov
push
mov
lods
mov
fs
pop
jbe
cmp
jo
mov
sahf
xchg
add
add
ljmp
mov
pop
dec
mov
pop
ret
push
imul
pop
sbb
ret
cmp
push
pop
and
sahf
sub
pop
fdivl
jb
imul
adc
mov
add
out
push
in
xor
repnz
sti
out
and
std
test
and
pop
mov
out
lahf
sub
bound
add
add
and
jnp
cmpsb
xchg
or
in
add
cmpsl
jecxz
imul
dec
sbb
leave
into
pop
mov
mov
ja
in
ja
in
stc
loop
inc
stc
ljmp
sahf
mov
loopne
enter
xchg
jbe
inc
sarl
push
mov
pop
adc
inc
dec
or
add
dec
mov
je
cmp
sti
lahf
nop
insl
xor
xchg
inc
fwait
in
aaa
dec
or
mov
jge
push
daa
aas
test
cmpsb
mov
sub
xchg
adc
adc
test
arpl
pop
xchg
mov
mov
mov
out
xchg
mov
dec
sbb
add
add
jg
test
fwait
dec
xchg
hlt
push
inc
packsswb
adc
dec
inc
add
cmp
push
scas
iret
stc
push
scas
mov
movsb
jl
bound
aam
mov
loopne
in
xchg
and
jmp
mov
push
pop
enter
inc
stc
push
pusha
xchg
and
mov
gs
mov
in
add
add
cli
loop
xchg
mulb
pop
out
cmc
push
loop
in
xchg
and
and
iret
pop
out
aam
sbb
out
subb
std
mov
jecxz
in
fbld
jmp
frstor
scas
arpl
sbb
mov
and
ret
push
and
add
pop
push
cs
and
scas
in
add
add
and
in
shlb
sti
add
xchg
js
outsb
mov
sbb
das
lods
jmp
adc
inc
outsl
sub
or
repz
ret
jo
mov
outsl
and
mov
outsb
mov
scas
out
sub
xor
repz
call
mov
sti
loop
jge
out
movsl
sbb
je
xlat
and
movsl
xchg
sti
add
add
js
ret
imul
xchg
mov
aas
lds
mov
add
clc
inc
or
push
lea
pop
or
jp
add
or
js
pop
adc
pop
mov
mov
mov
push
push
jecxz
pop
or
sbb
xchg
inc
mov
xchg
sti
mov
lods
jns
add
add
push
dec
stc
or
adc
cmp
mov
or
and
cltd
js
push
test
lcall
fistpll
insb
fisubs
daa
adcl
or
js
sub
xor
add
xchg
incb
add
push
sti
or
add
add
sti
jp
mov
xor
seta
icebp
cltd
cmp
pop
adc
push
addl
cmp
gs
fs
mov
loope
xchg
mov
sbb
cmp
movsl
xor
adc
xchg
mov
push
cmp
fwait
cltd
push
shrl
outsb
aad
xor
sbb
test
mov
add
movsl
scas
adc
sti
loop
in
lock
and
imul
jae
movsb
mov
adc
in
cmp
jmp
jno
outsb
push
pop
scas
adc
es
mov
dec
inc
outsb
out
push
xchg
mov
outsb
xchg
in
js
fiadds
or
jecxz
fisttpl
add
and
outsl
movsb
ljmp
dec
inc
mov
daa
jecxz
lock
lret
cmp
jo
pusha
sbb
inc
cmp
add
sub
outsl
dec
xchg
add
daa
ds
dec
ja
inc
aas
and
shlb
add
and
sti
sub
data16
xchg
inc
lahf
push
push
mov
aaa
daa
add
mov
imul
jns
addl
xchg
xcrypt-ecb
cmpsl
movlps
nopl
push
js
jmp
xchg
lcall
dec
mov
sbb
push
inc
js
mov
sbb
inc
mulps
aas
adc
push
movsl
aad
pop
in
push
aad
out
lret
mov
sbb
and
or
add
add
lea
push
and
or
fwait
dec
lahf
test
out
lahf
push
xchg
in
mov
or
cmc
xor
jae
lock
test
out
gs
push
xchg
lods
mov
add
call
nop
cmp
adc
icebp
test
sbb
popa
call
push
sub
mov
add
sahf
iret
push
xchg
aad
fcompl
add
mov
mov
mov
push
xchg
and
faddl
insl
xchg
jbe
outsb
push
test
xor
add
in
xchg
push
cmpsb
mov
popf
std
cmpsl
cmp
xchg
mov
call
call
in
xchg
and
sti
in
xchg
and
xchg
xchg
add
add
add
mov
call
cmpsl
sub
add
out
push
pand
jmp
sub
mov
adc
data16
test
add
movsb
addl
cmc
call
into
sub
outsb
cmpl
pop
jmp
cmp
dec
popl
cwtl
in
out
lds
add
add
and
les
and
inc
nop
imul
pop
pop
sub
sti
lahf
in
mov
popa
inc
ss
mov
aad
insb
mov
mulb
stos
insl
xchg
mov
cmpb
out
in
xchg
push
sti
insb
arpl
in
xchg
xchg
int3
mov
jne
push
mov
and
aaa
mov
dec
jb
adc
mov
lea
xchg
push
jmp
mov
bound
sahf
jecxz
mov
xchg
xchg
push
call
and
adc
xor
push
jg
stos
xchg
mov
dec
sub
fidivl
data16
mov
clc
adc
xchg
orb
push
in
jmp
xchg
and
or
sahf
test
add
add
mov
xchg
test
dec
mov
dec
and
lea
adc
mov
or
xor
cmc
mov
sub
or
lcall
sbb
popf
or
push
jmp
mov
sti
adc
sbb
adc
push
sti
push
loop
call
add
add
push
repz
ljmp
bound
loop
cmp
mov
leave
cmp
ljmp
xor
pusha
push
sub
or
mov
push
mov
push
inc
jp
push
and
mov
xor
xchg
mov
cmpsb
test
mov
mov
cmp
add
add
movsl
mov
push
in
orl
lock
ljmp
pop
cmp
sti
dec
nop
jl
outsl
pop
xchg
xorl
xchg
jb
jg
test
mov
dec
sbb
icebp
dec
push
mov
imul
and
in
stos
jle
sbb
dec
adc
icebp
dec
push
addr16
xchg
sti
add
add
cmc
push
push
das
sub
sti
sub
jl
scas
movsb
cwtl
jo
cmpsb
nop
sti
sub
jl
scas
inc
xor
addr16
push
xchg
pop
adc
adcl
jnp
push
aad
jbe
shlb
sub
push
mov
stos
cmp
and
cli
cmp
adc
add
add
sbbl
ja
inc
push
adc
sahf
test
cmpsb
push
inc
adc
out
jg
sahf
stos
pop
dec
dec
sti
or
outsb
or
lret
pushf
adcb
inc
stos
dec
sub
mov
adc
pop
ja
jle
addb
xchg
and
sbb
hlt
sbbb
les
pop
xchg
dec
add
add
daa
jno
push
gs
lock
push
cmp
pop
xchg
divb
movsb
sub
mov
inc
cltd
dec
mov
add
and
test
imul
test
mov
xchg
scas
sar
push
rcrb
scas
pop
fcoms
xchg
adc
outsb
jl
pop
and
in
push
xchg
push
mov
xlat
cs
cmpsb
xchg
gs
jmp
lods
adc
cmp
in
dec
fucomp
in
shll
lcall
subl
pop
lcall
addl
rorb
cltd
mov
jo
insb
mov
cmp
icebp
loop
std
out
pop
jne
pop
loope
dec
data16
xchg
mov
movsl
and
add
out
aas
jmp
test
lods
daa
in
gs
outsb
pop
bound
and
xchg
cld
insl
bound
outsb
test
lods
add
in
in
dec
or
jmp
outsl
ss
add
jp
pop
popa
pop
xor
loop
lahf
leave
js
ds
push
frstor
les
xor
dec
pop
cmpsl
cmp
add
in
cs
mov
and
pop
mov
subb
sub
outsl
lea
lds
lea
xchg
mov
and
lret
xchg
movsb
push
xchg
adc
and
outsl
push
and
pusha
jne
xchg
push
pop
fwait
insl
xchg
loop
fisubrl
push
sbb
add
scas
jne
cmpsl
dec
push
push
cltd
data16
mov
outsb
xchg
fldt
stc
mov
xchg
xchg
xchg
push
mov
sahf
mov
ljmp
add
mov
xchg
mov
push
pop
xchg
and
inc
imul
add
inc
mov
popf
mov
push
jmp
mov
xor
push
data16
add
or
xchg
add
in
add
push
mov
dec
fsubrl
inc
loop
scas
push
test
testl
lds
lahf
xor
sub
scas
icebp
inc
xchg
stos
and
mov
xchg
and
insl
imul
inc
insl
in
mov
add
sub
jmp
fcoml
push
xchg
adc
cmp
sbb
outsb
in
aas
aam
push
jg
lcall
lea
lods
mov
pop
lods
pop
add
in
cmp
daa
xor
in
adc
sbb
xchg
mov
mov
jno
cs
or
pop
sub
add
push
rolb
or
cltd
inc
mov
imul
pushf
stos
sub
call
lods
in
scas
sub
cmp
xor
outsb
aaa
imul
jecxz
rclb
sti
and
xchg
push
movsl
sub
and
pop
outsl
sub
and
push
pop
jg
jmp
add
add
and
xchg
rclb
stc
jo
push
pop
rcrl
xchg
jge
xchg
jns
stc
mov
add
repz
dec
sarl
push
push
jle
mov
mov
jmp
dec
mov
in
jb
fmuls
or
jle
pop
inc
pushf
sub
inc
push
xchg
lock
jbe
push
xor
xor
cli
add
add
shr
out
jp
push
adc
mov
cmp
test
lods
std
stos
in
push
or
jle
xor
mov
mov
push
inc
sti
rcll
cmp
push
and
lahf
clc
insl
call
dec
adc
pushf
enter
leave
rcrl
push
xchg
rcll
add
in
add
gs
add
je
sti
pushf
or
insb
xchg
cmpsl
jg
and
pop
or
xchg
or
fdivl
mov
mov
fists
cmp
mov
xchg
clc
add
mov
lahf
call
mov
xchg
and
mov
xorl
ljmp
add
or
dec
mov
cli
push
xchg
pusha
sbb
or
loope
add
cmpsb
lods
loop
in
xchg
xchg
dec
xor
call
and
imul
push
jb
pushw
or
movsl
mov
xchg
loop
adc
out
push
in
xchg
aad
xor
out
movsb
scas
rcrb
movsl
pop
fldcw
add
and
push
add
add
in
in
in
cmpsb
mov
pop
fldcw
sti
mov
cltd
inc
scas
cmpsl
xchg
or
repnz
mov
push
jle
cwtl
aaa
outsb
pop
out
and
rclb
inc
mov
add
xchg
sub
ja
dec
add
mov
mov
mov
stos
repz
in
daa
aas
mov
das
adc
or
jle
leave
arpl
or
subl
icebp
sub
push
xchg
jle
stc
mov
jle
xchg
add
clc
adc
arpl
adc
and
xor
inc
xchg
aaa
jge
test
aad
xchg
popl
imul
push
xchg
jl
mov
add
add
das
imul
movsb
push
xchg
mov
add
jg
jecxz
push
or
testl
and
jle
or
test
cvtdq2ps
std
mov
jnp
sbb
inc
xchg
ret
push
and
cmc
mov
sbb
mov
out
stos
add
add
rclb
addr16
xchg
test
sub
mov
test
outsb
aas
addl
mov
test
sbb
loop
mov
xchg
lret
insl
fbld
mov
je
xchg
sub
in
mov
in
xchg
pushf
mov
mov
into
sbb
out
imul
jge
jo
xchg
sub
into
sub
sub
dec
out
xor
add
add
xorl
dec
pushf
subl
and
pushf
jo
inc
push
out
xchg
and
outsb
pop
dec
dec
sbb
fimull
xchg
xchg
and
dec
lret
outsb
cmp
loope
std
repz
sub
insl
add
insb
dec
add
adc
inc
fwait
push
test
das
jmp
sub
aaa
stc
add
add
add
into
jnp
out
call
cltd
jo
int
lock
call
outsb
add
pop
cmp
ljmp
jns
in
and
popl
les
push
xor
jecxz
in
xchg
and
mov
cmp
aaa
sti
mov
adc
bound
push
xor
add
add
icebp
sub
out
shrb
pop
movb
repnz
mov
clc
adc
dec
gs
insb
loop
sub
imul
adcb
sti
jmp
mov
push
and
pop
les
outsl
xlat
push
dec
stc
sub
push
sub
xlat
push
jb
sub
inc
jae
add
add
jl
lea
and
test
sbb
xor
jge
pop
xchg
and
cld
push
out
inc
in
cmc
push
push
mov
xor
add
cmp
enter
pusha
xor
sub
pop
insb
add
mov
dec
insb
and
cmp
cmc
mov
insl
jns
add
icebp
xchg
ret
pop
outsl
sbb
push
and
ja
adc
stc
add
lcall
rolw
cmp
stos
rcl
and
mov
or
lock
dec
or
lcall
xchg
push
lret
jecxz
mov
push
testb
adc
xchg
pushf
lahf
push
add
sbb
sub
ss
adc
xchg
movsl
insl
in
pop
mov
or
aaa
cs
cld
cmp
sbb
pushf
sub
jge
das
test
addr16
aas
outsb
sti
inc
push
nop
inc
outsl
sarb
pop
in
repz
cs
repz
psubsb
outsb
add
mov
loop
xchg
in
es
addr16
sti
add
add
sarb
cs
sub
test
and
psubq
xchg
adc
and
outsb
push
jl
jecxz
xchg
int
sti
mov
movsl
stos
or
or
scas
and
push
add
mov
mov
push
jle
mov
adc
sti
cmpl
add
adc
daa
add
add
dec
fcmovnbe
adc
sbb
sti
dec
jle
in
jle
in
inc
cmp
clc
and
and
lcall
sbb
cmp
add
cmc
mov
push
dec
sbb
add
mov
pop
stc
rcll
and
add
daa
out
jge
add
and
pop
xchg
movsl
aam
add
add
adc
fistpl
adc
pop
and
xor
push
pop
sbb
fisubl
jno
data16
jp
sbbb
scas
cmp
mov
push
sar
test
inc
movsl
dec
cs
inc
add
xchg
or
addl
add
add
xchg
xorl
pop
xchg
lock
sbb
xor
in
push
jecxz
int
sbb
cmp
jne
test
fisubs
and
rolb
test
jp
jmp
sti
push
ds
loop
in
xchg
movsb
test
out
outsb
ljmp
mov
or
loope
add
fwait
and
into
lea
ja
or
xor
loopne
xchg
in
lcall
xchg
inc
lret
aas
xor
jno
hlt
das
ljmp
add
add
cld
xchg
mov
push
sub
xchg
jle
shl
jp
outsb
mov
inc
jnp
add
add
mov
add
push
ftst
lret
es
outsb
imul
rclb
dec
add
cld
adc
insl
add
push
jecxz
ja
xchg
sti
inc
lahf
nop
add
mov
add
fisttps
lea
mov
sbb
test
test
add
aad
dec
mov
movb
add
mov
adc
clc
jno
adc
sbb
mov
push
loop
jmp
in
mov
mov
or
mov
push
and
push
dec
repz
xchg
sti
push
lcall
pusha
and
push
sbb
jge
push
and
pop
ret
push
dec
xchg
nop
dec
jo
stos
add
add
dec
add
push
mov
psubsw
ss
xchg
call
ljmp
iret
inc
add
and
xchg
push
sbb
sbb
xchg
test
jo
test
sbb
into
xorl
subl
repnz
out
and
add
add
and
mov
xor
in
xchg
test
and
sahf
lea
gs
and
dec
stc
std
cmp
in
xchg
xor
mov
scas
and
jns
xchg
movsb
test
mov
fsubr
test
push
add
loopne,pt
pop
cmc
cmpsb
in
adc
inc
fildl
add
shll
call
movsl
xor
in
xchg
leave
add
in
out
lock
dec
mov
jl
lret
outsb
or
sti
mov
and
outsb
or
orb
mov
push
nop
sti
scas
sbb
jb
pusha
inc
jg
mov
sti
inc
xor
cmpsb
in
push
inc
outsb
add
add
inc
daa
pop
in
lret
sub
int3
push
mov
mov
and
jg
dec
xchg
sbb
movsl
mov
in
sti
or
cmp
xchg
push
clc
push
mov
insb
and
sub
inc
pop
test
lret
push
push
pop
dec
outsb
xchg
push
push
xorl
inc
xchg
aaa
mov
add
dec
push
or
add
adc
push
test
xchg
mov
add
xor
add
inc
repz
mov
xchg
aam
stc
mov
push
mov
test
enter
arpl
push
add
and
cld
push
insb
and
inc
add
gs
add
xchg
test
or
xor
lock
add
add
jecxz
test
clc
scas
jp
mov
cs
and
sti
adc
addl
xchg
jg
dec
out
movsb
dec
cwtl
xchg
and
pusha
cmpl
leave
mov
pcmpeqb
push
sbb
mov
orl
in
lea
sub
out
orl
xchg
and
lods
add
jl
jb
or
jecxz
push
outsb
in
adc
and
jmp
in
repnz
push
cld
out
mov
insl
adc
in
push
mov
ss
stos
in
mov
icebp
mov
sub
sbbl
cld
aad
das
cmp
xor
add
sbb
aaa
in
lret
sti
mov
mov
xchg
in
mov
sti
outsl
and
loope
push
xchg
cmpb
inc
outsb
out
int3
jnp
fsub
insl
popl
and
cmp
out
test
cmp
dec
data16
sti
jns
pop
outsb
int3
scas
aaa
mov
into
xchg
aaa
scas
arpl
add
add
cli
addb
push
mov
sbb
or
mov
jecxz
xchg
div
dec
ds
lds
icebp
mov
push
cmp
mov
and
loop
mov
sbb
jecxz
in
add
iret
aas
add
iret
ljmp
sahf
imul
stos
push
sbb
xchg
ret
mov
test
add
test
imul
mov
sub
mov
scas
adc
and
jno
stos
ja
pop
dec
and
and
push
inc
jb
lods
dec
aas
jl
jg
inc
mov
sub
lds
jge
dec
mov
mov
add
inc
xchg
jle
inc
cltd
cmp
test
xchg
sub
faddl
add
call
mov
fnstcw
shlb
je
push
fdivs
push
jb
in
lock
je
mov
inc
fdivr
mov
out
mov
xchg
scas
je
subl
and
test
and
outsb
pop
dec
rorl
in
inc
push
loop
push
jno
imul
orl
add
xchg
int
xor
cmpsb
pusha
pop
inc
out
std
mov
outsb
test
sbb
jno
sbb
outsl
scas
dec
jne
and
mov
movsb
roll
ret
in
xchg
icebp
inc
pop
cmp
ljmp
loopne
rorl
adc
mov
inc
inc
mov
aad
imul
lahf
push
mov
and
in
add
add
pop
sti
addr16
sti
push
in
adc
jb
add
es
outsb
inc
sarl
out
push
mov
cmpb
sub
jecxz
shr
cmp
push
push
and
in
jb
sbb
adc
jnp
int
insl
push
push
and
xchg
sti
push
out
adc
adc
add
add
cmpsb
dec
sti
jg
nop
adc
jg
outsl
xchg
mov
xchg
in
xor
add
lcall
repnz
sbb
xchg
lea
adc
scas
rorl
mov
add
pushf
push
mov
xchg
push
add
jl
leave
sub
push
stc
mov
arpl
cwtl
xchg
mov
inc
mov
repz
xchg
mov
add
add
jle
insb
iret
inc
or
mov
xor
inc
in
inc
xchg
out
inc
xchg
mov
xchg
mov
and
mov
xchg
lea
jno
jnp
jno
xchg
cmpsl
bound
test
xchg
js
adc
sub
lahf
and
pop
cmp
xlat
and
aad
xchg
and
test
add
add
daa
add
ja
xchg
push
inc
mov
cmpsl
gs
ljmp
xchg
jne
test
xchg
lea
ja
rorb
mov
jmp
shrl
push
mov
sahf
fmuls
fwait
jp,pn
push
pusha
mov
mov
xchg
js
sub
outsb
data16
fiadds
je
inc
jbe
cmc
mov
add
adc
in
clc
es
lods
gs
sub
xchg
aad
out
xor
jbe
push
and
outsb
data16
jl
lcall
jp
jp
leave
cmc
jns
push
inc
jb
xsave
in
fstp
dec
decb
xchg
cltd
inc
scas
lret
scas
and
lret
xlat
cld
cltd
add
test
and
das
pop
inc
cmpsl
mov
add
mov
das
cmp
imul
sti
inc
lahf
into
jo
dec
imul
ficoms
adc
outsb
dec
add
les
in
loope
dec
sahf
mov
cmp
je
in
aas
sbb
inc
jno
adc
inc
mov
daa
in
cld
jmp
xchg
or
push
and
clc
and
pop
stc
andl
xchg
cmp
add
jnp
push
lcall
or
jle
in
xchg
je
jnp
jle
int3
outsb
leave
out
clc
push
or
icebp
fwait
mov
inc
xchg
xorb
arpl
push
sbb
add
mov
push
adc
xor
imul
rorl
sub
stc
push
and
add
scas
negl
clc
sbb
and
push
scas
ror
pop
pop
jbe
popf
and
dec
addl
and
mov
movsb
inc
dec
mov
repnz
sbb
mov
test
inc
incb
xor
test
add
add
gs
sti
adc
fdecstp
leave
and
xchg
inc
and
ffreep
imul
fidivl
outsb
jnp
loopne
sar
sub
in
xchg
sahf
cmpsl
mov
fisubs
insb
in
xchg
addr16
fs
and
scas
push
mull
and
or
insl
loop
inc
insb
loop
sub
xor
add
insl
test
outsb
in
inc
bound
xchg
and
data16
fisubs
sbb
je
sbb
int3
stos
loope
pushf
sub
add
clc
jl
pushf
pushf
sub
cltd
sub
add
sub
add
dec
out
mov
es
call
cmp
ss
xchg
jne
mov
mov
sub
dec
and
lahf
xchg
popl
add
mov
ljmp
es
jae
jns
mov
sbb
cmp
jae
push
cmp
addr16
sti
jecxz
jb
add
cmpsl
iret
add
mov
push
add
es
xlat
movsl
xchg
sti
cmp
or
mov
xchg
jl
ja
push
mov
mov
jl
shrl
daa
sbb
add
jp
jmp
xchg
mov
xchg
jnp
jl
push
inc
aam
stc
cltd
xor
add
add
jl
add
jl
imul
jmp
xchg
mov
xchg
jnp
jle
push
out
xchg
clc
xor
add
stos
cmp
ja
jp
daa
mov
jl
add
jno
add
add
cmpsb
ret
mov
lret
movsl
addl
mov
pop
cwtl
pop
dec
or
jmp
add
stos
movsb
int3
add
mov
or
jno
ds
andb
lcall
aad
in
fstps
xchg
movsb
inc
or
aad
xor
bound
add
add
test
enter
push
cmp
sbb
and
cmp
fwait
loopne
mov
adc
test
xchg
je
jo
inc
mov
in
xchg
cmpsb
and
popf
xchg
push
pop
mov
shl
adc
loop
cmpsb
and
in
xchg
and
add
add
add
lcall
push
fcoml
in
shrl
cmp
sbb
gs
lcall
push
mov
lret
xor
jns
mov
das
insb
or
cmp
push
adc
xchg
sti
mov
movsl
into
out
out
popf
sub
lahf
cmp
mov
xchg
xchg
repnz
jg
dec
sti
add
add
xchg
xchg
adc
fstl
adc
ja
add
bound
or
cli
das
xchg
sti
nop
xlat
vpmacswd
jl
insb
outsl
sub
pop
push
addr16
add
and
jp
imul
lods
add
sub
add
shl
cmpsl
pop
xchg
repz
and
ss
add
add
out
mov
mov
test
subb
jp
rcl
mov
out
inc
lods
loope
mov
dec
cld
and
repnz
jb
cmp
jg
dec
pop
ret
jno
cmc
cli
popa
add
add
sbb
sbb
mov
sahf
inc
in
sub
push
xchg
and
test
add
add
aad
add
test
sti
adc
jmp
and
les
xchg
test
xchg
jge
aas
shrl
jb
aam
or
test
adc
pusha
in
loop
in
mov
popw
xchg
mov
insl
dec
mov
out
fldt
dec
jbe
jl
rcr
test
popa
jp
icebp
test
cmp
add
jb
outsb
data16
xchg
movsl
lods
jmp
sbb
cs
adc
popa
pusha
push
clc
jns
push
inc
jbe
xchg
dec
insb
in
xchg
movsb
sub
cli
sub
pop
inc
jge
adc
dec
insb
in
xchg
es
adc
inc
push
shll
and
cmp
jbe
inc
jb
fwait
repz
xchg
xor
jo
and
lods
push
add
add
cmc
mov
or
inc
xchg
and
jp
jmp
daa
xchg
daa
outsb
subb
sbb
in
dec
xchg
mov
inc
decl
and
sub
sti
pushl
jp
out
lahf
add
lret
push
into
xchg
and
rcrl
inc
mull
popa
inc
addl
inc
sarl
bound
add
sub
add
cmp
adcb
es
sarb
push
in
lods
mov
mov
or
mov
sbb
xchg
or
cli
pop
jl
adc
mov
lahf
stc
inc
jae
jle
mov
test
btc
add
and
inc
mov
cmpb
or
jge
mov
add
pop
pop
sahf
mov
xchg
daa
jmp
jl
inc
mov
jecxz
jp
out
jb
ret
jge
mov
scas
in
xchg
push
stos
pop
dec
test
lods
pop
xchg
inc
pmulhw
lcall
dec
jecxz
mov
or
xchg
in
xor
aas
out
sbb
adc
adc
or
inc
xchg
sub
add
add
aad
ljmp
cwtl
jp
repnz
cmp
sahf
inc
in
sub
adc
loopne
test
xchg
and
fadd
repz
push
sbb
test
addps
test
fwait
inc
jnp
icebp
addb
sbbb
and
test
add
add
inc
jbe
bound
fwait
mov
ljmp
aad
cmp
dec
ss
inc
jp
into
inc
jnp
movb
push
sub
xchg
mov
jecxz
out
adc
sahf
pop
in
cmc
push
test
imul
imul
and
dec
int
loope
mov
push
and
add
fucomip
add
mov
sti
outsl
pop
sbb
pop
adc
and
cmp
imul
call
cwtl
fildll
and
cmp
jbe
call
sti
das
and
add
out
jle
out
call
popa
dec
jbe
dec
sbb
imul
push
jle
mov
add
fstpt
leave
daa
cmp
scas
call
xlat
jmp
and
dec
fwait
addl
pop
repz
mov
lea
lret
xor
out
xchg
jge
xchg
data16
xor
adc
xchg
jl
jle
js
mov
out
push
lea
mov
jle
jl
ja
or
and
add
xchg
jl
jmp
scas
jne
or
mov
and
mov
clc
insb
js
xor
lcall
ret
out
inc
cmp
dec
popf
inc
xor
aaa
push
aam
inc
jb
stos
pop
inc
sub
fimuls
or
js
and
test
cmpsl
outsb
lds
addl
jns
or
or
hlt
mov
or
xor
pop
xchg
scas
ret
xor
add
sub
sbb
fidivrl
xor
pop
xchg
and
sbb
push
sti
xchg
js
pop
mov
jbe
add
xchg
pop
outsb
loop
call
inc
bound
lret
ljmp
fsubrs
mov
aad
cmp
add
es
inc
bnd
sbb
cmpsl
lods
fwait
ret
leave
dec
arpl
icebp
lret
jbe
mov
in
xchg
clc
aaa
add
adc
icebp
pushf
ja
mov
sbb
adc
bound
fidivrl
insb
imul
popa
movsl
cmp
cltd
lods
xor
xor
and
out
add
sub
pop
add
add
test
mov
loop
out
mov
dec
jp
inc
push
sti
add
out
mov
stos
xchg
push
outsl
daa
in
push
pop
jmp
cmp
in
cmpsl
xchg
addl
sub
inc
scas
into
or
js
cmp
sbb
adc
loop
xchg
and
cmpb
pop
addl
add
sub
inc
xchg
fs
push
dec
pop
xchg
and
mov
iret
cmpsb
movlps
cmpsl
fcoml
jle
mov
xor
push
out
sbb
xchg
pop
fmull
mov
adc
add
dec
push
fidivl
add
subb
aad
and
insb
add
dec
test
add
add
xor
mulb
pop
adc
bound
xchg
xchg
dec
stc
mov
mov
cmp
and
test
cmp
mov
jl
or
addb
test
or
pop
xchg
jo
test
xchg
lods
shl
adc
jnp
rolb
sahf
jp
fildl
add
rep
pop
stc
adc
lret
subb
scas
shl
sbb
xor
jle
inc
mov
or
arpl
lcall
fdivrl
inc
iret
mov
outsb
inc
jecxz
pop
fs
or
pop
ljmp
aad
add
into
jge
xor
dec
mov
in
scas
push
clc
stc
xor
in
add
add
movsl
test
movsb
imul
lret
mov
into
in
xchg
and
mov
or
xchg
bound
xor
jo
add
in
xchg
and
xchg
ds
mov
or
data16
out
xchg
and
insl
add
and
pushf
xchg
sub
xlat
xchg
jo
out
jo
lods
fisubl
or
outsb
add
add
pusha
jns
add
adc
inc
in
jl
fsubp
and
outsb
add
sbb
jo
stos
fisubl
lret
outsb
add
fisttpll
insb
and
in
jecxz
fwait
leave
mov
outsl
sbb
or
loopne
and
sbb
dec
imul
push
xchg
push
sub
outsl
xor
mov
outsb
mov
dec
bswap
add
add
jecxz
clc
stc
fsts
pop
aad
and
dec
push
mov
and
mov
sbb
push
lret
add
xchg
xchg
xchg
pop
push
cmp
mov
aas
movsb
ud2
xchg
dec
adc
pop
cltd
dec
push
adc
add
jns
repnz
mov
xor
add
dec
sub
jb
lahf
mov
add
add
emms
jp
icebp
add
pop
jg
aad
and
scas
lea
or
push
xor
aaa
lods
hlt
mov
add
popf
mov
in
lret
mov
xchg
movsl
in
adc
or
in
in
jmp
or
pop
scas
stc
stos
push
xchg
stos
fcomp
mov
pop
or
cmp
test
add
push
push
popf
js
dec
mov
mov
popa
xor
xchg
and
nop
push
cmp
sub
mov
xchg
test
insl
in
data16
xchg
outsb
or
imul
dec
test
call
mov
cltd
inc
loope
imulb
cmp
pop
js
mov
fdivs
std
pop
test
add
imul
dec
test
in
cs
sub
out
mov
adc
or
sbb
pusha
mov
call
mov
shr
cmpsl
test
mov
mov
or
mov
in
inc
iret
fisubrs
and
dec
push
adc
jecxz
xchg
pop
mov
add
mov
dec
push
sub
outsl
outsb
lret
fsubrl
and
cmp
xchg
adc
in
sarb
outsb
add
sub
inc
jnp
add
daa
outsb
add
pop
test
mov
jnp
add
outsb
mov
inc
into
add
daa
out
push
push
add
xchg
shrl
jp
pop
ret
mov
pop
mov
xchg
dec
rorb
jmp
lcall
enter
sti
jmp
inc
sbb
pop
jae
into
stos
xchg
dec
push
mov
ret
add
cmp
pop
or
sti
cltd
lahf
sarl
xchg
push
mov
xchg
sarl
cltd
lds
scas
xlat
push
and
dec
push
mov
add
add
add
or
repnz
repz
or
and
test
adc
jnp
daa
test
mov
lcall
and
les
les
push
jnp
lcall
fmul
xor
outsl
jg
add
shl
pop
mov
add
add
in
int3
push
sub
cmc
xchg
and
push
jge
inc
out
xchg
and
imul
cmpsb
push
lret
adc
dec
loope
and
popf
test
dec
mov
sub
mov
insb
in
xchg
movsl
adc
push
and
push
adc
dec
std
xchg
lret
jbe
cmpsb
sub
adc
add
mov
and
fmull
sub
xchg
sub
bound
outsb
mov
test
and
in
xchg
in
and
or
fisttpll
dec
fwait
dec
cmp
lret
js
add
and
or
and
jg
ljmp
ds
fisubrl
inc
jmp
sbb
mov
add
imul
sti
decl
pop
mov
and
and
jg
out
jb
in
enter
jle
and
ret
dec
jno
stc
popa
sti
cmp
popa
adc
outsb
add
insl
dec
adc
loope
addb
and
sub
dec
push
adc
inc
or
dec
push
sub
or
push
mov
movsl
daa
add
add
dec
push
xchg
dec
std
inc
jb
mov
daa
lcall
daa
pop
outsl
jne
mov
xchg
sbb
lcall
ret
sbb
fisttps
adc
ret
jnp
aam
cmpsb
xchg
test
inc
add
jbe
into
sub
dec
cwtl
flds
orl
test
movl
add
imul
enter
outsb
push
push
or
shll
add
and
pop
mov
adc
fstpt
dec
rcrb
jmp
sbb
mov
mov
xorl
push
ljmp
jg
fsts
mov
stos
pop
sub
mov
test
lret
sbb
lods
jle
add
add
imul
pop
sub
push
inc
jns
xchg
cmpsb
test
cmc
stos
gs
jo
or
push
xor
xchg
sbb
sbb
scas
push
mov
aad
das
mov
aam
adc
push
ljmp
and
es
or
jmp
ljmp
test
add
movsl
stos
loop
lds
xchg
in
in
xchg
and
in
jle
loopne
jae
xor
dec
push
pop
movsl
jnp
subl
scas
xor
outsb
mov
or
push
ljmp
push
mov
js
cmpsb
adc
daa
jmp
sub
or
push
inc
dec
insb
mov
add
jecxz
mov
lcall
and
addr16
daa
in
jbe
dec
sbb
or
imul
insl
add
daa
add
clc
or
xchg
rcll
cmp
xchg
lea
jbe
push
pop
xchg
cmp
ja
mov
dec
mov
xlat
xor
mov
push
clc
adc
shll
xchg
mov
jmp
add
add
imul
adc
inc
clc
xchg
cmp
fisubl
dec
bswap
inc
add
leave
inc
add
aad
daa
lds
daa
sahf
aad
daa
cmpb
pop
push
cmp
mov
xchg
and
or
jne
xor
xchg
cmp
add
cs
add
add
mov
xlat
shlb
std
adc
and
popa
or
and
test
xchg
sahf
jno
aad
mov
outsl
daa
adc
adcl
pop
or
mov
roll
mov
push
shl
aaa
xor
push
adc
jg
out
and
nop
jecxz
cmpsl
hlt
out
add
add
add
dec
insl
xchg
and
imul
mov
cmpsb
lock
sahf
jmp
in
scas
jmp
or
rcl
dec
xlat
test
cmp
popf
sbb
outsb
mov
push
push
jmp
xchg
in
xchg
movsl
push
out
xchg
and
lods
xchg
and
push
ljmp
add
or
or
dec
add
mov
jecxz
fwait
and
je
adc
cmp
add
call
dec
add
and
jno
adc
jbe
jg
out
pop
sub
popf
sub
xchg
insb
out
and
add
sahf
sub
pcmpeqb
add
lcall
inc
test
add
add
aas
and
push
out
into
jo
pop
popa
cmpl
lea
pop
scas
sahf
sub
xchg
push
in
mov
and
xchg
ds
pop
adc
sarl
push
ds
mov
cmp
outsb
adc
push
adcl
xchg
into
daa
ficoms
jno
cmp
push
sbb
add
leave
dec
mov
push
pop
cmp
xchg
dec
and
in
jb
addr16
in
or
push
mov
pop
mov
add
pop
push
and
or
jmp
lcall
cmpsb
push
pop
inc
push
ljmp
cmpsb
lcall
stos
arpl
xchg
sarl
and
pop
pop
in
xlat
adc
mov
mov
or
or
and
jge
mov
rorl
gs
pop
xchg
pushf
enter
lock
dec
cltd
push
test
test
mov
pop
pop
xchg
and
insl
out
adc
dec
mov
sbb
fucom
sub
fnstcw
mov
movsb
test
inc
or
aas
jbe
add
nop
in
jbe
xor
addb
insl
in
xchg
cmc
loopne
mov
imul
cmc
mov
in
cmp
in
ja
sub
retw
in
jbe
imul
sbb
sub
push
or
out
xchg
and
xchg
push
dec
mov
mov
in
incb
add
or
ljmp
sub
outsb
add
adc
push
sub
insb
call
push
mov
dec
or
dec
insb
mov
xchg
sub
inc
roll
out
js
leave
scas
movsb
push
scas
jae
adc
sbb
add
inc
dec
sbb
mov
cld
rclb
sti
outsl
mov
outsb
add
loopne
add
add
add
outsb
subb
aas
sub
sti
sub
xchg
jp
sub
jmp
pop
les
adc
mov
inc
inc
popf
daa
push
imul
imul
jb
push
dec
jp
xchg
ds
gs
adcb
push
jo
test
in
push
into
lds
add
ficompl
cmp
add
add
outsb
xchg
shlb
sahf
in
xchg
data16
push
popf
std
pushf
push
in
lods
daa
lods
in
lcall
sti
adc
inc
or
daa
lods
xlat
or
mov
sbb
inc
jb
hlt
jb
cmp
or
mov
test
add
cmpsb
gs
push
add
aad
and
cmc
outsl
aad
xor
or
add
push
and
test
pminub
js
sbb
inc
jmp
dec
mov
and
addl
push
mov
add
adc
and
outsb
jmp
dec
mov
mov
test
ret
dec
jmp
push
orb
or
dec
rorl
dec
test
add
add
dec
in
xchg
cmp
outsb
pop
dec
sbb
push
dec
out
jbe
and
gs
mulps
jbe
inc
dec
in
xchg
and
insl
in
xchg
push
scas
or
negl
fldt
ss
sub
ds
xchg
dec
jns
xchg
cmpsb
test
add
pushf
sub
filds
sti
sub
ja
popa
addb
add
outsb
add
push
dec
xor
fistpl
popl
dec
lahf
mov
in
jl
jo
je
inc
fwait
sub
jecxz
fwait
or
jae
dec
xlat
mov
in
stc
lock
repnz
in
pop
adc
push
mov
iret
mov
jbe
cmp
push
icebp
lock
cld
in
rorl
xchg
inc
in
jp
in
ds
push
sti
inc
shll
in
xchg
ret
cmpsb
daa
jp
std
ds
ds
clc
and
push
sbb
sbb
in
in
test
leave
out
ficoms
ret
jmp
inc
adc
push
das
inc
sbb
ds
push
and
inc
sbb
sub
adc
mov
inc
cmovg
add
mov
jge
sti
xorl
pop
mov
gs
xchg
adc
popa
fwait
inc
pop
jnp
xchg
pop
pop
cmp
ss
sbb
or
shlb
or
shlb
pop
add
ja
data16
rcrb
jg
inc
lcall
call
jecxz
int3
add
add
xor
mov
test
shlb
and
add
mov
pop
test
dec
je
aam
insl
sbb
and
sub
jecxz
lret
shl
xchg
movsb
or
adc
ret
mov
push
add
lods
jecxz
xchg
sbb
lock
test
inc
lock
xor
in
add
add
ds
sub
stos
in
movb
shr
fs
add
pop
push
outsb
in
mov
out
xchg
mov
inc
lcall
je
add
add
sar
insb
in
adc
mov
and
out
js
push
outsb
jo
ret
fwait
arpl
sbb
movsb
push
add
sar
lods
pop
add
add
je
test
ljmp
cmpsl
insl
dec
sbb
fsub
lds
sub
out
inc
sahf
mov
sub
in
inc
iret
iret
out
mov
lods
dec
push
sub
cmp
sub
test
loope
mov
test
test
cmp
in
xchg
or
sti
mov
sub
mov
cmpsb
aaa
add
add
shrb
ja
or
stc
popa
dec
push
fdivr
xor
jb
mov
daa
lret
dec
jp
sbb
sti
sbb
xchg
add
data16
xor
mov
or
push
inc
push
ret
pusha
jb
icebp
imul
or
push
mov
data16
daa
test
call
sbb
inc
sub
add
adc
and
dec
test
test
or
fisttpll
iret
test
push
sbb
mov
or
push
xor
mov
xchg
and
shlb
fimuls
in
or
jne
fisubrl
or
add
cmp
cmp
insl
push
jmp
jg
add
add
jne
mov
test
pop
shlb
adc
push
cld
xchg
imul
fisubrs
push
lods
and
xchg
add
jb
mov
inc
mov
lcall
add
loope
mov
inc
mov
push
dec
jbe
dec
les
xchg
and
stos
jbe
dec
movsb
rclb
and
and
imul
add
aas
fsub
xor
nop
adc
popf
test
jb
dec
dec
xchg
mov
and
jecxz
scas
add
mov
inc
sbb
xor
add
inc
xchg
sti
lock
pop
mov
out
pop
mul
inc
pop
push
jecxz
pop
cmc
out
dec
stc
test
and
out
cmpsb
nop
sti
inc
test
in
add
add
pop
jnp
aas
mov
and
xor
pop
movsb
xlat
xchg
xchg
aas
insb
cmp
jecxz
jb
leave
loope
cmp
and
or
jno
ljmp
sub
mov
add
shlb
jnp
sub
mov
push
stc
mov
xor
test
add
cmpl
and
push
dec
add
add
and
push
in
add
push
imul
add
lcall
push
shlb
dec
mov
dec
mov
clc
and
xchg
dec
lds
lds
jbe
pop
cwtl
decl
inc
mov
push
dec
out
xorl
jbe
aas
js
xchg
insb
jo
and
xor
add
ret
mov
mov
mov
sbb
outsb
ret
fidivl
fdivl
add
pop
sbb
aas
push
leave
repnz
rol
lret
test
push
xor
inc
add
adc
cmp
inc
fistps
inc
into
mov
or
leave
ds
cmpsl
cmpsb
in
jl
mov
add
pop
adc
add
add
adc
pop
adc
test
mov
aad
loope
add
or
sub
cmp
sub
in
enter
mov
pop
je
cmp
bound
sub
loope
insb
xchg
shl
jns
dec
jne
xchg
and
cmp
retw
inc
js
add
add
dec
pop
cld
xor
xchg
pop
and
loop
in
jmp
pop
les
or
cli
sub
in
sbb
jbe
pop
jo
int3
sbb
mov
jecxz
lret
sub
add
mov
hlt
push
sbb
mov
ficoml
sbb
popa
mov
adc
dec
dec
add
add
es
mov
add
es
mov
mov
in
or
add
mov
jp
and
inc
cmp
push
mov
test
push
adc
add
adc
inc
popf
mov
repz
test
xor
pop
or
clc
stos
ss
xchg
jg
sbb
xchg
arpl
add
mov
add
fxch
jmp
mov
repz
push
xchg
and
xchg
iret
push
clc
adc
mov
cli
ljmp
add
insl
paddusb
dec
pop
les
sbb
mov
bound
inc
pop
and
test
ret
in
and
js
cmpsl
push
pusha
or
frstor
adc
add
add
imul
test
mov
addb
and
xchg
adc
or
sub
lcall
pop
pop
addr16
pop
pop
outsb
test
popf
and
loopne
lret
test
insb
leave
iret
test
dec
aam
push
xchg
and
mov
adc
and
sbb
inc
cmc
mov
imul
add
xlat
xor
push
xchg
and
movsl
add
repz
out
jecxz
cmp
fs
jbe
ds
jp
and
sbb
xchg
stos
ret
cmp
movsl
in
lcall
dec
cmc
clc
pop
jle
push
cmp
mov
xchg
loop
push
pop
inc
add
add
pop
gs
out
fs
xchg
lcall
repnz
jp
sbb
mov
jp
sub
xchg
jno
push
xchg
jno
ret
nop
adc
pop
loopne
xchg
inc
lock
fsubp
sub
outsl
and
fs
lods
adc
push
cmp
inc
mov
ds
dec
push
in
add
add
mov
in
lret
and
jnp
aas
mov
jnp
jle
jg
push
loope
push
mov
push
inc
in
sub
push
or
and
inc
mov
fwait
outsb
and
dec
lahf
clc
lds
pop
adc
mov
lea
jp
xchg
xchg
mov
push
sbb
xchg
dec
or
add
mov
dec
adc
pop
aas
mov
jp
inc
imul
rcll
iret
or
jp
inc
ret
imul
lea
add
add
outsl
inc
cmp
jle
sub
pop
pusha
sub
test
cs
mov
xchg
stos
or
cmp
pusha
test
dec
ljmp
lcall
add
xchg
outsb
inc
pop
xchg
rcrb
push
push
inc
insb
test
sub
cltd
and
fdivrl
lods
cmp
cmp
les
and
sbb
xchg
push
lods
xchg
test
lcall
add
jo
xchg
test
adc
movsb
mov
gs
flds
cmpsb
lods
cmc
add
aaa
push
dec
daa
in
add
add
in
lods
das
outsb
in
xchg
movsb
test
jmp
scas
jbe
lods
cmp
insl
aam
in
xchg
rep
stos
xlat
fucom
or
fs
or
dec
loope
jmp
roll
out
push
mov
shlb
sub
inc
jbe
add
leave
add
fdivs
sbb
sbb
gs
cmp
sbb
and
adc
add
sbb
xchg
mov
jle
jp
out
mov
push
pop
es
inc
cmpsl
popa
xchg
popl
out
mov
in
lods
bound
ret
sbb
rcrl
mov
lea
into
out
mov
pop
cmp
and
les
xchg
jno
cmpsl
mov
add
pop
outsb
sti
bound
xchg
fld
xchg
mov
cmpsl
and
xlat
dec
mov
movl
add
je
lods
or
cmp
jae
mov
xchg
inc
jns
jge
jmp
aam
jmp
mov
jne
push
mov
mov
sbb
sub
xchg
das
sub
inc
push
popa
push
idiv
stc
adc
lret
sbb
mov
sbb
push
data16
add
add
mov
dec
xor
mov
push
sbb
mov
loope
adc
lods
pop
aam
push
push
addr16
push
jmp
adc
push
in
mov
or
sbbl
and
sti
rcr
cmp
mull
cmp
sbb
inc
fsubs
loope
cld
add
add
punpckhbw
outsl
sub
outsl
fs
in
mov
push
or
nopl
xchg
stos
and
mov
sub
pop
pop
xor
pop
sbb
mov
pop
ds
push
shlb
aad
das
inc
cmp
and
push
data16
dec
or
cmpsb
imul
pushf
flds
add
push
xchg
pushf
stos
push
jb
cmp
and
jbe
imul
imul
sbb
inc
sahf
mov
adc
pop
jecxz
mov
jmp
mov
or
das
inc
sti
fs
in
sbb
jge
xchg
and
addb
dec
and
outsb
add
les
add
add
sbb
push
push
cmp
outsb
or
aaa
test
rcll
add
push
cmp
xchg
sahf
fs
inc
dec
jns
std
sub
das
es
aas
push
sub
icebp
and
cmp
nop
shl
aam
hlt
sbb
xchg
xor
sub
lods
mov
sub
cs
and
mov
xchg
lea
add
jge
test
xchg
lds
push
or
push
mov
in
outsb
mov
sub
ss
cmp
push
xchg
out
xchg
ds
rclb
add
ds
jecxz
test
mov
mov
jo
mov
add
dec
insl
xlat
or
adc
jp
sti
add
add
ret
mov
mov
sub
adc
imul
inc
insl
lret
in
xchg
and
inc
or
out
test
sbb
push
popf
mov
pop
clc
sbb
xor
mov
bnd
inc
add
imul
outsl
mov
addps
sub
or
movsl
repnz
mulb
rcll
gs
mov
add
or
je
or
fs
or
add
outsl
sbb
loop
das
add
xchg
and
stos
inc
push
or
cltd
and
sbb
in
loopne
jbe
xchg
mov
push
add
in
xchg
and
in
mov
xchg
xchg
mov
mov
xor
and
mov
pop
repz
add
add
xchg
pushf
cmpsb
fs
cmp
data16
inc
pop
cmp
shlb
mov
arpl
xchg
and
aaa
xlat
or
pusha
mov
out
jnp
xchg
pushf
popf
push
mov
addl
pop
outsb
add
sti
add
pusha
inc
mov
bound
jo
jecxz
adc
add
and
add
in
divb
out
pop
lahf
cmpsb
in
sub
mov
in
xchg
sbb
outsb
aaa
das
insb
xor
test
ss
sti
das
ja
mov
aam
cmpb
add
arpl
add
mov
in
sti
cmpsb
lea
lods
and
movsl
cwtl
or
cmp
jle
cmp
cmp
add
leave
mov
xor
mov
and
mov
neg
mov
push
xor
mov
adc
jge
clc
lcall
push
leave
in
out
outsb
popf
xor
ds
fwait
sti
dec
mov
sahf
dec
adc
jge
push
sbb
xor
out
adc
and
dec
push
add
add
jp
dec
stc
push
push
pop
push
and
or
pop
jmp
dec
sub
and
sbb
inc
aam
test
pop
mov
data16
imulb
add
addr16
jbe
push
mov
pop
push
dec
mov
adc
push
inc
and
test
mov
fldenv
nop
loope
pop
add
add
inc
lret
xchg
test
add
daa
je
adc
mov
inc
push
pop
cmp
out
outsb
in
mov
popf
subl
popf
xchg
xchg
dec
fst
sub
sub
add
add
out
js
mov
mov
xchg
cmp
add
jge
xchg
cmpsb
lods
xor
add
mov
sub
and
sbb
inc
sti
jge
lcall
jno
mov
bound
ss
daa
idivl
xchg
cmpsb
lods
rcll
mov
xchg
adc
fsts
ret
stc
and
out
cltd
adc
ss
out
mov
jo
sbb
jecxz
add
add
and
std
push
and
sti
mov
jle
jg
into
jno
sarl
pop
data16
in
xchg
andl
icebp
mov
mov
jmp
dec
push
jecxz
ret
jbe
jno
js
add
das
data16
xchg
cli
add
sbb
cmp
mov
ret
jecxz
adc
stos
imul
add
xchg
mov
insb
push
xchg
cmp
push
cs
stos
sti
enter
push
or
enter
push
or
lods
test
push
sarb
imul
stc
arpl
push
jp
and
es
sti
xchg
or
adc
or
cmp
push
sarb
imul
repnz
xchg
and
fcoms
add
test
xchg
adc
or
mov
add
xchg
sub
ficoml
fwait
enter
mov
inc
xchg
and
xchg
clc
test
shl
cmpxchg
aaa
mov
arpl
xchg
test
xchg
iret
sbb
pusha
jle
and
test
jne
mov
sbb
add
fucomip
jns
inc
add
push
add
and
xchg
ret
imul
jne
test
sbb
sub
icebp
dec
sub
sub
js
in
insl
data16
jo
sub
push
push
add
xchg
push
insl
in
push
mov
in
xchg
shl
mov
js
sahf
out
pusha
push
mov
ds
movsb
in
add
add
sub
in
inc
sub
jle
insl
outsb
ficomps
jmp
sub
adc
in
jl
into
popw
imul
arpl
mov
and
loope
mov
je
ret
lods
add
cmpsl
cmp
repz
sub
pushaw
push
sub
shl
inc
mov
sub
add
add
data16
pusha
bound
lret
adc
popa
pop
mov
cmp
pop
dec
push
outsb
je
or
pop
arpl
dec
pusha
dec
mov
or
aad
pop
out
xchg
cmp
aam
fs
xor
jecxz
cmp
adcl
test
adc
aas
adc
push
or
add
mov
nopl
cmp
and
xor
xchg
jg
jl
adcl
mov
jb
rorl
movsl
data16
sbb
cmp
mov
or
sub
mov
clc
stos
xchg
xchg
xchg
cwtl
add
shlb
enter
push
movsb
xchg
push
lds
xchg
push
movsb
leave
stos
cmp
add
add
xor
jg
imul
mov
push
movsb
lods
add
test
stc
sbbb
adc
fs
jnp
push
outsl
es
ficoms
gs
orb
xchg
adc
adc
js
mov
pop
add
call
gs
cmp
int
je
xchg
lcall
xor
add
jb
int3
lea
rcrl
xor
jne
jae
push
lock
iret
addr16
call
xchg
push
lcall
icebp
aad
cltd
popa
and
sub
cwtl
push
lock
and
mov
and
test
and
test
cwtl
outsl
in
add
add
arpl
ficoml
mov
rorl
imul
cmp
lds
es
cld
jmp
cld
ljmp
in
loopne
jo
test
adc
sub
cld
mov
scas
or
call
ss
aaa
scas
aad
es
in
movl
sti
jns
push
sbb
pop
add
add
scas
outsb
iret
into
scas
push
xor
cmp
inc
js
int3
mov
mov
mov
mov
xchg
mov
or
inc
sbbb
jmp
pop
jno
loope
or
sarl
mov
dec
into
jne
jmp
sub
jecxz
mov
clc
out
jb
stos
adc
inc
sub
jb
push
sbb
inc
add
add
fdivrl
sahf
jnp
pop
add
dec
pop
push
or
rorl
dec
jne
loope
push
add
mov
cmp
sti
enter
push
dec
jne
adc
xchg
jecxz
adc
adc
push
dec
andb
inc
add
pop
pushf
nop
cwtl
movsb
roll
sub
lock
push
mov
push
sbb
clc
aad
inc
mov
cwtl
fwait
dec
test
xlat
rcll
jp
repz
cmp
pop
pop
arpl
shll
and
lock
inc
fsubl
pop
mov
clc
push
repz
bound
adc
jne
cmpsl
rorb
gs
jecxz
xchg
push
sub
inc
mov
add
add
and
cmc
adc
add
mov
and
add
cmpsb
subl
xchg
ja
pop
xchg
jg
test
out
cli
sub
es
adc
imul
xchg
out
push
and
jbe
inc
jp
add
icebp
xor
xchg
jae
in
cltd
mulb
movsb
xchg
ret
mov
add
add
and
add
jo
aam
jecxz
subb
test
pop
lea
insb
add
insb
add
push
sub
les
adc
add
pop
div
daa
jo
sti
sub
mov
repz
sub
and
call
cmp
pop
add
mov
mov
jne
jns
add
add
sbb
mov
and
adc
xor
adc
jg
adc
xchg
shl
mov
ret
xor
stc
test
add
jnp
mov
xchg
pop
mov
xor
mov
daa
mov
hlt
push
fsts
mov
outsb
push
aaa
clc
push
mov
xchg
or
lcall
push
add
or
cld
sub
add
lret
mov
cs
add
inc
mov
nop
adcb
dec
or
data16
mov
mov
xchg
and
nop
push
or
aam
pop
fnsave
or
or
mov
sbbl
push
inc
add
add
mov
mov
sbb
mov
rcrl
clc
cmp
stos
sub
mov
adc
push
mov
movsl
jae
or
xor
test
das
outsb
lcall
mov
cmpsl
test
jl
cs
pop
sbb
sub
inc
dec
fadds
add
adc
cs
adc
sbb
or
stc
cltd
pop
and
inc
cwtl
jb
fmuls
cmp
in
sbb
pop
outsb
push
fbstp
mov
push
sbb
lods
out
jns
movsb
shrl
outsb
pop
lcall
shrl
add
into
aaa
rcl
sbb
dec
sbb
pop
mov
lods
or
cwtl
movsb
out
std
cwtl
outsb
push
clc
cwtl
mov
add
add
and
icebp
and
xchg
cmp
int3
mov
arpl
add
xor
scas
ljmp
pop
aaa
add
sahf
cmp
mov
arpl
cmp
stos
and
inc
push
cmc
fs
mov
test
fsubrl
negb
sbb
xlat
mov
les
pop
out
jge
mov
fs
adc
push
jno
add
cwtl
and
or
inc
xchg
or
std
insb
mov
loop
pop
xor
add
ret
push
inc
test
fdivl
mov
xor
xchg
lahf
pop
popf
clc
mov
setbe
xchg
or
xchg
pop
or
sti
push
adc
test
rcll
mov
jg
dec
or
add
add
mov
push
sti
or
mov
push
or
rol
or
xorl
dec
scas
adc
and
sub
push
jl
xchg
nop
inc
gs
sarl
sbb
sbb
ret
sbb
out
fs
mov
fcompl
xchg
add
pusha
popa
mov
dec
or
out
jecxz
dec
lods
add
add
loop
inc
mov
cmp
push
add
rolb
aam
jne
popa
add
xchg
mov
out
sub
mov
movsb
pop
adc
icebp
xchg
je
dec
pop
or
lcall
sbb
jp
outsb
mov
dec
and
cmp
add
pop
xchg
add
xchg
scas
mov
sub
imul
stos
jo
lods
mov
jecxz
xchg
jp
pusha
and
cmp
enter
out
in
ficoml
bound
jecxz
stc
and
sbb
daa
popf
movsb
aaa
cwtl
popa
decb
mov
jno
loop
popa
inc
out
xchg
int
pop
movsl
mov
sti
add
add
pushf
cs
xlat
test
inc
add
xlat
mov
outsb
adc
lds
jne
adc
dec
xchg
cmp
cwtl
pop
adc
div
add
sbb
and
mov
mov
xor
inc
jno
cmpsb
xor
jno
lret
addr16
and
add
dec
jnp
xchg
inc
cltd
sti
sub
add
movsb
xor
lds
or
stc
stos
lods
inc
xchg
xorl
inc
out
xor
mov
push
shl
mov
jo
cmp
inc
xor
xchg
frndint
out
adc
fisubl
push
inc
mov
push
sbb
arpl
aas
mov
xchg
or
add
inc
inc
or
hlt
stc
adc
or
push
add
add
lock
dec
mov
lds
add
je
or
repz
sub
pop
mov
sbb
add
std
mov
cmp
icebp
and
faddl
adc
dec
cmc
scas
mov
fst
das
xchg
push
and
fildl
mov
pcmpgtw
in
adc
sub
push
and
add
jl
cmpl
add
scas
adc
adc
stos
pop
jg
lock
imul
fcompl
jo
xlat
cli
stc
xchg
adc
mov
cltd
cmpsb
lea
and
adc
push
jns
cmp
out
mov
outsb
adc
push
cwtl
cwtl
js
push
xchg
pop
loope
and
sub
add
add
xchg
or
sbb
or
std
pop
fisubrs
jle
outsb
outsb
dec
and
cs
outsb
and
call
xchg
jbe
cmp
cmpsl
push
pop
rclb
add
in
lea
cmp
push
jg
test
mov
dec
pop
mov
mov
and
ret
js
cmp
out
in
mov
mov
inc
and
mov
mov
jmp
jmp
lea
or
les
cs
cli
clc
inc
fldt
push
push
and
push
and
cld
and
outsb
dec
sub
inc
sti
sub
test
xchg
jno
clc
mov
insb
and
dec
xchg
or
mov
add
add
divb
sti
xor
xchg
push
lret
jno
daa
jle
dec
ja
lock
add
inc
movsl
clc
in
xor
xchg
cmp
mov
jp
clc
and
inc
xchg
xchg
xor
push
in
xor
iret
cmpsb
push
dec
out
cmp
clc
xor
adc
data16
xchg
cld
clc
jecxz
mov
pop
les
fisttps
and
add
call
jnp
sbb
and
or
jnp
out
and
mov
cmc
cmpsl
cmp
bound
sub
pop
ds
xchg
stos
mov
dec
stos
fistpll
fsts
mov
psrad
jno
and
div
jp
sbb
xlat
pop
pminsw
fnstcw
into
fcom
ja
sub
fwait
ja
imul
incl
add
inc
into
out
adc
and
test
ja
imul
loopne
mov
push
roll
cld
adc
adc
xchg
fnstcw
lcall
fdivs
aaa
cs
pop
pushf
xor
push
loop
sub
inc
outsb
in
xchg
std
dec
jp
adc
adc
xor
adc
lods
and
adc
stos
xor
incl
add
aad
inc
sub
bnd
loope,pn
lcall
adc
lret
jbe
xchg
inc
mov
xchg
jbe
add
adc
inc
jg
jo
jp
lea
das
xchg
push
dec
push
mov
jp
js
outsl
and
add
jno
add
push
pusha
sub
lea
out
push
popa
mov
xor
add
add
and
add
mov
sti
mov
and
loop
popa
inc
out
cmpsb
int
out
mov
and
loop
pop
inc
out
adc
mov
pop
scas
push
andl
lea
stc
and
xchg
lock
arpl
repnz
xchg
cltd
addr16
dec
jmp
clc
adc
add
sar
jb
add
add
clc
sub
xchg
sub
push
mov
sbb
ficoml
cld
testb
mov
add
xchg
aaa
sti
outsl
mov
mov
lods
or
outsl
pop
subb
clc
in
xor
mov
pop
cld
mov
and
cltd
ja
outsl
insb
pop
shl
ja
mov
add
sbbb
xor
pushl
das
repz
sbbb
imul
xor
jnp
rolb
mov
cmp
pusha
arpl
pop
add
sub
jnp
mov
lea
addr16
movsb
add
jmp
add
loopne
fdivr
mov
aam
cmp
sldt
add
sbb
mull
sub
outsb
jns
and
popf
and
lea
or
stc
cld
sbb
cltd
push
sbb
push
or
add
sti
and
rolb
int
fwait
xchg
and
mull
ss
stc
sub
dec
inc
jbe
dec
and
sub
add
add
cmpsl
scas
fstps
imul
cwtl
push
add
mov
cmp
sbbb
ljmp
dec
push
scas
sub
sub
mov
jg
int
push
test
outsl
sub
icebp
hlt
mov
push
adc
inc
mov
cmc
inc
fwait
sub
mov
les
add
push
mov
aas
sub
stos
mov
and
sbb
or
jmp
daa
and
data16
push
sbb
jns
jae
xchg
mov
adc
mov
int
int
xchg
or
cmp
loopne
or
arpl
xchg
xchg
daa
add
add
imull
dec
push
clc
lret
mov
mov
jecxz
aam
clc
sbb
jno
or
cld
jno
sbb
xchg
scas
daa
sahf
xorl
jb
jnp
mov
popf
push
je
xchg
sbb
rorl
cwtl
sub
outsl
loopne
inc
outsb
fdivl
lret
xchg
jae
outsb
sub
add
add
sub
insb
mov
or
test
cld
cmp
xor
fildl
jae
or
jnp
out
mov
adc
xor
add
xchg
pop
xchg
xchg
test
movsl
inc
mov
push
or
xor
imul
push
xchg
and
jge
dec
std
data16
inc
dec
push
add
add
cld
jp
or
in
insb
daa
leave
test
pop
add
sub
and
and
xchg
bound
cmpsl
push
mov
xlat
sbb
outsb
sub
in
inc
je
jbe
inc
bound
sahf
in
in
xchg
and
outsl
in
xchg
sahf
scas
xor
mov
push
inc
bound
pusha
in
pop
addr16
fistl
add
pop
sahf
jb
sbb
xor
dec
or
inc
mov
and
add
push
jb
aaa
enter
fstl
add
mov
sti
mov
and
pop
scas
or
fisubl
sbb
jns
addl
push
into
cmc
and
xor
insl
adc
or
add
jae
das
dec
cmpb
pop
cltd
arpl
mov
and
rclb
movsb
data16
inc
push
and
in
xchg
addl
out
ret
xchg
jno
push
loop
sub
movsb
mov
dec
mov
icebp
ja
lcall
in
xchg
cmp
push
aam
in
mov
out
push
jp
idivl
ja
divl
add
add
lea
cmp
mull
adc
jne
dec
inc
adc
adc
in
mov
or
out
insb
mov
sub
cltd
jno
movsl
rolb
mov
xchg
jge
mov
das
nop
mov
dec
pop
mov
sub
dec
jae
xchg
push
or
mov
jge
jg
int
add
xchg
push
add
or
xchg
popf
xchg
jg
and
fstl
fists
int3
jp
lea
inc
cmpsl
lret
std
jp
addr16
push
sbb
dec
jnp
inc
sbb
adc
push
loop
arpl
test
jle
mov
mov
ds
fisubrs
sbbl
ret
insl
sub
in
add
add
add
adc
jo
lcall
rcl
sbb
sub
sahf
inc
jge
add
repnz
xor
leave
mov
outsb
pop
jge
push
xchg
leave
mov
jbe
imul
adc
or
shlb
std
lret
push
push
add
imul
add
add
xorl
cmpl
les
sub
in
add
push
lret
sbb
dec
fildl
aas
int
andl
jp
xorb
lahf
xorl
imul
or
andb
repz
xor
sub
test
mov
cmp
xchg
cmp
push
inc
clc
push
add
add
jno
jge
mov
loop
lds
and
jg
adc
dec
enter
orb
ficoml
or
ja
mov
sub
inc
pop
dec
shlb
adc
les
ja
add
pop
cpuid
xchg
or
dec
popa
pop
fs
test
sbb
sti
add
add
int3
mov
int
ret
lock
adcl
ja
in
jae
xchg
and
mov
add
movsl
inc
cvtpi2ps
xchg
lods
stos
lock
aas
pop
in
mov
add
ret
pop
fldl
les
bound
pop
cmpsb
fildl
sub
pop
jecxz
mov
or
fwait
xlat
add
add
sbb
sbb
and
xchg
pop
cs
xchg
pop
xchg
mov
add
int3
jecxz
add
xchg
pop
or
scas
xchg
xchg
jecxz
into
js
jle
dec
xchg
js
sub
dec
inc
jbe
push
sub
cmc
push
inc
jb
add
cmp
and
in
dec
lods
lcall
push
sbb
add
inc
es
lods
pushf
cmp
sbb
add
insb
repz
dec
mov
add
in
xchg
jb
sub
inc
adc
lea
xor
lods
cltd
lods
cmp
lds
add
sbb
xchg
aad
add
cmc
xchg
push
stc
add
add
cld
out
repz
mov
sub
scas
mov
ss
mov
add
xor
sbbb
dec
daa
fistl
out
es
push
aad
notl
jle
or
and
clc
sub
int3
adc
mov
jge
or
mov
popl
push
mov
fs
dec
jg
add
jge
add
test
sub
and
and
push
sbb
xchg
inc
lret
add
mov
or
iret
xchg
mov
imul
jo
mov
gs
mov
push
add
mov
inc
xchg
inc
jnp
ror
daa
scas
jae
jecxz
lahf
pop
clc
sbb
lds
or
mov
add
in
add
leave
out
ss
pop
push
roll
or
add
xchg
ret
and
out
jecxz
ret
bound
sub
add
les
jp
mov
add
je
xchg
stos
bound
jl
push
out
sub
jmp
jp
sub
adc
or
int3
push
cs
aam
adc
test
add
clc
bound
in
iret
push
and
cmp
add
push
jns
mov
mov
mov
pop
sub
and
sbb
adc
outsb
inc
mov
out
lret
mov
lea
inc
push
test
mov
imul
and
nop
movsl
push
and
add
fcmovb
lock
lods
dec
pop
mov
xchg
push
stc
roll
stc
les
add
mov
insl
xor
mov
hlt
fwait
sub
and
es
mov
jae
xchg
xor
mov
pop
push
lcall
inc
aaa
mov
int
add
scas
or
jl
pop
out
add
in
nop
cwtl
out
jge
xchg
dec
ljmp
inc
add
add
or
aas
and
in
jo
add
pop
repz
jg
outsb
hlt
lds
and
dec
pusha
cmp
call
jae
loope
int
in
js
pop
shll
and
mov
add
frndint
out
clc
mov
lea
and
mov
inc
xchg
fwait
push
push
add
add
loopne
sti
pop
and
push
fimull
inc
les
sub
adc
or
push
jb
pop
or
int
call
dec
jb
int
das
pop
push
or
or
inc
lret
xlat
pop
xchg
sbb
push
dec
mov
adc
jno
pushf
sbb
test
jl
xchg
pop
aad
or
add
add
int
mov
add
xchg
insl
iret
stos
dec
or
sbb
and
lods
xchg
ss
out
stos
jo
js
sub
iret
stos
lcall
stc
push
popa
fwait
sbb
in
out
xchg
ljmp
sbb
and
add
loop
and
mov
movsb
imul
sahf
in
pop
scas
scas
xchg
test
inc
cld
arpl
add
pushf
outsb
lods
mov
outsb
in
xchg
mov
repz
data16
scas
mov
mov
sub
into
in
in
lods
lcall
lea
lcall
fnstcw
jo
or
divl
movsl
pop
jmp
add
add
stc
add
lea
clc
arpl
sarb
dec
lods
inc
daa
inc
sbb
lods
scas
xchg
xor
add
in
repz
js
mov
fbstp
imul
mov
dec
div
push
in
mov
pop
jge
lock
mov
sti
push
std
xchg
fnstcw
enter
jle
lock
add
js
jo
je
out
insl
mull
xchg
cmp
mov
fbld
int
stc
lea
test
push
or
les
jle
and
sbb
mov
cs
dec
dec
add
lea
dec
jb
jmp
lret
call
ss
int
sar
adc
push
or
pop
add
add
dec
cmp
pop
cmp
aaa
mov
push
nop
push
ljmp
int3
pop
ficomps
push
xor
xlat
cli
pop
adc
inc
xchg
push
pop
or
fistpl
sti
cmp
outsb
add
lret
mov
sti
movsl
add
jecxz
push
clc
or
jno
sub
xchg
add
add
out
push
in
mov
cmp
mov
push
mov
stos
jo
in
or
adc
sub
call
xchg
and
jg
arpl
adc
imull
lcall
add
push
aaa
xchg
stos
xchg
xor
int
lahf
sarb
imull
insb
out
push
in
lea
and
add
add
pusha
outsb
lods
lods
bound
lcall
adc
and
clc
lea
jae
je
loope
jmp
negl
or
lea
push
pop
sub
jbe
movsl
lcall
orl
xchg
mov
inc
out
xchg
int3
mov
lea
jae
xchg
jns
cltd
add
add
jnp
pop
push
stc
jo
lahf
jne
dec
sub
and
popa
jp
mov
js
xor
adc
add
xchg
adc
faddl
inc
mov
je
sub
push
imul
cmp
jge
lcall
push
stc
mov
orl
fisubrl
clc
xor
push
popl
add
inc
sbb
xor
add
jns
dec
movsb
add
fistpll
jns
jno
out
jge
dec
mov
mov
jge
popa
movsb
movsl
mov
inc
mov
mov
jge
or
stos
xchg
adc
mov
xchg
cli
ljmp
les
rcrl
push
repnz
lcall
jp
jno
xchg
rclb
cli
test
cli
jno
dec
and
clc
sbb
xchg
or
pushf
pop
popa
jl
dec
jp
lret
rcll
jno
or
push
jb
enter
dec
clc
or
xor
movsl
dec
xchg
pop
lcall
fsts
movsl
mov
push
mov
addr16
add
add
sbb
repz
sbb
mov
sub
push
push
inc
mov
sbb
lods
push
imul
mov
cli
xchg
pop
xchg
pop
les
or
mov
jp
pop
jno
jmp
and
add
jae
xchg
mov
aaa
aam
dec
mov
adc
in
xchg
and
add
and
mul
push
push
jb
pop
and
xchg
mov
lea
inc
push
in
xchg
and
ret
repz
in
adc
push
fsts
or
sbb
and
xchg
ret
fisttpl
insb
ficomps
outsl
in
xchg
out
in
sbb
out
xchg
and
outsl
in
add
add
xlat
add
adc
xchg
outsb
popl
xor
das
lcall
das
es
pusha
mov
std
imul
pop
ljmp
mov
adc
adc
jmp
dec
sti
orl
pop
scas
and
cmp
and
add
xchg
sub
ss
out
mov
enter
pop
jmp
testl
test
das
pop
xchg
xorl
inc
xchg
clc
out
adc
cli
mov
push
push
mov
sub
ret
mov
fadds
xchg
xor
mov
test
shrb
fisttpl
aaa
pop
inc
bound
add
add
xchg
je
xchg
sahf
ret
cmc
faddl
out
data16
jp
xlat
je
push
xchg
push
jbe
cwtl
cmp
imul
aam
cmp
and
insb
xchg
gs
leave
rol
pushf
insl
sub
xchg
pop
sbb
jp
mov
lock
mov
cltd
and
cmp
add
add
scas
jg
xchg
and
adc
jl
aam
push
leave
sub
pop
cmpsl
in
adc
and
xchg
xchg
push
lret
imulb
dec
mov
fninit
stos
std
mov
mov
sbb
mov
outsb
inc
dec
cmpsb
outsb
in
and
test
pop
xchg
cs
or
push
cltd
jge
and
add
add
mov
xchg
push
out
cli
pop
sub
shll
and
mull
notb
divl
testb
dec
testb
adc
jnp
aad
into
add
packsswb
and
cmc
adc
pushf
jne
mov
xchg
and
bound
xchg
cmp
cmp
mov
xchg
dec
add
imul
adcb
sbb
sti
int
mov
or
cmpb
aaa
inc
inc
inc
xchg
sarl
cli
sub
sub
adc
mov
add
outsb
add
cmc
fildll
cli
ficompl
pop
inc
mov
sahf
and
mov
les
add
add
mov
sti
inc
lahf
xchg
out
xchg
cli
cld
in
sbb
js
clc
std
jno
push
mov
sub
rol
push
popa
scas
mov
test
iret
xor
ficoml
mov
xchg
push
sbb
rcrb
sahf
mov
lcall
iret
mov
stc
pop
stos
ret
add
add
sub
jno
popf
mov
or
mov
cmpsb
je
leave
mov
repz
cmpsb
xchg
clc
sbb
jb
mov
push
xchg
adc
xchg
adcb
out
pushf
add
adc
mov
in
and
jecxz
push
std
stos
mov
cmpsl
xchg
pop
xchg
adcl
add
xchg
sbb
cmp
popa
jae
mov
inc
add
mov
lods
sub
mov
imul
sahf
lahf
mov
lahf
movsl
push
popa
mov
cmp
sbb
jmp
mov
inc
pop
adc
ja
outsb
dec
jmp
push
stos
dec
in
adc
stc
loop
jmp
xor
adc
add
add
js
xchg
push
sbb
jp
sbb
adc
xchg
jge
ds
push
push
pop
addr16
pop
cmp
push
aad
jns
in
adc
pop
push
pop
pop
in
push
push
push
pop
pop
push
xor
and
es
js
fimull
outsb
mov
lahf
sub
add
add
sahf
sbb
lahf
sahf
xor
ja
xor
pop
and
cld
fs
mov
hlt
push
arpl
or
mov
cmp
mov
int
jae
cmp
lcall
sti
out
daa
repz
and
sti
ljmp
jo
and
mov
and
add
add
cld
jno
sbb
cli
mov
std
jno
cmp
enter
jb
xchg
ja
xchg
pushf
or
test
cmp
std
jno
push
push
rclb
jb
jne
jne
fcmovu
movsl
dec
or
lods
pop
out
popf
out
cmpb
push
jb
fmuls
jl
leave
jecxz
add
lret
mov
add
xor
sti
icebp
pinsrw
notl
dec
add
xchg
sahf
jns
es
pop
inc
or
or
fstl
push
add
mov
sbb
and
repz
pop
call
movsb
mov
stos
lret
push
adc
push
popa
jae
pusha
call
jg
xchg
and
adc
add
lea
xchg
pop
adc
out
sbb
ret
push
xchg
and
mov
sbb
mov
pop
xchg
sbb
mov
push
xchg
pop
xchg
fildll
notb
repz
xchg
mov
stc
cmpsb
jge
xchg
mov
pop
outsl
in
xchg
xor
gs
pop
repnz
loopne
test
roll
repz
lcall
xchg
and
push
data16
jle
xchg
and
xchg
in
xchg
and
stc
cltd
popa
psubw
out
add
in
and
mov
icebp
mov
decl
inc
lea
push
popa
inc
lcall
and
and
shlb
orb
add
sub
rcrb
mov
and
xlat
scas
and
inc
and
push
sbb
bound
cmp
push
out
xchg
mov
mov
sti
mov
sub
out
dec
add
in
push
mov
push
adc
lods
push
pop
movsl
fstl
and
inc
pop
icebp
dec
push
and
or
push
adc
sub
sahf
mov
add
rolb
push
cld
insb
gs
cmp
ds
fbstp
cmp
sahf
inc
jns
jno
xchg
mov
and
mov
adc
sbb
je
shlb
orl
xor
daa
test
pop
xchg
addb
and
in
jb
sbb
iret
hlt
daa
add
add
into
insb
add
and
lods
ret
into
xchg
aas
pop
xchg
and
mov
push
cmc
lahf
mov
sbb
xchg
pop
xchg
jne
repz
push
add
inc
test
dec
jbe
mov
jl
xchg
jne
adc
push
insl
cmpsl
sbb
sbb
xchg
in
sbb
sbb
xchg
pop
xchg
scas
fsubr
jae
sbb
es
pop
lds
add
xor
dec
pop
add
add
test
mov
mov
pop
aaa
jbe
int3
aad
cmpsl
loope
lods
sub
stc
and
stos
xor
ljmp
hlt
and
and
xor
lods
dec
push
jb
mov
jae
fmuls
call
jnp
flds
bound
add
pop
pop
push
push
es
pop
push
in
mov
and
inc
cmp
pop
pop
data16
lret
xchg
and
icebp
movsl
dec
jecxz
loopne
push
jbe
cmc
outsb
add
fstpt
leave
xchg
sub
das
push
outsb
xchg
xchg
mov
out
movsl
fstpt
outsb
jo
pop
mov
add
xor
int
out
add
add
pop
xor
mov
testb
ljmp
jg
int
xchg
pop
sti
test
outsb
push
xlat
xchg
jo
fwait
test
pusha
jno
outsl
xchg
sub
xchg
and
xor
aas
les
xchg
jb
xchg
bound
xchg
int3
jno
or
push
jl
xchg
push
mov
push
or
jp
int
add
neg
pop
lods
mov
or
jge
cli
fxch
call
pop
mov
push
xor
cmpsb
repz
push
sbb
cld
out
orb
jge
into
rorb
sar
jns
or
imul
cltd
cli
pop
iret
rorb
dec
popf
mov
loope
mov
add
leave
loopne
xchg
add
xchg
jne
imul
inc
pop
xchg
dec
mov
repz
jge
or
sbb
call
notl
xorl
hlt
mov
and
pop
xchg
scas
sbb
mov
xchg
or
lods
push
in
xchg
scas
sbb
cwtl
loopne
jp
test
push
adc
adc
add
add
es
pop
sbb
outsb
popa
xchg
and
outsl
in
xchg
test
jno
and
outsl
in
xchg
loop
jbe
subl
sahf
iret
xchg
rcll
add
sub
stc
mov
xchg
scas
mov
push
and
push
sub
mov
mov
mov
sub
mov
outsl
pop
add
add
and
clc
jnp
lea
push
imul
lods
jp
sbb
add
cmp
outsb
and
aas
loope
mov
aas
mov
xor
pop
inc
das
pusha
repz
and
mov
and
add
mov
add
pop
repz
and
aas
mov
push
loopne
imul
push
sub
add
add
mov
out
xchg
mov
xor
sub
push
push
sub
call
sub
cld
xchg
and
push
mov
clc
mov
imul
mov
loop
push
jle
insl
sti
popa
dec
xor
loop
lea
call
mov
push
int
add
int
jecxz
xor
sbb
fs
jnp
int3
jno
sbb
jle
lock
mov
fsts
or
clc
roll
dec
inc
call
int3
jno
cmp
outsb
cltd
lret
or
jle
sub
mov
sbb
or
xchg
jne
hlt
insl
aaa
xlat
pop
pop
lods
iret
add
scas
cmpl
add
sti
add
es
pop
cmp
inc
icebp
jno
push
mov
fsubl
jns
add
add
mov
in
js
mov
xlat
push
mov
inc
stos
sbb
cld
push
into
inc
adc
aaa
push
add
sahf
dec
inc
es
pop
sub
xchg
outsb
in
xchg
scas
jp
add
add
in
and
push
icebp
or
inc
aas
pop
imul
xor
fisttpl
outsb
shrb
push
cwtl
sahf
aaa
adc
fdiv
sub
cmpsl
scas
nop
sub
outsb
cs
xchg
jae
fisttpl
in
xchg
xchg
outsl
outsb
notb
es
xchg
and
add
push
xchg
lahf
cltd
in
xchg
jne
shl
xor
add
jns
ja
jge
jmp
loop
and
and
and
jb
sti
hlt
lock
inc
out
sti
jg
or
xchg
add
pop
mov
push
cmp
pop
aas
or
jns
clc
js
ret
testb
repnz
icebp
fistps
fdiv
push
shr
pop
add
mov
dec
add
add
sbb
mov
cltd
and
sbb
sti
in
cmp
popa
add
xor
push
sbb
cmp
sbb
testb
popf
xor
sti
cmp
push
dec
xor
push
xchg
or
clc
or
xchg
imul
es
test
mov
adc
sub
jno
fisubrl
jle
call
in
das
pop
xchg
xchg
or
add
add
popf
rclb
fisttpll
push
testl
push
fdivl
push
scas
out
mov
clc
icebp
inc
xor
jmp
movlps
jp
inc
jbe
stc
stos
hlt
cmpb
fisttps
jge
xchg
xchg
cld
and
adc
push
gs
push
fldenv
aam
addr16
xchg
fsubs
int3
xchg
es
pop
in
sbb
add
add
pop
addr16
mov
stos
push
in
das
pop
mov
push
in
pop
pop
lret
les
mov
add
in
mov
lcall
jg
add
pop
adc
and
cmpsl
in
iret
fcomp
xchg
jb
add
dec
ljmp
aas
fs
in
sub
xchg
nop
adc
add
lcall
add
add
lds
test
ficoml
pop
out
sub
sbb
leave
lea
fs
rcll
xlat
mov
push
daa
cs
test
jge
push
add
adc
mov
repz
sbb
loope
push
jbe
rcr
xchg
and
out
dec
divb
add
add
bound
pop
add
xchg
test
push
fildl
push
int
mov
mov
sti
aaa
cwtl
push
push
add
pop
add
pop
insb
fildl
pop
xor
jl
jnp
and
sti
hlt
adc
test
and
out
pop
push
jmp
add
sub
mov
add
xlat
fldl
pop
lea
stos
lret
mov
add
add
push
out
insb
and
lock
and
inc
fwait
add
mov
xchg
sbb
iret
out
sub
add
inc
mov
push
inc
andb
je
sub
fimuls
fsubs
push
sbb
int3
jno
mov
int3
cld
iret
pop
push
jbe
imul
adc
sbb
dec
inc
mov
mov
mov
xchg
loop
mov
and
or
int3
jno
dec
dec
lods
jo
inc
push
and
int3
jno
mov
sbb
or
and
sbb
push
jb
pop
sbb
inc
xchg
adc
pop
xchg
jne
ficompl
popa
jnp
mov
and
xchg
pop
pop
nopl
inc
xchg
pop
xchg
mov
or
add
add
jg
jle
cld
pop
xchg
stos
push
push
por
and
es
push
pop
rorl
lea
gs
jb
cltd
push
sbb
scas
xchg
pop
or
fdiv
cmp
in
adc
jp
sub
outsl
in
xchg
ja
clc
mov
cs
in
mov
mov
in
mov
add
adc
outsb
in
and
add
xchg
and
outsb
sbb
xchg
js
sub
and
in
and
or
xchg
and
xchg
xchg
lcall
in
xchg
adc
xchg
and
cs
or
cltd
lods
mov
add
into
inc
pop
ret
add
mov
xchg
pop
add
add
and
inc
repz
xchg
or
pop
push
sub
push
xlat
cli
fiaddl
stos
scas
outsb
mov
movsb
sti
fs
daa
outsb
or
icebp
and
filds
rep
daa
outsb
or
aam
sti
enter
arpl
sub
outsb
pop
stc
jae
hlt
test
outsb
outsb
das
rcrb
add
and
inc
xchg
mov
test
aad
arpl
int3
pop
mov
or
cmp
jno
inc
sbb
add
xchg
lea
and
xor
aas
push
and
fiadds
and
mov
jb
xchg
xorl
jle
in
xchg
push
icebp
pushf
xchg
mov
jno
or
mov
jae
add
add
push
jae
xchg
mov
jb
xchg
inc
icebp
nop
xchg
mov
mov
push
push
test
xchg
mov
gs
cli
in
lret
gs
outsl
lock
jnp
xchg
and
movsb
rorb
test
xchg
xchg
and
test
and
pop
or
xchg
push
lods
cli
test
inc
jne
or
jg
jb
ja
push
jae
mov
pop
xchg
cmp
xchg
sbb
incl
xchg
and
xchg
xchg
fimull
lahf
mov
mov
pop
xchg
mov
imulb
daa
outsb
in
push
push
rcll
imul
xchg
and
push
je
or
popa
or
pop
or
ljmp
cmp
jne
mov
add
add
push
push
mov
hlt
inc
lods
pop
ljmp
sbb
push
add
xchg
mov
icebp
popa
xchg
and
or
int3
sbb
jmp
xor
pop
cmp
aad
repz
dec
jne
das
mov
inc
das
fwait
es
and
mov
and
ja
pop
pop
jmp
repnz
add
mov
mov
add
aad
and
or
push
fs
outsb
outsb
mov
sub
scas
movsb
xchg
imul
push
mov
and
pop
and
fs
adc
xchg
push
call
mov
jg
xchg
lods
cwtl
sub
add
jno
xchg
xor
cwtl
xchg
mov
add
inc
jo
xchg
inc
out
pop
xchg
mov
jl
push
mov
sub
adc
xchg
nop
les
jp
xlat
inc
cmc
jnp
mov
incb
lahf
or
jo
divb
test
rolb
scas
add
xchg
mov
or
mov
or
sbbl
jno
out
mov
out
or
add
sbb
pop
add
mov
xchg
pop
xchg
push
and
adc
xchg
test
and
add
mov
adc
jne
xor
and
jnp
push
xchg
push
sbb
dec
call
or
xchg
push
adc
lahf
jbe
int
mov
add
fcmovnbe
adc
fisubl
pop
xchg
push
adc
push
add
pop
xchg
and
adc
lea
outsb
xchg
cmp
sti
imul
sti
pop
test
jbe
sub
jp
push
push
sub
xchg
and
mov
xchg
and
outsb
jbe
mov
xor
push
out
fiadds
add
out
addr16
jo
rep
pushw
clc
sub
push
addr16
scas
outsl
in
xchg
inc
outsb
pusha
push
add
xchg
sbb
outsb
in
sbb
add
out
mov
add
lcall
icebp
movsl
push
enter
push
push
into
or
add
sub
outsl
movsl
scas
or
into
add
inc
cltd
mov
add
add
mov
movsb
ficoml
in
or
mov
push
mov
outsb
add
aaa
push
add
mov
cmc
xor
xor
add
daa
mov
inc
mov
sub
push
fs
cmp
jae
push
sti
add
jae
scas
daa
cmc
cmp
imul
or
dec
je
data16
xchg
imul
add
add
outsb
dec
in
xchg
inc
or
add
arpl
add
mov
xchg
adc
insl
jl
mov
cli
mov
sti
or
es
xor
push
roll
push
mulb
cs
dec
add
inc
and
xor
inc
xchg
in
lcall
xor
add
add
mov
adc
add
adc
or
lcall
repz
jmp
sub
mov
xchg
mov
stos
and
or
ficompl
cmpsb
push
repz
and
ret
cmc
pop
xchg
sahf
pushf
insl
xchg
sahf
pop
xrelease
dec
out
pop
inc
sahf
cmpsb
test
dec
xchg
xor
add
add
mull
or
and
popf
inc
xchg
aas
outsb
in
sbb
xchg
sub
and
pusha
xor
das
xchg
clc
mov
lods
outsb
in
push
out
push
push
mov
je
fwait
mov
mov
jmp
and
inc
stc
lods
pusha
xor
lcall
xor
lds
shlb
cs
or
repz
es
sbb
add
or
stc
sub
mov
icebp
sarb
xchg
add
cltd
and
pusha
sub
andl
mov
and
add
imul
sarl
outsb
push
adc
pop
push
scas
and
mov
and
jmp
or
cli
xchg
sti
inc
daa
and
inc
aas
inc
mov
add
add
in
inc
mov
rorb
ret
pushf
xor
out
inc
mov
cmc
cmp
jl
mov
pop
mov
xchg
push
inc
pop
sar
xchg
push
outsb
add
lret
pop
iret
jnp
add
sub
push
addl
ljmp
sbb
add
shll
mov
mov
jns
dec
cmp
xorps
lds
imul
push
arpl
das
push
orl
rcrb
or
mov
pop
cmovo
testb
mov
mov
ds
sbb
and
pop
add
push
lea
add
sub
cwtl
dec
add
add
and
iret
xchg
lcall
mov
jecxz
mov
xor
sbb
daa
jmp
push
mov
sbb
outsl
ret
add
pop
mov
add
mov
lcall
jp
xchg
pop
xchg
and
fcoms
add
and
add
mov
add
xchg
jb
inc
imul
arpl
xchg
push
and
dec
add
cmp
lea
jle
stc
xchg
mov
xchg
and
jmp
out
or
sti
push
sub
lds
adc
xor
mov
pop
jge
es
xor
jno
icebp
mov
ret
jo
stos
adc
cltd
mov
add
jg
xor
fbld
xchg
out
fsubrl
pop
and
sub
mov
or
or
das
add
lock
das
push
xor
pop
ret
scas
sub
add
push
sti
inc
mov
sub
dec
arpl
mov
cli
mov
and
cmp
ss
arpl
or
popl
add
push
notb
aam
jns
inc
div
inc
mov
sub
and
mov
dec
inc
cmp
dec
inc
cmp
xchg
inc
data16
popf
or
test
pushf
add
into
icebp
js
dec
pushf
call
lret
mov
xor
insb
or
jo
fwait
add
cmpl
dec
fwait
lcall
into
jno
mov
xor
add
push
int
add
int3
stos
push
push
mov
sbb
jge
inc
dec
adc
into
jb
xchg
int3
push
pop
sbb
shll
sub
push
mov
add
js
fsubs
push
adc
jmp
scas
scas
fildll
shll
xchg
push
popf
jnp
js
mov
ret
xlat
pop
or
push
fs
insl
arpl
movb
add
and
mov
lods
ljmp
scas
dec
fucomp
lea
in
push
in
inc
xchg
std
inc
jmp
xor
repnz
xchg
ret
xor
xchg
and
xchg
push
dec
sub
shl
int
cli
es
outsb
mov
movsl
inc
lcall
add
add
aad
mov
mov
in
mov
in
xchg
out
jmp
push
push
xor
shlb
in
fsubs
xchg
test
insl
push
mov
cmpb
test
cmp
push
stc
sbb
es
fsub
sbb
jmp
adc
add
jns
add
jno
add
mov
add
sub
cmp
push
movsb
jns
das
inc
outsl
push
sarb
pop
out
cld
mov
insl
mov
je
mov
add
cmc
cmc
cmp
push
push
push
adc
xor
and
cs
xor
in
cmp
sti
sub
add
in
sbb
cmp
and
fwait
or
outsl
add
add
jg
xchg
push
addr16
repz
cs
repz
outsl
int3
or
pop
cmc
cmc
lods
dec
push
add
xchg
popa
dec
push
mov
incl
add
mov
jno
fdivl
and
cltd
push
or
and
loope
jno
mov
jno
leave
adc
cmp
stos
dec
lods
and
cmpb
jo
add
add
mov
sub
daa
or
test
adcl
cmp
daa
bound
lods
push
inc
lcall
inc
bound
pop
inc
das
fbld
mov
jmp
mov
ljmp
test
jae
stos
lret
aam
std
adc
pop
adc
add
add
mov
xchg
mov
xchg
dec
pop
in
fdivrs
dec
cwtl
cmp
jb
xchg
test
and
mov
mov
pop
xchg
test
je
jne
fisubrl
ret
gs
stos
outsb
and
loop
leave
and
push
mov
adc
mov
and
mov
pop
add
add
sub
cmpsb
jg
cmp
imul
sub
jb
lcall
in
data16
lcall
outsb
and
lods
aaa
pop
data16
mov
jbe
daa
sub
test
test
sbb
imul
xchg
dec
outsb
add
sub
stos
add
bound
add
add
push
outsb
add
sub
aas
cmp
inc
loope
add
sub
sti
push
mov
dec
xchg
sub
and
cmp
and
outsb
add
movsb
add
movsl
scas
jno
cmp
and
mov
aas
out
dec
dec
jae
push
dec
add
mov
lea
add
negl
add
add
daa
add
sub
les
loop
add
into
or
xor
jno
cmp
pop
sti
add
push
mov
pop
mov
mov
adc
leave
decl
or
mov
idivb
lock
insl
adc
or
mov
jo
or
imul
sti
push
movsl
test
add
stos
loope
sti
mov
pop
andl
or
or
xchg
test
orl
test
jb
mov
add
pop
scas
inc
clc
repz
jp
mov
addr16
into
and
cmp
addr16
cld
add
fmull
in
pop
lcall
push
add
adc
sbb
in
pop
jge
add
or
xchg
js
pop
pop
sti
loope
add
inc
scas
or
xchg
push
and
add
mov
icebp
add
lahf
xchg
pop
sbb
aaa
lahf
xchg
pop
in
loop
jmp
scas
cs
fstpt
jbe
cmp
pushf
fldenv
add
fsubrl
xchg
mov
add
inc
push
lcall
je
sub
sbb
outsb
insl
rclb
xlat
mov
lods
sub
in
inc
gs
sti
sub
sub
xor
add
lea
push
xor
and
in
adc
bound
xor
rol
pop
push
sub
test
and
ja
sub
push
mov
jns
push
fnstsw
filds
add
mov
outsl
out
cmp
insb
mov
arpl
xor
ss
push
add
inc
das
imul
leave
and
outsl
jno
fsubrl
out
and
les
adc
or
mov
add
ja
or
clc
insl
add
outsb
push
shrb
push
out
and
jns
jg
daa
and
xchg
clc
sub
add
arpl
xchg
cmp
or
stos
jbe
inc
xchg
dec
scas
or
and
pusha
or
push
mov
imul
fiaddl
add
sbb
aad
or
dec
das
add
adc
aad
or
imull
add
mov
or
mov
shll
call
roll
push
xchg
bound
add
xchg
mov
mov
mov
stos
lcall
sbb
push
rcrl
xchg
pop
sbb
inc
jge
test
int3
jl
into
jb
jge
sub
mov
in
or
in
fadds
fisubl
or
icebp
dec
punpckldq
adc
jae
popf
cmpsl
push
push
xchg
and
jae
ds
add
mov
mov
push
xchg
and
adc
xchg
and
push
push
mov
xor
out
mov
in
xchg
sahf
ss
mov
xchg
sub
insb
fwait
and
xor
and
outsb
in
xchg
sahf
ss
cmc
sub
int
xchg
jne
shll
imulb
test
outsb
in
repnz
lea
add
add
and
dec
pop
xor
mov
outsb
in
aaa
jnp
lods
xchg
int3
jp
xchg
and
cs
aaa
arpl
lods
xchg
int3
mov
xchg
and
cs
add
cld
and
inc
mov
and
inc
jg
xor
mov
sub
add
add
outsb
add
jne
sti
or
loop
sub
cmp
cs
add
outsb
or
movsb
cmp
das
xchg
addl
mov
xchg
outsb
add
xchg
addl
xchg
lcall
mov
xchg
inc
flds
mov
jno
aaa
dec
jl
jle
mov
add
add
mov
fiadds
out
adc
xchg
xchg
xor
mov
mov
jmp
xchg
sbb
jno
mov
jno
inc
cmp
add
jo
cmp
xor
call
push
subl
cmp
mov
jb
push
mov
jno
lea
pushf
xchg
add
test
xchg
mov
mov
sbb
add
pop
in
std
dec
lcall
shrb
add
adc
jnp
sbb
adc
or
int3
orb
add
out
inc
rorl
ret
lcall
testl
addr16
sbbb
xchg
mov
mov
add
add
xchg
or
xchg
scas
addr16
sub
lahf
outsb
in
push
or
in
pusha
or
in
stos
or
in
outsb
or
in
inc
or
in
mov
int3
pop
mov
insl
fwait
mov
fists
xchg
dec
sbb
outsb
pusha
fidivrl
jns
mov
and
mov
lods
or
xor
dec
sbb
aad
mov
add
add
imul
xchg
stos
jle
ret
in
pusha
sbb
aad
inc
lods
pop
mov
jns
dec
mov
sqrtps
arpl
pop
sbb
dec
jnp
push
mov
imul
add
in
aas
mov
push
adc
jnp
lret
xchg
imul
xorb
rorb
repnz
test
in
add
add
repnz
lret
test
mov
sub
outsl
pop
mov
hlt
pop
sti
push
jl
outsl
pushf
jle
cmp
das
les
or
push
mov
xor
les
pop
data16
jl
ljmp
inc
mov
or
xchg
cli
cmpsl
arpl
mov
jg
xchg
inc
mov
insl
sti
aas
push
add
add
shll
hlt
scas
xor
jo
xor
mov
xlat
es
out
test
jno
push
mov
pop
ror
jg
jmp
jno
push
lock
mov
movsb
jno
inc
adc
decl
aaa
test
jno
sub
xchg
cmp
fwait
lret
and
sahf
add
add
pcmpgtd
mov
and
incb
pushf
push
xchg
and
adc
pop
add
sahf
add
arpl
pop
and
inc
lcall
fmuls
or
fadds
sub
lds
or
or
and
xor
lods
out
xor
cmp
push
mov
add
sub
push
inc
push
clc
add
cs
push
ljmp
or
jb
fisttpl
mov
push
stc
sbb
sub
out
jno
jp
mov
test
lods
push
popf
cmpsb
je
push
sub
arpl
and
and
sbb
jbe
and
cmp
add
dec
test
xor
scas
jle
nop
cmpsb
jle
add
mov
add
cs
jo
mov
sub
and
repz
ljmp
push
jbe
and
addr16
jmp
pop
les
testl
out
lret
cmpsb
lcall
fldt
mov
add
xor
jns
in
and
adc
push
mov
ficoml
sti
push
aaa
shrl
repnz
add
sub
xchg
stc
jns
dec
int3
js
es
out
bound
dec
jg
inc
push
jecxz
aaa
xor
std
lret
xchg
and
dec
jle
loop
mov
adc
and
lods
add
add
popf
loop
std
cwtl
sti
adc
cmpsl
jecxz
aas
ja
lods
js
inc
mov
repz
lods
add
int3
cltd
xlat
pop
cmovns
mov
lret
fiadds
xlat
pop
cmovno
mov
push
out
nop
out
inc
xchg
and
push
or
aad
lock
je
or
mov
inc
inc
mov
lds
jmp
add
add
ds
or
or
pop
rorb
flds
hlt
or
pop
repnz
pop
call
or
pop
fwait
or
pop
pushf
or
pop
jb
flds
js
flds
mov
flds
jo
pop
add
pop
add
or
rorl
pop
add
and
add
and
and
sbb
in
cmpsl
scas
arpl
add
add
insl
dec
or
and
loop
add
jp
and
jae
inc
jmp
in
push
and
sub
shlb
ficoms
pop
fists
sub
into
xor
mov
xor
sbb
jbe
jo
lcall
push
stc
js
push
mull
bound
add
add
add
stc
sbb
fchs
inc
jg
add
push
js
add
movsl
scas
jo
cmpsl
xchg
and
adc
movsl
and
dec
pop
icebp
pop
sti
mov
sarb
mov
les
xor
mulb
cmp
sub
out
add
lahf
lcall
data16
push
fs
jbe
cmp
add
adc
add
cmp
outsb
mov
ficoms
sti
cmp
jp
xchg
iret
push
add
xlat
adc
aam
jecxz
testb
mov
mov
decl
icebp
jo
xchg
xchg
adc
sub
clc
sub
aas
push
or
adc
jae
mov
add
add
mov
mov
clc
jno
addr16
testb
mov
shld
xchg
jb
cmp
clc
ret
mov
mov
adc
es
rorl
sbb
roll
sbb
sbb
mov
hlt
sbb
xor
lds
lea
rcl
dec
test
rcrl
out
mov
and
add
lods
or
adc
lock
sbb
shrb
sbb
lcall
pop
arpl
pop
in
arpl
rcll
in
test
jg
fdivrl
cwtl
out
mov
jo
shrl
push
outsb
loope
dec
mov
mov
insl
cmc
mov
adc
lea
mov
xchg
jns
add
inc
stos
lea
xchg
stos
fsubrs
push
std
bound
push
std
push
push
std
sub
addr16
mov
icebp
jns
fnstenv
adc
lea
xor
mov
ret
xor
ret
std
mov
iretw
fucomp
out
or
lea
push
jbe
add
mov
add
add
sti
in
and
and
ror
push
hlt
lds
push
in
xchg
jae
rorb
and
and
sbb
std
das
and
push
and
sti
stos
in
loope
inc
hlt
hlt
lret
jnp
test
adc
jmp
ret
outsl
loop
testl
shl
hlt
jb
jns
add
add
cli
inc
jae
hlt
lret
xchg
and
push
xchg
mov
out
dec
mov
scas
or
adc
jo
inc
jno
adc
in
pusha
sbb
push
imul
incl
pop
mov
bndldx
add
sub
in
int3
xchg
mov
jno
xchg
pushf
addb
add
fisubrl
add
dec
and
clc
push
stos
cli
cmpsl
aaa
dec
incl
and
loope
cmp
roll
lods
cmp
imul
outsl
inc
or
add
adc
xchg
andb
jg
push
mov
movsb
add
add
xor
jmp
inc
aaa
push
add
gs
sbb
mov
xchg
aad
fcoms
inc
lock
or
add
jo
scas
out
fildll
insl
dec
pop
xchg
inc
push
dec
add
pop
insl
lea
out
sti
mov
or
int
jns
cmc
cli
test
cmc
clc
sbb
imul
add
add
call
sarl
outsb
ljmp
outsb
data16
out
das
repnz
pushf
jge
iret
and
in
test
popf
sbb
stos
mov
in
mov
mov
mov
push
jns
mov
outsl
xchg
add
xchg
outsb
add
jbe
repnz
aaa
add
mov
dec
add
add
add
and
enter
push
jg
das
aam
insb
testl
outsb
add
std
mov
xor
jle
mov
in
bound
cmp
mov
inc
pop
cmp
pop
out
aas
mov
inc
cmp
test
ja
jmp
inc
int3
or
xchg
dec
and
xchg
loope
jnp
add
fadds
fisttps
add
fmull
add
xchg
pop
xor
or
rcr
pop
xchg
mov
mov
or
push
or
int
and
xor
xchg
fistps
xchg
xlat
or
mov
iret
sbb
sahf
and
xor
mov
lcall
add
rolb
jle
sarb
scas
sbb
and
aam
shl
pop
or
out
pop
add
out
pop
sbb
or
ss
and
fcoms
inc
mov
xchg
xchg
enter
xchg
jg
mov
cmp
dec
loopne
cld
mov
test
add
xlat
mov
pop
mov
adc
xor
test
add
movsb
push
aam
push
xlat
fmuls
leave
xchg
pop
loopne
xchg
xor
xchg
outsb
insb
imulb
and
xchg
pop
dec
sbb
loop
aad
xchg
and
xor
xchg
sub
xchg
sbb
mov
or
rcrb
add
arpl
pop
outsb
pop
roll
in
xchg
test
loop
push
outsl
in
xchg
dec
test
adc
in
sbb
mov
xor
lods
add
add
jns
xchg
lcall
dec
adc
and
push
jp
mov
and
in
sub
add
xor
xchg
in
pusha
push
outsb
add
lcall
inc
xchg
outsb
add
sbb
insl
repnz
testl
jecxz
mov
testl
call
testl
call
testl
and
dec
lock
outsb
xchg
nop
sti
inc
pop
dec
jb
dec
mov
cmc
sbb
out
les
add
xchg
mov
movb
add
lock
mov
jno
orl
subb
jno
sbb
mov
call
in
cld
cwtl
cmp
mov
les
and
xchg
xor
adc
inc
cld
ret
cltd
push
jb
jnp
jno
adc
push
pop
or
mov
call
or
cwtl
cmp
add
xchg
and
xchg
test
dec
jnp
push
cld
inc
xchg
test
repz
mov
pop
pop
xchg
mov
lcall
sub
cmp
cmpsb
daa
cwtl
and
xchg
test
adc
into
adc
cli
xlat
and
imul
fadds
pop
std
mov
scas
xchg
pushf
int
gs
add
add
outsb
fcomp
push
popf
movsb
int
gs
sti
cmp
pop
dec
call
clc
mov
leave
xor
in
ss
sbb
out
in
xchg
call
popf
or
movsb
outsb
in
sbb
jb
adc
jbe
scas
fsubl
mov
test
out
jno
mov
add
xor
xchg
imul
jb
idiv
jno
sub
cld
xchg
pop
jbe
mov
or
xchg
adc
jmp
stc
sbb
jle
mov
daa
dec
aas
mov
push
cmc
lret
loopne
adc
cmp
or
push
test
adc
jns
cltd
out
es
orb
lret
add
outsl
outsb
add
stos
push
pushf
out
outsb
sti
cmp
cmp
cli
add
testl
out
inc
cmc
inc
mov
insl
push
push
outsb
add
pop
push
cmp
mov
rclb
pop
inc
mov
sub
add
mov
jns
mov
push
sbb
mov
add
add
add
mov
stos
movsb
jle
xchg
fxrstor
int3
push
pop
pop
xrstor
jno
sbb
mov
or
daa
arpl
xorl
cmp
mov
sbb
jb
add
xor
dec
daa
adc
es
mov
fstps
xchg
test
add
push
sbb
stc
push
mov
stos
sbb
dec
add
xor
imul
lret
and
mov
popf
mov
jnp
adc
clc
mov
mov
jle
mov
lret
out
inc
hlt
adc
xchg
dec
fwait
push
push
pop
pop
and
jle
idivl
aas
add
add
out
insl
data16
mov
push
loop
sub
mov
mull
mov
rep
loope
inc
lods
insl
in
jo
xchg
dec
scas
bound
xor
cmp
leave
xor
stc
xchg
lea
push
jne
rcr
mov
sub
inc
popa
in
xchg
cmc
and
xchg
stos
and
stos
xchg
ret
add
add
pushf
lea
pusha
inc
and
jno
in
xchg
dec
test
data16
push
add
pop
push
pop
sub
repnz
jnp
mov
sti
dec
xchg
dec
cmc
cld
push
push
xchg
add
sbb
and
inc
pop
sbb
mov
popa
cmc
hlt
cmpsb
out
sbb
ficoms
adc
hlt
lret
add
lods
testb
popf
shll
push
xchg
sbb
in
je
outsb
add
and
inc
xor
mov
cmp
scas
cmp
dec
mov
mov
xor
out
imull
enter
dec
int3
out
add
mov
pop
outsb
xchg
mov
pop
mov
sti
pop
jp
push
jg
filds
add
xchg
mov
fisubrl
not
pusha
sub
lods
mov
pop
not
addl
add
mov
adc
mov
push
mov
add
out
sbb
xchg
adc
and
pop
add
xlat
xchg
das
or
and
pop
loope
pop
sbb
das
adc
mov
shlb
ljmp
loop
sbb
add
jle
sbb
xchg
test
sub
loop
jae
lret
sub
cmp
mov
adcb
jp
adc
jge
adc
cmp
adc
cli
data16
mov
xchg
sbb
cmovae
sbb
adc
outsb
inc
xchg
and
outsl
jne
add
push
dec
gs
dec
data16
jge
bound
cmpsb
cmc
in
xchg
lods
mov
in
push
loope
sub
jle
ficoml
test
adc
in
xchg
mov
push
add
xchg
test
outsl
in
xchg
idiv
sub
push
xchg
ret
outsb
repnz
adc
outsl
in
xchg
stos
xor
sahf
test
outsb
in
xchg
stos
rolb
add
test
xchg
les
add
ss
scas
daa
outsb
sti
sti
mov
nop
out
adc
sti
or
sti
sti
imul
xor
movsb
repnz
inc
outsl
and
cmc
in
ljmp
sbb
aas
out
add
daa
adc
aad
push
add
daa
scas
sti
mov
mov
pop
in
add
add
data16
movsl
sub
inc
fistl
push
cmp
cmp
dec
xchg
and
add
fsts
add
add
in
add
jno
or
jge
test
imul
mov
or
adc
jle
push
push
and
add
add
mov
xchg
xor
aad
add
or
and
lock
jb
jno
jp
xor
fsts
or
aas
xchg
adc
loope
adc
jecxz
sahf
shl
test
dec
xchg
and
adc
add
std
pop
add
sahf
pop
pop
in
repnz
push
ficomps
pop
in
xchg
loop
xchg
xlat
loope
fwait
pop
adc
scas
loope
xchg
adcl
pop
add
push
cs
test
add
out
xlat
push
adc
mov
scas
shrl
fistpll
outsb
in
sbb
jne
arpl
jb
inc
test
inc
test
ljmp
add
add
jge
push
dec
iret
jb
dec
test
mov
mov
in
mov
jp
jne
clc
sbb
jne
push
adc
scas
push
icebp
lods
mov
xchg
js
mov
push
mov
add
fildll
xor
jge
cs
lret
jle
push
shl
push
dec
popw
xchg
sbb
add
lcall
add
add
icebp
or
rclb
bound
jns
push
sub
rcrl
push
jp
icebp
subb
repz
pop
adc
xrelease
xchg
xor
push
push
das
push
ret
or
bound
cli
mov
cmpsb
scas
add
xor
mov
pushf
xor
pop
subb
jbe
add
add
stc
mov
divl
cs
mov
jnp
jo
dec
mov
bound
icebp
xor
dec
int3
lret
cwtl
xor
sub
dec
xchg
push
lea
push
lea
add
inc
data16
aas
cmp
jmp
fnstsw
fs
jns
jl
push
loope
test
sbb
jo
add
add
xchg
or
bound
das
fdivrl
pop
inc
xchg
adc
or
shlb
mov
xchg
pop
xchg
and
xchg
mov
sbb
std
fwait
pop
fsubr
je
pop
xchg
lcall
fstpl
jb
arpl
adc
adc
and
and
shlb
and
add
add
sbb
jp
sbb
sub
mov
ds
lcall
xchg
fwait
push
xchg
test
mov
cmp
adc
iret
scas
cmp
ljmp
movsb
cmp
in
jb
in
xchg
cmp
scas
movsl
and
lcall
sbb
stc
jle
fistl
jge,pt
rolb
jle
inc
xchg
and
lea
std
in
in
xchg
movsb
add
and
fcoml
bound
nop
add
out
add
cmp
cmpsb
jbe
jge
outsb
xchg
and
add
and
sub
xchg
and
inc
les
mov
xchg
jecxz
and
out
cmp
add
add
xchg
sub
out
cmp
test
and
add
aaa
push
sti
fcmovb
bound
mov
xor
jne
mull
testl
daa
and
mov
xor
pop
push
outsl
mov
mov
std
sbb
mov
jg
aad
and
insl
xchg
int
das
cmp
sbbl
add
pop
mov
vpshufhw
mov
xchg
pop
cmp
or
xchg
clc
push
sahf
aaa
movsb
sub
mov
jo
aam
jno
sbb
movsb
or
jl
jle
jl
or
mov
mov
icebp
es
inc
sub
sbb
add
jl
xor
jp
add
mov
add
add
jl
inc
stos
stc
mov
lcall
ljmp
push
dec
xor
les
and
insl
xchg
and
xor
or
fwait
sub
push
xor
sbb
lret
sbb
cmp
inc
xchg
pop
cmp
mov
mov
and
inc
add
add
jge
xchg
inc
popl
sub
sub
mov
in
mov
push
and
les
pop
add
pushf
outsb
jl
jmp
cltd
push
push
cmp
xor
sub
or
sbb
xor
adc
clc
mov
lcall
jl
and
inc
addb
add
or
je
loope
or
pushf
sahf
in
xchg
and
outsb
in
adc
into
in
xchg
and
outsb
xchg
jg
sti
arpl
xchg
gs
xchg
lahf
xor
xchg
sahf
int3
fsts
dec
jo
jg
mov
sub
outsb
add
lock
and
mov
loope
mov
cmc
inc
xchg
xor
inc
pop
popf
xor
push
fwait
xor
add
mov
outsb
push
mov
sti
mov
and
fsts
out
and
imul
sti
mov
and
mov
mov
sub
adc
xchg
push
and
add
mov
lret
out
add
jl
fdivrs
outsb
add
adc
and
add
enter
sahf
jp
add
data16
ret
xchg
mov
add
jnp
and
addl
add
adc
data16
adc
mov
mov
xchg
lret
jmp
divl
test
add
sub
xchg
add
mov
shlb
adc
add
ror
mov
push
dec
and
dec
adc
lahf
add
adc
jecxz
out
pcmpeqd
pop
push
or
sbb
push
and
rclb
add
xchg
insb
ljmp
pop
pop
popf
jnp
in
lahf
mov
aam
jb
push
add
push
dec
mov
add
int
lds
aad
notl
outsl
movsl
xchg
pop
xor
jnp
xchg
adc
jmp
inc
lods
cmp
xchg
lea
lcall
rcrl
lea
mov
lea
fnstenv
ds
outsb
pop
mov
scas
sbb
std
nop
cwtl
mov
stos
scas
xor
add
xchg
push
scas
scas
std
test
inc
lods
cmp
adc
in
xchg
ja
rcr
mov
lea
xor
lods
mov
shrl
outsb
mov
xchg
icebp
add
shr
call
cld
fisubs
aaa
leave
add
and
ret
pop
outsl
sub
add
sub
jecxz
icebp
add
sub
xchg
jmp
xchg
inc
gs
popl
add
jo
sti
inc
aaa
add
shr
push
sbb
add
add
fidivl
aas
es
daa
outsb
mov
popa
mov
sub
in
mov
mov
fs
push
and
pop
cmc
push
xchg
add
or
sub
and
and
mov
sub
xchg
andb
jno
loop
xchg
mov
add
add
int
push
push
mov
add
mov
xchg
mov
rorb
xchg
icebp
xchg
mov
push
jno
ljmp
cmp
stos
push
or
and
lea
data16
xor
mov
or
in
dec
xchg
adc
xchg
in
pop
stos
jo
xchg
loope
and
and
xchg
pop
push
in
test
sbb
cmp
dec
ja
and
jo
mov
aad
xor
andb
mov
jecxz
add
mov
or
jne
sub
addb
jecxz
dec
dec
mov
inc
jp
lahf
dec
pushf
and
lds
icebp
mov
add
iret
xchg
pop
add
add
icebp
mov
fdiv
insl
loope
clc
jne
push
push
gs
and
outsb
in
xchg
pop
inc
test
adc
push
insl
xchg
and
repnz
xchg
and
clc
es
push
jne
and
cli
in
xchg
and
outsb
in
xchg
lea
call
je
and
add
xchg
cmp
fstps
stc
and
jne
add
outsb
in
insb
imul
jae
add
pop
out
test
jl
jo
movsl
cmp
out
pushf
lods
out
iret
repz
leave
jg
repnz
mov
cmc
iret
inc
mov
add
mov
stc
and
and
add
xchg
int
hlt
xor
repz
xor
xchg
pop
add
add
aaa
push
or
or
ret
outsb
in
sub
mov
mov
add
add
lret
or
fxtract
cmc
push
jns
xchg
xchg
gs
dec
jb
hlt
jae
push
mov
inc
sahf
add
sbb
cmp
pop
xchg
fidivl
out
out
sbb
aas
out
add
add
shll
adc
lea
jp
or
mov
pop
push
mov
imul
jg
xor
int3
jno
enter
jmp
sbb
cmp
rorb
inc
lods
mov
xor
fs
movsb
dec
jb
and
xchg
test
mov
push
add
call
xchg
pushf
cwtl
stos
push
or
add
adc
jle,pt
pushf
fadds
aas
test
movsl
test
in
add
and
mov
jmp
adc
pop
fsub
push
push
jecxz
pushl
insl
sbb
int3
lahf
fistpll
into
cmp
jecxz
stc
or
inc
add
sbb
add
and
xchg
pop
sbb
dec
add
stc
insl
or
jp
add
add
idivb
leave
fldz
mov
mov
cs
push
dec
inc
and
inc
add
jg
push
std
clc
push
mov
in
jns
add
idivl
dec
xchg
lods
xchg
aad
cmp
fmuls
clc
pop
scas
sets
or
xchg
loopne
add
fildll
addr16
aad
rcll
add
xlat
and
jmp
adc
cld
aad
roll
movsl
push
test
dec
jp
xor
ds
scas
and
adc
adc
add
push
addr16
sti
ja
inc
fdiv
inc
mov
mov
outsb
push
inc
int3
mov
scas
push
push
adc
repz
or
aas
sbb
test
sbb
pop
imul
add
nop
adc
mov
xlat
mov
inc
adc
add
out
repz
and
jb
std
push
out
popf
pop
push
movsb
in
push
xor
pand
jno
ret
loope
add
pop
inc
and
hlt
sub
jge
pusha
mov
pop
lea
adc
cmovle
scas
mov
das
xchg
push
or
push
dec
and
add
mov
jno
dec
lea
sbb
mov
lods
and
or
mov
pop
push
lahf
nop
lods
adc
mov
jg
jbe
inc
mov
mov
cld
xchg
and
jb
test
lods
cmp
inc
inc
sti
push
ds
lods
pop
test
sbb
scas
dec
in
add
mov
lock
js
inc
mov
jle
inc
mov
cld
push
cmp
fsubr
mov
scas
dec
cwtl
stos
scas
inc
inc
sarl
pop
and
cmp
xchg
ds
cld
adc
scas
pop
inc
jns
add
enter
cmpsb
mov
sub
adc
sbb
outsb
in
repz
add
add
xchg
outsb
in
xchg
cmp
repz
and
cs
or
lock
adc
in
outsl
in
cmpsb
dec
icebp
xchg
or
jbe
inc
das
jmp
lods
lods
lods
pop
jmp
pop
and
imul
test
test
outsb
in
adc
jbe
data16
scas
cltd
ds
mov
cltd
inc
dec
add
add
rolb
sub
ret
dec
mov
cli
cmp
xchg
mov
and
icebp
cltd
jmp
mov
test
sub
mov
rorb
movsb
movsb
mov
sub
js
push
shll
cmc
pop
rcll
lret
test
das
pop
stc
sbb
jle
outsb
mov
mov
js
add
xchg
sub
add
xor
insb
dec
adc
jo
cmp
sbb
or
lret
jge
lea
lret
mov
sub
pop
jb
push
inc
jp
cmpsl
cmp
sub
loop
add
jle
aam
xor
movsl
into
cltd
inc
lcall
call
or
push
push
add
add
ds
or
jno
xchg
or
lods
ja
add
shlb
add
mov
xchg
out
mov
push
mov
inc
lods
and
test
cmp
and
es
rorb
xchg
stos
xor
cltd
stos
fsubl
jo
aam
cltd
jle
and
adc
loop
fadds
add
mov
xchg
fsubrl
lahf
jle
sub
xchg
sahf
in
cld
mov
pop
sub
mov
jb
out
out
jbe
jp
lock
cmc
loope
test
adc
pop
fistps
incl
test
push
in
xchg
mov
outsl
mov
and
sub
sbb
xchg
lahf
cmpsl
add
add
add
js
loop
gs
mov
sahf
or
add
cmp
out
jge
out
xchg
and
push
int
addr16
sahf
pop
xorb
stos
or
jp
or
sbb
sub
sar
fnstenv
dec
mov
jl
jno
repnz
arpl
dec
jmp
add
lea
or
cltd
adc
sub
shlb
jo
jmp
xor
add
lds
ljmp
adc
stc
adc
mov
xor
insb
insb
pop
fldt
and
inc
fnstsw
lahf
enter
cltd
adc
inc
or
mov
add
add
push
inc
cld
xchg
mov
inc
and
dec
mov
int3
jne
lcall
adc
jle
shlb
jge
fisttpll
mov
jbe
es
fisubrl
mov
inc
xchg
divl
rolb
mov
xchg
adc
call
push
scas
dec
push
jl
pop
add
out
repz
add
lcall
mov
divl
cli
inc
lcall
ret
sbb
sbb
mov
call
mov
jae
mov
adc
and
mov
ds
xchg
icebp
jl
add
fdivr
sub
pop
sbb
add
mov
imul
and
mov
stos
xor
rorl
fdiv
repz
lret
movsb
sbb
and
ljmp
sbb
jo
dec
sbb
jno
test
dec
pop
out
dec
aad
shlb
imul
mov
mov
xor
add
das
out
popa
jbe
sub
mov
aad
sar
sbb
in
adc
jp
leave
and
xor
aam
aad
dec
lea
lods
shrb
or
jno
mov
and
in
es
and
cmp
insb
div
sub
sti
cmp
repnz
scas
and
popa
xchg
daa
jns
add
add
sub
gs
shl
rcr
jg
fsubrl
push
and
movsb
mov
sub
and
jbe
or
mov
test
add
xchg
xor
jecxz
push
aad
cmp
dec
xchg
jge
inc
rorl
xchg
out
aad
lcall
dec
pop
xor
add
pusha
out
test
jb,pt
scas
or
jo
repz
adcb
mov
fcoms
les
jb
jmp
sbb
jle
in
mov
jo
or
jle
dec
pop
jl
mov
jge
in
cmp
in
and
jno
sbb
jle
stos
xchg
cmc
jo
loopne
pop
jno
jle
mov
pop
adc
add
add
ret
xchg
jle
or
and
insl
adc
stc
lea
dec
adc
insl
scas
dec
stos
add
inc
pushf
cmpsl
loope
adc
adc
fsub
mov
xchg
adc
in
cmpsb
inc
xchg
mov
ret
out
sti
xchg
sub
xchg
and
jl
cmp
repz
adc
stos
daa
mov
add
add
jo
out
xor
xor
addb
in
stos
pop
aad
mov
xchg
and
insl
in
sbb
mov
lods
sbb
sbb
push
cmp
outsb
pusha
aad
jp
cwtl
jno
lock
out
scas
out
mull
jno
push
insl
jno
push
fisubs
data16
rolb
stc
cltd
jns
dec
adc
add
add
sar
mov
sbb
push
jge
cltd
xchg
and
add
scas
cltd
mov
jecxz
clc
jmp
addb
or
ljmp
dec
xlat
test
sbb
aas
outsb
sti
stos
sbb
jb
lret
inc
out
pushf
es
sub
mov
pop
jecxz
add
lahf
int
xchg
sub
mov
and
add
add
pop
fbstp
xor
add
or
outsb
add
fistps
divl
sbb
pop
notl
lea
mov
adc
mov
mov
arpl
cmp
jno
add
in
inc
xor
es
jnp
pop
jno
xchg
jle
sbb
or
adc
pop
jns
fdivrl
add
cli
stc
jge
or
ret
repnz
jle
in
or
jno
inc
jge
push
or
stc
sub
in
aaa
xchg
adc
addr16
mov
mov
pop
mov
jle
mov
into
jecxz,pt
add
leave
sub
into
in
jg
add
add
mov
cmp
pop
flds
aaa
xlat
test
inc
shll
push
imul
xchg
and
jge
jle
orb
lcall
icebp
sbb
jge
xlat
pop
or
mov
cmp
jg
sbbb
cmp
les
lcall
jb
sbb
add
add
cmpsl
mov
aam
mov
outsb
frstor
jae
fstl
inc
add
or
clc
mov
shlb
rcrl
clc
imul
outsb
in
dec
gs
adc
pop
mov
sahf
jl
in
xchg
and
xor
inc
jge
sub
leave
jns
pop
push
cmp
add
add
data16
imul
mov
add
sbb
test
shll
jns
icebp
test
test
xor
inc
mov
or
add
arpl
hlt
sbb
jno
outsb
add
dec
int3
js
cmpsb
xchg
js
hlt
inc
iret
popf
out
mov
and
add
pop
or
testb
stc
add
and
decl
and
outsb
sub
outsb
add
sbb
icebp
popf
outsb
add
dec
int3
js
movsb
xchg
stc
sbb
inc
push
and
les
xchg
jns
loopne
dec
push
clc
adc
je
lret
sub
jno
xchg
lret
push
xchg
in
xchg
sub
add
add
clc
into
out
jnp
add
arpl
xchg
jle
mov
xchg
adc
inc
ss
push
xchg
sti
push
xchg
sti
push
xchg
lods
inc
sbbl
or
mov
lock
dec
jno
scas
add
mov
and
xchg
pop
xchg
and
ljmp
or
adc
add
enter
out
lea
aad
xchg
jle
add
fnstcw
add
and
push
dec
pop
repnz
sbb
inc
sbb
pop
mov
xchg
lods
xchg
jge
push
xchg
and
xchg
pop
nop
repnz
mov
setbe
adc
jmp
sbb
es
pop
pusha
repnz
out
add
add
stc
mov
mov
dec
xchg
pop
pop
or
adc
insb
add
data16
fadds
imul
and
and
repnz
xchg
and
sahf
popf
outsl
jbe
lret
sub
jno
and
out
roll
lahf
xor
jbe
adc
outsb
in
adc
or
aas
mov
outsl
push
adc
mov
jne
push
mov
xor
in
fistpl
push
and
lret
add
mov
adc
subb
mov
stc
mov
repnz
cmc
lret
add
loopne
lock
and
push
sub
add
mov
jp
cmc
inc
add
add
faddl
pop
mov
cld
mov
jns
xchg
sub
cli
lock
outsb
mov
cltd
push
mov
mul
ljmp
adc
lret
popf
dec
jmp
dec
orl
mov
leave
sahf
jmp
andl
out
sbb
jo
popa
out
adc
add
add
xchg
cli
mov
push
dec
jno
arpl
roll
in
es
jo
mov
jno
adc
dec
jae
dec
ja
jo
inc
out
dec
cmp
mov
and
addl
sarl
push
icebp
jb
outsb
les
xchg
test
repz
loopne
sub
xor
add
jb
mov
xchg
mov
jecxz
cmc
in
rorb
mov
xlat
icebp
in
xchg
std
scas
fstpl
sbb
push
jo
addr16
scas
fcompl
sbb
test
mov
in
mov
stos
xlat
adc
pusha
clc
and
scas
outsb
add
pop
stc
fcmovb
lret
outsl
xlat
xchg
mov
insl
add
add
outsb
in
loopne
popfw
fsubrs
xchg
in
pop
lea
or
outsl
in
xchg
dec
xchg
pop
sti
jae
and
je
xchg
hlt
clc
sub
jecxz
dec
jae
mov
add
push
xchg
shr
xchg
and
and
push
pop
sub
mov
inc
push
and
in
xchg
stos
cmp
add
add
sub
xor
adc
out
add
fsubrs
shlb
push
xchg
push
leave
mov
out
outsl
jns
aas
lock
mov
adc
cmc
call
movsb
mov
sti
ror
insl
add
loopne
push
out
lcall
mov
pushl
aaa
add
add
outsl
mov
and
decb
jae
and
mov
mov
xchg
dec
outsl
nop
jno
xchg
rorl
cld
dec
or
xlat
push
or
rolb
iret
lds
pop
mov
in
call
shll
enter
in
test
incl
jb
sub
ss
xchg
cld
jbe
ss
add
add
shll
mov
pop
in
push
jae
jl
out
inc
out
out
dec
divb
cmc
fstps
out
inc
fidivrl
inc
push
adc
pop
nop
data16
mov
lods
test
add
gs
push
addr16
inc
out
xchg
xorl
and
mov
adc
inc
aaa
or
ss
add
add
xchg
repz
xchg
and
xchg
movsb
sub
adc
idiv
or
adc
xchg
icebp
enter
mov
and
addr16
mov
jmp
cmp
inc
stc
insb
inc
and
dec
scas
fwait
xor
fsubrp
xchg
and
outsb
in
add
add
insb
inc
lods
mov
jb
out
and
shl
subl
pop
and
in
into
add
xchg
and
pop
repnz
push
dec
stc
jae
and
push
fstps
jo
scas
mov
push
aad
stos
fsubrp
xchg
and
mov
sub
and
daa
dec
add
cmp
push
scas
adc
movl
add
popa
insl
add
insl
scas
jns
and
xchg
mov
fcomi
nop
scas
and
int
rclb
hlt
lock
outsl
and
push
dec
bnd
sub
mov
outsl
cmpsl
scas
jl
fnsave
and
cmp
in
add
mov
mov
push
sbb
out
sbb
fdivl
push
jbe
push
sbb
fnsave
xorb
fists
sbb
inc
xchg
mov
mov
or
xchg
adc
dec
test
jo
sti
and
addb
popf
incb
imul
or
and
rep
icebp
jne
or
lods
sbb
dec
jno
jle
mov
sbb
jno
xchg
push
sbb
rcrl
sti
adc
mov
jno
xchg
leave
insl
bsr
jno
mov
imul
movsb
mov
and
adc
xchg
pop
xchg
dec
fmull
push
repnz
adc
inc
inc
push
push
lock
rcrl
add
add
mov
fistps
mov
gs
cld
sbb
jb
add
add
es
pop
xchg
mov
imul
fidivrs
mov
xor
xchg
and
jnp
jb
je
std
xor
pop
adc
insl
leave
in
mov
jp
stc
push
and
add
lret
push
and
cli
in
xchg
and
les
outsb
in
xchg
cwtl
fsubrp
xchg
and
add
and
lock
in
sbb
pop
shl
xchg
and
dec
in
xchg
ljmp
push
xor
aad
mull
and
add
mov
xchg
mov
and
outsb
add
es
mov
orl
add
cld
in
jmp
jecxz
xchg
xchg
cmp
sub
add
push
and
mov
into
insl
add
lods
push
add
repz
test
dec
add
daa
outsb
add
lahf
repz
mov
scas
call
fnstsw
cwtl
outsl
outsb
dec
out
loope
jg
sti
inc
xchg
push
cmp
in
sbb
divl
push
repnz
movsl
cmc
dec
out
mov
adc
pop
repnz
xchg
repz
add
xchg
dec
or
mov
dec
jne
pop
mov
or
lea
sbb
sub
stc
enter
into
ror
xor
xor
xchg
dec
jno
sub
mov
xchg
lahf
cmc
call
roll
or
mov
push
lret
out
pop
and
mov
add
add
jno
xchg
ret
sub
lea
or
xchg
and
cwtl
xchg
jns
sbb
lcall
pop
xchg
shlb
pop
xchg
sarb
cld
mov
xchg
call
adc
cmp
push
out
scas
fcmovnu
subb
test
mov
dec
imul
add
lods
push
in
scas
jg
push
and
sub
arpl
fistpl
data16
xchg
int
in
xchg
and
je
mov
jno
add
stos
cmp
sbb
mov
shll
and
mull
mov
and
mulb
add
add
cld
insl
lcall
in
xchg
fs
popa
xchg
and
outsb
je
mov
in
xchg
lods
cld
pop
xchg
and
jl
cwtl
daa
imull
and
into
in
xchg
and
insl
add
fdiv
mov
jns
lret
or
or
cmc
xchg
sti
das
test
add
test
outsb
vphadddq
add
add
or
cmc
adc
ret
stc
mov
inc
out
mov
or
cmove
in
scas
and
popa
xor
jno
xchg
int3
xchg
and
jns
cld
inc
outsl
add
push
cltd
fdivrl
stc
insl
add
and
add
sbb
out
xchg
dec
sahf
mov
xchg
dec
outsl
jno
roll
sub
pop
jo
add
add
mov
ret
dec
jno
inc
dec
out
popa
rol
in
outsl
mov
add
push
or
imul
std
loope
xchg
dec
jno
xchg
clc
addr16
loopne
jbe
pop
mov
or
sbb
rcrb
jno
and
jle
aas
xchg
mov
sbb
icebp
jbe
inc
cmp
sbb
addb
add
ret
fs
adc
leave
xchg
xchg
int3
aad
jnp
push
inc
mov
hlt
cld
in
sti
pushl
in
outsl
mov
mov
mov
rolb
paddsb
mov
xchg
mov
inc
sahf
and
inc
in
sub
mov
or
fnstcw
push
stc
xchg
rorb
mov
imul
fcomi
fadds
xchg
mov
push
in
out
cmp
in
insl
jmp
cmp
mov
xchg
cli
clc
inc
push
push
in
push
add
adc
jns
adc
lea
xor
sub
mov
xchg
jp
out
stos
jg
out
insl
push
dec
push
lea
test
xor
mov
shrl
add
lcall
in
xchg
and
repnz
xchg
and
mov
push
and
outsb
in
sbb
imul
xchg
and
outsb
xchg
xor
js
pop
cmc
imul
and
add
mov
xchg
ret
ds
outsb
sub
daa
outsb
xorl
outsb
xchg
add
add
push
daa
in
add
add
xchg
mov
sbb
jl
sti
rcr
popa
inc
ljmp
js
jne
outsb
add
lock
ss
and
jb
and
mov
jb
adc
dec
jp
sbb
shrl
sti
inc
xchg
pusha
gs
jecxz
out
adc
mov
push
dec
hlt
aaa
xchg
cmp
adcl
xor
bound
daa
scas
xchg
sbb
add
add
test
jecxz
mov
pusha
add
and
sub
add
cld
inc
mov
cmpsl
push
inc
pop
arpl
cmpb
push
test
leave
std
add
or
dec
jp
dec
pop
jb
test
cmp
or
dec
jmp
in
mov
sbb
and
mov
add
add
es
xchg
sahf
pop
sub
cmp
add
inc
pushf
cmp
xchg
pop
adc
jb
jno
fadds
sbb
jp
pop
fsts
ret
mov
pushf
repz
xchg
ss
out
sbb
jmp
mov
xchg
and
lcall
and
inc
sub
sahf
inc
sub
cmp
out
add
add
and
or
jno
and
add
push
xchg
add
pop
je
add
pusha
jmp
ja
fcmovu
ja
in
test
xchg
sbb
fstps
cmc
and
jne
cmp
gs
insb
inc
add
or
push
stc
stos
enter
mov
out
dec
movb
roll
add
jge
fldl2e
arpl
add
adc
push
lea
lock
call
outsb
or
in
add
je
push
leave
pushf
movsb
push
jns
pop
pop
xor
push
and
outsb
xor
xchg
xor
insl
add
fptan
sti
inc
mov
repz
mov
and
imul
mov
xchg
testl
add
sub
xchg
push
stc
cld
dec
push
adc
mov
rol
pusha
jmp
cmc
fdivrl
add
rolb
and
jne
adc
ss
mov
mov
or
lret
loope
jo
sbb
and
mov
cmp
outsb
mov
movsl
iret
arpl
cmp
jnp
jo
push
inc
ds
sti
adc
adc
ret
and
shll
in
jp
jno
gs
test
pop
aad
cmc
ret
or
testb
sbb
xchg
cmp
sub
stc
je
inc
ret
sbb
cli
push
or
aam
mov
vmwrite
fisubrs
pop
sbb
jnp
and
sbb
cmpsl
jne
add
sbb
inc
mov
cmpps
insb
and
mov
adc
mov
or
test
dec
sub
sbb
jp
out
rcrl
xor
int3
jne
push
mov
dec
inc
test
movsl
mov
add
sbb
sub
mov
xor
push
outsb
jge
pop
jecxz
adc
outsb
out
add
add
ficoml
daa
icebp
movsb
mov
mov
sti
and
xchg
orb
pop
cwtl
mov
mov
mov
clc
test
mov
push
adc
mov
push
or
mov
mov
fmuls
inc
out
xor
outsb
data16
sub
push
xchg
xchg
sahf
add
shll
add
cwtl
xor
loope
and
adc
lea
cmp
mov
xchg
mov
inc
xchg
popa
cmp
in
fstpt
add
jae
adc
pop
sti
mov
mov
sbb
inc
push
pop
cmp
sti
repz
add
outsb
add
push
push
dec
gs
cli
push
xchg
or
xchg
add
add
mov
cli
inc
xchg
popa
cmp
in
lahf
mov
add
divb
adc
mov
sbb
xchg
insl
push
inc
mov
mov
mov
call
mov
pushf
daa
push
push
daa
dec
cmp
sbb
sbb
dec
insb
inc
sub
pop
jle
push
decl
movsb
daa
add
mov
add
ficompl
dec
ret
xor
outsb
cld
push
call
xor
xlat
and
xchg
push
and
aad
daa
jbe
xchg
or
push
mov
out
mov
adc
sti
sbb
and
xchg
pop
xchg
cmpsb
repz
je
mov
xchg
pop
xchg
cmpsb
sti
sbb
pushf
ljmp
sahf
mov
sarb
xor
xchg
jmp
add
add
mov
shlb
sbb
mov
sar
cltd
repz
mov
cmpsl
inc
loopne
jmp
rcrl
mov
add
outsl
flds
stos
sbb
ds
sti
add
inc
outsb
in
movl
clc
xchg
and
ficomps
mov
add
popf
add
add
pop
outsb
in
mov
testb
adc
clc
shll
in
adc
outsl
cmp
lcall
xchg
shrl
fsubl
outsb
loop
xchg
xchg
mov
push
and
sbb
jae
lcall
test
add
data16
sahf
sub
cmpb
pop
movsl
xorb
add
lcall
cmp
push
test
xchg
inc
push
and
xchg
fwait
cmpsb
in
jl
sti
insb
lret
mov
adc
jnp
bound
mov
pop
dec
push
jg
cmc
push
fwait
xor
xchg
or
iret
mov
sbb
add
push
adc
hlt
xchg
pop
sahf
and
mov
gs
and
sahf
and
add
add
sahf
mov
add
shl
repnz
imul
add
insb
hlt
inc
jp
mov
sti
adc
clc
outsl
mov
movsl
daa
mov
lds
daa
sahf
xor
lcall
sbb
ss
adcl
jecxz
fdivl
sbb
pop
xchg
sti
mov
fs
fs
cmp
pop
add
add
jecxz
loope
jnp
subb
push
and
push
rorl
or
mov
add
and
xchg
pop
xchg
lcall
rorl
mov
stc
std
mov
data16
cmpps
xor
xchg
lcall
xchg
and
sbb
cmpl
jle
add
add
inc
rcll
fs
loopne
pop
icebp
addr16
xor
adc
pop
fildll
fists
jmp
rorb
repz
repnz
cld
ja
data16
mov
cmp
mov
and
inc
repnz
pop
sbb
test
aad
dec
sub
xchg
or
outsb
outsb
into
sbb
sub
test
jnp
add
add
pusha
push
pusha
xlat
push
xchg
mov
imul
jo
push
loopne
and
sub
and
push
fwait
cmp
inc
clc
and
rcrb
ss
adc
in
movsl
and
test
imul
and
into
fdivs
pop
jmp
xor
pop
or
inc
jns
add
add
pop
idivl
jecxz
mov
xorb
and
repz
push
testl
pop
xor
insb
fwait
orl
pop
mov
xor
cs
outsb
jno
jg
jno
icebp
loope
push
inc
out
inc
pop
mov
aaa
call
pop
je
jne
add
outsb
add
outsb
push
or
cmp
sub
cmp
dec
jno
add
add
xor
xchg
and
cmc
or
push
jecxz
xchg
leave
dec
jo
mov
push
cmp
jp
inc
jno
pop
xchg
sub
jo
jno
or
sbb
inc
jno
lcall
call
mov
jle
mov
icebp
insl
dec
add
movl
adcl
mov
inc
add
push
mov
xor
add
jns
lret
repz
sbb
push
mov
jns
inc
test
sbb
ret
push
cmp
lock
aad
cltd
scas
popf
fisttpll
js
inc
mov
push
mov
xor
loope
lcall
scas
call
sub
je
in
mov
xor
cmp
fs
add
add
adc
notrack
adc
jb
fisttpll
and
stos
push
add
scas
lea
sub
adc
dec
push
sub
push
std
in
sub
xor
inc
push
dec
add
mov
cmp
mov
sbb
aad
incb
add
mov
mov
mov
cs
jl
sub
mov
shlb
add
push
int
xor
push
rorl
xor
xor
jmp
sti
sub
push
lret
push
add
ja
push
test
adcb
repnz
or
mov
or
aas
lods
mov
mov
add
push
mov
js
les
or
jl
sti
fildl
push
push
sarb
push
sub
sbb
movsl
adcl
mov
mov
nop
iret
hlt
cld
push
add
daa
cmp
loopne
hlt
hlt
mov
jne
leave
inc
loope
xchg
mov
mov
xchg
sbb
sbb
sbb
fisttps
or
add
leave
hlt
lock
mov
add
push
aad
aam
gs
hlt
les
lret
sbb
mov
inc
xchg
shll
jo
xchg
mov
add
xchg
pop
mov
or
ljmp
pop
cmp
sbb
lods
dec
aas
les
add
pop
and
inc
jge
aam
ret
dec
imul
stos
pop
je
dec
jecxz
jge
adc
aaa
imul
ds
xchg
in
adcb
rorb
jl
inc
adc
cltd
int
xchg
and
xchg
pop
test
mov
xor
cltd
aam
aaa
cmp
pop
xchg
stos
ljmp
add
xchg
fdivrp
cmp
mov
pop
xchg
loop,pt
fstl
xchg
adc
or
or
inc
lods
cmp
lcall
in
xchg
and
xchg
fstpt
lea
or
sbb
adc
push
cmp
push
rcll
jge
xchg
outsb
in
into
rcll
sti
inc
outsb
in
xchg
dec
clc
xchg
lods
inc
stc
sbb
cs
add
add
in
mov
lahf
rcll
inc
dec
outsb
in
xchg
scas
xor
cmpsb
dec
sbb
inc
sti
test
jl
stc
add
sub
add
sub
push
cmpsb
iret
mov
insb
rcrb
add
mov
jns
cmc
sub
repnz
outsb
add
mov
and
outsb
add
and
inc
add
add
fisubl
mov
loopne
stc
enter
test
push
sbb
mov
enter
sub
inc
mov
bnd
and
and
xchg
cmpsb
scas
jo
mov
scas
jo
push
or
mov
or
sbb
mov
sbb
mov
mov
pop
insl
jno
or
add
or
inc
sub
jl
sbb
jbe
adc
pop
inc
or
gs
ljmp
dec
push
pop
pop
or
dec
mov
jecxz
repz
jp
sbb
mov
and
cmp
imulb
xchg
enter
ds
mov
ret
sbb
and
add
js
je
and
jecxz
xchg
and
stos
insb
popf
mov
xchg
pop
xchg
aam
jae
add
adc
jp
leave
dec
shl
cmp
inc
popf
mov
sbb
mov
xchg
cmpb
mov
jb
add
xchg
and
sbb
shlb
xor
add
add
mov
in
xchg
aad
pop
sub
sbb
push
test
shl
je
aas
ds
test
sarb
pop
jmp
push
mov
pop
xchg
push
cmp
lcall
aad
cmp
ret
xchg
and
cmp
xor
in
adc
jp
inc
add
jbe
xchg
and
add
icebp
cmpl
aad
cmp
cmp
mov
in
imul
shlb
out
mov
push
push
std
and
push
sub
bound
mov
sti
outsb
add
jb
std
xor
insb
hlt
loope
in
shll
outsb
push
leave
jg
add
out
mov
add
outsl
mov
lea
pop
int
sti
pop
in
cli
and
mov
push
adc
cli
dec
enter
mov
repnz
push
adc
or
jmp
xchg
dec
out
les
cmpsl
pop
and
in
jb
push
adc
inc
jnp
adc
cmp
sti
adc
xchg
sub
gs
loopne
test
add
scas
push
xchg
daa
gs
mov
cmp
mov
sti
sbb
sub
push
pop
cld
les
lea
mov
lods
pop
call
pop
hlt
inc
or
mov
lods
pop
cmp
mov
adc
push
mov
mov
jge
test
pop
adc
cmp
scas
in
ljmp
subps
dec
lret
stc
add
add
ss
enter
pop
xchg
repz
pop
sub
loope
sarb
adc
xor
or
ljmp
out
in
popa
jge
push
mov
iret
ret
or
gs
call
das
bound
inc
cmp
cmp
push
imul
mov
add
mov
cmp
ljmp
cs
andb
andb
sub
lods
xor
lds
lea
cmp
push
cli
mov
scas
jo
sahf
xor
pop
nop
into
out
cmp
shlb
sbb
pop
daa
xchg
call
sub
arpl
arpl
insl
imul
add
xchg
and
adc
sbb
sti
inc
mov
jp
inc
mov
pop
mov
adc
aad
mov
pop
cmp
add
shl
sti
inc
and
outsb
add
popf
nop
add
sub
dec
jnp
mov
inc
fsubrs
mov
fdivrl
jp
outsb
add
pop
test
mov
incb
cli
mov
add
jg
scas
or
scas
insl
add
mov
js
sti
sub
hlt
popa
jge
loop
mov
clc
mov
adc
sbb
sub
cmp
add
push
sbb
cmp
lret
cmpsb
push
decl
out
mov
ds
les
cmc
ud0
ret
jno,pt
outsb
push
add
add
lret
and
sub
adc
cmc
les
fs
sti
sbb
or
mov
scas
adc
xchg
shll
movsl
mov
std
jns
sti
dec
xchg
ud0
push
pop
sbb
lret
dec
in
lahf
rolb
sbb
cmp
or
sub
cmpsl
lock
xor
xorl
cmp
add
add
xchg
jmp
xchg
and
fwait
lock
repz
data16
out
inc
and
sub
mov
sub
iret
cmp
adc
adc
add
cwtl
lcall
xor
gs
and
stos
test
jl
lcall
xor
scas
adc
div
add
add
cmp
xchg
loop
adc
mov
in
jge
mov
xchg
stos
inc
sbb
insl
xlat
jmp
gs
movsl
sub
sbb
out
xchg
and
movsb
push
mov
xor
rolb
mov
pushf
cmp
jp
xor
jb
shr
lock
add
xchg
push
or
add
js
outsb
in
sbb
outsb
add
jmp
scas
jno
adc
bound
and
jne
aas
and
jge
das
xchg
cli
and
and
addr16
add
popf
scas
jl
outsb
cli
dec
mov
push
mov
cld
jae
shrb
pop
xor
mov
je
jp
dec
aaa
xchg
dec
sti
xor
inc
add
add
xor
mov
and
outsb
in
xchg
or
add
leave
xor
and
jmp
pusha
lock
pop
cmp
or
push
cld
xchg
jno,pt
dec
xor
or
lock
scas
scas
sti
xchg
scas
gs
sti
jno
mov
movsl
std
push
ds
or
bound
outsb
sub
dec
dec
mov
stc
lods
mov
jmp
add
mov
add
out
in
xchg
sar
into
cmp
scas
add
add
mov
jno
mov
leave
xor
dec
mov
or
fldenv
xchg
pop
out
addr16
inc
test
jge
aad
inc
or
sbbl
sub
lldt
and
add
pop
add
add
mov
xchg
pop
sbb
xchg
outsl
imul
sbb
jb
test
push
loop
stos
mov
mov
or
out
xchg
and
pop
cmc
imul
repnz
mov
outsb
in
inc
sub
xchg
and
mov
xchg
and
add
and
outsb
in
xchg
cmp
sti
popa
jno
jo
xchg
aad
popa
jno
je
xchg
aad
popa
mov
jo
xchg
aad
popa
mov
je
xchg
aad
popa
mov
outsb
in
xchg
aad
popa
mov
jns
xchg
mov
push
add
push
imul
cmp
outsb
in
or
add
add
add
mov
ja
dec
add
shrb
sahf
repnz
outsb
add
sub
mov
daa
pop
out
and
add
in
or
outsb
mov
je
sahf
js
hlt
sub
mov
jbe
jne
scas
push
jo
mov
sub
mov
into
mov
push
sbb
xor
cmp
mov
add
add
aas
shrl
data16
add
jp
ud2
jmp
mov
cltd
sti
mov
xor
dec
cwtl
jno
sbb
push
sbb
and
es
jns
jo
sbb
inc
sbb
push
scas
test
jno,pt
xor
dec
sbb
or
stos
fiaddl
xchg
shll
mov
and
jne
cld
daa
adc
mov
xchg
pop
push
cmp
cltd
xchg
and
xchg
mov
and
xchg
pop
xlat
fbld
pop
sbb
mov
xchg
pushf
pop
or
dec
bound
xchg
and
out
int3
sbb
or
dec
bound
add
add
cltd
cmpsl
pop
sub
sub
sbbl
mov
mov
mov
popa
cmp
out
outsb
xchg
and
pop
sub
mov
xchg
in
nop
pop
mov
add
in
shll
icebp
sbbl
sti
fwait
test
mov
xchg
mov
mov
dec
add
add
imul
mov
jo
xchg
cli
lods
ds
clc
xchg
adc
imull
lcall
test
shr
and
stos
in
xchg
mov
popa
add
arpl
jo
adc
out
xor
cvtpi2ps
pop
jns
xchg
or
in
fimuls
lea
add
repz
mov
in
sbb
add
loopne
mov
das
and
sti
loope
or
pop
in
lea
cwtl
add
and
sub
lcall
int
jbe
call
adc
outsb
add
jae
pop
pop
jnp
repnz
pushf
xchg
sbb
popf
stc
mov
xchg
sti
stc
adc
incl
add
fnstcw
jno
xchg
mov
daa
sahf
add
jmp
sbb
add
sub
stos
lods
and
testb
out
testb
shl
scas
and
sbb
jle
inc
or
dec
adc
repnz
adc
jge
incb
xor
mov
jb
push
or
sbb
add
add
lds
sbb
adc
xchg
mov
or
mov
stc
adc
xchg
mov
xor
loopne
notl
pushf
push
outsl
je
jl
out
ss
pop
xchg
lcall
faddl
pop
in
lcall
cmp
xchg
stos
sbb
sbb
mov
test
aaa
sub
lea
add
pop
movsl
sarb
add
xor
sbb
mov
divl
cld
insl
xor
xchg
mov
sti
test
or
lea
add
mov
lret
daa
lea
cmp
scas
ljmp
cmp
movsl
ds
inc
dec
sub
sub
xchg
and
xchg
fadds
add
sbb
sbb
mov
add
jmp
mov
popa
or
mov
rclb
or
sahf
mov
add
and
hlt
push
or
jmp
outsb
mov
pop
in
mov
lret
ret
sub
hlt
lret
adc
xor
sti
js
mov
push
add
add
pop
cli
dec
shll
mov
outsl
fldenv
outsb
xsaveopt
sti
repz
adc
fsubrl
sbbl
dec
pop
outsb
sahf
xorl
in
ficomps
add
enter
adc
jno
fsubs
testb
add
or
dec
dec
movl
xchg
push
bnd
push
jno
xchg
fisttps
shlb
mov
daa
addb
jb
push
jno
imul
sub
or
xchg
daa
movlps
add
mov
daa
lcall
mov
jecxz
les
push
out
dec
jp
jae
push
fucomp
push
pop
imul
adc
bound
sbb
repz
and
pop
jo
out
and
dec
dec
outsl
jp
or
jmp
test
add
jne
das
outsl
add
xor
pop
xchg
and
jno
and
xchg
scas
push
pop
xchg
sbbl
pop
clc
sub
int3
mov
inc
fadds
add
popa
and
inc
ds
insl
cmp
push
repnz
xchg
test
icebp
sbb
and
icebp
cwtl
pop
data16
add
cmp
mov
push
out
imul
add
and
les
xchg
sarb
repnz
xchg
and
outsb
cltd
les
add
in
sbb
or
repnz
add
add
inc
inc
push
ljmp
or
sbb
adc
mov
add
sub
addr16
mov
and
daa
outsb
add
repz
pop
cmp
in
add
ljmp
inc
push
jmp
xor
add
in
aaa
jno
sti
je
xchg
mov
add
add
and
hlt
or
mov
mov
mov
mov
movb
cltd
dec
loop
les
fdiv
jns
ljmp
xchg
cmpps
cmp
cmpsb
xchg
xor
xchg
scas
mov
testb
jg,pt
ss
xchg
scas
add
sti
and
sbbl
add
cmpsl
punpckhbw
cmp
jno
jg
shld
imul
stc
jbe,pt
stc
rcrl
fcompl
push
jno
pop
xchg
xor
dec
mov
inc
orl
mov
lock
lcall
incb
add
push
jle
scas
ljmp
das
xchg
and
imul
dec
pop
push
rorl
lret
pop
add
add
addr16
ret
and
les
and
mov
pop
sbb
xor
lcall
in
stos
sar
cltd
xchg
and
sbb
pinsrw
clc
rcrl
add
out
push
mov
cmpsb
je
mov
adc
test
adc
cld
outsb
lret
loope
xchg
adcl
dec
add
outsb
push
add
add
test
dec
daa
stc
mov
and
lds
lret
xorb
push
sub
fisubrs
movsb
aam
outsb
cmp
and
mov
sbb
sbb
push
jae
and
jle
scas
sbb
out
outsb
mov
sbb
xchg
xchg
sub
push
mov
jne
aad
mov
in
inc
test
ss
sbb
and
add
test
test
cltd
nop
mov
adc
cmpsl
dec
roll
lods
jo
sar
xchg
xchg
sti
in
xchg
bound
mov
mov
push
sti
or
sti
or
mov
outsl
mov
movsl
dec
xchg
lods
shlb
pop
imul
outsb
add
push
push
je
xchg
jecxz
jo
aaa
lods
cld
mov
add
or
dec
ret
and
adc
fs
push
sub
sbb
and
xor
in
cmovg
std
push
or
sub
mov
or
out
push
out
xor
xchg
push
jno
mov
shll
jecxz
orl
jno
and
jecxz
or
pop
dec
and
lret
add
add
push
jno
push
xor
scas
cmp
add
cmp
push
push
hlt
shlb
ret
dec
sub
insb
cmp
rcr
shlb
je
xchg
dec
lds
mov
jo
and
pop
dec
mov
mov
cltd
scas
jge,pt
pusha
add
sub
add
xchg
adcb
xchg
cmpsb
popl
xchg
lds
lcall
mov
lret
lret
jne
adc
xor
imul
xchg
iret
shlb
hlt
aad
push
add
in
inc
sbb
or
cltd
inc
add
scas
push
add
out
mov
inc
stc
daa
sbb
fnstsw
lods
push
je
lret
jne
outsb
dec
and
test
outsb
jbe
cmpsb
mov
fwait
and
outsb
dec
add
add
es
sub
in
xchg
mov
add
bound
add
push
lea
iret
xor
push
sbb
lods
pop
lock
sub
push
scas
xor
jl
xchg
sub
mov
out
jl
in
push
addr16
cmpl
mov
lods
xchg
xchg
movsl
xchg
loop
push
sub
push
movsl
mov
out
outsl
mov
pop
movsl
mov
fisubrs
out
mov
add
add
mov
popa
and
shlb
test
or
xchg
add
shll
mulb
adc
data16
cld
xchg
das
adc
cs
inc
cmp
inc
jb
test
dec
or
push
lock
push
outsl
and
xor
aam
push
and
cltd
adc
add
repz
sbb
aam
std
fs
repz
xchg
stc
mov
lret
into
bound
movsb
int3
jo
and
jo
sbb
jb
iret
mov
sub
les
sbb
or
push
loopne
fwait
out
mov
jo
push
adc
mov
aad
lds
out
rol
or
sub
add
cmp
dec
xor
push
or
push
or
adc
push
adc
sahf
pop
lds
sti
add
push
inc
das
xor
loope
push
cld
adc
ret
mov
addr16
dec
sbb
adc
pusha
adc
jne
adc
and
insb
aad
je
xor
bnd
sub
pop
add
add
pop
add
lods
fwait
jl
dec
inc
jge
lea
cmp
mov
cmp
push
xlat
mov
xchg
and
adc
sbb
jle
mov
cli
in
xchg
and
sub
movsb
jg
data16
jp
mov
xchg
and
in
xchg
and
add
cmp
mov
xchg
popa
mov
xor
test
push
flds
xor
pop
sti
jmp
shl
add
sbb
push
mov
inc
test
inc
and
imul
inc
pop
sbb
test
jbe
add
dec
popa
pop
lea
jo
add
call
ja
add
push
push
andb
add
add
loop
xchg
fwait
jb
clc
shlb
push
enter
adc
xor
repz
cli
pop
mov
and
repnz
add
out
cmp
jo
dec
loopne
or
bound
ret
inc
movsb
dec
or
xchg
jae
ror
rolb
mov
dec
and
adc
jnp
dec
or
add
jns
js
xchg
int3
jne
addl
dec
jg
aad
loope
addl
repnz
mov
adc
test
lcall
push
imul
push
pop
mov
cmp
jp
adc
add
mov
ja
jge
int
pushl
mov
xlat
dec
ja
jge
lods
pop
pushl
add
add
jns
pushf
inc
test
sub
xchg
jl
xchg
jg
cli
cmp
fadds
adc
popa
or
daa
lock
call
jp
mov
pop
add
mov
push
dec
xchg
fwait
movsl
outsb
hlt
inc
sub
cli
lock
dec
mov
inc
insb
mov
outsl
xchg
sbb
pop
xchg
and
add
lea
pop
adc
add
sbb
pop
adc
add
sbb
adc
test
add
sub
mov
xchg
mov
and
insl
movsb
loope
xchg
jl
adc
dec
and
sub
idivl
scas
xchg
and
xchg
sahf
fcoml
lea
adc
mov
loope
mov
and
add
add
inc
push
andl
outsb
movl
jb
xchg
jns
stc
sub
pop
mov
push
pop
adc
into
cltd
jne
aad
dec
scas
and
stc
aad
std
sahf
rorb
add
adc
cltd
add
movsb
sbb
adc
es
add
negb
js
cmp
sub
add
outsb
in
jnp
mov
jnp
add
inc
add
inc
jp
jb
mov
add
testl
lods
mov
outsb
xchg
mov
mov
nop
mov
adc
adc
pushf
or
mov
mov
shl
and
imul
xchg
daa
mov
hlt
inc
inc
add
add
out
push
or
push
test
sbb
add
sub
out
unpckhps
jo
xchg
xchg
mov
arpl
mov
cmp
xchg
cld
jo
xchg
ret
mov
and
mov
cltd
jg
add
cld
cli
pop
or
les
push
xor
jo
subl
rcll
add
add
addb
dec
es
pop
ret
decl
mov
mov
aam
mov
pusha
pop
pop
clc
mov
daa
arpl
cmc
dec
loop
xchg
pusha
add
sub
in
mov
int3
rcll
adc
push
sbb
sbb
js
aad
jno
and
cmc
cmovnp
add
scas
mov
ret
pushf
inc
rorb
mov
repz
mov
outsb
repnz
and
sub
cmp
mov
dec
adc
out
sbb
sub
aaa
ja
scas
lea
and
jmp
test
leave
add
mov
inc
inc
pop
sbb
adcl
add
add
push
stc
cmpsb
and
push
cmc
andb
outsb
in
nop
aam
ret
pushf
into
add
cmp
lahf
nop
orl
xor
xor
add
sub
add
mov
cmpsb
aas
push
or
or
sub
jae
cmpsb
test
jecxz
or
nop
aas
and
jmp
std
push
aas
add
add
aad
outsb
lret
lock
cmp
mov
pop
int
or
int3
mov
xchg
or
jo
sbb
lahf
mov
outsl
jo
movsl
scas
push
xchg
push
sbb
and
push
and
push
sub
pop
cld
inc
mov
or
in
xchg
cld
jo
insl
xor
inc
xchg
cld
hlt
ror
sub
leave
add
add
lds
mov
xlat
mov
mov
orb
pop
dec
xchg
pop
mov
push
cli
mov
dec
test
mov
dec
sbbl
subb
sbb
jb
xchg
mov
int
adc
dec
jp
fcomps
dec
bnd
and
scas
pop
scas
push
dec
call
xor
add
stos
rolb
xchg
test
cmp
add
imul
fsub
sahf
inc
sahf
and
inc
sbb
dec
repz
pop
rorb
lret
mov
sbb
je
and
adc
in
in
and
shlb
xchg
xchg
movsl
push
or
sub
xchg
and
add
xchg
stos
adc
test
adcl
sub
insl
inc
xchg
out
add
adc
test
outsb
data16
lcall
push
xor
cmc
xchg
and
outsb
in
shl
add
mov
push
hlt
add
jmp
es
and
add
ficoms
je
adc
data16
xor
pusha
xchg
cwtl
xchg
stos
add
add
movsl
or
mov
add
and
je
xchg
stc
mov
mov
dec
add
jmp
or
fwait
mov
and
and
xor
pusha
in
hlt
jecxz
sti
dec
addr16
out
or
repz
in
repz
ficompl
or
aaa
out
cmp
sbbl
xchg
cmp
add
mov
cmp
pop
add
or
push
cli
add
jo
aas
mov
das
xchg
and
call
test
mov
int
mov
xchg
pop
and
movl
cmpsb
daa
mov
or
or
icebp
int3
xorl
daa
mov
adc
mov
push
add
add
dec
adc
cld
icebp
shlb
mov
inc
movsl
cmp
sub
stc
dec
push
push
jns
sbb
sub
push
cld
pop
push
mov
push
xor
cmp
daa
xchg
cmp
mov
and
xchg
aad
das
pop
or
sbb
lcall
aam
add
inc
or
inc
rolb
pop
add
insb
stos
mov
or
and
mov
in
fadd
in
mov
sbb
push
sub
lfs
sbb
adc
lahf
sbb
int
arpl
or
loopne
sbb
mov
push
add
loopne
dec
sub
lret
mov
inc
pushf
insl
icebp
add
add
xor
mov
ljmp
pop
std
ja
popa
or
and
andb
mov
mov
outsb
in
jb
sti
stc
or
adc
inc
outsb
sub
jo
nop
sbb
push
outsb
testb
xor
bound
imul
lea
mov
cmp
add
add
add
into
pop
stc
sub
imul
and
outsb
jmp
mov
xor
or
push
xor
and
loop
and
jb
jl
jg
jge
mov
fpatan
rol
cmp
mov
push
pop
testl
das
lcall
add
add
pop
dec
push
outsl
and
inc
aaa
xchg
outsl
out
cmp
arpl
lods
cmp
repz
mov
mov
outsb
iret
lahf
xor
xchg
adc
adc
in
pusha
mov
push
sub
jnp
or
out
adcb
mov
sbb
xchg
mov
jle
scas
daa
mov
aaa
out
les
or
xor
add
fmuls
rcrb
scas
jl
call
cmc
outsl
add
xchg
scas
daa
xchg
sub
inc
sahf
lods
outsl
in
mov
out
jge
xlat
test
pop
or
testl
incl
mov
lea
sbb
cs
and
pop
mov
add
call
pop
inc
mov
add
fwait
cmp
jno
push
and
mov
adc
mov
mov
out
lea
push
repz
and
out
ret
push
xlat
dec
sbb
jno
dec
mov
adc
pop
sub
and
add
out
inc
aam
insb
outsb
rcll
add
into
adc
add
test
fstl
stc
sub
xor
or
or
sub
xchg
add
ljmp
sbb
xchg
test
lds
stc
mov
xchg
xor
pop
movsb
add
shrl
and
test
stos
push
movsb
push
divb
jmp
add
add
mov
pop
adc
fwait
scas
mov
xlat
es
push
lods
mov
cmp
xor
aad
ja
sbb
mov
je
jns
xchg
mov
lahf
cmpsb
xor
mov
and
scas
sub
and
aad
and
mov
out
bound
inc
pop
or
inc
pop
in
mov
add
and
gs
sti
or
addr16
push
xor
testw
or
hlt
mov
cwtl
fadd
int
sbb
or
or
pop
rcll
stc
or
push
dec
ja
sub
or
dec
lcall
enter
jecxz
mov
mov
in
pop
pushl
pop
aas
ja
popa
cmc
fs
imul
add
add
xchg
cmc
lods
mov
aas
insb
out
jno
out
pop
int
or
rolb
cmp
or
xchg
incb
ds
ds
sbb
inc
and
into
cmp
rcrl
lods
xchg
adcb
icebp
push
or
pop
xchg
and
xlat
lods
mov
xor
out
mov
mov
scas
pushf
cltd
add
add
and
xchg
sarb
in
xchg
pop
xchg
or
adc
pusha
add
popf
push
scas
aas
xchg
and
push
xor
out
int3
adc
icebp
add
imul
lea
xchg
and
outsb
repnz
add
cmp
pusha
sub
pop
stos
aad
sar
push
sub
insl
in
add
add
cld
icebp
lods
cs
and
sub
clc
mov
dec
sub
data16
inc
and
out
mov
in
scas
fsts
cmpsl
or
shlb
and
add
sub
cs
repnz
dec
in
xchg
test
add
mov
sub
add
daa
cmc
lret
add
out
repz
jb
pop
mov
subl
cld
jl
inc
push
mov
repnz
lea
subl
and
ret
cli
inc
mov
push
filds
cmc
inc
mov
adc
cmp
and
add
sarb
js
hlt
add
and
cwtl
sbb
bound
add
mov
dec
add
orl
jo
adc
cmpsl
or
in
js
mov
int
rclb
sahf
jp
std
mov
in
adc
jno
or
loopne
xchg
or
popw
dec
xchg
and
lock
shlb
mov
addl
dec
xchg
and
add
test
fs
daa
xchg
or
shl
jns
daa
mov
clc
push
andl
push
stos
and
fwait
jl
or
ljmp
adc
fwait
and
subl
imul
adc
popa
jnp
shll
add
or
xchg
jns
jbe
xchg
mov
in
andl
add
add
and
cmpsl
pop
pop
and
pop
inc
xor
jns
cmpsl
lahf
mov
xchg
xchg
sbb
lret
and
lcall
adc
mov
xchg
adc
xchg
and
int
cltd
jae
add
std
xchg
mov
and
test
or
sbb
dec
insb
and
add
add
add
xchg
xchg
jno
push
lcall
sarb
imul
xchg
pusha
sub
loope
xchg
and
and
leave
shll
imul
pop
out
lret
lds
adc
mov
repz
in
repz
xlat
loop
sti
sarb
mov
ss
sbb
outsb
ja
xchg
add
add
xor
push
jbe
out
daa
repz
xchg
sub
out
sub
mov
icebp
pop
xchg
aas
jmp
cmc
lret
inc
add
sbb
sahf
xor
les
dec
arpl
int
mov
scas
out
es
in
aad
cmc
xchg
push
and
stos
mov
lods
jo
add
jo
add
popf
lcall
les
sbb
adc
lret
mov
shlb
or
bound
mov
fsubs
nop
push
add
sarb
jp
icebp
xor
daa
cmpsb
in
adc
pcmpgtd
jb
push
call
pusha
adc
jmp
imul
mov
je
add
add
sarl
or
les
fwait
push
inc
and
xorl
and
xchg
lahf
jns
cmpsb
pop
insl
adc
push
and
sub
sbb
inc
js
push
cmp
xor
outsb
xchg
jno
push
ds
dec
sub
and
cwtl
xbegin
cli
mov
jo
roll
add
bound
cmpsb
jmp
adc
add
lods
xchg
xchg
push
cld
ljmp
aas
adc
outsb
xor
sub
mov
pop
stc
mov
dec
sub
in
jb
add
push
stc
and
dec
scas
ret
outsb
insb
addl
mov
dec
shlb
cli
mov
lods
add
add
adc
in
jmp
xor
ret
cs
and
sti
push
notb
cmc
idiv
xchg
inc
sar
pop
dec
inc
mov
lea
add
inc
or
jl
sahf
pusha
mov
fdivrs
ljmp
aas
and
les
add
cmp
push
cmp
imul
int
jns
inc
dec
jge
and
aam
lock
mov
das
and
cmp
and
cmpl
add
cld
arpl
lea
addb
ljmp
xchg
out
and
sbb
dec
lret
jo
pop
or
add
ja
dec
test
mov
loop
add
add
xchg
push
mov
inc
xchg
cmpl
xor
push
lcall
dec
fstpl
mov
add
or
das
sub
push
andl
dec
add
or
decb
idivl
cmp
add
add
cmp
add
cmp
add
mov
push
and
mov
push
mov
loope
dec
and
add
mov
test
pop
dec
rcll
int
xchg
and
push
pusha
xchg
add
xchg
pop
out
int
ret
sarl
xorl
lahf
jle
arpl
andb
push
jle
xor
out
out
and
arpl
pushf
std
cmc
mov
push
loopne
xchg
mov
xlat
into
fdivs
xlat
movl
add
outsb
loop
jge
mov
xchg
aam
xor
aam
nop
insl
std
mov
mov
push
mov
jp
and
iret
insl
in
xchg
or
cmc
sbb
outsb
in
xchg
movsl
cli
pusha
movsl
cli
mov
test
test
clc
or
add
xchg
lock
outsb
pop
and
sbb
mov
add
add
cld
mov
lea
add
mov
lock
lock
mov
clc
test
cmc
xor
add
insl
add
jne
xchg
sub
mov
mov
push
mov
call
mov
stc
inc
fwait
icebp
cmp
out
rcrl
add
add
sub
sub
sub
push
or
bnd
add
outsb
inc
mov
sub
cltd
adcl
movsb
cmp
xchg
mov
xchg
xchg
rorb
mov
mov
outsl
fldl
push
fldt
xchg
or
mov
add
je
mov
jbe
filds
fcmovb
mov
pushf
dec
cltd
adc
mov
push
jb
cwtl
xchg
daa
sahf
push
jae
push
std
jo
in
inc
cld
into
outsb
push
push
mov
jo
xchg
daa
mov
dec
movsb
mov
adc
cld
sti
sub
jge
dec
leave
and
xchg
mov
popf
pop
xor
add
pop
popa
add
and
mov
xchg
and
std
lcall
mov
mov
out
xorl
addr16
cltd
repnz
popa
xchg
pop
xchg
mov
xchg
and
xor
pop
xchg
adcb
pop
lock
pop
xchg
mov
ds
icebp
inc
sbb
fwait
addl
add
and
xchg
out
add
mov
lcall
mov
jo
orps
sub
xchg
div
sbb
push
lds
into
jb
cmc
lcall
je
fstl
fbld
add
xchg
jno
sbb
scas
jbe
sub
test
test
std
or
mov
aam
xor
add
add
negb
pop
fprem
lahf
cltd
lock
sbb
add
inc
add
movsb
out
out
clc
mov
mov
sti
adc
inc
jmp
mov
cwtl
xchg
outsl
into
add
and
adc
aaa
or
and
xor
andb
outsb
add
jb
add
and
push
jl
mov
clc
inc
cmp
jg
repnz
movsb
add
and
neg
test
xchg
out
or
jbe
add
pop
rol
fs
pop
add
jg
xor
add
mov
stc
pop
ss
xor
je
aad
jo
or
jnp
aam
mov
or
jo
bound
lds
or
int
add
dec
shl
lret
lds
or
int3
jbe
cwtl
add
dec
add
mov
mov
cli
cmc
int
add
int3
mov
addl
sti
adc
mov
rcrl
push
es
mov
jns
mov
in
lea
push
mov
sbb
pop
xchg
lcall
pop
out
xchg
sbb
add
je
push
add
popf
pop
lea
xchg
lcall
or
xchg
mov
sub
push
push
hlt
test
jecxz
mov
xlat
shl
jns
js
mov
popf
lcall
adc
mov
dec
js
xchg
lea
std
scas
lret
xchg
and
outsb
sahf
and
and
push
jno
movsl
add
add
dec
push
insb
pushf
cmp
sub
sub
sub
outsb
repnz
xor
xchg
in
and
inc
stc
sub
out
lods
jbe
pushf
xor
repnz
aad
mov
jge
or
cmc
cmp
out
lods
je
inc
bound
popf
xor
cmpsb
sbb
lods
jle
add
cvtps2pd
add
add
repz
push
sbb
add
loop
or
bound
jo
scas
das
scas
xchg
xchg
repz
repz
aaa
cltd
mov
int3
inc
mov
mov
inc
pop
out
inc
mov
add
xor
xchg
pushf
and
andl
add
jmp
pop
adc
add
inc
lret
and
adc
cmp
and
add
aam
jl
mov
jmp
xor
pop
sbb
add
jb
insb
pop
pop
les
dec
std
jge
movsb
mov
adc
lret
pop
mov
jno
adc
xor
and
pop
or
sbb
je
out
cmp
out
ds
sti
add
add
lds
ja
push
or
out
lock
in
int
xor
xchg
repz
xchg
lret
or
nop
ja
stos
cmp
cmp
popa
xchg
rorl
xor
stos
mov
sbb
popa
sahf
rcr
jge
in
mov
sbb
mov
fcmovu
mov
fwait
mov
add
and
pop
loop
and
daa
cwtl
inc
push
lods
mov
inc
sbb
inc
adc
mov
mov
pop
loopne
mov
mov
fcomi
jle
arpl
adc
jmp
mov
inc
pop
cmp
dec
outsb
scas
xchg
and
cmpsb
mov
xchg
cli
clc
inc
and
repz
daa
inc
sub
add
add
mov
and
xor
inc
jp
xchg
sbb
sbb
sub
inc
data16
xlat
xor
outsb
in
inc
popf
xor
out
cwtl
dec
hlt
mov
jno
push
mov
stc
in
ljmp
movsl
lea
outsb
push
in
sahf
test
jmp
push
pop
es
push
and
add
xchg
jecxz
mov
out
pop
mov
outsb
pop
js
mov
or
jl
jnp
mov
jae
fs
or
or
jo
lcall
ds
push
add
sbb
in
int3
icebp
repnz
sub
stos
lret
int3
out
sbb
mov
mov
add
push
and
add
mov
or
into
repz
mov
jns
or
mov
shll
jb
stos
or
in
xchg
frstor
sbb
jo
sti
jno
sar
push
xorl
inc
in
cmpsb
int3
jo
sbb
inc
fiadds
jo,pn
add
cmp
add
mov
jne
stos
xor
add
sbb
cld
sbb
sbb
dec
and
jo
es
add
test
cmp
fildll
and
stos
pop
sbb
call
roll
inc
jno
popa
jb
int3
mov
jmp
adc
insl
jno
das
cmp
xor
adc
ret
in
int
jge
add
add
add
out
jecxz
popa
xchg
adc
mov
add
sbb
orl
mov
adc
lcall
xchg
dec
adc
push
cmpsl
test
out
or
test
cmpsb
cwtl
out
push
in
cmp
pop
in
sti
lahf
jle
lcall
sub
js
outsb
fs
and
sub
and
add
test
popa
in
xchg
and
outsl
mov
dec
xor
sub
xchg
and
or
xchg
loop
add
or
xchg
jo
cli
add
arpl
stos
dec
mov
int3
and
aad
mov
nop
cs
mov
test
mov
call
scas
sahf
xor
outsl
mov
add
add
add
outsb
outsb
scas
mov
adc
dec
add
push
mov
scas
outsl
int
in
or
or
mov
sti
cmp
jp
aas
cmpsb
aas
cmpsb
inc
add
mov
jo
push
and
fwait
lret
insb
inc
outsb
add
loope
inc
call
in
sub
std
cmp
negl
bound
in
sub
filds
add
inc
repz
fabs
loopne
push
into
ljmp
into
pop
adc
push
xchg
into
jo
xchg
pop
lds
or
pop
xor
pop
mov
out
push
popa
adc
out
cmp
stos
loop
inc
xchg
imul
inc
inc
out
sbb
cld
or
xchg
lcall
sbb
xor
mov
add
nop
adc
add
xchg
mov
xchg
into
jo
dec
and
xchg
pop
adc
js
and
int3
mov
jbe
test
or
mov
popf
hlt
add
loopne
push
push
es
ficomps
dec
sbb
sbb
jge
xchg
pop
xchg
dec
addr16
imul
cmp
pop
into
push
nop
add
add
lods
dec
es
sahf
cltd
dec
xchg
push
lds
push
cld
sub
xlat
pop
test
sub
or
or
and
icebp
cwtl
mov
cwtl
std
lret
scas
imul
mov
cmp
xchg
xchg
sbb
int
and
js
mov
and
cli
jo
fmuls
add
add
stos
ret
fimuls
call
ficoms
in
and
and
fidivs
repz
loopne
repnz
loop
in
mov
cmp
or
sbb
daa
outsb
lea
push
or
inc
xor
dec
add
xor
cmp
in
mov
stos
movsb
or
fsubrl
add
add
sbb
fildl
lods
mov
and
jb
jnp
jg
lods
jno
pusha
cmp
ficoml
outsb
add
add
hlt
out
subl
inc
lea
std
pop
inc
aas
stos
or
aas
repnz
push
jmp
into
sbb
push
add
add
xor
fdivs
push
into
pop
hlt
ds
into
jo
sub
out
das
lret
mov
push
incl
inc
mov
adc
pop
add
ds
stos
stos
test
xchg
dec
or
test
lds
dec
dec
pop
outsl
push
addr16
jge
nop
inc
push
inc
xlat
jecxz
add
adc
lods
loope
sbb
xor
decl
loopne
rcll
je
pop
xchg
stos
scas
push
xchg
or
mov
add
lcall
adc
add
mov
cltd
xchg
push
nop
adc
xchg
pop
inc
lea
es
ds
cli
add
add
xor
pop
push
adc
mov
push
pop
clc
and
pop
cmp
stos
mov
jle
sbb
adc
scas
insb
inc
fwait
ret
or
cmc
jge
jmp
out
xorl
and
jae
mov
movsl
mov
adc
pop
add
ja,pn
pop
mov
add
add
enter
mov
jle
xor
adcb
sub
xchg
inc
adcb
insl
movsb
add
push
sbb
add
push
push
jne
std
push
test
or
aaa
test
pop
xor
and
cmp
mull
decb
in
mov
adc
add
push
pushf
cmpsb
testl
add
sub
mov
dec
loopne
clc
aad
dec
cld
jae
stos
ret
add
push
jae
or
outsb
and
rcll
ret
outsb
int
ds
cli
data16
mov
popf
jp
xchg
adcb
xor
jne
bound
loopne
jne
xchg
mov
bound
mov
dec
insl
mov
add
xchg
into
jo
jb
je
gs
push
insb
ret
mov
mov
inc
inc
imul
bnd
xchg
dec
or
or
popa
xchg
outsb
add
mov
pop
or
or
into
or
pminub
shll
add
mov
add
rolb
stos
test
jbe
lret
pop
mov
add
mov
and
arpl
jl
lods
pusha
cmpsb
pop
push
xchg
and
jg
push
and
jp
xchg
and
scas
push
add
xchg
adc
sbb
out
and
dec
stos
pop
in
jne
sub
ror
pop
xlat
js
add
xorl
add
test
outsb
pusha
xor
dec
sbb
sub
push
xchg
and
push
int
fisttpl
push
fcomi
sub
mov
mov
icebp
ss
push
fimuls
or
dec
repnz
lods
xchg
pop
xchg
adc
ds
push
push
icebp
push
adc
aad
mov
add
add
fimuls
xchg
push
xor
or
testb
clc
add
cmp
les
testb
addl
pop
aaa
mov
icebp
repnz
inc
or
and
hlt
mulps
sti
mov
add
mov
add
adcl
call
rcrb
popl
add
mov
sub
hlt
jb
add
lcall
jg
xchg
imul
sub
push
push
xor
sti
dec
xchg
int
xor
outsb
sub
pusha
mov
divl
adcl
in
or
add
mov
jo
push
je
sub
pop
in
dec
dec
adc
jge
xchg
into
rcll
add
scas
or
or
fisttpll
test
jo
gs
xor
lcall
push
aam
or
or
dec
adc
and
pop
jb
sbb
cli
or
and
stos
lods
push
pop
push
mov
pusha
push
mov
addr16
sbb
xchg
pop
sbb
adc
add
add
xlat
pop
setg
xchg
and
push
add
in
xchg
pop
xchg
jne
xor
adc
dec
cltd
add
std
xchg
pop
xchg
jne
xor
xchg
jae
jnp
and
add
xchg
and
xchg
pop
adc
stos
test
and
pop
xor
sbb
xchg
stc
add
add
stos
lcall
insl
in
xchg
test
leave
mov
mov
xchg
sub
and
divb
and
outsb
in
add
sti
imul
inc
sub
jno
cs
inc
jmp
adc
cmp
mov
xchg
and
adc
stc
popa
sar
in
xchg
lods
repz
add
add
mov
test
outsb
add
xchg
stc
cmpb
mov
ljmp
pusha
ret
cs
stos
sub
add
clc
ss
outsl
xchg
stc
mov
mov
out
flds
push
scas
jno
pop
stc
stc
sub
outsb
ror
add
jb
out
cmp
mov
add
in
adc
add
ja
dec
dec
sub
les
subb
jle
addb
or
int
cmpsl
ja
mov
js
sub
push
pop
repnz
cmp
dec
jns
sub
in
cld
cmp
iret
jecxz
call
xor
adc
jge
add
pop
lret
mov
sahf
std
dec
adc
pop
lret
sahf
mov
std
dec
add
rolb
shlb
inc
jnp
arpl
add
push
aad
mov
outsl
fcoms
and
addb
and
xchg
jae
mov
xchg
pop
adc
fs
mov
sub
leave
add
add
out
data16
dec
jg
insl
pop
xchg
push
mov
test
xchg
mov
and
dec
jbe
pop
jno
les
aas
cwtl
pop
les
push
les
mov
jl
adc
xchg
movsl
ljmp
mov
push
and
outsb
in
in
cmp
push
ror
addr16
pop
push
cmc
xchg
cmp
add
add
stc
movsl
sbb
repz
push
pop
and
lods
lock
sub
jmp
jno
es
push
std
loop
and
int3
ja
push
int
sbb
data16
cmc
call
outsb
push
mov
add
popf
lds
cwtl
jne
mov
add
ror
mov
outsb
push
movsl
pop
jbe
fs
push
sti
add
add
pop
xchg
mov
out
ret
ljmp
cmp
xor
ja
out
mov
xor
add
cmp
jg
pop
int
ljmp
sub
xor
add
sbb
lock
mov
int3
add
mov
push
add
pop
int
jmp
add
sub
popl
cmc
add
xchg
add
mov
push
sub
jo
sar
inc
ret
and
test
mov
push
sti
mov
xchg
inc
cmp
iret
mov
lret
or
outsb
mov
sahf
sbb
push
or
and
xchg
jg
add
imul
addl
add
mulb
inc
xchg
push
jbe
push
and
xchg
cmp
lar
sbb
adc
pop
pop
and
pushf
mov
jns
test
dec
sahf
stc
das
aad
sbb
fs
int3
pop
sbb
mov
push
inc
xchg
call
pop
add
push
jae
fs
ret
adc
add
add
and
std
inc
xchg
pushf
fldenv
jecxz
pop
imul
xchg
cltd
and
jge
xchg
pushf
push
pop
add
xchg
or
shlb
movsl
xor
stos
sub
std
sbb
pop
add
ja
add
cmp
mov
push
insl
sbb
cs
int3
add
mov
push
icebp
add
add
mov
pop
jne
sbb
adc
rorl
sbb
cmpsb
xchg
sbb
mov
mov
stc
xchg
pop
jns
icebp
or
cwtl
test
in
xchg
and
dec
icebp
pushf
dec
or
xchg
mov
or
push
in
popf
and
push
inc
fwait
mov
lcall
cmc
cld
jp
add
andb
add
add
push
inc
ds
xor
ficoml
mov
or
dec
es
pop
push
dec
pop
imul
pop
inc
cmc
add
jbe
mov
jb
lret
jbe
inc
sahf
dec
adc
rolb
adc
and
pop
rol
and
daa
mov
aas
lahf
cmp
inc
jae
and
add
add
aam
mov
and
aas
mov
pop
insl
cmp
jo
xchg
mov
mov
icebp
ljmp
in
sbb
add
and
add
or
jb
testl
xchg
cmp
cs
xchg
xchg
arpl
sub
push
mov
jo
add
add
push
sbb
outsl
xor
fucompp
push
push
xor
jae
mov
xchg
pop
sbb
fadd
xchg
and
xor
cwtl
mov
inc
xor
lahf
sub
jb
sub
jnp
sub
scas
dec
xchg
push
rorl
mov
dec
or
inc
push
addr16
push
xor
add
sahf
push
and
mov
push
and
sbb
pop
mov
pop
xorl
or
inc
mov
push
outsb
scas
in
outsl
clc
scas
jmp
sub
xchg
lcall
mov
in
dec
ret
push
fldl
lcall
lods
cltd
mov
popf
adc
je
and
mov
add
je
lods
cmc
mov
xor
aad
push
jp
or
sbb
and
pop
add
in
pop
out
lods
lcall
in
cmp
lods
mov
cli
and
rorb
test
xchg
js
into
xchg
cmp
bound
jns
icebp
sbb
push
enter
repz
push
stos
bound
add
add
cmp
enter
repnz
les
sub
mov
jmp
or
out
repz
push
or
mov
xor
lahf
fiadds
jns
fmul
repz
sub
cmc
inc
xchg
xor
and
xchg
int3
jo
shl
mov
push
add
add
add
fbstp
or
mov
jo
xchg
lods
jo
and
mov
lcall
addl
or
push
xchg
push
cmp
rcr
cmp
xchg
loope
mov
xchg
mov
push
lods
mov
sarl
stos
xchg
adc
push
or
and
or
sbb
add
add
and
or
pop
adc
xchg
cld
out
out
call
sbb
xor
mov
or
dec
mov
pop
xchg
and
cmp
movsl
add
out
cmp
inc
cld
add
lahf
movl
jle
inc
pushf
mov
iret
dec
imul
add
pop
jecxz
scas
mov
pop
int
xchg
out
add
add
fwait
xchg
repz
and
in
sbb
xchg
and
fwait
mov
jno
mov
add
repnz
xor
and
out
jbe
arpl
adc
in
xchg
and
mov
jns
sub
push
and
lds
and
sub
xchg
and
popa
in
add
add
sbb
mov
in
or
sub
xchg
and
cmp
push
and
outsb
stos
stos
das
loope
lcall
xchg
and
dec
jbe
movsb
pop
or
push
xor
jo
sahf
aaa
push
cmp
add
ds
jp
cmc
dec
mov
outsb
sti
add
add
sti
dec
sarl
lock
fidivrl
add
sarb
mov
push
mov
mov
icebp
les
pop
les
mov
mov
mov
xor
push
and
xchg
inc
cmp
mov
sti
cltd
mov
add
xchg
or
add
mov
adc
add
sbb
call
cltd
ds
inc
orl
push
aaa
mov
or
sbb
add
inc
push
and
push
push
and
mov
dec
push
dec
xchg
sbb
pop
xchg
jno
push
mov
sub
adc
jno
xchg
inc
cmpsl
jge
stos
push
decl
adcl
xchg
mov
mov
add
cvtps2pi
cmp
or
lock
es
pop
clc
es
inc
sbb
lock
sub
int
mov
mov
mov
or
cmp
sub
ret
dec
sbb
dec
sbb
and
xchg
pop
xchg
sarb
xchg
test
xor
inc
xchg
add
inc
les
pop
mov
test
clc
sbb
stos
and
xchg
stos
test
adc
lret
or
fwait
aas
jp
add
jae
mov
cmp
outsb
in
mov
mov
stc
mov
sbbl
in
jle
lods
cltd
push
fsubrl
push
mov
fisttpll
add
mov
in
xchg
int
sub
es
mov
bound
fs
sbb
add
das
add
push
jbe
out
jae
inc
sar
outsl
cmpsb
ss
rcrl
enter
inc
sub
pop
iret
mov
jo
jmp
pop
cmc
ret
sub
arpl
and
outsl
daa
addb
insl
jo
add
xor
test
outsb
add
in
movb
into
inc
aaa
adc
adc
clc
outsb
mov
mov
out
fsubp
stc
test
stc
dec
mov
jecxz
xchg
xchg
mov
mov
push
adc
and
lods
xchg
int3
or
and
jecxz
pop
jmp
and
cmp
inc
add
add
int3
hlt
mov
jp
xor
inc
sbb
ret
mov
and
inc
or
fsubs
inc
call
pop
and
or
add
adc
rorb
mov
adc
lods
ja
lea
outsl
push
icebp
sbb
cmp
and
sbb
and
xchg
xchg
add
add
cli
dec
dec
out
pop
inc
scas
mov
fisttpl
and
gs
push
pop
jnp
jae
scas
bound
sub
int
inc
xchg
and
add
mov
jge
lods
pop
clc
mov
adc
out
adc
pop
into
mov
out
adc
mov
add
cmpsb
lods
insl
sbb
add
pop
and
add
mov
arpl
leave
push
mov
fwait
pop
pusha
jns
bound
das
jg
cmp
xchg
xor
sub
in
and
or
lods
and
mov
mov
icebp
in
xchg
test
in
inc
ficoms
cmpsl
xchg
xchg
dec
inc
outsb
in
mov
mov
xchg
dec
add
add
mov
test
mov
cmpsb
stos
addl
and
and
popa
jo
add
cmp
jno
mov
iret
imul
adc
add
jecxz
pop
bound
sub
push
add
mov
xchg
in
lret
into
xchg
push
and
outsb
xchg
add
in
sbb
and
xchg
cmp
and
int
jae
inc
jne
sti
shl
add
push
add
dec
les
xor
sub
shlb
add
leave
dec
dec
xor
daa
stos
lret
imul
add
inc
dec
add
lcall
add
add
add
int3
in
repz
mov
cwtl
xchg
int3
jo
leave
rorb
inc
mov
xchg
xchg
hlt
notb
lock
add
mov
sbb
and
add
adc
jae
fs
inc
fsubrs
xchg
pop
adc
lret
in
push
inc
push
sbb
lea
ljmp
add
mov
dec
jp
std
dec
jb
outsl
jns
and
mov
push
lods
inc
xchg
mov
sub
push
inc
jnp
add
pop
adc
adc
mov
and
fisttpl
xchg
and
out
pop
popa
mov
xchg
push
xchg
and
pop
sbb
mov
pop
lods
xchg
insl
dec
out
xchg
and
add
outsb
imul
mov
add
push
sub
mov
mov
outsl
sahf
imul
sahf
ret
ficoms
icebp
in
xor
scas
push
aam
clc
enter
jecxz
mov
aad
inc
outsb
in
push
jl
push
push
mov
outsb
in
iret
pusha
sub
push
out
mov
add
add
loop
add
cmp
push
mov
mov
stos
xchg
stos
incb
sti
lods
jp
les
test
outsb
push
je
sbb
inc
push
xchg
cltd
in
test
xor
psllq
out
daa
cmc
hlt
inc
mov
sub
push
xchg
pop
pusha
shlb
lahf
outsb
cmpl
push
ljmp
add
cmp
ficoms
and
cld
repnz
add
pushf
push
mov
rcll
cs
pop
jb
call
mov
cmp
and
and
xchg
pop
sbb
dec
test
add
xchg
int3
sbb
sbb
das
pushf
fnstcw
push
sbb
sub
add
aaa
enter
add
push
add
pop
out
mov
or
mov
dec
mov
or
rorb
mov
pop
jecxz
mov
cmp
fstl
cmp
and
ds
jb
aad
in
sub
pop
outsb
xchg
and
push
test
das
jle
inc
push
jnp
mov
in
ds
xchg
pop
xchg
test
loop
mov
add
dec
outsl
jge
and
arpl
pop
mov
xchg
cmpb
xchg
jne
scas
fdivr
aaa
cld
sahf
imul
push
add
push
fwait
add
sub
mov
add
test
xchg
push
fdivrs
mov
dec
mov
xchg
test
int
push
dec
inc
xchg
push
add
cs
cmp
sbb
push
mov
xchg
lret
xor
shrb
test
in
inc
out
mov
xchg
mov
xchg
jmp
xchg
and
outsb
nop
and
lock
push
clc
aam
cmpsb
leave
add
and
aaa
xor
sub
movsl
mov
push
add
add
mov
add
and
loop
mov
adc
ret
in
lahf
insl
add
loope
cmp
adc
inc
mov
outsb
mov
mov
fidivrl
es
push
ret
ds
mov
notl
cmc
iret
in
jecxz
dec
mov
mov
pop
loope
pop
inc
push
cmpb
xchg
mov
aaa
in
stc
push
xchg
fsubrs
adcl
xchg
xor
rorb
jmp
sbb
pop
out
mov
and
cmp
or
jb
ja
subb
inc
sbb
sbb
fwait
les
pop
dec
cmc
scas
pop
xchg
cltd
pop
out
adc
xor
xchg
dec
push
or
add
xchg
jnp
adc
pop
rorl
mov
xchg
aas
imulb
mov
dec
push
or
and
jae
pop
cmp
pop
push
adc
xchg
xchg
stc
imul
insl
adc
push
jb
add
pop
adc
mov
jb
add
loope
in
or
dec
sbb
add
add
ja
dec
sub
dec
test
xor
xor
sbb
leave
lds
mov
jg
popa
dec
in
mov
push
inc
push
insl
pop
jbe
int3
xor
cmc
mov
and
imul
push
sti
sub
divl
lcall
inc
dec
lods
sub
lods
sub
add
add
mov
cmc
xor
jb
dec
cltd
mov
imul
xchg
and
outsl
pop
rorb
cmpsb
sub
jno
pop
lods
cltd
pushf
push
xor
inc
push
and
ljmp
or
add
sub
add
add
repz
add
repnz
cmc
inc
ja
outsb
cld
add
add
sbb
dec
add
fildll
or
sub
mov
add
inc
jbe
mov
adc
inc
das
dec
gs
je
sti
push
jnp
jae
jmp
cmc
inc
imul
aaa
inc
scas
in
cld
daa
outsb
lea
and
jns
sub
pop
je
jbe
adc
xchg
out
mov
outsb
xchg
subl
add
add
or
dec
and
popl
mov
loopne
insl
sti
add
imul
dec
int
leave
jo
push
std
pop
or
mov
mov
std
out
adc
mov
dec
sub
stos
jbe
push
mov
push
test
or
jo
xchg
lcall
add
add
fnstcw
push
and
jle
fnstcw
push
cmp
mov
mov
mov
adcb
adc
xchg
lds
push
lcall
sbb
sbb
jl
jmp
sub
hlt
xchg
daa
xchg
pop
loope
insb
mov
sahf
push
or
in
addl
add
and
pop
sbb
adc
popf
inc
or
sbb
sbbl
outsb
movsb
inc
mov
sbb
cmpsl
imul
xchg
stos
jge
int3
xor
mov
and
dec
jp
xlat
adc
cld
sub
xchg
sahf
xor
jp
idivl
or
add
lods
sbb
xchg
cmp
outsb
in
adc
stos
test
inc
leave
rolb
lods
clc
fwait
sbb
jb
xchg
cmp
out
lods
jmp
outsl
and
add
int
daa
pop
aam
lret
div
call
mov
jo
mov
sbb
popl
push
pop
les
add
data16
outsl
and
inc
fwait
cmc
sbb
adc
dec
add
jmp
push
sub
shlb
cmp
outsb
mov
push
push
and
cmc
cld
mov
push
xor
and
or
and
add
cld
test
cmp
jnp
mov
js
stos
xor
jnp
xlat
bound
imul
add
jbe
sbb
xor
sub
cmpsl
stc
stc
or
jb
xchg
aam
mov
or
add
in
fiadds
rolb
popa
sbb
xchg
fs
xchg
mov
jno
adc
shl
dec
sub
pop
lea
call
jnp
lcall
rdmsr
jnp
jno
cwtl
push
xchg
xlat
cmovbe
cmp
iret
scas
add
in
xchg
pop
xchg
mov
cmpsb
iret
lods
scas
sbb
mov
adc
repnz
pop
hlt
mov
inc
sbb
lcall
lea
pop
or
fmull
sbb
pop
dec
adc
add
test
pop
add
add
scas
cmpsb
test
mov
mov
push
mov
outsb
je
or
push
add
out
xchg
and
xchg
in
pop
scas
mov
stos
out
aaa
jmp
outsb
in
xchg
mov
pop
mov
cmpsb
stc
leave
std
scas
mov
push
ficoms
data16
mov
call
and
outsb
in
add
add
and
lret
outsb
push
cmpsl
aam
pop
sahf
cmp
dec
pop
adc
arpl
repz
and
push
movsb
or
lcall
pop
mov
push
test
lret
push
fidivl
and
movsb
into
add
sub
les
pop
pop
sti
enter
add
mov
push
imul
add
add
fs
adc
hlt
push
sub
xor
add
movsl
int3
jo
cmp
cmpsl
inc
inc
cld
popf
fcomip
adcb
gs
rorl
jno
mov
sbb
inc
and
aaa
ret
shlb
sbb
jge
cmp
jb
sbb
jg
xor
ret
jmp
mov
movb
add
jle
adc
fiaddl
andb
inc
inc
mov
sbb
in
cltd
mov
jb
xchg
inc
mov
pop
subl
sbb
jb
cld
test
jecxz
xor
sti
dec
mov
cmp
xchg
and
adc
test
jle
adc
imul
add
add
sub
stos
xor
cmp
test
popa
stos
mov
test
adc
add
jmp
pop
xchg
mov
cmp
lock
out
add
pop
sbb
or
fsubp
xchg
pop
xchg
sbb
adc
dec
outsb
mov
adc
ljmp
or
int
inc
pop
mov
outsb
dec
add
add
imul
imul
out
jge
xchg
inc
rep
or
xchg
mov
popa
repnz
gs
repnz
call
add
xchg
das
lcall
ret
or
and
pop
fldl
add
push
enter
cwtl
ret
lods
fwait
sub
adc
xchg
ret
mov
jl
outsl
in
xchg
sub
add
add
sbb
cmpsl
pusha
pop
xor
adc
push
xor
pop
push
mov
ja
outsb
pop
or
xchg
in
add
xchg
and
pop
outsb
sub
js
dec
mov
test
jmp
dec
aam
scas
stc
inc
add
ror
scas
out
lahf
dec
int
push
sti
inc
pusha
inc
inc
rorl
lods
out
add
stos
lahf
dec
lods
mov
mov
push
sbbl
in
divb
adc
lcall
or
pop
jne
xchg
pusha
out
mov
call
rcrl
jecxz
cmp
les
jge
adc
and
add
add
xlat
mov
lret
adc
mov
lods
pop
cmp
ja
cmp
or
mov
int3
jb
jae
movl
pop
push
insb
mov
sahf
xchg
stc
push
ficoms
mov
pop
xor
and
inc
sub
repnz
insl
push
pushf
int3
cmp
lcall
cs
and
ret
cmp
adc
and
mov
js
addb
out
shll
pop
push
rclb
in
add
push
repz
mov
xchg
and
rcrl
inc
mov
pop
mov
mov
dec
loop
es
cmp
sbb
in
cmp
das
xchg
and
push
fstps
cld
aad
icebp
dec
add
add
cmpsb
les
pushf
and
adc
jmp
xor
xchg
xor
push
and
loope
out
test
or
mov
xchg
jecxz
lods
lahf
lods
add
push
pop
mov
and
sub
outsb
pop
test
add
xchg
jmp
xchg
xchg
push
jmp
scas
xchg
add
add
add
xor
enter
sti
add
add
mov
dec
add
xor
or
add
add
scas
ljmp
andb
pop
dec
imul
push
popa
push
mov
mov
xor
lods
sub
cld
jb
add
sub
mov
sub
inc
xchg
sub
and
add
add
cmp
inc
mov
xchg
loopne
out
sub
xor
add
aam
sub
dec
notb
pop
xor
add
cmp
jecxz
cmc
hlt
pop
pushf
outsl
add
adc
test
mov
xchg
mov
fadd
add
sti
push
data16
push
sbb
shll
cs
xor
leave
stos
mov
mov
pop
cmpl
add
push
mov
inc
lcall
imul
pop
ret
out
and
addl
mov
inc
xchg
mov
and
dec
jns
popa
jl
xchg
sbb
inc
insb
lahf
xlat
mov
rclb
pop
xchg
mov
add
hlt
sub
pop
icebp
pop
xchg
mov
add
popf
mov
sti
sbb
mov
mov
cmp
lock
cs
xchg
and
or
fistpl
scas
push
xchg
dec
addr16
push
or
or
outsb
popf
outsb
sahf
bound
bound
in
pusha
dec
das
repz
xchg
and
test
add
add
lea
xchg
loopne
in
xchg
and
outsb
jge
and
push
leave
out
in
mov
jl
dec
lahf
bound
dec
cs
sub
sbb
fmuls
loop
imul
adc
inc
pop
stc
test
inc
pop
jge
or
lahf
add
lcall
xchg
imul
add
mov
xchg
cmc
jo
xchg
adc
ds
pop
and
push
pop
inc
outsl
and
inc
jg
mov
and
add
pop
sub
push
jl
sti
add
inc
add
insl
aaa
negb
mov
jbe
add
stos
int3
sti
jmp
stc
cld
and
xor
int3
insb
jl
dec
ljmp
sti
and
add
cmpsl
jbe
add
cmp
into
sub
xchg
mov
pextrw
je
mov
cmp
dec
stos
stc
fs
ds
repz
into
dec
inc
push
or
mov
test
xchg
sti
imul
xor
adc
or
aas
pop
mov
sub
push
movl
add
add
push
cmp
mov
mov
lret
test
xchg
cltd
dec
andl
mov
xchg
sub
decl
add
addr16
push
cmpsb
out
lret
stos
sbb
cmp
cmc
pop
adc
xchg
sbb
fbld
push
fs
fwait
cld
add
aas
lret
add
add
xor
dec
add
andb
push
fildl
lods
test
js
pop
in
xchg
lods
mov
js
pop
or
xchg
stos
insl
mov
int3
cmp
test
push
or
and
into
pop
pop
lods
xchg
cmpsb
inc
pusha
jecxz
xchg
aad
es
outsb
in
in
mov
add
add
outsb
in
mov
and
pusha
pop
outsb
mov
xchg
clc
sub
add
dec
aam
sti
test
dec
and
jge
arpl
xchg
test
lcall
inc
sbb
mov
je
icebp
repnz
cmc
sbb
jno
add
add
cmp
add
pop
in
sbbl
mov
or
cmc
lret
xchg
xchg
cmp
push
cwtl
out
lea
mov
ss
pop
push
in
call
cmp
add
dec
add
lahf
fstps
outsb
in
cli
daa
outsb
add
sub
sti
insb
and
and
mov
in
inc
mov
add
add
pop
xor
cs
fildll
add
pop
dec
xchg
or
mov
out
mov
sub
lcall
push
mov
dec
cmp
shlb
pop
inc
outsl
in
psubusb
sarb
mov
lods
ds
adc
dec
mov
in
es
xchg
mov
xchg
pop
xor
add
or
pop
pusha
andl
and
dec
test
sbb
pushf
xchg
jp
popf
cmpsb
inc
xchg
stos
push
and
cmc
add
fs
and
es
add
in
test
adc
inc
xchg
mov
adc
and
pop
pop
or
test
call
fstpl
push
lods
sbb
add
bound
xchg
pop
imul
inc
cld
jmp
add
sub
inc
test
push
cld
mov
and
sbb
and
sti
sub
push
lcall
insl
in
xchg
sahf
mov
in
xchg
and
add
repz
fsubl
mov
inc
xor
cs
push
and
add
add
add
out
frstor
xor
int3
pop
ljmp
jp
xchg
lods
xchg
mov
sub
fldcw
pop
outsb
and
and
loop
out
pop
pusha
std
adc
mov
lock
cmc
lret
push
push
jne
das
sbb
shl
mov
jge
adc
xlat
insb
dec
add
sbb
insb
pushl
sub
xor
xchg
sub
and
jg
inc
dec
sub
scas
push
pop
dec
jo
insl
pop
ficomps
inc
jg
mov
insl
and
pop
push
in
pop
lea
cmp
adc
push
aaa
jo
popa
pushf
dec
in
cmp
aad
cmp
inc
cmp
jbe
cli
sub
jb
add
add
or
xchg
mov
in
cmp
sub
inc
sbb
daa
or
dec
pushl
add
out
outsl
add
add
clc
mov
ss
pop
arpl
mov
cltd
adc
lret
jo
jne
dec
or
jo
xchg
xor
sub
xchg
mov
add
jg
mov
jb
adc
mov
es
pop
sbb
mov
push
inc
addl
in
aaa
xchg
and
loop
icebp
mov
pop
adc
add
icebp
jb
sbb
jp
data16
shrl
jnp
ret
or
ret
sbb
inc
jb
mov
cmp
add
mov
push
cmp
inc
mov
push
ljmp
popa
xchg
insl
repnz
push
aad
xlat
add
int3
or
adc
mov
xchg
les
adc
out
mull
inc
push
cmp
std
call
push
fstp
sbb
sbb
popf
jbe
inc
push
and
push
xlat
and
cmp
add
add
insl
clc
cltd
xchg
dec
inc
xchg
mov
xor
cmpsb
lahf
cmp
test
mov
jg
cmp
insl
cmc
cmc
add
sub
sti
inc
outsb
pusha
inc
outsl
sbb
and
pop
gs
cld
outsl
in
inc
popa
xchg
mov
movsb
dec
push
call
cmc
push
adc
jl
mov
bound
add
add
sub
mov
jp
push
lea
sti
inc
ret
repz
cmc
push
scas
movsb
lods
add
cmp
jnp
outsb
add
jns
sbb
or
and
fstps
repnz
incl
add
mull
cmp
dec
cmp
addl
add
sub
sbbb
repnz
or
mov
iret
mov
or
push
and
aas
jb
fnstenv
subl
mov
add
cmp
jo
adcb
lea
iret
cmp
add
jo
push
and
pop
mov
stc
subl
aad
cmpsl
aaa
clc
sbb
adc
cmp
dec
stos
cmp
mov
lods
pop
xor
sbb
sub
test
sbb
adc
pop
adc
mov
mov
jl
xor
xchg
adc
push
fimull
sub
cwtl
js
jmp
mov
mov
jecxz
mov
ret
add
jge
insl
fcoms
in
repnz
repnz
push
nop
stos
adc
adc
loop
xlat
cmp
push
jae
out
pop
lock
adc
sub
orb
xchg
pushf
cmp
cmp
jle
pop
sub
icebp
test
outsb
in
xchg
std
xor
pop
and
pusha
sub
add
add
and
or
ret
add
test
outsl
add
and
xor
push
xor
addr16
and
outsb
push
cmp
adc
sti
dec
push
jge
outsl
mov
repnz
outsb
push
xor
mov
outsl
sub
in
stos
ret
lock
jmp
and
outsb
jnp
add
jmp
jnp
out
sahf
xor
sti
stos
int3
jo
mov
sbb
inc
out
stos
int3
jo
mov
mov
push
cmp
add
add
and
mov
lods
aad
lret
xchg
or
xchg
and
push
into
lods
ja
lcall
xchg
adc
andb
push
jmp
arpl
add
add
sub
insb
jbe
mov
ljmp
and
adc
xor
mov
xchg
pop
sbb
inc
es
inc
xchg
cmp
divps
stc
inc
jb
addr16
xchg
lock
push
inc
nop
test
push
popf
sbb
and
jb
out
das
adc
add
jl
mov
lret
cltd
in
pop
pop
cmp
and
cmpsb
inc
xchg
hlt
xchg
sbb
adc
jp
cmp
mov
pop
xor
adc
dec
mov
inc
pop
pop
test
xchg
push
std
cmp
shlb
cmp
cmp
outsb
leave
mov
in
jbe
ljmp
add
add
lods
xlat
and
out
jb
xchg
loopne
xchg
inc
pop
pop
inc
test
cmc
sarl
lock
arpl
dec
sbb
fiadds
jecxz
and
stc
sub
and
test
push
cwtl
cmpsb
movsb
data16
clc
movsl
push
js
ljmp
je
xchg
cmpsb
jge
dec
sbb
in
add
add
out
add
fiaddl
hlt
push
popa
mov
mov
and
dec
notb
add
mov
push
mov
popl
daa
mov
hlt
push
fistpll
and
lret
jno
jg
lds
pop
sub
lahf
inc
and
aas
fwait
lahf
push
movsb
je
lret
ds
dec
pushf
movsb
addl
add
in
mov
add
and
inc
jmp
xor
cmp
repz
out
pushf
mov
xchg
inc
jne
xchg
imul
or
pop
cmp
and
mov
sti
mov
or
je
dec
bound
pop
jns
lea
xchg
fsubs
dec
lret
adcb
pop
in
std
mov
fwait
jle
mov
or
or
jae
add
add
mov
adc
xor
dec
imul
adc
dec
fcmovu
mov
xchg
testb
sub
push
cmp
jo
and
push
or
lcall
mov
dec
out
pop
sti
iret
mov
add
sahf
push
push
xchg
and
adc
cmc
les
add
add
mov
mov
mov
xchg
pop
xchg
mov
push
mov
sbb
xchg
pop
mov
pop
pop
add
testb
sbb
mov
xchg
pop
xchg
jge
push
or
insl
imul
mov
mov
adc
lds
clc
jge
in
in
add
add
adc
adc
in
xchg
jge
mov
pop
xchg
jl
sub
and
and
dec
dec
or
leave
mov
mov
and
cmp
jne
cmpsb
add
xchg
add
adc
add
mov
push
fcomi
xor
sbb
and
xor
inc
lcall
rolb
add
fiadds
sub
outsb
xchg
das
cmc
add
dec
push
sbb
dec
mov
fwait
and
push
pop
mov
mov
es
fstpt
inc
sbb
mov
and
push
cmc
add
hlt
lret
push
add
or
jo
iret
add
cmc
jns
mov
outsb
add
jmp
add
or
jo
mov
adc
add
add
ficoml
notb
sti
aas
lahf
xor
xchg
mov
cmp
push
dec
imul
rcrl
adc
pop
dec
adc
nop
xor
aas
ja
push
xor
cli
jp
sbb
adc
cld
inc
or
jno
addb
andl
mov
or
stos
lods
adc
add
outsb
jle
jno
js
lcall
add
bound
pop
jo
or
and
lcall
out
stos
jne
and
scas
jns
cmpsl
dec
pop
adc
xchg
and
xchg
andb
push
push
std
es
pop
gs
enter
movsl
mov
mov
sbb
into
and
jge
add
fisttps
mov
mov
mov
pushf
rcr
jge
sub
mov
sbb
and
push
fs
push
aad
push
fisubl
cwtl
cs
add
xchg
repz
jmp
inc
mov
lods
cmp
and
sub
int
add
pop
jge
aad
mov
lods
cmpsb
xor
sbb
fcoml
jg
sti
sub
push
lea
jo
sub
cmp
xchg
lahf
mov
lock
and
cmp
pusha
lods
xchg
sahf
cmp
inc
cmp
add
sbb
add
push
pop
cs
xor
or
aas
and
xchg
xor
xchg
adc
into
aas
sti
loop
jnp
decl
jns
or
outsb
add
js
adc
das
push
les
xchg
pop
or
and
add
lret
mov
and
enter
and
popa
call
inc
data16
jmp
outsb
add
add
cmp
add
or
push
cmp
enter
notl
aam
mov
lahf
ja
adc
and
sbb
fimuls
mov
mov
xchg
scas
in
jbe
mov
js
sub
cli
movsb
scas
ret
add
data16
inc
push
sub
adc
cmpsb
scas
jp
ja
rorb
push
test
add
xchg
mov
ror
sbb
pop
mov
mov
ljmp
adc
xchg
mov
lcall
cmp
xchg
mov
fildl
lcall
lock
das
xchg
and
adc
xchg
cmp
inc
stc
das
add
icebp
push
xchg
pop
xchg
scas
inc
add
jecxz
in
push
add
add
les
pop
lea
dec
sub
and
xchg
lods
shrb
push
or
outsb
lea
insl
and
mov
imul
or
jl
xchg
andb
in
push
push
fidivs
cmp
clc
fmull
jb
fsts
and
add
adcl
scas
adc
pop
jmp
and
cs
xor
mov
sub
ljmp
sub
inc
imul
and
out
add
and
mov
inc
outsl
mov
insl
cli
rolb
cmp
lret
push
adc
and
jbe
out
es
add
add
jns
adc
daa
xor
push
jb
outsl
sub
push
enter
dec
scas
xchg
lods
jle
ftst
hlt
or
mov
repnz
xchg
int3
and
cmp
add
in
pop
mov
sti
and
icebp
repnz
sbbb
xchg
ret
cmpb
adc
dec
pop
push
push
lahf
or
add
mov
inc
or
or
cmp
push
or
cli
mov
decl
movzbl
xchg
orl
sub
push
cmp
imul
pop
and
jo
sub
fwait
inc
and
pop
xor
jg
cmp
popf
jne
add
mov
push
rcll
cmovl
sbb
lret
add
movl
daa
pop
cmp
or
xchg
subb
mov
outsl
clc
lcall
aam
leave
push
int3
inc
pop
adc
psrad
aad
jp
scas
and
cwtl
mov
add
add
outsl
xchg
pop
xchg
test
pinsrw
push
in
mov
insl
sbb
cltd
mov
xchg
add
data16
pop
rorw
xchg
mov
cmc
xchg
popw
fld
mov
in
rcrb
xchg
add
fchs
test
adc
js
cltd
mov
add
popa
loopne
add
add
add
test
add
jecxz
outsb
shlb
icebp
test
lods
add
lcall
roll
add
add
rolb
xchg
sbb
push
xor
push
or
cli
test
jg
repnz
stc
inc
xchg
hlt
lret
out
jno
jg
int3
jge
fxtract
lret
xchg
add
cmpsl
int3
jno
add
inc
je
inc
xchg
and
clc
lock
add
fdivp
call
lret
in
pop
pop
mov
movsb
lret
jae
cmc
pop
adc
jg
add
push
jbe
scas
sub
hlt
jb
add
adc
jbe
lods
mov
adc
inc
and
pop
das
jbe
lock
fdivr
adc
test
or
add
add
mov
loop
repz
lahf
add
jecxz
push
fdivr
movsl
dec
cmp
mov
mov
jno
xchg
repz
stos
mov
lcall
mov
sbb
mov
in
adc
and
jecxz
icebp
mov
sub
shlb
enter
test
xchg
xor
outsl
add
add
and
mov
dec
dec
stos
xlat
dec
loope
xchg
rol
push
sbb
lcall
jbe
hlt
pusha
dec
dec
jge
mov
lea
and
sbb
mov
push
subb
dec
int3
fimull
mov
mov
shll
inc
jge
mov
out
push
and
jl
add
clc
add
xchg
xor
xchg
lods
add
stos
inc
addb
mov
in
outsb
fnstenv
rep
andb
mov
mov
imul
fisubrs
push
and
mov
xchg
cli
stos
mov
clc
cmp
add
stos
mov
cli
stos
jno
clc
sub
mov
scas
push
xchg
dec
scas
lods
add
add
fildll
rcrl
push
jmp
dec
icebp
jo
fidivrl
lods
cli
mov
adc
inc
out
sbb
jle
mov
mov
sti
and
ret
cli
cmp
cmpsl
aad
jo
jg
push
mov
ds
jg
pop
jnp
outsb
test
mov
and
or
sub
add
add
hlt
cmc
hlt
xlat
jno
sbb
adc
aaa
lahf
cmp
mov
sti
mov
inc
cmp
jg
daa
testl
outsb
add
pop
lret
push
nopl
cli
out
jg
adc
subb
fstps
or
xor
mov
cmp
jmp
bswap
int
jbe
add
or
lss
pop
enter
mov
jp
gs
or
jle
xlat
imul
das
add
popl
push
cmpps
bswap
nop
lods
or
and
pop
add
loope
adc
loope
or
jmp
lods
in
jns
inc
sbb
xchg
sbb
add
enter
mov
mov
dec
imul
bndldx
mov
push
xchg
and
jb
mov
lret
js
inc
stos
js
bnd
xchg
push
xchg
pop
pop
loope
push
sbb
lret
push
test
repz
icebp
or
fstps
dec
add
sub
insl
sub
sbb
add
jno
stos
cmp
xor
adc
mov
dec
mov
in
adc
and
mov
inc
bound
bound
popa
sub
dec
mov
insl
xlat
mov
stos
xor
pop
call
xor
mov
daa
outsl
xchg
fidivrs
mov
inc
mov
add
pushf
icebp
xchg
xor
in
xor
mov
addb
inc
mov
xor
scas
outsb
push
arpl
adc
push
adc
inc
hlt
sar
inc
xchg
lea
add
cmc
inc
xchg
movsb
mov
mov
sbb
jae
pusha
push
xor
xchg
or
rolb
repz
add
cltd
pop
fs
cmc
jo
add
xchg
adc
cwtl
clc
cs
xchg
cmp
movsl
int3
jo
cld
xor
cmp
cmp
js
cmp
rorl
inc
xchg
or
pop
push
mov
lds
jl
or
les
addb
and
int
push
and
inc
xchg
ja
loop
mov
pop
inc
stos
xor
ljmp
add
xchg
or
nop
pop
and
inc
and
pop
aam
push
outsl
repz
sbb
cmp
inc
xchg
cltd
and
sub
inc
xchg
or
lea
sbb
mov
or
imul
lods
cmp
jmp
fistpll
data16
stos
movsl
in
test
sub
rolb
add
data16
inc
mov
mov
sub
sbb
inc
dec
adc
or
mov
inc
jbe
xchg
test
xchg
test
sub
lea
fucomp
add
sub
pop
int
sarl
ror
lds
jne
cltd
jno
stc
stos
dec
or
in
pop
sbb
sub
jns
add
add
outsb
mov
jb
sub
xor
jno
push
sub
mov
into
jl
ret
jno
push
cmpl
jbe
dec
ss
mov
movb
sbb
cltd
lods
movsb
ljmp
gs
adc
inc
push
insb
stc
jno
into
mov
movsl
add
in
adc
add
in
repz
outsl
movsl
int3
or
gs
ret
and
xor
dec
add
test
cmpsl
je
inc
repnz
orb
push
jl
or
sti
inc
mov
sti
ljmp
or
add
je
push
adc
lret
cmp
or
js
lods
mov
and
pop
cmp
pop
cmpsl
daa
cmc
ret
cmp
add
js
test
or
pushl
repz
or
adc
and
cmp
cmp
mov
jge
je
pop
add
mov
sub
lea
stos
test
mov
ja
cld
ljmp
push
jnp
je
add
imul
add
add
dec
mov
adc
xor
ja
push
inc
mov
xchg
popa
mov
sbbb
test
add
ljmp
mov
ds
inc
sbb
mov
xchg
popf
lcall
sbb
inc
jp
xchg
aad
mov
sub
and
in
inc
shll
cmp
add
adc
xchg
pop
or
inc
ds
dec
cmpsb
fdivl
push
pushf
mov
lahf
sbb
mov
pop
cmp
jno
cwtl
pop
mov
or
or
insl
jns
out
dec
push
scas
cmp
sub
and
sbb
sarl
mov
cmc
jnp
mov
add
jg
sbb
movsb
lods
cwtl
xor
rorl
imul
ljmp
cs
adc
pop
xor
dec
ret
fwait
in
xchg
and
mov
push
cli
xchg
or
jb
cwtl
jmp
inc
push
pop
cmp
inc
jg
mov
dec
jp
add
daa
mov
add
add
and
jno
mov
lock
push
or
add
movsb
jns
push
insl
add
cmp
push
jbe
aas
imul
in
pop
lds
adc
ja
add
pop
js
xlat
imul
test
cmp
fdivl
cmc
or
adc
cmc
sbb
insl
dec
add
pusha
inc
push
add
xchg
outsb
fldl
dec
xor
adc
push
filds
or
lret
cmp
push
cld
mov
lock
pushf
push
fcmove
jl
nop
les
jo
sti
fsts
jecxz
push
adc
mov
xchg
dec
inc
sub
or
jnp
fdivrs
lds
test
xchg
sahf
ja
mov
cmp
std
pop
push
add
je
adc
push
stc
stos
push
andl
mov
add
push
jnp
out
mov
js
cmp
das
push
aad
dec
pop
lcall
imul
xchg
mov
xchg
hlt
outsb
add
mov
lcall
adc
lds
shl
xor
sahf
mov
shl
pop
push
sbb
outsb
loope
sub
push
outsb
mov
add
and
mov
test
or
mov
push
and
sti
xchg
and
pop
xor
pop
lahf
cld
mov
sti
cwtl
aas
xor
insl
jmp
cmpsb
xor
jae
cmc
jnp
mov
sbb
adc
sub
scas
add
inc
stc
roll
push
adc
and
aad
icebp
sub
sahf
jae
add
add
sub
ljmp
insl
ret
push
dec
jne
mov
std
and
mov
jnp
cmp
cli
adc
sub
movsb
mov
mov
insb
and
jl
xchg
in
test
push
mov
mov
test
mov
cmc
inc
stos
popf
cmp
xchg
and
adc
and
xchg
cmc
aad
pusha
xchg
add
outsb
pop
push
pushaw
add
mov
cmp
add
and
repz
test
sub
stos
sub
mov
je
out
daa
adc
fsubrl
inc
decl
xchg
pushf
mov
pusha
jl
sti
xchg
cltd
ljmp
pop
in
inc
add
add
dec
je
jg
repnz
pop
push
outsb
ljmp
cmp
mov
dec
pop
jbe
xchg
repz
ja
divl
movsl
cmp
add
lock
das
dec
cmp
lods
pusha
orl
std
and
or
mov
cmpsb
and
and
and
mov
jl
sti
into
add
add
dec
mov
cmp
xchg
and
std
sbb
inc
outsl
add
and
xchg
fcmovu
icebp
lea
sbb
adc
leave
adc
jne
arpl
pop
mov
mov
stos
mov
push
mov
and
pop
stos
push
dec
in
out
adc
inc
jg
xchg
and
add
loopne
into
add
and
jnp
mov
push
stos
jl
mov
loop
out
icebp
push
adc
sbb
sub
adc
push
fnstsw
stos
add
orl
push
mov
popa
sub
and
outsb
jb
inc
pop
in
xchg
and
add
roll
outsb
in
adc
sbb
add
std
mov
les
cmp
xchg
cmp
in
xchg
and
cmc
cwtl
xchg
xorb
fwait
push
cli
or
and
ja
adc
in
add
aaa
mov
mov
mov
jecxz
insl
xchg
js
mov
cmp
add
add
mov
ret
ret
test
and
subl
adc
insb
in
mov
gs
mov
lea
add
sbb
add
inc
and
cmp
pop
jne
and
sub
xor
sti
mov
or
in
mov
add
add
push
decl
jle
adc
scas
jno
lods
and
and
ljmp
add
cld
sub
clc
int
fisttpl
jo
xor
xchg
jl
stc
movsb
cmp
int
lods
pop
push
or
adc
jmp
sub
stos
mov
cmc
dec
lcall
pop
sbb
mov
adc
notb
movsl
in
add
add
cmp
adc
cmp
lock
imul
push
insb
ds
movsl
sarb
sbb
mov
js
pop
xchg
jp
mov
jge
push
xchg
and
je
cltd
mov
mov
push
xchg
and
das
cli
adc
in
add
dec
xor
pop
fisubrs
fmul
insl
das
lea
insl
and
ds
lods
xchg
ljmp
fcmovnbe
and
cs
adc
xor
mov
sbb
jmp
and
cs
push
sub
xrelease
xor
jns
rep
xchg
push
mov
lcall
and
add
mov
inc
jo
xchg
push
jb
fwait
jmp
clc
adc
cs
stos
fidivrl
mov
adc
or
sub
inc
xchg
add
les
pop
or
pop
sub
add
mov
outsb
push
shl
push
add
aas
sub
mov
and
sti
sub
outsb
add
inc
sti
mov
mov
add
lret
push
sti
add
xor
jnp
pop
push
outsb
lods
stc
in
add
mov
insb
popf
lock
cmp
xchg
daa
es
out
jle
xchg
orl
out
loope
ficoms
cmc
xchg
jb
xchg
leave
mov
lahf
xlat
mov
adc
pop
aam
dec
jo
mov
pop
jo
add
add
dec
dec
add
js
or
or
aad
or
jp
addl
mov
fsub
xchg
dec
or
adc
loopne
loope
jnp,pn
mov
xor
inc
clc
addr16
movsb
in
jno
cmc
mov
popa
arpl
js
or
pop
cmp
mov
cmp
add
jp
lods
pop
imul
jg
or
mov
jecxz
push
jecxz
loop
pop
xchg
dec
mov
xchg
and
xchg
push
sbb
rcrl
adc
cmp
aas
sahf
dec
cmp
arpl
push
sbb
aam
orl
xchg
out
inc
jns
mov
jl
insl
out
punpckldq
add
add
pusha
aas
aas
jnp
sti
scas
cltd
cmc
pop
out
enter
xchg
pop
mov
cmp
cwtl
pushf
mov
xchg
and
clc
sub
and
in
xchg
dec
inc
xchg
xchg
lret
outsb
push
push
ljmp
pusha
out
ljmp
xchg
je
pop
mov
ret
sbb
mov
stos
sub
add
add
outsb
outsb
aam
clc
mov
xchg
test
add
ja
add
loop
in
and
xchg
cwtl
adc
push
loop
pop
lods
sub
or
out
cwtl
xor
push
xchg
push
adc
pop
in
mov
cmp
mov
out
cmp
jae
insl
add
loope
and
filds
sbb
in
push
sbb
mov
add
add
out
push
inc
inc
jnp
jae
push
mov
sti
push
loop
dec
inc
gs
push
jbe
outsb
lea
js
divl
outsl
or
dec
push
inc
pop
fidivrs
xchg
xlat
addl
jb
xchg
dec
jo
mov
push
add
xchg
dec
jo
dec
test
cmp
inc
push
sbb
into
xchg
and
dec
and
ss
outsl
add
add
aaa
or
mov
inc
jnp
es
mov
call
or
inc
and
add
pop
sub
data16
or
mov
fdivrp
adc
scas
cwtl
adc
jecxz
dec
push
xchg
pop
xchg
mov
in
leave
addr16
pop
in
mov
push
es
pop
lock
shl
add
add
and
jo
pushf
test
add
and
movb
adc
and
loope
dec
mov
out
mov
sbb
jp
adc
mov
lods
pop
in
mov
out
sahf
icebp
lods
mov
jl
push
or
rcr
jne
lret
push
add
add
ficoml
cltd
fdivrs
pusha
test
into
mov
xor
cmc
and
pop
jecxz
and
cs
mov
adc
mov
mov
repnz
fs
xchg
pop
mov
or
adc
adc
xchg
pop
stc
pop
mov
or
lods
push
mov
push
pop
jl
add
add
jle
sti
lock
and
sbb
sub
data16
jns
mov
fdivrl
and
shll
jg
mov
out
cltd
sti
loopne
cmp
inc
rcll
sub
and
das
cmpsb
cwtl
jo
adc
push
and
sbb
out
xchg
stos
pop
sti
add
add
jecxz
add
fistl
fidivrs
pop
mov
push
mov
mov
das
test
mov
inc
inc
incl
stc
inc
and
inc
sbbl
sub
pop
inc
mov
push
sbbb
sub
or
push
ja
pop
stc
ja
pop
stc
ja
push
inc
mov
and
jbe
call
jp
add
push
jbe
repz
mov
xor
jl
push
jmp
xlat
fadds
xchg
dec
jo
andl
push
leave
pop
xchg
adc
clc
mov
add
jl
stos
and
sub
pop
add
and
bound
adc
jecxz
mov
popa
lock
lcall
add
adc
xchg
aaa
pop
je
inc
xchg
lods
xchg
sbb
test
jmp
pop
insb
shl
cmpsb
push
call
pop
loop
or
fsubr
test
cmc
enter
out
fs
fcmovnb
mov
sub
outsb
in
xchg
mov
outsb
lds
mov
inc
arpl
call
ljmp
sbb
mov
fyl2x
clc
mov
add
add
inc
test
ret
notb
pop
xchg
pushf
dec
fcomps
xchg
push
or
mov
shll
xor
outsb
in
xchg
ret
jle
inc
pop
lods
xchg
cmc
mov
popf
xor
in
or
cmpsb
lods
ficompl
dec
push
in
xchg
and
pop
pop
roll
add
je
or
call
add
mov
inc
insb
add
adc
inc
xchg
jns
add
mov
cmc
jo
inc
or
mov
sub
insb
push
scas
and
pop
shlb
and
mov
sub
popa
jne
inc
out
pusha
jno
xor
repnz
dec
or
push
cmpsb
mov
inc
add
add
mov
pop
push
inc
and
xor
xchg
shrl
mov
mov
add
dec
jo
push
push
divl
jbe
repz
cs
rol
jecxz
mov
adc
mov
outsb
sbb
mov
adc
popa
roll
rcrb
dec
or
adc
jl
add
add
out
cmp
add
addr16
jb
mov
and
jo
and
orb
pop
mov
xor
test
adc
adc
mov
outsl
and
push
xchg
xchg
sbb
stos
aam
cs
mov
add
jecxz
addb
cltd
add
ljmp
add
add
dec
subl
int3
clc
dec
jg
stc
fadds
mov
int3
sub
loop
call
fisttpll
mov
xchg
push
cli
insl
or
aas
xor
xchg
and
repnz
push
test
sar
std
jecxz
and
clc
jno
sbb
adc
inc
push
ds
mov
addl
outsb
in
push
xchg
add
jnp
jae
pop
loop
xor
push
adc
mov
loope
stos
pop
setge
sub
inc
adc
inc
adc
loop
add
test
or
inc
jb,pt
lds
arpl
lods
cmpsl
jle
inc
jbe
mov
and
fdivl
pop
add
add
int
and
and
push
ljmp
pop
sub
xor
stos
and
repz
or
fidivrl
and
or
repnz
cmc
pop
pop
jno
jl
sub
pmullw
sti
push
outsl
add
into
cmp
dec
fdivl
and
into
lahf
in
jecxz
xchg
xchg
sub
or
jg
add
add
sub
adc
or
xchg
jo,pt
into
mov
xor
push
pop
xchg
flds
btr
sbb
sub
sub
sti
mov
in
push
xchg
jo
xchg
in
mov
and
jo,pt
adc
jo,pt
ljmp
sti
popa
ds
add
add
xchg
add
adcb
xchg
pop
xchg
mov
mov
shll
mov
jle
or
xor
jmp
mov
mov
sub
mov
cmp
fstpl
hlt
hlt
push
xchg
mov
fldenv
mov
or
aas
scas
push
lret
mov
stos
mov
add
in
ja
fisttpll
jae
in
or
into
cmpsb
out
cmp
cmpsb
or
pop
ljmp
aad
outsb
ficomps
pop
bound
pop
dec
jbe
pop
push
pop
pop
popw
push
aam
pop
sbb
je
pop
dec
fs
push
gs
lock
or
add
xchg
cwtl
stos
popf
jbe
dec
sbb
xchg
and
xchg
repnz
add
mov
push
push
aad
sub
and
and
outsb
adc
pop
repnz
mov
adc
add
sbb
int
add
adc
jno
inc
jo
daa
sub
xor
inc
jg
ja
inc
jmp
xchg
xor
add
inc
sbb
jae
es
xchg
xor
inc
add
add
adc
add
stos
add
stos
xchg
push
adc
enter
sahf
or
stos
mov
lret
scas
pop
push
sahf
pop
pop
cld
pop
scas
outsb
mov
cmc
add
lret
push
and
icebp
int
insl
repnz
pop
sti
push
sbb
inc
lcall
push
data16
xchg
inc
jg
and
mov
xchg
jp
das
cwtl
cli
add
add
vpmovmskb
jo
popaw
push
xchg
jno
dec
ds
rorl
sti
lds
push
push
cli
mov
xchg
mov
mov
cmovs
push
gs
push
adc
jg
sti
mov
test
jb
mov
ja
sub
cld
cmp
push
mov
test
jo
cmp
adc
add
ret
push
jecxz
in
xchg
fwait
bound
sahf
bound
pushf
pop
and
jmp
inc
jne
stos
inc
adc
lcall
fimull
add
push
das
adc
stc
mov
lock
pushf
lds
adc
or
shll
or
inc
popf
push
jecxz
jp
dec
sub
sarl
addl
add
and
dec
pop
adc
rcrb
pop
insl
mov
pop
in
in
push
and
and
jno
push
daa
cltd
faddl
leave
gs
or
dec
sbb
imul
dec
ret
sbb
cltd
fldenv
pop
add
add
nop
mov
outsb
or
mull
mov
mov
mov
add
shr
ja
div
and
hlt
and
dec
hlt
mov
test
cs
fs
insl
jmp
push
gs
add
cld
js
sar
ret
jg
aad
mov
ss
inc
pop
cmp
sti
push
pusha
inc
outsl
mov
add
cwtl
and
xchg
pushf
and
pop
sar
jmp
add
std
js
ror
or
mov
std
addr16
outsl
xorb
adc
push
xchg
xchg
ss
out
mov
ja
adc
pop
lods
adc
cs
jmp
out
movlps
or
sbb
add
mov
test
add
sbb
inc
insl
inc
lcall
push
xor
pop
ds
xchg
mov
or
test
push
or
push
cmc
inc
sahf
mov
pop
push
adc
jno
mov
scas
jl
shll
or
lods
and
repz
dec
push
or
hlt
mov
lret
sbb
dec
jns
mov
add
add
adc
mov
nop
cltd
fcomps
lea
cli
js
addr16
pop
jecxz
repnz
mov
or
and
xchg
rorb
adc
or
and
xlat
pop
adc
add
xchg
pop
jo
mov
xchg
lea
xchg
and
fildl
xchg
es
idivb
jecxz
add
cmc
xchg
rcrb
ljmp
loope
and
fcmovnu
dec
insl
aam
dec
mov
adc
cmp
lods
insl
in
xchg
popf
push
pushf
loope
test
dec
mov
adc
repnz
mov
mov
lods
inc
push
mov
cmc
sbb
in
sub
mov
and
repz
dec
jb
clc
adc
lea
add
mov
insl
hlt
sub
out
stc
es
out
out
into
cmp
jno
out
or
mov
in
movsb
test
or
mov
movsl
mov
xchg
jno
jns
mov
push
add
ret
jbe
outsl
daa
xchg
adc
xchg
jno
dec
mov
cmp
xor
add
sub
mov
jbe
dec
mov
mov
xor
push
cmpsl
or
iret
mov
incl
add
xor
stos
pop
data16
imul
psadbw
js
xchg
fsubrp
or
push
push
in
or
ret
adc
dec
mov
sti
shll
nop
cli
jno
xchg
arpl
pop
insb
xor
add
lock
or
pop
cwtl
jno
jmp
add
xchg
fidivl
xchg
and
movsl
mov
pop
inc
xchg
mov
cmpsb
pop
insl
adc
jbe
xchg
cmp
cltd
or
xchg
aad
xor
sti
adcl
stos
outsl
mov
jl
data16
pop
and
popf
mov
add
add
stc
mov
xchg
ljmp
xchg
lahf
or
stos
out
adc
lcall
adc
and
pop
add
dec
add
orb
and
xchg
mov
stos
stc
test
or
negb
push
icebp
clc
cmp
push
jb
pushf
loope
in
lock
add
add
sbb
in
out
bound
ret
das
jl
xchg
es
cmp
movsb
lods
push
cwtl
enter
loope
in
adc
inc
insl
adc
xor
push
inc
sub
dec
insl
adc
call
inc
icebp
lods
inc
adc
xchg
and
xor
push
inc
icebp
lods
es
mov
cmc
jl
mov
hlt
jl
add
add
and
sti
or
inc
test
xchg
scas
add
clc
mov
repz
mov
rolb
shlb
cmp
test
bound
cmc
push
fwait
xor
repz
inc
pop
repnz
rclb
or
mov
icebp
les
add
pop
push
xor
and
lret
out
rorb
movsb
shl
repnz
and
pop
xor
subb
add
sarl
incb
negl
loopne
clc
repz
mov
push
add
cwtl
shll
xchg
lds
sbb
mov
mov
cmpsl
jbe
jmp
inc
add
add
add
add
in
mov
kmovw
pop
stos
jns
xchg
dec
popf
push
loopne
mov
add
daa
cmpb
add
cltd
and
xchg
xchg
xchg
cltd
pop
xchg
xor
push
or
jp
mov
xchg
test
daa
ret
push
imul
ficompl
cmpsb
sub
jmp
addb
add
lahf
outsl
pop
or
dec
xor
int3
fwait
mov
push
enter
icebp
insl
xchg
pop
xchg
iret
xchg
jo
adc
setns
xchg
mov
jmp
xorb
jo
gs
cmp
scas
insl
sub
outsl
mov
mov
fisubl
aas
imulb
xchg
lods
je
add
add
lea
dec
dec
pusha
jo
push
test
mov
xchg
xchg
xlat
mov
cmp
push
push
jmp
sbb
shrl
sbb
pop
call
outsb
fisubrs
cltd
bound
fsubr
test
shll
outsb
add
ret
inc
pop
repz
mov
jl
add
add
add
adc
push
bound
bound
pusha
xchg
push
outsb
aaa
scas
popa
or
jmp
adc
daa
cmpsb
dec
dec
and
adc
out
lea
push
sti
inc
rcll
adc
add
mov
sbb
or
pop
sub
out
add
pop
and
add
mov
ret
xchg
rclb
jo
cs
popf
std
cmp
hlt
daa
push
dec
jo
sub
push
rorb
jp
cmp
xor
mov
or
fsin
jmp
jo
add
dec
jo
sbb
push
or
lahf
adc
or
adc
dec
mov
mov
add
subb
xchg
ficoml
add
es
rcrl
mov
add
and
lret
add
or
int
dec
pop
fdivp
add
pusha
sbbl
shlb
int
mov
jp
or
xchg
and
out
sbb
sbb
imul
add
adc
xlat
pop
mov
mov
xchg
mov
ss
or
test
mov
sub
and
sbb
xlat
mov
shlb
scas
pop
and
inc
and
adcb
lret
dec
lock
and
pop
data16
cmpsl
cmp
mov
movsb
lods
fadds
add
sahf
fxsave
mov
adc
lea
mov
nop
cmp
loope
mov
inc
movsb
lods
xchg
push
lret
loope
jp
dec
imul
cmp
jo
les
add
push
in
push
or
mov
mov
pop
jecxz
add
ret
lahf
loope
add
and
cld
cli
into
add
cwtl
movsb
xor
inc
push
stc
dec
pop
sub
ror
xchg
mov
repz
aaa
mov
push
adc
iret
add
cmp
in
xchg
mov
je
push
or
and
inc
pop
pop
in
fsts
inc
ret
jg
adc
loope
in
add
mov
mov
mov
movsb
mov
mov
xchg
out
push
iret
xchg
aas
movsl
cmp
lds
movups
mov
subb
xchg
dec
jo
lahf
xor
ja
mov
lods
idivl
adc
xor
mov
lcall
push
jo
or
aam
fcoms
fistpll
les
xchg
add
pop
aam
inc
cli
mov
sbb
mov
pop
mov
or
xchg
pop
andl
lea
push
roll
add
mov
jp
and
xor
dec
lcall
dec
mov
sub
push
jg
mov
sbb
ret
sbb
loop
xlat
dec
jae
push
cmp
add
inc
rclb
add
insl
ljmp
cmc
dec
imul
cmp
sbb
loope
ja
add
and
xchg
stos
sub
fidivrl
inc
xchg
and
ret
leave
push
dec
adc
pop
pop
shrl
mov
or
ds
fs
xchg
fmuls
push
push
xor
dec
cmp
hlt
mov
pop
lds
scas
cwtl
mov
mov
push
in
xchg
movsb
mov
in
add
add
jl
es
sti
mov
aad
mov
ljmp
adc
sti
cld
sub
insl
sbb
push
cmpsl
imul
jmp
mov
add
jne
mov
mov
and
daa
outsb
cmpl
loope
or
loope
cmpsl
aaa
aas
xor
loopne
add
mov
xchg
add
inc
addr16
mov
insb
mov
cmpl
jne
test
or
das
insl
lret
push
fdivl
add
push
repz
loop
cmp
add
shlb
int
mov
repnz
inc
out
and
adc
movsl
int3
jo
inc
lock
pop
int3
sti
xchg
mov
rcrb
or
mov
sarb
sti
jecxz
inc
not
dec
pop
adc
cmp
pushf
or
je
push
ss
andb
jbe
mov
mov
xchg
jb
push
repz
jecxz
and
inc
pop
call
int3
sti
xchg
sbb
push
sbb
add
jnp
arpl
cmp
push
dec
call
xor
sti
xchg
jno
in
add
pop
adc
cmp
add
lcall
cld
push
and
mov
fldenv
or
nop
mov
xchg
filds
stos
imul
push
insb
sti
and
lret
mov
cmp
repnz
jo
cld
insl
mov
cmp
or
and
rcll
jbe
add
add
xlat
dec
inc
xchg
and
xchg
pop
push
sti
xchg
arpl
shll
xchg
push
push
clc
sbb
and
pop
jne
in
xchg
stos
stc
shll
and
leave
xchg
aad
adc
lods
push
dec
xchg
and
mov
cli
je
sub
mov
push
cmp
and
movsl
mov
shll
in
add
add
push
lods
mov
les
lcall
in
in
cmp
fidivrs
sbb
outsb
cmp
mov
dec
ja
add
int
cli
out
sti
mov
sbb
pop
and
adcl
stc
inc
lret
sbb
mov
xchg
mov
mov
or
in
in
jmp
sti
add
shrb
add
add
clc
and
and
cmp
outsb
inc
mov
test
insb
and
das
in
add
jecxz
cli
cmp
loope
test
sub
fldcw
mov
cmp
inc
out
mov
fisttps
inc
fwait
add
add
jb
jo
mov
mov
cmpb
clc
addb
add
push
adc
inc
ret
and
out
fimull
add
out
or
loope
add
testb
sbb
jbe
mov
sub
sbb
sub
xchg
xchg
outsb
cmp
mov
push
fisttps
push
and
push
pop
dec
mov
and
mov
jg
push
and
add
add
add
add
and
jmp
xchg
bound
pop
test
inc
bound
mov
or
aaa
sub
stos
test
repnz
and
and
or
jp
fildl
sbb
and
xchg
pop
xchg
daa
xchg
pop
xchg
cmp
pushl
adc
out
mov
das
mov
mov
add
add
int
pop
push
or
xchg
and
sub
sbb
not
xlat
cli
test
cltd
xor
xchg
xor
in
xchg
and
outsb
in
xchg
insl
in
aad
add
push
push
xchg
inc
xlat
fprem
leave
add
sub
dec
mov
cli
test
or
add
add
jp
test
lcall
xchg
mov
fsub
es
call
std
lods
test
or
xchg
je
icebp
bnd
adc
push
pop
ret
and
push
and
pop
inc
stc
xchg
push
clc
daa
outsb
jns
cmc
fcompl
das
repz
movsb
sti
mov
lods
pop
add
add
lock
push
add
or
ja
cwtl
loopne
daa
outsb
push
hlt
fcoms
das
dec
inc
mov
jne
outsb
repnz
lods
mov
mov
cmp
bound
jnp
ret
jo
pop
pusha
js
testb
insb
cmp
mov
mov
push
pop
aad
ret
push
inc
fwait
lcall
test
add
add
xor
pop
push
cmp
mov
cmpsb
xchg
pop
scas
aas
push
cltd
mov
orb
xorb
cmp
decb
mov
sbb
inc
jae
stos
xchg
sbb
pop
push
and
inc
lea
xchg
mov
push
sbb
outsl
pop
xor
data16
add
int3
or
and
inc
add
add
mov
orb
and
pop
mov
popf
jmp
jno
xor
lock
inc
inc
sahf
mov
jne
out
mov
repnz
fs
cmp
sbb
sbb
sub
push
sub
mov
cld
rorl
add
add
adc
in
adc
les
lcall
sub
cmp
xlat
mov
loopne
lock
cs
adc
push
cmp
in
stos
pop
pop
mov
dec
xchg
es
sub
xchg
xchg
fiadds
out
andb
stos
int
xchg
add
clc
out
pop
clc
faddl
add
sbb
push
icebp
jge
jge
jmp
mov
aas
lahf
cmp
imul
inc
test
add
and
lret
xchg
adc
mov
mov
rolb
sbb
aam
shll
mov
iret
xchg
mov
xor
hlt
pop
fwait
or
push
negb
push
repnz
add
div
xlat
and
sub
jl
int3
jp
mov
popa
jl
sub
sub
stc
push
and
loope
clc
dec
ret
cmp
sub
or
push
sub
cmpsb
psubb
shll
test
lds
ret
daa
mov
jl
add
not
or
and
xor
clc
jmp
in
cld
add
add
out
mov
adc
icebp
cmp
jmp
jbe
push
std
mov
cltd
push
and
movsl
or
ret
push
jecxz
xor
outsl
and
push
clc
push
shll
jno
lods
pop
dec
test
xchg
pop
xchg
mov
shrl
jmp
adc
mov
mov
add
add
cmc
or
fldt
adc
jmp
shll
fcoml
ja
xchg
and
out
push
or
test
lret
and
ljmp
lcall
adc
insl
leave
mov
and
out
mov
lods
dec
sbb
inc
or
sbb
insl
add
add
add
xor
dec
es
or
push
sarl
movsb
test
mov
addr16
or
push
or
push
mov
pop
or
popa
inc
jb
dec
das
divl
push
popl
cltd
cmp
lret
xor
sti
into
sub
push
imul
call
or
add
repz
repnz
add
add
leave
popa
and
push
xchg
push
scas
out
ficompl
xchg
lret
sub
loopne
fadds
std
push
aaa
push
popf
mov
imul
lea
popa
lea
lea
mov
jae
add
adc
xchg
cmc
hlt
lret
xchg
mov
sub
lahf
popf
mov
pop
ljmp
cmp
add
add
lods
stc
js
pushf
addl
mov
scas
adc
mov
lds
push
add
icebp
mov
push
or
dec
and
rorl
pop
or
cs
sub
cmp
xor
sbb
jb
xchg
push
jle
ficompl
push
fwait
jle
stos
cld
jno
sarb
sbb
mov
pusha
mov
add
or
insb
xor
daa
sub
fld
and
mov
daa
xchg
in
cmc
mov
adc
mov
xchg
mov
sahf
pop
push
mov
push
xchg
pop
xchg
cwtl
xchg
push
sbb
int3
mov
adc
test
daa
sbb
int
icebp
mov
arpl
stos
xor
add
gs
add
add
loope
pop
out
push
add
fnstenv
add
and
aam
test
lret
jnp
sbb
jg
sub
mov
arpl
sbb
jb
scas
daa
insl
push
pop
das
repnz
mov
xchg
push
das
mov
pop
cmp
clc
mov
adc
mov
fs
pop
out
mov
xlat
add
add
mov
data16
mov
push
into
out
in
mov
and
lcall
repnz
es
mov
popf
or
or
sub
and
stc
sub
mov
pop
fiadds
add
rclb
jg
jle
leave
jne
shlb
mov
sti
scas
mov
add
jmp
xchg
rcl
xchg
cmc
loop
pop
shrb
rolb
push
lea
js
adc
mov
sti
das
mov
repz
dec
jmp
cmc
dec
dec
xor
sbb
icebp
repz
push
push
mov
adc
cli
and
sbb
lds
xchg
sub
inc
xchg
cmp
incb
add
stos
rcrb
sbb
mov
xor
lret
outsl
adc
test
icebp
jbe
push
out
test
dec
call
push
mov
sub
aas
popa
mov
sbbb
sub
pop
push
sbb
cmp
in
xchg
sbb
in
aas
and
jb
in
or
add
add
cmp
and
pop
adc
push
sbb
and
rcll
xchg
pop
xchg
cmp
decl
xor
ljmp
push
sub
int3
popf
mov
mov
xchg
xor
fcompl
out
les
test
jb
inc
push
adc
xor
jmp
cmp
scas
test
lcall
dec
or
outsl
sti
jecxz,pn
sbb
aas
icebp
pusha
in
cld
cmp
lahf
adc
negb
sub
inc
and
imull
or
and
aad
fwait
lock
xchg
sub
push
xchg
and
mov
or
repnz
or
test
push
mov
in
rclb
add
inc
mov
push
or
mov
or
sbb
stos
andb
aas
push
fdivr
insl
in
xchg
lods
movsb
xchg
or
sbb
inc
add
push
push
test
sahf
ljmp
outsb
in
lret
jb
sti
fs
faddl
popf
sti
push
xor
outsb
add
jbe
sti
add
add
mov
pop
insb
aam
call
hlt
cmp
fwait
rcr
outsl
sub
outsl
mov
xor
lds
jb
orl
and
fmuls
jns
aaa
loope
hlt
ret
int3
push
movsb
mov
push
xchg
fldenv
xchg
mov
enter
and
sbb
add
sti
testb
gs
in
hlt
sbb
or
shll
lcall
jecxz
ds
gs
ret
jmp
mov
jp
rorb
imul
sbb
sub
std
and
inc
and
or
adc
pop
test
sub
loopne
xchg
subb
xor
popa
xchg
into
mov
add
lea
loopne
in
testl
adcb
jg
insl
push
out
aam
sub
call
out
cmc
sub
or
and
rorl
sub
add
xor
mov
es
cltd
out
pop
in
pop
cmpb
mov
and
and
and
pop
add
add
adc
or
in
mov
cmp
add
xchg
outsb
in
push
jg
pop
sub
nop
sub
addl
and
mov
sbb
outsb
clc
xchg
stos
ja
out
mov
inc
outsb
pop
aam
xchg
ljmp
mov
in
jb
sub
negl
or
xchg
and
add
add
xchg
and
popf
sub
sub
sub
jbe
cmpsl
test
adc
divl
jle
xchg
movsb
out
mov
call
jo
jl
add
and
daa
negl
cmp
pop
ret
adc
jae
inc
jbe
sti
jbe
jae
clc
loopne
jle
xchg
or
add
jle
jae
push
sub
mov
dec
or
fs
in
cmpsl
dec
int3
lds
fwait
dec
adc
mov
scas
in
addr16
int3
lds
fwait
dec
push
pusha
mov
scas
in
xchg
push
push
mov
push
jo
cmp
xorl
cs
push
mov
xlat
daa
pop
cmp
add
sahf
xorl
out
adc
xchg
xlat
das
pop
cmp
out
jl
xor
mov
insb
xchg
xlat
out
cmp
stos
daa
mov
push
mov
push
cmpsl
or
stos
xchg
sub
movl
or
gs
dec
xchg
and
std
pop
es
jns
lods
pop
or
lock
or
add
adc
pop
lock
int
push
arpl
mov
jecxz
mov
jl
clc
or
pop
test
imul
ljmp
cltd
and
xchg
pop
pop
shlb
out
push
lds
push
push
pop
xchg
and
pop
sbb
push
add
jae
clc
rcrl
pop
and
add
fisubl
outsb
repnz
in
add
jbe
fnstenv
mull
xchg
mov
or
jbe
dec
mulb
lcall
inc
pop
bound
inc
lods
sub
in
sbb
add
outsb
pop
in
jne
je
inc
pop
mov
scas
cmp
inc
push
and
mov
fiadds
jmp
bound
adc
pop
jbe
add
lods
cmpsb
mov
leave
inc
push
pop
roll
ds
fdivs
mull
in
mov
insb
lcall
inc
insb
bound
cmp
mov
push
and
xchg
pop
addl
inc
xchg
inc
xchg
push
dec
add
in
dec
and
imul
out
or
iret
popf
xchg
add
add
inc
mov
cmp
repz
cmp
dec
sbb
imul
popa
hlt
je
sub
dec
adc
hlt
mov
aam
icebp
dec
lret
xchg
ss
push
push
jo
sbb
sbb
je
rorb
arpl
subl
aam
test
pushl
mov
push
mov
add
add
cmp
daa
xchg
push
mov
add
adc
scas
sti
cld
sti
mov
or
daa
pop
push
push
cmp
test
mov
add
iret
rcrl
add
inc
cltd
mov
sbb
pop
ja
dec
mov
cmpsb
pop
adc
adcb
adcl
cmp
iret
call
jecxz
inc
xchg
and
sbb
movsl
cmp
int3
mov
xchg
ret
lahf
sbb
lcall
icebp
sete
xchg
gs
pop
test
push
push
cmpsb
cmp
xlat
push
sub
shrb
roll
out
pop
jns
outsb
les
outsb
mov
push
pop
mov
pop
sub
dec
inc
jb
rorl
das
xchg
and
and
fwait
lcall
push
xchg
movsl
inc
adc
mov
and
pop
in
push
fdiv
sbb
in
inc
sbb
lcall
dec
test
fiaddl
icebp
pop
xor
sbb
leave
fbld
stos
xchg
dec
jl
lcall
jmp
add
add
outsl
cltd
subl
xor
int3
in
mov
jge
mov
mov
xchg
cmovl
fisubs
and
sti
mov
into
arpl
dec
insl
pop
inc
outsl
mov
pop
repnz
out
sti
jl
icebp
bnd
mov
jg
dec
add
jecxz
xchg
ljmp
movsb
sub
sti
insb
and
push
push
lods
fwait
add
and
out
imul
add
add
and
inc
lcall
lcall
adc
cld
and
int
es
add
cmp
pop
dec
push
xor
pop
icebp
jge
dec
sahf
or
rclb
cmp
sbb
sti
sbb
sub
pop
pop
xor
pop
xchg
mov
testl
mov
into
mov
mov
aad
push
xlat
cmpb
pop
jle
out
aaa
or
das
loop
cmpsb
mov
mov
stos
xchg
ss
pop
jo
adc
sti
inc
pop
cwtl
roll
js
dec
mov
ror
or
adc
inc
scas
pop
clc
and
sbb
xchg
adc
lret
pop
sbb
sub
add
add
xchg
cwtl
xchg
xchg
loop
jmp
push
jecxz
pop
insl
jb
stos
adc
jno
sub
test
popa
and
pop
add
bound
pop
push
aam
push
lcall
mov
adc
adc
mov
sbb
fstpl
rclb
outsl
jb
push
bnd
jge
mov
mov
cs
adc
outsb
shrl
add
je
mov
cmp
imul
fwait
push
add
jnp
int
lds
flds
push
movsb
mov
test
mov
xchg
es
push
add
mov
aas
dec
in
xchg
or
xchg
sbb
mov
inc
lds
mov
push
xor
pop
sbb
lods
fnstenv
outsl
jl
add
scas
and
pop
jb
sti
cmp
sub
pop
pop
out
shlb
dec
mov
vpcomd
pop
xchg
cltd
leave
imul
das
sub
pop
cmp
or
pop
push
hlt
in
add
cmp
xor
dec
in
sahf
sbb
add
aad
and
inc
add
xchg
lret
jno
add
mov
insl
mov
mov
mov
inc
xchg
movsl
sbb
or
xchg
and
mov
fwait
add
repnz
int
shlb
mov
pop
pop
push
jb
sub
xchg
adc
xchg
test
shl
dec
in
sbb
xor
lret
cmp
pop
adc
inc
push
in
push
outsl
add
add
fsts
add
daa
lcall
xchg
decb
sub
cmpsb
adc
xor
dec
mov
popf
push
and
mov
scas
stc
bound
mov
pop
mov
push
lcall
mov
lahf
sti
and
mov
imul
pop
and
pop
in
dec
adc
jnp
add
inc
cltd
fnstsw
cmpl
cltd
xchg
jle
dec
movsl
jle
dec
test
xchg
rcll
xchg
xor
xchg
subb
or
sub
add
jecxz
mov
es
xor
stc
mov
bound
stos
xchg
mov
mov
add
and
xlat
scas
and
add
add
mov
fildll
xchg
adc
pop
data16
arpl
add
and
mov
xchg
cwtl
dec
dec
ss
ret
mov
jb
in
xchg
adcb
and
xchg
rdpmc
out
mov
lock
stc
and
ss
sbb
jp
cmpsb
add
ret
mov
and
sub
lock
or
add
cli
and
fimull
mov
daa
pop
push
int
sub
fidivrs
ja
insl
mov
dec
add
sub
bound
add
dec
in
push
pop
jbe
arpl
pop
xchg
mov
test
nop
test
jo
sbb
mov
or
out
hlt
cmc
js
sbb
sbb
add
xchg
mov
sbb
cmp
std
and
outsl
jo
xchg
mov
sti
push
add
pop
loope
xchg
or
arpl
stos
jb,pt
rorb
sti
inc
mov
add
fnstenv
push
cmp
add
cmpl
push
sub
push
push
fcmovne
mov
das
pop
loope
mov
xchg
out
jb
mov
sbbl
popa
and
xorb
cmpsb
setle
sbb
loop
into
cs
dec
out
sub
clc
sbb
jge
sbb
std
xor
psubusb
xchg
jp
sub
mov
adc
imul
push
sbb
aad
xchg
xlat
sbb
adc
mov
movsb
push
or
push
mov
cmpeqps
add
jnp
test
push
push
xchg
pop
xchg
push
mov
test
subb
pushf
icebp
and
and
xchg
and
in
pop
fwait
outsb
cwtl
frstor
jp
xchg
xchg
mov
sbb
lods
fsubrp
negl
pop
cmpsl
and
adc
pop
xor
idivb
stos
pop
lcall
push
jo
push
xchg
jns
add
add
mov
jle
and
fs
pop
cltd
jne
cltd
std
pop
sub
cwtl
imul
pop
mov
rcrl
cwtl
lods
dec
outsl
mov
or
ss
aas
push
inc
xor
pop
cs
inc
inc
loop
inc
daa
enter
testb
xor
lods
cmp
add
add
out
add
sbb
add
jne
dec
sub
pop
movsb
pusha
int3
push
je
or
out
mov
hlt
lods
adc
sti
xor
insl
and
jg
repnz
adc
fcompl
jg
jb
jl
jg
lret
jo
adc
movsl
dec
hlt
int3
xchg
add
xchg
xor
jmp
xor
outsl
adc
scas
mov
inc
ljmp
stos
or
and
das
bnd
cs
sub
add
lods
orb
push
fcmovnb
dec
sbbb
dec
aaa
mov
sahf
xor
cmp
xchg
inc
repnz
inc
int
decb
xorl
adc
adc
push
pop
add
add
and
insb
mov
xchg
dec
int3
mov
aad
sub
push
push
out
pop
mov
jae
shlb
add
pop
jns
lds
hlt
add
hlt
pop
popf
popa
in
xchg
mov
xchg
pop
xchg
mov
test
lret
xchg
pop
xchg
lahf
cltd
sbb
and
pop
adc
push
addl
add
sbb
push
test
es
cwtl
repnz
lret
mov
insl
int3
mov
sar
or
shr
and
icebp
push
xchg
and
push
xchg
dec
outsb
adc
adc
rcrl
lret
jnp
or
fdecstp
cmp
sbb
outsb
lret
and
push
call
xchg
loop
lcall
lods
psllq
or
test
xor
or
rorl
push
stc
adc
jge
ficoml
add
sub
dec
fwait
sub
mov
cmp
repz
pop
test
andb
and
das
and
mov
jmp
pop
mov
mov
inc
xchg
js
add
add
jge
scas
mov
inc
lcall
pop
and
lcall
rcrb
push
repz
mov
lods
pop
sub
shr
bnd
mov
push
push
lret
jbe
or
xchg
jmp
pop
and
inc
add
pop
faddl
or
sti
xchg
aaa
lahf
decb
add
xchg
jns
jo
inc
mov
sub
and
or
dec
mov
adcb
sub
push
stc
jg
push
stc
inc
mov
sub
setne
sbb
sub
inc
push
mov
push
jle
sub
out
cld
jo
imul
xchg
and
xchg
mov
movsl
push
fldl
add
or
adc
inc
xchg
inc
jb
or
subl
nop
pop
cmp
lea
les
ljmp
fstpl
inc
xchg
and
scas
mov
pushf
fsubrl
scas
std
cli
inc
or
add
sbb
inc
push
fs
in
mov
cld
xor
inc
clc
and
inc
push
or
add
add
push
xchg
jg
popa
outsb
in
xchg
jae
mov
cmpb
jae
lock
sbb
in
cmc
into
jns
xchg
mov
insl
and
jl
xchg
or
fnstenv
lret
pop
into
push
nop
popa
outsb
fwait
jle
pop
fists
imulb
sbb
jle
inc
adc
inc
bound
pop
loop
fmulp
mov
add
add
lahf
stc
and
push
mov
xchg
jl
xlat
or
leave
xchg
ja
add
and
add
movl
and
dec
mov
jge
daa
sbb
add
repz
cmp
mov
mov
aas
xor
add
mov
aas
jp
jno
mov
mov
add
add
and
add
inc
jb
sub
mov
mov
sbb
bound
fucom
mov
sbb
cmp
and
gs
sub
mov
outsb
add
cld
outsl
movsl
shl
lret
sti
sub
dec
cmp
incl
imul
mov
sbb
inc
dec
call
into
inc
jo
add
push
repz
icebp
repz
lcall
les
or
xchg
pushf
inc
adc
jecxz
sti
adc
jae
fisttpl
jae
lret
repnz
inc
xchg
push
jo
push
repnz
push
or
adc
xchg
cmp
pop
xchg
xchg
xor
add
mov
dec
xchg
pop
xchg
stos
aad
add
add
jmp
push
rclb
xchg
rorl
cmp
mov
add
jl
jno
jle
xor
insb
cmp
xchg
rcrb
or
stos
addl
jne
xchg
pop
bts
cmp
out
pop
les
xchg
pop
add
jns
xchg
jns
mov
or
inc
cld
add
cmp
outsb
jmp
add
add
scas
push
out
xchg
and
cs
jge
scas
mov
inc
outsb
jbe
pop
xchg
push
decb
std
lret
stos
jge
and
mov
popa
xor
jae
and
in
mov
hlt
scas
out
xor
test
add
stc
fwait
xchg
or
xchg
push
xchg
inc
fdivr
mov
add
add
add
out
xchg
and
outsb
add
fimuls
std
and
cmp
sbbl
cmp
mov
scas
sub
adc
mov
lcall
iret
movsl
cmp
pop
scas
mov
xor
hlt
ret
jae
dec
fisttps
std
sarb
dec
adc
cmp
cmpl
add
sub
das
cld
movsb
call
xchg
cmp
xor
repnz
or
xor
dec
or
ret
inc
push
dec
xchg
dec
or
ja
cmc
adc
jno
xchg
or
jo
sbb
mov
mov
popl
jge
cmpsl
push
add
add
nop
stos
stc
orl
jo
jae
jecxz
or
xchg
stc
pop
paddd
cltd
push
jo
push
das
ret
daa
lcall
inc
testl
mov
loope
ret
mov
sti
add
adc
add
or
cmpsl
xor
dec
xchg
pop
xchg
lods
fcmovbe
int3
jns
or
add
scas
mov
add
or
shrb
add
pushf
pusha
mov
cltd
and
sub
xchg
lods
leave
jecxz
jns
andb
pop
and
in
aad
mov
mov
push
or
sbb
outsb
in
xchg
push
negl
jp
outsb
loop
sti
roll
and
mov
add
out
pop
xchg
pop
xchg
cld
mov
imul
push
xchg
cld
mov
cmpsl
mov
imull
popf
mov
xchg
xchg
push
mov
mov
mov
mov
decb
in
bound
mov
xchg
and
decb
jns
inc
repz
rcl
and
popa
stos
mov
push
clc
and
add
cwtl
pop
inc
adc
and
iret
mov
xchg
jl
xor
outsl
ss
sbb
jbe
sub
outsb
add
inc
sti
loope
bound
loop
mov
xor
outsb
lods
frstor
sti
mov
push
pop
sti
loope
bound
loop
mov
icebp
les
cmc
lret
mov
outsl
sbb
mov
out
and
add
add
add
in
xchg
sub
in
iret
outsl
add
and
bound
add
add
out
jo
incl
inc
xchg
mov
pop
mov
add
add
adc
data16
inc
lret
repnz
jle
jo
push
or
dec
adc
pop
lahf
jp
jb
xchg
mov
sti
test
hlt
push
add
add
inc
xchg
jno
xchg
or
hlt
add
lock
jno
pop
jno
repz
or
outsl
push
out
ss
cmp
cmp
fldcw
add
inc
leave
add
gs
cli
push
out
sub
adc
pcmpgtb
cmc
sub
xchg
push
xchg
and
add
push
pop
mov
mov
cld
add
gs
pop
fisttps
sbb
rcll
and
cmc
hlt
xchg
jb
pop
int
and
adc
popa
jns
stos
shl
scas
push
outsb
sub
in
xchg
and
pop
lods
xchg
mov
mov
xchg
and
jnp
pop
dec
pop
sub
push
in
add
add
popa
or
roll
pusha
push
js
push
test
outsb
pop
aad
cmp
xchg
movsb
xor
xchg
jl
loope
push
sbb
push
scas
gs
xor
cmpsb
push
mov
jge
movsb
outsb
add
add
daa
outsb
add
xor
sti
fildl
dec
add
add
add
outsl
add
dec
std
or
mov
xorl
adc
decb
jno
dec
mov
add
jne
inc
outsb
outsb
out
cwtl
mov
cltd
stc
mov
sub
add
dec
outsb
jno
js
out
mov
mov
outsb
dec
mov
in
data16
ljmp
cmp
jnp
and
add
jg
sbb
pop
sbb
sbb
imul
orl
outsl
push
inc
icebp
push
pop
or
mov
or
call
mov
outsl
ljmp
ja
addb
or
xchg
or
jnp
and
sti
loopne
mov
or
xchg
stc
xchg
or
jno
mov
daa
add
add
lock
cltd
or
push
dec
jnp
add
inc
mov
xchg
rol
pop
and
mov
test
jb
add
and
sub
adc
cmp
push
stos
jno
jmp
add
and
xlat
sbb
jns
and
sbb
popf
es
add
lahf
add
add
add
mov
sbb
mov
dec
add
add
aam
add
ret
pusha
pop
xlat
cld
mov
or
pop
dec
enter
adc
pop
cwtl
push
mov
push
sti
add
subb
icebp
andl
stos
ja
cmp
shr
xchg
and
outsb
in
push
inc
leave
aas
outsb
adc
add
xchg
mov
add
xchg
icebp
aas
add
loop
add
fdivrp
popa
xor
cwtl
outsb
in
cmp
sub
daa
push
jbe
inc
inc
lcall
hlt
outsb
adc
icebp
aad
repnz
add
mull
mov
icebp
add
push
pop
pop
mov
mov
sar
dec
xchg
sub
mov
jecxz
cs
call
add
add
mov
adc
in
sbb
mov
in
jecxz
mov
jp
in
mov
mov
cli
aam
adc
adc
add
jbe
jno
jns
and
sbb
and
and
mov
or
sti
fs
mov
sub
push
lret
rcrb
dec
jmp
out
idiv
ds
les
xchg
jo
and
mov
jecxz
add
xchg
mov
stc
stos
sbbb
repz
addr16
dec
push
sub
xor
xchg
push
jo
jae
dec
shlb
jmp
fsts
cmp
jno
addr16
push
push
or
addr16
dec
out
push
adc
leave
stos
sti
data16
ljmp
dec
pusha
inc
xchg
jae
sbb
ljmp
add
push
or
sub
and
adc
adc
sbb
insl
add
and
ret
imul
test
push
adc
pop
loopne
mov
jmp
test
jnp
call
jnp
mov
push
sub
pop
sbb
mov
into
pop
aad
add
add
in
sti
int3
pop
dec
fmul
adc
inc
xlat
jo
popf
add
scas
cltd
jg
jb
in
gs
hlt
outsb
sbb
xchg
popa
bound
lock
popa
cltd
test
outsb
jb
add
push
popa
xchg
cmp
lretw
fstps
outsb
push
movhps
dec
xchg
popa
bound
add
mull
add
add
and
xchg
out
out
mov
jae
imull
push
fnsave
leave
jmp
push
test
mov
lods
xchg
xor
add
mov
adc
sub
lock
adc
icebp
les
push
cs
inc
add
outsb
aaa
and
xchg
mov
adc
mov
add
add
dec
hlt
hlt
cli
inc
incl
mov
mov
sbb
dec
adc
ret
pop
loope
sti
jo
outsb
push
nop
and
adc
es
les
jecxz
arpl
cmp
jnp
out
insl
lods
out
push
movsb
mov
pusha
push
mov
xchg
rdmsr
pop
inc
inc
lret
pop
aam
outsl
bound
cld
push
jne
cld
outsl
add
in
add
add
cld
jb
imul
stos
lods
cmpl
xchg
dec
jb
push
std
out
jle
push
std
imul
outsl
add
aaa
jno
stos
push
pop
inc
xchg
fwait
push
adc
scas
sti
adc
imul
shll
cs
sti
sbb
data16
xchg
cli
add
push
lods
add
add
popf
sub
dec
xchg
orb
rclb
sub
push
and
lods
ror
and
inc
xchg
and
mov
push
mov
movsl
jp
xchg
lock
das
setbe
inc
mov
movsl
ficompl
insb
popf
fisubl
loopne
xchg
das
pop
loopne
pop
adc
icebp
pop
cs
cli
sbb
lock
das
lahf
stos
xchg
pop
add
add
sbb
inc
pop
in
lods
stc
jnp
mov
sbb
ljmp
sbb
cmp
std
icebp
fwait
xchg
and
mov
jge
icebp
in
xchg
or
push
xor
test
popf
xor
push
mov
or
test
cs
pop
sbb
push
and
pop
mov
add
jmp
push
sub
outsb
push
in
mov
aas
scas
lods
fisubl
es
shr
cwtl
jns
aas
add
cmpsl
lret
or
mov
out
mov
js
imul
push
enter
scas
sub
ror
hlt
inc
xor
xor
mov
xor
xchg
mov
xor
add
add
jecxz
mov
repz
jmp
xor
out
lea
hlt
inc
adc
lea
out
or
lock
repnz
or
popl
push
or
xchg
shll
bswap
xchg
gs
enter
cmp
inc
stos
cmpl
dec
mov
or
test
cmp
sub
add
aam
enter
pop
xchg
bound
cs
sti
mov
sbb
call
xchg
sete
mov
pop
popa
push
in
inc
jb
popf
jmp
lock
pop
xchg
sarb
mov
hlt
push
sti
cmp
call
movsb
call
fs
jp
fistpll
pushf
shlb
add
add
push
push
xchg
loop
adc
pop
mov
push
fldln2
push
sbb
int3
pushf
cltd
out
xchg
add
dec
add
pusha
test
test
data16
fistps
sbb
sbb
sbb
inc
lea
jmp
push
and
jl
and
outsb
xor
add
or
xchg
in
inc
lock
push
dec
jbe
or
mull
insl
popf
rorl
mov
outsb
outsb
mov
pop
cwtl
inc
movsb
test
cmp
jnp
imul
aas
mov
xlat
push
divl
xchg
in
fwait
hlt
ret
jno
fsubrs
out
or
dec
in
push
mov
xchg
cmp
insl
push
jnp
aad
mov
inc
pop
mov
add
add
cmp
jb
add
push
add
add
rolb
movb
lock
sti
add
cli
dec
pop
lock
mov
sahf
cld
mov
popf
lret
outsb
out
lahf
sub
fcoml
dec
adc
pop
jge
rcrb
jp
lret
sub
in
adc
mov
mov
add
add
test
call
add
xchg
sbb
sti
dec
daa
pop
inc
jg
lret
jo
pushf
cmp
xchg
fs
fsts
imul
adc
jecxz
sbb
push
or
ret
popa
lcall
or
cld
hlt
mov
jg
incb
mov
incb
into
scas
sti
dec
ja
pop
add
add
mov
push
pop
xor
pop
or
into
scas
sti
sbb
repz
test
jns
out
sub
inc
jp
outsl
add
mov
jb
cmpsl
mov
jmp
std
lods
mov
and
orb
xchg
test
jo
mov
adc
inc
fmull
dec
lock
adc
stc
mov
add
les
cmp
mov
push
ljmp
cld
paddsw
mov
adc
adc
fstl
jae
movsb
hlt
rcrl
push
add
in
add
in
lret
lds
pop
pushf
push
sub
pop
int
xchg
and
test
mov
push
andl
sub
aad
jl
add
add
pusha
lods
xchg
sbb
es
test
add
mov
push
push
jmp
daa
xor
push
testl
lock
xchg
lea
mov
in
outsb
pusha
push
sbb
js
and
push
or
mov
mov
cs
cmp
sbb
call
sbb
in
icebp
movsb
andl
add
add
add
add
lcall
ret
sti
bound
sbb
cld
mov
and
les
mov
fdivr
unpcklps
and
repz
icebp
add
popa
ljmp
sub
dec
fisttps
inc
jmp
jo
mov
outsb
ja
push
outsb
out
hlt
mov
outsb
push
das
lahf
and
xor
xchg
in
sub
add
fcoms
jns
mov
pusha
and
sti
and
aam
imul
cld
or
add
xlat
push
or
mov
mov
push
scas
fsin
dec
sub
mov
js
std
jbe
push
inc
xor
in
push
or
cmp
call
ud1
adc
stc
sbb
mov
fmull
jmp
lock
mov
inc
jb
xchg
jno
daa
cmpsb
or
cmc
and
mov
cltd
inc
dec
dec
mov
cwtl
push
in
push
insl
add
push
sbb
mov
mov
out
jnp
gs
test
jno
fldln2
inc
movsl
mov
inc
xorl
add
add
sbb
cmpsl
adc
or
adc
cltd
mov
inc
jecxz
push
and
inc
xlat
xchg
pop
sbb
shll
icebp
data16
jne
and
outsb
mov
addr16
insb
push
and
jne
sub
xor
mov
xor
lods
and
lock
and
add
sbbb
push
sub
mov
loope
pop
jge
mov
mov
adc
sub
push
in
mov
xor
sbb
in
xor
mov
ja
mov
sub
je
mov
imul
lcall
jnp
pop
cmp
add
scas
sub
add
repnz
jg
outsb
stos
lds
leave
lods
aaa
and
idivb
enter
and
movsb
dec
adc
inc
pop
scas
das
and
das
and
cmp
pop
inc
pop
inc
aas
movsl
scas
or
stos
das
and
hlt
inc
fcmovnu
and
fs
fisubl
jb
out
sub
jmp
inc
mov
out
xchg
and
add
cwtl
lods
das
and
xor
cli
ror
push
pusha
xchg
lret
daa
dec
or
xchg
inc
jecxz
inc
xchg
pushf
pop
xchg
jb
push
cmp
lret
sarb
xchg
stos
pop
ljmp
daa
mov
jecxz
or
add
dec
and
cmp
jp
mov
imul
pop
int3
incl
add
data16
incl
int3
bound
push
std
scas
sti
sbb
cltd
pop
test
sbb
pop
aad
or
xchg
mov
sub
xchg
pop
and
gs
cmp
lea
jne
cmp
gs
test
mov
pop
insb
dec
jns
xchg
and
sbb
fsubr
mov
add
sbb
test
inc
movsl
sub
inc
dec
out
jp
movsb
popa
nop
lcall
pop
cld
jp
dec
add
pop
jns
and
jnp
jns
mov
push
test
push
pusha
push
xchg
mov
movsb
jb
fsubrs
test
push
adc
imul
movsl
fucomi
mov
xchg
test
negl
xchg
pop
push
xchg
mov
enter
and
cmpsb
inc
scas
mov
ljmp
icebp
jge
fisttpl
lods
xchg
mov
jge
fisttpl
add
xchg
xchg
pop
sbb
xchg
mov
insb
ret
and
cmp
cmp
add
fcom
adc
lods
and
pusha
ljmp
idivl
adcl
sub
shrb
push
xchg
pop
xor
cli
call
stc
xchg
iret
das
mov
mov
divb
outsb
xor
ds
add
into
mov
push
mov
mov
ss
xchg
sub
pop
add
add
or
out
xchg
fwait
push
inc
fwait
pop
sub
insb
ja
push
mov
stos
push
lds
int
add
cltd
stos
into
lahf
pop
andb
gs
push
mov
mov
loope
lds
xchg
pop
adc
xchg
adc
aaa
in
addr16
jg
subb
mov
ja
int3
outsl
mov
add
fisubrl
xchg
sarl
decb
and
jb
or
and
xchg
pop
test
pop
js
or
add
sbb
xchg
and
jge
rcll
pop
adc
add
cmp
sti
pop
das
xchg
pop
xchg
sbb
in
mov
mov
imul
adc
add
add
xchg
jle
or
xor
fiadds
mov
xor
shl
dec
ds
in
outsb
loop
in
outsb
in
xchg
int
push
cltd
fcomi
mov
stc
mov
stc
jle
jae
rol
das
cs
pop
out
xchg
and
bound
add
aam
mull
mov
lods
das
or
add
mov
mov
jbe
or
sbb
and
push
cmp
notl
pop
adc
xchg
push
pop
mov
and
subl
inc
pusha
aad
and
mov
sti
dec
sbb
das
cmpsb
sbb
push
jmp
sub
in
and
sub
sti
cli
jo
inc
ljmp
pop
and
daa
insl
add
mov
sti
add
add
sub
sbb
call
inc
jno
pop
mov
pop
pause
mov
jno
inc
scas
rorb
outsl
sub
outsb
and
xor
jl
mov
sbb
out
rcrb
lods
jl
sti
les
pop
xchg
xchg
jp
fisubrs
push
enter
or
lahf
or
add
push
into
sahf
sarb
inc
mov
sbb
out
pop
adcb
push
sahf
sahf
leave
leave
push
cmpsl
cmpb
cli
sub
mov
sahf
jb
incb
aaa
mov
pop
out
incb
xchg
pop
addb
or
imul
or
push
faddl
or
hlt
outsb
inc
jb
lahf
lock
add
fisubl
sbb
sub
push
fisubl
test
js
inc
pusha
jl
add
jo
mov
aad
sub
xor
mov
cmp
xchg
cmc
jno
push
add
pop
sahf
jns
adc
xchg
jp
add
sub
add
or
and
push
jno
out
push
imul
repz
in
sbb
inc
sbb
cs
sub
dec
add
cmpsb
mov
push
es
lods
or
fcos
cmc
and
in
into
mov
addr16
and
inc
shlb
jbe
shll
jbe
pusha
and
add
add
data16
in
fs
add
add
pop
push
stc
inc
fsubl
imul
sub
clc
add
mov
aas
arpl
mov
xchg
xchg
sub
and
xor
popl
mov
add
xchg
leave
hlt
inc
pop
pop
das
and
xchg
adc
cwtl
dec
and
mov
pop
inc
add
add
in
mov
and
or
inc
dec
mov
mov
or
xchg
aad
sti
mov
jns
mov
sbb
and
imul
jp
sti
add
hlt
inc
dec
pop
das
and
les
jnp
cld
outsl
jecxz
dec
inc
jmp
fwait
das
movsb
push
jb
pop
cli
sbb
or
xchg
into
outsl
adcb
popa
add
add
jns
add
dec
xor
pop
fisubs
stos
push
mov
ret
jg
addr16
xchg
daa
jne
push
popl
xor
push
aad
ret
sub
mov
out
ss
fsubrl
mov
xlat
pop
cmp
in
adc
mov
dec
mov
in
or
in
sti
imul
add
add
xor
sbb
js
int
pop
cmp
add
xlat
scas
test
insl
ret
dec
mov
pop
cld
popa
fists
push
pop
adc
gs
lods
aas
jp
xchg
jb
mov
aad
jg
adc
pop
xchg
test
in
jne
xor
add
mov
stc
adc
stc
xor
xchg
and
mov
xor
cmp
lea
push
add
incb
push
jecxz
mov
cmp
stc
test
dec
add
js
mov
push
xchg
add
pop
and
sbb
or
and
xor
add
rcl
xchg
dec
insb
fmull
out
pop
mov
sub
sbb
rolb
and
xchg
repz
outsl
cmpsb
mov
xchg
push
mov
lds
incb
pusha
push
mov
cmpsl
aas
sub
cs
fwait
gs
aas
xor
mov
xor
inc
add
add
push
das
and
cltd
hlt
lret
xchg
jbe
cli
nop
push
lret
jo
fcmovnb
inc
fistl
or
mov
mov
inc
xchg
and
mov
sub
sti
cltd
mov
push
jb
jno
push
sbb
sti
jno
mov
dec
adc
mov
mov
jno
sbb
stos
xchg
mov
add
negb
sbb
imul
pop
push
daa
inc
mov
push
lsl
xchg
pop
scas
daa
mov
mov
loope
daa
xchg
scas
daa
cmpsb
mov
cmp
ret
scas
and
add
xchg
pop
push
jp
test
mov
push
add
mov
xchg
jle
or
fisubl
xchg
pop
adc
out
icebp
adc
xchg
mov
sti
jecxz
cmp
aad
xchg
pop
push
push
xor
xchg
pop
adc
jb
or
sbb
jns
xchg
and
xchg
pop
xchg
cmpsb
push
add
imul
test
loope
jge
loope
sbbl
outsb
add
pushaw
push
pop
cld
xchg
add
inc
or
outsb
mov
add
cli
popa
mov
jne
xchg
or
xchg
jno
iret
mov
cmpsb
mov
fisubrs
loope,pn
imul
push
and
xchg
sti
dec
iret
mov
pop
jno
stos
and
mov
mov
icebp
sub
mov
mov
ljmp
ret
data16
mov
mov
clc
ret
popf
scas
and
test
jno
mov
add
out
sti
enter
add
xchg
in
and
cmp
hlt
lret
int
or
shll
pop
outsb
add
mov
xchg
mov
out
cmpsl
addl
jae
outsl
add
add
das
jmp
add
js
mov
bound
mov
test
fs
push
adc
mov
add
fisubrl
add
add
pop
js
and
pusha
mov
sub
push
gs
sbb
xchg
push
outsl
add
pop
mov
jns
addb
push
and
sub
adc
add
test
adc
std
jne
lcall
adc
shrb
add
or
xchg
out
adcl
jns
push
sub
cwtl
and
mov
sbb
insl
or
sarb
bound
push
sbb
ds
das
xchg
pop
xchg
pop
pop
mov
mov
notl
rdpmc
add
add
sub
adcb
adcb
adc
mov
xor
gs
adcb
lret
cmp
clc
add
ds
repz
adc
fs
sub
lods
dec
outsb
jge
enter
roll
outsl
sbb
scas
cltd
push
jbe
mov
sub
sar
fwait
add
add
xchg
insl
xchg
rorb
fsts
notl
xchg
je
mov
test
jbe
mov
mov
sbb
and
mov
je
or
fimuls
bound
test
bound
pop
stc
test
fsubrs
add
sub
out
mov
add
into
pop
test
popa
outsb
xchg
and
push
sbb
pop
mov
jg
jnp
mov
dec
loope
jg
orb
loop
push
jge
and
shlb
add
and
outsl
int3
add
ja
cmp
dec
icebp
bound
xor
jnp
loop
sub
mov
mov
sti
pop
cmc
bound
add
mov
add
pop
test
push
xchg
call
daa
or
push
jle
xchg
xchg
jne
jmp
mov
clc
jo
and
add
imul
sub
stos
cwtl
add
jno
push
jb
jns
jecxz
jle
push
push
and
aas
or
add
add
testb
repz
push
fwait
cmc
cld
cmp
repz
or
notb
stc
sbb
add
mov
mov
adc
xor
pop
jnp
inc
sub
stos
mov
inc
push
adc
adc
lret
je
lea
xchg
out
jge
pushf
clc
adc
add
add
add
lahf
shr
jns
mov
pop
adc
clc
and
pop
xor
adc
and
cld
jae
inc
sbb
inc
cmp
outsb
adc
shlb
xor
in
adc
add
jg
and
mov
cmpsb
scas
mov
int3
popa
jno
outsb
in
mov
pop
xor
in
add
add
popa
sub
int3
imull
bound
insb
test
pop
and
inc
sahf
xor
jle
divl
add
xchg
and
push
fs
add
xchg
sub
loope
and
into
add
sbb
add
mov
push
add
outsb
mov
add
cmp
push
and
add
push
es
in
insb
int3
mov
or
and
aaa
outsb
push
dec
movsl
push
and
and
jne
je
test
xchg
ljmp
icebp
aaa
outsb
pop
in
push
adc
pushf
xor
jno
ret
ret
add
outsb
fildl
ds
push
andl
mov
push
outsb
add
add
xchg
jnp
xorl
mov
pop
push
sbb
jno
pop
cmp
inc
movsl
out
add
cmp
xchg
scas
mov
add
das
add
add
call
std
mov
popa
das
incb
sbb
cld
rcrl
std
mov
cmp
or
push
push
dec
push
or
cwtl
out
push
call
jno
add
add
pop
insb
lret
add
jmp
repnz
popa
and
cltd
pop
ror
in
cmp
aas
enter
enter
push
lea
xchg
jno
mov
dec
dec
adc
test
std
out
mov
sub
jbe
pop
inc
loopne
or
and
or
push
and
add
mov
out
add
fwait
andb
xor
rcl
insb
push
cmp
loop
and
mov
popf
sbb
mov
jae
inc
ljmp
jnp
bound
sbb
xor
sub
mov
dec
mov
mov
add
add
and
lret
insl
xchg
and
sbb
and
push
in
xchg
and
mov
mov
cs
and
out
repz
push
push
add
mov
xor
lret
dec
add
push
test
pop
xor
add
loope
push
fsubl
and
pop
jl,pn
aas
mov
repnz
pop
das
ja
das
outsl
sub
loop
pop
add
add
and
push
mov
or
and
aaa
jo
sbb
add
outsl
jo
divb
and
inc
mull
testl
loope
inc
scas
movsb
scas
jo
or
cld
sub
inc
stos
cwtl
xor
cmp
jmp
adc
add
push
jb
out
adcb
fisubrs
add
int
popl
add
rcll
pop
std
enter
or
sbb
or
lret
out
cwtl
adc
addl
into
test
jae
sbb
and
aam
outsl
push
or
mov
outsl
add
into
test
sarl
jle
into
sbb
test
repnz
inc
add
add
mov
xchg
cltd
pop
xchg
mov
lock
dec
push
sbb
mov
mov
dec
lea
jae
inc
pop
in
imul
push
mov
dec
gs
and
adc
jle
xchg
pop
xchg
push
sub
test
sbb
clc
out
cmp
mov
adc
rcrl
or
add
add
ret
insb
call
adc
and
xchg
insl
test
les
in
xchg
and
mov
cltd
xor
in
push
mov
in
ret
pop
outsb
in
out
inc
lods
lret
scas
pop
ret
cmp
xchg
jne
xchg
push
idivl
rcrb
xchg
and
mov
push
push
add
push
mov
add
cs
dec
incb
fwait
cmpsb
mov
sub
sub
lods
xchg
dec
adc
and
mov
sub
push
xchg
add
pop
test
cmp
bound
cmp
stc
js
push
mov
mov
mov
clc
sub
add
add
lds
sbb
inc
outsl
lods
scas
jno
insb
or
xchg
cmp
add
add
push
sub
in
js
out
pop
cli
lods
and
pop
sub
clc
adc
jg
push
shrl
shl
rorb
in
in
pop
lods
pop
pop
push
add
push
in
repnz
and
cs
inc
addb
add
scas
lahf
add
adc
stos
test
adc
in
lds
adcb
add
jb
das
add
out
ja
sbb
std
mov
inc
xchg
dec
scas
loope
push
pop
jo
sub
out
lret
subl
cli
cmp
sti
enter
push
adc
push
or
dec
stos
pop
xchg
into
outsl
push
or
popa
das
add
and
dec
mov
cmpsl
out
into
outsl
xchg
jp
mov
es
push
or
rolb
add
add
movsb
mov
sub
jnp
add
cmc
pop
adc
add
lods
ret
jnp
or
pop
adc
test
xchg
pop
sbb
sub
jnp
sar
xchg
int
stc
sub
sbb
push
fs
movsl
fldl
jae
pop
and
ficoml
aad
jle
xchg
pop
add
add
adc
lods
xchg
push
mov
fldcw
cs
adc
sub
sub
sub
mov
scas
xchg
and
outsb
mov
adc
dec
out
push
sub
ret
cmp
jmp
inc
inc
cmpsl
ljmp
mov
shll
inc
adc
movsb
sbb
jnp
and
add
sbb
jb
jecxz
fmul
in
mov
outsb
rol
push
ror
outsb
xchg
xchg
and
adc
jp
inc
out
fcmovb
mov
and
incb
movsl
xchg
iret
outsb
inc
push
repz
lahf
clc
mov
inc
pop
and
add
push
adc
into
into
pop
enter
pop
inc
dec
cli
mov
data16
mov
add
add
into
repz
and
outsb
das
pop
icebp
shll
test
sub
adc
mov
into
pop
adc
xchg
pop
mov
int
mov
dec
outsl
pop
int
fdivrp
std
ja
in
test
pop
add
or
inc
negb
inc
mov
adc
add
push
mov
repz
lock
sbb
les
lds
and
mov
outsb
inc
xchg
int
addl
xor
fwait
data16
push
jb
fnstenv
add
int
or
fidivs
add
ljmp
cs
pop
addr16
xchg
push
sti
xor
cmp
cmp
shll
imul
add
add
rclb
adc
pop
cmp
jo
out
popf
stos
inc
xchg
dec
mov
js
in
sbb
and
aam
movsl
gs
pop
scas
rolb
add
sbb
inc
xchg
dec
lahf
cmpsb
cli
adc
add
push
sbb
push
and
xchg
sbb
adc
xor
pop
and
pop
lods
add
add
call
outsb
inc
xchg
pushf
rcr
pop
and
xor
fidivl
xor
add
dec
outsb
std
xchg
and
scas
nop
insl
mov
cmp
mov
in
xchg
and
outsb
jbe
mov
popa
and
aaa
push
ret
mov
pop
sub
lahf
mov
mov
test
pop
mov
and
les
pop
les
mov
pop
push
inc
or
jmp
sub
jb
add
jno
movsl
lods
push
xor
outsb
add
jge
imul
cmpsl
xchg
scas
outsb
or
mov
daa
add
add
repz
xchg
adc
std
add
add
mov
out
jmp
cmp
rolb
es
int
sbb
mov
and
int3
pop
dec
enter
orb
fidivrl
arpl
enter
jb
and
sub
jo
xor
xchg
int3
outsl
add
nop
aaa
popw
imul
xor
and
add
push
loopne
or
xchg
add
xchg
into
outsl
imul
cld
and
mov
adc
into
or
mov
or
mov
lret
addl
and
roll
sbb
and
hlt
adc
adc
xchg
loope
push
movlps
push
dec
inc
pop
push
sti
add
add
stos
fstps
xchg
push
loop
call
lods
jp
int
and
and
test
mov
ret
jp
add
out
or
mov
out
out
jg
lds
and
sbb
xchg
insl
test
inc
decb
cmp
push
ret
xchg
std
insl
cmp
push
mov
xchg
push
sbb
add
add
xor
xchg
js
xchg
stos
mov
mov
jb
rol
sub
push
fistl
icebp
cmp
negl
addr16
mov
stos
scas
mov
ja
dec
into
mov
mov
imull
mov
icebp
lods
add
daa
sub
pop
and
mov
add
jnp
jb
stos
cmp
inc
cmp
add
loop
add
xchg
cmp
int3
add
idivl
or
out
push
push
cmp
cmp
daa
mov
pop
fwait
sub
adc
or
inc
xchg
inc
pop
aas
sti
push
data16
icebp
lods
out
test
scas
cs
loop
int3
or
and
nop
inc
push
sbb
add
hlt
jecxz
out
div
push
adc
test
push
cmp
add
push
add
xchg
dec
outsl
pop
hlt
sbb
sub
out
cmp
mov
pop
xor
call
jo
inc
in
mov
or
or
or
stc
push
mov
cmp
or
jns
add
mov
push
inc
jnp
pop
fidivrs
jg
xchg
int3
outsl
add
or
shll
mov
and
add
xchg
andb
adc
mov
mov
push
sarl
mov
push
jb
test
les
cmpl
push
lea
add
add
enter
mov
fcomp
and
cmpsb
inc
xchg
mov
mov
sub
js
or
cmp
push
lahf
cmp
in
xchg
and
pop
lods
xchg
cli
mov
or
outsl
test
mov
movsb
in
lock
inc
je
stos
sbb
mov
dec
sub
add
add
jae
in
fldt
jbe
jnp
outsb
in
nop
in
loope
in
loope
scas
add
add
mov
jae
in
push
cld
mov
loopne
inc
in
inc
sbb
push
push
and
out
or
test
jp
mov
dec
outsb
add
lret
add
adc
mov
add
pop
adc
add
insl
outsb
xchg
jge
xchg
and
hlt
gs
cmpsl
outsb
lea
inc
xchg
cli
push
or
cmp
and
push
push
push
xchg
sub
lret
mov
pushl
pop
je
daa
jecxz
pop
dec
push
cmp
jle
pop
fisubs
cmpl
pop
cli
scas
repnz
xchg
mov
mov
mov
add
add
inc
mov
inc
adcb
add
insl
xchg
pop
jle
das
add
jl
add
jns
jecxz
stc
add
rcr
dec
jle
add
adc
mov
lods
nop
jo
lods
nop
sub
rcll
fcompl
iret
outsl
push
sbb
inc
xor
or
add
ja
xchg
mov
push
clc
bnd
mov
pop
and
push
or
mov
xchg
add
mov
push
shrl
shlb
xchg
test
adc
and
test
not
and
pop
add
repz
and
xchg
xor
sbb
mov
add
add
pop
add
aad
inc
xchg
mov
pop
mov
cmp
pop
inc
mov
sbb
adc
outsb
mov
stos
dec
push
and
bound
mov
int
mov
mov
test
xchg
mov
fadd
negb
cmpsb
repnz
in
mov
lock
lea
add
repnz
in
in
scas
add
mov
xor
sbb
fscale
fldenv
xor
cmp
mov
mov
cs
mov
and
adc
push
loope
pusha
lods
xchg
movsb
scas
add
mov
test
imul
jmp
jmp
subl
jnp
push
movb
imul
xor
add
xorb
fs
fsubl
gs
or
lock
cltd
mov
mov
in
adc
daa
sbb
mov
lock
pop
test
jno
sbb
add
dec
jbe
je
lcall
push
ja
jb
cmpsb
push
xchg
push
and
shl
icebp
rcrb
jl
add
add
orb
sarl
or
leave
inc
std
add
mov
adc
sbbl
adc
xchg
std
mov
mov
push
pop
pop
std
ret
mov
sub
lahf
or
mov
cmc
mulb
rcll
add
pop
mov
cmovl
jns
sti
add
add
jle
inc
and
add
fists
cmp
xchg
and
faddl
mov
push
loopne
push
scas
push
xor
fldl
xchg
and
popa
call
adc
or
mov
in
out
adc
mov
sbb
ljmp
fisttpl
in
xor
add
push
fstpt
lods
xchg
iret
dec
into
lds
add
lcall
fistps
adc
push
jge
setne
lods
outsb
mov
cmp
sbb
bound
movsl
pop
imull
in
nop
mov
mov
or
xchg
mov
insl
mov
dec
sbb
push
sbb
sub
in
loope
sbb
pusha
cmp
roll
popfw
push
xlat
out
and
add
xchg
xor
mov
push
or
dec
sbb
cmc
pop
cmp
fiadds
push
sbb
adc
jmp
add
mov
sbb
add
sti
ret
inc
out
shlb
pop
or
mov
fcoms
test
mov
adc
daa
and
mov
add
scas
shlb
pop
mov
mov
xchg
lret
test
repnz
outsb
insb
cmp
outsb
test
aam
int
lret
hlt
mov
das
hlt
lcall
clc
mov
pop
add
movhps
add
mov
cmpsb
jne
pop
movsl
jne
xor
add
xchg
and
fs
adcl
cld
dec
mov
mov
cmp
inc
xor
mov
xorb
daa
jb
cwtl
and
nop
popa
ret
cmc
dec
pop
aam
icebp
push
sar
mov
push
mov
jne
xchg
mov
sbb
fisubl
movsl
icebp
shll
add
xor
xchg
and
xor
mov
rcrl
xchg
xchg
fisubs
dec
pop
xor
jle
lret
push
sbb
jnp
sbb
mov
mov
push
test
test
mov
cmc
sbb
in
sarb
xchg
pop
xchg
cmp
in
dec
call
sbb
scas
add
cmp
cmc
sub
inc
imul
and
orb
sbbb
mov
add
imul
push
lds
push
inc
addr16
mov
and
aad
jp
and
pop
mov
stc
test
push
mov
add
add
jmp
sbb
push
push
xchg
xchg
insl
out
jecxz
pushf
xor
mov
cmc
and
movsb
scas
add
sub
sti
lock
daa
mov
jge
push
jns
cli
lock
das
hlt
iret
into
add
and
inc
mov
pop
test
jo
push
mov
mov
sti
call
pop
sti
mov
cmpb
add
push
notl
in
xchg
outsb
mov
mov
test
cli
loope
inc
and
ffreep
xor
mov
or
jmp
jo
outsb
xchg
movsl
outsb
mov
dec
jp
out
inc
push
adc
push
and
les
mov
out
icebp
adc
jae
xchg
inc
cmpsb
cmp
insb
dec
addl
add
out
lret
or
and
dec
dec
cli
pusha
jae
in
enter
sbb
cmp
test
lret
push
mov
decb
pop
rolb
divb
call
mov
and
jno
out
bound
scas
pop
lock
xor
rolb
add
gs
shll
mov
jge
out
mov
dec
add
adc
and
inc
cmpsb
and
mov
pop
push
add
lea
test
dec
inc
cmpsb
rcrl
fcompp
sbb
scas
rcrl
ret
sub
xchg
sbb
movsl
int
jp
add
add
cmp
xchg
fisubl
js
addb
lods
xchg
ret
and
imul
movsl
dec
mov
pop
dec
inc
hlt
shll
sub
mov
inc
outsb
sbb
sub
xchg
mov
pop
mov
aad
call
arpl
lock
sbb
jae
outsl
inc
cwtl
push
mov
add
add
mov
pusha
bound
cwtl
cmc
jns
lock
sti
outsl
push
test
push
mov
xchg
xchg
cli
push
jns
imull
jns
adc
movsl
test
jns
pop
cmpl
das
xchg
xchg
sub
ret
jl
repnz
in
subb
sti
loop
and
jg
or
lret
pop
daa
movl
add
add
jne
popa
cmc
add
ljmp
outsl
add
adc
test
jp
test
mov
bound
movsb
idiv
sbb
andb
cmp
adc
add
mov
cmpsl
sub
sti
sarb
and
mov
in
jno
outsl
add
cwtl
mov
cmpsb
in
or
push
mov
push
stos
bswap
or
adc
or
jns
lcall
jae
mov
arpl
nop
inc
pop
aad
cmpl
and
xchg
sub
and
add
and
xchg
addl
aad
sbb
add
cmc
pop
lds
lods
push
sub
mov
xchg
adc
mov
push
fwait
push
fistps
icebp
mov
jnp
hlt
sbb
scas
ds
es
or
sbb
sbb
jg
mov
cmp
adc
pop
dec
push
rorb
cs
adc
sub
mov
clc
cltd
das
cs
add
add
lea
int
stos
mov
test
out
test
xchg
mov
mov
stos
inc
imul
push
pop
sahf
and
sbb
inc
cli
and
add
mov
mov
xor
scas
sahf
stos
lcall
xchg
negl
xchg
movsl
dec
or
outsb
add
add
mov
and
sbbl
pop
call
mov
jae
mov
or
int3
sti
pusha
test
or
add
outsb
das
jne
sub
call
jp
aas
and
jmp
adcb
jbe
add
cs
repz
out
in
cmp
stos
jmp
outsb
popl
add
xor
repnz
lock
fldl
and
adcb
outsl
add
cli
insl
push
sahf
stc
mov
lret
outsl
or
popf
cmp
inc
repz
mov
call
sub
fwait
cmp
cwtl
hlt
lret
mov
sub
cmp
jo
les
adc
fdivrl
jge
xchg
fs
jns
enter
je
call
sub
dec
cmp
pop
hlt
les
cmpsl
into
push
sahf
adc
test
fdivrl
xchg
xchg
mov
addl
and
inc
js
or
adc
lret
xchg
fldenv
lcall
mov
in
push
xchg
lea
test
add
dec
sahf
adc
in
arpl
xor
cmp
enter
add
xchg
dec
clc
sbb
das
add
outsl
aam
sbb
sub
hlt
or
mov
or
push
cltd
mov
sbb
adc
mull
jbe
sub
daa
fcmovb
lcall
fwait
divl
push
data16
les
hlt
add
add
dec
cltd
jbe
sub
jb
into
aas
out
cmpl
fwait
and
xchg
add
xchg
add
inc
sub
aam
mov
mov
jno
fadds
daa
adc
hlt
scas
loope
ljmp
push
and
mov
inc
pop
add
shl
mov
repnz
test
add
add
je
jmp
cmp
pop
imul
sbbb
andb
sti
pop
pop
mov
push
data16
xor
lcall
out
in
jae
sti
mov
repnz
and
pop
or
sub
sti
ret
jno
imul
sti
xor
jle
and
outsb
in
in
outsl
mov
add
add
mov
xchg
push
add
aaa
sbb
dec
or
adc
mov
or
push
mov
xchg
addl
in
pop
inc
mov
jno
mov
int
lods
adc
mov
cli
push
lea
mov
sbb
inc
test
xor
add
jo
js
add
mov
in
pushf
xchg
mov
push
pop
dec
cmpsb
addl
in
enter
icebp
out
adc
jp
push
repnz
rorl
push
pop
xchg
repnz
jnp
lcall
and
hlt
jnp
lcall
in
xor
and
addl
add
inc
addl
jno
inc
enter
clc
adc
lea
xchg
aas
lcall
xchg
xchg
sbbb
gs
xchg
push
mov
outsb
das
icebp
push
fnsave
fwait
stc
sub
popf
mov
inc
xchg
into
test
jp
pusha
insl
xchg
and
outsb
mov
xlat
jb
add
add
and
imul
out
std
jmp
sub
pop
mov
cltd
subl
xchg
cmpsl
pop
lahf
inc
adc
daa
aas
and
and
cmp
sub
lds
mov
sahf
jmp
cld
stos
push
insb
sub
aas
dec
icebp
loope
pop
jb
outsl
sub
mov
push
sbb
push
add
add
push
sbb
inc
scas
pop
jle
pop
call
outsb
add
imul
in
subl
pop
pop
outsb
in
push
mov
addr16
das
and
pop
mov
jo
mov
aam
pop
lods
repnz
and
adc
outsb
test
das
mov
jo
sti
mov
add
movb
orl
add
xlat
or
orb
sub
ffreep
mov
repnz
call
or
dec
sbb
add
xchg
cmpsb
mov
inc
jb
add
testl
mov
mov
loop
dec
in
sbb
mov
sbb
xor
or
and
add
insl
and
mov
imul
add
push
leave
imul
mov
pop
and
pop
push
and
and
pop
xchg
pop
push
and
and
add
xchg
adc
pop
bound
ljmp
jb
sahf
loop
fisttps
sbb
dec
sub
jb
cwtl
add
scas
lcall
ret
sub
or
inc
stos
mov
add
pushf
sbb
mov
out
add
add
xchg
scas
pop
lock
js
lods
jmp
aaa
adc
and
sbb
jb
outsb
pushf
fstpl
add
sbbl
jmp
in
pushf
loope
sub
imul
loope
icebp
in
xchg
and
inc
sub
add
dec
adc
movsb
mov
and
add
jbe
mul
lea
icebp
pop
inc
in
pop
lods
jo
popa
shll
xlat
xchg
or
inc
jle
and
icebp
sbb
xor
mov
fnsave
add
sub
sti
mov
add
dec
push
cmp
call
test
mov
xchg
in
mov
test
gs
ret
inc
dec
jbe
adc
and
bndldx
add
add
and
inc
dec
push
mov
push
push
adc
xchg
repnz
pshufw
test
sbbl
sti
enter
xchg
cltd
repnz
imul
in
push
cmp
xchg
push
outsb
xchg
jle
std
jb
lret
movsb
jp
sahf
adc
adcl
cmpb
add
add
ds
stos
dec
add
stc
and
xor
clc
jno
mov
or
imul
jo
jb
leave
dec
push
mov
mov
push
into
mov
push
and
sub
adcb
ds
inc
ret
and
mov
mov
push
inc
dec
loope
push
push
adc
and
push
faddl
add
out
and
pop
and
jmp
mov
ffree
aas
lahf
test
and
imul
or
sub
cld
adc
inc
sbb
adc
hlt
arpl
clc
shll
subb
imul
xchg
fucomip
cli
or
sbb
sub
mov
add
xchg
sub
inc
mov
add
mov
mov
call
outsb
in
cmp
data16
xchg
and
mov
cmc
mov
test
imul
imul
push
push
jb
adc
mov
push
xchg
cmpsb
loopne
and
sahf
aad
cwtl
mov
sbb
pop
xor
hlt
and
cmp
in
add
add
mov
outsb
sbb
fcoms
cltd
and
mul
aam
popa
push
aad
scas
rcrl
cmp
and
sub
insb
bound
popl
popf
push
nop
ds
push
lods
sub
outsb
push
inc
cli
popa
cmpl
jns
lds
mov
mov
add
add
insb
icebp
or
mov
pushl
outsb
add
fs
daa
outsb
add
cmp
cmp
test
test
mov
jl
sti
inc
lahf
xchg
mov
and
stc
cmpl
dec
mov
ds
push
xchg
leave
mov
loop
arpl
push
xchg
fwait
add
add
scas
pop
and
add
dec
jb
cld
push
mov
jle
in
cld
mov
pop
das
test
add
mov
add
scas
stc
mov
out
add
cmc
xor
std
or
sub
pop
inc
aad
sbb
xchg
push
adc
pop
mov
divb
cmp
xor
stos
add
add
sbb
sbb
mov
les
cmc
ret
ljmp
dec
jle
lea
adc
ds
sub
out
pop
pop
mov
add
movsb
mov
lock
jp
mov
add
inc
or
xchg
jge
push
iret
mov
mov
adc
outsb
loop
add
sbb
outsl
in
xchg
test
xlat
xchg
inc
test
jp
sbb
push
or
mov
xchg
mov
adc
in
xchg
test
shrl
jbe
in
sbb
pusha
out
mov
and
mull
cs
stc
cmp
xor
mov
mov
insl
in
xchg
push
or
add
add
and
pop
add
sbb
stc
add
jge
add
and
das
and
push
into
cmp
xor
add
xchg
pop
push
aas
test
outsl
sub
out
xchg
sti
test
xchg
or
outsb
add
xor
andb
sti
aas
stc
adc
push
cmp
popa
cmpl
jns
add
add
int3
notl
call
test
test
push
xchg
fld
cwtl
ljmp
outsb
in
scas
sub
adc
xchg
orb
and
jb
pop
push
xor
jb,pt
faddl
lods
xchg
pop
lods
xchg
int
inc
mov
jno
or
jle
shlb
lcall
add
pop
pushl
hlt
ds
std
inc
pop
mov
std
sbb
inc
lock
and
xchg
adc
addb
push
xchg
daa
aas
cltd
jb
xchg
jbe
cli
repz
push
mov
cld
inc
mov
xchg
cwtl
popf
mov
aaa
insl
mov
test
sub
ds
cwtl
lahf
cwtl
lcall
lahf
mov
dec
add
add
dec
sub
out
insb
xchg
and
inc
mov
or
std
bound
dec
bound
adc
mov
aaa
sub
pushf
lahf
sbb
jge
sahf
adc
push
jno
sbb
xchg
pop
adc
sub
stc
sub
ss
adc
add
add
outsl
les
ss
xchg
xchg
bound
adc
push
mov
push
mov
xor
stos
cmc
div
cmp
jne
flds
pusha
roll
fistpl
sub
or
test
test
ljmp
outsb
cmp
pop
xchg
dec
inc
mov
pop
out
es
or
jmp
or
inc
and
cltd
div
testb
mov
pop
rclb
mov
adc
subl
loopne
sti
cld
gs
cmpl
sahf
divl
int3
test
int3
ficoms
scas
push
je
add
test
sub
add
icebp
pop
int3
add
mov
outsb
push
or
lock
pop
outsb
add
xchg
mov
add
jle
leave
or
mov
jg
iret
enter
adc
jle
leave
sbb
data16
arpl
xchg
enter
adc
xchg
jle
into
pop
cmp
std
cltd
adc
sbb
mov
movsb
insb
add
add
jle
add
inc
cli
inc
mov
aas
enter
cmpsl
or
jp
or
mov
and
xor
cld
sbb
data16
jo
and
pushf
andb
mov
jl
xor
xchg
xor
sub
dec
icebp
or
jo
and
fiadds
int3
xchg
inc
jp
cld
xor
xor
pop
inc
popa
sub
add
lcall
adc
cmp
sub
push
xchg
jg
stc
adc
and
sbb
xchg
and
rorl
xchg
and
pop
iret
cmp
or
or
push
xlat
cs
outsb
test
or
ljmp
mov
ds
aad
cmp
mov
mov
add
add
add
adc
push
add
psrld
xchg
and
sbb
popa
push
test
insl
outsb
fldl
push
add
cmp
mov
push
mov
mov
out
push
mov
mov
xchg
and
mov
adc
push
add
or
add
and
popl
add
add
mov
test
sti
clc
in
push
je
out
call
in
inc
jb
icebp
mov
insl
outsb
add
push
das
int3
mov
add
jecxz
xor
mov
into
add
jnp
test
sub
push
outsl
and
push
out
inc
sti
call
insb
xchg
sub
mov
dec
bound
inc
outsl
hlt
test
test
push
adc
add
js
pop
sti
cmpl
sbb
pusha
pop
enter
pop
aaa
jb
xchg
push
jbe
pop
pop
sbb
or
insl
add
pop
mov
lcall
add
imul
mov
pcmpgtd
repnz
outsl
add
jg
std
mov
pop
insl
add
sbb
cmpb
add
push
and
add
add
lahf
std
or
dec
je
xchg
nop
outsl
add
mov
dec
mov
ficomps
add
and
adc
dec
lea
xlat
in
shll
sbb
xchg
and
jns
sub
mov
in
adcl
scas
enter
iret
clc
mov
fldl
add
test
in
jb
push
add
xchg
pop
jae
insb
addl
jle
es
pop
adc
jo
outsb
insb
and
mov
scas
jge
or
icebp
sbb
in
xchg
cmpsb
scas
nop
movsb
test
leave
xor
testl
movd
mov
pop
dec
and
add
sub
test
and
out
test
push
adc
sbb
outsb
in
inc
gs
push
repnz
mov
loop
jo
aad
and
popa
mov
notl
call
cmp
sahf
test
loope
jmp
out
les
sub
dec
jg
mov
sub
aad
addr16
jmp
add
add
xlat
cmp
das
es
mov
bound
out
inc
sti
loopne
mov
je
test
xor
add
mov
and
ror
mov
dec
pop
lods
mov
sub
and
fists
iret
add
and
test
cmp
push
sbb
or
and
add
mov
inc
add
add
inc
outsl
cli
and
add
mov
cltd
xor
mov
push
and
xchg
adc
lret
xchg
and
icebp
or
mov
sbb
lods
outsl
add
push
pop
jmp
mov
pop
std
dec
sub
pop
jb
push
scas
rcr
std
mov
mov
or
insl
addl
add
dec
push
bound
loop
cld
mov
sbb
push
iret
fmull
inc
mov
in
mov
leave
or
out
mov
add
xchg
rcrl
popa
mov
adcb
sbb
dec
xlat
dec
jnp
cmc
stos
mov
addr16
movsb
mov
data16
add
add
fiaddl
fwait
xchg
and
ljmp
jg
push
sbb
jg
xchg
outsb
pop
lret
push
insl
xchg
adc
jnp
pusha
push
sub
outsb
outsb
cmp
imul
stc
cwtl
pop
mov
in
xchg
and
fcomps
jmp
pop
in
iret
stos
icebp
jge
jl
popf
mov
add
mov
test
mov
mov
xor
inc
sar
xor
stos
cmp
std
clc
sarb
or
add
cmc
cmp
cmpl
and
jp
sbbb
in
scas
mov
sti
or
fisttpll
cs
cmpsl
push
stc
fdivs
cs
mov
test
mov
xchg
js
testb
das
faddl
outsb
add
out
add
repnz
adc
or
mov
outsb
add
jmp
daa
pop
mulb
call
dec
fstl
jl
pop
push
xchg
aad
add
mov
fstpl
push
and
pop
popl
add
ljmp
test
paddd
xchg
or
pop
test
or
cli
dec
out
cmpb
add
mov
das
add
daa
or
into
imul
mov
xchg
stc
adc
sbb
push
xchg
inc
inc
xor
pop
mov
iret
mov
gs
in
dec
jp
jno
add
add
jl
mov
sub
lahf
mov
inc
mov
ljmp
push
mov
fnstenv
outsb
mov
bound
xchg
jle
inc
jno
ljmp
push
jp
sbb
jp
arpl
jb
les
mov
sbb
mov
nop
cli
adc
xchg
pop
xchg
mov
in
add
add
stos
dec
in
mov
xchg
out
jmp
push
mov
sub
sub
jecxz
in
ljmp
fwait
cmpsb
imul
and
stc
adc
div
out
mov
jns
sbb
sub
xchg
and
cmc
xchg
xor
inc
lret
inc
movsl
xchg
in
xchg
and
push
roll
add
inc
in
movsl
fsubr
xchg
and
push
rorl
testb
mull
lcall
cpuid
idiv
add
test
leave
pop
fs
out
sub
jns
sti
inc
cmp
pop
stos
pop
sti
adc
decl
adc
pop
mov
in
push
xchg
adc
mov
test
add
add
mov
test
arpl
testb
icebp
leave
xchg
or
cmp
and
scas
jo
sbb
mov
jb
push
sbb
stc
xor
mov
jo
inc
popf
inc
jg
cmovs
pop
cltd
push
ss
ror
inc
jb
fdivs
mov
inc
xchg
and
add
or
or
aaa
mov
call
std
sbb
arpl
pop
shl
dec
push
sahf
ja
shrb
xchg
dec
or
repz
or
mov
jnp
mov
sahf
fmuls
add
and
and
jo
inc
lods
test
xchg
and
add
insl
popf
mov
adc
push
and
adc
pop
jecxz
setae
mov
add
in
push
in
cmp
lahf
arpl
sub
mov
add
add
xchg
and
pop
jl
lea
jae
and
bound
cs
add
aad
scas
add
add
jo
jle
fsts
gs
in
mov
push
stc
and
call
icebp
lods
iret
mov
stc
pop
jb
mov
xchg
lea
sub
aam
in
out
jbe
jns
jbe
jle
fldl
data16
push
outsb
in
repnz
push
lret
aad
mov
sarb
xor
add
add
rolb
in
in
mov
pop
movsb
int
xchg
and
mov
jl
into
test
pop
sti
clc
int
xor
int
rcr
lods
jp
clc
cs
cltd
push
push
inc
notl
insl
aam
xchg
scas
int
sti
lock
lcall
rcrb
les
add
xor
sti
bound
inc
outsl
imull
mov
cmp
cld
xlat
sbb
lods
jo
pop
mov
xchg
add
enter
adc
pop
adc
xchg
test
std
or
test
dec
sahf
repz
repz
test
inc
mov
add
mov
bound
mov
xchg
pop
inc
xchg
sysret
adc
adc
push
mov
or
jle
sbbl
xor
inc
scas
dec
ds
sti
std
dec
jae
imul
fsubl
cmp
mov
pcmpeqw
push
jne
jo
lea
arpl
dec
jg
add
sarl
dec
sbb
dec
xchg
sub
test
cli
cwtl
test
cli
jl
mov
sti
xchg
jle
stos
jmp
pop
inc
jge
dec
mov
dec
dec
cltd
lahf
inc
daa
xchg
pop
adc
test
add
or
jo
push
sub
lahf
pop
xchg
movsl
sbb
lahf
jmp
outsb
mov
push
adc
xor
add
lds
mov
mov
ljmp
mov
pop
mov
in
inc
fsubs
jbe
inc
scas
cmp
neg
cmp
insl
ljmp
mov
mov
insl
or
xchg
stos
andl
mov
cmp
xchg
jge
out
xchg
and
push
mov
insb
add
jge
push
add
add
add
pop
aas
and
cmp
or
jle
jb
andl
testl
pop
icebp
rorl
mov
insb
daa
outsb
add
mov
add
sub
adc
mov
and
mov
insl
add
repz
repz
sti
lock
add
cmp
add
mov
out
inc
outsl
jns
inc
dec
push
pop
repnz
push
call
mov
add
leave
call
mov
in
in
pop
and
xor
sub
dec
jl
mov
jb
mov
xchg
mov
mov
pop
mov
cwtl
pop
rol
inc
jb
fsub
hlt
negb
lods
ljmp
add
test
ja
cmp
xor
sub
add
inc
mov
sti
rol
lds
xchg
inc
add
hlt
roll
xor
jmp
repnz
xchg
mov
sub
mov
lods
fsts
pushf
dec
rorb
mov
addr16
stos
fstl
mov
sti
fidivrl
sbb
add
leave
jo
jecxz
mov
out
test
mov
movsb
shl
and
xchg
push
push
stos
aad
nop
sub
push
xchg
stc
xchg
mov
xor
sub
sub
popf
and
mov
inc
mov
sbb
or
jb
outsb
push
push
add
out
aam
mov
cwtl
scas
in
and
push
loope
push
lret
add
hlt
insl
or
movsl
inc
in
subl
aas
sub
xchg
es
ficoml
icebp
pop
test
and
sbb
movd
mov
lahf
and
add
out
sbb
outsb
scas
mov
pop
ljmp
pop
imull
adc
jne
aam
repz
in
bound
add
add
push
out
or
fs
inc
pop
out
les
push
cli
mov
xchg
push
outsl
es
in
push
aas
push
out
cmpl
mov
pop
lret
or
lds
mov
xchg
jns
add
scas
fisubrs
push
ss
or
pop
lret
sbbl
add
js
insl
mov
add
inc
add
xchg
dec
cmp
shll
jo
sahf
jl
cmpl
call
lret
inc
sub
js
repnz
or
push
mov
cmp
cltd
faddl
adc
fs
xchg
xchg
xchg
jl
dec
sahf
or
xchg
cmc
mov
add
mov
shlb
negl
pop
inc
push
sbb
mov
shrl
and
pushf
and
sahf
scas
xchg
inc
inc
shl
fdivrl
int
sbb
pusha
fcmovne
push
xchg
and
xlat
arpl
icebp
adc
jo
adc
aaa
jmp
mov
xlat
adc
movsl
and
push
imul
outsb
or
jl
dec
imul
or
adc
shrl
mov
sbb
and
fldcw
dec
lret
fistpll
imul
lods
cwtl
call
scas
cmp
cmp
in
cwtl
movsl
icebp
mov
and
lahf
mov
mov
mov
cs
gs
adc
add
jae
jne
shl
sub
cmc
or
icebp
pop
mov
hlt
dec
clc
push
jne
and
jnp
aam
push
mov
mov
pop
cli
adc
in
pop
add
les
je
int3
sub
stos
jb
andb
add
xor
aas
sbb
cmp
and
xchg
dec
dec
add
add
sbb
mov
sub
test
insb
popa
mov
push
gs
or
testl
cmp
sti
ljmp
clc
jo
daa
ficompl
testl
cmp
sti
jp
repnz
out
pop
clc
loopne
daa
insb
mov
push
cwtl
pushf
xchg
mov
or
xchg
insb
hlt
out
add
add
daa
push
xchg
jnp
jecxz
jge
add
inc
xchg
adc
and
cltd
ret
div
sbb
jb
push
cmpsl
imul
cmc
xor
xchg
xor
lcall
add
add
std
push
dec
imul
shr
std
roll
mov
stc
cmp
xchg
xchg
ja
cmp
pop
jb
repz
pop
not
add
add
inc
sbb
jb
cld
pop
jnp
add
and
sub
movsl
and
jo
mov
sbb
xchg
ss
mov
add
jle
pusha
lahf
popf
fdivrl
fmul
pop
adcl
or
rorb
test
mov
sbb
xchg
and
pop
adc
js
add
add
jge
sahf
das
imul
push
xchg
push
push
jge
rorb
xchg
sahf
rcr
aam
xchg
es
pop
adc
call
or
stos
mov
sub
mov
mov
insl
popw
popf
cmp
stos
sbbb
or
sbb
lods
mov
mov
jbe
divl
lret
dec
jge
xchg
testl
add
add
add
add
outsb
or
xchg
movsl
add
adc
hlt
arpl
inc
inc
mov
mov
xchg
mov
xchg
jmp
out
insl
ljmp
mov
and
mov
cltd
cmpsl
jbe
or
push
add
xchg
cmp
repz
xor
mov
jae
jge
lea
or
fstl
pop
in
adc
mov
and
mov
add
leave
push
xor
cmp
dec
and
scas
lea
xchg
mov
cmp
inc
ss
push
jae
cmp
mov
sbb
push
jge
push
xchg
push
pop
repz
jnp
inc
and
sti
inc
ja
inc
das
mov
push
lret
adc
xchg
mov
inc
into
push
mov
std
bound
cld
mov
cmp
add
xchg
sti
lods
or
mov
inc
inc
xchg
xchg
xor
fsubs
mov
dec
push
inc
push
aas
mov
scas
loope
sub
inc
adc
sub
push
cli
inc
mov
scas
or
push
cld
add
xor
outsb
stos
loopne
add
outsb
add
cmp
jo
jnp
adc
mov
addl
add
arpl
rcrb
mov
rol
xor
call
jo
push
or
mov
je
ds
in
add
xor
mov
xchg
and
push
lock
insb
mov
cmp
mov
aam
add
addr16
enter
aaa
ss
cwtl
add
add
pop
xchg
adc
dec
jno
xchg
and
sahf
pop
xchg
scas
aam
scas
outsb
xchg
sub
and
sub
aad
sub
xchg
and
mov
add
sub
xchg
and
jne
sbb
popa
jbe
movsl
cwtl
cmc
or
sub
outsb
in
test
negl
xchg
aad
or
mov
mov
pop
jno
ds
dec
icebp
or
test
jb
and
test
shrl
out
jns
gs
xchg
add
or
xor
fcoml
jb
push
adc
sub
je
jbe
sub
and
enter
enter
push
xor
jbe
jmp
daa
outsb
popl
add
imul
add
daa
sbb
sti
xchg
xor
add
cld
mov
test
pop
or
cwtl
xor
add
out
mov
add
mov
mov
outsb
xchg
mov
push
jns
sbb
xor
std
inc
shrb
adcb
mov
dec
mov
testb
add
adc
dec
xor
push
shll
and
dec
sub
add
rolb
xchg
sub
adc
mov
adc
rcrb
lcall
popf
out
rcrb
jb
push
cmp
inc
mov
outsl
add
and
sub
clc
sub
nop
add
add
add
and
ret
dec
jno
cmp
pop
jmp
sbb
test
test
dec
data16
adc
cwtl
mov
repnz
xchg
scas
jmp
adc
insb
sbb
sbb
inc
adc
mov
xchg
and
mov
adc
sbb
aam
dec
xor
dec
dec
and
add
add
sub
scas
cltd
push
jb
xor
mov
data16
negl
cwtl
gs
mov
xchg
jmp
cmp
jmp
and
xchg
stos
hlt
imul
xchg
cli
in
mov
cmc
imul
fisubs
pop
mov
in
add
add
cmp
fsubrp
xchg
and
gs
inc
mov
outsb
add
push
or
fwait
loop
jo
scas
ret
and
dec
inc
loope
fs
adc
cwtl
dec
and
enter
push
sub
and
inc
loope
clc
movsb
sub
mov
arpl
sub
fs
mov
add
jae
cmp
je
sbb
inc
out
inc
push
cmp
lock
imul
inc
xchg
adc
sub
add
es
ljmp
cmp
out
pushf
mov
mov
cli
test
jecxz
cwtl
das
andl
cmp
int3
out
pop
or
or
cli
les
data16
add
dec
fs
cmp
add
mov
dec
or
dec
ds
mov
loope
outsl
dec
fdivrp
xchg
pcmpgtd
ljmp
jns
dec
popa
ja
cmp
icebp
push
or
and
or
adc
cmp
jbe
sub
fwait
and
movb
adc
fisubrs
add
out
add
sbb
aam
xor
in
inc
jae
js
ret
rcrl
out
sub
repz
std
add
fdivrl
sbb
fsubrs
setns
push
movsb
and
xchg
mov
sub
adc
and
daa
xchg
pop
xchg
rolb
or
sub
push
std
cmpsb
scas
sti
add
add
adc
adc
lret
pop
adc
outsb
in
xchg
xlat
jo
xchg
pop
mov
lods
out
out
push
jmp
inc
jns
insl
in
adc
jbe
inc
add
push
shlb
outsb
in
lods
mov
in
lcall
movb
outsb
or
mov
outsl
mov
in
xchg
sbb
add
add
sub
outsb
add
or
pop
adc
cltd
push
test
jecxz
xchg
scas
sbb
sti
outsl
sub
adc
outsb
ja
fldcw
clc
mov
add
les
test
inc
movsb
add
sub
pop
je
mov
sbb
outsb
add
movsb
jb
add
add
and
aam
push
add
inc
and
push
pop
daa
mov
outsb
mov
and
out
jno
or
iret
mov
pop
add
in
sets
std
or
dec
arpl
add
or
ja
das
cwtl
dec
outsl
add
mov
clc
std
adc
jp
sbb
call
add
outsl
dec
mov
outsl
sbbl
addb
cmp
addl
and
pop
test
xorl
and
addl
and
popf
add
mov
pop
enter
add
add
xchg
fcompl
inc
xor
ja
add
add
sbb
ret
cmpsb
lods
pop
xor
dec
incl
icebp
sbb
test
cmpsb
push
add
sbb
mov
lds
mov
and
cmp
push
dec
sbb
dec
repz
xor
and
insl
rcr
mov
cmp
sub
cmp
fisubrl
daa
out
push
stos
pop
jl
jae
mov
add
add
and
scas
cltd
ds
mov
push
test
loope
pop
xor
aam
sbb
pop
mov
xchg
mov
dec
jecxz
and
mov
pop
mov
jecxz
or
out
mov
ret
in
push
data16
push
push
mov
adc
lahf
mov
and
popl
add
dec
push
inc
or
bound
arpl
aaa
inc
mov
das
dec
loope
jno
rcr
jno
hlt
push
sbb
cltd
jne
push
mov
fdivs
dec
hlt
push
xor
sbb
pusha
xor
jns
icebp
push
sti
jbe
test
es
aas
addr16
cmp
in
aaa
cmp
jl
jbe
xor
jp
add
iret
push
jne
xchg
and
and
aaa
push
xchg
ret
cld
mov
pop
scas
or
repnz
outsl
add
pop
lret
jp
orl
shlb
movsb
mov
sub
mov
xchg
ds
dec
adc
adc
lcall
push
mov
jno
inc
dec
dec
xor
add
dec
pop
orl
test
xchg
jecxz
or
sbb
sbb
add
dec
adc
sbb
and
pop
iret
pop
xchg
daa
lahf
mov
fists
jg
pop
cmpsb
xchg
pop
xchg
into
inc
subl
clc
and
leave
ljmp
stos
push
sub
fistpll
add
daa
loope
add
add
xlat
icebp
cvtps2pi
mov
xor
lret
es
inc
mov
out
fsubs
pop
xchg
and
outsb
outsb
xchg
and
idivb
jmp
sub
insl
in
xchg
and
xor
or
cmp
inc
sub
jecxz
je
add
push
repz
sbb
cld
lea
mov
mov
add
jbe
test
stos
cld
jne
push
mov
and
arpl
xchg
scas
or
and
fs
xchg
mov
outsb
in
in
push
add
cmc
movsb
jmp
test
rolb
sti
add
add
aam
stc
subb
mov
imul
das
out
push
push
push
jmp
add
iret
das
push
outsl
shrl
pop
addr16
cmp
iret
ja
cmpsb
pop
mov
cli
xlat
xchg
add
sub
das
jmp
mov
sbb
cmp
sub
inc
pop
outsl
lea
xor
add
jne
sbbb
ret
mov
push
inc
mov
outsl
orl
jg
push
sub
sbbl
std
push
push
sbb
outsl
pop
aad
xor
xor
mov
cmp
xchg
cli
movsb
test
mov
mov
pop
xchg
cmp
push
add
add
mov
push
insl
or
mov
cmc
cmp
add
adc
and
sub
mov
imul
mov
add
loop
gs
xchg
pop
adc
xor
pop
cli
enter
jp
mov
sbb
add
xchg
jle
sbb
add
xchg
test
lock
push
aad
imul
cmp
int3
in
ljmp
ljmp
xor
daa
enter
insl
sbb
test
lods
pushf
out
ret
sahf
sub
retw
rorl
test
lods
add
xor
jbe
rcll
shl
mulb
push
push
mov
add
add
notl
fs
cltd
jmp
jae
and
idivl
xchg
in
aam
push
mov
mov
notl
outsb
into
sbb
test
dec
das
inc
imul
outsb
add
pop
jp
pop
sub
adc
imul
sbbl
add
sub
jp
lahf
xor
mov
insl
push
mov
add
add
adc
fs
fwait
adc
and
das
and
inc
sbb
mov
add
mov
or
mov
mov
and
or
mov
outsb
loope
pusha
add
add
mov
mov
outsl
and
cltd
iret
outsb
add
inc
lds
cmp
outsl
add
add
and
in
xchg
outsl
jnp
out
add
xchg
adc
xchg
xor
push
or
pop
cmpsb
pop
inc
xchg
jecxz
or
cltd
push
lds
jbe
sti
cmp
outsl
add
shr
xchg
ds
mov
divb
add
add
leave
mov
mov
mov
xchg
cmp
add
es
inc
adc
cmp
fsubr
test
mov
or
xchg
xor
add
adc
push
aam
cmpl
aam
adc
mov
mov
fstl
or
pop
xchg
and
daa
pop
insb
rcll
xchg
and
fucomi
mov
out
add
add
sbb
test
jae
or
pop
cmp
sub
cmc
insl
sbb
inc
aad
lcall
outsb
fnstenv
test
adc
pop
in
xchg
sub
imul
rcl
or
xchg
sbb
jle
and
divb
push
test
lea
mov
add
xchg
add
data16
lods
fs
xchg
test
dec
lahf
and
insl
push
cmc
xor
xchg
in
lcall
in
xchg
and
pusha
add
add
cmp
outsl
dec
push
mov
and
inc
addr16
out
sub
push
adc
repnz
jae
das
sub
inc
inc
mov
add
shll
push
int3
lock
push
sti
inc
push
or
sub
add
sub
mov
nop
test
insb
scas
push
sub
inc
out
xor
mov
clc
movsb
cltd
sub
or
inc
std
clc
lds
or
ds
mov
insb
outsl
add
inc
sti
sti
frstor
xchg
cmp
les
add
mov
jmp
sub
outsl
add
mov
outsl
subl
ss
inc
jge
dec
inc
outsl
add
mov
clc
mov
outsl
ja
xlat
mov
add
lods
inc
stc
iret
ss
sub
mov
lea
add
xchg
fwait
xorb
adc
test
std
or
or
or
add
fsubr
pop
inc
js
xlat
test
mov
cmp
hlt
js
dec
into
fwait
mov
or
test
mov
hlt
push
mov
in
lea
adc
in
outsl
jo
sub
adc
call
dec
xor
dec
jmp
inc
inc
call
imul
pop
push
ficompl
mov
add
mov
scas
xchg
pop
xchg
and
in
ljmp
neg
std
filds
push
adc
and
jne
xchg
mov
icebp
mov
xchg
and
mov
xchg
enter
lret
iret
in
xchg
and
scas
ficoml
mov
in
xchg
mov
jnp
iret
dec
stc
scas
jp
mov
add
add
sub
jp
mov
jp
in
inc
lock
scas
lret
xchg
and
es
in
sbb
pop
scas
gs
iret
repnz
jne
xlat
and
aas
xor
pop
or
push
cmp
es
dec
sbb
pop
ds
iret
mov
and
aas
hlt
push
js
jno
mov
add
add
jmp
loop
mov
jecxz
push
and
lea
inc
ret
and
aas
mov
jno
flds
adc
outsb
add
lahf
or
loopne
shll
jbe
fwait
xor
mull
xchg
rorl
popw
mov
add
ret
fistps
push
jb
ss
outsl
add
mov
or
ds
cli
add
add
mov
add
cmpsb
mov
dec
aaa
mov
sti
mov
jecxz
push
push
outsl
add
mov
cld
inc
mov
cmp
in
clc
movsb
mov
pop
outsl
add
js,pt
aam
mov
xchg
adcb
dec
mov
inc
mov
sbb
mov
pushf
add
add
stos
pop
add
add
test
pushf
mov
rclb
xchg
cwtl
sbb
sbb
jo
sbbl
das
xchg
pop
mov
jge
rcll
or
pop
fwait
push
fcoml
dec
add
xchg
xor
lcall
pusha
cmc
ljmp
loopne
rorl
out
and
add
stos
sahf
xor
cmp
mov
outsb
fidivl
and
ret
jmp
outsb
mov
xchg
fs
xchg
and
dec
dec
ljmp
stos
dec
scas
fwait
clc
lods
inc
mov
sbb
in
xchg
mov
out
mov
mov
mov
sub
sub
add
add
enter
mov
xchg
xor
roll
fs
daa
andl
and
inc
je
outsb
scas
clc
mov
pop
out
outsb
stc
cmp
pop
jmp
mov
add
sub
arpl
test
call
mov
enter
push
mov
sbb
cli
add
add
lea
aas
sub
mov
jns
repnz
out
loopne
jmp
dec
mov
out
sub
add
cmp
stos
andb
outsl
add
fucomp
push
xchg
dec
testl
decl
add
dec
icebp
movsb
orb
xchg
sar
nop
xchg
dec
outsl
sti
jecxz
add
mov
outsl
add
add
or
dec
clc
inc
cli
pop
and
or
lock
push
clc
dec
jle
xor
bound
and
mov
dec
outsl
adc
mov
push
and
sub
adc
sbb
mov
inc
xor
mov
in
fcompl
mov
unpckhps
imul
sub
xchg
and
sbb
add
lcall
dec
push
sub
mov
nop
clc
push
mov
rcrl
pop
mov
dec
popa
leave
jno
adc
pop
push
mov
dec
inc
adc
jnp
mov
xchg
loop
mov
aad
int
sbb
xchg
mov
insl
push
dec
sti
outsb
sub
inc
inc
sub
xchg
or
cmp
inc
mov
iret
div
push
push
fs
xchg
test
nop
rolb
cmp
inc
xchg
and
scas
cwtl
push
push
and
jns
and
repnz
fiaddl
test
ja
jnp
xchg
jns
cmp
jbe
fsubrl
adc
sub
shll
mov
jno
test
pop
push
sbb
add
add
daa
ret
test
mov
jae
ljmp
andb
ja
inc
inc
jbe
xchg
xor
insb
cmp
call
and
jno
clc
inc
mov
xor
jbe
mov
fwait
mov
scas
push
je
xchg
inc
jbe
xchg
cmp
jnp
loop
lods
inc
xchg
push
inc
jg
ret
lcall
test
into
movb
add
icebp
push
xchg
pop
hlt
cmp
and
add
xchg
xchg
insb
or
xchg
in
add
dec
pop
push
scas
inc
idiv
xchg
dec
outsl
bound
dec
pop
xchg
dec
or
ret
scas
pop
or
ss
sti
jae
or
mov
push
pop
adcl
or
mov
pop
or
add
loopne
or
leave
xor
xchg
mov
add
push
sti
lret
cmp
mov
xchg
xchg
sbb
rcrb
push
mov
xchg
aad
lods
pop
sbb
out
mov
sub
add
movsl
lods
imul
sub
jp
test
rcll
imul
add
pop
sbb
add
add
rorb
imul
out
sub
lcall
sub
int
stos
sar
push
sub
dec
aam
add
aas
xchg
js
or
mov
pusha
cmpsb
outsb
iret
mov
movsl
out
xchg
outsb
divl
insb
movsl
in
outsb
divl
int3
movsl
jmp
add
add
xchg
scas
out
inc
test
in
sbb
adc
stos
subl
jne
xchg
adc
and
xchg
jae
call
aam
neg
popf
aas
sub
adc
imul
dec
adc
cmp
jp
xchg
dec
sbb
dec
and
icebp
dec
inc
mov
pop
mov
add
das
shll
mov
mov
lods
je
add
and
repz
movb
and
sub
repz
and
adc
stc
adc
pop
or
jnp,pt
rcll
push
adc
shlb
or
hlt
inc
mov
and
icebp
dec
push
mov
pop
popl
add
test
jb,pt
mov
lret
pop
or
sub
cmpsl
mov
out
lret
std
sub
dec
outsl
adc
xor
jbe
outsl
add
mov
fnstenv
xchg
lret
sub
dec
repnz
lahf
mov
add
dec
jle
sbb
dec
pop
mov
nop
xorl
add
add
iret
sbb
xchg
mov
push
push
sub
les
xor
nop
inc
inc
jns
mov
sbb
mov
adc
test
lods
pusha
mov
and
and
pusha
xchg
adc
jle
fs
or
and
lock
test
in
mov
pop
dec
push
add
je
xor
jno
push
into
xchg
fucomp
int
pop
add
add
xchg
pop
adc
test
adc
xchg
pop
xchg
mov
or
mov
cmp
xchg
and
adc
enter
lock
outsb
pop
pop
inc
mov
dec
pop
out
addr16
add
scas
jp
lock
push
jbe
and
iret
in
cmp
pop
xchg
and
in
xchg
mov
mov
add
and
xchg
mov
jbe
push
mull
stos
mov
pop
jbe
and
jmp
sub
cmp
fsts
jnp
aam
inc
mov
enter
mov
popa
push
mov
add
out
xor
mov
hlt
js
push
push
fidivrs
jg
repz
mov
imul
sbb
add
pusha
imul
outsb
ret
jno
xor
or
jg
sbb
js
xchg
mov
pop
adc
aas
mov
pushl
js
xchg
sbb
out
int3
jb
mov
sbb
lds
push
xchg
popf
es
lea
notb
xchg
mov
push
mov
or
dec
add
add
xchg
jnp
inc
imul
fdivs
pop
sbb
je
mov
dec
dec
outsl
sbb
dec
fwait
pop
sbb
adc
rolb
mov
imul
sti
add
scas
sub
xchg
jge
pop
popa
dec
lds
mov
jle
jae
xchg
dec
outsl
add
xorl
add
add
sub
adc
jno
xchg
and
cwtl
jl
and
shl
add
mov
xchg
mov
sub
scas
mov
inc
lods
push
clc
bound
shll
cmp
xor
push
lahf
outsb
aas
lods
pop
adc
push
add
mov
jp
add
inc
and
outsl
cltd
cli
shrb
jl
mov
add
movsl
mov
lcall
filds
jmp
lods
fisttpl
andl
sbb
insl
in
ja
out
jae
and
ret
jge
aaa
mov
icebp
xchg
mov
mov
insl
in
xchg
mov
and
push
sbb
mov
popa
outsb
aad
dec
sbb
jo
and
mov
bound
dec
adc
add
cs
ja
pop
imull
and
jne
xchg
and
popa
jbe
adc
adc
mov
push
xchg
jmp
xlat
xchg
dec
pop
mov
and
xor
mov
mov
push
sti
cmp
jnp
or
inc
xlat
int
sti
mov
imul
and
jne
in
dec
outsl
add
fs
add
add
mov
ja
jbe
cs
popa
add
ja
mov
and
xchg
push
aad
sti
or
cmp
stos
or
sbbb
cld
sti
inc
arpl
arpl
popa
mov
leave
test
subb
fbstp
fs
xchg
jle
jp
mov
add
jns
jns
inc
outsl
jo
xchg
cs
mov
xlat
icebp
add
add
sub
xchg
ds
adc
push
or
mov
ds
inc
outsl
add
ret
xchg
or
out
sbb
ret
repnz
daa
adc
cmpsb
push
notl
movsb
out
rclb
jno
xchg
leave
pop
inc
sbb
and
inc
xchg
add
rcrb
xchg
xchg
sub
cli
jmp
lea
and
cmc
test
xchg
xchg
es
pop
dec
es
pop
xchg
lock
repz
xchg
pop
xchg
mov
add
cmp
sbb
xchg
inc
push
xchg
and
mov
loop
pop
mov
movsl
xchg
mov
pop
aaa
add
add
lret
push
xor
mov
mov
insl
in
jecxz
test
insl
in
adc
jbe
repz
fmul
add
stos
fldcw
outsb
inc
insb
inc
mov
adc
pop
in
cmpsb
adc
mov
clc
sub
iret
testb
jno
in
sub
mov
xchg
mov
fldcw
icebp
push
clc
sub
jbe
sbb
lods
cmp
imull
add
add
sub
into
scas
cmc
xchg
mov
out
sub
idivl
xchg
jne
xchg
and
cmpsb
sbb
add
div
inc
jecxz
aaa
or
adc
jne
and
lock
jecxz
aaa
or
adc
jne
and
lock
jecxz
aaa
or
adc
jne
loopne
repnz
mov
adc
jne
add
add
das
repnz
arpl
jbe
sbb
jne
mov
lods
aaa
or
and
jns
jne
mov
lods
aaa
or
and
cltd
adc
xor
leave
xchg
mov
shrl
jg
std
stc
xchg
and
icebp
mov
jle,pn
shll
adcl
les
push
sti
les
sub
add
aam
outsl
jns
dec
outsl
or
mov
push
adc
xchg
sbb
call
aaa
outsl
mov
ds
push
mov
pop
push
aaa
outsl
enter
call
test
inc
cmp
outsl
add
xor
or
xchg
and
ljmp
in
stos
mov
es
pop
addr16
mov
add
add
jmp
push
inc
bound
dec
xlat
jne
nop
lahf
int3
xor
pop
pushf
cmp
sti
add
inc
fstl
and
lret
dec
loop
adc
js
imul
andl
adc
ljmp
jnp
inc
test
setg
sbb
mov
outsb
in
add
add
aaa
jae
or
insb
in
xchg
js
in
xchg
and
repz
or
sbb
insb
in
xchg
mov
cmc
mov
test
data16
and
pop
adc
stos
cs
cmp
jle
push
and
xor
imull
sbb
in
xchg
and
cmp
adc
add
add
clc
mull
mov
xchg
pusha
mov
out
add
daa
repz
pop
pop
mov
clc
ret
cmp
jmp
outsb
lea
mov
imul
cmp
std
lcall
add
lock
lahf
aas
mov
lds
inc
add
imul
cmp
add
add
aaa
sbb
pop
das
xchg
and
aas
outsl
ret
stc
jmp
outsb
add
fwait
lock
pop
and
orb
xchg
lcall
inc
insl
cli
mov
dec
outsl
add
mov
test
outsl
add
cmp
inc
sahf
mov
jb
cmp
inc
adc
std
repnz
cli
lret
mov
jb
add
add
lds
test
outsl
andl
test
test
cmp
addl
outsb
add
add
daa
sahf
es
testl
pop
outsl
or
popa
aas
mov
and
xchg
outsl
cmp
movsb
pop
fsubl
mov
sbb
inc
jbe
pusha
cwtl
sbb
fcompl
mov
xchg
lahf
sub
pop
inc
mov
rcll
push
ficompl
repnz
sub
fdivl
pusha
inc
dec
rorb
repz
adc
xchg
test
add
movsb
xchg
push
cmc
cltd
pop
xchg
sahf
movsl
mov
and
iret
popf
sahf
add
mov
mov
and
outsb
insl
xchg
and
ss
add
add
fnstsw
mov
xchg
sub
in
xchg
data16
test
mov
iret
sub
pusha
mov
xlat
imul
pop
pop
mov
sbb
mov
jbe
cmova
jmp
add
popf
andl
loope
insl
mov
lock
das
xchg
and
negl
add
add
push
decl
jecxz
cmp
dec
ja
jno
insl
aaa
push
shll
lds
xchg
pop
pop
mov
dec
pop
xchg
sbb
add
jp
push
test
test
leave
or
popf
sub
sbb
push
dec
jo
jbe
inc
cmpsl
pushf
xor
bswap
mov
shlb
add
mov
dec
in
pop
lret
pop
insl
es
mov
adc
std
jns
int3
mov
pop
clc
sbb
call
test
mov
xchg
cmp
sbb
jg
and
jae
mov
add
mov
xorl
mov
mov
lcall
add
add
or
bound
in
rclb
leave
mov
loop
std
dec
mov
cmove
test
call
cmp
adc
adc
loopne
mov
add
mov
push
sbb
pusha
sar
push
sub
inc
jmp
lock
pop
das
sub
jmp
xchg
inc
add
add
fadd
int
popf
adc
mov
and
inc
dec
mov
xchg
inc
push
int
pop
xchg
and
push
ljmp
fiadds
mov
mov
mov
insl
xchg
pop
xchg
and
insl
add
in
push
out
sub
gs
cmp
insl
in
xchg
and
scas
mov
add
add
negl
xchg
and
cmp
xor
jecxz
push
ret
dec
sbb
adc
ficoml
data16
out
mov
sub
xor
xchg
and
sub
ss
scas
push
aam
hlt
mov
xchg
mov
testl
push
and
divb
add
add
and
dec
mov
lret
hlt
pop
ja
and
sbb
in
ret
jb
sti
mov
push
xchg
sbb
hlt
push
xchg
adc
movsb
arpl
jno
inc
inc
pop
pop
outsb
ret
mov
and
push
rorl
sahf
ja
and
aaa
aas
insb
repnz
loopne
enter
jp
or
add
add
cmpsb
pop
xchg
cmp
subl
mov
bnd
cmp
cmpb
outsl
add
inc
outsl
ja
mov
or
test
jns
xor
xchg
cmp
dec
mov
push
cli
dec
cmpsb
mov
pop
in
lds
pop
add
adc
cli
add
smsw
subl
dec
divb
roll
add
xchg
cmp
add
xchg
test
pushf
cmp
sahf
imul
idivl
xor
xchg
and
push
xchg
mov
test
sub
xor
and
ljmp
test
movups
add
jp
sti
add
sbb
xchg
and
pop
add
add
into
and
das
push
sbb
cmpl
stc
jle
add
add
mov
xchg
es
pop
xchg
push
data16
loope
add
lret
in
xchg
test
fld
in
sbb
pusha
data16
nop
test
jnp
push
in
in
ljmp
fsubrl
xchg
and
add
repz
cltd
movsl
xchg
dec
xor
test
stos
and
mov
sub
outsb
aam
xor
push
lods
mov
add
outsb
mov
out
lods
popf
test
xor
mov
xchg
mov
ja
outsb
pop
xchg
lods
and
cld
dec
out
daa
icebp
dec
mov
push
cld
decb
test
sub
jae
add
hlt
inc
add
add
aaa
sub
sbb
shl
sub
push
mov
add
jb
cmp
daa
icebp
push
xchg
xchg
repz
daa
or
outsl
clc
push
or
sub
push
dec
jmp
inc
lods
arpl
addb
jbe
scas
and
outsl
jl
or
jp
xchg
or
mov
add
add
testb
mov
push
dec
mov
mov
xchg
leave
sbb
dec
sahf
add
psubq
adc
insl
add
loopne
sub
das
loope
mov
jecxz
cli
pop
addl
push
rorb
add
filds
inc
dec
mov
inc
or
loope
and
or
add
outsb
add
add
mov
cmc
into
in
lods
js
and
mov
cwtl
aas
jae
mov
iret
lods
push
and
jge
dec
push
xor
andl
shrl
push
insl
xchg
das
cmp
add
push
jnp
in
adc
shrb
xchg
pop
sbb
mov
cmp
pop
clc
pop
and
cmp
sbb
xchg
mov
mov
add
das
jae
jnp
cmc
mov
lcall
out
mov
imulb
mov
lods
adc
test
outsb
in
xchg
test
cmc
pop
outsb
dec
jbe
loopne
in
pusha
jp
int
outsb
out
xchg
and
lcall
jne
jne
or
mov
add
add
outsb
in
add
je
cmp
inc
mov
mov
xchg
and
pop
in
xchg
and
mov
pusha
inc
out
push
pop
sub
outsl
rclb
negl
lods
outsb
jbe
stos
jno
sarl
jbe
lahf
sub
cmpl
sbb
mov
out
mull
test
out
mov
mov
add
add
lahf
sbb
test
ljmp
aaa
leave
jg
cmp
les
lods
inc
jg
outsb
add
insb
insl
add
outsb
repz
mov
outsl
and
call
jmp
and
inc
pop
xor
jb
mov
xchg
repz
push
or
test
xlat
add
add
movsl
aaa
sbb
and
push
add
cvtps2pd
stc
dec
jbe
jecxz
out
lret
or
fmull
inc
lret
out
fsubl
inc
push
or
adcl
or
or
jo
xchg
ret
negl
adc
dec
and
dec
xchg
or
push
dec
xchg
mov
sbb
adc
outsl
and
add
js
subb
stos
pop
xchg
out
rclb
xchg
pop
xlat
and
int3
mov
adc
and
pop
xchg
push
aad
push
and
push
jg
sbb
int3
xchg
lods
fldenv
in
sbb
jle
stc
sbb
or
int
repz
mov
mov
arpl
and
add
add
adc
xchg
xchg
jge
aad
mov
dec
cwtl
outsb
xor
pop
in
xchg
and
cmp
lods
js
pop
xor
adc
lcall
aad
push
outsl
mov
push
xchg
push
fnstcw
xchg
add
cmp
lods
out
and
mov
xchg
out
lods
xchg
and
jae
add
add
sbb
in
xchg
bnd
and
outsb
ficoml
pushf
jns
xchg
dec
scas
push
or
pop
lods
fisubrl
add
in
cli
sub
ret
inc
icebp
dec
push
cltd
aaa
rol
pop
add
movsb
fisttpl
ja
sbb
mov
sahf
mov
testb
imul
stos
lea
out
das
lock
in
xchg
jae
adc
add
out
and
repnz
inc
lahf
pop
cld
xor
bound
rcll
loop
repz
cmpsl
sahf
das
lock
out
xchg
scas
cmpsl
push
loopne
lcall
outsl
daa
xchg
or
jecxz
cmpl
or
lds
adc
add
leave
out
incb
or
mov
lret
add
add
add
in
sahf
xchg
ret
repz
in
incb
cmp
xor
adc
icebp
int
cmp
fstp
and
sub
push
dec
xchg
add
sbb
push
mov
mov
xchg
or
add
or
sti
out
or
push
fsubl
jge
lds
aad
push
and
xchg
and
xchg
test
xchg
pop
lahf
mov
xchg
xchg
sbb
push
sbb
out
enter
sbb
add
movsl
fisubl
cmp
cmp
out
xchg
fbld
inc
mov
inc
xchg
dec
xchg
and
jge
mov
cwtl
inc
sbb
jle
push
push
add
add
add
repnz
xchg
xchg
jg
xchg
xchg
or
divl
int3
push
jbe,pt
adc
in
push
popf
jp
sub
test
push
push
daa
jnp
enter
adc
mull
push
inc
jge
xchg
das
outsb
in
xchg
add
out
and
pop
xchg
xchg
lods
out
xchg
and
add
sbb
fidivl
mov
out
dec
insb
mov
ljmp
push
xlat
addb
mov
icebp
iret
mov
cld
orb
imul
and
popa
xchg
push
push
and
ljmp
icebp
ret
push
xchg
jge
loopne
push
or
bound
out
and
xchg
bound
jl
mov
lock
mov
ja,pn
ret
mov
mov
push
je
scas
xchg
das
or
jecxz
inc
xchg
loope
ret
mov
scas
pusha
xchg
push
xchg
mov
sti
mov
jmp
fs
mov
push
jns
inc
outsl
or
pop
add
cli
push
mov
aas
xchg
adc
add
dec
xchg
dec
adcl
jno
xlat
in
xor
adc
xlat
xor
fstpl
sbb
adcl
add
mov
cs
or
cwtl
or
mov
and
push
inc
and
adc
push
jo
add
add
pusha
dec
jnp
adc
add
add
adc
stos
popa
stos
fstps
jae
pop
je
xchg
pop
sbb
push
aad
scas
mov
sub
js
sbb
pop
sar
mov
xchg
mov
sbb
mov
sbb
in
and
jnp
sub
dec
dec
sbb
cmp
aam
test
mov
mov
lods
push
mov
add
xchg
and
cmp
aam
jno
ret
ficoml
cmc
jp
sbb
jno
lret
adc
or
int3
data16
jnp
cltd
sbb
cli
adc
inc
test
shl
xor
and
pop
in
xchg
and
cmp
in
xchg
out
jle
outsb
outsb
pop
adc
unpckhps
leave
hlt
xchg
and
add
sahf
add
call
pop
cld
mov
mulb
mov
xor
cld
mov
push
into
sub
cmp
lret
out
jl
xchg
pop
je
es
mov
inc
inc
pop
imull
xor
outsb
add
les
or
and
mov
repz
mov
add
push
and
cmp
outsb
add
fistl
nop
sub
push
out
daa
cmp
xchg
inc
mov
add
movsl
or
in
mov
shll
jns
and
das
or
adcl
pop
inc
repnz
pop
lahf
ret
cmpsb
or
and
xchg
xchg
push
push
outsb
add
add
xchg
das
jno
push
mov
in
mov
stc
les
inc
push
xor
jb
jns
loopne
or
stc
add
cli
lock
ss
and
jl
out
int
pop
xchg
and
inc
jg
or
nop
xchg
in
pop
mov
jmp
adc
or
dec
in
lock
fiaddl
add
cli
or
sub
xor
iret
jge
jle
in
xlat
jge
mov
scas
sahf
push
inc
ds
push
push
imul
pop
xchg
and
lods
jnp
sbb
xchg
inc
pop
adc
mov
push
xor
sbb
mov
push
adc
xor
jle
imul
stos
sarl
pusha
push
sbb
pushf
lcall
ret
push
shr
dec
xchg
xchg
scas
out
aam
jo
sub
pushf
out
mov
sub
jecxz
jnp
subb
lods
xchg
pop
jle
mov
outsb
fisubl
push
out
push
pop
mov
loop
out
das
add
pop
jbe
aaa
mov
pop
add
add
cmpb
fsubs
xchg
sbb
cs
inc
mov
add
testl
cmpsl
push
clc
scas
xor
cwtl
js
outsb
or
daa
test
mov
fdivrs
insb
testl
push
sbb
mov
mov
and
inc
cmp
add
push
test
and
lret
pop
add
add
lahf
cs
and
xchg
inc
flds
shlb
fdivrp
test
arpl
outsb
jo
xchg
mov
mov
andl
cmovb
js
xchg
outsl
ja
cmpb
fxtract
pop
jp
jbe
std
adc
mov
xchg
out
mov
xchg
out
repnz
add
nop
cld
outsb
sbb
jne
xchg
mov
inc
lret
hlt
xchg
cld
outsb
dec
sbb
mov
xchg
push
xchg
and
and
popf
dec
and
inc
shrl
inc
fistps
jns
addr16
popf
and
fsubs
add
dec
out
or
push
mov
mov
add
ljmp
fxch
and
inc
dec
test
adc
pop
mov
leave
aas
push
mov
xchg
and
xchg
pop
push
es
mov
out
or
xchg
push
mov
dec
xor
lcall
fs
divl
mov
jne
fsubr
hlt
sbb
les
sub
add
add
dec
test
bound
lds
divl
adc
std
and
outsb
rcrl
cmp
jns
je
adc
stc
sub
into
cmpsb
mov
xchg
and
xchg
js
and
in
xchg
and
lods
xorl
add
sub
testl
sub
test
add
arpl
ret
lret
icebp
sti
insb
out
add
movsb
lret
sub
mov
pop
mov
inc
cmp
jbe
testl
lea
ss
mov
pop
lret
in
ja
ror
fidivrs
mov
sbb
les
outsb
lods
scas
sbb
mov
xchg
inc
xor
add
add
dec
cmp
dec
lcall
mov
in
testl
in
dec
ljmp
int3
or
xchg
lret
ret
or
insb
das
stc
divb
jbe
mov
or
jg
call
cld
outsb
or
gs
clc
dec
pop
pop
sahf
incl
add
aam
es
jp
add
xchg
inc
pop
sti
push
es
pop
pop
push
add
xor
jno
iret
xchg
out
das
lahf
rcr
pop
and
bswap
int
nop
sbbb
test
jno
es
sub
jecxz
outsb
lahf
roll
adc
push
sti
ds
psrad
inc
mov
pushf
jno
and
dec
mov
ds
popl
add
pop
add
dec
loope
movsb
mov
adc
pop
pop
add
dec
cltd
pop
xchg
mov
sbb
xchg
cmp
outsb
xor
and
in
xchg
and
outsb
push
pop
xchg
jnp
push
and
lods
xchg
add
xchg
and
ficompl
ss
xchg
outsb
in
xchg
mov
add
out
stc
adc
rcll
add
xchg
and
outsb
ficompl
dec
jb
xchg
sbb
out
sbbb
dec
fmuls
je
adc
sahf
xchg
ss
cmp
mov
xchg
fimull
cs
cs
add
sub
dec
lock
popa
add
bound
aas
and
ret
and
imul
lcall
add
ror
out
aas
xor
dec
xchg
insb
into
xchg
mov
mov
dec
aaa
clc
je
mov
inc
cmp
jbe
xlat
mov
in
fdivrl
lea
cwtl
jno
xor
lret
in
ja
ror
out
aas
mov
lret
lods
xchg
outsb
ja
es
outsb
add
push
xor
mov
cmp
add
add
bound
pop
sti
mov
xadd
mov
inc
push
sti
dec
xor
xchg
mov
and
sti
int3
sbb
xchg
js
dec
lret
ljmp
stc
and
jbe
jnp
call
outsb
or
in
sti
dec
rclb
es
mov
cld
ret
push
sti
add
add
push
add
jne
pop
nopl
iret
mov
addr16
into
fstps
out
into
loope
nop
adcb
imul
and
sbb
jecxz
lahf
iret
rcrl
push
xor
xchg
pop
loop
pop
xchg
lcall
shll
inc
mov
dec
add
shlb
mov
mov
mov
lcall
xchg
push
push
pop
outsb
stos
xchg
xor
in
xchg
mov
add
sbb
fucomp
xchg
and
cmp
and
sahf
dec
push
mov
fstl
movsl
jmp
negb
xchg
and
xor
mov
shll
in
add
add
in
xchg
and
jnp
iret
pop
mov
or
push
fprem1
mulb
push
lods
sbb
inc
lods
je
adc
mov
in
add
and
xor
xor
inc
push
icebp
dec
mov
ret
jle
mov
jno
sub
pop
popl
push
repz
mov
jmp
aas
outsb
mov
popl
add
jle
js
or
int3
movsb
in
ljmp
lock
lcall
mov
lock
jno
dec
iret
mov
fadds
xor
xor
sahf
das
stos
push
repz
add
out
lods
lods
xor
xchg
sbbl
mov
pop
push
pop
ja
pop
cmp
push
outsl
lds
add
xchg
gs
popa
push
lock
push
je
push
or
push
adc
testb
mov
pop
rcll
xchg
cli
outsb
add
adc
lock
push
je
inc
push
outsl
add
or
push
xchg
pop
call
push
outsl
or
rolb
out
mov
lods
xchg
cmc
out
add
add
lret
xchg
es
adc
insb
mov
inc
or
int3
jno
ret
pop
dec
dec
xchg
adc
pushf
das
clc
inc
xchg
pop
cmp
sub
mov
sub
rcrl
sbb
xchg
cmc
std
ret
cmp
xchg
xor
add
mov
daa
xchg
add
add
add
sbb
outsb
out
push
cmp
aad
imull
mov
sub
in
jle
aas
mov
hlt
mov
jle
outsb
in
push
jl
in
xchg
test
out
loop
and
outsb
in
push
decl
ja
or
sub
jbe
and
mov
jb
out
and
fucomp
or
nop
lods
movb
xchg
add
add
outsb
jbe
aad
sub
ljmp
out
aad
sub
or
pop
cmp
pop
xor
daa
mov
icebp
inc
lods
ss
es
jbe
jb
repz
xrelease
jnp
cld
aaa
mov
orl
jg
mov
sbb
outsb
ret
cli
pop
mov
add
add
and
mov
cli
sub
dec
xchg
stos
xor
lea
scas
push
clc
xchg
jp
das
add
jnp
and
pop
mov
std
aaa
dec
das
icebp
dec
xchg
out
lcall
mov
push
xor
cld
lods
cmp
inc
loop
jo
jae
fistpl
stos
ds
sbb
lds
rorl
pop
add
push
popf
push
dec
jp
std
add
add
dec
mov
sbb
xchg
lcall
sti
fcomi
jno
mov
iret
xchg
push
rcrl
jo
mov
jo
mov
or
push
lods
enter
bnd
loope
and
inc
or
mov
pop
or
test
movsb
mov
int3
add
add
movsb
int3
add
cltd
and
inc
or
fisttpll
and
mov
push
add
sub
xchg
pop
xchg
and
movl
fdivrl
cltd
mov
xchg
cmpb
rorl
out
mov
jnp
mov
decl
nop
pop
sub
sub
add
test
outsb
xchg
movsb
cld
mov
test
outsb
stos
flds
jecxz
inc
outsb
dec
out
outsb
std
cmc
inc
outsb
pusha
repnz
outsb
out
hlt
inc
outsb
push
cmc
inc
outsb
push
cmp
jmp
cmp
jnp
inc
outsb
clc
cmp
adc
inc
outsb
inc
cs
outsb
mov
clc
inc
outsb
xor
outsb
push
in
inc
outsb
cmp
inc
outsb
imul
add
inc
outsb
push
sti
inc
outsb
add
lahf
dec
add
sahf
dec
add
les
pop
ret
dec
add
les
les
ret
les
jp
dec
add
dec
add
dec
add
dec
add
dec
add
cmp
mov
push
xor
jb
adc
out
les
movsb
mov
mov
xor
push
add
jp
sub
ss
dec
imul
mov
dec
push
sbb
add
add
push
cmpb
cmp
cld
popf
pop
aam
outsl
enter
enter
enter
enter
call
sbb
mov
cld
in
ss
jo
cltd
or
inc
mov
add
femms
cmpb
adc
sbb
sahf
out
rcrb
push
pop
push
mov
mov
inc
dec
ja
push
pop
leave
pop
add
push
outsl
in
sti
and
sub
mov
sub
jb
test
in
sbb
mov
and
mov
jno
jle
stc
inc
xchg
pop
and
adc
inc
jg
add
mov
fdivrs
sub
xchg
pop
xchg
and
fdivrs
fdivrs
shr
dec
jg
push
dec
shl
scas
in
test
stc
ljmp
out
pop
xor
and
adc
outsl
scas
fldcw
jecxz
cwtl
jle
mov
shrl
or
insl
push
out
and
sub
add
push
mov
mov
add
add
loop
sub
adc
add
imul
shrb
out
mov
and
lods
je
outsl
sahf
loopne
pop
inc
das
push
sub
enter
xchg
and
sub
decl
out
jns
push
clc
mov
shlb
in
xchg
and
mov
add
add
dec
jecxz
jnp
icebp
fsubl
mov
mov
dec
cmp
xchg
sti
jl
jb
jl
clc
data16
into
idiv
pop
cld
ds
jbe
xlat
mov
pop
clc
lea
add
rorb
sarb
jecxz
sbb
push
lret
in
cld
mov
mov
inc
test
in
pusha
jb
add
add
jle
clc
stc
into
xchg
cld
pop
cld
scas
inc
data16
hlt
ret
lret
fmuls
dec
dec
sahf
data16
pop
jns
or
int3
sbb
leave
push
xchg
mov
scas
sub
adc
jae
lcall
dec
dec
or
rcll
pop
mov
fcmovnbe
push
std
adc
jae
lcall
into
push
adc
dec
pop
xchg
add
fbstp
orl
cltd
push
std
or
orl
pop
jae
adc
jnp
fimull
pop
out
mov
out
jp
pop
pop
jnp
sub
xchg
pop
xchg
and
xchg
pop
xchg
lods
push
lret
adc
ret
call
inc
cmp
call
jmp
fildl
add
pop
lods
xor
inc
push
add
push
inc
shll
pop
xor
notl
and
or
lds
mov
pop
repz
xor
lret
push
lret
dec
outsb
test
outsb
in
call
mov
hlt
shlb
mov
mov
cld
mov
xchg
mov
pop
repz
test
mov
add
and
sti
notl
shl
out
sub
mov
add
call
and
repz
repz
mov
and
fisubs
xor
and
icebp
imulb
jbe
in
mov
mov
push
outsb
aas
sub
mov
call
add
add
pop
call
repnz
icebp
mull
pop
hlt
xchg
cmp
mov
sbb
add
or
xor
mov
xor
outsb
out
in
fsubs
notl
cmp
mov
bound
orb
lret
sarb
push
inc
mov
ja
icebp
push
mov
test
sub
pop
aas
in
pop
mov
add
xchg
aas
push
xchg
jle
shrl
sahf
jbe
jle
add
or
test
push
jb
ret
vpunpckhdq
dec
xchg
out
inc
or
xchg
js
roll
inc
push
or
and
and
jne
ja
idivl
fistl
jmp
pop
jb
adcl
xchg
xchg
sbb
divb
pop
aad
pop
call
or
pop
add
mov
lret
shr
pop
xor
hlt
xchg
pop
sbb
js
or
mov
std
or
pop
hlt
pop
inc
stos
stos
push
mov
push
fcomi
add
addr16
adc
ljmp
and
add
push
dec
jns
add
out
add
add
and
mov
in
outsb
sub
popf
shl
mov
fisubl
inc
mov
aaa
outsb
movsb
aas
sub
xchg
cmp
xchg
test
cltd
inc
cmova
xchg
and
outsb
pop
iret
div
lods
test
push
fcompl
jbe
imul
das
xchg
sub
adc
insl
push
add
add
cmp
cmp
lods
and
xchg
pop
jle
ds
mov
inc
push
ss
outsb
jle
mov
sbbl
jae
loope
repnz
mov
xchg
add
int
jp
icebp
dec
mov
mov
fnstcw
in
cmp
mov
cld
bound
lret
inc
adc
push
add
add
mov
mov
icebp
push
jnp
test
in
gs
aas
jl
pop
mov
dec
out
les
repnz
shll
call
mov
ret
repz
mov
sub
or
and
jo
jb
jnp
or
popf
cld
das
jns
jbe
mov
lods
outsb
pop
in
cmp
icebp
inc
mov
das
hlt
xchg
or
and
loop
jne
ja
imull
or
add
push
std
mov
xor
cld
push
pop
or
dec
or
lret
xchg
inc
or
pusha
adcb
mul
sti
out
mov
sti
inc
jl
adc
aas
addb
ret
or
inc
push
std
adc
adc
addb
mov
push
into
push
std
add
add
jnp
add
es
adc
cs
and
stos
pop
es
push
add
loopne
sti
stos
lock
lahf
stos
mov
lock
jge
adc
xchg
imul
adcl
inc
pop
lock
movsl
dec
es
mov
and
sbb
mov
shl
mov
pop
jecxz
lods
arpl
mov
add
push
and
cs
icebp
mov
fwait
push
jmp
daa
jae
nop
mov
pop
outsb
push
adc
loope
je
push
mov
shlb
test
lock
sbb
mov
sbb
sbb
jbe
test
loop
in
data16
xchg
frstor
imul
or
pop
xchg
jo
add
add
je
pop
not
lea
and
in
loop
and
pop
rorl
scas
mulb
movsb
roll
imull
sarl
push
invd
push
add
add
in
sub
lea
push
mov
enter
enter
xchg
lea
push
shlb
add
fsubs
mov
mov
das
pop
insb
fdivl
jns
jns
or
cmp
cmp
inc
das
and
rclb
jo
test
clc
inc
arpl
mov
aas
or
add
cmp
push
adc
jge
testl
sub
push
or
dec
add
add
sub
data16
mov
xor
adc
adcl
stc
into
jle
addr16
addl
dec
rcll
sbb
stc
into
outsb
xchg
push
xorb
adc
jecxz
adc
dec
adc
mov
into
ds
data16
and
jecxz
adc
inc
and
movsl
mov
mov
add
int3
std
sbb
out
in
pop
inc
xchg
mov
dec
and
arpl
mov
mov
mov
cmc
mov
fcompl
ficompl
sbb
sub
dec
mov
jmp
lahf
sub
sbb
sub
dec
pop
mov
sbb
jns
add
push
sub
in
cmp
add
add
jno
xchg
insl
data16
clc
mov
in
mov
nop
gs
movsb
adc
test
jno
push
repnz
ds
out
sbb
pop
std
lods
shlb
test
push
xchg
push
ret
ds
dec
std
aam
mov
out
test
xchg
push
scas
cmp
add
add
std
fdivl
in
out
test
xchg
push
ds
lret
std
add
nop
in
out
add
and
jmp
or
pusha
lahf
das
xor
lods
mov
test
lds
and
les
sub
iret
nop
xchg
cs
lcall
xchg
lods
enter
sti
sbb
or
loopne
ss
mov
dec
add
add
sahf
push
clc
sub
add
jecxz
subl
in
inc
std
mov
negb
js
push
clc
add
repz
jecxz
test
mov
push
clc
fistpl
xchg
xchg
pop
movb
aam
inc
xorb
xor
clc
adc
imul
add
jmp
xchg
nop
flds
and
imul
add
xchg
xchg
push
clc
outsb
jo
ja
decl
jne
dec
inc
xor
imul
repz
stc
testl
shr
notrack
and
loop
push
mov
sub
add
out
imul
jb
dec
inc
lds
push
add
fdivl
mov
lods
decl
fcoms
or
lods
xchg
mov
pushf
push
and
sbb
call
sbb
loopne
xchg
out
push
jmp
mov
push
jmp
inc
mov
mov
fidivrs
xchg
movsb
fdiv
and
lret
test
jb
mov
jmp
filds
add
jmp
std
lods
xchg
push
adc
xchg
pop
xchg
pushf
pop
rorb
add
test
add
adc
jno
fidivl
jbe
mov
xchg
xchg
mov
and
sub
adc
outsb
inc
cwtl
jno
imul
lcall
or
xchg
xor
icebp
lods
adc
idivl
scas
push
arpl
aaa
stc
sub
pop
mull
lods
push
add
out
out
or
inc
adc
ljmp
hlt
icebp
inc
pop
sahf
push
loopne
xchg
mov
inc
adc
jb
outsl
xchg
mov
inc
std
testl
cwtl
mov
mov
es
add
pop
outsb
mov
xchg
loope
and
mov
out
les
icebp
testl
add
out
inc
ror
das
mov
fmuls
fildll
and
jns
and
jne
pop
mov
inc
cld
xchg
or
ret
fsubrl
mov
idivl
xchg
jo
fldt
jg
cld
cli
pop
or
std
rorb
sahf
dec
shlb
cld
icebp
rolb
cmp
adc
fisubrs
adc
jg
add
ljmp
sbbb
dec
or
out
aas
jns
lret
test
js
mov
aad
stc
out
mov
icebp
jg
cld
cli
push
sbb
into
outsb
add
es
imul
mov
jae
mov
adcl
jecxz
icebp
mov
repnz
inc
dec
repnz
inc
leave
mov
add
cmp
jne
lds
mov
out
pop
cmp
mov
lds
jnp
lds
ljmp
inc
jbe
ljmp
stos
stos
xchg
xchg
mov
jle
adc
xchg
mov
cwtl
sbb
cltd
dec
xchg
lods
xchg
dec
outsb
in
aas
in
and
outsb
jo
std
insl
in
xchg
jae
imul
outsb
in
add
add
xorb
xchg
out
adc
xrelease
stos
mov
shlb
or
sarb
leave
sbb
sub
dec
icebp
mov
mov
pop
sub
sti
push
sub
mov
xchg
and
xor
daa
sub
jns
fimuls
in
or
inc
add
add
js
pop
cmp
cmp
sti
jg
cli
cmp
sbb
cmp
jle
mov
or
push
mov
ljmp
loop
mov
jbe
add
sub
test
daa
outsb
add
lea
adc
aad
adc
insb
nop
es
mov
adc
insb
nop
push
add
test
add
add
mov
cmpsb
insl
add
xchg
icebp
ret
cmp
lods
mov
xchg
mov
shlb
or
pop
or
and
cmc
mov
xchg
cwtl
xor
enter
call
lret
cld
in
call
pop
xchg
cmc
inc
xchg
inc
stos
cmpb
mov
add
add
inc
int3
dec
test
add
int3
cmc
dec
add
add
ret
mov
jbe
int3
outsb
jns
xlat
or
in
int3
loope
cmc
out
pmaddwd
push
fs
xor
outsl
fbld
adc
in
sti
sub
mov
sbb
outsb
cwtl
sti
add
loope
adc
fs
aam
add
xchg
adc
fdivr
adc
pusha
add
aam
sbb
inc
ja
inc
add
add
scas
push
adc
movsl
pop
sti
adc
mov
mov
adc
add
push
inc
adc
movsl
pop
sti
adc
sar
lock
sub
stos
imul
and
or
adc
adc
out
cmc
mov
mov
pop
mov
push
int
mov
sahf
movsb
lods
cmp
add
stc
arpl
jo
fcompl
cmp
jmp
adc
fsubr
test
sahf
bound
push
xor
mov
xchg
and
scas
in
and
movsl
fimuls
data16
maskmovq
negl
lcall
loope
in
call
mov
test
sti
inc
out
sti
inc
rcrb
add
in
add
add
stos
jmp
push
shll
xorb
xor
inc
jg
ss
sahf
pop
mov
sti
cld
data16
das
mov
xchg
xor
xchg
xor
and
xor
pop
cld
bound
pop
and
inc
fildl
adc
outsb
add
loope
movl
xor
mov
sub
test
add
mov
icebp
pop
xchg
xor
rclb
xor
mov
leave
mov
add
rcrl
sbbl
jp
sbb
hlt
mov
adcl
sub
or
dec
pop
add
int3
orl
addr16
pop
sbb
xchg
jb
roll
add
add
xchg
or
jno
push
pop
aad
cs
call
pop
and
rorl
jecxz
decb
js
jg
add
ja
push
mov
xchg
pop
adc
sti
jmp
jle
and
aaa
and
mov
add
fucom
nop
pop
lret
mov
lock
ljmp
ret
mov
ret
inc
inc
add
add
scas
pop
lock
daa
mov
mov
xchg
push
or
xchg
and
add
dec
xor
jp
jbe
push
mov
pop
mov
fists
jl
pop
les
insl
in
xchg
push
jbe
call
sub
bound
cmp
sbb
or
add
add
and
mull
or
mov
adc
sub
sub
add
pop
in
cmc
mov
repnz
in
in
xchg
fidivl
lods
pushf
scas
mov
xchg
and
icebp
xchg
mov
outsb
add
daa
cmp
out
mov
daa
outsb
push
xchg
adc
popa
jne
add
add
and
inc
fcomi
xchg
jnp
outsb
add
mov
sbb
add
daa
cmp
pusha
adc
shrb
or
out
mov
outsl
pusha
pusha
aaa
aas
and
inc
out
outsb
lea
clc
add
inc
loope
mov
scas
lods
or
test
int3
aas
daa
outsb
add
lods
or
xchg
rorb
sbb
add
push
cld
in
or
bound
mov
cmc
les
out
jle
int3
loop
flds
js
push
hlt
lahf
mov
stos
push
dec
adc
int
arpl
pushf
jle
repnz
mov
loope
mov
add
inc
repnz
int3
add
imul
movsl
pop
dec
push
mov
add
add
int
jo
and
lahf
jl
sub
adc
test
mov
scas
cmp
sub
xchg
jp
and
xor
imul
push
je
push
xor
push
mov
xor
movsb
jns
insl
add
and
sahf
imul
add
sbb
xchg
pop
mov
jge
fbstp
xchg
mov
pop
jge
int
pop
mov
xlat
insl
jb
mov
sub
js
mov
xchg
jle
push
pop
jnp
inc
cmp
out
xor
inc
fwait
jns
test
jmp
mov
mov
pop
jbe
outsb
movsb
mov
jge
scas
aas
jb
das
add
add
lds
xchg
movsb
sbbl
xor
jge
and
and
adc
insl
in
xchg
and
popa
xchg
and
in
mov
and
cmp
inc
pop
negl
pusha
push
xchg
and
add
gs
cmp
add
mov
mov
fdivrs
in
pop
cmp
mov
xor
out
and
add
gs
jo
lea
and
scas
and
mov
mov
enter
enter
test
mov
outsl
nop
sbb
add
ret
movq
outsb
mov
es
cmp
iret
bextr
inc
cmpsl
ja
in
pop
adcl
ja
xor
mov
addb
add
and
adc
or
xchg
mov
js
inc
fs
ljmp
inc
sbbl
xchg
into
outsb
add
jp
cld
mov
mov
je
inc
xchg
fists
cmpb
sbb
sbbl
jns
inc
and
jmp
add
add
pop
repnz
adc
ljmp
das
test
sbb
test
adc
sub
cld
and
push
cwtl
adc
sbb
mov
pop
or
pop
sub
shlb
adc
and
cmp
aad
jb
aad
jb
rcll
adc
add
xchg
stos
aam
subb
or
cmp
pop
pop
call
mov
out
test
fwait
push
mov
shrb
mov
push
jb
into
clc
pop
xchg
iret
mov
repz
pop
sahf
push
mov
mov
add
sbb
mov
or
add
mov
xchg
mov
mov
icebp
sub
add
add
shr
mov
mov
fcompl
pop
sub
mov
xchg
mov
out
test
xchg
push
mov
push
push
das
cld
xchg
cmpsb
pop
sti
and
adc
mov
sti
xor
incl
popfw
lcall
sub
sbbl
adc
mov
cmp
xorb
call
add
add
movsb
lods
jo
cmpsb
mov
jb
sbb
mov
push
sti
mov
div
mov
sub
jb
jg
mov
jmp
test
push
mov
jg
mull
xchg
sti
jae
out
out
js
jae
jle
gs
imul
or
lcall
pop
mov
jae
loope
ret
add
and
sub
mov
mov
in
les
dec
out
and
imul
ret
adc
loope
dec
loope
or
rcrb
dec
std
or
sub
push
cmpsb
scas
add
std
scas
test
cltd
and
aam
mov
mov
add
sbb
add
ret
add
scas
add
fadds
fsubp
jge
or
add
mov
sbb
rolb
sbb
jmp
cwtl
test
rorl
stos
std
lahf
roll
data16
sbb
out
rorl
sbb
fwait
and
push
jg
adc
inc
push
mov
test
xchg
mov
aas
add
push
add
ljmp
and
inc
push
adc
inc
dec
cmpsb
push
jno
sbb
add
fidivrs
lock
int
push
lcall
test
xchg
push
mov
sahf
je
pop
fmul
sbb
pop
xchg
pushf
clc
pop
fwait
into
mov
mov
test
aad
into
mov
mov
add
add
ljmp
mov
mulb
xchg
into
mov
aas
inc
sti
test
xrelease
sub
lock
test
push
and
rolb
mov
hlt
scas
push
sti
sub
mov
les
icebp
into
sub
jns
xchg
or
lret
jbe
add
add
mov
push
dec
dec
jb
test
dec
mov
test
fisttps
and
xchg
jecxz
xchg
inc
leave
xchg
push
pop
rorb
daa
outsl
std
jge
imul
into
outsb
add
jb
dec
pop
push
dec
std
cmp
outsl
std
pop
inc
sub
imul
cmpsb
and
outsl
pop
add
add
scas
xor
dec
lods
ja
gs
add
mov
jo
or
jne
testl
cld
sub
loop
mov
iret
shlb
pop
push
sbb
in
testl
xchg
pop
sbb
pushf
sar
sbb
mov
mov
sbb
add
dec
mov
fs
lcall
int3
sbb
xchg
pop
xor
popa
inc
into
jmp
push
sub
xor
xlat
or
loope
aam
loope
mov
test
jae
mov
push
or
mov
xchg
pop
bound
jecxz
bswap
insl
xor
pop
push
insb
cmp
mov
add
add
adc
ficomps
mov
xchg
loope
sbb
mov
test
or
out
mov
lods
push
xor
mov
outsb
cmp
pop
jbe
ds
jbe
iret
inc
ja
mov
mov
jp
outsb
testl
xchg
and
push
cwtl
add
add
aad
mov
int
in
xor
test
cmp
jbe
jg
ja
aaa
scas
test
mov
jecxz
add
inc
sahf
add
sub
subl
or
cs
mov
cs
cli
lods
and
dec
sbb
push
popl
mov
jbe
cmp
xor
add
cmp
outsb
add
jecxz
sbb
jae
adc
leave
dec
add
aas
mov
dec
jl
xchg
jmp
popa
or
inc
mov
sti
add
sti
mov
test
inc
lds
inc
hlt
adcl
out
jecxz
jo
jns
mov
insb
ja
jnp
sti
add
add
outsb
loope
jnp
cli
push
mov
jno
xchg
mov
outsl
add
inc
or
sbb
mov
mov
int
xchg
and
pop
mov
lret
xlat
cwtl
out
loope
xchg
mov
ret
orb
pop
pushf
inc
ror
mov
test
sbb
jge
sahf
cld
mov
add
cltd
lret
mov
add
repnz
cmpsb
mov
pop
xchg
and
xchg
pop
sbb
lea
test
test
popf
xor
xchg
and
xchg
pop
sbb
add
pushf
daa
mov
lret
fldt
ljmp
in
xchg
and
mov
mov
mov
in
add
add
insl
in
xchg
outsl
aas
sub
xlat
xor
add
hlt
add
aaa
push
repz
and
push
mov
int3
cs
in
or
sub
sbb
jb
gs
cmc
inc
cmpsb
mov
xchg
xchg
pop
into
mov
adc
in
or
in
and
test
cwtl
jne
sti
repnz
mov
add
jmp
lods
pop
cmp
outsb
enter
enter
enter
enter
repnz
dec
je
add
and
loopne
cwtl
leave
daa
cmpsl
and
enter
enter
push
and
outsb
add
and
fiadds
outsb
add
and
out
imul
mov
and
add
add
das
decl
lock
xchg
mov
outsb
add
ja
sti
sbb
mov
sub
cli
add
jae
xchg
mov
jns
xchg
divl
xchg
mov
outsb
add
cltd
mov
rclb
mov
lret
iret
loop
scas
xchg
push
and
sbb
mov
jl
cld
jno
add
add
out
pop
rcl
sbb
sub
mov
sub
dec
fcmovu
ret
pop
fimull
cmp
mov
push
clc
popa
cwtl
mov
sbb
add
adc
out
lcall
fcoms
mov
movl
out
fs
mov
push
add
add
fs
xor
pop
sbb
pop
jb
mov
lcall
dec
fld
int3
dec
int3
pop
jge
inc
mov
sbb
jnp
push
outsb
cld
sbb
movsb
movb
cmp
push
imull
adcb
pop
xor
and
mov
stc
pop
cs
sbb
push
fcoms
and
test
add
loope
testl
fnstcw
cwtl
sbb
jp
aad
xor
xor
add
sbb
and
add
cwtl
mov
mov
movsl
jae
pushf
jle
xchg
call
and
mov
jns
cs
sbb
pop
data16
jp
and
pop
pop
leave
enter
enter
enter
xchg
add
mov
sub
mov
jl
test
mov
add
mov
nop
push
mov
push
mov
cld
cmp
inc
mov
rolb
lods
push
lret
jo
mov
and
into
sbbb
adc
icebp
inc
ja
pop
clc
mov
icebp
loope
stc
scas
iret
push
mov
add
mov
bound
imul
call
sub
xor
ja
inc
jl
shll
jp
mov
outsl
add
into
xchg
add
int
add
push
jo
fists
ja
jge
dec
xchg
sub
std
mov
dec
mov
inc
mov
cs
xchg
mov
xor
aad
scas
pop
add
add
movzbl
pop
mov
idivl
and
stos
imul
mov
sbb
jmp
movsb
inc
fildl
cmpsb
fmuls
iret
scas
rclb
out
sub
in
repz
cmp
int
call
ret
pop
ret
leave
mov
scas
rorl
xlat
and
push
inc
add
add
ljmp
xlat
gs
sbb
xchg
mov
pop
and
sbb
ljmp
xchg
in
add
xorl
out
mov
mov
out
mov
pusha
adc
insl
in
xchg
jp
in
xchg
and
outsb
fidivs
inc
cmc
fstl
xorb
mov
outsl
sbb
outsb
in
add
add
outsb
in
xchg
adc
xchg
push
pop
sbb
out
and
outsb
push
mov
cmc
std
push
xorb
mov
in
xchg
and
loop
xchg
and
or
in
xchg
pop
add
lods
or
test
pop
leave
enter
enter
enter
enter
push
add
add
cmp
dec
jbe
stos
je
comiss
daa
clc
aam
jne
dec
and
add
psllw
ljmp
outsb
add
xchg
pop
mov
xchg
data16
sar
mov
mov
and
mov
pop
jno
xchg
into
inc
nop
nop
jbe
add
aas
jo
sbb
into
outsb
and
add
mov
outsl
mov
xchg
pop
xor
xor
inc
and
pop
mov
shlb
adc
add
add
mov
jae
pop
mov
lock
es
sti
js
addb
dec
sahf
mov
xchg
push
mov
or
pop
or
lahf
out
mov
add
add
lret
int
push
les
pop
les
jmp
pop
sbb
push
adc
dec
fcoms
adc
gs
lods
popa
loopne
push
lea
cmp
dec
in
sahf
jbe
jp
in
pop
xchg
jmp
jg
sub
sti
add
xchg
pop
sbb
std
jle
add
dec
sub
cli
sarl
xchg
pop
sbb
mov
push
in
xchg
test
jne
sub
pusha
out
shll
in
xchg
adc
out
hlt
pop
jp
test
cwtl
and
insl
in
xchg
stos
loope
out
outsb
in
mov
mov
outsb
mov
push
lcall
add
pop
mov
cmp
sub
sub
cmp
in
hlt
fdivr
inc
cmc
test
mov
leave
adc
lods
xor
les
outsb
aaa
jns
popf
js
inc
cltd
das
mov
in
std
mov
pop
mov
aad
jle
rcll
outsl
sub
dec
mov
es
shll
popf
add
add
add
cmp
clc
les
xchg
jb
incl
sti
sub
mov
add
xor
outsb
mov
xor
mov
cmp
outsb
add
xchg
xor
hlt
sub
out
cmp
and
sub
xchg
dec
test
xor
inc
inc
ds
into
outsb
cli
out
or
test
fimull
gs
fcomi
in
add
add
and
adc
add
dec
stos
or
add
jle
inc
fwait
ja
inc
sub
pop
popf
into
outsb
sbb
inc
dec
clc
xor
cmpb
or
sub
mov
inc
jo
xorb
xor
mov
sbb
inc
sbb
add
sub
jmp
xchg
and
shl
add
sbb
inc
jg
lds
jmp
jns
jne
cmpsl
arpl
pop
scas
jmp
dec
jmp
jno
dec
ljmp
dec
ljmp
fistl
jg
scas
lods
cli
arpl
call
sbb
test
and
jne
mov
incb
xchg
and
jecxz
adc
lcall
add
stc
mov
jae
imul
jbe
sub
sub
jns
test
sub
pushf
mov
cmp
mov
jns
aas
js
xchg
rcrb
ss
fidivrs
icebp
jmp
mov
mov
mov
mov
ljmp
in
xchg
shlb
movsl
mov
xchg
and
add
aaa
js
pushf
mov
outsl
xchg
jae
add
and
xchg
or
and
cmp
insb
bound
jno
push
daa
mov
mov
imul
enter
xchg
cmp
mov
mov
and
push
ds
xor
test
cwtl
lret
cmpl
add
pusha
xchg
add
add
outsb
adcl
add
pusha
xchg
aas
and
repnz
and
sub
jns
mov
sti
xchg
inc
sbb
cltd
dec
pop
orl
cmp
push
ljmp
or
push
jae
xchg
adc
cld
cltd
pop
aam
ror
cmpsl
jb
outsb
add
mov
test
add
add
into
outsb
mov
into
outsb
add
out
push
ret
mov
into
adc
or
ficoml
cs
pop
add
xor
adc
fisubl
fiaddl
add
and
inc
clc
sbb
xchg
jns
pop
xchg
jbe
stos
clc
mov
pop
icebp
dec
test
fimuls
dec
lock
add
in
cmpsl
and
das
adc
lods
sub
xor
ss
xchg
cld
adc
jo
imul
adc
mov
mov
jnp
and
mov
pop
xchg
es
jae
aaa
popl
xchg
jbe
pop
xchg
and
outsb
mov
sahf
leave
rcll
dec
jnp
add
add
xchg
out
and
lahf
js
jbe
push
rcll
add
mov
repz
and
xor
pop
bound
adc
mov
mov
outsb
gs
sub
jge
adc
in
adc
in
fstl
mov
push
pop
mov
js
in
cmpsb
leave
rcll
inc
cmc
movsl
add
in
add
add
adc
out
test
add
and
or
icebp
mov
mov
outsb
pop
ret
mov
outsb
add
shl
push
adc
sti
mov
sbb
mov
adc
movsb
jl
arpl
je
mov
or
or
pop
cmp
or
notb
adc
icebp
push
mov
or
add
mov
outsb
mov
icebp
inc
fwait
sub
adc
inc
bound
ss
outsb
add
and
xchg
rcll
sub
push
adc
add
mov
mov
outsb
add
repnz
gs
adc
js
xlat
mov
lds
pop
add
mov
rcll
add
add
aam
add
add
setp
inc
sahf
xor
fidivs
out
or
fsubrl
push
ret
fldt
jo
andb
test
fstps
and
xchg
xchg
dec
mov
sbb
xchg
out
jns
jno
pop
xchg
dec
push
test
sbb
stc
push
xchg
pop
xchg
dec
call
test
and
push
sub
mov
mov
cmp
xchg
pop
xchg
and
js
push
xchg
pop
jae
std
cmp
lahf
cld
stos
cmpsl
and
hlt
repnz
xchg
push
jno
std
push
jp
outsb
push
je
xor
dec
push
mov
idivl
mov
mull
add
add
mov
fstps
clc
jge
adc
jnp
and
test
xchg
lcall
or
mov
and
lds
outsb
data16
fs
jp
in
xchg
enter
jp
out
and
cmc
popa
mov
jp
sti
xchg
and
cmc
add
and
in
adc
add
outsl
es
push
orl
pop
repz
pop
push
mov
lea
or
iret
sbbl
test
testb
sub
bound
and
fs
jne
ret
mov
outsb
add
dec
lcall
outsl
or
pop
movsb
enter
adc
sbbl
add
scas
and
jae
negl
outsb
add
cmp
add
mov
adcl
add
mov
dec
pop
inc
or
pop
push
sub
xchg
mov
popf
fstps
loop
add
aaa
jns
xchg
xor
adc
xlat
adc
cmpsl
inc
dec
loopne
push
pop
subl
fbstp
add
add
mov
mov
or
leave
mov
xchg
test
cmovg
adc
in
bnd
insl
mov
xchg
mov
pop
std
imul
xchg
pop
cltd
insl
int3
decb
xchg
push
ds
or
cmpsl
and
stos
pop
xchg
movsb
frstor
sahf
popa
hlt
ja
testb
add
push
sbb
mov
pop
xchg
pop
sbb
mov
mov
lock
add
add
fwait
add
cmpsl
and
or
movsb
xchg
insl
in
pop
sbb
test
mov
adc
adc
adc
in
xchg
enter
rcll
in
jbe
in
xchg
xor
repz
add
add
mov
sbb
ja
and
outsb
in
xchg
and
add
and
xor
clc
sbb
loop
and
jno
xchg
and
push
mov
fldt
testl
fidivs
push
hlt
pop
jbe
add
outsb
sti
add
add
sub
jg
orl
in
jg
mov
bound
leave
xchg
pop
add
mov
ret
and
add
and
adc
and
jp
mov
mov
stos
mov
arpl
mov
rorb
dec
lcall
inc
fwait
ret
mov
add
mov
mov
mov
testl
adc
sti
jns
icebp
repnz
pushf
inc
sbb
leave
je
and
stos
gs
push
ljmp
cmp
mov
mov
outsl
pop
cmpb
mov
mov
stc
dec
sahf
inc
xor
push
stos
pop
subl
mov
pop
ret
add
xchg
js
xor
xchg
sbb
outsb
add
inc
cmc
mov
and
mov
flds
jmp
out
mov
push
pop
xchg
mov
sbb
mov
or
push
sti
mov
dec
loope
pop
test
push
add
stos
pop
xchg
mov
int3
repnz
lods
cld
or
xchg
sub
mov
rorl
adc
nop
mov
into
in
sub
mov
mov
cmp
movsl
shrb
pop
notb
inc
mov
lcall
in
xchg
sub
pop
jmp
sbb
imul
add
xchg
inc
negl
fcoms
adc
lret
jb
in
xchg
sbb
jae
adc
jbe
and
and
push
les
adc
bound
sbb
jecxz
jmp
mov
mov
mov
mov
xlat
or
xor
fdivrl
popf
sbb
adcl
add
lahf
fiadds
add
add
outsb
add
ja
bound
es
jl
hlt
mov
xchg
sysret
adc
lcall
aaa
pop
notl
inc
enter
adc
jae
das
popf
lods
in
or
test
cwtl
in
lock
in
enter
enter
out
adc
add
iret
adc
push
pop
test
add
add
lret
xchg
mov
push
and
sub
adc
xorb
cs
outsb
add
xor
xlat
xor
into
adc
push
rorb
outsl
add
mov
jg
mov
outsb
and
mov
aaa
in
cmc
aad
imul
cmpsl
cmp
shl
dec
shrl
add
add
or
xchg
add
pop
xchg
pushf
cmp
adc
lods
push
adc
adc
mov
idivl
mov
sbb
loope
xchg
pop
jnp
mov
mov
aas
jle
inc
setne
jae
or
pop
sbb
adc
test
dec
dec
test
sysret
insb
xchg
sti
add
add
test
xchg
push
xchg
pop
loopne
xchg
pop
xchg
cld
jmp
push
sbb
ret
adc
mov
or
adc
ja
ficoms
cmpsl
mov
pop
nop
and
imul
daa
nop
repz
and
sbb
jbe
insb
arpl
xchg
lods
sub
daa
hlt
fcomps
mov
add
add
lahf
leave
sti
xchg
and
arpl
xchg
dec
daa
jbe
dec
scas
loop
insl
and
jae
xchg
and
outsb
push
loopne
and
cwtl
pop
or
add
lock
fidivrs
xchg
jge
sub
icebp
dec
testl
loopne
loop
jmp
mov
sbb
lret
dec
adc
xchg
loop
test
add
divl
adc
adc
icebp
pop
iret
lret
dec
adc
mov
into
or
popl
notl
shl
xchg
shll
mov
fs
icebp
nop
test
mov
mov
xchg
or
sti
adc
xchg
or
mov
shrb
pop
xor
push
pop
inc
add
add
mov
outsb
add
xor
inc
or
cmpl
xchg
jmp
mov
mov
sub
push
jnp
std
jp
mov
push
cmp
sbb
or
mov
addl
outsb
add
iret
lcall
movsl
stc
dec
inc
add
xchg
xor
xchg
nop
test
add
add
cmp
inc
fisubs
mov
loop
pop
xchg
out
std
sub
cmpsb
into
pop
jmp
xor
xchg
and
add
fwait
or
xlat
cmp
push
and
in
stc
daa
adc
jecxz
xchg
pop
xchg
push
insb
mov
jg
incl
sub
inc
or
mov
js
mov
sub
stos
pop
add
add
cmp
xchg
stos
sbb
loop
cmp
xor
add
outsb
in
or
jne
push
xor
pop
cs
in
call
dec
mov
sub
scas
and
lds
mov
mov
arpl
xchg
mov
xor
scas
rclb
ds
jne
add
outsb
in
xchg
outsb
hlt
jne
xor
add
shll
sub
repnz
push
stc
push
push
push
lods
xchg
test
add
xchg
mov
mov
jge
cltd
sub
pop
cmp
movsb
je
xlat
push
mov
or
xor
or
es
je
scas
xor
popa
or
les
out
es
je
scas
xor
lcall
add
add
xchg
push
iret
loope
nop
bound
push
ret
adc
jns
pop
xchg
outsb
in
pop
jge
sti
push
scas
stc
add
outsb
bound
out
xchg
mov
icebp
lret
or
add
pop
mov
inc
mov
fdivs
iret
push
mov
les
jg
les
sbb
cli
or
cli
add
add
mov
inc
push
imul
movsl
in
repz
cwtl
gs
mov
mov
in
mov
xchg
adcl
mov
jbe
push
add
mov
lea
jno
xor
es
add
and
je
push
gs
xchg
and
pop
int3
dec
jb
out
test
add
aaa
daa
cmpb
stos
push
es
xor
rol
jno
ret
int
jg
arpl
mov
fimuls
hlt
sbb
jl
lods
ss
stos
xor
add
xchg
pop
sbb
mov
mov
mov
sbb
stos
pop
xchg
scas
cld
xchg
cmpsl
and
out
xor
and
add
add
stos
in
imul
cmp
xlat
arpl
xchg
sahf
sub
rcll
mov
repz
and
mov
mov
imul
jp
arpl
xchg
repnz
movsb
ljmp
sti
xchg
and
xor
jp
cmp
and
xchg
shl
movsb
lods
lahf
mov
add
stos
mov
xor
add
adc
adc
negb
pop
je
adc
out
pop
add
and
mov
jl
mov
andl
jae
mov
sbb
xchg
push
or
movsb
dec
jnp
sti
inc
je
jns
and
inc
je
bound
fidivs
adc
push
je
popa
and
xchg
or
sahf
pop
sti
add
add
pop
cmp
sahf
pop
sti
outsl
popf
icebp
jl
pop
cmp
fistpll
outsb
xorl
cwtl
aas
xchg
dec
sbb
add
sbb
imul
cld
cwtl
xor
insl
and
iret
dec
rorl
sbb
and
xchg
adc
mov
add
add
mov
or
outsb
sub
or
jg
mov
adc
mov
loope
sahf
cmp
mov
dec
jb
adc
mov
mov
mov
cmpsb
and
pop
xor
incb
sbb
addb
cli
sbb
les
jmp
and
stos
jmp
pop
xchg
and
mov
mov
or
ss
mov
mov
imul
fucom
mov
mov
pop
stos
sub
jno
inc
repnz
adc
aam
xor
mov
inc
je
pop
xor
lret
jp
xchg
aam
or
subl
imul
lods
mov
mulb
lds
div
adc
incb
add
push
mov
mov
pop
in
popa
in
xchg
and
repz
pushf
mov
fwait
and
inc
mov
pusha
repz
loope
mov
xor
stos
mov
stc
xchg
and
ja
xchg
movsb
xor
shlb
mov
jl
xchg
ljmp
outsl
sub
sbb
int3
cmp
data16
out
add
daa
pop
add
add
outsb
and
out
mov
push
bound
push
fstl
outsb
lea
adc
movq
les
push
sahf
in
ret
adc
outsb
sti
jmp
scas
mov
inc
mov
xchg
mov
lods
stos
cmp
aas
daa
mov
sbb
clc
movsb
pop
jbe
gs
mov
xchg
int3
aaa
rolb
adc
add
add
test
movsb
cmpsb
scas
add
js
mov
ss
lods
mov
cmpsl
jb
outsb
add
pop
icebp
dec
orb
xchg
mov
popf
testb
dec
stos
mov
xchg
pop
mov
and
imul
or
adc
rolb
push
mov
add
add
add
cwtl
outsb
add
or
xchg
mov
xchg
dec
test
add
add
adc
insb
adc
pop
dec
cld
jo
xchg
xor
das
mov
and
push
mov
dec
mov
call
or
inc
xor
bound
repnz
hlt
scas
call
pusha
fwait
and
adc
add
add
jmp
fsubrs
popa
cwtl
test
testb
jnp
mov
cs
repz
xchg
pop
adc
scas
add
adc
test
cwtl
insl
mov
sti
mov
pop
ja
xchg
lea
dec
subl
add
mov
insb
mov
sbb
mov
arpl
add
sbb
and
mov
notb
pop
outsb
in
mov
popf
clc
imul
mov
and
pop
in
xchg
and
insl
loop
mov
adc
push
scas
or
xchg
and
les
ss
add
jae
jmp
cmp
mov
out
jecxz
bound
add
cmp
hlt
jp
and
stos
xor
pop
subb
add
jae
scas
and
xor
outsb
xchg
push
pop
mov
pop
cs
outsl
and
daa
push
aaa
inc
dec
and
lods
dec
and
lods
sahf
xchg
push
ret
adc
das
and
lods
jns
mov
jecxz
add
das
dec
leave
enter
enter
enter
xchg
pop
or
or
mov
mov
push
or
xlat
or
mov
inc
or
test
mov
mov
add
or
add
or
mov
nop
or
add
or
mov
sti
jno
das
adc
jl
ret
movsl
or
repz
mov
add
jmp
or
push
in
sti
xor
cmp
and
xor
ja
inc
hlt
ja
mov
inc
and
js
das
xchg
pop
sbb
movsb
gs
mov
cmc
loope
movntps
lcall
add
mov
mov
lods
test
enter
pop
mov
insl
mov
add
sahf
lock
out
add
mov
xor
xchg
or
add
dec
lret
push
adc
insl
fldenv
and
pop
push
push
les
sub
lds
fnstsw
xchg
mov
inc
cmp
jl
dec
mov
in
aaa
bound
jge
aaa
outsb
in
add
add
lods
lds
xchg
mov
ret
sub
lods
xchg
lods
cmc
mov
or
inc
mov
hlt
in
arpl
xchg
adc
jae
fsubl
xchg
stos
sbb
cmp
insl
popf
sub
pop
add
adc
adc
mov
psubq
pushl
subb
repz
lea
add
dec
popf
pop
add
icebp
repnz
orl
scas
bound
pop
ss
adc
dec
cmp
int
enter
enter
enter
enter
push
cmp
sub
adc
or
stos
out
add
daa
outsb
push
mov
mov
daa
outsb
jp
adc
xchg
mov
cmpsb
xchg
cs
adc
add
jle
outsb
add
and
icebp
adc
add
fs
stc
arpl
sahf
pop
leave
jecxz
shll
adc
add
test
xchg
clc
push
inc
mov
fcompl
dec
pop
or
inc
mov
lods
pop
or
cmp
adc
lods
pop
in
daa
push
mov
adc
add
lret
add
and
xchg
sti
mov
mov
pop
xchg
and
xchg
pop
adc
mov
iret
pushf
adc
sbb
mov
popf
push
ja
sbb
daa
mov
jmp
sahf
popf
jo
iret
ljmp
mov
sahf
inc
clc
adc
jge
pop
shrl
hlt
add
add
pop
mov
inc
xchg
or
pop
hlt
sahf
sub
xchg
pop
outsb
push
je
jne
and
outsb
in
push
shrb
enter
xchg
stos
xor
scas
sahf
push
notb
sub
aad
sub
push
fists
push
xchg
cmc
clc
pop
adcl
mov
dec
nop
mov
add
add
leave
repz
and
xor
push
cwtl
js
fs
popf
inc
bound
in
fldenv
xchg
push
les
outsb
in
divb
jns
mov
xorb
fwait
pop
add
or
jbe
xchg
xchg
icebp
xchg
jecxz
mov
mov
cs
mov
sbb
fnstsw
jbe
ret
adc
and
pop
js
negb
or
cld
mov
outsb
insb
scas
jl
add
imul
scas
test
sub
jb
jmp
fs
sti
stos
sbb
ret
jge
add
sub
mov
mov
xchg
sar
out
sbb
lret
or
std
sar
push
jge
jns
jle
sub
add
add
sar
jl
push
pop
ss
jl
repz
add
xchg
jl
push
pop
pusha
sar
jl
xlat
pop
pop
pop
popf
mov
outsb
push
or
pop
jl
push
jge
pop
pop
push
mov
xchg
sti
lret
or
push
cmpsl
jp
outsb
add
xchg
mov
or
xor
add
xchg
movsb
sub
jg
movsl
xchg
xchg
push
test
imul
lret
xor
fld
popf
and
xchg
pop
mov
cmp
mov
adc
nop
xchg
aam
pop
xchg
int
pop
xchg
and
xchg
jge
and
adc
leave
and
add
add
in
xchg
add
imulb
lcall
call
cmpsl
xlat
and
lcall
ljmp
and
lcall
hlt
lcall
out
xchg
outsb
daa
xchg
and
lcall
loope
xchg
outsb
daa
cmpsl
xlat
and
lcall
jecxz
xchg
outsb
cmpsl
xchg
and
add
add
xchg
out
stos
movsl
fnstsw
mov
in
loop
xchg
mov
and
mov
sahf
test
test
mov
mov
pop
cmc
gs
or
inc
sti
fsubs
fildll
mov
ljmp
or
aas
sub
insb
addr16
add
push
pop
pop
jne
rclb
addl
add
gs
addl
xor
addl
sbb
push
add
addl
sbb
push
repnz
sbb
push
shll
pop
cmc
sbb
push
mov
addl
sbb
push
xchg
xchg
xchg
enter
xchg
outsl
repz
fdivrs
call
jp
call
push
jnp
enter
xchg
inc
jnp
enter
xchg
push
jnp
add
add
subb
inc
jnp
call
push
out
loopne
jg
js
lea
or
sbb
cmpsl
ja
addl
xchg
inc
xor
push
inc
idivl
out
icebp
add
insb
sarl
xchg
jl
cld
xchg
push
push
jl
hlt
mov
aam
das
and
jmp
test
fistpl
test
fcomps
xchg
lret
pop
pop
push
add
add
in
xchg
jp
xor
and
jle
and
mov
fadds
push
scas
xchg
push
xchg
pushf
stc
cmp
loope
loop
pop
mov
and
jnp
sbb
push
lods
xchg
sahf
lods
repnz
movsl
out
and
pop
imul
jnp
xchg
push
outsb
fldcw
ret
add
add
xor
icebp
adc
push
sub
xchg
and
inc
sub
push
lret
lods
test
and
pop
lods
xchg
mov
in
dec
sbb
jmp
pop
enter
and
outsb
insb
hlt
lea
xchg
cmp
stos
push
cs
push
dec
jbe
loop
xchg
fisttpll
jno
add
add
and
insl
in
xchg
mov
push
inc
mov
xchg
dec
add
insb
lret
out
xchg
xchg
pop
cltd
inc
jge
add
leave
mov
scas
xchg
pop
addl
jns
cmp
leave
mov
outsl
popf
outsb
addl
outsb
lret
out
ja
test
aaa
cmp
icebp
fisubrs
bound
sub
add
and
out
and
add
and
lods
fsub
insl
aaa
ds
aam
mov
xchg
or
mov
icebp
adc
jle
fcomp
jge
add
jb
mov
fidivrs
mov
test
xchg
in
mov
out
sti
mov
cmpl
mov
add
add
add
fadd
sti
pop
jge
pop
xor
lods
mov
sbb
lcall
jl
sub
jl
mov
adc
add
sar
push
mov
sbb
add
in
xor
xchg
pop
xchg
push
test
add
outsb
aad
mov
pushf
icebp
cmp
add
add
xchg
pop
xchg
push
test
add
fs
pop
mov
xchg
pop
xchg
lcall
sbb
stos
xchg
movsb
aaa
mov
xchg
test
repnz
sbb
imul
sub
in
dec
lahf
mov
mov
and
cmp
nop
mov
lods
loope
add
or
xchg
mov
mov
and
jne
repz
xchg
cmp
sub
cs
and
xchg
stos
push
dec
push
repnz
cs
pop
jle
in
xchg
push
dec
pusha
cli
xor
jno
or
jp
xor
xor
sbb
xchg
and
jb
mov
cs
aam
add
add
mov
insl
mov
and
out
int
daa
pop
les
repz
mov
xchg
and
mov
outsb
enter
push
xor
pop
adcl
xor
inc
mov
mov
add
test
mov
lcall
inc
stos
xor
sub
ss
sbbl
mov
add
add
mov
and
pop
push
lods
int3
dec
repz
sti
arpl
xchg
rolb
cld
loope
add
addr16
push
mov
jno
in
cmp
pop
subb
xchg
pop
sub
movb
xabort
jp
imull
add
push
push
push
sbb
rcll
push
add
push
outsb
and
insb
sub
das
jl
shrl
ja
je
mov
cmc
and
pop
jle
stc
pop
jp
orl
shlb
addb
fwait
jns
and
xchg
pop
icebp
addb
mov
fdivs
xor
sarb
in
add
mov
jmp
test
sub
add
jp
cwtl
mov
ljmp
mov
xchg
pop
or
adcb
clc
mov
aad
cltd
xor
cmpsb
push
pextrw
mov
addb
loope
jge
in
xchg
divb
push
subb
out
stc
jmp
cmc
dec
mov
xchg
orb
add
add
cmp
cmp
sbb
notl
sub
inc
push
test
add
jmp
stos
jmp
sub
lea
aaa
sbb
push
cmc
push
jmp
popa
sub
fidivrs
hlt
rorl
icebp
inc
mov
jle
mov
cmp
push
cs
icebp
push
fwait
xor
pop
sbb
inc
or
jnp
scas
leave
xchg
fmul
mov
mov
out
cmpsl
xor
cmpsl
xor
cmpsl
xor
cmpsl
xor
and
add
and
add
and
add
and
add
and
add
and
add
and
add
sub
add
outsb
add
and
mov
add
outsb
add
sbb
lock
sti
add
add
cmp
xchg
xlat
sar
out
sar
out
clc
inc
aas
ret
aaa
ret
dec
ret
inc
ret
pop
ret
pop
ret
das
ret
daa
ret
jg
cld
xchg
ja
cld
mov
xchg
cld
pop
push
mov
push
gs
out
push
ret
jb
or
add
add
xchg
mov
add
add
stos
sub
bound
rcrb
mov
hlt
push
mov
jp
es
add
loop
hlt
sbb
jno
adc
js
sbb
fdivrs
aad
dec
jp
push
inc
jb
or
jp
flds
pop
lods
nop
jecxz
and
fisttpl
test
js
dec
xchg
jp
dec
add
stos
inc
cld
adc
js
add
add
bnd
adc
js
sbb
insl
jnp
inc
adc
jp
adc
jb
nop
lds
inc
sbb
xchg
dec
shrl
and
add
mov
insl
insl
mov
mov
dec
bound
je
out
xchg
and
scas
ja
jecxz
ss
jne
cmc
sub
leave
xor
dec
lods
in
outsb
out
xchg
test
add
lock
or
push
in
xchg
inc
outsb
addb
ds
xchg
lahf
in
pop
add
mov
adc
xor
adc
dec
in
xchg
and
xchg
in
pop
jp
in
leave
insb
jno
mov
mov
lcall
outsl
and
aas
lcall
add
add
and
das
jmp
pop
pop
lcall
sub
lret
test
icebp
adc
stc
and
sbbb
aad
mov
sbb
mov
push
adc
scas
sub
scas
sub
xchg
sbb
jno
mov
sbb
int3
inc
sbb
xchg
lcall
or
rolb
add
add
into
push
scas
sbb
out
mov
outsb
clc
lret
mov
mov
gs
inc
and
mov
sub
jp
sub
dec
push
scas
or
out
mov
incb
and
lcall
sbbb
pop
adc
sahf
enter
mov
xchg
mov
mov
inc
addr16
or
add
sbb
jle
xor
pop
rclb
fcoms
lret
test
sbb
add
out
sahf
enter
movsl
jb
out
add
repnz
sbb
dec
mov
push
sahf
cmpsl
or
xchg
and
add
xor
rolb
sbb
xchg
xchg
std
inc
adc
xchg
mov
scas
or
lods
mov
add
add
icebp
pop
jmp
daa
jmp
cmp
lar
xchg
jg
and
inc
mov
bound
in
xchg
vhsubps
jmp
and
outsb
in
fs
xor
jbe
inc
jbe
xchg
sti
xchg
aaa
xor
xchg
aad
icebp
dec
xchg
and
outsb
in
fs
xor
jbe
inc
jp
xchg
sti
xchg
aam
add
lock
jbe
mov
movsb
rolw
xlat
sub
and
stc
or
in
add
mov
out
add
out
mov
push
add
fwait
sbb
xor
mov
out
addr16
and
mov
push
add
imul
das
pop
mov
mov
xor
cs
popl
add
cmp
pop
aas
jle
push
js
cwtl
out
dec
es
outsb
and
lret
jb
pop
lret
negl
jge
lods
mov
pop
pop
jecxz
js
lock
icebp
sti
lock
mov
lea
jo
jne
xchg
loop
pop
xchg
out
or
mov
pop
jp
in
sbb
mov
push
mov
mov
sbb
scas
mov
jg
fmuls
xor
xchg
ja
jle,pn
xor
pop
insb
add
jne
and
mov
sbb
out
or
xchg
or
or
push
mov
xlat
jle
int3
xchg
or
cld
adc
sti
inc
add
add
gs
lods
cltd
lock
aas
jb
sbb
je
adc
test
popf
rcrb
push
incl
repz
mov
xchg
dec
out
out
insb
fcoml
lahf
mov
sbb
dec
sbbl
lea
adc
or
and
jns
inc
mov
fildl
add
mov
int3
xchg
pop
xchg
stos
jnp,pt
dec
outsb
sbb
jb
push
jbe
xor
in
gs
stos
cwtl
mov
jbe
inc
pop
pop
inc
jbe
mov
loopne
outsb
cmp
push
jb
push
lds
mov
repnz
in
outsb
push
and
enter
and
dec
add
add
mov
icebp
sbb
sub
push
push
sub
icebp
dec
insb
cmp
inc
mov
mov
lret
icebp
sti
inc
loop
sbbl
jne
or
jne
jg
orl
in
or
arpl
call
mov
jge
add
push
cmp
push
xchg
sub
add
add
js
jns
jo
push
lret
pop
filds
mov
das
fcoml
xor
mov
cltd
out
out
icebp
and
xorb
jecxz
jle
xchg
or
inc
and
sti
stos
xor
or
shll
outsb
jno
insl
dec
cltd
lret
test
movsl
stos
or
insl
scas
or
movsl
stos
or
pop
or
jbe
daa
sbbb
add
mov
xchg
xchg
mov
mov
jle
add
ja
add
xlat
jb
sub
outsb
add
xlat
pop
andl
push
outsb
add
and
mov
adc
fnstsw
adc
push
repz
loop
add
mov
clc
xchg
js
lahf
pop
in
mov
cltd
mov
daa
pusha
leave
adc
cwtl
js
xor
mov
leave
sarl
mov
push
push
dec
mov
cwtl
mov
into
cwtl
xchg
xchg
inc
mov
and
aaa
aas
lret
xor
mov
and
dec
rcrl
and
sub
add
dec
neg
hlt
ja
shl
scas
testb
jg
fdiv
mov
push
jb
dec
dec
pop
mov
hlt
js
fdiv
scas
in
xchg
and
xchg
loopne
jns
stos
sbb
in
xchg
and
mov
pminub
or
mov
mov
pop
mov
cmp
jle
jns
test
frstor
xor
and
add
add
stos
xor
shl
lds
lds
in
cli
gs
clc
out
pop
or
sbb
out
and
ja
sbb
cs
pop
in
ss
pop
out
pop
cwtl
icebp
jno
out
je
cmpb
xchg
dec
movsb
push
inc
sbb
incl
movsb
addb
jnp
jb
in
das
clc
add
add
out
les
out
jp
mov
and
jo
outsl
jno
adc
imul
cmp
lods
add
and
mov
sbb
mov
xchg
mov
xchg
mov
sub
xor
mov
push
and
cli
jmp
add
xchg
xchg
ja
ljmp
add
add
xlat
or
addr16
jge
add
ja
sti
cli
and
rcrl
mov
push
stc
jno
outsb
loope
stc
sub
xchg
jle
add
and
stc
frstor
xchg
sbb
loope
jnp
insl
lcall
gs
movsl
inc
mov
sub
and
add
add
cvtpi2ps
and
pop
mov
dec
test
call
ret
dec
cmp
pop
scas
outsl
mov
sbb
push
push
add
mov
xchg
mov
mov
rolb
dec
inc
xchg
inc
xchg
add
scas
fmull
and
mov
pop
in
in
lcall
icebp
add
add
in
and
mov
xchg
and
and
and
aas
sub
dec
jns
test
stos
cmp
push
outsl
mov
xchg
pusha
lea
testb
pop
hlt
mov
sbb
push
lea
and
xchg
and
outsl
cmp
and
mov
sbb
imul
insl
data16
divb
add
add
test
addr16
mov
jp
subb
int3
je
pop
push
jno
pop
add
mov
add
movsb
fnstsw
mov
daa
scas
mov
sbb
dec
lcall
outsb
or
mov
pop
int
fstpl
adc
push
into
xor
icebp
jns
into
mov
scas
and
xlat
call
add
es
mov
sub
mov
sub
xchg
addr16
and
jbe
repnz
push
jle
add
roll
lret
cmpsl
jb
outsb
add
sub
call
pop
sub
push
push
call
jb
xchg
jle
inc
out
es
jmp
mov
add
test
rclb
pop
mov
divl
or
cmp
or
dec
int
cltd
mull
mov
ljmp
and
jmp
sbb
call
mov
imul
mov
jge
dec
pop
lcall
adc
sbb
xor
sub
cmpsl
push
and
jge
shlb
add
cmp
push
addb
inc
mov
stos
lahf
xor
imulb
fs
pushl
mov
es
pop
xchg
pop
jae
out
adc
and
inc
pop
xchg
and
xchg
sbb
movsb
insl
mov
imul
or
popf
jns
sbb
mov
jae
out
push
movsl
add
add
outsl
fs
adc
outsl
push
je
mov
call
fs
xlat
jno
pop
mov
fcoms
jne
sbb
test
mov
movsl
data16
imul
in
xchg
mov
mull
lds
scas
cmp
int3
and
pop
cmp
mov
stos
sahf
xchg
popl
add
mov
pop
push
in
pop
mov
adc
or
inc
in
jb
icebp
push
arpl
icebp
dec
xchg
aaa
icebp
push
lahf
xor
pop
insb
pop
mov
arpl
enter
enter
and
icebp
inc
lcall
sbb
fldcw
je
bound
sub
jp
mov
movl
add
inc
loop
aaa
in
dec
lret
jns
push
mov
jb
into
bound
sbb
push
outsb
push
or
ds
xor
iret
dec
mov
iret
bound
cmc
out
or
outsb
outsb
and
lods
cmp
mov
xor
sbb
in
sahf
mov
lret
adc
aas
arpl
add
add
mov
sub
mov
cmc
out
pop
sbb
stc
leave
jle
inc
mov
incb
sahf
adc
or
mov
mov
sub
rcrl
push
jmp
jb
push
cwtl
negl
or
sbb
jb
adc
adc
add
add
imul
pop
sbb
xor
mov
cmovb
addr16
mov
cmpb
xchg
pop
adc
incl
cld
insl
inc
push
in
adc
dec
mov
imul
in
xchg
pop
scas
jbe
aam
sarl
mov
sub
add
add
repnz
scas
lcall
sbb
jg
test
cli
push
jne
pusha
mov
pop
gs
cmc
fcoml
icebp
xor
pop
mov
xor
pop
mov
data16
shl
stc
mov
xor
cld
aam
cld
imul
cmp
mov
adc
add
inc
jge
mov
and
hlt
frstor
mov
lahf
scas
or
bound
hlt
lods
mov
inc
jge
and
jbe
mov
push
andl
mov
mov
lock
lcall
jb
push
je
jns
and
push
std
hlt
xchg
lahf
sub
and
mov
add
add
das
mov
fidivl
mov
rolb
call
out
xchg
jge
add
repz
or
add
adc
pop
and
dec
pop
add
dec
pop
add
dec
pop
add
dec
jl
popa
dec
in
mov
js
addl
stos
inc
mov
adc
pop
push
adc
sub
push
arpl
add
dec
pop
add
dec
pop
add
add
jl
lods
sti
stos
dec
outsb
add
cld
icebp
and
int3
cmp
dec
rol
fs
adc
hlt
subl
lds
pop
xchg
and
adc
xchg
and
addr16
pop
push
addl
cmp
clc
inc
jno
ljmp
ret
xchg
pop
xchg
mov
clc
pop
dec
fwait
insb
add
add
fmuls
das
cli
mov
lahf
xor
sub
dec
mov
cmp
pop
and
sbb
push
mov
mull
or
mov
cmp
and
adc
pusha
aad
jns
addr16
xchg
add
pop
mov
and
xor
negl
add
add
push
pop
or
popa
outsb
push
das
icebp
lods
mov
sahf
mov
outsl
sub
sub
inc
cmc
push
sbb
push
das
icebp
sub
push
in
insl
push
jg
inc
dec
mov
pop
sbb
push
mov
jbe
mov
xor
sub
ret
sti
inc
icebp
iret
aam
xor
jmp
notb
sub
adc
add
aaa
push
mov
or
jno
lahf
scas
pop
hlt
outsl
movsb
mov
or
xor
in
mov
cmp
dec
out
insb
lods
xor
cmp
arpl
lahf
mov
jbe
pushl
xchg
aas
enter
sub
xor
daa
gs
mov
xor
mov
pop
push
sbb
or
add
add
mov
clc
push
faddp
mov
leave
data16
data16
insl
addr16
push
pop
enter
dec
loopne
loop
jno
cltd
jp
and
movsb
roll
aam
adc
cmp
loop
nop
loopne
lods
fs
pop
or
leave
imul
sbb
cld
inc
push
testl
ret
inc
clc
sbb
add
sbb
or
pop
pop
and
push
pop
pop
test
scas
rorl
out
pusha
pcmpeqb
push
xchg
fisubrs
xchg
sbb
js
push
pop
mov
mov
cli
shrd
xorb
inc
frstor
pusha
xchg
fsubrp
xor
xchg
pop
stos
gs
mov
push
xor
add
loopne
dec
lret
mov
stc
and
pop
sbb
mov
outsb
or
pusha
mov
push
repz
pop
xor
mov
test
add
adc
cmp
mov
add
in
xchg
push
movsl
je
cmp
add
and
popa
popf
xchg
loopne
and
cmpsl
in
scas
outsb
adc
add
adc
add
cltd
movsl
lods
sbb
es
je
popa
lock
lea
icebp
lahf
mov
mov
xlat
popa
inc
and
pop
mov
sub
and
add
dec
ret
cmp
jne
notb
sub
jb
xchg
gs
mov
lcall
scas
test
add
pop
cmp
sbb
movsb
mov
xchg
icebp
ret
mov
shll
icebp
sti
add
xchg
push
and
pop
outsb
scas
mov
sbb
sti
loop
test
mov
and
enter
mov
dec
pop
xchg
or
dec
out
ss
imul
in
xor
aad
mov
add
xchg
sti
or
add
add
mov
dec
mov
pushf
mov
add
xchg
aaa
adc
jae
jne
fldenv
or
lret
jnp
xchg
add
add
adc
add
dec
outsb
add
xlat
xor
shll
xchg
and
es
ds
ss
cmove
or
add
add
popf
xchg
pop
xchg
and
js
adc
jl
mov
pop
sarl
xor
mov
out
aad
lahf
scas
pop
pop
xchg
bound
sub
loop
lcall
repnz
add
mov
jecxz
mov
xchg
cmp
pushf
push
jle
and
xchg
mov
nop
pop
in
imul
dec
xchg
add
add
subb
or
cmpsl
ljmp
scas
rolb
pushf
lret
in
sbb
or
mov
out
div
push
mull
xlat
xchg
ret
insl
lds
fwait
cs
les
call
ret
cwtl
push
push
in
in
mov
daa
pop
mov
das
sub
mov
outsl
mov
data16
add
div
stc
adc
sub
and
movsl
sub
jae
sub
test
in
addl
xor
jno
subl
icebp
dec
inc
loopne
or
pushf
pop
or
stos
pop
or
adc
jp
mov
jmp
mov
inc
fisubrs
sbb
in
cltd
xchg
add
movsb
stos
arpl
outsb
add
pop
and
jmp
jp
cli
mov
add
in
test
fdivrs
lods
inc
xchg
jae
xchg
popf
jl
xlat
xor
repz
mov
mov
jo
dec
mov
jbe
push
jg
xor
cmp
loopne
pop
push
sahf
dec
lret
sub
add
mov
xor
xor
lock
add
dec
out
sbb
outsl
pop
outsl
notb
jle
xchg
dec
bound
cld
jle
xchg
and
stc
mov
shrl
sub
inc
std
andl
int3
xchg
lods
push
cld
jns
mov
cld
test
cwtl
adc
lock
outsb
fcoml
add
dec
pop
jmp
aam
adc
ds
dec
add
and
mov
sarb
fbld
cwtl
mov
les
add
mov
push
sar
jecxz
jge
sub
inc
mov
fwait
pop
mov
pop
lea
sub
xor
pop
arpl
sub
pop
and
ja
insl
repnz
cmc
mov
pop
popa
sub
add
add
ljmp
outsb
cwtl
or
shlb
movsl
mov
fldenv
icebp
int3
hlt
push
std
mov
cwtl
or
fisubl
movsl
jp
fsubs
add
cwtl
add
jle
push
cmc
jle
push
fld
imul
cmp
imul
mov
add
add
daa
popf
add
xchg
mov
je
iret
lcall
xlat
and
xor
xchg
inc
pop
jae
xor
mov
jp
outsb
sbb
xor
repz
lahf
mov
dec
and
sti
adc
test
jp
sti
das
rorb
imul
lock
add
repz
je
lock
repz
iret
pop
sbb
fisubrs
xchg
rolb
inc
out
push
dec
dec
mov
sahf
add
jbe
xor
enter
or
or
not
dec
or
stos
mov
aad
or
stos
xchg
aad
add
not
dec
or
add
add
ds
jno
xchg
dec
adc
and
jb
mov
inc
outsb
lock
dec
mov
xchg
or
push
lcall
add
mov
cmp
and
mov
in
fs
xchg
lods
sbb
xchg
push
test
pop
ret
pop
lahf
das
icebp
shll
aad
movsb
mov
mov
push
imul
jns
or
js
or
rorb
in
dec
mov
add
xchg
mov
movsl
js
mov
test
roll
js
mov
call
fistpl
jp
inc
add
pop
sbbb
inc
orb
call
outsb
sbb
add
mov
inc
cltd
mov
push
inc
sub
add
mov
cmp
add
cmpsl
push
or
mov
jp
sub
outsb
add
lret
stos
outsl
xchg
pop
in
jmp
lcall
in
sbb
rorl
je
sbb
push
fld
in
add
jmp
pop
xor
outsb
add
add
mov
pushf
mov
sbbl
xor
pop
mov
aaa
or
sbb
scas
add
pop
les
push
inc
mov
lret
test
ss
aaa
sub
daa
adc
sub
lea
enter
enter
mov
das
or
adc
out
mov
or
add
enter
int
testl
jb
xorb
inc
lcall
or
xor
sub
je
aad
xor
mov
aad
xchg
adc
add
clc
jno
xchg
mov
jb
cmp
in
divl
cld
ffreep
scas
ja
sub
push
outsb
in
repz
pop
xor
cmpsl
addb
add
pusha
mov
mov
cmp
repz
sub
pop
sti
or
lahf
ret
outsb
add
and
imul
adc
sub
push
push
cmp
stc
into
xchg
pop
xchg
data16
jp
adc
jb
cmpb
sbb
cmp
mov
cmpsl
inc
ljmp
xchg
mov
mov
inc
add
add
je
mov
in
sbb
xchg
pop
xchg
and
push
sbb
xor
mov
addr16
push
add
lock
idiv
sbb
push
insl
clc
sbb
in
arpl
dec
mov
clc
test
xchg
and
jge
pop
sbb
xchg
and
es
in
sbb
add
add
dec
and
dec
add
adc
pop
add
enter
and
outsb
aad
push
mov
push
fs
push
add
push
xchg
fstl
push
insl
in
xchg
and
pop
je
or
mov
pop
cmc
loopne
add
into
das
cld
cmpsb
das
xchg
push
je
mov
mov
test
js
repz
ja
das
hlt
add
add
les
ljmp
pop
and
cmp
mov
mov
in
add
inc
sarl
jno
and
dec
sarl
icebp
inc
arpl
xorb
or
icebp
xlat
push
imul
adc
insl
dec
adc
pop
dec
or
sarl
inc
loop
out
and
icebp
hlt
xchg
scas
xchg
daa
add
add
pusha
cmc
xor
imul
add
dec
movsl
or
lds
xor
xchg
sbb
iret
lret
iret
loop
fisttpll
dec
pop
int3
popf
cld
push
lret
jne
sti
jnp
sti
test
shll
push
add
jno
lcall
add
cmp
loop
outsl
push
loopne
cld
jno
pop
mov
iret
add
add
out
cld
pop
cmp
add
mov
cld
dec
cmp
add
and
mov
dec
push
xchg
pop
xchg
and
loopne
shll
xchg
pop
xchg
and
loopne
mov
frstor
xchg
and
insb
and
and
push
xchg
and
xchg
pop
xchg
and
add
and
xchg
pop
xchg
and
insl
xchg
and
mov
pop
dec
inc
adcb
outsb
in
xchg
and
mov
or
testl
outsb
adcb
mov
mov
outsb
in
xchg
and
mov
jb
outsb
xor
xchg
and
mov
add
outsb
push
xchg
and
mov
sub
outsb
in
xchg
and
mov
or
or
outsb
in
xchg
and
mov
in
or
in
or
xchg
and
test
cmp
dec
add
iret
dec
add
sub
lock
test
pop
rorb
mov
sub
adc
dec
add
add
imul
outsb
add
movsl
test
stos
aaa
dec
add
aaa
dec
add
testl
add
clc
mov
shll
outsb
add
fisttpl
add
daa
outsb
add
ljmp
jae
mov
jg
outsb
add
daa
outsb
add
out
mov
das
aaa
outsb
add
add
clc
popa
cmp
outsb
add
pusha
sub
dec
cmp
add
cmp
outsb
add
mov
clc
and
pop
add
mov
outsb
add
cmp
add
jb
clc
stc
sub
xchg
push
cmp
jmp
cmp
add
mov
clc
ror
pop
add
nop
push
clc
sarl
xchg
cmp
add
pop
or
test
xor
clc
cltd
cmp
add
cmp
add
adc
clc
orl
add
dec
xchg
pop
xchg
and
in
pop
dec
push
sbb
and
xchg
pop
xchg
and
sbb
dec
cld
push
xchg
and
xchg
pop
xchg
and
subl
mov
dec
xchg
pop
xchg
and
adc
pop
xchg
and
xchg
pop
xchg
and
push
insb
mov
add
xchg
and
xchg
pop
xchg
and
pop
insb
xchg
dec
fs
xchg
and
mov
xchg
and
outsb
gs
mov
jle
outsb
inc
lret
dec
mov
xchg
and
outsb
stos
mov
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
and
mov
popa
dec
mov
pop
dec
mov
jbe
mov
add
add
mov
cmp
outsl
ss
mov
dec
mov
ss
mov
ss
mov
dec
dec
mov
inc
dec
mov
and
call
mov
aad
mov
cmp
mov
cmp
mov
push
out
sti
sti
jmp
mov
jmp
mov
lods
ljmp
aad
mov
inc
ljmp
add
add
ljmp
adc
out
sti
out
and
scas
mov
mov
mov
mov
daa
rorb
mov
lds
add
mov
pop
mov
xchg
int3
or
cltd
mov
or
mov
or
jns
or
jno
outsb
add
mov
popa
cmp
add
sti
sbb
dec
add
sbb
cmp
sbb
xor
sbb
sub
sbb
sbb
sbb
or
sbb
stc
je
clc
icebp
push
and
jmp
sbbb
xchg
sbb
rorl
pop
clc
sarl
clc
mov
and
inc
push
push
mov
inc
xchg
push
add
add
inc
mov
push
jp
loop
jb
cmp
inc
es
bound
push
pop
inc
sub
inc
adc
inc
cli
push
inc
inc
push
cmp
push
xor
push
sub
pop
and
pop
sbb
pop
adc
pop
or
pop
add
pop
cli
inc
insb
pop
repnz
mov
inc
sbb
inc
out
pop
fiaddl
pop
rolb
pop
add
add
inc
xor
inc
insl
xor
push
dec
mov
dec
dec
mov
inc
dec
mov
cmp
movsl
repnz
mov
loop
mov
inc
mov
inc
mov
mov
inc
mov
in
inc
mov
jecxz
mov
fildl
stc
roll
sub
rolb
mov
inc
mov
inc
mov
add
pusha
inc
mov
jbe
mov
inc
mov
inc
mov
inc
inc
mov
fs
mov
xlat
mov
rcl
sti
cmc
xlat
mov
add
fmuls
sti
dec
fmuls
sti
ret
fmuls
sti
xchg
fmuls
sti
outsl
fimull
sti
jnp
mov
jnp
mov
test
fisttpl
and
mov
inc
repz
shufps
add
mov
das
hlt
mov
aaa
hlt
mov
cmp
mov
push
hlt
mov
pop
hlt
mov
pop
hlt
mov
outsl
hlt
mov
xchg
bound
clc
rcll
cmp
rcll
clc
mov
pop
cmp
test
pop
and
cltd
add
clc
xchg
aad
clc
mov
and
sbb
and
add
add
and
imul
push
clc
pop
pop
pop
clc
push
daa
pop
clc
dec
dec
pop
clc
inc
aaa
pop
clc
cmp
clc
xor
sub
and
pop
clc
adc
pop
clc
or
pop
clc
add
pop
clc
stc
fcompl
clc
icebp
enter
and
cmc
fiaddl
rolb
gs
pop
xchg
and
lcall
add
xchg
movsl
jge
xchg
movsl
xchg
pop
xchg
and
fs
mov
pusha
addb
xchg
and
mov
push
push
pusha
pop
inc
dec
pusha
push
inc
ss
dec
inc
and
inc
cs
cmp
xor
sub
and
pop
xchg
movsl
adc
or
add
push
cli
inc
insl
xchg
mov
add
add
mov
inc
inc
mov
imul
iret
push
inc
mov
dec
inc
mov
inc
mov
inc
inc
mov
call
and
mov
cli
inc
mov
xchg
and
mov
out
inc
mov
faddl
mov
mov
add
mov
inc
mov
outsb
inc
mov
fisttpll
sti
popf
fimuls
sti
mov
fimuls
add
fisttps
sti
inc
fisttps
add
fisttps
sti
jno
mov
pop
fisttps
sti
and
sti
mov
mov
mov
mov
adc
mov
fnstsw
mov
add
add
loopne
sti
aas
and
add
and
test
and
test
mov
in
mov
cs
test
and
test
dec
outsb
add
jo
clc
stc
fisttps
clc
jmp
inc
or
add
insb
or
add
je
clc
mov
pop
outsb
add
pop
outsb
add
cmp
add
dec
outsb
add
inc
outsb
add
add
push
cmp
outsb
add
or
add
dec
outsb
add
loope
add
dec
outsb
add
inc
outsb
add
cmp
add
mov
clc
cmp
add
and
clc
sub
clc
and
xchg
insl
sbb
jle
adc
mov
aas
lcall
shrb
ret
ds
outsb
loop
insl
fidivrl
mov
sarb
mov
lret
pop
add
add
ds
mov
or
data16
mov
and
inc
popa
mov
bound
cmp
and
add
mov
jo,pt
pop
ds
pusha
push
ds
pop
xchg
and
inc
iret
mov
push
in
in
insl
dec
xor
sbb
shrb
add
or
push
cli
mov
adc
add
hlt
in
decl
stc
ret
xchg
mov
cmp
repnz
icebp
cmp
sbb
xchg
pop
outsb
test
int
les
sbb
ja
or
outsl
les
xchg
push
xor
cli
incl
inc
rcll
cmp
enter
out
cmp
lock
jg
adc
add
fcomps
sti
mov
dec
push
mov
push
xchg
xor
jne
inc
adc
out
sub
mov
inc
adc
xor
out
sub
pop
push
inc
adc
inc
push
insl
in
dec
jbe
xor
ficomps
popa
fdivl
imul
movl
sbb
insl
sub
add
addr16
pop
adc
add
add
add
inc
pusha
frstor
insl
mov
push
packuswb
dec
outsb
push
xchg
or
cmp
lea
das
xchg
sub
mov
jnp
cmpsl
pop
test
jo
jae
sahf
imul
xchg
push
xchg
orb
inc
insl
xorb
outsb
adc
add
and
stos
imul
outsb
mov
jae
bound
mov
fs
ja
cmp
cmp
mov
inc
in
mov
int
in
loopne
xchg
pop
mov
inc
lock
idivb
and
data16
test
js
jnp
jns
mov
arpl
je
xchg
mov
mov
mov
mov
cmp
mov
mov
add
mov
and
leave
lods
in
sub
lret
cmc
idiv
int
repz
cmc
divl
and
adc
cmp
pop
push
int
push
ss
xor
inc
inc
cmp
dec
and
adc
add
add
enter
in
outsb
and
add
or
cmp
stc
and
lock
call
cmp
flds
ror
call
cmpsl
cmp
ret
mov
mov
xchg
jno
and
xchg
dec
jo
xchg
add
and
pushl
arpl
push
loope
sbb
add
aas
and
adc
insb
inc
adc
add
jns
add
pop
push
popa
shlb
dec
add
xor
jbe
push
pcmpeqd
push
sub
pop
ljmp
aas
sbb
sub
cld
pusha
fnstenv
mov
jne
dec
jbe
inc
pusha
add
punpckhdq
push
mov
pop
and
ja
aas
pop
push
es
add
add
xchg
lods
insb
add
cmpsl
insl
sti
xchg
outsb
mov
test
loope
jb
ficoml
insb
xchg
and
mov
scas
clc
xchg
push
lahf
xchg
push
xchg
xchg
insb
inc
jae
popf
jb
sbb
pop
imul
push
pop
or
fs
outsb
imul
bound
add
inc
andb
outsb
rclb
pop
xor
push
jmp
ljmp
shl
hlt
fcomi
out
into
xchg
pop
mov
or
lds
xchg
pop
popf
pop
xor
lds
xchg
pop
push
ret
xor
filds
mov
repz
mov
push
in
add
rolb
out
mov
hlt
inc
in
push
loopne
rclb
loope
repnz
in
rol
loopne
shrb
aad
rclb
fscale
mov
nop
in
xchg
inc
int
js
ret
xor
ja
jg
mov
jp
aad
inc
xchg
call
insl
sti
xchg
leave
push
sub
std
inc
add
add
mov
fwait
jecxz
inc
aaa
rclb
not
sbb
in
enter
ret
and
ret
fwait
in
stc
fld
sbb
xlat
mov
sbb
in
mov
xchg
loope
fiadds
xlat
add
leave
mov
xor
dec
movmskps
pop
mov
cmp
imul
daa
sbb
cmp
je
dec
dec
add
sub
imul
add
push
ss
or
push
mov
sub
imul
push
mov
xlat
sub
insl
rcll
rclb
mov
sub
adc
push
adc
sub
inc
xchg
inc
jmp
sbb
inc
pusha
int3
push
mov
pop
sub
imul
sub
xchg
push
inc
jnp,pn
dec
xchg
subl
add
add
lcall
popf
sti
cmpl
pop
add
outsb
inc
xchg
mov
push
shlb
and
subl
jge
movsb
fistl
addr16
inc
jno
jnp
popf
arpl
test
jae
jle
icebp
push
mov
xor
addr16
sub
cmp
lcall
lret
sub
mov
inc
mov
psubd
fidivl
mov
jecxz
lock
mov
ret
out
mov
fstp
test
mov
lds
sbb
out
mov
add
sub
movsl
call
push
shll
xchg
pop
add
add
and
in
out
push
fnsave
pop
andl
in
fldt
jecxz
add
mov
lret
add
shll
iret
mov
xor
cwtl
xchg
or
dec
xor
jg
out
mov
and
xchg
cli
insb
test
xor
add
add
add
sbb
insl
mov
xor
insl
xchg
aam
inc
push
sbb
push
add
mov
outsb
and
mov
add
dec
ljmp
jnp
imul
inc
aaa
imul
push
fcoms
jo
and
sbb
push
das
push
push
sbb
dec
punpckhdq
push
jne
add
es
or
push
xor
dec
push
pop
push
push
sbb
pop
gs
push
adc
add
inc
push
push
int
pusha
int3
xor
push
jbe
jo
jo
xor
cmpsb
xor
cmp
sbb
jns
outsb
sti
xchg
sti
jg
ja
stos
push
ds
pop
xor
outsb
jns
jb
push
add
add
push
xchg
lret
xor
data16
outsb
jnp
lcall
cmc
outsb
scas
lcall
jne
cwtl
lcall
lods
mov
ljmpw
ljmp
mov
in
stos
pop
mov
outsb
xchg
sti
jg
ja
stos
inc
outsl
and
jnp
push
add
and
inc
aam
call
sbb
lret
aas
mov
shll
mov
rcrl
xchg
pop
mov
fdiv
xor
enter
rcr
xlat
xchg
pop
xchg
sub
div
mov
int3
enter
sti
fcmovne
or
shlb
out
push
das
mov
les
inc
call
sub
push
or
add
add
enter
mov
loope
aad
aas
sti
mov
insl
push
rcll
into
mov
add
rclb
lcall
lock
mov
insl
scas
jecxz
or
mov
ret
fstp
mov
rcll
imul
mov
xchg
in
xchg
pop
mov
sahf
jle
add
add
add
insl
xchg
cwtl
out
jns
rcrb
cmp
adc
mov
adc
dec
rcll
add
and
add
push
pusha
adc
lret
push
jmp
inc
adc
insb
lcall
inc
ficoml
popa
mov
cmp
pusha
jbe
mov
sti
es
ficoms
popa
cmp
les
call
add
dec
cmp
popa
dec
push
xor
pop
mov
jl
sbb
push
sub
cmp
in
sbb
sbb
sub
cmp
adc
aaa
pop
popa
loope
sbb
xchg
rclb
push
xchg
jecxz
push
jle
xchg
pop
jb
pusha
inc
outsl
lock
push
jle
xchg
pop
jb
pusha
dec
jnp
cmpsb
sti
frndint
jae
cmp
mov
add
add
sub
arpl
addr16
data16
xor
inc
das
push
sti
cltd
mov
sti
jb
cli
pop
shll
mov
xchg
fnsave
sti
cltd
jge
repz
imul
movsl
vsqrtsd
addr16
addr16
sub
xor
add
mov
dec
lods
mov
xchg
pop
in
and
add
jne
push
call
pop
mov
fdivl
pop
fdivl
add
pusha
fdivrl
out
fdivl
jae
cmp
jno
xor
cmpsb
pop
cmp
enter
mov
loop
mov
loopne
cld
rclb
rcr
ljmp
repnz
out
mov
out
mov
filds
xlat
shrb
mov
add
xlat
adc
aas
sub
pop
dec
mov
adc
ljmp
mov
sahf
fcoms
cmp
ret
sbb
mov
lcall
lret
loope
fcoms
adc
ret
sbb
push
les
add
mov
add
and
cmpsb
insl
push
xchg
loope
shrl
adc
jle
xor
jno
xor
jae
decl
add
add
adc
jnp
add
jp
adc
sub
push
cmp
adc
pop
adc
int
pop
popa
sti
fisubl
xor
cmp
push
push
pop
packuswb
dec
mov
movsb
pop
cmp
push
pop
flds
push
jl
sub
cmp
pusha
mov
and
ja
add
ret
cmp
dec
rclb
insl
int3
push
mov
xor
sub
ja
pop
adc
inc
push
xor
cmp
insb
xchg
popf
pushf
push
out
xchg
imul
xchg
fwait
push
mov
insb
mov
outsb
pop
xchg
notl
pop
mov
lahf
addr16
ja
outsb
pop
xchg
add
insl
jb
mov
and
add
push
and
imul
outsb
xor
sub
and
cmp
outsb
cmp
jnp
pop
add
cltd
dec
repz
sar
and
out
pop
pushf
dec
add
in
loop
out
pop
and
fldz
ljmp
loop
mov
loopne
rclb
mov
inc
jecxz
mov
loope
rclb
add
add
and
jbe
xor
dec
mov
fdivl
dec
jecxz
ret
pop
jecxz
mov
add
in
inc
mov
xchg
pop
pop
es
jecxz
fidivs
aas
fisubs
pop
pop
mov
rclb
lret
jmp
fidivl
insl
int3
jb
and
xchg
rcrb
test
cli
aas
lret
jns
sbb
xchg
fildll
add
cmp
add
xchg
mov
adc
loop
dec
inc
mov
mov
call
pushl
dec
rclb
in
flds
aas
add
and
xchg
outsl
aas
test
add
fld
add
loop
insl
adc
fnstcw
adc
xchg
xchg
outsl
mov
jbe
add
add
add
inc
push
jno
add
and
push
or
inc
adc
sbb
jl
and
push
or
push
sbb
adc
inc
jae
sti
mov
sub
outsl
fidivrl
xor
cmp
imul
testl
movsl
inc
cmp
push
sbb
dec
cs
jl
sbb
push
adc
push
add
add
pushl
push
add
dec
sub
push
push
dec
lret
loop
jnp
iret
xchg
insl
or
mov
bound
in
shlb
mov
in
mov
imul
cltd
mov
movsw
scas
mov
imul
push
test
jbe
jne
jb
imul
test
ja
pusha
ret
pop
jne
jb
xchg
pop
test
jbe
and
mov
ja
and
pop
xor
and
mov
out
mov
out
xchg
roll
xchg
lret
rclb
aam
out
cltd
repnz
jl
pop
imul
mov
xchg
repnz
mov
in
add
add
and
push
shlb
cltd
xor
push
and
rolb
cwtl
inc
sarb
aas
out
lea
rorb
arpl
push
cltd
jbe
mov
outsb
cs
out
cld
shll
lea
fldenv
adc
imul
push
pushf
push
int3
add
add
sbb
xchg
sti
outsb
scas
inc
pushf
cwtl
pop
nop
jns
xchg
xor
and
xchg
xor
inc
push
fs
cmp
inc
mov
in
xchg
mov
xor
mov
inc
sti
xchg
adc
lret
xchg
add
out
jno
adc
xchg
sbb
xor
stc
or
lahf
notl
addr16
push
test
or
scas
adc
push
add
jno
jmp
sbb
inc
add
je
or
insb
std
add
pusha
and
adc
sbb
add
jno
jmp
sbb
mov
or
add
pusha
iret
notl
addr16
negb
inc
mov
rorb
imul
add
and
fcomps
and
cmp
es
push
cmp
mov
outsl
sti
out
mov
int
push
xlat
mov
mov
movd
mov
lcall
enter
xlat
insl
xchg
xchg
mov
mov
mov
mov
jno
push
xchg
pushf
jb
add
add
lcall
push
stos
ja
jo
bound
xor
push
ja
imul
mov
inc
mov
pop
lcall
or
addr16
lea
cmp
sbb
das
xchg
sahf
loopne
js
pop
mov
lret
repz
pop
sbb
in
in
nop
jmp
in
ret
aam
add
mov
xchg
pop
push
and
movsl
test
mov
mov
test
and
xchg
call
push
popf
and
outsl
xchg
push
loope
js
pop
jbe
outsb
sbb
arpl
pop
mov
xchg
and
xchg
push
outsb
cmp
mov
xor
mov
pop
outsb
mov
jno
sub
jbe
std
mov
add
add
lcall
adc
dec
xchg
adc
sub
mov
jo
test
pusha
push
test
push
mov
xchg
jo
jg
mov
lcall
add
mov
inc
hlt
xchg
adc
lcall
ja
notl
push
or
jnp
push
gs
cmp
std
or
scas
or
popa
pushf
fimull
in
cmp
out
je
fimull
gs
fdivs
add
sub
sbb
and
or
sbb
repnz
and
or
sbb
clc
push
add
sub
jo
out
jbe
and
or
sbb
repnz
dec
outsb
sub
add
xchg
xchg
push
push
or
pushf
add
add
cmp
insb
bound
mov
ds
mov
pop
mov
pop
cmp
cmp
dec
dec
dec
ret
lock
dec
fmulp
xchg
ja
fldt
pop
ljmp
cmp
shlb
jne
push
outsb
sub
stos
mov
add
add
mov
dec
into
and
gs
xor
popf
and
inc
jecxz
imul
je
aas
mov
push
andb
addb
filds
push
in
xchg
jp
and
xorb
cmpl
adcb
loop
sahf
xlat
add
xchg
loop
add
ret
adc
and
cli
out
add
stos
xor
fimuls
outsb
xor
outsb
fsts
push
sbb
inc
xchg
fsubrs
into
mov
dec
jmp
inc
shll
dec
outsb
add
pop
sbb
loopne
nopl
jp
push
mov
pop
sbb
mov
sbb
add
mov
xchg
adc
xchg
jne
scas
jbe
sbb
popa
test
rorl
sahf
jo
add
xchg
insb
outsb
scas
ss
xchg
adc
mov
dec
imul
push
popf
add
sub
or
add
dec
imul
sbb
or
inc
lods
or
add
add
adc
and
add
add
jl
or
mov
icebp
sub
pop
push
popa
jge
std
push
fisubs
dec
jbe
add
pusha
cmp
adc
pop
repnz
or
mov
or
push
popa
pop
repnz
or
insl
add
and
xchg
pop
ret
sub
nop
xchg
inc
aad
insl
loope
ret
xchg
ja
imul
jne
lods
pop
xchg
cli
xchg
inc
xchg
outsl
jnp
xchg
inc
push
or
or
pop
cmpsb
sti
rorl
inc
test
imul
jb
xchg
push
mov
dec
and
pushf
outsl
aaa
sbb
data16
xchg
push
mov
xchg
pop
repnz
bound
jmp
insl
gs
ficoml
insl
mov
and
add
xchg
mov
data16
jecxz
addb
and
shlb
jecxz
xchg
inc
fsts
and
add
fs
jecxz
xchg
cmp
orb
sbb
ret
inc
xorb
orb
jae
pusha
mov
bound
sub
jb
push
mov
flds
add
mov
mov
aam
mov
inc
mov
mov
xchg
jbe
lods
cld
mov
ljmp
sbb
arpl
mov
xchg
outsb
cwtl
xchg
jbe
sub
sbbl
lcall
inc
notl
sub
xchg
inc
notb
mov
pop
adc
out
arpl
or
mov
add
add
mov
xorb
ret
stc
mov
outsl
outsb
scas
jo
add
dec
mov
rclb
add
cmc
or
outsl
and
sub
sbb
cld
notb
ja
std
push
add
popa
or
testl
push
push
sub
divb
push
cmc
push
jbe
and
lods
add
jo
hlt
sbb
add
inc
sub
fimuls
fwait
clc
pop
add
pusha
jl
pop
jo
jmp
push
inc
addr16
je
out
std
inc
lcall
popa
mov
and
inc
push
fsts
xchg
fbld
ja
fsubs
xchg
lret
mov
insl
mov
mov
sti
xor
ret
push
mov
add
mov
inc
adcb
cmp
cmpsb
cmp
pop
mov
jb
pop
mov
outsb
xchg
xchg
push
movsb
ja
cmp
inc
and
xchg
push
movsb
ja
sbb
pop
repnz
xchg
pop
dec
es
fucom
mov
in
fs
lret
add
add
test
pop
ficomps
repnz
mov
aam
cwtl
jecxz
sub
add
pop
mov
mov
xchg
add
jp
aas
xor
push
xchg
pop
imul
fldt
cmp
inc
xchg
pop
or
mov
xor
push
shlb
push
add
es
cltd
outsb
add
add
std
decl
sbb
imul
sbb
pop
arpl
enter
mov
push
adc
xchg
or
aaa
mov
js
andl
das
mov
inc
cmp
inc
sbbb
xchg
sbb
lock
and
xorl
inc
fists
mov
pop
adc
adcl
roll
cld
inc
icebp
adc
xchg
pop
adc
icebp
adcb
stc
jge
add
arpl
add
cmp
in
mov
inc
daa
das
popa
sub
gs
jecxz
jbe
call
sbb
cli
mov
xlat
xor
out
dec
cltd
in
dec
aas
daa
sbb
pop
hlt
sbb
out
mov
xchg
adc
jge
daa
lcall
cmc
or
xchg
adc
push
adc
add
adc
sti
daa
je
testl
xchg
and
jo
cmc
push
jno
sub
xchg
das
sahf
imul
and
into
xchg
and
imul
inc
insl
pop
loopne
mov
ja
cld
insl
in
lcall
sti
inc
mov
add
test
sti
sub
inc
mov
test
stos
insb
js
mov
adc
pop
xchg
outsl
imul
outsb
inc
cmp
bound
imul
fldcw
cmpl
aaa
addb
inc
add
mov
bound
cli
xorl
in
jp
lret
mov
add
add
scas
shl
jne
fsubr
cltd
mov
push
adc
les
lock
xchg
out
shll
sub
in
sbb
jo
cli
mov
xor
jb
xchg
pop
sub
jns
xor
jge
xor
gs
rclb
outsb
inc
out
cld
in
xchg
jne
fsts
or
add
into
adcl
shlb
std
leave
xchg
or
sbb
push
outsb
adc
jbe
sarb
mov
ret
dec
jl
filds
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
add
and
mov
and
scas
and
scas
and
mov
and
scas
and
scas
and
jg
outsb
add
and
outsl
and
outsl
and
jg
outsb
add
and
outsl
and
outsl
and
aas
and
aas
and
das
and
das
and
aas
and
jg
cs
inc
cs
add
cs
add
and
lock
das
xor
add
or
jmp
outsb
add
push
outsb
add
out
insl
add
cld
insl
add
dec
nop
cmp
jmp
add
ljmp
xchg
cld
insl
add
std
insl
add
cs
cmp
dec
imul
fdivl
lahf
cld
insl
add
cld
insl
add
cld
insl
add
cld
jno
xchg
std
dec
cld
pop
adc
add
add
mov
jno
xchg
jl
add
jge
cld
sub
add
add
add
fsubrl
xchg
insl
add
cld
insl
add
cld
insl
add
and
xchg
pop
xchg
and
xchg
dec
xchg
gs
pop
xchg
and
xchg
cmp
and
push
movsb
popf
gs
pop
xchg
and
addr16
sahf
gs
pop
add
add
and
xchg
pop
xchg
and
or
xchg
and
or
xchg
and
insb
xchg
gs
pop
xchg
jb
dec
xor
iret
gs
das
roll
ljmp
cs
nop
lahf
cmp
mov
pop
cld
cmc
jecxz
test
sti
adc
scas
les
lods
xor
add
add
aam
bound
arpl
pop
fldcw
cli
dec
in
cli
xchg
sbb
xor
les
xor
andl
fnsave
sahf
test
add
xchg
lret
jmp
sub
sub
inc
xor
movsb
sbb
and
adc
push
scas
clc
jge
imul
add
mov
inc
adc
stc
jge
movsb
add
add
inc
ljmp
test
jno
pusha
xor
jecxz
mov
pop
xchg
xchg
push
jp
mov
bound
and
sti
pop
or
iret
hlt
dec
or
push
push
pushf
ds
repnz
add
dec
pop
testb
aad
xor
sub
cmp
xchg
fwait
mov
arpl
daa
outsb
add
pop
mov
fwait
pop
mov
add
add
cmpb
or
rcll
push
adc
rol
shll
jmp
out
repnz
and
and
mov
inc
gs
add
adc
sti
adc
loopne
out
outsb
mov
or
pop
mov
testb
mov
mov
mov
add
add
jmp
in
xchg
inc
shll
mov
and
jle
push
testb
in
jo
mov
sub
mov
jnp
xor
dec
insl
mov
and
dec
cmp
hlt
mov
fs
xor
xchg
fnstenv
cmpsb
rclb
add
add
pop
cmpsl
je
cmpsb
inc
cmp
dec
adc
inc
dec
sti
jno
add
pop
adc
nop
jno
xchg
mov
dec
test
fnstsw
cwtl
movsb
add
iret
scas
mov
ret
in
dec
mov
cmp
cmp
lods
xor
add
mov
pop
sbb
push
and
lods
add
add
lret
and
arpl
and
and
sub
filds
or
fwait
in
jb
lock
xchg
and
outsb
and
dec
outsb
mov
dec
outsb
mov
sbb
dec
outsb
add
int3
dec
add
int3
dec
add
lret
dec
add
int3
dec
add
leave
dec
add
leave
dec
add
leave
dec
add
add
pop
leave
dec
add
leave
dec
add
leave
dec
add
leave
dec
add
leave
dec
add
int3
dec
add
int3
dec
add
lret
dec
add
lret
dec
add
lret
dec
add
lret
dec
add
lret
and
add
pop
dec
add
and
inc
xchg
jno
mov
lods
dec
add
lods
dec
add
lods
dec
add
scas
dec
add
scas
dec
add
shl
cmp
add
xchg
fsub
cmp
loopne
cmp
sub
cmp
cld
pop
add
clc
insl
add
lods
test
mov
ja
jl
scas
je
cmpsl
scas
lods
mov
outsb
add
mov
xchg
xor
sti
mov
jae
xchg
cmp
push
jl
pusha
sbb
xor
js
popl
add
enter
rcrb
test
jl
mov
dec
inc
idivb
dec
and
dec
dec
fwait
testb
jnp
jge
xor
dec
fcomi
int
ret
idivb
dec
jecxz
lea
testl
dec
inc
imull
dec
ret
idivb
dec
mov
decl
add
popf
dec
jnp
jge
cmp
dec
pop
clc
dec
dec
inc
clc
cmp
cmp
sbb
or
outsb
dec
insl
roll
insl
roll
icebp
inc
xor
inc
dec
dec
adc
dec
add
inc
xor
cmp
inc
or
push
inc
icebp
sub
test
sbb
mov
xchg
inc
xchg
or
inc
push
cli
mov
add
rolb
ljmp
mov
loopne
leave
int
dec
ror
add
ret
xor
and
push
inc
icebp
stos
inc
inc
sub
pusha
inc
or
addb
idivb
jecxz
out
jecxz
mov
add
jecxz,pt
xchg
jecxz,pt
xchg
xor
jbe
arpl
data16
mov
add
and
inc
aas
repz
aas
jecxz
es
and
push
aas
and
push
aas
jae
idivb
arpl
out
arpl
aas
mov
add
aas
jecxz
xchg
aas
jecxz
xchg
mov
jne
jecxz
cmp
sti
inc
cmp
xor
cmp
sbb
mov
jo
scas
stos
cmp
mov
cmp
out
mov
incl
fadds
das
imul
aas
arpl
orb
sbbb
subb
cmpb
orb
jo
scas
stos
cmp
iret
fwait
mov
xchg
mov
xchg
adcl
vmread
adc
popa
and
add
add
pop
xchg
and
mov
idivl
xor
ret
imul
xor
mov
lock
xor
add
fnsave
lock
xor
jnp
std
xor
lock
xor
lock
lock
lock
xor
icebp
dec
xor
icebp
add
add
cmp
cmp
xor
lock
xor
mov
mov
aas
mov
fnstsw
mov
std
aas
jmp
addr16
cmp
addr16
cmp
inc
pop
cmp
inc
lea
inc
jge
imul
cmp
daa
int
jno
mov
cmp
pop
fnstsw
add
add
or
cmp
add
cmp
leave
in
cmp
sub
insb
cmp
dec
mov
add
div
aaa
dec
mul
aaa
sbb
aad
sub
lds
jmp
mov
dec
mulb
aaa
sub
test
imul
xor
data16
push
xor
adc
sub
xor
adc
xor
push
xor
add
imul
xor
cmc
in
sbb
aad
stos
cmc
lds
imul
xor
cmc
movsl
xor
cmc
test
jmp
jbe
lret
push
xor
push
push
xor
cmovbe
stos
adc
xor
jb
outsl
mov
jg
xchg
cwtl
imul
arpl
cwtl
mov
lret
mov
cwtl
out
lret
cwtl
cwtl
incl
add
ret
adc
mov
mov
fwait
dec
mov
fwait
outsl
mov
fwait
jg
nop
fwait
lahf
pusha
mov
scas
push
push
fwait
iret
enter
shlb
out
enter
rclb
pop
fcomps
das
test
and
inc
ljmp
cmp
sub
ss
add
add
aaa
sti
in
ss
aad
ret
call
jne
repz
xchg
cmp
call
mov
mov
movsl
cmp
call
in
lret
call
lds
call
add
cmp
jmp
push
cmp
jmp
cmc
cmp
add
cmp
jmp
add
add
xor
popa
inc
xor
push
inc
cmp
jno
dec
test
inc
jno
xchg
inc
pop
mov
mov
imul
or
jae
inc
mov
inc
icebp
sbbb
fnstcw
inc
shll
test
inc
pop
inc
mov
xor
leave
sub
inc
pop
cmp
inc
addl
add
xor
inc
xor
flds
clc
or
lock
inc
or
sub
jmp
pop
cmp
or
cmp
or
cmp
or
sbb
cmp
std
aaa
dec
cmc
in
cmp
cmc
fnstsw
dec
cmc
int
sbb
mov
cmp
popf
cmp
lea
sbb
jge
or
insl
cmp
pop
cmp
dec
cmp
cmp
add
sub
cmp
or
cmp
or
cmp
cmp
out
cmp
or
cmp
or
cmp
or
cmp
or
cmp
sub
pop
test
jg
mov
lret
nop
xor
cmp
bound
push
xchg
jg
push
mov
jg
add
add
mov
xlat
enter
shlb
pop
mov
jle
test
loopne
aaa
cltd
enter
mov
push
mov
jle
jns
jle
jno
jle
imul
mov
mov
shll
dec
hlt
cmc
cmp
add
cli
xchg
mov
cli
xor
xchg
and
mov
lock
add
arpl
jge
pop
lock
xor
cmp
cmp
xor
and
sub
xor
pop
icebp
int
inc
icebp
int
jnp
std
xor
lock
icebp
or
xor
icebp
std
xor
icebp
std
xor
dec
xor
icebp
dec
xor
icebp
cmp
xor
jmp
pop
inc
inc
roll
dec
inc
roll
add
or
inc
sbb
repnz
or
stc
inc
cmc
std
sub
inc
aad
sbb
inc
adc
mov
inc
popf
stos
mov
xchg
ret
lods
mov
cli
mov
and
dec
aad
dec
dec
fnsave
dec
aad
cmp
dec
stc
jnp
dec
stc
jae
dec
imul
dec
jns
xchg
dec
jns
cltd
dec
mov
add
sub
dec
popf
inc
mov
add
or
cmp
scas
cmp
mov
scas
or
cmp
or
cmp
xchg
mov
pop
and
sti
hlt
xor
icebp
cmp
icebp
and
icebp
test
rep
xor
mov
hlt
dec
xor
outsl
repz
xor
add
add
hlt
or
xor
inc
repz
xor
xchg
jle
xchg
addr16
lahf
scas
jge
addr16
jge
addr16
mov
jbe
mov
ss
jge,pt
cmpsl
push
jge
cmpsl
es
cmpsl
push
addb
push
orb
jg
test
pop
test
test
shll
fildl
add
fs
gs
jle
lds
daa
das
aaa
aas
movsl
inc
jg
movsl
xor
movsl
adc
movsl
adc
test
jg
test
sti
hlt
add
xor
push
xor
hlt
dec
xor
sbb
fwait
repz
xor
repz
xor
shll
repz
add
xor
icebp
xor
pop
xor
repnz
ret
not
das
ret
testb
jg
or
cs
mov
xchg
out
xchg
cmp
out
ret
call
inc
cmp
in
dec
cmp
jmp
cmp
ds
dec
scas
cs
dec
stos
decl
cmp
dec
pop
cmp
dec
out
sub
dec
rolb
add
sub
dec
mov
cld
mov
in
movsb
dec
push
jne
mov
xchg
and
ds
loop
cmp
repz
jns
outsl
xchg
inc
daa
lds
inc
xor
addb
xchg
inc
shll
sub
subb
outsl
cmc
mov
add
and
aas
add
stc
aam
mov
mov
add
add
testb
testb
cmc
cs
cmc
int
adc
notb
xor
repnz
mov
ds
cmp
std
addr16
cmpsl
cmp
add
cmp
add
cmp
push
outsb
add
stc
sbb
stc
ret
xor
xchg
pop
ss
xor
test
add
add
sti
leave
ss
sti
pop
aaa
arpl
das
aaa
xchg
adcl
andl
sub
jae
es
cltd
mov
mov
jle
adcb
push
jle
bound
or
cltd
xor
cwtl
push
lret
out
je
mov
jno
jge
xchg
test
sets
popf
out
xchg
mov
sbb
add
add
xchg
push
addb
fdivrs
addr16
jle
imul
popa
out
sbb
into
cwtl
xchg
repz
cs
jmp
xor
xlat
call
xchg
xor
in
in
xor
jecxz
xor
jecxz
xor
jecxz
xor
loop
xor
loope
xor
cmp
in
or
xchg
daa
add
iret
pop
add
add
xor
adc
xor
into
icebp
dec
aaa
cmp
movsl
ss
ljmp
mov
out
pop
sub
outsb
mov
inc
in
gs
jnp
xchg
inc
dec
subl
js
push
inc
aad
jge
fs
inc
jmp
pop
inc
inc
sub
ds
stos
add
add
orb
cmovs
cmp
xor
mov
add
dec
aas
mov
in
cmp
arpl
mov
push
cld
les
inc
fidivl
mov
inc
xchg
mov
and
jg
push
jecxz,pt
sbb
adc
popf
aas
sti
or
cmp
or
cmp
add
fimull
sarl
cmp
mov
outsl
and
outsb
add
cmc
xorb
ds
pop
cli
push
xor
cmp
xor
cli
push
xor
je
divb
insl
div
xor
jne
ret
ds
std
test
ss
cmp
mov
pop
or
sti
stos
and
loop
ss
aas
jle
add
add
jle
bound
jle
lret
pop
ret
pusha
lret
push
stos
movd
jg
subb
jle
mov
cwtl
sbbb
mov
jle
orb
mov
push
jle
bound
jle
lret
fadd
pop
jle
lret
call
stos
movd
mov
iret
cwtl
or
add
mov
iret
cwtl
sbb
scas
cwtl
sub
cmp
push
pop
jmp
cmp
dec
cmp
ljmp
jmp
cmp
jmp
stos
ss
jmp
shrb
cmp
std
sub
out
xor
sub
push
sub
in
mov
sub
jmp
sub
in
add
add
push
in
gs
cmc
sub
ljmp
jecxz
xor
jecxz
xor
jecxz
xor
jecxz
xor
loop
xor
mov
out
mov
mov
mov
lret
out
ret
popf
imul
pusha
jl
addr16
cmp
dec
dec
mov
inc
scas
ds
inc
cmpsb
add
add
inc
jno
pop
inc
pop
pop
xchg
dec
inc
add
addb
mov
or
popa
inc
shr
inc
in
ljmp
adc
lock
shll
fwait
lret
xchg
inc
jbe
ret
mov
into
inc
aas
sbb
add
cmp
add
cmpl
test
add
ljmp
cmp
add
add
pop
mov
jg
mov
aas
sub
mov
shll
shl
ss
sarb
add
sub
and
cli
xor
aad
xor
xor
or
fs
xor
into
jge
cld
rolb
and
sarb
cmp
xchg
mov
arpl
out
movsl
repnz
into
stos
adc
add
add
inc
insb
das
test
insb
dec
stos
push
pop
pop
stos
imul
stos
jno
sub
lea
pop
stos
ljmp
mov
xchg
push
test
mov
jnp
push
jo
xchg
push
mov
jne
fmull
mov
roll
mov
add
mov
xchg
call
and
mov
js
scas
xlat
xor
or
adc
xor
into
xlat
loope
into
xlat
leave
xor
xlat
jp
ss
movsb
sbb
repnz
ds
iret
arpl
dec
shl
ss
shr
ss
mov
mov
shlb
rcrb
aaa
sti
rolb
add
clc
ss
shlb
xchg
shrl
sub
sub
loopne
push
xor
sbb
outsb
pop
loopne
inc
in
iret
inc
inc
loopne
xchg
inc
xor
jmp
imul
or
out
sub
fiadds
inc
add
cmp
mov
lret
xlat
ret
sbb
jge
sbb
dec
mov
pop
ljmp
xchg
and
add
inc
cld
cmp
dec
fdivl
xor
push
ljmp
dec
iret
aas
dec
dec
cld
inc
add
jecxz
sbb
and
and
jle
xor
xor
sarl
daa
shr
xor
xor
cmp
push
int3
fnstsw
stos
iret
mov
lret
into
dec
aas
sti
into
xor
arpl
cmp
imul
aas
add
add
sub
fcmovne
adc
jecxz
sbb
lret
int3
add
ret
int3
or
sti
lret
icebp
aas
jecxz
stc
aas
jmp
loope
jecxz
jmp
aas
jecxz
fnstcw
mov
sarl
lret
leave
aas
sti
lret
mov
arpl
mov
aas
xchg
xor
int
movsb
jmp
xor
lods
add
or
repnz
xchg
loop
and
mov
xor
test
inc
push
mov
xor
pop
shlb
arpl
fimull
jmp
stos
mov
mov
mov
stos
cli
test
mov
ljmp
mov
test
sbb
sub
test
jae
test
imul
fcmove
sub
fisubrl
fcmovnu
add
add
mov
fisubrl
lret
fisubrl
fcmovnu
imul
sbb
or
or
sub
sbb
sub
into
fld
out
xchg
and
lcall
outsb
rol
cs
shl
cs
roll
sub
pop
fbstp
and
push
cs
imul
fisubs
sub
add
sub
mov
dec
movsb
dec
dec
inc
out
in
movsl
out
aad
and
outsl
in
aas
push
sbb
push
jle
mov
jae
push
enter
rcrb
shr
inc
fwait
loop
inc
sub
inc
add
and
add
in
inc
leave
int3
sub
ret
xchg
mov
mov
cwtl
inc
jp
stos
inc
lds
add
pop
in
inc
or
dec
hlt
inc
inc
dec
and
ds
mov
outsb
jnp
add
int
cmp
int3
lea
out
lret
aas
orb
cmp
enter
mov
xor
adc
mov
xchg
rclb
ss
mov
ss
fs
roll
sbb
sar
xor
add
mov
sub
pop
cmp
lret
in
leave
movsb
cmp
add
mov
add
cmp
add
cmp
add
dec
add
mov
adc
xchg
inc
test
mov
xchg
jl
stos
jecxz
test
insl
push
test
xchg
pop
shrl
int
mov
daa
ret
pop
mov
inc
mov
stos
ja
mov
lcall
jecxz
aas
mov
es
cmpsb
ss
cmpsb
imul
aam
icebp
mov
inc
rcrb
movsb
mov
mov
add
xor
lret
and
fstpl
add
add
fldl
xchg
push
cmp
dec
add
adc
add
push
mov
mov
out
xlat
xchg
pop
ret
sarl
sarb
sbb
rolb
mov
push
pop
sbb
shl
pop
inc
sarl
sbb
lret
inc
sbb
lret
or
inc
aam
sbb
lret
std
leave
inc
sbb
push
sbb
aad
sbb
mov
ds
cli
inc
insl
inc
inc
add
add
inc
adc
inc
test
data16
inc
leave
pop
insl
inc
arpl
inc
dec
dec
xchg
inc
scas
cmp
cmova
in
push
inc
insb
in
mov
inc
stc
fldt
dec
enter
inc
rcl
push
leave
push
dec
sarb
pop
out
cld
dec
sti
out
rorb
jecxz
movsl
xchg
and
cmp
ret
inc
jo
sahf
inc
les
add
addr16
xor
inc
cld
pop
rolb
add
mov
lahf
cmp
fdivrp
test
aas
mov
cltd
aas
push
adc
lret
cmp
std
push
cmp
clc
sbb
sar
cmp
adc
outsb
add
stc
popf
xor
clc
lcall
hlt
mov
out
icebp
ja
enter
pop
repnz
add
add
cmc
fidivs
push
cmc
scas
xor
hlt
pop
xor
push
xor
lock
out
cltd
xor
add
xor
lods
sbb
jno
andl
into
xchg
fwait
cmpsb
add
mov
inc
js
mov
lods
push
clc
mov
sub
leave
mov
rcll
stos
mov
mov
iret
mov
xor
dec
cli
leave
ss
add
popf
das
xchg
std
data16
mov
dec
stos
mov
xlat
jb
outsl
and
repnz
push
adc
aad
adc
aad
adc
lret
sbbl
lret
cltd
sbb
aam
sbb
lret
jmp
outsl
lret
adc
cs
add
add
sbb
bound
xchg
leave
int3
pop
adc
add
cmc
lret
mov
leave
in
fildll
lods
fbstp
sbb
push
fdivr
sbb
fcomps
push
insl
fbstp
fcomp
dec
push
sbb
sub
xor
out
sbb
pop
sbb
inc
jmp
insb
xchg
inc
mov
pop
es
fcomps
inc
or
add
dec
or
dec
outsb
inc
adc
aas
popa
inc
je
scas
inc
dec
outsb
xchg
pop
xchg
inc
mov
dec
roll
inc
sub
dec
inc
dec
lds
dec
push
out
pop
dec
mov
jmp
or
enter
ret
mov
lret
fimuls
xchg
xchg
and
ds
ds
in
aas
add
hlt
cld
xor
add
add
lock
xor
std
fidivs
or
xor
cld
xor
inc
xor
dec
xor
cli
adc
test
sahf
xor
xor
dec
out
fdivrl
sbb
jbe
mov
sbb
fs
enter
aaa
cmp
and
add
stc
add
xor
add
add
idivl
ss
mov
aaa
jbe
xor
cmpsb
subb
sti
push
cmpsb
cmp
imul
pusha
push
movsb
in
leave
fdivl
sbb
jmp
mov
mov
mov
mov
andb
js
lahf
divb
pushf
adc
cld
pushf
sbb
pushf
xor
add
add
pushf
cmp
mov
add
jge
stc
xchg
xchg
iret
popf
inc
cmpsb
adc
movsb
jno
mov
jne
repz
shrl
adc
adc
frstor
adc
adc
mov
mov
xchg
adc
fsubl
adc
pop
fst
adc
fnstsw
add
mov
adc
fisttpll
adc
adc
fldl
or
sbb
pop
enter
enter
iret
adc
std
and
std
xor
in
enter
enter
into
push
outsb
fmulp
xor
fldl
inc
rcr
push
inc
out
sbb
int3
insb
inc
mov
jg
mov
inc
inc
mov
push
inc
jbe
lcall
add
add
mov
hlt
inc
mov
cld
inc
rcrb
pop
int3
inc
mov
aam
mov
faddl
arpl
inc
into
pop
sbb
fs
and
inc
fwait
arpl
inc
mov
inc
jns
and
xlat
dec
add
inc
mov
push
inc
and
push
dec
loopne
dec
add
in
cmp
jmp
cmp
out
cmp
jmp
cmp
add
adc
jmp
cmp
mov
cmp
cmp
xchg
cmp
jmp
cmp
jmp
cmp
ljmp
out
outsb
add
idivb
shl
mov
xor
icebp
bound
lcall
aaa
push
idiv
aaa
shl
outsb
xor
icebp
cld
das
outsl
std
divb
add
add
mov
mov
stos
je
sti
mov
fldenv
lcall
mov
aam
push
mov
sub
mov
int
mov
lock
int
pop
mov
push
mov
adc
fdivrs
stc
push
aaa
jb
xchg
or
mov
cmp
add
and
test
gs
lret
gs
roll
jmp
shr
adc
jb
adc
iret
mov
sbb
int
sbb
into
xor
into
icebp
sbb
lret
inc
sbb
pop
xchg
and
fdiv
adc
shl
seta
sbb
into
rol
sbb
add
push
fmul
xchg
sbb
int
sbb
roll
test
sbb
add
adc
popf
push
xlat
mov
adc
out
cmp
out
cmp
xor
pop
inc
sbb
outsb
inc
mov
filds
enter
rorl
lret
inc
stos
jecxz
inc
pop
call
fadds
lret
mov
add
add
ret
ret
mov
pop
fildl
dec
addr16
push
dec
mov
inc
cmp
mov
lods
dec
out
stos
dec
repz
xchg
pop
movb
inc
pop
add
dec
rorl
arpl
mov
cmc
fmuls
add
hlt
and
lcall
xor
out
lret
xor
push
add
out
jnp
loop
push
xor
add
and
aad
jbe
push
xor
repnz
xor
in
in
sbb
push
cmp
out
cmp
test
cmp
cwtl
cmp
sub
jg
mov
daa
and
jg
imul
lock
ss
mov
out
mov
aaa
popf
cmc
cmp
mov
repz
cmc
lret
xchg
sahf
loopne
negb
dec
arpl
lahf
add
add
fcomps
mov
push
lahf
iret
ret
pop
lahf
out
mov
lahf
mov
sbb
sbbl
mov
outsb
loopne
pop
outsb
push
mov
pop
add
nop
iret
insb
mov
add
xchg
mov
mov
mov
test
mov
mov
sbb
lea
add
mov
int
cmp
xchg
xchg
aad
pop
xchg
and
xlat
into
adc
std
popf
push
outsl
rcll
pop
repz
pop
push
rcr
push
sub
xchg
lcall
pop
icebp
rorl
sbb
shlb
xor
mov
or
dec
sbb
lret
scas
sbb
aam
sbb
aad
sbb
iret
add
add
or
sbb
ss
int3
iret
dec
push
cmpsb
leave
orl
outsb
add
inc
notb
inc
jecxz
mov
arpl
dec
sbb
dec
inc
push
push
dec
and
mov
dec
fdivl
in
test
mov
xchg
and
ds
les
aas
or
mov
inc
addr16
inc
and
inc
popa
add
add
push
inc
mov
fnstcw
inc
jg
pop
inc
dec
fs
inc
and
dec
cmp
dec
mov
lret
inc
push
pop
push
inc
jl
lods
inc
add
loopne
ds
jecxz
ds
pop
cmp
outsb
cmp
nop
cmp
inc
mov
lahf
outsb
add
testb
stc
or
imulb
xor
add
mov
xor
pusha
test
ss
clc
jmp
cmp
shlb
clc
lods
ss
mov
ss
clc
jns
sar
aaa
sbb
sbb
clc
stc
hlt
aaa
sar
int
sbb
mov
inc
testb
add
fisubl
les
push
mov
lahf
nop
imul
add
add
lahf
stc
imul
pop
pusha
in
mov
xchg
rcrl
leave
cmpsb
mov
movsl
scas
scas
mov
clc
sahf
lds
dec
mov
popa
popl
jg
mov
iret
mov
insb
out
xor
push
pop
test
mov
lret
inc
ret
xor
or
roll
roll
add
stos
ret
inc
ret
xor
rol
inc
adc
push
cmp
sysret
xchg
and
pushf
xlat
pusha
adc
rolb
push
pop
xlat
pop
push
hlt
xlat
movsl
push
fcom
push
adc
aad
adc
jg
negb
cmp
leave
add
dec
leave
pushf
sbb
iret
xchg
push
xlat
enter
enter
add
pop
enter
enter
add
inc
testb
stc
pop
add
nop
inc
or
inc
dec
rolb
pop
add
sub
dec
pop
pop
adc
push
jge
adc
dec
cmpsl
push
rorl
pop
sbb
dec
lret
dec
rorb
sbb
push
add
cmp
dec
jbe
mov
dec
lahf
ror
dec
cmp
add
add
iret
mov
push
rorb
in
sbb
clc
aas
or
lret
cmp
sarl
xor
aas
xor
xor
repz
stos
xor
inc
xor
push
xor
xor
scas
cmp
repnz
imul
aas
daa
fimuls
aas
xor
jbe
es
cmp
cmp
add
add
in
cmp
fidivrs
push
out
cmp
out
cmp
out
cmp
insb
cmp
out
cmp
out
cmp
out
cmp
out
cmp
call
mov
pop
pop
mov
rcrl
mov
ret
cld
scas
lds
fildll
loope
les
add
cwtl
sbb
sbb
iret
das
dec
add
add
data16
jo
sub
imul
add
mov
insl
add
sarl
js
cmpsb
cmpsb
movb
mov
inc
in
sub
mov
inc
outsl
orb
xchg
xorb
push
xor
fstpl
sub
cmp
sbb
cmp
adc
dec
adc
fists
data16
xor
out
or
bound
mov
adc
mov
clc
cmp
xchg
out
and
xlat
aaa
rclb
ds
pop
shll
movsl
sbb
xor
out
sti
sbb
xor
adc
xor
adc
xor
adc
ficoml
gs
adc
xor
sbb
add
add
inc
test
pop
inc
movsl
pop
push
inc
jnp
mov
inc
lods
iret
jb
push
mov
and
lods
cmpsl
inc
xchg
scas
mov
inc
into
lcall
dec
mov
inc
in
pop
dec
or
push
dec
dec
fmuls
loop
mov
rol
dec
js
into
dec
jp
leave
dec
out
sub
push
push
dec
in
add
push
push
dec
bound
jp
mov
lea
add
addr16
cmp
cmp
call
data16
add
xlat
insb
add
and
jne
dec
ss
adc
add
fidivs
enter
jg
mov
outsb
adc
mov
adc
aaa
rclb
fdivs
stc
adc
xor
adc
xor
add
fwait
adc
xor
adc
xor
ljmp
or
pop
xor
push
sub
xchg
push
inc
stos
mov
inc
in
andl
cmp
inc
push
outsb
loop
je
stos
inc
mov
pop
addb
dec
sub
mov
lahf
mov
roll
mov
dec
dec
stos
popa
cs
mov
add
lcall
out
cs
xor
das
outsb
jae
das
mov
arpl
leave
pop
aad
push
ror
dec
jg
je
mov
mov
fimuls
test
or
cmp
and
cwtl
aaa
movsb
adc
sbb
call
das
lods
adc
xor
xor
pop
push
add
add
mov
mov
adc
xor
xchg
cmp
adc
pop
adc
xor
adc
movsl
or
cmp
cmp
dec
or
pop
decl
cmp
dec
dec
cmp
rorb
add
push
dec
dec
je
test
add
add
dec
and
dec
or
dec
ret
jae
dec
subb
inc
arpl
dec
loopne
sbb
rcrb
enter
shl
mov
and
jmp
stos
push
mov
lret
test
push
test
aas
bound
sub
pop
cmpsb
cmp
fs
pop
fs
mov
cmp
add
add
adc
aaa
fstl
aaa
xor
push
aaa
loopne
into
aaa
dec
push
enter
cmp
pop
or
xor
pop
xor
adc
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
cmp
add
add
or
cmp
push
sbb
cmp
iret
das
inc
mov
sbb
loopne
sub
lods
aad
lock
xor
sub
orl
xchg
dec
push
sbb
outsl
jp
dec
xchg
jae
inc
jmp
pusha
orl
rorb
orl
push
dec
dec
std
mov
add
xchg
dec
insl
add
lea
lods
cmpsb
loopne
pop
xchg
inc
sbb
or
xchg
mov
js
shlb
inc
or
fstl
nop
xor
sbb
xor
adc
xor
adc
ss
or
test
or
loopne
aam
push
cmp
or
cmp
or
mov
add
inc
pop
lret
push
jns
stos
add
mov
aaa
mov
notl
jmp
stc
push
sub
shrl
cli
shll
int
cmp
push
cmp
sub
repnz
insl
int3
imul
cmp
xchg
dec
in
aad
outsb
int
and
ds
lds
mov
cmpsl
call
inc
inc
add
add
sub
lcall
push
xchg
lock
inc
imul
out
pop
insb
dec
in
xor
and
inc
stos
mov
imul
dec
in
in
outsb
xchg
xchg
and
adc
gs
and
clc
sbb
xor
adc
cmp
xor
clc
add
xor
cmp
xor
inc
clc
int
pop
clc
aad
add
mov
xor
cmc
into
xor
imulb
scas
cmpsl
insl
add
daa
outsb
add
adc
xor
or
push
add
aas
push
add
aas
mov
std
imul
cld
push
cmp
cli
into
cmp
test
mov
add
daa
std
mov
jecxz
fiaddl
js
inc
fiadds
xchg
int3
fldl
xchg
lock
add
dec
dec
in
int3
aas
inc
and
or
mov
mov
int3
int
xchg
and
add
nop
cmp
cmpsl
cmpb
sub
sub
sbb
jl
dec
ss
ret
insl
lcall
pop
push
dec
mov
pusha
dec
int3
add
add
clc
dec
loop
push
dec
sti
mov
out
cmp
xor
jns
and
jmp
cmp
add
cmp
add
ret
add
cmp
xchg
and
jmp
outsl
hlt
jns
popf
stc
arpl
stc
mov
aad
out
icebp
notl
aas
stos
std
dec
cmp
add
cmpsb
add
jl
aad
jae
sarb
and
or
xchg
and
jne
mov
xchg
ss
hlt
or
sbb
shrb
stc
hlt
sub
stc
clc
sub
stc
insl
jbe
mov
inc
jp
xchg
inc
cmpb
cwtl
jno
inc
movsb
imul
inc
ret
inc
mov
cs
inc
add
pop
inc
mov
icebp
inc
push
mov
rolb
add
mov
inc
mov
jns
lods
popf
jmp
inc
dec
leave
inc
pop
jge
inc
in
jp
inc
fnsave
inc
or
stc
inc
lods
pop
imul
lret
popf
ret
insl
mov
add
cmp
lahf
add
cmp
paddb
add
mov
add
sub
add
add
hlt
mov
inc
hlt
gs
stc
sbb
aaa
pop
testb
fwait
idiv
mov
imul
aaa
jae
cmc
aaa
jnp
fnsave
inc
mul
aaa
sbb
int
adc
aad
sbb
mov
aaa
sbb
mov
jnp
popf
aaa
xor
aaa
mov
lea
mov
hlt
jge
xchg
and
cld
add
int3
insl
add
add
xchg
int3
insl
add
int3
insl
add
int3
insl
add
int3
insl
add
int3
insl
add
int3
insl
add
int3
insl
add
int3
insl
add
int3
insl
add
int3
insl
add
int3
insl
add
int3
insl
add
int3
insl
add
int3
insl
add
int3
insl
add
int3
insl
add
int3
insl
add
int3
insl
add
int3
insl
add
int3
insl
add
int3
insl
add
int3
insl
add
int3
insl
add
int3
insl
add
int3
insl
add
add
xchg
int3
insl
add
int3
insl
add
and
xchg
pop
xchg
and
xchg
pop
xchg
and
xchg
pop
xchg
and
xchg
pop
xchg
and
xchg
pop
xchg
and
xchg
pop
xchg
and
xchg
pop
xchg
and
xchg
pop
xchg
and
xchg
pop
xchg
and
xchg
pop
xchg
and
xchg
pop
xchg
and
add
and
xchg
pop
xchg
and
xchg
pop
xchg
and
xchg
pop
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
add
add
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
add
sub
scas
sub
scas
sub
jg
outsb
add
sub
outsl
sub
outsl
sub
jg
outsb
add
sub
outsl
sub
outsl
sub
aas
sub
add
add
sub
das
sub
das
sub
aas
sub
aas
sub
das
sub
das
sub
jmp
outsb
add
daa
outsb
add
daa
outsb
add
daa
outsb
add
daa
outsb
add
daa
outsb
add
daa
outsb
add
daa
outsb
add
daa
outsb
add
daa
outsb
add
daa
outsb
add
into
insl
add
into
insl
add
into
insl
add
into
insl
add
into
insl
add
int3
insl
add
int3
insl
add
add
xchg
int3
insl
add
int3
insl
add
int3
insl
add
int3
insl
add
int3
insl
add
int3
insl
add
int3
insl
add
int3
insl
add
int3
insl
add
int3
insl
add
int3
insl
add
int3
insl
add
int3
insl
add
int3
insl
add
int3
insl
add
int3
insl
add
int3
insl
add
int3
insl
add
int3
insl
add
int3
insl
add
int3
insl
add
int3
insl
add
int3
insl
add
and
xchg
pop
add
add
and
xchg
pop
xchg
and
xchg
pop
xchg
and
xchg
pop
xchg
and
xchg
pop
xchg
and
xchg
pop
xchg
and
xchg
pop
xchg
and
xchg
pop
xchg
and
xchg
pop
xchg
and
xchg
pop
xchg
and
xchg
pop
xchg
and
xchg
pop
xchg
and
xchg
pop
add
add
and
xchg
pop
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
add
add
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
outsl
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
jmp
outsb
add
and
out
and
xchg
into
insl
add
into
insl
add
into
insl
add
into
insl
add
into
insl
add
into
insl
add
into
insl
add
into
insl
add
into
insl
add
into
insl
add
into
insl
add
add
xchg
into
insl
add
int3
insl
add
int3
insl
add
int3
insl
add
int3
insl
add
int3
insl
add
int3
insl
add
int3
insl
add
int3
insl
add
int3
insl
add
int3
insl
add
int3
insl
add
int3
insl
add
int3
insl
add
int3
insl
add
int3
insl
add
int3
insl
add
int3
insl
add
int3
insl
add
and
xchg
pop
xchg
and
xchg
pop
xchg
and
xchg
pop
add
add
and
xchg
pop
xchg
and
xchg
pop
xchg
and
xchg
pop
xchg
and
xchg
pop
xchg
and
xchg
pop
xchg
and
xchg
pop
xchg
and
xchg
pop
xchg
and
xchg
pop
xchg
and
xchg
pop
xchg
and
xchg
pop
xchg
and
xchg
pop
xchg
and
outsb
in
add
add
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
add
add
and
outsb
in
xchg
and
outsb
add
sub
ljmp
outsb
add
sub
out
sub
out
sub
ljmp
outsb
add
sub
out
sub
out
sub
mov
sub
scas
sub
scas
sub
mov
sub
scas
sub
scas
sub
jg
outsb
add
sub
outsl
sub
add
add
outsb
add
sub
jg
outsb
add
sub
outsl
sub
aas
sub
aas
sub
das
sub
das
sub
aas
sub
xchg
mov
insl
add
mov
insl
add
mov
insl
add
mov
insl
add
mov
insl
add
mov
insl
add
mov
insl
add
mov
add
mov
insl
add
mov
insl
add
mov
insl
add
mov
insl
add
mov
insl
add
mov
insl
add
mov
insl
add
and
xchg
pop
xchg
and
xchg
pop
xchg
and
xchg
pop
xchg
and
xchg
pop
xchg
and
xchg
pop
add
add
and
xchg
pop
xchg
and
xchg
pop
xchg
and
xchg
pop
xchg
and
xchg
pop
xchg
and
xchg
pop
xchg
and
xchg
pop
xchg
and
xchg
pop
xchg
and
xchg
pop
xchg
and
xchg
pop
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
add
add
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
add
add
and
outsb
add
and
outsb
add
and
outsb
add
and
outsb
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
jg
outsb
add
and
add
and
add
and
add
and
add
and
add
mov
insl
add
mov
insl
add
mov
insl
add
mov
insl
add
mov
insl
add
mov
insl
add
mov
insl
add
mov
insl
add
mov
insl
add
mov
add
mov
insl
add
mov
insl
add
mov
insl
add
mov
insl
add
mov
insl
add
and
xchg
pop
xchg
and
xchg
pop
xchg
and
xchg
pop
xchg
and
xchg
pop
xchg
and
xchg
pop
xchg
and
xchg
pop
xchg
and
xchg
pop
add
add
and
xchg
pop
xchg
and
xchg
pop
xchg
and
xchg
pop
xchg
and
xchg
pop
xchg
and
xchg
pop
xchg
and
xchg
pop
xchg
and
xchg
pop
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
add
add
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
add
sub
outsl
sub
add
add
outsb
add
sub
outsl
sub
outsl
sub
aas
sub
aas
sub
das
sub
das
sub
aas
sub
aas
sub
das
sub
das
sub
ljmp
outsb
add
sub
out
sub
out
sub
ljmp
outsb
add
sub
out
sub
out
sub
mov
sub
scas
sub
scas
sub
mov
add
mov
sub
xchg
mov
insl
add
mov
insl
add
mov
insl
add
mov
insl
add
mov
insl
add
mov
insl
add
mov
insl
add
mov
insl
add
mov
insl
add
mov
insl
add
mov
insl
add
mov
add
mov
insl
add
mov
insl
add
mov
insl
add
and
xchg
pop
xchg
and
xchg
pop
xchg
and
xchg
pop
xchg
and
xchg
pop
xchg
and
xchg
pop
xchg
and
xchg
pop
xchg
and
xchg
pop
xchg
and
xchg
pop
xchg
and
xchg
pop
add
add
and
xchg
pop
xchg
and
xchg
pop
xchg
and
xchg
pop
xchg
and
xchg
pop
xchg
and
xchg
pop
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
add
add
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
add
and
outsb
add
and
outsb
add
and
outsb
add
add
jg
outsb
add
and
outsb
add
and
outsb
add
and
outsb
add
and
outsb
add
and
outsb
add
and
outsb
add
and
outsb
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
mov
insl
add
add
xchg
mov
insl
add
mov
insl
add
mov
insl
add
mov
insl
add
mov
insl
add
mov
insl
add
mov
insl
add
mov
insl
add
mov
insl
add
mov
insl
add
mov
insl
add
mov
insl
add
mov
add
mov
insl
add
and
xchg
pop
xchg
and
xchg
pop
xchg
and
xchg
pop
xchg
and
xchg
pop
xchg
and
xchg
pop
xchg
and
xchg
pop
xchg
and
xchg
pop
xchg
and
xchg
pop
xchg
and
xchg
pop
xchg
and
xchg
pop
xchg
and
xchg
pop
add
add
and
xchg
pop
xchg
and
xchg
pop
xchg
and
xchg
pop
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
add
add
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
add
and
jmp
outsb
add
and
out
and
mov
and
scas
and
scas
and
mov
and
add
add
and
jg
outsb
add
sub
outsl
sub
outsl
sub
jg
outsb
add
sub
outsl
sub
outsl
sub
aas
sub
aas
sub
das
sub
das
sub
aas
sub
aas
sub
das
sub
das
sub
ljmp
outsb
add
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
add
add
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
and
add
and
xchg
pop
xchg
and
xchg
pop
xchg
and
xchg
pop
xchg
and
xchg
pop
xchg
and
xchg
pop
xchg
and
xchg
pop
xchg
and
xchg
pop
xchg
and
xchg
pop
xchg
and
xchg
pop
xchg
and
xchg
pop
xchg
and
xchg
pop
xchg
and
xchg
pop
add
add
and
xchg
pop
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
add
add
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
add
outsb
add
outsb
add
outsb
add
and
outsb
add
and
outsb
add
and
outsb
add
and
outsb
add
and
outsb
add
and
add
and
outsb
add
and
outsb
add
and
outsb
add
and
outsb
add
and
outsb
add
and
outsb
add
and
outsb
add
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
add
add
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
and
xchg
pop
xchg
and
xchg
pop
xchg
and
add
and
xchg
pop
xchg
and
xchg
pop
xchg
and
xchg
pop
xchg
and
xchg
pop
xchg
and
xchg
pop
xchg
and
xchg
pop
xchg
and
xchg
pop
xchg
and
xchg
pop
xchg
and
xchg
pop
xchg
and
xchg
pop
xchg
and
xchg
pop
xchg
and
xchg
pop
add
add
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
add
add
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
add
and
outsl
and
aas
and
aas
and
das
and
das
and
aas
and
aas
and
das
and
das
and
jmp
outsb
add
and
out
and
out
and
jmp
outsb
add
and
out
and
out
and
add
add
and
scas
and
scas
and
mov
and
scas
and
scas
and
jg
outsb
add
sub
outsl
sub
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
add
add
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
and
xchg
pop
xchg
and
xchg
pop
xchg
and
xchg
pop
xchg
and
xchg
pop
xchg
and
add
and
xchg
pop
xchg
and
xchg
pop
xchg
and
xchg
pop
xchg
and
xchg
pop
xchg
and
xchg
pop
xchg
and
xchg
pop
xchg
and
xchg
pop
xchg
and
xchg
pop
xchg
and
xchg
pop
xchg
and
xchg
pop
xchg
and
outsb
in
xchg
and
outsb
in
add
add
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
xchg
and
outsb
in
add
add
and
outsb
add
outsb
add
outsb
add
outsb
add
outsb
add
outsb
add
outsb
add
outsb
add
outsb
add
outsb
add
outsb
add
outsb
add
outsb
add
outsb
add
cmpsb
or
decl
jbe
cmp
outsl
int3
adc
push
out
pop
add
popa
test
stos
sbb
add
add
repz
clc
xor
push
dec
das
jbe
mov
imul
loopne
and
xchg
fsts
pusha
xor
dec
out
stos
jmp
subb
sub
pop
enter
leave
pop
mov
fadd
add
xchg
mov
inc
adc
lods
pop
xor
mov
fiadds
sub
sub
cmp
arpl
add
cmp
mov
jns
enter
and
cltd
insl
in
sub
adc
cmc
fsubl
mov
push
test
popf
add
mov
lcall
adc
lea
call
shl
test
mov
lret
lret
ret
jnp
mov
es
inc
fisubl
imul
add
add
aas
push
test
lret
adc
jmp
fwait
fwait
push
or
sub
mov
clc
jp
lods
cmc
aas
cli
xchg
test
mov
insb
mov
mov
mov
or
ret
pop
aam
mov
mov
popf
push
int3
cli
push
scas
jns
jne
lods
jno
nop
stc
cmc
popa
rolb
add
add
xchg
mov
xlat
adc
call
add
jne
popf
xchg
test
out
mov
lahf
jns
cwtl
and
shlb
add
pop
inc
push
mov
ds
xchg
std
lods
push
mov
mov
ja
adc
mov
push
stos
cmp
xchg
in
aaa
pop
mov
in
add
jnp
inc
push
add
add
add
in
add
repz
adc
imul
ds
add
movb
jmp
cltd
call
mov
pushf
stos
leave
adc
push
inc
insb
fnstenv
dec
popa
push
xchg
insl
and
inc
fsubp
cmpsl
sarl
and
sti
or
stos
lcall
lods
cmp
sbb
stos
lcall
add
push
stos
pushl
sbb
cmp
inc
mov
outsl
inc
push
out
cmp
insb
out
scas
cmc
daa
mov
stos
lcall
lods
xor
sbb
test
ret
loopne
jmp
fimuls
cmp
or
dec
insl
inc
sahf
sahf
xor
sbb
inc
insl
push
add
add
jmp
fidivs
insl
dec
mov
addl
mov
outsl
lea
cmc
inc
out
mov
gs
mov
insl
inc
sahf
sahf
xor
cmp
push
test
in
dec
jno
in
inc
outsb
add
push
adc
cltd
cmc
inc
jle
rorl
sahf
cmp
or
xchg
cmc
push
sub
or
and
dec
data16
add
loop
out
cli
push
scas
xor
lods
enter
enter
enter
enter
xchg
sub
mov
hlt
xchg
sub
shrb
int
shr
insb
sub
cs
loop
push
fnstcw
ret
and
insl
outsb
xchg
ljmp
lret
add
cmp
sub
add
push
and
xor
xchg
and
cmc
push
mov
mov
mov
xor
sbb
in
push
or
cmp
sub
and
jb
add
add
jbe
loope
mov
bound
enter
enter
movsl
xchg
push
xor
sahf
cs
loope
cmp
fidivs
add
add
popa
mov
enter
enter
pop
and
dec
sbb
pop
inc
xchg
lock
enter
enter
enter
enter
xchg
adc
in
and
insl
sti
or
inc
xchg
pushf
xor
out
jge
inc
xchg
sahf
xor
out
sti
inc
xchg
in
rorb
pop
push
sbb
call
add
clc
mov
arpl
mov
and
xor
adc
xchg
cmc
dec
fimull
adc
xor
push
sahf
es
xchg
fldt
and
mov
rclb
and
xchg
jle
out
push
scas
jae
lods
enter
enter
enter
enter
mov
repnz
ja
add
add
repnz
enter
enter
enter
enter
xchg
ss
inc
mov
mov
sbb
xchg
or
jnp
push
loop
xor
xchg
mov
shlb
ja
push
xchg
in
lds
sti
mov
inc
cltd
std
inc
or
xchg
jns
stos
out
incb
add
lcall
inc
jp
cmp
mov
orl
pop
pushf
xor
pushf
and
or
xor
and
xchg
ss
dec
push
sahf
jb
sub
pushf
xor
sbb
mov
inc
pushf
lcall
sahf
xor
sbb
mov
add
add
ljmp
xchg
sahf
cmp
adc
test
cmc
push
sahf
and
hlt
psubw
jl
and
outsb
add
and
lea
lcall
add
jmp
in
cmp
sbb
roll
pop
lea
cmc
inc
negb
pop
lea
add
dec
adcl
inc
xchg
imul
ret
pop
lea
xchg
and
push
adc
sbb
push
test
cmp
fisttpl
cmc
push
mov
cmc
inc
push
jbe
ja
outsb
add
sbb
ret
cltd
cmc
push
jnp
mov
leave
cmc
hlt
dec
inc
hlt
xchg
mov
mov
pop
sbb
push
lret
cltd
cmc
push
or
sbb
mov
mov
stc
mov
test
push
ret
push
cltd
in
les
loopne
xchg
sub
dec
stos
jns
dec
test
movb
mov
cltd
cltd
xchg
pop
push
pop
mov
xchg
push
hlt
xchg
in
sti
mov
inc
add
add
mov
xchg
mov
dec
stc
dec
in
rorb
pop
push
sbb
jecxz
push
and
mov
loop
mov
movsl
sahf
push
xor
and
ds
xchg
sahf
push
add
xchg
ljmp
arpl
iret
or
pop
mov
sbb
add
les
jns
fs
cmp
sbb
sbb
dec
jle
and
pop
repnz
add
or
les
mov
jne
mov
jns
into
sub
push
push
mov
gs
in
sub
dec
lahf
pop
lea
cmc
inc
out
dec
xor
imul
les
add
in
and
loope
push
mov
enter
enter
pop
sbb
jno
fistpl
cmc
inc
xchg
call
mov
enter
xchg
mov
pop
es
add
loope
shrl
push
mov
pop
cmp
icebp
lea
into
xor
push
ss
xor
add
add
and
xchg
sahf
jnp
test
sbb
or
loope
outsb
push
std
insl
xor
and
outsb
outsb
xchg
mov
hlt
psraw
inc
inc
cmc
hlt
dec
mov
hlt
push
mov
xchg
test
sbb
add
jle
fistl
xor
or
hlt
outsl
cmp
add
add
xor
rcrl
pop
add
dec
cmc
push
cs
sub
or
dec
sti
inc
cmpsb
mov
dec
notb
xrelease
push
negb
flds
cmc
hlt
inc
out
popf
cmp
lock
push
subl
mov
sbb
dec
mov
fcoms
loopne
jge
clc
mov
add
and
insl
push
jle
test
popa
movsl
mov
pavgw
inc
xchg
and
lcall
imul
add
adc
std
insl
xor
and
hlt
inc
negb
hlt
xor
jl
outsb
push
std
insl
xor
and
adc
bnd
ljmp
adc
and
sub
add
jecxz
push
cld
and
mov
dec
jb
cmp
sbb
insl
insl
inc
mov
fimull
roll
pop
inc
xchg
notb
xchg
cmc
push
movsb
les
mov
inc
negb
into
add
and
add
pushf
and
aaa
jno
inc
xchg
cmp
xor
pushf
jnp
xchg
insl
push
or
and
push
in
push
mov
adc
test
adc
xor
xor
dec
lock
add
cmp
shlb
sbb
fisubl
pop
inc
xchg
repz
xor
xchg
rolb
add
jns
insl
push
cs
test
sbb
push
and
lea
xchg
hlt
xchg
adc
rcrb
arpl
test
loope
fwait
jno
inc
xchg
and
sub
lcall
mov
mov
pop
inc
xchg
and
sub
loope
mov
lea
outsb
sti
outsl
popl
add
xchg
xrelease
jge
clc
push
xchg
add
cmp
stos
add
pop
mov
fistpl
lods
enter
enter
push
push
xor
xchg
sub
cmc
xor
out
pop
aad
mov
push
cs
jb
xchg
les
in
cmp
lea
add
push
mov
dec
sahf
adc
and
cmc
loope
push
lcall
outsb
add
insb
xor
into
and
addl
xchg
and
outsb
add
mov
or
xor
insl
incb
add
test
ret
fwait
jns
inc
xchg
and
add
jns
inc
xchg
outsb
add
test
call
and
mov
stos
push
xor
and
subb
and
outsb
sti
mov
enter
and
xor
repnz
stos
xchg
pop
inc
xchg
mov
in
xchg
out
rorl
jnp
jns
insl
insb
sub
add
sbb
cld
add
add
sub
jb
xchg
or
cmc
adc
push
xor
in
cld
roll
jb
pop
and
xor
jbe
pop
and
mov
adc
jne
dec
xchg
xchg
sarl
mov
mov
jne
outsb
xchg
les
fisubl
mov
add
add
jne
dec
ss
and
insl
fdivrs
mov
scas
cmp
addr16
fdivr
or
mov
push
and
xor
les
pop
and
hlt
or
push
xor
lcall
sbb
popa
insl
push
mov
jmp
testl
xor
shlb
call
add
and
test
dec
scas
xor
jge
jge
jle
jnp
sub
cmc
adc
es
xor
scas
cmp
pop
fs
pop
xchg
and
xor
les
push
and
jbe
add
lea
pop
inc
add
add
pop
pop
inc
xchg
ss
jnp
pop
inc
xchg
lea
mov
xor
lea
xor
les
cmc
and
xor
jns
inc
xchg
and
pop
inc
xchg
scas
xor
xchg
hlt
stc
and
xor
fs
xchg
and
outsb
add
and
add
and
outsb
add
and
outsb
add
and
outsb
add
and
outsb
add
and
outsb
add
and
outsb
add
and
outsb
add
and
outsb
add
and
outsb
add
and
outsb
add
and
outsb
add
and
outsb
add
add
xchg
and
outsb
add
and
outsb
add
and
outsb
add
and
outsb
add
and
outsb
add
and
outsb
add
and
outsb
add
and
outsb
add
and
outsb
add
and
outsb
add
and
outsb
add
and
outsb
add
and
add
and
outsb
add
and
outsb
add
and
outsb
add
and
outsb
add
and
outsb
add
and
outsb
add
and
outsb
add
and
outsb
add
and
outsb
add
and
outsb
add
and
outsb
add
and
outsb
add
add
xchg
and
outsb
add
and
outsb
add
and
add
add
add
add
add
pop
add
add
push
add
add
add
add
pop
add
add
push
add
add
add
add
add
dec
pop
add
add
add
add
pop
add
add
push
add
add
add
add
add
add
add
add
push
add
add
push
add
add
push
add
add
push
add
add
add
add
add
add
push
add
add
push
add
add
push
add
add
push
add
add
add
add
add
add
push
add
add
push
add
add
push
add
add
pop
add
add
pop
add
add
push
add
add
push
add
add
add
movsb
pop
add
add
pop
add
add
pop
add
add
pop
add
add
pop
add
add
add
add
add
add
add
pop
add
add
pop
add
add
pop
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
je
jb
arpl
fs
jae
add
hlt
add
fs
imul
add
push
add
imul
insb
insb
outsl
arpl
add
inc
insb
outsl
jae
dec
popa
outsb
fs
add
inc
outsl
insl
jo
jb
push
je
imul
add
insb
gs
imul
jae
gs
push
imul
inc
imul
add
inc
imul
je
imul
inc
outsl
jb
popa
je
gs
popa
addr16
add
dec
add
gs
imul
ja
inc
gs
outsl
insl
jo
je
jb
popa
insl
gs
js
add
js
inc
gs
outsl
insl
jo
je
jb
popa
insl
gs
add
xchg
add
je
outsl
outsb
jae
insb
gs
outsl
fs
fwait
add
je
outsl
outsb
jae
insb
gs
arpl
outsb
inc
jne
data16
outsb
outsw
add
test
inc
jne
jb
outsb
je
jb
arpl
jae
stos
add
je
jne
jb
outsb
je
jb
arpl
jae
add
inc
jne
jb
outsb
je
push
dec
add
mov
inc
jb
jbe
push
jns
gs
add
add
je
popa
jae
inc
jb
outsl
jb
add
add
je
outsl
imul
jbe
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
cmp
inc
gs
je
dec
popa
outsb
fs
add
inc
add
je
jns
je
insl
inc
imul
jns
add
inc
gs
jns
je
insl
push
imul
insb
gs
imul
gs
imul
je
add
inc
gs
imul
popa
je
add
jns
inc
gs
outsl
insb
jne
gs
outsb
outsw
jb
popa
je
outsl
outsb
push
add
add
popa
insb
inc
jb
add
add
insb
je
inc
jns
gs
outsl
push
imul
xor
dec
jo
outsb
push
jb
arpl
jae
push
add
gs
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
add
popa
fs
outsl
outsb
jae
insb
gs
add
push
fs
imul
gs
outsl
outsb
jae
insb
gs
jne
jae
jb
outsl
jae
je
outsl
outsb
add
mov
push
gs
outsl
outsb
jae
insb
gs
outsl
fs
in
add
je
popa
jae
inc
jb
outsl
jb
add
push
outsb
push
gs
js
gs
imul
gs
sub
insl
imul
outsl
arpl
jae
add
add
outsb
push
gs
js
gs
imul
gs
add
push
gs
gs
outsl
outsb
imul
imul
add
gs
data16
gs
imul
push
add
push
add
imul
jb
add
imul
jne
jb
add
jp
push
imul
outsl
dec
jne
je
inc
jns
add
gs
outsl
outsb
jae
insb
gs
add
jb
popa
je
add
stos
add
jae
jb
insl
jo
add
lods
add
jae
jb
insl
jo
push
add
jb
jo
push
add
mov
insb
jae
jb
jo
outsb
push
add
jb
outsb
push
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
add
fs
arpl
inc
add
inc
popa
insb
insb
push
imul
outsl
arpl
sub
jb
gs
inc
add
add
popa
jb
jb
jbe
add
inc
push
insb
addr16
jne
je
outsb
add
aas
add
arpl
popa
imul
outsb
add
test
inc
imul
dec
gs
popa
addr16
add
roll
inc
outsb
popa
bound
imul
sbb
inc
gs
inc
add
add
je
insb
addr16
je
insl
add
and
inc
gs
insb
addr16
je
insl
push
gs
inc
add
inc
gs
popa
jb
outsb
je
outsl
add
je
jns
je
insl
dec
gs
imul
inc
gs
imul
outsb
addr16
add
mov
inc
gs
imul
arpl
add
inc
insb
addr16
jne
je
outsb
inc
push
add
jecxz
dec
outsl
popa
fs
je
imul
dec
gs
popa
addr16
gs
clc
add
jae
popa
addr16
outsl
js
add
add
addr16
popa
imul
je
jo
gs
bound
arpl
sbb
push
gs
jae
addr16
add
push
add
jae
dec
gs
popa
addr16
add
dec
add
insb
gs
jae
inc
inc
add
push
outsb
fs
insb
addr16
je
insl
dec
gs
popa
addr16
add
push
outsb
fs
gs
popa
addr16
add
jbe
push
gs
insb
addr16
je
insl
push
gs
inc
add
push
gs
outsl
arpl
add
movsb
add
je
imul
outsb
addr16
add
mov
ja
imul
pop
add
jo
imul
push
inc
push
xor
cs
insb
add
hlt
add
je
je
arpl
bound
arpl
cmp
inc
jb
popa
je
inc
outsl
outsb
je
outsb
imul
rolb
inc
gs
gs
dec
bound
arpl
mov
inc
gs
gs
arpl
popa
jo
add
add
je
bound
arpl
add
dec
xor
cs
insb
add
add
and
aaa
sub
divb
sub
into
aaa
cli
adc
push
dec
and
push
xor
adc
leave
adc
xor
in
xor
adc
xor
mov
std
adc
lahf
adc
xor
sbb
jmp
and
cmp
add
sbb
cmp
push
into
aas
repz
pushf
aas
add
add
sbb
cmp
sbb
cmp
sbb
cmp
sbb
cmp
fstpt
push
sbb
cmp
outsl
cmp
sbb
cmp
sbb
call
sbb
cmp
sbb
cmp
pop
inc
cmp
pop
push
cmp
cmp
dec
pop
xor
je
adc
add
add
fdivrs
adc
lods
cmp
pop
cwtl
cmp
sbb
cmp
aaa
cmp
sbb
cmp
sbb
cmp
sbb
cmp
sbb
xchg
and
outsb
add
and
outsb
add
and
outsb
add
and
outsb
add
and
outsb
add
and
outsb
add
and
outsb
add
and
add
and
outsb
add
and
outsb
add
and
outsb
add
and
outsb
add
and
outsb
add
and
outsb
add
and
outsb
add
and
outsb
add
and
outsb
add
and
outsb
add
and
outsb
add
and
outsb
add
add
xchg
and
outsb
add
and
outsb
add
and
outsb
add
and
outsb
add
and
outsb
add
and
outsb
add
and
outsb
add
and
outsb
add
and
outsb
add
and
outsb
add
and
outsb
add
and
outsb
add
and
add
and
outsb
add
and
outsb
add
and
outsb
add
and
outsb
add
and
outsb
add
and
outsb
add
and
outsb
add
and
outsb
add
and
outsb
add
and
outsb
add
and
outsb
add
and
outsb
add
add
xchg
and
outsb
add
and
outsb
add
and
outsb
add
and
outsb
add
and
outsb
add
and
outsb
add
and
outsb
add
and
outsb
add
and
outsb
add
and
outsb
add
and
outsb
add
and
outsb
add
and
add
and
outsb
add
and
outsb
add
and
outsb
add
and
outsb
add
and
outsb
add
and
outsb
add
and
outsb
add
and
outsb
add
and
outsb
add
and
outsb
add
and
outsb
add
and
outsb
add
add
xchg
and
outsb
add
and
outsb
add
and
outsb
add
and
outsb
add
and
outsb
add
and
outsb
add
and
outsb
add
and
outsb
add
and
outsb
add
and
outsb
add
and
outsb
add
and
outsb
add
and
add
and
outsb
add
and
outsb
add
and
outsb
add
and
outsb
add
and
outsb
add
and
outsb
add
and
outsb
add
and
outsb
add
and
outsb
add
and
outsb
add
and
outsb
add
and
outsb
add
add
xchg
and
outsb
add
and
outsb
add
and
outsb
.byte
add
or
add
add
pusha
add
addb
add
js
add
lock
addb
add
cmp
add
nop
add
orb
add
test
add
enter
adc
add
lock
sbbb
add
or
add
add
add
cmc
add
add
add
addb
or
add
add
addb
add
push
add
addb
add
push
add
add
add
add
add
add
add
add
add
orb
add
loopne
add
clc
add
orb
add
adc
add
sub
add
inc
add
orb
add
add
add
rolb
xorb
addb
add
add
add
add
add
add
add
add
add
add
addb
or
add
add
call
add
add
add
orb
add
sbb
orb
add
xor
orb
add
dec
add
orb
add
pusha
add
orb
add
add
nop
add
orb
add
test
add
add
add
rolb
add
add
add
or
add
orb
add
lock
addb
add
or
add
or
add
and
add
cmp
add
add
add
push
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
sbb
add
add
add
sbb
add
add
add
sbb
add
push
add
sbb
add
push
add
sbb
add
push
add
sbb
add
push
add
sbb
add
add
sbb
add
add
sbb
add
add
sbb
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
sbb
add
push
add
sbb
add
push
add
sbb
add
push
add
sbb
add
pop
add
sbb
add
pop
add
sbb
add
pop
add
sbb
add
pop
add
sbb
add
add
sbb
add
add
sbb
add
add
sbb
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
or
add
jns
add
add
add
add
add
add
add
add
add
add
add
and
add
mov
add
jo
add
add
mov
add
shlb
add
add
add
add
add
add
add
push
add
xor
add
add
hlt
add
add
jle
add
add
add
add
add
test
add
add
add
xchg
add
clc
add
add
add
add
add
add
mov
push
add
nop
add
add
mov
add
add
or
add
add
push
add
add
add
add
add
add
add
adc
add
add
inc
mov
add
add
add
add
add
out
add
add
add
add
add
add
add
add
add
ja
add
add
add
add
add
add
push
add
dec
add
dec
add
or
push
add
push
add
inc
add
inc
add
add
cmp
js
insb
and
jb
imul
xor
and
arpl
imul
inc
sub
je
outsb
fs
insb
outsl
outsb
gs
and
ds
and
and
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
and
and
and
cmp
jb
jae
dec
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
or
and
and
and
and
cmp
arpl
imul
and
and
and
and
and
and
gs
gs
gs
jb
jbe
insb
gs
cmp
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
ds
jb
jno
gs
gs
jb
jbe
insb
gs
or
and
and
and
and
cmp
jae
arpl
imul
and
and
and
and
je
jne
je
outsb
outsw
ds
and
and
popa
jae
gs
bound
add
add
add
add
adc
add
add
add
add
add
inc
add
add
add
add
addb
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
addb
mov
mov
mov
mov
mov
mov
mov
mov
mov
adcl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
adc
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
adc
adc
mov
mov
mov
add
or
mov
mov
mov
mov
add
mov
mov
adc
adc
mov
mov
mov
add
or
mov
mov
add
add
mov
mov
add
mov
adcl
sbb
addb
add
mov
add
add
mov
add
add
addb
add
mov
add
add
or
mov
add
mov
adcl
sbb
add
or
add
add
add
add
add
add
add
mov
add
add
add
mov
adcl
sbb
addb
add
mov
add
add
mov
add
add
addb
add
mov
add
add
or
mov
add
mov
adcl
sbb
mov
mov
add
or
mov
mov
add
add
mov
mov
add
mov
mov
adc
adc
mov
mov
mov
add
or
mov
mov
mov
mov
add
mov
mov
adc
adc
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
or
mov
mov
mov
mov
mov
mov
adcl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
je
jb
insb
add
add
add
add
sbb
adc
add
add
add
add
add
add
add
add
add
je
jb
insb
add
add
add
add
sbb
and
add
xor
add
add
add
add
and
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
and
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ds
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
lret
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
push
add
add
add
add
add
add
add
add
add
add
sub
pushl
push
add
ja
data16
popa
add
add
add
add
add
add
add
push
add
add
or
pop
add
add
add
add
outsl
add
insb
add
arpl
imul
add
je
add
je
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
or
adc
sub
or
leave
add
outsl
add
insb
add
arpl
imul
add
je
add
je
add
xor
sub
xor
add
add
add
add
add
add
add
dec
add
add
add
popa
add
add
add
jo
insb
add
jns
add
add
add
add
add
add
add
push
add
ja
data16
popa
add
add
add
add
add
add
add
push
add
add
lea
pop
add
add
add
add
outsl
add
insb
add
arpl
imul
add
je
add
je
add
adc
cmp
add
add
add
add
add
add
add
add
push
add
add
lea
adc
pop
add
add
add
outsl
add
insb
add
arpl
imul
add
je
add
je
add
xor
sub
xor
add
add
sbb
add
add
add
add
add
add
jae
arpl
je
insb
add
pop
add
add
arpl
imul
add
jb
xor
xor
or
add
add
add
add
add
add
add
add
incl
add
add
add
push
add
add
sub
xor
and
str
add
incl
add
add
add
push
add
add
dec
add
add
add
add
add
incl
add
add
add
push
add
add
insb
add
add
add
add
add
incl
add
add
add
push
add
add
mov
xor
and
lldt
add
incl
add
add
add
add
push
add
add
add
add
add
dec
add
add
add
add
or
dec
add
and
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
or
ljmp
add
add
add
add
push
add
add
movsb
add
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
nop
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
push
add
add
add
add
add
add
add
add
add
add
incl
add
add
add
add
add
add
add
add
incl
add
add
add
push
add
add
or
sbb
lods
add
add
incl
add
add
add
add
add
add
add
add
add
incl
add
add
add
push
add
add
or
add
add
jae
arpl
je
insb
add
pop
add
jb
outsl
add
jb
add
jae
xor
xor
add
add
add
add
inc
add
add
add
add
incl
add
add
add
add
add
add
add
addb
add
adc
add
add
out
fiaddl
add
add
and
add
add
add
add
add
add
add
add
add
push
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
add
add
add
add
or
xchg
add
ljmp
add
add
add
add
push
add
add
pop
add
add
add
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
xchg
add
jmp
incl
add
add
add
push
add
add
pop
add
add
add
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
dec
add
add
add
incl
add
add
add
push
add
add
pop
add
cmp
or
testb
incl
add
add
add
add
add
xor
add
add
add
add
add
add
push
add
add
dec
add
xchg
add
add
add
incl
add
add
add
push
add
add
pop
add
add
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
incl
add
add
add
push
add
add
pop
add
aam
dec
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
push
add
sbb
sbb
incl
add
add
add
push
add
add
sub
jbe
stos
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
xor
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
push
add
add
push
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
push
add
add
add
incl
add
add
add
push
add
add
lea
popf
add
push
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
addb
addb
add
add
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
adc
adc
add
adc
adc
adc
pop
adc
adc
adc
xor
adc
ja
jno
adc
adc
or
jno
adc
add
adc
jnp
add
jno
adc
mov
ja
mov
or
jno
adc
mov
adc
cmp
add
jno
adc
adc
adc
adc
pop
jno
jno
adc
mov
adc
adc
adc
aaa
pop
adc
adc
adc
adc
adc
adc
jg
adc
aas
orb
sbb
jno
pop
adc
sbbb
popl
pop
adc
add
ja
add
adc
add
pop
popl
sbb
adc
sbb
pop
js
aas
jno
jg
adc
add
add
add
add
add
add
add
add
incl
xor
add
xor
add
cmp
lret
outsl
outsl
add
cmp
imul
imul
jns
jo
add
aas
add
addb
jbe
add
jb
add
xchg
add
mov
fmuls
outsl
add
xchg
xchg
add
push
push
add
xor
add
cltd
cltd
add
gs
dec
dec
add
mov
jmp
xchg
add
dec
add
addl
popf
outsb
outsb
add
cmpsb
cmpsb
add
dec
add
addb
out
lods
lods
add
gs
test
add
jge
add
mov
add
insl
insl
add
xchg
xchg
add
push
push
add
addr16
cltd
cltd
add
cwtl
cwtl
add
fwait
fwait
add
xchg
xchg
add
mov
add
push
add
push
add
mov
js
xchg
jno
add
xchg
xchg
add
jl
add
mov
jle
xchg
jb
add
push
push
add
mov
add
int3
int3
add
stos
stos
add
dec
add
test
add
dec
add
mov
add
bound
pushf
addb
jo
pop
add
inc
add
jo
add
fs
mov
inc
add
jae
add
js
add
outsb
add
les
push
dec
dec
add
inc
add
insl
insl
add
cmp
add
push
add
inc
add
iret
iret
add
add
scas
scas
add
pop
add
insb
add
imul
aad
add
add
dec
add
fstp
add
dec
add
push
imul
jnp
add
outsl
add
pusha
add
add
jno
hlt
call
out
inc
inc
inc
add
out
out
add
int
add
add
add
stc
stc
add
add
add
add
std
std
add
cmc
cmc
add
out
out
add
jmp
add
jecxz
add
fstp
add
add
rcl
add
rcl
add
int3
int3
add
lret
leave
leave
leave
add
mov
add
ret
ret
add
mov
mov
add
mov
add
mov
add
lods
lods
add
test
add
movsl
movsl
add
lahf
lahf
add
fwait
add
xchg
xchg
add
xchg
xchg
add
lea
add
xchg
add
addb
jge
jge
jnp
jnp
js
js
jbe
jbe
jne
jne
jb
jb
jno
jno
outsb
outsb
outsb
add
add
push
imul
add
data16
add
bound
pusha
pusha
pusha
add
pop
add
add
pop
add
pop
add
push
add
add
push
add
push
add
dec
add
dec
add
dec
add
dec
add
dec
add
inc
add
inc
add
inc
add
inc
add
aas
aas
add
cmp
add
cmp
add
aaa
aaa
add
xor
add
fwait
fwait
fwait
cs
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
cs
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
cs
cs
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
cs
cs
fwait
fwait
fwait
fwait
fwait
cs
cs
fwait
fistpll
fwait
fwait
cs
cs
mov
cmpsl
mov
fistps
fwait
fists
mov
fstps
fwait
gs
imul
test
fistps
or
call
filds
mov
fwait
fwait
fwait
fwait
fwait
or
test
iret
add
mov
fwait
fwait
or
in
add
fistps
or
out
in
filds
leave
fwait
fwait
fwait
fwait
fwait
or
jne
out
fcmovnu
fistps
fwait
fwait
fwait
add
fistpl
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
lcall
fwait
fwait
inc
fwait
fwait
and
out
xchg
lock
cs
fwait
pop
shlb
fwait
sbbb
fwait
add
flds
pop
les
add
fwait
fwait
cmpb
fwait
sarb
lret
lcall
add
add
add
add
add
add
add
test
sahf
iret
addr16
add
add
int3
int3
push
idivl
popl
add
add
xchg
xchg
lcall
fs
ret
loopne
mov
leave
fs
lods
lods
ror
fs
ret
ret
scas
shll
dec
dec
dec
pusha
mov
insb
ljmp
pushl
jo
cli
ret
ret
scas
loopne
xchg
sar
iret
iret
adc
test
filds
add
add
inc
push
mov
mov
ljmp
ret
mov
add
add
add
ret
xchg
xchg
jns
jb
jb
lret
lret
aam
ja
push
push
push
fistpll
jns
stos
stos
stos
inc
mov
ljmp
mov
mov
loop
lcall
cwtl
cwtl
lahf
xor
push
push
ljmp
callw
inc
call
inc
lcall
int3
int3
ljmp
pushf
decl
dec
pusha
add
add
leave
mov
add
mov
addb
add
fs
aaa
iret
push
push
push
call
inc
incl
js
lcall
pop
pushl
mov
mov
mov
add
add
add
add
add
add
add
add
jbe
inc
scas
xchg
jns
incl
inc
pushl
jo
mov
ja
mov
push
push
push
inc
mov
incl
add
incl
add
add
add
incl
add
incl
add
add
add
add
mov
cmp
addl
lcall
jb
call
push
incl
add
incl
add
ljmp
incl
add
incl
add
add
div
decl
dec
decl
dec
inc
mov
incl
add
incl
add
call
add
add
add
xor
push
cmpsl
xchg
xchg
dec
leave
leave
cmp
cmp
dec
dec
dec
ljmp
imul
push
push
ljmp
imul
add
incl
add
jmp
arpl
test
fs
inc
xor
fistpll
cmp
incl
inc
call
push
lcall
jmp
pusha
ljmp
ljmp
das
das
and
add
incl
add
add
add
add
xor
xorb
decl
call
push
out
cmp
add
add
das
das
adc
xor
inc
xor
xor
das
das
adc
add
add
pop
add
decl
add
incl
add
shlb
shlb
add
pop
add
add
add
pop
or
add
sbb
sbbb
shl
aas
adc
sub
add
and
add
inc
add
add
add
add
addb
add
add
addb
addb
add
add
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
adc
adc
adc
adc
adc
adc
adc
xchg
adc
pop
jno
adc
adc
adc
adc
or
jno
pop
jno
adc
adc
adc
adc
xor
pushl
jno
adc
adc
adc
adc
add
jg
notl
adc
adc
adc
adc
adc
xor
push
adc
adc
adc
adc
adc
add
orb
adc
jno
adc
adc
mov
push
adc
adc
ja
adc
adc
mov
pushl
ja
adc
adc
add
mov
jno
adc
adc
adc
xor
pushl
adc
adc
aas
mov
mov
pushl
adc
adc
aas
mov
pop
ja
pushl
adc
adc
aas
mov
mov
pushl
adc
adc
aas
mov
pop
xchg
pushl
ja
ja
aas
sti
cmp
sti
sti
pop
testl
adc
adc
aas
incl
testl
adc
adc
sti
aas
incl
ja
pushl
adc
adc
adc
pop
pushl
adc
adc
adc
xor
pushl
adc
adc
adc
adc
mov
pushl
ja
adc
adc
adc
mov
orb
pop
ja
adc
adc
cmp
adc
adc
adc
adc
adc
mov
push
adc
adc
adc
adc
adc
adc
mov
push
adc
adc
adc
adc
adc
adc
mov
pushl
jno
adc
adc
adc
adc
adc
or
jno
pop
jno
adc
adc
adc
adc
adc
pop
jno
adc
adc
adc
adc
xor
adc
adc
pop
adc
adc
adc
adc
adc
adc
adc
adc
adc
cld
jg
clc
aas
lahf
push
push
jg
loopne
inc
ud0
orb
incl
paddw
add
jecxz
add
pop
rolb
incl
add
incl
add
incl
add
incl
add
add
add
incl
add
incl
add
incl
add
cld
add
pop
incb
pavgw
add
std
incl
ud0
loopne
mov
clc
aas
lahf
cld
jg
ljmp
add
add
add
add
add
add
or
incl
xor
add
xor
add
cmp
lret
outsl
outsl
add
cmp
imul
imul
jns
jo
add
aas
add
addb
jbe
add
jb
add
xchg
add
mov
fmuls
outsl
add
xchg
xchg
add
push
push
add
xor
add
cltd
cltd
add
gs
dec
dec
add
mov
jmp
xchg
add
dec
add
addl
popf
outsb
outsb
add
cmpsb
cmpsb
add
dec
add
addb
out
lods
lods
add
gs
test
add
jge
add
mov
add
insl
insl
add
xchg
xchg
add
push
push
add
addr16
cltd
cltd
add
cwtl
cwtl
add
fwait
fwait
add
xchg
xchg
add
mov
add
push
add
push
add
mov
js
xchg
jno
add
xchg
xchg
add
jl
add
mov
jle
xchg
jb
add
push
push
add
mov
add
int3
int3
add
stos
stos
add
dec
add
test
add
dec
add
mov
add
bound
pushf
addb
jo
pop
add
inc
add
jo
add
fs
mov
inc
add
jae
add
js
add
outsb
add
les
push
dec
dec
add
inc
add
insl
insl
add
cmp
add
push
add
inc
add
iret
iret
add
add
scas
scas
add
pop
add
insb
add
imul
aad
add
add
dec
add
fstp
add
dec
add
push
imul
jnp
add
outsl
add
pusha
add
add
jno
hlt
call
out
inc
inc
inc
add
out
out
add
int
add
add
add
stc
stc
add
add
add
add
std
std
add
cmc
cmc
add
out
out
add
jmp
add
jecxz
add
fstp
add
add
rcl
add
rcl
add
int3
int3
add
lret
leave
leave
leave
add
mov
add
ret
ret
add
mov
mov
add
mov
add
mov
add
lods
lods
add
test
add
movsl
movsl
add
lahf
lahf
add
fwait
add
xchg
xchg
add
xchg
xchg
add
lea
add
xchg
add
addb
jge
jge
jnp
jnp
js
js
jbe
jbe
jne
jne
jb
jb
jno
jno
outsb
outsb
outsb
add
add
push
imul
add
data16
add
bound
pusha
pusha
pusha
add
pop
add
add
pop
add
pop
add
push
add
add
push
add
push
add
dec
add
dec
add
dec
add
dec
add
dec
add
inc
add
inc
add
inc
add
inc
add
aas
aas
add
cmp
add
cmp
add
aaa
aaa
add
xor
add
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
lret
lret
lret
lret
lret
lret
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
cs
lret
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
cs
ret
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
lret
lret
lret
lret
fwait
fwait
cs
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
cs
lret
fwait
pop
and
lret
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
out
loope
fstps
lret
fwait
pop
and
lret
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fldl2t
fadd
mov
enter
rcrl
fwait
cmp
ret
fwait
fwait
fwait
fwait
fwait
fwait
fwait
ftst
mov
movsl
movsl
movsl
movsl
movsl
mov
in
fistpl
fwait
es
lret
fwait
fwait
fwait
fwait
fwait
fwait
fwait
mov
mov
cmpsl
movsl
movsl
int
ficomps
fwait
and
lret
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
call
test
stos
mov
scas
movsl
movsl
shr
fwait
fwait
cs
fwait
cs
lret
fwait
fwait
fwait
fwait
fwait
fwait
fwait
out
ror
lds
movsl
cmpsl
mov
movsl
movsl
shr
fstps
daa
lret
fwait
fwait
fwait
fwait
fwait
fwait
fwait
out
rcl
sarl
movsl
movsl
mov
movsl
stos
out
fwait
fwait
cs
fwait
daa
lret
fwait
fwait
fwait
fwait
fwait
fwait
fwait
out
int3
shl
and
imul
mov
movsl
mov
fstps
lret
fwait
fwait
fwait
fwait
fwait
fwait
fwait
in
fnstcw
xor
sub
cmpsl
mov
fwait
cs
fwait
daa
lret
fwait
fwait
fwait
fwait
fwait
fwait
mov
fucompp
dec
push
push
inc
xor
sub
scas
mov
jmp
daa
lret
fwait
fwait
fwait
fwait
insb
add
nop
fucomi
xchg
mov
movsl
movsl
cmpsl
mov
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
insb
adc
jmp
rorl
cmpsb
movsl
mov
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
pop
pop
gs
loop
sarl
out
scas
cmpsl
mov
movsl
in
fstps
fwait
fwait
fwait
or
pop
out
out
mov
aam
jbe
mov
mov
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
or
je
icebp
in
in
les
sarb
mov
movsl
in
fstps
fwait
fwait
fwait
or
xchg
xchg
shl
call
mov
ret
mov
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
or
add
loope
mov
leave
ret
mov
in
fstps
fwait
fwait
fwait
or
mov
jmp
int3
lret
shr
int
ret
lret
ficomps
fwait
fwait
fwait
fwait
fwait
adc
in
lock
jmp
jmp
int
mov
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
sbb
lock
out
xlat
ror
xlat
fstpl
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
adc
icebp
lock
call
fstp
aad
jmp
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
jmp
out
jmp
out
fstp
loope
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
add
jmp
fstps
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fstps
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
incb
incb
jmp
sbb
incl
incl
xor
cld
add
clc
add
clc
add
inc
lock
daa
lock
daa
lock
daa
lock
daa
loopne
add
addb
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
jmp
add
incl
pop
push
jg
sub
add
and
add
inc
add
add
add
add
add
or
add
adc
add
add
add
add
add
or
add
daa
add
add
add
dec
add
add
add
add
add
add
add
add
add
aad
popf
dec
movb
mov
add
add
add
add
pop
add
add
add
add
add
add
add
add
jmp
mov
nop
out
mov
mov
repnz
addr16
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
into
movsl
movsl
ja
leave
leave
jecxz
mov
push
stos
add
add
add
add
add
add
or
add
add
add
add
add
pop
add
add
add
add
lcall
popf
xor
sbbl
add
data16
add
add
inc
xlat
lods
lods
test
mov
jne
sbb
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
pop
sahf
jle
fwait
in
mov
out
mov
cmpsb
inc
jp
enter
mov
add
outsb
add
add
outsl
outsl
pop
cli
ret
ret
icebp
lret
ja
fcompl
or
add
add
sub
add
add
add
sbb
add
inc
or
or
sbb
sbb
pop
pop
pop
rcll
adc
mov
add
add
mov
enter
ljmp
or
add
push
pop
cli
ret
ret
icebp
lret
fldl
add
jbe
add
pop
add
add
add
add
add
add
add
sbb
sub
sub
arpl
decl
cmpsb
cmpsb
lcall
cmp
push
push
jmp
es
add
clc
ret
lret
ficomps
or
add
jae
push
cmc
mov
pop
mov
add
je
add
inc
add
add
add
add
add
add
and
and
scas
scas
scas
dec
int3
int3
dec
int3
int3
dec
int3
int3
dec
int3
int3
dec
int3
int3
dec
int3
int3
jmp
push
push
jmp
and
loope
add
mov
clc
ret
lret
fiadds
add
jo
add
pop
fsubrs
lahf
lcall
lea
add
add
add
add
add
add
add
and
push
push
ljmp
mov
movsl
movsl
movsl
call
cltd
cltd
jmp
mov
dec
leave
leave
dec
int3
int3
dec
int3
int3
pushl
jbe
sub
sub
add
dec
dec
mov
ret
cmpsl
pop
pop
mov
add
jo
add
inc
test
mov
jne
add
add
add
inc
add
add
add
add
sbb
cmp
xchg
decl
test
inc
mov
int3
int3
int3
inc
rol
scas
scas
scas
lcall
mov
dec
int3
int3
dec
int3
int3
call
and
in
add
sahf
mov
xchg
in
cmpsb
cmpsb
lcall
lea
add
fs
mov
lcall
popl
add
arpl
add
and
add
add
add
add
outsl
outsl
outsl
pushl
jb
xchg
movsb
pushl
mov
dec
int3
int3
dec
int3
int3
dec
leave
leave
ljmp
lods
dec
int3
int3
dec
int3
int3
ljmp
lcall
push
push
faddl
add
mov
mov
jnp
add
add
add
inc
clc
mov
mov
add
jo
add
add
add
sbb
sbb
cmp
cmp
imul
jo
jo
lcall
mov
xchg
xchg
xchg
ljmp
lret
lret
dec
int3
int3
dec
int3
int3
dec
int3
int3
ljmp
lods
dec
int3
int3
inc
ret
inc
inc
inc
decl
or
mov
pop
pop
xchg
in
cmpsb
cmpsb
decl
and
add
add
stos
stos
jae
xchg
xchg
lcall
push
push
js
add
dec
add
add
add
add
sub
sub
dec
dec
lcall
pop
pushl
ja
push
push
dec
inc
inc
jl
pop
incl
inc
inc
ljmp
imul
int3
int3
int3
dec
int3
int3
dec
int3
int3
ljmp
mov
int3
int3
int3
jmp
and
in
add
hlt
ret
ret
jmp
add
add
ds
mov
ljmp
aaa
xchg
add
add
add
push
add
add
add
add
sub
sub
pop
pop
pop
jmp
pusha
decl
inc
ljmp
addb
roll
incl
inc
inc
ret
int3
int3
int3
dec
int3
int3
dec
leave
leave
lcall
leave
leave
dec
int3
int3
incl
inc
incl
xchg
xchg
mov
test
add
add
mov
add
cmp
add
adc
add
add
add
push
add
add
adc
or
es
dec
dec
lcall
pop
incl
inc
incl
jbe
lcall
jp
ljmp
addb
pop
pop
pop
dec
lret
lret
dec
int3
int3
dec
int3
int3
mov
mov
dec
int3
int3
decl
sbb
shrb
xchg
out
cltd
incl
add
sub
add
adc
enter
addb
add
add
add
add
add
add
dec
sub
mov
push
cmp
incl
inc
lcall
pop
cmp
cmp
imul
data16
pushw
imul
popf
jns
pushl
push
push
call
lret
lret
dec
int3
int3
dec
enter
lcall
mov
es
scas
addl
add
add
add
add
sub
jae
dec
decl
pop
pop
ds
push
incl
inc
pushl
ja
jge
jge
jge
jge
ja
ja
push
push
jo
imul
lcall
mov
lret
int3
int3
int3
lcall
int3
int3
int3
cmp
cmp
add
add
add
or
cmp
mov
mov
cmp
cmp
dec
dec
dec
incl
inc
decl
fwait
fwait
lcall
incl
insb
insb
pushl
push
lahf
jp
decl
inc
pushl
mov
enter
lods
mov
int3
int3
lcall
pop
incl
add
popl
add
das
pop
sub
dec
inc
xchg
xchg
dec
popf
popf
ljmp
ss
dec
ds
test
jmp
xchg
xchg
incl
push
jae
push
inc
inc
jmp
mov
mov
movsl
movsl
ljmp
int3
int3
lcall
pop
incl
add
mov
add
add
add
pop
das
das
inc
mov
fidivl
fcmovb
ret
xor
cmp
cmp
decl
ret
ret
inc
rol
mov
mov
mov
mov
jns
insl
incl
notrack
mov
mov
popf
popf
popf
pushl
int3
int3
lcall
pop
incl
add
xchg
add
sub
add
add
xor
xchg
jmp
xlat
push
in
clc
lock
jno
xor
xor
inc
inc
inc
incl
inc
dec
iret
iret
dec
into
into
mov
mov
mov
jne
jne
push
dec
dec
decl
xchg
xchg
jmp
xchg
xchg
ljmp
enter
inc
inc
cli
add
add
add
xor
icebp
repz
in
cli
cli
cli
inc
rol
xor
xor
cmp
cmp
aas
aas
aas
call
push
mov
mov
jmp
xchg
incl
inc
jmp
data16
jle
jle
mov
xchg
incl
stos
stos
ljmp
sub
call
add
add
add
add
mov
call
in
fstp
pop
pop
pop
pushl
xor
ds
aas
aas
aas
incl
inc
js
js
jnp
jnp
imul
inc
inc
inc
call
push
jmp
pushl
jbe
jle
jle
mov
jl
mov
addb
add
add
add
add
arpl
xor
outsb
aas
aas
lock
ret
into
into
into
dec
leave
leave
jmp
cmp
xor
ds
ds
inc
incl
inc
call
jmp
pusha
jmp
jmpw
pushl
jbe
outsl
outsl
outsl
incl
xchg
xchg
incl
inc
decl
push
push
ja
add
sbb
add
add
add
add
bound
push
ljmp
mov
ljmp
jno
pushl
xor
pushl
ds
inc
decl
dec
call
push
call
push
lcall
jmp
pusha
jmp
jmpw
ljmp
push
jle
jle
gs
add
xor
add
pop
bound
xor
xor
loope
push
push
pushl
dec
jmp
repz
das
das
mov
xor
xor
cmp
cmp
inc
inc
inc
decl
dec
call
push
call
push
lcall
pop
lcall
pop
lcall
pop
jmp
jmp
ljmp
cs
or
inc
add
add
add
add
add
add
xor
cs
add
add
add
add
xor
xor
xor
lock
xor
cmp
cmp
aas
aas
aas
incl
decl
dec
decl
dec
lcall
pop
jmp
pusha
call
push
ljmp
das
das
loope
or
add
add
add
add
add
xor
adc
xor
mov
cmp
cmp
inc
inc
inc
incl
decl
dec
incl
inc
cmp
cmp
sub
sub
adc
adc
add
add
add
add
xor
xor
xor
xor
xor
xchg
das
das
mov
das
das
mov
sub
pop
sbb
sbb
add
add
incb
incb
incb
jg
cld
add
cld
add
inc
add
incl
add
incb
add
cld
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sldt
add
add
add
add
add
add
add
add
add
addb
aas
addb
aas
addb
aas
rolb
jg
add
jg
add
inc
add
push
pop
ljmp
add
add
add
add
add
add
or
incl
xor
add
xor
add
cmp
lret
outsl
outsl
add
cmp
imul
imul
jns
jo
add
aas
add
addb
jbe
add
jb
add
xchg
add
mov
fmuls
outsl
add
xchg
xchg
add
push
push
add
xor
add
cltd
cltd
add
gs
dec
dec
add
mov
jmp
xchg
add
dec
add
addl
popf
outsb
outsb
add
cmpsb
cmpsb
add
dec
add
addb
out
lods
lods
add
gs
test
add
jge
add
mov
add
insl
insl
add
xchg
xchg
add
push
push
add
addr16
cltd
cltd
add
cwtl
cwtl
add
fwait
fwait
add
xchg
xchg
add
mov
add
push
add
push
add
mov
js
xchg
jno
add
xchg
xchg
add
jl
add
mov
jle
xchg
jb
add
push
push
add
mov
add
int3
int3
add
stos
stos
add
dec
add
test
add
dec
add
mov
add
bound
pushf
addb
jo
pop
add
inc
add
jo
add
fs
mov
inc
add
jae
add
js
add
outsb
add
les
push
dec
dec
add
inc
add
insl
insl
add
cmp
add
push
add
inc
add
iret
iret
add
add
scas
scas
add
pop
add
insb
add
imul
aad
add
add
dec
add
fstp
add
dec
add
push
imul
jnp
add
outsl
add
pusha
add
add
jno
hlt
call
out
inc
inc
inc
add
out
out
add
int
add
add
add
stc
stc
add
add
add
add
std
std
add
cmc
cmc
add
out
out
add
jmp
add
jecxz
add
fstp
add
add
rcl
add
rcl
add
int3
int3
add
lret
leave
leave
leave
add
mov
add
ret
ret
add
mov
mov
add
mov
add
mov
add
lods
lods
add
test
add
movsl
movsl
add
lahf
lahf
add
fwait
add
xchg
xchg
add
xchg
xchg
add
lea
add
xchg
add
addb
jge
jge
jnp
jnp
js
js
jbe
jbe
jne
jne
jb
jb
jno
jno
outsb
outsb
outsb
add
add
push
imul
add
data16
add
bound
pusha
pusha
pusha
add
pop
add
add
pop
add
pop
add
push
add
add
push
add
push
add
dec
add
dec
add
dec
add
dec
add
dec
add
inc
add
inc
add
inc
add
inc
add
aas
aas
add
cmp
add
cmp
add
aaa
aaa
add
xor
add
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
lret
lret
lret
lret
lret
lret
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
cmp
push
and
cmp
lret
lret
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
cs
sbb
int3
lret
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
cs
and
lret
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
cs
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
lret
lret
lret
lret
lret
fwait
fwait
fwait
fwait
fwait
cs
rcrl
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
xor
xor
cs
fwait
fwait
fwait
cs
rcrl
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
cs
lret
fwait
fwait
fwait
cs
iret
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
xlat
rcr
fstp
ror
fwait
fwait
fwait
fwait
fwait
cs
iret
fwait
fwait
fwait
cs
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
xlat
jmp
icebp
icebp
out
call
fwait
cs
rcrb
push
lret
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
in
out
scas
movsl
movsl
movsl
movsl
scas
rcr
in
fstpl
sbb
fwait
fwait
fwait
cs
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fsubr
ret
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
mov
lock
fwait
fwait
cs
lret
fwait
fwait
fwait
sbb
leave
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
mov
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
icebp
jmp
fwait
fwait
sbb
lret
fwait
fwait
fwait
or
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
in
mov
mov
test
mov
jmp
fwait
fwait
cs
fwait
cs
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
icebp
mov
lods
movsl
movsl
test
cmpsl
movsl
movsl
movsl
mov
jmp
fwait
fwait
cs
fwait
fwait
fwait
cs
aad
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
ror
mov
movsl
movsl
movsl
movsl
test
movsl
movsl
mov
out
fwait
fwait
cs
lret
fwait
fwait
cs
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
out
lret
int3
rol
mov
stos
movsl
movsl
movsl
movsl
movsl
scas
mov
lock
fwait
fwait
fwait
cs
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
lret
in
fmul
sarl
stos
movsl
movsl
movsl
movsl
movsl
stos
mov
fucomp
rcrb
fwait
fwait
adc
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
call
shl
fmul
mov
movsl
movsl
movsl
movsl
movsl
scas
mov
icebp
loop
fwait
cs
lret
fwait
fwait
cs
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
out
fcomp
ror
lret
out
dec
sub
stos
movsl
movsl
movsl
movsl
movsl
mov
movsl
movsl
movsl
shr
int
cs
fwait
fwait
fwait
dec
adc
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
lret
jmp
fcmovnbe
shr
push
sub
sub
daa
and
movsl
movsl
movsl
movsl
mov
lock
fwait
fwait
pop
adc
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
lret
out
fcmovnbe
in
cmp
cmp
xor
sub
pop
fisubrs
lods
mov
call
lret
fwait
fwait
pop
push
lret
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
lret
mov
in
dec
dec
dec
dec
dec
inc
inc
cmp
outsb
int3
stos
movsl
movsl
movsl
movsl
mov
out
into
fwait
cs
ss
fwait
fwait
fwait
fwait
fwait
fwait
fwait
das
add
nop
js
test
inc
xor
in
mov
movsl
movsl
movsl
mov
movsl
movsl
scas
icebp
xlat
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
add
aas
jne
in
out
xchg
jae
inc
xor
leave
lods
stos
movsl
movsl
test
out
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
pop
and
jl
out
out
into
lret
leave
leave
int3
rcl
xchg
inc
in
lods
stos
movsl
movsl
mov
in
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
sbb
out
jmp
leave
lret
rcl
test
mov
lods
stos
movsl
mov
call
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
sbb
pop
pop
dec
push
out
jmp
jmp
mov
aam
imul
mov
lods
stos
mov
movsl
movsl
enter
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
add
inc
inc
inc
inc
icebp
in
out
out
mov
mov
mov
mov
mov
mov
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
add
inc
push
pop
fs
jmp
scas
scas
mov
mov
pop
jbe
mov
mov
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
add
insl
je
lock
out
into
test
mov
popa
icebp
ret
mov
mov
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
add
xchg
jmp
mov
leave
iret
sub
sarl
stos
int
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
add
cltd
add
in
jmp
test
iret
xchg
fmulp
mov
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
adc
sahf
mov
lock
out
jecxz
scas
mov
ror
fucomip
ror
enter
int3
mov
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
add
mov
jmp
mov
fcmovnbe
iret
int
mov
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
or
mov
icebp
icebp
out
ljmp
out
in
fstp
aad
int
rol
mov
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
or
mov
shl
icebp
out
ljmp
fstp
aad
rcl
out
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
or
stos
scas
mov
mov
icebp
icebp
out
ljmp
fstp
xlat
iret
enter
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
or
jle
cwtl
jo
push
icebp
out
ljmp
fstp
fcmovbe
iret
int
jmp
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
add
add
or
in
jmp
aad
out
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fdivp
lock
out
jmp
out
in
in
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fsubrp
lock
in
ljmp
loopne
out
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fsubrp
lock
in
jmp
in
fstps
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
incl
add
incl
add
incl
add
incb
incl
add
incb
incl
add
incb
aas
incl
add
push
pop
incl
add
cld
ud0
add
cld
pop
pop
incl
add
clc
pop
cmp
add
inc
sar
add
incl
lock
add
cld
add
jo
add
push
add
jg
add
loopne
push
sbb
add
inc
add
push
pop
add
incl
add
incl
add
incl
add
arpl
add
incl
add
arpl
add
xor
add
xor
add
adc
add
cld
add
add
movl
add
movl
add
movl
add
incl
add
add
add
incl
add
add
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
add
decb
add
incl
add
cld
add
incl
add
incb
add
incl
add
incl
add
push
aas
incl
add
incl
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
adc
add
push
add
add
add
add
add
add
add
add
add
jge
add
addb
add
add
push
add
push
add
add
add
sbb
add
or
add
add
add
add
rol
repnz
out
lods
lods
jmp
cltd
cltd
dec
jg
out
push
push
shrl
xor
xchg
add
add
add
cmp
add
sbb
add
push
test
push
hlt
ret
ret
xchg
ret
test
dec
int3
dec
int3
out
lods
lods
call
test
sub
mov
add
add
add
sub
add
add
add
add
add
add
add
add
add
add
lock
test
push
clc
mov
dec
int3
stc
mov
test
addb
add
add
add
add
add
sbb
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
or
mov
leave
mov
int3
int3
out
lods
lods
mov
sbb
scas
add
add
add
add
add
add
jae
cmp
and
mov
add
jp
add
jp
add
jo
add
pop
add
add
add
add
add
add
hlt
ret
ret
inc
std
lret
cld
mov
shlb
mulb
xor
add
add
add
add
add
add
add
add
add
add
add
add
repz
mov
out
lods
lods
jmp
xchg
xchg
mov
aas
aas
mov
push
push
xchg
add
add
add
aaa
add
add
int3
mov
leave
ret
fisttps
rolb
add
add
add
add
add
add
add
add
adc
add
and
add
add
add
add
add
add
dec
push
sahf
jle
addr16
lahf
lahf
jnp
mov
lret
mov
mov
sahf
dec
dec
int
or
xchg
add
add
add
push
add
add
add
add
cli
enter
int3
int3
fisttps
roll
add
add
adc
add
add
add
add
add
adc
add
sub
add
push
add
add
or
cwtl
adc
adc
or
or
add
add
add
add
add
xor
lods
lods
jb
lret
cmc
mov
ja
pop
das
das
lods
add
add
add
sub
add
pop
cli
enter
int3
int3
call
jns
cmp
mov
add
addb
add
add
add
add
add
add
add
add
add
sbb
lods
sub
sub
xor
xor
cmp
pop
pop
lcall
pop
cmp
xor
jmp
es
add
xchg
add
pop
add
add
out
mov
jmp
xchg
xchg
call
add
mov
add
add
add
add
add
sti
leave
leave
mov
mov
leave
push
notl
or
add
add
add
add
add
pop
add
add
sbb
sbb
inc
inc
inc
call
mov
int3
dec
int3
int3
dec
int3
int3
dec
int3
int3
mov
xchg
xchg
lcall
pop
pushl
xor
sti
push
push
push
faddl
add
jge
add
inc
scas
mov
in
cmpsb
cmpsb
lcall
add
nop
add
add
add
ret
adc
repnz
ljmp
add
add
add
add
add
add
add
daa
daa
daa
mov
mov
dec
int3
int3
dec
int3
int3
dec
int3
int3
dec
int3
int3
dec
int3
int3
dec
int3
int3
dec
int3
int3
dec
int3
int3
dec
int3
int3
jmp
pop
pop
ljmp
cs
add
push
pop
dec
dec
sub
leave
leave
shr
cmpsb
cmpsb
lcall
add
popl
add
push
add
add
lock
dec
int3
jmp
xchg
xchg
jmp
xor
add
add
add
add
add
add
add
add
sub
sub
dec
dec
dec
lcall
mov
dec
int3
int3
dec
int3
int3
dec
int3
int3
dec
int3
int3
dec
int3
int3
dec
int3
int3
dec
int3
int3
dec
int3
int3
dec
int3
int3
dec
int3
int3
dec
int3
int3
decl
xor
call
pop
pop
roll
add
xchg
add
add
dec
dec
sub
lret
lret
lock
xchg
ljmp
mov
add
addb
add
add
add
stc
mov
inc
data16
adc
or
add
add
add
add
daa
daa
daa
xchg
cmp
cmp
pushf
pushf
pushf
ljmp
mov
jmp
xchg
incl
xchg
decl
fwait
fwait
pushl
int3
int3
int3
dec
int3
int3
dec
int3
int3
dec
int3
int3
ljmp
cmp
pop
roll
add
xchg
add
add
mov
int3
int3
call
ja
cmc
sub
add
add
and
dec
lret
lock
inc
inc
int
add
test
add
xor
add
add
add
add
sbb
xor
xor
addl
call
jns
decl
movsl
movsl
mov
int3
int3
dec
int3
int3
inc
mov
test
call
stos
stos
dec
leave
leave
dec
int3
int3
dec
int3
int3
dec
int3
int3
ljmp
cmp
pop
roll
add
popl
add
inc
out
mov
pushl
add
mov
add
dec
add
add
cli
enter
int3
int3
dec
push
testl
add
push
add
add
add
add
das
das
das
iret
pop
pop
pop
call
jle
pushl
jb
xchg
xchg
xchg
ljmp
mov
mov
ret
ret
dec
int3
int3
dec
int3
int3
dec
int3
int3
dec
int3
int3
inc
cmpsb
cmpsb
cmpsb
lcall
mov
dec
int3
int3
dec
int3
int3
ljmp
xor
decl
add
jge
add
xor
enter
xchg
xchg
decl
daa
cmpsl
add
add
add
and
std
lret
out
cltd
jmp
xor
add
add
add
and
push
push
push
ss
aaa
aaa
jnp
jnp
ja
ja
insb
insb
insb
decl
lahf
lahf
jmp
scas
scas
pushl
mov
dec
int3
int3
dec
int3
int3
dec
int3
int3
dec
int3
int3
dec
int3
int3
mov
cltd
cltd
mov
int3
int3
dec
int3
int3
dec
int3
int3
decl
cs
cwtl
cwtl
push
cld
mov
mov
pusha
faddl
add
xchg
add
inc
add
add
test
mov
jecxz
add
mov
add
cmp
add
pop
add
add
sub
dec
dec
pushl
jno
arpl
incl
xchg
xchg
call
lahf
lahf
jmp
scas
scas
pushl
mov
dec
int3
int3
dec
int3
int3
dec
int3
int3
dec
int3
int3
dec
int3
int3
mov
pushf
pushf
mov
int3
int3
dec
int3
int3
dec
int3
int3
lcall
pop
lcall
push
push
faddl
add
mov
add
ds
fisttps
mov
add
add
test
int3
faddl
adc
add
add
add
adc
add
pop
xor
xor
pop
pop
pop
jmp
ljmp
imul
addb
xchg
xchg
xchg
jge
jge
push
push
push
push
push
jmp
jle
jle
lods
lods
lods
inc
ret
ret
dec
int3
int3
dec
int3
int3
dec
int3
int3
dec
int3
int3
dec
int3
int3
mov
pushf
pushf
inc
ret
int3
int3
int3
dec
int3
int3
mov
xor
decl
or
mov
add
shll
cmc
mov
dec
movl
add
sub
add
add
mov
jmp
xor
add
add
add
sbb
and
and
ss
arpl
pop
pop
pop
pushl
jno
jbe
jbe
jnp
jnp
dec
dec
dec
incl
cmp
lcall
fs
push
pushl
xor
js
js
ret
ret
ret
dec
int3
int3
dec
int3
int3
dec
int3
int3
dec
int3
int3
dec
int3
int3
ljmp
mov
int3
dec
int3
int3
dec
int3
int3
ljmp
jmp
and
in
add
mov
add
xor
outsl
outsl
in
add
add
add
or
ret
ret
xchg
mov
dec
xlat
add
add
sub
sub
ds
pop
lcall
jmp
ljmp
outsb
aas
aas
aas
ljmp
push
mov
test
inc
test
mov
inc
inc
decl
dec
mov
int3
int3
dec
int3
int3
dec
int3
int3
dec
int3
int3
dec
int3
int3
lcall
mov
dec
int3
int3
dec
int3
int3
mov
xor
sti
add
add
push
ljmp
aas
and
lcall
add
test
int3
inc
insl
insl
lock
add
add
add
add
add
add
add
add
add
sub
sub
push
push
push
lcall
pop
jmp
decw
dec
decl
inc
ljmp
jge
ljmp
jge
pushl
addl
mov
dec
dec
call
push
inc
ret
ret
dec
int3
int3
dec
int3
int3
dec
int3
int3
dec
int3
int3
mov
fwait
fwait
dec
int3
int3
dec
int3
int3
dec
int3
int3
lcall
pop
lcall
sbb
into
add
add
mov
lods
pushl
cmp
add
add
add
add
dec
int3
flds
add
add
add
add
add
add
add
add
add
add
add
add
es
inc
decl
lcall
pop
lcall
pop
pushl
ss
js
lcall
js
popf
js
jmp
jp
ljmp
addb
dec
inc
inc
js
js
ret
ret
ret
dec
int3
int3
dec
int3
int3
dec
int3
int3
dec
int3
int3
lcall
mov
int3
dec
int3
int3
call
es
insl
pop
stc
mov
push
lahf
add
add
add
add
add
add
std
lret
in
popf
jecxz
and
xor
add
or
add
add
add
add
add
adc
adc
pop
dec
daa
daa
shll
xor
dec
xor
incl
inc
decl
lcall
call
push
incl
ds
jnp
insl
pushl
imul
imul
imul
imul
outsl
outsl
call
jns
jmp
addb
cmp
cmp
mov
mov
ret
ret
ret
dec
int3
int3
dec
int3
int3
dec
int3
int3
pushl
movsl
movsl
dec
int3
int3
dec
int3
int3
mov
xor
incl
add
lcall
lds
add
add
add
add
add
add
test
add
add
add
add
add
aas
and
arpl
xor
imul
push
call
dec
incl
inc
decl
dec
lcall
pop
incl
inc
decl
dec
jmp
jmpw
jmpw
jmpw
jmpw
jmpw
ljmpw
addr16
jg
outsb
lcall
jp
ljmp
dec
dec
jle
jle
mov
ret
ret
dec
int3
int3
dec
int3
int3
inc
xchg
xchg
xchg
dec
enter
int3
int3
dec
int3
int3
incl
inc
call
adc
mov
add
add
sub
push
and
jo
dec
incl
jp
jmp
cmp
dec
dec
call
incl
inc
call
push
pushl
jne
jnp
jnp
jle
jle
jle
jle
js
js
jno
jno
push
data16
lcall
jp
decl
dec
dec
pushl
mov
dec
int3
int3
dec
int3
int3
lcall
mov
int3
dec
int3
int3
jmp
arpl
sbb
sbb
add
add
add
pop
sub
cmp
xchg
jp
lcall
test
jo
pop
cmp
cmp
inc
inc
inc
call
push
incl
inc
lcall
pop
incl
xchg
decl
addl
jnp
jnp
imul
data16
insb
lcall
jnp
xor
xor
scas
scas
scas
pushl
mov
dec
int3
int3
jmp
lods
lods
dec
int3
int3
dec
int3
int3
incl
pop
pop
aam
add
popa
add
add
bound
xor
sbbl
scas
mov
mov
jl
pushl
aaa
aaa
aas
aas
aas
decl
dec
incl
inc
lcall
pop
call
xchg
xchg
lcall
lcall
xchg
xchg
incl
jge
ljmp
imul
test
jmp
inc
inc
decl
scas
scas
pushl
mov
ljmp
test
dec
int3
int3
dec
int3
int3
incl
pop
pop
aam
add
bound
add
sbb
add
add
xor
mov
xchg
xchg
dec
cwtl
cwtl
dec
cltd
cltd
inc
xchg
xchg
pushl
xor
cmp
cmp
dec
dec
dec
incl
inc
incl
inc
lcall
lods
lods
ljmp
lods
lods
ljmp
pushf
pushf
call
addb
data16
push
lcall
incl
mov
scas
pushl
mov
lcall
int3
int3
dec
int3
int3
incl
and
flds
add
popa
add
add
xor
pushl
fwait
fwait
call
mov
stos
fidivl
dec
cmp
cmp
inc
inc
inc
decl
dec
pushl
xor
lcall
mov
mov
mov
scas
ljmp
cltd
cltd
decl
jle
ljmp
imul
addr16
decl
inc
jge
jge
lahf
lahf
lahf
jmp
scas
scas
pushl
scas
call
int3
int3
dec
int3
int3
incl
pop
pop
roll
add
pop
add
add
xor
mov
mov
fidivrs
jmp
iret
iret
incl
xor
cmp
cmp
inc
inc
inc
cmp
cmp
jne
jne
dec
lret
mov
mov
jmp
xchg
jle
jle
jno
jno
data16
xor
decl
xchg
xchg
lcall
mov
scas
lcall
xchg
xchg
inc
ret
ret
dec
int3
int3
incl
pop
pop
rolb
add
pop
add
add
xor
pushl
into
into
ljmp
push
call
int
xor
xor
xor
inc
inc
incl
inc
cmp
cmp
mov
mov
fstp
rcl
sar
ljmp
cmpsl
cmpsl
call
jle
pushl
jb
data16
cmp
xchg
call
lahf
lahf
jmp
xchg
xchg
lcall
mov
pushl
jbe
and
and
add
add
add
or
arpl
xor
mov
out
push
out
out
cld
stc
stc
lcall
pop
pushl
xor
cmp
cmp
inc
inc
inc
cmp
cmp
dec
dec
dec
inc
mov
lret
inc
ljmp
cmpsb
cmpsb
call
jle
pushl
jb
data16
call
push
incl
xchg
call
lahf
lahf
incl
pushf
pushl
mov
call
adc
stos
add
add
add
add
add
add
xor
dec
std
std
std
push
cmc
cmc
out
out
out
jmp
xor
pushl
xor
aas
aas
aas
incl
inc
pushl
aaa
aaa
decl
dec
mov
mov
ljmp
pushf
pushf
call
jle
ljmp
outsb
call
push
pushl
ss
outsb
pushl
jbe
addb
call
xchg
xchg
pushl
ja
sahf
sahf
sahf
ljmp
lods
lods
pushl
xor
incl
push
push
addl
add
add
add
add
xor
xor
inc
scas
scas
out
out
out
jmp
jmp
ljmp
fstp
push
push
push
pushl
xor
pushl
ss
inc
incl
inc
cmp
cmp
inc
inc
inc
jg
jg
lahf
lahf
lahf
call
xchg
decl
dec
pushl
ss
jmp
pushl
jb
jbe
jbe
addb
incl
jnp
lcall
mov
cmp
sub
out
add
add
add
adc
add
add
mov
fcos
fstp
call
call
rcl
jmp
xor
pushl
xor
cmp
cmp
inc
inc
inc
incl
inc
aas
aas
aas
pushl
cmp
decl
incl
inc
cmp
cmp
cmp
pop
pop
jmp
jmp
jmpw
pushl
jb
jbe
jbe
addb
incl
xchg
xchg
lcall
dec
dec
lcall
push
push
mov
add
add
arpl
xor
xor
lock
jo
call
rcl
dec
lret
lret
inc
ret
mov
insb
insb
pushl
xor
pushl
xor
cmp
cmp
inc
inc
inc
incl
inc
incl
inc
incl
inc
incl
inc
decl
dec
call
push
lcall
pop
lcall
jmp
pusha
jmp
jmp
jmpw
pushl
jb
outsl
outsl
outsl
ljmp
insl
incl
xchg
xchg
jl
jl
xor
xor
or
or
add
sbb
add
add
add
add
bound
xor
mov
mov
mov
mov
lods
lods
lods
ljmp
inc
pushl
xor
pushl
xor
cmp
cmp
inc
inc
inc
incl
inc
incl
inc
decl
dec
decl
dec
call
push
call
lcall
pop
lcall
jmp
pusha
jmp
jmp
jmpw
jmpw
pushl
jae
addb
decl
dec
jmp
and
mov
add
add
xor
bound
xor
js
push
call
cmpsl
cmpsl
lcall
jae
jo
dec
cmp
xor
pushl
xor
pushl
aaa
aaa
incl
inc
incl
inc
incl
inc
decl
dec
decl
dec
call
push
call
lcall
pop
lcall
jmp
pusha
jmp
pusha
lcall
pop
jmp
pushl
jb
jbe
jbe
pop
pop
pop
ljmp
cs
add
add
bound
xor
xor
ret
xor
xor
jmp
xor
xor
repz
cs
sub
xor
xor
xor
xor
xor
xor
ss
cmp
inc
inc
incl
inc
decl
dec
decl
dec
call
push
call
lcall
pop
call
push
lcall
pop
jmp
pusha
jmp
jmpw
lcall
pop
pushl
xor
notl
pop
pop
imul
add
add
add
add
xor
pusha
xor
inc
pop
cs
add
add
add
add
add
add
xor
xor
xor
xor
xor
xor
xor
aaa
aaa
cmp
cmp
aas
aas
aas
incl
inc
decl
dec
decl
dec
decl
dec
decl
dec
call
lcall
pop
jmp
pusha
jmp
decl
dec
pushl
xor
negl
sbb
add
add
add
add
xor
xor
xor
lock
cmp
cmp
inc
inc
incl
incl
inc
decl
call
push
call
lcall
pop
call
push
cmp
cmp
das
das
das
loopne
sbb
add
xor
xor
xor
xor
xor
cmp
cmp
inc
inc
incl
inc
incl
inc
incl
inc
pushl
aaa
aaa
pushl
xor
hlt
sub
sub
add
add
xor
xor
xor
xchg
xor
lds
xor
xor
xor
xor
xor
sub
sub
pusha
add
add
incl
add
incl
add
cld
add
incl
add
cld
add
incl
add
cld
add
incl
add
cld
add
incl
add
cld
add
incl
add
clc
add
incl
add
clc
add
incl
add
incl
add
cld
add
add
add
push
add
add
add
jmp
add
add
add
inc
add
add
add
incl
add
incl
add
add
add
incl
add
add
add
incb
add
add
add
incb
add
add
add
incb
add
add
add
cld
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
rolb
add
inc
add
addb
add
inc
add
addb
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
or
add
incl
add
incb
add
add
incl
add
incl
add
jmp
pop
incl
add
incl
add
add
add
add
adc
add
add
sub
add
add
adc
add
add
or
push
add
adc
add
add
add
add
add
and
add
add
add
call
add
and
add
add
add
add
and
add
add
add
add
xor
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
xchg
ja
jo
add
jo
add
jo
pop
add
aas
clc
pushl
cmpb
pushl
add
jo
mov
jg
jnp
pushl
aas
mov
pushl
add
jg
add
add
pushl
add
add
add
addb
js
add
mov
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
sub
add
and
add
inc
add
add
add
add
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
add
ja
ja
ja
jo
add
add
pushl
add
add
pushl
add
add
pushl
add
add
jg
pushl
add
add
jg
pushl
add
add
ja
pushl
add
add
ja
pushl
add
add
js
pushl
add
pop
xorb
jg
ja
pushl
add
ja
mov
jg
ja
clc
pushl
add
add
jnp
jg
xchg
pushl
add
xor
xchg
jo
add
cmp
add
incl
pushl
add
xor
xchg
pushl
add
add
incl
cmp
mov
add
lock
jg
pushl
add
aas
incl
incl
pushl
add
cmp
xchg
jo
add
add
pop
jg
xchg
pushl
add
add
mov
clc
pushl
add
add
jg
pushl
add
add
js
pushl
add
add
decl
jo
add
add
clc
pushl
add
add
incl
add
decl
add
decl
add
decl
add
incl
add
mov
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
cld
add
paddb
add
cld
add
aas
cld
add
jg
add
add
add
add
add
add
add
add
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
or
ja
ja
ja
ja
ja
ja
ja
ja
add
add
add
push
add
add
add
or
push
add
add
add
or
push
add
add
add
or
push
add
add
add
or
push
add
add
add
or
push
ja
push
add
add
add
or
pushl
jg
push
add
add
add
or
push
add
push
add
add
add
or
incl
pop
xchg
decl
push
add
add
add
or
push
xor
ja
mov
push
add
add
add
or
incl
xor
clc
ja
push
add
add
add
or
lock
push
add
add
add
or
add
pop
incl
push
add
add
add
or
xor
pop
incl
clc
push
add
add
add
js
aaa
mov
ja
decl
push
add
add
add
cmp
xchg
clc
ja
mov
push
add
add
add
add
clc
ja
push
add
add
xor
cmp
jo
xchg
clc
ja
push
add
add
divl
add
clc
ja
push
add
add
sti
jae
jnp
jo
cmp
ja
push
add
add
divl
xchg
push
add
add
sti
repz
sti
sti
lock
mov
push
add
add
pushl
popl
push
add
add
push
decl
lock
push
add
add
pushl
or
push
add
add
aaa
ja
decl
lock
clc
ja
push
add
add
add
cmp
clc
jg
push
add
add
add
add
sti
lock
clc
jg
mov
push
add
add
add
or
mov
xchg
decl
push
add
add
add
or
jnp
pop
incl
clc
push
add
add
add
or
aaa
mov
push
add
add
add
or
repz
incl
push
add
add
add
or
pushl
jo
clc
jg
push
add
add
add
or
push
jo
js
decl
push
add
add
add
or
pushl
pop
decl
push
add
add
add
or
push
add
clc
add
or
clc
js
add
add
add
clc
push
addb
add
add
or
clc
js
add
add
add
or
clc
push
addb
add
add
add
clc
js
add
add
add
add
clc
testl
or
clc
js
or
clc
addb
add
add
add
add
clc
add
or
mov
mov
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incb
add
add
add
cld
add
add
pop
add
clc
add
add
pop
add
lock
add
pop
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
lock
add
pop
add
clc
add
add
pop
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
adc
add
add
add
sub
add
or
and
add
add
add
call
add
xor
add
add
push
add
add
add
add
add
add
add
add
add
add
add
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
or
ja
ja
ja
ja
add
add
add
push
add
add
add
or
push
add
add
add
or
push
pop
jo
add
add
incl
push
pshufw
or
or
push
xor
add
or
incl
pop
js
testl
cltd
or
push
cmp
jo
add
nop
or
incl
mov
clc
push
pshufw
incl
cmp
jg
push
pshufw
lock
testl
add
push
mov
lock
testl
add
push
mov
mov
clc
push
pshufw
add
or
repz
lock
testl
add
pushl
mov
testl
nop
or
cmp
jg
push
pshufw
cltd
cltd
or
push
mov
pshufw
or
cmp
jg
testl
add
push
orb
add
add
incl
push
pshufw
add
or
clc
add
pshufw
add
or
clc
incl
add
or
clc
clc
ud0
add
add
clc
addb
add
clc
jg
add
or
mov
add
add
add
decl
add
add
incl
add
add
mov
mov
incl
add
incl
add
incl
add
sti
addb
stc
addb
rolb
add
add
jg
add
mov
addb
incl
add
stc
addb
rolb
add
add
jg
add
mov
addb
incl
add
incl
add
push
add
push
add
push
add
sub
add
adc
add
and
add
add
add
add
add
addb
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
ja
ja
ja
add
pushl
cwtl
push
add
jo
cwtl
incl
xor
jo
or
lock
jo
or
add
or
mov
jg
jnp
jo
cwtl
repz
mov
jo
or
xor
jg
repz
add
jo
or
incl
or
decl
decl
mov
add
add
add
ss
dec
add
add
pusha
add
add
loopne
jb
addb
add
and
pusha
add
mov
add
loopne
je
loopne
add
loopne
and
add
add
add
and
add
add
add
call
add
adc
add
add
sub
add
or
add
add
add
push
add
push
add
push
add
dec
add
dec
add
dec
add
inc
add
add
add
mov
add
add
add
or
add
or
add
add
add
add
add
add
add
loopne
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
mov
add
add
xor
cmp
xor
xor
inc
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
or
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
and
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
jo
jae
jo
add
add
add
add
xor
xor
sub
add
xor
add
add
add
add
je
add
outsb
add
insb
add
popa
add
add
add
outsl
add
outsb
add
add
arpl
add
js
add
add
add
sub
add
add
insb
add
outsl
add
jns
jb
imul
je
add
test
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
jae
outsb
add
add
arpl
xor
xor
add
js
add
add
add
sub
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
imul
outsl
add
outsl
add
je
scas
add
add
imul
outsl
add
jae
scas
add
add
add
push
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
sbb
add
add
add
xor
xor
xor
xor
xor
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
add
or
push
add
jne
outsb
add
add
arpl
or
pop
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
dec
add
add
inc
add
add
dec
add
sub
and
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ds
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
cmp
add
add
add
add
cmp
add
add
ds
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
ds
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
cmp
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
ss
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
ds
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
ds
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
cmp
ds
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ds
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ds
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ds
add
add
add
add
add
add
add
add
add
add
add
ds
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ds
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
inc
add
add
and
xor
add
add
add
add
add
add
add
add
add
add
add
add
cmp
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
xor
add
add
add
ds
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
xor
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
xor
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
outsl
add
add
add
popa
add
add
add
add
add
jae
and
jae
je
jb
imul
xor
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
sub
and
sub
add
popa
add
and
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
bound
push
add
je
dec
add
outsb
add
or
dec
add
outsb
add
jb
dec
add
outsb
add
push
add
popa
add
add
add
pop
add
add
add
add
add
add
add
add
and
add
add
cs
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ds
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
inc
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
ds
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ds
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
or
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ds
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
ds
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ds
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ds
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
dec
add
add
inc
add
add
dec
add
add
adc
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
push
add
add
add
add
add
add
add
