loopne
pop
rcrb
add
shrb
in
popa
jno
mov
jg
shrl
pop
aad
sub
shrl
pop
cmpsb
xor
lret
xchg
add
lret
jb
cmc
inc
pop
int3
cmpsb
jmp
and
push
rolb
and
int3
int
movsl
insb
jmp
les
leave
push
xor
or
xor
pop
out
movsl
hlt
std
xchg
or
jmp
sbb
mov
push
push
icebp
sub
mov
or
dec
pop
xor
mov
or
pop
int3
cmpsb
inc
pop
dec
and
sub
cs
pop
pop
int
inc
xchg
int3
mov
subl
loop
ror
xchg
fs
data16
mov
fcmovne
cmpsb
inc
mov
int
inc
fs
cmp
inc
sub
pop
pop
jmp
faddp
cmpsl
inc
pop
push
cmpsb
inc
ret
jp
leave
or
xor
xor
les
aaa
xchg
int3
cmpsl
inc
pop
cmpl
sub
or
dec
adc
das
inc
fs
adc
pop
mov
push
xchg
inc
fmul
mov
mov
add
fsubrp
mov
mov
pop
int
leave
faddp
cmpsl
inc
pop
repz
pop
xor
mov
fwait
push
xor
mov
outsl
mov
stc
ror
lds
xchg
xor
jb
jns
shrl
mov
hlt
mov
add
dec
sub
clc
imul
cmp
mov
popl
mov
cmpb
or
shlb
dec
mov
repz
jl
std
mov
or
rcr
insb
pop
int3
cmpsb
inc
fsts
lcall
dec
hlt
mov
test
inc
ret
jmp
pop
sbb
ss
inc
ret
jmp
mov
mov
inc
ret
enter
test
mov
leave
dec
pop
addr16
fdivrl
push
cs
pop
sub
inc
scas
enter
xchg
pop
add
pop
shlb
pop
int3
cmpsb
aaa
bswap
repz
fiaddl
rorb
enter
in
les
aam
mov
add
fsubrl
dec
adc
roll
cmc
push
sub
add
xor
mov
popf
push
test
jl
hlt
cs
sub
add
dec
jecxz
mov
in
inc
mov
xor
adc
sbb
in
lret
pop
int3
cmpsb
shrl
int3
cmpsb
inc
sub
jmp
mov
pop
fwait
adc
push
mov
jge
inc
pop
cmp
push
inc
out
movsb
clc
push
negl
cmpsb
test
sbb
cmpsb
inc
mov
pop
cmc
mov
roll
dec
in
xchg
inc
pop
int3
in
aad
cmpsb
roll
mov
pop
fadds
sbbl
xor
in
lret
int3
leave
push
adc
std
outsb
push
ss
cli
sub
ret
mov
mov
or
aam
inc
pop
int
or
pop
test
fs
lcall
repz
pop
xor
mov
scas
pop
fsubl
divl
inc
mov
or
cmp
cmp
inc
sub
ret
adc
xor
cmpsb
imul
dec
xchg
mov
xor
cmpsb
hlt
mov
mov
push
xchg
jb
inc
pop
leave
xor
push
roll
jnp
inc
and
jbe
int
push
mov
mov
pop
cltd
mov
mov
pop
pop
in
xchg
data16
test
shll
xor
xor
out
push
cltd
xchg
mov
aaa
shlb
sbb
mov
push
lret
push
cltd
in
mov
and
sub
fmul
sub
mov
mov
push
inc
mov
inc
ret
iret
std
mov
add
lahf
jno
cmpsb
mov
cmp
inc
pop
jl
insb
dec
shlb
sbb
mov
push
lret
cmpsb
inc
ret
inc
mov
cwtl
pop
int3
cmpsb
fwait
inc
add
inc
stos
test
filds
and
pop
dec
loop
cs
leave
pop
es
add
xor
lods
leave
icebp
cwtl
and
lret
int
hlt
pop
inc
mov
mov
inc
push
insb
fs
cmpsb
inc
xor
stos
enter
cwtl
les
push
std
mov
dec
pop
popa
loop
nop
jno
mov
pop
mov
sub
mov
dec
pop
dec
mov
pop
xor
adcl
cld
lcall
fsts
leave
pop
cmp
movb
mov
inc
stos
inc
aad
stos
das
xor
push
popa
ljmp
ja
fildl
fcoml
push
int
enter
inc
pop
jmp
cmpsb
inc
pop
leave
lds
mov
scas
pop
ret
inc
sub
shll
andps
fisubrs
int
add
add
mov
insb
xor
sub
lahf
mov
sub
sub
mov
repnz
xchg
or
push
mov
bound
imul
mov
dec
pop
popa
loop
or
sub
aas
cmp
sub
int3
cmpsb
rcrb
mov
dec
pop
cltd
sbb
xor
pop
enter
sti
push
popa
pusha
lahf
adc
out
adc
mov
inc
pop
cmp
bound
dec
push
inc
pop
int3
mov
inc
adc
sub
les
pop
stos
pop
inc
mov
inc
les
mov
dec
inc
sub
rolb
rolb
cmpsl
fiadds
dec
jecxz
and
cmpsb
inc
ret
or
leave
sbb
xor
jl
rolb
mov
push
movsb
sbb
cmc
dec
shll
enter
lret
cmpsb
inc
pop
push
scas
orb
filds
cld
mov
int3
cmpsb
inc
lahf
or
inc
cmp
jnp
pop
push
cmpsb
in
test
push
insb
cmp
cmpsb
inc
push
pop
rclb
ret
inc
add
jmp
inc
pop
in
and
in
mov
dec
adc
add
inc
es
mov
movsb
or
pop
or
dec
dec
pop
mov
mov
jo
inc
cld
xor
fidivrl
test
xor
mov
jmp
fimull
mov
out
mov
ds
mov
jb
xor
jbe,pn
add
mov
negl
lret
xchg
movsb
pop
insb
xchg
loopne
imul
jb
mov
push
mov
mov
xchg
sub
loope
and
pushl
and
adc
add
sbb
aad
push
mov
and
sti
test
loop
sbb
mov
xchg
fwait
mov
add
adc
push
mov
jge
fmulp
push
cwtl
hlt
sbb
lret
jo
lret
mov
adc
dec
cwtl
imul
jmp
aas
adc
fcomi
and
pop
arpl
push
out
sbb
cltd
test
push
lock
das
mov
sbb
mov
inc
cmp
bound
cmp
xor
dec
mov
int3
push
movsb
push
fwait
mov
fwait
add
inc
xchg
push
sub
xchg
pop
mov
pop
pop
dec
negb
cld
or
xor
add
pop
xchg
xchg
dec
int
inc
mov
mov
movsl
insl
jo
xlat
pminub
jb
sub
fidivrl
mov
pop
fisubs
mov
mov
mov
jmp
inc
jae
mov
in
or
mov
add
cmpsb
sub
inc
adc
inc
andb
and
adc
push
addr16
int3
xor
pop
xchg
mov
mov
pop
iret
sbb
mov
dec
push
inc
ss
mov
ja
popa
int3
inc
enter
add
sbb
arpl
mov
mov
das
pop
add
test
scas
cmp
int3
mov
cmp
mov
sbbb
and
imul
mov
xor
pop
pushf
int3
hlt
dec
stos
fildll
popa
sbb
jge
scas
pop
cmp
es
and
int3
or
sub
cmpsb
cmpl
loopne
add
fnstsw
jno
lds
adc
ss
fs
or
cmp
fs
pop
cmp
jmp
sbb
js
movsl
mov
pop
mov
pop
cwtl
insl
out
cmp
insb
jne
inc
add
test
cmpps
cmp
adc
push
repz
mov
cmp
jns
sar
ret
push
js
inc
sub
mov
or
dec
arpl
repz
adc
mov
repz
inc
add
hlt
push
sbb
cmp
repnz
shl
lahf
arpl
cmp
lahf
test
das
push
inc
jp
cmpsl
pop
das
mov
int
mov
out
add
fwait
or
add
xchg
dec
jl
inc
pushf
leave
je
and
adc
fs
insl
push
and
push
mul
mov
add
mov
add
pop
ljmp
jmp
xor
jne
or
dec
sbb
dec
and
mov
mov
add
and
cmpsb
add
popa
sub
inc
mov
mov
shr
outsl
mov
sbb
clc
pushf
scas
lds
inc
fcomi
lcall
xchg
pop
push
adc
pop
pop
adc
test
inc
ljmp
sub
jmp
mov
jnp
or
mov
pushf
mov
sahf
popf
iret
mov
dec
pop
ljmp
inc
xor
ds
je
pop
cmp
in
pop
ss
call
jg
lahf
int3
and
popa
movsl
shrb
clc
add
dec
and
test
pop
ljmp
pop
inc
dec
lcall
stc
and
fstl
cli
sbb
sub
sbb
jmp
mov
dec
dec
jp
lcall
mov
and
repnz
sub
in
sar
rcrb
jp
lea
mov
pop
push
inc
or
add
repz
clc
imul
js
bound
jge
popf
adc
shl
and
push
jne
into
sbb
pop
cmp
cmp
insb
mov
mov
mov
xor
ja
jne
ret
mov
pop
daa
mov
test
pop
pop
add
jmp
les
dec
into
cmp
and
test
jne
mov
adc
in
cmp
rolb
fistps
sub
xchg
mov
pop
stos
cmpsl
inc
lea
es
jne
add
push
sub
add
push
cmp
popf
lock
shll
loope
popf
jne
jmp
cmp
fisubrl
jb
sub
and
push
jge
cltd
pop
fyl2xp1
pop
cmp
mov
cwtl
add
js
stos
jne
jecxz
add
xor
cmpsl
and
lods
dec
cmp
sub
sub
bound
jmp
fucomp
cmp
cmp
pop
loopne
pop
cmp
mov
xor
and
call
gs
pop
sti
sub
and
lret
xchg
into
cmp
jno
mov
push
sub
leave
mov
xor
sub
out
daa
dec
cmp
pop
lcall
ljmp
mov
mov
nop
iret
add
sub
xor
jo
jo
outsb
fidivl
push
push
dec
rorl
rcll
and
mov
add
addr16
pushf
jne
lcall
cwtl
test
test
mov
mov
jp
pop
pop
xchg
jne
lea
cmp
sub
jne
and
pop
dec
mov
sahf
xchg
lods
mov
and
mov
cmp
and
lcall
orl
repnz
jns
xor
test
fbld
add
xchg
jecxz
mov
shll
cmp
cltd
fwait
mov
sbb
dec
adcl
rol
dec
xor
int
pop
xchg
hlt
jne
cwtl
ja
cwtl
mov
sub
movsb
sub
test
or
fdivr
in
jge
pop
pop
xor
push
xor
mov
and
add
add
cmp
popf
test
rcrl
and
bnd
cli
cmp
cmpsb
dec
mov
sub
js
pop
es
lcall
popf
aaa
add
or
jnp
std
lock
and
mov
ret
test
icebp
mov
inc
cmp
and
mov
cmpsb
xor
dec
mov
ljmp
divb
sti
or
icebp
jge
decb
jp
out
sbb
cmp
xor
add
jo
or
sub
sub
cmpsl
mov
cmc
jecxz
decb
ror
movsl
fwait
pop
push
push
js
gs
xor
jle
dec
mov
mov
std
jo
mov
mov
xchg
mov
jge
icebp
dec
mov
mov
mov
mov
mov
lret
popf
sbb
je
inc
jp
std
add
mov
mov
andl
cmp
arpl
stos
fwait
or
cmp
mov
mov
lods
xor
sti
popf
lds
push
or
jnp
std
roll
loop
sarb
sub
ret
idivb
bound
je
xor
sub
call
leave
add
or
lds
inc
mov
mov
popf
adc
jge
jg
mov
lret
sub
lcall
sub
mov
jnp
std
iret
leave
mov
mov
sub
mov
or
pop
jge
icebp
xor
fs
lods
push
cmp
mov
insb
sub
sub
popf
mov
jnp
cli
inc
shll
scas
mov
mov
jmp
add
icebp
cmp
lret
adc
aam
test
and
xor
dec
sbb
inc
add
test
in
das
mov
sub
mov
arpl
pop
lret
and
cmp
mov
push
sub
cmpb
test
popf
or
sbb
das
jnp
std
push
sub
lea
or
ret
dec
jl
icebp
dec
leave
cmp
lret
pusha
cmp
je,pn
xor
sub
add
and
jp
cltd
mov
mov
sub
push
ja
add
icebp
movsb
lret
adc
and
lock
popf
push
add
cli
imull
mov
sub
mov
ret
repz
icebp
test
mov
loope
scas
and
inc
cmpb
inc
dec
fstps
dec
jp
cli
push
sbb
mov
in
ret
mov
lret
cmc
sbb
cmp
mov
cmpsl
sub
dec
out
xor
dec
xor
xchg
jnp
cli
dec
add
ret
mov
fdivs
ret
pusha
jge
insl
lret
lret
cmp
xor
sub
orb
xor
push
lcall
cmp
jle
xchg
mov
sub
in
mov
inc
rol
sub
icebp
leave
lret
aam
push
insl
lret
aas
cmp
mov
inc
sub
subb
sbb
popf
add
das
or
jnp
std
pop
icebp
mov
mov
sub
mov
test
ret
jbe
addr16
lods
lret
enter
lret
inc
cmp
mov
sub
xor
xor
jnp
std
mov
shrb
and
or
ret
in
jge
incb
in
sub
cmp
pusha
fadds
dec
lahf
popf
jo
stos
or
sub
movsl
mov
mov
out
ret
nop
jge
icebp
outsl
lret
rcrl
cmp
xor
xor
dec
xor
or
sar
lods
jmp
sub
inc
sub
mov
add
pop
mov
jge
icebp
repnz
jle
cltd
nop
lret
mov
je
xor
lret
xchg
push
sub
xor
xor
jo
or
xor
push
mov
mov
cmc
xchg
ret
jge
icebp
inc
leave
dec
cwtl
hlt
sbb
cmp
mov
enter
testb
jo
or
jnp
std
mov
lods
sub
xchg
push
in
movsl
mov
lret
sbb
cmp
xor
sub
xorb
popf
int3
add
push
jnp
std
mov
mov
mov
sub
mov
or
mov
lret
sub
cmp
shlb
orl
jg
jle
sub
cli
lods
mov
mov
sub
mov
mov
cs
ret
mov
lret
insb
sbb
cmp
mov
ret
sub
adcb
xor
dec
je
inc
add
or
xor
jns
jbe
pop
mov
ret
jmp
jecxz
ss
cmp
cmp
je
xor
mov
mov
lea
in
jnp
cli
cmp
mov
loope
int
xchg
or
xlat
or
icebp
jae
and
adc
pop
icebp
xchg
push
fistl
dec
mov
mov
test
lock
xor
leave
pop
jge
notl
mov
cld
mov
popf
inc
xchg
and
mov
into
jns
pushf
sbb
repnz
dec
mov
cmpsb
jno
idivb
inc
lret
add
or
jp
mov
xchg
xor
inc
mov
jmp
mov
sub
or
inc
add
shrl
pop
jmp
push
test
int3
xchg
aas
dec
je
in
imul
inc
or
loop
dec
std
adc
das
fs
push
adc
push
int3
cmp
pop
mov
push
and
and
les
sub
mov
bound
int
arpl
cmpsb
pop
fwait
leave
cmp
aam
dec
mov
xor
xchg
mov
loopne
inc
pop
leave
rcrb
cmpsb
es
ret
int3
ja
fs
and
lret
fnstcw
jmp
stos
faddl
je
pop
mov
sbb
movsl
popf
xchg
cmpsl
leave
mov
lret
inc
cmc
stos
stos
stc
aaa
jbe
imul
shll
adc
sub
mov
pop
sub
and
mov
mov
pop
pop
mov
in
ss
mov
hlt
dec
int3
cmpsl
mov
xchg
sarl
or
jecxz
mov
pushf
push
orb
cmp
add
or
loope
fadds
incl
cmp
jno
sbb
dec
call
inc
dec
pop
adc
xor
inc
pop
cmpsl
pop
dec
mov
push
int3
adc
ja
xchg
fwait
pusha
xor
clc
ljmp
add
or
push
loopne
inc
push
cmpsb
adc
gs
mov
fimuls
inc
mov
add
testl
jns
ret
fldl
sarl
int3
cmpb
adc
xor
scas
inc
fidivl
or
loope
lea
stos
and
mov
dec
movb
scas
clc
pusha
sub
cmp
adc
ret
int3
ljmp
divb
ret
pop
call
jmp
iret
dec
cmp
mov
dec
sub
mov
dec
sbb
cmp
push
or
pop
scas
xchg
mov
int3
cmp
movsl
inc
jns
mov
cmpsb
adc
adc
xchg
mov
mov
sub
shlb
cvtps2pi
xor
mov
negb
inc
pushf
mov
movsb
cmp
dec
cmpsb
jne
inc
inc
lods
mov
aaa
inc
jle
adc
daa
pop
call
shl
test
add
xlat
jbe
pop
cmp
insb
add
dec
jnp
scas
lods
les
shlb
xlat
jg
int3
adc
cmp
in
mov
sub
daa
loope
sbb
lcall
mov
nop
lret
cmp
lea
sub
and
xchg
std
mov
sbb
pop
les
pop
in
inc
xchg
push
dec
mov
push
fcomps
call
test
inc
std
mov
data16
bound
mov
sbb
jl
fstpt
push
test
lret
ficomps
aaa
sbb
imul
mov
scas
dec
pop
mov
and
js
incl
daa
daa
aaa
sarb
out
mov
rcll
andl
cmpsl
xor
push
mov
sbb
inc
mov
cmp
stos
mov
xor
lea
movsb
shl
sar
lods
cmpsl
test
or
pop
mov
ljmp
ljmp
cmp
cmc
out
add
mov
in
mov
xorb
sbb
mov
pushf
pop
sub
test
test
test
sub
cmpsb
cwtl
add
loope
loope
sub
inc
jl
call
jns
aam
cmp
push
pop
add
mov
xor
mulb
pop
jns
add
cmpsb
fwait
or
fildl
int3
je
xor
shlb
add
jnp
cli
in
icebp
mov
mov
sub
mov
ret
xchg
jge
icebp
stos
lret
ljmp
insb
mov
in
sub
dec
in
popf
rolb
or
jnp
cli
mov
jl
pop
mov
mov
mov
push
jge
icebp
sbb
pusha
cwtl
test
cli
cmp
mov
ret
sub
fisttps
lcall
ret
std
xchg
mov
mov
sbb
cmpsl
scas
ret
or
les
sbb
cmp
mov
sbb
nop
popf
testb
or
fdivs
cltd
mov
or
cmc
jge
icebp
jmp
es
dec
sbb
cli
lret
jbe
mov
out
popa
xor
xorl
sbb
testl
js
mov
mov
sub
mov
jge
decb
sbb
cmp
xor
dec
subb
popf
sahf
add
or
mov
mov
sub
mov
or
sub
icebp
cltd
lret
sbb
cmp
xor
sub
jbe
clc
or
popf
pop
mov
sub
adc
lea
jge
aaa
xchg
or
lret
mov
je
xor
sub
xchg
dec
bound
mov
mov
fcmovb
mov
mov
sub
mov
or
icebp
push
popa
and
fistpll
cmp
cmp
sub
dec
pop
lcall
imul
sub
sub
mov
mov
std
cld
ret
cld
lret
lret
add
je
xor
sub
xorb
dec
inc
lcall
insl
cli
cmp
mov
mov
sub
mov
ret
cmc
jge
icebp
sub
add
lret
fdivrs
das
mov
fs
adcb
pop
dec
stc
popf
inc
add
jnp
aam
mov
ljmp
icebp
push
lret
push
sbb
cmp
mov
movsb
sub
test
xor
aaa
movsl
mov
sub
mov
or
ret
cmpb
stc
lret
dec
sbb
test
fnsave
cmpsb
sub
subb
xor
jecxz
jnp,pn
cli
xchg
and
or
or
fs
mov
cmc
fwait
sub
xchg
or
cmp
cmp
scas
sub
adc
xor
dec
rcrb
jnp
mov
imul
bnd
mov
lret
enter
lret
leave
cmp
mov
inc
sub
xorb
popf
xor
lock
push
mov
mov
sub
mov
mov
ret
fsubrl
fwait
sbb
sbb
mov
or
jnp
std
mov
xchg
sub
mov
inc
hlt
ret
jle
pushf
insl
lret
sarl
mov
outsb
sub
sbbb
xor
lcallw
dec
jp
cli
cwtl
pusha
mov
mov
sub
mov
or
ja
xchg
mov
jge
icebp
push
lret
nop
sbb
cmp
mov
in
sub
lcall
std
add
or
in
add
push
sub
imul
mov
lret
push
into
xchg
lret
add
je
xor
sub
orb
xor
dec
in
popf
or
mov
xor
mov
ja
mov
jns
loopne
push
inc
lret
mov
cmp
mov
push
sub
out
divl
popf
jo
or
mov
rorl
or
ret
sub
fwait
rcrl
cltd
mov
mov
ss
or
jnp
mov
mov
jno
aad
clc
rol
inc
lret
mov
bound
data16
fadds
cmp
std
cmpsl
mov
mov
sub
sarb
push
mov
jl
icebp
push
lret
push
sbb
cmp
xor
cmpb
dec
sbb
add
xchg
mov
mov
jns
ret
xor
icebp
pop
lret
sbb
cmp
lea
shrl
outsl
and
xor
dec
insl
lcall
add
add
mov
mov
sub
mov
jge
cmp
jge
aas
sbb
cmp
sub
jmp
xchg
xor
dec
jle
ret
or
xchg
push
mov
mov
shrb
jge
icebp
int
xor
lret
cmp
cli
je
add
xchg
xor
dec
and
push
jnp
cli
or
push
sub
mov
mov
sbb
jge
sub
or
mov
xchg
adc
test
dec
xor
nop
ret
fisubl
xor
dec
jae
out
mov
dec
jecxz
andl
out
adc
fisttpll
inc
pop
ret
or
pop
es
cwtl
scas
js
lods
fcoms
inc
les
add
jmp
pop
stos
pop
jge
or
xchg
test
mov
arpl
inc
cli
sbb
inc
pop
aam
jnp
xchg
cltd
pop
xor
dec
lcall
sub
pusha
jae
dec
aam
inc
shlb
sahf
or
mov
test
ljmp
lea
xchg
dec
clc
mov
int3
dec
mov
call
hlt
cli
sub
loope
fs
out
clc
mov
pusha
lods
subl
nop
test
sbb
pop
add
sbb
cld
or
mov
add
movsl
movsb
add
pop
and
xor
mov
lock
inc
mov
je
mov
cmpsb
adc
add
pushf
cwtl
pop
aad
sbb
in
repnz
out
xor
mov
jnp
sub
repz
les
inc
cmp
push
pop
inc
test
out
mov
cmp
pop
rorb
rorl
mov
mov
mov
loop
jle
inc
mov
int3
mov
roll
jle
stos
mov
add
stos
hlt
jbe
pop
lds
cltd
or
and
in
jle
sarb
test
popf
stc
cmpsb
mov
or
mov
data16
bound
jecxz
and
dec
mov
mov
cmpsb
mov
out
xlat
dec
jg
adc
mov
pop
lea
sbb
cmp
enter
or
arpl
lret
aaa
inc
fistpll
fildl
int3
int
cmp
mov
cmpsb
jmp
xlat
call
int
test
and
repnz
icebp
jnp
jl
dec
and
jl
fnsave
js
sbb
pop
clc
mov
mov
jno
cld
fsubrp
push
in
ljmp
aas
leave
inc
cmc
scas
mov
lock
sbb
out
in
bound
mov
pop
mov
int3
lcall
push
mov
or
test
add
inc
fdivrs
xchg
pcmpeqw
and
test
call
dec
pop
daa
ret
popa
pop
add
addr16
push
ror
into
arpl
mov
mov
xchg
lcall
push
aam
inc
dec
adc
xchg
dec
mov
loope
rcl
xor
cmpsb
lret
pop
adc
cmp
xchg
jge
dec
xchg
std
add
add
mov
jns
jge
sbb
or
jne
rolb
insb
jae
lret
lds
pop
xchg
sub
stc
outsl
js
mov
pop
inc
push
inc
xor
into
inc
mov
adc
mov
movsb
cli
loopne
push
add
mov
sub
addb
mov
mov
cld
xor
int3
lret
cmp
repz
clc
insl
mov
inc
dec
adc
int3
jecxz
incl
sub
lgs
and
mov
lds
pop
or
int3
or
or
mov
cs
inc
in
das
add
pop
mov
xor
mov
jnp
jmp
fisubrs
cmp
sub
test
dec
cmp
mov
push
fcomps
in
pop
sub
in
fidivrs
cs
int3
jle
hlt
mov
cmpsb
pause
lock
ror
push
out
dec
jae
cmpb
or
rcrl
das
mov
xlat
lods
lock
fimuls
outsl
nop
dec
mov
pop
aad
xchg
pop
loop
out
dec
push
pop
mov
dec
sbb
ret
negb
xor
xchg
jp
cmp
jnp
add
shl
mov
xor
cld
es
lret
stos
sub
adc
clc
call
push
nop
enter
add
and
lret
jg
leave
leave
dec
add
inc
andl
fdiv
mov
cld
jle
mov
icebp
fiaddl
popa
mov
push
dec
lret
add
mov
pop
cmpsb
mov
pop
addl
mov
mov
out
sub
xor
mov
pop
cld
xor
ja
lret
lock
push
inc
add
iret
jb
sbb
mov
jns
clc
imul
popa
push
mov
push
aam
jo
das
fcomps
test
out
lahf
cmpb
in
daa
fstpt
jo
je
cmp
idivl
int3
push
cmp
out
enter
sub
push
push
outsb
outsb
decb
popf
pop
fs
in
mov
out
fs
int3
mov
inc
jl
mov
pop
fcoms
mov
pop
jb
xor
aam
imull
lcall
sub
add
or
adc
pusha
xor
jo
xchg
pop
pop
cmp
je
or
ret
int3
push
push
adc
or
mov
xor
gs
mov
add
mov
test
mov
inc
dec
cmp
push
leave
mov
push
movsl
push
adc
mov
mov
cmp
push
jge
push
sub
das
add
pop
mov
lock
nop
mov
shll
and
xor
jae
and
sub
xchg
jo
gs
out
jbe
rorl
movhps
clc
pop
xchg
dec
mov
inc
test
out
jmp
rcll
pop
icebp
mov
jl
inc
xchg
in
das
std
fprem1
jnp
sbb
mov
push
adc
cs
int3
push
inc
mov
push
pop
dec
cmpsb
mov
repnz
lret
fdivrs
mov
in
mov
mov
and
push
mov
mov
pop
mov
pop
insb
dec
shll
lods
int3
push
sahf
repnz
pushf
xor
ljmp
sbbb
xchg
ljmp
stos
rcr
or
inc
lods
dec
insl
addr16
jae
into
test
pop
int3
daa
loope
mov
cmpsb
jp
aas
js
mov
iret
inc
adc
and
dec
mov
in
sub
fstpl
dec
cmpsl
push
imul
sub
sbb
sub
sub
aaa
or
cmp
mov
xchg
mov
sti
jl
jns
or
aad
or
dec
scas
daa
cmc
pop
jecxz
int3
ss
icebp
mov
dec
jge
lahf
test
jcxz
mov
push
fdivrl
inc
gs
push
sbb
pop
jecxz
inc
scas
fstp
and
xchg
pop
lds
mov
fs
ret
xchg
int3
jne
xor
add
shll
std
adc
cmpl
mov
adc
xlat
pop
dec
adc
cmp
mov
ret
jns
inc
test
pop
xchg
push
cmp
stc
fnstenv
mov
mov
jbe
in
out
inc
cld
and
scas
fisttps
and
adc
mov
inc
clc
aaa
adc
or
inc
lcall
mov
int3
jle
push
sub
mov
icebp
push
xchg
fadds
mov
lret
scas
pop
out
into
cmpsb
int3
jns
and
push
cmp
xor
xchg
pop
inc
pop
inc
call
insb
cmpsb
cmc
imul
outsl
lock
mov
jo
insl
out
inc
dec
push
int3
and
jmp
or
add
sub
mov
xlat
les
xor
dec
pushf
mov
xor
jbe,pt
pop
dec
lock
dec
sub
mov
cltd
test
sub
hlt
mov
cmpl
mov
xchg
jne
pop
pop
inc
inc
int3
std
and
fs
mov
push
inc
fcmovnu
add
fcomps
sub
scas
cmpsl
sub
stos
push
cltd
inc
lea
lods
push
loop
jmp
fdivrs
call
pushf
inc
jg
test
pop
xchg
mov
int3
sub
sub
jmp
push
sti
mov
inc
insl
imul
fbld
xchg
pop
sbb
mov
jle
sub
xor
mov
jne
cmpsl
inc
add
cs
sub
or
push
mov
cmc
xor
ficomps
xor
or
icebp
lea
sub
out
call
sub
mov
or
xchg
int3
nop
or
sbb
jecxz
mov
cmp
fmul
filds
ret
xchg
insb
mov
dec
xor
add
lods
orl
movsl
inc
test
add
addb
cmp
pop
mov
lods
and
cltd
cmp
out
cld
jae
into
pop
sub
data16
inc
mov
xchg
push
mov
add
dec
imul
cs
xlat
mov
jne
inc
mov
and
pop
roll
jnp
daa
stos
xchg
sarl
test
popa
pop
adc
repnz
pop
dec
jge
inc
inc
divl
pop
sub
loopne
mov
cmp
cmp
pop
in
lock
sbb
sub
mov
ja
mov
lods
mov
jo
cmpsb
fimuls
pop
ficompl
dec
mov
imul
pushf
add
lret
adc
inc
repnz
xchg
or
pop
pusha
outsb
dec
mov
aam
cmp
inc
mov
pop
xchg
mov
cs
inc
std
mov
xchg
push
sub
mov
jne
data16
sbb
lods
mov
cli
fadds
sbb
pop
xchg
outsb
inc
jnp
ret
or
pop
pop
je
out
push
outsb
push
sub
sub
loope
pop
mov
push
int3
inc
or
xchg
mov
imul
sbb
mov
cmpsb
mov
adc
add
add
mov
shl
fcomps
test
es
mov
fcomp
mov
jl
lret
inc
das
fwait
xor
fcomp
iret
cld
push
aaa
cld
mov
mov
cmc
adc
rcll
repz
shl
adc
out
jae
in
imul
leave
xchg
or
scas
xchg
pop
aaa
lods
cld
sbb
add
js
mov
lahf
add
mov
push
ret
pushf
jb
dec
jns,pt
jne
stc
data16
dec
mov
pop
pop
fwait
sti
mov
lret
pop
mov
lret
cmp
pop
lahf
js
aad
pop
xlat
ds
in
cmc
jp
and
daa
jg
pop
loop
inc
push
xor
stos
cmp
mov
js
xor
popa
in
popf
cmc
sub
mov
and
cmp
pop
cld
pop
nop
inc
push
scas
arpl
pop
jbe
push
jne
out
jae
mov
adc
cmpsl
and
lea
sub
std
les
fwait
cli
mov
shll
inc
divl
inc
sbb
mov
add
xchg
cmpsb
pop
mov
fwait
jnp
xor
add
pushf
push
mov
dec
data16
xor
dec
ljmp
pop
das
cmp
cmp
scas
leave
sbb
pop
cmpsb
das
mov
push
xchg
fsubs
cmp
int3
mov
jp
mov
test
in
test
gs
jl
shrb
pop
jnp
cmpsb
push
ljmp
dec
idivb
mov
push
cmpl
or
mov
mov
fstl
icebp
jg
hlt
sub
sub
push
cmp
scas
popa
imul
pop
push
lea
ret
pop
push
loopne
inc
adc
jge
iret
jmp
int3
lds
cli
loopne
sahf
stos
adc
mov
pop
lret
mov
orl
ss
mov
int3
negb
je
cmpsb
pop
fbld
jb
or
push
adc
sub
test
icebp
or
cmp
sbb
repz
inc
into
movsb
outsl
iret
les
push
jno
jb
lods
shll
aad
mov
mov
inc
push
pop
bswap
test
repnz
mov
scas
jbe
in
xchg
lea
xchg
ficompl
daa
insb
xchg
xor
push
ret
scas
mov
ljmp
and
int3
pop
mov
or
out
and
or
or
or
sub
aas
sub
jnp
arpl
jle
sar
inc
or
fimuls
push
xor
int3
ja
inc
lea
push
and
fs
out
nop
jl
push
int3
dec
popw
mov
fs
daa
fs
dec
ret
movsl
pop
mov
push
mov
lret
scas
int3
adc
test
push
and
pop
push
jo
inc
lret
cwtl
and
pop
stos
mov
mov
xchg
cmp
add
cmpsb
inc
iret
mov
inc
push
cmpsl
not
xlat
xlat
sbbl
xor
int3
sub
dec
jmp
adc
int3
movsb
int3
scas
popf
dec
xchg
dec
imul
xor
pop
out
xchg
es
aaa
mov
sub
lret
mov
fidivl
shrl
mov
pop
mov
xchg
js
sub
xchg
into
outsb
rcll
bound
xor
dec
addb
mov
mov
xchg
aam
jle
push
add
pop
daa
dec
xlat
into
das
xlat
subl
sbb
jae
xchg
and
orl
dec
popa
pop
cmp
xor
xor
push
lock
sbb
cmpsb
and
stc
mov
movsl
fst
out
int3
aaa
mov
decl
std
jb
sbb
and
jg
ret
int3
loope
adc
cld
gs
mov
or
int3
push
adc
in
cmp
cmpsb
bound
cmp
outsb
inc
dec
and
cmp
icebp
mov
push
fcoml
mov
dec
es
clc
cmp
clc
dec
xchg
mov
loopne
mov
cmp
pop
mov
cld
xchg
mov
sub
fs
add
sub
dec
ja
lds
leave
pop
and
xorl
imul
pop
out
outsb
and
popa
add
pop
sbb
inc
pop
cmp
jecxz
lcall
or
jp
adc
aaa
mov
inc
mov
loopne
sbb
negb
cmpsl
mov
out
jle
push
cwtl
mov
clc
cmpsb
jae
rol
fcoml
cli
mov
in
push
scas
push
out
mov
pop
mov
push
in
mov
or
ja
stc
out
pop
orl
pop
int3
int3
dec
idivl
orb
js
mov
add
dec
bound
scas
jo
cmp
dec
movsb
fnsave
repz
pop
mov
addb
popa
mov
flds
bound
mov
out
cmp
or
pop
inc
dec
dec
push
shl
inc
cmp
inc
dec
pop
push
push
dec
dec
xchg
sub
test
fisubl
into
or
es
jbe
icebp
je
mov
inc
insl
test
xchg
xor
add
push
sarl
push
push
lahf
repnz
imul
out
inc
and
cmp
push
push
mov
mov
in
add
pop
mov
out
insb
inc
mov
int3
ds
and
jne
aad
cmpsb
aas
pop
enter
inc
out
stc
jl
push
pop
test
sbb
not
mov
cld
pop
aaa
add
aad
push
pop
mov
nop
lahf
icebp
int3
cmpb
xchg
cmp
cmpsb
js
in
out
jns
dec
cmp
jne
add
mov
test
imul
add
les
and
mov
mov
pop
test
ja
inc
jnp
mov
mov
sahf
mov
andb
inc
xchg
mov
xchg
lahf
loop
and
mov
dec
sbb
ljmp
daa
nop
data16
cld
sub
es
inc
ds
sbb
jg
mov
imul
int3
mov
xchg
imul
mov
popf
inc
mov
lods
test
pop
orl
in
jecxz
adc
rolb
test
sub
fsts
enter
out
in
out
xchg
add
daa
lcall
arpl
gs
cli
mov
insb
pop
cmc
dec
and
mov
xor
xor
in
jle
xchg
or
fcompl
rorb
insl
sahf
ret
or
inc
sub
fnstcw
pop
mov
fisubrl
mov
lret
int3
stos
inc
jns
xor
sub
mov
call
outsl
jmp
or
xchg
jle
push
insb
popa
cmpsb
outsb
xor
out
dec
inc
lahf
and
imul
push
cmpsb
inc
aas
or
or
or
fstps
arpl
je
roll
iret
inc
out
and
sbbb
sub
adc
jecxz
push
pop
ljmp
jae
mov
xchg
lods
jns
arpl
nop
fldt
repz
xor
daa
cmpl
hlt
cmpsl
movsl
inc
or
pop
fildll
jecxz
dec
cltd
push
xchg
dec
inc
inc
jb
add
pop
pop
into
sbb
int3
or
inc
mov
fs
das
dec
popf
test
inc
popf
iret
dec
jae
pop
pop
pusha
adc
adc
clc
mov
idiv
int3
cmp
sub
mov
sub
cmp
sarb
xchg
lcall
jg
rcrl
call
mov
add
pop
fidivrs
add
jl
sub
inc
pushf
cwtl
mov
aam
mov
and
add
push
pop
lods
inc
cld
mov
mov
fucom
aam
test
int3
int
cltd
mulb
inc
enter
push
cmpsb
pusha
popf
sub
cmpsl
stos
jbe
ret
mov
mov
ficoms
lods
add
mov
adc
loope
xchg
or
mov
dec
add
pop
pop
push
dec
sbb
adc
mov
rcrl
xchg
adc
mov
movsl
mov
jge
mov
xor
dec
repnz
pop
lret
mov
clc
pop
jmp
aam
in
pop
and
cmpsb
cmp
fldl
aas
cmp
icebp
mov
sbb
xor
dec
inc
jp
sbbl
loop
lods
loopne
cltd
sub
nop
addr16
adc
mov
xchg
pop
movsb
sub
mov
fstps
adc
pop
cmp
or
not
aaa
inc
jns
movsb
add
push
enter
pusha
inc
adc
add
sub
and
xchg
mov
fidivrs
mov
push
enter
shlb
jno
mov
fcmovne
jnp
fcoml
push
xchg
pop
mov
imul
aad
push
inc
les
fcomps
fsubl
xor
sub
shrl
add
stos
arpl
sub
sbb
stos
ljmp
scas
outsl
push
mov
addb
inc
push
leave
gs
sbb
pop
jne
xor
push
cmp
xor
xor
pop
addr16
shl
dec
mov
cmp
and
imul
mov
repz
int3
cmp
inc
ds
sti
or
gs
filds
or
push
mov
add
pop
cmc
dec
push
shrl
pop
mov
jne
cmpsb
stos
in
imul
int3
jecxz
mov
popf
mov
out
mov
cmp
out
outsl
xor
pop
test
or
lock
sbb
cwtl
scas
inc
cmpsb
daa
ljmp
xor
pop
mov
lret
orl
push
clc
leave
mov
int3
or
xor
inc
inc
or
push
inc
mov
addr16
fdivl
decb
jb
or
rorb
mov
mov
test
cwtl
pop
jle
lea
int3
jae
repnz
push
mov
or
fsubrl
js
dec
push
sbb
fnstcw
stos
inc
cli
ljmp
fmul
push
mov
sub
negl
pop
cmpsb
mov
ljmp
sbb
mov
sub
lahf
or
inc
sarl
adc
mov
jp
fwait
leave
mov
mov
scas
mov
jae
jp
addr16
and
std
fwait
jg
test
sub
adcl
in
icebp
pop
xchg
out
adc
popa
scas
jg
je
mov
mov
pop
push
xchg
insb
test
sbb
sub
hlt
movsb
adc
cmp
inc
cmp
ss
int3
sub
fwait
stos
push
inc
leave
test
dec
dec
mov
repz
push
push
enter
stos
pushf
or
lea
loope
arpl
fwait
sarb
dec
pop
mov
sub
jb
adc
test
aad
popf
nop
test
adc
jnp
pusha
sub
aaa
inc
cmpsb
leave
outsl
aaa
imul
mov
cmpsb
aam
or
add
cmpsb
fs
push
push
cmpsb
les
sub
jmp
mov
push
adc
cmp
cmpsb
pop
lods
pusha
shl
mov
test
push
stos
rcl
cmpsb
push
js
xorb
int3
mov
scas
dec
popf
addr16
inc
add
cmp
dec
dec
fs
and
mov
fimull
out
int3
frstor
jae
cli
inc
sbb
push
inc
sub
xchg
mov
test
pop
cmp
nop
nop
mov
or
int3
daa
jp
jo
pop
data16
and
dec
or
sahf
dec
in
or
mov
xchg
ret
xchg
and
popa
xor
int3
ljmp
pop
sub
inc
pop
and
inc
fs
ret
cmp
sbb
xchg
fcomps
das
pop
movsb
cmp
lea
mov
push
dec
inc
lods
push
xchg
mov
or
inc
xor
push
mov
mov
add
mov
mov
int3
jne
add
mov
cmpsb
push
mov
xor
and
cmp
fdivr
popf
sub
xor
fnstcw
adc
sahf
int3
sbb
xlat
adc
test
pop
xor
roll
gs
imul
inc
add
mov
stos
mov
sub
add
or
in
sbb
jnp
mov
mov
inc
cmpsb
mov
popa
mov
mov
cs
stos
rorb
sub
push
adc
pop
arpl
mov
fs
pop
fsubl
int3
clc
push
loopne
fcoms
mov
cmp
xchg
mov
or
fbld
or
pop
adc
out
push
xlat
push
push
stos
int3
mov
cli
inc
out
xchg
dec
movsb
dec
jnp
imul
int3
std
les
xchg
mov
test
jo
sub
popf
out
inc
mov
subb
add
iret
or
jb
mov
out
sub
and
jmp
mov
rcll
and
adc
xchg
push
jb
shrl
into
inc
mov
scas
mov
and
hlt
fadds
jnp
mov
addr16
xchg
add
cmp
mov
xchg
ds
mov
int3
jmp
cmp
sbb
sti
xor
fbstp
lahf
stos
jae
lods
sub
scas
xchg
add
lret
sbb
out
sub
pop
or
je
lcall
mov
inc
in
ds
mov
dec
inc
daa
xchg
mov
dec
dec
xchg
or
outsb
iret
int3
stos
cmp
xor
xor
cmpsb
insb
cmp
clc
inc
ficoms
roll
pop
cmp
lea
xchg
jb
inc
int3
stos
push
push
pop
cwtl
cwtl
cltd
inc
cmpsb
stc
lds
inc
popf
xchg
sub
push
pop
xchg
mov
in
out
and
int3
data16
aas
cmp
xor
decb
aam
xor
mov
mov
imul
adc
in
ss
leave
mov
sub
push
es
imul
and
or
or
jns
xor
cwtl
fs
gs
pop
aas
sbb
mov
xor
mov
daa
into
push
jo
stos
repnz
inc
pop
bound
imul
and
lock
movsl
adc
cli
mov
inc
mov
cmp
lcall
jns
lock
jo
iret
pop
add
ljmp
push
jecxz
idivl
fs
cmp
push
cltd
push
out
pop
cmp
push
arpl
cmpsb
mov
cmpsb
lods
ss
imul
jo
dec
mov
rcll
test
push
mov
pop
popf
imul
cmpsb
dec
inc
lcall
push
and
cmp
imul
xlat
inc
mov
sub
jecxz
movsl
iret
inc
jle
or
ret
xor
bound
fcomp
fidivrl
xchg
shll
dec
xchg
push
int3
les
repz
clc
fisubrl
mov
rcl
mov
popf
xor
or
out
pop
les
pusha
and
in
pop
pop
dec
dec
roll
les
ljmp
shl
cwtl
pop
stos
insl
lcall
inc
xor
cmp
sbb
mov
pop
fcoml
sbb
xchg
hlt
roll
push
mov
or
divl
aas
mov
dec
iret
call
push
insb
inc
lret
das
cmp
cld
xorl
sub
imull
aam
cs
push
lahf
leave
jo
jmp
push
orl
ja
xchg
mov
iret
cmp
int3
or
out
add
pop
rcrb
out
cmc
into
pop
add
imul
xchg
lock
in
cmp
xor
or
out
sbb
pop
inc
pop
std
push
cmp
sub
stc
inc
loopne
xor
mov
repnz
mul
outsl
popa
int3
sub
sbb
int
cmp
adc
aad
fucom
mov
ja
adc
shl
xchg
test
loop
fsts
out
scas
ja
bound
pop
stc
in
jb
int3
inc
fidivrl
fsub
in
test
testb
jno
fsts
shl
jnp
jmp
mov
cmp
jne
dec
inc
fimull
add
std
leave
mov
es
cmc
call
fnstcw
nop
shlb
sbb
cmpsl
cmp
cmp
cmpsb
stos
orl
dec
out
loop
test
popf
fcmove
pop
pop
jbe
push
lcall
sub
pop
popf
andb
sbbl
inc
fs
int3
pop
int3
jae
and
std
cs
add
cmp
mov
push
mov
das
mov
sbb
mov
stos
fnstenv
cmp
inc
inc
mov
pop
sbb
inc
in
sahf
inc
mov
pusha
cmp
jp
sub
lds
subb
push
inc
dec
sub
jns
fmull
pop
jecxz
mov
lret
aas
int3
pop
push
xlat
into
push
jb
test
scas
hlt
in
sub
es
inc
pop
cmpsl
inc
std
mov
std
mov
stc
pop
aad
inc
stos
xor
movsl
shlb
loopne
mov
mov
jle
cmp
push
les
jmp
push
pop
fmul
and
faddl
movsb
sub
mov
pop
dec
divb
mov
pop
xor
mov
repz
test
shll
pop
pushf
lahf
imul
cmpsl
xchg
fs
mov
xchg
adc
and
dec
pop
jne
mov
lret
dec
pop
js
xorb
jl
add
sub
inc
js
cwtl
add
pop
inc
and
mov
sub
jg
in
js
mov
mov
xchg
pop
mov
and
int3
scas
das
lods
sbb
ficoms
fs
pop
cwtl
in
fistpl
inc
out
mov
arpl
insl
sub
mov
xchg
leave
in
jno
aam
add
ljmp
and
pop
dec
inc
insl
mov
pushf
pop
js
test
int3
or
notb
dec
cmpsb
sbb
aas
popa
mov
std
fs
jbe
xor
ds
adc
and
test
insb
int3
stc
jo
mov
rolb
fwait
xchg
dec
cmp
inc
adc
cmp
popa
jne
push
imull
popf
xchg
pop
xor
pop
addr16
jecxz
inc
mov
mov
mov
cmpsb
test
clc
adc
add
pop
push
or
adc
mov
jle
jne
fbstp
in
in
mov
mov
stos
jg
adc
pop
mov
dec
cmpsb
dec
sub
lahf
xchg
dec
and
ljmp
pop
pop
jmp
and
int3
pop
mov
pusha
mov
mov
dec
jbe
outsb
adc
lods
ret
jge
data16
jbe
sub
fldcw
push
sahf
push
cltd
or
and
xchg
pop
inc
cwtl
daa
lea
lcall
movsl
ja
cld
pop
inc
dec
rolb
insb
lea
ret
fidivrs
daa
ds
pop
jo
inc
inc
fstps
int3
cmpl
inc
orl
inc
dec
push
shlb
mov
xbegin
test
mov
mov
ja
gs
sub
sbb
or
gs
and
push
lds
sub
enter
mov
jnp
dec
mov
fs
dec
adc
xor
aaa
repnz
mov
in
aad
stc
adc
int
lcall
ja
cmp
dec
jle
mov
sti
xor
xchg
pop
loopne
xchg
pop
in
cmp
pop
dec
sbbb
jmp
stos
adc
cltd
out
je
cld
add
pop
movsl
mov
sub
push
ds
cmpsl
daa
stos
nop
gs
int3
popa
xor
js
jle
test
insb
inc
cmp
bound
aad
fstps
cmp
inc
sbbb
sbb
sbb
push
dec
add
pop
imul
fwait
das
mov
scas
mov
and
fnstenv
mov
push
jns
pop
mov
cld
fcompl
lds
fnsave
enter
cmp
inc
stc
inc
movsb
adc
jns
int
js
sbb
rolb
pop
mov
add
inc
inc
std
test
pop
push
fiaddl
addl
fisttpl
sbb
fimull
incl
pop
mov
jae
mov
arpl
add
pop
cmpsl
fstl
lds
loopne
push
dec
ljmp
inc
lds
aad
pop
jo
push
push
dec
sti
lret
jno
inc
pop
add
imul
fsubp
adc
push
inc
mov
lods
push
mov
stc
add
arpl
lea
cltd
adc
xor
cmpl
mov
cld
lock
xorb
mov
inc
pusha
add
iret
mov
std
and
mov
in
mov
int3
neg
and
xchg
cmp
cmp
add
lods
lahf
xor
jno
xor
jno
fcomps
or
or
fsubrs
dec
and
xchg
lahf
mov
lcall
jmp
scas
pop
jb
mov
and
or
sub
lea
mov
pop
jmp
pop
adc
mov
push
pop
and
jecxz
sarl
insl
cmp
fildl
vmread
imul
mov
dec
mov
and
mov
ret
inc
mov
rcll
adc
pop
inc
out
push
cwtl
jmp
int3
aam
push
int
pop
fucomi
mov
loopne
cld
loop
jbe
dec
dec
mov
pushf
mov
mov
fildl
das
and
sub
vmovntps
pop
dec
cmpsb
outsb
popa
and
mov
shrb
fstps
xor
test
int3
mov
jp
or
cmpsb
mov
jp
mov
inc
adc
jl
mov
mov
pop
stos
or
pop
sub
pusha
shrb
leave
int3
roll
shll
je
shr
inc
or
jle
xchg
inc
lahf
pop
mov
mov
pop
xchg
int3
xor
mov
cld
pop
addr16
push
sti
inc
pop
jp
jl
lods
out
stos
aas
push
out
hlt
mov
cltd
mov
testl
mov
sbb
or
inc
mov
mov
cmpsb
iret
lret
lea
leave
inc
out
jae
mov
jecxz
xor
leave
out
repz
push
push
adc
jmp
rcl
pop
mov
push
push
adc
int3
enter
std
sbb
xchg
lock
cmp
cmp
add
fmull
push
xlat
sbb
fnstenv
cmpsb
inc
inc
cld
push
mov
sbb
ds
lret
in
adc
pushf
pop
jmp
xor
outsl
jns
cmp
scas
and
sti
mov
test
mov
je
sbb
jle
jecxz
inc
push
sub
lods
sub
push
cmpb
ss
add
pop
or
push
test
mov
jnp
ficomps
jbe
ljmp
ror
jmp
dec
out
or
fistpll
in
inc
mov
test
shll
jp
movsb
cmp
arpl
cmpsb
bound
jbe
pop
mov
stc
addr16
adc
or
inc
add
inc
int3
clc
sahf
cmp
xor
in
cmp
rcll
or
bnd
outsb
pop
test
cli
or
in
mov
pop
sub
mov
fldl
pushf
cltd
lods
clc
xor
sbb
inc
sub
jmp
cmp
adc
es
xchg
add
sub
xor
int3
push
mov
xor
mov
add
mov
incl
xor
pop
repnz
in
pop
mov
idivb
jns
imul
movsl
add
popf
add
pop
bound
and
mov
loope
jns
mov
sahf
dec
rclb
inc
adc
pop
push
add
dec
popf
pop
push
mov
and
mov
lret
mov
mov
fwait
cmp
adc
dec
mov
mov
popf
mov
cmpsb
pop
lods
sub
pop
jecxz
xor
and
inc
sub
jb
adc
outsl
iret
enter
push
cmp
or
or
addl
insb
mov
dec
fsubs
sbb
int3
mov
xchg
mov
cmp
pop
xor
pop
stos
xor
pop
pop
mov
imul
iret
mov
cmove
jnp
adc
repz
add
insb
test
inc
das
adc
mov
pop
mov
xor
or
mov
cmp
stos
pop
test
xor
cld
sbb
movsb
and
mov
ds
dec
cmpsb
and
sub
and
fimull
inc
mov
dec
mov
call
push
mov
inc
or
aad
and
adc
push
jb
sahf
sahf
stc
test
lret
pop
xchg
cmpsl
mov
mov
outsl
lret
cmpsb
out
push
mov
cmp
sub
dec
rol
push
popf
add
inc
xlat
mov
xchg
mov
fwait
mov
mov
jl
data16
jae
pop
js
addr16
int3
lock
sbb
int3
push
and
inc
data16
add
cmpsb
into
xchg
sub
shrl
inc
filds
sbb
jo
sbb
in
xor
lods
dec
inc
mov
jns
jae
xchg
pop
pusha
xchg
ss
inc
cmp
lret
sub
in
aad
movsl
sub
inc
mov
dec
mov
outsl
jp
dec
in
mov
sbb
rclb
insb
sub
inc
loopne
lahf
int3
data16
arpl
adc
arpl
out
mov
out
jne
jne
movsl
mov
push
push
mov
pushl
cmp
jo
mov
scas
in
sub
inc
pop
xchg
or
and
push
les
ja
inc
and
fstps
xor
inc
repnz
add
sub
dec
push
or
cwtl
ret
cmp
scas
int3
cmpsl
repnz
cld
outsb
sbb
cli
scas
jnp
inc
jg
int3
movsl
xchg
cmp
sbb
mov
lods
xor
xor
mov
add
icebp
mov
mov
imul
repnz
ror
dec
pop
fwait
pop
jnp
bound
sub
test
fidivrs
xchg
cld
les
mov
cs
lret
lret
mov
mov
mov
fcoml
int3
and
or
fadds
inc
push
rcll
inc
test
lds
scas
call
mov
push
shll
pop
add
cmpsb
aas
fdivr
sbb
sub
push
aas
mov
adcl
jo
jb
mov
int3
mov
dec
das
call
adc
subb
popf
cmc
inc
add
data16
daa
mov
jp
mov
lods
add
arpl
scas
sub
sahf
out
testl
outsb
or
mov
daa
mov
cmp
pop
leave
or
mov
imul
or
je
icebp
pusha
int3
sub
ret
mov
mov
cmp
mov
into
sti
int3
fsubrl
icebp
insb
stos
mov
aam
xchg
push
and
fnstcw
ljmp
pop
mov
cmp
cmp
and
popa
xchg
test
push
sbb
fsubl
pop
pop
ficoml
mov
int3
ljmp
pop
mov
xor
insl
dec
popf
mov
sbb
mov
cmpb
inc
clc
fildll
pop
rcl
and
dec
stos
jl
cwtl
mulb
nop
pusha
int3
mov
into
out
xchg
xchg
or
pop
cmp
jo
pop
enter
add
ds
ret
clc
hlt
cmpsb
dec
sbb
test
scas
adc
inc
adc
inc
mov
xor
xor
inc
fbld
cmp
pop
pop
pop
movsb
movsl
rcrb
test
cmp
inc
or
popf
mov
sbb
cmpl
dec
add
xor
in
sti
cmp
pop
dec
pop
bound
push
int3
in
addr16
push
add
jno
push
or
mov
lret
pop
cmp
pop
mov
subl
std
aaa
inc
scas
pop
sub
sbb
ja
xchg
xor
dec
notb
leave
inc
cmp
xor
inc
xor
cmpsb
sub
adc
lods
inc
push
inc
testb
or
insb
int
rcl
jns
dec
stc
push
rcll
repnz
adc
loop
sub
in
mov
sub
int3
dec
lock
outsl
fstpl
mov
inc
xchg
pop
inc
jge
rclb
mov
and
paddq
popa
jbe
ds
cs
pop
fsubl
lret
pop
icebp
cld
stos
jmp
popa
jg
sbb
inc
test
mov
cltd
and
ss
leave
in
mov
repnz
adc
push
add
movsb
sub
mov
addr16
add
int3
fsts
mov
inc
pop
test
push
rol
jns
cmpb
or
lods
leave
pop
mov
inc
xchg
in
xor
and
adc
ja
arpl
inc
push
das
mov
adc
cmp
pop
cmpsb
pop
sub
and
sub
shrl
aam
pop
in
mov
int3
int
push
add
int
cld
push
push
inc
popf
clc
inc
inc
insl
ja
insb
jl
lods
pop
cmpb
and
scas
sbb
sbbb
out
adc
xchg
pop
push
addb
sub
sbb
pop
test
mov
lock
ret
testl
subl
pop
sbb
rol
les
stc
mov
xor
push
pop
sbb
int3
cmp
sarl
push
pop
popl
pop
fldt
cmp
pop
int
mov
aam
xor
test
arpl
xchg
inc
pop
fcompl
pop
imul
jmp
pop
or
sar
stos
sbb
pop
sarb
enter
inc
jmp
cmp
pop
add
dec
mov
jo
sub
push
inc
stc
cmpsb
dec
jbe
cmp
mov
movsb
push
xchg
mov
jb
and
out
data16
imul
cmp
xchg
xor
jp
int3
mov
in
lret
cmc
xchg
sarb
clc
pop
adc
jno
or
push
mul
jno
rcrb
lods
inc
push
flds
mov
and
dec
es
push
cmpsb
mov
inc
inc
adc
mov
sub
int3
cs
jae
outsl
cmp
pop
dec
push
pushf
sub
movsb
in
add
push
push
fmul
pop
jno
ja
callw
das
xor
pushl
das
push
je
cmp
adc
lds
flds
divl
subb
lods
and
sub
mov
xchg
popa
int3
mov
mov
add
pop
icebp
inc
cmpsb
push
inc
sub
loopne
jo
aas
and
push
mov
dec
ja
sahf
aam
sbb
adc
and
xor
mov
inc
mov
push
mov
jns
rcrl
addr16
loop
iret
cltd
cmp
mov
and
int
xor
adc
test
lock
sub
cmc
clc
sbb
cmc
ja
mov
inc
pop
lahf
sub
xchg
imul
mov
xchg
inc
dec
jg
or
pop
cs
and
mov
sub
add
mov
dec
insb
mov
cmp
movd
adc
jns
pop
mov
mov
xor
cmpsb
pop
push
lcall
or
fwait
adc
adc
roll
mov
mov
xlat
pop
ret
sub
stos
dec
in
pop
dec
rcrb
lret
pushl
and
adc
pop
cmc
cmp
mov
inc
popa
shrl
or
mov
daa
js
data16
sub
dec
cmc
pop
xchg
dec
fdivs
xchg
mov
in
dec
out
sahf
icebp
or
jno
xchg
mov
adcl
aas
sbb
mov
xchg
or
push
mov
pop
inc
je
jb
mov
repz
shlb
adc
inc
mov
ror
sbb
repz
xor
or
cmp
leave
imul
inc
xor
dec
popf
mov
cmc
pop
add
test
int3
inc
lods
jl
mov
insb
lock
mov
idivb
int3
mov
insl
stos
and
mov
mov
mov
out
cltd
jge
icebp
mov
and
arpl
adc
add
sarb
test
out
adc
cmpsb
lods
and
aaa
xlat
pop
in
stos
lods
movsb
inc
dec
mov
pop
jge
pop
loop
xchg
mov
int3
and
add
cmpsb
mov
subb
inc
or
pop
or
pop
cmpsb
add
push
pushf
sarl
xor
cmp
cmp
repnz
sbb
inc
in
push
in
xlat
jle
imul
outsl
test
and
test
popa
ss
xchg
in
outsl
add
mov
cli
int3
repz
mov
jmp
sub
icebp
adc
movsl
inc
pop
and
movsl
dec
push
cmpsb
sbb
mov
dec
aad
ds
xlat
dec
ret
adc
dec
pop
fsubrs
xchg
dec
cmpsb
cmp
inc
call
add
xchg
test
jecxz
rorb
cmc
mov
mov
xchg
imul
inc
dec
inc
out
mov
xchg
mov
or
lcall
cs
push
leave
jg
mov
pop
iret
rcrl
fsub
sarl
aaa
pop
popa
xor
enter
push
mov
dec
js
loop
mov
pop
adc
stos
mov
sub
cmp
inc
push
pop
mov
and
cli
pop
icebp
xor
lea
mov
loop
cld
lahf
inc
pop
sbb
mov
adc
mov
lahf
cwtl
pop
mov
imul
cld
mov
int3
arpl
cs
cmpsb
xor
or
cmpsb
cmp
outsb
xchg
popf
mov
xor
aad
push
fwait
insl
mov
in
iret
mov
data16
or
jnp
gs
les
jle
call
lret
mov
push
inc
cmc
inc
lock
mul
outsl
popf
movsl
jno
push
fildl
push
fidivrs
int3
sub
jne
inc
cmpsb
je
add
inc
push
xchg
sahf
pop
gs
dec
sbb
xchg
in
add
aaa
fldcw
fdivrp
dec
add
dec
adc
cld
dec
jle
test
jnp
leave
iret
sub
cmc
xchg
in
inc
aad
int3
mov
pushf
aad
cmpsb
out
add
cmpl
inc
stos
int
rcl
and
pop
xlat
lcall
out
push
in
and
test
or
jns
loope
clc
sub
stc
and
fsub
or
aad
mov
and
cltd
adc
jmp
mov
mov
pop
leave
fisubrl
rcll
pop
std
icebp
dec
shll
and
mov
cmp
in
in
cmp
out
push
inc
outsl
xor
int3
mov
pusha
push
fwait
pusha
pop
jo
dec
push
push
es
jmp
inc
insl
sbb
repz
xchg
imul
ss
inc
sbb
fmul
jg
dec
mov
fiaddl
pop
fmul
mov
jge
cli
jl
dec
fcomps
scas
lret
pop
xchg
addr16
adc
fst
inc
xor
fcompl
jle
or
in
inc
scas
pushf
aam
inc
push
mov
cmp
rorl
pop
movsl
mov
mov
movsb
lahf
sahf
leave
popf
push
loope
add
cmpsb
adc
add
pop
xor
inc
pop
dec
cmp
push
sbb
sahf
stos
stos
int3
jne
push
mov
dec
lcall
inc
and
cmp
mov
add
fs
lcall
clc
mov
cmpsl
aas
test
dec
cmc
pop
xchg
cmp
divl
les
lret
inc
jmp
and
ja
stos
mov
xor
push
xchg
xchg
int3
test
imul
mov
inc
inc
enter
stos
pop
movsb
pusha
pop
xchg
fnstcw
lahf
repnz
add
jp
stos
add
movsb
pop
in
jns
jo
lock
int3
cld
sbb
lock
or
cmc
mov
push
int3
stos
cmp
mov
cmpsb
icebp
sbb
hlt
cmp
cld
loope
cmp
ss
inc
xchg
push
xchg
int3
das
jnp
movsl
sub
push
mov
jge
cmpsb
or
dec
das
shrb
pushf
in
sbb
pop
push
or
inc
test
outsl
test
test
divb
pushf
adc
xchg
mov
lret
fdivs
out
pop
add
add
js
pop
xlat
test
sub
sbb
and
mov
ds
mov
cmp
inc
dec
xor
sub
je
pop
nop
add
ret
test
cwtl
ljmp
stos
mov
sbb
je
pusha
movsb
lret
mov
icebp
stos
or
push
outsb
fs
mov
ljmp
jge
mov
mov
adc
fdivl
icebp
inc
in
jo
js
fstl
mov
rorl
xor
push
inc
push
js
out
cs
popa
bound
mov
dec
jge
aad
pop
sbb
roll
inc
repz
cltd
lret
dec
int3
cwtl
mov
xorb
xor
out
adc
cld
scas
push
movsb
jb
mov
sahf
push
lods
push
jecxz
mov
inc
push
subb
sbb
fldl
xchg
loope
pop
mov
push
sbb
push
out
xor
and
inc
jecxz
aas
lock
dec
jno
push
mov
sbb
sub
lods
adc
pop
lcall
jmp
bound
adc
add
push
jmp
scas
fs
pop
push
inc
xorb
pushf
inc
nop
inc
jp
mov
scas
dec
cmpsb
lods
mov
repnz
les
sub
adc
jp
cmc
add
jae
repz
xchg
nop
dec
jbe
mov
xor
ds
fldl
xchg
push
mov
push
mov
aas
xchg
push
xor
stos
mov
add
inc
mov
cmpb
aas
out
int3
ss
aam
mov
outsb
adc
push
inc
xor
test
xor
adc
es
stc
lret
insl
push
loope
mov
shll
xor
loop
mov
cmp
inc
cmc
in
or
shll
jge
mov
cwtl
mov
cmp
inc
stc
xor
dec
lock
jl
getsec
nop
pop
pop
leave
push
mov
bound
cs
or
dec
xchg
test
pop
stos
sbb
or
ds
mov
mov
rolb
xor
jecxz
fisttpl
pop
hlt
mov
xor
xchg
mov
sahf
mov
sarl
imul
mov
popf
out
jne
mul
mov
clc
cmp
popf
and
test
cs
sbb
repz
inc
mov
push
sub
inc
or
jns
dec
mov
adc
in
sub
incb
jne
adc
ret
mov
mov
scas
test
repnz
movsl
cmpsb
inc
cwtl
sub
pop
mov
jle
cmpb
pushf
dec
adc
adc
dec
in
iret
jbe
xchg
cmp
jbe
adc
dec
ljmp
xor
or
hlt
mov
int3
jge
pop
fadds
jp
sub
xor
fsubl
ret
inc
dec
cmpsb
lahf
jb
or
dec
hlt
mov
pop
jo
sbb
cmp
adc
xor
pop
scas
inc
insl
into
movsl
dec
inc
ret
fcom
inc
sub
jge
mov
jmp
int3
jmp
cld
mov
ret
ds
int
cmpsb
cmp
dec
fdivrs
inc
mov
push
add
rolw
repz
mov
xor
cli
popf
sbb
push
or
dec
mov
imul
inc
push
jmp
aaa
pop
pop
nop
data16
es
vmovntps
push
jg
sbb
inc
mov
pusha
test
push
enter
aam
lds
mov
jae
ss
pop
jecxz
push
xchg
in
lret
cmpsb
iret
loopne
adc
or
out
into
jmp
pop
cmpsl
in
inc
inc
jl
jle
adc
fstpl
add
ljmp
inc
test
in
pop
jns
xchg
mov
fstl
pop
push
test
or
mov
int3
ud0
adc
fcoms
mov
stos
flds
mov
xchg
xchg
inc
nop
push
mov
sbbl
xor
fxch
push
jmp
std
cmp
jmp
fstpt
or
cld
int
not
in
fcoms
sub
es
inc
sub
xchg
test
sub
pop
push
dec
cmpsb
test
lods
xchg
pop
jbe
inc
or
dec
cmpsb
cmp
pop
arpl
inc
jnp
xor
out
mov
add
push
or
loopne
xchg
cmp
ret
gs
jmp
es
je
into
ljmp
in
xchg
xlat
test
jo
lds
int3
adc
sti
sub
jle
xchg
hlt
cmp
in
inc
xchg
or
rcll
in
test
das
jecxz
lock
mov
add
cmpsl
jb
stc
or
rdpmc
das
push
pop
cmc
inc
mov
jl
lcall
pop
clc
pop
popf
pop
pop
inc
insl
push
outsl
loopne
mov
rolb
mov
inc
pop
jb
jae
inc
push
dec
mov
or
outsb
ljmp
inc
mov
xor
jg
fidivrs
jne
cmpsb
pop
mov
pop
xchg
clc
mull
sub
mov
leave
cltd
xchg
popf
int3
add
arpl
mov
push
dec
cmpsl
les
repnz
add
vmwrite
fs
int3
bound
fwait
sti
mov
cmp
pop
test
and
mov
xor
cli
jo
stc
pop
sub
pop
mov
stos
jnp
add
sub
cmpsl
lret
xchg
or
aad
stc
or
pop
pop
cmp
adc
into
sub
inc
mov
dec
jg
outsb
arpl
dec
hlt
push
inc
or
insl
pop
loop
sub
inc
pop
add
inc
xchg
data16
mov
int3
xchg
js
pop
mov
inc
jg
jp
cmp
inc
fwait
icebp
pop
and
nop
jecxz
pop
mov
test
mov
jmp
fbld
pop
std
out
lret
inc
xchg
add
lret
int3
sar
lahf
lahf
cmp
lcall
loop
mov
sub
push
es
mov
cmp
jae
push
inc
pop
sti
ljmp
mov
add
bound
dec
xor
xor
pop
pop
push
clc
enter
int3
mov
xchg
sbb
push
sbb
xlat
stc
pop
addr16
rorb
je
push
push
cmpsb
mov
jne
jne
inc
or
xchg
pushf
push
push
insb
and
dec
add
and
testb
or
cld
daa
cltd
loope
ret
ret
scas
int3
jo
mov
xchg
mov
jae
shlb
call
mov
pop
lock
adc
adc
rcl
jne
sahf
cmpsl
mov
roll
popa
outsl
xchg
int3
sub
std
or
je
mov
xchg
les
inc
je
jne
arpl
dec
cmp
int
mov
loop
call
push
cmp
cmpb
and
or
int3
xchg
pop
sub
es
mov
in
pop
adc
sub
cmp
fildl
or
push
pop
cli
cltd
adc
mov
add
das
pop
xchg
lods
outsb
pop
loopne
xchg
add
and
dec
mov
or
stc
push
mov
popf
pop
mov
sti
insl
mov
mov
or
xchg
es
push
and
stos
int3
or
or
or
sbb
leave
jne
hlt
adc
lret
pop
add
shl
imul
rcl
movl
mov
mov
mov
mov
jecxz
fs
push
insb
es
cmpw
mov
jle
push
cmpsl
pop
mov
add
mov
push
dec
mov
inc
sbb
and
roll
fwait
and
pop
movsl
push
inc
cmc
pop
lods
pushf
or
cmp
daa
mov
or
rorl
test
fs
cmc
pop
lcall
or
xchg
mov
jg
lahf
push
inc
sbb
rorb
ficomps
pop
int
jne
repnz
aaa
ret
mov
int3
pmaxsw
mov
es
insl
push
push
loop
inc
outsb
cmp
out
pop
stos
fstpt
xchg
dec
icebp
pop
push
int3
sub
and
add
sub
rclw
pop
xchg
sti
and
mov
fs
movsb
sub
das
fwait
aaa
or
inc
dec
ja
jno
arpl
cmpsb
popa
sarb
dec
add
dec
jae
xchg
push
jbe
adc
mov
fcomps
clc
cli
lret
sti
sub
stos
fidivrl
insb
lods
jbe
push
pop
cmp
dec
mov
xor
mov
mov
fcomps
add
addr16
push
mov
mov
fs
lahf
lods
out
pop
lds
inc
dec
jp
sub
mov
lcall
fdivr
push
aaa
popf
and
sub
pop
sub
xor
gs
dec
sbb
sahf
das
cld
scas
push
add
cmpsb
in
mull
mov
push
shl
int3
mov
into
imul
pop
mov
jmp
sub
ret
ds
inc
sarl
cli
subb
dec
fstl
adc
adc
cmpsb
mov
lret
and
lcall
and
test
pop
push
xchg
sti
or
cs
pop
fwait
jle
jecxz
mov
in
insb
mov
mov
jne
lret
out
and
test
ret
stc
xor
int3
aaa
sbb
add
adcb
inc
mov
stos
filds
mov
xlat
mov
imul
pop
jns
mov
xlat
insb
or
pop
pop
mov
dec
or
cli
sbb
mov
out
imul
lcall
out
into
pop
cmpsb
stos
and
int
or
out
repnz
aas
je
sbb
xor
imul
les
inc
seta
dec
pop
mov
sub
das
int3
dec
popa
ret
insl
enter
mov
sahf
pusha
pop
stos
int3
clc
nop
inc
in
sub
mov
sub
popf
in
inc
push
push
call
pop
sahf
cmc
fs
inc
mov
fldcw
add
cmp
and
mov
inc
popa
inc
inc
xchg
mov
pop
cmpsl
test
or
ficoml
pop
loope
popa
aad
xor
and
test
and
cli
into
sbb
mov
jl
pop
cmp
test
pop
in
mov
andb
lcall
pop
xor
add
inc
subl
jne
pop
les
cmpsb
sbb
mov
inc
decb
mov
push
jno
jno
sub
dec
dec
push
sti
inc
sbb
sub
adc
les
mov
or
xchg
mov
mov
xchg
enter
aaa
out
jge
mov
scas
add
arpl
pop
pushf
push
or
imul
xchg
rol
cld
call
icebp
inc
pop
mov
ficoml
popa
jae
icebp
cld
mov
mov
pusha
imul
call
fcomps
push
adc
imul
outsb
int3
icebp
cmp
push
and
push
outsb
mov
and
add
sub
and
mov
mov
shll
rcll
enter
cltd
push
lahf
sub
and
pop
xor
sub
and
frstor
lcall
into
pushf
push
sarl
inc
cmpsb
rcrl
xchg
jnp
inc
sbb
mov
int
xchg
int3
inc
nop
xchg
inc
inc
pop
xchg
pop
cmpsb
mov
pusha
out
inc
push
and
stos
cld
pushf
insb
fldenv
gs
add
int3
fldenv
fs
mov
adc
mov
and
int3
mov
in
or
lods
xorl
jg
icebp
outsb
aam
mov
icebp
popf
mov
mov
movl
fmulp
pop
stos
cmpsl
jae
es
inc
pop
sahf
dec
cwtl
cmpb
pop
in
xor
arpl
mov
push
shr
test
fwait
cmp
movsb
pop
add
lock
pop
mov
mov
sub
sbb
dec
inc
pop
test
out
pop
sub
pusha
mov
rol
xchg
int3
shlb
push
es
pusha
cmpsb
cld
inc
pop
cli
jg
dec
incl
xchg
mov
sub
cmp
push
int3
xor
loope
adcl
push
arpl
frstor
mov
jns
pop
mov
cmc
cld
push
jne
cltd
clc
cs
push
lahf
ficomps
push
fcomp
out
lret
arpl
dec
inc
or
or
test
push
xchg
push
cwtl
inc
push
xchg
mov
fdivr
pusha
cli
inc
repz
aas
inc
pop
add
cli
push
mov
movsl
in
jg
repz
cmpsb
push
and
inc
inc
add
out
scas
outsb
cmpsb
mov
sbb
inc
addr16
push
ds
rorb
add
lods
test
fs
sub
int3
pop
hlt
repz
arpl
jbe
push
in
jbe
mov
cwtl
dec
outsl
das
pop
data16
jl
dec
jo
ret
mov
aam
mov
test
xlat
jns
xchg
sub
inc
out
or
inc
or
push
mov
pop
sar
mov
iret
add
inc
hlt
mov
insl
sarb
mov
mov
es
imul
idivb
push
xchg
jae
xor
push
mov
sbbb
ja
pop
jmp
jge
lods
xchg
cli
mov
std
shrl
aad
int3
call
adc
jnp
sbb
ja,pn
or
mov
dec
push
repz
mov
mov
sub
inc
xchg
int
insl
rcr
pop
es
test
aam
and
int3
inc
jge
insb
sbb
add
xchg
or
fwait
jge
cmpsb
mov
mov
cmpsb
cmp
pop
repnz
out
push
inc
push
cmp
pusha
cmp
clc
sti
pushf
push
jae
dec
int3
jno
rclb
icebp
pop
cld
mov
sbb
mov
push
test
inc
mov
mov
cmpsb
cs
daa
sub
mov
pop
lds
pop
ret
insl
inc
and
or
or
mov
sti
mov
xchg
jg
jmp
andb
cmp
xchg
mov
mov
arpl
pop
faddl
cmpsl
push
cs
stos
lret
outsb
mov
fisubl
mov
mov
dec
inc
and
lret
out
ret
imul
push
and
lret
imul
ja
outsl
mov
lds
call
mov
pop
mov
xor
inc
insb
dec
jno
bound
lods
push
sub
sub
xchg
jmp
jb
push
lret
iret
sub
jne
int
xor
and
mov
std
sbb
mov
mov
sub
stos
lcall
sahf
cmp
loope
fimuls
xchg
ret
bound
adc
pop
div
inc
dec
sub
lock
xor
pop
cmp
mov
cmp
add
scas
mov
hlt
out
fiaddl
xor
pop
cmpl
stc
leave
mov
pop
cmpsl
push
loope
mov
cmp
repz
cld
mov
xor
xchg
cmc
or
dec
daa
dec
inc
mov
inc
ljmp
cld
push
mov
or
add
cmc
fldenv
js
popa
stos
jge
ficoml
incl
int
cmc
pop
pop
inc
jge
loopne
mov
push
and
std
cmpsl
icebp
mov
iret
test
xor
test
out
xor
jp
outsl
mov
ss
mov
adc
push
pop
jo
ja
mov
mov
or
std
js
xchg
ljmp
xor
into
inc
cmpsl
or
mov
fwait
sub
ja
inc
inc
in
cmp
jmp
rcll
cs
pop
lods
mov
cmp
gs
xor
add
and
xchg
mov
pop
mov
cmp
ss
push
cmpsb
cmp
into
out
mov
movsb
add
add
leave
pop
xor
ss
mov
or
stos
sahf
mov
jne
out
aas
xchg
rcl
pop
and
pop
mov
jno
cmpsb
inc
xor
out
inc
lahf
push
inc
jmp
add
jnp
mov
out
int3
cmp
out
add
adc
sbb
outsb
and
jbe
jno
std
push
add
xchg
pop
or
je
mov
outsl
insl
jo
inc
movsb
xor
stos
sbb
inc
pushf
push
pop
das
push
mov
push
push
mov
push
mov
push
inc
mov
adc
or
jle
jae
pusha
pusha
push
xor
insb
inc
xor
dec
in
jns
xchg
push
or
leave
lahf
cmp
in
mov
stos
push
push
pop
inc
movsl
and
jno
cli
mov
ja
test
sbb
inc
mov
or
sahf
sahf
sarl
pop
jns
outsl
icebp
push
outsl
std
cmp
push
or
das
or
fs
cmpsl
mov
test
jno
cmpsb
cltd
in
ds
adc
into
arpl
cmp
push
inc
out
add
ss
adc
pop
sbb
insb
push
in
xor
xor
in
pop
loopne
pushf
adc
jns
sub
ror
jne
imul
xchg
sahf
movsb
in
out
int3
test
shl
in
lahf
test
jmp
inc
mov
shlb
icebp
jns
xchg
pop
movl
xchg
sbb
sarl
fmul
sub
mov
jns
sub
lret
or
jl
pop
cltd
inc
lret
in
out
fstps
fldenv
and
inc
and
int3
sbb
jge
cmp
inc
cld
mov
inc
fmull
dec
lods
mov
ss
aam
mov
push
xchg
movsl
xor
cmp
into
pop
icebp
jecxz
pop
mov
outsb
in
push
lret
loop
dec
and
push
xorl
mov
add
ja
fdivrs
shll
mov
push
and
test
lock
push
pop
cmpsb
sbb
cwtl
add
add
and
loop
mov
js
dec
in
int3
lahf
test
inc
enter
and
nop
pop
xor
xor
inc
or
aaa
fbstp
dec
loope
ds
loop
pop
inc
pop
es
mov
pop
outsb
rorb
xchg
ret
call
lret
mov
int3
popa
fwait
rcrb
and
sbb
das
and
iret
jle
mov
pop
jg
test
adc
xor
or
push
es
mov
jne
adc
dec
mov
sahf
clc
clc
cmp
or
sub
sub
xlat
pop
add
jbe
add
inc
gs
test
lods
mov
int3
sbb
into
jge
lea
and
inc
mov
push
cmpb
mov
bound
mov
int3
fstl
jns
pop
clc
jle
mov
adc
push
in
add
scas
or
lock
iret
ja
dec
mov
jo
or
pop
mov
pop
pop
add
dec
mov
lds
adc
lock
fldl
push
orb
js
pusha
test
xor
cmpsb
test
xchg
bound
int3
push
mov
xor
cmp
sub
mov
out
pop
ja
mov
cmpsl
popf
mov
loope
sbb
int3
fsubrl
rcll
sbb
ja
leave
pushf
mov
negl
pop
cmpsl
mov
inc
sub
cmp
mov
inc
jecxz
jg
mov
cwtl
addr16
pop
mov
pop
mov
push
nop
add
pop
fists
jae
inc
or
sub
jl
and
int3
bound
popf
je
mov
xor
and
data16
adc
inc
jmp
arpl
pop
and
push
aas
dec
loop
test
out
sub
sahf
push
cmpb
js
mov
add
push
je
mov
push
pop
ret
aas
enter
mov
fcmovu
sub
mov
ret
dec
xchg
mov
pop
dec
lret
test
and
push
xchg
loope
push
cmp
pop
sub
repnz
sbb
call
call
and
cmpsb
stos
out
sbbl
xchg
dec
mov
fldenv
mov
xor
mov
aam
mov
sub
dec
mov
cmp
cmc
fsubrl
push
cmp
jnp
pusha
jge
xor
test
pop
jae
push
or
int3
xchg
xlat
inc
inc
push
iret
push
pop
cmpsb
push
cld
inc
test
mov
out
adc
pop
adc
add
jg
iret
mov
sub
sbb
js
frstor
adc
fidivrs
sub
lea
insb
add
mov
inc
rcr
push
inc
iret
ror
lahf
adc
adcb
inc
stos
sub
fwait
mov
mov
add
cmp
pop
stos
loop
adcl
and
push
loope
movb
ljmp
mov
shll
jbe
in
jmp
pop
jmp
inc
test
mov
cmc
in
js
push
lret
cmp
int3
cmp
cmp
test
addr16
dec
pop
cmp
jmp
and
push
inc
scas
and
js
or
fistl
push
mov
xchg
lcall
inc
scas
hlt
ret
push
xor
xor
cs
test
or
mov
xor
and
add
test
push
dec
inc
push
pop
adc
xor
hlt
fsts
mov
xchg
test
pop
cs
bound
sub
push
incb
subb
shrb
enter
pop
jg
pop
mov
lret
fwait
loope
pop
mov
cwtl
mov
rcll
into
jo
and
ret
loopne
scas
test
mov
mov
pushf
mov
cli
ds
jp
mov
mov
add
pushf
dec
dec
adc
fnstcw
decl
stos
inc
cmp
pop
stos
stos
pop
arpl
push
dec
rclb
sbb
out
jp
or
pop
pop
add
daa
into
icebp
fildll
dec
inc
insl
xchg
mov
ds
lds
pop
stc
lods
hlt
sub
test
mov
lcall
and
inc
loopne
jae
inc
fldl
pop
iret
pop
mov
dec
mov
ja
pop
fcomps
cmpsb
and
pop
lret
dec
cs
dec
jg
bound
loop
out
fidivrs
push
ja
adc
jg
pop
jb
mov
sub
lods
lret
push
dec
and
rcrb
or
aaa
cmp
notb
js
dec
pop
iret
jmp
test
bound
lret
outsb
dec
sarb
sti
shrb
sub
push
loope
pusha
jae
adc
lret
ficoml
test
pop
sub
add
xchg
mov
data16
xor
xchg
lock
fs
in
pop
jbe,pt
gs
ftst
mov
je
lods
ds
jecxz
out
das
adc
pop
mov
mov
push
jl
insb
inc
mov
aaa
iret
dec
pop
add
aad
imul
jmp
cmpsb
and
mov
inc
cvtps2pi
mov
inc
fs
insl
xchg
mov
dec
fmull
inc
xorb
int3
aam
lcall
mov
pop
adc
clc
mov
xchg
add
dec
push
add
ja
pop
mov
inc
pushf
jle
shrl
das
dec
clc
pop
cmpsl
lret
add
mov
mov
push
rcrb
pop
adc
jmp
stos
xchg
fstpl
mov
fwait
cmp
add
adc
int
jno
xchg
pop
xchg
or
in
inc
and
ficoms
testl
dec
sbb
pushf
icebp
or
outsb
dec
lods
int3
fdivrs
add
test
push
int3
jbe
pop
in
or
popa
xchg
pop
sub
cltd
sub
out
or
dec
jb
lcall
jle
cmp
mov
jbe
ret
int3
cltd
cld
scas
mov
cmp
fnsetpm(287
fdivl
mov
mov
push
cmpsb
cmp
cmp
subl
inc
fldl
je
push
push
sub
sarb
outsb
out
sbb
cmp
stc
mov
mov
cmp
fadd
xor
hlt
adc
pop
mov
test
int3
ficomps
fwait
call
mov
ds
rcrl
mov
movsl
shrb
jmp
and
inc
imul
into
mov
inc
addr16
iret
cmp
fstps
cmp
into
mov
push
mov
int3
lea
cmpsl
mov
adc
mov
ja
cli
jge
add
xor
mov
xor
cmpsb
ja
push
and
inc
inc
dec
or
fcoms
inc
jecxz
jp
test
pop
in
test
sub
rcr
push
mov
push
cmp
mov
inc
popa
mov
mov
pop
imul
int3
push
mov
cmp
cmpsb
or
xlat
stc
pop
inc
cmpsb
pop
inc
mov
inc
ret
sbb
mov
cmp
xchg
ret
xchg
mov
or
cmp
cmpsl
icebp
pop
and
mov
and
inc
lcall
cmc
cmp
es
mov
enter
xchg
adc
mov
dec
xchg
add
lcall
inc
push
iret
lods
push
push
inc
leave
xorl
stos
inc
sbb
orb
gs
push
js
push
mov
nop
jp
xor
push
pop
je
xchg
mov
test
inc
mov
lds
and
pop
jnp
xlat
xchg
imul
cmp
xor
push
fwait
mov
xchg
inc
mov
enter
mov
inc
cmp
cld
loopne
inc
cmpsb
jle
pop
mov
pop
pop
fdivrl
stos
ret
in
mov
adcb
push
jecxz
mov
sub
cli
pop
sbb
fwait
fisttpll
das
inc
or
sahf
pop
movsl
mov
hlt
insl
cmp
push
test
addl
cmc
dec
dec
xchg
dec
iret
sub
aaa
int3
mov
mov
popf
mov
push
jle
mov
push
dec
es
sbb
in
test
mov
or
stos
inc
ja
xchg
push
shrb
jge
pop
outsb
sbb
in
cmpsl
js
or
dec
pop
mov
xchg
xchg
ficoms
sub
sub
movsb
cmp
mov
notl
pusha
dec
pushf
enter
xlat
mov
mov
lods
mov
repnz
mov
popw
mov
insb
inc
lret
ret
push
push
push
dec
ja
pop
and
arpl
and
sub
cmp
mov
pop
dec
adc
fiadds
data16
cwtl
and
inc
lods
adc
bound
sbb
int3
fldenv
inc
cmpsb
orl
daa
cld
push
loope
xchg
inc
pop
jg
pop
lock
decb
mov
mov
leave
inc
pop
lret
iret
data16
push
pop
push
scas
nop
mov
ret
sti
adc
dec
lea
add
adcl
aam
sub
pop
mov
test
xor
add
dec
fs
mulb
lds
push
out
cmpsb
popa
nop
sub
xorl
pushf
iret
mov
sarb
dec
pop
mov
push
sbb
imul
in
mov
shll
outsb
xlat
lods
mov
lret
cmp
and
xor
cmpsb
aam
jb
sub
mov
cli
loopne
pop
shrl
cltd
out
adc
mov
cmpl
hlt
push
repnz
icebp
lock
jns
mov
adc
test
cmp
pop
jb
mov
push
mov
inc
aaa
dec
dec
or
iret
lahf
mov
pop
rolb
push
or
js
popa
test
ljmp
mov
mov
xchg
fiadds
pushf
out
pop
in
push
addl
icebp
push
pop
ja
mov
ljmp
adc
test
or
jg
push
das
push
dec
and
jns
movsb
mov
pop
or
sahf
inc
xor
push
or
add
jo
inc
sbb
jnp
std
aas
xor
cmp
pop
daa
fwait
and
jo
fstpl
int3
lret
jp
add
cmpsb
into
jmp
xor
js
popa
fsubs
leave
sbb
ds
push
sub
mov
push
shlb
mov
cmp
xor
pop
nop
dec
imul
cmp
push
pop
loope
test
fwait
int3
jg
subb
imul
repz
stos
test
int3
xor
push
andb
out
jg
leave
or
mov
mov
mov
fisttpl
addb
dec
insl
cwtl
rcrl
pop
push
ficoms
ret
cltd
add
cltd
push
call
mov
pop
outsb
dec
sbb
shrb
lds
pushf
dec
out
lock
jb
fnstsw
mov
test
push
pop
mov
mov
scas
leave
xor
dec
mov
cld
aam
xchg
fisttpll
or
add
push
inc
mov
test
dec
pop
flds
pop
js
add
sub
cmp
das
das
dec
cmp
mov
out
stc
mov
pop
dec
or
pop
fcmovne
sub
mov
jne
and
loope
jecxz
test
out
sub
rorl
enter
xor
xchg
in
cmp
out
mov
stos
mov
push
xchg
xor
in
ja
inc
cld
pop
outsl
mov
or
repz
imul
mov
int3
xchg
push
fistl
and
cmpsb
mov
dec
sbb
inc
shrb
ret
xor
cmpsb
dec
stos
mov
icebp
add
movl
lret
gs
test
dec
push
fnstcw
test
fdivrl
mov
or
jp
fcmovnbe
and
out
je
lods
pop
or
sub
adc
add
bound
inc
shrb
test
movsl
lret
mov
inc
lods
dec
in
cmp
jecxz
inc
cmp
repnz
stc
xor
int3
lret
gs
rorb
inc
in
daa
mov
xchg
nop
dec
lock
mov
insb
leave
push
fisubrs
pop
mov
out
inc
dec
pop
xchg
inc
std
daa
xor
sarb
fadd
and
jge
inc
ret
mov
mov
inc
add
xchg
cmp
jnp
dec
push
jecxz
in
pop
lock
pop
jge
cmpsb
or
inc
lcall
mov
cmp
outsl
xchg
enter
adc
mov
pop
pop
mov
pop
lods
xchg
adc
int3
mov
and
jne
cmp
jmp
ljmp
icebp
int3
aas
cmpsb
out
mov
popa
mov
inc
add
pusha
xchg
repz
push
repnz
fs
cltd
int3
ffreep
clc
aas
mov
sbb
pop
mov
inc
push
mov
add
lret
pushf
cmpsl
dec
cmpsb
repz
cmp
xchg
in
addb
push
out
sbb
shr
lods
lds
cmp
jp
or
jecxz
jbe
push
mov
loop
add
xor
cmp
inc
xor
pusha
add
and
pushf
loope
dec
int
outsb
dec
pop
add
pop
repz
or
pop
push
leave
mov
cmc
mov
add
std
loopne
addr16
push
dec
add
sbb
ljmp
int3
cwtl
push
push
mov
or
xchg
ret
je
es
push
int3
imul
sahf
das
pop
mov
roll
sub
repz
xchg
ljmp
mov
adc
ret
int3
mov
orl
add
or
addr16
stos
xor
dec
adc
aam
jmp
test
cmp
add
out
and
adc
xor
add
imulb
int
inc
inc
cwtl
ljmp
pop
stos
fcom
xchg
sahf
in
fiadds
mov
rcl
push
cmp
mov
sbb
add
mov
sub
adc
inc
or
aam
push
and
cmp
push
fs
fstpt
inc
add
cmp
mov
fld
xchg
jbe
popa
jns
rorb
push
mov
pop
mov
jp
and
rcll
outsl
int3
loop
mov
idivb
sbbb
inc
ljmp
loop
aam
jo
stc
sbb
call
js
int3
int3
adc
shrb
popa
cmpsb
xchg
int3
fs
pop
fidivrs
push
mov
stos
nop
xor
mov
jae
cmpsb
ror
es
jbe
movsl
out
inc
fisttpl
add
mov
mov
mov
mov
movsb
cmp
lret
inc
sahf
popf
or
in
pop
mov
fwait
push
out
int3
es
xchg
pop
sub
cwtl
cs
add
in
jnp
sub
pop
fsubs
cwtl
pop
jno
scas
pop
cwtl
sub
dec
push
and
insl
sub
mov
ss
cmp
idivl
cli
cmc
mov
mov
cmpsl
testb
mov
js
loop
sbb
add
mov
ret
cli
mov
or
push
incb
mov
js
lea
fwait
and
or
cmpsb
add
sarb
inc
inc
clc
shl
cmp
adc
mov
adc
icebp
idivl
scas
std
push
stos
jne
in
or
out
jo
cmp
insl
mov
pop
dec
push
mov
sahf
sbbl
mov
add
cmpsb
clc
pop
cmp
sub
mov
push
pop
cmpsb
dec
pusha
inc
data16
mov
pop
pop
sub
adc
ret
repnz
inc
rorl
or
packssdw
je
cmpsb
jne
int3
fdivs
dec
roll
jl
jmp
cld
dec
adc
push
in
sbbb
ret
mov
cwtl
pop
mov
mov
push
jae
stos
adc
sub
cltd
inc
xor
mov
clc
cli
inc
je
and
imul
push
pop
cmp
mov
pop
into
inc
push
aaa
daa
test
ljmp
clc
mov
fwait
xor
int3
fists
ljmp
data16
aad
movsl
push
mov
add
rol
mov
loop
jae
fxtract
jp
pop
lret
cmc
scas
cs
and
sbb
testb
add
cltd
repz
pop
pop
inc
arpl
scas
enter
mov
clc
push
test
jae
int3
out
inc
sub
push
test
xor
es
rorb
imul
push
mov
adcl
int3
dec
shl
ja
push
rclb
cmpsb
scas
lea
mov
inc
xor
push
jbe
pop
push
les
mov
push
sub
inc
sbb
fidivl
scas
and
aas
adc
fldl
test
add
je
ficoms
and
icebp
ja
cmpsb
loopne
xchg
fs
fimull
xchg
adcl
add
xchg
sbb
mov
popa
mov
xchg
fwait
into
push
cmpsb
sbb
dec
xor
mov
ljmp
mov
pop
das
in
int3
and
inc
dec
adc
cmpsb
ret
mov
out
lcall
inc
gs
packssdw
inc
bound
jp
add
test
call
mov
dec
jmp
xchg
mov
adc
dec
inc
pop
dec
adc
incb
pop
fsubrl
mov
popa
xor
mov
dec
jae
cltd
push
jnp
aaa
or
stc
je
and
icebp
pop
push
mov
inc
test
xchg
lret
cmp
leave
sbb
cmpb
stos
fiaddl
pop
mov
bswap
mov
insl
testl
pop
loop
inc
in
mov
pop
cmp
push
ret
fstpt
mov
and
xchg
ljmp
in
call
je
sbb
mov
repnz
int3
int
adc
cmpsb
and
or
cmp
pop
push
jecxz
mov
cmp
adc
clc
movsl
push
pusha
ss
rclb
arpl
mov
pop
cmc
cmp
jns
ror
fidivs
pop
inc
lret
cs
dec
scas
mov
inc
sbb
addr16
sbbb
mov
pop
insl
fisttpll
add
sbb
arpl
cmpsb
dec
hlt
jmp
ljmp
inc
jnp
cltd
pop
mov
push
push
mov
shll
fmuls
outsb
xchg
rorl
xchg
push
cmp
lret
inc
mov
add
imul
xchg
in
mov
xlat
jno
jp
and
adc
sbb
je
imul
insb
sub
repnz
push
cmpsb
pop
mov
ja
fsubrs
adc
int3
jbe
dec
pop
ja
loopne
cmpsb
nop
xor
mov
ds
mov
cmp
adc
cmp
cmp
out
es
mov
mov
pop
shll
stc
xor
adc
add
jge
aaa
jmp
out
cli
xchg
push
mov
filds
and
cmpsb
in
popa
pusha
daa
jne
pop
ds
loopne
clc
or
mov
add
daa
mov
aam
cmp
mov
pop
sub
stc
cltd
push
ds
or
dec
inc
fdivr
inc
ss
xchg
out
xor
fwait
cli
dec
mov
pop
dec
dec
sub
fs
lahf
dec
cli
pushf
sbb
lret
es
cwtl
cmpsb
xorl
mov
subl
sbbb
push
pop
aaa
movaps
movsb
pop
mov
pop
cmpsb
fsubs
mov
lcall
cli
inc
lret
sbb
sahf
out
and
jns
int3
ljmp
jmp
adc
pop
dec
xor
xor
pop
push
push
es
jo,pn
lods
pop
fs
daa
xchg
ja
pop
int3
jae
xchg
cmp
je
cmpsb
push
mov
cmpsl
mov
scas
movsb
inc
xchg
sbbb
test
shl
mulb
cmpsl
pop
dec
data16
push
popa
mov
mov
xchg
out
xlat
ss
fidivs
jmp
and
fdivs
inc
orl
mov
mov
pop
nop
sbb
inc
rorl
and
dec
mov
push
push
jbe
sub
cmp
mov
sub
adc
les
and
push
push
arpl
mov
inc
or
dec
inc
mov
aam
or
cmp
movsl
arpl
and
pop
ret
mov
dec
test
mov
ret
inc
mov
mov
jb
pop
or
es
jp
repnz
sahf
inc
xchg
jbe
pop
and
sbb
xchg
dec
xchg
push
mov
cmc
or
call
adc
mov
not
mov
sbb
clc
ret
pmulhuw
dec
dec
inc
loopne
adc
adc
pushf
add
ret
sub
add
inc
mov
stc
adc
jg
test
push
std
xchg
and
jl
insl
ror
out
xor
repz
repnz
push
push
pushf
fldcw
hlt
and
and
xchg
ror
test
sub
jmp
jbe
jbe
xchg
push
adc
inc
jp
xchg
jge
in
push
dec
rorl
and
pop
test
aaa
test
fstp
test
sti
and
mov
stos
pop
cmp
iret
or
call
pop
test
lods
imul
lock
push
sbb
aad
mov
jae
dec
and
inc
fwait
outsb
int3
ja
out
inc
dec
call
test
lret
outsl
scas
fxch
mov
aas
mov
enter
popf
inc
faddl
mov
ds
aas
outsb
cmpsb
dec
mov
jbe
fstl
loop
rclb
mov
xor
std
pop
in
in
pushf
cmpsb
xor
lcall
stos
cs
pop
es
jp
mul
dec
or
pop
add
cmpsl
popa
lods
scas
int3
adc
cmp
mov
in
popl
push
loop
jne
pop
jmp
cmp
and
test
mov
jmp
push
sub
jb
stos
inc
pop
nop
dec
mov
mov
xorb
jnp
loopne
xchg
call
cmc
xor
add
dec
mov
jl
outsb
cmpsb
clc
lret
pop
call
pop
mov
roll
sahf
sbb
cs
popf
mov
push
dec
mov
mov
fadd
push
add
sub
push
int3
mov
rolb
dec
test
adc
adc
jg
inc
fisubl
sbb
mov
arpl
int3
lahf
and
out
xor
arpl
inc
mov
jge
hlt
scas
or
int3
push
and
cmp
int
dec
sub
jp
mov
shr
mov
pop
fwait
shl
mov
push
cwtl
movsl
jp
nop
call
sahf
dec
mov
jns
movb
fistpl
push
xchg
inc
repz
roll
gs
jbe
cwtl
cmp
mov
dec
xchg
mov
cmp
xor
inc
mov
and
pop
ret
pusha
inc
idiv
in
mov
sbb
inc
dec
inc
mov
jae
pop
inc
lods
lea
fwait
movsb
push
test
push
sub
out
inc
lds
adcl
mov
and
rcrl
dec
pop
xlat
pop
jnp
add
dec
push
add
inc
test
sub
lock
mov
insl
fwait
imulb
pop
lret
sub
cwtl
inc
es
add
aam
mov
pop
push
jmp
push
int3
cwtl
out
test
insl
shl
xchg
int3
gs
push
jno
in
in
mov
sub
cs
inc
imul
cmpsb
mov
fbld
das
and
inc
sub
inc
ljmp
push
cmp
sbb
int3
fstpt
xor
out
mov
inc
into
mov
or
sub
cmc
jae
inc
in
jmp
pop
fcompl
int3
pushf
xchg
fcomps
das
pop
dec
ja
jo
outsb
sbb
cmp
lock
les
test
jmp
inc
out
dec
das
in
sbb
xchg
repz
pop
and
inc
and
shl
inc
push
add
xchg
jne
stos
inc
int3
adc
jns
mov
pop
pop
and
int3
aam
movsl
cmp
xor
inc
cmpsb
mov
adc
or
pop
push
ret
cmp
addl
inc
xchg
sbb
mov
test
pop
shlb
shlb
mov
add
sbb
push
int3
sub
jg
rcrb
dec
mov
adc
ficomps
or
pop
mov
movsb
push
inc
jge
mov
ret
jmp
das
xchg
js
loopne
fbld
mov
lret
sub
popf
aad
pusha
jmp
mov
dec
jecxz
inc
shr
mov
fwait
sub
shl
movb
dec
outsl
popf
push
or
pusha
cmpsb
sbb
loopne
repnz
dec
cmp
cltd
es
je
mov
insb
pop
pop
adc
inc
sbb
jle
daa
icebp
pop
push
xor
ror
mov
sub
mov
mov
jl
mov
inc
scas
ret
xor
inc
jo
fstps
loop
arpl
xchg
mov
test
mov
jmp
adc
rolb
aad
dec
sub
push
sub
xor
fdivs
sbb
in
pop
jmp
and
sub
fwait
cwtl
fsubrs
sti
xchg
ret
pop
xor
mov
mov
xor
jmp
push
call
hlt
jne
and
push
cmpsb
call
aam
xchg
stos
fcomp
faddl
test
xor
jle
imul
movsl
push
add
sbb
or
jge
fdivs
test
pushf
push
or
cli
jb
adc
pop
lret
aad
decl
in
lret
push
in
out
pushf
lock
inc
cld
pop
ret
cmpsb
je
pop
int3
add
jbe
sub
fdivrs
pop
adc
pop
inc
inc
test
cs
pop
dec
ret
fwait
pop
loop
int3
outsb
add
mov
addl
or
loope
ljmp
xchg
xor
xor
inc
adc
popf
ret
stc
or
adc
ljmp
fs
xchg
negl
and
pop
imul
mov
dec
inc
lds
mov
repnz
jecxz
test
xchg
pop
xlat
fstps
ja
fdivl
aas
stos
jo
pushl
inc
scas
sbb
pop
cmp
jo
jl
cmpsb
bound
jb
fstpt
mov
test
mov
roll
rclb
xor
lods
adc
dec
add
loop
dec
mov
pop
dec
xor
in
add
cmpsl
push
cmpsl
xchg
and
test
push
lods
pop
sub
inc
xchg
int3
adc
cmp
or
cmpsb
lods
test
cmp
or
push
inc
pushf
sub
and
and
decb
lds
lock
fwait
mov
testl
data16
fsubrs
jns
arpl
push
dec
out
movsb
rcrl
pop
xor
imulb
ret
or
xchg
sbb
lods
pop
ljmp
clc
aas
les
sbb
push
jb
ds
cmpsl
movsl
nop
push
adc
add
loopne
movsl
mov
test
loope
jecxz
int3
or
push
rorl
std
je
imul
lret
adc
or
dec
mov
leave
adc
sub
jle
inc
les
pop
or
daa
pop
movhps
inc
cmp
mulps
das
push
add
sub
std
sbb
add
cmp
in
jo
das
mov
cli
xchg
xchg
movsb
imul
cmp
xlat
sahf
inc
inc
push
repnz
push
pop
fcompl
clc
movsb
add
and
xor
out
pop
lds
pop
mov
cmp
popf
inc
leave
xlat
sahf
or
inc
andb
jl
test
sbb
icebp
xchg
inc
lea
aad
inc
pusha
pop
stos
and
jmp
js
rolb
push
and
nop
inc
xor
repnz
popf
out
lret
jge
jmp
sub
cli
mov
movsl
pusha
les
out
sub
imul
popa
push
pop
je
fcoml
push
rol
imul
mov
out
int3
insl
and
inc
sbb
fstps
cli
cmp
dec
inc
and
aad
and
outsb
jge
int
fsubr
das
ret
add
gs
mov
mov
test
jnp
dec
sub
push
into
fsts
aad
cld
mov
xchg
xorb
inc
xor
pop
shlb
inc
pusha
in
and
lea
pop
scas
and
int
clc
int3
or
imul
int
dec
cmpsb
inc
mov
jnp
decl
push
outsb
loop
push
inc
adc
jbe
xchg
xchg
sub
es
test
std
fwait
daa
sarl
jnp
cmp
fisubl
addr16
jge
sub
mov
rcr
adc
jecxz
lahf
or
cmp
leave
icebp
pop
psraw
push
adc
clc
pop
sub
ljmp
jb
push
mov
mov
icebp
cli
xor
xor
xchg
mov
and
les
xchg
xchg
shrl
inc
lret
clc
sbb
dec
inc
scas
cld
cmp
lret
fsubr
mov
jecxz
push
jg
push
ds
lds
ficomps
call
jns
fidivs
mov
mov
sub
js
inc
dec
mov
cli
je
push
sub
fucomi
mov
stc
lret
jne
add
mov
push
pop
insb
xchg
and
dec
cmp
repnz
lea
add
xlat
mov
lret
inc
std
mov
pop
xchg
fdivrs
cmpsb
inc
adc
sbb
and
cmpsb
mov
aam
jecxz
push
int3
mov
add
stc
push
push
cmpsb
or
imul
mov
aam
stc
mov
push
ss
dec
lcall
mov
inc
loop
testb
push
int3
sub
inc
movsl
pop
dec
imul
idiv
mov
mov
push
sti
insb
pop
inc
repnz
es
cmp
mov
popl
push
mov
pop
nop
int3
cmp
mov
push
frstor
mov
mov
ret
out
xor
rcr
mov
clc
stc
inc
test
push
out
rorb
pop
cmp
jg
cs
lock
xor
icebp
adc
cs
and
insb
pop
out
loopne
mov
js
pop
adcb
int3
jp
cltd
inc
scas
insl
push
and
and
fsubrs
jno
daa
inc
ja
mov
pop
stos
enter
adc
push
hlt
pushf
scas
int3
enter
cmp
das
and
add
ja
cmpsl
repnz
filds
jno
jp
aam
outsb
mov
dec
pushl
shll
fcoml
and
fdivr
mov
push
sub
insl
sub
jnp
dec
les
lahf
jo
mov
pop
call
mov
inc
mov
das
jecxz
adc
add
movsl
cmpsb
mov
out
movsl
lea
test
in
jle
arpl
test
fidivrs
push
mov
pop
adc
xlat
cwtl
popa
stos
sub
div
xor
cmp
out
movsb
fiadds
cli
mov
jbe
inc
sub
dec
movl
fcomi
ret
jl
nop
mov
call
nop
add
test
scas
dec
pusha
xor
mov
in
sbb
stos
inc
jo
adc
outsb
jmp
inc
daa
mov
into
pop
push
int3
test
sbb
xor
aaa
addr16
push
mov
imul
clc
lock
aam
dec
loopne
out
jle
movb
xchg
dec
jne
aad
stc
sub
push
adc
mov
enter
jne
mov
jne
lds
dec
ss
std
cld
push
insb
cmpsb
sahf
mov
dec
pusha
les
cmp
sbb
pop
mov
xchg
out
loop
add
aam
inc
sub
pop
xor
push
sub
dec
xchg
push
xchg
xor
movsb
aas
gs
mov
pusha
adc
incl
mov
test
sub
stos
iret
or
addr16
jle
xchg
and
jne
pop
scas
push
loop
cmpsb
pop
mov
dec
inc
repnz
popa
pushf
ret
mov
std
mov
xchg
mov
or
dec
mov
mov
addb
pop
inc
fstpt
or
push
pop
jle
mov
and
mov
mov
or
lock
ds
lock
jg
mov
inc
test
adc
xor
in
dec
ljmp
int3
push
cmp
pop
repnz
cmpsb
lcall
call
and
push
outsl
sahf
sbb
sub
insb
ds
mov
pushf
inc
add
xor
jbe
sbb
push
dec
push
les
or
test
mov
ljmp
inc
fs
aas
insb
pop
test
addb
jo
shll
imull
mov
sbb
clc
ret
cmpsb
insl
cmp
inc
push
and
sti
xchg
and
jmp
mov
push
pop
fnstenv
add
rcrb
cmpsb
xchg
push
outsl
roll
lock
and
movsb
pop
lret
jecxz
add
inc
lds
xor
test
lds
cmp
cmp
sbb
push
or
sbb
fiadds
inc
push
fadds
adc
fwait
xor
int
dec
or
out
push
test
clc
cmpsb
mov
xchg
int3
sub
push
xchg
xor
cmp
sub
int3
dec
sti
sbb
loopne
and
in
xchg
in
leave
mov
mov
mov
cmpsb
dec
add
lock
mov
sub
cld
inc
mov
jle
ds
adc
or
iret
add
das
adc
pop
lods
aad
mov
ds
call
ljmp
stos
push
mov
dec
lahf
dec
sbb
jbe
rcll
xchg
mov
repz
rorb
jle
push
mov
pop
push
jae
mov
pop
xchg
sub
cmpsb
repnz
dec
mov
lods
insb
xor
xor
repz
cli
cltd
mov
pop
mov
rcl
pop
in
add
into
xor
test
mov
icebp
out
sub
mov
mov
dec
mov
jne
inc
int3
and
ss
pop
add
cld
jmp
les
aad
dec
push
lds
movsl
and
out
lock
cmpsb
lock
inc
lods
inc
icebp
aas
fmuls
mov
add
jg
or
cmc
mov
cmpsb
adc
jecxz
out
xchg
aaa
mov
cltd
insl
rorl
jp
dec
and
ret
cltd
mov
inc
dec
movsb
insb
mov
push
add
xor
dec
mov
xchg
and
pop
jmp
xchg
out
cwtl
mov
cmp
mov
pop
pop
aad
stos
and
loopne
cli
cmp
jno
rorl
aam
ret
popa
cmpsb
xchg
fisttpl
or
xlat
jmp
mov
xchg
pop
push
adc
pushl
mov
sbb
inc
push
insl
orl
scas
adc
pop
add
xor
sub
mov
xor
cmpsb
sbb
xor
enter
inc
mov
call
mov
out
pop
sahf
andl
pop
jb
add
xchg
xor
aaa
in
jge
insb
cmp
sub
sbb
xor
sbb
scas
test
add
pop
aas
fcomps
mov
in
mov
les
loopne
or
test
lods
rcll
adc
cmc
test
push
mov
sbb
stos
outsl
push
cmp
inc
cmp
repz
push
jb
mov
mov
out
sub
cld
popf
lods
addr16
fnstenv
jne
inc
xor
movsb
and
sub
cmp
pop
sub
mov
mov
pop
mov
test
jns
addr16
jno
cmp
outsl
mov
lret
mov
in
inc
xlat
and
xor
ficoml
into
movsl
jmp
or
mov
loopne
not
inc
inc
mov
hlt
or
mov
ds
mov
outsl
pushl
cmp
sub
std
mov
dec
inc
fs
adc
xor
mov
and
mov
push
dec
mov
add
jg
stos
popf
mov
leave
pop
cmp
mov
jp
add
dec
lods
dec
and
arpl
inc
in
add
cli
push
ljmp
xor
sbb
mov
cmpsl
add
and
add
xchg
mov
fsubs
add
xchg
sub
and
or
mov
ja
inc
les
mov
filds
loop
daa
jo
mov
and
mov
cwtl
loope
es
sub
or
cld
fistpl
outsb
mov
insl
jge
out
daa
sub
sbb
lret
dec
push
daa
xchg
sbb
js
and
fbld
push
sub
pop
sub
loop
xor
and
inc
pop
mov
sub
xchg
stc
inc
xchg
cmp
pop
mov
fidivrl
repz
inc
idivl
xchg
es
pusha
or
daa
push
jg
inc
and
adc
sub
mov
mov
pop
int3
daa
aas
in
xchg
shl
pop
mov
add
shr
inc
cld
inc
cmp
mov
iret
inc
pusha
bound
fwait
jge
dec
push
xchg
jno
jae
loope
mov
mov
dec
or
ds
push
ret
lcall
out
mov
std
sbb
push
jle
iret
orb
fcoms
dec
mov
movsl
add
fildl
subb
mov
cmpsb
cmpb
push
lock
and
pop
push
jno
jno
xchg
mov
pop
xor
and
pop
inc
jg
jne
and
cltd
add
mov
test
gs
ljmp
inc
push
mov
sbb
xchg
das
push
shrb
mov
cltd
pop
scas
int3
fwait
jg
cmp
cmp
repz
cmpsl
push
pop
ret
jle
fwait
mov
mov
pop
dec
imul
add
inc
inc
xor
dec
pop
or
aaa
or
andb
pop
aad
jge
mov
aad
mov
ss
loop
mov
pusha
cmpsb
ret
pop
stos
cwtl
adc
lret
out
xlat
test
jns
cmp
mov
inc
cwtl
and
adc
cmc
mov
xchg
jge
js
pusha
pop
cmp
inc
cmpsb
cld
or
or
pop
and
and
mov
and
cmp
lock
test
jge
rcll
ret
cmc
cli
std
das
clc
out
jb,pt
mov
js
inc
mov
aaa
cmpsb
pop
sbb
jmp
xor
mov
cmpsl
cmp
pop
lret
inc
push
xchg
dec
mov
pop
dec
pop
inc
notb
insb
scas
ds
mov
adc
enter
pop
jl
jns
xchg
cmp
pop
jp
int
movsb
fdiv
in
es
imul
mov
stos
hlt
mov
popa
cmp
push
mov
pop
lcall
insb
add
inc
jno
ror
xchg
mov
mov
mov
stos
jg
xor
icebp
loope
in
inc
cmp
ss
daa
shl
inc
inc
cmp
and
inc
int
mov
ret
pushf
stos
scas
sub
int3
inc
push
shrl
push
cmpsb
out
daa
mov
hlt
inc
adc
dec
add
lret
and
dec
mov
cwtl
lret
imul
pushl
cmp
inc
rclb
bound
iret
dec
pop
push
jge
imul
stos
test
leave
mov
mov
jp
xchg
dec
lds
inc
cmp
inc
movsl
imul
pop
xchg
mov
cmpsl
out
pushf
sbb
jo
mov
imul
pushl
int3
sub
movsl
xchg
mov
inc
test
in
mov
pop
cmpsl
pop
movsb
xor
sbb
push
cld
pushf
mov
in
mov
mov
mov
pop
int3
sbb
aaa
int3
lcall
lods
xchg
cmp
fxch
sub
inc
adc
int
dec
rcl
or
sbb
bound
mov
add
pinsrw
js
lods
test
fldenv
lret
adc
dec
scas
jns
sbb
dec
push
mov
inc
jmp
movsb
repnz
cmc
inc
lods
inc
ffreep
aas
lahf
in
jo
xchg
lds
xor
inc
out
stos
cmp
rcrl
testl
aad
pop
sub
pop
out
and
int3
das
nop
fldt
sbb
cmpsb
xor
test
xlat
ljmp
out
push
cmpsb
fimull
in
cmp
cltd
dec
test
pop
stc
pop
out
movsb
cltd
sub
rol
aaa
or
add
push
dec
inc
jnp
and
in
mov
les
xchg
mov
mov
mov
and
insl
fnstcw
sub
out
icebp
mov
sub
xlat
hlt
push
sub
cmp
dec
js
mov
ljmp
mov
add
repz
push
cmpsl
mov
call
test
scas
inc
ja
dec
in
dec
into
mov
imul
add
ficoml
lret
pop
xchg
pop
sbb
sti
ja
cwtl
mov
std
push
push
js,pt
add
and
push
sbb
inc
xchg
cmc
popl
or
push
into
mov
out
pop
int3
mov
cltd
pop
inc
mov
popa
mov
fidivrl
sarl
sbbb
nop
inc
icebp
fnstsw
dec
push
pop
das
inc
jecxz
movsb
push
xchg
mov
popf
xchg
mov
sub
cwtl
ljmp
xor
test
ljmp
mov
je
mov
mov
sub
and
push
adc
sbb
insb
pop
int3
add
sahf
and
idivb
sar
cld
stc
sahf
call
mov
pop
jno
scas
jp
sahf
push
lret
add
pusha
push
addr16
mov
sub
mov
dec
mov
push
sub
cmp
pushf
std
fcomps
mov
cmpsb
int3
adc
add
shll
sub
out
outsb
pop
mov
cmp
inc
push
sahf
inc
ja
int3
nop
mov
push
mov
adc
jb
or
imul
sbb
jp
xor
xor
mov
ja
popf
mov
mov
and
dec
into
pop
add
in
movsl
dec
push
repz
mov
das
insb
icebp
outsb
data16
mov
stc
or
loop
pusha
int3
pop
test
mov
mov
mov
stos
xchg
adc
jle
shrb
sbb
and
test
lret
scas
cli
shl
out
insl
xlat
std
push
ret
mov
push
cltd
mov
xchg
dec
mov
test
jo
mov
movsb
iret
add
sahf
inc
pop
push
pop
cli
xchg
idivl
test
dec
in
sbb
cmc
movsl
enter
xorl
loope
cmp
addb
lock
test
or
sti
pusha
jecxz
lea
and
add
cmp
cmp
inc
ret
bound
dec
pop
push
adc
stos
sbb
and
test
cmpsb
mov
shrb
and
adc
xor
or
or
jge
fwait
pop
mov
into
enter
adc
test
push
push
imul
mov
xchg
repz
inc
loopne
pop
hlt
sub
and
js
int3
jge
dec
sub
lea
cmpsb
fldcw
cmp
cmp
imul
lahf
adcl
add
mov
push
outsb
test
sbb
shrb
mov
fsubrs
rcl
push
cmp
push
pop
sahf
cmc
cwtl
add
fcomp
or
cmc
int3
pop
mov
push
mov
in
in
stos
icebp
xchg
popf
inc
inc
adc
sar
mov
pop
int
cltd
add
dec
xchg
or
cli
stc
fstp
mov
cmp
jle
push
jecxz
push
pusha
int3
mov
mov
mov
loope
insb
jns
and
loopne
fisubrs
and
data16
test
fcmovne
std
inc
iret
inc
mov
clc
mov
test
and
xchg
pop
out
mov
cmpl
mov
aaa
mov
loope
xor
mov
push
inc
cmpsb
ds
sbb
jmp
lods
pop
ss
ucomiss
lret
add
mov
mov
call
in
addr16
nop
pop
sub
insb
inc
push
rorb
add
test
dec
cmpsb
xchg
pop
fadd
mov
or
inc
xchg
inc
ja
and
sub
bound
out
int3
xchg
inc
adc
cmpsb
xlat
popf
and
inc
mov
cmp
sub
out
cmp
mov
xor
imul
je
stc
scas
pop
mov
stos
jbe
lret
js
push
xor
inc
outsb
and
lods
mov
adc
daa
jecxz
loope
xchg
inc
das
cltd
add
push
jmp
dec
or
jle
lods
aaa
daa
fidivs
push
les
mov
sbb
inc
int3
aad
in
cs
push
call
inc
or
xchg
dec
mov
stos
sub
cmpb
dec
cmp
inc
adc
sub
push
hlt
push
arpl
jne
stos
dec
pop
cltd
addr16
lock
lret
sbb
outsl
jae
insl
push
mov
and
in
and
inc
mov
adc
inc
xor
and
or
mov
jno
mov
inc
cmp
add
aaa
movsb
dec
xchg
mov
stos
jmp
adc
push
in
testb
cmp
xchg
lret
push
dec
pop
pop
add
push
out
add
daa
icebp
cmp
test
mov
gs
nop
pop
adc
xor
in
xor
jmp
xchg
dec
dec
das
int
xchg
mov
sarl
cmpsb
sub
mov
jnp
shr
cmp
inc
cmp
mov
testl
loope
inc
stos
cmp
push
ret
int
and
jmp
sahf
inc
sub
js
pop
in
pop
pop
or
dec
jl
int3
cli
lret
pop
rorb
je
inc
cmpsb
mov
gs
push
pop
test
pop
mov
mov
outsl
xor
movsb
push
iret
pop
mov
and
inc
dec
jle
mov
pop
test
js
insb
jecxz
mov
adc
cmp
rclb
lahf
mov
pop
movsl
mov
clc
int3
repz
scas
push
cmpsb
or
std
fidivs
sub
filds
jb
arpl
cmpsb
push
sahf
and
jp
cmp
mov
in
andl
mov
mov
std
xor
lea
pop
mov
fstp
push
lods
inc
mov
ret
ret
dec
cmpsb
inc
rorb
loop
hlt
inc
ja
loopne
pop
xchg
dec
cmp
cmpsb
cmc
inc
ja
sbb
push
push
push
gs
sbb
and
cs
fimuls
or
xchg
out
pop
jg
push
rcrl
xlat
aam
fidivl
xor
jecxz
iret
clc
add
xor
push
fcmovne
xlat
xor
mov
jns
mov
pop
push
jae
pop
mov
or
pop
das
jp
mov
add
rep
pop
lea
mov
and
sub
lahf
and
lods
push
pop
pop
ja
icebp
sub
mov
push
xor
sub
cmpsl
adc
mov
cmp
sub
insb
mov
pop
enter
ja
movsb
mov
pop
repnz
bound
sub
arpl
dec
popa
mov
aaa
sub
lock
jne
push
fistpll
or
arpl
jl
pop
jnp
aam
or
movsb
mov
repnz
mov
push
pop
scas
jle
push
and
xchg
pop
jecxz
stos
dec
out
add
fsubrs
test
nop
mov
cmp
inc
push
das
call
mov
xchg
fadds
mov
jns
pop
pop
pop
cmpsb
imul
xchg
dec
inc
rcll
cmp
pop
mov
sbb
popa
lock
add
push
mov
pop
cmp
je
int3
push
push
push
decl
xor
inc
fildl
mov
sbb
mov
mov
mov
sbb
sub
dec
push
push
xchg
add
mov
movsb
in
lahf
aas
int3
or
into
xchg
jp
push
xor
insl
sub
add
adc
cmp
push
insb
or
add
cmpsb
add
es
lea
xor
cmp
push
in
adc
mov
sub
loop
mov
adc
jno
pop
es
fs
aam
cmp
jb
aaa
pop
pusha
and
notl
jae
mov
shrl
test
aam
push
int3
jae
xor
sti
adc
fmuls
pop
dec
in
pop
rolb
wrmsr
xor
pushf
mov
fistpl
mov
jmp
mov
lea
js
pop
inc
pop
inc
je
dec
ret
xchg
lods
pop
xchg
aam
mov
lock
rorl
mov
addl
aad
sbb
and
sub
push
mov
xor
rcr
fistpl
out
rorb
rcrw
dec
ss
cld
adc
xor
mov
cmp
mov
inc
cli
xchg
iret
xor
sahf
inc
scas
test
cs
mov
leave
cmpsb
stos
cmpsb
mov
sbb
loopne
inc
mov
mov
sti
jge
pop
adc
inc
or
xor
fcmovne
test
call
inc
mov
pop
int3
sarl
mov
aaa
lods
mov
sub
add
add
cmp
shrb
inc
lock
dec
add
pop
aas
inc
xchg
bound
adc
mov
test
aad
xchg
sbb
mov
insl
inc
adc
inc
fiaddl
lret
sub
ret
push
mov
cld
mov
jno
jl
mov
pushf
rcrl
stc
pop
shrl
adc
push
adc
data16
pop
inc
push
or
fmulp
lcall
mov
cmp
lret
ss
nop
inc
inc
pop
aad
orl
das
inc
fs
mov
inc
xchg
or
lret
mov
int3
shlb
adc
mov
ja
mov
ficompl
pop
push
pop
test
xchg
jge
lock
xchg
in
mov
mov
rorl
popf
add
pop
sarl
call
xor
mov
mov
mov
adc
daa
lock
inc
addl
addr16
icebp
repz
inc
popa
mov
cmp
inc
test
pop
push
pop
pop
pop
jle
fisubrl
cmp
or
mov
dec
or
pop
add
in
mov
rorb
cmp
inc
push
cmpsb
sub
faddp
inc
lahf
mov
and
pop
sub
stos
jae
xor
int3
cmp
jmp
lret
mov
pop
ficomps
decb
out
cmp
jbe
add
pop
lds
pop
testb
push
int
or
fisttps
xor
xor
int3
je
adc
inc
das
pop
lds
pop
cmp
imul
push
leave
mov
xor
in
rcrl
jp
shll
movsb
cld
movsl
sub
xchg
sbb
adc
inc
movb
dec
xchg
and
pop
or
inc
xor
inc
adc
jnp
inc
push
fisttpll
arpl
cmp
mov
add
mov
jne
in
lock
mov
pop
inc
mov
jbe
cmpsb
pop
movsl
lcall
xor
xor
cmpsb
inc
adc
sbb
mov
dec
js
sub
stos
jo
scas
push
dec
test
inc
dec
mov
ret
rorb
push
dec
ret
cmp
mov
sub
dec
rclb
mov
outsb
in
inc
ficoms
fdivrs
les
popa
js
cmpsl
pop
pop
or
aaa
es
sub
pop
add
mov
push
aam
add
xchg
mov
dec
add
out
iret
push
inc
sub
ret
jp
in
pop
push
inc
or
ljmp
inc
sbb
pop
call
dec
add
sub
cld
or
mov
stos
outsb
xor
push
push
lods
add
mov
push
rcrb
dec
es
lock
cwtl
jb
mov
mov
cmpsb
push
fldl
sub
or
inc
pop
jne
dec
fidivrl
inc
xor
add
fdivrs
inc
xchg
insb
test
push
pop
jae
adc
int3
cwtl
mov
add
cmpsb
das
xlat
cwtl
or
iret
inc
cld
and
movsl
test
lret
sub
pop
add
les
inc
flds
pop
inc
test
push
and
dec
fwait
mov
cmp
jo
icebp
mov
repnz
jg
xchg
mov
dec
gs
lods
xchg
stos
scas
les
leave
sti
divl
pop
pusha
int3
jp
insl
lret
fwait
xchg
pop
jb
push
xchg
into
andps
movsb
cltd
fsts
rcrl
add
pop
jl
pop
es
push
sub
int3
mov
push
insb
and
pop
lret
mov
int3
out
lea
cld
mov
push
faddl
add
pop
inc
cltd
sbb
aad
test
rclb
cbtw
push
cmp
or
pop
out
mov
repnz
jbe
pop
or
jb
add
loop
movsl
adc
dec
mov
pop
xchg
cmp
fimull
fbld
rcrl
mul
mov
pop
test
mov
xchg
pop
cmpsb
mov
mov
jb
cmc
sub
add
gs
cs
or
push
inc
daa
shlb
pop
lds
stos
out
mov
icebp
mov
sbb
mov
xor
mov
outsb
imul
push
lcall
std
xor
xor
sbb
jmp
out
push
mov
pop
movsb
int
test
jl
adc
lahf
icebp
jne
xchg
pop
or
dec
xor
fidivrs
in
cmp
adc
in
xor
shlb
loope
push
or
mov
add
push
sub
lcall
mov
pop
adc
incl
sbb
int3
jg
xor
cmpsb
xor
enter
incb
iret
xchg
mov
mov
dec
bound
push
xorb
bound
inc
dec
ficomps
or
mov
adc
xchg
insl
xchg
xor
push
dec
aaa
push
bound
push
and
aad
jge
xchg
xchg
loope
movsl
out
and
pushf
sbb
mov
mov
xrelease
inc
test
hlt
cmp
pushf
mov
fisttps
cmpsb
nop
xlat
enter
popf
test
ds
aad
fs
jnp
xor
push
in
pop
int3
xchg
xor
xor
mov
pop
mov
or
adc
jmp
cmp
insb
in
stos
jmp
les
call
mov
mov
lock
movsb
jns
call
leave
int3
test
sub
ja
outsw
sub
pop
in
bound
xchg
cmp
repnz
in
shr
js
xchg
pop
add
push
sub
int3
ds
push
imul
setle
sub
xor
mov
lods
mov
push
cmp
out
fdivl
push
mov
ret
test
jecxz
movsb
pop
pop
mov
nop
cmp
add
lds
lock
out
int3
push
xor
mov
sbb
out
lods
test
sbb
cmp
mov
in
add
adc
ds
push
cmp
xorl
push
pusha
sub
pop
pop
xor
pop
shl
sbb
mov
sub
mov
popf
jnp
mov
cli
adc
mov
mov
and
pop
or
pusha
lret
dec
mov
jp
pop
stos
push
roll
call
or
lret
icebp
adc
xorb
je
lock
cmpsb
or
leave
inc
je
in
xchg
stos
mov
or
sbbl
mov
inc
outsl
mov
mov
pop
bnd
xchg
rolb
jmp
sub
jae
jb
fwait
lds
nop
or
sbb
push
inc
mov
ss
out
cmp
stc
lahf
xchg
mov
inc
lods
inc
pop
aad
lahf
mov
dec
pop
push
enter
sbb
xchg
aaa
inc
xor
pop
icebp
cltd
dec
xchg
pop
std
mov
push
pop
fiaddl
sbbl
test
xor
std
and
mov
stos
mov
add
pop
adc
lcall
notl
xchg
mov
pop
stos
dec
call
mov
pop
and
stc
inc
sub
xchg
int3
mov
out
cmpsb
xchg
in
test
lea
fcom
push
lcall
jmp
xchg
mov
pop
loop
mov
sbbl
mov
out
xchg
mov
xchg
movsl
or
cmp
sahf
notl
imul
out
je
mov
adc
jne
dec
lret
insb
or
scas
cli
les
rcll
fyl2xp1
inc
mov
mov
mov
loop
xlat
push
inc
jg
inc
pop
inc
stc
hlt
adc
cmp
add
pushf
jmp
cmpsl
mov
fwait
cltd
ret
rorb
mov
popa
cmpsb
pushf
dec
andb
int3
xlat
int
mov
sbb
pop
sahf
jle
stc
mov
cwtl
sub
mov
and
mov
cmc
jmp
or
outsl
mov
mov
pop
test
lcall
lods
or
sti
push
in
or
icebp
inc
mov
movsb
or
sub
xchg
sbb
jle
xchg
cwtl
int3
push
inc
ret
adc
out
cmpsb
das
xor
int3
sbb
add
cmpsb
push
stos
jmp
inc
push
pop
imul
pxor
cmc
pop
in
rorb
outsb
sbb
cmc
cmp
lahf
mov
lock
add
push
or
daa
pop
or
cmp
sub
mov
rcrb
xchg
adc
scas
mov
mov
jae
sub
mov
mov
add
les
add
push
int3
sub
rclb
push
xchg
jbe
mov
xchg
ret
sub
pop
mov
data16
xchg
lock
adc
iret
jae
cmpsb
packssdw
push
inc
cmp
xchg
pop
loop
imul
pop
inc
ret
mov
cmpsb
xchg
cmp
inc
stc
adc
jmp
nop
enter
int3
xchg
lock
xchg
mov
sub
adc
mov
push
xor
xlat
enter
gs
mov
mov
hlt
jne
sahf
jb
inc
cmp
fmulp
xor
add
sbb
je
jbe
pop
dec
mov
xchg
mov
mov
adcb
jmp
es
movsl
and
cmp
mov
mov
mov
or
ucomiss
xchg
xchg
mov
pop
sub
cmpsb
neg
mov
xchg
int3
adc
add
xchg
mov
lret
lret
cld
xchg
repnz
jae
jns
lods
push
push
iret
lea
dec
dec
ljmp
iret
daa
int3
xchg
cli
mov
repz
jl
test
dec
int3
mov
dec
cmpsb
pop
cmpsl
mov
and
mov
xor
fs
cmpsb
and
invlpg
inc
sbbb
shrb
cmpsb
pop
xchg
daa
xchg
xchg
push
aaa
dec
inc
fidivl
enter
lahf
jo
inc
out
mov
dec
adc
pop
add
jl
mov
and
adc
jnp
pop
fstl
cmpsb
ss
sub
inc
dec
jp
jmp
inc
sbb
adcl
sub
adc
sbb
mov
imul
dec
inc
int3
push
dec
out
pushf
movsb
dec
mov
mov
imul
adc
addr16
fidivrl
or
dec
rcrl
mov
bswap
inc
dec
fldcw
add
clc
mov
les
fs
clc
mov
mov
out
jns
xchg
ljmp
negl
test
jb
cmp
push
repz
pushf
in
mov
jnp
aad
pushf
call
adc
iret
mov
mov
sbbb
jge
mov
repnz
mov
xor
popa
mov
inc
xchg
mov
mov
imull
pop
jnp
xchg
mov
sub
mov
dec
jno
push
lcall
xor
es
ss
sbb
in
pop
mov
fsubl
leave
punpcklwd
sbb
test
xchg
xchg
cmp
dec
inc
xor
jp
pop
cmp
mov
int3
sbb
xchg
in
dec
mov
mov
jp
push
aaa
insl
lret
iret
cmp
jecxz
fcompl
addr16
imul
xchg
sub
gs
fdivr
repnz
cmpsb
push
dec
int3
jno
and
cmpsb
in
sub
inc
data16
or
xchg
adc
int3
inc
push
fmulp
push
or
int3
sub
xor
mov
jecxz
mov
xor
jl
push
testb
push
mov
cwtl
pop
pushf
fdivrp
mov
aaa
inc
movsl
inc
in
cwtl
pop
mov
adc
xor
scas
pop
adc
iret
jae
or
sub
cmp
pop
xlat
imul
pop
push
in
lods
inc
mov
push
jae
jle
mov
test
loop
cwtl
jo
dec
push
sbbb
xorl
test
fisttpll
negb
pop
jecxz
shll
int3
lods
add
inc
sbb
pushf
and
sub
mov
les
ret
or
aas
cmpsb
addr16
ror
insb
sub
mov
push
cmp
inc
lahf
mov
ljmp
adc
int3
sarl
mov
mov
sti
lods
sub
int3
cmp
testb
in
js
pop
adc
jle
movsb
dec
sbb
jbe
test
jp
push
cmp
mov
mov
int3
inc
xor
shll
cmp
add
scas
fnstcw
push
adc
mov
aam
ret
jns
insb
xchg
pop
mov
lods
in
sub
dec
fwait
push
pusha
xorl
pop
cmpsb
in
xchg
movsb
inc
in
mov
mov
mov
mov
js
dec
scas
pop
loop
clc
dec
inc
xchg
mov
sbb
scas
in
scas
inc
mov
jg
lea
or
xor
mov
sub
adc
rorb
addl
int3
xchg
pop
movsl
test
mulb
int3
mov
test
mov
xor
aam
addr16
adc
scas
xor
sub
addr16
jecxz
out
add
pop
inc
inc
mov
inc
xlat
pop
das
stc
add
adc
loope
int3
inc
pop
adc
push
fmull
jmp
mov
inc
out
fsts
stos
adcl
pop
pop
mov
pop
imul
fcom
repnz
push
xor
mov
iret
jp
ljmp
int3
add
inc
loope
sarl
pop
sbb
inc
sbb
lret
out
out
sbb
in
popa
push
cs
jne
outsb
pop
iret
aad
push
cmc
sbb
fwait
sub
scas
jae
add
lds
xor
aam
pop
mov
cmp
in
fsubl
rcr
push
pusha
aam
mov
add
outsl
inc
es
and
pop
call
xor
int3
lods
sbb
imul
xchg
popf
inc
fwait
sbb
js
movb
mov
hlt
xchg
or
cmp
in
mov
lods
sti
add
popa
cmpsb
dec
and
movb
leave
in
pop
push
mov
mov
sahf
popf
lods
enter
push
les
jbe
pop
lret
sub
xchg
mov
or
push
mov
pop
lcall
dec
dec
and
sti
in
inc
ret
dec
dec
out
adc
int3
xor
cmpl
iret
nop
aas
orl
mov
js
lret
in
arpl
lods
jne
mov
ret
jle
lods
cmp
jno
sarl
orb
repz
hlt
imul
cmp
test
imul
adc
pushf
das
mov
pop
arpl
fmulp
and
mov
pop
imul
push
int3
call
xchg
add
sub
add
mov
and
sub
sub
ljmp
stc
not
inc
or
out
adc
imul
in
movsb
sub
lret
test
xlat
hlt
out
push
add
inc
cli
sub
mov
dec
lret
inc
fs
stos
cltd
daa
ficomps
addl
or
int3
add
scas
jnp
loop
cmp
dec
cmp
nop
in
popl
sbb
and
mov
std
xor
add
pop
and
ljmp
test
adc
mov
and
inc
cmpsb
add
and
mov
mov
aam
push
push
cli
add
cmp
outsl
stos
dec
add
inc
push
idivb
lods
mov
sbb
pop
cwtl
xchg
pop
lds
jl
sbb
mov
pop
or
push
insb
bound
push
int3
loope
jmp
mov
shl
int3
scas
pop
shl
out
push
and
test
cmpb
test
dec
cmpsb
jecxz
mov
addr16
mov
loopne
cmp
push
push
xor
push
cmpsb
fsts
jne
js
call
lret
mov
lods
in
mov
pop
test
add
inc
mov
pop
mov
js
es
pushf
pop
int3
test
int3
xor
fadds
addr16
rorl
inc
pop
xchg
outsb
sarb
fcoms
ret
pop
aaa
call
nop
mov
jb
jg
mov
repnz
ret
lock
pop
jmp
sbb
in
sbb
and
cmc
sub
jno
xchg
test
mov
mov
or
mov
lds
mov
lea
out
mov
loopne
js
test
or
inc
xchg
xor
out
int
sbb
jmp
les
and
mov
loopne
add
imul
fidivrs
mov
adc
xchg
push
shll
xchg
mov
jbe
es
push
sbb
mov
jmp
inc
push
andb
add
push
xchg
and
push
mov
dec
out
cmp
mov
pop
cmc
bound
xor
push
jmp
mov
mov
lods
mov
sarb
adc
imul
lret
ret
int3
rcr
insl
or
mov
dec
pop
add
dec
inc
les
icebp
mov
inc
test
sarl
dec
adc
push
inc
or
pop
sarl
dec
pop
fsubrl
xlat
mov
pop
xor
gs
jle
xor
adc
lock
test
fidivs
mov
int3
xchg
fisubrs
inc
movsl
push
xlat
gs
lods
dec
insl
adc
or
mov
mov
sbb
aaa
sub
push
fisttps
incb
push
repnz
adc
jmp
cmp
add
int3
and
pop
pusha
xor
xor
adc
sbb
cmpsb
stos
cmp
inc
movsl
repnz
sbb
cmp
or
sbb
or
jecxz
mov
decb
and
out
pushf
stos
push
xchg
inc
or
pop
xchg
aad
stc
stos
xchg
push
push
int3
jg
jl
out
cmp
push
mov
subb
aad
imul
jl
pop
push
orl
dec
sbb
xchg
int3
or
or
push
xchg
test
adc
pop
negb
testl
int3
push
xchg
xchg
adc
sbbl
adc
int3
jl
fsubl
pop
ret
push
jge
push
and
stos
outsb
sub
mov
lock
dec
pop
fcompl
jecxz
and
or
loopne
inc
nop
sub
cmp
inc
enter
daa
add
pop
lcall
dec
int3
sub
mov
stos
cs
xor
xchg
cli
dec
push
inc
xchg
loop
cmp
fbld
cs
std
pusha
dec
add
lret
bound
les
gs
loopne
dec
cmpsb
in
dec
arpl
int3
push
xor
in
and
sub
lret
sbb
or
or
repz
pop
jg
cs
mov
pop
mov
xor
dec
cmp
cmp
movsl
sbb
cmpsl
inc
push
mov
dec
inc
outsl
addb
test
or
les
inc
sub
shlb
aas
cmpsb
push
test
jns
inc
neg
inc
stos
xor
pop
rclb
jae
add
insb
mov
add
aam
mov
stos
dec
and
scas
fs
mov
dec
int3
pop
fnsave
inc
cmpsb
or
mov
cmp
and
push
cmc
or
cmp
pop
dec
pop
jecxz
xor
pop
int3
rclb
enter
nop
mov
outsl
shl
jne
fistpl
inc
pop
call
adc
mov
mov
faddl
xchg
cmp
sbb
push
inc
cmpsb
outsb
and
pop
in
lret
cmpl
sub
xchg
icebp
pusha
pushf
dec
adc
js
rorb
xchg
jge
lret
and
or
push
mov
cmp
lea
je
mov
and
popa
cmp
inc
pop
mov
pop
int3
leave
sbb
jne
test
jnp
ret
cmp
jbe
add
shll
movb
pop
ds
mov
jnp
pop
xor
cmp
cmpsl
cwtl
inc
movnti
add
mov
pop
in
inc
daa
xchg
sub
cwtl
xor
lock
xor
pop
push
inc
lahf
push
imul
pop
pop
int3
int
je
test
lods
mov
loopne
and
out
je
cli
stos
inc
pop
mov
push
adc
fldl
fs
fiadds
push
jecxz
imul
jle
add
pop
jmp
cmc
sbb
xor
sbb
mov
int3
fdivl
jl
mov
mov
int3
repnz
das
outsl
std
das
cmpb
stc
pop
xlat
inc
fimuls
mov
inc
and
decl
mov
aam
xor
jg
pop
jbe
xchg
es
mov
pushf
popa
inc
shlb
adc
cmp
popf
sahf
inc
jno
pop
jecxz
lods
cwtl
mov
pushf
lock
mov
test
pop
inc
int3
dec
iret
pop
push
leave
cmpl
adc
jmp
mov
mov
mov
add
xor
pop
jns
test
pushf
pop
xchg
les
aas
xor
aaa
scas
sarl
cmp
lds
stos
jae
push
mov
bswap
lret
add
mov
in
xchg
pop
sar
adc
int3
pushf
data16
adc
mov
punpckhwd
mov
ds
add
pop
inc
dec
mov
mull
jno
cmp
int3
dec
mull
push
mov
sub
sub
pop
or
mov
lahf
int3
mov
lock
xchg
mov
outsl
mov
js
loop
shll
mov
push
mov
sub
sub
fldcw
pop
sbb
mov
testb
sub
mov
pop
sbb
jno
inc
fidivrs
push
repz
xor
movsl
lahf
jb
dec
mov
push
repz
cmpsb
aas
push
sbb
mov
mov
inc
cmp
outsb
adc
inc
hlt
dec
aaa
dec
jne
mov
inc
flds
mov
rclb
pop
inc
inc
je
enter
mov
inc
pop
mov
pop
aam
fcomp
cmp
and
flds
mov
pop
jmp
mov
mov
cmp
lods
jle
cmpsb
clc
mov
insb
hlt
inc
cmc
and
push
je
jne
inc
or
insl
dec
imul
lret
inc
orl
xchg
out
xor
sti
sub
lds
pusha
mov
fdivp
sub
pop
and
roll
push
xor
push
inc
out
sarl
jno
cmp
pop
int3
mov
lods
mov
cmpsb
stc
fimull
out
repnz
jl
inc
movsl
mov
pop
sbbl
mov
lret
gs
push
clc
lods
dec
pop
jne
adc
cld
filds
jns
sbb
mov
lret
jp
jb
sbb
fmul
adcl
test
adc
mov
fistpll
jae
mov
sub
mov
jmp
lock
sbb
pop
xchg
dec
clc
or
imul
mov
dec
inc
dec
jnp
ljmp
jns
push
cmpb
pop
adc
inc
or
adcl
jae
aas
mov
fsubrp
leave
bswap
fcmovbe
scas
cmp
add
inc
les
xchg
lret
loope
je
inc
movl
jge
sbb
cmpsb
mov
sbb
mov
dec
fwait
divl
lahf
imul
adcb
lods
mov
inc
adc
sbb
mov
subl
popf
fisubl
repz
mov
add
push
dec
jae
mov
or
push
sbb
or
in
lcall
movsb
lock
loope
lret
inc
sahf
pop
and
inc
aas
int3
jp
js
mov
jne
out
adc
jb
pop
and
fldl
sub
popf
mov
cmp
jb
inc
inc
pop
mov
movsb
pop
clc
jmp
mov
out
sti
mov
pop
cwtl
mov
sbb
push
mov
fcom
int3
push
cmpsb
nop
pop
pop
push
or
ret
js
jbe
sbb
mov
scas
xchg
movsl
jge
mov
out
mov
loope
cmc
iret
inc
xchg
cli
add
pop
mov
icebp
xchg
mov
pop
sub
xchg
inc
adc
and
loop
test
nop
rol
jae
or
mov
nop
inc
push
movsb
or
adc
push
pop
xchg
dec
mov
push
in
pop
popa
inc
enter
sub
add
shr
dec
cmpsl
or
cmc
daa
pop
inc
dec
popf
add
push
add
or
popa
adc
mov
mov
out
cmpsl
mov
jno
test
xchg
jge
mov
das
inc
cmpsb
scas
insl
fsubrs
inc
sub
cs
ljmp
into
cmpsb
mov
cmpsb
in
jge
xor
test
lods
xor
and
sbb
fstp
xorl
or
sub
into
test
shll
xchg
sub
xor
test
or
imul
ret
inc
mov
loopne
testl
push
pushf
in
mov
ficoml
mov
pop
xchg
xor
inc
out
mov
xchg
inc
loopne
push
adc
sbb
lods
test
cmpb
sbb
add
lds
cmpsb
jno
cmpsl
add
or
and
fsubrl
sub
cmc
cmp
or
mov
mov
add
pop
pop
jne
mov
mov
js
mov
cmp
aam
adc
add
add
fcomi
popa
idivb
pushf
adc
inc
xor
mov
bound
sti
xor
scas
mov
loopne
mov
mov
push
in
popa
cs
xlat
mov
add
int
mov
add
rcr
ss
mov
neg
pop
jno
repz
int3
orl
jmp
aas
int
mov
mov
dec
jge
enter
dec
mov
mov
push
mov
xor
cmp
adc
cld
mov
jle
mov
ds
fnstsw
sbb
dec
cli
lahf
push
mov
pop
mov
and
lock
int3
xchg
push
cmpsb
cmp
xchg
inc
bnd
aad
aam
aam
xchg
add
xchg
jbe
or
or
and
je
xlat
stc
jmp
add
clc
mov
jge
int
lock
ret
or
out
in
mov
adc
stos
inc
inc
adc
pop
stc
repnz
mov
shrb
clc
test
inc
inc
out
xor
data16
dec
inc
cs
jnp
sbb
insb
jmp
mov
mov
pop
testb
mov
cmc
sahf
mov
int3
jmp
mov
push
push
add
fnstcw
repz
popa
insb
out
int3
xor
mov
push
xchg
std
add
mov
cli
jge
fiadds
or
or
mov
adcl
xor
test
inc
jmp
adc
int3
push
loopne
pop
jae
sti
pop
cmpsb
and
mov
inc
or
fwait
loopne
roll
inc
pop
cld
jl
in
push
inc
push
pop
jae
sbb
mov
xchg
pop
in
adc
andl
pop
adc
leave
add
popf
test
xchg
in
int3
lret
fsubs
out
sti
adc
pop
mov
adc
mov
outsl
mov
sub
out
clc
jmp
leave
stc
sub
mov
jg
int3
mov
and
repnz
pop
cltd
addr16
ss
dec
and
add
testb
ja
shlb
xor
in
jl
aad
daa
aaa
cli
mov
sarl
add
sbb
mov
add
arpl
lock
jbe
outsl
adc
fldenv
sarl
aad
and
xor
and
fnstsw
lods
je
pop
cmove
imul
fldt
rorb
mov
inc
pop
cmp
jns
jg
pop
andl
test
or
pop
pushf
xchg
xlat
loop
cmp
dec
cmp
mov
jmp
mov
cmc
mov
data16
int3
fsubrs
and
mov
adc
insl
mov
int3
mov
xchg
cld
mov
jo
add
jecxz
shll
ja
mov
push
cmc
mov
and
cli
sub
push
cmpsb
mov
inc
mov
inc
xchg
jne
mov
rorb
and
pop
cltd
mov
faddl
or
fcoms
aam
fistps
xor
xchg
ja
popa
test
fisubrs
or
outsb
fsubr
push
xchg
int3
inc
adc
test
sub
inc
mov
aam
in
jb
outsb
int
jmp
push
cli
and
add
pop
shrl
add
mov
or
test
outsb
loope
into
mov
inc
lret
cmpsb
pop
pop
es
clc
mov
lea
pop
pop
cmp
and
sub
add
lcall
in
cmpsb
iret
dec
push
lea
xchg
ret
cmp
add
das
imul
fldcw
add
int3
enter
flds
mov
mov
dec
mov
sbb
bound
xor
cmc
pop
mov
adc
int3
dec
jmp
fdivl
sbb
xchg
push
int3
inc
rcl
push
loop
mov
sti
out
inc
inc
gs
sbb
lock
push
int
dec
lret
or
sub
adc
ja
sbb
sbb
xchg
adc
cmpsl
daa
xchg
cmpsb
stc
cli
in
cmp
fldl2t
dec
ja
insl
repz
out
fidivrs
cmp
stc
pop
data16
pop
adc
mov
inc
int
fs
and
pushf
int3
jge
add
xchg
sbb
inc
jmp
xchg
jne
and
add
cmpsb
cs
mov
lahf
jg
mov
mov
les
bound
dec
sub
insb
sbb
cmpsb
rclb
pop
jno
outsb
in
sarl
sub
das
in
xor
pop
enter
bound
jmp
loopne
cmpsb
das
sbb
in
dec
lcall
test
lret
push
jle
scas
adc
jae
dec
pop
push
fcmovu
movl
pushf
es
cmpsb
jae
jl
pusha
mov
in
shrl
sahf
test
push
or
mov
rcr
jmp
cmp
mov
fists
cltd
add
fisubrl
jb
mov
fstpt
aaa
xor
jb
pop
inc
jle
arpl
sbb
mov
push
mov
push
adc
pop
test
inc
sbb
mov
push
push
xlat
inc
push
in
std
int3
stc
stc
loope
test
iret
clc
xchg
xorb
and
fdivr
enter
inc
fucompp
test
inc
push
mov
and
or
push
test
fisubrs
mov
int3
fcmovbe
insl
mov
xor
xor
lcall
pop
add
inc
push
fidivrl
hlt
out
pop
movsb
imul
aaa
sbb
aam
inc
dec
jl
and
es
dec
push
sbb
roll
inc
pop
mov
rcrl
cmp
int3
mov
cmpsb
sub
enter
ds
sub
jne
jo
mov
mov
push
into
daa
jl
xchg
in
xor
xchg
pop
cmpsb
in
scas
or
inc
pop
xchg
inc
mov
and
jne
cmpsb
mov
es
enter
and
js
and
jns
or
push
push
je
sahf
cmpsb
mov
pop
xor
cmp
mov
mov
add
pop
adc
push
in
addr16
push
xlat
dec
mov
cld
sub
pushf
inc
aaa
pop
push
jae
adc
mov
pop
dec
lds
leave
pop
pop
fisttpll
test
inc
adc
movsb
inc
iret
ja
invd
pop
movd
push
jecxz
in
out
mov
pop
cmpsl
push
inc
insb
insb
aas
xor
hlt
mov
xchg
fs
mov
imul
cmp
loope
inc
mov
rolb
cmpsb
out
adc
shr
mov
sub
inc
lea
cmp
out
outsl
hlt
jns
dec
mov
cmp
xor
fwait
and
inc
inc
cmp
cmpsl
jns
inc
aaa
int3
orl
inc
mov
test
cmp
movsb
xor
cs
into
test
aad
inc
mov
sbb
mov
les
xor
push
lea
mov
popf
popa
iret
inc
mov
push
orb
lock
pop
int3
jp
movsb
aas
mov
sub
fsubr
pop
into
xchg
leave
adc
test
sbb
ja
pop
xacquire
divl
sub
leave
rorb
fwait
outsl
in
js
rorb
enter
mov
mov
jg
jmp
or
sahf
jp
icebp
loopne
ficompl
sub
pop
inc
stos
shrl
popa
pop
lods
nop
pop
int3
dec
sbb
pop
lock
cli
lcall
push
pop
mov
ljmp
xchg
sub
pop
ret
adc
cwtl
pop
mov
mov
push
pslld
outsl
fstpl
pusha
leave
push
add
xchg
inc
mov
add
insb
shlb
mov
pop
sub
inc
dec
pop
cmpsl
push
pop
xlat
fcos
jl
jb
ret
pop
mov
out
pop
ds
dec
lea
lret
and
addr16
test
jecxz
push
mov
test
mov
pop
mov
xchg
inc
cmp
out
mov
pop
pop
jb
out
rorb
cmp
clc
shrb
lods
and
insl
mov
adc
lds
jl
ja
out
lea
jle
ds
ss
push
adc
adc
and
inc
mov
hlt
aaa
pusha
push
mov
dec
add
or
jb
adc
imul
mov
adc
ljmp
int
mov
xchg
dec
fcompl
xor
mov
lret
cmp
lock
jl
sbb
fisttps
mov
mov
in
mov
mov
mov
xchg
lcall
mov
cli
sahf
mov
push
xchg
xor
adc
lret
lret
jmp
stos
dec
mov
subl
pop
xlat
outsl
decl
es
cmp
movb
arpl
cmc
jge
cld
mov
cmpsb
sbb
test
adc
fcmovne
xchg
xchg
sub
movsl
std
xor
jo
sbb
pop
xchg
repnz
xor
pop
es
insl
push
cwtl
pop
cmp
ret
inc
xor
test
sbb
pop
data16
mov
js
lock
inc
imul
sbb
dec
xchg
jge
pop
add
xor
mov
push
inc
inc
mov
jmp
xor
mov
js
inc
enter
mov
movsb
out
sbb
adc
inc
xor
test
dec
add
pop
mov
es
int3
add
cmp
adc
lcall
adc
repz
int3
arpl
inc
push
ffreep
mov
dec
xchg
pop
out
in
mov
int3
fnsave
std
aaa
ds
data16
lods
stos
dec
les
aam
neg
in
inc
test
ljmp
add
add
je
xchg
ret
sarl
imul
lods
dec
inc
dec
jmp
adc
and
test
inc
out
mov
mov
mov
out
sub
js
add
cli
stos
inc
icebp
and
xchg
sbb
fcoml
mov
jne
les
xor
outsb
sub
inc
les
or
outsb
dec
mov
cmp
sub
sub
repnz
imul
pop
pop
jnp
xchg
xchg
inc
add
or
cmp
mov
dec
les
jmp
test
es
mov
push
lods
sub
mov
sub
icebp
out
pusha
and
cmp
cmpsl
mov
repz
pop
mov
hlt
roll
leave
in
out
adc
es
fisubl
xchg
cld
addr16
push
addr16
roll
fstpt
push
cmp
push
and
push
andb
cs
aam
int3
scas
jb
xchg
adc
pop
fwait
mov
stos
dec
int3
and
xchg
and
pop
cmpsb
push
cmpsl
jno
fsubr
in
inc
hlt
in
push
es
lods
xor
or
stos
push
adc
jns
repz
jle
mov
je
adc
inc
rol
inc
xchg
mov
xor
sbb
negb
inc
icebp
popf
xchg
loop
cwtl
leave
mov
fs
movsl
mov
xor
add
jl
and
cmpsb
dec
or
ljmp
fsub
inc
sub
pop
and
insb
mov
mov
sub
or
cmpsb
mov
lock
cli
fstp
es
jbe
xor
out
les
cmp
and
jecxz
cltd
stc
mov
cli
xor
inc
fcomps
or
mov
xor
sub
dec
popa
enter
shlb
arpl
pop
call
pusha
sbb
popf
or
mov
add
adc
sbb
sti
mov
adc
stos
inc
aaa
enter
cmp
push
jmp
mov
push
les
mov
lds
push
jb
fmuls
imul
int3
inc
xlat
arpl
dec
pop
cmpsb
pusha
fildl
out
hlt
or
adc
mov
or
adc
jb
sbb
sahf
cmp
pop
ret
nop
mov
ret
cwtl
add
mov
xchg
int3
int3
stos
test
stos
mov
mov
pusha
ljmp
loop
outsb
fucomp
stos
adc
dec
fdivr
outsb
adc
scas
sbb
mov
jns
insl
mov
int3
roll
daa
sub
mov
mov
inc
fiadds
pop
shr
cmp
or
lock
pop
dec
ret
inc
pop
les
xchg
inc
push
test
sarb
xchg
inc
fs
fildl
adc
popf
jge
in
sarb
sti
fnstcw
pop
sbb
lods
jae
test
push
lods
pop
jns
in
mov
inc
jae
jmp
les
add
or
xchg
xchg
std
inc
imul
rcll
ljmp
int3
shll
jns
sbb
mov
andb
inc
insl
mov
out
mov
shlb
dec
lds
addb
pop
addr16
and
int3
adc
rclb
out
pop
mov
sub
icebp
sbb
arpl
lahf
dec
push
jae
mov
inc
push
ss
xor
iret
cmp
into
xor
mov
xlat
outsb
dec
sub
mov
jns
aas
fcomp
jno
ss
sub
popw
add
mov
lods
mov
out
mov
or
pmuludq
mov
xlat
lret
fwait
lea
push
jnp
lahf
jl
jmp
add
sbb
and
jne
ss
into
xchg
mov
bound
pop
loopne
mov
int3
pop
xchg
lods
decl
pushf
dec
in
xchg
imul
inc
push
imul
rcrb
dec
fimuls
mov
test
or
adc
xlat
mov
or
daa
pop
jle
insb
adc
pop
stc
in
and
mov
xchg
cmp
mov
and
push
or
push
cvtps2pi
push
jae
adc
mov
inc
push
fldcw
mov
dec
add
test
xor
loopne
and
jb
pop
je
stos
int3
sarl
adc
xor
pop
addr16
xchg
mov
push
sub
pop
inc
scas
mov
and
pop
lahf
or
cmc
pop
ds
pop
push
pop
xchg
ss
fildll
sub
push
scas
xor
push
xchg
fs
pop
ja
add
int3
ljmp
lahf
mov
xchg
into
mov
fidivs
sbb
movsb
xor
inc
sub
aam
mov
sub
jp
daa
jmp
popa
cmpsl
jns
ljmp
lret
xor
push
pushf
mov
xchg
sbb
addb
push
cwtl
jb
cmpsb
xor
push
lea
mov
inc
add
mov
push
adc
xor
lods
cmp
popf
subl
in
aas
sbb
pusha
push
and
int
mov
and
int3
icebp
sahf
out
mov
fistps
dec
dec
adc
sbb
out
cltd
xor
mov
fdivrs
sbbl
mov
mov
repnz
push
push
dec
gs
stc
aad
flds
mov
adc
adc
sub
js
cmpsb
leave
popa
enter
dec
testb
push
sub
jns
or
sahf
ret
and
idivl
aas
xor
cmp
xchg
js
js
pushf
pop
push
aas
popa
sub
cmp
lock
mov
xor
fcmovnb
adcl
jne
insb
xchg
or
cmpsb
aas
enter
jl
sub
and
xor
xchg
inc
int
mov
insb
arpl
and
inc
jnp
adc
mov
cmp
test
ds
jno
int3
andb
pop
lock
xchg
xchg
cmc
or
imul
cmpsl
mov
adc
in
mov
or
mov
add
cmpb
mov
jo
mov
cmp
xlat
pusha
mov
repnz
popf
dec
fcmove
sbb
mov
jmp
inc
cmpsb
lock
loopne
jmp
push
pusha
mov
outsb
cmp
aam
ds
mov
mov
dec
jnp
ss
mov
insl
repz
push
fistpl
shrb
enter
sub
cmpb
mov
scas
std
shll
loopne
pop
adc
test
ja
jbe
inc
cmpsb
sub
ret
mov
jne
fwait
arpl
insb
pop
sub
aad
dec
adc
lods
and
sbbb
dec
add
ret
xchg
int3
hlt
sub
fcoml
sub
add
rorl
mov
aas
iret
pop
dec
fistl
jbe
rorb
outsl
into
mov
int3
test
pop
les
push
clc
jns
ljmp
mov
pop
pop
push
rcr
or
int3
pop
xchg
outsb
sbb
leave
pushf
fidivrs
les
pop
rcrl
dec
repnz
rcrl
xchg
xchg
int3
jo
mov
push
je
mov
pop
fstpl
leave
clc
jb
int3
mov
mov
push
hlt
jnp
cmpsb
in
sbb
fbstp
test
dec
inc
mov
mov
lds
das
pop
mov
pop
pushw
shll
push
pop
or
push
cmpsb
int3
aas
iret
or
addr16
movsb
leave
pop
test
mov
rcll
add
sti
loope
and
icebp
rorl
cltd
in
test
lret
mov
inc
std
rclb
in
cmpsl
pop
pop
mov
out
sbb
in
int3
in
comiss
retw
inc
xchg
fisubrl
stos
inc
adc
addl
dec
int3
lcall
inc
gs
int
dec
or
test
inc
jbe
jmp
int3
mov
lods
fstpt
jnp
leave
mov
or
int3
pop
push
rolb
rcl
sub
pop
ret
popf
dec
dec
insb
popf
jbe
inc
je
and
sbb
in
mov
fdivrs
int
jle
jnp
jge
addr16
movsl
pop
lods
lcall
lea
popa
pushf
inc
sub
fsubr
mov
inc
pop
mov
mov
int
cmp
cmp
int3
push
pop
clc
scas
not
cmc
call
cmpsb
push
or
mov
sub
mov
enter
mov
mov
lea
push
int
stos
mov
dec
sbb
push
ror
mov
es
sub
cmpsb
push
inc
insl
mov
inc
xor
es
inc
mov
xchg
pop
mov
sbb
imul
sub
inc
push
adc
scas
and
pop
mov
lahf
and
int3
mov
cmc
lods
mov
loopne
cs
loope
daa
inc
xchg
pop
movsb
faddl
cmp
mov
loopne
enter
xor
xor
or
push
push
iret
int
push
mov
push
stc
inc
push
aad
adc
dec
nop
int
dec
pop
and
out
push
pop
movl
les
leave
lods
add
or
adc
pushf
outsl
loope
pop
jge
adc
ds
int3
insb
subb
ret
and
dec
imulb
xchg
pop
xor
mov
dec
inc
sbb
enter
push
flds
or
mov
lahf
mov
movsl
rcll
pop
sub
sub
out
incb
adc
or
in
pop
mov
ret
mov
roll
jbe
lret
test
imul
cs
pop
pop
push
stc
mov
enter
frstor
mov
popa
stc
and
xor
add
jl
mov
fwait
lds
cmpsb
mov
inc
or
dec
inc
add
push
mov
add
and
lahf
add
mov
sbb
adc
xor
int3
jmp
inc
bound
roll
adcb
popf
jecxz
cmpsb
dec
push
add
ss
sbbb
cmp
out
cli
mov
jp
jl
adc
add
popl
and
dec
stos
sub
shrl
aam
test
ficoml
mov
inc
and
sub
push
shl
push
xchg
inc
fbld
pushf
negl
lcall
add
xor
inc
outsb
sbb
mov
in
pop
mov
fimull
leave
dec
stos
rclb
dec
rcrl
cli
xor
mov
mov
cmp
repnz
ss
lret
in
mov
enter
and
ljmp
pop
clc
adc
xchg
mov
push
jmp
adc
je
pop
cmp
adc
adc
xchg
cmp
xchg
jo
xor
pop
inc
push
pop
jae
outsl
das
inc
pop
mov
ds
jl
nop
lds
pop
ljmp
loop
ret
ret
and
jns
push
cwtl
in
enter
push
sbb
or
repz
cwtl
mov
in
mov
mov
std
jp
mov
pop
loopne
push
jle
sub
jle
mov
mov
fsubrp
lret
in
cmp
aaa
adc
hlt
sub
jmp
pop
or
mov
clc
xchg
mov
push
movsl
mov
sub
push
sub
mov
inc
inc
std
adc
mul
cmp
mov
xchg
ljmp
or
jge
cmpsl
fisttpll
mov
insb
add
mov
cmp
xchg
rcr
jo
aad
xor
inc
movsb
xchg
paddq
mov
sub
push
orl
sub
mov
jae
loopne
fcmovbe
xor
sub
jmp
mov
push
sahf
or
push
inc
stc
imul
mov
aaa
add
xor
dec
fsubs
repz
push
sub
mov
lock
cmp
in
cmpsb
stos
push
fistps
stc
fsubs
clc
les
dec
test
dec
dec
pop
add
and
and
mov
inc
xor
in
cmp
imulb
fcompl
pop
jl
inc
pop
pop
sub
scas
or
aam
inc
push
call
mov
jns
sbb
ror
or
sbb
mov
test
andl
inc
pop
pop
lds
popf
imul
pop
fnstsw
cmp
mov
jl
sub
pop
push
mov
insl
fcmove
xchg
jmp
jo
ficoms
xchg
mov
repnz
inc
inc
shll
sbb
aad
pop
in
and
cmpsl
mov
xor
rcrb
sarb
cmp
pop
incb
cmp
lret
inc
in
pop
mov
in
addr16
adc
aam
xor
imul
xor
mov
data16
xchg
mov
xchg
jmp
dec
cwtl
aad
xor
push
repz
pop
insl
cmp
pop
aam
xor
cmp
cmp
out
ds
aad
sub
dec
decw
lret
xor
icebp
lcall
jne
push
xor
out
adc
out
pop
bound
sbb
sahf
add
or
rorl
into
pop
push
jmp
dec
mov
addb
pop
adc
add
out
testl
inc
push
cmpsb
aas
aam
pop
xchg
scas
pop
loop
mov
cmc
cmp
in
mov
leave
inc
je
lock
xchg
dec
sbbb
out
xor
mov
push
mov
jns
lcall
js
addl
je
or
fldl
push
inc
inc
jmp
jbe
fisttpll
mov
cs
xchg
std
xchg
inc
jbe
mov
lret
pop
and
sbb
inc
flds
subl
mov
lcall
push
out
cmpsb
mov
cmpsb
adc
sbb
aad
das
mov
mov
xchg
mov
fldenv
pop
lcall
mov
and
xchg
lcall
xlat
outsl
enter
sub
adc
add
test
jns
popf
mov
fs
mov
pop
mov
int3
aaa
xchg
inc
xchg
nop
cli
cmpsb
mov
adc
cmp
addr16
xchg
mov
ret
dec
lahf
jno
and
iret
test
pusha
jmp
cmpsl
xchg
movsb
mov
fadds
int3
jne
in
insb
addr16
aad
cmp
sbb
fmuls
or
xchg
jns
lea
ret
popl
pushf
cs
test
loopne
push
loop
inc
xchg
enter
loope
adc
or
das
pop
jle
test
jl
sub
clc
ret
fcoml
fwait
pusha
mov
loopne
inc
pop
sbb
mov
mov
pushf
repnz
jbe
mov
shll
mov
mov
xchg
sbbl
mov
mov
xchg
sarb
sbb
add
subb
mov
pop
mov
int3
mov
lods
push
sub
mov
inc
int3
inc
stc
mov
mov
sbb
cmc
lds
xchg
in
out
xchg
mov
sarb
je
int3
fbstp
lods
jecxz
dec
mov
inc
shl
inc
mov
sub
aas
daa
outsl
xchg
fs
push
lret
mov
push
xchg
adc
int3
cwtl
xchg
lret
sub
xor
inc
mov
cmc
sbb
lret
jecxz
add
sti
loop
daa
cltd
mov
cmp
jl
jnp
lret
adc
fstpl
xorb
scas
int3
jbe
sbb
mov
dec
xchg
nop
inc
call
and
andl
inc
scas
mov
mov
adc
jle
pop
stos
sbbb
ror
movb
inc
stos
dec
push
mov
adc
mov
gs
mov
xchg
inc
push
inc
movsl
or
xchg
jmp
lret
jno
pop
xlat
inc
clc
nop
daa
dec
lret
rclb
cmpsl
cmpsl
mov
enter
aas
sti
scas
xchg
loope
inc
fs
out
scas
xchg
inc
add
jns
mov
sti
popf
jns
fistpll
insl
fadds
ja
shlb
cmpsl
test
add
xor
scas
pop
or
or
js
fimuls
cmpsb
adc
outsb
daa
mov
scas
dec
iret
jmp
xor
js
cmpsb
jne
mov
jecxz
sti
inc
cmp
clc
push
adc
scas
pop
and
divb
pop
inc
push
adc
pusha
aam
stos
movsl
imul
push
pop
fmull
mov
and
pop
cmpsb
ja
into
enter
mov
mov
pop
into
icebp
mov
sbb
adc
cmpsb
push
add
enter
jne
pushf
fs
xor
inc
xor
adc
test
stc
int3
out
inc
ja
int3
dec
das
cmpsb
std
mov
ror
sbbl
adc
ret
lcall
pop
repnz
dec
aam
cmpsb
pop
xchg
dec
xor
ret
mov
hlt
shlb
test
pop
rcll
push
dec
jg
mov
std
or
loope
push
and
fistpl
icebp
mov
sub
mov
outsl
popa
jecxz
or
jae
popa
cmp
cs
push
push
jecxz
bound
movsb
jae
enter
xchg
nop
add
and
push
inc
push
inc
mov
fcompl
jmp
call
dec
inc
in
test
pop
rolb
mov
into
xlat
sarb
call
mov
out
sti
pop
jno
jge
stc
in
rol
addl
cwtl
in
mov
xchg
xor
mov
cmp
sbb
mov
popf
imul
and
xchg
inc
jg
sub
mov
inc
mov
scas
nop
inc
or
out
fdivrs
adc
or
out
sbb
imul
in
and
inc
push
mov
jae
pop
dec
insb
cmc
push
jb
sbb
int3
int
stos
das
jmp
frstor
fimuls
aam
xlat
push
or
and
dec
dec
mov
mov
pop
insb
jb
mov
out
mov
arpl
push
or
sbb
jge
mov
nop
ja,pt
stos
int3
mov
orl
std
pusha
and
mov
or
cmp
xchg
mov
ljmp
push
leave
roll
fadds
pop
out
jno
lock
push
push
outsb
dec
scas
dec
imul
jae
ja
fidivs
add
mov
mov
pop
arpl
popa
and
jns
je
in
push
insb
mov
inc
enter
shrb
mov
roll
and
jae
cmpsb
nop
jg
repnz
sub
inc
inc
clc
pop
jp
enter
pop
jmp
add
sub
inc
je
push
insb
ss
test
lods
stc
fwait
scas
mov
stos
sbb
dec
aam
xor
sub
call
push
mov
addl
mov
test
mov
cmp
stos
icebp
sub
stc
lret
xor
add
xlat
fcompl
inc
inc
mov
int3
push
adc
mov
sbb
xchg
sub
int3
xor
popa
cld
mov
int3
cmpsl
cmpsb
jb
push
mov
xchg
push
out
sbb
add
mov
mov
shlb
arpl
int3
pop
imul
mov
into
push
andl
xor
inc
push
cmpsb
adc
pushf
addr16
cwtl
sbb
adc
int3
jbe
mov
or
xchg
fwait
test
sub
sub
push
jmp
pop
filds
scas
xchg
data16
push
arpl
int3
mov
lret
rep
mov
cmp
test
out
and
imul
mov
mov
sahf
lods
fmulp
lcall
xor
xchg
cmc
cmp
add
popa
popf
fdivr
mov
loopne
sub
in
repz
cmp
addr16
cltd
fcoml
adc
xor
jo
xor
mov
jbe
out
or
mov
movsl
push
aaa
push
inc
mov
sub
inc
dec
sub
rcll
xor
jb
adc
jnp
int3
pop
fcmove
sub
sbb
addr16
inc
pop
cs
adcb
movsb
nop
stc
int3
pop
ficomps
repz
repz
sub
or
adc
hlt
adc
les
and
fs
mov
fldcw
mov
les
nop
push
jbe
fiaddl
mov
fsubrs
mov
inc
insb
adc
lds
xorl
pop
imul
loope
cmpsl
dec
fstpt
inc
jp
loop
push
stos
or
iret
clc
insl
jecxz
and
imul
jne
jl
push
pop
push
aam
loop
in
sbb
fwait
cmc
sbbl
mov
add
hlt
icebp
ss
pop
jecxz
lcall
or
add
cmpsb
repnz
adc
in
insl
mov
sub
mov
std
hlt
sbb
pop
dec
test
ds
scas
insb
cmpsb
sub
adc
pushf
pop
scas
xor
adcl
clc
or
mov
inc
test
inc
stos
fistpll
addl
pop
pop
push
sahf
inc
xchg
mov
aam
mov
cmpsb
and
inc
jbe
mov
mov
inc
dec
push
push
pop
iret
add
sub
lock
adc
cmp
pop
xchg
pusha
jle
mov
cmpsb
jg
jne
push
sahf
lods
add
xor
inc
loope
push
sub
cmp
and
loopne
mov
cmp
jne
or
mov
int
lcall
push
cmpsb
les
inc
fs
xorb
or
fwait
out
mov
or
outsl
mov
pop
mov
cmp
mov
dec
ljmp
lret
mov
rcrl
xchg
adc
rclb
sub
and
jmp
imul
decl
dec
jmp
repnz
bound
inc
dec
mov
and
pop
push
test
xor
dec
fsub
int3
and
fistps
js
xor
movsl
inc
cltd
jecxz
or
add
aad
fcmovb
loopne
mov
imul
enter
sbb
add
mov
cmp
jmp
inc
cmpsb
lret
mov
jmp
cs
ret
xchg
mov
mov
mov
lret
mov
ljmp
mov
mov
dec
xor
stos
jb
cli
scas
sub
adc
mov
repnz
call
add
sub
and
pop
and
sub
fidivrs
mov
adc
addr16
ja
and
jo
xchg
push
stos
sbb
call
cltd
dec
mov
dec
popf
icebp
lods
pop
adc
ss
les
cmp
movsb
mov
or
lahf
cmp
jnp
leave
lods
dec
inc
push
xor
loopne
js
iret
rcrl
jae
pop
xor
adc
cmpsb
push
cwtl
aam
mov
or
jbe
adc
cmpsb
sub
test
mov
or
mov
scas
cmc
cmp
adc
into
fwait
sbb
fcmovnb
in
lds
int3
les
jno
ret
inc
cmpsb
sbb
xor
mov
aas
xchg
cmp
inc
add
jle
es
jl
loop
add
inc
in
loopne
xrelease
jmp
test
int3
clc
fdiv
movups
stos
test
stos
sbb
repnz
pop
pop
add
pop
cmp
cltd
xor
pop
or
imul
notb
dec
cmpsb
ds
fcom
mov
cmovge
out
gs
sub
push
mov
and
add
out
adc
aad
mov
sub
inc
mov
roll
in
sbb
inc
xor
ret
mov
or
pop
mov
movsb
fldcw
or
pop
or
fists
xchg
inc
sbb
imul
lock
jne
add
nop
inc
shl
jns
cmpsl
je
pop
pop
mov
scas
sub
pop
loopne
int3
push
push
ljmp
cltd
out
jmp
mov
int3
insl
lcall
lds
icebp
int3
and
fiaddl
and
mov
clc
mov
das
jge
xchg
adc
insb
loopne
mov
xchg
mov
inc
movl
in
jb
cld
and
ja
subb
sbb
dec
push
pop
cmpsb
pop
pop
push
sbb
imul
out
xor
roll
daa
loope
ret
fdivl
add
mov
mov
pop
and
and
daa
adc
int3
mov
insl
in
push
pop
into
mov
lock
out
push
orb
mov
and
or
ds
mov
adc
pushf
arpl
out
stc
outsl
sbb
pop
aaa
loop
scas
icebp
int3
mov
mov
test
ja
xor
ljmp
std
sahf
push
fdivs
ret
inc
fs
dec
test
add
sti
and
cmp
mov
inc
xchg
cmpsb
or
xor
add
or
inc
repz
into
aaa
xor
aad
push
push
add
mov
dec
sub
pop
mov
mov
ss
fdivr
test
es
xor
std
jge
sub
test
out
out
int3
adc
mov
mov
mov
mov
jne
loopne
sub
inc
pop
inc
xor
iret
xchg
or
dec
nop
inc
adc
mov
and
mov
inc
sbb
mov
pushl
andb
popa
mov
adc
push
cld
fimull
mov
jne
popa
sbb
inc
imul
insb
xchg
ja
sbb
pop
pop
jge
inc
and
inc
pop
add
push
push
adc
pop
lds
lret
push
add
inc
pop
pusha
stos
lods
pop
cmpsb
jns
mov
loop
jle
push
push
testb
sbb
mov
sbb
dec
push
mov
push
mov
imul
mov
sbb
sbb
dec
bound
pop
lods
xor
mov
inc
mov
into
sbb
js
shlb
sarl
push
cmp
cmp
hlt
xorl
mov
mov
dec
lock
jae
dec
mov
push
mov
mov
add
and
inc
mov
cmpb
mov
mov
inc
sbb
pop
lret
cmp
lds
xor
psrld
or
push
sub
cmp
mov
cmpsb
inc
pop
cmpsl
nop
cmc
add
xchg
sti
adc
sbb
insb
ljmp
add
sahf
aas
inc
mov
pop
or
hlt
cmp
pop
outsb
data16
jg
in
or
mov
ja
and
adc
sbb
movsl
mov
lret
cs
mov
mov
int
adc
ja
mov
cmpsl
adcb
addl
std
in
sub
stos
pop
fcomps
inc
popl
sbb
xchg
jne
jl
jp
fistps
nop
out
dec
xchg
mov
push
and
xchg
xchg
sub
jg
push
sti
cmp
das
xchg
and
in
in
enter
fcmove
jnp
in
add
ret
xchg
jnp
mov
jp
movsb
jl
mov
int3
jno
inc
subl
or
or
jb
mov
repz
arpl
cmpsb
adc
shll
int3
pop
jg
rcrb
cmp
mov
inc
outsb
cvtpi2ps
and
add
pop
xchg
ja
in
dec
sbb
xchg
ds
mov
mov
lods
nop
sbb
cmpsb
inc
int3
jnp
and
cmc
movsb
test
sub
icebp
mov
or
jg
inc
mov
test
and
jmp
pop
addr16
test
shrb
sub
aad
jno
mov
into
push
in
gs
pop
xchg
push
cmpsb
andb
lret
scas
pop
xchg
aam
fstpt
loopne
jnp
cmpsb
cmp
push
ret
call
rclb
add
xor
fldl
sbb
ja
popf
arpl
repz
mov
inc
stos
add
adc
pop
inc
cltd
lret
sbb
mov
add
hlt
filds
mov
sbb
cmpsb
js
xorb
lock
sub
into
cmp
idivb
sarl
jo
call
mov
inc
inc
mov
or
sub
in
push
mov
stos
pop
clc
mov
or
mov
js
mov
xor
pop
call
inc
adc
inc
int3
inc
ret
sub
imul
gs
and
les
out
inc
loope
inc
sbb
daa
repnz
int3
adc
enter
sbb
adc
add
sub
aaa
aas
setp
xorb
pusha
pop
test
cmc
mov
aam
jecxz
dec
mov
cmpsl
jo
pop
test
enter
mov
mov
jbe
pop
inc
xchg
push
test
push
cmpsb
mov
lret
push
jle
fucomi
int3
out
adc
mov
pop
and
dec
insl
or
cmpsb
jnp
dec
xchg
xchg
icebp
mov
mov
mov
jecxz
addr16
iret
pop
add
inc
imulb
push
test
ss
setbe
push
inc
and
inc
loop
cmpsl
gs
jb
jnp
push
dec
fiaddl
adc
in
out
pop
je
xlat
xor
ror
xor
dec
push
fsubr
mov
cmpsb
and
inc
scas
cld
insb
idivl
jecxz
xor
xlat
pop
or
dec
sbb
aad
dec
mov
adc
movsl
in
pop
fimuls
daa
addr16
jge
int3
push
pop
lahf
out
and
push
pop
leave
or
xchg
cltd
lds
pop
or
push
pop
cmp
pop
and
and
mov
mov
cmc
xor
cmpsb
mov
sub
movsl
dec
orl
cs
inc
mov
mov
mov
fldt
hlt
push
mov
ss
pop
pop
fadds
mov
mov
jno
fidivl
pop
and
lea
fwait
into
push
ja
pop
ljmp
and
nop
mov
scas
sbb
pop
inc
es
inc
mov
jge
in
popa
cmpsb
and
cld
mov
hlt
sbb
cmpsl
cs
repnz
hlt
int3
xor
xor
xchg
push
movsb
int3
je
jg
inc
ljmp
xor
dec
sub
shrb
or
mov
mov
push
ja
int3
cmpsl
clc
shll
scas
jne
cmpsb
sbb
add
fcoml
leave
add
adc
movsb
inc
pop
sahf
fnstsw
sbb
int3
mov
scas
jbe
insl
sub
mov
incb
xlat
jp
stc
cs
ja
movsb
dec
imul
in
fstps
adc
cmp
call
mov
jb
cltd
cmp
out
inc
sbb
dec
movsb
loop
cltd
dec
pop
xor
aaa
ds
adc
or
lea
pop
or
data16
mov
arpl
fxch
scas
repz
sbb
ja
gs
gs
int3
jbe
sub
or
push
fdecstp
leave
adc
ja
jle
cmc
cmp
pusha
das
or
testb
out
adc
inc
jo
add
int3
aaa
shl
xor
push
int
cmpsb
ja
push
outsb
imul
fdivl
inc
fwait
push
xchg
jecxz
sub
pop
add
int3
sub
dec
push
sbb
mov
lds
add
dec
inc
dec
xchg
push
adc
inc
dec
ret
xor
rclb
pop
lock
pop
mov
pop
sub
mov
mov
push
mov
repnz
xor
bound
adc
jl
mov
ret
mov
sub
xchg
inc
repnz
xor
int
inc
movsb
inc
into
or
stc
cs
mov
in
enter
pop
jmp
cli
lret
rorb
sbb
push
add
xchg
je
not
or
pusha
mov
xor
fcompl
stos
mov
push
mov
inc
inc
inc
push
sbb
in
sub
adcb
flds
sub
sbb
mov
xchg
add
enter
fsubr
sub
dec
dec
mov
cmp
or
dec
jge
imul
sub
jne
cs
fnstenv
lods
dec
inc
je
js
andl
sub
pop
dec
xor
add
std
inc
push
insl
int3
pop
xor
mov
mov
js
lock
pop
xchg
xchg
inc
lahf
lods
ret
pop
cmp
jle
cmpsb
add
xor
dec
je
adc
xor
lea
int3
jmp
sbb
mov
mov
in
push
xor
fnstcw
inc
aad
dec
mov
popa
fdivl
int3
stos
jg
push
sti
scas
push
cld
int
test
mov
jge
push
dec
je
sbb
cmp
cmp
jge
inc
pop
sbb
aaa
jae
and
aad
pop
popa
pushl
pop
push
or
and
movsl
xchg
xchg
popf
add
mov
mov
mov
cs
inc
cmp
sbb
jae
xchg
dec
aas
in
ja
jp
push
jns
inc
cwtl
mov
mov
mov
sbb
cmp
int3
sub
and
frstor
dec
popf
hlt
push
jp
and
add
add
fistpl
hlt
push
xor
mov
add
int3
inc
lock
pop
push
mov
dec
int3
aam
adc
lahf
push
sarl
xchg
jp
inc
fwait
inc
lods
sar
out
lahf
xchg
sbbb
or
sbb
or
and
dec
cltd
sub
jo
pop
add
push
mov
les
aaa
add
push
call
ret
lock
adc
cmp
lahf
push
pop
lock
jne
xor
mov
pushf
cmp
pop
sbb
pop
loop
cmp
es
sbbl
fwait
cmp
mov
pop
mov
out
pop
clc
xchg
arpl
es
out
push
ljmp
mov
xor
lcall
in
lret
jb
pop
shll
and
mov
and
pop
andb
mulb
loope
inc
insb
dec
js
cmpsb
pop
jle
ss
mov
cmp
or
push
lahf
les
das
into
xchg
inc
ret
pop
int3
push
cli
fistpl
je
mov
insb
lock
or
incb
cmpsl
mov
jg,pt
js
std
loope
nop
insl
enter
jmp
sbb
pop
mulb
mov
pop
aaa
scas
out
mov
add
adc
js
imul
adc
rorl
add
jl
dec
int3
int3
push
imul
ror
push
fadds
pop
in
sbb
gs
inc
popa
inc
aam
inc
arpl
sbb
fnsave
fwait
cmp
pop
push
sbb
popf
mov
outsb
sbb
and
inc
xor
pop
pop
jb
dec
fs
mov
cmpb
cld
pop
or
pop
mov
pop
mov
sub
adc
sahf
leave
jns
insl
sbb
adc
pop
pop
add
cli
in
pop
jae
int3
inc
fldl
lret
popl
mov
adc
inc
inc
lret
mov
cmpsb
or
into
sub
int3
gs
add
loop
fsubs
movsl
mov
sub
mov
sbbb
xchg
pushf
push
xchg
inc
inc
lock
loopne
nop
cmp
mov
inc
mov
or
outsb
sbb
xor
xor
push
jmp
mov
xchg
dec
mov
push
ss
shll
leave
mov
stos
shll
leave
loopne
cmp
out
icebp
stos
xchg
sub
vpaddsw
jg
js
imul
mov
iret
inc
in
nop
in
mov
pop
in
and
cwtl
mov
pop
dec
xor
add
pop
mov
jbe
push
cmp
inc
mov
mov
pop
jl
inc
ficoml
push
les
aas
repz
inc
cmpsb
cwtl
mov
pop
out
cmp
aam
pushf
lods
lea
rcrl
adc
stc
mov
aad
cld
es
inc
mov
lods
add
sbb
lcall
lret
and
mov
mov
pop
ljmp
sub
mov
nop
cmpsb
cmp
pop
and
bsr
sub
inc
repnz
fidivs
pusha
leave
lret
pop
mov
rol
sub
inc
aad
cmpsb
insb
sti
sub
dec
js
lds
icebp
jecxz
mov
test
call
cmp
popa
mov
inc
jp
xchg
dec
sub
ss
mov
pop
or
lock
or
xorl
push
pop
cmpb
negl
pop
call
adc
scas
xchg
ds
xchg
cmp
adc
out
sub
or
int3
xchg
mov
mov
pop
jge
xchg
stc
pop
shrb
in
add
or
lods
inc
add
add
ss
mov
xlat
shlb
xchg
inc
jns
popf
dec
sti
sbb
mov
dec
cmc
xor
lods
fldenv
cmp
iret
pop
loope
mov
movsl
mov
push
pop
push
mov
sti
mov
sarb
icebp
and
push
pop
aaa
ja
inc
xchg
dec
lea
dec
inc
cmpsb
inc
mov
xor
jecxz
lods
std
jle
std
cmpsb
cmpsb
cmp
xor
int3
mov
pop
ret
mov
push
popf
push
call
adc
in
ja
std
xchg
mov
mov
cmpsb
inc
cli
jne
test
push
pop
aas
xor
sbb
out
inc
jnp
cmc
pop
leave
pop
in
sbb
jmp
movsl
ret
xchg
insl
xchg
pop
pop
mov
sti
lock
jno
imul
pop
add
push
cmpsb
flds
mov
adc
mov
adc
push
jp
rclb
les
jbe
ret
or
inc
call
inc
jl
or
dec
lds
into
mov
mov
cmpsb
jno
test
dec
xor
inc
mov
or
mov
rolb
enter
push
inc
or
leave
lods
in
jns
std
inc
aaa
cmpsb
fnstcw
dec
cmp
shl
and
mov
sbb
dec
pop
repz
inc
in
fstps
rolb
mov
mov
cmp
push
sarb
movlps
pop
loopnew
insl
mov
es
int3
lds
mulb
cmp
xor
mov
inc
clc
dec
mov
inc
xor
pushf
mov
add
ror
inc
sub
stos
pop
jae
in
int3
shll
lret
add
add
jo
insb
loop
aam
popa
cmp
sbb
and
mov
cmpsb
xchg
xor
mov
mov
pop
lods
inc
inc
mov
inc
fcomip
xchg
sbb
pop
lock
int
ljmp
sub
lods
mov
cs
push
and
lods
jo
cwtl
dec
ss
cmpsb
jle
ds
ret
or
daa
shr
js
pop
fs
and
int3
cmc
mov
mov
shll
cmpsb
sahf
inc
in
mov
dec
lods
dec
mov
mov
cmpsb
mov
jl
notl
out
inc
fs
mov
es
cmp
cwtl
sub
int3
jl
pop
mov
cmp
lods
popa
outsl
xor
repnz
lods
or
and
push
cmp
mov
lcall
mov
pop
mov
mov
ficomps
mov
test
lret
shl
aaa
test
vrcpss
xchg
pop
cmp
stos
test
daa
xor
mov
leave
sbb
inc
push
dec
sub
cltd
les
fwait
into
xchg
xchg
push
xchg
inc
in
and
and
push
arpl
xchg
fsubrs
test
adc
inc
fcomi
scas
pop
push
mov
xchg
mov
inc
das
push
icebp
lds
out
roll
aaa
pop
call
lock
pushf
mov
iret
ret
sbb
sbb
test
sub
mov
cmpsb
scas
and
loopne
inc
stc
mov
cmp
xchg
xchg
js
add
leave
sbb
and
ficompl
mov
mov
sti
dec
and
mov
mov
in
loope
adc
xchg
lcall
in
rcrb
stos
jg
cmp
xorl
loope
pop
xchg
std
mov
sbb
xlat
addl
ja
sub
cmp
xchg
and
out
sub
push
fs
inc
call
imul
inc
fdivrs
push
push
pushf
out
ret
sbb
cmp
inc
insb
aam
sub
inc
jle
ss
inc
xchg
in
xchg
mov
sub
addr16
inc
aad
mov
sbb
xchg
ds
push
incl
lcall
sbb
outsb
inc
xor
inc
jae
cmp
xchg
std
push
popa
mov
loope
cli
inc
gs
mov
pop
inc
xor
xchg
and
ret
jmp
movsb
aam
insl
je
out
push
push
pop
push
sbb
or
mov
icebp
das
mov
int3
jecxz
mov
push
divl
mov
mov
cmp
sbb
cmc
stos
js
stos
nop
cltd
cmp
adc
pop
movsl
or
inc
and
insl
les
push
pop
inc
sbb
mov
popa
in
inc
cmpsb
sub
mov
adc
stc
push
xor
jp
xor
inc
pop
ret
jecxz
mov
fdivrs
jns
int3
orb
cmc
sub
mov
in
and
fwait
xlat
dec
dec
leave
test
dec
jp
sbb
push
xor
add
cmp
mov
lods
pop
insb
cwtl
out
loope
dec
rcrb
cmpsl
enter
xor
clc
mov
hlt
mov
xor
xor
inc
pop
sarb
imul
mov
ss
out
mov
inc
stos
inc
adc
ja
pop
and
xlat
and
int3
xchg
cmp
ljmp
subb
xor
mov
push
mov
stos
hlt
xchg
addr16
jmp
mov
ljmp
mov
dec
cmpsb
movsb
xor
aam
sbb
inc
inc
xor
out
out
jne
and
jp
add
push
cli
jns
pop
sub
out
inc
int
fstpt
sub
outsb
xor
jp
dec
pop
popf
inc
lea
push
stos
push
inc
js
in
ja
jge
dec
jnp
fistpl
lods
and
inc
cmp
arpl
fdivrp
push
cltd
cmp
sbb
es
popa
lret
imul
mov
add
add
xchg
fwait
rcll
pop
inc
loop
xchg
lods
pop
stc
ror
jns
outsl
aad
int3
sub
sbb
and
inc
push
pop
mov
and
mov
xor
xchg
or
cmp
or
ja,pt
shrb
push
or
test
mov
insb
pop
mov
int3
push
add
repz
je
adc
jns
pop
pop
xor
push
push
and
jle
dec
insb
push
mov
jbe
xchg
xchg
loopne
xor
add
shl
mov
fcmove
mov
stos
xchg
jge
jg
pop
cmp
push
shlb
fldenv
int3
inc
cltd
push
or
jbe
xchg
inc
ds
divl
fidivl
call
imul
or
and
mov
mov
repnz
int3
pushf
or
mov
cmpsb
out
dec
daa
inc
or
popf
sbb
ja
pop
add
and
in
dec
popf
sub
imul
cmpsb
push
mov
stos
mov
std
js
or
jns
mov
xor
pushf
cmp
scas
fmuls
imul
xor
je
out
mov
dec
dec
fnstsw
fmull
mov
mov
fwait
push
inc
inc
sbb
int3
rcrb
inc
pop
push
mov
repz
in
loopne
push
int3
test
adc
jb
lock
popf
test
xlat
outsl
rolb
aam
pop
sub
out
loop
inc
imul
xchg
and
data16
push
xchg
push
stc
mov
ret
sbb
shll
add
out
mov
int3
test
add
push
pop
xor
sub
test
push
pop
mov
pop
pop
int3
pop
or
cmp
pop
cmp
mov
push
push
sti
pop
aam
push
ds
loope
addr16
mov
xor
and
or
nop
shll
pop
jne
adc
bound
daa
pop
mov
sub
sbb
lock
jl
add
sbb
push
xchg
pop
enter
mov
dec
dec
add
out
stos
inc
bound
push
icebp
mov
pop
rclb
jbe
xchg
inc
jns
and
mov
sub
jno
push
cmpsb
adc
xor
scas
dec
pop
cmp
jge
cmp
adc
pop
add
xor
inc
cmp
inc
sbb
inc
push
std
sub
loop
addb
xchg
scas
dec
jg
sbbl
xchg
out
push
sub
mov
inc
repnz
push
movl
cmc
das
pop
or
out
xchg
inc
mov
rclb
mov
cmpsb
lock
mov
imul
mov
xor
fdivrl
fcmove
pushf
jns
popa
call
push
iret
clc
pusha
pushf
cmpb
shrl
inc
ja
pop
dec
imul
mov
loope
pop
int3
repnz
les
mov
daa
imul
stos
les
pop
movsl
adc
leave
sbb
xchg
and
test
cltd
cltd
mov
leave
pop
imul
in
mov
leave
loope
fucomip
scas
jbe
ljmp
mov
push
xor
test
sub
out
push
mov
ljmp
bound
insb
xor
sbb
int3
add
dec
jb
icebp
push
jg
cmpsb
cmp
cmpsb
cltd
int3
add
or
add
xor
mov
int3
sbb
shll
push
pop
jmp
stos
loopne
int3
sbb
fcomip
movsb
sub
divb
cmp
cltd
push
mov
inc
out
inc
mov
add
xor
sti
leave
sbb
je
popf
lahf
jl
arpl
cmpsb
clc
mov
xor
inc
adc
movsl
dec
or
test
mov
mov
fisttps
or
jl
xor
mov
cmp
aas
adc
xchg
sahf
jne
lods
aad
cmpsb
jno
mov
dec
pop
xchg
xor
sbb
gs
lret
cmpsl
xor
loop
popa
mov
jge
inc
mov
mov
and
cmpsb
fldl
repnz
lock
movsb
inc
xor
mov
pop
jns
lods
popf
mov
mov
mov
jle
push
cmp
je
and
das
xchg
pop
cmp
cmp
cmp
mov
cmp
stos
fisubs
movsl
daa
les
js
sbb
testb
xor
inc
and
push
sbb
roll
lahf
int3
adc
icebp
xchg
mov
outsl
insb
sub
pop
lret
test
sbb
or
cmpsb
cwtl
iret
add
movl
lret
pop
fstps
inc
fsubs
mov
ljmp
xlat
lds
cmp
cmpsb
pop
ret
jno
inc
pop
popa
mov
push
xchg
or
jmp
fadd
jne
ja
mov
cmpsb
fsubrs
shll
fistl
int3
jmp
roll
ljmp
shll
pop
dec
inc
lahf
and
sti
push
pop
mov
dec
stc
lahf
leave
lock
cli
mov
push
mov
iret
sub
fdivrl
jg
arpl
cmpsb
xor
imul
xchg
dec
jne
lock
adc
push
stos
or
imul
adc
inc
sbb
or
sti
cmpsl
das
xchg
stos
inc
add
cmp
out
rolb
sub
dec
xor
stos
in
pop
les
mov
adc
push
inc
dec
aad
or
cmc
jmp
insl
out
inc
lcall
cmp
or
in
adc
out
call
mov
imul
int3
xor
jp
mov
cmpsb
in
call
shl
or
push
rcrb
xor
ds
mov
cwtl
int3
add
ja
and
or
int3
clc
lods
mov
adc
mov
push
cmpsb
jne
inc
cmp
movsl
jne
push
aaa
cmp
push
test
jecxz
cmp
popa
andl
mov
jmp
cwtl
fwait
mov
xlat
rorl
in
fidivs
add
add
xchg
mov
mov
pusha
gs
loope
and
mov
test
mov
dec
cmp
out
push
dec
mov
lea
repnz
loope
xlat
pop
sbb
xor
xor
cmp
and
xchg
and
jp
cs
cmc
aas
mov
cmp
jp
xor
add
int3
sub
std
pop
inc
out
movsl
cs
lods
lret
sub
jg
clc
test
pop
in
rcl
push
push
cmp
int3
fadd
mov
pop
mov
and
leave
dec
int3
insl
imul
adc
fisttpl
popa
movsl
in
dec
int3
xor
aad
aas
je
xchg
dec
icebp
cs
sbbl
lods
or
pop
ss
inc
cmc
aad
mov
js
or
loope
stc
mov
jmp
sarb
lods
mov
pop
arpl
or
fistpl
adc
jno
pop
hlt
mov
mov
int3
inc
notb
xor
shlb
inc
int3
push
adc
push
push
fcomps
out
push
sbb
inc
int
dec
jp
push
dec
mov
push
loopne
jne
mov
inc
lret
and
pop
cmp
ds
dec
xorl
dec
sub
fcompl
mov
dec
and
pop
aam
xchg
push
ret
andb
push
or
roll
push
cmpsl
pop
jo
push
scas
lret
xor
add
sbb
mov
xchg
inc
adc
int3
mov
hlt
je
mov
mov
xchg
stos
inc
adc
dec
test
roll
pop
pop
xor
rcll
imul
mov
out
test
push
js
rcll
stos
inc
mov
jnp
adcl
scas
shll
mov
push
lahf
sub
jl
imul
inc
push
aas
mov
pop
mov
je
call
jmp
jmp
or
ljmp
or
sub
sub
or
push
jno
xor
pop
dec
or
cmc
scas
xlat
inc
rcr
dec
or
push
popf
mov
clc
inc
xchg
sbb
pop
and
mov
outsl
inc
inc
mov
mov
mov
push
sub
xlat
cltd
jnp
mov
push
cltd
mov
or
das
add
dec
adc
dec
cwtl
rorl
mov
inc
cltd
cmp
push
pop
fucomp
xor
mov
lds
mov
pop
cld
sti
xchg
andb
scas
cmp
shrl
mov
ret
cmpl
inc
aaa
roll
roll
mov
push
pop
movsb
stos
sbb
jg
adc
int3
lret
fstps
add
ja
inc
jp
inc
mov
insl
js
sub
and
aam
test
fnstsw
insb
das
sarb
in
loop
mov
out
sarb
xchg
ja
test
xchg
mov
out
popf
cltd
pop
fists
test
repnz
or
sarb
or
fsubl
and
lcall
or
xchg
aad
pop
push
jne
test
movsb
cmp
sub
sbb
lret
in
int3
dec
aam
mov
mov
das
jne
inc
mov
int
add
inc
and
mov
lea
lret
jle
je
out
lahf
push
inc
cmpsb
mov
xchg
inc
movsl
and
inc
mov
or
xor
repz
push
addl
xchg
lds
push
out
cli
je
ljmp
fstps
inc
mov
jl
test
or
and
rcrb
mov
xchg
cld
pop
cmp
inc
stc
leave
addb
inc
pop
icebp
inc
sbb
push
mov
sbb
xchg
fmull
fistpll
sbb
adc
int3
mov
daa
insl
scas
sbb
cs
bound
fnstenv
in
pop
ja
jns
in
pop
loope
mov
js
lret
stc
mov
movsl
cmpsl
pop
gs
sub
jno
sub
mov
shll
iret
push
inc
fnsave
and
jle
ret
cli
push
mov
nop
dec
daa
ficomps
mov
jb
and
inc
mov
popf
popa
into
fldenv
das
dec
pop
push
push
in
sar
loop
int3
aad
repnz
jle
mov
jno
into
sar
nop
movsb
or
mov
pop
scas
imul
inc
xchg
mov
stos
mov
xchg
add
inc
mov
int3
dec
cmpsl
push
lahf
scas
in
and
jmp
ja
push
je
jmp
xor
das
clc
ja
xor
loop
insb
leave
dec
pop
add
xor
push
push
insl
push
rclb
add
loopne
ficompl
ficomps
int3
lods
pop
xchg
sub
inc
std
adc
mov
inc
int3
das
pop
add
ret
cwtl
data16
mov
cli
push
pop
movsb
aam
mov
pop
cmp
push
dec
pop
pushf
mov
in
ret
cmp
pop
hlt
stos
mov
xchg
addr16
jl
je
mov
rcll
test
dec
dec
and
inc
repnz
sbb
movb
aad
push
test
jmp
sbb
cmp
fcompl
scas
in
aaa
dec
addr16
lea
or
into
sahf
pop
xchg
fiadds
jmp
fimuls
and
inc
rclb
sahf
jnp
push
and
loope
dec
sub
and
ror
push
sub
xor
out
sub
add
and
sbb
jle
xor
loope
jb
push
fdivrp
pop
int3
das
inc
inc
ss
lahf
lea
cmpsl
lods
idivb
inc
jno
ljmp
mov
scas
add
xchg
out
xchg
fwait
movsb
hlt
mov
imul
pop
jle
inc
cld
xlat
add
cli
int3
xchg
xor
jno
cmpsb
loop
cmp
inc
sub
repz
in
mull
cmpb
cmp
je
cwtl
cmp
stos
clc
mov
xchg
jp
pop
push
pushf
int3
in
jns
ljmp
dec
out
mov
lret
loope
test
lods
aas
sub
inc
fldenv
hlt
enter
or
add
int
js
mov
fnstcw
enter
fwait
sub
movsb
cmpsl
jecxz
cwtl
fbstp
add
or
xor
stc
inc
je
in
pop
imul
mov
int3
mov
cmpsb
sbb
mov
mov
clc
call
sbb
pop
add
in
cli
pop
lea
inc
xor
mov
xor
shl
sbb
jmp
test
nop
addb
test
push
fbstp
js
xchg
xchg
pop
xor
jnp
out
pop
inc
fs
mov
pusha
dec
mov
fldcw
ss
adc
mov
jle
pop
cmpsb
add
rclb
and
inc
pop
mov
and
push
pop
insl
dec
fld
dec
add
mov
jbe
adc
lea
sbb
rol
sbb
mov
fnsave
imulb
cmpsb
add
test
clc
loop
pop
stos
int3
out
in
xchg
add
in
adc
les
jne
xor
popa
mov
xchg
insl
pop
insb
add
xor
adcb
add
push
dec
imul
pop
in
mov
xchg
mov
sar
int3
mov
push
pop
pop
lods
xchg
cmp
jns
imul
es
shrl
iret
repz
jp
mov
in
or
cmc
lcall
dec
dec
pop
sbb
fxch
mov
sbb
mov
rcr
xchg
pop
pop
int3
lds
call
mov
nop
shr
cmpl
aad
cli
test
test
testb
out
lret
xor
loop
sbb
test
sahf
xchg
jns
lods
and
and
dec
push
push
dec
lret
loope
mov
das
dec
xchg
insl
int3
mov
lods
mov
pusha
dec
test
jg
ret
mov
mov
pop
stos
scas
xor
adc
adc
aas
cmp
fldt
sbb
movsl
push
xchg
loope
int3
arpl
jmp
pop
cmc
hlt
mov
int3
xor
mov
adc
fidivrl
enter
inc
xor
push
loopne
push
pop
inc
mov
in
cwtd
cmovg
pop
jg
in
xlat
dec
cltd
dec
pop
xlat
lret
cmp
hlt
aad
popa
jno
je
or
popf
mov
xor
aad
sbb
int3
mov
lods
lods
mov
dec
cwtl
sub
dec
inc
and
ljmp
mov
mov
jbe
push
pop
sbb
jo
cli
and
cmp
mov
int
cmp
movl
mov
mov
mov
aas
shrl
orb
fistpll
dec
aas
adc
inc
push
adc
repz
aas
pop
sbb
pop
mov
cmpsl
stc
xor
pop
icebp
dec
lahf
xor
icebp
add
dec
das
insl
add
int
out
push
fs
lret
jecxz
insb
sub
cwtl
add
int3
pop
in
loopne
dec
mov
out
inc
movsl
sub
aad
push
into
shrb
in
hlt
fs
dec
push
int3
gs
mov
sbb
sub
test
arpl
loope
jl
ret
mov
push
sbb
cmp
and
pop
scas
cmp
lods
sub
jmp
xchg
pop
dec
sub
mov
cmp
pop
int3
or
adc
xor
cmp
mov
mov
jno
xchg
int3
in
es
imul
adc
je
mov
jge
andl
push
andb
wbinvd
xor
push
adc
pushf
aas
pop
lock
inc
nop
in
mov
out
mov
and
in
cmpsb
sbb
leave
mov
out
mov
dec
mov
addb
pop
sbb
lcall
sti
xchg
xor
mov
mov
push
pop
adc
pop
push
ljmp
repz
cs
mov
push
pushl
ds
jmp
sbb
xor
popf
and
xor
mov
pop
sub
or
daa
fnstsw
xchg
mov
cmpsb
into
dec
jle
lods
gs
xchg
dec
call
lea
push
test
cmpsb
sbb
xchg
dec
inc
cmp
cmp
stos
stos
dec
pop
lcall
push
mov
cmp
pop
sub
cmpsb
in
loope
push
add
lds
add
push
jmp
movsb
lret
cs
cmp
mov
adc
push
int3
adc
lea
int3
lock
cmp
std
sub
bound
cmp
cmp
mov
jb
cmpsb
adc
ljmp
mov
pop
mov
adcl
neg
and
out
and
adc
int3
push
push
paddusw
scas
cld
js
sub
cld
dec
pop
lea
jns
cmc
enter
outsl
fmul
insl
pop
xchg
pop
cmpsb
outsb
push
cwtl
mov
dec
out
inc
cmc
lea
movl
and
shll
lea
mov
loopne
pop
inc
add
add
inc
addl
adc
add
popf
mov
int3
mov
pop
jnp
cmpsb
mov
out
sbb
inc
push
fcmovnu
push
xchg
xor
add
xor
ja
inc
in
sbb
lock
mov
pop
sbb
int3
inc
movsl
mov
or
jno
imul
sti
pop
hlt
jle
pop
jo
out
ja
pop
lods
adc
pusha
adc
in
jne
imul
inc
mov
sbb
sub
int3
test
fcmovb
inc
mov
mov
or
sbb
dec
rolb
inc
ret
mov
sub
scas
int3
jb
int
aas
stos
mov
adc
sbb
jno
and
mov
sarl
xor
mov
inc
push
insl
jne
mov
pop
in
mov
mov
test
fnstenv
test
xchg
pop
movsl
xor
paddusb
mov
outsl
or
jmp
sbb
lret
imul
inc
add
adc
test
dec
or
push
inc
sbb
test
mov
aam
pop
or
xchg
loope
mov
imul
adc
popl
sbb
mov
add
daa
ds
out
xchg
push
xchg
lds
fwait
pop
std
movsl
mov
mov
xchg
sub
inc
jge
add
nop
scas
xor
inc
fcoml
xchg
jg
sub
mov
xchg
mov
loope
cmp
and
mov
lds
pop
adc
sbb
add
jbe
pop
pop
loope
mov
xor
xor
fs
mov
and
pop
mov
shrl
push
movsl
in
cwtl
inc
adc
testb
rcrb
scas
adc
stos
sahf
jbe
inc
dec
ja
lock
ds
mov
fdivs
inc
push
xor
mov
mov
adc
in
les
cmp
jb
dec
inc
pop
xchg
loopne
mov
mov
mov
jno
fldenv
add
jmp
inc
sarl
push
push
adc
jns
mov
mov
dec
inc
pop
cmp
mov
int3
mov
push
mov
or
int3
ret
xchg
dec
hlt
jbe
xchg
adc
add
pop
shlb
inc
pop
inc
jns
xchg
lea
test
sub
sub
movsl
in
jge
out
imul
pop
mov
xor
inc
inc
jno
inc
aam
jne
roll
dec
push
lcall
cmpsb
subl
int3
xor
adc
push
pop
push
subl
sbb
fistps
pop
es
xchg
iret
lock
lret
pop
xorb
icebp
or
mov
test
cmpsb
fmull
rol
bound
pop
mov
dec
inc
jecxz
xor
pop
in
mov
call
int3
push
outsl
sbb
sbb
lcall
es
push
iret
movsl
jmp
or
aam
pop
mov
inc
les
jns
jo
sti
xchg
push
lcall
les
push
push
push
aas
cmpsb
inc
jl
cltd
fisttpl
fcomps
das
fucomip
hlt
dec
jmp
stos
adc
sub
mov
ds
inc
jl
sbb
test
push
and
xchg
cmc
int3
push
in
test
sarb
mov
aad
push
or
scas
lods
pop
pop
addr16
andl
ret
dec
mov
cld
int3
bound
into
bound
adc
repz
in
push
jns
xor
in
add
test
mov
sbb
xchg
add
aas
sbb
lcall
pushf
es
pop
mov
add
adc
mov
sti
inc
nop
dec
push
push
inc
divb
mov
int3
cs
outsl
fsubrl
push
push
xchg
out
adc
mov
mov
fs
adc
std
fcomip
rorl
pop
dec
push
jmp
pop
inc
xor
add
ds
in
cld
push
jle
loopne
cmp
push
pushf
int3
adc
adc
sbb
sub
adc
ret
inc
push
movsl
mov
ljmp
mov
sahf
incb
fisubl
hlt
iret
es
sbbl
addr16
hlt
fs
int3
lret
arpl
jecxz
add
in
out
fmuls
cltd
loop
mov
and
aas
cmpsb
mov
les
jmp
hlt
fcompl
repz
aam
adc
adc
sbb
lds
mov
and
and
dec
out
notl
enter
add
push
rorb
dec
dec
jb
push
jmp
int
sub
in
and
mov
and
mov
fdivrs
iret
iret
mov
inc
test
test
push
scas
roll
jl
inc
cmpsb
je
xchg
lcall
sarl
xor
int3
enter
imul
popa
push
divl
cmpsb
call
adc
mov
cmp
lahf
jns
mov
cmpsb
imul
imul
lret
inc
dec
daa
jp
jno
outsb
rcrl
repnz
pop
mov
mov
cmp
in
mov
bound
mov
push
hlt
pop
fnsave
xchg
das
aas
jp
das
adc
jecxz
mov
fwait
mov
popl
inc
mov
aas
or
andb
dec
adc
arpl
loopne
pop
pop
and
dec
inc
rcr
and
mov
sub
push
lret
lret
inc
xchg
push
xchg
mov
adc
inc
in
jg
int3
adc
jl
pop
pusha
and
add
int3
mov
ret
cmpsl
lcall
xchg
test
ja
dec
les
xchg
jle
jl
sbb
stc
push
jg
mov
inc
loop
and
mov
movsb
int
adc
xor
in
stos
scas
gs
sub
mov
add
pop
cmp
jbe
push
sub
inc
sub
lret
int3
mov
scas
in
addr16
jmp
loop
sub
lock
loop
add
mov
pop
mov
push
shl
mov
adc
loop
aad
pop
jle
lcall
icebp
hlt
fwait
mov
cli
lcall
mov
mov
push
ja
mov
cmp
into
lea
add
je
dec
pushf
test
ja
jnp
lods
mov
mov
stc
lahf
xchg
repnz
dec
mov
int3
mov
mov
bound
or
aaa
loopne
les
mov
inc
mov
cmp
fld
or
or
mov
shll
push
mov
js
divl
pop
test
fldcw
pushl
xchg
int3
out
movsl
jne
movsb
mov
mov
sbb
es
inc
dec
testl
fdivrl
repz
scas
jge
jl
xchg
mov
lea
pop
push
pop
or
add
mov
and
xor
adc
cmpsb
out
push
adc
jg
mov
adc
mov
ja
movsb
cmp
arpl
repnz
mov
sbb
imul
in
jmp
popa
pop
rorb
pusha
and
clc
push
int3
add
sti
xor
inc
ljmp
pop
mov
int3
addr16
fisttpll
xchg
fnstcw
imul
dec
cmp
push
movl
test
or
fs
xor
mov
ja
pop
pop
bound
or
pop
pop
insb
sbb
inc
pop
pusha
pop
sbb
cli
mov
mov
lods
mov
fnstenv
sbb
lods
mov
jg
inc
push
xor
icebp
inc
jne
push
pushf
test
sbb
pop
aas
sbb
push
cmp
mov
add
enter
dec
in
in
lcall
cwtl
outsl
incb
mov
loop
test
dec
cmpsb
xchg
in
mov
fwait
push
aad
pusha
xchg
cmpl
adc
mov
insb
mov
and
insb
test
cmp
cmc
fwait
xchg
inc
sbb
das
iret
xor
and
push
mov
inc
bound
xor
mov
orb
mov
dec
imul
dec
lods
daa
jne
hlt
sub
loope
rclb
push
mov
cmpsb
xor
jns
hlt
dec
mov
test
pop
push
jp
cmp
movsl
sub
or
pop
or
mov
dec
popf
nop
int3
insl
cltd
cmc
sbb
mov
out
mov
fwait
pop
xor
lahf
pop
cmpsb
clc
aas
sub
mov
mov
pop
sub
aas
inc
es
mov
xor
std
mov
js
call
incb
addr16
or
mov
test
jle
add
jle
mov
pop
iret
ljmp
cmp
dec
pop
sub
stc
sub
sub
inc
xchg
sti
jb
pop
mov
inc
fiaddl
in
test
add
pop
aam
cmc
inc
icebp
data16
cmp
enter
das
sub
push
push
dec
int3
leave
pop
cli
in
sub
lcall
inc
push
push
dec
pushf
pop
inc
icebp
ljmp
adc
les
bound
push
movsl
es
adc
sub
test
pushf
pop
and
mov
pusha
mov
cmp
mov
imul
jnp
int
jmp
jg
in
xchg
push
cli
ss
bound
adc
scas
in
test
mov
cmpsb
push
mov
es
popa
sub
ja
jge
cmp
cmp
clc
mov
mov
xor
mov
pushf
push
mov
paddsw
or
mov
push
push
inc
cmpsb
inc
lods
pop
push
xchg
ljmp
dec
loop
pusha
pop
mov
inc
pop
dec
loopne
mov
int3
jne
xor
sub
sbb
pop
add
addr16
jge
decb
cld
mov
sub
mov
sarb
cmp
mov
and
mov
dec
fdivrl
std
mov
les
xlat
add
and
add
pop
aas
into
mov
xchg
jle
xchg
xchg
loopne
pop
in
stos
mov
sbb
inc
dec
pop
adc
add
outsb
daa
mov
push
inc
inc
out
or
pushf
insl
push
stos
test
arpl
into
int
imul
jmp
xor
daa
mov
int3
repnz
mov
pop
cmc
lcall
and
movsb
dec
xor
add
jg
pusha
leave
pop
cmp
test
mov
leave
cmpsb
xchg
mov
jge
inc
das
in
mov
pop
push
rol
mov
or
cmp
cmp
fnsave
pop
loope
fildll
dec
or
repz
mov
dec
out
mov
addb
int
fisttps
xchg
jmp
outsl
xor
and
cltd
jle
push
addr16
mov
mov
outsb
sub
cmpsb
int3
inc
cli
pop
jne
hlt
clc
test
mov
pop
push
push
inc
sub
pop
cmpl
cmp
aad
pop
inc
mov
sub
fimull
nop
fisttpll
mov
push
int3
fdiv
mov
xchg
fsubr
fnsave
les
sub
sub
das
inc
mov
push
in
inc
xor
rcrl
testl
jge
test
imul
cmp
iret
out
jle
adc
xchg
rol
pop
pop
jne
ret
xchg
mov
lret
cmp
inc
push
add
inc
addr16
jle
dec
dec
notl
sbb
into
pushf
ds
test
imul
imul
adc
out
mov
push
inc
jmp
xor
pushaw
inc
pop
popa
adc
outsl
cmpsl
fcomps
int3
xor
add
sbb
mov
mov
adc
int3
inc
mov
jb
fldt
jbe
pop
cmp
inc
rolb
dec
adc
ja
sub
jp
pop
fidivrs
cmp
aam
inc
or
pop
add
lret
stos
sbb
pop
in
movsb
cmp
inc
imul
adc
fst
nop
mov
xor
adc
mov
adc
and
lahf
scas
jmp
int3
mov
stos
xchg
add
jle
pop
adc
shll
inc
xchg
jmp
push
xchg
xor
jge
ret
mov
jbe
cmp
jg
xchg
xor
inc
jno
jb
mov
test
mov
loope
dec
lahf
sbb
jmp
ret
test
out
add
in
int
mov
int3
addr16
leave
scas
idivl
push
pushf
lds
inc
pop
cli
and
inc
xchg
arpl
jno
push
inc
push
test
or
cltd
in
jge
lahf
jo
imul
pop
incb
incl
dec
mov
pushf
dec
push
ss
inc
sub
nop
arpl
stos
inc
mov
int3
loope
and
mov
hlt
test
dec
js
rorb
call
repz
gs
jle
icebp
gs
sub
icebp
mov
cmpl
das
ds
int3
loopne
cmp
stos
mov
int3
push
pop
and
mov
cld
fldt
in
shl
mov
call
mov
jl
jnp
mov
cmpl
cld
adc
inc
fisubl
ljmp
inc
jmp
jb
incl
icebp
movsl
dec
lds
pop
pop
test
sbb
test
mov
push
repnz
jne
cmpsb
push
clc
negb
roll
std
insb
loopne
fsubs
sbb
movsl
push
pop
fmuls
insl
push
loopne
add
cltd
out
sti
dec
inc
lods
test
ljmp
jg
insl
jg
inc
aaa
inc
gs
or
push
push
push
sbb
inc
lcall
mov
mov
shr
in
fs
ficomps
cs
aaa
sbb
decb
jb
push
ds
sti
mov
inc
jo
andl
sbb
stos
push
push
les
jmp
popf
lds
sub
imul
dec
inc
gs
pop
or
je
jle
inc
scas
cwtl
aad
call
xchg
and
mov
or
pop
int3
ja
pop
leave
sti
inc
enter
pop
dec
pop
push
push
push
adc
int3
add
aaa
or
outsb
xchg
loop
pop
push
pop
adc
lds
inc
sub
jp
inc
insb
adc
jge
jo
mov
sbb
int3
pop
add
sub
imul
or
vpcomuq
pop
mov
xor
sbb
ret
rcrl
xchg
fnstcw
lock
dec
cmpsb
leave
push
fstps
mov
loope,pt
pop
mov
xor
and
lcall
dec
jecxz
cltd
loope
and
push
clc
aam
add
in
sti
call
int3
stos
scas
inc
icebp
call
mov
test
lahf
pop
pushf
addb
pop
pusha
lock
test
or
inc
je
fs
ds
hlt
mov
push
flds
xor
icebp
inc
in
push
push
xchg
mov
in
dec
xchg
inc
repz
in
les
popa
gs
sti
inc
lds
mov
inc
mov
das
scas
aaa
inc
out
xor
xor
pop
inc
cwtl
xchg
fcmovnbe
cmp
loop
jb
out
dec
xorl
stos
in
or
ss
icebp
cs
push
loopne
sbb
cli
outsl
sbb
mov
push
dec
sbb
in
xchg
cmp
xchg
jae
jno
cmpsb
pop
jg
dec
pop
js
subb
je
hlt
int3
int
push
add
push
pop
sub
or
bound
mov
sub
or
mov
stc
mov
pop
xchg
cmp
add
scas
fimull
push
cmpsb
push
cmp
mov
sbb
test
ja
mull
ror
iret
pusha
mov
nop
adcb
mov
aam
sbb
adc
orb
add
pop
cmpsb
sbb
sub
arpl
mov
ficoml
xor
mov
sbb
inc
cmpsb
jmp
cmp
std
or
add
lret
push
rcrb
mov
push
dec
xchg
pop
inc
aad
in
mov
inc
add
or
and
insb
mov
movsb
or
push
pop
popa
jne
lahf
pop
mov
push
lret
pop
enter
iret
pusha
call
xchg
test
adcl
test
rcll
inc
mov
mov
cwtl
pop
pop
jmp
jae
and
add
mov
xlat
add
jmp
std
xchg
insb
data16
lret
fistl
add
mov
call
call
dec
jo
mov
push
lea
pop
addr16
mov
mov
inc
dec
int3
loope
popl
insb
lcall
std
adc
add
insl
pop
rorb
dec
or
sahf
movsb
repnz
push
add
data16
int3
andb
in
fildl
xchg
loopne
or
jmp
cmp
test
xor
sub
test
shlb
test
les
cmp
sub
xor
lea
aaa
jne
sarb
loope
popf
std
push
sbb
mov
cld
pop
mov
repz
xchg
inc
and
jno
push
lcall
fsts
adc
lret
test
cmp
lock
in
repz
jne
shr
sahf
ja
push
fnstenv
jo
int3
mov
mov
lret
cmpsb
sahf
and
dec
push
inc
and
push
lea
push
dec
jle
or
cwtl
xor
inc
icebp
sub
jnp
or
jle
imul
sub
aas
push
inc
loope
popf
mov
mov
lret
mov
xchg
xchg
test
ficoml
shlb
js
les
inc
dec
inc
aad
clc
loop
lods
pop
push
rorl
inc
mov
aaa
mov
sbb
cwtl
clc
scas
pop
pop
addr16
mov
loop
cmpsb
gs
outsb
cmpsb
xchg
stos
pop
fisubl
imul
fbld
fs
xchg
inc
mov
sub
jb
pop
int3
sub
jne
xchg
cmpsb
sbbl
push
insb
pop
in
loop
jnp
adc
add
xchg
test
mov
in
fcoml
pop
xchg
aaa
imull
and
xlat
int3
dec
sbb
or
or
adc
pop
push
mov
dec
push
int3
xlat
inc
and
mov
dec
pop
stos
into
xlat
fneni(8087
sbb
pop
faddl
out
cmp
pop
and
jne
inc
mov
aad
fcomi
mov
sbb
mov
cmp
push
lds
push
and
rclb
sub
loopne
ja
or
orl
add
in
out
cmp
push
leave
scas
stos
mov
rcpps
push
lds
and
mov
dec
cmpsb
xchg
outsb
pop
xor
mov
stos
mov
push
mov
test
xchg
js
lcall
push
loope
jne
cmpsb
push
pop
notb
mov
push
or
cmp
xchg
jle
repz
cltd
cmp
jecxz
sbb
gs
or
repz
sub
or
mov
and
add
xor
push
xor
adc
add
add
in
mov
pop
je
jns
push
mov
in
setne
mov
pusha
enter
ret
sarl
sbb
dec
sbbb
jo
scas
mov
ss
xchg
cmpsl
mov
clc
jo
jns
icebp
and
leave
lret
push
mov
cld
sbbb
out
mov
shll
or
clc
aad
inc
int
cmpsb
testl
shlb
pop
mov
mov
into
jae
or
out
insb
cmp
mov
mov
jge
jae
inc
rorb
mov
jge
cmp
arpl
add
int3
mov
xor
sbb
int
or
jno
std
mov
xor
test
xchg
and
jae
fiaddl
jle
sbb
inc
ret
mov
xchg
xor
loopne
call
clc
push
leave
lahf
in
pop
cmpsb
xor
dec
ds
mov
xchg
dec
inc
orb
ret
int3
cmpsl
push
jecxz
cmp
inc
xchg
pop
inc
orl
jno
jg
or
repnz
subb
int3
dec
test
mov
repnz
orb
stos
mov
dec
mov
daa
inc
bound
shl
fcoms
into
pop
inc
js
aad
cmp
test
pusha
mov
cmpsb
pop
xchg
test
lret
jns
insb
sbb
pop
repz
lret
jno
xor
shrl
pop
xchg
fsts
ds
mov
pop
fimuls
aaa
cmpl
pusha
fabs
testl
sub
ss
jmp
inc
push
bound
dec
les
inc
push
test
pop
cmpsb
aad
xor
test
push
sti
test
aaa
cmp
jecxz
push
shrb
mov
dec
int3
inc
popa
or
call
jecxz
xchg
push
xor
jb
filds
inc
insl
mov
lret
pop
sub
jns
popf
sqrtps
mov
out
shll
mov
scas
add
mov
shlb
icebp
push
mov
imul
jecxz
xor
insl
mov
in
clc
loop
mov
lock
cld
jbe
xchg
shll
aad
psraw
add
mov
lret
mov
ja
mov
push
test
sbb
ds
das
sub
jno
mov
and
test
test
mov
test
inc
cmpsb
inc
or
xchg
xchg
inc
gs
push
fnstcw
dec
loop
outsl
inc
mov
adc
adc
cs
xchg
dec
sbb
inc
mov
pop
inc
and
or
aaa
or
cmp
lcall
push
or
sbb
inc
outsb
xchg
arpl
cmp
lds
add
inc
dec
loopnew
xchg
loopne
rcr
mov
pop
mov
push
scas
and
and
and
mov
xorps
pop
cwtl
in
jle
jno
test
sub
sbb
fnstenv
sbb
pop
ror
push
or
cmp
xchg
push
rcr
xor
jb
frstor
in
lcall
mov
dec
pop
mov
jge
test
push
sub
xor
jge
sub
jne
jno
push
scas
fldl
mov
clc
inc
loope
or
push
sub
cmp
adc
sti
ret
hlt
dec
mov
pop
int
clc
cmpsl
out
nop
jno
jmp
push
or
jns
xor
inc
xlat
inc
jae
int3
cmp
andb
cmpsl
bound
test
int
dec
add
pop
dec
imul
inc
mov
mov
and
jmp
xlat
ror
cmc
jae
rclb
fcomps
repnz
iret
xchg
into
push
sahf
inc
rcrl
cmpsb
sahf
scas
inc
lcall
push
sbb
cwtl
lock
pop
pop
or
ficoms
and
sbbl
mov
outsl
pop
gs
js
and
sub
inc
pop
xchg
adc
mov
aad
mov
ret
xchg
xchg
pop
mov
adc
cmp
sti
je
pop
cmp
jp
sub
lods
cmp
push
dec
mov
ret
int3
loop
aam
aas
adc
mov
mov
dec
add
fisubl
pmaddwd
movsb
add
cmp
or
mov
sub
mov
jns
lret
xchg
nop
stos
dec
fcomp
xchg
inc
fcmovb
lret
fimull
cmc
lods
arpl
scas
movsl
aad
jecxz
sub
add
adc
mov
or
sbb
mov
push
lock
inc
jbe
xor
daa
and
ret
push
bound
sbb
push
sahf
and
insb
das
int3
sub
call
xchg
mov
sbb
inc
cmpsb
xor
neg
pop
cld
xor
sub
mov
mov
rolb
shlb
adc
pop
jne
xchg
stos
mov
int3
out
adc
sub
or
dec
and
leave
mov
sub
pop
cmpsb
popa
pop
stos
in
idivl
repnz
and
push
lret
mov
or
or
dec
cmp
mov
jg
fnstenv
cmpsl
inc
pop
mov
dec
test
mov
stc
ljmp
rdtsc
cmpsb
or
clc
lock
xchg
inc
nop
enter
arpl
xchg
das
subb
cmp
mov
cmpsb
loopne
addl
cmpsb
pop
es
sbb
lock
loop
xor
mov
icebp
adc
insl
dec
and
mov
jmp
or
dec
mulb
jae
and
incb
pop
jl
call
push
xor
mov
lea
ficoml
mov
gs
inc
mov
xor
out
clc
or
sub
push
mov
push
mov
pop
insb
int3
push
repnz
sbb
mov
in
jb
roll
pop
pop
imul
push
xchg
mov
cld
mov
pop
cmp
dec
pop
add
or
fnstsw
adc
inc
jno
adcb
mov
sti
or
fbstp
add
pop
jp
pop
cld
inc
popa
mov
test
fsubrs
loopne
jnp
in
sbb
xchg
shr
mov
iret
in
in
out
ret
int3
cs
stc
inc
sbb
and
add
cmp
lea
jg
clc
addb
ja
xchg
aad
cmpsb
mov
cmpsl
dec
movb
dec
ret
or
and
pop
sub
bound
loop
jne
data16
mov
push
sub
xor
int3
xor
clc
adc
pop
dec
aad
icebp
cld
and
sbb
sbb
inc
add
mov
jle
xchg
rcrb
aaa
mov
in
fwait
jecxz
lcall
cmp
sub
cmc
inc
cmp
loop
inc
and
mov
cmpl
xor
dec
out
pop
fwait
leave
cltd
xchg
mov
test
imul
pop
jle
daa
or
sarl
push
mov
addl
adc
add
ret
add
cmpsl
pop
aad
sarb
mov
leave
xchg
push
adc
sub
rcrl
mov
notl
pushf
xchg
mov
xor
inc
xchg
mov
int3
lods
lods
push
cmp
mov
sub
adc
int3
cs
mov
and
ss
pushf
stc
loopne
inc
pushf
xor
jge
lock
ds
sarl
outsb
push
push
dec
test
lods
xchg
mov
scas
pop
pop
push
jmp
ljmp
cld
inc
test
movsl
pusha
or
xor
ret
xor
lock
in
jbe
push
aam
inc
cs
int
push
inc
cmpsb
xchg
bound
xor
test
xchg
cmp
cmc
push
push
cmpsb
add
jmp
ljmp
test
push
insl
mov
ficoml
outsl
add
xor
mov
pop
test
sahf
insb
int3
and
scas
xlat
adc
mov
arpl
mov
inc
addb
test
mov
sub
push
aas
movsl
dec
cmp
int3
shlb
or
nop
inc
popa
loope
xchg
imul
xchg
xchg
jge
adc
dec
mov
dec
inc
dec
push
hlt
aaa
movsl
fsubl
js
mov
outsl
inc
jecxz
inc
and
mov
adc
int3
jmp
pop
add
loope
insb
int3
arpl
cmp
mov
cmp
mov
push
mov
movl
shll
jno
mov
fldenv
ds
insb
mov
test
cs
cmpsb
lahf
mov
push
ja
movsl
inc
scas
mov
jg
dec
test
das
adc
jmp
sub
test
dec
push
jmp
mov
int3
enter
ja
in
mov
dec
or
les
and
inc
xchg
roll
push
cmpsl
add
pop
mov
and
xchg
inc
inc
mov
out
cmp
sub
stc
repnz
int
insb
xor
ljmp
pop
rcrb
in
popf
sarb
test
dec
mov
mov
sub
pop
addl
cmovb
mov
lahf
jg
push
pop
lea
xchg
hlt
xchg
push
push
cmpsb
jmp
ror
mov
ljmp
stc
mov
les
cs
pop
add
jl
imul
jmp
xchg
outsb
inc
stos
xchg
aam
cmpsl
jmp
pop
inc
clc
jle
cmp
daa
inc
pop
add
or
dec
fs
pop
ret
add
xchg
inc
push
out
iret
bound
testb
rcrl
sub
xchg
mov
es
xchg
cmp
fistpll
cmpb
xor
adc
rcll
int3
insl
mov
inc
add
outsl
in
jne
inc
test
int3
in
mov
dec
fcoml
and
bndldx
dec
inc
lock
cltd
inc
aaa
inc
jmp
adc
or
mov
les
xor
out
test
inc
or
mov
pop
xchg
es
jg
inc
in
mov
push
dec
out
xchg
push
jp
test
test
mov
jg
adc
insb
loope
int3
jmp
rorb
jns
or
inc
fnstenv
mov
in
push
push
pop
or
cmp
inc
push
inc
sbb
loopne
push
sub
xchg
inc
pop
mov
or
inc
jb
arpl
mov
jmp
mov
ror
testl
xchg
mov
mov
repnz
add
inc
add
pop
std
jp
cmpsb
loop
sub
xor
loopne
xchg
dec
jge
int3
mov
cmp
xor
in
and
pop
sarb
xchg
or
movsb
or
adc
in
inc
das
in
call
pop
loope
rcrb
xor
jns
pop
jle
mov
lret
out
mov
xchg
sub
mov
lret
shrl
push
shll
and
mov
push
dec
sbb
inc
enter
xchg
inc
xchg
inc
cs
test
xchg
lock
mov
int3
test
inc
sahf
sub
int3
jnp
xor
int3
das
add
mov
pop
mov
insb
fs
sbb
inc
int3
sub
xlat
push
ja
push
lcall
movb
jne,pn
cmpsb
or
inc
out
xchg
nop
jmp
mov
mov
ss
xchg
stos
inc
sbb
test
dec
js
push
pop
xlat
mov
mov
lret
out
gs
jle
ficomps
cvtdq2ps
out
sub
xor
je
in
mov
mov
mov
test
mov
gs
lods
mov
inc
push
dec
loope
roll
insl
ret
dec
push
fidivrl
repnz
sarb
xchg
das
std
sbb
or
mov
or
aam
movsl
sar
lahf
push
mov
call
loopne
push
cmpsb
out
mov
cmovge
add
sub
pop
mov
xchg
and
pop
dec
jge
mov
outsb
mov
mov
mov
push
mov
push
dec
pushf
jmp
fwait
js
mov
cwtl
inc
lret
loopne
fcmovne
mov
lret
insl
jle
je
cld
mov
mov
leave
cltd
mov
in
std
and
and
mov
ret
cli
mov
push
int3
xchg
jg
pop
popa
out
cmpsl
xor
pop
pop
loope
int3
stos
lea
adc
aam
jge
cmp
fs
sbb
ds
mov
cmp
push
adc
aam
daa
xor
mov
pusha
xchg
mov
test
mov
daa
sub
mov
mov
pop
int3
sbb
das
in
push
jl
cmpsb
mov
pop
add
mov
push
mov
repnz
in
clc
push
inc
mov
sbb
dec
in
hlt
jecxz
sub
cmpsb
hlt
test
fiadds
insb
cmpsb
pushf
arpl
leave
inc
jle
xor
ret
adc
and
jmp
int3
bound
in
loope
shld
ret
push
repz
shrl
jno
in
pop
adc
pusha
mov
mov
cmp
cmp
cltd
ds
ss
adcl
movsl
cmp
xor
inc
int
or
sbb
and
test
mov
jb
xor
int3
push
xchg
in
xchg
mov
test
mov
push
data16
push
sahf
inc
pop
inc
inc
dec
rcll
test
jp
sarl
add
or
jbe
es
mov
jne
fstp
mov
and
popf
and
adc
pop
pop
jl
pop
adcb
mov
aaa
loopne
loop
jnp
lcall
movsb
adc
inc
notl
cmp
cmp
shrb
add
mov
or
jecxz
loop
inc
test
imul
mov
push
inc
imul
sbb
fdivrs
pop
pop
jl
ja
fcoms
inc
pop
int3
mov
xchg
mov
nop
in
das
adc
sub
pop
loop
movsb
mov
add
push
data16
int3
mov
inc
jmp
mov
and
xor
sbb
xchg
outsb
push
cltd
shr
pop
ficompl
ret
and
jno
pop
sub
mov
xchg
loop
es
dec
cmp
fwait
push
or
aaa
minps
mov
dec
cmp
sbb
fcomi
icebp
outsb
sub
pop
ret
push
xor
insb
int3
pop
mov
pop
std
popa
in
mov
xlat
shl
pop
les
data16
jmp
in
mov
fwait
push
pop
aaa
mov
or
push
inc
stos
int3
jmp
mov
mov
mov
cmpsb
sbb
out
repnz
leave
test
and
sbb
jae
fistps
loopne
fsts
sub
sti
push
add
enter
lcall
pop
push
push
xlat
out
adc
stos
rcr
sbb
sub
enter
mov
pop
push
add
outsb
stc
int3
or
cmp
imul
fcmovu
inc
cmp
or
jl
mov
pop
and
ds
jl
es
mov
rorb
pop
mov
pop
inc
sahf
mov
in
mov
ret
popf
aad
aad
mov
xor
rcrl
pop
jnp
lret
fyl2xp1
stos
cmp
jo
aam
and
or
mov
push
fadd
inc
loope
push
out
mov
inc
pop
sub
aad
or
pop
jle
dec
shlb
push
sahf
std
aam
stos
cmp
outsb
mov
arpl
jp
cmpsl
inc
xchg
ja
xchg
in
shlb
iret
push
inc
mov
xor
pop
add
cmp
push
aaa
add
aad
xor
inc
cld
dec
pop
sbb
rcrb
leave
popf
repz
inc
cmp
repnz
mov
repz
int3
and
out
xchg
mov
pop
mov
shlb
pop
and
push
inc
sbb
and
pop
inc
hlt
dec
insb
mov
mov
int
sbb
fistpl
gs
adc
pop
mov
xor
push
xchg
pusha
cmp
jle
inc
ds
lcall
scas
test
aaa
out
push
add
sub
push
cmpsb
fnstsw
mov
xchg
xlat
adc
daa
mov
cmp
outsl
cmpsb
rcrl
cmp
sbb
jnp
jae
wrmsr
adc
fcmove
jmp
dec
aas
sbb
imul
es
inc
lock
adc
push
mov
cmpsl
sub
adc
addr16
popa
cmc
ja
xchg
xor
jmp
arpl
vpsrad
sub
fwait
in
mov
jp
dec
pop
and
and
and
fwait
rcrb
sub
sub
xor
rol
mov
js
daa
push
popa
in
dec
out
int3
sub
test
xor
xchg
cmpsl
add
inc
add
mov
pop
in
mov
repnz
lds
inc
mov
aad
ja
in
pop
add
fs
les
push
enter
mov
or
inc
clc
das
jle
cmpsb
xlat
pop
and
inc
mov
call
pop
push
rorb
int
shlb
pop
movd
pop
dec
and
adc
dec
pop
dec
mov
inc
int3
mov
jo
dec
pop
mov
in
and
mov
cltd
mov
xor
add
mov
jmp
rcr
jl
sbb
cmc
adcl
or
cmpsb
adc
inc
mov
xchg
adc
inc
add
int3
scas
pop
sbb
add
rorb
jmp
xor
sub
mov
mov
cmpsl
jmp
lock
sub
lret
loope
ljmp
push
bound
or
inc
cmc
dec
int3
mov
bound
fmull
in
inc
enter
cmp
pop
cmp
adc
dec
mov
pusha
push
xor
mov
nop
pop
out
ror
stos
int3
inc
sbb
fstpl
fsubrs
mov
push
data16
xchg
pop
nop
cmp
mov
arpl
inc
xchg
adc
cld
rorl
mov
mov
insb
mov
jb
or
inc
cmp
and
push
pop
stos
xchg
int3
in
fidivrl
adc
enter
pop
inc
jne
mov
and
mov
ja
frstor
mov
dec
jae
dec
pop
sbb
outsb
icebp
push
jle
dec
inc
and
add
jp
mov
adc
sbb
inc
xlat
addr16
sbbb
pop
pop
shrb
mov
mov
icebp
inc
jmp
sbb
popf
dec
inc
mulb
lods
xor
sub
pop
mov
or
into
add
sub
icebp
or
or
std
and
subl
or
sbb
pop
pop
fs
and
inc
scas
sbb
inc
push
inc
push
cmpsb
mov
mov
push
inc
mov
fdivrl
fwait
mov
jne
ret
sbb
pop
das
inc
loope
add
mov
xchg
jbe
mov
or
divb
insb
movsl
insb
push
out
aam
sbb
mov
mov
lret
inc
pop
jl
sti
test
loop
xchg
xchg
jo
or
xor
stc
out
sub
sbb
mov
mov
test
scas
dec
mov
mov
cmpsb
pop
fs
xchg
dec
pop
sub
jle
in
mov
cmp
lcall
pop
pop
push
push
sbbb
inc
data16
pop
icebp
jecxz
adc
mov
jbe
clc
mov
ja
sbb
fistpl
and
xor
cli
cmp
test
shrb
ss
sub
push
jmp
imul
cmp
pusha
push
cmpsb
inc
add
clc
sub
daa
dec
mov
or
adc
or
xchg
rcrl
sub
bound
stc
inc
mov
push
loop
pop
cmpsb
insl
sahf
add
out
inc
notb
inc
pop
out
or
rcll
inc
and
dec
loopne
and
aaa
push
xchg
pop
xchg
mov
stc
cmc
ret
cmp
lods
mov
pop
inc
dec
jbe
lcall
repnz
xchg
mov
pop
push
cmp
inc
negl
mov
add
lds
repnz
bound
cmp
lret
cmovs
std
add
jno
loope
add
ss
sbb
call
aaa
jbe
mov
pop
jae
jecxz
mov
mov
xor
repz
pushf
pop
ljmp
in
out
mov
push
repz
sbb
sbbl
push
add
mov
in
pop
jge
jmp
sub
and
mov
insb
fistpl
mov
mov
dec
cmpsb
dec
out
push
inc
loope
mov
push
or
inc
inc
jge
inc
lret
insb
insb
add
mov
jb
mov
mov
shll
movsb
int3
in
dec
cld
outsb
repz
sub
lcall
mov
xlat
mov
xchg
std
sti
pusha
jge
ror
loope
pop
bound
cltd
add
mov
mov
xchg
sbb
pop
sbb
mov
add
int3
mov
xlat
loop
mov
sbb
push
out
cmp
and
mov
cwtl
test
jl
mov
cmp
insb
mov
clc
cwtl
mov
jne
push
sarl
cmp
pop
fnstenv
enter
cmp
test
pop
jmp
cmpsb
mov
push
loope
fwait
xchg
enter
mov
fadds
mov
mov
mov
fnstcw
lret
add
lea
push
sbbl
int
int3
lcall
aam
dec
xchg
mov
mov
int3
mov
jns
leave
cmpsb
or
cs
sub
inc
mov
xchg
push
pop
add
pushl
int3
cld
jmp
icebp
mov
ret
imul
int3
sbb
lods
data16
push
mov
stos
push
sbb
inc
jge
fdiv
mov
push
mov
lret
rclb
pop
inc
gs
push
push
or
add
int3
adc
jbe
mov
pop
inc
cmpsb
inc
aam
rcrb
pop
cmp
adc
xchg
es
scas
pop
lahf
add
mov
ja
fidivs
mov
xchg
mov
cmp
lret
inc
xor
xchg
repnz
cmp
std
add
nop
pop
fld
mov
push
int3
dec
mov
and
cmp
daa
jns
xchg
and
mov
out
pop
movsb
inc
fs
mov
sbb
xchg
jmp
mov
jb
fisttpll
adc
cmp
aam
out
inc
push
mov
out
in
xor
jo
push
xchg
lcall
mov
mov
shrb
mov
dec
rcl
data16
int3
dec
push
pop
stc
sbb
inc
xchg
pushf
aaa
movsb
push
sarl
out
pusha
fistpll
stos
inc
fdivrl
subl
scas
aad
nop
icebp
mov
pop
inc
xchg
pushf
adc
iret
sub
mov
cmpsb
mov
mov
inc
sub
mov
sub
push
dec
movsl
cmp
push
int3
repz
mov
add
pushf
add
sahf
push
arpl
out
aam
mov
int3
push
push
out
push
dec
xorl
addl
out
mov
pop
aam
mov
in
mov
inc
xor
cli
jne
jae
pop
scas
fistpll
divb
push
ds
jno
mov
sub
loope
add
int3
cmp
imul
or
mov
mov
imul
int3
jbe
mov
adc
sbb
mov
xor
push
fs
out
iret
sbb
and
inc
repnz
loope
int3
dec
dec
hlt
test
inc
cmpsb
neg
mov
pop
pop
imul
subl
mov
mov
loop
cld
jecxz
push
add
inc
or
out
out
sub
mov
push
push
cmp
jb
stos
mov
icebp
inc
mov
jno
les
ret
cmp
jns
or
jb
pop
jns
out
shll
push
push
int3
into
push
hlt
enter
push
mov
in
push
add
push
or
inc
js
test
out
loopne
psubsb
fdivl
movb
xor
lret
mov
call
fs
lds
fadds
adc
inc
out
mov
test
and
mov
jg
ffreep
adc
add
sti
sbb
cmp
xor
mov
mov
movsl
add
cs
leave
sub
dec
and
sub
sub
lret
cmpsb
aas
jo
cmp
adc
int3
push
loop
test
or
bound
shl
movsl
xor
add
jge
loop
mov
pop
sbb
add
cmc
inc
fisttpll
subb
mov
jl
jne
jb
inc
pop
outsb
add
sub
dec
inc
mov
add
into
dec
pop
or
inc
cmc
cli
popaw
arpl
inc
xchg
fwait
data16
inc
cmpsb
push
loopne
mov
es
lcall
mov
shrl
inc
lods
repz
lret
push
pop
sub
inc
in
mov
dec
orb
leave
xchg
dec
mov
mov
jne
jmp
cs
cmpsb
leave
sbb
rolb
int
pop
shrl
mov
adc
insl
inc
test
les
int3
daa
nop
xor
adc
stos
and
outsb
adc
xor
mov
cwtl
out
popf
xchg
add
dec
xor
testb
pop
push
cmp
add
pop
push
addr16
in
dec
adc
int3
aad
fbld
mov
add
scas
push
clc
aas
xchg
mov
cmc
dec
pop
cmpsb
test
flds
rcr
dec
sbb
cmp
in
dec
rcll
mul
int
lods
jp
pop
insb
pop
jb
sub
and
insl
repz
push
xchg
push
je
inc
lret
inc
js
mov
xor
cmp
xor
shlb
imul
in
pop
mov
add
adc
pop
pop
dec
push
jns
mov
ds
mov
jle
jmp
int3
jg
adc
mov
mov
mov
out
xchg
push
pop
adc
mov
mov
gs
inc
shlb
pop
aad
pushf
js
js
jae
mov
jns
add
sub
pop
jp
sub
movsl
test
pop
adc
mov
inc
push
pushf
mov
fbld
mov
push
pushf
popa
and
sbb
mov
std
je
mov
push
das
mov
add
jb
sbb
jae
int3
lock
push
cwtl
or
mov
adcb
and
in
movsb
pop
aas
sub
jge
outsl
inc
ret
int3
fdivrp
mov
sbb
or
repz
jns
jge
adc
scas
dec
shrl
xchg
pop
cmp
sub
mov
sbb
in
push
lret
add
ret
xor
and
push
les
cmpsb
testl
xor
jmp
push
cmp
outsb
test
into
adc
out
rcl
pop
in
adc
dec
jle
mov
inc
mov
sbb
pop
sbb
dec
pop
cmp
push
push
inc
ret
cmp
inc
mov
and
fmul
in
jb
add
cmpsb
cmp
ss
repnz
jl
and
add
xor
pop
inc
add
sbb
fisubs
cmp
int3
jo
mov
scas
test
dec
mov
adc
fstpl
sbb
je
inc
sbb
ss
pop
jg
insb
stc
push
clc
add
mov
daa
cmp
fnstcw
mov
hlt
fmul
xor
sbb
stc
dec
jae
jno
push
and
push
xchg
inc
sahf
int3
xchg
mov
pop
mov
push
jo
ss
test
insl
ffree
stos
cld
les
or
addb
dec
roll
mov
push
inc
mov
int
inc
sub
cmp
pop
cmpsl
call
hlt
push
pop
nop
pushf
pushf
mov
ja
push
cmp
cmpsb
or
jl
inc
adc
fsubs
aad
cmpsb
xchg
loop
or
cmpsb
or
les
cmp
cmpsb
pusha
into
inc
daa
jg
adc
shll
rcll
jecxz
mov
mov
ret
mov
in
and
rorb
or
fwait
in
test
inc
sti
or
popf
push
in
mov
mov
in
scas
inc
popl
roll
cmpsb
cmp
sbb
sbb
sbb
mov
mov
int3
jg
add
adc
int3
cmp
shll
repz
xor
inc
dec
bound
pop
cmpsb
pop
nop
into
mov
mov
mov
es
in
call
sarl
fcmovnu
pop
fincstp
xor
les
xor
inc
mov
inc
sub
adc
inc
stos
fwait
mov
inc
mov
out
fdivl
jbe
loopne
call
pop
int3
push
and
sarl
leave
pop
cmp
out
out
or
imul
cmpb
cmp
or
or
jle
xchg
pop
out
dec
js
pushf
inc
pop
daa
int3
imul
pop
cmc
test
sub
aad
data16
stos
mov
jp
pop
movsl
fcom
mov
ret
inc
dec
mov
icebp
or
inc
in
mov
lds
jno
push
int3
iret
pop
mov
fstpt
mov
fs
lods
pop
jp
cmpsl
into
add
pop
xor
inc
in
jl
and
pop
sub
ficoms
fs
mov
mov
ja
push
mov
mov
stos
push
push
or
out
xchg
or
mov
inc
mov
subb
pop
add
imul
push
push
inc
ret
inc
mov
lods
out
int
push
imul
adc
fwait
and
iret
mov
cmpsb
xchg
stos
gs
pop
sub
push
inc
cltd
jne
lret
lds
sbb
mov
and
js
fstps
jecxz
xor
pop
nop
or
inc
and
insl
push
ss
addb
or
add
enter
fnstenv
test
ret
popf
xchg
pop
jmp
es
lods
or
ror
dec
loop
clc
push
push
rclb
je
data16
or
pop
mov
jns
lods
pop
sbb
sub
int3
add
mov
fistpll
adc
mov
cld
stos
cmp
imul
std
or
xchg
rcll
mov
idivb
mov
das
pop
mov
aaa
lods
mov
addr16
inc
jae
dec
bound
dec
adc
pop
pop
jae
cmovge
xchg
inc
les
test
mov
cs
sub
cmpsb
int3
adc
mov
aam
xor
xor
in
xor
loop
cmp
mov
test
addl
insb
pop
dec
clc
mov
insb
mov
sub
ljmp
xlat
ficompl
cltd
divl
in
adc
lock
out
ljmp
das
cli
cmpsb
movl
int3
nop
push
movsb
outsb
dec
and
popa
mov
lods
mov
sbb
jp
sub
jl
xor
ret
repz
pushf
popf
and
sub
sub
int
cmpsb
sub
mov
dec
inc
cmpsl
add
xor
inc
push
mov
cwtl
int3
mov
dec
mov
pop
mov
andps
movsb
xor
hlt
test
mov
inc
pop
test
dec
fwait
mov
out
adc
stos
addr16
dec
and
xchg
mov
push
mov
mov
dec
inc
testb
popa
mov
adc
inc
xor
xchg
ljmp
addb
outsl
sub
mov
in
push
dec
fnstcw
pop
inc
pop
or
std
mov
add
es
sub
xor
ret
cmp
pop
clc
mov
adc
sbb
ds
rorb
xor
sbb
adc
jp
gs
fildll
pop
or
insb
dec
xor
lds
int3
jae
int3
xchg
push
inc
adc
push
lret
dec
mulps
test
inc
inc
incl
push
std
pop
add
leave
aas
mov
in
push
outsl
push
out
fdivrl
daa
and
shrl
dec
sbb
loope
jge
pop
loopne
cmpsl
unpckhps
movsb
mov
add
int
mov
imul
insl
ja
mov
test
hlt
cmpsl
loopne
dec
xchg
pop
stc
inc
imul
and
lea
adc
out
lret
jo
fs
mov
pop
mov
std
je
inc
out
inc
aam
mov
inc
ja
out
pop
fildl
and
push
ja
cmp
cmp
ja
xor
arpl
sahf
mov
jg
dec
clc
fsubl
xchg
ds
and
xchg
and
pop
cmp
push
pusha
les
jne
fs
cmp
sbb
jl
fbld
mov
int3
jge
sub
js
jg
mov
mov
das
or
out
inc
aad
inc
mov
lcall
sub
pop
push
sub
aas
stc
inc
inc
jae,pt
pop
test
pop
aam
es
dec
xchg
or
add
rclb
xchg
sbbl
jns
jg
jmp
push
into
jmp
call
xchg
jecxz
int3
je
pushf
ret
mov
xchg
test
ds
cmpsl
xor
movsl
mov
mov
movsb
mov
jbe
inc
inc
xchg
pop
es
int3
and
ja
int3
addl
push
cmpsb
pop
insl
arpl
nop
rcrb
lock
mov
test
mulb
ljmp
jne
adc
mov
cwtl
or
pushf
mov
xchg
imul
fisttpl
ja
lfs
add
aam
pushl
mov
inc
sbb
cli
in
xor
test
inc
scas
call
imul
pop
jae
xchg
inc
jnp
je
or
jp
push
add
lock
mov
push
fsts
aad
int3
inc
push
add
jbe
sbb
mov
mov
xchg
xchg
int
jne
lret
dec
out
pop
mov
ja
jnp
push
adc
repz
imul
stos
daa
mov
aam
mov
sub
dec
push
int
dec
lret
xor
jl
xchg
dec
xchg
mov
notl
jb
sbb
jmp
xchg
pop
adc
dec
cli
inc
sub
jbe
push
cmp
mov
jge
jg
jo
cmp
ficoml
sti
sub
mov
mov
dec
push
or
addr16
xchg
lea
ds
cmp
stc
sub
ss
ljmp
mov
clc
mov
adc
inc
pop
xchg
add
pusha
push
mov
int3
in
scas
daa
rcll
xchg
pushf
xlat
cltd
mov
test
xor
mov
jnp
jl
xchg
int3
jbe
xchg
in
push
mov
cmpsb
ret
aaa
jmp
aaa
sbb
dec
leave
pop
inc
sbb
pushf
dec
repnz
adcl
dec
cmp
lcall
jl
fs
daa
mov
iret
dec
mov
or
iret
jge
mov
iret
mov
inc
push
ja
movl
addl
jne
call
scas
xchg
mov
fwait
imul
xor
mov
push
pop
cltd
mov
mov
int3
mov
xchg
xchg
loop
sbb
dec
pop
call
lea
pop
sbb
sbb
adc
inc
xchg
inc
jge
inc
pusha
test
mov
cwtl
lds
int3
dec
mov
js
shll
arpl
pop
decl
add
or
mov
rcll
enter
mov
movsl
cwtl
int3
push
sahf
testb
movsl
shrl
repnz
mov
in
cmp
lods
mov
int3
rcrb
xor
int
sub
pop
movsl
xor
dec
outsb
mov
imul
out
inc
das
sub
pop
testb
mov
cmp
adc
sbb
cmp
mov
xchg
stos
pop
imul
jne
movl
enter
lods
int3
es
mov
ljmp
ss
dec
test
outsl
loopne
lahf
inc
pop
sbb
pop
dec
test
mov
jbe
and
jno
ljmp
pop
dec
fbstp
dec
dec
sub
aaa
nop
push
inc
jg
imul
xorb
or
pop
xor
sbb
pop
dec
dec
inc
jbe
add
fs
sbb
out
jb
push
ret
sub
iret
mov
repz
je
ja
jmp
and
mov
fnsave
pop
scas
sbb
int
iret
mov
mov
sub
mov
gs
push
inc
mov
lcall
or
mov
sub
es
into
sub
add
scas
pushf
lcall
pop
push
aas
lret
xchg
int3
pushf
adc
and
sbb
js
pusha
in
sbb
int3
adc
jns
test
dec
xchg
stc
call
rolb
jecxz
lds
es
adc
xchg
xchg
mov
mov
subl
das
lods
pop
ret
xor
shrd
arpl
inc
shl
mov
in
cltd
sub
es
pop
mov
notl
sti
fistps
or
jmp
adc
and
pop
jp
repz
mov
dec
rolb
pop
orb
leave
into
xor
mov
or
mov
cmc
cmp
xchg
fwait
stc
inc
int3
ds
add
std
pop
dec
imul
int3
xchg
and
mov
adc
mov
stc
inc
movsl
xchg
es
lock
mov
mov
in
inc
jb
pushf
mov
mov
mov
rclb
fnstsw
mov
add
cmp
push
dec
jmp
inc
pop
inc
es
mov
fisubrs
int3
cmp
pop
daa
push
movl
mov
dec
enter
shll
adc
out
test
push
pop
add
mov
inc
or
adc
je
add
popl
push
inc
cld
push
mov
pop
mov
jns
aam
clflush
xor
test
mov
dec
popf
mov
iret
je
testl
popa
pop
fs
push
sub
inc
dec
or
out
mov
push
ret
cltd
fnstcw
fld
fstpt
lea
adc
inc
or
lcall
pop
mov
xchg
xor
orl
cli
inc
and
cmpsb
push
push
ror
lods
cli
dec
fisubl
mov
push
xor
mov
pop
ja
xchg
xchg
std
shll
dec
mov
add
cmp
mov
lods
sub
fadds
mov
addb
and
jg
pop
pop
lock
mov
mov
push
mov
out
xchg
or
jbe
in
jle
xor
stos
int3
clc
inc
cwtl
pop
inc
int3
dec
mov
mov
movsb
pop
sbb
sti
pop
shll
add
shlb
fildl
sub
out
pop
data16
das
cmpsl
mov
pop
xchg
cmp
clc
loop
aaa
inc
imul
mov
inc
jmp
fnsave
nop
sub
xchg
inc
mov
std
pusha
out
inc
cmp
adc
push
jnp
push
std
inc
mov
sub
adc
jmp
sub
in
cmp
inc
sub
inc
or
sub
leave
xchg
sub
call
pusha
pop
in
fcom
das
mov
nop
adc
sbb
cltd
outsb
pop
movsb
orl
icebp
inc
pushw
push
push
test
fstps
push
xor
pushf
movb
mov
lahf
xlat
or
lods
je
test
addr16
mov
sbb
daa
cmp
cld
push
adcb
sbb
inc
dec
cmpsb
xchg
jmp
in
or
sbbl
test
inc
cwtl
cmp
and
mov
js
mov
pop
jbe
cmp
loope
cli
cmp
mov
push
inc
add
shll
int3
push
rcrl
out
push
int3
mov
or
inc
lods
cmp
and
mov
int
ret
int3
add
pop
dec
ljmp
fcmovnb
cmp
pop
push
test
das
popf
cmp
add
fmull
pop
and
les
fwait
pushf
dec
sbb
mulb
out
or
imul
clc
iret
icebp
pushf
nop
imul
adc
mov
loopne
xchg
inc
mov
int3
add
roll
es
cmc
pop
jl
sbb
xor
add
xlat
outsl
dec
mov
push
mov
std
dec
mov
sub
and
out
mov
cmpsl
lret
mov
std
pop
mov
loopne
push
pop
dec
xchg
subb
jo
ds
xchg
sub
sub
jmp
push
push
arpl
xchg
jle
add
leave
cltd
or
mov
mov
mov
jnp
inc
pop
cwtl
adc
cwtl
call
sbb
and
xchg
mov
mov
mov
inc
in
imul
mov
ljmp
jb
mov
sub
jge
test
pusha
mov
std
xchg
sub
aam
mov
imul
rolb
sbb
xchg
nop
push
out
sbb
inc
lods
mov
jno
icebp
mov
imul
sbb
sbb
pop
hlt
ficoms
mov
pop
jns
xchg
inc
push
scas
clc
add
pop
push
lds
outsl
cmp
jb
and
mov
fidivl
mov
pop
or
mov
xchg
cmovbe
in
dec
adc
push
cmpsb
out
push
imul
or
sar
into
jecxz
dec
sti
popf
iret
fs
mov
pop
loop
hlt
jbe
pop
pop
in
aam
and
lea
outsb
aad
cmpsb
or
inc
int3
fucomi
lcall
mov
push
or
out
int3
lock
out
add
pop
in
push
inc
mov
cmp
or
jae
pop
aas
lods
xor
pop
cmp
outsb
int3
push
test
pop
xchg
sub
into
and
jae
test
push
and
jno
sub
ja
inc
mov
int3
push
lock
xchg
and
data16
loopne
jne
fldenv
and
pop
mov
ljmp
roll
mov
adc
mov
adc
push
addr16
pop
cmpsb
sbb
jns
pop
inc
in
outsl
mov
dec
cmc
xor
pop
shl
icebp
push
push
mov
pop
add
arpl
push
bound
mov
test
stos
rorb
xor
test
push
xor
sti
mov
bound
imul
jle
xchg
add
mov
fcos
or
pop
cmpl
pop
leave
lods
daa
js
fldenv
cltd
adc
test
sub
daa
loope
cltd
xchg
mov
cmpsb
pop
mov
aam
mov
dec
inc
dec
lcall
inc
mov
or
inc
cwtl
and
pop
mov
scas
jge
xchg
fistl
sbb
shll
mov
add
rorl
test
filds
lods
std
xorb
mov
jle
xor
enter
push
clc
mov
or
dec
sbb
shrb
rol
inc
add
pop
pop
mov
sbb
ffreep
mov
test
sbb
int3
daa
adc
push
addr16
test
std
inc
cmp
and
sti
movsl
fisubs
adc
xor
xacquire
shlb
stos
inc
lahf
pop
outsl
mov
xchg
ffree
in
push
sub
jmp
fs
icebp
pop
hlt
xchg
in
ud1
or
fsubs
add
popa
jne
fldl
mov
pop
xor
es
mov
or
push
dec
int3
cmp
push
aaa
pop
and
lea
stc
and
jmp
rclb
jp
int3
and
mov
jne
fidivrl
push
fisubs
inc
jmp
jg
pop
in
xchg
xchg
pop
sub
jne
mov
sbbb
decb
shrb
pmulhw
mov
inc
test
sub
and
sub
into
cwtl
mov
rcrl
inc
xor
mov
jne
dec
cmp
xchg
aam
inc
out
inc
cmp
cwtl
negl
test
ja
test
in
mov
lods
lret
xchg
adc
sub
fwait
dec
pop
pushf
mov
push
sbb
sbb
int3
xor
test
xchg
mov
or
repnz
loopne
inc
mov
cli
je
lahf
cmp
lods
aam
inc
clc
cld
adc
jmp
pop
rcrl
ret
jmp
int3
das
sbb
or
jae
dec
cmpsb
or
or
and
in
es
pop
and
or
outsb
xorb
fstpl
into
mov
cmp
ds
addl
adc
insl
dec
adc
and
lahf
es
push
xchg
cmp
push
cmpsb
daa
loop
shl
xor
int3
js
fidivrs
loop
or
mov
and
orb
pusha
xchg
insl
movsb
shrl
or
lcall
push
test
in
add
push
insb
mov
mov
mov
adc
aas
inc
sub
cmp
sbb
stc
lock
add
and
mov
and
lods
add
shrb
mov
sahf
mov
loopne
mov
inc
ds
test
mov
sbb
cmpsb
mov
nop
int3
sar
xlat
xchg
xchg
xchg
push
imul
cmp
pop
gs
cmp
stc
add
inc
add
xorb
sub
fistps
insl
adc
pop
cmpsb
cs
pop
popa
fnstsw
int
les
mov
clc
lret
add
stos
mov
inc
push
dec
gs
ud0
stos
cmpb
in
add
xchg
mov
popf
testb
xlat
mov
mov
push
inc
fidivrs
adc
jmp
and
cmp
xor
lods
stc
adc
rcll
add
sub
bound
insl
jne
ret
inc
dec
test
add
test
fmulp
dec
scas
adcb
mov
push
xor
aas
cmp
fldenv
frstor
scas
mov
push
int3
fstl
dec
and
xchg
cmpsl
mov
mov
sub
push
jle
aam
push
in
out
fldenv
dec
cmp
pop
pop
fiadds
push
aas
pop
lcall
call
decb
inc
cmpsb
repz
inc
push
dec
and
add
mov
mov
ret
fsubp
lret
andb
jbe
ja
fs
subl
mov
mov
mov
neg
es
mov
lret
jmp
xor
push
enter
bound
je
pop
movnti
or
jmp
xor
xor
lret
pop
lock
or
addr16
int3
or
add
ds
sub
jno
mov
pop
or
mov
push
arpl
inc
cli
fwait
cmp
push
std
jmp
call
xorl
es
cli
sub
xchg
pop
pop
mov
sub
cltd
iret
pusha
adc
sbb
pop
in
jo
inc
inc
sbb
int3
xchg
fldt
sub
xchg
cmp
mov
jne
xchg
fstps
sub
shlb
imul
sbb
pop
cmpsl
rorl
enter
mov
mov
lret
shll
outsl
repz
mov
xlat
and
sbb
ss
loop
dec
cmpb
adc
fsubrp
add
mov
adc
jecxz
lds
jno
out
pop
mov
and
in
js
jns
inc
xchg
cmp
push
std
clc
inc
sub
push
scas
mov
inc
pushl
xchg
sub
fidivs
push
imul
cmp
pop
in
fbstp
in
add
mov
sub
cmpsl
stos
mov
push
leave
dec
inc
or
les
arpl
sti
or
mov
leave
test
aas
inc
inc
sbb
cmpsb
and
out
sub
out
jb
mov
fistpll
fsub
xchg
sahf
int3
xor
int
xor
mov
int3
xor
int3
dec
loop
dec
call
popf
js
sub
jae
lret
data16
mov
mov
rcrb
notl
fiadds
push
loop
cwtl
aas
fxch
lock
dec
jne
je
fistps
out
inc
dec
pop
and
xchg
repz
push
or
jnp
push
mov
inc
movsb
lock
ret
pusha
stos
jbe
xor
fistpl
mov
mov
jnp
cs
cmpsb
std
dec
or
enter
pop
in
lahf
add
sbb
stos
sub
jg
jmp
shrb
jae
add
push
dec
sub
dec
nop
xchg
add
add
cmp
movb
xor
or
pushf
mov
add
orb
xchg
mov
iret
mov
das
push
push
jae
fistpll
adc
pop
fbstp
push
adc
jns
pusha
mov
jnp
dec
cltd
into
fcmovb
adc
popf
mov
jge
add
test
lahf
jl
lahf
lods
dec
mov
cs
mov
dec
in
jmp
lret
push
mov
decb
sti
hlt
sahf
addr16
loop
inc
cld
or
pusha
add
push
call
mov
add
sbb
movsl
in
inc
jp
jle
or
sbb
mov
pop
pop
cmpsl
in
or
out
inc
rolb
ljmp
shl
jne
decb
mov
pop
hlt
js
dec
stos
adc
icebp
cmp
push
or
jnp
mov
push
xor
pushf
add
inc
cwtl
sahf
fldl
jmp
jp
ret
xchg
jns
mov
sti
lds
push
push
and
aas
subl
xchg
pop
cmpsb
add
ret
inc
imul
cli
mov
push
stc
imul
shrl
bound
cmpb
int
mov
xchg
cli
jge
inc
add
cmp
in
lods
lea
leave
cs
mov
adc
push
jl
push
out
push
imul
inc
ficomps
mov
adc
pop
ja
mov
lods
ds
jp
xor
pop
or
loope
and
and
dec
in
sbb
int3
dec
cmp
push
push
fmull
jecxz
stos
aad
pop
movsl
xor
cwtl
mov
dec
mov
xor
inc
popf
shr
sub
ja
sub
dec
xchg
sub
pop
sbb
adc
fninit
or
push
mov
xchg
test
fwait
xor
jae
mov
loope
inc
lock
test
dec
insb
jo
mov
into
test
xor
insl
cltd
jg
imul
ficompl
or
sub
fnsave
int3
dec
fsubrs
or
cmp
xor
sub
cltd
int3
stc
push
das
pushf
mov
inc
push
mov
incl
xchg
in
cli
inc
subb
mov
xchg
mov
xor
mov
in
pop
lahf
adc
adc
sbb
orl
mov
xchg
cld
cli
pop
push
into
scas
xchg
inc
inc
iret
sar
loop
int3
mov
pop
mov
push
sub
inc
mov
je
push
pop
ss
data16
mov
das
fcmovb
and
rorb
lret
pop
jne
outsl
clc
inc
stos
inc
xchg
dec
test
popf
into
or
xor
inc
cmp
add
inc
inc
cltd
cmc
test
stos
in
pop
pushf
aam
xchg
xor
cmpsl
pop
pushl
inc
lods
jo
lahf
pop
pop
pop
push
dec
jne
pop
mov
push
mov
jmp
inc
dec
ret
xor
dec
inc
leave
ret
orb
and
mov
ds
fcomps
fistl
xchg
pop
mov
sub
mov
push
imul
inc
scas
mov
daa
jbe
inc
sbb
push
jnp
aam
int
xchg
sbb
jo
xchg
insb
int3
xor
hlt
pop
scas
inc
imul
out
lods
adc
jnp
ffree
repnz
in
mov
shlb
cmp
shlb
mov
cmp
add
adc
in
shll
call
fldenv
dec
xchg
lret
int3
cmpsl
mov
pushl
adc
das
jbe
aaa
dec
leave
lea
mov
pop
mov
imul
mov
add
dec
std
fsubr
test
mov
and
xor
mov
jae
cmpsb
or
cli
jb
xchg
jge
out
lret
mov
lods
xchg
jbe
lcall
mov
or
pop
jmp
outsb
clc
sub
mov
cmp
es
fimull
fucomp
sub
adc
bound
ret
out
cmpsl
jl
mov
leave
pushl
out
cltd
pushf
push
dec
ss
cmpsb
loope
test
and
mov
mulb
sahf
mov
scas
popf
mov
adc
push
jae
mov
sub
push
inc
loope
popf
pusha
xor
rol
pop
cmp
push
cltd
and
scas
ror
jmp
jns
aam
icebp
lods
lock
movsl
pop
leave
inc
out
lock
xchg
popf
push
dec
pop
and
push
lcall
push
mov
pop
mov
js
jbe
lret
cmpsb
xchg
jge
bound
mov
inc
xor
pop
ret
int3
xchg
push
xor
push
int3
or
pop
shl
testb
pop
mov
lock
jle
mov
xor
pop
in
and
mov
or
jno
or
pop
inc
pop
cmpsb
sub
sub
sub
cs
test
rolb
divl
dec
pop
lock
xchg
push
lret
push
sub
adc
int3
gs
aam
xorl
cwtl
cmp
mov
sub
les
int
mov
bound
pop
lock
repz
rolb
ret
repz
fwait
cltd
mov
outsb
cmp
inc
cmpsb
ss
popa
aaa
mov
repz
fs
arpl
fs
sbb
push
xchg
lret
dec
mov
cmp
shr
pop
mov
mov
lcall
cmp
int3
and
push
mov
mov
stos
and
adc
cmp
pop
jl
pop
cmpsb
or
mov
inc
pop
out
inc
insl
push
loop
pop
xor
in
push
dec
push
pop
movsb
and
rep
int3
cmp
xor
sub
pop
mov
push
pusha
mov
out
sti
test
and
push
cmpsb
sbb
lret
cmp
mov
pop
xchg
std
rorl
lea
das
add
scas
in
insb
push
jp
out
enter
inc
mov
mov
mov
int3
iret
pop
ss
push
jg
in
mov
push
push
sub
cmp
inc
int3
adc
mov
xchg
xchg
pop
mov
pop
push
popf
stc
jno
aas
test
test
adc
pop
movsl
add
sbb
aaa
loop
addl
and
push
ss
mov
adc
mov
pop
icebp
xor
fsubs
das
scas
xor
dec
push
fbld
lods
and
pop
out
dec
cmpsb
jae
insb
xor
xchg
xchg
inc
jle
cs
mov
xchg
xor
or
inc
jmp
mov
xchg
int3
cwtl
sti
imulb
mov
xor
mov
jp
test
adc
test
fdivrl
bound
mov
jl
jecxz
icebp
pusha
cmpsb
mov
movsb
hlt
js
pop
fcmovne
ja
loop
clc
add
lods
ficompl
popa
enter
fisttpl
rclb
xchg
mov
add
add
test
in
mov
inc
int3
ret
fbstp
js
add
xchg
inc
sub
test
mov
mov
cmpsb
lcall
jbe
test
daa
orb
test
fwait
ret
inc
inc
loopne
es
or
dec
pop
lahf
pop
mov
jge
mov
pusha
xor
mov
fstpl
push
icebp
mov
out
enter
adc
or
in
mov
ret
ror
mov
pop
xor
xchg
xor
sub
mov
loop
pop
stos
mov
lods
rcrb
xor
jb
inc
insb
sar
es
mov
pop
dec
in
divb
mov
out
repz
jae
gs
scas
jns
cmpsb
push
ret
push
push
and
push
add
pop
data16
in
hlt
insb
hlt
outsl
xchg
aaa
int
sbb
pinsrw
cmpsb
repz
mov
sbb
int3
xchg
dec
pop
jnp
cmpsb
dec
scas
push
sub
out
imul
xchg
mov
int
and
or
ds
das
nop
sarl
movsb
pop
pop
out
mov
test
das
mov
je
ficoml
fiaddl
jp
das
lods
adc
cmp
insl
pop
popa
test
xor
cmp
sbb
bound
imul
mov
adc
aas
mov
inc
or
cmp
pop
jae
test
shlb
mov
add
scas
js
push
xor
lcall
cs
ret
xor
inc
outsl
push
or
mov
bound
mov
push
pusha
mulb
lret
xchg
sbb
push
out
jmp
xchg
daa
andb
mov
es
movb
repnz
test
data16
mov
jmp
scas
sbb
loope
int3
and
cmp
add
sub
push
dec
mov
fs
adc
scas
xchg
dec
cmp
cmp
arpl
or
xchg
add
loope
xlat
xchg
out
call
test
jp
sbb
cltd
mov
int3
xchg
or
push
sbb
into
mov
mov
ss
ret
sbb
inc
es
clc
imul
pop
loope
out
push
lock
jbe
outsb
mov
aaa
mov
mov
and
in
ljmp
les
testl
inc
xor
sbb
lods
jnp
push
mov
std
and
loopne
daa
cmc
les
mov
cmpl
inc
mov
int
leave
jge
lret
and
in
cltd
mov
mov
jbe
pop
sub
std
ret
flds
dec
xorb
lret
sbb
lcall
mov
add
add
sahf
sbb
jecxz
mov
mov
mov
lock
pop
add
cli
int3
sbb
js
cmpsb
aas
mov
sbb
mov
mov
mov
or
push
fprem1
stos
xchg
int3
lods
sub
imul
sbb
lods
mov
add
lea
loopne
mov
aad
mov
scas
sbb
push
push
inc
data16
std
push
loop
int3
sub
jle
xor
jo
mov
adc
lret
adc
subb
push
mov
fdivrp
mov
in
add
aad
loope
cmpsl
push
mov
inc
push
add
int3
bound
cld
add
out
enter
ja
jne
inc
lret
shrl
push
pop
jle
add
int3
adc
icebp
mov
dec
or
out
lea
test
imul
xchg
cmp
aad
push
movsb
inc
jge
cmpsl
sti
out
je
push
pop
fdivrl
call
dec
inc
scas
int3
mov
insb
lret
int
add
dec
dec
push
ss
add
cmpsl
fst
cmp
xor
cmpsb
dec
xchg
lds
test
add
xchg
cltd
fs
pop
out
rcll
inc
imul
push
push
fiaddl
or
xlat
inc
flds
in
cwtl
les
inc
jecxz
cltd
leave
in
stc
or
xor
add
mov
stc
adc
dec
outsl
pop
lea
add
jbe
movsb
push
fimuls
cltd
push
das
es
xor
push
inc
mov
std
sarb
xlat
dec
lahf
inc
inc
je
sbb
in
push
pop
or
cmp
dec
xor
mov
les
aas
and
inc
cmpsb
inc
push
cld
sbb
inc
scas
repnz
jmp
jae
add
mov
les
and
cmp
pop
and
out
xor
dec
pop
out
or
cmp
push
pop
iret
andb
std
int3
popf
rcrb
inc
js
repnz
xchg
jno
xchg
inc
inc
jnp
sbb
push
mov
cltd
pushf
orl
adc
xchg
pop
sbb
xor
mov
pop
jecxz
je
mov
arpl
ljmp
xor
fcom
dec
lret
xor
lret
adc
out
mov
inc
jg
xor
repz
or
or
sbb
cwtl
aam
dec
test
or
repnz
fisubs
mov
dec
pop
pop
push
inc
mov
jmp
push
std
fidivs
dec
push
pusha
pop
in
pop
jecxz
pop
in
mov
inc
inc
cmp
mov
sbb
mov
aad
sahf
rorb
adc
cmp
loopne
lret
fisubrs
pop
add
popa
cmpsb
stc
enter
dec
or
jge
mov
mov
push
push
xor
arpl
fsubr
clc
dec
adc
test
cli
stos
sbb
xchg
cltd
push
sbb
mov
xorl
loop
mov
sub
pop
aam
mov
push
mov
mov
jl
jl
ja
outsb
inc
push
sbb
or
ljmp
les
add
mov
fs
stos
push
das
aas
out
mov
fdivrl
lahf
pop
push
ss
loopne
sub
mov
mov
sub
xor
movsl
inc
dec
inc
scas
enter
mov
aam
fidivrs
call
daa
out
fildll
jnp
repnz
movsl
mov
add
inc
popf
cs
mov
mov
mov
pop
dec
shr
in
ret
popa
push
arpl
pop
sub
add
sub
pop
icebp
addr16
cmpsb
aaa
cmp
sbb
push
xchg
cmc
inc
mov
lahf
and
stos
icebp
sbb
push
mov
pop
xchg
in
mov
cli
cmp
mov
pop
adc
and
fcompp
inc
cli
mul
pop
xor
lods
sub
lds
inc
lret
sbb
or
xchg
pop
movsl
adc
mov
leave
lds
xchg
gs
arpl
xor
or
xchg
es
and
cmp
mov
mov
subb
cmpsb
pop
hlt
add
imul
xchg
lock
sarb
xor
imul
leave
loope
push
loopne
arpl
inc
mov
sbb
pop
fstps
out
sbb
mov
stos
add
fstps
xor
push
or
cltd
test
sbb
loop
dec
jne
inc
sarl
mov
mov
pusha
and
cmpsl
lock
das
jecxz
js
mov
cmp
ljmp
and
jp
lret
or
fsubrp
stc
push
jge
mov
add
push
jbe
idivb
push
std
hlt
cmp
sub
enter
mov
mov
inc
stos
rcll
ret
sub
xchg
inc
mov
ja
gs
fbld
mov
xor
cmp
cwtl
imul
rcrl
mov
inc
pop
adc
dec
xor
into
sub
das
pushf
jae
cltd
lds
xchg
add
dec
repnz
mov
std
lcall
leave
outsb
xchg
mov
and
mov
push
xchg
push
data16
test
push
dec
add
cwtl
dec
mov
int3
stc
pop
test
fiaddl
add
sub
jmp
and
int3
mov
ret
mov
gs
loope
fcomp
leave
gs
sti
dec
push
mov
notb
addr16
rcrb
adc
dec
mov
inc
jns
mov
jl
mov
push
push
lret
and
push
dec
push
repnz
pop
mov
mov
mov
adc
mov
cmpsb
sahf
cmc
and
mov
les
or
push
xor
cmpsb
movsb
pop
cmc
loop
in
je
xor
jl
sbb
jbe
rcrl
pushf
mov
fiaddl
and
pop
in
fs
pop
fistl
clc
fimuls
pop
je
inc
rclb
fsubs
pop
pop
lret
push
int
loop
int3
enter
repnz
into
mov
mov
mov
in
jae
fdivrl
inc
jecxz
scas
pop
or
insl
loopne
dec
pop
mov
lds
sub
push
pop
sti
mov
scas
sbb
inc
aas
sbb
mov
jl
in
jmp
pusha
in
and
inc
add
sbb
dec
repz
push
sbbl
sub
mov
add
xor
lahf
js
loope
ss
cs
cld
pop
mov
jnp
add
into
mov
mov
lods
decb
sahf
jg
pop
mov
inc
in
cmp
bound
clc
scas
mov
mov
pop
jno
mov
fadds
sub
sti
shlb
enter
push
fistpll
ret
iret
mov
xor
push
add
pop
cmc
and
jb
fs
int3
add
sbb
es
sbb
int
call
jmp
cmp
push
mov
das
lret
mov
jno
lods
dec
scas
sbb
pop
daa
adc
jae
and
inc
dec
dec
pop
sub
test
in
pop
lret
push
adc
dec
rolb
xor
pop
decb
jl
and
pusha
jp
mov
insl
inc
cmp
sub
cmp
push
inc
pop
jnp
push
jne
cmpsl
inc
mov
mov
mov
cmpsb
popa
sub
jp
leave
loop
test
fstl
addr16
outsb
es
mov
insw
sbb
sub
scas
out
xchg
cmp
dec
ret
pop
push
and
cmp
fadds
jb
cmpsb
jle
in
shlb
or
push
outsb
sbb
stos
jecxz
out
mov
cmp
sbb
in
inc
and
aad
incb
in
inc
dec
xchg
mov
mov
lahf
sub
cwtl
dec
xchg
sub
rep
dec
pop
cwtl
fsts
aam
or
scas
inc
inc
aam
pop
or
dec
adcb
pusha
int3
mov
cs
insb
push
rep
loope
inc
int3
mov
mov
addr16
test
xchg
mov
pop
push
int3
adc
dec
jnp
iret
xor
cmp
movsl
cmpsb
inc
or
fldpi
jne
mov
sbb
lret
shrb
pop
fs
dec
rol
pop
cmp
or
mov
fisubs
cmp
test
fcoml
inc
jecxz
xor
xor
xchg
inc
push
pusha
jno
das
decb
repz
popf
das
mov
lret
or
pop
add
mov
cs
imulb
idivl
xchg
loopne
pop
inc
pop
adc
mov
mov
adc
sub
iret
mov
pop
dec
push
cs
pop
cmpsb
inc
jnp
fsts
pop
and
pop
ficompl
jle
dec
scas
xchg
enter
jmp
call
pop
jne
push
popa
adc
out
mov
loope
sbb
repnz
je
fsubrs
fs
pop
sti
arpl
ret
lcall
fsubrl
inc
rcll
jne
mov
movntq
mov
or
cmp
inc
fnstsw
sub
cmp
rolb
ja
cwtl
ljmp
jne
int3
ds
adc
add
sub
adc
xchg
pop
xchg
int3
ss
add
cmp
int3
ret
lret
cld
lret
scas
int3
add
aas
pop
sub
mov
sbb
decb
repnz
push
dec
or
lcall
les
int3
inc
dec
cld
inc
mov
es
cmpsb
test
movsb
fwait
aad
pop
and
dec
scas
jns
cs
int3
je
jle
push
push
add
int3
sub
ficomps
dec
icebp
repnz
ret
inc
in
mov
and
sahf
mov
adc
lock
mov
and
adc
cld
xor
xchg
lcall
nop
xchg
lods
mov
fwait
sbb
fstpl
dec
lds
xor
pop
or
or
dec
cs
mov
cwtl
xchg
std
f2xm1
adc
js
and
vpaddusb
mov
mov
mov
push
loopne
push
push
cmp
test
loope
outsb
inc
mov
mov
sub
sub
roll
fmulp
leave
pop
cmp
cmpsl
fmulp
int3
dec
xchg
lcall
inc
sbb
mov
push
jl
aad
sbb
ljmp
rclb
add
sub
jns
pusha
popf
je
mov
pop
pop
or
sbb
pushl
inc
pop
and
pop
jns
lods
out
repz
dec
and
sub
inc
cltd
lock
popl
mov
mov
outsb
mov
pop
sbb
sbb
stc
aas
pop
ret
les
xor
je
add
daa
jae
sub
testl
pop
pop
mov
gs
loop
mov
inc
or
in
or
int3
int3
gs
and
sbb
sub
pop
sbb
xor
mov
inc
gs
fsubrs
dec
mov
je
inc
in
jmp
popf
adc
dec
cli
mov
jecxz
jne
cltd
xchg
lods
push
or
xchg
sti
mov
or
in
int3
in
icebp
mov
push
cmpsb
dec
adc
shl
pop
inc
add
xchg
cmp
cmp
mov
mov
cmp
rcrl
idivl
mov
jp
inc
cmp
inc
inc
dec
pop
inc
push
pusha
jb
stc
or
pusha
mov
iret
and
mov
inc
dec
mov
adc
and
cmpsb
orl
imul
jle
add
mov
fwait
mov
stos
or
in
int3
dec
inc
inc
enter
xor
pushf
jno
out
jno
sub
ficoml
int3
pop
inc
mov
dec
loope
mov
xor
mov
das
jp
imull
pop
fwait
push
pop
std
movsb
hlt
loop
or
std
pop
sub
lock
cmpsl
popf
lahf
mov
repnz
push
inc
out
lret
pop
fs
and
int
mov
lfs
shlb
and
pop
cmp
rolb
mull
xchg
inc
xor
add
lods
mov
loope
or
stc
loop
int3
jns,pn
mov
stos
ds
das
cltd
setne
mov
add
push
enter
jne
adc
pop
pop
das
cmp
loop
int3
das
pop
insl
insb
lock
jle
sbb
daa
dec
inc
mov
js
out
pop
or
in
push
mov
or
jge
mov
or
mov
pop
jl
addl
fstps
jmp
test
or
fbstp
mov
jne
xchg
out
pop
and
insl
setbe
inc
fmul
inc
pusha
repz
xchg
call
push
iret
cmp
mov
notb
ds
jno
mov
arpl
mov
pop
add
mov
idiv
push
cmp
and
loopne
cmp
inc
mov
sbb
mov
push
decl
sbb
inc
xchg
ret
test
push
or
pop
jae
cltd
cmp
mov
popf
inc
popl
jl
enter
cld
add
int3
hlt
cmpsl
push
sahf
pop
lds
scas
test
ljmp
mov
mov
addl
stos
iret
aas
js
mov
sbb
mov
test
aas
jno
int
mov
loope
int3
jmp
cmc
xchg
sbb
jmp
push
or
adc
sbb
inc
aam
ljmp
xor
les
push
shll
dec
ret
adc
mov
inc
hlt
xor
ficompl
inc
fnsave
fstpt
pop
push
xchg
xchg
inc
push
mov
aaa
pop
int
stc
popf
loopne
or
dec
loop
cmpsl
in
push
push
jle
sbb
xchg
insb
and
and
xchg
jl
push
imul
frstor
cmp
add
hlt
mov
jecxz
loope
dec
sub
pop
xlat
jg
xchg
in
mov
mov
and
mov
mov
cmp
sub
shrb
in
lahf
shll
ljmp
jl
lcall
add
jge
call
mov
sbb
ds
out
addr16
in
inc
adc
cld
lds
mov
cmc
enter
dec
pop
mov
incl
in
in
movsb
cmpsl
sahf
xlat
and
push
jecxz
outsb
outsl
inc
rcll
js
repz
leave
add
xor
je
sbb
out
xor
mov
lea
data16
call
int3
cld
into
stos
jecxz
movsl
push
clc
in
subl
stc
mov
out
aaa
push
mov
push
cmp
xor
cmpsb
dec
add
or
cmpsb
fimuls
lret
repz
xor
xchg
sub
inc
rcrb
imul
or
xchg
int3
in
divl
xlat
mov
fdivl
fisttps
rorl
inc
push
jp
les
push
dec
sbb
xchg
cmp
xor
cmp
shr
clc
xchg
xor
ljmp
mov
insl
call
insb
fildl
sub
pop
sbb
mov
mov
test
test
outsb
mov
add
inc
sbb
or
mov
outsb
adc
subl
xchg
cmpb
and
jg
fildll
popa
xor
or
push
mov
cmp
out
in
dec
pop
pop
add
movsl
jg
mov
sub
movsl
fmuls
fadd
sahf
inc
inc
lds
imul
adc
push
cmpsb
roll
in
dec
sub
jle
leave
pop
repz
in
leave
hlt
mov
aam
cltd
neg
add
cmp
lret
cmp
nop
add
ljmp
or
jl
inc
daa
or
js
scas
loope
add
repz
cld
pop
pop
dec
test
mov
roll
out
ljmp
int
inc
xchg
inc
lods
cmp
xor
push
and
lahf
xlat
xchg
mov
sbb
loop
in
adc
mov
jmp
pusha
sbb
repz
js
mov
cs
lods
leave
add
shll
repnz
test
jne
out
ljmp
pop
jl
cmove
rorl
stos
les
movsl
cmp
and
adcb
mov
mov
cld
fcmovne
mov
add
adc
cmpsb
cltd
and
or
insb
pop
fldl
sub
xchg
mov
outsb
test
push
and
jg
in
sub
and
mov
cmp
loop
test
jle
inc
stc
int3
jg
dec
in
test
pop
xchg
sbb
push
xlat
mov
inc
lret
lods
stos
pop
ja
dec
and
inc
adc
xchg
inc
call
call
push
inc
adc
jl
out
sbb
jno
and
icebp
fcmovnbe
push
xchg
fxch
mov
fcmovnu
popf
pop
int3
cltd
mov
xorb
sub
int3
push
mov
xchg
fisubs
pop
loop
cli
dec
mov
mov
in
pusha
lcall
dec
xor
enter
outsl
dec
add
push
les
outsb
ljmp
aas
mov
xor
dec
add
pop
test
fbstp
out
inc
int3
mov
fisubrs
insb
mov
push
notl
loop
pushf
pusha
repnz
outsl
leave
sahf
mov
call
and
fbstp
pop
pusha
sub
mov
add
sbb
addl
mov
and
mov
out
or
je
test
mov
or
call
cmp
insb
mov
xchg
push
outsl
dec
jno
pop
cmp
mov
ror
lods
pop
sbb
inc
inc
sbb
pop
leave
jmp
mov
mov
jne
mov
mov
xor
inc
pop
mov
loop
movsl
inc
inc
jl
xchg
inc
int3
mov
int
and
ret
adc
lods
xor
ds
stos
fidivl
outsl
sub
test
inc
or
lret
inc
jnp
lea
or
xchg
fbld
adc
fwait
sub
popa
sbb
fs
jl
fwait
sub
dec
fdivrs
mov
hlt
jns
dec
inc
pop
cwtl
jecxz
dec
mov
and
mov
in
push
movsb
cmp
sti
sub
add
cltd
add
fidivl
push
xor
lds
cld
inc
lock
out
add
or
pop
mov
mov
das
inc
mov
inc
fucomip
pop
sub
ror
int3
xor
ss
xlat
mov
loop
and
mov
jb
push
es
cmp
xor
pushf
subl
test
sub
sub
ljmp
pop
xchg
mov
sti
ss
xchg
fadds
bound
jp
xor
lret
mov
cmp
ret
inc
movsl
jne
xchg
mov
scas
adc
push
pop
jp
scas
dec
jb
adc
int3
xor
das
std
imul
mov
mov
fs
push
push
and
push
jnp
das
adc
pop
jbe
in
jge
push
int3
sub
imul
pop
fcmove
mov
je
leave
dec
inc
clc
pop
cmp
jp
or
stos
stc
rclb
cmove
ja
lret
push
push
pop
cmc
pop
jle
je,pt
rclb
sbb
fwait
out
sbbb
ret
stc
insb
mov
dec
adc
sbbl
movsb
fnsave
fidivrl
push
sub
jg
push
dec
lods
adcl
int3
pop
mov
mov
xchg
and
inc
or
dec
mov
fs
stos
lret
push
pop
das
les
ljmp
mov
and
arpl
add
imul
sbb
arpl
xchg
jb
and
fnsave
inc
dec
popf
cmpsb
lods
movsb
jno
push
pop
aas
lock
int3
in
pop
push
xlat
imul
vpunpcklwd
fcos
pop
pop
cmpsl
cld
mov
add
aam
rolb
repnz
jo
jno
mov
mov
mov
fstps
bound
imul
jb
or
sbb
xor
fsubl
ds
enter
cmpsl
out
mov
inc
or
ds
pop
inc
mov
or
insl
sbb
scas
sub
arpl
test
pop
test
and
jne
inc
fcmovnbe
mov
scas
loopne
sbb
and
jmp
mov
aad
sub
lds
mov
daa
inc
fdivrl
mov
and
cli
jmp
inc
fstps
cltd
ret
cld
inc
xchg
inc
xchg
jb
out
jno
push
pop
mov
jg
addr16
mov
jl
cmpsb
inc
shll
dec
aad
ss
dec
or
inc
adc
inc
repnz
cld
cmpsb
and
pop
xor
mov
push
adc
lea
pop
xor
mov
adc
xchg
rcrb
dec
int3
or
cmp
bound
adc
xlat
aad
jnp
mov
dec
mov
arpl
pop
pop
cmp
mov
int3
dec
add
push
dec
sti
cltd
scas
sub
ret
pop
imul
arpl
pop
mov
clc
je
stos
in
popa
gs
lret
inc
dec
pop
movsb
or
jne
and
jmp
ljmp
cmp
mov
test
pop
in
ret
sub
test
push
dec
les
fiadds
sbb
jle
cltd
push
scas
mov
mov
dec
add
jnp
push
or
mov
mov
rorb
sbb
inc
xchg
mov
int
lahf
sub
jae
mov
ljmp
sub
sbb
std
inc
xchg
into
push
rorb
mov
cmp
or
or
mov
jle
or
test
pop
push
cmpsl
cld
push
fcoms
outsl
int3
sahf
cmp
cmp
sub
pop
xchg
repnz
loope
or
sti
pop
inc
js
and
lahf
xor
mov
aas
popf
pusha
rorb
jmp
test
jecxz
and
out
int3
jmp
mov
std
inc
pop
cmpsb
fildll
mov
inc
or
jge
inc
sub
pop
cmpsb
mov
jns
clc
fsubr
nop
adc
lahf
pop
into
dec
cmpsl
cmpsb
jne
je
cmc
int3
push
push
and
and
int3
mov
sbb
lods
mov
adc
inc
inc
xchg
xor
jmp
mov
jno
andl
sub
ficoml
lahf
mov
sbb
dec
lcall
cmp
mov
outsb
pop
pop
enter
shll
lods
out
call
mov
pop
adc
int3
and
adc
sar
jle
and
mov
push
sti
xchg
xor
int3
xchg
scas
xchg
orb
dec
outsl
testb
shll
pushf
xor
add
mov
cmp
jnp
dec
lahf
xchg
adc
mov
push
jns
mov
fs
mov
pusha
mov
int3
add
sbb
out
inc
cmpsb
lods
add
push
xchg
adc
inc
mov
mov
test
jecxz
inc
or
push
mov
mov
mov
leave
fldenv
sub
int3
mov
push
sarl
xor
inc
dec
popa
cmc
mov
push
cmpsb
out
loopne
stos
mov
ja
mov
sbb
push
pop
add
dec
xor
sbb
push
pop
cmpb
sbb
fldcw
je
lods
leave
btr
lret
pushf
xor
mov
inc
lcall
orl
sarb
test
inc
aaa
mov
fisubrs
lahf
add
fwait
dec
add
rcr
sub
cmp
js
xor
popa
shl
daa
add
xor
dec
loop
jne
pop
xchg
lods
cmpsl
dec
call
mov
pop
and
cltd
inc
inc
cmova
mov
pop
notl
jns
push
inc
push
add
cmp
cmpsb
jmp
sub
pushf
inc
aam
push
adc
arpl
sbb
repnz
jmp
sbbb
sub
lock
je
adc
pop
cmpsb
das
out
ret
fistpll
push
lret
xor
test
adc
mov
stos
test
outsl
or
jg
xchg
push
enter
dec
pop
fstps
out
cmp
xor
pop
mov
xchg
addr16
lods
inc
mov
sub
add
pusha
adc
in
int3
xorb
lahf
movl
bound
pop
xchg
push
push
int3
out
test
stos
mov
movsb
fisubs
push
and
xor
cld
jns
and
sbbl
jmp
stos
lret
mov
or
dec
int3
adc
pop
inc
cmpl
getsec
push
dec
ror
lret
imulb
xlat
jmp
out
pop
hlt
scas
fwait
mov
xor
lret
mov
mov
insb
cmp
enter
xor
ror
mov
xlat
pop
jo
add
fisttpl
mov
mov
push
pushf
int3
cmc
loopne
jmp
xor
je
adc
pop
cmp
inc
mov
pop
push
addr16
adc
jbe
icebp
dec
arpl
dec
xchg
jmp
aas
rolb
push
pop
jp
cltd
pop
pop
data16
movsb
int3
scas
xchg
rcrl
es
mov
pop
push
and
pushf
cmc
dec
xchg
mov
dec
ds
sub
push
lret
xor
fisttpll
mov
shrb
xor
inc
cmp
sbb
mov
and
int3
repz
cmc
push
sub
sti
aad
or
mov
divb
sbb
scas
mov
fwait
je
push
loopne
int3
outsb
cmp
sbb
xor
mov
pop
pop
or
fdivs
fldt
adc
inc
cmpsb
int3
pop
push
lahf
out
int3
push
xchg
xor
add
mov
pop
inc
addb
pop
loop
mov
jbe
adc
aad
and
pop
fcmovbe
push
stc
or
int3
mov
pop
imul
lcall
inc
aad
push
push
out
cmp
pop
fwait
push
push
or
mov
and
push
mov
mov
enter
push
int3
adc
or
add
jmp
in
imul
cmc
pop
and
dec
arpl
cmpl
push
push
cmp
inc
cmpsb
jle
loop
dec
mov
push
inc
lea
and
popf
xchg
sub
pop
or
stc
dec
add
push
sarl
cmp
push
cmpsb
pop
leave
fucomip
jmp
fwait
aaa
xlat
cmp
outsl
or
pop
dec
xchg
pop
mov
std
fldcw
shl
xor
adc
pop
cli
jbe
sarl
fstps
gs
jbe
mov
pop
mov
mov
mov
cmp
xorl
cmp
add
mov
idivb
cltd
aas
or
mov
pop
inc
pop
mov
jne
mov
cmp
mov
xor
imul
cmpsb
enter
popf
lret
cwtl
shr
mov
sbb
cmpsb
sub
pop
add
push
cmpsl
push
mov
insl
int
mov
xchg
jle
add
int3
int3
jg
lret
pop
jge
sub
push
cmp
jg
pop
xchg
push
inc
das
sbb
pop
and
lods
or
adc
dec
filds
pop
mov
inc
pop
sub
hlt
sub
int3
cmp
stc
lea
stos
cmpsl
shrl
orb
or
cmpsb
cmp
mov
inc
imul
mov
enter
ljmp
xchg
cwtl
scas
inc
insb
add
cmpsl
fstps
leave
ficomps
dec
imul
movsb
dec
sbb
mov
cmpsb
jge
and
dec
inc
mov
sbb
pop
aas
jg
xchg
inc
stos
test
adc
cmc
fmulp
rorl
es
add
out
dec
inc
loop
push
add
insl
jae
pop
mov
das
int3
notb
mov
xchg
xor
pop
nop
mov
arpl
in
jbe
je
je
data16
add
f2xm1
test
mov
sub
jg
mov
leave
cmp
mov
mov
into
and
stos
pop
stos
xor
xor
pop
mov
imul
lret
mov
repnz
mov
js
mov
inc
addr16
movsl
xorl
cs
or
cltd
xchg
aas
xchg
cmp
inc
sbb
xchg
xor
adc
out
sub
inc
addr16
xchg
pop
push
cmpsb
mov
faddl
xchg
test
inc
xchg
xor
jl
sarb
sub
loop
mov
adc
or
inc
fnstenv
int3
out
popa
and
mov
xchg
inc
mov
in
leave
xor
jmp
jbe
arpl
sub
xor
dec
add
xchg
lcall
int3
mov
pop
fsubrp
pop
xor
mov
je
hlt
xchg
sbb
add
jmp
sub
test
add
inc
dec
outsb
inc
add
pushf
cmp
ja
fcoml
cli
lahf
enter
ds
mov
jbe
popf
cmpsb
mov
jnp
jne
mov
cmpsb
sbb
add
dec
push
jnp
adc
jp
xchg
leave
cmp
mov
sahf
dec
xor
jno
je
dec
or
movsl
mov
int3
ljmp
dec
dec
sub
movb
push
rol
clc
bound
lcall
test
add
dec
push
bound
imul
daa
int3
inc
imul
jecxz
jge
jb
mov
pop
cmp
push
push
sub
pop
jns
push
or
das
into
insb
dec
rclb
mov
jns
pop
les
or
jns
adc
fsubl
dec
lret
mov
sbb
push
in
inc
rorb
popf
pop
push
adc
test
int3
jnp
int
push
mov
add
inc
rclb
fwait
sub
int3
lods
lea
clc
mov
loope
lods
mov
pop
nop
dec
test
pop
adc
lods
popf
ljmp
add
dec
pop
out
imul
xor
arpl
dec
mov
xchg
jge
mov
pop
pop
ret
insl
aas
mov
and
les
pop
add
mov
mov
add
jno
push
orps
lret
add
subl
pop
dec
dec
pushf
sahf
rcrb
fbld
sub
pop
pop
lods
push
inc
or
clc
out
mov
bound
sub
adc
push
dec
xchg
sahf
shlb
test
stos
add
xchg
xchg
cmc
stos
insb
cmpsb
stc
mov
outsb
cmp
pop
aam
sub
mov
xchg
xchg
cmp
xor
or
xor
rol
notb
xor
dec
xchg
cli
cmpsl
xchg
aam
sti
mov
push
jp
xchg
inc
push
movsb
ret
add
int3
mov
subl
cmpsb
pmulhuw
or
inc
imul
pop
and
add
add
das
test
test
dec
ja
inc
pop
imul
arpl
or
cmp
lock
rolb
fwait
push
scas
cmc
insl
enter
pop
sub
jmp
mov
sub
mov
add
sub
or
ja
fwait
inc
cmpsl
pop
lcall
loopne
inc
mov
and
lods
adc
jge
mov
sbb
add
imul
xchg
mov
dec
loop
cmc
dec
mov
outsl
add
out
mov
xlat
mov
out
imul
scas
fistps
and
push
sbb
cmpsl
mov
pop
add
sbb
or
pop
cmp
pop
scas
pop
jl
aaa
and
cli
push
sbb
inc
sub
inc
fistpll
pop
or
pop
repz
add
jnp
mov
loop
subl
mov
out
and
int3
or
jb
das
mov
jbe
xchg
inc
cwtl
test
or
mov
pop
fldenv
int
and
xchg
xlat
xchg
pop
xchg
stos
push
icebp
lds
mov
push
les
cmpsb
push
xor
adc
lods
and
inc
mov
jo
cmp
test
lret
out
push
and
cmp
test
and
pushf
add
int3
xchg
imul
xlat
cltd
pop
inc
mov
cmp
adc
inc
outsl
cmp
mov
lods
push
call
push
int3
loop
fistpl
jb
mov
cmpsb
dec
xchg
dec
shll
movl
repz
push
jmp
mov
jle
cmp
inc
mov
shlb
sub
and
add
das
mov
pop
lock
xor
inc
int3
inc
sub
test
insl
pop
mov
inc
pop
testl
fst
mov
pop
cwtl
pop
call
sbbb
js
loopne
xchg
mov
stc
test
loopne
cmp
int3
mov
add
or
mov
inc
and
inc
sbb
jne
sahf
sub
pop
aaa
adc
inc
mov
or
sub
mov
das
push
out
into
push
xchg
inc
mov
ret
add
daa
pop
jp
xor
push
xor
dec
mov
daa
jbe
nop
jbe
je
xchg
mov
push
cs
push
and
enter
in
mov
xor
inc
xchg
daa
pop
push
adc
fmulp
xor
ja
xchg
inc
dec
out
ja
sahf
aad
xchg
and
int3
add
pop
les
pop
es
es
aas
add
or
inc
cwtl
lcall
pop
les
cmpsl
cltd
andb
imul
fnstcw
or
xor
jp
push
inc
stos
mov
xor
pop
mov
adcb
or
xor
sbb
push
add
pop
imulb
in
jo
xor
jp
xchg
dec
cmp
and
scas
push
lea
nopl
test
pop
push
test
inc
imul
ja
pop
add
cmpl
jmp
sbb
scas
mov
lahf
decl
int3
in
andl
and
scas
mov
inc
je
es
ss
xor
int3
sti
jne
inc
mov
push
cmp
dec
jns
xchg
pop
pop
mov
in
adc
cld
cmp
pop
mov
lret
inc
gs
mov
pop
jns
inc
scas
dec
mov
pop
stos
outsl
in
or
cmp
lret
daa
mov
mov
jo
inc
mov
cmp
mov
movsb
add
cwtl
lods
push
arpl
es
or
sbb
sub
and
cld
mov
inc
cmp
mov
inc
cmp
int3
xor
lods
xor
xchg
ficoms
mov
insl
in
xor
not
cmp
jle
pop
or
lcall
and
test
hlt
adc
sarb
mov
and
cmc
sbb
xbegin
movsb
int
call
add
inc
add
pop
xor
int3
jno
std
inc
jae
lahf
bound
in
and
pop
dec
outsl
fwait
ljmp
sub
mov
xchg
pop
inc
jl
or
and
xchg
mov
ffreep
inc
or
or
pop
pop
jle
test
aam
inc
mov
adc
and
push
cvttps2pi
outsb
cmp
call
std
sub
mov
mov
push
mov
xchg
aas
sarb
pop
push
mov
cld
adc
add
add
sub
xchg
push
push
aaa
adc
inc
mov
daa
les
and
nop
jle
daa
pop
pop
sbb
mov
dec
add
int3
shlb
ja,pt
mov
dec
mov
rcr
int3
aam
add
xchg
int
push
sbb
jle
not
xor
pusha
add
cmp
xchg
aaa
repz
cs
dec
xor
fnstenv
js
test
lea
cld
scas
daa
nop
sub
call
push
adc
xchg
mov
cmpsl
inc
mov
sub
inc
cmp
icebp
int3
xor
adc
dec
dec
jbe
daa
out
add
lock
pop
fcmovne
lods
or
enter
pop
mov
xchg
push
pop
test
push
ljmp
add
add
imul
mov
or
movsl
or
movsl
les
mov
fmul
lds
popf
aas
scas
loopne
pop
jns
mov
jecxz
cmpl
in
xchg
data16
xchg
mov
stc
xchg
repnz
add
lds
frstor
int3
pop
lahf
mov
fimull
pop
mov
add
movsl
mov
pop
pop
inc
pop
inc
inc
sbb
sahf
sbbl
fwait
rcl
jge
ljmp
pop
jmp
aam
and
xchg
xchg
pusha
mov
and
icebp
inc
xchg
xchg
push
mov
mov
rcl
int
xor
subl
aad
inc
or
cs
sub
jb
ret
ja
mov
sbb
fsubl
sahf
addl
pop
or
daa
inc
sub
inc
test
subb
je
inc
cmp
cmpsb
pop
cli
je
and
sbb
xchg
ljmp
xchg
dec
loop
hlt
pop
into
cltd
repnz
in
sahf
mov
xor
insb
testb
adc
fisubrl
fidivrl
push
mov
jle
jbe
mov
xchg
imul
mov
iret
lods
ret
dec
jl
dec
inc
ds
pop
ja
or
dec
stc
pop
inc
push
lds
fsubl
ds
mov
pop
dec
sbb
iret
les
mov
push
ror
cs
outsl
sbb
push
out
test
pop
mov
jae
inc
ja
ret
fldenv
test
int3
sub
stc
arpl
xchg
ss
fs
dec
mov
rclb
mov
sbb
movl
add
mov
shrl
mov
rorb
pop
int3
mov
dec
jns
adc
lds
popf
sar
inc
ret
ret
cmp
ljmp
fcmovu
leave
and
cmp
inc
lcall
mov
mov
aad
loope
jbe
push
sub
adc
fidivrs
aad
mov
jb
push
movsb
loopne
inc
sub
push
std
xchg
mov
or
mov
dec
xor
rcrl
insb
mov
cmpsb
out
loope
mov
rcl
pop
xor
int3
xchg
insb
stos
mov
jge
out
lcall
add
inc
pop
push
push
lahf
out
inc
mov
mov
dec
inc
mov
repnz
test
repz
fcomps
pop
fwait
inc
push
pop
fnstenv
lcall
mov
int3
repnz
fstpl
mov
dec
pop
jnp
push
iret
aam
xchg
and
push
not
cltd
out
fwait
mov
sbb
or
scas
push
mov
jle
push
lock
xlat
jmp
mov
icebp
mov
inc
or
jns
dec
mov
jmp
dec
imul
pop
cs
fldcw
mov
negb
push
ror
pop
sbb
xor
cmp
lahf
pop
aad
dec
data16
cld
iret
adc
sub
imul
lds
pop
add
push
ja
lods
lock
jno
push
jnp
in
negb
out
iret
or
xor
inc
cmp
aad
dec
jl
call
dec
mov
loope
ds
in
pop
nop
shlb
mov
xchg
movsb
and
ret
inc
int3
jmp
xchg
inc
cltd
jle
xchg
mov
lahf
das
sahf
movsb
inc
adc
in
push
subb
xor
mov
or
dec
add
lret
pop
inc
ljmp
pop
cs
inc
ds
push
cmc
int3
imul
jge
int3
dec
lock
mov
int
je
notb
inc
sub
push
or
mov
mov
sbb
mov
clc
in
cmp
data16
mov
cmpsb
out
mov
ljmp
adc
cmpsb
fnstenv
fwait
pop
inc
lret
ds
incb
mov
inc
mov
xor
movsl
and
dec
imul
mov
dec
or
nop
inc
into
addb
test
pushf
pop
testl
jmp
in
ret
xchg
pop
sub
fwait
int3
jl
scas
fldt
and
mov
xor
or
xor
cmp
cmp
mov
inc
and
inc
out
mov
das
cs
in
adc
fdivl
xor
jns
lcall
cmpsb
leavew
or
cwtl
daa
in
push
mov
mov
out
inc
pop
ret
sbb
jmp
stos
outsl
cmpsb
pop
push
adc
repz
testl
push
inc
pop
addr16
jp
call
and
int3
shrb
xchg
cltd
enter
sarb
imul
and
inc
pop
dec
in
imul
cltd
xor
and
loop
jmp
aaa
leave
inc
push
outsb
mov
test
or
lahf
sbb
jmp
aas
jl
jge
add
scas
test
sbb
mov
jg
mov
movsl
aam
aam
mov
inc
imul
ret
mov
inc
dec
mov
stos
pop
and
lcall
pop
cmp
dec
mov
cltd
adc
mov
pusha
add
xlat
mov
cmc
fiadds
and
testb
fbstp
pop
addr16
adc
xadd
xor
int3
push
repnz
and
ret
addr16
inc
xchg
cmp
nop
sahf
pop
data16
sahf
mov
cmp
xchg
inc
rorl
sbb
mov
int3
shll
in
pushf
adc
mov
leave
out
jno
mov
fidivl
pusha
mov
cmpsb
stc
xchg
lahf
stos
or
ljmp
enter
addr16
repnz
lock
mov
gs
mov
pop
pop
js
sbb
int3
or
jnp
insb
adc
sub
xor
push
dec
mov
cmpl
mov
pop
lcall
push
cmpsl
sub
push
clc
sarb
xor
inc
test
mov
sbb
push
mov
adc
jl
ret
lret
mov
xor
mov
adc
mov
mov
cmp
clc
loop
push
iret
pop
mov
xor
testl
jmp
scas
cmpsl
hlt
jp,pt
loopne
inc
and
mov
movsb
pop
cmpsb
xor
test
inc
or
lds
pop
mov
imul
mov
mov
xor
iret
mov
pop
mov
adc
inc
adc
imul
adc
mov
push
scas
das
stos
ds
cmpsl
leave
push
xor
daa
scas
fiadds
stos
and
xchg
jle
fnstcw
iret
jge
jne
das
data16
inc
sahf
lret
call
pop
xor
xchg
pop
add
lods
jae
inc
xor
mov
xor
leave
outsb
xchg
push
loop
aaa
icebp
popf
imul
xlat
lods
aas
orb
std
push
sub
cld
repnz
xor
call
cmp
stc
sub
inc
sub
inc
sbb
sbb
or
mov
mov
dec
and
lcall
inc
test
dec
or
aad
or
rclb
push
pop
and
jge
test
in
int
fsts
xchg
jne
lcall
cmc
and
jecxz
lret
aaa
stos
push
xlat
and
cs
aad
dec
test
int3
lret
sbb
mov
shr
pop
subl
fldcw
cwtl
add
add
dec
popa
and
sbb
or
repnz
fadds
lahf
aam
lock
jmp
jo
inc
cmp
hlt
shll
mov
cltd
nop
xchg
mov
mov
cmp
lods
mov
mov
fwait
jecxz
aas
inc
lahf
xchg
neg
or
and
push
jne
icebp
fmulp
or
push
popf
pop
jp
cmpsb
aam
or
mov
jno
adc
imul
lahf
rol
cmpsb
je
inc
dec
dec
in
sbb
in
je
pop
js
sahf
and
je
int3
movsb
leave
adcl
std
adc
insb
adc
cltd
or
aaa
in
pusha
mov
out
pop
lods
or
mov
int3
pop
arpl
inc
movsb
movsb
inc
xchg
sti
inc
push
cmpl
pushf
pop
pop
subl
jg
mov
jno
ret
lret
xlat
jge
or
sbb
pop
shl
outsl
inc
mov
cli
mov
cmp
ret
cs
pop
cmpsb
xor
xchg
sahf
jnp
or
leave
or
fnsave
lret
mov
mov
in
int3
pop
out
ss
lock
xor
mov
pop
les
loope
int3
push
add
push
subb
push
inc
fmul
jb
mov
inc
negl
imul
aas
sub
lods
das
mov
out
inc
sarl
mov
add
loopne
ret
mov
add
inc
cmp
inc
jo
lods
aad
repnz
test
push
jecxz
rol
inc
pop
int3
dec
cmp
xchg
mov
pop
fdivrl
sarl
clc
mov
jnp
push
fstpl
out
imul
sti
lea
inc
ja
xor
rcrl
test
xchg
add
scas
out
cs
jmp
fldenv
jno
int3
ret
pop
rol
fdivs
test
push
aas
cmc
xchg
int3
loopne
dec
cmpsb
push
and
nop
cltd
sar
and
data16
cmovo
dec
xchg
mov
int3
popf
stos
cmpsl
sub
mov
cltd
sbbl
push
push
cmp
jp
test
out
mov
scas
inc
fisubl
sub
jb
lcall
add
dec
ret
xchg
pop
inc
pop
mov
dec
xchg
cmp
push
lret
loop
xor
pop
adc
cmp
jb
int3
fs
and
movsb
cmp
cmpsl
dec
dec
cltd
mov
dec
jp
cmc
xchg
fwait
push
fs
sub
mov
cld
aaa
dec
and
fiaddl
adc
or
aaa
pop
jl
ds
test
dec
inc
adc
insw
push
mov
and
inc
xlat
das
inc
lahf
cli
int3
mov
aad
mov
cmp
sbb
inc
cmp
jl
or
pusha
rcrl
xchg
mov
sub
cmpsb
ror
cmp
test
pop
and
out
into
inc
faddl
mov
cs
mov
icebp
mov
mov
inc
cs
pop
add
or
xorb
push
stos
out
mov
clc
cmc
rclb
mov
int3
shl
xchg
arpl
in
fmuls
lret
push
inc
movsl
mov
notb
enter
mov
cmp
test
test
ja
adc
in
fisubl
add
rcrb
in
cmp
int3
int3
pop
repnz
scas
sarl
and
lea
aaa
mov
pop
mov
add
lret
or
out
push
iret
pop
push
mov
jbe
ljmp
idiv
daa
cmc
imul
in
add
fistpl
popa
sbb
pop
push
pop
dec
out
cmpsb
fidivrl
push
leave
dec
mov
jbe
icebp
cmp
int3
xor
mov
cmpsb
pop
jmp
mov
mov
test
push
or
mov
shld
les
mov
xchg
pop
mov
xor
mov
fs
dec
sti
and
testb
inc
cmpsb
and
test
mov
cld
xor
mov
test
pop
icebp
lret
mov
idivl
insb
inc
dec
bound
shr
mov
mov
mov
in
adc
lds
cwtl
pop
sbb
testb
pusha
cmp
test
jle
jns
mov
xor
pop
iret
ljmp
and
mov
shll
jmp
pop
repz
pop
mov
xor
addr16
hlt
push
dec
inc
leave
jbe
mov
dec
mov
mov
cmpsb
aad
pushf
int
call
xor
stos
add
inc
ss
roll
xchg
cwtl
bound
stc
sarb
push
dec
aam
je
idivl
dec
mov
jb
int3
pop
lods
out
leave
jns
mov
jae
test
cmpsb
push
int3
sub
stos
cmp
pop
mov
int
add
inc
add
and
jb
aad
fs
jmp
insl
jge
lds
sub
mov
jmp
aaa
cmp
push
push
mov
cltd
bound
xchg
fs
loope
mov
xor
pop
xchg
or
into
mov
mov
add
and
repnz
out
jne
shr
loopne
es
cmpsb
sub
and
add
mov
xchg
jge
sbb
scas
je
xor
jmp
add
icebp
mov
stc
xchg
xor
push
dec
out
nop
cmc
jp
scas
dec
data16
fcompl
cli
rclb
push
push
fldt
cli
std
fiadds
push
test
popf
mov
repnz
dec
cmp
lret
leave
dec
imull
cli
lahf
sarl
sarb
sub
sbb
je
aas
inc
pop
mov
leave
sub
mov
imul
xor
or
or
ds
xchg
mov
and
shll
into
mov
mov
data16
adc
hlt
and
jo
pushf
mov
call
adc
jb
push
add
in
imul
cmp
std
int3
push
idivl
mov
dec
jns
fiaddl
movsb
fs
mov
pop
out
inc
nop
fildll
push
sub
fnstenv
cmp
bound
fmull
sti
outsb
lret
mov
imul
jg,pt
lahf
mov
js
dec
lods
mov
out
insb
sub
mov
or
and
and
jl
ret
int3
mov
cmp
in
mov
dec
mov
sbb
xchg
jle
mov
aam
push
loope
and
scas
xor
gs
mov
jne
test
aaa
pop
fstpl
int3
pop
mov
pop
imul
cmpsl
insl
push
jl
and
sub
addr16
inc
or
in
ficompl
push
shrl
pop
push
adc
and
fmuls
mov
pusha
dec
int3
cltd
mov
out
mov
dec
jmp
xor
outsb
sbb
sbb
negl
fnstcw
cltd
inc
aam
inc
add
push
mov
cmp
movsl
inc
sub
cmp
scas
push
sub
jge
mov
pop
xor
lea
lods
and
mov
xor
lcall
mov
dec
and
inc
mov
arpl
pushf
adcb
and
dec
stos
pop
or
mov
jns
aad
xor
push
xchg
andb
jle
popf
cmpl
lods
test
xchg
xorb
push
es
pop
stc
adc
movsb
ret
push
cs
adc
sbb
and
mov
pop
out
and
jne
sub
pop
inc
jo
imul
lods
mov
sarl
in
shrl
xchg
add
dec
cmpsb
sub
testb
out
mov
xor
movsl
pop
fidivl
loop,pt
dec
lahf
cwtl
cmp
jmp
pop
xor
out
sub
add
out
out
hlt
int3
push
inc
xchg
in
mov
icebp
xchg
sbb
test
xor
mov
inc
and
imul
insl
icebp
mov
int3
loope
xchg
movsb
lds
mov
and
pop
rolb
fwait
movsb
in
sbb
leave
xchg
mov
out
lods
push
inc
pop
jo
loop
das
xor
fs
adc
cmp
jns
push
pop
pop
mov
addl
andb
xchg
pop
cmpsb
push
test
push
xchg
inc
iret
negl
xchg
nop
xchg
addb
or
push
aas
jns
mov
cmp
ljmp
int3
insb
xchg
icebp
cmp
lret
lcall
push
ret
mov
inc
aad
pop
subb
inc
pop
mov
push
aad
mov
cltd
dec
xchg
outsl
mov
int3
jno
pop
adc
xchg
repnz
pusha
add
inc
push
xor
loopne
js
out
repnz
dec
cmp
push
outsb
pop
popf
test
inc
ja
lds
int
mov
lcall
adcb
adc
xlat
and
inc
jno
dec
mov
pop
jns
lods
std
sbb
lea
cmpsl
data16
dec
test
jnp
mov
jle
mov
leave
jbe
rcrb
adcb
dec
xor
add
xor
data16
lods
int3
repnz
loopne
inc
add
mov
xor
adc
inc
jle
cmpsb
pop
lahf
jno
insb
shl
fadds
inc
jne
sub
xlat
dec
loope
dec
shrl
and
not
and
pop
std
into
inc
aad
mull
stos
lcall
inc
addr16
mov
in
ja
add
mov
ja
mov
push
repz
int3
aad
mov
xorb
ja
xchg
jle
inc
pusha
sarb
arpl
ljmp
loopne
popf
sub
inc
mov
mov
inc
jns
jge
aas
cmpsb
add
lods
jecxz
inc
inc
movsl
add
adc
mov
push
test
movsb
js
movsb
jg
addl
into
pop
lods
rclb
dec
int3
cmpsl
dec
dec
fistpl
and
mov
mov
test
inc
fcomip
scas
xchg
scas
mov
push
push
hlt
push
inc
inc
lods
daa
divl
mov
mov
mov
inc
sti
jno
inc
sahf
jg
movsb
jp
cmovne
test
or
test
mov
mov
stos
dec
pop
and
ret
loop
and
out
repz
aaa
je
dec
test
or
or
cli
and
fsubl
sarl
and
jns
jmp
ja
js
sub
fcomi
and
sbb
xor
inc
int3
adc
shrb
mov
rolb
push
inc
mov
xlat
insl
cmpb
divl
lret
or
aaa
leave
rcrb
dec
iret
xchg
je
and
pop
cmp
pop
scas
mov
insb
xlat
in
sbb
sbb
std
mov
pop
cmp
xor
inc
cmp
shll
jmp
cmpsb
push
cli
pushf
add
mov
xchg
pop
lds
enter
into
cwtl
loop
leave
dec
jle
pop
jae
mov
fisttpl
int3
arpl
in
out
mov
imul
mov
jno
mov
mov
add
adc
ss
aas
jg
sbb
cld
stc
popa
addr16
mov
push
push
jmp
mov
in
test
ja
cmp
fxch
adc
xchg
inc
inc
xchg
inc
mov
inc
push
pop
shlb
push
mov
sbb
into
movsl
dec
cmp
mov
pop
sbb
xor
jecxz
mov
xor
and
mov
add
jmp
xchg
ja
pop
pop
mov
dec
sahf
fldl
adcl
fmull
inc
push
inc
xchg
mov
xchg
mov
out
add
inc
mov
bound
xor
lods
pop
stc
mov
cld
cltd
lahf
inc
addr16
jne
jge
sub
jmp
pop
outsb
and
outsl
lds
pop
jae
cltd
xchg
mov
mov
inc
inc
ss
xor
int
inc
push
push
loope
sahf
in
rolb
mov
push
xchg
mov
test
fsubr
fsubrl
pop
lret
aas
in
je
dec
fs
fs
pop
add
ja
repz
cltd
cmp
loopne
push
cmp
pop
leave
mov
ja
pop
mov
int3
sub
je
sti
hlt
sbb
xchg
sub
ficompl
lock
mov
cmp
stc
popa
and
add
inc
or
stc
fdivrs
repz
sti
in
mov
into
or
inc
addr16
adc
jge
lock
hlt
jno
fisttps
aaa
scas
int3
inc
shll
popf
pop
ss
mov
sbb
std
int3
jnp
jne,pn
cmp
xchg
mov
xchg
bound
out
or
jne
clc
negl
and
lods
pop
bound
int3
dec
fldenv
sub
outsb
jbe
mov
sahf
pop
cltd
inc
repz
clc
popf
jbe
andb
mov
push
ret
xor
pop
push
call
in
in
jbe
inc
sbb
inc
push
pushf
xor
and
cmc
test
xchg
jecxz
test
sub
rcrb
int3
push
insl
adc
aam
inc
stos
mov
aas
jle
or
les
and
leave
fldl
xchg
inc
dec
mov
cmovl
pop
jge
inc
cmp
sbb
into
cmpsl
stos
jp
arpl
inc
push
pop
imul
movsl
inc
sbb
mov
cwtl
leave
mov
push
mov
mov
push
cmpsb
push
cmpsb
pop
xor
inc
adc
push
sbb
in
xorb
adc
into
lods
lea
xor
adcl
and
inc
ss
popf
inc
dec
xor
or
jbe
mov
mov
call
clc
les
lds
lods
das
xor
push
dec
inc
out
bound
push
icebp
mov
enter
adc
lock
sbb
pop
andb
adc
cltd
sub
lea
push
jle
iret
xchg
pop
and
pop
out
add
push
sub
xor
sbb
inc
icebp
jbe
stc
pop
mov
cmpsl
jb
ret
and
mov
pop
popa
mov
ds
lock
nop
mov
push
js
fcmove
mov
lock
insb
dec
pop
adc
jp
cmpsl
add
pusha
cmp
in
cltd
xor
mov
in
int3
pop
cwtl
lret
push
cmp
movsb
lcall
scas
inc
inc
sub
push
test
mov
lahf
push
xchg
pop
hlt
jmp
fistl
ljmp
cmc
xchg
pop
xor
fisttpll
int3
adc
adc
pop
cmpsb
mov
cmp
cmpsb
inc
orl
subl
les
rcll
les
jl
push
les
js
iret
roll
jg
adc
inc
flds
and
pop
test
mov
lcall
sbb
pop
and
imul
pop
pop
leave
add
loopne
add
mov
pop
xchg
loop
sub
jge
inc
cmp
mov
test
lods
mov
fldt
jmp
inc
data16
sbb
iret
and
ret
adc
scas
push
aaa
jb
imul
add
mov
xorl
push
xor
sbb
and
insb
mov
das
push
loopne
mov
jmp
shll
sub
push
xchg
int3
or
push
adc
mov
pop
push
negl
inc
xchg
fwait
aaa
in
adc
pop
dec
out
and
pop
pop
fxch
xor
fmull
pop
inc
shll
inc
xor
fmul
pop
loop
ret
pusha
add
xchg
sbb
sarb
add
sbb
mov
inc
inc
jne
inc
xchg
mov
inc
sub
mov
pusha
sbb
mov
xor
adc
mov
dec
lds
inc
stc
push
call
test
mov
or
lea
and
pusha
mov
js
nop
in
adc
mov
inc
iret
sbb
inc
xlat
mov
push
xor
popf
inc
fnstenv
js
mov
dec
push
xchg
mov
push
lcall
fbstp
xor
push
pop
enter
ret
iret
leave
mov
test
push
inc
nop
mov
inc
pop
in
sbb
stos
cmp
int3
std
add
mov
test
gs
test
ss
sti
outsl
pop
sub
jo
inc
add
frstor
std
inc
inc
mov
int3
xchg
test
dec
dec
sbb
fsub
jg
clc
add
and
in
push
inc
int3
mov
pop
in
sbb
mov
repz
or
cmp
arpl
adc
sbb
int3
adcb
shl
xchg
push
movsl
cld
sub
mov
shll
pop
int3
pop
sti
jae
pushf
xor
add
dec
xor
mov
fimull
dec
in
int3
jns
fwait
rolb
fwait
mov
popl
dec
or
repnz
aad
push
in
adc
mov
push
pop
cmp
xor
fcomip
mov
frstor
pop
sub
jnp
pop
sbb
or
fxch
push
cmp
rolb
cmp
inc
loopne
sub
xor
dec
fcmovnb
mov
lock
inc
sbb
ds
rcll
pop
aam
lods
shld
dec
mov
clc
mov
imul
xchg
lahf
xor
icebp
xchg
fistps
lret
pop
insl
test
icebp
les
inc
push
cld
mov
pop
enter
mov
lahf
shll
lock
les
push
pop
inc
mov
loope
in
xor
xor
mov
lret
xchg
test
inc
lcall
jg
mov
push
sahf
cmpsb
mov
add
sub
pop
cmpsb
mov
aam
movsb
push
add
inc
mov
int
xor
adc
notb
xchg
mov
mov
sub
cmpb
lds
lods
adc
and
rol
mov
lcall
xchg
in
ret
or
adc
dec
sub
aam
push
or
adc
pop
pushf
leave
add
pop
roll
test
jmp
ja
roll
jbe
lods
fbld
jmp
ret
std
out
mov
sbb
bound
dec
xor
rclb
sub
orl
das
cmpsl
cmpsl
and
lea
lret
sub
repz
stos
test
mov
lret
hlt
adc
push
jp
sbb
imul
xchg
lret
mov
int3
dec
lcall
mov
mov
xor
test
sub
inc
cmpsb
daa
shr
add
mov
inc
insl
ss
pop
lods
pop
cmp
cmp
jnp
dec
fildll
les
cmpsb
rolb
adc
int
ret
mov
pushf
int
mov
scas
cld
sbb
icebp
into
int3
addl
sbb
test
adc
xchg
sbb
sbb
push
cli
inc
pop
xlat
jge
or
xor
mov
daa
xor
fdivl
add
xchg
sbb
int3
je
gs
out
cmp
in
inc
enter
jmp
xchg
int3
sbb
mov
arpl
int
jns
in
cmp
pop
ja
repnz
mov
inc
cmpsb
cwtl
add
int3
lret
push
inc
int
mov
mov
push
jae
loope
clc
fs
pop
shrl
in
cli
push
ljmp
aas
add
jbe
mov
das
pop
xor
incb
movsb
jnp
inc
pop
fldl
fmull
imul
add
inc
int3
mov
mov
inc
cmpsb
subl
mov
stos
out
lcall
in
adc
fdivrl
test
and
leave
pop
das
push
pop
std
sarl
out
push
dec
loope
push
pop
ja
xor
test
repnz
and
lret
into
mov
jnp
mov
outsl
cmp
addr16
test
lds
int3
push
call
jb
cmpsb
mov
ja
mov
sbb
cmp
pop
sub
jnp
test
mull
and
scas
cmpsb
fs
pop
pop
mov
sbb
mov
sbb
push
push
push
fucomi
xchg
jge
adc
rcl
nop
mov
pop
dec
push
movsb
enter
cmp
cmpsb
xor
add
xchg
add
mov
aaa
cmpsb
loop
add
inc
lcall
in
fnstenv
insb
popf
int3
sbb
insl
int3
adc
xor
xor
xchg
mov
stos
pop
int3
xchg
xchg
pushf
mov
scas
cltd
shll
add
mov
mov
ret
jge
mov
inc
out
sbb
dec
pop
es
mov
call
fistpll
js
jl
inc
arpl
inc
and
dec
inc
repz
dec
adc
pop
xor
cmpsb
sub
sub
sti
push
or
aad
mov
jl
xlat
aaa
cmp
xor
push
insb
push
sub
mov
and
jns
mov
sbb
mov
inc
sbb
cmp
lcall
push
test
push
cmc
das
xor
sub
ret
mov
and
adc
fcoms
pop
push
out
hlt
mov
fisubs
push
stos
mov
sub
sbb
pop
push
add
mov
or
pcmpeqb
stc
push
dec
lods
adc
aas
pop
fildll
mov
dec
sbb
std
cltd
pusha
jbe
pop
jns
pop
iret
mov
cmp
pusha
sbb
pop
ljmp
in
int3
xchg
mov
test
mov
push
add
sbb
xchg
jne
and
cmpsb
setge
insl
xchg
inc
es
lea
repz
int3
adc
arpl
xor
sub
mov
sbb
dec
enter
xchg
dec
loope
add
xchg
add
pop
repz
stos
mov
cmpl
or
sarl
cmp
mov
push
ror
push
scas
mov
inc
cwtl
pop
sahf
or
dec
xor
adc
and
cmpl
ljmp
iret
test
dec
cmpsb
and
mov
mov
mov
and
push
icebp
mov
ret
pop
jo
add
leave
dec
jl
lea
inc
jae
adc
pop
fdivrl
dec
scas
mov
popa
pop
dec
cmp
inc
scas
aad
fstp
jmp
mov
sbb
je
movsb
inc
mov
pop
test
xlat
dec
fcmovu
pop
mov
add
adc
fmul
jg
inc
fsubrl
movsb
sub
test
pop
ljmp
arpl
fsubs
or
push
cmpsb
xor
jmp
push
inc
push
inc
pushf
inc
pop
lahf
add
fiadds
adc
sbb
jge
add
inc
jno
clc
lret
push
leave
pop
punpckhwd
aas
mov
xchg
inc
mov
pop
rcrl
or
cmp
loop
add
lret
out
sub
push
jle
into
add
int3
pop
pop
mov
jle
stos
fstpt
jns
adc
dec
push
cmpsl
adc
pop
cmp
adc
movsb
lods
test
sahf
sub
push
pop
jle
rcrb
push
adc
mov
arpl
jne
mov
pushf
mov
adc
cmpsb
push
ret
fistpl
fwait
push
inc
pop
jb
icebp
fisttpll
pusha
cmp
pop
pop
mov
inc
sub
arpl
repnz
pop
rcrb
sub
into
test
or
fs
mov
cmpsl
jae
popa
or
sub
cmpsb
adc
rcr
pop
lret
rolb
push
push
in
or
in
sub
jle
out
aam
popf
jle
outsl
cmpsb
pusha
jg
pusha
push
cmp
mov
or
mov
dec
cmpb
xor
mov
mov
js
ficoml
mov
or
cmp
fwait
mov
xlat
in
and
sub
fs
jnp
scas
les
cmpsb
ficoml
test
in
jmp
mov
test
stos
inc
orb
fimuls
arpl
test
out
pop
mov
mov
sahf
in
int3
mov
push
lahf
mov
mov
inc
lds
sub
and
imul
xchg
push
sub
xor
add
imul
mov
xchg
cmpxchg
daa
out
dec
leave
pop
pop
cmc
cs
cli
vcvtps2dq
adc
sub
mov
lods
xor
jp
mov
xchg
sbb
js
and
cld
push
jge
adc
leave
loopne
stos
test
or
push
mov
inc
pop
xlat
insl
sbb
dec
pop
lcall
test
sbb
rolb
inc
int3
dec
rcll
hlt
mov
push
stc
loop
mov
test
aas
mov
scas
push
mov
in
pop
loopne
testb
jno
xchg
out
test
scas
test
cmpb
loopne
loop
jmp
xor
mov
pop
inc
xor
sbb
out
mov
push
sahf
bound
jne
push
lret
inc
lods
inc
dec
cmp
add
and
rcrb
lds
mov
test
pop
pop
jo
insb
mov
pop
aaa
lret
cmp
icebp
test
rcrb
int3
add
xchg
mov
push
addb
cmp
and
arpl
lods
dec
add
jbe
push
and
es
dec
enter
rorb
cmp
rcl
adc
cmp
jecxz
mov
push
test
xchg
mov
rcrb
push
lret
mov
dec
or
jle
add
sub
jnp
mov
daa
lock
pushf
add
lcall
inc
fs
jl
insl
call
xchg
xor
dec
imul
inc
popa
shll
dec
insl
ljmp
cwtl
test
xchg
lock
xchg
fmull
sarb
pop
pop
sub
xchg
jge
scas
shr
inc
lods
cmp
adc
lret
pop
mulb
xor
and
insl
test
push
cmp
sbbl
leave
mov
out
mov
out
push
xchg
lds
sub
mov
ret
mov
fcoml
mov
pop
ret
shlb
ds
push
mov
mov
cmp
jb
inc
enter
loope
cmpl
pop
pop
lret
mov
cmpsb
mov
test
pop
inc
pushf
push
inc
repz
mov
push
push
ss
popf
call
adc
and
dec
hlt
cmpsl
inc
aaa
aaa
dec
jae
int3
xchg
cmc
hlt
mov
das
bound
stos
sbb
sub
stos
xchg
mov
daa
mov
test
sbb
pushf
sub
call
stc
imul
pop
inc
fildll
repnz
xor
cli
push
pop
fistps
dec
add
pop
fisubl
cmp
mov
or
cmc
dec
arpl
lock
stc
leave
cmp
jns
imul
mov
dec
cmp
outsb
sbb
add
faddl
dec
jns
mov
int
loope
sbb
cs
push
jle
daa
cmp
mov
cmpsb
inc
dec
push
lds
int3
imul
mov
push
int
int
ja
clc
cld
jge
movsb
adc
imul
mov
cmp
popa
iret
mov
arpl
add
push
cmc
xor
sbb
mov
pushl
rol
xor
js
in
dec
les
out
test
lock
or
sub
xchg
pop
inc
jne
mov
in
sub
mov
mov
aas
pop
pop
jae
fiadds
or
shll
adc
add
xor
imul
das
mov
loopne
stos
inc
cmp
daa
loope
and
jno
movsl
enter
and
push
fnsave
inc
jne
xor
fldcw
lret
xchg
push
loop
and
mov
in
cmp
or
sar
int3
jno
mul
push
ret
or
and
push
insb
push
xlat
sub
jecxz
aaa
stos
pusha
imul
adc
out
out
inc
mov
sbb
xlat
sub
jnp
pop
dec
push
push
je
mov
add
mov
inc
jp
lahf
repnz
popf
adc
in
out
inc
movsl
add
push
in
push
int3
push
mov
mov
popf
push
sub
cld
pop
mov
ss
pop
inc
mov
lcall
popf
out
push
sti
push
add
fstps
mov
push
pop
fcmovne
out
popf
mov
call
cs
inc
jg
or
push
inc
loopne
and
xor
sub
stos
mov
aaa
dec
xchg
sub
inc
mov
in
rcrl
ss
sbb
hlt
fldcw
dec
inc
pusha
fs
out
pop
movq
stos
inc
jnp,pn
inc
jb
repz
fmull
push
aad
dec
cmpsb
xor
inc
test
testb
gs
fsubl
pop
mov
aam
xchg
scas
or
jne
dec
out
or
cmp
fistl
add
mov
adc
ds
inc
pop
out
cmp
fmuls
xlat
jecxz
or
mov
jg
cltd
or
dec
pop
mov
cmp
cmp
adc
jbe
push
push
in
sbb
ds
fisttpll
adc
insl
lods
adc
xchg
pop
inc
adcl
push
or
and
mov
sarb
jb
ljmp
pop
pop
cmp
sub
imul
sti
test
adc
mov
sbb
imul
jb
adc
push
decb
xchg
or
dec
pop
ja
imul
push
mov
pop
int3
sti
pop
es
fstpl
push
pop
cmp
mov
push
inc
mov
push
mov
int3
int3
cmpsl
repz
lret
jnp
and
sti
xor
jnp
xor
int3
sbb
push
imulb
insl
jb
movsl
es
stc
mov
lock
push
cbtw
negb
pop
outsb
dec
cmp
int3
adc
shr
mov
lret
mov
pop
nop
pop
or
movsl
mov
xchg
adcb
seta
mov
xor
jns
test
xchg
ret
inc
cmpsb
das
nop
jmp
jbe
and
adc
jmp
mov
int3
jnp
jo
jg
and
das
sahf
push
pushf
mov
pop
mov
mov
int3
daa
aas
aas
repnz
mov
stc
fs
mov
out
jecxz
sub
cmp
push
cmpsb
pop
and
pop
mov
xor
inc
jp
xor
pop
daa
dec
jmp
cs
sbb
sbb
out
xor
scas
xor
mov
adc
lea
inc
mov
cwtl
pop
rcll
addl
mov
shll
int
call
movsb
fwait
ret
xchg
xchg
mov
dec
and
mov
std
mov
insl
xchg
pop
leave
inc
mov
mov
pop
repnz
out
push
fs
lahf
push
sub
jmp
cld
aaa
insl
pop
pop
jb
rorl
inc
push
out
push
popf
push
adc
into
pop
push
inc
mov
ret
pop
lods
ljmp
xchg
repnz
jne
scas
sbb
inc
in
push
dec
test
inc
je
fnsave
movb
pop
popf
stos
add
es
in
mov
vpcmpgtb
jmp
daa
push
repnz
iret
adc
icebp
lock
movsb
jbe
push
or
testl
icebp
jmp
jno
push
xlat
xchg
mov
cmp
addr16
int3
int3
in
mov
dec
test
xchg
pop
mov
mov
or
and
dec
and
xor
into
jae
and
cmp
pop
out
sbb
jbe
sub
insb
sbb
icebp
dec
icebp
add
je
pusha
cwtl
sub
out
inc
jnp
mov
imul
mov
jnp
push
test
jge
ret
sbb
mov
ret
pop
int
xor
fnstcw
loop
pop
roll
decl
pusha
fcmovne
int3
mov
mov
insb
outsb
pop
push
sub
jnp
cmp
aad
es
mov
lock
add
or
dec
pop
dec
xchg
sbb
popa
mov
xchg
mov
lods
popf
inc
push
pop
xchg
inc
cmc
and
popa
jne
pusha
push
and
ljmp
mov
adc
mov
fldenv
mov
sub
or
je
add
mov
movsb
rcrb
aad
cmp
inc
cmpsb
mov
sub
or
orb
in
mov
pop
mov
push
push
jne
cwtl
inc
in
ret
dec
repz
nop
dec
push
cmpsl
push
not
mov
xchg
int3
aam
orb
adc
int3
clc
sbb
push
mov
mov
pusha
mov
jno
jb
adc
loope
mov
das
mov
in
xor
repz
adc
sar
movsl
mov
mov
and
jbe
cmp
add
pop
adc
dec
mov
mov
xchg
int3
inc
repnz
loope
sbb
pop
scas
pop
setne
adc
dec
addr16
pop
mov
nop
mov
lret
in
sub
mov
in
lock
enter
mov
fmuls
sbb
out
cmpsb
pop
loope
into
arpl
fsts
fiadds
gs
aam
xor
fidivrs
lret
jnp
pop
push
testl
popa
fistps
les
push
int3
test
or
mov
sarl
int3
insl
nop
inc
pop
clc
add
add
test
cltd
adc
clc
lahf
jmp
sub
cmpsb
aaa
push
push
rolb
inc
jmp
xchg
in
add
clc
add
call
jl
mov
dec
inc
lea
inc
or
cltd
dec
push
mov
xchg
push
mov
fsubs
pop
ja
out
int3
mov
mov
popl
add
adc
jnp
adc
pop
test
jb
xchg
cmpb
insb
dec
cs
inc
add
adc
sub
int3
shl
test
stos
ja
xor
out
inc
xchg
sub
jp
push
test
rclb
mov
inc
test
icebp
mov
inc
and
adc
data16
imul
adc
add
mov
popa
leave
mov
pop
add
movsb
movsl
pop
mov
xchg
fsts
mov
in
add
inc
call
mov
or
rcrb
push
or
jno
mov
cs
popf
les
or
in
sbb
sbb
imul
cmp
mov
pop
pop
xorl
mov
sarb
push
cltd
clc
jmp
int3
ja
inc
xchg
mov
fwait
movsl
icebp
sarl
test
push
inc
lds
dec
xchg
aam
dec
sub
loop
sbb
xor
in
cltd
dec
fcoml
pop
pop
cmpsb
add
xchg
mov
xchg
inc
mov
inc
lods
cltd
out
ret
cmp
mov
sub
or
nop
dec
mov
inc
sbbl
adcb
pop
mov
add
inc
int3
out
sub
ret
lea
ret
cmp
leave
mov
das
xchg
cmpsb
lret
daa
cmpsb
mov
and
lea
adc
pop
xor
or
lahf
int3
pop
psubsw
cmp
mov
inc
pushf
sub
xor
xor
sub
fnstcw
inc
fadds
gs
sbb
xchg
mov
sbb
xchg
jo
mov
cld
pop
add
pushf
test
mov
sub
mov
je
sub
call
cld
and
int
add
test
bound
je
cmp
xchg
and
jne
add
adc
lcall
jl
jbe
cwtl
mov
sahf
mov
repz
pop
and
adc
jo
or
jg
pop
inc
cli
insb
aaa
les
cwtl
cmp
insl
and
aam
daa
push
pop
loop
xchg
xor
rcl
dec
int3
sbb
jne
insl
lods
pop
cmpsb
ss
sub
and
ljmp
inc
lea
mull
call
add
mov
mov
std
jns
lods
inc
imul
jno
sub
pop
mov
adc
int3
add
lahf
mov
out
jns
call
xor
ja
bound
xchg
sub
cmpsb
or
cmpsl
andl
xor
sbb
mov
cmp
fnstenv
scas
in
int3
testl
mov
mov
ljmp
outsl
cmpl
dec
adc
mov
idivl
js
mov
fcmovnu
jbe
mov
or
pusha
int3
adc
pop
rcrl
loope
xchg
adc
sti
outsb
lea
icebp
add
repz
jo
jne
mov
adc
xchg
sub
push
shlb
jb
pop
sbb
add
xchg
cmp
inc
enter
pop
xor
push
dec
sti
pop
clc
jnp
mov
out
cli
loope
test
add
stos
imul
test
jnp
in
mov
mov
jle,pn
cmp
fisttpl
pop
push
pop
incb
ja
add
cmp
jbe
mov
mov
push
int3
cmp
adc
push
fstpl
or
test
cmc
ror
loop
call
mov
mov
sarl
scas
pop
push
fnstsw
pop
cmp
cmp
test
ja
dec
cmp
movsb
sbb
jmp
mov
ss
cmp
xchg
ja
pop
xchg
outsl
or
stos
ret
leave
js
cli
loop
pop
int3
incb
mov
int3
dec
mov
add
fildll
int3
xor
shlb
or
mov
mov
sti
test
sub
or
cmpl
jno
clc
pmovmskb
leave
pushl
nop
int3
push
xor
pop
cmpsb
mov
pop
mov
inc
sbb
xor
nop
inc
les
xchg
or
into
mov
lock
shll
inc
aas
outsl
sbb
cltd
pop
mov
push
pop
test
lret
jns
jge
sbb
lret
xchg
je
or
fimull
mov
int3
adc
cmp
mov
add
movsb
roll
adc
sub
mov
ja
dec
mov
mov
dec
insl
push
inc
imul
bswap
push
and
cmpsl
xchg
inc
inc
sahf
pop
cltd
mov
push
push
subb
mov
sbb
dec
jmp
sarb
lret
frstor
mov
adc
mov
sub
out
sbb
jnp
mov
icebp
xchg
pop
fistl
inc
mov
dec
xchg
jg
push
pop
cmp
cmp
inc
pop
pop
jo
xor
pushf
pop
out
ds
xor
or
cld
call
ljmp
int
sbb
popa
mul
jnp
mov
loop
cmc
test
hlt
jmp
pop
mov
jmp
add
inc
inc
jg
mov
ss
cltd
pop
mov
scas
pop
fwait
inc
stc
test
faddl
outsl
xchg
pop
mov
in
adc
xor
scas
int3
push
inc
or
bound
pop
push
pop
adc
push
push
inc
mov
rolb
cmpsb
ljmp
movsl
lds
mov
sbb
xchg
daa
fwait
pop
dec
add
mov
mov
jns
xorl
mov
jl
xchg
pop
cmpsb
adc
dec
or
mov
les
cmp
in
push
mov
sbb
cmpsb
xchg
leave
aaa
adc
mov
cmpsb
lea
xor
cmpl
imul
adc
jbe
mov
inc
pop
mov
push
push
rorb
mov
pop
push
hlt
mov
loop
and
push
lock
pop
rorb
push
jecxz
cmpsl
xchg
lret
int3
jno
lods
xor
adc
mov
scas
sub
adc
pop
movsl
mov
or
aad
mov
mov
mov
pushl
jnp
xchg
mov
mov
jnp
sbb
mov
inc
push
sbb
movsb
enter
test
insl
mov
test
sub
inc
stc
leave
mov
mov
lcall
lahf
mov
ss
xchg
dec
or
ficomps
push
movsb
cwtl
in
shll
inc
mov
mov
and
fwait
mov
dec
mov
dec
in
push
lods
add
xchg
pop
adc
jmp
or
push
xor
lahf
je
adc
cmpsb
or
out
repnz
push
dec
mov
fs
jns
out
loopne
std
pop
push
rcl
aas
xchg
jo
push
adc
arpl
xor
xlat
cld
push
cltd
mov
mov
xor
cmpb
mov
sub
fidivrl
aad
adc
inc
push
sbb
pop
fbld
pop
jnp
ja
xlat
paddw
flds
adc
lds
pop
add
jge
lret
add
push
xchg
aam
mov
into
lock
mov
pop
out
inc
mov
cltd
pop
dec
mov
loopne
inc
pop
adc
mov
push
xchg
jne
pop
subl
pop
hlt
mov
sbb
adc
jns
pop
pop
lahf
cs
adc
sahf
int3
leave
push
lret
mov
mov
jne
ljmp
push
rcrb
and
push
test
mov
xchg
jb
mov
xor
pushf
adc
shl
xchg
pop
mov
add
int3
xor
sub
cmpsl
mov
addr16
cmpsb
and
in
adc
test
outsl
int3
call
dec
pop
popf
mov
fmul
aam
in
push
mov
mov
jns
aas
les
sbb
imul
movl
loopne
pop
fmull
mov
lcall
out
lock
out
hlt
cmp
xchg
int3
stc
das
movb
pop
inc
xchg
loopne
jb
xchg
xor
iret
inc
ljmp
lahf
pop
sbb
into
lret
lods
mov
inc
add
or
push
std
rorb
fildl
call
push
dec
add
cld
inc
mov
sub
add
jp
add
imul
les
aam
lds
sbbb
int3
repnz
adc
cmp
sub
xchg
lods
mov
xor
inc
sub
pop
mov
pop
fdivs
cmp
ret
dec
bound
outsb
leave
imul
jno
jl
sti
adc
mov
adcl
pushl
adc
aam
adc
pushf
xor
clc
xor
add
xor
std
jmp
dec
jbe
or
repnz
adc
cmpsb
and
pop
fmulp
popf
nopl
sbb
movsl
ss
cltd
mov
repz
mov
inc
test
ret
mov
jle
inc
jl
movsl
pop
xor
xchg
imul
rolb
ljmp
or
gs
adc
lea
into
cmp
in
shlb
shlb
int3
inc
movsl
pop
movsb
mov
jno
aas
push
sbb
pop
inc
imul
mov
mov
xchg
insl
adc
ret
rcl
cmpsl
ret
sahf
andl
int3
and
jmp
mov
cmpsb
int3
adc
mov
mov
and
pop
sub
add
sub
cmpsl
mov
adc
inc
iret
push
and
insl
jns
cmp
aaa
ret
push
inc
test
fists
cmp
imul
mov
push
int3
jns
xchg
movsb
mov
push
pusha
push
mov
pop
add
data16
mov
jg
repz
outsb
loope
mov
pop
aad
and
out
mov
subl
es
mov
jne
leave
nop
and
mov
fimull
iret
mov
retw
jle
xor
and
outsl
lahf
addb
add
jecxz
std
jg
mov
lods
aam
mov
outsb
arpl
rcll
mov
movsl
pushf
in
lods
pop
xchg
arpl
daa
mov
cmp
cmp
push
adc
pop
outsl
add
xor
mov
sbb
cmpb
testb
sub
lret
or
out
pop
inc
push
es
imul
add
mov
mov
es
jnp
je
xor
popf
stos
int3
cltd
ret
mov
sub
mov
mov
inc
rcrl
inc
xor
das
clc
ficoml
dec
das
dec
sarb
outsb
lret
cmp
xchg
inc
ss
mov
pop
adc
add
stos
inc
pop
loopne
pop
pushf
pop
clc
rcrb
icebp
ret
aas
inc
aad
pushf
jl
aaa
pop
mov
stc
pop
xor
outsl
repz
and
push
jae
movsl
push
push
push
and
lds
das
sub
fisttpl
leave
jmp
call
pushf
ds
inc
out
sub
xchg
hlt
pop
aas
jo
jbe
lret
popa
mov
rcl
mov
jge
adc
inc
and
push
cmp
insb
je
pop
cmp
into
std
cmp
flds
cld
inc
lret
xchg
lods
addr16
cltd
cmpsb
mov
sub
loope
push
mov
sub
xchg
mov
mov
push
mov
inc
sbb
movsl
cmpsb
pop
rcrb
adc
les
push
and
je
inc
sub
xor
pop
icebp
push
sbb
mov
shl
leave
xor
xchg
push
xorl
pop
fstpt
dec
pushf
add
int3
subb
dec
loop
insl
sub
mov
aam
cmpsb
sbb
xchg
xor
icebp
mov
mov
mov
cltd
int3
and
adc
insl
xchg
jle
pusha
push
out
cs
sub
mov
mov
rorl
add
mov
arpl
add
inc
jb
mov
cmpsl
dec
pop
mov
divl
test
pop
mov
push
mov
add
sub
pusha
out
sbb
or
jb
xor
xchg
clc
stc
in
sbb
js
das
movsl
andb
rolb
push
es
imull
pop
pop
lahf
loope
ja
xor
int3
je
sti
fcomps
int
jbe
movsb
cmp
xchg
icebp
ret
add
int3
push
push
mov
sbb
push
jl
sub
imul
fnsave
ret
jmp
mov
dec
lahf
mov
cmp
inc
loope
int3
call
mov
cmpsb
bound
jae
sbb
in
push
cmp
dec
sbb
jg
push
jp
imul
push
cmp
mov
test
out
push
dec
jecxz
dec
pop
mov
aam
jmp
adc
loopne
mov
mov
int3
dec
clc
xacquire
fistl
mov
pop
pop
add
inc
rcl
rclb
pop
clc
sub
or
ficomps
or
pop
imul
add
fwait
pop
mov
or
bound
cmc
mov
sub
fs
add
sbb
push
add
lock
sti
fldl2e
sub
mov
dec
or
movl
mov
cwtl
and
jno
mov
scas
int3
scas
ds
and
mov
mov
ss
inc
cmp
adc
sub
out
mov
and
in
mov
int3
mov
orb
xchg
out
in
insl
andb
lret
test
xchg
cmp
jl
mov
ficoms
jbe
rcl
popf
pop
push
in
ret
cmp
add
lea
mov
dec
aam
add
jbe
sti
push
mov
add
jb
cmpsb
loopne
sbb
jle
xor
les
pop
inc
gs
jns
in
das
cmpsb
pop
je
test
fiadds
push
add
push
or
push
scas
ljmp
pop
daa
push
fisttpll
dec
mov
sbb
mov
mov
arpl
cmpsb
adc
rolb
sbb
push
adc
sbb
aaa
mov
xchg
ror
pop
loope
mov
adc
rcrl
icebp
cmp
or
cs
lock
add
imull
icebp
stos
mov
xor
mov
arpl
jno
dec
cmc
mov
xor
pop
dec
pop
cmpsl
add
or
inc
ja
cmp
pop
add
xlat
dec
cmp
and
dec
cmpsb
mov
pextrw
inc
lret
lret
inc
lcall
stos
lock
int3
pushf
leave
xchg
mov
cmpsb
pop
cmp
les
fisubrs
pop
jle
cmp
mov
lahf
jg
jle
pop
add
jg
clc
movb
cmp
sahf
in
icebp
sbb
insl
ficoms
inc
cmp
mov
sbb
pop
pop
out
cltd
sub
fstp
push
fisubl
faddl
inc
enter
popa
xchg
push
jnp
mov
leave
add
cmpsb
adcl
sbb
cltd
out
sub
mov
cmpsb
roll
jg
loopne
int
rolb
imul
xor
ja
dec
out
scas
sbb
jae
inc
aas
movsb
arpl
pop
cld
iret
ficoml
xchg
adc
mov
pop
loope
cmpsb
adc
fimuls
dec
push
cmp
in
fisttpl
pop
mov
lea
ficompl
xchg
sti
mov
dec
adc
cltd
out
and
dec
mov
int3
out
iret
bound
dec
sub
repz
fmuls
lretw
mov
stos
sub
push
aaa
out
push
test
cmp
pop
js
pop
adc
xchg
mov
int3
iret
cmpsb
jnp
xchg
inc
xor
xorb
lods
mov
inc
pop
adc
cmc
ret
loope
mov
sub
lods
ss
adc
arpl
mov
sub
movsl
movsb
push
sbb
loopne
aam
xchg
sahf
push
pop
nop
xchg
dec
loopne
fs
sub
adc
push
xchg
std
lods
and
in
pop
xor
mov
pop
sub
movsb
out
push
mov
pop
mov
shrb
int
stc
flds
negb
cmpsb
mov
inc
mov
xor
sbb
or
daa
outsl
sub
sub
pusha
mov
stos
enter
fistl
cmc
sub
mov
es
inc
into
outsl
pusha
or
pop
lods
leave
cli
xchg
in
daa
aam
cld
mov
adc
inc
mov
pop
mov
test
pushl
inc
lcall
xor
jmp
pop
cmpb
lcall
push
jbe
inc
cmp
adc
or
cvtps2pi
cmp
jne
xor
sbb
imul
push
sti
and
pop
lret
bound
sbb
dec
clc
rcrb
and
jne
mov
fdivl
lret
mov
mov
xor
fcmove
mov
cmp
pop
push
lds
daa
pop
adc
inc
cmpb
test
outsl
insl
inc
mov
popf
lock
cmpsl
pop
fiaddl
pushf
int3
cld
and
inc
xor
pop
sbb
flds
mov
lret
sti
xor
daa
mov
mov
imul
inc
fistps
jge
xchg
mov
clc
mov
rclb
mov
cmp
jecxz
lcall
jecxz
in
or
loop
aas
dec
or
popf
icebp
ss
push
test
leave
into
mov
mov
sarl
dec
es
outsl
clc
lods
clc
jg
or
mov
sbb
jo
cmp
shl
stos
aad
les
popf
pop
cmc
icebp
adc
push
push
aad
ds
inc
xsha1
cmpsb
inc
dec
mov
arpl
inc
in
inc
incl
or
sub
add
movb
xor
add
test
inc
stc
das
xchg
lcall
lcall
jne
mov
inc
call
inc
mov
jnp
jp
mov
pop
push
mov
jle
pop
mov
mov
into
push
and
cmp
outsl
mov
inc
dec
imul
dec
outsb
xchg
into
das
mov
ret
int3
sbb
add
mov
xchg
inc
mov
std
cmp
aam
sub
jo
fidivl
leave
adc
ret
mov
sub
icebp
mov
les
mov
inc
testl
mov
pop
cld
cltd
movsl
sbb
loopne
push
js
test
popf
repnz
movsb
fcomps
fdivrl
int3
outsl
add
rorb
mov
mov
push
data16
and
xchg
sub
dec
pop
faddp
pop
sub
or
or
cmpsl
mov
cmpsb
inc
mov
imul
fadds
inc
movsl
loopne
pop
fsubrl
aas
cmpsl
sbb
dec
and
and
leave
cmp
jecxz
sub
cltd
sbb
iret
andb
mov
dec
in
pop
jns
pushl
or
dec
das
mov
popa
pop
stc
inc
jne
sub
add
pop
inc
shrb
adc
or
testb
and
bnd
mov
inc
enter
cmpsl
mov
mov
jg
pop
sub
ss
cmpsb
pop
cld
inc
mov
data16
pop
dec
inc
mov
outsl
int3
out
das
sub
int
out
mov
push
in
adc
dec
int3
cmp
movsb
xor
sbb
push
pop
pop
push
xor
push
movsl
mov
dec
add
mov
mov
xor
and
lcall
mov
dec
add
cmp
aaa
test
xchg
lret
iret
insb
popa
mov
pop
pop
dec
pushf
js
fbstp
int3
xchg
out
adc
mov
clc
push
test
inc
mov
imul
push
cmp
sub
addl
mov
inc
mov
mov
pop
pop
daa
fcomi
xchg
pop
test
int3
xor
cli
cmpsb
daa
sbb
dec
sbb
xor
inc
aaa
pop
xlat
jle
addr16
stos
loopne
and
pop
mov
inc
in
inc
mov
xor
lret
dec
sti
pop
lahf
push
adc
jmp
jle
sbb
jecxz
lret
push
scas
jnp
notb
nop
inc
xor
iret
pop
nop
repnz
rcl
pop
and
aad
sbb
and
mov
mov
adc
sbb
out
jge
js
push
cltd
lea
sahf
jge
mov
jno
sub
mov
rcl
lcall
mov
das
or
sub
rolb
cmpsb
mov
pop
sub
and
lret
leave
lret
mov
imul
jl
lret
mov
mov
gs
cld
test
repz
das
jb
pop
mov
shll
add
shll
push
inc
push
mov
add
dec
fimull
jl
inc
mov
mov
pop
sub
dec
jg
fisubs
outsb
mov
or
sbb
jno
pop
sub
jae
cwtl
mov
ss
inc
cmp
mov
das
dec
mov
arpl
and
das
mov
repnz
mov
inc
imulb
lahf
rolb
and
xor
mov
sub
inc
repnz
xchg
ljmp
fs
and
adc
int3
ret
pop
mov
pop
or
mov
mov
xchg
and
mov
sbb
add
cmpb
int3
dec
sub
adc
lea
push
cmp
out
cmp
push
sub
pushw
loop
ret
mov
adc
inc
data16
jg
mov
mull
sti
icebp
clc
mov
xor
push
out
xor
insl
push
or
enter
jecxz
test
int3
nop
dec
mov
test
arpl
sbb
push
int3
lret
cmp
scas
popf
imul
cmp
pop
xchg
pop
sarl
cli
pop
lods
mov
xor
js
leave
push
das
ret
testb
sbb
inc
adc
lds
dec
mov
inc
pusha
xor
xor
inc
mov
outsl
mov
xor
imul
adc
ds
dec
fistpll
jo
push
jl
mov
mov
sub
loopne
loope
cld
sub
adc
inc
dec
ret
mov
mov
jmp
lea
inc
fcmovbe
xlat
push
test
xchg
inc
adc
and
sbb
lea
pop
xchg
fwait
jb
ficomps
inc
stos
shlb
bound
xor
push
sbb
cmp
push
sub
fnstcw
add
inc
mov
out
mov
cmp
ljmp
int3
int3
movsl
jge
stos
xchg
mov
outsb
out
mov
mul
stos
pop
cld
imul
int3
out
xchg
add
mov
in
mov
dec
ret
ret
outsb
lds
lcall
mov
int3
jle
dec
and
jecxz
mov
ficoms
sub
push
ret
pop
cmp
pop
ret
test
dec
jns
dec
popa
dec
and
add
cmp
adc
shrb
xchg
out
out
ljmp
test
fmul
stos
xor
scas
cmp
cmpsb
scas
std
ljmp
inc
pushf
and
sub
inc
pop
dec
ljmp
int3
pop
int
cltd
push
dec
lods
int
mov
loop
cmpsb
xchg
in
xor
pop
ror
inc
popf
out
lock
mov
inc
jp
arpl
outsl
lea
aaa
ds
aam
xchg
push
stc
mov
test
daa
inc
inc
add
mov
cld
jle
xchg
fwait
lret
add
push
orl
xor
insl
in
in
xlat
lcall
das
cmpsb
jae
test
or
enter
xchg
push
xor
bound
cmp
ds
enter
sub
mov
in
rolb
arpl
xchg
xor
ja
mov
push
bound
dec
adc
aas
adc
test
lods
ret
mull
or
ret
test
pop
dec
sub
out
push
xchg
outsb
stc
jnp
or
aad
fisttpll
fneni(8087
leave
scas
push
stos
cmp
xchg
sub
mov
pop
xchg
mov
jl
mov
mov
pop
dec
icebp
int3
dec
push
es
dec
stos
xor
dec
mov
int3
inc
inc
inc
cs
les
push
pop
or
add
xor
in
fs
leave
out
pop
mov
ja
es
pop
adc
mov
daa
bound
int3
sub
pop
mov
dec
pop
fimull
in
leave
push
ffreep
pop
xchg
mov
dec
nop
iret
dec
inc
mov
mov
mov
jno
bound
lock
or
xor
or
jmp
scas
stc
sbb
testb
push
or
push
jg
xor
test
mov
das
jmp
int3
outsb
dec
es
or
add
repnz
dec
std
sub
scas
sahf
fcomi
sbbl
mov
test
and
mov
mov
shr
loope
and
or
xor
add
pop
pop
mov
pop
push
dec
adc
shlb
inc
lds
adc
sbb
pop
aaa
or
inc
dec
rolb
push
lcall
scas
repnz
or
sbb
add
aas
out
xor
mov
xlat
negb
ja
and
inc
shll
sbb
fmull
inc
cmp
mov
ss
mov
cltd
or
int3
ja
add
jmp
int
cwtl
fisubl
ficoml
xor
aam
lods
xchg
cmpsb
adc
nop
mov
xchg
mov
adc
xor
sbb
sub
fnstsw
xor
mov
dec
loop
stc
aas
cmp
inc
gs
je
cwtl
jne
add
rorl
mov
dec
imull
cmp
jns
lret
aam
dec
xor
rcrl
pop
das
add
movsl
es
dec
lahf
int3
and
sti
negl
ffree
arpl
xchg
in
or
sub
xchg
test
inc
out
aam
adc
incb
and
mov
mov
jg
mov
push
lea
pop
ds
mov
and
xorl
arpl
inc
or
insl
lods
push
jl
jbe
mov
pushf
bound
push
xchg
lret
aas
push
inc
loope
mov
pop
out
fisubrs
fisubrs
pop
stos
ds
dec
dec
fwait
and
mov
cmpsl
mov
push
inc
test
xchg
sub
gs
insb
pusha
cwtl
int
or
lods
inc
push
mov
jnp
mov
xor
pop
mov
inc
dec
in
loop
mov
pop
sbb
adc
int3
mov
sbb
testl
out
lock
sbb
inc
mov
cmp
mov
mov
lock
jbe
insb
jns
jecxz
int3
in
popa
and
or
movb
je
das
fwait
inc
mov
fistpl
push
adc
jb
xor
and
inc
sub
pop
aam
mov
mov
aam
xchg
push
inc
inc
push
testb
sub
std
jb
sbb
das
int3
sub
push
and
fs
enter
mov
xor
int3
call
mov
jmp
dec
aam
int3
mov
movsl
aad
loopne
xor
jmp
xchg
inc
sbb
jns
sbb
mov
aaa
nop
cmc
aad
mov
inc
pop
mov
sbb
idivb
mov
mov
pop
into
pop
mov
and
add
and
lahf
ja
shrl
out
and
xchg
or
xor
inc
in
or
add
adc
test
cmp
int3
clc
pop
sbb
filds
pop
icebp
fistps
pop
mov
inc
dec
sti
imul
inc
pop
mov
push
dec
jecxz
jo
dec
test
ficoml
mov
mov
mov
nop
push
xchg
hlt
pop
pop
ljmp
sarl
mov
xchg
mov
sarl
jo
mov
pop
addl
movsl
or
loope
mov
lea
das
les
lahf
pop
outsl
mov
inc
cltd
std
xor
in
inc
pop
outsb
or
pop
rcrb
arpl
das
ret
mov
jo
pop
add
inc
loop
mov
and
rcrb
test
xchg
add
adc
pop
repz
push
popa
add
popf
in
cmp
push
sbb
mov
dec
jb
xchg
movsb
int
cli
sub
jbe
test
inc
dec
mov
icebp
inc
adc
repnz
cmp
add
or
xorb
xor
cmp
xor
stc
out
mov
or
into
mov
ficoms
pop
or
cmp
cli
cmp
orl
mov
gs
lret
jno
sbb
ss
add
test
int3
outsb
add
daa
add
outsl
stos
mov
pusha
and
jmp
lock
mov
push
inc
cmc
mov
mov
test
test
outsb
cmpsb
stos
inc
cli
shl
scas
test
mov
loopne
flds
push
dec
inc
and
or
scas
sti
andb
push
inc
jle
xor
jl
mov
mov
stc
testl
int3
mov
cld
inc
icebp
out
inc
lcall
lods
inc
push
dec
test
cwtl
pop
mov
or
mov
cli
ljmp
lods
into
jmp
jb
push
repnz
or
inc
sub
hlt
gs
pop
mov
sbb
inc
mov
int3
dec
add
mov
shll
inc
outsl
push
jmp
push
mov
dec
cld
pusha
stos
dec
mov
lods
mov
dec
mov
dec
imul
aam
popf
leave
add
jne
push
shrb
push
enter
dec
dec
dec
and
sub
sub
cli
sub
inc
dec
fcmovbe
pop
xor
sahf
fidivl
repz
xor
add
dec
and
mov
popa
xchg
cmp
das
adc
pop
popl
call
int3
and
ja
sbb
cmp
add
int
pop
rol
mov
aam
mov
std
enter
pop
inc
into
popa
fldt
mov
and
ss
ds
push
mov
dec
xor
jbe
testl
pop
pand
cmpb
inc
pop
fnstcw
fnsave
lods
adc
lcall
mov
ret
cli
lea
lods
out
mov
int3
or
loop
jecxz
cmp
dec
or
cmpl
cld
mov
xorl
and
add
inc
pop
push
imulb
imul
mov
jmp
cmpsl
mov
jge
mov
jg
add
inc
int3
push
mov
push
sub
fs
leave
add
insl
mov
and
ja
adc
xchg
int3
jg
test
int3
shl
int3
testb
pop
and
out
sub
pop
cmp
sar
aaa
cmp
and
inc
shlb
xor
mov
inc
push
icebp
rcrl
in
sbb
fwait
mov
push
int3
mov
inc
adc
or
insb
fs
dec
inc
xchg
jmp
push
test
jae
fldt
fs
lahf
mov
dec
xchg
xlat
rorb
out
test
fstl
sub
std
pop
std
pop
push
pop
jl
aas
bound
xor
enter
mov
cwtl
lret
sbb
mov
addb
push
loopne
push
xchg
push
lret
dec
adc
stc
int
pushf
dec
in
jge
xchg
jle
in
ds
or
ja
cmp
fcmovnu
fcmove
xor
jle
in
mov
and
xchg
pop
jnp
cmp
test
xchg
jns
lods
pop
popf
int3
dec
xor
leave
pop
xchg
cmp
cmp
jo
pop
call
mov
popa
fadd
xor
xor
inc
scas
repnz
and
insb
or
loope
shlb
lret
cmp
pop
or
popf
push
xor
into
cmp
popf
popa
shrl
add
fstl
in
and
sub
push
pop
inc
cmc
inc
jmp
and
int3
or
dec
lret
adc
or
xor
xor
mov
pop
pop
add
fldlg2
jnp
fmul
in
sub
pop
pop
lahf
adc
jne
lret
repnz
mov
call
sub
fucomi
dec
dec
inc
and
push
pop
ret
fwait
hlt
push
pop
push
adc
pop
inc
or
sub
int
pop
adc
sbb
or
insb
rcl
xchg
add
pop
or
or
cmc
lods
lods
or
add
cltd
and
fiadds
sahf
dec
popa
mov
add
mov
out
sbb
es
mov
jo
fwait
sbb
es
or
jp
out
add
cmp
sub
pop
aas
jbe
arpl
or
inc
sti
arpl
jp
mov
mov
pusha
enter
inc
cmp
mov
cs
insb
pop
cld
fdivr
stos
faddl
inc
daa
xchg
mov
movsl
out
ljmp
aad
jge
lret
inc
mov
sbb
jg
lcall
cmp
out
mov
pop
insl
js
adc
cwtl
sub
dec
and
jne
int3
inc
es
stos
xchg
mov
jecxz
adc
jl
imul
aaa
mov
mov
mov
call
pop
mov
mov
idivl
out
daa
lock
in
jns
stos
cli
push
sbbb
xchg
or
fldenv
addl
or
sub
pop
out
pop
mov
push
inc
sub
mov
lahf
dec
inc
cmpsb
popa
xor
mov
mov
push
inc
sub
mov
jp
jno
cmp
bound
movsb
pop
dec
push
push
dec
mov
pop
jnp
jl
mov
pushf
jl
imul
and
pop
add
sbb
fs
sub
flds
xchg
aam
outsl
cld
movsl
sub
xchg
or
jb
jge
cmpsb
or
push
lret
mov
inc
sbb
adc
jo
and
in
push
xchg
push
xchg
ret
xchg
pop
jl
mov
loop
into
jle
or
push
mov
adc
xchg
fadds
adc
sti
or
mov
clc
imul
out
push
jno
pushf
xchg
and
mov
adc
xchg
pop
int3
jmp
rcrb
cmp
cmc
pop
mov
pop
push
push
call
and
loope
jne
repz
fwait
out
or
sbb
pop
pushf
cli
add
cltd
pop
pop
or
fs
ss
lods
pop
in
or
push
push
mov
testl
sub
mov
pop
mov
int3
lods
test
dec
sub
push
stos
in
js
jl
imul
pop
dec
add
scas
lret
into
jne
add
sub
adc
mov
repz
inc
clc
lea
xor
pushf
inc
or
sbb
sbb
out
dec
out
ds
mov
in
std
and
pop
pusha
lods
andl
enter
adc
push
cmp
int
cmpsl
sbb
insb
inc
and
or
lea
mov
inc
fcmove
cs
aad
push
add
push
push
jl
leave
aad
jno
jo
dec
pop
sub
and
inc
loope
test
jmp
xchg
ljmp
push
mov
in
cmpsb
jecxz
push
mov
inc
add
pop
sbb
lahf
pop
add
lret
or
sarb
cmpsl
mov
fsubs
mov
int3
cmp
ss
xchg
test
mov
or
mov
mov
fiadds
test
out
sub
inc
lea
xchg
xor
fs
pop
lahf
cwtl
mov
mov
ss
inc
sub
ds
xchg
ja
ljmp
dec
imul
adc
roll
cmp
aas
adc
dec
dec
fwait
cmp
or
jns
jno
test
out
inc
jp
xchg
ljmp
add
mov
and
mov
add
movsb
rcll
mov
pop
inc
aad
orl
xchg
push
inc
sahf
sahf
jne
dec
or
repnz
inc
jnp
jl
dec
jg
pop
adc
mov
out
loopne
inc
inc
cmp
aam
rcrb
imull
add
or
push
add
sub
popa
outsb
mov
pop
sbb
imul
pop
std
sbb
sbb
or
ret
fcompl
dec
int3
mov
inc
dec
mov
rorb
test
inc
add
call
outsl
xor
inc
int3
and
rcll
xchg
jg
arpl
lret
ret
scas
lock
xchg
pop
ja
pop
sub
rolb
insb
inc
add
dec
mov
aaa
inc
pop
enter
mov
push
daa
outsl
dec
adc
adc
jmp
into
cld
int
inc
push
fld
scas
and
add
push
and
sbb
ret
je
and
pop
xchg
cwtl
ja
jge
mov
pop
dec
dec
test
xchg
lret
cmpl
movsb
adc
imul
adc
dec
inc
push
loope
cmpsl
aad
sub
xor
orl
cmc
mov
shll
inc
add
pop
push
outsb
and
cmp
bound
inc
mov
test
cmp
bound
cltd
mov
jp
adc
std
cli
push
sub
jg
inc
movsb
dec
frndint
push
dec
in
dec
xchg
pop
or
and
fisubs
fmull
mov
pop
popf
fwait
xchg
xlat
pushf
mov
cmpl
cmp
ds
nop
mov
in
inc
nop
test
add
xchg
dec
mov
dec
fisubrs
dec
cmpsl
int3
pop
lods
ljmp
fdivs
repnz
dec
xor
sub
dec
insb
je
lock
movsb
out
test
and
lret
popa
test
roll
add
mov
pop
aaa
int3
dec
lock
xchg
ret
sub
imul
int3
cmp
jne
add
aas
mov
inc
jns
in
cmp
add
cmpsb
xor
add
fucomi
lds
or
testl
jecxz
iret
test
add
mov
shll
xchg
add
cs
mov
insb
cmp
flds
daa
xlat
pushf
repz
sahf
dec
out
sti
ret
inc
add
cmp
cwtl
cmp
int3
xor
rcr
mov
adc
int3
push
jne
movsb
mov
insb
pop
jb
mov
ss
aaa
inc
nop
pushf
or
inc
xchg
mov
pop
sbb
mov
inc
dec
jbe
sbb
fs
and
cmpsb
pop
mov
xor
sub
inc
inc
xchg
neg
mov
arpl
cwtl
inc
cltd
fcmovu
rorl
cmp
lcall
into
int
iret
or
in
mov
pop
xlat
pusha
aaa
lret
lret
faddl
pop
int3
mov
and
mov
mov
mov
add
out
dec
sbb
fbld
pop
mov
outsb
mov
and
je
mov
inc
daa
xchg
sar
push
dec
cmpsb
push
out
lods
sbb
pop
fs
fcmove
cmp
insl
pop
data16
sbb
push
out
jl
movsb
inc
ret
xchg
cmpsl
mov
jo
dec
adcl
mov
nop
cmp
inc
addr16
in
int3
inc
popf
lock
jo
fistl
mov
popa
mov
int3
push
or
push
bound
xchg
mov
add
cs
data16
sub
sub
jg
outsb
pop
dec
cmpsb
in
out
jns
loop
sbb
fnstsw
gs
inc
ss
dec
push
dec
and
adc
aaa
int3
hlt
fsubrl
arpl
cmpsb
xor
push
std
out
out
lret
loop
push
gs
sub
mov
jg
lods
in
loop
push
loope
mov
cmpsl
lahf
mov
dec
subl
pop
mov
roll
xor
jg
shrl
insl
cmpsb
cmp
cld
sbb
insb
mov
sub
mov
inc
sub
int3
mov
sub
mov
sbbl
les
cmpsb
mov
jbe
stos
pop
inc
sub
jl
and
das
popf
cmp
add
xchg
mov
cli
bound
cmp
fdivl
add
dec
sahf
mov
mov
ja
xchg
repz
int3
lods
cmc
push
scas
cmp
mov
adc
pop
dec
adc
mov
mov
cmpsb
mov
push
sti
mov
inc
in
inc
mov
in
pushf
pop
mov
ficoml
lret
decb
es
popa
pop
push
mov
sub
or
mov
push
push
pop
sub
or
pushf
test
sub
pop
pop
pop
repnz
xorl
mov
sub
int3
andb
and
js
inc
mov
int
cld
scas
dec
outsb
mov
sub
jle
mov
test
mov
dec
pop
sbb
call
push
cmpsb
add
out
dec
std
add
addb
push
xchg
mov
inc
inc
and
int3
lea
pop
mov
mov
cmp
into
pop
stos
into
test
cmp
add
push
loopne
test
and
loopne
and
jno
jp
mov
cmc
in
jb
cmp
stc
inc
int3
pop
pop
adcl
ss
mov
in
xchg
cmp
push
jle
sub
xchg
pop
out
and
mov
cmp
mov
ja
les
pop
imul
mov
test
inc
push
sbb
and
add
out
daa
lahf
and
or
int3
test
add
mov
sbb
or
mov
dec
xchg
xchg
adc
jo,pt
fmull
xor
inc
insl
mov
cmpsb
inc
inc
fisubs
xor
inc
mov
sub
dec
mov
cmc
adc
and
mov
sub
pusha
outsb
dec
adc
add
daa
push
ret
sub
mov
pop
pop
xchg
mov
cmpsb
inc
and
test
fdivs
and
or
dec
cmpsl
es
mov
stos
add
inc
pop
cmpsb
shr
stc
mov
cli
cmpsb
push
lret
ljmp
mov
push
dec
in
ljmp
int3
push
inc
sahf
lods
vpslld
push
test
cs
fstps
dec
sarl
mov
sub
adc
mov
sub
ficompl
addr16
jne
scas
xchg
mov
xchg
lret
cmp
mov
mov
push
inc
loopne
imul
mov
or
mov
pop
test
inc
pop
mov
jb
cmp
leave
lahf
inc
icebp
add
pop
sub
inc
or
icebp
outsb
ja
int3
js
arpl
mov
pushf
dec
cmpsb
pushl
jno
cwtl
push
dec
mov
and
fndisi(8087
add
push
ja
cmp
adc
or
sub
int
pop
jo
daa
filds
pop
adc
jns
xchg
fcomps
repz
jae
xlat
cwtl
and
mov
jge
mov
mov
pop
pop
popa
cmp
sub
mov
shll
ljmp
fstl
dec
cmp
out
les
mov
aas
inc
or
aas
and
cmpsb
jg
xchg
inc
ret
es
dec
pushl
mov
lods
inc
push
or
mov
popa
leave
pop
fistpll
or
out
fsubrp
in
mov
mov
dec
inc
mov
xor
aaa
lea
pusha
add
outsl
lahf
dec
sub
inc
xchg
movsl
aam
pop
into
scas
xchg
or
daa
test
int3
out
and
cmpsb
push
nop
jg
mov
xorl
push
jnp
cmpsb
mov
lods
mov
loopne
int3
jbe
dec
inc
mov
pop
jg
inc
data16
int3
scas
and
in
ror
cli
mov
adc
lea
bnd
jge
cmc
mov
adc
and
test
fsubl
lea
add
dec
jg
adc
ds
das
insb
pop
xabort
mov
mov
pop
fs
jno
es
clc
dec
pop
or
xlat
sub
int3
adc
inc
iret
push
pop
fdivp
lret
cli
in
jne
cltd
xor
das
rcrb
cmp
xor
xor
lea
push
and
mov
popa
jecxz
sbb
rolb
cmpsl
movsl
push
push
inc
outsb
xor
nop
mov
sub
gs
lret
mov
add
lret
call
int3
jle
xchg
push
jmp
hlt
addr16
jmp
inc
sbb
push
stos
dec
cmpsl
jg
cmp
js
add
adc
les
dec
fs
push
ret
int3
add
mov
pop
aaa
aad
jl
mov
fsub
pmulhuw
idivb
aam
pop
xchg
push
sub
lahf
xchg
lea
shlb
push
adc
pop
xchg
jo
inc
cmp
inc
repz
das
or
ja
cmp
mov
mov
sahf
adc
add
mov
or
loopne
push
add
leave
pop
lret
out
inc
cmp
call
cmp
sub
out
loopne
add
out
aam
add
mov
dec
xor
add
sub
xchg
int3
pop
mov
mov
cmp
pop
icebp
loope
jg
add
sub
or
lds
lea
subl
adc
add
add
dec
dec
push
fldcw
in
adc
pop
popf
lods
lret
and
pop
int3
jmp
xchg
add
mov
mov
aad
fstps
xor
iret
mov
fstps
dec
dec
test
xor
int3
pusha
mov
lret
inc
push
push
push
jb
in
pop
add
stos
ljmp
stos
jae
cmpsb
add
pop
cmpsb
rorl
popa
testb
inc
adc
xchg
mov
roll
adc
hlt
push
xor
int
sti
mov
inc
scas
adc
aaa
add
push
push
inc
data16
cwtl
xor
dec
test
sbb
sahf
int3
lds
pop
stos
mov
sbb
lret
movsb
in
lcall
push
nop
and
and
ret
lcall
out
into
pop
jmp
imul
mov
add
out
and
adc
testl
fs
popf
fiaddl
cmp
mov
sbb
xor
pushf
xchg
ficompl
sti
pop
fs
jmp
stos
in
add
loop
lea
cmpsb
adc
call
lea
stc
inc
inc
xchg
sbb
push
jp
call
shll
lcall
pop
jbe
test
add
push
out
push
dec
pop
shl
pop
xchg
dec
imul
fucom
mov
mov
jae
xor
inc
pop
mov
push
rorl
ror
sahf
mov
mov
jnp
aam
add
clc
cmp
inc
cmp
mov
int3
sub
or
push
out
lahf
subb
cmp
adc
ret
popf
xor
push
int3
mov
aad
inc
push
iret
mov
or
call
and
es
loopne
aad
roll
mov
dec
xor
cmp
pop
mov
lret
cwtl
cmc
adc
fdivs
fs
cmp
ret
pop
sub
adc
pop
push
inc
dec
mov
mov
fidivrl
push
sub
int3
jnp
pop
mov
imul
mov
xor
cmpsb
cltd
fcomp
cmp
scas
int3
sbb
xor
sbb
push
and
add
lock
addr16
pushf
lds
cmc
je
loop
sarl
pop
orb
aad
insb
daa
fwait
cld
cld
adc
int3
das
imul
sarl
jecxz
jg
inc
mov
cmpsb
mov
lock
test
xchg
push
out
pop
sub
cld
fwait
xchg
aas
sahf
mov
push
repz
cmp
in
cmpsb
cs
aam
sbb
sub
mov
push
dec
test
push
cmc
sbb
fxch
arpl
dec
lret
jge
jp
jns
push
inc
pop
xor
shrl
jo
inc
sub
out
fcomi
ss
pop
xor
jmp
dec
xchg
dec
sub
mov
jns
aam
insl
add
pop
push
mov
mov
cmp
push
mov
xchg
inc
ljmp
js
in
repz
loopne
add
adc
mov
push
mov
les
jne
dec
lret
loop
iret
or
subb
and
lock
inc
inc
outsb
bound
dec
and
pop
pop
pop
repnz
ljmp
fs
ret
push
mov
mov
ljmp
mov
and
lea
outsl
jg
cmc
sti
jl
cmp
stos
je
out
repnz
jae
xchg
pop
push
lcall
lcall
mov
jg
ljmp
xor
sub
andl
inc
push
dec
or
mov
icebp
test
fdivs
movsl
fisubl
faddl
sarb
push
outsb
pop
stos
sub
ret
int3
adc
roll
or
sbb
mov
mov
popa
pop
push
cmpsb
test
icebp
lahf
cld
push
in
sahf
jmp
shl
push
jle
lcall
sbb
pop
fldl2e
ja
mov
or
imul
pop
hlt
hlt
clc
les
mov
fcomp
rcrb
rolb
fs
mov
call
cmpsb
pop
lods
cli
mov
adc
or
and
add
or
and
and
push
push
movsl
sbb
xchg
andb
mov
shll
or
inc
lods
and
push
orb
add
add
push
add
xchg
add
mov
add
inc
mov
add
inc
push
dec
fadds
dec
addb
push
xor
test
add
pop
and
addl
inc
add
adc
adc
or
inc
adc
or
inc
inc
and
or
adc
add
and
addl
enter
add
add
pusha
or
mov
rolb
sub
xor
xchg
add
dec
adc
dec
and
adc
xchg
and
adcl
cwtl
inc
or
add
popa
add
mov
push
add
bound
adc
inc
rolb
jl
adc
add
push
add
adc
and
ret
pusha
or
xchg
cmp
inc
xor
test
popl
add
sub
add
orb
mov
add
or
and
pusha
shll
or
inc
and
mov
andb
add
stos
adcb
dec
add
add
add
dec
mov
cwtl
lret
push
sub
pop
add
or
or
add
jo
inc
sub
andb
and
push
inc
mov
add
push
mov
add
dec
add
add
pop
sbb
add
addl
mov
add
sbb
inc
movsb
add
les
adc
jo
inc
xchg
inc
ret
je
add
adc
mov
andb
fadds
sub
add
and
inc
sbb
add
add
or
and
add
adc
add
push
mov
mov
dec
add
push
int3
xor
sbb
dec
inc
pusha
nop
dec
add
jo
and
dec
add
add
test
inc
sbb
add
adc
add
pusha
add
push
add
popl
add
adc
sbb
dec
test
add
push
add
xor
adc
pusha
add
adc
add
and
or
inc
add
test
or
adc
int3
xor
fadds
or
or
add
nop
enter
pusha
rcrl
inc
and
inc
add
or
dec
lcall
add
or
add
and
add
xor
add
and
inc
or
adc
addb
add
mov
add
inc
adc
add
jo
dec
adc
add
add
xor
adc
add
movsl
add
and
enter
and
or
mov
lock
add
add
or
test
add
add
adc
inc
add
mov
push
dec
sub
add
sub
mov
orl
sbb
test
mov
mov
and
mov
adc
test
nop
inc
sub
add
and
dec
sbb
test
add
movsb
push
mov
dec
add
add
add
push
add
inc
rolb
mov
addb
adc
adcb
nop
add
scas
nop
adc
inc
and
sub
mov
rclb
or
adc
and
sub
addl
add
and
pusha
or
jno
popa
arpl
add
push
inc
sub
add
test
adc
add
inc
xor
xor
sub
add
and
dec
and
or
add
or
sbb
or
add
add
add
xor
inc
inc
addb
rolb
and
lea
push
pop
sbb
xchg
mov
xorb
add
add
and
add
sub
cltd
shrb
add
orb
adc
pop
mov
dec
test
sub
adc
adc
and
or
add
adc
inc
inc
add
push
add
add
and
mov
and
or
mov
popa
add
add
mov
dec
addb
cwtl
xor
sub
add
add
mov
push
add
shl
es
leave
mov
push
or
and
sbb
add
test
push
or
add
add
add
add
mov
adcb
cwtl
aam
inc
add
addb
addb
push
mov
shlb
or
xchg
mov
push
pusha
add
adc
add
stos
dec
jp
nop
xchg
mov
add
xor
add
push
add
or
mov
pop
and
and
or
enter
mov
adcb
or
popf
bound
sbb
adc
push
and
lds
xchg
inc
pcmpgtb
inc
add
xchg
add
mov
push
add
and
pusha
or
push
add
and
adc
add
add
and
mov
loopne
inc
movsb
adc
addb
sbb
and
push
add
add
sbb
add
or
adc
mov
and
mov
or
mov
add
adc
add
andb
add
loope
adc
xchg
dec
add
add
push
dec
push
lock
cmp
add
add
inc
add
add
push
addb
sbb
rolb
aam
add
or
add
add
add
addb
adc
add
leave
or
add
sub
or
xor
and
test
add
addb
mov
and
add
sub
or
rolb
rolb
and
pusha
adcl
sbb
addl
mov
movsb
and
inc
xchg
cwtl
shlb
cwtl
xor
add
add
push
or
adc
sub
mov
add
add
or
and
adc
adc
add
add
mov
xorb
add
addb
add
add
xor
pop
inc
nop
mov
inc
adc
sbbb
add
adc
add
inc
lahf
add
ret
pop
nop
add
adc
add
add
add
add
xor
xchg
shlb
inc
add
push
or
or
test
adc
and
sbb
add
adc
inc
adc
add
add
add
jecxz
adcb
sbb
or
inc
add
add
aad
add
or
pop
ret
add
lahf
addr16
sub
les
adc
sbb
or
addb
inc
test
cmp
shlb
inc
adc
and
add
add
add
mov
add
add
and
movsl
mov
or
or
or
adc
push
andb
add
popa
mov
sbb
add
and
and
adc
ljmp
and
adc
andb
or
add
add
add
pusha
inc
adc
adc
or
test
es
andb
add
add
addb
jo
sub
or
loopne
add
add
or
inc
inc
mov
inc
add
and
sub
add
pop
or
add
inc
cmpb
and
add
adc
test
add
add
andb
adc
dec
cmpb
sub
add
add
adcb
sbb
adc
inc
orb
movsb
add
inc
test
cmpsl
add
and
dec
add
add
and
and
and
rolb
cmpb
and
add
addb
adc
add
add
pop
adc
xor
xor
lock
mov
push
cltd
add
add
orb
add
push
mov
add
inc
add
dec
add
pusha
inc
add
adc
xchg
adcb
add
add
add
xchg
and
add
and
add
or
and
add
test
push
inc
inc
push
inc
add
loope
add
inc
inc
orb
adcb
andl
xchg
or
adc
push
and
or
dec
push
add
add
mov
push
push
or
mov
add
add
sbb
and
sahf
rolb
adc
adc
or
xchg
mov
mov
inc
pusha
add
inc
dec
add
and
add
add
sbbb
add
add
orl
add
or
adc
add
add
je
inc
and
sub
orb
sbb
push
inc
inc
bound
inc
or
adc
add
inc
sub
adc
adc
les
sbb
push
or
pop
add
push
addb
inc
jno
pop
add
inc
and
adc
add
add
adc
inc
orl
add
or
inc
and
sbb
xor
and
shlb
and
adc
cmp
push
add
add
xor
nop
sub
or
adc
adc
movsb
add
arpl
jmp
ret
push
loopne
addl
add
add
mov
add
cltd
add
addl
sub
add
pop
test
add
and
mov
enter
add
dec
add
add
adc
push
pop
sub
mov
lea
or
dec
stos
add
cltd
sbb
sbb
inc
add
nop
lock
xor
les
add
inc
inc
adc
push
add
xchg
add
adc
and
sub
add
add
inc
xor
sub
jae
push
mov
adc
add
daa
sub
or
xchg
mov
add
inc
dec
or
and
xor
or
or
and
add
subb
sub
push
add
mov
add
mov
mov
mov
leave
inc
xchg
andl
sbb
inc
sub
add
adc
stos
rolb
or
and
mov
add
test
dec
jb
mov
or
add
adc
inc
adc
mov
adcb
or
jbe
inc
adc
sub
orb
cwtl
adc
and
or
adc
addl
push
or
mov
fwait
cmpsb
or
mov
and
push
add
add
pusha
add
or
inc
push
add
or
or
mov
and
shrb
sub
add
add
inc
push
arpl
mov
add
adc
test
addb
nop
mov
or
add
add
push
adc
sub
adc
add
and
cmpb
adcl
sbb
add
push
popa
adc
pop
or
add
or
addl
add
or
dec
add
and
add
sbb
push
push
adc
mov
cmp
mov
add
add
nop
and
add
jb
addl
inc
adc
mov
and
test
nop
inc
and
inc
sbb
mov
pusha
or
inc
inc
orb
sub
xchg
mov
and
inc
adc
add
adc
pusha
add
pusha
push
and
add
and
scas
and
push
mov
add
dec
pop
jb
xchg
xor
push
push
sbb
insb
and
roll
mov
cmp
add
add
adc
add
or
addl
pusha
add
gs
or
add
mov
cwtl
mov
and
sub
adc
mov
add
ret
adc
adc
in
add
or
add
test
inc
es
and
add
or
and
cmp
xor
xchg
arpl
xor
inc
or
addb
xor
arpl
dec
adc
or
addb
shlw
fisubl
adc
and
mov
addl
addb
and
add
adc
dec
add
nop
or
addl
and
adc
adc
sbb
rolb
shll
add
sub
and
xor
adc
xor
sbb
inc
inc
add
mov
pop
sbb
xchg
je
stos
inc
xor
test
or
add
dec
adc
add
adc
push
add
xor
inc
or
addl
sbb
or
xchg
orb
xchg
sbb
addl
inc
xchg
and
xchg
add
rolb
xchg
sbb
mov
push
xor
add
add
and
inc
pop
sbb
cwtl
add
xor
inc
and
mov
add
addb
and
add
shlb
clc
add
inc
adc
add
orb
add
arpl
orb
add
inc
adc
inc
push
add
inc
xor
and
loopne
push
xchg
or
add
and
sbb
inc
inc
and
inc
lea
or
andb
sub
adc
loopne
adc
rorb
sub
add
add
inc
xor
dec
inc
add
or
nop
push
inc
add
add
sub
lret
lds
unpcklps
add
and
add
mov
mov
mov
and
add
pop
push
add
xchg
add
inc
add
and
aam
stos
push
rolb
add
add
add
add
add
sbb
orb
or
cmpb
add
add
cwtl
dec
inc
add
sub
add
add
add
pusha
pusha
xorb
and
add
add
xchg
dec
adc
cwtl
inc
adc
movb
or
call
inc
add
inc
enter
adc
sub
es
movsb
sub
test
xor
loope
inc
and
sub
or
add
clc
add
adc
xor
adc
inc
sbb
sbbb
pop
sbb
test
orb
inc
add
add
jb
add
or
xchg
add
inc
dec
or
adc
inc
or
add
rclb
add
adc
add
dec
roll
adc
inc
addb
inc
pop
les
adcb
adc
and
inc
xchg
xor
or
add
sbb
pop
jecxz
loopne
xchg
xor
and
dec
and
or
mov
and
adc
or
sub
or
rol
add
add
stos
and
test
add
mov
or
add
add
pusha
or
inc
adc
sub
add
sbb
add
inc
aam
xor
andb
add
inc
add
pop
add
and
or
lret
xor
sbb
inc
or
add
and
push
add
or
rol
adc
adc
adc
inc
inc
or
add
dec
sbb
movsb
or
and
add
add
cmp
add
jo
inc
adc
add
add
add
or
cmp
inc
push
or
inc
andb
or
add
sbb
pop
adc
pop
sbb
push
sbb
inc
and
adc
test
xchg
add
inc
xor
add
add
add
sbb
add
or
adcb
nop
les
mov
mov
dec
test
xchg
add
nop
test
add
push
and
add
sub
and
or
add
xchg
sub
add
push
add
mov
sbb
dec
or
and
adc
add
and
add
sbb
add
add
adc
adc
add
addb
ret
add
add
add
mov
push
sub
push
inc
adc
test
inc
mov
adc
cwtl
add
mov
add
add
adc
addb
inc
or
and
push
add
or
nop
andb
or
add
adc
add
adc
push
add
test
and
mov
cmp
mov
or
mov
add
sub
adc
xchg
andl
bound
enter
inc
and
rorl
push
mov
add
add
nop
add
leave
nop
dec
or
add
and
mov
or
jo
inc
adc
cwtl
add
adc
and
inc
out
ret
inc
inc
add
addl
add
cmp
mov
cmp
lret
adc
bound
adc
add
andb
and
adc
test
andb
mov
adc
xchg
or
sbb
in
or
add
andb
add
add
loope
adc
add
sbb
add
movl
add
dec
dec
inc
sub
add
loope
and
add
inc
and
pop
xchg
and
adc
lret
adc
aas
dec
nop
inc
push
inc
mov
xor
and
adc
xchg
testb
dec
or
add
inc
or
loopne
inc
dec
push
nop
bound
add
adc
add
adc
sub
or
or
or
sub
adc
adc
orl
add
adc
subb
inc
adc
sbbl
inc
lods
mov
test
push
adc
or
mov
adc
dec
inc
rorl
dec
inc
sbb
addb
mov
add
ja
xorb
add
arpl
cltd
add
addl
add
inc
cmp
mov
movsb
call
add
add
and
add
mov
test
add
dec
add
add
adc
push
lds
mov
mov
xorb
push
add
add
nop
xor
inc
inc
sub
mov
or
inc
xor
add
mov
push
cmp
push
pop
add
lods
xchg
sub
xor
or
add
adcl
add
add
rolb
andb
sub
lcall
leave
add
add
mov
sbb
addl
add
adc
mov
xchg
addl
adc
sbb
adc
add
add
adc
push
inc
or
and
add
dec
sub
cmp
int3
add
add
data16
orb
add
movsb
sbb
add
and
and
inc
add
imul
add
add
andb
inc
les
adc
inc
adc
add
addl
sbb
or
add
andb
stos
jno
add
addb
add
or
add
nop
pop
adc
or
or
mov
inc
dec
andb
xor
in
shlb
add
inc
add
add
adc
pop
inc
nop
add
or
dec
or
inc
imul
test
add
sbb
dec
loope
inc
and
or
push
adc
lock
or
add
and
add
and
and
inc
and
or
test
adc
add
add
and
and
or
mov
pop
add
and
or
jne
add
add
xchg
or
sbb
test
or
or
cmp
add
andb
add
and
sub
pop
sbbb
inc
inc
pop
bound
mov
adc
xchg
addl
add
add
loope
xchg
add
addb
add
nopl
or
mov
add
adc
dec
js
sbb
add
or
test
xchg
push
xchg
add
sbb
add
inc
xor
adc
sbb
push
mov
sub
loopne
dec
mov
add
adc
pop
push
jo
jp
adc
inc
add
dec
adc
add
add
add
subb
inc
xchg
add
fs
scas
and
inc
xor
or
adc
mov
pop
cmpsb
and
or
lds
adc
dec
pusha
sbbb
mov
test
dec
add
and
dec
and
or
xor
add
sbb
addb
sub
sbb
inc
add
add
mov
push
mov
add
call
xor
add
add
add
adc
subb
inc
add
and
add
or
lret
adc
sbb
inc
xor
inc
inc
mov
inc
sub
add
xchg
add
add
pusha
pop
loop
push
adc
push
inc
and
sub
xchg
add
sub
or
or
call
add
add
mov
add
or
push
into
sbb
or
add
dec
adc
adc
call
pop
sub
and
movsl
jo
call
add
add
adc
add
mov
and
sub
inc
push
add
xor
pop
add
and
add
inc
and
push
pop
inc
inc
or
add
xor
adc
or
mov
mov
rcll
xchg
add
loopne
push
add
adc
and
inc
inc
shlb
sub
add
and
inc
mov
and
inc
add
add
adc
push
cmp
add
adc
or
adc
or
add
mov
push
call
add
add
inc
ss
pusha
push
or
push
outsb
add
or
pusha
inc
inc
andl
arpl
and
rcrb
pusha
add
xchg
adc
adc
add
inc
sub
push
add
add
out
xor
inc
push
add
adc
aad
or
add
xchg
clc
or
add
add
and
add
adc
pusha
add
inc
bound
or
dec
and
inc
and
add
add
addb
add
or
dec
add
test
fsubs
adc
dec
and
push
push
add
enter
add
lods
shlb
pop
nop
add
sub
imul
inc
inc
adc
sbbb
adc
push
and
rcl
or
add
adc
add
add
add
sahf
xor
add
inc
and
inc
adc
je
push
adc
mov
insb
shlb
adc
xorb
xor
jo
inc
inc
mov
adc
inc
inc
mov
add
shlb
adc
icebp
add
add
add
add
adc
adc
adc
add
and
or
xor
rolb
xchg
add
or
add
adc
add
and
addb
pusha
and
adc
add
add
add
or
and
mov
sbbb
add
ret
and
and
mov
push
add
xor
addb
movsb
subb
arpl
add
and
cmc
and
and
ret
pop
xchg
addb
dec
pusha
adc
mov
adcb
push
or
adc
push
adc
and
push
adc
add
xor
dec
add
adcb
es
add
and
dec
mov
pop
and
aam
add
add
and
mov
test
add
adc
rol
add
andb
add
add
mov
adc
rolb
addb
dec
adc
sbb
addl
sub
sub
add
sbb
add
adc
dec
cmp
sbb
and
and
push
xor
add
adc
ljmp
adc
add
inc
or
addl
mov
or
roll
pusha
add
movsb
add
cmp
adc
add
add
adc
inc
and
or
shlb
push
adc
sub
test
sbb
andb
and
add
adc
mov
xchg
xor
push
push
test
add
add
or
adc
imulb
adc
or
mov
inc
add
inc
adc
add
mov
or
add
add
adc
and
fs
add
pusha
add
add
rorb
add
popa
push
mov
addb
push
mov
add
aam
add
adc
sbb
add
or
inc
add
sbb
add
and
and
add
xchg
add
and
es
inc
xor
add
fwait
inc
or
add
add
sub
push
xor
sbbb
cmp
adc
add
les
adc
enter
and
xor
add
add
dec
rolb
add
or
add
push
add
or
sbb
orl
inc
push
cs
add
push
xor
add
xchg
addl
add
push
sub
add
ret
mov
dec
adc
subl
nop
add
add
sbbb
adc
push
shlb
adc
add
mov
add
sub
add
push
add
addb
inc
xor
add
xchg
add
and
inc
add
add
add
or
addb
aam
dec
les
orb
and
inc
adc
add
inc
roll
add
pushf
add
addb
add
mov
mov
add
inc
mov
add
add
mov
add
sub
pusha
inc
mov
sbb
sbbb
test
inc
or
xor
sbb
inc
add
andb
sub
adc
ror
or
addb
inc
sbb
inc
or
push
add
push
or
push
add
nop
adcb
sbb
adc
sbb
adc
xchg
inc
sub
rclb
xor
adc
adc
xor
add
subl
sbb
aaa
or
or
adc
add
and
ss
adc
xor
mov
push
and
nop
add
leave
pop
inc
inc
orb
dec
add
and
test
mov
fwait
add
add
add
add
adc
adcb
inc
addb
or
add
and
loopne
add
mov
and
add
or
popa
inc
add
add
rorb
dec
mov
add
lods
sbb
enter
adcb
dec
or
add
add
mov
nop
and
mov
inc
add
inc
test
add
or
add
dec
or
adc
adc
add
sbb
or
and
orb
or
add
xchg
add
adcb
inc
adc
dec
pop
and
inc
and
jno
inc
cmp
inc
add
push
enter
shlb
adc
or
mov
add
or
xchg
adc
push
pop
addb
and
nop
add
add
add
mov
cmp
add
push
add
sbb
sub
mov
and
pop
test
inc
xor
mov
mov
and
add
nop
adc
lock
add
mov
pusha
sbb
mov
adc
roll
mov
push
add
je
add
mov
add
adc
add
inc
adc
add
pusha
sbb
fwait
aaa
add
jb
or
and
dec
add
xchg
adc
pop
sbb
mov
add
scas
adc
push
je
or
push
jo
add
dec
call
inc
adc
add
add
in
mulb
add
add
add
or
add
or
dec
add
add
push
adc
sbb
add
xchg
les
push
or
or
add
and
sub
jo
ret
add
add
inc
inc
or
rorb
adc
push
add
nop
adc
imul
inc
movsb
and
and
mov
adc
leave
or
roll
and
mov
addl
pusha
inc
or
dec
add
sbb
inc
xor
les
inc
and
push
add
push
adc
xor
xor
add
and
adc
mov
add
sub
xor
dec
inc
adc
pusha
adc
and
fsts
and
adc
cmp
sbb
adc
lds
nop
addl
data16
sub
andb
mov
inc
or
push
add
and
add
add
add
inc
loopne
and
inc
or
xchg
add
add
or
and
add
add
inc
addl
shlb
dec
pop
dec
test
mov
xchg
add
add
xchg
or
add
sub
xor
sbb
jae
adc
rolb
add
xorb
and
or
mov
adcb
or
add
mov
or
or
push
inc
mov
adc
push
add
xor
inc
adc
cwtl
push
or
ja
andb
inc
xor
sub
adc
push
dec
movsb
dec
addl
cwtl
add
inc
sbb
add
and
push
add
xchg
add
add
test
or
pop
add
mov
mov
inc
ljmp
add
call
pusha
push
lods
add
adc
and
and
xchg
inc
and
stos
nop
add
or
add
xor
add
addb
jp
adc
push
and
adc
inc
inc
pusha
adc
add
inc
sbb
and
pop
inc
xor
adc
shlb
addb
and
xor
rolb
add
dec
adc
and
adc
inc
pop
mov
add
mov
add
inc
rclb
xchg
add
dec
ss
add
or
inc
or
orb
add
add
or
xorb
and
and
add
add
sbb
icebp
adc
adc
add
test
sbb
in
add
ret
mov
dec
es
push
or
add
add
movsb
or
push
add
adc
inc
xor
sbb
inc
and
xchg
add
inc
adcb
adc
inc
adc
cmpsb
add
add
inc
bound
push
xor
push
inc
bound
add
sbb
xchg
sub
rcll
add
add
add
add
inc
push
add
cwtl
addb
andl
add
add
adc
add
push
xor
or
xor
dec
adc
inc
mov
push
test
adc
bound
and
add
or
pusha
push
add
mov
add
adc
mov
inc
or
loopne
nop
add
adc
push
mov
add
add
orb
or
push
push
adc
pushf
mov
or
push
xorb
or
or
add
mov
xchg
add
ret
or
sbb
imul
mov
andl
mov
or
push
add
dec
inc
mov
add
popa
add
mov
and
test
add
inc
orb
inc
pushf
rorl
mov
outsb
add
add
or
ret
sub
push
add
add
or
pusha
or
add
and
add
xorb
add
addb
lock
addb
xor
add
adc
call
rolb
and
add
add
bound
xchg
or
xchg
or
inc
adcb
adc
adc
add
jmp
inc
add
add
add
xor
add
add
sub
call
push
push
inc
add
addb
nop
inc
and
or
add
adc
test
adc
and
and
cltd
nop
add
movl
fs
and
lea
add
nop
inc
inc
add
pop
daa
add
sub
adc
add
xor
mov
inc
inc
mov
adc
sub
adc
push
test
xor
sarb
dec
inc
sbb
mov
add
and
sbb
or
or
add
xchg
add
or
int3
mov
mov
mov
mov
inc
adc
add
adc
add
mov
loop
or
cmp
add
adc
xchg
adc
lock
inc
pusha
pusha
shlb
or
adc
mov
imul
add
adc
adcb
and
add
and
orl
sub
or
mov
pop
add
sbb
and
mov
or
xchg
or
add
or
xor
add
and
sbb
and
add
dec
shlb
shlb
dec
adc
andb
add
test
xor
dec
adc
add
xor
or
or
inc
inc
orb
xor
sub
cmp
mov
sbb
sbb
inc
add
inc
adcl
push
popa
or
add
add
add
dec
and
sbb
test
and
ss
pop
push
add
add
pop
and
inc
add
add
adc
dec
mov
adc
add
push
xor
lahf
cmp
xor
inc
or
add
loope
add
add
addb
push
mov
nop
insb
mov
movsl
or
adc
xchg
mov
adc
ret
pusha
nop
add
or
mov
and
adc
inc
or
add
adc
or
push
push
roll
test
inc
add
sbb
or
cwtl
add
add
inc
push
and
orb
adc
lret
mov
adc
cmpsb
addl
add
push
dec
mov
xor
test
inc
imul
fs
add
push
or
push
adc
or
and
or
add
or
add
add
xchg
add
pop
add
add
adc
andb
daa
add
cmp
mov
xor
inc
add
push
adc
xor
rolb
andl
pop
lods
add
nop
bound
add
xchg
nop
mov
inc
xor
xchg
add
or
add
mov
addb
ret
add
call
adc
inc
or
adc
subb
dec
add
and
or
or
add
pop
adc
push
insb
and
cltd
loop
dec
and
pusha
mov
adc
test
add
inc
imul
addl
or
es
adcb
adc
and
and
nop
mov
adc
pop
and
inc
pushf
adc
push
and
add
add
add
xchg
inc
ret
add
adc
pusha
add
xchg
add
mov
pop
addl
rolb
inc
test
adc
ret
sbb
adc
or
add
test
bound
adcb
inc
and
inc
enter
or
add
add
add
nop
dec
adc
adc
inc
add
loopne
loop
mov
dec
adc
adcl
add
je
xchg
add
addb
or
add
inc
addb
adc
adc
dec
and
mov
inc
andb
add
adc
add
inc
cwtl
sub
add
or
inc
add
shrb
or
pusha
or
rolb
add
and
test
add
pusha
sub
push
adc
add
inc
add
pushf
adc
add
sub
rclb
add
inc
mov
mov
add
addb
and
cmp
add
mov
add
mov
test
add
test
adc
adcl
or
add
dec
rolb
add
push
add
and
dec
popa
or
add
add
or
adc
dec
mov
dec
add
add
sub
or
push
test
add
dec
mov
orb
add
add
inc
sub
add
mov
mov
adc
or
xlat
cmpsb
adc
nop
push
push
arpl
mov
int3
es
or
inc
or
or
add
add
adc
inc
adc
add
sub
sbb
push
jb
andb
inc
add
add
add
add
sub
add
add
test
add
fiadds
sub
movsl
add
add
or
rclb
xorb
inc
dec
mov
add
or
or
add
push
mov
add
inc
es
test
dec
add
adc
add
sub
adc
sub
add
addb
add
mov
adc
add
add
add
pushf
inc
in
add
nop
pop
inc
enter
add
and
punpckldq
and
xchg
xchg
repnz
sub
add
add
add
add
and
push
cmp
add
or
mov
add
add
mov
inc
mov
rclb
and
add
push
inc
add
mov
or
or
push
adc
adc
inc
add
sub
and
rclb
adc
cltd
popa
sub
inc
adc
sbb
dec
add
nop
push
add
push
and
add
test
test
adc
enter
add
aad
add
add
inc
addl
mov
popa
adc
sbb
and
and
movsl
sbb
adc
adc
and
push
adcb
add
popa
add
add
add
inc
sbb
xchg
push
popa
rclb
inc
inc
add
mov
xchg
add
jnp
rorl
and
add
or
nop
and
adc
add
adc
push
adc
adc
dec
xchg
add
sbbb
and
add
inc
inc
movsb
add
sbb
or
inc
mov
sbb
pusha
enter
add
add
sbb
push
inc
lock
cmp
add
shlb
test
dec
add
push
add
sub
pusha
lret
mov
add
cmp
mov
xor
cmp
inc
addl
and
add
and
adc
inc
add
movsb
test
add
addb
mov
add
add
mov
add
addb
and
adc
sub
add
add
adc
push
push
sbbb
dec
inc
test
pop
mov
add
add
add
add
add
and
inc
and
add
rcll
add
sbb
and
inc
and
and
and
adc
and
add
inc
mov
add
adc
pusha
and
add
add
xchg
sbb
add
adc
add
dec
add
adc
lock
sbb
dec
add
add
inc
icebp
or
add
push
push
dec
and
sbb
add
lret
add
mov
and
adc
sub
test
test
add
add
sub
pop
mov
push
add
add
xor
add
rclb
inc
cltd
and
push
and
mov
mov
nop
mov
xchg
inc
ret
push
inc
cwtl
mov
add
inc
add
mov
xor
addb
and
add
test
or
popa
lcall
adc
mov
fcoml
add
or
arpl
inc
inc
add
or
adc
sbb
sub
mov
add
and
or
add
mov
mov
add
pop
sbb
and
or
rcrb
and
add
or
cmp
add
or
add
inc
add
inc
inc
andb
sub
mov
nop
add
add
add
mov
and
add
add
and
add
xor
push
add
adc
add
or
add
add
or
sub
adc
mov
inc
adc
or
inc
push
addl
add
add
inc
or
or
inc
mov
add
inc
daa
and
sub
rcll
and
add
push
or
add
add
or
add
test
adc
and
test
add
add
sbb
xchg
push
sbb
cs
add
adc
sbb
push
sbb
or
adcb
addl
and
test
add
sub
rolb
and
inc
xchg
add
dec
adc
mov
add
add
addb
aaa
add
add
add
or
push
add
addb
jbe
or
jo
adc
adc
xchg
adcl
mov
and
inc
sub
addb
or
add
and
xorb
add
addb
adc
or
pop
add
lea
sub
subb
adc
push
in
add
inc
mov
mov
data16
add
add
inc
add
add
cwtl
add
add
nop
add
or
add
cld
enter
pop
lods
pusha
xor
or
jg
add
sbb
mov
fs
sub
pop
add
adc
xchg
or
and
add
adc
adc
and
roll
adc
mov
or
xchg
add
or
and
dec
xor
dec
push
adc
xchg
add
loopne
adc
inc
inc
add
je
inc
or
sub
and
inc
pop
and
rclb
or
push
or
fistl
adc
or
mov
sbb
xor
inc
or
add
add
add
sub
adc
nop
pusha
adc
inc
add
sub
dec
add
or
xchg
insl
jo
mov
add
andb
or
inc
and
test
pop
add
pusha
inc
and
fadds
xchg
inc
push
inc
mov
and
inc
mov
mov
dec
adc
add
dec
xor
adc
dec
mov
push
add
inc
add
daa
xor
and
inc
add
add
sub
arpl
inc
sbbb
cmp
adc
sbb
addb
dec
add
and
mov
orb
add
movsb
and
dec
add
and
add
push
mov
stos
sbb
sbbl
push
push
pushf
addb
add
adc
add
push
push
rolb
add
mov
addb
cmp
add
or
mov
rorb
inc
add
push
add
sub
addb
mov
and
xchg
mov
sub
adc
rclb
sbb
inc
sbb
inc
push
addb
add
adc
sbb
inc
adcb
and
and
and
xor
inc
inc
addb
sbb
roll
pop
cs
addb
inc
adc
add
sub
sub
add
and
inc
addb
add
push
mov
adc
pop
mov
push
add
rorb
pusha
pop
adc
sbb
adc
xor
add
add
lret
add
and
or
add
nop
nop
nop
or
pop
fadds
add
mov
push
inc
adc
add
add
mov
fadds
add
sub
add
inc
dec
adc
add
mov
push
add
adcb
and
daa
or
sbb
add
pop
add
add
inc
add
mov
pusha
adcb
inc
push
add
add
or
add
sbb
and
add
add
nop
xor
inc
add
test
dec
daa
add
cmp
inc
sub
add
add
mov
sub
add
fdivl
push
add
xor
add
and
in
sub
loopne
add
add
xor
add
adc
push
push
cmpsb
les
add
add
mov
and
add
add
and
inc
or
adc
sub
or
add
mov
inc
andl
or
fmuls
and
and
shlb
andl
add
inc
fmuls
shrb
orb
test
addb
inc
cmp
adc
adc
xor
adc
add
nop
add
add
or
mov
sub
or
or
add
or
adc
add
pusha
enter
add
inc
add
push
test
add
and
add
and
add
in
push
add
sbb
push
adc
test
add
inc
rorb
add
inc
adc
mov
dec
xchg
sbb
or
push
add
subb
and
add
sbb
cmp
and
or
push
and
mov
test
jo
xchg
inc
add
je
adc
or
mov
nop
test
nop
add
pusha
loopne
add
inc
add
mov
pusha
addl
push
add
aam
add
pusha
cmp
adc
xor
add
shlb
sub
add
adc
dec
add
add
adc
add
inc
adc
sbb
inc
xchg
or
ret
adc
mov
push
inc
cmp
inc
test
sub
add
add
mov
add
call
inc
adc
enter
or
xchg
add
and
add
addl
add
inc
mov
add
or
mov
or
adc
ret
or
rcll
mov
outsb
push
add
mov
cmpsb
and
or
sbb
nop
and
inc
pop
or
dec
and
adc
andb
or
addb
add
mov
add
or
dec
adc
xor
adc
add
adcb
add
add
add
add
and
mov
cmp
cwtl
add
mov
and
push
add
and
or
sbb
inc
mov
and
xor
add
adc
lds
add
pop
inc
dec
add
mov
mov
loope
xor
and
adc
push
inc
mov
add
inc
mov
add
add
inc
inc
or
addb
inc
inc
or
inc
and
add
xor
and
shlb
and
mov
pop
add
add
add
and
add
add
xchg
add
nop
test
pop
add
adc
or
adc
and
and
add
sub
mov
cmpsl
and
andb
adc
push
in
and
js
adc
add
roll
xor
add
xchg
add
push
dec
add
adc
and
xchg
or
add
add
and
dec
addb
or
add
sbb
nop
les
push
and
popa
test
adc
xchg
orb
inc
ret
adc
or
orb
dec
bound
add
adcl
mov
or
push
add
popa
adc
add
add
add
andb
mov
enter
lcall
movl
add
dec
adc
lret
add
push
add
cmp
shlb
inc
addb
orl
mov
xor
add
inc
add
push
add
enter
dec
mov
add
add
adc
push
or
xchg
or
or
push
or
test
sub
push
sub
rcrb
add
sub
add
shll
test
addl
mov
pop
add
add
and
xchg
adc
add
loopne
jb
sbb
dec
rorb
sbb
sub
mov
orb
mov
mov
add
inc
pop
or
dec
mov
or
add
jp
and
and
inc
add
push
adc
sti
add
xor
pusha
or
or
or
push
roll
mov
or
add
add
add
and
add
orl
add
add
add
xchg
push
shrb
adc
or
add
mov
inc
add
add
and
ret
orb
lret
nop
xchg
adc
inc
add
roll
push
addb
or
mov
xor
sub
les
and
push
lock
and
add
lret
add
adc
test
add
add
test
pop
add
movsb
lret
out
add
and
or
inc
or
add
adc
mov
rolb
inc
add
or
les
add
or
pusha
add
mov
test
cmpb
sbb
and
and
test
push
mov
push
dec
mov
push
sub
push
push
add
lods
inc
adcb
add
add
rclb
test
adc
add
or
dec
inc
add
sub
inc
addb
inc
adc
or
and
xchg
push
ss
adc
lds
sub
inc
daa
inc
and
add
lret
adc
les
sub
push
xorb
rorb
pop
or
and
or
inc
add
add
pop
mov
or
add
push
inc
add
mov
orb
or
push
add
andb
pop
add
dec
ret
pop
add
shlb
in
inc
or
xor
shll
xor
add
inc
pusha
add
or
adc
adc
or
and
inc
dec
and
daa
movsb
mov
sbb
andb
addb
add
sbbb
addb
or
bound
adc
addb
mov
add
adc
mov
test
dec
test
pusha
adcl
orb
xchg
add
rorl
add
mov
or
add
or
jo
inc
or
add
adc
add
add
es
enter
add
push
fwait
in
lret
pusha
add
add
xchg
add
xchg
push
inc
add
add
or
or
sbb
add
sbb
add
xor
add
add
mov
add
xor
mov
ret
sbb
sub
movsl
inc
enter
and
xchg
push
adc
push
pop
add
add
and
add
mov
add
loopne
imul
inc
cvtps2pi
and
sub
add
add
inc
push
orb
push
inc
add
pop
mov
inc
sbbb
pop
add
inc
and
and
add
adc
pop
mov
and
add
add
add
inc
sub
andb
add
and
add
add
add
mov
inc
inc
or
push
add
push
add
or
sbb
inc
add
test
loopne
push
and
inc
adc
xchg
and
add
sbb
push
sbb
add
mov
andb
and
inc
test
inc
add
push
in
aam
add
push
xchg
add
les
add
addb
ret
adc
inc
add
add
add
inc
xor
or
enter
inc
or
inc
add
and
inc
or
pop
or
nop
adc
add
add
add
adc
adc
inc
ret
add
dec
and
and
sub
imul
or
and
adc
or
or
test
sub
sub
cmp
or
adc
sbb
and
and
mov
movsb
adc
add
jo
add
test
and
add
inc
and
bound
mov
sbbb
and
dec
and
xchg
sub
sub
xor
inc
sub
adc
xchg
ret
or
or
sub
and
add
or
sbb
sbb
add
xor
and
and
test
adc
addb
add
bound
cmp
shlb
mov
nop
lea
sbb
add
pop
rclb
sub
or
fs
xor
or
add
add
add
mov
dec
or
add
adcb
add
pop
inc
xor
push
nop
inc
test
and
andb
addb
mov
add
add
test
rorb
out
rorb
cwtl
addl
or
add
dec
sbb
les
or
adc
sub
xchg
cwtl
sbb
adcb
and
push
adc
xor
adc
or
add
pushf
mov
movsb
add
xor
xor
add
out
les
and
nop
or
movsb
test
add
inc
add
loop
add
add
pop
pushf
rorb
push
adc
mov
nop
mov
add
test
xlat
inc
mov
push
adc
dec
adc
test
pusha
push
adc
adc
or
dec
add
and
xor
and
add
bound
pop
add
push
shl
addl
andb
mov
add
add
add
add
add
adc
add
test
inc
or
inc
adc
sbb
add
test
stos
inc
andb
test
and
or
push
or
int
leave
and
adc
adc
pop
nop
mov
pop
inc
add
adc
add
mov
add
or
dec
or
adc
or
add
cmp
les
sbbb
add
es
or
add
add
je
xor
add
add
push
add
or
dec
dec
rolb
add
mov
add
movsb
pushf
mov
add
xor
inc
adc
add
adc
or
add
add
and
pop
sub
pop
add
inc
lds
push
les
cmp
pop
bound
and
addb
cmp
and
andb
test
or
test
shlb
mov
rorb
add
and
inc
add
nop
add
data16
adc
popa
orb
inc
xchg
mov
add
mov
push
and
rolb
jae
push
add
and
pusha
add
add
or
or
xchg
add
mov
add
sbb
inc
add
xor
or
push
movsb
mov
xor
add
inc
mov
adc
push
or
adc
insb
inc
bound
inc
pusha
or
push
and
add
movsb
mov
addb
sbb
inc
jne
add
test
movsb
mov
add
inc
add
inc
adc
add
adc
mov
mov
inc
adc
add
enter
and
cmp
dec
inc
xchg
sbb
cmpb
adc
inc
push
jne
add
pop
adc
and
jl
xor
sbb
add
add
add
dec
add
dec
or
pop
popa
or
add
and
inc
add
inc
add
inc
inc
out
adc
orb
dec
add
subb
add
add
or
add
in
sub
mov
mov
push
add
mov
mov
cmp
jne
mov
cmp
jne
cmp
jne
xor
mov
mov
mov
mov
push
mov
push
xor
mov
test
jne
mov
add
mov
cmp
jne
cmp
jne
mov
add
cmp
jne
mov
mov
mov
mov
mov
lea
push
call
add
mov
lea
push
call
mov
xor
cmp
jne
mov
cmp
je
mov
mov
push
push
call
mov
cmp
je
xor
mov
mov
cmp
je
mov
mov
mov
mov
cmp
je
sub
mov
push
push
call
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
cmp
je
sub
mov
mov
cmp
jne
mov
mov
mov
mov
cmp
jne
mov
test
jne
mov
xor
mov
sub
mov
mov
mov
mov
cmp
je
and
mov
mov
mov
sub
test
je
mov
mov
and
mov
cmp
jne
mov
xor
mov
test
jne
mov
cmp
je
mov
and
mov
mov
mov
and
mov
sub
mov
mov
mov
mov
mov
mov
add
mov
cmp
jne
mov
sub
mov
mov
mov
and
test
jne
mov
mov
cmp
je
mov
mov
and
mov
cmp
je
mov
and
cmp
je
sub
mov
cmp
je
mov
cmp
jne
mov
mov
mov
test
jne
add
cmp
je
cmp
je
mov
xor
cmp
je
mov
cmp
je
mov
mov
cmp
je
cmp
jne
mov
cmp
je
cmp
je
mov
mov
cmp
jne
mov
add
mov
mov
mov
sub
cmp
jne
sub
mov
test
je
mov
lea
mov
mov
mov
mov
xor
mov
cmp
jne
mov
and
cmp
je
test
je
mov
mov
cmp
je
sub
mov
mov
mov
mov
mov
mov
push
mov
push
mov
add
cmp
je
xor
cmp
je
mov
mov
mov
call
mov
sub
mov
mov
sub
test
jne
mov
mov
and
mov
shr
mov
mov
cmp
je
cmp
jne
sub
cmp
jne
mov
cmp
jne
add
cmp
jne
mov
cmp
je
mov
cmp
je
add
mov
mov
cmp
je
mov
mov
cmp
je
sub
mov
test
jne
mov
cmp
je
cmp
jne
mov
xor
cmp
je
mov
cmp
jne
mov
mov
cmp
jne
mov
sub
cmp
jne
xor
cmp
je
cmp
je
mov
mov
xor
mov
mov
mov
mov
push
push
push
call
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
sub
add
test
je
xor
cmp
je
cmp
jne
mov
mov
sub
cmp
je
mov
or
cmp
je
sub
cmp
je
xor
cmp
jne
add
mov
cmp
jne
cmp
jne
cmp
je
xor
mov
mov
mov
mov
mov
mov
pushl
push
pushl
call
mov
addl
or
mov
mov
cmp
jne
mov
cmp
je
mov
mov
call
mov
cmp
jne
sub
mov
mov
mov
sub
mov
mov
cmp
je
xor
mov
mov
mov
cmp
je
or
mov
mov
cmp
je
mov
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
mov
sub
mov
mov
push
mov
push
mov
mov
movl
mov
call
mov
cmp
jne
mov
mov
sub
cmp
je
cmp
jne
mov
cmp
je
test
jne
mov
cmp
jne
sub
mov
mov
test
je
sub
mov
cmp
je
mov
mov
add
test
je
mov
cmp
je
cmp
je
add
mov
cmp
jne
mov
xor
test
jne
mov
cmp
je
mov
add
mov
cmp
jne
add
cmp
jne
xor
mov
mov
mov
mov
call
sub
cmp
je
mov
cmp
je
mov
or
mov
call
mov
cmp
je
mov
mov
xor
mov
mov
cmp
je
mov
xor
mov
mov
add
cmp
jne
xor
mov
mov
mov
mov
push
call
cmp
jne
mov
or
je
or
mov
addl
cmp
je
sub
mov
cmp
jne
mov
sub
mov
cmp
je
mov
mov
mov
sub
cmp
jne
mov
mov
mov
cmp
jne
mov
lea
mov
inc
mov
sub
mov
mov
mov
mov
sub
and
mov
cmp
jne
xor
mov
mov
test
je
mov
sub
mov
xor
test
je
sub
mov
mov
mov
mov
mov
add
mov
cmp
jne
sub
mov
mov
mov
cmp
je
cmp
je
mov
mov
mov
sub
mov
mov
mov
mov
cmp
jne
mov
mov
xor
mov
mov
cmp
jne
mov
cmp
jne
cmp
jne
cmp
je
cmp
je
xor
mov
cmp
jne
sub
cmp
je
sub
mov
mov
mov
cmp
je
add
mov
mov
mov
xor
mov
sub
mov
mov
cmp
jne
cmp
jne
mov
mov
mov
mov
pop
mov
and
cmp
je
add
cmp
jne
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
pop
mov
pop
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
add
mov
mov
mov
push
mov
or
mov
mov
push
xor
mov
sub
mov
cmp
je
mov
cmp
je
mov
sub
mov
mov
mov
mov
cmp
je
cmp
jne
test
jne
mov
mov
rdtsc
mov
mov
mov
mov
sub
cmp
jne
mov
mov
cmp
jne
mov
xor
mov
mov
mov
add
mov
mov
cmp
jne
mov
add
mov
cmp
je
mov
xor
cmp
jne
mov
mov
mov
add
test
je
xor
mov
mov
cmp
jne
mov
mov
cmp
jne
xor
cmp
je
mov
cmp
jne
add
mov
mov
test
jne
cmp
je
or
mov
cmp
jne
mov
add
cmp
jne
xor
cmp
jne
mov
mov
mov
mov
cmp
jne
xor
cmp
jne
mov
mov
mov
sub
mov
mov
add
mov
cmp
je
mov
add
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
rdtsc
cmp
jne
add
mov
mov
mov
mov
mov
cmp
jne
and
mov
test
jne
sub
mov
mov
cmp
jne
mov
mov
add
mov
cmp
jne
cmp
jne
mov
sub
cmp
je
mov
xor
mov
cmp
je
mov
mov
cmp
jne
mov
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
add
mov
mov
mov
mov
or
mov
mov
pop
mov
cmp
je
mov
or
mov
pop
mov
mov
mov
mov
pop
sub
mov
mov
test
je
sub
mov
mov
cmp
je
xor
mov
mov
cmp
je
sub
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
mov
push
mov
test
je
mov
test
jne
add
mov
mov
push
mov
or
mov
mov
mov
mov
mov
add
mov
cmp
je
mov
mov
cmp
jne
xor
test
jne
mov
mov
cmp
je
mov
cmp
jne
mov
add
test
je
mov
xor
test
je
cmp
je
mov
xor
mov
mov
cmp
je
mov
sub
mov
test
je
mov
mov
add
mov
mov
cmp
jne
sub
cmp
je
xor
mov
mov
mov
mov
mov
cmp
jne
or
mov
test
jne
test
jne
mov
mov
mov
mov
mov
mov
cmp
je
test
jne
mov
add
cmp
je
add
mov
mov
cmp
jne
mov
mov
cmp
je
sub
mov
decl
test
jne
mov
xorl
mov
mov
add
mov
negl
xor
mov
mov
mov
add
mov
sub
mov
mov
sub
mov
jmp
mov
xor
cmp
jne
test
jne
mov
sub
mov
cmp
jne
add
mov
mov
cmp
jne
mov
pop
and
cmp
je
mov
pop
mov
pop
mov
sub
test
jne
and
cmp
jne
cmp
jne
mov
mov
mov
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
movl
mov
mov
mov
cmpl
je
mov
mov
add
mov
mov
add
mov
jmp
mov
push
lea
push
call
lea
push
call
mov
mov
push
lea
push
call
lea
push
mov
push
call
mov
movl
movl
movl
mov
add
push
mov
add
push
mov
push
mov
push
call
mov
mov
mov
mov
mov
mov
cmpl
je
movl
cmpl
jge
cmpl
jle
jmp
jmp
mov
mov
mov
movl
jmp
mov
add
mov
mov
mov
cmp
jae
mov
add
mov
add
mov
mov
jmp
mov
mov
add
mov
movl
mov
mov
lea
mov
mov
lea
mov
sub
mov
jmp
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
cmpl
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
je
mov
movzwl
mov
movzwl
cmp
jle
mov
mov
mov
cmpl
je
mov
test
je
mov
mov
mov
movsbl
cmp
jl
movsbl
cmp
jg
movsbl
add
mov
mov
mov
mov
movsbl
cmp
jl
movsbl
cmp
jg
movsbl
add
mov
movsbl
movsbl
cmp
je
jmp
movsbl
test
jne
mov
mov
jmp
movl
mov
mov
lea
mov
mov
mov
lea
mov
jmp
mov
mov
mov
mov
cmp
jne
xor
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
cmpl
je
cmpl
je
cmpl
jbe
mov
movsbl
test
je
mov
mov
mov
mov
add
mov
mov
cmpl
je
mov
cmpl
je
mov
mov
mov
cmp
jae
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
ja
mov
mov
cmp
jb
mov
mov
mov
add
cmp
jae
mov
mov
sub
mov
mov
add
mov
jmp
jmp
movl
jmp
mov
add
mov
mov
mov
cmp
jae
mov
mov
mov
mov
mov
add
mov
mov
movsbl
mov
movsbl
cmp
jne
mov
movsbl
test
jne
mov
mov
movzwl
mov
mov
add
mov
jmp
movl
mov
mov
lea
mov
mov
mov
lea
mov
jmp
jmp
xor
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
cmpl
je
cmpl
je
mov
test
je
mov
movsbl
sub
mov
movb
mov
mov
mov
movzbl
movzbl
add
mov
movzbl
movzbl
xor
mov
mov
movzbl
movzbl
sub
mov
mov
movsbl
mov
movsbl
lea
mov
mov
movzbl
shl
mov
mov
movsbl
sub
mov
mov
mov
movsbl
test
jne
jmp
mov
add
mov
mov
add
mov
jmp
mov
sub
jmp
xor
mov
pop
ret
add
cmpsl
push
sbb
in
lods
lods
mov
mov
mov
js
in
inc
ja
and
mov
dec
mov
imul
arpl
cmpsl
mov
cmp
xor
push
sub
xchg
mov
mov
out
adc
dec
ja
ds
ror
scas
std
or
xchg
pop
push
cmp
shlb
pop
pusha
pop
pop
and
int3
sbb
jecxz
in
lds
mov
inc
scas
mov
dec
xor
xchg
pop
jmp
add
pushf
inc
jbe
popa
shl
push
sbb
mov
jo
xor
divb
inc
xchg
ret
adc
or
fsubrs
enter
cmc
inc
scas
mov
xchg
mov
test
test
shll
sub
daa
inc
shrb
dec
lods
stos
out
loope
icebp
nop
push
inc
push
inc
pop
xchg
leave
lock
iret
pop
int
and
mov
rorb
mov
mov
sbb
xchg
fisttpl
int3
repz
sarl
ret
mov
or
outsb
in
outsb
dec
cmpsl
aad
andb
inc
test
push
push
js
outsl
scas
inc
cmpsb
jge
lcall
mov
and
xchg
mov
and
test
and
mov
mov
xchg
lds
rorb
and
fistpll
or
inc
aas
mov
cmpsl
in
test
daa
loopne
mov
pop
lods
jnp
daa
sbbl
cmp
nop
test
jl
into
int
addr16
cmp
in
ror
adcb
fstps
xlat
xchg
cwtl
inc
scas
cmpb
mov
mov
fs
push
inc
out
inc
sub
shll
xchg
imul
aad
cmp
xchg
ret
mov
add
cmpsb
pop
mov
icebp
add
dec
insl
ds
lretw
lock
push
popa
xor
popa
inc
or
lds
or
mov
cmpsb
das
pop
fdivrs
in
pop
xchg
cmp
add
test
sarl
inc
ret
and
dec
jno
pusha
test
in
fs
or
mov
bound
shrb
dec
mov
out
push
and
xor
clc
add
pop
or
idivb
sbb
inc
movsl
mov
je
xchg
lods
pop
call
mov
int3
je
dec
divb
and
rcrl
jb
shlb
popf
xchg
repnz
push
movsl
sub
mov
pop
mov
call
ss
mov
push
aam
push
pop
int3
add
call
jecxz
push
int3
fsubs
cmp
imul
xor
xchg
inc
jg
xchg
and
or
sub
fdivrl
cmp
jne
jg
cmpl
sbb
sar
loope
ds
mov
loope
clc
cmp
pop
and
in
in
cmpl
pop
sub
fwait
push
pop
inc
sbb
xchg
add
enter
push
cmpsb
mov
test
xor
in
xchg
enter
adc
inc
mov
in
out
inc
out
sbb
pushf
sub
pop
mov
jp
push
imul
inc
add
push
pop
mov
cwtl
je
test
int3
adc
pop
xchg
mov
inc
shrb
jo
cmp
ret
jno
mov
pop
ds
xchg
pusha
push
inc
fs
cmpsb
dec
sbb
lods
mov
filds
rol
push
xchg
xorb
lods
rcrl
and
lret
add
xchg
jno
aam
cmp
dec
mov
lcall
jl
jmp
enter
jl
testl
in
lods
mov
pop
in
adc
dec
dec
mov
icebp
lock
add
lahf
mov
hlt
cmp
jns
int3
loop
adc
cmpsb
xchg
push
in
sbb
sub
ja
adc
fwait
mov
int3
adc
xchg
int3
dec
mov
add
call
xor
mov
or
cmpsb
dec
or
popa
mov
fbstp
mov
pop
cmpsb
pop
xchg
in
pop
arpl
repnz
sbb
pop
pop
and
cmpsb
aas
nop
iret
es
cmp
inc
inc
sbb
insl
adc
js
dec
mov
lea
mov
cmpsl
outsl
and
scas
or
mov
pop
jns
fildl
adc
push
imul
pop
test
ds
push
lret
cmp
dec
iret
xchg
js
movsl
mov
push
jmp
cs
fsts
mov
dec
and
jo
mov
inc
paddsw
mov
nop
stc
mov
jecxz
int3
push
lock
sti
mov
fdivrs
ds
in
aaa
mov
jle
std
add
mov
stos
insl
or
data16
inc
repnz
in
repnz
adc
inc
dec
or
movsl
push
inc
ficompl
in
popa
imul
inc
mov
push
and
push
outsb
mov
pop
pop
mov
test
and
scas
or
inc
int
add
vpcmpgtb
lcall
fldcw
pop
jb
sbb
fdivl
cmp
out
xor
jecxz
pop
loop
add
cmpsl
mov
dec
aaa
mov
add
movb
sbb
movb
lods
aaa
jp
iret
or
or
mov
loop
cmc
inc
fdivl
cmp
pusha
js
add
fs
iret
repz
add
fsts
je
adc
xchg
pop
movsb
inc
xlat
dec
mov
test
int3
dec
mov
movsb
arpl
popf
iret
loope
xchg
xor
mov
xor
inc
xor
in
out
push
movsl
pop
scas
cld
mov
cld
in
jbe
xchg
xlat
push
movsb
mov
pop
pop
jns
mov
addr16
xor
inc
in
popl
pop
jmp
dec
sbb
pop
jnp
popf
adc
dec
call
xor
jae
fadds
cmpsb
shl
jl
mov
mov
sub
jb
movsl
adc
sbb
sub
xchg
cmp
in
mov
testl
scas
push
mov
lea
pop
cmp
movsb
out
loope
sbb
sub
lock
or
test
push
pop
sub
int3
sub
jo
ficoms
test
jecxz
out
ret
xchg
repnz
xchg
int3
or
pop
dec
push
cmp
clc
in
lock
sub
insb
aam
cmpsb
lret
xor
filds
adc
xchg
in
mov
aad
les
clc
outsb
sub
les
jmp
test
pop
out
inc
mov
sub
das
lea
mov
iret
sub
mov
mov
dec
in
add
leave
push
fmull
cmp
push
push
icebp
jns
movsl
jbe
xchg
and
outsb
cmpsl
push
cmc
mov
mov
xor
inc
cmp
loopne
dec
int3
shr
rcll
jne
dec
xchg
pop
mov
aaa
inc
adc
jle
les
mov
jp
lahf
mov
or
mov
std
fildll
sbb
insb
jmp
dec
je
ret
js
pop
ret
cmpb
out
jae
jne
mov
repz
imul
dec
mov
adc
fcomps
xchg
cmp
mov
sbb
pop
ret
mov
dec
add
push
xorb
fs
pop
dec
pop
xchg
dec
push
dec
inc
pop
pop
shlb
cmp
imul
mov
repz
sub
dec
movsl
leave
pop
aad
or
pop
int3
and
repnz
xlat
lods
cli
lret
lods
rorl
fs
or
pop
adc
pop
xor
mov
repz
in
insb
int3
leave
fs
dec
pop
cwtl
mov
jb
pop
dec
insb
jne
jnp
fwait
sub
push
add
push
lods
jne
mov
add
add
cmc
jno
pop
mov
stc
push
je
hlt
cmp
sbb
mov
mov
pop
sbb
sbbb
pop
aaa
cmpb
fldl
push
test
fcmovu
pusha
jecxz
pop
mov
xchg
mov
sbbb
jns
inc
jbe
push
inc
int3
dec
or
popf
testb
mov
ljmp
in
fdivrs
jbe
mov
adc
mov
and
push
test
gs
out
dec
fs
cmp
dec
lock
dec
scas
mov
xchg
pushf
hlt
enter
mov
xlat
aam
mov
add
dec
xchg
pusha
sub
dec
jo
or
mov
imul
call
mov
nop
in
pop
stos
pop
js
lret
dec
cmp
sbb
imul
inc
adc
pop
jnp
les
and
push
pusha
cmpsb
sbb
mov
ds
dec
pop
out
loope
or
popf
mov
inc
sarb
add
pop
lcall
push
les
nop
jbe
lahf
mov
mov
shr
mov
outsl
sub
push
fcmovb
dec
mov
fcoms
aam
enter
int3
out
aad
lret
mov
inc
jmp
mov
xlat
sbb
outsl
pop
mov
enter
pop
fnstenv
mov
cmp
or
cmpsb
dec
fsubr
daa
ret
shll
mov
mov
jmp
test
inc
cli
outsl
jmp
mulps
inc
fisubl
int3
lea
xchg
push
scas
xor
testl
mov
adc
xchg
mov
movsl
mov
pop
fs
hlt
test
mov
mov
cs
jnp
lahf
enter
push
pop
pop
and
mov
mov
xchg
fadds
xchg
cmp
icebp
adc
inc
xchg
dec
xchg
mov
sbb
movsb
ficomps
mov
rcrb
mov
sub
invd
pop
mov
add
push
aad
loope
out
movsl
jg
sbb
mov
add
dec
out
popl
test
mov
sub
mov
push
xchg
sbb
lock
mov
xor
scas
cli
inc
fnstenv
push
pop
loop
xchg
push
mov
movsl
jns
ret
cmpsb
nop
cwtl
cmpsb
cmpsb
mov
hlt
into
add
sbb
mov
push
fs
mov
push
outsl
add
mov
or
inc
dec
movsb
add
add
cmp
insb
mov
movsb
shl
hlt
fucomip
int3
rorb
dec
outsb
mov
mov
or
aam
inc
mov
inc
and
cmp
lcall
int3
sbb
js
mov
mov
mov
dec
xlat
mov
cli
fwait
xor
mov
ljmp
mov
push
leave
push
je
pop
push
mov
sbb
cs
rcrb
idivl
jge
cmp
inc
shl
arpl
adc
insb
dec
dec
out
adc
dec
fcomps
pop
movl
mov
fbld
xchg
test
mov
jg
jb
xor
mov
xor
xor
mov
jbe
repnz
in
pop
lods
nop
sbb
inc
mov
push
push
pop
inc
jecxz
dec
jns
sub
push
pop
sbb
imul
add
int3
int
movsb
inc
scas
bound
and
add
mov
xor
mov
shl
aam
jmp
lahf
sti
cmp
out
insl
cli
add
out
and
mov
shll
mov
mov
lock
sub
sarl
dec
pop
sbb
notl
jne
aaa
inc
pop
ss
inc
jnp
or
cmpl
inc
out
es
int
inc
outsl
sbb
sub
andl
xor
in
fxch
outsb
sub
fcoms
and
cmp
cmp
push
ror
jbe
es
imul
into
inc
mov
and
dec
and
xor
popa
mov
and
pop
mov
add
pop
xchg
int3
test
push
xchg
mov
inc
ljmp
int3
out
lcall
mov
or
jmp
test
loope
sbb
shlb
jbe
mov
aam
es
pushf
adc
mov
dec
or
inc
mov
test
mov
dec
pop
add
dec
icebp
repnz
xor
das
sbb
add
xchg
js
imul
arpl
cmpsb
add
jp
sub
arpl
imul
push
ret
nop
cld
stc
ljmp
push
ss
insb
das
xor
ss
ja
in
out
mov
rcrb
sub
roll
inc
test
xchg
dec
pop
mov
cmp
jno
addl
scas
pop
in
mov
movsb
inc
mov
jmp
js
stos
shr
loop
leave
sub
js
lods
add
pop
insb
cwtl
rclb
int3
aaa
pop
inc
jns
adc
imul
sti
cmp
enter
adc
ret
iret
pusha
scas
in
lret
pop
mov
in
xchg
lret
adc
and
shll
hlt
lods
andl
sub
mov
xlat
pop
inc
pop
nop
inc
mov
scas
sub
ljmp
add
or
add
inc
sub
in
aaa
pop
hlt
call
or
ljmp
mov
mulb
sarl
gs
lods
mov
int3
and
jbe
cwtl
sbb
mov
inc
cld
sbb
xchg
lods
push
outsb
or
jb
test
or
pop
gs
jbe
jns
xor
mov
or
or
jle
mov
dec
scas
or
es
mov
ret
bound
and
and
jecxz
adc
js
dec
inc
adc
adc
or
push
rcrl
mov
aad
lret
test
mov
sub
pop
dec
popf
add
jb
ret
insb
mov
repz
mov
rcrb
inc
jl
jae
out
jg
adc
push
roll
inc
inc
icebp
pop
fldenv
inc
cmp
arpl
dec
dec
cmpb
scas
sbb
aaa
icebp
outsl
pushf
cmp
push
popa
shll
hlt
sub
mov
cmpsl
cmp
pop
push
into
adcl
stos
pop
in
inc
sbb
xor
leave
scas
jl
xchg
in
mov
loop
cmp
inc
inc
lock
push
fisubs
push
fs
lahf
mov
inc
xor
mov
sbb
aam
adc
dec
xor
mov
push
sub
sub
hlt
sub
xchg
push
adc
mov
popa
ja
and
roll
inc
mov
mov
jns
fstpl
xchg
xor
es
push
adc
pop
cwtl
jbe
mov
sbb
mov
dec
aad
sbb
mov
sti
mov
inc
fsts
pop
popf
xchg
inc
lahf
repz
out
mov
dec
testl
shl
nop
push
movsl
push
ss
or
les
cmpsb
test
jb
ret
dec
dec
stos
mulb
push
dec
cltd
int
mov
cs
pop
pop
cmc
lret
les
out
int3
into
mov
xor
xor
cs
cmp
in
sbb
repz
adc
or
jmp
inc
pop
dec
mov
add
push
sub
dec
outsb
dec
cmp
jno,pn
mov
loope
mov
sub
push
add
or
mov
pushf
cmpsb
dec
adc
xor
cmp
fimull
clc
inc
mov
mull
pop
clc
fmuls
cmp
push
xor
sahf
push
xor
clc
int3
pop
fucomi
icebp
aam
cld
cmp
leave
cmpsl
lods
ss
sbbb
out
mov
lcall
push
popf
jmp
int3
out
pop
jl
stc
sahf
or
in
sub
fidivrs
cmpsb
jnp
testl
inc
fildl
out
out
adc
roll
das
subl
dec
mov
push
mov
int3
push
mov
adc
fnsave
popa
push
subb
lret
fisubl
aaa
cmpsb
and
inc
rorb
pop
inc
ret
jae
mov
xor
sbb
or
pusha
inc
aam
fs
pop
pop
mov
cmp
fdivl
loop
xchg
scas
push
pop
les
jp
inc
int3
aam
mov
std
mov
mov
inc
xor
push
loop
loopne
sub
dec
jb
inc
or
movsl
fs
push
adc
mov
pop
pop
pop
xchg
iret
int3
mov
xor
jge
sub
adc
xlat
cmp
out
rcrb
sti
push
enter
out
fsubs
xor
int3
push
or
stc
pop
out
cmp
lea
cmp
cmpsl
loopne
rcl
rcll
loop
outsb
testl
mov
arpl
ret
fmul
pop
pop
int3
mov
and
cmpsb
xchg
lods
aad
adc
daa
sar
mov
mov
movsb
sbb
push
fcomps
dec
pushf
rcr
pop
cmpsb
and
mov
sub
mov
lds
cmp
cli
imulb
mov
mov
adc
stc
cld
mov
cmp
mov
ja
pop
test
int3
jg
jae
lock
repnz
test
sbb
push
sbb
stc
ret
xor
xchg
ret
pop
rolb
sub
rcrb
lods
pop
cmpsb
mov
push
lret
testl
sbb
pop
push
inc
ds
loop
shlb
into
jmp
inc
mov
leave
inc
aad
lea
mov
fs
int3
xchg
and
pop
xlat
sub
mov
sbb
fistps
push
inc
int3
mov
add
mov
sbb
fwait
pop
jo
std
pop
pop
test
insl
and
jno
inc
pop
or
shlb
in
fwait
jbe
add
out
jno
inc
and
fwait
cmc
int3
daa
repz
pop
inc
xchg
add
add
cmp
inc
mov
or
add
addb
or
popa
adc
add
shlb
xor
or
popa
add
adc
push
or
add
add
adc
add
addb
inc
mov
adc
add
add
add
adc
add
test
rolb
push
adcb
adcb
and
inc
and
or
add
and
roll
xchg
and
or
and
add
les
add
adc
addb
add
and
add
inc
or
push
adc
stos
add
nop
and
sbb
dec
add
pop
xchg
and
dec
add
add
test
inc
add
and
xor
add
or
adc
adcb
inc
addb
inc
adc
mov
or
add
add
xchg
add
push
add
or
push
add
xor
add
inc
inc
or
add
add
mov
adc
inc
sub
add
add
and
dec
or
add
xor
aaa
and
adcb
pop
jp
and
and
add
nop
sbb
or
sub
add
add
add
mov
add
rolb
and
add
inc
add
add
cmp
and
addl
or
or
test
inc
sub
inc
and
add
add
add
addl
and
sbb
rcl
add
add
add
or
inc
addb
andl
or
push
pusha
mov
add
or
add
inc
push
add
add
adc
mov
inc
test
enter
mov
andb
and
add
or
roll
sbb
xor
adc
xor
add
and
adc
inc
add
add
inc
push
add
adc
sub
pusha
repnz
inc
inc
or
add
sub
adcb
add
and
and
xor
add
andb
add
xor
pusha
mov
or
test
add
or
push
or
add
add
mov
flds
xchg
xchg
mov
inc
addl
and
popa
mov
add
add
test
or
add
xor
dec
xor
or
lds
add
inc
add
add
add
add
inc
add
std
add
inc
mov
orb
addb
add
add
inc
push
and
andb
test
sbb
mov
add
or
and
mov
rolb
sub
add
push
inc
inc
inc
popa
add
pusha
xor
inc
or
add
add
add
pusha
and
add
pop
andb
add
or
push
and
inc
add
add
addb
or
addb
and
adc
add
inc
push
and
add
testb
cmp
mov
sub
sub
add
mov
add
add
test
add
shrb
or
addb
and
test
add
inc
or
cmp
xchg
or
and
add
add
mov
js
add
add
and
dec
inc
or
or
and
addl
inc
inc
rolb
es
add
mov
pop
xor
or
inc
fiadds
inc
add
push
inc
and
add
or
add
addb
pusha
inc
adc
add
addb
xchg
add
xchg
adc
mov
adc
add
add
mov
adc
add
add
add
add
xor
add
or
and
ret
inc
popa
add
push
add
add
mov
xor
adc
dec
dec
xor
add
and
inc
or
leave
add
and
or
adc
sbbb
stos
pusha
movsl
inc
adc
add
jecxz
and
addb
add
push
or
add
dec
adc
enter
and
adc
add
add
orb
add
adc
add
add
pop
dec
or
add
push
cwtl
cwtl
add
inc
inc
les
push
or
push
and
inc
push
dec
or
or
adc
add
add
push
add
dec
addb
inc
add
add
and
and
and
add
push
add
add
adc
add
sub
xor
add
or
add
xor
and
adc
inc
inc
inc
pusha
inc
and
pop
add
adc
add
adcb
push
and
and
sub
or
inc
add
adc
add
adc
dec
sbbb
adc
add
inc
add
add
mov
pop
xor
add
adc
sbb
insb
add
adcb
and
add
adc
adc
push
or
add
add
add
lods
add
and
add
bound
sbb
or
add
or
add
roll
inc
add
inc
addb
or
xor
inc
xor
sub
add
and
add
lock
mov
push
orl
add
xor
and
add
add
add
push
adc
add
adc
or
dec
adc
inc
jns
jns
add
adcb
adc
and
add
or
or
xchg
or
and
xor
add
pusha
sbb
addb
add
push
and
add
sbb
inc
add
adcb
rorb
sub
add
sub
add
inc
adc
add
pusha
mov
inc
add
add
andb
add
inc
push
sbb
xchg
add
adc
add
sbb
and
inc
add
adc
add
add
add
adc
mov
movsb
test
addb
or
add
add
and
inc
add
subb
or
adcb
adc
add
add
addb
pusha
addl
add
add
sub
add
adcb
add
add
add
inc
add
add
add
and
add
add
inc
add
xor
dec
and
add
add
dec
ret
xchg
inc
adc
add
add
or
inc
adc
and
and
addb
or
push
add
adc
or
add
mov
test
add
mov
add
and
add
inc
orb
or
add
add
add
add
adc
add
nop
mov
lret
add
add
in
sub
mov
add
je
and
add
push
add
sbb
addl
test
add
add
add
add
adc
shll
nop
adc
add
sub
pop
add
inc
add
add
adc
add
enter
addb
inc
addl
push
mov
adcb
lea
pusha
mov
inc
or
add
add
or
or
inc
rolb
and
xor
addb
and
cmp
inc
add
or
addb
add
and
and
inc
or
or
dec
and
adc
and
adc
and
adc
cmovl
add
add
add
push
and
sbb
add
add
and
mov
push
add
inc
adc
or
add
push
push
mov
or
add
add
and
test
add
test
add
and
add
add
xchg
add
add
push
and
sbb
sbb
add
or
sub
and
add
and
mov
push
add
nop
inc
add
pusha
add
add
inc
pop
add
and
mov
or
push
les
dec
or
dec
inc
add
add
add
and
add
adc
ret
mov
add
addb
add
mov
inc
addl
add
pop
pusha
add
add
add
sub
add
add
add
add
add
add
or
add
add
inc
inc
push
or
xor
movsl
jo
add
and
add
rolb
dec
sub
add
inc
add
adc
inc
add
sub
inc
add
add
or
or
sub
add
add
adc
add
cmp
adc
addl
add
inc
inc
cltd
add
adcb
add
add
or
add
add
sub
mov
add
and
mov
inc
adc
xchg
sub
jns
dec
sub
addl
ret
add
addb
orb
and
xorb
adc
add
or
inc
adc
inc
movsb
inc
aaa
and
adc
dec
add
add
sbb
inc
add
adcl
or
sub
add
add
or
add
add
add
and
xchg
inc
inc
or
pusha
xchg
add
or
add
add
inc
inc
adc
lret
cwtl
adc
inc
adc
rolb
rcll
or
adc
adc
xorb
shlb
pop
add
pusha
add
and
add
mov
push
cwtl
mov
fadds
add
add
nop
addb
add
and
adc
add
inc
pop
inc
add
add
jl
addl
adc
pop
add
dec
add
or
add
sub
inc
sub
add
les
add
add
or
add
bound
or
adc
roll
sub
add
add
add
add
and
orb
nop
add
add
adc
addb
inc
add
add
inc
or
pusha
mov
addb
add
pop
add
adc
add
add
loopne
jo
add
sbb
popa
dec
enter
or
adc
adc
xchg
add
and
inc
add
add
mov
add
add
and
or
add
adc
and
add
add
add
xchg
add
add
add
mov
inc
add
add
add
add
add
add
adc
inc
adc
inc
inc
add
or
add
inc
add
adc
rol
inc
mov
add
add
add
dec
orb
inc
sbbb
add
mov
rolb
add
add
sub
sub
add
inc
xchg
add
ret
add
add
and
test
test
adc
add
and
ret
dec
xor
adc
sub
add
or
xor
add
add
and
add
roll
and
add
add
or
add
or
and
add
inc
cwtl
add
inc
adc
add
addb
inc
push
adc
call
inc
or
enter
and
inc
add
and
add
and
adc
mov
adc
add
adc
add
xchg
add
rorb
add
add
cmpsb
jae
and
add
mov
xor
loop
xor
add
adc
jecxz
add
and
add
add
add
add
add
or
subb
adc
or
add
add
add
add
inc
jno
add
adc
add
xor
add
add
add
or
add
and
add
scas
adcb
push
add
add
inc
push
inc
adc
add
les
and
add
add
add
adc
add
and
inc
add
nop
popa
add
fs
or
rclb
add
bound
test
dec
or
sbb
or
add
or
push
test
add
add
add
or
push
dec
adc
rorb
adcb
add
add
rolb
push
or
add
add
add
add
add
mov
xor
adc
add
inc
add
add
cmp
or
addl
add
adc
add
add
inc
dec
add
inc
adc
and
inc
adc
or
add
adc
and
inc
add
or
sbb
adc
dec
inc
adc
adc
inc
add
inc
add
or
add
loopne
adc
add
cwtl
mov
inc
and
add
add
add
pusha
adc
pusha
add
add
rolb
and
sub
add
add
and
test
add
pusha
add
sbb
test
addb
add
inc
nop
add
or
add
adc
addb
add
inc
add
push
mov
rolb
xor
add
add
inc
andb
or
cmpsl
and
rolb
add
add
add
add
inc
add
sub
add
add
rorb
fwait
push
or
add
add
and
inc
add
push
add
add
add
mov
adc
push
add
add
add
add
add
push
les
xchg
add
pusha
inc
add
xor
mov
xor
add
add
add
add
or
or
add
rolb
or
or
inc
add
push
inc
add
push
mov
add
adc
add
or
dec
adc
push
and
and
add
adc
add
push
jo
or
add
add
add
and
add
addb
inc
and
adcb
addb
add
add
inc
add
xchg
and
or
sbb
add
add
add
and
and
dec
sbbb
add
add
adc
test
dec
add
or
jo
mov
and
or
or
mov
ret
add
adc
add
add
add
sub
inc
mov
add
pusha
or
push
or
add
les
add
addb
add
sbb
mov
add
adc
inc
add
inc
add
inc
add
add
inc
add
and
and
add
add
add
adc
inc
inc
add
add
flds
inc
add
add
add
pusha
add
add
xor
or
mov
addb
aas
add
sub
add
sbb
or
add
add
adc
add
add
dec
inc
rolb
dec
add
dec
inc
add
mov
mov
add
mov
pop
and
push
and
test
add
sub
test
add
addb
pop
add
and
pusha
adc
rolb
subb
push
pop
sub
add
adc
inc
add
adcb
add
or
cmp
aam
add
mov
add
fisubl
add
inc
inc
inc
test
inc
push
inc
adc
add
mov
add
add
nop
andl
add
dec
sbb
add
stos
aam
add
aam
add
aad
add
aad
add
add
push
add
fcom
add
lock
add
rolb
add
add
roll
add
add
jbe
add
jbe
add
adc
add
add
mov
add
movsb
aad
add
roll
add
add
lcall
add
aam
add
add
mov
add
dec
add
enter
mov
add
lock
add
aad
add
aad
add
roll
add
roll
add
add
dec
aam
add
roll
add
add
mov
aam
add
add
or
add
and
add
aam
add
add
mov
add
sub
add
call
roll
add
add
loopne
add
jle
add
loopne
add
rolb
add
roll
add
rolb
add
aad
add
add
mov
add
or
add
add
add
sbb
add
xlat
add
or
add
add
add
flds
add
fadds
add
fadds
add
xlat
add
cwtl
xlat
add
jp
add
fadds
add
fadds
add
add
and
add
out
xlat
add
lock
add
fadds
add
xlat
add
dec
fadds
add
flds
add
fadds
add
fadds
add
flds
add
xlat
add
outsb
xlat
add
cld
xlat
add
sub
add
dec
xlat
add
jbe
add
mov
add
add
flds
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
add
scas
fiaddl
add
flds
add
add
xchg
add
call
fiaddl
add
flds
add
add
push
fiaddl
add
add
dec
fiaddl
add
add
mov
flds
add
fiaddl
add
flds
add
add
int3
fiaddl
add
fiaddl
add
fiaddl
add
add
add
fildl
add
add
add
adc
sub
add
sbb
inc
add
add
add
inc
add
and
add
add
loopne
add
add
push
push
inc
push
xor
cs
insb
add
add
push
imul
add
add
push
gs
imul
jae
add
add
je
insb
addr16
je
insl
dec
outsb
je
add
push
gs
jb
arpl
jae
gs
jne
je
popa
jns
jne
add
add
je
insb
imul
je
add
inc
insb
outsl
jae
inc
insb
imul
add
add
push
gs
jne
jae
jb
add
push
outsb
fs
gs
popa
addr16
add
add
inc
gs
gs
popa
addr16
add
add
fs
outsb
jne
add
add
data16
je
arpl
add
push
arpl
outsb
push
outsl
inc
insb
imul
add
je
insb
addr16
je
insl
add
add
push
jb
outsb
jae
popa
je
dec
gs
popa
add
add
inc
push
outsb
jne
popa
imul
add
add
je
jns
inc
outsl
insb
outsl
jb
jb
jae
add
add
inc
gs
outsb
jne
add
inc
jb
ja
gs
push
add
add
je
jne
dec
outsb
jne
add
add
gs
je
inc
imul
jb
insl
push
add
add
dec
jae
insb
imul
inc
outsl
jb
popa
je
jbe
imul
add
inc
push
imul
outsl
insl
push
outsl
imul
push
gs
outsb
jne
add
push
push
outsb
outsl
ja
add
add
arpl
outsb
jne
je
insl
add
add
insb
insb
push
imul
outsl
arpl
add
dec
jae
imul
jae
popa
addr16
add
add
push
imul
popa
jae
inc
js
add
add
dec
imul
add
add
jae
popa
addr16
gs
add
push
jb
arpl
outsl
jo
jo
outsb
jne
js
add
add
je
gs
je
jo
imul
add
inc
push
js
inc
add
add
arpl
popa
imul
outsb
add
add
push
gs
insb
addr16
je
insl
push
gs
push
add
add
gs
je
push
imul
push
add
add
je
imul
js
push
add
add
inc
gs
jb
arpl
jae
gs
jne
je
popa
jns
jne
add
add
jae
push
jne
je
gs
popa
add
add
je
insb
addr16
je
insb
dec
inc
add
add
inc
gs
jb
jns
imul
add
fs
je
imul
inc
push
insb
addr16
jne
je
outsb
add
add
dec
jae
push
add
inc
gs
imul
outsl
arpl
add
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
add
popa
bound
outsb
jne
je
insl
add
add
dec
outsb
jbe
insb
imul
je
add
add
jo
imul
imul
inc
imul
js
popa
jb
insl
push
add
add
fs
je
push
imul
add
inc
gs
jns
inc
outsl
insb
outsl
jb
add
push
jns
je
insl
push
popa
jb
insl
gs
jb
dec
outsb
outsw
push
add
add
popa
jb
gs
push
add
add
outsb
inc
insb
imul
add
add
je
outsl
jns
outsb
jne
add
inc
imul
dec
gs
popa
addr16
add
add
dec
outsl
popa
fs
arpl
push
add
add
je
imul
arpl
add
je
imul
outsb
addr16
add
add
inc
gs
insb
imul
inc
popa
je
add
add
dec
gs
popa
addr16
outsl
js
add
add
fs
imul
add
fs
arpl
insb
gs
je
jb
push
add
add
popa
bound
imul
add
push
gs
outsl
arpl
add
add
push
gs
imul
js
push
add
add
dec
outsl
popa
fs
jne
jae
jb
add
add
je
imul
outsb
addr16
add
inc
inc
push
inc
push
dec
xor
cs
insb
add
add
push
gs
jo
outsb
dec
gs
js
add
add
addr16
insb
outsl
jae
dec
gs
add
push
gs
jne
jb
push
popa
insb
jne
inc
js
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
add
inc
insb
outsl
bound
push
imul
insb
jae
jb
jo
push
add
add
insb
jae
jb
outsb
push
add
add
insb
jae
jb
insl
jo
add
add
inc
insb
outsl
bound
inc
jb
add
add
inc
insb
outsl
bound
push
gs
insb
insb
outsl
arpl
add
inc
gs
jns
je
insl
dec
outsb
outsw
add
add
je
je
jb
jne
dec
outsb
outsw
inc
add
add
je
jb
arpl
fs
jae
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
dec
outsl
arpl
inc
insb
insb
outsl
arpl
add
add
imul
insb
gs
je
imul
inc
insb
outsl
bound
push
outsb
insb
outsl
arpl
add
add
imul
insb
gs
bound
arpl
add
outsl
bound
inc
outsl
insl
jo
arpl
add
imul
inc
jb
je
arpl
push
arpl
outsb
add
add
je
jb
imul
push
add
add
inc
jb
popa
je
inc
jbe
outsb
je
add
add
dec
jae
popa
insb
imul
add
add
jb
jo
outsb
push
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
inc
insb
outsl
bound
dec
outsl
arpl
add
add
popa
insb
inc
jb
add
add
je
jb
imul
imul
insb
jae
jb
popa
je
add
add
push
gs
jbe
outsb
je
add
add
outsl
bound
inc
insb
insb
outsl
arpl
add
inc
jb
popa
je
push
push
add
add
push
gs
je
jbe
outsb
je
add
add
outsl
jae
dec
popa
outsb
fs
add
add
popa
insb
push
gs
insb
insb
outsl
arpl
add
push
inc
push
push
cs
insb
add
add
pop
inc
js
push
push
js
gs
imul
je
jne
jo
jb
add
pop
pop
arpl
inc
imul
insl
gs
insl
outsl
jbe
add
add
gs
je
add
add
jo
pop
insw
outsl
fs
add
pop
pop
inc
js
inc
jb
insl
gs
popa
outsb
fs
gs
add
pop
gs
gs
pop
push
gs
add
add
ja
jae
push
add
je
jb
imul
pop
inc
pop
pop
pop
add
add
outsb
imul
add
addr16
popa
imul
add
pop
pop
jae
je
popa
jo
pop
je
jo
add
add
ja
jae
outsb
add
add
pop
ja
jae
gs
add
pop
arpl
je
outsl
insb
data16
add
add
aas
xor
inc
pop
push
inc
pop
inc
pop
add
add
gs
je
add
add
arpl
insb
outsb
add
add
js
je
add
pop
pop
jae
je
jae
jb
popa
je
gs
add
add
pop
pop
jo
pop
arpl
insl
outsl
fs
add
pop
popa
fs
jae
pop
imul
add
aas
xor
gs
imul
inc
inc
inc
pop
pop
add
add
ja
jae
outsl
jne
add
add
pop
gs
je
inc
inc
dec
xor
cs
insb
add
add
je
gs
inc
outsl
insb
outsl
jb
add
add
je
imul
outsl
jb
add
add
je
imul
add
inc
dec
dec
xor
cs
insb
add
add
gs
insb
inc
bound
je
add
add
add
add
pusha
rolb
add
rolb
add
add
add
add
cli
add
sbb
add
faddl
add
xlat
add
sub
add
dec
fldl
add
add
lods
roll
add
add
add
add
ret
add
rolb
add
fldl
add
fiaddl
add
rolb
add
add
stos
aam
add
aam
add
aad
add
aad
add
add
push
add
fcom
add
lock
add
rolb
add
add
roll
add
add
jbe
add
jbe
add
adc
add
add
mov
add
movsb
aad
add
roll
add
add
lcall
add
aam
add
add
mov
add
dec
add
enter
mov
add
lock
add
aad
add
aad
add
roll
add
roll
add
add
dec
aam
add
roll
add
add
mov
aam
add
add
or
add
and
add
aam
add
add
mov
add
sub
add
call
roll
add
add
loopne
add
jle
add
loopne
add
rolb
add
roll
add
rolb
add
aad
add
add
mov
add
or
add
add
add
sbb
add
xlat
add
or
add
add
add
flds
add
fadds
add
fadds
add
xlat
add
cwtl
xlat
add
jp
add
fadds
add
fadds
add
add
and
add
out
xlat
add
lock
add
fadds
add
xlat
add
dec
fadds
add
flds
add
fadds
add
fadds
add
flds
add
xlat
add
outsb
xlat
add
cld
xlat
add
sub
add
dec
xlat
add
jbe
add
mov
add
add
flds
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
add
scas
fiaddl
add
flds
add
add
xchg
add
call
fiaddl
add
flds
add
add
push
fiaddl
add
add
dec
fiaddl
add
add
mov
flds
add
fiaddl
add
flds
add
add
int3
fiaddl
add
fiaddl
add
fiaddl
add
add
add
fildl
add
add
psubsw
push
pop
cltd
incl
mov
stc
jmp
cmp
jo
mov
adc
sub
fistpll
inc
cmp
insl
jg
add
sbb
int3
and
loope
test
push
adc
adc
mov
fsub
fstpt
dec
pop
pop
mov
add
int3
xchg
cmp
negb
xchg
sub
pop
and
outsb
int3
xor
std
pop
test
sbb
sarb
jbe
int3
lret
cmp
push
scas
mov
xor
enter
xchg
addb
fisubs
loopne
mov
inc
jecxz
xchg
leave
lcall
dec
mov
insl
xchg
push
and
jmp
hlt
inc
es
add
sub
and
test
mov
dec
xchg
cmp
adc
sahf
aaa
adc
bound
cld
inc
repnz
aam
cmp
push
fs
mov
mov
rcrl
pop
je
jge
sbb
jae
stc
sbb
lcall
fstps
lahf
std
adc
mov
test
ret
jae
sub
rcll
push
or
inc
adc
fsubp
and
les
ljmp
int3
loop
pop
jb
hlt
cli
ret
pop
sub
inc
jecxz
mov
push
icebp
mov
cld
push
mov
cmp
cmp
xchg
mov
outsb
mov
cli
shll
dec
mov
cmp
fdivl
fst
jg
fwait
icebp
and
rcr
inc
push
movsb
aaa
jo
adc
test
in
or
test
call
lock
pushf
cld
int3
bswap
sub
data16
iret
inc
xchg
inc
js
and
jmp
inc
es
cmc
adc
adc
jae
divb
leave
divb
call
push
lea
les
test
js
inc
adc
jl
mov
add
clc
fwait
dec
lret
subb
xor
fadds
inc
jbe
fcompl
mov
out
mov
int
pop
pop
sbb
mov
nop
dec
mov
mov
cmp
test
loopne
jl
test
int3
push
mov
xchg
sbb
enter
lcall
clc
arpl
pop
test
les
jnp
dec
inc
push
repnz
pusha
inc
pusha
push
int
lcall
add
xorl
ret
pop
jnp
ds
int3
jmp
jg
pop
push
fsubrs
dec
jns
in
fdivl
sbb
jp
outsl
out
inc
hlt
cmpsb
xor
test
pop
int3
shrl
pop
mov
lahf
inc
int3
pop
or
das
inc
loopew
mov
mov
pop
xchg
fisubrs
adc
popa
xchg
jo
mov
jmp
inc
jnp
add
push
push
pop
mov
ret
insl
cmp
jge
sub
int3
inc
pop
and
arpl
or
popf
sub
int3
add
xor
mov
or
inc
or
mov
mov
mov
jl
jmp
test
fdivs
inc
add
pop
icebp
stos
jbe
scas
cltd
pop
mov
loopne
out
ret
cmp
fs
stos
int
mov
mov
push
dec
and
fadds
lret
cmp
pop
ljmp
adc
pop
push
dec
lock
mov
or
sub
or
cmp
inc
pop
dec
push
add
hlt
xchg
enter
jnp
les
lret
jbe
lods
ret
not
mov
push
mov
or
and
mov
xor
test
int3
leave
vaesdeclast
add
pop
cs
add
cmpsb
mov
mov
xor
adc
mov
push
xlat
mov
sub
iret
xor
ljmp
out
sbb
jg
adc
adc
fs
test
popa
adc
pop
xor
xor
mov
mov
xchg
bound
mov
mov
mov
sbb
cmp
or
fistps
loope
mov
daa
cld
mov
mov
mov
iret
fwait
imul
sub
mov
push
pop
and
mov
test
mov
mov
adcb
stc
data16
push
xorb
rcll
jp
cmp
jno
jmp
outsb
dec
fmul
adc
popa
fstpl
les
jmp
pusha
mov
sub
sub
out
int3
adc
movsl
push
sti
test
shrb
mov
repz
push
sti
dec
or
xchg
sub
stc
enter
add
sbb
test
test
inc
xlat
ja
int3
flds
pop
sti
xor
add
mov
xor
add
loop
mov
pop
test
or
je
push
or
test
push
mov
inc
fwait
dec
dec
inc
and
add
sub
das
scas
mov
jns
stos
mov
insl
cmp
fwait
ss
stos
divb
sar
inc
mov
je
mov
xchg
rorl
idivl
gs
lds
mov
lret
push
jns
inc
popw
mov
popa
stos
cmp
imul
out
outsb
push
ret
mov
mov
lahf
cmp
mov
imul
mov
daa
sub
fucomp
push
xchg
pop
das
mov
adc
dec
mov
lret
inc
aaa
inc
lret
mov
pop
leave
xor
scas
and
push
je
mov
xchg
jmp
pop
xor
pop
and
insb
pop
mov
loopne
lock
pop
loop
mull
mov
dec
sub
push
into
ljmp
ret
inc
mov
cmp
sti
fildl
clc
adc
xchg
fwait
gs
xlat
sbb
jp
imul
push
xchg
jno
fstl
leave
jge
js
pop
cmp
sub
aaa
subl
pop
xor
inc
sbb
jg
mov
lcall
fsts
shl
cmpsb
and
xor
lahf
add
xor
pop
pop
or
add
insb
bound
subl
pop
mov
xchg
dec
sti
int3
push
sbb
and
fdivrp
mov
addb
lcall
mov
push
inc
out
adc
cmpsb
jl
loopne
leave
in
jp
jecxz
dec
mov
xor
push
sbb
fdiv
xor
pop
gs
les
in
subps
push
cmp
push
pop
int
jae
push
lea
sub
push
inc
sbb
jo
sbb
pop
cmp
jo
jmp
mov
pextrw
dec
inc
adcl
pop
jns
cltd
sub
mov
rcll
std
mov
push
cmpb
inc
cmp
loop
pop
jno
stos
inc
aam
lahf
hlt
xor
addl
insb
and
gs
dec
jmp
js
repz
mov
add
pop
mov
push
flds
mov
add
cwtl
hlt
xchg
push
imul
adc
cmp
bswap
out
jae
aad
adc
movl
cmpsb
jge
mov
pop
fnstsw
inc
loope
add
outsl
pop
push
adc
dec
jmp
fcmovb
inc
xchg
mov
inc
sub
das
jo
and
sub
inc
adc
jmp
push
fidivrl
stos
adc
lock
fsts
repnz
int3
fwait
add
mov
jle
and
inc
int3
pop
sub
mov
push
cmp
test
popa
int3
mulb
mov
dec
push
sbb
scas
push
add
mov
push
push
mov
xchg
push
fadds
pop
mov
sahf
aam
sbb
clc
ficomps
jne
add
or
xor
insl
leave
jp
cli
push
mov
cld
imul
int
mov
mov
add
mov
or
or
dec
sbb
in
inc
xchg
test
lcall
ret
sti
or
jb
and
sub
cmpsb
pop
xchg
xor
mov
cmc
inc
stos
call
and
sbb
lods
clc
mov
push
ficomps
std
xchg
loope
lret
xor
int3
sbb
xor
aam
aad
cmpsb
jecxz
push
les
push
pop
inc
scas
icebp
inc
and
sbb
jecxz
jnp
lret
mov
mov
ficomps
fcomps
jg
inc
inc
mov
xchg
xor
jecxz
dec
mov
cmpsl
push
int3
outsb
push
mov
xchg
addb
cmc
fsubl
dec
icebp
rcrl
push
test
mov
or
cli
dec
loopne
jo
stc
in
lret
test
aad
lret
lock
bound
jle
mov
jl
jl
sub
int3
adc
jecxz
mov
pusha
popa
stos
loope
inc
sarb
fcompl
movsb
xchg
int3
add
mov
cmpsb
in
int3
or
pop
lods
mov
pop
add
jo
sbb
pop
adc
add
sub
xchg
frstor
ret
je
fucomp
ds
cmpsl
mov
int3
add
jb
outsb
xor
pop
clc
push
rorl
in
cmpsl
int3
pop
jmp
push
mov
xor
ret
cmp
int3
xor
inc
jmp
enter
scas
mov
mov
out
xchg
int3
arpl
sbb
das
jle
mov
pop
add
mov
loop
inc
xor
fdivrs
into
lock
push
add
loop
or
mov
or
rol
dec
cmp
mov
sbb
stos
insl
dec
loopne
adc
call
test
stc
faddl
ret
cmovae
mov
xor
sub
shlb
ret
ret
rcrl
in
mov
inc
cs
aad
push
pop
xchg
push
orb
pop
jmp
pop
lcall
push
outsb
outsb
cmp
clc
mov
xchg
pop
sub
mov
mov
out
jle
push
inc
imul
jge
ds
xor
jecxz
cmp
iret
mov
cld
xchg
mov
dec
mov
dec
adc
ret
inc
fildll
cmp
clc
aaa
push
xor
or
pusha
push
sub
inc
sub
lods
mov
pop
outsl
cmp
popf
mov
mov
stos
mov
pop
adc
push
rorb
inc
clc
scas
xor
pop
mov
jne
cltd
int3
fimull
pop
inc
mov
mov
mov
movsb
loopne
dec
mov
push
push
xor
repnz
xor
jmp
js
or
stc
cmp
push
inc
push
mov
mov
aad
xchg
ss
les
xchg
and
int
mov
xchg
addr16
test
cmpsl
lret
mov
gs
cli
dec
lods
mov
push
fidivrl
insb
int
pop
sub
mov
loop
cmp
testb
fisubrs
cmc
insb
inc
adc
pop
pop
cmp
pop
icebp
mov
mov
jnp
aas
filds
cli
mov
and
lock
fimull
mov
hlt
or
lods
loope
mov
cld
mov
mov
out
cwtl
jp
cld
xchg
loope
inc
pop
mov
fwait
pop
sbb
dec
cs
dec
inc
idivb
inc
dec
mov
mov
sub
sbb
mov
dec
stos
pop
jl
loopne
mov
add
pop
xor
shrb
lock
sarl
mov
jns
leave
in
les
mov
cmp
mov
arpl
mov
inc
pop
mov
mov
repz
dec
or
mov
incb
sub
test
fwait
or
aad
jbe
icebp
xchg
xlat
test
pop
jo
dec
or
sbbl
jne
inc
lret
scas
idiv
inc
cmp
imul
or
jo
sbb
loop
imul
sbbb
nop
sub
sar
into
mov
xchg
mov
inc
inc
and
repnz
mov
mov
lcall
cmpl
stc
imul
dec
lahf
dec
lds
je
mov
push
fs
lds
jge
cmp
sub
stc
lods
loope
mov
add
sub
mov
mov
sbb
pop
xlat
pushf
cmp
std
inc
sbb
mov
ss
lret
inc
ret
mov
cli
or
inc
fwait
dec
mov
repz
scas
jnp
mov
andl
xrelease
sbb
lcall
inc
inc
inc
sti
push
lahf
jns
outsb
push
jmp
inc
push
lret
pop
pushf
push
loopne
jbe
or
sub
jnp
cwtl
cmp
lock
sbb
cmpsl
mov
mov
inc
adc
inc
fsubr
scas
jae
js
jo
in
int3
push
int
inc
adc
lret
enter
pop
jbe
cltd
sbbl
jns
mov
mov
mov
mov
fbld
sbb
addb
nop
mov
clc
cmp
mov
xor
gs
enter
push
jecxz
cmp
rep
push
xchg
arpl
sub
lds
and
cmp
call
repz
lcallw
cli
mov
add
jno
push
adc
rclb
pop
jle
mov
cmp
inc
lret
jge
pop
push
lret
mov
inc
movsb
stc
iret
and
mov
ja
push
push
outsb
pusha
sbb
icebp
setp
bound
cmpsb
sub
rcll
leave
xchg
leave
mov
in
push
pop
push
cmp
xchg
inc
sub
subb
or
push
shll
and
lret
aam
cmpl
adc
sub
sahf
cmpsb
test
push
mov
mov
aad
lret
pop
call
test
jg
repz
xor
test
mov
mov
xchg
pop
pushf
jnp
and
xchg
fsubrl
cmc
hlt
dec
mov
dec
xchg
lahf
and
cltd
pop
mov
roll
pop
ficompl
jge
fisubs
mov
add
push
test
xchg
cmpsb
and
or
in
int
leave
sub
imul
jmp
scas
mov
mov
movl
mov
inc
sahf
rol
jb
mov
or
movsl
inc
dec
icebp
pop
jge
cmp
xor
mov
scas
push
mov
out
adc
outsl
sub
pop
xor
nop
mov
lret
mov
arpl
mov
rcll
sub
mov
dec
or
pop
mov
inc
add
xor
xor
popf
xor
dec
cmp
pop
aam
sbb
popa
or
aas
std
cltd
jbe
ss
mov
mov
cs
mov
pop
das
test
outsb
sub
xor
or
jmp
jecxz
dec
dec
lock
xor
cmpb
cltd
les
test
xor
es
mov
movsb
xor
dec
jns
dec
push
mov
dec
lds
mov
cltd
adc
fdivr
in
mov
inc
or
cltd
push
dec
or
jp
or
cld
cmp
mov
inc
rcrl
xchg
push
stos
or
lods
add
ss
testb
jno
mov
mov
push
mov
xor
inc
mov
ss
negb
cmp
add
dec
cmp
add
pop
cmp
ss
jmp
iret
test
stos
imul
leave
fwait
popa
stos
adc
add
js
pushf
push
mov
in
push
sub
inc
push
mov
ret
or
mov
or
add
cltd
push
xor
clc
mov
sub
xchg
fidivrs
push
inc
and
in
mov
or
jns
popf
mov
and
mov
sbb
mov
push
addr16
fistl
sub
lcall
imul
mov
xchg
icebp
add
jg
leave
cli
or
sub
mov
sub
jns
cli
je
leave
stc
dec
fwait
je
mov
add
out
pop
mov
push
xor
leave
inc
jmp
dec
je
and
pop
dec
mov
add
mov
mov
pop
sub
dec
cmp
push
test
pop
rorl
outsb
jl
lret
fwait
sub
cwtl
push
push
imul
aaa
jle
dec
cs
xchg
cmp
insl
push
inc
rol
mov
xor
hlt
fidivrl
ret
jle
js
scas
int3
and
mov
or
rorb
in
xor
mov
loopne
fisttpll
pop
sbb
dec
sbb
cmp
lret
mov
ret
mov
mov
add
inc
dec
inc
mov
scas
push
xorb
fcmovne
xor
mov
mov
out
divl
ror
adc
mov
or
loop
rclb
das
call
fbld
or
jbe
sbb
jmp
cmp
cli
ficompl
xor
push
movsl
outsl
adc
pop
int3
mov
fdivrs
rcl
cmp
lret
xor
xor
stc
test
mov
sbb
mov
mov
das
jg
jmp
mov
aam
inc
or
add
dec
add
shlb
mov
or
aaa
fdivrs
xchg
push
les
or
inc
mov
add
aam
dec
loopne
push
mov
inc
mov
or
aam
aad
adc
add
add
xor
sbbb
push
les
popf
lds
jns
sub
mov
sbb
jnp
leave
pop
mov
insl
xor
scas
push
pop
sbb
sbbb
cmp
loopne
sbb
jae
sbb
ljmp
adc
jp
add
pop
push
outsl
mov
icebp
repz
xor
mov
insb
bswap
inc
test
bound
jbe
xabort
pop
sub
imul
mov
out
sbb
fdivrl
or
cmpsb
xor
cli
icebp
push
mov
jo
jp
cmp
or
inc
into
push
push
push
cmc
add
or
notl
fisubrl
mov
xlat
cmp
sub
or
call
cmpsb
ds
subl
pop
pop
sub
mov
ja
dec
and
and
adc
adc
inc
clc
lret
xchg
subl
imul
loop
fidivs
movsb
dec
or
cmp
cmp
inc
lret
inc
push
jg
faddp
leave
sub
jno
xor
pop
lock
mov
mov
cmpsl
repnz
outsl
pop
adc
push
cltd
aaa
dec
dec
xorl
fwait
popa
cld
dec
mov
mov
dec
pop
or
dec
adc
adc
xor
dec
jo
and
test
inc
imul
arpl
stos
stos
movsb
daa
test
arpl
mov
leave
lea
mov
rorl
daa
lret
rcl
mov
lcall
sub
cli
dec
inc
push
in
jns
cmp
xor
mov
stos
lds
leave
iret
inc
or
xchg
xor
push
adc
int3
lcall
jle
and
rolb
cmp
or
cmpl
pop
test
cld
cs
mov
gs
fnstenv
dec
inc
mov
imul
repz
addb
pop
mov
and
sub
jp
lahf
xor
daa
je
fistpll
adc
mov
insl
ja
gs
add
test
loop
adc
or
ficomps
pop
or
data16
xchg
imul
fs
into
out
or
idivl
std
add
mov
adc
pusha
iret
enter
pop
dec
nop
inc
int3
mov
jle
jns
mov
jno
cli
pop
arpl
cmp
xchg
inc
fisubl
push
sbb
jmp
jns
bound
pusha
adc
sbbb
sbb
pop
test
push
fucomi
mov
fwait
mov
mov
sub
cmc
fiaddl
and
movsb
es
movsl
xchg
xor
decb
pop
fs
ret
mov
insb
js
jg
mov
fwait
sar
ja
mov
adc
xchg
add
mov
add
jge
dec
or
mov
jae
jle
aaa
test
fdivs
sub
movsl
leave
cmp
mov
or
lret
arpl
sarb
mov
idiv
and
aam
xchg
inc
adc
mov
cmp
cmp
mov
adc
jmp
add
inc
popa
outsb
aad
test
bound
mov
icebp
bound
adc
leave
xor
mov
popa
lret
ret
jnp
dec
sbb
pop
lret
scas
cmp
jge
decb
lret
mov
ret
lcall
icebp
dec
aam
or
inc
xchg
mov
mov
ja
inc
and
shrb
imul
dec
imul
pop
call
and
mov
aad
inc
lcall
pop
movsl
cld
cmc
pop
insl
mov
pop
add
sub
push
mov
pop
stc
call
pushl
cld
xchg
cmpsb
dec
xchg
push
xorb
cmp
mov
inc
add
sti
ret
xor
sub
add
inc
jno
das
or
sub
inc
sub
nop
stos
lret
or
fimull
push
add
mov
push
sbb
stc
movsb
dec
jle
mov
imul
inc
adc
push
add
js
jmp
and
loop
sbb
aad
inc
aad
scas
js
scas
inc
mov
stos
ljmp
enter
jmp
addr16
fcoms
sti
stos
cmp
push
mov
cmp
jns
jnp
je
repz
or
push
enter
sub
pop
test
adc
mov
jno
mov
testb
push
mov
cld
js
adc
push
push
jns
mov
fimull
ds
mov
jae
mov
pop
dec
and
xor
add
je
aas
or
loop
rcrl
movsb
leave
xchg
push
sub
lcall
jmp
dec
or
sub
insb
or
lcall
in
das
in
jns
aam
addr16
sub
rolb
in
loope
adc
shlb
shll
shll
addr16
add
adc
sbb
jmp
cli
and
aas
aam
mov
xor
in
sti
jae
mov
pop
pop
cmp
shrb
fisttps
jmp
cmc
adc
push
iret
jne
push
sti
push
not
xchg
inc
push
or
roll
inc
subl
xchg
xchg
popf
cs
jmp
sbb
lahf
movsl
in
sbb
lock
xchg
adc
loope
cmp
ficompl
aas
add
imul
loope
push
sbb
icebp
iret
dec
inc
scas
test
cmp
aad
push
jno
data16
inc
push
jo
and
and
lret
add
rorl
cltd
fidivs
fsts
add
repnz
mov
lds
lahf
sub
sbb
push
adc
into
pushf
nop
aas
adc
jns
xchg
bound
ds
add
subl
xchg
std
xlat
js
cmp
sub
sub
or
mov
insl
test
test
lahf
stos
add
fists
andb
push
pop
mov
scas
pop
mov
sbb
mov
out
adc
rcr
inc
xor
hlt
inc
dec
mov
or
fbld
fisubrl
xor
jo
adc
imul
xchg
or
iret
mov
and
in
out
cmp
mov
dec
add
add
add
add
add
add
add
add
sbb
push
mov
shlb
sbb
push
data16
addl
add
movups
xchg
pop
add
sub
inc
sub
and
rcrb
popf
ret
cmc
aaa
fisubl
add
add
push
add
add
add
adcb
add
inc
add
sbbb
add
pop
add
addb
add
add
add
jo
add
add
add
add
add
mov
add
add
add
add
add
add
add
rolb
add
adc
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
pop
add
add
add
call
add
add
add
add
mov
add
add
add
sub
cmp
outsb
add
add
add
add
data16
add
add
add
add
cmp
jne
inc
add
add
data16
outsb
add
outsl
add
dec
add
and
jno
push
add
xor
push
add
xor
add
add
outsl
add
inc
add
add
and
cmp
pop
add
and
jb
dec
add
jp
push
add
inc
add
inc
add
outsb
add
add
dec
add
add
add
add
add
push
add
inc
add
push
add
add
add
jbe
popa
add
push
add
push
add
push
add
dec
add
push
add
and
dec
add
jne
dec
add
jbe
dec
add
and
pop
add
cmp
push
add
push
add
bound
push
add
inc
add
add
add
add
add
add
xor
inc
add
add
add
pop
add
push
add
jno
and
xor
jbe
insl
add
cmp
dec
add
add
add
dec
add
push
popa
add
cmp
add
arpl
inc
add
add
add
jns
jno
add
cmp
outsb
add
add
add
add
data16
add
add
add
add
cmp
jne
inc
add
add
data16
outsb
add
outsl
add
dec
add
and
jno
push
add
xor
push
add
xor
add
add
outsl
add
inc
add
add
and
cmp
pop
add
and
jb
dec
add
jp
push
add
inc
add
inc
add
outsb
add
add
dec
add
add
add
add
add
push
add
inc
add
push
add
add
add
jbe
popa
add
push
add
push
add
push
add
dec
add
push
add
and
dec
add
jne
dec
add
jbe
dec
add
and
pop
add
cmp
push
add
push
add
bound
push
add
inc
add
add
add
add
add
add
xor
inc
add
add
add
pop
add
push
add
jno
and
xor
jbe
insl
add
cmp
dec
add
add
add
dec
add
push
popa
add
cmp
add
arpl
inc
add
add
add
jns
jno
add
cmp
outsb
add
add
add
add
data16
add
add
add
add
cmp
jne
inc
add
add
data16
outsb
add
outsl
add
dec
add
and
jno
push
add
xor
push
add
xor
add
add
outsl
add
inc
add
add
and
cmp
pop
add
and
jb
dec
add
jp
push
add
inc
add
inc
add
outsb
add
add
dec
add
add
add
add
add
push
add
inc
add
push
add
add
add
jbe
popa
add
push
add
push
add
push
add
dec
add
push
add
and
dec
add
jne
dec
add
jbe
dec
add
and
pop
add
cmp
push
add
push
add
bound
push
add
inc
add
add
add
add
add
add
xor
inc
add
add
add
pop
add
push
add
jno
and
xor
jbe
insl
add
cmp
dec
add
add
add
dec
add
push
popa
add
cmp
add
arpl
inc
add
add
add
jns
jno
add
cmp
outsb
add
add
add
add
data16
add
add
add
add
cmp
jne
inc
add
add
data16
outsb
add
outsl
add
dec
add
and
jno
push
add
xor
push
add
xor
add
add
outsl
add
inc
add
add
and
cmp
pop
add
and
jb
dec
add
jp
push
add
inc
add
inc
add
outsb
add
add
dec
add
add
add
add
add
push
add
inc
add
push
add
add
add
jbe
popa
add
push
add
push
add
push
add
dec
add
push
add
and
dec
add
jne
dec
add
jbe
dec
add
and
pop
add
cmp
push
add
push
add
bound
push
add
inc
add
add
add
add
add
add
xor
inc
add
add
add
pop
add
push
add
jno
and
xor
jbe
insl
add
cmp
dec
add
add
add
dec
add
push
popa
add
cmp
add
arpl
inc
add
add
add
jns
jno
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
dec
inc
sbb
add
add
dec
inc
sbb
add
add
add
add
add
add
add
les
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
mov
add
add
xor
cmp
xor
xor
inc
add
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
dec
add
add
inc
add
add
outsl
add
push
add
inc
add
add
add
add
adc
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
xor
add
add
add
add
add
add
add
add
add
add
add
xor
aaa
add
add
add
push
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
jbe
xor
xor
jo
cmp
jns
outsl
add
add
cmp
dec
add
add
inc
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
insl
add
push
add
push
add
add
inc
add
dec
add
popa
add
add
add
inc
add
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
add
ja
dec
add
add
xor
dec
add
add
add
add
add
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
add
cmp
dec
add
dec
add
pop
add
dec
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
aas
js
insb
and
jb
imul
xor
and
arpl
imul
inc
sub
je
outsb
fs
insb
outsl
outsb
gs
and
ds
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
gs
outsb
fs
arpl
cmp
gs
outsb
fs
je
jae
gs
bound
cmp
jae
gs
bound
fs
je
je
and
gs
xor
and
outsb
popa
insl
gs
jb
jae
data16
push
imul
inc
outsl
insl
insl
outsl
outsb
sub
jb
insb
jae
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
jo
bound
dec
gs
outsl
imul
and
xor
xor
xor
arpl
xor
and
addr16
addr16
ds
fs
outsb
fs
je
jae
gs
bound
cmp
fs
outsb
fs
arpl
cmp
jb
jae
dec
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
cmp
arpl
imul
jne
jae
gs
jb
jbe
insb
gs
cmp
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
ds
jb
jno
gs
gs
jb
jbe
insb
gs
cmp
jae
arpl
imul
jne
je
outsb
outsw
ds
popa
jae
gs
bound
mov
and
stc
je
mov
dec
fcmovne
push
shl
adc
add
aam
cwtl
push
iret
sub
mov
dec
dec
pop
jge
pop
pop
frstor
mov
xchg
xor
mov
ficoms
xchg
inc
nop
add
lahf
mov
inc
into
cli
int3
mov
popa
mov
inc
out
test
les
fs
imul
pop
push
inc
and
mov
ljmp
add
push
rcl
int
push
mov
lea
pop
lret
stc
mov
out
xchg
in
inc
dec
jae
aam
mov
push
push
out
clc
mov
sbb
int3
ja
mov
pop
cmpsb
mov
outsl
lahf
fdivs
or
cmp
mov
pop
dec
and
lret
test
adc
mov
ds
incl
int3
rcr
and
and
in
popa
leave
dec
fsubrl
jae
mov
loopne
imul
and
imul
fwait
inc
lret
movsl
mov
movb
out
fstpt
inc
loope
popa
pop
xor
mov
mov
ss
scas
ljmp
outsb
out
aas
cmpsb
sbb
inc
imul
or
stos
mov
cltd
xchg
push
jl
adc
inc
cmp
repnz
dec
mov
subb
dec
rorb
jns
jle
jae
xchg
fbstp
testb
test
or
sar
pop
jb
inc
sti
lods
dec
adc
mov
or
pop
mov
mov
pop
ja
movsl
mov
jns
jp
lahf
inc
mov
cmpb
xor
dec
hlt
push
pushf
or
mov
outsb
fdivrl
push
add
mov
loope
xchg
les
lods
jno
scas
sub
cmp
lahf
outsl
and
inc
xchg
dec
mov
andl
int3
xchg
mov
jno
mov
mov
pushf
movl
fwait
cmp
sbb
fistl
shl
lret
out
xor
cwtl
sbb
sbbb
jae
cmp
cmpsl
in
int3
aam
mov
mov
xchg
pop
shlb
xor
mov
mov
into
xlat
pop
faddl
sbb
sbb
outsb
dec
xchg
lret
xlat
pop
push
xor
mov
sti
sbb
mov
imul
sub
ljmp
and
aad
mov
or
mov
jmp
lea
cltd
sbb
push
fsts
rolb
shlb
push
mov
mov
mov
dec
pop
xor
pop
dec
scas
push
dec
cmpsb
inc
iret
cli
fcomp
gs
bound
pop
lea
jle
mov
loope
daa
jns
adc
cmp
push
lahf
roll
ret
ret
in
repz
jae
ja
pop
add
jg
std
loopne
inc
negb
daa
sub
rcll
pop
testl
fistpl
dec
cmpsb
addr16
dec
ljmp
jg
xchg
sbb
test
pop
ret
popf
insb
mov
or
subb
je
add
pop
leave
xor
out
call
mov
inc
xor
jns
ds
adc
xchg
add
jno
clc
shll
ljmp
repz
mov
adc
dec
fistpll
icebp
mov
inc
xchg
dec
dec
inc
lret
xchg
out
cmpsb
in
jle
push
and
movsl
xchg
xor
inc
test
jecxz
rcll
inc
sub
insb
add
test
and
or
adc
int3
das
sub
lock
push
pop
sub
cs
xor
fists
enter
pcmpeqw
or
mov
sbb
sarl
or
test
test
jge
popa
test
mov
cmp
lods
xor
push
leave
js
incl
imul
push
ljmp
out
test
out
jno
dec
mov
fcomps
ss
aas
mov
lods
xlat
adc
lahf
cmp
out
xchg
int3
add
xchg
xchg
aam
jnp
jbe
push
das
fwait
xor
rorl
sbb
test
or
inc
popl
adc
xchg
lret
mov
ret
es
test
push
ljmp
cli
out
mov
scas
pop
fldcw
nop
and
daa
cmp
jp
cltd
pusha
mov
mov
dec
shrb
inc
int3
mov
push
in
sahf
mov
pop
jns
mov
incb
cmpsb
and
jecxz
test
mov
sub
or
enter
or
clc
fs
into
mov
imul
push
shlb
cmpsb
repz
icebp
mov
stos
jb
and
adc
mov
aam
cpuid
mov
adc
cmpsb
sub
xchg
cli
mov
cmp
ss
rcrb
or
loop
push
lret
mov
inc
add
loope
scas
lahf
push
pop
inc
xchg
aaa
push
orb
inc
out
test
and
cs
jnp
stos
lret
aas
mov
lods
push
xchg
je
mov
repz
xor
sbb
inc
cld
mov
ljmp
sub
lds
jnp
stos
sub
cmpsl
add
out
pusha
int3
mov
inc
and
int
push
rol
mulb
cmpsb
int
cmp
push
es
xor
scas
sbb
mov
jbe
into
pop
pushf
hlt
xchg
mov
fs
mov
dec
adc
mov
js
dec
add
int3
loopne
push
js
cli
sub
cmpsb
das
aam
xor
push
mov
lods
in
andb
test
pop
ja
ljmp
inc
test
test
inc
out
xor
lds
jae
cmp
push
sub
insb
leave
into
out
dec
push
or
in
jle
add
jb
pushf
cmp
jecxz
int3
pop
or
mov
mov
inc
inc
inc
mov
call
push
ja
push
mov
sbb
mov
cld
pop
pop
rcrl
mov
imul
xor
pop
ret
sub
inc
std
push
sarb
sub
pop
xlat
mov
or
xor
add
lahf
sbb
pop
push
jmp
mov
es
sbb
das
sbb
pusha
sbb
repnz
out
iret
jmp
or
mov
push
out
repz
cmp
jo
jg
fwait
test
inc
sub
sub
mov
xor
pusha
clc
jl
cmp
xlat
outsb
inc
pop
pop
push
pop
mov
xor
cmpsb
gs
and
data16
test
clc
jbe
test
cmp
dec
sar
sahf
mov
in
stc
push
mov
push
lret
and
inc
mov
scas
cmpb
inc
add
insb
xchg
mov
icebp
dec
xor
gs
or
test
dec
jo
pop
jb
lock
fcompl
stc
inc
fwait
inc
cmpsb
mov
jnp
push
cld
jb
mov
fistpll
mov
in
cmc
mov
cmpsb
lods
mov
loopne
xor
mulps
loop
xor
jo
int3
mov
arpl
fldenv
mov
lret
rclb
loopne
sub
arpl
and
push
int3
xchg
sti
mov
cld
push
stos
movsl
mov
jge
mov
xchg
mov
and
inc
push
data16
xchg
mov
cmp
in
pop
mov
lcall
sub
and
xor
or
pop
int3
jbe
dec
sub
pop
add
ljmp
jne
stos
int3
fmul
dec
jae
ds
in
jp
mov
jg
mov
shlb
and
movsb
inc
and
pop
arpl
mov
adc
cmpsb
lret
sbb
jns
daa
mov
pop
addr16
push
push
inc
lds
daa
cwtl
pop
mov
sbb
mov
inc
inc
xchg
inc
ja
cmp
pop
jne
mov
mov
mov
aaa
lcallw
mov
jo
xchg
test
repnz
shll
aad
jmp
shrl
sahf
test
inc
xchg
popa
imul
dec
sbb
sbb
int3
adc
mov
mov
jb
leave
mov
fiaddl
sbbb
je
cmp
movaps
jns
cmp
pop
ss
test
hlt
xchg
push
inc
ss
dec
insb
push
loope
stc
dec
in
mov
mov
add
adc
imull
repz
scas
sarb
push
xor
inc
lret
and
push
arpl
xorl
int3
pop
xchg
xor
aam
pop
lea
gs
loopne
cs
push
cmpsl
popa
sub
out
das
pop
sbb
push
or
aam
insb
adc
inc
or
pop
orb
rcrl
lods
icebp
xor
int3
inc
add
aad
fwait
dec
dec
sbb
mov
or
pop
js
xchg
sub
mov
shll
inc
cmpsb
rcrl
shrb
rol
inc
fdivl
adc
jne
cwtl
pop
xchg
in
jmp
fwait
sub
es
stos
jns
pop
and
sbb
pop
xchg
push
int3
inc
shrl
ret
xchg
cltd
gs
ljmp
fldcw
mov
adc
stos
clc
jle
stos
bound
fsts
mov
int3
repnz
cmc
icebp
mov
pop
ja
orw
jne
fldcw
mov
inc
pop
jno
outsb
sbb
push
sbb
sbb
pop
sbb
pop
pop
icebp
xchg
inc
pushf
clc
out
rcrb
cmpsb
push
xor
cmpsb
loope
sti
roll
dec
test
outsb
pop
push
xchg
popa
pop
in
dec
aam
cmp
aas
fcompl
fmul
adc
sbb
and
test
adc
aas
push
mov
add
testl
jge
mov
push
insb
jg
int
adc
mov
lock
das
outsb
adc
sarb
rcrl
inc
pop
mov
jp
pop
iret
and
add
xchg
adc
sti
push
push
push
xlat
mov
adc
sbb
dec
fistps
or
push
cmpsb
leave
js
pop
in
pushf
lcall
icebp
subb
lcall
incb
inc
sub
mov
pop
cmc
add
cbtw
ljmp
jge
movb
pop
lock
jle
nop
jge
ret
mov
jnp
f2xm1
int3
lds
push
inc
xor
sbb
fiaddl
addr16
push
nop
mov
add
pop
jns
lret
clc
xchg
iret
aaa
jno
ret
ret
std
fmul
insb
or
mov
rcl
inc
add
xor
sar
inc
dec
jge
cmc
das
mov
sbb
es
es
pop
sub
outsb
arpl
mov
int3
shrb
xor
idiv
dec
cwtl
lret
jb
add
pop
inc
pop
add
clc
pop
nop
jecxz
cmp
or
int3
pop
aad
jo
shlb
push
les
dec
and
sub
sub
lret
es
idivb
push
aad
mov
mov
mov
cmc
icebp
jns
pop
stos
inc
pop
in
mov
fistpl
xchg
addr16
pop
aaa
sbbb
int3
cmp
fs
push
popf
dec
or
repz
leave
mov
mov
dec
pop
lods
lahf
mov
mov
jg
cmp
dec
popf
loopne
jl
dec
cmpsb
sub
jge
inc
inc
inc
mov
mov
lods
pop
inc
push
lds
pop
and
int3
insl
pop
add
adc
sub
or
pop
data16
mov
and
fnstcw
xor
cmp
fistpl
icebp
or
push
cli
js
lods
sbb
push
push
cmpsb
push
std
hlt
test
mov
test
lea
rclb
data16
dec
inc
lahf
push
scas
mov
lods
mov
int3
fwait
sbb
out
xchg
je
xor
xchg
leave
leave
mov
popa
ret
insb
notl
stos
lods
insb
fcompl
sub
sti
jbe
add
rcll
int3
sub
mov
movb
rorl
loope
jmp
int3
sub
jbe
call
sub
mov
jmp
bound
js
data16
mov
pop
out
cwtl
sbb
mov
aaa
call
loop
bound
or
leave
popa
dec
jge
pop
push
lock
rolb
jmp
addr16
shlb
pop
out
dec
pop
ret
pop
cs
je
out
out
in
repnz
mov
dec
xchg
sub
inc
stc
ja
dec
jae
bound
insl
rol
es
inc
das
xchg
test
orb
push
data16
pop
cltd
enter
sbb
test
aaa
pop
push
push
dec
mov
dec
lcall
xchg
and
xchg
pop
repz
add
out
int3
test
dec
into
mov
fucom
mov
cmp
subb
cmp
cmp
jns
pop
adc
test
int3
xlat
push
in
inc
adcl
gs
mov
les
pushf
mov
ret
sbb
add
call
xchg
mov
sbb
pop
mov
lret
adc
es
jae
jno
repnz
mov
mov
or
jecxz
clc
dec
pop
lock
inc
fs
mov
inc
nop
ljmp
pop
pop
pusha
xchg
sub
sbb
rorb
inc
or
xor
mov
out
int3
ja
lock
sbb
jl
cmpsb
jg
pop
jle
fwait
pushf
inc
imul
xor
pop
mov
imul
xor
daa
out
pop
pop
test
bound
xor
dec
leave
jp
int3
add
pop
add
decl
or
sti
xchg
push
inc
mov
inc
pop
inc
jno
jb
and
bound
inc
xor
mov
fcom
mov
xchg
pusha
sub
addr16
pop
cmpl
or
int3
aam
mov
clc
mov
mov
mov
cmp
push
cmp
xor
adc
dec
inc
out
in
cmovne
and
les
inc
int3
ficoml
jg
xchg
sbb
sti
inc
rdmsr
jmp
ljmp
scas
add
lds
lea
inc
lret
adc
dec
jae
inc
adc
lds
sbb
lods
int3
rorb
das
mov
out
xor
mov
mov
adc
cmpsl
mov
cmp
and
fsubrl
ret
mov
out
push
xchg
cmp
lret
cmpsb
es
and
sbb
and
xchg
add
inc
cmpsb
pushf
push
das
or
inc
mov
sbb
pop
aaa
popl
mov
lret
cmpsb
dec
scas
xchg
or
sbb
cmpsb
mov
sub
js
mov
push
ds
inc
add
fiadds
pop
jecxz
dec
xchg
cld
cmp
push
pop
add
and
movsb
xchg
daa
fisubrl
cmpsb
sbb
sbb
leave
in
rcrb
daa
sbb
xchg
pop
mov
das
cmp
xor
lcall
pop
lds
or
inc
test
pop
andl
pop
insb
cs
pop
push
mov
test
ret
sub
mov
push
in
arpl
sbb
std
sbb
bound
lcall
sbb
dec
inc
aaa
jmp
dec
inc
pop
dec
inc
insl
mov
xor
or
mov
and
fbstp
mov
mov
jbe
inc
xchg
inc
fcmove
dec
cmpsb
add
lret
mov
stc
inc
scas
inc
cmpb
xchg
push
mov
pop
std
in
push
mov
int3
out
add
jb
pushf
cltd
mov
xchg
add
es
dec
scas
iret
cld
and
mov
xor
adc
push
packsswb
jbe
jnp
inc
outsl
es
dec
mov
ss
mov
testb
and
adc
leave
das
xchg
push
push
inc
and
fwait
int
inc
out
xchg
adc
pop
add
fmulp
pop
xchg
arpl
cs
lret
pop
rclb
inc
clc
imul
cmc
pop
xchg
int
mov
jb
dec
sub
in
testl
sbb
inc
jo
int3
inc
lods
mov
sbb
gs
lods
mov
lret
jmp
int3
fcompl
out
std
cmp
or
lea
or
adc
xchg
cmpsl
mov
cmpsb
pop
and
mov
sbb
lret
inc
dec
xor
sub
or
popf
out
test
push
aas
mov
sti
jl
dec
out
ss
in
std
mov
xchg
fldlg2
mov
aam
dec
lock
and
fldt
cmp
idivl
or
mov
cmp
gs
fisttpll
jae
inc
fidivrs
icebp
pop
sbb
pop
aas
cmpsb
sbb
ja
xor
jbe
dec
cmp
lds
popf
push
mov
test
mov
movsb
ds
scas
popf
xchg
mov
or
sub
ja
roll
jne
decb
pusha
shlb
sub
aam
lock
pop
pop
pop
and
insb
add
mov
sub
mov
xchg
sub
int3
ror
test
les
mov
popf
jno
testl
ss
pop
popa
mov
ror
xor
adc
pop
int
jno
cmpsb
aas
inc
xorb
insl
or
inc
rcr
adc
xor
orb
cltd
loope
pop
xor
mov
cmp
aaa
push
repnz
mov
push
adc
imul
cltd
adc
adc
out
int3
dec
mov
call
adcl
adc
int3
push
mov
addr16
push
test
cmpsb
xchg
pop
aam
pushf
movsl
loop
jns
rep
push
and
or
mov
adc
add
sbb
fnstcw
icebp
inc
test
pop
es
stos
xor
aaa
pmulhw
notl
mov
loope
les
fwait
aaa
sti
mov
cmp
cwtl
imul
pushf
xlat
jecxz
mov
enter
inc
or
pop
dec
sbb
dec
dec
pop
mov
push
pushf
mov
jmp
inc
mov
inc
clc
xchg
mov
mov
push
scas
dec
pop
xor
aam
in
pop
andb
test
sahf
insb
pop
ret
mov
mov
xor
jge
ljmp
or
inc
inc
push
xchg
ret
mov
int
inc
fsubl
cmpsb
jae
jge
fstps
lds
das
or
decl
call
push
fistps
jbe
sbb
nop
sbb
lods
mov
test
inc
fistps
adc
mov
cmp
inc
mov
imul
push
and
loop
mov
mov
lahf
mov
aaa
fwait
mov
lock
inc
push
inc
ja
ss
cltd
xor
mov
mov
int3
mov
rorb
push
enter
and
xchg
jns
jae
cmp
or
data16
lahf
jmp
xor
out
xor
mov
inc
pop
ret
jns
sbb
and
mov
adc
push
sub
jno
leave
imul
das
int3
cmpsl
xchg
aad
movsb
hlt
mov
add
jnp
incl
mov
cmpsb
cmp
movsb
pop
pop
inc
imul
dec
nop
out
cltd
shrb
cs
in
inc
cltd
movsl
ss
rcrb
test
dec
add
adc
mov
push
adc
add
mov
inc
scas
push
icebp
xchg
out
roll
jne
and
inc
clc
cltd
aam
mov
in
test
test
inc
cmp
popa
loopne
data16
dec
inc
loop
call
jb
cmp
adc
and
pop
or
or
xor
sub
inc
popa
xchg
pusha
test
ficoml
jle
jg
add
and
movsl
dec
icebp
fsubs
or
and
xor
aam
out
add
mov
push
das
sbb
mov
enter
mov
adc
jl
enter
adc
fistpl
rorl
cmpsb
ja
imul
xor
sbb
add
lret
jmp
cli
and
std
push
rolb
shll
lock
mov
and
das
loop
add
scas
pop
jbe
lcall
pop
inc
fucomi
es
aas
fisubl
inc
testb
sar
push
gs
dec
sbb
pop
xor
adc
or
cmp
lds
hlt
or
bound
in
cmpsb
jnp
lea
inc
cmp
inc
add
adc
sti
sub
jbe
out
pop
mov
inc
or
xchg
mov
aam
and
push
out
mov
pop
out
mov
test
test
xchg
push
fnstcw
imul
inc
add
mov
frstor
push
insl
inc
into
mov
aad
sub
adc
adc
addb
mov
inc
inc
fcmovne
stos
inc
imul
sub
addr16
xor
imul
adc
xlat
cld
pop
imul
clc
and
stos
lcall
int3
dec
int
mov
pop
push
addb
sbb
divb
ds
xchg
fists
in
mov
sbb
inc
test
cmp
fnstenv
arpl
mov
xchg
add
inc
inc
push
pop
xchg
nop
pop
inc
xchg
add
fsubrl
xchg
jbe
inc
inc
fdivrs
call
mov
dec
pop
xchg
stos
mov
jl
movsb
lahf
ljmp
mov
lcall
shll
cmpsb
iret
mov
cmpb
jno
fwait
mov
cmpsb
push
mov
inc
idivl
es
icebp
sar
in
adc
cmpsb
adc
dec
movsl
stos
int3
jp
in
orl
lods
pop
mov
inc
lahf
mov
daa
mov
scas
pop
arpl
hlt
imul
jae
stos
int3
xlat
xchg
push
lods
leave
xchg
aas
mov
inc
test
inc
sbb
add
pop
daa
xor
jmp
in
in
jmp
mov
loop
fidivrs
cmc
lods
int3
mov
ficoml
mov
cmpsb
sbb
xor
test
int
mov
ja
mov
fimull
shrb
inc
scas
jbe
ret
fnstenv
ss
dec
call
mov
out
pop
nop
pop
xor
push
inc
mov
or
mov
and
mov
mov
stos
in
or
inc
sahf
mov
or
sub
out
fwait
xor
mov
inc
shlb
popf
pop
aas
imul
sbb
int
add
xlat
repnz
and
mov
je
in
insb
push
inc
cwtl
jecxz
dec
push
subb
xchg
in
int3
cwtl
lret
inc
test
jbe
jecxz
inc
shlb
mov
shr
or
fdivl
fnsave
les
adc
jg
fs
int3
pop
divl
pop
and
into
loope
int3
stos
shlb
int3
adc
mov
mov
or
loop
push
imul
xor
imul
shlb
int3
mov
test
movsl
mov
and
int
cs
and
imul
inc
mov
movsl
lds
in
pop
add
cmp
add
movsl
scas
ja
mov
sub
jns
sbb
sub
mov
cmp
mov
movsl
xchg
mov
aas
mov
mov
stos
loopne
jle
xor
inc
and
inc
sub
xor
cld
ret
int3
adc
and
scas
mov
jge
bound
insl
dec
lret
icebp
ret
inc
popf
mov
adc
repnz
scas
int3
xchg
imul
and
jno
pop
and
cmp
iret
enter
popf
daa
pusha
add
mov
dec
in
or
rcrb
int3
and
inc
insb
push
or
inc
xor
sub
pop
lds
mov
sahf
je
lods
cmpsb
int
repz
push
xor
inc
inc
xlat
jp
daa
jmp
or
adc
pop
jp
mov
mov
ret
rol
or
mov
cmpsb
sub
insl
out
ds
fiadds
xlat
xlat
sbb
adc
cld
cmp
adc
lret
sti
into
inc
or
shr
enter
loope
xchg
or
pusha
aam
jae
je
fnstsw
mov
int3
lds
scas
dec
pop
ficoms
roll
pop
lods
cmp
iret
push
dec
es
btr
add
pop
int3
fwait
xchg
xor
cmp
pop
adc
pop
fildll
inc
out
xchg
mov
xor
ljmp
and
mov
adcb
dec
mov
inc
xchg
int3
cltd
loope
mov
jecxz
aaa
dec
jae
nop
hlt
out
jg
jl
fcomip
xor
test
shr
inc
stc
mov
cmp
pop
push
fadds
push
in
xchg
adc
es
pop
test
cmp
cmc
aam
int3
int3
xchg
gs
mov
shll
mov
sbb
rol
mov
inc
mov
xchg
sbb
insb
insb
inc
push
sbb
mov
bnd
rolb
inc
pop
mov
add
testb
fmul
int3
cmc
out
lods
sbb
stos
pop
call
xor
shr
inc
aas
clc
gs
xchg
bound
pop
pop
adc
mov
addr16
ljmp
push
mov
test
pop
and
adc
jne
and
testl
sub
xor
lock
xchg
sbb
fisttps
mov
xchg
push
pop
stos
inc
sub
push
mov
inc
outsb
ljmp
add
mov
je
inc
scas
inc
dec
rcr
dec
inc
mov
ljmp
cs
cmpsb
mov
xchg
xchg
inc
inc
mov
jl
aad
pop
cmpsl
lret
in
xchg
jno
and
adc
pop
lods
js
jecxz
pop
ljmp
xor
popa
dec
push
adc
hlt
mov
pop
mov
cmp
int
pop
mov
mov
mov
mov
pop
fs
into
movsb
imul
cmpsb
adc
pusha
pop
inc
xor
push
arpl
les
sti
loop
and
and
mov
push
inc
push
icebp
arpl
loop
dec
leave
push
mov
mov
cmp
xchg
push
pop
fimull
int3
dec
and
fidivl
mov
xlat
ds
xchg
inc
add
or
lret
sub
xchg
into
cli
pushw
adc
loopne
mov
mov
jecxz
mov
sub
mov
inc
je
test
insl
movsl
or
inc
rcll
leave
lods
add
push
rep
sbb
or
dec
js
xor
dec
dec
orb
sbb
pusha
ror
dec
jmp
pop
stc
jg
int3
repz
in
mov
xchg
dec
xor
fucomip
int3
pop
rcr
mov
mov
fisttps
or
in
cli
adc
mov
in
cmpsb
cmp
lahf
pop
sub
pop
movsl
pop
ss
lock
repz
cs
lods
jmp
gs
aas
inc
xchg
dec
mov
hlt
dec
test
pusha
add
mov
jae
adc
dec
stos
mov
std
push
sbb
pop
mov
lods
mov
pop
inc
or
xor
jecxz
xchg
mov
mov
inc
push
and
scas
cltd
into
sahf
pop
testl
push
aam
inc
add
jmp
add
xchg
pop
cmp
dec
dec
punpcklbw
imul
lods
mov
scas
inc
fadd
nop
ljmp
jecxz
jb
mov
xchg
por
vmulps
inc
push
popf
lcall
cld
mov
mov
icebp
xchg
inc
out
fcmove
pushf
inc
jo
pop
cmpl
daa
xchg
inc
les
pop
xchg
shlb
adc
das
cmpsb
cmp
test
test
sti
imul
and
and
repnz
hlt
or
int3
cmc
xchg
pop
clc
inc
pop
mov
mov
or
nop
add
sub
push
repnz
sbb
xlat
data16
push
push
cmpsb
mov
shrb
mov
out
sbb
fdivs
pop
pop
lret
mov
arpl
sub
int3
mov
enter
aas
rcl
or
outsb
push
hlt
jge
push
pop
scas
jmp
mov
and
inc
mov
daa
jae
dec
push
lret
mov
pop
mov
int3
or
aas
int
mov
pop
cmpsb
js
test
gs
cmp
imul
fmull
test
scas
sub
sub
or
pop
in
push
jae
popa
xchg
imulb
pop
outsl
loop
int3
add
xor
ret
ret
inc
sub
stc
mov
mov
add
stos
xor
inc
dec
inc
ret
mov
arpl
adcb
mov
dec
inc
rcpps
adc
cmp
xchg
lcall
das
sbb
mov
test
int3
jno
mov
psadbw
jb
cld
fisubrs
jle
pop
inc
sahf
orb
mov
inc
shl
fwait
mov
mov
xor
lock
fmuls
ret
or
inc
aas
jge
jle
int3
jp
sub
fimuls
ja
pop
sbb
out
xchg
cwtl
outsb
pop
cmp
cmpsb
movb
push
cltd
mov
push
jg
jae,pn
cs
mov
in
cwtl
mov
imul
shr
or
xor
test
pop
sub
outsl
jb
sub
xorb
scas
xor
cmp
dec
or
ljmp
push
imul
test
cmc
jle
cmc
mov
lret
js
and
cli
sbb
mov
xor
stos
xchg
add
jmp
pop
cmp
gs
pop
popa
loop
in
and
cmpsl
push
mov
out
aaa
imul
push
pop
mov
push
fdivrs
rcrl
push
xor
cld
pop
and
sahf
inc
cmp
arpl
xor
cmp
xchg
cmpsb
or
pushf
cli
addb
gs
loopne
enter
inc
lods
pop
mov
orb
adc
mov
test
aam
es
push
pop
mov
mov
scas
sub
loope
xlat
and
jg
sarb
lahf
rclb
cld
xor
push
jno
pop
mov
jnp
int3
shll
dec
in
dec
ljmp
jbe
lret
rol
inc
int3
inc
mov
mov
fnstsw
mov
sbb
mov
mov
icebp
inc
lea
cmp
sub
lods
jl
out
mov
inc
call
int3
shlb
mov
cmc
mov
mov
idiv
cmpsb
xlat
int
sbb
pop
inc
push
ret
sbb
aaa
push
inc
sar
loop
pushf
fnstcw
xor
mov
push
add
xor
or
pop
loopne
int
into
int3
ljmp
add
xchg
stc
aas
sub
imul
ljmp
int3
shrb
mov
jnp
sahf
and
pop
add
repz
roll
lods
sub
test
push
xchg
sbb
mov
pop
out
fistpl
pop
add
xor
inc
out
aam
in
mov
lret
mov
call
or
sbb
mov
std
movsl
filds
loop
mov
mov
leave
sbb
movsl
call
pop
cs
and
cmpl
xchg
mov
xor
dec
outsb
scas
int
in
int3
cld
addl
dec
inc
movsl
push
insb
call
ret
push
fcmovnb
adc
mov
loop
stc
xor
jge
sbb
mov
inc
sub
push
cmpsb
xchg
sti
and
mov
int3
xchg
inc
shlb
xor
test
jns
int3
push
adc
sub
mov
jb
cld
jg
ss
int3
xchg
dec
in
sbb
fdivrs
scas
or
jge
push
dec
pop
xchg
cmp
popa
lods
mov
cmp
sbbb
push
in
push
mov
xchg
cmp
add
push
shr
sbb
mov
mov
sub
les
pop
insl
ret
sbb
sub
lcall
sbb
repnz
pop
stos
cwtl
sahf
mov
int3
xchg
cmpsl
push
mov
xor
mov
xor
fidivl
mov
fcoml
xor
aam
push
es
mov
fldcw
lods
push
mov
std
adc
dec
arpl
enter
pop
aaa
cli
pop
loope
rcrb
inc
pop
sub
push
jne
sbb
popf
jb
dec
xlat
sti
mov
in
inc
pushl
data16
adc
dec
test
cmp
int3
sub
sub
daa
outsl
xlat
scas
addr16
inc
in
mov
inc
push
sub
jecxz
adc
aas
sub
leave
stos
stos
popf
sbb
push
icebp
mov
and
add
fimuls
push
push
dec
sub
repnz
lock
lret
push
adc
incb
ss
or
mov
ljmp
out
pop
pop
push
out
sbb
pop
sti
ljmp
pop
mov
mov
push
sub
mov
mov
and
dec
mov
push
jmp
int3
mov
jmp
shlb
std
pop
mov
xlat
fsts
dec
ds
jo
mov
pop
cwtl
jno
inc
clc
ret
repz
lods
lea
cmp
sub
sub
je
hlt
push
cmpsb
out
add
cltd
scas
pushf
mov
shlb
mov
dec
push
stos
mov
add
int
fcomi
mov
or
push
push
insl
std
fnstcw
lcall
xor
jl
xchg
ds
sub
dec
jno
push
cmpsb
or
inc
mov
pop
nop
addr16
pop
cmpsb
lcall
jge
out
pop
push
lret
mov
adc
inc
add
jo
fisubs
popf
ljmp
mov
push
pop
and
dec
or
jne
cmpsb
iret
mov
mov
cmp
cmp
jne
out
ljmp
mov
inc
cmpsb
inc
in
fcomps
xor
nop
dec
icebp
das
call
fidivl
pop
mov
clc
dec
imul
outsb
jmp
add
jmp
inc
inc
xor
test
int
pop
sbb
int3
das
in
push
in
mov
cmpsb
fimuls
mov
into
dec
data16
push
ret
mov
stos
xor
pop
lcall
lods
stos
xor
les
add
adc
and
ja
and
jge
push
pop
inc
daa
xchg
mov
inc
jno
rorb
out
mov
popa
cmpsb
das
addr16
push
sbb
dec
mov
pusha
fcmovnbe
fsubl
push
mov
inc
cmpsl
add
jg
jb
stc
and
insb
jae
imul
or
push
jge
inc
mov
call
xor
xor
mov
aad
test
fisubl
push
or
cmp
outsb
sub
rolb
xor
scas
test
insb
scas
jp
int3
cmpsl
sub
out
loopne
ja
add
sarl
loopne
mov
test
cmc
push
xor
mov
cmpsb
or
cmc
cmp
jg
mov
fwait
js
and
xchg
lods
mov
inc
xchg
test
sbb
jmp
jo
pop
daa
push
ret
daa
adc
movl
in
out
or
lahf
dec
int3
rol
mov
dec
cmp
sbb
sbb
xchg
fstps
cs
ret
push
mov
fisttpl
cmpsb
pusha
jb
je
cmp
jbe
mov
stc
fistl
or
jae
loope
mov
cmp
lret
cmp
in
ret
mov
gs
xchg
icebp
imul
jle
inc
iret
sbbl
jbe
sti
xor
lods
rorb
int3
cmpsl
js
aaa
xor
cmc
test
addr16
inc
jae
in
fistpll
jnp
and
xchg
push
loope
shrb
pop
inc
in
rclb
xor
and
or
enter
xchg
mov
xchg
lahf
data16
ljmp
mov
test
lock
pop
mov
jo
fbld
test
push
pop
cmpsb
repz
mov
xor
pop
mov
pop
jg
lret
jl
fcomp
mov
push
pop
orb
lods
les
repz
mov
insl
sbb
rorl
jle
movsl
jl
push
jmp
clc
aaa
jmp
push
pop
inc
adc
imul
xlat
stc
loop
mov
outsl
inc
pop
lods
test
mov
xchg
mov
scas
and
or
loopne
pop
cmpsb
adc
mov
push
loopne
fwait
mov
std
aaa
loope
mov
inc
mov
inc
insb
jge
dec
mov
push
xor
mov
dec
fisubs
les
pop
add
mov
movsl
jg
inc
fistl
sarl
adc
cmpsb
ja
aam
xchg
mov
xchg
cmp
sti
xor
push
int3
xchg
fiaddl
add
sbb
icebp
jae
test
scas
or
pop
or
jmp
lock
mov
sub
pop
xchg
loop
cs
leave
sbb
sub
cmp
or
mov
inc
pop
popf
pop
test
mov
dec
xchg
push
mov
repz
icebp
mov
fists
call
push
pop
mov
shll
sarb
sub
add
jp
add
inc
les
int
fnstsw
pop
sub
sub
jae
cmpsl
test
int3
fstps
jg
loope
fisubrl
cmpsb
cmp
daa
mov
inc
jne
xchg
xor
movsl
test
inc
jns
pop
and
in
hlt
cwtl
mov
loopne
xorb
mov
xchg
fldcw
mov
int
mov
enter
mov
icebp
test
add
inc
push
in
sbb
mov
add
mov
mov
hlt
xchg
mov
sbb
jle
icebp
stos
mov
mov
cmp
loop
into
mov
xchg
out
arpl
jbe
xchg
int3
xlat
ja
dec
push
or
int3
jo
xor
lahf
cmc
mov
cmc
mov
and
pop
fisttpll
dec
add
fidivs
sbb
inc
lds
scas
repz
fdivrs
fidivs
mov
sti
push
inc
int3
jne
shll
sbb
lock
int
cmc
enter
aad
xchg
fmull
pushf
divl
add
rcrb
adcl
push
cmp
fwait
jmp
xchg
cmp
and
pop
cmp
sti
push
mov
inc
and
push
icebp
cwtl
mov
pushf
pop
sbb
inc
cmpsb
jmp
imul
mov
jg
shlb
adc
push
out
or
inc
adc
push
rolb
test
orb
jae
nop
test
mov
ret
add
adc
mov
into
je
mov
push
inc
xchg
jno
lret
cwtl
pop
lea
aaa
jno
popa
mov
sub
jmp
xchg
pop
pop
dec
ljmp
inc
or
jo
test
cmp
pushf
mov
shl
dec
cmp
shlb
cmpsb
push
hlt
xor
incb
lods
jl
pop
fstl
fiaddl
rol
stos
cmpl
push
push
xchg
cmp
out
add
fdivrp
leave
out
loope
mov
int3
or
adc
in
or
xchg
mov
push
mov
in
or
jge
shrl
dec
cmpsb
inc
outsb
xor
add
clc
repnz
pop
jns
sbb
decl
xchg
sub
push
inc
pushf
inc
rcrl
outsb
mov
jno
dec
xor
jnp
insb
fcomps
push
jmp
pop
sti
xchg
std
push
cmpsb
dec
lret
dec
jbe
in
icebp
addr16
rolb
fldenv
push
push
ret
daa
shlb
cmp
xchg
mov
sbb
or
ffreep
cli
xchg
lret
movsl
xchg
pop
or
mov
jno
jmp
sbbb
sbb
insl
stos
inc
xor
jmp
bound
stos
cmpl
jge
inc
cld
mov
repz
push
xchg
xchg
cmove
mov
sbb
xor
stos
shr
sub
xchg
pop
ret
mov
int3
jo
shll
jg
jb
scas
inc
das
sbb
negl
jbe
push
int3
cmc
push
icebp
ficompl
mul
mov
fistps
inc
dec
and
pop
xchg
addb
sahf
xchg
leave
sbb
jl
pusha
xor
cltd
jne
fmull
popa
repnz
jge
das
sub
iret
xchg
testb
jns
xlat
sub
sbb
push
dec
mov
cmpsl
in
sub
cli
xchg
inc
or
ja
repz
inc
mov
jbe
mov
adc
xchg
xor
lret
inc
dec
xchg
sarb
sub
inc
pushf
fdivrl
mov
es
lods
inc
int3
xor
pop
loop
int
pusha
in
lds
rcrl
push
cmpsb
leave
shl
jl
push
lds
inc
push
and
int3
imul
dec
xchg
into
leave
mov
jmp
push
inc
loopne
inc
les
adc
jecxz
fstps
das
push
nop
je
mov
xchg
inc
mov
mov
adc
inc
call
inc
xlat
cmpsl
mov
loopne
push
sub
inc
jo
add
pop
pop
dec
dec
pop
xchg
gs
xchg
out
ljmp
stc
push
add
push
rclb
adc
call
mov
mov
jg
ljmp
out
sub
mov
pop
jb
notb
and
mov
into
mov
xchg
fwait
xchg
cmp
popf
int
insb
dec
xor
ds
cli
pop
pop
add
scas
push
xor
sahf
pop
mov
es
ds
lcall
sbb
lret
sub
fwait
pop
dec
rol
pop
cmpsb
jne
test
adc
inc
call
push
je
add
addr16
mov
mov
subb
jge
call
movsl
repz
loopne
xchg
aad
and
les
test
sub
dec
xorb
xchg
lds
or
mov
sbb
cmc
pop
sbb
out
call
jnp
inc
and
jge
es
inc
mov
clc
cltd
mov
and
andb
cmp
imul
inc
daa
or
pop
or
aaa
lods
test
jmp
call
mov
sub
cld
xorl
rorl
mov
inc
fstpt
cmp
jbe
mov
xchg
inc
fiadds
scas
adc
mov
int3
mov
sub
cmpsb
jne
mov
sbb
jmp
push
mov
roll
imul
or
insl
movsb
int3
popf
cmp
xchg
fsts
pop
pushf
xchg
xchg
adc
push
cmp
inc
aas
pusha
rcll
xor
insl
push
inc
hlt
hlt
shrl
mov
repz
mov
jmp
das
int3
mov
and
imul
inc
int
stos
sub
pop
aas
xchg
adc
cmpsb
cmp
fdivrs
movsb
ljmp
add
loopne
and
jb
adc
in
lret
mov
lea
mov
sbb
repnz
lods
cwtl
jmp
and
lret
jmp
ds
enter
adc
lahf
icebp
shll
addr16
int3
addr16
ds
lods
jb
sbb
or
xor
mov
aad
int3
push
fiaddl
mov
das
cmpsb
or
andb
lods
mov
xor
scas
xchg
rol
stos
daa
and
inc
scas
lcall
inc
scas
sbb
pop
inc
xor
xchg
inc
mov
add
pop
and
push
inc
jp
in
sub
cmpsb
and
mov
testb
dec
ret
test
cmp
dec
push
xchg
fistpll
mov
scas
lods
ss
jl
push
cmp
mov
mov
and
aas
cmp
mov
negl
mov
flds
or
pop
mov
pop
flds
mov
mov
popf
in
mov
int3
xchg
xchg
or
jb
repz
mov
jne,pt
movb
movsl
fbld
imulb
pop
orl
pop
popf
cmp
mov
mov
cmpsb
and
es
rcll
pop
rcrb
sub
pop
or
ljmp
cmp
mov
rcrb
adc
adc
shrb
pop
adc
out
adc
xchg
orl
pop
and
pusha
xor
pop
xor
or
int3
jo
fmuls
fprem
dec
dec
addl
mov
stos
mov
fidivrs
pop
sub
push
cld
jne
pusha
cli
test
dec
sbb
mov
fmuls
or
ficomps
fildll
dec
das
inc
sub
cmp
pop
out
mov
je
testb
lds
mov
jne
fistps
xchg
jbe
mov
cmpsl
ffree
stos
sbb
mov
dec
add
adc
cltd
pop
sbb
xor
pusha
pop
imul
inc
jbe
es
mov
mov
sarb
int3
or
xor
imul
and
cltd
and
aaa
or
sahf
imul
mov
sub
inc
push
ljmp
and
sbb
loop
mov
adc
push
aas
or
xorb
into
je
loop
ret
push
inc
pop
or
pop
fistl
mov
mulb
mov
cmp
jns
iret
cmp
icebp
mov
nop
jmp
push
ret
or
xchg
inc
sub
imul
out
jb
mov
pop
xchg
fistps
push
data16
rcl
scas
int3
jo
sbb
and
jmp
divl
inc
mov
inc
and
add
mov
or
leave
jecxz
dec
mov
pop
adc
cmp
in
push
pop
push
mov
int3
out
cmp
mov
mov
adc
aas
lcall
loop
lahf
jo
das
jg
sbb
dec
mov
fadds
or
sarb
dec
pop
lods
push
shll
xor
icebp
dec
int3
insb
add
add
shlb
cmpsb
loope
xor
dec
aam
inc
gs
sbb
mov
and
das
lret
arpl
mov
outsl
clc
sahf
push
cmpsb
xor
push
cmpsb
adc
gs
dec
push
jae
outsb
pop
cmp
movsb
lock
mov
inc
pop
dec
mov
int3
sbb
fisubrs
xor
cmp
ret
movsb
pop
sbb
das
fidivs
shrl
push
mov
sbb
xchg
mov
cmp
push
push
xchg
les
dec
push
inc
pop
sbb
push
int3
push
pop
testb
inc
push
insl
mov
je
fsubr
and
jge
sbb
mov
mov
sbb
lods
addl
lahf
das
lods
aam
and
cmp
jne
pushf
icebp
mov
daa
mov
cmp
int3
subb
pop
add
gs
pop
or
lock
outsl
int3
jno
push
sarl
mov
mov
cmpsb
jb
jo
jne
cmp
xchg
or
xor
pop
lock
int3
xchg
xor
jl
mov
jns
add
popa
jnp
pop
push
jae
cmp
loopne
inc
mov
into
and
inc
mov
sub
lods
adc
xor
or
mov
int3
add
int
push
adc
popf
pusha
jb
add
in
rclb
pop
packuswb
test
daa
dec
int3
pop
sub
enter
jle
outsb
jge
in
pop
push
sub
inc
inc
out
setle
lock
sub
repz
std
cmpsb
pop
sub
fdivl
fstps
and
pop
mov
or
jle
add
decl
sub
mov
les
cld
addr16
ds
out
dec
popf
jp
outsl
cltd
loope
dec
pop
jl
pop
mov
pop
in
lea
flds
int3
adcl
cmc
mov
add
jb
das
ret
inc
movsl
leave
fwait
out
test
jbe
inc
sbb
lods
movsb
scas
pop
jb
std
mov
push
push
lahf
pop
or
jbe
xor
sub
fistl
xchg
push
in
pop
push
jmp
test
outsl
add
jmp
pop
icebp
adc
loopne
loope
cli
inc
pop
dec
arpl
cmp
lcall
dec
imulb
inc
or
lea
or
ret
mov
fcmovnbe
andnps
lea
inc
pop
dec
loope
xlat
stos
mov
fisubl
ss
in
pop
rcrb
dec
sbb
rol
mov
xchg
pop
sub
jmp
cli
dec
or
daa
int
cmp
inc
inc
or
dec
pop
cmpsb
pusha
ret
push
arpl
scas
cmpsl
popa
dec
pop
cltd
stos
push
fwait
cld
icebp
test
jg
dec
cld
pushf
imul
popf
mov
push
add
cvtpi2ps
adc
xchg
jle
and
pop
inc
sbb
push
pop
jl
idivb
pop
inc
add
xor
xor
jo
mov
jns
out
int3
sbb
mov
adc
sub
pop
pop
inc
cmp
bound
bnd
adc
loope
gs
pop
shl
inc
inc
aad
sbb
pop
enter
fisubl
or
in
add
dec
fistpll
pop
mov
repnz
std
outsb
inc
push
xchg
xor
jne
cwtl
and
fwait
das
sbb
orb
inc
mov
cmp
dec
or
push
jae
sub
sub
pop
test
xchg
mov
mov
push
fcmovb
movsl
rcll
flds
int3
in
push
mov
icebp
fidivl
js
xchg
and
inc
jmp
inc
out
sahf
push
push
mov
inc
or
and
inc
lcall
mov
shl
fcmovne
cmpsl
mov
sub
xor
inc
sahf
xchg
scas
jne
sub
jp
fcoml
movsl
aas
or
adc
add
testl
jmp
call
ss
imull
inc
sbbb
test
pop
mov
dec
cmpsb
and
mov
outsb
movsl
sub
cwtl
jp
mov
push
push
fwait
mov
out
das
out
lahf
inc
sbb
mov
xor
pop
push
movsb
sub
sbb
or
add
in
jecxz
inc
std
sbb
pop
loopne
pop
call
push
aaa
xchg
stos
add
xchg
std
shrl
aad
mov
jo
and
test
pop
xor
les
int3
shl
jecxz
add
add
leave
sbb
movsl
jb
fistl
idivl
insl
jge
xor
sub
orl
dec
mov
test
adc
add
inc
jmp
sub
mov
jl
mov
dec
punpckldq
mov
jb
push
pop
xor
cltd
or
inc
stos
jmp
aam
jbe
mov
sbb
inc
or
jmp
shr
leave
push
pop
pop
sbb
insl
pop
xor
nop
pusha
ljmp
adc
push
jg
lcall
sub
movsb
jmp
clc
pushf
or
cmp
ret
pop
inc
data16
das
push
lods
ss
mov
test
mov
xchg
fsubs
roll
ret
cmp
in
inc
xchg
outsb
ss
loope
out
mov
inc
adc
xchg
dec
mov
and
int3
xor
fdivrl
movsl
aad
sbb
adc
popa
nop
xchg
aad
mov
stc
stos
arpl
ljmp
aad
pop
inc
jae
in
sub
mov
pop
sbb
shll
jno
imul
add
popa
test
inc
pop
and
int3
sarl
inc
fildl
adc
adc
les
inc
int3
xor
aaa
xchg
mov
fcomps
pop
mov
push
mov
mov
fistpll
jno
imul
lahf
fcmovnu
stc
sub
sbbb
inc
mov
rolb
mov
jl,pn
inc
jl
call
cltd
sub
ret
mov
mov
mov
lret
jns
push
dec
jecxz
pop
or
cmp
or
jae
sub
jno
inc
mov
and
fimuls
jle
adc
ret
jge
test
inc
and
inc
jb
mov
ss
cmp
stos
insb
std
int3
xchg
cwtl
cs
adc
xlat
aaa
dec
cmp
fnsave
repnz
sahf
inc
mov
push
pop
scas
cmp
outsb
lret
int3
lds
jo
xchg
mov
pop
and
jmp
sbbl
int
mov
dec
clc
add
shl
push
push
cmc
out
or
add
lret
inc
das
cmpsb
repnz
fsubrl
gs
das
push
repnz
dec
int3
sti
outsb
jb
add
dec
dec
adc
mov
les
daa
mov
insl
es
xchg
or
inc
mov
inc
dec
sub
out
int3
fs
gs
push
jecxz
pop
int3
lret
sub
cld
pusha
stos
add
hlt
in
sub
mov
sub
out
pop
sbb
adc
dec
pop
pop
push
xchg
repz
mov
loope
add
and
adc
dec
int3
loopne
in
ss
repnz
dec
sbb
lret
dec
int3
push
mov
or
push
aas
aam
cmp
fs
jbe
pop
mov
imul
inc
std
dec
pop
jp
frstor
fidivl
pop
subl
xor
ja
das
aaa
cmpsb
add
lock
lcall
mov
adc
mov
pop
ror
cmp
cmp
std
add
xor
sti
out
inc
dec
sub
push
movsl
cli
mov
inc
or
mov
gs
jmp
mov
insl
negb
and
in
test
pop
pop
cmp
jb
push
pop
inc
mov
test
mov
jle
je
inc
cmc
adc
cmp
das
inc
sarl
inc
push
inc
lahf
push
lahf
in
sbb
into
pop
inc
lea
xchg
in
mov
rolb
daa
call
cld
or
fstps
rclb
jmp
sbb
jne
xor
fcomi
lods
xchg
and
movsb
xchg
mov
add
scas
fbstp
xchg
or
fdiv
pop
push
mov
dec
or
dec
cld
scas
loop
adc
add
fsubrs
push
mov
repz
pop
xor
das
adcl
cmpsb
adc
imul
mov
xchg
dec
dec
pop
xor
and
sbb
cli
inc
add
push
cmpsb
mov
and
fists
arpl
aam
add
fidivl
hlt
add
inc
fsubrs
add
mov
daa
movsb
inc
inc
push
pop
dec
adc
mov
test
negl
push
data16
mov
adc
inc
adc
daa
les
sarb
lret
rcrl
cs
or
dec
xlat
popf
push
mov
pop
roll
test
or
and
imul
pop
mov
mov
bound
lods
push
pop
cmp
xchg
lahf
push
fs
lea
mov
jecxz
stc
repnz
cmpsb
pop
arpl
dec
inc
mov
xchg
xchg
pop
pop
mov
inc
les
pop
cmp
adc
pop
push
sahf
and
mov
sbb
stos
icebp
adc
inc
xor
aad
mov
xlat
mov
leave
pop
sar
mov
push
cwtl
in
lods
inc
mov
mov
out
repnz
clc
mov
inc
dec
rol
not
icebp
aam
fs
nop
xor
loope
leave
repz
push
add
adc
cmp
insb
jae
xor
pop
nop
mov
fsubs
pop
inc
dec
adc
popa
mov
or
rolb
int3
sti
in
lcall
insb
mov
or
movl
xor
pop
outsl
jae
ljmp
xor
push
xchg
fucom
leave
lret
test
jecxz
jo
ret
jo
fninit
lods
push
mov
cmpsb
fld
or
pop
pop
lods
mov
adc
int3
xchg
dec
sbb
xchg
mov
dec
mov
dec
in
jo
fs
push
cmp
fdivs
int3
sti
shrl
add
sbb
jne
cmpsl
push
testb
dec
stc
nop
mov
or
push
mov
fisttps
sub
das
fsts
adc
dec
jecxz
js
cmp
xchg
aas
jae
mov
mov
adc
inc
cmpsl
iret
icebp
mov
repz
xor
insb
cmpsb
lret
jne
cmp
sub
filds
pop
lods
sbb
xlat
sub
fisttpll
adc
ret
xchg
xchg
ljmp
sbb
loopne
lea
and
add
pop
inc
push
cmp
jo
add
cmp
int3
lret
and
inc
push
jbe
cmpsl
rclb
clc
push
cmp
pop
data16
and
mov
ljmp
xchg
scas
stc
adc
cld
fldenv
fnstsw
or
jb
sbb
outsl
xchg
int3
and
and
pushf
xchg
rolb
je
mov
lret
cmpsb
and
xor
inc
outsb
add
rolb
int3
fstps
sbb
jns
inc
cmp
inc
roll
pop
test
inc
mov
outsl
ss
adc
mov
pop
mov
xchg
int3
dec
jmp
push
push
cmpsb
mov
jnp
adc
mov
mov
lds
scas
inc
loope
jb
data16
add
imul
inc
jp
ljmp
push
add
or
orb
out
mov
sarl
pop
lea
test
jo
icebp
mov
out
mov
mov
repnz
in
nop
ja
negb
xchg
dec
leave
sbb
nop
sahf
xor
fdivrs
or
fsubl
scas
into
sub
sub
inc
pop
js
clc
mov
test
pop
jg
test
sub
lret
push
fld
pop
push
sub
mov
cltd
cld
movsl
adc
cltd
fsts
or
lods
in
adc
and
mov
out
leave
cmp
adc
popf
movsl
inc
cld
jb
insl
xchg
adc
loopne
push
inc
xor
mov
and
ret
adc
mov
fiadds
insb
mov
enter
pop
push
jmp
arpl
mov
cmp
dec
lret
pop
in
inc
mov
outsb
arpl
in
inc
cmp
push
cld
lret
push
pop
push
ss
inc
sarl
sub
push
dec
or
loop
inc
pop
and
movb
mov
pop
inc
dec
cmp
fnstenv
adc
cli
and
test
cmp
sub
mov
pop
sti
inc
iret
loope
xchg
lret
adc
popa
fwait
and
ss
insl
jmp
or
adc
inc
push
push
rcrb
xchg
mov
jg
pop
mov
in
aaa
add
inc
clc
in
test
xchg
pop
std
int
mov
xor
xlat
add
dec
inc
xlat
pop
inc
sbb
data16
xor
inc
ficompl
jae
add
js
push
cltd
cmp
inc
adc
fs
ja
adc
dec
test
cmp
pop
repz
into
inc
sub
je
jae
pop
inc
icebp
push
push
add
inc
jns
push
in
sahf
subb
sbb
les
outsb
sub
and
popa
inc
outsb
fwait
push
jbe
rcrb
inc
movb
and
lock
mov
bound
sub
mov
notb
in
mov
or
sbb
imul
fwait
push
das
jne
dec
in
fnstcw
cltd
in
sbbl
cld
in
push
jge
jnp
daa
fs
dec
sub
or
inc
notl
daa
mov
adc
inc
pop
out
or
and
pushf
movsl
andb
les
jns
mov
mov
cmp
sbb
push
adc
andb
sub
icebp
adc
jmp
sbb
addr16
shl
cmp
fstps
cmpsb
dec
and
testb
movsl
sub
push
les
subl
pop
jb
jg
dec
mov
in
cmp
shr
int3
sub
sub
mov
and
mov
aam
xchg
add
cwtl
into
xchg
rcll
or
pop
or
scas
sub
movsb
scas
cmp
inc
testb
aas
xchg
push
fnstsw
sub
repz
icebp
pop
xchg
push
pop
arpl
repnz
int3
pop
int3
add
int3
dec
pushf
das
mov
sbb
sub
lret
ret
stos
movsb
mov
int3
fdivrp
hlt
inc
sbb
imul
popf
es
and
pop
cmpsl
fnstenv
mov
inc
sub
mov
xchg
ljmp
push
mov
int3
pop
push
add
adc
xchg
sbb
outsb
cli
inc
loopne
aaa
mov
pop
pop
stos
and
dec
pop
xchg
imul
jp
clc
sub
sub
mov
out
subb
repnz
pop
mov
roll
stc
into
mov
inc
adc
jnp
sbb
sbb
push
dec
cmp
sbbb
xchg
pop
stos
fnsave
mov
lods
push
cltd
sbb
rcl
in
adc
aam
imul
fildl
lods
mov
mov
pop
push
mov
popf
sbb
push
xchg
jnp
inc
daa
jp
sahf
test
jae
std
jne
popf
ficoms
scas
pop
fldt
push
cmpsb
inc
pop
loopne
pop
nop
inc
xor
out
nop
pop
xor
in
xlat
ds
mov
dec
jge
jns
sbb
cld
out
sbb
in
mov
jge
mov
xor
je
pop
pop
int
pop
movsb
mov
test
outsl
test
test
cltd
mov
rcll
push
adc
dec
cmpsb
jnp
cmp
lods
inc
mov
cmpsb
cmp
fucomi
addb
dec
int3
das
cwtl
or
subb
loop
imul
inc
into
imul
iret
ud1
movsl
xor
fcomp
fsts
idiv
inc
cmp
dec
movsb
lods
pop
jne
mov
mov
cmp
inc
movsb
movsb
gs
shll
dec
inc
adc
add
xchg
and
hlt
rorb
xchg
adc
xchg
mov
loop
shlb
das
dec
dec
mov
repnz
hlt
repz
lcall
sbb
mov
pop
bound
inc
xchg
adc
push
pop
adc
cmp
add
icebp
int3
gs
jno
jmp
test
cmpsl
cmp
outsb
xchg
inc
xchg
stos
daa
jne
xchg
hlt
fstpl
xor
push
mov
jecxz
xchg
mov
cmpsb
xor
out
mov
mov
repz
xor
push
mov
ljmp
lods
mov
dec
inc
push
or
imul
cmc
cmp
cmpsb
dec
les
pop
aas
pop
cmp
and
int3
test
mov
xor
pop
lret
scas
sub
or
ds
jb
data16
mov
cld
sbb
jecxz
movsl
imul
lea
pop
outsl
mov
jg
jg
pop
inc
std
sub
repnz
loop
jo
cld
push
ja
mov
sbb
mov
iret
mov
pusha
ret
xor
repz
lcall
daa
pop
dec
adc
lret
mov
jle
int3
pop
push
or
mov
adc
sub
push
mov
xchg
rcr
adc
dec
les
mov
lret
jnp
or
jns
push
in
inc
pop
scas
push
rcrl
int3
dec
pop
jmp
in
stos
daa
cmpsb
jae
jmp
scas
inc
rcrl
pop
movsl
outsb
into
aas
mov
jge
mov
cmp
sub
scas
cmpb
cmp
mov
push
jge
loop
loop
lea
das
sbb
es
pop
js
adc
icebp
sahf
cmp
lret
jo
add
aam
imul
stos
lods
sbb
dec
pop
xor
xor
ljmp
nop
inc
sbb
mov
xor
pop
jle
ror
fiadds
sbb
pop
icebp
mov
xor
repnz
inc
mov
add
mov
push
xchg
mov
or
test
mov
js
pop
sbb
mov
push
jge
pop
fidivl
arpl
bound
push
jns
fistl
sbb
mov
pop
jle
push
jne
insb
ds
out
gs
ret
pop
icebp
inc
xchg
in
pop
inc
push
gs
cmp
adc
mov
lret
test
loopne
test
pop
je
fmul
cmp
push
int3
mov
dec
xorl
pop
shlb
adc
lds
fbld
sti
aaa
into
jecxz
pusha
bswap
cmp
out
cmp
out
jo
nop
pop
adc
cmpsl
movsb
sarl
js
testl
jne
lret
pop
add
jecxz
mov
push
jns
xchg
imul
rolb
daa
stc
pop
sub
mov
lret
loope
fsts
xor
call
mov
flds
dec
inc
test
into
pop
mov
in
sti
sbb
jb
imul
ret
inc
push
icebp
sbb
ds
fcoml
das
ljmp
outsb
int3
lahf
aam
rclb
cmpsb
push
dec
ss
or
cmpsb
fsub
mov
cltd
popf
pop
mov
sbb
int3
pop
movsl
out
dec
ret
xor
pop
mov
fstl
mov
inc
lcall
xor
bound
mov
xchg
mov
fidivrl
lahf
inc
xor
push
cmp
sbb
cmpsb
test
and
bound
pop
inc
pop
jnp
in
mov
lret
or
jno
fsub
test
inc
jge
cmp
push
cmpsb
dec
sbb
popa
sbb
int3
pop
push
pop
aaa
xchg
sub
add
inc
ds
insb
mov
add
inc
cmp
mov
es
push
or
adc
pop
mov
pop
xchg
and
subb
int
pop
loope
xchg
pop
cmp
leave
bound
adc
js
mov
loop
mov
aad
cmp
popf
mov
adc
mov
mov
stc
mov
cwtl
push
fiaddl
and
cmc
pop
mov
hlt
push
jmp
inc
sahf
pop
lds
sarb
leave
dec
dec
inc
xor
dec
shl
dec
and
fistps
push
mov
je
push
jns
popf
js
inc
in
pop
xor
stos
xchg
jle
faddp
int3
js
mov
les
sahf
jb
and
mov
and
les
aaa
sbb
mov
mov
dec
les
jl
mov
imul
aam
and
pop
sti
insb
pop
jns
xlat
pop
cmp
and
stc
cmp
hlt
cmp
int
jns
mov
xor
add
push
scas
mov
sub
cmpb
inc
ljmp
fsubs
ret
test
mov
sub
mov
les
adc
mov
mov
push
sub
xor
push
xor
or
inc
cmp
fucomip
sbb
pop
cmp
or
mov
add
push
dec
adcb
test
mov
aad
cmpsb
test
sbb
mov
cwtl
mov
lahf
shrb
mov
fldenv
inc
ret
jns
and
pop
sbb
xor
mov
fldz
mov
cmpsb
int
inc
bound
or
and
sbb
dec
jp
push
cltd
inc
adc
inc
mov
loope
mov
js
lcall
sub
mov
loop
mov
lcall
pop
int3
mov
mov
pop
xlat
adc
xor
sar
pop
hlt
outsb
pop
lods
int3
subl
idivb
cmpsb
out
cmpsb
mov
xor
das
mov
insb
ret
fistpl
jb
mov
int3
in
cli
jl
fwait
test
mov
rcll
mov
sbbl
pop
mov
push
mov
jge
out
arpl
lahf
pop
pop
xchg
cmpsl
xchg
aad
inc
cmp
push
call
lods
addl
or
mov
fsubs
jp
int3
add
arpl
mov
mov
lods
out
inc
add
cmpsl
fisttps
inc
push
in
add
pop
outsl
js
inc
jmp
cmp
divb
inc
mov
cwtl
or
into
jmp
pop
lods
push
lret
xchg
clc
fwait
cmp
mov
sub
nop
pop
aam
push
push
test
jl
mov
insl
mov
or
stos
push
rcll
lock
mov
mov
ficomps
adc
addb
test
xchg
mov
pop
sub
xchg
inc
scas
data16
jbe
enter
ja
cld
jae
lock
mov
mov
lds
int
mov
pop
fldcw
push
fistpll
sti
outsl
in
mov
fstl
jmp
jle
inc
add
xor
pop
and
and
lcall
mov
dec
popa
std
pop
testl
jne
pop
es
adc
nop
cmp
cmpsb
stc
test
xor
add
inc
scas
pop
mov
and
add
pop
shlb
nop
jns
je
mov
int3
push
dec
jle
jp
cmpsb
test
lcall
xchg
int3
adc
dec
pop
lods
insb
leave
mov
dec
scas
mov
sbb
and
cmp
and
pushf
rolb
mov
add
sbbb
mov
xor
inc
dec
add
cmp
mov
cmp
out
lcall
mov
fbstp
mov
cmp
loopne
cmc
int3
cltd
outsb
or
outsb
pop
ret
inc
jg
mov
pop
mov
lret
aas
leave
pop
cmpsb
test
ljmp
inc
dec
push
addr16
bnd
sub
bound
inc
fisubl
inc
js
jnp
mov
cmp
cltd
push
xor
push
inc
sbb
dec
xor
mov
pop
ljmp
jb
bound
adc
sbb
jmp
ss
icebp
or
or
pop
or
mov
xchg
arpl
mov
out
add
mov
push
mov
rcll
cmc
ret
mov
mov
mov
repz
sub
inc
jno
cmpb
cmpb
stos
out
cmp
scas
outsb
lock
and
pop
adc
xlat
fists
incl
ds
mov
test
leave
std
fadd
add
sbb
pop
gs
repz
insl
inc
mov
roll
push
es
lods
imul
inc
outsb
dec
popa
dec
jecxz
dec
add
jb
aas
lea
jae
jno
lods
insl
xchg
mov
sub
leave
and
jnp
inc
mov
lret
mov
inc
fnstenv
jno
mov
test
mov
jge
loope
jbe
inc
push
testl
adc
pop
mov
scas
cmpsb
imull
iret
arpl
imul
pop
aas
lret
xor
lret
push
in
dec
fsubrl
in
insb
pop
outsb
in
out
sbb
je
jno
inc
push
sbb
lds
xchg
jno
inc
or
mov
sbb
pop
jecxz
xor
mov
sub
push
into
lcall
jns
pop
cmpsl
inc
adc
clc
int3
xchg
cli
inc
arpl
mov
fidivrs
jae
aaa
fisttps
iret
arpl
mov
mov
push
in
popa
fistpl
add
and
or
or
ljmp
testl
mov
cmp
cli
mov
idivl
mov
andl
scas
pop
ds
leave
icebp
aad
add
int3
and
pop
aas
xchg
mov
call
push
pop
das
outsb
pop
add
movsl
sub
sub
loop
dec
psubsb
stc
and
mov
cmp
jge
mov
adc
pop
out
mov
es
decl
push
inc
xlat
mov
neg
pop
out
jle
sahf
rclb
xchg
outsb
xchg
inc
dec
orb
mov
cmc
sbb
les
enter
outsl
testl
pop
push
xor
inc
enter
xlat
or
mov
jge
push
ret
inc
inc
inc
inc
mov
sub
dec
push
cmpsb
add
inc
push
int3
cmpl
and
dec
aaa
out
push
jmp
mov
lea
or
stos
adc
push
sbb
mov
es
cmpl
mov
cld
jno
imul
dec
test
or
inc
pop
jo
jns
dec
mov
inc
lds
aas
dec
aas
les
push
lret
mov
test
jno
ljmp
outsb
add
push
lea
inc
je
inc
pop
push
inc
sub
ljmp
xor
ret
les
xlat
jno
or
add
push
int3
addr16
mov
mov
jbe
add
mov
mov
lret
stos
inc
cs
sub
push
mov
add
inc
pop
push
sub
push
out
pop
ja
mov
mov
inc
jns
inc
inc
push
fwait
pop
cmp
lcall
lea
dec
lcall
pop
cmpsl
das
aad
lods
and
gs
in
cmp
mov
aam
lds
and
and
test
push
jp
push
xor
cltd
out
lods
push
inc
push
je
mov
add
inc
les
sub
inc
ja
jns
lds
inc
inc
or
jge
pop
push
repnz
call
insb
lcall
movsb
testl
jbe
pop
sbb
push
xchg
fwait
jns
aam
or
inc
loopne
movsb
xchg
outsb
pop
mov
or
orl
stos
orl
mov
inc
mov
ret
xor
pop
fmulp
cltd
inc
mov
je
sub
xor
xor
inc
in
add
fucom
es
cmpb
adc
dec
lcall
or
inc
test
lock
inc
mov
push
loope
xchg
cwtl
pop
sub
movsl
xor
ds
inc
lret
push
xor
mov
into
jl
loop
aam
mov
inc
pop
sbb
stos
loope
push
dec
stos
mov
xor
js
ds
jl
aas
xchg
shrb
js
mov
aas
stos
mov
pusha
xor
bound
jnp
movsb
pop
loope
fdivrs
call
loopne
jnp
cmc
mov
xchg
je
dec
shlb
xchg
jbe
outsb
inc
adc
mov
jge
xor
pushf
cmp
ror
pop
jbe
mov
dec
rolb
push
inc
adc
jg
push
pop
push
dec
or
inc
mov
sti
jmp
adc
mov
cmpsb
pop
or
pop
aaa
xchg
pop
faddl
mov
sti
jp
das
aad
mov
mov
les
dec
stc
dec
in
pop
mov
mov
push
cmp
xchg
inc
push
loopne
pop
mov
push
push
pop
or
ss
dec
add
or
repnz
add
add
cmp
inc
divb
mov
cltd
jecxz
mov
dec
ret
popf
push
fs
inc
pop
sub
cli
or
inc
push
sub
cmpsb
ror
jp
pop
loop
enter
inc
fcoms
push
mov
cwtl
mov
stc
cwtl
inc
add
hlt
mov
in
mov
add
lret
subb
lds
jb
mov
lret
adc
repnz
xchg
test
imul
loopne
jbe
repz
mov
push
scas
lods
sahf
hlt
push
pop
arpl
jnp
adc
push
inc
lret
cltd
cltd
sub
cmp
inc
add
stc
in
inc
jl
sub
bound
jae
fmuls
mov
xor
test
cmp
jb
popf
jbe
fidivrl
pop
sbb
cli
inc
and
push
dec
mov
pop
out
jne
imul
adc
xchg
and
mov
in
adc
mov
add
jnp
jno
mov
add
mov
push
cmp
cmp
jge
test
repnz
and
inc
adc
jle
adc
mov
push
mov
cmp
int
and
cwtl
cmp
adc
sbbl
in
xchg
rcrb
or
cmpb
mov
inc
jg
xchg
cld
andb
bound
mov
leave
cmp
mov
jg
fstps
stos
push
inc
cmc
div
jecxz
pop
scas
scas
xor
pop
int3
jno
sub
aaa
andb
pop
aam
fisubl
mov
jmp
test
stos
jle
xlat
dec
cmpsb
ss
outsb
aaa
cwtl
or
inc
dec
leave
in
inc
mov
push
loop
lock
test
cmp
popa
xlat
pop
inc
lods
cwtl
adc
mov
test
jle
inc
push
mov
mov
rolb
imul
arpl
inc
dec
push
push
test
mov
pop
xchg
or
popa
dec
lahf
dec
xor
int3
hlt
scas
repz
adc
int3
add
mov
shrb
pop
icebp
movl
lret
insb
sbb
lahf
inc
hlt
fsubrs
leave
aam
cmpsb
ret
cmpsl
xchg
xchg
stc
push
inc
xchg
cmp
dec
add
in
jl
sarb
test
int3
xchg
push
or
xchg
xor
ljmp
dec
pusha
lods
or
cmp
test
les
call
add
cmp
push
push
sahf
arpl
loop
push
call
dec
jnp
clc
add
push
mov
xlat
stos
or
mov
mov
in
mov
jle
nop
mov
outsb
and
flds
mov
pop
mov
mov
int3
xor
and
cld
cwtl
dec
cmp
fcmovnb
or
sahf
cmp
enter
jne
dec
pop
iretw
xor
int3
test
or
mov
adc
out
inc
lret
sbb
lahf
cmp
add
xchg
or
aaa
test
stc
fxch
mov
cmpsl
mov
into
mov
bound
sub
jb
adcl
pop
cmc
dec
popf
dec
sbb
mov
jecxz
lret
or
and
xlat
xchg
dec
ret
push
mov
test
xorl
jl
je
stos
jns
ljmp
iret
mov
adc
ret
loop
inc
iret
push
mov
mov
enter
add
pop
pop
mov
out
aam
test
jbe
jo
pop
dec
cmp
cmpsl
sti
insl
inc
out
sub
xor
cmp
add
push
mov
cmpl
hlt
jp
push
test
dec
xor
mov
stos
inc
push
cmpsb
arpl
ss
dec
lods
call
scas
push
xor
or
pop
pop
inc
clc
inc
or
incb
jne
sbb
shl
cmpsb
out
cmp
xchg
into
jne,pn
xor
ds
clc
jmp
data16
inc
sahf
sub
pop
test
xchg
popf
mov
sarb
sub
push
stos
roll
inc
dec
ds
shrb
adc
sar
sbb
xchg
pop
or
jecxz
pop
lods
lds
cld
hlt
xchg
pop
mov
iret
gs
xor
push
imul
or
jo
stc
jecxz
scas
mov
aas
sbb
adc
insl
in
adc
lods
pop
jbe
cmpsl
das
jmp
int3
fstl
bound
repz
inc
jp
mov
dec
pop
stos
add
dec
and
sbb
xor
into
xchg
mov
cli
sti
add
add
movsb
outsb
cmpsb
push
pop
in
outsb
test
shlb
repnz
aad
mov
push
ds
repz
pop
fs
std
inc
and
mov
pop
fwait
mov
cmp
aaa
add
add
adc
sahf
inc
cmpsb
push
pushf
shrl
fwait
sbb
jmp
inc
icebp
push
std
dec
dec
pushf
pop
int3
mov
addr16
stos
mov
cmpsb
adc
xchg
dec
sarb
push
test
imul
sub
mov
loope
es
mov
pushl
cld
fidivs
push
jg
leave
pop
pusha
stos
filds
leave
dec
in
sbb
push
mov
add
dec
pop
xchg
mov
movsb
xor
sahf
fimull
fdivl
xor
mov
mov
ss
xor
push
or
bound
pop
stos
movsb
mov
lcall
pop
jecxz
cmp
adcl
push
xchg
fistpl
mov
pushf
cmpsb
adc
bound
jne
cmpsl
push
mov
or
mov
clc
and
loopne
in
rorb
cmc
add
ds
jl
push
test
insl
dec
daa
xchg
pop
push
adc
mov
xchg
or
incb
mov
mov
das
mov
push
push
push
jne
cmp
bound
push
in
pop
out
outsl
enter
insb
push
insb
inc
inc
hlt
in
dec
push
cmp
mov
fsubrl
aam
or
imul
mov
sbb
adc
dec
mov
adc
cld
dec
pop
mov
xchg
mov
pop
scas
fisttpl
fsubr
xchg
movsb
stc
stos
jmp
add
scas
in
frstor
mov
xor
jecxz
xchg
aam
inc
xor
pusha
xchg
fdivrs
cmpsb
stc
jp
mov
fstp
int3
or
ja
mov
ds
addl
outsl
or
cmpsb
orl
xchg
inc
ss
lret
out
pop
notl
add
mov
pop
and
add
pop
inc
cmp
jae
das
pop
add
jle
roll
das
pushf
pop
jge
lret
imul
outsl
inc
mov
mov
aam
loopne
sub
fsubs
xchg
les
sbb
cmp
xlat
add
shll
xchg
shrl
std
data16
stos
test
xor
orb
xchg
add
jg
lahf
dec
enter
cmpb
outsl
push
lods
int3
mov
outsl
and
or
cmp
fimull
mov
jae
xchg
pop
push
jne
fiaddl
icebp
stos
dec
ja
xchg
insb
pusha
cld
loope
xchg
out
mov
cmp
mov
int3
lea
scas
enter
hlt
mov
inc
cs
test
jo
adc
int3
push
pop
mov
sub
cmpsb
push
scas
insb
cld
mov
ljmp
pop
test
adc
test
dec
inc
lds
in
sub
lods
ret
mov
sti
jle
repnz
nop
xchg
push
mov
incl
mov
arpl
sub
test
inc
pop
daa
test
int3
xor
pop
hlt
inc
icebp
inc
dec
data16
lret
dec
shrl
int3
xchg
shlb
cmpsl
pop
repnz
lret
push
mov
.byte
mov
pop
data16
test
imul
jl
in
movsb
pop
cs
add
repz
lahf
jl
push
adc
inc
lahf
fldenv
jl
insw
mov
xchg
js
inc
push
xchg
dec
push
push
cli
mov
push
test
rclb
inc
mov
jmp
xchg
mov
enter
ljmp
outsl
mov
xor
or
add
push
in
orl
aam
mov
cmp
test
inc
push
mov
sub
push
imul
mov
inc
or
and
mov
fdivrl
jecxz
pop
push
mov
and
cwtl
mov
shlb
inc
inc
xchg
dec
add
xor
fsubrl
es
dec
push
mov
aam
and
sub
pop
mov
sbb
cwtl
flds
mov
dec
movsb
repnz
dec
dec
or
je
cmpsb
dec
pop
mov
or
inc
add
mov
push
sbb
das
inc
jge
push
lret
std
sbb
pop
pop
stos
shl
inc
dec
scas
ds
in
lock
ror
xor
mov
pusha
cs
js
inc
cwtl
icebp
movsl
adc
inc
xor
xchg
outsb
pop
clc
dec
pop
push
xchg
clc
jmp
fbld
test
push
pusha
pop
dec
jg
push
in
jns
mov
xlat
jmp
cmpsb
push
cmpsb
inc
mov
dec
daa
mov
movl
adc
jbe
push
setns
movl
inc
push
call
sub
cmp
dec
fimull
xor
and
adc
xchg
pop
xchg
pop
dec
or
push
lahf
stc
mov
jmp
in
stc
or
idiv
add
loop
sarb
cmp
inc
or
jg
repnz
cmp
stos
popf
jmp
fldcw
sub
mov
mov
xor
stos
lret
push
xor
test
scas
movsb
add
les
cmpsb
outsb
cmp
pop
xchg
call
stos
dec
cltd
pop
out
sbb
push
adc
rcll
xchg
inc
adc
pop
mov
mov
xor
sub
fisubrl
jp
jge
iret
push
lahf
enter
jo
cmpsl
inc
call
xchg
xchg
or
inc
and
call
sahf
bound
mov
into
mov
dec
pop
and
push
jno
and
mov
pop
push
lret
push
add
adc
push
inc
inc
xchg
inc
popf
add
loop
adc
out
mov
xor
cmpsb
mov
cltd
or
sub
cwtl
in
pop
ficoml
add
sqrtps
js
push
add
pop
fwait
sar
fildl
pop
hlt
xor
pop
cwtl
xlat
mov
push
or
cmp
mov
popa
cmpsb
push
cltd
jno
xor
iret
out
mov
test
adc
setle
call
call
out
dec
incb
fisttpl
pop
or
xlat
sub
ficompl
sbb
inc
cmp
inc
jae
sbb
lcall
sbb
cs
jg
in
imul
jo
xor
inc
arpl
out
or
pop
cmpsb
call
add
inc
imul
jns
and
inc
std
inc
aad
cwtl
mov
xchg
pop
std
repz
mov
push
jp
ret
sub
imul
pop
inc
leave
push
adcl
adc
or
xor
inc
movsl
jb
je
dec
shl
mov
mov
cmpl
pop
insl
je
push
adc
test
dec
jnp
inc
pop
scas
or
inc
push
push
aam
mov
mov
and
stos
mov
arpl
xlat
sub
mov
mov
test
out
or
xor
sete
iret
mov
mov
int3
sub
imul
mov
mov
lret
jbe
jbe
pop
dec
sbbb
add
jne
cmpsb
and
ds
adc
cmpsb
test
jl
jns
sbb
adc
pop
inc
pushf
cmp
jl
movsb
repnz
adc
out
push
sbb
mov
stc
leave
out
loopne
arpl
jmp
movsb
pusha
inc
ret
xor
add
in
xor
int3
mov
imul
add
ljmp
aas
jge
int3
sub
repz
xchg
xor
inc
aad
shld
je
sbb
sub
daa
mov
clc
and
cmp
and
dec
pusha
shl
xchg
fcmovne
cld
cmp
fwait
dec
aaa
mov
mov
xor
rol
xchg
dec
lods
fsubrl
dec
lea
mov
xor
inc
adc
cltd
sbb
push
jno
cmp
or
xor
inc
aad
scas
jne
pop
mov
inc
dec
and
add
sbb
and
xchg
or
arpl
pop
jge
aaa
sti
rclb
sbb
sub
jns
les
out
add
inc
inc
lcall
adc
addb
fwait
movsl
in
jo
insb
fiaddl
imul
pop
loopne
test
and
pop
test
je
pop
sbb
stos
sbb
addb
xchg
inc
pop
divb
dec
sub
xchg
mov
cmp
push
mov
push
loop
hlt
xor
mov
sbb
insb
les
int3
aad
pop
cmp
sbb
jne
in
shll
fwait
pop
inc
mov
ret
lea
ljmp
leave
mov
mov
iret
stc
cmpsl
and
imul
pop
dec
test
adc
fnstcw
mov
repz
mov
test
add
mov
inc
shlw
bound
hlt
xchg
or
or
repnz
pop
rorb
out
clc
int3
xchg
cmp
aam
shl
popf
add
inc
lock
movsl
pop
xlat
cmp
stos
icebp
sti
mov
mov
pop
psllw
pop
pop
push
cmp
scas
mov
jle
pop
inc
repz
xor
mov
les
in
inc
lret
stos
int3
add
add
mov
fstps
leave
dec
int3
clc
push
push
out
cmpsl
test
mov
fwait
xchg
inc
clc
push
outsl
xchg
out
xchg
sbb
mov
and
lret
mov
outsb
jge
addl
loopne
ret
sbb
xchg
sub
mull
push
aam
movsl
int3
cmpsl
loope
dec
in
fistl
adc
and
inc
mov
ljmp
push
insl
pop
cmpb
lcall
movsl
cwtl
dec
sub
add
aad
mov
and
or
fs
stos
inc
xchg
js,pt
add
mov
mov
inc
in
cmp
mov
lret
in
dec
leave
sbbb
jecxz
mov
imul
jg
jecxz
les
dec
shrb
add
dec
pop
adcl
fstps
jecxz
mov
push
push
in
out
mov
ljmp
pushf
icebp
jmp
in
sub
pop
pop
xor
insb
cmp
sub
jns
push
xor
fxam
pop
cmpsb
push
std
cmp
movsl
or
lods
sub
clc
pop
dec
ja
pop
pop
pop
xor
rcrl
mov
inc
add
lret
jne
add
js
insb
test
arpl
int3
xchg
ficoml
dec
cmpsb
dec
jge
sub
inc
or
aaa
data16
dec
mov
push
cmpsb
std
lods
shlb
cmp
lret
xchg
inc
pushl
fnstsw
sbb
xor
pusha
les
xchg
inc
cmp
mov
imul
inc
inc
lcall
pop
jbe
mov
mov
mov
jmp
ret
das
or
rorl
push
out
out
inc
dec
xchg
loop
add
negb
mov
pop
jp
sbb
pop
test
and
lods
int3
sbb
xor
les
pop
jb
and
and
xlat
sbb
out
dec
inc
dec
clc
pusha
out
jp
in
push
out
or
adc
xor
jle
in
dec
inc
aaa
test
fdivrl
push
mov
je
ja
or
mov
pop
sahf
hlt
stc
mov
pop
orl
and
lods
fmul
mull
jmp
adc
les
shr
sub
mov
div
les
ljmp
out
jmp
in
mov
pop
insl
pop
fidivrs
leave
push
andb
int3
sti
jbe
mov
mov
xchg
fidivs
sub
fmuls
bound
mov
call
mov
outsl
insb
stc
stos
popf
test
add
fldcw
je
nop
push
mov
mov
fwait
push
mov
int3
loop
aad
mov
mov
into
js
xchg
pop
add
cmp
xchg
xor
xor
mov
cltd
jbe
repnz
mov
xchg
ret
dec
xchg
add
ret
call
fucom
push
push
idiv
adc
insb
sub
add
pop
jmp
lea
adcb
push
shll
xor
pop
cmpb
sub
inc
jle
push
cmpsl
jo
sbb
lret
inc
inc
cmp
xor
add
lahf
fldenv
mov
or
rolb
push
sbb
add
cmp
pop
daa
xchg
mov
mov
sub
scas
ret
int
fstpl
add
xor
lret
push
pop
xchg
push
or
int3
insb
dec
out
mov
xor
aad
mov
pop
scas
xchg
lds
int3
xor
scas
cltd
xlat
cli
enter
aam
ret
in
pusha
sbb
lcall
lcall
mov
insl
cwtl
xchg
or
cwtd
iret
xorl
ret
das
and
test
orb
iret
pop
hlt
mov
mov
nop
push
popf
stos
pop
loope
or
mov
lret
xchg
mov
stos
adc
addb
sbb
jecxz
int3
pop
dec
mov
aam
movsb
inc
ss
mov
lret
push
push
js
ret
adc
add
insl
inc
jp
add
lret
cmp
mov
cmp
sub
cmp
jge
dec
dec
je
out
push
loopne
call
sbbb
push
js
lahf
imul
cs
int3
cmp
adc
push
out
and
es
push
mov
xor
mov
sbb
stc
insb
mov
out
jg
notb
xor
mov
push
xchg
cmp
out
insb
or
mov
pop
sub
sar
and
cltd
pushf
mov
jbe
mov
fidivrs
in
and
int3
ror
pop
insb
lea
add
gs
xchg
clc
out
lea
not
fdivrl
mov
rolb
mov
or
ror
sub
pop
jb
or
jne
cmc
xlat
fldl
int3
mov
out
test
cmp
mov
mov
mov
jns
into
addr16
popa
cmpsb
int
inc
cmp
mov
pop
inc
mov
and
jnp
add
pop
les
inc
cmp
cwtl
pop
mov
subl
int3
out
icebp
fs
mov
add
jbe
test
push
fwait
dec
insb
jp
mov
test
leave
test
xor
addb
int3
ljmp
xchg
sub
dec
in
pop
dec
sub
fcoml
mov
sbb
imul
popf
enter
popf
cmp
jns
sub
pusha
or
stos
aas
jb
sbb
sbb
or
sub
jbe
xchg
fiaddl
inc
imulb
lret
repz
fdivp
dec
int3
ret
push
loopne
jle
mov
sbb
push
dec
jb
fiaddl
push
pop
stos
lret
pushf
mov
sub
shll
xchg
sbb
xor
stos
aam
out
xor
sbb
xchg
mov
dec
dec
icebp
mov
aaa
js
add
lret
scas
fs
ljmp
xchg
das
add
add
cmpsb
adc
dec
lods
insb
xchg
mov
lahf
in
adc
les
out
call
int
push
mov
pop
pushf
push
xor
mov
rorb
cmc
dec
fistpll
jb
lret
stos
push
out
and
in
cmp
jnp
push
in
out
sub
sub
in
inc
inc
cmp
leave
add
inc
pop
arpl
loopne
je
push
jp
arpl
into
sbb
push
xchg
into
fnstenv
inc
shl
add
imul
hlt
xor
lahf
sbb
xor
inc
xor
int3
cmp
or
dec
adc
xchg
mov
stos
aas
inc
lret
mov
add
mov
adc
pop
outsl
mov
loop
pop
mov
pop
test
dec
divl
sub
sbb
jg
ljmp
sub
fbld
inc
out
pop
and
insl
ss
mov
xor
sbb
pop
int
bound
push
pushf
xor
xor
dec
pop
sbb
imul
adc
clc
lods
sub
xchg
scas
mov
stc
out
jo
je
pshufw
es
daa
fwait
sbb
clc
dec
ljmp
mov
mov
test
std
imul
push
mov
xchg
ret
jmp
jbe
lret
sub
fldcw
stc
inc
test
js
hlt
inc
sbb
pop
pop
insl
fnstcw
lret
out
sti
fcmovbe
lahf
jno
mov
jnp
ja
mov
inc
andb
pop
mov
aas
arpl
dec
jmp
jb
int
inc
pop
rcr
hlt
inc
cltd
push
rolb
stc
sub
inc
cmp
call
dec
pop
movsl
push
je
dec
sar
cmpsl
mov
into
in
pop
enter
xor
adc
xchg
cmp
adcl
cmp
out
mov
pop
stos
or
pop
cmpsb
xor
testl
int
mov
inc
xor
jmp
jl
adc
addr16
xchg
addl
fiadds
sub
pop
jbe
jbe
push
dec
mov
cmp
and
out
aam
daa
ljmp
into
testl
push
fdivs
inc
inc
lods
xchg
je
pop
cmpsl
imull
cs
mov
bound
xorb
divb
ljmp
roll
mov
inc
pop
cmpsl
inc
cltd
pusha
andl
addb
push
test
hlt
pop
rcrl
xor
cmpsb
cmp
pop
push
movsb
hlt
or
lds
xor
mov
test
add
les
xchg
xchg
push
stos
pop
dec
ds
dec
fcmovne
lods
mov
pop
jo
mov
mov
into
inc
in
add
inc
and
ljmp
dec
inc
stos
mov
jecxz
jo
in
pop
rcrb
arpl
dec
xor
push
pop
cld
inc
mov
jle
fstps
dec
scas
sahf
and
or
adc
insl
lahf
test
and
pop
push
push
and
pop
gs
mov
idivl
addr16
cmp
mov
lea
mov
mov
xorl
pop
inc
jne
ret
scas
movsb
cltd
fsubs
fsubrp
push
mov
pop
stos
adc
push
call
cltd
add
xabort
cmp
sub
out
and
js
lret
int3
xchg
cwtl
daa
mov
fmuls
jb
movsb
inc
fcmovb
inc
dec
pop
push
mov
shlb
cmpsb
lret
pop
imul
int
mov
sbb
xchg
jnp
lds
hlt
inc
test
movsb
enter
ss
std
das
inc
adc
in
sbb
mov
push
sahf
adc
test
arpl
xor
faddl
adc
aad
fisubrl
pop
jp
adc
fwait
or
lret
adc
sarl
cmp
adc
les
mov
fcmovne
dec
or
adc
mov
mov
jecxz
push
adcl
dec
xchg
andb
mov
ret
std
or
fiadds
xor
enter
pop
addr16
mov
repnz
sti
hlt
pop
xchg
popf
loop
add
xlat
das
jb
or
xor
cmp
fldt
mov
leave
movsl
mov
int3
adc
nop
iret
mov
push
out
mov
mov
test
cmc
mov
test
jns
out
pop
stos
loopne
iret
int3
adc
xor
adc
cmpsl
scas
pop
adc
xchg
mov
cld
dec
xor
adc
adc
outsb
mov
iret
cmp
lcall
jns
cmp
lods
add
out
lcall
inc
jl
ret
clc
jecxz
dec
push
das
out
cli
mov
adc
rclb
mov
inc
roll
notl
mov
out
push
addr16
aad
movsl
mov
jns
andb
cmc
inc
lcall
pusha
or
repz
push
or
fcmovnu
ficomps
inc
xlat
pushf
and
sahf
mov
arpl
mov
xchg
repz
jg
rclb
insb
out
sbb
mov
mov
cli
enter
mov
fdivrs
outsb
stos
dec
xor
orl
mov
test
fidivrl
mov
je
int
xchg
sbb
int3
push
mov
mov
negb
repnz
insl
nop
dec
push
xor
loope
jbe
sub
addr16
push
cli
pushf
cltd
add
adc
sub
mov
xchg
push
sbb
xchg
adc
pop
cmc
inc
mov
clc
dec
and
mov
int3
aad
insb
sub
pop
in
shl
dec
cmp
mov
mov
in
push
out
les
cmc
out
push
inc
push
flds
sub
hlt
jne
repz
mov
inc
lea
lock
or
leave
mov
push
int3
add
fidivrs
pop
int
hlt
in
mov
cs
int3
xor
pop
ffreep
adcb
push
clc
and
loopne
enter
jae
les
das
mov
cmpsl
push
xchg
pop
push
jnp
and
test
outsb
mov
push
int3
das
xor
sahf
es
rorl
pushf
jg
add
or
jae
xor
pop
pop
lret
or
ss
sbb
inc
inc
dec
filds
cmc
lret
xchg
dec
popl
mov
stos
lods
int
int3
sbb
dec
mov
lods
mov
movsb
push
xorl
pushf
mov
out
xchg
in
pop
or
pop
xchg
lret
cmp
fwait
mov
pusha
sbb
xchg
inc
cmc
sub
scas
out
cmp
sbb
popf
test
mov
push
xchg
dec
add
cmp
in
xchg
mov
mov
int3
ss
xlat
sub
or
pop
shrb
ljmp
shrl
popa
mov
andl
hlt
aad
mov
cmc
inc
mov
aaa
ljmp
mov
jge
adc
xor
xor
add
xlat
mov
mov
or
jle
pusha
pop
stos
adc
mov
ret
aad
fsubrl
inc
dec
sahf
dec
sahf
andb
rcrl
lahf
push
imul
lods
dec
xchg
ret
inc
cmc
icebp
pushl
fisubl
cmp
shlb
inc
cs
repnz
push
bound
sarl
fsub
imul
jecxz
mov
sti
xor
inc
addr16
les
mov
push
add
mov
clc
cmpsl
xchg
push
lds
jl
mov
cwtl
add
and
mov
das
dec
jmp
cmp
in
popa
mov
xchg
lock
dec
xor
inc
sbb
aas
fsub
push
popf
in
jne
scas
cmp
push
xchg
jo
and
enter
sub
popf
cltd
mov
shll
inc
out
push
mov
cmpsb
dec
inc
push
jb
imul
sbb
rcl
incl
loop
and
fsubrs
in
lock
and
insb
daa
scas
add
lcall
iret
popa
and
int3
dec
std
lea
es
lock
and
pusha
inc
nop
mov
aam
aam
cmpsb
mov
out
pop
fs
dec
dec
mov
mov
or
mov
mov
test
aas
pop
pop
cmp
jae
popf
push
or
inc
push
loop
lahf
lahf
imul
cmpsb
xlat
sti
lret
add
ret
cli
adc
cmpsl
int
enter
jne
xchg
outsl
jge
push
xor
cmp
loopne
addr16
std
xor
aaa
ss
movsb
sarl
adc
sub
sbb
inc
cwtl
push
aaa
push
inc
mov
test
add
mov
and
es
lods
call
push
or
mov
and
cltd
nop
xchg
jb
rcrb
dec
dec
int3
insl
fmul
dec
sbb
movsb
cmpsb
mov
iret
rcrb
inc
jbe
or
mov
and
mov
inc
std
ret
jge
sbb
mov
jo
imul
xor
dec
pop
push
cmpsl
movl
sub
hlt
enter
jge
ljmp
sub
insb
js
cmpsb
add
xchg
lods
sbb
in
push
mov
fistl
daa
jne
call
sbb
int3
sbb
xor
gs
mov
mov
mov
sbb
cmp
test
mov
sbb
sbb
cmp
adc
dec
gs
inc
fcomps
sub
adc
mov
les
xor
xchg
cwtl
in
push
lret
fs
cmp
rclb
stos
or
xchg
pop
inc
inc
push
xchg
and
sbb
cmp
jnp
pop
shl
int3
inc
inc
cmp
loop
jl
bound
leave
inc
lret
xorl
jle
mov
cs
xor
mov
pop
mov
jo
mov
mov
xchg
mov
divb
xchg
dec
in
push
pop
push
rcrl
and
push
int3
sbb
sbb
xchg
pop
cmpsb
ret
nop
mov
mov
mov
mov
pop
push
jnp
out
pop
mov
scas
int3
test
push
inc
inc
cmpsb
xchg
jle
rcll
sbb
mov
mov
imul
sub
sbb
int3
sub
mov
sub
fdivrl
mov
cmc
test
inc
pop
mov
adc
mov
mov
lret
inc
jns
mov
mov
push
popa
sub
test
xor
test
iret
lock
xchg
lcall
jnp
jl
stc
mov
mov
adcl
out
lds
enter
addb
das
scas
loop
imul
popa
push
lret
pop
and
gs
xchg
rolb
push
es
pushf
lods
inc
add
ss
pop
les
call
or
enter
push
push
pop
div
push
sub
clc
test
int3
jae
les
cmpsb
es
rcr
cmp
ds
inc
xlat
xor
test
jecxz
lea
add
xchg
aad
mov
pop
aam
jecxz
std
pop
stc
fs
cwtl
test
mov
cmp
fs
out
mov
lods
and
cmc
xchg
out
jge
int3
ds
rcll
mov
loope
nop
test
cmp
push
movsb
ret
out
call
cmpsb
ror
jmp
rolb
cltd
je
es
pop
dec
pop
vandpd
lea
mov
fdivrl
mov
loopne
mov
imul
stos
xchg
pop
ss
mov
lods
jne
enter
push
push
outsb
pop
sub
jg
push
sbb
inc
arpl
xchg
mov
and
imul
mov
ja
cmpsb
arpl
xchg
and
add
xlat
pop
test
sub
mov
cmp
gs
xchg
sub
fsincos
mov
stc
fisubl
and
inc
cmc
or
lcall
or
rcrl
aas
push
jl
sub
inc
icebp
xchg
and
loopne
inc
imul
adc
in
add
mov
jmp
test
xchg
pop
mov
fildll
xchg
or
mov
loopne
bnd
sbb
sub
mov
adc
jns
fldenv
pop
rcll
mov
mov
int3
stc
mov
cmpsb
sbb
push
jno
arpl
fs
jmp
pop
cltd
pusha
movsb
notl
sarb
jge
clc
pop
mov
test
int3
push
mov
es
out
adc
inc
cwtl
ret
mov
inc
push
pop
loope
rolb
inc
lahf
mov
mov
and
fnstenv
dec
cmpsb
ljmp
mov
clc
jmp
movsl
test
adc
inc
aam
fs
testl
cmp
lock
movsb
xor
jp
adc
hlt
out
icebp
sbb
pop
mov
push
xchg
push
int3
movsl
mov
roll
ja
mov
ficomps
daa
mov
mov
cmpsl
int3
es
call
sahf
out
aad
cmc
adc
or
pop
in
enter
jecxz
add
inc
mov
jne
jmp
cwtl
sub
repz
imul
jns
mov
mov
dec
jmp
mov
ret
leave
add
push
inc
lret
inc
mov
pop
or
ja
faddl
pop
addr16
movsl
clc
or
push
or
imul
enter
or
in
bound
jae
loop
mov
dec
sbb
int3
xor
ss
mov
insl
stc
cmp
push
daa
imul
xchg
into
fnstcw
adc
push
pop
rcll
push
dec
mov
and
adc
xor
adc
dec
rorl
mov
decb
les
jecxz
and
int3
test
mov
fdivrs
push
mov
repz
xor
test
push
pop
test
dec
pop
and
insl
aad
add
pop
pop
in
xchg
push
or
jl
mov
fsub
inc
mov
or
pop
adc
or
and
and
inc
in
mov
sahf
nop
mov
pop
imul
mov
push
stc
mov
mov
mov
fidivrl
pusha
mov
sub
insl
lret
jbe
mov
call
xchg
daa
mov
and
negl
sub
pop
mov
decb
sub
mov
icebp
cltd
cmp
sub
push
add
mov
jns
inc
in
rolb
int3
fnstsw
adc
mov
psubb
in
and
ret
cld
mov
mov
test
in
xchg
icebp
movsl
mov
inc
lods
dec
mov
dec
std
inc
dec
mov
test
mov
lods
mov
nop
std
mov
mov
xor
push
mov
inc
nop
inc
rol
cmpsl
lret
pop
sbb
mov
je
fstpl
ret
pop
pop
mov
jae
mov
int3
and
out
jl
dec
inc
gs
sahf
int3
rcrl
push
out
repnz
test
or
dec
dec
dec
ds
nop
lds
lea
cmp
xor
xchg
xor
push
bnd
fiaddl
pusha
fistps
shlb
fcomps
andb
mov
pop
mov
lret
adc
lea
sbb
dec
loope
push
and
dec
cmp
test
mov
xchg
jmp
cltd
in
or
sbb
cmpsb
enter
mov
rcr
mov
movsb
pop
ret
dec
fcmove
aas
cmc
sub
push
xor
inc
xor
pusha
mov
sbb
lahf
stos
dec
mov
sbb
pop
xchg
mov
sub
inc
mov
movsb
movb
sub
in
stc
adc
clc
sahf
or
inc
mov
mov
sarl
push
addb
and
sahf
xchg
pop
mov
xchg
rorl
lods
cmp
mov
faddl
add
jp
pop
pop
dec
jno
test
inc
pop
jecxz
xchg
lock
dec
add
dec
sarl
jge
or
decl
test
xor
das
dec
stc
mov
sbb
sbb
das
inc
pop
cmp
rcr
test
in
roll
push
mov
pop
fcoms
fimull
mov
fsubrs
scas
les
jl
sub
in
mov
arpl
dec
and
mov
pop
mov
xlat
dec
pop
mov
cmc
mov
pop
mov
loopne
or
scas
pop
pop
xor
or
gs
add
mov
insb
lds
aaa
faddp
fadd
pop
add
or
cmp
lds
sarl
pop
mov
out
mov
inc
dec
ds
xchg
or
fldt
lods
mov
js
cmp
loope
inc
sbb
mov
push
add
int3
sahf
frstor
and
xor
call
mov
xor
movsb
pop
jo
aas
pushf
cmpb
push
sub
ror
pop
pop
and
popa
xor
xchg
xchg
mov
aaa
inc
fsubs
xchg
xchg
punpckhbw
movsb
or
add
lret
cmp
int3
jmp
cmp
and
jmp
xor
lock
sti
mov
or
pop
imul
ja
clc
ljmp
ret
push
lds
int3
cmpsl
add
int3
cs
cli
mov
adc
push
adc
cld
movsl
and
sahf
sub
in
lock
mov
push
fwait
adc
jae
ljmp
out
inc
movsl
push
test
std
ds
add
decb
add
add
add
add
add
add
add
