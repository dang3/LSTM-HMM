push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
orl
mov
cmpl
je
push
call
mov
mov
mov
cmpl
je
movl
jmp
mov
add
addl
mov
mov
cmp
jae
mov
add
mov
add
mov
mov
jmp
movl
jmp
mov
add
cmpl
je
lea
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
lea
push
pushl
mov
push
mov
cmpl
je
andl
mov
cmpl
je
mov
and
subb
cmp
jne
mov
and
cmp
je
movl
jmp
mov
and
cmp
je
mov
and
cmp
je
mov
and
cmp
jne
subw
movl
jmp
mov
and
cmp
je
mov
subb
and
addw
cmp
jne
mov
and
cmp
jne
movl
mov
imul
add
mov
lea
push
mov
push
mov
mov
orw
sub
push
mov
subl
mov
subl
add
addb
push
call
mov
imul
add
mov
lea
push
mov
push
mov
mov
sub
subw
push
mov
mov
add
push
call
andw
jmp
mov
mov
add
cmpl
je
mov
add
mov
mov
add
mov
mov
movzwl
add
mov
cmpl
je
mov
movzwl
cmp
jae
mov
imul
mov
mov
mov
mov
and
cmp
je
mov
and
cmp
je
mov
and
xorl
cmp
je
movl
jmp
mov
and
cmp
je
cmpl
je
mov
mov
add
mov
mov
pushl
pushl
pushl
pushl
mov
mov
mov
mov
jmp
mov
pop
ret
mov
pop
ret
sub
push
mov
sub
movl
movl
movl
mov
movzbl
mov
cmpl
je
movzbl
sub
mov
cmp
jne
mov
movsbl
cmp
je
mov
add
mov
cmpl
je
andl
mov
add
mov
jmp
mov
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
mov
movzwl
mov
mov
mov
add
mov
addb
cmp
jl
cmpl
je
cmpl
jg
mov
add
mov
mov
movzbl
mov
mov
mov
add
mov
cmp
jl
cmpl
je
cmpl
jg
mov
add
mov
addw
cmpl
je
mov
cmp
je
mov
sub
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
mov
mov
cmpl
jne
mov
jmp
mov
movzwl
cmp
je
mov
jmp
mov
mov
add
mov
mov
cmpl
je
mov
jmp
mov
add
mov
mov
add
mov
mov
movzwl
cmp
je
mov
movzwl
cmp
je
mov
jmp
mov
add
mov
cmpl
je
mov
mov
mov
cmpl
je
mov
mov
mov
cmpl
je
mov
mov
mov
mov
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
mov
and
cmp
je
movl
jmp
movl
pushl
lea
push
pushl
mov
push
call
mov
add
mov
cmpl
jne
mov
jmp
mov
cmpl
jne
mov
jmp
mov
mov
add
mov
mov
mov
add
mov
movl
jmp
mov
add
mov
mov
subl
add
mov
mov
mov
cmp
jae
movl
mov
mov
add
mov
lea
mov
mov
add
cmp
jne
movl
jmp
mov
mov
add
mov
movzwl
mov
mov
mov
add
mov
mov
mov
mov
mov
andw
add
andl
mov
cmpl
jne
cmpl
je
mov
mov
cmp
jae
mov
mov
add
cmpl
je
push
mov
cmpl
je
xorb
push
call
mov
add
cmp
jne
mov
mov
jmp
jmp
cmpl
je
mov
cmp
jne
mov
mov
jmp
jmp
mov
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
pushl
pushl
push
call
add
pushl
pushl
push
call
add
pushl
pushl
subw
push
call
add
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
cmpl
je
mov
add
mov
addl
cmpl
jne
jmp
mov
mov
add
mov
cmpl
je
add
mov
cmpl
jne
mov
mov
orl
mov
mov
mov
mov
push
mov
push
call
orb
mov
add
mov
cmpl
jne
jmp
mov
mov
add
mov
push
mov
mov
push
call
cmpl
je
jmp
mov
mov
mov
mov
cmp
jne
cmpl
je
cmpl
jne
or
jmp
mov
mov
orw
mov
mov
mov
mov
mov
mov
pop
ret
push
mov
sub
movl
movl
movl
movzbl
cmp
jne
jmp
mov
cmp
jae
mov
mov
lea
mov
mov
movzwl
movzbl
add
mov
cmpl
je
xorw
mov
cmpl
je
addl
mov
mov
mov
mov
mov
mov
add
mov
jmp
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movw
movw
mov
mov
mov
cmpl
je
mov
movzwl
cmp
jle
movzwl
or
mov
andw
mov
mov
mov
mov
cmpl
je
xorw
movzwl
cmp
jle
orb
movzwl
or
mov
cmpl
jbe
movzwl
cmp
je
movzwl
cmp
jne
mov
jmp
movzwl
movzwl
xorl
cmp
je
mov
jmp
mov
add
mov
mov
cmp
jne
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
lea
push
pushl
mov
orl
push
mov
cmpl
je
push
lea
cmpl
je
push
call
mov
add
cmp
je
jmp
mov
push
pushl
call
mov
pushl
call
mov
mov
cmpl
jne
jmp
lea
push
mov
push
mov
push
mov
xorl
push
call
mov
add
cmp
je
jmp
lea
push
lea
xorl
push
mov
push
mov
push
call
add
mov
push
mov
push
mov
push
mov
push
mov
cmpl
je
orl
push
lea
push
mov
push
mov
push
call
mov
add
cmp
je
jmp
mov
mov
mov
mov
mov
mov
movl
cmpl
je
mov
push
pushl
call
mov
pushl
call
cmpl
je
cmpl
je
mov
push
pushl
call
cmpl
je
andw
mov
pushl
call
mov
mov
pop
ret
push
mov
sub
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
pushl
push
call
add
pushl
pushl
push
call
add
pushl
pushl
push
call
add
pushl
pushl
push
call
add
pushl
pushl
orl
push
call
add
pushl
pushl
push
xorw
call
add
pushl
pushl
push
cmpl
je
mov
mov
push
mov
push
call
mov
mov
mov
push
mov
push
addw
mov
push
mov
orb
push
mov
push
lea
push
lea
push
call
mov
add
mov
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
lea
push
lea
push
lea
push
pushl
mov
push
call
orl
mov
add
mov
cmpl
jne
jmp
movl
pushl
pushl
mov
andl
push
pushl
call
mov
mov
cmpl
jne
jmp
movl
mov
movzbl
cmp
jne
mov
add
mov
add
mov
mov
push
mov
push
cmpl
je
lea
push
lea
push
lea
push
mov
push
call
mov
add
cmp
je
jmp
push
mov
push
call
mov
mov
push
mov
push
call
mov
mov
cmpl
je
call
mov
mov
push
mov
push
orw
call
mov
mov
push
mov
push
xorb
call
mov
mov
cmpl
je
orw
push
mov
push
call
mov
mov
push
mov
push
call
cmpl
je
orb
push
mov
push
cmpl
je
subl
call
add
pushl
pushl
push
call
add
andw
cmpl
je
mov
push
call
add
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
pushl
orb
mov
push
mov
push
mov
push
mov
push
pushl
mov
push
call
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
add
mov
cmpl
je
cmpl
jae
mov
add
mov
pushl
lea
push
pushl
pushl
call
mov
mov
cmpl
je
call
mov
mov
cmpl
jne
cmpl
je
cmpl
je
cmpl
jne
mov
jmp
jmp
mov
jmp
jmp
mov
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
lea
push
call
jmp
mov
add
mov
cmpl
jae
pushl
push
push
call
pushl
pushl
pushl
cmpl
je
pushl
push
push
addb
call
jmp
jmp
lea
push
call
lea
push
call
orl
mov
pop
ret
push
mov
sub
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
mov
pop
ret
jmp
mov
call
push
mov
sub
movl
call
call
mov
cmp
je
jmp
pushl
pushl
pushl
pushl
lea
xorl
sub
push
call
add
movb
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
lea
push
call
add
lea
push
call
mov
mov
cmpl
je
cmpl
jne
jmp
lea
push
call
add
lea
push
mov
push
call
mov
mov
cmpl
jne
jmp
movl
movl
lea
push
lea
push
xorw
pushl
call
mov
andl
mov
cmpl
je
jmp
mov
push
pushl
cmpl
je
cmpl
jne
jmp
lea
push
call
add
lea
push
mov
push
call
mov
mov
cmpl
je
call
mov
pushl
call
mov
mov
cmpl
jne
jmp
mov
push
pushl
call
mov
pushl
call
mov
mov
cmpl
jne
jmp
mov
push
lea
push
pushl
mov
push
mov
add
push
mov
push
mov
push
pushl
call
mov
mov
cmpl
je
jmp
mov
mov
mov
mov
add
mov
mov
and
cmp
je
mov
and
mov
subl
sub
add
mov
mov
mov
mov
mov
mov
mov
addb
movl
cmpl
je
mov
push
pushl
call
mov
pushl
call
cmpl
je
cmpl
je
andw
mov
subw
push
pushl
call
mov
pushl
call
mov
mov
pop
ret
push
mov
sub
movl
movl
movl
pushl
push
mov
push
call
add
pushl
pushl
mov
push
call
add
mov
pop
ret
push
mov
sub
movl
movl
movl
pushl
push
mov
push
call
add
pushl
pushl
mov
push
call
add
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
pushl
push
mov
push
call
add
pushl
pushl
mov
cmpl
je
push
call
add
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
lea
push
call
add
lea
push
call
mov
mov
cmpl
jne
jmp
lea
push
call
add
lea
push
subl
mov
push
call
addl
mov
mov
cmpl
jne
jmp
pushl
pushl
call
mov
pushl
call
mov
mov
cmpl
jne
jmp
mov
mov
mov
lea
push
mov
push
mov
add
push
pushl
xorw
mov
xorw
push
xorw
pushl
call
mov
mov
cmpl
je
jmp
mov
mov
mov
mov
mov
mov
movl
cmpl
je
cmpl
je
mov
xorb
push
pushl
call
mov
pushl
call
mov
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
pushl
push
mov
push
call
cmpl
je
add
pushl
pushl
mov
push
call
add
xorb
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
mov
mov
andw
movb
cmpl
je
cmpl
jne
jmp
mov
cmp
jae
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
je
mov
mov
add
mov
jmp
mov
pop
ret
push
mov
sub
movl
movl
mov
mov
mov
mov
jmp
mov
add
mov
mov
cmp
jae
mov
add
mov
mov
jmp
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
mov
mov
movb
cmpl
je
cmpl
jne
or
jmp
jmp
mov
add
mov
mov
cmp
jae
subl
mov
add
mov
mov
mov
add
movzbl
cmpl
je
movzbl
cmp
je
or
jmp
jmp
mov
mov
pop
ret
push
mov
sub
movl
movl
movzbl
cmp
jne
jmp
jmp
mov
add
mov
mov
cmp
jae
mov
mov
mov
add
mov
mov
movzbl
movzbl
add
mov
mov
add
mov
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
mov
and
cmp
je
orl
jmp
mov
add
mov
mov
push
pushl
call
cmpl
je
mov
mov
sub
cmp
jae
mov
push
mov
mov
lea
cmpl
je
xorb
mov
pushl
call
mov
mov
cmpl
jne
jmp
pushl
push
andb
mov
push
cmpl
je
call
add
mov
movl
addl
mov
push
mov
push
mov
add
push
call
add
mov
mov
mov
mov
mov
mov
movl
jmp
mov
add
cmpl
je
push
orw
pushl
call
jmp
mov
mov
xorw
sub
mov
addw
mov
movl
mov
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
add
mov
movl
movl
movl
movl
jmp
mov
add
mov
cmpl
jae
pushl
mov
push
lea
push
call
add
mov
push
xorb
lea
push
pushl
call
cmpl
jne
pushl
lea
push
mov
push
call
xorw
add
jmp
mov
mov
add
mov
mov
cmpl
je
xorw
jmp
mov
sub
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
movl
jmp
mov
add
mov
mov
cmp
jae
mov
push
mov
add
push
pushl
call
jmp
movl
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
mov
mov
movl
movl
movl
cmpl
je
cmpl
je
cmpl
jne
or
jmp
mov
mov
mov
addl
cmpl
jne
mov
mov
add
cmpl
je
mov
mov
add
cmp
jbe
xorl
or
jmp
mov
cmpl
jne
jmp
mov
mov
add
mov
mov
cmp
jne
mov
mov
mov
mov
jmp
mov
mov
add
cmp
jbe
mov
jmp
mov
mov
add
mov
add
cmp
jbe
or
jmp
mov
mov
push
mov
xorb
add
push
mov
add
push
call
addw
add
mov
cmpl
jne
jmp
mov
mov
add
mov
mov
mov
add
mov
mov
cmp
jne
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
mov
mov
mov
addw
mov
mov
mov
movl
mov
imul
mov
movl
jmp
mov
add
xorw
mov
mov
cmp
jae
mov
shl
mov
shr
xor
add
mov
mov
shr
and
mov
mov
add
xor
mov
sub
mov
mov
sub
mov
mov
shl
mov
shr
addl
xor
add
mov
mov
and
mov
mov
add
xor
mov
sub
mov
jmp
mov
mov
mov
mov
mov
mov
mov
pop
ret
push
mov
sub
movl
movl
mov
mov
mov
mov
mov
mov
movl
movl
movl
jmp
mov
add
mov
mov
cmp
jae
mov
shl
mov
shr
xor
add
addb
mov
mov
and
mov
mov
add
xor
add
mov
mov
add
mov
mov
shl
mov
shr
xor
add
addl
mov
mov
shr
and
mov
mov
add
xor
subl
add
mov
andb
jmp
mov
mov
mov
mov
mov
cmpl
je
mov
mov
pop
ret
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xorl
mov
movzwl
cmp
je
mov
jmp
mov
mov
add
mov
mov
cmpl
je
andw
mov
jmp
cmpl
jne
pushl
pushl
mov
mov
addb
push
pushl
cmpl
je
push
call
mov
mov
mov
mov
mov
add
cmpl
je
push
mov
push
mov
push
subl
call
add
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
push
mov
andl
push
mov
push
mov
push
call
add
mov
mov
sub
mov
cmp
je
mov
push
mov
push
call
add
mov
push
mov
push
mov
push
call
mov
add
cmp
jne
jmp
mov
mov
cmpl
je
mov
movl
mov
mov
mov
addw
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
jmp
mov
push
mov
push
mov
push
mov
push
cmpl
je
call
mov
mov
cmpl
je
cmpl
jne
mov
jmp
pushl
pushl
call
mov
andl
pushl
call
mov
mov
mov
mov
mov
mov
movl
pushl
pushl
mov
mov
push
mov
push
call
mov
mov
pushl
pushl
mov
mov
push
mov
cmpl
je
call
add
mov
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
mov
mov
mov
orb
mov
mov
mov
mov
movzwl
lea
mov
movl
jmp
mov
add
mov
mov
add
mov
mov
mov
movzwl
cmp
jge
mov
mov
mov
pushl
pushl
mov
push
mov
mov
add
push
addl
call
mov
mov
mov
cmpl
je
mov
mov
push
mov
mov
add
push
mov
subb
push
call
add
jmp
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
mov
mov
subl
mov
mov
mov
add
mov
mov
cmpl
jbe
subl
mov
mov
add
mov
mov
cmpl
jbe
mov
mov
add
mov
mov
add
mov
movl
jmp
mov
add
mov
mov
add
mov
mov
mov
sub
shr
cmp
jae
mov
movzwl
sar
mov
mov
movzwl
and
mov
mov
mov
cmpl
je
jmp
jmp
mov
add
mov
mov
mov
add
mov
cmpl
je
orl
mov
jmp
mov
mov
add
mov
cmpl
je
jmp
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
add
mov
mov
cmpl
jbe
mov
mov
add
cmpl
je
mov
jmp
mov
add
mov
mov
cmpl
je
cmpl
je
mov
mov
add
push
call
mov
mov
cmp
jne
movl
jmp
mov
cmpl
je
mov
mov
add
mov
mov
mov
add
mov
jmp
mov
mov
add
mov
mov
mov
add
mov
cmpl
je
jmp
mov
add
mov
mov
add
mov
mov
cmpl
je
mov
mov
and
andl
cmp
je
mov
mov
and
push
mov
push
call
addl
mov
mov
mov
jmp
mov
mov
add
mov
mov
add
push
mov
push
call
mov
mov
mov
mov
cmpl
jne
movl
jmp
jmp
cmpl
jne
jmp
jmp
mov
mov
pop
ret
push
mov
sub
movl
movl
movl
mov
mov
cmpl
je
mov
cmpl
je
mov
mov
mov
mov
add
orw
mov
pushl
pushl
mov
mov
push
cmpl
je
call
mov
movl
mov
cmpl
je
andl
pushl
pushl
mov
mov
push
call
xorl
mov
push
pushl
call
mov
pushl
call
mov
pop
ret
mov
add
add
push
add
and
add
add
inc
push
add
push
push
add
bound
add
add
xchg
add
push
add
mov
push
add
fcoml
add
push
add
add
add
push
add
push
push
add
sub
add
add
push
push
add
fs
add
je
add
mov
add
push
add
push
add
aam
add
loopne
add
notb
add
push
add
sbb
xor
dec
push
add
pop
push
add
push
push
add
mov
xchg
push
add
mov
push
add
ret
add
push
add
call
push
add
add
add
adc
add
add
inc
push
add
mov
add
outsb
push
add
pop
push
add
in
push
add
add
add
mov
dec
add
jl
add
outsb
dec
add
bound
add
add
dec
dec
add
cmp
add
xor
add
dec
add
adc
add
dec
add
lock
add
out
add
fimull
add
dec
add
rorb
lods
dec
add
cwtl
dec
add
mov
add
add
insb
dec
add
pusha
dec
add
push
dec
add
inc
dec
add
cmp
add
add
sbb
add
or
add
dec
add
out
add
fmuls
add
dec
add
mov
dec
add
lcall
add
add
outsb
dec
add
bound
add
add
cmp
add
sub
add
dec
add
add
add
hlt
inc
add
fiaddl
add
inc
add
mov
inc
add
add
add
nop
dec
add
sahf
dec
add
jl
add
mov
add
mov
dec
add
fmuls
add
dec
add
repnz
add
decb
add
dec
add
push
dec
add
sub
add
dec
add
dec
dec
add
pop
dec
add
push
add
jle
add
mov
add
dec
add
mov
dec
add
dec
add
in
add
testb
add
add
sbb
add
push
add
cmp
add
add
pop
push
add
insb
push
add
js
add
xchg
add
push
add
lret
add
push
add
cld
push
add
adc
add
sub
add
add
dec
push
add
pusha
push
add
jb
add
adcb
xchg
push
add
movsb
push
add
mov
add
ret
add
push
add
jo
add
pop
dec
add
dec
dec
add
cmp
add
xor
add
dec
add
push
dec
add
decb
add
dec
add
fimuls
add
dec
add
mov
dec
add
mov
add
add
pusha
dec
add
dec
dec
add
cmp
add
es
add
push
dec
add
or
add
dec
add
loopne
add
enter
mov
add
mov
dec
add
jl
add
insb
dec
add
pusha
dec
add
push
dec
add
inc
dec
add
xor
sbb
or
testb
in
add
aam
add
dec
add
mov
dec
add
xchg
dec
add
jp
add
push
add
pop
dec
add
dec
dec
add
inc
dec
add
xor
add
dec
add
adc
add
dec
add
lock
add
loopne
add
int3
dec
add
mov
dec
add
add
add
mov
add
add
add
add
outsb
add
jbe
add
data16
insb
add
add
jb
add
add
add
add
add
dec
imul
jb
dec
insb
insb
insb
outsl
outsl
imul
add
add
add
ja
jne
push
dec
dec
push
inc
jne
dec
jne
add
add
add
add
add
mov
add
loopne
add
call
add
add
add
add
push
add
lods
inc
add
inc
inc
add
jle
add
or
add
add
add
add
mov
add
pusha
inc
add
cmp
add
rclb
add
inc
add
mov
add
add
push
add
and
add
add
inc
push
add
push
push
add
bound
add
add
xchg
add
push
add
mov
push
add
fcoml
add
push
add
add
add
push
add
push
push
add
sub
add
add
push
push
add
fs
add
je
add
mov
add
push
add
push
add
aam
add
loopne
add
notb
add
push
add
sbb
xor
dec
push
add
pop
push
add
push
push
add
mov
xchg
push
add
mov
push
add
ret
add
push
add
call
push
add
add
add
adc
add
add
inc
push
add
mov
add
outsb
push
add
pop
push
add
in
push
add
add
add
mov
dec
add
jl
add
outsb
dec
add
bound
add
add
dec
dec
add
cmp
add
xor
add
dec
add
adc
add
dec
add
lock
add
out
add
fimull
add
dec
add
rorb
lods
dec
add
cwtl
dec
add
mov
add
add
insb
dec
add
pusha
dec
add
push
dec
add
inc
dec
add
cmp
add
add
sbb
add
or
add
dec
add
out
add
fmuls
add
dec
add
mov
dec
add
lcall
add
add
outsb
dec
add
bound
add
add
cmp
add
sub
add
dec
add
add
add
hlt
inc
add
fiaddl
add
inc
add
mov
inc
add
add
add
nop
dec
add
sahf
dec
add
jl
add
mov
add
mov
dec
add
fmuls
add
dec
add
repnz
add
decb
add
dec
add
push
dec
add
sub
add
dec
add
dec
dec
add
pop
dec
add
push
add
jle
add
mov
add
dec
add
mov
dec
add
dec
add
in
add
testb
add
add
sbb
add
push
add
cmp
add
add
pop
push
add
insb
push
add
js
add
xchg
add
push
add
lret
add
push
add
cld
push
add
adc
add
sub
add
add
dec
push
add
pusha
push
add
jb
add
adcb
xchg
push
add
movsb
push
add
mov
add
ret
add
push
add
jo
add
pop
dec
add
dec
dec
add
cmp
add
xor
add
dec
add
push
dec
add
decb
add
dec
add
fimuls
add
dec
add
mov
dec
add
mov
add
add
pusha
dec
add
dec
dec
add
cmp
add
es
add
push
dec
add
or
add
dec
add
loopne
add
enter
mov
add
mov
dec
add
jl
add
insb
dec
add
pusha
dec
add
push
dec
add
inc
dec
add
xor
sbb
or
testb
in
add
aam
add
dec
add
mov
dec
add
xchg
dec
add
jp
add
push
add
pop
dec
add
dec
dec
add
inc
dec
add
xor
add
dec
add
adc
add
dec
add
lock
add
loopne
add
int3
dec
add
mov
dec
add
add
add
mov
add
add
xor
inc
gs
popa
jae
inc
jb
outsl
jb
add
dec
outsl
arpl
gs
outsb
outsw
push
add
xchg
add
je
gs
imul
lea
inc
gs
imul
dec
outsb
outsw
jb
popa
je
outsl
outsb
add
push
add
jo
popa
arpl
imul
inc
gs
jb
imul
inc
add
push
inc
gs
je
jb
jne
dec
outsb
outsw
inc
add
add
je
outsl
insl
jo
je
jb
popa
insl
gs
add
mov
bound
inc
gs
gs
inc
je
insl
add
sahf
add
outsl
bound
inc
fs
je
insl
inc
add
sub
insb
jae
jb
popa
je
add
xor
insb
jae
jb
jo
inc
add
xor
inc
jb
popa
je
inc
jbe
outsb
je
add
inc
add
gs
je
dec
jne
gs
add
test
inc
gs
push
dec
outsl
arpl
add
add
jb
insl
jo
inc
add
bound
push
outsb
insb
outsl
arpl
add
bound
dec
popa
outsb
fs
add
stos
add
outsl
bound
dec
outsl
arpl
add
bound
inc
insb
insb
outsl
arpl
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
sgdtl
je
jne
jb
outsb
je
push
add
scas
add
outsl
bound
push
gs
insb
insb
outsl
arpl
cmp
insb
jae
jb
outsb
push
add
pusha
add
gs
inc
imul
insb
outsl
bound
push
imul
insb
jae
jb
jo
push
add
adc
push
jb
je
inc
imul
gs
je
inc
imul
gs
imul
gs
add
push
gs
fs
imul
gs
jne
jb
outsb
je
jb
arpl
jae
in
inc
gs
outsl
insl
jo
je
jb
popa
insl
gs
add
movl
jo
ret
outsl
jb
popa
je
gs
popa
addr16
add
sub
jb
insl
jo
add
int
inc
gs
inc
push
add
jecxz
dec
outsl
popa
fs
imul
add
push
add
je
jb
arpl
fs
jae
add
movl
dec
imul
out
dec
outsl
popa
fs
imul
add
xchg
add
je
jbe
outsb
je
add
add
popa
insb
inc
jb
gs
add
popa
insb
inc
insb
insb
outsl
arpl
add
add
outsb
inc
imul
jae
jb
outsb
inc
add
push
add
outsl
jae
dec
popa
outsb
fs
add
add
imul
insb
gs
bound
arpl
add
insb
gs
jae
dec
jne
gs
add
bound
inc
jb
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
pushf
add
fs
imul
add
je
gs
je
jo
imul
nop
add
je
outsl
jns
imul
add
insb
outsl
addr16
outsl
js
popa
jb
insl
inc
add
add
jbe
push
imul
arpl
push
gs
imul
js
inc
add
dec
add
je
jns
je
insl
dec
outsb
jne
ret
gs
popa
addr16
gs
ret
add
jae
popa
addr16
outsl
js
add
inc
outsl
jo
push
arpl
jge
dec
outsb
je
jb
arpl
arpl
add
popa
bound
imul
inc
add
jne
je
insb
imul
inc
outsl
jb
popa
je
add
je
inc
insb
imul
add
and
dec
outsb
jne
je
insl
inc
outsl
jne
je
add
gs
dec
outsb
jne
add
add
jo
outsb
fs
outsb
jne
add
inc
push
outsb
jne
je
insl
add
push
gs
arpl
insb
insb
push
popa
outsb
add
inc
add
je
arpl
insb
insb
push
popa
outsb
add
inc
add
je
arpl
insb
insb
push
outsl
jae
add
add
je
insb
imul
inc
outsl
jb
popa
je
popa
insl
gs
add
add
je
insb
imul
dec
ja
gs
mov
inc
jb
ja
gs
inc
add
dec
outsb
data16
popa
je
push
arpl
add
popa
insl
gs
arpl
add
jb
insb
insb
push
imul
dec
add
je
arpl
insb
insb
push
outsl
jae
add
push
gs
outsl
jb
addr16
jne
fs
imul
add
je
gs
popa
addr16
add
outsb
jae
popa
je
dec
inc
dec
push
jns
inc
arpl
insb
add
test
push
jb
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
outsb
jae
popa
je
dec
gs
popa
add
xchg
add
jo
je
push
popa
addr16
add
mov
inc
gs
jb
jns
arpl
add
je
outsl
jns
jne
jae
jb
mov
push
outsb
push
imul
outsl
outsl
imul
testb
imul
popa
jae
inc
add
xchg
inc
gs
imul
outsl
arpl
add
add
popa
outsb
addr16
insb
imul
inc
push
add
inc
gs
imul
popa
arpl
outsb
je
add
add
jae
push
jne
je
gs
popa
addr16
add
imul
imul
inc
outsl
jb
popa
je
add
repz
je
insb
imul
je
sub
inc
gs
outsb
jne
je
imul
add
jo
imul
add
je
insb
imul
inc
popa
je
add
addb
gs
jb
insl
gs
jb
arpl
cmp
jae
inc
insb
imul
add
fadds
dec
jo
outsb
inc
insb
imul
add
inc
gs
imul
add
jae
dec
gs
popa
addr16
add
pop
add
je
imul
outsb
addr16
add
pop
add
gs
je
push
imul
push
add
dec
gs
jo
add
dec
add
je
jns
je
insl
dec
gs
imul
inc
gs
gs
je
je
add
add
je
inc
add
add
insb
gs
jae
inc
inc
add
add
je
outsl
arpl
add
nop
add
dec
arpl
imul
imul
add
stos
add
ja
arpl
add
inc
add
je
jns
inc
outsl
insb
outsl
jb
add
insb
insb
push
arpl
mov
push
popa
imul
inc
gs
inc
dec
inc
push
jb
arpl
add
add
je
jne
jae
jb
xchg
add
push
imul
pop
add
je
imul
outsb
addr16
add
insl
add
outsl
ja
arpl
insb
insb
inc
popa
jb
jle
dec
outsb
jbe
insb
imul
je
add
fs
arpl
insb
gs
je
jb
inc
add
fs
jne
jae
jb
add
fs
arpl
inc
add
fs
je
imul
push
gs
imul
outsl
outsl
imul
add
inc
jb
popa
je
push
imul
inc
add
add
je
outsb
jne
inc
add
je
jne
dec
outsb
jne
add
bound
outsb
jne
je
insl
add
lods
add
ja
outsb
jne
popa
jb
pop
add
je
imul
popa
arpl
outsb
je
add
popa
je
push
imul
outsl
add
outsl
ja
imul
sub
push
gs
insb
imul
push
imul
xlat
add
outsb
fs
imul
sbb
push
outsb
fs
gs
popa
addr16
add
mov
inc
jb
ja
gs
push
add
push
push
jb
outsl
jb
add
add
je
insb
imul
inc
outsl
jb
popa
je
popa
insl
gs
add
add
imul
imul
inc
outsl
jb
popa
je
add
mov
dec
outsl
popa
fs
je
imul
inc
gs
insb
imul
inc
popa
je
add
mov
dec
jae
insb
imul
inc
outsl
jb
popa
je
jbe
imul
rolb
outsb
jne
inc
insb
imul
inc
outsl
jb
popa
je
add
adc
push
outsb
fs
insb
addr16
je
insl
dec
gs
popa
addr16
add
insb
addr16
jne
je
outsb
inc
push
add
add
inc
insb
addr16
je
insl
add
xor
push
gs
insb
addr16
je
insl
push
gs
inc
add
add
arpl
insb
addr16
jne
je
outsb
add
loope
push
gs
jae
addr16
add
push
add
insb
gs
jae
inc
popa
jo
jne
add
add
inc
gs
insb
addr16
je
insb
dec
inc
add
mov
inc
imul
add
je
insb
addr16
je
insl
push
gs
inc
add
add
je
popa
jo
jne
add
test
inc
jb
ja
outsl
arpl
push
arpl
push
inc
push
xor
cs
insb
add
cmp
inc
jb
popa
je
inc
outsl
outsb
je
outsb
imul
push
add
je
bound
arpl
add
inc
gs
je
arpl
bound
arpl
mov
push
gs
insb
imul
je
add
iret
add
insb
arpl
insb
gs
gs
add
je
gs
inc
outsl
insb
outsl
jb
add
add
je
imul
outsl
jb
add
gs
gs
dec
bound
arpl
dec
add
gs
je
push
outsl
insb
imul
add
inc
gs
gs
dec
gs
imul
push
gs
arpl
push
arpl
fiadds
push
gs
dec
inc
imul
imul
gs
outsl
jb
inc
inc
add
add
je
imul
dec
jb
inc
js
add
gs
arpl
imul
xchg
add
jne
dec
gs
inc
imul
jb
popa
je
inc
dec
inc
imul
add
je
dec
inc
imul
je
insb
je
add
add
je
outsb
push
inc
imul
jb
add
jns
gs
inc
imul
gs
je
gs
push
outsl
fs
inc
imul
jae
xor
inc
gs
outsb
push
inc
imul
add
gs
popa
insb
gs
gs
outsb
je
imul
gs
gs
inc
imul
js
push
add
gs
inc
outsb
push
inc
imul
jb
je
push
add
je
outsb
insb
gs
add
je
outsb
push
inc
imul
add
inc
jb
popa
je
push
popa
insb
gs
gs
add
je
gs
inc
imul
js
add
gs
je
inc
imul
imul
push
add
outsb
jae
popa
je
inc
push
je
outsb
outsw
add
and
popa
je
inc
imul
add
gs
je
inc
outsl
outsb
je
add
add
gs
je
inc
outsl
insl
jo
je
bound
inc
add
push
add
gs
inc
inc
add
adc
inc
imul
add
je
jne
inc
add
or
je
jne
push
add
jp
inc
gs
gs
inc
js
outsb
je
outsl
imul
inc
gs
gs
inc
js
outsb
je
outsl
imul
inc
gs
gs
arpl
popa
jo
add
add
je
imul
je
js
add
add
jbe
inc
inc
add
mov
push
arpl
jae
bound
add
push
gs
imul
addr16
js
add
jns
outsb
push
inc
imul
je
popa
jo
outsl
fs
mov
jns
gs
inc
imul
add
cld
add
je
imul
inc
js
inc
js
add
add
je
jb
jae
dec
jb
inc
js
inc
inc
dec
xor
cs
insb
add
add
je
popa
jbe
inc
imul
add
or
inc
gs
jo
outsb
inc
imul
add
arpl
fs
xor
cs
insb
add
or
inc
jb
popa
je
push
outsl
outsl
insb
bound
inc
js
inc
dec
dec
inc
push
dec
xor
cs
insb
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
add
add
add
add
add
addr16
cmp
dec
push
inc
jne
dec
jne
mov
mov
out
dec
add
inc
mov
loope
out
add
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
add
add
add
sub
cmp
sbb
popa
pop
inc
mov
mov
push
pop
xchg
outsb
push
shrl
ss
push
mov
andl
dec
push
mov
lock
je
pop
xor
or
sahf
les
cli
inc
pop
cld
jo
scas
pop
adc
lahf
sub
push
push
out
call
sub
push
js
inc
leave
imul
pusha
inc
xchg
les
imul
daa
clc
test
rolb
mov
es
sub
xlat
mov
incl
xor
mov
ja
dec
imul
testb
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
loop
add
mov
orl
xchg
jl
test
pop
mov
in
inc
clc
add
and
lret
jno
xchg
clc
sbb
mov
fcomps
es
stos
cmp
test
cmpl
jmp
jo
aam
mov
sahf
xlat
adc
fsubrs
mov
mov
fwait
mov
inc
mov
jmp
adc
fisttpll
imul
stc
rcrb
push
jns
and
pop
nop
xchg
movl
jo
test
fsts
and
dec
jne
aad
in
push
dec
adc
lret
movsb
sbbl
sbb
inc
mov
xor
mov
mov
and
in
mov
mov
add
mov
dec
stc
ljmp
fwait
xor
mov
mov
xor
mul
mov
fsubrp
pop
in
push
fcompl
aam
imul
insl
test
imul
cs
subb
dec
jns
lretw
inc
sub
fstl
cli
ds
xchg
sub
into
dec
clc
cmp
pop
jnp
jb
cmp
fs
pop
mov
jg
insb
cmp
cmpsb
aad
js
pushf
out
call
mov
sbb
jp
xchg
les
push
call
mov
movsl
mov
sbb
mov
mov
jmp
mov
icebp
cmp
jmp
xchg
xor
add
cmp
fs
mov
sub
sub
sub
cmp
fmul
call
cmp
jbe
mov
std
ja
std
movsl
outsb
mov
jmp
xchg
jno
mov
sbb
inc
data16
hlt
sub
aad
icebp
push
cltd
jmp
push
jmp
and
inc
dec
push
outsb
fiadds
mov
sub
ss
and
std
inc
or
add
cmp
adc
loope
xchg
imul
mov
in
jnp
mov
jo
push
and
adc
jl
repnz
lock
test
loopne
popf
jmp
inc
xor
andl
cwtl
icebp
repnz
dec
jb
scas
dec
pop
inc
inc
jnp
outsb
out
mov
test
mov
lock
movq
cmp
push
mov
clc
sub
neg
out
dec
scas
in
jno
pop
dec
daa
xchg
mov
cmpsl
mov
gs
mov
fs
and
adc
sub
fdivrs
outsl
pop
or
sahf
imul
pushf
inc
pop
pop
or
cmpsb
jg
and
dec
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
xlat
add
add
test
rcr
cmpsb
inc
call
fistl
push
jno
mov
push
add
test
push
or
mov
ror
dec
std
jae
or
or
push
dec
cmp
or
cmp
call
dec
inc
dec
rcr
dec
shll
and
or
addr16
push
cmp
and
pop
stos
imul
pop
push
mov
xor
jp
xchg
mov
push
sub
and
imul
lea
mov
jp
test
arpl
in
loope
insl
in
ds
clc
jp
adc
dec
jmp
insb
adc
and
jbe
cwtl
cmp
lds
sbb
inc
shr
daa
jle
cmp
into
jmp
sbb
mov
xor
les
add
jne
scas
sbb
frstor
in
icebp
mov
aam
sbb
out
loop
ss
aaa
mov
sub
lcall
insl
pop
aas
sub
push
cld
popf
insl
fists
mov
jp
mov
bnd
push
mov
movsb
cwtl
or
adcb
jg
rol
cmp
push
mov
icebp
out
sarb
repz
out
sub
add
mov
pop
dec
cmp
test
pop
push
add
ficomps
sub
push
add
mov
inc
push
in
mov
pusha
lods
xchg
rolb
adc
dec
shrl
ss
faddl
mov
inc
mov
cltd
enter
pop
rolb
or
mov
xor
aam
push
pop
xor
aam
fisttps
nop
mov
push
shl
leave
lret
push
and
addl
mov
daa
pop
add
fistpl
dec
stos
and
cmp
adc
je
sub
rolb
imul
fdivrs
mov
mov
test
fld
dec
es
pop
jge
rorb
fsubl
das
mov
sti
jge
xchg
idivb
loope
imul
inc
aam
push
jne
cwtl
mov
pop
xchg
pop
fimull
je
xchg
aad
inc
mov
ljmp
roll
testb
imul
insl
out
jp
mov
and
add
jnp
dec
cmpsl
push
add
add
clc
mov
jge
xor
push
push
nop
inc
xchg
js
and
mov
imul
gs
negb
shlb
mov
data16
or
divl
aas
ss
pop
shrl
adc
clc
sub
jl
lretw
push
xchg
add
mov
add
sbb
and
push
adc
call
dec
add
mov
scas
adc
mov
fldt
pusha
lret
movsb
pop
or
add
iret
push
pop
sub
pusha
int
xchg
fnstcw
out
orl
mov
pop
inc
mov
add
ret
xor
mov
decl
add
jns
xchg
ja
cmp
inc
dec
push
repz
jo
mov
cmc
and
push
int
orb
pop
inc
js
inc
mov
mov
xor
jge
sahf
lea
add
pop
leave
adc
leave
mov
in
and
add
jno
in
pop
mov
xlat
xor
mov
bound
dec
push
dec
sub
std
std
mov
jecxz
jg
into
xorb
roll
arpl
mov
leave
jmp
jno
scas
jnp
ds
cmp
aas
and
sub
cld
jmp
adc
in
dec
cmp
push
jo
jl
imul
mov
cmpsl
ljmp
inc
dec
jmp
mov
addr16
fisubrl
pop
push
insl
jge
add
hlt
pop
ror
and
into
xchg
stos
inc
sbb
stos
mov
lcall
pop
pop
rorb
movsl
test
shr
mov
in
pop
outsb
jle
mov
mov
ror
imul
sbb
outsl
movsb
scas
and
pop
sbb
jae
mov
add
sbb
bound
mov
jg
fildl
jge
jae
fcompl
cmp
inc
dec
fisubrl
push
lock
daa
push
jno
pop
cwtl
lock
mov
xor
sub
cmpsb
add
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
push
add
add
add
in
sub
sub
add
lods
xchg
test
mov
cmpsl
rorl
jecxz
cmp
mov
jne
fs
jo
popa
hlt
xor
sbb
mov
test
out
hlt
sarb
sbb
iret
sbb
roll
scas
std
or
imul
pop
popf
int
clc
mov
rcrl
test
cmpsb
xchg
int
loop
lea
inc
adc
shl
out
mov
mov
mov
outsb
pop
jbe
xor
inc
mov
cltd
xchg
jl
xchg
leave
fstl
push
fs
int3
push
jp
inc
out
ret
ret
cmc
mov
adc
fisubl
add
add
dec
fwait
xor
fwait
repnz
js
and
data16
mov
cwtl
inc
jno
leave
daa
stc
adc
cltd
push
sbb
popa
test
pop
shl
test
sbb
jmp
into
pop
jbe
adc
fstl
fsub
push
out
jle
imul
xor
inc
decb
mov
jl
sahf
leave
iret
enter
xor
adc
pop
sarl
in
push
loop
xor
xchg
cld
and
xchg
jle
add
imul
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
dec
push
add
mov
add
mov
pop
pop
pushf
rorb
push
popa
inc
leave
scas
ljmp
in
lods
cmp
or
xchg
mov
or
cmp
mov
loop
push
mov
nop
pop
add
enter
jmp
push
add
cmp
and
inc
or
mov
xchg
xchg
mov
xor
adc
mov
sub
mov
or
mov
ret
mov
jle
sub
inc
hlt
xchg
xchg
and
cs
xor
add
xchg
mov
jo
adc
mov
add
add
in
push
lods
mov
orl
xchg
xchg
mov
ret
test
jecxz
cmp
jecxz
test
sbb
push
and
add
out
jle
or
aas
xchg
out
mov
pop
lahf
or
xchg
loop
adc
outsl
movsl
pushf
push
aaa
xchg
push
sbb
aas
mov
mov
cltd
rolb
into
inc
leave
dec
in
test
add
test
push
aad
mov
jecxz
pop
pushf
pop
push
negl
arpl
sub
lcall
push
mov
mov
in
mov
rcll
loope
out
xor
sbb
addl
mov
mov
addl
shrb
icebp
sub
popa
popf
in
xchg
aad
mov
les
in
stos
rcrl
and
decb
xor
mov
decl
loope
loopne
mov
out
fmuls
add
ds
sbb
and
add
jecxz
inc
xchg
sarb
mov
push
lock
adc
and
lds
and
mov
fstpl
dec
mov
and
outsl
sub
adc
in
pushf
ss
scas
aaa
mov
and
lret
les
cmp
jo
mov
aam
aas
loope
mov
cmp
xor
mov
mov
jmp
add
jns
lods
int3
daa
and
mov
bound
adc
cmp
pop
test
mov
arpl
push
cmpsl
dec
lretw
in
and
js
clc
jb
or
sub
in
mov
test
lahf
and
push
xchg
mov
pop
jge
pop
push
aad
bound
inc
mov
hlt
lods
adc
mov
adc
pop
cmp
je
cwtl
lcall
jbe
xlat
mov
test
cmp
and
popf
nop
mov
popf
or
jno
jb
jo
repnz
cwtl
lahf
test
shrb
and
punpckhwd
cmpsb
loope
or
cmp
jl
mov
je
sti
bound
pop
adc
jne
in
pusha
ja
mov
sahf
sub
and
push
sbb
mov
pop
add
sbb
das
ror
jo
cltd
stos
and
add
flds
xchg
xor
xchg
push
addb
jae
loopne
jl
fbld
out
pop
fsts
jo
mov
int
add
mov
pop
mov
dec
or
lahf
push
xchg
jmp
aam
add
ret
and
xchg
cmpsb
js
add
and
mov
mov
add
add
fistl
mov
sub
shll
pop
ljmp
icebp
rorl
div
xchg
shrl
pusha
out
push
data16
mov
push
xchg
xlat
daa
out
cli
cltd
fdivs
inc
nop
sub
repnz
stos
push
mov
inc
cmp
pop
cmp
iret
aad
hlt
aas
jo
das
popf
fs
sub
xchg
mov
sub
adc
inc
icebp
mov
iret
out
sbb
fcomps
dec
pop
push
fdivr
sti
xor
outsb
xchg
xchg
cmp
addl
shrl
adc
fbld
cltd
xorl
push
in
cmp
mov
mov
ss
lret
xorb
cmp
insl
ret
pop
push
mov
push
idivb
pushl
out
sub
shlb
mov
and
adc
push
cwtl
xlat
fcmove
cmpsl
dec
shl
cmp
xor
xor
lds
fnsave
jo
popf
sti
notl
push
xor
inc
inc
andb
loop
mov
inc
mov
fildl
cmp
sahf
das
cmc
jno
add
movsl
addl
setp
xor
dec
or
sbb
mov
cli
mov
popf
mov
cmpsb
fsubrl
mov
inc
cmp
cmp
push
xor
xchg
xor
sbb
and
ret
clc
leave
mov
lret
mov
lcall
xor
cmc
sbb
xlat
fdivrs
ljmp
imul
ss
shr
cmp
dec
cli
out
push
xchg
je
xlat
pop
dec
jo
mov
stos
sbb
lret
outsb
and
mov
push
sbb
inc
je
lret
dec
sbb
xor
mov
inc
dec
dec
jno
loopne
lods
jns
jbe
mov
or
mov
or
mov
cltd
jnp
or
popa
out
icebp
js
xchg
popa
pop
outsb
dec
rcrl
sbb
loope
xor
jno
int3
push
in
imul
jmp
out
sbb
jl
pop
xchg
loop
adc
pop
outsb
fdivrp
aam
mov
push
jae
pop
add
lret
test
jmp
pop
dec
out
mov
imulb
jae
cmp
add
jno
xchg
je
mov
mov
jns
jae
push
rcrb
dec
sar
cmp
xchg
mov
xchg
inc
adcb
icebp
mov
imul
cmp
add
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
add
add
add
add
sub
repnz
push
mov
test
mov
loope
lcall
push
or
mov
mov
inc
sbb
mov
pop
out
fidivrl
scas
jmp
jnp
clc
adc
adc
mov
xchg
repnz
xchg
pop
xchg
icebp
sarb
push
fldcw
dec
jns
in
adc
mov
dec
or
fwait
sub
sti
or
sub
in
cs
adc
daa
or
xchg
mov
movsl
ja
cmpsb
mov
dec
aas
adc
xlat
and
jns
jge
movsb
lret
pop
jle
or
cmp
mov
jnp
fmull
loope
push
rorb
aad
dec
cmp
inc
sub
int3
mov
lock
dec
mull
adc
fucomip
es
jle
fsubs
stos
pop
and
pushf
adc
push
lds
fsubrl
jnp
stc
std
jl
loop
cmp
stos
adc
lret
add
bound
cmpb
rcrb
jp
sahf
xchg
popf
test
mov
mov
ss
insl
imul
rcrb
jp
xchg
push
adc
adc
fnstenv
mov
scas
aas
stos
cmpsl
ret
or
mov
jo
sub
out
das
fcmovnb
and
shrb
es
jne
mov
jb
pop
cwtl
mov
jmp
adc
dec
push
cmp
pop
sub
or
addr16
push
out
add
xor
dec
jle
lock
jge
mov
out
or
mov
inc
xchg
push
imul
lret
sbb
jo
xchg
pop
ret
mov
std
cmc
std
sbb
mov
sub
ror
idivl
test
xchg
ror
loope
xor
jp
rolb
push
inc
lds
inc
jmp
jno
push
aas
ljmp
mov
into
jbe
cmp
out
pushf
pop
cs
xor
mov
jmp
pusha
cli
sub
mov
inc
xor
xchg
lea
sbb
xor
mov
leave
jns
and
mov
leave
jbe
int3
out
sti
mov
cmpsb
mov
rol
cmp
in
mov
dec
push
xorb
arpl
push
outsl
call
lret
cmp
push
addb
push
data16
and
jp
and
imul
add
dec
sbb
jne
mov
or
and
cmp
mov
lcall
add
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
push
add
fimuls
add
test
jge
iret
jp
sub
daa
mov
mov
inc
hlt
in
push
jmp
fldt
xor
fstl
pushf
test
imul
sbb
and
cmpl
pop
jb
je
enter
inc
fildl
and
cmpsl
popl
jmp
mov
cmp
push
sub
xor
xchg
push
xor
sbbb
add
dec
push
mov
mov
scas
jb
popa
fcompl
mov
sbb
pop
mov
in
push
js
push
pushf
push
sbb
add
cmpsb
add
aad
xchg
mov
push
pop
leave
bound
arpl
sbb
popa
cmp
sub
jnp
and
inc
movsb
movl
pop
mov
js
mov
mov
push
mov
mov
mov
scas
jb
mov
cwtl
jne
mov
cmpsb
cli
pop
push
std
into
inc
pop
ja
jne
xchg
pushf
inc
shll
test
push
loop
fildl
test
punpcklwd
jne
mov
mov
cld
fldt
xchg
cmp
push
loop
scas
adc
divb
sub
cmpb
pop
insb
jecxz
adc
sbb
sub
insl
and
mov
jbe
scas
je
jno
mov
test
outsb
pcmpgtd
repz
mov
cmp
cmc
cmp
sub
mov
jae
push
mov
jmp
jle
repz
lods
je
or
mov
or
lcall
xchg
call
addl
pusha
sub
inc
push
add
or
adc
mov
pop
leave
sbbl
xchg
imul
add
outsl
xchg
out
popf
push
jno
and
movsb
jb
outsb
icebp
shlb
cld
jbe
arpl
inc
mov
push
fs
inc
shll
pop
fdivrl
subb
cmovae
mov
push
addr16
testb
clc
xchg
int
cmpsb
jo
xor
ljmp
fucomip
loopne
adcl
and
jecxz
sbb
mov
sbb
imul
out
xor
push
nopl
in
int
outsb
ljmp
pop
cmp
sahf
lea
cmpsl
xor
sub
stc
pminsw
leave
mov
outsb
sbb
push
mov
xlat
sbb
sbb
cmpsb
jg
lahf
gs
dec
lds
call
repnz
lret
stos
cli
sarl
add
or
aas
mov
push
or
cmpsb
or
sarl
xchg
rcl
ja
jecxz
push
fstps
mov
adc
xchg
and
sub
push
pop
inc
cmc
jnp
aam
xchg
and
push
out
movsl
popa
mov
cmpsl
cmp
pop
xor
mov
js
fdivrs
sbb
jns
mov
pop
cli
js
dec
inc
xor
repnz
and
or
in
mov
mov
pop
popa
repnz
sbb
pushf
xchg
push
fmul
lret
xchg
cmp
jno
bound
aad
xchg
orb
dec
aad
ss
mov
mov
test
fsubs
jns
in
sbb
pop
filds
lods
add
frstor
jmp
daa
pushf
xchg
xchg
sub
packuswb
ret
inc
dec
das
mov
cld
jo
xor
insl
mov
in
mov
adc
mov
lock
mov
mov
push
loope
lahf
or
cld
xchg
dec
roll
xor
inc
push
jne
xchg
sarb
pop
pop
add
out
dec
xchg
dec
cmp
xchg
mov
je
mov
movsl
push
jae
mov
jle
adc
xor
lret
pop
ja
and
call
xor
sbb
and
mov
push
mov
in
and
cli
or
ljmp
fmull
dec
xor
pop
mov
xor
or
mov
add
add
sbb
jnp
cmpsl
xor
repz
xor
mov
mov
jecxz
std
pop
add
clc
cltd
movsl
shr
lret
jl
scas
iret
mov
test
jle
fcoms
jns
les
pop
sbb
push
cwtl
lds
aas
xchg
ds
jb
inc
cmp
sub
flds
inc
xor
addl
daa
cmp
xchg
loop
cmp
or
push
add
mov
pop
pop
cs
addr16
or
sbb
pop
inc
clc
push
dec
and
push
ja
decb
cmpsb
popf
bound
mov
mov
jbe
sbbb
pop
pop
aad
xchg
pop
xchg
xor
cs
fmul
sub
lds
mov
in
xor
mov
shrb
aaa
and
stc
subb
jl
stos
inc
jns
or
and
pop
sub
cmpsb
push
daa
xchg
xor
rcr
cli
inc
pop
ficompl
cmp
inc
or
outsl
and
push
mov
add
xchg
movl
sbb
mov
jo
fisubs
in
push
ret
mov
jb
ja
xchg
ja
and
lock
cwtl
in
add
js
push
xchg
sub
mov
flds
inc
adc
sbb
in
pop
movsb
cltd
sub
aad
aad
rcrl
mov
outsb
xchg
push
les
adc
lods
test
pop
dec
add
and
jmp
mov
pop
jg
xlat
cmc
test
sub
jg
repz
test
mov
inc
push
scas
das
push
in
bound
xor
push
pop
jge
xchg
inc
int3
pop
lret
jb
lods
mov
inc
pop
and
mov
cwtl
xor
out
push
es
inc
push
jp
inc
xchg
pop
frstor
lcall
fists
sub
sub
mov
adc
repnz
inc
loope
stos
aad
imul
inc
dec
jmp
mov
dec
mov
mov
xor
and
sbb
inc
jbe
shlb
xchg
movsb
pop
rcrb
insl
and
aaa
icebp
mul
out
push
cmc
gs
addl
jns
jle
es
push
pop
roll
mov
push
out
movsb
es
or
cwtl
and
inc
sbb
cltd
jp
and
adcl
add
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
add
inc
pop
roll
movsl
mov
in
nop
adc
sub
call
stos
lahf
dec
adc
sbb
xor
movsb
jno
icebp
call
xor
add
sbb
sub
out
std
movsb
stc
adc
cwtl
into
pop
mov
xchg
cmp
sub
ss
adc
sub
mov
pop
mov
pop
jmp
mov
repz
fistpl
cmpsl
and
mov
pop
scas
dec
sub
push
mov
dec
adc
pushf
ja
xor
mul
mov
xor
adc
and
inc
pop
aam
enter
lret
and
aad
adc
cli
mov
jo
dec
mov
jmp
jns
xchg
push
push
mov
in
aam
mov
fmull
mov
jmp
lds
fsts
xchg
andl
push
push
jbe
dec
sbb
js
sub
cli
cli
cltd
lds
mov
push
das
fcoms
test
sbb
shlb
dec
mov
inc
out
xlat
das
push
dec
fstps
jmp
push
mov
sbb
rol
and
add
or
adc
cmp
sahf
lret
mov
jecxz
or
xor
pop
inc
push
add
aam
lock
pusha
movsl
push
sti
and
fnsave
pcmpeqb
aaa
sbb
test
aaa
vunpckhps
xchg
xorl
mov
mov
loopne
cmp
inc
push
movsb
lret
add
mov
xchg
adc
mov
lods
push
stc
add
cli
lcall
inc
adc
mov
mov
fbld
pushf
sbb
jge
jmp
lahf
and
lahf
push
mov
inc
cmovp
rcr
jo
mov
jbe
xchg
int3
ret
out
xchg
insb
mov
mov
dec
push
xchg
sbbl
mov
jno
sarl
xchg
adc
xor
sar
into
push
aam
daa
push
out
lods
mov
fwait
lahf
sbb
dec
xchg
push
in
pop
sub
in
cmpsl
stos
cmp
sub
rclb
jnp
xchg
pop
dec
sarl
mov
push
iret
cmp
push
imul
in
popf
in
stos
imul
fldl
sbb
inc
push
adc
stos
stos
fadds
pop
pop
inc
mov
scas
daa
ret
push
push
andb
cmp
out
adc
leave
jmp
lock
test
xchg
xor
sbb
sub
jno
push
clc
mov
push
adc
sub
pop
into
leave
xchg
jmp
inc
xor
sbb
or
stos
or
xchg
ja
jbe
imul
sbb
push
testl
rcrl
imul
lcall
hlt
call
das
cmpb
mov
add
cmp
adc
rorl
mov
pop
imul
xor
mov
adc
push
mov
jbe
pop
jae
bound
jae
mov
jb
push
or
or
and
jle
hlt
xchg
jns
movsb
dec
pop
int
lea
or
dec
scas
xor
stos
loope
cwtl
adc
aad
into
or
mov
mov
sbb
add
js
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
faddl
add
cmc
add
add
mov
add
mov
sarb
cwtl
fsubs
or
and
sub
outsb
push
mov
sub
push
cmpsb
repz
jp
leave
xchg
push
adc
inc
and
mov
fstpt
test
or
cli
and
or
push
pop
cmpsl
add
xor
daa
xor
pop
dec
jmp
cmp
xor
pop
and
popa
mov
imul
or
and
stc
insl
inc
and
mov
cmp
sub
push
jmp
mov
in
or
lods
test
xchg
jg
dec
add
enter
push
test
imul
push
xchg
push
xchg
popf
add
lcall
dec
pop
xor
xor
sub
or
jmp
std
ret
push
push
and
movsl
enter
fimuls
mov
clc
clc
sub
push
test
lcall
rcrl
int3
ficoml
enter
out
xchg
sub
push
es
and
jne
outsl
mov
fwait
int3
ret
clc
les
or
test
sbb
mov
in
je
mov
scas
arpl
jg
and
insl
stos
fcmovbe
cmpsl
xor
lock
inc
pop
sub
push
push
out
jo
inc
dec
dec
pop
adc
in
cmc
jnp
dec
mov
push
iret
jmp
jns
push
sbb
push
jg
mov
dec
push
push
shlb
inc
repnz
outsb
cmpsb
stc
sub
stc
hlt
inc
cs
fs
mov
xchg
ljmp
push
push
out
in
jbe
pop
faddl
sbb
lods
insb
mov
in
cmpsl
or
lea
xchg
in
xorl
mov
jle
aaa
filds
sbb
cmp
sub
in
adc
pop
lret
pop
dec
add
jo
sub
xor
fsts
xchg
xor
dec
pop
fisttpll
inc
test
dec
jmp
ja
sub
out
add
or
shlb
jge
ja
cmp
jo
xchg
adc
outsl
sbb
inc
cs
xor
pop
adc
fldcw
insl
test
xchg
add
icebp
dec
xor
sbb
sbb
push
push
lods
dec
outsl
int3
mov
pop
push
nop
shr
repz
jecxz
cwtl
sbb
cmp
mov
xchg
dec
sub
addl
xchg
mov
jle
fsubl
loopne
pop
mov
inc
cmp
jl
mov
xchg
jmp
cmp
pop
scas
inc
into
data16
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
mov
add
dec
or
add
movsl
mov
dec
add
sarb
lret
or
in
xor
pop
outsl
ss
lret
rorl
cmpsb
dec
out
push
shrb
fs
xchg
add
pop
jno
insb
mov
jbe
stos
mov
lods
add
lahf
mov
sbb
mov
rorb
fcoms
bound
cmp
pop
fildll
push
inc
push
out
sub
mov
je
xor
and
mov
xor
and
adc
int3
and
cwtl
inc
mov
mov
and
sbb
loopne
shrl
dec
andl
aad
push
sbb
jle
insl
lds
cmp
and
pushf
test
fwait
std
outsl
adc
add
stos
leave
sbb
push
mov
scas
dec
aam
addr16
jns
sahf
test
jae
das
or
pop
fbld
or
testb
add
push
mov
mov
cs
jg
jno
test
jle
lods
rcrb
cmp
aas
cli
scas
std
scas
mov
sbb
push
pop
pop
xor
movsb
push
in
int
jp
lock
stos
ss
pushf
xor
decl
mov
adc
dec
popf
adc
cli
fsubrl
add
dec
into
aas
out
ds
loop
shl
mov
sub
inc
adc
xor
pop
jg
js
gs
mov
fidivrl
je
pop
shll
inc
mov
shrb
or
es
mov
xor
pop
shrb
aas
cwtl
dec
or
imul
pop
pop
dec
jno
testb
push
imul
pop
int
dec
dec
sbb
jo
ljmp
inc
dec
inc
mov
leave
mov
cld
das
inc
mov
les
adc
call
aam
mov
int
mov
inc
fsub
and
pop
pop
fsubs
sub
or
xchg
int3
or
mov
lock
sub
jg
mov
shll
mov
aad
xchg
aam
lds
pop
cmpl
out
bound
subl
push
jbe
jg
jae
adc
cmp
mov
addr16
mov
push
ffree
mov
aad
add
in
add
arpl
pusha
inc
cmpsb
imul
rcrl
sarb
call
sbb
push
jnp
xchg
test
jmp
xor
out
stos
pop
ljmp
mov
enter
inc
sub
push
sahf
mov
movsb
icebp
push
dec
lret
or
add
gs
sbb
in
mov
repz
jbe
cli
adc
sub
in
push
lret
jo
add
ret
out
mov
loope
stos
push
fistpl
xchg
sbb
sbbl
scas
mov
divb
mov
inc
mov
push
and
aas
jmp
mov
in
lea
aad
lock
jno,pt
mov
and
push
inc
dec
pushf
dec
in
or
xor
pop
fcmovb
into
mov
dec
gs
pop
inc
push
negl
jo
and
mov
mov
jbe
push
out
pushf
fsubrs
bnd
in
incl
ret
int3
outsb
mov
scas
rcr
lds
int
outsb
cmpsl
adc
add
or
sub
pusha
sbb
lods
fcmovb
or
cmp
in
ss
popf
hlt
xor
imul
into
inc
xchg
in
jbe
pop
or
adc
cmp
push
dec
jl
std
sub
jle
mov
push
push
clc
aaa
jb
shll
out
ljmp
js
push
loop
or
pusha
int
and
cli
sbb
inc
push
leave
dec
mov
cmp
mov
jg
nop
jp
ds
scas
xor
imul
mov
and
pop
rol
or
cmp
jne
mov
pop
or
xchg
scas
scas
sub
test
iret
repz
mov
shrl
std
inc
xor
pop
rcrl
pop
pop
cli
and
mov
call
pop
pop
push
into
mov
fsubrl
sbb
ret
shrb
sub
call
test
aaa
pushf
mov
push
push
sbb
and
mov
pop
xchg
cmpsb
mov
push
das
jecxz
push
xor
sub
xchg
or
adc
ret
mov
cmc
or
and
push
stos
cmc
lret
mov
lahf
outsl
dec
xchg
addr16
add
mov
iret
push
sar
pop
adc
xor
push
mov
jbe
out
dec
les
incl
add
icebp
dec
fsubr
push
mov
cwtl
pop
xchg
jg
shrl
movsb
inc
js
ljmp
dec
sub
and
push
cmpl
lock
lea
pop
and
xchg
jne
dec
stos
dec
std
daa
inc
std
mov
addr16
call
idivb
xchg
dec
fstl
cwtl
cmp
mov
insb
das
sub
jecxz
dec
test
aam
fistpll
ja
es
pop
out
push
aas
cwtl
add
in
lcall
dec
fstps
addr16
out
insb
dec
sahf
les
fistps
out
lds
insb
mov
test
aas
dec
out
pop
lods
daa
inc
cmpsl
in
adc
minps
jo
adcb
jl
sbb
andb
movsb
loop
test
nop
adc
int
adc
enter
push
gs
jge
inc
jp
add
sbb
imul
aaa
inc
sub
faddp
lahf
add
test
mov
adc
cld
out
sub
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
aas
pop
add
loope
add
xchg
dec
mov
lea
mov
stc
subl
lcall
mul
popf
and
xchg
sub
mov
sarb
mov
mov
movsl
xchg
popa
pop
scas
out
xchg
dec
pop
xchg
mov
aam
idivb
cmp
adcb
add
mov
mov
fdivrs
daa
jl
in
mov
aaa
cmp
int3
cs
fldenv
popf
jae
fistpll
inc
push
jge
sbb
icebp
stc
aaa
adc
dec
push
fs
insb
or
loope
push
push
add
adc
subl
in
adcb
mov
shrl
or
fiadds
movsl
push
cs
mov
loop
lahf
adc
int
xor
lods
mov
add
fildll
ss
mov
lret
dec
or
dec
jge
mov
adc
mov
popf
dec
insb
aad
fisubl
scas
ljmp
and
adc
sub
add
ret
add
push
xchg
rorl
sbb
fcomp
push
adc
push
mov
pop
mov
dec
icebp
mov
andl
js
js
adc
xchg
cli
adc
jmp
cmp
outsb
inc
outsl
sbb
push
mov
hlt
js
dec
xchg
mov
pusha
pop
lock
das
mov
int
ds
inc
mov
sbb
imul
sbb
push
lds
negl
cmp
inc
mov
push
jb
rcrb
lods
sub
dec
sbb
xlat
out
pop
lret
mov
enter
dec
sbb
dec
in
sub
adc
xchg
dec
add
movsb
imull
lds
hlt
adc
inc
push
testl
cli
divb
stc
jmp
push
xchg
cmp
jne
movsb
mov
push
iret
pop
arpl
pop
mov
out
fisttpll
lret
outsb
sbb
add
jb
mov
loopne
fsubp
dec
cmp
push
mov
mov
or
and
pop
hlt
test
dec
inc
jl
cmc
jnp
inc
scas
and
gs
and
fidivrl
ss
sahf
push
insl
in
jl
lret
dec
push
push
cmp
push
or
dec
sbb
mov
push
repz
and
dec
mov
mov
add
inc
call
loope
pop
outsl
push
cmp
adc
nop
adcb
addr16
mov
enter
push
loopne
push
fisubrl
dec
jbe
mov
mov
xor
je,pn
ret
je
pop
cmp
inc
sbb
and
push
shrl
sbb
jno
mov
clc
aam
imul
mov
shrb
mov
pop
cmp
imul
xchg
xor
or
sbb
mov
xlat
out
je
jecxz
daa
add
cld
punpckhbw
mov
add
xchg
cmp
bswap
pop
int
jns
fists
jle
ja
or
test
iret
xchg
cmpb
or
push
mov
mov
sub
push
arpl
xchg
xlat
out
movsl
adc
dec
adc
inc
xchg
cmpsb
in
push
mov
andl
loop
lahf
addb
add
xor
mov
mov
pop
add
out
or
adc
mov
js
aam
ret
push
insl
sbb
je
inc
movsl
xor
enter
mov
push
and
mov
adc
mov
fisttpll
std
sub
push
xchg
data16
xchg
lahf
inc
and
xor
pop
faddl
mov
dec
lahf
or
inc
lock
xchg
jle
inc
jne
jo
or
sbb
pop
cltd
lcall
stos
dec
push
mov
call
mov
mov
fsts
xor
dec
out
lahf
or
outsl
xor
test
pop
dec
jmp
arpl
inc
aad
js
iret
mov
dec
int
push
cli
test
dec
push
cmpsl
pusha
or
pop
mov
push
fdivs
cmpsl
mov
cs
mov
pushl
popf
hlt
pop
lods
gs
mov
jmp
jo
enter
xchg
push
dec
lock
jo
lret
je
lret
leave
mov
fwait
out
js
jl
scas
out
outsl
cmp
insb
adc
inc
fs
sub
xor
jnp
insb
adc
push
sbb
cld
jl
dec
lret
jb
mov
hlt
lea
xchg
xchg
pop
test
pop
mov
scas
jbe
mov
pop
fistps
mov
pushl
fldt
cld
in
push
xchg
shll
jno
jb
pop
lret
dec
in
fs
mov
mov
sbb
cmp
dec
sbb
addr16
lcall
adc
pop
loope
popa
mov
cwtl
test
enter
repz
test
sbb
fisubrl
call
in
sub
fidivl
sub
xchg
sub
shlb
daa
cmp
pop
fldl
stc
lock
or
sbb
fsubrs
xchg
xchg
rclb
jmp
push
and
loopne
mov
xor
enter
scas
mov
inc
inc
cmp
xor
sbb
imul
fwait
push
jbe
push
pop
ss
jae
dec
adc
sub
int
add
add
lods
jge
dec
add
jl
lcall
and
aam
shll
cvtpi2ps
mov
out
and
xor
sbb
stos
out
stos
mov
xlat
pushf
dec
jmp
aad
movsb
jns
sti
lret
stc
sbb
cmpsb
sbb
loope
stc
stc
icebp
fwait
in
adc
enter
loopne
fwait
and
adc
insl
mov
out
insb
lds
xor
cs
rcl
addl
addr16
dec
test
aas
xchg
cmc
dec
mov
cmpsl
mov
push
dec
mov
add
loope
pop
sahf
dec
insl
and
je
xchg
int
mov
lods
jmp
xor
mov
cli
xchg
fsubr
or
test
loop
pop
cmp
xchg
dec
mov
aaa
dec
jl
ja
lahf
fdivs
dec
andb
mov
jno
push
xchg
mov
mov
dec
adc
add
cwtl
jmp
movsl
hlt
mov
xlat
test
addr16
pop
push
add
mov
jmp
jae
test
mov
mov
inc
roll
mov
mov
outsl
test
jbe
subl
popa
scas
cmp
inc
add
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
add
add
dec
mov
movsl
mov
pop
jge
jne
and
mov
sarl
mov
stc
je
enter
push
mov
mov
test
sbbb
jg
orb
call
inc
push
push
pop
sub
push
or
loopne
jnp
sbb
fdivl
inc
xor
sub
clc
sbb
adc
jp
pop
xor
xor
out
dec
push
jo
xor
out
inc
ret
jb
shlb
sbb
xchg
lea
sub
mov
jnp
or
pushf
jg
dec
aad
mov
sbb
mov
es
outsb
lods
addb
loop
jbe
stos
mov
outsl
out
xchg
sub
mov
add
in
xchg
fstps
add
jae
xor
mov
add
sub
cs
scas
cmpsl
jle
lock
imul
dec
or
mov
in
or
mov
cmpsl
jb
ret
bound
inc
push
adc
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
push
add
add
push
add
rorb
icebp
arpl
mov
stos
jp
inc
mov
cmp
rolb
or
xor
lds
adc
mov
mov
fcompl
cmp
aad
xor
xchg
loop
mov
aas
subb
test
inc
lock
pop
setnp
push
sti
sbb
dec
sub
insb
xchg
ss
xchg
mov
mov
jbe
pop
repz
jl
or
add
cmpsb
outsl
jb
dec
out
mov
and
jno
or
or
and
popa
popf
movsb
push
add
inc
pop
loopne
mov
addr16
stc
popf
and
jmp
jns
test
pop
mov
and
sub
pop
lds
dec
xor
js
sbb
mov
fs
add
sti
jbe
test
int
push
aaa
in
xor
test
or
rcrl
xor
cli
mov
and
xor
mov
nop
test
scas
pop
outsb
push
cmp
jmp
std
aas
lret
fsubp
in
cltd
insl
mull
sub
mov
int
lret
jbe
and
push
pop
je
push
mov
mov
or
pop
jae
dec
cmp
insl
ja
dec
mov
mov
outsb
adc
cmpl
test
das
dec
jecxz
test
rorl
dec
mov
outsb
stc
sbb
pop
xlat
int3
xchg
mul
or
popa
std
dec
adc
mov
in
jns
pusha
bound
into
pop
leave
insl
add
lcall
fnclex
jmp
pushw
xchg
mov
pop
in
lret
lods
lret
pushf
call
or
test
mov
out
inc
ss
xchg
movsl
dec
jne
dec
cmp
xchg
popf
insl
push
mov
aas
inc
ss
xor
jmp
popf
push
sub
jle
in
test
nop
sub
mov
add
push
xor
and
or
mov
or
pusha
es
cli
add
jp
mov
jecxz
xchg
push
pop
cmp
pop
xchg
xor
mov
aam
cwtl
incb
sbb
xchg
imul
inc
fcmovne
cmp
adc
xchg
ss
popf
pop
mov
aad
mov
loopne
addr16
std
mov
push
sub
and
lods
mov
xchg
cltd
dec
and
cld
inc
scas
inc
into
sbb
enter
push
push
das
mov
mov
push
xchg
fldcw
fsubrl
pop
aaa
or
xor
inc
pop
bound
test
in
xchg
inc
dec
aaa
pop
sbb
popf
popa
leave
jbe
mov
add
xor
movsb
out
sub
lods
das
mov
inc
mov
dec
mov
mov
clc
ret
cmp
icebp
arpl
mov
ffreep
jb
cmc
imul
add
add
shlb
pop
push
mov
sub
and
js
jne
inc
aad
lret
xor
daa
inc
imul
fldenv
sub
into
sahf
push
adc
pop
lods
cmp
inc
mov
jns
and
jne
jmp
nop
in
fidivs
nop
mov
cwtl
or
lods
test
pop
test
jge
or
stc
mov
sarb
mov
ja
aam
cwtl
repnz
in
jecxz
pop
inc
jl
or
ss
xor
cmp
je
dec
sub
div
sti
test
cmp
inc
mov
cs
cmp
rorb
iret
idivb
pop
mov
add
aaa
add
lods
ret
mov
mov
lcall
test
mov
lods
int
jo
xchg
decl
rolb
xchg
dec
in
and
daa
push
loop
std
xchg
add
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
pop
add
add
movsb
nop
out
ret
and
in
mov
xchg
daa
ret
sahf
mov
cmp
xchg
mov
sbbl
fidivrs
mov
mov
ljmp
pop
sbb
mov
sbb
push
inc
test
das
and
cmpsl
mov
jp
sbb
and
inc
inc
add
inc
or
mov
insb
gs
cmp
push
fisubs
cmp
lcall
jno
pop
enter
xor
fsubrl
daa
xchg
lret
fiadds
add
cmpsl
add
addr16
addb
test
pushf
es
ficompl
arpl
xor
popa
iret
mov
imul
fsubs
sub
xchg
push
pop
pop
cltd
in
aaa
pusha
jecxz
mul
sub
cli
and
mov
clc
out
in
in
sarb
sub
faddp
cltd
rcrl
mov
and
in
xchg
ficoml
push
mov
mov
cmc
in
cmp
adc
mov
cmp
mov
aas
cmp
jae
add
mov
notl
mov
add
mov
add
dec
and
jne
cmp
fs
ja
add
cmp
or
inc
int3
test
orb
push
icebp
fs
ds
fsubl
add
popf
mov
jne
lods
mov
cmp
fxch
in
inc
jae
mov
clc
inc
cmp
mov
pop
sti
inc
or
push
test
mov
adc
ljmp
loope
fcomps
iret
dec
bound
sbb
repz
dec
mov
mov
xchg
and
movsb
sarb
sub
test
cltd
mov
cli
out
nop
in
and
push
aad
add
stos
je
fadd
iret
inc
int3
out
fldl2t
jbe
dec
out
shrb
sub
jae
jmp
mov
addr16
pop
push
es
fs
shrl
mov
mov
mov
shrb
das
nop
sub
cmp
mov
popf
pop
fs
xchg
push
adc
mov
mov
imul
dec
sbb
cld
pop
sub
or
scas
jmp
outsl
adc
mov
sub
cltd
movsl
sub
stc
mov
pop
shr
mov
addr16
arpl
rol
jae
outsl
xchg
push
cmp
xchg
lock
sar
aam
mov
mov
xor
mov
ja
dec
mov
jge
mov
mov
mov
dec
je
mov
sub
std
dec
iret
sub
mov
mov
push
int3
adc
outsl
pop
imul
cs
movsl
cld
orb
or
inc
mov
sbb
inc
shlb
push
xchg
insl
stc
pop
pop
aas
push
popa
lods
sub
inc
mov
mov
xor
nop
mov
fsubrl
mov
adc
push
push
and
push
aad
pop
or
jge,pn
pop
or
mov
cltd
enter
and
sbb
push
call
in
xlat
enter
adc
inc
arpl
or
pop
fisubrs
and
int
xchg
inc
push
cmp
xchg
ds
movsl
xor
mov
add
lahf
test
mov
shrb
rcr
enter
sub
adc
inc
stos
push
xor
push
lods
jno
jecxz
into
outsb
and
mov
out
sub
xor
fisttpl
test
repnz
sub
mov
fbstp
cmp
mulb
inc
push
sub
mov
push
inc
in
add
mov
cmpl
roll
popf
xacquire
int3
popa
dec
lea
push
nop
sbb
inc
xor
add
pop
je
xchg
ss
rorb
xchg
fcmovu
jge
into
mov
push
push
ja
stos
iret
xor
loop
push
jecxz
xchg
and
mov
pop
pusha
mov
ja
lret
pop
dec
loope
xchg
bound
sub
mov
fimull
mov
bound
dec
lahf
jle
and
aad
inc
or
cmp
and
fwait
or
aas
fnstcw
jno
jo
call
mov
shl
sbb
aas
jmp
lea
pop
jae
push
nop
out
sub
inc
push
nop
cmp
cwtl
add
in
test
inc
test
mov
jmp
xor
xor
sub
cs
rcr
add
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
add
sbb
add
pushf
ss
outsb
lods
bound
call
cmp
jo
push
movsl
std
outsb
cli
int3
mulb
outsl
xchg
jle
jp
mov
cmp
mov
mov
lret
pop
or
mov
cmp
dec
fnstcw
cmp
fadds
mov
and
iret
cmc
into
lret
sbb
lds
mov
and
decb
cwtl
arpl
aad
mov
lods
or
mov
and
xor
xchg
mov
push
xor
pop
pushf
xlat
or
repnz
fwait
push
pop
lcall
xor
fldcw
jae
scas
fistps
mov
push
decb
push
mov
inc
jb
xchg
rclb
jmp
stos
mov
xor
dec
push
jl
mov
mull
xorb
mov
push
aas
data16
mov
cmpsb
push
inc
ret
xchg
fcmovnbe
leave
cmp
xchg
aaa
sub
mov
push
jmp
pop
imul
rcrb
jle
push
or
sbb
dec
test
aam
pop
jbe
cmpsl
jne
lock
cmp
mov
mov
add
dec
out
out
xchg
sub
adc
add
std
lea
xchg
lods
cmc
test
push
std
adc
mov
adc
loopne
clc
xor
mov
mov
sarb
push
cmp
push
lds
fadd
dec
outsb
mov
dec
fsub
add
sbb
fmuls
aas
push
dec
xlat
mov
adc
loopne
dec
push
cmpsb
repnz
prefetchnta
aas
mov
mov
jne
das
xlat
outsb
insb
cwtl
pop
imul
cmpxchg
daa
mov
addr16
aas
adc
scas
xchg
mov
push
adc
fiadds
pop
lcall
push
lea
icebp
psrad
jne
in
test
cmpsb
das
jb
testl
pop
shlb
mov
or
std
daa
loope
add
inc
out
fwait
sbb
mov
dec
lret
fs
sub
es
out
adc
and
pop
adc
leave
lahf
bound
imul
dec
fcmovb
stc
mov
insl
mov
add
add
lahf
xchg
in
mov
cmp
stos
arpl
mov
test
adc
jle
mov
adc
ds
sbb
mov
scas
es
adc
dec
popf
aas
add
vunpckhps
cmp
loop
xor
jge
jecxz
pop
pop
mov
cmp
push
lea
and
shrl
lcall
cs
daa
jmp
mov
ja
add
hlt
bound
inc
nop
orl
ljmp
cmp
push
lock
shrl
sbb
negb
stos
push
mov
add
addr16
mov
xchg
scas
out
fwait
adc
mov
movsb
nop
lret
cld
pop
fldl
test
and
rcll
out
sub
xchg
lahf
mov
and
jne
int
mov
sbb
sbb
out
ja
xor
jle
in
cmp
or
rol
in
xchg
lcall
sub
in
mov
cmc
lods
test
inc
mov
ss
or
push
out
test
fs
cs
lds
jns
dec
add
enter
sub
fwait
mov
ret
dec
mov
clc
push
dec
xchg
scas
out
loope
cmp
pop
setp
insl
scas
xchg
shlb
aas
push
das
fcoms
fcomp
in
xchg
out
mov
fisubs
mov
pop
addb
stos
jns
scas
adc
sbbb
mov
and
mov
or
jl
mov
mov
push
test
pop
cwtl
push
dec
cmpsb
shll
mov
data16
inc
and
dec
and
add
iret
out
into
clc
lods
arpl
imul
lods
xor
jae
xchg
sub
cmp
roll
xchg
mov
pop
dec
mov
jbe
sarb
pop
nop
scas
jne
outsl
scas
mov
jae
mov
jge
shlb
and
lea
aas
or
mov
mov
xchg
push
add
imul
push
mov
xor
jg
pop
pop
cltd
loopne
movsb
imul
mov
mov
lea
xchg
stc
pop
mov
gs
and
movsb
mov
pop
inc
nop
mov
cmpsb
mov
les
mov
push
ljmp
test
jb
inc
test
pop
dec
or
out
ja
popf
inc
push
xchg
js
and
scas
pop
jle
ret
mov
and
pop
aad
test
xlat
incl
jae
mov
lods
mov
or
sub
mov
mov
add
cmp
add
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
mov
add
adc
add
scas
in
pushl
std
lock
sub
push
push
sub
decl
dec
xchg
cld
xor
test
jne
adc
sbb
punpckldq
ret
orl
js
cwtl
cwtl
xchg
hlt
imul
int
sbb
iret
xor
xchg
mov
or
jp
repnz
ljmp
cli
in
jo
or
addb
call
xchg
inc
mov
lock
or
int
fs
fidivrs
jg
imul
cmc
mov
pushf
ss
sahf
arpl
cli
aas
dec
add
out
int
out
leave
or
stos
dec
call
inc
mov
cmpsl
movsb
jo
mov
inc
pop
fisubs
or
fldl
xchg
push
test
iret
imul
ljmp
fwait
xchg
enter
dec
dec
aaa
jae
lods
loope
lret
dec
and
mov
sarb
inc
xchg
and
sti
pop
daa
jl
loope
cli
jnp
dec
add
xchg
push
leave
xchg
dec
rclb
cli
mov
sbb
add
enter
xor
or
inc
out
mov
mov
mov
pop
fdivl
xor
ss
movsl
fdivrs
aam
fiaddl
xchg
pop
sti
aas
jbe
mov
gs
push
mov
lret
lods
push
pop
decb
mov
add
pop
sti
iret
jae
xor
jnp
nop
mov
push
inc
and
pop
mov
js
ret
mov
aas
int3
xor
lock
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
dec
pop
add
outsl
or
add
pop
fdiv
xchg
mov
push
in
and
repz
les
leave
mov
lods
loope
pusha
sbb
sub
or
popf
mov
shll
mov
xchg
inc
inc
jle
cli
adc
jae
out
inc
int3
int
jmp
and
stos
lahf
cmp
inc
mov
sub
shlb
popa
pop
insl
loop
cs
cmp
sub
jp
xor
jle
dec
mov
inc
mov
xchg
pop
jb
mov
sbb
in
jmp
pop
cltd
xchg
sti
adc
sbb
jg
ds
cmp
jle
mov
pop
sbb
jb
push
pushf
lret
xchg
xlat
sub
jmp
ret
sti
test
fnstsw
mov
jbe
in
mov
repz
cwtl
lcall
leave
enter
in
push
data16
loope
xchg
insl
ja
aas
mov
repz
int3
mov
sub
pop
inc
pushf
xchg
pop
mov
pop
adc
test
iret
lret
ds
push
addr16
mov
inc
cmp
push
stos
sbb
add
push
imul
ss
inc
mov
pop
pop
lea
or
int3
sub
es
sbb
push
lret
push
clc
pop
dec
sub
int3
les
insl
cmp
test
sbb
aad
lods
xchg
and
cmp
nop
pmaddwd
repnz
xchg
add
add
mov
jmp
pop
mov
lods
push
and
shll
inc
jnp
push
adc
and
cmpsl
loop
push
dec
std
enter
scas
data16
push
mov
fwait
rcrl
cmp
push
and
pop
popa
mov
sub
mov
sbb
mov
jp
cltd
mov
es
sub
fildll
push
dec
push
xchg
popf
mov
je
or
clc
jmp
adc
mov
push
push
sbb
int3
lahf
in
repz
dec
or
mov
insb
iret
jbe
fsubs
nop
stos
loopne
xchg
jae
and
in
sub
es
in
ljmp
cmpsl
xchg
sub
repnz
stos
mov
sub
push
out
sbb
inc
adc
sti
mov
push
jle
sbb
ret
mov
push
xor
cmp
insl
aad
gs
test
mov
sbb
orb
fistpll
cmc
rorb
aaa
insb
ss
xchg
and
xchg
rcll
pop
push
jle
loop
fiadds
cmpsb
movsl
addl
xchg
data16
out
xchg
sub
sbb
mov
jl
xchg
loop
xchg
xchg
icebp
jmp
rcrl
std
std
jmp
lea
je
lahf
inc
xchg
add
stos
xor
icebp
fcomps
ficomps
cmp
cmpsb
cmp
adc
xchg
movsl
shll
mov
cmpsb
repnz
jmp
in
xchg
mov
adc
push
insb
test
cmp
pop
push
loope
mov
cmp
scas
mov
sbb
mov
mov
pushf
push
push
mov
mov
ljmp
cli
lods
jo
aad
insl
cmpsl
sub
pop
mov
arpl
lcall
in
push
mov
sbb
and
xlat
pop
or
inc
push
push
inc
jb
shll
mov
lahf
shlb
jns
insl
add
gs
jb
mov
xor
jo
in
lock
inc
rcrl
jne
cwtl
stos
jo
pop
icebp
sub
incb
insl
sbb
mov
fsubs
mov
mov
cwtl
repz
cmp
push
fisubrl
xchg
lret
inc
stc
push
cmc
lods
aas
pop
and
add
mov
cli
xchg
cmpsb
or
loope
scas
inc
sub
pop
inc
lods
out
std
insb
push
test
jg
or
xchg
mov
jns
jb
xlat
lret
jo
mov
das
mov
bound
popf
ficoml
or
xchg
mov
xchg
mov
add
add
cmp
lods
jg
xor
rdmsr
push
fdivr
cmp
lock
jbe
add
cmp
imul
adc
mov
or
push
jb
es
pop
mov
push
icebp
leave
sti
jnp
fisubrl
sbb
aas
outsb
sub
mov
cs
mov
movsb
idivl
pop
mov
mov
outsb
fidivrs
insl
mov
ficoml
jmp
nop
and
adc
xchg
jg
dec
mov
jg
cmp
jb
sbb
push
xchg
inc
sbb
test
cmp
shll
imull
mov
push
adcl
mov
push
mov
ds
ds
in
scas
and
jle
or
ds
push
or
xorb
cmp
sub
inc
dec
cmp
ret
popf
or
insb
push
movsl
pusha
adc
inc
jp
lods
in
int3
xchg
push
hlt
repnz
inc
mov
imul
js
cmc
out
xchg
xchg
cltd
loop
aad
test
xlat
sbb
pop
push
das
sub
xchg
push
pop
push
cmp
mov
aad
sti
push
clc
jle
mov
push
shl
testl
dec
daa
and
add
lea
and
js
mov
dec
adc
and
out
fwait
ss
xor
icebp
pop
mov
test
daa
inc
in
outsb
ja
fbstp
les
mov
sti
sub
enter
sbb
pop
insb
movsl
mov
fcomps
adc
test
cvtpi2ps
ds
pusha
inc
subb
lahf
lcall
dec
out
xor
cmp
cli
mull
mov
push
jle
leave
pop
ret
jge
ljmp
xor
jns
rcl
cmp
adc
push
jp
imull
sub
pop
int3
lods
and
xchg
or
bound
popa
loopne
mov
push
mov
xchg
inc
xchg
sub
fdivrs
inc
and
jp,pn
dec
sub
jnp
inc
dec
jnp
loope
xor
pop
test
push
jns
insl
push
daa
stos
jp
and
and
out
mov
dec
sti
lcall
sarl
push
in
enter
xor
aaa
push
add
ja
clc
das
inc
pop
nop
fucomp
dec
push
dec
out
inc
xlat
jbe
ss
out
insl
arpl
pop
je
aas
adc
cmp
cmp
xchg
mov
jge
outsb
xor
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
inc
add
add
add
add
mov
loop
int3
push
adc
je
xor
pop
sbb
xor
dec
outsb
lods
jmp
mov
push
cltd
sti
xchg
mov
pop
fcomps
loop
popa
jecxz
dec
push
js
daa
dec
sti
shl
inc
clc
add
inc
dec
rcrb
ds
cmp
cmp
nop
and
aaa
shr
sub
in
lds
sbb
push
cmp
xchg
rcll
jg
xchg
int
pop
repz
push
pop
dec
pop
cmp
mov
or
es
xchg
cmp
dec
add
pop
xchg
bound
push
pushl
lret
aad
mov
test
xchg
sbb
add
jl
jae
push
popf
jne
loopne
icebp
divl
dec
push
out
pushf
inc
mov
xchg
xchg
pop
adc
shll
pop
rcrl
sub
add
pop
jbe
dec
inc
sbb
inc
push
pop
arpl
cmp
out
nop
into
je
ss
adc
ficoml
pusha
movlps
fwait
movsb
stc
aad
push
jle
je
imul
lods
push
mov
pop
pop
clc
or
xchg
sub
test
jns
jns
nop
lcall
scas
cld
mov
push
mov
shll
mov
sbb
jae
pusha
mov
mov
in
lea
popf
xchg
lret
in
iret
je
addl
push
xor
pop
icebp
push
mov
ss
fstl
mov
mov
notrack
adc
jg
fs
ds
xchg
xor
lea
mov
stos
jns
push
or
stc
mov
xchg
push
xchg
fs
pop
pop
adc
inc
lret
or
push
dec
leave
enter
pslld
out
fs
std
push
sub
mov
pop
mov
add
adc
insl
pop
add
loop
sbb
xchg
dec
and
mov
sbb
test
in
incl
cwtl
outsb
imul
cwtl
or
repz
xor
xlat
mov
rcll
inc
bound
jp
add
adc
cld
pop
imul
add
push
dec
inc
and
call
jb
fcoml
into
cmc
out
jge
and
mov
sahf
loopne
jbe
cmp
mov
js
cmp
xor
cmp
mov
ja
cli
sbb
pop
out
leave
sbb
mov
inc
cmp
imul
cmp
jnp
sub
pop
cmp
mov
fnsave
cmp
movsb
and
test
mov
aam
movsl
push
mov
pop
std
lret
dec
jb
lods
imul
gs
dec
push
push
out
mov
in
movsb
mov
or
mov
clc
leave
add
sbb
cmp
call
or
and
mov
shll
test
test
icebp
insb
push
lahf
cmp
daa
ficomps
out
jns
add
pop
and
and
stos
sub
fmull
rolb
or
jle
or
shufps
hlt
jo
in
je
imul
sub
out
outsb
shll
push
mov
and
push
clc
xchg
cmp
cmp
jae
xor
xchg
inc
cmpsb
cmp
ss
sbb
adc
mov
mov
adc
hlt
dec
sti
add
hlt
jg
mov
add
jle
mov
and
shlb
aam
jnp
clc
scas
xor
sub
lcall
lcall
xor
fistpll
addl
lahf
xor
test
push
in
data16
xchg
jnp
adc
cmpsb
inc
sub
test
mov
sub
push
sub
outsb
loop
leave
and
mov
and
leave
rcrl
cld
loope
or
mov
xor
pop
xchg
mov
cmp
sub
movl
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
add
add
add
add
ja
push
adc
std
mov
shl
cltd
sub
les
mov
mov
push
mov
fcmovnb
lods
int
inc
cmp
lock
rcll
hlt
jne
bound
pop
pop
mov
aad
inc
insb
jnp
xchg
aaa
adc
enter
cltd
mov
push
jnp
mov
dec
inc
jns
mov
cmc
pop
loop
fistpll
xchg
xchg
fiadds
lods
mov
dec
xlat
xor
sbb
hlt
mov
jecxz
xchg
and
fdivr
sti
out
add
or
xchg
lret
xchg
icebp
mov
push
outsl
mov
xchg
clc
sbb
xlat
jb
cmp
ret
inc
clc
scas
xchg
sbb
ret
stc
lret
cwtl
add
in
xor
test
repz
push
repz
mov
sub
dec
lret
je
mov
stos
inc
jg
inc
cmpsl
sbb
pop
add
dec
imul
mov
xchg
mov
daa
loopew
push
xchg
or
cmp
add
pop
add
or
aaa
int
jnp
jae
add
pop
dec
jo
das
out
out
adcb
mov
loopne
adc
fsubr
mov
lods
adc
lds
out
adcb
mov
sub
push
out
add
jno
or
dec
xchg
fisttpll
xor
add
xchg
orb
out
pop
lret
stc
lods
ret
insl
inc
repz
xchg
shrb
mov
inc
jmp
sub
test
leave
insl
jnp
dec
or
xlat
mov
pusha
xor
cmp
sbb
test
enter
cli
ja
jno
sbb
push
jl
out
pop
push
inc
scas
movsl
mov
out
sub
es
mov
xlat
stc
sbb
jb
imul
data16
sbb
ret
jb
jno
dec
xor
scas
aas
jg
lods
jmp
xchg
lock
jnp
mov
inc
dec
mov
push
stos
out
clc
scas
rclb
clc
lds
dec
outsb
repnz
xor
sub
pop
fstps
mov
inc
and
shll
loopne
loop
mov
popa
fcmovbe
dec
mov
and
push
movsl
push
mov
add
jns
in
or
les
cmp
mov
cmp
add
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
and
add
addb
add
lock
mov
rorb
cmp
js
inc
mov
inc
pop
pusha
xor
punpcklbw
cmp
push
test
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
add
cmpsl
add
add
test
inc
cmp
iret
push
in
cmp
add
mov
jbe
push
mov
insb
nop
cs
xchg
and
sub
cld
inc
jmp
xor
outsl
pop
push
lcall
xchg
ljmp
fwait
mov
xor
jmp
and
pop
pop
or
movsl
arpl
dec
test
inc
imul
mov
mov
fsqrt
int3
add
mov
add
test
cwtl
add
ret
je
je
mov
in
jne
repnz
add
dec
mov
sbbb
int
adc
sbb
in
xchg
jmp
xchg
stos
cmp
mov
xor
jb
sbb
std
test
int
mov
iret
mov
cltd
xchg
fmulp
jnp
lock
jl
add
xor
repz
enter
jl
cmp
or
out
inc
scas
mov
pop
movsl
lods
cmc
incb
sub
negl
idivb
idivl
jbe
mov
add
lock
lret
and
ja
mov
andl
cmp
push
les
sub
sti
testl
push
inc
jge
sub
adc
sahf
test
scas
mov
mov
inc
push
fs
push
mov
leave
push
je
jmp
xor
jl
xlat
pop
xchg
adc
sbb
mov
fldt
ret
jns
ror
cwtl
mov
insl
pop
jnp
cwtl
pop
ret
test
lods
je
stc
out
cmc
es
inc
sub
lods
and
les
and
outsb
outsl
movb
push
iret
arpl
xor
sti
cmp
mov
pop
xchg
mov
mov
stc
or
idivb
lret
fadds
push
inc
xchg
aas
pop
ss
push
inc
sub
icebp
push
push
add
push
jge
sub
data16
xchg
inc
mov
jne
add
sbb
lds
shll
or
insl
aaa
cmc
dec
orl
stc
arpl
fmull
mov
out
jae
dec
xchg
mov
jecxz
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
add
add
cmc
movsl
cwtl
loopew
fwait
fwait
aam
cmp
push
or
mov
rorl
pop
pop
inc
jo
xchg
jae
push
rolb
rclb
mov
fs
lret
xlat
pop
out
cmpsb
xchg
push
jg
jmp
sub
adc
or
test
sbb
lret
imul
xchg
and
int3
lcall
inc
cli
lods
jmp
fldcw
push
test
xor
mov
jnp
aaa
inc
andl
and
leave
outsl
hlt
popa
sahf
pop
xor
cmc
arpl
mov
mov
dec
lea
vshufps
js
mov
pop
push
cwtl
adc
push
pop
add
push
testb
jg
jbe
jmp
cmc
in
clc
xor
es
dec
pop
mov
adc
aas
fcompl
imull
adc
outsb
pop
pop
xlat
cmp
mul
rcl
pop
lods
xchg
dec
insb
mov
out
stc
repz
jmp
add
std
lret
or
fimuls
fs
add
das
jle
pop
loopne
lock
adc
aad
push
dec
or
push
popf
imul
xor
movsb
lea
adc
sar
mov
xlat
cltd
dec
into
jle
jecxz
test
jl
test
dec
nop
xor
arpl
rorl
push
lret
lret
scas
pop
imul
mov
imul
mov
loop
mov
xor
cmp
inc
fidivs
inc
es
leave
or
mov
in
clc
add
pop
mov
inc
outsl
inc
xlat
in
jo
sbb
xchg
and
xor
ja
push
std
sub
push
enter
subb
mov
sbb
loope
movsl
jbe
xor
jg
pop
mov
mov
mov
mov
out
or
repz
shrb
dec
dec
xor
mov
push
out
xchg
mov
xchg
xchg
loopne
ds
fisubrl
mov
lahf
jo
jle
jg
xchg
mov
repnz
scas
repnz
movl
ljmp
rcrb
icebp
lods
test
push
in
shlb
mov
jne
insl
int
and
jg
jg
add
dec
add
dec
mov
mov
inc
and
enter
notb
mov
jbe
jmp
cwtl
iret
jbe
cmp
fstpl
lods
pop
dec
cmp
push
mov
cmpsl
inc
mov
and
scas
pop
push
fcoml
xchg
sbb
push
test
mov
testl
mov
cwtl
rol
fcmovnu
adc
dec
adc
stos
and
cltd
adc
icebp
xchg
fs
mov
int3
imul
daa
aaa
adc
subb
add
or
shr
mov
inc
lahf
sarl
xchg
shl
daa
ret
or
jmp
xchg
sub
lret
sbbl
or
js
mov
sub
jle
or
cmp
add
mov
sbb
xchg
fnstsw
shlb
mov
cmp
inc
lock
adc
xor
mov
mov
pop
test
fnsave
jnp
cmp
push
pusha
add
insb
in
outsl
insl
je
call
ret
cld
call
std
fdiv
add
push
jnp
lahf
scas
sbb
xchg
and
ficoml
push
scas
mov
pop
sub
xlat
sbb
out
pop
dec
xor
aam
pusha
rorl
prefetch
or
daa
pop
adc
fcompl
cmp
cmp
sub
sub
push
mov
movb
stos
lods
or
push
push
mov
push
popf
test
jno
inc
mov
aaa
sbb
call
pusha
sub
dec
push
sbb
sbb
and
adc
leave
jae
cmpl
imul
notl
ds
cs
mov
push
roll
lahf
pop
jns
ficoms
imul
pop
stos
pop
sub
pop
add
inc
inc
sbb
imull
dec
dec
inc
call
cmp
jle
cmc
pop
dec
mov
jnp
pop
xorb
std
scas
inc
push
rcrb
xchg
mov
push
cld
add
push
cmp
cmp
add
and
sbb
not
mov
fninit
xchg
fistpl
cltd
std
mov
mov
cmp
or
push
xor
push
pop
aaa
add
sbb
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
add
add
scas
adc
adc
test
or
std
sbb
mov
mov
and
ja
push
mov
adc
sbb
push
sub
push
mov
addl
insb
pop
cltd
or
js
and
add
pusha
pop
xchg
shrb
pusha
inc
cmp
jns
inc
into
jns
dec
rolb
push
mov
add
pop
lea
sbb
shr
call
inc
mov
stc
mov
sub
and
mov
into
test
adc
outsb
xchg
cld
xlat
inc
and
rcl
fidivl
xchg
jb
xchg
je
inc
xchg
cli
sarb
iret
sbbl
sub
jae
or
add
mov
adc
inc
sub
and
lds
and
and
jo
adc
bnd
aam
mov
cs
jno
adc
outsl
mov
add
imul
xor
or
jl
cld
push
jae
fldl
insb
sub
jnp
js
enter
shll
add
mov
mov
movsb
push
mov
push
add
icebp
xchg
shl
push
sub
outsb
mov
cmp
mov
inc
movsl
jnp
lcall
rol
insl
inc
mov
cmp
adc
cmp
jo
fisttps
sub
push
push
cld
insl
adc
mov
or
in
ficoms
ficompl
push
adc
movsb
mov
add
lds
sbb
nop
stos
daa
scas
jmp
fs
sbb
pop
subl
jl
inc
ret
jmp
enter
ss
add
xor
mov
sbb
inc
mov
push
sub
notl
dec
ss
sub
movsl
dec
mov
inc
xchg
fwait
dec
adc
in
fwait
arpl
mov
add
mov
push
xor
es
shrl
cmp
and
xor
aaa
xor
mov
leave
xchg
shll
push
std
shlb
mov
shl
and
push
addr16
adc
lret
sbb
xchg
js
xchg
jno
xor
mov
lret
xor
mov
cld
in
xchg
or
xor
dec
xor
pop
idivb
notb
xchg
inc
fimull
repnz
sbb
push
adc
notb
or
mov
insb
jge
aad
sub
movsl
fnstcw
test
cli
cmpsl
inc
mov
inc
and
lret
sbb
in
out
gs
jle
jmp
sbbb
lock
add
push
jl
push
mov
add
leave
fsubrl
sub
fmuls
mov
icebp
cmc
cwtl
ss
sub
dec
and
out
cmp
inc
add
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
push
add
stos
pop
add
ficoml
icebp
cmp
mov
add
int
fnstenv
das
sbb
pop
push
mov
cmpsb
cmp
cld
push
pop
sti
mov
add
cmove
pop
sti
out
int
mov
pop
jne
cltd
xor
testl
or
xchg
nop
inc
sbb
clc
jo
test
das
jecxz
cmp
and
mov
aam
shr
pop
adc
std
lods
int
pop
mov
data16
lea
fistps
cli
add
fwait
add
adc
xchg
or
pop
stos
lock
push
sbb
aaa
dec
sbb
pop
call
xchg
mov
add
mov
mov
mov
pop
sub
mov
and
rcrl
sub
xor
mov
jbe
pop
mov
adcb
outsl
ret
and
pushf
insl
mov
jbe
sbb
bound
push
sub
add
or
fcomps
and
jmp
jg
icebp
cmp
insb
mov
jns
adc
pop
sti
mov
rolb
in
jge
and
fsubrl
sahf
pop
outsl
in
or
js
or
clc
ret
and
test
jmp
xor
and
jle
jmp
and
and
mov
pop
and
aaa
cmpsl
pop
insl
jno
sbb
outsb
jle
frstor
mov
ss
mov
stos
fidivl
scas
mov
test
or
sbb
and
inc
jle
inc
push
cmp
pushf
and
push
sub
repz
fidivrl
xchg
and
sbb
push
mov
insb
xor
mov
mov
jmp
mov
fstp
fists
in
inc
or
mov
dec
or
xlat
adc
cmp
mulb
fildl
cmp
cmp
ja
jmp
xchg
out
sub
mov
xor
jl
cwtl
mov
orl
adcl
mov
movsb
xchg
pop
or
mov
ret
repz
daa
out
out
sbbb
fwait
jbe
outsb
jl
mov
or
sbb
pop
out
stos
loop
test
push
mov
push
lea
je
enter
cmp
out
lods
xor
bound
jge
pop
mov
sbb
jmp
lock
in
dec
push
cmpsb
or
subl
test
mov
push
mov
pop
out
cmp
cmp
mov
and
shll
sub
and
clc
daa
jbe
sbb
and
movsl
jb
mov
jecxz
and
xchg
xabort
inc
dec
sbb
or
repnz
je
imul
sub
or
mov
mov
lods
insb
insb
sar
in
sub
lcall
clc
adc
jp
mov
ret
nop
mov
and
sub
pop
mov
jnp
pop
jle
sahf
pop
jns
pop
inc
imul
fld
pop
mov
in
adc
dec
add
repz
les
sub
push
push
roll
ljmp
ss
push
pop
mov
add
xor
jno
mov
pop
pop
xchg
rcrl
fildll
sbbb
xchg
push
add
sti
imul
xchg
or
xchg
imul
jo
shrl
sbb
or
mov
inc
add
sahf
insb
jmp
mov
jno
fistpl
leave
sahf
ja
mov
lcall
cli
mov
ss
push
mov
and
gs
mov
cmp
xchg
lock
lcall
das
sub
pop
mov
lods
fidivs
add
add
loope
mov
aam
test
cmp
inc
cmpsb
mov
in
stc
pcmpgtd
jne
push
push
loopne
dec
sbb
xchg
push
jne
movsb
or
je
add
add
cmp
push
adc
ror
flds
mov
in
push
call
mov
shlb
stos
fcomps
in
mov
mov
rcrl
out
repz
out
cmp
or
insb
ret
mov
call
test
adc
pusha
inc
jecxz
bound
mov
pop
mov
mov
push
jae
sub
scas
xchg
sub
sarb
jo
sub
dec
mov
cmp
cmp
xor
jg
cmp
adc
xchg
scas
adc
lret
ja
sbb
pop
stos
out
push
push
cmp
sbb
add
movsb
dec
aaa
inc
dec
gs
out
sub
icebp
inc
lds
fcomip
std
and
mov
es
dec
repnz
sub
pop
pop
shrl
dec
rorl
add
mov
out
mov
stos
lods
mov
incl
xor
sub
jp
push
cwtl
outsb
add
shll
xchg
cmpb
lea
mov
push
pop
rcrb
stc
movsb
sub
push
test
fdivs
rclb
pop
adcl
jp
mov
pop
shl
dec
int
out
enter
fs
cmc
mov
divb
cmp
push
jle
ret
mov
xchg
lret
mov
pop
add
mov
jo
outsl
insb
es
jp
fwait
push
xor
popa
leave
and
pop
ret
ljmp
sub
jmp
cs
push
out
add
seto
into
mov
mov
jle
xchg
mov
push
mov
sbbb
fdiv
xor
xor
cli
and
popf
sub
in
mov
dec
js
notl
dec
mov
mov
mov
cmp
cld
or
xor
add
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
int3
add
add
add
bound
mov
scas
mov
dec
jne
pusha
sahf
shlb
sub
mov
cmp
add
sbb
iret
stos
not
lahf
out
lds
mov
pop
sbb
inc
les
xchg
dec
mov
adcb
ficoms
imul
outsl
jnp
add
mulb
aaa
jbe
ljmp
lods
push
shll
sarb
bswap
pusha
push
ljmp
add
jbe
mov
adc
hlt
test
nop
call
fs
fdivrs
sub
adc
add
adc
sub
mov
andb
in
shrl
lahf
adc
add
sbb
aam
daa
jae
out
mov
pop
jo
fnsave
pop
adc
xchg
cs
pop
push
mov
push
xchg
call
sahf
std
sbb
and
in
andb
and
enter
inc
popa
xor
pop
xchg
and
in
jne
fists
bound
xchg
pop
push
xlat
test
dec
loope
dec
std
xor
mov
mov
gs
ja
and
aam
push
sbb
sub
outsb
hlt
inc
and
jno
arpl
xchg
call
sub
das
cmp
or
add
adc
test
push
leave
popf
out
inc
seto
decb
lock
add
sub
lea
in
push
loope
or
inc
sbb
outsb
jae
sub
push
add
cmpsb
jmp
cmp
mov
mov
fs
rcll
xchg
mov
and
or
cmp
adc
add
popa
aaa
sbb
xchg
push
cwtl
hlt
ret
fisubl
xor
sub
adc
cmp
pop
fisubs
dec
xchg
das
xor
push
bound
mov
jl
inc
shl
int3
push
dec
xor
push
ja
cmc
pushl
shr
insl
dec
cmp
mov
jne
mov
addr16
lods
aaa
and
pop
loope
fildll
repnz
jb
mov
fimuls
ljmp
and
xchg
or
aam
xchg
ret
xor
mov
in
cmp
cwtl
repz
jle
fxch
mov
in
das
push
imul
xchg
movlps
add
cmp
out
xchg
repnz
jge
jnp
xchg
jle
sub
push
out
jb
sub
dec
fsubrl
push
out
cmpsl
adc
xchg
enter
rcll
push
jl
js
adc
clc
xchg
pop
lock
idivb
push
out
cs
pop
repnz
sub
jmp
sub
push
popa
stos
rolb
push
cs
mov
adc
pusha
fwait
lock
push
and
adc
iret
xor
pop
mov
or
aam
xlat
mov
pushf
std
aaa
adc
mov
enter
xchg
addr16
aam
addr16
rorl
mov
movnti
push
test
addl
imul
sti
fs
leave
inc
adc
arpl
xor
subl
cld
dec
and
push
aad
sub
mov
cmp
movsb
jg
stos
pop
xchg
dec
repz
lds
lahf
inc
xor
inc
shlb
in
sbb
mov
dec
fstpt
sbb
pop
jae
mov
cmc
lahf
pushf
aas
dec
mov
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
xchg
pop
add
lds
add
inc
aam
ret
push
mov
fldl
and
mov
iret
xchg
push
shrb
add
pop
sahf
push
dec
shll
nop
push
xchg
cwtl
clc
out
adc
lret
sub
jle
shlb
add
mov
loop
arpl
dec
cld
xlat
arpl
rcrl
adc
add
mov
xor
les
cmp
mov
lods
sbb
pop
popa
push
xchg
data16
bound
adc
aam
jne
adc
jle
in
adc
test
sbb
jg
push
cmp
mov
sbb
cmp
cwtl
xlat
add
fsubs
and
adc
mov
mov
movsb
xor
cmpsl
dec
lret
sbb
add
xor
jae
add
fchs
xor
fimuls
scas
dec
cmpsl
jns
mov
fadds
cmp
shrl
sbb
cltd
cmp
ret
jg
dec
fdivrp
int3
sub
popa
xor
shlb
cmp
popa
addr16
cltd
pushw
or
adc
cmp
mov
dec
inc
cmp
repz
repnz
xor
mov
or
push
pusha
push
push
jno
xor
jb
xor
shl
pop
lahf
jbe
mov
ret
negb
xor
nop
mov
fdivrl
mov
stos
pushf
xlat
fwait
jle
mov
clc
sti
ljmp
adc
or
aaa
outsb
mov
fldt
pop
or
loop
jg
xchg
xchg
insl
dec
push
or
xchg
pop
stos
jns
pop
ja
jmp
pop
in
ds
lret
push
sbb
stc
pop
pop
cmc
pusha
insb
rcrl
mov
ss
push
adc
pop
repz
outsl
lds
adc
push
mov
test
stc
cltd
movsl
in
pop
and
inc
mov
push
cmpb
hlt
repnz
pop
cmpb
aas
inc
push
aas
fstp
rol
orl
stos
ret
into
push
ja
cmpsl
pop
clc
sub
xlat
aas
sub
sub
add
pop
xchg
bound
movsb
mov
sub
popf
and
lods
pop
xor
icebp
sub
mov
xchg
repz
mov
xchg
out
or
xor
jbe
mov
roll
inc
stc
xchg
rclb
out
pop
inc
loop
mov
int
and
movsl
aad
xchg
clc
pop
mov
fdivl
test
pop
popa
inc
mov
pop
push
adc
push
add
xchg
add
push
xchg
shl
clc
mov
xchg
adc
mov
pop
fwait
push
adc
inc
pop
enter
mov
lods
xchg
mov
cld
xor
jp
mov
jo
push
push
dec
push
xchg
lds
sbb
mov
scas
add
lods
pop
mov
push
xor
aam
in
rol
xor
div
or
sub
and
cwtl
xchg
ds
out
pop
mov
fwait
add
je
push
lcall
and
adc
xchg
mov
mov
adc
dec
adc
out
test
ret
negl
inc
jge
shlb
hlt
adc
ds
lahf
cmpsl
mov
push
test
shll
fnstcw
inc
sbb
add
in
push
in
mov
xor
jmp
shll
out
inc
push
mov
mov
mov
fs
jns
jmp
sub
fsubs
fwait
stos
mov
pop
int
fadd
sub
sbb
fisttpl
jl
inc
jge
mov
adc
jl
loop
jge
sbb
mov
jge
scas
dec
test
push
add
dec
cltd
jg
jmp
fistpl
test
pushf
shrb
inc
ljmp
cmpsl
in
pushf
fmull
call
test
test
cmp
cmc
scas
xchg
jbe
or
add
fs
jg
daa
pop
dec
ss
sahf
or
or
lret
daa
movsb
outsb
dec
jl
mov
cmpsb
cmpb
mov
add
xor
cs
pop
imul
arpl
out
jle
ret
jo
das
lret
jo
push
mov
jg
out
inc
jns
pop
insb
jns
cwtl
lea
xchg
adc
push
adc
repnz
iret
rcrl
movsl
mov
push
cmp
push
push
mov
test
inc
lret
cmpsb
sub
ja
std
xor
das
dec
jle
inc
inc
das
in
mov
je
ljmp
subl
xor
push
cwtl
ficomps
jns
pushf
push
out
bound
data16
cmpsb
mov
testl
xor
sar
sub
pop
pop
push
ss
test
cs
add
dec
jp
fcoml
sbb
sarl
xchg
push
xor
cmp
iret
mov
fdivs
fcoml
mov
test
sub
or
mov
rcrl
push
aam
imul
push
imul
adc
add
aad
push
cld
ficoml
mov
sbb
pop
pushf
mov
xchg
or
dec
or
xor
adc
dec
popa
cmp
aaa
insl
inc
stc
jno
and
mov
jo
sub
pushf
jg
mov
pop
xor
ljmp
pop
test
ss
movsb
mov
rcl
outsb
sar
push
rorl
shll
out
inc
push
sbb
insb
xor
pop
fsubrp
add
cmp
loopne
adc
leave
outsl
sub
sbb
push
testl
out
sub
xor
push
push
out
pusha
xor
arpl
ja
or
or
jmp
add
sbb
in
js
shll
push
jmp
xchg
imul
shrl
insb
clc
cld
inc
xchg
js
out
loopne
leave
movsb
lock
stc
xor
adc
aam
into
fcmovnbe
xchg
mov
and
push
cli
stos
dec
add
mov
cmovle
ss
and
or
and
sub
jecxz
arpl
out
mov
sbb
push
jmp
mov
dec
sub
pop
aad
push
into
ret
aaa
jns
das
ret
lret
popf
pop
pop
mov
push
xchg
sub
mov
xor
mov
mov
cmc
icebp
inc
pop
mov
push
cmp
xchg
push
pusha
jp
mov
mov
in
cmp
ljmp
adc
stos
data16
sarl
sub
push
mov
add
sub
leave
je
pop
add
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
push
add
pushf
or
add
mov
jno
mov
and
outsb
stos
arpl
push
push
jmp
push
jecxz
mov
cmp
aad
xor
es
icebp
shrb
icebp
out
cmp
cltd
xor
mov
mov
push
rorl
mov
xorb
jo
xchg
pop
push
movsb
jno
xor
mov
pop
repz
out
in
xor
insl
sub
pop
jmp
in
sub
cmp
xchg
daa
stos
xchg
int
mov
test
mov
mov
dec
or
nop
or
jne
movsb
scas
mov
cmc
insl
xor
jnp
xchg
inc
jp
lock
pushf
sub
add
sti
adc
pop
ds
aas
aam
sar
rcr
add
cmc
sahf
mov
and
fdivs
loope
out
sub
and
dec
flds
push
or
mov
push
mov
call
jbe
push
add
sahf
inc
inc
fidivrl
out
pop
push
out
mov
cs
mov
xchg
and
std
lret
sbb
cmpsb
out
jnp
aad
cmp
add
pop
lahf
dec
mov
sub
sti
popf
clc
les
cltd
js
adc
pusha
xchg
loopne
aad
in
push
or
cmpl
push
jno
icebp
jbe
inc
in
pop
cmp
movsl
sub
jne
sub
xor
daa
movsb
inc
push
sbb
lods
adc
pop
or
pop
jg
or
test
test
into
jb
inc
es
cmp
pushl
rolb
inc
testb
dec
xchg
aaa
mov
in
data16
rcll
in
leave
insl
das
psadbw
mov
sub
jno
inc
insb
gs
das
daa
inc
lods
leave
dec
mov
icebp
xchg
or
iret
mov
pop
das
jno
test
push
jecxz
imul
aam
mov
jle
addb
stc
sub
push
add
and
mov
stc
xor
pop
fst
fs
fdivrs
jle
xchg
fisttpll
cwtd
std
or
mov
aam
repnz
push
popa
adc
mov
or
adc
inc
push
setae
insb
fdivrl
fadd
pop
add
xchg
das
movsl
pop
push
mov
les
xchg
call
cmp
aas
fidivs
mov
push
mov
aam
sahf
mov
movsl
mov
ret
in
add
mov
arpl
jp
clc
out
pushf
lcall
popa
mov
dec
mov
dec
dec
pop
or
and
mul
test
mov
jno
and
mov
xor
ss
mov
or
decl
cmp
or
lret
xchg
cmpsl
test
jne
push
jo
out
lcall
adc
test
pop
aas
add
dec
movsl
xchg
cs
mov
loop
sahf
pop
in
aad
mov
push
stos
pusha
jge
lods
or
testl
mov
add
aaa
pop
push
and
popa
cmpsl
sbb
mov
mov
in
inc
enter
movsb
idivb
lods
dec
sub
ret
mov
data16
cwtl
mov
leave
xchg
mov
lret
add
stos
and
imul
in
cmp
shrb
and
ficoml
std
nop
cmp
sbb
inc
and
fadd
lret
loope
xor
aaa
imul
lods
ror
ret
mov
add
in
inc
ljmp
add
dec
sahf
mov
imul
or
xor
out
stos
fsts
je
jo
aam
mov
fs
outsl
loop
hlt
scas
and
pusha
outsb
jecxz
rcrb
fsub
insl
pop
int3
dec
nop
subb
fdiv
push
dec
lea
add
test
or
dec
and
aas
fisttps
jnp
es
mulb
lods
cli
stos
popa
sbb
aas
mov
test
lods
loop
mov
sbb
mov
in
loop
mov
sbb
std
mov
push
out
mov
adcb
mov
jg
repz
test
stos
jns
leave
mov
loop
shll
stos
pop
push
repnz
ret
fidivl
jo
or
xchg
in
outsb
fdivs
test
and
mov
xor
adcl
push
call
and
in
fwait
js
pusha
sbb
mov
test
xchg
mov
or
sti
mov
decb
lods
lds
popf
sbb
pushf
or
arpl
or
fcoms
push
mov
sbb
fs
adc
clc
add
mov
mov
push
jle
andb
out
test
test
loop
sahf
fs
cmp
filds
push
movsl
decl
cmpsb
into
dec
repz
pop
xorl
addr16
ret
int
scas
xor
or
and
int
lret
sub
push
mov
mov
push
cmp
lcall
or
mov
inc
mov
cwtl
mov
mov
daa
out
xchg
icebp
sub
mov
nop
addr16
mov
pop
sti
jb
pop
outsl
mov
or
xor
sub
sbb
lret
pusha
hlt
inc
xorl
stc
sbbb
mov
or
or
fs
out
push
mov
xchg
imul
jae
pop
imul
fdivs
cwtl
or
loope
push
inc
daa
test
or
mov
jl,pt
push
sub
stc
xchg
into
sbb
and
add
and
int3
pop
cmp
gs
xchg
xorl
push
mov
inc
aaa
pop
nop
clc
xor
pop
ss
inc
mov
dec
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
add
add
push
mov
mov
rolb
jl
mov
stos
int
repnz
mov
xchg
or
lock
gs
mov
or
aad
xchg
and
out
cmp
xor
jp
test
repnz
daa
adc
sbb
pushf
fisttps
rclb
xlat
jp
and
adc
xor
cwtl
rcrl
adcl
mov
push
mulb
xor
xlat
and
fxch
dec
push
jb
dec
pop
mov
dec
xchg
pop
or
mov
push
mov
lods
rolb
adc
sbb
mov
pusha
out
sub
sub
fwait
aam
lcall
loope
adc
pop
xor
insb
stc
pop
nopl
je
fidivrs
xchg
lods
mulb
mov
scas
shlb
hlt
jp
jg
test
mov
cltd
out
rcrl
shll
dec
inc
xchg
enter
cld
or
or
xor
loope
fucomi
fs
mov
in
outsl
fdivrl
movsb
ja
dec
add
pop
or
rorl
test
int3
sub
aas
test
mov
in
adc
popf
sahf
loopne
aam
jb
or
scas
cmc
adcb
stos
sti
fldl2t
xchg
dec
out
mov
pop
mov
pop
push
inc
aas
icebp
mov
inc
add
dec
and
ja
adc
decb
adc
in
aam
xchg
xorl
jg
or
adc
insb
xchg
dec
adc
fucom
cmp
dec
mov
std
mov
jg
scas
pop
dec
iret
lahf
or
cmp
xor
repnz
xchg
ds
pop
lods
popf
scas
lahf
subb
xlat
idiv
sbb
fbstp
pop
jae,pt
push
and
sbb
or
mov
fadds
add
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
push
add
mov
movsl
mov
sbb
xchg
les
mov
in
pop
xchg
inc
push
push
jne
loop
sbb
in
shl
out
add
ficomps
sbb
cmp
mov
ffree
outsl
bound
lods
std
sub
xor
call
jge
add
mov
fisttpl
xor
in
adc
cltd
cmp
pop
xchg
inc
xor
std
fnstcw
pop
lods
clc
lds
dec
hlt
or
push
push
jmp
mov
xchg
pop
and
addr16
mov
mov
jle
xor
pop
mov
es
out
adc
fnstenv
mov
ljmp
into
jbe
cwtl
xchg
inc
push
pop
fistps
daa
pushf
xor
insb
mov
push
cli
pushf
xchg
fstpt
push
add
inc
subb
lds
ja
mov
arpl
xor
xchg
dec
sub
and
insl
push
sbb
jnp
mov
jmp
mov
mov
mov
aaa
test
xor
lret
xchg
cli
std
arpl
int
shll
xchg
jge
sub
mov
icebp
imul
inc
push
and
rolb
outsb
inc
fistps
sbb
pop
in
pop
out
cwtl
dec
jp
mov
loope
xor
inc
repnz
cmp
pusha
adc
mov
jp
popa
stos
mov
add
imul
mov
aas
add
gs
fcoml
iret
jbe
fs
stos
push
xor
enter
test
jnp
test
nop
dec
ficompl
daa
lcall
mov
pop
inc
adc
push
mov
and
lret
cld
jecxz
pop
mov
stos
xchg
jg
sub
sti
ss
xchg
loope
jg
mov
into
in
adcb
push
lahf
pop
push
iret
xor
xor
movsb
lret
push
dec
sbb
dec
xchg
ficomps
in
jecxz
and
push
gs
push
aam
push
rol
mov
adcb
outsl
test
aad
pop
out
sahf
push
sahf
sub
pop
jge
mov
add
sub
jmp
or
adc
sub
out
xor
loop
mov
out
sub
pusha
outsb
xchg
xor
push
fldenv
xor
mov
adcl
test
inc
lret
movsl
imul
jae
cmp
xchg
cmp
iret
stos
adcl
lret
adc
mov
push
mov
mov
shr
push
fimuls
jno
mov
jno
or
or
fwait
dec
pop
test
inc
or
inc
sbb
pusha
mov
ds
adc
test
fs
stos
jge
jle
jmp
mov
cld
faddl
inc
inc
mov
call
in
movsl
ja
into
call
into
fadds
mov
pushf
daa
sub
decb
mov
icebp
or
shlb
imul
sub
dec
pop
loop
inc
into
mov
push
pusha
or
loope
aaa
in
sub
daa
and
adc
out
mov
mov
xchg
idivb
mov
pop
pop
mov
into
dec
mov
xchg
inc
arpl
fsubrs
cwtl
inc
std
mov
add
add
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
sbb
add
add
push
and
iret
cmp
std
call
jmp
cmp
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
pop
add
loopne
push
xor
xor
cltd
jo
lcall
cmpsl
ljmp
sub
and
movsb
inc
outsl
add
outsb
imul
push
dec
push
shlb
fcmovnb
out
in
mov
mov
js
imul
sbb
mov
xchg
into
sbb
cmpsb
jae
inc
lds
ja
stos
aam
inc
xlat
mov
cmpsl
mov
jae
xchg
xchg
cwtl
sbb
fdivrs
fistl
test
mov
rorl
ss
std
mov
outsb
lods
fistps
xchg
mov
adc
push
xor
in
fdivl
js
popf
push
loop,pt
cmpsb
fstps
dec
pop
add
mov
shll
das
arpl
inc
dec
repnz
popf
push
push
mov
rol
repnz
hlt
out
popf
shr
cmpl
rorl
xchg
aas
mov
imul
push
push
dec
mov
nop
mov
xchg
hlt
roll
pusha
jno
sarl
mov
sub
lcall
mov
hlt
test
frstor
push
aad
dec
popa
movsl
sbb
jae
xchg
outsl
jg
xchg
adc
mov
outsl
mov
cmp
xor
movsl
xor
leave
mov
and
frstor
fisubrs
orb
bound
addr16
in
pop
and
aas
insl
test
mov
mov
pop
out
in
in
sub
add
pop
lods
fwait
sub
in
push
add
fmuls
pop
jp
popf
jecxz
movsb
xchg
aaa
fldl
popa
jg
inc
inc
leave
int
aad
rep
mov
into
daa
les
push
mov
mov
push
xchg
xor
or
das
mov
add
ja
push
mov
pop
sbb
lods
mov
mov
mov
sbb
out
push
xor
out
int3
xchg
lret
pop
xor
idivb
ret
pop
dec
push
pusha
adc
inc
xor
les
push
leave
cmp
sub
jmp
sbbb
hlt
test
pop
mov
push
mov
cs
mov
or
cmp
data16
cmp
xor
aaa
in
bound
jbe
pop
cltd
es
mov
movsl
mov
fst
pusha
imul
fnstsw
mov
push
mov
mov
fwait
xor
jae
imul
iret
pop
sbb
stos
imul
mov
and
loop
aas
pop
adc
push
fwait
mov
das
dec
inc
mov
add
repz
ds
sahf
pop
push
inc
adc
fs
mov
in
aaa
cmp
pop
and
mov
fwait
sbb
sti
nop
les
mov
sbb
xchg
std
jae
mov
loopne
cmp
sahf
jae
pop
xchg
imul
testb
negl
mov
mov
lret
pushf
or
pop
sbb
in
aas
int3
lods
mov
push
gs
rolb
imul
add
mov
push
dec
je
xor
mov
mov
cmpsl
cmc
adc
ret
js
adc
cmp
dec
xchg
ret
fidivrs
sbb
js
jne
das
in
mov
sub
xor
andl
fistpl
in
out
and
sub
pop
xlat
shrb
pop
cli
stc
xchg
movsl
jno
xchg
in
cmp
movsl
mov
mov
arpl
pop
jno
and
data16
les
dec
fdivrs
mov
mov
push
mov
pop
xlat
imul
push
popf
das
mov
sbb
or
mov
scas
xchg
rcrl
in
pop
loope
lea
test
push
pop
ficompl
movsb
sub
fwait
std
scas
test
lods
inc
pop
pop
dec
fisubrs
sub
sub
daa
push
push
push
idivb
and
or
mov
cli
add
xor
mov
xchg
dec
or
insb
adc
insb
in
int
pop
lret
or
inc
fwait
test
sub
lods
push
adc
enter
mov
leave
sbb
dec
xor
mov
push
fisubl
dec
dec
fisttps
jne
les
mov
ror
sbb
jb
jle
aad
fwait
lds
pop
pop
sbb
inc
aas
mov
dec
icebp
in
mov
call
movsl
addr16
mov
mov
and
mov
jbe
or
in
sub
imul
push
xchg
aaa
mov
xchg
in
sbb
stos
ret
mov
insb
subb
fistpl
in
pop
cld
mov
subb
fmull
mov
cmc
ljmp
popa
sub
daa
into
insb
lea
shl
push
pop
imul
outsl
mov
inc
ficoml
jbe
mov
stos
rcrb
xchg
insb
inc
or
lahf
push
jg
sub
jo
or
mov
imul
daa
jne
jae
ja
repz
push
shl
nop
and
stos
and
mov
add
movsl
outsb
or
cli
mov
push
or
cmp
pop
mov
fldt
in
shrb
in
mov
lret
cmc
imul
imul
in
movsb
mov
sbb
divb
push
push
xor
aam
sarb
jle
dec
mov
ljmp
jp
inc
icebp
das
popa
outsl
cmp
cmp
pop
icebp
cmp
mov
add
int3
test
bound
dec
xor
cmp
push
jno
bound
cmpsl
push
sarb
sub
into
cmp
sbb
sbb
add
pop
pop
pusha
stc
xorl
xchg
fcmovb
in
data16
xchg
push
je
out
mov
xor
mov
mov
pop
shrb
pushf
enter
aad
daa
stos
iret
popf
shr
mov
xchg
scas
add
cmpsl
roll
pop
cltd
push
lcall
pop
arpl
dec
fcoml
inc
pmulhuw
mov
push
call
call
in
jb
outsl
movsl
mov
or
and
mov
mov
addr16
ss
loopne
nop
and
add
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
and
add
mov
mov
scas
xchg
or
push
inc
bound
pop
insl
push
or
pop
push
lea
dec
lahf
daa
mov
mov
aad
addb
xlat
jne
fstpl
pop
loop
cmp
lcall
fsubs
sahf
cs
dec
stos
push
or
xchg
jb
clc
sbb
cmc
hlt
dec
es
hlt
sbb
mov
rcr
add
and
push
pop
mov
mov
mov
sti
push
push
xor
push
add
aaa
xchg
jae
and
cmp
cmp
mov
xchg
jmp
lds
cltd
mov
or
in
repz
xchg
adc
sub
mull
jecxz
pop
mov
or
xchg
mov
ror
mov
and
enter
mov
notl
test
lret
scas
outsb
dec
repnz
clc
cmp
pop
aaa
movsl
out
shl
lahf
adc
xchg
or
popa
inc
outsb
loope
pop
add
add
loope
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
push
add
add
add
test
sbb
push
xor
scas
in
stos
jo
mov
sti
mov
adc
mov
clc
rcl
mov
mov
jnp
test
cmp
into
push
cld
cmp
xor
pop
mov
cmp
or
shl
iret
mov
out
bound
sub
mov
stos
test
mov
pop
pop
aad
mov
lods
cmc
iret
or
sbb
jmp
imul
jmp
mov
and
jmp
orb
repz
js
repnz
or
mov
push
push
fmull
push
and
mov
mov
out
jne
repnz
mov
dec
inc
add
pop
inc
jl
sahf
jp
or
pop
gs
rorl
add
out
lods
pop
sbb
aam
fwait
mov
popf
mov
insl
sarl
icebp
loopne
jb
in
test
push
and
xor
jmp
rolb
dec
xchg
push
xlat
stos
jo
shlb
cmp
icebp
lcall
pop
movl
adc
push
imul
dec
gs
mov
out
mov
cli
in
inc
mov
decb
cmc
dec
xchg
ja
push
jmp
xor
loopne
pop
adc
pop
dec
push
jp
fwait
insl
sbb
arpl
jge
add
push
out
movsb
int3
ret
sub
stos
xchg
mov
int3
call
jno
mov
or
push
and
idiv
and
sbb
adc
orb
xchg
es
mov
inc
pop
lods
out
lds
mov
pop
jnp
or
mov
test
cs
mov
loope
or
in
push
push
pop
int3
out
mov
dec
stc
fwait
loopne
pop
insl
sbb
popf
test
push
sbb
mov
repz
sahf
push
sbb
jge
mov
fmuls
dec
lods
jae
fdivs
xchg
pop
inc
aam
dec
xlat
daa
jnp
aam
mov
xchg
in
aaa
xor
push
jae
jg
in
mov
push
mov
rolb
outsb
mov
add
xor
loop
int3
pop
cmpsb
lds
xor
loope
cwtl
in
mov
cmp
mov
in
mov
imul
cli
pop
dec
adc
or
stos
cmpsb
mov
pusha
lret
pop
into
jp
jae
add
ret
testb
cmp
test
stos
je
fs
jle
and
or
push
pop
rclb
cmp
or
sbb
insb
dec
xor
loop
sbb
cmp
insb
pop
rcrb
mov
and
push
adc
mov
pushf
hlt
fisubrl
lret
out
push
stos
cmpl
jmp
add
mov
push
mov
rorl
shlb
inc
adc
pop
pushf
popa
and
add
jb
xor
test
add
xlat
dec
cld
mov
dec
xor
push
xchg
popf
das
mov
and
jbe
fidivrs
ror
add
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
inc
add
add
add
and
push
or
pop
sbb
lods
loope
pop
jns
jno
push
jecxz
mov
xor
push
in
pop
inc
mov
mov
hlt
jbe
int
mov
xchg
lea
stos
test
fwait
add
mov
mov
into
ds
insb
mov
adc
cmp
in
push
scas
xchg
aas
pop
pop
jo
and
and
pop
jg
mov
into
or
rolb
out
movsl
arpl
cltd
icebp
dec
xlat
xor
pusha
imul
arpl
xchg
push
mov
mov
cmp
cs
call
addr16
inc
and
and
push
bnd
cmp
das
das
cmpsb
adc
enter
mov
xbegin
jecxz
mov
dec
pushf
and
add
pop
fiadds
jno
fdivs
out
mov
call
mov
int3
sbb
jns
jae
mov
inc
loope
iret
jl
jp
shlb
imul
pop
notl
dec
pusha
in
pop
xchg
jae
and
lret
cmp
xchg
mov
fdivl
je
ss
lock
mov
xor
jns
mov
fwait
stos
pop
fmull
je
mov
out
mov
sbb
cli
out
inc
mov
mov
push
clc
inc
mov
fisubrs
push
lds
cmp
fisttps
and
in
call
rcr
mov
xchg
add
xchg
sub
jbe
cmp
or
mov
mov
push
jae
add
push
rcr
ja
mov
or
lcall
std
sub
jmp
pop
sub
ss
jns
out
lods
lahf
in
add
out
cmp
ror
repz
xchg
add
aas
gs
sub
dec
mov
xlat
mov
mov
rol
imul
jns
jmp
pop
fs
push
sbb
adc
cmp
insl
jo,pt
popf
mov
jl
pop
adc
dec
fistpl
into
push
popf
loopne
jo
mov
fsubrl
mov
xor
add
jno
out
ret
sbb
mov
push
mov
sti
les
jmp
pop
or
sahf
jae
leave
jle
sbb
and
push
lods
add
andl
adc
js
jb
shr
cld
sarl
aas
or
xor
cmp
xorl
or
lods
xchg
mov
dec
inc
mov
dec
mov
push
into
sub
shrl
mov
ss
std
sub
cmpb
cmp
movsl
ret
sbb
movsl
sti
sbb
pushf
repz
addl
sub
cmp
insl
jl
jne
cmp
inc
sub
jae
or
out
sub
dec
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
aaa
add
add
aad
add
idivl
xor
aad
pop
pop
aaa
dec
hlt
sub
pop
jge
div
cs
sub
jns
js
and
pop
xor
movsl
dec
add
test
jl
jge
dec
shlb
mov
jne
sbb
jg
push
enter
iret
mov
lahf
xchg
xor
jno
xchg
mov
dec
subps
pop
adc
sub
sbb
leave
fists
fidivs
cwtl
cmp
adc
or
dec
mov
sbb
xor
pop
and
lods
sbb
xor
cmp
dec
jb
cwtl
scas
push
xchg
inc
lea
rorl
fbstp
sbb
imul
gs
and
xchg
mov
and
xchg
in
icebp
jle
mov
mov
enter
xor
stc
jno
adc
cmp
fisubs
test
jno
hlt
test
sub
fdivp
jmp
into
mov
add
loope
mulb
xchg
imul
in
pop
ficomps
mov
shl
pop
lea
addr16
fldt
scas
adc
mov
scas
xor
rcrl
sub
movsl
cmp
lahf
and
mov
insl
aad
and
rolb
xchg
mov
jge
push
cmp
lea
and
and
mov
shr
jge
push
and
in
int
in
cmpsl
or
negl
add
fwait
arpl
inc
rcrb
xchg
dec
les
dec
in
sub
call
clc
xor
loope
lods
pusha
test
mov
pop
into
adc
xchg
push
sub
inc
lea
push
push
addr16
movsb
mov
fsubrp
cld
daa
lods
xchg
xlat
xor
or
lret
fcmovb
addr16
in
and
imul
jns
andl
ds
lret
pop
rorl
aam
sub
in
or
and
or
xchg
adc
mov
inc
mov
imul
rorl
gs
add
sub
sbb
test
aaa
scas
inc
xchg
dec
test
cmovne
out
push
dec
aaa
adc
sub
movsl
xor
call
mov
push
pop
push
stos
mov
mov
push
or
xor
and
rclb
sahf
or
pop
jo
xchg
mov
cltd
push
dec
data16
add
cmc
and
sub
sbb
std
push
mov
mov
mov
xchg
cmpsb
hlt
sbb
dec
outsb
fisttpll
jno
dec
inc
mov
mov
lahf
stos
popa
xor
lods
dec
call
xchg
xor
push
push
inc
add
cmpsl
js
cmp
pop
aam
xchg
iret
mov
fistpll
call
stc
leave
test
insl
sbb
aaa
andb
mov
decl
xchg
or
aas
imul
add
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
push
add
aad
add
dec
insl
dec
mov
jmp
inc
push
mov
inc
les
sub
divb
jg
lods
push
stos
push
dec
filds
out
test
in
push
popf
stc
xor
pop
xor
imull
sub
and
insb
cmpsb
test
push
sub
push
dec
aam
mov
scas
sbb
data16
pop
lahf
jge
pushf
jnp
jle
pop
rclb
xor
test
test
xchg
push
fsubp
cmpsl
or
mov
push
sub
xchg
xchg
add
out
push
mov
and
insl
js
mov
sub
and
nop
sub
pop
fcomip
push
out
xlat
ret
sub
mov
mov
and
sub
lret
xchg
xchg
cld
mov
mov
mov
data16
rorl
cmpsl
push
jnp
orb
sbb
add
mov
icebp
cmc
inc
movb
bound
jae
lea
in
jae
dec
pop
mulb
push
add
insb
push
cmp
ficoms
mov
mov
pop
pusha
sbb
mov
mov
mov
fistpl
or
sub
movsl
or
rcrl
adc
sub
and
inc
cmp
loope
adc
fisttps
adc
inc
pop
in
cli
pop
fistpll
inc
jbe
fs
out
cmpl
decb
int3
aaa
lods
push
jmp
pushf
mov
movsl
adc
mov
jb
add
inc
lahf
jecxz
movsl
jecxz
or
sbb
int3
out
pop
andb
std
cli
inc
loope
aas
mov
sub
push
pop
aas
push
xor
dec
sub
cltd
jns
and
enter
cmpsb
repz
dec
mov
cs
pop
out
hlt
push
push
push
sahf
das
inc
aad
dec
ja
cmc
loopne
and
rorb
jle
xchg
outsl
js
std
xchg
stos
jmp
add
mov
add
pop
popf
cmp
xor
roll
es
repz
notl
push
test
lock
adc
lock
jno
rolb
push
cmp
jb
jecxz
pop
ss
sub
rorl
jbe
aas
subb
cmp
mov
xchg
cmpb
mov
inc
testb
fdivrp
sbb
fidivrl
cmp
cwtl
cmp
xchg
lods
pop
pop
cmovne
cmp
xor
jo
movsl
insl
in
adc
cmp
mov
jmp
das
andb
out
pop
inc
repz
mov
aam
jp
jb
cmp
scas
jmp
inc
jne
ds
mov
mov
sub
pop
mov
pop
and
mov
or
aad
pop
testb
push
test
jno
cwtl
add
shr
lret
or
notl
jb
xor
jl
jg
pop
psubsb
sbb
sub
or
mov
pandn
andl
aam
lret
xchg
std
dec
push
imul
push
sub
das
pushf
xchg
xchg
cmpsl
mov
cmpsl
nop
arpl
int
outsb
and
mov
je
mov
cs
pusha
test
js
push
jmp
cmp
in
gs
orl
into
and
inc
xor
cmpsb
je
sub
mov
popf
cmp
dec
fs
ret
test
inc
call
push
test
loop
inc
jb
daa
popf
leave
out
ljmp
outsl
bound
loopne
add
add
xchg
dec
idivb
xor
mov
jp
daa
arpl
shl
test
cmc
nop
shll
jb
cmp
mov
sti
jl
push
jge
jmp
add
mov
test
lahf
push
sub
adc
icebp
sub
aaa
ror
jb
mov
test
push
std
push
aad
shrb
stos
add
insl
lock
sub
sahf
xchg
fcomi
das
sti
dec
stos
in
or
das
dec
clc
cs
cwtl
push
pop
add
add
data16
push
rolb
and
jbe
in
andb
adcl
cli
adc
pusha
jne
cmp
popa
adc
outsb
imul
sbb
mov
jg
pop
movsl
iret
loop
sbb
das
dec
ja
cmp
out
inc
cs
dec
popf
dec
fisubrs
mov
jecxz
sbb
std
test
adc
add
ja
inc
sbb
cmovb
xchg
sbb
sbb
inc
repnz
and
mov
sbb
arpl
iret
repnz
and
div
nop
scas
out
call
lahf
popw
mov
les
mov
fs
in
lea
leave
jnp
das
sbb
ja
mov
shrb
daa
xor
push
je
dec
sub
mov
into
jmp
sbb
jp
jl
in
cmp
repnz
in
ret
popf
in
test
cmp
fld
das
push
loop
adc
imul
pop
lea
sti
xchg
pop
cltd
popf
movsl
inc
jge
mov
insl
push
inc
pop
mov
in
nop
or
pop
and
xchg
xchg
data16
push
push
mov
sbb
ss
pushf
sub
sub
dec
in
add
add
push
push
cmpsb
sub
cmp
out
xchg
in
insl
popa
jp
pop
xor
cmp
subl
out
nop
aas
mov
mov
inc
test
cli
scas
subb
mov
sahf
test
adc
xor
jmp
and
pusha
ljmp
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
pop
add
scas
or
add
inc
leave
xor
cmp
es
push
xchg
sbb
add
adc
cmpsl
sub
dec
jmp
mulb
inc
hlt
xchg
ret
mov
scas
fnstsw
mov
pop
sbb
mov
mov
mov
test
dec
arpl
push
addr16
adc
loopne
repnz
imul
in
out
xor
out
stos
stos
xor
js
dec
inc
stc
int
int
jnp
jo
adc
aas
or
xor
cli
popa
add
dec
rorb
out
xor
sti
jle
and
push
cli
test
loop
int3
mov
bound
into
push
lret
mov
push
loopne
push
and
sub
or
ficoms
push
repnz
add
pusha
push
jle
xchg
inc
leave
or
fstpt
pop
aas
cltd
hlt
cmp
push
test
xchg
xor
xchg
jmp
sbb
movsl
ret
add
cli
adc
jno
inc
ljmp
or
shrb
cli
adc
pop
out
int3
mov
subl
xchg
push
das
scas
psubusw
pushw
jp
dec
shlb
sbb
jne
mov
bound
mov
dec
jns
or
clc
adc
ss
nop
scas
push
xor
pop
stc
xchg
jmp
icebp
pushl
stos
notb
test
xor
sbb
popa
lea
ds
xchg
pop
movb
cld
mov
mov
int3
lods
pop
sbb
jb
je
sarl
mov
cmpsl
push
jg
rorl
int3
jge
or
xchg
flds
pop
or
loopne
adc
xchg
out
xchg
xor
aad
jo
xor
jl
sahf
dec
fdivs
or
inc
fdivrl
mov
sahf
lods
das
lock
movsl
out
hlt
mov
push
xor
sub
out
jnp
inc
test
hlt
xlat
mov
mov
movsl
aas
pop
insb
pop
xor
icebp
rcrl
sarl
testl
push
imul
movsb
lds
xchg
aas
xchg
cld
jg
movsl
dec
sbb
xor
out
xchg
inc
inc
sar
fninit
pop
imul
clc
scas
and
icebp
jb
out
pushf
mov
aaa
mov
sbbb
or
add
jecxz
shrb
cmp
lea
fstsw
adc
mov
shl
into
sub
test
mov
movsb
iret
sbb
and
lock
mov
lret
out
fwait
dec
inc
neg
adc
jp
cmc
mov
int
mov
rcll
pop
sub
jle
add
push
lret
or
hlt
fisubl
xchg
icebp
add
dec
xchg
in
xchg
not
in
js
or
dec
fimull
fwait
jmp
dec
add
cmp
lock
push
adc
inc
cmpsl
mov
outsb
outsb
push
int3
cmp
sbb
fistps
push
repnz
add
inc
popa
lret
lods
cmp
loope
push
or
out
add
cli
enter
and
sub
mov
pop
rcr
jo
or
js
mov
std
pop
ds
dec
mov
rcrb
add
and
cwtl
or
fdivp
inc
push
cltd
int
mov
notb
pop
cmp
xchg
push
divl
hlt
cmpsl
cmc
jbe
and
push
jnp
imul
sbb
cmpl
sahf
cmpsl
inc
dec
dec
insl
add
push
jmp
mov
jl
pop
sbb
shrd
mov
cmp
jge
int3
mov
add
jbe
stc
sbb
iret
movsl
call
inc
outsb
jmp
jae
arpl
lock
pop
loop
sbb
lahf
sub
pusha
xlat
pop
test
xchg
pop
pop
cmp
pop
inc
aaa
and
cltd
iret
pushf
adc
stc
or
adc
arpl
cs
mov
sarl
adc
aas
divb
insb
movl
cmp
jno
lret
fcoms
mov
jge
cmp
ffreep
sub
loop
lret
adcl
call
mov
push
sbb
dec
push
incl
inc
fsubrs
lcall
mov
lods
cmp
sub
daa
cltd
rolb
dec
outsl
and
pop
inc
cmpsb
enter
orl
aam
mov
push
sti
cmpsl
xor
mov
mov
cmp
fwait
pop
fs
hlt
lds
loop
mov
inc
jl
sarl
mov
mov
test
or
mov
pop
leave
adc
enter
test
scas
xor
dec
jmp
mov
enter
xor
cmp
roll
sub
and
pop
aas
clc
jp
shrb
pop
jmp
mov
push
inc
push
aad
and
loop
fs
call
andl
test
lods
lret
gs
mov
sbb
xchg
adc
mov
jmp
jmp
popf
xlat
sarb
jmp
arpl
shl
mov
stos
jl
sub
out
lods
fisttpll
ret
out
sbb
pop
push
shlb
fstpl
pop
cmp
jo
test
sub
push
xchg
dec
loopne
add
mov
stc
sbb
or
mov
inc
fisttpl
out
inc
test
xchg
dec
cmp
sub
sahf
inc
or
cmc
adc
ljmp
aas
je
jns
rcr
rcl
cltd
rolb
pop
into
pop
lds
fstp
repz
daa
xor
cli
or
xchg
cli
xchg
popa
lods
cli
movsl
xchg
mov
insb
stc
sbb
dec
inc
jb
xchg
clc
and
mov
popf
push
inc
mov
mov
and
daa
in
cmp
pop
cmp
call
xchg
xor
mov
or
sub
scas
xor
xchg
push
dec
out
movb
in
pop
xchg
xor
jns
stos
popa
jecxz
mov
test
push
xchg
mov
push
pop
mov
lods
add
jmp
fisubl
pusha
cs
jae
loop
push
ret
fwait
data16
cmp
mov
test
int
inc
sub
dec
mov
mov
pop
cmpsl
sub
test
scas
cltd
scas
xchg
in
inc
cmp
and
dec
pop
rcrl
dec
loopne
push
cmp
cmp
out
jae
xor
cmp
in
xor
push
das
xchg
adc
in
xor
pop
inc
and
sbb
int3
shlb
aaa
stos
cld
sub
mov
dec
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
lahf
add
add
shlb
call
xor
test
mov
lock
mov
push
aam
ficompl
and
lock
lahf
sub
mov
mov
pop
push
in
aam
test
xchg
pop
inc
mov
adc
bound
mov
sub
cmp
bound
mov
push
push
adc
jmp
pop
mov
dec
push
call
adc
jno
xor
loopne
mov
add
stos
in
or
mov
rorb
jae
cmp
pop
bound
or
data16
ljmp
dec
cmp
sbb
in
cmp
iret
loop
sbb
mov
bound
push
xchg
aad
xchg
cli
out
movsb
popf
stc
sbb
inc
ror
ljmp
cmp
in
stos
xor
mov
jo
dec
push
cmp
insb
lahf
das
lcall
imul
test
repz
pop
enter
data16
inc
sub
cmp
icebp
in
ss
sub
cmp
jg
add
fucomi
ja
test
xchg
sub
mov
call
xchg
dec
pushf
inc
xlat
xchg
inc
pop
cmp
movsb
mov
xor
adc
or
mov
jo
xor
or
and
push
repz
sahf
fistpl
and
sub
mov
and
inc
outsl
push
stos
xchg
in
les
push
xchg
shlb
popf
xchg
xchg
sahf
icebp
sbb
cmpsb
jne
cs
decl
jnp
sarb
movsl
ds
fidivs
push
bound
ljmp
adcl
add
sbb
jb
mov
pushf
mov
dec
xorl
cmp
fsubrs
cmc
fcomps
aas
sub
push
inc
sub
xchg
ljmp
dec
cs
adc
out
aam
or
pusha
rorl
adc
push
fnstcw
outsl
xchg
cmpsb
sbb
pop
push
dec
fwait
push
shll
add
in
jne
adcl
dec
pusha
and
lods
mov
es
movsl
dec
mov
fs
in
cmp
pop
and
jp
imul
inc
jne
sub
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
add
or
add
inc
pop
mov
lea
nop
mov
fdivrl
daa
pop
jnp
jae
in
fsubs
rorl
lahf
repz
or
imul
mov
subl
push
mov
adc
mov
rolb
sub
jnp
and
ljmp
push
mov
add
test
cli
int3
cld
jb
sbb
fnstenv
iret
jbe
idiv
jg
mov
and
mov
add
outsl
cmp
in
daa
stos
sti
mov
ss
bound
icebp
out
inc
xchg
adc
ss
in
xor
stos
mov
jecxz
sbb
jno
test
mov
sbbl
jnp
add
jge
mov
push
lods
mov
into
daa
push
mov
imul
cmpsb
popa
push
or
popa
sbb
cmp
add
and
pop
mov
mov
adc
leave
lahf
push
xor
mov
or
cltd
add
add
pop
or
mov
cmp
outsl
lahf
mov
mov
je
test
lds
add
mov
int3
mov
jp
dec
std
and
sub
add
int3
movsb
sub
test
and
and
outsb
les
and
cmp
or
pop
test
mov
fsts
sub
lods
pusha
leave
fcom
and
cmp
mov
outsl
aas
mov
xor
inc
int3
dec
add
mov
lret
jle
in
cltd
jb
pushf
mov
rorb
lds
push
cmpsb
cmc
push
ljmp
arpl
mov
jnp
xchg
movsl
mov
push
lcall
pushf
or
fwait
mov
mov
add
sub
mov
fdivl
jae
mov
test
je
jle
adc
lea
mov
cmpsb
adc
sbb
lret
sub
push
jo
mov
jnp
mov
pop
jecxz
jns
rclb
jp
pop
int
inc
imulb
test
mov
cmp
and
ror
std
sub
mov
cs
lret
lock
push
in
push
movsb
mov
pop
jl
stos
loop
stos
dec
movsb
shlb
and
inc
xor
lret
lahf
es
mov
jge
jne
fistpl
or
mov
jmp
aas
cmpsl
mov
insl
add
ret
xchg
outsl
or
adc
xor
pushf
rorl
scas
in
aaa
lret
sbb
add
pusha
call
cwtl
pusha
xlat
leave
loopne
mov
lahf
shrb
lret
and
stos
fmull
imul
pop
adc
mov
gs
inc
int3
xor
lock
enter
lret
lahf
test
outsl
push
mov
or
test
mov
pop
movsl
dec
xor
jo
and
dec
cld
cli
sbb
popf
test
lahf
cmp
or
cmpsb
mov
and
es
in
jns
repz
cmp
adc
and
lock
test
jl
inc
or
adc
mov
mov
cmp
adc
and
sub
pop
lea
les
mov
inc
idivb
ljmp
outsb
into
das
in
push
fscale
and
cwtl
enter
inc
push
push
mov
roll
pusha
hlt
test
xchg
cmpsl
xor
orb
cmp
push
enter
add
cmp
rol
call
mov
scas
shlb
sti
aas
fldl2t
mov
dec
ja
pop
xor
aad
outsb
minps
inc
shl
and
jp
subl
shrb
mov
cmpl
pop
mov
inc
rclb
outsb
xor
fistpl
imul
inc
mov
jno
cmp
sbb
arpl
popa
jl
xchg
shrl
repnz
and
rclb
cmpsl
inc
lahf
std
je
jge
mov
ja
lea
stc
das
rcr
and
shrl
enter
mov
scas
or
mov
in
dec
sbb
jmp
push
dec
and
sub
ds
sbb
adc
jae
in
mov
dec
fsubrs
ja
stos
jbe
pop
inc
aaa
dec
xchg
decl
xchg
in
rcrb
lods
out
or
mov
cltd
cli
movsl
outsl
add
setle
test
or
aas
testb
imul
and
mov
scas
pop
fstpt
les
loope
ljmp
rcrl
iret
sbbl
scas
mov
test
shl
jnp
scas
jne
repnz
mov
mov
jle
or
cltd
or
addr16
iret
int3
mov
xor
mov
xchg
jle
mov
mov
mov
and
jnp
aam
call
outsb
fcmovu
jmp
inc
adc
push
fs
xchg
in
scas
pop
arpl
mov
insl
xor
mov
and
mov
cltd
sbb
push
sahf
dec
arpl
or
push
push
outsl
cmp
add
insl
scas
arpl
xor
mov
inc
pushf
cmp
jb
enter
dec
not
aad
movsl
fxch
push
push
push
clc
lods
push
pop
mov
es
out
jecxz
inc
and
fs
inc
je
add
popa
and
pop
pop
cmp
or
int3
xchg
and
dec
push
xor
divl
pop
jp
sub
adc
js
pop
mov
andl
pushf
sbbb
aam
pop
cmp
test
mov
push
sub
push
sbb
pop
adc
adc
mov
mov
dec
fwait
cmpsb
aas
jae
rcrb
test
loope
movsl
testl
mov
arpl
lds
mov
pop
cmpsb
ffreep
lds
sti
push
aaa
arpl
fndisi(8087
add
jg
ljmp
or
aaa
lahf
scas
enter
pop
pop
dec
imulb
addr16
and
or
sub
ss
lds
loop
ja
mov
mov
pop
call
mov
inc
xor
fcoms
jge
cli
xchg
sub
xor
js
arpl
out
stos
adc
rep
adc
ret
mov
bound
ds
mov
hlt
enter
dec
dec
ljmp
mov
pop
inc
je
pop
dec
mov
insb
stc
jmp
xor
push
sti
lret
sbb
test
add
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
scas
add
add
push
add
das
cld
sahf
inc
adc
cmp
gs
mov
inc
dec
dec
repnz
cmp
fs
ret
mov
mov
nop
inc
lods
adc
add
mov
notb
shll
cwtl
lock
andl
cmp
into
sbb
and
jmp
scas
mov
mov
xor
pushf
mov
loope
das
repz
inc
dec
jecxz
cmp
push
lret
ret
lret
cmp
mov
loope
inc
addb
xchg
in
xor
add
call
push
mov
ja
ja
icebp
std
pop
imul
mov
mov
adc
xor
movsl
sbb
aad
jne
xchg
cwtl
jg
pop
and
cmp
adc
out
push
cs
das
jge
dec
mov
addl
ljmp
repz
xchg
adc
xchg
inc
rcll
sbb
mov
fisttpll
add
sbb
pop
dec
or
cmc
negb
sbb
sub
inc
stc
jge
sahf
mov
insb
sbb
xchg
repz
movsl
mov
jae
adc
and
jl
aad
sub
mov
jmp
fs
js
adc
push
dec
sbb
popa
outsb
inc
inc
and
add
pusha
pop
add
lret
jne
filds
mov
std
push
mov
jb
test
inc
std
test
out
sbb
int
cmp
mov
jbe
or
mov
xchg
jle
leave
filds
loopne
mov
cwtl
xchg
sbb
xlat
mov
jae
stos
out
sub
pop
jmp
and
test
jnp
aam
sub
add
xchg
inc
dec
pop
loope
rorl
mov
push
mov
mov
push
stos
adc
or
adc
scas
imul
jo
xchg
and
icebp
ret
xor
fdiv
pop
ja
sub
fucom
mov
mov
pop
test
jnp
enter
iret
fdivs
negl
stc
fisubl
or
insb
insb
sub
jne
xorl
lods
je
push
sub
xchg
rorl
ret
in
jnp
sub
jmp
nop
int3
gs
or
testb
stos
fiadds
mov
ret
shlb
and
xchg
in
movsl
xor
and
rorb
cs
jecxz
into
das
pusha
push
push
add
lret
in
pop
std
cmp
jecxz
sbb
and
mov
incl
cli
cmp
fisubl
xchg
jmp
adc
outsb
fdivr
mov
mov
push
dec
mov
jne
ljmp
xchg
insl
xchg
pusha
in
dec
ja
mov
movsl
pop
sub
iret
shr
shlb
xchg
mov
sti
out
cmp
sub
enter
mov
mov
stos
std
sbb
adc
fmull
xchg
xor
sbb
notb
ficoml
and
lret
mov
rclb
fs
dec
inc
add
jecxz
mov
mov
lahf
mov
subb
xchg
or
push
pop
jle
inc
aas
push
sbb
popf
adc
inc
aad
or
cmp
push
dec
cmp
in
sbb
movl
mov
mov
cmp
push
aaa
iret
data16
jns
jae
pop
push
je
adc
insl
outsb
mov
les
sbb
leave
cmp
repnz
std
shl
call
rolb
cmpsl
push
inc
cmp
xchg
aas
or
jbe
aad
outsl
rorb
out
xor
cmpsb
xor
loop
fs
orb
pop
daa
ret
adc
jmp
inc
aad
xlat
std
mov
jmp
icebp
scas
push
lret
sub
mov
sbb
pushf
test
xor
cmp
mov
push
xchg
pop
outsb
in
into
fildl
sub
dec
pop
out
and
push
inc
adc
or
stos
sahf
movl
sub
cmp
fcompl
rcr
mov
fcmovnb
xor
fmull
arpl
sub
adc
mov
sbb
cmp
add
dec
dec
add
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
pop
add
arpl
xor
jmp
ficompl
pushf
ds
filds
dec
ret
loopne
shlb
pop
or
jns
leave
jge
push
jne
mov
fidivrl
jecxz
mov
js
in
pop
pop
cmp
and
push
xor
sub
out
and
pop
pushf
fucomi
lret
xchg
jmp
mov
pop
lds
popa
mov
adc
and
pushf
arpl
lret
pop
shr
dec
sbb
xchg
sbb
dec
or
movsb
fsubl
and
sbb
inc
lea
cmp
dec
popa
add
outsl
imul
pop
jo
cmp
sbb
push
mov
sub
xchg
mov
mov
scas
les
push
mov
dec
push
aas
pushf
popa
mov
call
cmp
or
push
ss
mulb
mov
sub
filds
adc
mov
pop
aas
push
ljmp
jp
aaa
stc
fidivl
std
add
push
fldenv
add
mov
ja
into
dec
lahf
lea
adc
rorb
daa
int
jecxz
adc
mov
adc
data16
push
ljmp
pop
inc
movsl
rorb
sbb
insl
inc
ss
das
frstor
cmp
cld
flds
mov
push
clc
das
and
jp
cmp
aaa
push
xchg
pusha
shll
add
das
adc
or
cmc
test
in
xchg
xchg
shll
xchg
push
push
loop
xor
xchg
xchg
mov
stc
mov
cmpsb
es
testl
in
mov
out
daa
js
xlat
push
cmp
and
pop
je
enter
push
adc
mov
in
mov
lcall
xchg
bound
xchg
jne
sbb
fs
xor
stos
outsl
push
add
popf
shll
xor
out
test
mov
fnstsw
inc
inc
and
cmp
mov
insertq
mov
push
jno
xchg
inc
das
push
mov
adc
or
addr16
adc
xor
lods
or
jno
and
ljmp
ljmp
test
test
aas
sbb
fisubrs
jg
out
xchg
mov
std
fdivrl
cs
xchg
lds
xchg
fwait
inc
and
mov
adc
cld
or
push
cmp
or
mov
xchg
test
shr
jb
dec
inc
ss
incb
mov
fdivl
jbe
cmp
aad
daa
iret
pop
cmp
pop
stos
push
cmpsl
push
jbe
xor
popf
and
pop
and
jb
mov
cmc
shlb
les
addr16
cmpl
jns
mov
mov
inc
pop
dec
ljmp
loopne
std
and
out
cltd
out
xchg
rol
inc
sub
mov
pop
push
mov
pop
in
jns
test
int
jbe
push
ret
imul
inc
daa
dec
insb
fstpt
out
pop
or
cld
lret
int3
and
imul
sbb
int3
enter
ljmp
mov
out
or
inc
dec
xor
push
ja
ss
adc
out
popa
daa
das
jle
aad
fwait
les
dec
push
dec
inc
mov
adc
push
test
ss
push
adc
push
mov
inc
cmp
movsl
repz
jl
dec
and
sbb
mov
cld
pop
icebp
jle
add
jge
xchg
adc
pop
ds
inc
and
pop
scas
xchg
divb
gs
sbb
out
lret
mov
sub
mov
dec
int3
xchg
adc
adc
dec
cltd
ljmp
and
fs
inc
jnp
xchg
mov
pop
or
lret
add
add
pushf
push
mov
mov
cmc
mov
fmull
sahf
outsl
test
cs
jle
xor
fsubs
adc
mov
hlt
or
mov
inc
outsl
or
sahf
stc
mov
sub
mov
xor
sbb
mov
cs
cltd
pop
fptan
std
mov
scas
inc
jne
xor
gs
test
cmpsl
dec
cmp
add
int
or
std
arpl
cmp
into
decl
scas
cli
bound
sbb
cli
loope
inc
sti
cmpl
or
mov
mov
fwait
and
add
push
pusha
repz
outsb
pusha
scas
mov
xor
pop
test
jmp
push
imul
xor
mov
popa
xor
pop
cmp
sbb
cs
push
add
jl
jg
int
lds
or
push
xor
push
sbb
lods
xchg
add
sti
cmp
lods
in
lods
in
jl
ret
push
pop
and
fistpll
ss
dec
cmpsb
jmp
in
ss
or
out
int3
add
mov
mov
xlat
jmp
push
adc
mov
aas
shll
enter
xor
dec
mov
aaa
mov
or
xchg
das
mov
ljmp
xor
mov
xchg
add
ficomps
or
pop
adc
pop
add
cmp
mov
lahf
push
xchg
fidivrl
ja
inc
add
stos
pop
jle
scas
and
cs
cli
cmpsb
aas
dec
aam
push
inc
repz
sbb
adc
dec
lret
cmpsb
pop
jns
jg
out
ds
test
jno
outsb
rclb
aas
mov
lods
mov
mov
adc
add
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
inc
add
add
add
add
push
imul
sub
aad
xor
jne
cmp
hlt
mov
ss
mov
jmp
jne
mov
push
mov
add
and
fisttpl
lods
mov
inc
inc
adc
in
out
sbb
mov
stos
dec
dec
xor
repnz
js
sbb
push
aaa
mov
jl
adc
test
and
inc
jecxz
mov
lods
add
repz
loop
or
or
lea
js
scas
jecxz
cmp
cs
loope
out
cs
fisubrs
dec
sbb
nop
inc
loopne
xchg
sti
movsl
mov
je
insb
out
inc
jl
pop
insb
xor
sub
mov
mov
mov
aaa
mov
add
cmp
pusha
lds
in
cld
jl
inc
add
lret
xor
ficomps
cwtl
inc
loopne
push
adcl
cmc
cmp
loop
mov
lods
jno
into
mov
jo,pn
jne
sbb
xor
mov
inc
mov
into
cmp
sbb
icebp
sub
dec
and
movsb
and
lret
mov
add
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
add
add
add
mov
sub
sbb
dec
mov
test
add
cmp
aaa
and
push
inc
sub
pop
fmuls
mov
roll
hlt
ret
pop
mov
mov
add
nop
push
jle
cmp
mov
enter
scas
dec
imul
insl
sub
data16
sbb
enter
aaa
add
xchg
mov
inc
dec
clc
js
cltd
ds
shlb
mov
sub
xlat
hlt
mov
add
xlat
lcall
jle
fbstp
xchg
dec
push
mov
sub
nop
test
lahf
push
cmpsl
mov
mov
lods
sub
fistpl
cmpsb
cs
and
js
sbb
jo
repz
int3
mov
pop
jns
imul
jle
xchg
sub
adc
fisubrs
jp
mov
das
sub
xchg
in
mov
fcoml
jb
mov
nop
or
fwait
inc
pop
test
imul
dec
and
xchg
scas
xor
cmp
jecxz
rcrb
ficoml
dec
xor
aam
mov
aad
jnp
shl
stos
lds
ljmp
sbb
jge
push
xchg
fcoml
insl
in
mov
in
mov
push
cmc
inc
hlt
ja
test
js
xchg
mov
jmp
mov
lock
mov
inc
or
mov
clc
popa
mov
or
fdivrl
bound
push
out
or
push
mov
adc
push
mov
fnsave
fwait
lret
pop
mov
das
ret
xchg
adc
or
pop
mov
xchg
sub
cvttps2pi
xlat
sbb
out
ja
pop
fdivrl
lret
sub
rcll
pop
stos
loop
cmp
rcll
aaa
or
pop
add
jmp
and
sub
lds
lcall
bound
sub
dec
ss
dec
in
xchg
lahf
jnp
sahf
inc
or
push
sbb
sbb
loopne
or
ret
enter
repnz
int
push
cmp
inc
xchg
cmp
and
das
int
jb
jg
add
inc
pop
stos
sbbl
and
mov
jg
fadds
add
xor
shrl
mov
std
cwtl
imul
aas
das
fwait
adc
dec
xchg
adc
mov
or
sub
ja
sub
jno
or
nop
outsl
or
adc
pop
push
xor
dec
pop
clc
clc
push
adc
mov
inc
enter
fmull
xor
dec
mov
cmpsl
hlt
pop
mov
xchg
or
int3
dec
sub
mov
or
es
aaa
pusha
mov
jns
xchg
dec
mov
cs
mov
sub
les
pop
jmp
dec
ss
insl
pushfw
loope
sub
add
adc
push
shll
mov
push
pop
jecxz
in
stos
scas
rcr
adc
push
add
cmpsl
ljmp
xor
ljmp
dec
jb
xor
jns
jb
xor
jns
insb
push
add
stc
push
add
insl
ja
cmc
cltd
pop
imul
imul
and
das
push
push
inc
lea
aas
mov
xchg
xchg
add
fldpi
add
dec
or
dec
xor
adcl
es
loopnew
sbb
je
push
push
inc
xor
push
cmp
and
fidivrs
or
stc
movsb
and
push
imul
bound
mov
sar
clc
cltd
lea
push
movsl
mov
iret
addb
stos
fwait
jbe
insl
out
adc
outsl
mov
fwait
popa
in
std
mov
fnstsw
lods
outsb
sbb
and
mov
dec
js
mov
sub
xor
daa
lods
lods
inc
mov
push
inc
mov
add
in
aam
cmp
sbb
dec
loop
pop
out
push
adc
into
xchg
mov
test
mov
sbb
idivb
pmulhuw
mov
scas
jno
shlb
sub
pop
add
dec
or
pop
add
jb
daa
pop
push
rcl
and
aas
es
sub
inc
out
cmp
inc
stos
stos
dec
adc
ficompl
adc
incb
sbb
pop
mov
mov
andl
mov
shlb
or
xor
out
sub
jbe
stos
pusha
sbb
test
jmp
sbb
pop
es
or
iret
cmpsl
sbb
inc
sbb
mov
arpl
lea
mov
mov
add
fs
add
bound
mov
xorb
jnp
fsubr
pop
xchg
je
ds
sbb
and
js
imul
or
or
push
pop
cltd
push
repz
stos
icebp
test
push
mov
test
push
data16
pop
mov
pop
jp
push
mov
ss
ljmp
sub
lods
loope
xor
xchg
mov
xor
jmp
stos
movsl
in
je
xchg
lcall
cmp
fldcw
iret
or
lret
mov
sub
push
add
cmc
aaa
fistpll
cmp
popa
pop
pusha
call
andl
fisubl
lcall
add
enter
xchg
inc
nop
xor
jge
les
mov
pop
sub
stos
push
repnz
aam
xchg
push
ja
out
jp
cmp
add
outsb
add
mov
lea
mov
in
or
loopne
or
xor
out
scas
int
hlt
test
sbb
mov
mov
sbb
loop
xor
fnstsw
fbld
mov
add
popa
pop
adc
imul
mov
test
repz
or
jecxz
sub
lods
ret
imul
push
pop
or
and
xchg
mov
pusha
jmp
ds
xlat
and
in
shll
dec
loop
dec
pop
mov
in
push
fcoml
mull
out
in
jns
fadd
pop
xchg
aad
fdivrp
in
movsl
fidivl
aam
stos
xor
popf
pop
jmp
push
out
out
in
inc
pmulhw
ljmp
shlb
aam
or
mov
daa
test
aaa
mov
scas
sub
insl
addr16
inc
jno
int
sbb
add
sbb
sub
mov
fs
pop
cmp
xchg
daa
js
add
push
ret
shlb
fadds
cmp
mov
popa
xchg
mov
mov
outsl
fbstp
jge
dec
das
mov
gs
cmp
dec
cmc
outsl
mov
test
cs
inc
aam
imul
jnp
or
mov
ret
mov
jmp
lea
sarl
sbb
sub
jb
and
lock
add
pusha
jns
ret
and
add
test
mov
sub
mov
pop
pop
xchg
mov
mov
and
pop
addr16
sub
xorb
and
outsl
add
jae
xor
mov
xchg
mov
or
divl
stos
rcrb
cwtl
jno
fldlg2
mov
pusha
lods
sbb
fwait
xchg
out
lret
fsubrl
sub
cmpsl
jg
add
mov
add
adc
mov
orb
xchg
scas
cmp
xchg
mov
xchg
lock
sbb
xchg
icebp
jmp
pop
jl
add
mov
pusha
imul
iret
addr16
hlt
inc
and
xchg
flds
inc
shlb
cmc
stos
inc
xchg
inc
sbb
stos
xor
lret
pusha
lods
push
adc
pop
shlb
adc
ljmp
cltd
test
add
push
pop
sub
inc
shlb
add
test
arpl
popa
adc
or
pushf
mov
push
mov
cwtl
add
cld
pop
in
mov
ficoms
push
mov
ss
sbb
ja
sbb
lcall
adc
jo
outsl
fcoml
mov
fdivrs
adc
sbb
adc
and
out
insl
stc
data16
bound
cmp
xchg
mov
pop
adcb
xchg
sub
aad
scas
push
cmpsl
cmp
punpcklwd
test
std
cmpsl
bound
xchg
shll
insb
enter
pop
fwait
xor
pop
ret
outsl
std
dec
mov
and
push
push
jno
fldcw
aas
cmp
js
jno
cmp
push
jne
loope
lahf
add
and
aam
lods
pusha
outsb
mov
in
inc
sbb
and
jnp
jl
cmpsl
cmpsb
dec
or
cli
fcom
cmp
fnsave
loop
lcall
cmp
add
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
xor
add
push
add
add
ljmp
sbb
enter
aas
loopne
sbb
loopne
rdpmc
xchg
mov
outsb
in
xchg
rclb
shlb
pop
rorl
lahf
pop
shlb
loop
inc
shlb
push
xor
movsl
movsl
push
rcll
push
fldlg2
scas
js
cmp
je
mov
psubw
jecxz
inc
aaa
test
shl
rcl
jecxz
jp
sbb
paddb
orl
lret
arpl
adc
out
push
dec
dec
xchg
fwait
pop
test
bound
popf
sbb
push
and
add
push
push
adc
mov
aaa
pop
adc
xor
mov
push
adc
data16
jo
push
jmp
lret
fidivs
xorl
adc
and
mov
cmpsb
sbb
test
hlt
cld
pop
xor
mov
push
pop
shl
lea
addr16
adc
ror
inc
dec
inc
add
mov
arpl
xor
test
mov
sub
lahf
ret
icebp
xchg
adc
negb
imul
dec
ljmp
test
xor
jb
xchg
out
scas
repnz
push
cmpsb
mov
jne
sbb
dec
xor
push
push
jp
dec
jno
sti
inc
jb
sbb
and
jle
pushf
cmpsb
pop
stos
sub
sub
jecxz
adc
inc
sub
aam
lods
ficompl
sbb
loope
in
aaa
fistpll
mov
xlat
inc
insb
xor
push
shrb
jbe
sbbl
mov
pop
or
jae
pushf
movsb
pop
add
mov
jbe
sub
fstpl
sbb
ss
mov
xor
lds
sub
aam
aas
dec
lods
mov
jge
fstps
sbb
mov
cs
xchg
rcrb
adc
mov
xlat
cld
ja
pop
mov
cmp
lret
rcll
int
dec
add
dec
aam
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
add
add
add
add
movsb
inc
outsb
in
jbe
xchg
and
mov
mov
inc
lea
mov
repnz
imul
test
insb
jo
add
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
push
add
jg
repz
mov
inc
sarl
imul
mov
dec
mov
push
mov
movsl
int
clc
jb
popf
in
xor
bnd
sbb
lock
cmp
fwait
ret
dec
sbb
loopne
push
call
lcall
add
repz
adc
insb
out
icebp
mov
dec
aad
outsb
lahf
mov
faddp
dec
push
cld
test
sbbl
lock
mov
push
push
mov
adc
jecxz
push
icebp
adc
rcll
imul
sub
loop
or
jmp
mov
adc
mov
cmp
sub
cmp
pushf
pushf
fsubr
ret
enterw
popf
std
lods
mov
push
cmpsl
pop
sbb
lahf
test
cmc
jae
pop
stc
std
and
adc
xor
mov
bswap
jge
dec
or
iret
xor
mov
shl
push
xchg
test
arpl
in
xor
fst
pop
into
rolb
divb
jmp
add
sbb
xor
sub
inc
les
push
movl
and
mov
xchg
pop
stc
roll
out
xchg
push
push
stos
inc
scas
gs
or
pop
negl
scas
movsb
leave
insb
ret
sahf
and
imul
cmp
push
xor
and
sub
rcrb
into
push
aaa
dec
loopne
mov
mov
add
outsb
push
xchg
and
in
xor
mov
fbld
in
std
dec
fnstcw
push
insl
inc
andl
xlat
sub
and
sbb
mov
adc
outsl
xor
adc
adc
xor
popa
pop
add
test
int
jbe
ret
or
xor
and
jg
cmpb
std
ss
sbb
and
xor
xchg
xlat
mov
pop
push
mov
repnz
xor
clc
gs
sub
mov
pusha
dec
push
pop
pop
or
shrb
sahf
inc
mov
push
sbb
xchg
scas
je
pop
mov
imul
push
loopne
cmpb
add
movsb
movsb
mov
dec
push
and
mov
mov
xor
pop
subl
xchg
roll
jge
mov
xor
imul
mov
ja
pop
cli
jnp
cmc
push
inc
and
clc
xchg
fisttpll
dec
adc
ljmp
fistl
sub
fdiv
stos
pop
test
jge
loope
sbb
sub
lock
cmc
mov
mov
fstpl
in
int
add
xor
cltd
sbb
mov
adc
inc
loopne
xor
xor
mov
pop
pushf
or
idiv
add
and
xchg
mov
mov
jle
in
add
jle
adcb
loop
in
or
xchg
add
mov
pop
mov
jmp
jbe
jl
sbb
xlat
int3
push
in
sti
adc
mov
shrb
ficoms
push
mov
leave
sub
js
add
and
mov
cmp
imull
cld
dec
sahf
ja
pop
pop
addps
decb
mov
hlt
push
popa
or
pop
rcll
pop
adcl
pop
lret
or
dec
inc
into
adc
sarl
mov
fwait
lea
add
cmp
lahf
cli
pusha
std
cmp
ret
inc
cmp
push
xchg
sbb
cwtl
jne
adc
adc
in
cmp
addr16
jecxz
hlt
xor
xchg
mov
jl
rcrl
sahf
shr
enter
push
in
scas
mov
push
cmpsl
cmpsl
dec
outsb
rclb
imul
sub
scas
repnz
pusha
iret
jno
scas
mov
rcrb
add
ret
xchg
aam
cmp
movb
xchg
out
adc
cmp
dec
scas
add
in
mov
adc
idivb
ljmp
fbld
test
outsl
aad
mov
add
xchg
mov
adc
pop
in
movsb
pop
add
aam
add
insl
add
mull
pushf
sbb
dec
cltd
shrl
pop
gs
mov
subb
inc
repnz
or
loop
adc
imull
inc
pop
inc
sbb
and
decb
mov
insl
add
lret
inc
int
repnz
clc
out
ds
jl
aad
xor
iret
mov
add
sti
sub
adc
mov
arpl
stc
pusha
sub
mov
ljmp
sub
mov
xchg
jo
xchg
xchg
pop
cmpl
push
leave
push
add
mov
inc
adcb
cmpsl
stos
ss
push
loope
and
out
inc
sub
cs
cmc
icebp
inc
loop
cmpl
negb
xor
fcmovnb
in
fadds
xor
arpl
jns
icebp
xor
adc
add
stos
and
xchg
mov
shlb
ja
jo
addb
push
jmp
jae
xlat
xor
bound
mov
xchg
add
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
testl
add
aad
mulb
dec
jle
add
mov
lods
in
dec
pop
and
cltd
jge
pop
add
mov
and
mov
mov
push
push
into
out
xor
push
jnp
rclb
es
shll
and
popa
stos
cltd
xor
mov
sbb
sub
adc
adc
xchg
imul
mov
or
xchg
ficomps
and
lea
sbb
cmp
popf
fwait
mov
shrb
mov
dec
nop
int
adc
sbb
insl
or
sbb
sbb
loopne
xor
repnz
ljmp
pop
jecxz
sti
push
sbb
jle
push
sub
icebp
loopne
mov
dec
jns
mov
fs
inc
lods
loop
incl
pop
pop
je
sub
pop
pop
dec
shld
sbb
jmp
loope
in
lods
enter
roll
sub
jle
jae
push
mov
divb
lds
sub
test
or
jns
mov
lcall
imul
test
mov
inc
cmp
mov
sbbl
add
iret
lods
sarb
or
cmc
mov
in
xchg
jns
jo
push
pushf
push
stc
cld
or
fnstsw
fwait
out
mov
push
add
enter
push
fst
aam
add
push
int3
mov
mov
lea
fwait
mov
pop
fcomp
std
xchg
or
sbb
pop
lret
sub
fistps
aad
and
mov
fidivrl
sub
or
loop
idivb
adc
inc
gs
fcmovnbe
movb
or
cli
dec
in
inc
and
and
adc
andb
push
stos
les
out
cmp
dec
in
mov
inc
or
stos
push
pushf
sub
push
push
lcall
adc
lock
pop
outsl
push
pop
inc
mov
shrb
fistpll
ret
dec
clc
xchg
iret
sub
cmp
fs
xchg
xchg
or
pop
dec
lods
fidivrl
lea
data16
in
xchg
adc
outsl
int3
daa
sets
xor
pop
sub
call
jno
xchg
push
inc
and
push
mov
mov
pushf
cmpb
add
imull
xchg
and
popl
mov
stc
push
mov
movsb
jl
sub
sbb
sbb
xchg
mov
std
hlt
xchg
inc
iret
ret
push
sbb
out
and
cwtl
push
mov
dec
mov
push
rorl
mov
adc
adc
loope
cmp
mov
adc
outsl
push
je
pop
jae
iret
inc
push
inc
loope
mov
cli
ret
aas
mov
sbb
adc
les
mov
adc
xchg
and
xchg
xchg
std
movsb
daa
sub
xor
mov
cmpl
scas
icebp
scas
xchg
lahf
in
jle
add
pop
mov
mov
sbb
lock
mov
push
cmp
xchg
aas
add
outsl
push
pop
es
loope
cmp
sub
jns
inc
cmp
cs
inc
inc
push
add
loop
cmp
cmpsl
rorl
testb
sbb
inc
push
xchg
jge
pop
rcrl
jmp
shll
mov
int3
lret
popa
or
out
jbe
in
sub
pop
mov
out
add
movsb
shlb
cmpsb
lea
jo
lods
pop
fistpl
jmp
jbe
ds
js
cmp
and
adc
cmp
pop
push
rcll
in
lahf
jl
fwait
popa
lcall
pop
not
cld
mov
es
loop
fs
sbb
cmpl
xlat
ret
ret
icebp
cmp
fsubrs
mov
jne
out
sub
cld
xor
or
mov
mov
dec
xor
and
cmp
adc
loope
xor
aam
inc
jp
sub
mov
jmp
push
ret
cmp
mov
into
popa
rcl
dec
cmp
imul
fisubl
mov
lea
jnp
mov
loope
inc
loop
mov
test
rcrb
push
outsb
rorl
push
insb
push
pop
mov
pusha
dec
ret
dec
add
daa
ret
add
repnz
test
mov
lea
mov
or
push
and
js
cmp
cmp
icebp
pushf
and
cmp
xchg
xchg
outsl
xlat
cmpsl
cwtl
xchg
loop
repz
and
outsb
testb
xchg
lea
adc
popa
adc
ja
mov
xchg
sub
pop
iret
mov
cmp
dec
ljmp
pop
sub
call
mov
dec
pop
mov
sti
jae
jnp
mov
lds
mov
xlat
ja
shrb
jne
cmpsb
js
popf
imul
shr
fnstsw
popa
pop
push
sub
icebp
jge
mov
dec
inc
cmpsb
in
push
or
mov
filds
pop
xor
popa
xor
dec
mov
mov
xor
adc
inc
fmul
push
enter
cmp
je
test
shll
shrl
in
ret
in
dec
int
lahf
sahf
xchg
imul
dec
mov
int3
pop
int
inc
cwtl
lahf
cmp
mov
icebp
inc
cmp
mov
lea
jo
adc
cmp
stos
iret
aad
and
push
inc
in
lret
cmpsb
jg
mov
push
xchg
sub
pop
repz
inc
popa
adc
shll
je
xor
mov
stos
adc
dec
pop
dec
popa
lahf
xchg
mov
rorb
pop
aaa
inc
mov
jbe
mov
insb
inc
shll
ja
push
subb
clc
cmpsb
in
push
cmp
dec
fcomi
dec
into
aam
lock
jecxz
jl
push
roll
lahf
jns
mov
aaa
or
out
sub
roll
adc
inc
hlt
addl
aam
jecxz
xor
ficoms
and
ljmp
fists
icebp
xor
call
mov
adc
push
mov
outsl
cmpsb
mov
cmpl
jl
cs
popf
add
sub
shll
pop
pop
sbb
cmpsb
pop
fs
out
xlat
sub
dec
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
xchg
add
add
add
pop
scas
out
jb
jbe
mov
inc
cmpsl
jmp
in
xchg
mov
jmp
cltd
ljmp
stos
incb
adc
loopne
orb
int
jnp
mov
push
in
add
sbb
sbb
cli
loopne
fildll
repz
mov
loop
xchg
std
push
shll
mov
push
mov
pusha
dec
jmp
fisubrl
dec
mov
pop
xchg
adc
vandps
scas
leave
mov
mov
call
push
sbb
cmpsl
fs
push
cmp
pop
imul
shlb
movsl
sbb
sbb
add
sub
setno
jp
push
mov
or
pushf
sbb
lods
icebp
fstl
pop
sbb
clc
mov
inc
xor
mov
push
pop
les
pop
xchg
enter
les
shlb
in
stos
cmp
ljmp
mov
cmp
js
sbb
mov
sbb
cmp
ret
fs
stc
loope
sub
sub
cmp
xchg
sbb
adc
inc
xor
rorb
inc
test
outsb
dec
and
push
dec
cmpb
adc
sub
fwait
and
adc
xchg
push
add
add
int3
sub
dec
jno
loopne
sub
inc
pop
xchg
insl
add
add
fwait
in
fstpt
and
jb
or
xchg
adc
movsb
cmp
clc
jle
in
add
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
add
add
add
add
xlat
vcvtss2si
pop
fsubrs
mov
inc
xorl
das
xorb
inc
popf
xchg
int3
sahf
mov
in
mov
sbb
cli
incl
mov
xor
mov
fmuls
jo
and
cmp
popa
dec
inc
mov
adc
daa
sub
cld
push
dec
and
sbb
out
xchg
movsb
inc
mov
cltd
fistl
xchg
outsl
mov
cmp
mov
and
aaa
xchg
stos
sti
test
popf
cmp
mov
and
xchg
inc
push
gs
or
xor
mov
loop
cmp
cli
mov
leave
scas
mov
sahf
mov
xor
jbe
aam
pop
shrb
loopne
jae
js
and
xchg
fbstp
pop
pop
lock
and
cwtl
lods
and
mov
pop
aaa
inc
xor
jb
and
rorl
insl
xor
int
rorl
dec
mov
xchg
or
test
out
dec
inc
inc
jae
sbb
push
cli
rclb
orl
mov
jb
negl
xchg
insl
cmc
aam
xchg
jb
ss
lds
insb
fstpl
add
pop
pop
subl
pop
fpatan
insl
das
push
mov
clc
dec
adc
mov
jge
dec
pop
push
in
mov
movsb
ret
mov
mov
push
mov
adc
and
in
lahf
sbb
fs
push
rcl
mov
mov
lret
ss
pop
adcb
or
mov
mov
push
push
imul
inc
loop
insl
ja
add
lcall
sub
test
fldt
mov
xor
jge
xor
cltd
xchg
pusha
mov
xchg
mov
pop
cmp
and
push
add
mov
out
add
imul
adc
xchg
mov
and
push
sbb
push
pop
mov
lods
push
xor
pop
jg
lcall
jno
movsb
and
push
insl
push
sbb
insb
jecxz
test
dec
lock
mov
int
jbe
mov
filds
pop
cmpsl
lock
enter
xor
xor
je
cli
nop
sub
cltd
in
xor
sbb
push
and
inc
pushf
cli
cmp
add
fisubs
adc
lcall
pop
xorl
testb
jge
cmp
imull
popa
faddp
sahf
rcrb
ja
les
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
add
add
add
add
mov
aad
icebp
push
mov
es
or
cmpsl
sub
adc
loop,pt
mov
jmp
fisubs
sti
fld
dec
scas
inc
testl
or
insb
xor
je
or
cmpsb
fs
ret
xchg
test
stos
adc
xchg
adc
scas
imul
push
in
in
movsb
sub
fsubs
mov
scas
fisttpll
fst
fiadds
inc
in
fmuls
ret
dec
push
jle
pop
rorb
in
xlat
insl
mov
adc
out
loope
pop
out
popa
push
cmp
add
aas
mov
popa
mov
sbb
bound
test
jle
leave
pushf
add
dec
pop
push
shr
addb
movsb
mov
ss
inc
mov
out
or
add
cmp
std
lahf
les
ss
dec
or
fiadds
fsubrl
sahf
mov
or
inc
ss
rorb
cli
lock
jnp
loope
inc
jns
cli
daa
push
xor
dec
inc
cltd
test
lret
into
mov
pop
fs
loopne
dec
out
aam
and
and
mov
les
les
add
leave
cwtl
fcoml
test
loope
addr16
pusha
insl
lock
shl
mov
xchg
dec
pop
push
jl
lods
cmp
xor
and
xor
xor
rcll
pop
push
imul
leave
add
jnp
mov
cltd
mov
inc
add
or
sub
movsl
ret
repnz
stos
pusha
sub
xor
out
es
fcomps
cmp
lea
pop
cltd
mov
xchg
sbb
jbe
xor
jnp
push
test
push
add
xchg
push
and
je
sub
outsl
pop
xchg
sub
adc
cmp
es
sbb
mov
out
daa
lcall
cld
ret
inc
mov
xor
das
test
mov
cmp
rolb
dec
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
mov
add
sub
add
mov
leave
int3
cmp
mov
mov
lret
test
ret
das
sbb
sub
sub
lcall
push
xchg
mov
in
jle
loope
jae
aas
fwait
inc
shlb
insb
loope
fwait
adc
es
dec
into
push
pop
rcr
arpl
sub
ficomps
ljmp
cmc
xor
clc
pop
sbb
sbb
ds
mov
mov
movsb
in
pop
ja
jbe
push
or
add
loope
mov
addr16
sti
jp
or
lock
jo
mov
fstl
sub
rclb
outsl
jo
int3
lret
mov
pushf
pop
or
mov
insl
jae
add
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
lcall
add
jmp
repnz
fwait
pop
icebp
in
decb
mov
dec
push
and
insl
or
mov
in
sub
out
loop
pop
fs
pop
aas
mov
adc
lods
movsb
xchg
jae
gs
loop
fsubs
push
sub
or
sbb
cmp
xchg
sub
lods
push
dec
clc
mov
jle
push
xchg
int
sti
mov
or
jo
jmp
sbb
stos
sbb
lahf
out
mov
mov
lods
sbb
jae
lahf
xor
inc
dec
mov
mov
dec
or
stos
adcb
lret
cmp
in
jp
sbb
lret
imul
xchg
in
xor
dec
xchg
fcmovnbe
lret
mov
cmp
fsts
mov
mov
popa
pop
mov
in
scas
mov
loope
pusha
add
cli
dec
inc
sub
inc
inc
xor
popa
mov
or
aas
jo
cmp
push
lea
repnz
fcomps
mov
mov
mov
cmpsl
xlat
jno
lea
es
or
mulb
out
push
mov
pop
cmpsl
cmpsb
pop
mov
inc
jnp
add
jbe
pop
push
xchg
lods
scas
in
inc
lcall
repnz
stos
in
clc
mov
push
inc
out
popa
movsb
test
lods
mov
dec
or
dec
insl
inc
cmp
clc
paddq
rcrb
lods
enter
push
movsb
push
add
and
sub
out
mov
outsb
and
jle
xchg
and
lds
push
push
xchg
in
push
cmpsl
rorl
mov
data16
mov
inc
or
push
fwait
jno
frstor
clc
xor
in
jbe
pop
jno
lods
add
add
data16
rcll
xchg
je
fdivs
fldenv
shrb
or
xchg
jno
imul
push
loopne
pop
test
icebp
in
test
mov
mov
and
cmp
mov
pop
mov
lahf
icebp
inc
lock
add
jmp
sbb
adc
aad
in
adc
imul
xor
aas
jmp
stos
test
cltd
pop
imul
popa
cmp
mov
cmp
hlt
push
push
testb
mov
adc
out
rol
or
lds
aad
mov
out
mov
xchg
sub
daa
sub
sbb
aad
mov
test
pop
add
xor
cmp
inc
fsts
xor
jmp
mov
mov
fld
or
iret
stc
xchg
mov
fsubp
scas
mov
xchg
pop
push
les
test
loope
fisubrs
ss
or
stc
js
es
jmp
idivl
repnz
fstpl
mov
cmp
inc
les
xchg
test
mov
iret
pop
sahf
add
fs
or
and
xlat
xor
movsl
or
and
add
jge
jecxz
roll
mov
stos
movsb
dec
cli
jecxz
jp
sbbb
fbstp
and
aas
cmp
dec
adc
mov
push
jno
cli
jge
dec
imul
insl
ret
test
in
xor
dec
clc
add
and
inc
pusha
cmc
daa
loop
orl
mov
dec
xor
pushw
lret
and
insl
cwtl
in
pusha
cmp
rclb
mov
inc
pop
std
enter
pop
xor
xor
add
xlat
repnz
ja
pop
mov
lahf
sbb
mov
dec
adc
mov
leave
adc
sub
mov
je
xor
scas
cmpsb
out
into
iret
add
mov
cmpsl
mov
iret
mov
or
shrl
mov
test
rcr
pop
inc
cltd
inc
mov
or
add
jns
sti
lahf
emms
jl
out
xor
clc
push
mov
add
clc
or
xchg
shr
or
inc
pop
notb
mov
lock
mov
jno
insb
adc
in
pusha
repz
jno
sub
pop
in
or
and
jae
and
scas
jl
cmp
sub
test
das
and
sub
test
in
cmpb
hlt
jne
push
add
adcb
mov
shlb
iret
and
cmp
out
fwait
addl
outsl
adc
and
dec
gs
test
ds
xchg
inc
cli
and
ret
testb
pop
lret
pop
xchg
mov
or
pop
jns
movsb
pop
add
movsl
mov
lcall
adc
clc
mov
adcl
inc
enter
aam
add
rcrl
popaw
clc
sar
mov
insb
mov
mov
lret
mov
insl
mov
fistpll
cmpsb
or
push
dec
sbb
std
mov
mov
push
cmp
fdivrl
mov
dec
ljmp
pop
xchg
cmc
mov
adc
stc
add
sub
arpl
xchg
sbb
jecxz
mov
xorl
lods
rorb
dec
pop
mov
mov
inc
daa
outsb
push
add
aam
push
mov
adc
xchg
or
fidivrs
adc
ljmp
xchg
fwait
jb
data16
and
inc
stc
xchg
mov
mov
sub
jl
cmp
stos
mov
pop
into
cmp
jne
rorl
cld
or
ret
mov
cmp
pusha
sub
sub
adc
pop
lock
addl
mov
inc
xchg
sti
daa
xor
insb
push
mov
bound
clc
cld
pop
cmpsl
ja
push
xor
aaa
jae
in
f2xm1
das
pop
fimull
jecxz
push
jp
push
inc
cltd
push
or
lret
jae
mov
jl,pn
sbb
rcll
shrb
jecxz
add
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
mov
add
add
mov
lret
fstps
cwtl
ret
pop
cmpsl
ja
mov
xor
shll
mov
adc
cmp
test
fimuls
int3
ret
pushf
outsb
pop
cld
clc
lds
into
push
adc
sahf
imul
sahf
jmp
adc
insl
addr16
inc
pop
pop
jl
add
xchg
mov
push
dec
jbe
out
or
mov
lret
rorl
and
mov
xor
aas
adc
mov
lret
ljmp
dec
rcrl
int3
lods
daa
leave
dec
jle
pop
xchg
ret
cmp
scas
dec
sub
lea
adc
inc
int
cmp
subl
sub
std
jle
xlat
or
cltd
push
fists
mov
insb
xchg
push
mov
bound
and
pop
push
and
xor
fdivr
leave
leave
dec
jge
lahf
mov
scas
push
xchg
stc
test
add
ret
es
lock
sbb
and
xchg
and
xchg
ret
mov
cmp
lcall
inc
push
xchg
push
pop
mov
jl
cwtl
insl
icebp
adc
mov
push
xchg
in
mov
aad
cmp
pop
mov
pop
ss
push
cld
or
into
pop
cmp
pop
mov
jnp
das
into
mov
add
ja
es
dec
dec
push
adc
test
clc
xchg
int3
repnz
test
std
into
icebp
adc
push
out
inc
push
repz
loope
dec
call
insl
pop
xor
mov
mov
cmp
shlb
popf
inc
sub
dec
cmp
or
nop
loopne
pushf
mov
pminsw
lret
dec
jbe
repnz
stos
pop
jae
sub
pop
xchg
mov
int
and
inc
inc
in
lret
cwtl
mov
jge
dec
ja
mov
cwtl
popa
ja
in
cmpsb
xchg
inc
jnp
jbe
cmp
test
clc
or
andb
and
mov
adc
mov
mov
mov
xchg
xlat
dec
in
add
cmpsb
add
leave
cmp
aam
dec
outsl
dec
mov
pop
stc
add
adc
cmp
adc
inc
cmpsl
fcoms
mov
jb
in
cmp
xchg
push
sub
imul
add
mov
cmc
jne
and
outsl
or
test
adc
jb
je
adc
mov
mov
int
mov
pop
push
jne
fistpl
popf
out
mov
pop
cmpsb
xor
push
adcb
call
inc
cwtl
xor
in
stos
rclb
jno
pop
lods
or
fidivl
mov
rol
ffreep
and
bound
pushf
lods
sub
xor
cmp
jne
dec
mov
mov
gs
dec
push
xor
fisubrl
cmpl
out
dec
cmp
add
cmpsl
sbb
inc
mov
mov
fnsave
mov
pop
movsb
js
adc
xor
aad
cmp
movsb
bound
mov
xor
scas
cmp
jge
popa
adcb
ret
aam
add
xchg
and
and
mov
jle
cli
and
xchg
sub
scas
jge
xor
arpl
jg
sbb
mulb
xchg
or
add
hlt
jb
xchg
inc
adc
mov
add
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
sahf
add
add
add
add
inc
jmp
stos
je
jne,pn
pop
jno
push
stos
xchg
subb
jg
dec
popf
xchg
or
sub
cs
pusha
or
xor
insb
inc
adc
test
jns
in
or
xchg
emms
adcb
ret
push
adc
cltd
fs
fnsave
cltd
test
idivl
stc
andl
test
addr16
dec
mov
sbb
orb
adcl
fdivr
dec
xchg
mov
out
in
addr16
dec
xchg
pop
mov
movsb
lock
lock
and
hlt
inc
lcall
das
daa
shl
cli
dec
jl
xchg
xchg
adc
mov
jno
lahf
in
js
out
mov
andb
imul
and
lcall
arpl
xor
pop
ret
in
in
in
rcrb
mov
mov
or
jp
sbb
popf
fstpl
sti
shrb
push
or
add
ja
cli
mov
and
out
cmp
enter
xlat
mov
xchg
sbb
cltd
subb
adc
jecxz
cmpsb
jb
stos
push
sti
push
mov
dec
stos
jb
cmp
mov
stc
addl
pop
sub
xchg
rcr
add
jne
fistps
test
fcoms
test
xlat
add
insb
ljmp
cmp
neg
idiv
push
loop
cli
sub
push
sahf
sbb
pop
call
repz
movsb
hlt
hlt
sbb
xchg
in
xchg
mov
push
sbb
xor
rolb
adc
lret
bound
cmp
add
inc
add
cwtl
mov
int
add
fstpt
fisttpl
sub
repnz
mov
daa
loopne
sbb
int3
fdivrp
xchg
fcompl
mov
xor
test
pusha
mov
icebp
xor
test
inc
cmp
adc
ljmp
mov
cli
ljmp
cmp
pop
stc
movsl
dec
and
inc
mov
lods
enter
sti
sub
data16
std
cmp
nop
dec
movsb
cmp
pop
cmp
inc
dec
adc
add
inc
and
xchg
jno
push
sub
jecxz
sarl
or
xchg
stos
aaa
jmp
mov
in
mov
adc
and
mov
push
bound
out
add
ss
and
inc
mov
jmp
lcall
popa
sub
dec
testb
mov
mov
sub
imul
cltd
cmp
fcomps
testb
test
popf
fnstcw
dec
iret
push
je
arpl
jns
cli
mov
mov
popa
inc
xchg
dec
lods
jp
cld
inc
mov
js
inc
inc
adc
mov
movsb
ret
xor
scas
xchg
push
mov
ror
xor
sbb
test
xor
popf
repz
jmp
dec
mov
sti
xor
fistpll
nop
pushw
mov
push
push
cmc
pop
cwtl
cmp
testl
mov
call
and
mov
lods
std
pop
ja
or
mov
jg
ja
in
jne
in
mov
xchg
test
inc
and
or
ds
jbe
add
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
add
add
add
add
adc
push
sub
ljmp
and
adc
dec
or
or
add
fnstsw
xchg
imul
mov
sub
jne
mov
movsl
int3
sub
ret
test
mov
mov
dec
ss
js
cwtl
add
ret
fisubrs
dec
fdivrs
push
xchg
fwait
dec
pop
push
loopne
sti
and
rcrl
xchg
cld
popf
arpl
in
sahf
jp
cmp
sub
clc
push
xchg
push
xlat
jl
add
xor
push
jns
adc
push
fmull
ret
xor
insb
push
xchg
dec
and
dec
sbb
mov
lods
sbb
sub
push
aas
cld
das
xchg
incb
add
jae
mov
jns
mov
jle
out
sbb
lods
mov
stc
test
pop
aam
mov
fwait
jb
rcr
insb
loop
jp
aas
into
repz
bound
js
cmp
adc
flds
xor
jno
sti
test
sbbb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jg
add
out
add
add
mov
ret
lea
std
add
frstor
jge
stos
and
ss
inc
push
dec
cld
dec
mov
jl
test
ret
movsb
hlt
sbb
mov
fidivrs
ret
cmpl
dec
jb
jo
sub
mov
or
push
inc
dec
test
dec
adc
ljmp
ljmp
jae
mov
and
out
add
cmc
xchg
add
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
add
add
add
add
mov
mov
sbb
rcrb
clc
icebp
fs
call
in
das
pop
dec
fidivs
fisubrl
mov
loope
fistpl
ret
ljmp
pop
cmpl
inc
inc
ljmp
addr16
xor
and
pop
add
hlt
add
repnz
pop
add
xorb
mov
shlb
and
sub
or
insl
in
lods
push
jbe
push
andb
add
cmp
add
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
add
add
movsb
icebp
inc
cmc
loop
or
mov
mov
inc
cmp
ret
mov
filds
dec
inc
cmp
js
fwait
mov
jb
add
shlb
lods
mov
scas
cmp
imul
jb
dec
cmp
xor
pusha
daa
aas
jg
mov
pop
adc
fcoml
sbb
data16
movsl
and
stc
fidivs
mov
jmp
mov
popf
mov
test
lret
mov
pop
xchg
int3
jmp
into
or
or
cmp
push
adc
sub
insb
xchg
push
sarl
add
cmpsb
stos
and
fidivrl
sub
mov
xor
xchg
and
pop
pusha
rolb
mov
push
inc
repnz
lock
sbb
sti
cmp
sub
xor
push
test
mov
cwtl
sub
movsl
dec
mov
addr16
xchg
jle
call
mov
jbe
jge
inc
inc
aas
cmp
dec
bound
clc
test
adc
mov
mov
sub
mov
adc
fisttpll
pop
lock
insl
insb
mov
push
push
add
insb
adc
pusha
mov
mov
movl
adcb
mov
inc
out
adc
inc
stos
pusha
xchg
cs
add
inc
decb
xchg
aad
gs
xchg
frstor
sahf
lods
notb
in
xchg
mov
and
cli
sbb
in
fidivl
adc
pop
xor
mov
xlat
arpl
and
stos
pusha
loopne
xchg
decb
fnstenv
push
jecxz
addr16
ljmp
xchg
jl
std
and
or
xchg
pop
hlt
xor
leave
inc
jnp
inc
enter
sbb
inc
sbb
fadd
pop
xor
movsb
cld
mov
adc
mov
push
mov
aas
adc
sbb
iret
mov
jecxz
sub
jecxz
icebp
lret
je
dec
xchg
pop
jle
inc
out
stos
or
pop
orb
inc
and
ss
rcrb
mov
dec
adc
fstpt
jne
mov
int
jp
pop
mov
cmp
cmp
push
lcall
cs
sbb
or
and
daa
push
xor
in
enter
inc
inc
cmp
sbb
fsubs
mov
ficompl
adcb
es
lret
fildll
insb
sub
bound
add
fmull
lds
cmp
aad
sbb
aaa
aad
fcmovnb
test
xchg
and
mov
cmp
cmp
adc
xor
jb
push
pop
pop
test
rol
out
arpl
xor
dec
icebp
xor
call
xor
test
and
insb
mov
push
mov
aaa
jp
out
push
std
mov
jbe
jg
cltd
divl
jge
lea
mov
mov
out
jnp
lret
test
mov
push
stos
rorb
cmpsl
test
insb
mov
mov
jge
jb
and
loop
cvtps2pi
add
push
sub
cmp
mov
pop
mov
fldcw
mov
push
or
iret
cmp
mov
push
sub
stos
pop
dec
mov
stc
mov
nop
div
lea
pop
dec
lea
sbb
or
fs
nop
decb
stos
jmp
lea
dec
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
mov
add
xchg
add
jo
ret
outsb
lods
sbbb
xchg
sahf
repnz
pop
nop
dec
add
push
shrl
ret
cmpsb
lods
adc
push
stc
popf
push
in
adc
inc
mov
jecxz
ds
lock
mov
cmp
pop
out
lret
ljmp
jnp
mov
or
test
insl
push
xchg
dec
pop
les
and
adc
and
sbb
cli
rcll
into
mov
rclb
xor
fisttpll
jmp
popf
in
icebp
mov
sbb
into
cmp
pop
lods
cmp
nop
xor
adc
inc
push
clc
test
or
sub
outsb
movsb
mov
mov
xchg
add
push
cltd
int
pop
imul
adc
scas
push
xor
mov
movsb
orl
dec
pop
mov
sbb
daa
imull
push
mov
lcall
dec
cmp
push
dec
gs
js
shlb
orl
ss
sbb
call
dec
popf
scas
and
rclb
jle
sub
adc
test
jg
fcmovb
imul
jp
mov
xor
mov
fildll
fstpl
repnz
in
rcr
push
adc
int
lea
loop
test
inc
push
rorl
pop
and
mov
loop
insb
mov
add
pop
sub
lcall
mov
xchg
sub
jno
stos
shl
mov
lret
jl
aad
bnd
imul
dec
push
pop
js
insl
int
jnp
mov
idiv
sarl
mov
ljmp
cmp
ficomps
pop
dec
daa
xor
mov
mov
xchg
cmp
lods
adc
outsl
mulb
mov
xor
or
iret
jne
cs
enter
and
lret
outsl
icebp
das
movsl
cld
jns
jmp
adc
and
mov
clc
and
adc
xchg
and
xor
push
add
out
je
imulb
pop
ss
test
out
mov
sub
insb
fcoms
out
cmpsb
xchg
shl
xchg
sbb
mov
sub
pop
pop
jmp
mov
std
push
ret
jmp
xor
adc
mov
imul
aas
or
mov
aaa
pop
gs
cmp
stc
arpl
popa
shll
cld
lret
call
jg
jo
push
pop
fs
adc
lret
push
jbe
push
shrl
or
out
int3
push
cmpsl
mov
pop
scas
aam
and
rcll
mov
or
and
pop
or
mov
ret
xchg
jo
mov
test
inc
inc
insb
mov
sub
ret
or
out
ljmp
fldt
sub
test
xor
jl
adc
mov
mov
push
enter
pop
cmpsb
scas
pop
push
fs
mov
push
adc
inc
push
imul
in
push
mov
and
push
fsubs
fsubl
mov
jmp
mov
pop
in
mov
dec
dec
int3
mov
xchg
mov
std
sahf
aas
cltd
sbb
js
xor
add
dec
cmc
int3
inc
xor
test
insb
jp
inc
lahf
pushf
xor
hlt
div
push
dec
push
aam
ret
pop
adc
lods
push
sub
push
cmpb
mov
clc
add
jecxz
lret
jle
mov
adc
adc
pop
mov
negl
sub
push
popf
and
scas
push
push
add
mov
aad
mov
xchg
push
mov
shrb
pop
stos
jb
addr16
xchg
clc
inc
pop
push
or
or
sahf
ret
nop
xchg
lcall
pop
cli
mov
jbe
push
adc
in
aad
push
sti
aas
sub
leave
int
data16
sub
push
int
pop
sub
jae
pop
jle
mov
fdivr
cs
or
xor
daa
js
pushf
fs
movsb
insl
mov
ret
mov
int
inc
inc
shr
cmp
insl
and
subl
jp
inc
jp
in
popa
aam
loop
pop
divl
cmp
cli
push
movsb
and
xchg
aaa
dec
into
adc
lods
push
cmpsb
add
test
aam
movsb
outsb
pop
push
add
mov
imul
or
lea
int3
sbb
mov
into
in
mov
scas
cli
jne
mov
push
cltd
sub
mov
sub
imul
cld
push
mov
popf
jge
jge
movl
jmp
cmpsl
push
sub
in
dec
push
push
int
adc
pop
xchg
out
insb
xor
fsubs
xor
xchg
sti
jo
xor
outsl
sub
inc
icebp
out
ret
mov
jp
cmp
xchg
pop
push
cmp
and
inc
dec
adc
je
sbb
adc
push
cmp
fbstp
and
jle
and
cmp
add
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
lret
add
add
jb
xor
and
adc
les
mov
mov
shrl
out
jb
mov
ret
push
jge
jo
push
jl
adc
sub
mov
add
jns
dec
cmpsb
jbe
mov
mov
aas
push
inc
dec
cmp
ret
fs
xor
addr16
dec
adc
lahf
inc
jle
call
sahf
shll
lds
jl
mov
call
int
push
shlb
xlat
div
jl
addr16
aaa
dec
lahf
int3
test
push
xchg
add
cli
sbb
mov
cmpsl
adc
adc
iret
or
test
cltd
ja
fdivrl
mov
and
dec
mov
jg
pop
cmp
xchg
sarb
stc
xor
js
sbb
or
push
mov
add
rol
adc
jno
stc
cmp
icebp
xlat
pop
mov
leave
lds
jno
sub
pop
pcmpeqw
aad
pop
xor
jle
adc
test
xchg
adc
xor
lahf
or
mov
cmp
xor
int
iret
and
int
out
push
push
xchg
repnz
pushf
test
push
fidivrs
inc
add
xchg
jno
sub
mov
mov
adc
cmp
add
xchg
bound
lods
adc
cld
xlat
mov
xor
xchg
add
sti
add
mov
sub
adc
mov
push
in
xchg
es
hlt
ja
js
or
jle
push
xor
jmp
jnp
aam
popf
ds
fisubs
inc
mov
xor
xlat
call
andb
push
mov
inc
or
scas
pusha
outsb
mul
insb
aam
mov
pop
jns
inc
daa
xor
es
mul
adc
mov
test
stos
cwtl
mov
pusha
mov
xlat
outsl
vucomiss
sti
movsb
sbb
mov
sub
out
in
pushf
mov
test
jl
mov
sbb
ljmp
jecxz
loop
sub
icebp
outsl
js
mov
insb
or
popf
out
inc
mov
adc
cmpsb
and
push
dec
mov
push
test
lock
add
rorl
ljmp
xchg
out
pusha
ja
pop
outsl
test
add
js
rcrb
ds
stc
mov
xchg
jae
dec
cmp
je
mov
and
adc
dec
pop
or
pop
pop
push
enter
dec
incb
xor
sbbb
cmp
loopne
xchg
add
dec
sub
jge
sbb
mov
mov
sarl
fcmove
sti
out
es
dec
orl
fdivl
bndstx
loopne
sarl
mov
sbb
lea
sahf
out
movsl
xchg
je
mov
jne
sahf
add
mov
dec
push
add
fstps
mov
lcall
mov
mov
pop
std
lea
mov
or
int
subl
adc
jae
adc
xchg
cli
std
dec
shrl
dec
in
lods
test
pop
mov
sub
sub
mov
xchg
pop
sub
jae
jbe
add
out
leave
pop
jp
ss
jecxz
add
insb
and
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
push
pop
add
inc
or
add
das
pop
jae
fisttps
test
cmpsb
sbb
js
es
cmp
test
sub
std
mov
mov
jg
jne
xor
sbb
aaa
ret
addr16
push
push
add
add
dec
in
das
dec
pusha
insl
or
cld
repz
sub
nop
adc
fnsave
mov
cmp
cmp
dec
jl
xor
cli
popa
mov
and
or
je
or
lock
cmc
ljmp
pop
xchg
cmp
inc
in
pop
data16
dec
xchg
adcl
mov
das
jne
mov
lahf
test
stos
imul
mov
cwtl
stos
call
xor
cli
mov
jo
cs
nop
rolb
push
mov
ret
mov
dec
jle
aas
sbb
pop
shlb
inc
cmpb
bound
mov
add
cmc
jmp
jmp
cwtl
fdiv
lea
xchg
lret
imul
xchg
cmpsl
inc
mov
lret
outsb
das
or
aaa
test
leave
pop
and
in
adc
pop
lods
xchg
jns
dec
rclb
scas
pusha
jne
add
mov
data16
scas
push
in
iret
dec
call
sar
out
inc
add
mov
push
push
inc
repz
nop
inc
inc
xchg
clc
jnp
repz
outsb
mov
mov
adc
into
mov
mov
pusha
jge
fisubrl
sub
iret
and
or
dec
inc
mov
adc
fmuls
and
push
loop
in
loope
aam
or
and
jg
lods
std
je
sbb
jmp
iret
inc
test
pop
out
xchg
pop
dec
xor
outsl
jns
jmp
mov
fldt
cmpsb
jae
push
pop
lret
mov
int3
or
pop
inc
lods
jne
inc
daa
dec
insb
jecxz
in
aaa
sahf
push
xchg
ud2
movsl
cli
dec
popa
add
push
jb
dec
cmp
es
sub
in
fwait
outsl
sub
test
cli
sbb
icebp
insl
scas
aaa
popf
add
pop
or
daa
sbb
imul
insl
pop
adc
jge
ret
or
sbb
push
mov
icebp
addr16
sahf
pushf
sbb
adc
roll
movsl
aas
sahf
or
int3
dec
dec
dec
pushf
inc
and
jne
push
insl
jb
jns
mov
fcoml
fistpll
mov
test
pop
cltd
ja
xor
xor
mov
pop
lret
add
add
jo
rcl
loope
mov
inc
push
xchg
loop
xor
cmp
mov
data16
jno
push
lods
mov
inc
jns
mov
sti
or
aam
cltd
mov
lret
and
and
mov
roll
daa
adc
scas
mov
inc
das
sbb
cmpsl
and
xchg
cwtl
outsb
mov
or
xchg
out
jg
aas
dec
lds
mov
and
push
test
mov
ss
jmp
daa
mov
imul
mov
test
jb
lods
xchg
sbb
cwtl
subb
je
fcmovnbe
sub
jmp
sbb
lods
test
stos
xchg
ficoms
xchg
outsb
sbb
ds
cmp
sub
aad
fwait
mov
ret
xor
loopne
jge
and
cltd
cld
fcomps
sbb
iret
sbb
pop
fld
mov
ja
mov
dec
push
imul
push
and
cld
cwtl
or
mov
nop
dec
stos
cmpsb
push
sub
je
in
les
sbb
inc
fcomp
pop
lods
mov
hlt
mov
outsb
enter
dec
les
lea
xor
cltd
or
jno
sahf
enter
lret
loopne
push
fadd
fwait
mov
loop
sti
adc
lods
sbb
arpl
cli
jl
or
test
pop
andb
add
cmc
lcall
movsb
dec
jo
lock
ds
mov
push
pop
popf
pusha
pop
push
xor
sbb
jno
je
sarb
sbb
popf
add
idiv
test
mov
mov
add
jecxz
lds
mov
inc
andb
leave
push
xlat
das
out
lahf
xchg
call
ds
sar
sahf
insb
cmp
data16
and
iretw
inc
loope
test
insl
push
sbb
xchg
cld
jb
in
les
cltd
mov
mov
sub
cmp
fdivrs
pop
add
sbb
insb
loop
pop
pusha
arpl
fsubrs
push
lods
idivb
les
sub
arpl
int
out
loop
pop
jne
push
push
push
pop
push
int
movsl
rclb
js
mov
adc
inc
mov
imul
outsb
rcrl
mov
dec
leave
adcb
shll
xor
sbb
mov
insl
pop
int
shr
ss
push
xchg
imul
insb
sbb
jnp
push
cs
filds
mov
jl
adc
pop
int3
nopl
in
enter
mov
push
scas
mov
popa
or
mov
mov
test
and
addr16
jo
stos
push
push
ds
ss
cmp
lods
sub
dec
dec
insl
repz
add
loope
divb
inc
and
aam
lods
ret
outsl
stc
ljmp
inc
es
out
sbbb
mov
popf
cmovs
inc
xchg
and
jo
mov
jge
cmp
inc
frstor
xor
adc
xchg
cltd
adc
push
lock
mov
out
gs
aaa
add
shlb
or
pop
jmp
out
xchg
and
ret
and
aam
mov
fucom
dec
push
gs
stos
mov
pop
lods
in
rcl
lock
mov
lea
push
xor
out
test
push
sahf
or
pop
wbinvd
fs
or
out
into
out
lcall
aam
xchg
jge
mov
repnz
out
and
and
cmp
std
clc
shl
sbb
push
dec
cltd
rolb
xchg
sti
lret
jae
hlt
cbtw
dec
dec
xor
mov
add
mov
mov
iret
fisubrl
mov
xchg
popf
add
lods
and
pop
inc
sub
mov
in
and
inc
inc
or
cld
mov
sub
rcl
add
lods
dec
repz
in
adc
prefetch
cmp
test
mov
cmpsb
inc
adc
repnz
dec
fldcw
xchg
xchg
test
xor
fisubl
push
orb
mov
push
jmp
add
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
add
xchg
add
add
adc
fldenv
mov
int
cli
jbe
mov
popa
and
call
or
inc
ja
xor
int
ret
push
mov
jae
sub
loop
push
imull
fdivp
jl
out
sub
movsl
hlt
mov
sub
jbe
fiaddl
addl
mov
xor
sbb
int
in
fs
sbb
mov
fsub
ljmp
lret
xor
leave
mov
repnz
push
imul
loop
or
inc
pushf
in
repz
pop
push
mov
les
test
arpl
arpl
test
dec
dec
out
sub
in
inc
mov
xor
lret
popf
xor
ret
dec
adc
sub
arpl
mov
mov
jns
out
mov
pop
cli
cmp
mov
pop
scas
xor
push
push
sbb
xor
lahf
jle
adc
add
add
sub
or
xchg
inc
xchg
inc
mov
std
jp
dec
stos
loopne
xchg
xlat
insb
fbld
mov
mov
out
and
bswap
fistl
int3
out
sub
fsubs
test
mov
wrmsr
mov
mov
lods
int
mov
lock
or
dec
icebp
inc
std
frstor
jg
push
out
sbb
aaa
in
popf
and
cmpsb
out
icebp
mull
jp
mov
sbb
repnz
or
xor
sbb
mul
testb
xor
jg
ss
pop
out
cmc
popa
sub
repnz
bound
inc
lds
xchg
and
arpl
ja
xlat
std
nop
mov
jmp
sbb
xchg
jae
sub
jge
push
xor
pop
xchg
push
iret
test
fwait
outsl
or
mov
jmp
and
jecxz
jl
scas
ss
lea
xchg
jecxz
iret
mov
xchg
sub
jb
cs
jbe
mov
xchg
scas
addl
sub
fs
sahf
jge
xor
sarb
out
add
aaa
aaa
xchg
xchg
pop
shll
clc
int
loopne
push
fiadds
scas
lret
iret
jl
xor
add
insb
and
mov
std
adc
push
test
cli
cmpb
jg
dec
mov
pop
pop
roll
add
cs
push
and
or
sub
mov
add
ret
nop
push
jp
cmc
inc
ficomps
inc
addr16
and
jmp
sbb
and
push
ret
dec
adc
das
popa
mov
repnz
jecxz
sub
push
jge
ret
repz
dec
pop
movsb
repz
jle
xchg
fwait
push
les
push
sub
int
imul
mov
int
mov
mov
fwait
cs
dec
out
mov
rclb
popa
dec
aam
aas
inc
add
rcrb
cmp
test
push
xchg
adc
push
push
pop
jge
sub
jp
adc
cmpsl
push
jmp
jae
in
frstor
mov
xor
jo
stc
ss
test
out
push
push
pusha
or
inc
dec
jae
rolb
or
mov
cwtl
dec
and
jmp
adc
inc
aad
sbb
mov
xor
adcl
push
push
add
xchg
xor
pushf
sbb
stc
add
test
pop
adc
cltd
cmp
mov
lahf
jns
sbb
jno
decl
push
js
in
stc
xchg
pop
rcr
cmp
imul
mov
jle
outsl
jns
clc
adc
xor
pushf
push
scas
push
fildl
mov
andl
xchg
leave
sbb
loopne
repnz
loop
mov
sub
iret
push
mov
lock
loopne
mov
cld
push
push
clc
in
add
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
rolb
add
or
add
ja
stc
xchg
insb
mov
xchg
sahf
lret
fwait
lea
cltd
das
xorl
push
fldenv
sbb
cmp
jecxz
xlat
fwait
outsb
mov
sahf
inc
shll
clc
mov
xchg
loop
or
enter
dec
sti
out
ficomps
xchg
xchg
push
sarb
into
jb
add
pop
lahf
pusha
fimuls
inc
pushl
cmp
cmp
stc
hlt
test
sbb
cs
push
in
cmp
std
movsl
sbb
insl
and
sahf
xchg
stos
xlat
lock
in
xchg
mov
imul
cs
dec
inc
aad
rcr
je
jae
pusha
mov
push
xchg
scas
push
mov
fldcw
dec
ss
mov
insl
imulb
xchg
add
jmp
gs
leave
out
sub
daa
loopne
dec
mov
fmul
gs
push
dec
andl
mov
xchg
bound
xchg
out
dec
in
loope
add
jno
imul
xor
cmp
ljmp
xor
es
adc
dec
out
movsl
xlat
les
enter
sub
lahf
out
mov
enter
fs
push
aam
aaa
sbb
jmp
xchg
jmp
sub
add
ljmp
enter
arpl
cmp
fisttpll
dec
pop
or
xchg
movsb
sub
xchg
arpl
icebp
pop
push
leave
popa
jp
les
lds
fidivl
les
inc
add
das
into
fidivrl
xchg
push
fwait
jecxz
sub
mov
lock
jmp
jge
out
mov
aam
xor
mov
lahf
js
das
ja
shlb
xor
dec
push
repz
test
repz
or
push
jp
pushf
jae
andb
shrb
lock
lock
xchg
loopne
mov
xlat
sbb
pop
dec
dec
repnz
push
add
out
lock
lret
fnstcw
push
and
pop
xchg
inc
arpl
and
jbe
das
sahf
jnp
push
lahf
mov
inc
in
add
pushf
xor
jle
push
popa
fmull
repnz
fdivrp
sbb
inc
insl
adc
xchg
jnp
mov
pop
repnz
dec
xor
movsl
xchg
movl
add
fcoms
addr16
dec
loope
stos
das
push
adc
mov
xchg
xchg
lea
vmread
leave
inc
inc
add
pop
sub
sbb
frstor
cmpsl
cmp
cmp
sub
inc
push
je
std
xor
mov
int3
and
push
or
movsb
fdivrs
pop
popf
jns
lcall
dec
inc
mov
jecxz
aad
sti
shl
mov
ret
test
mov
sbb
xchg
push
shrb
in
mov
push
add
jle
in
test
subl
clc
je
mov
loopne
mov
mov
scas
inc
filds
lahf
test
repz
or
data16
or
sbb
mov
and
out
cmpsb
sarl
inc
stos
int
inc
out
xor
adc
lahf
fwait
repz
or
or
inc
int
ja
jle
rolb
je
pop
negl
push
jmp
push
xchg
xchg
das
arpl
loopne
pop
or
and
and
inc
mov
adc
cmpl
xchg
add
inc
add
mov
and
mov
cs
test
mov
xor
fnsave
push
dec
mov
mov
adc
inc
sub
shll
lds
popf
xor
insb
push
lcall
mov
mov
jno
jle
cmp
xchg
stc
xor
adc
les
and
mov
mov
xchg
jmp
dec
add
jle
jbe
movsl
mov
pop
mov
sub
and
jnp
lcall
mov
lods
adc
or
dec
xchg
inc
mov
xchg
push
insb
ljmp
fidivrs
dec
movsl
mov
sub
outsl
adc
add
cmp
out
out
sbb
or
xor
loop
add
adc
dec
sahf
popf
cmpsl
lahf
xchg
pop
dec
fmuls
je
lcall
stos
mov
sahf
inc
lds
ret
push
cmp
fldt
dec
inc
sub
jb
push
out
mov
clc
jge
shrl
aam
dec
or
ljmp
fcomps
sub
into
fimuls
mov
jb
or
or
add
adc
fmull
inc
insb
xchg
aas
notb
jp
les
pop
pusha
movsb
mov
ret
les
mov
cmpsl
iret
imul
je
repnz
jg
xchg
push
lods
stos
lods
mov
in
int
int
test
outsl
and
push
sbb
test
mov
stc
add
inc
cmp
ljmp
mov
fisttps
adc
mov
call
les
mov
roll
cmpb
lcall
mov
xchg
sbb
mov
sahf
adc
loopne
aad
fdivr
xor
cmp
lea
xchg
dec
loope
addr16
or
lret
push
rcrl
mov
scas
push
lret
fbld
inc
add
xor
adc
daa
imul
or
sti
jne
jbe
mov
xchg
push
cli
rcrl
repz
adc
test
xchg
pop
mov
je
jmp
pop
inc
push
popf
xor
mov
lods
mov
xchg
out
xor
xchg
stos
cli
aaa
sub
push
xchg
xor
push
iret
out
out
pop
dec
ljmp
add
lcall
sbb
mov
push
pop
bound
cli
lcall
jecxz
sub
add
in
sub
cli
rcr
mov
shrb
mov
mov
dec
in
pushf
mov
decb
jge
repz
cmpsb
dec
sub
shld
sarl
add
aas
and
jno
xor
xchg
xchg
addb
inc
lahf
mov
js
cs
jmp
ds
into
and
add
jbe
or
xchg
out
jle
mov
lds
xchg
subl
data16
cmp
movsb
fisubs
in
pop
int3
pop
inc
cmp
je
jo
int3
ds
inc
notl
mov
sub
fistl
lods
mov
int3
int
add
icebp
loopne
idivl
xchg
scas
and
test
or
outsb
xor
ss
outsl
mov
into
cmp
mov
in
fiaddl
push
loopne
int3
test
into
loopne
nop
or
ja
daa
insb
dec
int3
push
xchg
pop
out
pusha
or
out
mov
les
cs
pop
mov
enter
mov
mov
das
aas
decb
adc
and
adc
lods
sbb
jno
mov
jb
sub
ds
test
stos
add
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
xlat
add
add
add
rcr
sub
xchg
xchg
pop
jno
leave
clc
fadd
cmpb
xlat
aad
inc
add
mov
in
arpl
push
xchg
stos
aas
mov
inc
pop
mov
repz
mov
aas
mov
mov
lock
mov
stos
push
jp
or
dec
lods
and
dec
je
cmp
hlt
jo
push
adc
adc
push
loop
ljmp
adc
daa
repnz
sahf
or
adc
push
cmpsb
xchg
push
les
and
incl
shrb
xorl
and
lret
add
out
or
aad
jg
jle
pop
inc
testb
or
mov
pop
enter
cli
pop
pop
fwait
or
dec
push
je
popa
enter
into
mov
jnp
jmp
inc
mov
imul
idivl
pop
test
mov
jle
sub
mov
inc
and
cmp
gs
pop
dec
pop
scas
cli
jne
mov
mov
into
xor
insb
sbb
inc
dec
das
and
das
jp
sahf
sbb
add
push
cmp
pop
jge
mov
sahf
xor
repnz
sbb
cmp
dec
jno
pop
arpl
test
insb
mov
test
mov
sub
icebp
lock
adc
or
popa
add
ror
js
xchg
dec
xchg
rcrl
adc
stos
dec
push
cmp
test
call
jb
sbbl
pop
xlat
arpl
loop
push
sub
add
sbb
dec
ret
jp
loopw
loopne
or
fidivrl
mov
pop
jns
test
movsb
out
dec
lods
pop
ret
push
rcr
fwait
scas
ret
inc
repnz
xor
jne
jl
push
inc
les
orb
test
dec
xlat
fstl
mov
jmp
mov
push
rclb
pop
pop
and
popa
pop
outsb
inc
das
or
outsb
mov
add
mov
test
cld
in
fs
pushf
lock
popf
popf
lock
int
sbb
cmp
dec
rclb
jle
into
xlat
nop
daa
es
jo
push
cld
clc
pop
in
les
decb
push
fildl
inc
mov
sub
pop
push
inc
lods
mov
cmp
jg
pop
pushf
into
test
xchg
insb
aas
faddl
rclb
push
inc
mov
and
ficoml
ja
out
or
lea
cwtl
lahf
arpl
in
out
cmpsl
aam
ja
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
add
add
add
add
xchg
out
sahf
sub
pushf
fsts
push
out
notb
mov
sub
sarl
loop
pop
addr16
xchg
sub
rcrb
in
lds
sbb
out
aaa
fstps
jae
pop
mov
mov
push
test
mov
jae
jae
pop
adc
scas
mov
lods
or
lods
mov
xor
dec
int
mov
jne
inc
arpl
push
nop
cwtl
movsl
add
clc
xchg
pop
pop
sub
pop
mov
movsl
fdivr
and
lcall
cmp
pushl
ficoml
outsb
jp
pop
sti
fcomps
mov
fistpl
adc
push
jno
mov
jnp
jno
fwait
sbb
dec
inc
arpl
pop
pushf
pop
fnsave
add
mov
push
inc
shlb
push
push
das
rcrb
mov
lea
fdivrs
sahf
or
shrb
cmc
add
dec
push
std
mov
decl
test
cwtl
into
fs
icebp
sti
arpl
xor
xorb
call
je
out
lcall
ret
add
popf
add
add
outsl
jp
popf
cmpsb
and
pop
inc
out
adc
int3
mov
dec
xor
addl
inc
imul
es
ss
jl
mov
fcmovu
outsl
dec
cli
push
enter
sub
daa
and
mov
cmpsl
jmp
dec
aad
jg
mov
insl
add
xor
mov
jb
out
jne
ss
pop
mov
jmp
lods
repnz
adc
rorb
inc
ss
sahf
sar
sub
mov
sbbb
fbld
arpl
test
mov
jg
fwait
dec
lret
popa
pushf
pusha
in
ds
out
out
add
sahf
fbld
std
lcall
ffree
inc
push
movsb
loopne
pop
push
cmovge
ss
add
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
popl
add
ss
add
in
pushf
lret
and
cmp
stc
loopne
jb
negl
add
lret
add
pop
int
pop
push
movsb
cmpsb
jecxz
add
lock
addl
dec
cmp
rolb
xchg
mov
xor
frstor
cwtl
popa
sub
mov
bound
jg
cmp
shrl
stos
jle
xchg
push
dec
cmpb
mov
ret
sub
jecxz
fildl
mov
fsubr
pop
popa
add
sbb
dec
test
aaa
dec
arpl
add
ds
cmp
notl
es
addr16
lret
ljmp
sub
mov
cmp
push
cmp
fsubrs
js
push
push
push
lcall
in
fwait
out
ljmp
mov
sub
out
mov
arpl
or
xchg
mov
mov
pop
dec
gs
mov
outsb
rol
push
inc
add
loope,pn
dec
in
stos
adc
stos
sbb
inc
loop
sbb
icebp
add
lcall
iret
out
and
push
sbb
jle
push
stos
scas
insb
fadds
xor
jb
pop
fcomip
test
xchg
sti
mov
mov
cwtl
ret
push
int3
out
adc
push
inc
inc
into
pushf
pop
pop
add
sbb
in
test
sub
adc
adc
pop
adc
iret
mov
pop
push
pop
rcll
fiaddl
push
icebp
test
xchg
push
ds
jnp
jecxz
push
les
ss
fiaddl
sahf
adc
xchg
mov
popa
adc
leave
sub
shlb
push
ret
pushf
icebp
jecxz
push
add
pop
int
je
into
xchg
jns
fimull
mov
gs
aaa
cmp
push
add
sbb
gs
sub
loop
neg
jg
lods
gs
in
xor
mov
es
and
mov
mov
push
or
aad
lcall
xor
or
insl
cmp
stos
inc
rcrl
sbb
or
mov
cltd
push
adc
cli
xor
scas
xchg
les
push
mov
fmull
lcall
pusha
mov
and
int3
ja
sarl
sbb
push
and
mov
jae
fsub
jns
add
dec
cwtl
imul
lcall
or
pop
in
cmpsb
or
xchg
pop
xchg
sbb
popf
mov
daa
sahf
xor
xorb
filds
pusha
xor
xor
or
cmpsl
rclb
mov
adc
push
mov
mov
pop
mov
pop
out
add
xor
cli
mov
pop
fiaddl
xor
cmp
lcall
dec
iret
mov
xor
xlat
jle
cmc
pop
add
jecxz
xchg
mov
int3
jecxz
jg
mov
sbb
cmp
push
pop
sbb
movsl
cmc
scas
insb
mov
repz
cld
cmpsl
push
push
adcb
xchg
daa
aas
push
mov
adc
xor
mov
xor
cld
jns
in
xor
jmp
adc
sti
xchg
fdivrp
js
outsl
idiv
lea
push
cmp
mov
dec
xchg
repz
cmc
xchg
inc
fs
rcr
andb
loopne
jbe
fxch
sahf
out
push
fdiv
leave
jg
push
push
call
xchg
pusha
es
mov
data16
jecxz
test
jo
dec
push
gs
push
in
push
sbb
mov
push
cwtl
mov
add
pop
or
and
stos
movsl
hlt
ret
fisubrl
scas
das
push
pusha
push
inc
sahf
jg
dec
xchg
ret
call
enter
fisubrl
push
jno
xor
sub
mov
mov
stos
repnz
lds
mov
cmpsb
jle
sarl
rol
lea
xlat
rorl
add
push
je
xchg
xchg
hlt
loopne
sbb
sub
cmp
sbb
fcomps
iret
pop
cmp
in
xor
xchg
fwait
out
push
sub
xchg
popf
cmp
mov
lcall
jmp
scas
out
lock
out
push
jnp
dec
xor
xchg
mov
call
sbbb
mov
stos
cmc
mov
mov
popw
xor
lret
orb
adc
std
imul
addr16
andl
push
ja
xor
pop
mov
and
clc
stos
mov
and
or
enter
lret
jl
inc
mov
xor
push
pop
lret
mov
mov
pop
jecxz
xchg
sub
arpl
add
add
aaa
xchg
int
xchg
out
mov
loope
outsl
cmpsl
fwait
inc
fucom
and
out
lock
lods
or
xor
xor
dec
in
pop
pop
sub
pop
mov
cs
cli
pusha
mov
mov
les
jbe
xor
repz
jle
or
mov
pusha
std
xorb
setge
and
ret
and
xor
pop
sub
inc
fdivs
out
aad
fsub
mov
push
lcall
cmp
mov
xlat
dec
cwtl
mov
cmp
test
sarl
sub
je
daa
out
decl
andl
fs
cwtl
mov
out
and
dec
das
cwtl
pop
arpl
data16
pop
rcl
mov
loop
repnz
stc
stos
idivl
push
sbb
dec
mov
pusha
mov
mov
mov
fstpt
mov
inc
test
mov
xchg
and
cmp
into
jae
ret
jbe
ja
push
test
cwtl
mov
bound
jl
add
iret
push
repz
clc
add
or
xchg
je
aad
in
mov
scas
rcr
stos
enter
lcall
repz
pavgw
je
push
inc
stc
popf
mov
sub
mov
shlb
sbb
mov
dec
mov
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
test
add
je
add
xchg
xor
and
push
pop
loop
jb
cmp
out
mov
insb
or
xchg
push
cmp
mov
xchg
sti
and
mov
ljmp
dec
jmp
addr16
sbb
stos
test
or
or
rorb
adc
fsubrl
mov
dec
je
lods
pop
mov
xchg
add
xchg
lds
clc
sbb
xor
mov
aas
or
xor
outsb
test
jns
sbb
add
fiaddl
cmp
insl
inc
pushf
lods
decb
mov
out
sbb
stos
sar
jo
out
call
push
inc
out
and
dec
or
adc
inc
in
lahf
mov
or
jns
lret
fildll
js
dec
call
imul
stc
adcb
hlt
adc
repz
add
into
outsb
and
sbb
gs
ret
pop
mov
push
cmp
inc
fldenv
pop
daa
test
fimull
push
jo
cmc
add
ret
adc
aam
adc
imulb
insl
mov
pop
mov
aad
int
cltd
xorl
jg
fldz
pop
inc
jno
inc
cwtl
mov
pusha
fbld
loope
adc
fstpt
jge
shl
mov
loope
shrl
lock
cli
add
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
add
and
add
outsb
jle
push
and
mov
jmp
fistl
inc
and
inc
pop
cld
jbe
repz
test
pop
lods
and
leave
sarb
cmp
sub
mov
pop
xor
sub
rolb
ret
jo
or
lods
ljmp
rorl
add
mov
cs
dec
push
out
jbe
repz
sbb
insl
out
add
sub
fbstp
pusha
loop
test
icebp
and
mov
jge
loope
fbstp
hlt
je
cmp
jo
dec
cwtl
jno
je
fcompl
dec
subb
adc
insl
push
hlt
out
inc
ror
lock
inc
xchg
jecxz
sub
notb
add
inc
mov
int3
pop
xor
imul
add
leave
insl
mov
mov
in
pop
call
cmc
xchg
test
push
or
mov
jb
ss
outsl
aaa
xchg
lods
out
inc
aas
sub
push
cld
push
cmp
jecxz
ret
jno
or
mov
leave
lods
xlat
repz
mov
push
mov
idiv
movsb
mov
cld
jo
hlt
cmp
mov
dec
lret
push
xchg
dec
aam
cmp
or
mov
cs
dec
das
cmp
fxtract
lods
dec
add
cmpsl
shrb
fsubl
inc
mov
mov
out
cmpsl
mov
je
add
mov
popa
scas
push
push
xchg
arpl
jnp
and
call
out
jecxz
hlt
fcompl
mov
jne
fisubs
sub
jmp
je
adc
rclb
jnp
pop
std
add
pop
xchg
loopne
jno,pt
or
push
stos
dec
andb
rclb
lret
sbb
test
push
mov
add
dec
in
in
shrb
and
cmp
lcall
dec
arpl
aaa
les
lahf
jecxz
stos
push
inc
push
mov
lods
or
popa
and
jae
push
test
sbb
pusha
pop
pop
in
sahf
enter
xchg
rorb
add
mov
or
sbb
push
mov
and
xor
lock
rorb
adc
lods
ja
xchg
xor
jl
push
lds
js
test
adcb
imul
cmp
push
test
mov
mov
pusha
inc
mov
inc
test
add
imull
cmp
rcrl
inc
out
inc
and
repz
mov
lds
cmp
repz
jb
popf
mull
js
shlb
movsb
frstor
int
fnsave
pop
and
lods
mov
daa
xchg
and
mov
xor
xchg
xchg
inc
popf
or
jg
jnp
clc
add
ja
lods
mov
push
push
xor
popa
lds
lods
pop
gs
cltd
pop
mov
clc
dec
mov
mov
lock
cmp
push
hlt
jle
sub
dec
inc
cli
sbb
xchg
jl
sbb
and
dec
xor
stos
imul
fcomps
scas
pop
add
pop
push
or
repz
dec
std
movsl
lock
adc
push
clc
and
or
leave
leave
outsb
fmull
add
data16
inc
das
dec
and
fs
iret
xor
push
and
sub
loopne
incb
popa
pop
into
pop
xor
inc
icebp
jmp
idivl
std
and
cmp
stos
adc
arpl
pop
dec
and
stc
sbb
jge
int3
push
shrl
jno
sbb
push
js
cltd
mov
ret
jmp
mov
push
sub
mov
in
jo
aam
sub
jecxz
jl
jmp
insl
and
jb
jle
sbb
sbb
shlb
and
push
sub
int
popf
ret
xor
lahf
jno
and
mov
jne
jno
mov
xlat
scas
xchg
and
ds
push
push
xchg
and
jmp
rolb
mov
scas
popf
mov
cmp
call
je
cmp
pop
ret
loope
push
fs
mov
or
push
xchg
in
fadds
xchg
cmp
jae
xchg
pusha
in
push
js
or
dec
pushf
testb
ret
pop
xchg
xchg
push
sbb
dec
popf
shl
push
sub
ficomps
add
outsl
add
adc
or
adc
or
das
xor
arpl
inc
fcoml
xor
mov
push
inc
push
push
pop
inc
lahf
mov
dec
ja
pop
sub
or
xchg
dec
psllq
xchg
leave
hlt
lods
scas
xor
sub
scas
fimuls
in
add
pop
add
daa
not
inc
ret
popf
xchg
jbe
lcall
ret
xor
pop
add
pop
cld
mov
xchg
inc
stc
bound
or
pslld
cmpsl
push
lock
scas
outsl
and
dec
jae
repz
xorl
sbb
xor
arpl
lea
sub
aam
dec
int3
das
addr16
inc
in
mov
test
xchg
and
push
mov
add
adc
jle
xor
and
pop
cmpsb
icebp
dec
in
mov
jno
test
jae
inc
inc
cmpb
test
aad
nop
sbb
rcrl
push
scas
popa
inc
lds
pop
xchg
fcmovb
or
into
sub
fiadds
fbld
in
bt
dec
mov
fstpl
or
fildll
add
clc
popf
fldt
cli
jae
lret
cmpsl
mulb
add
xchg
mov
lock
add
ret
out
cmc
sbb
in
xchg
lods
mov
outsl
cs
jmp
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
add
add
add
outsl
dec
add
imul
out
js
js
jne
inc
loope
mov
jnp
push
lods
outsb
cmpsl
xchg
aaa
imul
inc
not
outsb
push
fucomp
inc
je
jbe
and
mov
jo
cmpb
enter
sbb
in
aad
cmp
adc
fists
iret
adc
push
xchg
arpl
jbe
dec
pusha
mov
or
cmp
mov
lods
add
mov
add
xlat
cld
push
adc
xor
shlb
lret
in
inc
mov
or
lods
mov
mov
lcall
ljmp
xor
and
out
cmc
pop
cwtl
les
dec
cli
push
movsl
call
out
xchg
inc
pop
movsl
cmp
xchg
mov
inc
icebp
int3
cwtl
mov
adc
movsl
mov
and
jo
cmpsl
mov
movsb
sbb
pushf
lods
push
sub
aas
cmp
add
pop
addr16
ljmp
ss
inc
clc
inc
push
sahf
test
or
jg
adc
arpl
popf
hlt
push
dec
xchg
sub
popa
out
std
loope
dec
test
cmp
test
insb
adc
daa
pop
icebp
test
rcr
outsb
test
call
push
jb
incl
push
movsl
into
incb
jae
sti
mov
divb
push
adc
pop
or
scas
subb
adc
mov
adc
mul
ret
nop
test
popf
push
hlt
sbb
nop
dec
sub
pushf
push
jmp
push
inc
popa
xchg
mov
fistl
nop
jne
loop
mov
ret
adc
movb
sbb
mov
movsl
scas
jae
es
dec
out
jb
inc
jne
mov
and
dec
fmull
jbe
add
pop
mov
mov
and
insl
aas
mov
fdivrl
pop
aad
mov
adc
loop
sub
dec
dec
cmpsb
sti
imul
sub
mov
insb
gs
jmp
sbb
ja
mov
adc
ds
adc
popf
inc
cmpb
shll
fnstsw
into
sti
test
mov
fs
inc
xchg
popf
lods
js
jne
jb
push
adc
xchg
idivb
push
dec
pop
adc
cmp
push
shll
jge
sbb
sti
mov
xchg
push
mov
fdiv
sbb
pop
lds
mov
dec
fxch
inc
es
leave
and
jno
shrl
push
cmp
negl
test
insl
jg
cltd
sbb
push
rcrl
cmp
jae
pop
cmc
mov
xchg
push
inc
pop
and
loop
jle
mov
sbb
cmpl
mov
adc
aaa
mov
aaa
fs
fst
clc
sbb
sub
mov
jnp
ds
iret
jbe
sti
adc
push
js
push
in
leave
pop
stc
sbb
pop
pop
out
adc
scas
cmp
sbb
pushl
sub
or
add
inc
outsl
inc
insl
arpl
mov
xor
sub
lret
in
stc
pop
jbe
rorb
and
xchg
outsl
push
and
test
scas
loopne
dec
outsb
insb
aam
jno
inc
clc
pop
push
cmc
mov
xor
xchg
cmc
lcall
push
xchg
push
adc
xchg
sub
popf
mov
std
mov
stc
xchg
test
sbb
bound
add
jge
and
hlt
push
leave
icebp
sar
push
lret
pusha
xor
out
fistpll
jmp
fidivl
xor
outsb
inc
test
fisubrs
adc
mov
mov
rcrb
pusha
les
sub
in
jl
test
dec
test
push
push
add
cli
jne
dec
xor
or
xor
jmp
sahf
jp
jle
leave
and
aaa
loope
push
outsb
rolb
jecxz
out
dec
push
jmp
sub
pop
dec
add
jb
xor
jns
jb
xor
jns
jb
xor
add
stos
push
add
cmp
pop
popl
lock
pop
cmovp
dec
fdivrl
insl
hlt
inc
test
inc
pop
mov
insl
imul
pop
inc
stc
adc
lcall
dec
aas
lds
popa
int
push
adc
das
lret
xor
in
repnz
rclb
push
push
mov
lods
rol
gs
dec
or
imull
mov
mov
outsl
hlt
add
pop
inc
push
jmp
mov
daa
pop
cmpsl
stc
sub
jle
pop
xchg
pushl
sbbl
es
shlb
rcrl
or
mov
mov
adc
int3
jge
jl
in
sub
aam
call
cmp
inc
add
and
xor
mov
cmp
xchg
aaa
shlb
sbb
pop
xor
and
push
shrl
repnz
outsb
clc
fmull
or
pop
cmp
in
iret
dec
sub
test
inc
jmp
sbb
xchg
aas
hlt
xor
mov
adc
loop
fwait
jp
pop
xchg
xchg
stos
mov
out
or
add
xchg
pop
pop
pop
or
push
ja
sbb
and
sbbb
add
pop
shll
jmp
cmpsl
xor
pop
outsb
movsb
pushf
loop
inc
rcrb
xor
adc
xor
adc
mov
out
lret
push
add
sahf
das
mov
and
or
jecxz
or
incb
jmp
and
sub
mov
jl
push
mov
lock
inc
fimull
mov
sub
dec
mov
sub
outsl
add
sub
mov
rcrl
mov
sub
stc
xchg
int
mov
outsb
fiadds
adc
les
shrb
je
mov
pop
lock
sarb
mov
cmp
mov
imul
pop
vcvtsd2ss
jg
sbb
mov
addr16
pop
sub
jb
add
aad
xor
andl
in
xchg
es
inc
aam
pop
stc
push
inc
cld
push
and
mov
loope
mov
das
cmpsb
jo
les
sub
dec
xor
jo
pop
mov
xchg
jecxz
inc
cmc
jbe
insb
jle
call
imul
leave
mov
push
cmp
fdivr
addl
cmpsl
mov
sti
cmp
cmp
daa
dec
and
mov
loope
outsl
shrl
imul
or
mov
shrb
in
neg
in
dec
inc
sbb
bound
cmp
sbb
or
arpl
cmc
inc
push
testb
jnp
xor
mov
out
int
push
arpl
dec
push
hlt
inc
mov
jne
cltd
xor
push
out
sahf
sub
mov
add
jge
pop
push
mov
pcmpgtw
in
fistpll
insb
mov
stos
mov
addr16
sbb
mov
xchg
push
pop
loop
jno
pop
jns
stos
daa
jb
mov
pop
pushf
sub
push
push
sbb
sub
pop
xchg
popa
test
mov
imul
adcb
xor
pop
xchg
out
sub
loop
mov
mov
icebp
mov
adc
fmull
inc
div
push
jae
and
jno
add
repnz
mov
mov
xchg
inc
push
pop
add
push
adc
cmpsb
fisttpll
cltd
loope
dec
xchg
pop
xchg
push
out
add
jl
in
testb
iret
mov
pop
inc
xor
popa
lret
jecxz
mov
cmc
mov
or
cltd
ljmp
xor
std
mov
in
in
push
inc
clc
cmovo
popa
outsl
addr16
mov
outsb
push
iret
cmc
push
out
call
adc
xchg
fimuls
or
ja
mov
into
insb
mov
add
out
mov
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
add
add
add
mov
in
mov
repz
aam
cmpsl
rcrb
or
out
push
and
push
xchg
cmp
or
std
mov
mov
movsl
addr16
mov
mov
call
shr
push
pop
sub
sbb
xchg
test
or
and
add
inc
fmul
test
jmp
pop
xchg
jg
shl
mov
out
adc
cmp
adc
movsl
xor
mov
mov
imul
aam
iret
lret
cmc
pop
inc
push
pop
sub
or
jnp
sbb
popf
xchg
xor
in
ror
adc
roll
pop
outsb
icebp
stc
cmp
aas
and
pop
xchg
mov
cmp
test
pop
cwtl
jg
adc
out
mov
push
mov
cmp
adc
lods
inc
sbb
pop
ret
ret
sti
jg
imul
inc
cwtl
and
mov
jnp
sbb
adc
das
jb
ret
mov
xor
or
andb
lea
jo
cmp
sub
rorl
sahf
fcomp
mov
and
sub
cwtl
pushf
xchg
jb
in
jnp
jae
mov
pop
cs
loopne
gs
in
adc
outsl
sbb
daa
mov
pop
outsl
int3
pop
mov
int3
adc
enter
jp
loop
inc
jmp
xor
popf
sbb
push
rcrl
or
cmpsl
xor
loopne
mov
dec
cmpsl
arpl
lods
xchg
push
fldl
pop
lock
xor
subb
movsl
jnp
cmp
sub
std
lock
pop
hlt
push
mulb
xor
push
inc
jae
cs
mov
push
sti
bound
fldt
push
jl
add
add
xor
add
fcompl
ret
mov
aaa
cld
lcall
push
nop
mov
and
sub
jg
mov
into
mov
mov
outsb
jge
daa
aam
je
fdivrs
cmp
das
xchg
cli
and
xor
insb
outsb
rcrb
out
insb
shll
mov
into
or
mov
sub
stc
ljmp
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
add
add
repnz
cmp
dec
inc
in
or
xchg
js
jns
clc
aaa
shrb
push
fnstcw
mov
orl
pop
mov
outsb
insl
cltd
out
scas
xchg
fcompl
push
dec
mov
jno
lahf
or
mov
addb
nop
lea
add
scas
jo
mov
enter
js
mov
cmpsl
out
push
shl
dec
cmpsl
fistl
sahf
jl
popf
iret
cs
in
push
mov
mov
or
sar
mov
and
push
dec
lea
xor
xchg
in
aaa
inc
lcall
mov
adc
cltd
mov
lods
pop
inc
test
movsb
in
les
push
mov
popa
nop
movsl
mov
je
out
int
push
fwait
mov
cmpsb
push
scas
in
mov
imul
repz
jns
or
add
inc
fdivrp
test
out
mov
add
sbb
sbb
add
pop
mov
or
cmp
xchg
mov
xchg
lods
or
cmp
scas
pop
push
test
jno
add
dec
fdivp
add
adc
dec
mov
adc
inc
push
jno
popf
testb
in
repz
nop
scas
and
cmp
xchg
aad
pop
je
fisubrl
jp
jbe
in
mov
repz
dec
lock
shlb
cmp
data16
test
sahf
and
xor
cwtl
adc
outsl
data16
sub
into
mov
sub
pop
cwtl
into
adc
mov
fbstp
ror
sub
xor
gs
pop
cmp
fisubs
xlat
mov
pop
and
mov
popf
dec
in
xchg
lcall
test
sub
mov
mov
icebp
sbb
flds
lds
xor
pop
push
loope
js
mov
mov
or
shlb
mov
and
ss
mov
inc
mov
add
cmpsl
jle
les
imulb
adc
insb
jl
rolb
xor
sbb
and
in
test
and
pop
mov
jno
pop
jl
das
push
mov
ret
scas
icebp
xchg
sub
xchg
sub
inc
ja
add
shll
std
xchg
loop
mov
fcmovnu
aad
ss
iret
mov
ljmp
xchg
test
inc
adcl
sti
sub
loope
cmc
not
into
jo
push
sbb
je
or
sub
mov
fbld
and
ficoms
rclb
adc
xlat
xor
pop
test
cmp
cs
mov
ja
sbb
push
adc
and
mov
push
fdivrl
divb
fildl
push
xor
push
movups
es
lret
call
pop
ds
xchg
inc
subl
insl
enter
aad
push
and
mov
cmp
lds
mov
or
or
fwait
hlt
cmpsl
xchg
insl
mov
push
int
loope
push
mov
in
and
or
pop
negb
cli
cmp
xchg
cli
hlt
cmp
xor
ret
loop
mov
cmp
sbb
repz
cmp
jp
dec
sbb
push
xchg
add
leave
adc
in
movsl
sub
aam
push
repz
add
les
andb
cltd
xchg
repnz
lods
mov
or
and
dec
xchg
push
pushf
bound
push
and
aaa
xchg
std
or
push
xchg
pop
test
and
test
outsl
mov
xor
lret
push
dec
pop
shrl
enter
jno
in
int
sub
xchg
mov
xchg
popf
xor
movsb
xchg
cli
das
mov
lods
sti
xchg
xchg
sbb
and
and
clc
bnd
sbb
xlat
mov
mov
adc
sub
int
or
mov
addr16
lret
pop
repz
aam
xchg
mov
ficoml
jle
xchg
jl
jl
fimuls
daa
ja
imul
aaa
cmp
in
jl
sbb
or
mov
out
mov
mov
jge
out
clc
xchg
pop
xchg
icebp
rorb
mov
sbb
or
mov
ficomps
and
mov
or
jg
or
cltd
ds
insl
pushl
mov
test
repz
ja
jecxz
into
pop
repnz
xchg
mov
ficomps
int
jnp
lds
dec
mov
and
mov
mov
mov
imul
add
mov
fidivrl
and
lret
push
mov
pushf
xor
lods
push
ljmp
lods
cmp
pop
cmpps
jb
aam
add
push
jle
cmpsl
out
lret
repz
psrlw
shll
imul
sbb
in
out
pop
cmp
sahf
ss
and
int3
shl
rolb
cmc
int3
imul
int3
mov
mov
clc
dec
dec
or
in
fmul
adc
adc
pop
and
cwtl
pop
pop
dec
pop
add
cmp
jns
inc
xchg
cmp
inc
mov
jne
add
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
sahf
push
add
testl
mov
push
push
imul
adc
jo
pop
lret
jecxz
in
aam
enter
cmpsb
sub
stos
mov
mov
js
adc
daa
jmp
stos
mul
sub
loopne
lcall
scas
testl
loop
or
sbb
outsb
dec
mov
inc
mov
mov
rcll
nop
mov
xchg
push
mov
int
test
andb
movsb
mov
xor
sub
jle
daa
or
xor
xor
fisttpl
out
xchg
test
rcrl
dec
fildl
int3
mov
add
fsts
mov
mov
jnp
movsl
sub
xchg
hlt
mov
rol
mov
cwtl
test
imul
push
xor
mov
test
int3
out
lods
cmp
sahf
mov
push
cwtl
mov
int3
and
jl
jo
in
out
pop
push
jnp
cmp
inc
iret
xchg
sbb
inc
nop
lods
test
and
lods
mov
jb
loope
scas
test
fisubs
sbb
int3
loopne
or
and
sbb
sahf
jno
dec
or
fsubl
and
add
mov
ret
pop
pop
in
stos
push
outsb
sub
pop
add
mov
jnp
mov
push
or
push
mov
imul
out
lea
pusha
stos
push
outsl
test
knotb
popf
sbb
int3
add
aas
pop
sub
and
pop
dec
call
out
cmp
xchg
test
xlat
loope
inc
int
adc
fadds
fwait
pop
sbb
mov
cmp
pop
xchg
cwtl
mov
bound
int
xchg
adc
lret
and
mov
pop
xchg
mov
imul
add
daa
data16
jmp
jle
inc
mov
leave
and
lret
in
into
lds
sbb
xor
push
or
imul
iret
xchg
and
insl
loope
popf
es
sub
js
loopne
jecxz
rolb
lods
jnp
jbe
addr16
and
sub
jne
rcr
nop
add
pop
add
mov
addb
xchg
push
or
push
dec
jbe
retw
mov
mov
pop
dec
daa
fimuls
js
mov
mov
mov
movsb
imul
js
sub
pop
adc
int3
sub
xlat
sub
mov
add
lds
add
cli
loope
loop
mov
test
dec
lret
cmp
adc
xchg
andl
pop
cmp
fdivr
inc
rorl
cmp
rclb
pop
movsl
pop
andb
loopne
dec
fistpl
sub
mov
mov
push
sub
jns
cmp
sbb
dec
xchg
mov
push
add
inc
push
cmp
and
pop
fcomip
cmpb
jp
in
sbb
lahf
gs
adc
movsl
es
out
add
pop
loopne
jge
testb
pop
ljmp
xor
xchg
xchg
clc
je
lahf
lds
stc
dec
adc
sahf
fcmovnb
aam
outsl
sbb
daa
decl
loopne
mov
test
adc
or
in
sub
xchg
xor
mov
lock
mov
out
fldcw
adc
sub
add
sbb
cmp
mov
jnp
push
sub
mov
add
aas
faddl
mov
add
cmp
adc
add
movsb
fcomp
hlt
mov
sti
pop
push
sbb
in
icebp
js
push
adc
loope
jne
outsb
or
in
adc
cmpb
fcmovb
mov
cmp
adc
aad
inc
je
jp
mov
sti
lea
add
sahf
fsubrl
fisttps
inc
mov
inc
dec
ret
jecxz
pop
cmp
and
imul
and
xchg
mov
testl
cs
lret
outsl
adc
dec
pop
test
mov
dec
and
addr16
lods
fisttpll
sub
inc
pop
shlb
inc
cmove
sub
jg
cmp
das
pushf
cs
arpl
pop
test
sub
inc
mov
data16
roll
negl
push
lock
push
adc
out
mov
mov
mov
test
mov
or
arpl
icebp
inc
mull
pop
sbbl
sahf
jl
in
sbb
lret
shll
mov
jb
std
adc
negb
lea
mov
daa
inc
std
test
jecxz
adc
stos
mov
push
inc
stos
push
aam
movsl
and
repnz
adc
ret
cmpsb
imul
add
in
xchg
addb
dec
pop
sub
movsb
insl
adc
xchg
ss
cwtl
cmp
call
movsb
push
mov
lcall
and
data16
jb
inc
int
sbb
push
dec
pop
dec
jecxz
mov
inc
nop
cmpsb
pop
and
stos
ja
mov
mov
aas
lock
xchg
repz
jo
or
dec
sti
pop
mov
ja
mov
jo
out
jg
add
cltd
xor
jo
adc
dec
aam
mov
cmpsb
ljmp
subl
hlt
lahf
add
test
pop
testl
cmp
inc
pop
lahf
ret
sub
loop
int3
or
xchg
jl
mov
mov
imul
pop
sbb
subb
loopne
xchg
loop
repz
ljmp
cwtl
cmp
push
scas
adc
xchg
push
out
mov
loope
mov
sahf
dec
fistl
sub
ss
add
addl
popa
or
mov
sbb
clc
lock
dec
neg
iret
dec
xlat
pop
jmp
es
je
addb
dec
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
pop
add
add
mov
loop
add
cmp
and
movsb
mov
sub
loope
inc
add
pop
sub
test
daa
insb
imul
fimuls
out
push
jmp
lret
out
adc
mov
push
pslld
adc
add
clc
jo
mov
mov
aaa
aam
sbb
cmp
dec
adc
hlt
addr16
out
inc
push
cmp
data16
lcall
ja
outsb
add
mov
outsb
sub
add
incl
push
sarb
loopne
test
and
stc
orb
aaa
dec
cmp
xchg
int3
add
xchg
sbb
pop
mov
adc
rcr
aad
roll
pop
addr16
mov
jecxz
pop
mov
cmpsb
and
inc
xor
push
iret
arpl
push
xchg
jp
adc
dec
jmp
xchg
sub
aas
push
and
insl
ds
inc
rcrl
cld
arpl
icebp
sub
push
add
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
jae
add
je
add
sub
xor
repz
clc
mov
pop
bound
xchg
xchg
add
dec
jp
jmp
xlat
sub
jae
cld
stos
fistpl
sahf
into
incb
mov
test
pop
mov
je
mov
dec
fs
out
and
sarl
mov
jb
jecxz
inc
mov
sub
stos
ja
mov
mull
jg
out
push
movswl
mov
fnstenv
cwtl
adc
rclb
pop
gs
mov
jne
addr16
dec
lahf
push
or
mov
movsb
pop
and
js
sarl
test
lea
nop
mov
leave
and
test
fwait
aaa
and
or
push
sbb
inc
inc
mov
lds
loop
jecxz
shr
lea
shld
pop
xor
lds
xchg
or
in
pop
xor
addr16
dec
push
cltd
adc
push
dec
loopne
nop
hlt
std
fwait
mov
mov
mov
ja
rclb
aas
inc
adc
hlt
scas
xor
outsb
daa
fmul
add
xchg
mov
and
ficoms
mov
cmp
movsb
sbb
jne
ss
imul
dec
negl
and
add
xchg
ja
outsl
xchg
dec
sbb
or
out
mov
cmpl
or
dec
cli
cli
lcall
lahf
jae
add
aam
test
sub
jl
outsb
call
xchg
push
sbb
push
or
push
ret
js
push
dec
cmp
dec
xchg
and
js
pop
xor
mov
mov
push
aas
pop
idiv
push
icebp
xchg
fidivs
aam
clc
pop
dec
mov
adcb
and
ds
notl
jp
mull
fs
inc
fidivrl
fstpl
sbb
jp
inc
pop
hlt
pop
test
xchg
jmp
jb
insl
adc
push
mov
mov
add
or
inc
sub
mov
int
mov
sub
push
xchg
das
icebp
adc
xchg
mov
push
data16
shll
fwait
adc
es
js
fimuls
mov
mov
mov
xchg
cmp
jl
sub
icebp
and
incb
addr16
out
mov
mov
add
test
xor
fwait
shrl
pop
sub
fdivl
int3
sbb
out
adc
inc
jmp
in
lds
out
bound
mov
ds
push
lock
jecxz
out
lcall
jl
adc
jmp
lahf
mov
jg
mov
push
mov
ret
aad
arpl
in
push
sbb
in
push
lcall
sbb
repz
push
data16
or
or
and
dec
lret
push
inc
dec
ret
sbb
push
rorb
pop
fldenv
lods
fiadds
insl
imul
adc
popaw
mov
negl
pop
mov
shl
scas
aas
in
jg
aam
lea
jge
inc
inc
add
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
push
add
add
add
jmp
pushf
or
sti
mov
clc
roll
inc
and
mov
add
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
test
add
aas
push
add
pop
arpl
push
popa
cmp
pop
out
cltd
test
movsl
pop
sub
mov
pop
inc
daa
shrl
les
ret
push
clc
std
insl
loope
dec
dec
adc
sbb
ss
pop
dec
jmp
xor
les
sar
mov
mov
xlat
shlb
pop
mov
out
mov
inc
out
negb
mov
pop
pop
push
mov
fwait
push
rclb
lcall
lcall
mov
popf
out
lods
lret
mov
je
add
add
inc
loop
js
js
jl
sub
jl
outsl
mov
cld
rcrb
jb
cli
jle
cltd
inc
cltd
lock
femms
mov
fs
adc
negb
and
xor
hlt
hlt
gs
jecxz
mov
mov
roll
popf
aam
clc
sbb
into
lods
ds
adc
clc
cmp
or
dec
into
add
lcall
sar
xchg
sub
fcmovne
jno
pop
pop
pop
js
stos
and
mov
cmpsl
aaa
mov
mov
jnp
xorb
xchg
mov
out
out
cmc
sub
adc
xchg
pop
enter
cmp
lret
push
xchg
rcll
hlt
inc
mov
iret
int
add
dec
pop
pusha
ret
cmp
or
ret
movl
pop
xchg
inc
ret
or
or
sti
loop
cli
adc
loop
pop
or
mov
xor
mov
sbb
pop
sub
mov
sbb
dec
xchg
cmp
ljmp
add
xor
add
fstpl
push
int
loop
jb
mov
and
arpl
and
notl
movsl
fucomi
mov
out
lods
lods
call
xchg
fwait
jle
add
cmp
cmp
sbb
cmp
iret
jno
and
outsl
insl
pusha
out
or
hlt
rcl
scas
scas
sbb
mov
add
mov
fwait
and
out
mov
movsb
cmp
push
cmp
aad
dec
ffreep
repz
into
mov
or
xchg
dec
mov
or
inc
inc
jge
or
dec
push
pop
xchg
jmp
addr16
pop
in
inc
or
test
movsb
fistpl
icebp
xlat
jg
fsts
lahf
andb
mov
rep
push
shll
pop
jmp
rolb
mov
dec
popf
cld
and
scas
std
movsl
cli
movsl
and
push
push
or
fildl
test
loopne,pn
jnp
or
mov
leave
cli
arpl
bound
mov
pop
sub
cltd
or
push
sahf
sub
into
enter
lahf
pop
xchg
ret
gs
leave
sub
mov
cmp
dec
std
pusha
jmp
cmp
sti
mov
cmpsl
xor
es
rol
std
xchg
jae
cltd
lret
cs
loope
rcl
jo
pop
inc
inc
dec
repnz
repnz
or
mov
ljmp
dec
pop
mov
fdivrl
pusha
movsl
mov
xor
mov
bound
repnz
add
cld
pushf
sub
das
dec
cltd
inc
sahf
or
mov
adc
insl
mov
scas
cmp
out
dec
add
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
add
add
add
gs
xchg
mov
inc
add
push
sbb
scas
sbb
jne
test
fldcw
leave
scas
sbb
movsb
repz
sbb
sbb
cmpsl
mov
xchg
adc
loope
outsl
and
jb
rcrl
xchg
jmp
fsubrs
sbb
push
pop
jno
insb
dec
sbb
push
popf
or
mov
mov
sub
insb
pop
and
repnz
cltd
jle
mov
shlb
xor
lcall
fs
sbb
js
jo
sub
fsts
je
or
fdivl
sbb
sub
or
dec
leave
or
mov
ret
mov
jl
popa
push
jnp
mov
adc
and
mov
jne
xor
addl
fwait
test
fdivs
xlat
or
xchg
outsb
ret
inc
xor
cmp
outsl
cvtps2pd
imul
cmc
insb
lods
dec
in
or
sbb
cli
inc
xchg
and
jg
mov
addr16
xor
nop
fcmovnu
xchg
xorl
push
xchg
sahf
ficoml
sub
push
inc
jecxz
add
jb
xor
jns
jb
xor
jns
jb
xor
jns
add
add
mov
and
cmp
aam
lcall
outsb
jnp
out
ficoms
adc
pop
cld
mov
cmc
sub
outsb
dec
cli
fucomp
dec
sub
xchg
pop
test
add
pop
loop
imul
jnp
or
lahf
adc
loopne
fcomi
rcrl
push
inc
insb
mov
popf
add
push
cld
inc
cmp
jg
rorl
xchg
outsl
jne
pusha
jo
xchg
adc
or
fsubrl
and
mov
out
add
lcall
sbb
mov
dec
mov
aaa
inc
mov
jb
mov
jno
push
mov
pop
iret
mov
jbe
xlat
pop
int3
add
cmp
inc
xor
imul
sbb
and
hlt
or
in
jbe
arpl
mov
out
aas
sub
jp
ret
xchg
sub
push
ror
sahf
fisubs
cld
sahf
repz
mov
mov
cwtl
in
or
sub
aad
scas
mov
aam
call
mov
fnstenv
lret
mov
roll
xor
or
sahf
inc
dec
pop
add
sti
push
inc
mov
aad
imul
push
aad
jo
rcr
lret
jno
mov
pop
cmp
shll
out
xor
xchg
nop
int3
lcall
aaa
insl
sahf
push
cmp
push
movsb
cmpsl
jp
loopne
sbb
jmp
popf
xchg
add
in
mov
sbb
mov
mov
int
cwtl
push
aam
adc
fcompl
jae
inc
leave
inc
push
into
or
xor
ror
inc
sarb
nop
xorb
xchg
in
fisttpll
inc
jnp
loop
addr16
loopne
cwtl
dec
imul
xchg
test
adc
and
sub
sub
stos
dec
add
cmpsl
out
int
ds
sbb
and
mov
jb
xchg
jge
add
pushf
sub
adc
mov
cmp
dec
mov
ljmp
cmp
into
adc
push
mov
xchg
push
pop
subl
inc
jge
and
xor
mull
sub
mov
mov
das
cli
pop
mov
ficomps
jge
in
mov
pop
jbe
jmp
xor
sub
cs
xchg
xchg
insb
mov
xor
cmp
add
loop
mov
adc
enter
ficoms
xchg
cltd
add
cmp
sub
jno
out
into
lock
cmp
test
adc
fcmovnu
push
xor
sbb
sbbl
mov
fiaddl
adc
aas
cmp
dec
ss
inc
jg
inc
or
or
fdivl
aaa
icebp
aas
sub
sbb
cmp
in
sahf
andl
pop
jmp
adc
sub
scas
shlb
pop
rclb
cmp
jg
push
cmp
xchg
repnz
cmp
lods
out
fs
dec
jmp
mov
ljmp
test
mov
int3
sbb
pop
mov
xor
mov
jbe
push
fs
mov
lahf
pop
sub
bound
jne
bound
add
jge
mov
fisttpl
xchg
and
testb
push
sub
fsubrp
or
mov
mov
repz
loopne
jmp
cltd
push
inc
push
cmpsl
inc
shll
jl
mov
fsub
adcb
data16
rcr
sbb
test
ficoml
or
std
sbb
jp
mov
fsubrs
pop
pmaxsw
arpl
icebp
sbb
mov
lods
inc
sbb
mov
adc
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
add
add
add
sahf
std
iret
lea
out
pop
sub
inc
test
not
aam
fnstcw
xchg
mov
insl
shl
mov
aam
in
push
pushf
xchg
imul
cli
cmp
stc
dec
jbe
movsb
bswap
data16
faddl
stc
test
out
cmc
adc
sub
xchg
fnstcw
pop
jo
mov
or
cmp
out
sbb
scas
or
iret
jo
mov
xor
lods
data16
sub
xchg
dec
push
mov
mov
pop
inc
sbb
outsb
lret
lret
push
rol
xor
jl
pop
inc
ret
cmp
stos
je
popa
arpl
out
inc
test
mov
sar
inc
inc
daa
adc
aaa
leave
sbb
push
lret
das
push
mov
les
fdivrs
outsl
in
mov
mov
cmpsl
xchg
js
jbe
sub
test
push
pop
mov
ss
jnp
andb
or
inc
push
cmpb
stc
rorb
out
jno
and
push
sbb
in
jge
stos
jle
or
adc
hlt
jmp
test
repz
inc
pop
push
pop
nop
xlat
jmp
mov
out
pop
fcomps
dec
xor
adc
lcall
icebp
data16
adcb
push
push
imul
jae
add
or
popa
push
add
movsl
jmp
jbe
ja
mov
inc
dec
fwait
pop
adc
leave
loope
dec
push
aad
sub
xchg
popf
mov
fistpl
jmp
or
lods
cmp
je
adc
push
or
sub
js
xchg
icebp
int3
rolb
test
rep
pop
inc
pop
push
aaa
bound
imul
mov
xor
adcl
sub
or
int
mul
aad
dec
aaa
in
xor
fwait
iret
dec
jecxz
pusha
mov
xchg
and
in
cmp
push
outsl
mov
push
fs
lock
mov
lret
out
sbb
stc
test
and
inc
outsb
clc
call
dec
enter
xchg
and
dec
and
or
leave
and
cmp
adc
sub
add
push
dec
add
xcrypt-ecb
cmpsl
dec
lds
in
mov
ds
pop
mov
ret
ljmp
iret
push
aaa
repnz
or
add
pop
rcl
cld
cld
and
ficoms
ljmp
pop
rcrl
andl
mov
sbb
in
cmp
dec
and
mov
mov
mov
fadds
ret
push
fnsave
xchg
jmp
inc
xchg
sahf
fmuls
fildll
sbb
imul
push
push
adc
sub
jl
pop
out
xchg
fcompl
pop
cmovne
in
adc
mov
out
pop
loope
lahf
pop
rcrb
pop
cli
int3
insl
jae
push
test
arpl
jno
or
push
clc
mov
aaa
scas
icebp
outsb
sahf
xchg
notb
xchg
ljmp
lcall
ror
adcl
jnp
pop
scas
std
pop
lcall
in
pop
inc
sbb
pop
jb
push
cmpsl
inc
rcrl
jbe
out
cmp
subl
mov
xlat
rorl
outsl
xor
dec
jb
addr16
add
fwait
push
cs
shlb
jl
or
push
add
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
add
add
pop
add
mov
scas
jbe
and
dec
adc
mov
js
cmp
mov
jne
icebp
jbe
jb
push
ret
sbb
pop
mov
adc
sub
dec
mov
addr16
aas
aad
cmp
push
add
mov
add
mov
and
enter
daa
insb
sub
and
ret
lods
mov
and
rorl
mov
or
adc
or
mov
je
mov
and
and
sti
in
jecxz
lret
sub
cli
xlat
pop
icebp
inc
sbb
sub
inc
jbe
fldenv
pop
jnp
mov
jnp
mov
pop
push
dec
loope
mov
and
mov
daa
test
in
push
bound
push
imul
dec
xorl
jle
fucomi
push
lds
xor
out
mov
rcrb
mov
fmull
stc
stc
nop
inc
shlb
xor
or
inc
pushaw
jle
je
lods
icebp
push
cmpsl
out
fsts
ss
or
out
cs
ret
lret
cmp
cmpsb
mov
or
mov
ficoms
fs
and
jno
push
insl
mov
mov
fs
sti
push
xchg
cmp
std
rorb
add
scas
mov
outsb
aas
mov
mov
mov
in
iret
sub
xchg
jge
stos
inc
and
jb
fldl
add
xor
pop
je
mov
sub
mov
ss
loop
sbb
pop
popa
idivl
jno
adc
gs
xchg
push
jecxz
cmpsb
or
ljmp
scas
jecxz
je
adc
lahf
xchg
out
fnsave
sar
bound
shl
xchg
jno
push
sbb
mov
lods
jns
jnp,pt
paddq
sub
mov
mov
loop
push
es
and
clc
and
pop
pop
adc
or
out
rclb
icebp
mov
lahf
js
jg
or
lcall
sub
xor
push
adc
cmp
imul
push
lock
pop
cmp
pop
mov
pushf
aas
jge
addl
fcomp
insb
pop
decb
out
loop
inc
in
pop
ja
addl
mov
mov
push
movsb
lods
inc
cmp
rolb
les
mov
xchg
dec
ss
ljmp
enter
dec
xor
dec
jno
icebp
movsl
aad
clc
sub
stos
nop
cmp
fldenv
xor
scas
int3
daa
xor
cmpsb
icebp
mov
adc
pop
jle
fcmovnbe
xor
jnp
mov
imul
pop
mov
xlat
push
je
leave
xor
xor
push
idivl
mov
mov
fidivrl
dec
outsl
test
js
movsb
xor
das
push
nop
lock
xchg
outsb
pop
mov
cli
add
pop
push
outsb
aad
mov
push
fisttpll
push
xchg
ret
xchg
movsl
fstpl
jb
js
lahf
and
in
sbb
xor
sbb
sti
adc
cmp
loopne
lret
mov
mov
out
push
aam
hlt
xchg
je
push
stos
out
cmovno
movsb
in
mov
rol
push
out
js
pop
or
or
repz
add
js
cs
dec
movsb
pop
inc
sahf
inc
adc
loop
or
test
mov
data16
sbb
push
fwait
loope
inc
or
test
pushf
loope
pop
das
bswap
std
test
icebp
rcrl
ret
hlt
pop
test
push
push
mov
adc
pop
repnz
scas
sbb
jne
stos
pop
lock
rclb
jns
mul
sub
adc
push
pop
inc
mov
movb
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
add
add
push
add
addb
addr16
icebp
add
in
js
dec
scas
je
mov
and
jbe
push
fwait
test
pushf
sbb
pop
ret
push
mov
decl
or
test
push
lods
test
stos
xchg
mov
push
movaps
fimull
sbb
xchg
cltd
sbb
mov
fsubrl
xor
cmp
or
imul
pop
rorl
lods
and
ret
arpl
sbbl
push
xchg
cmp
xor
addr16
push
cmp
ja
js
jno
outsl
or
data16
int
mov
data16
shll
add
faddl
jmp
xor
lcall
mov
out
sbb
lods
scas
shrl
jecxz
aam
inc
sub
adc
cmc
xchg
and
inc
sbb
mov
pop
loope
sub
ret
into
or
push
pop
jae
push
and
jmp
fisubs
jl
mov
dec
sbb
xorb
push
jnp
icebp
push
push
pop
iret
movsb
adc
dec
scas
add
lahf
inc
xchg
js
outsb
pop
push
and
subl
in
xor
loopne
pop
cmp
inc
movsl
sbb
jb
iret
cmp
mov
xlat
xchg
repnz
fstps
aad
fs
mov
push
jp
imul
add
repz
xor
sub
lret
sbb
enter
int
pop
fs
jns
jnp
mov
mov
push
rol
and
es
or
ret
sub
jmp
dec
pop
sub
popf
cld
aad
lds
xchg
adc
or
jl
jg
fcoms
push
xor
or
add
ja
fcmovnbe
iret
jmp
sub
cmp
xor
dec
xchg
inc
pop
adc
sbb
push
out
cli
xchg
xchg
les
adc
lret
pop
push
sub
jmp
iret
pop
add
push
dec
call
ret
arpl
mull
lds
and
jmp
int
shlb
out
lcall
pusha
pop
popf
popa
inc
add
lea
in
gs
jo
fisubrs
mov
stos
pop
pop
fwait
sub
lods
jp
lds
fwait
loope
nop
fists
sub
rep
and
js
dec
call
fwait
mov
dec
test
xchg
push
rol
ljmp
mov
lret
shlb
arpl
fisubrl
aas
call
popf
jno
pop
inc
push
ffree
jge
push
cld
ret
xchg
negb
test
pop
xchg
icebp
xor
mulb
xchg
gs
push
scas
sub
pop
mov
nop
js
pop
cltd
xor
imul
pop
dec
cmc
inc
xor
lahf
cmpsl
add
inc
sub
test
aam
std
pop
mov
in
or
repnz
mov
adc
dec
repnz
push
adc
push
call
and
outsl
or
and
pop
add
push
dec
jecxz
test
mov
sub
stc
gs
int
jns
movsl
xchg
mov
pop
pushf
sub
mov
ja
sbb
xor
lods
sbb
test
adc
test
jmp
pop
scas
insl
imul
xor
xchg
decb
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
push
add
nop
or
add
pop
hlt
pop
popf
cmp
sub
jl
pop
mov
xchg
dec
popf
stos
mov
fmuls
pop
rorl
movsl
or
mov
xchg
orb
push
das
add
aas
mov
stos
and
sbb
and
enter
or
xchg
mov
out
mov
out
sub
mov
or
dec
xlat
mov
xchg
test
lds
orb
aam
int
adc
push
mov
inc
sub
pop
cmpsb
addr16
jno
cmp
push
pop
andb
fisubrl
inc
jns
push
jg
fistps
ret
leave
test
test
ds
mov
cwtl
arpl
cmpsb
shll
cs
test
or
xchg
adcl
dec
test
inc
inc
sub
jnp
cmp
call
dec
add
jo
out
lods
ret
les
scas
pop
je
add
adcl
mov
pop
sub
pop
add
mov
push
es
mov
in
xchg
dec
lea
sti
adc
jne
cmc
pop
fstpt
addr16
rdmsr
cmp
fsubrs
sahf
pushf
lcall
int
cmp
jns
pushl
xchg
push
test
push
mov
jle
addr16
mov
popf
out
add
xchg
push
or
sub
adc
addr16
int
lcall
cmp
xor
cmp
pop
xchg
cmp
add
sbbl
outsb
ficoml
mulb
or
inc
xlat
push
jb
jmp
rolb
push
xor
dec
mov
cs
adcl
pop
fistps
test
fcmovbe
in
lock
out
jns
mov
shll
out
push
insl
les
cmc
dec
jns
push
popf
jns
insb
push
add
dec
mov
inc
push
push
mov
into
bound
popf
and
leave
fldcw
mov
lods
aaa
mov
push
clc
lret
inc
push
push
mov
dec
sbb
push
testb
jg
jp
lods
sub
push
int
mov
insb
jp
cwtl
lods
les
fisttpl
repnz
stos
mov
into
mov
insb
push
push
xchg
jb
ret
test
mov
jmp
and
and
cmp
add
cmc
mov
cmp
mov
adc
sub
stos
hlt
xchg
into
test
adc
fucomp
inc
clc
xchg
or
inc
aas
pop
push
add
popf
frstor
mov
bound
fwait
and
xchg
movsb
sbb
shlb
loopne
cmp
das
sbb
push
jmp
xchg
jno
jg
jno,pt
jnp
mov
nop
and
es
popf
sbb
fisubl
arpl
push
lret
adc
mov
aam
sbb
pop
andb
ja
lds
cli
mov
repz
or
cwtl
imul
inc
xchg
pop
hlt
fsubs
mov
pushf
xchg
inc
and
and
sub
mov
movsl
out
fcomip
outsl
add
movsl
shlb
psubb
rclb
jl
adc
cmp
jno
mov
lret
std
shrb
test
fnstcw
fildll
outsl
cmc
sbb
sbb
push
in
nop
test
dec
mov
loop
repz
adc
jmp
jge
add
mov
fildl
xchg
jecxz
dec
jno
and
fs
dec
xchg
fsub
adc
or
xor
xchg
dec
sbb
in
xchg
push
and
pop
adc
xchg
xchg
jb
jb
lret
jge
xchg
sahf
loop
das
dec
push
jg
jg
dec
sbb
pop
mov
clc
jo
cwtl
out
cmpb
popf
adcl
mov
aas
ret
cmp
jnp
data16
jecxz
and
loope
sub
xchg
lods
pushf
adc
or
mov
xorl
int
lock
in
cmp
test
call
xchg
xor
icebp
pop
scas
push
push
movsl
mov
jp
jne
inc
xchg
in
or
lcall
jmp
daa
test
aas
out
ret
lea
movsb
add
pushl
bound
jb
ret
in
sbb
mov
bound
inc
lea
or
inc
push
xor
mov
dec
push
push
std
shll
sub
repnz
sbb
std
pop
mov
popf
pop
stc
and
mov
aaa
cmpsb
clc
cmp
pop
stc
leave
inc
js
xchg
push
inc
es
mov
std
out
int
adc
loop
sbb
fsubrs
cmpsl
arpl
cs
movsb
addr16
sub
das
xchg
push
xor
out
jmp
sarb
mov
bound
lcall
push
divb
cmp
push
cmp
add
hlt
mov
rcr
sub
fcoms
je
or
lret
jno
leave
mov
pop
out
outsl
dec
dec
mov
lods
jns
inc
add
xchg
and
cmpsl
mov
mov
fstpt
jo
mov
filds
mov
or
lahf
sbb
cmp
sub
js
sbb
xchg
lret
shrb
sub
sahf
jb
pop
cmp
orb
mul
js
std
jnp
jo
mov
jle
or
stos
mov
lods
rol
scas
jge
adc
sbb
cmp
add
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
add
ja
add
adc
push
inc
incb
mov
rcrb
in
add
mov
in
ret
daa
movsb
call
gs
and
xor
jns
ret
test
aas
add
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
lahf
add
add
push
add
mov
xchg
jp
into
shr
adc
adc
push
sub
lock
fadds
repz
dec
lahf
lods
cmp
fadds
pop
inc
mov
and
lret
sbb
aaa
les
sub
rorl
in
leave
inc
xlat
pop
push
pop
or
out
sbb
mov
sahf
inc
sub
out
sbb
int3
inc
std
hlt
loop
xchg
mov
cwtl
mov
jl
pop
jg
mov
ja
sub
cmpsl
xor
fsubs
mulb
pop
lock
fisttpl
mov
sbb
xorb
pop
inc
mov
mov
movsl
addr16
movsb
sarl
jns
cmp
xchg
add
adc
jo
pop
shrb
dec
mov
cli
xchg
fs
pop
cmpsl
pop
jb
mov
mov
inc
inc
pop
shrl
and
shrb
mov
jmp
out
push
dec
sub
mov
subl
sarb
shlb
inc
push
incl
outsb
pop
xchg
sahf
cmp
and
lds
jno
shll
push
mov
sbb
dec
iret
xorb
pop
adc
lock
and
xor
js
iret
gs
js
mov
add
sub
rcll
cmp
in
mov
jg
pop
push
dec
xchg
xor
stos
fistpl
dec
add
enter
lahf
aaa
push
jbe
out
testb
mov
enter
nop
jne
les
fistpl
arpl
pop
jle
pusha
bsf
rcll
sub
dec
sbb
ja
xor
sub
adc
je
cmp
or
mov
jp
movsb
inc
xchg
jle
sbb
addl
push
sub
fiadds
lret
ret
push
push
nop
mov
xlat
dec
sarl
in
pop
enter
es
xchg
fstp
repz
out
inc
in
aaa
mov
adc
shrl
sbb
rclb
ja
add
xor
shlb
mov
fwait
daa
outsl
ss
inc
ljmp
sbb
lahf
pushf
xorl
jle
adc
ds
xchg
push
hlt
aaa
push
inc
pop
fcomp
sbb
cmp
pushf
jg
or
mov
xchg
mov
ljmp
adc
popa
cmp
sub
arpl
cmc
xor
popf
sub
cmp
lret
add
xor
mov
mov
nop
pop
xchg
xchg
shll
xchg
dec
push
ret
mov
aad
popf
out
call
adc
sub
test
xor
addr16
mov
imul
loop
into
ret
arpl
scas
sub
les
mov
scas
fisubrs
mov
mov
je
pop
cld
xchg
orl
outsl
mulb
jbe
mov
in
js
scas
mov
mov
push
mov
cli
movsl
mov
push
jb
mov
xchg
fsubl
out
jecxz
jae
lret
aas
popa
fidivl
xor
jns
insl
jmp
and
enter
fmulp
jnp
lea
in
inc
cmova
andb
add
lods
sub
xchg
jbe
imul
stc
call
jp
add
push
sub
or
add
repz
jno
aaa
jmp
aam
pop
dec
ljmp
das
roll
mov
pusha
inc
mov
sahf
mov
in
jne
enter
jp
cltd
outsl
fisubrs
lods
pop
scas
sbb
leave
dec
xchg
xchg
aam
push
test
pop
andb
cmovb
pop
and
cmp
push
inc
inc
dec
and
mov
in
adc
movsl
je
leave
fstps
loope
pushf
stos
stc
stc
std
mov
cltd
jne
add
mov
mov
sti
jne
icebp
test
daa
cmp
fisubs
or
sarb
mov
ficoms
push
enter
xchg
jbe
jmp
push
jle
std
adc
fidivrl
leave
sbb
stos
add
cmc
add
jg
repnz
insl
adc
sub
push
loopne
jp
push
cwtl
pusha
std
jp
add
mov
loop
add
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
cmc
add
add
add
add
int
addr16
pop
mov
aaa
cwtl
call
movsb
add
push
push
cmp
cld
scas
fidivrs
or
dec
pop
sbb
or
nop
mov
scas
dec
mov
imul
addb
in
stos
clc
lret
fmull
xchg
jb
sbb
in
cwtl
sub
pop
int3
fistpll
adc
adc
lcall
in
inc
cwtl
mov
jno
inc
jp
pop
push
add
cmc
add
out
pusha
enter
cmp
xor
jns
pop
subb
cld
adc
xlat
leave
add
xor
adc
mov
out
flds
daa
orb
mov
out
xchg
add
cmp
gs
fidivl
out
xor
dec
sub
lods
pop
cmp
aad
xor
enter
cmp
jne
sub
rcll
pop
ds
jo
test
push
repz
mov
cld
jecxz
xor
ret
adc
dec
fldt
nop
gs
fxch
into
insb
xlat
push
push
ds
mov
out
fsub
ficoml
in
inc
cmp
lret
mov
movsb
sbb
pop
addb
dec
ja
push
and
inc
test
jnp
push
cmp
xor
test
mov
jg
stos
rcll
test
fisttpll
jg
into
jmp
push
dec
xchg
dec
mov
mov
gs
repz
fs
or
and
or
aaa
out
pop
xchg
add
jbe
popa
mov
pop
bound
mov
mov
pop
lods
in
int
pop
adc
sub
in
aam
pop
jbe
push
rcrl
loope
lcall
ss
sbb
adc
les
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
add
add
and
popa
mov
repnz
or
jg
movsb
lea
out
int
lahf
outsl
je
cmp
push
mov
cmpsb
mov
stc
xor
rclb
pop
jmp
pop
cmpsb
jmp
mov
jmp
push
cmp
lods
add
mov
data16
xlat
ljmp
mov
outsb
daa
inc
cmpl
movsb
cwtl
push
or
dec
or
jg
pop
aas
sub
loope
dec
popf
pop
je
mov
add
and
loop
mov
shrb
popa
in
add
fsubrs
jne
in
in
mov
les
mov
mov
and
roll
pop
rolb
xchg
fnstenv
fidivrl
rorl
shll
mov
push
test
dec
xor
popf
xchg
mov
sbb
jmp
popa
fildl
bnd
lcall
mov
xor
lcall
fnstsw
dec
gs
jo
mov
hlt
xor
inc
cs
pop
jge
or
jnp
sbb
jmp
push
mov
nop
leave
lcall
loope
push
mov
sub
cmpsl
psubb
jb
fcoms
ret
adc
add
stc
sbb
ret
aas
pusha
push
nop
pop
leave
mov
ds
fisubrs
ret
pop
dec
jbe
fnstsw
xlat
cs
jo
cli
mov
push
test
dec
sub
push
mulb
fcompl
add
mov
push
ret
sbb
aas
std
mov
pop
aad
or
mov
sub
lock
clc
jmp
das
jno
insl
sub
in
mov
xchg
movsl
mov
mov
outsl
insl
xchg
sbb
js
pop
cmp
push
or
add
pushf
fmuls
outsl
jno
jo
out
mov
test
jg
fstl
ret
ss
push
mov
mov
inc
hlt
inc
push
lea
iret
pop
pop
dec
mov
sar
inc
stos
pop
in
push
loop
clc
lret
xchg
lahf
lcall
inc
scas
cmp
mov
mov
mov
test
jb
jns
push
icebp
xor
loopne
pusha
cld
add
mov
add
mov
insb
and
lock
ret
mov
fsubrl
and
testl
xchg
jge
fcmovne
ljmp
fcmovnb
int3
inc
mov
fcmovb
aam
out
sbb
mov
mov
sbb
jmp
add
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
add
add
pop
add
mov
bound
push
pushf
jl
inc
add
sub
sub
stos
imul
pop
adc
les
into
or
mov
jp
gs
pop
fwait
sbb
cmc
jae
dec
jb
loope
fwait
mov
lret
cmp
sbb
sub
sbb
or
pusha
push
dec
pop
inc
xor
xchg
xor
std
or
scas
adc
xor
lahf
sbb
or
xor
mov
dec
adc
and
mov
out
cmp
addb
pop
dec
pop
popa
je
pop
jg
loopne
mov
lahf
dec
scas
cmp
mov
push
pop
ds
mov
sbb
xchg
sbb
shrb
pop
push
push
scas
xchg
in
sahf
jle
out
pop
push
in
inc
and
sbb
sbb
icebp
jl
out
lods
sub
icebp
pop
sbb
cmp
leave
into
adc
inc
mov
pop
mov
xchg
sbb
frstor
mov
test
mov
push
mov
push
adc
or
bound
test
xchg
cmpsb
and
mov
stos
lret
or
in
jo
pop
or
mov
inc
jmp
xor
pop
jecxz
sti
mov
inc
outsb
fdivp
adc
mov
out
stc
cmpsl
sub
mov
dec
out
lods
dec
shll
fnsave
push
jnp
fs
lods
mov
mov
cmp
aas
aam
mov
fdiv
scas
cmp
popa
inc
les
pop
xchg
xor
adc
dec
iret
jbe
sub
ja
mov
push
sbb
xor
pop
sub
enter
xchg
ficoms
lahf
mov
push
leave
mov
mov
das
sub
lds
lock
inc
mov
pushf
mov
add
gs
and
movsb
addl
push
xorl
xor
dec
dec
lret
shrb
movsl
mov
loopne
outsb
sub
negl
jae
push
push
inc
dec
bound
inc
sub
daa
xchg
or
push
stc
orl
mov
jb
sbb
adc
mov
dec
int3
mov
nop
and
mov
jo
add
lea
in
popa
aad
mov
lret
adcb
push
cmp
mov
insb
fldl
push
mov
sbb
or
daa
imul
insb
sbb
push
dec
mov
or
pop
sahf
inc
out
mov
pop
pop
lock
lea
test
sbb
lcall
jp
mov
div
sbb
fstl
shrd
fcoml
jo
cmpsl
push
push
xor
aam
push
and
mov
loope
push
and
xor
cld
shll
lock
fcmovbe
fisttpll
adc
out
sbb
push
arpl
xor
ficoml
mov
idivl
mov
mov
scas
jbe
rcrl
rcll
stos
call
test
nop
xor
enter
jecxz
and
test
daa
xchg
add
fiadds
divb
cmpsb
sar
pushf
push
mov
jmp
adc
lods
rorl
nop
outsl
out
mov
mov
and
daa
int3
xchg
cli
pushf
out
icebp
push
sbb
xchg
mov
pop
pop
or
dec
pop
push
sub
jns
push
andl
and
mov
xor
push
out
ret
inc
inc
dec
pusha
cmpsb
aas
add
mov
pop
frstor
in
dec
insb
dec
scas
push
pushf
arpl
jmp
jno
movsl
incb
mov
sbb
pop
sbb
cwtl
popa
mov
xor
lret
popf
icebp
mov
jcxz
jbe
aaa
mov
push
mov
pop
mov
fdivrl
inc
aam
mov
push
loop
or
jbe
jmp
mov
mov
movsb
mov
jg
jp
pop
jbe
into
ljmp
roll
jle
add
iret
ljmp
mov
subb
mov
pop
xlat
sbb
adc
inc
fisttps
je
sub
repz
rcll
jb
inc
cmc
aaa
jb
inc
adc
push
cmp
sub
not
dec
xor
xchg
in
js
cmp
mov
mov
adc
popf
sarl
ret
jmp
test
xchg
lea
xchg
stos
push
push
nop
in
fistps
or
mov
subl
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
pop
add
add
add
add
sbb
lea
addr16
fstpl
addr16
jnp
das
mov
jg
jge
lock
data16
outsb
or
pop
repnz
mov
pushf
and
mov
test
bound
nop
adc
sub
push
jg
jle
int3
stc
aas
fiaddl
cmp
add
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
add
add
cmpsb
inc
mov
pop
inc
rolb
pop
adc
shll
sahf
test
add
into
xlat
or
adc
mov
push
sbb
mov
add
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
pop
add
mov
test
xchg
xchg
mov
icebp
inc
mov
ret
sarb
add
lods
pop
inc
ja
jne
jg
sub
mov
out
push
push
xchg
sahf
push
sbb
dec
lcall
or
popa
jg
cmp
dec
xchg
icebp
xor
push
pop
je
and
jmp
mov
int
sbb
add
jno
test
jp
pop
mov
lcall
inc
dec
pop
adc
dec
sarb
pop
lea
fnstcw
jge
xlat
adc
andl
jbe
push
sub
or
ss
xorl
fisubl
adc
jb
test
cmp
idivb
sbb
sbb
rorb
ret
mov
lea
push
add
cmp
jnp
stc
cltd
into
jp
sub
mov
dec
xor
imul
cmp
dec
xchg
es
inc
push
sub
dec
orb
dec
sub
mov
inc
icebp
out
inc
loopne
vpsrlw
sarl
inc
mov
sbb
in
out
mov
mov
cwtl
call
mov
repz
xchg
mov
js
icebp
cmp
dec
sbb
push
aaa
fwait
jge
lahf
je
dec
call
xlat
js
jae
outsb
and
add
int3
sub
out
out
xchg
lret
je
in
test
stos
mov
mov
xchg
lahf
ss
pop
ret
cltd
sarl
mov
sbb
int3
rolb
stos
rolb
lret
mov
sbb
mov
shrl
pop
addr16
pop
xchg
cld
cs
xchg
or
test
inc
jmpw
and
mov
sub
shlb
aam
xor
and
mov
lret
xchg
hlt
lea
test
pop
incl
add
mov
punpckhwd
inc
xlat
dec
call
arpl
dec
xor
xchg
inc
fucomip
idiv
les
cmp
lock
dec
jno
dec
shrl
pusha
scas
fisubl
bound
stc
mov
cmp
aas
cwtl
aaa
push
fstp
bound
imul
mov
xchg
nop
aam
loope
scas
push
xchg
xchg
push
adc
pushf
scas
fisubs
inc
leave
loop
inc
das
jle
or
ss
jl
inc
dec
and
cmp
pop
jb
xor
daa
add
loope
int
xchg
hlt
xorb
xchg
jge
sar
xor
lcall
test
test
fwait
jae
sti
clc
mov
repz
test
mov
jo
or
add
out
testb
shll
sub
dec
xchg
imul
push
jne
lock
pop
adc
push
adc
pop
adcb
loop
mov
fmul
or
pop
test
stos
out
mov
stos
xchg
mov
fisubl
pop
cmp
push
jecxz
stos
jb
notb
mov
das
sbb
push
jnp
cmp
rorl
ret
testl
inc
adcl
adc
mov
mov
pusha
adcl
aam
mov
dec
shlb
lods
xchg
inc
dec
mov
mov
lcall
cmp
mov
and
mov
mov
or
sbb
adc
mov
aas
mov
lea
or
jns
inc
fidivs
inc
out
mov
jecxz
sbb
cli
mov
mov
sub
pushf
xchg
xchg
ja
mov
jbe
sub
lock
adc
pop
adc
imul
dec
cmp
or
mov
enter
in
cltd
jg
mov
ds
sub
cmp
push
xor
push
aas
add
imul
lret
mov
mov
cld
lods
pop
ja,pt
out
and
nop
cmp
push
push
shl
push
jp
push
arpl
loopne
testb
jg
out
mov
mov
jp
push
xor
jp
scas
adc
mov
outsb
fdiv
repz
int
inc
and
out
fdiv
aad
xchg
int3
jge
dec
dec
sarl
inc
out
idivb
shrl
cmc
hlt
mov
jno
xchg
in
pop
xchg
jbe
fucomp
jno
xchg
jp
icebp
mov
notl
mov
arpl
xlat
dec
inc
jbe
and
aas
sbb
mov
nop
cmpsb
cmc
cwtl
push
andb
int3
and
je
out
push
fistpll
ficomps
pop
dec
and
jns
outsl
jle
add
popa
or
inc
mov
push
fistl
dec
rorl
mov
lock
dec
mov
or
push
js
les
imul
fwait
jp
jnp
mov
push
cmpsb
jnp
push
adc
jno
sbb
test
push
pop
imul
shlb
mov
int
dec
insl
lret
in
mov
mov
add
and
jbe
adc
jae
xor
mov
mov
mov
pop
stc
sub
cli
lahf
and
jne
pop
stos
jle
adc
mov
pop
in
repnz
addb
call
arpl
orl
movsl
or
sbb
arpl
fwait
cmpsb
xchg
mov
stc
testl
mov
xchg
push
test
mov
jb
adc
gs
push
xor
lods
insb
movsb
jg
ss
iret
mov
sub
enter
xchg
mov
adc
jne
roll
add
cmp
pop
inc
push
scas
mov
lcall
push
sbb
mov
sub
mov
fcomps
add
push
or
test
mov
enter
rcll
pop
aaa
xorl
dec
orb
cmc
sub
mov
xor
inc
in
pop
push
push
cmpsb
int3
jo
mov
sahf
test
frstor
push
push
jno
sub
push
rorb
mov
es
sbb
cmp
sbb
mov
adc
jnp
pusha
cmp
mov
mov
xchg
jb
mov
icebp
add
fisttpll
dec
add
jbe
mov
aad
and
bound
aad
imul
in
and
fmuls
sti
lock
dec
pop
out
fs
or
add
xchg
xlat
mov
jo
push
les
sahf
popf
loopne
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
cmc
add
add
add
jg
fldcw
jecxz
cmpsl
sub
dec
into
jecxz
jmp
pop
aas
call
and
loope
pop
ret
jae
cwtl
pop
mov
ret
push
test
cmpsl
pop
cmpsl
mov
mov
xchg
adc
lret
mov
insb
dec
pop
repz
push
pop
imul
push
imul
xchg
adc
mov
lods
mov
mov
sbb
fcoms
jge
inc
xor
pop
mov
or
rcrl
shrb
jle
mov
mov
inc
and
xchg
lock
lret
mov
or
push
fcompl
sub
les
or
push
cs
or
daa
mov
insb
cmp
pop
pop
movsl
scas
xor
or
add
add
repnz
mov
pusha
xor
stc
xchg
mov
gs
je
pop
aad
fstps
fidivs
add
loopne
aam
adc
nop
cmp
and
fsubrl
cmp
mov
icebp
adc
fimuls
aas
add
fs
dec
mov
fmul
mov
shl
popf
pop
repnz
mov
adc
push
aad
mov
stc
stc
les
jle
add
mov
lahf
jp
dec
adc
divl
ljmp
mov
jmp
pop
into
mov
ficomps
lea
mov
mov
jle
mov
pop
mov
inc
cmp
repz
cs
jecxz
push
push
push
jge
or
ret
jnp
mov
mov
xor
sbb
dec
jo
int
popa
aaa
xchg
mov
mov
and
ja
shlb
data16
push
out
adc
add
jne
test
ljmp
ret
and
test
push
cs
xor
aaa
lret
jg
push
jno
pop
fdivrl
dec
rorl
pop
xor
sub
out
sarl
mov
es
push
in
cwtl
adc
add
dec
testl
out
push
lahf
mov
pop
inc
sbb
lods
mov
inc
je
xor
or
loop
aam
mov
cs
inc
movsb
mov
and
mov
mov
cmpsl
inc
xlat
adc
and
push
push
fcompl
jg
xor
lods
ljmp
loope
xor
pop
inc
jb
sti
jg
lods
add
rcl
lcall
jns
inc
out
mov
inc
dec
dec
mov
push
sub
mov
sub
jge
mov
inc
push
mov
fs
int
ljmp
inc
xchg
inc
push
in
jo
into
xorl
cmp
hlt
pop
add
xchg
inc
xor
dec
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
rolb
add
lods
or
add
test
scas
mov
leave
leave
ja
cs
or
test
outsb
out
pop
and
lds
scas
add
pop
pop
pop
ret
mov
shl
jbe
sbb
xor
cmpsb
mov
adc
push
cmp
xor
add
cmp
pop
xchg
adc
mov
xchg
fisttpl
frstor
in
hlt
ret
das
pop
fidivrs
adc
mov
in
pop
cmp
fcoml
cmp
mov
xchg
aam
in
push
pop
data16
pusha
repz
xchg
fwait
xor
adc
fisubrs
shr
xor
push
into
lret
pop
mov
pop
mov
pop
in
pop
inc
or
ds
xor
mov
sbb
outsl
imul
sub
mov
pop
cmc
push
and
scas
push
push
jns
test
addr16
inc
fidivrl
mov
bound
push
insl
push
outsb
ja
jne
sub
mov
lret
mov
push
cltd
adc
mov
dec
push
push
inc
add
cs
pusha
fldcw
cmp
outsl
jle
dec
outsb
in
push
shlb
stc
xchg
adc
jns
cmpsb
loopne
xchg
cmp
int
mov
push
adc
and
xchg
xor
pushf
cwtl
fsubrp
fwait
sub
subps
inc
fs
inc
in
mov
push
push
repz
fistpl
testb
cmp
mov
mov
in
rolb
inc
inc
push
in
mov
pusha
lcall
mov
adc
lock
jl
push
add
out
mov
sahf
rcll
pop
aad
lea
movsl
or
je
pushf
es
sarb
push
pop
push
inc
xor
sbb
mov
and
mov
inc
or
les
push
and
out
pop
and
jbe
sti
add
ja
and
dec
aas
sub
flds
movl
fstpt
outsl
rcr
inc
jns
mov
push
mov
and
mov
xchg
call
jb
mov
dec
push
fsts
sub
pushl
push
enter
sbbb
mov
lcall
adc
add
mov
mov
pop
lcall
cli
sbb
sub
int
ficoml
loop
shll
mov
test
lock
out
mov
aas
ds
inc
je
leave
adc
lods
int
mov
std
jno
inc
mulb
ljmp
jmp
fldenv
dec
test
mov
cmp
loop
adc
repnz
pop
sub
stc
rcl
jge
out
jmp
into
push
mov
mov
and
xchg
ret
cmp
inc
mov
lds
xchg
cmp
into
or
mov
mov
idivb
test
sub
xor
jge
xor
sbb
mov
imul
adc
addr16
lea
lret
je
ja
data16
mov
vpcmpgtw
in
aaa
jae
mov
pop
cmp
ret
mov
dec
pop
push
mov
hlt
dec
scas
xor
je
jne
std
mov
sbb
stc
mov
fcoml
fs
push
inc
sbb
loopne
mov
mov
nop
mov
and
mov
lea
leave
mov
sbb
inc
dec
mov
mov
imul
cmp
adc
je
xchg
ror
xchg
ja
test
cmp
jns
rorl
mov
xor
xchg
sbb
gs
dec
fiadds
sub
loope
jne
push
ss
xchg
inc
js
mov
inc
loop
daa
jp
cmc
iret
pop
adc
fidivs
and
inc
movsl
loope
mov
jge
mov
addr16
lods
jb
push
jne
out
nop
jp
and
mov
outsl
sti
dec
sbb
cmp
push
xor
pusha
push
test
jnp
mov
into
sub
mov
sub
cli
push
rolb
lock
sahf
xlat
call
push
dec
test
lock
test
cwtl
jmp
imul
pop
mov
xor
xchg
fimull
call
lds
cld
inc
inc
cs
push
addr16
ds
idivl
pop
sbb
jbe
rcll
test
jb
popf
mov
or
push
stos
xchg
xchg
xchg
leave
andnps
adc
out
jg
jmp
and
mov
hlt
fisubrs
andb
orb
add
add
sbb
punpckhdq
mov
push
lds
aas
jno
sub
pop
aam
aas
outsb
shl
inc
sbb
scas
and
push
pop
iret
mov
fnstenv
iret
fsub
dec
cmpsl
or
popf
xchg
mov
fcoml
scas
in
cmp
stos
jmp
push
in
add
ljmp
lret
sbb
jbe
iret
fbstp
int
mov
mov
in
adc
pop
sub
test
sti
roll
fcmovu
lahf
push
mov
jmp
jnp
or
push
in
jmp
adc
bnd
jo
mov
push
outsl
lods
icebp
xor
mov
mov
cltd
and
sub
ss
pop
and
loop
push
add
daa
ret
or
mov
ret
inc
shll
fistl
ret
jmp
sbb
push
fadd
mov
mov
data16
push
dec
xchg
pushf
jge
out
lret
mov
pop
stc
fwait
xchg
push
scas
or
clc
inc
lods
lcall
out
hlt
je
mov
fmull
or
pusha
and
js
push
pop
popa
lcall
fs
or
sub
leave
imul
out
sbb
sbb
adc
mov
lahf
sub
sahf
aad
jbe
inc
mov
jne
adc
xchg
ret
sub
pop
fucomp
std
sub
and
dec
in
mov
jecxz
out
test
test
daa
jae
test
mov
outsl
jle
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
pop
add
dec
dec
push
mov
sar
sbb
imul
push
iret
pop
jbe
into
pop
mov
or
addr16
push
shl
xor
and
push
jle
jne
cmpsl
push
nop
adc
or
shll
inc
pop
push
inc
pop
cmpsl
daa
jne
addl
pop
imull
inc
mov
mov
or
mov
je
and
nop
rorb
inc
lahf
or
mov
pushf
arpl
pusha
or
das
xor
out
fnstenv
cs
stos
xor
sub
sbb
push
test
xchg
clc
cmp
aaa
mov
sahf
fistpl
lahf
and
xchg
bound
jns
ds
inc
jp
cmp
ror
xchg
xchg
flds
int
mov
imul
fsub
push
in
out
dec
inc
mov
lcall
sbb
popf
mov
roll
xchg
pop
clc
fimuls
add
hlt
aaa
sbb
aad
cmp
adcl
sub
inc
rorl
enter
push
faddp
add
loopne
outsb
testl
cmp
les
loopne
or
mov
cmc
in
or
inc
jmp
push
mov
out
or
adc
sbb
inc
stos
fs
hlt
stc
or
cmp
adc
scas
not
test
mov
popf
fdivs
ds
sub
jmp
cmp
les
pop
cmp
or
cmp
andb
pop
add
cmp
sub
dec
addr16
popf
inc
aaa
fs
add
scas
orb
pop
test
arpl
cmp
divb
das
fistpl
sbb
ljmp
or
cld
repz
lock
orb
adc
mov
mov
lret
cmpsb
leave
pop
sti
jmp
lret
push
adc
inc
cs
sti
int3
adc
sahf
fldl
xchg
push
sbb
test
inc
fwait
push
sub
xlat
sbb
or
xor
jo
nop
push
inc
inc
fmull
popf
je
cwtl
sub
adc
mov
cmpsl
mov
xchg
lret
jp
sub
jne
adc
adc
out
jmp
push
or
cmpb
mov
test
jnp
into
dec
test
fs
bound
cmp
mov
shl
into
add
push
add
mov
movsb
mov
dec
stc
nop
lods
and
outsb
adc
in
leave
or
mov
fwait
adc
cld
xor
enter
dec
lret
fldcw
icebp
mov
scas
push
sub
mov
or
xor
movsb
mov
fisttpll
push
lret
jbe
or
dec
push
xchg
into
js
mov
cmp
mov
ret
fstpl
negl
mov
mov
push
nop
inc
cmpsl
jl
repz
jnp
ljmp
ret
and
es
xor
cmpsl
fwait
loope
push
xor
bnd
call
gs
insb
popf
and
mov
and
lods
mov
mov
xor
pop
das
mov
jnp
ss
inc
fs
sbb
push
mov
ds
rorb
in
aaa
add
outsb
popa
into
inc
rcr
mov
cmpsb
xor
add
sbb
sbb
fnstcw
scas
pop
mov
dec
push
insl
mov
lahf
fwait
sub
xor
add
push
jnp
movsl
cs
ficompl
xchg
xchg
sbb
in
lds
test
popa
sub
mov
inc
mov
popa
mov
fldenv
aad
test
xor
jne
fcmovne
and
jmp
jno
fldl
icebp
rorb
mov
mov
push
sbb
rcr
jne
inc
sub
dec
and
push
pop
jnp
inc
lret
aaa
mov
pop
push
shll
les
add
sub
pusha
loopne
stos
stmxcsr
das
ljmp
mov
or
enter
into
cmp
into
clc
push
cmp
or
fnstenv
sti
mov
je
sub
iret
gs
movsb
stos
cmp
xor
mov
out
fistpll
addr16
pop
mov
scas
and
push
jbe
call
sub
lods
sbb
cmp
mov
in
leave
in
mov
add
xor
dec
pop
lea
sti
cmpsl
call
sub
cld
aas
xchg
imul
enter
sub
in
daa
cmp
mov
jae
mov
repnz
and
xchg
lds
jnp
mov
in
push
enter
push
inc
jmp
loope
mov
push
aad
xlat
mov
mov
scas
fcoms
mov
mov
out
stos
jnp
sub
jg
xchg
enter
pop
inc
pop
leave
int
sahf
or
pop
adc
cs
cmpsl
inc
push
adc
in
cmp
bnd
xor
push
test
and
lods
pushf
cli
pop
call
mov
outsb
mov
add
loope
or
mov
lock
mov
jb
xchg
enter
jns
ficomps
mov
lcall
jl
lret
faddl
push
aas
pop
out
lock
sar
adc
adc
push
sbb
pop
nop
and
mov
nop
sbb
add
out
in
add
fisttpll
mov
inc
sub
or
sub
ds
jle
and
pop
daa
in
aaa
mov
lcall
movsb
popa
adc
adc
adc
scas
push
or
fsubs
jp
jb
push
data16
xor
jl
in
fldcw
xor
sub
cmc
sbb
test
mov
pop
push
outsl
add
cmp
test
mov
aam
roll
mov
push
lcall
int3
add
test
leave
test
out
insl
or
adc
dec
mov
cmp
add
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
add
add
add
add
in
sbb
stc
mov
cmp
pop
sub
ja
aam
aas
pop
mov
stos
gs
inc
mov
add
mov
sub
dec
fmuls
mov
sbb
out
mov
loop
inc
add
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
add
add
int
aas
sub
jp
roll
push
sub
dec
inc
sub
xchg
sbb
ja
push
call
das
mov
mov
loope
push
xor
and
jns
addr16
sub
cmp
mov
cwtl
sbb
adc
adc
sbbl
sub
jl
fbstp
mov
jg
jns
inc
xchg
xchg
and
jl
inc
ret
stos
xor
outsl
and
xchg
xor
pop
adc
sub
jp
imul
ret
sbb
inc
leave
pusha
test
pop
cltd
sbb
movl
dec
mov
pop
mov
js
lahf
clc
inc
test
inc
pop
sub
and
mov
jno
pop
xchg
mov
in
xor
negl
dec
xlat
cmp
sub
ss
push
scas
hlt
mov
inc
lret
ret
xchg
out
pop
sub
mov
js
mov
pop
sti
jno
cmpl
test
cmp
sub
aaa
jne,pt
stc
ja
cmc
add
mov
in
in
std
pushl
lret
cmpsb
push
inc
or
adc
test
mov
jg
mov
and
leave
popa
fsubrl
adc
inc
movsl
divb
fbld
mov
dec
push
add
push
adc
push
adc
mov
adc
sub
lahf
xchg
pop
mov
adc
dec
and
mov
mov
mov
movq
mov
add
stc
out
add
sub
fcomp
loope
push
and
sbb
mov
ret
xchg
mov
movsl
sbb
loopne
testb
add
or
xor
pop
je
pop
int
shll
repz
popa
and
cltd
jp
push
js
jnp
mov
mov
jmp
es
sti
fwait
xchg
sbb
mov
xchg
dec
pop
xor
in
cmp
push
mov
or
into
nop
dec
mov
sbb
pop
push
stos
loopne
fidivs
lds
ret
out
sub
or
push
cmp
imul
jle
ljmp
pop
dec
inc
cmp
xlat
pop
and
mov
std
cmc
lret
jp
add
jnp
rcll
pop
rcrl
pop
insl
cld
cld
mov
outsl
add
rcll
xchg
adc
adc
fs
sub
sub
xchg
sbb
push
mov
jle
int
push
fdivr
out
test
mov
pop
mov
sbb
mov
lcall
mov
sub
jmp
ljmp
outsb
shll
aaa
add
loopne
lret
rol
push
test
in
insl
sub
cltd
popa
dec
sub
mov
int3
lds
inc
repnz
mov
mov
mov
rorl
fcmovnb
std
jb
pop
mov
lods
sbb
dec
adc
pop
sbb
leave
orl
pop
dec
mov
sahf
nop
jne
add
dec
mov
setb
dec
cmp
mov
adc
mov
ds
ljmp
test
movsl
test
pop
call
sub
pop
push
aaa
inc
mov
mov
mov
cmc
loope
and
fidivs
cmpl
fbld
out
test
jle
pop
add
add
cmp
mov
jno
inc
xor
push
fsubl
jl
mov
call
mov
push
adcb
scas
inc
cmpsl
lahf
and
loop
sahf
and
push
scas
lods
das
push
das
mov
push
ficompl
xchg
hlt
lds
shrl
ljmp
and
insb
sub
push
add
pop
lods
inc
mov
dec
xlat
dec
adcl
outsb
stos
mov
insb
lret
pushf
sub
xor
or
push
and
imul
gs
jbe
xlat
sbb
jnp
stc
es
call
adc
imul
int3
aaa
pop
cmp
and
push
jo
mov
pop
jns
fists
inc
fdivrl
ret
push
add
dec
ret
movsl
movsb
lea
sbb
dec
outsb
push
mov
mov
pop
insb
jnp
inc
or
call
addr16
cltd
mov
sarb
sbb
test
jo
pextrw
mov
mov
stc
and
dec
mov
cmp
push
in
mov
into
fwait
cli
inc
adc
lods
sahf
xchg
call
add
inc
xor
iret
adc
sti
orl
cmp
mov
push
cmpb
add
push
in
fwait
dec
decl
add
cmp
test
inc
pop
push
adc
inc
ret
movsl
mov
jp
call
pop
add
jbe
sub
and
shll
or
push
xor
fs
hlt
sahf
lock
xchg
xchg
addr16
sbb
fbld
adc
mov
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
pop
add
cmp
add
test
nop
push
cmpsb
jg
mov
loope
fbld
filds
pop
pop
or
dec
test
cmpsb
je
mov
xor
or
dec
scas
xor
and
stc
inc
xchg
dec
pop
lret
cmpl
jbe
ljmp
xor
push
arpl
push
adc
fstp
push
cli
test
pop
in
or
jmp
sub
cwtl
lcall
loope
lods
add
or
in
leave
sbb
popa
sub
movsb
and
and
mov
mov
inc
pop
cmp
shrl
cwtl
imul
es
sub
imul
in
das
pop
pop
js
dec
sub
imul
add
pop
mov
adc
add
and
ss
mov
daa
enter
test
aam
mov
test
sbb
incl
jbe
mov
movsb
test
repz
pop
cmpb
jmp
ljmp
repz
cmpb
into
push
pop
mov
dec
pop
lret
or
xor
sub
fwait
lods
push
inc
adc
push
stos
push
xchg
std
sub
cmp
bound
fidivrs
xchg
scas
sbb
jnp
xchg
orb
pop
les
mov
xor
push
sbb
mov
sahf
insb
and
sub
push
imul
ja
lret
inc
push
add
out
pop
push
jmp
sahf
inc
mov
cmpsb
dec
js
sbb
mov
pop
rclb
popa
jne
repz
lock
mov
sub
call
mov
fidivl
shl
sbb
pop
cmp
push
outsl
jne
lahf
pop
enter
mov
dec
or
arpl
cmp
hlt
shll
lods
data16
orb
addr16
imul
xchg
repz
sahf
jbe
out
aam
ss
pop
ds
lods
push
les
pop
mov
rcl
inc
xor
or
lahf
push
lods
stos
popf
push
test
jb
cmp
into
aad
sub
jp
int
mov
sub
in
repz
mov
in
in
fsubl
adc
adc
cld
mov
push
movsb
rorl
xor
inc
pop
pop
lods
xchg
xchg
lahf
fucom
inc
jne
sbb
fwait
push
cwtl
mov
imul
mov
insl
daa
cmpsl
pop
cmpsb
jp
out
mov
jge
xor
xchg
movsl
ret
mov
and
sbbb
fnsave
or
sbb
sub
imull
mov
pushf
add
mov
loopne
jne
mov
das
enter
xchg
mov
loopne
daa
xchg
mov
dec
mov
sbb
inc
xchg
arpl
stc
or
adc
mov
insb
push
dec
pop
nop
inc
int3
add
inc
nop
cmc
repz
xlat
jns
mov
xchg
dec
pop
fs
sbb
testl
mov
cmp
xchg
test
mov
int
ret
iret
aaa
pusha
hlt
out
jnp
mov
fdivl
stc
cmp
or
icebp
ret
fcomip
outsb
mov
adc
push
leave
shl
outsl
ja
and
push
cmp
and
and
cmp
xlat
data16
mov
out
int3
nop
daa
jae
xor
inc
push
pop
repz
mov
loope
daa
fwait
jecxz
jge
mov
jle
inc
sub
push
pop
outsl
jg
stos
jae
lahf
xor
int
mov
fwait
push
sub
aad
call
add
or
mov
data16
jno
out
or
mov
popa
lds
dec
dec
or
inc
test
xlat
dec
addr16
push
inc
sarb
xchg
sub
jae
rclb
mov
mov
jno
addr16
or
scas
out
popf
xor
into
dec
stos
sarb
or
aaa
cmp
lahf
je,pt
scas
and
subl
scas
cmp
stc
arpl
rcr
cs
push
xor
dec
mov
jb
mov
in
and
xor
mov
ret
cmp
or
mov
or
ljmp
pop
push
fwait
aas
sbb
or
jae
xchg
add
stos
mov
mov
push
data16
inc
mov
je
mov
push
lods
push
fs
sub
leave
cmp
mov
int3
lret
ds
es
loop
add
xchg
mov
dec
aad
jl
test
cli
cltd
inc
or
sti
negb
cmp
fsubrl
xor
sarl
out
cltd
fistpll
pcmpgtb
fnstenv
fsubrl
repz
sub
xor
pop
inc
dec
xchg
mov
sub
iret
shlb
push
shlb
mov
xor
notl
rorl
xor
mov
xchg
jmp
iret
test
dec
roll
jbe
jne
rcrb
mov
dec
mov
jns
mov
mov
mov
xchg
mov
xor
mov
jne
cwtl
loop
jmp
daa
ja
outsb
lahf
sub
inc
sbb
gs
fwait
mov
and
sbb
fs
iret
mov
idivl
mov
xchg
xor
sbb
xchg
sahf
xor
addr16
aad
or
mov
pop
mov
jae
add
jne
sbb
pop
test
push
cmp
mov
hlt
dec
xchg
push
xchg
sahf
sbb
jp
xchg
std
int3
dec
outsb
mov
xacquire
xchg
adc
push
or
sub
push
sahf
jae
jg
out
push
and
sbb
sbb
dec
dec
int
inc
fdiv
fwait
outsl
dec
cmp
mov
mov
daa
les
es
in
lret
jg
and
sbb
repnz
roll
fldt
mov
and
mov
icebp
lods
xlat
jp
insb
mov
adc
test
mov
inc
cli
cld
lret
adc
insb
fisttpll
shld
jno
loop
mov
adc
push
add
xorb
pop
dec
lcall
cmp
hlt
or
push
sbb
pop
test
flds
inc
insb
cld
mov
mov
dec
outsl
ja
cmp
dec
xchg
or
lods
pop
mull
shr
lea
cmp
jns
out
out
inc
or
insl
pushf
jne
inc
inc
xchg
pushf
sbb
push
mov
orl
sub
inc
les
add
into
ja
cmpsl
lcall
hlt
pop
stc
dec
jno
and
fwait
sbb
enter
subb
mov
sahf
and
add
mov
adc
sub
jbe
ja
jnp
scas
adc
out
les
pop
test
sbb
mov
and
jnp
fcmovne
sub
lahf
mov
pop
adc
fwait
pop
mov
mov
out
xor
arpl
pop
int3
and
jp
addl
adc
popf
movsl
jns
dec
add
and
jo
repz
shrb
mov
enter
mov
imul
out
push
mov
data16
fisttpl
push
popl
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
add
add
add
add
aad
in
cld
cli
shl
adc
adc
sbb
and
aas
dec
add
jp
add
cli
adc
xchg
push
jbe
es
cmp
mov
add
jo
es
ljmp
js
mov
pop
mov
shlb
mov
cmp
icebp
push
ds
sbb
cli
dec
ljmp
sbb
xor
sbb
pop
adc
jbe
fwait
xor
rcrb
arpl
mov
inc
and
arpl
sti
and
mov
pop
data16
inc
add
fidivs
xlat
hlt
out
lcall
imul
cmp
addb
lods
mov
dec
lods
inc
icebp
fucomi
pop
adc
push
cltd
pop
enter
inc
jmp
push
dec
cmpsb
std
pop
sub
in
or
out
push
dec
or
add
mov
call
xchg
sarb
cmp
mov
in
in
mov
sbb
mov
stos
scas
xchg
fcoml
adc
push
add
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
out
add
in
or
add
inc
movsl
push
and
mov
pop
lcall
mov
popf
popf
js
xchg
mov
inc
aad
mov
insb
das
jnp
mov
add
xchg
lds
or
sbb
jae
mov
pop
mov
or
shr
out
xchg
sahf
stos
cmpsb
inc
pop
mov
ss
add
sub
jg
mov
pop
or
push
adc
sbb
rcrb
mov
jmp
fnstcw
sub
jo
pushf
nop
dec
test
inc
add
mov
push
mov
outsl
stos
mov
fsts
shll
ret
mov
dec
lds
sbb
mov
mov
push
mov
cld
add
inc
addr16
sbb
pop
mov
jp
mov
dec
mov
iret
mov
or
adc
into
inc
lods
out
ljmp
imul
dec
dec
adc
pop
fsts
movsb
lock
out
pop
cwtl
mov
sbb
sarb
push
loope
js
mov
imul
out
ret
xlat
fstp
push
jl
int
inc
dec
pop
jbe
scas
inc
lods
jg
pushl
stos
mov
cmpsb
insl
or
lea
sub
enter
rorl
cmc
adc
dec
hlt
adc
push
xor
lea
inc
rorb
jg
add
lahf
push
or
and
fwait
pop
dec
mov
xchg
clc
cmc
mov
xchg
xlat
mov
rclb
rcl
test
mov
clc
js
andb
inc
test
sbb
fistps
andl
dec
dec
je
jmp
mov
or
in
ret
xorb
sub
add
pop
mov
and
xchg
int
xchg
or
cwtl
sbb
enter
and
repnz
leave
and
push
ljmp
xor
mov
push
xor
pushw
dec
outsb
loop
scas
cmc
sub
test
push
xchg
xor
mov
in
xchg
inc
das
jno
daa
in
gs
push
cmp
stc
dec
sbb
ret
fs
ret
mov
fisubrs
fmuls
imul
sbb
mov
adc
or
out
inc
ret
cmpsb
shlb
aam
dec
push
out
gs
in
clc
roll
push
and
jmp
sarb
incb
add
pushf
addl
mov
xchg
cs
mov
sbb
sub
repnz
mov
out
ds
add
sub
cltd
out
test
shll
pop
and
jle
and
add
cmpl
sbb
mov
sub
dec
mov
xchg
movsl
add
loopne
add
shll
mov
aaa
xchg
mov
stos
shll
je
daa
jns
mov
or
loope
daa
fistpll
insl
pop
xchg
lret
and
repnz
fcmovb
or
aaa
pop
sub
jbe
scas
inc
out
adcb
lds
xchg
lds
jmp
mov
adc
jecxz
notb
test
jbe
jmp
movsl
stc
xor
gs
mov
loopne
lahf
push
add
lret
and
dec
mov
lock
lret
cmp
cmp
or
mov
adc
int3
push
and
inc
mov
mull
sbb
rclb
test
push
jne
clc
pushf
mov
in
out
cmpsb
ds
mov
push
ret
xchg
push
test
sbb
es
or
je
xchg
insb
adc
pop
mov
mov
repz
dec
pop
pop
mov
addr16
arpl
sub
rorl
divl
or
js
pop
andb
push
icebp
and
fcomp
xchg
pushf
xchg
mov
in
jecxz
addr16
inc
add
push
in
lcall
or
js
outsb
xchg
mov
fcompl
dec
pop
push
inc
data16
mov
maskmovq
idivl
mov
jmp
shrl
std
adc
cmpsl
mov
cmp
adc
les
sbb
iret
test
ret
xchg
dec
mov
in
popf
mov
fprem
jns
jnp
iret
in
mov
cmp
data16
or
mov
pop
or
xchg
testb
push
mov
lret
shlb
in
xchg
add
test
mov
dec
xchg
js
into
call
daa
push
mov
fcmovnb
popf
mov
sarb
jb
repnz
fldcw
hlt
dec
inc
ds
and
sarb
xor
clc
mov
repnz
cmp
cmpsl
xor
and
cmp
jns
adc
lahf
hlt
pushf
lcall
cmp
mov
cs
sub
xor
lods
and
adc
mov
arpl
inc
mov
fnstenv
int3
lods
xchg
mov
lods
ja
fcmovnb
cmp
cs
stos
faddl
sahf
pop
andl
dec
in
mov
fwait
test
in
and
xchg
stos
es
dec
mov
jae
cmpb
push
xor
dec
movsb
dec
imul
cmp
loopne
je
lret
iret
je
loopne
mov
repnz
xchg
aas
cmp
xchg
imul
sub
adc
lods
jb
inc
lsl
inc
fs
mov
cmp
in
insl
xchg
hlt
pop
mov
ret
ljmp
xor
popa
hlt
stos
outsl
xlat
jecxz
jle
inc
mov
sbb
sub
stc
lahf
push
or
lcall
jb
xor
mov
jle
jo
pop
sti
js
xchg
and
or
jnp
data16
jecxz
popf
jae
cmpsl
sar
mov
fs
rcrl
outsb
jge
xchg
mov
das
push
adc
mov
add
sub
cld
out
push
aam
sbbb
in
mov
mov
mov
gs
push
dec
pop
push
push
pop
mov
inc
rcrb
adc
ja
fwait
or
gs
push
or
sbb
jbe
inc
inc
icebp
sub
movsb
jbe
mov
rcrb
dec
popf
mov
push
gs
mov
add
ljmp
std
pop
push
mov
cli
dec
xchg
mov
mov
in
xor
adc
sahf
mov
xor
dec
mov
lret
int3
or
addr16
cmp
sti
icebp
pop
ret
adc
jge
movsl
sub
clc
adc
stos
mov
jns
outsb
test
loopne
xchg
pop
inc
inc
pop
rcll
icebp
fnsave
cwtl
ret
or
jb
jge
std
jecxz
cvtps2pd
pop
pop
sub
cwtl
fdivl
mov
dec
pop
ss
or
inc
adc
inc
sub
mov
fs
jp
test
add
das
in
adc
in
fistps
xor
or
movsb
push
pop
xchg
ja
fdivrs
hlt
push
enter
fstl
shll
xor
xor
imul
add
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
clc
add
add
add
add
mov
xor
pusha
popf
xor
filds
xor
rolb
in
lea
lods
jmp
add
cmpsl
push
adc
sub
es
out
lcall
mov
decb
mov
mov
mov
mov
sub
add
jl
pusha
lods
jg
jl
stc
jge
ljmp
add
push
dec
ret
adc
cld
fsubr
cmp
popa
jns
test
mov
jb
clc
xchg
les
movl
in
in
inc
sub
mov
push
repnz
xchg
in
mov
insb
jmp
pop
push
mov
mov
push
aad
jl
jae
sub
sbb
pop
loope
test
and
imul
jae
sub
mov
loopne
mov
jnp
and
pop
and
orb
add
shl
fnstsw
mov
pop
cld
mov
add
pop
pop
and
dec
nop
mov
pop
cmpsl
cs
mov
pushf
cmc
sahf
ljmp
cmpsl
and
cmp
mov
add
inc
cwtl
cld
sbb
sub
mov
je
or
pop
in
sti
push
icebp
mov
ret
mov
mov
adc
mov
test
pop
inc
sub
in
or
push
push
jl
xor
push
adc
scas
inc
lahf
xor
fistl
inc
mov
pop
sti
pop
daa
inc
es
into
mov
pop
imul
cmp
ud0
jmp
jno
jl
jge
xchg
and
movsl
stos
loopne
and
and
js
push
add
cmpsb
negl
scas
sbb
sti
ret
loope
inc
lods
add
adc
arpl
popf
std
cmpsb
out
call
lret
xor
sbb
mov
in
or
mov
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
add
add
add
add
push
gs
jg
jge
sbb
cs
daa
dec
rcrl
or
pop
dec
mov
enter
jmp
lock
dec
or
call
ret
fmulp
cmp
xchg
ja
dec
xchg
mov
jp
xchg
int3
outsb
lds
pop
mov
stc
add
jo
leave
xchg
js
rcll
sahf
dec
inc
sbb
addl
inc
pop
jecxz
add
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
add
add
add
scas
test
pushf
bound
mov
xchg
mov
pop
dec
xor
mov
lcall
out
enter
xor
in
in
adc
std
xchg
cmc
test
push
cmp
adc
fisubl
mov
xchg
cltd
stc
std
loope
pop
nop
test
lea
fwait
or
dec
add
fimull
andb
fstp
shl
xchg
lret
lods
out
das
xchg
add
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
sgdtl
add
dec
movsl
mov
mov
neg
mov
or
cltd
mov
xchg
hlt
xor
insb
pop
xchg
xchg
xor
fsubrp
in
mov
cmp
sub
movsl
lods
pop
sub
jnp
push
push
push
andb
or
sti
xor
sbb
ret
pop
cli
or
mov
ljmp
cmp
mov
cmp
push
ljmp
arpl
mov
mov
hlt
dec
xor
adc
xchg
push
xchg
sub
sub
psubd
push
test
inc
jb
std
addr16
bound
loopne
sub
out
aad
push
xor
std
sub
and
pop
cli
lret
lret
and
add
fbld
mov
iret
sub
lcall
sahf
cli
mov
aas
les
add
mov
test
fadd
add
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
add
add
add
add
push
out
insl
mov
mov
pushl
lods
fs
adc
rcll
in
stos
ret
jbe
repnz
jo
je
lahf
inc
sbb
jge
imul
add
idivb
imull
das
jns
fisubrs
inc
insb
add
dec
push
mov
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
aad
add
mov
fwait
aad
jns
xchg
mov
filds
add
adcl
aas
pop
lea
daa
mov
js
flds
and
xchg
sub
xchg
in
mov
daa
inc
in
in
lock
jg
rcr
pusha
xchg
daa
cmp
insl
aas
daa
mov
cmpl
jo
dec
and
bound
les
push
push
and
or
outsl
xchg
stc
outsl
adcl
ja
stos
and
sub
imul
sub
inc
mov
stos
and
push
popl
push
cld
imul
insb
es
sbb
and
pop
and
outsl
loopne
pusha
outsl
mov
aam
add
call
mov
xor
imul
lds
aad
inc
out
sbb
xchg
fs
dec
aad
mov
loope
flds
adc
or
xchg
push
sbb
fildl
push
rcll
add
sub
xchg
or
shlb
sub
pusha
ds
sub
mov
xchg
dec
call
or
cwtl
aaa
pop
xlat
jb
sbb
les
push
xchg
sub
adc
jecxz
std
je
icebp
leave
sbb
sbb
pop
daa
les
mov
iret
mov
xor
inc
out
xlat
pop
addb
idivl
sahf
sub
std
inc
push
stos
xchg
cmp
mov
mov
and
in
inc
xchg
or
mov
imull
leave
sub
daa
fneni(8087
ja
add
stos
adc
add
fwait
cmp
out
lods
add
shlb
inc
xchg
incl
out
loop
loopne
frstor
aam
dec
js
cltd
mov
rcrb
loope
mov
xchg
aad
ljmp
fiadds
ljmp
push
shlb
adc
decb
pinsrw
pop
adcl
incl
testb
bswap
cs
push
push
dec
leave
mov
add
test
jle
jne
jb
mov
dec
cmp
adc
lods
test
mov
loope
add
or
lock
push
and
xor
sub
adc
outsl
test
xlat
dec
int
and
ret
dec
dec
inc
pop
mov
ds
imul
ret
negl
int3
and
lock
lahf
pusha
push
jg
sahf
push
bswap
pop
loopne
aaa
xchg
lock
lahf
outsl
sub
inc
and
jmp
clc
testl
mov
adcl
mov
test
inc
fdivs
pop
dec
in
sub
add
fnstenv
cmc
nop
lea
and
icebp
or
push
inc
movaps
or
pop
jl
dec
xlat
or
es
xor
jl
or
mov
ss
addr16
lret
inc
cmpsl
cmpsl
cmp
mov
jg
push
push
xor
test
das
cmp
cmpsb
dec
bound
mov
push
xlat
push
imul
pop
cld
dec
or
mov
jecxz
xor
sbb
leave
jo
repz
clc
mov
pop
fildl
dec
subl
xchg
cmc
aaa
jnp
out
cli
lods
dec
mov
lock
mov
shl
gs
inc
leave
mov
and
mov
mov
mov
mov
pop
roll
mov
mov
movsb
outsb
stc
jns
std
imul
adc
lret
xor
add
pop
imul
adc
mov
daa
mov
mov
mov
adc
push
and
ja
jg
lods
fisttps
inc
pop
ss
xor
adc
inc
mov
addr16
cs
aam
les
pop
mov
jecxz
ficoml
andl
ljmp
int3
inc
in
int
or
cmpl
pop
jbe
jne
or
pop
mov
out
dec
xchg
jnp
push
cmp
sbb
cmp
jnp
and
pusha
xchg
mov
mov
iret
jno
push
jo
pop
jg
dec
xor
data16
cs
scas
pop
mov
ret
nop
js
mov
test
mov
fwait
inc
dec
lock
andl
mov
or
add
decl
mov
mov
xor
push
fisttpl
adc
mov
fbld
lods
pop
in
dec
adc
add
negb
or
or
je
cmp
jns
dec
sbb
jno
aam
mov
fcomps
sti
inc
pusha
aaa
jnp
mov
shlb
js
cmp
mov
push
fnstenv
mov
push
out
test
pop
pop
pop
mov
cmp
jmp
fs
or
lret
pop
adc
push
add
repz
pop
divb
sub
add
mov
lahf
test
lret
mov
mov
or
mov
or
sub
jmp
and
pop
pop
ret
and
push
pop
push
mov
lock
cmp
mov
jnp
stos
test
xchg
dec
push
jnp
xor
or
jge
inc
xchg
lds
out
jge
jmp
sub
sub
ficompl
sbbl
or
push
cmpsl
xchg
lcall
push
insl
add
shrl
dec
xchg
cwtl
cld
in
shlb
mov
sar
testb
sarb
fisttps
pop
sahf
scas
sbb
pusha
loopne
mov
fmuls
fstl
mov
inc
inc
ret
add
inc
mov
xchg
dec
adc
in
ret
shlb
sub
test
mov
push
pop
pop
mov
push
inc
mov
mov
push
and
cmp
mov
jae
data16
cmp
in
loop
adc
mov
repnz
scas
shll
cmp
xorl
inc
mov
enter
ret
cmp
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
add
cwtl
sub
mov
dec
stos
xor
out
shll
sub
adc
subl
es
fmulp
insb
stos
cmp
ss
ljmp
sub
subb
xchg
int
inc
clc
mov
sub
mov
mov
scas
cltd
in
std
push
in
or
je
aam
add
ss
mov
fwait
pop
insl
stos
aas
arpl
adc
xchg
stos
sbb
sbb
cltd
int
cld
les
jbe
loop
add
inc
mov
jbe
or
test
mov
sbb
mov
out
loop
fsubrs
popf
mov
cmc
pushf
das
mov
mov
adc
push
js
loope
and
adcl
lock
fcmovne
push
stos
mov
std
cmc
and
sub
shl
ror
mov
out
add
pusha
cmpsb
sub
jmp
aas
jns
clc
and
popa
imul
push
ret
in
cmp
cmp
sbb
mov
add
fcmovu
and
adc
test
in
ret
sub
mov
pop
push
jge
repz
jne
pop
push
lds
mov
lock
cmp
sub
out
mov
push
aam
mov
lret
fdiv
push
xor
and
push
xchg
je
lret
les
jecxz
les
pop
orb
mov
sbb
dec
add
jge
sub
or
push
movsl
mov
jmp
int
icebp
cmpsl
xchg
jmp
xchg
stos
in
push
dec
std
lret
adc
push
xor
out
call
inc
repz
in
mov
aaa
jecxz
dec
jg
dec
xor
rcpps
jecxz
inc
mov
inc
adc
push
and
sub
xor
mov
xchg
out
pop
adc
lds
out
add
cmp
int3
fwait
xor
cmpsl
mov
out
dec
and
hlt
mov
mov
jno
xchg
dec
and
xor
jl
xor
mov
or
stos
aam
add
push
or
rcr
orl
sub
fninit
cmpsl
push
imul
pop
xor
mov
sarl
cmc
cmp
in
repnz
cmp
gs
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jl
add
test
add
cmpsl
sbb
dec
jae
lret
mov
pop
test
subl
xor
arpl
loope
cwtl
decb
ljmp
test
lds
push
pop
or
iret
mov
int
and
mov
push
push
lock
xchg
jl
xchg
xchg
lcall
call
rorb
es
add
xchg
lods
or
aaa
sti
pop
bound
sub
inc
out
das
popf
dec
cli
xchg
add
dec
call
enter
daa
insl
lods
mov
imul
sti
dec
cld
sub
jle
or
in
pop
mov
test
cvttps2pi
insb
lods
push
cmova
sub
mov
divb
mov
mov
bsf
xchg
data16
dec
bound
cmp
gs
jmp
and
sti
sub
xor
xchg
mov
dec
mov
int
xchg
mov
ss
adc
subb
sti
ljmp
cmpsb
jb
loope
ret
out
pop
fbstp
adcb
pop
mov
rolb
xor
mov
inc
cmpl
addl
cli
push
push
dec
test
lds
xchg
jg
push
jo
subb
sub
push
mov
bound
ljmp
lahf
mov
pop
or
inc
xor
cs
push
mov
jbe
or
stc
fucomip
in
jae
data16
popa
lret
mov
dec
xchg
jb
daa
mov
and
pop
xor
push
cld
or
stos
dec
jno
ljmp
dec
pop
mov
std
cmp
repnz
leave
stos
push
add
das
ret
outsb
xchg
mov
mov
insb
mov
movsb
cmpsb
xor
mov
cmp
push
mov
popa
jbe
sub
aam
stc
shll
add
out
outsb
dec
popa
adc
ret
push
cmp
mov
ds
adc
sti
lret
scas
sti
cmpsl
or
loope
and
cltd
and
inc
arpl
movsl
lods
jge
adc
add
sbb
es
adc
lcall
ret
fadds
mov
dec
stc
cmp
ret
ret
or
sub
insb
xchg
push
lcall
mov
sub
mov
lcall
lods
and
mov
cmpl
cmp
adc
shrl
sub
lock
push
roll
mov
aam
xor
adc
cs
dec
fiaddl
pop
xor
inc
out
repnz
rol
add
cmp
pushf
jb
mov
or
sti
mov
jecxz
pop
lods
push
add
ljmp
fisttps
cli
sbb
aas
test
or
out
or
sbb
push
sbbb
loopne
leave
xchg
adc
daa
int
or
or
out
or
pop
push
push
cmp
push
aas
ror
push
int3
push
add
dec
jbe
mov
pusha
loopne
rcrl
adc
leave
fsubs
xchg
insl
xor
and
lds
cltd
add
sahf
in
xor
add
and
mov
dec
inc
leave
enter
jmp
xchg
mov
pop
xchg
mov
lock
mov
jne
xchg
jo
sub
mov
ljmp
jnp
add
pop
and
in
stos
cmp
xchg
sub
repz
iret
lea
add
push
pop
cmpsl
lret
dec
sbb
pop
and
jl
insb
push
sbb
push
mov
icebp
pop
jg
pop
jecxz
and
dec
test
test
in
call
addr16
cltd
std
jo
les
into
mov
mov
sub
xor
sbbl
call
xlat
xor
mov
rclb
stc
arpl
shlb
aas
cmp
aam
nop
mov
xor
sbb
inc
fwait
push
icebp
ss
shl
mov
fwait
push
cltd
add
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
add
add
add
fwait
loopne
or
dec
das
dec
lret
jb
jecxz
jns
shlb
and
add
fcmovbe
daa
aam
ss
nop
sar
mov
out
mov
xor
stos
inc
pusha
fsts
hlt
das
test
jl
scas
xchg
test
cmp
adc
ljmp
jnp
lods
xchg
jns
cltd
mov
sub
addl
aad
or
cld
mov
pushf
shll
sbb
lcall
shll
xor
pusha
arpl
xor
fs
icebp
dec
mov
test
pop
xchg
ljmp
pop
pusha
scas
add
mov
sbb
nop
inc
rolb
aaa
nop
mov
stos
push
sbb
hlt
xor
mov
xor
mov
ret
jns
sub
out
push
push
and
add
test
out
add
pop
xchg
jl
repnz
dec
aam
dec
or
das
xchg
add
das
jl
and
sub
dec
lods
dec
dec
bound
and
pop
inc
in
insl
or
or
push
jnp
or
dec
gs
mov
shl
pop
incb
orl
ret
mov
sub
adc
mov
cmp
jo
pusha
in
xchg
dec
sub
xchg
sbb
add
mov
ds
add
fcoms
mov
repnz
xor
ds
jo
cmp
sbb
dec
nopl
dec
clc
inc
addr16
out
mov
scas
mov
pop
inc
pop
pusha
loope
and
fldt
rclb
mov
or
pop
out
popa
aaa
pop
cmpb
dec
aas
sbb
movsl
out
inc
inc
test
gs
lods
pop
pop
lcall
ficomps
xchg
push
aam
les
pop
ret
imulb
leave
clc
adc
pop
clc
ret
cld
jg
jnp
adc
les
xchg
lock
sub
mov
pop
int
jge
mov
test
or
or
dec
dec
fmuls
rcrb
out
icebp
inc
stos
sbb
inc
setno
sbb
jnp
mov
mov
adc
mov
fs
cmp
xor
sar
in
ljmp
cs
in
mov
loopne
fstps
mov
xor
cmp
jno
shrl
and
sub
not
loopne
sbb
repnz
mov
sarb
push
fcomps
and
hlt
or
jmp
ja
imul
sub
cmpsl
insl
jb
dec
adc
dec
and
jl
add
add
lret
pop
imul
xchg
call
inc
shl
or
aad
mov
inc
je
mov
adc
sub
dec
xchg
jecxz
outsb
push
cmc
imul
mov
push
pop
out
cld
sbb
push
dec
jbe
repnz
add
and
pop
insb
aad
lret
fcoms
in
mov
push
or
mov
mov
mov
out
lock
testl
rolb
outsb
push
sbbb
rolb
push
mov
in
out
add
push
push
sub
adc
mov
scas
ret
loope
fnsave
mov
nop
inc
add
data16
pop
push
ret
xchg
lcall
inc
ffree
inc
inc
pusha
or
call
xchg
lret
dec
jle
jne
pop
out
fidivl
fisttpll
adc
jne
and
mov
in
lods
outsb
xchg
and
dec
mov
mov
mov
mov
jbe
lahf
repz
sbb
aad
outsb
add
mov
add
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
add
inc
or
add
jo
inc
mov
push
das
cwtl
xor
aaa
xchg
inc
mov
xchg
pop
mov
aas
insl
vpsubsw
pop
push
jns
xor
mov
mov
nop
pushf
jmp
loopne
stc
pop
pop
cmp
push
dec
fcoml
push
hlt
stc
jl
and
cmp
int3
jo
add
adc
inc
cmpsl
mov
xchg
divb
push
push
push
adc
push
test
popa
inc
xor
fldenv
and
add
sub
mov
mov
dec
loop
cmp
lcall
inc
mov
lock
cmpsb
push
sub
push
dec
mov
push
dec
pop
and
in
inc
jl
mov
push
cmp
mov
and
nop
pop
inc
scas
out
hlt
pop
rcll
daa
jns
xor
test
mov
loop
or
nop
data16
xor
mov
popf
data16
shl
pop
xchg
add
daa
aaa
fisttps
fcmovb
int3
xchg
in
aaa
mov
nop
shlb
loop
imul
int3
cmpsb
mov
arpl
jecxz
push
sub
in
inc
inc
scas
mov
scas
fmulp
sub
daa
fs
pushf
jp
pop
fiaddl
pop
ficomps
xor
and
sub
out
mov
xor
adc
push
cltd
cmc
jecxz
out
in
adc
dec
arpl
out
push
or
stc
xchg
out
jne
movsl
nop
loop
outsl
mov
shlb
pop
loop
jg
xor
mov
gs
lock
pop
xor
sbb
mov
dec
clc
push
push
outsb
pushf
lock
movsb
out
aaa
lahf
shll
aas
inc
out
dec
daa
das
add
shl
xchg
cmp
xor
ret
sub
and
leave
nop
mov
dec
gs
add
hlt
inc
mov
push
mov
xchg
add
fcompl
shll
cmpsb
mul
outsb
jbe
movb
sub
test
or
mov
sub
and
push
inc
jge
adc
push
pop
sub
pop
mov
lcall
iret
scas
inc
xor
loop
fdivrl
jnp
in
cwtl
ficoms
aam
mov
mov
sahf
mov
cmp
adc
stos
or
loop
sar
orb
neg
mov
mov
jge
loopne
cmp
mov
ret
push
xchg
lods
sbb
hlt
xor
jge
mov
ror
in
shl
test
dec
movsl
mov
cli
repz
fstl
sbb
sbb
je
adc
mov
sub
and
js
cltd
fisttps
sbb
pop
jnp
fs
je
or
popf
iret
dec
andl
fistl
xchg
jg
scas
shll
imul
push
jns
shlb
loope
pop
hlt
stc
subps
push
fdivl
aaa
mov
or
insb
xor
inc
xchg
dec
xorl
repnz
test
jmp
icebp
or
addr16
lahf
movsl
mov
mov
cmp
pop
push
push
mov
into
jge
jmp
mov
fldcw
hlt
cli
mov
cmp
push
xchg
es
dec
mov
push
sub
aad
sbb
jmp
data16
lods
in
xchg
xchg
imul
xor
std
ss
lock
gs
mov
repnz
fisttpl
inc
xor
pop
mov
push
int
add
jo
jae
in
test
shlb
pop
cmp
mov
fimull
hlt
shrb
std
mov
xor
cmp
push
and
mov
out
sub
cmpsl
test
jne
ret
dec
jno
cmpb
lea
in
cmp
sbb
clc
and
push
outsl
ss
hlt
imul
fsubrs
sti
xchg
mov
mov
nop
pop
xor
test
movsb
dec
pop
inc
mov
or
push
aad
dec
cmpsb
xor
daa
je
outsl
hlt
xchg
inc
fisubrl
fstp
cld
shrl
and
jmp
jo
cltd
fwait
pop
xchg
pop
out
jno
cli
mov
adc
adc
fwait
xchg
push
and
push
daa
push
scas
negb
fcmovu
cli
fbstp
loop
mov
cld
xor
pop
ljmp
inc
add
hlt
out
je
adc
cmp
fimull
out
cmpl
fwait
jnp
jecxz
lods
call
test
cmp
xchg
and
testl
iret
mov
mov
fisttpll
mov
ret
cli
mulb
cmp
dec
orb
pop
dec
mov
fdivr
jmp
xchg
inc
mov
gs
push
das
adc
cmp
ljmp
stc
sbbb
cmpsl
sub
aam
faddp
sti
or
push
fdivs
aad
pop
add
and
repz
sub
jmp
lea
aad
pusha
push
sbb
orl
imul
les
cmpsb
jmp
lcall
cmp
jno
jp
push
jno
mov
leave
fwait
mov
cmp
notl
and
rol
in
or
cmpsl
xchg
jo
aad
sub
adc
dec
pushf
popa
xchg
addl
xor
sti
negl
movsl
mov
xor
mov
es
cmp
mov
adc
add
addb
test
das
jmp
shlb
orb
shll
mov
push
sub
sub
xchg
cmp
into
test
adc
and
push
imul
aam
or
push
fstl
push
dec
rcr
out
jp
and
and
fwait
pop
cwtl
push
push
stc
pop
scas
lahf
mov
pop
dec
xlat
leave
and
shrb
iret
jbe
jb
mov
rcll
and
fisubrs
dec
pusha
push
jg
cmpsb
mov
jae
clc
lcall
jge
push
mov
mov
jecxz
adc
and
and
jmp
sbb
lcall
jb
or
out
out
pop
inc
stc
push
sbb
xchg
notb
cld
fmuls
cli
add
cltd
and
test
enter
add
mov
insl
mov
pop
aas
mov
mov
cmp
xchg
es
ret
icebp
push
jno
jne
in
push
std
stos
lret
lods
mov
dec
dec
mov
roll
dec
jbe
dec
js
lcall
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
add
add
test
push
xor
gs
je
pushf
inc
int
outsb
aaa
popa
jne,pt
test
in
jbe
push
bound
test
movb
lds
jg
movb
repnz
adc
adc
stos
cmc
fsts
xchg
sbb
fisubrs
arpl
and
adc
inc
mov
xor
mov
scas
and
adc
mov
lret
cmpsb
jnp
xlat
fs
mov
repnz
je
daa
gs
movsl
mov
addl
outsb
add
push
sahf
insl
arpl
insl
je
pop
xorl
jne
mov
adc
xor
rcrl
pop
and
test
sub
jno
mov
xchg
sub
mov
xor
ret
xor
sbb
dec
scas
insb
and
test
sub
inc
and
ja
test
into
pushf
pop
sub
inc
aad
mov
sbb
push
adc
int3
addr16
imul
mov
pop
lcall
int3
dec
jne
cmp
loop
and
rorb
jp
cli
add
add
add
and
jnp
lret
fsubrp
xor
fisttpl
test
mov
jmp
pop
jnp
adc
dec
popa
jae
dec
xchg
call
mul
and
jp
xor
pop
pop
push
cmpsl
jecxz
push
sti
sbb
cmp
mov
pop
inc
pop
rcr
daa
mov
lods
mov
fnstsw
sti
rcll
pusha
shll
clc
xor
cmp
inc
adc
lret
mov
mov
xchg
in
out
aam
rorb
cmpb
xchg
cmp
dec
xor
mov
sub
push
shll
stc
pushl
or
xor
and
iret
rcl
and
inc
mov
push
data16
stos
imul
and
insl
sub
add
popf
xor
sbb
ficomps
inc
leave
adc
dec
pop
mov
push
test
test
out
inc
inc
dec
mov
enter
jmp
sbb
sahf
add
mov
and
pop
scas
ljmp
cmp
and
lcall
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
add
add
dec
push
add
out
jae
imul
lds
pop
mov
xchg
fwait
push
fdivl
mov
jns
cmp
mov
shlb
push
mov
adc
push
in
sbb
fimuls
inc
and
dec
popf
out
repnz
add
cmp
mov
jnp
pushf
jecxz
sbb
pop
lock
xor
push
xchg
add
popa
int
mov
adc
push
mov
sub
outsb
dec
mov
xchg
jnp
and
popa
fst
rorl
pusha
xchg
or
fldt
dec
inc
push
mov
aam
repz
adc
fisttpll
mov
xchg
in
adc
es
outsl
mov
sub
xlat
cmpsl
mov
push
out
mov
stos
mov
int
das
mov
adc
pop
imul
sub
mov
pop
fwait
movsb
add
cwtl
insb
or
add
pop
notl
fnstcw
int
mov
cmp
mov
int3
js
fchs
aaa
jp
jb
gs
push
xchg
cmc
mov
sbb
push
hlt
xchg
inc
mov
sbb
loop
lret
enter
xchg
mov
imul
lret
pop
jge
in
orl
insb
cwtl
movsb
sha256msg1
jnp
add
cmp
push
mov
add
push
fsts
pop
jb
adc
loopne
enter
pop
mov
mov
or
test
mov
and
pusha
in
jb
cmp
xchg
jecxz
test
mov
rcrb
cwtl
push
in
mov
orl
jbe
leave
xchg
push
lock
pop
in
or
lret
scas
lret
in
sbb
mulb
addr16
and
icebp
sbb
add
push
sbb
xchg
lock
adc
jnp
jmp
xor
xchg
ja
daa
mov
mov
sub
and
lods
into
dec
imul
mov
out
bound
loop
add
push
pop
aas
xorb
mov
loop
push
sub
ljmp
movsb
lret
insl
fdivs
lahf
pop
pushf
xor
push
popa
lods
jge
or
test
in
jno
push
pop
test
pop
jae
cmp
jb
fidivs
cmp
cmpsl
pop
imul
push
das
xlat
mov
mov
cmp
clc
push
sub
xchg
lods
mov
jp
pop
mov
push
jo
adc
inc
push
dec
mov
leave
test
std
mov
std
sub
pop
cmp
test
loopne
xor
test
xor
aam
dec
out
leave
add
mov
rcrb
xchg
lahf
cs
stc
outsl
in
jg
mov
or
insb
ds
xchg
mov
cltd
add
pop
aaa
and
ds
and
xor
xor
cmpsb
lret
es
fcoms
jb
out
pop
mov
mov
xchg
pop
clc
hlt
fld
push
int3
lods
insb
mov
and
lret
scas
sub
xor
repnz
mov
or
push
fs
mov
add
imul
jb
sbb
nop
dec
xchg
or
pop
pop
push
nop
test
add
inc
cltd
sbb
xor
or
mov
xchg
sbb
and
xor
xor
jge
or
push
or
push
movsl
adc
dec
pop
pop
push
outsl
or
in
cmpsl
mov
arpl
in
add
mov
cltd
mov
adc
gs
pop
loope
hlt
mov
fdivs
out
jecxz
mov
jb
rorb
ret
pop
add
das
lock
xchg
ljmp
sub
pop
xchg
or
xchg
mov
mov
iret
sbb
les
xor
iret
enter
lock
xchg
sbb
mov
push
adc
addr16
push
xchg
fdivs
stc
mov
mov
cmc
mov
or
lret
mov
and
push
or
push
push
cli
popa
gs
test
push
stc
push
sub
xchg
mov
cmpsb
sbb
xchg
fsub
sub
xlat
push
test
out
dec
out
mov
repnz
dec
sbb
setb
xor
test
aam
xchg
in
mov
lea
mov
test
gs
pop
mov
dec
jo
jns
xor
leave
iret
out
fbld
loop
stos
repnz
sbb
adc
mov
loopne
fidivs
xchg
add
int3
jmp
jl
xchg
out
pusha
push
enter
mov
test
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
xchg
add
add
add
add
jb
das
sahf
and
mov
push
shlb
mov
push
mov
jmp
mov
loopne
incl
adc
and
jg
dec
push
pop
fisttpl
cmp
rcrb
popa
jle
push
shll
push
aaa
cmpsl
std
mov
cmpsl
push
or
int3
dec
sti
push
jno
xchg
and
lods
jns
js
in
sub
mov
leave
and
xor
fistpl
xchg
bnd
arpl
mov
mov
push
pop
dec
jno
mov
xchg
pop
sbb
mov
pop
jg
push
xor
xchg
xchg
jns
int
mov
mov
sbb
lock
aam
int3
sub
ljmp
arpl
sti
mov
into
jbe
lret
out
stc
sub
out
in
mov
jno
add
mov
sbb
stos
xchg
mov
lahf
or
cmpsb
shlb
in
add
call
shrb
xchg
xchg
mov
jns
xlat
pushf
push
test
push
je
iret
add
add
int3
out
rcrb
xor
test
adc
int
scas
mov
mov
jle
inc
loopne
and
hlt
stc
jecxz
mov
ljmp
cmp
mov
call
jb
cmp
adc
out
or
hlt
outsb
xor
notl
fmuls
inc
pop
inc
cs
mov
das
aas
xchg
pop
xor
push
mov
imul
or
mov
into
mov
push
lds
gs
pop
adc
test
xchg
sar
ret
xor
stos
fldl
bound
paddq
add
leave
mov
push
mov
jne
lea
sbb
lds
xchg
and
repnz
jb
sub
sub
outsl
xchg
loopne
or
sub
testb
mov
push
sbbl
adcb
dec
mov
in
push
dec
pusha
lcall
adc
adc
jge
insl
push
stc
cmp
adc
pushf
sbb
xchg
dec
inc
dec
insb
mov
xchg
or
push
xor
adc
jns
rclb
int
lahf
cmp
lahf
or
add
aam
test
das
and
mov
and
push
dec
cli
int
push
jl
jns
sub
xor
jno
mov
xchg
pop
push
stc
pop
lods
pushf
js
sub
sub
in
or
or
fiaddl
jae
mov
pop
sbb
fdivrl
pop
add
in
lret
jl
mov
pushf
inc
xlat
in
jno
add
xchg
test
imul
pop
push
adc
jae
jbe
insl
shlb
push
decl
fmuls
repnz
mov
es
pop
sub
cmpsb
inc
sub
sarl
jge
test
rorl
mov
mov
mov
aad
inc
xchg
mov
mov
es
mov
out
test
jnp
mov
test
pusha
sbb
push
daa
sub
es
int3
pusha
ds
lret
add
jb
mov
or
cmp
dec
adc
mov
or
mov
std
cltd
adc
orl
sub
push
sub
repz
gs
push
dec
nop
shlb
cmc
sti
in
xchg
aam
sbb
pop
out
push
push
xchg
divl
push
imull
faddl
push
dec
test
repnz
test
sub
jg
dec
and
lahf
aam
and
arpl
sub
movsb
lods
sbb
xchg
or
std
inc
jmp
clc
and
nop
shlb
mov
cmp
sti
fsubrl
xchg
dec
imul
scas
cwtl
pop
mov
or
insl
push
inc
decb
mov
sbb
adc
dec
int3
jecxz
out
cmp
adc
mov
lods
and
js
pop
inc
ret
out
insl
push
mov
push
inc
and
fidivrl
scas
shlb
jae
daa
in
cmp
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
add
add
add
add
repz
push
ds
adc
stos
inc
lods
cmp
mov
mov
push
dec
or
pop
jge
test
mov
dec
sub
adc
inc
sub
or
call
into
mov
dec
sbb
mov
dec
add
adc
or
jecxz
clc
jb
jecxz
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
iret
add
add
test
mov
sbb
insl
and
xchg
add
loopne
xlat
jns
push
dec
stc
jns
xchg
shll
push
popa
aad
stos
stos
jle
or
mov
cltd
loope
call
mov
mov
cmpsb
adc
std
jecxz
mov
aas
pop
enter
ss
adc
fstps
push
xchg
push
pop
mov
rorl
inc
pop
push
stc
xor
cmp
cmpb
icebp
cs
cmp
insb
hlt
stos
adc
xchg
pop
pop
mull
fidivrl
data16
icebp
stos
xchg
push
sbb
inc
out
ficoms
outsb
adc
xor
shlb
rcll
arpl
pop
sub
dec
cmp
and
push
clc
addr16
aaa
dec
dec
sub
std
adc
orb
inc
lahf
filds
lahf
dec
lret
dec
jmp
stc
inc
mov
stos
xchg
add
jns
adc
out
xchg
jge
and
or
js
imul
and
sti
xchg
xor
sbb
and
xchg
stos
mov
push
xor
insl
imul
push
in
pop
ret
in
adc
jo
movsb
inc
sbb
loop
dec
loope
xlat
inc
pop
pop
xor
lahf
ret
leave
xchg
sub
test
lret
xchg
cs
out
aas
ja,pn
test
pop
pop
push
or
jp
jp
pop
jne
cld
pop
lret
test
inc
xchg
cmp
stc
mov
ja
cmpsl
shl
daa
lcall
loopne
xor
and
push
adc
jp
lcall
daa
mov
aas
nop
nop
test
sbb
test
push
pushf
push
sbb
push
add
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
add
cs
dec
pop
aaa
fisttpl
rcrl
lcall
and
das
das
inc
js
cwtl
cld
js
push
subl
std
mov
fxch
repz
shrl
adcl
les
adc
out
sahf
insl
sub
sub
mov
jbe
aam
xchg
nop
or
sub
mov
push
jecxz
dec
push
mov
mov
push
repnz
out
jb
mov
push
push
mov
pushf
cmc
int
aas
js
cmp
pop
adc
roll
loopne
leave
dec
mov
cld
pop
push
or
loop
cmp
inc
mov
test
cltd
leave
lahf
adc
subl
push
inc
xchg
pop
xchg
lods
sbbl
cmp
xor
jmp
push
mov
inc
call
xchg
dec
xor
stos
clc
and
mov
into
out
nop
jne
push
adc
jae
pop
and
mov
aaa
jo
jmp
test
out
repnz
mov
ja
in
pop
xchg
in
and
pop
lock
hlt
ret
subl
pusha
jbe
js
mov
sti
test
dec
scas
sbb
mov
sub
cld
xchg
insb
ret
mov
addr16
mov
rcl
and
push
inc
jno
shl
addr16
call
fbld
jb
fstpl
jne
in
inc
mov
mov
xor
adc
xor
inc
fdivl
mov
cwtl
jo
ja
xchg
jge
jge
xlat
xor
push
sub
aad
out
imul
std
mov
movsl
cmpsb
xchg
pop
arpl
push
mov
shlb
dec
mov
call
cmp
mov
roll
lods
mov
cmp
arpl
ss
aas
jae
gs
out
and
jbe
push
shll
pop
pop
mov
pop
dec
movsb
adc
in
mov
mov
jb
insl
popa
or
pop
sbb
fidivrs
lcall
mov
inc
repnz
dec
mov
sub
lret
rorl
mov
insb
in
movd
xchg
mov
jl
mov
inc
rcl
adc
xchg
sub
inc
push
outsb
add
xor
jns
in
sub
aam
ljmp
outsl
push
push
push
repz
mov
sti
call
mov
loope
xlat
insl
pop
xchg
inc
jb
sub
outsl
sub
inc
mov
popa
xor
mov
jae
adcl
mov
sbb
into
jle
sbb
lret
push
dec
xor
inc
dec
cmpl
dec
add
lahf
in
popf
add
pop
stos
data16
out
aaa
scas
pushf
mov
push
cs
popa
in
jns
ja
aad
inc
sub
lret
jb
rcr
aam
mov
fstps
sub
pop
lds
mov
lcall
fildll
sub
shrl
stc
push
mov
ljmp
test
mov
sub
cld
push
and
pop
xchg
xchg
and
lret
inc
ja
sbb
jne
jae
ret
leave
out
cwtl
movsb
data16
add
dec
lret
and
mov
mov
cmp
cld
enter
jne
gs
mov
shll
and
lods
sub
xor
pcmpeqb
outsl
fs
dec
xor
push
shlb
leave
adc
add
bound
pop
enter
pop
lods
mov
add
inc
ss
cmpsb
lahf
xchg
repz
cmp
leave
mov
roll
and
adc
inc
cltd
repz
sub
lcall
fisubrl
jp
xlat
shll
jne
inc
dec
push
loope
push
ss
int
mov
fwait
pop
add
inc
test
ret
xchg
js
mov
xchg
clc
sub
sbb
lea
test
mov
push
jmp
push
jbe
inc
test
in
test
xchg
or
mov
fwait
sbb
dec
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
push
add
push
push
add
dec
sub
stc
data16
cld
cmp
les
out
repz
dec
jmp
test
sbb
adcb
lods
inc
sub
inc
pop
add
rol
inc
test
popf
and
imul
andl
mulb
in
cmp
inc
fwait
or
jle
or
mov
add
sub
ret
ret
insb
cmp
mov
adc
push
movsb
jns
add
pop
cwtl
insb
dec
inc
repnz
xor
or
push
dec
orb
adc
das
xor
outsl
push
repz
push
xchg
jle
jge
adc
xchg
ja
lea
mov
pop
rolb
cmpsl
mov
push
xchg
and
int3
lret
cltd
hlt
cmpsb
jae
push
aas
pop
mov
push
fisttpll
hlt
lods
mov
pushf
fimull
das
aad
inc
dec
daa
cmc
movsb
inc
sarb
shll
mov
mov
inc
ds
cmp
fstp
repz
clc
mov
lahf
cld
nop
int
push
movsl
and
cltd
mov
push
fildll
xchg
inc
sub
hlt
cmp
pop
sbb
push
sarl
dec
and
into
jno
dec
sbb
fcoml
push
out
in
push
jne
orl
rcll
mov
pop
jmp
in
imul
pop
pop
outsb
cwtl
cmp
ret
bnd
leave
adc
cli
gs
pop
lret
lock
mov
jns
outsb
push
cli
roll
sarb
jbe
test
xchg
jle
jge
in
imul
cmp
add
sbb
xor
inc
shrb
call
sar
inc
jle
leave
mov
arpl
mov
cmp
jnp
xchg
insb
inc
xor
lea
shl
jno
pop
in
test
negl
mov
lret
sbb
inc
push
mov
mov
imul
lock
jmp
mov
dec
roll
mov
xor
mov
xchg
jae
dec
xor
mov
cmpsl
gs
outsl
lods
arpl
scas
mov
mov
movsl
cmp
mov
mov
ret
lahf
adc
and
sub
mov
rorb
roll
push
loopne
stos
jno
push
inc
fs
les
sarb
test
xor
pop
pop
sub
jno
fiaddl
xchg
or
mov
sbb
imul
add
sti
push
aaa
mov
sub
bound
clc
sahf
mov
jns
leave
adc
and
lret
popfw
mov
into
jns
add
add
call
lds
xchg
dec
pop
pusha
fwait
test
je
dec
adc
cmp
shl
and
insl
cmp
adc
dec
cli
jle
icebp
mov
pop
jo
aam
incb
dec
out
test
lock
jge
push
sub
inc
shl
jb
mov
xor
or
inc
add
int3
subl
sbb
in
stos
and
or
inc
not
xor
mov
cmp
stos
jmp
pop
lret
in
xor
cli
xor
mulb
or
xor
lock
push
call
je
clc
mov
and
sbb
add
data16
stc
scas
pop
mov
cmp
sub
mov
add
sbb
xchg
test
jl
in
repz
mov
daa
in
outsb
add
adc
xor
out
loope
popa
jnp
imulb
jnp
lahf
fnstenv
mov
in
adc
sbb
push
dec
lret
sti
inc
pop
popa
aad
ds
sbb
pop
mov
inc
or
lods
jo
pop
lock
popa
shll
xlat
fbld
scas
rclb
jbe
sti
shlb
jge
fistps
andl
psubq
pop
mov
add
add
push
xor
mov
or
push
outsl
inc
jbe
es
xchg
pop
std
je
ljmp
stos
and
fisubs
fildl
xchg
mov
pop
jecxz
movsl
sahf
ret
into
rcl
scas
fistl
popf
in
push
lahf
adc
stos
pushf
fs
inc
testb
pop
call
in
fldenv
pmulhw
xchg
call
add
les
lds
push
cli
call
cmc
add
pmulhuw
adc
test
dec
inc
loopne
mov
and
and
inc
xor
scas
mov
cmp
pushf
shlb
int3
xchg
loop
rcl
sub
or
testl
jae
cwtl
mov
popf
outsb
shrl
lds
pushf
dec
sbb
jecxz
inc
jae
jmp
rcl
adc
gs
cmp
jbe
sub
add
push
inc
cmp
mov
or
cs
push
lock
movsb
leave
mov
and
scas
es
add
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
pop
add
rorb
add
sub
xchg
aas
out
jb
dec
xor
imul
add
popf
lods
jmp
mov
movsl
jnp
push
push
faddl
outsl
outsb
xorb
lahf
fmull
arpl
pusha
aad
aaa
mov
inc
sub
mov
nop
and
call
sub
aad
clc
pop
dec
stc
xchg
xchg
and
outsl
mov
xor
popa
cmp
mov
enter
mov
out
movsb
imul
clc
aam
or
and
daa
push
pop
inc
add
pop
jp
std
mov
lcall
fnstsw
insl
jb
loop
mov
mov
imul
push
rorb
cmp
scas
test
movsb
imul
cmp
lock
inc
sbb
mov
call
or
in
cmp
andb
sub
pusha
in
gs
add
sub
or
dec
add
mov
lock
inc
out
push
cli
sub
lret
adc
or
fnstsw
dec
cwtl
rcrl
dec
pop
cltd
xor
push
scas
cmp
mov
rolb
mov
es
jnp
jno
xor
sbb
rorl
sbb
cltd
test
lret
int3
cld
pop
hlt
mov
and
iret
addr16
adc
je
dec
les
outsl
sub
loope
jb
cmp
roll
js
dec
jecxz
scas
jle
add
mov
mov
inc
pop
adc
test
ds
test
arpl
jl
pop
std
fwait
outsb
sarl
pop
cmp
loope
adc
fildll
sub
sbb
jns,pn
sbb
adc
int
mov
ret
mov
insb
arpl
dec
lahf
test
fcoms
inc
loopne
inc
dec
jmp
in
sub
pushf
subb
xor
mov
push
int3
iret
pusha
push
sahf
xchg
es
or
arpl
add
rolb
pusha
or
jnp
imul
sti
mov
mov
inc
inc
inc
shlb
lock
sbb
ss
sub
cmp
ja
stos
pop
scas
rcrb
and
mov
mov
add
xor
out
adc
push
add
std
arpl
into
push
mov
sbb
lret
cmp
int3
mov
adc
fucomi
xor
xchg
icebp
into
enter
cmc
sub
insl
inc
mov
pushf
repz
pop
iret
mov
mov
mov
adc
cwtl
aam
add
mov
loopne
leave
jno
pop
rcr
into
mov
mov
inc
sarl
jne
mov
gs
xchg
inc
mov
xchg
jne
xor
aaa
scas
sub
push
test
add
pop
ljmp
add
dec
cwtl
jb
stos
add
dec
dec
fisubl
adc
cltd
add
dec
jp
cltd
sti
aas
stos
ds
push
std
leave
xchg
xchg
push
sub
bnd
mov
add
push
lahf
pop
arpl
pop
int3
xor
dec
outsb
pushf
shll
add
mov
ror
outsl
add
inc
sub
test
test
loopne
stos
xlat
subb
push
or
dec
vmulss
push
and
popf
stc
ljmp
cmc
mov
mov
mov
stos
sub
jle
leave
mov
jno
mov
pushf
nop
clc
mov
push
hlt
rorl
es
ret
in
mov
inc
inc
cmp
inc
inc
in
gs
xor
scas
cmp
jne
add
pop
push
mov
stc
imul
stc
outsl
test
repnz
add
jb
jno
add
outsl
jbe
adc
insl
xchg
testl
mov
mov
in
inc
ljmp
in
sub
out
lcall
lock
xchg
imul
popf
les
jbe
scas
enter
cmp
mov
pusha
mov
mov
sub
inc
shlb
lods
movsb
lret
test
mov
sub
fldcw
or
cmp
fidivl
cmc
cltd
scas
sub
mov
add
mov
jo
xchg
ljmp
jns
movsb
push
adc
xchg
cmp
test
mov
cmc
push
and
mov
gs
das
dec
push
dec
jne
add
cmp
jae
cs
mov
mov
pushf
sarl
imul
inc
adcl
fistl
cmp
sbb
dec
push
xchg
or
adc
jns
shl
or
inc
push
lcall
pop
les
jmp
sbb
jns
data16
out
adc
repz
mov
out
jno
ljmp
inc
sahf
lock
sbb
adc
pop
dec
repnz
mov
std
dec
bts
dec
imul
or
cmp
push
mov
and
pusha
push
ljmp
rcll
mov
xchg
aas
clc
popa
aas
push
fsubl
add
dec
inc
in
fiadds
sub
xchg
leave
jno
cmpsb
into
or
xor
adc
fsubp
je
outsb
inc
dec
fsubl
imulb
jnp
dec
shlb
adc
xchg
mov
jp
and
fstl
scas
mov
cmc
and
or
jge
mov
jp
cmp
lret
inc
and
push
lock
xor
mov
mov
testb
push
out
test
leave
fldl
scas
popf
jmp
xor
insl
das
clc
les
scas
out
cmovne
pop
mov
jecxz
add
mov
ja
cmpsb
push
test
lahf
and
popa
adc
shrl
mov
sub
dec
sub
or
test
int3
cld
cmp
sub
or
and
xor
mov
adc
pop
fs
xchg
aam
shll
loope
decl
int3
lss
or
or
sbb
ror
repnz
mov
add
fisttpl
mov
add
push
loop
lret
cmc
dec
je
adc
int
call
inc
lock
jl
push
int
movsl
cmp
cmp
pop
shr
or
dec
add
je
scas
mov
xlat
and
mov
arpl
mov
and
stos
rorl
push
movups
sahf
push
in
mov
lds
subb
ficomps
enter
push
xchg
push
lods
ret
dec
cmp
add
pop
or
orb
int
sub
outsl
loope
rolb
mov
mov
rcrl
xchg
push
xor
and
std
stc
mov
dec
jae
clc
arpl
iret
in
das
arpl
inc
aaa
fildll
and
add
or
sti
jecxz
xor
cmp
mov
scas
enter
lods
and
int3
test
aaa
js
mov
push
js
sar
push
sbbb
bound
xor
fnsave
icebp
fs
push
popa
shlb
fnclex
ljmp
je
mov
test
lret
jp
jno
mov
add
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
imul
add
dec
addr16
fistpll
mov
push
pop
xor
xor
cld
lea
mov
mov
xor
jmp
jb
stos
push
gs
jae
into
ljmp
in
xor
ss
faddl
inc
inc
sub
mov
mov
scas
ret
fidivrl
out
cmp
push
leave
shrb
popf
sbb
cmp
add
jb
xor
jns
jb
xor
jns
jb
xchg
pop
add
imul
adc
xlat
js
js
inc
out
mov
push
add
popa
vmwrite
adc
jge
out
pop
inc
out
xor
xor
mov
or
test
outsb
sbb
jge
scas
pop
dec
cli
shrb
clc
xor
cmp
cli
pushf
dec
mov
add
adc
cmp
dec
or
test
dec
and
out
and
enter
nop
xor
mov
scas
push
insb
addr16
cmc
jo
xor
cmp
xor
sbb
mov
xlat
in
insb
adc
popf
mov
sahf
leave
inc
xchg
xor
mov
les
popf
test
fcompl
enter
or
lret
push
inc
and
pop
dec
aam
scas
mov
enter
or
mull
adc
enter
xor
mov
mov
mov
vpaddq
mov
aam
loope
dec
repz
aas
sub
enter
mov
aam
xor
and
mov
xchg
inc
stos
les
addr16
mov
mov
adc
cmc
les
mov
mov
jbe
dec
push
or
mov
daa
pop
into
out
push
loopne
ret
and
and
lret
in
lock
loop
xor
inc
push
mov
arpl
xor
lods
rorb
push
adc
hlt
daa
inc
push
adc
repz
lret
orl
xor
aas
scas
fs
jg
xchg
pop
xor
adc
loop
out
xor
and
fwait
loopne
jmp
cmc
pop
test
adc
pop
icebp
movsl
add
clc
mov
mov
popa
pop
cltd
les
cmp
and
sti
sub
lret
flds
ss
cs
adc
push
push
int3
mov
cmc
push
pushf
repnz
mov
sbb
call
sbb
sbb
pushf
mov
mov
lds
xor
fwait
cmp
pop
cltd
loope
stos
and
int
adc
daa
push
pop
jae
test
and
dec
out
sti
scas
in
mov
cs
cmpl
add
push
xor
mov
inc
lret
add
xchg
jge
add
or
adc
imul
jnp
and
int3
adc
lcall
in
mov
cmc
push
lret
repz
std
jbe
push
pop
pop
and
adc
in
pop
fwait
std
push
inc
cmp
mov
js
out
pop
push
sbb
mov
and
cli
imul
aaa
das
test
fildll
push
mov
xchg
cmp
inc
sti
and
mov
mov
jo
stc
pop
cli
dec
adc
cmp
jne
push
fsub
das
data16
aaa
or
cli
dec
rorb
aas
mov
pop
mov
lahf
cmpsl
sub
sbb
cmpsl
iret
sbb
sbb
cmc
adc
rcrl
sbb
pop
pusha
rorl
stc
lahf
xchg
xor
stc
shl
scas
and
fs
mov
das
shr
push
fisttps
sbb
push
sbb
fnstenv
or
mov
push
fcomps
int3
push
mov
lds
pop
hlt
inc
notb
int
dec
jo
test
out
das
jne
mov
adc
subl
inc
jb
aas
arpl
push
hlt
insl
inc
push
scas
js
lods
sub
int3
sbb
fsubrp
pop
adc
mov
mov
adc
fs
mov
lock
mov
bnd
inc
cltd
jne
inc
fdivs
cmp
add
mov
pusha
sub
xor
sbb
mov
xor
outsl
push
pushf
jne
cmp
adc
test
add
mov
movsb
jmp
cmp
mov
aaa
dec
cmp
mov
lahf
mov
pop
mov
lret
shrl
data16
stc
jne
mov
jae
mov
shlb
pop
mov
dec
cmp
shrl
jbe
insb
loop
sbb
aam
clc
jmp
sti
hlt
cmc
dec
dec
incb
inc
sbb
dec
mov
imul
test
sbb
cmpsl
adc
mov
lret
jnp,pn
push
jb
fimull
dec
outsl
xor
or
and
out
and
in
stc
movsb
jg
mov
into
mov
push
das
sahf
aas
push
push
ja
in
mov
xor
mov
adc
aas
add
adc
jg
repnz
jl
imul
lods
ret
test
aam
pop
fldcw
mov
addl
push
jno
stos
lcall
jae
pop
add
xor
inc
push
xor
push
push
iret
inc
cmpsl
subb
stos
hlt
mov
inc
pop
adc
fyl2x
sub
mov
aad
je
mov
xor
add
or
push
cmp
add
cmp
or
xor
push
mov
leave
xor
cwtl
cwtl
sub
test
stc
jge
arpl
repz
and
jae
cmpsb
or
fisttpl
xor
jge
movsl
lret
dec
jmp
jmp
imul
jge
inc
jmp
sub
aaa
repz
push
fisubrl
in
add
mov
xor
pop
inc
loope
arpl
scas
mov
mov
out
scas
lret
mov
pop
mov
ja
xor
in
out
cmc
xlat
stos
push
fdiv
imul
bound
add
cmc
pop
add
add
sub
sbb
lret
mov
shrl
and
lret
cs
scas
mov
outsb
testb
mov
mov
xor
testl
inc
adc
dec
mov
iret
lock
pop
popl
push
mov
sub
outsl
cmpsl
lahf
cli
xor
mov
sub
test
jo
push
lret
jae
and
int3
out
sbb
fisubrl
cmp
or
iret
loopne
mov
mov
iret
adc
int3
pop
or
cwtl
je
add
divb
or
mov
mov
mov
cmc
lock
int3
add
xchg
or
push
inc
jp
shlb
xchg
cmp
cmpsl
jne
cmpsb
cmpsb
inc
inc
cld
aad
and
das
sub
fidivrs
jnp
sub
dec
insb
add
ljmp
test
inc
scas
std
gs
and
dec
ja
adc
je
xchg
arpl
adc
sarb
adc
sub
mov
or
push
or
push
push
out
hlt
and
xchg
call
shl
sbb
mov
adc
adc
xchg
iret
repnz
sub
flds
sub
fimull
cld
icebp
cli
add
mov
stos
adc
cmp
mov
cmp
iret
add
loope
inc
mulb
xor
call
inc
push
pop
test
fsubs
pop
cmp
add
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
pop
add
jmp
jl
inc
into
pop
data16
sar
out
aaa
and
sub
cld
cmp
adc
inc
push
inc
jmp
xor
into
subb
fnstsw
bound
xchg
push
cmp
push
fnsave
cmp
pop
andb
add
test
mov
pop
mov
out
cmp
ret
mov
out
jnp
mov
js
cmp
or
fsubr
jecxz
jge
inc
inc
rcr
inc
insb
and
adc
push
push
hlt
pop
fwait
loop
nop
pop
cltd
scas
test
cmc
mov
and
dec
push
xchg
jp
adc
std
and
scas
adc
mov
xor
lea
sub
fbld
mov
test
adc
mov
lret
mov
imul
clc
out
xchg
pop
mov
push
loope
pop
lods
sti
out
pop
test
jg
xor
sub
and
jl
xchg
xchg
jp
and
or
loopne
sbb
inc
push
adc
fdivrs
into
ret
dec
and
mov
sub
in
pop
inc
jg
in
mov
cltd
mov
push
push
mov
cmpsl
inc
loope
hlt
add
dec
cmp
or
shl
mov
mov
mov
dec
mov
jp
out
or
in
add
pop
in
fcoms
icebp
ljmp
push
or
incl
cmp
stos
and
or
push
pop
inc
mov
push
and
xchg
dec
loope
popa
and
add
rolb
and
sub
scas
iret
out
push
pushf
cmp
ret
hlt
mov
inc
pushf
aas
clc
add
push
test
mov
rcrb
pop
sbb
mov
ljmp
mov
lods
lret
lods
mov
and
mov
jp
sbb
cltd
or
into
add
push
mov
sbb
xchg
pusha
fsubp
ret
jg
addb
imulb
mov
push
scas
out
push
inc
mov
push
push
sub
sub
mov
inc
sbb
mov
out
jmp
leave
imul
sbb
inc
mov
mov
js
in
in
ljmp
xor
rorb
and
sbb
adc
ljmp
movsl
pop
xchg
sti
xchg
aam
mov
gs
cmp
adc
mov
mov
jmp
or
in
push
push
fwait
xchg
fcmovne
mov
jne
ret
loopne
jae
inc
roll
cs
or
lds
sbb
cmpsb
xor
cmpsl
popf
sbb
test
sub
pop
xor
jnp
xchg
inc
clc
repz
push
cld
in
fstpl
push
cmp
or
dec
loop
mov
clc
push
pop
cmpl
inc
out
add
xor
repz
pushl
mov
jne
xor
gs
out
xor
sbb
les
enter
push
fwait
mov
push
lea
cmp
lea
pop
and
push
addb
push
imul
insl
jle
push
dec
std
mov
xchg
fs
cmp
in
jae
pushf
cmc
outsl
mov
push
ss
add
lahf
lods
ffree
testl
fld
push
or
adc
xchg
lahf
xchg
pop
jle
pop
popa
xchg
imull
dec
imul
iret
hlt
xor
sarb
stc
jl
xor
xchg
ds
je
mov
popf
out
and
test
sti
out
push
cld
lods
in
xchg
js
pop
data16
int3
inc
fidivs
mov
pop
js
mov
and
xor
rorl
push
cmp
or
pop
inc
mov
push
dec
pop
daa
ss
mov
aam
adc
ljmp
lds
imul
inc
and
or
clc
das
mov
lret
jmp
cli
fnsave
mov
fnstsw
xchg
test
xchg
aam
pop
adc
cmp
out
or
dec
nop
jge
mov
xchg
push
bound
loopne
and
leave
loop
lcall
leave
cmpsb
jno
movsb
cmp
pop
pop
in
sub
loope
xchg
xchg
in
sub
dec
icebp
adc
dec
push
fcomp
cmp
mov
push
lods
mov
or
popf
out
lods
xor
mov
dec
jp
repnz
push
pop
cmc
nop
mov
sub
shll
int3
or
addr16
xchg
sub
test
sbb
jp
int
imul
in
fbstp
pop
adc
push
pop
inc
test
cli
push
jb
sub
mov
das
sbb
mov
es
js
and
imul
push
sahf
cs
call
das
enter
push
push
ljmp
push
ljmp
or
movsl
push
imul
and
lea
rcll
push
les
pusha
push
fsubrl
js
add
cmc
cmp
pop
cmp
insb
ljmp
pop
inc
aam
pop
pop
shlb
fiaddl
call
or
pop
add
sub
jmp
or
int3
xchg
or
push
test
xchg
pushf
mov
cli
pop
or
cmp
daa
cmp
lock
aaa
inc
mov
cmp
mov
cmp
mov
rcrl
mov
movsl
ss
stos
push
pop
mov
mov
cmc
pop
icebp
clc
mov
or
mov
push
sahf
mov
jne
aad
leave
cmp
mov
cmc
mov
jle,pn
iret
xor
adc
daa
inc
cmpb
dec
cmp
shll
mov
inc
jge
stc
sbb
xor
jne
test
cmp
jns
lods
inc
lret
push
and
inc
mov
mov
jg
mov
jne
jecxz
push
sbb
lds
push
iret
rorb
add
iret
call
test
fcoms
imul
cmp
and
fidivrl
repz
cltd
sbb
mov
and
mov
xor
xchg
pop
or
iret
jl
gs
inc
pushf
add
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
pop
add
icebp
or
add
cmp
lcall
adc
cmp
add
fwait
xlat
fstpl
stc
ja
test
fildl
inc
xchg
push
roll
scas
xor
lcall
and
nop
lcall
cmp
fs
pop
hlt
arpl
jle
adc
jnp
repz
bound
aaa
das
inc
iret
lea
mov
sbb
add
jle
push
lods
insb
lea
jmp
mov
xor
lahf
mov
ficoml
call
mov
in
dec
fcomp
cmpsl
cltd
mov
roll
cmpsl
jno
mov
xchg
mov
pop
jns
orl
cmp
loop
pop
hlt
xchg
add
loope
pusha
cmpsb
jno
ljmp
pushl
es
mov
loop
push
and
aam
jae
scas
push
pop
cmp
stos
aas
dec
shlb
dec
add
jnp
xor
dec
add
pop
mov
popa
or
inc
mov
push
pop
test
in
cmp
cld
push
aad
call
mov
jno
push
push
hlt
mov
popa
fwait
xor
jns
ljmp
push
in
inc
lahf
pusha
scas
lods
mov
or
sub
hlt
daa
fistpl
in
dec
jge
cmp
clc
stc
push
leave
std
push
addl
inc
mov
sub
mov
or
pushf
popa
adc
sub
xchg
and
filds
add
cs
pop
addr16
hlt
std
test
bound
dec
out
mov
and
mov
in
or
lahf
pop
lcall
call
lcall
pop
xchg
ret
push
or
push
mov
imul
mov
mov
bound
xchg
test
hlt
orb
test
sub
push
addr16
fwait
adc
pop
and
pop
movsb
adc
aas
sbb
fldt
fwait
repz
xor
shl
ss
push
sbb
leave
call
inc
jmp
mov
ja
arpl
cmp
stos
adc
xor
mov
imul
rcrb
dec
divl
out
pop
add
jbe
shll
adc
xor
jnp
lods
insb
insl
xchg
and
lahf
stos
pop
jne
pop
outsl
mov
out
push
push
mov
cmp
fwait
mov
push
test
mov
and
scas
lret
cs
sub
mov
aam
push
into
mov
jge
lret
mov
inc
lea
jb
jnp
ss
aas
jbe
inc
shlb
pusha
sub
std
jbe
into
imul
xlat
mov
lret
lcall
add
jl
pop
mov
decb
aam
repz
push
sti
jecxz
jno
pushf
lret
aaa
sbb
lcall
aam
insb
scas
push
repnz
inc
sub
pop
scas
mov
pop
sub
int3
add
and
xor
pop
mov
xchg
scas
outsl
pop
mov
ficomps
add
sbb
es
ret
leave
cld
movb
cmp
gs
sub
sti
test
dec
xorl
outsb
out
mov
dec
mov
insb
out
push
lcall
or
mov
xorl
jbe
sbb
stos
pop
cmpsb
jo
daa
dec
add
arpl
cmp
or
adc
stc
pusha
xchg
mov
mov
jb
push
adc
mov
gs
cli
fcomip
dec
iret
in
add
push
in
movsl
adc
loopne
insb
xchg
mov
jae
inc
cmp
push
mov
hlt
sbb
jmp
out
dec
xlat
loope
mov
idivb
add
lods
inc
popa
xor
jge
and
leave
mov
jl
mov
or
dec
mov
xor
fstpt
out
xchg
jge
lds
loopne
pop
in
clc
mov
mull
sub
mov
enter
stos
insb
arpl
fldcw
fwait
pop
lahf
jp
fistpl
mov
xchg
lods
push
jnp
rcrb
pop
stos
xchg
and
sbb
pop
xchg
xor
call
pop
pusha
add
xchg
ds
dec
jbe
or
push
mov
mov
xchg
xor
out
jg
js
pop
adc
cmp
in
inc
add
jg
pop
mov
mov
and
push
int3
ds
test
fdivrs
mov
out
outsb
repz
add
xchg
push
mov
jg
cmp
add
out
sub
adc
xchg
rolb
sub
xor
xchg
cltd
loopne
push
cmp
movsb
mov
mov
aaa
xchg
es
sub
inc
addr16
pop
jbe
and
das
adc
enter
mov
sub
imul
aad
pop
pushf
inc
sub
psrlw
shrl
add
jns
mov
adc
or
fdivl
jg
test
adc
mov
dec
dec
shlb
sub
xor
cmp
neg
adcl
pop
pop
pop
and
add
leave
mov
enter
pop
add
sti
insl
scas
bound
mov
iret
or
fldcw
lret
mov
test
mov
mov
xchg
mov
jge
mov
popa
cltd
pusha
sub
jl
adc
std
mov
call
cwtl
icebp
test
push
sbb
in
adc
mov
leave
aaa
push
adc
ret
enter
sti
sete
adc
bound
shll
jge
inc
mov
sub
repz
and
xor
push
lea
lret
ss
xchg
scas
xchg
and
pop
mov
lds
or
and
lods
sarb
inc
xchg
adc
cmc
mov
loopne
lods
dec
aam
ljmp
in
mov
pop
adc
push
ds
popa
int
fisubrs
mov
push
dec
scas
popf
xchg
pusha
jne
sub
sbb
das
gs
test
pop
pop
add
add
pop
inc
push
icebp
test
fwait
rclb
test
mov
pop
fs
xchg
decb
pop
in
adc
jnp
scas
dec
push
std
or
pop
rolb
and
outsl
pop
mov
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
add
add
mov
fcmovnu
lds
out
sub
dec
pop
add
rcl
add
mov
daa
js
add
jl
push
aam
inc
rcrb
mov
add
shlb
add
insb
xchg
scas
pop
sub
jp
and
sahf
mov
fcompl
xchg
stc
mov
inc
lea
mov
das
mov
or
lret
mov
xor
push
cmp
mov
test
in
mov
pusha
popa
jae
dec
jnp
sti
push
insl
jno
cld
inc
dec
aas
clc
fcmovnu
push
aaa
pusha
xchg
out
cmpsl
inc
loopne
mov
and
sub
aad
ds
in
push
cmpsl
add
es
iret
xchg
mov
cli
cmp
out
aas
shr
jb
or
adc
shl
mov
ret
mov
icebp
je
jge
pop
ljmp
mov
aaa
mov
enter
pop
out
mov
into
and
lds
sarb
jge
sub
loope
js
push
aas
mov
mov
jne
in
mov
fstpt
out
mov
mov
add
lock
sub
pop
out
pop
fisttpl
mov
insb
sahf
leave
fldenv
jecxz
pusha
lret
push
mov
insl
std
repnz
js
push
dec
xchg
mov
pop
enter
outsl
xor
sub
jl
cmp
clc
adc
cld
repnz
roll
addr16
lret
push
lods
dec
push
pop
fstl
or
cld
xchg
adc
or
or
insb
push
pop
cmp
lret
sub
lahf
jbe
ljmp
sbb
mov
pop
int3
rol
jb
xor
test
jmp
into
xchg
jmp
add
mov
ficompl
xor
aaa
daa
mov
push
cld
hlt
xlat
repz
mov
stos
xchg
lret
sub
jne
mov
sbbb
or
cmp
test
xor
js
test
mov
jmp
xor
sti
mov
pushf
mov
or
adc
popf
push
sbb
int
and
pusha
sbb
dec
popa
xchg
pusha
jl
test
mov
rolb
ds
fidivrl
jge
test
xchg
xchg
aas
pop
sub
push
arpl
mov
mov
mov
adc
aad
fldcw
xor
aaa
ds
jle
sub
ss
adc
out
jmp
cmp
test
add
sub
xor
and
lcall
xor
bound
dec
xor
cmpl
lods
sbb
lea
pop
push
and
jg
stos
sahf
mov
xchg
dec
cmpb
pop
rolb
jnp
loope
lret
stc
and
jmp
jnp
or
push
lret
arpl
sub
data16
and
and
add
les
lahf
jb
mov
mov
hlt
jecxz
ret
insl
or
jns
dec
jge
cmp
mov
push
and
jmp
push
test
xor
cltd
cltd
adc
or
fsincos
mov
jecxz
push
fcmovnu
hlt
jae
mull
or
sub
insb
ljmp
xor
mov
mov
cli
insl
fiaddl
lret
sbb
data16
inc
mov
sbb
inc
inc
mov
and
aam
adc
sbb
xchg
adcl
sbb
scas
sbb
lcall
into
stos
xor
int3
enter
mov
jge
cmpsl
add
inc
mov
icebp
int3
xor
dec
cs
fucomip
cmp
jg
popf
leave
scas
mov
insl
ffreep
sahf
and
ret
ds
mov
push
pop
adc
xchg
push
js
xchg
mov
out
mov
lea
jb
mov
into
lcall
insl
mov
inc
repnz
or
jg
sbb
cld
sub
addr16
out
sub
pop
inc
sarb
sbb
imul
mov
sub
mov
pop
and
andl
lcall
mov
in
addb
lock
out
aad
div
cltd
jg
push
inc
dec
aad
inc
add
cli
pop
lods
xor
xchg
stc
mov
cmp
movsl
jbe
fstpt
add
scas
adc
adc
xor
push
gs
sahf
out
jo
add
jge
cmc
es
add
xchg
lods
push
lret
pop
test
jae
fstpl
ret
mov
push
jae
inc
add
jo
push
shrb
repz
add
decl
js
pop
loop
mov
xor
or
mov
dec
push
inc
mov
enter
mov
mov
push
into
pop
sbb
xor
ljmp
xor
push
pop
mov
dec
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
aad
add
sbb
add
fcoml
ljmp
or
pop
and
movsl
rcl
pop
ljmp
subl
loopne
xor
je
mov
insb
jge
xchg
mov
cmp
jmp
imul
and
int3
imul
xchg
sbb
adc
mov
xchg
or
dec
sub
inc
push
enter
or
fcomps
fcompl
cmp
cmpsl
xchg
xor
and
pop
inc
mov
push
xchg
fs
mov
mov
add
xor
aam
sub
lcall
dec
xor
stos
lock
cmp
dec
xchg
or
cs
popa
lock
and
rcrb
mov
mov
inc
dec
push
iret
cmp
jl
iret
or
filds
cmpsl
xchg
mov
ret
push
inc
pop
cs
and
repnz
scas
outsb
xor
lcall
shrl
dec
xchg
loopne
mov
stos
cli
data16
dec
jmp
in
sub
xchg
dec
push
jmp
jle
outsl
mov
sub
pop
test
repnz
cmp
or
sbb
sub
sti
rcrb
iret
mov
add
stos
cld
pushf
imul
mov
out
mov
sti
mov
adc
mov
test
decl
inc
mov
cmp
and
jae
icebp
insb
int3
mov
jmp
inc
mov
iret
sub
out
in
jbe
sbb
outsb
jb
fstpt
out
xchg
xchg
mov
or
maxps
out
orl
sbb
pop
dec
das
push
and
in
ja
adc
cmp
push
shrb
scas
pop
gs
xchg
negl
mov
lahf
jle
add
pop
je
in
and
add
icebp
jb
into
dec
mov
pop
lods
push
and
pusha
adc
mov
mov
std
cmp
in
inc
loop
arpl
test
cmpsb
js
out
js
xor
sbb
and
push
aas
jg
xchg
cmp
sub
mov
xor
scas
clc
cs
xchg
clc
xor
std
mov
out
mov
inc
adc
mov
xchg
push
fs
mov
repnz
stc
and
mov
call
push
lock
call
scas
es
jnp
outsb
les
in
mov
sbb
and
xor
sub
outsb
enter
jp
adc
in
cwtl
popa
mov
dec
addr16
ficoml
dec
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
add
or
add
cmp
sbb
inc
inc
cmp
and
jae
lds
fcomps
and
ret
inc
fwait
sbb
xor
stos
in
test
mov
xchg
aas
bound
add
adc
inc
pop
into
lret
ret
out
mov
mov
js
mov
arpl
ret
mov
add
ja
dec
jge
jb
fists
or
jmp
sub
clc
jno
sbb
loop
pop
ljmp
outsl
add
cli
int3
loope
movsb
add
sub
das
cwtl
cwtl
shrl
mov
dec
sub
add
cmc
out
fnsave
dec
in
cmp
xchg
or
cmp
add
in
test
js
adc
lret
pop
lret
and
mov
jo
in
push
sbb
scas
jns
xor
push
sbb
mov
fwait
xchg
leave
mov
call
sbb
push
and
jmp
mov
xchg
xchg
lea
jge
mov
push
inc
in
or
push
jno
cmp
scas
aaa
xchg
repnz
inc
fstps
pop
inc
push
jmp
outsb
lret
in
dec
and
inc
cmp
in
int3
pop
incl
xchg
sbb
pop
aas
aam
jmp
mov
xorl
xor
add
repnz
sbbl
pop
fs
outsl
cmp
and
inc
aad
lods
jecxz
jno
add
std
xor
fwait
shlb
fimull
rcr
test
std
repnz
mov
xor
imulb
push
pushl
into
icebp
or
aaa
jecxz
mov
lods
nop
fsts
out
int
loope
les
mov
xor
mov
cmp
fs
leave
arpl
jg
inc
add
rcrb
dec
addr16
mov
pusha
sbb
xchg
leave
enter
dec
inc
rorb
cmp
ret
imul
sbb
xlat
fstps
std
mov
dec
divl
add
cmp
arpl
gs
cli
stos
cmp
mov
mov
decl
or
jg
pusha
inc
add
arpl
es
mov
popf
cltd
out
dec
mov
pop
fsubp
cli
add
outsb
xchg
xchg
push
add
outsb
repz
push
pusha
push
iret
jge
dec
pop
sbb
aad
sbb
add
repnz
lret
sbb
mov
cs
or
mov
add
xchg
cmp
dec
add
xchg
cmp
dec
push
or
lods
dec
cwtl
mov
mov
mov
ja
pop
shlb
push
jns
add
add
or
mov
jb
sbb
mov
xchg
pop
dec
lods
lret
mov
mov
and
and
add
inc
mov
es
xor
fwait
outsb
pop
xor
dec
sbb
jle
and
dec
or
push
adc
xorl
out
call
iret
test
xchg
push
lcall
into
inc
inc
adc
sti
cmp
lret
xor
out
push
movsb
lods
jo
or
cmpsl
cwtl
mov
cmp
pop
push
test
sbb
xor
jp
arpl
sbb
xor
les
mov
enter
inc
icebp
pop
sub
xor
jns
and
jae
xchg
push
sbb
aad
jne
dec
fcompl
xor
mov
mov
pop
ljmp
xlat
mov
dec
or
or
and
push
out
jnp
push
jecxz
or
aas
jne
dec
push
rolb
jg
pop
stos
sbb
or
stos
mov
xor
fldl
mov
mov
jae
cwtl
lahf
xchg
dec
pop
or
jb
outsl
scas
int
fbstp
sub
repz
push
loop
std
mov
dec
push
rclb
mov
pop
stos
pop
fucomp
ret
pop
adc
mov
mov
sar
loop
inc
or
jne
inc
mov
jnp
jmp
xlat
dec
vpminub
pop
pop
cmpsb
call
and
push
adc
movsb
xchg
popf
or
nop
xor
stc
dec
push
push
jae
insb
add
nop
sti
jb
xchg
lret
rcrl
aas
sub
xchg
adc
test
rclb
sub
fiadds
jns
cmpsb
sub
push
ljmp
sub
mov
push
jbe
cld
fwait
mov
ret
jmp
mov
mov
jp
in
dec
fadd
in
and
or
adc
jp
pop
fsubrs
push
loop
push
and
pop
push
mov
fbstp
inc
pop
mov
int
shll
cmp
dec
outsb
xor
aaa
pop
adc
je
popf
loop
fcmove
inc
adc
adc
jl
loop
mov
sub
mov
insb
jle
push
fwait
mov
fwait
cmp
sahf
add
fstps
jl
je
cmp
push
xorb
cli
add
add
xor
test
sbb
sub
add
loop
pop
test
and
sub
aad
push
mov
or
enter
je
mov
mov
mov
inc
mov
outsl
lret
fwait
inc
jmp
rcl
mov
and
ret
loop
lret
add
dec
pop
les
ss
or
push
sub
pop
xchg
push
add
rcrl
hlt
movl
sarl
mov
fadds
fs
add
jmp
jnp
data16
mov
es
ds
sbb
jnp
xchg
std
lcall
repz
inc
shlb
push
or
sub
out
lret
cmp
fldenv
out
gs
and
or
andl
pop
mov
les
inc
out
pop
add
daa
stos
xor
clc
nop
scas
iret
or
jle
or
jae
fmull
repz
add
imulb
ret
sbb
add
call
mov
pop
jb
sbb
jg
out
mov
scas
push
sub
jo
jne
popf
xor
lods
div
inc
pop
lods
rcrb
pop
cmp
pop
mov
pop
orb
push
idivl
and
adc
jno
ja
mov
ret
ljmp
jge
lods
jg
mov
xorb
bound
xor
jg
inc
mov
out
xor
ja
dec
pop
adc
add
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
roll
add
orl
out
cmpsb
daa
setns
outsb
push
inc
mov
cmp
or
nopl
xor
or
jno
push
pusha
aam
mov
add
push
mov
faddl
push
jecxz
cmp
into
loope
xchg
adcb
sbb
or
jns
mov
cmp
and
or
mov
push
mov
sbb
xor
leave
aaa
pop
scas
inc
aaa
je
jb
cmp
push
into
add
adc
mov
outsl
mov
ljmp
xlat
rorl
inc
dec
int
iret
sbb
adc
pop
in
mov
clc
dec
es
jae
sbb
outsl
cmpsb
out
test
mov
xchg
add
jns
jno
and
pop
lea
call
lcall
loopne
shrb
pop
aam
es
pop
sub
shl
lods
aad
scas
fstl
dec
jbe
lret
xor
enter
xlat
and
mov
das
add
int3
sub
insb
xchg
jne
lret
lods
adc
add
f2xm1
mov
jb
or
out
mov
or
xor
movsb
push
adc
dec
add
in
pushf
xor
fwait
jno
ret
xchg
cmp
inc
daa
jecxz
sarl
sbb
loop
sahf
push
cmp
idiv
addb
and
mov
jb
xor
jg
mov
fistpll
sub
jge
pop
xchg
inc
or
jb
push
mov
fidivrs
mov
sub
gs
mov
xchg
testl
addl
ljmp
pop
stos
or
js
push
xchg
mov
and
sbb
rcrl
fistpll
pop
inc
sahf
adc
dec
aas
in
inc
shrb
adc
pop
gs
or
jg
mov
ljmp
sub
aas
sarb
insl
adc
int3
jbe
xor
loope
adc
jmp
xor
call
clc
xchg
cwtl
out
sub
lret
xchg
sbb
in
rorb
jnp
sub
in
pop
mov
nop
dec
cli
mov
add
jmp
mov
add
sbb
push
mov
mov
into
xchg
dec
lahf
pop
cwtl
movsb
add
incl
push
lds
lret
out
xor
or
dec
jo
loop
call
rorb
push
and
dec
orb
enter
or
pop
mov
nop
xor
jb
inc
outsl
mov
push
and
popa
out
clc
adc
out
dec
sub
or
jb
xor
mov
call
adc
pop
fbstp
push
cmp
pop
mov
into
lret
in
frstor
fldz
mov
ja
xchg
mov
jmp
xlat
cmpsb
push
jnp
cmp
or
test
sub
dec
push
insl
or
sbb
orb
adc
sub
fstpl
hlt
arpl
push
cmp
inc
adcb
ficoml
repnz
sub
push
nop
out
imull
xchg
fstps
das
out
iret
dec
adc
and
iret
out
adc
inc
fnsave
rcl
aas
rolb
push
add
ror
pop
jg
dec
imul
adc
mov
stos
adc
popa
mov
sub
fstps
lret
mov
jo
nop
jo
pop
mov
call
sti
divb
aad
cld
dec
rclb
mov
sub
lods
push
arpl
push
dec
jp
stos
incb
mov
mov
loopne
and
mul
clc
pop
andb
sbb
ds
jecxz
lret
mov
dec
repnz
jp
jns
in
cmp
fiadds
xor
shlb
aas
in
mov
dec
mov
das
adc
lret
sub
sbb
cs
add
jecxz
sub
xor
movsl
pop
out
hlt
mov
jl
inc
xchg
sbb
shlb
mov
pop
jecxz
jo
ljmp
jmp
mov
pop
lods
ss
into
adc
pop
ror
and
in
outsl
xchg
or
mov
movsb
mov
adc
lahf
inc
lods
mov
jne
pop
ds
bound
mov
addb
cmp
mov
repz
dec
aad
lcall
imul
int
mov
xor
xchg
xchg
pop
lods
add
scas
mov
enter
shl
sbb
aam
cmp
xchg
enter
testl
imul
mov
pop
cmc
es
inc
jne
mov
cwtl
push
loopne
enter
mov
xchg
ljmp
mov
push
fisttpl
stos
adc
cmp
insl
or
je
pop
in
out
and
xchg
sub
adc
mov
adc
sti
testb
insl
in
xor
inc
push
imul
cmp
aaa
xchg
dec
xchg
adc
lahf
and
bound
ds
mov
push
dec
insb
xchg
lock
pop
inc
mov
aaa
lea
pmaxub
and
pop
pop
nopl
jns
ret
pop
scas
jne
fwait
aam
cli
leave
xchg
mov
in
xchg
mov
ret
mov
aaa
xchg
xchg
sub
push
fisttpll
fstpt
aad
sbb
sub
push
jmp
lcall
jno
jno
in
add
jg
inc
idivl
sti
shlb
negl
test
adcl
pop
std
inc
lret
shll
js
repnz
insb
adc
jg
mov
dec
mov
dec
aas
cmpsl
xchg
mov
arpl
pusha
int
adc
mov
inc
cmpsb
pop
ss
mov
inc
or
jg
ret
push
push
xchg
rcrl
or
out
addl
add
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
pop
add
mov
nop
jnp
pusha
lea
lcall
neg
and
stos
mov
fdivrl
movsb
test
push
and
ljmp
test
inc
dec
aam
mov
or
cli
or
roll
sbb
mov
iret
jnp
cmp
push
inc
dec
std
xchg
sbb
jle
add
loop
mov
das
xorl
pop
xor
and
pop
push
dec
out
jae
hlt
mov
jb
pop
lahf
mov
scas
or
push
and
push
addr16
sbb
ljmp
or
adc
cltd
std
andb
fsubrs
push
call
jmp
add
mov
jge
outsl
js
mov
adc
aaa
jp
cld
push
pop
push
repnz
nop
mov
roll
jecxz
insb
js
negl
mov
xchg
fnsave
mov
mov
xchg
test
stc
mov
lret
mov
push
popf
xor
inc
frstor
xor
jecxz
mov
add
fstps
pop
inc
jo
jnp
cmp
and
in
push
mov
fnsave
imul
jmp
in
loop
leave
inc
push
xchg
rcr
xlat
pop
and
ja
dec
clc
scas
movsl
gs
leave
xlat
in
pop
cmp
imul
fs
mov
sub
repz
loop
mov
pop
fwait
jne
xchg
jg
push
jl
les
imul
jne
mov
fldcw
and
imul
pop
dec
aam
sti
jnp
stos
in
icebp
mov
sbb
jecxz
add
icebp
pop
addr16
push
mov
dec
insl
push
mov
sbb
das
fiaddl
je
stos
jle
jbe
push
jne
shll
shl
cwtl
out
repz
or
push
adc
and
pop
mov
hlt
idivl
and
mov
les
in
xchg
xchg
in
shl
int3
inc
call
aas
lods
outsb
test
out
add
enter
leave
call
push
mov
fisubs
nop
ljmp
aaa
enter
imul
test
in
pusha
or
std
dec
push
xchg
notb
divb
jecxz
addr16
cmp
add
jb
shr
out
fiaddl
dec
push
in
push
jl
add
cmp
or
shlw
addr16
aam
add
sarb
call
cld
xchg
mov
popf
repz
sbb
jb
pusha
jp
or
add
pop
das
int
mov
cmp
adc
xchg
out
add
pushf
mov
cmp
rcl
sbb
push
and
sarl
mov
push
cs
ficoml
ja
test
dec
push
sarl
and
sub
rcl
add
jae
in
xchg
clc
jb
cmc
pop
and
sub
call
negl
cvtps2pd
stos
or
addr16
lahf
xchg
sub
shl
xchg
mov
filds
out
clc
nop
fs
lret
push
dec
xlat
mov
pop
and
jp
loop
add
push
or
incb
jmp
add
push
addb
leave
mov
add
stc
out
roll
jno,pn
mov
je
bound
aad
pop
pop
mov
popa
dec
xchg
fadds
mov
or
jo
test
subl
and
and
mov
bound
mov
std
call
push
sub
xchg
cmpsb
sbb
repz
fdivr
or
mov
push
xor
adc
pushf
mov
or
out
and
add
and
in
mov
loop
pushf
mov
loopne
ret
cmpb
dec
sub
pop
arpl
fisubl
outsb
stos
push
or
lahf
gs
mov
ret
lea
leave
aaa
xchg
repnz
push
fsubrp
fbld
test
inc
jle
mov
fcomip
add
sub
lahf
xor
aaa
sub
adc
pop
out
in
cmpsb
aad
sarb
fbld
bound
js
jmp
cmpsl
and
movsb
add
pop
dec
jp
pop
mov
push
scas
adc
mov
das
ljmp
sbb
sti
sbb
lods
fidivrs
or
add
xor
dec
lret
cmp
mov
dec
cmp
sub
sbb
fldcw
aad
inc
push
mov
call
inc
mov
out
insb
hlt
mov
jns
pop
xchg
adc
inc
lret
and
incb
cmpsl
aam
and
add
ret
push
lahf
add
or
insb
lock
cwtl
or
push
pop
mov
loopne
ja
and
cwtl
cmp
pop
inc
jae
mov
int
loop
add
insl
xor
sti
ds
sbb
pushf
cmp
cli
rolb
mov
push
mov
inc
push
push
xor
enter
cmpsl
adc
jae
sbb
stc
pusha
jge
add
js
lea
jle
dec
into
lods
push
cwtl
sbb
lret
mov
sbb
jne
mov
mov
in
ror
gs
mov
dec
into
iret
xor
xchg
jns
in
cmpsl
pop
adc
push
push
add
repnz
insb
mov
xor
mov
push
lods
jne
in
int3
mov
pop
sub
xor
xchg
push
add
test
test
xchg
cs
jne
or
lds
andb
rorb
jg
xchg
adc
add
adc
dec
popa
xor
inc
inc
nop
add
push
inc
xchg
mov
sti
cmp
push
in
or
mov
test
cwtl
out
add
repnz
cltd
ss
imul
fcmovbe
mov
jne
xor
mov
mov
jae
add
inc
call
lret
outsb
int3
popf
cmp
push
in
adc
adc
test
jo
shlb
inc
ja
andl
jge
stos
repnz
pop
lahf
repz
jno
loopne
inc
int
mov
popf
testb
push
mov
xchg
sar
insl
xchg
lcall
xchg
test
dec
mov
xor
cld
inc
sub
dec
xorb
scas
cli
divl
dec
js
cld
add
lock
or
pop
insl
dec
sahf
into
push
in
nop
jecxz
stc
push
out
fmull
jnp
movsl
jbe
or
or
mov
xchg
jns
mov
stos
lret
xor
bound
out
fcmovnu
push
and
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
sti
push
add
and
add
mov
mov
push
rcr
xor
jo
push
rclb
icebp
pop
mov
repnz
lret
ljmp
into
ret
jo
jns
fmull
mov
subb
test
xchg
adc
cmp
dec
mov
test
imulb
mov
push
cmp
sbb
std
sarw
cld
inc
pop
xlat
out
loopne
sbb
jbe
pop
push
sti
lods
sub
fisubrl
cmpsl
cmpsl
cmp
je
fnstsw
pop
mov
push
in
sarl
ja
call
fisubs
fisubrl
fwait
or
add
in
mov
sbb
add
push
sbb
rcl
movsl
mov
cmp
cvtps2pi
in
mov
repz
test
xor
xor
int
xchg
or
jle
aad
xor
rclb
cmc
dec
clc
mov
add
pop
xchg
pushl
out
inc
and
and
cmp
aam
rcr
xorl
pop
call
out
imul
xor
pop
js
insl
sub
adc
movsb
ja
pop
arpl
adc
outsb
mov
inc
mov
test
sbb
or
sbb
dec
mov
mov
or
xchg
bnd
mov
inc
mov
cmp
xlat
add
popf
and
mov
sub
stos
mov
jp
in
es
loope
test
lock
mov
rolb
pop
mov
and
test
and
adc
or
inc
movsb
adc
pop
mov
outsl
aaa
sahf
stos
gs
adc
push
fisubs
mul
imul
sbb
ret
icebp
inc
test
mov
jp
push
sub
sbb
ss
inc
mov
out
push
pop
jge
mov
inc
xor
icebp
inc
arpl
mov
add
out
insl
xchg
push
icebp
xchg
ljmp
pushf
pop
add
push
loop
gs
stos
clc
mov
jge
es
xchg
das
les
dec
call
jbe
or
sahf
incl
idivl
cmpsl
add
sbb
sti
clc
fs
pop
adc
lret
icebp
loopne
daa
push
js
or
push
fcoms
and
lea
mov
aaa
stos
mov
add
or
cwtl
les
push
out
jae
hlt
and
ret
lock
pop
out
inc
loop
adc
add
stc
mov
or
push
stc
adc
jo
inc
xchg
jp
sub
in
mov
call
inc
dec
mov
ret
xchg
imul
mov
jo
scas
mov
pop
sub
hlt
inc
out
and
ret
scas
lea
jns
push
mov
lods
cmp
dec
jle
mov
add
js
dec
fbstp
mov
push
and
out
lds
push
rclb
push
sahf
test
pop
adc
inc
jno
in
pop
dec
inc
inc
adc
movsb
lock
xor
frstor
bound
and
popa
add
andb
cmc
je
xchg
dec
ret
fbld
aas
jl
pop
into
mov
mov
fistps
sbb
ret
aad
popa
jg
shrb
fistpl
jns
mov
filds
inc
push
mov
loopne
addb
test
fmul
pop
mov
pushf
adc
add
arpl
cld
cltd
rclb
dec
push
notb
mov
scas
mov
int3
mov
es
lcall
int3
call
add
or
mov
gs
adc
mov
std
mov
mov
inc
mov
mov
shll
adc
mov
lret
pop
int
stos
test
daa
clc
inc
mov
push
test
push
movsb
mov
pop
add
and
or
add
inc
iret
mov
jne
int3
or
stos
adc
movsl
dec
lods
or
dec
mov
enter
jo
in
fs
sub
cmp
aad
sub
out
dec
notl
adc
scas
ja
cwtl
ja
or
insl
aaa
pop
mov
sarb
mov
pop
ror
jmp
es
mov
stos
push
movsl
pop
mov
pop
sbb
mov
push
dec
rcrb
lret
xor
push
mov
out
jnp
mov
xchg
and
imulb
mov
cmp
les
movsb
outsl
nop
stos
inc
push
xor
xlat
inc
cmp
mov
cmp
pop
xchg
jnp
jl
push
adc
loopne
addr16
ss
jge
pop
loope
xor
or
test
and
cltd
nop
and
fndisi(8087
push
xor
dec
push
adc
popa
xor
imul
push
mov
enter
inc
das
or
rolb
aaa
pop
jne
faddp
jbe
jns
fs
pop
jg
ftst
ja
in
rolb
jb
xchg
fsts
pop
adcb
dec
xchg
loop
sub
xchg
mov
fwait
cmp
xchg
sti
xchg
sub
movl
dec
test
out
mov
mov
push
jae
mov
repnz
xchg
cmp
adc
push
loope
xor
imul
pop
data16
in
out
daa
out
mov
test
jecxz
add
xor
xor
test
dec
das
xchg
and
inc
ret
outsl
ret
enter
in
mov
mov
ja
mov
jg
nop
jne
shll
daa
pop
imul
fsubl
mov
adcb
hlt
cmp
in
push
outsl
outsb
add
leave
repz
jae
aaa
mov
adc
shrl
add
inc
inc
stc
cmc
mov
sub
aad
mov
stos
pop
aas
ficoms
cmpsl
jnp
jecxz
sbb
push
fistps
imul
cwtl
push
dec
int3
data16
inc
fisttps
es
or
xor
mov
and
jge
inc
mov
icebp
mov
lahf
je
pop
decl
mov
mov
adc
inc
in
or
sahf
mov
push
mov
jl
into
add
jle
jbe
jecxz
add
jne
out
mov
cmp
add
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
mov
add
add
ror
aas
ficomps
ss
lods
test
out
out
jmp
in
lea
mov
jno
sarb
pushf
aas
lds
inc
je
cmp
hlt
add
mov
jmp
cli
and
out
test
pop
xchg
mov
iret
in
stos
add
push
hlt
testl
lods
ret
inc
xor
sub
push
xchg
jno
mov
jo
jns
or
pop
dec
add
pop
mov
jne
pop
dec
leave
sub
mov
imul
mov
test
mov
xorb
arpl
cmp
insw
mov
cwtl
xchg
dec
jmp
add
sub
sbb
mov
push
fmull
xor
sub
push
mov
insb
js
out
insl
jg
jge
jge
inc
xchg
test
push
adc
ds
xorl
sbb
data16
xchg
add
and
aad
in
inc
cmp
lret
add
or
lea
ds
adcl
into
lcall
test
mov
mov
cmp
jl
and
inc
aaa
jecxz
imul
rep
add
sti
xchg
stos
jnp
test
xorl
and
jae
inc
test
mov
sbb
ja
mov
pop
and
stc
testb
push
ret
int3
sub
sub
adc
or
and
in
iret
hlt
pop
std
lods
stos
inc
dec
movsb
icebp
mov
pusha
mov
mov
and
dec
sub
insb
mov
jge
inc
jmp
aad
add
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
add
add
out
sub
sub
dec
pop
notl
add
sahf
dec
mov
outsl
icebp
dec
pop
adcb
mov
mov
xor
sub
aad
sbb
cmp
in
pop
mov
rcrl
into
pusha
sbb
lods
add
jnp
cmc
aas
or
cs
mov
inc
pop
icebp
rorl
jnp
cltd
aaa
iret
cmp
rcll
sti
jmp
mov
loopne
or
and
test
inc
cmp
fsts
pop
sub
jp
nop
push
or
push
imul
popf
pop
or
add
sbb
ret
mov
pop
fstpt
cmp
xor
fistpll
insl
add
outsb
cltd
cld
sub
push
loopne
pop
jge
sub
pop
mov
push
scas
mov
xchg
js
ds
rclb
sahf
movsl
test
cmc
jno
mov
sbb
test
xchg
int
sub
out
xor
iret
pop
lods
scas
shll
sub
loop
xchg
inc
fwait
inc
jns
jp
aaa
test
add
cmp
scas
les
shrl
hlt
add
adc
mov
out
or
and
rcrb
mov
mov
data16
sbb
or
push
test
dec
pop
xchg
xor
sbb
mov
push
xor
jmp
es
sub
inc
jle
gs
ljmp
dec
cmp
test
rorl
mov
pop
jnp
dec
leave
push
push
push
js
das
scas
outsb
pop
imul
push
and
dec
mov
call
mov
lret
mov
and
sbb
fwait
mov
enter
fistps
xor
daa
adcb
js
or
jnp
cmp
iret
add
cmc
xor
xchg
into
jle
sbb
jne
es
fcoml
data16
mov
out
decl
dec
and
cmp
pop
imul
adc
jecxz
sbb
lea
cmpsb
jo
ss
mov
data16
ja
dec
lea
stos
orl
ss
insl
aaa
sbb
iret
mov
push
mov
sbb
aas
pop
test
sub
pop
test
adc
ljmp
mov
je
mov
aas
pop
adc
xlat
dec
mov
sub
sub
mov
sahf
je
cs
add
xchg
mov
xlat
push
jle
ljmp
xrelease
dec
push
add
sbb
and
ljmp
jne
inc
arpl
addb
dec
js
roll
es
dec
icebp
pop
pusha
dec
jmp
xor
std
clc
xor
dec
sub
setno
mov
subl
adc
ret
sahf
mov
sbb
test
mov
adc
clc
les
xchg
lret
int3
xchg
mov
inc
sub
mov
fdivrl
mov
enter
psllw
fwait
shlb
dec
pop
jbe
repz
pushf
or
popw
mov
sub
push
lahf
out
mov
push
sbb
and
xchg
mov
in
mov
les
bsr
pop
mov
sbbb
arpl
ret
lret
stos
inc
inc
mov
lods
in
aad
ret
sbb
sbb
push
xor
cwtl
push
repz
rcrl
push
mov
push
pop
xor
xchg
mov
xor
lret
sbb
dec
mov
mov
cmpsb
into
xchg
push
xlat
shlb
shr
jne
pop
add
fstpl
bound
mov
pop
push
push
or
jecxz
cmp
in
jecxz
cwtl
cmpsb
call
in
xor
pop
xor
xchg
subl
jnp
push
inc
push
push
loope
ficoml
rorb
lcall
add
lods
test
mov
rcrl
sbb
lock
nop
xchg
adc
jge
pop
mov
aam
mov
ljmp
popl
pusha
pop
inc
adc
push
jbe
push
stos
imul
and
lock
ljmp
je
xchg
int
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
and
pop
add
xchg
jne
scas
adc
test
loopne
in
mov
cmp
dec
xchg
xor
enter
sbb
push
dec
xor
xor
fbld
aaa
cmp
push
add
mov
jbe
enter
mov
out
insl
mov
add
mov
dec
xor
aaa
add
mov
jle
mov
aaa
arpl
in
jge
sub
push
std
dec
fwait
xchg
stc
ret
xor
int
andl
outsb
mov
add
cmp
jg
in
jae
aam
xor
cmp
mov
cmpl
cmp
fwait
adc
dec
sbb
cwtl
mov
sbb
daa
or
inc
test
mov
mov
ret
cmp
inc
out
adc
mov
mov
es
pop
sar
xchg
movsb
cwtl
in
popf
fdivl
adc
hlt
test
aas
mov
repz
mov
mov
inc
and
sub
adc
int
data16
add
mov
dec
sahf
adc
mov
subb
dec
adc
jne
neg
data16
rcll
sub
push
and
xor
fisttpll
loop
shll
pop
sbb
sub
mov
fildl
sbb
sbb
cld
push
xchg
mov
xchg
into
cmpsl
rcrb
and
loope
daa
dec
or
mov
or
rorb
inc
rcrb
cwtl
dec
shlb
mov
out
mov
push
shrb
scas
mov
lock
outsb
dec
inc
fsub
add
imul
jbe
add
mov
out
loope
iret
lods
cmp
xor
pop
mov
shl
and
pop
xchg
popf
in
xor
mov
jns
fsubr
cld
sbb
leave
div
sub
mov
mov
cmc
cmp
pop
das
push
lcall
out
jge
lea
rorb
mov
lods
mov
out
je
bound
frstor
push
push
inc
push
push
aas
cmp
call
mov
int
sbb
loope
push
xchg
mov
push
fwait
ds
subl
pop
jle
shlb
jge
scas
cmp
into
mov
pushf
mov
int
rcrb
fdivr
mov
pop
test
mov
cli
mov
das
stos
pop
js
dec
add
cwtl
adc
aas
push
push
or
in
sub
stc
cwtl
xor
cs
dec
mov
xchg
cmc
sbb
cltd
push
rcr
sub
push
lcall
xchg
mov
push
inc
sbb
mov
xchg
sbb
sub
add
jne
add
mov
xchg
xchg
ret
mov
mov
or
stos
cld
sub
lea
jp
push
lock
mov
daa
jecxz
sbb
rorb
fwait
inc
push
sub
sbb
jmp
adc
adc
incl
add
lcall
mov
negl
mov
or
pop
scas
sub
mov
out
add
testl
je
and
mov
xor
dec
adc
cmpsb
mov
js
repz
in
fsubrl
call
es
mov
jecxz
xor
sub
ss
aas
or
sahf
cli
pop
cmp
in
out
jge
adc
cmp
dec
adc
inc
mov
mov
das
cltd
mov
pop
rclb
loopne
out
es
rol
jl
mov
and
out
xlat
pop
add
in
inc
inc
popf
bound
jb
pop
fistl
jmp
ljmp
jmp
sub
outsb
push
mov
shll
lds
cmp
cmp
fldt
pop
mov
lret
push
add
ret
mov
popf
mov
lret
mov
mov
dec
aad
fcmovnu
push
jl
cmp
push
inc
xchg
enter
movsl
out
nop
push
adcb
fs
leave
jmp
mov
mov
clc
xor
mov
add
cwtl
lcall
push
aam
and
push
add
or
add
cld
outsb
mov
outsb
notl
adc
test
jae
inc
loopne
leave
or
in
xchg
lds
dec
xlat
add
cmp
or
cmp
or
mov
sbb
jecxz
rol
push
or
mov
sub
xor
push
testl
mov
lea
jp
jl
sub
add
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
jp
add
jecxz
add
mov
mov
das
mov
test
xchg
out
das
sub
imul
dec
stos
in
xchg
fwait
push
mov
adcb
in
stc
stos
mov
fsubl
and
shlb
scas
or
xchg
out
xor
loop
add
fsubs
icebp
repz
mov
dec
xor
cmpsl
adc
test
jmp
xchg
or
pop
test
push
cmp
jne
outsb
xorl
into
xor
aam
xchg
xchg
xor
arpl
mov
pushf
pop
inc
and
fists
dec
xor
je
push
cs
fisubl
out
mov
jo
cmpb
jns
in
js
push
ljmp
mov
invd
int
fidivrs
loope
mov
sub
sbb
push
lea
popf
inc
loope
shl
push
mov
std
sarl
mov
push
fstpt
xchg
adc
add
and
daa
inc
stos
xchg
lret
icebp
push
cmc
repz
int3
push
lret
cmp
movsb
enter
sbb
dec
or
aas
adc
adc
fwait
cltd
repnz
ljmp
push
sbb
sahf
mov
ret
xor
in
repz
xor
dec
pop
mov
sti
jns
and
jns
lret
popf
rcrl
pop
mov
push
mov
repnz
call
jno,pn
loope
add
shlb
out
inc
arpl
inc
push
mov
cmp
hlt
enter
and
xchg
scas
sbb
mov
push
and
mov
cmp
ss
mov
in
cltd
ds
je
ret
cmp
sub
testl
push
mov
pop
adc
orb
push
inc
jg
dec
repnz
movsl
cmpb
push
lret
std
and
adc
call
push
mov
fdivrp
xor
xlat
cmp
mov
pop
ret
mov
xchg
mov
mov
mov
cmp
mov
push
xchg
jb
ljmp
lahf
or
pop
pop
mov
mov
incb
push
mov
iret
hlt
decl
icebp
xor
iret
insl
mov
and
fcmovbe
push
cmp
incl
push
push
mov
shll
push
mov
sub
lcall
in
inc
and
popa
mov
mov
adc
cmp
stc
in
roll
pop
decl
aaa
das
int
lods
push
lret
sub
shlb
lahf
mov
cmc
pop
jl
dec
js
imul
mov
mov
sub
push
inc
mov
mov
inc
ret
dec
outsl
lods
popa
push
add
sbb
xchg
add
pop
xor
cmp
aaa
dec
mov
fcoml
or
pop
push
and
out
push
repz
cmp
jp
cltd
scas
loop
push
xchg
lahf
mov
mov
stc
insb
bound
cmpb
in
imul
pushf
mov
inc
ds
xchg
cltd
mov
jnp
dec
xchg
push
mov
pushf
fiadds
call
sub
push
stos
out
pop
push
lcall
call
jae
mov
mov
sbb
int
inc
cmpl
movsb
jns
ret
adc
lret
jmp
std
mov
call
stc
pop
mov
dec
cmp
jmp
cmp
fwait
not
inc
lds
out
stos
xchg
mov
jne
mov
push
push
jbe
dec
arpl
sub
inc
fs
out
out
sub
pop
mov
mov
loop
mull
jp
push
decl
push
inc
pop
les
adcl
fiadds
insl
out
imul
dec
sub
and
cltd
mov
ljmp
out
stos
push
adc
push
jl
inc
push
jno
out
faddl
repnz
mov
jns
icebp
jne
mov
add
neg
adc
sbb
cmc
pop
mov
xor
test
sbb
addr16
enter
cld
sub
das
xchg
xchg
fwait
cmp
and
lcall
jle
pop
ret
dec
stos
pop
push
mov
sub
jb
xchg
jo
dec
add
and
dec
xchg
pop
xlat
pop
cld
movsl
fildl
je
movsb
xor
in
clc
pushf
shr
push
adc
imull
imul
cmc
mov
jmp
dec
popa
arpl
push
jmp
ret
push
icebp
add
loope
mov
xor
rcrb
jno
push
mov
add
push
cmp
push
sbb
das
xchg
lock
outsb
dec
mov
data16
mov
mov
mov
add
jg
pusha
mov
fsubs
insb
icebp
sbb
scas
xor
fdecstp
sub
lods
dec
ret
shll
sub
pop
pusha
mov
mov
int
adc
add
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
push
add
add
add
add
xor
fs
mov
jl
jno
lret
mov
lods
xchg
mov
iret
mov
mov
cmpsb
iretw
sub
btc
lods
sbb
test
and
lcall
pop
push
sbb
push
and
lds
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
pop
add
inc
or
add
xchg
and
mov
lret
jg
repnz
adc
inc
je
lahf
dec
jbe
xchg
inc
test
jecxz
lret
sub
adcb
xchg
jmp
and
imul
jnp
subb
dec
or
mov
sbb
decl
mov
adc
push
lahf
sbb
outsb
je
inc
jnp
and
dec
xor
es
insl
in
jge
call
push
and
hlt
out
xor
in
es
ds
push
adc
xchg
jae
sbb
and
mov
xchg
mov
in
xchg
jmp
pop
daa
les
mov
mov
out
lret
data16
lea
ds
out
push
shll
pop
pusha
ret
push
xchg
iret
mov
fs
ljmp
cmp
stos
fldl
pop
sbb
mov
les
ret
add
jbe
sub
jae
jg
mov
cli
fldenv
jl
dec
adc
pop
inc
incb
es
ss
aaa
andl
cs
fisubrl
imul
clc
outsb
sub
bound
inc
decl
int3
popa
imul
aaa
frstor
pop
es
mov
inc
mov
lds
push
out
dec
loopne
lret
xor
push
test
cwtl
sbb
cld
push
int3
outsb
xchg
sbb
sarb
popf
mov
pop
or
ficomps
dec
gs
lcall
popa
aaa
dec
lcall
or
mov
in
xor
dec
jb
mov
lcall
movsl
sbb
sub
icebp
jecxz
repnz
mov
hlt
cmp
mov
push
pop
data16
cli
ret
call
stos
dec
repz
bound
lock
and
mov
in
mov
iret
mov
and
scas
or
lock
iret
int
into
rcrb
daa
mov
mov
int3
cmpsb
ja
faddl
outsb
mov
jnp
enter
inc
cwtl
pushf
in
pop
icebp
inc
rol
int3
sub
or
popf
jbe
dec
push
repz
out
stos
jb
insl
hlt
jp
xor
insb
lock
fstpt
je
or
aad
es
es
iret
jecxz
jo
mov
ret
aas
mov
lea
in
jns
push
pop
call
push
subb
and
mov
sbb
jbe
loope
int3
push
add
movsb
ret
and
or
std
lea
cld
add
pushf
or
cmc
mov
addb
test
sub
xchg
clc
lds
and
iret
sub
push
and
cltd
nop
aad
xchg
mov
test
mov
push
inc
pop
fdivrs
mov
aas
paddb
jle
jmp
mov
les
inc
push
daa
sbb
ja
xchg
jg
adc
cli
subl
pop
sbb
fnsave
outsl
test
mov
push
adc
in
add
data16
cwtl
fwait
inc
fstpl
outsl
ss
adc
jge
movsb
add
adc
xchg
sbb
add
pop
fists
popf
rcrb
xchg
fsub
inc
pop
dec
into
je
pop
jo
sbb
adc
lcall
test
pusha
stc
jns
mov
ret
sbb
sub
adc
mov
clc
or
add
inc
jge
aad
popa
lret
and
jne
out
int
dec
daa
int
bound
lea
cmp
cmpsl
adcb
adc
xchg
das
sahf
inc
cmp
call
or
data16
std
mov
popf
sbb
sub
into
add
in
shr
mov
sbb
rorl
sub
imul
add
mov
jns
sar
xchg
inc
xor
sti
mov
stc
xchg
test
xchg
fxtract
loope
frstor
test
jp
dec
stos
xlat
jmp
mov
jmp
adc
jg
out
nop
outsl
mov
sarl
pop
pop
mov
in
sbb
dec
cwtl
adc
lahf
mov
mov
shll
fucomip
and
nop
mov
fistpl
addb
xor
cltd
xor
cltd
dec
jnp
adc
push
cld
inc
lock
lock
sbb
lods
xlat
push
ret
les
cmp
push
stc
and
adc
arpl
iret
pop
leave
sti
inc
adc
stos
sbb
mov
xchg
cmp
add
sbb
outsl
les
fistps
movsb
test
or
ss
in
sbb
sub
filds
or
mov
xlat
mov
push
movsl
leave
push
and
ljmp
scas
xchg
adc
shlb
push
ss
cmp
dec
pop
fldpi
fcompl
pushf
push
repz
cmpsb
mov
mov
aad
lret
mov
or
nop
pusha
mov
outsb
ret
pop
cmp
mov
bound
jno
leave
loope
lahf
loopne
pop
mov
divb
jp
or
test
lret
inc
cmpsl
inc
add
out
mov
mov
cmp
imul
push
cwtl
and
lds
ss
divl
push
push
fdivrp
mov
jp
mov
mov
ja
fimull
popf
flds
je
cmp
and
mov
mov
pop
call
push
and
push
inc
xchg
push
mov
jno
sbb
rcr
nop
mov
lods
out
mov
push
cmp
inc
in
jp
xor
xchg
mov
imul
imul
cmp
add
dec
adc
and
mov
xchg
mov
arpl
xor
mov
lcall
jp
lock
dec
xor
imul
adc
cld
add
xchg
aad
lds
test
int
jge
sarb
aad
lock
inc
mov
inc
cmpsl
or
gs
lods
xchg
mov
int3
pop
arpl
adc
shlb
add
fs
adc
jno
push
mov
test
sub
and
lods
push
xchg
test
sahf
cmp
dec
pop
push
lret
rcrl
scas
lds
xchg
inc
loop
repz
inc
paddw
xchg
mov
xchg
shlb
es
fstps
cmp
adc
cld
popa
xor
cmp
ret
jl
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
add
add
mov
stos
loopne
leave
fsubs
ljmp
or
sbb
jb
adc
cld
xlat
sbb
js
dec
pop
ret
xchg
cmp
std
outsb
pop
push
fnstcw
repz
add
stc
aas
mov
push
or
orb
out
loopne
sbb
loope
ret
ljmp
push
into
inc
sbb
leave
popa
movsl
stos
and
cld
ljmp
stos
addl
jbe
loopne
scas
ja
popa
addr16
pop
and
repz
sub
and
cwtl
push
test
fcmovu
jnp
sahf
aad
push
or
xlat
bound
add
jl
mov
mov
dec
jo
pop
dec
mov
test
sbbb
repz
in
ja
jnp
imul
jl
jecxz
icebp
adc
mov
int3
sub
testb
js
dec
neg
das
or
sub
repz
pushf
fs
xchg
pusha
inc
and
lds
daa
popa
sbb
pop
sbb
cmc
orb
fwait
lea
inc
pop
inc
nop
js
rep
mov
xor
pusha
or
or
pop
lret
ljmp
or
stos
pop
sbb
sbb
mov
mov
cmp
inc
sahf
aad
insl
mov
cmp
bound
xchg
and
je
int
pop
and
xor
popf
outsl
inc
xchg
xor
dec
fists
jb
or
cmpsl
je
or
fildll
movsb
xchg
outsl
icebp
loopne
inc
xchg
repnz
inc
cmpsb
sub
testl
mov
es
xor
jno
jle
push
jge
mov
loope
mov
cli
das
in
std
negb
dec
mov
mov
mov
adc
filds
mov
into
add
ds
xor
dec
cmc
sbb
sbb
in
or
push
push
aam
lret
dec
jmp
mov
out
in
stc
push
aaa
cmp
sub
add
fwait
xor
rorl
stos
sbb
roll
pop
in
inc
xchg
sysexit
orb
in
mov
rcr
test
fisttpll
ds
xor
push
pop
cmpsb
ds
and
inc
lds
sub
popf
mov
sbb
aam
cmp
sbb
push
int3
clc
out
inc
cmp
outsl
mov
les
cmpsl
out
xor
bnd
mov
fisubs
mov
divl
adc
sub
or
mov
push
xchg
push
xor
es
and
repz
lods
repz
xor
mov
mov
int3
cmovle
ret
pop
mov
add
sub
mov
movsl
mov
jae
lcall
enter
lcall
or
mov
pushf
xor
lods
dec
add
daa
sbb
or
mov
cwtl
lret
cltd
lahf
mov
pop
and
or
push
add
lds
or
sbb
push
push
lahf
inc
mov
mov
fdiv
addl
jb
xor
popf
jns
push
mov
xlat
std
pop
ret
and
mov
inc
xor
ja
lcall
test
in
pop
jns
pop
jle
push
mov
fisubl
xor
xchg
dec
ja
movsb
mov
xchg
ret
jo
bound
out
mov
orb
xor
ljmp
rolb
adc
jecxz
pop
pop
push
andl
mov
add
cmp
ds
imul
or
sub
inc
push
lods
fistl
out
inc
mov
lahf
mov
orb
sahf
dec
test
pop
aam
xchg
test
mov
push
pop
and
mov
imul
imul
mov
pop
rclb
cmc
out
cltd
fdivs
shrb
lods
imulb
adc
jge
int
ljmp
mov
shll
leave
push
pushf
xor
sahf
jmp
gs
mov
mov
fisttpll
xor
mov
sbb
imul
sbb
cmp
je
negl
out
push
leave
movsb
popf
jle
out
add
or
and
mov
imul
sub
pop
pop
pop
mov
movb
jl
inc
loop
movsl
mov
push
call
xchg
stos
xor
mov
xor
subb
jecxz
lahf
sahf
inc
out
or
popf
ljmp
bound
icebp
xchg
xor
dec
mov
mov
popa
fwait
xor
stos
cmp
dec
movsl
in
in
xor
push
jae
pop
jg
push
andl
pusha
sti
jecxz
shl
inc
test
sbb
xchg
repz
xchg
imul
dec
shll
or
inc
loope
push
aas
sahf
or
jmp
push
int
mov
repnz
repz
scas
int3
pop
bound
out
cmp
xlat
jne
dec
pop
scas
into
mov
mov
jno
rolb
sbb
jbe
jo
loopne
movsb
xchg
sub
in
mov
inc
es
pop
rcr
std
xchg
imul
xchg
push
inc
ror
inc
out
cmp
sub
bound
int3
ss
mov
fiadds
fsubrl
cs
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
cmc
add
add
filds
xchg
es
pusha
addb
pop
sub
inc
enter
outsl
aas
add
push
test
arpl
mov
cwtl
inc
fimuls
adc
push
arpl
je
pop
xor
inc
fmuls
push
andl
push
push
call
bound
std
jns
lods
mov
jecxz
push
adc
xor
inc
lds
add
in
jne
push
sarl
fidivl
scas
lea
leave
mov
sbb
pop
loop
inc
cltd
lock
or
mov
mov
jns
aad
popf
and
mov
jno
imul
cwtl
add
pop
out
dec
int3
xor
aas
jne
aas
xlat
ret
and
leave
sub
andl
inc
shrb
fwait
out
add
icebp
les
lods
cmp
xlat
pop
inc
fs
or
cmp
mov
and
fistl
mov
out
mov
dec
pop
pop
adc
int
cmp
in
inc
in
shlb
jne
popa
mov
repnz
inc
repz
fistpll
mov
pop
scas
out
jno
adc
daa
outsl
sbb
sub
rcr
inc
pop
push
aaa
pusha
cmp
imul
in
cmpsl
repz
adc
addl
cmpsl
fidivrl
test
pop
pop
fs
push
frstor
jge
adc
pusha
ljmp
stos
sar
icebp
jo
cs
ffreep
dec
out
nop
xchg
sbb
adcb
pop
add
aas
mov
nop
movsb
inc
push
loopne
push
xchg
pushf
test
mov
cltd
ficomps
rorl
or
inc
sub
sub
enter
inc
ljmp
leave
mov
test
loopne
pop
imull
jb
mull
lods
stos
mov
xchg
in
inc
mov
imul
inc
in
addr16
mov
stos
add
push
adc
pop
xor
sub
pop
mov
or
loop
add
lcall
xor
stos
mov
fsub
push
enter
mov
pop
sbb
xchg
or
in
xchg
call
cmc
out
repz
fisttpll
sbb
add
cld
xor
in
test
test
std
push
cmpsl
push
test
xor
cmc
fisubl
shl
mov
ds
sti
or
sti
or
sbb
dec
push
dec
xchg
dec
fisubl
insl
adc
test
cmp
fimull
dec
push
aam
fucomp
adc
push
mov
aas
push
pop
xchg
mov
xor
imul
sub
les
push
sbb
lret
in
pop
scas
xor
pop
ljmp
in
jmp
icebp
mov
arpl
mov
push
add
jecxz
mov
mov
mov
xor
push
pop
sbb
bound
sub
sbb
or
rolb
push
scas
add
inc
pusha
xor
shll
inc
lods
mov
sbbl
jno
mov
push
mov
xchg
faddl
jp
ret
in
pushf
imul
dec
xchg
sbb
int
adc
fucomip
test
andl
push
mov
inc
and
and
push
rorb
sbb
loope
clc
add
pusha
shll
cld
push
dec
dec
mov
call
cwtl
nop
popf
inc
add
insb
test
out
add
imull
movsb
xchg
aaa
inc
pop
rcr
arpl
jge
push
sub
mov
inc
fwait
dec
int
xor
push
sbb
mov
mov
addr16
mov
test
pop
idivl
es
das
dec
sub
xlat
or
test
inc
dec
cmpl
inc
adc
lods
cmp
push
jl
cwtl
xor
aas
add
mov
push
inc
lret
xchg
mov
mov
adc
inc
and
movsb
jne
es
and
mov
aad
cmp
inc
mov
xchg
loope
fsts
push
and
xchg
push
pop
aad
mov
mov
sub
fwait
sub
mov
mov
sbb
jle
aaa
in
stc
ljmp
xchg
xor
dec
lods
cmp
jno
inc
xchg
test
jmp
add
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
add
add
add
add
sub
push
push
aam
push
jecxz
mov
xor
sub
lods
fsts
mov
das
into
cmp
insb
stos
mov
push
sub
dec
shll
test
das
mov
and
popf
sub
or
jb
push
or
or
mov
jno
div
xor
aas
fs
paddq
dec
sub
arpl
adc
mov
test
js
mov
fiaddl
xor
xchg
iret
out
std
out
mov
lahf
hlt
into
sahf
sub
aaa
push
sub
jge
add
outsb
mov
js
mov
scas
inc
lock
sti
mov
cmp
fsqrt
faddl
outsb
iret
scas
xchg
mov
mov
push
fstps
xor
jl
push
daa
push
enter
data16
test
cmp
ret
pop
xor
addr16
faddl
pop
dec
mov
pop
jno
mov
push
dec
pop
xchg
out
aad
pop
enter
push
push
or
add
les
aam
sbbl
std
stos
jbe
xchg
popa
int3
int
bound
cli
fstpt
imul
nop
pop
cmp
cmpsl
push
test
cwtl
jp
jb
std
in
scas
add
jne
add
scas
pop
and
popf
int3
stos
divb
cmc
movsb
test
cmc
push
stos
jb
fisubs
icebp
add
stc
dec
test
fcompl
jnp
cmp
dec
jmp
das
cmp
xlat
fdivrl
mov
out
ficoms
ret
loope
fucompp
add
stc
or
sbb
cmc
mov
sub
jae
cltd
loop
neg
sub
push
les
jmp
dec
movsb
data16
jnp
mov
xor
dec
int
mov
out
pop
dec
repnz
fstpl
add
inc
adc
jb
loop
mov
mov
xlat
adc
mov
gs
cltd
mov
imul
loop
popa
xchg
mov
arpl
loop
inc
lods
mov
sbb
fwait
fwait
sub
jne
jae
push
xchg
cwtl
pop
jecxz
and
fdivrl
stos
xchg
or
pusha
outsb
hlt
jns
rcl
pop
ljmp
and
lock
fldl
add
mov
ss
es
jmp
mov
scas
inc
sti
pop
movsb
cmpsb
call
into
inc
das
mov
cwtl
cmp
xor
xchg
cli
mov
js
mov
lods
xor
jge
nop
cld
iret
addb
arpl
sub
or
ds
int
in
sub
jle
lock
and
das
adc
pop
rorb
pushf
push
mov
mov
lret
fucomp
or
mov
pop
sarb
lock
jp
aaa
pop
inc
cmp
push
mov
mov
jmp
push
popf
and
xor
sub
xchg
jg
cmp
cmpsb
mov
insl
jnp
movsb
fidivrs
jmp
dec
dec
lahf
jbe
aaa
pop
decl
test
lcall
mov
jg
push
cmpsl
shl
push
pusha
push
jne
outsb
into
jns
adc
je
xor
pop
je
xchg
les
jb
ret
xchg
sbb
sbb
mov
xchg
lods
jl
push
add
icebp
daa
roll
adc
enter
imul
add
mov
sbb
incb
out
xchg
call
sbb
pushf
fcoml
cmpsl
rolb
pop
aam
xchg
aad
sbb
add
outsl
add
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
sub
add
push
add
sub
push
aas
ljmp
dec
xor
push
in
addr16
inc
add
test
popa
pop
mov
lcall
stc
add
addl
imul
mov
mov
jmp
daa
jge
and
push
jnp
cmpsb
dec
ret
and
xor
and
stos
rcrb
loop
xchg
bound
mov
inc
outsl
pop
repnz
push
mov
mov
ret
or
sarb
icebp
xor
add
mov
scas
xor
inc
mov
adc
cmp
fbstp
sbb
and
sub
jbe
push
pop
push
mov
sub
mov
add
les
sub
cmpsb
push
adc
mov
pop
sbbb
cmpsb
leave
out
bound
adc
in
jne
xor
cmp
mov
xor
fidivrl
push
cmpsb
mov
scas
cmpsl
leave
jbe
cmp
adc
imul
inc
jne
jno
sti
adc
cmpsb
ret
and
xchg
repz
jo
xchg
dec
in
fdivrs
inc
xchg
mov
repnz
or
jmp
insl
xchg
lods
int3
push
in
mov
xlat
out
jg
push
dec
or
ja
xor
lret
dec
mov
or
outsl
std
jb
sub
lcall
nop
dec
loope
andl
and
push
xchg
jns
call
pop
pop
xor
mov
xor
out
sub
int
cmp
jbe
pop
dec
push
sbb
cmp
insl
xchg
cmp
jp
lea
xchg
push
or
adc
mov
js
lds
push
mov
insl
in
sub
jecxz
ffreep
sbb
jo
repnz
xor
ret
cli
fldl
mov
loop
mov
adc
sbb
or
in
insl
sbb
mov
jo
icebp
cwtl
cmp
mov
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
or
add
lret
add
mov
mov
sbb
div
push
mov
fidivrl
in
pop
and
iret
repz
int3
ret
testb
sbb
std
fs
add
idivl
pop
jp
orb
xor
into
daa
out
mov
mov
inc
pop
sub
js
clc
clc
jmp
push
pop
xor
cmpsl
addr16
dec
mov
mov
mov
dec
xor
mov
cmp
sbb
pop
sub
xchg
push
pop
in
jecxz
repz
aam
shll
jp
adc
jno
in
outsl
sahf
jae
scas
je
lea
pop
movsl
ret
outsl
ja
shlb
push
sbb
inc
jb
aad
cmpsl
or
sti
arpl
push
jmp
or
popf
and
out
pop
add
pop
dec
lret
stos
bound
insb
mov
dec
cwtl
sarb
insl
xor
inc
or
sbb
nop
cmpsb
xchg
inc
jmp
int3
lods
push
in
xor
add
in
imulb
mov
lods
ja
aas
cwtl
dec
inc
outsb
mov
in
ss
xor
cld
stc
jb
inc
ja
xor
pushf
mov
testl
sbb
sbb
scas
mov
pop
mov
add
lock
xlat
ds
arpl
rorl
mov
add
popa
rorb
cwtl
push
add
inc
dec
or
popf
in
int3
hlt
mov
mov
and
sub
dec
push
xchg
jns
mov
add
adc
scas
scas
dec
sub
clc
sub
mov
arpl
or
cld
xchg
imul
stos
sub
bound
fs
push
dec
vmovdqu
repnz
rcl
adc
push
mov
push
and
mov
mov
inc
push
sbb
ret
cli
test
add
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
add
add
push
lahf
or
adc
ljmp
fs
shl
dec
pushf
fstp
insb
adc
add
loope
xor
aad
les
ja
sub
add
push
outsl
ret
push
or
xchg
xor
xchg
dec
xchg
push
ret
sahf
sbb
xor
test
loopne
adc
pop
ss
mov
lahf
pop
or
mov
sbb
ds
fadd
inc
pop
sub
jae
int3
sahf
jecxz
dec
shl
in
add
jle
icebp
mov
loopne
sbb
je
or
cld
push
dec
decl
jle
rcl
gs
out
incl
enter
mov
cltd
xchg
out
ret
lcall
into
sub
in
arpl
dec
insb
out
jge
and
mov
int
push
loop
aas
ja
lahf
in
jno
xchg
mov
inc
incl
xchg
xor
pop
dec
ds
sub
mov
cmp
push
fsub
test
repnz
cmpsl
sub
fisubrs
mov
lret
inc
outsb
cwtl
cmpsl
aam
add
xor
adc
add
aaa
mov
fsubs
and
mov
sbb
repnz
rolb
jmp
dec
cmpsl
filds
pop
jbe
sub
inc
adc
jp
lahf
shrl
test
shrb
adc
inc
xor
pop
enter
mov
or
sbb
test
pop
movsl
cltd
outsb
rcll
incb
pop
or
out
xor
lds
ficoml
inc
or
popa
loope
push
push
xchg
fisubl
leave
outsl
out
push
mov
fs
insb
imul
jns
inc
jne
xchg
lock
icebp
and
add
mov
cld
xchg
xchg
inc
rclb
fwait
push
shll
gs
jg
stos
xchg
xchg
imul
xor
outsl
lcall
mov
rep
arpl
int3
cmp
sbb
arpl
pusha
sub
cmp
sti
pop
je
stc
xchg
loop
lahf
iret
or
sub
fucom
adc
aas
inc
repnz
mov
add
out
lods
sbbb
das
rcll
and
in
inc
xchg
xchg
lcall
and
bound
inc
xchg
daa
in
fstl
jge
mov
add
ds
inc
pop
ss
pop
add
into
lods
or
cwtl
pop
add
add
les
xchg
push
adc
iret
stos
not
stos
mov
addl
call
ss
leave
mov
sbb
cmp
mov
test
mov
enter
lock
adc
mov
cltd
mov
pop
lahf
jg
out
shrl
push
push
nop
pop
xchg
dec
or
push
jecxz
js
les
sbb
jg
shlb
and
lahf
xchg
xor
jnp
mov
incb
and
out
repnz
lods
mov
pusha
sub
fisubrs
add
test
aas
les
rcl
sub
mov
out
and
adc
jnp
dec
jnp
rcll
in
dec
push
adc
int
adc
jns
testb
jb
das
cmp
lods
and
comiss
and
cli
in
lock
inc
jns
add
push
mov
call
test
inc
das
mov
push
pop
or
test
xchg
jle
jmp
test
inc
pop
stc
popl
lds
test
es
inc
repz
xor
cs
orl
sbb
inc
cmp
sti
pop
mov
jg
mov
cmpsl
push
jmp
pop
fadds
loopew
sbb
popa
jae
xor
or
outsb
or
dec
jne
loop
fwait
xor
xor
and
fs
pop
mov
dec
lea
xchg
push
cmp
cli
mov
or
adc
inc
scas
dec
xchg
add
sbb
fistl
stos
iret
mov
add
mov
imul
aam
sub
inc
add
enter
outsl
popf
jp
in
adc
ret
out
das
jnp
aam
and
inc
mov
and
mov
cmpsb
lds
mov
inc
sarb
pop
fstps
addl
mov
cmc
or
js
push
jecxz
popf
fldl
xor
sbb
jg
cltd
hlt
outsl
aam
or
scas
dec
loop
imul
or
roll
cmpsb
mov
sbb
lods
inc
aad
inc
add
mov
cli
lcall
cmpsb
arpl
add
inc
mov
jecxz
and
in
jmp
and
lods
stc
mov
rolb
cwtl
lret
clc
push
popa
data16
mov
lock
and
xchg
adc
movsb
or
and
xchg
addr16
mov
inc
leave
imul
dec
cld
aas
adc
gs
xchg
insb
movsl
inc
out
lret
cld
stos
mov
sbb
jne
into
xchg
xchg
add
hlt
mov
mov
mov
push
add
cmp
hlt
mov
repnz
scas
inc
push
arpl
sbb
cwtl
sub
es
mov
orb
enter
add
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
pop
add
add
add
insl
lock
pop
and
sub
repz
pusha
cmp
dec
mull
jecxz
fnsave
es
jae
mov
lahf
stc
cmp
cmpl
adc
fisubl
in
xchg
loopne
in
mov
jl
inc
pop
mov
ss
mov
sbb
add
and
push
mov
pop
jg
das
mov
test
mov
bound
mov
cmp
popl
mov
faddp
push
mov
test
or
lods
dec
sbb
xor
das
aam
js,pt
iret
stos
jl
cmp
push
mov
pop
call
mov
gs
outsb
xlat
xchg
shrl
pop
jbe
xchg
cmc
subl
sbb
insb
stos
jno
sub
lret
sbb
decb
in
push
sahf
mov
jne
adcb
inc
cmpsl
jnp
mov
subb
fistpl
jbe
cmp
push
push
je
push
ds
pop
xchg
or
cli
test
shrb
mov
ljmp
adc
sbb
push
xchg
pushf
out
in
jno
sar
lock
xor
ret
inc
sbb
test
sub
mov
rcrb
lea
adc
xchg
sti
and
push
subb
push
orb
xor
pop
and
ret
int3
fdivr
xchg
mov
push
cmpsl
jae
mov
shll
mov
xchg
xor
jge
out
imul
adc
sub
outsl
mov
xlat
add
sub
push
gs
ja
xor
loop
les
adc
jne
dec
imul
int3
addr16
push
push
pushl
inc
bound
fstp
jnp
imul
sbb
dec
loopne
xor
pmuludq
fistpll
repz
cltd
lret
fcoms
stos
xchg
pop
cmpsb
or
stos
xchg
aad
sbb
add
rcll
fisubl
mov
pusha
in
lods
push
iret
sub
sti
push
adc
loope
dec
xchg
inc
ljmp
in
mov
push
or
pushf
ret
aas
sub
add
mov
hlt
call
dec
pusha
and
insb
jg,pt
xchg
sarb
jle
mov
test
test
jno
pop
pop
dec
fsubrs
xchg
or
outsb
xor
dec
outsl
mov
addr16
mov
pushw
in
nop
sbb
add
pop
sti
xchg
xor
cltd
jo
outsb
in
popf
mov
or
sub
in
imul
out
leave
fstps
rolb
add
movsl
movsb
cmpsb
popf
sbb
pushf
aad
scas
mov
decl
and
cmp
or
fldenv
mov
adc
sbb
push
mov
and
mov
inc
sbbl
sti
shlb
movsl
lea
add
add
sbb
mov
repz
push
inc
and
jmp
sub
dec
inc
popa
outsb
movsb
inc
je
jmp
jl
popa
rcr
sbb
or
icebp
pop
ficomps
jne
mov
sbb
fsubrs
pop
jb
lret
test
xchg
stc
in
lods
xor
push
or
and
mov
mov
adc
or
jecxz
jbe
mov
xchg
scas
fwait
aas
shr
fbld
aad
sbb
fisubs
add
fwait
xchg
ret
test
sub
mov
dec
cmp
test
fisttpl
test
xorb
adc
stc
push
jp
adc
in
jmp
sbb
mov
cmp
xor
das
mov
push
adc
popa
cmp
push
jb
and
dec
jns
sbb
mov
cmp
nop
into
data16
mov
xor
cs
mov
stc
test
jns
cltd
xlat
dec
inc
xchg
andb
lahf
enter
jne
imul
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
add
add
inc
xchg
fnstenv
inc
call
ljmp
lret
ljmp
adc
fs
sub
jg
mov
insb
cmp
cmp
sub
loopne
fidivl
cmp
pop
lahf
adc
fisubrs
les
insb
cld
mov
test
fcmove
xor
or
aas
shlb
cmc
lret
testl
lret
icebp
rcrl
lods
in
jp
pop
cmp
mov
icebp
add
mov
repz
sbb
les
ret
jae
xor
mov
inc
sub
lock
sub
or
loopne
test
dec
cmp
xchg
pop
fdivrp
loop
test
cwtl
cmpsl
cltd
mov
test
add
mov
in
lods
sbb
loopne
push
xchg
sbb
ljmp
sti
popf
fnstsw
dec
dec
xlat
mov
mov
adc
push
mov
cmp
mov
lds
xchg
lret
push
movsb
std
sar
mov
test
loopne
movsb
fstl
rolb
sub
add
adc
and
cmpsl
mov
addr16
in
cs
inc
jg
shrl
movsb
sbb
andl
nop
int3
repnz
push
cs
or
cmp
pop
sub
dec
mov
ret
orb
inc
cmp
popf
xor
lea
or
imul
cmp
fwait
je
test
push
test
fidivs
mov
mov
shll
mov
stc
test
push
dec
jp
jnp
fsubrl
adc
jnp
mov
stos
jns
adc
push
cmc
movsl
mov
push
imul
pushf
mov
jno
scas
test
cmovns
int
jo
adc
mov
and
dec
aad
mov
mov
mov
rorb
dec
cmpsb
jo
pushf
mov
mov
sbb
jecxz
loop
mov
push
insl
sub
xor
jno
bound
popf
jmp
stc
outsl
sbb
adc
lock
sub
loope
aad
adc
cmp
sub
xchg
pop
push
pop
push
cmp
jae
adc
jbe
add
rcl
std
jbe
int
inc
stc
imul
xchg
clc
jbe
jecxz
fcoms
xlat
mov
mov
jmp
fsubrp
cmc
xchg
lods
push
dec
xchg
pop
cmp
dec
fldenv
push
push
sbb
jb
push
sub
call
or
jecxz,pt
sahf
addr16
push
out
movsl
add
jecxz
popa
and
or
pop
lea
cld
sahf
xchg
subb
lock
xor
add
rorl
mov
inc
into
es
pushf
fistpll
arpl
testl
negb
mov
mov
inc
aam
daa
fstl
std
pop
mov
lds
or
cmpb
cli
fdivp
jl
arpl
pop
mov
call
dec
and
lcall
mov
into
jbe
xchg
das
dec
xor
dec
xor
dec
ret
lock
mov
shlb
bnd
inc
jae
mov
pusha
or
xchg
sbb
aam
out
sarl
mov
arpl
add
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
add
add
mov
push
or
mov
pop
arpl
stos
orb
pusha
jmp
xor
int
jae
push
insl
sarl
push
add
enter
mov
lock
mov
mov
dec
cs
iret
mov
out
jnp
call
in
pop
insl
xchg
outsl
push
lods
pop
gs
push
ret
push
jmp
out
inc
stos
mov
insl
out
repnz
les
insl
mov
add
bound
mulb
inc
fmuls
cmp
sbb
test
fistpl
xorps
cmp
cli
cs
dec
mov
xchg
nop
addr16
shlb
add
sub
lret
mov
jno
mov
cmp
push
xor
mov
loope
aam
lret
push
out
test
xlat
mov
fisubrs
pop
inc
jl
pop
subl
outsl
sahf
and
cmp
xchg
popf
sbb
sbb
mov
mov
push
test
rclb
push
or
mov
shl
fnstenv
inc
in
lock
sbb
ja
idiv
jne
cmpb
pop
jb
imul
cmp
or
cvtdq2ps
pop
jmp
lret
sbb
jl
out
stos
add
sbb
shl
mov
jbe
adc
and
in
pop
mov
push
out
aaa
xchg
dec
jnp
cmp
xor
xchg
cmp
dec
cs
add
test
push
inc
and
insl
dec
xor
je
cmp
xor
sub
rorl
and
call
mov
pop
loopne
clc
jno
push
cmp
pop
push
mov
dec
mov
pop
or
push
stos
cmpsb
xor
arpl
decl
mov
pop
pusha
ret
sbb
cli
and
jecxz
adc
sti
adc
js
add
or
test
dec
jg
ss
fisttpl
pop
pusha
xor
sub
mov
mov
adc
nop
ss
sub
add
aaa
adc
pushf
mov
insb
lahf
dec
int
sti
or
das
jecxz
jno
push
push
cwtl
out
mov
mov
and
in
test
pop
cmp
pop
testb
push
push
jp
ret
rorb
cli
ljmp
pop
adc
out
push
movsb
pop
icebp
mov
push
imul
outsl
pop
xor
adc
mov
fsubl
test
mov
repz
js
or
mov
ljmp
push
add
and
dec
cmpsb
sub
inc
xor
jbe
sbb
cmp
jno
int3
sbb
in
push
dec
cmp
jmp
mov
fucomip
mov
pushf
xchg
das
and
sub
test
lcall
and
insb
in
dec
mov
xor
and
lods
adc
push
or
jecxz
cmp
stos
cmp
testb
fimull
enter
xchg
pop
add
das
push
cmpl
aaa
add
fwait
scas
and
pop
fbld
lock
mov
and
mov
mov
jle
out
out
orb
dec
add
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
push
add
push
or
add
and
pop
jmp
outsl
int3
mov
sub
dec
ljmp
rep
dec
mov
int
sbb
lret
ret
shrl
sti
ds
cmp
stc
cmpsb
jno
sub
out
jge
lds
xchg
cmp
je
arpl
fucomp
loope
inc
push
lea
mov
xor
fcomps
add
pop
jne
idivl
sbb
cmp
cmp
and
clc
sti
pushf
rcl
jbe
test
add
mov
push
cmp
cmp
out
rcll
les
xor
aaa
sub
jl
jmp
sbb
jno
sti
mov
out
push
call
out
out
nop
or
xor
push
cmpl
out
idivb
out
out
or
and
fmul
adc
daa
lret
add
adc
dec
mov
or
test
jge
mov
jne
or
adc
and
rolb
cmp
jbe
jl
add
in
xchg
push
lahf
jg
ret
gs
out
xor
es
or
cmp
mov
and
cmp
add
lds
dec
jo
sbb
movsl
jbe
fs
lret
fdivrs
insb
fdivrl
sbb
mov
adc
mov
fimuls
add
jbe
fdivrs
test
or
push
mov
lods
icebp
lcall
jbe
add
arpl
jmp
gs
inc
int3
cmpsb
hlt
pop
loopne
pushl
clc
pop
sbb
jno
xor
aad
jl
mov
jne
cld
xchg
movsb
lds
xlat
or
xor
iret
adc
jl
sbb
xor
repnz
or
dec
jle
icebp
jmp
in
mov
pop
mov
sbb
sbb
push
imul
lahf
pop
xchg
and
inc
negl
test
dec
xor
fsubs
pop
push
add
inc
popf
popa
lock
mov
sahf
ja
icebp
dec
out
vmwrite
cmc
pop
cmpsl
pop
test
add
mov
mov
xor
mov
inc
outsl
sub
sarb
cmp
mov
pop
adc
daa
xor
ds
bound
sbb
stos
jg
mov
icebp
fbstp
add
out
add
add
mov
cwtl
sub
iret
or
ds
and
adc
add
decl
icebp
sub
inc
or
fsubrs
test
nop
subb
loop
fprem
fdivrl
push
lret
lods
push
cli
shll
inc
roll
mov
fstl
cs
cmp
out
mov
jge
mov
add
cmpsb
inc
orb
pop
and
imul
dec
ljmp
cmp
shll
push
adc
cmp
in
and
imul
nop
cmp
pusha
movsb
popf
rorb
cltd
lret
push
add
sbb
test
outsl
inc
or
sbb
out
aam
or
dec
andl
add
pop
xchg
ja
les
movl
pop
inc
jo
mov
mov
scas
xchg
repnz
fwait
lahf
iret
stos
and
pop
mov
movsb
call
loopne
test
pop
lods
pop
jl
xorb
mov
fwait
push
push
mov
test
loop
push
ja
add
das
imul
sub
push
arpl
rcll
outsl
rorl
hlt
inc
add
in
adc
adcl
loop
nop
inc
cmp
enter
hlt
jmp
loop
cltd
fstps
add
lcall
inc
and
outsb
push
inc
xchg
adc
dec
mov
jbe
xor
jb
sub
jg
add
popa
adc
cmp
mov
cmp
std
imul
mulb
and
xor
push
and
lret
cmpsl
or
sahf
test
mov
nop
pop
adc
jo
cmp
dec
sbbb
pusha
fldcw
push
mov
in
ljmp
or
or
mov
dec
mov
popf
mov
xchg
repz
add
pop
rep
add
push
repnz
adc
xchg
mov
pop
ret
and
sbb
sub
bound
mov
dec
ds
fs
xchg
push
pop
je
jns
sub
jae
jge
adc
jp
sbb
outsl
cmpsb
xor
sub
cmp
in
ret
sbb
in
dec
in
cmp
lret
adc
ja
movsb
stc
mov
and
bound
or
dec
das
adc
es
push
mov
push
xlat
ret
inc
mov
lds
lret
and
pop
les
cwtl
or
xor
rclb
loopne
mov
cmp
adc
rcl
arpl
lahf
fstps
push
inc
xchg
pop
jne
mov
pop
xlat
push
mov
sbb
adc
mov
imul
mov
push
test
popa
shrl
test
add
xor
and
pop
xchg
imul
std
outsl
mov
push
aad
popa
add
adc
and
sarl
xor
lods
sbb
scas
je
jne
fmul
jo
xchg
mov
lahf
shlb
test
insl
cmp
lods
les
cmp
cmp
mov
js
cmp
adc
mov
insl
sbb
adc
push
mov
jbe
push
in
push
adcb
es
dec
mov
push
pop
mov
or
std
dec
xor
stc
xor
insl
and
cmp
iret
xchg
shlb
dec
add
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
add
add
add
add
test
lahf
shrl
or
iret
cmc
mov
lods
sub
leave
insb
insb
xor
rorb
sti
idivl
mov
and
gs
fcmovb
adc
and
data16
pusha
loopne
mov
mov
roll
shll
mov
dec
in
mov
aaa
rolb
sbb
push
clc
aad
ret
mov
push
pop
test
mov
mov
hlt
pop
fstps
leave
pop
add
jle
cltd
pop
call
sub
andl
int
loopne
add
out
mov
sbb
insb
fldenv
cmp
sub
sbb
and
cmp
insl
paddb
or
out
arpl
les
leave
jg
pop
sbbb
cwtl
and
filds
gs
mov
jnp
imul
dec
xor
and
fimull
aas
pop
aaa
push
testb
or
int
roll
outsl
loope
sbb
inc
shrb
lods
out
jge
rcll
add
stos
mov
mov
jbe
out
out
cmp
pop
mov
mov
repz
nop
mov
rorb
push
push
lahf
xchg
out
or
push
jp
push
sahf
adc
stos
lret
xchg
push
addr16
cmp
add
xchg
cli
repz
adc
fistpll
mov
daa
stc
push
mov
sub
movhps
inc
push
jb
stc
pop
sub
jg
dec
enter
push
push
cs
push
scas
int
cmpsl
imul
clc
stos
mov
pop
stc
imull
sbb
loop
loopne
les
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
lret
add
pop
add
outsl
ljmp
and
sbb
fnstsw
sub
nop
dec
and
push
call
or
add
push
adc
insl
dec
and
daa
xacquire
cld
fildll
pusha
fcoms
rolb
cld
mov
popa
xorl
cmp
out
enter
popa
mov
in
pusha
sbb
lock
leave
arpl
shlb
addr16
or
aaa
or
xor
push
add
or
sti
jmp
test
fistl
xchg
inc
sbb
fidivrs
lds
fdivrs
outsl
data16
jns
xchg
imul
sbb
xchg
fmul
xor
or
aaa
push
cld
pop
shr
push
xor
addr16
add
add
mov
xorl
pusha
call
loop
pop
xor
into
pop
lret
dec
aaa
jge
mov
sbb
mov
jb
inc
pop
or
out
lret
dec
fs
mov
jb
pop
negl
or
pop
cld
ret
imul
jecxz
repz
pop
mov
mov
add
in
nop
test
pushf
mov
sbb
dec
cmpsl
adc
js
fiadds
mov
xchg
cmpsl
cmpsb
pusha
push
ds
stc
out
repz
or
or
mov
shl
imul
mov
in
loop
push
push
mov
cmp
inc
jno
adc
push
sbb
xchg
ret
in
jo
ljmp
lock
mov
push
jg
or
inc
stos
test
push
inc
jnp
out
inc
xchg
cmpsl
jmp
fucom
in
popf
and
or
outsb
int
push
mov
dec
in
push
jbe
inc
sub
scas
loopne
xchg
sub
and
or
pop
xlat
adc
cmpb
insl
shll
inc
push
cmp
xlat
and
xlat
add
and
push
or
leave
mov
push
lcall
adc
ret
test
fs
mov
mov
xor
push
mov
add
jo
xchg
pusha
mov
stos
sti
pop
roll
or
testl
neg
sbb
push
call
fidivrl
cmp
je
xor
cmp
sub
inc
clc
js
sbb
adc
push
aas
push
outsl
mov
and
ja
scas
mull
xchg
mov
mov
xlat
and
int
int
and
and
aad
imulb
jg
jns
aam
mov
fsubl
mov
xchg
pushl
mov
shlb
popf
loop
mov
stos
aad
or
divb
adcl
xchg
dec
call
pop
push
cmp
and
push
jbe
or
mov
pop
and
xorb
sub
xchg
and
out
sti
dec
arpl
mov
sbb
mov
dec
ret
mov
test
mov
cmp
inc
mov
or
fdivp
adc
inc
xor
shl
in
xchg
xchg
lahf
mov
fs
jmp
int3
loope
jmp
js
rcrb
je
xor
sub
sbb
mov
and
and
bound
loop
adc
call
rorb
push
stos
push
js
fsubrp
mov
sub
xor
jbe
xor
pop
fisttpl
addps
cmp
stc
lock
xlat
out
test
insb
insb
mov
imul
sub
test
jecxz
ficompl
adc
xor
push
dec
pop
imul
push
mov
orl
mov
jl
adc
fs
mov
stc
dec
and
loopne
xchg
cmpsl
add
jp
popf
or
inc
pop
bnd
push
shrb
sarl
dec
js
nop
in
call
jo
push
jo
movsb
sub
jno
dec
bswap
sub
mov
inc
cltd
lds
add
inc
mov
jne
sub
movsl
sbb
std
dec
add
rep
loopne
fwait
daa
mov
ss
outsb
loop
pop
call
cmp
xor
sbb
xchg
push
mov
leave
inc
or
mov
fiadds
or
in
jns
sub
fimuls
daa
mov
loop
xor
pop
rorl
jno
push
push
jbe
pop
mov
push
fs
xchg
adc
insl
mov
cmpsl
aam
push
and
dec
jns
fwait
or
sub
mov
je
push
mov
pop
pop
push
inc
xchg
xor
data16
xlat
enter
loope
adc
or
fucomp
jns
frstor
and
adc
inc
sub
mov
jae
push
push
mov
mov
push
jg
aam
xchg
xor
cmp
mov
in
xlat
mov
loope
mov
int
lods
ljmp
xchg
pop
cltd
xor
mov
into
aas
in
orl
dec
jecxz
pop
test
mov
in
jno
into
out
std
push
sbb
push
pop
ret
notb
arpl
push
outsb
inc
out
aas
enter
dec
loop
sub
lds
lret
push
call
or
sbb
mov
jecxz
or
and
jns
jno
xor
pop
movsl
jo
lahf
lock
loopne
gs
inc
mov
xor
sahf
scas
sbb
push
push
or
xlat
ss
xchg
pop
ljmp
test
ja
mov
jnp
sub
mov
jae
jmp
outsl
into
push
dec
xchg
pop
por
jnp
ret
outsb
mov
je
and
push
inc
add
outsl
cltd
mov
call
out
push
pop
mov
push
into
cmpsb
insl
into
test
adc
sar
lret
and
sti
movsl
push
inc
cltd
fmul
pushf
mov
loope
imul
and
std
jae
add
sub
pop
mov
mov
dec
lds
sbb
sbb
mov
jo
mov
int3
mov
vmread
pop
mov
ret
jae
jp
das
sahf
push
xor
stc
adc
xor
mov
mov
or
xor
adcl
leave
out
fdivp
or
xor
inc
loope
scas
shll
sub
jg
sbb
or
cmc
test
je
mov
shll
pop
testb
in
xchg
ljmp
out
int
sbb
mov
dec
stos
add
jbe
mov
mov
lds
jns
push
dec
ljmp
mulb
stc
es
xlat
dec
jl
pop
xor
pop
negl
repnz
aad
roll
loopne
decl
leave
sahf
fdivrs
mov
dec
movsl
add
jo
add
cli
push
stos
and
adc
jnp
adc
rcrb
sbb
mov
cmpsl
mov
push
enter
push
hlt
jle
inc
lret
mov
or
pop
mov
dec
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
add
or
add
mov
mov
out
pop
loopne
pop
in
cmpsb
sub
xor
sbb
aas
xor
jge
test
xor
ror
lahf
cmpsb
dec
int3
pop
js
jle
arpl
inc
popf
das
stos
inc
movsl
mov
sub
or
sbb
pop
into
and
xchg
pop
je
mov
rcll
mov
leave
stos
jg
fadd
xchg
into
fnstcw
cmpsl
and
lcall
mov
roll
push
push
add
mov
je
aas
ret
push
outsl
test
mov
fists
add
cmp
jae
dec
cmpsb
and
sahf
inc
fcompl
imul
mov
and
and
pusha
add
adc
stos
xor
xchg
hlt
popa
jae
into
lret
push
stos
mov
movsl
xor
ja
mov
push
jno
or
mov
stc
repnz
out
dec
je
push
dec
dec
sbb
mov
inc
test
scas
cmpsl
aam
push
scas
outsl
push
jo
test
or
lock
jae
pop
xchg
push
in
push
rclb
dec
mov
pop
cli
cmp
data16
push
insb
mov
cmpsl
cli
sub
adc
roll
push
je
add
dec
add
jae
push
push
mov
xchg
and
and
xchg
jecxz
fldt
jle
sub
jns
pop
mov
inc
jle
stc
vmread
add
dec
inc
lret
pop
inc
xorb
gs
sub
aam
xorb
xlat
out
lea
or
rcrb
mov
jmp
loopne
xchg
out
call
mov
xor
mov
arpl
bound
or
and
repz
sub
add
xchg
pushf
or
mov
sahf
inc
stos
cld
push
test
pop
in
dec
jg
mov
pop
in
aam
cli
or
cs
fsubrl
xchg
mov
test
in
xchg
push
sub
mov
mov
ret
sub
das
xchg
cmp
mov
push
xchg
mov
fsts
push
aas
rorb
repnz
into
icebp
cmc
dec
call
sbb
test
xorb
xlat
inc
xor
repz
pop
xor
andl
inc
popa
or
lret
call
adc
inc
scas
mov
mov
inc
clc
je
std
stc
pop
test
pop
cmp
mov
push
cmp
ret
rclb
decb
lcall
push
shrl
inc
and
aaa
ja
cwtl
jno
push
xchg
jecxz
sub
lcall
lds
fcmovnu
xorb
hlt
sbb
stc
cmp
or
sub
push
stc
inc
push
push
xorps
sub
mov
aad
into
jl
inc
xor
mov
dec
jmp
outsl
mov
lods
add
cmp
mov
imul
dec
push
addb
inc
mov
fidivs
cmp
inc
sub
loopne
xorb
jns
add
push
mov
aam
movsb
jle
and
sub
cld
xchg
cs
push
jbe
rcrb
sub
ret
or
call
fisubs
add
bound
jle
mov
imul
push
decl
int
lret
pop
movsb
inc
dec
pushf
dec
popf
cmc
cwtl
jns
inc
sub
lock
adcl
adc
fdivs
or
cmpb
pop
xor
push
call
fcmovnbe
lahf
outsl
push
mov
mov
xchg
sti
push
adc
gs
inc
jno
mov
iret
call
inc
xor
mov
test
int
aas
int
frstor
push
sub
iret
xchg
and
mov
lods
mov
pop
stc
je
mov
adcb
and
inc
scas
xchg
rorl
xor
push
xchg
or
idiv
lods
sbb
and
inc
daa
jae
mov
mov
sbb
dec
sbb
loopne
dec
mov
sub
aam
mov
inc
mov
jmp
stos
mov
ds
dec
adc
clc
je
xchg
and
sti
sahf
movsl
out
add
testl
cmp
xor
cmpsl
ljmp
lret
stos
and
pop
xchg
xchg
in
jge
mov
sub
push
les
add
xchg
mov
frstor
cmp
aas
mov
popf
xchg
cltd
mov
pusha
sub
xchg
dec
xchg
lret
xchg
int
and
push
out
lods
lahf
arpl
cmp
push
or
popf
arpl
cmpsl
mov
scas
cmp
lcall
lds
movsl
jge
testl
popa
mov
push
addr16
push
stos
call
mov
push
cmp
pop
in
or
add
sti
mov
cmpsl
mov
push
adc
scas
mov
push
or
xor
sbb
pushf
cmp
dec
sub
push
sub
cmp
xchg
std
in
je
es
das
sub
cmp
ficoml
mov
xchg
pop
xchg
mov
in
sbb
cmc
xchg
pop
mov
sub
mov
cmp
push
std
sub
lahf
dec
js
iret
pop
inc
shlb
ljmp
cmc
repz
adc
fsubrl
mov
inc
repz
adc
cmp
xor
or
sbb
push
aad
out
dec
mov
cmp
jg
jg
movsb
mov
out
inc
out
xchg
lods
cltd
stc
pop
std
push
sub
adc
mov
mov
sub
fucomip
xor
sahf
push
movsl
mov
push
mov
aas
pop
and
add
ficomps
scas
pop
sbb
js
in
add
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
dec
add
add
add
jle
xlat
jp
sbb
sub
xchg
out
cmp
js
ja
pop
or
adc
pusha
ret
and
jnp
mov
cwtl
loopne
leave
cld
push
xchg
mov
cs
pop
pop
fsubs
mov
push
adc
cmc
xchg
pop
add
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jp
add
mov
add
dec
pushf
shrb
xor
sub
mov
loopne
lods
outsb
sub
sbb
shrd
dec
jbe
jae
loopne
into
imul
adc
mov
cmp
fidivs
rcr
jnp
sbb
out
or
sbb
sub
loope
mov
filds
icebp
fwait
add
and
jmp
loop
push
jmp
in
dec
std
mov
data16
shrb
lahf
lcall
lahf
out
jns
mov
add
inc
push
push
mov
mov
xchg
out
ljmp
sub
push
mov
shlb
jbe
dec
int
fists
or
sarl
pop
out
adc
mov
pop
xchg
loop
fldl
pop
aam
sbb
mov
inc
aam
icebp
mov
adc
sbb
lcall
sub
bound
fdivrs
and
or
pop
cmp
and
into
roll
int
jp
call
stc
ret
mull
jb
add
xchg
addr16
jbe
sbb
loope
cltd
push
call
stos
cmpsl
lret
mov
inc
xlat
sub
jecxz
sub
mov
das
or
lods
push
mov
ret
cltd
jnp
loope
ffree
sbb
inc
dec
push
fsub
pusha
dec
repz
repz
jl
and
jle
pop
cld
push
imul
outsb
adc
out
imul
outsl
loopne
xchg
insl
mov
loopne
dec
es
or
rolb
fstpl
lea
repz
dec
adc
ss
or
into
mov
or
pop
mov
sub
ret
inc
jne
mov
sarl
and
adc
daa
and
outsl
xor
adc
femms
gs
lret
lods
xor
mov
and
dec
mov
cmp
outsl
rorl
add
in
in
aaa
push
jmp
or
mov
adc
fmull
jne
mov
xchg
xchg
out
aad
addr16
and
jne
cmpl
pop
daa
mov
orl
add
lcall
cmpsb
dec
sti
and
pop
add
fcom
imul
lret
jmp
xor
adc
mov
adc
shrb
jle
pop
leave
movsl
cmp
int
mov
dec
jno
loopne
lcall
push
pop
mov
call
jmp
rcl
push
push
data16
aaa
dec
jmp
or
in
fidivl
xchg
push
push
mov
sbb
sub
or
ret
xchg
sub
mov
and
nop
shrl
cld
call
dec
les
addr16
lods
dec
ret
mov
ret
mov
ret
push
fdivrs
jne
xchg
lahf
push
leave
les
xor
pushf
rorb
mov
les
inc
sub
xor
lret
mov
fwait
xchg
push
or
stc
inc
cmp
push
insb
lret
push
add
lahf
pop
fldt
inc
std
out
adc
fbstp
data16
addb
int
fildll
popa
sub
rorb
inc
mov
and
shll
lcall
xchg
mov
or
popf
push
mov
and
mov
stos
mov
jb
lret
incl
xchg
sar
pop
lret
loope
mov
jl
and
cmp
or
mov
add
jno
inc
fldcw
je
mov
mov
popf
test
adc
std
lahf
int3
ss
gs
jge
add
cld
lea
or
lock
add
loop
out
outsb
cmp
ficompl
test
cmp
pop
pop
test
arpl
lods
xchg
test
outsl
xor
lods
arpl
test
roll
mov
gs
mov
mov
test
pusha
xchg
mov
outsb
fidivrl
mov
xchg
jb
xor
jns
jb
xor
push
add
pop
pop
add
addr16
jge
mov
lods
push
or
jle
je
add
fstpt
sahf
push
daa
xchg
and
leave
cmp
and
or
sub
ss
inc
xor
cld
inc
icebp
mov
inc
xchg
cli
mov
and
xor
sub
mov
xchg
or
sbb
movsl
daa
aaa
sub
mov
inc
xchg
sbb
fsts
lods
imulb
dec
mov
rcrb
inc
jecxz
add
jbe
push
sti
int3
int
rcrl
insb
jg
lock
jle
loopne
aam
push
push
sbb
push
fs
pop
jmp
rol
jp
xchg
fwait
or
rolb
subl
rcll
insl
rorl
pushf
xor
adc
mov
xor
dec
loopne
jmp
stos
xlat
adc
lret
pop
orl
lret
in
mov
cli
pop
imulb
daa
test
xor
data16
pusha
jmp
ret
add
xchg
ds
pusha
xchg
stos
push
les
adc
xchg
imul
stc
fimuls
popa
leave
ret
cmpsl
dec
sbb
push
jo
pushf
inc
inc
pop
or
dec
mov
insb
jmp
nop
test
fnstsw
addb
push
jmp
fistl
xor
mov
push
jns
mov
stos
ja
xor
mov
push
add
popf
and
repnz
or
dec
sti
pop
push
lods
jo
or
lods
add
fs
inc
jmp
sub
inc
push
orl
dec
stos
jle
lahf
add
mov
jle
ja
mov
setbe
jns
lods
std
jmp
jo
dec
std
popf
cld
dec
inc
jmp
dec
iret
in
clc
je
loop
out
div
jg
adc
fnsave
rorl
adc
pop
jne
shrl
divb
mov
fcompl
pop
sub
dec
xchg
movsb
dec
dec
push
enter
cmp
js
cmp
stos
sub
xchg
and
add
jnp
mov
cmc
adc
stc
push
dec
movsl
mov
sarl
rclb
and
addl
or
adc
enter
mov
in
dec
dec
lea
mov
out
push
fs
push
nopl
stc
arpl
jg
pop
insb
es
ja
or
outsb
outsb
in
mov
dec
mov
movsb
pop
pop
xor
adc
lret
fbld
cs
ds
inc
pop
adc
cmp
mov
jge
outsl
xor
mov
movsb
or
push
aaa
lret
mov
repnz
icebp
out
mov
sub
mov
jne
loope
mov
mov
xor
push
push
jge
mov
push
or
insb
cli
push
xor
cli
cmpsb
add
or
bound
lds
fiaddl
cmp
cltd
fwait
mov
adc
xchg
xchg
add
dec
mov
mov
dec
scas
pop
push
imul
scas
jbe
jne
in
aam
scas
sbb
inc
dec
rolb
ret
sahf
sub
mov
dec
sub
jg
pop
adc
jge
mov
out
cld
add
adc
je
add
mov
mov
mov
jge
pop
stos
jp
push
ljmp
jl
setne
adc
movsl
add
adc
addr16
imul
inc
jp
ds
fnsave
pop
out
sbb
enter
push
into
lret
test
sub
mov
sub
out
stc
inc
push
push
sbb
ss
mov
jmp
xor
pop
add
xchg
test
jae
ljmp
and
pushf
mov
push
jns
mov
test
inc
mov
xchg
mov
loop
push
iret
fildl
mov
repz
stos
call
cmc
in
mov
dec
sub
cs
mov
inc
cli
mov
aas
add
orl
shl
adc
repz
into
ficoms
sub
dec
fcoml
enter
cltd
sti
nop
insl
jge
pop
int
fistl
aas
xchg
es
rcl
xchg
push
and
sub
fistl
sub
mov
cmp
and
sbb
sbb
mov
scas
sub
jge
lock
xor
jae
dec
rolb
rcr
jae
dec
sbb
pop
jg
jg
mov
mov
fiadds
lret
data16
orl
inc
or
nop
lcall
insb
xlat
and
popf
xor
pop
add
out
out
inc
std
and
movsb
xchg
inc
rcll
push
shrl
lock
sbb
mov
adc
adc
pop
cltd
scas
jl
dec
pop
arpl
in
cwtl
dec
xor
aad
les
cmp
pop
cwtl
adc
jbe
aad
mov
insb
adc
call
jne
add
sub
dec
mov
dec
adc
leave
or
xlat
cmc
push
pusha
incl
dec
aas
div
dec
mov
jne
jl
movsl
popa
flds
test
lds
icebp
pop
lea
mov
adc
iret
lds
adc
inc
dec
cltd
out
inc
cltd
and
ds
leave
xchg
dec
xor
lea
push
mov
xchg
xchg
xchg
cmpsb
fiadds
dec
divl
pop
clc
dec
or
jno
out
lods
imul
andl
dec
pop
xor
sbb
subl
xchg
out
cmp
and
loope
ja
dec
sub
mov
arpl
enter
add
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
add
mov
add
pop
mov
sub
out
cld
cmp
jns
sbb
ret
into
call
push
fstps
mov
les
lcall
lock
sbb
dec
popf
scas
jg
adc
sahf
jecxz
popf
imul
dec
test
lahf
aam
mov
stc
cld
xor
into
adc
inc
movsb
dec
push
jp
dec
faddl
std
mov
jg
arpl
mov
sbb
lret
arpl
std
or
stos
pop
loope
es
mov
mov
out
and
aaa
hlt
jns
arpl
scas
imul
cld
sbb
das
cltd
pop
repnz
add
jmp
lea
sbb
nop
cmp
in
sbb
add
aad
dec
sbb
movsl
into
sbb
mov
mov
sub
mul
loop
and
inc
cmp
lret
in
or
jns
lret
leave
mov
xchg
pop
dec
int3
push
pop
lods
dec
jl
repz
xor
sub
sbb
mov
mov
lahf
ret
sub
out
jb
mov
or
flds
jmp
sub
out
ret
sbbl
or
and
cmp
add
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
mov
add
sahf
push
add
sub
xchg
arpl
jmp
movl
mov
ret
sbb
pop
jnp
js
lret
movsb
push
dec
push
sub
lods
xchg
push
push
adc
lock
push
xchg
bound
sbb
data16
inc
push
aaa
and
jae
out
sbb
insb
lret
xor
movsl
sarb
fidivl
push
sub
xchg
sub
popa
cltd
psubsw
push
ret
aam
imul
inc
mov
or
jnp
pop
mov
cmpsb
leavew
pop
push
push
imul
cmpsl
mov
lea
cmc
cmp
dec
cmpsl
xchg
add
subb
in
int3
cmp
aaa
pop
mov
sub
push
or
xchg
cmc
jno
jecxz
pop
mov
mov
jo
mov
xlat
lods
cmp
ds
sarl
pop
jo
or
adc
movsl
mov
mov
mov
or
pop
shlb
sub
std
inc
sti
inc
sub
dec
xchg
lcall
sub
pop
loopne
adc
insl
mov
jns
das
out
inc
fsubrl
aad
xchg
stc
jne
sub
arpl
sub
in
cmpsl
aas
inc
test
push
or
test
pop
popa
loope
jae
jne
negl
in
ss
mov
shlb
xchg
pop
movsl
add
and
sahf
jg
adc
or
das
jbe
fwait
adc
mov
ret
imul
pop
xor
aad
sub
cltd
mov
dec
mov
mov
icebp
add
push
pop
mov
pop
mov
push
insb
pop
aas
mov
mov
adc
lret
mov
icebp
sub
mov
ds
or
fs
imul
pop
jnp
push
mov
movsl
dec
fadd
js
pop
push
push
jno
or
data16
addr16
lret
out
xor
sbb
lea
cmpsb
xor
repnz
int
sti
ret
adc
lea
jecxz
fcoms
sub
imul
cmp
xchg
movsb
cmc
ds
adc
dec
int3
stos
lcall
call
daa
int
sub
jns
gs
mov
push
daa
cs
adc
aam
add
pop
mov
xor
aaa
das
push
cs
or
enter
pop
pop
mov
add
in
xchg
pop
popf
mov
scas
js
imul
mov
rorl
rclb
mov
sbb
je
cwtl
mov
push
popf
sub
or
lds
push
not
nop
cmp
push
cmp
out
xchg
movsb
mov
jns
imul
dec
cwtl
ja
stc
xchg
ror
jns
loopne
pop
pop
flds
aas
lock
icebp
mov
fwait
xchg
rclb
lcall
aas
dec
inc
fs
sahf
and
mov
out
xchg
dec
xor
loop
rcll
aad
out
push
xchg
dec
dec
cltd
fcomip
and
sub
daa
push
adc
jno
lret
leave
push
or
inc
jp
xchg
bound
jb
jno
lea
jb
or
push
sbb
pop
jnp
fs
add
out
lret
xor
and
icebp
nop
push
sub
or
inc
mov
sbb
cmp
sbb
xchg
inc
dec
stos
ss
fildll
mov
cmp
cli
loopne
loope
add
lcall
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
add
add
aaa
je
mov
fbld
popa
pop
cmp
mov
mov
lret
inc
pop
clc
mov
pop
add
fwait
mov
sbb
fistpl
mov
rol
adc
jbe
outsl
stos
sahf
jae
mov
lret
mov
fimuls
clc
lods
mov
cld
sub
xchg
mov
aaa
pop
leavew
sub
mov
loop
inc
les
mov
xchg
and
aaa
fwait
mov
cmp
adc
add
xchg
sub
fidivl
stc
sub
cmp
sarb
fimuls
pop
pop
lahf
sbb
or
jb
dec
jbe
mov
push
aas
add
insl
or
mov
dec
cmp
loopne
fs
or
into
fdivrs
dec
dec
fcomps
dec
out
or
mov
sub
sbb
out
cmpl
sub
cmpsb
inc
cmp
push
shlb
jb
mov
inc
fisttpll
popa
enter
mov
shl
insl
pusha
daa
js
js
jp
nop
dec
cwtl
bound
xchg
pop
pop
leave
pop
mov
mov
lret
mov
dec
lods
jno
xor
and
xor
cmpsb
xlat
rcll
xchg
pop
stc
shll
shll
fisttps
outsb
and
arpl
lods
jae
stos
dec
jae
in
inc
xor
inc
mov
push
movsl
mov
out
cmc
pushl
add
adc
mov
les
outsl
pop
ja
xor
jns
xchg
mov
nop
xor
xor
xor
inc
add
mov
ss
in
cltd
data16
push
ret
add
aad
clc
loope
add
mov
cli
out
xchg
jl
jns
pop
in
mov
sbb
add
movsb
cmp
loope
pop
inc
stc
imul
jb
mov
cwtl
pushf
jg
aam
sbbb
sub
pushf
addr16
pop
ss
sbb
add
or
xchg
loop
jge
in
xchg
rcll
lret
and
popf
aad
sahf
int3
out
inc
or
out
push
icebp
ret
aad
jl
push
movb
pop
rorb
les
push
push
pop
dec
outsb
xchg
int3
sbb
popf
pop
dec
and
or
add
xchg
movsb
jbe
mov
cmp
cmpsl
add
xchg
cltd
push
leave
mov
mov
push
pop
subl
xor
pop
in
stc
mul
and
arpl
sbb
sbb
call
jo
sti
inc
add
out
rcl
les
loopne
mov
ret
lret
mov
popf
test
add
jnp
cltd
pop
or
popf
push
inc
cmp
andb
adc
in
cmpsl
push
mov
add
daa
incl
push
xor
lahf
mov
sbb
mov
pop
mov
and
pop
out
xor
daa
cmp
xchg
and
mov
jnp
adc
mov
loopne
dec
repnz
cld
sbb
xchg
sbb
bound
jmp
fs
js
test
test
mov
pop
mov
mov
push
cwtl
add
inc
leave
mov
mov
mov
dec
test
add
add
sub
dec
push
mov
mov
jl
add
cld
out
jbe
call
adc
movl
lods
add
lret
dec
push
into
dec
push
movl
fsts
rorb
and
jbe
js
cmp
inc
cmp
pop
add
sub
jb
add
outsb
movsl
inc
stos
rcrb
xor
dec
sahf
jb
jecxz
pop
lcall
int
insb
mov
jb
push
outsl
mov
xchg
icebp
pop
repz
cmp
push
pop
int3
mov
mov
arpl
mov
jne
inc
data16
adc
xchg
xchg
mov
mov
pop
inc
sbb
fnsave
scas
pop
punpckldq
lods
hlt
xor
mov
add
push
icebp
clc
jl
addr16
dec
mov
and
and
js
adc
xor
inc
pop
or
mov
push
fdivl
pop
popf
outsb
jecxz
sbb
inc
stc
mov
sarl
insb
cltd
and
adc
fdivrs
out
out
or
push
xor
and
mov
mov
out
fadds
dec
mov
lcall
movsb
sbb
std
xchg
adc
sub
mov
sub
out
setg
push
sbb
mov
jl
ss
sub
iret
rolb
or
inc
mov
dec
popf
push
rclb
sbb
fimull
dec
sbb
sbb
int3
push
pop
imul
adc
mov
sub
fists
hlt
sarb
andb
mov
adcb
out
neg
jne
and
bnd
jg
cli
outsl
jecxz
or
add
loope
ret
adc
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
add
add
dec
test
mov
xchg
or
mov
mov
fs
or
mov
mov
lock
mov
mov
jg
out
mov
mov
sti
mov
jmp
enter
push
es
add
clc
push
je
push
xchg
lea
nop
mov
pop
outsl
pop
push
mov
jg
fsubrs
movsb
adc
mov
test
stos
jb
in
popa
pop
fs
push
aas
and
hlt
push
rcr
icebp
xor
popf
insl
mov
mov
lcall
les
int3
je
scas
stos
aad
int
adc
pushf
mov
push
pop
loopne
xlat
pop
mov
loope
mov
stos
fs
stos
enter
pop
jo
arpl
lock
mov
sbb
push
pop
std
arpl
sarl
xchg
and
fisubrl
test
sti
and
mov
decb
mov
sarl
popf
pop
mov
jle
outsb
es
fbld
push
or
mov
iret
xor
bnd
mov
pop
leave
mov
adc
cmp
data16
loope
fnstsw
jmp
cmp
jle
cli
pushf
add
stos
stos
lahf
lods
leave
out
dec
xchg
lods
mov
dec
cld
and
stc
inc
loope
test
xor
jg
loopne
mov
insb
xchg
xlat
sahf
or
xor
out
hlt
ljmp
icebp
jb
call
std
insb
dec
xchg
lahf
mov
jo
cld
pop
mov
rclb
addr16
mov
shll
sbb
jg
jmp
jo
cmp
jb
aad
cmc
xchg
or
inc
bound
ret
mov
aaa
sti
lret
adc
cs
cltd
loope
mov
push
lock
xor
stos
cmp
repz
sub
es
add
xchg
sar
sbbl
mov
cli
push
ss
std
and
stos
adc
std
sub
lock
cmp
pusha
dec
sbb
negb
js
ds
int
dec
call
fs
inc
sbb
stc
mov
mov
push
jmp
lret
jge
push
fmulp
in
mov
stos
sub
je
pop
fdiv
aad
int
or
clts
xchg
push
iret
push
arpl
xor
lods
pop
mov
fwait
push
stc
test
sbb
xor
adc
out
add
mov
out
adc
push
mov
sbb
das
inc
aas
dec
clc
add
pop
scas
mov
test
testb
outsb
pop
lds
into
xchg
stos
cmp
repz
pop
or
xor
adc
sub
test
test
lret
adc
mov
or
sub
enter
pusha
sbbl
clc
inc
shlb
fcmovu
mov
nop
mov
adc
nop
scas
jb
mov
les
push
movsl
cmpsb
add
hlt
add
push
mov
jno
push
jbe
shl
test
add
push
out
mov
xor
adc
xchg
dec
sbb
lock
sbb
push
adc
cltd
sbb
bound
jbe
pushf
xchg
adc
mov
ucomiss
add
icebp
imul
les
add
cmpsl
bound
cmp
and
repz
leave
enter
cltd
addl
pop
int
and
pop
shl
and
out
jmp
les
adc
mov
jno
mov
out
aaa
cmc
aaa
push
pop
cmp
roll
add
movsl
subl
popf
inc
pop
lods
mov
xchg
mov
dec
and
in
cltd
ss
push
pop
clc
and
xchg
popa
sub
jae
pop
loope
aas
cld
pop
bound
int3
test
icebp
mov
or
adc
mov
xorl
rcll
mov
mov
sub
in
sbb
or
pop
inc
sub
inc
icebp
mov
and
test
out
dec
cmp
cs
les
pop
lock
ja
sarb
mov
cmp
leave
push
adc
cmp
daa
in
push
xchg
sbb
cwtl
mov
hlt
jp
add
cmc
hlt
pusha
adc
out
and
insl
xor
mov
mov
xchg
push
mov
repnz
and
sbb
xor
cmp
rcl
cmp
je
dec
rorl
rcr
imul
add
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
ret
add
push
add
or
subl
sbb
ret
outsb
ja
push
pop
xchg
insl
clc
xor
inc
sub
or
jns
pusha
jbe
add
push
jne
psubusw
xor
cmpsl
mov
push
out
daa
fcoml
ud1
cltd
aad
loop
sbb
jecxz
sub
clc
inc
jbe
jl
stos
push
push
xchg
dec
jle
sub
out
stos
pop
mov
jnp
shrl
ret
mov
and
roll
out
jge
fisubrs
imul
cli
out
bnd
imulb
jle
and
test
das
xchg
es
enter
sbb
mov
add
push
push
push
enter
sub
mov
lahf
imul
cld
cs
das
push
xor
insb
cmc
pop
cmp
shl
mov
sti
cmp
cmp
sub
push
push
repnz
adc
icebp
mov
insb
cmp
cli
add
mov
mov
pop
jmp
add
test
jnp
mov
sub
lea
rolb
sbbb
dec
testl
cli
cmc
shlb
inc
inc
adc
cltd
xchg
push
pushf
mov
dec
fistps
inc
cwtl
stos
push
les
mov
ret
and
dec
xor
mov
jbe
lret
sub
sub
cs
subb
jae
push
orb
movsl
push
sar
fcmovne
clc
je
sub
mov
dec
push
dec
sbb
test
cmp
test
push
icebp
pop
pushf
scas
mov
adc
loop
mov
daa
jg
iret
dec
mov
lcall
xchg
test
das
int
into
push
sub
mov
push
mov
rorb
sbb
out
dec
outsb
lods
test
xchg
testl
cmpsl
fistpll
incb
inc
sbb
clc
dec
mov
cmp
jp,pt
pop
fldl
jb
jl
inc
scas
sbb
mov
mov
xchg
push
mov
mov
jle
out
fs
repz
lret
lcall
pop
sub
mov
daa
aad
data16
inc
mov
jg
mov
cmpsb
push
sti
adc
mov
xchg
cwtl
lods
test
outsl
xchg
pop
rcrl
sub
inc
in
mov
repnz
outsb
shlb
ss
sbb
add
or
and
stos
jmp
imul
in
push
mov
mov
shll
andl
aaa
sbb
mov
push
aam
ds
into
push
pop
adc
ret
add
sti
or
push
xchg
inc
addr16
icebp
cwtl
push
cmp
icebp
addr16
xorl
cltd
cmp
dec
lea
fstps
push
jl
pop
stc
cltd
jnp
pop
filds
fbstp
xchg
popf
es
inc
aad
in
not
pop
and
je
or
test
outsb
mov
and
mov
mov
mov
andl
movsl
or
popf
pop
lcall
adc
lods
pop
lods
cmpsl
pop
adc
js
lds
testb
sahf
hlt
pop
popa
xchg
add
pop
in
push
mov
sub
and
mov
pop
into
aas
pop
int3
inc
std
add
mov
or
lahf
sbb
inc
sub
int
sti
mov
pop
lods
jo
int3
jb
mov
sbb
jnp
pop
out
and
pop
or
scas
dec
or
xchg
repz
test
pop
jae
mov
xor
repnz
inc
ja
frstor
nop
cmpsb
mov
outsb
adc
popa
sub
pop
xor
addr16
jp
nop
xor
ss
adc
cltd
mov
icebp
xchg
out
jo
mov
cs
aaa
jne
and
cld
dec
inc
adc
mov
enter
icebp
arpl
or
pop
notb
bswap
fnstcw
mov
add
lret
stos
add
jns
shll
push
dec
pushf
mov
inc
ja
std
mov
push
sub
das
cli
adc
dec
mov
adc
adc
fsubl
imul
push
bound
mov
or
mov
popa
ds
cmp
add
mov
xchg
hlt
loope
dec
sbb
stos
ret
and
movsb
ds
dec
jb
mov
add
xor
jl
shlb
fidivrs
ds
mov
fwait
je
out
push
push
int
inc
cmpsb
inc
dec
and
out
push
clc
or
mov
ret
gs
adc
dec
jecxz
mov
shll
jecxz
stos
sub
pop
dec
nop
ficompl
pop
mov
shll
js
js
push
and
inc
into
add
shrl
arpl
cwtl
loope
rep
orl
sti
inc
jp
adc
mov
leave
popa
out
scas
adc
xlat
jp
notl
xchg
push
sbb
jmp
sbb
cmpsl
imul
xor
pop
jp
mov
repz
pop
inc
and
movb
arpl
repnz
xchg
je
jge
arpl
stc
addb
imul
push
pop
jge
iret
aad
outsl
jge
cltd
inc
test
or
outsl
xchg
inc
std
adc
mov
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xlat
add
add
push
add
mov
lret
jg
sub
jo
xrstor
inc
bound
loopne
imul
sbb
stos
lret
imul
pop
int3
xchg
dec
pop
mov
jge
leave
mov
adc
test
in
pop
sarb
mov
fstpt
adc
sub
inc
cli
and
repz
or
repz
mov
sbb
rorb
xchg
in
inc
cmp
sub
mov
leave
lcall
loopne
roll
pop
xchg
insl
mov
pop
pop
and
jge
sbb
adc
imul
cltd
icebp
inc
and
sbb
mov
sbb
int3
cmpsb
xchg
push
inc
cmp
lahf
dec
sar
arpl
test
inc
repz
xlat
sub
bound
cmp
sub
mov
test
les
ja
jnp
insl
es
mov
or
lahf
out
movsb
loopne
jmp
popf
sbb
movsl
and
fisubrs
fcmove
push
dec
cmpsl
cmpsb
stc
scas
jb
add
outsb
mov
inc
jecxz
clc
movsb
insl
lret
and
pop
sbb
out
adc
push
sti
mov
outsl
test
lea
mov
lea
cwtl
iret
pop
scas
sarb
xchg
js
icebp
xor
fsubrl
push
adc
in
aas
sub
es
mov
jg
or
xchg
imul
jnp
or
and
push
subb
sub
pop
mov
les
insb
xor
int3
gs
out
adc
pop
inc
and
mov
sub
clc
mov
jbe
cmpb
int
out
jge
cmp
push
mov
or
iret
jae
sbb
pop
rsqrtps
push
fstpl
pop
test
pushf
mov
xchg
and
push
ficoms
mov
idivl
jae
sti
mov
enter
cmp
and
inc
ret
ss
dec
out
fsubs
lds
aam
insb
and
or
adc
adc
or
xor
adc
cli
sbb
cmpsb
adc
popf
pushw
addl
js
xor
addl
pop
cmp
inc
cmp
sub
fcomi
daa
dec
mov
dec
clc
jp
std
cmc
idivb
mov
or
or
cld
dec
sbb
popa
sub
xchg
cmp
rorb
ficompl
mov
xchg
js
movsb
jg
sti
adc
aad
or
fisubrs
jge
scas
or
in
add
arpl
cwtl
dec
adc
sub
jb
scas
jmp
lahf
mov
insl
leave
sub
dec
inc
popa
xor
js
clc
cwtl
dec
adc
xchg
mov
mov
outsl
negb
call
jl
sub
push
fsub
xor
dec
mov
pop
mov
jae
aam
sub
aad
daa
icebp
out
sbb
dec
pop
mov
fildl
and
ret
jo
sbb
cmpsb
imul
adc
mov
and
push
cmpsl
popa
test
loopne
test
xchg
xlat
lods
loope
pop
mov
scas
fistpll
xchg
jmp
push
fbld
push
jmp
sbb
pop
cmp
mov
pcmpeqw
shrb
push
mov
mov
imull
sub
lret
dec
and
and
mov
bt
sub
sbb
push
sbb
dec
jbe
out
out
stos
bnd
push
mov
add
mov
fsubrs
pusha
mov
xchg
lock
push
cld
and
dec
push
mov
inc
ret
push
jns
xchg
dec
mov
push
adc
in
sti
add
mull
insl
or
leave
scas
adcl
cmc
jg
fildll
sub
stc
xchg
ss
test
mov
lret
fiadds
sbb
add
add
mov
repz
adcb
movsb
fistpll
jns
sbbb
mov
lret
sub
nop
les
dec
and
sahf
sbb
int
inc
call
cmp
push
sub
inc
fidivrl
xor
dec
or
inc
pop
mov
push
das
push
pushl
cli
pop
cmp
mov
imul
lods
mov
xor
add
movsb
jne
nop
pop
cmp
push
mov
dec
cwtl
adc
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
pop
add
scas
pop
add
fcoms
and
out
lcall
jp
jmp
mov
fisttpl
in
adc
lock
xor
addr16
push
xor
cld
mov
add
imul
add
cmc
dec
or
ret
lock
enter
xor
pop
ljmp
mov
push
cs
fisubrl
push
xor
inc
push
mov
nop
out
data16
pop
push
fldt
jg
and
sbb
adc
movsl
and
in
xchg
enter
sldt
push
mov
mov
lahf
mov
jmp
test
inc
ds
push
lock
jns
shlb
repnz
xor
add
outsb
bound
in
sbb
and
das
mov
insb
dec
push
cld
test
jmp
adc
in
addr16
gs
push
cwtl
xchg
xor
aam
subl
xchg
jne
sahf
sub
xchg
mov
mov
hlt
insb
mov
sub
sti
xlat
das
cwtl
popf
xor
divl
jmp
test
jmp
imul
sbbl
pop
jno
xor
adc
in
je
aaa
loopne
sub
dec
inc
fwait
in
int
out
pop
push
int
add
stos
das
dec
push
dec
stos
cmpb
call
or
ss
xchg
aad
pop
sbb
mov
ljmp
dec
imul
mov
sub
adc
xchg
xor
mov
and
push
jne
pop
jb
aas
outsb
scas
push
cmc
xchg
cmc
daa
cld
pop
mov
out
and
push
lds
fsubp
adcl
nop
lret
adc
imul
sub
lea
movsl
lods
add
addr16
xchg
mov
adc
mov
movsl
jl
xor
adc
jecxz
mov
rcl
sub
scas
mov
mov
push
fs
test
push
sbb
loopne
adc
jnp
jmp
sti
pusha
cltd
iret
sbb
fisttpll
pop
fsubs
sti
dec
sbb
adc
lods
sub
outsl
xchg
adc
test
out
fwait
ss
mov
sti
mov
sti
or
fcmovnb
scas
sub
jbe
rolb
cs
inc
pop
pop
dec
pop
push
outsl
rolb
fstpl
cmpsl
xchg
stos
dec
inc
nop
pop
bound
cmp
ljmp
push
cmpsl
and
in
arpl
scas
sahf
jo
mov
mul
ret
dec
or
xor
xor
lret
pop
es
xor
faddl
in
divl
lods
and
fs
pop
mov
lret
negl
inc
fmul
adc
mov
add
and
into
repnz
movsl
cmp
mov
pop
lods
xchg
push
fldcw
loopne
stos
loope
fwait
sarl
test
fsubrl
outsb
fs
lds
pop
outsl
jae
lods
mov
push
inc
mov
jno
adc
jl
paddusw
jmp
xor
imul
orb
inc
jp
pop
dec
fstp
push
push
mov
or
mov
pop
enter
sbb
pop
mov
orl
pop
pop
mov
sbb
shlb
stc
cmp
xchg
ret
in
insl
scas
enter
jg
ret
jnp
xor
adc
cmp
mov
pushf
inc
pop
sub
xor
pop
aas
or
add
mov
fwait
addb
and
ss
xor
int
jns
add
sbb
imul
adc
inc
add
sub
scas
mov
mov
ror
inc
test
fcomi
mov
rclb
xor
outsb
addr16
xchg
cmp
jecxz
push
cld
in
sbb
inc
aad
push
addb
je
pop
ja
scas
gs
add
test
xchg
sbb
aam
fs
rcll
popf
divb
gs
aad
jns
or
sarl
movsl
loope
mov
xor
shl
mov
lret
jb
arpl
outsl
jg
popa
mov
and
push
push
jp
jmp
ljmp
xchg
out
nop
mov
test
lret
pusha
xchg
and
fwait
jle
mov
in
push
dec
sahf
xchg
pusha
test
dec
es
fcomps
xchg
fistps
sub
pop
movlps
int
or
cmp
out
orb
fldenv
lea
ret
push
xchg
jae
dec
sbb
lcall
or
stc
push
shlb
pop
aaa
push
pop
pop
add
int3
xor
and
push
mov
call
filds
sti
sbb
es
jbe
add
cmpsl
inc
push
aaa
test
mov
cli
insb
mov
lret
sti
clc
daa
dec
aam
xchg
andl
pop
clc
add
sbb
jp
or
cltd
sub
lahf
jnp
inc
sbb
fistpl
inc
clc
jecxz
cmp
movsl
lods
push
imul
sub
loopne
or
mov
cwtl
pop
std
mov
xor
sbbl
cmp
test
sahf
inc
pop
mov
subl
nop
sar
cmp
into
gs
sub
dec
push
xor
mov
out
arpl
test
add
jnp
mov
mov
dec
push
dec
or
outsl
xor
ficoms
mov
and
sbb
or
insb
add
or
fldl
jp
in
or
mov
lahf
pop
jge
sub
push
jg
push
add
mov
mov
aaa
jecxz
adc
push
loope
cs
stos
enter
fcomps
adc
scas
aad
or
mov
sub
daa
repz
iret
pop
mov
cmp
cltd
leave
out
push
inc
xchg
pop
cmpsb
lahf
lahf
out
repz
ss
inc
sub
sub
incb
inc
xor
popa
sarb
push
aad
adc
je
push
sub
jne
loopne
int3
dec
mov
aaa
sbbl
cmpsl
inc
xchg
sbb
outsl
gs
jae
movsl
fdivrs
dec
xchg
sbb
mov
mov
out
mov
sub
pusha
scas
xor
pop
es
nop
dec
test
push
fdivs
std
pop
call
data16
pop
or
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
pop
add
pop
or
add
cld
inc
dec
push
cmp
lock
outsb
scas
pop
cmp
fidivrl
frstor
and
iret
or
lock
imul
das
jmp
imul
cwtl
and
enter
fldl
dec
mov
mov
xchg
dec
fs
arpl
mov
adc
mov
int3
cmpsb
mov
imulb
repz
imul
xor
lret
adc
xchg
lock
and
loop
loop
jmp
add
sbb
jns
jecxz
jne
shll
stos
adc
sbbl
lret
cwtl
and
lock
fildll
fstl
cmp
pop
out
adcb
xchg
adc
addr16
andl
and
sub
jg
bnd
dec
and
sub
xchg
imul
sbb
jge
ljmp
jl
cwtl
fisttpl
and
xor
iret
dec
adc
adc
lock
es
inc
jb
testb
lods
data16
push
sbb
jmp
pushf
sahf
dec
push
lods
xlat
push
adc
ja
xor
cmp
aas
shrl
into
mov
out
push
std
lock
inc
sub
or
mov
xor
subl
outsl
sbb
ret
sbb
cmp
sbb
sbb
xor
sub
mov
lods
in
icebp
push
xor
sbb
scas
or
loope
and
inc
mov
xor
add
or
sahf
push
or
inc
and
out
icebp
and
sbb
arpl
pop
pop
pop
jecxz
cs
add
das
mov
lds
xchg
ret
inc
loop
sub
push
sub
cmp
and
mov
dec
cmp
cld
xchg
movb
aaa
push
push
in
sbb
jae
loopne
mov
jg
pop
div
mov
xor
enter
nop
mov
aad
std
popf
imul
mov
sub
leave
pop
popa
shlb
fdivs
mov
jae
inc
sub
inc
push
cmp
cmp
not
dec
sbb
mov
sbb
mov
fwait
jl
mov
filds
mov
pop
std
mov
mov
stos
shll
lock
loopne
cmp
xchg
adc
and
cli
icebp
sub
loop
scas
hlt
add
and
outsb
and
mov
bound
pushf
rcl
aaa
mov
je
repz
cmpsl
ljmp
fwait
mov
sub
outsb
bound
xor
lods
inc
repz
js
mov
loopne
lods
test
aam
jge
xor
scas
adcl
insl
adcb
add
and
mov
imul
xchg
test
inc
inc
stos
cwtl
ret
or
movsb
dec
mov
jecxz
insl
or
insl
mov
loop
in
cmpsl
push
andb
sbb
add
je
fadds
dec
dec
lret
stos
or
or
cmpsl
xor
adc
mov
fstps
jnp
mov
mov
loop
add
xor
or
pop
dec
cld
insl
adc
or
rcll
lods
mov
ret
or
icebp
and
rcrl
cltd
mov
xor
inc
xor
dec
data16
xor
mov
stos
out
ja
mov
notb
ret
hlt
stc
inc
imul
jg
cs
inc
inc
and
mov
and
cltd
and
sub
cmpsl
loope
add
add
jmp
xor
dec
xor
cmc
and
ds
xor
mov
push
mov
stos
inc
fstpl
mov
mov
repz
hlt
mov
adc
sub
in
or
ds
mov
jb
jne
mov
xchg
push
mov
mov
jno
decb
gs
sar
and
out
xchg
pop
rcrl
xor
pop
mov
aam
inc
jae
sarb
mov
lcall
mov
bound
les
jb
jg
dec
cli
arpl
arpl
sub
popa
xchg
gs
xor
stos
sub
sti
fwait
push
cwtl
xchg
subl
xchg
or
cmc
xor
insl
mov
gs
xor
psllq
dec
push
lock
cmp
lea
add
fmuls
in
cmp
scas
pop
pop
and
stc
loope
xchg
movsb
insb
test
pop
nop
movsl
xchg
cmp
dec
inc
movl
add
ret
cmp
out
int3
int3
and
fstl
mov
pop
movl
xchg
lods
jnp
dec
sbb
xchg
xchg
je
and
iret
arpl
jecxz
test
mov
push
lods
hlt
scas
out
popa
ljmp
or
xor
bound
inc
std
jb
aaa
inc
mov
js
sbb
enter
sbb
aam
or
insb
inc
adc
leave
dec
sbb
add
pop
sbb
js
add
adc
or
xor
adc
jbe
sub
out
addb
cld
mov
mov
pop
pushf
std
pop
and
fnstcw
test
test
js
xlat
dec
sub
pop
ljmp
jl
or
mov
leave
add
lahf
es
push
xchg
push
xor
enter
xchg
loopne
movsl
fs
fisttpll
pop
push
jl
mov
mov
hlt
out
insl
mov
std
daa
push
pop
and
in
mov
jo
rcl
mov
push
data16
mov
add
dec
fcomps
out
popl
pop
xor
inc
movsb
adc
and
mov
push
ds
outsb
movsl
and
enter
stc
cld
jmp
xchg
mulb
cmp
ljmp
int3
push
add
pop
mov
sbb
mov
or
jb
fldt
test
outsl
mov
jle
fidivl
inc
push
in
pop
or
push
int
jecxz
sub
in
lock
sbb
mov
and
rcrb
out
int
and
les
enter
std
lahf
push
dec
fcmovnb
lds
stos
out
in
cmpsl
xchg
xchg
adc
mulb
sahf
shlb
jae
lret
pop
push
out
mov
sbb
and
jnp
sbb
pop
and
xor
or
mov
cmp
xlat
jae
pop
pavgb
push
cmpsb
or
pop
and
in
hlt
nop
inc
and
lea
scas
adc
inc
jne
ljmp
lea
je
jnp
in
dec
push
dec
daa
cmp
mov
mov
icebp
idivb
mov
sub
shlb
mov
sbb
and
outsb
outsb
fdivrl
pop
ljmp
push
xchg
stos
adc
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
xor
add
cmp
add
js
js
pop
imul
ret
pushf
sbb
jmp
cmpsb
add
sti
mov
bound
or
add
stos
cmp
sub
xchg
add
mov
repz
pop
clc
adc
test
insl
aaa
xchg
adc
mov
rol
jnp
test
gs
or
xor
add
fisubl
in
stc
lock
sub
clc
sbb
xchg
arpl
cmp
push
arpl
les
push
rolb
xor
dec
enter
inc
inc
inc
shr
or
sbb
xchg
mov
iret
pop
in
adc
jl
in
add
jg
push
aas
inc
jae
lock
test
sarl
lock
daa
mov
inc
push
in
adc
xlat
es
lret
pusha
dec
cmpsl
xlat
dec
std
fcompl
popa
push
sub
enter
dec
adc
pop
mov
add
in
fidivs
in
nop
rcrb
mov
xchg
lods
mov
inc
enter
sub
mov
xchg
sbb
dec
xorl
test
ret
push
aam
fildl
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
add
add
add
add
jg
pop
fisttpll
fisubs
sbb
maxps
iret
insl
add
dec
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
add
add
sub
jle
aad
or
pop
mov
jg
in
negl
mov
mov
jbe
add
mov
mov
inc
push
mov
ds
insb
cmpb
shlb
ja
in
xchg
adc
cli
scas
scas
cmc
test
loope
mov
jle
addr16
xlat
sub
aas
hlt
fucomi
pop
inc
cltd
lock
dec
test
add
xchg
fwait
aam
fidivrs
xchg
imul
add
ljmp
insl
dec
pop
cmp
popf
lock
inc
xchg
push
fisubs
cmp
testl
lret
or
sub
xchg
shlb
iret
cwtl
fs
xor
lahf
shrb
cmp
or
test
push
cld
fidivl
mov
fwait
push
sub
dec
xchg
ds
push
sub
add
iret
push
mov
out
shll
movlps
std
mov
jp
xor
sub
jecxz
dec
sahf
rolb
mov
loopne
leave
push
xchg
lock
add
sahf
out
and
adc
mov
mov
stos
mov
dec
jl
jno
pop
std
popl
pop
stos
or
pop
sbb
loope
popa
jg
cltd
jbe
aaa
xchg
arpl
inc
iret
adc
jnp
lds
in
inc
insb
adcl
daa
push
lea
xlat
fildll
cmc
lret
push
xchg
push
psubd
outsl
loop
orb
rclb
jecxz
ret
pushf
enter
pop
sub
jb
xor
ficoms
repz
ss
fidivl
jae
inc
xor
orb
in
pop
xchg
repz
inc
lea
adc
loop
iret
jae
out
inc
jne
pop
nop
idivb
es
das
jbe
push
pusha
push
dec
clc
mov
fisttps
jo
mov
ja
fldt
mov
fdivr
push
sub
xor
mov
fistl
or
or
push
add
repz
jo
or
imul
dec
xor
stc
in
sub
loopne
cmp
fwait
xchg
add
mov
jecxz
dec
pop
add
popa
frstor
outsl
dec
jb
dec
cmp
js
mov
testb
testb
push
inc
add
or
jecxz
dec
xchg
lcall
inc
insl
inc
mov
arpl
arpl
loop
sbb
lock
cmpb
cwtl
push
dec
pop
and
pushf
pop
mov
enter
dec
cmpsl
lods
inc
inc
fwait
xchg
fcmovb
xchg
sub
popfw
hlt
aad
mov
lds
mov
pushf
imul
mov
mov
cld
data16
xchg
lar
outsl
jge
sub
pop
inc
pusha
push
xchg
iret
repnz
adc
jg
je
roll
rorb
dec
xchg
cmp
xor
and
bound
ss
push
fisttpl
out
mov
dec
add
fsubrl
xchg
or
inc
hlt
int
stos
cmp
jecxz
xor
stc
jp
fdivrs
or
or
insb
sbb
lret
push
int3
add
test
out
add
insl
mov
add
movsl
insb
inc
jge
mov
sbb
cmp
pop
jl
popa
add
dec
sarb
cmovs
flds
aas
and
mov
and
mov
pop
or
cmp
push
inc
movsl
fsub
std
pop
sahf
shlb
push
and
mov
test
cltd
xor
ret
sahf
movsl
mov
aad
int3
iret
ds
test
repz
shlb
dec
fsts
cmp
mov
fwait
and
jle
adc
loopne
xor
mov
jno
jmp
icebp
adc
rcrl
insl
mov
xor
dec
lret
cltd
fstl
push
outsl
and
xchg
pusha
cmp
dec
int
push
xor
andb
lahf
scas
push
pop
dec
clc
jecxz
or
push
sub
fsubr
gs
mov
adc
loope
enter
add
pop
mov
xchg
adc
int3
sar
push
fstl
notl
loope
pop
jmp
aad
adc
incb
pop
pop
enter
shlb
xlat
push
mov
and
adc
fwait
push
pop
mov
rol
jg
adc
das
push
jl
lds
cmp
mov
aad
and
jae
adc
xlat
cmpb
ret
push
pop
movsb
push
imul
inc
faddl
inc
loop
das
lcall
imul
fisttpl
outsl
lret
dec
ds
adc
gs
add
les
sbb
and
push
in
sbb
ja
idivl
fcoms
sub
cmpsb
add
js
fdivl
adc
je
adc
cwtl
stos
mov
jnp
push
in
ret
xchg
iret
xorb
shl
gs
add
in
xor
jae
xor
pop
sbb
mov
lods
and
add
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
add
add
add
add
jb
cmp
and
push
push
xlat
or
bound
cmp
inc
addr16
xor
stos
popa
mov
subl
mov
shrl
lcall
leave
fcomps
or
add
jge
cmc
int3
pop
xchg
inc
add
cld
or
or
pusha
es
jp
scas
fwait
sub
leave
test
mov
dec
push
adc
stos
int3
popa
mov
xor
adc
jne
repz
mov
cmp
jmp
xchg
mov
push
mov
repz
mov
jge
cwtl
enter
jnp
push
and
clc
sbb
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
add
add
pop
add
push
sbb
addr16
push
mov
ror
mov
dec
aas
cmp
inc
or
add
lcall
cmp
jnp
cs
xchg
leave
or
cmp
cwtl
loopne
xchg
xchg
ja
ds
mov
data16
inc
pop
xchg
jge
call
cs
ss
pop
stos
scas
cmp
sub
push
sub
xor
inc
in
push
xor
mov
cwtl
sbb
pop
xor
adc
dec
mov
cmp
mov
add
mov
pusha
jp
jmp
addl
std
in
mov
push
jmp
adc
and
sahf
add
data16
and
jne
ss
popf
in
jg
xchg
insb
les
pop
sbb
push
push
mov
bound
cmpsl
or
add
mov
fcmovbe
mov
ljmp
or
arpl
jl
pop
scas
dec
inc
mov
or
fs
inc
fs
test
sbb
mov
and
aas
fidivrl
and
jo
mulb
lahf
aaa
stc
movsb
and
add
repz
fldt
mov
mov
push
push
jb
or
push
cwtl
out
ret
mov
xor
jnp
cmc
cmp
stc
setnp
sti
fldenv
cli
push
out
pushf
adc
lret
sub
fisttpl
ss
xor
in
inc
ret
cmp
lea
lcall
push
mov
dec
xor
es
lods
test
loope
sub
cmpsl
sahf
int
mov
xor
jp
mov
sbb
cmpsl
sbb
mov
test
lds
sub
and
mov
out
pop
lret
aam
in
adc
sub
or
dec
sub
add
pop
in
daa
jo
lods
out
sarl
or
xchg
je
mov
into
imul
mov
pop
and
add
sbb
inc
jb
out
pop
adc
dec
out
fadds
jle
imul
mov
cmp
adc
int3
pop
mov
adc
mov
add
icebp
ffree
pop
ds
dec
adc
hlt
or
enter
fisttps
out
or
sub
mov
loope
inc
and
lds
pop
cld
pop
lock
and
fsubrs
popa
xchg
mov
mov
or
lods
scas
push
cmp
fimuls
leave
mov
movsb
xor
cmpsb
or
adc
mov
stc
cmp
lods
bound
or
int3
enter
pop
fisubrs
shll
imul
mov
movsl
in
pop
pop
leave
loopne
scas
mov
or
ja
leave
jne
cmpsl
outsl
fwait
push
mov
int
push
gs
mov
in
pop
mov
test
xchg
jbe
lods
xlat
repnz
mov
push
scas
or
lret
outsb
je
shl
cmp
lock
pop
inc
jb
outsb
or
hlt
jnp
fwait
mov
cmp
xchg
dec
mov
sub
lret
fildl
aas
xchg
mov
or
xchg
loope
or
push
or
dec
adc
dec
dec
inc
lock
or
xor
sbb
clc
xchg
insb
or
inc
mov
pop
ja
pop
add
and
jl
scas
mov
sub
mov
adc
out
cmpsl
cs
mov
sub
cmp
jnp
ss
and
inc
sub
mov
imul
jge
shl
lock
jnp
icebp
adc
movsl
xor
idivb
into
repnz
stos
test
icebp
push
dec
ja
ficompl
xchg
jne
test
mov
sbb
data16
xorl
sbb
out
outsb
adc
push
pop
mov
xor
into
jg
popa
in
enter
jl
or
arpl
lcall
cmp
push
adc
fs
or
andb
push
or
clc
mov
lock
out
push
and
mov
xchg
fsub
cmc
adc
arpl
insl
inc
out
xchg
mov
push
jmp
in
lea
and
fmuls
sbb
lahf
mov
cld
xchg
and
cmp
add
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
jg
add
mov
fiadds
pop
int3
loope
test
mov
mov
inc
jae
pop
pushf
test
mov
fmul
and
sbb
test
mov
pop
cmp
sub
leave
stos
imull
adc
adcb
adc
fdivrl
imul
mov
adc
cmpsb
dec
ror
push
orl
pop
rolb
in
pusha
dec
imul
sbb
rcl
cmp
sub
movsb
or
pusha
lods
lcall
inc
or
mov
inc
push
mov
out
jo
out
bound
sti
pop
insb
sbb
bnd
inc
xchg
or
fcmovnbe
jl
inc
jmp
inc
pop
cmp
addl
add
dec
aam
xchg
fs
push
sti
push
xor
fists
sarl
inc
cmp
fnstcw
dec
mov
int
lock
les
jnp
hlt
loop
or
stc
stos
adc
jo
std
mov
inc
arpl
pop
pop
adc
icebp
popf
cmpsl
dec
inc
push
sti
fwait
cmp
cmp
into
jl
mov
movsb
out
ret
ret
cli
dec
pop
sub
push
adc
sbb
je
int3
test
icebp
out
arpl
push
stos
jle
popa
addr16
push
cld
mov
fcmovne
push
das
jns
dec
dec
xchg
cmp
sbb
aaa
inc
daa
clc
sbb
or
mov
pushl
push
cmpsb
cmp
cmpsl
mov
pop
rorl
jmp
and
sbb
dec
push
xchg
jle
call
lcall
mov
rolb
cvtps2pi
mov
bound
pop
inc
pushf
fnstcw
ret
incl
iret
lds
stos
in
adc
leave
ss
xchg
jge
and
mov
xchg
int3
jecxz
xchg
mov
pop
out
push
outsb
sub
sbb
jmp
shrd
push
aaa
ror
rol
out
xor
jmp
rol
dec
mov
xor
test
inc
sbb
mov
mov
out
mov
push
jg
jo
cmp
and
cmc
adc
aam
imul
and
inc
je
lock
cs
testl
fistpll
inc
add
cmpsb
fstpt
mov
pop
adc
fst
data16
mov
push
add
sbb
orb
inc
divl
repz
lcall
cld
dec
out
mov
cmp
stos
fimuls
jp
aad
test
mov
sub
and
psadbw
pusha
mov
sbb
fwait
adc
inc
daa
pop
pop
mov
cs
adc
or
or
cli
xchg
pop
mov
pop
dec
sbb
pop
dec
fldt
mov
cmp
daa
fdivs
jp
jp
jle
lahf
jno
xor
mov
pop
std
inc
inc
hlt
in
cmp
sbb
cmc
es
cli
add
lret
sbb
or
xor
fstpt
jno
xor
dec
sub
lods
nop
mov
pop
dec
movsl
mov
cmp
jb
sub
and
nop
mov
pop
loopne
inc
enter
mov
xchg
sub
or
pop
xor
inc
or
push
stos
ror
imul
mov
push
inc
mov
mov
and
dec
inc
outsl
std
and
cmp
inc
jns
xor
test
mov
mov
lcall
clc
cmpsb
push
inc
xchg
mov
mov
sub
stos
xchg
loopne
xchg
adcl
and
pop
dec
mov
fcomps
adc
cmpsb
in
xchg
out
sarl
imul
jl
xchg
clc
into
cmp
shlb
sbb
inc
xor
int
adc
or
sub
xor
movsb
je
jo
je
dec
mov
and
scas
in
iret
and
xchg
xchg
xor
ret
cmpsl
xor
cmp
or
mov
xchg
subb
mov
popf
mov
movq
hlt
xchg
sub
sub
rcrl
clc
push
aad
stos
nop
stos
repnz
arpl
fadd
sub
push
fiadds
push
in
je
mov
mov
insl
ds
enter
sub
ret
mov
dec
pop
leave
xor
lods
mov
jp
iret
shrb
lea
pop
out
testb
popa
or
xchg
cmp
push
lcall
mov
std
insl
sbb
jns
jns
ret
in
shll
add
cmp
lock
lock
inc
sub
mov
jmp
sbb
stc
mov
stc
cld
pop
pop
xor
sub
out
add
out
pushf
imul
mov
xchg
and
iret
and
mov
subb
and
out
sahf
out
fmull
push
adc
aaa
pop
nop
mov
dec
push
fisubrs
push
aaa
aad
sub
mov
cmp
xor
testl
cmp
in
cli
mov
cmpsl
scas
sub
add
movsl
add
scas
faddp
pushf
andb
mov
outsl
xchg
pop
mov
dec
sbb
sbb
cli
mov
out
in
arpl
lods
fdivl
popf
sbb
xchg
pop
nop
out
fsub
cmpsb
mov
and
lock
or
stc
inc
je
stos
das
mull
xchg
mov
and
inc
add
and
jl
sub
sub
aam
lahf
lcall
lds
sub
sahf
sbb
rcll
dec
arpl
xor
and
or
xor
and
loope
jae
data16
data16
call
adcb
hlt
outsb
sbb
ret
lods
out
fwait
inc
add
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
or
add
pop
inc
ret
fs
call
ds
pop
push
jnp
movsl
cwtl
mov
mov
insl
inc
sbb
insl
out
bound
cmc
xchg
lds
outsl
pop
out
out
lods
mov
push
push
xor
out
xchg
lret
aam
or
mov
lds
adc
scas
or
jae
mov
cmc
in
mov
out
outsl
lds
ret
sahf
sbb
jecxz
mov
xlat
lcall
jp
movsb
movsb
out
sub
adcb
xor
mov
loopne
int3
mov
push
pop
sub
cld
scas
dec
test
test
mov
int
pop
out
and
mov
fcomi
and
sbb
mov
int
mov
stc
xor
push
loop
aaa
daa
std
push
iret
aam
mov
pop
mov
push
sub
jbe
std
sahf
gs
or
nop
clc
int
leave
cmpsl
aas
mov
fs
xchg
in
call
fiaddl
push
adc
pop
sbb
inc
mov
pop
out
cmp
pop
jnp
xor
movsb
jecxz
or
dec
negb
sub
sbb
push
loope
mov
and
pop
or
sbbb
fidivl
cmpsb
popl
xor
xor
sti
push
orl
push
push
add
mov
sbbl
imul
sahf
rcrb
push
aad
or
xchg
cmp
and
mov
inc
fistpll
xor
fisttps
jne
loopne
sub
loopne
push
mov
out
rcrb
jge
in
cli
inc
mov
rorl
push
push
xor
pushf
pop
fistpl
or
rolb
fistl
call
xor
dec
mov
lds
and
scas
jbe
mov
mov
outsl
sahf
xchg
repz
sub
push
jle
mov
pop
es
jecxz
pop
int3
out
inc
rclb
fstl
mov
inc
fs
adc
and
rorl
push
xchg
sbb
cmp
lret
jge
xchg
notb
cmpxchg
mov
ret
hlt
aas
add
adc
and
push
shrb
ret
xchg
in
sub
mov
push
xor
addr16
subl
sbb
lcall
out
in
loope
jecxz
movsb
clc
xchg
stos
fisubrl
loope
sti
xor
cld
bound
imull
leave
or
xchg
or
div
loop
xchg
dec
jp
es
adc
dec
cltd
mov
xor
lods
xlat
lods
and
cmp
int3
shr
mov
std
mov
xchg
mov
inc
jne
dec
cmpl
mov
out
inc
jbe
mov
jg
xor
mov
or
xchg
fs
lods
cmp
mov
jb
and
dec
sarl
andb
pop
or
push
lea
push
xchg
xor
sub
ljmp
test
mov
gs
jne
mov
fs
imul
mov
test
dec
lret
wbinvd
adc
mov
nop
or
xchg
aad
sbb
insb
adc
pop
call
je
inc
bound
fidivs
sub
std
adc
in
rol
iret
pop
lret
cmp
pushf
or
cmp
pop
and
std
and
pop
int
sbb
adc
mov
xor
je
imul
mov
dec
iret
mov
popf
sub
test
and
push
aad
outsb
mov
leave
leave
xchg
add
or
sub
and
rolb
imul
xchg
mov
or
rcrl
cmc
in
ret
jo
repz
and
xor
mov
popf
rcrl
inc
data16
frndint
mov
inc
fimuls
outsl
or
push
orb
mov
push
jge
filds
imul
imull
cmpsl
add
popa
xchg
insb
cmp
in
push
mov
mov
and
clc
lods
mov
sub
sarb
jmp
mov
mov
sahf
xchg
pop
adc
mov
sahf
test
adc
jl
js
mov
dec
jns
cmpsl
cmpsl
jp
push
js
insb
mov
push
mov
daa
and
out
lret
xchg
inc
jge
mov
cmc
adc
xor
dec
stc
jnp
repz
pushf
jg
push
stos
addb
in
nop
lods
int3
insl
xchg
inc
mov
jo
sti
and
or
ret
lret
sbb
cmp
test
mov
fmull
jg
sub
fadd
in
imul
repz
fwait
mov
hlt
xor
ret
aad
push
dec
and
aam
sub
and
ret
in
fstpl
fisttpl
push
sub
xchg
pop
add
jne
sub
add
addr16
lahf
rol
add
clc
xchg
repnz
fwait
rcr
insl
and
jmp
push
movsb
arpl
jmp
add
flds
rcrb
test
aad
jge
das
xorb
jne
jge
pop
push
sub
outsb
mov
lahf
jl
notb
mov
mov
jl
test
mov
out
loopne
pop
lock
aas
jno
xchg
add
push
arpl
das
or
data16
mov
in
jae
pop
into
fistpl
daa
mov
mov
and
push
adc
jg
aaa
rol
lret
xchg
pushf
fcompl
mov
pop
or
subl
shrl
pop
inc
add
cmp
imul
rcrl
mov
pop
adc
enter
add
push
nop
cli
pushf
fnstcw
xchg
xor
rolb
pop
push
xor
jmp
lcall
xchg
inc
mov
movb
leave
xor
cld
sbb
rcrb
pop
mov
jp
inc
test
mov
xor
fcomps
mov
inc
push
scas
xchg
xchg
lea
dec
pop
insl
out
adc
out
testb
mov
and
pop
jg
cltd
inc
rolb
inc
sahf
jl
add
into
aad
cmpsl
jbe
ljmp
dec
das
jno
lods
xor
mov
xor
xchg
scas
jne
jmp
push
mov
cmp
daa
leave
pop
inc
pusha
nop
push
mov
mov
jge
inc
push
mov
rcll
arpl
mov
pop
pop
scas
arpl
and
pop
cmp
pushf
and
mov
dec
adcl
lahf
rolb
pop
sbb
scas
sub
fs
inc
shrl
mov
push
mov
scas
js
pushf
pop
mov
in
adcl
sub
inc
lock
dec
daa
mov
push
inc
jmp
jns
push
fsubl
nop
and
jb
mov
popf
pop
sub
xchg
xchg
sub
mov
rcrb
xchg
add
hlt
test
xchg
jle
fdivr
jbe
shll
dec
popa
cmp
in
nop
add
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
test
add
sub
add
ja
mov
fistps
mov
cltd
jp
xchg
call
stos
push
cmp
xchg
inc
sbb
mov
sbb
jb
sub
stos
ja
loope
out
xchg
sbb
sub
loop
mov
adc
decl
ja
sbb
in
pop
or
xchg
in
lret
sub
lods
mov
stos
push
repnz
sub
jl
mov
and
pusha
test
pop
insl
jns
add
push
cmp
cmp
repnz
lods
lds
clc
pop
jns
adc
cmp
xchg
add
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
ret
push
add
lds
add
mov
cmpsb
pop
pop
es
aas
sbb
jbe
inc
pop
sbb
sub
bound
push
icebp
cmp
insb
clc
pop
je
inc
xor
sub
iret
pop
xorl
inc
sub
js
mov
fisttpll
jl
and
idivb
pop
sarb
dec
inc
xor
gs
xchg
mov
insb
in
clc
std
mov
inc
push
sbb
addl
pushf
cmp
cli
pusha
in
sbb
les
xchg
scas
dec
addr16
sbb
fisttps
movl
push
sti
aad
aaa
inc
cwtl
dec
or
push
mov
lods
mov
jae
lret
jmp
and
pop
push
mov
jnp
jb
inc
imul
ss
push
sub
and
popf
fldenv
ja
in
sub
out
addr16
cmp
mov
mov
sahf
repnz
aaa
in
aaa
mov
xlat
pop
add
jp
jae
fwait
jno
mov
daa
sub
inc
xor
jmp
push
fnstsw
mov
sbb
xchg
ss
and
xchg
cld
testl
or
lds
insl
mov
test
jns
push
out
test
mov
or
and
mov
and
test
sub
mov
xchg
mov
ret
push
add
mov
mov
out
pop
int
adc
ret
dec
int3
xchg
pop
int
xchg
dec
add
xchg
dec
cli
imul
pushf
sahf
mov
lock
mov
aam
cli
mov
popf
repnz
jge
xchg
sbb
ja
and
loop
dec
sbb
repz
or
push
mov
rcr
mov
imul
fs
mov
dec
lret
mov
push
dec
pop
add
pop
insb
pop
push
jno
clc
jg
mov
out
cld
and
and
ljmp
fistpll
adc
sarl
sbb
out
xor
out
adcb
xor
cs
mov
sub
inc
hlt
addr16
ds
sbb
aaa
mov
inc
mov
pop
jb
jns
mov
inc
push
xor
dec
shr
jg
pop
orl
imul
test
popa
and
cmpsb
dec
lds
das
mov
sbb
sti
xchg
fiadds
outsb
xor
cmp
adc
ret
sarl
sub
sub
sbbb
mov
das
into
xchg
lea
stc
mov
pusha
xchg
ja
xor
mov
pop
movsl
or
xchg
xchg
scas
gs
fmulp
push
stos
mov
dec
inc
scas
loop
add
jmp
out
push
testl
gs
fidivs
nop
movsl
adc
js
inc
mov
dec
aas
arpl
xchg
icebp
in
cmp
bswap
cmpsb
std
mov
fwait
xor
push
mov
dec
inc
inc
stc
xor
push
enter
int3
leave
jbe
jmp
clc
ljmp
pop
jge
loopne
and
jns
scas
jno
cmp
pusha
cmpb
mov
jmp
fisubl
sahf
out
xchg
xchg
pop
sub
or
add
test
mov
stos
push
sub
and
and
jno
push
loope
jns
add
jno
shl
pop
loopne
leave
mov
mov
add
pushf
pop
mov
ror
cs
lock
or
test
lods
cmp
mov
mov
jnp
push
fldenv
or
stc
inc
push
push
mov
iret
ret
js
divb
fwait
lods
cli
loope
out
mov
enter
mov
mov
outsb
imul
or
xorl
data16
jbe
jb
push
inc
inc
daa
dec
jbe
mov
rsm
lahf
cmpsb
ret
loopne
pop
sub
stos
sbb
push
xor
mov
adc
mov
cltd
mov
lods
orb
adc
xor
adc
sbb
test
inc
or
mov
mov
stc
xor
ja
push
push
sbbl
dec
pop
mov
mov
sbb
icebp
lods
pop
push
mov
sub
icebp
test
hlt
mov
out
jmp
int3
iret
in
fwait
into
jmp
stos
pop
push
pop
inc
shll
add
fstps
imul
loop
in
loope
ret
aam
xor
dec
adc
imul
dec
pop
xchg
mov
ret
sbb
repz
call
mov
cmpsb
aam
fwait
push
les
sub
lahf
push
rorl
or
aad
jg
and
sub
cmp
cld
push
sub
fcompl
mov
leave
add
pusha
xor
push
push
add
xor
jmp
push
or
repnz
fwait
adc
movsb
movsb
je
insb
mov
pop
xor
lea
pop
test
add
ret
ljmp
mov
leave
jno
add
into
das
jge
jecxz
out
adc
test
mov
adc
cmp
sub
push
repnz
pop
rcll
pop
test
xor
ret
movl
lcall
add
jo
jge
sysexit
pop
xor
xchg
pop
into
xchg
xor
xlat
xchg
xor
dec
das
lods
mov
loope
xchg
ret
incb
cmp
sbb
lret
adc
adc
inc
int
cmp
lret
mov
inc
add
rcrb
jnp
dec
dec
mov
sbb
fcomi
inc
sub
sbb
dec
cmp
dec
xchg
push
lds
imul
inc
mov
mov
ja
insb
lahf
sub
pop
jae
push
cmp
rcr
mov
hlt
not
aaa
jns
out
cs
fsubp
jno
adcl
xchg
rclb
mov
cld
pusha
stos
mov
imul
xchg
cmc
push
out
bound
xchg
push
test
push
xor
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
add
add
add
add
repz
rcrb
mov
sub
repnz
loopne
jbe
lds
bound
in
cmp
cmp
mov
incb
adc
outsb
insb
outsb
fucomi
loop
call
cmp
cmp
pop
scas
sub
popa
mov
out
add
cmp
and
aas
arpl
cwtl
xchg
fcmovne
push
or
inc
and
ja
and
pop
add
add
fcoml
inc
push
test
bound
ljmp
jp
mov
fs
xchg
inc
lds
icebp
pop
scas
inc
add
lcall
mov
add
fmuls
fwait
test
movsl
xchg
dec
scas
cwtl
dec
sub
pop
xchg
add
sbbl
jp
dec
mov
cmp
dec
inc
dec
jne
or
jmp
rcrl
lcall
test
lods
dec
cmp
cltd
or
ja
xchg
aas
test
pusha
lcall
sub
mov
cmpsl
lds
push
cwtl
call
push
in
sahf
or
insb
dec
loop
push
cs
insb
cld
xchg
out
push
xchg
sub
out
pop
ss
sub
sbb
gs
mov
mov
stc
idivb
pop
cmp
push
aaa
pop
pop
in
adc
out
push
mov
cmc
lds
repnz
mov
aaa
in
jno
cmpsb
mov
sub
and
aas
sbbl
jmp
loopne
repz
pop
les
stos
out
div
xchg
push
arpl
idivb
or
pop
mov
pop
out
mov
cs
dec
aad
or
xlat
imul
adc
push
cmc
aas
aas
jns
jae
mov
add
sub
sbb
lods
xorl
jmp
test
xchg
mov
imul
iret
popf
jnp
into
mov
push
ret
pop
mov
in
ljmp
inc
test
push
dec
mov
loop
pop
xchg
cli
xor
fs
call
faddl
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
or
add
mov
jmp
popf
add
loope
mov
or
fldcw
scas
lds
jle
or
jmp
or
push
inc
mov
cli
paddq
mov
mov
push
pop
push
xchg
mov
pop
test
loopne
mov
mov
add
xor
jb
scas
lds
fbstp
inc
out
cli
fwait
xor
mov
xor
push
add
ds
fisubs
mov
push
push
adc
mov
aas
pop
adc
ljmp
pop
ja
jo
adc
lret
rolb
inc
jns
ds
pop
loopne
lret
cmp
push
dec
sbb
movsl
addl
mov
je
aam
lock
xchg
jmp
fucom
sbb
rcr
stc
subl
pop
pop
pushf
adc
jae
mov
pop
adc
mov
out
sub
mov
data16
inc
cmp
pop
jge
push
leave
pop
in
inc
fcoms
adc
cmpsb
dec
sub
leave
xor
cmp
mov
mov
aam
add
test
in
lods
xchg
cltd
xor
push
fucom
aam
sahf
cwtl
jnp
leave
add
or
repz
cli
leave
jnp
pop
outsl
xor
jp
fsubrl
mov
in
pop
fidivs
dec
movsb
mov
pop
sti
pop
aaa
mov
ss
mov
and
gs
loope
mov
andl
mov
lock
inc
jbe
fiaddl
pop
sbb
stos
inc
outsb
vphadduwq
lahf
push
xor
loopne
call
daa
push
push
repnz
push
andb
mov
xchg
fimuls
jbe
xor
stc
out
mov
sub
push
cli
jg
sar
hlt
inc
mov
pop
fcomp
lods
enter
cwtl
adc
mov
popa
lds
push
mov
push
aad
xchg
or
jb
andl
stos
jecxz
loopne
adc
jmp
test
mov
fnsave
add
pop
movsb
xor
ja
andb
lds
test
dec
xlat
aas
test
add
test
push
lock
mov
sub
mov
div
scas
movsl
push
push
push
jno
adc
or
repz
repnz
in
mov
xchg
cli
mov
jle
inc
push
adc
test
shrl
loop
pop
scas
dec
decb
adc
pop
nop
movsb
ret
jecxz
aam
push
cmp
stc
into
mov
or
mov
fsubrs
cld
and
shrl
or
js
and
cli
gs
cmpsl
mov
jle
pop
dec
adc
or
or
inc
outsb
dec
jp
pop
dec
stc
dec
adc
mov
and
mov
outsb
inc
push
cs
cmp
xchg
mov
fsubrs
adc
popfw
aaa
enter
dec
or
jmp
jno
adc
fisttpl
test
mov
stc
push
adc
jbe
jo
cmp
cmp
mov
pop
je
movsl
fdivrl
jns
sub
inc
jb,pn
push
push
or
loope
clc
or
sahf
xchg
cmp
jnp
ss
pushf
pop
dec
jle
sub
jl
dec
gs
adc
dec
scas
fisubrl
xchg
push
lret
and
imul
pop
push
mov
mov
push
ja
repnz
enter
pop
shrb
ljmp
or
repnz
add
dec
or
cs
incb
addr16
inc
in
and
mov
movsb
cmp
popa
movsb
repz
xor
xor
js
mov
test
out
pop
mov
test
nop
pushf
movsl
bound
dec
fcomps
aad
add
sti
and
xchg
imul
orb
xor
outsb
fisttps
fdivs
fcoml
lods
pop
repz
scas
mov
adc
adc
sbb
push
sub
ss
daa
ss
mov
mov
loop
add
pop
fwait
enter
movsl
jecxz
dec
mov
inc
xor
inc
insb
pop
adc
sub
inc
ss
cmpsb
cmc
les
dec
sub
test
and
test
push
subl
aam
leave
jmp
aaa
sbb
icebp
sub
mov
fcompl
imul
divl
aam
xchg
sbb
arpl
call
sbb
cwtl
addb
call
jg
std
sub
mov
bound
ds
aad
pushf
cmpsb
jbe
xchg
les
mov
adc
cmc
imul
adc
flds
flds
dec
sbb
push
mov
ret
arpl
cmpsb
jecxz
ret
jge
imul
cltd
loopne
mov
pop
outsb
and
push
mov
sti
dec
aam
adc
mov
or
xchg
mov
mov
push
stos
ret
inc
in
lcall
dec
cmp
mov
inc
add
fwait
icebp
mov
lea
mov
push
je
nop
clc
aam
lret
sar
js
dec
xor
int
mov
xlat
sahf
or
adc
mov
add
mov
sahf
jns
pop
cmpsb
aam
sub
pop
xlat
cmpsl
mov
jae
pop
ljmp
sbb
xchg
repz
idivl
repz
sub
lock
cs
rcrl
fidivrs
xor
leave
or
das
jne
rolb
sbb
es
pop
adc
jb
mov
xchg
fisttpl
or
stc
leave
and
pop
dec
inc
out
sbb
jg
adc
xor
es
cltd
cmp
rcrb
fists
cwtl
xor
out
adc
push
mov
aaa
test
add
push
lahf
js
dec
hlt
xchg
adc
push
adc
shll
pushl
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
add
add
add
in
loop
iret
aaa
pop
push
push
mov
mov
rcll
sub
add
gs
dec
dec
imul
iret
mov
push
repz
push
lods
xor
xchg
mov
and
xorb
cmp
pop
cwtl
mov
mov
enter
mov
movsl
cld
das
test
aaa
mov
sub
push
inc
mov
mov
mulb
cmp
lods
scas
negl
or
into
cs
lods
inc
popa
xchg
idivb
lahf
dec
mov
inc
imul
test
out
mov
jnp
cld
lock
int3
sub
stos
cli
jo
cmpsb
lods
mov
sub
lret
arpl
out
jge
jno
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
add
add
popa
cltd
imul
ret
insb
or
scas
pop
mov
imul
mov
mov
push
cmovle
push
ret
pop
pop
mov
sub
or
and
scas
sahf
jns
cmp
nop
rorl
xor
int
out
test
sub
or
ret
lret
mov
das
add
push
dec
xchg
jle
stos
es
and
dec
mov
or
mov
js
rorb
loop
dec
push
orl
cmp
pop
test
movsb
fistl
outsb
imul
in
adc
fcoms
mov
js
mov
lds
fmulp
mov
pop
jge
clc
sarb
pop
xor
lret
xor
out
dec
test
mov
mov
pop
fcmovne
out
pop
xchg
xor
sbb
jnp
fdivrl
mov
and
push
sub
cmc
add
outsl
or
xor
xchg
xchg
mov
pop
xor
in
and
sub
neg
sub
xor
fs
mov
jmp
fisubrs
or
inc
adc
push
shr
dec
fmuls
mov
jge
xlat
xchg
adc
adc
shr
ffree
inc
adc
gs
pop
bound
dec
sub
jmp
divb
mov
cmp
xchg
adc
fadds
xchg
ret
xchg
mov
add
or
mov
ss
push
cmp
insl
ljmp
mov
test
mov
sub
mov
mov
out
or
inc
dec
lret
mov
pop
push
sbbb
inc
mov
aas
lea
lret
loop
pop
rcr
jb
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
add
add
add
xchg
loope
push
and
cmp
push
insl
shll
mov
hlt
outsb
and
mov
or
int3
jp
fwait
outsl
pop
aas
inc
test
imulb
or
adc
sub
push
xchg
pop
and
call
push
daa
xor
iret
popa
and
ss
aaa
pop
lock
pop
mov
push
fstps
jo
jge
push
pop
sbb
nop
rcrb
pop
jne
inc
aaa
or
xchg
stos
repz
addr16
and
loope
jne
adc
jg
jne
push
sub
clc
shl
jne
or
inc
cld
mov
fsts
mov
fimuls
sub
movsb
pop
mov
push
scas
dec
jno
pop
xor
jle
adc
lods
or
push
inc
movsl
xor
js
push
push
leave
cmp
xchg
leave
popf
sub
rcrb
sbb
mov
stc
fiadds
xchg
mov
push
ret
xor
xor
mov
jmp
out
movsl
pop
pop
shl
inc
int
int3
daa
arpl
fnstsw
push
or
mov
dec
mov
mov
mov
pop
fcompl
gs
jmp
inc
adc
daa
insb
into
sub
mov
xchg
sahf
jbe
lods
add
cmpl
mov
xchg
cmc
dec
jle
outsl
mov
jnp
dec
lods
mov
and
cmpsl
fisttps
jle
lret
mov
cmpsl
push
fsubs
and
pop
sub
mov
adc
das
ss
cmpsb
data16
mov
mov
outsb
jg
and
mov
or
fdivs
or
inc
cmp
and
pop
sahf
fwait
xchg
jecxz
lock
repz
xor
sbb
mov
push
xchg
std
jb
aad
push
lods
sbb
cmp
lret
imul
outsl
adc
inc
fs
dec
out
test
jne
nop
flds
push
fsubl
dec
mov
mov
xchg
ds
jecxz
int
lea
leave
dec
cmp
push
jne
pop
jne
sbb
cmc
xlat
ds
adc
enter
mov
fdiv
mov
aas
xchg
add
push
inc
das
fiadds
dec
stos
jae
fcoms
mov
scas
xchg
ret
sub
mov
sub
lahf
pop
scas
xchg
outsl
cld
in
popa
add
xchg
jecxz
dec
adc
iret
or
cmp
fs
pusha
std
mov
loope
bnd
dec
inc
fistpll
mov
jl
mov
push
js
inc
sub
cmp
or
inc
lock
cli
shl
xchg
adc
shlb
sbb
pop
pop
add
mov
adcl
fwait
cmp
pop
rol
insb
dec
xchg
shl
fwait
aaa
fists
xor
cmp
adc
pop
jg
sub
popa
in
popf
dec
mov
or
je
or
movsb
imul
adc
mov
mov
mov
xchg
xchg
popa
sub
inc
push
xchg
ror
sti
rcl
les
cmp
push
cmp
cmp
lods
push
sub
jb
decb
pop
outsl
adc
outsb
add
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
sub
add
and
add
lahf
shrb
rorb
iret
pusha
push
ljmp
jb
xor
fisubrs
or
fucomip
test
shll
insl
and
add
adc
or
bound
pop
add
dec
dec
add
push
imul
adcb
mov
andl
sbb
sbb
repz
adcb
dec
add
mov
rorb
cli
filds
jg
insl
jle
scas
jae
inc
dec
popf
jbe
adc
add
jbe
mov
mov
sbb
out
insl
dec
and
hlt
stos
inc
push
sub
or
sbb
stc
aaa
jns
xorb
jb
lret
lock
cmp
out
push
mov
in
xor
dec
pop
popa
out
cmpsb
jo
xchg
pop
repz
add
pop
push
sbb
rcrb
dec
mov
xchg
jb
popf
mov
push
sti
jo
repnz
jmp
dec
jg
xor
loop
loopne
push
adc
cwtl
pushf
int
ds
mov
and
movsl
mov
mov
mov
xor
mov
dec
cmp
mov
push
out
test
push
repz
push
and
flds
test
fwait
movsl
cmpsb
push
aas
xchg
aad
xlat
jecxz
les
cmc
mov
outsl
dec
mov
andl
pop
int
loope
arpl
add
hlt
jo
push
dec
mov
sti
adc
les
scas
push
fcompl
cmp
sub
rorl
out
pop
or
aad
das
adc
lds
adc
icebp
mov
jns
cmp
jne
xchg
js
dec
xchg
aad
mov
xor
sti
sarb
vpaddw
test
test
stos
sbb
popf
mov
xchg
divl
mov
inc
adc
mov
inc
adcb
addr16
xor
fisubrl
add
dec
sti
loope
aam
movsb
xor
jb
hlt
lret
inc
js
push
in
pusha
push
mov
les
adc
mov
ss
in
add
xchg
int
adc
dec
aad
in
mov
ret
add
jl
lahf
ds
imulb
out
enter
xor
cmpl
jmp
or
aaa
mov
aam
in
daa
das
xor
mov
adc
ljmp
push
ret
in
inc
adc
mov
mov
add
inc
mov
push
pop
repz
out
nop
test
add
pop
pop
pop
lods
adc
mov
mov
pop
cld
in
repz
out
je
push
mov
out
js
jp
sub
push
notb
mov
jg
dec
pop
inc
mov
mov
adc
popf
test
in
xor
dec
add
pop
mov
enter
xlat
xchg
repz
inc
stos
lock
js
imul
cli
out
sahf
into
xlat
hlt
jg
or
arpl
fmuls
xchg
sbb
setle
arpl
push
and
dec
lods
ja
fstl
mov
dec
adc
aaa
mov
push
add
in
or
and
inc
div
sub
js
stc
sub
test
ja
nop
sbb
push
leave
cmpsb
divl
insb
push
enter
sub
add
jl
jnp
fisttps
pop
je
pop
ja
clc
rclb
lds
or
adc
fucom
inc
inc
rorb
xchg
mov
shll
sar
lea
dec
dec
loopne
add
inc
or
pushf
jle
sub
push
jno
sbb
pop
fdivrl
mov
pop
mov
sub
nop
outsl
pop
fldl
dec
loope
movsb
dec
xchg
jmp
rcr
inc
xchg
cli
mov
fwait
icebp
repz
scas
adc
jmp
lds
cmpsb
add
dec
pop
loop
or
fnstcw
cmp
out
mov
in
cmp
fnstenv
in
cld
aad
add
mov
xchg
js
loop
ja
jb
mov
push
fwait
daa
cmp
jo
pop
xchg
xchg
data16
mov
jb
push
lock
and
fwait
ljmp
mov
in
xchg
shlb
mov
jbe
test
mov
push
jl
dec
and
xchg
gs
test
dec
aaa
ficomps
je
push
pop
out
mov
sub
shll
aam
xchg
sbb
sub
mov
cmpsl
dec
xor
cmp
adc
jle
push
out
jmp
xor
mov
pop
add
je
loope
sbb
mov
jbe
ficoml
mov
fsubs
push
sub
rorb
aad
pop
es
scas
add
out
dec
sub
sbb
cmpl
imull
dec
lods
lahf
pop
jo
in
mov
sahf
jne
test
enter
ljmp
lea
ljmp
sbb
lods
xchg
xchg
dec
mov
mov
aaa
test
jo
test
push
jge
in
test
mulb
or
push
xchg
or
xchg
xchg
jbe
ljmp
loope
scas
lret
into
sub
cmc
sub
push
shll
cmpsl
jmp
dec
lods
rol
sub
and
or
movsb
mov
cltd
xchg
push
sahf
test
adc
push
rcr
cltd
lret
lret
sub
cmpsl
jge
ret
movl
adc
and
mov
out
push
pushf
xor
sbb
mov
js
lods
insb
roll
in
in
mov
jnp
cmp
popa
scas
mov
xor
xchg
sbb
mov
cmpsl
bound
dec
mov
adc
aad
icebp
les
fstl
xchg
out
loope
popa
adc
fdivl
mov
pop
adc
dec
jmp
scas
pop
leave
out
mov
fcmovbe
stos
movsb
sbb
hlt
dec
mov
mov
aaa
movb
adc
cmp
int
movb
jmp
or
call
shlb
mov
gs
jecxz
inc
repz
test
xor
int3
int3
lcall
jmp
xlat
jae
adc
dec
push
pop
add
jle
fwait
or
sbb
cli
mov
jae
or
or
dec
out
sub
adc
sbb
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
add
add
add
add
icebp
sarl
rep
sbb
shll
insb
aaa
movsl
in
bswap
pop
mov
xchg
lods
jmp
mov
inc
mov
add
std
movl
mov
xlat
lods
ret
insb
stos
aad
movsl
insb
cmp
gs
push
sbb
clc
repnz
les
cmp
mov
and
add
adc
mov
int
push
ss
adc
mov
notb
mov
lea
xlat
xlat
xchg
jno
int3
iret
sub
loop
cmp
jge
sub
enter
pop
and
mov
sub
add
cmp
fdivr
mulb
jne
push
cld
add
and
aas
cmp
cmp
mov
jge
or
inc
add
pop
adc
aam
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
mov
or
add
inc
add
xor
in
fwait
pop
pop
lods
jns
xchg
test
xchg
jo
push
fs
cmp
and
and
in
rcr
fstpt
insl
nop
adc
insb
ss
lock
cli
xchg
shlb
stc
xor
arpl
and
test
out
xchg
dec
mov
xor
outsl
xchg
inc
lret
dec
in
pop
ljmpw
pop
pop
dec
xchg
popf
cmpsl
cli
ficomps
jecxz
dec
adc
incb
sahf
movsl
mov
inc
mov
dec
jp
jg
in
std
pop
jecxz
xchg
cmpsl
stc
cld
icebp
js
dec
or
and
jb
xchg
lods
ljmp
cmp
add
mov
add
cmp
mov
sbb
pop
jno
xor
xor
ljmp
adc
in
pop
jmp
cmpsb
push
shlb
rcl
cli
notl
adc
push
sub
ja
call
xor
sbb
rcll
jl
jbe
loope
pop
pop
aaa
testl
mov
daa
ds
je
ret
movsb
pop
not
outsl
shl
ljmp
les
insl
cli
mov
inc
push
stc
inc
data16
shll
fidivl
jns
cltd
jne
icebp
dec
scas
aad
xor
js
mov
inc
xchg
lret
xchg
mov
xchg
ss
xlat
push
push
out
xchg
push
pop
jb
repnz
adc
outsl
lds
mov
cmp
push
bound
outsb
fistpl
outsb
jno
mov
sub
xchg
insb
andb
ret
inc
call
mov
idivb
sub
fsub
shlb
xchg
sar
loop
adc
call
jb
adc
sahf
jl
push
xor
fs
add
push
je,pn
xchg
mov
mov
cmp
sbb
xchg
fcomi
out
ljmp
inc
fisttps
pop
push
lea
adc
scas
adc
push
mov
push
jae
pop
in
inc
sbb
cltd
test
dec
xchg
dec
js
sub
es
lcall
sarl
imul
push
and
push
sub
dec
sbb
push
insl
neg
xchg
das
mov
jp
sbb
add
mov
mov
das
je
mov
stos
test
xchg
and
sahf
mov
and
pop
stos
sahf
mov
je
out
add
imul
sarb
mov
jl
lds
jnp
xchg
mov
mov
cs
jb
mov
dec
pushf
jae
mov
cld
scas
enter
dec
fsubr
jmp
jge
sti
pop
or
cmc
xchg
outsl
aaa
push
sub
xor
movsb
inc
xchg
sbb
add
inc
or
sbb
pop
inc
pop
sub
ss
fwait
or
xchg
mov
cwtl
push
aas
cmp
push
jmp
mov
data16
push
dec
mov
pop
mov
fsubrs
nop
mov
inc
out
or
pop
jb
nop
fabs
pop
cmpsb
xchg
lea
int3
adc
test
push
adcl
add
add
je
xchg
jge
sub
dec
push
xorl
add
or
pop
rclb
mov
call
jbe
mov
or
xchg
addl
data16
pop
jne
adc
clc
pop
dec
in
sbb
lea
mov
sub
and
pop
lahf
mov
and
in
nop
in
lods
add
sbb
dec
scas
pop
addps
cltd
or
mov
lret
xchg
add
imul
jg
imul
ficomps
xor
cs
sti
filds
into
shrl
mov
xchg
dec
movsb
mov
jmp
test
mov
sti
mov
mov
or
sub
rolb
add
and
sarb
inc
loop
inc
mov
test
ficomps
xchg
pop
ljmp
fiaddl
sbb
in
dec
jg
push
inc
push
mov
adc
sub
jle,pt
sub
test
scas
add
cld
inc
inc
pop
and
stos
dec
cmp
sbb
iret
push
mov
jecxz
mov
ffree
inc
sbb
insb
mov
cmp
sbb
push
push
sub
pop
xchg
ja
hlt
scas
or
or
inc
rcrl
insl
add
cmp
push
mov
add
adc
mov
je
ss
data16
jae
repz
dec
leave
cmc
ss
and
repz
mov
movsb
add
mov
test
push
enter
mov
push
or
add
mov
jne
adc
js
dec
jl
aam
push
push
xor
mov
hlt
jo
loope
ljmp
and
out
stos
mov
dec
push
out
xchg
adc
pop
push
aam
aad
jns
adc
lahf
loope
inc
add
push
or
fisubl
pop
aaa
jo
xor
hlt
xor
dec
dec
add
outsb
sbb
sbb
xor
int
adc
jmp
aad
or
lcall
adc
pop
loopne
jno
cmp
imul
mov
mulb
or
in
mov
in
ja
in
adc
stos
not
pop
cmp
out
xor
leave
shlb
outsb
mov
ljmp
es
insl
inc
out
sbb
sbb
or
out
and
xor
fucom
mov
icebp
fnstsw
imul
xor
and
pop
cmc
das
popf
mov
xchg
mov
dec
jl
addr16
stos
pop
ror
mov
mov
jmp
rolb
xchg
sub
scas
push
jno
icebp
jae
add
jno
pop
or
jl
dec
dec
shrl
lods
inc
and
push
lock
inc
jae
dec
mov
adc
out
or
aaa
add
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
pop
add
add
add
push
inc
imul
test
add
mov
bnd
mov
imul
xor
mov
inc
aaa
mov
repz
in
and
dec
pushf
incb
dec
out
int3
inc
pop
in
hlt
xor
or
pop
divl
xor
movsb
xor
testb
adc
mov
flds
and
xchg
jne
es
mov
das
jno
std
or
xchg
cld
sahf
mov
or
xor
aam
sbb
push
mov
popa
jmp
add
adc
test
lods
dec
out
jecxz
mov
ficompl
adc
cwtl
nop
cld
fcoms
adcb
rcll
loop
out
loopne
dec
jnp
clc
adc
or
mov
scas
mov
js
bound
adc
rol
iret
fs
fisttps
movsb
jmp
repnz
int3
clc
or
call
push
scas
hlt
and
mov
cmp
jnp
cmp
mov
ljmp
push
push
sbb
fisttps
movsb
cli
adc
xor
cmp
pop
loope
pop
arpl
push
fadds
nop
movsb
hlt
mov
out
cmp
fdiv
in
repnz
es
add
pushf
iret
cmpsb
cli
shll
dec
xor
jecxz
rorw
or
pop
and
mov
sbb
out
imul
xor
cmp
push
add
out
mov
inc
push
lods
cwtl
xor
outsl
and
and
push
pop
add
mov
adc
cmc
jge
dec
daa
mov
dec
push
mov
pop
jge
add
imul
pop
mov
insl
ret
lret
pop
push
stos
popf
and
cmp
adc
xchg
out
pop
xor
shrl
xchg
mov
enter
sub
mov
mov
dec
vpunpcklwd
sbb
adc
add
inc
test
or
push
aam
leave
daa
and
add
cld
add
mov
or
into
in
repz
movsl
sub
dec
adc
sahf
out
cwtl
pop
inc
xchg
sub
cvtdq2ps
push
pop
ja
mov
mov
xchg
iret
adc
xor
pop
dec
in
std
add
pop
dec
repnz
data16
jp
ja
mov
adc
adc
loop
adc
dec
mov
cltd
sbb
push
in
sub
in
clc
xchg
out
or
in
bound
iret
mov
pop
jno
push
cmp
dec
mov
in
js
fistpl
cmc
lock
add
add
nop
repnz
or
nop
fidivrs
dec
inc
pusha
inc
ljmp
jge
adc
cli
or
cmp
cmp
cmp
sbb
data16
stos
or
lock
add
jmp
shll
cmp
mov
stos
shl
dec
xor
test
sarl
dec
into
cli
cmp
loope
dec
scas
cli
stos
out
jle
movsb
inc
cmp
mov
stos
dec
mov
jnp
call
arpl
pop
shrb
mov
ss
das
sbb
fidivrl
sti
lret
mov
inc
dec
mov
push
pop
lods
lods
xchg
and
sub
mov
shrb
mov
cld
sbb
nop
in
imul
xlat
lock
mov
sbb
or
dec
fs
sub
pop
ss
imul
cli
pop
lods
jl
stos
sbb
popf
inc
fs
mov
pop
jbe
dec
movsl
int3
or
js
inc
iret
jl
test
fdivs
fst
fiadds
or
mov
push
sub
adc
xor
rcll
push
out
aas
int3
jne
inc
push
shlb
dec
jle
test
cltd
sub
xchg
sub
sub
mov
arpl
mov
push
xchg
mov
test
mov
jmp
mov
xchg
sbb
inc
roll
lret
les
addr16
aam
push
inc
inc
cld
mov
out
dec
ss
mov
sbb
cmp
add
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
loop
add
and
add
xor
sbb
pop
xor
std
mov
cli
jae
in
lds
sbb
aam
out
jne
in
inc
popa
lods
mov
in
add
int
jl
xchg
ds
mov
call
out
dec
addl
and
cmp
dec
jnp
adc
sbb
loope
add
xchg
mov
push
pop
or
test
loopne
mov
xchg
fmuls
mov
pop
scas
pusha
and
es
mov
sbb
cwtl
leave
xchg
cwtl
test
ret
sub
dec
aad
cld
mov
mov
bound
popa
mov
xor
outsl
clc
push
xchg
je
in
lods
jae
xor
addr16
mov
inc
lret
daa
jmp
loopne
lahf
mov
mov
push
and
add
mov
pop
push
cld
xchg
adc
imul
loopne
inc
shlb
into
sbb
scas
cmp
jb
inc
cmp
nop
nop
stos
push
outsb
lods
sub
or
rorb
cwtl
jb
and
or
imul
jae
mov
je
cmp
loop
adc
add
sbb
orb
adc
adc
push
add
loope
das
aas
xchg
lds
jmp
mov
fidivl
gs
xor
cmpb
ret
jl
adc
xchg
pop
in
fcmovu
jmp
inc
push
stc
pop
mov
outsl
pop
mov
dec
xchg
jo
lock
aam
dec
loope
or
dec
mov
dec
movsl
push
adc
sub
enter
loopne
test
pop
mov
fidivrl
sub
add
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
popf
add
add
add
add
cmc
test
xlat
push
mov
mov
subb
ja
loopne
cmpl
test
xor
mov
mov
mov
in
shrl
in
out
adc
mov
idivl
mov
cld
pushf
shr
mov
xchg
add
cli
mov
sarb
add
xor
popa
or
sbb
push
imul
mov
daa
shrl
sbb
lods
fstpt
addb
add
and
inc
outsb
push
test
add
xor
addl
cs
repz
xor
xchg
out
dec
or
popa
jae
push
cmp
mov
sti
js
ds
fisttpl
mov
push
out
jbe
inc
dec
bound
jb
sbb
pop
cmp
icebp
jle
loope
mov
call
pushf
xchg
repnz
sahf
jo
push
imul
fwait
jle
fdivs
pop
lahf
add
les
ret
bnd
sub
pusha
push
mov
aaa
sub
shlb
lods
jbe
into
popa
nopl
mov
ss
rolb
call
jb
addr16
lea
add
and
cld
scas
popf
sahf
push
xlat
add
enter
lock
lds
outsl
pop
jmp
pop
dec
xor
cwtl
adc
mov
cmp
test
mov
popa
insl
lds
add
xor
and
push
lahf
das
shr
pop
jnp
rclb
in
adc
int3
pop
sarl
pop
add
pop
sarb
inc
imul
lods
cmp
xor
and
lcall
sub
lret
jg
imul
pop
rolb
pusha
stos
ja
dec
test
mov
loopne
out
pop
push
sub
adc
pop
add
insl
mov
call
jp
out
or
bound
push
add
push
cs
bound
or
in
or
jb
push
sbb
mov
dec
mov
fsts
aaa
daa
ret
lcall
stos
cmp
cmovg
push
ljmp
shrb
rorb
shr
pop
es
mull
jbe
rcrl
pop
jbe
rorl
pushf
jp,pt
push
push
cmp
jne
adc
adc
pop
inc
dec
aas
cmp
cmp
add
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
fiaddl
add
lock
adc
mov
jb
hlt
iret
int
sti
lea
or
dec
xor
mov
adc
dec
xchg
cmc
lock
shr
movsb
adc
xchg
add
xor
push
sahf
arpl
mov
popa
movsl
mov
inc
or
pushf
xor
aaa
jl
std
aad
in
mov
nop
je
xor
adc
in
ljmp
gs
cld
in
sub
xor
xor
out
lods
sub
cmp
or
in
sahf
movsb
push
pop
inc
lds
push
mov
jle
arpl
jns
push
shrl
insb
cmp
orb
cmp
aaa
jno
push
call
inc
lret
xor
push
inc
add
mov
xlat
push
mov
test
sbb
sar
sahf
mov
cmp
jl
jmp
das
xor
aaa
insb
shl
push
mov
push
inc
movsb
scas
inc
push
cmp
es
cmp
push
xchg
inc
inc
pop
shrb
out
jmp
and
mov
lcall
or
out
stc
inc
ljmp
push
out
arpl
repz
cmp
dec
pop
les
ljmp
cli
addr16
sub
or
pop
in
xchg
bound
xor
add
cs
jl
cmpsl
mov
jge
psrad
inc
cwtl
mov
dec
test
pop
mov
in
cmp
adc
into
xlat
pop
imul
nop
sub
dec
sbb
or
outsl
cmpsl
jo
add
mov
scas
aam
add
pusha
add
punpcklwd
mov
mov
jo
mov
inc
repnz
cmc
add
mov
std
ret
movsb
insl
add
in
fimuls
leave
jmp
inc
mov
xchg
mov
add
mov
and
rcrb
call
loopne
loop
and
pop
sbb
and
or
lds
add
mov
adc
shrb
and
add
push
pop
rolb
pop
pop
sub
call
andl
push
add
xor
and
ror
call
subl
sbb
inc
push
push
xchg
mov
out
test
shl
rorl
xchg
adcb
cli
push
mov
mov
fdiv
call
mov
dec
pop
jno
pushf
inc
cmpsl
in
xchg
dec
hlt
js
xchg
sub
xor
stc
xor
neg
and
jge
psrad
inc
cwtl
icebp
push
faddl
in
scas
push
cmp
repnz
andb
jecxz
mov
shlb
notl
enter
pop
pop
cmpsb
add
sbb
adc
in
pushf
imul
mov
insl
mov
popaw
int3
mov
sub
xor
addr16
lods
add
out
scas
mov
or
pushf
ds
cltd
inc
cmp
fimull
cltd
xchg
jg
call
push
das
pop
inc
data16
xor
xor
rolb
push
pop
add
or
cli
lods
jl
test
mov
add
sarl
rcrb
push
ja
outsl
sbb
xchg
std
and
ss
sbb
and
add
call
jg
fwait
add
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
add
add
xor
movsb
ds
lods
inc
lods
fs
inc
sub
pop
in
stos
aas
arpl
lds
jns
sbb
pop
or
outsb
pop
jne
xchg
mov
out
test
shl
rorl
xchg
adcb
cli
push
add
xchg
fs
push
adc
popf
lahf
ss
dec
fldcw
shr
jb
mov
movsb
fisttps
lret
mov
arpl
ror
xor
jb
rolb
dec
aaa
stos
pop
adc
cltd
test
jmp
daa
xor
js
push
shll
xchg
out
clc
pusha
mov
or
mov
stos
xor
cmp
cmp
and
pop
mov
or
shrl
and
push
into
adc
xlat
insb
ljmp
mov
xchg
fcoms
outsl
sbb
inc
cs
push
pop
aad
aam
xor
dec
cli
jbe
mov
icebp
or
mov
enter
jns
in
bound
vorps
inc
pusha
and
sbb
lahf
addl
and
stc
nop
xchg
pop
imul
shr
lcall
and
add
sub
dec
push
addr16
fimull
mov
add
jo
xchg
xor
or
nop
lock
fiaddl
jle
and
movsb
int3
fcmovnb
or
fadds
loop
pop
arpl
rcrl
ret
xor
stc
arpl
xchg
loopne
add
or
shlb
in
arpl
sahf
test
fdivrl
movsb
and
mov
or
mov
jo
mov
jge
insl
out
fisubs
lcall
hlt
iret
cmp
mov
das
adc
cmpsl
xor
lcall
jg
lret
fxch
add
andl
shll
sbb
loopne
mov
jle
lods
or
addl
js
clc
gs
mov
cmc
faddl
adc
pop
andb
push
movsb
pop
scas
jmp
add
cltd
lret
outsl
and
stc
lea
leave
decb
xchg
iret
ds
push
jne
adc
push
test
pop
mov
jle
ja
xchg
in
add
inc
and
add
mov
sub
jb
xor
mov
aad
aad
and
push
add
je
mov
jb
xchg
imul
subb
sub
mov
cmpsl
gs
movsb
add
fst
pop
mov
stos
push
call
loop
andl
mov
push
fsubs
movsl
call
js
stc
lods
orl
or
xchg
sbb
fisubrs
mov
in
and
add
mov
jl
cmc
mov
cmp
outsl
add
hlt
hlt
pop
lea
aaa
push
push
dec
cmp
inc
xchg
jmp
in
pop
data16
jne
cmpsl
cmp
push
inc
dec
jns
and
sahf
frstor
sub
inc
in
lea
loopne
gs
sbb
out
les
decl
in
or
fisttpl
test
sub
loope
push
inc
insl
sub
movsb
lock
jbe
xor
int
cmpsb
mov
cmp
enter
inc
faddl
adc
sub
pop
mov
aaa
imul
mov
rclb
push
repnz
aas
lea
ret
fldt
addb
enter
mov
mulb
sbb
or
inc
fisubs
sbb
fbld
fistps
pop
mov
stos
add
jg
lds
iret
scas
xchg
xor
gs
gs
cltd
mov
jae
dec
bts
jae
in
mov
xchg
adc
mov
cmp
stos
popf
je
jmp
fldt
and
das
call
clc
fxch
xchg
and
pop
cmp
push
mov
jns
loop
add
call
sub
xchg
pop
jp
and
shr
fdivrs
push
jle
loop
pusha
cli
cmp
scas
adc
jo
dec
popa
jno
push
pop
es
cmpxchg
mov
in
mov
xor
dec
icebp
lret
mov
inc
xor
mov
jmp
sbb
nop
mov
pop
imull
push
sub
jae
xor
pop
or
cmpsb
addl
mov
lods
jle
mov
outsl
or
insl
mov
imul
cmc
das
and
and
popl
xchg
jecxz
popa
loop
mov
adc
cmp
mov
lods
sti
popa
imul
add
jecxz
lcall
dec
adc
jecxz
test
and
std
and
jmp
iret
dec
cmp
ftst
jae
daa
jnp
jbe
mov
insl
sbb
xchg
pshufw
dec
pusha
stos
jp
arpl
frstor
in
aad
lds
pop
adc
jno
fiaddl
cmpsb
add
add
push
add
cmpl
inc
test
sub
mov
or
xchg
push
cmp
push
mov
loopne
pusha
jp
scas
imul
es
xor
aad
dec
cwtl
jne
negb
xor
dec
jle
aas
push
rclb
ret
popa
pushl
inc
test
add
adc
and
lcall
mov
push
popf
dec
movb
lcall
cli
sub
pushf
sbb
clc
adcl
addr16
ljmp
inc
jns
cmc
pop
mov
out
mov
mov
lahf
cmp
fs
mov
out
lods
cmc
add
ljmp
mov
es
in
pop
adc
jg
lods
shr
xor
or
or
sarl
jns
ret
cmp
mov
fidivs
xor
int
enter
push
sub
sarl
testb
xchg
jmp
subl
sub
or
jg
mov
inc
repz
sub
lods
jns
sahf
frstor
sbb
out
add
and
leave
sbb
jns
sub
clc
mov
es
sub
adc
shr
lods
sbb
iret
xchg
mov
cmp
pushf
xchg
push
gs
in
mov
insl
ljmp
adc
pop
out
sar
pop
in
daa
inc
ds
dec
mov
addr16
loop
orb
xchg
pop
iret
mov
xor
ljmp
fsubl
pop
jecxz
xor
push
cmp
inc
je
jge
mov
cld
icebp
sub
cmpsb
fwait
rcrl
mov
imull
es
lods
cmc
paddusb
mov
rorb
roll
pop
and
lahf
cmpsb
xorb
aam
mov
shr
cmovb
int
pushf
push
addb
jno
int3
or
scas
push
mov
or
lea
or
outsl
cmp
mov
pop
rcrl
repz
pop
hlt
dec
notb
or
movsl
dec
icebp
inc
js
ret
and
mov
inc
add
mov
xor
dec
xor
xchg
shrl
inc
jp
sarb
mov
cmc
sub
sbbl
je
jmp
cmp
pop
jae
out
mov
and
xchg
inc
fistpll
dec
test
mov
into
mov
adc
out
cld
imul
fsubrp
inc
ret
adc
or
lds
mov
jle
xchg
jecxz
icebp
popa
push
cmp
mov
inc
ljmp
xor
frstor
adc
push
mov
mov
test
mov
movsl
jl
push
xchg
and
add
jne
pop
popf
dec
enter
daa
mov
decb
insb
insb
fldt
pop
fidivs
xor
pop
insb
xor
nop
jg
outsl
std
xchg
movsb
and
mov
fdivrp
inc
into
inc
orb
fnstenv
adc
adc
jecxz
xor
das
inc
xchg
int3
or
cwtl
lahf
add
mov
mov
mov
add
aas
cmp
movsb
sub
iret
add
cld
popl
mov
cwtl
lfs
inc
addr16
push
es
repz
fimull
pop
ss
pusha
lret
mov
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
or
or
add
rorl
or
push
adc
jo
dec
jae
jp
sub
cs
stc
inc
imul
pushf
pushl
arpl
nop
int3
enter
push
movsb
push
push
mov
rcr
xor
stos
imul
inc
xchg
xchg
and
test
lahf
stc
out
xor
adc
data16
mov
cmpsl
sbbl
mov
shl
xor
fnstenv
sti
pop
mov
mov
dec
mov
xor
aaa
inc
divb
imul
sbb
and
or
jbe
dec
xor
inc
fistpl
nop
mov
rcll
inc
mov
scas
enter
sub
fprem
jno
aaa
bound
lahf
cltd
test
jne
xor
and
xchg
in
clc
into
push
jnp
or
mov
pop
imul
cmp
push
dec
adc
imul
nop
dec
pop
lret
pop
jne
inc
adc
rol
mov
scas
inc
idivb
test
lret
sub
push
sub
mov
fstp
mov
cmp
out
out
and
sbb
add
jo
mov
cmp
jecxz,pt
iret
xchg
dec
jno
mov
sbb
push
in
and
in
into
push
out
inc
mov
push
int3
int3
inc
mov
adc
aad
pop
insb
popf
sub
mov
lahf
push
push
fwait
es
dec
jg
stos
dec
push
pop
pop
lcall
adc
pop
pop
dec
jb
ss
bswap
test
lock
dec
cli
push
push
rcrb
sub
outsb
push
push
orl
and
pop
lds
adc
xchg
std
push
mov
mov
xchg
mov
xor
subl
out
mov
mov
adc
scas
xor
pusha
mov
xor
shl
pop
lock
lds
add
ja
repz
in
bound
ficomps
xor
xor
xchg
das
gs
mov
sahf
leave
push
jb
ds
ss
ss
pop
test
cli
push
mov
pop
cld
mov
js
insb
daa
mov
mov
sub
sbb
stos
cmpsb
jno
sub
test
or
sub
adc
sbb
lahf
mov
cmp
mov
cli
xchg
lods
mov
mov
pop
js
pushf
push
pop
xor
xchg
dec
add
adc
je
xchg
clc
jnp
mov
mov
addr16
jl
insl
les
enter
leave
push
ret
xor
sub
xchg
bound
aas
sahf
sub
mov
loope
push
cltd
xchg
push
rorb
sbb
xchg
fs
movsl
fwait
aam
iret
jno
arpl
ds
push
mov
cmpsb
icebp
dec
lret
or
mov
push
outsl
xchg
cld
cmp
sub
inc
addr16
mov
xor
mov
cmpsb
lret
sbb
push
adc
inc
adcb
mov
les
cmova
std
push
xchg
push
mov
or
daa
adc
cld
sub
or
mov
cld
push
daa
xor
mov
stos
mov
push
clc
sbb
cmp
add
dec
adc
jbe
dec
inc
dec
mov
xor
xchg
xor
or
scas
hlt
ljmp
pop
inc
jge
xor
mov
sub
iret
xor
dec
mov
clc
jae
cmp
dec
inc
mov
das
jecxz
sub
jmp
jnp
mov
or
and
jbe
gs
mov
test
push
pop
inc
inc
std
mov
pop
lods
sbbb
loopne
cmpsl
and
push
mov
xchg
loopne
sbbb
mov
int3
cmpsb
icebp
or
ss
popa
in
loop
dec
xchg
cmp
mov
dec
mov
imul
jbe
push
mov
pop
pushf
add
push
shl
out
test
lcall
enter
aad
push
or
pop
leave
add
push
outsb
pop
sbb
or
popa
jle
sub
aaa
aam
outsl
fidivs
arpl
dec
ret
data16
jl
lcall
daa
push
mov
jecxz
mov
fs
nop
jbe
imul
jns
fsubs
lret
cwtl
lcall
mov
mov
cs
ljmp
push
adcl
cmp
ds
es
mov
inc
xchg
inc
cld
mov
push
add
xchg
test
hlt
test
jbe
lret
sub
xchg
pop
mov
xorb
imul
sbb
and
push
imul
and
fidivrl
out
cmpsl
jmp
lcall
cmp
loope
xor
sub
cmp
sub
ret
rolb
jnp
sub
jle
adc
ss
jno
pop
inc
mov
loopne
inc
lret
mov
in
xor
fnsetpm(287
jmp
repnz
cwtl
mov
cltd
sbb
js
das
ret
inc
mov
fcoml
or
pop
test
dec
in
popf
sub
cltd
out
clc
jp
push
xchg
add
jb
jo
adc
pop
out
push
and
jecxz
mov
jle
lods
lock
popa
cs
adc
push
inc
adc
and
ret
leave
movsb
push
cmp
daa
mov
dec
jo
in
int
jge
les
jne
loope
insb
lds
fbstp
lock
inc
push
xchg
add
push
adc
popl
jp
push
or
cmp
addr16
repnz
mov
sub
push
nop
xor
aas
and
lea
or
loopne
adc
movsl
sbb
mov
stc
fstpt
in
or
seto
cmp
imul
pop
or
dec
bound
jns
lea
jl
inc
pushf
pop
mov
push
sti
sub
outsl
mov
sbb
jl
or
sti
dec
add
testl
mov
std
adc
fwait
scas
outsb
sahf
fwait
movsb
aaa
inc
scas
stos
sub
test
stos
out
es
and
movsl
loop
xchg
aad
mov
clc
xchg
mov
fbstp
nop
cmpsb
or
js
mov
popa
dec
push
aad
mov
inc
or
mov
inc
shlb
pop
jecxz
xchg
push
shl
xor
stos
add
xchg
push
iret
jae
out
pop
cmp
push
cmpsl
arpl
xor
das
or
mov
push
add
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
push
add
lds
add
fmuls
and
jae
add
int3
mov
mov
and
push
inc
pop
test
in
sub
mov
and
rcrb
jecxz
mov
pop
xchg
pcmpgtb
mov
adc
jp
mov
mov
out
cld
stos
jne
or
inc
jmp
fcoms
test
mov
stc
xchg
mov
cmp
adc
outsb
dec
popf
repnz
dec
shrl
mov
mov
addr16
cmp
sbb
xchg
shlb
cmp
jge
incl
repnz
and
popf
fldt
inc
xchg
shrl
inc
jnp
adcl
cld
sub
mov
mov
pextrw
mov
xor
inc
inc
adc
int
xchg
adc
sbb
cwtl
mov
lds
jmp
and
addb
into
and
inc
int
insb
lret
pop
mov
sub
sub
mov
jp
sbb
fs
js
inc
out
lcall
pop
add
insl
mov
lea
in
pop
mov
std
dec
pop
and
leave
fidivl
icebp
das
push
fcoms
and
xchg
or
cmc
push
jo
xchg
pop
mov
sbb
mov
adc
aas
lret
adc
push
add
cmp
and
sub
jp
sub
mov
mov
sub
sub
data16
imul
mov
popf
arpl
mov
aaa
pop
mov
and
addb
mulb
pop
xchg
push
mov
cmp
mov
in
adc
push
push
jbe
inc
push
or
int
daa
std
popa
into
fucompp
test
xchg
loope
bound
fwait
push
out
pop
stos
aam
in
into
mov
fadds
jb
in
or
or
ret
or
lock
jae
gs
movsb
loope
xchg
ret
pop
jmp
std
into
daa
push
test
cmpsl
pop
pushf
int
icebp
cmpsb
fcompl
sar
dec
and
repnz
xchg
inc
mov
or
jnp
pop
incb
jae
sti
sub
xor
fstpl
inc
push
lods
ss
lods
or
dec
add
loope
fistps
mov
je
icebp
mov
pop
fbstp
std
push
push
cwtl
or
ret
add
jmp
mov
add
jne
mov
and
lods
adc
ljmp
es
xor
shr
adc
xor
and
cwtl
shlb
xchg
call
std
mov
fdivl
mov
into
daa
inc
outsb
xchg
pop
mov
clc
fldl
mov
test
push
fwait
push
test
xchg
or
mov
cmp
cmpsl
fucom
addb
and
mov
jno
and
filds
add
pushf
xchg
adc
je
pop
hlt
and
fnsave
aam
ds
sbb
das
dec
sbb
xchg
sub
add
cld
jmp
inc
or
adc
out
lea
mov
jo
push
adc
pop
and
xor
imul
mov
cmp
pop
popa
push
ficompl
stos
dec
addr16
sub
mov
mov
mov
mov
das
or
lcall
daa
fistl
cmp
movl
gs
xchg
or
mov
add
xor
loop
test
inc
mov
sub
in
subl
or
jecxz
ljmp
xor
mov
movsb
stc
and
push
fucom
mov
mov
add
enter
stos
sub
mov
test
push
scas
lods
adc
pusha
lret
inc
sbb
add
or
ficoms
pop
xor
testb
mov
addl
cmpsb
sbb
das
dec
push
and
xchg
cmpb
cmp
or
jno
xor
adc
mov
or
mov
jb
ja
test
test
push
inc
xor
xchg
loope
push
clc
addr16
or
rorl
in
out
je
mov
daa
pop
inc
adc
fs
gs
adc
imul
notl
ja,pn
shll
sub
ds
mov
jge
movsl
add
cmp
es
out
push
outsl
cmp
jno
aaa
inc
cmpsl
imull
jb
inc
mov
into
lcall
rorb
mov
sub
cli
push
pop
jb
stos
lods
push
pop
repnz
aam
sbb
jecxz
pop
clc
inc
fdivrl
pusha
mov
fcmove
jecxz
mov
js
jmp
mov
xlat
fnstsw
mov
scas
shll
dec
pop
add
inc
loopne
aaa
push
ss
lea
or
ljmp
inc
xor
xchg
add
stc
sbb
movsb
mov
push
es
xchg
in
and
pop
push
in
or
mov
sbbb
mov
jae
pop
dec
ss
ret
sahf
xlat
addr16
cmp
loope
ljmp
and
push
cmp
out
adc
rclb
xchg
enter
data16
xchg
cld
add
bound
aam
into
or
inc
les
mov
jmp
mov
and
test
movsb
jecxz
sbb
stos
movl
into
out
les
out
sub
das
das
iret
xor
push
sti
inc
or
call
pushf
call
and
je
popa
sub
mov
aad
fstps
cld
iret
cli
lret
dec
cmp
mov
mov
xor
je
jmp
xchg
inc
push
xrelease
xchg
out
aad
rcll
out
mov
insb
out
jg
inc
shr
std
stos
hlt
flds
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
add
testl
mov
pop
xchg
push
mov
addb
andl
push
or
cmc
scas
int3
dec
dec
clc
cmpsb
dec
sbb
ret
xor
xor
cwtl
jmp
mov
xchg
jmp
mov
scas
mov
fcoms
popa
arpl
dec
popf
cmpb
mov
lea
dec
push
inc
sub
imul
in
shr
mov
add
inc
daa
fucomip
mov
imul
clc
jp
sub
xchg
mov
add
sub
mov
mov
pusha
mov
lock
pop
push
mov
jno
sub
scas
data16
iret
and
aad
hlt
std
sti
dec
gs
popf
fxam
imul
mov
cmpsb
movsb
aaa
scas
add
stc
insl
adcb
fcoml
ja
xchg
nop
in
add
push
jnp
mov
mov
jns
pop
aam
push
dec
outsl
adc
jo
insb
mov
test
or
dec
mov
mov
mov
in
and
popf
int3
mov
sub
jl
and
push
imul
bound
jbe,pn
xor
hlt
inc
cmp
gs
jnp
scas
imul
mov
ret
or
pushf
mov
mov
add
xor
mov
xlat
in
test
or
cs
pop
ds
cli
push
subl
pop
cmp
ret
in
cmp
push
aam
push
loope
in
enter
fs
and
jno
lcall
sti
jnp
in
mov
push
in
fisubl
pop
in
popa
push
mov
sub
sub
push
adc
in
mov
add
and
aaa
push
daa
mov
dec
dec
pusha
repz
int
jmp
mov
inc
daa
and
sbb
push
jg
outsl
cld
jg
insl
and
jae
stc
xchg
fildl
outsl
dec
daa
cmp
pop
mov
aad
and
dec
xchg
leave
ljmp
je
shll
mov
loopne
dec
mov
mov
jmp
scas
xchg
fidivrl
mov
cs
lock
sbb
cmp
imul
dec
mov
ljmp
xor
cs
icebp
pop
push
pop
fmuls
aas
shlb
test
ss
or
mov
sub
xchg
into
inc
in
xor
cmp
jmp
inc
out
scas
fcoms
dec
add
stos
mov
iret
sbb
jb
cld
fdivp
lret
jno
ret
adc
sub
pop
out
cltd
xchg
pop
cmp
testl
insb
es
ret
sbb
pop
imul
inc
sbb
and
fnstsw
dec
mov
aam
lret
jo
bound
cmpsb
add
fcoms
mov
popa
insb
or
sbb
mov
mov
xor
popf
dec
inc
dec
enter
inc
cltd
push
dec
fs
mov
popa
push
mov
xlat
ljmp
sahf
mov
jl
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
sub
add
jb
add
xor
xorb
xchg
outsb
fnsave
cwtl
pop
push
loope
pop
nop
cmpl
movsl
and
outsl
jno
repz
pop
add
dec
and
push
lahf
in
push
push
les
pop
rorb
mov
movl
xchg
lods
mov
push
lret
dec
push
test
into
push
mov
xor
out
mov
xchg
fimull
lret
mov
jecxz
sub
push
pop
es
loopne
stos
mov
cmpsb
addr16
dec
mov
inc
dec
add
rcr
cmp
pop
dec
add
and
dec
and
mov
insb
mov
loop
mov
cmp
mov
pop
ss
push
test
mov
mov
mov
mul
push
xchg
inc
mov
in
mov
mov
out
mov
fldcw
outsb
ja
test
lea
mov
xchg
sti
clc
ds
int
sahf
push
pop
sub
sub
jmp
push
push
mov
push
push
dec
fadd
cs
sbb
mov
push
ja
sti
js
loopne
inc
xor
sub
rcll
lret
leave
lcall
xlat
push
in
dec
jns
push
jg
rclb
sub
dec
int
inc
or
jmp
clc
orps
push
out
push
xchg
in
rcll
imul
ljmp
mov
cmp
dec
pop
pushf
inc
icebp
mov
imulb
or
jmp
cmp
pop
imul
test
cwtl
arpl
mov
xor
stos
dec
mov
pop
cmp
mov
mov
or
out
movsb
pop
rcl
test
mov
aas
negb
lods
pop
pop
repnz
mov
sub
adc
push
pop
in
mov
fs
push
jnp
or
cmpb
or
mov
shlb
jl
fldenv
jnp
sub
xor
or
and
inc
icebp
ret
or
mov
sbb
out
push
cmpsl
mov
inc
mov
and
je
or
shrl
insl
fs
scas
pop
ljmp
adc
mov
mov
pop
inc
in
loop
test
lret
pop
or
mov
push
cmpsb
jmp
jecxz
mov
jl
sti
shll
xchg
shrb
add
inc
sub
or
outsl
loope
sub
fdivrs
movsl
push
jl
ret
arpl
push
int
div
dec
stc
mov
in
lret
ficoml
ja
and
pop
add
jno
mov
fmull
push
xor
outsl
pop
dec
out
push
push
dec
fbld
movsb
ds
or
sbb
add
test
jmp
jns
jbe
mov
in
xor
dec
push
scas
ficomps
test
mov
sub
pop
cltd
int
bound
hlt
movsl
out
fmull
adc
jecxz
or
cmp
adc
cmp
popl
cmp
int3
sub
test
in
aad
imul
repz
jp
xlat
and
adc
pop
or
and
test
notl
loope
imul
cmp
in
pop
push
loopne
nop
dec
xchg
sbbl
jmp
mov
bound
gs
jb
sub
pop
jmp
jnp
aam
out
orb
arpl
call
or
xchg
jbe
mov
adc
pop
jbe
mov
cld
out
mov
or
pop
imul
bnd
insb
stos
dec
ret
mov
mov
int
sub
push
jne
or
mov
shrb
js,pn
packsswb
fldl
lds
ret
jmp
cmpsl
or
das
adc
loop
stc
inc
sub
pop
sar
in
sub
mov
ret
loope
pop
ds
lods
rcrb
fdivrl
or
xor
outsl
not
dec
les
loopne
sbb
adc
cmp
negb
iret
loop
mov
or
lahf
inc
pusha
frstor
jnp
mov
xchg
xlat
ret
imul
or
dec
xor
xor
xchg
jmp
rcrl
es
cmp
or
outsl
dec
out
mov
or
dec
into
xor
into
scas
movsl
jl
lcall
insl
and
jne
test
andl
mov
push
mov
xor
data16
cs
inc
sti
xor
add
xor
int3
sub
lcall
jae
out
adc
insb
iret
pop
dec
push
xorb
add
mov
jle
imul
push
addr16
in
popf
in
xor
popa
inc
push
outsl
mov
mov
xchg
lods
dec
lret
push
das
js
fsubrs
cmp
addl
push
test
mov
add
push
xor
sub
mov
xchg
mov
mov
sub
jnp
outsl
and
cld
in
jmp
out
xor
out
ror
inc
xchg
shr
push
loope
mov
movsb
or
mov
jmp
or
pop
das
sti
sub
mov
or
inc
pusha
mov
mov
sbb
sbb
nop
mov
lods
cmp
xor
bound
inc
sub
push
mov
mov
add
jg
xchg
pop
fcoms
dec
pop
les
outsl
or
adc
push
push
ficomps
imul
insb
mov
and
data16
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
mov
add
pop
add
add
mov
movsl
and
lods
scas
ret
jo
mov
shr
mov
fs
mov
dec
ror
je
dec
cltd
pusha
jne
xor
sub
aaa
and
lcall
jno
push
jg
clc
bound
iret
das
mov
sar
fwait
sbb
push
mov
or
data16
xchg
jmp
mov
lret
js
pop
rcrb
jns
push
dec
testl
call
inc
fildl
sbb
mov
loope
cmpsl
mov
test
push
sub
or
mov
adc
lds
sbb
sub
push
xchg
enter
mov
jns
lret
or
fwait
into
push
aaa
push
lahf
hlt
pop
sbb
cltd
pusha
add
bound
lds
inc
fcoml
lea
scas
cmp
mov
insl
paddw
mov
sub
adc
ret
cwtl
add
push
push
in
imul
and
loop
idiv
lcall
mov
push
mov
add
int3
mov
es
mov
adc
xchg
add
push
scas
stos
adc
mov
pop
imul
test
jl
push
xchg
out
inc
jle
jl
jbe
cmp
push
repnz
jge
inc
pop
pop
adc
jbe
sbb
popa
cmovl
adc
xor
fsub
and
in
mov
jbe
add
dec
test
lds
dec
shld
jbe
lret
fisttps
idivl
stos
jecxz
loop
pop
sub
les
add
mov
push
in
lea
cmp
cmc
mov
mov
rorl
add
popa
lods
cmp
inc
pop
loopne
arpl
nop
or
pop
adcb
outsb
das
inc
sub
inc
push
push
xor
mov
push
sbb
push
cld
scas
adc
aad
cmp
out
int3
sub
lds
lods
mov
call
cmpsl
cmp
fcmovne
adc
adc
stc
insb
dec
push
scas
outsl
cli
cwtl
cmp
lock
dec
je
inc
idiv
int
std
push
pop
jl
cli
xor
shlb
jae
pop
jno
dec
lahf
ret
or
inc
mov
lret
scas
jge
addb
or
lods
loop
incl
jnp
btr
mov
dec
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
add
add
add
add
sbb
bnd
scas
out
int3
cmp
fsub
mov
movsl
arpl
lock
mov
xchg
jb,pn
cmp
addb
fsubrs
dec
shrb
je
pop
mov
xchg
jp
push
and
aad
in
and
lds
sar
es
push
sub
in
insl
inc
push
out
cmp
inc
repnz
es
adc
adc
xor
xchg
lds
lcall
jp
or
test
ret
fsub
push
push
jmp
xor
leave
fwait
adc
mov
iret
and
mov
add
cmpsl
mov
xchg
fwait
jnp
fcmovnu
inc
subb
cmp
test
ja
sbb
fdivr
sub
push
mov
add
cmp
push
inc
pop
popa
xchg
test
pop
xchg
or
shlb
data16
cmp
mov
push
subb
and
push
jp
es
and
inc
jbe
aaa
inc
inc
lcall
jb
mov
cmpsl
lahf
ja
pop
aaa
jle
jo
mov
dec
mov
arpl
in
data16
cld
test
scas
jmp
bound
mov
ja
test
cmp
sarb
mov
out
sarl
cmpsl
int
shlb
xlat
push
inc
mov
movsl
icebp
lret
inc
mov
aaa
dec
sub
loopne
leave
inc
sbb
cli
je
lods
repnz
cld
fst
or
hlt
jecxz
jbe
ds
and
in
sahf
icebp
fidivrs
and
clc
inc
int
stc
in
stos
fwait
inc
dec
insb
inc
cwtl
xchg
sti
inc
mov
addr16
mov
repz
ja
push
or
push
and
mov
push
lock
daa
pop
push
jae
pop
divl
inc
cmp
or
xor
push
in
mov
sub
scas
mov
cmp
dec
shl
sbb
sbb
or
mov
sbb
or
cld
adc
fisttpll
inc
cmp
xchg
cmp
mov
jecxz
jae
enter
imul
movsb
mov
jle
push
mov
or
imul
push
push
pusha
js
sti
call
xorb
or
mov
loope
and
jmp
or
out
adc
sti
outsl
in
int3
jl
stc
cltd
and
add
xlat
inc
add
mov
arpl
int3
cmp
les
lock
cmpsl
nop
test
insl
fnstenv
jp
mov
mov
add
xor
adc
xchg
push
push
ds
std
fldenv
mov
cmc
push
loopne
lret
xor
mov
adcl
adc
xor
enter
and
xor
add
insb
push
jge
fbstp
icebp
jno
fwait
pushf
arpl
cmp
mov
jle
inc
pop
filds
imul
cmp
inc
and
cli
mov
lcall
jle
inc
rolb
adc
mul
jp
add
pushf
inc
xchg
lock
xor
add
outsl
filds
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
add
add
add
je
call
dec
inc
mov
cmp
push
xchg
jne
push
fiadds
imul
cmpsl
ja
mov
hlt
ljmp
imul
inc
in
cmp
dec
repz
stc
int
mov
fidivl
xor
stc
or
push
adc
cmc
jmp
sti
xor
sbb
pushf
push
pop
jbe
lods
jle
pushf
inc
mov
adc
jb
jmp
fdivp
add
test
adc
inc
fldl
loope
add
call
loop
shll
je
cmpsb
or
bswap
cmp
xchg
push
xor
xor
and
inc
mov
jl
test
push
jmp
iret
jbe
jnp
and
lret
in
xchg
dec
dec
cmp
js
jp
cmpsb
lods
mov
in
ja
jbe
pop
mov
dec
dec
cmpsb
daa
out
js
shlb
pop
push
push
ret
cs
test
inc
push
jp
cld
out
aad
pop
jl
repnz
push
inc
inc
ss
inc
jecxz
std
ss
mov
push
pop
adc
scas
into
call
flds
sbb
insb
cmp
jge
add
cmp
out
lcall
jp
sbb
sbb
subb
dec
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
add
repnz
add
in
sbb
xor
sbb
ret
ja
fcomip
out
fcoms
xchg
fmull
shlb
xchg
shrb
bound
xor
push
jnp
repnz
movl
pop
lret
push
dec
jl
mov
xor
sbb
lret
jne
mov
jbe
cmpsl
pop
mov
aam
pop
jecxz
pop
xchg
lds
or
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
add
add
add
add
pusha
dec
xor
rcrl
cmp
nop
or
enter
cmp
add
xchg
push
sahf
push
repnz
mov
sahf
or
pop
push
lods
mov
mov
pop
stos
adc
pop
sarl
add
adc
dec
movsb
movsl
mov
and
mov
add
fdivs
into
ret
sbb
cmp
sub
movsl
mov
arpl
cli
or
out
dec
test
sbbb
inc
mov
outsl
sbb
in
add
addr16
mov
cmp
jmp
and
mov
xchg
fnstcw
jo
es
mov
cld
add
fstpt
ljmp
fdivrl
inc
or
inc
xchg
arpl
imull
xchg
cltd
or
fstps
jmp
rcr
push
int3
mov
sbb
in
mov
out
and
push
iret
dec
lods
lods
cld
jo
movsb
dec
sbb
inc
sub
aas
mov
mov
pop
in
idivb
lods
add
push
psubd
cmp
repz
ljmp
jb,pn
add
push
repz
leave
dec
jbe
bound
leave
arpl
xor
ss
mov
add
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
push
add
dec
push
add
mov
and
aad
in
test
int3
pop
xchg
push
jecxz
fs
aas
std
dec
jmp
mov
mov
dec
pop
shrl
push
mov
sbb
imul
sub
xchg
add
pop
sbb
sub
dec
add
jmp
in
test
dec
mov
fwait
inc
jno
ret
sbb
jnp
add
ds
ss
mov
jp
xchg
mov
pop
push
inc
cli
sbb
push
cmpb
clc
lahf
rcrl
mov
jb
sarb
jns
push
push
push
inc
pop
add
es
inc
stos
xor
std
ficoms
enter
xchg
dec
push
fsts
rcl
aaa
or
imul
push
jecxz
ja
sub
jnp
and
mov
jo
adc
adc
and
mov
fsubrl
dec
rol
mov
loop
mov
or
mov
lret
inc
cwtl
data16
loop
xchg
fmuls
in
jmp
ret
sarb
fsubrl
jge
inc
loopne
movsb
mov
mov
aad
lahf
and
add
cmp
cld
fadd
lahf
sbb
stc
cmp
imul
popf
data16
leave
push
xchg
dec
jl
pushf
mov
jnp
push
lret
fnstenv
test
jmp
mov
xchg
or
push
icebp
stc
push
or
jecxz
test
push
jg
cmc
mov
mov
les
mov
dec
or
and
pop
je
ficomps
jge
stos
hlt
nop
dec
jmp
andb
cmpsl
addr16
out
jmp
ja
popa
testl
loop
xor
jl
insl
enter
loope
rcr
jmp
and
mov
or
int3
ljmp
sbb
aaa
jle
add
adc
xor
fwait
das
xor
cmc
xor
sbb
cmpl
incb
mov
int3
imul
leave
dec
lock
out
xchg
pop
xor
rcrb
popa
movsb
mov
jmp
cltd
inc
ja
cmpsl
push
mov
std
sub
jp
enter
dec
fsubrs
cld
dec
mov
adc
pusha
sub
xor
inc
or
adc
inc
into
xchg
mov
push
push
in
pop
and
jns
pop
cltd
fldenv
adc
or
scas
aas
mov
jg
fisttpll
or
in
fldcw
call
or
cmp
pop
add
or
arpl
mov
clc
mov
sbb
aad
mov
daa
add
aas
pop
pop
mov
and
lock
lahf
mov
inc
push
inc
and
and
sub
xchg
fwait
cmp
sub
xchg
inc
addr16
push
cli
aas
pop
ds
sarb
mov
jbe
sbb
cli
mov
ljmp
cmp
loope
iret
pop
addl
cs
cltd
ja
cmc
aas
dec
mov
mulb
sbb
sbb
sarl
lds
jge
jo
out
int
pop
adcl
lds
insl
xchg
push
cmp
xchg
popa
cmp
ja
shlb
mov
jecxz
mov
jl
outsb
adc
fisubs
lahf
xchg
inc
ficomps
out
add
jnp
mov
add
xchg
cld
dec
loopne
add
int3
in
data16
sbb
inc
xlat
mov
mov
sub
add
or
push
stc
daa
jnp
mov
mov
scas
pop
pop
fistps
lcall
fwait
movl
dec
xlat
mov
ljmp
ja
in
cwtl
mov
mov
hlt
mov
fcmovu
pop
push
add
addr16
adc
arpl
int
ficoms
mov
in
xchg
sti
adc
mov
dec
dec
mov
fstpt
push
dec
sub
xor
push
pop
enter
mov
push
or
out
enter
in
jmp
xor
fcoml
icebp
inc
loop
mov
jns
jne
fldl
imul
jo
roll
cltd
shll
inc
rorb
push
mov
hlt
addr16
pop
sbb
nop
out
jno
sbb
sbbb
sub
mov
jo
push
gs
push
stc
and
and
out
xor
push
xchg
insl
shll
mov
ret
mov
fldl
mov
sarl
sub
adc
mov
fsubrl
mov
loop
shrl
mov
inc
add
fiaddl
out
xchg
pop
xor
lock
inc
out
cmpl
xor
leave
sbb
iret
orb
cmc
fldt
mov
aaa
pop
jo
mov
adc
pop
lea
mov
mov
cwtl
rcrl
or
and
jp
das
mov
insb
shrb
call
test
stos
mov
cmp
and
dec
jnp
xchg
sti
lock
cmp
fisttpll
xchg
lods
test
push
mov
jnp
add
xchg
test
sbb
jb
aad
push
mov
push
jg
mov
or
cli
fisttpl
cld
fidivl
stos
inc
or
inc
outsb
stc
pop
mov
scas
mov
xlat
stos
ja
mov
int3
fldcw
push
xor
ss
in
jle
repz
mov
ret
lcall
add
pop
es
incl
sub
sbb
push
ljmp
mov
mov
dec
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
pop
add
inc
or
add
sahf
push
jnp
xor
jo
lret
mov
xchg
clc
sarl
add
rclb
sub
xchg
push
inc
pop
add
out
push
pop
iret
sti
int
push
insl
addr16
inc
mov
add
lahf
inc
in
dec
movsl
push
loope
int
adc
mov
xorl
adc
flds
jns
push
aaa
addb
mov
out
mov
xor
outsl
pop
xchg
mov
sbb
ss
orb
jg
and
xchg
stc
mov
shl
pop
xor
push
jb
mov
test
mov
insl
in
aad
inc
or
push
les
adc
inc
adc
pop
or
pop
imul
push
bound
sbb
inc
mov
push
inc
push
push
xlat
and
fwait
push
xchg
inc
jns
ja
inc
fildll
rcr
mov
mov
or
aad
inc
clc
dec
xchg
adc
xchg
jbe
cmpb
mov
std
mov
dec
testb
mull
xchg
sub
xchg
pop
cmc
negl
fdivr
rolb
mov
insb
cmp
loope
sbb
sbb
insl
mov
sbb
dec
push
jo
jnp
mov
xchg
sbb
pop
jg
inc
nop
cmp
jbe
xchg
sarb
cli
out
fcmovb
adc
addl
and
mov
xor
cmp
insb
lret
hlt
shlb
mov
pop
push
sub
mov
mov
sub
outsb
push
scas
add
pop
xor
dec
lock
xchg
xchg
movl
js
in
ja
xor
adc
cld
mov
insl
mov
dec
mov
cmpl
xchg
int3
roll
out
adc
test
in
mov
jge
dec
icebp
sahf
add
xor
jnp
daa
aaa
lods
adc
add
push
sub
aaa
iret
xchg
and
stos
iret
jo
js
imul
push
mov
push
push
mov
addl
xor
mov
idivl
mov
cmp
sti
aam
out
adc
in
out
bound
and
adc
stc
fcomps
test
nop
dec
aad
aaa
fdivl
rcr
add
mov
pushf
sbb
push
out
test
jg
mov
gs
sbb
sti
jo
aas
mov
test
adc
les
nop
adc
call
jle
fadd
xor
xor
jb
push
add
fdivl
into
sub
jmp
xchg
jbe
add
jbe
clc
call
add
cmp
lcall
cwtl
js
pop
cmp
mov
mov
sbb
loope
mov
pusha
or
je
xchg
sbb
mov
outsb
sbb
push
cmc
sbb
jecxz
and
xchg
cli
jmp
and
mov
out
jle
and
cmp
lret
inc
push
cmp
call
lods
push
iret
xor
xor
js,pt
xchg
dec
cmp
or
comiss
popa
sti
add
mov
adc
rclb
sbb
pushf
pop
mov
jg,pt
push
into
push
or
fcomp
sub
mov
js
xchg
mov
sub
call
test
ljmp
sub
or
mov
cmc
outsb
xor
inc
jg
lcall
movsl
imulb
mov
xchg
daa
mov
push
jl
test
xchg
mov
dec
sarl
cmp
mov
icebp
jge
out
fsubr
jae
stos
dec
ret
or
or
adc
jge
sub
jge
mov
imul
je
cltd
push
mov
jbe
sub
pop
lods
mov
fucomp
lods
cmpsb
push
aad
dec
xchg
cld
mov
mov
rcrb
in
jae
lea
push
fists
rol
and
leave
lock
sub
dec
add
jg
nop
jo
shrl
push
jb
or
arpl
push
jp
pop
std
fwait
sbb
push
outsb
dec
out
add
cmp
cwtl
mov
jns
ljmp
cmp
mov
fldl
sub
stc
cmp
pop
jb
jbe
out
or
sub
inc
insl
out
in
fisttps
pop
pop
icebp
add
push
cmc
mov
mov
insb
cs
sbb
jmp
inc
ror
inc
add
lahf
das
add
loope
pop
sub
jge
add
or
push
test
ljmp
js
pop
jnp
pop
mov
sbb
imul
sbb
add
adc
daa
lea
push
jecxz
jge
dec
stc
aaa
pushf
ss
lcall
cmp
hlt
jne
arpl
xchg
and
push
mov
je
xor
sti
and
std
std
mov
and
lret
adc
insb
fs
loop
or
mov
cs
cmc
push
dec
pop
inc
mov
rcrl
ret
and
lret
aad
cmpsb
rol
cmp
jne
mov
mov
test
jg
add
cwtl
incl
jp
jg
cmp
pop
lret
cmp
sub
or
fcomps
jmp
aaa
sbb
mov
bound
bound
imul
adcl
push
andb
pop
sarl
push
xlat
notb
mov
aas
sarb
jbe
jmp
inc
test
xor
cmp
push
jp
mov
mov
cmpsl
hlt
sub
xlat
popf
std
vaddps
gs
mov
pop
addl
fmull
push
jnp
out
or
test
push
cmp
jg
dec
and
in
push
stos
and
sub
xchg
fistpll
mov
mov
inc
dec
sub
inc
aad
sbb
or
sbb
outsl
adc
adc
and
mov
test
test
xchg
ficoml
arpl
pop
movsl
ret
jmp
fnstsw
mov
rclb
lock
repz
mov
fwait
adc
sub
in
sbb
std
jl
cmp
cmp
fildl
add
sti
mov
push
orb
in
jno
add
loopne
sub
mov
mov
mov
pop
imul
hlt
jo
or
ss
das
xor
ljmp
sti
out
cmp
mov
pushf
jnp
sub
xor
sahf
das
test
ffreep
xchg
dec
xor
push
cmp
rorl
add
mov
adc
xchg
add
or
sti
push
ja
add
pop
mov
mov
and
icebp
mov
push
lock
cmp
sbbb
pop
cltd
stc
sub
push
mov
pop
sahf
jge
daa
and
sti
fidivl
mov
test
popa
shl
jbe
mov
or
mov
hlt
out
mov
imul
push
mov
inc
iret
pop
push
mov
sbbl
addr16
adc
mov
sahf
popa
shrl
pop
iret
adc
incl
lret
jmp
push
stos
add
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
add
mov
rorl
mov
movsl
roll
adc
lcall
shrl
push
xchg
leave
mov
pop
adc
sbb
sbb
xor
mov
sub
cmpsl
pop
fsubrs
lods
jge
cmp
inc
pop
push
jne
inc
and
cmc
call
inc
push
xor
push
pop
mov
cwtl
popf
pop
lahf
adc
gs
aam
jbe
sbb
mov
mov
sbb
push
cwtl
jnp
pop
add
xbegin
mov
lahf
loopne
data16
xor
xchg
add
insb
ljmp
testb
xchg
sarl
xchg
test
nop
mov
xchg
jae
out
cmp
mov
js
data16
bound
pushf
mov
es
inc
in
mov
push
pop
pusha
cwtl
xor
subb
repz
xor
scas
in
xor
adc
mov
sub
xchg
nop
int
test
fildll
std
mov
mov
sbb
mov
or
js
or
out
xchg
cmp
inc
imul
or
ljmp
push
dec
pop
push
cwtl
cmp
sbb
pop
test
add
jae
repnz
into
addr16
mov
fwait
mov
xchg
not
repnz
out
aad
scas
daa
and
pop
int3
ss
xchg
cmc
lret
push
jge
aas
mov
inc
sub
xchg
xchg
cltd
jmp
int3
cmc
fidivrl
arpl
cmpsb
scas
repz
xor
mov
pop
jb
xchg
sbb
shrb
jne
andl
in
int
ret
in
cs
fadd
xchg
cmpsb
fmull
xor
movsb
or
xlat
clc
nop
imul
and
test
jns
les
and
out
dec
jle
sbb
adc
fwait
int3
imull
cmpl
push
or
out
mov
push
data16
inc
popa
mov
pushf
sbb
iret
fstps
and
sub
dec
cmp
cmpsl
mov
nop
xlat
jno
ja
cli
rcrb
add
adc
out
fldcw
sub
mov
pop
mov
in
mov
lahf
popf
div
out
adc
cwtl
loop
fsubr
jo
lods
mov
mov
enter
dec
push
sbb
imulb
into
out
push
pop
pop
out
adc
iret
out
scas
dec
mov
or
dec
dec
pusha
sbb
mov
shll
pop
in
xchg
fsts
inc
ss
lods
sbb
sahf
lods
sbb
mov
mov
xlat
dec
dec
js
lds
xor
push
into
sub
sub
mov
xor
data16
pop
call
mov
out
xor
mov
shl
dec
mov
or
mov
mov
sub
adc
stos
xchg
subb
sti
sahf
dec
lds
add
sub
push
out
gs
jns
or
mov
rclw
imul
int3
imul
enter
cmp
shrl
and
pop
and
mov
ja
adc
aam
es
fisubl
and
rolb
adc
jl
jg
jmp
imul
dec
rclb
adc
jno
sub
ja
push
xchg
mov
sbb
pop
push
mov
jle
andb
subl
stos
mov
outsl
push
mov
add
fiadds
cmp
popa
hlt
pop
loop
fdivp
cld
jg
adc
adc
mov
in
inc
sti
not
dec
xor
mov
aam
insl
dec
out
mov
out
iret
insb
mov
movsb
dec
jb
pop
stos
data16
test
mov
dec
cmp
dec
in
stos
dec
daa
enter
sub
adc
pop
dec
mov
adc
cltd
add
mov
or
call
nop
xor
push
ljmp
fbstp
jg
iret
clc
mov
pop
fisubrs
std
icebp
and
jbe
fcomps
xchg
movsl
repz
or
mov
cmp
push
pop
add
push
cmp
in
jne
test
xchg
aad
mov
push
adc
sti
lods
in
seto
inc
mov
and
mov
jmp
mov
jo
xlat
sub
addr16
pop
pop
addr16
xchg
insb
and
xchg
imul
cmpsl
adc
ds
into
lahf
adc
xchg
inc
or
arpl
push
inc
loop
pop
mov
sub
adcl
push
outsb
cmp
adc
cmp
addr16
jno
int
mov
ror
add
jno
ljmp
push
sbb
dec
inc
pop
orl
filds
int3
cmp
mov
ja
jecxz
inc
sbb
xchg
in
sti
inc
sbb
ret
sub
js
cmp
xchg
test
sbb
mov
mov
mov
mov
negb
scas
pop
ret
ss
mov
fsub
fisubrl
repnz
pop
cmpsb
filds
loopne
add
push
loope
pop
add
mov
cmpsb
mov
fcompl
aaa
pop
push
jmp
imul
daa
or
sti
ds
pop
cmp
insl
cmp
push
sbb
and
cmpsl
mov
inc
ficompl
lret
fidivrl
push
cmc
push
mov
jmp
pushf
xchg
and
repnz
jle
inc
sbb
cmc
sahf
xchg
mov
in
adc
sub
sub
or
scas
jb
xlat
mov
pop
push
jl
addb
xor
mov
xchg
popf
dec
pop
repz
test
shlb
cmp
jl
jg
test
xor
jg
jno
popa
dec
hlt
xchg
add
mov
out
pop
out
fidivl
push
int
test
arpl
or
xchg
dec
stos
call
pop
dec
arpl
in
xchg
popa
jp
lret
sbb
push
jle
addl
or
add
ret
cld
movsl
xchg
xchg
jmp
cmp
ret
jp
xlat
pop
shll
jne
xchg
inc
add
cs
int
jae
inc
andb
mov
jno
mov
jl
stos
jecxz
inc
notb
mov
push
out
mov
fisttpl
xchg
js
push
popa
test
fnsave
insb
cwtl
pop
xchg
outsb
mov
xor
inc
xor
aas
addr16
mov
mov
or
mov
sti
cltd
clc
popf
in
jmp
and
cld
lcall
dec
xor
and
add
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
arpl
add
push
add
data16
je
outsl
push
ljmp
sbb
loope
fstpt
sbb
cmpl
out
or
pop
inc
or
test
mov
mov
stos
xor
sub
std
nop
aad
or
pop
imul
mov
fldt
int
dec
push
fadds
mov
and
push
push
out
add
jns
cli
add
xchg
sbb
add
popf
lcall
sub
outsl
jbe
lock
fdivl
daa
hlt
sarl
je
mov
push
filds
mov
and
and
push
jns
in
sti
push
push
ja
add
pop
sti
jmp
out
leave
cltd
lock
ljmp
and
outsb
adc
sbb
repnz
sar
and
loop
fldenv
sarl
lret
mov
ds
cs
mov
cmpsb
push
add
sbb
mov
sub
push
inc
cmp
out
or
shll
pop
lock
andb
je
sub
jb
imul
imul
xchg
in
jge
pop
scas
xchg
fcmovu
in
pop
das
nop
je
test
gs
out
in
push
into
mov
mov
inc
xor
mov
addb
std
pop
sbb
lret
dec
xor
orl
cmpsb
outsb
push
and
in
ficoml
dec
rol
and
int
insl
and
leave
cmp
pop
and
sbb
enter
mov
into
xchg
scas
jo
fs
cmp
pop
sarb
mov
pop
xor
xor
push
inc
dec
negb
shrb
daa
clc
ss
test
nop
xor
cs
stc
pop
enter
aaa
cmc
int3
fldl
sub
idivl
mov
jmp
mov
and
jnp
notl
inc
and
or
fs
test
xchg
mov
sub
adc
push
cli
pusha
push
mov
push
imul
lret
pop
pushfw
and
popf
push
pusha
aad
cmp
cmp
cs
inc
lret
ffree
push
jp
fisttpl
xchg
mov
inc
rcl
jmp
imul
add
loop
sbb
aam
pop
jle
fdiv
in
push
popa
enter
pushf
or
iret
add
and
rclb
xor
dec
outsb
mov
int3
addr16
loop
mov
lds
add
out
cmpsb
jl
or
and
xchg
nop
imul
and
pop
or
into
lods
test
xor
dec
push
push
dec
cltd
jle
sub
stos
test
or
sbb
mov
push
cltd
loop
jp
sbb
push
fistpll
xchg
imul
pop
mull
mov
pushaw
rcll
xor
dec
sub
cmp
mov
jnp
pop
sbb
cmp
rcl
xchg
test
gs
gs
or
scas
popa
cmpsl
xor
mov
sub
ret
out
jge
jmp
das
sti
mov
out
push
shrl
cmp
xor
cmc
sub
pushf
mov
imul
mov
push
idivb
popa
mov
jo
lea
push
xchg
fisttpll
jmp
and
jnp
mov
jno,pn
rorl
push
lret
movsl
jle
adc
fs
mov
pop
insl
addr16
mov
sbb
mov
inc
imul
xor
dec
rolb
loope
fistpll
je
push
mov
fildl
sub
bound
in
call
out
gs
in
jle
sahf
cmp
mov
rcl
in
or
and
add
loopne
ss
push
pusha
cltd
push
mov
bound
addr16
mov
push
xchg
cwtl
aas
imul
ja
inc
mov
sbb
cmp
cli
jne
push
add
pop
mov
in
lea
outsb
mov
cwtl
cwtl
xchg
xchg
push
arpl
pop
jnp
mov
mov
add
cmc
xchg
sbb
add
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xchg
add
add
pop
sbb
lahf
rcrb
lret
sub
mov
inc
shll
dec
lcall
fucomi
outsl
adc
call
sbb
xchg
frndint
mov
mov
nop
fsts
jnp
sub
in
adc
jne,pn
mov
jge
pop
mov
ds
add
mov
daa
lock
pop
arpl
xchg
into
sbb
mov
mov
lods
xchg
dec
mov
jns
ficompl
repz
pusha
mov
adc
icebp
aaa
cwtl
jb
or
push
ljmp
enter
mov
jmp
and
sbb
es
shlb
popl
lret
pop
fstpl
scas
cmpsl
aas
ss
cmp
xchg
inc
dec
and
sub
xor
aad
fstpl
jno
orl
fdivs
cmpsb
shlb
out
fs
mov
loope
sbb
out
data16
xchg
jge
jg
dec
xor
inc
jl
imul
jne
jp
push
sbb
mov
dec
stos
addb
insb
sbb
inc
and
cmpsl
mov
arpl
sub
or
pop
xchg
clc
pop
repz
and
arpl
cmpsb
pop
sahf
pop
rorl
sub
xor
sbb
pop
add
insl
loope
lods
add
je
sub
sub
sahf
pop
mov
xor
inc
mov
dec
iret
sbb
cli
mov
push
adc
in
push
out
adc
mov
outsl
sahf
xor
sbb
jb
bound
jp
loope
outsl
pop
punpckhbw
rol
sbb
lods
fwait
adc
int
aaa
out
cltd
in
mov
imul
mov
jp
call
and
cmpsb
fdivrs
out
leave
and
shlb
mov
andl
adc
stc
xor
add
mov
data16
sub
daa
pop
jne
mov
in
mov
xor
xor
outsb
push
lret
xor
add
sti
jbe
cmp
inc
sahf
mov
xchg
add
mov
es
fcompl
stos
cmp
repz
lahf
or
jge
scas
stos
scas
push
lret
xor
cltd
scas
ret
ficomps
inc
or
inc
lods
push
dec
xorb
pop
test
mov
pusha
bound
pop
fsubs
ja
mov
add
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
xor
or
add
push
pop
jnp
fbstp
or
add
test
ja
stos
push
push
insl
adc
int3
inc
pop
sub
xchg
push
aad
xor
ljmp
cmpsb
push
arpl
push
push
fldcw
add
sub
lods
push
outsb
jp
mov
mov
scas
pop
shrl
inc
mov
pop
push
cmp
in
push
sbb
imul
arpl
loope
xchg
fdivrl
jne
and
cmc
or
iret
dec
or
lods
xchg
mov
sbb
cld
fs
lds
add
insb
mov
in
mov
push
cmp
pop
mov
hlt
adc
sbbb
outsl
outsl
pop
xchg
inc
sub
jnp
sub
clc
test
xchg
cmp
std
push
sbb
aaa
test
inc
push
daa
mov
mov
test
xor
mov
xor
inc
aad
imul
or
out
adc
je
cmp
daa
xor
loop
addr16
sub
add
clc
testl
cmp
cli
scas
xchg
fidivrs
add
mov
sub
addr16
sub
lret
mov
mov
adc
sarl
xchg
cmpsl
pop
out
popa
and
divb
push
mov
xchg
inc
aad
rclb
lds
lret
ror
mov
sub
pop
dec
pop
push
int3
jp
and
mov
push
aad
fwait
rcr
dec
fisttps
leave
mov
xchg
push
movlps
insl
pop
fisubl
inc
clc
into
loop
movsl
sbb
je
test
je
pop
or
jbe
jnp
mov
inc
inc
inc
enter
int3
jbe
mov
test
fdivrl
outsb
movsb
insl
out
mov
or
fcmovb
fcmovnb
in
loope
mov
cmp
add
pop
pop
mov
cmp
adc
add
pop
xor
and
stos
push
sarl
movsl
push
pop
push
stos
xchg
jae
movhps
stos
cvtps2pd
mov
lahf
les
push
imul
in
push
or
mov
imul
pushf
dec
dec
pushf
fwait
mov
jnp
push
int3
flds
nop
add
insl
pop
movsl
stc
push
loopne
mov
xchg
fucomip
icebp
shrb
adc
jo
inc
cmp
cmp
fwait
pop
add
bound
jnp
test
std
jge
stos
mov
adc
xor
rclb
in
push
xor
fsubrl
sbb
mov
cwtl
mov
out
lcall
push
cmc
mov
push
xor
sbb
push
lods
mov
push
mov
stos
xchg
bound
mov
stos
and
jb
xor
stos
sbb
lea
sti
jg
lea
in
mov
jge
push
cld
cmpsb
jge
jg
cmp
adc
sub
stc
adc
sbb
inc
xchg
ds
inc
mov
adc
pop
imul
das
mov
out
mov
xor
cmp
mov
mov
xor
and
lds
xor
sub
lcall
add
outsb
test
ss
fdivs
or
push
mov
sbb
pop
or
cld
sarb
aaa
xchg
cli
xchg
xchg
scas
call
sub
sbb
pop
ja
dec
mov
adc
addl
sbb
add
adc
mov
mov
push
dec
ret
fcompl
lcall
mov
or
sbb
mov
stos
adc
out
data16
ss
sti
loop
aas
and
add
repz
je
rclb
lahf
in
icebp
dec
sarb
ss
insl
adc
js
insb
sbb
insb
loop
pop
adc
jg
mov
fwait
in
test
sub
push
jnp
dec
adc
in
icebp
push
call
jno
adc
xor
pushf
dec
mov
cs
push
adc
test
mov
jge
push
das
add
adc
or
xlat
inc
xchg
add
sar
lea
inc
or
or
loopne
and
push
push
repnz
pop
lahf
shl
inc
scas
mov
push
mov
inc
aas
pushfw
add
out
in
mov
push
mov
dec
add
inc
mov
push
mov
dec
add
inc
mov
push
mov
dec
add
inc
mov
push
mov
dec
add
inc
mov
push
mov
dec
add
inc
mov
push
mov
pop
xor
jmp
cld
push
dec
pop
ficoml
mov
shll
jge
cmc
and
sub
dec
rclb
sub
dec
xchg
cmp
xor
adc
and
adc
orl
icebp
dec
iret
xor
push
sbb
pop
mov
or
and
adc
jne
loopne
jns
ficoms
dec
add
out
add
or
inc
add
lds
scas
sub
movsl
ss
pop
out
fildll
pop
mov
and
xchg
in
xor
cmc
adc
pop
testb
mov
icebp
and
mov
daa
sti
or
add
outsl
sahf
sub
popa
decl
adc
shrl
mov
xchg
push
rorb
loop
sti
in
es
or
sub
mov
mov
sbb
xor
adcl
aad
mov
push
std
lahf
jmp
inc
ror
mov
fsubrs
ljmp
or
stos
std
out
call
sbb
lret
dec
push
out
dec
stos
shll
mov
inc
cli
test
out
call
sub
lods
and
xor
cmovge
sbb
add
jg
add
mov
dec
dec
loop
jecxz
mov
aad
test
lods
movsl
sub
aad
daa
in
push
push
mov
sub
aas
xor
xor
repz
add
or
xchg
dec
aad
xchg
insb
adc
into
adc
inc
dec
jae
lods
in
clc
cmp
dec
mov
lea
in
fisttps
and
push
inc
ds
lock
movswl
imulb
push
stc
dec
aad
and
or
dec
ret
lods
pop
notb
fdivr
inc
ja
mov
pop
incb
cmp
mov
imulb
in
sub
cmp
push
xchg
sar
xchg
sbb
stos
xchg
stos
das
cmp
js
icebp
add
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
add
add
add
movsl
iret
mov
lock
jg
addr16
movsl
inc
xchg
xor
pop
xchg
and
popa
idivl
stc
dec
pop
jo
rcl
ds
adc
mov
mov
fucomip
sti
sahf
xor
into
fistpll
cmp
add
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
jns
jb
xor
add
sub
inc
sub
push
aas
push
push
pop
add
add
and
dec
inc
pop
inc
inc
push
inc
push
push
add
sub
inc
add
dec
add
dec
add
add
add
add
add
inc
aas
dec
pop
dec
dec
dec
inc
add
add
dec
inc
inc
push
push
es
aas
dec
add
es
aas
dec
and
inc
inc
add
add
and
inc
push
dec
inc
es
dec
inc
dec
inc
pop
add
add
xor
push
push
push
aas
dec
pop
dec
dec
dec
inc
add
add
xor
push
push
push
aas
dec
and
inc
inc
add
push
push
push
aas
dec
cs
dec
push
inc
inc
push
add
xor
dec
xor
inc
push
sub
inc
add
add
add
dec
dec
or
dec
dec
add
add
push
dec
and
dec
push
inc
push
push
and
inc
inc
push
add
add
push
dec
and
dec
dec
dec
push
inc
push
push
and
inc
inc
push
add
push
dec
and
dec
dec
push
inc
push
push
inc
dec
dec
xor
dec
aas
inc
inc
xor
inc
add
or
add
add
pop
add
addb
add
nop
add
addb
add
add
addb
add
addb
orb
add
mov
add
add
add
add
add
adcb
add
add
add
add
add
add
add
adcb
add
add
adcb
add
pusha
add
adcb
add
js
add
add
adc
add
add
nop
add
addb
add
test
add
rolb
addb
add
add
addb
add
or
add
and
add
cmp
add
push
add
orb
add
push
add
add
add
add
add
add
add
add
add
orb
add
loopne
add
clc
add
adcb
add
adc
adcb
add
sub
addb
add
pop
add
add
add
cwtl
add
andb
add
add
andb
add
add
add
add
xchg
add
add
add
add
add
add
add
add
push
push
add
test
add
add
add
pop
add
add
pop
add
add
add
hlt
add
add
pop
add
xor
add
dec
pop
add
add
add
enter
pusha
pop
add
js
add
add
add
add
add
nop
pop
add
add
add
or
add
add
add
add
add
add
add
add
add
pop
add
or
add
pop
add
or
add
pop
add
or
add
pop
add
or
add
or
add
add
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
or
add
add
or
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
or
add
add
add
add
sbb
add
pop
add
add
or
add
add
add
or
add
add
dec
or
add
add
add
add
adc
add
add
adc
add
add
add
add
mov
add
or
add
add
add
add
test
add
pop
add
add
add
add
or
add
add
fmuls
add
adc
add
or
add
add
add
or
add
add
add
or
add
add
sbb
add
or
add
or
add
add
add
add
cmp
add
pop
add
add
add
or
add
add
or
add
push
add
add
add
adc
add
add
add
or
add
or
add
add
add
add
enter
pop
add
add
or
add
add
add
or
add
add
clc
or
add
add
add
or
add
add
add
or
add
add
add
or
add
add
cmp
add
or
add
or
add
add
pop
or
add
add
add
add
or
add
add
or
add
mov
add
adc
add
add
add
add
add
or
add
or
add
or
add
or
add
add
add
add
call
add
add
or
add
add
add
or
add
add
sbb
add
add
add
or
add
add
add
or
add
add
add
add
add
add
pop
or
add
or
add
or
add
add
js
add
pop
add
add
add
add
add
add
add
add
add
add
or
add
add
add
or
add
add
call
or
add
or
add
add
add
add
or
add
sbb
add
sub
add
cmp
add
dec
or
add
pop
or
add
push
or
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
or
add
or
add
or
add
or
add
or
or
xor
add
inc
mov
add
and
add
pop
mov
add
cmp
add
add
add
fisttpl
add
add
cmp
or
push
add
add
add
add
add
add
or
add
icebp
or
test
add
fadds
or
push
add
add
add
add
or
test
add
call
and
add
add
add
sbb
add
inc
or
push
add
add
add
add
add
add
dec
or
call
add
add
add
add
dec
or
test
add
mov
adc
add
or
push
add
add
add
add
push
add
pop
jns
add
add
add
add
add
or
addb
add
add
add
aam
add
add
add
or
dec
add
add
mov
add
enter
rolb
add
jecxz
add
add
add
or
xchg
add
sub
or
add
add
fimull
add
add
add
add
add
add
add
or
and
add
add
add
loopne
or
inc
add
add
loope
add
add
add
add
or
hlt
add
add
fisttpl
add
add
cwtl
cmpsl
or
pushf
add
add
add
add
or
nop
mov
add
sub
or
js
add
and
or
js
add
rcl
add
add
pop
les
add
add
add
add
dec
fmull
add
add
add
test
add
add
add
or
xor
add
or
add
mov
add
mov
add
add
add
add
aad
add
add
add
les
add
add
lock
add
add
add
add
add
stos
or
cmpsb
add
add
xlat
or
cmpsb
add
add
add
add
mov
add
mov
or
sahf
add
add
add
add
xlat
or
cmpsb
add
add
or
scas
add
add
add
add
add
add
fmuls
add
add
add
or
mov
add
add
add
add
rorb
mov
add
sub
or
bound
add
xor
or
inc
add
add
add
add
lret
into
add
add
add
add
out
or
or
add
sub
or
add
add
pop
icebp
or
push
add
add
hlt
or
or
add
or
or
cld
add
add
add
add
cli
or
out
add
add
testb
push
add
add
sti
or
rolb
add
xor
or
add
add
js
or
stos
add
add
or
or
add
jo
or
lods
add
add
testl
add
add
add
cli
or
loopne
add
xor
or
test
add
mov
add
adc
add
mov
add
jo
or
adc
add
nop
cmp
add
add
add
add
add
add
adc
or
test
add
test
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
loop
add
add
xor
xor
xor
cmp
xor
xor
bound
xor
add
inc
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
add
add
sub
and
dec
add
arpl
add
add
add
and
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
push
outsb
add
add
insb
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
add
add
add
add
xor
xor
add
add
xor
or
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
aaa
add
xor
sub
xor
xor
sub
xor
add
add
pop
add
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
imul
add
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
add
add
add
daa
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
test
add
add
add
add
add
add
add
add
popa
add
jb
outsl
add
add
add
sub
and
dec
add
arpl
add
add
add
sbb
add
dec
add
add
insb
add
add
add
insl
add
jb
imul
add
add
add
popa
add
jb
outsl
add
add
add
and
inc
add
add
push
add
add
add
add
dec
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
inc
add
add
push
add
jns
add
add
js
add
add
adc
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
push
add
outsl
add
imul
add
jbe
add
add
insb
add
jae
push
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
aaa
add
xor
sub
xor
xor
sub
xor
add
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
add
add
pop
add
outsl
add
and
add
outsb
add
add
add
dec
pop
add
outsl
add
and
add
jne
je
add
add
dec
dec
add
add
add
add
add
push
add
outsl
add
add
and
inc
add
add
add
add
jne
popa
add
add
add
add
add
add
add
add
add
inc
dec
add
add
add
insl
add
add
add
imul
add
inc
dec
add
insb
add
jns
add
add
dec
dec
add
add
jo
add
cmp
add
add
imul
add
add
dec
dec
add
outsl
add
ja
popa
add
add
add
add
add
popa
add
imul
add
add
dec
add
jbe
imul
outsb
add
je
and
insb
add
popa
add
add
add
add
add
add
add
add
add
outsb
add
jae
add
add
add
add
push
add
add
outsb
add
add
add
add
add
bound
outsl
add
je
and
push
add
push
outsb
add
add
insb
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
add
add
add
add
add
loope
add
add
add
add
loope
add
outsl
add
jns
add
add
and
add
jae
je
add
add
add
loope
add
add
add
add
add
insb
add
arpl
je
and
add
insb
add
add
add
add
add
add
add
add
add
addb
loope
add
outsl
add
jns
and
insb
add
outsb
add
add
adc
add
imul
add
add
and
add
jo
add
add
add
add
add
je
jb
insb
add
add
add
add
push
dec
add
insb
add
jae
add
add
je
jb
insb
add
add
add
push
dec
push
add
imul
add
add
add
add
inc
add
add
add
je
add
add
jb
outsl
add
add
je
outsl
add
add
add
add
add
add
imul
inc
add
add
add
add
adc
add
imul
add
add
dec
dec
xor
xor
xor
and
add
push
add
outsl
add
and
add
insb
add
add
pop
add
outsl
add
and
add
outsb
add
add
add
dec
pop
add
outsl
add
and
add
jne
je
add
push
dec
inc
add
insb
add
add
add
arpl
jb
add
outsb
add
add
je
jb
insb
add
add
nop
add
jne
popa
add
add
add
add
add
dec
add
ja
add
add
inc
dec
dec
add
add
jne
insl
add
add
add
imul
and
push
add
popa
add
add
add
add
je
jb
insb
add
add
add
adc
add
outsl
add
je
jb
outsl
add
add
add
add
insb
add
jns
or
inc
add
add
add
outsb
add
add
add
add
cmp
add
add
imul
or
inc
add
add
add
add
dec
dec
push
add
add
and
add
outsl
add
ja
popa
add
add
add
je
jb
insb
add
add
add
add
push
add
add
and
add
popa
add
imul
add
je
jb
insb
add
add
sub
add
add
add
add
add
jo
add
nop
add
add
add
add
add
add
outsl
add
je
and
push
add
push
outsb
add
add
insb
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
add
add
add
add
add
add
add
add
add
add
add
add
imul
add
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
add
or
dec
add
and
push
add
outsb
add
and
push
add
jb
imul
add
add
add
add
add
add
add
incl
add
add
add
add
add
push
add
add
pop
add
add
adc
incl
add
add
add
push
add
add
and
pop
add
incl
add
outsb
add
add
insb
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
add
add
add
add
add
add
add
add
incl
add
add
add
add
add
ja
ja
add
popa
add
jb
outsl
add
add
add
add
outsl
add
add
add
add
add
add
add
add
add
incl
add
jns
jb
imul
je
and
sub
inc
add
add
add
add
add
add
add
add
add
add
add
popa
add
jb
outsl
add
add
add
sub
and
dec
add
arpl
add
add
add
add
add
addb
add
push
add
add
add
add
add
add
dec
add
add
add
or
dec
add
and
push
add
outsb
add
and
push
add
jb
imul
add
add
add
add
add
add
add
add
add
incl
add
add
and
je
push
add
outsl
add
insb
add
add
imul
and
push
add
bound
and
insb
add
arpl
popa
add
add
outsb
add
add
add
push
add
add
add
jb
and
jae
jo
add
imul
and
je
push
add
add
popa
add
add
imul
and
jns
outsl
add
and
ja
outsl
add
insb
add
add
add
add
add
add
add
jo
add
add
add
add
add
push
add
add
pop
add
add
add
add
incl
add
popa
add
add
outsb
add
add
add
add
add
add
add
add
add
incl
add
add
add
push
add
add
add
xor
push
add
add
incl
add
push
add
add
imul
push
add
add
incl
add
arpl
add
add
add
add
add
push
add
add
mov
add
add
add
incl
add
outsl
add
jae
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
incl
add
cmp
addb
add
add
addb
stc
addb
clc
addb
testl
push
incl
add
incl
push
incl
add
add
hlt
clc
mov
clc
xchg
add
incl
mov
clc
js
xorb
idivb
clc
pop
ja
outsl
xchg
inc
jo
ja
addr16
hlt
addb
jbe
add
hlt
inc
inc
ja
add
jg
inc
ja
xchg
add
data16
jbe
jo
or
ja
divb
add
outsl
clc
xchg
jg
js
ljmp
jo
ja
clc
push
clc
data16
clc
pop
push
out
loopne
clc
pop
rolb
pop
addb
add
add
add
add
add
pop
rolb
pop
loopne
sub
add
adc
add
and
add
add
or
add
add
incl
div
clc
add
out
add
and
loopne
loop
faddl
cli
clc
clc
cmp
std
add
sti
sti
add
cli
cli
add
fcmovnu
jmp
jmp
fcmovnu
jmp
aad
jmp
fcmovnu
mov
fcmovu
xlat
add
repnz
push
lock
ja
jecxz
clc
loop
neg
ror
pop
loopne
xchg
in
jmp
stc
div
addr16
hlt
adc
lret
lret
movl
call
xchg
loope
in
fisttpll
fcmovne
aad
inc
loope
xlat
clc
loopne
jg
jmp
in
ja
in
ljmp
push
add
mov
mov
mov
rcl
roll
int3
les
aad
ret
leave
roll
fcmovbe
add
iret
enter
into
add
ror
and
sub
ffree
fst
shl
in
call
jecxz
call
jecxz
or
movsl
xchg
addb
lahf
nop
in
mov
test
into
mov
mov
into
shlb
rol
mov
xlat
aam
mov
lret
ret
int
shl
loope
add
fcmovnbe
mov
aam
roll
fst
sar
in
out
add
in
std
in
fildl
jecxz
loop
flds
loope
fdivr
add
jmp
cli
mov
lea
nop
jg
test
fwait
mov
stos
cltd
mov
mov
xchg
add
lods
popf
add
mov
lods
hlt
rol
mov
rol
mov
add
rol
repnz
lret
sarb
lret
add
aad
out
inc
and
add
in
jnp
push
add
push
fnstsw
add
subb
xchg
xchg
xorl
mov
sahf
mov
cmpsl
xchg
test
rolb
fcmovnbe
int
xlat
ror
add
fcom
sti
in
fildl
jecxz
fsqrt
aad
out
ljmp
in
jmp
in
ljmp
add
add
push
push
cmp
push
cmp
imul
insb
push
add
aas
rep
pop
inc
add
inc
bnd
dec
add
dec
icebp
jp
dec
add
lock
mov
test
add
jle
add
sahf
mov
ret
mov
mov
cltd
mov
dec
sub
mov
sub
add
aas
or
push
cmp
xorl
mov
movsb
add
enter
lds
cli
dec
sub
add
add
push
xor
add
add
dec
sub
add
push
xor
add
psadbw
push
add
and
push
aas
and
push
ds
push
cmp
add
sub
push
cmp
js
repnz
mov
scas
movsl
cltd
add
lock
das
add
inc
sub
add
add
cmp
add
push
xor
ficomps
add
pop
ss
push
xor
add
push
xor
inc
das
push
int3
aas
sub
mov
addr16
and
insl
push
sub
dec
cmp
add
aaa
cld
lea
add
pop
dec
add
push
cli
jg
pop
add
test
add
mov
clc
sahf
xchg
addl
lahf
xchg
negl
add
mulb
or
gs
or
add
sbb
jno
pop
add
repz
and
js
and
jne
and
jbe
and
jae
and
ja
and
ja
add
jae
add
xor
xchg
jle
add
pop
adc
jmp
incb
cld
cld
sti
jmp
std
std
std
out
out
out
add
fstp
jecxz
add
add
jge
js
js
loop
add
add
add
cwtl
bound
add
add
js
sbb
jmp
add
sbb
jl
add
add
jl
sbb
add
jl
add
nop
push
jnp
mov
mov
add
nop
add
sbb
push
jbe
mov
add
incl
js
sbb
add
push
jbe
testb
and
xor
add
jbe
mov
mov
incl
nop
nop
sbb
add
add
out
mov
add
push
nop
js
and
clc
ljmp
js
add
add
add
bound
incl
js
nop
push
add
add
adc
and
nop
add
js
push
and
adc
ljmp
nop
jnp
push
add
and
scas
das
jnp
add
add
add
jge
inc
inc
inc
jge
js
add
add
add
add
nop
nop
nop
js
add
add
clc
pop
push
out
loopne
clc
pop
rolb
pop
addb
add
add
add
add
add
pop
rolb
pop
loopne
sub
add
adc
add
and
add
add
and
incl
incl
incl
incl
xchg
subl
xchg
subl
xchg
subl
xchg
subl
incl
incl
incl
incl
incl
incl
jae
inc
and
inc
mov
out
out
out
out
out
out
jmp
call
pop
inc
mov
inc
and
incl
incl
incl
jae
inc
and
inc
mov
ror
out
out
out
fstp
loop
fdivr
loop
fdivr
loop
fdivr
out
out
out
out
out
out
call
pop
inc
mov
incl
incl
jae
inc
mov
jnp
call
add
dec
sub
call
out
out
fcmovnbe
into
jmp
jmp
jmp
out
out
out
call
pop
inc
mov
incl
xorb
jg
push
cmc
ror
decl
add
push
xor
decl
add
xchg
jg
fcmovnbe
into
jmp
jmp
jmp
fcmovnbe
iret
incl
pop
inc
xorb
aam
sar
ror
fcmovnbe
into
call
lret
decl
add
push
xor
call
add
shll
jmp
jmp
jmp
jmp
fcmovnu
inc
mov
incl
jo
fcmovnbe
into
fcmovnbe
into
jmp
jmp
loopne
call
lret
decl
add
push
xor
pop
jmp
jecxz
jmp
jmp
call
enter
jo
movl
loopne
push
cmc
hlt
decl
add
pop
cmp
lcall
add
push
xor
call
add
out
jmp
jmp
jmp
call
int
incl
jo
lock
iret
ljmp
dec
ret
dec
es
bound
or
pop
cmp
out
jmp
jmp
jmp
call
int3
incl
jo
aad
ret
loop
push
repnz
decl
add
sbbb
jo
pop
inc
mov
leave
jmp
jmp
dec
mov
pop
movl
fcmovbe
out
jmp
cli
stc
clc
ljmp
cmp
incl
mov
in
fdivrp
loop
fdivr
xlat
decl
jo
lea
push
cmc
int3
jmp
loopne
push
in
jmp
stc
div
std
std
std
push
bnd
adc
incl
pop
adc
in
fdivrp
aam
sar
push
cmc
xorb
incl
jae
inc
mov
iret
enter
in
call
in
push
icebp
out
call
ror
decl
add
dec
es
sbbb
int
mov
mov
pushl
inc
mov
incl
incl
jae
inc
and
inc
mov
ret
mov
call
enter
fstp
jmp
loopne
jmp
int
ret
mov
pushl
jbe
pushl
inc
mov
incl
incl
incl
jae
inc
and
inc
mov
push
cmc
xchg
subl
les
stos
jmp
subl
jae
inc
mov
inc
and
incl
incl
incl
incl
incl
incl
jae
inc
inc
jae
inc
lea
inc
jae
inc
lock
inc
lock
inc
jae
inc
lea
inc
inc
incl
incl
incl
incl
lock
rolb
js
add
addb
add
add
loop
add
add
add
cwtl
add
add
add
js
add
jmp
add
sbb
add
add
addb
jnp
add
add
add
vmread
sub
add
and
add
inc
add
add
add
adc
add
add
add
incl
add
incl
addb
addb
xchg
addb
xchg
addb
xchg
add
add
incl
add
incl
incl
incl
add
incl
clc
xchg
ja
ljmp
add
add
pop
xchg
incl
add
add
push
xchg
ja
ja
ja
js
decl
ja
ja
ja
mov
ljmp
decl
ja
ja
ja
push
xchg
inc
incl
ja
outsl
decl
dec
clc
pop
ja
ja
ja
ljmp
ja
hlt
hlt
ja
ja
ja
xchg
jmp
ja
or
dec
xorb
ja
jbe
clc
xchg
ja
popl
ja
ja
js
testb
hlt
clc
pop
ja
ja
js
testb
hlt
inc
inc
inc
xorb
outsl
testb
hlt
inc
inc
dec
xorb
outsl
testb
outsl
inc
inc
dec
xorb
outsl
testb
popl
xorb
outsl
testb
add
dec
ja
ja
js
clc
push
add
inc
inc
jo
ja
js
ljmp
jo
add
pop
mulb
ja
xchg
ljmp
jo
add
add
xchg
incl
add
je
fs
push
ja
add
add
inc
xchg
ljmp
ja
add
add
inc
ja
incl
add
pop
mov
push
imulb
ja
ja
ja
ja
outsl
incl
ja
js
push
jmp
mov
mov
clc
data16
incl
push
ud0
addb
incl
add
cld
add
aas
clc
add
pop
lock
add
pavgb
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
lock
add
psubb
add
cld
add
aas
incl
add
incl
ud0
ljmp
add
add
add
add
add
add
or
add
add
incl
div
clc
add
out
add
and
loopne
loop
faddl
cli
clc
clc
cmp
std
add
sti
sti
add
cli
cli
add
fcmovnu
jmp
jmp
fcmovnu
jmp
aad
jmp
fcmovnu
jmp
fcmovu
xlat
push
repnz
push
lock
call
fstp
jmp
fcmovnbe
into
clc
loopne
ja
in
jmp
stc
div
push
cmc
hlt
push
ror
jmp
push
jmp
xchg
loop
add
loope
push
in
fdivl
into
lds
aad
js
fcmovnbe
jmp
fcmovbe
js
jmp
in
ja
in
ljmp
push
add
cmpsl
cltd
ja
mov
mov
ja
lret
aad
sar
int3
les
aam
shll
sar
fmul
enter
into
ja
ror
ja
jmp
roll
ljmp
ja
jecxz
inc
in
fidivs
xchg
xor
lahf
nop
ja
mov
test
into
mov
mov
into
shlb
rol
mov
add
enter
lret
lret
ret
int
add
loope
inc
loope
ja
fcmovbe
neg
add
fcom
inc
fst
shlb
out
imul
in
add
inc
jecxz
fidivl
fstp
clc
loope
fadds
inc
lock
ja
mov
mov
nop
jg
test
fwait
mov
stos
cltd
mov
mov
xchg
test
lods
popf
mov
mov
lods
jo
ret
rol
mov
pop
fcmovnbe
movb
sarb
lret
iret
ja
and
add
js
push
jg
push
xchg
ja
jns
xchg
xchg
xchg
xorl
mov
sahf
mov
cmpsl
xchg
test
xlat
shlb
aam
call
ror
sar
in
fcompp
aad
out
ljmp
in
jmp
in
ljmp
decl
add
push
push
cmp
push
cmp
imul
insb
push
ds
insl
push
aas
clc
outsb
pop
inc
lock
inc
lock
dec
loopne
arpl
gs
sarb
subb
mov
test
orb
push
lea
mov
mov
mov
pushf
shlb
mov
dec
sub
loopne
sub
lock
sub
or
push
cmp
xorl
mov
movsb
dec
enter
lds
add
add
push
xor
lock
cs
dec
sub
add
push
xor
push
pop
cmp
insb
push
cmp
andb
adcb
in
ds
push
cmp
jg
inc
sub
js
jae
xorl
scas
movsl
cltd
in
sub
add
dec
das
add
inc
sub
push
xor
dec
cmp
add
xor
sbbb
int
ss
push
xor
add
push
xor
inc
das
push
jae
sub
mov
push
ret
addr16
and
insl
push
sub
dec
cmp
in
push
aaa
mov
outsl
pop
dec
mov
push
jae
jno
jae
xchg
jp
mov
mov
lcall
lahf
xchg
jae
cmp
xchg
popa
aas
or
push
adc
cmpsb
jno
pop
xchg
je
and
push
and
push
and
push
and
jbe
and
jae
and
ja
and
ja
incl
jae
jae
dec
xor
jle
jae
cmpsl
mov
pop
adc
out
jae
jae
cld
sti
jae
std
std
std
out
out
out
fstp
bound
cwtl
jge
bound
add
sbb
cwtl
cwtl
bound
cwtl
jl
add
adc
add
adc
add
inc
xor
adc
and
and
and
and
cwtl
bound
add
nop
popf
negl
and
add
sbb
and
sbb
sbb
sbb
sbb
jl
add
fisubs
sbb
lcall
and
sbb
and
sbb
sbb
cwtl
nop
das
sbb
fisubrs
jbe
shll
lcall
and
lcall
and
sbb
sbb
nop
add
add
add
add
xchg
stos
in
jbe
jl
and
and
and
and
and
xor
nop
add
add
add
das
sbb
and
in
das
and
sbb
sbb
sbb
sbb
sbb
jl
add
add
nop
jl
sbb
and
dec
jnp
stos
mov
mov
add
sbb
sbb
sbb
sbb
sbb
add
add
sbb
and
jbe
adc
sbb
sbb
and
loope
add
add
loope
sbb
sbb
sbb
add
stos
mov
mov
add
add
and
and
sbb
inc
jl
add
nop
jnp
and
sbb
sbb
and
bound
add
jmp
sbb
and
sbb
jl
add
nop
jl
sbb
and
add
add
add
mov
mov
mov
and
sbb
xor
add
nop
jge
sbb
and
add
in
out
mov
jbe
and
and
sbb
bound
inc
sbb
and
add
xchg
mov
mov
mov
in
and
sbb
and
inc
nop
add
nop
jnp
sbb
and
add
inc
aam
out
out
stos
cwtl
and
sbb
sbb
jge
add
nop
pushf
inc
xor
and
add
and
sbb
and
sbb
add
jnp
add
js
inc
sbb
and
adc
add
popf
mov
and
add
and
sbb
pushf
js
add
nop
jge
sbb
adc
add
push
aam
ljmp
sbb
inc
nop
add
add
nop
pushf
das
xor
and
add
popf
aam
jmp
jl
and
sbb
inc
jnp
add
add
js
jge
xor
and
add
cmc
shr
ljmp
inc
ja
add
add
add
add
and
add
rcl
ljmp
nop
add
add
add
add
jmp
add
and
adc
rcl
ljmp
add
add
add
js
js
xor
sbb
and
and
and
and
inc
jnp
js
jnp
js
nop
ja
jge
xor
sbb
sbb
sbb
add
xor
jnp
nop
add
add
ja
inc
das
dec
xor
push
xor
xor
inc
mov
add
nop
nop
ja
jge
das
das
das
das
inc
jge
cwtl
nop
nop
add
nop
nop
ja
cwtl
js
ja
nop
nop
js
js
nop
nop
nop
nop
nop
js
add
add
push
ud0
addb
incl
add
cld
add
aas
clc
add
pop
lock
add
pavgb
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
lock
add
psubb
add
cld
add
aas
incl
add
incl
ud0
ljmp
add
add
add
add
add
add
and
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
or
add
adc
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
add
add
add
add
add
inc
add
add
add
push
add
add
add
dec
add
add
add
cmp
add
das
add
add
add
add
add
add
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
add
and
sub
dec
push
dec
aas
mov
dec
mov
xorl
mov
cli
mov
sti
xorl
js
pop
fldcw
dec
mov
and
outsl
add
add
add
cmp
add
and
add
sldt
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
adc
pop
pop
inc
push
inc
cmpsl
ja
dec
in
xchg
jge
ljmp
mov
call
int
jmp
jmp
fcmovnbe
iret
dec
ret
mov
lcall
gs
repz
inc
xor
and
adc
add
push
add
add
add
add
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
pop
dec
ds
jl
popa
dec
call
mov
aam
push
out
ljmp
sti
clc
idiv
in
out
dec
ret
mov
js
dec
hlt
inc
aaa
sub
add
add
add
sbb
add
push
incl
incl
incl
incl
incl
incl
incl
add
add
add
pop
pop
dec
cmp
pushf
call
mov
in
in
in
call
out
jmp
in
call
jecxz
jmp
call
in
in
call
loope
loope
sar
shlb
lcall
xor
push
or
insb
add
add
add
sbb
add
add
incl
incl
incl
incl
add
add
add
dec
cmp
mov
into
loope
jmp
in
jmp
fcmovnbe
fst
sar
fst
sar
sar
sar
fst
sar
fst
sar
fst
sar
sar
aam
loopne
sar
fst
lret
dec
mov
outsl
lcall
aaa
or
add
aas
add
add
add
add
incl
incl
incl
incl
add
add
pop
dec
cmp
cmpsl
xchg
mov
jb
lcall
mov
leave
jmp
fcmovbe
aad
aad
aad
aam
aam
aam
aam
aam
sar
fmul
vshufps
call
xor
add
add
add
xor
add
push
incl
incl
incl
add
add
push
inc
xor
push
std
mov
nop
call
mov
jge
pop
pushl
adc
incl
add
inc
and
call
pop
jmp
in
jmp
aad
loopne
aad
loopne
aad
aad
aad
aam
aam
aam
fmul
mov
jno
incl
and
add
add
add
and
add
add
incl
sub
sbb
outsb
pop
inc
fstps
mov
sar
in
insl
pop
dec
incl
add
push
xor
call
add
dec
sub
incl
add
xchg
subl
in
loope
xlat
jmp
fcmovbe
jmp
fcmovbe
jmp
fcmovbe
jmp
fcmovbe
aad
aam
aam
aam
sar
aam
mov
pushl
inc
hlt
sbb
ja
add
cmp
add
adc
incl
add
add
dec
xor
mov
iret
jmp
fcmovbe
jmp
loope
pushl
push
cmp
pop
cmp
add
dec
sub
call
add
dec
sub
incl
add
scas
mov
out
loopne
fdivr
loopne
xlat
jmp
fcmovbe
jmp
fcmovbe
jmp
fcmovbe
aad
aad
aam
aad
int
leave
mov
push
mov
add
add
add
add
push
inc
and
rcrb
mov
sar
aam
loope
xlat
jmp
fstp
dec
les
pushl
and
call
decl
add
pop
cmp
jmp
jmp
fcmovu
jmp
fcmovu
jmp
fcmovbe
jmp
fcmovbe
jmp
fcmovbe
aad
aad
aam
aam
leave
sar
lcall
pop
sbb
das
add
add
jae
dec
bound
dec
cld
mov
nop
fmul
aad
aam
aad
loopne
jmp
loope
push
in
jmp
cmpsl
sahf
xchg
pushl
push
add
dec
sub
call
add
inc
and
call
jmp
jmp
fcmovu
jmp
fcmovu
jmp
fcmovbe
jmp
fcmovbe
jmp
fcmovbe
aad
aam
aad
fcmovnbe
lret
inc
mov
incl
cmp
add
add
adc
push
xchg
test
inc
mov
fcmovnbe
int3
aad
aam
aad
aad
aad
loopne
xlat
out
ljmp
xor
add
push
xor
add
pop
cmp
lret
jmp
loope
jmp
jmp
jmp
jmp
fcmovnbe
jmp
fcmovbe
aad
aam
aad
fst
sar
int3
mov
push
pop
dec
inc
mov
add
add
mov
dec
mov
sar
aad
aam
aam
loopne
aad
loop
fcos
jecxz
fdivr
call
iret
lret
sub
decl
lcall
add
dec
sub
jmp
in
jmp
fcmovnu
jmp
fcmovnu
jmp
fcmovnu
jmp
jmp
fcmovnu
aad
aad
aam
sar
rol
mov
ljmp
dec
flds
add
dec
add
add
jnp
push
jecxz
subb
mov
sar
aam
sar
out
fdivrp
repz
lock
cld
cld
sti
std
std
cld
cld
cld
cld
cli
sti
incl
sbb
lcall
call
add
pop
cmp
imul
jmp
lcall
sbb
xchg
subl
aad
aam
aam
aad
mov
pushl
out
add
add
add
sbb
push
clc
xchg
xorb
shll
aam
out
cmc
repnz
std
std
std
dec
leave
ret
and
push
ss
pop
cmp
pop
xor
add
push
cs
push
sub
add
xchg
jmp
jecxz
aad
aam
aam
aad
sar
xchg
test
js
dec
sti
add
add
add
sbb
dec
clc
xchg
jg
dec
mov
sar
loop
fcos
jmp
out
hlt
icebp
lock
sti
sti
sti
std
std
std
ljmp
inc
decl
add
fs
or
pop
cmp
call
add
push
xor
decl
add
mov
jmp
jecxz
aad
aam
aam
aam
mov
pushl
dec
cli
add
add
add
sbb
dec
jecxz
js
dec
mov
int
jecxz
ljmp
cli
stc
clc
ljmp
xor
adc
arpl
lcall
pop
jmp
push
call
or
aas
es
test
call
fcmovbe
aad
aam
sar
rol
mov
pushl
inc
in
add
add
add
adc
subl
fmul
fcmovnbe
call
in
jmp
clc
div
jmp
loope
call
sub
imul
outsl
dec
sbb
pusha
cmp
ja
xlat
ror
inc
sarl
fstp
aad
aam
aad
fst
sar
lret
mov
jmp
inc
xlat
add
add
add
adc
inc
xchg
jne
dec
ljmp
mov
jmp
loope
in
jmp
lock
sti
cli
cli
incl
cmp
js
and
insl
dec
pop
incl
call
aad
aad
aam
aad
fcmovbe
leave
mov
push
lcall
cmp
add
add
outsl
pop
inc
pop
insl
push
aas
repz
xorl
mov
leave
jmp
fstp
jmp
in
jmp
div
repz
std
cld
sti
dec
leave
ret
decl
sbb
outsb
push
and
js
and
outsb
dec
push
lcall
in
jmp
loopne
aam
aam
sar
aam
mov
pushl
inc
decl
sub
push
add
add
pop
inc
sbb
cmp
mov
xchg
call
leave
mov
jmp
loopne
jmp
in
repnz
in
push
cmc
repz
std
sti
sti
incl
cmp
pushl
and
jo
sbb
xchg
jle
call
leave
mov
jmp
aad
fcmovnbe
lret
inc
mov
decl
dec
xor
sub
sbb
add
push
incl
incl
addr16
cmp
push
inc
xchg
subb
mov
jmp
jmp
loope
jmp
in
icebp
out
jmp
div
repnz
cli
clc
clc
std
cld
cld
jmp
lcall
sub
js
and
jbe
and
jo
sbb
ja
and
test
inc
mov
jmp
loopne
call
ret
mov
pushl
inc
incl
and
add
add
incl
incl
incl
push
pusha
dec
jmp
ret
fxch
jmp
fcmovbe
jmp
loope
ljmp
push
lock
push
repz
div
stc
div
inc
mov
and
pushl
and
js
and
je
and
insb
dec
adc
mov
mov
into
pushl
imul
dec
xor
adc
or
add
add
incl
incl
incl
incl
dec
ss
imul
ljmp
ret
mov
sar
in
fdivr
call
out
in
ljmp
lock
jmp
lock
jmp
stc
div
dec
lds
call
pop
jmp
sbb
outsb
dec
sbb
jb
pop
inc
mov
inc
mov
decl
push
cmp
cmp
sbb
add
add
add
add
incl
incl
incl
incl
incl
arpl
dec
imul
imul
mov
ret
fcmovnbe
into
jmp
fcmovnbe
jmp
jmp
loope
jmp
jecxz
call
in
jmp
jecxz
out
jmp
jmp
ljmp
jno
ljmp
cmp
mov
jne
ljmp
decl
and
adc
add
add
incl
incl
incl
incl
incl
incl
incl
gs
xor
push
cmp
jp
push
lcall
mov
call
lds
fcmovbe
lret
fst
sar
aam
loopne
aad
loopne
aad
aad
sar
fst
iret
jmp
fst
leave
dec
ret
mov
cltd
incl
push
cmp
push
cmp
xchg
add
add
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
arpl
addr16
cmp
jb
inc
decl
xchg
test
shlb
call
mov
call
lret
ret
lret
ret
lret
aam
mov
inc
mov
ljmp
jl
pushl
dec
jmp
ss
dec
cmp
jl
add
sldt
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
gs
xor
gs
xor
push
cmp
jae
inc
incl
jno
cmpsl
xchg
test
mov
xchg
mov
cmpsl
cltd
pushl
mov
pushf
mov
mov
jbe
dec
ljmp
cmp
pop
inc
das
les
and
add
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
arpl
arpl
dec
aaa
ljmp
inc
pushl
dec
jns
dec
jp
dec
pushl
dec
pushl
inc
ljmp
notrack
ss
inc
cs
add
add
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
imul
push
cmp
push
cmp
push
cmp
imul
lret
addr16
cmp
arpl
jnp
dec
xor
sbb
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
inc
add
incl
add
add
aas
clc
add
pop
lock
pavgb
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
pop
lock
psubb
add
cld
add
aas
incl
add
incl
add
xor
add
pusha
add
add
add
adc
add
add
add
incl
add
incl
addb
addb
incl
rol
addb
incl
incl
add
incl
incl
add
incl
incl
incl
add
add
add
clc
mov
decl
mov
decl
add
pop
js
decl
add
add
pop
js
decl
add
add
add
pop
js
clc
mov
add
pop
ja
ja
add
ja
decl
ja
ja
ja
ja
ja
xchg
clc
mov
add
ja
ja
ja
ja
ja
js
ljmp
ja
incl
ja
ja
ja
ja
ja
xchg
clc
mov
push
ja
ja
ja
ja
ja
mov
testb
push
pop
ja
ja
ja
ja
js
decl
inc
dec
pushl
ja
ja
ja
ja
mov
ljmp
ja
incl
inc
ja
ja
ja
ja
ja
clc
mov
jo
incl
pop
ja
ja
ja
ja
js
push
xchg
ja
jbe
hlt
inc
pushl
ja
ja
ja
ja
outsl
decl
ja
incl
ja
ja
ja
ja
ja
ljmp
ja
ja
ja
incl
ja
ja
ja
ja
ja
ljmp
ja
ja
ja
push
inc
inc
pop
ja
ja
ja
ja
xchg
clc
push
ja
jo
hlt
inc
inc
jo
ja
ja
ja
ja
imulb
ja
ja
jo
add
inc
inc
pusha
add
add
ja
ja
outsl
testb
add
or
inc
inc
inc
inc
incl
ja
ja
js
testb
add
add
inc
inc
inc
inc
inc
incl
ja
ja
js
testb
add
add
inc
dec
pop
ja
ja
js
testb
add
add
inc
inc
inc
inc
inc
pop
ja
ja
js
imulb
ja
add
add
add
inc
inc
inc
inc
dec
incl
ja
ja
js
imulb
ja
add
add
add
inc
fs
inc
dec
incl
ja
ja
mov
push
add
add
add
dec
add
ja
ja
ja
outsl
clc
push
add
add
add
ja
ja
ja
ljmp
ja
add
add
add
add
data16
ja
ja
ja
jmp
ja
add
add
add
push
inc
data16
ja
ja
js
incl
add
add
add
inc
data16
ja
ja
push
ja
jo
add
add
add
data16
ja
mov
clc
push
add
add
add
data16
ja
xchg
xchg
jo
add
add
or
data16
ja
xchg
incl
add
add
add
test
pushaw
ja
push
imulb
ja
jo
add
add
or
data16
outsl
clc
data16
ja
add
add
add
inc
xchg
jmp
xchg
ja
add
add
add
inc
xchg
push
data16
ja
ja
ja
ja
ja
js
outsl
jmp
mov
ja
ja
ja
ja
js
data16
push
pushw
ja
ja
ja
ja
mov
jmp
push
ja
ja
mov
jmp
mov
mov
jmp
pushw
mov
data16
jmp
data16
push
data16
decl
out
jmp
pop
incl
add
cld
add
aas
push
add
ud0
cld
inc
add
add
push
incl
inc
incl
add
add
incl
add
add
add
add
aas
incb
clc
add
add
pop
cld
add
add
add
pop
clc
add
add
add
psubb
lock
add
add
add
add
pop
lock
add
add
pop
loopne
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
rolb
add
add
pop
loopne
lock
add
pavgb
lock
add
add
add
add
pop
lock
add
add
pop
clc
add
add
add
aas
clc
add
add
add
jg
add
add
add
incb
incl
incl
inc
add
add
incl
ud0
sar
add
aas
push
incl
add
cld
jmp
pop
ljmp
add
add
add
add
add
add
or
add
add
incl
div
clc
add
out
add
and
loopne
loop
faddl
cli
clc
clc
cmp
std
add
sti
sti
add
cli
cli
add
fcmovnu
jmp
jmp
fcmovnu
jmp
aad
jmp
fcmovnu
jmp
fcmovu
xlat
push
repnz
push
lock
call
fstp
jmp
fcmovnbe
into
mov
push
in
jmp
stc
div
push
cmc
hlt
call
into
lret
lret
ja
push
jmp
jmp
loop
jmp
loope
jmp
loopne
mov
add
into
lds
loope
xlat
jmp
fcmovbe
out
jmp
in
add
in
ljmp
push
add
mov
mov
mov
pop
lret
aad
sar
int3
clc
aad
ret
leave
shll
roll
fmul
enter
into
fcmovbe
int3
mov
ja
loop
ja
shll
call
jecxz
call
jecxz
add
loope
ja
xchg
xorb
nop
outsl
mov
xchg
inc
mov
xchg
mov
mov
into
shlb
rol
mov
ja
enter
lret
lret
ret
int
mov
loope
jmp
fcmovnbe
ja
fcmovbe
aam
shll
xlat
sarb
out
jmp
loopne
in
fisttpl
ja
fstp
ja
ja
fcmovbe
push
jmp
ja
mov
mov
nop
jg
test
fwait
mov
stos
cltd
mov
cmpsb
xchg
jmp
lods
popf
ja
scas
mov
dec
mov
mov
rol
mov
ja
rol
ja
ror
dec
sarb
lret
ja
aad
ja
and
pushl
ja
push
or
push
inc
jl
push
ja
jns
ja
subb
xchg
xchg
xorl
mov
sahf
mov
cmpsl
xchg
test
xlat
sar
fcmovnbe
int
xlat
ror
jo
fcom
inc
in
fcompp
ja
fcmovbe
imul
ljmp
in
jmp
in
ljmp
testb
ja
push
cmp
imul
ljmp
cmp
imulb
aas
ja
pop
inc
add
inc
inc
jbe
dec
js
dec
ja
gs
idivb
jo
outsb
pop
add
jno
dec
mov
ja
jle
testb
mov
ret
inc
mov
pushf
inc
mov
cltd
ja
mov
add
dec
sub
add
inc
aas
es
push
cmp
je
imulb
mov
add
enter
lds
ja
sub
notb
add
push
xor
add
add
sub
add
xor
clc
pop
cmp
jo
cmp
add
and
aas
and
and
cmp
call
sub
push
cmp
js
inc
mov
mov
movsl
cltd
decl
ja
and
add
add
add
push
xor
ja
and
call
add
cmp
pop
ss
push
xor
add
push
xor
inc
das
push
ja
sub
fs
xor
and
push
sub
dec
cmp
add
aaa
je
jne
data16
mov
outsl
pop
dec
pushl
push
ja
jno
add
test
data16
ljmp
cmp
add
or
inc
or
ljmp
sbb
je
and
jbe
and
push
and
jbe
and
ja
and
ja
es
andl
mov
lcall
xor
jle
ja
cmpsl
mov
sbbb
jmp
cld
cld
sti
data16
ja
std
std
ja
out
out
ja
fstp
outsl
add
add
cwtl
pushf
js
js
js
add
add
cwtl
jl
testl
hlt
cwtl
bound
add
jl
loope
and
adc
bound
add
add
divl
add
adc
add
add
add
cwtl
bound
add
jl
loope
and
adc
adc
and
loope
cwtl
bound
add
cwtl
popf
jl
sbb
add
and
and
and
and
sbb
and
and
and
and
inc
negl
add
ficomps
sbb
sbb
sbb
sbb
sbb
and
sbb
sbb
sbb
and
sbb
inc
idivl
add
cwtl
popf
sbb
add
add
and
and
sbb
sbb
sbb
and
sbb
sbb
sbb
jl
add
and
cwtl
scas
sbb
add
sbb
sbb
sbb
lcall
and
sbb
sbb
das
jl
add
add
bound
sbb
stos
stos
in
in
mov
sbb
lcall
add
sbb
and
sbb
sbb
and
sbb
sbb
popf
fiadds
add
sbb
stos
stos
in
in
jbe
jbe
add
sbb
sbb
sbb
sbb
and
sbb
sbb
sbb
loope
nop
add
popf
inc
loope
sbb
ljmp
in
jbe
in
and
add
and
sbb
lcall
and
lcall
and
inc
das
jl
nop
jge
sbb
sbb
and
in
in
in
and
sbb
add
and
sbb
sbb
and
sbb
and
loope
nop
add
add
add
add
sbb
call
stos
stos
stos
stos
stos
in
mov
in
add
add
and
sbb
sbb
and
sbb
sbb
sbb
das
bound
add
add
add
sbb
and
and
sbb
in
in
inc
and
add
add
and
and
and
sbb
sbb
sbb
nop
add
add
add
sbb
sbb
sbb
sbb
add
stos
in
mov
in
add
sbb
lcall
and
sbb
and
lcall
and
inc
das
jnp
add
add
nop
popf
das
inc
sbb
sbb
sbb
jmp
sbb
adc
mov
mov
sbb
and
and
and
and
and
and
sbb
sbb
loope
nop
add
add
nop
jl
sbb
sbb
sbb
sbb
sbb
add
add
stos
stos
mov
mov
adc
sbb
sbb
sbb
sbb
sbb
sbb
inc
bound
cwtl
jl
xor
sbb
sbb
and
and
sbb
scas
stos
stos
in
mov
mov
and
incl
lcall
jmp
sbb
sbb
sbb
sbb
popf
cwtl
add
nop
cwtl
bound
sbb
sbb
sbb
and
add
lcall
add
mov
cwtl
adc
and
and
and
and
sbb
sbb
js
add
nop
js
inc
sbb
lcall
sbb
and
add
lods
stos
stos
mov
mov
mov
mov
in
in
add
sbb
sbb
sbb
sbb
negl
js
inc
sbb
sbb
and
adc
add
add
stos
stos
mov
out
mov
mov
mov
mov
and
sbb
sbb
and
and
popf
nop
add
nop
js
xor
sbb
and
adc
add
add
add
in
mov
mov
mov
mov
in
add
sbb
and
sbb
sbb
negl
js
inc
sbb
and
add
add
add
add
mov
out
mov
mov
in
and
sbb
sbb
and
sbb
das
popf
nop
add
nop
cwtl
pusha
inc
sbb
sbb
add
adc
add
add
add
mov
mov
mov
in
add
sbb
and
sbb
sbb
js
add
nop
ja
inc
xor
and
and
add
add
add
jnp
shr
out
out
mov
stos
stos
stos
and
sbb
sbb
and
xor
inc
pushf
nop
add
nop
ja
das
xor
sbb
and
add
add
add
add
mov
out
and
and
and
sbb
and
sbb
sbb
cwtl
nop
add
js
popf
das
xor
sbb
and
adc
add
add
add
ljmp
jmp
sbb
and
sbb
and
xor
ja
add
add
sbb
and
adc
add
add
add
add
mov
ljmp
jmp
sbb
sbb
xor
jnp
add
add
nop
ja
inc
xor
sbb
and
adc
add
add
add
nop
aam
jmp
jmp
ljmp
sbb
sbb
inc
inc
js
add
add
js
jnp
xor
sbb
sbb
adc
add
add
add
das
mov
jmp
jmp
add
sbb
sbb
sbb
xor
ja
add
add
add
sbb
and
and
add
add
add
xchg
mov
jmp
jmp
loope
and
sbb
dec
inc
popf
nop
add
add
add
js
pushf
inc
xor
sbb
and
and
add
add
add
sarl
jmp
jmp
repz
jl
js
add
add
add
nop
ja
das
xor
sbb
and
and
add
mov
jmp
jmp
jmp
and
inc
inc
js
js
js
inc
xor
sbb
and
add
adc
mov
ljmp
dec
das
jnp
js
nop
xchg
pushf
inc
inc
xor
add
and
and
and
adc
mov
jmp
repz
das
jnp
nop
add
js
ja
inc
inc
xor
sbb
and
and
and
add
adc
mov
call
jnp
nop
js
add
nop
nop
ja
pusha
inc
xor
push
sbb
add
and
and
and
and
and
scas
js
mov
jnp
nop
nop
add
scas
xor
push
sbb
add
and
add
and
sbb
add
sbb
scas
xor
jnp
xchg
nop
add
add
inc
inc
dec
xor
push
sbb
sbb
add
add
add
sbb
xor
xor
jnp
nop
nop
add
jge
inc
xor
xor
xor
push
xor
xor
push
xor
inc
das
inc
mov
add
add
jnp
inc
das
inc
inc
xor
xor
xor
xor
inc
pusha
jnp
ja
nop
nop
add
nop
nop
nop
ja
popf
jnp
inc
inc
das
das
das
das
inc
inc
bound
nop
nop
add
nop
nop
nop
nop
xchg
ja
pushf
pushf
pushf
pushf
popf
pushf
js
ja
nop
nop
nop
add
nop
nop
nop
nop
nop
nop
nop
xchg
nop
nop
nop
nop
nop
nop
nop
nop
add
add
nop
nop
nop
nop
nop
add
add
decl
out
jmp
pop
incl
add
cld
add
aas
push
add
ud0
cld
inc
add
add
push
incl
inc
incl
add
add
incl
add
add
add
add
aas
incb
clc
add
add
pop
cld
add
add
add
pop
clc
add
add
add
psubb
lock
add
add
add
add
pop
lock
add
add
pop
loopne
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
rolb
add
add
pop
loopne
lock
add
pavgb
lock
add
add
add
add
pop
lock
add
add
pop
clc
add
add
add
aas
clc
add
add
add
jg
add
add
add
incb
incl
incl
inc
add
add
incl
ud0
sar
add
aas
push
incl
add
cld
jmp
pop
ljmp
add
add
add
add
add
add
and
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
add
add
add
add
add
add
add
and
add
and
add
and
add
and
add
sbb
add
sbb
add
adc
add
or
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
data16
add
add
bound
add
pop
add
add
add
dec
add
add
add
add
add
add
add
add
add
or
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
add
add
add
add
add
add
daa
and
inc
xor
mov
jns
push
jmp
test
std
test
std
subb
js
push
ljmp
inc
lds
xor
add
add
add
pusha
add
add
add
xor
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
xor
push
jae
aas
xor
jle
push
incl
jl
lcall
xchg
mov
xchg
pushl
cmpsb
cltd
pushl
sahf
jmp
xorb
jb
jge
push
pushl
inc
testb
lret
sbb
add
add
add
cmp
add
sbb
add
or
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
add
add
sub
dec
cmp
jns
dec
cld
xchg
call
xchg
test
mov
lret
ret
in
push
hlt
repnz
cld
sti
cli
std
std
sti
cli
clc
cmc
hlt
jmp
mov
jmp
jbe
pushl
dec
jmp
in
sub
sbb
add
add
add
sub
add
or
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
pop
dec
aaa
mov
bound
mov
lcall
cmpsb
xchg
call
mov
push
jmp
stc
div
cld
cld
sti
std
cld
sti
stc
div
push
jmp
jmp
fcmovbe
dec
ret
stos
cwtl
mov
mov
jns
dec
std
pop
inc
xor
sbb
adc
add
add
add
adc
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
pop
sbb
inc
fs
sarb
push
call
lcall
loop
sar
jmp
out
jmp
in
push
hlt
repnz
sti
cli
stc
std
std
std
std
std
std
cld
std
std
cld
std
std
cld
std
std
std
sti
stc
stc
push
hlt
repnz
out
in
push
jmp
in
out
jmp
iret
inc
mov
lcall
imul
push
cmp
and
adc
add
add
add
add
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
inc
sub
push
inc
filds
jp
mov
enter
aad
jmp
fcmovnbe
call
loop
jmp
loop
jmp
loope
jmp
loopne
jmp
jmp
fstp
jmp
fcmovnbe
jmp
fcmovnbe
jmp
fcmovnbe
jmp
fstp
jmp
jmp
loopne
jmp
loope
jmp
loop
call
loopne
jmp
jmp
fcom
call
les
decl
push
inc
hlt
inc
xor
outsb
add
add
add
sbb
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
inc
sub
pop
dec
cmc
xchg
jmp
movsl
call
mov
int
sar
sar
sar
fst
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
fst
sar
fst
sar
fst
sar
aam
loopne
sar
iret
fcmovnbe
call
mov
decl
pop
dec
cmp
add
outsb
add
add
add
add
add
add
incl
incl
incl
incl
incl
incl
incl
incl
add
add
jb
dec
xrelease
movsl
xchg
cmp
mov
call
ret
ljmp
out
ljmp
out
jmp
call
sar
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
sar
sar
fcompp
sar
into
call
enter
shll
xchg
jg
pushl
aas
xor
mov
add
add
add
add
add
add
incl
incl
incl
incl
incl
incl
add
add
sbb
and
push
inc
xlat
subl
mov
scas
mov
jmp
jmp
aas
cmp
add
dec
sub
add
arpl
jnp
dec
mov
out
jmp
fcmovnbe
aam
aad
aad
aad
aad
aad
aam
aad
aad
aam
aam
aam
aam
sar
aad
iret
call
mov
pushl
js
ljmp
ds
add
pop
add
add
add
add
incl
incl
incl
incl
incl
incl
add
add
pop
dec
cmp
fwait
mov
ret
mov
dec
shll
icebp
out
in
incl
adc
decl
add
dec
sub
add
dec
sub
decl
add
pop
inc
and
fcmovbe
int
jecxz
aam
aad
aad
aad
aad
aad
aad
aad
aad
aad
aam
aam
aam
aam
fcompp
aam
fst
sar
rol
mov
ljmp
outsl
pop
jmp
cmp
adc
add
dec
add
add
add
add
incl
incl
incl
incl
add
add
ja
dec
call
cmpsl
cltd
call
shll
aad
jmp
in
xor
sub
call
add
push
das
add
dec
cs
dec
sub
add
dec
sub
decl
push
inc
mov
jecxz
aam
loopne
jmp
fcmovbe
jmp
fcmovbe
jmp
fcmovbe
jmp
fcmovbe
aad
aad
aad
aad
aam
aam
aam
sar
aam
fcmovnbe
int
rol
mov
jmp
fs
call
das
xlat
add
add
add
add
add
incl
incl
incl
add
add
xor
sbb
outsb
pop
inc
in
jo
ljmp
mov
ret
xlat
sar
loopne
jmp
loop
pushl
sub
call
call
add
push
das
add
dec
cs
dec
sub
add
dec
sub
decl
call
enter
loopne
jmp
fcmovbe
jmp
fcmovbe
jmp
fcmovbe
jmp
fcmovbe
jmp
fcmovbe
jmp
fcmovbe
jmp
fcmovbe
aad
aad
aad
aad
aam
aam
sar
aad
fcmovbe
lret
call
les
call
pop
inc
sti
es
add
add
push
add
add
incl
incl
add
add
dec
aaa
xchg
jnp
push
call
mov
call
mov
fcompp
aam
loope
jmp
loop
pushl
and
add
dec
sub
add
push
xor
call
add
dec
cs
dec
sub
add
push
xor
out
loopne
loope
loopne
fdivr
loopne
xlat
jmp
fcmovbe
jmp
fcmovbe
jmp
fcmovbe
jmp
fcmovbe
jmp
fcmovbe
aad
aad
aad
aam
aam
aam
sar
aam
lret
ret
dec
mov
test
subl
pop
dec
xor
pop
add
add
add
add
incl
incl
inc
cmp
and
inc
in
xchg
ljmp
mov
aam
sar
loope
aad
jmp
inc
and
pushl
and
cmp
add
dec
sub
call
add
push
das
add
dec
cs
dec
sub
add
ja
inc
push
in
out
xlat
jmp
fcmovu
jmp
fcmovu
jmp
fcmovbe
jmp
fcmovbe
jmp
fcmovbe
jmp
fcmovbe
jmp
fcmovbe
jmp
fcmovbe
aad
aad
aam
aam
sar
aam
fcmovnbe
int3
call
ret
mov
call
pop
inc
ljmp
pop
push
fwait
add
add
add
adc
incl
add
add
pop
dec
xor
call
lods
mov
into
aam
aam
aam
loop
fcos
out
ljmp
jmp
aaa
pushl
and
decl
add
push
xor
call
add
push
das
add
dec
cs
dec
sub
lods
jmp
loopne
jmp
fcmovu
jmp
fcmovu
jmp
fcmovu
jmp
fcmovu
jmp
fcmovbe
jmp
fcmovbe
jmp
fcmovbe
jmp
fcmovbe
aad
aad
aad
aam
aam
sar
aam
int3
dec
mov
test
jp
dec
incl
es
add
add
add
pop
add
add
add
add
jge
push
jmp
mov
ret
aam
sar
aam
aam
aam
loopne
aad
in
repnz
in
lcall
and
pushl
cs
push
xor
call
add
push
das
add
dec
cs
fs
and
out
ljmp
loope
fcos
loope
fcos
loopne
fdivr
loopne
fdivr
loopne
xlat
jmp
fcmovbe
jmp
fcmovbe
jmp
fcmovbe
aad
aad
aam
aam
aam
aad
fcmovbe
int3
call
ret
mov
jne
jmp
icebp
add
add
add
add
add
insb
push
inc
call
mov
xchg
dec
shlb
aad
sar
aam
aam
aad
aad
loopne
jmp
fcmovbe
aam
div
repz
and
cmp
add
push
xor
call
add
push
xor
call
add
push
das
add
int
jmp
jmp
fcmovu
jmp
fcmovu
jmp
fcmovu
jmp
fcmovu
jmp
fcmovu
jmp
fcmovbe
jmp
fcmovbe
jmp
fcmovbe
jmp
fcmovbe
aad
aad
aam
aam
fcompp
aam
fst
sar
rol
mov
call
pop
inc
jmp
pop
mov
add
cmp
add
or
pop
dec
push
jl
mov
les
fcompp
aam
aam
aam
aad
aad
loopne
jmp
fcmovbe
jmp
fcmovbe
jmp
fcmovbe
jmp
fcmovu
push
out
out
decl
sbb
xor
sub
call
add
push
xor
call
call
add
outsb
push
sub
jmp
jmp
fcmovu
jmp
fcmovu
jmp
fcmovu
jmp
fcmovu
jmp
fcmovu
jmp
fcmovbe
jmp
fcmovbe
jmp
fcmovbe
aad
aad
aam
aam
aam
sar
aad
sar
mov
jl
ja
dec
incl
sub
add
add
add
adc
dec
xchg
ja
dec
call
mov
call
mov
aam
aam
aam
aad
aad
loopne
jmp
xlat
xlat
jmp
loope
mov
and
cmp
add
pop
ss
push
xor
add
push
xor
call
add
rol
mov
jmp
fcmovnu
jmp
fcmovnu
jmp
fcmovnu
jmp
fcmovnu
jmp
fcmovnu
jmp
fcmovnu
aad
loopne
aad
aad
aad
aam
aam
aam
aam
fmul
enter
mov
stos
cwtl
xchg
jl
push
call
cmp
add
add
add
sbb
mov
lahf
mov
enter
aad
sar
fcom
aam
aam
aam
aad
aam
loopne
jmp
fcmovnu
jmp
fstp
jmp
loopne
jmp
jmp
fcmovu
clc
hlt
idiv
pop
dec
xor
xor
das
add
pop
ss
pop
xor
add
push
xor
pushl
ss
out
jmp
call
jecxz
call
jecxz
jmp
jecxz
jmp
jecxz
jmp
fstp
jmp
fstp
aad
aad
aad
aam
aam
aam
fcmovnbe
int3
call
ret
mov
nop
incl
push
inc
fiaddl
add
pop
add
add
bound
jnp
push
jmp
scas
call
int3
sar
aam
aam
sar
aad
ljmp
sti
cli
stc
std
std
std
std
std
std
cld
sti
cli
sti
stc
cli
ljmp
and
aas
es
pop
cmp
pop
aaa
add
pop
ss
push
xor
add
push
xor
call
add
push
xor
decl
add
dec
cs
dec
sub
decl
add
in
call
fcos
aad
aad
aad
aam
aam
fcompp
aam
iret
call
les
incl
pop
inc
ljmp
add
jns
dec
in
jnp
push
ljmp
mov
fcom
aam
sar
loope
in
ljmp
std
std
std
cld
cld
cld
sub
xor
cmp
lcall
lcall
add
pop
ss
pop
xor
add
push
xor
call
call
add
push
das
add
dec
cs
dec
sub
in
loop
fcos
aad
aad
aad
aam
aam
aam
fst
sar
rol
mov
incl
pusha
dec
cmc
add
add
add
and
dec
sti
jnp
push
ljmp
mov
fcom
sar
loope
xlat
ljmp
push
cmc
hlt
cld
cld
sti
decl
sub
dec
xor
jmp
or
pop
cmp
lcall
add
pop
ss
push
xor
add
push
xor
call
add
push
xor
decl
add
in
call
fcos
aad
aad
aad
aam
aam
aam
fst
sar
rol
mov
incl
bound
add
data16
add
js
dec
sti
jp
push
jmp
scas
call
int3
sar
loopne
aad
out
in
jmp
in
push
hlt
hlt
cld
sti
sti
push
lock
call
and
inc
das
push
jmp
ud0
or
pop
cmp
lcall
lcall
add
pop
ss
pop
xor
add
push
xor
call
call
add
in
call
fcos
aad
aad
aad
aam
aam
fcompp
aam
iret
call
les
incl
popa
dec
std
add
add
add
and
dec
in
js
dec
lcall
mov
sar
fcom
jmp
jmp
loop
jmp
in
lock
in
push
repz
sti
cli
cli
jmp
call
and
imul
jmp
or
lcall
add
lcall
add
push
xor
dec
xor
decl
add
dec
cs
in
call
fcos
aam
aad
aad
aam
aam
aam
fcmovnbe
int3
call
ret
mov
xchg
incl
pop
dec
cmc
add
add
add
pusha
dec
lcall
mov
call
mov
jmp
fcmovnbe
jmp
loope
ljmp
push
repz
cli
stc
clc
call
cmp
lcall
and
jno
push
ljmp
adc
gs
ud0
or
pop
cmp
lcall
call
add
xor
and
pushl
call
fcos
aam
aad
aad
aam
aam
aam
fnop
leave
dec
mov
mov
jle
push
ljmp
inc
jmp
add
add
jno
inc
mov
pop
inc
call
scas
mov
fmul
enter
aad
in
fdivr
call
jmp
push
icebp
out
stc
div
std
std
cld
push
div
call
and
push
ds
jae
and
je
and
imul
inc
adc
arpl
pushl
in
jmp
in
jmp
jmp
fstp
aam
aad
aam
aam
aam
aam
lret
ret
mov
jg
jp
dec
jmp
cmp
add
add
add
adc
inc
outsl
pop
inc
incl
movsl
xchg
call
ret
aad
ret
xlat
sar
jecxz
out
loopne
in
jmp
in
push
hlt
repz
sti
cli
stc
incl
cmp
ljmp
and
jne
and
je
and
outsb
dec
sbb
push
pop
xor
div
clc
jmp
fstp
jmp
fstp
jmp
fstp
aad
aad
aad
aad
aam
aam
aam
fst
sar
rol
mov
call
pop
inc
call
mov
add
add
pop
inc
pop
insb
push
ds
jl
push
ljmp
mov
mov
jmp
jmp
loope
ljmp
push
repnz
clc
div
std
cld
sti
jmp
loopne
call
and
push
aas
and
jne
and
jne
and
jne
and
jae
pop
ljmp
push
mov
in
aam
loopne
aad
loopne
aad
aad
aad
aam
aam
aam
aad
fcmovnbe
int3
call
ret
mov
mov
jbe
ljmp
incl
sub
add
add
push
pop
inc
call
scas
mov
call
into
aam
jecxz
call
jmp
in
push
repz
stc
clc
idiv
std
std
cld
jmp
cmp
push
cmp
ljmp
and
jne
and
jne
and
jne
and
jne
and
jne
and
rol
mov
out
aam
aad
aad
aad
aam
aam
sar
aad
xlat
int
dec
mov
xchg
jl
push
jmp
aaa
std
sub
sbb
add
sbb
add
add
incl
addr16
cmp
pop
inc
decl
pushf
mov
int
mov
aad
sar
aad
jmp
fcmovnbe
jmp
loope
jmp
in
jmp
push
hlt
repz
cli
stc
clc
std
std
std
pushl
cmp
call
and
jae
and
jne
and
jne
and
jne
and
jne
and
ja
es
mov
call
aad
aam
aam
aam
aam
fcmovnbe
iret
call
lds
call
pop
inc
call
sub
cmp
incl
incl
gs
aaa
aaa
imul
gs
call
mov
call
lds
sar
jecxz
fcos
out
jmp
in
out
in
ljmp
hlt
repz
cli
clc
clc
std
cld
cld
pushl
dec
call
and
pop
inc
and
jne
and
jne
and
jne
and
jne
and
jne
and
jne
and
mov
inc
mov
fcom
jmp
loop
jmp
fcmovbe
sar
aam
int3
dec
mov
xchg
test
ljmp
cmp
sub
add
add
incl
imul
mov
subb
stos
cwtl
xchg
int3
mov
mov
jmp
fcmovbe
jmp
jmp
in
ljmp
push
lock
push
repz
clc
div
sti
cli
cli
std
std
jmp
fstp
call
and
push
cmp
ljmp
and
jne
and
jne
and
jne
and
jne
and
jne
and
jne
and
jne
and
jne
and
test
in
out
jmp
fcmovnbe
fcmovbe
int3
call
les
call
pusha
dec
jmp
xor
pop
pop
subps
add
adc
add
add
incl
incl
incl
gs
aaa
cmp
cmp
call
stos
fwait
call
les
fcmovnbe
into
jmp
fcmovnbe
jmp
jmp
in
jmp
in
out
in
jmp
push
repnz
push
cmc
hlt
stc
clc
idiv
sti
cli
cli
cld
cld
sti
std
std
cld
std
jmp
cmp
call
and
push
push
and
jne
and
jne
and
jne
and
jne
and
jne
and
jne
and
jbe
and
in
call
sar
rol
mov
jmp
push
decl
and
daa
add
add
incl
incl
incl
incl
push
push
aas
jl
push
lcall
mov
call
les
into
jmp
fcmovnbe
jmp
jmp
jecxz
ljmp
push
out
jmp
repz
push
icebp
lock
hlt
repz
div
clc
div
stc
div
stc
clc
idiv
call
cmp
call
and
popa
inc
and
jae
and
jne
and
jne
and
jne
and
jne
and
jne
and
jnp
sub
ljmp
dec
mov
decl
pop
inc
jmp
xor
adc
or
add
adc
incl
incl
incl
incl
incl
incl
fs
cmp
cmp
outsl
pop
inc
incl
xchg
cmp
mov
call
lds
into
jmp
fcmovnbe
jmp
jmp
loope
call
call
out
out
in
ljmp
out
out
push
lock
push
icebp
out
push
icebp
out
push
repnz
sti
stc
stc
lcall
cmp
and
push
aas
and
push
push
and
jne
and
jne
and
jne
and
andl
jecxz
aad
int3
mov
xchg
call
pusha
dec
ljmp
aaa
incl
and
add
add
incl
incl
incl
incl
incl
incl
incl
arpl
push
cmp
jno
inc
incl
xchg
cmp
rol
mov
fcmovbe
int3
fcompp
aam
loop
fdivr
in
out
fdivrp
call
out
jmp
in
in
jmp
out
in
ljmp
in
ljmp
clc
div
dec
mov
call
and
push
cmp
call
and
pop
inc
and
gs
and
insb
dec
and
ja
fcmove
pushl
jle
pushl
dec
ljmp
cmp
dec
cmp
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
gs
xor
imul
pop
inc
incl
jle
ret
mov
call
ret
ror
mov
into
aad
loop
fdivr
jecxz
in
fdivr
out
fdivrp
out
loopne
out
loopne
call
in
jmp
in
jmp
jecxz
jmp
loop
out
jmp
jmp
loop
mov
jo
call
sub
push
cmp
call
pop
call
sbb
mov
jns
pushl
dec
ljmp
cmp
int
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
dec
ss
inc
incl
jge
shrb
call
mov
fcom
leave
iret
aam
loope
xlat
jmp
fstp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
fstp
jmp
fcmovnbe
jmp
fcmovnbe
jmp
loop
out
ljmp
leave
ret
mov
mov
dec
mov
pushl
dec
ljmp
lcall
loope,pn
push
adc
add
or
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
dec
xor
cltd
push
cmp
jo
inc
jg
push
call
sahf
inc
mov
call
ret
mov
call
leave
sar
int
lret
aam
fst
sar
sar
sar
sar
sar
fst
sar
into
fcmovbe
int3
fmul
call
lret
rol
mov
call
mov
ljmp
ja
pushl
ljmp
cmp
pop
inc
fnsave
and
inc
add
add
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
fs
xor
push
push
aas
pushl
dec
decl
mov
mov
xchg
inc
mov
dec
mov
mov
call
enter
lret
aad
ret
lret
ret
call
lret
ret
call
lret
ret
call
lret
aam
sar
mov
dec
shlb
mov
xchg
cmp
jnp
push
ljmp
inc
ljmp
cmp
push
inc
sub
add
pop
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
popa
dec
xor
dec
ss
push
cmp
outsb
pop
inc
pushl
dec
decl
xchg
cmpsl
xchg
test
mov
mov
dec
mov
mov
iret
shll
rol
mov
rol
mov
iret
shlb
mov
lahf
ljmp
mov
mov
jge
push
pushl
inc
ljmp
cmp
cld
dec
cmp
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
popa
dec
xor
dec
xor
push
push
cmp
jp
push
incl
jnp
lcall
xchg
cmp
popf
pushl
xchg
pushl
movsb
xchg
pushl
xchg
test
sahf
mov
xchg
jg
decl
imul
push
ljmp
cmp
pop
inc
das
iret
dec
cmp
or
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
popa
dec
xor
arpl
addr16
aaa
cli
imul
ljmp
inc
pushl
dec
jp
dec
jle
push
incl
outsb
pop
incl
insl
pop
jg
push
jnp
push
pushl
dec
pushl
inc
ljmp
aas
ljmp
cmp
addr16
ss
pop
inc
das
rorb
and
push
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
bound
xor
xor
xor
push
push
cmp
push
cmp
imul
push
ljmp
ljmp
ljmp
cmp
imul
jmp
xor
pop
inc
sub
mov
es
and
sldt
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
imul
pop
addr16
cmp
push
cmp
in
insb
push
ds
insb
push
ds
imul
push
cmp
addr16
cmp
pusha
dec
aaa
push
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
cmp
clc
add
pop
incl
add
loopne
add
decl
add
incl
or
add
add
incl
inc
incb
add
add
add
add
add
aas
add
clc
add
add
pop
add
add
add
str
lock
add
pop
add
loopne
add
add
add
loopne
add
add
add
rolb
add
add
incl
add
int3
addb
add
add
add
add
add
add
add
xor
add
incl
add
add
add
int3
add
add
add
cltd
cltd
add
add
add
data16
add
add
xor
add
incl
add
add
add
int3
add
add
add
cltd
cltd
add
add
add
data16
add
add
xor
add
incl
add
add
add
int3
addb
add
add
add
add
addb
add
add
xor
add
add
add
add
add
add
pop
jmp
add
add
pop
int3
int3
lock
add
setns
add
data16
add
add
pop
xor
cld
add
add
aas
add
incl
add
add
incl
int3
int3
inc
add
add
cltd
cltd
push
add
ud0
cld
add
aas
pushl
xor
incl
add
incl
add
add
add
add
adc
add
add
sub
add
add
adc
add
add
or
push
add
adc
add
add
add
add
add
and
adc
add
add
call
add
and
add
add
add
add
and
add
add
add
add
xor
add
add
push
add
xor
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
decl
add
andb
addb
add
add
addb
or
rol
jmp
addb
add
add
incl
add
incl
incl
incl
add
add
add
incl
decl
mov
or
decl
pop
xchg
testb
inc
ja
jg
divb
dec
ja
jg
clc
ja
xchg
ja
data16
incl
jg
push
xchg
add
push
add
add
push
add
ud0
push
add
jg
push
add
sysret
push
add
movq
push
decl
lret
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
rolb
xadd
rcrb
movaps
add
adc
add
and
add
add
or
add
add
incl
cld
sti
cld
add
stc
cli
add
idiv
xor
testb
icebp
repnz
lock
call
add
add
jmp
jecxz
cli
clc
clc
std
std
add
sti
sti
sti
cli
cli
push
icebp
icebp
jmp
jecxz
mov
rcl
dec
int
or
fadds
xlat
mul
loopne
ja
ror
mul
fstp
ja
call
loope
div
hlt
push
hlt
repz
leave
call
lret
push
call
loope
call
enter
iret
enter
lds
loopne
push
out
in
pxor
ljmp
shll
loop
sar
fst
iret
jmp
fcmovnbe
lock
rcr
roll
in
fldl
les
scas
rcl
ret
rcrb
rcr
aam
rol
out
ffree
rcrb
jb
mov
movsl
xchg
or
movsl
cltd
mov
mov
mov
rol
mov
add
ror
add
mov
add
fst
add
add
jns
dec
add
jl
or
subl
test
jmp
mov
mov
xchg
add
sarb
ror
add
dec
aad
ljmp
inc
icebp
out
jmp
out
jmp
add
fcmovbe
add
repz
add
repnz
lock
add
div
add
add
push
cmp
outsl
pop
inc
add
dec
add
dec
add
dec
add
add
imul
mov
add
jns
add
pop
incl
jo
ja
pop
add
xorb
jge
jp
popa
add
jb
add
cmpsl
fwait
add
and
int3
push
cmp
int3
jno
cmp
xchg
jl
int3
lahf
xchg
xchg
lods
mov
jle
leave
les
add
add
push
xor
cltd
push
xor
pop
cltd
fwait
mov
cltd
xchg
mov
mov
xchg
mov
add
cltd
pop
xor
add
aaa
add
push
xor
or
inc
sub
insw
push
daa
add
test
mov
andb
lods
cmpsl
data16
fiaddl
fstp
fdivs
pop
cmp
xor
adc
outsl
dec
sbb
jno
pop
add
and
jnp
add
cmp
test
add
dec
add
sbbb
flds
incb
std
add
cld
sti
add
cli
stc
add
clc
testl
repnz
add
lock
add
mov
add
std
add
cld
sti
clc
stc
clc
add
clc
idiv
cmc
div
add
repnz
out
lock
add
out
in
std
incb
sti
cld
cld
push
clc
clc
add
div
int3
icebp
repnz
icebp
icebp
int3
out
lock
out
out
int3
jecxz
in
fstp
fmulp
std
std
incb
stc
stc
cli
int3
cmc
cmc
testb
icebp
repnz
out
out
lock
in
out
cltd
incb
std
std
std
cltd
div
testl
repz
repnz
out
out
out
add
out
out
cltd
in
in
in
add
jmp
cltd
ljmp
in
in
in
in
loop
loop
loope
loope
loopne
loopne
fbld
fstp
add
data16
xlat
xlat
add
rcl
data16
int3
int3
add
leave
leave
xor
ret
ret
add
cltd
add
mov
xor
add
ja
je
je
insl
insl
insl
xor
data16
popa
add
pop
add
push
add
push
add
dec
add
add
xor
add
add
add
push
add
inc
dec
test
addr16
inc
xor
hlt
testl
add
inc
add
add
hlt
add
push
sub
inc
mov
mov
add
add
push
sbb
mov
sub
push
add
add
add
push
sbb
sbb
push
add
add
add
push
xchg
sbb
sub
or
add
add
add
sbb
xchg
stos
stos
jo
add
add
add
add
inc
sub
inc
push
push
add
icebp
add
add
add
add
push
push
add
or
icebp
add
add
add
or
or
add
or
icebp
icebp
add
add
add
add
or
std
add
add
hlt
add
add
or
or
les
std
add
adc
add
or
or
or
std
or
add
hlt
or
add
or
call
add
add
hlt
idiv
cli
cli
std
std
add
add
add
lock
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
rolb
xadd
rcrb
movaps
add
adc
add
and
add
add
and
incl
incl
mov
add
jne
stos
mov
out
jne
out
jne
stos
mov
pop
mov
add
incl
incl
incl
incl
incl
incl
incl
sub
push
add
pop
cmp
call
enter
out
jmp
iret
mov
lcall
inc
mov
add
outsl
add
add
add
outsl
push
push
push
jb
add
add
incl
incl
subb
mov
andb
das
add
push
cmp
push
repnz
jmp
loop
jmp
leave
sar
sti
sti
sti
sti
sti
incl
add
cmp
add
add
incl
incl
jle
push
lods
leave
mov
clc
ljmp
xor
lcall
lds
dec
mov
mov
cli
cli
cli
stc
stc
stc
incl
add
cmp
add
add
incl
incl
jns
dec
out
loopne
push
lock
ljmp
call
add
push
xor
dec
shlb
test
push
div
push
cmc
cmc
incl
add
cmp
add
add
incl
incl
je
inc
out
aad
jmp
loop
jmp
loop
xchg
jge
jmp
ud0
fcmovnbe
fst
into
incl
cmc
cmc
push
hlt
hlt
incl
add
cmp
incl
incl
jo
inc
lods
mov
lcall
fcmovnbe
inc
mov
and
jae
and
fwait
test
mov
lcall
repnz
out
out
out
incl
add
inc
add
add
incl
incl
imul
je
inc
mov
leave
fcmovbe
leave
pushl
sub
jl
das
incl
mov
out
jmp
add
inc
add
add
incl
incl
and
adc
push
inc
cs
test
ljmp
mov
scas
ljmp
jo
ljmp
in
in
jmp
fcmovnu
incl
add
inc
add
add
incl
incl
add
add
add
add
sarl
pushl
dec
pushl
dec
call
mov
in
in
in
fcomp
fdivr
lret
lret
lret
inc
mov
dec
incl
incl
incl
add
add
add
add
out
out
out
out
out
out
in
in
in
in
in
in
in
in
in
ljmp
mov
stos
stos
jmp
add
push
incl
incl
incl
add
add
add
add
jmp
ljmp
jmp
call
fcos
mov
xchg
xchg
decl
lcall
incl
incl
incl
add
add
add
add
out
jmp
out
jmp
out
jmp
out
jmp
jecxz
call
ljmp
push
div
inc
mov
add
incl
incl
incl
add
add
add
add
in
jmp
in
jmp
in
jmp
loope
call
aad
inc
ljmp
idiv
mov
add
incl
incl
incl
incl
add
add
add
add
jecxz
jmp
jecxz
rcl
sar
ret
ret
ret
pushl
mov
int
add
add
incl
incl
incl
incl
incl
add
add
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
and
add
add
incl
incl
incl
incl
incl
sarb
add
add
add
add
addb
sub
add
add
add
addb
add
add
addb
dec
orb
mov
add
add
add
add
add
add
add
adc
add
add
add
incl
add
mov
addb
addb
mov
rol
addb
mov
incl
incl
incl
add
incl
incl
incl
add
clc
mov
mov
decl
mov
mov
push
add
push
add
add
ja
add
add
lock
pop
mov
add
lock
js
add
js
add
push
add
xchg
ja
mov
push
add
dec
xorb
xchg
push
add
hlt
clc
pop
ja
xchg
push
add
ja
js
push
add
add
add
lock
inc
ja
add
lock
inc
ja
add
lock
ja
js
push
add
xchg
add
lock
add
inc
data16
add
lock
xchg
jg
js
add
lock
mov
ja
mov
push
add
js
xchg
xchg
add
lock
add
push
push
add
push
add
add
add
add
mov
push
add
add
add
add
decl
add
add
add
add
add
jg
push
add
add
add
add
add
push
add
add
add
add
pop
jg
push
add
add
add
add
ja
push
add
add
add
add
jg
push
add
add
add
add
clc
add
pop
lock
pop
lock
pop
lock
pop
lock
pop
lock
pop
lock
pop
lock
pop
lock
pop
lock
pop
lock
pop
lock
pop
lock
pop
lock
pop
lock
pop
lock
pop
lock
pop
lock
pop
lock
pop
lock
pop
lock
pop
lock
pop
lock
pop
lock
pop
lock
add
pop
lock
aas
lock
jg
add
push
add
push
add
ljmp
add
add
add
add
add
add
or
add
add
incl
cld
sti
cld
add
stc
cli
add
idiv
xor
testb
icebp
repnz
lock
call
add
add
jmp
jecxz
cli
clc
clc
std
std
add
sti
sti
sti
cli
cli
push
icebp
icebp
jmp
jecxz
call
rcl
dec
int
mov
fmuls
in
fdivrp
fcmovnbe
into
jmp
fstp
in
call
loope
div
hlt
mov
hlt
repz
int
call
lret
movl
call
loope
call
enter
iret
enter
lds
loopne
push
out
in
add
in
ljmp
shll
loop
rolb
fst
iret
add
fcmovnbe
ljmp
ja
roll
iret
lret
enter
fnstsw
lahf
nop
ja
mov
add
mov
ret
js
xchg
xchg
pop
loopne
aad
aam
roll
add
jle
xchg
movsl
xchg
add
cltd
mov
lret
mov
mov
xchg
ror
inc
iret
mov
jmp
fst
xchg
add
sbb
dec
incl
jl
inc
cltd
xchg
xchg
subl
test
inc
movsb
xchg
addb
lcall
mov
sarb
ror
pop
in
fidivl
fcmovbe
add
out
jmp
loop
add
out
jmp
out
jmp
add
fcmovbe
push
repz
add
repnz
cmpsb
movsl
movsb
clc
div
add
add
push
cmp
outsl
pop
inc
pushl
dec
add
dec
add
dec
mov
incl
imul
mov
call
jns
add
pop
pop
test
xchg
xorl
imul
xchg
xorb
jge
add
popa
add
jb
incl
cmpsl
fwait
add
and
call
adc
add
cmp
xchg
jl
lcall
mov
jle
leave
les
call
add
dec
sub
call
push
call
or
js
clc
fwait
mov
cltd
xchg
mov
mov
xchg
mov
lock
xor
lock
xor
add
pop
aaa
add
push
xor
or
inc
sub
lock
push
daa
lock
jge
lock
test
mov
andb
lods
cmpsl
lock
fstp
fdiv
pop
cmp
lock
lock
dec
sbb
jno
pop
lock
and
jnp
lock
cmp
test
lock
jne
lock
dec
add
sbbb
std
ljmp
stc
jmp
hlt
hlt
repz
repnz
mov
mov
mov
lcall
std
sti
cld
sti
clc
stc
clc
push
clc
testl
icebp
repnz
out
lock
out
out
in
out
out
cld
cld
jecxz
clc
clc
cmc
div
scas
icebp
repnz
icebp
icebp
imul
lock
in
out
out
add
in
fstp
fdivrp
std
std
stc
stc
cli
add
cmc
testb
icebp
repnz
out
lock
in
out
in
loope
std
std
aad
div
cmc
cmc
cmc
lods
repz
repnz
out
out
out
add
out
out
in
in
in
jmp
jmp
ljmp
add
in
add
in
jecxz
loop
jecxz
loope
fnstsw
loopne
rcr
ret
fstp
fnsave
xlat
xlat
xlat
int
rcl
add
int3
int3
dec
leave
leave
inc
ret
ret
mov
cltd
cltd
decl
mov
add
add
ja
je
je
insl
insl
insl
add
data16
popa
add
pop
add
push
call
push
decl
dec
incl
pushl
xor
incl
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
testl
add
std
add
add
add
add
add
add
add
mov
mov
icebp
icebp
icebp
hlt
icebp
icebp
add
add
add
add
add
add
add
add
add
les
or
int3
add
add
add
add
add
add
add
add
add
add
add
add
or
mov
add
add
add
add
add
add
add
add
add
add
adc
push
inc
mov
adc
add
add
add
add
add
add
add
add
adc
push
push
sbb
add
sbb
adc
add
icebp
add
add
add
add
add
add
add
pop
orb
or
or
mov
add
add
add
add
add
add
or
inc
push
dec
push
sub
or
or
jne
adc
add
add
add
add
add
add
add
add
jo
push
dec
push
add
or
sbb
jno
or
icebp
add
add
add
add
add
add
adc
and
sbb
dec
sub
or
or
mov
add
add
add
add
add
add
add
or
sbb
or
lea
or
and
add
add
add
add
add
add
add
adc
sbb
add
dec
or
dec
push
adc
icebp
add
add
add
add
add
add
sbb
sbb
add
sub
mov
and
addr16
add
add
add
add
add
add
or
add
dec
stos
stos
sub
or
mov
add
add
add
add
add
add
add
les
push
sbb
add
add
mov
sbb
or
or
icebp
add
add
add
add
add
add
les
sbb
les
add
mov
mov
dec
push
inc
int3
int3
icebp
add
add
add
add
add
add
les
sbb
sbb
sbb
stos
sub
mov
or
icebp
add
add
add
add
add
add
add
adc
jno
and
sbb
sbb
inc
adc
add
icebp
add
add
add
add
add
add
les
add
jo
inc
pop
sub
int3
add
add
add
add
add
add
add
add
add
les
or
push
push
push
push
mov
add
les
or
add
add
add
add
add
add
les
les
add
or
les
add
add
or
or
icebp
add
add
add
add
add
add
or
add
int3
add
or
or
int3
icebp
icebp
icebp
icebp
icebp
icebp
add
add
add
add
add
add
or
or
or
les
add
add
std
add
add
add
add
add
add
add
add
add
int3
or
int3
add
or
or
add
std
add
add
adc
add
or
add
or
or
or
std
add
add
add
add
add
hlt
add
les
add
or
les
or
or
or
add
adc
add
add
add
or
les
add
or
add
les
std
add
testl
or
or
or
or
or
std
adc
add
add
add
add
add
add
add
add
add
adc
add
icebp
icebp
hlt
hlt
hlt
hlt
hlt
div
cli
idiv
cli
cli
cli
cli
std
add
add
clc
add
pop
lock
pop
lock
pop
lock
pop
lock
pop
lock
pop
lock
pop
lock
pop
lock
pop
lock
pop
lock
pop
lock
pop
lock
pop
lock
pop
lock
pop
lock
pop
lock
pop
lock
pop
lock
pop
lock
pop
lock
pop
lock
pop
lock
pop
lock
pop
lock
add
pop
lock
aas
lock
jg
add
push
add
push
add
ljmp
add
add
add
add
add
add
and
incl
incl
incl
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
add
add
add
incl
incl
incl
incl
incl
incl
add
add
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aaa
add
add
incl
incl
incl
incl
incl
incl
add
add
add
inc
cld
cld
cld
push
div
out
out
out
call
in
jmp
jecxz
jmp
out
out
out
out
push
cmc
cmc
sti
sti
sti
cld
cld
cld
cld
cld
cld
cld
cld
cld
sti
sti
sti
sti
sti
sti
clc
clc
clc
incl
add
inc
add
add
incl
incl
incl
incl
incl
incl
add
add
add
inc
std
std
std
stc
stc
stc
ljmp
inc
rol
mov
mov
scas
scas
scas
ljmp
mov
inc
rol
rcl
sar
call
div
cli
cli
cli
sti
sti
sti
cli
cli
cli
cli
cli
cli
push
div
incl
add
inc
add
add
incl
incl
incl
incl
incl
incl
add
add
add
inc
std
std
std
push
div
jmp
loope
inc
rol
mov
mov
call
xorb
test
xchg
mov
inc
rol
repz
stc
stc
stc
cli
cli
cli
stc
stc
stc
push
div
incl
add
inc
add
add
incl
incl
incl
incl
incl
incl
add
add
add
inc
std
std
std
clc
clc
clc
jmp
loope
pushl
insl
call
out
out
out
out
out
out
jmp
call
jns
pushl
push
cmc
cmc
stc
stc
stc
stc
stc
stc
push
div
incl
add
inc
add
add
incl
incl
incl
incl
incl
incl
add
add
add
inc
std
std
std
std
std
std
sti
sti
sti
ljmp
incl
cmpsb
cltd
call
lret
out
out
out
fstp
loop
fdivr
loop
fdivr
loop
fdivr
out
out
out
out
out
out
call
jae
pushl
in
push
div
clc
clc
clc
push
div
incl
add
inc
add
add
incl
incl
incl
incl
incl
incl
add
add
add
inc
cld
cld
cld
cld
cld
cld
push
hlt
hlt
call
rcl
decl
cmpsb
cltd
decl
das
add
dec
sub
call
out
out
fcmovnbe
into
jmp
jmp
jmp
out
out
out
call
jge
dec
iret
iret
out
out
out
push
div
push
div
incl
add
inc
add
add
incl
incl
incl
incl
incl
incl
add
add
add
inc
sti
sti
sti
sti
sti
sti
in
in
in
ljmp
insb
pop
call
lret
decl
add
push
xor
decl
add
xchg
jg
fcmovnbe
into
jmp
jmp
jmp
fcmovnbe
iret
incl
mov
push
div
push
div
incl
add
inc
add
add
incl
incl
incl
incl
incl
incl
add
add
add
inc
sti
sti
sti
sti
sti
sti
jmp
in
call
enter
ror
fcmovnbe
into
call
lret
decl
add
push
xor
call
add
shll
jmp
jmp
jmp
jmp
fcmovnu
inc
mov
call
loopne
push
cmc
cmc
push
cmc
cmc
incl
add
inc
add
add
incl
incl
incl
incl
incl
incl
add
add
add
inc
cli
cli
cli
cli
cli
cli
jmp
loope
decl
ror
fcmovnbe
into
jmp
jmp
loopne
call
lret
decl
add
push
xor
pop
jmp
jecxz
jmp
jmp
call
enter
jl
fdivr
hlt
hlt
hlt
push
repz
add
inc
add
add
incl
incl
incl
incl
incl
incl
add
add
add
inc
cli
cli
cli
cli
cli
cli
jmp
loope
incl
sar
out
loopne
div
hlt
decl
add
pop
cmp
lcall
add
push
xor
call
add
out
jmp
jmp
jmp
call
int
incl
repnz
icebp
icebp
incl
add
inc
add
add
incl
incl
incl
incl
incl
incl
add
add
add
inc
stc
stc
stc
stc
stc
stc
jmp
in
incl
ror
ljmp
dec
ret
dec
es
bound
or
pop
cmp
out
jmp
jmp
jmp
call
int3
incl
fstp
out
out
out
out
out
out
incl
add
inc
add
add
incl
incl
incl
incl
incl
incl
add
add
add
inc
clc
clc
clc
clc
clc
clc
jmp
xorl
out
fdivrp
cmc
repnz
decl
add
sbbb
jo
pop
inc
mov
leave
jmp
jmp
dec
mov
jo
loope
loope
in
in
in
jmp
out
incl
add
inc
add
add
incl
incl
incl
incl
incl
incl
add
add
add
inc
clc
clc
clc
clc
clc
clc
out
out
out
jmp
imul
out
jmp
cli
stc
clc
ljmp
cmp
incl
mov
in
fdivrp
loop
fdivr
xlat
decl
cwtl
jmp
in
jmp
in
jmp
loopne
incl
add
dec
add
add
incl
incl
incl
incl
incl
incl
add
add
add
inc
div
idiv
div
idiv
cmc
cmc
cmc
dec
les
call
int3
jmp
loopne
push
in
jmp
stc
div
std
std
std
push
bnd
adc
incl
pop
adc
in
fdivrp
aam
sar
insl
pop
inc
mov
in
fcomp
fdivr
add
add
add
add
incl
incl
incl
incl
incl
incl
add
add
add
inc
cmc
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
lock
jbe
fmul
enter
in
call
in
push
icebp
out
call
ror
decl
add
dec
es
sbbb
int
mov
mov
lcall
loope
fdivrp
dec
into
into
incl
add
push
add
add
incl
incl
incl
incl
incl
incl
add
add
add
inc
cmc
cmc
cmc
push
cmc
cmc
push
hlt
hlt
push
repz
fstp
xlat
call
jbe
inc
mov
call
enter
fstp
jmp
loopne
jmp
int
ret
mov
pushl
jbe
call
into
lret
fdivr
dec
int
inc
add
add
add
add
incl
incl
incl
incl
incl
incl
add
add
add
inc
repz
repz
repz
repnz
icebp
icebp
fdivr
movsb
cwtl
mov
subb
xchg
subl
les
stos
jmp
subl
mov
iret
int3
fcmovu
rcl
sar
int3
int3
int3
inc
ret
mov
add
pop
add
add
incl
incl
incl
incl
incl
incl
add
add
add
inc
icebp
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
lock
lock
lock
in
in
in
dec
ret
movsb
cwtl
mov
mov
jns
dec
jns
dec
decl
xchg
mov
sarl
call
aam
dec
into
into
inc
mov
mov
mov
incl
add
popa
add
add
incl
incl
incl
incl
incl
incl
add
add
add
inc
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
in
in
in
in
in
in
in
in
in
in
in
in
jmp
jmp
out
out
fcomp
fdivr
mov
mov
pushl
scas
scas
ljmp
mov
add
incl
incl
incl
incl
incl
incl
incl
add
add
add
inc
out
out
out
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
jmp
jmp
jmp
jmp
ljmp
fstp
mov
cmpsl
call
nop
nop
decl
xchg
xchg
call
mov
inc
incl
incl
incl
incl
incl
incl
incl
add
add
add
inc
in
in
in
in
in
in
in
in
in
jmp
jmp
jmp
jmp
jmp
jmp
ljmp
ljmp
jmp
out
jmp
loop
call
rcl
pushl
jp
jp
je
je
jno
jno
jb
jb
addl
add
incl
incl
incl
incl
incl
incl
incl
add
add
add
inc
ljmp
ljmp
jmp
jmp
jmp
jmp
call
out
loope
loope
fcos
mov
movsb
js
js
jae
jae
jb
jb
addl
inc
ret
ret
dec
enter
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
inc
call
call
call
call
call
call
jmp
out
jmp
in
jmp
loopne
fcos
rcl
sar
mov
xchg
xchg
sti
sti
sti
cli
cli
cli
stc
stc
stc
clc
clc
clc
fcmovnu
incl
add
or
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
inc
out
out
out
out
out
out
out
out
out
out
out
out
out
out
in
in
in
in
fcomp
fdivr
rcl
sar
mov
mov
xchg
xchg
xchg
fdivr
ret
incl
add
and
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
inc
in
in
in
in
in
in
in
in
in
in
in
in
in
in
jecxz
jecxz
fstp
fcomp
fdivr
rcl
sar
enter
mov
lods
lods
lcall
jmp
loopne
inc
mov
and
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
inc
in
in
in
in
in
in
in
in
in
in
in
in
jecxz
jecxz
fstp
xlat
xlat
xlat
call
rcl
inc
mov
pushl
mov
movsl
fstp
mov
incl
add
and
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
inc
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
loop
loop
fdivr
dec
iret
iret
inc
mov
mov
mov
ljmp
cwtl
pushl
loopne
inc
mov
sbb
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
inc
loop
loop
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
loop
loop
fdivr
aad
aad
into
into
into
inc
mov
mov
mov
ljmp
mov
cltd
inc
mov
incl
add
push
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
mov
pushl
mov
pushl
mov
stos
stos
stos
jmp
popf
call
nop
nop
call
xchg
xchg
lcall
mov
add
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
add
jmp
add
jmp
add
jmp
add
ljmp
add
add
add
add
add
add
add
adc
add
add
add
incl
add
incl
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
add
add
clc
mov
mov
mov
clc
push
mov
mov
mov
push
add
add
add
add
add
add
add
add
clc
push
add
add
add
mov
add
or
push
add
add
ja
mov
mov
or
push
add
add
mov
mov
clc
push
add
pop
js
jo
add
add
ja
add
clc
push
add
pop
mov
ja
ja
ja
xchg
or
push
add
js
jo
add
ja
ja
jo
or
push
add
mov
inc
xchg
ja
ja
js
add
clc
push
add
xchg
dec
hlt
jo
ja
ja
mov
or
push
add
ja
decl
pop
ja
ja
mov
clc
push
add
ja
hlt
clc
pop
ja
ja
js
or
push
add
hlt
inc
jo
ja
ja
orb
push
pop
mov
ja
outsl
dec
addb
ja
js
or
push
pop
mov
jo
cmove
add
ja
xchg
clc
push
pop
push
or
inc
inc
lock
ja
addr16
push
pop
push
pop
hlt
inc
inc
lock
ja
addr16
push
pop
push
add
dec
lock
ja
addr16
push
add
add
ja
orb
push
add
add
add
js
or
push
add
add
testb
ja
orb
push
add
ja
add
pop
inc
addb
xchg
clc
push
add
push
add
mov
or
push
add
mov
add
add
hlt
pushaw
js
add
clc
push
add
jbe
ja
add
add
or
push
add
pop
push
add
mov
clc
push
add
add
ja
ja
ja
xchg
push
add
add
xchg
xchg
add
or
push
add
add
or
push
or
push
add
add
add
mov
add
or
push
add
add
clc
push
add
add
clc
push
add
add
clc
push
add
ud0
clc
push
add
sldt
add
js
push
add
sldt
add
push
add
sldt
pop
js
push
add
sldt
ja
push
add
sldt
js
push
add
ja
push
add
sysret
js
push
add
emms
push
add
vmread
push
add
jg
decl
add
aas
cld
add
add
aas
incb
cld
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
jg
add
add
add
cld
add
add
add
cld
add
add
add
cld
add
add
add
cld
add
add
add
cld
add
add
add
cld
add
add
add
cld
add
add
add
cld
add
add
add
cld
add
add
add
cld
add
add
add
add
add
add
add
or
add
add
incl
cld
sti
cld
add
stc
cli
add
idiv
xor
testb
icebp
repnz
lock
call
add
add
jmp
jecxz
cli
clc
clc
std
std
add
sti
sti
sti
cli
cli
push
icebp
icebp
jmp
jecxz
call
rcl
dec
int
ljmp
fmuls
in
fimuls
jecxz
fimull
out
loope
div
hlt
push
hlt
repz
int
call
lret
xbegin
call
loope
mov
enter
iret
enter
fcmovbe
push
out
in
add
in
ljmp
shll
loop
sar
fst
iret
add
fcmovnbe
add
jecxz
xchg
sar
iret
lret
enter
fldl
mov
nop
ja
mov
push
xlat
int3
ret
clc
pushf
xchg
xchg
jmp
fcmovbe
add
mov
fcom
add
loope
jo
fcmovbe
clc
lcall
add
movsl
xchg
add
cltd
mov
mov
mov
rol
mov
ja
ror
xchg
mov
jmp
fst
add
add
sbb
dec
mov
jl
lcall
subl
test
js
xchg
cmp
lcall
mov
sarb
ror
clc
in
aad
ljmp
pop
icebp
out
jmp
out
jmp
clc
fstp
xlat
push
repz
add
repnz
lock
pop
cmpsb
movsl
movsb
ja
div
clc
dec
es
push
cmp
outsl
pop
inc
jo
pop
dec
jo
arpl
bound
jl
push
incl
imul
mov
ja
jg
clc
mov
jp
pop
pop
test
xchg
xorl
imul
xchg
xorb
jge
pop
jp
popa
add
jb
ja
jns
clc
mov
fwait
pushl
and
pop
push
cmp
inc
jno
cmp
jl
clc
lahf
xchg
xchg
lods
mov
jle
leave
les
ja
das
add
dec
sub
call
push
add
or
js
fs
mov
cltd
xchg
mov
mov
xchg
mov
add
fs
xor
add
pop
aaa
add
push
xor
or
inc
sub
imulb
daa
ja
jge
clc
fwait
test
mov
andb
lods
cmpsl
inc
in
fidivl
fcmovnu
clc
pop
cmp
add
adc
dec
sbb
jbe
and
jnp
cs
jg
cmp
test
ja
jne
or
js
pop
adc
fcos
incb
std
ja
cld
sti
add
cli
stc
xchg
clc
idiv
hlt
hlt
repz
repnz
add
lock
ja
mov
mov
popf
popf
pushf
clc
std
std
sti
cld
sti
add
stc
clc
mov
clc
divl
div
xor
icebp
clc
out
lock
in
out
in
add
incb
idiv
clc
add
div
clc
icebp
repnz
icebp
icebp
add
lock
out
out
mov
in
add
clc
std
std
stc
stc
cli
add
cmc
testb
icebp
repnz
out
lock
in
out
clc
std
std
std
add
div
add
cmc
cmc
add
repz
repnz
out
out
out
out
out
out
add
in
in
add
jmp
add
ljmp
in
in
in
in
loop
loop
loope
loope
loopne
loopne
fstp
flds
xlat
xlat
xlat
add
rcl
add
int3
int3
dec
leave
leave
clc
ret
ret
ret
mov
cltd
cltd
add
mov
jl
jl
ja
ja
je
je
insl
insl
insl
add
data16
popa
lcall
pop
call
push
add
push
add
dec
add
add
xor
incl
add
hlt
xor
hlt
hlt
xor
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
xor
div
xor
div
hlt
cli
incl
testl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
cli
add
add
add
add
add
add
int3
les
adc
or
int3
int3
add
add
add
add
add
add
hlt
testl
add
add
int3
or
mov
push
mov
add
add
add
add
add
testl
add
add
add
add
add
add
add
add
or
icebp
push
jo
push
push
push
jo
push
mov
adc
add
add
add
hlt
cli
add
add
add
add
mov
inc
dec
or
add
or
add
add
add
add
hlt
testl
int3
adc
xorb
sbb
add
add
sbb
add
add
add
testl
add
add
add
add
add
int3
add
or
sbb
sbb
or
sbb
sbb
sbb
sub
push
adc
add
add
push
testl
sub
push
sub
add
addr16
sbb
sbb
sbb
sbb
inc
jo
or
add
int3
push
cli
add
add
sbb
dec
jno
or
or
sbb
sbb
sbb
push
jo
add
add
push
testl
push
xchg
sbb
add
dec
test
or
sbb
sbb
sbb
sbb
cmp
add
push
cli
add
les
addb
sbb
dec
orl
lods
adc
or
or
sbb
sbb
sbb
int3
push
testl
xchg
sbb
sbb
push
orl
jne
or
or
sbb
sbb
sub
or
add
hlt
test
sub
sbb
sbb
add
dec
mov
or
or
sbb
sbb
sbb
mov
add
push
cli
add
or
dec
or
or
or
push
orl
sbb
sbb
sbb
dec
inc
push
or
add
testl
add
add
add
add
add
adc
inc
dec
or
sbb
sbb
sbb
sahf
add
add
add
adc
sbb
inc
jo
add
push
cli
add
adc
inc
dec
or
sbb
add
add
mov
cmpsl
dec
add
sbb
sbb
inc
push
adc
add
hlt
testl
sbb
sbb
add
add
pop
xorl
add
sbb
sbb
inc
insb
adc
int3
push
cli
add
adc
inc
dec
sbb
addr16
add
add
mov
cmpsl
dec
dec
add
sbb
or
xchg
insb
adc
int3
push
test
sub
sbb
add
add
add
stos
mov
add
add
sbb
sbb
jo
or
push
cli
add
or
sub
sbb
add
add
add
stos
stos
stos
addr16
or
or
push
or
or
hlt
testl
xchg
sbb
or
add
add
add
stos
stos
mov
or
inc
scas
xchg
or
add
hlt
cli
add
add
or
addr16
add
adc
push
add
add
dec
inc
imul
testl
push
inc
dec
or
sbb
add
add
inc
subl
or
push
les
or
push
test
jo
inc
dec
or
sbb
addr16
dec
stos
stos
stos
stos
or
push
push
adc
les
add
hlt
cli
add
int3
add
pop
imul
or
sbb
sbb
or
inc
dec
dec
lods
dec
inc
imul
or
or
hlt
test
or
dec
sbb
or
sbb
sbb
and
or
or
or
push
testl
add
mov
inc
sub
and
sbb
sbb
dec
dec
inc
push
imul
add
push
testl
or
or
jno
inc
inc
inc
inc
sub
xchg
inc
jno
push
mov
les
add
add
or
hlt
cli
int3
int3
int3
sub
les
int3
or
jo
push
push
push
imul
int3
or
int3
or
push
test
or
les
pop
inc
mov
jo
inc
pop
adc
les
add
or
or
testl
add
add
add
add
or
add
les
addr16
les
les
or
or
int3
les
les
les
add
int3
int3
push
jo
les
int3
or
or
les
les
les
add
or
add
add
int3
or
or
hlt
testl
les
les
add
les
les
add
les
int3
or
or
or
or
or
int3
aam
push
testl
or
or
les
les
add
les
add
les
idiv
push
cli
add
les
add
or
or
les
les
les
les
int3
les
testl
add
adc
cmp
add
or
or
or
les
or
or
les
les
add
les
add
add
add
add
adc
cmp
add
testl
les
les
add
or
or
or
or
les
testl
adc
cmp
add
add
or
or
les
add
les
les
les
or
testl
adc
add
cli
les
add
les
les
les
les
les
les
add
testl
cmp
add
les
les
les
or
les
les
add
add
les
add
int3
or
add
adc
cmp
add
testl
add
or
les
or
les
or
les
add
add
cmp
add
add
or
les
add
les
les
add
or
or
les
int3
or
adc
cmp
cli
add
or
or
or
add
or
or
or
or
add
les
notl
add
add
or
add
or
or
or
or
add
or
or
or
or
idivl
incl
add
div
cli
div
div
cli
div
div
cli
div
div
cli
div
div
cli
incl
decl
icebp
incb
add
add
cld
add
add
aas
incb
cld
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
jg
add
add
add
cld
add
add
add
cld
add
add
add
cld
add
add
add
cld
add
add
add
cld
add
add
add
cld
add
add
add
cld
add
add
add
cld
add
add
add
cld
add
add
add
cld
add
add
add
add
add
add
add
and
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
pop
push
pop
pop
add
add
add
add
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
jns
add
jns
push
push
push
add
cmp
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
repz
std
std
std
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
pushl
cmpsl
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
std
stc
stc
stc
push
icebp
icebp
ljmp
jmp
loopne
fdivrp
loopne
loopne
in
in
ljmp
stc
stc
stc
jns
jns
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
stc
stc
push
div
jmp
out
call
rcl
mov
mov
jmp
pushf
pushf
lcall
pushf
pushf
jmp
mov
mov
iret
iret
jmp
loop
push
repnz
stc
stc
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
cli
cli
cli
sti
sti
sti
cld
cld
cld
pushl
jne
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
stc
stc
stc
stc
stc
jmp
iret
iret
ljmp
lea
jns
pusha
pushl
push
pushl
dec
pushl
dec
pushl
dec
pushl
push
jns
pop
jg
outsb
decl
test
leave
jmp
jecxz
push
hlt
hlt
cli
cli
cli
sti
sti
sti
cli
cli
cli
cli
cli
cli
cli
cli
cli
cld
cld
cld
pushl
jne
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
stc
stc
stc
stc
stc
mov
lea
decl
xchg
test
lret
jmp
fcom
push
out
jmp
clc
cmc
hlt
push
repz
jmp
loopne
int3
pushl
push
decl
mov
fcomp
fdivr
repnz
cli
cli
cli
cli
cli
cli
cli
cli
cli
stc
stc
stc
sti
sti
sti
pushl
jne
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
stc
stc
std
std
std
std
std
std
clc
clc
clc
mov
scas
jge
incl
mov
mov
clc
cmc
repz
cld
cld
sti
sti
cli
cli
clc
div
stc
clc
idiv
cld
cld
cld
cld
sti
cli
push
out
jmp
loop
sar
shlb
pushl
pop
jmp
push
repnz
clc
clc
clc
stc
stc
stc
stc
stc
stc
sti
sti
sti
pushl
jbe
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
clc
clc
std
std
std
clc
clc
clc
jmp
loopne
pushl
popa
call
mov
jmp
ljmp
jmp
fstp
jmp
fcmovbe
aad
aam
aam
loopne
aad
loope
xlat
jmp
fcompp
jmp
jmp
fst
call
ret
mov
pushl
push
jmp
xlat
push
repnz
stc
stc
stc
clc
clc
clc
cli
cli
cli
pushl
jbe
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
div
cld
cld
sti
cld
cld
ljmp
jnp
popa
call
mov
call
enter
push
lock
push
lock
sar
aam
aam
sar
sar
sar
sar
sar
int3
dec
shll
jne
push
ljmp
loope
push
cmc
idiv
div
idiv
stc
stc
stc
pushl
ja
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
div
cld
cld
cld
push
div
call
rcl
incl
gs
scas
mov
incl
add
push
xor
call
adc
subl
aam
lock
aad
loopne
aad
aad
aad
aad
aam
aam
aam
fst
into
dec
mov
jb
jns
pop
inc
mov
in
in
in
push
div
clc
clc
clc
js
js
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
div
cli
cli
cli
jmp
in
ljmp
push
pushl
lret
loopne
cmp
add
push
das
add
dec
sub
aas
push
add
pop
inc
and
aad
push
lock
jmp
fcmovbe
jmp
fcmovbe
jmp
fcmovbe
aad
aad
aam
aam
aad
fxch
enter
mov
lcall
fstp
push
cmc
cmc
clc
clc
clc
jns
jns
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
div
push
cmc
cmc
call
rcl
jg
lcall
shll
loopne
pushl
push
or
cmp
add
dec
sub
call
add
inc
and
pushl
cmp
loope
fdivr
repnz
jmp
fcmovbe
jmp
fcmovbe
jmp
fcmovbe
jmp
fcmovbe
aad
aad
aam
sar
aad
sar
xchg
test
jbe
push
dec
lret
lock
div
jns
jns
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
div
in
in
in
pushl
fs
pushl
ror
aad
loopne
decl
and
decl
add
push
xor
incl
add
cltd
xchg
jmp
fcmovu
jmp
fcmovu
jmp
fcmovbe
jmp
fcmovbe
jmp
fcmovbe
aad
aam
aad
fst
iret
inc
mov
jle
push
ljmp
call
idiv
jns
jns
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
div
jmp
in
call
jb
inc
mov
fst
sar
aad
aam
aad
in
lcall
sbb
call
add
push
sub
push
dec
lds
jmp
fcmovu
jmp
fcmovu
jmp
fcmovbe
jmp
fcmovbe
aad
aad
aam
aam
iret
ret
xchg
jle
call
loope
push
div
jns
jns
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
hlt
hlt
jmp
loopne
incl
subb
les
aam
aad
aam
aam
loopne
xlat
ljmp
dec
cmp
add
dec
and
popa
jmp
loopne
jmp
fnstsw
jmp
loopne
jmp
fstp
jmp
fcmovbe
aad
aam
aad
fmul
xchg
cmp
jne
fcmovu
div
idiv
js
js
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
div
fdivr
jns
push
jmp
lret
aad
aam
aam
loope
xlat
jmp
jecxz
ljmp
push
lock
pushl
and
push
xor
call
ljmp
daa
jmp
jecxz
aad
aam
loopne
aad
fcmovnbe
lret
pushl
push
call
aad
push
cmc
cmc
js
js
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
div
fcos
jae
dec
jmp
into
aad
ljmp
std
std
std
pushl
incl
add
pop
cmp
push
xor
or
push
ss
push
xor
decl
add
jmp
jecxz
aam
aad
fcmovnbe
int3
pushl
pop
dec
call
rcl
push
repz
pushl
jbe
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
div
fcmovnu
outsl
pop
inc
jmp
into
fcmovbe
jmp
loope
push
lock
cli
cli
stc
inc
sarb
pop
cmp
lcall
lcall
add
push
xor
call
decl
add
jmp
jecxz
aam
aad
fcmovnbe
int3
pushl
pop
inc
call
aam
push
icebp
icebp
pushl
jbe
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
div
fdivrp
jb
dec
lcall
lret
loopne
jmp
jecxz
push
out
in
clc
div
clc
div
jmp
aaa
incl
push
jmp
or
pop
cmp
decl
cmp
add
jmp
jecxz
aad
aam
aad
fcmovbe
lret
lahf
pushl
dec
call
xlat
xlat
push
out
out
pushl
jne
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
div
jmp
in
jnp
push
call
shll
in
fdivrp
out
in
jmp
call
sub
pushl
sbb
pusha
cmp
inc
jmp
jecxz
aad
aam
aad
xlat
int3
ret
jmp
push
fcmovu
out
out
out
pushl
stos
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
div
jmp
jge
incl
test
jmp
jmp
in
repz
sti
sti
cli
inc
mov
adc
jb
and
outsb
dec
pop
jp
cs
out
jmp
jmp
loope
aam
aad
aam
aam
iret
ret
xchg
jg
decl
loopne
in
in
in
pushl
jae
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
cmc
cmc
push
icebp
icebp
jmp
pop
inc
pushl
lret
sar
call
jmp
push
hlt
repnz
cld
cld
sti
sti
cli
cli
jp
pop
incl
push
pushl
and
outsb
dec
sbb
popf
xchg
jmp
loopne
aam
aad
int
mov
addr16
jmp
in
ljmp
pushl
jae
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
hlt
hlt
push
cmc
cmc
call
into
lret
pusha
dec
call
mov
leave
jmp
ljmp
push
cmc
hlt
std
sti
sti
call
int
jmp
adc
jo
pop
pushl
and
jo
sbb
xchg
jge
sar
aad
mov
ljmp
inc
sarl
jmp
pushl
jno
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
repz
push
cmc
cmc
push
icebp
icebp
jmp
arpl
scas
pushf
mov
rol
mov
jmp
ljmp
push
repz
cli
clc
clc
std
cld
sti
std
std
lcall
sub
pushl
and
ja
and
jo
sbb
ja
and
push
lock
int
mov
outsb
pop
decl
jecxz
call
out
pushl
jo
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
icebp
repz
std
std
push
hlt
hlt
push
hlt
hlt
jmp
in
jp
push
incl
cmpsl
cwtl
call
lret
into
jmp
jmp
jmp
in
push
icebp
lock
hlt
repz
stc
div
push
repz
incl
push
ljmp
push
pushl
and
jae
sbb
jmp
jecxz
inc
mov
decl
pop
inc
dec
int
jmp
out
jmp
in
jmp
in
std
std
cld
ljmp
outsl
stos
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
lock
cld
cld
cld
push
repz
repz
out
out
out
pushl
push
cmp
inc
mov
call
lret
iret
jmp
fstp
jmp
loope
ljmp
in
ljmp
icebp
out
in
out
in
ljmp
inc
adc
inc
sub
incl
push
jg
cmp
aam
mov
ljmp
inc
lcall
loop
jmp
in
jmp
jecxz
jmp
loope
clc
clc
clc
ljmp
insl
stos
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
out
out
cli
cli
cli
push
icebp
icebp
push
icebp
icebp
push
icebp
icebp
out
out
out
pushl
pop
inc
decl
mov
mov
into
jmp
fcmovbe
jmp
jmp
jmp
loopne
jmp
loopne
jmp
loopne
ljmp
ljmp
xchg
test
test
mov
outsb
pop
inc
call
jmp
jecxz
jmp
loop
jmp
loopne
cmc
cmc
cmc
ljmp
stos
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
in
in
stc
stc
stc
push
lock
lock
lock
out
out
out
in
in
in
ljmp
push
cmp
jl
push
jmp
cmpsl
call
lds
fcmovbe
leave
fcmovnbe
int
fcmovnbe
int
fcmovnbe
int
fcmovbe
lret
into
call
lret
rol
mov
mov
ja
ljmp
cmp
jmp
loope
jmp
jecxz
jmp
loop
fdivrp
fstp
icebp
icebp
icebp
ljmp
imul
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
in
in
clc
clc
clc
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
jmp
jmp
mov
imul
pop
inc
incl
lea
mov
xchg
inc
mov
inc
mov
scas
inc
mov
movsl
mov
xchg
cmp
js
pushl
dec
pushl
dec
jmp
loope
jmp
loop
jmp
loope
fstp
fcmovnu
fcmovnu
jmp
jmp
gs
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
in
in
push
div
in
out
out
out
out
out
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
jmp
in
ljmp
fs
ljmp
cmp
je
dec
jge
push
incl
je
incl
push
pushl
dec
ljmp
pushl
inc
lcall
fcom
jmp
loop
jmp
loope
fstp
fdivr
fcmovu
fcos
aam
aam
loope
loope
popa
popa
popa
test
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
ljmp
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
jmp
jmp
jmp
jmp
jmp
jmp
ljmp
mov
xchg
mov
xchg
xorl
je
jg
pop
incl
xorb
xchg
mov
mov
cmpsl
call
into
lret
loopne
jmp
fsubp
fstp
fcmovnu
fcmovu
fcos
fcomp
fdivr
aad
aad
rcl
sar
lret
lret
lret
call
lcall
pop
test
add
pop
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
jmp
hlt
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
ljmp
ljmp
ljmp
jmp
jmp
ljmp
jmp
jmp
jmp
out
jmp
in
jmp
loopne
fcmovu
aad
aad
int
int
lret
lret
lret
dec
lret
lret
lret
lret
dec
lret
mov
sar
mov
int3
jmp
pusha
mov
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
jmp
repz
ljmp
ljmp
ljmp
jmp
jmp
jmp
jmp
jmp
jmp
call
out
jmp
in
jmp
in
jmp
loope
fcmovu
iret
iret
iret
inc
ret
ret
pushl
mov
pushl
mov
pushl
lods
lods
ljmp
test
ret
dec
dec
imul
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
call
repz
jmp
jmp
jmp
jmp
call
call
jmp
jmp
jmp
call
out
jmp
out
jmp
in
jmp
in
jmp
loope
inc
pushl
fwait
fwait
call
mov
decl
mov
jmp
cwtl
cwtl
fldl
add
adc
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
out
push
repnz
call
call
call
call
call
call
call
call
call
jmp
out
jmp
in
jmp
in
jmp
loop
jmp
loope
fdivr
rcl
sar
mov
mov
jle
imul
jmp
popa
jmp
pushl
jae
popf
popf
popf
jmp
sub
aaa
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
out
push
icebp
icebp
jmp
out
call
call
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
in
in
in
in
jecxz
jecxz
loop
loop
loope
loope
fstp
fcmovu
int
int
mov
mov
cwtl
cwtl
cwtl
lcall
xchg
xchg
call
xchg
xchg
jmp
mov
repnz
sub
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
in
out
out
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
in
jmp
in
jmp
jecxz
jmp
loope
jmp
loopne
fdivrp
fcmovnu
xlat
xlat
xlat
dec
lret
lret
ljmp
cwtl
cwtl
cld
cld
cld
dec
int
out
sbb
sbb
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
in
in
in
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
jecxz
jmp
loop
jmp
loopne
fstp
fcmovnu
fcos
aad
aad
mov
stos
call
sti
sti
sti
push
icebp
icebp
mov
and
cmp
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
jecxz
out
out
out
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
jecxz
jmp
loope
jmp
loope
fdivrp
fstp
fcmovu
fcos
call
rcl
inc
cmpsb
cmpsb
cmpsb
call
cld
cld
cld
in
in
in
inc
ret
and
and
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
loop
in
in
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
jecxz
jmp
loop
jmp
loope
jmp
loopne
fstp
fdivr
fcmovnu
fcos
xlat
xlat
xlat
call
call
rcl
inc
rol
sahf
sahf
sahf
lcall
div
push
repnz
rol
adc
adc
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
loop
in
in
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
jecxz
jmp
jecxz
jmp
loope
jmp
loopne
jmp
loopne
fdivrp
fstp
fcmovnu
fcos
fcomp
fdivr
xlat
xlat
xlat
call
aad
call
aam
dec
lret
lret
mov
cltd
cltd
jmp
repnz
mov
and
cmp
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
loope
in
in
in
jmp
jecxz
jmp
jecxz
jmp
jecxz
jmp
jecxz
jmp
jecxz
jmp
loop
jmp
loope
jmp
loopne
fstp
fdivr
fcmovnu
fcos
fcomp
fdivr
xlat
xlat
xlat
call
aad
call
rcl
dec
into
into
inc
pushl
cltd
cltd
pushl
enter
and
cmp
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
loopne
loopne
jmp
jmp
jecxz
jecxz
loop
loop
loop
loop
loop
loop
loope
loope
loopne
loopne
fdivrp
fdivr
fcmovu
fcos
fcomp
fdivr
call
aad
call
aad
call
rcl
dec
leave
leave
mov
lods
lods
ljmp
mov
out
sbb
sbb
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
cmp
out
push
icebp
icebp
ljmp
jmp
jmp
jmp
call
out
out
out
in
in
jecxz
jecxz
loop
loop
loope
loope
fdivrp
fdivr
fcmovu
xlat
xlat
xlat
call
rcl
inc
mov
mov
mov
out
sub
cmp
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
push
push
push
and
fcomp
cli
out
out
fdivrp
fstp
fstp
fdivr
fdivr
fcmovnu
fcmovu
fcomp
fdivr
xlat
xlat
xlat
call
call
aad
call
aam
call
rcl
dec
iret
iret
dec
int
inc
mov
pushl
mov
cli
xchg
xchg
xchg
mov
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incb
add
add
clc
add
add
aas
int3
int3
clc
add
add
aas
cltd
cltd
clc
add
add
aas
data16
add
add
aas
xor
clc
add
add
aas
add
clc
add
add
aas
clc
add
add
aas
int3
int3
clc
add
add
aas
cltd
cltd
clc
add
add
aas
data16
add
add
aas
xor
clc
add
add
aas
add
clc
add
add
aas
clc
add
add
aas
int3
int3
clc
add
add
aas
cltd
cltd
clc
add
add
aas
data16
add
add
aas
xor
clc
add
add
aas
add
clc
add
add
aas
clc
add
add
aas
int3
int3
clc
add
add
aas
cltd
cltd
clc
add
add
aas
data16
add
add
aas
xor
clc
add
add
aas
add
clc
add
add
aas
clc
add
add
aas
int3
int3
clc
add
add
aas
cltd
cltd
clc
add
add
aas
data16
add
add
aas
xor
clc
add
add
aas
add
clc
add
add
aas
clc
add
add
aas
int3
int3
clc
add
add
aas
cltd
cltd
clc
add
add
jg
data16
add
add
jg
xor
add
add
jg
add
add
add
clc
add
add
dec
int3
clc
add
add
lcall
add
jmp
clc
add
add
pushl
xor
add
add
incl
add
add
add
clc
add
add
int3
int3
clc
add
add
lcall
add
jmp
cld
add
add
pushl
xor
add
ud0
add
add
add
or
adc
adc
add
add
sub
add
or
adc
add
add
or
push
add
adc
add
add
add
add
or
and
adc
add
add
call
add
and
add
add
add
add
and
add
add
add
add
xor
add
add
push
add
xor
add
add
add
add
xor
add
add
add
add
add
add
add
add
dec
add
adc
aas
add
dec
add
or
inc
add
loope
add
add
and
add
or
inc
add
add
or
dec
add
add
or
dec
add
dec
add
or
push
add
dec
add
or
push
add
dec
add
or
push
add
add
push
dec
add
or
pop
add
loope
add
add
add
add
or
or
add
add
add
dec
add
add
add
sub
add
and
add
inc
add
add
add
add
add
add
add
add
incl
pop
incb
add
incb
add
add
jg
add
outsl
incb
add
add
insl
mov
add
mov
add
add
or
add
or
add
or
add
or
add
add
add
inc
add
inc
add
inc
add
inc
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
jmp
dec
jmp
jmp
jmp
jmp
push
incl
add
add
add
sub
add
adc
add
and
add
add
add
add
add
inc
add
add
incl
add
lods
addl
incb
add
add
add
jg
mov
outsl
cmc
add
mov
add
mov
or
mov
add
push
add
cmc
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
loope
add
loope
add
loope
add
repz
add
add
add
add
add
add
add
add
add
xor
add
adc
adc
and
add
add
mov
add
adc
add
add
add
or
or
sub
add
and
add
inc
add
add
add
add
add
add
add
add
incl
add
add
add
add
pop
lock
psubb
add
clc
add
pop
cld
add
aas
cld
add
ja
add
incb
add
testb
or
mov
add
mov
add
mov
add
addb
add
add
clc
pop
clc
pop
push
pop
jmp
add
inc
add
inc
add
incl
add
incl
add
call
add
jmp
add
inc
add
jmp
ud0
jg
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
add
scas
addl
lock
psubb
add
clc
add
pop
cld
mov
add
cld
add
addr16
popf
add
mul
add
mov
add
mov
add
mov
add
addb
add
scas
cmp
pop
mov
add
add
rolb
push
rolb
push
addb
dec
add
dec
dec
add
add
add
cmp
add
add
add
add
add
inc
pop
in
inc
dec
jg
dec
add
add
add
add
add
and
inc
add
add
add
add
adc
add
add
add
add
sub
add
and
add
inc
add
add
add
add
add
add
add
add
incl
incl
add
add
add
add
add
add
add
add
xor
add
pop
add
add
add
push
add
jb
add
testb
add
jb
outsb
add
add
add
dec
push
add
jb
imul
add
imul
jb
outsb
add
add
add
xor
xor
xor
and
add
inc
add
add
jae
and
jp
add
add
outsb
add
add
jne
popa
add
add
add
add
add
dec
add
add
add
add
add
add
add
je
je
add
add
add
arpl
push
add
add
add
add
inc
add
jae
jo
imul
add
add
add
dec
dec
push
add
add
add
push
add
outsb
add
add
dec
pop
add
jb
cld
add
imul
add
jne
insb
add
outsb
add
add
add
push
add
jb
ja
in
jb
je
jae
add
add
dec
dec
pop
add
jb
cld
add
imul
add
add
inc
add
insb
add
and
outsb
add
arpl
push
add
add
add
add
add
add
add
add
inc
add
outsb
add
je
add
add
outsb
add
add
add
add
add
add
inc
add
jne
arpl
imul
add
add
add
add
add
add
and
push
add
push
outsb
add
add
insb
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
add
add
add
add
add
loope
add
add
jae
jae
arpl
push
add
add
outsb
add
add
add
loope
add
outsl
add
imul
add
add
add
and
add
outsb
add
cld
add
add
add
add
and
add
add
arpl
push
add
add
insb
add
add
and
popa
add
jae
ja
in
push
add
add
nop
add
add
add
sub
add
outsb
add
outsb
add
add
add
jb
imul
add
add
data16
outsb
add
and
imul
add
imul
add
adc
add
add
add
add
add
and
add
add
data16
add
add
add
add
add
je
jb
add
add
add
add
push
dec
push
add
push
add
filds
add
or
push
add
add
sub
push
add
add
inc
add
jne
arpl
imul
add
add
add
add
add
add
jb
outsl
add
add
je
outsl
add
and
add
jae
je
add
add
outsb
add
add
add
add
add
add
outsb
add
add
or
push
add
add
sub
push
add
add
add
add
outsb
add
imul
je
add
add
dec
dec
xor
xor
xor
and
add
add
insb
add
add
and
jp
add
add
outsb
add
add
push
add
jb
add
jb
testb
add
jb
outsb
add
add
add
dec
push
add
jb
add
insb
add
imul
jb
outsb
add
add
add
outsl
add
add
imul
or
push
add
add
sub
inc
add
add
insb
add
je
in
je
add
add
inc
dec
dec
add
add
add
add
add
add
add
je
je
add
add
add
outsl
add
push
add
add
sub
dec
add
add
add
add
je
add
add
jne
outsb
add
add
add
inc
dec
add
bound
jae
jo
imul
add
or
push
add
add
sub
inc
add
outsb
add
popa
add
add
add
add
dec
add
jne
jb
cld
add
imul
add
jne
insb
add
outsb
add
add
je
jb
add
add
add
dec
dec
push
add
push
add
add
add
add
outsl
add
or
push
add
add
sub
sub
add
add
push
add
push
add
add
add
add
jne
jb
cld
add
imul
add
je
jb
add
add
sub
add
add
add
add
imul
add
push
add
outsb
add
add
add
insb
add
add
add
add
add
and
push
add
push
outsb
add
add
insb
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
add
add
add
add
add
add
add
add
add
add
add
add
add
imul
add
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
add
or
dec
add
and
push
add
outsb
add
and
push
add
jb
imul
add
add
add
add
add
add
add
incl
add
add
add
add
add
push
add
add
pop
add
add
adc
incl
add
add
add
push
add
add
and
pop
add
incl
add
outsb
add
add
insb
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
add
add
add
add
add
add
add
add
incl
add
add
add
add
add
ja
ja
add
popa
add
jb
outsl
add
add
add
add
outsl
add
add
add
add
add
add
add
add
add
incl
add
jns
jb
imul
je
and
sub
inc
add
add
add
add
add
add
add
add
add
add
add
popa
add
jb
outsl
add
add
add
sub
and
dec
add
arpl
add
add
add
add
add
addb
add
push
add
add
add
add
add
add
add
data16
add
add
or
dec
add
and
push
add
outsb
add
and
push
add
jb
imul
add
add
add
add
add
add
add
add
add
incl
add
add
and
push
add
add
add
add
and
dec
add
je
add
outsb
add
je
popa
add
add
jae
jae
add
add
add
push
add
add
add
add
jb
and
add
outsb
add
and
insb
add
imul
add
add
add
add
add
and
popa
add
sub
and
add
add
add
imul
testb
add
outsb
add
outsb
add
add
testb
add
je
add
add
add
add
add
add
push
add
add
pop
add
add
add
add
incl
add
data16
add
cmp
add
add
add
addb
push
add
add
sub
sub
lods
add
add
add
add
add
add
add
push
add
add
sub
inc
add
add
add
add
incl
add
push
add
add
add
xor
push
add
add
incl
add
jb
add
push
add
add
add
add
push
add
add
sahf
add
aaa
add
add
add
incl
add
jb
arpl
push
add
push
add
add
add
add
add
add
pop
add
outsl
add
and
popa
add
popa
add
je
add
add
ds
pop
add
outsl
add
and
popa
add
jb
imul
add
add
add
xor
xor
xor
and
add
inc
add
data16
arpl
push
add
add
add
je
adc
push
add
popa
add
add
add
add
add
dec
add
data16
add
imul
jb
add
add
add
add
jns
add
outsb
add
add
addb
dec
push
add
jo
jmp
add
jne
jb
add
add
dec
add
jb
add
add
add
inc
add
jne
arpl
insb
add
add
cmp
add
insl
add
outsl
add
imul
jb
add
add
dec
dec
inc
add
and
popa
add
popa
add
je
add
add
dec
dec
inc
add
and
popa
add
jb
imul
add
add
add
inc
add
imul
je
imul
and
outsb
add
outsb
add
add
push
add
jmp
add
add
add
add
push
add
jb
popa
add
call
add
jae
add
add
add
add
dec
add
jo
jb
imul
jb
add
add
add
add
add
jb
outsl
add
outsl
add
and
add
and
push
add
push
outsb
add
add
insb
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
add
add
add
add
add
add
add
add
loope
add
outsl
add
jo
add
add
add
and
inc
add
add
imul
add
add
and
add
insb
add
add
add
add
and
add
jne
jo
jo
jb
imul
jb
addb
loope
add
add
add
je
imul
outsb
add
jb
and
add
add
je
add
add
add
nop
add
add
add
sub
add
jb
imul
addb
loope
add
jo
imul
and
insb
add
and
insb
add
add
adc
add
imul
imul
add
add
and
add
jne
jbe
jb
imul
add
add
add
je
jb
insb
add
add
add
add
push
dec
add
add
insl
add
jb
or
inc
add
add
add
add
push
dec
dec
add
jo
jb
imul
jb
add
add
add
add
inc
add
add
jmp
add
add
jb
outsl
add
add
je
imul
add
add
add
add
jne
imul
add
or
inc
add
add
add
add
adc
inc
add
data16
arpl
add
popa
add
add
add
add
xor
xor
xor
and
add
inc
add
data16
arpl
push
add
add
add
je
add
inc
dec
pop
add
outsl
add
and
add
jbe
popa
add
je
add
add
ds
pop
add
outsl
add
and
popa
add
add
jb
imul
add
add
push
add
add
outsb
add
add
add
add
jb
popa
add
or
inc
add
add
add
nop
add
jne
popa
add
add
add
add
add
dec
add
data16
add
imul
jb
add
add
add
add
jns
add
outsb
add
add
addb
dec
add
jne
jo
jmp
add
jne
jb
add
add
je
jb
insb
add
add
add
adc
add
outsl
add
je
jb
hlt
add
add
add
add
add
add
add
add
je
jb
insb
add
add
outsb
add
add
add
add
add
cmp
add
add
bound
outsl
add
imul
jb
or
inc
add
add
add
add
dec
dec
inc
add
and
add
jbe
popa
add
je
or
inc
add
add
add
add
add
inc
add
and
popa
add
add
jb
imul
add
add
je
jb
insb
add
add
sub
add
add
add
add
outsl
add
arpl
insb
add
add
nop
add
add
imul
add
addb
dec
inc
add
add
jb
outsl
add
outsl
add
and
add
and
push
add
push
outsb
add
add
insb
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
imul
add
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
add
or
dec
add
and
push
add
outsb
add
and
push
add
jb
imul
add
add
add
add
add
add
add
incl
add
add
add
add
add
push
add
add
pop
add
add
adc
incl
add
add
add
push
add
add
and
pop
add
incl
add
outsb
add
add
insb
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
add
add
add
add
add
add
add
add
incl
add
add
add
add
add
ja
ja
add
popa
add
jb
outsl
add
add
add
add
outsl
add
add
add
add
add
add
add
add
add
incl
add
jns
jb
imul
je
and
sub
inc
add
add
add
add
add
add
add
add
add
add
add
popa
add
jb
outsl
add
add
add
sub
and
dec
add
arpl
add
add
add
add
add
addb
add
push
add
add
add
add
add
add
dec
add
jbe
jb
imul
or
dec
add
and
push
add
outsb
add
and
push
add
jb
imul
add
add
add
add
add
add
add
add
add
incl
add
add
imul
add
and
insb
add
add
add
add
jae
add
add
push
add
add
add
outsl
add
insb
add
add
imul
and
push
add
bound
sub
and
outsl
add
and
insb
add
and
data16
arpl
push
add
and
insb
add
arpl
popa
add
add
add
add
jne
jbe
jb
imul
add
add
add
add
add
add
add
incl
add
jo
insb
add
arpl
add
add
je
mov
add
add
add
add
add
add
add
add
incl
add
add
add
push
add
add
add
xor
push
add
add
incl
add
push
add
add
imul
push
add
add
incl
add
jne
insb
add
jb
add
add
add
add
add
add
add
add
add
incl
add
jb
arpl
outsl
add
jb
imul
add
add
add
add
dec
add
add
popa
add
add
jae
arpl
imul
ds
push
add
add
arpl
imul
dec
dec
xor
xor
xor
and
add
dec
add
jae
je
jb
popa
add
add
add
add
adc
push
add
popa
add
add
add
add
add
inc
add
jae
jae
popa
add
add
add
add
add
popa
add
add
add
add
add
inc
dec
push
add
jo
jb
outsl
add
add
imul
dec
dec
inc
add
arpl
insb
add
add
cmp
add
popa
add
jbe
outsl
add
add
add
add
dec
dec
inc
add
popa
add
je
imul
dec
dec
dec
add
add
add
add
add
add
dec
dec
inc
add
insb
add
popa
add
add
add
outsl
add
and
arpl
popa
add
imul
je
outsl
add
add
add
add
add
dec
add
jo
outsl
add
je
popa
add
imul
imul
add
add
push
add
add
jo
popa
add
add
add
add
add
data16
jb
insl
add
jp
imul
imul
jne
and
push
add
push
outsb
add
add
insb
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
add
add
add
add
add
loope
add
add
insb
add
popa
add
add
add
loope
add
outsl
add
imul
add
and
add
arpl
outsl
add
add
add
add
and
add
insb
add
insl
add
outsb
add
addb
loope
add
insb
add
add
imul
popa
add
add
add
add
add
add
add
nop
add
add
add
sub
add
imul
das
loope
add
jo
imul
arpl
outsl
add
add
add
insl
add
outsb
add
add
add
add
imul
add
add
and
add
jo
jb
imul
add
add
je
jb
insb
add
add
add
add
push
dec
add
push
add
add
add
je
jb
insb
add
add
add
push
dec
push
add
add
jo
popa
add
add
add
add
add
inc
add
add
add
and
jo
jb
outsl
add
add
add
jb
add
add
add
add
add
jae
arpl
imul
je
jb
insb
add
add
add
adc
add
imul
popa
add
add
jp
popa
add
add
add
xor
xor
xor
and
add
add
outsl
add
je
jb
popa
add
add
add
add
add
inc
dec
add
outsb
add
jb
popa
add
add
jae
arpl
imul
ds
add
imul
arpl
imul
add
add
add
push
dec
add
arpl
push
add
outsl
add
add
outsb
add
add
outsl
add
add
je
jb
insb
add
add
nop
add
jne
popa
add
add
add
add
add
inc
add
jae
jae
popa
add
add
add
add
add
popa
add
add
add
insb
add
add
add
je
jb
insb
add
add
add
adc
add
outsl
add
je
jb
outsl
add
add
jb
add
add
add
push
add
add
jb
outsl
add
add
imul
je
jb
insb
add
add
outsb
add
add
add
add
cmp
add
imul
jbe
outsl
add
add
or
inc
add
add
add
add
dec
dec
push
add
jae
jae
outsl
add
add
add
jbe
popa
add
je
imul
je
jb
insb
add
add
add
add
add
outsb
add
add
je
jb
outsl
add
add
add
add
outsb
add
add
outsl
add
add
jb
popa
add
insl
add
or
inc
add
add
add
sub
add
add
add
add
imul
popa
add
add
add
imul
add
addb
dec
add
outsb
add
outsl
add
insl
add
jp
imul
imul
jne
and
push
add
push
outsb
add
add
insb
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
imul
add
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
add
or
dec
add
and
push
add
outsb
add
and
push
add
jb
imul
add
add
add
add
add
add
add
incl
add
add
add
add
add
push
add
add
pop
add
add
adc
incl
add
add
add
push
add
add
and
pop
add
incl
add
outsb
add
add
insb
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
add
add
add
add
add
add
add
add
incl
add
add
add
add
add
ja
ja
add
popa
add
jb
outsl
add
add
add
add
outsl
add
add
add
add
add
add
add
add
add
incl
add
jns
jb
imul
je
and
sub
inc
add
add
add
add
add
add
add
add
add
add
add
popa
add
jb
outsl
add
add
add
sub
and
dec
add
arpl
add
add
add
add
add
addb
add
push
add
add
add
add
add
add
inc
add
jb
imul
dec
add
and
push
add
outsb
add
and
push
add
jb
imul
add
add
add
add
add
add
add
add
add
incl
add
arpl
imul
arpl
popa
add
add
add
add
outsb
add
add
imul
outsl
add
add
add
push
add
add
add
add
add
add
insb
add
insl
add
outsb
add
add
add
add
add
jo
jb
imul
add
add
add
add
add
push
add
add
pop
add
add
add
add
incl
add
jae
imul
outsl
add
add
add
add
add
add
add
add
add
incl
add
add
add
push
add
add
sub
inc
add
add
add
add
incl
add
push
add
add
add
xor
push
add
add
incl
add
jne
insb
add
add
add
add
add
push
add
add
sahf
add
aaa
add
add
add
incl
add
outsl
add
insb
add
popa
add
add
add
add
add
add
inc
add
insl
add
outsb
add
add
add
add
ds
inc
add
add
popa
add
add
add
dec
dec
xor
xor
xor
and
add
dec
add
jae
je
jb
popa
add
and
je
outsl
add
add
add
popa
add
add
add
add
add
inc
add
push
popa
add
add
add
add
add
popa
add
add
add
add
add
inc
dec
push
add
jo
jb
outsl
add
add
imul
add
dec
dec
inc
add
arpl
insb
add
add
cmp
add
bound
outsl
add
imul
jb
add
add
dec
dec
inc
add
popa
add
jp
popa
add
add
add
dec
dec
inc
add
add
add
add
add
dec
dec
dec
add
and
jae
add
add
popa
add
addr16
add
add
add
add
add
add
jne
insb
add
add
add
add
add
inc
add
outsb
add
imul
jb
popa
add
imul
add
add
add
add
dec
add
jo
jb
imul
jb
add
add
add
add
add
arpl
popa
add
add
add
add
imul
add
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
add
add
add
add
add
add
loope
add
jb
add
add
add
add
and
add
outsl
add
imul
add
add
and
add
add
jb
add
add
and
add
insb
add
insl
add
outsb
add
jb
addb
loope
add
add
add
arpl
imul
popa
add
and
and
je
outsl
add
add
add
add
add
add
imul
addb
loope
add
jo
imul
and
jbe
in
add
arpl
jne
insb
add
add
adc
add
jb
arpl
push
add
add
add
and
add
bound
jb
imul
add
add
add
je
jb
insb
add
add
add
add
push
dec
add
add
jb
popa
add
or
inc
add
add
add
add
push
dec
dec
add
jo
jb
imul
jb
add
add
add
add
inc
add
add
add
jb
and
jo
jb
outsl
add
add
je
outsl
add
add
add
add
add
popa
add
add
or
inc
add
add
add
add
adc
add
add
add
add
dec
dec
xor
xor
xor
and
add
add
outsl
add
je
jb
popa
add
and
je
outsl
add
add
add
add
jne
insl
add
outsb
add
add
add
add
ds
inc
add
add
popa
add
add
add
push
dec
add
popa
add
je
popa
add
add
and
arpl
outsl
add
jo
insb
add
je
popa
add
add
je
jb
insb
add
add
nop
add
popa
add
add
add
add
add
inc
add
push
popa
add
add
add
add
add
popa
add
add
add
insb
add
add
add
je
jb
insb
add
add
add
adc
add
outsl
add
je
jb
outsl
add
add
add
push
add
add
jb
outsl
add
add
imul
inc
add
add
add
outsb
add
add
add
add
cmp
add
add
outsl
add
imul
jb
or
inc
add
add
add
add
dec
dec
add
add
insb
add
outsb
add
add
and
jne
outsb
add
add
popa
add
outsl
add
add
je
jb
insb
add
add
add
add
push
add
outsl
add
add
popa
add
imul
popa
add
add
add
add
or
inc
add
add
add
sub
add
add
add
add
jne
arpl
insb
add
add
nop
add
add
jne
add
add
addb
dec
inc
add
add
arpl
popa
add
add
add
add
imul
add
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
imul
add
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
add
or
dec
add
and
push
add
outsb
add
and
push
add
jb
imul
add
add
add
add
add
add
add
incl
add
jo
je
popa
add
add
add
add
add
add
add
add
add
adc
incl
add
add
add
push
add
add
and
pop
add
incl
add
outsb
add
add
insb
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
add
add
add
add
add
add
add
add
incl
add
add
add
add
add
ja
ja
add
popa
add
jb
outsl
add
add
add
add
outsl
add
add
add
add
add
add
add
add
add
incl
add
jns
jb
imul
je
and
sub
inc
add
add
add
add
add
add
add
add
add
add
add
popa
add
jb
outsl
add
add
add
sub
and
dec
add
arpl
add
add
add
add
add
addb
add
push
add
add
add
add
add
add
inc
add
jb
imul
or
dec
add
and
push
add
outsb
add
and
push
add
jb
imul
add
add
add
add
add
add
add
add
incl
add
add
add
jp
arpl
popa
add
add
add
add
add
add
arpl
imul
and
push
add
bound
and
sub
push
add
dec
add
add
add
and
add
jo
add
imul
jno
jne
add
add
insb
add
add
jb
arpl
push
add
and
insb
add
arpl
popa
add
add
jne
add
add
add
add
and
popa
add
jb
imul
add
add
add
add
add
add
add
add
add
add
incl
add
imul
arpl
imul
cmp
add
add
addb
push
add
add
add
add
add
incl
add
add
add
push
add
add
add
xor
push
add
add
incl
add
jo
je
popa
add
add
add
add
add
add
add
inc
add
add
add
add
incl
add
arpl
add
add
add
add
add
add
add
add
incl
add
popa
add
imul
jb
add
add
add
add
add
add
loope
daa
pop
add
add
ds
jle,pn
pop
add
add
dec
dec
xor
xor
xor
and
add
pop
xor
data16
cmp
add
add
add
add
add
jne
mov
add
add
dec
dec
add
add
inc
dec
sub
add
fcomps
add
add
add
inc
dec
lea
jne
add
add
jmp
cld
xor
xor
add
dec
sti
pop
dec
xor
bound
add
add
dec
dec
dec
push
add
add
dec
dec
cmp
xor
add
add
loopne
cld
xor
xor
xor
xor
xor
dec
xor
pop
xor
add
add
add
add
sub
add
add
add
add
xlat
xor
xor
xor
xor
add
add
add
add
push
outsb
add
add
insb
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
and
and
imul
xor
xor
add
add
add
add
add
add
loope
xor
xor
xor
add
add
add
add
add
loope
xor
xor
xor
add
add
sub
add
add
and
xor
add
add
sub
add
add
and
dec
push
fs
sub
add
add
xor
data16
sahf
bound
add
add
sub
add
add
add
nop
add
add
add
sub
xor
add
xor
xor
xor
xor
xor
add
add
add
add
xor
xor
add
add
sub
add
add
and
xchg
dec
xor
add
add
sub
add
add
add
add
je
jb
insb
add
add
add
add
push
dec
mov
sub
add
sub
or
inc
add
add
add
add
push
dec
xlat
xor
xor
xor
xor
add
add
add
add
xlat
xor
xor
xor
dec
adc
add
add
sub
add
add
add
jge
dec
sub
add
sub
or
inc
add
add
add
add
adc
push
add
add
sub
add
add
dec
dec
xor
xor
xor
and
add
pop
xor
data16
cmp
add
add
sub
add
inc
dec
loope
daa
pop
sub
add
sub
add
add
ds
jle,pn
pop
sub
add
sub
add
push
dec
aad
jmp
mov
xor
xor
xor
add
add
sub
or
inc
add
add
add
nop
add
jne
mov
add
add
dec
dec
add
add
inc
dec
sub
add
fcomps
dec
add
add
add
je
jb
insb
add
add
add
adc
ss
mov
add
sub
add
add
inc
dec
lea
jne
add
add
sub
or
inc
add
add
add
outsb
add
add
add
add
cmp
pop
dec
xor
bound
sub
add
sub
or
inc
add
add
add
add
dec
dec
and
xor
nop
xorb
add
add
sub
or
inc
add
add
add
add
add
dec
push
imul
bound
add
sub
or
inc
add
add
add
sub
add
add
add
xor
xor
xor
add
add
add
add
xor
xor
add
add
sub
add
addb
dec
push
add
push
outsb
add
add
insb
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
and
and
imul
xor
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
imul
add
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
add
or
sub
add
pushl
scas
xor
add
add
add
push
add
add
mov
pop
add
add
add
add
incl
add
add
add
add
add
push
add
add
pop
add
add
adc
incl
add
add
add
push
add
add
and
pop
add
incl
add
outsb
add
add
insb
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
add
add
add
add
add
add
add
add
incl
add
add
add
add
add
ja
ja
add
popa
add
jb
outsl
add
add
add
add
outsl
add
add
add
add
add
add
add
add
add
incl
add
jns
jb
imul
je
and
sub
inc
add
add
add
add
add
add
add
add
add
add
add
popa
add
jb
outsl
add
add
add
sub
and
dec
add
arpl
add
add
add
add
add
addb
add
push
add
add
add
add
add
add
mov
or
sub
add
pushl
scas
xor
add
add
push
add
add
pop
add
add
add
add
incl
add
insb
add
add
imul
and
push
add
bound
and
outsb
xor
xor
add
push
add
add
add
push
pop
xor
xor
jbe
jbe
xor
xor
xor
pop
push
xor
dec
xor
push
xor
add
add
add
add
push
add
add
pop
add
add
add
add
incl
bound
add
add
add
add
add
add
add
add
add
add
incl
add
add
add
push
add
add
add
xor
push
add
add
incl
add
push
add
add
imul
push
add
add
incl
xor
xor
add
add
add
push
add
add
mov
add
add
add
incl
jno
add
add
add
sub
add
add
add
add
add
add
ds
pop
add
add
ds
sub
pop
add
add
dec
dec
xor
xor
xor
and
add
data16
push
call
add
add
add
add
push
sub
inc
dec
dec
dec
add
add
inc
dec
sub
add
lcall
add
add
inc
dec
lods
fs
add
dec
dec
stos
pop
scas
jae
add
dec
push
push
add
dec
dec
jmp
fisttpl
dec
dec
aam
ficoms
add
add
mov
push
jge
jno
inc
jb
add
add
add
add
mov
add
add
add
add
push
bound
add
add
add
push
mov
add
imul
add
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
add
add
add
add
add
loope
push
pop
push
sub
add
add
add
add
loope
pop
ss
sub
add
sub
add
add
and
lea
add
add
sub
add
add
and
and
xchg
sub
add
add
push
or
inc
add
add
add
add
pop
add
addb
loope
pop
ss
xchg
movsl
arpl
add
add
add
add
add
sub
add
add
and
bound
pop
sub
add
sub
add
add
add
add
je
jb
insb
add
add
add
add
push
dec
add
in
xchg
sub
add
sub
or
inc
add
add
add
add
push
dec
push
bound
add
add
add
add
sbb
pop
lods
fs
add
sub
add
add
add
nop
cli
push
sub
add
sub
or
inc
add
add
add
add
adc
in
or
add
add
sub
add
add
dec
dec
xor
xor
xor
and
add
data16
push
call
add
sub
add
inc
dec
ds
pop
sub
add
sub
add
add
ds
sub
pop
sub
add
sub
add
push
dec
push
add
add
sub
or
inc
add
add
add
nop
add
push
sub
inc
dec
dec
dec
add
add
inc
dec
sub
add
lcall
sub
or
inc
add
add
add
add
adc
cmpsl
arpl
push
sub
add
sub
add
add
inc
dec
lods
fs
add
sub
or
inc
add
add
add
outsb
add
add
add
add
cmp
push
add
push
add
add
add
je
jb
insb
add
add
add
dec
dec
adc
sub
add
sub
or
inc
add
add
add
add
add
adc
sub
add
sub
or
inc
add
add
add
sub
add
add
add
pop
scas
jae
add
add
add
add
pop
test
add
dec
jae
mov
add
imul
add
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
imul
add
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
add
or
dec
add
and
push
add
outsb
add
and
push
add
jb
imul
add
add
add
add
add
add
add
incl
pop
add
add
add
add
add
add
add
add
add
adc
incl
add
add
add
push
add
add
and
pop
add
incl
add
outsb
add
add
insb
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
add
add
add
add
add
add
add
add
incl
add
add
add
add
add
ja
ja
add
popa
add
jb
outsl
add
add
add
add
outsl
add
add
add
add
add
add
add
add
add
incl
add
jns
jb
imul
je
and
sub
inc
add
add
add
add
add
add
add
add
add
add
add
popa
add
jb
outsl
add
add
add
sub
and
dec
add
arpl
add
add
add
add
add
addb
add
push
add
add
add
add
add
add
push
bound
pop
add
or
dec
add
and
push
add
outsb
add
and
push
add
jb
imul
add
add
add
add
add
add
add
add
add
incl
push
push
pop
fists
jg
push
inc
push
and
sub
push
add
dec
add
add
add
bound
arpl
mov
add
jbe
xor
testb
add
add
add
add
add
add
add
add
add
add
incl
jg
add
add
add
add
add
add
add
add
incl
add
add
add
push
add
add
add
xor
push
add
add
incl
pop
add
add
add
inc
add
add
add
add
incl
insl
add
add
add
add
add
add
incl
mov
add
add
sub
add
add
add
add
add
ds
pop
outsl
cwtl
cmp
add
add
dec
jle,pn
pop
outsl
cwtl
cmp
add
add
xor
xor
xor
and
add
outsl
cwtl
cmp
push
call
add
add
add
add
push
ljmp
dec
dec
dec
add
add
inc
dec
sub
add
fcomps
add
add
add
inc
dec
lods
fs
add
dec
dec
int
pop
mov
add
dec
adc
pop
add
add
dec
dec
jmp
dec
popl
add
add
mov
nop
add
add
dec
dec
xchg
insb
or
gs
jno
inc
jb
and
add
sub
add
add
add
add
pop
push
jo
and
add
add
add
add
xchg
mov
add
add
push
add
add
add
and
aaa
add
add
add
add
add
add
loope
push
or
add
add
add
add
add
loope
mov
mov
add
add
sub
add
add
and
dec
sub
add
sub
add
add
and
sub
xchg
sub
add
add
push
js
sub
add
sub
nop
add
add
add
sub
push
add
addb
loope
mov
mov
nop
push
jge
add
add
add
add
sub
add
add
and
xchg
pop
push
or
add
sub
add
add
add
add
je
jb
insb
add
add
add
add
push
dec
fcoml
dec
push
inc
add
add
add
je
jb
insb
add
add
add
push
dec
pop
push
jo
and
add
and
jne
and
push
add
add
sub
add
add
add
jge
sub
add
sub
or
inc
add
add
add
add
adc
mov
add
add
sub
add
add
dec
dec
xor
xor
xor
and
add
outsl
cwtl
cmp
push
call
add
sub
add
inc
dec
ds
pop
outsl
cwtl
cmp
add
add
sub
add
add
ds
jle,pn
pop
outsl
cwtl
cmp
add
add
sub
add
push
dec
push
pop
sub
add
sub
or
inc
add
add
add
nop
add
push
ljmp
dec
dec
dec
add
add
inc
dec
sub
add
fcomps
dec
add
add
add
je
jb
insb
add
add
add
adc
cmpsl
arpl
push
sub
add
sub
add
add
inc
dec
lods
fs
add
sub
or
inc
add
add
add
outsb
add
add
add
add
cmp
push
ss
sub
add
sub
or
inc
add
add
add
add
dec
dec
sbbb
sub
add
sub
or
inc
add
add
add
add
add
sbbb
sub
add
sub
or
inc
add
add
add
sub
add
add
add
xchg
pop
mov
add
add
add
add
data16
add
sub
add
addb
dec
fcoml
inc
add
add
push
add
add
add
and
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
imul
add
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
add
or
dec
add
and
push
add
outsb
add
and
push
add
jb
imul
add
add
add
add
add
add
add
incl
pop
add
add
add
add
add
add
add
add
add
adc
incl
add
add
add
push
add
add
and
pop
add
incl
add
outsb
add
add
insb
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
add
add
add
add
add
add
add
add
incl
add
add
add
add
add
ja
ja
add
popa
add
jb
outsl
add
add
add
add
outsl
add
add
add
add
add
add
add
add
add
incl
add
jns
jb
imul
je
and
sub
inc
add
add
add
add
add
add
add
add
add
add
add
popa
add
jb
outsl
add
add
add
sub
and
dec
add
arpl
add
add
add
add
add
addb
add
push
add
add
add
add
add
add
mov
xchg
push
add
add
add
add
add
push
add
add
popa
add
jae
and
push
add
jb
imul
add
add
add
add
add
add
add
add
incl
push
mov
add
inc
push
and
sub
push
add
dec
add
add
add
bound
popw
arpl
mov
jbe
push
push
add
add
add
add
add
add
add
add
incl
jg
add
add
add
add
add
add
add
add
incl
add
add
add
push
add
add
add
xor
push
add
add
incl
pop
add
add
add
inc
add
add
add
add
incl
insl
add
add
add
add
add
add
incl
mov
add
add
sub
add
add
add
add
add
push
add
ds
xchg
int
roll
add
dec
dec
xor
xor
xor
and
add
test
push
mov
add
ret
add
add
add
adc
mov
enter
add
inc
dec
scas
mov
movl
dec
adc
add
add
addb
dec
xchg
mov
movl
add
add
add
lods
ffree
add
add
dec
dec
sbb
add
add
add
add
dec
sbb
add
add
pop
lds
pop
mov
dec
dec
movsb
mov
mov
dec
dec
fnstenv
je
and
pop
mov
ror
add
dec
add
add
add
add
and
adc
add
add
add
js
add
add
add
push
outsb
add
add
insb
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
and
adc
add
add
add
add
add
add
loope
jl
mov
xor
push
add
add
add
add
loope
mov
add
sub
add
add
and
lds
mov
scas
sub
add
sub
add
add
and
lods
rcrb
add
add
add
enter
add
rcr
sub
add
sub
add
add
add
nop
add
add
add
sub
scas
add
addb
loope
mov
cmc
mov
adc
or
jl
sub
add
sub
add
add
and
lds
scas
sub
add
sub
add
add
add
add
je
jb
insb
add
add
add
add
push
dec
jmp
xor
inc
add
add
add
je
jb
insb
add
add
add
push
dec
js
add
add
add
and
add
add
add
add
xor
and
ffree
xor
sub
add
sub
add
add
add
enter
add
add
sub
or
inc
add
add
add
add
adc
hlt
mov
add
sub
add
add
dec
dec
xor
xor
xor
and
add
test
push
mov
add
ret
add
sub
add
inc
dec
push
add
dec
add
add
add
add
dec
xchg
int
shrl
add
sub
add
push
dec
add
mov
and
movsb
ret
mov
sub
add
sub
or
inc
add
add
add
nop
add
add
add
scas
mov
movl
dec
adc
add
add
addb
dec
xchg
mov
sub
add
sub
or
inc
add
add
add
add
adc
call
mov
inc
add
add
add
add
lods
ffree
sub
add
sub
or
inc
add
add
add
outsb
add
add
add
add
cmp
mov
lods
xor
push
add
add
add
je
jb
insb
add
add
add
dec
dec
pop
aad
add
mov
lods
and
pop
lds
pop
mov
push
add
add
add
je
jb
insb
add
add
add
add
pop
aad
add
mov
lods
and
movsb
mov
mov
push
add
add
add
je
jb
insb
add
add
sub
add
add
add
mov
add
add
add
sarb
dec
add
add
add
add
push
outsb
add
add
insb
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
and
adc
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
imul
add
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
add
or
dec
add
and
push
add
outsb
add
and
push
add
jb
imul
add
add
add
add
add
add
add
incl
movl
add
add
push
add
add
pop
add
add
adc
incl
add
add
add
push
add
add
and
pop
add
incl
add
outsb
add
add
insb
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
add
add
add
add
add
add
add
add
incl
add
add
add
add
add
ja
ja
add
popa
add
jb
outsl
add
add
add
add
outsl
add
add
add
add
add
add
add
add
add
incl
add
jns
jb
imul
je
and
sub
inc
add
add
add
add
add
add
add
add
add
add
add
popa
add
jb
outsl
add
add
add
sub
and
dec
add
arpl
add
add
add
add
add
addb
add
push
add
add
add
add
add
add
hlt
lds
scas
add
or
dec
add
and
push
add
outsb
add
and
push
add
jb
imul
add
add
add
add
add
add
add
add
add
incl
add
and
cld
enter
mov
and
lods
cwtl
mov
add
lds
xchg
mov
add
into
and
or
jl
inc
and
ror
enter
ret
and
add
add
add
add
add
push
add
add
pop
add
add
add
add
incl
into
cmp
add
add
addb
push
add
add
sub
sub
stos
add
add
add
add
add
add
add
push
add
add
add
xor
push
add
add
incl
movl
add
add
push
add
add
imul
push
add
add
incl
roll
add
add
add
add
add
add
add
add
add
incl
shrb
add
sub
add
add
add
jae
arpl
jb
imul
and
imul
je
push
add
add
outsl
add
imul
imul
arpl
popa
add
jae
imul
and
push
add
push
outsb
add
add
insb
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
and
je
outsl
add
add
jne
outsb
add
add
insb
add
ja
insb
add
add
add
add
data16
add
je
and
arpl
outsl
add
je
imul
add
and
je
outsl
add
add
jne
outsb
add
and
jns
outsl
add
jb
and
arpl
outsl
add
jo
jne
je
add
and
insl
add
jns
and
bound
add
outsl
add
add
add
outsb
add
add
jo
outsl
add
jae
imul
add
add
add
add
add
outsl
add
and
ja
popa
add
je
and
je
outsl
add
add
bound
outsl
add
je
and
je
push
add
arpl
jb
imul
aas
add
add
imul
add
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
add
sbb
push
add
push
outsb
add
add
insb
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
inc
add
popa
add
jb
outsl
add
add
add
and
inc
add
add
push
add
jbe
imul
sub
sub
add
ja
data16
add
add
add
ja
data16
add
add
add
jo
insb
add
add
add
add
imul
jae
and
sub
sub
add
add
add
add
add
add
add
add
jb
outsl
add
add
je
outsl
add
and
sub
sub
add
js
add
add
add
add
js
add
add
add
add
imul
add
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
and
ja
imul
and
add
jb
arpl
push
add
outsb
add
add
imul
add
jo
je
and
imul
add
add
add
and
inc
add
insb
add
and
jbe
add
insb
add
outsb
add
jae
popa
add
je
add
add
add
outsb
add
add
add
and
push
add
jb
imul
and
ja
add
je
add
push
add
add
jne
jae
add
data16
add
jb
je
and
ja
imul
sub
and
jb
add
add
add
je
and
add
jb
and
inc
add
insl
add
jne
je
add
and
insl
add
add
insb
add
arpl
push
add
add
jae
add
add
imul
je
and
insl
add
push
add
add
testb
add
je
add
and
push
add
add
add
add
and
inc
add
jae
data16
add
jb
jne
outsb
add
and
add
jae
and
push
add
jb
imul
jae
and
popa
add
bound
jb
add
push
add
add
add
imul
add
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
sbb
push
add
push
outsb
add
add
insb
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
inc
add
popa
add
jb
outsl
add
add
add
and
inc
add
add
push
add
jbe
imul
sub
sub
add
ja
data16
add
add
add
ja
data16
add
add
add
jo
insb
add
add
add
and
inc
add
je
add
add
and
sub
sub
add
add
add
add
add
add
add
add
jb
outsl
add
add
je
outsl
add
and
sub
sub
add
js
add
add
add
add
js
add
add
add
outsb
add
add
arpl
jb
imul
and
add
and
arpl
add
add
and
popa
add
imul
je
imul
and
jb
popa
add
add
je
imul
insb
add
and
js
jmp
add
add
outsb
add
add
add
add
imul
add
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
add
add
imul
sbb
add
jmp
add
add
outsb
add
add
sbb
add
je
and
jo
popa
add
and
jae
jne
jae
jo
add
add
add
and
imul
add
je
and
jo
outsl
add
jae
imul
add
add
jne
add
add
outsl
add
add
and
outsl
add
add
outsb
add
je
add
jb
and
outsb
add
and
jb
jmp
add
jae
jae
add
add
insb
add
jae
add
add
outsl
add
push
add
add
sub
add
jae
and
popa
add
popa
add
add
outsb
add
add
and
insb
add
and
js
jmp
add
add
outsb
add
add
add
add
arpl
jb
imul
mov
add
imul
add
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
add
sbb
push
add
push
outsb
add
add
insb
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
dec
add
popa
add
jb
outsl
add
add
add
and
inc
add
add
push
add
jbe
imul
sub
sub
add
ja
data16
add
add
add
ja
data16
add
add
add
jo
insb
add
add
jne
jae
and
insb
add
jae
and
data16
arpl
push
add
jae
and
sub
sub
add
add
add
add
add
add
add
add
jb
outsl
add
add
je
imul
and
sub
sub
add
js
add
add
add
add
js
add
add
add
and
jae
arpl
jb
imul
and
add
insb
add
add
imul
popa
add
add
add
je
popa
add
add
popa
add
add
outsb
add
add
add
and
insb
add
and
jb
imul
outsl
add
add
imul
add
add
add
add
imul
add
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
add
add
add
add
outsl
add
and
jbe
imul
add
add
outsb
add
add
jb
outsl
add
add
and
jo
outsl
add
add
bound
bound
add
add
popa
add
jae
popa
add
add
add
insb
add
add
insb
add
arpl
arpl
outsl
add
add
add
add
outsl
add
jo
jne
je
add
add
add
outsb
add
add
jb
outsl
add
jo
add
add
add
add
add
arpl
jb
imul
aas
add
add
imul
add
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
sbb
push
add
push
outsb
add
add
insb
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
inc
add
popa
add
jb
outsl
add
add
add
and
inc
add
add
push
add
jbe
imul
sub
sub
add
ja
data16
add
add
add
ja
data16
add
add
add
jo
insb
add
add
je
je
imul
and
data16
insb
add
and
sub
sub
add
add
add
add
add
add
add
add
jb
outsl
add
add
add
jb
add
add
add
add
add
js
add
add
add
add
js
add
add
add
add
add
arpl
jb
imul
and
add
and
add
je
popa
add
add
add
add
jne
insb
add
and
add
je
loope
and
jo
jb
outsl
add
outsl
add
popa
add
add
and
jno
jne
add
add
insb
add
add
add
jb
outsl
add
add
je
outsl
add
and
add
and
inc
add
add
push
add
and
add
add
jne
je
add
add
add
je
popa
add
add
je
add
add
add
imul
outsl
add
je
imul
popa
add
add
push
add
jne
je
loope
outsb
add
add
add
and
jae
jne
and
push
add
and
jo
outsl
add
add
add
and
outsb
add
and
jb
add
jo
outsl
add
add
jb
add
add
add
add
and
popa
add
jne
insb
add
jb
and
add
add
arpl
jb
imul
aas
add
add
imul
add
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
sbb
push
add
push
outsb
add
add
insb
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
dec
add
popa
add
jb
outsl
add
add
add
and
inc
add
add
push
add
jbe
imul
sub
sub
add
ja
data16
add
add
add
ja
data16
add
add
add
jo
insb
add
add
add
jae
and
insb
add
jae
and
popa
add
arpl
push
add
jae
and
sub
sub
add
add
add
add
add
add
add
add
jb
outsl
add
add
je
outsl
add
and
sub
sub
add
js
add
add
add
add
js
add
add
loopne
cld
xor
xor
xor
xor
xor
xor
push
loopne
xor
add
imul
add
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
and
outsb
xor
nop
cmpsb
pop
dec
xor
dec
xor
arpl
data16
xor
add
push
xor
jle
jle
cltd
jge
jge
xor
xor
pop
push
jnp
xor
dec
xor
mov
push
xor
dec
xor
mov
jle
pop
xor
xor
xor
xor
xor
lahf
pop
dec
mov
imul
xor
dec
xor
add
add
imul
add
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
add
sbb
push
add
push
outsb
add
add
insb
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
aas
add
popa
add
jb
outsl
add
add
add
and
inc
add
add
push
add
jbe
imul
sub
sub
add
ja
data16
add
add
add
ja
data16
add
add
add
jo
insb
add
xor
data16
aad
mov
xor
add
add
add
add
add
add
add
add
add
add
add
xor
xor
xor
add
add
add
js
add
add
add
add
js
add
add
add
jno
inc
jb
dec
test
sub
subl
and
push
add
push
outsb
add
add
insb
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
and
pop
nop
cmpsb
pop
dec
xchg
dec
dec
add
sbbb
out
in
jle
dec
mov
xor
pop
or
dec
mov
mulb
xchg
mov
push
xchg
pop
add
das
es
orl
sub
pop
lcall
add
imul
add
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
sbb
push
add
push
outsb
add
add
insb
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
cmp
dec
add
arpl
jb
outsl
add
add
add
and
inc
add
add
push
add
jbe
imul
sub
sub
add
ja
data16
add
add
add
ja
data16
add
add
add
jo
insb
add
bound
xchg
dec
and
sub
sub
add
add
add
add
add
add
add
add
push
and
sub
sub
add
js
add
add
add
add
js
add
add
jno
inc
jb
dec
or
dec
or
add
arpl
jb
imul
and
add
mov
add
insb
add
jae
push
add
add
add
and
test
nop
cmpsb
pop
mov
sbbb
jl
mov
push
dec
mov
xchg
sub
addb
pop
push
bound
push
leave
popa
or
pusha
dec
orl
jae
sub
into
push
aas
add
add
imul
add
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
add
sbb
push
add
push
outsb
add
add
insb
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
cmp
dec
add
arpl
jb
outsl
add
add
add
and
inc
add
add
push
add
jbe
imul
sub
sub
add
ja
data16
add
add
add
ja
data16
add
add
add
jo
insb
add
bound
addr16
push
push
sub
add
add
add
add
add
add
add
add
and
push
add
add
add
add
js
add
add
add
add
js
add
add
je
and
fnstenv
pop
and
movsb
ret
mov
mov
je
and
inc
add
add
push
aad
mov
pop
and
in
mov
and
rol
add
mov
add
add
lods
shll
in
mov
pop
aad
mov
call
lds
and
push
cmc
mov
aad
leave
and
dec
lds
add
ret
and
mov
mov
enter
add
add
mov
add
leave
call
ret
mov
enter
aas
add
add
imul
add
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
sbb
push
add
push
outsb
add
add
insb
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
cmp
dec
add
arpl
jb
outsl
add
add
add
and
inc
add
add
push
add
jbe
imul
sub
sub
add
ja
data16
add
add
add
ja
data16
add
add
add
jo
insb
add
mov
or
jl
sub
sub
add
add
add
add
add
add
add
add
pop
mov
and
sub
sub
add
js
add
add
add
add
js
add
