out
call
in
add
and
push
push
lea
push
add
jne
push
push
call
sar
scas
leave
ret
xchg
add
test
loopne
stos
dec
cld
push
push
scas
clc
push
add
mov
fwait
les
mov
pusha
sbb
xchg
add
or
negl
lahf
dec
jb
jae
mov
loopne
lock
lahf
mov
push
mov
inc
jge
jg
push
ja
push
mov
clc
push
mov
hlt
push
nop
add
fidivs
pop
lret
pop
mov
push
add
push
push
jae
mov
cld
push
scas
mov
rcrb
pop
cmpsl
adc
xchg
add
jecxz
pop
mov
mov
push
inc
xor
push
push
add
pop
xchg
incl
add
add
into
add
idiv
call
adc
mov
not
dec
add
neg
inc
add
sbb
sub
inc
push
sbb
not
push
fldt
iret
adc
neg
push
add
sub
inc
adc
pop
sub
add
mov
fbstp
ret
loop
in
cmpsl
sub
or
cwtl
hlt
adc
addl
add
push
enter
cmpsb
gs
dec
sahf
enter
ja
lcall
popa
jno
stos
push
aaa
inc
jbe
test
fsubrs
jge
imul
and
mov
sub
xchg
add
mov
scas
mov
hlt
add
jo
mov
mov
push
sub
xor
push
mov
mov
push
outsl
jb
dec
in
push
cmp
test
lcall
subb
out
test
dec
inc
or
xchg
add
ds
add
test
xchg
push
mov
and
fcoml
loopne
xor
xor
js
repnz
jg
push
push
mov
add
and
nop
add
pop
call
add
xchg
and
mov
bound
add
pop
push
inc
daa
mov
push
bound
xor
outsl
lret
lea
dec
push
push
mov
adc
mov
adc
cli
gs
test
push
push
imul
mulb
add
pmuludq
cmp
nop
gs
dec
adc
mov
in
push
add
or
lock
dec
inc
push
nop
rclb
call
sti
inc
dec
and
or
add
rclb
and
idivl
lcall
clc
not
mov
adc
sbb
add
mov
adc
sub
frstor
push
add
push
dec
and
ret
fadd
or
dec
inc
std
ret
das
inc
add
adc
inc
dec
inc
mov
shl
fdiv
mov
mov
mov
adc
adc
xchg
sar
daa
or
inc
push
sub
data16
xor
xchg
je
mov
clc
xchg
jg
add
push
ss
inc
mov
jecxz
mov
inc
popa
je
insl
gs
clc
push
inc
fs
mov
jns
mov
roll
push
or
rorl
repz
jl
lcall
dec
mov
in
adc
mov
add
dec
dec
adc
add
inc
clc
xchg
lods
outsb
incl
rorl
jne
or
jge
cld
and
mov
xor
mov
mov
push
call
jno
jge
mov
orl
mov
dec
aas
pop
out
sbb
mov
sbb
inc
adc
or
movsl
in
or
lret
jns
outsl
scas
shrb
jp
neg
negb
into
jle
rolb
test
movsl
dec
aam
cmovbe
insb
insl
cld
je
xchg
mov
jle
push
outsl
inc
in
push
or
mov
idivb
leave
mov
lock
jne
inc
sbb
push
mov
push
cmpl
fwait
push
rclb
jno
pop
inc
xchg
or
and
adcl
push
in
imul
pushf
pop
outsl
mov
jae
push
out
jns
ja
inc
or
xor
fcomip
push
xchg
ja
add
or
cmp
or
add
jecxz
sub
gs
add
push
mov
popa
inc
aas
mov
mov
pop
arpl
stos
push
dec
loope
push
adc
enter
scas
mov
fdivs
sbb
push
hlt
iret
pop
add
les
aaa
jbe
adc
xor
xor
xchg
push
or
adc
cltd
fdivrs
pop
outsl
lret
pop
dec
push
xor
bound
xor
sbb
push
sbb
mov
fs
sbb
notl
cmp
outsl
pop
ljmp
push
lret
lods
fwait
sahf
hlt
pop
jle
test
inc
mov
ja
inc
xor
arpl
aam
inc
and
mov
xchg
lea
stc
call
xchg
or
call
inc
lods
loope
nop
or
sub
clc
push
mov
xlat
dec
push
push
stos
push
mov
das
push
loopne
mov
lods
arpl
xchg
or
test
push
andb
sbb
arpl
jns
xchg
in
add
jbe
dec
pop
lahf
fdivs
mov
sbb
es
dec
and
lods
pop
xchg
orl
jo
adc
dec
into
pop
pop
jp
pop
inc
sub
inc
bound
and
lret
xchg
sar
hlt
bound
fs
push
push
or
push
popw
jg
inc
xor
in
aaa
je
addl
push
dec
xor
jmp
mov
cld
cmpsl
sbb
or
jle
inc
jp
fs
inc
pop
mov
sbb
dec
frstor
idiv
jb
ja
out
std
push
mov
mov
popf
test
movsb
addl
dec
inc
push
inc
or
iret
cli
clc
jns
push
adc
sahf
mov
cwtl
sub
and
cmp
dec
jb
xor
or
or
add
push
lea
or
cmp
sbb
sarl
push
jns
push
mov
add
fistl
loop
sbb
dec
add
sub
not
inc
sbb
pusha
stos
xor
aam
test
add
clc
push
add
test
mov
leave
sub
lcall
xor
aad
xor
pop
shrb
push
movsb
mov
dec
push
inc
movsb
pop
je
jne
dec
push
outsl
push
popf
hlt
mov
lret
push
mov
in
and
pop
sub
adc
mov
sub
inc
ds
fisttpll
roll
sub
adc
jae
inc
and
or
add
clc
nop
push
mov
jno
call
test
arpl
movsl
xchg
inc
fistl
movl
subps
hlt
ja
jo
outsb
ja
cmc
mov
xor
aaa
adc
xor
dec
cmp
cmp
push
call
xor
pop
xor
inc
sbb
jne
loop
cs
dec
hlt
sub
mov
add
jnp
adc
orb
ljmp
xchg
dec
jp
jo
rclb
push
ret
pop
shrl
je
pop
in
sbb
push
popf
rcr
rcrb
inc
dec
lahf
insl
fisttpll
xchg
gs
daa
inc
hlt
push
pop
inc
and
sbbb
push
ja
mov
dec
dec
xor
xor
fsubl
fisubrs
inc
push
cmovg
mov
adc
pop
shrb
insb
xor
inc
inc
jbe
mov
inc
xor
into
movsl
jnp
lcall
test
cmp
call
push
aaa
dec
js
push
cmp
insb
dec
add
test
and
scas
cmc
or
mov
js
add
ss
push
cmp
nop
sbb
inc
ss
pop
dec
hlt
sbb
daa
xchg
loopne
sarl
ja
out
xor
movsb
add
adc
add
addl
pop
push
jb
or
xor
jl
pop
and
jl
push
mov
movsb
push
and
mov
xor
gs
movsb
insb
add
scas
dec
ret
sti
sub
sarl
jo
notl
jecxz
orb
or
cmp
push
adc
add
sahf
shl
dec
dec
mov
mov
sbb
repnz
xor
and
dec
pop
jbe
dec
aaa
sub
xor
ss
fidivl
js
mov
xchg
inc
or
add
add
lea
sub
adc
or
movsl
or
pop
push
push
push
jmp
push
sbbl
aaa
push
dec
je
push
lds
scas
cmp
loopne
jbe
push
push
pop
lea
fnstcw
repnz
pop
cmp
daa
push
and
add
rorb
les
stos
dec
bound
cmp
cmp
test
outsb
dec
outsl
xor
or
cmpsb
xor
inc
leave
test
xor
roll
mov
pusha
pop
scas
xor
xchg
daa
sbb
pop
je
icebp
rcrb
sub
sar
pop
outsl
ss
or
jae
mov
cmc
dec
jb
push
fcompl
push
xchg
loopne
lret
addr16
xor
xorl
and
inc
mov
fdiv
outsb
or
mov
mov
pop
es
or
leave
mov
scas
push
xchg
sub
dec
arpl
stc
leave
push
jl
pop
push
push
push
cmp
outsb
and
xor
arpl
adc
fst
lock
xor
xchg
inc
iret
loopne
ret
mov
adc
decl
ss
std
or
dec
add
mov
stos
or
aas
bound
add
loopne,pn
fidivl
add
pushl
les
push
rolb
out
rorb
inc
cmp
cwtl
push
sahf
call
push
inc
xchg
sub
lds
mov
inc
inc
jno
jmp
mov
jbe
add
call
test
rolb
clc
hlt
scas
and
dec
adcl
add
gs
mov
xchg
adc
dec
ss
push
dec
loopne
add
mov
dec
push
add
addl
inc
insl
mov
inc
xchg
dec
rclb
mov
pop
inc
or
push
xor
jns
or
decl
pushl
movsb
add
ret
neg
pop
adc
dec
add
pushl
adc
pop
sbb
add
leave
ret
adc
adc
inc
jp
imul
inc
dec
leave
push
jno
je
add
and
dec
dec
push
call
mov
jmp
mov
add
in
adcl
add
push
inc
arpl
inc
jb
int3
mov
adc
sbb
dec
mov
das
mov
xchg
fldenv
imul
rorb
insl
push
xor
dec
jge
sub
inc
adc
int3
leave
add
inc
push
push
add
xchg
sti
xor
add
push
xor
xchg
dec
ja
popa
xchg
add
jle
pop
adc
outsb
imul
fs
or
push
jns
adc
mov
jl
loop
add
mov
ds
fnstenv
mov
arpl
push
push
push
adc
pop
push
dec
rcll
lahf
fdiv
ss
add
in
pop
roll
lcall
mov
add
add
aas
sarb
pop
rcrb
ja
and
xlat
dec
into
test
or
insb
lock
add
xor
pop
sbb
and
int
push
jns
jo
pop
pop
or
fistpll
cld
add
outsb
push
inc
inc
adc
sbb
inc
mov
xor
outsl
orb
jae
outsl
dec
bound
mov
stos
scas
cmp
test
pop
jg
push
dec
rep
pushf
mov
inc
and
flds
pop
pop
rolb
test
decb
ds
sub
add
aaa
cld
bound
andb
jno
pop
add
cmpsb
mov
jp
and
lahf
sub
neg
sub
adc
mov
push
xor
add
xchg
jae
inc
mov
sbb
inc
mov
mov
adcb
xor
pushf
xorl
pop
mov
divb
or
push
ss
sbbl
xchg
shlb
add
test
sbbb
dec
push
push
mov
ds
adc
xor
sub
jne
push
clc
dec
outsb
adc
xchg
mov
dec
fsubrs
inc
rorb
and
add
or
push
add
add
inc
sub
fs
fisubrs
pop
push
mov
mov
push
into
mov
nop
sbb
aas
fsubrl
push
push
xor
push
pop
fildl
push
xor
jbe
dec
sub
push
lahf
dec
popf
outsb
scas
mov
sub
dec
push
push
or
roll
clc
daa
neg
adc
sub
pop
sti
push
sub
push
xchg
adc
mov
in
mov
sub
dec
scas
lcall
mov
std
ja
adcl
ljmp
pop
jae
dec
shrb
mov
dec
push
pop
hlt
dec
in
sbb
adc
test
adc
les
or
jne
lret
add
cmp
insl
fmuls
mov
inc
inc
push
pop
cs
iret
jno
or
jecxz
jns
pop
and
loopne
cld
gs
jno
scas
outsb
push
js
rorl
adc
arpl
loope
cmovnp
inc
mov
inc
sub
xorl
lahf
add
inc
adc
imul
sub
push
mov
cli
jne
dec
push
fs
add
inc
fs
roll
xchg
jg
aad
test
jb
mov
sti
mov
cmp
test
xchg
or
fsubrs
push
dec
inc
dec
jge
mov
cmp
popf
add
mov
mov
add
int3
or
gs
push
inc
mov
mov
enter
inc
inc
mov
add
add
mov
add
mov
xor
dec
inc
push
test
orb
sbb
pop
aas
push
dec
inc
push
push
ss
lds
or
call
imul
jbe
incb
push
push
sbb
inc
adc
sub
add
or
sub
subb
lock
sub
imul
mov
dec
add
jb
pop
mov
call
aaa
add
jae
and
lea
jbe
jbe
inc
jmp
jg
adc
shl
xlat
ret
leave
ret
push
push
mov
rol
or
call
test
inc
in
loopne
testl
push
shrb
push
jmp
xchg
mov
push
push
movsb
js
dec
outsb
shrl
neg
xor
inc
sbb
xchg
gs
add
pushf
ds
xor
or
cmp
inc
addr16
mov
inc
ja
pop
loopne
mov
push
mov
push
hlt
mov
adc
std
and
xor
add
sbb
add
inc
fildl
dec
push
pop
xor
xor
adc
es
mov
and
add
sub
out
push
inc
pushw
push
sub
adc
cmp
pop
jle
insb
fs
inc
xor
mov
inc
sub
push
dec
xor
inc
out
test
push
imul
sti
or
dec
adc
jno
mov
xchg
insb
loopne
or
out
add
add
and
xchg
hlt
sbb
fwait
push
xor
xlat
cwtl
adc
call
js
xchg
or
xor
mov
sub
into
nop
dec
xchg
lods
outsl
push
jo
aaa
bound
add
dec
push
cmp
sub
mov
xor
outsb
sub
dec
cmp
or
fidivrs
fstpl
push
or
jecxz
es
cs
orb
test
out
and
in
add
push
inc
outsb
inc
adc
nop
pusha
sbbl
lods
int3
push
add
sbb
out
js
sahf
iret
inc
loop
sub
inc
xchg
push
add
or
outsl
sarb
pop
cld
xchg
sbb
inc
push
neg
not
filds
cwtl
addb
aas
add
lret
lods
inc
dec
dec
outsb
or
or
jno
dec
push
jb
stos
pop
jne
lock
popf
outsl
adc
imul
out
push
call
xchg
mov
push
push
jbe
cmp
enter
loopne
test
or
and
mov
in
mov
dec
add
pop
jge
sbb
dec
ss
negl
add
inc
dec
fimuls
or
inc
daa
mov
and
paddusb
inc
add
mov
inc
addb
jmp
arpl
rcrb
mov
aad
xchg
dec
enter
xchg
and
xor
inc
arpl
shrl
mov
xorb
inc
mov
stos
icebp
rolb
inc
mov
ja
insl
add
inc
or
push
add
mov
stos
adc
scas
push
inc
sub
push
call
arpl
imul
add
mov
mov
push
stos
lahf
lds
rol
movl
insl
js
xor
push
xchg
ljmp
xchg
push
and
mov
push
mov
insl
dec
daa
and
push
mov
push
sti
sub
cmpsl
pop
fmul
xlat
lea
mov
out
stos
mov
push
add
lcall
cmp
stc
dec
dec
lock
add
push
and
pop
inc
push
inc
mov
adc
sbb
push
cli
rorb
sbb
cmp
mov
mov
jno
js
inc
adc
mov
inc
mov
adc
mov
or
neg
add
push
mov
xchg
pop
or
sbb
xchg
clc
pop
aad
icebp
adc
neg
clc
jne
sub
loope
ret
pop
xor
xchg
push
jo
xchg
pop
addr16
cmp
xor
nop
pop
orb
mov
add
dec
je
pop
pop
mov
mov
xor
sbb
dec
sub
push
add
jge
xchg
adc
aam
fs
xor
leave
sarl
test
push
mov
jne
xchg
inc
neg
pop
inc
mov
jae
add
cld
adc
les
imul
cmp
jno
push
jl
push
xchg
in
in
inc
mov
xchg
outsb
arpl
bound
jno
inc
dec
dec
cmp
dec
add
js
mov
or
enter
adc
dec
lcall
gs
orb
les
je
add
or
jb
jg
push
rcll
sbb
jmp
add
mov
push
adc
cmpb
inc
jge
gs
add
sar
lds
int
inc
aaa
push
inc
or
add
push
test
cli
mov
mov
das
rolb
pop
push
dec
insl
add
insb
leave
movsl
mov
sbb
sbb
and
outsb
mov
dec
push
cltd
push
push
aas
subb
dec
mov
leave
ret
adc
or
mov
fsubl
sub
adc
mov
mov
xchg
cwtl
dec
xchg
xchg
cmp
hlt
adc
call
xchg
xchg
pop
mov
sbb
jne
es
mov
or
les
push
push
inc
push
jno
and
cmpsl
push
addb
jmp
xchg
mov
add
dec
inc
xorb
lcall
push
jmp
vmaskmovdqu
or
xchg
dec
test
loop
adc
cmp
les
dec
int3
push
adc
mov
hlt
or
mov
add
cmpsl
lret
sbb
cmp
cmc
in
jb
bound
xor
mov
push
test
stc
dec
fwait
lea
add
jp
sub
test
push
inc
aaa
mov
push
in
lahf
and
insl
mov
lock
push
ss
scas
stc
push
adc
inc
xchg
dec
rcll
jg
fwait
jae
inc
dec
push
and
dec
dec
inc
push
add
push
add
pop
cmp
sub
jge
lock
and
scas
addr16
inc
sbb
dec
imul
in
dec
movsl
mov
mov
dec
mov
cmp
outsb
ss
arpl
mov
test
pop
pop
push
lods
push
xor
pop
cli
push
push
add
lods
or
cmpl
push
dec
in
test
push
icebp
inc
and
dec
dec
outsb
adc
pushf
sbb
ljmp
add
ret
addr16
add
jo
data16
or
pop
adc
mov
jno
push
cmc
imul
imul
fbld
mov
cli
adc
sbb
add
neg
dec
adc
cwtl
xor
sbb
enter
dec
cltd
popa
sbb
dec
jne
dec
not
push
xor
push
sub
aaa
mov
add
jb
idivl
notb
outsl
adcb
jnp
mov
inc
jl
push
enter
add
push
cld
dec
ja
dec
rol
adc
and
into
xchg
sbb
fwait
mov
jp
fs
push
push
sbb
push
inc
jb
xor
testl
pop
mov
mov
adc
pop
stos
add
cmpsb
add
inc
outsb
mov
test
scas
cwtl
mov
mov
mov
jb
js
mov
popf
ret
dec
int
mov
push
jno
push
test
push
jae
push
adc
add
push
xchg
inc
out
inc
dec
inc
sub
and
push
int3
mov
jecxz
scas
inc
adc
data16
push
jne
mov
adcl
push
and
mov
inc
test
mov
js
cmp
outsb
jae
dec
int3
clc
rclb
in
lods
mov
mov
outsb
mov
xor
mov
repz
xchg
add
incl
pop
dec
arpl
xor
dec
xchg
add
andl
arpl
push
movsl
sbb
je
jl
clc
add
mov
fs
dec
cmp
sub
fisttps
pop
mov
sbb
cli
insl
inc
xor
gs
int3
mov
dec
dec
mov
das
cli
gs
push
inc
push
cmp
ud2
lret
push
fs
xor
mov
jbe
jae
js
js
add
in
cs
pop
addb
push
sti
push
movl
popl
shlb
cmp
int3
push
outsb
dec
jge
dec
lods
and
inc
mov
cmp
inc
rclb
jb
popf
xchg
loop
jmp
jns
xchg
and
shll
cld
pop
mov
add
xchg
ret
add
dec
xor
push
adc
cli
data16
dec
and
mov
cmc
addl
scas
inc
jp
push
mov
and
or
aas
notl
mov
add
push
inc
sub
ljmp
fldcw
add
jne
add
decl
loop
push
loop
outsl
pop
xor
add
push
mov
jne
add
outsl
sub
aad
cs
xor
mov
or
add
cmp
test
cmp
dec
ficoms
jl
test
dec
add
xor
mov
inc
imul
cwtl
adc
or
aam
clc
aad
adc
aas
adc
rolb
shl
inc
or
cwtl
out
addl
cmp
cmc
insl
add
aaa
cmp
inc
push
xor
roll
dec
or
adc
push
rorl
insl
and
or
push
or
outsl
clc
neg
adc
loopne
pusha
not
add
sub
cld
out
push
dec
aam
mov
sbb
neg
add
dec
jg
push
loop
push
add
add
inc
add
shrl
mov
jl
push
adc
inc
inc
pop
add
sbb
dec
pushl
inc
sub
not
ret
cs
out
in
jg
enter
call
mov
cmp
jge
push
inc
push
rcrl
dec
push
addr16
inc
and
mov
not
add
sbb
push
dec
addr16
push
add
jmp
pcmpeqw
push
sti
push
jmp
push
add
aaa
push
mov
add
nop
add
jbe
lods
push
mov
sbb
ret
shlb
andl
adc
cmp
xor
scas
add
add
jecxz
jp
and
sub
into
dec
subl
inc
jnp
push
and
cmp
or
cmp
call
outsl
sub
adc
sbb
subl
adc
push
xor
int
mov
inc
hlt
pushf
xor
fs
add
push
mov
sbb
enter
fidivl
mov
push
add
mov
push
fdivp
scas
mov
test
dec
sbbl
imul
xor
dec
aad
outsb
ror
outsb
xchg
faddl
xor
cmpsb
sub
lds
inc
cs
addr16
dec
adc
mov
push
cld
pop
xchg
mov
popa
les
xchg
es
cmp
adc
ss
jl
inc
push
sarb
mov
or
dec
fnclex
push
jge
ljmp
hlt
in
sarl
push
push
pop
inc
and
add
insl
dec
inc
xor
add
je
sub
rorb
push
pop
sub
mov
pop
jns
aam
mov
xor
push
push
and
push
or
xor
js
inc
push
or
divl
push
push
cwtl
imul
rorb
dec
sub
push
mov
push
inc
mov
ja
add
inc
push
xor
add
mov
fadd
push
xor
adc
cli
cmpsb
mov
inc
push
repnz
pop
enter
dec
mov
xor
add
xchg
mov
push
ss
jecxz
add
mov
in
sbb
add
ds
movl
nop
or
mov
imull
incb
shll
sub
and
roll
add
lds
sbb
orb
add
jmp
dec
test
dec
mov
addb
mov
add
inc
mov
or
push
add
dec
imul
and
xchg
aaa
mov
mov
push
popf
sub
cltd
in
call
and
jl
or
popa
dec
xchg
push
js
mov
push
cwtl
adc
sti
xor
jb
xchg
popa
data16
fdivr
push
aaa
cmp
mov
sub
mov
inc
fwait
out
movsl
enter
mov
cld
sbb
hlt
push
scas
lret
cmp
push
icebp
push
pusha
mov
popa
inc
mov
loopne
cmp
push
inc
outsb
pop
add
inc
fs
mov
xchg
test
xchg
mov
bound
rolb
push
repz
or
mov
mov
leave
ret
leave
pop
pusha
inc
add
dec
push
xor
mov
push
inc
add
cmp
sbb
inc
lods
or
pop
push
enter
dec
subb
lock
test
rorl
or
or
negl
cmpsl
sub
fldcw
rorl
rorl
sub
jbe
test
or
pop
outsb
arpl
push
mov
inc
in
addr16
scas
mov
arpl
jg
movsl
mov
icebp
add
insb
inc
lock
cmp
cmp
or
scas
clc
pop
xor
push
aaa
push
push
jae
adc
xlat
test
stos
je
and
stos
push
das
mov
lds
sbb
mov
sahf
rcrb
pop
sarb
aad
inc
in
add
push
add
inc
fld
mov
pop
enter
adc
cltd
mov
pop
add
xchg
mov
inc
dec
add
mov
jno
iret
add
outsb
pop
in
add
mov
add
in
dec
xor
lods
adc
mov
addps
enter
sub
sub
pop
je
insl
sub
mov
adc
adc
imul
inc
mov
out
dec
xchg
ss
inc
sbb
add
sbbb
divl
cwtl
jmp
dec
push
inc
push
push
les
jno
mov
xchg
imul
rorb
add
stos
inc
movsl
push
push
xchg
dec
add
and
fldenv
inc
xor
inc
lods
and
mov
call
movsl
xchg
lret
js
dec
inc
sbb
push
dec
push
lods
jb
add
iret
jb
insb
imull
add
mov
pop
sbb
gs
push
jno
inc
nop
inc
insb
xchg
push
stc
daa
lods
ss
inc
cmp
add
test
inc
rcr
loopne
pop
js
jno
mov
dec
dec
dec
call
adc
dec
movsb
inc
gs
push
test
loopne
adc
mov
sahf
les
sub
in
mov
push
loop
pop
ret
pop
not
sub
add
add
or
pop
or
clc
sbb
push
sbb
push
fistpll
dec
pop
sbb
into
inc
pushl
add
inc
ret
sbb
testl
clc
leave
ret
and
and
xchg
test
bound
lcall
je
push
push
pop
pushf
sbb
dec
pop
pop
fadds
je
push
mov
hlt
outsb
push
inc
inc
and
xchg
fldcw
inc
das
test
outsb
inc
ss
inc
hlt
mov
daa
lret
ja
inc
insl
rorl
aaa
dec
cmpsl
clc
or
push
nop
pop
shll
inc
addl
sbb
dec
push
mov
mov
jecxz
jne
jg
jbe
sbb
jmp
insl
push
sub
inc
loop
xchg
adc
pop
push
dec
out
fwait
add
and
outsb
test
cmp
cmp
inc
cld
arpl
jo
aas
roll
xor
mov
add
sub
sub
dec
rorl
js
in
inc
addr16
cmp
inc
fisttpll
dec
vmovaps
sbb
xchg
clc
mov
insb
push
dec
dec
add
stos
xor
shll
popf
xchg
cmpsl
inc
dec
mov
pop
ret
mov
inc
dec
ljmp
or
pop
or
sti
outsl
pop
dec
sbb
cmp
jne
adc
pusha
adc
mov
call
push
mov
js
addr16
in
sarl
test
call
arpl
push
jne
cld
inc
das
xchg
pop
pop
push
ss
stos
ds
mov
loopne
add
or
and
and
adc
outsb
insb
ja
insl
imul
bound
jg
leave
jne
bound
gs
bound
xor
lcallw
and
xor
ss
adc
aaa
xor
js
bound
outsb
push
jne
jns
dec
nop
icebp
decl
jno
popa
popa
jno
push
insl
fs
imul
stc
call
dec
dec
pop
xor
xor
jbe
inc
dec
push
jg
inc
jle
xor
xor
push
add
aaa
xor
mov
aaa
xor
ja
mov
insl
xor
in
aaa
outsb
adc
pop
fsts
adc
push
loopne
rclb
je
xchg
mov
int3
or
xchg
aas
jecxz
adc
addr16
add
lcall
xchg
lods
sbb
into
es
dec
mov
xor
shrl
pusha
test
fdecstp
call
xchg
xchg
or
adc
xchg
mov
cmpb
adc
incl
xchg
sti
mov
pop
mov
pop
xor
mov
jmp
dec
lea
daa
add
sub
cltd
cwtl
outsl
ljmp
xchg
fiaddl
mov
outsl
cmpsl
ss
pop
sbb
pop
dec
inc
cmc
insl
popa
mov
and
sbb
leave
cmpb
ljmp
push
sbb
or
mov
adc
jge
das
lods
jo
jmp
idiv
lcall
mov
out
cmc
es
inc
mov
xor
dec
jno
jmp
adc
jmp
sahf
sti
push
sti
rorl
int
pop
decl
scas
mov
daa
test
and
hlt
xchg
roll
into
out
jns
dec
push
inc
in
pop
inc
or
inc
mov
dec
dec
push
cmp
ja
cmp
pushl
mov
lahf
iret
or
sbb
aaa
leave
jecxz
mov
mov
mov
push
call
mov
lds
adc
popf
mov
pop
mov
into
and
ljmp
mov
add
aaa
cmp
adc
mov
pop
test
push
inc
mov
inc
push
imul
cmp
out
insb
lods
outsl
test
lret
cli
sub
sub
mov
lock
lahf
adc
lock
jmp
mov
sub
jns
cmpsb
cmpsb
gs
xor
cmpsl
mov
dec
outsb
cmc
mov
decb
lcall
test
mov
mov
cmp
out
call
call
std
outsl
and
shr
sbb
ret
xlat
adc
cld
push
outsb
xchg
ljmp
idiv
decl
pop
xor
popa
add
dec
cld
and
clc
bound
lock
nop
mov
call
ds
icebp
sarb
push
mov
lds
or
add
dec
call
call
cwtl
and
or
fisttpll
jl
jg
mov
fcos
lcall
xor
push
test
scas
push
push
stc
lock
ret
mov
sti
lcall
mov
inc
pop
jno
lret
in
cli
mov
sub
je
icebp
test
std
loopne
sub
sub
jg,pn
dec
pop
or
mov
repnz
jg
pop
push
addr16
je
je
les
xor
outsl
sub
lods
ljmp
xorb
mov
fs
mov
out
or
pop
jmp
mov
divb
xor
mov
clc
test
sbb
sub
int
int3
pushl
adc
or
push
and
jmp
sub
scas
stos
lods
sbb
sub
jnp
mov
inc
cltd
xor
lahf
test
xchg
sahf
push
add
dec
fists
lods
pop
loopw
ret
pop
pop
jbe
shlb
push
jmp
or
cmpsb
test
inc
inc
sarb
pop
sti
push
or
fiaddl
mov
call
add
lds
faddl
inc
ret
je
bound
sub
xchg
xchg
pop
push
notl
push
inc
rolb
addl
mov
fidivrs
ja
add
mov
call
sub
lods
mov
dec
mov
cs
adcl
or
dec
pop
mov
lret
aad
scas
adc
adc
cli
lods
iret
cmc
adc
and
jmp
mov
test
loopne
cld
add
dec
cltd
out
and
mov
add
lcall
popf
pushf
dec
std
jno
popa
jnp
inc
movsl
jp
lahf
jne
fs
sti
pop
sub
das
pushl
dec
sub
test
filds
in
incb
bound
leave
mov
fcmovnu
insl
or
mov
xchg
gs
out
jno
movsb
cwtl
call
push
sti
and
mov
push
sbb
jge
xchg
rcl
sub
incl
popa
xor
dec
fs
mov
cmp
and
xor
ret
mov
mov
filds
dec
das
les
addr16
ret
pop
das
in
into
jge
arpl
pop
adc
loope
mov
mov
jbe
inc
ret
mov
cmc
lods
xor
cmp
sbb
decb
pushl
fldenv
mov
sahf
mov
andb
jbe
mov
push
sbb
ss
call
and
dec
mov
jmp
push
lcall
mov
cmp
das
ds
int3
ja
in
addr16
jle
aaa
iret
mov
lods
mov
inc
icebp
or
ljmp
nop
imul
jmp
rsqrtps
sarl
jns
sbb
ja
jbe
fdivl
and
pop
xchg
lods
mov
mov
rolb
ss
mov
cmc
cmp
pop
decl
enter
aam
in
lahf
outsb
ljmp
inc
es
ljmp
jle
popf
inc
adc
dec
test
push
cmp
cld
sti
ljmp
mov
rorl
cmp
pop
inc
bound
lods
js
daa
mov
push
sbbl
outsb
inc
outsl
mov
mov
push
in
and
push
addr16
out
or
incl
xchg
xchg
jmp
jmp
enter
cli
in
jne
je
sbb
std
jg
xchg
and
cmp
rolb
sub
pusha
das
icebp
pop
mov
cltd
int
inc
mov
jmp
mov
icebp
mov
in
pop
push
lods
inc
jle
in
cmpsb
push
insl
xchg
enter
das
cld
push
and
ja
outsb
sbb
jno
out
cmp
inc
out
push
clc
in
pop
and
and
cmp
imul
movsb
mov
xchg
and
call
clc
mov
test
jno
mov
shr
or
push
ret
ss
mov
cli
popf
push
aas
in
cli
mov
cwtl
xor
dec
std
repnz
push
clc
call
and
jb
popa
sub
xor
xchg
movsb
mov
int3
andl
pop
xor
dec
pushl
and
into
jl
xor
pop
repnz
pop
popf
test
pop
mov
xlat
sbb
aas
pop
cmpsl
imul
push
push
and
sub
push
lods
test
or
lea
mov
es
fscale
pop
xchg
jno
movsl
mov
in
leave
test
or
out
cli
in
outsl
adc
hlt
mov
arpl
xor
nop
inc
out
cmpsl
xorb
dec
int
xchg
repz
inc
inc
cmc
xchg
sbb
dec
insl
push
icebp
ret
call
fbld
inc
aaa
cmpsb
test
test
mov
roll
mov
cli
sti
cs
ja
sub
push
sub
xchg
xchg
inc
fdiv
pandn
out
fsubl
aas
mov
pop
pop
cmp
and
push
icebp
xor
xchg
cmp
cmc
push
lcall
clc
sbb
icebp
cmp
push
xchg
and
lods
jg
incl
inc
mov
out
imul
pop
pop
and
mov
incl
ljmp
clc
shl
decl
adc
pop
xchg
sbb
fistps
vmovss
adc
or
fimuls
xor
cld
pop
test
call
addr16
es
cmc
push
push
cmp
push
sub
decl
in
ss
pusha
jns
mov
or
lcall
mov
lds
lods
rcr
mov
and
popf
aaa
sbb
xor
push
aam
lahf
ja
mov
xchg
xor
aad
call
jecxz
cmp
ljmp
rorl
and
jnp
pop
mov
sbb
das
and
xrelease
dec
mov
in
mov
loope
notb
test
popa
ljmp
xchg
mov
pop
cld
call
mov
testl
mov
out
jle
loope
cld
mov
mov
or
adc
cld
mov
xor
popf
sbb
insb
lock
push
loopne
cmp
lea
subl
xchg
mov
sub
cmpsl
das
dec
xor
fistpll
dec
fs
mov
stos
mov
pop
call
cmp
ror
in
icebp
and
iret
mov
add
je
data16
sarl
decl
adc
popl
ss
xchg
lcall
jmp
cs
int3
pop
or
fisubrs
lcall
dec
test
mov
aaa
sbbb
aaa
setg
lods
lcall
jl
push
int3
loopne
lods
push
mov
out
stc
xchg
pop
call
xchg
es
in
mov
push
mov
jmp
inc
dec
imul
lods
stos
push
push
mov
loop
lods
mov
pop
pop
hlt
enter
repnz
xchg
pop
das
pushl
mov
xchg
mov
mov
add
add
lcall
and
in
mov
mov
out
into
inc
iret
jns
enter
decl
push
lahf
in
inc
adc
scas
mov
out
xor
mov
fbld
loope
repnz
mov
push
xor
fs
call
lahf
ds
imul
mov
ds
insl
andl
test
xchg
jl
sbb
push
mov
clc
pop
mov
gs
mov
ret
jge
pushl
sub
mov
mov
push
fwait
mov
and
test
and
push
lock
outsb
xor
enter
call
mov
jns
lret
stc
mov
insb
adc
imul
loop
incl
lods
pop
sarb
bound
fcomps
cmc
or
pusha
call
rcr
cmp
xor
ss
and
repnz
push
pushl
push
movsl
push
sub
mov
pop
test
inc
ds
repnz
dec
fldt
pop
decl
mov
sbb
mov
dec
push
lcall
jmp
mov
mov
push
incl
push
in
fbstp
mull
jg
std
push
pushf
adcb
sub
jae
cmpsb
mov
lcall
adc
mov
movsl
shlb
push
jne
fcompp
repz
rep
hlt
out
xor
sub
jmp
inc
pop
xlat
sub
jl
push
ja
xchg
enter
fdivrp
js
sub
outsl
inc
stos
icebp
add
addr16
xlat
icebp
pop
xchg
decb
cmp
cmp
out
sub
filds
push
sub
xor
out
lock
out
mov
lds
lds
popf
xchg
pop
push
scas
mov
xchg
sub
shlb
loopne
jp
js
rcr
mulb
hlt
sub
cmc
test
and
test
in
mov
cli
adc
repnz
mov
fdiv
bndstx
ds
pop
test
shll
jmp
adc
push
ja
ss
mov
js
lret
mov
lret
xchg
stos
les
stos
cli
cld
fmul
pop
push
pop
sbb
call
popa
nop
scas
mov
sbb
aaa
inc
loope
in
repz
dec
add
ljmp
ds
push
add
mov
fs
rol
fmuls
incl
add
adc
adc
subl
jns
xchg
popa
lock
sub
pop
mov
jl
xchg
into
mov
lods
push
push
dec
rorb
jmp
outsl
mov
pop
xchg
repnz
adc
mov
nop
es
cwtl
lret
insl
pop
das
dec
push
mov
jmp
ds
aam
push
hlt
inc
pop
xchg
and
lcall
mov
movsl
out
sub
lcall
enter
xor
mov
jmp
addb
test
jmp
dec
es
mov
scas
sub
pop
push
stc
dec
push
call
jae
and
mov
insl
inc
fmulp
pop
and
and
lds
cmp
jmp
icebp
sbb
dec
in
add
dec
data16
mov
adc
push
xchg
xchg
fidivl
jp
jmp
fwait
outsb
jmp
movsb
in
add
xchg
sbbb
pushf
dec
sbb
cmp
sbb
push
push
pop
stos
mov
inc
das
cmp
dec
incl
xchg
out
out
dec
fsubrs
sub
jmp
add
xchg
test
ret
sbb
mov
pop
insl
shlb
mov
add
push
cmp
or
cmp
insb
ss
pop
add
ljmp
and
lret
scas
and
adc
dec
sub
fisubrs
jmp
lcall
negb
xor
mov
clc
xor
sbb
or
xor
icebp
decl
jge
das
outsb
andl
inc
imul
outsl
insl
push
push
jno
or
jp
lods
pop
dec
ljmp
pop
cld
pop
dec
call
push
mov
xchg
jmp
in
movsb
ljmp
xchg
test
push
and
pop
cmp
lea
inc
xchg
xchg
out
pushl
testl
jae
push
leave
or
arpl
fwait
idiv
lcall
outsl
std
cmp
cld
pop
jmp
adc
mov
add
push
xorb
xorl
movl
push
lods
outsl
jge
aaa
add
inc
sub
or
dec
lcall
std
mov
fdivrs
xchg
sbb
insb
push
mov
sbb
xor
lcall
xor
xchg
popa
sub
test
mov
ljmp
fildll
dec
xor
xlat
xlat
sub
cmp
cmc
jbe
cmp
jne
mov
pop
dec
aaa
xchg
or
mov
jmp
xor
out
pop
ds
mov
dec
jmp
mov
push
les
or
mov
ljmp
outsb
jbe
cmpb
mov
je
movsb
mov
mov
cmpsb
fdiv
lock
cli
je
je
mov
test
out
pop
pop
lcall
mov
movsb
xor
lcall
pop
outsl
lcall
mov
adc
cmc
dec
pop
pop
jb
cmp
pushl
lcall
cmp
pop
inc
mov
out
push
xchg
inc
sarl
incl
rolb
adc
jmp
pop
mov
rcr
call
call
adc
fs
push
movd
clc
movsl
pop
dec
sbb
call
pop
out
scas
xor
dec
sub
push
inc
mov
call
push
stos
pushl
xadd
mov
lret
and
nop
push
pop
jmp
sub
mov
sub
out
test
es
or
cmpb
fcomi
clc
mov
push
xchg
pop
lea
js
mov
lcall
nop
stos
add
pop
ja
test
call
adcl
xorl
pushl
stos
les
lret
call
loope
sub
pop
rcrl
jne
and
mov
add
xor
enter
lcall
sbb
mov
and
mov
push
jg
fisubl
xor
pop
lahf
mov
jl
mov
clc
rcrl
dec
stc
jecxz
jp
jg
js
daa
sub
push
adc
jg
and
iret
xor
xorl
incl
sub
mov
and
lret
loopne
xchg
xchg
xchg
mov
cli
leave
dec
test
and
jle
mov
les
push
mov
test
xchg
scas
cmp
outsl
ljmp
sub
jp
ja
sbb
call
jg
in
dec
lea
icebp
add
mov
pop
pmullw
jnp
dec
mov
movsb
push
rolb
jge
jmp
sbb
call
sti
jecxz
les
jmp
xchg
jnp
scas
aas
sahf
mov
add
adc
or
dec
aam
mov
pop
xor
subl
loopne
rolb
subb
push
imul
xor
int3
insb
fwait
cld
pop
push
fistpll
ficoms
mov
outsl
cwtl
mov
xlat
addl
ljmp
push
pop
fucom
test
movsb
xchg
cmp
dec
fbld
sub
push
pop
or
movsl
int3
out
hlt
cmp
jg
das
stos
aaa
add
jo
mov
dec
rcl
mov
ds
fldt
sbb
mov
arpl
test
repnz
movsl
repnz
jmp
adc
cmp
jmp
push
aas
push
add
outsl
icebp
lods
pop
sbb
arpl
cltd
jl
test
test
jmp
rclb
mov
jnp
daa
ret
imul
cmp
insl
subb
call
test
cmp
xchg
xchg
mov
insl
cmp
jecxz
stc
aam
lods
xor
outsb
outsl
scas
shr
addr16
lods
add
inc
sbb
cmpsl
daa
dec
outsb
out
shr
or
mov
sub
mov
sbb
mov
mov
mov
push
push
imul
and
mov
add
aad
ljmp
jp
adc
xor
rcrb
xchg
ljmp
leave
fadds
cli
mov
fbld
imul
loop
mov
mov
xor
call
sbb
shrl
adc
and
cmp
sub
loopne
icebp
fbstp
mov
inc
lret
and
mov
pop
sbb
frstor
pop
inc
lock
sub
fadd
hlt
pop
cli
lcall
mov
pop
sub
mov
fdivrl
dec
out
sub
sbb
push
mov
clc
pop
or
jae
daa
jb
sub
lcall
repnz
data16
lret
fdivr
cmp
sub
out
or
xorb
jge
incl
pushf
pusha
jne
loope
cs
or
fs
add
jne
push
mov
xor
arpl
mov
rcr
rcl
lds
shrl
test
mov
jmp
jmp
mov
pushf
adc
lcall
jne
or
pop
jl
icebp
outsb
decl
cld
stos
lahf
fistps
int3
pop
test
jl
mov
popa
jg
jbe
push
ljmp
lock
cld
stc
lods
mov
jmp
daa
aam
popa
shlb
or
inc
out
js
decl
pop
loop
out
push
xchg
ror
hlt
push
rcl
sti
mov
test
sub
push
mov
jg
test
adc
bound
inc
rcrl
bound
rcr
idiv
jmp
mov
dec
sub
push
jbe
push
cld
adc
or
jb
dec
test
mov
jp
mov
je
lret
mov
shll
jbe
popa
cmp
fisubs
sub
mov
movsb
nop
xchg
and
movl
ret
inc
dec
out
cmpsb
stos
pop
lods
lds
cmp
xchg
or
bound
mov
mov
stc
lret
cmp
fcompl
pop
rorb
jb
jg
push
ljmp
scas
jecxz
push
push
in
mov
leave
iret
push
cs
sbb
lods
fidivl
ljmp
data16
shl
cmp
cli
frstor
xor
scas
or
mov
rcl
dec
pop
mov
jg
cmp
mov
std
sarl
xchg
ljmp
or
popf
icebp
push
xor
cs
rorb
cmc
mov
mov
xchg
scas
push
sbb
ljmp
lret
scas
repz
das
xor
outsb
in
in
shlb
fwait
mov
mov
xchg
int
sbb
dec
push
addl
int
ss
jmp
cmp
mov
adc
fld
jno
dec
daa
daa
jg
fidivs
mov
out
gs
out
mov
std
pop
aas
insb
decl
fwait
pop
loop
or
adc
push
call
xor
cli
or
sbb
jg
dec
mov
fdivrp
or
cwtl
cmp
mov
iret
pushl
clc
call
shll
sub
jmp
popf
lret
aam
sbb
add
mov
sti
add
xor
or
xchg
mov
in
pop
cli
lods
lcall
cs
mov
sti
stc
or
or
into
out
xor
adc
inc
ljmp
mov
push
sub
in
mov
lcall
add
sbb
ss
push
xchg
mov
xor
push
add
imul
push
lret
push
fildll
insb
adc
push
push
or
sbb
out
mov
cmp
loope
inc
push
in
mov
mov
push
aaa
push
and
lods
pushl
sbb
lcall
sub
jg
cmp
and
and
insl
test
or
adc
pop
push
push
add
cli
incl
or
xchg
lcall
sbb
jno
repz
jg
pop
out
sbb
push
sarl
push
in
inc
outsb
outsb
push
lea
dec
cmp
adc
test
cmp
stos
jnp
ljmp
call
dec
push
fnstcw
movsl
or
lcall
jg
push
ljmp
cmp
ja
xor
loop
jno
movsl
push
fisttps
and
in
xor
sbbl
and
ss
mov
out
or
loope
mov
lcall
stos
cmp
rorb
and
stos
gs
push
insl
add
repz
call
jg
ss
sahf
andl
fisubrl
ds
nop
mov
push
fmuls
mov
int
jmp
xor
imul
sub
xchg
push
sbb
fcomps
sub
loopne
lods
and
jl,pn
popfw
scas
movsb
fsubrl
inc
out
pop
cli
outsl
pop
inc
ret
cmp
push
adc
fmull
pop
mov
flds
xor
pop
inc
movsb
mov
and
jae
das
rol
sarb
lods
lock
sub
sbbl
outsl
or
bnd
call
repz
mov
cs
in
sub
pushl
cli
pushl
call
xchg
mov
cmc
wbinvd
push
or
daa
inc
mov
int
cmp
or
inc
rcrb
insb
mov
xor
lcall
scas
jecxz
adc
ja
and
push
sub
shll
insb
pushl
mov
pop
jbe
pop
imul
shrl
or
push
push
push
xchg
cmp
xor
lods
out
rolb
imul
cmc
mov
call
daa
ficomps
movsb
into
jae
sbb
sbb
push
sub
out
or
jb
sub
lcall
pop
outsb
jl
sti
xor
adcb
dec
cmp
imul
jg
or
xor
loop
sub
lcall
mov
sbb
pushl
popa
jp
addr16
inc
jae
add
pop
mov
and
jb
cmp
jecxz
xor
jg
sub
adc
jp
cmp
mov
adc
ljmp
jg
lahf
dec
sub
sub
adc
jae
dec
and
les
inc
movsb
xchg
aas
xor
leave
push
test
into
jecxz
andb
dec
call
cmp
fcmovnbe
mov
dec
rolb
xchg
loope
js
pop
jmp
inc
pushl
dec
arpl
push
pusha
and
inc
dec
jge
xchg
mov
out
cmp
gs
lret
cli
inc
lret
xlat
cmpsl
outsb
dec
adc
inc
sbb
xchg
stos
test
mov
pop
xor
adc
call
clc
aaa
clc
ljmp
dec
stos
repz
dec
gs
mov
into
adc
lcall
or
je
cltd
pop
in
in
rcl
fsubrs
mov
mov
int3
add
clc
pushl
mov
jo
dec
data16
mov
lret
mov
xchg
push
add
and
mov
loop
mov
popa
push
hlt
xor
cld
jg
repnz
repnz
add
mov
sub
pop
clc
ljmp
inc
mov
lahf
testb
xchg
adc
je
out
xchg
das
imul
sbb
test
pop
xor
and
cmp
pop
pop
xor
ljmp
mov
pop
adc
xchg
out
and
fistpll
cmp
das
or
push
xchg
mov
decl
sbb
outsl
out
pop
popa
popa
mov
mov
sub
ret
in
push
mov
pop
mov
or
xor
fs
cmc
lret
incl
pushf
mov
cmp
or
xor
pop
fcomps
hlt
ljmp
and
dec
and
jne
mov
enter
scas
rcr
call
sbb
push
cmpsb
repz
adc
lahf
andb
lock
dec
std
push
in
stos
in
fcomps
mov
test
mov
decl
inc
push
inc
xlat
pop
daa
cmp
pop
xor
fiaddl
jge
and
fistps
inc
adc
mov
dec
xchg
and
xor
mov
mov
mov
call
ljmp
mov
cs
outsl
jae
lock
in
icebp
ljmp
fimull
dec
lock
loop
or
mov
out
inc
adc
mov
movsl
ss
es
cld
mov
into
enter
xor
ljmp
sarl
or
or
fmull
dec
popl
mov
roll
or
inc
fisttpl
mov
sub
mov
or
mov
or
mov
sbb
jae
adc
lahf
inc
hlt
jo
fs
sar
jg
decl
adc
lea
das
rcll
xor
lret
mov
lds
xchg
inc
lahf
lock
in
idivb
xor
or
push
jne
inc
and
jmp
mov
jmp
fidivs
push
inc
pop
cmpsl
cmp
clc
cmpsl
cmp
push
sbb
loop
sbb
out
jno
push
fbstp
mov
rclb
lds
lcall
shrb
adc
cltd
aad
aad
rclb
mov
or
leave
sbb
sbb
fdivl
cld
and
push
xchg
xor
lahf
jmp
xchg
es
pop
ret
cmp
clc
adc
les
adc
fcomip
cli
shrl
pop
ja
shlb
xlat
outsb
pop
fs
adcl
mov
cld
loope
and
and
cld
mov
packsswb
fdivr
xchg
aam
inc
cmp
inc
mov
cli
mov
imul
adc
jge
int
loop
jmp
std
inc
pop
out
jnp
aam
push
insl
orl
sbb
mov
ret
jg
incl
mov
cs
add
mov
push
jecxz
test
xchg
clc
jg
cli
or
loope
jno
push
sub
ljmp
xlat
fs
insl
dec
lods
mov
inc
lahf
ficomps
jno
pop
add
pop
das
mov
push
or
inc
jecxz
cmpsl
jo
std
in
jg
mov
mov
ja
push
fildl
das
sarb
jns
fildll
cmp
cltd
nop
shl
push
adc
cli
movsl
pop
ljmp
jmp
sahf
cmp
arpl
ret
mov
das
stc
icebp
lods
popf
stos
call
add
jno
or
mov
outsl
lock
jp
sub
dec
sti
sbb
movsl
sbb
sub
inc
mov
cmpsl
cmp
dec
mov
insb
pop
lock
daa
push
in
out
pop
mov
mov
lods
sub
insl
call
or
jae
sbb
sbb
inc
adc
jne
stos
pushf
movsl
mov
lock
jg
fbld
mov
fldcw
aam
data16
std
sub
loop
push
testb
inc
addr16
bound
fwait
mov
mov
xchg
add
icebp
imul
lock
push
inc
and
mov
decl
out
pop
into
add
dec
push
push
pop
aaa
daa
cld
jmp
mulb
outsb
xchg
iret
adc
repz
jne
pushf
mov
icebp
fistpll
clc
call
adc
jb
nop
sub
fstpt
adc
subb
and
sbb
popf
xor
pop
lret
insl
fidivl
insl
insb
push
mov
xchg
sbb
inc
push
push
push
and
and
ljmp
clc
inc
lcall
stos
or
xor
dec
in
sbb
inc
jmp
call
lret
sub
lret
je
popf
mov
lock
sub
push
lcall
sbb
xor
dec
cwtl
mov
cmp
xor
lcall
int
and
lods
mov
cmp
in
test
iret
mov
lahf
mov
adc
xchg
int3
xchg
xlat
outsl
sbb
push
inc
sub
les
fbld
push
jno
mov
dec
mov
lret
arpl
lret
mov
lock
push
add
mov
testb
rep
xchg
or
pushl
pop
push
daa
cwtl
es
mov
adc
enter
xchg
mov
mov
jb
mov
dec
jge,pt
xchg
push
sbb
loope
imul
jnp
lahf
or
loop
cli
fucomip
dec
xor
rep
or
fisubl
sub
fbld
fildl
notl
mov
sub
pop
lock
add
sub
cmp
dec
cmc
addb
js
ja
cmc
fstpt
dec
dec
push
sti
aam
sub
mov
cld
mov
xchg
xchg
push
aad
jne
lret
cmc
idivl
out
das
cli
mov
repnz
jl
mov
mov
cmp
mov
loop
fisttpll
lods
and
adc
cmp
jmp
jge
dec
jno
cmc
fldcw
jp
jge
mov
xchg
mov
mov
daa
inc
je
mov
sbb
clc
pop
xchg
stos
arpl
int
and
call
mov
lret
add
ret
xchg
mov
mov
sahf
cmp
jg
inc
decl
call
shlb
pop
xchg
shll
add
sbb
dec
fists
cmp
outsl
icebp
or
loopne
xor
jecxz
xchg
adc
fstpt
or
pop
or
loopne
rcrb
pop
pop
outsb
cmp
out
mov
jmp
lea
adc
cltd
loope
push
sbb
lcall
dec
imul
and
inc
mov
aaa
or
ret
outsl
mov
inc
push
mov
mov
fwait
dec
pop
add
jecxz
push
nop
xchg
jge
cmp
mov
test
bound
pop
inc
pusha
jl
sbb
or
cmc
mov
mov
adc
jmp
in
cmp
mov
mov
jl
lcall
sub
mov
loope
enter
cmp
push
inc
dec
dec
test
aaa
dec
adc
pushl
add
ret
rcrl
pop
shlb
int
xor
mov
adc
popf
sahf
movsl
data16
mov
jmp
ljmp
xchg
jge
mov
push
sarb
xchg
sbb
lds
es
outsl
cmc
pushl
push
cmpsb
push
dec
xor
lahf
test
lahf
inc
loopne
ret
outsb
pop
loopne
out
and
or
and
shlb
inc
mov
fs
mov
pushl
sub
push
xor
pop
xchg
mov
call
aaa
call
scas
mov
push
push
push
js
je
jno
sbb
dec
add
arpl
incl
push
jns
cmp
push
sub
cltd
mov
rclb
xor
inc
and
je
sub
pushl
shlb
test
repz
lcall
call
adcb
jnp
jle
cmpsl
orl
add
test
call
fsubrp
pop
sbb
jl
cmp
cmp
dec
in
pop
imul
ljmp
inc
dec
int3
jecxz
and
dec
imul
in
lret
ss
cmp
cltd
xor
mov
insl
mov
jle
jnp
push
mov
mov
or
insl
lahf
mov
sub
or
mov
cmp
pop
stos
hlt
and
or
mov
std
pop
cmp
adc
and
inc
pop
call
outsl
add
xor
lcall
aad
in
pop
std
sbb
push
scas
nop
pop
mov
out
lock
jmp
mov
xor
cltd
cmc
inc
mov
cltd
loop
pusha
or
jg
cmp
ds
inc
std
xchg
push
xor
mov
mov
ficomps
sub
adc
and
cmp
push
mov
repnz
arpl
push
sbb
jg
outsb
xchg
mov
addr16
push
clc
cmc
mov
stos
int3
int3
mov
in
dec
fmull
mov
decl
mov
flds
cmp
pop
out
movsl
mov
in
into
in
adc
icebp
mov
pop
dec
dec
dec
scas
xor
or
mov
xor
inc
clc
fildll
enter
inc
mov
mov
adc
aaa
je
lcall
repz
add
int
or
push
inc
call
mov
addb
pushf
repnz
adc
stos
aam
lock
iret
je
pushf
fdiv
cmc
out
push
jne
lcall
sub
in
cmp
xchg
cmpsb
rolb
xchg
inc
aam
movsl
mov
call
push
incl
or
scas
frstor
fistps
ss
sti
rcr
negb
daa
call
mov
orl
mov
ja
rcr
push
fimuls
fists
mov
pop
dec
fidivl
and
pop
mov
lods
out
or
lds
fistl
push
jl
sub
pop
jmp
cmp
enter
jne
cli
stos
adc
cvtpi2ps
mov
cli
sub
sbb
fsubrp
push
sbb
xchg
xchg
adc
bound
das
shr
xchg
pop
into
dec
mov
lods
inc
shll
mov
ss
bound
lods
in
cld
mov
push
adc
ss
outsl
jo
push
adc
inc
ja
mov
dec
das
sbb
stos
mov
jmp
clc
adc
daa
mov
mov
pop
jmp
arpl
lock
inc
push
rcrl
jne
adc
xchg
sub
fdivp
cmpsb
mov
pushl
ret
shlb
cmp
rclb
add
push
push
xor
xchg
lods
ljmp
cld
xor
sub
and
mov
lcall
sub
aam
adc
sbb
mov
inc
mov
std
dec
adc
mov
xchg
xor
inc
xor
add
push
xorb
or
outsl
pop
data16
cltd
and
lcall
cmp
js
loop
adc
movsb
xchg
cmpsl
and
add
xor
jnp
shl
mov
mov
xchg
lcall
push
bound
adc
inc
loope
push
pop
cmpsl
nop
cli
fcomip
cwtl
jl
lods
shl
into
add
sub
leave
fdivrs
mov
mov
add
fstpt
add
lret
add
dec
pushl
push
or
ror
in
add
lret
nop
cwtl
sub
lcall
inc
cmp
jg
clc
mov
shlb
add
fisubrs
sbb
jbe
test
pop
jo
ja
push
sbb
inc
addr16
push
jp
push
les
int
aas
nop
sbb
cmc
mov
jmp
xor
jge
dec
jnp
cmpsb
and
dec
cld
xor
movsl
into
out
scas
dec
ficoms
mov
inc
call
xchg
fldl
js
mov
shr
mov
daa
dec
mov
pop
js
mov
ret
pusha
iret
decl
pop
idiv
decl
iret
inc
imul
adc
std
cltd
aam
getsec
push
hlt
mov
clc
bound
jmp
mov
cmp
and
dec
jbe
neg
pop
add
dec
fsts
out
rcrl
les
and
out
fisubl
lcall
and
dec
test
jmp
lods
inc
movsb
xchg
sub
mov
insl
jmp
jb
mov
clc
lods
popa
lcall
lods
pop
outsb
mov
sub
aas
mov
inc
call
cwtl
sub
mov
aad
pop
push
sub
div
sub
outsl
std
adc
aad
adc
or
out
jno
mov
int
lret
jmp
and
sbb
pop
pop
loop
mov
cmp
into
inc
orl
push
xchg
imul
or
in
mov
popf
mov
dec
cmpsl
inc
aaa
push
fidivl
jo
jg
or
es
push
jb
mov
push
jo
pop
push
xchg
movsb
enter
xorl
sbb
cli
mov
arpl
cwtl
gs
inc
xor
dec
scas
dec
clc
enter
mov
dec
jge
pop
fisttpll
add
dec
sub
aas
jbe
ret
inc
fwait
jg
push
testb
ljmp
stos
cmp
or
jbe
mov
pop
jmp
je
inc
shl
notb
cmp
call
call
out
ja
mov
repz
lock
pop
outsl
pop
popf
clc
aaa
mov
inc
sbb
xor
int3
xor
aaa
pop
ljmp
test
cmpsl
sub
inc
roll
push
adc
test
aad
push
lds
inc
push
das
icebp
call
daa
push
dec
mov
pop
sub
cmp
mov
jbe
sbb
lods
pop
in
jl
stos
fsts
das
gs
lret
xchg
daa
int3
dec
outsl
aaa
clc
ret
scas
add
mov
mov
std
jg
call
mov
jp
rcrl
in
fcoms
mov
jae
les
xor
xchg
adc
pop
jae
adc
xor
push
mov
mov
add
jns
pop
sbb
arpl
cmp
fcmove
stc
popl
jns
mov
icebp
dec
lret
mov
iret
stc
adc
das
in
xchg
lods
jmp
sub
xchg
pop
int3
mov
pushl
xchg
shll
loopne
cld
inc
mov
pop
mov
pop
cwtl
dec
adcb
iret
mov
add
hlt
cwtl
lods
jmp
cmp
bound
xchg
push
xchg
mov
out
icebp
mov
adc
mov
ljmp
in
lock
sbb
pushf
sbb
mov
pop
lcall
mov
sti
lods
aas
cmp
xor
inc
push
push
aaa
or
jle
xchg
das
jmp
arpl
mul
mov
lea
stos
clc
push
aaa
jle
adc
outsl
push
cmp
ljmp
pop
out
sbb
scas
lret
mov
negl
ljmp
jb
push
pop
dec
mov
xor
or
in
inc
jmp
pop
roll
jmp
decb
aaa
mov
jp
and
js
xor
lea
cli
jmp
add
scas
ljmp
fsubrl
sub
ljmp
dec
lods
out
jecxz
aas
popa
sbbb
jb
jbe
bound
fsubrl
hlt
pop
or
repz
mov
mov
pop
push
ds
test
lcall
lcall
dec
inc
dec
xor
cs
dec
dec
mov
inc
push
in
dec
push
dec
push
cwtl
push
adc
ljmp
jae
xor
jno
add
dec
push
insb
inc
inc
gs
xor
negb
arpl
je
jns
xor
das
pop
jb
imul
sbb
test
popa
insb
inc
insb
and
xchg
pop
imul
gs
dec
imul
adc
data16
mov
insl
jo
ja
decl
push
pop
outsb
push
gs
addr16
inc
push
dec
insl
outsb
gs
popa
adc
push
hlt
inc
push
jbe
ljmp
inc
add
xor
mov
add
nop
push
add
inc
inc
add
add
add
fs
adc
mov
add
jl
xchg
lods
andb
aaa
xchg
pushl
push
and
arpl
inc
mov
mov
pop
push
jo
mov
outsl
xor
outsl
sbb
bound
dec
adc
fnsave
jmp
push
adc
negb
lret
in
pusha
mov
mov
dec
pop
mov
fsubrs
movl
ficomps
adc
mov
sahf
mov
dec
in
cmpsb
mov
outsl
jg
mov
jno
movsl
mov
cmp
pop
stc
divl
dec
xorl
mov
mov
mov
or
imul
lds
jg
pusha
std
aaa
dec
or
sub
sub
adc
jmp
sbb
int3
lret
cmc
in
mov
push
aad
in
idiv
fldl
decl
adc
lock
test
stc
dec
pushf
test
je
mov
sbb
repnz
mov
mov
fistpl
in
nop
lods
push
pop
inc
mov
loop
fnstsw
add
sub
mov
test
mov
in
add
aas
mov
dec
imul
sub
vpinsrd
and
stos
repz
mov
mov
push
ja
mov
add
fstp
mov
add
push
and
mov
lret
jae
xlat
mov
lods
stc
test
dec
pushl
mov
inc
js
pop
lret
mov
jbe
sub
outsb
js
cmp
rorl
push
sub
mov
scas
xor
popf
add
int3
or
jmp
adc
roll
xchg
sub
out
xchg
mov
adc
insl
mov
shl
inc
sub
dec
inc
adc
xchg
addr16
mov
aam
negb
jg
les
xlat
sbb
jecxz,pn
sub
mov
jl
out
loope
std
mov
mov
fisttpl
sbb
or
ret
dec
shll
mov
xchg
fistps
loopne
nop
mov
jbe
mov
add
mov
add
js
mov
sub
cwtl
lods
xlat
aaa
mov
lock
cmp
mov
xor
mov
add
xor
mov
mull
jge
sbb
into
push
clc
sbb
les
dec
cmp
mov
add
add
dec
sbb
outsl
leave
cld
or
stos
push
jg
inc
jae
pop
xor
sbb
cmp
mov
rcrb
iret
test
cli
lcall
es
push
hlt
add
and
lds
push
pop
out
mov
mov
mov
aas
sbb
in
loope
call
and
sbb
insl
mov
fisttps
xor
icebp
dec
nop
xor
outsl
xchg
insb
jbe
dec
pop
in
insb
push
or
iret
cld
fbstp
aaa
add
scas
popa
in
mov
orb
mov
enter
or
push
mov
or
mov
and
xor
lock
mov
in
pop
sbb
xor
inc
dec
xlat
push
dec
pop
mov
adc
mov
jno
sub
fcomp
ds
mov
mov
lods
cmp
cld
mov
imul
fdivrs
and
push
cwtl
inc
or
in
dec
shrb
fsubs
xchg
jg
cmp
sub
push
inc
arpl
outsl
insl
rorb
add
aas
or
std
js
add
jge
xchg
fs
fmuls
pop
fmuls
sub
ret
fdivrl
mov
pop
jle
jns
repnz
dec
repnz
data16
insl
sarb
in
lret
pop
into
xchg
cltd
xor
pop
data16
sbb
ret
jb
xor
popa
inc
jno
popa
or
fimull
imul
fwait
mov
dec
icebp
xchg
inc
test
dec
mov
mov
xor
jl
or
leave
mov
cltd
outsb
insl
call
mov
stos
mov
mov
ja
out
aam
or
cld
mov
jp
cmpps
xchg
and
lcall
and
ficoml
repz
jge
adc
adc
mov
cltd
add
sbb
cmpsb
sub
cwtl
xchg
inc
cli
mov
jle
and
imul
inc
pop
dec
movsb
popf
cli
in
or
std
cli
mov
and
fcoml
out
add
insl
ss
fistpll
jg
cltd
push
movsl
je
push
add
pop
ja
xchg
push
push
dec
mov
out
scas
test
pushf
cmp
mov
push
adc
dec
push
mov
cmp
mov
popf
gs
jle
or
dec
mov
mov
sbb
cmp
xchg
cmp
mov
lea
gs
jg
cmp
insb
push
pop
add
mov
out
shlb
xchg
mov
jg
jbe
mov
xor
imull
dec
push
in
add
dec
sbb
push
je
out
inc
lcall
xor
fistpl
iret
addl
negl
daa
fnstsw
lcall
sbb
xor
jne
pop
std
xor
mov
mov
aam
out
popf
gs
dec
enter
pop
aam
int3
into
cmc
add
push
mov
imul
sub
cmp
sahf
xchg
push
xor
mov
add
sub
loop
jp
ds
movsl
xor
push
xorb
sbb
mov
fsubs
sub
insb
add
mov
inc
divl
arpl
push
or
sbb
lret
scas
xchg
sbb
sti
mov
inc
cmovg
fstl
outsl
pop
add
iret
inc
pushf
sbb
clc
mov
popa
ret
addl
cmp
movsl
cmp
bound
jl
and
pop
dec
jg
xor
mov
add
sbb
mov
mov
sarl
fcmovne
aad
mov
ficomps
sbb
mov
and
sbb
add
insl
test
inc
and
movsb
mov
stc
xchg
call
loopne
call
clc
mov
push
xchg
xchg
lret
xlat
leave
mov
sti
fldl
xlat
imul
fisttpll
sbb
aaa
loopne
jmp
insb
mov
xlat
rcr
int
sub
ljmp
pop
stos
arpl
cmp
adc
mov
or
xchg
adc
mulb
sbb
cmp
decl
mov
nop
push
inc
or
push
mov
xchg
ficoms
pop
in
lods
aaa
cmp
fadds
sub
pop
je
or
push
das
add
mov
outsl
cmpsl
xor
jb
repnz
xor
adc
lods
shlb
out
xchg
leave
mov
test
xlat
aaa
mov
pusha
xchg
loope
leave
mov
and
xchg
pop
or
mov
mov
in
stos
adc
mov
iret
cmp
test
testl
ret
scas
cwtl
pop
xor
xor
cld
stc
jne
xchg
stos
push
push
cmp
xchg
add
loope
aad
push
sbb
push
test
or
push
ljmp
xchg
mov
xchg
jae
mov
push
or
je
and
push
daa
mov
repnz
ret
out
cmpsl
mov
inc
loopne
inc
or
sbb
adc
mov
jmp
jmp
inc
orb
cmp
xor
push
insl
aas
inc
mov
int3
sbb
sub
xchg
nop
and
jae
sbb
add
loope
fwait
ljmp
add
or
test
insl
sub
sbb
pusha
sub
ljmp
and
icebp
stos
stc
jp
cwtl
sub
add
add
imul
addr16
dec
adc
je
inc
pop
stos
and
sub
loopne
in
fabs
xchg
enter
push
pop
fwait
add
call
xchg
mov
push
mov
lods
lock
cmp
outsl
jg
lods
mov
and
les
fs
call
dec
movsl
mov
cmp
inc
dec
push
mov
jo
aas
fiadds
nop
pushf
jno
or
dec
cmp
rolb
cmp
jmp
insl
jge
jmp
inc
add
subb
sbb
pusha
outsl
xor
in
scas
imulb
mov
loopne
cmp
rolb
js
cmc
insl
loop
lcall
aam
shl
not
ret
int3
clc
dec
int
adc
aad
test
push
mov
dec
pop
dec
aam
cmp
or
pop
shr
xor
sti
lahf
cmp
daa
pop
mov
ret
inc
std
pop
mov
mov
cmp
adc
cli
pop
sbb
popf
inc
add
jl
movd
inc
jp
xor
pushf
fmuls
inc
sub
pop
dec
imul
and
lret
in
mov
decl
push
outsb
lahf
les
es
cmp
and
sbb
inc
loope
lods
std
int3
leave
sub
xchg
int3
fistpll
adc
or
lret
push
hlt
inc
stos
enter
jle
cmp
xchg
push
add
insl
or
test
loope
outsl
punpcklwd
or
lods
inc
jmp
int
rorb
insb
push
fldt
and
cmp
lods
dec
and
cmpb
addr16
sbb
xchg
xchg
add
test
mov
test
int3
sbb
icebp
rcrl
push
dec
ficoml
jne
call
xchg
mov
leave
xchg
push
jl
pop
push
push
dec
fiaddl
test
mov
sub
jle
incl
ret
jge
and
xchg
mov
inc
out
cs
pop
and
push
loop
xor
int
jne
inc
mov
adc
mov
or
outsb
xchg
jp
es
stos
test
iret
out
add
mov
mov
out
pushf
popa
outsl
rclb
sbb
scas
gs
icebp
sbb
gs
popa
mov
je
or
mov
les
dec
repz
cmpsl
lea
test
push
leave
in
xor
mov
mov
mov
xchg
fdivs
or
jb
sub
das
hlt
jne
and
sbb
adc
mov
out
and
popf
jb
decl
mov
sahf
aaa
mov
lea
push
in
push
dec
xchg
cmp
lods
pop
mov
add
mov
fwait
push
pop
test
mov
pop
jno
mov
pop
mov
les
adc
cmp
cs
fdivrl
jae
dec
mov
aad
jge
pop
inc
ja
ljmp
push
push
pop
xchg
mov
notb
add
dec
imul
inc
mov
add
jns
jb
test
cmp
adc
cmp
lahf
xchg
ret
std
add
and
sub
test
xchg
les
jg
ss
outsl
das
cmp
addr16
push
add
xlat
dec
and
push
les
cmp
sbb
cmp
add
sbb
les
xchg
cmpsl
push
dec
nop
push
xor
test
xor
mov
lcall
leave
xchg
inc
cmp
ja
add
push
and
sbb
loopne
pop
add
xorb
cmp
pop
pop
or
and
call
inc
lods
test
cmp
es
shrb
es
jecxz
jle
or
inc
xor
ja
mov
mov
jg
addr16
xchg
subb
rcll
negl
in
add
add
mov
mov
cmpsl
mov
push
and
lahf
outsb
pop
xor
add
loope
std
fs
lahf
push
jecxz
inc
jle
jge
push
adc
fcmovnu
pop
addr16
cmp
adc
loop
cld
sti
nop
cmc
sub
icebp
jl
sbb
xor
sbb
nop
mov
imul
sub
sub
dec
in
sbb
xchg
dec
cmc
aas
sub
ss
inc
add
jns
mov
pop
mov
mov
ret
jb
aam
lock
movsb
cmp
fsub
icebp
fucomip
ja
xor
mov
gs
mov
sub
iret
push
xor
mov
lock
add
and
jmp
movb
jg
xor
jmp
jns
mov
aad
scas
jl
hlt
inc
sbb
cmp
je
add
pop
sub
xchg
cmp
xor
loopne
fsubrl
or
mov
sub
mov
or
imull
rcrl
shlb
or
test
call
xor
shlb
pop
or
jne
std
push
jp
cld
or
loop
nop
add
and
or
movlps
mov
in
jmp
or
push
jae
xor
jnp
cmp
or
mov
repz
jl
mov
sbb
mov
jb
mov
mov
mov
mov
fcom
cld
dec
jl
cld
sub
sti
mov
xchg
dec
mov
dec
pushf
mov
pop
pop
loopne
adc
rorl
lahf
push
jo
jb
pop
or
adc
or
jnp
bound
mov
pop
js
in
add
fiaddl
mov
mov
xlat
adc
ss
xor
sbb
insl
int3
mov
jbe
mov
bound
push
push
popa
xlat
pop
jns
pop
shrl
xor
sub
popa
adc
inc
xchg
bound
cli
fmull
inc
push
inc
xchg
ljmp
adc
jmp
nop
mov
shll
stos
mov
loop
shlb
push
lahf
repnz
popf
test
into
in
mov
cwtl
scas
xor
adc
inc
xchg
addr16
lock
paddsw
lock
icebp
push
fsts
jae
bound
outsb
addb
inc
imul
cmpsb
inc
cmp
pop
ret
in
fwait
clc
mov
clc
cmp
pop
sub
bound
inc
ret
or
sub
dec
mov
sub
xorl
and
jle
rcr
or
mov
sbb
add
and
popf
das
lods
orl
jg
push
movl
fisttpl
addr16
stos
and
jp
ss
mov
hlt
cwtl
fs
push
add
dec
push
jae
incb
lret
repz
enter
popa
add
lods
fwait
mov
mov
in
dec
push
adc
movsb
xchg
inc
xor
ret
pusha
outsl
add
outsb
in
fimull
lcall
mov
push
cwtl
les
mov
in
cmp
lahf
inc
or
pop
cmp
cli
lods
call
test
adc
pop
cmpsl
lahf
les
test
xchg
lret
lret
pop
cli
add
add
movsl
adc
add
jmp
push
out
or
mov
sahf
rorl
pop
daa
inc
mov
or
loop
loopne
push
sbb
cmp
pop
orl
mov
das
nop
js
cmc
adcl
clc
and
test
dec
insb
scas
and
popl
es
sub
je
sbb
push
aas
mov
or
test
adc
adc
fistps
call
or
insb
sub
mov
sbb
fiadds
dec
xchg
mov
out
inc
outsb
dec
dec
inc
rclb
pop
sub
jecxz
dec
cwtl
cmp
mov
xlat
xor
xor
lds
jmp
sub
pop
aam
inc
and
xchg
dec
push
shlb
jne
sbb
bound
dec
int
inc
cmc
test
fidivl
or
jge
push
xor
mov
or
outsb
fwait
loop
sbb
out
stc
push
or
int
in
jnp
jecxz,pn
shr
jg
sbb
stc
sti
push
adc
jp
or
or
cld
rcr
js
fbstp
insl
sbb
inc
push
mov
add
imul
pop
lock
lea
js
xchg
in
dec
cmp
push
xor
stos
and
mov
mov
jecxz
xor
dec
dec
sbb
xchg
call
jb
xchg
loope
pop
shrb
std
sti
ds
jnp
adc
pushf
sbb
dec
ret
add
cmp
or
rolb
call
adc
xchg
sbb
cmp
and
dec
popa
andb
hlt
lock
and
out
mov
jmp
inc
out
dec
insb
jmp
mov
mov
inc
addr16
add
add
pop
inc
or
mov
jmp
dec
xchg
hlt
enter
xchg
ja
inc
in
add
push
sarb
adc
test
xor
xchg
jne
hlt
scas
pop
and
add
insb
loop
and
sbb
cli
sbb
shl
mov
subb
rdtsc
add
mov
lcall
rorb
pop
push
mov
daa
mov
mov
mov
jle
daa
and
and
jo
mov
addr16
sub
adc
sbb
sub
popf
or
inc
mov
dec
push
or
daa
xchg
mov
pop
fldl
outsb
out
pop
adc
test
loope
mov
or
or
push
or
xchg
lea
and
std
test
lcall
popa
and
add
loope
add
hlt
pop
and
nop
mov
dec
add
pop
or
ds
ss
shr
inc
jle
cmp
adc
int3
push
test
movsb
xor
loopne
sub
jge
es
fimull
shlb
and
aaa
add
jns
push
adcl
jmp
mov
mov
and
adc
adc
or
testb
xchg
leave
aas
sbb
adc
dec
xchg
test
or
xchg
dec
push
inc
or
lock
mov
xor
fistl
mov
add
add
addb
clc
inc
jnp
call
inc
pop
aaa
lea
sub
push
in
dec
shl
jg
js
mov
repz
pop
sti
scas
xlat
jae
les
fwait
mov
pop
mov
lret
insl
sti
nop
incl
dec
outsb
cwtl
adc
or
cld
test
neg
push
pop
shl
addr16
clc
xchg
xor
shlb
cli
sbb
sub
inc
std
stos
sbb
test
insl
mov
je
adc
inc
cmp
ss
push
mov
notb
rorb
jle
inc
stos
movsl
dec
mov
sub
clc
shl
mov
fs
pop
or
lahf
mov
lds
mov
inc
add
in
loopne
sbb
or
add
add
cli
add
push
xchg
scas
mov
lds
xor
outsb
sti
sar
negb
or
mov
add
push
lea
xor
aad
jmp
or
pop
pop
push
dec
lret
dec
pop
je
inc
mov
mov
add
fstp
and
out
mov
fcoms
inc
outsl
pushf
and
and
loope
ret
les
std
mov
in
jno
aad
cwtl
xchg
movsb
sub
adc
mov
imul
jno
cmpb
xchg
pop
dec
inc
inc
jp
ds
scas
bound
jp
sub
push
push
es
flds
and
fs
imul
scas
jnp
push
pop
adc
mov
lock
fsubl
pop
mov
leave
mull
out
in
orb
dec
inc
bound
ror
push
inc
les
cmpsl
leave
lcall
jl
ret
adc
mov
add
sbb
or
jmp
sub
in
push
xor
addl
jle
mov
in
cmp
pop
pusha
mov
sbb
pushw
sub
mov
test
xchg
popf
sahf
mov
xchg
adc
inc
cmc
mov
aas
mov
or
mov
or
or
xchg
mov
dec
sbb
push
adc
xchg
push
mov
movsb
movsl
ret
cmp
rolb
push
or
vdivsd
movsl
and
addb
aam
lock
push
add
fwait
bound
test
mov
hlt
incb
ljmp
or
jb
push
es
ljmp
in
cmpsb
imul
test
loop
jnp
sbb
sub
je
and
pop
pop
rorb
cltd
out
aad
sbb
xchg
inc
fstpt
xor
pushf
dec
xor
shl
sub
inc
inc
mov
gs
lret
das
inc
xchg
adc
negl
jmp
loopne
adc
mov
cmp
jo
shrb
nop
sub
fs
and
outsl
int
jmp
imul
xchg
xchg
lcall
out
mov
adc
gs
test
inc
xchg
data16
xor
mov
arpl
outsl
sub
mov
pop
cmp
adc
sbb
pmulhuw
mov
and
iret
nop
push
adc
shl
cmc
dec
pop
xchg
lds
sbb
push
inc
loope
jb
iret
test
leave
adc
imul
xchg
inc
pop
inc
pop
cmp
xor
or
push
stos
fnstenv
adc
out
cs
mov
add
cmp
outsb
add
fdivrs
mov
mov
clc
loop
adc
jb
sbb
xchg
inc
repnz
cmp
or
call
lahf
loopne
mov
int
pop
clc
les
mov
loop
and
jnp
jbe
jne
cs
idivl
enter
or
lret
addr16
xor
ret
pushl
lods
inc
pop
outsl
lahf
mov
sbb
or
add
mov
pop
cmpb
xchg
adc
mov
xor
push
les
xor
push
ret
mov
push
jecxz
aas
and
dec
or
or
push
mov
test
xor
test
push
mov
and
pop
out
stos
and
daa
dec
inc
lock
test
inc
test
loop
xchg
inc
jb
cmp
mov
ja
sub
push
lods
mov
in
sbb
cs
les
imul
sbbb
mov
loop
xchg
lcall
inc
or
rorl
push
cli
fnstsw
inc
sub
sbb
add
sar
repnz
add
xchg
bound
mov
push
and
adcb
in
mov
mov
or
dec
mov
js
xchg
lea
fsubrl
insb
cmp
pop
add
cmp
jecxz
nop
lea
jge
and
lea
adc
add
xchg
aaa
mov
mov
sub
addr16
lret
and
pop
out
push
fucomi
jmp
or
sub
in
pusha
les
addr16
popl
pop
sbb
frstor
call
imull
mov
lea
sub
roll
pop
test
mov
add
jge
mov
loopne
scas
jge
int
pop
add
push
add
ss
enter
js
rolb
in
je
insl
daa
aad
shll
imul
rcrl
adc
lahf
and
enter
xchg
ficompl
in
imul
mov
sbb
inc
popf
pop
insl
fadds
jno
add
loopne
mov
push
in
cli
and
jge
mov
movsl
shrl
insb
sbb
jl
add
jnp
mov
jecxz
adc
inc
xor
movsb
jecxz
adc
dec
ljmp
mov
inc
call
fstl
and
cmc
jge
push
out
clc
iret
dec
pop
push
fwait
mov
rcll
cli
push
aam
aas
in
add
cmp
cmp
in
mov
rcrl
out
and
and
mov
or
or
fiadds
mov
ret
ss
and
andb
push
jl
repnz
aas
fwait
in
sbb
cmp
or
lods
jb
test
inc
or
push
xor
xchg
aaa
inc
imul
pop
jle
test
outsl
loope
pop
xlat
subl
icebp
scas
sahf
fstpl
mov
pop
xlat
aaa
xchg
in
or
push
enter
jo
inc
aaa
out
push
pushl
fidivs
test
mov
cmp
xchg
xchg
hlt
es
popa
lods
jp
jnp
sbb
lahf
pop
adc
sub
and
mov
xor
mov
sbb
and
push
in
add
cmc
es
popa
nop
dec
sub
and
xorb
in
sti
enter
pop
call
iret
and
in
add
in
mov
xor
inc
lahf
cmpsl
popf
sbb
add
dec
sbb
insb
loope
jo
mov
push
jae
mov
scas
xchg
repnz
mov
dec
inc
dec
push
arpl
mov
mov
push
sar
les
sti
fcom
loope
and
cld
mov
fadds
sub
jmp
cmp
js
push
xor
mov
jb,pn
push
subb
xchg
cwtl
mov
mov
or
bound
jecxz
in
jo
push
dec
xor
sahf
mov
xchg
pop
addl
mov
je
loop
mov
jo
pop
xor
dec
inc
sub
fldl
mov
inc
lods
xchg
ss
adc
fistl
aas
imul
push
fsubrs
adc
pop
xchg
int
ret
repz
sbb
int3
add
push
push
mov
add
je
aam
cmp
xchg
push
xor
loope
xor
push
add
ret
inc
push
sub
mov
mov
loope
out
push
mov
dec
mov
cli
lahf
xchg
mov
and
pop
out
mov
sarl
xor
test
cld
dec
inc
sbbl
jae
jmp
clc
push
movq
int3
pop
mov
adc
cltd
inc
add
mov
out
test
jnp
cmp
add
popa
xchg
sbb
fsubrl
cmp
aas
inc
aas
dec
jle,pn
cmp
xchg
sarl
mov
iret
sbb
and
imul
cld
pushf
push
inc
or
sbb
mov
mov
dec
xor
js
push
lds
sub
pop
or
mov
mov
inc
xchg
xor
or
ds
cmpsb
push
fldl
dec
loope
dec
fisubrl
popa
mov
adc
ja
leave
adc
aam
xchg
pop
cmp
jmp
xor
test
push
std
mov
mov
jne
test
adc
sbbl
call
inc
cmp
sbb
clc
rcr
clc
jmp
or
sub
mov
push
jg
outsb
inc
lret
pop
cmc
loope
mov
data16
fistpll
adc
pop
popa
pop
mov
or
lods
cwtl
fildll
and
or
test
or
jns
pop
mov
inc
mov
imul
xchg
movsb
iret
aad
and
or
mov
cmp
mov
jbe
lcall
inc
sbb
or
ret
add
push
push
nop
add
sbb
or
arpl
lds
push
loope
xlat
and
nop
nop
push
sbb
fcoml
cmp
pop
mov
imul
jne
popa
aam
popa
outsl
imul
xchg
out
arpl
dec
orb
xchg
ficoml
test
cmp
pop
fcmovnbe
pop
push
mov
push
inc
jae
outsl
popa
std
and
stos
rcll
push
push
lahf
cmp
inc
add
mov
sbb
push
adc
sbbb
sbb
popa
sti
mov
push
xchg
push
mov
aad
leave
xor
into
xor
adc
loope
mov
push
mov
sbb
xor
add
fnstcw
mov
pop
insb
les
or
and
or
fstpl
pop
vsqrtpd
cmpsl
ficoml
sub
stos
std
shrl
movsb
mov
pop
cmc
jo
dec
push
pop
inc
sub
push
mov
fnstsw
addr16
fldenv
xchg
mov
xor
jnp
jmp
std
add
test
sub
jnp
jle
cmpsb
mov
fcoms
fistpll
add
unpckhps
les
js
mov
into
adc
cmp
cwtl
imul
addb
jle
adc
mov
mov
js
mov
push
adc
stos
mov
adc
imul
ljmp
mov
xchg
push
and
scas
loop
cmc
add
fisttps
das
hlt
add
cli
mov
push
test
xor
sub
outsl
cmp
insb
fucomp
popa
add
pop
enter
and
mov
dec
dec
add
push
es
call
mov
mov
xor
bound
xor
sub
fsub
add
and
push
ret
int
clc
sub
xor
test
test
xor
js
jnp
cwtl
sbb
aam
and
loopne
jo
orl
adc
inc
mov
adc
arpl
outsb
inc
pop
jg
mov
loop
jp
mov
jne
dec
xor
push
inc
adc
testb
add
mov
inc
ja
loopne
lods
inc
clc
push
pop
imul
mov
or
mov
loopne
jp
mov
mov
sub
cld
imul
mov
inc
sub
insl
popa
sub
add
test
loopne
rcl
cltd
sub
or
popa
xchg
hlt
sahf
roll
sbb
add
shrl
xchg
adc
fwait
daa
ds
sbb
loopne
sbb
and
clc
stos
iret
pop
mov
mov
add
imul
into
loopne
shl
leave
call
lock
fsts
loop
jbe
add
xlat
pop
out
jecxz
loopne
clc
pop
sub
and
js
ja
pop
jp
dec
inc
lcall
loop
pop
cmpsb
movsb
fildll
lds
loop
xchg
xchg
ret
mov
std
loop
mov
imul
sbbl
in
mov
jo
das
sbb
push
sbbl
out
add
pusha
push
fisubrl
hlt
cmpsl
loopne
pusha
jecxz
mov
incl
adc
filds
jmp
movsb
push
jmp
cwtl
outsl
and
dec
cmp
rolb
outsl
je
clc
in
pop
je
jle
adc
or
push
mov
mov
mov
xchg
jg
int
jecxz
jecxz
jmp
xor
jbe
divb
jo
and
pop
ret
dec
push
mov
je
sub
inc
push
mov
mov
adc
adc
and
insl
test
stc
push
sub
dec
sbb
repz
xorl
push
xchg
mov
arpl
sub
fdivrs
add
mov
sub
iret
test
push
push
icebp
jbe
xor
fmuls
inc
and
out
imul
test
mov
int
xor
mov
aas
adc
adc
push
adc
sti
bound
inc
popa
ret
ja
shl
out
int
push
dec
repnz
popa
xchg
int3
mov
and
or
inc
mov
sub
cmp
rolb
pop
je
data16
rdmsr
cld
aam
pop
or
xchg
mov
sahf
xor
hlt
or
lea
aaa
aam
adc
add
dec
xor
adcl
jbe
sub
cmpsb
pop
out
inc
cltd
insb
fimuls
jbe
push
cmp
push
aaa
dec
pop
and
xchg
outsb
faddl
bound
fcoml
add
dec
mov
sahf
ja
mov
xlat
mov
lods
cli
xor
inc
sti
jae
xor
push
and
pop
cmp
int
outsb
dec
loop
sbb
lcall
lcall
scas
jne
mov
jmp
lcall
mov
mov
push
dec
and
mov
js
jo
pop
fbstp
and
pusha
std
movsl
xor
imul
jmp
mov
mov
pusha
dec
xchg
pop
or
sub
cmpsl
or
sbb
pop
sbb
adc
ja,pt
sti
push
call
movsl
jnp
cmpsb
push
mov
cmpb
jecxz
test
cli
mov
hlt
bound
dec
push
push
cmp
outsb
cmpsb
les
addr16
sub
cli
pop
insl
stos
cld
push
ljmp
jne
adc
es
sub
lret
dec
sub
popf
ljmp
mov
lcall
mov
adc
nop
inc
mov
push
sbb
in
pushf
or
enter
and
pop
and
push
dec
cmp
sbb
or
jg
add
mov
jmp
lcall
xchg
iret
pop
jns
xlat
lcall
outsb
aad
mov
mov
mov
mov
add
decl
jle
mov
jle
add
sbb
adc
mov
mov
and
add
clc
lahf
ss
arpl
xchg
add
stc
inc
outsb
or
adc
sub
rolb
rolb
lret
and
dec
orb
push
gs
mov
jo
dec
loopne
jge
cmp
pop
mov
jns
inc
xchg
or
xlat
loopne
or
test
loope
lds
inc
ja
sbb
pop
mulb
jg
mov
sub
xchg
mov
rol
rolb
scas
lcall
cmpsb
inc
movsl
sbb
sbb
nop
fidivrl
jmp
cmp
leave
shlb
psrlw
pusha
ficoml
shlb
or
test
cmpsl
call
cmpsb
stos
mov
cmp
addr16
in
adc
pop
test
mov
lret
xchg
out
stos
sbb
push
cmp
lret
xlat
pop
aaa
mov
or
mov
dec
jl
negl
jp
adc
xor
fwait
cmc
fsubrl
aam
mov
mov
fcomi
or
xchg
sub
lea
mov
dec
ret
data16
mov
add
fs
std
mov
daa
loop
test
sub
or
cmp
mov
xlat
sbb
fidivrl
add
jns
sbb
loopne
clc
adc
loopne
pop
pop
cmp
loope
pop
std
loop
imul
pusha
mov
push
xor
or
gs
push
or
repz
fst
mov
arpl
pop
adc
test
add
ja
mov
jbe
pop
addr16
cmp
sbb
adc
rcl
pop
xor
sbb
testb
je
xchg
mov
lock
xlat
arpl
adc
sub
outsl
rclb
mov
arpl
jae
or
mov
loope
dec
das
add
je
inc
cmp
in
test
cmp
sub
dec
jmp
scas
lods
sbb
mov
xchg
lds
cmp
scas
inc
inc
movsb
nop
or
dec
xchg
aas
call
mov
lret
inc
sub
loopne
jle
psubusw
cmp
jmp
sbb
int3
pop
test
sub
movsl
cmp
jno
shll
dec
pop
orl
pop
cmp
push
orb
shll
and
pop
cmc
cs
outsl
jp
inc
jo
rcrl
cli
mov
mov
or
imull
mov
xchg
cs
adc
mov
push
and
or
jmp
adc
mov
cwtl
les
cltd
repz
or
add
push
pop
andl
push
pop
cmp
ljmp
aaa
jl
dec
inc
xchg
xor
xchg
icebp
mov
push
das
sbb
inc
xor
or
mov
and
les
outsl
sub
out
fidivrs
nop
inc
xorl
adc
arpl
es
mov
mov
jb
lods
sbb
adc
xchg
lods
dec
nop
call
sarb
jg
pop
js
rclb
enter
enter
test
push
and
sub
imul
mov
sbb
iret
sub
mov
mov
xor
lock
push
test
cld
scas
adc
pop
push
out
mov
sbb
movsb
fildll
jb
shr
dec
lret
aas
cmp
cld
repz
aas
and
in
fs
pop
mov
cld
dec
push
push
jge
sahf
lea
adc
outsb
cmp
sub
push
jecxz
cli
and
into
adc
loopne
mov
xchg
rcrl
cmp
dec
jg
inc
pop
adc
popa
shll
fsts
loop
pop
sahf
pop
add
mov
ffreep
scas
andl
loop
push
adcb
hlt
xchg
bound
sub
sub
add
out
mov
clc
icebp
in
and
cwtl
cld
arpl
xor
hlt
sbb
mov
shr
fistl
jge
xor
aaa
aaa
xor
out
add
enter
fimuls
in
pop
mov
ds
sub
push
inc
or
loopne
pop
xchg
sarl
mov
push
aaa
add
inc
outsl
adc
sub
insb
test
fisttpll
ficoms
adc
out
idivb
sub
addb
xorb
test
outsb
xchg
or
mov
jmp
sub
inc
roll
push
jl
and
jne
xor
sub
insb
std
or
jo
pop
fildl
inc
iret
fistpll
pusha
ljmp
sbb
out
add
mov
stos
dec
xchg
jl
mov
test
aas
adc
out
lods
sbb
pop
cmc
sub
aaa
cs
cwtl
pushf
fstl
data16
std
cmp
add
and
inc
outsl
push
and
loope
xchg
pop
aaa
jmp
out
xlat
or
out
fdivl
mov
and
add
pop
mov
subb
leave
bound
inc
sbb
stos
pop
clc
sub
or
xchg
icebp
sub
push
xor
fistps
pop
ficomps
mov
das
mov
xchg
mov
fcmovbe
xchg
and
mov
add
sbb
imul
add
shlb
imul
xor
mov
sti
mov
push
sbb
or
pop
repz
cmp
mov
mov
mov
ljmp
movsb
loope
push
cmp
and
xor
ret
iret
das
bnd
cmp
lcall
fimull
cmp
pop
loope
mov
push
or
subl
mov
jnp
inc
std
cwtl
je
add
popl
dec
cli
mov
and
and
sahf
out
sbbb
test
stos
lods
stc
dec
mull
adc
mov
xor
repz
popa
daa
je
test
adc
mov
jne
out
mov
push
mov
pop
dec
test
jo
or
xchg
or
mov
xor
lods
cmc
enter
lock
jo
jne
and
sar
daa
fimull
shrl
sbb
in
push
adc
ljmp
nop
nop
xchg
push
repz
cld
mov
insb
xchg
mov
enter
shll
loop
push
stc
mov
lods
les
jns
das
aam
mov
mov
cld
pop
mov
shlb
inc
dec
jg
orb
xor
add
daa
xchg
jbe
cmp
jmp
mov
in
or
push
sbb
mov
addr16
aas
mov
jle
scas
sub
inc
subl
mov
int3
in
shlb
in
cmp
pop
sti
push
cmpsb
testl
mov
movsb
fcmove
jns
add
aas
jg
movsb
insb
aaa
sbb
imul
cmp
and
sahf
fbld
pusha
mov
mov
lahf
call
inc
xchg
inc
jne
iret
outsb
addr16
sub
xor
pop
cmpsb
lahf
jb
test
add
inc
bound
fsqrt
in
fs
dec
ja
dec
or
mov
push
mov
enter
push
dec
inc
xlat
cmpsb
mov
out
sub
xchg
or
pop
or
adc
shrb
fiadds
fs
inc
xor
cmc
arpl
xor
imul
and
loope
pop
xchg
mov
dec
loop
xchg
xchg
or
hlt
push
out
sub
enter
and
ss
add
pop
loope
leave
dec
andl
jmp
bound
mov
dec
add
adc
icebp
cmp
lods
and
adc
jp
mov
rol
clc
and
add
lahf
mov
or
jno
imul
das
push
ret
imul
pop
mov
test
push
ret
xor
push
fistpl
push
les
divl
jge
cmp
add
pop
sar
stos
idivb
imul
outsb
insb
out
xor
add
xchg
repnz
insb
push
test
insb
adc
sub
mov
sub
jne
in
sarl
loop
iret
icebp
orb
pop
in
add
fmull
mov
test
mov
cmp
push
call
scas
popf
and
ret
dec
pop
jo
stos
hlt
rolb
je
clc
push
ja
cwtl
ret
sbb
xchg
test
movsl
mov
push
jmp
cmpsb
add
insl
aaa
mov
ljmp
mov
xchg
pop
dec
push
dec
hlt
xor
notl
test
or
lods
mov
cli
mov
inc
push
addl
insl
ret
and
roll
inc
cmpsl
fildl
mov
add
in
xchg
fndisi(8087
stos
in
orl
test
and
push
retw
mov
push
fdivrp
adc
mov
insl
idivl
push
pop
mov
jne
cli
bound
rorl
xchg
add
aam
or
jbe
sub
mov
je
xchg
xor
sub
jge
call
test
sarb
inc
lds
jno
outsb
outsl
gs
sbb
rep
xchg
cmp
ror
add
jno
gs
xchg
mov
sarl
mov
push
decl
inc
xor
push
leave
mov
lahf
cmc
mov
and
nop
and
adc
push
fwait
mov
sub
cmp
cld
sbb
push
std
jle
mov
sbb
loop
sub
aad
xchg
sahf
pop
pushf
mov
lods
lahf
dec
or
mov
jno
sahf
or
inc
ret
ja
or
scas
shlb
into
jbe
arpl
stos
pop
dec
mov
fadds
cmp
daa
mov
cli
out
rclb
aad
lret
in
ret
pop
ret
aaa
pop
push
sub
add
sahf
dec
dec
inc
aas
popf
mov
mov
lret
lret
jno
aaa
mov
scas
jo
xor
push
lods
mov
and
xchg
cmp
xor
fmull
fiaddl
xor
loop
rolb
mov
ret
or
or
mov
test
mov
mov
push
inc
loopne
cld
movl
add
pop
dec
fwait
jge
mov
inc
inc
or
insb
cmp
fcompl
les
sbb
xchg
push
xchg
aas
sahf
shrb
sub
and
dec
cmc
add
out
movsl
sub
xchg
dec
mov
adc
addb
aaa
ret
inc
pop
out
ljmp
iret
mov
sbb
cmpsb
mov
add
xor
sarl
fdivrl
jo
dec
insb
pushf
insb
jb
dec
iret
cmc
aad
or
cmp
sbb
movsl
sbb
xchg
pop
int
mov
imul
push
imul
push
jl
mov
adc
sbb
cwtl
hlt
inc
jbe
or
sub
loope
push
mov
andb
in
push
mov
or
pop
cli
inc
int
mov
mulb
aaa
push
stos
adc
rorl
int3
push
jmp
cmp
std
inc
adc
adc
inc
and
sbb
test
and
jb
fdiv
pminub
mov
test
gs
mov
xchg
cmpl
and
cmp
les
and
push
outsb
jns
loop
inc
test
dec
cltd
sub
mov
das
xor
sbb
pushf
push
out
rorb
rolb
hlt
sub
call
push
jge
xchg
fcmovnbe
jo
xor
mov
scas
xchg
add
fisttpl
push
in
insb
sbb
adc
es
dec
mov
scas
jbe
mov
popl
jbe
repnz
push
or
cli
jle
and
sbb
lcall
out
jmp
scas
and
jecxz
pop
outsb
ffree
jge
inc
bound
push
ss
repnz
jne
push
mov
push
std
das
pusha
pop
mov
rolb
mov
mov
pop
and
xor
shll
jp
push
ljmp
pop
push
xchg
add
dec
mov
mov
fwait
jge
add
fisubrs
jmp
adc
dec
icebp
and
jo
cmpsb
popf
inc
or
negb
ja
into
stc
xchg
inc
in
das
loopne
xchg
insl
clc
mov
jo
cmpsl
xchg
sbb
mov
add
ret
popa
inc
mov
enter
sub
aam
mov
test
test
dec
cmpsb
cmp
mov
add
xchg
subb
movsb
es
orb
enter
leave
dec
push
mov
lock
stos
inc
sbb
ret
pop
addl
xchg
sbb
jge
or
pop
shr
xchg
jae
mov
adc
lret
xlat
adc
jecxz
add
outsl
lock
and
mov
das
sub
adc
pop
mov
or
pop
add
pop
or
mov
hlt
div
xchg
stos
or
push
cmpsb
mov
and
out
cltd
lret
sti
es
dec
out
insl
cwtl
test
or
or
hlt
dec
adc
jmp
ss
pop
mov
stos
enter
adc
sbb
int3
addl
sub
movsl
dec
push
addr16
or
inc
lods
add
jl
dec
cmpsl
mov
data16
cs
insl
sti
sbb
push
inc
ret
daa
adc
mov
in
and
dec
push
or
pop
in
sbbl
cwtl
sbb
nop
cmp
pop
xlat
pop
xchg
mov
pop
sub
test
and
mov
iret
outsb
in
inc
and
mov
pop
or
or
decb
nop
mov
fwait
andb
jecxz
insl
mov
aaa
int3
xor
fs
sarb
xor
dec
stos
loopne
repnz
movl
stc
adc
push
dec
rclb
cli
adc
leave
cld
stc
bswap
xor
in
pop
push
fwait
xchg
rcl
lds
loopne
and
jmp
push
daa
sbbb
cwtl
pop
mov
jmp
test
mov
or
and
pop
lods
imul
sub
inc
xchg
cmp
pusha
add
mov
dec
rorb
arpl
in
push
push
jl
push
mov
xor
sub
add
adc
test
maxps
jb
xchg
adc
fists
sub
dec
gs
xchg
xchg
jg
mov
mov
jne
sbb
xlat
adc
lcall
push
xchg
jo
or
dec
insl
pusha
push
mov
call
pop
nop
adc
pop
push
adc
pop
pop
cmpsb
hlt
xor
jo
mov
in
cs
loop
dec
xor
jno
fcomps
jp
movups
or
pop
dec
popa
jbe
mulb
aas
fiaddl
sbb
fdivrl
pop
cmpb
push
in
mov
adc
jnp
and
ret
pop
stc
sbb
push
scas
mov
roll
mov
mov
fistps
cltd
lcall
mov
and
aam
push
mov
and
aad
mov
sbb
adc
nop
cmp
pop
lret
push
inc
rclb
mov
stc
mov
ret
mov
out
and
and
sub
and
mov
jp
or
xchg
jle
inc
cmp
fcompl
cwtl
sbb
push
stos
repz
and
ret
push
push
insb
mov
sub
gs
mov
jp
in
test
mov
xchg
push
mov
stos
aaa
jno
sbb
mov
fildll
cmp
testl
jecxz
adc
shlb
rcrl
push
lock
es
imul
push
dec
mov
incl
inc
sub
add
icebp
xor
int
pop
rcrb
pop
inc
pop
iret
inc
ds
ss
mov
test
inc
sbb
movsb
stos
incb
mov
mov
mov
sbb
mov
jnp
stos
sub
es
iret
xchg
ljmp
aam
cld
dec
xchg
jmp
mov
push
and
adc
lods
or
lahf
rcr
cmp
jbe
jb
out
scas
jle
mov
cmp
dec
roll
lea
pop
in
sbb
push
push
pop
mov
xchg
cmp
popf
js
add
call
hlt
mov
or
add
jmp
adc
inc
or
outsb
mov
loope
pop
push
sbb
sbb
mov
rcrl
add
lcall
jbe
push
xor
mov
adc
xor
loope
push
xchg
das
shll
pop
call
sbb
dec
out
mov
mov
je
or
fsubrp
adc
dec
mov
ret
push
rorb
add
rol
xorb
imul
aad
mov
mov
lods
cmpsl
mov
repz
adc
add
aaa
mov
sub
fmul
sub
cmp
push
scas
jge
les
rclb
pop
mov
dec
sbb
pop
push
ljmp
inc
icebp
jbe
sbb
loopne
mov
pop
jno
add
enter
shll
mov
imul
ja
mov
cmp
sbb
les
or
sub
mov
out
mov
mov
mov
pop
filds
xor
fcmovbe
aas
lds
dec
mov
cmp
sbb
mov
outsl
xor
and
cltd
in
add
clc
ljmp
inc
fnstsw
cmp
mov
or
test
stos
outsb
je
ficoml
cmpsl
inc
dec
mov
repnz
mov
loopne
test
adc
mov
cld
insl
fiaddl
push
and
sbb
mov
cmp
std
dec
lods
ja
add
sbb
pop
out
and
rcll
pop
sahf
adc
ja
mov
lock
les
repnz
pop
ss
ret
in
inc
sbbb
mov
loopne
xor
ret
pop
hlt
lahf
das
popa
fisubrs
mov
bound
xchg
push
jecxz
mov
mov
orb
mov
scas
jb
rorl
ds
pop
fists
aad
lea
stc
imul
loopne
xor
cmpsl
scas
testb
lahf
and
add
js
add
mov
mov
cmp
sub
dec
loopne
adc
sub
cli
mov
push
sbb
xchg
sahf
ds
lods
aas
test
mov
lret
aas
sahf
mov
arpl
loope
test
loopne
lcall
pusha
clc
adc
mov
push
mov
cmp
iret
cmp
jmp
ds
std
mov
or
shrl
or
outsb
jb
or
unpcklps
jmp
cs
sub
and
and
or
out
lcall
and
nop
fldl
ljmp
cmp
pop
std
dec
or
les
insb
test
pop
push
idivl
mov
sbb
jle
dec
push
js
mov
test
xchg
and
lock
adc
xchg
inc
lret
sbb
bound
andb
cli
mov
sbb
call
sbb
dec
jne
into
call
mov
imul
mov
cmp
add
and
inc
push
inc
rcll
pop
push
mov
or
push
pop
xor
push
dec
or
es
mov
aas
test
inc
adc
sbb
sub
hlt
out
outsl
xchg
dec
push
and
mov
xchg
push
jge
daa
push
xchg
insb
or
pop
inc
mov
js
subl
mov
mov
or
push
add
cmc
sbb
mov
or
cli
std
repnz
std
in
pop
js
insb
ds
sub
aaa
stos
scas
cmp
aaa
adc
xlat
arpl
pushf
loopne
test
dec
jae
fistps
add
pop
stos
cmp
aam
xorb
mov
inc
mov
adc
popf
mov
push
mov
shrl
fcoml
jb
pop
mov
fs
out
adc
mov
sbb
inc
enter
fs
std
push
movsl
fld1
stos
ja
or
dec
testl
outsl
xchg
xchg
cld
sbb
jle
clc
cli
out
out
add
mov
pop
adc
lock
andb
mov
sub
cwtl
les
sub
std
aas
xchg
or
xchg
add
pop
or
int
sahf
shll
leave
and
pop
das
clc
lods
pop
mov
hlt
dec
or
pop
pop
push
hlt
clc
call
push
std
out
jmp
inc
repz
std
mov
scas
cld
test
push
stos
pop
mov
cmp
mov
cwtl
xor
lea
test
bound
les
popa
sti
mov
pop
xchg
test
cli
or
mov
mov
mov
lret
push
lock
pusha
cwtl
scas
inc
fcmovbe
and
sbb
mov
sbbb
jmp
inc
and
inc
push
jbe
cmp
fdivrs
sub
mov
jl
dec
sub
and
jne
jge
notl
dec
push
std
stc
fildl
dec
fcoml
sub
xor
push
cmpsl
mov
or
into
add
inc
jb
movsb
sub
inc
popf
pop
mov
hlt
push
std
add
and
and
or
test
lahf
xchg
stc
pop
loope
aaa
arpl
sub
add
push
imul
mov
inc
movsb
and
and
mov
decl
shll
lea
push
ds
bound
jne
call
or
mov
out
mov
and
sbb
or
jp
lahf
sub
jae
cmc
jecxz
sbb
in
jmp
add
jnp
clc
xchg
test
xor
cmp
in
outsb
xor
cmp
movsb
jg
repz
push
aaa
xlat
mov
mov
test
js
test
je
xchg
es
incl
sbb
jge
dec
fiaddl
mov
cmc
dec
std
ret
mov
xchg
in
loopne
in
sub
rorb
fs
out
xchg
jae
out
mov
inc
sti
sbb
cld
cmp
imul
lret
add
ss
mov
in
js
movsb
lea
sbb
jmp
ss
sbbl
sbb
test
or
sub
sbb
loopne
aas
add
inc
mov
pop
mov
xchg
mov
lock
or
jge
data16
jnp
pop
mov
xorb
jp
pop
xchg
cmp
sbb
pop
push
jbe
xor
shll
clc
imul
dec
pop
mov
addb
sbb
addr16
dec
call
pop
jge
jmp
xchg
xchg
std
mov
sar
aaa
mov
mov
jmp
repnz
lret
popl
inc
sbb
decl
xor
xlat
or
outsb
call
inc
adc
cmp
lret
lret
sbb
or
add
out
pop
mov
jg,pn
mov
adc
and
cmp
iret
cmp
and
mov
mov
mov
jnp
sbbb
les
cmpsl
adc
mov
loope
inc
add
inc
insl
call
adc
pushl
es
pop
fsub
cmpsb
mov
push
aaa
push
push
push
fcomps
daa
out
add
push
mov
mov
jnp
mov
adc
in
mov
in
xor
popf
dec
insb
mov
aaa
sbb
adc
add
out
or
add
or
cmpsl
shll
lahf
int3
jmp
mov
sub
pusha
shlb
andb
incl
push
xchg
call
or
fdivs
and
push
arpl
nop
loopne
mov
aas
xor
add
rorb
mov
adc
xchg
test
cmc
or
inc
scas
movsb
inc
scas
icebp
mov
push
sbb
jae
mov
mov
push
sub
jl
cltd
jne
mov
enter
ret
cmp
cmp
outsl
dec
cmpsl
pop
enter
push
push
jno
xchg
sti
or
mov
and
push
lcall
jge
test
cmp
add
jl
inc
jp
in
xchg
mov
pop
pop
test
enter
push
and
xchg
cwtl
shl
pop
adc
push
out
ret
mov
dec
lcall
pop
mov
jecxz
flds
mov
and
cld
outsl
cmp
dec
mov
pushf
inc
cltd
popf
divl
loop
mov
mov
mov
decb
lahf
add
vpsrlw
or
jle
mov
mov
mov
aaa
loop
add
jecxz
push
iret
mov
xchg
inc
ljmp
ret
fucomip
inc
jae
mov
int3
cmp
sbb
repnz
pop
inc
out
dec
aam
xor
imul
clc
jg
mov
negl
cmc
sbb
xchg
jmp
in
jg
jo
sbb
aad
testb
out
clc
lahf
sahf
das
aas
cs
cmc
or
pop
mov
mov
outsl
leave
and
sub
inc
sub
pop
sbb
push
out
jo
mov
xor
hlt
mov
dec
dec
stos
lfs
aam
incl
repz
lock
adc
fiaddl
dec
incl
mov
sub
inc
push
pop
xchg
aas
mov
mov
jbe
test
es
ljmp
aam
jle
lret
movsl
lea
or
inc
test
push
addr16
jg
sbb
push
cli
or
outsb
xor
fcmovnbe
push
in
mov
xor
pop
ret
mov
std
inc
cmpb
or
dec
sbb
ds
aaa
ffree
fdivrl
add
adc
test
push
mov
mov
and
jle
lods
mov
jns
mov
aas
inc
jp
adc
pop
movl
inc
or
or
mov
call
mov
fisubrs
mov
xchg
lahf
mov
inc
popa
cmpb
cld
or
cmp
dec
fwait
shll
mov
jecxz
mov
divl
dec
fwait
mov
inc
pop
cmpsb
and
sbb
lock
mov
or
adcb
pusha
pushf
bound
push
mov
pusha
adc
sub
rcl
stos
clc
lahf
test
mov
and
push
sahf
jg
in
pop
ljmp
out
js
cmc
or
jle
mov
lahf
push
imul
mov
rolb
inc
repnz
push
fcmovu
sbb
cmp
xlat
sub
and
xchg
mov
pop
sub
outsb
and
xor
movsl
jo
les
pop
subb
inc
insb
outsb
bound
insl
and
lds
sbb
or
push
sbb
ret
cwtl
pop
mov
test
loope
pop
clc
lods
cmp
in
es
inc
aad
cld
pop
ret
loope
notl
push
ret
jnp
xor
popa
adc
mov
inc
mov
sahf
pop
sbb
dec
or
shl
sarb
mov
or
and
lock
out
andl
test
daa
or
cs
je
xor
cmova
or
das
jne
push
cltd
aas
ret
lcall
pop
or
imul
call
adcl
push
stos
jo
or
loopne
sbb
lods
jg
pop
fwait
push
push
cltd
pop
rclb
push
add
shlb
nop
pusha
push
insl
pop
mov
outsl
mov
mov
jmp
mov
fsubs
pop
dec
or
mov
xchg
lea
in
inc
sub
js
fcomip
fsts
rolb
cmp
and
nop
mov
fsubrl
pop
adc
cmpsl
dec
shlb
inc
mov
mov
mov
cmp
jl
mov
loope
lock
xadd
mov
push
sub
shrl
or
xor
inc
mov
xor
aas
add
lock
or
and
sbb
or
inc
out
or
cs
xlat
push
outsb
test
cmpsb
jno
mov
sbb
inc
in
lods
dec
pop
xlat
movsb
adc
mov
cli
out
pop
lock
sarl
push
lret
mov
popa
add
cmpb
or
jb
inc
sub
mov
add
mov
cmp
mov
add
push
xchg
xor
rcrb
cmp
jge
lea
pop
jecxz
fildl
mov
adc
int3
cli
adc
sbb
fistpll
test
sub
ja
lcall
movsb
add
push
push
sbb
mov
jg
sbb
pop
xchg
pop
pop
int3
std
adc
push
flds
mov
add
rclb
or
xlat
andps
push
sbb
in
arpl
mov
icebp
add
popf
mov
nop
dec
inc
inc
mov
ja
pop
pop
pop
cmc
mov
insb
cmp
cmp
out
cs
movsl
out
aad
jecxz
loope
idivb
ljmp
aaa
mov
mov
pop
xchg
cmp
mov
and
mov
jl
jle
testb
add
xchg
sbb
insb
int3
aam
cwtl
inc
sbb
dec
pop
ficoml
push
test
andb
dec
test
lods
add
imul
xor
das
push
leave
add
mov
jmp
inc
sub
enter
insb
ja
sub
cmp
daa
add
outsb
gs
cmpl
cmp
inc
xchg
scas
mov
cmp
std
movsb
fwait
mov
stos
jne
leave
jl
shl
daa
aam
push
scas
inc
jecxz
xchg
pop
pop
adc
cmp
rclb
aaa
mov
cmp
pop
inc
sbb
dec
ja
aam
pop
lss
outsl
loope
fwait
scas
jb
aaa
sar
bound
sahf
movsb
sbb
loop
sub
mov
push
xor
or
mov
bound
cli
add
push
add
or
sub
cmp
pop
daa
push
cmp
sahf
jle
fimuls
sbb
push
mov
cwtl
ss
lock
push
aaa
inc
jmp
cs
inc
testb
add
add
jp
cld
shll
adc
xlat
clc
data16
call
repz
mov
adc
sub
shl
mov
mov
mov
addr16
outsl
cmp
adcb
fistps
in
mov
insb
insb
ja
lea
pcmpeqd
ljmp
dec
fildl
mov
mov
fcmove
and
mov
push
pop
addr16
cltd
inc
xchg
add
xchg
add
cmpb
inc
or
incb
jle
mov
add
ljmp
mov
andb
scas
movups
sub
push
mov
mov
cs
ja
in
jmp
jno
cvttps2pi
popf
add
test
lea
int
test
popa
test
je
fistpll
loope
sub
and
lret
push
pusha
cli
fwait
outsb
daa
inc
jge
addr16
lret
in
adc
push
xchg
ja
rcll
jecxz
mov
shr
mov
xor
fcomp
sti
mov
and
jmp
aaa
adc
rcrb
and
mov
jge
xlat
mov
sbb
lcall
test
mov
pop
nop
loopne
clc
add
dec
add
dec
pop
je
jle
das
xchg
mov
pop
lock
and
xor
in
mov
pop
aaa
mov
fcmovne
movsl
and
insl
jge
inc
and
xchg
push
aaa
mov
mov
scas
xchg
ljmp
xor
jae
in
das
ja
and
dec
mov
mov
or
test
loopne
push
jo
daa
lcall
inc
jecxz
jmp
dec
jmp
lock
sahf
xor
aad
and
push
cmp
cld
dec
iret
xchg
adc
out
outsb
xchg
add
insb
mov
jmp
adc
adc
adc
into
dec
icebp
ret
hlt
inc
and
shl
and
js
push
scas
xlat
sub
dec
jbe
out
xor
inc
dec
xchg
shlb
dec
aam
outsl
cmp
js
out
mov
push
jmp
test
xchg
inc
xchg
test
jl
lcall
inc
mov
jl
hlt
stc
and
push
in
jmp
mov
and
cmc
sbb
test
jae
pop
dec
ret
std
arpl
popf
ficoms
mov
cmp
lahf
sbb
sub
mov
fsubr
outsl
stc
mov
mov
ja
fiadds
inc
cmp
or
cmp
shr
xchg
inc
mov
shlb
pop
lea
mov
pop
insb
inc
enter
rclb
or
das
push
dec
call
js
push
aad
sub
ss
test
inc
outsb
loope
or
mov
rolb
mov
repz
pop
addl
mov
loop
xchg
and
test
mov
inc
shlb
xchg
inc
mov
and
inc
pop
jl
mov
sarl
aam
dec
push
cmc
inc
inc
repz
xor
push
add
fiadds
mov
cmpsb
loop
mov
dec
cltd
fcom
call
push
sbb
fimuls
jg
in
scas
fsubrs
xchg
or
outsb
push
shll
bound
xchg
int3
nop
mov
out
or
inc
or
xor
and
cmp
jbe
pop
cmpsl
in
jbe
insl
xor
jbe
push
mov
or
pushf
xlat
loop
das
test
cld
hlt
inc
jp
aad
inc
fstl
and
inc
add
or
add
dec
div
scas
movsb
movups
sbb
mov
cmp
ja
dec
inc
dec
insl
add
and
pop
in
and
rolb
inc
fs
push
adc
addr16
popa
enter
outsb
adc
addr16
ret
pop
aas
loopne
cmc
push
rclb
push
jl
mov
outsl
lds
xchg
lcall
popf
sbb
fstpl
mov
xchg
jecxz
test
in
stc
xor
das
sbb
adc
leave
push
sbb
sti
or
mov
in
jo
in
icebp
arpl
mulb
xchg
sbb
adc
loope
mov
enter
addr16
ds
mov
mov
iret
mov
in
push
push
lock
sbb
cmp
cmp
mov
adc
in
std
lds
aaa
bnd
push
mov
andb
fmuls
xchg
hlt
jns
sbb
sti
mov
fstpl
adc
rcr
iret
in
sub
or
fninit
push
clc
ficompl
push
mov
push
mov
subb
movsb
fwait
in
and
cmp
push
inc
ret
lea
jbe
jno
xor
or
push
faddl
jl
or
ja
flds
sub
pop
xchg
jp
jg
ja
lret
rolb
adc
call
sbb
mov
fs
dec
andb
xchg
in
jae
mov
ficoms
cltd
repnz
cmc
pop
hlt
pop
sbb
dec
sub
inc
pusha
inc
or
xchg
test
cmpsb
idivl
mov
sub
ljmp
or
add
cmpsb
mov
push
jl
add
ljmp
sahf
out
ret
pop
xor
jp
call
sbb
mov
scas
xchg
call
gs
rolb
inc
xlat
push
pop
shlb
inc
cmpsl
sbbb
daa
push
in
rclb
sbb
out
ds
inc
lock
or
jns
mov
je
std
sbb
and
mov
jecxz
xlat
test
inc
jle
lea
inc
or
rep
stos
daa
lock
icebp
add
out
xchg
ljmp
jge
mov
and
ss
shrl
rcl
dec
lock
and
js
cmpsb
es
mov
xor
cwtl
out
mov
es
outsb
test
jb
aas
or
cmp
push
or
dec
shll
pop
sti
mov
and
add
mov
outsb
pop
addr16
adc
add
pop
jle
jns
or
jge
jnp
lahf
iret
das
adc
test
inc
popa
mov
sbb
jg
mov
std
or
jmp
xchg
cld
iret
ljmp
ret
bound
push
scas
jmp
rcr
cmp
inc
cmpsb
and
jg
dec
xor
jmp
dec
xor
sbb
loop
fsubrl
out
fwait
and
jmp
inc
mov
xchg
clc
ljmp
pop
fdivs
fwait
adc
outsl
mov
outsl
pop
mov
add
lretw
sarl
mov
push
inc
rcr
dec
push
das
cmp
sbb
fisubrl
shlb
inc
rorl
pop
rol
xor
dec
bound
jo
shr
mov
pop
lret
addb
adc
sbb
insl
jle
or
popa
scas
push
mov
fbld
out
xor
out
nop
and
loopne
out
fidivrl
add
outsb
adc
dec
stos
rorl
in
pop
pop
icebp
faddp
mov
fistps
mov
cmpl
fbstp
cmp
cmc
sbb
mov
shrl
sub
pop
xor
dec
dec
adc
mov
cmpsl
fmull
jmp
sbb
rcrb
sub
imul
scas
cli
sub
test
test
and
push
mov
sbb
or
mov
hlt
mov
pusha
call
pushf
cmc
jns
or
jo
cmp
fdivr
fldenv
cmp
inc
je
jmp
aad
das
pop
loopne
mov
jbe
sbb
out
or
jle
lret
sbb
cwtl
ret
ds
inc
lods
dec
lock
xor
or
mov
insb
pop
fsubl
pusha
add
xor
sub
lahf
int3
std
testb
leave
nop
push
mov
inc
mov
clc
inc
jg
insb
inc
pop
mov
inc
push
sbb
xchg
add
add
mov
dec
loopne
imul
fstps
aam
pop
mov
and
and
cmp
push
pushl
out
mov
or
cwtl
fwait
outsb
out
sar
cmpsb
sbb
test
pop
idivl
outsb
add
cmp
xchg
dec
jle
cmp
push
ret
pushl
inc
test
nop
inc
xchg
test
test
pop
aaa
filds
or
andl
xchg
scas
call
add
ja
mov
sbb
addr16
add
iret
xor
das
iret
lods
hlt
mov
imul
cmp
pushl
mov
iret
xlat
pusha
test
mov
fwait
call
mov
mov
inc
rcrb
sub
das
scas
pop
xchg
loop
mov
imul
lds
cmp
inc
in
daa
inc
mov
mov
and
jo
sbb
xor
pop
jp
push
cltd
mov
aad
mov
mov
cmp
dec
xor
movsl
inc
add
ret
lcall
mov
xor
movsl
test
inc
or
and
adc
mov
and
inc
dec
fs
mov
dec
inc
mov
dec
jmp
sahf
inc
pop
pop
add
or
mov
sarb
xor
fldenv
xchg
fildl
fistps
aaa
cs
jb
mov
roll
add
inc
adc
mov
jns
jo
cli
incl
shr
sbb
lods
test
xchg
mov
dec
mov
cmp
scas
ljmp
push
stos
or
dec
add
fcomip
call
mov
inc
push
adc
fcomi
mov
jne
jb
in
sbb
and
test
push
mov
imul
push
mov
jns
or
icebp
ljmp
pop
mov
and
in
lahf
cmp
xor
fsts
jbe
xchg
adc
or
test
mov
push
push
std
sbb
insb
cmpsb
or
push
mov
dec
dec
shlb
pop
add
decl
jo
sub
xor
mov
add
sarl
push
decl
int3
pop
xchg
loop
in
xchg
incl
pop
jecxz
dec
ret
test
ljmp
loope
je
mov
xchg
ss
or
jge
stos
cwtl
jg
cmpl
call
ds
loopne
dec
sub
cmp
and
es
dec
cmp
jb
push
sar
mov
jb
and
mov
sarb
mov
jg
cmp
fwait
mov
faddl
mov
movsb
jno
je
or
cvttps2pi
es
inc
push
rclb
movsl
cwtl
dec
movsb
les
inc
lods
fidivrs
les
rcrb
sbb
jns
push
lret
out
ljmp
mov
aas
mov
test
call
popf
movsl
in
fmuls
fstpt
sbb
pop
test
aam
mov
pop
mov
enter
xor
jbe
fmulp
jae
and
lcall
adc
cwtl
out
mov
inc
push
sbb
sbb
in
or
mov
mov
cmp
xchg
jnp
iret
jo
popf
cli
and
push
scas
mov
out
out
rolb
dec
aam
sbb
jecxz
les
sti
xlat
cmp
addr16
jns
mov
push
cld
adc
mov
jg
hlt
xor
in
mov
cmpsb
imul
push
sbb
ffree
ja
adc
dec
xchg
or
and
pminsw
jmp
test
sbbb
sub
call
inc
sub
mov
mov
insl
jecxz
and
int3
sbb
pop
cld
push
fildll
inc
stc
not
stos
pop
fldcw
repz
rcrl
add
and
mov
xchg
jbe
cs
dec
hlt
cld
cmp
adc
mov
fnstsw
rcrl
scas
cli
outsl
pusha
adc
or
cmpsl
and
cwtl
add
addr16
in
shlb
sahf
mov
popf
das
add
add
cmc
mov
call
shlb
jmp
fsubrs
test
cmp
int3
in
mov
fs
pop
push
je
enter
addl
sbb
ja
sbbl
and
pop
shll
outsb
xchg
pop
test
mov
sbb
or
mov
lds
fsubrp
lahf
mov
negb
or
add
xchg
inc
test
mov
pop
push
mov
int
mov
inc
add
mov
inc
dec
push
cld
xchg
icebp
pop
lock
add
sub
mov
mov
push
jecxz
ja
push
cmp
pop
jbe
loope
fidivl
or
mov
push
push
mov
sbb
cltd
cmp
adc
xchg
addl
int
pop
mov
bound
js
push
loopne
pop
test
mov
sbb
int
mov
bound
ret
push
loope
inc
dec
std
cli
cmc
pop
jge
jp
inc
xor
push
or
cld
push
rol
sub
xor
das
push
mov
std
xchg
dec
pop
push
push
js
mov
adc
in
lock
mov
ret
mov
sub
push
aas
ror
loop
and
mov
ss
test
and
mov
arpl
jnp
sbb
sti
repnz
mov
lds
mov
cmp
cmp
fdivr
or
cmpsl
sub
and
mov
jg
xchg
xchg
mov
jp
push
jmp
mov
lret
pusha
sahf
call
sbbl
adc
mov
fcmovnu
test
or
sub
inc
pop
dec
stc
subl
dec
sbb
call
inc
push
cli
inc
mov
push
xor
dec
pop
dec
shrl
xchg
clc
push
adc
push
dec
movups
out
bswap
neg
xchg
out
sub
add
pop
sbb
or
call
es
push
ds
mov
pop
ja
and
cwtl
int
jge
mov
dec
in
and
scas
loope
fwait
loop
xor
xchg
testl
aad
ja
stos
loope
not
jge
or
mov
add
es
and
and
test
jg
scas
sbbb
das
scas
outsl
cld
push
xlat
out
add
clc
pop
mov
push
movsl
test
mov
outsb
inc
mov
push
rcrl
jg
or
inc
inc
sti
inc
or
enter
roll
sbb
xor
sti
dec
adc
mov
jge
xchg
pop
mov
mov
lods
jne
pop
sbb
rol
cmpsl
add
jp
es
xchg
add
fbstp
popa
jb
dec
adc
add
mov
and
and
jne
jl
mov
cmp
and
adc
insl
ret
das
test
mov
mov
aam
aaa
jp
sub
or
out
ljmp
popa
xor
mov
mov
aaa
cmp
test
mov
fistps
lret
sti
test
inc
and
pop
in
sub
scas
arpl
sarb
loopne
inc
pop
push
and
sub
pminsw
jp
cmp
dec
mov
stos
scas
movsb
mov
inc
jmp
inc
shll
inc
pop
inc
loopne
sbb
fcomp
inc
cwtl
sbb
rcr
outsb
adc
adc
jbe
dec
insl
mov
cli
mov
aaa
sbb
bound
js
les
cli
xchg
or
or
mov
insb
push
mov
add
and
jecxz
in
or
push
xchg
enter
mov
aad
je
mov
popl
ss
test
mov
lods
dec
mov
inc
dec
or
fisttpl
dec
add
repz
movd
dec
inc
cwtl
loopne
inc
sahf
add
push
mov
cmp
test
push
inc
insl
push
sti
inc
jl
dec
nop
and
mov
mov
sbb
mov
ds
clc
test
cltd
dec
shll
int
mov
mov
andl
ds
mov
push
xlat
cli
mov
test
xchg
mov
cmp
arpl
mov
fdivrs
mov
call
adc
pop
xchg
das
xchg
push
scas
sbb
aaa
test
repnz
sbb
dec
mov
jnp
enter
sub
clc
add
mov
loop
push
or
aad
and
ljmp
inc
jmp
dec
das
sbb
adcl
mov
adc
das
adc
mov
and
lret
test
add
inc
mov
mov
xchg
fildll
add
mov
bound
xlat
xor
mov
mov
push
loop
sbb
jno
daa
test
mov
in
cmpsl
mov
fs
sarl
push
iret
out
fmull
xor
mov
mov
shr
fsubrl
test
clc
cmp
xor
and
ss
mov
lock
int
pop
jl
popf
in
mov
add
mov
hlt
in
lahf
xor
push
or
mov
addb
ljmp
push
pusha
mov
adc
repz
cmp
icebp
and
call
mov
sbb
mov
fnsave
xchg
push
lret
fidivs
faddl
push
mov
addr16
and
je
das
sbb
mov
insb
mov
pop
rdtsc
pop
mov
jg
adc
jae
daa
adc
arpl
jmp
cmp
mov
inc
sub
in
cmp
bound
idivl
sarb
fists
xor
sarb
pop
xor
mov
ficomps
xchg
rorb
xchg
clc
cmp
or
test
lahf
pop
adcb
mov
and
or
adc
outsb
in
push
dec
or
mov
or
dec
daa
test
test
dec
sarl
cltd
out
loopne
scas
loopne
out
and
orl
lahf
and
push
filds
push
or
pop
xchg
push
dec
mov
repnz
adc
or
lret
cmp
mov
mov
mov
xchg
cmp
aas
aaa
hlt
mov
hlt
xchg
aas
jbe
and
dec
je
imul
and
inc
cld
les
xchg
cmp
dec
dec
mov
jle
lcall
sbb
scas
das
hlt
mov
and
dec
jl
shll
shll
pusha
push
sarb
out
pop
outsb
sarb
cld
outsb
mov
jmp
jg
gs
imul
jp
cmp
fldcw
and
sbb
pushf
dec
or
call
iret
adc
ds
add
push
test
and
jmp
out
jno
adc
cmc
push
pusha
cmc
call
out
jnp
cmp
mov
fs
and
or
push
loopne
cmp
aad
push
sti
ret
addr16
lret
in
pusha
pusha
mov
test
pop
pop
dec
shll
push
adc
subb
arpl
outsl
mov
mov
add
mov
mov
add
sbb
in
sbbl
fcmovne
dec
cmpsb
iret
or
sub
xor
outsl
mov
push
pop
lret
loopew
call
icebp
subl
loop
jg
outsl
shrl
nop
jmp
jl
test
stos
cld
test
fwait
repnz
scas
mov
or
insb
ljmp
or
shlb
pop
push
test
clc
mov
mov
cmp
loopne
jbe
mov
add
fimull
movl
mov
pop
mov
mov
push
cmp
jle
fbld
inc
loopne
inc
movl
dec
shlb
push
data16
inc
push
push
ror
imul
jbe
dec
jg
inc
call
mov
sar
in
add
sub
das
aad
xlat
mov
lods
mov
adc
iret
or
les
push
test
sarb
cli
ror
fiaddl
add
push
arpl
adc
sbb
arpl
push
push
xchg
test
pop
gs
adc
add
ljmp
hlt
out
jecxz
icebp
lods
popa
jl
adc
sbb
lods
adc
fidivl
mov
xchg
inc
xor
cli
cmpsb
mov
sti
mov
dec
sbb
sti
pop
call
pop
mov
aad
push
xchg
filds
cmp
push
mov
jmp
and
jb
jge
pusha
or
je
cs
fwait
sub
pop
xchg
or
jmp
pop
clc
rcrb
bound
inc
imull
xor
aaa
lret
mov
or
cmc
sub
outsl
push
aam
jp
push
ret
xor
xchg
loopne
cli
call
in
dec
pop
inc
fnstsw
hlt
and
adc
push
popa
scas
and
mov
testl
rorl
loopne
mov
mov
or
xchg
or
dec
je
add
and
cmp
and
xor
rolb
dec
or
and
or
jecxz
xor
xchg
inc
daa
mov
push
mov
xchg
lds
sub
ljmp
shl
je
xor
sbb
dec
xchg
hlt
movsb
and
clc
cmp
dec
enter
mov
imul
ret
xor
and
lea
adc
ret
stc
int
adc
sub
popf
or
das
or
shl
outsb
lock
call
jae
push
pop
jl
mov
xor
popf
fdivr
push
push
or
sarl
mov
push
bound
mov
je
mov
dec
fisttpl
loopne
fistpl
in
call
push
into
mov
sub
mov
loope
jno
aaa
pop
std
fldl
inc
cmp
sbb
adc
insl
sub
sbb
lds
mov
and
repz
lock
mov
daa
push
mov
loope
mov
adc
or
adc
rcll
lea
jae
lock
xor
pop
sbb
dec
sub
sbb
cmp
sub
jo
fsts
fstps
fistl
std
xor
test
cmp
xchg
jg
lea
not
mov
rorb
outsb
outsl
push
mov
push
ds
xchg
dec
icebp
fistpll
and
es
repnz
clc
pop
call
jge
out
adc
fisttps
and
lods
mov
pop
subb
sub
sub
mov
je
jno
sub
add
scas
data16
ljmp
pop
mov
movsl
outsw
adc
mov
mov
cld
lea
aam
cmc
les
xchg
imul
leave
xor
into
ljmp
or
sbb
jb
lea
inc
push
test
mov
adc
pushf
test
xchg
dec
jl
mov
sar
adc
cwtl
push
sub
test
inc
roll
add
fnstsw
and
xlat
stc
jmp
xchg
mov
push
es
adc
movsb
stos
inc
stos
jge
inc
cmp
leave
mov
xor
mov
icebp
call
sti
lods
inc
dec
cmp
fistpll
fimull
fadds
and
mov
in
cmp
pushf
mov
out
adc
adc
jecxz
test
or
lret
push
imul
cmp
mov
sub
fdivrl
pop
push
loope
pop
sbbb
popa
pop
push
push
mov
idivb
cwtl
pop
inc
scas
jne
push
mov
outsl
orb
cmp
jo
inc
outsl
arpl
call
or
std
dec
iret
mov
iret
jg
hlt
pusha
push
mov
rcll
dec
loop
shlb
or
dec
pop
jg
xor
mov
sbb
xchg
pop
inc
leave
fdivs
mov
fsub
and
sbb
sbb
or
stos
mov
test
aad
sub
fcomip
divps
lcall
fdivrs
fistpll
add
mov
cmc
fcmovnb
inc
loopne
out
xchg
lods
and
incl
dec
jne
xor
push
lds
sbb
daa
add
in
fwait
mov
or
mov
and
sti
aas
push
mov
shlb
mov
cmp
into
hlt
je
mov
xchg
push
or
test
push
stos
call
mov
dec
dec
lcall
movsl
sub
js
ds
nop
leave
jns
call
push
mov
pop
mov
rorb
inc
iret
fwait
sbb
loope
mov
data16
or
mov
cmp
in
inc
mov
dec
mov
jno
mov
sub
dec
pop
inc
out
nop
test
adc
dec
in
mov
mov
mov
sbb
daa
jmp
lea
sub
sbb
inc
out
decl
mov
fists
xor
pusha
lock
push
lahf
jbe
fdivr
mov
pop
mov
push
pop
sbb
mov
icebp
adc
push
fmul
lcall
mov
xchg
rorb
jg
lret
xor
ss
aaa
and
lret
cld
sbb
sub
pop
xor
sub
faddl
and
dec
loop
and
xchg
xchg
push
cltd
lcall
mov
lahf
into
adc
xchg
cwtl
cmpb
decl
sub
loopne
push
aam
add
les
add
or
adc
inc
enter
inc
das
mov
pop
in
jb
lcall
cmp
rcrl
inc
lret
loopne
movsb
mov
add
ss
mov
jnp
jmp
jg
mov
test
cli
fcom
in
movsb
sbb
iret
dec
cmpb
add
stc
mov
icebp
das
fwait
push
dec
jnp
adc
mov
cmp
xor
int
stos
pop
out
mov
movsl
cmc
in
xchg
loopne
sbb
and
idiv
loopne
or
movnti
mov
adc
xor
jmp
fisttps
dec
xchg
adc
push
pop
and
fst
pop
adc
cmpsb
addr16
pop
or
mov
lret
pop
scas
pop
scas
sub
loopne
das
imul
fsubrl
idivb
aaa
stos
pop
mov
pop
push
and
je
inc
pop
sahf
mov
nop
add
shlb
insl
mov
xchg
lds
mov
sbb
cli
mov
mov
fsubl
adc
sub
or
cltd
jns
pop
xchg
roll
ds
mov
mov
js
aaa
mov
fistps
mov
test
jo
xor
add
pop
outsb
jg
cld
pop
mov
xor
jb
cli
cmp
fsubr
add
mov
pop
std
sub
loopne
dec
sbb
dec
icebp
push
xchg
jo
add
pushf
imul
in
xor
loope
cmc
movsl
filds
je
xor
test
loopne
icebp
sti
dec
sub
jg
mov
aas
pop
jae
sub
jns
sbb
dec
jge
test
mov
xchg
stos
jecxz
andl
sbb
inc
push
adc
ret
cwtl
xchg
bound
enter
and
loope
cli
dec
and
add
add
pop
xchg
sbb
xchg
push
fucomp
mov
call
add
pop
jo
popf
inc
jae
sbb
popf
das
inc
sbb
fcompl
mov
outsl
je
cwtl
add
lock
pushf
or
pop
mov
adc
fdiv
rclb
xchg
mov
movb
sub
pop
in
test
push
inc
popa
ret
insl
mov
sbb
pop
pop
les
sub
lock
xchg
leave
sbbl
mov
jecxz
push
pop
daa
fwait
mov
lcall
lods
mov
test
cmpsb
pop
mov
lret
push
push
cld
mov
pop
and
sbb
inc
mov
mov
sbbl
jo
stos
mov
sbb
jns
pop
mov
sub
loope
inc
or
sub
xchg
addr16
or
mov
dec
repz
aam
or
fadd
out
and
cmp
popa
push
sub
xchg
pop
hlt
je
add
loope
ja
repnz
or
subl
mov
jo
sub
mov
mov
add
push
or
int
or
in
inc
clc
cmpsl
add
incb
repz
out
out
dec
lcall
or
jno
nop
mov
xor
insb
jmp
icebp
testb
jo
loopne
mov
sbb
push
pop
inc
add
mov
lea
dec
xor
mov
jl
loopne
loopne
scas
lret
int3
addr16
xor
orl
inc
dec
sub
pop
jb
dec
mov
inc
enter
bound
xor
push
das
aad
aad
je
xchg
inc
nop
add
rcrl
rcll
aad
mov
pop
xlat
jo
inc
pop
aas
mov
push
xor
jg
test
insl
rol
dec
xor
jg
pop
pop
and
cld
cltd
and
rcrb
push
cmc
or
cmp
inc
jnp
add
ret
inc
daa
xchg
clc
mov
or
stos
mov
add
outsl
mov
and
mov
and
sbb
pushf
push
sti
dec
and
or
outsl
pop
jecxz
cmp
mov
sbb
sbbl
leave
or
lock
fwait
incl
and
stos
into
inc
out
ret
int3
sbb
add
add
mov
in
xor
push
sub
test
pop
aaa
stos
and
cmp
das
cwtl
out
jno
push
jne
loopne
ss
fbstp
mov
dec
repnz
push
xchg
outsb
aam
sarb
sbb
pushf
clc
pop
lea
fadds
cmp
mov
adc
or
js
xchg
call
dec
add
cmp
pop
xchg
icebp
mov
xor
lahf
mov
cmpsb
push
loope
xchg
insl
incl
or
shrb
sub
jge
cmp
lret
lods
pop
jo
aam
sbb
arpl
pop
outsb
lock
leave
add
fwait
cwtl
adc
adc
mov
xor
inc
inc
jmp
pop
push
inc
testb
jne
xor
and
mov
inc
mov
ret
fwait
xchg
arpl
loopne
xor
loopne
jno
fcomip
test
jg
add
ds
jne
add
or
data16
pop
cmp
mov
stos
dec
std
out
mov
call
orb
icebp
test
popa
or
mov
or
adc
insl
adc
and
js
test
aam
sub
enter
pop
mov
cmp
sti
and
sub
cld
xchg
xchg
inc
and
sbb
repnz
dec
jge
push
jno
sub
cmc
jmp
sbb
subb
jae
pop
stos
fdiv
push
add
cs
negb
push
or
push
stc
fbstp
mov
fisttps
sub
jae
push
movsl
cmp
bound
lock
jbe
add
pop
sbb
pop
test
pop
sti
inc
movl
add
jl
ret
dec
xchg
xchg
popf
pop
fdiv
test
inc
sti
push
adc
or
inc
outsb
pop
outsl
lahf
mov
cld
fisubrl
dec
movsb
sub
fisubs
cmpsl
add
pop
mov
aaa
aad
pop
fdivp
in
pop
push
or
mov
cltd
sub
and
jmp
cmp
stos
lds
ljmp
std
das
rol
xchg
cwtl
mov
mov
add
aad
orl
inc
repnz
mov
xchg
test
rorb
shll
aaa
add
aas
add
leave
mov
insb
lods
jno
sub
lock
xchg
jbe
dec
imul
clc
aad
add
test
pop
test
aaa
in
mov
jg
fdivrl
mov
mov
dec
add
mov
fidivrl
inc
add
das
mov
ljmp
popa
fadd
test
push
inc
call
adc
shl
lods
cli
fdivl
push
jg
mov
xor
jne
sti
shlb
add
cld
mov
test
fldt
cmp
call
inc
shll
sti
lea
sbb
sahf
je
jl
aam
or
in
adc
cld
sbb
sbb
out
stos
les
jp
add
pop
cli
int
sub
hlt
lock
ret
xchg
jle
mov
and
les
mov
sbb
ficompl
or
push
cld
cmpb
cmp
mov
adc
pusha
adc
mov
or
sub
push
call
xor
adc
sub
jle
xchg
xchg
aaa
mov
lret
aam
jo
out
jne
scas
xor
insb
add
jge
mov
cld
test
xor
mov
inc
fists
popl
cmp
js
mov
cltd
jle
xchg
xchg
enter
push
ss
jp
fstpl
repnz
das
loope
and
mov
sbb
cmpsb
dec
inc
std
xorb
lea
ret
rol
out
mov
cmovl
je
outsl
cld
insl
rcrb
lock
rcrl
push
lods
add
sti
testb
dec
daa
and
test
adc
pusha
mov
push
popa
lret
push
int3
dec
xchg
xchg
sbb
mov
ja
test
xchg
mov
loopne
adc
jne
push
iret
dec
mov
add
sbbl
stos
fcmovnb
add
lahf
jno
sbb
pushf
pop
loopne
add
aam
scas
mov
ret
xchg
incl
cmp
rorl
mov
jle
movsb
mov
adc
repnz
dec
mov
mov
hlt
mov
rcll
jg
subl
popa
shrl
testl
add
push
pop
xor
add
lcall
daa
orb
adcl
ficomps
jle
insb
subb
inc
pusha
sbb
mov
gs
sbb
mov
test
jecxz
adc
sbb
nop
pop
decl
pushl
rorl
adc
insb
push
clc
mov
nop
dec
incb
or
ja
sub
lods
outsb
sub
pop
push
jmp
sbb
xchg
inc
or
cltd
adc
dec
push
mov
sbb
sbb
adc
decl
test
je
das
test
xorb
pop
and
push
cmc
rorb
jmp
mov
les
sbb
mov
add
pop
insl
pop
lar
pop
mov
xorl
sub
xor
sbb
arpl
pop
imul
pop
dec
xchg
or
clc
popf
fistpll
or
repnz
mov
sub
push
gs
xchg
pusha
mov
bound
mov
fistpll
adc
lock
jbe
in
pop
icebp
int3
push
subb
gs
mov
xchg
mov
das
gs
loop
or
mov
movsb
jmp
push
xor
mov
lret
nop
pop
test
sub
or
aam
cwtl
pop
loopne
adc
push
aaa
fbstp
hlt
out
push
popw
sub
fs
cmp
loopne
mov
push
xchg
dec
push
mov
or
add
ficoml
and
or
rcll
outsl
push
inc
mov
dec
lds
push
stc
cli
push
mov
pushf
push
daa
push
lock
push
aam
pop
pop
fistpll
push
push
mov
add
xor
stos
cs
fistpl
adc
pop
xchg
sarl
outsl
jle
cli
xchg
je
xor
scas
call
cmp
cmp
sbb
mov
stos
jnp
cltd
adc
mov
arpl
jg
fildll
sbb
ss
add
cmp
and
jg
stc
push
add
xchg
push
mov
fildll
fldl2e
fs
imul
xchg
sbb
add
sub
test
movsb
cs
xor
ljmp
dec
sbb
or
mov
dec
nop
fcomp
add
enter
out
or
cmova
test
rcll
mov
mov
jp
inc
out
add
cmp
inc
ja
div
or
outsb
or
mov
cmp
push
aam
cmpsl
add
pop
xchg
icebp
in
pop
mov
mov
adc
call
outsb
inc
jecxz
das
jne
mov
pop
scas
xorb
adc
fsubr
mov
fldl
adc
daa
std
mov
inc
ret
mov
push
dec
orl
xchg
or
pop
ljmp
jge
cmp
ljmp
mov
inc
inc
dec
lahf
jle
mov
lcall
cmpl
outsb
cmp
mov
cmp
cmc
add
movsl
hlt
fwait
insl
mov
jp
notb
jne
xor
inc
push
jmp
insb
stos
push
jno
cld
mov
mov
sarl
test
dec
icebp
adc
sahf
fdivrs
jae
inc
in
add
inc
or
xor
ret
or
leave
jb
mov
mov
hlt
repz
sahf
mov
cltd
jne
imulb
ds
movsb
dec
mov
push
cmp
aad
pop
mov
test
fistpll
fimuls
xchg
and
push
add
dec
add
inc
cli
inc
cli
cmpl
rolb
xchg
inc
arpl
push
mull
pop
mov
inc
inc
adcl
std
push
and
icebp
adc
test
jp
jecxz
mov
cwtl
lods
aad
call
jno
pop
lock
push
out
aam
cmp
mov
jnp
mov
cld
xorl
pop
test
and
pop
sbb
out
lcall
jmp
pop
clc
pop
pop
fptan
mov
movsl
mov
pop
add
inc
fwait
outsb
mov
mov
push
icebp
jg
out
push
iret
les
mov
pop
pop
ja
inc
sub
ret
jecxz
xor
mov
fucom
mov
inc
js
mov
sub
push
int
or
test
out
mov
or
or
dec
shll
dec
sbb
mov
loope
dec
mov
sbb
cmp
adc
les
fucomp
sbb
or
test
pop
insb
leave
sub
loopne
adc
call
push
push
imul
jl
test
cmp
movsb
aam
movsb
out
scas
outsl
and
mov
jg
fcmovnbe
and
das
or
pop
dec
les
mov
test
orl
mov
cmp
pop
test
sub
gs
jmp
jecxz
ja
les
and
sbb
popa
lods
add
ret
fisttps
push
nop
add
xchg
inc
mov
aaa
shll
pop
adc
sbb
mov
push
mov
cmc
out
clc
jbe
jno
movsl
adc
mov
ret
gs
inc
movl
lcall
test
clc
push
insl
pop
insb
mov
ficompl
in
insb
adc
inc
pusha
inc
test
fistps
mov
xchg
bound
arpl
mov
or
mov
movsl
mov
sbb
lret
dec
mov
xlat
inc
pop
jo
loop
pusha
dec
test
aam
and
in
cli
pop
enter
sbbb
lds
int3
loope
imul
lock
scas
sahf
push
jnp
xchg
jle
xor
sti
mov
test
leave
mov
or
or
fs
in
pop
bound
lret
mov
mov
scas
inc
das
fstl
pop
cmp
mov
fistpl
xchg
stos
sbb
lods
mov
stos
data16
call
std
xor
xchg
int3
xchg
add
into
clc
pop
mov
lock
push
xor
push
pop
cs
push
push
fistpll
in
cwtl
adc
pop
jl
xor
or
pop
in
in
lcall
fs
mov
cmc
in
and
pop
cmp
lods
sbb
mov
adc
insl
cld
test
jno
ror
inc
cmpsl
idiv
fwait
cli
or
enter
inc
adc
jo
das
jl
cmp
add
cli
ds
shlb
or
xchg
add
loopne
cli
sub
mov
push
js
mov
movsl
dec
pinsrw
cwtl
ss
mov
mov
hlt
ret
sti
andl
loope
mov
ret
pop
loope
or
mov
sbb
adcl
cld
cmc
lea
ds
mov
sar
hlt
or
adc
sbb
in
fstl
scas
fsubrs
and
lahf
pop
sub
outsb
cmp
cmp
sbb
inc
add
add
add
mov
or
add
cli
popf
insb
cs
cmp
dec
push
insl
popf
inc
fld
adcl
mov
mov
dec
jg
cmc
je
enter
add
cmp
arpl
aaa
inc
lret
jo
pushf
mov
mov
xchg
decb
loope
fsubs
adc
push
or
std
les
clc
lcall
jo
mov
xchg
repnz
leave
clc
ss
fsubrs
mov
loop
cmp
in
mov
jecxz
addb
and
es
cld
push
insb
jp
dec
cmp
cwtl
and
out
sub
stos
xchg
loopne
jnp
inc
cmp
cmp
movsb
dec
repz
rorb
xchg
inc
xchg
addb
push
mov
int3
lea
stos
or
cld
out
xlat
mov
push
test
mov
dec
dec
sub
inc
icebp
pushl
sbb
xor
mov
adc
adc
lret
sbb
cmp
jnp
and
sub
inc
and
mov
push
and
ljmp
fsub
inc
pop
test
sbb
pop
push
movsl
xor
inc
es
mov
add
dec
jp
push
rclb
scas
mov
mov
pop
shll
or
dec
mov
mov
and
les
sahf
clc
roll
popf
inc
push
xlat
sbb
fdivrp
push
data16
inc
cmp
mov
cld
sub
mov
ss
movsl
mov
fs
jno
add
fldl
jbe
daa
jno
xchg
xchg
fnstcw
mov
mov
das
push
xchg
out
sub
clc
lods
or
popf
fsubl
xorl
mov
adcb
push
mov
pushf
loope
or
scas
stos
jg
mov
push
mov
dec
aas
or
insl
dec
dec
sbb
aam
xchg
cld
rclb
xorb
push
sbb
mov
das
mov
cmp
add
mov
lods
aad
add
fcomps
cmpsl
out
call
outsl
mov
dec
out
and
lock
pop
mov
je
in
les
repz
fsubrl
dec
enter
jns
mov
pop
cli
or
ds
scas
bound
icebp
inc
dec
mov
inc
xchg
outsl
xchg
jne
das
inc
mov
add
scas
xor
rclb
or
mov
add
test
pop
mov
ss
bound
adc
rcl
sbb
fucomi
shlb
popf
cmp
mov
push
data16
scas
lahf
aaa
inc
add
mov
jecxz
sbb
sbbb
pop
and
cmp
mov
mov
cmp
les
or
sub
dec
filds
lcall
incl
push
test
mov
dec
push
pop
and
insb
push
or
iret
xabort
outsl
sbb
adc
cwtl
inc
hlt
movsl
pop
mov
lock
jmp
xchg
push
movsl
shlb
ja
vmptrst
scas
sbb
mov
add
and
sbb
ja
dec
out
adc
jmp
jp
std
clc
mov
xor
test
decb
cmc
lods
mov
hlt
fldl
aad
jg
icebp
ja
jecxz
fstpl
push
push
les
jecxz
repnz
cmp
cmp
fsubr
loop
push
ds
pop
clc
ret
imul
sbb
int3
and
call
mov
mov
mov
ja
stc
and
aam
inc
push
mov
fidivrl
rcll
ret
std
lahf
or
cld
mov
xlat
loop
inc
clc
and
outsl
pop
inc
jmp
sbb
xchg
outsl
pop
js
movsb
int
sub
sahf
sub
jmp
inc
pop
add
sbb
pop
aad
insl
std
add
mov
xor
hlt
sub
ja
cmp
out
mov
fistps
pusha
sub
mov
jge
insl
push
fstps
xor
lods
fsubl
cmp
mov
add
ficoms
kmovw
aam
push
push
xchg
dec
dec
out
fwait
sub
xor
lock
pop
loopne
stc
cmc
ret
and
inc
std
lds
mov
pop
lods
pop
mov
out
cli
je
ffree
pusha
sbb
dec
sarb
mov
pusha
fwait
mov
lea
fstpl
repz
loope
lcall
push
cs
cmp
es
clc
dec
cmp
jne
inc
test
loopne
nop
inc
push
add
cld
or
add
jno
jne
mov
out
pushl
ljmp
das
imul
cs
shr
sub
mov
aas
cs
movsl
cltd
push
and
adc
push
call
mov
lods
in
lea
pop
pop
adc
dec
cli
sbb
imul
ret
repz
insl
hlt
cmp
ret
cmpsl
cmpsb
xchg
cwtl
subb
ss
mov
xchg
cltd
mov
dec
popa
push
jmp
pop
in
out
mov
outsl
scas
mov
push
dec
pop
cmp
or
xchg
cmp
aas
and
pusha
xor
fisubs
or
xchg
adc
push
jp
add
adc
push
lock
push
sbb
jge
pop
mov
mov
mov
pusha
sub
add
addr16
add
add
pop
push
or
mov
mov
std
push
pop
push
aad
out
daa
jo
fiaddl
pop
sti
test
push
inc
sbb
cli
es
pop
xor
push
xor
in
daa
fimuls
stos
test
lock
je
aaa
mov
scas
mov
jne
cmovo
cmpsb
enter
or
mov
push
mov
shll
pop
add
push
leave
sub
dec
movsb
insl
inc
in
clc
adc
js
xchg
in
cmp
push
xor
cmpsl
andl
cmc
xor
popf
repnz
mov
inc
jecxz
or
insb
inc
cs
ffree
pop
call
sub
out
add
imul
cmp
aam
cmpsb
pushf
xchg
adc
push
adc
dec
mov
ficomps
cmp
xchg
cmpsl
shr
sti
mov
cld
or
sub
cwtl
jo
mov
inc
aad
insl
aas
mov
sub
scas
mov
rclb
repz
push
pop
mov
aas
hlt
pop
mov
sub
push
arpl
or
sbb
inc
sbb
pop
ss
pop
add
jmp
into
dec
add
jnp
mov
mov
hlt
sbb
cmc
lret
push
or
imul
fld
push
sbb
sahf
mov
test
mov
in
xor
and
add
push
loopne
jle
xchg
out
nop
mov
adc
hlt
jns
fistpll
insb
cmpsl
xchg
mov
into
ret
add
inc
in
pop
mov
lods
and
mov
mov
loope
pop
loop
nop
call
mov
leave
sbb
pop
push
add
pop
loop
dec
stos
aam
in
ljmp
lahf
in
push
sbb
insl
sub
xchg
xchg
js
pop
push
mov
adc
add
dec
and
sbb
add
add
sahf
xor
cli
mov
xor
loope
and
sbb
arpl
xor
xchg
mul
mov
loop
cmp
pop
out
or
test
daa
clc
clc
test
test
cmp
cld
or
sub
call
lods
rcr
loope
outsl
mov
je
fwait
std
jl
jnp
pop
dec
popa
and
add
jmp
mov
pop
stc
repz
fiaddl
xor
mov
js
push
ret
sub
fs
or
jge
and
lcall
sbb
xor
xchg
mov
cwtl
adc
es
mov
stos
les
or
hlt
fbstp
cmp
mov
add
aas
inc
sbb
pop
sub
pop
sbb
lret
push
nop
pop
lods
test
cmpsb
rclb
lret
mov
push
jge
cltd
add
subl
xchg
xlat
push
les
test
hlt
lea
xchg
and
es
fstpt
sbb
test
test
addr16
outsl
stos
imul
or
xor
pusha
cli
or
sbb
int
push
sub
orb
pop
add
mov
scas
cwtl
outsl
lds
mov
aaa
rclb
and
pop
jg
xlat
inc
fldt
out
add
rorb
jg
aam
mov
xor
enter
xor
cmp
stos
cltd
pop
fisubs
dec
jge
sbb
aad
je
adcl
ret
icebp
out
cmp
lret
adc
scas
rcrl
mov
in
push
sub
mov
stos
mov
cs
es
dec
in
and
mov
je
jmp
xlat
fwait
fwait
dec
sub
pop
xor
sub
fsubr
bound
sbb
call
into
add
mov
enter
mov
leave
out
cmp
mov
mov
aas
adc
or
jge
imul
add
jbe
mov
add
adc
add
je
loop
aam
or
aas
mov
mov
hlt
sub
lret
mov
cmc
aaa
cld
pop
dec
mov
mov
mov
mov
add
sub
or
loope
movsb
sahf
push
inc
bnd
mov
gs
jle
add
int
sbb
and
adc
mov
loope
mov
fstpt
and
adc
lods
les
mov
scas
ret
sub
adc
jle
inc
mov
jmp
hlt
pop
xchg
adc
inc
adc
stos
cmp
loop
scas
xor
call
adc
stc
xor
scas
rcll
js
jmp
jp
je
insl
add
insl
sti
push
dec
lret
dec
and
cmp
jge
mov
jecxz,pt
mov
and
lea
in
pop
adc
arpl
aas
adc
ret
mov
rcl
push
xchg
inc
stc
scas
push
decl
push
pop
dec
jg
pop
movsb
sahf
call
jne
pop
leave
jp
clc
sub
dec
cmp
pusha
add
jbe
xchg
lcall
jge
ret
aad
adc
mov
cmc
add
sub
sub
pandn
pop
xor
jle
cltd
sbb
pop
outsl
xor
por
adc
add
fcmovbe
ffree
and
jg
aam
js
les
dec
cmp
sub
lods
insl
mov
push
xorl
dec
and
ss
adc
jb
sbb
pop
mov
rdpmc
push
adc
push
push
and
ret
inc
hlt
rorl
leave
push
jp
jg
pop
insb
cld
aad
push
xchg
daa
adc
scas
xor
loopne
mov
pop
xor
hlt
dec
mov
mov
stc
cmp
dec
shl
stc
jmp
ja
xchg
popa
lea
lret
mov
xchg
es
push
orb
sub
mov
inc
negl
lret
lods
sti
outsb
sub
xchg
in
jge
int3
test
and
cwtl
jmp
dec
stc
xor
xor
stc
sub
cmp
sub
lcall
mov
push
dec
push
push
pop
std
fidivrs
test
adc
das
insb
loopne
adc
push
dec
out
shlb
mov
ficomps
fimuls
jae
lods
mov
xor
mov
out
insb
mov
mov
aam
sbb
jae
adc
adc
push
cld
jg
xchg
push
push
test
jns
inc
sbb
cmp
movsl
adc
sbb
popf
sbbb
xor
mov
fwait
or
test
gs
int
jg
cli
add
rcrb
js
ljmp
and
jne
add
ds
call
jge
loop
sbb
sub
cmp
ljmp
in
mov
sti
negb
and
jecxz
movsb
inc
pop
add
inc
imul
mov
pop
inc
subb
cli
or
aas
in
push
call
cld
inc
rorl
jg
cmp
je
je
je
aas
lock
sub
xor
dec
outsl
jbe
pandn
orb
jmp
mov
xor
cmp
cwtl
xchg
adc
in
faddl
jle
jmp
stc
mov
fdivs
test
mov
stos
inc
iret
add
in
sbb
adc
cmpsb
ja
adc
icebp
or
shll
inc
aad
loopne
fcoml
in
inc
jne
inc
jo
mov
stos
lea
and
and
idiv
aaa
or
outsb
sbb
nop
xchg
lods
rol
scas
mov
lods
mov
iret
fisttps
mov
daa
inc
mov
outsb
sub
cld
inc
dec
test
pop
into
std
sub
xchg
sub
adcl
cmp
jo
dec
pop
shll
cmp
jl
add
sahf
mov
sub
lahf
aad
cmc
push
cs
adc
dec
aaa
std
add
mov
mov
inc
in
sub
outsl
jae
or
mov
rolb
and
mov
nop
rorl
aaa
cltd
call
dec
sub
data16
popf
jmp
push
into
inc
jnp
or
sbb
jg
fimull
xchg
loopne
mov
inc
and
adc
jno
test
cltd
aam
shl
push
or
movsl
pop
das
mov
xchg
jo
xor
in
inc
dec
lock
ficoms
inc
in
mov
gs
rcll
pop
xor
daa
mov
repz
fistpl
xchg
pop
cmp
std
sbb
dec
mov
pop
xchg
gs
jnp
inc
push
bound
mov
mov
lods
push
nop
hlt
mov
inc
pop
dec
jnp
add
pop
add
xchg
lahf
mov
lods
js
sub
cmpsb
outsl
movsl
and
daa
test
dec
adc
fdivrs
loope
addb
addl
mov
dec
sub
mov
stos
pop
or
add
out
sub
cld
jb
ljmp
or
inc
jge
gs
xorl
mov
sti
sbb
xor
addr16
es
call
pop
jno
sub
scas
add
lea
cwtl
pop
insl
ds
int3
adc
clc
push
push
lock
loope
int3
in
cmp
or
fwait
nop
lock
mov
dec
adc
jl
push
test
ret
fistpl
and
fisubrl
mov
out
ret
push
imul
push
cmp
inc
pusha
or
mov
rclb
jbe
inc
inc
xchg
jle
roll
outsb
hlt
sub
mov
pop
mov
fidivrs
and
daa
jns
insb
scas
dec
lods
outsb
lahf
outsb
adc
test
cmp
lahf
hlt
push
insl
ror
fcmovnbe
mov
sub
mov
gs
mov
pop
add
pop
orb
push
inc
push
cmpl
sub
add
cmp
mov
sbb
pop
mov
mov
cltd
rcl
fsubs
aam
and
pop
sub
pop
cld
outsl
mov
xor
pushf
push
mov
es
cwtl
iret
nop
adc
call
mov
nop
in
jmp
daa
dec
stos
js
inc
cmpsl
mov
fdivl
fnsave
add
add
or
lods
jae
aas
out
or
mov
xor
sar
cmpsb
mov
jnp
push
pushl
inc
repz
add
js
pop
cmp
testb
andl
mov
push
inc
mov
fstps
lea
cli
and
mov
lods
mov
rcrb
xor
add
push
add
lret
add
je
outsb
dec
loopne
ret
das
jnp
or
xchg
mov
mov
lods
push
mov
inc
ret
xchg
loop
loop
adc
xor
icebp
dec
jg
rcrb
sub
xchg
inc
dec
sbb
sahf
push
xlat
jbe
sub
mov
std
sub
and
test
fimull
fists
sbb
mov
push
bound
mov
jmp
sbb
cmp
push
mov
pop
push
shl
ret
cmc
push
subb
movsl
or
rcl
mov
out
xchg
jp
stos
hlt
cmp
jnp
pop
stos
shl
rorb
pop
stos
outsb
mov
imul
cmc
lcall
stos
adc
xor
imul
and
xlat
mov
xchg
inc
adc
mov
testb
xchg
adc
jnp
cmp
sbb
cli
daa
dec
dec
sbb
jle
outsb
mov
mov
out
mov
in
mov
das
rcrb
leave
int3
cmpb
fs
fisttpl
fisubrl
test
or
cmp
dec
arpl
push
pop
jne
aam
push
sahf
xchg
dec
fcompl
filds
lahf
int
aad
pop
dec
ss
loope
inc
push
or
cs
movsb
cmpsb
into
outsl
addb
movsl
add
jmp
fidivs
loopne
xchg
mov
cmc
jg
push
cmpsb
rcll
jne
jnp
scas
jecxz
cmpsl
fwait
lock
out
fisubl
dec
pushf
inc
lret
mov
and
in
sbb
dec
mov
push
cmpsl
js
lahf
xor
pop
into
sub
add
mov
push
adc
jge
mov
loop
iret
mov
outsl
xchg
mov
pop
inc
pop
dec
jo
cmc
and
or
out
lds
adc
aaa
aam
fldt
popa
inc
icebp
lds
aaa
dec
mov
mov
mov
push
ja
xor
sub
insl
sbbl
cmp
jbe
out
das
outsb
mov
sbb
dec
add
nop
scas
xchg
cmp
mov
fcmovnu
clc
mov
outsb
add
pop
call
pop
and
push
pop
pushf
outsl
aas
cld
jbe
jle
call
test
xor
aad
std
jl
mull
gs
es
test
test
mov
int3
mov
xchg
sbb
jne
push
fwait
dec
mov
in
clc
pop
clc
int
int
dec
pop
mov
aaa
ficomps
sbb
in
jo
out
inc
pop
cmp
push
out
add
add
daa
ja
jb,pt
cld
push
mov
enter
test
xor
adc
pop
mov
sti
push
fwait
iret
xchg
jno
inc
fsubr
aaa
shrb
shll
dec
push
jb
push
mul
aam
popa
mov
divl
pop
xchg
add
or
dec
shrb
adc
jmp
sbb
adc
mov
jnp
loope
xchg
addl
dec
data16
arpl
pop
cmc
fdivrl
jno
add
or
insb
js
pop
jne
mov
dec
cmpsb
loopne
xor
das
js
call
test
and
xor
xchg
movsl
push
jle
aad
sbb
shlb
pop
mov
adc
cmp
lock
jg
ja
and
xchg
sbb
inc
xchg
adc
pop
ljmp
repz
scas
scas
subb
or
flds
clc
push
std
push
and
mov
sub
nop
sub
test
imul
repz
call
lock
aam
ret
mov
adc
mov
push
lret
call
or
jmp
push
mov
ret
fdivrp
rolb
or
loope
inc
jo
adc
pushl
cmp
cwtl
mov
mov
outsb
pop
mov
inc
mov
sbb
in
jb
mov
dec
inc
xchg
add
rcl
adc
scas
jp
adc
imul
adc
sbb
das
mov
inc
mov
hlt
mul
push
mov
out
cmp
arpl
adc
push
cmp
outsl
jl
jnp
std
mov
icebp
jb
out
mov
sbbb
mov
sbb
aam
adc
xchg
rcr
mov
lahf
clc
ret
adc
and
cmp
cmp
insl
in
shl
and
movsb
inc
rorl
add
cld
dec
adc
xchg
and
or
shr
jmp
test
add
dec
pop
xlat
pop
dec
xchg
dec
scas
rorb
imul
mov
pop
testl
push
mov
pop
daa
stos
xchg
or
les
sti
into
sub
call
xchg
and
xor
sbb
mov
inc
test
divb
mov
loopne
insb
mov
xlat
jno
dec
dec
jo
outsl
push
pop
sbb
jmp
dec
ret
push
in
lcall
insl
adc
mov
pop
xchg
jne
orb
out
lret
sbb
jmp
fisttpll
sbb
call
sbb
or
pop
fmuls
dec
xor
leave
mov
mov
sub
es
adc
sub
jg
jg
dec
mov
and
mov
les
jno
jne
jg
sub
mov
sti
outsl
flds
fstl
push
xchg
sbb
adc
scas
in
push
push
xor
xor
je
xchg
in
fwait
out
push
add
sub
pop
fscale
fwait
pop
push
pop
mov
pop
jae
add
inc
mov
jp
orb
rorb
stos
push
outsl
pop
add
dec
mov
push
sub
jne
movsb
jbe
and
fwait
jb
shll
pop
cli
pop
sub
iret
je
dec
cld
sub
loope
incl
push
test
mov
mov
cld
pop
or
pop
add
fdivl
hlt
cmp
and
sti
pop
mov
mov
aas
imul
dec
in
icebp
ss
test
pop
and
inc
dec
inc
ljmp
cltd
stos
jno
add
loopne
je
mov
dec
xchg
mov
xchg
loopne
pop
addr16
pop
add
test
mov
scas
jg
jbe
inc
cs
jae
cltd
xlat
cmp
add
cmp
jbe
scas
clc
test
pop
cmp
scas
ret
out
test
push
push
jl
mov
aam
xorb
mov
or
and
dec
mov
dec
in
or
inc
subb
adc
lret
pop
clc
sub
loopne
jge
ljmp
pop
inc
std
cld
es
repnz
push
lods
push
inc
in
js
jnp
push
mov
add
cmp
and
cmp
ds
bound
pop
scas
fnstenv
enter
lret
inc
loopne
fcmovbe
mov
mov
xchg
push
je
push
ret
xchg
jns
dec
adc
cmc
fisttpl
xor
sbb
xlat
nop
call
imul
pushf
push
pop
inc
and
cmp
adc
pop
mov
sbb
outsl
call
sarb
gs
fdivrp
or
pop
fwait
rclb
xchg
cmc
dec
out
test
je
lods
mov
xchg
sarb
pushl
jo
jns
add
adc
jp
shl
std
or
sub
lods
sub
out
dec
and
or
add
pusha
push
leave
push
and
imulb
cmp
cltd
lcall
push
cmc
and
sti
mov
lea
xchg
jmp
adc
mov
mov
pop
sbb
or
lds
adc
mov
out
mov
cmp
rorl
rorl
mov
inc
cltd
jg
mov
sub
loopne
and
fst
scas
inc
rolb
push
lds
pop
lds
insb
lock
test
inc
push
mov
push
std
scas
lcall
cmp
sub
mov
add
ja
movsl
cld
inc
push
xchg
fdivr
sarb
and
inc
ljmp
insb
and
fistpll
inc
decl
pop
loop
mov
push
lds
lds
mov
sub
enter
push
cmp
iret
ljmp
dec
dec
or
adc
jne
cmpsb
clc
out
adcb
ret
adc
add
push
orl
stc
mov
mov
and
adc
sbb
xchg
xchg
insl
fsubrs
aam
sub
mov
gs
popa
mov
jge
lock
loop
sbb
stos
sub
or
inc
fistl
and
cld
or
sub
std
mov
and
or
test
pop
sbb
aaa
push
and
dec
fnsave
pop
sub
cs
mov
incb
cmc
faddl
shl
outsl
sbb
mov
gs
jecxz
jg
mov
xor
fdivs
sub
xor
xor
push
in
add
ljmp
aam
sub
or
inc
cmp
sbb
lea
inc
in
xchg
mov
shrb
aad
loop
jmp
clc
paddsw
mov
push
std
jns
mov
in
orl
jmp
mov
cmp
nop
sbbb
outsb
fbstp
sbb
adcl
pop
push
iret
adc
testb
and
addr16
decl
dec
das
aas
xlat
arpl
dec
shrl
stos
into
aas
rolb
xor
sti
lea
sahf
test
movsb
lret
subb
loope
jns
movsb
sub
push
pop
outsl
lea
daa
nop
jns
iret
fnsave
out
xchg
xchg
dec
sbb
push
adc
lea
xor
ja
repz
push
push
aaa
cmc
add
fldl
lods
cmc
addl
mov
sub
add
lock
mov
cld
jg
pop
push
ljmp
and
test
and
and
pop
pop
jmp
jl
mov
fsubrp
lea
push
clc
cmp
jg
loopne
das
icebp
xchg
call
cs
push
inc
les
sbb
add
or
into
leave
mov
lahf
leave
mov
push
sbb
jns
dec
ljmp
clc
std
push
push
inc
inc
das
add
pop
shl
push
or
mov
sbb
dec
loope
sub
js
pop
jnp
inc
mov
incb
lcall
jg
add
xorb
jo
jecxz
or
mov
cwtl
ret
mov
mov
pop
lock
or
ds
das
push
jb
or
out
mov
iret
dec
les
mov
add
pushf
ss
js
push
dec
pop
or
push
ljmp
lahf
nop
lea
fisubrs
inc
mov
fnstsw
lock
cmp
xlat
sub
in
adc
pop
dec
mov
fidivrl
xchg
inc
mov
inc
cmpb
lods
pop
pop
xchg
push
insb
fcmovb
sbb
out
ret
subb
xor
xor
das
add
mov
cmp
push
repnz
mov
xchg
cmc
jecxz
lds
xchg
mov
mov
leave
lock
cli
icebp
xchg
xorb
ljmp
sub
mov
outsl
je
rcrl
enter
int3
or
xor
test
inc
cld
dec
es
daa
inc
das
shll
add
popa
dec
mov
dec
add
dec
pop
mov
or
sbb
fs
int
xor
sub
dec
aam
bound
mov
sub
int
nop
out
adc
adc
ja
and
test
ds
adc
loope
decl
test
mov
xor
jnp
aad
mov
push
fmull
jo
or
jo
mov
ljmp
sbb
push
or
jne
das
cmp
pop
jg
adc
pop
sbb
shlb
inc
clc
leave
scas
sar
mov
sti
test
jae
cmp
and
push
add
xor
dec
addl
aaa
bound
sub
cs
ljmp
sbb
mov
add
data16
jne
lea
mov
mov
push
push
mov
sub
inc
arpl
rcrb
xchg
notb
or
pop
test
in
mov
rorl
add
fldl
and
push
mov
push
outsb
loop
sub
pop
daa
call
push
sbbb
subb
lcall
push
popf
xorl
insl
ds
int3
loope
mov
xor
sub
outsl
filds
inc
cli
xchg
dec
divb
cld
mov
adc
mov
mov
push
add
xor
jns
or
adc
mov
rcl
xor
xchg
pushl
mov
xor
add
test
add
dec
add
mov
adc
push
add
cmpsl
je
movsl
or
xchg
dec
stos
adc
ffree
ljmp
fadd
jg
aaa
mov
mov
and
adc
or
pop
mov
inc
xor
sub
jb
mov
scas
add
cmp
leave
out
clc
xchg
mov
inc
lcall
ja
sub
jno
cmpsb
outsl
and
out
jg
test
add
cs
and
inc
mov
pop
push
out
or
pop
popa
and
je
inc
sbb
je
lock
jmp
movsl
fildl
jp
sub
mov
sbb
clc
test
insb
xorl
cmc
orb
or
cltd
ret
or
fisttpl
dec
push
sub
inc
xchg
adc
inc
aaa
ds
adc
pop
add
int
jb
fistps
ror
out
add
xor
es
add
add
in
scas
sbb
push
ret
orl
ss
push
lock
sarl
rcrb
int
push
dec
imull
pop
mov
jle
jo
jo
out
adc
bnd
cli
cli
pusha
data16
mov
aas
push
loope
cmpsl
xor
add
pop
xchg
push
ret
or
push
js
mov
int
xchg
lahf
daa
add
mov
adc
jnp
clc
decl
ja
push
dec
push
dec
loopne
int3
idivl
testb
jnp
jmp
arpl
orb
push
inc
cmp
cmp
std
cmpsl
test
jp
sti
popa
movsb
cwtl
aaa
add
ret
cmp
addl
stos
or
sub
punpckhbw
mulb
popa
pushf
rcrl
sbb
xor
pop
test
push
xchg
sub
fstps
cli
lcall
fucomi
sub
cmpsb
pop
pop
in
aam
add
cli
ss
call
int3
addb
jo
lret
inc
hlt
adc
ja
stos
inc
adc
pusha
or
add
add
mov
aas
jp
and
shrl
add
xor
jg
mov
leave
mov
and
les
rclb
xorl
pop
mov
inc
sbbb
inc
jb
leave
mov
mov
push
sub
lea
leave
imul
loop
mov
sbb
decl
xchg
and
test
les
sarb
dec
imul
dec
jecxz
aas
add
cmpsb
inc
int3
jge
inc
jmp
cld
lods
xchg
dec
inc
das
mov
inc
xor
shr
mov
mov
xchg
inc
sbb
or
fisubrl
push
mov
sbb
pushw
loopne
sub
adc
jle
xor
or
jl
das
cmp
mov
pop
lock
add
int
xchg
add
mov
ffreep
dec
popf
insl
jne
jmp
nop
xor
push
inc
popf
cli
mov
inc
and
pop
xor
and
out
inc
mov
jecxz
sbb
sbb
dec
shlb
icebp
nop
push
mov
pop
clc
fistpl
push
loop
roll
push
shrl
popa
imul
pusha
sarb
dec
or
push
mov
push
popf
fiaddl
adc
imul
sti
mov
mov
inc
inc
orl
mov
outsb
lret
sbb
test
adc
ret
and
je
cmc
sahf
lds
jne
cld
repz
loope
sbb
popa
rcr
pop
rolb
adc
and
push
dec
mov
pop
in
sbb
aam
sub
push
lods
adc
shrb
std
sbb
mov
push
aaa
cmpb
addr16
stos
test
pop
sbb
sbb
fimuls
mov
push
scas
xor
shlb
mov
sbb
push
cmp
or
fbstp
push
push
call
inc
xchg
sbbl
mov
mov
lret
xchg
mov
test
dec
cmp
cli
mov
pop
xchg
imul
mov
pop
push
mov
dec
inc
push
loopne
xchg
inc
pop
sbb
hlt
ja
push
inc
mov
sub
sbb
mov
movsl
imul
aas
adc
lret
inc
in
jg
stc
and
cwtl
lcall
out
inc
scas
cli
xor
xor
jl
bound
mov
stc
push
das
add
inc
cmp
stc
ficoml
insl
or
sbb
jb
test
sbb
mov
stos
ja
stos
ret
jge
lea
pop
dec
mov
sbb
pop
inc
sbb
lods
adc
xchg
sbb
dec
push
add
xchg
sub
sub
cs
lret
rcl
int3
insb
mov
loopne
sti
sbb
adc
fs
xchg
sti
loopne
sbb
mov
test
pop
int
popa
lock
in
push
inc
xor
pop
inc
fcoml
imul
cltd
mov
cmp
test
loope
mov
cmp
test
mov
rolb
in
stc
pop
test
or
jns
mov
pop
cmp
inc
mov
adc
in
insl
insb
mov
push
iret
cmp
sbb
sahf
divb
es
clc
fisttpll
jno
xor
jb
push
stos
sub
data16
fbld
push
int
das
mov
mov
or
adc
std
in
lods
ljmp
cmp
mov
mov
add
or
and
test
add
sbb
sti
xor
or
jmp
out
mov
and
sub
jns
lea
out
xorb
jne
das
jl
xchg
insb
test
loope
loopne
add
jbe
aam
leave
sub
stos
test
or
fbstp
sub
fdivs
mov
add
push
cs
dec
lock
sti
das
sbb
pop
ficoms
bound
push
fnstsw
pop
xlat
inc
mov
loope
mov
in
cmp
jb
ljmp
sbb
pop
call
ss
movsl
pop
fdivrl
mov
mov
cltd
and
iret
cmp
push
subb
or
arpl
test
jg
pop
or
mov
sbb
pop
adc
xchg
adcb
sub
js
lock
ljmp
push
call
sub
icebp
ljmp
not
fucomp
bnd
aas
jne
jno
hlt
fisttps
sub
mov
ja
or
pop
cld
fistpll
lahf
jge
adcb
pusha
jo
add
adc
fbld
in
pop
cmp
or
and
pop
cli
shl
fwait
or
stos
mov
into
test
out
add
test
mov
rcr
xchg
lcall
fadd
ret
mov
jle
dec
leave
cltd
call
adc
add
pop
fucomp
or
iret
loop
hlt
xor
cmp
inc
fbstp
ja
ja
andl
adcl
out
jp
sbb
std
pusha
iret
sub
push
out
push
enter
mov
pop
sbb
push
xor
jb
pop
jo
sarb
mov
and
out
pop
rclb
sahf
ljmp
cmp
or
or
aaa
mov
mov
jp
add
cmp
mov
sbbb
hlt
inc
sbb
les
rsm
stos
loopne
cltd
out
dec
cmp
pusha
outsl
mov
aas
cmp
mov
push
mov
pop
das
in
es
aad
lahf
jb
out
and
negb
test
pop
inc
cld
dec
xchg
stc
cmpsl
iret
mov
jae
pop
jo
orb
sbb
lret
adc
jle
popf
enterw
xchg
jae
mov
and
jp
mov
cmpsb
mov
cld
fwait
cli
xor
xchg
mov
mov
pop
or
pop
enter
mov
scas
push
lods
lods
mov
mov
mov
dec
xor
jns
stc
imulb
inc
mov
repz
push
inc
das
push
add
xchg
ds
inc
les
jge
aaa
icebp
or
push
xlat
jge
sub
rcll
arpl
dec
jnp
cmpsb
jnp
pop
lret
pop
outsb
movsb
inc
and
xlat
xlat
mov
out
fcoml
mov
movzbl
jecxz
aaa
icebp
xor
cltd
les
cmc
push
add
addr16
or
clc
sub
pushf
sbb
dec
faddp
mov
push
inc
add
hlt
mov
push
jbe
push
xor
adc
push
insl
dec
insl
dec
xor
push
ret
xchg
adc
ja
sub
add
pop
fs
xchg
loopne
mov
in
push
mov
ss
gs
dec
mov
mov
in
mov
push
xorl
push
mov
inc
mov
ljmp
cmpsl
decl
es
xlat
mov
push
or
rorb
mov
popa
adc
and
les
adc
loope
push
jmp
ss
fldl
push
and
mov
xchg
mov
jne
in
ss
or
xchg
mov
das
test
in
sbb
dec
pop
aad
adc
push
ror
ss
outsl
clc
add
es
pusha
add
rcr
xor
mov
jle
mov
sbb
or
call
mov
jns
lods
pop
cmp
insl
negb
je
and
jmp
xlat
aaa
sbb
imul
out
inc
or
lock
ret
add
mov
into
aaa
or
cmpsb
test
es
jg
stos
rol
mov
sbb
lret
mov
cvttps2pi
add
imul
mov
pop
cmovb
and
fiaddl
jbe
jp
outsl
clc
add
mov
dec
mov
test
icebp
incl
insb
in
pop
jb
into
scas
mov
cmp
xchg
push
enter
or
mov
adc
pop
fistps
rcrl
out
ds
fnstenv
repnz
fistpll
xchg
gs
xor
mov
or
sub
jno
js
pushf
nop
loop
ja
sub
cwtl
fsubl
mov
pop
sub
mov
loopne
xchg
push
iret
sbb
ja
call
js
jbe
ret
dec
lds
xchg
sub
pop
ss
call
mov
addl
adc
mov
mov
aaa
cmc
ret
aam
push
inc
mov
and
aaa
mov
inc
sbb
xchg
call
repnz
lods
and
icebp
mov
fstl
fsubl
adc
popf
lahf
cmp
xchg
int
mov
pop
cli
das
adc
and
add
pop
dec
nop
cmova
lea
pop
into
dec
pushf
xchg
and
ficoml
mov
inc
add
cmp
loopne
shl
add
adc
sub
jnp
insb
mov
cs
adcl
and
push
outsl
pop
ljmp
add
jmp
aaa
out
sbb
fnsave
sub
rclb
int3
jno
jl
jle
mov
jne
push
inc
pop
inc
test
add
pop
sbb
cmp
dec
xchg
push
xor
xchg
xchg
call
nop
sbb
adc
outsl
std
pop
mov
inc
or
sbb
icebp
push
stc
in
aaa
loopne
jbe
lds
adc
sub
mov
xchg
jmp
pop
and
and
ret
mov
movsl
test
popa
xchg
je
out
adcl
js
and
inc
shll
jle
mov
movsl
test
ds
pop
push
mov
or
xchg
les
push
jne
jg
insb
andb
pop
pop
mov
sarl
sub
and
ds
jge
call
out
mov
mov
and
dec
inc
cmc
std
fistpll
jg
loope
add
int
jge
out
mov
lods
mov
sarl
lahf
inc
lods
out
aam
push
lods
jge
pop
hlt
cmp
outsl
push
adc
ret
jmp
ljmp
pop
lock
sub
popf
rcl
or
std
ret
call
mov
insl
cmp
push
mov
arpl
adc
inc
pop
mov
push
inc
loopne
xchg
sbb
insb
in
adc
mov
call
fs
ds
jecxz
or
dec
sbb
lret
jge
popa
dec
stos
pop
jle
mov
mov
cmp
xor
insl
mov
pop
jbe
adc
jae
mov
rcl
hlt
sbb
lods
or
inc
or
mov
aas
jo
test
pusha
cmpsb
jb
mov
adc
xor
inc
push
popa
mov
jg
ds
pop
inc
push
aam
shlb
mov
fisubl
imul
and
mov
or
push
leave
std
mov
test
loope
adc
pop
cltd
ljmp
test
fildl
mov
out
lret
sbb
add
roll
mov
das
mov
xchg
xchg
jmp
jbe
ret
cmpl
sahf
inc
lret
mov
mov
outsl
mov
ljmp
pusha
xor
push
cmp
loope
das
xchg
int3
add
out
decl
push
jae
addb
mov
dec
out
and
inc
sub
movb
pop
dec
inc
mov
loop
scas
call
aaa
inc
mov
jno
mov
pop
push
loopne
mov
test
fs
mov
pop
jg
jge
movsl
sti
fsubp
inc
in
xchg
ds
shlb
pop
clc
or
cmc
repz
push
mov
xor
jo
out
sar
out
inc
cmp
je
test
call
add
jo
push
add
popf
arpl
cmp
hlt
das
jne
inc
and
lcall
movsb
add
lret
pop
ret
pop
cs
clc
andb
rcl
enter
test
jle
pop
jns
xchg
subl
mov
jg
pop
loope
or
shl
mov
mov
shlb
jge
hlt
das
aam
adc
pop
out
jp,pn
cli
adc
incb
jnp
ss
or
subl
shlb
ss
mov
aaa
push
adc
push
adc
add
jg
push
xchg
mov
test
xchg
mov
stc
push
sub
rol
xor
scas
mov
shll
lock
and
sub
sbb
mov
adc
and
hlt
imul
sahf
lret
mov
outsl
clc
xchg
mov
fisubrl
inc
addr16
enter
jp
sub
out
ljmp
aam
mov
sbb
jp
xchg
inc
adc
dec
add
ja
xchg
repnz
jns
test
das
in
lods
imul
or
cs
aaa
xor
test
and
jl
cs
mov
xchg
dec
cs
addb
mov
call
inc
subb
pop
rcll
xchg
xchg
loop
pop
icebp
fisttpll
pop
stos
mov
out
idiv
pop
or
js
les
stos
or
ljmp
roll
loopne
dec
inc
add
dec
subl
mov
in
add
mov
push
insl
ljmp
leave
push
jbe
jbe
les
and
push
inc
ret
dec
insl
test
testb
incb
mov
cltd
insl
cmp
fmuls
daa
ret
call
aas
sub
and
adc
jge
dec
dec
std
shlw
mov
repz
mov
aam
adc
sub
jl
adc
icebp
sub
cld
sub
mov
ss
aam
inc
stos
xchg
ja
dec
repnz
insl
jecxz
ficoml
out
incb
cmp
fucom
mov
inc
push
les
add
sub
test
repz
sub
bound
scas
loope
push
or
fidivl
cmp
cs
ret
scas
push
push
mov
dec
mov
add
jecxz
repnz
add
pushf
xor
bound
xchg
fnstsw
push
jg
mov
pop
ficomps
pop
inc
lods
stos
mov
dec
lds
loop
loope
out
mov
aad
cli
hlt
inc
pop
mov
ja
add
test
jmp
or
jne
testb
pop
and
mov
int
cmp
loop
mov
and
mov
mov
push
fwait
outsl
jnp
cltd
cmc
pushf
ret
dec
std
jp
jb
cmp
mov
or
dec
mov
outsb
add
negl
and
jno
sbbb
loope
mov
jg
loop
cmc
jo
cltd
es
push
mov
mov
mov
stos
push
imul
push
mov
adc
mov
mov
and
dec
inc
mov
pop
sbb
push
int3
mov
lret
mov
movsl
jnp
movsl
mov
lahf
jbe
imul
ret
xchg
push
das
aad
test
mov
lock
sti
fldl
test
insl
sub
aas
test
pushf
mov
aaa
inc
jg
mov
test
adc
sub
mov
imul
lods
or
sbb
xor
hlt
cmpsb
xor
adc
or
mov
fisubrs
cmc
es
jle
hlt
jle
and
jne
adc
push
xor
out
lds
mov
mov
mov
test
push
jl
jecxz
es
mov
push
jg
mov
cmpsb
inc
pop
lea
stos
fcmovbe
mov
inc
mov
dec
jg
fnstsw
cmp
bound
jle
cwtl
sbb
rcrl
mov
mov
jb
scas
clc
xchg
xchg
lret
call
mov
pushf
rorb
add
push
pandn
push
fsubrl
adc
mov
std
adc
mov
sbb
test
roll
sti
mov
mov
mov
sub
cmp
lcall
add
nop
leave
test
cltd
idivb
cwtl
inc
dec
test
mov
sub
fistl
cmp
adc
dec
loope
pop
push
imul
int3
or
repz
cld
in
dec
cmp
imul
shrb
cwtl
orb
mov
aam
add
int3
mov
dec
add
dec
mov
sub
jb
lret
mov
loop
push
mov
inc
adc
dec
cld
ret
dec
jecxz
push
sbb
push
faddl
xchg
aas
nop
xchg
adc
orb
lea
jp
mov
sbb
mov
push
sbb
call
adcb
fucomip
in
pop
mov
mov
add
add
jge
bnd
inc
jns
push
xchg
mov
aaa
jle
std
jg
aas
dec
or
push
ss
and
jae
pop
in
icebp
repz
je
pushf
aas
mov
aam
call
inc
mov
add
jbe
lock
adc
cmpsl
push
icebp
mov
dec
icebp
ja
jbe
or
mov
jb
insl
jecxz
xchg
cmpsb
in
nop
mov
mov
push
and
sub
dec
ljmp
and
out
sarb
andl
sbb
lahf
dec
mov
cld
mov
mov
cmp
jge
imul
pop
mov
pushf
mov
xor
adc
xchg
and
mov
test
cli
adc
stc
icebp
loope
jns
cmc
outsl
mov
adcb
mov
mov
xchg
pop
movsb
jecxz
sub
add
scas
call
lock
dec
xlat
lea
iret
push
push
xor
add
push
mov
outsl
les
add
adc
inc
xor
jle
mov
stos
inc
cbtw
xchg
cli
push
mov
push
test
dec
dec
pop
cli
test
aas
lea
mov
inc
shr
or
inc
lods
add
jo
fs
fdivrp
mov
clc
and
inc
cmpsl
out
jo
jmp
insb
hlt
push
adc
push
cmp
call
and
loope
mov
sarb
in
cmp
xlat
ljmp
and
pop
clc
mov
add
jae
dec
xor
call
test
rorl
roll
cmp
mov
or
mov
sub
sbb
clc
lahf
ret
mov
aaa
mov
inc
lock
orb
call
sub
dec
push
and
cli
bound
fwait
sbb
cli
std
add
or
movsb
or
fisubl
inc
mov
cld
jg
mov
and
rorb
and
xlat
adc
cmpsb
or
dec
stos
mov
cmpl
mov
lret
inc
add
subl
inc
outsl
das
fists
idiv
out
jae
rclb
int3
push
loop
mov
icebp
xchg
int
pop
mov
and
mov
call
sbb
out
jae
dec
insl
cmpsb
faddl
cmpsb
test
push
jle
cltd
push
lcall
mov
xor
cmp
adc
xchg
mov
lock
and
or
sahf
loope
enter
lret
inc
shrb
or
sbb
pusha
lds
push
pop
adc
ffreep
adc
mov
call
in
pop
aad
decl
jb
push
sbb
mov
cli
or
mov
imul
shrb
push
test
sbb
mov
xlat
mov
or
stc
push
or
leave
popa
loope
jle
rcl
sbb
gs
stos
aam
cld
in
aas
ljmp
cmpsl
daa
icebp
lahf
jb
ljmp
call
lea
rolb
mov
mov
std
cwtl
push
nop
or
pop
sbb
cmp
mov
sarl
lods
mov
jge
xchg
mov
out
mov
movsb
out
leave
stos
cmpb
stos
dec
pop
loopne
or
sbb
divl
push
and
mov
cmpsl
in
sbb
xor
push
push
xchg
xor
mov
adcl
cli
das
push
mov
out
mov
xlat
inc
stc
out
dec
add
jnp
pop
fdivrl
or
shlb
adcb
fisubl
jne
flds
lea
pop
mov
insb
mov
cli
xchg
arpl
sub
ja
xor
test
sahf
lea
test
call
ret
test
pop
fsubrs
cli
in
imul
pop
mov
push
cld
push
add
pushl
jmp
or
int3
stos
scas
push
xchg
out
cs
test
mov
mov
jae
data16
das
cld
test
jno
not
and
or
das
add
out
aas
jp
mov
ficomps
jg
movsb
inc
sub
in
scas
fmuls
cmp
jo
mov
and
push
or
xchg
lods
mov
insb
insb
repz
sbb
es
xor
lret
das
rclb
in
xor
and
inc
dec
inc
aaa
fs
loop
dec
insl
push
or
sar
mov
inc
inc
inc
xor
cmpsl
push
or
sbb
cmp
mov
xchg
fnstsw
inc
or
cld
sahf
lcall
inc
in
jle
xor
ss
jbe
aas
rorb
pop
dec
test
mov
push
mov
popf
inc
xor
addb
stos
xor
les
xchg
jg
pop
movsl
or
pop
and
in
jecxz
adc
mov
xor
sbb
mov
icebp
mov
nop
leave
inc
push
lcall
mov
or
repz
out
push
mov
bound
dec
aam
roll
jecxz
sbbl
adc
ret
aaa
xor
pushl
pusha
fmuls
es
or
mov
pushl
xor
sarb
jle
addb
dec
pop
sbb
test
inc
mov
daa
pushl
mov
cwtl
xor
ds
dec
dec
sub
mov
pop
clc
or
fldl
std
jne
inc
push
sbb
cli
nop
test
pusha
adc
mov
push
call
lret
aaa
cmp
test
xchg
and
scas
and
xchg
out
call
jb
jecxz
les
in
mov
inc
mov
rcrl
mov
fnstsw
adc
cwtl
and
jns
and
repz
int
insl
jge
or
subl
push
or
loope
call
inc
pop
jmp
lods
push
cmp
jge
mov
add
cmp
lods
mov
xor
push
fists
mov
push
in
adc
outsl
jo
jmp
sub
insl
lods
mov
push
or
mov
push
loopne
mov
ret
cmp
cmp
clc
std
fs
pop
mov
push
xchg
mov
inc
xchg
ljmp
ret
jle
push
inc
je
dec
std
sub
lret
and
mov
das
in
mov
rcll
or
lea
add
mov
roll
add
pop
es
mov
inc
inc
repnz
rorl
pop
jecxz
xchg
subb
sbb
lret
jl
mov
pop
xor
sbb
lock
xchg
dec
cmp
inc
and
and
mov
sub
dec
mov
outsb
mov
popa
fstpl
shr
jns
loop
push
mov
pusha
push
mov
test
jg
repnz
xchg
push
xorl
sbb
imul
jo
cmp
and
lock
jp
mov
inc
push
leave
data16
daa
test
sar
cmp
mov
xlat
loop
or
pop
pushf
dec
dec
test
jge
cmp
mov
push
clc
push
imul
lret
mov
rolb
mov
mov
test
popf
inc
shll
int
aas
fldl
mov
pop
xor
xchg
repz
dec
idiv
adc
dec
lock
pushf
enter
test
jns
jl
mov
inc
sub
repnz
jle
mov
or
cmpb
inc
out
stc
xchg
fimull
push
je
jnp
dec
out
sub
ljmp
adc
sbb
es
xor
lds
daa
and
push
daa
fidivs
outsl
loopne
stc
jnp
adc
lret
jo
loope
rolb
pop
xor
cmp
out
adc
mov
fwait
stos
decl
and
and
stc
jne
andb
push
add
push
mov
cmp
je
inc
scas
add
icebp
sbb
dec
stos
adc
into
jge
mov
test
adc
fnstcw
fldenv
and
xchg
adcb
std
push
stos
pop
push
mov
stc
out
stos
xchg
push
outsb
jae
xbegin
cmpsb
addb
or
and
pop
cmp
imul
mov
aas
inc
mov
sub
enter
scas
inc
push
xlat
pop
cli
ror
aas
lods
mov
add
cltd
xchg
sbb
adc
ds
adc
or
and
mov
jbe
aad
lock
clc
push
out
leave
xchg
inc
in
cld
dec
movsb
hlt
inc
insb
cld
dec
gs
and
inc
push
adc
decb
xchg
lock
mov
imulb
cmpsl
rorb
xchg
shrb
sub
xchg
movsb
scas
dec
pop
out
stos
ljmp
lods
sub
pop
adc
push
mov
pop
mov
jg
call
decl
pop
mov
pop
mov
leave
loope
movups
sub
xchg
jg
pop
pop
jo
pop
sbb
dec
call
mov
roll
jmp
mov
addl
sbb
jg
jp
gs
adc
sub
imul
add
xor
mov
jle
mov
mov
incb
jg
xor
jo
stc
push
pop
pop
adc
or
jg
sti
pop
enter
add
and
loopne
je
pop
jns
lock
in
mov
mov
clc
add
lret
movsl
mov
sbb
pop
or
mov
xor
mov
xor
mov
mov
or
push
je
sub
pushf
mov
std
dec
lea
push
add
std
mov
add
mov
fisubrl
ja
adc
pusha
add
movsb
cmp
add
inc
sub
add
hlt
sbb
mov
movsb
push
mov
push
frstor
cmp
mov
pop
or
ret
cmp
outsl
adc
pop
push
rorl
test
cmovno
jle
in
lret
jge
add
pop
dec
adc
dec
cmp
loopne
xchg
stos
or
int
ficomps
movsb
xor
aas
stos
popa
mov
movsl
inc
mov
pop
cmpb
xor
push
inc
or
cld
fistpll
push
rorl
inc
jmp
jo
leave
jmp
mov
xor
xlat
jmp
mov
jle
test
and
mov
dec
pop
lahf
imul
dec
sbb
fdivrl
add
inc
addr16
imul
enter
jno
cmp
scas
outsl
mov
xchg
ret
lods
jecxz
popa
orl
push
sub
stos
xor
insb
mov
mov
and
and
ret
pop
push
mov
aam
jno
and
fwait
mov
pushl
dec
ja
fsubrl
cmp
mov
mov
mov
mov
push
cmp
lea
inc
inc
fmull
sub
xor
lahf
andb
stos
sub
into
dec
inc
inc
aaa
loop
xor
fcmovbe
or
test
sub
mov
inc
jl
movsb
mov
pop
and
scas
pop
or
xchg
test
jb
cmp
hlt
pop
sti
shlb
lahf
call
or
lods
das
dec
lahf
adc
imul
orb
or
lcall
adc
add
ljmp
aaa
std
outsl
push
in
loope
mov
and
jb
inc
lcall
insb
aam
dec
int3
xchg
or
rorl
sub
popa
test
hlt
xor
jl
mov
int
hlt
negb
jbe
add
inc
out
test
or
mov
std
jb
jnp
inc
ja
lcall
inc
xor
insl
std
adcb
jle
ffree
mov
and
lret
cmc
test
outsb
je
push
mov
inc
out
subl
loop
jne
sub
stos
cltd
sbb
pop
and
loope
icebp
in
roll
cmp
and
lret
ret
or
push
mov
sub
call
sub
stc
loop
xchg
jmp
inc
mov
pop
mov
cmp
or
sub
pop
push
ja
sub
inc
decl
xor
add
pusha
aam
mov
lods
ret
imul
sbb
call
xchg
and
test
das
pop
or
fwait
pushl
or
push
icebp
adc
popf
loop
jge
sar
adc
imul
lret
cmp
mov
push
push
jno
pop
cmp
push
inc
aad
push
xor
adc
mov
jl
cmpsb
jo
mov
mov
cmpl
push
xor
xlat
add
mov
lds
jo
push
sub
mov
lcall
dec
xor
jg
mov
and
add
jb
std
shlb
rcrl
xchg
aas
and
setae
mov
push
jmp
push
sbb
es
cli
lods
fcomp
pusha
or
mov
fbld
outsl
xchg
shrl
xchg
mov
jge
ljmp
stos
sahf
cmpsl
test
mov
icebp
mov
in
inc
aaa
std
sbb
push
imul
jns
sbb
dec
xchg
pop
mov
imull
or
push
adc
jmp
roll
sbb
sbb
mov
call
adcl
test
push
jp
inc
loope
int3
loop
pop
pushf
dec
jg
es
push
or
arpl
scas
inc
pop
sub
cmp
cmc
mov
sbb
inc
xor
ljmp
nop
jp
test
push
inc
jg
jle
arpl
arpl
push
add
adc
addb
vprotq
push
shlb
inc
mov
out
sub
mov
ficoml
test
aam
and
mov
mov
pushl
test
inc
inc
inc
out
cltd
push
ja
mov
jp
in
jmp
or
or
xchg
fiaddl
add
sarb
test
sbbb
xor
mov
dec
pop
mov
cltd
xor
loopne
xor
or
insb
lock
je
aaa
add
out
lahf
cs
and
cmp
inc
or
jo
insl
nop
fldcw
pop
std
add
or
ret
sub
dec
pop
dec
add
lods
adc
xchg
sub
push
xlat
mov
xchg
loop
sbb
cmp
sbb
jmp
push
push
sub
andl
cld
jg
cmp
and
mov
or
ficoml
xchg
loop
mov
and
add
out
js
popa
jecxz
fwait
clc
jmp
stc
mov
pmullw
lea
cld
xchg
xchg
sbb
daa
stc
lods
cmp
cmp
hlt
or
rclb
testb
ffreep
sub
das
movsl
mov
xor
cli
cld
mov
jg
aam
pop
sbb
xor
xlat
hlt
xchg
daa
andb
jg
or
and
ficoms
bound
aaa
or
fsub
imul
sbb
loope
decb
jg
jns
xchg
out
sbb
push
fdecstp
in
es
pop
lds
dec
mov
or
lock
or
clc
mov
fisttps
jge
add
popf
dec
mov
inc
lods
iret
dec
repz
rcrl
pop
push
fcoms
inc
adc
mov
pop
call
jns
add
popa
sub
jg
mov
jnp
cmp
xchg
inc
push
rcrl
and
cmp
push
sti
mov
and
xchg
or
loope
mov
fiadds
jp
enter
mov
adc
dec
js
ret
fildl
clc
iret
sub
mov
inc
nop
inc
xor
mov
dec
hlt
cmp
mov
mov
clc
das
fs
sbb
divb
arpl
icebp
sbbl
sbb
std
imul
mov
fcmovnbe
mov
enter
or
sarb
inc
int3
add
std
jp
inc
shll
lcall
cmp
sub
cmpl
jg
mov
and
pusha
mov
in
mov
shlb
add
mov
mov
xchg
inc
je
cld
push
or
pushl
mov
sbb
adc
xor
bound
and
or
inc
add
inc
mov
hlt
add
jbe
pusha
lret
inc
jno
xor
add
push
cmp
dec
jnp
in
mov
push
pop
popf
add
jnp
sub
xchg
jnp
fstpl
hlt
cmpsb
ss
and
or
rorl
sub
mov
cmp
push
lds
loopne
int
shrb
dec
mov
divb
mov
ret
sub
ret
outsl
sbb
orb
mov
mov
sub
in
int3
fbstp
or
jno
rcrl
icebp
aad
stos
rcrl
or
adc
jno
push
jg
xor
repnz
jnp
sub
ss
cmp
push
mov
jo
push
jmp
or
cmp
mov
add
xchg
outsl
shll
xor
jo
sbb
sub
mov
inc
xor
fcompl
sbb
das
adc
cs
fdivs
xchg
decl
jmp
cmp
sbb
aaa
loopne
ljmp
jmp
fstpl
addb
shrl
mov
mov
adc
and
dec
das
push
cmpsb
call
subl
xor
mov
iret
test
xchg
loop
mov
pop
sub
jns
xchg
mov
inc
adc
add
sub
add
dec
lds
mov
cmp
adc
negl
ds
or
or
outsl
push
ror
lahf
ljmp
loope
fistpll
and
leave
test
pop
xor
or
jns
or
loopne
not
es
cld
pop
add
cmpsl
test
je
xchg
cmp
push
jne
add
dec
jno
cltd
movsl
shll
jmp
mov
xchg
mov
inc
nop
or
aam
pop
loop
adc
push
pop
push
sahf
push
mov
push
psubusw
push
mov
inc
mov
push
push
out
add
icebp
scas
sub
rclb
dec
mov
mov
int
into
fldenv
leave
ds
aas
jl
filds
push
inc
push
fwait
pusha
and
imul
inc
std
jno
jle
fcomp
popa
sbb
xchg
inc
ljmp
jnp
pop
mov
leave
sarl
sbb
jg
or
ret
je
xchg
je
mov
clc
xchg
les
push
sahf
dec
and
into
sbbb
jge
add
adc
push
jg
out
stos
out
mov
sbb
inc
rcr
pop
clc
rol
sti
rcl
out
repnz
fisubs
mov
xchg
push
adc
adc
das
or
cmpsb
pop
ret
icebp
xchg
inc
and
jg
sbb
addl
mov
fldt
sub
cmp
xor
outsl
mov
pop
mov
sub
lret
push
faddp
fwait
mov
in
lods
add
cmp
rcl
orl
ret
sbb
enter
nop
arpl
ret
ja
hlt
xor
and
mov
cmp
adc
push
adc
cmp
and
lret
ss
jmp
loope
leave
xchg
in
push
loopne
mov
js
mov
lea
add
mov
or
dec
movsb
aad
mov
push
scas
je
jmp
roll
call
sub
xor
lea
adc
lret
out
cmp
add
lock
xchg
push
cmpl
inc
sub
shll
cli
push
call
jnp
ret
cmpsl
inc
insb
jb
mov
xchg
push
push
lret
pop
mov
sbb
movsb
icebp
std
repnz
mov
movsl
inc
pusha
addb
xor
mov
sub
leave
inc
dec
lock
imul
mov
adc
mov
or
lret
and
stos
ret
cltd
adc
push
outsl
push
and
push
xor
xchg
insb
push
jbe
movsb
movsb
lock
iret
loop
mov
or
xor
push
sti
mov
mov
fdivl
sub
mov
in
insl
mov
inc
pop
mov
pop
add
mov
test
mov
scas
push
ljmp
dec
pop
insb
cmp
call
test
aaa
movsl
xchg
jecxz
incl
sub
jp
push
push
ret
pop
sub
mov
ret
iret
add
mov
incl
int3
popa
std
daa
rep
subb
inc
sub
testb
or
fstps
jno
stos
out
add
in
xor
inc
mov
mov
test
push
lret
mov
and
or
and
inc
xor
gs
add
ret
xchg
js
repnz
imul
push
sub
and
outsb
clc
cmp
push
ror
mov
jmp
and
adcb
aaa
dec
jle
repz
dec
stos
stos
fbld
fs
lea
fwait
icebp
mov
mov
push
bound
and
xlat
cmc
xor
loop
mov
adc
leave
xchg
and
and
lret
in
push
test
and
mov
mov
push
decl
icebp
inc
loope
icebp
je
jno
loope
sub
imul
addr16
xor
call
mov
mov
cmpsl
inc
pushl
adc
add
or
js
cwtl
out
insl
add
scas
cmp
jnp
adc
dec
adc
rclb
es
adc
add
rorl
inc
jge
cs
mov
cmc
mov
xchg
pop
inc
nop
xor
and
mov
add
out
mov
cmp
shrl
hlt
inc
pop
sbb
out
mov
mov
cmpsb
out
adc
push
outsl
inc
mov
mov
lahf
sub
cmp
shrb
cmp
int3
imul
mov
xor
lock
insb
mov
cli
cld
or
mov
incl
mov
pop
sbb
xor
idiv
push
jg
push
pusha
jg
mov
out
incl
or
xchg
jnp
push
push
jns
mov
pop
jb
jns
fbld
add
ja
fcmovb
push
sbb
mov
pop
push
push
psadbw
mov
dec
aas
out
icebp
incl
add
into
mov
mov
sti
xchg
aam
iret
adc
stos
aaa
insl
jo
or
outsl
mov
mov
gs
cmp
dec
adc
sbb
fdivs
stc
lods
add
ret
rcr
cwtl
lods
ljmp
aas
and
mov
adc
cmc
pusha
fldl
imul
pop
cmc
xchg
inc
jge
push
insl
imul
push
adc
mov
xlat
mov
ja
cmc
pop
bound
or
das
add
fcmovbe
lods
shlb
adc
sbb
scas
and
xor
and
cmp
sti
ds
ret
movsl
incl
loopne
sub
pop
sub
cmc
sbb
cltd
mov
cmp
ja
aaa
icebp
outsl
icebp
inc
push
mov
sbb
sbb
flds
ss
out
jp
cmp
add
dec
jbe
es
jbe
jbe
lahf
mov
mov
jb
sbb
imull
sbb
pop
sbbb
mov
xor
jl
lret
mov
inc
sbb
adc
mov
out
popa
push
fstl
jp
bound
jecxz
hlt
inc
xchg
jle
cli
lea
stc
call
inc
or
push
icebp
repnz
fdivrl
cmp
and
movsb
mov
mov
lret
xchg
xor
cmp
mov
flds
and
jg
mov
rcr
shlb
sub
aad
lock
dec
or
or
xlat
enter
pushl
scas
dec
js
jmp
mov
and
pop
aaa
hlt
pop
mov
fadd
push
add
dec
adc
cli
add
std
rcr
ljmp
pop
js,pt
scas
xor
or
shrl
cmc
notl
out
ja
das
cmp
stos
xchg
sub
mov
mov
flds
outsb
sub
shll
push
fmuls
mov
popa
push
std
pop
mov
test
lods
jmp
icebp
mov
and
push
dec
adc
rcl
fidivs
std
fucomi
das
clc
outsb
testl
insl
sub
repz
int3
jge
and
imul
fstpl
out
bound
jbe
gs
lret
cwtl
sbb
in
pop
adc
xchg
outsb
fistps
mov
sbb
jae
inc
adc
push
xchg
cmp
jns
dec
add
xchg
leave
and
movl
in
testl
mov
popa
subb
cmp
jle
filds
gs
add
push
es
mov
clc
mov
lret
aaa
inc
sub
bound
cmp
popa
roll
cs
imul
bound
sbb
pushl
add
addr16
mov
and
cwtl
cmp
idiv
push
mov
testl
mov
bound
ss
leave
pop
mov
pop
cli
pop
adc
repnz
cmpsb
xor
cmc
cmpsb
inc
outsl
insl
fcoml
adc
dec
and
pop
inc
negb
push
inc
inc
out
daa
adc
test
push
scas
add
push
mov
shr
fcoml
je
sti
dec
sbb
outsb
mov
popa
aas
rolb
and
inc
insl
aaa
rcll
cli
sub
pop
test
inc
dec
je
mov
fildll
jae
inc
outsb
add
call
and
test
andb
rorb
leave
jae
leave
dec
jmp
sub
mov
xchg
jmp
lea
dec
xchg
jge
sti
pop
out
mov
jge
cmp
lahf
cwtl
ss
push
mov
push
pop
aaa
std
or
sti
mov
dec
inc
cmp
jg
lret
sbb
lds
mov
arpl
ror
pop
or
mov
call
fsubr
or
call
mov
incb
dec
je
arpl
std
jb
das
adc
addl
cmpsl
pop
adc
sbb
sbb
xlat
fimull
int
sbb
mov
sbbb
loope
lcall
rol
mov
add
rcl
and
jmp
adc
xor
cli
or
jno
jecxz
sbb
cmp
sub
sbb
popf
mov
mov
std
repz
pushf
aaa
cld
mov
xor
pusha
clc
dec
test
jno
int
sar
mov
and
in
in
and
or
xchg
adc
hlt
mov
xorl
in
push
subl
in
sub
xchg
int3
dec
add
sub
leave
cld
imull
mov
push
orl
adc
lock
jl
sub
dec
mov
clc
incl
std
inc
push
je
ret
xchg
movsl
cmp
xchg
and
add
push
and
out
or
xorl
fisubl
mov
rol
ror
pop
orb
cmpsl
push
dec
jmp
push
fildll
cmp
sbb
adc
lods
addb
adc
mov
jno
in
lock
outsb
sarb
int3
mull
mov
mov
mov
ljmp
out
leave
dec
and
or
stos
pop
test
in
sub
cmpsb
test
adc
sub
mov
push
shrb
pop
jns
sbb
dec
cs
insl
loop
push
push
mov
dec
sbb
jge
outsl
jne
lods
inc
jle
dec
dec
xchg
std
add
mov
push
mov
cmp
mov
adc
aaa
loope
scas
and
test
or
and
loope
push
cs
std
xchg
mov
stc
or
push
xorb
stos
sub
cmp
or
mov
es
das
push
push
rorb
mov
inc
cmp
fcomps
sahf
push
test
les
add
fcomip
insl
test
jge
call
test
or
iret
xor
lock
insl
inc
add
adc
mov
repnz
xchg
xor
out
jmp
je
call
lods
cmp
sub
test
pop
ret
setnp
fwait
or
sahf
lcall
jbe
rcll
cmp
pop
fdivp
mov
jne
dec
nop
shlb
cmp
cmp
loope
cmp
mov
les
pusha
push
int
mov
mov
xor
stos
loopne
cmp
in
mov
and
nop
adc
xor
mov
test
and
cmp
jb
adc
clc
inc
cmp
lcall
icebp
mov
sbb
jg
pop
in
mov
lahf
mov
or
les
xchg
jo
pop
cmova
and
stos
call
and
int
hlt
mov
sbb
adc
push
or
and
push
pop
inc
fwait
sbb
rcrl
in
bound
add
aas
stos
js
lods
dec
mov
mov
and
dec
mull
and
iret
add
aaa
mov
add
xor
pop
push
inc
or
sar
pop
js
cld
xor
jb
ror
jmp
xchg
inc
push
inc
mov
mov
add
inc
std
mov
cld
imulb
div
dec
out
leave
xchg
push
stos
aad
dec
outsl
push
test
shll
sti
and
xor
push
push
jl
loope
rcrl
jg
shrl
es
cmpsl
adc
cmovno
push
push
xchg
xor
clc
cmpsl
icebp
jnp
divl
das
xchg
outsb
inc
fs
scas
xlat
mov
sbb
out
push
subl
hlt
or
in
add
sbb
inc
adc
les
dec
mov
stos
pop
xor
dec
lods
inc
sbb
mov
daa
dec
push
je
jl
and
loop
insb
and
or
test
push
mov
int
inc
mov
dec
cmp
xchg
adcb
dec
test
or
dec
and
out
mov
pop
inc
jo
sbb
pop
xchg
xchg
add
add
sahf
cmc
outsl
push
sbb
jb
push
aas
push
clc
cmp
add
mov
and
jmp
aaa
movsb
push
and
pusha
cmp
insl
loop
sti
pop
xor
fstps
push
and
push
clc
ret
test
dec
fwait
pop
in
sti
pop
cmp
jbe
repnz
push
xchg
out
add
and
xor
cmc
mov
xchg
cmp
dec
stc
mov
clc
adc
mov
sub
stos
rorl
cmpb
call
mov
mov
add
mov
scas
mov
hlt
mov
test
xor
xchg
sbb
push
movsb
cwtl
add
mov
or
jae
sbb
xor
push
movsl
notl
pop
cmpsb
das
mov
hlt
sbb
or
jb
mov
fstpt
mov
fisttpl
cmpsb
push
pop
cmc
or
xchg
cltd
shrb
and
dec
imul
lods
adc
or
and
nop
cwtl
inc
cwtl
xchg
sbb
fdivrp
icebp
rcll
inc
xchg
mov
push
xchg
mov
sar
inc
lahf
aam
and
push
aaa
repz
jge
addb
xchg
ret
xchg
popf
inc
test
or
lock
pusha
jo
dec
jmp
js
imul
call
loope
subb
js
xorps
js
dec
add
cmp
ljmp
xchg
rcrl
in
mov
sub
adc
adc
loopne
test
cmc
xorb
ss
mov
mov
aam
push
dec
les
fwait
outsb
and
pop
xchg
sub
loop
sbb
or
mov
mov
in
xchg
scas
sar
outsl
sub
pop
daa
jbe
std
adc
cmp
arpl
add
pop
dec
daa
fbstp
inc
xchg
mov
sbb
jno
fst
or
ljmp
fistpll
sbb
jge
lds
adc
dec
insl
mov
jnp
lcall
rcrb
or
mov
ret
lahf
int
pop
jp
in
push
push
fnstcw
inc
jb
hlt
out
cwtl
inc
mov
imul
cld
xchg
add
popf
daa
aas
inc
rclb
cli
jmp
push
lret
imul
ss
imul
jg
mov
cmc
inc
lds
mov
daa
xchg
pusha
div
xchg
jecxz
add
sub
or
adc
fprem1
or
mov
push
jo
dec
cmc
xor
pop
test
sub
adc
mov
inc
dec
addb
jne
add
lock
push
hlt
and
or
cmp
test
mov
or
lea
jno
mov
faddp
popf
sbb
mov
mov
sub
lret
jp
mov
xor
push
pop
adc
into
push
sub
imul
fisubrs
and
stos
movsb
xor
faddl
sbb
scas
stos
mov
imul
lock
cmc
pushf
mov
xchg
loop
add
out
arpl
ret
xchg
adc
xchg
mov
fwait
js
mov
mov
add
push
loopne
adc
mov
add
mov
xchg
push
push
or
loop
pusha
stos
ds
dec
dec
test
dec
out
inc
jge
xchg
jecxz
sbbb
add
cmp
fldt
xor
and
xchg
data16
pop
es
insb
std
dec
cmpsl
lea
push
test
movsb
ljmp
cmp
cmp
rorb
jae
jg
mul
sbb
and
sbb
insb
gs
add
push
pop
test
loopne
add
aaa
cld
mov
in
xchg
faddl
scas
lcall
loopne
movsl
dec
popa
lahf
aad
mov
push
icebp
sbbb
stos
pop
test
ret
sarl
xor
sub
dec
jae
mov
iret
mov
sub
aaa
rolb
xor
mov
imul
ljmp
pop
xchg
call
out
mov
nop
cmc
or
lahf
sbb
cmp
push
mov
mov
adc
decb
incb
jecxz
xchg
sahf
and
pop
mov
movsl
dec
ret
js
lds
mov
test
and
mov
test
mov
or
out
es
sarl
xor
andb
pop
inc
fimuls
ret
in
out
xor
and
addb
pusha
es
jno
bound
dec
out
jns
jb
lret
ds
mov
loopne
fldenv
scas
jecxz
mov
fbstp
idivl
adc
and
popa
jne
mov
sbb
xchg
push
mov
xchg
outsl
insb
mov
pop
mov
fsubl
out
repz
scas
loop
lret
jmp
movsl
movsb
jge
cmp
mov
or
clc
sbb
pop
mov
inc
cld
aam
inc
not
sbbl
push
lods
dec
das
insl
push
cmpsl
ja
lea
mov
sub
sbb
rorb
int
add
jbe
les
clc
lds
push
shll
dec
mov
push
cld
mov
inc
mov
ljmp
mov
push
testl
sbb
sti
imul
dec
sub
jg
jg
gs
repnz
stos
orl
aaa
test
cltd
adc
fistps
lock
test
test
xchg
pop
nop
pop
xchg
add
mov
loop
fidivrs
bound
inc
stos
sbb
out
subb
fisubrs
sbb
mov
stc
pop
jmp
xchg
xor
lea
push
sub
pop
push
or
addr16
cwtl
outsl
mov
add
lret
jmp
pop
clc
movsl
mov
push
push
aad
dec
mov
mov
outsl
jo
scas
pop
sub
push
pushf
mov
and
sahf
inc
ljmp
sub
loopne
leave
std
push
out
lahf
and
int
movsb
push
and
adc
andb
int
sub
adc
addr16
add
mov
fldt
shll
jb
ret
shrb
push
jl
ljmp
inc
cld
jbe
push
cld
in
sbb
lods
lahf
lret
inc
mov
ret
rorb
jle
add
inc
mov
pop
pusha
add
cmp
nop
loop
or
ret
loop
cmp
mov
inc
in
mov
pop
xchg
dec
repz
es
xchg
adc
dec
adc
fs
incb
jl
rol
data16
cmpsb
pop
sub
lock
adc
xchg
cmpsl
xor
addr16
sub
popf
mov
xor
inc
cmc
ja
aaa
hlt
movsb
fdivs
insl
inc
cmpsb
clc
pop
sub
dec
stos
bound
xor
daa
aam
sub
mov
lock
or
cli
js
dec
fs
lar
mov
movsl
add
dec
pop
cmpsb
mov
clc
push
inc
ljmp
jl
arpl
movsl
inc
xlat
in
inc
in
call
std
fstl
dec
jbe
das
jle
and
lds
cs
fstpt
fcmovnbe
nop
mov
mov
test
push
into
clc
outsl
mov
adc
sbb
pop
andl
fcomip
das
in
mov
xchg
add
bound
xor
es
inc
stc
stc
inc
cmp
pop
xlat
adcb
cmp
and
nop
mov
lock
adc
mov
fbstp
sub
orl
enter
and
decl
add
or
dec
cmp
jne
es
sbb
js
aaa
push
dec
and
push
jnp
pushf
aaa
inc
jne
bound
adc
push
or
dec
adc
pop
stc
pop
jle
dec
or
hlt
mov
pop
cs
adc
mov
ljmp
or
adc
scas
mov
sbbb
or
or
mov
and
mov
jns
jmp
loope
xchg
lock
pusha
out
xchg
cld
les
daa
jmp
ds
call
jo
push
adc
xor
sub
or
cli
mov
mov
call
inc
rolb
add
inc
push
push
imul
cmc
loope
push
test
lret
adc
jg
push
jo
je
jmp
frstor
int
jnp
adc
add
fcmovnu
pop
pop
call
inc
jb
sub
and
mov
fildll
push
pop
rolb
push
dec
jne
mov
jecxz
sbb
bnd
cmp
xor
fwait
add
shll
loopne
mov
lods
icebp
test
jle
xchg
loopne
push
jge
fcomps
mov
push
push
sub
xor
xchg
shr
adc
xchg
pop
stos
sbb
adc
jo
inc
xchg
sbb
inc
xchg
adc
xor
ja
push
inc
mov
dec
int3
mov
and
jnp
das
insb
scas
sub
fdiv
sub
add
imulb
decl
xchg
test
inc
imul
xchg
inc
cmpsb
outsl
call
pop
add
xor
fcomip
sbb
hlt
add
push
inc
inc
test
adc
and
es
dec
lret
out
push
add
mov
sbb
sahf
pop
pushf
mov
sub
in
stos
mov
mov
sbb
inc
add
aaa
lret
cwtl
lods
stc
jmp
sahf
mov
lock
push
cld
pop
fistpll
push
call
test
call
andb
mov
fwait
xchg
test
mov
jae
dec
cmpsb
out
mov
jmp
xchg
std
ret
push
inc
clc
cltd
pop
sbb
inc
xorb
sbb
arpl
or
inc
dec
pop
add
decl
ret
psrlw
subb
test
add
test
cmp
testb
cmp
out
cld
mov
fs
lahf
cmp
xor
pop
sbb
add
data16
out
mov
or
sbb
and
add
inc
adc
push
inc
and
and
es
stos
push
jle
mov
loopne
lock
enter
outsb
test
icebp
mov
mov
push
jg
jecxz
mov
or
mov
fs
inc
js
lea
outsb
cld
mov
rclb
cwtl
inc
push
stc
dec
lds
fwait
xor
or
adc
ss
mov
push
and
adc
mov
lods
push
pop
test
mov
xlat
sbb
or
lods
aaa
loop
and
dec
or
inc
pop
add
sub
bound
outsl
push
test
jnp
or
mov
push
test
stc
mov
inc
imul
iret
cmp
or
inc
sahf
movl
pop
shll
jl
lock
out
push
xchg
adcl
push
call
scas
sub
dec
arpl
outsb
mov
push
pop
push
mov
and
or
mov
mov
xchg
movsb
push
cmp
or
out
push
hlt
andl
push
shrl
ret
aad
es
aas
mov
neg
aaa
cmp
xchg
push
stos
sbb
jecxz
nop
inc
dec
jecxz
push
fwait
sub
lock
adc
movsl
dec
fcomps
or
imulb
push
jnp
or
jae
push
imul
jno
ret
outsl
cmpsb
outsl
xchg
stos
ljmp
add
mov
xchg
adc
test
cmp
fwait
mov
push
inc
lahf
cld
adc
adc
and
ret
pusha
dec
sbb
outsb
dec
enter
adc
inc
mov
cltd
fchs
fisubl
js
push
incl
mov
xchg
adc
lret
adc
aad
push
dec
or
test
loopne
movsl
pusha
mov
aaa
push
out
mov
sub
pop
mov
sub
push
ret
pop
into
test
je
sub
decl
rorb
shl
sub
lahf
into
lods
or
test
inc
loop
adc
ja
xlat
add
sar
rorb
mov
xlat
aam
inc
xchg
nop
movl
or
pop
xchg
jo
sbbl
fs
mov
imul
adc
pop
pop
xchg
push
cld
fsubr
add
jb
dec
push
adc
lock
mov
push
jg
adc
jmp
push
mov
outsb
mov
fcoml
jecxz
sbb
mov
rcrb
jns
outsl
call
imul
push
adc
mov
fiaddl
adc
ss
jbe
inc
and
fwait
scas
movsl
mov
movsl
fdivr
sbb
push
pop
pop
mov
clc
inc
hlt
inc
js
testb
xor
loopne
cld
test
call
or
bound
lods
xchg
je
hlt
xorb
push
add
clc
mov
mov
insb
mov
arpl
lods
aaa
mov
cmc
mov
mov
aaa
cmc
jl
pop
cmpsl
cmp
xor
sti
aaa
add
movb
pushw
jo
push
daa
loope
mov
fidivs
imul
or
adc
inc
mov
adc
cmp
push
inc
push
insl
sbbl
mov
sqrtps
mov
cld
xchg
xor
xor
xchg
mov
jl
movsl
adc
cltd
inc
pusha
es
cmp
xchg
jge
pop
std
and
mov
xor
and
push
aaa
add
add
or
arpl
jg
jg
add
jg
jecxz
lea
addr16
or
addl
pop
jge
and
sub
int3
push
sbb
outsb
mov
addl
jo
inc
test
sar
lret
fsubl
out
cmp
push
push
inc
add
repz
push
add
lea
xor
ret
mov
fisubrs
aas
pusha
not
inc
inc
adcl
mov
add
sti
add
negl
cmp
cmp
sbb
loop
lods
mov
lds
adc
ja
enter
dec
aaa
out
pushl
lea
cmpsl
mov
mov
test
mov
mov
int3
adc
sub
test
icebp
pop
aas
icebp
pop
adc
iret
mov
pop
and
xchg
loopne
aaa
out
push
ret
in
cs
cmp
dec
push
sarl
cli
add
add
ret
loop
jl
push
or
inc
xlat
stos
xor
or
and
movsl
sbb
test
shrb
inc
xor
ficoml
xchg
fcmove
push
mov
dec
and
jo
push
lret
pop
push
std
aaa
ror
popf
push
jp
add
push
xor
push
dec
mov
insb
enter
nop
pop
and
push
fwait
ljmp
idiv
outsl
mov
pop
mov
adc
in
add
jecxz
jg
jge
lods
push
nop
insb
jmp
sbb
mov
ja
dec
xchg
fucomip
mov
xor
out
daa
mov
loope
mov
xchg
mov
sbb
das
mov
ljmp
push
das
cld
jmp
and
roll
aas
or
mov
movsl
lret
inc
push
pop
jno
xor
fcmovb
or
femms
aaa
fnstcw
test
pushf
adc
inc
into
pop
je
outsl
insl
mov
int
stos
add
or
pop
lahf
or
call
pop
nop
xlat
andl
jge
cli
das
cld
and
ds
loop
mov
mov
nop
jmp
out
push
icebp
add
icebp
push
pop
ret
mov
sarl
pushl
lock
or
rorb
mov
mov
jle
push
push
dec
adc
mov
fbld
es
adc
xchg
test
fcmovnu
cmpb
pusha
or
add
inc
rorb
daa
jecxz
adc
ret
jnp
mov
jae
cli
mov
sbb
out
sbbb
xchg
cmp
out
push
adc
fisttpl
push
cmp
push
inc
pop
jle
xchg
gs
dec
mov
js
xchg
movsb
mov
push
xchg
loop
dec
shrl
jg
fisttps
jecxz
cmp
mov
sub
call
movsl
les
inc
cwtl
or
es
cli
test
pop
icebp
dec
or
adc
or
or
adc
lods
and
sub
arpl
in
add
aas
loop
adc
fstl
lock
add
rcr
xlat
add
pop
mov
aam
and
sub
aad
mov
push
xchg
jecxz
jne
call
je
push
lock
incb
push
enter
ret
jae
das
rcrl
nop
sbb
cmp
bound
aad
mov
test
lock
sub
push
data16
or
or
sahf
fstpl
jbe
jl
jp
pop
push
loope
mov
jbe
xchg
sub
or
xor
repnz
push
test
outsb
jmp
add
pop
fcoml
or
pusha
dec
popa
shlb
ret
shll
movsl
sbb
aaa
mov
clc
add
mov
es
jmp
mov
or
push
popa
cmp
in
outsl
cli
sbb
jne
sub
lret
call
ret
pop
jecxz
sbb
inc
push
sub
adc
pop
mov
pushl
sub
inc
es
mov
pop
push
jp
and
gs
pop
dec
lock
or
sbb
ja
movsb
adc
roll
sti
iret
or
xchg
mov
push
out
into
dec
test
pop
ret
mov
sub
jl
addr16
or
dec
sahf
test
nop
or
jae
pop
cmp
in
subl
rolb
lods
shl
inc
mov
js
sub
jns
mov
imul
xorb
lret
pop
mov
bound
std
pop
mov
jmp
mov
cmp
mov
jno
dec
divb
inc
add
incl
pushf
jno
xchg
ret
xchg
xchg
mov
or
jns
sar
mov
jno
and
adc
inc
ret
or
int
dec
repnz
sbb
push
das
outsb
add
mov
out
mov
and
push
pop
outsl
les
popf
jl
adc
outsb
incl
add
inc
xlat
ret
pusha
nopl
add
adc
add
dec
pushf
cmp
movd
jnp
inc
test
roll
hlt
test
ss
mov
ja
popf
adc
mov
out
dec
shll
imul
call
sub
adc
fnstsw
push
and
mov
mov
and
ljmp
clc
adc
mov
sub
mov
fisttps
pop
mov
or
sbb
xor
or
out
call
mov
insb
scas
mov
cwtl
lods
dec
mov
mov
in
sbb
sbb
stc
ret
and
push
cmp
jle
icebp
add
jns
scas
push
mov
mov
push
rclb
aam
scas
pop
xchg
push
jo
pushf
lods
cmpsb
int
pop
mov
pop
push
ret
mov
cmp
adc
ja
mull
cs
pop
or
pop
faddl
mov
call
mov
gs
push
adc
mov
lea
lods
cmpb
cmp
xor
cmpsb
mov
std
aad
cmp
push
jmp
fs
mov
sti
dec
mov
in
or
sbb
sarl
mov
cwtl
ss
sub
popa
and
pop
mov
mov
fildll
lret
lcall
inc
add
sub
jle
mov
pop
pop
add
cmp
nop
add
lret
pop
stos
mov
ss
cli
movsl
decl
mov
sub
dec
idivb
into
xchg
in
inc
int
out
je
mov
jmp
mov
add
daa
adc
enter
clc
cmp
fistpl
in
dec
test
inc
aad
insb
dec
adc
nop
pop
shl
mov
mov
cmp
popa
sub
in
mov
sub
into
xchg
jecxz
cld
xchg
mov
leave
sbb
hlt
mov
lods
or
inc
incl
mov
or
inc
pop
std
aam
xor
push
or
aam
lea
cmp
test
mov
inc
pop
scas
or
xor
in
mov
popf
addr16
leave
pop
push
jo
add
mov
loop
aam
out
rolb
inc
mov
stos
cli
sub
push
inc
jnp
fadds
test
cmp
or
xchg
dec
sub
mov
adc
movsl
inc
lret
add
pop
outsl
push
xchg
dec
jmp
fadds
pop
push
stos
movsl
mov
leave
pop
push
pop
loop
mov
jo
or
pushw
inc
push
jae
mov
scas
idiv
fnsetpm(287
movhlps
push
add
cli
cmpsb
push
or
jl
hlt
ret
es
mov
xchg
insb
or
cmpsb
xchg
scas
inc
fwait
jmp
imul
mov
loop
xchg
sbb
ds
pusha
hlt
aaa
sbb
mov
aam
mov
and
jbe
testl
clc
mov
leave
mov
xor
scas
icebp
pop
fsub
dec
add
idivl
test
cmpsb
test
lea
outsb
add
out
adc
add
dec
jg
testb
insl
and
notl
arpl
int3
cmp
stos
inc
sbb
pop
mov
pop
in
fistps
rcl
movsb
jne
push
jle
sub
rcrb
sub
mov
lea
push
add
incl
jmp
js
xchg
or
jae
imul
stos
fimull
mov
ss
arpl
inc
js
add
pop
push
mov
mov
mov
mov
lcall
push
hlt
push
lds
rcrb
stos
xlat
jo
rol
insl
adc
nop
clc
fnstsw
bnd
dec
pusha
mov
adc
pop
test
fisttps
mov
sti
mov
ss
sbbl
fcmovnu
mov
xor
xchg
out
enter
out
and
incl
cmp
and
sbb
mov
cs
notb
iret
sub
and
sbb
adc
or
sub
fs
rol
ret
pop
xchg
test
xor
sbb
jmp
call
out
inc
cld
movsl
test
in
mov
enter
imul
or
inc
lret
sbb
pushf
fsubp
push
adc
mov
jne
mov
and
sbb
loopne
jg
and
push
inc
adc
loopne
or
xlat
subb
push
mov
scas
repnz
xchg
mov
add
xchg
add
jge
add
pop
jae
push
and
pop
mov
gs
inc
out
ljmp
mov
and
or
mov
push
stos
mov
cld
ja
mov
sub
sbb
je
pop
std
ret
jae
sub
mov
shrl
add
mov
or
xorb
gs
ja
or
xor
pop
push
mov
mov
mov
enter
pop
loopne
cltd
mov
mov
test
adc
mov
test
sub
pusha
mov
rolb
iret
add
adc
nop
push
pusha
testl
das
imul
les
mov
jmp
js
inc
jae
jg
sar
xor
xchg
xchg
sub
test
fiadds
les
jnp
inc
std
test
in
cmpsl
sub
mov
sub
add
mov
ret
pop
jbe
aaa
test
pop
in
fisttpll
jbe
adc
jge
lods
push
jle
cli
jmp
or
aaa
lds
pushf
mov
aaa
lds
repnz
dec
nop
mov
xor
ljmp
test
dec
push
mov
dec
pusha
pop
dec
cmpl
lcall
xor
xor
ljmp
jnp
or
scas
ror
out
fs
jo
fcompp
pushl
les
cli
xlat
dec
and
adc
repz
inc
or
push
inc
movsb
pop
clc
daa
in
push
dec
push
pop
xchg
mov
enter
arpl
inc
call
pop
dec
mov
adc
mov
fstps
lock
pop
mov
inc
push
mov
movsb
dec
fistpll
push
pushf
aas
push
sub
push
cwtl
mov
dec
fistpll
ret
mov
and
pop
dec
xchg
popf
push
xchg
pop
in
outsl
loop
adc
rcr
cmp
adc
mov
jle
mulb
sub
pop
add
jne
out
xchg
sub
shll
insb
push
test
sti
or
push
mov
and
inc
cmp
push
jno
push
mov
and
xor
or
add
xchg
or
and
inc
sarb
ret
cltd
cmp
lock
lock
mov
pop
sti
sub
sti
mov
mov
ffreep
mov
dec
aam
fildl
add
lret
mov
mov
mov
test
mov
adc
mov
fildl
aaa
add
lcall
clc
dec
fwait
or
out
in
dec
mov
sbb
push
inc
mov
aad
mov
add
jmp
mov
jbe
cld
or
inc
adcl
call
psubsw
jecxz
nop
in
ret
loop,pn
cmpsl
fisttpll
lea
loop
mov
mov
xor
std
test
call
jl
clc
or
loop
pushf
scas
mov
icebp
sub
cmp
jb
rolb
cli
xor
push
ds
xor
or
adcb
lock
mov
das
cld
int
jno
lahf
and
cmp
mov
mov
aam
into
les
lea
daa
mov
in
fcmovnbe
dec
cmp
mov
fs
bswap
push
out
aaa
mov
lret
push
outsl
mov
xchg
loopne
sbb
mov
or
push
jno
mov
inc
stos
push
jb
lods
icebp
lea
outsl
dec
and
jl
pushl
pop
dec
inc
cmp
std
sub
loope
aam
loopne
movsb
mov
cmpsb
lret
loopne
lea
mov
mov
addr16
or
fldenv
shrb
push
inc
jmp
sub
cmp
or
push
rclb
or
mov
mov
je
and
adc
mov
aaa
pop
dec
inc
jmp
inc
mov
pop
xlat
outsl
nop
ds
mov
insb
push
sub
loopne
ficoms
mov
test
xorw
out
fiadds
mov
pop
add
pop
inc
mov
mov
push
aad
lret
sub
insb
das
subb
jge
push
jbe
shlb
push
fistpll
sbb
ja
je
push
lretw
sub
sbb
sub
sub
aad
scas
xchg
cmp
inc
out
xchg
pop
fs
loop
pop
repnz
or
mov
in
push
pop
push
inc
in
jo
addb
hlt
dec
mov
cmpsb
pop
ljmp
pop
in
jbe
lcall
jp
jg
inc
add
outsb
sbb
or
js
adc
jp
add
mov
or
int
fisubrs
out
cmp
ljmp
fsts
jge
fyl2x
mov
lret
shll
pusha
mov
jo
mov
xrelease
cli
fucomi
jle
pop
aad
cmp
push
xchg
mov
mov
mov
xchg
in
mov
adc
stos
mov
push
out
add
mov
test
push
fadd
mov
scas
mov
push
mov
test
dec
mov
ret
xor
sub
mov
push
ret
sbb
es
sub
sub
push
cmpsl
clc
cs
jno
fbstp
pop
lods
xchg
pop
push
pop
inc
in
jmp
cmpb
sbb
jecxz
mov
mov
jno
mov
lahf
or
push
lcall
idiv
adc
out
jle
sarl
adc
pop
pushf
mov
outsb
popa
xchg
dec
dec
add
xlat
shll
cs
add
call
mov
call
inc
pop
movsb
xchg
int3
int3
jg
sar
shrb
pop
xchg
lea
mov
out
pop
shrb
insb
out
out
cmp
sbb
add
and
mov
pop
push
fwait
outsb
pop
push
push
mov
imul
inc
lahf
mov
das
mov
inc
or
nop
shr
or
xor
dec
mov
sbb
nop
dec
or
or
or
test
es
add
ret
stc
pop
cmc
cmp
lods
mov
push
jne
pop
mov
xchg
jmp
dec
jbe
and
jp
test
rolb
aad
lcall
or
lods
and
pop
insb
mov
cmc
dec
xchg
fsts
jo
add
insb
sub
aaa
add
jg
fiadds
xor
fs
js
cmp
mov
in
add
cmpl
in
jns
inc
mov
rcll
add
insl
push
test
pop
push
push
shrb
repnz
inc
adc
push
jg
outsb
jg
pusha
inc
test
sub
mov
mov
je
lcall
ljmp
sub
ret
or
and
or
imul
fidivs
ljmp
loop
ret
std
pop
movsl
iret
pop
lea
or
inc
adcb
mov
mov
adc
sbb
jo
inc
push
push
mov
pop
mov
and
jns
das
jecxz
push
adc
jbe
cmc
repz
das
shlb
sarl
dec
mov
scas
adcb
push
notl
xchg
or
imul
sbb
pop
fbstp
mov
xlat
hlt
dec
inc
add
test
adc
cltd
pushf
testl
add
lahf
and
xor
push
push
int3
pop
xor
sub
sbb
mov
frstor
imul
outsl
insb
jp
shr
push
dec
ds
xchg
pop
sub
xor
popl
adc
arpl
insl
repnz
or
fstpt
xchg
mov
lcall
lcall
jno
shlb
mov
addl
pop
mov
mov
xor
rol
out
ja
das
pop
xor
add
fucomip
push
lods
add
sbb
sbb
bound
sub
sub
out
ja
test
dec
mov
or
outsl
in
fdiv
jg
adc
fistpl
nop
inc
and
mov
fcmovnu
xchg
fisttpl
pop
shrb
fimull
add
mov
cmp
mov
mov
lods
sub
pop
sub
xchg
jmp
pop
xor
repnz
out
mov
in
cmp
lfs
in
cmc
add
add
shll
xlat
jmp
shrb
sub
or
pop
cmp
pop
sbb
and
icebp
mov
into
popf
add
fyl2x
add
jno
dec
test
jbe
repnz
test
nop
push
rol
jmp
das
ret
jp
sbb
sub
pop
pushf
adc
mov
jmp
into
fiadds
in
call
mov
sub
fiaddl
adc
add
outsb
jo
es
push
push
fsubs
xchg
pusha
or
xchg
pop
test
and
movsb
loopne
mov
mov
push
add
dec
fildl
call
dec
mov
cmpb
dec
lahf
mov
lret
or
rorb
mov
dec
xlat
jg
or
mov
push
lcall
dec
inc
or
jo
inc
cs
xlat
iret
mov
cmp
or
adc
lret
xchg
jno
ret
jnp
inc
rcl
stos
movsl
push
out
rcrl
sbb
fistpll
sahf
testb
push
pop
movsl
and
xchg
mov
cmp
inc
cmp
add
jg
test
cmp
mov
and
and
xchg
mov
test
pop
fistl
sub
int3
adc
add
or
fnstsw
ja
inc
pop
sbb
xor
insb
arpl
mov
dec
popl
and
loope
and
cmc
in
rcrl
call
mov
sbb
sbb
jg
jo
adc
pop
add
inc
and
stos
mov
mov
clc
subl
and
xlat
int
cmpsb
and
cltd
pop
andb
sbb
popl
sub
mov
loopne
push
and
mov
lods
and
fdivrl
adc
cld
push
das
cld
out
aas
and
lods
xchg
mov
pop
in
into
xor
test
sbbb
cmp
in
jl
js
pop
loopne
mov
dec
cmp
dec
cli
mov
data16
sbb
jl
cmpsl
add
lretw
inc
jle
arpl
inc
jl
push
mov
pop
out
pop
fiadds
jmp
sbb
push
pop
pop
js
adc
push
imul
jae
fwait
add
mov
dec
pushl
ret
mov
sbb
push
bound
incl
push
sub
xor
adc
xor
jle
sbb
leave
adc
or
fstpt
test
adc
adc
dec
or
stos
sub
frndint
call
jbe
dec
jo
or
sub
cmpl
fists
out
mov
sub
cmp
and
xlat
shr
js
inc
fistl
inc
adc
stos
cs
mov
adc
mov
into
jo
je
lret
fadds
icebp
lea
cltd
std
or
movsl
fucom
repnz
sbb
sub
mov
or
fisubrl
sti
ss
jg
add
mov
push
scas
mov
testb
push
ljmp
mov
adc
stos
push
push
mov
outsl
in
mov
jmp
mov
mov
mov
mov
mov
xchg
mov
fs
jp
add
add
or
jo
push
mov
ret
mov
mov
jmp
arpl
gs
outsl
fistps
and
into
mov
gs
or
jmp
mov
push
aad
sbb
cld
negb
sub
sub
fstpl
in
js
mov
pop
jnp
and
bnd
data16
jmp
mov
sub
int3
inc
outsl
lock
pop
les
push
clc
into
and
cmp
std
sbb
or
inc
sub
sbb
sbbb
jns
js
dec
inc
ret
push
push
and
icebp
or
pop
pop
adc
push
out
scas
adc
lods
cld
pop
lret
add
fs
pop
sbb
mov
pop
inc
mov
in
xor
mov
cmp
mov
jae
fstps
add
and
mov
ja
jmp
dec
push
incl
jns
push
and
xchg
jbe
cs
mov
adc
or
decl
mov
mov
movsl
shlb
fcoml
xor
mov
jo
adc
adc
imulb
xchg
or
inc
inc
stc
mov
ss
inc
js
adc
call
inc
mov
lock
les
test
sbb
ljmp
sbb
int
je
cld
push
gs
jnp
negb
sub
mov
jmp
test
and
cmpsl
mov
sbb
lret
stos
push
or
arpl
jo
and
adc
push
pop
ret
mov
xor
cmp
xor
adc
xor
push
or
mov
xchg
dec
ljmp
sbb
das
mov
add
xchg
adc
popf
mov
inc
xchg
outsb
pop
sbb
test
pop
mov
stc
les
lcall
jge
cmp
pop
test
and
xor
xchg
les
push
xlat
int
in
es
adc
mov
pop
dec
adc
pop
dec
cmp
add
pushl
std
inc
jno
jmp
mov
incb
mov
push
sub
inc
cmp
stos
mov
nop
and
mov
insl
xor
lock
addr16
loopw
jb
cmp
int3
repnz
aad
mov
ret
mov
inc
sub
cmp
in
ja
in
adc
jbe
addr16
dec
sbb
ret
lret
pop
sub
lds
js
xchg
or
out
sbb
mov
lock
jecxz
mov
pop
sbb
sub
out
incl
fmul
ret
adc
xchg
cmp
aam
scas
pusha
sub
mov
mov
sahf
sbb
pop
mov
aad
aad
mov
jge
sub
jmp
shlb
dec
addl
jmp
outsl
xchg
mov
lea
inc
adc
adc
insb
cld
cmp
cmp
mov
popf
mov
sub
sbb
ja
pop
lret
lods
arpl
scas
mov
dec
cmp
xor
add
fucomi
mov
mov
mov
adc
push
sbb
mov
lahf
cltd
test
jno
sarb
inc
loop
mov
mov
pop
ficoms
xchg
into
jg
out
repnz
int
adc
rol
es
inc
sbb
imul
sahf
nop
repz
clc
jg
pushf
arpl
nop
aad
push
fidivs
scas
mov
mov
jg
or
rcl
cmc
add
and
sarb
adc
mov
arpl
cld
xchg
pop
shl
bound
add
aad
or
mov
and
cmp
test
mov
pushf
cmp
test
adc
les
mov
ljmp
xor
or
cmpsl
sub
fsubs
les
jbe
icebp
push
shlb
repnz
jg
jg
push
insl
dec
push
sub
or
clc
inc
je
out
inc
xchg
lcall
out
or
in
shrb
shlw
pop
popa
pop
sub
loop
or
hlt
jae
mov
xor
sub
jne
adc
call
hlt
xor
jle
aas
fidivrs
xorb
push
cltd
es
lea
mov
fnstenv
dec
xor
jbe
sti
test
xchg
and
inc
dec
jno
leave
cmc
shrl
and
data16
push
xor
mov
add
hlt
ja
outsl
cmp
in
jnp
push
aas
mov
inc
jecxz
scas
add
mov
cmp
enter
mov
xor
sbb
push
jae
add
adc
cmp
lock
cmpl
pop
ret
mov
aad
imul
leave
xchg
fldl
lcall
mov
imul
jmp
je
aaa
xor
sbb
jg
push
shll
data16
in
addl
add
stc
sahf
and
jp
jmp
lock
cmpsl
add
xchg
jns
rcrb
add
imul
fildll
xchg
call
pop
daa
pop
dec
ret
loope
fsubr
loopne
xchg
xchg
pusha
aas
sub
addb
fbld
or
push
lock
xlat
sub
outsb
int
cmp
loope
push
test
sbb
mov
adc
out
or
out
pop
arpl
sti
push
sub
out
mov
mov
fwait
jmp
or
jmp
and
aaa
outsb
mov
xchg
sbb
or
sub
jmp
repz
dec
shrb
inc
and
loopne
ja
jne
dec
pop
insl
orl
fcom
push
push
test
push
xchg
pushl
sbb
icebp
out
arpl
push
pop
or
xor
in
xchg
add
notl
arpl
cmpb
add
dec
nop
mov
fs
aad
fstl
enter
mov
push
aam
sub
jnp
mov
mov
add
leave
out
xor
std
inc
jg
aad
lds
or
mov
aam
sbb
push
lods
loopne
scas
sub
scas
outsb
test
lods
xchg
cmpsl
clc
rolb
jl
push
mov
mov
out
test
loop
jo
loope
lock
arpl
movsl
sbb
in
mov
mov
add
insl
jne
cld
jge
jmp
imul
lcall
movsb
add
sahf
ret
cmp
or
cmp
pop
fildll
repz
or
pushf
ss
adc
lahf
das
dec
aad
pop
cmpsl
das
rcrb
ss
adc
lret
scas
and
sub
lret
lea
in
cmp
sbb
add
jg
int
dec
out
mov
cs
std
cmp
lea
cld
movups
test
pop
pop
pop
aas
je
inc
addr16
add
mov
out
lock
xor
push
loope
sbb
dec
add
push
pop
cld
sar
mov
add
inc
jno
add
or
jb
fists
or
lods
jo
les
cwtl
loope
dec
je
mov
mov
dec
jle
xchg
ret
lods
sbb
mov
adc
rolb
push
std
xchg
pop
lcall
pop
add
mov
adc
in
inc
jg
cli
mov
je
jp
mov
xlat
dec
add
jecxz
icebp
or
push
jmp
dec
push
cmpsb
das
push
cmp
sub
and
adc
je
stos
sti
shll
jle
cli
fldl
cmp
fsubrl
pusha
fdivp
xchg
ja
stos
repz
mov
cwtl
fists
je
inc
jo
les
cmp
jmp
lods
mov
jae
stc
xchg
ret
mov
je
in
pop
sti
inc
dec
dec
shl
aaa
out
movsl
inc
jno
mov
push
sub
pop
scas
jb
pop
xchg
lcall
dec
dec
fildl
mov
xor
mov
testl
sub
sbbl
frstor
movsl
in
pop
push
cwtl
mov
and
cmp
sbb
mov
in
inc
mov
add
outsl
cmp
rorb
shlb
adc
adc
loop
lea
add
pop
and
push
dec
clc
jg
jmp
mov
cmp
test
and
jo
pop
jle
inc
aad
xorl
mov
pop
sub
mov
sub
test
cs
or
and
add
aaa
pop
xor
jmp
mov
cs
push
pop
test
in
jbe
mov
mov
xor
nop
pop
lock
adc
sbb
dec
insl
push
leave
call
sbb
fdivr
ficoml
pop
ja
adc
fcomps
adc
sub
insl
and
idivl
mov
enter
lock
cmp
lock
jo
and
fs
pop
sarl
push
cld
inc
inc
xor
imul
gs
in
fdivl
sbb
mov
and
push
and
xchg
xlat
outsl
mov
repnz
mov
pop
testb
and
sbb
jno
ljmp
jns
dec
pop
pusha
test
or
cmpsl
inc
fbld
shll
movsb
xchg
or
shll
sub
inc
rcrb
mov
pop
adc
incl
sbb
adc
cli
sbb
rclb
jns
add
aad
jp
cmp
in
lcall
andl
test
cld
gs
mov
add
xchg
in
les
push
aas
mov
sbb
or
in
stos
xorl
insl
jge
xor
jg
jns
push
inc
inc
cmpl
cmpsl
dec
xchg
cs
data16
mov
add
orl
mov
pop
xchg
pop
push
fsubs
stos
mov
mov
pop
adc
cmc
pop
fidivrs
imul
push
test
shr
dec
cmp
ja
jo
sbb
push
dec
jno
ret
shl
ljmp
mov
push
push
ret
incb
jge
movsl
repnz
lret
frstor
pop
cmp
incl
in
sub
and
in
jge
mov
fldl
ja
fcmovbe
enter
jne
xlat
mov
mov
ror
or
test
incl
lods
ja
xchg
and
push
push
mov
adc
dec
adc
push
decl
fistl
sub
or
lret
sbb
inc
mov
imul
sub
xchg
loop
push
test
fs
dec
sbb
fidivrs
lahf
push
adc
aad
mov
xchg
or
push
lahf
sub
xlat
out
xchg
orl
xchg
fsubs
clc
das
lock
adc
gs
mov
push
or
loop
sbb
aas
aad
bound
inc
and
or
scas
cmp
jp
push
je
xor
cwtl
stos
ss
push
mov
cmc
testb
and
int3
add
mov
lods
lods
loope
sub
mov
and
mov
incl
cmp
dec
push
insb
sbb
jmp
push
adcl
inc
sbb
mov
or
test
xchg
jbe
imul
xchg
lock
pop
xor
xchg
adcb
push
jp
nop
mov
jo
mov
mov
enter
sbb
inc
dec
xor
pop
sahf
mov
push
daa
dec
inc
test
fbstp
sbb
in
sbb
outsl
in
sbb
or
clc
rcll
inc
addb
pop
sbb
jbe
jno
enter
inc
xchg
jo
adc
clc
dec
xlat
jg
sar
add
inc
sar
jnp
in
sti
in
pop
xor
test
sub
js
sbb
add
fisubrs
inc
divb
divb
cmp
jns
adc
icebp
popf
jne
aaa
and
or
cld
ret
dec
cmp
sbb
enter
push
aad
mov
lcall
ficoml
sbb
sbb
dec
outsl
add
mov
and
leave
imul
mov
sub
pop
sbb
or
addb
pcmpeqb
add
cli
lock
jno
xorl
mov
mov
jmp
mov
mov
mov
jecxz,pt
js
out
add
mov
dec
xchg
imul
fsub
int3
lcall
xchg
push
fidivs
mov
push
adc
adc
divb
adc
cld
xchg
stc
adc
add
fstps
mov
jge
outsb
xchg
and
push
mov
pop
and
and
jp
cmpsl
mov
sbb
jmp
inc
sbb
lods
mov
jmp
cmp
dec
rcl
lock
cmp
sbb
std
mov
test
add
repz
sub
gs
sti
inc
shrb
pushf
fisubs
outsl
inc
insb
cmp
test
jbe
pop
add
jmp
mov
pop
mov
incl
rcll
xor
popa
fwait
loope
stos
jg
jo
jo
loop
jg
inc
out
movsl
inc
cwtl
adc
testl
xchg
xor
je
std
and
addr16
push
mov
pop
shl
mov
sub
shll
sahf
js
mov
xchg
add
jl
mov
dec
sbb
call
mov
and
roll
mov
icebp
xor
sub
cld
ret
fisubrl
dec
mov
nop
sti
xor
out
decl
push
jo
pop
dec
out
ss
xchg
xor
popa
add
test
lret
dec
and
pop
fldcw
fdivs
jbe
sti
iret
sti
in
inc
sub
or
daa
inc
imul
dec
inc
or
aam
imul
mov
std
outsb
and
mov
seto
cltd
push
cld
insl
mov
pop
add
repz
ja
or
pop
insl
aam
sti
pop
scas
sub
fmuls
xor
sbbb
pop
rolb
xor
pushl
jl
add
fildl
loop
mov
dec
cmpsl
and
insb
pop
push
jecxz
mov
in
pop
or
sbb
enter
aas
xor
jecxz
or
push
outsl
ffreep
push
sbb
test
adc
inc
mov
fcomi
and
test
test
adcb
mov
les
out
ficoml
out
scas
adc
cld
out
jae
int3
and
xchg
ljmp
jp
outsl
in
shl
lcall
xchg
std
cli
or
arpl
xor
push
lea
cmp
das
stos
ret
dec
rcrb
hlt
dec
lods
xor
testb
insl
rorl
sti
dec
cmp
cmp
sahf
push
push
mov
jo
inc
mov
push
dec
inc
cmp
roll
mov
movsb
dec
add
test
or
pop
push
jae
adc
je
pop
repnz
sub
std
sbb
and
test
fcomps
loope
iret
push
jno
pusha
stc
mov
in
inc
insb
ja
cmp
mov
call
iret
lds
cltd
push
lea
sbb
pop
pop
xor
sub
mov
mov
loopne
mov
pop
push
jg
xchg
mov
fs
je
inc
scas
mov
inc
cmp
fsubl
sahf
test
sub
jne
lds
cmp
pop
ret
out
cmpsl
ss
stos
icebp
outsb
sub
push
xchg
sbb
xchg
hlt
fildll
cmp
shrb
decl
and
subl
jae
loop
inc
rorb
mov
dec
fistpll
inc
inc
pop
push
pop
js
cwtl
jecxz
cmp
subl
lds
inc
flds
push
xor
mov
sbb
xor
lods
mov
xor
dec
clc
and
and
or
pusha
insb
cmp
notb
insl
adc
fcmovnu
subb
fldl
and
stc
mov
pop
fcom
scas
adc
dec
adc
mov
out
and
xor
in
pop
enter
cmp
dec
int
fucomip
cmpsl
les
xor
inc
xor
dec
insl
inc
insl
aad
mull
add
sub
cmp
pop
push
inc
loopne
std
sub
inc
int
mov
out
sbb
imul
push
hlt
popf
mov
push
push
test
sub
je
fnstsw
hlt
inc
adc
pop
sbb
xor
push
sub
mov
int
inc
in
pop
ja
insb
xchg
adc
test
push
mov
jecxz
xchg
popf
mov
cmpsb
xchg
test
ret
ljmp
outsb
test
sbb
jno
cld
inc
sub
scas
imulb
in
fwait
sti
js
and
jg
addr16
mov
sbb
int3
insb
mov
add
push
negb
rolb
pop
out
dec
xchg
fistpll
lock
lods
jmp
addl
insl
mov
or
ret
adc
mov
mov
subb
leave
mov
push
pop
ja
rorl
xchg
xchg
mov
jne
pop
lahf
lods
mov
das
inc
sti
je
push
sbb
andb
ficoms
and
inc
sbb
adc
lcall
xor
cld
mov
lea
mov
sahf
sbb
aad
mov
les
adc
add
fwait
cmp
ret
xor
aaa
ljmp
daa
xchg
xor
jb
aas
add
sbb
lock
xchg
sti
lahf
popa
push
cmp
sbb
fstps
outsl
push
and
lds
sbb
loopne
mov
ljmp
or
daa
mov
and
clc
jo
mov
mov
rcrl
push
and
pop
outsb
stos
mov
xchg
mov
popa
adc
outsl
icebp
or
mov
inc
push
ret
pop
clc
in
add
and
in
adc
mov
fsubp
inc
mov
aad
pop
lret
es
test
mov
out
or
es
pushw
scas
clc
fcom
orb
outsw
fwait
and
jl
add
mov
fwait
loop
rcrb
fimuls
xchg
arpl
enter
jle
adcb
clc
cmp
xor
outsl
shrb
ss
and
sub
adc
rclb
loop
pop
scas
jmp
and
pop
enter
or
pusha
stos
mov
xor
jge
fstpt
stos
aam
push
cmp
mov
xchg
or
add
das
in
inc
and
mov
mov
ja
mov
int3
pop
mull
test
mulb
pushl
shll
add
mov
and
jge
stos
mov
loope
mov
or
int
push
and
mov
cmp
lahf
adc
cmpb
xchg
jb
sbb
xchg
add
test
sub
mov
push
push
lods
sub
imul
pop
xchg
and
cmc
add
xor
repz
shll
sti
out
mov
adc
add
mov
jno
jle
sbb
out
inc
inc
aam
sahf
arpl
aam
mov
mov
std
sbb
cwtl
andl
xor
jb
test
xor
jmp
cwtl
int
arpl
add
adc
push
jo
int3
sbb
sub
or
push
hlt
mov
test
js
addb
push
cmc
xor
stos
mov
xchg
mov
push
mov
jg
or
or
ljmp
stos
stos
adc
inc
xchg
add
cmp
ret
mov
jne
rorb
mov
fnstsw
inc
andl
int
mov
test
loop
rolb
xor
xchg
loopne
push
outsl
loopne
xor
fists
sbb
filds
mov
lahf
pushw
dec
push
mov
icebp
aas
stos
push
inc
mov
pop
xchg
sbb
mov
sub
pop
je
or
nop
mov
sbb
bound
mov
jne
xor
inc
cmp
mov
je
xchg
jmp
lock
xchg
movsb
and
push
loope
cmpsl
xor
icebp
les
aaa
enter
call
je
add
inc
pusha
rcl
inc
out
mov
ret
addb
jl
test
pop
arpl
jle
adc
push
inc
lds
inc
and
cli
ljmp
jg
sub
das
int3
xlat
aam
xchg
in
mov
mov
jns
pop
in
lret
hlt
fildll
hlt
cmp
es
fsts
mov
inc
rcr
lock
fucomip
or
xor
call
mov
mov
dec
loopne
inc
push
jg
pusha
xchg
push
js
fnsave
pushf
dec
mov
mov
inc
mov
outsl
add
pop
pop
mov
or
mov
jle
push
xchg
push
add
jecxz
cmp
xlat
clc
out
sub
stos
movsl
adc
mov
cs
ss
mov
cmp
adc
or
into
ljmp
das
push
aaa
mov
daa
pop
jmp
sbb
pop
dec
sub
cs
fnsaves
loopne
sub
jnp
sub
cmp
jae
in
loop
push
pusha
mov
cmp
inc
testl
in
push
insb
or
aaa
push
or
mov
dec
sar
lcall
adc
mov
cld
stos
fdiv
and
add
sub
and
push
mov
xor
subl
cltd
shlb
push
push
inc
stos
adcb
pop
and
mov
movsl
pop
xor
and
and
adc
cmp
adc
inc
adc
mov
outsl
rclb
fildl
add
dec
rorb
ljmp
inc
stc
pop
rcl
ljmp
call
pop
das
or
pop
cs
nop
inc
pop
subb
movd
rolb
repz
sbb
fs
pusha
push
test
add
or
xchg
cli
icebp
adc
adc
inc
xchg
mov
sbb
in
pushf
insl
out
add
lret
add
jns
dec
push
mov
outsl
add
pop
hlt
fcmovnbe
sbb
pusha
mov
pop
dec
push
pop
inc
je
addl
sub
xor
sub
pop
lret
out
popf
or
fbstp
pop
mov
sbb
testl
shlb
add
outsl
sbb
cwtl
and
cmp
add
sub
and
inc
xchg
jb
das
ljmp
pop
or
outsb
test
icebp
mov
or
lret
mov
or
xchg
call
xor
int3
or
sbb
jns
cmp
out
loopne
jae
sub
pop
push
xchg
mov
inc
movsb
jns
mov
bound
ljmp
loopne
xor
inc
adc
add
add
cltd
in
fsubrs
mov
dec
push
add
aas
inc
cmpsl
rorl
hlt
xchg
push
ds
stos
mov
addr16
mov
test
cli
adc
dec
lock
mov
insb
pop
mov
repz
shl
xor
adc
idiv
xlat
adc
jae
and
mov
push
or
repz
cli
add
xor
imul
xor
ljmp
outsl
lcall
xor
les
adc
mov
jp
pop
or
pop
gs
fisubs
inc
ljmp
sbb
mov
enter
lcall
push
inc
pop
jno
dec
push
in
cmp
aam
std
push
inc
das
cmp
movsl
mov
jne
popa
les
inc
lret
clc
push
mov
sub
nop
imul
fdivl
add
lock
or
iret
ja
int3
add
pop
pop
sbb
adc
xor
mulb
decl
pop
adcl
pop
inc
or
jne
rorb
mov
nop
cmpsl
sbb
frstor
in
bound
sarb
xchg
out
loope
cmpsb
lods
xlat
xor
cli
mov
pop
orb
lahf
mov
lea
jnp
call
icebp
stc
mov
outsl
add
and
dec
shlb
popf
fistps
imul
outsl
cmp
and
repnz
add
sarb
xchg
jp
xchg
das
fldl
aam
jns
ret
enter
mov
mov
mov
pop
pop
clc
dec
pop
or
xor
cmc
stos
aas
cmpsb
cmpsb
add
sbbb
inc
rolb
lods
test
mov
setb
js
pop
jb
pop
and
pop
mov
jbe
mov
lret
cmp
xchg
daa
ret
or
les
inc
sbb
sbb
add
sub
dec
xor
xchg
lcall
mov
cmp
jl
mov
dec
jbe
std
test
inc
jo
pop
inc
xchg
or
fisubs
shll
or
cmp
sbb
xor
jno
cmp
mov
adc
sub
mov
add
and
stos
addr16
in
xor
add
out
in
and
xor
and
data16
inc
nop
sbb
dec
jl
sub
adc
xor
out
dec
sub
cld
sti
cmp
sub
mov
lock
outsl
pop
xchg
aas
add
iret
mov
dec
mov
jg
mov
incl
cmp
lock
out
filds
lret
shlb
mov
pop
incb
mov
in
inc
sbb
test
loop
call
mov
adc
jecxz
jbe
ret
inc
mov
xchg
call
push
inc
pop
js
sar
mov
jb
sub
pop
gs
mov
push
jmp
movb
xchg
out
insb
arpl
push
jnp
rcrb
lock
aad
inc
fsubs
andb
in
ljmp
xchg
push
mov
inc
sti
js
mov
and
adc
lea
cwtl
fstpt
shrb
test
fwait
and
loop
push
push
addb
jne
push
and
inc
clc
sub
sbb
jnp
inc
cmp
mov
mov
xor
mov
and
dec
loope
pop
pop
push
aam
into
sub
jne
push
add
pop
adc
gs
inc
or
mov
add
dec
pop
cli
jg
lahf
test
pop
jp
cmpsb
outsb
fs
xor
mov
add
push
hlt
mov
jmp
bound
shlb
pop
dec
or
cmp
enter
xor
sub
and
call
xchg
cld
cmp
fstpt
or
clc
ret
icebp
add
mov
xchg
les
xchg
je
xchg
jb
push
adc
std
sub
jp
pop
pop
lods
add
adc
lea
push
push
aam
push
cmc
push
xor
mov
scas
or
mov
in
lcall
jmp
and
mov
and
sub
mov
jl
push
cwtl
iret
test
jbe
adc
mov
and
int3
clc
jg
inc
les
cmp
xor
xchg
mov
data16
inc
test
sbb
fs
insb
xchg
sub
orb
clc
scas
scas
jp
scas
pop
incl
stos
mov
arpl
xchg
add
mov
stc
cmp
fs
push
loopne
push
mov
dec
xchg
outsl
and
movsb
jle
pop
mov
add
outsb
sub
aam
es
cmp
stos
or
icebp
in
out
aam
jbe
testw
jns
inc
jb
or
loopne
xchg
jb
out
dec
hlt
push
add
cmp
dec
fs
sub
push
and
pop
test
inc
mov
inc
call
sub
adc
sub
decb
xorl
inc
repz
xchg
mov
jmp
lods
rcl
pop
mov
rol
lods
add
in
fistpl
mov
or
pop
xor
sub
sub
inc
cmpsl
stos
pop
sub
clc
sbb
inc
jmp
in
testl
cs
push
les
fs
cli
jg
add
gs
xchg
jecxz
pop
outsl
xchg
mov
push
fwait
jmp
call
outsl
imul
sbb
xchg
pop
sbb
adc
imul
sub
das
cld
jg
jns
stos
decl
mov
adc
test
fcoml
and
or
sub
push
mov
in
idivl
lock
loope
mov
pop
roll
inc
sub
xchg
dec
lret
and
fwait
mov
jae
ret
imull
mov
dec
xchg
sub
cltd
xlat
test
je
push
mov
subl
xchg
xchg
adc
outsl
push
call
xor
add
popa
insb
insb
sbb
inc
and
das
lds
lds
or
xor
ljmp
mov
pop
call
addb
pop
fisubs
repz
and
mov
and
enter
rcrb
insl
stos
hlt
scas
xchg
xchg
mov
mov
iret
adc
mov
outsl
std
fs
and
mov
outsb
in
scas
fisttpl
add
mov
pop
imul
ljmp
into
add
xchg
repnz
xchg
sbb
jno
stos
call
or
fstpl
xor
inc
shrl
lock
push
and
jmp
push
mov
sbb
fnstcw
xchg
xor
push
add
jg
je
pop
adc
and
jle
and
xor
mov
adc
cmpl
mov
fdivr
mov
xchg
or
xlat
bound
mov
in
cmc
and
mov
fs
mov
lods
mov
inc
jecxz
mov
daa
fnsave
mov
pop
idivb
mov
mov
inc
adc
push
sub
and
mov
and
cmp
sar
jecxz
adc
stc
mov
icebp
sbb
push
ds
iret
jmp
mov
dec
adc
sbb
pushf
test
rcl
outsb
cld
sub
mov
shlb
insl
mov
sar
int
mov
stos
stos
imul
jne
lret
jo
cmp
cs
mov
or
pop
icebp
sbb
push
mov
pop
and
or
rcll
decb
pop
into
and
mov
sar
sub
dec
adc
add
jno
scas
repz
inc
nop
and
rep
js
dec
sub
xor
shufps
cmc
xchg
mov
cs
mov
clc
or
xor
testb
mov
outsl
pop
nop
mov
adc
dec
shll
jl
ss
add
jmp
jbe
js
xlat
push
fnstenv
xchg
ja
loope
in
addl
shrb
popf
shl
xor
loopne,pn
lcall
mov
outsb
fsub
mov
clc
ret
movsb
fbstp
dec
stos
mov
lcall
nop
mov
adc
bnd
adcb
cld
movsl
ja
xchg
les
xor
adc
xchg
add
out
inc
mov
inc
lahf
mov
and
into
or
fisttpl
inc
lods
cmp
test
movsb
das
mov
add
imul
pushl
lods
adc
xchg
jno
or
ret
enter
cmpsl
xor
fsubs
mov
decb
test
loop
rcll
out
dec
mov
sbb
lcall
frstor
stc
scas
push
ds
insb
jb
cmp
mov
fucomip
fiadds
mov
xchg
cmpsb
jg
sbb
inc
iret
jne
adc
pop
arpl
xor
mov
icebp
and
scas
test
jge
sarb
xor
or
mov
sbb
push
mov
and
bound
dec
xor
mov
cmc
mov
in
and
pop
jne
jne
arpl
ficompl
rclb
adc
inc
push
cmp
adc
jno
sub
insb
out
xor
je
mov
push
divb
xchg
mov
outsl
sbb
sub
dec
pop
dec
xchg
sbb
jnp
xchg
mov
mov
andb
shll
push
jmp
je
and
push
movsl
ss
insl
icebp
or
inc
sahf
inc
rcr
adc
gs
outsl
fwait
or
rorl
mov
cli
cmpsb
push
sub
push
rolb
sub
push
lods
pop
sbb
cli
push
ss
icebp
out
lock
imul
lcall
fwait
jmp
stc
pop
pop
aad
jo
stos
shll
aaa
adc
imul
test
jle
das
mov
jl
xchg
sbb
pop
adcb
rol
mull
aas
jmp
sub
mov
enter
bound
aaa
je
cmpsb
push
and
je
xchg
mov
call
sbb
imul
test
jne
xlat
jbe
mov
stos
daa
shlb
xor
inc
sbb
sub
and
jmp
iret
pop
cld
push
push
mov
scas
ljmp
in
hlt
outsl
das
inc
pop
push
fcmovnbe
jmp
adc
hlt
push
sub
mov
dec
add
and
int3
test
jmp
lret
shll
mov
in
in
cmpsl
rcrl
mov
hlt
push
hlt
cmpsb
or
fnsave
outsb
inc
loop
fcom
or
dec
or
xlat
dec
flds
mov
out
nop
ja
dec
lods
lret
iret
jbe
xor
inc
xchg
push
xchg
push
adc
jne
lods
inc
xchg
rorl
push
syscall
addb
sbb
sub
jmp
daa
mov
pusha
sbb
ljmp
or
mov
les
xchg
push
dec
fists
cmp
repz
xchg
and
cmc
addr16
dec
fstps
mov
les
into
xor
dec
or
mov
rcrl
push
pusha
xor
mov
adc
jecxz
mov
mov
fs
gs
addb
mov
add
or
decl
in
std
out
ja
clc
aam
adc
cmp
jle
inc
add
mov
add
add
adc
sbb
mov
cmc
lahf
xlat
jg
mov
bsf
jmp
or
std
orb
daa
and
sub
cmpsl
inc
call
xor
dec
xchg
push
shll
clc
idivb
push
sbb
cs
cmpsl
fmull
mov
imul
and
push
lea
je
les
sub
sbb
call
ljmp
inc
dec
stos
and
bound
and
inc
and
add
hlt
dec
inc
iret
sbb
sub
leave
ljmp
sbb
inc
out
push
popa
nop
ss
inc
call
ja
je
dec
or
adc
fcoms
ljmp
mov
xchg
insb
aaa
cld
testb
xchg
cmpsl
aad
aam
nop
add
sbb
push
dec
adc
insl
jge
out
sub
into
das
fisubrl
push
xchg
inc
aas
repnz
leave
mov
inc
dec
dec
dec
pmulhuw
pop
out
sbb
sbb
aam
mov
or
or
loop
xor
shlb
mov
or
xor
mov
pusha
lret
ds
mov
in
lds
int3
or
fdivl
or
shl
popf
pop
push
adc
inc
sbb
dec
inc
aaa
outsl
add
fistps
xchg
sti
loopne
xchg
pop
loope
pop
pop
js
fnstsw
clc
and
xor
mov
xor
clc
push
push
mov
dec
hlt
in
test
stos
pop
jae
jo
loop
mov
inc
push
clc
mov
inc
cld
dec
cmc
leave
mov
xchg
jl
mov
cmp
adc
adc
aad
test
add
mov
adc
arpl
movl
testl
js
stos
sbb
leave
test
jno
mov
xor
inc
insl
xor
inc
cmpsl
loope
jmp
shll
cmp
push
sub
sub
out
je
lods
dec
pop
mov
xchg
loop
cltd
rcrl
loop
xchg
dec
ss
addr16
dec
stos
rol
lds
movsl
jg
cs
nop
pop
and
insl
insb
pop
aam
add
mov
xor
push
adc
outsl
mov
stos
dec
ffreep
push
add
stos
and
ljmp
lods
and
mov
popa
movsb
rclb
in
sub
cld
lcall
faddl
std
stos
inc
inc
loopne
xchg
aad
movsl
lret
shrb
fnsave
mov
lock
rep
outsl
aaa
js
mov
push
ds
jle
cs
call
xchg
mov
fidivrl
jle
xchg
or
adc
lcall
adcl
frstor
sbb
nop
jle
and
mov
or
mov
jle
xchg
rcll
lcall
push
mov
add
aad
scas
out
mov
jmp
sti
rcrl
mul
sub
xor
ficompl
xchg
sub
rcrb
xor
decl
jo
push
out
aas
stc
out
shlb
dec
inc
push
nop
and
sbb
xchg
jmp
xlat
mov
adc
inc
inc
mov
hlt
and
mov
loopne
add
sahf
dec
jecxz
dec
movsb
adc
lret
jo
sbb
jp
leave
nop
sar
mov
mov
mov
cmpsb
mov
test
jne
addr16
cwtl
xor
gs
xor
pop
adc
sbb
push
and
shrl
xchg
push
mov
sbb
rcl
lret
ljmp
inc
xchg
popf
jmp
leave
xor
add
add
xchg
test
loop
nop
and
jl
hlt
aaa
stos
sti
push
mov
or
inc
xor
dec
jg
stos
repnz
pop
mov
sarl
lock
adc
sbb
fidivrs
mov
outsl
push
push
mov
addl
jno
sub
scas
rorb
jno
xor
or
je
xor
jo
je
inc
sub
jno
les
jbe
mov
xchg
dec
xor
add
je
cmp
in
inc
aad
jl
adc
mov
cmp
popf
mov
scas
mov
pop
mov
cld
in
sbb
mov
mov
fistps
and
sub
push
jae
std
sti
pop
ds
shll
rolb
aas
movsl
sarl
pop
push
lcall
fwait
jecxz
dec
pop
inc
insl
mov
stos
arpl
mov
incl
addl
xchg
ss
adc
pop
lods
mov
outsb
das
push
test
cltd
js
sub
lds
and
dec
stos
incb
cmc
inc
jge
add
pop
movl
sub
cmp
inc
negb
dec
jo
sub
out
cmp
sbb
adc
js
or
mov
push
insb
cmp
pop
xchg
sbb
dec
adc
sbb
sahf
mov
jbe
and
xlat
aam
or
xor
cmpl
bound
fcoml
xchg
mov
insb
mov
cld
or
ret
pop
jp
jne
jo
fs
push
in
adc
mov
jo
in
in
xchg
pusha
test
or
mov
dec
adc
inc
rcrb
jg
lock
jne
push
sub
outsb
nop
loope
xor
test
jnp
subb
push
std
ljmp
add
mov
out
sbb
pop
inc
and
push
inc
pop
ljmp
jbe
push
cmp
or
mov
mov
mov
mov
jg
pop
jo
ja
jl
adc
adc
push
inc
stos
mov
mov
ja
push
repz
dec
sub
or
sti
mov
and
nop
jmp
push
push
ja
and
outsb
je
jg
fisttpll
test
negb
test
cs
ret
or
push
aam
jg
loop
adc
sub
xchg
push
push
adc
imul
test
push
outsl
pop
js
push
mov
adc
dec
imul
xchg
hlt
inc
push
into
gs
sbb
aad
int3
daa
xchg
mov
jmp
into
mov
add
lods
dec
shll
test
sbb
pop
fwait
nop
stos
in
lock
movsb
sbb
pop
dec
or
ss
cmp
mov
jge
hlt
rolb
inc
xbegin
mov
sbb
add
and
ret
lods
pop
cmc
mov
xorl
xchg
xor
ror
rorl
std
mov
push
bound
inc
pusha
stos
movsb
mov
add
fcoml
cmp
inc
push
jecxz
mov
mov
xor
push
aad
pop
adc
aad
das
xor
push
cli
lods
pop
scas
adc
inc
insb
mov
push
xchg
lea
les
cs
push
mov
iret
in
pop
mov
ljmp
movsl
loopne
mov
adc
scas
fstps
pop
ja
std
lret
mov
dec
mov
lcall
lods
xor
jne
mov
es
loope
sbb
xchg
sti
cmpb
mov
adc
dec
sub
lea
inc
or
adc
test
dec
sbb
jo
dec
jmp
scas
ds
pop
ds
ljmp
adc
popf
mov
scas
add
mov
addb
pop
xlat
inc
sti
fistpll
dec
sub
jge
sbb
lods
out
mov
mov
and
mov
jmp
inc
xor
mov
inc
out
sbb
sub
in
add
lret
fnstsw
hlt
call
mov
and
aaa
jns
mov
lcall
inc
xor
or
pop
mov
add
cmc
fildl
dec
or
sub
outsb
push
int
or
movsb
mov
cmp
jle
adc
es
arpl
jp
push
out
xchg
mov
nop
pop
adc
sub
pop
jmp
mov
cld
sbb
dec
adc
mov
pop
inc
xor
call
jge
dec
xor
icebp
jg
xchg
gs
fiaddl
or
inc
cmp
imul
adc
fstl
shll
pusha
xchg
push
sbb
hlt
pop
inc
add
notb
orl
call
adc
fwait
mov
inc
ffree
sub
mov
outsl
inc
cmpl
cmc
into
outsb
push
mov
jmp
cmp
mov
or
popf
cmp
xchg
cli
inc
dec
aaa
and
mov
mov
and
adc
rclb
pop
mov
sti
push
cmpsb
imul
push
stos
outsb
jp
dec
les
lock
jl
nop
mov
sbb
in
les
add
pop
fsubp
pop
stos
aam
xor
jmp
sbb
sub
es
ljmp
push
insb
add
pop
lock
sub
push
mov
adc
mov
call
fnsave
pop
push
cwtl
das
sub
test
out
pop
inc
pop
fwait
incb
xor
xchg
nop
daa
adc
dec
fs
cmpsl
add
sbb
mov
mov
popa
stc
out
mov
outsl
imul
jmp
lds
push
hlt
dec
xchg
push
adcb
mov
rorb
cmpb
dec
imul
data16
lds
les
fisubrl
mov
das
mov
aas
sar
js
adc
rorb
das
mov
xor
mov
stc
aas
or
popa
sti
call
cmp
dec
mov
mov
dec
pop
lret
adc
daa
adcb
es
pop
js
push
mov
insl
sahf
mov
sub
scas
adc
cwtl
and
xchg
testl
leave
outsb
jg
shrl
scas
dec
pop
sbb
sub
mov
mov
mov
or
int3
mov
lcall
xor
scas
push
jle
mov
xchg
daa
cld
adc
sbbl
pop
jecxz
lcall
and
push
xchg
stc
sub
dec
stos
js
inc
iret
rcl
decl
dec
test
mov
jl
jbe
mov
or
sbb
dec
mov
outsl
xor
pop
push
lcall
cs
call
aad
or
std
dec
jmp
ret
lock
ret
aaa
or
ljmp
rclb
int
stc
mov
mov
add
loopne
add
push
or
hlt
scas
shl
xchg
int3
lods
push
xchg
ljmp
sbb
mov
rorb
insl
ljmp
jo
adc
dec
jb
sbb
fs
jl
out
jo
sti
lcall
mov
dec
and
clc
int
mov
sub
stos
leave
push
mov
jbe
jbe
in
push
lret
sbb
jg
nop
test
rclb
push
mov
out
enter
pop
aam
inc
test
push
pop
mov
inc
and
jo
icebp
mov
inc
or
sub
ljmp
jno
push
sbb
rcrb
ljmp
leave
add
cmp
cmp
test
loopne
sahf
dec
mov
clc
test
mov
pop
sub
lea
icebp
lret
mov
sub
mov
sarl
mov
fistpll
shlb
mov
aad
mov
inc
cmc
mov
je
mov
cs
pushf
std
shll
in
loopne
pop
aam
sbb
daa
pushf
xor
and
cmp
xchg
cli
mov
ficomps
push
add
es
sub
cmp
and
lret
test
xlat
frstpm(287
daa
outsb
data16
pop
mov
inc
cmp
sub
test
int3
xchg
jle
es
mov
lock
outsl
cmpsl
push
fwait
xchg
das
leave
addl
push
pop
ja
add
in
sbb
dec
or
test
arpl
xor
inc
cmpsl
out
fndisi(8087
je
mov
lcall
mov
ljmp
sub
mov
cltd
jg
pusha
pop
aad
or
pop
pushf
enter
xor
add
lcall
popa
lods
sub
adc
sbb
shrb
and
test
cltd
and
ljmp
in
push
ret
or
dec
fwait
sub
mov
shlb
call
cwtl
mov
inc
fstpt
push
add
dec
mov
fwait
and
movsl
popf
je
xor
sbb
add
mov
dec
mov
add
cmc
jmp
bound
xor
lcall
icebp
outsl
dec
inc
cld
in
out
arpl
or
shrl
sub
cmp
adc
clc
push
outsb
ret
or
mov
jns
es
in
and
push
insl
pushf
adc
jl
inc
mov
fcoms
aad
xchg
pop
fldl
nop
imul
stos
push
montmul
cmpsb
inc
fwait
mov
ret
imulb
jb
xchg
subl
push
call
xchg
ss
sarb
in
xor
call
cmc
jmp
lret
sbb
lret
rclb
stos
in
test
dec
adc
pop
lret
pop
sbb
popa
stos
push
push
mov
jns
enter
lods
jg
push
pop
and
jnp
mov
addl
and
fistpl
cs
incl
push
psubusw
cli
icebp
xchg
int
and
xor
dec
mov
push
sbb
cld
outsl
adc
gs
inc
jp
adc
ss
xor
sbb
mov
insl
jg
cmp
out
icebp
bound
cli
push
out
ljmp
mov
pop
add
or
fildl
xchg
cs
cwtl
into
fs
jg
xor
inc
cmp
xor
ss
pop
cwtl
and
push
dec
aad
and
sub
testb
lods
lret
hlt
push
icebp
add
outsb
xor
out
addr16
test
xorl
mov
mov
mov
sbb
ret
xchg
lahf
aad
pop
rol
inc
std
incl
decb
test
and
sub
xor
mov
loope
mov
jo
xor
or
cmp
fstpl
inc
insb
push
jl
fidivl
push
out
sbb
cmp
fdiv
das
jne
clc
pop
inc
mov
daa
fildll
adc
pop
sbb
ret
cmp
repz
hlt
mov
push
push
aam
cltd
mov
fildl
mov
cs
add
sbb
aaa
push
cmp
or
mov
mov
adc
sub
das
or
pop
adc
std
movsl
jo
scas
popa
push
cmp
mov
mov
and
call
pop
and
bound
inc
inc
ljmp
inc
incl
pop
int3
xor
cmp
fiaddl
adc
cs
addb
insb
jo
ja
push
or
xchg
dec
test
push
lods
popa
sub
imul
push
pop
leave
and
shl
ja
adc
je
xorb
xor
inc
ficoml
lret
sub
notb
or
hlt
lahf
lods
rolb
sbb
push
in
int3
ljmp
adc
shlb
dec
cld
sti
cmp
fistpl
out
clc
sub
out
pop
loop
or
cmp
das
aas
inc
jae
imul
mov
aas
push
rcl
daa
xor
add
xchg
ret
jno
repz
aas
hlt
add
adc
incb
fisubrl
xor
and
add
pop
roll
popf
stos
jo
std
and
enter
rclb
les
leave
push
push
mov
mov
cmp
mov
push
inc
rcrl
dec
bound
mov
shll
push
test
lea
adc
sbb
fcomps
rorb
mov
jo
in
aas
cmpsl
rclb
pop
adc
sahf
adc
fmull
adc
loopne
mov
pop
fcmovbe
ffreep
imul
inc
popa
inc
cs
xchg
enter
les
orl
data16
mov
pop
popf
fdivrs
jg
sub
fwait
mov
stos
lock
imul
ja
inc
std
sbb
push
outsl
push
xchg
pop
clc
loopne
pop
push
cwtl
sahf
fnsave
clc
sbb
incb
into
rep
xchg
outsb
and
xor
adc
or
aam
push
fcmovb
cmp
inc
clc
stos
mov
popa
add
push
mov
fimull
in
scas
mov
mov
xlat
mov
decl
mov
xchg
pop
mov
and
aam
inc
aad
les
fdivr
ja
call
aaa
pop
stos
sub
xorl
adc
mov
adc
outsl
sbb
out
mov
xor
xor
fwait
add
jo
inc
sbb
dec
gs
decl
jne
outsl
cmp
stc
adc
or
lcall
xor
loope
out
mov
mov
cmc
icebp
loop
jg
ret
mov
push
negb
cld
out
test
or
sub
mov
or
std
jne
xchg
hlt
jmp
inc
ljmp
rcrl
pushw
add
nop
movsb
pop
sahf
outsb
imul
jns
inc
ret
push
inc
ret
incl
pushf
add
test
ret
ja
adc
mov
and
mov
pop
mov
addr16
or
and
cmp
pop
shlb
xchg
decb
jnp
xchg
stos
or
icebp
mov
sarl
or
mov
sub
cmp
or
or
cld
bound
in
std
mov
mov
or
pop
xor
std
pop
push
jns
test
hlt
dec
mov
lea
push
loop
aad
fadds
ds
aad
popa
mov
inc
cmpb
pop
cmp
sbb
pop
cmpsb
mov
pop
out
mov
push
sbb
sub
pop
cmp
std
sub
out
ja
out
insb
sbb
or
mov
mov
xchg
dec
jmp
into
ret
inc
mov
out
push
push
bound
std
push
jbe
jle
pop
cld
das
push
mov
std
or
je
dec
cmp
loop
cmp
fldt
frstor
mov
sub
test
in
test
stos
mov
popa
sbb
dec
dec
cltd
jae
sbb
lock
xchg
daa
movsb
stc
xor
mov
xchg
xor
add
cltd
push
decl
mov
scas
fisubs
test
cwtl
jne
rcrb
fistps
xchg
mov
push
xor
adc
mov
push
out
adc
sbb
cs
subps
lcall
les
cld
stc
pop
shl
sbb
adc
loop
sub
lcall
pop
addr16
stos
rcl
je
push
mov
test
and
inc
ret
or
and
imul
popa
mov
lea
sti
loopne
xlat
rcrl
add
cltd
jge
pop
loop
fists
add
dec
mov
fs
sbb
arpl
and
sbb
mov
push
movsl
aas
cmpsb
rolb
mov
xchg
mov
adcb
fcoml
sub
push
icebp
bound
add
pop
pop
aaa
lock
leave
sarl
movsl
inc
xor
sti
loop
dec
inc
imul
nop
jg
or
ss
iret
outsl
or
cmp
jl
pop
mov
stc
mov
data16
jge
cmp
cld
or
cmp
adc
lcall
sbb
icebp
sti
icebp
pop
mov
jmp
jae
testb
mov
and
mov
xor
add
into
pushf
xor
fsubrs
add
es
jp
mov
leave
xchg
nop
ds
lods
sbb
outsl
or
mov
data16
sub
into
inc
push
or
pop
push
stos
loope
lcall
dec
mov
cwtl
outsb
sbb
pusha
jmp
adc
xor
hlt
rolb
mov
fstpl
mov
and
cmove
jnp
sbb
mov
ljmp
aas
inc
adc
das
in
or
and
mov
lea
jb
or
or
dec
lret
sbb
js
inc
pop
xchg
push
loopne
mov
es
dec
pop
orb
push
pop
adc
sbb
push
add
dec
bswap
jbe
stc
xchg
mov
adc
pop
or
mov
out
daa
sahf
xor
mov
mov
nop
lock
test
push
sbb
mov
add
in
inc
mov
fisubrl
cmpl
mov
iret
test
sub
shl
and
mov
mov
jns
xor
scas
jo
adc
dec
push
test
push
push
lea
sahf
movsl
cmpsb
sbbb
std
cmp
movsl
pop
fsubrs
mov
sbb
aam
xor
or
fisubs
and
aad
mov
mov
mov
cmp
popa
cmp
scas
jnp
in
push
outsl
inc
mov
mov
orl
inc
xchg
neg
popl
mov
sub
aad
aas
xor
lahf
sbb
out
mov
mov
mov
jmp
stos
jg
lock
push
test
nop
push
pop
clc
mov
test
mov
or
add
es
loopne
pop
lahf
dec
lret
fsubrp
mov
imul
mov
pop
popa
sti
inc
cmp
xchg
sub
sbb
sbb
nop
sbb
divl
xchg
mov
in
fwait
jns
cmpsl
hlt
in
pop
rorb
adc
test
pop
sahf
aam
adc
mov
cs
push
xor
je
xchg
loope
push
test
dec
aas
mov
jbe
lcall
and
subb
dec
imul
lcall
mov
lock
sbb
inc
in
sub
insb
mov
std
and
fildll
or
cmp
cs
call
adc
lret
hlt
xor
xor
aam
lock
pop
fcom
int3
or
pop
clc
cmp
adc
addl
jle
or
or
inc
insl
or
mov
jmp
and
imul
or
lcall
or
add
data16
mov
cli
shlb
fucomi
and
mov
jae
mov
test
sub
fstl
pop
dec
cld
leave
mov
das
lret
xchg
test
decl
push
test
subl
mov
and
sub
and
sub
or
xor
testl
adc
cmp
pop
push
loope,pn
push
ret
out
jg
jmp
mov
mov
sahf
call
out
xchg
mov
and
nop
repz
mov
mov
imul
xor
push
fwait
mov
aaa
xorb
add
mov
jg
outsb
fistpll
sahf
sbb
add
mov
flds
xor
or
shr
fcoml
and
pop
pop
popl
fnstsw
adc
movsl
jg
int
mov
arpl
sbb
mov
decl
daa
jo
dec
clc
inc
data16
lods
push
leave
dec
mov
jmp
es
xor
jmp
inc
dec
fs
mov
sub
outsl
stos
bound
pcmpgtw
and
ja
out
xchg
sbb
shll
movsl
pop
rorb
fwait
lds
cmp
aas
popf
pop
mov
or
ljmp
add
in
into
pop
add
mov
cli
aad
popf
adc
movsb
cmp
mov
std
cwtl
mov
lcall
push
add
push
add
inc
push
mov
or
push
sbb
and
mov
and
xchg
aam
dec
add
repnz
std
out
jg
sub
and
fists
lahf
nop
jmp
out
push
xchg
sbb
lds
mov
adc
inc
xor
pop
xor
sbb
jl
fists
inc
jle
cmp
leave
dec
xchg
inc
roll
pop
mov
je
add
js
fidivrl
inc
sbb
or
mov
movsb
push
push
loopne
in
mov
and
xor
sahf
ja
mov
inc
loope
or
inc
mov
mov
int
mov
add
mov
stos
sbb
sbb
addr16
aad
mov
mov
push
or
xchg
repnz
pushl
int3
fstpl
int3
xor
repz
inc
arpl
in
sbb
leave
insl
and
adc
or
push
data16
in
incl
adc
inc
mul
imul
call
jecxz
push
fisttpl
fistps
jg
stc
rcll
test
add
push
pop
call
mov
mov
ret
pop
arpl
lock
test
imul
lods
push
aas
mov
movsb
mov
mov
push
rorb
popf
adc
nop
mov
jmp
adc
idivl
rorb
mov
rcrl
shr
or
subl
dec
adc
mov
dec
push
dec
sahf
lahf
and
rcll
xchg
mov
xor
adc
mov
or
adc
pop
and
mov
fimuls
fsubr
subl
pop
inc
mov
xchg
or
outsb
clc
jbe
cmp
pop
lds
popa
cmp
jg
adc
fbld
nop
adc
and
adc
jp
adc
ret
adc
cmp
pop
aad
stos
stc
cmp
cwtl
sub
mov
jbe
xchg
ret
loop
incl
ret
and
mov
insl
cmp
push
in
movhps
xchg
inc
pop
nop
add
repz
fcmovu
cmp
xchg
jns
frstor
aaa
and
dec
adc
cmpsl
orl
pop
les
outsl
push
aam
jmp
xchg
push
data16
jno
test
mov
mov
jl
cmpsl
push
and
mov
cmc
sbb
xchg
sbbl
fstpl
cmp
dec
jae
push
xchg
or
std
pop
pop
jno
std
adc
stos
pop
pop
out
mov
adc
outsb
rolb
and
pop
sti
or
cmpb
push
jnp
pushf
adc
adc
mov
jl
push
pop
xchg
mov
xchg
mov
fs
aam
scas
cmp
add
mov
decl
js
sahf
sahf
inc
add
mov
and
xor
std
cmp
rol
inc
mov
mov
repz
sub
pop
mov
aad
and
ljmp
ljmp
clc
outsl
lret
fcomip
bnd
lds
jl
mov
jne
mov
adc
inc
insl
enter
xchg
test
cmp
dec
xchg
push
xor
mulb
jg
mov
orb
dec
pop
leave
push
push
or
adc
dec
rolb
push
popf
test
icebp
xchg
aaa
cs
mov
ret
mov
rcrb
dec
sbb
pop
and
mov
das
aaa
sub
adc
or
shl
sbb
push
orl
daa
xor
push
mov
sub
ret
pop
outsb
clc
lea
imul
jp
cwtl
les
xor
xchg
clc
pop
cli
cmp
adc
pop
push
rol
push
jb
push
ss
sub
xor
hlt
inc
aas
pushf
jns
inc
ss
push
dec
sti
xchg
mov
cmp
push
in
lods
and
je
mov
dec
loopne
xchg
add
rorb
xchg
mul
test
cmp
mov
and
xor
imul
adc
cld
lret
dec
cmpsb
pop
mov
sub
stos
fsubl
mov
cmp
sbb
add
fnsave
mov
push
pop
fwait
and
xor
inc
popa
sbb
sti
aaa
mov
in
inc
sbb
test
push
jo
mov
ds
std
push
or
mov
sbb
int
enter
gs
mov
addr16
std
roll
enter
out
outsl
addr16
sbb
sbb
or
outsb
int
mov
mov
push
and
pop
bound
stos
dec
adc
inc
into
rcrl
pop
pop
adc
data16
mov
xchg
jmp
daa
cmc
repnz
xor
inc
lahf
in
push
test
lahf
and
ss
cmp
jmp
insl
int
xchg
mov
orb
nop
mov
pop
ss
xlat
sbbb
mov
jmp
roll
jmp
cmp
and
fwait
lock
mov
jae
inc
lods
xor
sti
fs
jnp
stos
mov
int3
stos
inc
stc
mov
mov
fldt
xor
jnp
xor
mov
xchg
jb
sbb
das
in
rcl
mov
cmpsb
mov
fnstcw
mov
adc
inc
or
xor
pop
call
jmp
test
lods
loope
xor
addr16
sarb
cmp
add
pop
outsb
sti
jbe
sub
test
mov
cltd
call
pop
cmp
xor
leave
lea
cmpb
out
inc
xchg
enter
imul
in
in
lds
ja
jbe
push
loop
jne
cmp
scas
nop
test
pop
mov
nop
scas
xor
inc
push
sbb
xchg
sbb
sbb
loope
lahf
lcall
xor
mov
push
cmc
mov
jmp
test
xor
or
mov
js
push
mov
call
mov
sub
mov
pop
mov
arpl
or
cwtl
ljmp
cmp
mov
mov
in
mov
dec
mov
sbb
rcrl
fstl
mov
in
das
mov
mov
mov
js
cmc
test
mov
fdivrs
scas
mov
aas
xchg
cmpsb
and
cmp
outsl
in
jle
dec
mov
pop
push
mov
push
adc
jmp
xchg
fucomip
insb
popa
sti
mov
lea
movsl
push
cmpsb
fcompl
add
and
outsl
inc
pop
mov
push
js
insb
adc
xor
call
cld
ret
jg
jb
jp,pt
inc
daa
shl
dec
mov
push
push
movsb
repz
mov
xchg
lea
in
pop
test
cmp
push
pusha
stos
movsl
adc
pusha
sbb
xchg
jae
fldt
dec
imul
mov
adc
cli
in
cmp
mov
xchg
fcomps
xor
les
mov
fsubrl
inc
sbb
dec
xchg
loop
jle
ja
pusha
jb
pop
arpl
mov
rolb
dec
mov
mov
call
add
cmp
mov
mov
loopne
rclb
jo
mov
out
xorb
fcmovnb
call
out
dec
and
cwtl
and
fcomps
fsubrl
push
jnp
mov
and
lret
addr16
or
cmc
sbb
or
repz
mov
out
cmp
mov
icebp
or
or
sbb
orl
js
lods
mov
aaa
push
jns
sub
lcall
shrb
mov
cmp
popa
aaa
mov
aaa
xor
cmp
or
lea
lret
xchg
test
loop
test
pop
notl
push
dec
mov
pop
push
test
lcall
jl
mov
sbb
fcomp
pop
sub
push
mov
xlat
dec
lock
cltd
cmp
mov
movsl
mov
mov
lcall
cmpsb
mov
add
mov
lock
mov
push
in
stos
into
mov
jmp
sbb
dec
add
movsb
inc
mov
adc
out
daa
mov
scas
icebp
sti
cmpb
inc
add
std
stos
test
lret
xchg
jae
popf
adcl
add
push
enter
pop
cld
mov
xchg
pop
push
sub
es
jg
jge
pusha
mov
xchg
jae
inc
or
je
inc
mov
in
or
mov
ss
pop
fisubrs
test
jns
inc
push
popf
adc
loope
ret
iret
cmpb
imul
dec
dec
xor
data16
push
xor
cmc
pushl
test
dec
rep
addb
mov
std
dec
shrl
ja
jne
decl
add
lock
dec
jle
cmpsl
ret
ja
xor
push
pusha
out
sub
mov
std
and
jb
sahf
cmp
mov
cmpb
and
push
leave
adc
mov
in
fadds
fs
cmp
add
bound
inc
testl
xchg
and
out
scas
lea
push
xchg
pushf
add
fbstp
jp
out
mov
int3
nop
dec
adc
push
mov
in
jno
fs
xchg
fadds
mov
jecxz
jnp
dec
or
iret
mov
loopne
mov
loop
in
ljmp
xchg
add
mov
push
jae
sub
je
pop
in
add
inc
cli
sahf
in
sar
and
xchg
js
jo
xchg
and
dec
sub
adc
or
das
loop
addr16
push
jo
int3
mov
mov
dec
push
sbb
lret
mov
jmp
sub
and
data16
mov
or
sub
addr16
mov
pop
adc
test
mov
orb
das
in
mov
push
mov
or
push
push
jnp
divb
adc
mov
inc
push
cld
ljmp
xor
lahf
xor
adc
xor
pusha
fidivrs
cld
filds
scas
imul
mov
adc
clc
fidivrl
mov
scas
push
or
daa
cmp
sbb
add
out
mov
jg
stc
ror
push
mov
cltd
or
or
nop
clc
and
out
jg
jne
movsl
in
mov
stc
popa
mov
inc
cmpsb
aaa
in
cmp
ret
jle
test
pop
or
jmp
andl
adc
repz
loop
dec
loopne,pn
adc
shl
mov
mov
sbb
pop
lret
sub
cwtl
sub
popa
jp
mov
xchg
xchg
xor
and
inc
ljmp
or
popf
les
pop
sahf
push
cmp
xchg
pop
in
in
pop
jp
mov
int
fdivrl
imul
jl
roll
inc
neg
mov
xchg
lds
popf
mov
cli
sub
adc
lret
sub
lret
fadds
mov
paddd
in
mov
les
adc
dec
cltd
je
sub
mov
or
test
dec
dec
add
jle
std
jg
pop
xchg
mov
sbb
xchg
aam
add
fistps
lock
pop
loope
push
outsb
inc
psubb
dec
pop
cmp
outsl
rcrb
test
xchg
push
pop
daa
incb
mov
popf
adcb
jb
imulb
sahf
scas
enter
lods
cld
outsl
fcompl
mov
mov
dec
mov
push
test
aaa
inc
and
adc
mov
xor
jno
sub
jle
and
sub
jge
imul
or
shr
cwtl
aad
sub
aad
or
ljmp
jmp
inc
cmovs
mov
arpl
sbb
loop,pn
add
or
inc
adc
sbbl
cmp
dec
mov
ss
movsb
mov
mov
ret
add
pop
aam
xorb
mov
push
mov
lods
or
movsl
js
xchg
ret
fmulp
mov
rcll
sbb
pop
rcrl
cmp
aaa
fs
add
mov
dec
mov
and
adc
ds
add
rcl
aas
imul
xchg
xchg
cmp
or
fldl
fs
inc
adc
rcl
scas
ss
inc
lcall
cmp
cltd
bound
lret
fists
pop
cmpsb
mov
pop
cli
lods
jbe
loope
dec
xlat
adc
mov
test
xchg
inc
mov
insl
pusha
test
ret
mulb
inc
sub
jbe
aad
rcl
and
mov
jae
test
mov
add
cwtl
jne
outsl
mov
dec
add
insl
cmp
adcb
rcr
xor
inc
imul
mov
inc
aas
mov
push
cmpsb
push
add
inc
aad
decl
xor
or
dec
fiaddl
sbb
or
sbb
and
int3
insl
jno
dec
fs
fidivrs
aam
stos
jmp
cmp
jb
push
loopne
inc
and
jmp
popa
push
push
cmp
call
stc
xorb
add
dec
repnz
js
xchg
test
fidivrs
mov
sbb
lock
ljmp
orl
cmpb
cltd
and
ljmp
filds
test
fildl
pop
mov
sbb
sbb
cld
cli
cwtl
mov
popa
adcb
and
mov
mov
call
sbb
dec
cmpsb
fdiv
jbe
xchg
xlat
hlt
pop
mov
aaa
insl
add
xchg
test
jb
dec
jae
pop
mov
jmp
jecxz
push
sbb
cld
mov
aam
push
in
js
xor
aam
push
sbb
lahf
roll
xchg
push
ficompl
dec
mov
in
and
inc
sub
popf
xlat
mov
ljmp
and
adc
inc
push
add
jecxz
add
jg
push
jno
jg
mov
fisubrs
pop
ljmp
and
cli
lock
fsubl
rorl
cmp
push
and
or
add
mov
cld
mov
sti
xor
or
mov
inc
testb
icebp
mov
gs
and
out
mov
sar
incl
jg
inc
repz
xchg
sub
jl
cmp
jl
cmpsl
or
xlat
mov
mov
mov
xchg
mov
xlat
jne
fistl
adc
imul
hlt
pop
sbb
aad
adc
jge
inc
shll
decb
xchg
mov
push
mov
xor
push
add
enter
mov
scas
lods
aam
dec
pop
cmc
in
xchg
adc
mov
inc
scas
pop
jle
bswap
rorb
sbb
cmpsl
add
or
cwtl
lds
test
inc
mov
das
pop
sub
hlt
test
inc
xor
inc
stos
outsb
fdivl
pop
cmp
xchg
pop
xchg
mov
and
movsl
iret
dec
xor
orl
push
aad
cmpsl
shlb
btr
mov
std
inc
pusha
js
or
shrb
bnd
mov
push
movsl
sbb
aaa
popa
adc
lea
push
push
add
and
xchg
aad
push
mov
subl
mov
mov
add
out
cmp
es
push
test
fsts
fildl
pop
cli
sbb
fwait
popf
or
jg
sbb
cld
xchg
lock
loop
adc
incl
dec
jge
jno
por
cmp
fmuls
xlat
std
int
mov
aas
mov
xchg
jge
add
and
jmp
es
data16
nop
ror
aad
jl
mov
inc
mov
lea
or
aad
je
or
inc
mov
cmpsb
cmpsb
outsb
jnp
aam
inc
inc
push
notl
js
mov
outsb
inc
pop
outsb
mov
fistpll
ljmp
cmp
jle
push
mov
cmp
out
and
popa
incb
dec
inc
repz
mov
pop
in
jl
lds
in
arpl
clc
fisttps
xor
mov
dec
xor
xorb
arpl
sbb
xchg
push
test
scas
loop
jnp
repnz
call
or
mov
loop
adc
pop
test
fdivs
scas
or
pop
sbb
addb
call
xchg
cltd
ljmp
cmp
xchg
inc
and
cli
mov
cmc
sub
in
out
lcall
push
js
sbb
arpl
das
mov
ljmp
jns
mov
cli
fildll
jbe
cli
inc
mov
clc
dec
jp
or
shrb
clc
mov
sbb
cli
orb
jl
shlb
mov
add
push
push
mov
adc
outsl
popf
cmpsl
into
ja
loopne
insb
mov
out
adc
adc
push
mov
xlat
and
sahf
aam
mov
pop
sbb
cwtl
jbe
jae
lea
push
adc
cmp
pop
mov
pusha
enter
or
mov
sub
push
cli
mov
lahf
movzbl
addl
je
add
and
jg
mov
push
stos
sbb
pop
add
sarl
lods
mov
stos
cld
dec
or
repz
inc
scas
loope
mov
out
pop
test
add
fcompl
sbb
jp
shrl
in
sar
jl
cs
fidivrl
shrl
cmpsb
test
rol
mov
sbb
dec
addr16
and
push
mov
std
jle
jge
cs
add
mov
outsb
std
pop
add
leave
mov
and
daa
and
pop
inc
cmp
xor
mov
adc
mov
mov
shlb
mov
cmp
insl
lea
push
pop
dec
jo
mov
sub
data16
and
cs
icebp
or
stc
mov
aas
add
ja
or
shlb
mov
mov
inc
inc
push
daa
rorl
orl
call
or
mov
and
dec
nop
shr
add
clc
jg
cmp
ret
jne
xor
out
push
mov
and
clc
mov
dec
cltd
rcrl
xlat
mov
stos
mov
les
push
daa
sbb
jmp
adc
adc
ljmp
jmp
mov
jne
push
cmp
ss
scas
xchg
xchg
adc
std
pop
shll
mov
faddl
push
mov
mov
jo
test
dec
xchg
push
clc
xchg
mov
mov
adc
mov
roll
xchg
int3
and
xor
dec
sbb
dec
hlt
std
cmc
outsl
aaa
in
pop
lock
add
push
jmp
pusha
mov
aam
push
mov
fcoms
das
or
jae
js
idivb
lcall
insl
and
lahf
cli
jg
and
xchg
push
jge
push
ror
loope
and
add
push
out
fwait
inc
dec
xchg
jb
and
icebp
adc
inc
xchg
das
inc
leave
push
xchg
das
cld
add
adc
rorb
lret
sti
movsl
fwait
push
pop
adc
and
xchg
add
push
ss
fdivrs
ja
jbe
pop
inc
hlt
mov
rolb
jno
xchg
addr16
add
mov
out
fyl2x
jne
jae
push
repnz
inc
cltd
dec
adc
stos
jns
dec
outsb
inc
jnp
clc
mov
lods
loopne
iret
nop
push
cmc
ja
das
fdivl
ds
lcall
pop
iret
ljmp
leave
add
xor
jl
cli
lea
mov
jmp
les
adc
cmp
mov
data16
imul
push
pusha
cmpsl
jl
push
lcall
fstpl
inc
in
jg
mov
or
pushf
xor
sbb
add
stos
sub
lock
mov
pusha
mov
pushf
and
inc
jl
xchg
fadd
pop
mov
mov
lcall
pop
adc
shlb
in
mov
aas
or
or
icebp
jb
cmp
fadd
outsl
xorl
into
out
loope
aad
pop
adc
sti
inc
lcall
pop
mulb
adc
lock
sub
orl
sti
pop
test
cmpsb
jo
sbb
push
mov
stc
adc
hlt
repz
ljmp
mov
mov
repz
jg
pop
jp
sub
jge
push
push
mov
add
mov
push
cld
jecxz
testb
jle
js
movd
pusha
inc
or
ja
fbld
popa
int3
mov
or
ljmp
or
test
stos
pop
and
cmpsl
popa
scas
inc
jns
inc
adc
add
cmp
pop
pop
mov
jg
dec
jb
push
adc
in
push
ffree
or
and
shrl
inc
push
fsts
cld
pop
xor
xchg
bound
push
jb
aaa
pushl
ja
insb
jg
cmpsb
jns,pn
jnp
mov
pop
clc
enter
or
sbb
orb
int
adc
rcll
mov
sahf
mov
xor
and
xchg
or
out
jo
les
insb
dec
add
imul
ret
lret
jge
add
jg
fdivrs
loop
in
and
test
jmp
scas
jg
add
cmp
xchg
mov
or
test
roll
xor
shrb
arpl
rcrb
push
fldt
jecxz
mov
fmull
xor
inc
mov
xchg
dec
inc
xchg
or
dec
pop
dec
lods
fistps
mov
adc
pop
push
insl
clc
jp
mov
sbb
add
or
jge
ljmp
pushf
push
popf
sbb
sub
or
bound
adc
jge
add
jmp
loope
insl
movsb
icebp
jno
rorl
bnd
jb
stos
mov
fcompl
stos
aaa
pop
cli
dec
lcall
scas
dec
sub
sub
pop
jbe
or
rclb
or
sub
sahf
jp
js
lods
hlt
push
outsb
mov
cmpsb
stc
cmc
mov
aam
cmp
mov
xchg
fimull
dec
inc
jo
fisubrs
mov
aam
mov
inc
lods
jo
mov
arpl
sbb
ss
mov
mov
mov
test
stos
pop
outsb
mov
repnz
dec
jno
sbb
clc
testb
mov
lods
mov
in
movl
xor
ljmp
dec
jb
and
sbb
lcall
adc
int
ret
insb
cmp
sub
cs
or
xor
fcom
orl
cmp
ret
inc
adc
aam
mov
push
fcmovnbe
mov
xor
add
iret
push
jecxz
sbb
xchg
add
inc
ja
fwait
jo
add
xor
or
dec
lahf
pop
int3
cmpsb
std
loop
add
out
dec
mov
stc
testl
inc
or
or
sbb
hlt
push
add
movsl
in
inc
sarb
popf
das
outsl
call
add
movsl
push
mov
and
sahf
subb
push
outsl
sub
xor
sbb
dec
enter
rorb
mov
popa
ss
insl
fistps
test
or
sub
in
or
xchg
dec
or
mov
jo
popa
sbb
decl
roll
push
cwtl
jns
in
sahf
fisubrs
loopne
pop
mov
and
mov
mov
mov
sbb
inc
mov
and
lea
inc
cmc
mov
sbb
ljmp
ret
ds
pop
jae
or
sub
and
adc
loopne
mov
test
xor
push
cli
aas
jge
mov
sbbb
dec
rcll
jnp
call
pop
xor
les
push
cwtl
mov
inc
inc
sbb
push
pop
lea
sbbb
call
xor
je
rcll
jge
pop
push
pop
adc
stos
loop
lock
shlb
pop
or
push
js
mov
jg
sbb
jb
lock
sub
out
out
xor
cld
adc
jg
jmp
cli
lahf
test
inc
loope
mov
sub
orb
xorl
pop
push
xlat
cs
lret
aad
or
inc
fldl
les
sub
push
outsl
ljmp
xchg
sbb
xchg
sub
outsb
js
cmpsb
push
shll
mov
mov
jbe
mov
insb
stos
test
inc
daa
aas
or
add
cli
inc
clc
mov
sub
repz
dec
and
adc
icebp
lea
xchg
shrl
jecxz
mov
or
dec
dec
xchg
lcall
addr16
mov
shrb
or
stos
add
pop
push
call
cwtl
mov
xchg
sbb
inc
inc
inc
or
ljmp
scas
xchg
dec
test
dec
cmp
and
mov
and
mov
lds
divl
sti
and
stos
add
mov
add
sbb
pop
jb
test
fstl
test
testb
sub
daa
rsm
lahf
sbb
mov
fistpll
cmp
rolb
std
hlt
ja
xchg
and
insb
jg
movb
test
cmp
sbb
clc
or
dec
movsb
jne
pop
nop
popa
aad
ss
stc
push
or
int
push
add
push
add
push
xchg
jno
cmp
addr16
call
mov
pop
je
shrb
std
movsl
push
roll
xor
incl
inc
roll
cwtl
sbb
fdivrs
adc
mov
fldl
aam
push
or
subb
fld
push
ja
mov
xor
or
sahf
inc
jl
add
das
lret
in
shll
push
or
sub
in
push
das
fisubrl
addl
push
mov
sbb
or
pop
clc
xor
je
mov
mov
mov
andl
call
sbb
fnsave
xor
call
jle
cmpsb
sbb
mov
lea
ficompl
aad
data16
inc
loopne
shrl
jle
outsl
jne
or
mov
mov
aaa
loope
cs
jns
cmp
cmc
cli
push
jg
movsb
mov
pop
jle
sub
pminub
pop
adc
loopne
fwait
inc
aad
lock
pusha
inc
mov
jno
shll
and
imul
rcr
jg
dec
inc
and
inc
nop
out
mov
sbb
dec
jmp
or
or
add
push
cmpsb
lcall
call
lods
out
sub
jl
pop
iret
sbb
push
aaa
inc
xor
cs
shl
mov
inc
pop
mov
scas
lods
rcll
mov
push
sbb
data16
mov
fadd
push
vpaddd
ljmp
mov
jmp
js
push
inc
mov
sahf
out
outsl
adc
nop
xchg
cmp
inc
pop
mov
mov
mov
sub
mov
xlat
mov
pop
mov
push
je
outsl
xchg
js
inc
fstpl
jb
add
das
fcoml
cmp
inc
sbb
ljmp
cmc
test
adc
aam
sbb
pop
cwtl
into
and
adc
inc
adc
push
push
int3
out
pop
jnp
xor
mov
cli
jnp
dec
fistpl
cltd
adc
fdivrp
in
outsl
outsb
lods
sub
cwtl
movsb
sbbb
push
test
scas
pop
inc
pop
sub
mov
divb
adc
cmp
inc
hlt
adc
clc
mov
and
hlt
ficompl
add
popw
xchg
aas
add
popa
sbb
inc
dec
ljmp
cmp
iret
cmc
push
xlat
lcall
int
test
pop
add
inc
mov
sarb
fwait
mov
pop
gs
jne
xor
out
sbb
push
adc
mov
paddb
sub
or
fstl
push
cmp
adc
fnsave
dec
pop
inc
and
mov
sbb
ds
call
mul
cmp
sbb
lock
pushf
adc
adc
pop
sbbl
out
mov
ss
xchg
fwait
mov
or
jecxz
mov
mov
lods
fs
mov
nop
jp
xor
push
mov
lcall
int
loope
inc
dec
aaa
xor
sub
iret
xlat
push
lods
mov
rolb
mov
orb
push
jo
aam
sahf
add
pop
sub
aam
movsb
cmp
and
loope
fwait
lret
sub
cld
add
push
enter
adc
cmpsl
mov
mov
stos
and
jne
push
sarb
mov
incl
lods
xlat
xchg
inc
dec
pushf
or
pop
inc
jb
cltd
add
inc
jns
inc
enter
test
xchg
shlb
mov
mov
pop
fdivrp
out
jge
xor
jg
adcb
adc
sbb
loope
dec
leave
xor
loopnew
inc
dec
shr
inc
pop
data16
mov
add
and
incl
push
sub
jg
js
dec
push
jle
push
push
push
outsl
lret
cmp
dec
adcb
xchg
or
pop
adc
push
cltd
jle
loopne
xchg
adc
mov
and
out
rorl
sbb
dec
mov
mov
dec
pop
arpl
pushl
sub
pop
ds
or
fsub
sub
jne
mov
mov
mov
sub
adc
pop
mov
jg
mov
movl
jo
stos
push
xor
cld
loope
adc
push
pop
lcall
xchg
mov
fisubrs
scas
loope
adc
sbb
popf
sahf
or
pop
lcall
adc
std
mov
stos
nop
ficoms
cmc
mov
jg
lret
test
xor
incl
or
and
inc
sbb
cltd
icebp
add
or
jmp
dec
cmp
cs
inc
in
sbb
daa
mov
inc
loope
adc
pushf
jl
dec
adc
loopne
inc
in
adc
fisubl
mov
pop
lcall
adc
test
dec
ds
pop
ss
insb
xchg
popa
insl
cltd
decl
jecxz
cmp
xor
or
lcall
inc
jb
mov
sahf
pop
not
or
mov
xor
and
jmp
mov
lock
lods
dec
test
push
and
pop
out
dec
sbb
push
imul
or
sbb
arpl
inc
fsubrs
jge
cli
add
sbbl
mov
js
aam
ficomps
mov
sbb
dec
xor
inc
jmp
xchg
xor
in
cmovle
inc
and
or
mov
pop
gs
sbb
or
fs
xchg
pop
cwtl
sub
sub
sbb
outsl
inc
xorl
and
ja
sbb
mov
sbb
sbb
cwtl
pusha
xor
movsl
pushf
dec
sub
mov
cs
xor
sbb
pop
dec
test
stos
adc
or
mov
jmp
sub
xchg
pusha
mov
nop
or
sbb
push
push
lods
fchs
fwait
test
insl
outsl
mov
mov
and
in
outsb
inc
xor
outsl
inc
pushf
bound
sub
sub
pop
ret
fnsave
bound
adc
das
out
cmp
orb
push
jo
mov
es
push
adc
repnz
inc
dec
lret
cmp
mov
xor
sbb
fldenv
push
cmp
add
xchg
rcr
or
sub
lock
add
add
incl
push
pop
shlb
push
sub
js
jg
inc
xlat
and
adc
in
imul
fisubrl
dec
mov
out
repz
and
mov
aad
mov
enter
iret
add
in
loop
sub
inc
int3
loopne
lds
mov
lahf
stc
cltd
shlb
in
and
dec
cmp
ja
or
or
lock
mov
incb
sbb
negb
or
add
jp
jp
mov
add
mov
pop
sub
fcoml
stos
bound
mov
pop
imul
pop
xor
out
add
out
fisttps
mov
jo
xchg
rcl
xor
push
mov
movsl
out
xorb
mov
sbb
adc
sub
mov
pop
xlat
ljmp
jp
inc
ljmp
sti
inc
jge
pop
sbb
and
inc
and
pushl
jb
mov
lret
pop
xlat
inc
stos
jae
les
fiadds
outsl
into
call
fdivl
mov
test
fwait
jmp
jns
aad
and
jae
xor
stos
dec
lds
dec
adc
dec
jne
loope
sbb
pop
out
sarb
fldl
loopne
filds
pop
scas
mov
sbbl
adc
mov
test
aam
shll
cmp
push
fs
pop
pop
sarl
hlt
xchg
scas
mov
jmp
mov
pop
outsb
insl
mov
jnp
and
mov
outsl
push
shl
mov
lock
mov
adc
jmp
mov
and
fcmovbe
shrl
cli
push
push
popf
add
sbb
jle
ret
inc
mov
mov
loop
cmp
inc
xlat
bound
fsubp
shrb
mov
js
int
mov
leave
js
push
inc
mov
mov
ss
push
or
push
call
rorl
mov
cmp
test
roll
pushf
in
sub
sub
dec
dec
xchg
shrb
mov
fcomip
push
add
and
pop
aaa
push
mov
mov
aam
std
fcmovnbe
test
orb
mov
add
stc
aas
jmp
cmc
jb
pusha
jle
push
arpl
or
icebp
pop
xchg
inc
shrl
push
mov
pop
and
test
jne
and
cltd
lock
dec
bound
cmpl
mov
imul
add
add
sub
sti
or
inc
imul
decb
jp
std
sbb
lods
or
aas
outsb
rclb
out
cld
xor
xchg
dec
push
lcall
add
loopne
cld
xchg
dec
lods
mov
aad
cmp
es
cld
cmpsl
inc
lcall
lods
mov
dec
shl
inc
jo
add
sub
mov
shll
pop
jle
decl
data16
pop
insb
data16
in
stos
mov
dec
mov
sbb
inc
mov
pop
cmp
mov
push
mov
imul
fstl
ss
xchg
in
popa
xlat
in
xchg
xor
mov
adc
jge
push
std
dec
mov
push
add
add
dec
je
test
dec
or
cli
fwait
js
in
or
xchg
push
movsb
orl
clc
push
stos
fdivs
xchg
sub
stc
mov
sti
or
cmp
pop
or
jl
pop
inc
test
mov
adc
inc
fcomip
push
xor
sbb
cmp
push
sbb
lods
add
jge
pop
sbb
call
call
mov
call
mov
fs
pop
test
lea
lods
test
dec
sub
ret
in
ljmp
sti
pop
insl
dec
outsb
fistl
out
dec
hlt
movsl
sub
fisttpll
test
sbb
rcl
lcall
jge
lock
push
or
pop
lahf
sbb
push
mov
add
mov
movsb
das
xor
loop
shrl
adc
sbbb
lret
xchg
cmc
clc
xchg
out
outsb
sub
cmpsl
fs
sub
cmp
scas
xchg
fnstenv
in
cmpsb
dec
dec
stc
jb
dec
pop
jg
pop
dec
push
enter
push
ret
icebp
push
pop
or
sub
fstpl
or
dec
push
and
adc
aas
mov
add
sbb
push
test
into
pop
xchg
in
in
xlat
test
add
adc
mov
or
inc
and
fistpll
mov
mov
rcr
inc
pop
and
out
pop
arpl
outsl
incl
movsb
clc
aas
sbb
aaa
and
int
je
push
shlb
imul
dec
ljmp
xchg
outsl
ja
xor
jno
enter
push
ret
cwtl
push
xor
sbb
pop
fistpl
xchg
cmp
push
push
cmpsl
std
dec
rolb
mov
shrl
mov
and
hlt
mov
xor
xor
cmpsb
jbe
aad
out
loop
push
add
iret
xchg
stc
aam
mov
shll
loope
repz
in
sarb
adc
mov
mov
or
fdivrs
test
push
in
ds
cmp
push
mov
call
sbb
push
ljmp
cs
add
mov
and
jmp
ja
lcall
negb
nop
std
xlat
aaa
nop
loopne
call
push
loopne
add
or
add
daa
loop
hlt
jae
dec
push
hlt
outsl
pop
into
nop
adc
in
mov
add
testb
add
je
imul
je
jns
je
insl
adc
gs
jae
imul
jne
dec
popa
mov
outsb
fldt
add
push
popa
jae
dec
jne
js
jnp
pop
inc
inc
push
adc
insb
outsl
bound
dec
mov
pop
sbb
insb
popa
jo
gs
iret
add
jb
scas
mov
inc
inc
dec
dec
cmp
mov
imul
push
push
imul
push
popa
sbb
jb
inc
imul
shll
inc
outsb
jae
outsl
push
in
pop
mov
inc
rolb
fs
fistpl
xchg
fistps
insl
and
bound
jb
jl
pop
inc
sahf
pop
imul
inc
and
ljmp
mov
fwait
cmp
mov
or
out
and
fs
lahf
sbb
mov
scas
mov
push
inc
push
jb
push
push
pop
lcall
cs
dec
imul
dec
push
imul
xor
xor
imul
mov
push
add
jo
push
push
fwait
cmp
inc
dec
jle
and
lret
push
imul
ret
jb
xchg
inc
jns
mov
push
xchg
mov
fs
outsb
push
jo
lods
fisubrl
data16
and
push
outsl
inc
push
cmp
and
and
inc
sub
fdivrs
bound
mov
ja
adc
push
fstpt
inc
insb
jne
push
dec
jae
adc
arpl
arpl
lods
lock
mov
rcrl
iret
outsl
mov
lret
inc
insb
pop
adc
sbb
in
je
les
pop
aaa
mov
adc
insl
xor
es
dec
fistpll
mov
ret
push
das
imul
sub
dec
cmp
adc
push
mov
mov
lock
outsl
push
inc
inc
dec
or
mov
loope
pop
inc
gs
std
dec
inc
dec
inc
add
adc
movsl
mov
sbb
dec
xor
jecxz
mov
roll
popa
lea
fiadds
ror
jbe
test
lret
xor
ret
nop
sahf
xor
or
add
dec
jge
pop
inc
pop
xor
inc
ret
leave
mov
nop
bound
xor
cmp
imul
inc
lret
mov
fcomps
jae
add
insl
subb
add
or
sarl
xchg
daa
cmp
imul
inc
in
addb
loope
inc
ljmp
je
cwtl
push
adc
cltd
sub
add
fstl
outsl
push
jle
mov
fimull
pop
and
and
roll
mov
subl
xor
xor
push
imul
out
popa
xor
add
sbb
mov
scas
push
sbb
push
or
dec
popf
mov
popa
xor
negl
dec
pop
sarb
xor
mov
insb
sbb
mov
test
popa
popf
ret
outsb
pop
adc
fwait
cmp
sub
pusha
jle
fsubrs
imul
sbb
jecxz
es
outsb
cmp
mov
imul
jae
in
xor
shlb
pop
sti
cwtl
sub
xchg
movsb
push
lret
jae
in
ds
in
add
and
pusha
sub
adc
add
add
inc
or
adc
jbe
push
inc
mov
and
cmp
rolb
pop
outsb
popa
xor
sbb
xor
pop
imul
insb
lock
ret
es
movsb
or
push
sbb
outsl
jns
push
dec
test
scas
lea
dec
lea
or
outsb
jbe
dec
dec
push
push
and
add
mov
or
push
pop
dec
je
jne
pop
dec
mov
sbb
nop
or
lcall
push
xor
xor
ss
insb
cwtl
inc
jg
or
or
add
fsubrl
adc
xchg
jo
dec
cmp
jo
dec
jge
shlb
cmp
cmp
xor
pop
shlb
das
cmp
pusha
dec
and
fidivs
mov
mov
loop
insl
andl
or
ss
jo
int3
mov
xchg
imul
or
or
xor
mov
dec
popf
jmp
negb
inc
dec
add
and
inc
xchg
incl
sidtl
add
add
jmp
adc
aaa
sbb
add
lock
popf
mov
add
xor
pop
jnp
xchg
mov
or
das
xchg
add
cmpsl
cmp
sub
push
je,pn
pop
imul
sbb
pusha
nop
mov
and
gs
adc
lret
add
es
ja
xor
add
fsubl
shlb
out
mov
pop
dec
fsts
add
mov
ljmp
add
add
incl
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
xor
add
mov
add
add
add
adcb
add
push
add
addb
add
add
add
push
add
addb
add
js
add
add
add
or
add
add
xchg
and
add
add
add
add
add
sub
add
add
add
add
add
add
addb
add
call
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
pushf
add
push
dec
add
add
add
add
add
sub
add
add
add
or
add
add
in
xor
add
add
add
add
add
add
add
add
or
add
xor
add
add
add
add
add
add
add
add
jg
incl
outsl
sti
mov
add
jns
add
std
incl
out
jnp
add
std
add
jnp
add
stc
incl
jns
add
jnp
add
sti
add
stc
mov
add
mov
jge
loope
jp
mov
jbe
roll
and
inc
jle
ret
pop
jbe
cmpl
mov
add
push
repz
push
adc
lods
bound
arpl
aas
inc
or
repnz
dec
lock
mov
imul
jae
das
enter
jno
pop
rcl
sub
xor
xchg
jecxz
push
cmpsb
cld
mov
cld
or
cltd
jle
cmp
ds
lock
mov
fistps
stc
push
add
mov
xchg
dec
enter
scas
sbb
cmpsb
imul
and
out
jns
and
pop
cld
mov
sub
or
lods
xchg
sub
xor
cmc
test
push
outsb
lret
mov
pop
xlat
and
repnz
in
push
jmp
repz
fstpt
adc
dec
fdivs
inc
out
lock
bound
push
fmull
ret
lahf
ljmp
notb
mov
in
add
jmp
ret
and
popa
out
xor
add
jle
cmpsb
cmpsl
adc
pusha
lock
push
or
fcompl
and
dec
movsb
in
repz
jns
outsb
mov
mov
push
fdivr
icebp
shrl
ja
insb
pop
jb
mov
ficompl
in
mov
mov
adc
mov
jmp
pop
iret
aas
inc
leave
jne
mov
pop
push
jne
callw
adc
dec
outsl
lods
je,pn
xlat
ficoml
jmp
jecxz
dec
pushf
fisubrl
das
sub
testl
sub
je
repnz
pop
test
push
push
mov
call
cmp
mov
push
push
test
dec
sbb
arpl
stc
gs
xor
or
scas
int3
dec
push
out
push
lcall
ljmp
sbbb
xchg
fists
jmp
mov
pop
jecxz
inc
adc
mov
push
pop
nop
mov
jge
data16
ja
cmpsl
add
rcr
loop
and
lock
popf
fistpl
mov
jne
adc
fmull
call
pop
iret
aad
das
js
fs
push
lods
cs
inc
jnp
inc
data16
call
xchg
popa
mov
add
outsl
aad
xlat
fsubrl
inc
pop
and
das
mov
adc
dec
aaa
add
fldcw
cli
out
mov
xchg
sub
sbb
mov
or
dec
sub
mov
les
inc
xchg
int3
ret
lret
mov
xchg
mov
mov
cld
jb
pop
or
dec
mov
sahf
idivl
movsb
out
dec
jnp
ljmp
mov
inc
xchg
and
pop
or
fisubrs
push
mov
lcall
add
fisttps
fimuls
adc
dec
push
rol
sbb
jl
aad
mov
adc
push
inc
lds
mov
jg
jmp
adc
or
cmpsb
lock
jmp
in
incl
loop
and
inc
push
inc
xlat
xchg
push
mov
fisubl
xlat
dec
pop
inc
hlt
xlat
xor
xor
jmp
sahf
aaa
xor
jnp
jecxz
jns
shl
dec
sahf
test
mov
lds
lock
dec
testb
test
add
add
ja
lea
cmpsl
hlt
jo
adc
cwtl
dec
jecxz
andl
fadd
cmpsw
aaa
sbb
dec
out
lods
ss
jne
xor
insl
outsb
into
and
xor
adc
frstor
test
xor
jmp
test
xchg
popa
mov
lods
lods
int
subb
loopne
xor
push
rorb
adc
inc
xchg
xchg
mov
mov
inc
cltd
cmp
movsb
lock
mov
arpl
loop
jecxz,pt
insl
jbe
xchg
push
popf
jnp
cmp
xchg
pop
jns
mov
arpl
jmp
fildl
xchg
pop
rcl
jne
and
pop
jp
add
xchg
xor
inc
and
data16
xchg
pop
clc
aaa
add
sub
add
sbb
add
xor
add
add
and
clc
mov
add
sti
lahf
add
sti
mov
add
out
add
filds
cli
lcall
add
decl
add
lcall
add
incl
jmp
mov
jmp
incb
jmp
filds
in
sti
mov
ljmp
add
mov
add
decl
add
lcall
add
sti
filds
out
add
sti
fiadds
sti
incl
out
fiadds
cld
lcall
add
sti
into
add
mov
add
dec
add
incl
sti
out
add
lcall
add
sti
incb
call
dec
add
filds
jmp
mov
cli
ljmp
add
sti
out
add
sti
scas
add
sti
fiadds
ljmp
add
sti
out
add
incb
jmp
sti
mov
add
ljmp
add
sti
scas
add
lcall
add
sti
mov
add
out
add
sti
out
add
sti
into
add
dec
add
sti
scas
add
sti
iret
add
decl
add
dec
add
lcall
add
filds
cld
ljmp
add
dec
add
sti
popl
clc
lcall
add
sti
fiadds
out
sti
sahf
add
sti
out
add
sti
mov
add
incb
sti
sahf
add
sti
incb
in
sti
sahf
add
sti
scas
add
sti
out
add
sti
fiadds
in
out
add
ljmp
add
ljmp
add
sti
mov
add
incb
sti
sti
incb
sti
lcall
add
sti
incl
cli
out
add
mov
add
sti
fiadds
jmp
out
add
sti
out
add
sti
into
add
sti
fiadds
sti
sti
mov
add
filds
out
sti
out
add
incb
mov
add
decl
add
fiadds
clc
sti
fiadds
sti
popl
call
sti
scas
add
out
add
fiadds
ljmp
add
mov
add
dec
add
sti
scas
add
sti
iret
add
out
add
sti
scas
add
out
add
out
add
incl
cld
ljmp
add
sti
incb
std
lcall
add
decl
add
ljmp
add
sti
incl
ljmp
add
out
add
sti
mov
add
sti
mov
in
sti
scas
add
sti
into
add
mov
add
dec
add
ljmp
add
dec
add
fiadds
jmp
dec
add
out
add
incb
ljmp
add
sti
mov
add
dec
add
decl
add
decl
add
fiadds
cld
mov
add
sti
incl
jmp
filds
cli
sti
incl
sti
sahf
add
sti
fiadds
clc
mov
add
mov
add
lcall
add
sti
iret
add
dec
add
sti
mov
sti
decl
add
sti
filds
jmp
sti
sahf
add
decl
add
mov
add
sti
mov
dec
add
sti
fiadds
in
sti
filds
incl
stc
sti
popl
stc
sti
into
add
dec
add
incl
in
mov
add
sti
fiadds
in
sti
filds
jmp
out
add
dec
add
sti
sahf
add
sti
into
add
dec
add
lcall
add
out
add
sti
incb
stc
sti
fiadds
jmp
incb
jmp
dec
add
incl
dec
add
sti
fiadds
in
incb
clc
sti
out
add
sti
scas
add
sti
lahf
add
dec
add
sti
mov
add
sti
mov
add
filds
jmp
lcall
add
sti
into
add
ljmp
add
dec
add
sti
popl
in
mov
add
mov
add
sti
scas
add
mov
add
sti
mov
add
fiadds
sti
sti
incl
in
decl
add
sti
incb
cld
sti
popl
in
incl
cld
decl
add
sti
scas
add
sti
popl
ljmp
add
sti
lahf
add
mov
add
sti
mov
add
filds
jmp
incl
out
out
add
lcall
add
sti
popl
ljmp
add
sti
sahf
add
sti
scas
add
filds
clc
sti
mov
cld
sti
scas
add
sti
mov
add
incl
jmp
popl
jmp
lahf
add
out
add
sti
into
add
sti
lahf
add
sti
sahf
add
sti
incb
ljmp
add
out
add
out
add
out
add
sti
mov
add
filds
ljmp
add
dec
add
sti
scas
add
sti
out
add
incb
out
incb
in
sti
scas
add
sti
filds
cli
sti
lahf
add
sti
into
add
sti
sahf
add
dec
add
sti
incb
ljmp
add
sti
filds
clc
fiadds
out
sti
scas
add
sti
out
add
filds
std
mov
add
lcall
add
sti
fiadds
stc
lcall
add
decl
add
incb
out
incl
jmp
scas
add
sti
iret
add
sti
sahf
add
dec
add
mov
add
decl
add
lcall
add
out
add
decl
add
sti
into
add
filds
in
mov
add
ljmp
add
sti
out
add
out
add
sti
popl
call
incb
in
sti
incb
cli
dec
add
sti
fiadds
cld
incb
jmp
lahf
add
sti
sahf
add
dec
add
sti
mov
jmp
fiadds
ljmp
add
decl
add
sti
scas
add
out
add
dec
add
ljmp
add
sti
into
add
mov
add
ljmp
add
ljmp
add
mov
add
sti
incl
in
sti
incl
jmp
incl
jmp
into
add
sti
incb
clc
ljmp
add
sti
fiadds
out
sti
iret
add
out
add
fiadds
call
mov
add
sti
out
add
dec
add
dec
add
incl
jmp
lcall
add
mov
add
sti
mov
ljmp
add
mov
add
dec
add
sti
incb
call
sti
into
add
sti
incl
std
sti
out
add
sti
into
add
incl
clc
lcall
add
incl
in
sti
incl
out
sti
into
add
mov
add
lcall
add
lcall
add
sti
mov
jmp
incb
out
sti
out
add
ljmp
add
sti
popl
cli
sti
sahf
add
filds
clc
fiadds
cli
sti
mov
add
sti
iret
add
sti
mov
jmp
mov
add
sti
lahf
add
sti
mov
add
sti
into
add
out
add
sti
mov
out
dec
add
dec
add
mov
add
filds
sti
sti
mov
cli
sti
into
add
sti
mov
add
filds
cli
sti
into
add
sti
mov
add
sti
mov
clc
ljmp
add
incl
incb
stc
sti
iret
add
sti
into
add
sti
into
add
sti
incb
in
out
add
fiadds
stc
mov
add
dec
add
sti
lahf
add
sti
mov
add
mov
add
sti
mov
add
sti
sahf
add
sti
incb
jmp
scas
add
sti
incb
sti
out
add
sti
out
add
sti
out
add
sti
into
add
out
add
sti
scas
add
sti
into
add
lcall
add
sti
popl
out
sti
out
add
decl
add
sti
mov
add
incb
filds
mov
add
sti
lahf
add
ljmp
add
incl
jmp
mov
add
dec
add
mov
add
out
add
sti
lahf
add
out
add
sti
mov
add
sti
iret
add
sti
out
add
lcall
add
sti
lahf
add
sti
scas
add
sti
mov
add
sti
scas
add
sti
popl
out
sti
out
add
mov
add
sti
lahf
add
dec
add
sti
scas
add
sti
scas
add
sti
mov
jmp
scas
add
sti
lahf
add
decl
add
mov
add
sti
fiadds
in
mov
add
sti
popl
std
ljmp
add
dec
add
dec
add
sti
out
add
dec
add
incl
stc
sti
fiadds
cmp
add
add
add
add
xor
add
add
add
push
add
sbb
add
add
add
or
add
add
add
add
add
push
add
push
add
push
add
dec
add
dec
add
dec
add
inc
add
add
add
mov
add
add
outsl
add
push
add
add
add
jbe
aas
add
add
add
add
add
add
add
out
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
lret
add
add
add
xor
cmp
xor
xor
inc
add
add
inc
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
dec
add
push
add
push
add
js
insb
add
js
jae
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
pop
add
and
push
add
inc
add
add
dec
add
add
pop
add
add
add
bound
sbb
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
dec
add
push
add
push
add
popa
add
je
outsb
add
jae
outsb
add
add
add
jo
js
ja
add
outsl
add
add
add
inc
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
xor
xor
sub
and
xor
add
and
cmp
xor
sub
and
xor
xor
xor
add
add
xor
or
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
jne
push
add
push
add
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
test
add
push
add
push
add
js
insb
add
js
jae
and
xor
cmp
cmp
add
add
add
add
add
or
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
dec
add
push
add
push
add
js
add
add
add
sbb
add
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
push
add
push
add
popa
add
je
outsb
add
jae
outsb
add
add
add
jo
js
ja
add
outsl
add
add
add
inc
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
and
xor
xor
xor
add
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
add
add
ss
add
add
add
ss
add
add
add
add
add
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
gs
xor
fs
insb
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
dec
jae
outsb
jne
