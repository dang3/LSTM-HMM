push
mov
sub
mov
mov
mov
xor
mov
xor
xor
add
sub
xor
mov
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
add
add
mov
push
push
call
add
xor
push
push
call
xor
test
ja
mov
sub
mov
push
push
call
add
push
push
call
mov
xor
mov
leave
ret
int3
push
mov
sub
mov
mov
xor
mov
add
xor
test
jge
mov
add
mov
sub
add
jmp
xor
add
mov
add
add
cmp
jb
mov
mov
mov
sub
mov
mov
mov
xor
xor
xor
add
push
push
call
pop
sub
mov
add
cmp
jb
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
push
call
mov
add
sub
push
push
call
mov
xor
push
push
call
sub
push
push
push
call
test
js
mov
mov
push
push
call
add
add
mov
jmp
xor
add
add
cmp
je
cmp
je
cmp
je
cmp
je
sub
mov
mov
add
mov
mov
jmp
mov
sub
sub
sub
sub
push
push
push
call
jmp
xor
push
push
call
push
call
push
push
call
add
mov
jmp
xor
test
jle
mov
xor
mov
push
call
mov
xor
push
push
call
mov
jmp
mov
push
push
call
push
call
xor
push
call
xor
xor
mov
xor
sub
mov
add
add
cmp
jb
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
xor
mov
mov
mov
add
mov
add
cmp
jb
xor
add
add
mov
mov
add
cmp
jb
push
push
call
mov
add
mov
mov
sub
sub
xor
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
call
xor
mov
push
push
call
pop
test
jns
mov
mov
mov
mov
mov
jmp
mov
sub
add
add
cmp
jb
push
call
mov
push
push
call
push
call
push
call
mov
add
mov
add
mov
leave
ret
int3
push
mov
sub
cmp
je
cmp
je
cmp
je
cmp
je
push
call
add
sub
mov
mov
mov
jmp
mov
sub
xor
mov
sub
push
push
call
jmp
mov
mov
mov
mov
mov
push
call
jmp
mov
mov
add
push
call
mov
sub
jmp
call
push
call
test
jno
mov
mov
mov
xor
mov
xor
jmp
mov
xor
add
xor
mov
mov
add
cmp
jb
mov
mov
push
push
call
add
mov
mov
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
leave
ret
int3
int3
int3
int3
push
mov
sub
xor
mov
mov
push
push
push
call
pop
pop
mov
add
sub
push
push
call
pop
pop
sub
mov
push
push
push
push
call
pop
pop
push
push
push
call
pop
pop
mov
xor
mov
sub
push
push
push
push
call
pop
pop
push
push
push
call
pop
pop
cmp
je
cmp
je
cmp
je
cmp
je
xor
test
jbe
sub
xor
mov
add
push
push
call
pop
sub
add
xor
push
push
push
call
pop
pop
sub
jmp
push
push
push
call
pop
pop
mov
sub
mov
mov
push
push
call
pop
pop
jmp
test
js
mov
mov
mov
mov
mov
push
push
push
push
call
pop
pop
jmp
push
push
push
call
pop
pop
xor
mov
mov
xor
push
push
push
call
pop
pop
mov
xor
mov
xor
add
cmp
jb
xor
mov
jmp
xor
push
push
push
call
pop
pop
mov
push
push
call
pop
pop
push
push
call
pop
pop
push
push
push
push
call
pop
pop
jmp
xor
add
sub
mov
mov
mov
mov
add
cmp
jb
push
push
push
call
pop
pop
xor
push
push
call
pop
add
mov
push
push
call
pop
addl
mov
mov
mov
sub
xor
add
cmp
jb
push
call
add
xor
mov
xor
mov
mov
mov
sub
add
cmp
jb
push
call
leave
mov
mov
xor
sub
push
push
push
call
pop
mov
mov
mov
mov
push
push
call
pop
sub
mov
mov
push
xor
mov
add
xor
mov
mov
sub
add
cmp
jb
xor
mov
push
push
push
push
call
pop
push
push
call
pop
mov
ret
int3
push
call
xor
sub
sub
push
push
call
mov
sub
pmaxub
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
xor
push
push
call
mov
call
call
mov
push
call
push
call
mov
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
jmp
jmp
jmp
mov
imul
add
add
add
add
add
inc
jns
outsl
inc
gs
jno
push
add
add
add
xchg
add
add
add
push
popa
fs
add
mov
add
add
add
add
mov
add
addr16
push
data16
jne
popa
ja
push
add
add
sub
add
add
add
add
mov
add
add
js
add
add
inc
popa
pop
jae
popa
loope
add
add
add
add
dec
gs
jae
popa
dec
jae
add
and
add
add
add
add
fdivrs
je
jne
outsl
inc
bound
jo
gs
add
jo
push
push
imul
popa
addr16
jns
imul
add
add
push
imul
add
add
add
add
jbe
dec
jne
ja
gs
push
outsl
imul
add
jge
push
cmp
out
add
add
imul
imul
add
add
test
add
add
inc
jns
jns
jae
sbb
add
add
insb
push
jns
push
je
gs
add
dec
imul
outsw
jae
or
add
add
inc
jns
outsl
jb
inc
jns
add
jbe
outsl
dec
add
add
sub
add
inc
popa
jb
ja
jno
jo
jbe
insb
add
add
dec
popa
pop
gs
jb
je
ja
add
add
mov
add
add
in
add
mov
outsb
add
add
add
push
insb
jns
popa
fs
popa
add
add
ljmp
arpl
imul
add
add
add
inc
add
add
add
add
jno
arpl
jns
outsl
push
add
add
push
insl
popa
je
imul
arpl
add
add
add
addr16
arpl
push
push
add
add
add
push
je
jns
gs
jne
imul
add
dec
arpl
je
insl
add
add
add
add
add
add
dec
push
arpl
add
add
pop
insl
dec
jns
imul
add
inc
inc
jne
outsl
push
add
add
iret
mov
add
add
add
dec
outsl
je
insb
jb
jns
popa
add
inc
jns
js
outsl
inc
popa
add
add
jmp
jns
outsl
insl
outsl
add
mov
add
dec
outsl
push
jne
outsl
add
mov
push
jo
arpl
addr16
jae
data16
add
mov
add
test
data16
jne
popa
dec
jno
jne
add
add
add
add
inc
popa
jbe
bound
imul
add
add
cmp
add
add
add
or
add
add
add
add
pop
jne
imul
js
add
push
addr16
arpl
gs
bound
push
jno
add
add
jns
jp
bound
add
bound
imul
add
add
popl
add
mov
add
add
int3
add
add
jno
arpl
add
add
add
add
cmc
mov
add
dec
aam
add
add
add
sbb
add
add
add
add
add
imul
add
add
fucomip
add
dec
mov
mov
push
add
add
add
imul
imul
add
adc
push
add
add
sti
movb
add
push
jne
or
bound
jbe
arpl
popa
add
add
add
add
sub
jno
insb
bound
dec
je
insl
push
add
add
add
pop
add
push
add
add
arpl
bound
add
push
add
add
add
add
je
dec
gs
add
add
add
add
add
je
jae
inc
arpl
add
add
xchg
cmpsb
dec
jns
popa
jb
push
inc
addr16
jno
add
add
push
outsl
arpl
add
add
je
test
add
add
add
push
add
or
add
add
sub
gs
popa
fs
arpl
jae
pop
jne
add
lock
push
gs
je
insw
add
add
in
add
add
inc
add
add
add
push
imul
add
mov
add
imul
add
fiadds
add
add
add
clc
inc
jns
gs
je
add
add
add
add
push
outsb
insl
jo
data16
push
push
add
dec
gs
addr16
jb
imul
add
jp
jno
addr16
jp
push
add
add
add
jo
je
adc
add
add
test
add
int3
add
add
add
jae
imul
add
add
dec
gs
jb
push
addr16
gs
add
dec
jns
outsl
je
add
rclb
bound
je
insl
add
add
add
add
jbe
push
popa
push
popa
fwait
add
jl
mov
add
add
add
sbb
insl
jns
imul
add
add
add
jb
jb
data16
outsl
ja
inc
jne
add
add
testl
insb
jns
imul
je
add
add
add
add
add
add
push
xchg
add
add
add
pop
add
arpl
popa
add
add
jmp
gs
add
add
add
arpl
jno
push
insl
jno
fs
jns
insl
pop
dec
xor
add
add
push
outsl
arpl
bound
add
add
jp
popaw
jb
dec
outsl
jo
jno
add
add
add
pop
add
dec
imul
push
add
add
add
add
add
bound
add
add
jp
outsl
inc
jne
ja
popa
add
scas
add
add
add
add
add
push
jns
jno
imul
popa
add
add
add
dec
jne
arpl
push
jae
pop
popa
add
add
add
add
mov
add
add
add
add
add
add
add
add
jne
jp
jns
gs
add
inc
imul
add
add
add
out
add
add
push
outsl
push
popa
data16
jns
jp
add
add
add
add
test
add
add
add
addr16
jbe
jo
add
popa
add
add
add
add
add
add
add
add
add
rolb
add
add
add
add
add
add
push
push
jns
outsl
arpl
outsl
jo
outsb
jp
add
add
add
and
push
sub
add
std
add
add
add
lds
dec
add
add
add
inc
add
inc
jns
gs
imul
imul
add
add
imul
je
imul
add
add
add
add
data16
imul
bound
add
add
add
add
add
out
add
add
add
add
jo
jae
data16
add
add
dec
jb
jp
jo
outsl
push
jo
add
add
popa
imul
add
dec
popa
dec
jno
imul
jns
dec
outsb
imul
ja
insl
imul
add
add
add
inc
add
add
or
add
add
dec
data16
jae
add
add
addr16
js
jne
add
movl
sub
dec
push
addr16
add
add
add
add
add
add
add
add
bound
outsl
je
jbe
data16
imul
add
outsb
arpl
jno
dec
popa
inc
jb
popa
add
add
add
add
add
push
jne
bound
add
add
add
add
pop
je
jne
add
add
add
arpl
add
popf
add
add
bound
popa
je
jo
je
bound
add
adc
xchg
add
add
add
dec
jb
jne
jns
jbe
gs
add
dec
popa
ja
dec
outsl
ja
pop
popa
jae
inc
insl
inc
ja
imul
add
xor
add
add
add
dec
js
jns
gs
popa
bound
add
add
scas
add
mov
add
add
push
jns
insb
push
add
add
bound
gs
outsb
imul
add
add
add
imul
fs
inc
push
push
inc
add
add
add
add
add
add
add
add
add
add
imul
pop
jns
add
add
daa
add
add
dec
data16
inc
jns
popa
bound
add
dec
arpl
outsl
dec
outsl
push
jns
insl
add
add
add
bound
arpl
add
add
inc
popa
arpl
gs
imul
add
add
add
push
push
je
gs
push
jne
push
push
imul
add
inc
add
pop
jae
imul
jp
jns
imul
jb
gs
xchg
add
sub
add
add
cmpsl
add
add
add
add
jns
imul
add
add
push
bound
jne
add
add
add
add
push
imul
add
outsb
push
fs
popaw
insb
jne
add
add
push
jns
js
jne
popa
add
popf
add
addr16
popa
insl
jne
insb
dec
jns
jns
dec
add
add
add
add
add
inc
popa
jbe
bound
jne
jne
push
jne
add
add
add
add
add
add
add
add
je
add
add
add
imul
bound
outsl
jo
add
clc
add
add
add
add
js
dec
gs
addr16
add
add
push
jns
popa
jo
ja
popaw
add
inc
js
jns
jbe
popa
insb
arpl
add
add
add
add
add
je
add
stos
add
add
add
add
add
add
add
add
add
add
add
add
add
add
roll
jne
popf
add
add
add
outsb
push
add
add
or
add
jbe
jae
imul
bound
imul
add
add
scas
add
add
gs
imul
insb
add
add
push
jns
insb
outsb
outsl
bound
jns
add
pop
mov
add
add
add
add
push
inc
jp
outsl
jo
push
add
push
push
jns
jns
imul
mov
cmp
add
add
add
add
data16
jp
dec
popa
fs
add
push
outsl
insl
outsl
jbe
dec
popa
jae
push
jo
add
add
add
add
add
add
add
add
jb
insb
jbe
outsl
dec
push
gs
jb
add
add
push
imul
push
add
add
add
jne
imul
add
add
imul
jne
insb
add
push
outsl
ja
jo
add
dec
pop
add
popa
jae
push
imul
add
add
add
add
add
push
imul
inc
add
add
add
inc
add
add
add
add
add
add
inc
outsl
bound
insb
outsb
jbe
add
add
cmp
dec
outsl
insb
jns
jb
outsl
push
add
dec
imul
outsl
add
leave
add
push
insb
jp
data16
add
faddl
loop
add
push
add
add
push
add
js
push
insb
add
add
sub
inc
imul
imul
dec
insb
fs
bound
outsb
push
imul
add
add
add
add
int3
add
add
add
add
push
outsl
popaw
push
dec
add
add
xchg
add
add
add
add
into
push
je
imul
add
add
add
dec
xchg
add
jp
add
add
add
add
jne
jne
jns
imul
jp
add
inc
imul
pop
outsl
add
mov
add
sbb
add
add
pop
adc
jno
imul
add
add
imul
jno
add
adc
add
add
add
add
add
push
jb
popa
imul
ja
add
add
add
add
add
arpl
jne
add
jbe
jp
push
popa
outsl
push
lret
add
add
add
inc
jbe
imul
inc
push
push
imul
popa
bound
add
add
imul
js
add
add
addl
jns
push
js
je
push
add
add
add
add
add
add
add
add
add
dec
add
add
add
inc
gs
jo
je
add
add
add
push
gs
imul
lock
add
add
add
add
dec
popa
jo
inc
ja
jns
jp
gs
push
aaa
add
add
insb
jno
jns
jns
ja
jo
add
add
add
imul
dec
popa
je
dec
outsl
jp
add
add
movb
js
jns
bound
add
dec
add
add
add
inc
add
add
add
add
mov
add
adc
add
add
rolb
add
add
inc
outsl
dec
popa
jo
outsb
jns
add
add
js
dec
jns
gs
add
add
add
addr16
push
add
add
add
addr16
add
add
add
add
inc
add
add
add
fiaddl
add
push
popa
jb
push
jne
outsb
add
add
xchg
pop
outsl
dec
outsl
jno
js
push
js
add
add
add
add
outsl
bound
outsl
jno
dec
outsl
js
add
add
push
outsw
arpl
outsl
jb
add
rolb
add
add
aam
add
imul
insb
add
add
add
add
add
add
add
inc
gs
gs
imul
jo
add
add
add
add
add
add
add
add
mov
add
jns
outsl
add
sub
add
add
inc
imul
arpl
add
insl
outsl
dec
imul
outsb
ja
add
mov
add
add
add
add
add
jne
jns
gs
jns
jne
jne
add
add
add
js
ja
push
add
add
add
add
add
add
add
fwait
xchg
add
add
je
js
add
add
add
xchg
add
add
add
pop
mov
add
cmp
add
jb
push
jp
add
add
add
add
add
add
outsl
inc
outsb
outsb
jns
add
inc
jns
push
gs
arpl
je
add
add
add
inc
jne
jne
outsl
jae
ja
add
add
add
add
add
add
xchg
add
pop
add
add
add
sahf
add
add
roll
cmpsb
add
add
add
jb
dec
imul
add
add
add
pop
jns
popa
jp
addr16
jae
add
add
add
add
add
inc
gs
jns
outsb
je
bound
fs
mov
add
add
add
add
ja
bound
gs
jns
add
out
or
add
inc
bound
fs
add
add
add
add
add
dec
imul
jbe
add
dec
gs
push
gs
jne
data16
add
add
push
gs
jne
outsl
addr16
add
add
cmp
push
outsl
push
push
bound
add
aam
outsl
arpl
jbe
mov
add
cmp
add
add
inc
imul
addr16
jns
popa
imul
add
add
jae
addr16
outsl
add
add
add
enter
or
add
add
scas
mov
add
fldl
add
dec
jne
outsl
insl
outsl
jb
push
add
add
ret
add
add
push
arpl
add
add
insl
insl
popa
bound
jbe
push
outsl
insl
popa
arpl
jns
jp
add
add
insl
jns
gs
imul
mov
pop
jp
jne
ret
int
into
pop
outsb
push
imul
insb
popa
addr16
add
xlat
add
add
add
add
inc
jns
jns
jne
add
add
add
add
add
add
add
fs
outsl
dec
popa
add
addr16
outsl
jp
outsl
jbe
add
dec
push
imul
push
popa
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
push
outsl
imul
add
add
ret
add
add
pop
imul
add
sub
je
js
push
js
inc
imul
add
int3
add
insl
ja
je
jne
add
dec
addr16
outsw
push
je
add
add
sub
inc
jne
insb
fs
jns
imul
push
bound
jae
add
pop
jp
jns
jne
popa
outsb
popa
add
adc
add
cmp
add
add
or
add
add
add
add
call
dec
bound
jno
add
add
sbb
inc
add
add
add
int3
add
add
add
add
outsl
je
js
add
add
push
add
push
add
pop
jne
imul
add
test
add
add
add
mov
add
cmp
add
add
data16
add
add
imul
jbe
add
jbe
add
push
popa
fs
imul
add
mov
add
add
add
add
add
add
jae
jns
imul
in
add
add
mov
add
pop
imul
add
mov
add
add
add
add
add
add
add
roll
in
add
jbe
jb
outsb
jne
insl
shrl
add
add
dec
bound
insl
outsb
outsb
outsl
dec
imul
gs
jno
je
jae
insb
imul
add
add
stc
add
add
lcall
add
add
dec
popa
insb
popa
fs
insl
ja
add
add
inc
popa
imul
gs
jae
jne
data16
push
jbe
gs
jo
bound
add
add
add
push
gs
arpl
popa
add
add
add
cltd
add
js
arpl
data16
add
add
inc
gs
insl
add
add
add
add
add
imul
dec
outsl
dec
add
add
push
jae
imul
jns
add
pop
outsl
push
jo
outsl
imul
add
add
les
add
add
add
mov
add
add
and
add
add
jge
add
or
add
add
add
xor
add
add
add
add
arpl
jns
jne
jne
add
add
jb
insl
jns
je
add
add
add
add
jp
dec
popa
jae
ja
je
add
add
add
add
add
add
gs
je
insb
insb
imul
jns
add
jo
outsb
jns
js
jne
popa
add
add
add
aas
jne
add
imul
js
je
add
add
add
add
add
dec
imul
add
add
add
add
dec
addr16
inc
imul
add
add
adcb
add
roll
stos
add
add
add
pop
jb
popa
pushw
pop
outsl
push
outsl
ja
add
gs
pop
outsl
push
pop
add
int
add
add
jb
outsb
popa
addr16
add
adc
add
push
add
jae
add
add
daa
add
add
faddl
out
add
add
add
cltd
add
add
insb
data16
push
jo
arpl
outsl
add
add
pop
ja
jns
jns
jne
jne
popa
dec
jne
add
xchg
push
push
popa
inc
jbe
jne
add
add
dec
js
addr16
arpl
je
add
add
add
add
data16
outsl
js
add
add
add
sahf
mov
add
add
add
addl
pop
popa
pop
gs
jns
imul
add
je
je
jbe
push
outsl
xchg
add
push
bound
js
arpl
jne
js
popa
add
add
add
add
add
add
add
add
add
add
add
add
js
outsb
insl
add
add
in
add
mov
push
outsl
jo
imul
jo
inc
imul
add
add
jae
push
outsl
add
add
add
add
addr16
scas
add
add
add
add
sbb
add
add
pop
jne
arpl
jns
arpl
add
add
add
add
add
add
add
add
fiaddl
add
mov
add
mov
jp
fs
imul
add
jb
dec
popa
addr16
insb
dec
add
add
add
inc
outsb
jae
push
jne
add
add
bound
popa
add
ja
outsl
outsb
popa
arpl
arpl
push
add
add
add
add
add
pop
js
gs
gs
jns
fs
dec
jbe
add
xchg
add
add
pop
add
jg
add
add
push
jns
insb
fs
popa
ja
bound
add
push
push
popa
bound
outsl
jo
jp
add
add
ret
add
add
gs
insl
imul
add
add
pop
ja
outsl
je
push
outsl
push
jb
add
push
gs
jno
insl
jne
jne
imul
jns
push
outsw
add
add
lahf
add
add
jae
add
add
add
add
add
add
jo
data16
add
dec
gs
arpl
add
enter
sti
add
add
jne
add
add
xor
add
mov
gs
bound
popa
insl
outsl
or
add
add
add
pusha
add
add
push
jne
outsb
jo
insl
imul
add
add
add
add
add
add
add
jecxz
lods
xor
sbb
daa
add
push
inc
popa
jp
pop
bound
add
inc
jns
imul
add
add
add
add
imul
add
add
jo
jb
inc
jb
outsb
imul
add
add
add
add
gs
outsl
je
push
imul
add
add
add
add
and
add
push
add
add
add
add
xor
add
inc
inc
add
inc
inc
add
sahf
inc
add
push
inc
add
imul
gs
xor
cs
insb
add
add
add
add
add
jne
add
mov
add
add
add
je
insb
popa
jae
dec
outsb
outsw
inc
add
add
je
gs
outsl
popa
jb
dec
popa
jns
jne
add
add
jb
imul
popa
jae
inc
add
add
gs
xor
fs
insb
add
call
add
add
add
add
add
push
in
add
call
add
add
add
add
add
add
add
add
add
or
add
add
add
add
bound
insb
gs
gs
add
jmp
cmp
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
js
bound
inc
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
cmp
add
cmp
add
add
add
jb
je
jb
jbe
inc
outsl
arpl
jne
outsl
outsl
js
push
outsb
pop
jbe
jno
out
mov
cmp
and
js
pop
pop
cld
cmc
push
fidivl
ficoms
dec
cli
popa
add
sbb
jge
push
add
mov
std
jge
fwait
ss
iret
adc
ficoml
fidivrl
adc
insb
jnp
ret
cltd
push
leave
xor
adc
pop
jns
mov
cmp
pop
mov
adc
in
test
mov
mov
mov
adc
sub
ss
xchg
imul
outsl
es
jge
mov
mov
xchg
jle
psllw
daa
and
xlat
adc
mov
mov
mov
xchg
mov
ss
adc
jge
push
pop
sub
adc
bnd
adc
jge
adc
jge
push
gs
adc
or
fcmovu
fstl
icebp
in
fadds
fs
mov
stc
sub
iret
adc
dec
mov
jno
std
dec
jle
sub
dec
lret
lea
icebp
jge
xchg
mov
sbb
jbe
fists
icebp
data16
adc
jge
imul
jge
imul
rorl
inc
adc
imul
ja
icebp
jge
adc
ficoms
lahf
jecxz
icebp
out
push
push
jae
pushf
xor
gs
or
pop
sub
xrelease
sub
mov
icebp
jge
aad
add
popa
andl
loope
jbe
stc
xchg
mov
adc
mov
and
mov
lock
sbb
jge
cli
mov
lock
mov
aas
clc
loop
sub
loope
adc
mov
out
xor
mov
idivl
cltd
ss
adc
icebp
jge
out
sub
orl
sub
jl
push
adc
jge
jmp
loop
iret
adc
shrb
sbb
cmpsb
ficomps
add
cmp
ss
outsb
cmc
add
lret
iret
adc
lods
rclb
icebp
std
push
xchg
nop
lcall
icebp
jge
fnstcw
mov
mov
stc
data16
icebp
jge
dec
sub
xor
push
add
pop
sbb
add
icebp
jge
sar
ficoms
in
icebp
mov
in
pop
mov
xor
mov
icebp
jge
xchg
mov
push
enter
cltd
mov
notl
icebp
jge
or
sub
popa
jb
cmp
pop
mov
adc
in
test
and
mov
into
adc
rcrl
lods
mov
stc
fldl
pop
push
xor
pop
mov
push
xor
cs
jl
fistpl
in
or
sub
xlat
pop
jne
ficoms
icebp
lods
push
icebp
jge
leave
mov
push
cmp
mov
push
icebp
repz
adc
push
rcll
icebp
mov
stc
fisttpl
mov
fstps
scas
inc
cli
out
xchg
adc
sahf
jo
mov
jl
mov
pop
into
mov
pop
cwtl
fisubs
pop
icebp
jge
stc
in
iret
adc
push
fcoms
icebp
jbe
push
jl
repz
jo
fs
loopne
add
push
mov
inc
mov
cltd
aad
mov
adc
or
sarb
repnz
jle
arpl
mov
fwait
gs
adc
addr16
jge
movsl
clc
xor
icebp
mov
ficoms
jno
aam
add
data16
jge
cltd
add
xchg
mov
insb
out
je,pt
lret
cwtl
mov
rcrb
push
icebp
pop
xor
jo
pop
pop
sub
fistpl
jae
aam
icebp
test
sbb
add
adc
idivb
mov
add
push
sub
inc
clc
fsts
pop
adc
push
ficoml
icebp
lcall
icebp
rcrb
js
das
pushf
data16
sbb
jge
push
mov
data16
and
jge
xchg
xchg
or
roll
ljmp
jge
mov
sub
pushf
ds
test
dec
mov
imul
or
out
add
cli
hlt
jge
adc
repnz
lea
add
xor
fisubl
adc
inc
mov
fs
or
cmc
jge
cltd
ss
xchg
int
push
repz
cmp
dec
push
ficoms
jl
fistps
ret
lea
jge
stc
adc
mov
cmp
shrb
sbb
hlt
jo
pop
add
lds
push
pop
fstps
mov
sub
inc
lcall
aad
pop
dec
xchg
adc
int
mov
push
js
andl
push
ficoms
jl
pop
pushf
inc
adcb
addr16
sbb
jge
or
pop
jge
cmc
cmpsb
cwtl
pushf
cmc
mov
iret
fwait
jmp
addr16
psllw
or
ss
push
cmc
mov
adc
inc
xchg
ss
mov
pop
fcom
ss
dec
cmp
jge
push
push
jle
adc
push
cli
and
into
adc
adc
pop
mov
fildl
sub
fxch
adc
addr16
icebp
jge
scas
add
xchg
cli
jg
push
pop
icebp
jge
xchg
test
jge
and
iret
adc
int
fnstenv
cli
xor
adc
fs
mov
sti
jge
push
pop
sub
iret
adc
jge
adc
cmp
and
pop
shll
inc
and
jge
ljmp
icebp
jge
fucomp
jo
mov
iret
mov
xchg
fstpt
adc
shrl
sbb
jge
mov
cmp
push
shl
jge
aam
cli
repz
pop
lea
jge
adc
jbe
push
add
pop
je
ficoms
icebp
mov
stc
add
adcb
jge
rcr
push
int3
adc
sub
or
js
js
pop
insb
jl
sub
add
xor
cld
jge
das
lea
and
adc
fnstenv
icebp
inc
iret
adc
jge
cmc
imul
ret
xlat
clc
bound
adc
repz
clc
mov
ret
lret
fcmovu
fcmovne
adc
or
fadds
and
adc
rcll
icebp
jge
popa
dec
ss
and
jge
fucomip
jge
jb
std
dec
jle
sub
std
adc
mov
adc
fcoms
and
adc
lea
jge
mov
icebp
test
jge
leave
icebp
jge
sub
incl
xchg
and
adc
or
adc
fisubl
cli
xor
iret
adc
dec
shll
add
aam
icebp
jp
mov
jge
mov
je
adc
daa
sbb
outsb
iret
pop
jne
rclb
icebp
shrb
push
outsb
lock
mov
ds
arpl
mov
fisubrl
adc
shrb
xchg
mov
iret
adc
inc
xor
icebp
jge
push
adc
or
pop
xchg
dec
outsl
enter
icebp
jge
cltd
dec
outsb
pop
xchg
xchg
jle
adc
ret
mov
adc
jge
ret
cli
cmp
adc
pop
loop
in
sti
cmp
into
stc
std
jnp
adc
in
ficoml
icebp
sub
inc
jmp
into
cmp
xor
in
xor
addl
push
pop
lock
pushf
ds
push
adc
jge
popf
mov
lcall
lret
lcall
cmovge
cli
into
adc
js
andl
test
into
adc
fistpl
icebp
jge
xchg
jmp
or
fcmovb
rcll
icebp
sub
adc
ror
pop
rcr
dec
adc
jl
jns
subl
adc
int
jecxz
sub
mov
xchg
jge
adc
repz
addr16
cld
jge
cltd
ss
icebp
jge
adc
inc
test
inc
pop
mov
iret
xchg
fmulp
and
mov
adc
pop
adc
jge
or
cmc
inc
call
fstl
icebp
xlat
fcom
rcll
icebp
mov
push
pushf
test
mov
sbbb
jge
mov
jge
popa
lock
adc
adc
push
hlt
lret
push
fadds
jge
sub
int
lds
addr16
push
icebp
jge
push
in
ja
dec
xlat
push
mov
rcrl
inc
fstpt
cmp
sahf
jo
mov
cmp
dec
dec
mov
adc
mov
or
icebp
fistpll
pushf
xor
pop
adc
pop
adc
andl
popa
xchg
stc
mov
iret
adc
repz
lock
cmpps
inc
jge
sub
sbb
lcall
push
adc
jge
fidivrl
xor
rcr
pop
adc
jg
das
lea
pop
mov
orl
add
pand
leave
adc
das
inc
pusha
jge
orl
jle
adc
and
icebp
jge
icebp
cmpl
movsb
rcr
mov
pop
lods
imul
icebp
jge
stc
sub
adc
jge
adc
sub
lret
inc
push
dec
call
fists
icebp
aam
stc
inc
jl
adc
pop
enter
jle
push
adc
add
jge
imul
mov
adc
jge
adc
into
mov
idivb
cmpps
xchg
scas
iret
adc
les
icebp
jge
adc
mov
mov
sub
add
repz
insb
mov
adc
mov
pop
adc
sbb
pop
pop
cmc
inc
push
aad
jl
adc
jge
adc
inc
mov
push
inc
pop
adc
jl
setp
pop
push
sub
adc
icebp
sahf
jne
sub
jge
insl
jle
adc
xlat
adc
push
adc
je
aas
adc
xor
adc
push
add
or
pop
loop
in
push
add
ficoms
adc
fcompl
add
adc
sbb
cmp
out
push
inc
dec
pop
rcr
lret
into
adc
into
mov
idivb
cmpps
icebp
jge
adc
push
mov
or
or
jge
setg
fcoms
icebp
test
sbb
icebp
ja
andl
mov
xchg
or
push
in
hlt
cld
or
add
mov
icebp
jge
ss
jge
cltd
lahf
in
and
mov
ficoms
jmp
data16
icebp
in
or
hlt
ja
rorl
aam
icebp
jge
sbb
add
mov
jmp
into
pusha
out
addl
lock
add
cmpsb
mov
fcomp
or
cmc
enterw
pop
lret
adc
fldcw
xchg
mov
push
icebp
or
ss
lea
idivb
xor
repnz
rclb
or
cmp
jbe
inc
idivb
lahf
mov
cmp
roll
add
adc
jge
push
xor
outsl
adc
jge
stc
jle
into
adc
sahf
jo
mov
and
in
aad
fldenv
mov
cmc
jge
stc
fwait
mov
adc
add
xchg
sti
jge
adc
jle
adc
mov
jge
lcall
iret
adc
jge
cmpsl
loopne
sub
or
cmp
pop
dec
adc
add
jnp
out
jp
in
adc
std
mov
cwtl
xchg
mov
inc
dec
inc
pop
sarl
adc
jle
adc
out
pusha
int
icebp
test
lods
mov
pop
cmc
jp
daa
stc
js
iret
adc
sub
xor
into
adc
das
pop
cmp
push
ficoms
add
adc
pop
mov
or
sbb
adc
xchg
adc
push
adc
fidivs
test
jne
cmp
into
pushf
pop
mov
iret
adc
repnz
mov
loopne
mov
jl
shl
jge
adc
cli
cwtl
popa
jp
mov
out
jge
cli
shlb
adc
cltd
add
aas
xchg
lock
repz
xlat
rclb
lea
repz
popf
iret
adc
stc
fldl
and
lock
pushf
ss
sub
ds
cmp
aad
icebp
mov
mov
not
stc
jge
pushf
dec
mov
pop
pop
cld
cmc
push
fiaddl
add
sbb
jge
sbb
jge
push
inc
sub
mov
or
and
add
in
xchg
jno
repnz
xchg
adc
call
add
add
xlat
adc
jge
sti
jmp
jge
arpl
mov
icebp
jge
lcall
adc
icebp
jge
daa
pusha
stos
lods
arpl
iret
clc
mov
adc
dec
lret
adc
or
inc
jge
test
xor
adc
dec
xor
or
cmpsb
jmp
into
lcall
push
in
hlt
mov
lds
icebp
sbb
ljmp
iret
fwait
cmc
mov
into
ja
mov
imul
push
stc
jge
repz
scas
lea
jge
outsl
lock
ror
adc
add
adc
sub
adc
jl
out
ret
aad
cwtl
lock
fwait
in
into
xchg
loopne
mov
mov
push
or
dec
fsts
sbb
sbb
rclb
fildl
adc
push
cld
mov
pop
outsb
pop
call
cmp
fstpt
sbb
add
push
icebp
jge
inc
mov
dec
push
jl
sbb
sbb
mov
test
fimull
rcll
icebp
gs
icebp
jge
popa
fisubl
icebp
sahf
jo
mov
jl
fmull
dec
push
jl
or
adcl
ficoml
lret
adc
sbb
and
jge
sahf
outsb
pop
jnp
jl
stc
lock
cli
ljmp
mov
sti
xor
dec
fdivr
add
and
adc
xlat
xchg
adc
jge
adc
jge
xlat
ss
inc
loopne
mov
loope
into
stc
daa
jg
adc
int3
rclb
icebp
data16
or
jge
je
das
inc
pusha
jge
sbbl
icebp
jge
adc
fdivrs
sbb
gs
cmpsb
fistl
shrb
subl
icebp
sarb
xor
rclb
push
push
roll
imul
sbb
pushf
dec
mov
and
cmp
sbbl
jl
sub
ficoms
jl
jmp
xor
into
cli
or
adc
dec
ret
les
outsb
mov
into
data16
mov
sbb
xchg
dec
mov
or
or
inc
sub
xchg
shll
adc
pop
ret
adc
jle
adc
jge
pop
outsb
lock
mov
jge
cltd
mov
cmp
sarb
adc
jge
repnz
xchg
dec
outsl
sub
fistpl
jne
iret
adc
ficoms
sbb
mov
enter
adc
ret
icebp
add
pop
in
sti
in
inc
sbb
adc
into
xchg
or
mov
sbb
ret
iret
cltd
dec
xorb
stc
jge
cli
mov
iret
adc
jge
xchg
nop
lcall
repz
icebp
jge
cltd
mov
mov
arpl
aam
icebp
xchg
xor
aad
mov
ljmp
adc
jge
jns
xchg
fpatan
enter
dec
or
jge
dec
and
lcall
xlat
adc
mov
adc
fisubrl
rclb
icebp
out
jo
in
jns
jne
sbb
ret
enter
push
in
fstps
jns
fimull
data16
into
adc
rcrl
lods
pop
sbb
stc
cmpl
dec
orl
adc
jle
adc
jge
or
cmc
hlt
inc
pop
test
inc
pop
outsb
sbb
stos
cli
movb
psubsw
lret
mov
icebp
jge
push
xor
cmpsl
adc
mov
xchg
cli
aas
or
cltd
cmp
fwait
jmp
or
shl
repnz
xchg
les
icebp
jge
jae
push
enter
push
fldenv
icebp
fldenv
jnp
sarl
popa
xchg
outsb
ret
cltd
into
xchg
inc
push
fldcw
adc
fchs
aam
icebp
or
icebp
test
lods
mov
out
inc
mov
add
push
ficoms
cmc
int
stc
or
adc
addb
add
rcrb
ret
lea
out
jge
cli
push
jnp
adc
fbstp
mov
mov
aam
out
or
adc
inc
leave
adc
jae
add
aas
xchg
lock
loop
es
mov
pop
adc
fcmovbe
lret
mov
mov
je
adc
mov
loope
into
jo
cltd
or
lea
jge
imul
es
jge
pop
outsb
lock
mov
or
adc
icebp
fcomps
xor
lret
adc
push
lock
mov
repz
jbe
sbb
fstpl
adc
jge
sub
daa
pusha
stos
pop
pop
add
lcall
jne
int3
adc
sub
jno
into
adc
dec
xor
or
lcall
push
fiaddl
and
icebp
jge
or
mov
addr16
icebp
jge
cltd
dec
mov
stos
cmp
add
pop
xchg
jge
sbb
jp
ss
adc
xchg
popa
dec
pop
stc
push
ja
adc
mov
adc
xchg
das
repnz
jge
xchg
mov
mov
aad
jle
adc
adc
adc
inc
test
xchg
jmp
jge
adc
mov
mov
lahf
mov
mov
into
adc
xchg
das
jle
xchg
jo
into
adc
addr16
or
xchg
scas
rol
add
push
hlt
mov
pop
push
jmp
jge
stc
and
adc
inc
movsb
cmp
sbbl
xchg
int3
or
mov
ficoml
rclb
icebp
pop
lds
shlb
inc
adc
xchg
idivb
adc
cmp
adc
or
hlt
mov
iret
pop
jne
int3
adc
addr16
push
icebp
jge
sub
daa
sbb
adc
mov
gs
and
push
stc
mov
adc
mov
pop
pop
sub
pop
sbb
je
mov
inc
jmp
jo
adc
mov
insb
out
fmuls
into
xchg
fcoml
dec
sbb
jecxz
into
pushf
xor
mov
scas
or
adc
mov
loopne
fimull
adc
or
icebp
repz
addr16
mov
push
mov
add
adc
adcl
sub
sub
adc
and
xor
out
mov
adc
mov
mov
cmc
fiaddl
les
icebp
sti
inc
dec
sbb
mov
mov
iret
xchg
mov
push
fdiv
data16
jge
repnz
xchg
dec
outsl
enter
or
into
pushf
or
lods
cwtl
lock
jge
cli
jb
into
adc
jge
adc
or
or
cmpsb
ficoms
mov
ficoms
and
jl
adc
outsb
sub
lret
add
and
stos
xchg
ss
and
and
std
lock
jo
in
or
dec
or
mov
add
ja
ret
int
or
inc
test
pushf
jecxz
fisttpll
icebp
jge
loopne
adc
adc
fdivrl
push
aaa
sarl
fwait
icebp
push
adc
dec
dec
adc
jge
sub
jge
movb
sbb
fsubrs
insb
mov
jge
cmp
sahf
jo
ss
fnstcw
adc
or
pop
pop
push
xor
orl
xchg
mov
inc
icebp
jle
lea
xor
out
stos
lcall
mov
push
cmp
sub
test
clc
jmp
jg
adc
and
pop
add
les
icebp
jge
outsb
icebp
jge
xchg
mov
jbe
ficoms
push
pop
outsb
sbb
addr16
int3
addr16
fs
pushf
mov
jl
cmpsb
pop
shl
inc
pop
fs
add
adc
popa
in
cmp
cmp
dec
out
jle
push
mov
fnstsw
xchg
mov
pop
cli
mov
iret
adc
ds
xlat
rcr
pushf
adc
xchg
sbb
icebp
jge
adc
cld
inc
gs
mov
mov
and
mov
push
add
adc
in
mov
data16
shrl
jbe
les
icebp
rcrl
hlt
fmuls
ja
mov
sub
xchg
jae
adc
cmpsb
inc
notb
jmp
adc
into
mov
ljmp
std
lock
popf
mov
xchg
fldl
ret
jns
jle
adc
repz
sbb
into
adc
add
adc
out
add
rorl
adc
into
xchg
jl
sbb
dec
sub
adc
xchg
das
repnz
or
jge
sbb
jge
clc
mov
sub
adc
inc
lds
icebp
push
cld
mov
push
aad
fistl
dec
jl
adc
jge
inc
out
jge
pushf
test
mov
xlat
mov
icebp
rcrl
ficoml
enter
sbb
inc
and
sbb
iret
pop
pop
fisubl
adc
into
pop
jecxz
jg
adc
imulb
iret
test
mov
jl
repz
and
pushf
inc
mov
cmp
dec
mov
sub
sub
rorl
add
jge
pushf
xchg
jp
mov
arpl
sub
mov
iret
gs
pop
std
ficoml
into
adc
and
call
mov
pop
popa
cmc
mov
icebp
jge
adc
add
push
pop
movsl
push
icebp
jge
cmp
sahf
jo
mov
jl
lret
lea
push
or
or
leave
adc
add
iret
adc
pushf
mov
jmp
add
and
rclb
inc
iret
adc
jge
mov
and
dec
flds
scas
jns
mov
rcll
into
mov
jmp
outsl
into
adc
pop
adc
mov
lock
xchg
mov
push
gs
jge
cli
sarb
bnd
pop
leave
mov
adc
inc
das
add
mov
das
cld
cmp
pusha
push
or
rclb
fadds
popf
pop
ss
xchg
add
popf
dec
es
out
xchg
add
aas
rclb
call
inc
pop
xor
adc
mov
adc
mov
aad
jge
aam
ret
or
mov
popf
gs
aam
ss
jno
push
or
xchg
mov
or
rclb
sarb
xchg
xchg
mov
fsts
adc
push
or
rclb
xchg
fwait
lret
dec
add
fwait
ret
aas
push
or
rclb
sarb
mov
pop
decl
cld
testl
movl
xchg
push
inc
rclb
dec
push
cmp
rclb
or
or
rclb
or
or
rcrb
add
ret
daa
push
adc
ds
call
sub
rclb
and
pop
xchg
lock
das
or
cmp
mov
aam
add
aam
or
stc
pop
rolb
leave
dec
or
mov
lahf
xor
lock
xchg
std
inc
rclb
adc
push
xchg
hlt
leave
mov
adc
or
loope
lock
pop
pop
cld
daa
or
cmp
or
shlb
mov
rclb
or
cld
cmp
cwtl
adc
or
loope
sub
rclb
cmp
push
imul
rolb
outsl
mov
xchg
into
aas
push
adc
aas
rclb
sarb
xchg
push
pop
jecxz
dec
notb
or
rclb
or
jmp
xor
fwait
and
leave
ret
jno
inc
out
leave
pop
push
inc
ret
lahf
fdivl
lahf
int
mov
xchg
iret
aas
push
adc
inc
rclb
sarb
aam
lahf
loopne
or
adc
rolb
add
add
add
add
add
add
add
add
add
xor
add
pop
add
orb
add
jo
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
call
add
add
add
add
add
add
add
nop
add
addb
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
pusha
add
add
add
add
add
add
add
jo
add
add
add
add
add
add
add
addb
add
add
in
add
add
add
dec
nop
add
test
add
in
add
add
add
hlt
cwtl
add
push
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
loopne
add
in
add
add
add
or
dec
add
dec
add
dec
add
dec
add
add
sub
add
xor
add
pusha
add
add
add
add
jp
add
jb
add
ja
add
js
add
jle
add
movsl
pop
add
pop
add
pop
add
add
bound
jns
pusha
add
pusha
add
add
add
xchg
xchg
test
pushf
orl
lcall
add
mov
xchg
mov
lea
mov
mov
dec
add
mov
fwait
mov
pushf
mov
lcall
add
pop
add
xchg
push
add
cltd
push
add
xchg
push
add
nop
push
add
xchg
pop
add
pop
add
adcl
adcl
test
push
add
xchg
test
pop
add
mov
movsb
mov
mov
test
nop
pop
add
xchg
pop
add
pop
add
lcall
pushf
lahf
add
mov
mov
add
xchg
pusha
add
xchg
popa
add
data16
cwtl
add
xchg
imul
test
cltd
insl
add
popf
outsl
add
mov
push
popf
mov
add
mov
outsb
add
lods
je
mov
jns
mov
test
add
mov
add
mov
xchg
nop
roll
mov
fiaddl
fstp
fldl
loopne
roll
out
out
out
call
add
in
in
add
lock
icebp
icebp
add
hlt
hlt
add
cmc
cmc
add
clc
clc
add
stc
stc
add
cld
cld
add
std
std
add
add
jo
add
nop
je
add
test
add
call
adc
fdivs
add
fstl
jmp
jno
ljmp
push
roll
incl
add
add
das
adc
add
add
jo
add
nop
add
mov
add
iret
pop
add
lock
add
mov
add
popf
push
add
scas
jno
inc
xchg
add
shlb
add
incl
add
add
das
add
add
add
jo
add
nop
or
add
or
add
push
add
jmp
adc
xor
lcall
jp
add
xchg
xchg
add
mov
add
aam
add
incl
add
add
das
add
add
pop
add
and
nop
add
add
add
lock
call
pop
add
xor
call
add
jno
add
xchg
mov
pushl
filds
incl
add
add
das
add
add
add
dec
add
add
iret
add
add
adc
add
push
movl
call
in
call
lock
incl
add
add
sub
das
add
push
add
jo
xchg
nop
add
add
add
add
add
adc
add
xor
add
push
incl
divb
add
xchg
incl
stc
mov
add
sar
add
incl
add
add
sbb
das
add
add
push
add
add
iret
add
adc
add
push
incl
ret
add
xchg
incl
fdivl
incl
incl
add
add
or
das
add
add
adc
add
add
add
add
lock
adc
add
incl
jno
incl
mov
add
mov
add
sar
add
incl
add
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
add
add
add
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
add
add
push
popl
popl
popl
orl
addl
add
push
orl
popl
jge
jnp
jp
jp
jns
jns
jns
jns
jns
jns
jno
add
add
push
popl
js
ja
js
js
js
js
ja
jbe
jl
jnp
jp
jp
jns
jns
jns
jns
jns
jno
add
add
push
orl
outsb
jno
outsb
outsb
outsb
outsb
outsb
outsb
outsb
insb
ja
jl
jnp
jnp
jp
jp
jns
jns
jns
xorl
push
popl
dec
or
movups
adc
adc
adc
adc
jge
je
je
je
je
jns
jns
jns
jns
jno
add
add
push
outsb
sub
or
movups
adc
adc
adc
outsb
jbe
jge
jge
jl
jl
jp
jp
jp
jns
jno
add
add
push
popl
inc
inc
dec
dec
or
movups
adc
adc
outsb
ja
jle
je
je
je
je
jnp
jp
jns
xorl
push
outsb
cs
das
sub
or
movups
adc
adc
ja
jle
jle
jle
jge
jl
jnp
jp
jns
jno
add
add
push
popl
das
das
inc
inc
inc
dec
or
movups
adc
jg
je
je
je
je
jl
jnp
jp
jns
jno
add
add
push
orl
inc
inc
dec
dec
or
movups
outsb
ja
cmpb
jg
jle
jge
jl
jl
jp
jno
add
add
push
popl
sub
das
das
sub
or
movups
addl
jle
jge
jl
jnp
jno
add
add
push
orl
das
das
inc
inc
dec
dec
dec
or
push
outsb
ja
addl
jle
jge
jl
jno
add
add
push
popl
and
sub
das
das
das
sub
or
outsb
ja
orl
orl
add
add
orl
sub
das
das
sub
or
jbe
orl
orl
add
add
popl
adc
sub
das
das
das
inc
inc
inc
dec
outsb
ja
xorl
jae
popl
outsl
jno
add
add
push
orl
and
sub
das
das
sub
popl
popl
bound
jo
jno
add
add
push
popl
sbb
sbb
sub
cs
das
sub
xorl
jae
popl
fs
jno
add
add
push
orl
adc
sub
das
das
sub
popl
popl
imul
add
add
popl
sub
push
sbb
pop
adc
cs
outsb
ja
xorl
jae
popl
bound
add
push
orl
sbb
sbb
sub
outsb
jbe
orl
orl
add
add
popl
pop
push
pop
pop
inc
xor
pop
adc
sub
popl
jae
jae
popl
addr16
jno
add
add
push
orl
push
push
push
push
pop
dec
dec
dec
pusha
popa
outsb
jbe
orl
orl
add
add
popl
aas
inc
inc
inc
inc
inc
inc
push
push
dec
dec
dec
dec
dec
outsb
ja
xorl
jae
popl
gs
jne
add
add
push
orl
cmp
sub
xor
xor
jbe
orl
orl
add
add
popl
pop
or
aaa
sbb
and
and
xor
popl
jae
jae
popl
pop
jne
add
add
push
orl
add
sbb
sbb
and
and
outsb
jbe
orl
orl
add
add
insl
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
insl
popl
jae
jae
jae
popl
xorl
push
popl
popl
popl
popl
popl
popl
add
push
addl
popl
addl
jne
add
add
push
addl
addl
addl
addl
jne
add
add
push
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jne
add
add
push
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
add
add
push
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
or
jne
or
jne
or
jne
add
add
add
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
add
push
add
push
add
push
add
push
add
push
add
push
add
add
add
pslld
add
add
pop
repnz
add
add
pop
repnz
add
add
pop
repnz
add
add
pop
repnz
add
add
pop
repnz
add
add
pop
repnz
add
add
pop
repnz
add
add
pop
repnz
add
add
pop
repnz
add
add
pop
repnz
add
add
pop
repnz
add
add
pop
repnz
add
add
pop
repnz
add
add
pop
repnz
add
add
pop
repnz
add
add
pop
repnz
add
add
pop
repnz
add
add
pop
repnz
add
add
pop
repnz
add
add
pop
repnz
add
add
pop
repnz
add
add
pop
repnz
add
add
pop
repnz
add
add
pop
repnz
add
add
pop
repnz
add
add
pop
repnz
add
add
pop
repnz
add
add
pop
repnz
add
add
pop
repnz
add
add
pop
repnz
add
add
pop
repnz
add
add
pop
repnz
add
add
pop
repnz
add
add
pop
repnz
add
add
pslld
push
add
push
add
push
add
push
add
push
add
add
add
add
add
add
add
or
mov
jle
add
push
add
pop
add
pop
add
add
bound
jns
pusha
add
pusha
add
imul
je
add
test
xchg
xchg
cltd
test
mov
xchg
mov
nop
mov
mov
mov
dec
add
xchg
push
add
cltd
push
add
adcl
cmpsb
mov
movsl
lea
mov
mov
pop
add
fwait
arpl
popf
pushf
bound
scas
mov
scas
mov
mov
lods
xchg
add
sahf
push
test
pushf
push
stos
lahf
outsl
add
xchg
outsl
add
jno
mov
jb
mov
mov
je
lods
movsl
jne
stos
test
jp
mov
jl
mov
test
add
mov
add
mov
lods
mov
mov
add
leave
movl
int3
lret
int
lret
xlat
roll
out
fadds
out
out
in
in
in
add
repnz
add
out
lock
lock
add
icebp
icebp
add
repz
add
hlt
repnz
repz
add
hlt
hlt
add
cmc
testb
div
add
stc
testb
idiv
add
idiv
add
clc
clc
add
cli
std
add
cld
incl
clc
clc
stc
add
cld
sti
add
sti
cld
add
incl
cld
std
std
add
add
lock
js
adc
mov
xor
pushf
call
scas
pushl
sar
add
pushl
add
incl
add
add
es
add
inc
push
add
pop
jo
add
add
iret
add
ret
add
call
add
pushl
add
call
jecxz
jno
jmp
pushl
add
incl
add
add
das
add
push
inc
add
jo
add
nop
je
add
test
add
call
adc
fdivs
add
fstl
jmp
jno
ljmp
push
roll
incl
add
add
das
adc
add
add
jo
add
nop
add
mov
add
iret
pop
add
lock
add
mov
add
popf
push
add
scas
jno
inc
xchg
add
shlb
add
incl
add
add
das
add
add
add
jo
add
nop
or
add
or
add
push
add
jmp
adc
xor
lcall
jp
add
xchg
xchg
add
mov
add
aam
add
incl
add
add
das
add
add
pop
add
and
nop
add
add
add
lock
call
pop
add
xor
call
add
jno
add
xchg
mov
pushl
filds
incl
add
add
das
add
add
add
dec
add
add
iret
add
add
adc
add
push
movl
call
in
call
lock
incl
add
add
sub
das
add
push
add
jo
xchg
nop
add
add
add
add
add
adc
add
xor
add
push
incl
divb
add
xchg
incl
stc
mov
add
sar
add
incl
add
add
sbb
das
add
add
push
add
add
iret
add
adc
add
push
incl
ret
add
xchg
incl
fdivl
incl
incl
add
add
or
das
add
add
adc
add
add
add
add
lock
adc
add
incl
jno
incl
mov
add
mov
add
sar
add
incl
add
ds
aas
inc
inc
inc
aas
ds
add
push
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
bound
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
ds
gs
gs
arpl
outsl
gs
pop
pop
pop
pop
pop
pop
push
push
push
push
push
push
pop
add
ds
pop
bound
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
pop
pop
popa
pop
pop
pop
pop
push
push
push
push
push
pop
add
ds
pop
inc
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
inc
dec
pop
dec
dec
dec
dec
dec
dec
pop
push
push
push
push
pop
add
ds
pop
dec
and
or
or
popa
popa
popa
popa
popa
pop
pop
push
push
push
pop
add
ds
pop
dec
sbb
or
or
or
dec
dec
dec
dec
dec
pop
pop
push
push
push
pop
add
ds
pop
dec
sbb
sbb
and
push
or
or
pop
pop
pop
popa
popa
popa
popa
pop
pop
pop
push
push
pop
add
ds
pop
dec
sbb
sbb
push
or
dec
dec
pop
popa
pop
popa
popa
popa
popa
popa
popa
popa
popa
popa
pop
add
ds
pop
dec
pop
sbb
sbb
and
and
or
pop
dec
dec
dec
dec
dec
dec
popa
popa
popa
popa
popa
pop
add
ds
pop
dec
adc
pop
sbb
sbb
dec
dec
pop
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
pop
add
ds
pop
dec
adc
adc
sbb
pop
dec
dec
dec
dec
dec
dec
popa
popa
or
popa
pop
add
ds
pop
dec
movups
adc
sbb
popa
pop
popa
popa
popa
popa
popa
popa
or
popa
pop
add
ds
pop
dec
xor
adc
dec
dec
pop
dec
dec
dec
dec
dec
dec
popa
popa
add
add
ds
pop
dec
inc
cmp
adc
sbb
dec
dec
pop
popa
pop
pop
pop
pop
popa
popa
popa
sbb
add
pop
pop
dec
ss
aaa
dec
dec
pop
dec
dec
dec
dec
dec
dec
popa
popa
nopl
add
ds
dec
xor
xor
cmp
cmp
cmp
pop
popa
pop
popa
pop
popa
popa
popa
popa
add
popa
pop
add
inc
bound
sub
sub
sub
cs
sub
dec
dec
dec
dec
dec
popa
popa
add
popa
pop
add
inc
bound
add
push
push
pop
pop
and
and
dec
dec
pop
popa
popa
popa
popa
popa
popa
popa
popa
add
popa
pop
add
inc
bound
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
inc
arpl
dec
dec
dec
dec
dec
popa
popa
add
popa
pop
add
inc
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
inc
push
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
pop
pop
pop
pop
pop
popa
popa
popa
popa
popa
pop
add
inc
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
add
inc
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
add
add
add
add
add
ds
ds
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ljmp
add
add
add
add
add
add
add
add
jb
add
jne
add
jns
add
jns
add
pop
add
pop
add
pop
add
popa
add
add
test
xchg
mov
xchg
mov
nop
dec
add
xchg
push
add
lcall
andb
add
int3
lret
add
out
add
jmp
in
add
icebp
icebp
add
cmc
cmc
add
stc
stc
add
incb
add
add
xchg
add
ret
iret
add
loope
add
out
incl
xor
incl
push
repz
jno
incl
xchg
idiv
add
sti
incl
incl
add
add
add
and
add
add
jo
add
nop
arpl
add
popl
add
cmpsb
add
pushl
push
dec
add
roll
xchg
faddl
mov
in
sar
lock
incl
add
add
add
push
add
push
sbb
add
add
nop
sub
add
inc
add
lock
add
lcall
xor
jno
push
incl
add
dec
add
filds
incl
add
add
add
add
add
add
push
jo
add
nop
add
or
add
push
lock
and
adc
cmp
call
jns
jno
cwtl
call
add
call
add
incl
add
add
adc
add
and
add
jo
add
mov
add
add
lock
js
adc
mov
xor
pushf
call
scas
pushl
sar
add
pushl
add
incl
add
add
es
add
inc
push
add
pop
jo
add
add
iret
add
ret
add
call
add
pushl
add
call
jecxz
jno
jmp
pushl
add
incl
add
add
das
add
push
inc
add
jo
add
nop
je
add
test
add
call
adc
fdivs
add
fstl
jmp
jno
ljmp
push
roll
incl
add
add
das
adc
add
add
jo
add
nop
add
mov
add
iret
pop
add
lock
add
mov
add
popf
push
add
scas
jno
inc
xchg
add
shlb
add
incl
add
add
das
add
add
add
jo
add
nop
or
add
or
add
push
add
jmp
adc
xor
lcall
jp
add
xchg
xchg
add
mov
add
aam
add
incl
add
add
das
add
add
pop
add
and
nop
add
add
add
lock
call
pop
add
xor
call
add
jno
add
xchg
mov
pushl
filds
incl
add
add
das
add
add
add
dec
add
add
iret
add
add
adc
add
push
movl
call
in
call
lock
incl
add
add
sub
das
add
push
add
jo
xchg
nop
add
add
add
add
add
adc
add
xor
add
push
incl
divb
add
xchg
incl
stc
mov
add
sar
add
incl
add
add
sbb
das
add
add
push
add
add
iret
add
adc
add
push
incl
ret
add
xchg
incl
fdivl
incl
incl
add
add
or
das
add
add
adc
add
add
add
add
lock
adc
add
incl
jno
incl
mov
add
mov
add
sar
add
incl
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
das
and
and
and
pop
push
push
sbb
das
das
and
and
and
pop
pop
push
sbb
das
adc
and
sbb
sbb
push
sbb
push
pop
or
and
and
pop
push
push
sbb
adc
sbb
pop
or
sbb
das
pop
movups
push
and
and
and
adc
sbb
das
add
push
adc
and
sbb
sbb
add
add
add
mov
and
and
add
sbb
das
das
das
das
das
das
and
and
and
and
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
add
incl
add
incl
add
incl
add
sbb
rcll
sub
sbb
add
jg
add
pushf
bound
jnp
adc
insl
scas
out
push
es
movsl
data16
cwtl
ja
jmp
mov
mov
adc
and
cmpsl
or
dec
stos
mov
add
fldt
cmp
jb
stos
mov
cmp
sub
inc
or
add
jns
fists
jl
ret
dec
xor
test
xorl
lahf
std
mov
pop
or
sbb
adc
and
pop
sub
mov
mov
add
lds
gs
mov
das
cmc
stos
inc
and
testl
roll
add
cmp
jmp
and
add
xchg
call
adc
or
add
or
jl
mov
mov
leave
movsl
lret
int3
rcl
scas
add
jnp
outsl
cmp
movsb
and
add
mov
hlt
aad
lret
imul
cwtl
add
sbb
push
iret
mov
das
xchg
xchg
filds
sub
inc
fisttpll
gs
and
fstpl
cmpsb
js
push
pusha
data16
mov
xor
sub
stos
jae
add
xchg
das
call
stos
data16
in
add
add
or
jge
and
add
push
loope
sub
pop
sub
and
xor
adc
mov
xchg
out
popw
add
sti
mov
arpl
add
sbb
push
ja
jmp
sub
mov
sub
lahf
fcmovnu
jo
mov
push
lods
mov
ss
and
add
out
cltd
lods
scas
outsl
loopne
sub
jbe
add
jb
adc
imull
add
jg
frstor
jmp
jecxz
push
jg
repz
mov
add
mov
xor
and
jmp
call
clc
loope
pushf
mov
mov
loop
dec
sbb
lahf
mov
xor
mov
or
loope
add
aam
xchg
into
push
or
push
adc
jg
jge
loop
fstps
popl
jge
loope
jbe
aas
popa
aas
and
insb
pusha
fiadds
push
adcl
push
cmp
andb
mov
sub
aas
sub
mov
xor
call
jno
add
mov
ja
add
fcompl
lahf
jb
mov
roll
xchg
jmp
jecxz
push
mov
outsl
cwtl
add
out
add
xchg
mov
inc
in
fisubrs
out
add
inc
aad
mov
add
and
jmp
mov
sbb
pop
popa
add
add
into
sbb
mov
das
mov
add
sub
jne
adc
inc
mov
ss
mov
int
push
sti
add
loop
lahf
or
push
data16
xor
iret
cmp
lock
roll
mov
ja
clc
sub
gs
add
daa
add
out
js
xchg
movsl
aas
adc
add
mov
repnz
mov
mov
fistpll
xor
cli
test
add
imul
adc
add
cld
add
and
outsl
stos
lea
in
lret
adc
add
sbb
dec
or
ret
sbb
dec
insb
rcrb
cmp
inc
xor
fsubrp
insl
add
push
push
add
jge
dec
lock
ret
inc
mov
and
in
cmp
cmpsl
dec
xorb
cltd
data16
or
jnp
repz
or
jo
mov
dec
mov
js
mov
lds
stc
sub
fisubl
mov
adc
pop
xor
add
mov
mov
push
pop
lea
adc
mov
dec
data16
mov
inc
lock
and
loop
jae
add
dec
fidivl
fwait
sub
jbe
inc
add
aaa
jmp
sub
insb
dec
fistps
push
jae
sub
mov
out
mov
movsb
xor
push
orl
in
scas
add
mov
aam
xor
add
pushf
cmpsl
and
outsb
pop
ja
cmp
and
in
inc
xchg
dec
cmpsb
pop
cmp
mov
lds
jg
dec
or
mov
jle
jnp
aas
push
jnp
or
into
ror
rcll
cmp
pop
sub
push
mov
js
jns
mov
or
adc
fsubr
loope
adc
mov
push
mov
inc
xchg
sbb
pusha
adc
push
add
clc
movsl
mov
push
pop
xor
inc
add
dec
and
adc
add
adc
add
in
iret
xchg
lret
insl
testb
mov
sti
imul
push
add
adc
lcall
mov
cmp
rcrl
mov
sbb
loop
loop
push
add
jnp
rcl
xor
add
push
xorb
dec
jge
data16
sub
xor
stos
ret
mov
lret
and
movsb
adc
dec
dec
jle
lret
mov
add
inc
jecxz
pop
arpl
loop
mov
add
lods
and
mov
push
push
rolb
movsb
mov
adc
in
into
sbb
les
jae
push
jecxz
js
mov
xor
add
lret
jnp
cld
xchg
ja
out
mov
add
sahf
push
aas
inc
fst
clc
ds
jns
push
add
jmp
push
xchg
vshufpd
jecxz
mov
imul
sbb
add
mov
out
push
out
fmull
sub
fs
sbb
dec
push
mov
xor
les
adc
sti
mov
jne
xchg
pop
scas
add
repz
push
mov
daa
pop
imul
cli
pop
cltd
mov
das
cli
sahf
mov
or
repz
and
inc
mov
sbb
push
sbb
add
scas
ret
mov
scas
cmp
loope
inc
gs
mov
or
inc
cmp
cwtl
stos
add
xchg
or
daa
idiv
mov
std
pop
mov
adc
adc
addr16
or
cmc
daa
add
cmp
sbb
add
push
cmpsb
and
je
xchg
lods
test
add
dec
push
dec
pusha
aam
sbb
xor
fstpt
push
mov
movsb
fnsave
and
outsl
inc
sub
notb
sub
xchg
jp
lds
mov
add
arpl
enter
ficompl
test
xchg
jecxz
xchg
cmpsl
rcrl
test
xchg
pop
cwtl
mov
add
in
push
pop
pushf
fwait
ss
push
ftst
sub
sbb
cli
or
stos
pop
test
aam
add
mov
mov
addr16
fnsave
les
mov
daa
add
pusha
dec
scas
add
sahf
jmp
push
push
rclb
push
add
cmp
add
xor
xchg
aad
add
push
aam
rol
cmp
imul
mov
arpl
add
js
xor
mov
and
cmp
lds
iret
loopne
xor
mov
xor
not
add
cmp
add
out
mov
test
sbb
loopne
add
out
adc
sub
cli
add
lock
inc
pusha
mov
daa
inc
andb
lods
mov
fimull
adc
icebp
xchg
adc
mov
dec
push
outsb
add
lcall
jl
and
or
add
lahf
push
pop
xchg
ret
dec
fadds
stos
push
jg
aas
jo
stos
pop
cwtl
inc
shl
cli
add
or
hlt
mov
push
lods
insb
popf
adc
cmpb
add
jnp
in
leave
inc
cmp
or
mov
imul
out
inc
pop
jg
shl
add
pop
scas
mov
fdiv
clc
mov
inc
inc
jecxz
out
mov
add
pop
cwtl
inc
xchg
adc
sub
mov
add
adc
ret
arpl
add
mov
cmp
test
fnstcw
push
mov
test
lock
add
out
cmp
add
fldl
addr16
in
mov
mov
fs
inc
pop
jl
out
cmpsl
mov
cli
imul
cld
leave
sti
cmp
insl
jno
call
aaa
hlt
mov
aaa
lret
dec
pop
ficoml
pop
test
shrl
mov
dec
push
cmp
sbb
inc
pop
add
dec
in
fdiv
sub
in
add
fwait
cmc
cld
mov
dec
jnp
imul
inc
in
pop
inc
iret
and
add
mov
dec
pusha
cltd
push
inc
jnp
or
jg
into
data16
push
inc
add
jns
movsb
imul
xor
icebp
sbb
add
mov
and
dec
ret
jnp
je
lods
jo
push
add
addr16
sbb
xchg
out
popf
dec
or
addl
pop
pop
jg
iret
sub
repz
xor
in
adc
push
shl
imul
invd
mov
dec
mov
jb
push
jns
pop
adc
cmc
cltd
or
or
xor
arpl
test
call
paddd
iret
cmpsl
jp
iretw
jbe
mov
mov
add
ret
cmpsb
shrl
daa
adc
sbb
dec
loopne
in
aas
mov
jl
nop
cmc
dec
xor
ss
xchg
add
repnz
xchg
arpl
pop
jns
lahf
dec
cld
push
add
stos
jge
mov
mov
dec
xchg
add
mov
addr16
iret
adc
into
add
jecxz
repnz
filds
inc
add
cmc
or
jo
inc
fs
mov
and
loope
sbb
shlb
mov
fists
push
in
xor
pop
repz
lea
xlat
popf
iret
jns
hlt
movsb
add
dec
cmp
pop
cltd
ja
push
xor
testb
test
pushf
sti
pop
in
in
add
fs
repz
mov
mov
mov
je
mov
jg
add
sub
xlat
mov
and
mov
les
mov
sbb
pop
xchg
or
inc
sub
inc
pop
add
mov
and
and
test
rolb
in
mov
lret
mov
and
xchg
or
xor
sub
add
icebp
gs
and
or
or
out
xor
roll
jecxz
sub
les
aad
xchg
jo
add
ljmp
sub
les
add
sbb
cmp
test
pop
mov
jns
add
inc
and
cltd
outsl
xchg
mov
add
dec
test
or
add
push
jne
adc
sti
cmp
fnsave
decb
lods
fs
add
pop
dec
xorl
jmp
add
icebp
push
popf
add
clc
data16
pop
add
pop
popa
imul
sub
pop
push
add
pushf
popf
xchg
jb
sbb
or
mov
gs
dec
sbb
add
add
shl
mov
and
nop
add
clc
jbe
mov
sub
push
aad
xchg
xchg
inc
mov
and
inc
sbb
mov
pusha
sub
sbb
sub
mov
loopne
jbe
add
mov
cmpsb
mov
insb
adc
add
mov
sub
lcall
add
not
fsubs
data16
dec
mov
cli
pusha
mov
or
jl
sbb
adc
incb
jns
arpl
push
fisttpll
loopne
add
arpl
outsl
sahf
xchg
sub
add
adc
lret
jecxz
mov
mov
imulb
dec
dec
sub
scas
imul
pop
rcr
pushf
dec
mov
sub
cmp
jge
push
iret
insb
std
jmp
dec
push
sub
push
xchg
lods
mov
divl
cwtl
add
add
jl
hlt
cmp
in
stos
xchg
mov
ljmp
clc
into
xchg
bound
jo
mov
sahf
add
inc
xchg
in
out
sti
mov
or
xchg
andb
pop
jg
and
adc
add
pop
jl
sbb
ret
sbb
movl
add
les
pop
sub
add
jecxz
jno
es
and
lock
fisttpll
pop
push
mov
loopne
lahf
int3
addr16
sbb
fsubrs
fdivr
jmp
ret
jb
pop
sbb
pop
or
arpl
cwtl
flds
jo
add
in
pop
test
out
and
xor
aad
das
test
sbb
mov
int
cmp
sub
fcoml
mov
dec
adc
dec
mov
add
out
push
dec
mov
ret
enter
inc
push
lea
pop
add
and
shl
pop
pop
and
ret
mov
mov
jl
add
pop
adc
mov
or
addr16
hlt
push
push
dec
pop
jmp
add
cli
hlt
test
cmp
dec
stc
and
pusha
cs
test
ss
hlt
jo
push
cmpsl
add
xor
std
setbe
es
repz
out
lret
mov
sbb
inc
inc
jl
call
pop
cmpsb
aad
rorl
mov
popa
adc
dec
hlt
popl
jne
and
cltd
das
pop
nop
hlt
rcr
pop
mov
sub
cmc
shlb
add
jo
xor
dec
pop
pop
jo
add
inc
icebp
jo
xor
fldt
mov
add
ret
fmuls
inc
fs
cmpb
sbb
jbe
sbb
gs
outsb
aaa
mov
rolb
sbb
sub
mov
fisubs
adc
xor
fidivl
push
sub
sti
aad
imul
aad
repnz
cmp
mov
add
pop
mov
cmp
test
daa
fcom
cmp
sahf
add
nop
mov
add
lcall
fistps
jp
push
add
in
ret
cwtl
arpl
fsubs
popl
sti
adc
xchg
pop
testl
add
out
add
mov
mov
push
mov
xchg
lock
push
xchg
add
mov
ja
ljmp
inc
add
xchg
ja
mov
popf
lret
inc
sbb
pop
pop
icebp
pop
scas
into
icebp
out
jns
jecxz
adc
sbb
add
or
add
int
std
lock
or
sub
add
inc
mov
dec
dec
sub
pop
xchg
sti
cmc
adc
jo
adc
aad
add
mov
xchg
movsb
add
aaa
data16
aaa
add
aam
pop
push
rcr
inc
sbb
insb
out
rcrl
sbb
pop
test
push
add
lret
enter
mov
stos
add
rcl
std
push
mov
shrl
jne
jl
dec
mov
cmp
dec
add
sahf
aam
arpl
into
and
push
loope
jbe
repz
add
aam
pop
cmpb
icebp
adc
inc
shll
jecxz
out
test
out
loop
les
add
jecxz
xor
je
mov
add
cmp
jns
and
aas
adc
and
sar
mov
mov
mov
repnz
adc
add
push
push
jne
leave
pop
inc
ljmp
jne
cwtl
das
push
hlt
cli
jbe
add
push
lea
dec
in
js
push
add
inc
xor
jns
ss
sub
add
test
aaa
fwait
bound
pop
push
fwait
aaa
cmp
lods
or
sbb
adc
cmpsl
jl
jecxz
sub
test
jb
xchg
and
xchg
lahf
sub
cmpsl
xor
cmc
test
and
mov
mov
lcall
inc
gs
lcall
out
add
inc
lock
sbb
xchg
fnstsw
stos
jb
jb
rolb
xchg
jg
cltd
dec
ljmp
add
pop
aam
pop
fidivrs
je
add
sbbl
jb
add
mulb
not
loop
outsb
dec
lods
add
pusha
adc
in
dec
clc
add
xor
push
addr16
mov
repz
jp
notb
fisttps
xchg
in
mov
mov
xchg
adc
or
push
cmp
pop
mov
ss
push
push
mov
sahf
cs
and
mov
lods
xchg
sub
je
mov
jnp
dec
ficoms
inc
pop
cmp
xor
mov
in
cld
adc
adc
xchg
push
outsb
loopne
mov
adc
imul
test
add
adc
add
sbb
add
mov
mov
ljmp
stc
loopne
jge
sbb
add
pop
add
add
out
rcll
jg
xor
xchg
or
sub
push
cmp
jns
adc
add
mov
pop
clc
lds
xchg
into
pop
loope
pop
cld
inc
sti
dec
push
aas
jae
mov
movsb
push
push
jl
scas
add
ljmp
or
jmp
and
cltd
ror
jae
inc
and
adc
jg
shlb
adc
lock
popf
inc
nop
call
fdivrs
mov
xlat
add
sbb
stos
aam
negb
add
popf
in
in
push
mov
mov
lods
add
fwait
dec
out
mov
mov
and
sub
adc
data16
sbb
aaa
jnp
jp
ss
and
xchg
pop
xchg
fildll
outsb
scas
adc
push
cmpsl
push
push
test
or
and
mov
xchg
add
bound
push
dec
add
rorl
xchg
repz
adc
xchg
pop
xchg
jae
push
sub
pop
test
aas
adc
fdivrl
dec
inc
dec
arpl
incl
test
nop
pop
negl
bound
js
add
xchg
and
cmp
inc
and
cwtl
add
pusha
mov
jmp
xchg
mov
xchg
pushf
push
cmpsl
jge
add
push
lods
jnp
xor
xchg
daa
orl
loop
push
add
lcall
fwait
mov
fcmovnbe
pusha
add
mov
and
dec
add
je
lahf
fsubs
ja
sahf
into
mov
add
pop
shlb
movsb
add
add
aaa
adc
pop
cmpsb
dec
xor
mov
add
push
loope
std
dec
cmp
xchg
out
cwtl
push
shrl
lods
loopne
add
or
dec
pop
cli
leave
enter
fidivrs
scas
xchg
xchg
dec
adc
xchg
add
or
and
add
fmuls
pop
jno
in
pusha
test
add
xchg
or
notb
add
stos
jp
scas
dec
pop
jg
enter
mov
sub
push
ljmp
inc
inc
popf
add
outsb
or
or
cmp
cmc
xchg
push
mov
data16
adc
and
pop
mov
js
sbb
aaa
mov
push
sahf
hlt
cmc
popa
pushf
and
call
xor
cmp
inc
add
loope,pt
sbb
stc
mov
mov
nop
jae
scas
mov
inc
jmp
hlt
jns
stc
mov
dec
xchg
add
orl
cmp
test
ret
lcall
icebp
jne
testb
add
shll
fiadds
pop
xor
mov
and
sahf
mov
es
add
pop
enter
sbb
movl
test
sub
cmpsl
mov
dec
outsl
mov
mul
imul
add
cmpb
pop
mov
nop
dec
mov
mov
inc
pop
inc
or
push
sbb
xchg
lods
add
shrl
cli
dec
out
and
add
shlb
fdivrp
xlat
add
data16
mov
push
mov
push
pop
aam
xorl
neg
dec
sub
pop
xor
rolb
cmpsl
mov
and
mov
int
lcall
das
push
inc
lds
add
xor
lahf
cmp
hlt
adc
lret
adc
les
add
mov
mov
std
cmpsb
add
xchg
or
pop
mov
add
lock
iret
jmp
aam
mov
movsb
pop
movsl
jge
roll
insb
adc
roll
pop
mov
sbb
mov
push
pop
lods
add
xchg
cmp
sub
add
push
mov
out
pop
outsb
jp
cmp
hlt
out
in
daa
xchg
mov
cltd
imul
and
mov
add
pop
lahf
push
ljmp
mov
add
jge
jo
add
fimull
in
sbb
adc
repz
mov
icebp
sbb
int3
cmc
imul
mov
mov
jmp
shrb
jbe
add
sbb
sbb
jno
ret
add
ds
fadd
xchg
inc
mov
xchg
loopne
int
shrb
add
adc
popf
out
outsl
js
or
push
popa
fstps
and
jo
add
or
jmp
rcl
repz
fiadds
push
jbe,pt
ljmp
int
add
add
xor
mov
add
and
add
imul
mov
dec
scas
out
dec
dec
cltd
sbb
lahf
xchg
cmc
pop
faddl
into
in
or
sub
and
add
mov
xor
in
push
imul
outsl
frstor
call
loopne
sti
rclb
test
repnz
pop
pop
aaa
push
cmp
add
mov
pop
movsb
xchg
mov
pop
add
xor
and
mov
add
push
sbb
fldcw
xor
shlb
ret
add
mov
or
fsubs
inc
xlat
add
notb
clc
sbb
je
xchg
repnz
mov
push
add
ret
les
nop
nop
xchg
cwtl
pop
add
cli
in
leave
rclb
add
idivl
dec
mov
cmc
add
cmp
mov
mov
add
pop
shll
leave
or
pop
flds
pushf
cltd
cmp
cmp
xchg
add
push
loopne
or
jb
inc
adc
push
add
movl
hlt
adc
xchg
push
add
mov
mov
gs
rorl
imul
in
inc
cmp
push
and
jo
xor
jmp
or
lds
jecxz
ja
lcall
scas
xchg
dec
push
and
mov
jb
sbb
test
dec
xor
mov
pusha
shll
or
mov
dec
mov
xchg
movsl
or
push
data16
inc
sub
pop
bound
stos
popa
cmp
addr16
stos
lret
out
pop
frstor
add
outsb
push
sbb
ds
xchg
mov
xchg
sbb
add
iret
stc
push
rol
aam
add
sbb
push
dec
jne
enter
mov
test
in
loop
add
add
cmp
cltd
test
fbstp
lds
pop
push
mov
pop
inc
xchg
add
in
xor
add
push
xchg
xor
mov
push
mov
les
pop
sbb
push
inc
rclb
mov
andb
fsubrs
loop
inc
lds
or
add
pop
or
push
fimuls
cmp
adc
or
sub
gs
add
subb
add
test
repnz
test
pop
movsb
push
push
out
stc
add
ljmp
mov
pop
sahf
sbb
cmpsl
or
xchg
enter
ljmp
lret
jp
xchg
add
bound
imul
jmp
xor
mov
cmc
hlt
push
push
jnp
fstpt
sub
lods
jecxz
ss
sahf
lea
xchg
sbb
or
adc
inc
popf
mov
aam
add
xchg
lret
pop
jge
aam
add
or
mov
xchg
add
int
sbb
cmc
cmp
add
add
stc
sub
push
sub
mov
and
faddl
dec
xorl
in
pop
arpl
arpl
xor
call
mov
fisttpl
xlat
enter
cmp
sbb
into
xor
add
outsb
ror
mov
in
add
sti
xorl
mov
repnz
pop
dec
test
push
sbbl
jne
jbe
lock
jle
push
adc
add
push
jge
ss
icebp
inc
jbe
fs
add
jmp
mov
mov
loopne
mov
in
call
mov
mov
add
fldenv
lcall
pop
add
fadd
add
in
and
imul
cmp
inc
pop
sti
dec
es
add
jb
add
loop
push
pop
add
or
push
jo
jp
mov
inc
add
adc
dec
sub
adc
pop
sub
loop
loop
cmpsb
lea
jno
mov
jae
push
out
ret
and
loope
mov
add
add
cs
in
jbe
popa
iret
fisubs
add
loopne
add
inc
ret
shlb
daa
loopne
cmpb
mov
ss
adc
push
xchg
in
add
movsb
inc
out
stos
orl
std
inc
insl
iret
add
push
push
popl
lods
jmp
aad
mov
outsb
pop
cmc
pop
stos
xlat
inc
pop
mov
addr16
jae
popf
test
or
or
cld
add
mov
das
pop
xchg
repnz
jns
jp
add
idivb
xchg
cs
sub
jbe
adc
fisttpll
push
jge
fiadds
push
addr16
inc
add
or
stos
add
jnp
orl
or
add
out
add
mov
stos
lret
scas
out
scas
cltd
mov
pushf
adc
adc
jmp
xchg
faddl
loope
mov
fdivrp
fucomp
xchg
push
push
add
cli
mov
fisttps
add
pop
ret
sub
pop
pushf
pop
push
add
add
pop
and
mov
pop
mov
addl
adc
xlat
icebp
sub
mov
sub
mov
xchg
push
add
jae
call
push
mov
sbb
or
add
dec
xchg
call
movsl
add
pop
cmpsl
push
push
shr
cmpsb
inc
and
daa
add
mul
cs
push
and
and
lods
add
inc
bound
lods
cwtl
xor
mov
sbbb
pushl
xor
faddl
add
adc
adc
mov
cwtl
sbb
mov
fcomip
push
jge
lahf
dec
mov
std
arpl
xchg
cmp
mov
push
or
dec
mov
mov
inc
pop
lds
xorb
popl
mov
cmp
pop
mov
xor
push
add
scas
aam
popf
fdivr
add
ja
cmp
imul
dec
rol
scas
pop
add
sbb
data16
insb
mov
add
add
int
inc
cmp
push
mov
ljmp
jne
pusha
sbb
pop
addr16
sbb
sbb
cmc
negl
out
lds
sbb
icebp
sub
icebp
pop
sti
fcompl
or
add
mov
stc
fisubs
add
sbb
inc
int
fimuls
add
out
sbb
dec
xchg
jns
ja
int
lret
push
push
xlat
mov
subl
adc
adc
push
cmp
stc
adc
mov
mov
pop
xchg
aad
std
out
sbb
mov
push
add
mov
xchg
loopne
insb
test
bound
out
aaa
rorl
fs
jnp
add
imul
dec
jbe
cwtl
imul
and
and
pop
lods
leave
add
add
in
pop
iret
stos
les
mov
add
rclb
cwtl
cmp
add
sbb
lock
jno
vdivss
lea
add
and
or
outsb
jo
adc
lcall
pop
ret
sbb
xchg
add
ds
pop
mov
add
outsl
sbb
inc
sti
frstpm(287
and
dec
movsl
stc
jmp
add
lret
js
jbe
xor
stos
add
jecxz
dec
cld
sub
sub
add
fiaddl
add
mov
jo
adc
aam
mov
movsb
cmp
push
out
inc
fldenv
jno
mov
test
mov
push
mov
add
shll
dec
sbb
mov
jl
sbb
fldt
inc
sbb
cmc
lods
add
ret
rcl
adc
mov
lret
add
popf
xor
mov
fstpl
or
pop
fldcw
hlt
into
inc
cltd
push
das
add
pop
inc
aaa
test
into
add
jo
mov
adc
push
mov
cld
daa
mov
inc
enter
push
push
lods
ficomps
cmpl
lret
xchg
xchg
repnz
mov
fldln2
cltd
in
add
data16
xchg
icebp
cld
fnstsw
or
or
cwtl
scas
xchg
pop
mov
cmp
push
loope
ljmp
imul
and
stos
into
bound
xorb
adc
pushf
pushf
push
lods
add
shll
jmp
fwait
out
pop
cmp
fldt
out
jmp
adc
lds
lds
cmp
and
sbb
les
xlat
in
inc
cmc
jmp
mov
mov
jmp
orb
add
xchg
pop
mov
add
push
mov
inc
imul
jg
add
rcr
rclb
push
add
xchg
mov
mov
lret
push
add
pop
jnp
adc
dec
pop
cltd
sub
repnz
jns
add
pop
nop
popa
lock
pop
inc
and
xor
lea
adc
xchg
fnstcw
add
or
test
and
pop
stos
inc
rcrb
loopne
call
cmp
sub
mov
pushf
add
adc
in
aaa
stos
jo
loop
push
iret
sub
xor
jmp
shl
adc
xchg
ret
mov
inc
arpl
stc
inc
leave
imul
pop
sub
push
neg
mov
jecxz
add
push
fidivl
xchg
mov
mov
mov
psrld
cli
pusha
sbb
add
mov
icebp
mov
sbb
in
inc
call
and
ds
fwait
jle
idivl
add
mov
lcall
lds
and
sbb
sub
fisubs
fmull
cmc
sbb
repz
fsubrl
pop
xor
pop
add
mov
loopne
enter
add
daa
stc
ljmp
add
add
pushl
pop
jbe
xor
add
cmp
nop
mov
cmp
push
mov
cld
outsl
xorb
jecxz
incl
jnp
adc
je
and
dec
sub
ja
add
add
push
push
jmp
enter
cltd
inc
int
popf
mov
mov
mov
adc
adc
mov
add
pop
popf
dec
loopne
fisubs
jmp
push
mov
mov
cld
sti
sar
mov
in
popf
test
pop
divl
and
and
flds
outsb
repnz
push
mov
xlat
pop
xor
sub
push
sbb
dec
bound
cs
ja
testl
hlt
inc
push
roll
and
int3
and
je
jp
push
and
fs
jne,pt
mov
mov
add
mov
mov
ja
add
cmc
mov
int
out
mov
fdivs
sbb
popf
dec
lret
add
pop
movsb
cmpl
repz
push
pop
cmp
push
test
testl
stos
ds
or
icebp
add
out
xchg
je
mov
dec
stos
popf
add
sahf
movsb
mov
mov
add
cld
sub
cmp
mov
xor
sub
cmp
mov
insl
in
add
mov
push
mov
cltd
lret
ljmp
cwtl
movsb
mov
push
popa
add
inc
fidivl
pop
xor
add
in
shlb
scas
add
mov
repnz
sbb
shl
inc
inc
icebp
std
scas
les
enter
sahf
xor
clc
mov
add
cmp
jbe
and
xor
clc
or
pop
pusha
pop
rcl
filds
adc
inc
leave
xor
cwtl
add
add
pop
push
and
mov
inc
add
sub
sbb
xchg
push
data16
sahf
js
xchg
cmpsl
sbb
out
in
add
pop
add
or
xchg
jp
lahf
stos
add
mov
add
sub
dec
movl
push
testb
inc
outsl
das
inc
ret
cmp
and
aad
add
add
inc
and
sti
jle
dec
add
sub
lods
inc
movl
fcmovb
cltd
dec
pop
stos
pop
sbb
ja
out
sahf
xchg
pusha
mov
adc
jge
popl
mov
movsb
add
push
dec
imul
or
nop
dec
sub
lcall
stc
cmp
jns
ret
aaa
mov
ja
inc
leave
ljmp
mov
dec
xchg
clc
scas
mov
pop
push
mov
mov
jmp
dec
aas
sahf
mov
xor
bswap
cmpsb
xchg
push
les
iret
loope
fwait
lahf
mov
sub
hlt
mov
or
test
inc
mov
stc
cmp
repz
push
repnz
pop
jae
adc
mov
stos
ja
mov
lods
std
jp
ficompl
and
jp
adc
out
pop
add
cmpsb
sub
add
minps
or
add
mov
insl
mov
and
cwtl
out
push
add
lahf
jg
repnz
stos
jge
jmp
xchg
sub
jecxz
adc
shll
add
mov
aaa
fstpl
int
jbe
add
out
jns
mov
xorl
push
cmc
add
insb
stos
mov
dec
lods
fwait
or
sub
mov
add
inc
and
cmp
mov
fwait
xchg
test
outsb
fdivp
and
sbb
add
test
xor
fwait
js
or
mov
jmp
mov
ds
cltd
data16
xchg
and
jmp
loop
cmp
or
xor
and
dec
ret
dec
add
or
insb
mov
add
sub
add
and
lea
sub
push
lods
mov
test
mov
lods
and
jl
out
frstor
dec
cmp
add
or
mov
cld
mov
mov
outsl
out
int
daa
and
cmpsl
inc
mov
add
push
imul
sbbb
xor
mov
sbb
scas
je
mov
fwait
push
cmpsb
aas
xchg
lds
sub
push
lret
out
xchg
ds
outsb
nopw
and
sub
mov
cli
inc
or
imul
arpl
fadd
mov
popl
and
sbbb
dec
xor
fwait
ss
push
push
mov
filds
or
mov
push
push
xor
pushf
lods
leave
imul
add
sarl
and
jne
test
or
es
mov
mov
inc
xchg
and
movsb
scas
cmp
add
aaa
pop
hlt
mov
ja
stos
adc
bound
and
jp
ret
add
rcl
cmpl
aaa
sbb
call
loope
rcr
and
pop
shlb
push
mov
mov
in
cmp
add
xor
test
lock
pop
aam
xchg
cmp
add
and
mov
xchg
xrelease
sbb
mov
outsl
sbb
imul
xchg
or
sbbb
loopne
sahf
sbb
inc
mov
sbb
add
push
sbb
popa
sub
mov
mov
inc
dec
dec
sbb
lret
mov
sub
inc
cwtl
fnstenv
hlt
adc
ljmp
scas
mov
dec
mov
adc
add
mov
dec
sti
mov
mov
mov
fdivrp
inc
push
xchg
cld
stc
mov
rolb
or
pop
cmp
mov
add
in
adc
xchg
adc
mov
xor
loop
mov
out
movsl
push
fwait
cwtl
aad
push
mov
sbbl
xchg
mov
out
lea
jo
push
jl
mov
test
in
cmp
jno
sbb
mov
xchg
shrb
repz
sub
jecxz
int
imul
out
loopne
lock
add
add
xor
jmp
fwait
call
je
mov
shrb
mov
test
xchg
fistl
aad
add
lcall
lods
pop
add
or
cmp
dec
pop
ret
adc
sub
jae
sub
nop
jnp
sbb
xchg
push
aad
iret
test
mov
adc
js
in
addl
mov
push
xchg
jmp
and
cltd
add
inc
int
jp
and
sub
ret
add
dec
dec
cmpsb
ds
push
or
mov
sbb
pop
or
sub
jecxz
and
adc
clc
dec
hlt
pop
iret
mov
in
and
ret
xchg
repz
pop
push
xor
pop
mov
push
js
mov
pop
jo
mov
push
jl
mov
jo
jne
sbb
addl
jg
fcmovnu
jle
push
pop
xchg
lods
add
push
push
jp
add
outsl
xor
push
dec
movsl
xor
mov
add
push
icebp
xchg
int
out
in
sahf
pop
add
aas
lea
fs
xchg
and
cmpsl
sbb
sub
adc
inc
inc
repz
add
mov
ret
cmp
xor
imul
xchg
xor
fucomip
add
int3
outsb
and
call
add
mov
call
push
shrl
cmp
lea
sub
push
sub
repz
cld
lods
scas
inc
or
push
jle
sbb
fmuls
loop
jo
int
pushf
add
adc
jnp
jb,pt
inc
and
lods
movsl
pusha
add
add
mov
cmp
sahf
out
in
add
out
rolb
push
inc
adc
push
stc
arpl
add
ffreep
add
pop
out
mov
in
popf
add
icebp
inc
mov
jmp
pop
dec
clc
js
push
adc
cmp
cmp
xor
ret
mov
mov
pop
rcr
lcall
jl
pop
aaa
jl
clc
mov
cmp
mov
in
int
aam
rcrb
out
in
push
nop
xchg
push
add
jae
cmpsl
mov
add
lahf
aam
fsubl
aas
fwait
adc
arpl
pop
jp
insb
lods
jne
imul
test
cmp
pop
push
jl
outsl
imul
sbb
dec
add
mov
stos
shrb
xchg
lahf
xor
std
jle
gs
push
and
add
mov
dec
loopne
icebp
sub
scas
jnp
add
stc
negb
repnz
or
jl
pop
lds
and
mov
add
gs
jl
lahf
push
or
lea
add
mov
jb
or
xor
repz
or
push
xor
dec
pop
push
int3
add
cmp
fs
std
jbe
push
add
cltd
addr16
jns
add
stos
and
inc
mov
fucomp
cmp
adc
pop
inc
mov
outsb
mov
ljmp
or
push
adc
stos
fmuls
and
jecxz
icebp
mov
sub
sub
cmpsl
jbe
cmpsl
cvtps2pi
cli
das
inc
pop
hlt
stos
add
clc
mov
cmc
dec
push
jo
mov
roll
mov
xor
fs
dec
push
sti
out
adcl
arpl
sub
mov
fiadds
mov
mov
mov
jl
imul
ja
mov
add
inc
push
jno
imulb
lahf
movsb
adc
add
dec
movsl
es
subb
loop
testl
pop
xor
dec
pop
push
lds
icebp
mov
insb
hlt
sbb
inc
shrb
repz
out
mov
fcoml
pusha
xchg
lock
or
cmc
and
lock
lret
gs
cli
dec
inc
pop
popl
add
pop
dec
inc
dec
sbb
add
mov
or
gs
sub
mov
hlt
mov
rolb
addr16
fsts
bound
fwait
sub
out
cs
jg
mov
mov
dec
add
in
les
mov
xlat
add
or
sbb
lahf
jl
sub
add
je
push
mov
push
add
jne
mov
mov
scas
scas
in
pusha
add
jp
xor
push
jecxz
mov
jle
adc
lock
jp
sbb
inc
push
mov
adc
int3
dec
mov
mov
leave
cmp
push
or
scas
jb
add
test
push
or
jne
incb
xor
cwtl
fcmovnu
jecxz
mov
lds
fbld
cmp
icebp
mov
lret
sbb
test
cmp
mov
inc
jle
out
add
stos
xor
mull
mov
mov
insb
pop
in
add
jbe
push
aad
sub
aaa
in
add
pop
push
mov
imul
mov
gs
jp
mov
and
mov
sbb
xchg
pop
xchg
loope
jl
ljmp
jae
add
aad
mov
jae
iret
xchg
ret
sbb
push
xor
sbb
add
push
dec
cmp
test
mov
push
add
jo
ret
loopne
mov
mov
add
fucomip
or
nop
sub
repnz
sub
pop
push
in
sti
mov
das
xor
add
es
sbb
push
jmp
add
add
outsl
pushf
jmp
jmp
pop
int3
roll
out
sbb
sysexit
repnz
dec
imul
push
add
add
cltd
mov
mov
rolb
ss
mov
mov
or
or
scas
add
out
xor
test
add
dec
rol
nop
loopne
adc
jns
jle
mov
pop
arpl
repnz
or
mov
jnp
enter
and
push
cmp
fnsave
jg
outsb
add
daa
push
aad
add
ret
fnstcw
lods
rorl
stos
imul
xchg
cmp
ret
dec
cmp
or
mov
jae
push
fwait
adc
fcmovb
push
jbe
add
fs
push
push
push
mov
cld
sub
inc
pop
add
das
aam
lahf
add
nopl
add
adc
add
pop
or
push
push
add
sub
sub
inc
jnp
jge
xor
data16
mov
lret
test
addr16
clc
add
cmp
subl
movsl
es
xlat
add
or
pop
xchg
fistps
mov
add
pop
in
xor
rcr
hlt
add
cmp
into
lods
rcrl
mov
add
push
scas
add
lods
adc
jo
mov
data16
push
out
add
mov
test
lret
aaa
addl
push
xor
push
push
aam
lahf
jno
add
pop
sar
rcrl
cmp
sub
inc
add
mov
aaa
js
pop
push
push
cmp
push
adc
dec
outsl
popa
data16
jbe
insl
add
dec
je
mov
mull
cmp
sahf
popf
mov
add
or
add
cltd
or
dec
in
arpl
andb
mov
sub
fildll
xchg
cmpsl
out
dec
pushf
fistpll
fstpt
out
inc
jge
test
mov
daa
or
aam
shl
inc
nop
call
pop
dec
mov
insl
add
jg
stos
mov
nop
js
dec
sti
or
and
cmc
dec
nop
pop
sbb
fldcw
in
arpl
fwait
mov
xor
out
jecxz
adc
dec
jae
es
xchg
leave
sbb
add
cmp
dec
fiaddl
add
lret
pop
push
add
jnp
add
ret
sbb
or
or
pop
xchg
cmp
mov
out
std
fdivr
aaa
ret
add
add
jg
nop
dec
loopne
jp
jnp
in
dec
sahf
or
in
pop
inc
std
icebp
dec
add
jns
sbb
jge
fwait
enter
jae
out
mov
adc
ss
or
xchg
xchg
add
xchg
jne
and
repnz
or
pop
mov
add
or
insb
xor
add
dec
and
into
jmp
pop
xchg
add
xor
arpl
pop
fs
mov
add
rolb
aam
or
add
out
pop
jp
and
test
add
repz
and
add
mov
mov
cli
fstl
test
or
push
fwait
adc
push
mov
xor
push
lret
sub
pop
sbb
movsl
mov
fisttpll
add
fimull
cmpsb
fdivrl
xor
add
das
repnz
or
ror
cmpsb
rolb
and
or
lret
inc
add
daa
and
mov
jne
push
cmp
push
jnp
scas
in
cmp
add
iret
mov
enter
mov
add
and
xchg
or
adc
mov
lods
test
jecxz
incl
sbb
aam
cmp
lcall
fs
push
push
icebp
ljmp
pop
shlb
fistps
adc
lds
push
adc
daa
fldcw
mov
lahf
sbb
pop
fwait
cmp
dec
push
js,pn
inc
add
sbb
cwtl
xor
lea
dec
je
pop
jno
cmpsl
fwait
xchg
int3
add
lea
jno
jo
xor
pop
sbb
mov
int
jnp
into
add
in
test
fld1
dec
test
pushf
push
into
sbb
sub
adc
aaa
sub
repz
add
jecxz
cmpsl
jo
inc
inc
jae
add
push
mov
adcb
cmp
aam
outsl
call
int3
push
sldt
movsb
xchg
fdivrp
xlat
in
ret
lcall
xor
into
ret
cmp
jno
les
add
sti
push
dec
and
jnp
aam
xchg
insl
insb
add
popa
mov
push
mov
add
push
xor
sarb
add
lods
mov
testb
mov
lds
xchg
lret
fst
sub
xor
add
and
jbe
cld
fildll
add
cmp
pop
add
sub
cmpsb
xor
repnz
lea
adc
push
faddl
aam
sub
inc
jmp
sub
out
mov
sub
int3
lods
adc
add
jne
popf
aaa
ja,pn
cmp
jle
or
subb
mov
xchg
das
add
add
lods
push
rcrl
bound
std
lea
in
jbe
enter
ficoms
sub
insb
and
mov
mov
inc
fimuls
add
je
bound
push
add
xchg
push
adc
push
mov
cld
jle
stc
fwait
lods
push
dec
lods
adc
jmp
clc
scas
sbb
inc
test
mov
mov
mov
int
into
bnd
jnp
inc
jp
addr16
jmp
cmp
adc
push
sub
sbb
pop
lret
mov
loope
xorb
cwtl
push
cmp
lods
push
add
insl
dec
push
add
jge
adcb
add
es
inc
inc
fadd
add
enter
into
cmp
jnp
jmp
nop
stc
mov
dec
cmp
add
lcall
jg
in
push
push
lcall
add
push
and
jne
insl
adc
test
pop
and
pop
ds
lea
sbb
add
sub
fisubl
dec
cmp
xchg
inc
sub
daa
aas
dec
jl
repz
mov
jl
add
mov
push
outsb
cli
and
and
add
hlt
jecxz
jmp
dec
add
xchg
pop
cli
sub
jg
and
lods
in
jnp
lahf
and
jne
xchg
push
pop
outsl
aaa
aad
in
fs
stos
push
mov
roll
add
call
mov
add
addl
or
add
sbb
jle
lcall
dec
incl
icebp
out
lcall
add
adc
mov
cmpsb
jae
fwait
mov
insw
mov
in
fidivl
std
add
out
jae
xchg
mov
mov
add
scas
cmp
and
dec
sti
jp
adc
jle
aam
inc
sub
pop
jge
and
add
lock
or
in
outsb
dec
inc
jmp
mov
repz
sbb
mov
xor
iret
in
xchg
cwtl
sar
arpl
mov
aaa
ret
in
aaa
xchg
and
jns
mov
scas
inc
movsl
mov
test
or
testb
xchg
sti
jle
jb
rcrl
jp
xchg
mov
lock
mov
idiv
sbb
mov
or
mov
mov
fs
fadds
pop
push
mov
popf
sbb
int
in
inc
stc
cwtl
mov
lods
imul
sub
jnp
adc
mov
aaa
or
aas
sbb
add
add
xor
inc
xchg
xrelease
movsl
bound
mov
aas
inc
add
mov
int
xor
out
cltd
jmp
push
mov
add
push
lret
adc
cmp
pusha
jl
push
rorl
adc
pop
in
dec
sbbl
and
insb
xchg
xchg
or
xor
stc
add
jge
push
jecxz
stos
shll
add
jecxz
mov
pop
mov
push
adc
add
nop
jo
pop
out
pmullw
mov
out
cmc
add
push
testl
sbb
jecxz
imul
mov
jbe
jg
je
mov
cmp
push
and
add
aaa
test
scas
xchg
mov
pop
dec
add
xor
outsb
xchg
shll
add
adc
stos
mov
mov
fdivrl
and
jno
sub
inc
add
fwait
cltd
or
jg
add
mov
test
in
outsw
arpl
icebp
xchg
sbb
fmull
lea
and
sub
jmp
adcb
out
bound
mov
fwait
add
inc
outsb
ljmp
jnp
add
dec
insb
adc
rcr
loopne
add
pop
cmc
sub
cmp
jnp
hlt
cmc
cmpps
dec
lahf
out
add
cwtl
fistpll
repnz
in
xor
jp
js
test
adc
add
js
pop
mov
addl
pop
int3
in
xchg
int
clc
mov
movsb
inc
or
jae
inc
popf
dec
push
cwtl
jbe
mov
add
je
mov
mov
jp
movl
xor
pop
or
jle
add
aas
jg
pop
mov
fsub
jae
shlb
xlat
cmp
movsb
or
jge
add
stc
in
lds
xor
jp
rclb
and
jle
sub
add
jl
pop
rol
lods
jbe
filds
sti
imul
mov
cltd
jo
fs
push
jae
insb
xchg
nop
jmp
add
and
out
scas
and
xlat
cmpsl
fidivrl
insb
icebp
adc
push
add
mov
lret
test
pop
inc
add
fmull
adc
push
test
fildl
inc
add
in
add
fcmovb
lea
xor
or
insl
add
mov
roll
gs
loope
adc
dec
jo
push
dec
mov
xlat
cmpsb
mov
ds
pop
cld
sbb
aas
cmp
jbe
mov
jb
adc
sub
sbb
inc
scas
mov
mov
sub
or
scas
mov
push
rclb
repz
mov
jmp
mov
mov
ss
call
add
pop
rcr
lea
xlat
pop
ljmp
pop
cmp
arpl
mov
xchg
mov
enter
inc
dec
lret
add
sub
cld
sub
loop
add
ljmp
imul
cltd
movsb
sti
fistpll
or
jmp
imul
and
add
dec
jo
mov
and
iret
pop
inc
xor
add
loopne
mov
add
fstp
mov
loope
add
shlb
jo
aad
repz
jp
andb
aas
std
mov
mov
loope
ds
mov
add
xchg
add
cltd
mov
test
je
mov
xchg
in
add
mov
in
loopne
cmp
jne
sbb
imul
int
cltd
mov
clc
jae
add
add
push
cmp
fucom
dec
jge
jne
add
aas
inc
lahf
pop
mov
enter
xor
pusha
sub
add
push
cmpsb
cmp
pop
lock
stos
add
mov
dec
test
jae
xor
fwait
pop
or
and
add
dec
fnsave
cmovo
inc
mov
mov
aas
xchg
add
or
push
int
and
jg
mov
in
dec
shr
mov
mov
das
cli
loop
and
add
shr
imul
in
bound
pop
inc
or
out
xor
out
pop
or
shll
mov
cmp
sarb
add
sub
and
rorl
dec
popa
add
adc
ret
fcmovne
xor
repnz
dec
add
pop
jno
lods
and
mov
push
push
add
adc
xchg
add
add
add
xchg
pusha
cmp
add
in
mov
inc
mov
add
hlt
iret
jl
popf
mov
ret
xlat
push
and
push
push
stos
fsubl
fs
mov
pop
sub
loopne
and
add
xchg
sub
das
add
das
mov
dec
jbe
jl
and
icebp
xchg
sbbb
cmp
adc
jp
es
push
sahf
enter
push
add
daa
pusha
adc
stos
cli
fldcw
add
iret
cltd
ss
aas
and
add
dec
test
cmp
or
mov
mov
daa
repz
movsl
cs
icebp
push
mov
out
imul
dec
ja
jmp
pop
cmp
iret
mov
mov
add
imul
xchg
inc
xchg
loope
add
decl
in
lds
or
clc
mov
cmpsb
jnp
pop
add
jl
leave
add
idiv
xchg
sub
dec
cmpl
sub
adc
lea
jno
ds
sti
mov
in
jmp
rclb
fs
fidivrs
add
out
push
loopne
loope
roll
in
cmpl
fwait
xor
add
add
lock
mov
data16
pop
mov
stos
fsubrp
jge
addb
add
push
add
testl
shl
lds
adc
jnp
cmp
lret
mov
mov
aad
cwtl
add
outsb
stos
fidivrl
cmpsb
gs
lods
cmc
push
addl
in
mov
lods
sahf
pop
stc
add
ficompl
inc
fildl
mov
cwtl
xchg
es
add
fistpll
outsb
xchg
mov
in
add
sahf
outsb
dec
adc
dec
push
gs
nop
in
cs
and
repz
mov
out
sub
add
cmp
mov
scas
or
cli
sbb
xchg
int3
xlat
es
mov
addb
nop
fwait
pop
pusha
ja
cmpsl
sub
add
jp
adc
call
push
rcll
cmp
add
xlat
sahf
and
daa
push
add
gs
jbe
test
jmp
cld
stc
mov
adc
in
inc
and
add
scas
dec
aaa
sbb
dec
sub
add
pop
push
add
mov
sub
pushf
adc
add
sarl
add
popf
or
imul
add
insl
pop
jns
mov
inc
add
mov
or
out
add
cmpsb
pop
jle
rorl
mov
mov
mov
add
xchg
mov
cmp
sarl
and
cmp
imul
add
mov
psubsb
and
jl
ja
pop
mov
jmp
cmp
imul
adc
add
jbe
addr16
push
pusha
jle
and
mov
cmp
xor
stc
outsb
shl
adc
mov
xchg
add
mov
cmc
cmp
jp
add
aas
cmpb
int3
inc
or
add
in
sub
mov
push
push
sahf
add
add
es
cwtl
xchg
add
add
or
adc
push
enter
mov
ror
pop
adc
lds
out
ljmp
pop
aas
push
ja
jle
mov
sub
xchg
mov
inc
out
and
pop
push
inc
add
sbb
shrl
add
or
test
adc
add
xchg
bound
nop
nop
outsb
lahf
addr16
mov
jecxz
mov
mov
mov
repnz
out
in
push
fcmovnb
jo
insb
shl
add
fildl
or
and
mov
sbb
inc
ret
ja
clc
add
xor
je
jb
lahf
or
shll
jmp
out
add
jle
cmp
push
mov
subl
push
fidivl
adc
mov
fidivl
push
ljmp
lret
lods
add
fistps
sbb
cltd
mov
shll
add
sub
icebp
rorb
pop
rol
sub
dec
sbb
add
pop
or
out
jo
ret
mov
lods
add
leave
scas
mov
sub
nop
mov
dec
inc
dec
call
data16
rclb
inc
jl
scas
sarl
dec
sbbl
loope
xor
js
sbb
and
fcom
cs
pop
test
and
mov
inc
mov
iret
xchg
loope
add
jbe
jns
ret
add
popf
out
mov
shll
adc
je
lds
in
xor
mov
movsb
sub
loopne
cvtpi2ps
imul
adc
lods
push
lret
loopne
into
std
stos
adc
out
xor
mov
std
push
push
ror
jle
jnp
mov
adc
out
rorb
rorb
movsl
push
fnstcw
repnz
add
loopne
decb
jecxz
lret
sahf
sub
push
jp
inc
leave
push
sub
jge
mov
daa
add
dec
adc
and
add
loop
pop
push
pop
or
ljmp
pop
push
jns
adc
and
xor
inc
xchg
cmp
jecxz
push
and
clc
mov
or
clc
jae
dec
les
clc
add
popa
xchg
or
mov
and
je
hlt
dec
fsts
cmp
mov
mov
roll
scas
add
std
dec
imul
add
inc
fiadds
push
inc
dec
and
add
adc
add
loope
push
pop
add
pop
adc
gs
jle
add
sbbb
add
shlb
add
popa
push
lea
pushf
in
into
dec
scas
loop
lods
imul
stc
add
mov
clc
rorb
inc
rcl
dec
xchg
rol
add
dec
cwtl
out
sbb
dec
leave
sub
stos
int3
inc
sbb
nop
push
push
xchg
add
paddd
subb
mov
push
push
jbe
sbb
inc
jns
fisttpl
adc
add
or
dec
jg
lods
add
fidivrs
mov
adc
call
mov
pop
add
xchg
dec
popf
xor
loop
ja
xor
lret
mov
daa
mov
jae
lldt
js
repz
dec
mov
in
add
mov
xor
jae
inc
movsl
mov
push
pop
cld
and
inc
pushf
adc
sub
mov
roll
or
outsb
imul
xor
popf
sbb
cmp
in
movsl
arpl
inc
inc
jne
sub
cltd
mov
xchg
ss
mov
add
cs
addr16
lret
inc
idivl
stc
lret
shlb
int
fdivs
cltd
xchg
dec
aaa
ret
xchg
add
ja
pop
sub
sub
xchg
in
mov
sbb
add
pop
loope
icebp
rcr
scas
jns
add
cmp
inc
push
add
movsl
popf
mov
push
jns
push
notb
int
xor
push
ja
xchg
add
xchg
xchg
xchg
mov
lock
sarl
jnp
sbbl
movsl
gs
or
inc
stc
in
in
push
cmp
xchg
add
subl
sbb
movsb
mov
mov
cmp
inc
ret
mov
bnd
add
aaa
inc
cmpsl
test
add
lahf
dec
jnp
mov
mov
mov
add
popf
dec
inc
stc
jns
andb
mov
add
out
xchg
cmpb
add
enter
add
aas
mov
push
es
mov
aas
call
ds
hlt
loopne
hlt
mov
mov
iret
add
movsb
xor
imul
xchg
adc
push
roll
xlat
jp
data16
cvtpi2ps
mov
int3
leave
add
pop
mov
ds
sbb
mov
iret
sub
addr16
inc
adc
pop
loopne
loop
inc
sbb
xchg
push
das
sub
sbb
dec
xchg
cmp
mov
inc
add
adc
push
popa
mov
sbb
mov
cmpsb
inc
add
loopne
or
push
sarl
add
rcll
adc
clc
xor
jb
adc
cmp
mov
pop
mov
inc
call
and
add
xchg
xchg
inc
xor
mov
xchg
out
ss
mov
int3
pop
int
mov
enter
or
jnp
mov
push
sarl
pop
or
add
bound
inc
mov
or
add
inc
mov
loopne
add
mov
inc
sbb
and
add
xor
scas
incb
sub
fcmovu
add
dec
sahf
addb
test
xchg
inc
aad
xor
push
jo
pop
ret
add
sahf
inc
addr16
and
fcomps
stc
dec
int
push
mov
scas
rcrl
dec
add
mov
mov
cmp
add
sbb
and
out
fwait
int3
add
mov
ret
in
and
cmp
in
mov
xchg
mov
lock
mov
jmp
xor
mov
lock
or
sbb
dec
out
xchg
sub
sub
fyl2xp1
aad
insb
push
mov
popf
push
lock
mov
in
add
pop
xor
jmp
add
dec
add
mov
imul
ljmp
lods
add
les
jge
outsb
add
mov
hlt
jg
ror
jbe
add
inc
mov
mov
subl
adc
xchg
xor
mov
rolb
jecxz
push
fiadds
fwait
popa
orl
inc
fisttpll
rorb
test
sub
mov
xorl
mov
inc
jnp
fbld
mov
lock
jg
add
sbbb
popa
jo
cld
addb
jnp
mov
dec
inc
dec
inc
pcmpeqd
and
fs
lods
xor
jl
mov
pop
xchg
pop
pop
js
dec
mov
or
add
ret
inc
cltd
imul
pop
add
and
jp
inc
xor
pop
jecxz
or
mov
scas
call
inc
dec
pop
fsubrl
xchg
pop
dec
clc
add
hlt
sub
fwait
fs
clc
lea
lret
cmp
pop
fcomps
fists
xchg
inc
mov
push
inc
sbb
repnz
fdiv
popf
stos
jo
add
xchg
and
lcall
movsl
add
mov
sbb
pushf
cwtl
add
das
aam
ss
ret
sub
or
pop
cmp
daa
push
jl
and
fsubrs
dec
out
push
cs
insb
in
push
scas
jecxz
fbld
jae
and
rcrl
out
add
daa
xchg
dec
fdivp
in
shl
pop
push
pop
add
mov
jecxz
repz
cmp
add
dec
ja
fldt
mov
sti
adc
mov
jle
jne
aam
mov
fnstsw
outsb
ljmp
and
xchg
pop
hlt
cmp
add
lcall
xchg
push
out
mov
out
mov
mov
and
pop
sti
inc
push
and
repnz
imul
jg
xchg
cmp
fs
in
add
lret
subb
ret
inc
xchg
jg
or
xchg
rolw
xchg
xchg
pusha
imul
add
sbb
adc
mov
xor
ljmp
sub
rolb
icebp
xchg
xlat
cmp
xor
hlt
lret
repnz
add
lea
imul
add
imul
mov
add
inc
xchg
movsb
jg
scas
dec
fcoms
add
pop
sub
sbb
rorb
loopne
and
imul
lea
loopne
mov
out
mov
jns
mov
lret
decb
jg
add
loop
mov
jae
mov
xchg
test
shr
imul
ret
mov
pop
adc
mov
mov
push
xor
cli
jne
push
in
add
push
xor
shrl
inc
mov
jbe
or
sahf
add
xchg
cs
adc
movsb
and
sub
pop
mov
pop
test
pusha
aad
add
fidivs
mov
incb
loop
push
push
shl
out
mov
push
xchg
xor
sbb
inc
mov
mov
inc
push
xor
pop
add
xchg
imul
xorl
idivb
loopne
inc
std
jle
mov
mov
inc
rcr
sahf
and
ret
push
aam
movsl
add
out
test
test
add
push
jecxz
push
mov
add
ds
and
addr16
imul
sub
idivb
and
jmp
add
jno
in
push
shll
push
out
call
insb
sub
or
rolb
ja
shll
scas
pop
fcoms
mov
rorb
xor
add
cld
sbb
sub
pop
xchg
ficompl
cmp
mov
popa
in
fbld
cli
xchg
adc
gs
sub
enter
sub
xor
fidivrs
aam
cmp
jne
and
pop
outsl
pop
pop
pop
loope
test
sbb
add
cmc
pop
xchg
mov
add
pop
push
enter
mov
iret
add
repnz
fwait
xchg
imul
jecxz
add
imul
in
and
popa
in
pushw
pop
icebp
add
xor
scas
lret
shl
jo
movsl
pusha
add
lds
mov
cmp
sbb
imul
in
jnp
inc
mov
out
lods
add
add
lahf
inc
cmp
int
imulb
xchg
rolb
sub
xchg
jo
push
stos
fwait
jo
ja
sbb
vshufps
pusha
stc
out
jg
inc
push
adc
add
out
into
cmpsl
inc
cmp
sub
add
xor
shll
cmc
add
cmpsl
lret
mov
stc
add
mov
jle
cld
shll
xlat
outsl
sbbb
inc
adc
cmp
jnp
ljmp
inc
add
outsl
sar
xor
loopne
insl
loopne
or
cwtl
or
cmp
dec
fiadds
mov
push
or
dec
addb
fiaddl
in
jl
and
cli
adc
loop
add
pop
fidivs
inc
js
xor
rorl
push
hlt
add
and
add
out
mov
dec
push
adc
mov
jle
fidivrl
sub
sub
xor
icebp
call
xchg
addl
cmp
push
push
iret
pop
xchg
push
cld
add
pushw
mov
mov
mov
fwait
lret
xchg
mov
scas
xchg
cmp
cld
jnp
pushf
aad
and
sbb
ss
es
sub
mov
jae
jno
shl
insb
adc
mov
gs
pop
aaa
ss
add
inc
pop
push
dec
sbb
mov
or
test
int
rcrb
cwtl
outsl
add
add
xor
mov
mov
fdivr
movsl
ds
ljmp
outsl
pop
iret
scas
fcomp
pop
shlb
xchg
push
or
stc
cmp
stc
sub
add
push
xchg
scas
and
or
fsubrs
and
push
push
or
add
out
add
pop
mov
outsl
mov
fcoms
jmp
sub
nop
cltd
jg
fldl2e
inc
add
inc
add
inc
cli
test
cli
shlb
cmc
jg
shrb
sbb
add
push
fsts
xorb
push
aas
dec
jns
popf
sub
add
mov
pushf
movsl
dec
dec
jbe
ret
add
out
jno
mov
jle
out
icebp
add
push
imul
mov
movsl
dec
cmp
mov
aam
mov
mov
add
or
jecxz
fldcw
movsl
mov
xchg
arpl
popf
mov
dec
xor
std
fdivrs
cmp
jecxz
or
xchg
movl
sarb
sbb
pop
dec
add
jae
adc
scas
dec
cmpsb
or
cmc
mov
pop
pop
lret
mov
mov
mov
mov
stos
mov
add
add
mov
stos
dec
sbb
aaa
in
push
sub
enter
es
add
inc
xchg
sub
dec
div
lds
inc
push
jmp
mov
mov
mov
ljmp
adc
add
test
mov
mov
in
mov
mov
vrcpps
add
test
lea
daa
mov
scas
add
notl
mov
insl
cmp
sub
lock
cmpsl
push
fisubrl
push
add
mov
pushf
roll
in
add
pop
adc
in
adc
or
and
jmp
mov
sub
mov
call
sub
add
lods
or
jecxz
jmp
mov
mov
lds
jnp
jns
test
jge
add
inc
xchg
out
pop
jb
adc
lahf
fnstcw
fbstp
mov
push
jnp
and
stc
std
aas
mov
dec
add
mov
add
cli
or
pop
adc
mov
repz
sbbl
in
test
jno
push
iret
xor
and
mov
lods
mov
call
fstps
repz
push
xor
mov
mov
cmp
pushf
adc
int3
fwait
jnp
movsb
pop
sbb
rclb
mov
test
test
add
and
push
roll
js
dec
mov
repz
imul
sbb
pushf
arpl
call
xor
jnp
pop
enter
fimull
add
mov
jo
test
cmpsl
push
jnp
mov
popf
jbe
int3
ljmp
dec
aad
inc
ljmp
lea
dec
mov
subb
sbb
push
test
inc
mov
dec
add
mov
push
dec
jecxz
in
lcall
fbstp
mov
andb
and
adc
mov
lods
mov
mov
ljmp
es
push
pop
mov
rcrl
add
addr16
push
lret
push
lods
inc
dec
pop
lahf
shl
mov
stos
add
cmpsl
loope
xchg
into
lods
cmp
push
or
xorl
dec
inc
cmp
mov
testb
out
js
jae
inc
lret
mov
jg
fimuls
shlb
mov
lcall
aam
push
jle
and
inc
pop
scas
add
movq
fcomip
fisttps
in
das
add
mov
push
add
pop
or
int3
es
mov
xor
cmp
outsb
add
out
jle
js
inc
add
jle
fcoms
and
adc
cmp
push
mov
push
dec
ljmp
adc
pop
or
repnz
leave
aaa
loopne
rcr
mov
mov
ret
fdivs
adc
jmp
pop
test
in
int
xchg
or
pop
cmpsl
cmpsb
shll
add
leave
dec
nop
mov
push
push
sub
cmp
mov
out
icebp
rcl
add
popa
and
shl
loop
pop
test
test
cmp
add
adc
xchg
imul
xchg
add
cmp
jg
push
mov
repz
loop
fimull
or
push
mov
fstps
es
lahf
mov
pop
clc
and
add
icebp
sahf
xchg
xor
add
lret
mov
out
adc
sbb
cmp
sbb
pushf
lret
add
push
out
jp
call
and
sub
lret
mov
fwait
mov
lret
cltd
add
testb
dec
addr16
jg
mov
add
xor
xor
in
pusha
cltd
add
ror
xor
mov
mov
lds
in
pop
in
roll
scas
test
jo
mov
add
cmc
inc
inc
or
es
ljmp
or
inc
out
pop
repz
mov
jns
cmp
icebp
add
inc
inc
clc
push
mov
push
adc
shrb
push
leave
sarl
mov
inc
add
lods
jne
jb,pn
out
add
mov
repnz
xchg
rorb
inc
fwait
xchg
cltd
push
and
jp
lret
xchg
xor
lds
pop
jnp
add
mov
push
pop
pop
lock
ljmp
fbld
out
xor
add
cld
enter
xchg
jne
push
outsb
dec
roll
ds
cmp
dec
aam
or
insl
xchg
add
pop
add
gs
loope
mov
cli
xor
jae
ja
dec
xlat
jne
ret
addr16
add
ss
lsl
je
lea
fsts
mov
sub
add
loope
mov
hlt
push
adc
xor
int
add
xchg
add
push
add
lock
jo
and
out
xchg
dec
add
jne
mov
fidivrl
and
fbstp
loopne
or
sahf
mov
jne
pop
inc
cli
add
nop
mov
popf
pushf
add
pop
jecxz
movsl
or
xor
iret
or
push
or
testl
push
mov
outsb
inc
data16
xchg
jp
out
lret
sbb
inc
jp
mov
arpl
xor
in
fldl
insb
jne
mov
je
ds
sbb
add
fwait
cmpsb
push
cld
mov
push
inc
pop
add
push
inc
pusha
sub
jb
cmp
add
dec
mov
aas
mov
call
push
mov
repz
data16
mov
add
fmull
leave
fstpt
in
es
stos
cmpsl
add
pop
mov
xor
sbb
fcomps
adc
jae
add
es
rorl
hlt
scas
cmp
push
add
adc
pop
cmp
xor
dec
popf
add
testl
add
cmpsb
daa
or
sbb
sub
ja
xchg
pop
leave
inc
int
or
sub
add
nop
jle
pop
inc
ljmp
add
sbb
jmp
add
jle
je
xchg
cmp
hlt
gs
add
jle
jge
mov
add
cmp
xchg
mov
add
icebp
fnsave
inc
aaa
cli
jmp
cmp
cwtl
ljmp
push
inc
aaa
stos
sarl
insb
scas
add
pop
imul
or
mov
jmp
add
lea
xchg
sub
aas
push
add
sub
jns
xor
inc
jne
cmp
mov
pop
mov
add
outsb
jno
sub
jle
dec
jne
xchg
imul
negb
jnp
dec
stc
call
je
pop
imull
mov
jge
mov
loop
xor
out
jns
mov
jp
stc
add
mov
bound
push
dec
xor
mov
stos
mov
add
mov
adc
pop
push
popa
loop
mov
add
jge
test
mov
test
add
addb
lock
ljmp
push
jne
scas
xchg
add
pop
mov
and
fld
dec
call
push
mov
movsl
xor
or
push
lock
sub
pop
add
jae
les
mov
inc
or
sbb
jg
imul
ss
add
pop
nop
push
bound
add
dec
call
mov
add
pop
sahf
adc
or
xchg
mov
sti
add
cld
pushf
mov
push
insl
add
aam
xchg
pop
fmul
xchg
scas
or
addl
andl
incl
add
sub
daa
das
cmp
sbb
add
bnd
ja
sbb
sbb
sub
mov
mov
sub
std
pusha
in
mov
ljmp
mov
insl
xor
cwtl
jmp
cli
add
ret
dec
out
fbld
cltd
add
stos
cmp
std
scas
add
cmp
push
cwtl
add
jns
pushf
sub
sbb
xchg
add
xchg
outsb
ljmp
aaa
pop
aad
std
aad
das
insb
mov
xchg
fmull
inc
enter
xchg
add
arpl
xchg
addl
mov
outsl
popf
shlb
pusha
adc
enter
fs
out
test
push
push
inc
lea
ds
sbb
roll
xor
jg
ret
sbb
pop
add
or
cmpb
dec
negl
mov
pop
inc
mov
dec
leave
add
add
sbb
or
add
jae
sbbb
pop
push
pop
arpl
jns
add
in
movsb
sarl
jecxz
ffree
add
fsts
add
pop
sti
loope
and
dec
add
imul
daa
scas
out
mov
sub
and
jno
repnz
lock
sbb
das
cmc
push
xor
add
cli
lahf
xchg
aam
lods
in
add
jnp
sub
mov
fcmovu
add
pop
mov
outsl
pop
add
mov
and
cmp
add
jecxz
mov
lods
jmp
insl
push
jb
xlat
hlt
adc
add
mov
and
rcll
jne
mov
ja
push
loopne
fidivs
push
add
popf
inc
mov
jno
dec
or
movsl
mov
xchg
cmp
add
jbe
addl
ss
and
add
mov
outsl
xor
insb
mov
add
inc
jo
out
sarl
leave
jge
fwait
out
add
fadds
aas
inc
sub
ret
dec
sbb
inc
jle
mov
add
add
xchg
test
insl
rcrl
sub
jle
sub
add
push
insl
add
out
sub
or
cs
es
std
xchg
sub
imul
loopne
jl
rep
pusha
cmp
lods
rclb
xchg
arpl
cmpsb
popf
lods
push
mov
fcmovnbe
cli
in
add
outsb
ds
inc
into
icebp
loope
mov
pop
nop
lldt
test
mov
xchg
add
pop
sub
ffreep
mov
sahf
das
and
sub
shlb
or
push
mov
sub
lock
dec
and
inc
mul
add
pop
jmp
push
or
adc
das
pop
sub
mov
lcall
sti
loopne
sub
mov
fists
ret
jbe
add
insl
cmp
dec
lea
sub
lcall
pop
jl
add
sub
cli
fistl
int
inc
stos
inc
cld
lcall
movl
xchg
cmp
mov
xchg
aaa
add
xchg
fisubs
dec
jnp
mov
mov
aad
mov
popf
movb
add
xchg
test
pop
add
stos
icebp
mov
andl
lcall
sub
mov
movsb
ret
test
into
in
fildl
sub
mov
sbb
xchg
xchg
xchg
dec
into
mov
movsb
fidivrs
aam
add
add
jmp
loope
dec
mov
jp
dec
add
clc
push
icebp
inc
addb
mov
cwtl
into
sub
arpl
jecxz
sti
pop
movb
dec
movsb
data16
nop
enter
xchg
pop
fwait
in
shll
pop
add
mov
mov
pop
mov
es
cmp
mov
outsb
add
mov
add
add
in
aas
std
cmp
lea
cli
sti
adc
mov
cmp
and
add
add
loop
cmp
insl
lret
add
add
inc
cltd
jl
not
sub
push
add
out
or
mov
hlt
fistpl
add
das
dec
cmpsl
add
jbe
pop
jbe
js
push
add
repnz
fsubs
mov
les
jle
aam
add
add
hlt
mov
stos
in
jg
sub
add
xchg
ret
mov
fs
dec
add
add
mov
pusha
loopne
xor
mul
add
cmpsb
pop
sbb
push
cld
leave
lahf
inc
mov
add
xor
popa
mov
lret
inc
add
leave
rclb
or
divl
fsincos
out
or
stos
pop
cld
rcrb
sub
aad
out
adc
cltd
bnd
add
leave
sub
pop
addr16
or
mov
loopw
test
insb
add
mov
sub
jnp
out
sub
cmp
mov
jne
les
cmp
cmpsb
or
or
add
xchg
xchg
fisubrs
rcrl
add
pop
pop
psubb
dec
push
adc
add
dec
mov
es
add
lds
scas
loopne
cmpsl
add
sub
add
inc
pop
mov
adc
dec
test
add
add
imul
gs
aas
ljmp
adc
insl
lds
inc
dec
inc
mov
sub
aaa
rcrb
sub
lcall
cwtl
nop
sbb
add
inc
pop
pop
xchg
push
push
mov
adc
add
out
fdivrs
xchg
jg
pop
aaa
add
jb
add
push
adc
fiaddl
cmp
aas
inc
pop
add
add
std
jge
sub
faddl
mov
enter
fsts
repz
add
lock
jmp
movb
adc
ja
add
pop
add
int
sar
push
jg
addb
or
xchg
add
cmp
enter
subl
cmp
sub
nop
mov
lret
add
add
pushf
pop
in
jp
scas
cli
sete
cld
add
rcr
jg
enter
xor
pop
repnz
mov
add
mov
jp
mov
add
cltd
dec
mov
je
xor
imul
jo
mov
ljmp
mov
xchg
xchg
rorl
out
and
xor
lahf
negl
adc
add
push
jnp
mov
ljmp
add
sbbl
sub
jno
in
sub
iret
aam
cltd
or
add
xchg
cmpsb
ja
orb
loop
push
fmuls
xor
or
add
lds
jb
aas
add
add
push
mov
and
lahf
cs
into
data16
fadd
mov
inc
popa
add
insl
js
push
lret
and
or
mov
add
sub
leave
jecxz
into
fidivrs
mov
cmp
cmp
cli
cmc
sarb
jb
inc
sub
add
mov
addr16
jmp
lcall
push
dec
daa
insl
fstpt
testl
int3
pushf
out
loopne
xor
xchg
mov
inc
pop
repnz
scas
jl
mov
sbb
movsl
lds
cmpl
pop
sub
mov
sub
jmp
cs
adc
mov
aad
cmp
mov
add
arpl
dec
sbb
loopne
add
add
out
dec
mov
cmp
sti
pop
xchg
add
adc
in
pop
dec
out
add
lock
sub
rcl
or
push
add
sub
cli
into
bound
sarl
in
out
xlat
insb
pop
test
aaa
lret
add
push
sub
icebp
cmpsb
imul
mov
dec
cmp
in
add
lret
sti
lods
lret
sub
add
rcrl
hlt
jl
loop
ja
sti
push
in
flds
shll
jae
jmp
data16
add
leave
cmc
adc
movsb
mov
js
add
lods
cld
mov
outsb
in
or
push
gs
sahf
jp
xor
rcr
or
cmp
fimuls
int3
xchg
add
idivl
pusha
sbb
mov
fnsave
pop
outsl
stos
ja
mov
sbb
xor
sbb
enter
orl
push
pop
push
or
xor
cltd
add
ret
jo
dec
sbb
out
push
add
mov
sbb
xchg
add
xchg
mov
inc
leave
ret
sbb
push
ret
stc
adc
stos
xchg
pusha
outsb
and
add
xchg
daa
nop
pop
cltd
hlt
dec
xor
test
cmc
add
jns
bound
stc
add
leave
dec
inc
fs
mov
shl
mov
in
fsubl
insl
and
jg
xchg
add
and
test
add
adcl
loope
sbb
mov
cmc
inc
sbb
jp
fs
lret
dec
pop
adc
test
xor
hlt
adc
popa
repnz
call
nop
xchg
add
leave
sub
mov
aaa
movsl
cmp
add
push
loope
inc
es
jbe
pop
add
movsb
sbb
cli
inc
cwtl
lods
lds
ds
xor
cmp
cs
add
cvttps2pi
pop
divb
mov
ja
pusha
dec
jmp
mov
es
and
mov
stos
lds
mov
jge
cli
lahf
das
jg
repz
into
jb
add
push
push
pop
lcall
adc
xchg
and
pop
mov
jb
filds
adcb
aam
jp
subb
iret
push
es
jmp
xchg
jecxz
out
add
mov
pop
ljmp
enter
dec
mov
or
imulb
faddl
and
and
lahf
cld
jmp
outsb
xor
iret
jo
aas
in
in
mov
test
push
enter
into
int3
push
xor
popa
mov
sahf
movb
ja
push
sub
stos
or
add
in
inc
cmpl
imul
add
fdiv
sti
add
cmpsl
xchg
xchg
mov
addr16
inc
add
out
ja
mov
sub
in
scas
mov
shrb
fwait
imul
inc
arpl
cmp
dec
pop
and
sbb
xor
inc
jge
repnz
add
sti
sub
test
inc
push
jnp
les
sub
fwait
cmpsb
push
gs
add
or
or
stos
out
sahf
lock
ja
out
inc
je
dec
ud0
jmp
es
jl
mov
jbe
mov
sbb
movsb
adc
push
push
imul
gs
cs
cwtl
mov
pop
insb
xor
rcr
add
test
inc
and
scas
nop
loop
mov
in
aam
jge
and
add
mov
pop
stos
das
out
inc
negl
fsubl
out
repz
decb
adc
popf
outsl
jne
xor
xor
push
push
gs
sub
cmp
imul
jecxz
dec
rcrl
xor
add
pop
jns
add
cld
popf
and
push
and
push
nop
lods
pop
je
inc
mov
adc
cmpsb
dec
adc
pop
sbb
lret
and
mov
shll
jnp
adc
int
lods
dec
out
mul
sti
pop
outsb
fsubp
cmp
pusha
add
inc
pop
cmp
add
push
push
push
sbb
push
add
mov
repnz
enter
push
dec
dec
movsb
jnp
ljmp
xchg
mov
jmp
mov
xchg
sub
push
pop
mov
add
jg
clc
lret
jo
add
enter
arpl
fsub
push
pop
je
scas
clc
pop
in
xlat
add
test
aam
stc
xchg
movsl
rclb
aas
sbb
add
lahf
testl
sub
rolb
pusha
add
or
sbb
stos
xor
ficoms
and
add
jg
shll
and
xchg
dec
inc
lock
add
xchg
add
inc
add
inc
imul
push
in
jmp
or
das
add
push
jo
push
xchg
push
or
movsb
add
xor
outsl
add
push
dec
push
and
jbe
in
pop
add
push
std
jp
and
add
xchg
popf
adc
dec
push
inc
cmp
jo
lock
jcxz
loope
add
in
mov
test
movsl
fisubs
push
jg
adc
dec
loope
sub
leave
jb
jecxz
push
mov
adc
mov
push
cmpsl
movl
mov
mov
cwtl
fwait
add
push
jbe
int
in
adc
mov
and
or
outsb
add
icebp
ret
cwtl
lcall
testl
jb
inc
inc
repz
add
addb
cmp
inc
add
sbb
es
mov
add
das
sahf
add
mov
fwait
ds
roll
push
or
inc
mov
pop
popf
idivb
inc
xchg
ja
add
movsb
lea
mov
add
add
addr16
pop
or
xor
inc
add
mov
dec
adc
jecxz
shr
adc
int
call
xor
sub
arpl
cmpsl
divl
jo
mov
add
fbld
xchg
pop
rcrb
in
rolb
outsl
mov
sbb
je
jnp
mov
dec
fstps
fcoms
xchg
sub
call
push
push
fmull
and
push
jl
add
sub
dec
push
jecxz
add
cmp
mov
pcmpgtb
lds
jno
or
scas
imul
xor
scas
popa
mov
mov
xchg
add
call
ja
aas
jg
fildl
rorb
jp
std
add
mov
pop
xor
mov
aad
push
mov
lods
rorb
aaa
add
mov
mov
or
jecxz
fcmovnb
roll
inc
add
jne
pop
inc
addb
std
mov
jb
cmp
inc
or
add
insl
mov
sbb
mov
fst
fdivrp
loope
and
dec
jle
adcl
or
adc
mov
incl
xor
int3
inc
scas
mov
add
push
add
dec
pop
loopne
aas
add
ret
cmc
leave
pop
cli
pop
push
fiadds
aas
das
jbe
cmp
cltd
sbb
cmp
in
xchg
dec
sahf
rorl
sub
and
add
xor
jmp
dec
aaa
insl
enter
sbb
cwtl
into
xor
mov
add
jae
push
jne
lock
xor
push
sbb
scas
add
sub
pop
push
mov
aas
push
insb
push
add
jb
in
fstpt
out
add
mov
cwtl
cwtl
fnstcw
outsb
jnp
pop
fcmove
dec
and
in
popa
add
cmp
fwait
dec
sub
push
mov
adc
cld
add
mov
pop
imul
pusha
js
add
mov
jns
jecxz
xor
movsb
jmp
mov
je
xchg
jl
clc
add
mov
xor
fwait
iret
js
add
sbb
outsl
inc
sub
jecxz
out
shll
add
and
sbb
in
mov
pop
add
jo
roll
sbb
add
in
dec
rcrb
mov
xlat
add
sbb
sbb
jns
js
loope
push
loopne
lods
insl
mov
mov
add
pop
lods
mov
xchg
les
pop
call
ds
add
cli
insl
loop
mov
and
or
daa
ret
mov
je
push
sarb
cwtl
mov
adc
das
lods
fstpt
adc
inc
sub
dec
aad
xor
icebp
push
inc
dec
add
scas
nop
mov
mov
testb
lret
fcmovnbe
ret
stos
hlt
xorl
xchg
jns
add
jl
inc
adc
not
add
hlt
into
jns
jbe
gs
mov
add
lahf
imulb
lret
mov
pop
add
mov
mov
jnp
jg
add
int
jb
fwait
testl
negl
test
popf
les
add
push
or
add
cmp
add
in
push
mov
and
jl
fsubs
imul
faddp
scas
divb
xchg
outsl
push
or
fbstp
cwtl
sbb
add
rolb
cltd
add
xor
sub
push
rclb
icebp
xor
xlat
imul
add
cmp
xchg
in
sbb
push
mov
sub
hlt
mov
in
jl
outsl
iret
lods
or
add
out
aas
ljmp
cli
or
dec
test
jmp
pop
cld
add
call
mov
stos
mov
fisubl
dec
mov
cmp
iret
or
fsub
push
out
outsb
add
xor
aad
mov
cmp
cmp
add
mov
in
gs
sti
adc
mov
adc
push
popa
inc
sbb
add
sbb
xor
lods
movsl
mov
add
aam
inc
leave
movsb
mov
jecxz
aam
xor
iret
sahf
lock
in
inc
add
in
popw
pusha
xchg
xchg
xchg
mov
call
scas
popf
mov
call
in
add
or
out
cmpsb
movsl
lret
push
shll
mov
in
xchg
dec
adc
scas
call
add
aad
je
das
arpl
ljmp
adc
sub
xor
lock
mov
jbe
mov
xchg
cmp
inc
xor
add
mov
and
mov
roll
mov
negb
sub
push
sti
dec
add
std
sub
scas
orb
sahf
add
push
mov
out
mov
sub
mov
lahf
aad
dec
ja
into
jae
cmp
add
sub
testl
add
lock
cld
sub
mov
cmp
sbb
adc
out
sub
pop
cmp
sbb
xchg
packuswb
xlat
insb
add
push
ja
inc
cmpsb
mov
sub
mov
mov
adc
movsb
add
ds
and
outsl
jns
or
dec
in
arpl
push
mov
in
adc
ror
nop
loope
fldenv
inc
arpl
lds
or
xchg
cmc
fisttps
dec
xor
mov
aad
lahf
ljmp
adc
add
push
xchg
js
sbb
pushf
jp
imul
das
sahf
dec
xchg
xchg
in
dec
add
nop
xchg
jmp
dec
mov
stc
cmpsl
stc
mov
jge
mov
add
dec
gs
mov
dec
jmp
pop
pop
jp
insb
inc
dec
jle
push
xchg
push
nop
add
inc
push
adc
and
cmp
xlat
pop
inc
add
sbb
push
insl
add
ja
lods
push
int3
xor
nop
add
or
inc
sub
sub
sahf
add
inc
outsb
into
int
cmp
test
add
lret
sti
add
call
pop
mov
cmp
cltd
jle
test
dec
push
icebp
call
cmp
jecxz
jl
add
pusha
lahf
cmp
pusha
and
bound
add
dec
aaa
jecxz
sub
jbe
popf
add
xor
fildll
mov
add
pop
cli
lods
repnz
jg
movsb
mov
xchg
mov
xchg
add
cwtl
push
int3
mov
dec
cs
lds
cmp
add
mov
out
gs
mov
add
mov
leave
rol
xchg
movsb
mov
mov
cs
mov
insb
aaa
xchg
popa
add
pusha
stos
jp
jo
and
sbb
rol
add
fucomi
fs
add
add
cld
push
add
xchg
jno
shlb
cmp
mov
mov
fucomp
xchg
push
add
push
sub
aas
int3
out
xchg
or
mov
out
fsubrs
ja
sbb
lds
addr16
loope
mov
out
xor
xchg
adc
sbb
popf
xor
sbb
lods
int
jnp
clc
insb
cltd
inc
rcr
push
lret
int3
add
xor
mov
cmp
push
sbb
and
arpl
jp
test
in
mov
insl
mov
add
adc
inc
xorb
shl
add
fidivrs
jmp
mov
arpl
cmp
inc
gs
mov
and
or
inc
mov
mov
orb
or
bound
pop
inc
lcall
call
add
movsl
mov
dec
addb
ja
data16
cmp
imul
daa
mul
sbb
jno
or
sub
popf
and
adc
add
dec
cmp
mov
out
push
add
jb
dec
cs
and
mov
mov
pop
arpl
pop
dec
lcall
add
and
iret
repz
pop
mov
add
mov
sbb
xlat
xor
add
lahf
stos
ljmp
mov
loop
lea
loopne
adc
ret
movsb
add
lods
scas
scas
rol
inc
fwait
sub
sub
ficomps
add
cmp
dec
loopne
repnz
push
ss
sub
fnsave
movb
jno
dec
mov
adc
fcomp
add
cmpsl
fldcw
xchg
xor
rolb
mov
mov
flds
cld
mov
mov
push
push
sbb
pop
sbb
orb
xor
mov
scas
daa
mov
mov
xchg
roll
sub
push
or
jg
sub
push
add
jl
adc
jge
or
push
sub
jmp
cli
jmp
in
scas
mov
or
fdivrs
fucomp
pop
cwtl
test
cmp
ljmp
mov
test
lret
add
inc
inc
jbe
addl
add
jnp
es
jb
out
ds
mov
xchg
sbb
nop
push
mov
add
nop
je
aaa
es
lds
das
stos
movswl
mov
ret
pop
add
je
out
push
lcall
mov
adc
or
fwait
add
loope
xchg
xchg
addr16
insb
mov
add
sub
dec
adc
xor
shl
and
add
rcr
xchg
and
add
push
inc
shll
es
sub
aam
in
leave
outsb
rcrl
xor
push
pop
xor
iret
add
mov
mov
outsb
das
enter
sbb
jb
jp
add
add
mov
jmp
lock
cld
jge
mov
mov
aas
or
and
pop
fisttpll
jp
xor
add
arpl
popf
mov
std
pushf
mov
dec
lret
lcall
push
sbb
ret
sbb
jg
fcom
push
js
add
into
dec
inc
mov
mov
adc
mov
or
loop
sbb
sub
pop
add
xor
mov
stos
xchg
mov
mov
and
fs
add
sub
push
jae
push
stc
lcall
idivl
ret
cmp
cwtl
dec
mov
lock
inc
xchg
daa
add
xchg
pop
and
dec
shlb
or
adc
scas
iret
jbe
add
subb
das
mov
or
scas
cwtl
fadds
mov
gs
or
push
pop
fwait
xor
xchg
adc
push
mov
in
adcb
cmp
in
arpl
inc
and
stos
js
sbb
fimull
add
ficoml
adc
test
mov
stos
scas
aad
lahf
add
and
mov
mov
jp
push
pop
mov
push
inc
xchg
pop
lcall
sub
stc
lret
into
pop
cld
add
xorl
enter
leave
out
mov
push
jp
shrb
mov
inc
cmp
cld
sub
test
ds
push
inc
xlat
cmp
addr16
sbb
push
shrb
stos
pop
cmp
sub
std
fidivs
hlt
mov
xchg
data16
jne
dec
pushf
shll
ljmp
cld
scas
jg
cmp
std
dec
dec
add
adc
movsl
adc
dec
shlb
jmp
jg
fwait
add
pop
sub
sahf
push
add
pusha
je
mov
shrb
scas
add
pop
cli
cmpsb
lods
sub
xchg
xor
mov
add
adc
dec
sahf
aaa
mov
and
add
fmuls
sub
pop
mov
cmp
lods
adc
je
std
in
jae
lock
pop
pop
ljmp
mov
add
bound
mov
add
mov
loop
daa
mov
enter
arpl
add
sub
mov
mov
cmp
mov
add
ret
je
icebp
mov
add
cmp
jns
fneni(8087
add
inc
mov
add
addl
jp
or
mov
pop
dec
repnz
sbb
repz
into
cmp
js
jne
js
test
add
or
movl
push
jnp
ret
dec
lods
and
xchg
insb
adc
rcr
aas
and
je,pt
add
jbe
test
mov
jb
or
sbb
cmpsl
and
mov
addr16
or
sbb
push
xchg
fstpl
mov
push
dec
into
push
mov
aad
add
jecxz
clc
ljmp
scas
mov
mov
push
dec
xchg
fwait
out
pop
test
add
cmp
and
mov
and
mov
adc
jbe
aaa
cmp
add
imul
aaa
or
add
dec
mov
sub
add
movsb
int
jg
jle
andl
add
lret
adc
lods
push
shl
add
cmp
lds
stc
mov
lret
mov
or
sbb
pop
icebp
or
push
inc
jnp
out
push
sbb
pop
iret
dec
xor
or
js
push
jg
xchg
jne
cmp
jg
add
cli
cmp
pop
add
push
sub
sbb
add
scas
fmull
ret
adc
or
fcomi
mov
jbe
clc
inc
cmpsl
aad
dec
fiaddl
jne
out
sbb
hlt
int
add
mov
inc
mov
jecxz
out
cwtl
mov
fcmovbe
push
mov
and
clc
iret
ljmp
dec
and
push
cmp
push
les
adc
das
mov
fisttpll
pushf
mov
mov
popf
out
mov
or
scas
push
insl
aaa
rolb
dec
cs
mov
stos
and
out
cmp
mov
add
aam
add
dec
shr
push
fs
sub
fsub
add
mov
or
jl
inc
push
cs
xchg
popa
js
les
add
or
xchg
in
leave
add
not
test
inc
insl
ljmp
add
iret
aaa
loop
daa
mov
pop
dec
iret
add
dec
mov
int
dec
add
out
and
pop
xor
or
sbb
add
push
pop
fisubrs
xchg
cmpsl
push
add
push
punpcklwd
into
sarl
add
cmpb
pop
jno
sbb
push
iret
xor
mov
out
sub
xor
add
lds
pop
cwtl
or
cmp
pavgb
xchg
stos
xchg
mov
lock
insl
inc
cmc
or
adc
xchg
or
jecxz
add
clc
push
mov
pop
pop
int
or
inc
or
movb
in
in
leave
adc
sbb
int
add
add
dec
jmp
jo
xchg
lods
pop
dec
stc
adc
add
xor
cmpb
ds
in
aam
mov
mov
sub
sti
add
repz
stos
insb
daa
lea
jo
and
stos
add
dec
lea
cld
add
sbb
rclb
xor
enter
sti
scas
jg
sbb
or
add
arpl
adc
xor
adc
aad
cs
xor
jne
cmp
das
inc
aaa
lods
add
or
data16
add
iret
adc
mov
fxch
aad
add
mov
call
mov
pop
out
mov
cmp
test
jl
mov
adc
add
pop
adc
nop
lods
xor
mov
loope
add
add
jo
scas
fwait
into
int
arpl
push
fdivl
and
cltd
add
sahf
lret
dec
dec
int
push
xor
leave
mov
or
call
cmp
testb
sbbb
loope
sub
outsb
cld
add
ds
push
mov
push
imul
jge
incl
jp
add
nop
pusha
inc
jmp
arpl
pop
out
mov
es
outsb
push
in
sbb
add
arpl
pop
push
lret
lret
movsb
add
cmp
rolb
sbb
adc
mov
push
add
out
mov
div
sti
xchg
mov
pusha
test
pop
push
fisubs
push
mov
shll
addb
xchg
ret
mov
add
inc
or
add
add
in
xor
fldl
dec
mov
mov
cmc
test
add
xchg
fwait
cld
dec
addl
js
aam
jb
imul
roll
and
xlat
dec
mov
loopne
mov
int
daa
addr16
add
sbb
jl
ds
ss
loope
dec
mov
jmp
fisttpl
bound
push
lahf
mov
cli
popa
mov
push
fs
lahf
in
adc
add
sub
fstpl
jo
jle
daa
add
push
jle
ljmp
dec
hlt
mov
std
pop
adc
jecxz
movsb
and
and
add
test
pop
pop
test
add
imul
inc
lods
in
test
into
imul
jle
das
pop
sti
add
idivb
cmp
push
add
lahf
out
jne
add
fwait
outsb
add
or
fnstenv
add
in
add
mov
xchg
cmpl
sbb
loop
or
pop
scas
ss
aad
add
xchg
adc
cmp
and
xchg
rorb
imulb
fsubrs
jne
nop
add
push
push
sub
add
mov
push
test
xchg
pushf
add
pop
xor
add
cmp
fcmovnb
int
fs
cli
imul
leave
dec
aam
loopne
cld
push
cmp
shll
sbb
pop
mov
add
sbb
sub
repnz
sbb
and
enter
push
pop
js
fwait
inc
ficoml
xchg
in
outsl
dec
add
cmpsb
cmp
iret
xchg
xchg
incb
push
call
clc
add
mov
add
inc
data16
std
xor
or
repnz
push
and
xchg
xchg
add
enter
out
in
pop
sahf
scas
roll
inc
in
sarb
mov
inc
add
jge
or
jle
pop
dec
aas
push
stos
roll
out
divb
add
jbe
jae
add
aad
dec
push
xchg
adc
test
lahf
fiadds
fsubp
cmp
or
dec
movsb
enter
popl
div
mov
mov
addr16
add
ds
pop
shlb
or
push
lds
mov
xor
out
and
sub
add
mull
lret
mov
jge
and
jnp
dec
mov
cmp
jmp
add
icebp
in
popa
push
sub
mov
push
jb
insl
fisttps
lret
imul
or
stc
popf
inc
add
xor
dec
into
pusha
mov
adc
test
stos
push
inc
add
push
in
push
or
scas
fsincos
loope
push
roll
mov
movb
xor
mov
fiaddl
cmc
dec
or
dec
cli
fistpl
movsb
push
xchg
cmp
mov
push
adc
and
adc
test
roll
adc
insl
pushf
loopne
inc
insb
or
mov
out
jp
aam
add
fs
outsb
pop
mov
dec
iret
in
mov
xor
or
mov
jp
and
mov
mov
ret
mov
sbb
jae
xchg
insb
loope
push
mov
pop
or
out
mov
mov
xchg
cmpsb
and
jg
imul
mov
verw
pop
out
or
pusha
ja
pop
imul
mov
mov
dec
add
in
outsl
fstl
jecxz
push
add
mov
add
in
mov
pop
mov
inc
add
jl
es
loope
imul
dec
sub
mov
fucomp
ret
add
lea
bound
cmp
outsl
adc
icebp
adc
push
mov
xchg
hlt
add
dec
cmp
push
scas
repnz
rcl
push
imul
int
adc
cmp
adc
into
test
fwait
sub
out
ds
loopne
aas
lret
xor
adc
divb
ds
and
push
mov
mov
clc
dec
out
xchg
imul
jnp
int3
jno
mov
xchg
popa
stos
js
mov
lret
pop
in
add
sbb
cwtl
andl
dec
mulb
sbb
fists
out
int3
popa
jns
mov
stc
add
int
cmp
push
insl
sbb
add
divl
jno
popf
pop
mov
add
jle
idivl
sbb
outsl
fldenv
loopne
sub
xor
xchg
inc
push
xor
loop
or
movsb
or
fists
cld
add
and
push
or
sub
sub
and
push
add
or
mov
mov
xchg
shrb
add
sarb
and
insl
sub
xor
add
lret
mov
sub
add
icebp
mov
insb
mov
movsb
add
fldenv
xor
insb
push
add
xor
pop
sub
push
dec
aam
mov
arpl
xor
mov
mov
repnz
xlat
pushf
loopnew
mov
adc
icebp
int
pop
sub
testl
push
in
in
push
xlat
repz
add
and
xchg
lods
icebp
xor
je
adc
xchg
sub
rep
xchg
neg
cmp
notb
jae
mov
fwait
push
pop
cmpsl
mov
roll
jnp
xchg
cmp
cltd
sub
insb
arpl
add
das
stos
mov
add
mov
inc
or
sbb
xchg
jne
ret
xchg
sbb
decb
xor
repz
addr16
jp
sbb
ds
pop
add
fbstp
sarl
add
mov
pop
int3
adcl
inc
xor
inc
sub
int
add
sub
test
test
test
test
mov
inc
lahf
sub
sbb
adc
test
movsb
xlat
cld
ret
shlb
dec
or
xor
add
push
shll
pop
jg
int3
add
inc
inc
in
cwtl
inc
loop
mov
test
add
in
dec
and
add
mov
test
lods
adc
mov
inc
mov
add
clc
dec
adc
aad
add
xor
xor
sbb
xor
mov
std
mov
stos
mov
fadds
mov
dec
cmpsb
clts
movsb
push
add
xlat
pop
sub
mov
out
adc
sub
fdivs
insb
add
test
sbb
fstps
xchg
push
add
pop
mov
push
enter
add
and
vmwrite
jl
lcall
push
or
mov
in
cmp
pop
add
sub
addr16
rcrl
add
repnz
jl
aad
inc
pop
or
es
dec
jg
add
jmp
jl
add
shr
sub
mov
loope
imul
cltd
out
addl
lret
jmp
mov
xchg
push
xor
add
std
lock
jnp
sbb
hlt
xchg
clc
xor
dec
mov
fildl
add
cmp
lods
inc
and
dec
mov
sub
cmp
lret
ds
fbld
add
push
inc
fnsave
cld
inc
push
sahf
testb
mov
add
xor
or
cli
divb
add
hlt
xor
inc
dec
lea
test
call
jmp
nop
cmp
jne
sub
mov
add
jg
mov
pop
movsl
pusha
mov
push
loopne
dec
push
mov
jge
sahf
les
jg
cmp
fcmovu
xor
mov
nop
cmpl
lahf
add
into
icebp
mov
insl
in
lret
sub
lea
dec
jp
add
xorl
adc
and
rcll
xchg
pop
add
les
out
adc
dec
add
or
shlb
add
sbb
xchg
mov
stos
mov
mov
dec
and
inc
lea
push
pop
sub
add
cmp
jg
jp
or
adc
add
test
js
dec
pop
cmpsb
mov
push
iret
dec
sbb
je
push
sub
loop
add
pop
inc
push
gs
pop
sub
inc
mov
pop
mov
mov
sti
icebp
mov
or
adc
lock
cli
sbb
mov
push
cmpsb
cmpsb
inc
add
movsl
xchg
cwtl
fndisi(8087
mov
dec
cmp
sub
imul
mov
add
ja
ljmp
add
push
movzbl
mov
xlat
sbb
or
dec
adc
cli
mov
add
inc
sub
cmp
outsl
add
mov
mov
and
aam
into
xorl
daa
sbb
jecxz
mov
repz
outsb
fs
dec
add
sub
insl
insb
push
outsb
stos
ja
add
cltd
jb
jp
cmp
add
out
aad
mov
int
out
add
rolb
leave
insb
hlt
cmp
movsl
bound
mov
or
add
xchg
popa
sar
push
push
add
jmp
rol
push
push
cmc
lret
add
mov
pop
mov
rolb
push
into
mov
mov
or
adc
add
push
adc
es
ret
mov
add
fwait
jne
xor
and
pop
fisttpl
ljmp
xchg
lds
sbb
jmp
jo
das
test
xlat
sbb
sarb
inc
mov
and
cmp
sti
or
out
pusha
add
push
cld
clc
out
xor
fsin
adc
or
jbe
push
mov
cli
leave
sahf
aam
nop
add
or
movsl
adc
sub
mov
pop
es
xor
add
pushf
xor
push
popf
push
lods
incl
bound
push
dec
inc
aad
ficoms
jnp
mov
mov
ret
add
xor
pop
insl
repz
xchg
add
pop
stc
xor
jecxz
mov
and
mov
pop
test
push
pop
ljmp
dec
cmp
xchg
icebp
sbb
xchg
cmp
push
movzbl
add
cmpsb
repnz
int
ja
ljmp
movsb
mov
jne
bound
add
enter
jno
inc
pop
addb
das
pop
scas
push
add
fdivrp
inc
mov
push
jecxz
cs
lahf
xor
xchg
out
imul
sahf
test
adc
test
imul
out
mov
ljmp
sar
lock
pusha
dec
ja
pushl
movsl
sub
fisubrs
xchg
outsl
or
stc
mov
insl
ds
lret
jle
mov
dec
jmp
pop
push
cmpsl
sbb
cmp
gs
sbb
sub
sarb
lock
inc
mov
jnp
testl
dec
lret
xor
pop
test
sbbl
add
jecxz
loop
jo
mov
std
mov
clc
pop
fmull
imul
inc
jl
shll
stc
xchg
xor
lea
int3
imul
outsl
insl
and
xor
ljmp
out
pop
stc
mov
mov
rcrl
add
mov
sub
mov
push
in
add
xchg
push
and
jnp
es
add
insl
popa
push
mov
enter
push
add
push
add
xlat
sbb
jmp
mov
pop
push
insb
sbb
fs
mov
sahf
jns
add
sbb
fucomip
xlat
xor
popf
out
cmpsb
mov
stc
test
or
lods
add
xorl
mov
mov
xchg
int3
add
cmp
cmp
js
pop
std
adc
in
sub
push
loop
inc
jmp
jg
add
lcall
mov
add
adc
jbe
repz
pop
add
iret
inc
sbb
sahf
mov
ficompl
hlt
mov
inc
mov
jecxz
add
mov
test
dec
in
rorb
mov
ret
dec
int
int3
xchg
adc
cmpsl
add
pushf
aad
add
fistl
add
and
jp
dec
lea
and
pop
mov
sub
into
test
cmp
push
sub
inc
xor
push
xor
pop
fcomi
aas
mov
xchg
mov
push
stc
aad
jmp
mov
shrb
mov
loop
jbe
movsb
sbb
sbb
mov
xchg
aad
rclb
sub
xchg
test
jnp
add
syscall
outsl
push
xor
add
mov
lock
jecxz
fmull
mov
adc
add
xchg
sbb
and
xchg
div
imul
pop
cmp
sub
arpl
pop
inc
mov
hlt
sti
fsubr
sub
cmp
dec
cmp
sub
sbb
xchg
stc
xchg
xchg
sub
fisubrl
movsl
hlt
leave
xchg
sbb
jnp
push
add
mov
loope
neg
add
scas
sub
sbb
or
push
add
cmp
pop
jmp
es
loop
add
out
push
mov
mov
xchg
mov
scas
add
xor
fwait
add
rol
outsl
pop
pop
in
xor
add
or
dec
idivb
call
and
loop
mov
cmc
xchg
dec
add
arpl
or
mov
adc
repz
xor
into
test
imul
sahf
jne
xchg
and
or
jmp
mov
mov
add
sub
pop
lcall
sub
mov
mov
mov
loope
add
mov
in
adc
insb
sbb
add
jae
jne
jne
insb
loop
test
mov
add
les
dec
and
jae
pushf
cmpsl
pop
jbe
add
fs
and
ss
es
dec
test
jbe
sub
mov
add
mov
rclb
sub
add
inc
mov
les
movl
test
lahf
mov
cld
ret
jecxz,pt
add
sbb
add
or
xchg
ret
cmp
xchg
clc
mov
dec
sti
aaa
mov
mov
xchg
xor
add
add
je
sub
pop
popl
outsb
jno
lret
dec
pop
rcrb
cwtl
ret
outsl
shll
out
mov
rcl
jne
push
add
ret
cmpsb
clc
stos
mov
mov
cmp
xlat
pop
out
jno
subl
xchg
add
jmp
jmp
fcomi
add
enter
shlb
mov
fdivs
test
mov
jmp
cmpsb
and
movsl
mov
add
cmc
sti
mov
pop
outsb
push
adc
pop
insl
outsb
cmp
scas
ret
adc
mov
inc
and
sahf
push
std
out
loopne
test
add
cmp
out
add
fwait
inc
adc
add
cmp
rorb
dec
in
push
leave
mov
adc
push
cmpsb
add
cli
xor
pop
cmp
cmp
cmp
mov
xchg
dec
lret
gs
pop
add
or
loop
out
clc
js
or
mov
dec
inc
inc
jno
inc
add
add
cmp
xor
test
add
jecxz
mov
iret
jbe
in
mov
lea
fsubs
sub
rcl
mov
add
in
test
sub
stc
dec
cmp
cmpsl
loop
movl
lahf
push
sbb
add
rcrb
popf
push
loopne
or
call
jp
adc
add
jnp
xchg
orl
mov
add
cmc
xor
mov
test
inc
sbb
nop
or
inc
mov
in
xchg
ficoml
arpl
dec
mov
aad
add
stos
inc
call
enter
cli
pop
add
dec
and
or
test
pushf
mov
dec
jmp
int
and
jae
icebp
mov
outsl
fmull
xor
jae
rcr
test
lods
add
sub
fdivl
aas
push
sub
outsb
mov
loop
add
popa
jle
inc
and
jae
popf
add
mov
pop
ja
out
fistl
aam
add
lea
out
movsl
cmp
aas
cmp
enter
jae
cmc
into
mov
iret
sub
out
std
hlt
add
orl
andl
sti
push
movsb
jmp
sbb
cmp
mov
jnp
aad
bnd
add
pop
ljmp
cmp
mov
add
insl
movsb
push
lds
inc
mov
add
out
fxch
das
jns
mov
xchg
inc
arpl
mov
add
sub
and
mov
xchg
dec
fcoml
out
cmpsb
iret
ret
and
sub
daa
aaa
add
dec
sahf
imul
test
cmp
mov
dec
add
mov
add
ss
mov
mov
sub
stos
mov
add
mov
sub
cmp
add
sub
sub
lods
imul
sti
test
mov
aas
cmp
sahf
or
jecxz
sbb
imul
add
jae
pop
in
dec
mov
mov
data16
testl
loopne
dec
scas
bound
mov
cs
cmp
adc
sbb
scas
fs
add
xor
adc
xor
push
sahf
push
mov
jo
xchg
mov
hlt
dec
or
out
ficompl
push
call
mov
add
pop
add
sub
enter
xchg
xchg
clc
dec
add
add
push
mov
out
andl
int
push
daa
push
shrl
lret
add
mov
iret
mov
add
cmp
mov
add
lea
sbb
fistpl
stos
add
leave
adc
fwait
add
shlb
enter
and
add
and
adc
pop
jmp
mov
pop
add
jne
popf
push
pop
lcall
dec
add
pop
lods
push
push
sub
and
mov
lods
sar
pop
sahf
aaa
push
add
sub
push
jmp
fistps
shrl
jns
es
bound
dec
loope
jb
cmpsl
imul
add
jp
lcall
arpl
jmp
cmpl
mov
lahf
mov
pushf
outsb
scas
cmp
pop
outsl
add
mov
or
add
or
cli
popf
cmp
addps
push
imul
add
add
xchg
xchg
or
jecxz
inc
dec
xor
add
jle
ds
ret
scas
flds
sub
cmpsb
ljmp
loopne
fs
imulb
adc
jle
jle
push
incl
test
movsl
fucomp
mov
popa
pop
sahf
outsb
add
insl
push
pushf
das
das
in
add
pop
shrb
outsl
add
mov
lcall
lcall
lock
or
mov
incl
mov
sahf
jge
add
mov
sarb
outsb
dec
push
push
loop
pop
add
test
inc
xlat
jno
mov
sub
jnp
sbb
mov
pop
jne
sbb
lahf
push
cmp
add
mov
jmp
mov
test
int
cmp
pop
scas
out
jg
stos
mov
and
add
pop
dec
popa
jbe
std
sbb
lret
cmp
mov
mov
pop
into
int3
dec
dec
mov
dec
mov
mov
mov
cwtl
mov
cmpsb
mov
pop
pusha
movsb
mov
push
pop
dec
pop
jb
ljmp
sub
outsb
pop
dec
cmc
daa
adc
stos
dec
fistpl
jae
das
dec
or
lods
sarb
and
das
xchg
jne
pop
cmp
add
dec
mov
sbb
aaa
lods
dec
sbb
mov
rcll
or
orb
add
pop
in
and
bnd
mov
or
lods
lret
cmp
mov
xchg
sahf
sbb
insl
add
loopne
shl
aaa
pusha
call
icebp
jge
rcr
imul
or
pop
fs
sub
push
pop
arpl
mov
cmp
je
mov
add
addr16
xor
sbb
inc
repnz
add
fidivrs
sub
push
inc
movsl
sbb
dec
mov
push
inc
jae
imul
add
loope
repnz
xor
or
adc
sub
mov
mull
lods
push
or
fsts
mov
out
idivb
add
cmpsl
adc
fcmovb
pushf
in
loop
dec
insb
add
fcmovnu
add
mov
arpl
add
and
stc
xchg
pop
mov
rolb
sbb
jmp
lret
inc
das
pop
daa
push
add
mov
xchg
icebp
add
jp
xor
and
and
fnstenv
lret
and
nop
jb
cmp
repz
jge
fs
and
lret
and
mov
icebp
mov
dec
dec
fstpt
add
xchg
outsl
scas
cmc
mov
cmp
push
add
cltd
push
dec
mov
add
repnz
cli
jmp
or
add
mov
add
fs
dec
or
cli
jne
add
mov
and
sub
int
aad
fwait
lahf
mov
add
call
vmovlps
data16
mov
arpl
dec
out
dec
imul
rcrb
pop
fsubs
test
sbb
push
shlb
stc
nop
sub
add
cmp
add
cwtl
sub
in
test
xchg
adc
das
aas
lock
loope
cmp
out
sub
sbb
jecxz
test
or
lret
outsl
out
add
cmpl
xchg
inc
mov
jnp
pop
add
xchg
adc
gs
pushf
sbb
add
jae
test
gs
adc
add
pusha
mov
push
dec
push
add
ja
cwtl
sbb
int3
jae
incl
inc
mov
inc
or
lds
sub
cwtl
add
mov
inc
sub
add
lods
push
in
lea
and
inc
inc
adc
mov
and
clc
push
add
cmp
cmpsb
out
or
daa
add
jmp
push
sub
xor
mov
add
pop
ds
lret
adc
push
or
nop
and
out
xchg
in
xchg
je
add
or
mov
clc
daa
mov
cmp
cmp
sub
cmp
stos
test
push
xchg
xchg
imul
mov
mov
inc
add
dec
dec
lock
in
ss
loopne
add
adc
add
inc
sub
lods
inc
jge
push
aam
pop
add
call
mov
sub
add
push
dec
cld
cli
sti
sbb
xchg
add
xor
je
arpl
mov
lods
sbb
add
test
mov
push
popf
add
int
scas
xchg
inc
dec
sub
popf
jge
mov
repnz
push
int3
mov
and
jno
test
call
aas
loope
add
and
rorb
cmp
push
adc
add
push
mov
xor
dec
or
lret
outsl
loop
push
movsl
call
fwait
pop
cmp
std
ljmp
xchg
repnz
mov
jg
in
push
out
add
rorb
scas
lret
ss
adc
mov
adcl
popf
cltd
jl
dec
repnz
mov
pop
pop
dec
or
pop
add
adc
out
cmp
and
sti
ds
and
sahf
enter
pop
jo
mov
add
lcall
or
fcoms
add
shrl
cmp
sub
adc
lret
shlb
rcll
loopne
or
sahf
sbb
jae
scas
xchg
and
sbb
in
cmp
insl
mov
in
sub
push
dec
notb
sbb
adc
lods
in
test
xchg
test
add
leave
or
add
test
push
dec
lods
call
sti
enter
ljmp
ja
fnstenv
mov
pop
in
loop
inc
test
mov
xor
mov
mov
and
in
int
add
orl
sbb
adc
fdivrl
orb
lds
sbb
mov
add
mov
lcall
ret
clc
add
push
mov
pop
cmc
les
add
rcl
pop
push
lods
inc
mov
xchg
rolb
movsb
icebp
mov
icebp
sub
adc
sbb
das
enter
sub
stos
push
pop
or
add
aas
nop
mov
sub
lahf
add
daa
adc
ret
pop
inc
or
imulb
shll
out
xchg
dec
das
mov
ljmp
mov
adc
rcrb
cmpsb
xlat
aas
fmulp
add
mov
in
and
fisttpll
pop
jne
loopne
mov
cltd
add
cmc
dec
orl
xor
cmpsb
sub
fs
sub
ret
push
adc
scas
xchg
imul
push
cli
xchg
lcall
rorl
sub
mov
mov
mov
lret
push
or
in
mov
pop
dec
clc
sar
shr
fadd
stc
fistpl
jecxz
or
into
loopne
add
out
xchg
mov
dec
lods
add
into
enter
pop
push
pushf
out
cmpsl
lock
push
cmp
sbb
cmp
mov
xorl
rorl
add
sbb
out
fcmovu
add
add
xchg
push
clc
cwtl
fldl
test
lahf
sub
add
lock
mov
cmp
lahf
stos
add
xchg
lret
and
ret
xor
pop
xchg
movsl
mov
dec
test
add
outsl
xchg
sbb
inc
jmp
test
icebp
push
out
jecxz
mov
add
loope
popf
int
pop
xchg
jl
add
jb
int3
add
xchg
jmp
adc
lods
cmp
jnp
outsl
clc
adc
mov
mov
lea
sbb
mov
ds
jno
xchg
xor
push
testb
push
dec
outsb
push
js
or
jae
or
int3
add
ret
decb
decl
nop
add
add
je
inc
adc
popf
jo
jns
push
int3
add
lahf
sbb
dec
xor
xchg
aaa
subl
adc
loope
cwtl
mov
lret
subl
cmp
sub
adc
test
mov
ja
std
mov
ss
cld
mov
pop
lea
faddl
aam
mov
dec
or
lret
pop
xchg
add
mov
xchg
fs
clc
inc
jl
add
jno
inc
aaa
xchg
cmp
mov
repz
out
jno
sbb
add
icebp
repz
shl
dec
jp
nop
sub
cwtl
add
lods
data16
test
leave
add
push
add
xchg
shlb
pop
push
imul
in
add
pusha
and
mov
lret
xchg
sbbb
fucomp
test
cmp
popa
sbb
jp
add
sbb
scas
sub
mov
cmp
addr16
mov
inc
cmp
int3
test
pop
addb
stos
xor
add
aaa
sahf
les
incb
push
add
xlat
pop
aam
pushf
shr
mov
add
dec
repnz
xor
add
out
push
or
rclb
jae
cmp
jnp
adc
mov
lret
adc
rcrl
mov
fwait
push
inc
jle
popa
popf
add
out
inc
jecxz
inc
mov
idivb
jle
mov
outsl
outsl
cli
movsb
jne
adcb
add
adc
dec
push
sbb
lds
movsb
mov
add
popa
cmp
jle
js
mov
xchg
sarb
xor
or
mov
mov
rcr
fucomip
or
jmp
cmpsb
cmc
push
test
mov
ja
loop
inc
in
jae
out
ja
jge
add
jg
mov
sarb
mov
add
push
stc
sbb
leave
rolb
sbb
cmp
mov
push
iret
leave
cmp
jno
data16
push
aaa
pop
or
call
xchg
fldl
lock
mov
pop
lret
jmp
je
sub
js
jne
jecxz
pop
add
sbb
loop
jp
xchg
ret
and
nop
push
inc
shll
xor
cli
jnp
and
xor
in
addb
pop
sub
icebp
and
stos
pop
lret
xchg
mov
add
jae
clc
test
inc
mov
jmp
xor
sbb
sub
idivl
repnz
sbb
cmpsb
jmp
add
fsubr
fnstenv
jae
lods
rolb
sbb
mov
negb
cmp
push
add
rcrb
movsb
push
fadd
xchg
push
or
add
push
in
cld
aas
jno
jnp
or
mov
push
sub
xor
mov
and
lods
xchg
xchg
insl
dec
add
xor
and
xlat
mov
in
pop
mov
push
int3
das
inc
jmp
add
or
pop
invd
ret
fldl
popl
scas
push
adc
ss
fadds
clc
lcall
leave
and
mov
mov
arpl
repnz
hlt
testl
hlt
daa
aad
shrl
mov
add
adc
test
inc
push
lea
push
add
lods
inc
stos
mov
out
add
dec
jecxz
in
mov
mov
cmp
data16
sti
inc
add
jmp
sbb
jl
dec
out
ja
or
add
sbb
stos
movsl
xchg
lea
add
nop
mov
insb
loope
bound
mov
add
push
pop
loopne
cwtl
mov
es
push
or
shrb
xchg
arpl
clc
add
push
aam
gs
cmp
call
add
insb
dec
or
sub
lea
push
add
jb
xchg
js
inc
xchg
sbb
sub
xor
loop
sbbl
fsubl
lcall
and
pop
icebp
aas
xchg
ret
push
add
xor
pusha
inc
pop
cmp
sbb
mov
sahf
and
inc
inc
hlt
mov
aas
xchg
fucomp
adcb
sub
test
xorb
stos
leave
sbb
dec
orb
mov
scas
or
rolb
repnz
add
rcl
dec
jg
or
sbb
lret
repnz
lea
xlat
jnp
sub
mov
and
push
cmpb
movl
repnz
shll
jbe
popa
rol
add
shrl
xchg
push
pusha
inc
xchg
into
lds
lret
or
jg
push
outsl
fnstcw
inc
aaa
add
xchg
fnstcw
movl
dec
in
and
inc
cmpsb
je
sub
aam
nop
inc
add
cmp
pop
add
test
mov
lock
mov
jbe
inc
test
or
xchg
test
in
aas
test
movsl
sub
loop
or
xlat
decb
outsb
mov
iret
jecxz
pop
sti
in
push
inc
iret
in
mov
add
or
mov
mov
add
out
loope
pop
add
sar
repnz
jmp
out
jae
xchg
add
data16
cmp
imul
xor
rolb
js
lahf
or
pop
cmp
ja
add
mov
lret
clc
push
in
cli
fnstcw
pop
add
cmp
movsb
les
sbb
bnd
and
pop
jb
jecxz
test
lods
xor
adc
fsubp
mov
dec
imul
jno
ficoms
fnstenv
push
test
adc
pop
adc
xor
gs
sarl
loope
add
mov
add
xchg
cmp
cmp
and
add
sarl
pop
shl
data16
mov
and
pop
aam
fwait
add
sti
int
or
fldenv
add
ret
dec
sub
cmp
in
mov
xchg
cmp
xor
stos
cwtl
aaa
add
scas
mov
inc
out
xchg
jmp
add
add
scas
out
cmp
lret
dec
add
imul
lea
jge
lods
add
scas
mov
mov
clc
xlat
fnsave
adc
mov
jge
cmp
sub
andl
mov
mov
push
cmp
lcall
and
subl
jae
daa
xchg
add
sbb
fmull
lods
stos
popf
lods
push
cmp
int
add
jecxz
arpl
das
mov
jecxz
add
sbb
cmpsl
lret
sbb
add
mov
inc
or
inc
sub
add
repnz
add
adc
pop
cmpsl
std
mov
aaa
cmp
mov
pop
push
pop
rcr
pop
mov
push
mov
dec
sub
add
ret
push
scas
sarb
add
pop
dec
stos
fsts
jbe
nop
rcll
sbb
setns
adc
adc
je
or
leave
add
push
dec
cmp
clc
pop
mov
jl
dec
push
inc
rorl
or
jle
leave
icebp
mov
mov
outsb
fnstsw
and
add
fldt
js
into
lcall
inc
and
sbb
pop
xchg
out
add
dec
dec
xor
insb
imul
rep
push
pop
aas
shll
ljmp
sub
mov
mov
push
aad
adc
or
lds
or
jae
or
or
jmp
arpl
inc
sbb
mov
jp
roll
lods
cmp
or
testl
add
lret
push
inc
test
sub
mov
call
mov
cmp
jge
add
test
sahf
jb
outsb
mov
ror
adc
jp
iret
jb
aam
lock
js
data16
add
test
jb
or
sub
popa
pop
ret
daa
cmp
enter
jge
xchg
aam
add
insl
add
push
xor
je
add
push
sub
xchg
jnp
xor
sbb
mov
pop
or
xchg
jae
add
sahf
nop
scas
aam
outsl
cmc
cmpsb
fwait
adc
add
aas
shlb
rolb
cmpsl
jg
xchg
cmc
outsb
pop
roll
push
inc
sub
enter
mov
aaa
dec
add
mov
mov
in
add
xor
mov
jmp
xchg
mov
add
mov
lds
xchg
sub
add
mov
mov
add
add
xchg
pop
adc
cmp
jmp
mov
jmp
aas
add
sub
scas
out
or
iret
add
sub
xchg
loope
xchg
lods
xor
sub
ja
or
or
add
cli
push
nop
mov
sbb
in
dec
les
roll
dec
push
lock
incl
ret
cmc
sbb
pop
xchg
push
or
inc
push
rolb
adc
xor
adcb
add
cltd
ja
jmp
lods
mov
xchg
add
mov
adc
lahf
push
push
shlb
les
dec
cs
mov
lds
xchg
cld
cld
repz
fwait
lea
add
stc
repnz
xchg
pusha
sbb
add
xor
call
roll
or
call
add
repz
and
pop
or
add
outsb
push
cltd
cmp
adc
in
add
push
loope
addr16
push
dec
sub
xchg
add
jl
xor
cmp
and
push
cmp
pushf
rcl
xchg
push
sub
pop
add
dec
sbb
in
shll
icebp
and
loope
or
adc
xor
sub
jmp
cmpsb
push
sarl
out
ret
movb
push
lahf
stos
aaa
addb
iret
fstpl
dec
in
or
in
ss
int3
sub
adc
sub
jno
add
scas
xchg
sub
into
ss
dec
and
dec
sti
out
std
mov
popa
and
pop
pop
mov
add
rorb
in
mov
icebp
or
fbld
outsb
rorl
test
cli
int
mov
xchg
push
into
mov
fs
fstp
mov
pop
jmp
add
or
sbb
scas
std
stos
push
add
shll
cmc
aas
mov
sub
lds
sbb
or
scas
dec
mov
cli
arpl
repnz
mov
data16
add
stc
aad
scas
pop
add
inc
or
xor
lods
add
xchg
ficompl
fs
mov
testl
add
arpl
push
imul
adc
add
add
shl
stc
lret
adc
add
sbb
and
push
movb
out
mov
mov
add
jae
pusha
adc
lret
andl
mov
pop
dec
pop
mov
js
sbb
aas
mov
xchg
push
ja
mov
jnp
add
add
and
es
xchg
and
xchg
cltd
out
add
ret
pop
pop
inc
pop
std
sub
xchg
mov
pop
insl
push
sbb
mov
imul
shl
inc
mov
add
movsl
inc
repnz
xor
add
pushf
add
leave
jno
fdivr
pop
fwait
mov
mull
sub
in
notl
loop
add
xor
int3
loopne
repnz
stc
dec
xchg
out
testl
mov
cmp
dec
jecxz
ret
cmp
dec
in
add
jbe
movsl
push
inc
pusha
int3
lret
enter
dec
jp
or
mov
in
add
stc
and
cld
mov
sti
sub
pop
stc
imul
mov
add
xchg
or
jle
dec
pushf
and
add
jbe
dec
adc
test
push
xchg
xlat
mov
mov
fldcw
mov
or
xchg
cmp
mov
jb
inc
add
leave
sbb
inc
popf
ret
push
add
xor
and
inc
sti
mulb
fstps
sahf
jp
cmp
jp
inc
div
das
sarb
rcll
add
pushl
lods
gs
pop
and
adc
std
orb
push
mov
shr
add
ds
jp
add
pop
data16
xchg
das
cmc
mov
add
mov
shlb
sub
and
push
dec
cmpsb
cli
cmc
movsl
pop
add
add
sbb
mov
mov
sub
mov
jle
sub
add
out
jae
fildl
and
add
mov
sub
pop
popa
add
cmp
pushl
jne
outsl
mov
dec
add
rcll
mov
scas
dec
addl
inc
cs
sub
dec
arpl
dec
push
push
mov
add
pop
addb
jmp
add
mov
mov
jno
aas
andb
cwtl
xchg
cmp
and
add
les
shrl
clc
mov
out
jb
sbb
push
pop
sti
orb
and
jb
sbb
inc
sub
aam
aad
mov
or
cvttps2pi
test
or
loop
and
pop
xor
lret
mov
adc
push
mov
dec
out
jmp
lahf
add
or
mov
cmp
jecxz
pusha
or
jns
mov
bound
imul
push
jg
or
adc
add
mov
out
stos
mov
inc
cmp
cmp
movsb
pop
jl
mulb
leave
xchg
into
mov
dec
into
xchg
push
stos
dec
jbe
add
jmp
shll
sarb
xor
pushf
popf
mov
stc
iret
iret
adc
push
cmp
mov
jo
popf
cmp
cmp
add
mov
mov
jl
xor
jnp
ljmp
jp
repz
in
pop
mov
fs
cwtl
jg
inc
mov
mov
mov
out
lret
nop
pop
mov
mov
loop
push
movl
add
addr16
fildl
lods
in
cli
dec
add
adc
daa
pop
dec
dec
mov
mov
adc
fbld
and
shlb
xor
xchg
add
dec
mov
ret
inc
cmp
push
add
cmp
sarl
add
cli
cmp
jl
addb
call
and
or
mov
pop
iret
jmp
and
jl
fwait
inc
cmc
mov
or
lock
add
sub
pusha
push
movsl
dec
dec
mov
jae
iret
mov
adc
adc
jecxz
addr16
stc
add
and
pushl
mov
hlt
add
lds
jmp
fnstenv
mov
pop
xor
sbb
pop
out
xor
and
mov
out
pop
lahf
subl
pop
add
cmc
mov
repz
popl
nop
or
add
imul
sbbb
or
fisubrl
outsb
sbb
push
pop
out
idiv
shrb
mov
xchg
xchg
ret
lret
divl
add
xchg
fbstp
fwait
mov
mov
jae
add
cmc
loop
push
adc
pop
test
add
mov
jnp
xchg
fsubrl
xchg
ljmp
xor
pop
add
popw
shrl
add
xchg
push
in
loop
ret
jo
fildl
aam
adc
and
flds
pop
adc
or
daa
addr16
les
add
jno
xor
cmp
mov
add
inc
jl
mov
push
shrl
push
mov
sti
sbbb
add
push
xchg
sub
jne
data16
mov
outsl
add
arpl
fs
push
int3
imul
inc
sub
mov
push
xchg
ret
ds
mov
push
push
ret
add
stc
mov
push
call
les
push
xchg
popa
aam
fmull
addr16
xor
fldl
cltd
push
out
dec
sub
and
std
out
push
imul
sub
xchg
xchg
inc
xor
pop
aas
sbb
add
mov
cmc
sbb
add
push
cmp
pop
sub
fwait
dec
pusha
mov
aad
add
cld
add
aam
add
movsl
fstps
jnp
inc
movsb
pusha
mov
sahf
lock
in
pop
jmp
xchg
add
loop
inc
scas
lret
add
jecxz
out
push
insb
and
daa
cmpsl
in
fwait
add
add
dec
lahf
iretw
mov
add
mov
or
cmc
cmp
jns
pop
arpl
pop
sbb
jno
mov
and
jp
test
xchg
xchg
stos
sti
add
scas
mov
and
subl
add
pushl
lea
jnp
mov
add
repnz
xchg
pop
add
ljmp
call
shrl
push
cltd
mov
pop
jae
add
jnp
js
cmpb
push
or
fsubr
pop
adc
mov
lock
jae
sub
adc
cmp
xchg
lret
enter
xchg
jmp
call
repz
or
mov
lret
jbe
jg
mov
jbe
xchg
fs
cmp
push
jno
adc
test
dec
mov
lret
jbe
mov
pop
sbb
xor
repnz
imul
shlb
in
add
add
test
popa
cmpsb
test
add
test
test
inc
out
jno
xchg
push
loop
add
cmp
test
jo
arpl
add
jbe
idivl
insl
ljmp
cmpsl
scas
cs
orl
pop
and
ficoml
out
aam
push
dec
jne
and
jge
inc
stos
pop
jae
mov
inc
mov
icebp
xor
jl
add
enter
or
outsb
mov
andl
call
insb
mov
faddl
scas
pusha
aas
movsl
scas
add
in
mov
shrb
jge
fldl
leave
xchg
test
cmp
imul
cmpsl
ds
int
xchg
xor
xor
push
cmp
mov
out
sbb
cmp
lods
push
add
add
pop
fs
fwait
test
inc
jp
mov
int3
pop
pop
add
xor
clc
or
add
jge
loope
mov
in
daa
inc
cwtl
sbbb
mov
xchg
and
sbb
sbb
call
roll
testl
mov
lods
je
cmp
jmp
out
sub
push
mov
mov
mov
mov
lea
add
jns
shrb
mov
out
movsb
add
ja
xor
adc
out
or
out
fisttpl
xchg
fwait
bound
dec
mov
js
pop
cld
movsb
push
adc
pop
add
into
incb
dec
push
clc
outsl
add
xor
popa
pop
adc
add
sahf
and
addr16
mov
inc
mov
and
add
rcrb
mov
pop
mov
add
mov
popa
lret
outsl
fidivl
in
add
into
imul
jmp
out
lret
insl
ret
xchg
cmp
inc
mov
daa
fwait
test
scas
adc
inc
adc
daa
and
subb
add
insl
repz
sub
xor
int3
pop
repz
jg
add
pop
out
outsb
clc
inc
and
push
mov
mov
cmp
roll
push
out
jne
filds
mov
add
test
addr16
jne
jle
cmc
add
ret
xor
les
mull
pop
or
fldlg2
notl
pushl
cs
mov
add
xchg
ret
ficomps
and
nop
insb
xlat
sbb
inc
push
sub
adc
pop
stos
dec
pushf
push
xor
sahf
mov
stos
gs
data16
cmp
cmp
ss
mov
mov
test
cli
push
cmc
bound
imul
icebp
dec
mov
pop
add
sub
out
push
jl
sbbl
lock
pop
std
outsl
mull
jecxz
dec
add
jl
adc
sub
je
repz
jge
mov
in
add
or
outsl
xchg
mov
xchg
push
das
push
and
lods
sbb
add
add
add
mov
xchg
scas
jge
lds
add
cmc
inc
rcrb
push
addl
push
test
int
insl
arpl
sub
lods
cwtl
shll
add
pop
cmpsb
add
cmp
sbb
mov
fs
xchg
push
inc
pop
mov
mov
filds
push
iret
push
mov
shrl
daa
repnz
adc
inc
xor
test
push
add
sbb
sub
cli
xchg
mov
jle
lcall
pop
adc
fiadds
dec
sbb
ljmp
pop
adcl
add
stc
adc
sub
test
add
jb
fnstsw
xor
inc
lock
add
out
dec
and
add
xlat
lea
push
xor
addl
sbb
dec
addl
add
and
aam
mov
data16
add
in
sub
mov
mov
imul
stos
pop
xor
in
sbb
into
xchg
inc
test
cmp
rolb
fisttps
push
movsb
inc
test
hlt
jbe
loopne
repnz
cmpsl
push
out
loopne
or
das
cmpsb
mov
mov
pop
add
rcrl
bound
add
mov
xchg
sbb
add
fbstp
adc
mov
mov
pop
shr
mov
fdivr
data16
out
imul
fldl
bnd
repz
sbb
out
roll
sub
shlb
xchg
add
stos
divl
xor
mov
popf
mov
pop
lret
dec
mov
mov
add
mov
mov
mov
js
mov
xchg
nop
or
inc
dec
sbb
gs
std
add
push
push
push
test
scas
sbb
in
or
mov
push
dec
xchg
ljmp
lods
cli
sbb
push
inc
ficompl
loope
push
shrl
out
aad
mov
je
daa
jne
sti
scas
mov
ja
ja
int
inc
ds
sbb
adc
cmc
xchg
aaa
lea
mov
fisubrs
lahf
inc
in
pop
mov
mov
xor
inc
add
pop
and
fs
pop
push
add
cwtl
push
mov
mov
and
dec
add
daa
jns
or
add
cmp
pop
push
mov
add
mov
pop
push
pop
aad
lret
adc
push
jns
sub
push
add
mov
and
add
shlb
jb
aam
mov
jle
add
fs
sbb
icebp
add
mov
push
inc
roll
mov
sbb
lods
loope
mov
cmp
fmuls
xor
sbb
xor
inc
mov
insb
jg
push
rolb
add
fdivrl
shll
push
or
sbb
pushf
jb
add
adc
lds
adc
test
and
loop
add
add
ret
xor
and
in
xor
sahf
loope
loopne
addl
dec
mov
xchg
jbe
add
add
sub
out
xchg
ret
add
push
jns
sub
sti
xchg
xor
mov
outsb
sub
arpl
dec
add
mov
mov
int3
int
add
lock
dec
mov
add
inc
xor
add
ljmp
push
je
sub
cmpsl
mov
imul
xchg
int3
loopne
xor
xchg
mov
jecxz
inc
ficoml
xchg
add
mov
inc
mov
pop
cmpsl
das
xchg
xor
shl
in
cmp
mov
xor
pop
lret
adc
add
daa
repnz
jno
test
mov
push
fsubs
stos
mov
sub
pop
mov
arpl
xchg
pop
bound
push
jecxz
std
adc
inc
inc
pop
inc
je
dec
mov
enter
jl
shrb
pop
in
divb
outsw
cmp
sar
xchg
jecxz
in
xchg
add
pop
das
nop
pop
gs
pop
push
ljmp
lock
add
add
les
xchg
xor
push
mov
or
mov
dec
data16
dec
sbb
shrb
mov
adc
inc
adc
lock
push
dec
pop
add
call
push
pop
stos
aam
popf
or
out
push
push
pop
sub
add
mov
lret
mov
mov
cli
xchg
pop
rorl
jmp
mov
loop
mov
mulb
lret
add
sbb
cwtl
lods
cwtl
mov
mov
inc
inc
push
sub
fsubrp
mov
arpl
add
add
sub
lock
test
fldpi
adc
addl
ret
js
popf
testb
into
cmp
push
or
mov
or
mov
fildl
xorl
jnp
xor
add
add
pop
test
xchg
push
pusha
sbb
push
sbb
jmp
cmp
push
cwtl
add
repnz
xchg
icebp
icebp
xchg
jecxz
inc
stos
pusha
push
add
mov
fbld
adc
mov
add
jmp
sar
call
add
ja
mov
fs
xchg
lea
out
mov
call
imul
cmp
scas
incb
push
xor
inc
in
pushl
test
add
ret
mov
mov
xchg
out
mov
xchg
fldl
mov
pop
add
cmpl
push
filds
daa
push
in
stos
cld
inc
adc
inc
fstl
add
pushw
dec
mov
movl
icebp
cmp
mov
mov
add
pop
cmpsl
cmp
sub
adcl
outsl
repz
inc
jl
dec
pop
add
add
or
ljmp
fisubl
test
sub
inc
les
ret
inc
add
add
idiv
shrl
xor
idiv
ret
daa
cs
loope
test
les
cmp
je
and
add
fcomps
push
das
push
inc
cmpsl
add
mov
or
inc
jle
movsl
outsl
add
ret
add
fs
vreducepd
lds
jo
sbb
mov
add
mov
xchg
jae
fst
sub
cs
out
mov
dec
js
dec
in
add
test
scas
push
xor
add
add
popa
sti
push
pop
or
faddl
pop
and
push
mov
mov
push
jbe
cld
enter
mov
aas
add
mov
jne
mov
xor
loopne
push
js
fnstcw
jnp
lret
xchg
stos
mov
mov
js
loopne
ret
push
pop
lahf
mov
adc
fcomps
add
push
cwtl
outsb
std
mov
xor
and
adc
xchg
adc
sub
add
int3
fwait
insb
lea
add
leave
inc
insb
or
imul
add
cmp
cmp
cs
fistpl
enter
lcall
cmc
subl
cmc
hlt
and
add
push
jno
jge
inc
aaa
inc
scas
in
test
add
popf
xor
inc
daa
fnstenv
dec
add
notl
es
mov
jnp
cltd
mov
mov
pusha
aam
roll
std
insl
das
sbb
push
push
stc
bound
call
aaa
adc
mov
loop
mov
add
leave
push
jb
sub
add
xchg
mov
add
add
popa
ja
addr16
stos
or
movsl
add
movsb
lret
das
ret
mov
dec
stc
out
movl
dec
push
stos
loop
ret
negl
add
cwtl
inc
mov
das
inc
mov
push
add
mov
shr
or
jo
mov
pop
in
stos
jno
inc
pop
into
push
test
or
ret
mov
pop
add
sub
mov
xchg
add
adc
cmpsl
mov
in
sti
push
add
icebp
add
rcrl
mov
add
lret
mov
lods
add
mov
dec
xchg
push
add
cld
notl
popf
negl
adc
add
push
or
mov
add
ret
and
mov
int
mov
mov
inc
jb
ret
jbe
push
inc
xor
push
sub
fnstenv
scas
add
and
mov
in
fidivrl
test
arpl
cmpsl
lahf
pop
rcrb
cmp
add
jne
out
mov
lock
add
xchg
dec
mov
xlat
fcmovb
mov
int3
fadds
mov
fisttps
sbb
dec
inc
fs
push
lahf
add
lods
and
lret
pushf
movsl
adc
and
roll
lret
or
mov
dec
idiv
add
add
xchg
dec
add
dec
dec
push
clc
jne
lea
fwait
push
xorb
push
fldl
cmpl
dec
fwait
push
mov
repnz
repz
out
pop
and
jne
mov
nop
nop
mov
dec
fst
sahf
mov
lock
xor
dec
pop
ljmp
or
outsl
ljmp
add
fiadds
in
shrb
movb
sub
popa
inc
and
sbb
ljmp
mov
mov
xchg
dec
xchg
call
test
hlt
or
or
dec
and
push
fsubr
pop
cmpsl
mov
int3
add
scas
rcrl
or
roll
jae
cltd
pop
mov
mov
cmp
ret
leave
sbbb
and
mov
dec
cmp
xchg
cs
add
cmpsl
adc
ljmp
in
and
arpl
jne
push
xlat
movsl
lahf
repz
or
test
mov
out
sbb
int
xchg
inc
scas
ja
add
sar
pop
mov
push
add
out
and
fistpll
dec
and
pop
loop
inc
mov
jo
jnp
je
les
xchg
pop
push
xlat
mov
pop
pop
add
and
jg
mov
in
pusha
loop
add
rolb
cmc
insb
shrb
nop
pop
nop
aad
sub
dec
pop
add
adc
daa
outsl
outsb
insb
add
shll
cmp
add
inc
pop
movsl
stos
dec
imul
and
add
jnp
mov
fistl
add
add
and
pop
pop
or
sahf
add
roll
insb
scas
movsl
or
sub
mov
mov
sub
mov
mov
jns
pop
test
ss
and
mov
mov
sub
ljmp
inc
in
add
and
sbb
out
pop
xor
mov
add
xor
fadds
push
push
mov
enter
and
orb
aaa
jecxz
sbb
pop
shrl
sub
lods
into
div
daa
mov
iret
push
dec
add
xchg
daa
in
xlat
or
stc
add
sub
push
dec
ds
xchg
rcl
ret
xchg
add
dec
test
dec
push
mov
test
fwait
in
pop
sbb
sbb
outsb
test
xchg
pop
fstpl
cmpsb
movsl
push
mov
loop
loopne
mov
add
mov
sub
scas
push
movl
in
lret
aaa
xor
loope
lods
jp
movsl
push
cmp
and
popa
push
leave
inc
int3
ficomps
inc
mov
add
into
aad
pop
js
addr16
add
sbb
fs
push
dec
loope
add
pop
femms
call
adc
fsubp
add
sub
inc
inc
xchg
jge
call
add
add
testb
loope
stc
xchg
and
add
push
or
xlat
test
pusha
pop
popl
sub
rcrl
enter
pop
lock
sbb
jmp
lahf
lods
dec
and
mov
add
push
dec
mov
jl
mov
cmp
aad
push
dec
xlat
out
pop
push
add
push
in
icebp
lret
mov
fcmovbe
push
sub
mov
icebp
add
pop
pusha
test
jns
filds
addb
mov
ljmp
fildl
fs
mov
lahf
pop
hlt
clc
adc
cmp
add
pusha
adc
negl
jne
add
cmp
mov
mov
dec
dec
sti
in
ret
sbb
sbb
add
mov
or
aad
add
add
rolb
rorl
in
inc
cs
ret
add
mov
mov
insb
xor
and
add
aad
mov
popa
inc
lret
add
test
lods
xlat
test
dec
xlat
sub
hlt
ds
xor
mov
adc
add
scas
mov
call
shl
cli
sarb
scas
add
push
mov
dec
mov
lcall
add
cmp
int
cmp
and
sahf
add
cmp
mov
roll
lods
out
outsl
pop
addl
adc
out
pusha
mov
subps
cmpsb
out
pop
dec
xchg
mov
dec
test
add
lcall
jnp
mov
scas
push
aas
rorb
jge
addr16
jae
xchg
add
jnp
mov
fstpl
add
ja
cmc
cmpsl
into
lods
pusha
mov
ret
xor
lock
outsl
loope
or
xor
out
add
cmpsb
cmp
jne
je
xor
out
xor
jl
sbb
jp
jb
add
xor
cmp
les
sub
jg
das
mov
lret
iret
jl
mov
add
fwait
clc
pop
sub
xor
inc
add
out
testb
sbb
add
adc
outsl
push
dec
lock
add
dec
mov
pushf
filds
jl
pushf
add
push
or
andb
add
and
loopne
in
mov
lahf
stc
add
jbe
xor
insl
test
jo
mov
xchg
mov
sbb
jp
call
jbe
pop
clc
sbb
xlat
cmp
loope
fistpl
sbb
cwtl
inc
add
int3
jle
inc
jmp
add
fnstcw
test
stos
dec
and
inc
add
cmp
mov
xor
sbb
add
cs
std
add
test
push
dec
mov
mov
mov
movsl
pop
fdivp
jnp
fnsave
adc
xchg
xchg
push
jnp
inc
rorb
pop
mov
mov
add
add
xchg
mov
jl
and
int
and
add
pusha
sbb
sbb
pop
mov
stos
push
lock
add
cmp
out
xchg
mov
aas
push
jae
cmp
dec
mov
pop
pop
mov
sbb
ror
outsb
jo
cmpsl
cwtl
sub
adc
mov
jne
add
nop
pop
adc
or
jbe
dec
in
add
jecxz
sbbb
loope
out
fwait
cmp
cmp
pop
dec
mov
orl
mov
lahf
test
ljmp
mov
jb
jo
fwait
add
outsl
lret
sbb
cs
fisttpll
add
adcb
cli
fwait
loopne
add
cmp
outsl
call
lret
add
cmc
mov
popf
dec
lahf
int
lret
add
and
arpl
fdivs
pop
xor
jne
mov
mov
bound
xchg
cwtl
test
les
out
xor
jae
and
popa
push
bound
push
mov
movsb
push
mov
leave
mov
xor
in
cli
mov
or
add
xchg
adc
cmpsb
aam
push
xor
loop
push
ret
add
push
pop
movsl
dec
push
or
das
mov
and
add
push
lret
push
incb
push
repnz
cld
mov
test
jl
and
push
stos
and
add
dec
jns
push
scas
adc
add
sbb
call
adc
pop
out
fiaddl
pop
mov
clc
loop
sbb
hlt
adc
mov
mov
xor
mov
add
hlt
mov
imul
mov
mov
dec
mov
jecxz
mov
and
adc
push
xor
fucomi
out
enter
mov
pop
and
loope
shl
fadd
pop
es
gs
pop
sti
inc
cwtl
add
stos
push
push
pop
popf
mov
das
add
nop
xor
in
pop
dec
adc
add
cmp
jae
push
lea
push
dec
sub
sub
jne
in
or
xchg
das
adc
gs
add
addb
aam
shlb
popa
out
sub
mov
shr
pop
inc
dec
adc
fdivs
push
insb
insb
and
dec
mov
in
lcall
push
push
fsubrs
out
fildl
jecxz
mov
sbb
sub
sbb
add
mov
lret
nop
into
xchg
sti
add
add
iret
xor
aaa
bound
push
in
fmul
pop
ret
jb
jp
push
data16
add
cmc
sti
cld
mov
and
dec
sub
in
xlat
push
adc
ret
or
add
dec
mov
inc
pushf
or
out
add
mov
jmp
add
push
data16
test
ds
loope
lock
in
mov
ret
stos
add
scas
jae
push
ds
int
cli
icebp
repnz
lock
ret
js
fmull
adc
pop
dec
lea
cmp
repz
mov
and
dec
dec
aaa
add
xor
pop
xchg
mov
push
in
xchg
push
inc
scas
inc
cmpsb
add
inc
aad
imul
lods
sbb
push
jp
arpl
rclb
adc
or
rol
das
icebp
add
xchg
cmp
pop
mov
pushf
lods
cmp
in
shrb
mov
jle
xor
stos
fdivl
xchg
add
daa
test
aam
jmp
push
mov
add
int3
test
dec
push
mov
fdivrl
add
fwait
jmp
and
jb
loope
cli
add
cld
mov
jbe
and
lock
jp
lcall
cli
ror
call
sbb
mov
add
adc
enter
stos
lea
inc
push
lods
push
jb
xchg
push
out
or
xor
jle
or
stc
add
iret
loopne
pop
push
out
imul
loope
in
xchg
add
or
xor
xchg
mov
imul
xchg
ret
mov
js
xchg
sbb
xor
inc
fwait
stos
cli
add
repz
ds
xchg
arpl
lods
add
add
xchg
or
or
add
sub
mov
std
jo
sbb
loop
stos
add
arpl
jg
sbb
add
add
add
add
add
mov
ss
inc
add
mov
test
pop
aam
xchg
xchg
jl
mov
add
stos
faddp
mov
mov
aam
add
out
mov
lret
rcll
das
loop
lea
jmp
mov
or
repz
mov
stc
shl
lods
rcl
arpl
jo
outsl
add
fsts
cmp
negl
popa
mov
sahf
xchg
ret
pop
dec
mov
jo
inc
ljmp
out
loop
mov
and
mov
outsl
adcb
add
xor
ret
bound
ljmp
std
xor
fstpt
shll
and
or
sti
outsb
jb
push
cmc
pop
shll
inc
and
sbb
insl
es
mov
or
add
mov
sub
or
lea
adc
push
rolb
jo
lret
das
sub
mov
bound
adc
cmc
addr16
jle
sub
xchg
daa
mov
jmp
mov
adcb
test
dec
sub
ret
sub
add
repz
out
loopne
pop
mov
cltd
add
shl
add
flds
add
xchg
fs
xorl
push
jbe
in
test
popa
scas
shll
stos
mov
andl
jns
imul
dec
xchg
pop
dec
ret
sub
jbe
push
sbb
xchg
sbb
lds
push
push
hlt
fisttpl
xchg
mov
movsl
add
test
pop
push
std
ret
rcrb
or
add
adc
pusha
add
adcb
movq
mov
push
jnp
inc
pop
jbe
push
nop
adc
push
inc
dec
hlt
push
add
sbbl
in
jmp
cli
js
mov
mov
imul
cmpsb
scas
pop
mov
pushf
sahf
add
pop
call
lock
add
scas
ficoml
scas
frstor
jge
cmpsb
mov
lea
push
add
stos
call
jge
cmp
rcrl
inc
icebp
cmpsb
or
insb
or
fwait
js
ret
scas
adc
add
dec
arpl
arpl
xor
popl
jae
fucom
iret
cmp
fiadds
stos
mov
dec
adc
ja
repz
jnp
insl
cli
je
arpl
pop
dec
add
pop
cmpb
stos
pushf
mov
push
lret
push
jle
xchg
clc
ficoml
aad
add
xchg
cmp
clc
shrb
xor
add
and
jns
outsb
dec
in
insl
adc
lods
jo
add
jmp
add
and
lret
into
incl
cmp
mov
loopne
pop
jo
jecxz
mov
xchg
test
push
lods
mov
icebp
xchg
add
loopne
out
xchg
cmp
sbb
push
imul
je
push
rclb
add
jb
dec
inc
ljmp
xchg
loop
scas
negl
push
mov
loop
dec
gs
cmp
sbb
sarb
shlb
insb
outsl
cs
jae
dec
lret
push
lahf
xor
add
mov
cmp
add
mov
pushl
cmp
mov
and
mov
xchg
test
xlat
imul
mov
out
shr
xchg
mov
std
jg
and
cli
cld
jns
mov
mov
jl
push
insl
clc
add
sbb
add
add
in
jns
mov
stos
and
lahf
leave
jo
negl
jecxz
or
pop
js
nop
fistps
inc
pop
daa
sbb
int
sahf
sbb
fsubl
and
mov
pusha
adc
enter
leave
les
or
sbb
add
adc
mov
bound
xchg
loopne
inc
loop
or
outsl
xor
aad
sahf
ret
push
add
and
mov
inc
sub
stc
lahf
sub
pop
inc
stos
adc
ficoml
or
inc
jno
loop
cmpsl
ret
gs
out
pushf
ja
or
or
aaa
xchg
or
push
adcl
ret
mov
mov
add
cmp
mov
dec
subb
insb
divl
mov
sbbl
and
dec
add
adc
fcomp
in
sub
add
jmp
adc
loope
cs
push
mov
xchg
clc
jae
cmp
push
jl
xchg
xchg
nop
iret
call
pop
xorl
out
mov
add
jno
mov
lea
fwait
xchg
dec
dec
and
call
inc
adc
push
jmp
push
xor
push
adc
add
popa
stc
lods
add
add
inc
sbb
popw
and
pushf
jg
cmp
fstps
jmp
pop
lcall
add
push
adc
dec
pop
add
mov
mov
testb
jbe
lahf
add
adc
out
xor
in
jno
out
scas
scas
mov
or
and
nop
add
add
and
add
add
inc
mov
outsl
ror
sub
pop
movsb
je
cmp
mov
jp
lcall
icebp
pop
je
cmp
add
les
rclb
dec
inc
addb
mov
mov
scas
in
jae
sbb
das
push
test
xlat
sbb
loopne
js
pushf
cmp
xor
jae
stos
jle
ljmp
test
push
xlat
xor
add
movsl
je
sbb
add
ja
idivl
movb
enter
mov
mov
rcrb
lods
add
movsb
sbb
xor
lcall
push
add
out
bound
mov
jne
cmp
jae
mov
mov
add
in
ficomps
xchg
dec
inc
inc
sub
push
xchg
pop
lcall
jmp
loope
mov
in
ja
add
add
sbb
jp
frstor
jbe
mov
xchg
jb
xor
mov
mov
pop
xchg
dec
add
or
pop
and
ficoms
mov
push
mov
fistpl
jecxz
push
mov
push
mov
xchg
add
repz
xchg
and
fidivrs
xor
or
pop
jp
lcall
cmpsl
mov
add
mov
std
daa
or
imul
mov
pop
loopne
add
or
sub
fcmovb
inc
cld
add
push
stc
cmc
xchg
pop
inc
lea
add
pop
cmc
aaa
jl
fisubs
jbe
add
pop
cs
dec
jbe
in
add
je
sub
adc
add
mov
divb
pushf
mov
sahf
adc
pop
sti
fiaddl
adc
push
mov
scas
out
mov
popa
add
out
jmp
daa
loop
aas
cmp
in
jp
cs
mov
mull
add
dec
repz
jle
dec
push
pushf
rep
add
and
dec
aad
daa
iret
in
cmp
out
aam
xchg
push
in
aam
jne
lcall
repz
test
mov
add
loope
mov
inc
mov
psadbw
mov
jmp
out
lods
push
or
ret
cmp
dec
mov
pusha
add
cmp
and
sub
ss
or
inc
add
movsl
fcompp
stos
push
shl
pop
pop
add
or
mov
sub
mov
add
jno
dec
shl
jmp
add
and
add
jl
xchg
jne
or
fdivr
push
scas
pop
divl
popa
mov
and
movsl
lret
adc
aaa
stos
push
aas
adc
fdivrs
or
add
ja
xchg
testl
sti
imul
add
cmpsl
sub
mov
fstpt
pop
psubsb
mov
filds
cltd
rsqrtps
orl
outsl
dec
sub
xor
push
gs
jg
cli
sbb
call
loopne
in
mov
subb
inc
aam
add
add
in
sub
pop
dec
mov
add
aam
mov
pop
sub
xchg
mov
mov
or
xor
mov
out
xor
andb
in
fs
inc
cmp
mov
andl
adc
push
add
subb
or
int3
pop
add
pop
mov
fstl
mov
ret
stos
mov
ret
out
adc
mov
int
shlb
and
aad
inc
add
addr16
pop
nop
in
rorl
outsb
lret
sbb
stc
dec
popa
repnz
ret
xor
add
push
and
mov
adc
push
xchg
in
add
test
add
adc
push
sbb
jns
add
movsb
mov
mov
xchg
add
mov
repnz
dec
sub
mov
call
inc
in
mov
cmc
add
das
outsb
jle
outsl
movsl
sti
xor
rol
mov
cmp
adc
jnp
int
or
lret
add
clc
lods
pushf
mov
daa
mov
pop
add
sbb
adc
ds
popf
xchg
add
jb
add
push
mov
and
repz
addr16
mov
mov
popa
sbb
pop
in
mov
mov
mov
ljmp
adc
adc
cmp
cmc
mov
add
lock
cmp
ret
add
outsb
fwait
sbb
imul
or
cli
xchg
sbb
aam
add
out
pusha
xchg
fcompl
loope
imull
leave
out
dec
cmp
inc
ret
ljmp
jg
cmp
pop
fists
add
aaa
shrb
or
jge
fistl
xor
loopne
je
cmc
dec
movsl
sahf
fadds
fsub
test
icebp
into
pop
xor
shl
xchg
stos
out
xchg
adc
inc
sub
mov
pop
sti
incb
jecxz
fcoms
subb
add
push
pop
inc
imul
cmp
mov
jae
leave
mov
enter
sbb
adc
icebp
xor
xchg
fwait
or
into
and
inc
pushf
add
mov
adcl
ret
lret
add
cltd
cltd
and
pop
jbe
loopne,pn
in
data16
out
into
mov
sbb
mov
xlat
or
push
xchg
fwait
dec
jo
imul
dec
push
icebp
into
addl
inc
add
cmpsl
scas
jne
mov
push
cmp
and
lea
ret
dec
jnp
mov
lret
mov
cmp
mov
jns
mov
sub
xchg
lret
pop
call
popf
decb
imul
pop
jbe
pop
cmp
pop
add
mov
imul
jle
xlat
mov
pop
cmp
jae
jge
movb
jnp
jnp
push
mov
push
sub
popl
fdivrs
sub
test
or
movsb
add
or
push
cld
mov
out
subb
pop
ljmp
les
out
ljmp
cld
push
mov
add
cld
xorl
out
pop
loope
and
leave
test
jle
xchg
add
xor
mov
jae
add
or
jmp
sti
cmp
sbb
pop
js
psubw
xlat
movsb
or
mov
leave
sti
xor
add
jmp
mov
adc
add
add
getsec
stos
push
inc
jbe
add
add
mov
ss
xchg
mov
pop
mov
xor
loope
sub
xchg
mov
lret
fwait
adc
loope
adcl
jmp
int
aaa
lret
add
jae
arpl
inc
add
ret
cmp
mov
push
cld
sbb
test
xor
add
out
mov
mov
add
push
mov
add
mov
out
push
add
insb
stc
lods
or
jmp
xchg
ja
mov
adc
out
out
dec
sahf
mov
and
add
xchg
dec
loope
bnd
xchg
insl
fisttpl
pop
aad
jnp
lods
lock
push
xchg
add
dec
adc
jg
insl
mov
repnz
dec
push
lret
loopne,pt
adc
add
push
sti
fisttps
mov
mov
add
loope
and
insl
xchg
int3
rcr
push
xlat
nop
or
stc
push
sbb
jecxz
sub
pushf
and
dec
mov
add
fwait
imul
outsl
mov
shrl
sbb
add
pushf
dec
and
mov
or
mov
add
xchg
add
push
out
jecxz
sub
inc
push
ret
jmp
dec
inc
aad
cmp
mov
xor
daa
or
popf
bound
les
movsl
leave
mov
sti
push
sub
add
xchg
fiaddl
or
add
xlat
ret
imul
push
ljmp
sbb
ficompl
es
mov
int3
fdivs
push
add
add
jge
add
jmp
jnp
hlt
pop
push
inc
or
add
or
adc
add
sub
inc
mov
add
imul
insl
into
mov
add
std
jnp
sub
cmp
fcomps
xor
insl
outsl
lahf
lods
pop
mov
jge
stos
push
scas
ret
test
push
arpl
stos
mov
shll
out
add
cli
mov
and
cmpsl
xchg
cmp
pop
out
jnp
sub
xor
add
pop
das
fidivs
jle
push
cmp
aam
mov
xor
push
cld
in
pop
xchg
add
mov
jbe
adc
cmc
loopne
lods
gs
dec
sub
call
sbb
and
xchg
dec
mov
test
add
daa
aad
jb
aam
out
xchg
je
clc
add
lods
or
loope
lds
ret
add
inc
iret
cmp
add
cltd
push
cmp
mov
mov
subb
add
insb
ret
mov
adc
daa
es
mov
lahf
push
jg
cmp
or
cli
xor
icebp
or
dec
add
cli
push
adc
mov
and
js
mov
or
pop
ficompl
testl
je
lods
xchg
dec
mov
mov
inc
in
ss
pop
push
jb
xor
push
sti
add
jae
push
aad
push
inc
add
or
or
dec
and
adc
add
in
xor
and
shll
lods
add
in
clc
sub
and
je
push
cmp
clc
sbb
std
daa
jns
ljmp
sbb
xchg
cli
add
cld
shrb
inc
sub
mov
adc
or
mov
sub
pop
cmc
add
cld
cwtl
out
pop
in
int3
push
and
inc
inc
mov
rcl
mov
add
movl
push
cwtl
adc
and
sahf
notb
stc
cmc
pop
loope
add
add
adc
cwtl
enter
xor
rcrl
scas
dec
je
sub
ret
inc
sub
jnp
js
add
jo
std
xor
cwtl
mov
inc
into
sbb
mov
add
aas
lods
ljmp
outsl
aas
sbb
mov
xchg
jecxz
inc
mov
js
pop
or
clc
into
aaa
loop
add
or
dec
mov
dec
setb
insb
cwtl
aam
mov
imul
mov
jno
bound
movsl
and
ja
pop
ret
add
add
jle
mov
xchg
popa
add
jae
pop
add
mov
add
jae
xor
add
cmpsl
mov
loop
cli
orb
add
lods
adc
or
adc
or
sub
mov
es
test
push
push
cmp
sarl
dec
or
dec
and
add
test
mov
ret
mov
mov
and
or
mov
cmp
mov
push
and
pusha
into
addb
add
jg
rcrl
mov
lcall
sbb
ljmp
ret
sub
push
js
lods
xchg
add
mov
bound
mov
add
ficoml
push
scas
push
pop
add
add
dec
mov
and
push
std
pop
in
movsl
pop
fwait
sub
add
leave
fimuls
add
out
shlb
mov
mov
add
arpl
pop
sub
pushf
sbb
adc
dec
add
insl
insb
xor
arpl
or
inc
andl
cmp
add
ljmp
rolb
ficompl
sub
or
cld
xchg
push
das
sub
popa
pop
mov
sti
add
dec
add
imul
imul
fs
inc
cmpb
add
jne
mov
xor
pop
add
and
lahf
sbb
pop
xor
ja
lcall
out
call
add
ja
mov
pop
in
mov
es
pushf
in
cmp
add
pop
adc
and
xor
adc
loope
es
push
mov
in
add
cs
jns
sub
fwait
inc
cmp
add
mov
cltd
mov
add
xchg
push
in
add
push
push
and
stc
stos
test
lcall
adc
movsb
inc
or
cmpsl
cmp
dec
stos
mov
mov
pop
incl
cltd
xor
push
test
mov
push
jg
fisttps
push
dec
push
out
das
cmp
bound
insb
or
cmp
arpl
xchg
mov
rol
adc
loop
rcrb
scas
test
pop
xchg
mov
insb
adc
iret
movsb
inc
jno
inc
xor
imul
stos
pop
daa
push
dec
dec
mov
or
stc
jg
leave
pusha
mov
addb
and
add
mov
dec
sti
fs
or
mov
stc
adc
lret
sbbl
mov
sbb
or
sbb
ret
insb
inc
sarl
jno
rcl
test
into
mov
sbb
add
push
push
pop
jbe
inc
sbb
int3
add
jmp
pusha
shr
add
xchg
stos
imul
add
pushf
fs
std
test
or
dec
xchg
movsl
add
mov
jae
add
mov
add
xchg
push
jmp
fdivr
loop
enter
pop
adc
in
pop
xchg
xchg
mov
jbe
push
arpl
lahf
outsl
aas
xchg
pushf
mov
add
mov
or
jnp
repz
ja
fisttpll
sub
sub
add
pop
popf
mov
call
cmp
in
mov
in
mov
int3
and
sub
imul
scas
push
add
ja
outsb
mov
add
mov
test
nop
lods
gs
icebp
push
or
out
dec
xchg
in
cmp
sub
dec
add
push
ficoms
and
jno
add
add
jns
xlat
mov
sar
jl
and
push
or
call
aad
add
aaa
xchg
ret
or
mov
aas
ret
inc
addr16
mov
jbe
push
cmp
sbb
lret
jb
out
xor
das
lahf
mov
aas
jmp
clc
popf
mov
push
adc
lea
lods
in
aas
add
les
dec
inc
or
int
rorb
mov
inc
add
pop
into
test
aaa
push
gs
add
out
add
mov
mov
test
cmp
sub
je
and
rolb
rcll
push
jnp
add
xchg
push
xchg
pop
repnz
dec
add
inc
add
mov
pop
loope
in
add
jmp
scas
mov
inc
xlat
outsb
xchg
jb
push
dec
pop
lock
pmuludq
jge
pop
ja
xchg
add
aas
repz
int
mov
dec
push
je
mov
mov
or
add
inc
movd
scas
or
dec
sahf
add
push
int3
push
xchg
pop
mov
add
stc
lods
cs
enter
mov
add
es
inc
mov
and
jge
push
add
jns
out
nop
push
mov
std
push
in
push
add
and
xchg
out
push
mov
in
mov
popf
mov
test
aas
or
das
mov
mov
mov
push
add
data16
pop
dec
lahf
movsl
aaa
mov
cmp
adc
mov
subb
mov
iret
cmpsl
subb
movsb
outsb
xchg
mov
and
int
sbb
add
popa
pop
push
xchg
sbb
jnp
ret
mov
push
add
jp
dec
xchg
insb
lcall
xchg
xor
imul
pop
xchg
cld
add
repnz
into
jb
jo
pop
push
fldt
add
mov
xor
arpl
cwtl
shrb
fwait
dec
push
gs
aam
cs
add
sbb
fwait
or
mov
pusha
sub
mov
add
call
mov
add
or
lock
js
mov
push
les
stc
test
push
lcall
inc
fs
xor
int3
xor
sbb
pop
cmpsb
lock
repnz
in
arpl
mov
mulb
jg
add
daa
jns
stos
and
lcall
push
inc
add
sbb
imul
add
add
xchg
cld
dec
mov
dec
cld
inc
leave
pop
or
loop
add
jle
pushf
add
lret
mov
ret
add
sub
xor
fidivs
xor
es
mov
lods
sti
push
add
arpl
lcall
test
ficoms
es
mov
cmpsb
add
or
das
loop
mov
pop
jmp
pushf
mov
aad
out
jl
clc
fdivr
xor
sahf
push
mov
add
rolb
xlat
xchg
push
cmp
cmp
adc
xchg
mov
lds
add
lods
mov
loop
jecxz
dec
pop
out
xchg
mov
pop
pop
shlb
add
xchg
add
iret
inc
repz
shlb
pop
add
pushf
and
dec
lods
cvtdq2ps
pop
adc
lea
imul
outsb
repz
hlt
movsb
adc
cmp
adc
fmulp
push
and
enter
sub
mov
imul
js
fldl
cmpb
popa
lods
cmc
ss
sub
add
in
mov
cmp
outsl
sub
fcmovnu
xor
mov
fidivrs
add
fildll
mov
xchg
add
push
mov
add
add
fdivs
movsb
cld
add
mov
movsl
push
mull
jnp
xlat
add
subl
adc
and
iret
pop
arpl
scas
mov
mov
loopne
mov
sbb
xor
push
add
movsb
mov
sbb
add
cmpxchg
enter
test
in
dec
push
push
sub
add
sub
inc
sub
movl
cmp
lock
mov
jmp
add
sub
add
arpl
test
xor
xchg
add
leave
xchg
in
pop
add
jns
scas
dec
movsl
push
jg
add
loopne
sub
add
outsb
gs
sub
frstor
add
push
adcb
add
mov
shrd
sub
inc
add
movsl
push
adcl
out
cmp
mov
lcall
nop
and
mov
or
dec
ffreep
imul
lcall
mov
inc
add
hlt
in
pop
pop
outsl
pop
add
dec
cs
or
jge
push
jg
adc
xchg
add
push
int
mov
push
jmp
pushf
bound
cmp
jp
add
jp
dec
mov
iret
sub
arpl
add
into
mov
ds
lret
repz
sbb
pop
adc
pop
rdpmc
or
nop
aad
push
mov
inc
std
and
and
cmc
xchg
add
pushf
mov
test
push
xor
xor
cmpsb
fdivrl
cmpsb
xchg
add
bnd
sbb
jl
add
arpl
shrb
sub
xor
cmpsb
add
mov
imul
add
xor
sub
addl
inc
mov
arpl
cmc
add
mov
pop
leave
push
push
out
adc
mov
ss
cmovg
arpl
pop
cmp
cmp
jnp
inc
pop
cmpb
add
ffreep
je
das
or
gs
fsubrl
inc
jno
bnd
das
or
add
int
les
add
sub
movsb
sub
xor
sub
cld
into
push
or
mov
or
rep
sub
or
aaa
and
jae
mov
and
and
out
add
lcall
mov
out
pop
add
sub
loope
xor
dec
xorl
lahf
out
mov
outsl
stos
or
add
stos
or
or
sbb
mov
add
pop
insb
add
or
and
adc
jb
mov
cli
addb
rcr
mov
clc
jg
lods
pop
add
into
inc
and
and
adcl
lods
cmc
sub
test
out
andl
in
jo
xchg
add
adc
add
push
and
jnp
mov
xor
add
mov
leave
cmp
cmp
add
xchg
rolb
mov
mov
lcall
arpl
xor
lret
out
es
mov
mov
dec
xacquire
add
inc
dec
or
cmp
push
cmpl
or
xchg
mov
inc
mov
push
mov
mov
sahf
fidivl
sub
pop
fwait
rolb
jg
add
nop
adc
add
sub
nop
sbb
jbe
mov
notl
mov
sub
fiadds
xchg
fcomps
shrl
test
dec
add
in
jp
stos
push
out
icebp
add
popa
inc
pop
adc
lock
adc
and
push
orb
pop
jp
popf
pop
mov
test
mov
xor
xchg
or
rcll
bnd
xor
loopne
rcrl
cmp
aad
pop
push
jle
nop
xlat
add
xor
fbld
dec
js
into
mov
add
inc
inc
daa
cmpsl
leave
push
mov
aad
pop
fadd
xor
xchg
pop
pop
add
std
lods
inc
cld
sbb
cmp
dec
xchg
movsb
jo
shlb
dec
xor
add
addr16
aaa
nop
push
enter
add
xchg
push
xchg
jecxz
ret
or
jns
xor
mov
jns
add
into
xor
cmpsl
mov
mov
aaa
add
xchg
pop
and
cmp
andb
data16
xor
jg
int
mov
and
add
leave
stc
subl
leave
fiaddl
mov
push
mov
popf
rcrl
ss
mov
sub
mov
aam
inc
popf
pop
dec
jbe
shll
add
xchg
shlb
pop
outsb
add
add
rcll
xchg
loope
enter
adc
add
xor
repnz
and
fs
ret
out
js
cmp
roll
out
xchg
inc
add
gs
jle
test
repnz
push
pop
add
xchg
ds
jl
add
leave
pop
pushf
mov
and
aad
xchg
pop
jge
lea
sub
cmp
mov
fistpll
sub
sbb
movsl
dec
add
out
ljmp
cmpsl
lock
xchg
jns
sbb
loopne
cmp
loopne,pn
add
imul
dec
xchg
sbb
sub
and
test
andl
add
jo
add
sub
mov
test
xor
sub
adc
add
sub
xchg
out
movl
ret
scas
cli
dec
pushf
sarl
into
add
mov
cmpsb
push
ljmp
arpl
add
movsb
add
adc
push
stos
add
inc
add
nop
aam
ret
add
or
test
into
add
int3
negl
popa
fdivrs
inc
jp
adcl
out
xchg
fnsave
aad
inc
movsl
jmp
in
push
add
and
popa
jl
inc
pop
cltd
fldl
mov
das
xor
jp
pop
divl
cmp
add
test
mov
mov
into
pop
call
mov
pop
mov
fstpl
add
mov
jns
lret
lret
add
pop
xchg
dec
test
adc
and
and
dec
sub
push
jnp
add
cmpsl
dec
cmp
pop
loop
lock
or
ltr
js
or
in
aas
stc
stos
daa
sub
mov
jb
fcoml
lea
and
add
pop
pop
cmpsb
mov
scas
or
iret
jle
sub
add
out
add
imull
ret
enter
adc
adc
mulb
jp
add
out
in
sbb
mov
mov
jecxz
cmp
es
jecxz
and
or
lods
movsl
je
xchg
in
lds
in
imul
jo
imul
outsl
add
mov
inc
popf
mov
jnp
add
mov
inc
and
cmp
and
out
dec
sbb
imul
sbb
dec
mov
stc
call
cmp
leave
jns
in
jbe
popf
rclb
and
inc
adc
sahf
test
lahf
fidivrl
clc
sbb
jne
add
daa
jmp
add
lea
js,pt
xchg
ljmp
push
mov
xchg
jae
and
xchg
mov
push
pop
imull
mov
pop
add
pop
mov
add
pop
add
roll
in
sbb
jle
pop
push
out
cmp
xorb
jle
adc
mov
mov
add
jo
mov
mov
add
repz
in
cmp
out
dec
add
sbb
ficompl
lock
mov
pop
dec
add
ss
add
add
push
push
sub
push
movl
in
data16
push
ss
imul
adc
fwait
testl
jle
push
sbb
adc
cmc
add
inc
sysenter
inc
cmp
fistpll
lahf
xorl
push
aaa
xchg
arpl
pusha
add
or
in
jl
xchg
lret
cmp
hlt
inc
pop
adc
loopne
fimuls
ljmp
fs
pop
outsl
mov
cmpsb
mov
xor
in
sub
imul
mov
add
mov
hlt
pop
push
add
cmp
push
ja
test
cwtl
mov
or
sbb
dec
add
mov
mov
negl
hlt
jmp
add
sub
test
cmc
dec
mov
fs
xor
mov
adc
je
jno
movsl
mov
mov
imul
adc
lds
sbb
popa
adc
sbb
imul
in
dec
out
roll
roll
add
testl
and
cmp
orl
bound
out
icebp
dec
push
xchg
cmp
cld
loop
add
fwait
adc
push
xor
mov
add
lret
shl
adc
fistl
add
and
std
or
add
sub
push
push
arpl
outsb
add
or
xor
ret
mov
push
jp
daa
push
add
inc
aad
mov
sbb
add
ss
cwtl
adc
bound
and
scas
inc
mov
nop
cmp
cmp
rcrl
pop
clc
add
bound
lret
xor
xchg
add
mov
imul
cli
test
mov
and
andb
or
xchg
sub
add
fldcw
ret
outsl
stc
push
jbe
testb
movsb
add
fldenv
xchg
dec
push
into
add
mov
dec
aas
lret
cwtl
add
jmp
scas
push
or
sbb
loopne
xor
mov
pop
jns
mov
mov
popa
sbb
add
xorl
mov
add
inc
cmp
mov
lahf
popf
sub
pop
sbb
push
pusha
fwait
jbe
ja
test
push
test
or
add
xchg
shl
xor
sbb
xchg
fistl
add
enter
inc
push
mov
gs
fs
add
push
cmc
stos
clc
xchg
dec
pop
add
xor
cmpsl
or
xchg
xor
and
add
mov
mov
lea
pushf
dec
inc
add
inc
xor
faddl
and
mov
mov
popa
daa
pop
stos
add
popa
mov
in
sbbb
xchg
add
push
xor
add
loop
insb
dec
or
add
repnz
lea
and
addl
popa
jne
test
pop
jmp
mov
leave
imul
test
jmp
iret
sub
filds
xor
test
add
lret
sti
out
les
or
dec
repnz
mov
add
xlat
imul
aaa
fdivrl
mov
push
dec
int
add
xchg
rorl
add
sbb
fsubr
add
push
add
push
repnz
repz
pushf
insb
mov
ja
dec
ss
lods
mov
ss
add
pop
and
xorl
fadds
aaa
xchg
xchg
push
dec
or
je
icebp
add
add
adc
aam
add
cmp
imul
ds
add
gs
inc
push
fadds
pop
out
add
lret
inc
fcom
ljmp
add
mov
fldl2t
in
les
add
repz
inc
cmp
addl
adc
sub
fildll
adc
cmp
push
add
lcall
aaa
mov
add
sub
mov
pop
or
test
and
popf
sti
js
and
ret
adc
add
xorl
pop
xchg
lret
sti
add
xchg
lods
std
jmp
adc
push
mov
mov
sub
mov
es
pushf
out
mov
add
mov
and
push
dec
push
rorb
pusha
add
pop
mov
dec
pop
dec
mov
fstpl
or
push
add
sub
dec
mov
bound
add
cli
scas
mov
push
inc
and
lock
mov
xchg
mov
movsl
add
jecxz
xchg
and
xor
js
jl
ja
cli
cmp
fildl
faddl
out
aaa
std
or
or
xchg
push
dec
mov
jne
bound
or
jb
add
xchg
scas
shl
jae
xor
pop
cs
add
or
dec
sub
test
and
jo
xchg
test
xor
nop
loop
pop
adc
add
inc
jno
push
iret
jne
add
add
mov
pop
pop
mov
insl
mov
add
xor
xchg
dec
inc
scas
push
add
inc
xchg
test
xchg
cmp
xor
pop
xchg
dec
jo
jmp
xor
cmpsb
add
rcr
cld
fcompl
xchg
jb
ds
rol
pop
xor
mov
add
movsb
inc
iret
mov
push
and
jle
add
scas
repz
add
pop
jns
push
xchg
jmp
and
dec
lea
xor
and
call
lret
hlt
pop
sub
sbb
cmpsl
add
sti
dec
bound
stos
add
or
jne
cmp
or
call
out
cmp
mov
mov
out
fidivrl
sub
push
stos
and
xchg
mov
scas
add
lea
clc
lcall
outsl
test
or
mov
add
mov
in
lea
test
sarl
lcall
add
stos
jb
fstpt
mov
jp
xor
jp
cmp
adc
push
or
add
mov
sarl
sbb
mov
mul
xchg
sbb
push
xchg
jg
mov
lret
mov
add
stos
lods
jl
pop
lret
pop
add
push
pop
add
sub
mov
ss
int
and
lock
push
add
and
ds
xor
test
sub
fs
into
mov
fidivs
sbb
dec
xchg
addr16
in
mov
data16
and
add
fistps
mov
xchg
mov
adc
jbe
push
push
mov
ret
xchg
add
arpl
push
or
icebp
and
insb
cmpsl
jle
sbb
cmp
mov
add
ljmp
flds
jae
hlt
add
sti
jo
fstl
jbe
fxch
add
cmp
ja
cmp
fcmovne
lods
add
repz
outsl
int
aas
jns
pusha
mov
dec
call
jbe
adc
dec
aas
add
js
ljmp
loopne
movsb
lahf
add
inc
or
xor
jg
mov
mov
push
inc
sbb
aas
mov
add
dec
sub
pop
mov
dec
mov
jne
mov
insl
add
inc
sbb
xchg
mov
push
mov
arpl
cwtl
add
test
push
hlt
or
js
add
push
insl
push
out
push
stos
adc
movb
fcoml
into
pop
mov
mov
rolb
in
cld
movsb
push
lods
pop
cmp
inc
push
add
fildl
or
add
nop
mov
inc
outsb
shlb
testb
es
in
cld
insl
int
xchg
shlb
push
and
lcall
js
xor
popf
pop
inc
add
pop
xor
xorl
add
out
pop
je
lret
outsl
ret
outsl
adc
add
mov
mov
out
adc
mov
add
icebp
pop
nop
jae
add
rcrb
ret
jo
jbe
cli
and
cmp
or
xor
stc
jl
imul
add
jae
inc
push
inc
jo
shr
add
nop
dec
sti
sub
mov
arpl
pop
add
add
mov
scas
mov
movsl
fwait
adc
add
mov
mov
dec
and
popf
pop
fstpl
xor
addr16
out
xchg
dec
flds
add
cwtl
arpl
jns
add
shrl
out
cmc
js
mov
add
mov
xor
ljmp
ss
loope
mov
inc
mov
add
xchg
or
test
aad
scas
push
stos
xor
pop
sbb
push
gs
data16
mov
fwait
xor
mov
adc
push
mov
into
mov
inc
sahf
out
and
fists
or
mov
sti
ljmp
rclb
adcb
mov
push
add
jb
dec
mov
loop
shll
adc
mov
addl
mov
dec
test
add
push
or
pusha
adc
or
add
sbb
adc
add
roll
fwait
pop
xchg
adc
jb
adc
mov
in
dec
add
sub
popf
daa
data16
dec
xchg
dec
xchg
lret
dec
push
push
pop
lea
add
push
mov
pop
jnp
xchg
lds
jae
loop
out
inc
pop
sub
cltd
js
pop
xchg
test
xchg
mov
jno
add
mov
shl
popf
dec
dec
add
add
add
fwait
imul
cmp
ss
mov
les
shlb
mov
aas
loopne
xor
push
sub
jbe
mov
add
stos
es
push
rolb
xchg
sbb
mov
sub
in
je
push
push
pop
pushf
shl
repz
xor
xchg
add
dec
scas
in
dec
roll
sbb
sbb
cli
and
xor
add
adc
lahf
jl
rclb
fidivrl
jl
popf
xchg
add
sbb
insb
sahf
gs
popa
jg
pop
add
lret
lret
test
cmp
mov
dec
mov
mov
inc
sbb
testb
in
mov
jbe
xchg
rclb
div
adc
test
outsb
cmpsb
clc
dec
or
xor
imulb
inc
inc
aaa
mov
testb
popf
mov
or
orb
xchg
xchg
inc
test
xor
dec
inc
std
aam
lods
xchg
mov
push
sarb
add
in
cmp
push
cmp
fwait
add
fwait
pop
out
mov
ret
das
and
test
add
jmp
fldt
sbb
add
dec
dec
loop
pop
dec
aam
rorb
mov
push
sbb
xor
cmpsb
sbb
inc
loop
testb
mov
lcall
or
mov
stos
jle
add
push
sbb
pop
add
ja
push
test
hlt
in
dec
add
iret
insl
fs
fdivs
cmp
loope
sbb
xor
mov
jle
stc
out
pop
mov
mov
dec
iret
and
xchg
ds
add
leave
push
sti
fs
lret
pop
push
mov
repz
gs
push
fnstcw
int3
seta
aad
or
ror
cwtl
nop
jns
and
dec
aas
or
ds
push
mov
roll
sub
sbb
rclb
loope
add
sarb
dec
sbb
shll
int
int
cwtl
mov
andl
xchg
cmp
inc
push
dec
mov
bound
mov
add
add
push
sbb
out
adc
xchg
or
ds
xchg
repnz
xchg
test
add
arpl
sbb
mov
mov
sub
shrl
add
pop
dec
daa
lock
jp
xlat
testl
push
std
jo
int
push
imul
add
jle
mov
test
jmp
add
mov
pusha
xor
add
insb
jg
out
loop
xchg
sbb
inc
pop
lods
sbb
sbb
aam
push
xchg
hlt
push
add
jbe
adc
fsubrs
stos
dec
sbb
fcoml
movsl
sbb
js
add
mov
leave
mov
or
sahf
ficoms
xchg
aaa
push
add
xchg
dec
out
mov
mov
push
add
sub
aas
adc
mov
xor
mov
jne
cmc
add
jmp
sbb
insl
sub
push
mov
cli
add
mov
out
mov
loop
dec
je
add
mov
cmp
xchg
cmp
loopne
add
fimull
std
lea
or
add
lods
jnp
jae
insl
nop
test
jno
xor
or
pop
repnz
jo
mov
add
jle
fdivrs
scas
fwait
aaa
add
mov
fcmovu
pop
filds
dec
repnz
adc
lret
sbb
int3
cmc
push
fisttpll
clc
stos
jge
divl
xchg
add
pop
test
add
mov
add
jns
or
pusha
sbb
into
add
jnp
or
push
out
jp
pop
pop
into
add
lods
aam
hlt
xor
push
sbb
jae
sbb
push
out
adc
push
lret
clc
clc
loope
add
push
jg
sub
int
cli
pop
xlat
add
dec
lahf
xor
repnz
ja
add
out
or
sub
xchg
add
jbe
mov
scas
mov
push
mov
or
imul
loope
add
add
fwait
dec
xchg
mov
or
sti
call
mov
in
push
in
orb
fcomps
jae
and
add
dec
fisubrs
insl
cmc
ljmp
inc
imul
add
push
xchg
xchg
mov
dec
das
test
in
or
fsubr
push
sbb
pop
addb
fs
loope
mov
pop
push
and
movsl
faddl
mov
jbe
xor
push
xor
lods
hlt
in
push
jge
or
mov
insl
mov
into
iret
aad
xor
pushf
push
push
bound
xchg
cwtl
xorl
mov
pop
sub
xchg
cmp
shl
adc
inc
xchg
lock
cltd
xor
cmp
push
stos
iret
xor
mov
or
dec
shl
addr16
out
mov
push
lock
xchg
and
insb
inc
cmp
lcall
dec
insb
add
stos
or
inc
aad
mov
imul
add
cmp
dec
pop
add
xchg
and
daa
mov
add
jg
push
roll
jmp
adc
outsb
aad
hlt
outsl
notb
and
mov
mov
loopne
add
ljmp
push
loope
leave
xchg
popa
cmp
scas
add
fs
dec
add
add
mov
addb
cmp
pop
loopne
add
adc
and
mov
xor
repz
pop
xor
lds
xor
xlat
inc
mov
insb
xor
cmp
cmc
fistpl
add
std
lcall
mov
cltd
ja
fsts
mov
cmpsl
icebp
xor
add
popf
mov
xor
addr16
cli
loop
push
imul
add
dec
inc
and
add
dec
cmp
pop
pop
pop
adc
dec
push
mov
add
sub
pop
popf
das
pop
xchg
xor
lods
xor
adc
cmp
lods
add
lahf
pop
fisttpll
add
cmp
ljmp
inc
imul
jle
in
pop
and
daa
add
ss
nop
sbb
mov
fadds
mov
stos
fimuls
inc
cmp
fsubr
test
push
fisubrl
roll
jns
push
mov
call
lcall
jp
add
pop
fisubrl
sbb
add
lods
cltd
pop
adc
xchg
dec
cmpl
jne
lods
add
test
sbb
pop
lahf
mov
fldenv
and
sbb
pop
pop
mov
fists
ret
mov
inc
inc
test
pop
divb
outsb
gs
mov
add
push
fidivrl
mov
aas
add
mov
popf
lret
adc
mov
mov
fs
subl
aaa
int
xor
adc
sbb
mov
mov
out
mov
xlat
int
and
add
cld
jge
dec
add
xor
xchg
add
cltd
insl
sub
sbb
xchg
cwtl
cwtl
and
insl
pop
jns
add
fcoml
jmp
add
cmc
lahf
in
pop
sub
fdivrl
add
jno,pn
pop
aaa
nop
rcr
sbb
stc
roll
pusha
adc
movsb
ret
adc
sahf
jo
sub
add
mov
jle
je
add
push
fisubrs
test
dec
mov
push
sub
das
pop
sbb
call
add
jg
dec
call
jecxz
xchg
out
lods
pop
mov
pop
popf
pop
iret
mov
mov
mov
arpl
scas
lock
cwtl
cmp
pop
mov
jne
dec
add
outsb
push
xchg
xlat
aam
neg
pushf
mov
sbb
inc
mov
lock
pop
int3
or
adc
lret
add
out
cwtl
insb
inc
and
add
jge
mov
jp
insb
push
mov
ret
mov
push
stc
pop
adc
movsl
add
aaa
dec
iret
push
rorb
stos
movsl
sub
imul
sahf
xchg
fwait
iret
lea
and
mov
mov
out
mov
mov
and
sub
pusha
add
aad
sub
cmpsb
xchg
add
lcall
andb
add
cmc
cmpsb
ljmp
adc
xchg
imul
ss
xchg
sbb
or
insb
clc
jmp
add
ja
outsl
xchg
lods
outsl
popa
xor
rorb
sbb
add
inc
ljmp
xchg
push
arpl
dec
jne
cmp
add
enter
jmp
xchg
add
aaa
cmpsb
bound
mov
cltd
and
add
fsubrp
sbb
outsl
add
inc
jb
dec
sbb
mov
jecxz
or
imul
adc
test
incl
inc
sub
stc
fwait
je
jne
into
loope
push
mov
jae
fs
dec
mov
mov
add
push
cmpsb
mov
add
rcrl
cmpsl
mov
out
pop
dec
or
repz
dec
xchg
adcl
xchg
sbb
or
add
dec
repnz
cld
in
loope
mov
add
mov
xchg
inc
test
add
xor
sahf
daa
mov
cwtl
jp
jge
lret
repnz
addr16
ss
cwtl
pop
mov
xchg
cmc
sbb
add
xchg
loopne
adc
cmp
mov
add
sbb
xor
int3
add
mov
add
or
or
xchg
jne
or
sbb
xchg
fcmovu
mov
dec
pop
loope
dec
pop
std
add
xchg
xchg
js
repz
mov
rolb
arpl
or
xchg
add
scas
pop
sub
xor
xor
add
jmp
popf
faddl
push
fwait
gs
add
sub
cmp
add
ror
arpl
or
hlt
or
mov
popa
jo
cmp
and
mov
sbb
dec
mov
inc
inc
and
sti
popf
add
mov
inc
sbb
dec
int
push
out
adc
adc
adc
fists
std
or
inc
adc
inc
mov
pop
jp
mov
dec
jecxz
leave
mov
repz
adc
cmp
or
lods
call
les
and
jnp
and
les
int
dec
aam
jb
call
add
mov
xor
int3
mov
push
mov
adc
notb
sbbl
cmc
xchg
insb
xchg
rolb
add
loopne
js
dec
in
movsl
pop
sbb
sbb
subl
xchg
inc
movsb
dec
adc
popa
jge
sbb
mov
addr16
les
ret
clc
ret
ds
scas
je
sbb
fimuls
js
aam
cld
dec
sbb
add
inc
jg
adc
xor
fptan
jle
xchg
addr16
outsl
in
aad
add
std
inc
jecxz
out
or
cmp
pop
mov
sti
mov
nop
fidivrl
jp
push
js
adc
jne
dec
inc
add
dec
lods
xchg
sbb
das
test
test
outsl
add
xor
jp
pop
mov
xor
arpl
push
push
xchg
sti
arpl
add
outsl
sub
fmull
or
std
push
add
sub
jae
das
push
jo
cmc
in
call
shlb
outsb
or
sbb
fisubl
iret
adc
mov
sub
in
daa
std
adc
add
push
push
mov
sbb
add
pop
mov
test
pop
add
js
xor
repz
add
sarb
pop
pop
pop
inc
lock
lret
das
xor
add
outsb
pop
and
push
xchg
ds
in
push
xor
clc
inc
das
mov
mov
mov
fld
jp
imul
rolb
or
push
or
mov
mov
mov
test
pushf
arpl
out
jo
es
cltd
xor
sbb
and
pop
sub
loopne
dec
lods
inc
fdivrs
push
aam
dec
repnz
push
out
hlt
sub
pop
push
pop
add
adc
fsubrl
xor
xchg
sub
and
iret
repnz
and
loopne
add
leave
mov
sbb
rcl
cmpsb
lcall
add
cmpb
add
test
psubq
je
cmp
fcompl
aaa
rcll
arpl
orps
jp
or
and
lock
sub
inc
xchg
xchg
jns
cs
jae
add
dec
jae
pop
adc
stc
push
jecxz
call
into
pop
dec
push
sbb
add
rorl
outsl
add
in
adc
scas
imul
mov
ret
outsb
inc
popa
cld
pop
int3
fmul
push
cmp
stos
dec
idivl
outsl
orl
in
out
sbb
mov
dec
cmpsl
ds
push
adc
pop
insb
mov
fildl
out
mov
pop
loopne
xor
sub
add
mov
int
dec
push
add
xchg
cld
outsl
adc
lea
push
incl
xor
in
sub
cmp
fisubl
cmp
imul
xchg
push
inc
add
push
mov
jnp
fists
clc
mov
movsb
pop
dec
popa
push
add
imul
lds
jmp
sub
cmpsb
sti
test
insb
dec
or
and
add
insb
bound
ljmp
stos
insl
rcrl
lahf
scas
sub
inc
iret
dec
sarb
cmpsl
jl
cmpsb
dec
scas
test
or
test
pop
fadd
in
repnz
clc
mov
shlb
mov
jae
pop
aam
cltd
std
notl
dec
jp
loopne
ret
pop
xchg
loope
or
mov
ja
xchg
fwait
dec
sub
dec
xor
sub
cmp
sub
pop
xchg
or
push
loopne
pop
jo
mov
push
jg
push
repnz
add
dec
sbb
cltd
mov
add
lock
dec
pop
adc
jecxz
add
or
ffree
dec
push
testl
push
jmp
fcomps
sub
and
ljmp
insl
mov
adc
out
cli
addr16
and
cmp
mov
dec
sub
add
lds
sahf
aas
jg
stos
fwait
sbb
imul
xlat
and
push
int
inc
jnp
jnp
fildl
fadds
sub
add
adc
rorb
jns
addr16
outsl
jbe
add
dec
vpopcntd
stos
stos
sarb
sub
pop
das
imul
lock
cltd
faddl
push
dec
lock
imul
fistpl
add
dec
das
jbe
jmp
insb
fisubrl
lock
xor
push
dec
rol
mov
out
sub
mov
cld
push
dec
roll
lahf
add
add
addr16
outsb
pop
add
add
push
enter
call
jb
fisubl
add
loop
sbb
push
push
in
jns
xor
sbb
clc
add
int3
xchg
push
daa
insb
mov
pop
icebp
fldl
jb
add
sub
jae
or
stos
jmp
add
sbb
mov
pop
add
out
mov
sub
and
test
mov
push
mov
aaa
inc
mov
shrl
fadd
xchg
in
cmp
mov
sub
xchg
sti
daa
mov
bound
mov
or
mov
cmp
inc
push
out
pop
add
inc
or
icebp
push
adc
outsb
add
push
jnp
add
mov
xlat
fwait
and
xor
out
add
test
loope
repnz
jecxz
lods
cmp
jecxz
pop
lods
test
loop
adcl
inc
add
xor
addl
mov
out
iret
add
push
mov
fcoms
push
dec
mov
mov
mov
int
add
imul
ret
mov
push
and
cmp
jmp
nop
and
and
jb
push
ss
test
xchg
mov
pop
sub
out
ljmp
dec
adc
cmp
add
xor
lahf
or
das
jae
push
lds
std
lods
add
cld
divb
jmp
push
and
inc
add
push
add
sub
add
inc
xchg
adc
add
jge
mov
xchg
imul
jnp
lds
adc
lcall
icebp
add
daa
cmp
imul
xchg
loop
dec
popa
jg
dec
ret
insl
xchg
sub
or
sub
pop
call
push
add
cmp
pop
loop
jb
stos
jne
xchg
xor
out
out
sti
in
cmp
gs
dec
adc
add
xor
pop
addr16
sbb
add
out
ret
push
in
mov
test
scas
lret
add
dec
sti
xchg
jb
push
dec
aad
in
add
or
mov
and
xor
add
xchg
jo
mov
mov
sarb
mov
loop
test
mov
pop
jno
add
mov
mov
jb
push
add
lods
in
das
dec
ffree
push
mov
ret
daa
jecxz
push
fs
in
xor
add
xchg
xor
les
push
fadds
lods
popf
push
fcoms
push
cmpsb
add
add
inc
leave
pop
add
or
scas
xor
push
mov
mov
out
mov
add
push
xorl
addl
aam
mov
mov
jb
push
hlt
and
repz
adc
xlat
aam
movsl
add
lret
xchg
fs
inc
popa
cmp
pop
add
dec
leave
xorb
jnp
mov
mov
mul
je
mov
adc
out
add
mov
repz
jno
xor
mov
and
fcomps
dec
mov
fs
das
leave
mov
xlat
add
jmp
icebp
push
dec
test
inc
inc
jge
pop
bound
lock
ds
dec
inc
inc
jmp
ljmp
pushf
fs
jmp
or
xor
cmc
je
enter
scas
daa
movsb
scas
add
adc
imul
add
mov
out
icebp
dec
shll
add
outsb
push
stc
jge
jle
mov
add
push
lods
sahf
lods
lods
inc
shll
mov
aam
add
sub
int
lods
lds
xor
rcrl
jmp
pop
add
mov
sub
cwtl
cmp
sarb
test
jns
mov
cmp
ss
mov
repnz
mov
lret
inc
lret
sbb
movsl
mov
mov
cltd
sbb
jecxz
sarb
aam
pop
push
dec
pop
mov
nop
daa
sbb
sub
pop
test
sti
xchg
mov
fldcw
mov
fimuls
out
stos
test
mov
lods
movsb
cmp
sahf
cmc
jge
insb
test
std
jmp
jno
in
incl
mov
stos
pusha
xchg
cwtl
imul
mov
scas
sub
jb
into
sahf
add
aad
stos
adc
cmp
out
adc
pop
dec
mov
jo
pop
xchg
mov
xchg
add
mov
js
pop
pop
cmp
add
int
sahf
fcom
icebp
fld
arpl
and
cwtl
and
push
fwait
cli
in
js
push
out
xor
dec
cmp
cmc
jecxz
mov
adc
mov
sbb
inc
push
mov
pop
ljmp
ja
mov
inc
sbb
jmp
push
cld
outsl
and
jp
cli
dec
sub
outsb
add
fisttpll
xchg
jae
inc
stos
icebp
and
mov
lds
cld
mov
cmc
int
add
repz
lahf
gs
and
fsubrs
add
mov
or
mov
fnsave
add
sub
popa
popf
xlat
mov
cltd
push
add
stos
es
mov
cli
aas
add
popa
jb
sub
lea
and
sbb
addb
jmpw
sbb
out
pop
sub
cli
addb
jle
pushf
push
hlt
sub
sub
imull
pop
dec
jmp
rorl
sub
jns
add
jnp
mov
jl
add
adc
mov
or
and
lret
xlat
sub
adc
sbb
lods
ljmp
inc
addl
cmp
xchg
mov
sbb
add
lods
enter
jmp
sub
insb
sahf
ljmp
imul
or
push
pop
mov
add
enter
mov
js
or
data16
fnstcw
sub
push
mov
dec
add
add
aaa
and
fldl
aad
out
push
fcmovnb
mov
push
or
ds
cmc
add
aaa
jo
repz
push
ficoml
add
cmp
push
lock
add
mov
push
add
fldl
pop
mov
jg
icebp
add
ds
add
and
sbb
jp
push
and
movl
in
mov
push
adc
push
sub
or
inc
das
lret
add
orb
ljmp
xchg
xchg
and
lcall
mov
stc
sbbb
fucomip
xor
add
pusha
mov
sbb
adc
rorb
repnz
cwtl
jecxz
add
nop
repnz
cmp
add
lods
fstpl
scas
mov
imul
add
sbb
mov
imul
in
push
roll
subl
jg
adc
pop
lea
lret
jp
out
mov
std
add
push
mov
jns
in
stos
xchg
lods
adc
cmp
xchg
gs
sub
std
lcall
pop
sub
das
lcall
add
pop
leave
xor
add
cmp
ja
in
and
std
cli
add
das
imul
push
call
add
and
inc
sub
addl
repnz
sub
js
dec
insl
fisttps
out
adc
outsl
and
ficompl
inc
cld
add
and
lods
add
add
out
cmpsb
sub
pop
int3
adc
fsubrs
xchg
out
pushf
mov
and
and
in
inc
sbb
mov
jl
add
outsb
push
call
mov
add
mov
test
ljmp
fwait
idivl
popf
inc
lea
sub
push
jg
outsb
pop
mov
inc
fwait
popl
out
std
sub
pop
add
ss
test
jg
aas
push
jbe
addb
cmp
scas
mov
dec
dec
push
jnp
outsl
jmp
and
jecxz
shlb
mov
cmpsb
cwtl
repnz
cmpsl
mov
mov
push
push
jmp
loop
push
xor
add
pop
jno
outsl
jno
inc
int3
cmp
add
pop
inc
sbb
stos
mov
gs
imul
sbb
outsb
sahf
or
mov
cld
mov
fadds
ffreep
dec
insl
xchg
jb
push
leave
sub
mov
cmp
push
je
mov
rorl
addr16
add
rcl
adc
add
fmull
rorb
cmp
fwait
add
xor
cmpsl
xchg
fs
cmpsl
call
add
mov
mov
arpl
add
sbb
mov
pop
mov
xor
cld
data16
lock
sbb
mull
mov
mov
jns
insl
add
cwtl
ret
int
sbb
lock
jmp
pushf
sbb
aaa
mov
enter
add
aad
mov
sbb
add
pop
or
add
mov
enter
jae
hlt
jno
add
push
mov
insl
mov
add
cmp
clc
sub
add
sub
aas
adc
pop
in
or
xlat
mov
cmp
fstps
pop
jmp
flds
inc
into
xor
js
dec
add
repnz
fildll
adc
fidivl
in
fiaddl
ret
mov
inc
sbb
fidivrs
inc
insb
xchg
push
hlt
push
test
lret
fwait
push
cmp
lods
jmp
push
nop
inc
inc
test
pop
mov
add
pushf
sub
enter
dec
add
dec
je
xor
les
ret
fs
push
iret
adc
pop
cld
add
mov
test
xor
pop
cmp
mov
and
lret
lcall
sbb
lods
dec
add
int3
fstl
jbe
insl
sbb
cmp
push
sti
fwait
dec
insl
xlat
cltd
xchg
pusha
mov
xor
jg
pop
inc
lahf
adc
xchg
daa
pop
in
cmc
into
mov
dec
add
addr16
cmp
jne
pop
int3
cmpsb
add
cli
adc
mov
frstor
sub
lahf
inc
andl
push
mov
mov
cmpsb
daa
sahf
test
arpl
filds
jno
jae
pop
lret
mov
dec
push
push
jle
add
loope
pop
repnz
adc
into
clc
add
es
pop
sbb
add
fldl
stos
jo
cmp
bound
xlat
mov
jnp
or
sti
aaa
cli
push
pop
mov
add
jae
jo
icebp
shl
sub
or
add
aam
and
fwait
add
push
xor
les
adc
add
fistpll
mov
xor
std
xchg
les
inc
inc
adc
xlat
add
inc
dec
lret
leave
in
clc
test
jb
add
sbb
data16
stos
test
add
or
mov
push
or
cli
int
incl
or
push
adc
outsb
pushf
add
loope
push
int3
mov
add
cmp
sahf
aad
fisubrl
or
jge
mov
lock
add
xchg
adc
xchg
popf
in
lret
jecxz
inc
clc
mov
or
cmp
lret
mov
sbb
cmp
jecxz
dec
sbb
movsl
es
movb
mov
pop
aaa
loop
into
jo
pop
adc
add
stos
icebp
xchg
add
adc
xor
add
push
xor
add
pushf
adc
imul
xchg
das
fadd
xlat
xchg
insb
stc
pop
and
push
cltd
stc
inc
sub
xlat
mov
sub
add
pop
sbb
jmp
incl
mov
cwtl
gs
das
sbb
push
mov
int3
mov
pop
jl
ret
adc
aaa
mov
push
pop
lds
pop
bound
mov
sub
sub
into
inc
ljmp
pusha
fiadds
leave
pop
sti
ss
mov
add
cli
mov
mov
out
add
mov
jp
mov
jle
call
mov
xchg
jns
insb
in
jo
lock
add
cli
add
pop
adc
out
dec
fsubr
hlt
out
out
pop
push
add
repz
subb
xchg
sbb
rclb
mov
pusha
scas
jl
cmc
in
insb
loope
pop
out
pushf
loop
and
test
mov
flds
xchg
adc
add
jno
sbb
cmpsl
lock
imul
mov
icebp
jno
pop
xchg
cltd
mov
dec
icebp
mov
adc
or
add
mov
out
add
or
pop
pusha
pop
add
lods
push
aam
enter
in
add
cmp
add
rol
add
jp
aaa
inc
pushf
pushf
mov
rclb
dec
pushl
icebp
loop
shll
fdivrs
add
loop
insb
popa
mov
cmp
pop
xchg
add
xchg
insl
push
subb
mov
push
mov
sbb
cmp
add
ret
scas
ljmp
mov
adc
cmpsb
xor
jmp
add
cld
icebp
jae
les
mov
sbb
inc
mov
roll
mov
fimuls
xor
int3
lret
ljmp
fninit
addl
inc
sbb
cmp
push
pop
cwtl
add
adc
cmpsb
or
daa
mov
pusha
mov
in
imul
test
jmp
dec
and
js
iret
jg
or
js
iret
pop
push
decb
mov
push
inc
dec
cmp
pusha
jbe
add
js
pop
xchg
cmpsl
mov
xchg
add
push
mov
cli
out
inc
pop
sahf
add
cmpb
mov
subb
xor
fdivrl
das
add
xchg
ret
or
testb
sbb
lahf
cmovo
jp
sub
cmp
cmpsl
paddusw
xor
mov
fldenv
cmp
add
cli
mov
inc
pushf
test
cltd
pop
pop
dec
loop
mov
nop
int
add
xchg
aam
xchg
push
ljmp
push
or
js
inc
push
js
fldl
mov
xlat
mov
out
test
cli
lret
sub
cmp
adcl
push
js
cmp
rcrb
aam
add
dec
inc
fmuls
xor
push
cmp
mov
inc
adc
scas
add
repz
cmp
or
or
push
sub
sete
in
pop
add
iret
mov
adc
lds
sbbb
dec
cmp
js
mov
jl
lahf
ds
xchg
scas
sub
xor
mov
aam
rorb
out
add
push
add
cld
outsl
xor
ljmp
fwait
test
push
pop
or
push
and
ljmp
or
mov
cltd
popa
imul
inc
inc
mov
inc
repnz
jnp
add
nop
dec
mov
shlb
or
mov
pop
xor
push
add
pop
imul
push
mov
sbb
inc
jns
jmp
mov
or
shrl
cltd
add
jbe
daa
add
les
cmp
push
ret
xchg
je
mov
data16
push
mov
lcall
or
mov
fnstcw
loop
mov
add
or
mov
mov
or
inc
mov
loopne
loopne
cmp
pop
leave
add
push
scas
jb
mov
insl
xchg
inc
xchg
mov
cld
add
mov
dec
repz
imul
add
push
adc
in
lods
loope
add
pop
lret
testb
mov
cld
dec
add
ret
repz
inc
pop
pop
ljmp
nop
jnp
mov
in
nop
outsl
mov
aas
movsl
mov
sbb
rolb
into
and
adc
sarb
sub
push
sarb
sbb
cmp
in
jp
dec
mov
add
fstpt
and
add
std
loop
stos
cmp
mov
add
arpl
arpl
jge
adc
mov
pop
les
sti
xchg
pop
mov
xchg
das
fdivs
mov
rorb
push
sbb
jge
jb
fbld
jno
add
nop
lds
push
fsubrs
daa
add
orb
pop
fstl
add
xchg
ret
mov
pop
mov
add
pop
or
sarb
loopne
add
sbb
repnz
test
fs
push
mov
xlat
inc
int
lea
mov
cmc
fcoms
fistl
cltd
add
out
daa
sbb
push
into
add
mov
cmp
cmp
mov
or
push
stos
repnz
inc
lahf
lcall
sbb
xchg
movsl
push
push
pop
and
add
mov
cmp
jl
out
push
popl
mov
cltd
xor
lods
push
test
jp
inc
sbb
ja
mov
mov
cmpsb
ror
outsl
inc
cmp
push
add
inc
js
xor
push
sbb
les
push
inc
enter
push
std
lods
add
pop
dec
in
cmpsl
icebp
dec
or
xchg
inc
add
lea
loope
aam
das
add
test
inc
jl
sub
xchg
and
mov
cmp
jae
lcall
mov
rcl
mov
add
sbb
sbb
lahf
jmp
and
fmul
cltd
sbb
mov
outsb
sbb
nop
and
in
cmp
pop
add
sti
add
adc
jecxz
mov
add
pop
and
sbb
xchg
mov
add
js
sub
fstpt
cmp
hlt
push
ret
xchg
jg
fs
shrl
pop
pop
pop
xchg
jbe
mov
jns
notl
sbb
add
repz
cli
pushf
inc
add
out
js
aas
data16
cli
iret
mov
add
nop
data16
jbe
cmpsl
jo
mov
pop
add
stos
sbb
mov
sahf
popl
pop
jnp
mov
outsl
fadds
js
add
into
add
int3
outsb
pop
loopne
out
fimull
out
mov
sbb
inc
daa
clc
add
push
inc
push
jbe
jmp
js
faddl
inc
fbstp
mov
inc
inc
nop
add
add
imul
jnp
jl
pop
mov
adc
lcall
push
aam
rcll
pop
cmp
xlat
cmp
mov
les
es
in
gs
mov
mov
mov
das
add
filds
outsl
fstl
aam
sub
movsb
dec
push
gs
ret
sub
or
outsl
and
add
mov
add
add
dec
icebp
les
push
test
insb
pop
cmp
or
sbb
bound
lahf
fsubrs
sbb
pushf
lock
add
or
adc
mov
int
js
push
movsb
add
mov
inc
cmp
popf
dec
iret
xchg
imul
or
negl
jcxz
mov
out
out
fs
inc
add
mov
inc
outsl
and
add
or
repnz
rorb
std
jo
inc
or
or
add
sbb
sbb
sbb
aaa
add
dec
or
or
pop
sbb
add
scas
stos
clc
rorb
mov
pop
rolb
cltd
mov
cmpsb
negl
dec
in
inc
and
cmc
stos
push
pop
pop
das
pop
add
shlb
jno
dec
inc
xchg
add
add
imul
mov
jns
add
xor
lcall
push
mov
mov
dec
mov
push
sbb
add
pop
adc
mov
add
and
je
je
pusha
dec
and
cmc
sbb
add
repnz
popa
mov
movsb
daa
hlt
into
add
cs
xchg
in
jle
inc
mov
sub
adc
sbbb
jae
outsl
flds
add
push
mov
cmp
inc
stos
sbb
push
add
clc
repnz
cwtl
jle
mul
mov
mov
lds
les
mov
shrb
and
add
mov
sub
mov
add
xchg
add
pop
pop
or
or
jp
mov
aas
in
dec
aaa
dec
mov
outsl
and
sbb
xchg
xchg
jnp
mov
mov
add
arpl
sbb
or
divl
push
in
out
fsubl
xchg
ds
jo
ss
in
stos
stc
and
roll
ficoml
add
out
xor
imul
negb
mov
inc
loope
adc
mov
add
pop
das
cmp
add
add
in
sarl
add
cmc
inc
adc
xchg
loop
sub
test
pop
push
jno
in
rol
cmp
aas
mov
add
icebp
push
xor
add
lea
jns
xchg
xchg
push
hlt
ficompl
xchg
loopne
pop
add
add
jnp
shrl
jl
out
inc
add
test
mov
lods
dec
leave
incl
sar
pop
add
pop
cmpsb
sbb
add
push
lahf
scas
or
cltd
push
mov
pusha
test
add
push
into
imul
xor
filds
pop
inc
jle
imul
push
sbb
jne
mov
mov
lret
enter
mov
pop
add
lods
faddl
adc
xor
add
cwtl
test
cmp
mov
dec
inc
ljmp
and
call
add
and
fwait
lahf
test
cmpsl
mov
psubusw
jno
mov
add
sub
pop
lret
push
test
gs
js
clc
fld1
xchg
sub
mov
or
inc
mov
cmpsb
jns
cmpsb
and
dec
cmp
js
cmp
cmp
les
add
out
lods
sub
jecxz
xchg
scas
int
nop
int3
fs
cli
sahf
push
jp
inc
jmp
icebp
addr16
repz
in
iret
inc
mov
js
loop
mov
xchg
testl
sbb
push
aas
test
nop
add
sub
flds
inc
fcomps
xchg
dec
mov
xor
jae
add
mov
js
inc
mov
xor
mov
sarl
fldt
xor
out
pop
out
adc
filds
sub
out
dec
aas
repz
adc
popa
push
inc
push
add
inc
fwait
lcall
sub
add
xchg
and
xorl
or
and
pop
test
inc
jns
ret
or
jl
leave
adc
ljmp
mov
aam
cmp
leave
lods
jb
lcall
aas
mov
rclb
mov
shl
nop
mov
mov
mov
cmp
pop
in
orl
xor
add
or
idivl
and
idivl
add
mov
xor
xor
inc
call
addr16
or
pop
cmpsb
jecxz
mov
in
sub
mov
xor
fwait
mov
loopne
out
adc
dec
mov
add
fwait
mov
add
pop
out
push
and
inc
inc
mov
inc
js
add
adc
pop
das
shrb
mov
in
mov
iret
cmp
mov
pop
sub
fs
ror
sub
das
js
pop
add
adc
mov
or
fdivrs
add
mov
movsl
mov
inc
lcall
jb
xchg
push
nop
cs
mov
add
fstl
in
outsb
xchg
rcr
dec
aad
jnp
lahf
push
xchg
subl
and
cmp
add
repz
mov
pop
scas
stos
jnp
add
out
aad
xor
outsl
mov
inc
adc
add
xlat
cmc
data16
movsb
scas
arpl
ljmp
cltd
sbb
push
or
sub
add
pop
dec
cmp
add
add
out
and
bound
add
adc
adc
cmpsl
iret
int3
js
cmp
jge
fs
mov
popf
imul
scas
push
in
add
mov
lcall
and
ja
adc
sub
inc
cs
xor
inc
or
xor
xchg
nop
repnz
jnp
add
pusha
in
out
loope
dec
es
fldt
add
aaa
sbb
push
pop
mov
into
push
push
push
cmpsl
lret
pop
push
xchg
add
xor
xchg
push
push
shrl
sub
jno
add
leave
or
ficoml
movsb
movsb
cmp
loopne
ljmp
insb
shlb
and
or
in
jle
jl
sarb
flds
outsl
add
out
and
mov
mov
orl
fisttpl
jns
cli
mov
pop
add
ret
mov
ljmp
movsl
sahf
dec
pop
pop
cli
add
add
out
gs
test
xor
lea
xchg
xchg
dec
lcall
adc
sub
outsb
les
dec
inc
mov
and
and
push
sbb
add
adc
insl
int
inc
out
mov
add
mov
hlt
fsubs
paddw
mov
out
repnz
call
pop
orb
cmp
sbb
stc
icebp
stc
sub
add
enter
hlt
mov
mov
adc
aaa
shrl
add
and
or
mov
lods
int
dec
aaa
jecxz
adc
mov
mov
jno
push
adc
mov
add
aad
in
cs
stc
stc
test
dec
xchg
leave
in
jae
xchg
add
mov
repz
leave
mov
push
bound
push
sarl
adc
repz
out
push
sub
mov
icebp
xor
enter
sar
inc
sbb
mov
ret
mov
leave
loop
daa
mov
rol
ror
js
add
jno
add
pushf
stos
cmpsl
mov
sub
adc
js
nop
add
mov
in
cli
inc
lahf
cmp
cmp
add
push
xor
jl
shrl
sti
push
in
add
dec
pop
leave
fidivs
stc
sub
pop
add
mov
lock
push
ret
adc
inc
xchg
inc
jmp
cmp
add
sub
add
fldl
daa
xor
movsb
pop
aad
cmp
stos
mov
lea
incl
shll
movsl
out
mov
gs
imul
add
jle
dec
lods
fistps
jns
xchg
cmpb
mov
xchg
add
test
in
movl
popa
fwait
jno
or
ror
mov
add
sahf
cvttps2pi
pop
mov
shrl
test
dec
pop
mov
fbld
jmp
dec
xor
daa
sbb
dec
mov
fisubrs
mov
add
idivb
scas
or
mov
push
sbb
stos
pusha
popf
out
push
add
in
sbb
jbe
sub
sub
flds
movsl
fldt
jae
cmp
out
and
aas
push
scas
adc
test
xor
sub
mov
lret
icebp
or
xchg
jb
ficoml
jae
ret
xor
xchg
adc
jge
dec
fwait
data16
dec
cwtl
test
stos
mov
out
mov
int
and
leave
iret
sub
inc
lods
popl
ror
ds
lret
xor
or
dec
call
out
mov
cmpb
mov
or
xchg
arpl
daa
add
mov
xor
pop
pushf
cmp
jge
add
arpl
mov
xor
sahf
push
push
out
orps
ja
add
dec
xor
insb
inc
sbb
push
sub
adc
cmp
outsl
mov
and
lds
adc
push
lahf
add
add
push
jl
stos
xor
inc
test
add
sbb
out
jle
test
mov
jae
out
pushf
lods
imul
add
xor
cmp
nop
mov
jbe
push
inc
ret
push
ljmp
add
jb
dec
movsl
testb
cmp
movsl
shrl
push
enter
int
add
mov
inc
fcoms
add
cmc
loopne
fsubl
xor
sbb
or
lock
jbe
mov
xor
shll
or
je
ja
xchg
shl
lret
dec
cs
jl
stos
cmpsb
ljmp
adc
out
cltd
mov
pop
loopne
lea
out
int3
dec
cmp
mov
dec
mov
add
mov
push
add
cli
lcall
add
sbb
fisttpll
mov
jnp
dec
push
shrl
or
mov
add
nop
mov
or
insb
add
shlb
or
add
mov
push
adc
pop
lahf
pop
sub
insb
jl
jne
fwait
int3
jmp
jbe
lahf
cli
inc
add
andb
cmc
xor
mov
jl
add
cmpsb
ret
or
orl
flds
cmpsl
add
dec
and
mov
lret
mov
outsl
sub
or
push
mov
mov
cmpxchg
push
xchg
mov
cltd
fstpl
push
sbb
cmpl
sbb
sub
or
sbb
icebp
add
aam
pop
sbb
popf
icebp
incl
pop
test
movsl
xor
je
call
mov
mov
and
add
inc
cmpsb
xor
outsb
pop
pop
cmp
mov
jle
fisttps
sti
cmp
imul
jno
jae
mov
xchg
mov
add
aam
mov
int3
fxch
inc
test
ljmp
aad
inc
adc
in
fwait
lahf
rcrl
xor
movsb
je
test
add
popa
sub
xchg
adc
rcr
add
jns
mov
mov
sub
jb
clc
jp
xchg
ret
dec
inc
scas
leave
dec
imul
xchg
jo
add
lret
fwait
push
pop
cmp
pop
add
or
fwait
aad
inc
ds
roll
loop
popl
sbb
enter
push
ds
inc
mov
push
roll
loop
jno
adc
xor
inc
and
mov
and
divl
add
xchg
mov
orl
stos
out
add
xchg
sub
sub
dec
xchg
mov
sbb
cmp
mov
xchg
inc
push
jecxz
pusha
roll
jnp
std
adc
clc
movb
mov
and
pop
jge
add
jne
cli
dec
nop
outsb
insb
les
add
les
lods
mov
in
push
xor
add
pop
lret
imul
aaa
rcll
enter
rcrb
sahf
ret
mov
dec
sarb
add
sti
aad
inc
jo
ja
popf
jae
mov
loop
imulb
dec
das
sbb
mov
add
xor
iret
pop
cmp
dec
andb
maskmovq
negl
push
add
cli
and
add
bound
pusha
cmp
push
inc
add
outsl
je
dec
jge
xchg
sub
popf
int3
js
cmc
shrb
add
fwait
clc
xor
dec
pop
sbb
sbb
rolb
adcb
sahf
movsl
dec
in
fmulp
or
add
sbb
in
outsb
push
jne
lret
xchg
sub
push
nopl
adcl
mov
pop
push
pusha
add
push
cmp
and
mov
add
movsb
sub
loop
mov
cmp
push
add
inc
add
mov
add
pop
jp
jnp
and
dec
std
dec
out
add
mov
cltd
cmpsl
mov
inc
loop
inc
add
hlt
cltd
mov
mov
outsb
xchg
add
inc
add
sbb
divl
add
push
jmp
mov
pushf
es
inc
pop
bound
mov
out
int3
call
xchg
fistps
pop
das
push
int
or
stos
jmp
sub
shrl
mov
test
xchg
popa
test
mov
adc
xchg
and
add
shr
loopne
shl
mov
add
push
and
adc
mov
push
mov
pop
add
mov
cmp
jg
popa
scas
xor
sub
icebp
mov
in
ret
icebp
ss
add
dec
dec
fdivrs
add
mull
bound
adc
smsw
aad
dec
aad
cmp
add
les
jo
jp
cmc
test
gs
sub
ror
jnp
insb
cwtl
xchg
cmp
dec
int3
scas
out
push
fs
testb
add
xor
push
inc
test
icebp
xchg
add
xchg
ss
xor
mov
rorl
add
and
loop
jg
ljmp
repz
pop
int
js
into
add
cmp
mov
int
jae
pop
add
sbb
adc
adc
sahf
or
outsl
inc
or
bound
popf
mov
push
xchg
jmp
fwait
test
xlat
and
aas
mov
sti
add
push
js
fs
ror
ds
mov
pop
imul
stos
adc
add
imul
rorb
rcl
add
push
push
fstp
xchg
adc
call
add
mov
call
fdivr
jne
nop
pop
add
stos
aad
or
jne
sub
loop
data16
cmpsl
mov
imul
add
jp
xor
cmp
mov
dec
sub
mov
enter
mov
hlt
mov
push
mov
jp
mov
sahf
lock
rolb
mov
fnstsw
lods
add
jb
inc
pop
js
add
arpl
jl
out
xchg
xchg
clc
repz
jmp
inc
test
or
insl
sarl
sub
sahf
push
fsubl
jo
nop
add
sub
dec
out
lret
aaa
lods
stc
or
xchg
sbb
rorl
outsl
and
hlt
clc
xchg
sub
loopne
add
adc
dec
ljmp
movsl
or
add
mov
cmp
add
push
ror
dec
xchg
scas
adc
add
aad
sbb
jo
fs
outsl
jmpw
xchg
pop
mov
pop
cwtl
xor
popa
push
inc
into
aaa
and
pop
pop
jecxz
sub
inc
dec
into
adc
xor
stos
mov
cltd
testl
xlat
jo
inc
mov
outsb
xor
stos
call
scas
sahf
mov
ret
mov
int
inc
sti
repz
mov
int3
adc
jne
pop
popa
jge
inc
push
sbb
int3
mov
pop
in
cmpsb
push
fiadds
push
test
sub
cmpsb
mov
xorb
push
cwtl
jp
pop
and
orb
dec
repnz
xchg
pop
test
push
jb
in
and
jge
dec
iret
rol
bound
ljmp
outsb
test
xchg
outsb
insb
xlat
jle
outsb
mov
cmp
js
in
test
mov
shrl
dec
adc
loop
mov
movsb
lods
cmp
adc
sbb
add
or
xchg
aam
bound
pushf
xorl
stc
xor
dec
pop
leave
mov
mov
lods
cs
add
cmp
fs
fdivrs
es
mov
out
add
lret
or
jle
shll
ds
stos
fisttpll
dec
test
fiadds
xor
mov
test
or
cmp
imul
add
pusha
sbb
jge,pt
jae
pop
add
push
cwtl
clc
pop
enter
cmp
rol
add
and
stc
adc
mov
scas
add
ss
popa
mov
push
std
mov
jns
aam
int
add
sub
cmp
pop
stc
mov
inc
outsb
sbb
fdivrp
jo
int
adc
add
push
add
sbb
gs
or
repnz
fisubrs
mov
aas
pop
jne
jno
test
mov
sbb
rclb
jne
icebp
iret
mov
inc
add
clc
adc
or
out
iret
mov
fidivs
fcoml
stc
pop
sbbb
enter
aaa
aad
and
sub
iret
adc
mov
pop
jge
lea
add
roll
inc
call
stc
add
inc
arpl
xor
fs
imul
stos
pusha
add
or
jle
push
jno
pop
dec
inc
out
or
dec
inc
fs
mov
add
lock
jl
add
inc
dec
xchg
xchg
leave
cmp
lds
add
cld
ds
mov
jg
lods
add
sbb
test
sarb
add
hlt
pop
cmp
add
xchg
add
mov
mov
sti
rorb
jle
and
mov
add
xor
scas
imul
test
iret
dec
test
jns
push
mov
add
adc
cmp
cli
test
pop
movsb
xor
push
mov
add
dec
out
sub
add
jae
movsb
loop
cmpl
fimull
bound
jns
je
ljmp
push
push
inc
nop
lds
push
jmp
inc
imul
fldt
pop
mov
add
jecxz
sbb
sbb
dec
jne
push
fnstcw
rcl
daa
call
add
cmp
pop
lea
jnp
subl
test
imul
icebp
pop
iret
hlt
stc
insl
dec
cmpb
dec
dec
xor
sbb
fwait
inc
repnz
jne
dec
pop
add
add
andb
xchg
out
add
mov
or
dec
jge
add
or
lock
mov
fs
add
stos
mov
add
mov
das
cmpsb
mov
js
sbb
loopne
clc
add
pop
add
rorb
cwtl
xor
jae
ret
dec
mov
add
xchg
rcr
jb
jbe
fiadds
ja
loope
mov
jecxz
add
sub
and
dec
ret
xchg
pop
sub
inc
out
sub
xor
pop
arpl
imul
cmp
sti
xchg
call
call
xor
mov
je
and
movsb
addr16
dec
dec
es
lahf
add
sbb
add
jmp
stc
add
loop
in
test
cmp
adc
add
scas
cli
addr16
lahf
mov
add
cmp
sarl
xor
adc
add
iret
arpl
xor
and
and
push
or
hlt
sbb
cwtl
hlt
lret
stos
dec
add
mov
or
es
pop
dec
push
subb
test
add
cmp
ret
xor
and
imul
ret
test
subl
adc
push
add
adc
lret
mov
les
and
loop
mov
mov
scas
fisttps
jg
imul
and
gs
fsubp
scas
dec
mov
fs
into
sbb
pop
pushf
int3
scas
loop
pop
adc
adcb
mov
fwait
jo
inc
mov
xchg
cmpsb
add
leave
jle
cmp
fs
xlat
jle
movsb
clc
mov
stos
ja
cmpsb
pop
inc
mov
inc
str
jne
dec
mov
mov
arpl
xchg
adc
fwait
hlt
push
sbb
sarl
jnp
loope
cmp
repnz
std
add
push
dec
stos
inc
popf
cmp
fiadds
nop
lret
jecxz
lods
test
add
icebp
loopne
movsb
xor
rorb
add
pop
imul
push
mov
fdivs
add
cli
push
cltd
and
icebp
fldt
lret
aam
and
mov
mov
mov
outsb
or
add
mov
lock
or
sbb
sbbl
fsubrs
adcb
sub
wbinvd
js
push
cmp
fcoms
pcmpgtb
lods
mov
lcall
or
out
sub
add
in
scas
inc
das
xor
scas
addb
mov
mov
ljmp
jl
mov
fwait
outsb
popa
adc
add
jo
xorb
mull
into
mov
rorb
fmul
jecxz
rcr
sub
icebp
add
xor
dec
xor
mov
dec
xor
adc
inc
daa
add
and
adc
push
mov
fldenv
mov
pop
push
xchg
aam
add
mov
jb
push
movsl
out
add
popa
inc
sub
jo
mov
adc
std
add
dec
pusha
pop
out
fldl
mov
add
insl
inc
inc
cmp
mov
cld
sbbl
push
add
pop
or
or
xchg
inc
rolb
add
add
repnz
add
and
repz
and
jne
lds
add
jmp
nop
in
add
add
xchg
and
jne
test
xor
pop
rcll
fwait
fwait
outsl
jb
add
pop
dec
mov
inc
add
jb
out
inc
add
scas
mov
mov
sti
add
in
xor
rorl
push
mov
cmp
add
add
mov
loop
or
mov
call
repz
mov
inc
addr16
std
imul
add
sbb
andb
sbb
add
js
call
lret
add
stos
fimull
push
lods
add
arpl
mov
iret
add
out
and
stc
and
add
mov
cmpb
mov
mov
icebp
mov
add
scas
xchg
lret
jmp
pop
or
or
push
mov
xchg
aad
out
or
mov
ljmp
and
add
adc
data16
or
add
push
dec
jge
push
and
negb
add
dec
pop
inc
mov
iret
add
gs
xchg
and
shll
mov
sub
je
pop
ss
mov
mov
sti
loope
or
out
rcrl
pop
xchg
jge
xchg
mov
insb
push
les
add
sbb
sbb
xchg
inc
dec
fadd
or
dec
xlat
mov
jmp
rcll
cli
into
fisubrs
rcrl
jns
add
pop
in
mov
test
dec
xchg
inc
jno
lds
dec
jno
cmp
push
lahf
mov
and
mov
or
mov
add
inc
pop
mov
xlat
imul
jb
mov
cmpl
cli
sbb
mov
inc
cli
insl
cmpsl
push
sub
add
push
lds
iret
lret
ret
sbb
sub
xchg
push
inc
lret
lahf
stos
mov
xchg
dec
push
jecxz
pop
add
xchg
popa
shll
dec
rorl
or
push
dec
jle
pop
cmpsb
jg
or
add
inc
fs
sub
push
mov
add
out
pop
jge
insl
pop
and
fwait
pop
mov
cmp
out
sub
jge
jp
in
push
int3
ja
jo
inc
scas
outsb
lds
or
mov
mov
push
lds
adc
add
fmull
xor
adc
rcll
aaa
ljmp
aad
clc
pop
jl
xchg
mov
add
test
add
int3
sahf
cwtl
ret
add
out
sub
in
and
sbb
fsubs
stos
into
lds
fcmovnb
insl
push
in
sbb
mov
jle
sbb
rolb
rcll
fwait
inc
movsl
lret
int
aaa
movl
std
mov
add
clc
aaa
mov
in
out
icebp
cltd
add
mov
cmp
out
aaa
cmp
add
jmp
test
rcrl
loop
rorb
add
cmp
mov
add
dec
mov
test
negl
lods
jns
outsb
mov
and
xor
sbb
movl
dec
shll
adc
sbb
add
arpl
movsl
push
nop
add
outsb
pop
sahf
jl
cmpsl
sub
mov
xlat
mov
add
mov
jle
cmp
add
aad
test
and
stos
cmp
leave
js
bound
sub
mov
mov
add
int
mov
es
add
dec
and
or
add
outsl
popa
mov
scas
sbb
mov
mov
or
sbb
ja
mov
jno
mov
inc
test
out
lock
es
outsb
mov
shrl
add
mov
les
add
sbb
xor
add
fs
fistpll
pop
inc
pop
pusha
add
mov
and
js
cmp
cmp
stos
int3
stos
hlt
sbb
fstps
in
cmp
mov
fldenv
enter
and
shlb
push
push
les
add
mov
aad
xor
ds
mov
sub
xchg
fidivrs
leave
mov
pushl
adc
rolb
enter
pop
sub
aaa
xchg
add
imul
add
or
fs
cld
xchg
push
cmpsb
inc
rorb
add
arpl
imul
mov
adc
mov
lea
push
jbe
scas
add
jle
fs
sub
jne
xor
enter
jns
test
add
jne
movsb
cltd
add
scas
cld
xchg
or
jl
out
sbb
out
das
sahf
aam
push
mov
mov
sahf
xor
xchg
pop
and
out
and
and
push
repz
test
divps
popa
add
mov
dec
inc
mov
shrb
xor
push
fcompl
pop
xor
jbe
inc
fcmovu
iret
lods
in
inc
cmp
cmp
aaa
ret
pop
jp
pop
mov
pop
add
pop
mov
push
lock
push
stc
adc
or
ret
and
enter
sbb
subl
jno
popf
pop
xchg
in
inc
jb
sub
dec
cmp
push
testl
rorb
pop
add
add
andb
jle
jmp
movsb
dec
pop
inc
xchg
mov
push
loope
int3
mov
xchg
adc
push
cmpsl
xor
sub
inc
dec
lods
gs
rolb
pop
cmp
aad
outsl
sarb
add
popa
stos
rclb
test
add
pop
dec
test
xchg
mov
add
inc
fisttpll
push
cmp
enter
adc
add
add
mov
popf
sbb
adc
dec
add
adc
mov
xchg
inc
btsl
xchg
fldl
int
mov
pop
fwait
shll
out
sti
cmp
rorl
lret
stos
mov
filds
push
lret
sub
cmp
sub
inc
shlb
dec
cmc
mov
sub
push
lock
imul
pop
fucom
testb
xchg
sub
pop
and
jl
lcall
inc
aad
pop
jnp
jecxz
inc
movsb
imul
cmp
adc
icebp
push
pushf
mov
pop
pop
add
stos
jge
push
inc
mov
imul
inc
test
pop
es
cmp
mov
mov
dec
into
test
and
adc
add
xchg
jle
popa
xchg
cmp
shl
jno
push
incb
pop
cmp
movsbl
rcl
or
loope,pt
scas
sbb
push
push
push
add
ficoml
test
test
loopne
rcr
mov
or
mov
jmp
mov
or
fcomi
add
and
dec
mov
out
idivb
mov
or
push
dec
mov
xlat
add
adc
cmpsl
sti
fdivp
mov
add
mov
xor
cmpsb
rcll
add
add
inc
out
scas
stos
xchg
movsb
aas
push
sbb
ja
push
add
fisubs
dec
push
lods
fnstcw
ds
stc
add
mov
clc
mov
xor
mov
pushf
lret
out
mull
lret
inc
push
mov
add
dec
les
push
lods
fldenv
add
lock
mov
xor
add
mov
pusha
lret
add
sbb
pusha
pusha
xor
pop
popa
add
mov
push
xchg
mov
add
xor
xchg
hlt
daa
loop
xlat
mov
dec
cmp
test
rorb
add
mov
fcmovne
add
out
jmp
fistpl
mov
out
in
iret
int
cmp
xchg
mov
push
in
add
popa
das
ljmp
mov
repnz
adc
pop
sti
add
fiadds
pop
xor
lret
push
and
loope
lock
lcall
push
and
push
jp
xchg
mov
add
cmpsb
shr
xchg
cmp
xor
ret
stos
mov
popf
jo
js
ja
out
add
test
js
jne
dec
lcall
dec
ficoms
jns
es
cmp
ja
sub
scas
lds
mov
xchg
or
and
mov
scas
in
dec
pop
rorb
test
js
cmp
cmp
arpl
pop
xchg
shrb
add
stos
jp
jne
jne
mov
xchg
in
jge
popa
jns
lahf
lods
dec
and
daa
adc
sub
addr16
imul
mov
pop
shll
lret
or
add
cltd
rcpps
arpl
je
or
mov
add
add
push
aad
dec
hlt
mov
pushf
sbb
inc
call
pushf
inc
jne
push
jl
jmp
dec
roll
aas
scas
arpl
dec
push
lahf
fisttps
and
jo
stos
lods
pop
test
cltd
xor
arpl
mov
xchg
pop
lods
adc
jno
loope
pop
mov
or
lds
jecxz
xchg
lahf
add
stos
mov
andb
leave
roll
lods
pushf
out
lds
ret
adc
adc
clc
push
lret
add
call
cmpsb
inc
pop
sbbl
jne
add
ret
or
mov
dec
add
xlat
mov
ficompl
jge
addb
divb
mov
push
je
jl
fsubrs
add
and
aaa
mov
repz
lahf
adc
add
pop
or
mov
cs
inc
add
mov
mov
ja
cmc
int
add
call
and
cmp
mov
std
mov
dec
jne
mov
stos
data16
xor
jnp
fnsave
test
repz
stos
cmp
mov
popa
pop
and
popa
iret
and
push
ror
xchg
mov
dec
movsb
inc
add
cmp
mov
pop
add
cltd
aas
mov
das
mov
repnz
add
rorb
sbb
inc
push
and
add
loop
mov
clc
popf
add
and
std
sbbl
lahf
and
xchg
aad
mov
xchg
enter
sbb
std
xchg
jb
cmc
push
popa
push
ret
fwait
adc
xor
pop
xor
test
movsb
cmc
jp
call
pop
sub
add
sub
mov
jle
xchg
jg
add
adc
in
sbb
add
hlt
add
adc
xchg
sahf
and
dec
popf
push
dec
cmpb
jo
sti
insb
cmp
imul
jns
xchg
push
sbb
jo
push
fcompl
repz
cmp
pop
movsl
sub
cwtl
cmp
clc
lea
cwtl
xlat
int3
adc
cltd
or
add
add
lahf
push
arpl
outsb
mov
and
mov
mov
addb
xchg
std
push
add
push
js
mov
add
mov
scas
add
inc
incb
mov
xor
dec
fldenv
mov
insl
das
mov
out
stos
pop
mov
cld
cmp
data16
xchg
and
mov
add
pop
sub
fwait
dec
outsl
sub
add
out
sti
mov
aaa
xor
shlb
pop
add
cmc
neg
nop
fst
imulb
add
sub
xor
cs
add
mov
scas
push
sbb
jle
add
aas
ss
es
imul
repnz
and
and
lods
sub
sub
add
lods
and
cmp
jbe
popf
add
jmp
mov
push
mov
shrb
mov
sbb
mov
dec
mov
dec
push
add
and
or
loop
scas
test
add
add
mov
mov
sbb
shl
or
pop
jle
xchg
jecxz
in
ret
or
add
outsb
mov
loop
test
add
push
lret
adc
sub
in
ds
std
mov
or
pop
or
add
or
push
mov
cmpsb
add
mov
and
push
jl
mov
cmp
dec
mov
imul
pop
jo
mov
add
jnp
mov
sbb
add
call
out
aam
stos
sbb
push
inc
ret
push
add
pop
test
test
je
shlb
adc
testb
mov
cmp
leave
int
ds
into
aad
stos
pusha
add
roll
mov
shrb
orl
loope
out
out
out
add
shlb
add
cltd
pop
subl
mov
ljmp
outsb
das
stos
jl
inc
scas
insl
and
add
flds
xor
rorl
add
sub
nop
dec
std
dec
fdivrl
addr16
repz
out
sbb
stos
ret
inc
push
and
insb
mov
test
cs
cltd
pushf
lret
inc
inc
stos
mov
mov
fwait
mov
insl
inc
jge
adc
cltd
add
fwait
leave
inc
in
scas
or
jae
add
adc
test
mov
jecxz
add
sbb
push
cmpsb
sub
and
mov
mov
xlat
xchg
push
test
jmp
test
add
scas
test
punpckhbw
punpcklwd
add
pop
ficompl
subb
roll
jl
data16
xchg
dec
add
mov
stos
mov
data16
fwait
mull
outsl
add
pop
movsb
inc
cli
pop
addr16
mov
and
add
nop
imul
scas
push
cmp
rcll
push
jo
lret
movsl
xor
mov
jl
xor
pusha
dec
dec
std
or
in
lods
daa
jns
imul
sarb
movzwl
xor
add
push
pop
ja
outsl
bound
cs
sub
add
or
inc
mov
popa
inc
pusha
arpl
sbb
add
gs
std
das
sub
xor
add
andb
pop
xlat
out
xchg
sbb
mov
add
cmpb
jbe
mov
pushf
mov
mov
fnsave
jle
sub
xor
add
jb
hlt
rolb
and
cmc
add
xchg
cwtl
aad
push
cmp
jecxz
shl
lods
add
gs
insb
gs
stos
add
pop
fdivrs
lret
add
jle
cmpsl
pop
das
popa
fiaddl
movsl
jl
add
mov
rorb
push
push
cwtl
inc
idivl
sub
aad
xchg
and
push
ja
pop
add
cmpsb
test
adc
shrb
insb
pushf
xchg
add
cmp
add
xchg
cmp
in
inc
sub
pop
push
repz
jge
pop
cld
fiadds
push
add
lret
insb
in
repz
cmc
ds
adc
decb
jge
mov
add
mov
push
dec
add
mov
popf
insl
xchg
aas
clc
mov
push
xchg
xor
int3
xchg
imul
add
mov
adc
fs
mov
xchg
jb
aas
pop
cltd
mov
add
add
out
lods
jmp
loop
push
add
mov
jbe
pop
inc
xchg
push
es
cltd
les
dec
mov
xor
stos
mov
pop
stos
leave
dec
adc
gs
add
mov
mov
ja
mov
fldenv
adc
and
frstor
add
subb
xor
pop
sub
add
loop
lods
sbb
inc
adc
jecxz
std
add
cmp
jo
repz
fstp
mov
xchg
jge
adcl
xor
lds
mov
gs
add
lea
sub
add
or
mov
outsb
outsl
roll
adc
popa
jge
xchg
xchg
shr
add
and
in
xchg
mov
aam
add
popa
mov
fs
aad
add
imul
or
sti
mov
inc
jle
scas
add
inc
int
imul
xchg
sbb
or
mov
mov
jnp
jp
lds
out
mov
lock
addr16
inc
add
repz
mov
mov
fmull
icebp
fistpl
add
test
inc
mov
and
sbb
ss
ret
add
stc
leave
or
orb
out
xchg
lock
mov
std
in
push
ret
xor
inc
xchg
outsl
cmp
in
add
mov
or
mov
stc
mov
inc
pop
sbb
mov
adc
xor
lods
cltd
ficompl
pop
popa
in
mov
stos
pushl
cmp
lret
scas
push
ja
repz
xchg
add
xchg
mov
movsl
leave
ds
add
mov
in
out
jne
das
or
js
scas
push
inc
push
mov
add
mov
xor
xchg
lds
cmp
push
lret
outsl
out
or
pand
add
pop
imul
iret
pop
jne
dec
add
sbb
das
stos
add
xchg
out
push
js
out
inc
repz
cmp
add
bound
nop
insb
sar
jns
add
test
adc
and
sub
inc
mov
lds
stos
adc
mov
mov
cmc
push
pop
add
sbbb
mov
sbb
popf
jg
popf
pop
pop
clc
or
movsl
sub
pop
or
pop
jno
xchg
stos
hlt
mov
mov
adcl
dec
jecxz
add
mov
pop
iret
cmp
sub
lret
push
add
sub
ds
incb
daa
or
sub
repnz
roll
adc
mov
outsb
xchg
adc
add
mov
jmp
aaa
and
into
sbb
enter
push
add
pop
loop
ffreep
jmp
js
lods
scas
das
jne
loop
lcall
add
or
aaa
xchg
mov
sbb
sahf
push
mov
in
mov
sub
adc
cmc
dec
iret
aam
sbb
xor
add
mov
stos
dec
scas
insl
jmp
dec
fwait
xor
fwait
jo
stos
xchg
jae
insl
cwtl
sub
es
call
mov
push
add
adc
addr16
sbb
lods
repnz
add
sbbb
rep
sbb
scas
mov
lea
xchg
mov
sbb
shrb
xor
and
push
in
add
pop
mov
adc
mov
add
lods
sub
or
mov
popl
fpatan
shlb
dec
jno
stos
pop
dec
add
nop
sub
ret
xor
std
in
es
addr16
mov
dec
pop
dec
insl
adcb
jmp
fisttps
fsts
sti
loop
dec
sub
add
cmp
cmpsl
bound
leave
aam
lar
fnsave
in
aam
aam
call
scas
sub
adc
add
lret
dec
sbb
dec
add
shll
add
add
mov
inc
inc
hlt
xchg
xchg
nop
dec
push
add
in
lahf
vpsllq
out
call
add
xchg
mov
sub
lock
in
add
fcmovne
inc
pop
push
and
outsb
add
ficompl
add
add
mov
push
or
leave
sarb
add
sbb
push
dec
popf
hlt
xor
mov
js
sar
out
popa
clc
mov
add
xor
adc
pushf
cmp
mov
add
test
or
mov
add
int
cmp
outsb
cmp
xlat
dec
dec
inc
jb
jae
sub
cmc
imul
adc
bnd
add
outsb
cmpsl
testl
mov
dec
dec
or
mov
sub
rcl
mov
test
jne
mov
sub
fs
mov
ljmp
pop
add
unpckhps
aas
inc
and
repnz
imul
das
insb
mov
push
js
rcrl
repnz
aas
out
cmp
pop
xchg
repnz
add
adc
inc
cmp
mov
enter
cs
dec
cld
inc
push
mov
dec
mov
pop
jp
or
add
add
lret
negl
bound
push
add
adc
les
push
pop
iret
push
add
ds
mov
pop
sbb
xchg
xchg
add
pop
adc
ja
or
lret
je
rcr
add
push
add
inc
stos
pop
ds
add
rorb
vphadduwq
lea
push
dec
aas
xchg
shl
arpl
add
mov
ss
aam
mov
add
cmp
add
jne
xchg
or
jg
ss
xor
inc
add
add
inc
lock
push
lods
add
sub
mov
enter
loop
add
mov
loop
inc
sub
xchg
aam
mov
xor
jle
or
pop
mov
fistpl
mov
sub
xchg
in
sbb
pop
xchg
pop
sub
test
out
je
push
push
loop
js
jae
sub
add
rorl
mov
mov
sbb
lcall
push
lcall
in
push
data16
test
pop
xchg
cli
mov
add
mov
sbb
popa
repnz
int3
cmpsl
roll
fidivrs
push
sub
mov
roll
and
push
sub
pop
push
inc
icebp
das
fdivl
push
add
cmpsb
xor
jl,pt
shl
sbb
mov
jo
das
xchg
push
add
mov
out
dec
add
adc
shll
mov
lahf
enter
mov
loop
icebp
dec
xchg
push
mov
scas
cmp
jg
inc
add
ret
cmp
insb
push
repz
pop
sbbl
fs
add
sbb
adc
cltd
iret
jl
test
lret
imul
xchg
lcall
cli
cmp
sbb
popf
movsb
add
call
cltd
popl
test
mov
sub
add
push
inc
add
cwtl
stos
cmpsb
mov
arpl
mov
mov
or
cmpsb
mov
push
jb
je
into
mov
and
add
sub
adc
mov
mov
adc
and
ret
pop
jmp
out
jge
add
dec
fistps
lea
xor
add
xchg
ja
dec
inc
mov
aam
lds
mov
bound
adc
lcall
das
fcmovnbe
sub
add
jge
cmp
xchg
cmp
nop
lret
sub
outsb
stos
mov
mov
pop
add
jecxz
inc
mov
subl
jp
add
popf
and
or
jo
arpl
rol
jo
cmp
imul
leave
sahf
push
mov
xchg
mov
and
testb
dec
add
mov
test
lahf
dec
jo
xlat
xor
xchg
push
insb
mov
xchg
stc
movsb
fdivs
xlat
add
lock
es
movsl
cmp
and
jge
mov
call
adc
push
mov
jo
adc
popf
or
add
inc
outsl
mov
pop
sub
jle
hlt
sub
mov
cmpsb
arpl
in
iret
fs
imul
or
jne
mulps
iret
mov
and
jmp
push
fimuls
clc
pop
mov
aas
out
lods
inc
adc
stos
movsb
pop
or
call
mov
mov
pop
add
mov
bound
push
inc
rorb
add
inc
mov
jae
hlt
test
push
inc
and
or
add
jg
xor
into
push
push
data16
pop
aaa
add
inc
mov
cmp
mov
out
xchg
mov
stc
inc
xchg
add
mov
add
fisubl
jecxz
sub
pop
dec
fbld
test
shll
add
insl
enter
push
int3
ljmp
inc
sub
repz
add
fiadds
sbb
pop
mov
add
test
into
inc
cmpsl
imul
aaa
jge
ljmp
addb
sub
pop
xor
or
sti
mov
pop
xchg
out
cs
add
fprem1
add
addr16
mov
push
inc
sbb
add
rolb
add
shlb
clc
inc
jge
pop
xchg
in
and
sub
xchg
sbb
dec
lods
add
lea
lahf
dec
daa
repnz
push
ret
add
mov
mov
xchg
iret
add
mov
lds
cmc
inc
mov
loop
add
adc
dec
test
xchg
mov
loopne
lods
ljmp
dec
push
std
or
cmpsl
sahf
jecxz
into
inc
shrl
ret
gs
pusha
xchg
fucom
hlt
add
ja
xchg
push
mov
jns
popl
aaa
jno
add
ret
inc
andb
sub
xchg
sub
push
xor
cs
push
addb
push
insb
lahf
lret
jle
pusha
in
push
sub
enter
mov
jecxz
add
int
add
dec
jge
cmpsb
jnp
mov
push
fidivl
jns
arpl
or
add
adc
mov
repz
jp
fsts
out
jecxz
cwtl
jno
pop
add
dec
test
xor
push
inc
mov
cltd
mov
cwtl
fisttpll
sbb
add
sbb
cwtl
and
adc
pop
add
push
mov
loopne
outsl
lea
add
pushl
mov
or
xchg
jne
jnp
jb
pop
cmp
mov
add
lea
xchg
add
lods
lea
mov
xchg
jne
clc
aas
imul
xchg
in
add
popf
es
jns
xchg
xchg
adc
inc
out
cmp
test
jnp
scas
xor
push
shll
xchg
cli
addb
stc
mov
negb
outsb
nop
mov
mov
ret
mov
mov
jo
js,pt
or
add
lods
fmul
cmpsb
pop
dec
je
adc
fadd
add
inc
fists
push
add
int
cmp
fdivrs
mov
push
add
mov
lea
inc
xor
push
add
lods
jb
pop
jp
fdivl
add
and
fwait
ret
sbb
jnp
pop
add
sahf
push
mul
outsb
negl
inc
add
mov
sub
std
xor
stc
stos
xchg
into
xchg
imul
xchg
add
lahf
lods
clc
nop
scas
xchg
fisttpll
xchg
cld
leave
add
and
fdivs
inc
stos
or
sbb
add
adc
test
push
cmp
sbb
sbb
mov
mov
adc
and
lods
xor
mov
mov
mov
add
repnz
ja
lea
mov
stc
pop
stos
shll
pop
lret
out
sbb
popl
mov
adcb
push
mov
les
inc
imul
sub
add
or
sbb
add
inc
pop
jns
inc
lcall
jle
popf
shlb
les
call
adc
adc
dec
mov
cmp
add
add
add
mov
and
adc
pop
xchg
and
out
cld
fcomp
or
stos
sub
cmp
aam
cmpsl
sahf
mov
push
jnp
addr16
push
or
pop
cmp
add
or
fldt
mov
movl
push
add
jle
aad
mov
dec
mov
and
mov
adc
jns
add
pop
in
in
fs
xchg
vshufps
xchg
mov
add
cmp
dec
jb
add
pop
dec
pop
adc
sahf
jge
cmp
xchg
mov
mov
add
inc
pusha
fistps
lret
hlt
sbb
add
mov
fsubs
pop
fs
pop
test
mov
inc
add
jnp
xchg
ds
cmp
out
cmp
sahf
xor
arpl
sub
add
aad
mov
push
addb
pop
aaa
xchg
pop
lods
mov
hlt
and
jne
lods
cld
lret
inc
fcompl
imul
push
in
cmp
mov
pop
int
add
mov
incl
test
adc
ret
pop
inc
lret
or
nop
divl
outsl
outsb
xchg
stc
push
fisttpll
out
and
sahf
inc
or
ret
dec
mov
mov
inc
add
cmp
sub
aaa
sbb
jae
lods
mov
inc
jae
sahf
sub
andb
fistpl
nop
adc
ss
mov
ficoms
pusha
ret
inc
pop
sbb
add
mov
cltd
mov
out
add
push
add
push
inc
cmp
sub
call
pop
lahf
xor
loop
or
add
sub
xor
push
pop
faddl
aas
mov
je
and
push
add
sbb
loopne
pop
in
sbb
scas
pushf
int
mov
ret
add
cmp
mov
cmp
imul
leave
ljmp
imulb
add
push
mov
jnp
fidivrl
jmp
pop
mov
push
insl
inc
and
add
pop
pop
loopne
and
shll
loope,pn
lcall
add
test
inc
adc
into
mov
add
rcrb
mov
fcompl
insb
js
push
in
fsts
out
test
add
test
or
icebp
lea
cltd
test
add
push
jmp
sbb
add
decb
push
loop
enter
add
call
dec
fsubrs
mov
jne
in
add
ss
push
loope
jp
add
push
repz
hlt
mov
sbb
fcomip
lock
or
adc
loope
push
mov
push
icebp
data16
in
mov
sub
lods
aad
and
or
mov
cmp
hlt
mov
and
repz
cmp
mov
pop
push
loope
movsl
xchg
add
out
pusha
push
loop
xchg
and
add
sti
repnz
pop
addr16
and
ljmp
nop
ss
push
fs
aas
addb
pop
push
mov
ja
int3
out
xchg
sarb
ds
cmp
jns
xchg
add
pop
stos
pop
jne
cmp
add
add
addr16
stos
out
iret
aad
cmpsl
scas
push
stc
int3
mov
es
pushf
jmp
sbb
lahf
xchg
xchg
mov
arpl
add
in
lods
scas
fs
jne
mov
pop
cmp
sub
dec
pop
cmpb
arpl
out
push
inc
mov
dec
xor
mov
or
and
xchg
addr16
dec
repz
pop
call
lcall
imul
call
add
subl
cmp
adc
or
movsb
in
pop
inc
add
add
roll
or
sub
scas
and
sub
test
sbb
mov
mov
testb
iret
ja
mov
xchg
add
stos
bound
add
dec
popa
sub
and
inc
add
psrad
add
inc
cmp
cmpsb
mov
nop
std
xor
jg
xchg
mov
jmp
mov
sub
scas
or
rcll
pusha
gs
push
daa
stos
les
std
fsub
fists
iret
sbb
les
cmp
mov
lcall
and
ficompl
mov
add
roll
jmp
inc
sub
push
movsl
pop
jo
outsl
dec
cld
popf
push
insb
rorl
add
jno
roll
fwait
leave
inc
test
std
mov
fdivrl
lret
or
faddl
or
mov
add
dec
or
call
add
add
not
aaa
mov
ds
test
jp
addr16
stos
sbb
cmpsl
repnz
shr
sbb
mov
push
clc
inc
insl
mov
pop
cli
inc
add
outsl
out
ret
jno
jbe
roll
cli
test
xor
insl
pushf
orl
adc
pop
pop
fwait
dec
ds
fmull
into
push
push
js
fsubs
lret
es
stos
loop
pop
add
mov
in
bound
cli
mov
or
jns
lods
leave
ljmp
mov
or
xor
ret
xor
movsl
or
inc
mov
aam
jge
add
inc
in
mov
aas
lahf
add
jbe
cmp
mov
pop
pushf
pop
add
mov
sbb
pop
ljmp
fildl
xchg
fwait
push
xchg
fwait
sahf
rcrl
fidivs
fists
enter
add
icebp
ja
inc
mov
push
jle
bound
repnz
nop
mov
add
sub
js
pop
aaa
jp
jp
push
loope
hlt
mov
dec
mov
adc
ret
fildl
pop
out
xlat
add
jmp
add
iret
or
dec
sbb
push
adc
jne
and
dec
xchg
add
add
aad
add
dec
sbb
add
add
or
test
sbb
imul
aaa
sub
cmp
mov
jle
pusha
fs
outsb
insb
mov
sub
mov
outsb
pop
push
add
pushf
clc
test
xchg
dec
fcomps
roll
loope
jl
sahf
inc
mov
add
arpl
and
mov
cli
sub
xchg
and
xchg
fstl
sub
fldt
jne
pop
adc
add
push
inc
dec
cmpsb
mov
lods
jo
enter
inc
inc
sahf
pop
cmp
add
and
cld
push
adc
inc
sahf
sub
add
lods
adc
ror
mov
cmpsl
jl
jnp
pop
addr16
je
arpl
sbb
rorl
pop
cmpsl
dec
cmp
lock
mov
sbb
pop
xor
nop
and
or
cmpsb
sti
les
lahf
add
jbe
adc
adc
sahf
out
subb
int3
add
xchg
outsb
and
inc
jmp
js
cmp
jecxz
lcall
insl
xchg
xlat
cmp
out
repnz
pop
fisttpll
shrb
add
imulb
sti
sbb
cld
stos
add
add
out
mov
and
add
imul
dec
cmp
mov
add
popa
jg
push
push
sub
into
xchg
add
mov
push
mov
push
add
jmp
xor
dec
jns
and
aaa
cmp
and
leave
and
bound
add
lock
addr16
into
dec
in
test
cmpsl
lods
faddl
adc
xchg
scas
push
xchg
sub
add
jle
add
mov
mov
aaa
or
jno
mov
fidivs
or
adcl
repnz
jns
adc
jns
test
xchg
mov
data16
add
jecxz
mov
shll
shlb
sub
add
scas
cmc
sbb
test
sub
call
xchg
sti
jns
adc
les
lds
int
in
inc
dec
jle
pushf
mov
jle
repnz
bound
add
and
adc
lock
aas
dec
jne
sub
addl
or
fs
aad
sub
mov
mov
mov
jl
ja
hlt
add
mov
outsb
mov
out
mov
adc
mov
pop
call
add
shl
and
inc
icebp
push
aam
cmc
or
out
test
shll
push
fldcw
adc
test
push
mov
incl
mov
mov
test
sub
fcoms
xchg
or
aad
or
add
or
fnstenv
ss
add
arpl
inc
lds
in
mov
jno
jb
xchg
mov
and
repz
repz
loopne
push
hlt
popf
jno
and
adc
adc
or
stc
andl
or
dec
mov
add
inc
add
sub
add
adc
ficoml
repnz
add
pop
and
std
xor
push
add
in
leave
arpl
jp
or
movsl
lahf
les
in
movsb
push
pop
out
add
mov
into
mov
jmp
lods
xchg
add
and
call
mov
sbb
je
ja
jno
xchg
adcb
fstl
dec
aas
xor
shl
mov
add
ljmp
adc
fiadds
jae
adcl
mov
push
int
outsl
or
in
imul
stc
add
cmp
scas
scas
sbb
aaa
aam
xor
pop
push
xor
xchg
add
add
lods
push
out
shlb
and
mov
pop
mov
push
add
sub
mov
loop
repnz
gs
test
mov
add
push
dec
mov
comiss
sbb
add
call
and
test
add
sti
pop
pop
jmp
bound
je
mov
dec
jle
sub
fs
mov
aad
lahf
push
xor
imul
movb
jnp
push
imul
movsl
adc
jns
mov
xor
popf
mov
aas
mov
push
add
ds
fiaddl
lret
data16
add
sti
fdivl
sahf
in
push
mov
and
jl
jmp
loop
add
xchg
xlat
mov
add
int3
push
repz
dec
xchg
xchg
xchg
sub
shlb
jecxz
add
aad
add
mov
mov
inc
loop
lret
nop
addb
push
jge
mov
fwait
xchg
fs
mov
xor
or
dec
add
outsl
pop
jl
pop
inc
add
add
xchg
pusha
push
push
sub
push
or
cmp
xchg
mov
xor
adc
add
clc
xchg
je
das
sbb
push
mov
ret
cmp
lods
mov
mov
add
push
fsubrs
out
jne
pop
in
popf
cmp
add
xchg
mov
xor
ds
out
xor
xorb
mov
pop
mov
pusha
sub
test
xor
shlb
push
jle
fcmovne
imul
shlb
add
jno
xchg
aam
lret
xlat
xchg
adc
movsb
pop
add
loopne
inc
add
adc
add
les
dec
and
and
mov
mov
js
add
jns
mov
cmpsb
pop
rorl
mov
jp
mov
fdivrs
pop
fdivrp
add
lods
sbb
mov
adc
dec
stos
ja
jns
mov
pop
xor
dec
mov
sub
push
mov
add
scas
inc
mov
andb
cld
dec
and
pop
jns
insl
aad
add
loope
stos
js
xchg
cmpsl
scas
inc
mov
add
pop
and
pop
mov
sbb
stos
or
sbb
mov
add
adc
xchg
into
jmp
in
cmp
add
call
sub
or
cmp
cld
das
in
sbb
add
jmp
jle
mov
cmp
ljmp
lods
xor
sub
add
sbb
lea
aaa
rcr
sub
add
leave
xchg
es
fidivrs
inc
hlt
pop
jle
add
mov
or
pop
cs
inc
insl
cmpsb
cmp
inc
add
pop
jno
pop
sub
cmp
dec
cli
repnz
xor
or
push
xor
xor
frstor
pushf
adc
icebp
clc
xchg
xchg
add
pop
aam
call
pushf
pop
xor
movl
je
and
je
jle
bound
cwtl
push
test
adc
mov
cmp
cmp
push
ret
movb
jbe
mov
push
idivl
sbb
lret
leave
mov
cmpsl
sahf
sbb
sbb
push
add
and
mov
test
and
fistps
dec
xchg
sub
inc
pop
stos
mov
xsaves
sbb
xchg
cwtl
out
xchg
mov
int3
addb
dec
mov
jae
mov
adc
add
inc
ret
cmp
and
pusha
in
outsl
xchg
imul
add
push
pop
fiadds
sub
jg
mov
add
add
int3
insb
outsb
pop
mov
in
and
loop
push
push
fldl
sbb
mov
add
scas
sbb
and
cltd
push
test
dec
iret
sub
sbbb
jecxz
mov
jp
aas
mov
dec
shrl
aaa
adc
shlb
mov
shl
mov
jmp
pop
daa
scas
sti
les
lea
cmp
bound
insl
sub
mov
clc
jp
movb
add
dec
leave
push
jbe
popa
or
and
aam
xchg
fwait
subb
sbb
pushf
cmp
inc
xlat
xchg
lea
in
in
fisubl
fidivl
or
add
mov
dec
push
dec
pop
lods
test
cli
add
sub
incb
mov
add
cli
imul
rclb
jno
ret
mov
pop
cltd
test
jns
add
push
mov
popa
cltd
sub
sub
iret
jae
incl
xor
push
mov
cmp
not
push
add
lea
stos
mov
inc
pop
lahf
add
rcr
out
jnp
sub
pop
add
xor
mov
mov
movl
negb
jg
jo
setno
fwait
adc
mov
mov
data16
daa
mov
fsubl
lcall
push
sub
and
push
std
add
cmp
jae
jno
stc
fildl
add
and
fs
and
mov
sub
inc
test
pusha
ret
sbb
out
pop
cmpsl
push
inc
push
subb
jp
xchg
sbb
fnsave
mov
and
scas
sar
xor
push
xchg
jb
into
aaa
cwtl
inc
add
mov
jmp
add
hlt
mov
xor
hlt
pop
fildll
in
add
mov
es
cwtl
jae
or
cmp
or
scas
cmp
lds
cmp
jl
aam
out
idivl
adc
imulb
mov
cltd
dec
xchg
add
push
fdivl
popf
adc
mov
add
out
xor
adc
jo
and
xor
push
lods
fcmovnu
adc
mov
bound
mov
cwtl
pop
xor
xchg
add
xchg
sbb
in
xchg
add
rorb
stos
pop
subb
and
jb
stos
fxch
inc
xchg
sub
cmc
add
pop
jo
mov
filds
insl
push
popf
popf
ss
and
mov
xchg
outsl
lea
jl
call
xor
add
gs
adc
pop
je
adc
mov
pop
fidivl
test
push
outsl
sbb
cmp
dec
addr16
dec
jo
or
lods
add
scas
jo
jmp
mov
mov
clc
add
adc
adc
add
cmp
push
sbb
dec
jl
adc
mov
pop
push
call
popl
loop
lret
arpl
js
pop
sbb
data16
inc
add
repz
pop
push
and
test
das
clc
pop
inc
out
push
add
xchg
add
jle
loop
in
and
fcomps
jle
int
and
adc
add
fucom
dec
lea
jnp
sbb
add
push
mov
push
add
add
add
xor
add
add
or
test
add
add
and
add
add
or
test
add
add
adc
add
add
or
push
add
add
loopne
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
sbb
add
add
xor
xor
xor
cmp
xor
xor
bound
xor
add
inc
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
inc
add
je
inc
add
data16
outsb
add
add
and
push
add
add
add
add
add
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
inc
add
je
inc
add
data16
outsb
add
add
and
inc
add
add
je
add
xor
or
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
xor
sub
xor
sub
xor
xor
sub
xor
add
xor
or
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
inc
add
add
outsb
add
add
adc
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
sub
inc
add
add
add
add
add
add
add
add
add
or
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
bound
add
add
outsb
add
add
js
add
add
adc
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
inc
add
je
inc
add
data16
outsb
add
add
and
xor
xor
xor
xor
add
add
cmp
or
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
xor
sub
xor
sub
xor
cmp
sub
xor
xor
xor
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
.byte
add
add
repnz
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
repnz
xor
xor
xor
pop
xor
outsb
xor
mov
lret
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
and
jge
xchg
xor
mov
mov
xor
inc
ss
ss
ss
divb
adc
aaa
sub
push
aaa
pop
aaa
jp
xorb
aaa
loope
in
aaa
hlt
aaa
and
cmp
outsl
cmp
jge
popf
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
cmp
jno
xchg
lea
xchg
cmp
cmp
cmp
cmp
cmp
cmp
