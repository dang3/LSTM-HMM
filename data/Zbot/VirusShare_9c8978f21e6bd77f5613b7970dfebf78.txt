add
add
push
roll
add
add
dec
roll
add
add
jo
add
add
add
mov
add
cmpsb
roll
add
add
add
roll
add
add
add
roll
add
roll
add
roll
add
add
rolb
add
rolb
add
add
pop
rolb
add
add
jbe
add
mov
add
sahf
rolb
add
add
add
rolb
add
rolb
add
rolb
add
roll
add
add
sub
add
inc
roll
add
add
add
mov
add
fs
idivb
mov
cmp
add
fs
idivb
mov
cmp
inc
add
jb
mov
lret
adc
sub
inc
adc
test
aas
daa
xor
lret
lret
xor
lret
lret
inc
daa
xor
inc
subb
lret
pop
xor
sub
shr
inc
cmp
sub
sub
int
adc
lret
sub
out
sbb
inc
and
inc
mov
andb
mov
sub
lds
sub
dec
xor
aas
les
jo
add
stc
sub
cmp
fst
pop
fidivl
daa
out
mov
mov
add
sub
cmpsl
sub
sub
mov
xchg
inc
and
andb
xchg
test
add
int
inc
jo
xor
inc
add
sub
pop
sub
inc
mov
in
sub
or
sub
mov
inc
inc
add
sti
and
sub
mov
xor
xor
push
cmp
pop
lea
push
lea
or
add
sub
adc
sub
repnz
lea
add
mov
sti
xchg
sub
adc
mov
sti
push
sub
adc
fisubl
mov
inc
adc
adcb
adc
dec
das
int
sub
addl
jg
inc
sub
sub
sub
inc
adc
adc
repz
add
adc
adc
adc
inc
sarl
fstpt
jecxz
fstpt
fcompl
lea
xor
into
fsubs
xor
lret
ret
sti
cmpsl
sub
sub
inc
mov
inc
and
lods
jmp
cmpb
mov
add
xor
sub
adc
inc
mov
inc
and
lods
jmp
cmp
cmp
inc
mov
sub
dec
test
xor
decb
cmpsl
sub
sub
stos
inc
or
cli
sub
sub
add
adc
repz
xor
mov
sub
xor
xor
xor
inc
and
lods
in
subb
mov
sub
sti
subb
inc
mov
cmp
jecxz
sbb
or
int
xor
jecxz
xor
mov
sub
subb
xor
mov
test
pop
xor
jne
sub
int
int
jecxz
in
push
sub
adc
fwait
mov
sub
xor
hlt
jecxz
xor
subb
inc
mov
xchg
sub
sub
adc
cmp
jecxz
stc
adc
add
sub
lods
cs
and
inc
mov
mov
sbb
jecxz
aam
cmpl
adc
mov
and
or
or
sub
sti
jle
sub
subb
aam
inc
adc
adcb
mov
addb
andb
sahf
mov
bound
out
subb
sub
sub
sub
lods
icebp
cmp
inc
adc
mov
inc
mov
lods
jmp
cmpl
out
inc
les
in
xor
mov
xor
stos
xor
add
mov
sub
sub
bound
jb
lods
bnd
cmp
arpl
dec
sub
cmp
shlb
inc
rorl
sub
mov
adc
fstpl
cmpb
les
xor
mov
pushl
ret
sbb
jl
sub
stos
xor
stos
mov
inc
add
inc
dec
inc
mov
mov
lret
ds
lret
ds
mov
mov
and
aam
dec
cltd
mov
xchg
sub
sub
sub
stos
xchg
mov
sub
sub
sub
cmp
push
ficoml
cmp
sbb
fidivrl
sbb
mov
mov
sub
cmp
sbb
push
inc
inc
adc
sub
sti
add
sub
mov
sub
cmp
adc
insl
pop
sub
sub
ret
inc
stos
mov
inc
cmp
and
ret
cmp
and
mov
mov
inc
adc
inc
les
jns
sub
xor
sub
inc
mov
inc
stos
cmp
inc
mov
inc
stos
cmp
xor
pushf
inc
les
inc
mov
into
inc
aam
inc
dec
xor
mov
sub
inc
sub
sub
sub
cs
bound
and
and
and
jb
mov
and
les
push
mov
enter
pusha
sub
lret
and
pop
inc
sub
mov
mov
mov
mov
inc
and
inc
or
lret
cwtl
pusha
sub
lret
xor
adc
inc
mov
inc
and
inc
or
lret
pop
pusha
sub
lret
dec
cmp
and
stos
inc
adc
nop
stos
inc
aam
sti
xchg
pusha
sub
lret
or
fdivrs
inc
sbb
xchg
and
inc
aam
sti
pop
pusha
sub
inc
adc
lret
inc
push
adc
sub
sti
cmp
sub
sub
xor
mov
sub
les
mov
mov
inc
les
mov
pusha
std
mov
sub
and
sti
lret
insb
sub
inc
sbb
sub
sub
sub
sub
inc
mov
nop
iret
mov
lret
jmp
mov
sarb
in
cmpb
cmpsl
xchg
sub
xchg
sub
sub
sub
stc
inc
mov
sub
adc
and
stos
cli
or
lret
xor
sub
adc
inc
mov
inc
stos
stos
shrb
lret
mov
mov
sub
sub
sub
sub
mov
idivb
inc
mov
lret
cs
inc
inc
mov
in
cmp
sbb
sub
sub
and
stos
rcl
sub
pop
inc
mov
inc
stos
stos
cli
sub
sub
rcrb
sub
pop
inc
mov
inc
and
cmp
sub
sub
pop
inc
mov
sub
lcall
and
mov
mov
and
subb
inc
mov
sub
fdivr
dec
cmp
sub
mov
inc
stos
stos
cli
sub
sub
rcr
sub
pop
call
aam
add
sub
fdivr
repnz
push
idivb
xchg
cmp
fadds
idivb
in
idivb
call
fdivr
adc
cmp
shl
cmp
enter
xchg
idivb
inc
mov
fdiv
cmp
nop
mov
fdivr
into
idivb
cmp
inc
mov
fdivr
lods
idivb
cmp
fdiv
cmp
fdiv
cmp
fdiv
cmp
mov
decb
fdivr
push
cmp
xor
shrl
idivb
push
cmp
push
mov
and
mov
movsb
pop
sub
mov
sub
mov
sub
mov
sub
inc
mov
inc
sbb
cmp
push
fidivl
inc
mov
inc
mov
cmp
or
mov
inc
aam
sti
leave
and
sub
inc
pusha
xor
mov
bound
mov
sti
sub
sub
inc
mov
inc
stos
xchg
xor
adc
inc
les
mov
stos
stos
sub
jp
or
sub
inc
sub
cmp
xor
std
in
sub
inc
ss
sub
inc
cmp
and
xor
fwait
and
mov
sub
sub
idivb
adc
popf
dec
and
les
inc
mov
aaa
popf
push
and
les
inc
mov
idivb
dec
sub
idivb
dec
sub
idivb
imul
idivb
jns
sub
cmp
mov
popf
ss
daa
sub
mov
sub
idivb
inc
adc
cmp
or
sub
inc
mov
lret
imul
cs
xor
lret
push
stos
inc
sub
aam
xor
dec
insl
sub
xor
stos
jb
hlt
sub
pop
mov
inc
mov
nop
daa
nop
mov
mov
sub
pop
sub
adc
inc
mov
nop
mov
jle
sub
xor
nop
mov
mov
inc
mov
sub
sub
sub
xor
inc
mov
inc
stos
inc
sub
aam
inc
les
inc
fildl
repz
sub
cmp
lret
lret
nop
mov
mov
sub
lret
push
xor
sub
sub
xor
inc
mov
inc
stos
inc
sub
adc
sub
cmp
mov
xor
mov
xor
and
xor
lret
jo
inc
mov
les
add
inc
les
aas
inc
sub
mov
inc
aam
cmp
inc
les
mov
inc
mov
xor
sarl
sub
sub
xor
adc
cmp
add
sub
sub
sbb
scas
sbb
cmp
inc
int3
cmp
adc
and
dec
cmp
sub
sub
fldt
xlat
fildll
sub
or
sub
inc
dec
xor
repz
in
xor
sti
inc
cmp
pop
xor
repz
roll
sti
cmp
sbb
mov
cs
adc
inc
aam
sub
add
add
sub
push
xor
or
xor
sbb
sub
sub
ror
inc
lret
nop
xor
int3
sub
lret
push
adc
xor
sub
sub
xor
inc
mov
inc
stos
inc
sub
aam
inc
mov
inc
sub
sub
sub
mov
inc
les
mov
sub
cmp
shrb
aam
inc
mov
xor
mov
inc
mov
inc
lret
mov
inc
cmp
inc
mov
pushf
mov
push
inc
push
mov
inc
pushf
xor
inc
mov
inc
dec
add
int
dec
call
bound
aam
add
xor
add
lcall
sub
xor
sub
sub
sub
sub
cmp
sub
xor
sub
sub
popf
inc
sub
sub
xor
sub
sub
xchg
mov
sub
sub
hlt
or
inc
mov
dec
cltd
lret
repz
cltd
mov
xor
mov
sti
cmpsl
sub
sub
fdivs
dec
xor
adc
jo
xor
dec
cltd
push
inc
dec
cltd
fiadds
and
cld
inc
mov
xor
cmp
hlt
sbb
jo
xor
dec
cltd
faddl
and
addb
cmp
and
xor
in
sub
cmp
sbb
dec
cltd
faddl
mov
xor
and
push
loope
cltd
push
inc
dec
cltd
fiadds
les
sub
and
adc
imul
dec
cltd
lret
cltd
sbb
mov
xor
sti
pushf
aam
dec
das
in
sub
sub
loopne
stos
stos
add
nop
stos
out
mov
inc
add
add
shlb
nop
pop
cmp
dec
xor
mov
xor
sub
sub
sub
stos
stos
std
cmc
sub
sub
cmp
dec
cmp
sub
mov
cmp
or
dec
xor
sbb
xor
cmp
adc
scas
cmp
inc
xor
xor
sbb
inc
mov
sub
mov
xor
mov
sub
inc
cmp
adc
sub
sub
sub
inc
mov
sub
jb
and
cmp
sub
ret
sub
cmp
adc
inc
sbb
add
xor
dec
inc
ss
dec
inc
mov
dec
cltd
mov
sub
cmp
dec
inc
aam
inc
shrb
sub
sub
cmp
mov
add
cmp
inc
mov
lods
jmp
inc
xchg
lcall
mov
push
inc
aam
inc
les
nop
pop
std
mov
sub
nop
stos
pushf
adc
call
cs
stos
out
scas
xor
aam
add
add
sub
nop
stos
mov
inc
xor
stos
adc
rolb
xor
adc
inc
lret
hlt
sbb
cmp
adc
inc
aam
xor
mov
cmp
or
and
dec
inc
shrd
inc
sub
sub
pop
xor
inc
dec
xor
sub
sahf
xor
adc
inc
aam
sub
sbb
sbb
sub
adc
scas
inc
lret
aam
xor
loopne
stos
stos
mov
inc
mov
inc
stos
xor
add
lcall
shrl
sub
inc
aam
xor
sub
sub
push
sbb
adc
nop
stos
stos
std
movsl
sub
sub
sbb
adc
inc
mov
inc
out
xor
es
xor
cmp
sbb
and
nop
mov
les
push
mov
and
dec
cltd
inc
mov
pushf
cmp
adc
xor
mov
mov
sbb
stos
sub
sub
stos
cmp
dec
inc
stos
pop
sub
dec
sub
xor
mov
inc
stos
stos
fsubrs
lret
stos
adc
adc
inc
les
mov
cmp
inc
mov
inc
aam
xor
les
cmp
inc
les
mov
and
sub
std
movsb
sub
sub
mov
inc
add
add
fcoms
cmp
add
mov
movsb
pop
sub
mov
sub
inc
fstpt
sub
mov
sub
pushf
and
dec
xor
sub
pushf
and
dec
xor
sub
sub
sub
sub
fimuls
fisubrs
sub
inc
lods
mov
pop
pushf
sbb
dec
xor
xor
inc
mov
inc
or
xor
lcall
incb
adc
cmp
repnz
cmp
cmp
mov
nop
stos
inc
jmp
cmp
out
mov
int3
cmp
mov
mov
repnz
mov
push
adc
sbb
mov
mov
push
lods
mov
push
hlt
idivb
sub
xor
stos
inc
aam
into
lret
cmp
sbb
inc
inc
sub
mov
inc
inc
lret
mov
mov
sub
inc
adc
sbb
int
sahf
adc
inc
lret
dec
adc
inc
shlb
jp
dec
cmp
inc
lcall
stos
inc
les
int3
inc
les
sub
sub
sub
sub
lret
lret
mov
inc
lret
int3
xor
sub
inc
mov
cmp
sub
shrb
adc
fdivr
adc
sbb
xor
dec
cltd
mov
nop
mov
mulb
cmp
inc
inc
dec
inc
mov
mov
inc
lcall
scas
xor
lret
inc
inc
stos
xor
mov
sub
inc
mov
inc
mov
push
int3
inc
mov
inc
stos
xor
xor
sub
inc
mov
sub
mov
dec
cltd
mov
pushf
mov
push
outsl
inc
xor
mov
inc
les
int3
inc
les
sub
sub
sub
inc
les
sub
fsubrs
lret
stos
dec
xor
inc
mov
andb
sub
fdivr
leave
and
sub
mov
movl
sub
jo
sub
xor
xor
mov
inc
les
int3
sub
inc
les
sub
fsubrs
lret
push
jp
mov
xor
xor
adc
inc
mov
inc
mov
push
popf
sub
sub
cmp
fsubrs
xlat
mov
sub
add
sub
xlat
inc
les
mov
inc
mov
cmp
sub
out
cs
stos
call
sub
inc
add
int3
ss
cltd
lods
push
rcr
nop
sub
cmp
iret
adc
mov
pushf
in
push
inc
inc
fidivrl
xor
xor
pushf
in
push
xor
push
in
nop
stos
call
sub
inc
add
add
mov
and
mov
cmp
jmp
rcrb
inc
adc
idivb
call
or
sub
sub
and
sub
insb
sub
sub
popf
xorb
sub
std
mov
and
inc
in
nop
sbb
xor
sub
dec
xor
and
nop
sbb
mov
sub
add
and
mov
sti
testb
notb
negb
inc
and
notb
negb
inc
adc
testb
notb
testb
inc
adc
testb
notb
negb
inc
and
notb
negb
inc
adc
testb
notb
testb
inc
adc
testb
mulb
xor
cs
add
sarb
xor
inc
and
nop
sbb
inc
mov
sub
testb
and
mov
and
nop
sbb
inc
testb
sarb
scas
notb
adc
nop
stos
add
nop
stos
stos
call
cmp
aam
add
testb
cmpsl
jle
sub
testb
sub
nop
cmpsl
and
mov
daa
or
sub
mulb
fmuls
mov
sub
mov
mulb
aam
inc
fsubrs
xlat
inc
pop
nop
daa
testb
sarb
sub
testb
sub
nop
shll
mov
les
call
or
sub
cmp
movl
sub
mov
int3
fdivrs
sub
cmpsl
and
loopne
sub
inc
sbb
cmp
cmp
in
inc
mov
sub
shl
inc
sub
testb
sub
nop
mov
mov
mov
xor
sub
or
inc
xor
sarb
sub
test
adc
sub
cmp
inc
mov
loopne
daa
or
sub
inc
nop
lods
nop
mov
sarb
call
inc
add
mov
sub
cmpsl
and
iret
daa
sub
testb
jle
sub
testb
sub
nop
mov
sub
mov
fmuls
mov
sub
mov
mulb
adc
inc
push
sub
sbb
nop
fdecstp
inc
inc
lret
sub
mov
testb
sub
nop
shll
mov
and
daa
or
sub
loopne
xor
stos
stos
add
nop
stos
out
mov
inc
add
inc
mov
dec
cltd
cmp
inc
sub
cmpsl
xorb
sub
nop
mov
and
aam
mulb
mov
subb
inc
mov
idivb
dec
cltd
mov
mov
nop
daa
fwait
and
mov
stos
call
mov
out
scas
xor
aam
add
dec
inc
les
cmp
adc
mov
xor
les
cmp
cmp
jmp
scas
inc
sub
inc
add
inc
inc
les
cmp
adc
mov
xor
stc
in
cmp
aam
add
add
mov
sub
mov
sub
inc
adc
popf
adcb
je
sub
push
adc
dec
xor
sub
sub
fadds
cmp
ss
mov
xchg
xorb
cmp
inc
mov
xchg
xorb
sub
inc
mov
nop
lods
xor
inc
sub
sub
and
mov
inc
aaa
xlat
fildll
sub
nop
lods
cmp
add
mov
inc
in
nop
fstl
sarb
and
iret
sbb
inc
aam
inc
in
nop
int
fldl
pop
sarb
and
je
sub
shll
scas
inc
aam
dec
mov
mov
inc
mov
nop
lods
nop
int
xor
je
sub
lahf
jle
sub
mov
inc
mov
pop
mov
cmp
cmp
sbb
sub
xorb
loopne
mov
mov
inc
mov
nop
lods
inc
xchg
ss
sub
cmp
adc
dec
das
push
loopne
mov
inc
add
add
mov
and
les
cmp
sbb
and
or
cmp
inc
les
aas
push
mov
cmp
les
sub
cmp
inc
les
aas
cmp
cmp
xor
xchg
rcrb
fdivrs
adc
or
sub
xchg
sub
mov
sub
sub
dec
xor
inc
mov
mov
sub
inc
mov
nop
mov
mov
lret
daa
sub
mov
sub
sub
sub
dec
xor
std
mov
sub
inc
adc
nop
sbb
adc
sti
and
and
wbinvd
sub
dec
xor
inc
mov
nop
mov
adc
loopne
test
stos
pushf
mov
push
jle
mov
nop
mov
je
sub
adc
jecxz
mov
ss
sub
xor
cmp
mov
dec
inc
mov
nop
mov
mov
mov
inc
or
adc
mov
roll
sarl
mov
add
mov
inc
mov
inc
sarl
ret
sub
nop
mov
mov
lret
or
les
nop
leave
xor
cmp
adc
add
inc
mov
inc
les
xor
lret
inc
mov
inc
adc
sti
xor
mov
inc
fistl
jle
sub
inc
sarl
ret
sub
dec
xchg
mov
lods
inc
les
nop
leave
xor
mov
adc
dec
xchg
mov
jl
dec
sub
cmp
inc
inc
mov
nop
mov
mov
cmp
sti
inc
mov
nop
mov
cmp
sub
nop
mov
or
sub
dec
xor
inc
mov
nop
mov
dec
dec
xor
inc
repz
mov
nop
mov
cmp
sub
nop
mov
or
sub
dec
xor
inc
jmp
mov
nop
mov
cmp
sub
nop
mov
or
sub
dec
xor
call
inc
sub
inc
add
add
or
sub
cmp
adc
adc
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
cmp
int
mov
or
mov
cmp
adc
or
cmpsl
adcb
fsubrs
xor
xor
inc
les
nop
xor
cmp
dec
das
mov
inc
in
std
dec
sub
sub
adc
inc
nop
mov
mov
sbb
sbb
xor
nop
nop
mov
lods
inc
les
nop
movl
mov
sub
sub
add
or
xor
nop
iret
sbb
xlat
inc
mov
cmpb
aam
inc
mov
inc
mov
fildl
and
mov
mov
mov
les
mov
xlat
subb
or
mov
roll
sti
inc
mov
nop
mov
roll
push
push
inc
mov
inc
mov
fildl
and
lods
xor
inc
mov
nop
mov
roll
adc
mov
roll
mov
fistl
xor
je
sub
mov
inc
mov
fildl
sti
nop
mov
mov
xor
sti
repnz
sub
and
sub
cmpb
nop
mov
mov
and
out
sub
nop
mov
xlat
fildll
sub
sub
adc
mov
dec
xor
call
sub
inc
add
add
mov
sub
mov
sub
mov
sub
inc
mov
cmpsl
adcb
je
sub
lods
sbb
insb
mov
xor
sub
inc
sbb
adc
inc
mov
mov
sub
mov
sub
mov
sub
inc
aam
nop
xlat
xor
sbb
insb
aam
nop
mov
mov
sti
nop
mov
mov
xor
sub
inc
mov
nop
mov
mov
das
adc
sub
sub
shrb
sub
dec
xor
inc
mov
cmp
repz
sub
cmp
and
mov
inc
les
nop
xor
cmp
pop
inc
les
mov
mov
sub
mov
lock
xor
mov
xor
inc
mov
cmp
mov
mov
inc
mov
cmp
ret
cmp
and
and
sub
flds
mov
sub
sub
add
cmp
leave
cmp
je
sub
mov
les
les
inc
in
nop
out
or
xor
dec
mov
cmp
push
mov
sub
inc
in
inc
mov
jmp
sub
sub
xor
sub
mov
xor
inc
adc
inc
mov
dec
xchg
les
mov
mov
pop
inc
mov
inc
xor
inc
mov
dec
xchg
les
mov
xor
jle
sub
cmp
xor
loopne
stos
test
mov
add
nop
mov
jmp
inc
mov
mov
xlat
fildll
sub
lods
cmp
adc
inc
mov
add
sti
aas
in
sub
iret
rcll
sti
nop
movl
sub
mov
les
aas
mov
nop
xor
dec
mov
fisttpl
sti
inc
rcll
jle
sub
inc
les
nop
mov
movl
leave
mov
daa
sub
add
and
lds
sub
adc
sub
sub
sti
ret
and
sub
sbb
or
xor
jle
sub
nop
mov
mov
movsb
in
sub
dec
xor
loopne
out
scas
dec
sub
inc
add
sub
inc
or
stos
add
inc
mov
xor
fdivr
movhps
sub
push
inc
cwtl
inc
fildl
lcall
sub
lret
sbb
sbb
sub
xor
sti
mov
adc
inc
xor
lret
adc
sub
xchg
mov
stos
call
xor
inc
mov
add
aam
add
sub
mov
dec
add
dec
cmpsl
iret
idivb
sub
stos
aas
push
cmp
iret
adc
nop
mov
sub
sub
inc
xor
lret
cmp
shrb
sub
inc
add
inc
xor
dec
xor
sub
fmuls
mov
sub
xor
sub
sub
stos
push
mov
iret
insb
aam
fwait
xorb
sub
sub
cmp
and
nop
mov
mov
inc
xlat
and
dec
cltd
les
inc
in
inc
inc
inc
negb
cltd
cmp
and
mov
in
dec
cltd
pop
sub
inc
in
dec
cltd
pop
testb
push
sub
andb
nop
sbb
mov
cmp
sub
negb
sub
adc
dec
cltd
mov
adc
xor
cmp
sbb
sub
nop
stos
call
cmp
inc
les
sub
sub
nop
mov
les
dec
push
stos
add
aam
add
add
fadds
inc
mov
adc
nop
stos
std
mov
sub
subb
cmp
cld
pop
sub
inc
mov
inc
fsubs
mov
inc
cmp
sub
cmp
cmp
shrl
sub
cmp
pop
sub
sub
pop
sub
sub
sahf
sub
sub
loop
sub
cmp
es
sub
imul
cmp
sub
sub
inc
mov
lret
and
or
sub
sub
mov
sub
xor
inc
es
bound
push
out
xor
cmp
push
xor
adc
sbb
in
nop
loope
in
pushf
in
push
push
add
inc
aam
inc
and
dec
cltd
mov
adc
mov
inc
bound
aam
inc
mov
inc
aam
xor
xor
adc
mov
sub
cmp
and
sahf
sub
inc
mov
sub
and
adc
mov
cmp
xor
adc
inc
in
mov
in
mov
out
call
sub
stos
inc
mov
jns
sub
inc
movb
inc
mov
nop
mov
lods
inc
lods
mov
dec
lret
sub
sub
add
xorb
sub
sub
idivb
xor
mov
mulb
stos
idivb
sub
sub
mov
inc
sbb
lret
sub
sub
add
sub
cmp
stos
scas
aas
sub
sub
inc
aaa
lret
sub
sub
mov
add
sub
xor
nop
stos
fdivr
cmp
call
ds
sub
add
enter
inc
xor
stos
movsb
sub
sub
mov
ds
mov
sub
lods
sti
cmp
sub
scas
adc
sbb
out
mov
inc
add
sub
push
inc
stos
xor
inc
mov
inc
or
inc
lods
lcall
mov
sub
sub
adc
lcall
scas
xor
xor
aam
inc
scas
inc
aam
xor
mov
xor
sub
test
mov
add
inc
or
sub
inc
mov
inc
adc
xor
sti
inc
or
sub
repz
lret
movl
push
dec
inc
stos
cmp
mov
std
arpl
sub
cmp
adc
inc
mov
lret
adc
sub
jne
sub
sub
mov
sub
cmpsl
and
sub
cmp
sbb
adc
inc
mov
nop
mov
sub
jnp
jle
sub
lock
xor
mov
xor
inc
mov
cmp
sub
cmpl
inc
mov
cmp
sub
xchg
cmp
sub
sbb
pop
sub
sub
or
sarl
sub
dec
mov
cmp
sub
sbb
or
sub
mov
cmp
push
ret
mov
sub
inc
aam
inc
scas
xor
xor
sub
xor
inc
cmp
nop
fldcw
sub
adc
inc
mov
dec
xchg
les
nop
mov
cmp
sub
sbb
sbb
sub
nop
mov
adc
inc
mov
dec
xchg
les
nop
mov
je
sub
mov
dec
xchg
mov
xor
loopne
stos
test
mov
add
nop
mov
jmp
inc
xor
inc
dec
xlat
fildll
sub
lods
cmp
adc
inc
mov
add
add
aam
sub
iret
mov
sub
add
jle
sub
nop
mov
lods
adc
inc
mov
aas
les
nop
mov
mov
inc
mov
ret
mov
inc
mov
inc
fistl
jle
sub
nop
mov
leave
inc
dec
inc
dec
sub
xor
mov
daa
sub
inc
aam
sti
enter
mov
sub
sub
push
sub
inc
mov
lret
or
push
inc
stos
mov
stos
adc
sub
push
inc
les
addr16
sub
jne
sub
sub
mov
sub
cmp
sbb
adc
inc
mov
nop
mov
sub
pop
insb
jle
sub
lock
xor
mov
xor
inc
mov
cmp
sub
arpl
sub
imul
inc
mov
cmp
sub
sbb
pop
sub
sub
add
sarl
sub
dec
mov
cmp
sub
sbb
add
sub
mov
cmp
push
fwait
mov
sub
inc
aam
inc
scas
xor
xor
sub
xor
inc
cmp
nop
fldcw
sub
adc
inc
mov
dec
xchg
les
nop
mov
cmp
sub
sbb
adc
sub
nop
mov
adc
inc
mov
dec
xchg
les
nop
mov
je
sub
mov
dec
xchg
mov
xor
loopne
stos
test
mov
add
nop
mov
jmp
inc
xor
inc
dec
xlat
fildll
sub
lods
cmp
adc
inc
mov
add
or
aam
sub
iret
mov
sub
or
jle
sub
nop
mov
lods
adc
inc
mov
aas
les
nop
mov
mov
inc
mov
fwait
mov
inc
mov
inc
rcll
jle
sub
nop
mov
leave
inc
dec
test
sub
xor
mov
daa
sub
sub
inc
mov
xor
mov
mov
lret
or
sub
push
inc
stos
mov
stos
adc
les
sub
adc
int3
sub
std
stos
sub
sub
mov
hlt
push
sub
mov
mov
sub
cmp
sbb
adc
cmp
sbb
mov
cmp
xor
sub
lock
xor
mov
xor
inc
mov
cmp
sub
cmp
sub
inc
cmp
sub
dec
cmp
sub
sbb
mov
lods
xlat
fildll
sub
or
roll
sub
sub
sub
sub
add
fistl
sarl
sub
dec
mov
les
inc
les
inc
aam
nop
fldcw
or
xor
dec
mov
cmp
mov
sub
inc
aam
inc
scas
xor
xor
sub
xor
inc
cmp
nop
fldcw
sub
adc
inc
mov
dec
xchg
les
nop
mov
cmp
sub
sbb
push
nop
mov
adc
inc
mov
dec
xchg
les
nop
mov
je
sub
mov
dec
xchg
mov
xor
loopne
stos
test
mov
add
nop
mov
jmp
inc
xor
inc
dec
xlat
fildll
sub
lods
cmp
adc
inc
mov
add
or
aam
sub
iret
mov
sub
or
jle
sub
nop
mov
lods
adc
inc
les
aas
mov
nop
leave
xor
dec
mov
rorl
or
adc
jle
sub
inc
les
nop
mov
adcb
sub
xor
mov
daa
sub
inc
mov
xor
sub
lret
adc
sub
mov
cmp
sti
inc
mov
mov
fs
sub
loopne
mov
call
sub
inc
add
int3
inc
mov
xor
mov
sub
cmp
and
xor
inc
pop
inc
mov
inc
stos
cmp
inc
mov
inc
stos
cmp
xor
mov
xor
sub
lret
sub
xor
sbb
cmp
and
inc
mov
lret
adc
sti
ret
sub
and
xor
mov
inc
les
cmp
mov
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
push
mov
push
push
pop
cmp
jne
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
test
jne
movl
cmpl
jb
mov
push
push
lea
mov
push
pushl
pushl
call
add
mov
jmp
cmp
jne
mov
pushl
push
push
push
push
pushl
pushl
call
cmp
subl
xorl
adcl
add
dec
jne
pop
pop
ret
push
mov
sub
mov
movl
movl
movl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
mov
addb
mov
push
movl
cmpl
jae
mov
add
mov
mov
dec
mov
mov
push
mov
push
lea
mov
pushl
pushl
addl
call
mov
mov
xor
mov
add
cmp
je
mov
jmp
push
pushl
push
pushl
orl
addl
xorl
call
lea
mov
mov
lea
mov
mov
mov
xor
mov
add
mov
xor
pop
add
pop
pop
leave
ret
push
mov
push
push
mov
movl
movl
cmp
jne
pushl
pushl
pushl
test
sbbl
orl
pushl
pushl
pushl
pushl
call
jmp
mov
cmp
jne
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
movl
cmpl
jl
mov
orb
mov
mov
xor
mov
xor
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
call
push
jmp
cmpl
jne
push
pushl
pushl
pushl
call
lea
mov
mov
mov
movzbl
sub
mov
mov
mov
mov
add
pop
movzwl
xor
mov
mov
mov
mov
xor
mov
cmp
movzbl
sbb
mov
xor
leave
ret
push
mov
sub
movl
movl
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
movl
movl
cmpl
jne
mov
movzwl
sbb
mov
mov
mov
sub
mov
mov
mov
xor
mov
mov
mov
mov
movzwl
mov
add
mov
mov
mov
mov
mov
mov
mov
sub
xor
push
test
mov
mov
adc
mov
add
movzwl
sub
mov
mov
mov
mov
mov
movzwl
xor
push
pop
sub
add
cmpl
mov
mov
pop
jne
cmp
jnp
movzwl
rcr
mov
jmp
mov
neg
mov
movzwl
sbb
mov
mov
xor
add
leave
ret
push
call
add
pop
jne
mov
jmp
subl
andl
movl
adcl
push
pushl
call
movl
ret
movl
ret
push
mov
sub
mov
movl
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
jmp
movl
movl
cmpl
ja
mov
adc
mov
mov
adc
movl
lea
mov
and
mov
mov
lea
mov
or
mov
mov
lea
mov
cmp
jle
mov
ror
mov
jmp
mov
rcl
mov
mov
mov
and
lea
mov
mov
push
mov
mov
xor
mov
push
mov
mov
mov
movzwl
add
mov
push
mov
cmp
mov
mov
sbb
mov
add
movl
mov
mov
cmpl
jne
mov
add
mov
movzbl
and
mov
add
mov
jmp
cmpl
jne
movl
mov
mov
movl
jmp
cmpl
jne
mov
movl
cmpl
je
mov
and
mov
or
mov
orb
mov
add
mov
mov
cmp
jbe
mov
mov
or
mov
mov
xor
inc
xor
mov
cmp
jne
cmp
sbbl
add
mov
cmp
je
lea
mov
add
xor
mov
mov
cmp
je
cmpl
jne
mov
cmp
je
cmpl
je
cmpl
jne
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
call
jmp
mov
addl
xor
add
cmp
jae
movl
cmpl
jle
mov
mov
add
mov
mov
xor
mov
movzwl
mov
dec
cmp
ja
mov
addl
mov
andl
xor
subl
xorl
add
imul
movzwl
mov
lea
push
movzbl
xor
mov
mov
xor
add
imul
movzwl
sub
mov
mov
addl
add
push
pushl
mov
call
cmpl
je
mov
xor
inc
xor
mov
mov
jmp
mov
mov
mov
add
adcl
xor
mov
mov
cmp
je
xor
mov
add
movl
cmpl
je
mov
mov
or
mov
mov
movzbl
or
mov
mov
mov
sbb
mov
mov
mov
mov
sub
mov
mov
imul
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
mov
mov
mov
mov
imul
sbbl
xchg
dec
dec
cmp
jne
mov
mov
mov
cmp
mov
movzwl
sbb
mov
xor
lea
mov
add
mov
mov
addl
xorl
subl
add
dec
jne
jmp
mov
mov
andb
mov
call
mov
jmp
movl
cmpl
jl
mov
mov
xor
xor
pop
pop
pop
leave
ret
push
mov
sub
call
cmp
jne
xor
leave
ret
movl
lea
movl
mov
call
movl
mov
lea
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
push
push
pushl
push
call
cmpl
jb
mov
call
movl
cmpl
jge
mov
rol
mov
mov
mov
cmp
mov
adc
mov
mov
mov
rol
mov
mov
mov
lea
mov
call
test
je
call
mov
movzwl
and
mov
mov
mov
mov
mov
mov
add
mov
xor
mov
mov
mov
add
mov
mov
jmp
push
call
push
mov
sub
test
mov
movzwl
sbb
mov
mov
xor
mov
test
movzwl
mov
sbb
mov
leave
ret
push
mov
sub
mov
mov
movl
cmpl
jg
push
push
push
movl
cmpl
je
cmpl
jne
push
pushl
pushl
call
mov
dec
mov
jmp
mov
test
mov
mov
sbb
mov
xor
movl
mov
cmp
mov
mov
adc
mov
add
movl
mov
movzbl
mov
and
mov
mov
mov
test
mov
mov
sbb
mov
xor
add
movzbl
movzbl
sub
mov
mov
mov
mov
mov
mov
or
mov
mov
mov
mov
cmp
je
lea
mov
mov
mov
or
jmp
mov
mov
or
mov
mov
mov
and
mov
mov
movl
cmpl
jg
mov
movzbl
sbb
mov
mov
mov
or
mov
mov
mov
or
mov
lea
mov
mov
mov
lea
mov
mov
mov
movzwl
mov
add
mov
lea
mov
mov
mov
lea
mov
mov
xor
mov
mov
mov
lea
mov
mov
mov
or
lea
mov
mov
pushl
mov
mov
push
add
mov
push
mov
shlb
lea
push
mov
mov
mov
mov
movl
mov
pushl
pushl
call
mov
add
push
addl
xorl
call
mov
mov
mov
mov
test
orl
sbbl
adcl
xor
xor
lea
cmp
je
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
movl
cmpl
jb
mov
xor
add
mov
mov
mov
mov
xor
mov
mov
sub
mov
add
mov
pop
pop
pop
leave
ret
push
mov
sub
movl
push
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
lea
movl
cmpl
jle
mov
mov
sub
mov
adc
mov
or
mov
inc
mov
mov
mov
cmp
mov
adc
mov
mov
movl
lea
mov
movl
movl
mov
mov
mov
and
mov
push
cmp
mov
sbb
mov
xor
push
mov
add
mov
mov
add
mov
xor
add
mov
movl
movl
mov
mov
add
mov
test
jne
mov
mov
xor
mov
mov
lea
mov
xor
add
incl
cmpl
mov
jb
mov
xor
movl
cmpl
je
cmpl
jne
push
push
push
pushl
call
mov
dec
mov
jmp
movzbl
or
mov
lea
mov
mov
mov
or
mov
mov
xor
movl
cmpl
je
mov
add
mov
movzwl
mov
mov
rcl
mov
mov
xor
lea
xor
cmp
jne
movl
mov
test
jne
mov
mov
mov
cmpl
jne
mov
mov
mov
or
mov
mov
xor
movzwl
mov
xor
mov
mov
incl
shll
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
and
mov
mov
dec
not
cmpl
jg
movzwl
adc
mov
jmp
movzwl
adc
mov
movzwl
sbb
mov
and
mov
cmp
mov
sbb
mov
lea
test
mov
sbb
mov
mov
mov
cmp
js
mov
mov
sub
jmp
mov
and
movzbl
inc
mov
mov
mov
sub
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
sub
movl
cmpl
jg
mov
mov
cmp
mov
sar
mov
mov
mov
sub
xor
mov
cmp
mov
jne
mov
mov
mov
mov
mov
sub
mov
mov
mov
push
push
push
push
push
pushl
call
mov
mov
mov
add
push
pushl
mov
sub
mov
call
mov
mov
jmp
cmp
je
mov
movzwl
sub
mov
xor
xor
add
xor
lea
div
movl
shl
mov
pushl
call
movzbl
mov
and
mov
mov
xor
xor
lea
xor
mov
cmp
jne
mov
xor
xor
add
lea
div
shl
mov
pushl
pushl
call
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
push
call
jmp
mov
xor
lea
movl
cmpl
jb
lea
mov
mov
mov
xor
mov
movzbl
add
mov
lea
mov
mov
mov
sub
xor
mov
mov
push
test
movzbl
sbb
mov
xor
pop
div
cmp
jbe
mov
mov
add
mov
mov
mov
test
sbbl
xor
xor
lea
xor
mov
cmp
jne
mov
cmp
jne
lea
mov
jmp
cmp
jne
mov
test
je
mov
mov
add
jmp
cmp
jne
mov
mov
mov
mov
mov
mov
lea
mov
call
mov
mov
jmp
test
mov
mov
adc
mov
mov
imul
mov
sub
mov
movl
andl
or
mov
mov
xor
xor
sub
sub
xor
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
cmpl
ja
movl
cmp
mov
movzbl
sbb
mov
movl
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
push
pushl
call
cmpl
jb
movl
mov
mov
mov
push
push
mov
mov
xor
movzwl
add
mov
xor
sub
mov
mov
mov
cmp
mov
movzbl
adc
movl
mov
xor
mov
add
push
mov
mov
sub
mov
mov
test
mov
mov
adc
orl
mov
movzbl
sub
imul
mov
movl
addl
cmp
jge
mov
mov
xor
mov
jmp
mov
mov
or
mov
mov
mov
or
mov
mov
mov
xor
lea
mov
mov
xor
mov
add
mov
xor
movzwl
add
cmp
ja
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
cmp
movzwl
mov
sbb
mov
movl
movl
cmpl
jge
mov
add
mov
mov
mov
xor
mov
add
mov
movzwl
cmp
jne
movzwl
movzbl
or
mov
mov
mov
xor
add
imul
mov
mov
dec
mov
mov
mov
push
call
cmp
orl
adcl
xorl
test
je
mov
xor
add
movzbl
cmp
mov
adc
push
mov
mov
xor
add
imul
mov
mov
call
test
orl
adcl
test
jne
mov
mov
xor
add
imul
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
call
mov
dec
mov
jmp
mov
movzbl
movl
cmpl
jae
mov
mov
add
mov
and
mov
mov
sub
xor
movzwl
push
cmpl
jno
mov
and
jmp
movzwl
sar
mov
mov
mov
adc
mov
mov
call
test
jne
movl
lea
mov
mov
mov
or
mov
mov
xor
lea
mov
xor
xor
xor
xor
mov
lea
cmp
jnp
mov
shl
mov
jmp
mov
not
mov
movzwl
or
mov
mov
add
movzwl
cmp
mov
jbe
jmp
movl
mov
mov
xor
xorl
xor
lea
xor
mov
xorl
lea
mov
mov
mov
add
mov
mov
xor
subl
add
imul
mov
movzbl
cmp
mov
sarb
mov
sub
xor
cmp
je
addl
mov
mov
cmp
je
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
mov
dec
mov
jmp
mov
add
mov
andl
movl
cmpl
jle
mov
xor
sub
add
mov
mov
imul
mov
jmp
mov
or
mov
xor
cmp
movl
adcl
sub
add
mov
addl
mov
mov
sub
mov
mov
mov
xor
add
cmp
je
addl
jmp
mov
mov
and
mov
mov
mov
jmp
adcl
orl
xorl
sbbl
andl
xor
lea
mov
jmp
mov
mov
add
mov
orl
mov
cmp
mov
mov
adc
imul
mov
mov
xor
add
xor
cmp
pop
pop
pop
je
mov
and
mov
xor
add
mov
cmp
mov
jne
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
xor
movl
cmpl
jl
mov
add
mov
movzbl
or
mov
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
ret
push
mov
sub
movl
movl
andl
mov
inc
mov
cmpl
jne
pushl
push
push
pushl
call
cmpl
jb
lea
mov
mov
mov
or
mov
movl
cmpl
je
mov
xor
movzwl
and
mov
add
mov
mov
or
mov
movl
mov
xor
add
mov
mov
dec
mov
mov
mov
lea
push
mov
xor
add
mov
push
pushl
add
pushl
push
push
mov
mov
pushl
pushl
call
add
leave
ret
push
mov
push
push
cmp
movl
movl
mov
jne
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
mov
dec
mov
jmp
mov
xor
add
leave
ret
push
mov
push
push
cmp
movl
movl
mov
jne
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
xor
add
leave
ret
push
mov
sub
movl
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
push
call
mov
dec
mov
jmp
mov
movl
cmpl
jl
movzbl
xor
mov
cmp
mov
sbb
mov
mov
mov
push
push
mov
mov
mov
or
xor
mov
add
cmp
je
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmpl
je
pushl
pushl
mov
mov
pushl
call
mov
mov
mov
xor
add
mov
mov
or
mov
xor
add
mov
mov
jmp
mov
orl
xor
pop
add
pop
leave
ret
mov
xor
mov
mov
xor
mov
mov
xor
mov
mov
ret
push
mov
sub
push
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
call
mov
dec
mov
jmp
cmpl
je
mov
sbb
mov
jmp
mov
or
mov
mov
add
mov
mov
movl
cmpl
jle
movzbl
xor
mov
movl
movl
mov
push
push
mov
xor
mov
add
mov
movl
call
test
je
test
adcl
orl
addl
call
mov
mov
mov
or
mov
xor
add
mov
sub
mov
mov
movl
mov
movl
mov
cmp
mov
sbbb
mov
mov
xor
add
mov
movzbl
add
mov
mov
movl
movl
mov
movzbl
add
mov
movl
movl
mov
mov
sub
mov
lea
mov
lea
mov
lea
mov
movzwl
xor
mov
mov
lea
mov
mov
mov
add
mov
rclb
xor
xor
cmp
jbe
movzbl
and
jmp
mov
sar
mov
movzbl
xor
mov
add
sub
mov
cmp
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
pushl
call
jmp
mov
movl
cmpl
ja
mov
mov
dec
mov
xor
xor
add
mov
add
imul
mov
shrb
mov
mov
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
xor
mov
movl
mov
mov
and
mov
dec
mov
add
lea
mov
mov
xor
add
incl
cmpl
jne
mov
movzbl
cmp
adcl
andl
addl
xor
sub
sub
mov
mov
mov
add
mov
xor
add
cmp
jne
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
call
jmp
mov
movzbl
xor
lea
mov
movl
cmpl
jbe
mov
adc
mov
mov
or
mov
or
movzbl
xor
add
mov
jmp
mov
add
mov
xor
inc
mov
and
mov
lea
xor
imul
inc
mov
cmp
jne
mov
jmp
mov
mov
and
mov
mov
mov
xor
add
ror
xor
movzbl
dec
mov
mov
mov
xor
lea
xor
mov
cmp
jne
mov
mov
xor
add
imul
xor
mov
mov
xor
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
movl
cmpl
ja
xor
xor
mov
sub
add
cmp
jne
mov
xor
cmpl
jb
mov
add
mov
jmp
mov
shl
mov
lea
mov
mov
mov
sub
add
pop
pop
pop
leave
ret
push
mov
push
push
lea
call
mov
pop
leave
ret
push
mov
sub
test
mov
mov
sbb
mov
mov
mov
xor
mov
cmp
movzbl
mov
sbb
leave
ret
push
mov
push
mov
push
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movl
movl
cmpl
jae
mov
mov
push
lea
and
mov
mov
imul
imul
cmp
sbbl
orl
mov
lea
and
mov
or
xor
cmp
jne
mov
mov
jmp
cmp
jne
mov
mov
jmp
cmp
jne
mov
cmp
jns
mov
sub
mov
jmp
mov
rcl
mov
mov
mov
xor
mov
mov
xor
xor
lea
xor
mov
mov
add
mov
mov
imul
mov
sub
mov
mov
and
mov
xor
add
mov
imul
lea
and
mov
or
cmp
jne
pop
pop
leave
ret
push
mov
sub
mov
mov
xor
mov
mov
sub
mov
mov
mov
xor
leave
ret
push
mov
push
push
movl
movl
movl
movl
cmpl
jg
movzwl
sub
mov
movzbl
add
mov
andb
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
mov
mov
mov
mov
mov
pushl
cmp
mov
sbb
mov
mov
pushl
lea
push
call
call
andl
test
je
mov
mov
sub
mov
mov
xor
mov
addl
jmp
mov
movzbl
xor
mov
mov
cmp
movzwl
adc
mov
mov
movl
cmpl
je
mov
sub
mov
lea
mov
mov
add
mov
mov
mov
leave
ret
mov
repnz
pop
leave
pop
sub
shrl
mov
cli
cmp
sbb
pop
leave
pop
decl
cwtl
cmp
sarl
popf
adc
aad
inc
subb
and
dec
dec
and
jbe
mov
notb
call
push
sub
mov
mov
adc
dec
hlt
test
ret
addl
jne
inc
lahf
mov
test
lea
stos
into
ud2
ljmp
dec
pop
dec
lock
xlat
mov
sahf
iret
sub
cmc
jo
loop
fdivl
pop
mov
mov
or
or
add
psubw
xor
push
xchg
mov
repz
mov
shll
cltd
sbb
sub
jge
clc
push
imul
cmc
pop
gs
enter
jmp
shlb
cmp
cld
push
fbld
jg
int
call
pop
int3
rcrl
pop
pop
dec
mov
jbe
nop
add
js
inc
jg
inc
inc
shlb
dec
add
lock
push
jecxz
in
or
hlt
xor
arpl
in
push
xor
arpl
incb
xor
push
mov
dec
xchg
iret
cmpsl
loopne
push
into
fldenv
cmp
insl
les
jae
ss
inc
cld
scas
mov
hlt
data16
idivl
pop
outsb
jg
add
jno
jo
call
mov
push
pusha
and
iret
mov
in
pop
xorl
xor
call
adc
xchg
sahf
out
cmp
jg
out
jp
sahf
sub
cli
dec
sbb
stc
mov
pop
rorl
add
fs
cmp
push
push
and
roll
iret
mov
pusha
mov
jp
xchg
test
mov
or
in
and
in
gs
push
out
mov
xor
adc
and
jb
or
sbb
or
test
inc
sub
repnz
pop
out
inc
js
cwtl
mov
popa
orl
popfw
dec
into
das
mov
dec
inc
outsb
daa
leave
jnp
add
dec
sub
stos
and
sti
jle
mov
lods
dec
popf
in
xchg
cmpb
jae
jbe
pop
xchg
inc
add
adc
sub
mov
ljmp
push
sub
aad
lds
jae
inc
dec
sbb
cmp
outsb
decb
or
push
icebp
add
xchg
cmpsl
adc
fwait
cmp
imul
and
pop
inc
and
mov
inc
adc
popf
jae
cmp
sbb
in
mov
or
and
roll
mov
sub
test
enter
lahf
std
xor
insl
movsl
popf
mov
or
mov
mov
sub
insb
pop
negl
lock
inc
shll
insl
mov
pop
inc
xor
stos
hlt
and
fnsave
test
popf
dec
cmp
push
xor
sub
out
testb
jge
ljmp
mov
add
jg
inc
mov
das
loope
mov
push
lods
mov
loope
push
test
push
scas
push
push
jno
clc
xlat
jl
dec
mov
jl
xchg
movsl
inc
cld
or
negb
mov
mov
int3
fisubs
jg
sar
push
and
gs
adc
pop
mov
mov
push
popf
lret
mov
xor
cmc
iret
into
mov
clc
rcr
and
inc
pop
sub
sub
sahf
inc
outsl
daa
rol
imul
fists
out
out
xchg
or
mov
or
mov
mov
rorl
jae
loop
pop
imul
jns
or
scas
je
scas
or
add
inc
mov
mov
aad
aaa
mov
add
stc
mov
ja
bound
stc
push
adc
fisubl
xor
xchg
lret
push
lahf
xchg
sbb
cmpsl
xchg
into
stos
push
shrl
lods
outsl
psubw
daa
cld
test
cmp
push
push
xchg
xor
leave
negl
jge
clc
popf
enter
pop
das
and
mov
jb
addr16
xor
mov
cmp
mov
xchg
int3
push
imul
adcb
cmc
inc
adc
jle
lods
vmovlps
ss
popa
ds
mov
push
xchg
xchg
sub
pop
addr16
mov
jg
pusha
add
adc
jle
jns
cmp
arpl
daa
xchg
out
cmp
ljmp
lods
enter
movsb
xor
icebp
mov
cmp
int
stos
ljmp
inc
adc
or
dec
push
push
aaa
xor
inc
cwtl
repz
and
pusha
flds
int3
push
add
dec
gs
ja
inc
adc
mov
ret
sbb
push
dec
mov
sbb
ret
adc
pop
popa
sbb
jp
lcall
jp
push
sar
xor
dec
sbb
xor
jb
subb
popa
cmp
adc
addr16
cmove
lock
cmp
orl
mov
bound
out
dec
xor
or
std
or
mov
push
scas
jno
orl
jmp
fimuls
and
mov
test
movsb
push
gs
adc
out
lret
fcomps
rolb
lea
mov
push
clc
iret
imul
fisubrl
add
lcall
push
inc
outsl
in
jns
call
mov
outsl
mov
subb
mov
mov
das
leave
pushf
jns
inc
out
fsubrp
sbb
mov
sbb
aad
mov
push
or
es
dec
ficoms
mov
stos
push
aad
xchg
push
push
test
mov
cmp
scas
adc
jle
dec
xor
mov
inc
inc
ds
jns
or
mov
icebp
fidivrs
out
dec
jns
lock
icebp
and
cld
inc
call
cmp
cmpsb
cmp
neg
daa
in
xchg
pop
test
dec
lcall
ret
mov
add
cld
xchg
mov
test
mov
loop
out
pop
add
and
cltd
aas
mov
cmp
inc
push
or
mov
jb
pushf
dec
add
lea
sbb
or
jp
aas
sti
bound
call
cltd
push
inc
mov
and
cmc
cmp
dec
sbbl
mov
xor
outsb
pusha
fs
rol
xchg
call
stos
fisubs
add
out
add
ljmp
mov
sbb
pop
cmp
ffreep
sbb
fs
pop
jp
jecxz
dec
fsubs
push
pop
mov
scas
inc
lret
xchg
mov
push
sub
stos
jae
push
dec
in
and
scas
sbb
xor
mov
into
push
dec
pop
pop
gs
push
and
pop
mov
add
ficoml
sarl
inc
mov
dec
mov
mov
add
movsl
hlt
test
cmp
add
pop
push
imul
idiv
adc
xor
add
rcrl
jmp
push
push
jp
xchg
mov
iret
and
out
xor
enter
cmpsb
or
xor
sub
jne
out
sbb
ja
mov
ret
xchg
sti
idivb
ds
test
xor
add
inc
mov
fwait
leave
add
in
and
mov
inc
test
cmovs
inc
nop
in
xlat
pop
outsb
add
pop
xchg
inc
jnp
and
call
test
jnp
or
into
dec
jp
iret
push
cmc
cmp
pusha
mov
out
aas
popa
jbe
dec
lret
xchg
dec
iret
imul
push
jmp
add
rcrl
xchg
adc
xlat
jp
or
and
jae
sub
daa
cmp
fnsave
or
pop
mov
popa
fidivs
imul
inc
inc
js
int3
pop
arpl
lea
aam
add
outsb
pop
jbe
jbe
lods
loopne
out
dec
lahf
dec
iret
lahf
rcll
inc
sub
arpl
push
jbe
push
arpl
push
pop
push
imul
pop
es
mov
mov
bsr
dec
jb
faddp
ljmp
mov
adc
or
nop
popf
les
add
ror
mov
scas
divb
mov
push
leave
ret
xor
imul
or
enter
mov
cmpb
js
cld
popa
dec
mov
shlb
jp
push
cld
daa
callw
push
into
jno
cmp
xchg
orb
mov
lods
scas
xor
call
mov
fs
xor
rcrl
sub
popf
mov
add
mov
ljmp
fstpt
nop
arpl
sti
sbb
mov
popa
and
mov
loopne
cltd
jmp
push
dec
mov
xchg
push
add
adc
daa
in
loopne
and
jb
xchg
add
lods
jmp
push
ds
and
push
lret
jae
test
je
leave
andnps
sub
sub
sbb
icebp
mov
sub
inc
rcrl
cmp
jmp
cmpsl
test
aas
jbe
and
mov
jo
jg
loopne
xchg
daa
pop
sub
fldenv
xchg
lahf
test
mov
test
or
je
sbbb
jmp
jg
imul
xchg
jb
xchg
stc
dec
xchg
add
cwtl
jecxz
mov
mov
popf
addb
mov
jg
and
xchg
mov
iret
lret
adc
mov
int
lods
rol
and
cli
inc
jle
pop
lcall
leave
xor
call
xchg
popf
popa
mov
addr16
insl
mov
pop
test
add
and
inc
ret
sbbl
xchg
stos
popf
in
iret
std
dec
gs
dec
mov
add
add
loope
test
cmp
jle
adc
daa
mov
add
hlt
jns
rcl
xor
xor
or
add
jb
adc
xlat
fnstsw
aad
jg
push
andb
pop
das
and
jns
je
sti
scas
shl
xlat
mov
and
mov
dec
imul
jl
shl
cmp
jl
sub
insb
jmp
outsb
stc
mov
fwait
jb
jecxz
mov
fdivp
cmp
jne
push
fcomps
out
fnstenv
xchg
dec
inc
or
jns
jecxz
pusha
cmp
xor
test
push
das
in
mov
xor
cmp
xor
jno
xor
cmp
jmp
mov
cmp
andl
popf
xchg
pop
iret
mov
inc
adc
cwtl
jns
fcomps
lods
mov
adc
nop
fs
or
pop
sti
js
jmp
in
cs
or
xchg
adcw
jmp
adc
popf
imul
stos
sbbl
xlat
jnp
or
xchg
mov
sbb
inc
xor
gs
pop
adc
gs
rolb
push
js
roll
popf
mov
das
or
inc
and
fwait
cmpsb
pop
aaa
aam
ljmp
push
push
and
xchg
out
pop
jne
xchg
popl
xchg
shll
fidivrs
mov
adc
fisubs
xchg
test
push
lret
loopne
adc
shrl
test
pop
out
pusha
jge
xor
fstl
movsl
cmc
orb
movl
loop
inc
notb
sbb
add
lods
mov
cmp
sbb
aas
or
mov
xchg
lret
lret
mov
jae
mov
push
xor
mov
ljmp
outsb
sub
and
in
cmpsb
fs
inc
into
lods
lret
rolb
pop
sub
inc
cmp
pop
imul
sbbl
aas
insb
lock
xlat
mov
test
sbb
mov
mov
mov
popf
jg
push
lock
xchg
je
jnp
data16
xchg
xchg
mov
lea
out
xchg
or
rcl
test
dec
roll
fcompl
dec
repnz
inc
test
dec
xor
imul
mov
xchg
fsubp
rcl
push
fs
stc
inc
inc
mov
inc
adc
inc
cltd
in
jnp
add
mov
jecxz
shrl
loope
mov
stos
subl
jnp
pop
or
incb
sub
cmp
fsubs
movsb
pop
dec
sbb
pop
mov
and
xchg
inc
and
aas
jg
mov
inc
lret
dec
ror
mov
loope
or
popf
push
cltd
lea
std
mov
inc
int3
jns
out
dec
or
sub
add
jns
sbb
adc
pop
mov
mov
orb
or
xchg
fmull
mull
pop
ja
push
cmpsb
les
jo
frndint
mov
dec
das
inc
fiaddl
mov
cli
sub
cmp
mov
jg
es
fidivrs
or
std
adc
adc
data16
xchg
aaa
arpl
ja
jno
push
ja
mov
addb
push
shl
pop
or
mov
jge
adc
sub
adc
ss
ret
inc
push
inc
mov
shrb
cli
test
es
mov
pop
xchg
lea
mov
mov
cmp
fstpt
movsb
and
dec
mov
or
mov
jb
call
push
in
das
mov
jge
imul
lock
push
or
cmpsl
cmc
clc
aad
fs
sub
std
mov
push
mov
dec
sti
xchg
arpl
out
mov
xor
cmp
add
cwtl
cmp
outsb
and
push
xchg
daa
arpl
lcall
xchg
inc
push
dec
popa
sub
int
push
addr16
cmp
rcll
sbb
dec
fmuls
ret
jb
int
adc
rcr
nop
add
cmc
loopne
inc
xor
call
das
in
hlt
mov
ret
mov
push
mov
adc
popa
dec
add
out
lods
in
xchg
cld
lahf
xor
or
jle
ljmp
in
imul
mov
pop
add
jecxz
sbb
xchg
and
pop
mov
pusha
lods
imul
xchg
jecxz
mov
cmp
pop
pop
lret
mov
mov
jmp
adc
ds
lret
mov
jbe
and
sub
pop
fcmovnbe
scas
push
out
pop
fcmovne
loope
cmp
ljmp
add
jnp
orl
push
js
push
push
mov
add
pop
xor
in
mov
and
push
fdiv
cmp
fwait
in
inc
dec
ret
seta
inc
testb
and
dec
fstps
cmp
fiadds
int
jmp
cs
lahf
sub
mov
or
push
or
inc
push
es
adc
mov
or
push
outsb
sti
mov
or
js
mov
scas
or
shrl
mov
loopne
daa
jno
add
aam
cld
lods
filds
fdivrl
or
scas
rol
and
cltd
rolb
mov
dec
pusha
inc
sti
xchg
into
lods
xchg
inc
push
pusha
pop
xor
xchg
or
stos
cli
insl
imul
cmp
pop
gs
mov
push
sbb
sub
inc
xor
adc
in
sbb
xchg
inc
cmp
ja
push
pusha
or
mov
nop
cli
outsb
cmp
xchg
cmp
add
jmp
and
xchg
daa
xacquire
mov
pushf
cmp
mov
dec
add
ret
mov
push
out
xor
enter
mov
popa
addr16
fstpt
ret
xchg
lea
push
dec
jbe
pop
mov
outsl
les
or
push
repz
insb
arpl
ret
push
ds
xchg
xor
jbe
inc
outsl
sub
mov
outsb
leave
insb
imul
shr
xchg
push
sbb
xchg
cmpsb
leave
pushf
or
orb
iret
movsb
lock
pop
add
mov
sbb
dec
cmp
push
xor
orl
fisubs
sub
out
daa
mov
lods
inc
cmp
in
lods
mov
mov
mov
push
inc
dec
mov
mov
fcom
or
xlat
sbb
cltd
cs
xor
push
xor
dec
sub
popf
and
mov
and
ds
jle
enter
dec
sbb
jmp
and
in
dec
shl
aas
or
lea
cli
fs
inc
sub
cli
sahf
repz
pop
push
stc
stos
fistps
test
mov
xor
stos
sub
dec
adc
lds
imul
jp
cwtl
movsl
test
mov
push
inc
sub
add
testb
cmc
call
mov
jb
push
addl
mov
ret
cmp
push
bound
xchg
sub
cli
dec
mov
aaa
mov
add
fcomp
sub
loopne
mov
mov
push
mov
clc
arpl
test
dec
xchg
cli
ret
popa
jno
mov
je
pop
shld
mov
aaa
mov
repz
pop
loopne
pop
push
lock
stos
mov
inc
xchg
pop
or
mov
outsl
mov
adc
stc
cmp
xor
mov
or
sub
stos
js
repz
cmp
sub
sub
cld
repz
scas
rclb
data16
pop
imul
mov
jo
int
pop
pop
adc
jno
sti
jo
and
imul
jne
sbb
or
mov
or
dec
lock
outsl
icebp
mov
xor
add
cld
jp
mov
pop
loopne
sub
cwtl
mov
cmc
mulb
dec
mov
mov
jo
lods
in
test
pop
and
sbb
inc
xchg
sub
setle
stos
fistpll
push
push
test
inc
and
int3
mov
sarl
cltd
in
xchg
out
scas
js
sbbl
pop
or
fsubs
mov
pop
cld
test
sbb
xchg
popf
jbe
xchg
mov
dec
pop
and
mov
pop
cmpl
inc
ret
in
push
out
add
scas
mov
mov
gs
dec
test
mov
inc
xchg
inc
cwtl
jno
mov
add
mov
popf
les
aaa
mov
dec
mov
add
inc
test
in
scas
mov
and
xor
andb
xchg
jno
stc
test
lods
and
test
or
add
pop
out
push
fwait
lds
ja
ss
inc
scas
mov
cmp
js
adc
sub
pop
ljmp
xor
jmp
jo
movsb
gs
cmc
push
iret
mov
and
mov
sahf
lret
cmp
bound
into
xchg
or
push
cmc
outsb
test
insb
fisubrs
jl
repnz
xor
xchg
popf
adcb
mov
movb
inc
inc
or
call
fsubrl
xlat
das
fs
xchg
lahf
cmp
stos
and
sub
rcr
int
sub
aad
pop
std
and
pop
int3
popa
fiaddl
mov
xor
mov
insb
pop
sbb
fmul
inc
and
es
pop
loopne
fidivl
push
out
sbb
stc
imul
test
and
mov
mov
push
push
xlat
cmp
ret
fisttps
push
repnz
xchg
test
ss
lcall
mov
icebp
repz
inc
jno
andnps
into
lret
push
cmp
out
lcall
mov
fdivs
mov
rclb
aad
xor
cmp
outsl
pop
orl
cmp
sub
dec
jecxz
xlat
nop
aas
out
movsl
jne
mov
insb
ficoms
sub
in
dec
dec
sbb
in
lcall
hlt
mov
xor
jo
push
ret
xorl
pop
mov
xor
cltd
fcmovb
adc
insl
mov
dec
cmpsl
sahf
call
es
loope
clc
cmp
int
add
fldt
dec
pop
mov
cld
inc
add
lcall
jnp
jno
add
sarl
scas
sahf
cltd
inc
in
sub
adc
das
add
addr16
loop
enter
mov
icebp
fwait
scas
call
mov
cmc
and
cmp
scas
sub
fsubs
fsubl
or
cltd
mov
je
jp
popa
sbb
dec
adc
jae
mov
movsl
movsl
popf
in
js
fsubl
push
or
out
jnp
sbb
imul
outsl
and
lds
je
mov
pop
icebp
movsl
xor
jg
push
mov
stos
mov
inc
aam
gs
fists
sahf
lahf
addr16
repz
stos
and
rclb
jg
mov
and
lret
popf
dec
movsl
sti
push
movsl
popa
shrl
xchg
in
sbb
scas
es
dec
shrb
mov
faddp
leave
jno
test
out
cmp
es
or
push
push
push
ret
fxtract
mov
jge
stos
test
daa
inc
cmpsl
aas
push
push
push
xchg
adc
pop
sub
or
inc
addr16
ds
clc
push
or
lods
mov
stos
push
pop
jg
icebp
and
sub
nop
xor
inc
mov
movsl
shll
push
mov
jmp
mov
cmp
dec
sub
pusha
push
imul
mov
pop
cmpsl
int3
inc
sub
lret
xchg
dec
pop
lock
ja
xchg
test
xor
and
mov
flds
jb
jnp
lock
cli
fnstcw
gs
hlt
movsl
ljmp
and
add
mov
xchg
je
enter
mov
inc
cmp
sbb
lea
cmp
mov
subb
xor
adc
pop
orb
iret
lds
orl
ja
push
jl
xchg
sub
lods
clc
mov
xchg
sbb
sbb
subb
sbb
push
mov
test
fisttps
nop
shlb
jp
sti
push
dec
scas
fistps
sub
fdivrl
jmp
dec
repnz
lock
xchg
lahf
adc
scas
mov
mov
adc
push
cwtl
lcall
xchg
or
rcll
or
xor
mov
imul
int
push
ret
adcl
ja
and
outsl
pop
mov
mov
mov
and
jmp
in
mov
out
adc
mov
xchg
jno
jge
jl
jmp
outsb
mov
sbb
sbb
clc
fstp
pop
mov
int
dec
jb
xor
sub
jb
rol
jg
mov
mov
je
sbb
int
add
cld
insl
aam
mov
push
movsl
mov
lods
movsb
adc
and
in
or
push
ficomps
inc
pop
push
or
sub
out
or
ja
fldcw
inc
xchg
inc
push
in
cmp
inc
or
pop
mov
je
inc
dec
clc
sub
ds
loopne
lds
mov
mov
sub
aad
mov
fcmovbe
lahf
inc
xchg
daa
ss
jp
bound
fwait
mov
fwait
out
adc
inc
mov
add
xchg
aaa
xor
outsb
ret
xor
bound
scas
fnstsw
jmp
push
lcall
mov
insl
jmp
loop
adc
jnp
mov
sbb
inc
int
js
push
pop
push
in
sbb
shll
mov
sub
dec
xchg
mov
lods
ret
jno
and
add
dec
push
rcll
test
jg
cmp
cwtl
shlb
mov
fdivl
jmp
sub
pop
sarl
push
mov
aaa
jl
cmp
push
adc
stos
popa
jmp
mov
push
xchg
dec
mov
push
nop
jmp
inc
imul
outsl
inc
ds
xor
sbb
hlt
clc
sbb
movsb
inc
mov
push
fldl
fwait
dec
int3
push
insl
es
aad
lock
mov
movsb
pop
loop
cs
fimull
pop
cmp
jl
push
pushf
add
mov
stc
add
cmp
sbb
cmc
pop
push
test
nop
clc
std
or
adc
jge
pop
xor
pminub
xchg
shr
xchg
inc
add
push
cmp
add
stos
cli
dec
sub
adc
add
popa
aad
sbb
dec
insl
pop
pop
xorb
and
mov
imul
jns
fcomi
arpl
xchg
mov
dec
movsb
shrl
ljmp
jle
or
cwtl
cltd
inc
popf
cmp
ficompl
adc
sbb
std
xor
andl
enter
xchg
pop
sbb
xor
pop
mov
pop
or
ret
popaw
ret
mov
insb
aam
outsl
iret
mov
lret
aaa
fisttpll
mov
xchg
cmp
or
inc
insl
hlt
loop
fsts
pop
xor
xor
push
sti
jmp
dec
mov
dec
jo
jns
pop
push
cli
pop
shll
push
in
add
ficomps
or
es
sub
hlt
in
jp
data16
mov
mov
cltd
lret
shl
push
lret
popf
jno
into
sub
cli
mov
sahf
cli
test
or
les
scas
scas
aad
adc
dec
test
ror
pop
shlb
push
vandnps
ja
es
out
out
mov
filds
xor
mov
cmp
dec
xor
idiv
xlat
sbb
clc
imul
add
pop
inc
pop
cmp
loop
and
lret
jp
mov
dec
dec
fistpll
rsqrtps
sub
or
mov
loop
jns
push
mov
jae
push
loop
push
xchg
repnz
aad
xchg
cli
sub
call
inc
push
hlt
adc
cmpb
and
and
aas
cmp
scas
out
mov
shl
icebp
jnp
gs
frstor
out
xor
sub
or
sti
push
xchg
xlat
lret
test
loopne
pop
jbe
mov
pop
mov
mov
cmp
lock
imul
dec
insb
pop
mov
or
jp
push
js
pop
push
mov
inc
popf
repnz
mov
xlat
mov
adc
mov
and
mov
add
push
lods
mov
rorl
es
in
add
test
ljmp
nop
std
imul
jne
push
or
call
inc
adc
push
dec
push
outsb
mov
fisttps
xor
sub
cmp
sub
test
jne
pushl
jb
adc
js
push
or
mov
xchg
xchg
jae
cmp
cmp
sbb
mov
push
into
or
sahf
cmp
add
in
hlt
cmp
pop
testl
adc
cmp
mov
mov
fnstenv
mov
jge
cli
dec
or
cmp
pop
cmp
sub
adc
leave
dec
bsf
dec
popf
movsb
inc
push
mov
push
rcrl
and
push
fldt
add
ret
gs
jle
and
jo
in
adcl
mov
add
inc
xchg
ffree
cmc
push
jle
cli
js
cmp
push
cmp
push
lock
dec
push
les
lret
lods
fnsave
mov
xor
xchg
inc
shrb
lcall
dec
add
bound
jecxz
sahf
or
and
cmpsb
xor
mov
inc
jae
push
xorb
jbe
cmp
pop
in
sbbl
ret
pop
fdivs
xorb
inc
xor
int
subb
clc
ret
pop
daa
mov
lcall
jae
pop
push
sbb
xchg
lcall
les
add
add
mov
lcall
cmp
adc
lods
gs
ret
push
add
jno
adc
pop
call
stc
out
jne
pop
jnp
xor
lock
pop
mov
lds
mov
push
dec
adc
arpl
in
dec
cmp
mov
inc
add
and
popf
jecxz
insb
sarb
jge
nop
mov
test
dec
rol
orb
cmp
lret
xchg
jmp
lcall
sahf
jmp
inc
dec
or
movsl
pop
imul
mov
int
clc
sahf
mov
nop
push
adcb
test
or
push
ja
sbb
add
jo
cmpsb
outsb
adc
inc
xor
inc
fsubrl
aaa
cltd
inc
jne
outsb
test
dec
jno
les
dec
lock
outsb
aam
mov
inc
out
cmp
mov
mov
cmpsb
jecxz
dec
dec
movsb
mov
int
cmpb
jmp
inc
xor
xor
jo
and
mov
pop
push
add
adc
push
cmc
scas
mov
lahf
lret
stc
fadd
mov
cmp
test
pop
sub
sbb
mov
cmp
dec
ficoms
and
mov
xor
xchg
jbe
and
jmp
std
mov
jno
std
test
pushf
jno
xor
pop
sarb
inc
test
cld
jle
sti
or
push
xadd
adc
push
jns
or
add
loopne
mov
xchg
fwait
test
sbb
sub
sbb
jo
or
leave
add
push
lods
jecxz
lss
jge
jge
imul
std
pop
cwtl
aam
insb
movd
add
inc
mov
sbb
test
lock
out
add
fcmovne
fmuls
or
push
ja
adc
cltd
or
dec
fwait
pop
ret
or
add
push
lret
inc
insl
xor
or
ficomps
in
movl
outsl
pop
aaa
and
loopne
ljmp
sbb
movsb
mov
clc
fwait
pop
xchg
mov
push
int
shrb
out
mov
xchg
jno
pop
out
cmp
test
mov
dec
lcall
movswl
jb
aad
jmp
and
xor
mov
adc
aam
arpl
add
in
cli
ljmp
fisubrl
je
movsl
mov
icebp
enter
pop
in
add
sahf
and
cmp
mov
add
aaa
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aaa
add
add
jmp
add
inc
mov
loop
add
add
fwait
add
add
xchg
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jae
add
xor
add
add
add
cmpsb
add
xchg
add
add
add
xlat
add
add
add
add
add
add
add
add
or
add
mov
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
and
jmp
pusha
jae
faddl
sbb
mov
jl
or
jnp
inc
xchg
ja
push
mov
fbld
mov
add
cmpsb
mov
lcall
sbb
in
enter
sti
ljmp
movsb
into
icebp
rcrb
jne
fdivrl
stos
test
je
pop
mov
frstor
stos
nop
lea
cltd
into
sbb
mov
dec
int
sbb
out
movsl
xchg
push
addr16
sub
push
je
push
enter
adc
mov
mov
jne
add
fcomip
lahf
xor
inc
mov
adc
add
and
push
sbb
pop
push
jnp
orl
mov
stos
jnp
jo
popa
dec
push
or
jbe
sbb
mov
jecxz
dec
mov
dec
jmp
lods
test
pop
mov
or
call
push
push
es
je
or
xchg
mov
mov
adc
add
test
scas
sahf
sahf
mov
imul
fsubr
or
ror
mov
in
jl
idivb
gs
loop
shll
mov
add
call
pop
jnp
out
rol
or
mov
fsubrs
in
cld
mov
fwait
pushf
cmpsb
sub
add
lods
lds
insl
xor
faddl
gs
dec
push
mov
scas
inc
fwait
cltd
jge
loope
cli
aas
mov
jnp
sbb
ja
insb
pop
add
je
jo
mov
xor
pop
addl
scas
shr
xor
lods
mov
xchg
in
rcl
into
pop
push
int
mov
mov
sahf
out
xlat
xchg
mov
js
jae
add
repnz
adc
push
shrl
xor
jge
outsb
push
sbb
or
pop
mov
rcrb
dec
imul
or
iret
int3
js
pushf
ret
imul
inc
jo
mov
push
push
repz
pop
cltd
adcl
mov
mov
cmp
not
mov
lret
fcomp
test
cmp
xchg
dec
or
ljmp
test
push
dec
xchg
push
pop
lds
sbb
fwait
add
pushf
cmpb
mov
push
sbb
xchg
adc
xchg
loopne
popf
das
call
cmp
mov
cmpsl
jne
or
mov
in
add
mov
lret
int
adcb
shrb
or
xlat
jns
loop
insb
dec
xchg
cmp
testl
cmp
pop
sbb
pop
mov
mov
mov
loope
push
jecxz
bound
add
jns
sbb
pop
int3
lret
sub
lods
push
rclb
popa
sub
into
pop
popa
push
or
lock
xor
lock
sub
addr16
and
insb
loopne
mov
cld
xchg
sbb
movsb
imul
pop
push
xchg
or
out
ljmp
jno
xabort
dec
push
out
cmp
int
std
add
and
int3
sbb
or
mov
out
mov
outsl
dec
cs
xchg
or
xorb
or
mov
out
sahf
xchg
popa
or
subb
lea
es
dec
repz
cli
dec
cld
mov
fnstsw
daa
clc
into
and
inc
xchg
mov
mov
or
mov
adc
fiadds
sub
popa
fadds
movsb
push
shlb
and
dec
je
mov
inc
and
push
cwtl
lds
psubsb
test
shr
inc
cmp
adc
cmp
and
add
bound
shl
pop
fimull
imul
popf
jno
mov
loope
xor
push
mov
mov
out
mov
addb
in
fisubl
int3
outsl
xchg
push
dec
scas
push
sub
arpl
out
mov
into
lods
fidivs
div
mov
sub
mov
mov
and
jb
dec
dec
scas
mov
inc
and
cmp
aaa
stos
popf
pop
push
or
dec
inc
mov
cmp
testl
adc
jl
and
sbb
testb
popa
stc
add
jl
xchg
pushf
das
push
push
cli
rcr
pop
cmc
loopne
in
push
dec
fbstp
inc
pop
imul
or
push
mov
js
fwait
repnz
push
xchg
subl
ret
hlt
mov
adc
adc
push
mov
in
cmp
jmp
mov
sub
sarb
sbb
int3
inc
xchg
inc
or
sbb
and
jecxz
pop
sbb
xchg
push
cs
mov
jmp
inc
and
mov
insb
cmp
mov
test
sbb
jge
mov
les
pusha
lock
lea
fcmovne
gs
xor
fcomip
fdivrs
stos
xchg
push
addr16
mov
sti
mov
fcompl
lcall
dec
movsl
mov
stc
fcomp
lods
mov
or
aaa
mov
xchg
mov
std
iret
fdivrl
sbb
lods
adc
xor
incb
mov
fwait
cmc
fs
int
sbb
loop
and
xchg
inc
xor
cmp
or
dec
insl
lods
add
ss
ljmp
push
fildll
mov
jno
mov
push
int3
cmp
test
inc
mov
pop
pop
insb
mov
rolb
cltd
lret
mov
lea
inc
lret
cmpb
pop
in
adc
jo
jp
lods
xchg
sbb
xchg
cmp
shl
cld
pusha
jecxz
push
fcompl
outsl
jnp
aas
jp
popa
sahf
xchg
in
adc
shlb
cmp
ds
scas
imul
ret
jbe
cld
mov
xchg
clc
fisubrs
std
sti
sub
movsl
mov
insb
inc
int
lods
and
xor
cmp
mov
inc
out
aad
and
std
int3
mov
xchg
aad
sbb
test
addr16
mov
jns
pop
push
ljmp
cmp
pop
and
loope
call
and
cmp
pop
lret
mov
es
dec
or
imulb
pop
add
sub
push
hlt
pop
adc
xor
mov
adc
test
pop
add
mov
push
iret
mov
inc
jnp
loop
mov
and
jnp
sti
out
sbb
dec
std
hlt
jp
xor
sub
and
mov
dec
out
dec
sti
aad
xor
sbb
xor
add
in
mov
stos
push
xchg
mov
inc
in
stc
test
filds
nop
test
dec
lret
cmp
fistl
jns
les
in
in
loopne
or
cltd
inc
int3
lock
ja
rclb
cltd
shll
test
and
push
xchg
insl
mov
int3
into
adc
mov
cmp
mov
xor
add
std
fldcw
sti
mov
cmp
cmp
cmpb
sub
cmp
mov
jl
lock
rorb
xchg
jo
cltd
pop
cld
jl
sbb
and
out
cmovno
sbb
cmp
push
imul
xchg
cmpsl
add
adc
outsb
pop
mov
cltd
cmpsb
cmp
mov
jge
loope
jno
incb
dec
pop
and
mov
mov
xor
test
inc
or
inc
ret
iret
not
sub
pop
hlt
sbbb
pop
cmp
movnti
jg
addr16
cltd
add
xor
ljmp
fs
xchg
imul
sub
shll
inc
leave
pop
ss
xchg
sbb
lahf
pop
inc
rcrb
or
sub
xchg
dec
shr
fistl
sub
gs
das
sub
pop
lods
pop
inc
xor
pop
into
push
push
xchg
pushf
pop
and
push
andl
mov
and
das
mov
stos
ret
mov
inc
ljmp
pop
jbe
adc
push
sahf
mov
fcmovu
dec
xchg
pop
inc
jo
pop
ror
in
pop
push
mov
jns
out
loope
js
and
jge
out
pop
and
or
test
push
cld
jecxz
jne
add
inc
repnz
ret
push
sbb
or
testb
cmp
pop
inc
dec
mov
push
mov
cmp
movsb
lea
or
out
or
mov
push
dec
addr16
cwtl
and
mov
cmp
aas
push
ss
push
inc
xor
leave
popa
jae
jg
int3
lret
int3
jb
dec
dec
data16
pop
orl
xchg
repnz
pop
stos
clc
jb
movsb
mov
fldt
mov
push
sub
lea
sahf
jo
sbb
cwtl
sub
cmpsb
dec
and
mov
xchg
sub
lcall
jmp
loope
cli
xor
mov
sbb
pushf
sub
stos
mov
mul
or
push
and
sbb
xchg
out
in
neg
inc
popa
add
inc
mov
hlt
ret
adc
popf
xchg
sbb
sub
icebp
sbb
pusha
arpl
in
jmp
popf
lods
jb
enter
dec
das
jg
pop
cmp
testl
shr
lods
sahf
nop
aam
cwtl
dec
jp
es
dec
sti
stos
push
mov
loop
pop
xor
arpl
pop
cmpsb
dec
xchg
mov
and
sbb
jg
mov
ds
inc
inc
add
pop
inc
adc
cld
inc
enter
dec
leave
sahf
xchg
daa
jecxz
insl
xor
push
lcall
pop
jno
test
sahf
test
mov
push
adc
icebp
cltd
lret
imul
pop
shlb
je
gs
add
mov
pop
sub
cmp
loope
clc
ror
pop
cld
push
loop
gs
in
sbb
imul
pop
sbb
sub
sub
mov
shlb
and
hlt
push
enter
out
push
mov
in
push
mov
sbb
mov
ficoms
cwtl
push
xchg
mov
shll
loope
aad
lret
xor
cmpsl
sbb
fs
add
lds
dec
push
or
adc
mov
scas
mov
add
push
jno
sub
inc
inc
xchg
cli
inc
call
jp
xchg
enter
pop
andl
sub
gs
mov
jae
and
add
sarb
repz
dec
adc
test
xchg
cmc
insb
xchg
xor
dec
loop
xchg
cmc
insb
xor
pop
jne
fstpt
fnop
scas
push
cmpsl
insb
mov
pop
lods
rclb
push
inc
xor
int3
dec
jbe
hlt
add
in
popf
rorl
pop
sub
into
fldl
sub
test
sub
cwtl
nop
xchg
cmp
test
mov
bound
mov
addr16
out
enter
call
in
mov
bound
cli
mov
mov
mov
ja
int3
and
mov
lods
aas
sub
icebp
xchg
push
dec
xchg
mov
ret
bound
jl
sbb
push
lahf
int
sti
and
and
push
repnz
dec
mov
mov
stos
outsb
idivb
leave
cmc
cwtl
push
test
ret
inc
pusha
lods
out
and
out
bound
shrb
xchg
sub
repnz
pop
mov
mov
cmp
lea
insl
pushf
cmp
sub
xchg
mov
jmp
imul
ret
test
sbb
xchg
dec
lcall
inc
pop
add
mov
lods
jl
clc
cmp
mov
cmpsl
xlat
push
fisubrs
movsb
mov
test
mul
inc
and
adc
dec
sub
cmpsl
cwtl
in
jg
dec
push
fs
push
loop
movsl
cmp
xchg
cmp
iret
mov
mov
xchg
adc
add
mov
ds
imul
repnz
inc
popa
test
leave
jns
addr16
sub
inc
fwait
adc
cmc
cmp
or
adc
cmc
test
popa
pop
add
pop
pop
mov
inc
mov
cmp
push
xchg
sbb
and
push
xor
insl
in
pop
push
test
roll
pop
sub
xchg
fadd
dec
or
lea
mov
xchg
sbb
loope
pop
jg
cmp
shrl
jmp
pop
xlat
push
sti
ret
mov
push
mov
rolb
xchg
lds
lret
not
or
ss
je
cmpb
lcall
pop
enter
mov
jnp
xchg
or
cmpl
rorl
mov
lcall
mov
std
addr16
subl
jmp
pop
xchg
jno
and
xor
sbb
loopne
repnz
push
pop
fcoml
test
pop
shrl
fistl
or
cli
fadds
push
mov
bound
arpl
mov
sbb
and
cmpl
pop
dec
sub
in
cmp
add
cs
xchg
sub
mov
inc
daa
sbb
pop
icebp
pop
sub
ja
cmp
mov
adc
shll
push
lcall
hlt
mov
lods
mov
lret
xor
repnz
subl
jecxz
inc
cmp
punpckldq
enter
out
mov
movsl
xchg
xorl
arpl
inc
addb
outsb
aaa
cmp
lret
lea
loopne
sub
loop
es
xchg
push
cmp
adc
mov
sbb
or
ret
mov
jo
add
mov
mov
xor
push
insl
into
mov
xchg
add
push
in
mov
mov
sub
repz
mov
push
pop
dec
push
inc
mov
bound
xor
daa
or
mov
pop
adc
cmp
and
cmp
leave
les
mov
pop
mov
add
jmp
loop
test
cmp
mov
mov
inc
nop
ret
fsubs
popf
insl
inc
mov
adc
test
repz
lahf
mov
in
sub
push
mov
sub
sub
lret
jne
inc
xchg
jg
in
and
jl
cmp
xchg
aaa
or
add
inc
cld
scas
adc
dec
xchg
mov
inc
subb
mov
add
mov
push
stc
mov
aas
rcr
loopne
fistpl
mov
mov
es
and
jge
ds
sub
aam
inc
aaa
cld
das
adc
mov
jecxz
adc
cmpsb
or
mov
lea
and
cmp
sub
ljmp
out
in
scas
iret
cmp
pop
insb
and
lds
jecxz
jnp
jno
das
cwtl
mov
sub
jnp
mulb
or
mov
add
test
imul
dec
enter
add
and
enter
cmpsb
pusha
jne
stos
jbe
mov
xor
mov
sbb
imul
cld
ret
mov
push
push
scas
xor
adc
pop
jle
jl
ret
cmpsl
sub
mov
rorl
jecxz
sbb
or
xor
nop
adc
xor
dec
jns
adc
test
or
mov
hlt
ja
add
cwtl
mov
outsb
or
iret
bound
sbb
xor
pop
xor
inc
das
cmc
in
repnz
int3
xor
push
into
negl
sarl
repz
pop
addl
sbb
jle
es
stc
adc
xor
pop
mov
xchg
pusha
or
or
ds
imul
dec
pop
mov
jne
ret
add
or
repnz
inc
fcoms
rcrb
enter
mov
fdivl
push
out
das
js
int3
scas
sub
movsb
into
jo
loop
or
xchg
push
shlb
mov
or
in
lds
clc
pop
sub
outsl
icebp
imul
push
xlat
lock
mov
dec
scas
xchg
fisubl
cmp
loop
mov
icebp
or
cmp
ljmp
push
mov
sbb
hlt
pop
mov
shrb
jbe
mov
imul
mov
jmp
or
jmp
flds
mov
gs
push
adc
std
inc
pop
js
fimull
jnp
negb
pop
fucomip
mov
into
push
sahf
imul
cld
stc
sbb
inc
inc
mov
jmp
pop
xor
inc
ret
fidivrs
in
cmc
iret
call
cli
xor
add
add
and
lock
or
push
xor
or
jg
js
loopne
jns
pop
fstpt
add
adc
mov
cwtl
cmp
push
lcall
sar
call
mov
sbb
jmp
adc
mov
clc
into
enter
addb
mov
dec
imull
sub
xchg
xchg
xchg
mov
push
xchg
push
dec
adc
mov
mov
dec
pop
xchg
and
out
sahf
jb
pop
aaa
jge
scas
mov
sub
rcrb
in
cli
jns
xchg
ja
mov
mov
mov
adc
mov
cli
jne
psubsb
dec
pop
test
scas
lcall
cmpsb
aad
jle
push
sti
pop
sub
hlt
clc
sub
mov
push
ds
xor
test
dec
add
add
xor
js
sub
dec
sub
cs
xchg
fstp
out
or
mov
xor
fldcw
push
movsl
sub
sub
inc
js
loop
pop
add
lea
daa
fidivrs
rorb
bound
push
mov
fsts
or
dec
add
jmp
repnz
cs
xchg
lods
xchg
fdivrp
mov
inc
sub
call
inc
insb
popl
mov
pushf
inc
or
adc
or
test
sbb
push
fucom
in
js
lds
lcall
push
add
xchg
jae
dec
mov
loopne
imul
add
and
ljmp
mov
std
mov
imul
pop
and
sbbb
push
dec
add
aas
lea
cmpsl
imul
in
icebp
loope
cmp
and
insb
cmp
movsl
mov
mov
cmp
mov
aaa
aaa
sbb
clc
insl
outsl
dec
ja
sahf
xor
movsb
or
mulb
fists
les
pop
pop
ds
test
and
xchg
dec
xorl
or
push
dec
scas
mov
sarb
mov
and
test
ss
int
movsb
loop
cmp
ja
jae
out
stc
in
push
roll
ljmp
xchg
outsl
mov
dec
mov
xchg
lret
xor
or
lds
jge
xor
mov
movsl
dec
push
mov
lahf
les
inc
stos
mov
fdivrp
andl
inc
dec
test
adc
inc
pop
lret
xor
pop
push
add
cwtl
jo
mov
or
es
movsb
imul
jae
fucomip
inc
inc
daa
adc
addr16
cmp
shll
and
rcrb
adc
cmp
mov
test
mov
inc
dec
enter
sbb
aaa
sbb
push
into
clc
cmp
ss
dec
jnp
mov
sbb
fbstp
shl
fbld
sti
jecxz
int3
ret
jno
inc
sub
pop
jns
call
and
int3
cmp
pop
jno
cld
mov
lods
cmp
movsl
cltd
and
shrl
push
inc
hlt
xchg
vsqrtps
sub
in
andl
mov
cmp
js
mov
or
and
jo
jle
sbb
ret
stc
mov
add
cmc
sahf
hlt
cli
and
out
pop
sarl
out
fcoms
je
fcoms
ret
jnp
push
or
in
or
pop
xchg
xor
xor
enter
insb
lahf
fs
inc
int
dec
loop
pop
jo
cld
dec
into
ja
jnp
insb
fadd
or
sahf
push
adc
jbe
nop
mov
pop
jns
mov
test
dec
dec
sbb
ja
mov
loopne
jle
mov
outsl
lcall
adc
cli
dec
aam
in
je
mov
testb
ret
cmp
add
into
cmpsl
mov
or
xchg
in
pop
mov
pop
xchg
movsl
lea
add
es
sub
mov
outsb
lods
inc
xlat
lret
sbbl
push
in
adc
bound
mov
jl
push
inc
mov
dec
dec
mov
adc
xchg
int
sub
aad
int3
add
push
push
push
ficompl
cvttps2pi
jno
test
or
mov
cmp
aas
rcl
repnz
je
shlb
jge
orb
mov
jg
sbb
xchg
or
dec
pop
add
mov
aas
ret
pop
pop
add
lret
lcall
pop
adc
add
mov
les
and
mov
push
popf
pop
pushf
insb
dec
xchg
jbe
jl
es
je
mov
cmp
jne
inc
push
js
ds
push
push
int
add
xchg
pop
and
xchg
outsb
cmp
int3
push
mov
js
mulb
and
xchg
lods
push
adc
add
jae
mov
inc
test
rorl
in
inc
mov
mov
dec
fsubrs
pop
push
bound
cmp
sti
mov
fs
cmp
in
in
sti
lahf
stos
sbbl
sub
test
flds
leave
mov
nop
aas
fistps
cltd
lods
pop
adc
gs
xor
aad
jb
pop
insl
mov
ds
jmp
iret
sahf
mov
cmp
loopne
jns
mov
xor
push
aaa
dec
lock
aas
in
js
loopne
add
popa
cmp
dec
test
mov
jg
mov
jno
cli
jne
mov
mov
decl
jge
mov
clc
cmp
rol
sbb
out
mov
lock
jo
rolb
mov
jno
xchg
test
add
jae
scas
enter
inc
add
sbb
adc
sahf
or
inc
lods
pushf
andb
rolb
cmpsb
fcmovbe
xor
ds
in
add
aad
lahf
pop
and
mov
sbb
jecxz
test
add
or
flds
fisubrs
mov
and
cld
push
scas
and
orl
and
icebp
shr
lods
inc
push
push
mov
test
ret
rcr
dec
adc
mov
push
js
push
data16
das
js
jae
leave
pop
or
and
mov
xchg
dec
xchg
and
or
push
push
dec
stos
jle
or
fsubs
jne
mov
clc
dec
gs
shll
sub
cmpsl
add
addl
imul
imulb
lahf
repnz
loope
negb
cmc
stos
push
lcall
pop
shlb
dec
push
adcl
jns
lea
call
push
test
or
inc
dec
fistpll
inc
icebp
int
mov
mov
mov
movsb
push
push
addl
cmpb
and
pop
je
adc
mov
jbe
sbb
mov
push
lock
pop
cs
pop
test
inc
lcall
stos
jno
lret
arpl
mov
pop
cmp
and
ss
or
pop
cwtl
lods
push
sbb
inc
and
cmp
cmp
jmp
mov
test
lods
jmp
mull
cmp
addr16
jle
dec
inc
push
xchg
dec
aad
sahf
ljmp
inc
mov
cltd
hlt
mov
loope
xor
mov
mov
dec
loop
je
rclb
pop
cmc
push
pop
mov
sahf
stos
imul
adc
mov
rcr
xor
push
jb
ljmp
add
sarb
mov
push
mov
lods
jns
cmpsl
pop
fldt
push
and
add
bound
fadd
lret
icebp
mov
push
nop
mov
adc
loopne
mov
xchg
pop
cmc
add
dec
jno
jle
xchg
mov
xchg
jmp
and
shl
les
jbe
nop
fcoml
decb
xor
in
jns
sub
and
and
mov
adc
in
ja
or
add
add
pop
aad
mov
cwtl
push
ret
push
mov
imul
inc
mov
roll
shl
push
add
pop
shrl
fisttps
notl
xchg
dec
jns
clc
inc
outsl
stc
add
add
jge
repz
push
mov
arpl
adc
stos
iret
push
pop
pop
xchg
daa
cwtl
add
mov
push
jne
and
repz
cmp
lock
sarb
pop
xchg
push
rcll
scas
ror
sbb
stc
stos
cld
aam
jle
jmp
clc
or
jno
pushf
jnp
aas
xor
and
cwtl
jb
test
inc
dec
lret
outsl
shlb
out
xchg
jmp
ret
jg
push
insl
and
int3
nop
adc
stos
sub
cmp
add
sbb
mov
adc
cmp
push
in
pop
scas
pusha
mov
lret
inc
cli
push
lret
stos
shlb
shlb
inc
ret
sbb
sbbb
push
adc
xchg
pop
les
ja
or
dec
cli
jg
in
xchg
jno
add
pop
sbb
lret
xchg
mov
loopne
xchg
cmp
in
mov
js
pushf
push
iret
cmp
addr16
aas
jne
scas
adc
idivl
andl
bnd
add
add
jl
inc
dec
in
jge
es
push
cmp
cld
mov
xor
cmp
sub
push
inc
mov
hlt
push
adc
jb
fldt
jmp
and
scas
and
xor
sub
ljmp
pop
jno
ret
pop
add
inc
add
test
push
jp
sub
xchg
mov
mov
daa
outsb
add
shlb
shlb
inc
sub
add
push
ja
scas
pop
test
aas
push
mov
mov
sub
loope
xchg
mov
jle
subb
mov
int3
jmp
mov
dec
fmul
jle
xor
shrb
scas
ret
outsl
ja
je
inc
mov
rcll
sbb
fsts
lcall
call
jmp
jmp
adc
insb
loope
lret
pop
inc
fcomip
inc
mov
sbb
cmp
sub
leave
sarl
mov
les
add
mov
pop
jnp
test
inc
shl
imulb
jns
dec
jbe
popa
pop
cmpsl
das
sub
sbb
mov
jbe
jle
jl
xchg
iret
cmpsl
mov
dec
push
aaa
sub
dec
jmp
xchg
mov
xchg
xchg
clc
mov
stos
sbb
imul
lock
jbe
dec
int3
repz
push
push
pop
cmp
in
insb
fcmovb
or
mov
jne
test
add
xchg
adc
dec
xlat
in
push
popa
inc
popa
in
std
loop
mov
mov
and
in
loope
lcall
dec
nop
stos
out
xchg
mov
sti
add
xor
add
inc
add
mov
add
dec
in
mov
mov
mov
paddusb
testl
push
add
mov
scas
push
icebp
adc
pop
sub
xor
outsb
cmc
pop
xchg
mov
int
mov
sub
add
outsb
mov
mov
sti
adc
sahf
or
mov
mov
jle
fsubl
xchg
popl
jne
movsl
dec
in
call
mov
arpl
cmp
push
mov
fildl
jno
mov
fs
adc
pop
inc
pop
loope
push
jp
bound
ret
xchg
mov
mov
sub
dec
sub
stos
fcoms
mov
lods
mov
jno
mov
add
push
pop
add
sub
and
jb
imul
mov
sub
mov
fldt
fsts
mov
andl
sahf
cmpl
mov
test
scas
push
inc
stos
in
jg
fwait
loope
notb
cld
jp
cmp
out
mov
add
jle
into
jns
ror
clc
push
sbb
mov
aaa
movsl
push
pop
pop
xor
testl
jne
jns
push
das
xchg
push
adc
dec
incl
jp
sub
pop
add
cmpb
mov
cmp
sbb
xor
xchg
adc
push
sbb
inc
sbb
sti
cmpb
mov
bound
int
inc
cmp
clc
mov
mov
sub
add
inc
insl
push
jne
sub
sub
dec
add
es
nop
popf
dec
mov
cld
lods
out
lret
addr16
pop
cli
mov
fistps
leave
jecxz
push
mov
jbe
xchg
aad
jne
jo
fwait
inc
popf
xorb
ret
or
and
test
daa
lcall
mov
mov
sub
xor
outsl
sbb
test
pop
lcall
push
insl
jo
shl
bound
lret
addl
xor
test
adc
jnp
movsb
and
and
sbb
inc
rcrl
cmp
lods
xlat
mov
pushf
out
in
test
mov
push
push
lods
shrb
outsl
xchg
adc
adc
fxtract
jno
out
ds
enter
mov
rol
jbe
fnstcw
scas
ret
mov
jb
jb
cmp
mov
mov
mov
ljmp
popa
movsb
gs
push
orl
int3
and
sub
cli
scas
inc
in
aad
imul
popf
fistpll
call
and
ljmp
decb
loope
ja
mov
add
mov
aas
mov
mov
add
add
push
add
addb
addl
add
add
add
add
add
add
push
dec
add
add
add
add
push
add
add
add
add
add
add
add
test
add
add
add
pop
add
add
add
add
add
add
add
push
add
add
pop
add
add
incb
add
add
add
add
sub
add
add
add
jge
push
add
add
add
push
add
jno
add
add
add
add
add
add
add
add
add
add
jle
add
add
add
add
add
add
lahf
add
add
add
movsb
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
mov
mov
dec
das
mov
jno
adc
daa
fnstcw
mov
fidivrl
mov
lods
es
mov
pop
mov
les
les
loopne
clc
adc
js
stos
jno
mov
cli
loopne
scas
adc
xor
in
push
stos
ljmp
xchg
mov
jecxz
ljmp
sub
mov
fistpl
inc
fdivrp
or
popf
stos
dec
add
mov
repnz
in
push
insb
mov
ret
push
stos
jnp
xchg
jno
cmp
adc
adc
lret
mov
sub
sub
mov
js
shlb
mov
aas
sub
pop
mov
sub
adc
outsl
xor
mov
in
in
clc
mov
mov
jle
push
lret
aas
add
adc
mov
addb
dec
into
cwtl
clc
stc
xchg
and
mov
dec
pop
xchg
arpl
xchg
or
out
ret
mov
cmp
pop
push
sub
sbb
adc
cwtl
addr16
idivb
shlb
scas
lret
fs
pop
cmp
orb
imul
sub
push
adc
lret
mov
xchg
cli
fidivrs
scas
pusha
outsl
pop
jns
insb
lea
push
scas
lds
inc
in
das
lock
jp
cmpl
ljmp
out
test
inc
push
inc
icebp
mov
xchg
and
fiaddl
arpl
sti
dec
repz
push
enter
adc
enter
pop
stc
push
stc
cmc
inc
adc
test
xor
sbb
mov
jge
push
pop
cld
addb
cmc
pop
sbbl
cltd
movsl
mov
inc
out
int3
mov
inc
inc
test
femms
loope
testb
cmp
lcall
push
dec
sub
enter
pop
ss
sbb
imul
fimull
cmp
sub
or
ljmp
mov
fidivrs
xchg
mov
adc
jle
pop
mov
mov
je
adc
cltd
popl
fcomps
or
or
adc
add
xor
daa
in
push
add
jnp
iret
shl
mov
pop
jg
push
movsb
popf
rorl
adc
cmpsb
mov
loop
inc
cmp
mov
das
push
fimuls
scas
insb
ja
jmp
js
and
inc
mov
cmp
mov
dec
inc
es
inc
aas
sbb
sbb
add
lret
sbb
jmp
loope
mov
leave
add
sub
xchg
add
add
roll
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
repnz
add
add
add
add
add
add
add
add
add
cwtl
add
add
add
pop
add
add
cmp
add
add
add
add
pop
xchg
add
add
add
add
add
add
xchg
add
add
add
out
add
add
add
add
add
add
add
add
add
test
add
add
add
fadds
add
popf
add
add
add
lock
add
and
add
add
add
add
add
add
cmp
add
add
add
add
add
lods
add
add
add
movl
add
add
pop
add
js
add
adc
add
adc
add
add
add
add
mov
adc
add
add
add
add
add
roll
add
adc
add
add
add
add
add
rolb
add
adc
add
rolb
add
add
push
add
add
add
push
roll
add
add
dec
roll
add
add
jo
add
add
add
mov
add
cmpsb
roll
add
add
add
roll
add
add
add
roll
add
roll
add
roll
add
add
rolb
add
rolb
add
add
pop
rolb
add
add
jbe
add
mov
add
sahf
rolb
add
add
add
rolb
add
rolb
add
rolb
add
roll
add
add
sub
add
inc
roll
add
add
add
add
and
jb
popa
je
inc
outsl
insl
jo
je
bound
imul
push
inc
gs
gs
inc
js
outsb
je
outsl
imul
push
jb
outsb
jae
popa
je
inc
push
je
outsb
outsw
add
test
push
gs
popa
jns
jne
add
jb
popa
je
push
arpl
outsb
dec
outsb
imul
add
jne
gs
insb
imul
inc
inc
dec
xor
cs
insb
add
add
popa
addr16
imul
dec
insl
popa
addr16
outsl
jne
je
inc
add
popa
addr16
imul
add
inc
dec
dec
inc
push
dec
xor
cs
insb
add
insb
add
outsb
add
outsb
je
insb
insb
cs
insb
add
fs
arpl
insb
gs
je
jb
inc
add
push
inc
imul
outsl
ja
js
add
push
gs
inc
js
add
imul
outsb
outsl
ja
gs
popa
addr16
add
aam
push
jns
je
insl
push
popa
jb
insl
gs
jb
dec
outsb
outsw
inc
add
pop
inc
gs
outsb
jne
je
je
add
xchg
inc
gs
jb
jns
popa
jb
je
add
imul
or
outsb
fs
outsb
jo
je
roll
jae
imul
popa
bound
add
inc
jb
popa
je
inc
imul
jb
insl
push
add
loopne
inc
fs
jae
push
imul
arpl
sysret
inc
gs
insb
addr16
je
insl
push
gs
push
add
inc
push
xor
cs
insb
add
add
inc
gs
outsl
arpl
push
imul
inc
gs
jne
jb
outsb
je
imul
jns
add
mov
je
push
add
stos
add
gs
je
push
gs
outsl
je
push
push
add
ret
add
outsl
bound
push
gs
insb
insb
outsl
arpl
cmp
dec
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
inc
add
je
jne
jb
outsb
je
jb
arpl
jae
fs
add
je
jb
jb
je
arpl
push
arpl
outsb
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
jne
popa
dec
push
insb
jne
popa
dec
outsb
ja
insb
and
dec
dec
and
arpl
imul
imul
dec
fs
push
dec
add
inc
ja
push
push
jb
add
add
je
outsb
ja
outsb
je
popa
push
inc
ja
dec
push
bound
outsl
js
insl
insl
jbe
imul
jo
jbe
dec
push
jo
gs
and
jne
popa
push
ja
outsw
pop
pop
push
outsb
arpl
inc
popa
dec
gs
insb
jb
push
and
imul
je
imul
popa
push
jae
insl
add
add
xchg
mov
add
push
add
add
add
add
add
add
add
dec
aam
add
add
fs
add
jne
add
add
mov
add
ja
add
nop
aam
add
add
add
add
push
xor
xor
gs
add
popa
fs
gs
inc
pop
inc
push
inc
dec
push
inc
dec
push
inc
dec
inc
pop
add
jo
js
pop
jne
dec
jp
inc
insb
bound
inc
pop
inc
dec
inc
inc
pop
add
jb
gs
js
insb
bound
inc
pop
inc
dec
push
inc
dec
push
inc
dec
inc
pop
add
dec
insl
jae
add
arpl
pop
arpl
imul
outsb
push
popa
popa
add
gs
je
insb
jne
add
bound
insl
push
jno
dec
fs
outsl
pop
inc
ja
ja
dec
dec
dec
dec
imul
jp
dec
outsl
insb
jne
dec
dec
dec
inc
bound
add
pop
push
push
insl
jbe
imul
arpl
push
add
.byte
push
outsb
dec
dec
dec
imul
ja
js
jbe
jae
inc
and
jae
pop
inc
jo
js
add
add
inc
add
loopne
add
inc
add
loopne
add
add
or
add
loopne
add
add
inc
add
and
cld
dec
inc
add
inc
add
add
ljmp
add
or
cld
fdivrp
push
push
push
push
push
push
push
push
dec
jl
inc
add
loopne
add
loopne
add
inc
add
inc
add
add
loopne
add
jge
add
shl
inc
add
add
inc
add
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
add
add
add
add
add
add
std
std
decb
std
repnz
pusha
std
idiv
xor
std
leave
cmp
into
std
dec
rcll
rclb
idiv
ss
std
decb
std
repnz
pusha
std
idiv
xor
std
leave
incb
std
into
std
dec
shll
shlb
idiv
ss
std
decb
std
idiv
arpl
lret
std
dec
shll
shlb
and
inc
aaa
push
ss
lock
std
std
decb
std
icebp
arpl
idiv
cmp
lret
dec
roll
inc
and
push
aaa
pusha
lock
std
std
decb
std
icebp
arpl
idiv
push
std
lret
dec
rcll
push
and
pusha
aaa
jo
ja
incb
std
std
popa
std
repnz
cmp
idiv
outsb
std
lret
std
dec
shll
bound
jno
jo
xorb
lock
std
std
popa
std
repnz
aaa
std
idiv
adc
hlt
std
dec
shll
jb
andl
xchg
lock
std
std
popa
std
repnz
std
lret
std
dec
roll
daa
nop
aaa
mov
pop
std
std
popa
std
repnz
lret
std
dec
rcll
daa
mov
lock
std
std
adc
repnz
insl
std
icebp
std
lock
shll
daa
mov
shlb
aaa
shlb
xlat
icebp
xor
std
adc
repz
std
hlt
std
dec
rol
rol
and
daa
shlb
loopne
out
incb
add
loopne
add
loopne
add
loopne
add
fs
add
pop
fs
push
sub
inc
add
jne
add
fs
push
add
add
ja
add
pop
jne
adc
push
add
gs
adc
adc
adc
adc
adc
adc
adc
adc
adc
push
adc
jbe
test
test
mov
mov
mov
mov
adc
adc
adc
jno
inc
xchg
mov
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
imul
sbb
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
push
adc
jbe
test
test
mov
mov
mov
mov
adc
adc
adc
jno
inc
xchg
mov
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
imul
sbb
adc
adc
inc
adc
adc
add
add
dec
add
add
dec
add
add
dec
add
add
add
imul
add
add
inc
add
dec
add
push
add
add
add
add
inc
add
add
add
add
inc
add
out
lcall
in
add
out
ljmp
inc
add
out
incl
inc
add
out
incl
and
std
std
incb
add
add
xchg
add
pop
add
pop
add
or
and
add
sbb
push
sbb
insb
insb
push
arpl
add
add
std
arpl
repnz
adc
icebp
popa
std
idiv
pop
std
idiv
push
std
cmc
std
hlt
rcll
rclb
idiv
add
jne
gs
xor
add
add
add
jb
outsb
push
add
add
push
jbe
add
adc
xchg
or
add
jbe
add
add
add
add
add
outsb
add
add
add
data16
add
add
add
imul
outsl
addr16
add
jle
incb
pop
idiv
pop
leave
pop
adc
pop
mov
pop
sub
add
dec
inc
add
inc
add
adc
arpl
outsl
std
adc
imul
std
incb
add
std
adc
adc
and
and
std
std
adc
std
sbb
insl
std
adc
std
incb
add
add
xor
inc
add
arpl
jae
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
jno
pop
xchg
xor
add
xor
inc
xchg
out
shlb
push
jbe
gs
gs
aaa
pop
ja
sbb
jmp
mov
push
xlat
out
xor
mov
jg
data16
repnz
int
mov
xchg
enter
dec
push
and
ja
inc
push
inc
ja
add
fs
jbe
js
add
jns
jo
and
js
outsb
inc
insl
bound
bound
push
jno
add
insl
gs
push
and
data16
push
jb
inc
inc
pop
inc
inc
jp
jbe
insb
jo
data16
dec
insl
push
and
add
add
imul
jo
inc
addr16
jno
je
addr16
jbe
imul
js
add
jbe
add
imul
dec
dec
popaw
inc
add
bound
jae
data16
arpl
add
push
jns
insb
fs
jne
push
inc
dec
dec
dec
dec
add
insl
inc
arpl
add
push
add
fs
jne
imul
dec
dec
outsl
bound
insb
inc
inc
add
pop
push
jns
dec
jae
inc
add
add
dec
insl
jae
fs
dec
dec
add
outsl
js
insl
push
dec
dec
push
fs
jbe
dec
add
push
imul
push
ja
arpl
jns
outsl
js
fs
je
and
push
jb
push
jo
jns
add
add
jne
add
add
add
add
add
add
add
pusha
push
add
fimull
add
shlb
mov
scas
mov
fcomps
inc
cmc
and
add
aam
sbb
nop
mov
add
add
inc
push
out
and
fcmovnbe
jne
or
test
dec
push
rcrb
movsb
lret
jg,pn
mov
mov
stos
clc
jg
pop
jmp
pusha
test
mov
mov
sbb
cltd
fsubrp
test
inc
inc
test
test
ret
cmpsb
mov
idiv
scas
js
inc
mov
fidivs
imul
pop
das
cmc
mov
mov
and
push
push
jnp
das
dec
and
std
mov
sbb
mov
jo
mov
scas
push
es
fidivrl
or
push
xlat
ds
xchg
into
mov
mov
lret
fwait
hlt
push
mov
notb
mov
xor
outsl
push
mov
daa
jecxz
cmp
inc
sbb
inc
mov
add
loopne,pn
mov
test
and
scas
lret
jnp
and
shl
rcrb
mov
sbb
and
bound
rcrb
push
negb
movsl
push
jns
dec
pop
and
test
inc
out
jbe
int
jne
out
mov
pop
int3
repz
xor
mov
out
mov
mov
pop
js
fmuls
mov
or
or
lock
jbe
xor
cmpsl
push
jbe
test
dec
stos
fiaddl
mov
aaa
add
or
sbb
adc
inc
jnp
fs
adc
xchg
rorl
xor
movb
ror
xorl
add
xchg
push
imul
ja
lods
jb
lcall
fwait
mov
add
gs
ficompl
push
or
jnp
add
sarl
jne
ficoms
or
repnz
xor
add
addl
mov
lahf
add
aas
push
sarl
ljmp
cmp
lahf
incl
movl
call
les
jle
sbb
inc
bound
add
pop
pop
cltd
ljmp
cmp
sarb
or
inc
aaa
stos
xchg
xchg
fwait
mov
ss
outsb
insl
push
arpl
pop
mov
es
adc
inc
clc
roll
repz
adc
fwait
loopne
repnz
rcrb
call
inc
cmp
repz
sbb
nop
loop
cmp
mov
cmp
test
inc
int3
dec
mov
pop
adc
jmp
cmpsl
mov
mov
clc
hlt
sub
or
dec
adcl
push
xor
je
push
adc
xor
jecxz
out
lock
xchg
inc
inc
loope
inc
sub
jns
aad
icebp
mov
ret
sbb
ror
cmpsl
dec
setns
cmc
aas
mov
in
int
push
lret
je
cmp
mul
popa
imul
inc
mov
into
lret
jp
sub
in
call
fs
dec
sub
call
adc
jge
movsb
mov
mov
out
jae
cmpl
notb
jmp
test
dec
in
mov
adc
call
aam
jno
fwait
out
mov
rorl
mov
pop
mov
inc
jecxz
rorb
icebp
sti
and
xorb
and
mov
subl
test
push
dec
subb
scas
xchg
into
jge
cmpsl
insl
out
cltd
cmpsl
and
lret
jge
stos
pop
pop
dec
sub
stos
dec
push
cmp
xchg
repnz
cmc
cmpb
rolb
mov
bound
pushf
cmp
push
or
es
test
mov
jmp
jne
push
mov
daa
loopne
and
inc
pushf
push
inc
out
cs
sbb
je
push
shlb
add
inc
sbb
jmp
shlb
xchg
mov
or
or
lock
mov
adc
pusha
lods
sub
dec
sbb
sub
mov
imul
lret
rcrl
mov
add
ja
mulb
and
pop
out
sbb
inc
jle
xor
xchg
pcmpgtw
xchg
sti
and
jno
dec
mov
cwtl
adc
mov
xchg
mov
xor
mov
outsb
ret
xchg
cmpsb
or
xor
addr16
out
sub
call
xlat
rol
mov
inc
data16
add
dec
cwtl
stc
jbe
jecxz
out
inc
mov
mov
ljmp
mov
mov
sahf
or
out
xor
loop,pn
adc
pop
xor
xor
out
js
or
es
mov
aad
shrl
in
lods
divl
sbb
cwtl
outsw
fstpt
je
jnp
cs
jge
ljmp
cmp
fdivl
adc
movsl
push
dec
push
sahf
sbb
out
push
xlat
jb
jle
dec
dec
or
pop
adc
sti
jg
cltd
xor
xlat
jl
test
ret
iret
movsl
adc
sbb
sub
pop
fwait
cmpsb
out
cmp
xlat
xchg
push
dec
data16
rol
and
or
loop
clc
xchg
out
push
dec
shlb
mov
and
call
fcmovnb
jg
cwtl
bound
push
imul
mov
mov
daa
pop
pop
ja
mov
push
sub
mov
js
js
adc
ret
es
pushf
lret
leave
xchg
cmp
xor
jmp
sbb
add
mov
push
xchg
hlt
out
sbb
sti
ja
fcoml
mov
mov
cwtl
imul
cmc
cli
cmp
popa
jae
jmp
pop
xchg
les
push
repnz
jne
popa
mov
fadds
mov
cmpsb
ret
stc
xor
in
xchg
mulb
ss
push
jmp
jge
xchg
cs
loop
push
pop
cmc
lahf
imul
iret
repz
dec
cli
lds
and
cltd
lds
daa
xchg
mov
cmp
inc
xchg
inc
mov
loop
daa
popa
cs
pop
icebp
jae
shrb
and
dec
mov
adc
neg
inc
or
sbb
xchg
push
or
mov
add
adc
lods
gs
or
sub
out
xor
adc
mov
mov
jnp
push
mov
icebp
xchg
mov
dec
xor
dec
cmp
pop
pop
dec
loop
ds
sub
fwait
icebp
aad
xchg
shll
push
ficoms
or
push
cmp
xor
notl
xlat
or
adc
adc
mul
test
add
and
cmp
outsb
mov
sub
push
sub
push
mov
scas
xor
stos
lock
test
and
mov
enter
rclb
in
xor
xchg
imul
enter
fdivrl
pusha
cmpsl
sub
ljmp
push
iret
repz
insb
mov
sti
les
loopne
mov
xor
pop
jno
mov
int3
in
std
es
sbb
cltd
out
lahf
adc
cltd
iret
dec
xchg
fdiv
or
jnp
test
xor
stc
xchg
into
shll
mov
push
daa
dec
out
mov
lds
jle
xchg
jo
sbbb
test
mov
imul
ljmp
scas
fwait
sub
data16
inc
xchg
push
and
enterw
clc
pop
cmpsb
inc
shl
dec
mov
inc
movsb
je
sub
xchg
call
pop
and
jb
adc
xadd
pop
mov
int
ljmp
mov
les
inc
sub
sub
sub
xor
call
cmpsb
push
dec
or
mov
enter
dec
pop
dec
push
cmpsl
xchg
mov
sarb
icebp
xlat
jb
sbb
jp
inc
cmc
cmp
daa
inc
pop
jmp
hlt
pushf
and
pop
jmp
xlat
aaa
cmp
inc
mov
dec
or
pop
mov
push
ds
aaa
push
adc
pop
insl
xchg
lahf
dec
nop
lock
xchg
inc
fidivs
mov
stc
dec
pop
aaa
lea
xor
and
push
lahf
xor
jle
mov
jne
into
add
mov
mov
sbb
sub
imul
shrl
cbtw
push
sbb
int
lahf
mov
pop
add
cltd
xorb
out
dec
dec
loop
ljmp
xchg
push
inc
addr16
cwtl
xchg
in
mov
add
insb
ja
cmp
mov
popa
or
push
into
ljmp
jo
mov
out
cmpsb
sarb
lcall
mulb
sbb
pop
movsl
xlat
sub
push
adc
shl
repz
inc
xchg
cmp
xor
jl
fadds
pop
jle
or
push
xchg
sbb
fdiv
mov
xlat
out
xor
mov
push
es
jnp
int3
xor
mov
lods
xor
inc
jle
push
nop
ja
push
loope
add
sbb
inc
jo
mov
ja
inc
xchg
stos
or
dec
ret
movsl
lahf
jl
adc
gs
jp
inc
arpl
repnz
push
push
out
out
push
add
mov
popf
out
xor
mov
inc
rol
shr
in
lret
sbb
xor
ror
out
adc
push
out
xor
inc
into
add
mov
cli
mov
xor
cmp
fmull
test
xchg
dec
jo
push
scas
cld
push
sub
iret
pop
pop
dec
cli
js
lods
adc
xchg
or
jb
addl
xorl
loope
xchg
jl
lock
lcall
and
int3
xchg
sarl
into
pop
loop
leave
sub
dec
dec
repnz
movsl
in
aam
insb
dec
pop
test
mov
sti
and
shrl
repz
popf
fadds
out
es
adc
xor
inc
push
inc
jbe
nop
cmpsl
cmp
jle
push
adc
mov
xchg
dec
shlb
sti
mov
jl
addr16
orl
add
incb
pop
mov
leave
mov
ss
lcall
jo
test
dec
shl
jecxz
popa
jae
dec
sbb
mov
xor
outsl
loopne
lret
dec
adc
mov
mov
fcomi
inc
iret
adc
pop
shrb
xchg
or
dec
mov
imul
jmp
push
lock
stos
outsb
pop
and
mov
notb
out
mov
movsb
aaa
out
push
or
mov
xchg
push
idivl
jmp
fs
cmp
mov
pop
sbb
popf
mov
or
xor
and
in
push
mov
inc
arpl
push
pop
xchg
aam
sbb
xchg
mov
mov
xor
xor
add
fcoml
jmp
nop
dec
cli
aad
mov
fimull
andl
xchg
jns
mov
movsb
daa
stos
cli
mov
push
sub
xchg
js
mov
jl
inc
int
in
vpaddq
addr16
stos
dec
mov
bound
push
and
xchg
cmp
xchg
pop
out
dec
fnstsw
jo
mov
xchg
push
jp
add
test
add
add
popf
aam
xchg
icebp
push
int3
jge
inc
or
fidivrs
sahf
adc
loop
xchg
ljmp
and
aas
xchg
jecxz
lods
inc
clc
daa
out
rcl
pop
dec
dec
pop
scas
pop
xor
out
and
addr16
jge
jo
out
mov
shr
ds
mov
and
mov
or
and
push
and
faddl
rclb
or
sbb
cmp
cmp
push
in
push
in
ror
pop
fs
je
movsb
mov
push
sub
dec
pop
push
add
pop
jb
mov
enter
leave
push
add
pop
fmul
inc
lret
ficompl
repz
inc
xchg
push
lods
push
js
repz
mov
push
cmpl
push
lods
push
and
scas
or
pushf
adcb
mov
and
jle
ficoml
sbb
pop
rclb
or
jge
dec
dec
mov
inc
push
fistpl
cmc
dec
jnp
push
xchg
roll
loop
inc
pushf
in
test
adcl
out
fildll
push
xorl
psubsb
das
sbb
jns
fdivrs
push
clc
adc
pushf
mov
xchg
xchg
mov
xchg
push
mov
lcall
lea
sub
into
and
int
xor
dec
push
imulb
push
fisubs
lcall
adc
daa
aas
xor
scas
xor
out
xchg
mov
and
dec
ret
stos
fstps
lods
mov
cmc
mov
xchg
mov
xchg
into
cmp
xor
push
mov
or
and
xchg
mov
jb
pusha
adc
ljmp
xor
pop
test
jno
pop
addr16
push
dec
add
jno
imulb
mov
outsb
daa
mov
adc
and
dec
sub
pop
jnp
test
flds
xchg
in
sub
fstps
add
insl
adc
fmull
outsl
lahf
mov
adcl
lcall
pop
fcompl
cwtl
sbb
rol
push
in
and
fisttpl
sti
jle
xchg
shll
dec
jp
xchg
andl
pop
pop
pop
aas
jne
xor
test
cmp
push
cmp
and
cmp
sbb
push
jecxz
test
lods
jmp
test
aas
inc
iret
rcrl
mov
cli
test
test
pop
xlat
sti
push
push
add
fwait
mov
shr
inc
and
dec
repz
ljmp
mov
mov
loop
insb
fnsave
sbb
mov
ret
pop
mov
cld
jg
dec
push
lods
enter
jge
shlb
ja
call
xchg
push
mov
decb
and
cmp
popf
pop
mov
popf
cmp
mov
in
adc
stc
cltd
adc
lds
mov
sbb
cli
cmp
cmp
cmp
aaa
pop
mov
pusha
pop
dec
dec
cmp
mov
add
ja
mov
cmpsl
out
cli
dec
adc
es
lods
je
ror
mov
push
and
outsb
adc
sub
mov
inc
cmp
jp
aas
sbb
repnz
stc
insl
in
outsb
jnp
pop
test
or
flds
pop
push
leave
jo
out
cwtl
outsb
mov
cmp
dec
push
ds
scas
cltd
fwait
cmp
fisubl
mov
sbb
mov
jle
std
mov
ds
pop
lret
mov
cmp
cmp
push
push
hlt
inc
pop
cmp
mov
push
lock
mov
in
sti
movsl
mov
push
xchg
mov
sbb
cmp
mov
stos
inc
push
mov
fnsave
cmpsl
dec
arpl
or
addr16
loop
aaa
or
ljmp
push
and
int3
jp
jl
push
jae
pop
cmp
cmp
and
push
inc
aam
in
add
sbb
mov
lret
out
inc
or
daa
stos
or
stc
jge
shll
dec
add
cwtl
js
and
pushf
loope
loope
cmp
mov
xor
outsb
jp
ds
mov
movl
shlb
ss
clc
nop
ret
cmp
push
das
xor
push
mov
xor
xchg
jg
repnz
pop
sub
fbld
pop
or
xchg
loopne
mov
movsb
add
movsb
mov
mov
test
ret
inc
mov
adc
sub
jnp
xchg
jle
push
cmp
sbb
xchg
xor
xor
sbb
push
jge
bound
push
out
stos
fwait
push
xchg
in
iret
aaa
mov
call
lock
mov
in
mov
icebp
inc
xor
std
cmp
push
xlat
std
cmp
jno
ljmp
test
or
add
jp
stos
lock
fcmovnu
lea
mov
loopne
and
out
xchg
jb
sub
imulb
out
cli
ret
sub
popf
adc
xchg
data16
adc
enter
fwait
cmp
jns
imul
mov
lret
iret
dec
sbb
arpl
mov
stc
mov
sbb
dec
fmull
in
add
mov
outsl
cwtl
shrb
jne
iret
fcoml
leave
es
mov
push
pop
xor
or
pcmpgtb
xor
scas
shlb
orb
sti
imul
sbbl
mov
inc
xchg
dec
pop
or
mov
or
mov
push
sbb
mov
loopne
daa
mov
std
lods
imul
lcall
and
icebp
xor
mov
outsb
shrb
insl
jae
push
adc
add
push
gs
or
mov
or
fldcw
adcl
popf
movsl
cmp
das
aas
inc
pushf
sub
adc
cmp
mov
push
lods
inc
fwait
iret
daa
xor
mov
push
das
insb
jp
xchg
jg
jns
push
cli
cmpl
pop
dec
adc
enter
xchg
jb
adc
xchg
pop
loop,pn
jg
push
mov
daa
mov
bound
sbb
xlat
mov
cmpl
jnp
jmp
rclb
xchg
out
sarl
mov
jbe
and
mov
cmp
repz
ret
sbb
jmp
test
and
or
mov
cwtl
and
rorb
pop
pop
loopne
cmpsb
adc
xchg
mov
adc
scas
push
test
mov
jbe
sub
jb
inc
ja
dec
sbb
outsl
dec
and
scas
es
fstpl
pop
push
insl
out
mov
adc
insb
jbe
or
mov
sbb
in
or
pop
jg
cli
fwait
mov
out
call
imul
pop
add
adc
push
faddl
adc
xlat
mov
push
mov
pcmpgtd
imul
sub
ds
mov
fisubl
dec
stos
repz
dec
lahf
add
xchg
shrb
shlb
fwait
icebp
and
sarb
cmp
mov
mov
in
std
or
push
and
cmp
ljmp
and
inc
mov
or
mov
sub
push
adc
mov
jle
lock
cltd
test
sub
xor
cmp
mov
xor
scas
arpl
mov
mov
jnp
push
std
and
loopne
mov
mov
scas
pop
int
and
jns
fisttpl
mov
sub
sti
mov
jl
pop
orl
mov
pop
push
cmp
fdivr
bnd
xchg
out
inc
sub
dec
cltd
iret
add
push
xor
cmc
push
pop
or
mov
repnz
jnp
cmp
cwtl
mov
xor
jnp
jmp
dec
and
cmp
ror
cs
ret
add
test
cmp
fadds
jns
jmp
adc
mov
pop
cmp
sbb
loope
outsl
out
imul
jno
out
mov
add
aas
jmp
sbb
pop
push
mov
fwait
sub
rorl
mov
pop
dec
aad
mov
pusha
jne
aam
loope
mov
movsl
es
imul
mov
test
fwait
mov
sbb
add
mov
outsl
pushf
lret
sub
stos
gs
sarl
je
mov
and
or
push
xchg
mov
mov
pop
pop
push
cwtl
fbld
mov
pop
xchg
adc
xchg
rcll
shl
out
xlat
repnz
call
add
fdivrs
push
std
cmp
pop
dec
adc
adc
lcall
xor
cmp
add
mov
scas
cmpsl
mov
push
pop
js
out
jno
das
push
dec
aad
test
pop
in
pcmpeqb
ja
out
in
rclb
dec
repnz
push
bound
outsl
xor
dec
and
add
adc
pop
xor
xor
std
imul
push
les
fldl
xchg
imulb
imul
frstor
js
stc
dec
ja
mov
out
mov
xchg
push
outsl
int3
icebp
stc
movsb
push
inc
inc
sub
add
arpl
sti
or
mov
xchg
iret
dec
cmpb
popa
aas
iret
push
lods
push
inc
popa
leave
cmp
xchg
cmp
rcrl
add
inc
and
and
repz
lods
testb
mov
cmp
mov
and
pop
ljmp
stos
mov
into
pop
jne
push
fildl
push
cmpsb
nop
inc
scas
or
mov
popf
popa
pop
mov
pushf
and
dec
repz
inc
pop
rorb
int
decb
xor
xor
xor
mov
mov
inc
faddl
add
nop
ror
jge
add
cwtl
movsl
jnp
fidivrs
dec
dec
xchg
pop
sub
xor
sbb
popa
mov
cmp
sbb
call
pop
jae
lods
out
fstpl
xchg
add
fnstcw
ror
mov
or
jno
sbb
dec
shlb
dec
fists
and
mulps
jp
pop
adc
outsl
pop
add
stos
push
out
mov
xchg
out
and
popf
out
push
add
fimull
rclb
dec
std
lds
and
insl
jmp
cmc
pop
outsb
enter
adc
enter
insl
pop
std
call
mov
add
sbb
or
cmp
add
pop
inc
inc
xlat
sahf
cli
ja
stc
stc
daa
sbb
cmp
sbb
push
inc
pop
test
flds
stos
and
cmp
sub
int
pop
jnp
js
mov
repz
mov
es
or
iret
test
aam
jb
push
mov
in
adc
and
xchg
scas
jae
das
cs
xchg
das
test
xchg
dec
cmova
sub
cmp
out
pop
pop
mov
cli
loop
pop
push
adc
cltd
orl
xor
jmp
and
lahf
inc
adc
cs
out
sub
and
mov
dec
movsb
or
ret
sub
mov
repnz
pop
icebp
outsb
jmp
adc
imul
and
cld
loopne
rol
stc
or
stc
int3
pushf
pop
mov
test
sub
ljmp
lods
rol
xor
les
push
movsl
mov
shrb
jb
sub
or
jle
cmp
add
sbb
cmp
lret
testb
inc
insb
sbb
mov
mov
jne
jns
mov
pop
jb
imul
adc
add
clc
fimuls
jecxz
pop
or
cmpl
enter
push
lods
lret
mov
sti
lds
add
mov
inc
aas
adc
jecxz
dec
bound
lahf
sub
jne
data16
outsb
popa
push
inc
ret
rcll
pushf
je
dec
sbb
jmp
pop
pop
cmp
repz
bound
xchg
test
lods
sub
mov
pop
jo
xor
loope
enter
jne
xor
hlt
jl
mov
fcomps
pusha
sbb
addr16
jo
mov
sub
jp
cmp
movl
shrb
sub
or
ficomps
outsb
and
repnz
mov
mov
loope
icebp
out
lret
jno
add
jl
jb
pop
icebp
pusha
mov
fwait
xlat
test
xorl
xchg
pop
testb
pop
xor
in
testl
cld
scas
test
dec
pop
mov
xchg
pushf
int
jg
stos
nop
sbb
and
xlat
push
addr16
lds
test
xchg
cld
cmp
push
repnz
cmp
dec
movsb
cltd
dec
dec
dec
fistpl
cmp
out
sbb
add
or
pop
xchg
scas
fidivs
and
dec
hlt
and
jge
jb
cmp
or
or
jno
push
adc
mov
movsl
xor
cmp
shr
adc
sub
sahf
outsb
add
pop
mov
aas
cmp
mov
mov
nop
call
iret
test
jne
add
gs
push
mov
jb
out
and
imull
sub
adc
andl
mov
inc
pop
es
mov
in
bnd
mov
imul
insl
iret
fcmovne
sub
imul
mov
inc
mov
jnp
sub
fidivrs
jne
add
xor
mov
cltd
mov
and
xorl
sub
mov
mov
and
fisubl
andl
sub
ret
movsb
icebp
jg
pop
pop
xchg
sbb
xlat
or
cmpsb
sub
mov
jecxz
dec
or
mov
push
std
adc
push
ret
cmpsb
mov
ret
xchg
mov
and
and
sub
push
aas
cmp
sub
enter
in
fwait
loopne
add
mov
xchg
jns
movsb
jnp
adc
mov
push
xorb
scas
pop
ja
out
loopne
or
outsl
sub
in
cmp
mov
dec
sbb
mov
out
or
cmpsl
xor
rcll
cmp
xchg
negl
pop
push
cmp
icebp
jecxz
dec
dec
jno
dec
cmp
push
mov
jno
dec
insb
imul
and
sub
cld
lcall
or
push
mov
lcall
mov
gs
jne
dec
stos
cmp
push
dec
pop
in
pop
int
mov
iret
loope
or
mov
shll
mov
pop
jg
repnz
shll
daa
test
mov
gs
inc
sub
data16
nop
cmpsb
in
xchg
dec
xor
out
sti
add
and
pop
mov
cmpsb
mov
mov
ljmp
or
inc
jae
xlat
pop
into
mov
or
fcoml
mov
add
sub
cmp
push
dec
das
int3
repz
jecxz
mov
fwait
es
xchg
scas
lcall
fistps
lock
test
stos
divb
or
mov
lret
test
sub
ja
test
mov
or
mov
movsb
mov
maskmovq
ror
fsubl
adc
movsl
pop
adc
cmc
addr16
adc
cwtl
std
pop
or
xchg
xchg
iret
cli
add
es
sub
jno,pn
in
mov
mov
mov
dec
dec
dec
push
dec
sbb
adc
push
les
addl
push
repnz
xchg
inc
lods
pop
movsb
mov
xor
scas
lahf
lods
sbb
stos
pop
dec
pop
in
push
mov
sahf
xchg
mov
adc
scas
rcr
xchg
push
or
in
bound
and
pop
or
movsb
scas
push
arpl
push
add
mov
les
mov
subb
scas
xchg
data16
adc
cs
out
jg
dec
data16
cltd
xchg
cmpsl
xor
dec
cmp
xchg
enter
aas
mov
xchg
mov
add
imul
add
push
fnstsw
inc
jnp
cmc
mov
xchg
add
icebp
push
xor
xchg
inc
inc
inc
add
out
popf
jmp
stos
scas
xor
lret
int
mov
imul
jmp
js
std
fsub
out
xlat
adc
jo
cmp
outsl
add
test
sbb
mov
cld
inc
xchg
arpl
pop
stos
dec
shrb
jno
icebp
iret
xor
dec
mov
addr16
push
out
mov
fiadds
fbld
mov
dec
sbbl
adc
lcall
out
in
aam
jne
into
pop
test
rol
jp
jge
stos
cmpsb
call
ss
cwtl
rcr
push
cmp
daa
or
cmp
imull
jg
mov
fdiv
jo
lods
sbb
cwtl
aas
xchg
lods
aaa
or
rol
inc
iret
add
push
sub
add
cmp
xor
int3
push
clc
sub
mov
mov
mov
aaa
cli
push
mov
idivb
sub
push
cld
mov
fistpll
gs
mov
mov
inc
xlat
add
sbb
pop
mov
mov
jle
or
add
inc
stc
pop
test
sub
stos
adc
dec
push
decb
stos
cli
add
std
jb
adc
aas
ds
lret
rcl
shrl
aas
lock
inc
adc
fldl
sub
daa
mov
scas
outsb
cmc
dec
fstps
mov
js
dec
js
jmp
imul
push
mov
jecxz
inc
inc
enter
out
cmpsl
sub
pop
jne
mov
fdivp
lret
jle
fnstcw
xor
adcl
add
add
inc
add
arpl
mov
int
icebp
jnp
sub
dec
lock
fisubrs
push
cwtl
je
int
sub
lgs
sub
cmc
or
es
adc
sub
aaa
add
mov
mov
clc
push
lods
ficoms
repz
loope
mov
dec
repz
dec
repnz
test
adc
pop
icebp
cmp
dec
lds
movsb
cld
adc
inc
pop
lret
jge
mov
inc
sbb
sub
test
inc
flds
inc
cli
dec
hlt
xor
inc
rcrl
pop
out
sub
ret
jmp
movsl
xorb
push
mov
popf
dec
pop
mov
and
test
jg
push
push
xchg
jg
jecxz
jp
add
mov
xchg
rorl
inc
cmp
add
add
add
add
and
add
add
push
add
add
add
add
xor
add
add
xor
shlb
xchg
es
mov
mov
fwait
roll
inc
or
sub
mov
lret
iret
mov
mov
fucomip
in
xor
pop
xchg
pop
out
push
int3
mov
adc
xchg
push
and
repnz
mov
mov
bound
lahf
jmp
push
adc
and
mov
ss
push
fadd
adc
loopne
sbb
pop
out
test
dec
pop
jle
icebp
rcl
dec
inc
dec
or
add
xor
sti
xor
repz
cli
idivl
jns
cltd
mov
inc
jns
in
adc
das
repz
out
fldl
inc
pop
stos
shlb
inc
push
xchg
jne
sbb
mov
mov
xchg
xor
or
pop
and
addr16
push
mov
xor
mov
mov
bnd
decl
cmp
outsl
pop
dec
aas
cmpsb
in
cmp
mov
insl
pop
jae
xor
fsubrs
daa
jl
mov
inc
fnop
adc
or
int3
adc
fsts
cmpb
nop
fwait
xchg
xchg
push
dec
mov
fwait
pushf
or
pusha
push
rorb
les
stos
loopne
aaa
dec
sub
xchg
dec
jecxz
scas
sub
or
call
mov
inc
or
or
fwait
pop
out
lahf
test
test
mov
fiaddl
sub
xchg
sbb
lods
sub
or
sub
ja
iret
mov
fsts
je
imul
scas
cli
inc
sbb
mov
dec
icebp
jbe
call
or
aad
aam
push
mov
sub
inc
enter
adcb
xchg
push
hlt
cld
insb
or
xchg
jae,pn
test
or
shl
jp
mov
movsb
enter
outsl
xchg
push
lahf
pop
pop
sub
aam
dec
or
imul
cmp
test
mov
fimull
push
sbb
jmp
mov
fstl
sbb
dec
sub
icebp
jmp
repz
jb
push
inc
mov
lds
out
bound
inc
xor
in
lods
xchg
pop
aam
or
fsubrs
sbb
pop
fisubrl
aam
or
dec
adc
inc
btr
cmpsl
dec
and
pushf
add
fsubrl
mov
ds
mov
aad
adc
mov
cltd
aam
push
int
repz
xchg
or
dec
xchg
sub
cmp
lcall
aam
push
or
fdivp
push
not
add
shll
shrb
insl
dec
xchg
cmp
fsts
clc
mov
fldcw
movb
out
jae
iret
mov
cmp
mov
jo
cmp
push
out
jge
cmc
xor
in
pop
test
jle
and
popa
fs
xchg
pop
js
pusha
dec
sbb
mov
mov
lds
pop
leave
jne
or
push
mov
jno
in
adc
das
cmp
add
mov
push
jge
lods
pop
sbb
adc
pop
jg
lea
data16
mov
ficoms
sub
jae
nop
xor
pusha
mov
in
sub
and
pop
shl
lods
movsb
divl
das
insb
add
mov
sub
in
dec
dec
push
stc
xor
pop
xor
lcall
sbbl
jo
pushl
pop
pop
sarl
cmpl
rclb
jmp
loopne,pt
dec
adc
sub
add
jne
sub
rcr
jl
xor
test
xchg
das
insb
pop
icebp
jbe
adc
jo
sbbl
int
jne
add
dec
and
cmp
mov
inc
lret
and
and
adc
in
xor
les
popa
or
fiadds
jnp
sarb
adc
mov
cwtl
das
into
mov
jl
push
rep
loopne
push
cmp
loop
jg
ljmp
mov
out
push
leave
sbbb
insl
inc
xorl
xchg
cwtl
and
cmp
je
add
xlat
pop
jg
pushf
inc
aaa
pop
mov
loop
and
add
dec
out
sahf
shrb
dec
dec
lret
adc
mov
inc
jne
jecxz
adc
push
pop
aaa
adc
sbb
ret
xor
sub
hlt
andl
shlb
pusha
and
neg
shl
insb
std
cltd
pop
fwait
sbb
jp
mov
repz
push
mov
mov
loopne
sbb
fsubrs
fbld
push
mov
push
and
inc
fimuls
xchg
fcomps
cmp
cs
mov
shrl
push
leave
rcrl
sub
rcrb
negb
call
push
popa
xchg
sub
mov
imul
push
call
fs
push
mov
mov
cmc
sub
xchg
daa
jno
lret
or
in
push
mov
ljmp
or
pop
ss
push
sub
push
cmpsl
lea
leave
hlt
xlat
loope
xor
sahf
data16
nop
insl
add
aam
gs
add
std
adc
int
dec
aam
ss
in
xor
enter
test
add
pusha
js
arpl
sub
xchg
iret
stc
ret
js
ret
mov
shll
cli
push
shrb
dec
mov
imul
xchg
sahf
pop
push
insl
sub
movl
mov
js
or
mov
or
inc
xorb
decl
xor
jae
into
push
push
test
pop
imul
and
orb
dec
in
jbe
lahf
dec
sub
call
aaa
outsl
scas
lods
push
pop
and
jb
xchg
stos
adc
outsb
pop
popa
mov
and
lods
out
icebp
mov
inc
fmuls
fcoms
pop
mov
and
int
stos
enter
mov
jp
sbb
cmpsb
jbe
sar
sbb
xchg
or
lods
jl
das
aam
adc
jb
js
arpl
ljmp
dec
stos
sbb
call
pushaw
andl
repnz
mov
add
cmp
imul
repnz
aas
xor
pminub
lret
rcl
in
mov
adc
xor
je
xlat
loop
inc
sub
pop
imul
push
push
in
dec
jb
mov
or
dec
imul
pop
stos
push
xlat
test
aaa
pop
pop
insl
outsb
neg
mov
arpl
dec
fsubr
inc
push
test
mov
ja
rorb
mov
push
push
mov
jecxz
mov
pop
sbb
add
loop
pop
xor
inc
ret
push
lcall
cwtl
pop
adc
sti
shld
scas
or
push
movsl
sbb
jbe
mov
inc
dec
repnz
cmpsl
cmp
cmc
in
mov
adc
cmp
pop
pop
xchg
shlb
adcl
pop
fcoml
imul
int3
cli
in
inc
pop
popa
incl
mov
sbb
cli
inc
jg
ljmp
xor
mov
push
jmp
cli
lods
pop
cmpsl
xor
ret
xchg
mov
pop
jg
fsub
adc
fdivr
fiadds
mov
xchg
das
mov
das
cmp
scas
inc
mov
mov
arpl
fmulp
pop
and
inc
testb
cwtl
mov
mov
mov
repnz
push
aaa
loope
pop
push
arpl
std
mov
outsb
ja
and
cmp
int
testl
sub
jnp
mov
lds
mov
lcall
in
jno
imul
mov
lea
mov
rcl
adc
sti
add
test
dec
loop
ljmp
cmpsl
jg
ss
hlt
mov
repnz
cmpsl
pop
ljmp
jns
lds
xchg
jmp
dec
rolb
lret
mov
mov
inc
sbb
add
lods
jecxz
fdivp
lcall
and
jecxz
fidivrs
outsb
scas
nop
and
push
pop
and
or
xor
negb
mov
mov
xchg
test
cs
insl
or
push
das
sbb
aad
dec
lods
fmulp
add
xor
out
scas
mov
dec
pusha
out
leavew
ss
mov
js
aas
mov
add
pop
jno
sub
std
inc
adc
add
lret
or
cs
and
out
mulb
add
mov
ja
lcall
repnz
aad
loop
aas
mov
loopne
jg
inc
out
cltd
ror
cmc
or
mov
lds
fidivl
pop
test
data16
andb
cmp
movsb
mov
push
dec
xchg
into
and
sbb
pop
push
fucomip
cmp
dec
mov
jl
cltd
rcrl
jl
lret
stos
xor
inc
fcomip
stc
adc
sub
lock
ss
stos
push
lods
jae
adc
shll
movsl
adc
mov
movsb
dec
cltd
mov
cmpsb
add
repz
rorb
or
mov
lret
push
inc
xor
jne
les
pop
or
mov
mov
test
ds
jns
push
inc
pop
jle
add
cmp
roll
adc
aad
and
push
sti
loope
ret
ret
adc
cmp
in
cmp
jp
adc
cld
dec
inc
push
pop
add
xor
fildl
xchg
push
fcmovu
clc
gs
jle
pop
jns
push
aam
cmpsb
call
or
sub
inc
outsb
mov
cmp
jg
rcrl
mov
add
adc
xlat
push
or
movsl
lods
cmc
das
popf
xchg
pop
sbb
mov
cltd
push
es
jmp
imul
rorl
subl
and
pop
jg
and
jne
xorb
aad
lock
mov
sahf
push
fwait
out
sub
pushf
mov
fcoml
xor
jecxz
mov
sbb
dec
js
test
or
fmuls
inc
stos
aad
cli
xorl
test
pop
xor
es
gs
nop
ret
cmpsl
sub
data16
jp
pop
cmp
mov
mov
aas
or
sub
clc
test
pop
pop
cmp
sbb
clc
popf
sub
aam
in
out
nop
add
cmp
sbb
jno
add
mulb
dec
sub
push
sbb
js
push
and
pop
pop
or
push
push
pop
std
xor
jecxz
mov
sub
scas
xor
push
push
dec
inc
jl
pop
push
cmp
mov
jb
push
vminss
add
add
insl
push
shr
in
push
sub
push
or
divb
xchg
xchg
lahf
ret
int
js
xor
out
jae
cmp
sbb
xchg
movsl
adc
pushl
ret
lock
divb
pop
add
fnstsw
jnp
imul
pop
gs
scas
shlb
fnstcw
aas
jbe
in
bound
xchg
xor
stos
fdivs
adc
push
movsl
pop
divl
pop
jmp
mov
insl
gs
faddl
ds
fwait
into
fs
add
rcl
pop
shrb
mov
ds
hlt
mov
push
fiaddl
orl
cmc
mov
idivl
and
out
addr16
imul
aaa
push
in
dec
cmp
je
test
insb
out
rcll
xor
push
out
fldl
sub
inc
push
sub
daa
or
inc
psllw
jo
rcrb
cmpsb
movsl
into
das
rcrb
test
sbb
cmp
pop
sbb
sub
mov
sub
mov
neg
repz
push
call
xchg
leave
mov
pop
into
jmp
ds
mov
rcll
pop
sub
movsb
xchg
add
mov
icebp
sub
test
add
pop
enter
cwtl
adc
in
jnp
mov
rorb
inc
or
jg
mov
pop
jbe
dec
outsl
push
sbb
scas
fldcw
movsb
in
xchg
movsl
imul
push
cmpl
ljmp
push
movsb
aas
add
out
and
enter
inc
adc
xchg
ret
sbb
clc
lret
jmp
mov
sarb
negl
xchg
imul
mov
dec
rorl
mov
fs
sub
aaa
push
dec
xchg
adcb
adc
mov
adcl
iret
or
sub
pushf
pop
stc
cmp
xchg
lea
ret
pop
lock
mov
mov
mov
in
jecxz
mov
and
sub
jbe
add
xlat
shrl
imul
idivl
call
outsb
fnstsw
and
pop
adc
lahf
in
test
cs
movsb
push
fdivr
sbb
ret
stos
je
into
in
cmpsb
and
jmp
push
out
ffree
cmp
xchg
fisubrs
scas
pop
jbe
in
pinsrw
int3
stos
cmp
outsl
xchg
je
into
and
pop
stc
dec
popa
insl
fdivs
jge
rorb
pop
inc
daa
nop
icebp
jne
loop
aam
orl
jl
dec
xchg
loop
mov
pop
push
stos
addr16
cmc
bound
cmp
orl
push
test
mov
and
cwtl
ret
dec
add
inc
outsb
in
aas
decl
out
inc
adc
data16
pop
push
loope
rclb
lock
dec
mov
or
xchg
std
sbb
jle
mov
daa
movsb
imul
fwait
sbb
add
adc
cli
int3
jg
cmp
outsb
dec
pop
testl
int
shlb
inc
sbb
xchg
add
dec
rcr
xor
mov
movzwl
pop
pop
pushf
pop
xor
push
xchg
out
sub
pop
or
jns
iret
pop
sbb
enter
push
mov
insb
test
cmc
fstl
decb
loop
fsts
test
fbld
or
scas
jge
hlt
push
fcoml
sahf
lods
enter
mov
sarb
sub
dec
jle
test
bound
xchg
lock
in
mov
xchg
jge
jecxz
xchg
ret
test
xlat
in
test
sti
push
fxch
inc
xor
das
addr16
scas
sub
dec
xor
sarl
and
dec
js
xchg
dec
sahf
xor
mov
in
lods
mov
push
test
and
inc
inc
inc
out
jecxz
xor
or
sub
xlat
rorl
mov
mov
mov
jne
out
and
ja
sbb
inc
push
insb
icebp
or
mov
sarb
jo
nop
js
mov
outsb
jns
sarb
xor
mov
jne
or
mov
jne
popa
add
mov
lcall
push
sti
rcrl
add
cmp
popf
out
adc
xor
jo
ret
xchg
in
mov
daa
je
lahf
shlb
mov
pop
push
pop
push
loopne
add
popf
cmp
outsl
ret
rcll
inc
or
xchg
pop
xchg
enter
xchg
into
jne
imul
lds
sub
or
aad
stos
daa
jl
or
sahf
xchg
test
sub
jmp
sub
add
addr16
xchg
gs
iret
scas
jmp
xchg
pop
mov
adc
inc
and
xchg
inc
cmpb
xchg
sti
and
mov
cmp
into
shll
push
lds
pushf
pop
mov
jno
std
pop
cltd
mov
out
push
push
not
iret
xor
andb
std
and
movsb
inc
sbb
inc
fisubs
in
sti
cld
xchg
sbb
xchg
ja
rolb
mov
mov
inc
in
or
popl
scas
adc
cmp
push
int3
mov
inc
insl
mov
push
pop
xor
popf
pop
aam
mov
jp
or
cmp
push
insl
iret
adc
aaa
pop
sbb
push
sub
mov
sub
popf
mov
lds
test
aam
or
repz
out
aas
mov
push
xor
int
push
inc
sahf
dec
mov
pop
es
xchg
rolb
mov
insl
push
mov
mov
add
inc
mov
sub
add
push
out
lcall
jb
fistps
arpl
mov
and
jae
mov
lods
jb
add
add
inc
jbe
mov
mov
jg
out
sub
mov
sbb
repnz
mov
ret
mov
dec
mov
shrl
adc
jae
ljmp
mov
imul
pop
xlat
cmp
or
mov
pop
cmp
lds
imul
adc
push
std
outsl
stos
aam
shlb
leave
ljmp
ds
rcl
cmp
xlat
outsl
push
sbb
loope
cmc
cmp
mov
sub
fwait
mov
xchg
imul
leave
les
pop
mov
mov
xchg
push
xchg
es
mov
add
ret
jne
mov
in
ss
aad
pusha
add
xchg
or
ss
pop
mov
sub
mov
cli
scas
xchg
std
lods
mov
mov
jns
mov
and
ret
xchg
ja
or
and
jnp
adc
shrb
inc
das
or
out
cltd
cmp
fadd
in
lods
sub
mov
cmp
xchg
sbb
adc
cld
sub
rcl
fdivs
mov
add
mov
leave
jge
lods
inc
dec
adc
mov
loop
adc
imul
jb
lret
sbb
pop
sub
mov
lea
ss
in
cmc
out
sbb
shr
mov
fsubl
rorl
add
pushf
and
pop
imul
add
sar
ds
pop
or
xchg
fnstenv
enter
add
movsb
jmp
inc
adc
stc
mov
test
jb
add
ret
dec
jo
in
fldl
clc
push
cmp
cmp
or
dec
or
sbb
xchg
inc
mov
lods
pop
sbb
ss
jp
sub
scas
inc
cmp
xchg
outsb
mov
dec
mov
lret
sub
cli
push
xor
mov
int3
mov
das
mov
adc
pop
dec
nop
pushf
push
in
push
stc
lods
stc
xchg
retw
jl
pop
or
inc
repnz
mov
fnstenv
arpl
xchg
lods
pop
xchg
jbe
mov
sub
pop
in
push
jp
inc
add
xchg
mov
scas
test
or
sub
mov
xlat
pop
out
notb
orb
jp
out
adc
lret
inc
ljmp
les
mov
xchg
sub
and
repz
in
out
iret
or
xchg
add
dec
andl
das
orb
add
fmull
lahf
dec
or
and
cld
scas
test
or
hlt
sbb
inc
sub
mov
jge
add
sub
dec
mov
les
jl
test
inc
pop
and
mov
enter
and
inc
mov
add
enter
sub
cmp
dec
std
inc
rorb
xchg
jmp
xchg
out
mov
push
inc
imul
cmp
in
ljmp
mov
adc
enter
sbb
push
test
mov
cmp
ficoml
mov
mov
mov
test
pop
xor
push
pop
dec
int
ds
sub
push
add
push
int
lahf
push
dec
inc
aam
cltd
sub
and
or
cwtl
sub
xchg
xchg
dec
mov
cld
into
cmp
xor
push
pop
mov
fs
lcall
mov
xchg
push
mov
test
mov
fisttpl
mov
xchg
pop
fs
pop
cmpb
and
push
mov
lock
fstps
mov
mov
add
mov
jb
xor
add
out
mov
cld
call
push
jl
cltd
add
jmp
jns
dec
das
jb
sbb
mov
pop
pop
mov
sub
adc
add
insb
cmp
jnp
sub
lret
jb
pop
out
bound
sarb
loop
stc
pop
test
and
push
stc
xor
xor
das
pop
imul
mov
clc
add
sub
pop
shl
add
push
in
imul
cmp
mov
pop
in
ljmp
pop
jns
add
add
xor
imul
pop
mov
jnp
jb
add
and
out
jo
int3
dec
andb
outsb
mov
popa
push
lea
daa
shl
inc
andl
lea
lds
add
adc
int3
cmc
xor
jb
pop
rcr
adc
pop
es
roll
push
sbb
xchg
inc
cmpl
decl
mov
loope
aam
fldl
loope
pop
sbb
mov
fbld
mov
cs
dec
xor
jns
mov
xchg
cmc
xchg
aam
lret
ss
pusha
push
jg
mov
mov
insb
push
idiv
in
sar
pop
in
sbb
xchg
adcl
flds
push
mov
and
sti
int3
inc
leave
sbb
std
mov
adc
clc
mov
inc
sbb
dec
orl
mov
minps
out
cmp
das
pop
repz
add
mov
sahf
xor
and
jnp
out
jmp
jb
sarl
push
mov
or
xor
in
or
xor
sub
popa
outsb
nop
lds
ss
nop
pop
cli
sbb
or
je
ret
pop
fwait
mov
negb
movsb
daa
pop
jne
mov
ds
cmp
ret
mov
inc
jne
and
mov
dec
pop
pop
loop
or
xor
jmp
cmp
xor
iret
xor
inc
jb
push
inc
aaa
insb
scas
lcall
inc
inc
xor
add
pop
sbb
into
jg
ret
lods
js
dec
jmp
mov
call
push
jnp
das
and
add
je
pop
inc
mov
imulb
adc
cmpb
inc
or
addr16
sbb
push
push
xchg
bndstx
cmp
cmp
adc
push
mov
jns
data16
jb
sub
xor
shll
fistpl
inc
inc
add
movsl
jbe
jp
aas
cmc
fildll
push
loope
cli
xchg
call
into
pushf
js
shlb
icebp
jmp
jge
imul
cmpsl
setge
push
inc
fs
dec
inc
sub
lds
aam
adc
pop
mov
aas
es
aas
outsl
mov
jmp
and
fs
jno
sti
mul
push
popf
in
dec
rdtsc
adc
push
movsl
xlat
mov
push
sub
pop
leave
jg
lret
stc
bound
out
rcrl
stc
add
icebp
mov
cli
pop
mov
subl
add
cmp
and
sub
inc
jge
rorb
test
push
fnstenv
jmp
pusha
out
loopne
cmp
mov
or
lahf
pop
sbb
adc
sub
mov
xchg
mov
jo
add
sbb
dec
js
and
jmp
sbb
mov
jnp
sub
sub
mov
jecxz
lea
or
aad
pushf
data16
jne
and
loope
mov
xor
mov
and
les
pop
jp
inc
test
ret
leave
pop
push
cmp
sub
xor
xchg
add
jp
dec
filds
cwtl
mov
shrb
out
pop
dec
jno
ljmp
cmp
mov
mov
mov
and
je
movsl
fwait
out
shl
push
mov
push
and
fsubp
aas
jle
inc
cmp
sbb
clc
cld
xor
sub
das
out
cmc
dec
push
aad
in
ljmp
cmp
inc
push
dec
fsubl
mov
adc
popf
stos
adc
or
hlt
out
sub
loop
ret
out
mov
fidivl
push
jp
push
loope
gs
xor
rcll
mov
nop
jmp
add
in
setb
sub
sub
sub
dec
repz
sub
xor
rcrb
inc
xor
je
pop
nop
mov
cmp
lcall
pop
test
xorl
inc
movsl
jge
inc
xlat
sub
jnp
pop
jno
adc
lret
jno
test
das
cltd
jecxz
imul
out
inc
push
arpl
cli
aas
lods
lcall
xor
pop
notb
xchg
mov
imul
fs
mov
pop
pop
iret
cmpsb
or
adc
call
leave
ss
addr16
xchg
jge
mov
lahf
push
insl
push
pop
insl
jg
jecxz
mov
hlt
and
testl
stos
fnstsw
insl
ljmp
and
pop
fstps
mov
pop
mov
imul
in
lret
mov
int3
xchg
mov
lods
ss
fisubl
outsb
jl
xchg
mov
sbb
push
stos
xchg
ficoml
xchg
lods
aad
rorl
and
mov
les
outsl
mov
ss
xor
bound
mov
and
or
xchg
sub
filds
inc
and
ja
pop
ret
lret
push
xor
jnp
add
fstl
xchg
cmp
dec
sub
xchg
inc
dec
adc
loopne
daa
lods
lods
fmulp
sahf
pop
jne
adc
mov
or
mov
sub
xchg
and
inc
fisubs
xchg
test
pop
lods
and
cmpsl
push
pop
fwait
orb
xchg
outsb
outsb
imul
int3
fisubs
popa
mov
adc
neg
mov
pop
and
jo
ficomps
xchg
cli
popa
push
xchg
mov
cwtl
xchg
jecxz
cwtl
je
cmp
mov
inc
jns
mov
mov
xadd
iret
in
stos
int
xchg
mov
stos
jo
aad
in
jge
mov
xlat
fcomps
xchg
shll
and
sbb
xor
shl
call
stos
xchg
pushf
pop
push
add
mov
sbb
mov
jl
repnz
sahf
mov
daa
and
mov
jno
adc
lret
dec
iret
pop
cmc
movsl
sti
dec
mov
inc
jmp
test
mov
lcall
and
push
jmp
and
pop
cwtl
outsl
xchg
pop
add
mov
outsl
lahf
fadds
pop
popf
sti
leave
push
push
push
jnp
jo
jp
mov
adcl
mov
adc
ret
subl
mov
pop
xor
inc
xlat
cltd
jecxz
push
cmpsb
insl
pop
cmp
icebp
or
cmp
or
push
jae
sub
imul
out
adc
push
sub
or
add
aaa
dec
mov
add
adc
jg
mov
stos
add
push
add
add
add
add
add
add
add
add
add
add
add
cmc
add
add
add
add
sbb
add
imul
add
add
add
add
add
add
add
inc
add
add
add
add
add
adc
add
add
add
jno
add
add
add
add
add
add
add
inc
add
add
mov
add
in
add
add
add
add
add
add
mov
mul
cmc
push
mov
test
mov
mov
cmp
pop
js
jbe
repnz
inc
rcrl
cmpsl
jmp
hlt
push
push
xchg
repz
xchg
jl
lret
into
cld
jbe
sub
inc
or
push
lods
jg
xor
mov
test
loope
push
jnp
mov
gs
insb
popf
sbb
xor
xor
lea
and
inc
stos
daa
cltd
inc
inc
stos
icebp
cwtl
call
add
movsl
stos
push
ljmp
scas
xchg
jl
push
xchg
cwtl
test
sbb
jns
insl
cli
out
adc
out
and
jns
or
data16
or
dec
imul
bound
mov
mov
fsubr
cmp
pop
adc
mov
outsl
or
push
imul
js
testl
fists
adc
dec
shlb
aaa
xor
dec
aaa
push
imul
pop
adc
out
stos
fidivl
pop
sub
lds
sub
or
ret
loopne
mov
push
cmp
mov
mov
arpl
ljmp
push
popa
leave
and
fiaddl
lcall
mov
or
xchg
mov
fadds
ja
sbb
inc
add
push
imul
fsubs
fwait
xchg
mov
cli
lock
jno
mov
fnstsw
cmpsb
cmp
cmpsb
int3
xor
mov
xor
mov
mov
push
fwait
leave
mov
pop
xchg
popf
inc
js
nop
mov
lods
cs
inc
int
mov
xchg
cmpl
sub
mov
add
push
bound
sti
imul
rol
xor
cmpsl
and
push
into
push
jnp
scas
sub
jne
pop
add
mov
ret
pushw
pop
ss
popf
out
stc
push
ja
xor
cwtl
push
js
lods
adc
mull
aas
push
jle
ficompl
mov
jecxz
insl
out
call
and
js
das
std
aam
cmp
add
adc
add
or
push
outsl
mov
in
cmp
mov
adc
loope
adc
dec
into
test
mov
hlt
or
loopne
adc
xchg
and
mov
dec
add
int
xchg
je
fcompp
push
repnz
cmp
insl
xor
subb
in
lea
aaa
mov
jb
add
mov
roll
hlt
jae
in
std
pop
cli
jns
loopne
fidivl
push
mov
fimull
in
mov
adc
out
adc
cmc
sub
mov
sub
cmpsb
jo
mov
pop
jecxz
es
in
out
stos
outsl
mov
xor
scas
dec
add
mov
add
dec
mov
inc
repz
popl
pop
aas
lahf
addr16
arpl
iret
push
nop
shlb
adc
imul
cmpsl
jnp
mov
inc
push
pop
test
add
push
dec
mov
adc
jbe
push
sub
into
or
stc
jmp
or
cmp
push
inc
inc
jg
lcall
enter
and
mov
mov
push
sub
push
inc
jo
and
xchg
into
dec
sub
imul
fists
xor
adc
scas
pop
push
xor
outsb
leave
or
fisubl
or
das
jo
mov
fisubl
jp
outsb
lret
pushf
lea
mov
and
sbbl
sbb
xor
pop
push
sbb
mov
movsb
mov
mov
sbb
insb
sahf
xchg
dec
test
sarb
add
mov
pop
pusha
and
pop
xchg
adc
enter
movl
or
xor
pushf
fidivl
jecxz
and
pop
testl
push
das
hlt
push
push
mov
push
and
push
shll
push
xor
scas
and
test
ss
jge
fs
mov
loope
inc
cmp
loopne
inc
movsl
stos
outsb
shrb
idivl
inc
movsl
in
sub
aaa
frstor
jno
pop
pop
inc
push
xchg
jae
xchg
xlat
adc
push
xchg
cmp
inc
push
mov
jecxz
out
fcmove
adc
dec
xor
push
sub
lea
les
lcall
mov
sub
mov
mov
jae
pop
mov
in
int
in
leave
pop
ds
jle
mov
ss
adc
movsl
cmpsl
adc
in
add
pop
loop
sbb
sub
add
mov
mov
insb
pop
pop
jo
in
rorb
ds
je
adc
sbb
sbb
add
mov
fildl
popa
les
push
ret
and
ljmp
mov
test
shrd
add
or
in
cmp
sbb
xor
cmpsb
xchg
lock
loop
out
mov
stos
jl
out
jecxz
jge
cwtl
mov
adc
ret
je
push
je
in
sbb
mov
fsub
jp
fcoms
test
hlt
cltd
sub
xorb
fadds
jae
lahf
cmp
and
push
sbb
jnp
mov
fs
cmp
lahf
cmp
inc
jecxz
sub
inc
cmpsl
mov
cs
xchg
sub
es
test
mov
pop
and
dec
xor
into
mov
add
and
xchg
mov
and
cmpsl
loop
cltd
add
push
sbb
subb
sbbl
mov
mov
sbb
push
fldenv
enter
push
adc
js
adc
jl
outsb
and
xchg
out
push
pop
scas
stos
mov
mov
aas
in
lcall
les
rcll
fidivrs
add
jg
adc
pop
stos
notb
dec
enter
pop
cltd
dec
cmp
test
push
shrb
rcrl
mov
inc
push
lret
dec
cwtl
mov
pop
inc
ss
test
inc
sbb
dec
mov
lods
sub
adc
and
sub
mov
aas
ror
jge
jge
int3
ror
imul
push
out
das
mov
add
xchg
inc
and
inc
inc
sub
mov
mov
push
push
scas
lea
push
sbb
icebp
cmc
mov
or
or
xor
pop
dec
sbb
nop
jp
xchg
push
mov
outsb
inc
shlb
daa
mov
pop
xchg
js
jnp
sbb
lret
mov
push
test
mov
push
xchg
outsl
nop
int3
pop
int
mov
push
mov
and
das
jae
mov
dec
pop
dec
jae
add
xor
pop
imul
sbb
sbb
dec
jge
pop
movlhps
lds
push
data16
lea
inc
sbb
mov
hlt
xchg
fs
mov
jle
test
adc
rcrb
xchg
mov
push
mov
push
push
jecxz
fstpl
jecxz
xchg
push
or
push
xlat
subb
lcall
punpcklwd
dec
jb
repnz
je
inc
and
fsubs
adc
mov
call
out
mov
rcll
fwait
pop
loope
pop
test
sbb
and
pusha
ret
pop
test
cmp
xor
pop
jb
outsl
xorl
xchg
xchg
in
pop
outsb
pop
shlb
cmp
pop
lahf
cmpsl
sub
mov
out
jae
xchg
into
xor
lahf
movsb
sub
xor
scas
movswl
and
jmp
jg
or
pop
xor
cmp
in
mov
pop
test
lea
xor
adc
inc
jo
xor
aad
ds
push
add
mov
inc
push
into
lods
cs
fs
mov
xchg
add
andl
rsm
sbb
fsubl
mov
push
stos
mov
iret
out
push
nop
call
hlt
sbb
and
xchg
ficoms
lgs
je
push
xchg
or
imul
shrl
sbb
outsl
sub
inc
movsl
sahf
insb
lods
sub
mov
pusha
movb
xor
sub
test
jge
fwait
adc
jb
addb
push
fstpl
jb
ljmp
lea
sbb
jo
daa
inc
loop
mov
fnstsw
sub
scas
lods
cld
pop
sbb
sbb
js
sub
push
add
cmp
add
movsl
jb
dec
and
dec
jecxz
cmp
and
add
cmp
add
fnsave
mov
fwait
or
sub
push
mov
repz
lds
add
int3
pop
mov
pusha
add
cmp
sahf
xorl
mov
or
cmp
inc
iret
fists
ret
movsl
xchg
sbb
xchg
iret
push
cwtl
sub
dec
sahf
fstl
jge
cmpb
int
jecxz
sbb
sub
nop
test
adc
std
hlt
loope
mov
aas
sub
push
adc
shl
sub
dec
push
mov
lcall
or
sub
jnp
ds
mov
pop
xor
mov
fisubrs
and
out
adc
stos
lods
xor
push
xor
insl
pop
push
sub
cli
pop
pop
std
jmp
xchg
iret
xchg
pop
hlt
sub
jno
faddl
data16
mov
popf
mov
jp
xchg
xchg
mov
mov
mov
xor
sbb
popa
lods
loope
push
popa
mov
cwtl
movl
stos
mov
mov
mov
inc
inc
popf
std
xor
mov
xor
add
mov
mov
inc
xchg
int3
cli
or
dec
js
addr16
mov
adc
sub
fists
repz
aad
mov
push
bound
xchg
call
aaa
test
push
icebp
sub
mov
movsb
in
mov
mov
test
inc
mov
or
adc
ret
mov
repz
scas
push
sti
cmpsb
mov
stc
mov
les
xchg
sbb
rorl
pop
push
cltd
or
scas
push
into
mov
js
adc
jae
fwait
int3
ret
leave
add
popa
mov
push
jns
fdivrs
lcall
jl
nop
out
dec
push
shl
test
pop
jae
pop
jbe
xchg
and
rol
adcl
das
test
loopne
xor
jns
pusha
sbb
test
add
mov
test
inc
push
mov
push
imul
and
pop
xchg
push
dec
jnp
cmpsb
inc
ljmp
orb
mov
sahf
jns
add
mov
push
icebp
lock
cmp
lods
scas
ss
dec
daa
mov
push
xor
ficoml
push
sub
add
sbb
lahf
lods
in
insb
out
and
add
and
cmp
or
sbb
in
scas
inc
xchg
sub
adc
add
cmp
adc
add
dec
xorb
or
mov
jle
pop
jae
sbb
out
push
xchg
cwtl
cmp
test
loop
inc
lds
jle
push
adc
jmp
push
mov
push
or
icebp
int
pop
lar
fcmovne
sub
cmc
and
ss
cltd
int3
jo
stos
neg
cmpsl
addl
mov
movsb
fidivl
lock
imul
xchg
cmpsl
xchg
sub
aas
cwtl
dec
or
shll
in
clc
pusha
lret
xchg
pushf
in
and
icebp
cmc
cmpsl
dec
cmc
enter
jle
pop
dec
fnsave
ds
mov
gs
jecxz
jg
insb
mov
mov
mov
cmpsb
mul
add
jne
push
sti
push
mov
popa
cltd
sub
es
dec
cmp
mov
out
roll
in
inc
ljmp
sbb
sahf
or
mov
movsl
pop
out
mov
jp
pop
xor
inc
into
inc
xor
out
bnd
or
xor
add
sbb
fdivrs
int3
inc
iret
aam
gs
cmp
jnp
push
xorl
mov
or
inc
pop
cmp
jp
xchg
dec
xor
shlb
add
push
push
ret
inc
jnp
data16
scas
insb
add
push
jnp
clc
and
das
xchg
cmp
aad
decl
xor
push
loope
mov
jo
sub
mov
inc
push
and
sbb
nop
aad
aas
mov
aam
sub
mov
shrl
inc
hlt
xlat
jp
mov
xchg
sub
test
lret
cs
and
cmp
daa
mov
enter
movsb
imul
push
jle
sub
sub
mov
jge
or
sub
jnp
xchg
ljmp
andb
or
loopne
dec
iret
push
push
and
jae
popf
sub
xor
jne
inc
push
and
mov
sbb
rol
repnz
jnp
int3
or
push
sub
lret
inc
and
cltd
in
xor
cs
clc
add
sbb
mov
lea
insb
pop
popa
addr16
lcall
fucomi
jne
sub
adc
push
push
jle
out
jp
push
pop
mov
xor
add
imul
cmp
leave
icebp
aaa
outsb
std
iret
les
test
es
setl
xor
insb
mov
insb
sub
daa
xor
outsl
mov
mov
sar
inc
cwtl
leave
inc
fsubl
xor
pop
leave
int3
add
in
pushf
rol
xchg
shld
aam
sub
pop
mov
and
loop
pop
std
fisubrl
cmpsl
jns
push
mov
push
dec
scas
fcoml
loopne
loope
data16
push
popa
leave
fcmovu
in
xor
gs
daa
scas
pop
out
dec
xor
xor
dec
push
dec
mov
fmuls
jg
push
loope
inc
push
xchg
movsl
lock
std
mov
jg
ret
fcoms
push
jmp
psubusb
sarl
cld
add
push
cmpsb
pop
add
inc
or
xchg
xlat
arpl
cs
pop
pop
ljmp
out
jbe
into
test
jne
add
cld
xchg
ja
xor
rcl
lods
aaa
sbb
out
out
xorl
pop
lea
jle
sub
xchg
xor
push
in
mov
repnz
js
addl
adc
pop
dec
out
jl
shlb
cmp
cmpsl
dec
movsl
int
shufps
mov
aas
in
stc
gs
mov
mov
les
adc
sbb
fmulp
mov
enter
ret
cmc
jb
outsl
mov
stos
enter
shlb
dec
inc
xchg
fcmovne
mov
leave
aam
ret
sysexit
inc
cmp
fisttpl
negl
mov
jmp
test
out
jge
jl
les
clc
mov
imul
sbb
xchg
imul
dec
cmp
insl
mov
push
or
add
sub
addr16
stos
adc
pop
jmp
nop
jle
call
mov
pop
daa
inc
push
stos
adc
push
dec
rorl
jmp
out
in
arpl
cmc
je
rcll
shlb
ret
frstpm(287
cmp
pop
sbb
movsb
loopne
loop
outsl
adc
push
out
lods
push
sub
lods
push
test
ret
push
ss
push
or
pop
xlat
jge
pop
in
insl
loop
jno
add
xchg
imul
gs
lock
pop
imul
nop
sbb
xchg
mov
push
push
mov
les
lock
dec
xor
jno
rclb
jns
xchg
mov
repz
inc
stos
adc
lret
popf
push
aam
cmp
shrb
and
stc
scas
arpl
adc
and
lock
std
adc
nop
in
jbe
jmp
call
push
push
aas
add
mov
test
dec
outsl
lods
push
std
call
iret
cmc
dec
sub
pop
je
inc
scas
cld
movnti
in
insb
push
push
mov
fstpl
jge
add
dec
sbb
xchg
insl
sbb
lahf
mov
inc
les
movsl
leave
add
jl
out
mov
sbb
insb
sbb
lods
pop
and
mov
bound
mov
xor
nop
jno
mov
or
jno
cwtl
int
addl
push
lds
pop
test
cld
shll
aam
pop
popa
outsb
dec
lods
lea
xor
adc
xor
mov
pop
fimuls
les
ds
xor
insl
xchg
subl
sub
clc
lods
ds
xchg
xor
enter
mov
lods
inc
scas
movsl
xchg
je
je
mov
std
push
push
out
out
and
ja
cmpsl
mov
pop
xchg
mov
cmp
imul
outsl
dec
push
mov
idivb
aad
pop
push
shlb
jmp
xor
pop
cmp
cmc
pop
sub
mov
xor
xchg
mov
mov
push
add
stc
lea
dec
daa
cli
rcl
mov
cmc
push
movl
das
jnp
ret
stos
sbb
pop
daa
push
lock
mov
faddl
icebp
and
es
clc
lods
jmp
inc
sarb
mov
and
cmp
mov
cmp
sub
xchg
cmp
sbb
mov
and
mov
and
xor
insb
xchg
pop
lock
dec
test
jp
aam
mov
sub
cmpsb
mov
call
sub
xchg
test
popl
jbe
push
push
pushf
mov
jne
push
outsl
out
cmpsb
test
pop
ret
and
jnp
pop
mov
fisttpll
stc
sbb
orb
ret
out
fists
mov
test
mov
mov
cmp
insb
pop
cmp
adc
cmp
cwtl
jno
push
inc
fcoms
mov
in
lds
insb
add
jle
mov
jb
std
fsubrs
stos
call
in
mov
insl
dec
shll
fcmovnb
out
lods
push
imul
or
stos
cld
ret
xchg
sbb
imul
jp
mov
cmp
addl
jl
inc
lock
ret
ljmp
mov
daa
jmp
inc
inc
adcb
aam
mov
iret
jnp
sub
dec
bound
sub
adc
sbb
mov
xchg
hlt
out
sub
dec
lret
sbb
xor
mov
or
mov
stos
imul
gs
dec
xor
ja
scas
out
jle
mov
pop
jmp
sub
lods
rol
std
sub
sub
gs
or
or
clc
lret
test
jg
pop
int
jp
clc
aad
pop
dec
inc
dec
or
inc
xchg
decb
je
sbb
cltd
mov
aaa
lods
and
lret
sub
inc
mov
pop
in
sete
iret
pop
je
fwait
push
xlat
xor
mov
jbe
cltd
pop
lods
jns
test
push
mov
loop
dec
mov
in
jbe
stc
std
pop
ror
jecxz
les
sbb
adc
pop
insl
mov
add
xor
mov
adc
gs
adcb
stos
call
xor
movsb
sbbl
sti
and
jnp
test
cmp
out
mov
shll
or
das
int3
add
mov
cld
test
xchg
dec
outsb
out
mov
jb
leave
cmp
push
jns
mov
aas
push
sbb
arpl
add
in
aam
pop
jbe
push
in
mov
jge
loope
pop
inc
insl
orl
in
xchg
jne
shll
mov
dec
dec
shlb
or
lock
xchg
ja
mov
in
push
and
xchg
inc
push
jmp
push
sub
sti
and
lret
cmp
push
lods
jno
pop
out
push
jl
enter
jg
std
push
addr16
mov
mov
adc
cmp
out
or
mov
dec
jnp
ret
pop
jne
je
ja
push
xchg
cltd
push
sbb
sub
mov
jae
adc
mov
add
in
xchg
xchg
xlat
push
ret
inc
arpl
inc
popf
mov
fs
pop
and
rclb
push
cmpl
jp
rolb
mov
je
js
cmp
call
cmp
icebp
push
dec
pop
lea
ret
insb
jo
fs
pusha
aas
cltd
rcrl
sub
frstor
into
dec
out
mov
bound
mov
int3
pop
sub
sahf
sbb
and
or
dec
push
or
add
mov
std
mov
add
adc
and
out
imul
sub
scas
fs
in
push
scas
xor
imul
mov
movsl
cmpsl
sub
aad
icebp
jns
scas
sbb
pop
int
mov
bound
pushf
mov
jge
insb
aas
add
jmp
aas
daa
aaa
jp
cmp
in
ljmp
sub
clc
inc
adc
movsl
rcrb
insb
imul
adc
jae
rcrl
ret
xchg
testl
int3
jge
cmpsl
outsl
adc
daa
mov
sub
mov
add
lea
dec
dec
push
lret
das
in
repnz
insl
outsb
mov
fdivrs
sbb
xchg
mov
movsb
ret
fsubrp
sarb
lcall
leave
into
call
sti
dec
lret
sbbb
pop
fisubs
int3
mul
cwtl
xchg
sbbb
mov
ljmp
jge
dec
test
mulb
and
adc
mov
jno
aam
popl
je
into
data16
out
fdivp
mov
add
pop
pop
push
mov
sbb
jae
shlb
inc
pop
fisttpll
fwait
pop
xor
sub
hlt
into
pushf
ja
push
jne
mov
aad
cmpb
inc
fidivs
cwtl
iret
cs
or
mov
xor
in
cs
aas
sbb
inc
cld
mov
jg
jb
out
push
push
adc
dec
pinsrw
mov
inc
mov
xor
in
std
cli
outsl
and
or
sub
or
lcall
sbb
fmuls
cld
ds
loope
lcall
stc
ret
lods
mov
xchg
pop
and
jbe
into
mov
pop
push
cmp
xchg
pop
xor
bound
shrb
cmp
dec
mov
push
push
add
xor
int3
add
xchg
daa
xchg
in
inc
mov
pop
cmp
push
push
fsubrp
mov
push
sbb
push
stc
addr16
pop
jle
insb
out
push
and
popl
loopne
xchg
xchg
cmp
sub
and
cmpsl
add
jmp
inc
out
ja
jb
cmpl
subl
add
mov
cmp
pusha
xchg
jnp
mov
int
rcr
mov
mov
pop
test
mov
push
sub
aam
leave
sahf
xchg
out
shrb
fstpt
das
dec
dec
and
out
lret
mov
sbb
cmc
pop
add
adc
inc
adc
xorb
sbb
mov
inc
pushf
fcoml
pop
xlat
loop
test
loopne
test
push
std
in
mov
aaa
cmp
repnz
sub
or
lea
cmp
loop
pop
mov
pop
lret
xor
mov
xchg
lods
pop
rol
adc
cs
dec
push
hlt
bnd
mov
in
mov
or
xor
add
out
dec
sbb
sub
mov
xor
repz
arpl
inc
and
add
xor
inc
psadbw
in
xor
xchg
inc
sbb
dec
fdivr
ret
mov
sub
pop
jo
pop
lods
push
dec
lcall
addr16
xor
in
mov
dec
dec
xchg
jb
cli
mov
loope
pavgb
inc
jns
jb
inc
add
in
std
pop
or
orl
test
frstor
sbbl
inc
mov
fucomip
jns
push
jb
pop
push
ds
pop
mov
rorb
sahf
shl
mov
js
or
pop
pop
sub
xlat
inc
and
adc
sub
sti
roll
mov
jp
fdivrl
movsl
mov
ja
sbb
dec
outsl
sbb
enter
stos
fs
gs
sub
jp
xchg
cmp
in
xlat
xchg
cmp
inc
outsl
out
sbbl
bound
pop
aas
add
sbb
loopne
stos
add
stc
cli
imul
mov
cmp
push
out
adc
xor
push
jmp
mov
and
pop
fnstenv
or
pusha
fstpt
inc
ret
push
sub
push
pop
sbb
cmp
cmp
outsb
lods
cwtl
loopne
lret
paddd
sub
shll
test
pop
pop
push
mov
jnp
incb
mov
adcb
std
ss
add
sbb
pop
mov
gs
xchg
fcmovne
cli
int
xchg
cltd
xor
xchg
and
out
insb
pop
test
cmp
xorl
orl
xchg
cmc
arpl
jle
js
js
lret
stos
mov
mov
das
cs
je
cltd
mov
jecxz
dec
jne
je
cmp
sbb
insl
pop
push
lods
out
jo
enter
inc
lcall
xchg
dec
ss
push
push
scas
clc
xchg
iret
mov
inc
push
push
mov
sti
andb
mov
cwtl
inc
jo
or
pusha
jmp
xchg
dec
outsb
test
test
lock
rcl
push
leave
scas
sbb
sbb
into
fisubl
sti
or
sbb
sbb
and
push
loopne
xchg
test
test
outsl
nop
mov
dec
mov
jbe
adc
push
repz
xor
mov
sahf
cmp
lods
loope
sub
mov
dec
inc
mov
dec
adc
enter
scas
jnp
inc
and
gs
ss
je
lahf
hlt
sub
gs
sub
push
push
lahf
jecxz
xor
xor
addr16
and
pop
sub
sahf
ljmp
xchg
fstpl
adc
cmp
mov
rorl
or
add
cmp
lods
aaa
repnz
sub
out
leave
adc
cli
cmpsl
push
inc
sbb
lea
sub
sti
mov
pusha
mov
andb
out
insb
jnp
cmp
pop
pop
aaa
add
mov
in
push
lods
ss
sbb
mov
cmpsb
inc
ret
mov
jmp
mov
xchg
pusha
xchg
hlt
les
xchg
out
mov
cmp
data16
cld
jp
jbe
outsl
pop
hlt
mov
ret
leave
int3
cmp
inc
push
gs
ret
in
out
cli
xchg
int
aad
test
xchg
fstl
cmp
pushf
and
sub
fstps
jbe
pop
push
pop
ja
add
push
mov
jecxz
mov
call
inc
push
add
sti
sbb
mov
lods
pop
xor
movsl
xor
push
adc
sbb
les
push
addr16
mov
sub
adc
es
xchg
insb
inc
jbe
aad
scas
sahf
mov
ret
pop
ljmp
iret
mov
sub
enter
jo
psraw
shrb
xlat
fisttps
shl
cli
out
je
sbb
ja
add
enter
xchg
pop
sbb
das
data16
or
dec
or
nop
add
stos
loop
lea
mov
cmpsb
cmp
adcl
add
push
pop
jl
mov
int
loope
and
popf
xchg
jmp
push
int
dec
inc
fbld
push
cld
lahf
push
in
mov
enter
fldenv
les
pop
enter
rolb
shl
int3
addr16
jmp
insb
push
jbe
cmp
in
push
inc
fisubl
adc
pushf
push
mov
dec
lret
inc
adc
push
cmc
jmp
aad
jbe
or
inc
add
aaa
cmp
mov
icebp
aad
hlt
xor
xchg
das
push
pushf
adc
scas
cmp
sub
cld
ss
fisubs
adc
jl
xchg
sbb
cmp
inc
or
sbb
cmp
pop
ds
loope
xchg
mov
jecxz
pop
mov
int3
dec
not
sti
mov
mov
pop
cmp
mov
mov
cli
fsub
arpl
pushf
push
push
shr
in
add
or
nop
mov
sub
movsb
loop
test
cmp
cli
pop
inc
cmpsl
mov
sub
cmp
in
notb
adc
std
pushf
push
test
shl
cmp
and
out
dec
popf
push
xchg
xchg
lea
xlat
repnz
jg
stos
sub
push
and
in
lea
lret
pop
dec
insb
push
xor
pop
rcrl
popf
ja
add
stos
leave
mov
aas
xor
cmp
dec
push
add
and
decb
shrl
cmp
push
stc
xchg
xchg
insb
sbb
jg
stos
movsl
sub
jg
jbe
divl
add
leave
mov
inc
mov
sbb
mov
inc
ffree
sub
rorl
lahf
dec
orl
push
mov
mov
mov
pushf
jbe
cwtl
repz
jns
icebp
into
cmp
int
mov
lods
outsl
in
pop
xor
mov
add
out
lret
shll
popa
out
pushf
push
sub
sub
ljmp
cmp
outsl
imul
adc
pop
adc
xor
fidivs
insb
cmc
fadd
dec
test
and
push
or
ja
ss
mov
icebp
out
xchg
aam
pop
inc
addb
pop
mov
lock
lods
xchg
fwait
into
xchg
rep
std
popl
lcall
movsb
mov
mov
out
add
cmp
pop
cmpsb
pop
out
inc
adc
dec
movsb
out
xchg
sub
cld
jnp
or
outsl
jmp
flds
testb
jge
push
mov
dec
add
dec
call
cmp
mov
adc
xlat
loope
insb
popa
movsb
insl
add
in
cmc
mov
icebp
cmpl
adc
adc
aam
cmp
addr16
jecxz
aad
xlat
jge
lahf
xchg
test
pusha
stos
cmp
and
shl
sti
fsubs
arpl
je
pusha
enter
das
mov
loop,pn
add
adc
out
repnz
mov
fs
sbb
and
bsr
aaa
sbb
mov
in
or
ret
scas
cmp
push
sti
hlt
lcall
push
xchg
push
and
addr16
enter
cli
aad
fwait
jns
les
and
outsb
mov
adc
lods
sbb
out
repnz
ret
ds
pop
xchg
arpl
jb
add
add
sub
add
add
add
add
add
adc
jg
cwtl
add
add
add
mov
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
icebp
add
add
add
add
lcall
add
add
addl
add
add
add
add
add
add
add
add
add
add
add
add
mov
fucomp
and
mov
cmpb
cmp
inc
adc
dec
add
cmovae
lds
push
mov
xchg
into
ror
mov
mulb
adc
push
jno
test
int3
mov
std
int
or
sbb
xchg
popa
pop
push
jg
sbb
hlt
test
rolb
rcr
jne
inc
push
in
int3
int
repnz
inc
dec
xor
jae
dec
jmp
xor
jmp
loop
mov
add
fs
pop
leave
pop
out
outsb
ret
gs
pop
cmp
mov
dec
popa
jno
push
ljmp
in
jae
fnstenv
or
push
punpckhbw
jge
push
dec
inc
jmp
or
sarl
mov
addr16
pop
and
outsb
les
sbb
sti
adc
stos
mov
rcl
inc
repnz
lret
mov
scas
push
mov
add
mov
aam
in
sbb
ss
stc
fidivrl
imul
test
inc
idiv
push
fs
sbb
hlt
je
mov
cs
mov
or
jno
adc
jle
je
mov
xchg
out
fs
jnp
shlb
push
or
mov
inc
jbe
test
insb
ds
push
mov
fdivrs
xor
xchg
hlt
and
test
cltd
mov
roll
dec
sbb
push
aam
in
cmc
jmp
add
dec
call
clc
lcall
addr16
push
push
lea
add
mov
imul
gs
outsl
cs
sbb
pop
pushf
jae
dec
push
inc
in
adc
sub
or
dec
adc
jnp
jg
cmp
push
add
icebp
fildl
lcall
test
lock
xchg
enter
lods
lods
fcmovne
add
xchg
mov
popf
movsl
int
daa
pop
push
arpl
fstps
mov
sti
fidivrs
dec
lret
adc
xlat
out
out
testb
into
scas
cmp
out
pop
mov
or
mov
insl
adc
add
add
sub
outsb
icebp
aad
mov
push
mov
ja
dec
fnstsw
xor
gs
xor
push
out
movsb
fidivrs
lods
movsb
lea
data16
xchg
je
xor
lock
clc
call
push
cmp
faddl
into
or
jns
cs
lods
dec
sbb
daa
fiaddl
lods
adc
sbb
jbe
leave
push
decb
jns
push
and
daa
test
cmp
jge
push
cmpl
icebp
imul
pop
mov
push
jmp
in
mov
mov
lcall
or
mov
ds
ljmp
or
test
sarb
out
cmp
add
aad
cli
xchg
jnp
je
sbb
mov
pop
imul
inc
imul
add
roll
mov
dec
hlt
in
test
cltd
in
icebp
mov
or
mov
out
adc
cmova
frstor
pop
mov
ret
sub
and
rol
js
xor
jmp
sbb
in
mov
scas
cltd
mov
outsb
orl
jo
inc
pop
test
fucom
enter
jmp
rolb
xchg
data16
scas
sbb
xchg
hlt
mov
mov
sub
pop
pop
lret
daa
lods
push
iret
ret
xchg
pusha
mov
pushf
jns
pop
adc
dec
inc
inc
and
lcall
cmp
movsb
xor
sahf
xchg
jae
push
movsl
sti
shll
pop
scas
mov
mov
test
dec
jmp
jl
ret
cmp
xchg
decb
jne
test
movsb
and
or
and
mov
cmovbe
jns,pt
pop
popa
iret
mov
lods
int
or
ret
pop
cmpsl
jmp
fprem
jge
sub
loopne
inc
push
sarl
pop
das
iret
add
push
xchg
clc
mov
stos
cmc
outsb
lods
push
adc
aas
pop
mov
fcomps
or
ds
lahf
jl
mov
or
jmp
mov
jbe
xchg
jmp
aam
mov
sub
aas
icebp
fwait
dec
mov
sub
insb
pusha
test
ficoml
xchg
pop
dec
inc
mov
sarb
sahf
or
push
outsl
fistl
decb
es
in
cmpsl
sub
add
loopne
pop
fidivs
pop
push
loope
sub
popa
into
xchg
adc
push
sti
xchg
sahf
dec
push
lock
add
cmp
adc
imul
inc
arpl
or
icebp
inc
xor
std
out
loope
inc
mov
mov
mov
or
mov
insb
mov
outsb
in
xchg
in
data16
jne
xchg
pop
leave
cmp
adc
fildl
sub
dec
mov
icebp
addl
imul
dec
cwtl
pop
inc
and
xor
subb
and
in
xor
in
in
mov
sbb
sub
ds
ret
add
xchg
jne
aaa
mov
jge
enter
dec
cmpsb
cs
fidivrl
cmp
lahf
sub
xchg
and
nop
or
fcos
pusha
mov
jo
cmpsb
mov
pextrw
jns
gs
mov
loopne
pop
xlat
adcb
nop
imul
fldt
pop
mov
icebp
jbe
jmp
pop
cmpsl
repz
sbb
adc
nop
push
fisttpll
push
int
bound
push
dec
test
or
mov
sbb
sbbb
pop
push
shrl
pushf
fwait
cmpsb
push
cmpsb
xor
push
dec
jl
push
push
push
dec
rolb
push
aas
cld
sahf
mov
repnz
loopne
lods
or
out
popa
pop
sbb
fcmovne
inc
jmp
sbb
xchg
and
leave
sarb
pop
dec
iret
imul
push
repnz
pusha
clc
adc
mov
fwait
cs
outsb
lret
aaa
or
out
pop
jns
mov
xor
jle
test
push
mov
push
ficoms
or
and
jecxz
inc
outsb
out
adc
pop
je
dec
je
pop
inc
inc
jge
dec
or
out
fistpl
lahf
in
xchg
mov
aaa
cltd
aam
fdivs
out
add
loope
jo
dec
dec
nop
sti
fstpt
add
shl
xchg
xor
xchg
cmpb
int3
jb
lds
sub
cwtl
jp
mov
fiadds
fstp
sbb
pusha
push
aas
pop
fidivl
adcb
dec
push
lahf
push
push
out
pop
ret
or
decb
rcrl
mov
arpl
push
insl
cltd
insl
pop
add
movsl
popf
mov
mov
push
inc
mov
roll
and
out
xchg
loope
dec
adc
sbbb
pop
xlat
idivl
arpl
popf
cmp
or
push
sbb
mov
lods
les
leave
imul
xor
daa
outsb
xor
lret
sub
or
es
dec
iret
ret
js
cmp
in
sub
dec
xchg
or
js
fwait
jp
xor
dec
jae,pn
mov
sub
dec
pop
jno
loop
adc
push
push
jno
fstpl
mov
loopne
adc
cmc
push
pop
leave
jnp
imul
add
sbb
dec
fwait
dec
out
dec
jb
mov
test
jnp
loop
push
xchg
popa
and
fcomps
xchg
jp
in
xchg
insl
dec
cmp
pop
shlb
xchg
and
imulb
jp
pop
ds
in
push
das
mov
ja
inc
xchg
or
or
ret
stc
insb
adc
mov
popa
or
xchg
cltd
mov
adc
adc
pop
iret
jne
sbb
inc
sub
outsb
and
push
es
lahf
sbb
xchg
pusha
xchg
dec
into
push
or
mov
adc
jg
mov
scas
dec
jle
xchg
lods
rcll
jb
aaa
popa
outsb
cld
mov
jl
lahf
sub
xchg
lds
mov
das
lcall
sbb
adc
pop
pcmpgtd
sbb
sub
dec
cmp
xor
xchg
out
mov
loop
mov
and
inc
pop
push
mov
sub
and
pop
dec
mov
in
jbe
inc
fidivrs
dec
mov
fdivrs
shlb
stc
mull
mov
push
cld
inc
cwtl
out
dec
int3
mov
dec
pushl
sub
lret
mov
dec
and
pushf
mov
sub
jmp
rcll
aad
or
fs
mov
pushf
pop
inc
dec
sub
cltd
pop
push
subl
cmc
mov
ja
dec
xchg
or
pop
test
jnp
mov
adc
addr16
addl
pop
and
and
out
int3
or
dec
cmp
mov
or
cwtl
mov
jns
outsb
daa
int
dec
xorb
dec
ja
repz
arpl
mov
daa
pop
xor
imul
cwtl
mov
xchg
ds
repz
lock
test
inc
lret
inc
aam
loope
jns
dec
pop
and
push
pop
iret
cwtl
mov
dec
in
add
xchg
sbb
repz
subb
rorl
sti
outsb
xlat
xchg
sahf
and
leave
hlt
push
out
cmc
xchg
iret
cmpsl
cmp
jns
orb
ret
mov
xchg
lds
dec
push
clc
jns
or
mov
mov
xchg
stc
mov
std
mov
fwait
popf
pop
add
bound
leave
pop
jb
push
inc
aam
cmp
call
sub
test
iret
les
pop
roll
imul
mov
push
arpl
in
filds
dec
sti
cmpsl
sub
in
sbb
je
sub
pop
adc
sub
cmp
mov
xor
add
add
fwait
ror
pop
les
dec
lods
pop
sbb
cmp
or
shrl
js
shll
inc
adc
arpl
mov
jns
stc
xlat
sbbb
outsl
pop
and
push
cmpb
fwait
cwtl
sbb
and
mov
sahf
cld
js
or
cwtl
push
push
push
mov
seto
fldcw
in
xchg
mov
jge
and
loope
sub
xchg
jb
xor
mov
push
mov
cmpsb
les
xor
out
pop
sbb
lcall
lock
aaa
cmpsb
cmp
sub
mov
sbb
add
xchg
out
push
test
and
xlat
int
js
ret
into
hlt
arpl
out
mov
dec
mov
in
gs
sbb
dec
leave
ss
addb
adc
inc
in
sub
mov
push
ret
mov
in
mov
mov
in
into
aas
pop
jmp
add
sub
inc
dec
int3
aas
xchg
jo
add
hlt
mov
shrl
jns
clc
add
mov
js
push
pop
mov
sub
push
sub
fsub
imul
iret
scas
shll
inc
and
jmp
das
mov
mov
cld
mov
adc
dec
push
mov
aam
and
push
icebp
cmp
dec
faddp
adc
pop
xchg
pop
and
rcrl
cs
in
dec
mov
adc
scas
movsl
adc
lods
sbbl
aas
enter
enter
xchg
not
fisubs
dec
and
outsl
shll
push
mov
push
and
std
dec
ljmp
lds
xor
mov
outsb
or
jg
push
outsl
sub
mov
dec
ds
jecxz
mov
push
scas
jb
imul
lret
bound
sub
sbb
aam
pop
lret
mov
inc
cmp
fistpll
fsts
fstpl
sti
and
add
ss
sub
add
testl
rcrb
mov
into
push
jno,pt
add
pusha
int3
and
mov
inc
xchg
cmp
push
mov
mov
mov
pushl
ja
add
pusha
jne
pop
les
adc
xor
pusha
outsl
push
in
mov
scas
mov
into
arpl
lock
push
cmpsl
mov
shll
pop
int3
sbb
xchg
dec
pop
push
adc
mov
out
fisttps
jne
and
stos
fsubp
in
fwait
divl
ljmp
lock
pop
sub
es
out
fidivrs
xor
insl
sahf
sti
push
fimuls
leave
pxor
sub
jle
xchg
dec
shr
dec
mov
xchg
gs
fstl
dec
mov
mov
and
jae
int3
push
out
js
or
out
jae
jbe
in
xor
cmp
jmp
mov
xor
shrb
dec
pop
test
mov
icebp
cmp
sub
sub
and
pop
xor
lds
push
push
sub
shlb
sbb
xor
xchg
cmpsb
out
stos
or
dec
add
mov
jns
sbb
cmp
add
movl
jl
fucomi
jbe
lret
fistps
push
jns
shll
xor
push
dec
lea
addr16
push
shll
or
fists
movsb
sahf
outsb
test
cltd
repz
and
pop
pop
aaa
xor
pop
hlt
cltd
in
lret
sbb
fsts
mov
je
push
jae
push
or
dec
xchg
push
hlt
pop
bound
cld
push
xchg
cmc
sbb
sbb
xchg
adc
int
leave
sbb
xor
fcoml
cmc
dec
jmp
push
mov
lcall
scas
testb
push
and
dec
in
cmpsb
push
sub
mov
ss
mov
movsb
and
and
cli
push
andl
xor
pop
lds
loop
loope
mov
cs
mov
comiss
and
mov
pop
enter
cmp
mov
inc
dec
loope
dec
jl
ja
and
call
fcomps
adc
lret
or
sti
jge
cmp
flds
je
inc
jne
adc
int
es
push
push
hlt
xchg
jmp
in
insb
cmp
sbb
loopne
sbb
insb
pop
cli
minps
pop
sbb
sti
xor
push
inc
pop
out
rcr
icebp
xchg
push
fists
mov
cmp
lds
mov
test
sbb
mov
xor
notl
mov
les
loop
shl
sub
sahf
adc
imul
push
mov
out
mov
inc
cmc
sbb
adc
js
loopne
push
lds
jo
lods
in
mov
in
fwait
daa
sub
jle
or
add
pop
fwait
dec
fidivs
sbb
adc
adc
leave
lea
adc
es
rcll
aad
mov
jecxz
mov
mov
enter
iret
adc
mov
mov
ja
and
mov
inc
stos
loope
jae
jmp
cmp
xor
mov
rclb
push
lret
add
ja
cltd
pop
mov
lahf
xchg
repz
ljmp
lock
pop
sbb
cmp
adc
jge
xchg
dec
mov
cmpsb
clc
inc
xlat
pop
jbe
insl
sarb
cmp
jns
jp
jnp
xchg
loopne
pop
fs
mov
cmpsb
sub
stos
adc
fstps
nop
add
adc
std
jae
mov
rorb
loopne
mov
mov
cmp
xchg
sub
imul
dec
push
push
mov
dec
inc
and
push
adc
pop
xchg
jle
add
push
inc
movsb
mov
in
movsb
sub
imul
out
mov
ret
fistl
addr16
rorb
jne
sub
mov
add
aad
cmc
jno
push
or
mov
inc
pop
adc
xchg
and
stos
imul
xor
repnz
into
push
fcmovb
inc
aad
xor
adc
pop
adc
flds
gs
loopne
bound
dec
lret
adc
cmp
xchg
and
aad
fcomps
ja
out
sbb
jmp
mulb
js
xor
aam
lds
adc
adc
ljmp
xor
sub
clc
push
in
cmp
loopne
in
ja
bound
inc
cs
fldl
sub
push
sub
rolb
sarb
cmp
rolb
push
adc
inc
outsb
ret
rolb
enter
mov
popf
aaa
push
cmp
vmaxsd
pop
add
xchg
sub
mov
xchg
adc
test
cmp
pop
add
mov
pop
lret
push
jl
push
cmp
inc
mov
cmp
inc
pop
loop
cmp
fs
xchg
outsb
pop
mov
icebp
and
enter
mov
mov
es
fidivrl
pop
push
shl
xchg
sarb
fisubs
mov
cs
sysenter
int
lea
test
mov
jp
sbb
call
addl
mov
rorb
pop
mov
or
pop
lock
ss
pop
cmp
add
mov
test
aaa
pop
lods
enter
xor
pop
xor
pop
je
cmp
pop
mov
nop
test
and
stos
push
fnstenv
push
adc
add
mov
lret
sbb
mov
fcomps
packuswb
xchg
xchg
pop
mov
sbb
sbb
test
scas
xor
int3
cltd
push
daa
cli
jns
dec
cli
xor
js
insl
cmp
jae
mov
xor
mov
dec
xchg
adc
repz
jb
xchg
ljmp
mov
lea
orl
mov
cmpsl
iret
es
jbe
fistps
push
dec
mov
inc
popf
hlt
mov
aad
xchg
sub
mov
mov
push
sbb
xchg
inc
aam
push
push
xchg
aas
rcrb
push
out
mov
ret
jmp
imul
in
push
jo
mov
adc
lret
shrl
mov
test
movsb
cmp
adc
xor
outsl
mov
jnp
xor
fs
fldenv
cs
mov
dec
lret
popa
adc
mov
mov
mov
jne
arpl
xor
popa
mov
add
shlb
push
int
push
push
adc
call
pushf
unpcklps
jae
sub
lock
mov
outsb
xor
movsl
jns
dec
dec
push
jb
out
mov
or
ja
xchg
dec
xor
out
or
push
mov
add
mov
cmpsb
and
ret
jbe
stos
dec
mov
pusha
movl
fnsave
push
into
loop
ffreep
mov
nop
fcmovnbe
insl
mov
cmpsl
push
push
sub
xchg
mov
add
out
push
inc
pop
xor
xor
icebp
xchg
push
pop
jp
push
lcall
sbb
mov
popa
mov
test
inc
movsb
test
std
std
jp
pop
repz
arpl
loopne
push
push
push
sti
les
insb
xchg
inc
mov
test
cs
pusha
jg
mov
xor
inc
or
cmp
idivb
sarl
out
lods
push
rcrl
daa
stc
fldcw
popa
les
adc
xchg
jbe
cmp
pop
scas
rcl
xor
sti
mov
gs
and
jno
fs
xchg
jns
into
outsl
push
loope
or
jnp
inc
stc
push
jo
lods
ror
cwtl
cmpsb
sbb
es
repnz
nop
out
in
test
cld
scas
sbb
push
flds
adc
call
jp
push
nop
inc
inc
mov
cld
push
notl
cmp
scas
sub
jl
mov
addr16
or
loopne
xchg
out
rcll
imul
hlt
push
cs
and
or
inc
jg
test
stc
in
int
mov
iret
cmp
idiv
sub
and
adcb
aaa
shlb
daa
mov
insl
mov
movsl
or
pushf
enter
xchg
cmpl
fs
shlb
dec
or
cmp
popa
xor
loop
mov
fs
cmp
xchg
mov
sti
stos
sbb
adc
call
lods
loope
fidivs
loopne
nop
xchg
xor
lcall
sub
cli
incb
mov
sub
test
scas
test
movsb
sbb
ja
pop
jne
push
mov
jmp
and
jae
hlt
sbb
xor
xor
imulb
lahf
dec
enter
rcl
sbb
adc
shll
xchg
outsb
add
mov
pop
dec
mov
sub
testl
pop
inc
ljmp
xlat
mov
jo
dec
jns
inc
popa
mov
in
scas
jne
sub
pop
dec
lea
mov
push
nop
xor
scas
cmp
xchg
pushfw
push
aam
pop
ds
repnz
je
xor
fstpl
pop
jecxz
pop
stos
test
popa
or
xor
push
in
or
mov
inc
fstps
lret
xchg
mov
iret
mov
in
sub
mov
movsb
insl
pop
jle
in
xor
std
inc
dec
jb
ficomps
enter
pop
xchg
lods
lcall
addr16
aas
xchg
stos
fwait
loop
dec
xlat
sarl
rorb
ds
add
out
dec
dec
jge
mov
imul
jb
out
fcomps
popa
or
adc
lcall
mov
or
cmp
ficomps
psrld
mov
and
push
cmp
add
das
frstpm(287
addb
sbb
stos
stos
stos
pop
repz
daa
push
lcall
dec
mov
call
lds
adc
and
xchg
mov
out
or
adc
ss
loopne
ss
repz
mov
icebp
or
pop
sub
mov
push
idivl
int3
push
jge
mov
sub
mov
aas
repnz
fnstcw
xor
mov
cmpsl
jae
loop
xlat
jns
jnp
sub
test
or
xchg
dec
xchg
adc
add
cmp
dec
aad
mov
aas
or
cmp
notb
movsl
and
and
mov
int
aam
out
cmc
loop
pop
or
sub
dec
mov
aaa
sbb
ret
fnstcw
shl
xor
fcom
jne
in
rcr
push
out
popf
sbb
add
stc
push
xorb
mov
repz
mov
xor
dec
pop
jle
stc
bound
jnp
lret
cmpsb
jo
test
jp
cmp
inc
dec
mov
mov
push
test
sub
jmp
pop
xchg
and
stc
or
and
mov
imul
mov
fcomps
dec
mov
mov
nop
or
icebp
cmp
cmp
lahf
xchg
roll
inc
cmp
lods
in
and
sub
push
data16
jle
cmp
add
mov
call
push
out
shlb
imul
test
inc
shll
inc
mov
pop
mov
or
xlat
mov
inc
push
add
jbe
mov
mov
movsb
xlat
cltd
mov
mov
dec
shll
sbb
outsl
or
xor
inc
add
in
mov
and
aaa
push
sub
sbb
push
jo
push
in
mov
cli
xchg
pop
cmc
mov
test
lock
xchg
loope
cmpsl
push
pop
lcall
sub
mov
cmp
or
adc
in
jge
push
lods
outsl
jecxz
mov
adc
repz
mov
outsl
ljmp
cwtl
or
dec
repnz
incl
popa
into
jg
roll
fisttpll
pop
sub
pop
or
inc
ss
call
mov
mov
xlat
fdivrl
inc
sbb
cli
fdivl
push
pop
inc
repnz
push
aam
and
mov
sub
cld
popf
sbb
ds
scas
xor
or
adc
jno
mov
mov
cmp
add
test
jecxz
cmp
outsb
mov
add
dec
xchg
jb
and
fidivl
jmp
mov
idivl
in
xchg
and
imul
inc
jge
iret
jnp
sbb
shl
arpl
shrb
cs
lea
cmp
sar
mov
jmp
or
popf
push
push
inc
xchg
stos
nop
xlat
stos
mov
xor
ss
dec
sahf
aam
repnz
sbb
movsb
inc
inc
push
xchg
mov
xchg
sti
sub
dec
shrl
inc
popa
cmp
push
ret
cs
shrl
movsb
dec
in
mov
jmp
jne
loop
ljmp
jae
fmulp
pusha
scas
push
mov
mov
movsl
mov
or
sbb
das
movsb
xor
iret
mov
pop
stc
adc
test
les
loop
mov
push
mov
pushf
stos
dec
clc
push
subl
mov
lahf
dec
or
cli
shlb
sets
fisttps
dec
pop
scas
and
push
ja
push
cmp
pop
push
dec
push
hlt
mov
xor
lret
pop
pusha
incl
add
mov
mov
pop
fcmovnb
hlt
sbb
push
fs
cmp
rcrb
mov
shll
jo
test
mov
xor
rcll
aas
popa
mov
jp
mov
mov
mov
test
push
push
jmp
sbb
xor
rcr
pusha
cmp
push
dec
pop
push
jns
mov
mov
fwait
jg
mov
mov
mov
dec
sarb
lahf
push
pop
dec
jne
pop
sahf
fldcw
add
test
neg
cltd
outsb
push
test
mov
std
mov
jge
dec
mov
push
orb
outsb
ret
out
adc
lds
xchg
cld
xchg
and
and
es
scas
sbb
and
dec
mov
das
leave
xchg
mov
sbb
dec
call
fiaddl
pop
fwait
sbbb
mov
adc
inc
aas
ret
bnd
sub
sti
mov
mov
add
lds
push
std
addr16
adc
xor
cmpsl
gs
sbb
mulb
clc
xor
mov
sahf
mov
or
pop
cmp
sub
push
gs
das
or
movl
test
rclb
shrb
out
or
arpl
fisubs
jmp
adc
push
xor
adcb
adc
xor
pop
pop
push
ret
jae
mov
fstps
push
dec
stos
lcall
add
jp
mov
pop
rorb
rcr
iret
jecxz
in
mov
cmp
cmpsl
and
or
cmp
paddq
fisubrs
push
pop
mov
jg
outsl
fadd
sbb
ret
pop
xchg
xor
mov
cwtl
imul
ret
mov
pop
dec
fwait
xchg
mov
out
leave
dec
movsl
jae
push
out
adc
and
sub
aas
jecxz
mov
cltd
fiadds
and
cmp
in
stos
dec
jo
push
scas
push
inc
cmpsl
pop
lds
ret
sbb
sbb
mov
fdivs
jl
sbb
pop
adc
sti
leave
aas
lret
and
subb
push
fists
mov
add
add
add
add
add
add
add
add
add
fiaddl
add
add
add
add
add
arpl
add
add
jne
add
add
add
add
add
add
add
roll
add
add
add
add
testl
mov
aas
sub
pop
add
lods
mov
test
adc
cmpb
mov
icebp
xor
mov
or
push
jmp
lret
sti
xchg
int3
pop
rcrb
int3
repz
and
push
sbb
outsb
es
sahf
xchg
push
mov
and
mov
sbb
cmp
outsl
add
xorb
popa
sub
aam
es
push
cltd
dec
jo
arpl
xchg
dec
adc
jno
addr16
dec
sbb
fstpt
and
bound
incb
cmc
push
cmp
cmp
leave
in
xchg
test
jge
add
mov
shrb
pop
icebp
insl
add
jecxz
jbe
lahf
stos
call
sbb
mov
repz
or
xor
je
push
mov
fwait
cmpsb
arpl
push
xor
push
jg
mov
sar
out
sbb
std
pop
push
pop
fcmovbe
cmp
pop
int3
insb
jp
push
cmp
mov
dec
lcall
out
xchg
adc
jnp
pop
fsubl
jno
and
push
insb
jmp
js
mov
mov
insl
xor
sbb
lret
xchg
fdivrs
aaa
cmp
ss
icebp
sub
hlt
xchg
adc
add
push
addr16
xchg
lcall
sub
cltd
bound
scas
mov
xchg
mov
test
scas
lcall
inc
push
sbb
test
daa
sbb
sub
fsubs
popf
ret
icebp
test
mov
adc
seta
add
lea
out
pusha
push
les
and
movd
and
inc
cli
movsl
rolb
push
fisttpl
hlt
cmpsb
jae
cmp
jecxz
and
add
movsl
xor
jne
pop
or
mov
lock
lods
lea
add
inc
sbb
mov
and
divb
push
int
repz
cli
cmp
jp
fidivrl
outsb
sub
cld
mov
jge
pop
sub
inc
pop
ja
mov
arpl
xchg
inc
push
pop
and
adc
inc
sub
sbb
popa
repnz
ja
test
dec
mov
sbb
or
add
lret
out
dec
scas
rcr
mov
xchg
shll
mov
cld
ss
adc
dec
and
cld
add
inc
inc
inc
mov
test
std
cmp
mov
popa
push
mov
pop
add
scas
and
aam
inc
shlb
jo
cwtl
add
pop
shr
out
arpl
cltd
and
and
into
and
mov
test
or
jne
inc
loopne
sbb
mov
dec
inc
inc
push
mov
idivl
or
int3
mov
addr16
je
mov
push
adc
popa
sub
cmp
adc
fcomip
sbb
andb
loope
pop
or
int3
pop
stos
pushl
in
xchg
push
sbb
xor
mov
mov
cmpsl
xor
hlt
push
jle
mov
stos
inc
fcomip
push
jo
int
dec
cs
cmp
out
jg,pt
adc
push
int3
inc
xchg
push
mov
cli
xor
xor
push
mov
xor
xchg
mov
mov
lahf
pcmpeqb
xor
cmpsb
xchg
outsb
inc
mov
xor
test
inc
jnp
jge
jecxz
mov
lds
imul
fsubp
push
pop
cmc
outsl
sarl
into
sbb
xchg
sub
cmp
mov
lds
xor
bound
orl
jg
adcb
or
es
enter
fisubrs
and
shll
adc
add
inc
ret
movsb
fdivp
jo
test
std
rcl
mov
lret
mov
mov
fs
sub
sbbl
shrb
lahf
fsubs
jle
mov
bnd
fidivrs
lods
cmp
push
mov
shll
jle
cwtl
jp
or
sub
dec
fisttpl
ljmp
std
cmp
mov
jg
icebp
das
xor
sub
inc
inc
ret
out
pushf
test
sub
xor
cmp
add
xorl
shlb
cs
pop
pop
mov
imul
decl
sub
add
fadds
je
lock
sub
add
call
jnp
mov
mov
in
testb
rcrb
mov
movsl
mov
cmp
jbe
lahf
add
adc
xchg
sbb
popa
or
inc
xor
mov
das
xchg
les
dec
add
out
inc
scas
aaa
xchg
dec
inc
mov
cltd
inc
xchg
xor
jns
fcompl
mov
inc
scas
out
test
dec
mov
mov
lea
in
or
fstps
imul
jmp
mov
mov
adc
adc
pusha
add
sbb
jnp
adc
and
mov
pop
daa
js,pn
cltd
gs
cld
repnz
xchg
fs
xor
je
add
xchg
pushf
lds
mov
push
xchg
scas
pop
mov
lret
out
subl
bound
cmp
insb
inc
pop
and
popf
dec
xor
mov
push
leave
sub
roll
divl
mov
pop
dec
sbb
xchg
add
xor
sub
idivb
add
mov
mov
in
cmp
xchg
andb
mov
push
push
lods
sub
leave
inc
adc
mov
imul
leave
mov
and
xchg
in
ret
inc
mov
mov
ljmp
mov
inc
insl
or
stc
add
adc
aad
cmc
pop
lret
sti
pop
and
fmuls
iret
inc
ljmp
pushf
cltd
jmp
xchg
aad
mov
pop
iret
and
adc
insb
mov
sub
dec
in
jbe
push
xchg
movsl
xchg
mov
sub
loopne
xor
rolb
pop
cli
ja
movsl
push
mov
add
ss
gs
cmp
cmpsl
cmpsb
pop
fabs
jo
call
ret
cld
or
mov
and
cmp
stos
pop
stc
inc
popf
sub
xor
mulb
mov
cmp
repnz
stc
mov
push
mov
push
lea
lds
inc
cmp
add
mov
das
ror
fs
pop
or
sti
fists
icebp
mov
push
inc
popa
into
sub
lcall
cwtl
push
jmp
inc
cmp
faddl
pusha
add
test
push
mov
jnp
sbb
jae
ss
sub
lock
push
push
xchg
js
adc
pop
adc
inc
iret
mov
rcrb
pushl
or
or
sub
in
adc
mov
out
aaa
pop
test
std
pop
std
pusha
in
adc
cli
arpl
movsl
rolb
rolb
aad
ret
or
mov
icebp
mov
dec
insb
jae
cli
pop
cld
les
push
dec
lods
sbb
imul
aas
sbb
sub
push
jg
xor
cli
jecxz
mov
and
mov
and
negl
call
xor
mov
stos
hlt
fwait
decl
inc
loope
inc
shll
int
in
outsb
test
and
insl
sub
rcl
inc
addr16
and
jl
cmp
and
jp
push
jnp
xchg
dec
fmul
dec
xchg
rclb
js
mov
lods
sub
dec
mov
out
lahf
xor
mov
pop
jl
adc
jns
mov
aaa
pop
ret
shll
mov
clc
jo
mov
fstpl
std
faddl
pushf
xchg
add
sti
pop
cs
xor
popa
cs
xor
push
ficomps
mov
mov
cmpsb
repnz
loop
nop
daa
out
sahf
mov
xor
xlat
ret
fisttps
inc
inc
mov
in
mov
in
jg
stos
movsl
loopne
mov
pop
cmpsl
xchg
in
aam
repnz
loopne
inc
adc
es
stc
pop
adc
std
subb
xor
hlt
mov
push
xor
js
shll
and
cwtl
cwtl
roll
jmp
push
push
jne
stc
ficomps
fwait
jp
loope
out
mov
mov
out
push
ljmp
or
lods
gs
rclb
push
sbb
inc
faddl
pop
out
std
jne
leave
push
inc
rdpmc
inc
adc
inc
cwtl
mul
sub
fmull
int
cltd
push
add
lock
push
jae
cmpsl
xchg
scas
aam
int3
pop
mov
jge
pop
aas
xchg
enter
aas
les
fwait
mov
xor
xchg
jbe
cmp
or
lahf
xchg
and
icebp
popf
fdiv
aaa
jno
rol
cmp
aas
ja
cld
push
cmp
mov
add
sub
rorb
cmc
bndldx
stos
xlat
pop
flds
shr
mov
add
add
aam
or
adc
xor
aaa
sub
rorb
fisubrs
jle
outsl
aas
mov
inc
stos
mov
fisttps
pop
pop
push
push
xorl
leave
repnz
push
stos
push
cmpsb
mov
dec
pop
jae
aam
repnz
sbb
fbld
adc
mov
in
push
and
rclb
xor
fcompl
xor
sbb
call
add
push
and
mov
xor
fwait
adc
popf
lret
xchg
loop
inc
repnz
popa
mull
int3
jl
mov
es
rep
mov
dec
mov
mov
mov
cmp
and
ficompl
inc
xchg
adcb
pop
aad
rolb
jp
rcr
mov
mov
mov
push
xchg
mov
movsl
push
mov
mov
into
jb,pt
push
xchg
mov
hlt
sub
cwtl
push
enter
inc
push
dec
repz
pushl
mov
push
mov
sbb
aam
call
xchg
or
in
xchg
int
loope
aas
das
add
movsb
mov
inc
fcomip
and
fsubr
aaa
mov
cvtdq2ps
jecxz
les
jb
mov
jp
mov
mov
test
ljmp
fistps
mov
xchg
xchg
lods
pop
imul
popa
das
mov
fsubrl
int3
negb
repnz
test
cmp
rcl
jbe
repnz
inc
xchg
lret
pop
mov
test
sub
jno
inc
bound
push
rcr
call
xchg
mov
cld
jae
dec
mov
cmp
mov
cmp
push
aam
or
pop
arpl
sti
pop
jbe
mov
dec
and
and
push
jg
es
cmpsb
idivl
mov
sbb
dec
dec
dec
mov
adc
push
das
cmp
add
fsubrl
dec
push
fdivrs
mov
jmp
test
push
rcrl
mov
push
xor
jnp
and
or
roll
add
cmc
and
data16
dec
add
pop
sub
test
out
push
ss
mulb
loop
jp
pop
and
aam
pop
pop
jae
mov
loope
mov
mov
loopne
add
pusha
xchg
cltd
and
movsb
lock
mov
pop
xchg
pushf
rclb
rcrb
jns
or
je
add
push
cwtl
jae
mov
mov
jno
inc
sarl
mov
lock
out
mov
cs
or
xlat
stc
sub
or
loopne
in
mul
xorl
push
lds
mov
jp
inc
inc
test
push
xchg
sub
js
orl
arpl
mov
xchg
repnz
mov
push
lret
or
ret
lcall
call
or
das
cmp
and
insl
popf
pop
stos
xchg
sbb
mov
inc
adc
push
lock
fsub
mov
jl
xchg
unpcklps
cmp
pop
std
sbb
xor
mov
movsl
lock
and
fnstcw
jae
xor
mov
leave
in
jp
and
scas
std
jp
cmp
xor
ja
lea
pop
pop
into
aam
sub
cld
xor
adc
push
push
rcrb
shrb
lret
ss
lods
push
xchg
das
fisubl
xor
jnp
incb
mov
movsl
int
stos
aam
cmpl
push
loop
aaa
cmc
out
lock
xchg
dec
hlt
ds
cmpsl
icebp
jae
aas
rorl
stos
push
xchg
test
or
lcall
lea
shl
lods
push
popl
int
sti
jne
pop
mov
ss
outsb
and
imul
fistpll
sahf
lcall
gs
ss
aaa
push
cli
enter
lcall
lret
mov
and
xchg
xchg
mov
rolb
fwait
sbbl
push
jmp
shr
jnp
jl
add
dec
cld
adc
call
and
lret
rorb
or
repnz
push
sub
mov
xor
jmp
jmp
cs
std
das
inc
cltd
mov
ss
cli
add
fidivl
ret
dec
mov
and
or
sub
mov
xchg
jmp
mov
sahf
std
sub
nop
or
inc
mov
sub
jae
cmc
test
jmp
mov
imul
pusha
call
adcl
jge
lods
inc
sbb
popf
add
lods
inc
push
outsb
cmp
inc
dec
jae
xor
xor
ds
xchg
sbb
and
pop
ret
sub
push
cmc
fsubs
ljmp
jae
fs
fidivs
dec
insl
cld
inc
fisttpl
lds
imul
stos
push
sti
cmp
pusha
mov
repnz
es
push
adc
xor
pop
mov
or
pop
dec
loop
sub
mov
jb
mov
fidivrl
aas
mov
movl
stc
fimull
repnz
hlt
mov
gs
test
jne
add
lahf
rsm
fidivrl
mov
cmp
ss
cmc
aas
xchg
push
aam
test
xchg
inc
loop
test
sbb
roll
push
push
mov
and
inc
jge
arpl
loopne
rcll
jns
pop
xor
sub
push
aad
aas
inc
repnz
aam
or
adcl
adc
adc
in
arpl
sbb
dec
mov
sbb
push
hlt
sub
out
lods
cmc
mov
push
inc
cmp
movsb
sbb
adc
loop
orb
jg
lret
mov
inc
xchg
push
ror
outsb
mov
out
mov
pop
or
in
lods
leave
pop
ficomps
mov
add
xchg
pop
pushf
adc
es
sti
dec
cld
pop
and
mov
inc
mov
std
loope
cmp
add
pushf
cmc
ljmp
test
mov
into
les
push
xor
push
bound
fsubrs
bound
inc
imulb
aad
push
es
je
bound
arpl
sbb
out
adc
out
jle
shlb
test
mov
fists
rorb
popf
cmc
mov
jmp
test
nop
call
fwait
mov
jb
daa
out
loop
repnz
loop
and
lods
push
movl
adc
lret
jle
loop
mov
pop
call
push
sub
jmp
in
mov
cld
add
and
test
or
pop
lcall
mov
sub
pop
and
cmpsb
lds
sub
aad
mov
loope
mov
adc
lcall
jno
jle
jns
mov
or
and
div
dec
dec
or
mov
addl
jbe
out
fstps
test
xchg
ljmp
pop
push
mov
movsl
scas
repz
mov
xor
iret
addr16
pushf
xchg
and
leave
repnz
adc
into
mov
arpl
lock
mov
flds
jno
mov
xor
fdivrp
and
adc
bound
cwtl
scas
xchg
jle
out
mov
or
enter
cwtl
sahf
cs
jge
aaa
xor
mov
std
int3
xlat
hlt
adc
fnsave
xchg
or
loop
cltd
loop
mov
add
std
fbld
inc
mov
xchg
in
jl
xchg
inc
sub
cmc
int
adc
stos
mov
lcall
add
push
stos
mov
fisubrl
sbb
shrb
add
mov
mov
inc
call
xorl
jp
ljmp
jecxz
xor
fnsave
push
call
aaa
dec
inc
movsb
aad
or
aas
or
insb
push
sbb
repz
aaa
pop
sub
in
pop
dec
and
sarl
and
mov
mov
pop
pop
insl
jl
fnsetpm(287
mov
xchg
stc
idivl
rcll
sbb
es
in
ret
pushf
rolb
mov
fisubs
mov
out
adc
sbb
dec
push
pusha
jge
movsb
sub
fildll
cs
ret
push
loope
push
adc
mov
pushf
mov
xor
addr16
cs
cmp
mov
stc
sub
mov
cmp
or
and
mov
fcomps
mov
adc
pop
rcrb
fimull
iret
lret
nop
mov
pop
mov
push
loop
inc
in
mov
mov
sbb
dec
jle
jns
jns
sbb
cld
jbe
sub
sub
rclb
mov
sbb
hlt
sub
out
rorb
cmpsb
inc
movsl
jno
hlt
dec
test
mov
rorb
add
aas
lret
into
cli
adc
mov
or
mov
sbb
cmpsl
xor
shr
sub
out
cmp
call
sub
sbb
sub
testb
es
xlat
stc
test
inc
mov
lock
mov
sahf
cwtl
mov
or
jns
xchg
sti
cwtl
xor
cli
push
shlb
adc
into
jge
xor
xchg
adc
and
inc
inc
mov
adcl
mov
daa
jecxz
or
sbb
je
pop
aas
mov
adc
bound
fs
xor
add
sub
mov
movsl
mov
lcall
xchg
mov
pop
stos
mov
mov
sbb
push
test
imul
pop
adc
stos
pop
add
mov
xor
add
loope
mov
in
adc
std
popa
sub
mov
mov
aam
mov
mov
cld
sbb
cwtl
fstps
jno
xchg
enter
cmp
mov
dec
lods
xor
div
adc
sbb
sbb
mov
test
xor
movsb
jmp
sub
cmp
stos
sbb
and
out
in
cwtl
mov
jl
filds
cwtl
jmp
sub
ds
add
ret
pop
test
mov
js
ret
loope
sub
inc
pushf
add
mov
jb
lea
loop
nop
test
insb
push
fimuls
mov
mov
movsb
pop
mov
popl
xchg
sbb
jge
fsubr
movl
lea
pop
jb
mov
sbb
mov
js
adc
lcall
lods
mov
in
and
test
xchg
ds
cmc
adc
fiaddl
ss
mov
and
xor
push
or
adc
add
sub
xorb
or
rolb
sbb
jno
dec
aad
xchg
push
cmp
cmp
cld
xor
push
fnstenv
mov
filds
pop
insb
push
retw
mov
and
cmpsb
int
cmp
add
or
in
cmp
pop
xor
mov
pop
call
dec
int
sbb
pop
cmp
sbb
stos
ffreep
sbb
jle
test
add
cs
mov
push
dec
mov
fdivrl
mov
pop
dec
dec
cltd
sub
mov
out
sbb
jmp
ss
pop
mov
shl
gs
stos
inc
pop
pop
outsl
insl
rcrb
test
or
sub
out
push
push
or
mov
mov
jmp
dec
sub
enter
mov
scas
enter
fildll
jbe
shll
xorb
xor
out
les
js
pop
add
cmp
xor
and
cmp
xor
das
or
xor
outsl
add
bound
push
aas
out
mov
push
enter
pop
out
sbb
mov
cltd
enter
cmp
mov
ljmp
xchg
fiadds
mov
testl
sbb
stos
sti
mov
or
stos
je
notb
pop
jmp
xchg
push
lret
ret
shrl
arpl
mov
mov
out
in
rolb
xor
leave
pop
mov
pop
mov
dec
inc
sarb
fimuls
sub
inc
dec
int3
add
pop
negl
add
imul
add
repz
mov
push
movsl
push
cmp
aam
out
outsl
xor
mov
push
or
adc
in
std
jb
jb
sahf
stc
ficomps
adc
int3
mov
test
jecxz
pop
lret
outsb
mov
test
loope
dec
jns
cmp
add
shr
or
pop
push
rcl
scas
pop
dec
xchg
stos
int3
data16
scas
mov
pop
call
imul
jg
sarl
jmp
pop
aas
pop
mov
inc
adc
leave
loop
fcmovnu
je
iret
add
xchg
scas
aad
ljmp
mov
roll
mov
mov
pop
jae
push
clc
fldlg2
xchg
mov
sub
outsb
mov
repz
dec
loopne
test
clc
mov
inc
ja
adc
fs
std
imull
insb
fucomi
push
stos
sub
call
push
mov
and
xchg
push
cltd
adc
cmpsl
lock
push
and
lret
push
pop
lea
or
fbld
xor
rorb
shr
stc
mov
int3
xor
mov
cmp
aam
int
cmpsl
add
cld
fdivl
fnsave
movsl
or
xor
scas
test
sub
adc
out
xor
push
xchg
cmp
stos
xchg
push
test
in
mov
lock
or
out
add
inc
mov
push
movsl
adc
enter
lods
lods
ja
mov
mov
or
jle
inc
mov
xor
ljmp
movsb
xchg
sub
xor
jmp
lods
sbb
sbbl
inc
jbe
dec
push
push
xor
jmp
inc
jo,pn
add
sarl
sbb
imul
sbb
loopne
sbb
xor
lret
adc
loop
mov
mov
inc
cltd
dec
push
repz
icebp
loope
je
sbb
pop
test
xor
xor
in
mov
out
stc
dec
ret
imul
inc
mov
and
in
gs
test
and
sbbb
mov
outsb
out
lods
mov
xor
insl
cmp
jae
lret
aaa
pop
push
lods
mov
pop
adc
daa
pop
fcmovnbe
xchg
jo
insl
xlat
movsb
mov
daa
push
dec
or
sub
mov
cli
fnstsw
jg
sub
add
inc
pop
xchg
popf
sbb
nop
ja
nop
data16
fnstsw
test
dec
and
clc
pop
pop
std
sub
add
pop
jp
mov
sbb
stos
movsb
inc
mov
xchg
and
dec
mov
fs
imul
jge
inc
loopne
stc
adc
rol
shlb
cld
imulb
mov
pop
imul
sti
mov
cmp
pop
xchg
arpl
and
cs
push
push
adc
adc
cmpsb
mov
sbb
lds
mov
int3
mov
sbb
cmc
ficoms
ljmp
xchg
imul
push
cltd
push
mov
cwtl
lret
dec
xchg
roll
jbe
popa
out
inc
adc
or
sbb
pop
xchg
addb
push
xor
nop
aad
xchg
jge
imul
push
subl
nop
mov
add
in
fbld
push
mov
jle
in
lea
pop
push
sbb
iret
mov
dec
adc
mov
xchg
pushf
adc
dec
iret
mov
stos
mov
mov
jo
into
jle
fnstcw
inc
jl
xchg
sbb
loope
add
xlat
mov
das
mov
lock
mov
sti
test
arpl
xchg
fstps
or
mov
mov
out
mov
pop
mov
pop
pop
jge
popf
jecxz
mov
lods
pop
adcb
mov
or
insl
mov
cld
insb
repz
cmp
push
lcall
ljmp
dec
rorb
and
add
scas
pop
adcl
pextrw
adc
sbb
xor
cld
lock
mov
cmpsl
addr16
dec
arpl
pop
xchg
gs
xchg
pop
test
ja
adc
loopne
adc
xor
scas
mov
pop
jb
mov
add
xchg
jp
aas
sub
dec
cmc
jecxz
addr16
inc
lret
rcrb
ss
mov
scas
in
mov
sbb
out
mov
mov
test
mov
cmp
lods
sbb
sbb
push
push
scas
add
and
ljmp
stos
ljmp
add
add
loopne
stos
loop
and
push
mov
insb
je
js,pt
cli
inc
popf
cmpsb
mov
dec
rcll
sub
mov
xor
in
lds
enter
pop
movsb
icebp
test
je
pop
cwtl
fucomi
cmp
dec
mov
xlat
lcall
mov
xchg
les
sub
aam
xchg
mov
add
ja
mov
dec
jl
bound
je
ljmp
les
pop
adc
mov
or
notb
adc
pop
cmp
push
push
ficoml
mov
subb
adcl
loope
popf
sub
divb
in
ljmp
sbb
cmp
mov
mov
andl
pop
out
push
inc
sub
adc
mov
adc
push
or
mov
shr
mov
out
std
stos
aas
sbbl
dec
inc
or
js
and
add
push
loop
pop
inc
pop
movsb
sahf
jp
mov
mov
lds
jne
push
in
mov
inc
mov
sbb
or
and
jge
and
addr16
repnz
xchg
or
arpl
pop
cmp
mov
jae
add
add
jns
cmpsl
pop
sub
push
cmpsl
mov
adc
adc
mov
mov
pushf
loop
inc
mov
and
fisttpl
sub
adc
xor
adc
mov
cwtl
cmp
add
dec
pop
addb
decb
lock
xlat
roll
fdivrs
aaa
mov
sti
push
ss
std
push
or
and
xor
mov
movsl
out
test
sub
inc
and
cli
jl
fbld
dec
lret
ret
adc
pop
lcall
shrb
mov
in
cli
sub
cltd
repnz
jne
ret
dec
xor
dec
ds
hlt
test
sub
xchg
out
mov
lds
inc
mov
xchg
cs
ds
inc
insl
shrl
inc
jmp
ror
js
dec
mov
int
pop
dec
jno
sarl
pop
sahf
int3
sbb
add
lret
sbbl
or
hlt
pop
or
mov
ret
cmp
mov
out
aam
stos
push
push
jae
mov
sub
in
push
ret
sbb
xchg
inc
add
xchg
xchg
mov
inc
mov
fisubl
hlt
jno
out
ss
cld
lret
pusha
pop
sbb
mov
in
fidivl
lock
jns
ds
divb
push
inc
pop
add
je
fstpt
icebp
and
test
dec
cli
pop
inc
add
je
cmpsl
cmc
enter
jmp
mov
jne
sahf
jle
pop
adc
xchg
sbb
or
int
pop
xorps
jbe
int3
pusha
faddp
xlat
pop
ret
insl
mov
xchg
sub
and
cmpsb
je
mov
dec
aad
pop
or
and
mov
and
insl
push
adc
mov
push
inc
cmpsl
inc
and
loop
in
xchg
mov
sub
stos
mov
xchg
dec
leave
test
mov
push
cli
in
inc
mov
loop
pop
mov
incb
mov
rcl
pop
add
lea
icebp
and
cs
adc
les
es
ds
mov
cmp
xchg
pop
clc
jecxz
cld
lea
sbb
insb
xchg
out
xorb
lods
dec
decl
and
rorl
arpl
scas
div
out
leave
rcll
and
cmpsl
mov
std
lret
movsl
stos
lret
lds
ds
cwtl
push
cmp
sbb
mov
push
daa
add
xchg
mov
adc
ficompl
pop
push
insb
xchg
aad
movsl
pop
mov
shl
fmull
xchg
mov
fadd
xchg
lock
loopne
testb
fldcw
fdivs
mov
jp
clc
sub
mov
dec
push
jbe
xchg
ret
cmp
jae
or
lods
shll
mov
mov
out
stos
orb
mov
mov
jl
mov
repz
popa
or
lds
iret
insl
pop
cmpsl
out
cmp
in
inc
in
addr16
xchg
add
inc
cmp
and
jl
dec
lock
movsl
pop
push
out
mov
jecxz
cmpsl
movsb
insb
jbe
mov
adc
lcall
jno
mov
ficomps
and
mov
pop
fsubrl
mov
mov
cmpsl
je
ret
fs
lods
test
into
adc
jmp
adc
lret
xchg
push
imul
adc
mov
movsl
decb
mov
dec
xlat
jae
xor
adc
es
cmp
sub
push
mov
jne
ret
push
push
xor
fldcw
xorb
mov
xchg
and
cmc
xchg
mov
xchg
popf
inc
adc
mov
aaa
cld
rclb
lret
xchg
inc
jae
aaa
or
dec
out
rol
push
pusha
jae
shl
ret
sub
aam
lods
adc
std
lods
xor
and
jnp
or
adc
jle
aad
arpl
cwtl
pop
test
rcrl
ffreep
xchg
xor
pushl
in
test
cmpsb
call
mov
out
dec
data16
lea
xrelease
lahf
jle
push
push
hlt
roll
sbb
jge
push
xchg
jmp
push
push
sbb
subl
out
jbe
cmp
loopne
movsl
movsl
dec
out
ficoml
mov
push
cli
lret
dec
ss
or
mov
dec
jno
in
mov
loope
cmc
or
sarb
sbb
clc
sarb
jmp
clc
stos
xchg
jp
add
add
add
add
lock
add
add
add
add
add
add
add
pop
add
add
mov
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
repz
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
push
add
and
add
add
add
add
jbe
add
add
add
add
add
add
add
dec
add
add
add
add
add
fildl
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
mov
add
pop
add
jmp
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
movsb
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
push
cmp
add
add
sub
add
xchg
add
add
add
push
roll
add
add
jle
add
add
add
add
pop
add
add
add
add
add
add
add
out
add
xchg
add
jno
pop
add
xor
lods
push
add
pushf
add
or
add
add
add
add
jmp
lods
add
add
sahf
add
ret
add
add
xor
inc
jbe
mov
or
fs
imul
jae
imul
push
jo
and
push
outsb
push
jb
inc
add
imul
dec
jb
jbe
outsb
push
push
je
je
add
add
imul
dec
push
imul
ja
and
dec
dec
outsb
ja
add
insb
jne
insl
jae
ja
inc
inc
je
inc
inc
jp
and
push
insl
jbe
imul
addr16
add
push
push
add
add
add
pop
adc
js
add
movups
rolb
adc
jecxz
adc
sub
adc
or
adc
adc
add
adc
add
adc
jmp
adc
cltd
insb
adc
jns
adc
push
adc
add
xor
add
insb
adc
sbb
push
aaa
adc
push
xor
add
adc
dec
inc
adc
imul
ds
adc
out
adc
ja
adc
push
push
adc
jle
adc
outsb
adc
inc
push
adc
in
sub
add
jno
add
push
adc
adc
adc
inc
outsb
adc
clc
push
adc
lods
pop
adc
cld
adc
cmc
adc
enter
les
add
adc
add
add
and
add
adc
fsts
adc
mov
add
push
adc
xor
add
pop
adc
icebp
inc
adc
arpl
adc
fldenv
popa
pop
adc
and
add
inc
adc
push
adc
add
jno
dec
insl
insl
push
jp
jp
imul
add
je
ja
dec
insl
push
jp
imul
dec
add
add
push
insl
pop
je
js
push
outsb
je
gs
push
add
push
jno
imul
imul
inc
gs
imul
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
inc
pop
inc
inc
push
push
dec
add
dec
pop
xor
inc
add
dec
pop
push
aaa
aaa
push
push
pop
pop
pop
inc
cmp
push
dec
aaa
pop
inc
dec
push
pop
push
inc
dec
pop
push
add
xor
pop
aaa
cmp
pop
add
xor
inc
xor
dec
cmp
xor
dec
xor
dec
cmp
pop
aaa
cmp
dec
push
dec
pop
xor
inc
push
dec
xor
inc
dec
dec
xor
cmp
pop
inc
xor
xor
ss
inc
xor
pop
xor
add
inc
xor
inc
add
xor
xor
xor
inc
add
cmp
push
push
xor
add
xor
dec
ss
xor
xor
push
dec
push
pop
push
inc
push
pop
ss
add
push
pop
cmp
dec
cmp
pop
cmp
dec
inc
pop
pop
pop
dec
pop
inc
inc
aaa
add
xor
pop
xor
add
pop
push
push
push
xor
inc
dec
xor
pop
dec
push
dec
pop
xor
pop
pop
inc
push
push
dec
xor
pop
dec
add
push
add
add
inc
add
dec
add
pop
add
dec
add
pop
add
inc
add
aaa
add
dec
add
inc
add
push
add
inc
add
add
pop
add
push
add
add
add
inc
add
inc
add
add
xor
inc
add
dec
push
add
aaa
add
add
dec
add
add
dec
add
add
xor
push
add
dec
add
push
add
push
add
inc
add
pop
add
dec
add
xor
pop
add
xor
add
xor
pop
add
dec
add
dec
add
add
dec
add
cmp
inc
add
add
dec
add
dec
add
add
inc
add
dec
add
add
xor
add
xor
add
dec
add
dec
add
push
add
dec
add
push
push
inc
push
xchg
sbb
inc
movsl
aam
sbb
inc
push
add
dec
cmp
inc
push
ja
jne
pop
jae
jne
outsb
pop
jae
jns
addr16
bound
jo
bound
ret
push
divb
inc
xchg
outsl
cmp
test
sbb
rcll
and
cmp
pop
xchg
insl
mov
pop
mov
jno
das
jb
insb
xor
mov
jp
or
and
lret
push
mov
pop
fwait
iret
adc
incb
cmpsl
sub
add
mov
xchg
outsl
adc
outsb
mov
jmp
stc
rclb
pop
daa
cli
adc
and
add
inc
dec
pop
icebp
out
fmull
lods
sub
cmp
repnz
out
into
popa
lock
dec
cltd
in
xchg
push
sub
pop
jae
inc
repz
add
popl
push
inc
in
scas
ja
cmpsb
mov
xchg
dec
sbb
dec
xchg
daa
je
push
dec
and
sbb
cli
dec
lret
sbb
inc
xor
or
jl
dec
xor
test
xchg
shrb
push
push
lds
mov
loopne
sub
mov
xchg
add
push
dec
jno
in
cmp
loopne
addr16
fs
xor
or
mov
xlat
out
lods
mov
and
ficoms
inc
fidivl
test
popa
in
sub
shll
and
xchg
test
inc
push
cmp
std
add
fsts
jp
pop
imul
test
adc
ficompl
mov
leave
shlb
imul
pop
dec
or
lcall
pop
insl
or
sti
xchg
mov
mov
add
jp
dec
stos
mov
mov
addl
shlb
push
int3
jbe
push
sub
rol
cmp
jp
test
sub
and
subb
xchg
je,pt
push
add
add
add
add
add
add
and
add
dec
add
addb
add
add
add
add
add
add
add
lea
add
mov
add
mov
add
add
add
add
add
add
add
xor
add
mov
add
add
add
sbb
add
call
add
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
pusha
xchg
add
scas
push
add
in
add
add
add
adc
add
in
add
add
add
cmp
add
in
add
add
add
pusha
lcall
in
add
add
add
push
add
add
add
add
add
add
pushf
add
and
add
in
add
add
add
inc
dec
scas
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
std
jnp
push
std
push
std
push
std
push
std
push
std
out
push
je
push
std
push
std
push
std
mov
mov
push
std
push
std
mov
pop
loopne
push
std
push
std
push
std
lcall
aaa
out
push
std
push
std
add
xlat
sti
add
movl
std
loopne
inc
push
std
push
std
push
xchg
pop
push
std
push
std
dec
push
hlt
push
std
push
std
push
std
xchg
push
std
push
std
push
std
push
std
push
std
push
std
push
std
push
std
push
std
push
std
push
std
push
std
mov
stos
push
std
push
std
imul
adc
push
std
dec
push
push
std
push
std
push
std
push
std
push
std
xor
xor
push
std
push
std
push
std
push
std
push
std
push
std
dec
mov
test
push
std
push
std
push
std
push
std
sarb
jns
push
std
push
std
push
std
push
std
push
std
jg
fiaddl
ss
push
std
push
std
push
std
push
std
push
std
push
std
push
std
push
std
push
std
push
std
push
std
push
std
push
std
push
std
push
std
push
std
push
std
push
std
push
std
push
std
mov
push
std
push
std
push
std
push
std
and
mov
push
std
push
std
push
std
push
std
push
std
push
std
push
std
push
std
push
std
push
std
pop
pop
dec
push
std
push
std
push
std
sbb
lret
std
cmp
push
std
adc
mov
adc
mov
push
std
adc
std
push
std
xor
rol
push
std
push
std
push
std
push
std
push
std
push
std
push
std
push
std
push
std
push
std
push
std
push
std
push
std
push
std
add
add
push
cmp
push
std
mov
push
push
std
push
std
les
push
std
push
std
push
std
ret
push
std
push
std
push
std
push
std
push
std
ret
jo
push
std
push
std
push
std
push
std
test
cwtl
push
std
or
push
std
push
std
lods
call
push
std
inc
ja
push
std
es
push
std
push
std
pop
bound
push
std
push
std
push
std
push
std
push
std
adc
ret
add
push
std
push
std
push
std
push
std
push
std
push
std
push
std
push
std
push
std
ds
test
std
push
std
push
std
push
std
push
std
push
std
push
std
push
std
push
std
push
std
ret
push
std
push
std
push
std
iret
xor
push
std
aaa
mov
push
std
push
std
push
std
push
std
push
std
push
std
push
std
push
std
push
std
push
std
push
std
push
std
push
std
push
std
push
std
in
lods
push
std
push
std
aam
mov
push
std
push
std
push
std
push
std
push
std
push
std
imul
mov
ss
push
std
push
std
push
std
push
std
push
std
push
std
push
std
push
std
jg
mov
std
push
std
push
std
push
std
push
std
push
std
push
std
add
dec
push
std
push
std
push
std
xchg
jl
jbe
shufps
std
or
aad
push
std
push
std
push
std
push
std
push
std
push
std
push
std
jo
das
pusha
stc
test
std
push
std
push
std
or
mov
push
std
push
std
push
std
push
std
push
std
push
std
push
std
push
std
push
std
push
std
push
std
jge
fdivs
adc
push
std
push
std
push
std
insl
rcl
push
std
push
std
push
std
insl
lahf
cmpsl
jbe
loop
push
std
push
std
push
std
push
std
push
std
adc
push
std
push
std
aaa
push
push
std
push
std
push
std
push
std
mov
jnp
push
std
push
std
mov
std
push
std
push
std
push
std
push
std
push
std
lock
push
push
std
test
push
std
push
std
push
std
push
std
push
std
push
std
clc
mov
push
stc
das
push
std
push
std
inc
popf
push
push
std
push
std
cmp
push
std
push
std
push
std
push
std
pushf
cwtl
sub
push
std
stc
movsl
xchg
push
std
add
std
push
std
xlat
je
push
std
push
std
push
std
push
std
in
jge
push
std
push
std
push
std
push
std
push
std
push
std
xchg
leave
sbb
pop
and
push
std
push
std
push
std
push
std
push
std
push
std
push
std
std
insl
sbb
push
std
push
std
push
std
push
std
push
std
push
std
push
std
push
std
push
std
inc
vshufps
std
scas
xchg
dec
push
std
inc
sti
mov
push
std
push
std
push
std
push
std
push
std
push
std
push
std
push
std
aam
inc
push
std
push
std
push
std
push
std
push
std
lret
sub
push
std
push
std
push
std
in
add
push
std
push
std
ss
mov
imul
std
jmp
enter
push
pop
mov
push
std
push
std
push
std
shrl
push
std
push
std
push
std
push
std
push
std
push
std
lahf
push
cmp
push
std
gs
icebp
push
std
push
std
sub
push
std
push
std
push
std
push
std
push
std
push
std
push
std
cltd
sbb
push
std
push
std
push
std
push
std
push
std
xor
push
push
std
nop
adc
push
std
push
std
push
std
push
std
push
std
push
std
aam
sub
push
std
xor
stos
xor
push
std
push
std
push
std
push
std
push
std
push
std
push
std
push
std
push
std
mov
std
lret
push
std
xchg
inc
popf
mov
push
std
push
std
push
std
push
std
push
std
inc
lcall
std
push
std
je,pt
push
std
push
std
push
std
and
dec
push
std
push
std
push
std
push
std
push
std
xor
push
std
push
std
push
std
push
std
push
std
push
std
cmp
push
std
push
std
mov
push
std
shr
je
clc
push
std
push
std
push
std
push
std
push
std
push
inc
inc
dec
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
lock
add
jg
repnz
frstpm(287
or
xchg
loope
or
add
in
fcmovnb
mov
in
frstpm(287
or
in
fcomi
xor
frstpm(287
or
in
frstpm(287
or
in
frstpm(287
or
add
in
frstpm(287
or
in
frstpm(287
or
in
frstpm(287
or
add
in
frstpm(287
or
in
fcmovnu
gs
in
frstpm(287
or
add
in
frstpm(287
or
in
frstpm(287
or
push
add
pop
popf
or
fnsetpm(287
add
frstpm(287
or
in
hlt
add
in
fistl
lock
fistpl
mov
mov
add
or
in
frstpm(287
or
in
frstpm(287
or
in
fildl
add
mov
lods
or
or
in
frstpm(287
or
add
in
frstpm(287
or
in
frstpm(287
or
in
frstpm(287
or
add
in
dec
pushf
in
repnz
frstpm(287
or
in
fildl
add
inc
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ds
cmpsb
pop
fldenv
fldenv
fldenv
fldenv
fldenv
fldenv
data16
add
cmpsb
pop
fldenv
fldenv
fnstcw
and
jg
adc
pop
fldenv
or
dec
imul
pop
fldenv
fdecstp
cmp
pop
fldenv
fldenv
lea
arpl
flds
cmpsb
pop
fldenv
fldenv
fldenv
fstps
fldenv
fldenv
flds
cmpsb
pop
fldenv
fldenv
flds
xchg
dec
cmpsb
pop
fldenv
int3
cmpsb
pop
fldenv
fld
push
or
jle
and
pop
fldenv
fldenv
fldenv
fnstcw
cmpsb
pop
fldenv
flds
push
inc
add
add
add
adc
add
imul
add
insb
add
insb
add
jo
add
jno
bound
bound
jae
bound
insb
add
add
add
ja
jae
jae
push
js
outsb
add
je
data16
jo
jp
data16
jb
ja
jns
imul
outsl
add
add
data16
ja
data16
add
arpl
arpl
insl
add
insb
add
add
push
push
push
add
outsl
add
imul
add
jo
outsb
add
add
insb
add
jp
jbe
jbe
je
popa
add
jno
jo
js
adc
pop
add
outsb
add
jne
jae
jb
jno
jne
bound
push
jbe
jns
imul
jae
str
insl
add
outsl
add
jb
je
outsb
add
js
outsl
add
add
jne
add
adc
add
jbe
data16
imul
add
js
jbe
add
arpl
jo
add
add
outsl
add
ltr
jbe
jns
ja
je
imul
jb
js
push
add
bound
adc
push
add
insl
add
popa
add
je
jp
bound
js
jb
jns
push
add
push
jbe
adc
dec
add
js
ja
bound
jns
je
imul
add
jne
imul
add
jp
adc
push
add
add
add
jns
jp
imul
add
imul
add
jae
push
imul
add
adc
push
add
push
add
outsl
add
js
jns
jne
jp
insl
add
push
insb
add
add
jbe
adc
dec
add
insl
add
add
outsl
add
add
jns
jbe
arpl
js
js
data16
add
ja
add
jno
je
imul
add
jno
push
jno
jp
jno
insb
add
jb
ja
adc
dec
add
jo
jne
add
push
add
arpl
imul
jbe
add
add
add
add
add
add
add
adc
inc
add
jno
outsl
add
bound
bound
outsb
add
jp
add
jns
jb
push
insl
add
add
add
jp
add
jp
outsl
add
jbe
imul
jns
imul
add
jbe
add
add
jp
jne
jno
outsb
add
jae
imul
add
add
push
jns
je
adc
inc
add
jne
jne
data16
jns
jo
push
add
jbe
je
jae
data16
jb
popa
add
push
add
add
jae
jbe
push
jo
outsl
add
add
imul
add
insl
add
add
jns
ja
imul
push
add
outsl
add
jns
jns
jbe
jae
push
jno
arpl
ja
push
add
add
outsl
add
add
insb
add
add
jbe
imul
add
js
jp
popa
add
insb
add
jne
jp
push
add
push
inc
add
add
add
add
cmp
cmp
insb
cmp
cmpb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
lea
lcall
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
mov
cmp
insb
cmpb
movsl
ds
sarb
idivb
std
or
adc
sbb
push
aas
pop
aas
addr16
insl
aas
jl
xchg
mov
xchg
aas
xchg
aas
fwait
aas
lahf
aas
movsl
aas
test
aas
add
add
add
sub
xor
xor
xor
xor
xor
xor
dec
xor
xor
xor
xor
xor
xor
and
inc
xor
dec
xor
xor
xor
xor
push
xor
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
pusha
xor
xorb
xor
sub
dec
imul
ss
ss
mov
ss
ss
jecxz
jmp
aaa
adc
sbb
and
sub
xor
xor
aaa
pop
aaa
fs
insb
aaa
jb
jp
xorb
aaa
lea
xchg
aaa
test
add
cmp
push
cmp
jno
cmp
cmp
cmp
cmp
js
jle
mov
cwtl
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
cmp
mov
lea
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
imul
hlt
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
bound
stos
cmp
sbb
sub
inc
ds
bound
xchg
ds
loopne,pt
in
ds
ds
add
daa
aas
sub
aas
iret
aas
add
add
add
add
or
sub
inc
xor
xor
bound
push
xor
xor
xor
xor
bound
data16
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
movsb
xor
push
ss
ss
arpl
imul
mov
mov
mov
aaa
push
aaa
bound
outsb
aaa
mov
cmp
cmp
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
cmp
jno
ja
jnp
cltd
cmp
cmp
jae
jns
cmpb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
and
dec
ds
ds
jne,pt
cmpb
sarl
xlat
fdivrl
hlt
add
or
aas
xor
aaa
aas
cmp
inc
aas
dec
aas
dec
aas
push
aas
pop
aas
pop
aas
test
add
add
add
add
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
pop
xor
xor
jne
jl
xchg
xor
xor
xor
sub
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
fidivl
out
xor
push
ss
ss
ss
mov
ss
mov
les
fdivl
cmc
cmp
inc
aaa
inc
aaa
jno
jp
xchg
lahf
aaa
mov
aaa
shll
loope
out
pop
cmp
cmp
cmp
dec
cmp
mov
xchg
cmp
leave
cmp
cmp
cmp
cmp
pop
cmp
add
add
pop
add
add
xor
xor
xor
cmp
inc
xor
dec
xor
pop
xor
insb
xor
enter
clc
xor
xor
xor
adc
adc
sbb
sbb
and
and
sub
sub
xor
cmp
mov
xor
xor
xor
xor
xor
xor
xor
add
mov
add
cwtl
xor
push
xor
jl
xorb
xor
cwtl
xor
movsb
xor
mov
mov
mov
xor
int3
xor
fdivs
in
call
xor
cld
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
ss
ss
ss
ss
ss
ss
ss
add
