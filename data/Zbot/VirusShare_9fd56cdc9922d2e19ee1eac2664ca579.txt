push
mov
sub
movl
movl
lea
mov
mov
mov
add
mov
sub
mov
movl
mov
sub
mov
mov
pop
ret
int3
int3
push
mov
sub
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
mov
imul
mov
lea
mov
mov
or
mov
imul
mov
sub
mov
push
push
push
push
push
call
cmp
jne
movl
mov
or
mov
sub
add
mov
call
movl
movl
mov
and
add
mov
sub
mov
mov
add
imul
mov
mov
pop
ret
push
mov
sub
movl
jmp
mov
add
mov
cmpl
jge
movl
lea
mov
lea
mov
mov
add
mov
mov
cltd
idiv
mov
jmp
movl
movl
movl
mov
or
add
imul
mov
mov
pop
ret
int3
int3
int3
push
mov
sub
movl
movl
lea
mov
mov
mov
imul
imul
mov
mov
pop
ret
int3
int3
push
mov
sub
xor
je
movl
mov
cmp
jne
movl
mov
and
add
mov
lea
mov
mov
mov
and
add
mov
sub
mov
movl
mov
push
mov
push
push
call
add
movl
lea
mov
mov
mov
imul
imul
mov
movl
cmpl
jne
movl
movl
mov
add
mov
cltd
idiv
mov
call
jmp
movl
cmpl
je
movl
lea
mov
mov
or
mov
sub
imul
mov
movl
movl
mov
add
mov
cltd
idiv
mov
sub
mov
movl
lea
mov
mov
or
mov
sub
mov
sub
mov
movl
movl
mov
push
mov
push
mov
push
call
add
cmpl
je
cmpl
jne
call
lea
mov
mov
add
mov
cltd
idiv
imul
mov
lea
mov
mov
mov
add
mov
call
mov
add
add
mov
jmp
movl
jmp
mov
add
mov
cmpl
jge
call
movl
movl
lea
mov
mov
mov
sub
mov
sub
mov
jmp
call
call
movl
jmp
mov
add
mov
cmpl
jge
movl
movl
lea
mov
mov
mov
sub
mov
sub
mov
mov
or
imul
mov
sub
mov
jmp
xor
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
lea
mov
mov
mov
or
mov
and
imul
imul
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
jmp
mov
add
mov
mov
shr
cmp
jae
mov
mov
mov
mov
rorl
mov
xor
mov
mov
mov
mov
mov
jmp
mov
pop
ret
int3
int3
push
mov
push
movl
movl
mov
add
mov
sub
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
lea
mov
mov
mov
or
mov
add
cltd
idiv
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
lea
mov
mov
add
mov
cltd
idiv
add
mov
mov
push
mov
push
call
add
mov
imul
mov
sub
mov
push
call
add
shl
push
push
push
push
call
mov
movl
movl
mov
push
mov
push
mov
push
call
add
mov
sub
imul
mov
movl
movl
jmp
mov
add
mov
cmpl
jge
movl
movl
mov
cmp
jne
lea
mov
mov
mov
add
add
mov
jmp
lea
mov
lea
mov
movl
mov
mov
and
mov
mov
and
add
imul
mov
lea
mov
lea
mov
mov
mov
and
mov
add
mov
sub
mov
mov
or
add
add
mov
jmp
movl
jmp
mov
add
mov
mov
cmp
jae
mov
add
mov
mov
mov
jmp
movl
lea
mov
mov
mov
and
sub
mov
mov
push
push
mov
push
call
add
movl
mov
and
sub
mov
sub
mov
push
call
mov
movl
mov
or
imul
mov
sub
mov
mov
mov
mov
push
mov
push
push
push
mov
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
mov
push
call
pop
orl
orl
call
mov
mov
call
mov
mov
mov
mov
mov
call
cmp
jne
push
call
pop
call
push
push
call
mov
mov
lea
push
pushl
lea
push
lea
push
lea
push
call
push
push
call
add
mov
mov
mov
cmpb
jne
inc
mov
mov
cmp
je
cmp
jne
cmpb
jne
inc
mov
mov
cmp
je
cmp
jbe
mov
lea
push
call
testb
je
movzwl
jmp
cmpb
jbe
inc
mov
jmp
push
pop
push
push
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
jmp
jmp
jmp
jmp
jmp
push
push
call
pop
pop
ret
jmp
xor
ret
ret
jmp
jmp
cmpl
jne
pushl
call
pop
ret
push
push
pushl
call
add
ret
pushl
call
neg
sbb
pop
neg
dec
ret
jmp
int3
int3
int3
int3
int3
int3
jmp
jmp
jmp
jmp
pusha
and
add
add
add
pushf
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
pusha
and
add
add
nop
and
add
add
enter
fsubl
add
lock
add
and
add
and
add
add
inc
and
add
and
add
dec
and
add
fsubs
add
mov
add
movsb
and
add
test
add
sbb
add
xor
add
inc
and
add
push
and
add
add
add
filds
add
hlt
and
add
and
add
and
add
and
add
add
andb
add
add
popa
jae
popa
jae
popa
jae
popa
jae
popa
jae
add
inc
push
push
push
pop
dec
dec
push
inc
dec
dec
inc
pop
inc
push
inc
inc
inc
push
pop
push
dec
pop
inc
add
xor
add
jmp
sbb
hlt
sbb
andb
add
add
add
add
cmp
add
push
and
add
xor
add
adc
add
lock
add
and
add
pusha
and
add
add
add
pushf
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
pusha
and
add
add
nop
and
add
add
enter
fsubl
add
lock
add
and
add
and
add
add
inc
and
add
and
add
dec
and
add
fsubs
add
mov
add
movsb
and
add
test
add
sbb
add
xor
add
inc
and
add
push
and
add
add
add
filds
add
hlt
and
add
and
add
and
add
and
add
add
andb
add
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
repnz
jb
jne
insb
inc
insb
insb
outsl
arpl
add
jo
jb
add
mov
jo
insb
insb
outsl
arpl
in
add
popa
insb
inc
jb
gs
add
popa
insb
inc
insb
insb
outsl
arpl
add
inc
gs
jns
je
insl
push
imul
insb
gs
imul
gs
popa
jae
inc
jb
outsl
jb
add
inc
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
inc
popa
fs
gs
fs
je
add
das
add
gs
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
xlat
add
inc
popa
fs
jb
je
push
je
add
inc
gs
jns
je
insl
inc
gs
jne
je
inc
dec
inc
add
push
add
insb
je
inc
jns
gs
outsl
push
imul
loop
dec
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
int3
add
je
jb
outsl
arpl
fs
arpl
insl
outsb
je
add
add
push
gs
js
gs
imul
gs
add
add
gs
sgdtl
je
jne
jb
outsb
je
push
add
iret
add
insl
imul
outsl
arpl
jae
add
inc
jne
jb
outsb
je
jb
arpl
jae
int
dec
outsb
je
jb
outsl
arpl
fs
js
push
add
add
inc
popa
fs
outsl
fs
je
add
cmp
dec
outsl
fs
gs
imul
add
iret
add
je
jb
outsl
arpl
fs
outsb
arpl
insl
outsb
je
add
add
imul
inc
jb
je
arpl
push
arpl
outsb
add
push
dec
inc
dec
xor
cs
insb
add
adc
inc
outsl
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
add
add
push
dec
inc
inc
jb
insl
push
je
imul
jb
popa
je
push
je
gs
insl
dec
outsb
dec
inc
insb
outsl
bound
add
add
jb
outsb
addr16
jb
insl
inc
dec
push
dec
inc
add
outsb
imul
add
imul
outsl
push
outsb
imul
imul
inc
outsl
push
popa
jae
dec
gs
push
gs
insb
insb
outsl
arpl
add
add
jb
outsb
addr16
jb
insl
inc
push
dec
inc
xor
outsl
insb
xor
cs
insb
add
imul
cmp
imul
inc
push
push
cs
insb
add
roll
pop
gs
je
dec
add
arpl
inc
imul
gs
je
add
insl
fs
outsb
add
pop
pop
addr16
popa
imul
lidtl
outsb
imul
add
jae
je
jae
jb
popa
je
gs
add
popf
add
fs
jae
pop
imul
add
jo
pop
arpl
insl
outsl
fs
outsl
add
jo
pop
insw
outsl
fs
addl
je
popa
jo
pop
je
jo
add
lret
gs
gs
pop
push
gs
add
mov
pop
arpl
je
outsl
insb
data16
add
pop
pop
fs
insb
outsl
outsb
gs
je
xchg
pop
outsl
outsb
gs
je
push
inc
gs
je
jb
jne
dec
outsb
outsw
inc
aad
add
add
add
aad
cltd
cmpsb
sub
and
sbb
push
popa
popf
filds
sti
and
sub
mov
mov
repz
adc
add
in
add
fisttpl
xchg
cmp
adc
insb
imul
lcall
or
in
fs
cmpsl
mov
sbb
sbb
andb
jb
bound
out
sbb
mov
mov
mov
or
jbe
movl
scas
dec
les
arpl
inc
jge
sub
movsb
or
call
jo
cs
add
mov
cmpsl
js
inc
popa
lret
jne
and
decl
je
inc
dec
pop
cltd
xchg
adc
stc
les
dec
roll
mov
adc
and
and
add
rcll
arpl
movsb
sbb
es
push
pushf
adc
push
mov
cltd
cmpb
or
mov
pop
lds
adcl
cmp
test
xor
adcl
jb
call
popa
int
sub
mov
jecxz
xchg
pop
xchg
cmpb
dec
sbb
pop
or
filds
inc
dec
xchg
popf
cmc
adc
sbb
lcall
mov
movsb
jb
inc
and
push
leave
xchg
enter
inc
add
mov
push
cltd
pop
in
adc
jns
ret
sbb
inc
scas
sbb
das
test
pop
ret
cmovno
incb
cwtl
or
pop
mov
dec
xchg
sub
fadd
sbb
addl
and
sub
mov
lds
jnp
dec
mov
jne
nop
andl
test
and
filds
dec
shlb
gs
xchg
mov
call
jae
inc
test
jl
popa
in
mov
mull
mov
pop
xchg
mov
movsl
inc
mov
aam
inc
or
andl
cld
push
sub
add
sub
cmc
sbb
jecxz
shll
cld
xchg
and
mov
add
sbb
mov
lret
push
push
sti
dec
es
rorl
mov
sub
jb
rcl
pop
in
cltd
rcrb
add
fwait
pushf
jmp
je
inc
add
sbb
and
ja
push
fwait
sbb
lea
mov
lds
sbb
inc
sbb
mov
and
xchg
or
dec
leave
fdivrs
sbb
jbe
inc
and
aam
inc
and
dec
sbb
cmp
inc
sub
push
or
fcoms
aad
push
ret
sbb
pop
or
test
das
dec
nop
and
dec
sub
add
mov
adc
gs
push
jno
into
movsb
sub
mov
fidivrl
sbb
dec
inc
jns
or
outsb
xchg
fistpl
stc
mov
sbb
xchg
dec
loop
cmp
adc
jno
xchg
sbb
jne
sub
je
subl
test
fs
rol
xor
mov
add
adc
sub
dec
pop
arpl
pushf
xchg
pop
mov
mov
adc
std
rcll
pop
test
mov
mov
adc
add
nop
or
aas
push
jmp
sub
xchg
xchg
pop
popa
adc
jo
nop
and
push
inc
cmp
pop
mov
std
mov
rcrb
dec
addl
or
cwtl
andl
mov
repz
enter
mov
lea
repz
pop
ja
dec
nop
xor
movsl
scas
xorl
xchg
sar
cmp
fcompl
xchg
test
push
mov
sti
rclb
pop
aad
pop
popf
stc
les
sbb
imul
in
and
lods
dec
or
mov
and
pop
shll
or
xor
add
fwait
pop
or
pop
ret
or
pop
mov
in
imul
pop
or
push
mov
out
xchg
fisubl
test
fiadds
movsl
fmull
cmp
pushf
add
adc
xchg
adc
nop
push
lds
scas
add
test
repnz
scas
scas
pop
push
sub
mov
and
xchg
push
mov
das
bound
daa
xchg
pop
dec
sub
test
push
cmp
jmp
mov
pop
xchg
sbb
jb
add
rcr
inc
xchg
mov
and
js
or
mov
test
lret
addb
das
movl
inc
push
xchg
or
mov
and
insb
stc
mov
mov
leave
mov
pop
fwait
dec
push
into
jg
int
into
or
ret
adc
push
nop
insl
or
push
aam
iret
adcb
inc
and
jl
sbb
push
imul
iret
dec
mov
ret
mov
mov
cmp
rorb
lret
adc
mov
fmull
add
mov
stc
popf
dec
sbb
xor
mov
bound
cmp
mov
aad
jne
aam
sbb
xchg
subl
mov
ja
dec
push
add
mov
flds
pop
cld
mov
add
xor
and
or
and
jno
test
mov
in
or
cli
dec
or
cmp
push
stc
xor
or
sub
adc
or
sbb
mov
dec
mov
nop
roll
mov
mov
lds
rorb
inc
xchg
dec
cltd
xor
inc
add
adc
rcrl
cmp
mov
cmp
mov
mov
decl
push
pop
test
pop
rorl
addr16
pushf
or
rcll
mov
push
xchg
popa
add
nop
and
jmp
sbb
add
movsb
int3
icebp
fsubs
inc
xchg
jo
sbb
adc
loopne
mov
call
xchg
cmp
aaa
xchg
test
jmp
inc
xchg
dec
cs
test
dec
int
push
xchg
mov
js
push
nop
mov
mov
out
sbb
add
jae
enter
fidivrs
pop
movsl
lds
cltd
incl
mov
lock
cmpsl
add
xchg
outsb
into
iret
divps
mov
jae
xchg
adc
stos
push
push
fldcw
jno
arpl
xor
fcompl
les
cmc
lahf
adc
addl
enter
ljmp
push
pop
or
lds
int3
aas
xor
sbb
and
or
addr16
xor
add
sbb
sbbb
push
lret
inc
add
fwait
pop
aas
pop
shl
test
add
cltd
push
lods
fs
mov
mov
sbb
lret
add
gs
pop
leave
addr16
mov
pop
test
mov
into
inc
and
psubusw
fcoml
jae
inc
xor
ret
adcl
push
jl
into
mov
push
loope
nop
sbb
popa
adc
jmp
push
adc
imull
add
andl
xor
jmp
movsl
and
jmp
movsb
push
imull
push
jnp
pop
push
jg
sub
outsb
sub
inc
pop
push
jne
jg
jb
lahf
lds
out
leave
bound
jg
bound
out
cmpsl
je
jecxz
jl
decl
pop
push
out
les
lcall
mov
outsl
enter
enter
rcl
bswap
rclb
dec
rol
outsb
and
jns
sub
rcrw
mov
fbld
out
cmp
cmpsb
push
xor
scas
ds
cmpsb
outsb
cmp
scas
outsb
cmp
mov
dec
xor
cmpsb
cs
mov
stos
mov
cmp
test
rorb
mov
shll
gs
xchg
pushf
push
push
adc
sbbl
lret
inc
das
inc
mov
dec
pusha
lods
int3
jo
fildll
inc
mov
mov
je
mul
push
adc
dec
sub
test
sub
mov
mov
in
cld
mov
sahf
inc
lahf
dec
sbb
pop
dec
push
pop
scas
inc
fists
jo
cld
xchg
fmull
push
sbb
sbb
subb
rorb
xorl
leave
pop
hlt
aad
adc
js,pt
sbb
jg
int
fidivs
xor
lock
scas
call
xchg
out
cmp
adc
enter
out
repz
lea
std
test
lock
jns
push
cmc
push
cmpl
aam
jns
add
out
filds
xchg
fildl
mov
fidivs
sbbl
xor
mov
and
sti
or
push
xrelease
push
sti
cwtl
stos
push
ljmp
stos
inc
imull
cmpsb
inc
mov
cmpsb
jne
enter
fsubs
gs
stos
gs
xchg
push
mov
repz
sbb
pop
bound
jecxz
jbe
stos
inc
jp
pop
fbstp
xchg
addr16
imul
ds
cmp
addr16
ss
outsl
repz
arpl
cmp
jecxz
dec
imul
dec
outsl
adc
pop
arpl
cmp
add
pop
imul
pop
outsl
xor
outsb
arpl
outsb
xor
outsb
imul
outsb
outsl
and
jle
and
jle
and
jle
push
jle,pt
repz
or
add
dec
test
lea
push
loop
pand
test
fists
mov
rcll
lea
xlat
add
pop
filds
mov
roll
lea
xlat
xor
das
fbstp
mov
shll
lea
xlat
and
aas
fbld
mov
and
dec
fistl
dec
fists
pop
rcll
pop
xlat
inc
sbbl
inc
mov
inc
lea
jb
outsl
shll
xlat
xchg
orb
xchg
mov
xlat
addb
filds
mov
mov
xlat
mov
test
shll
or
rolb
xchg
cmp
js
xor
jp
xor
xor
jp
cmp
repz
js
xor
js
clc
xchg
cmp
stc
sub
sbb
stc
sub
sub
ss
adc
iret
cmp
in
outsb
stos
enter
dec
imul
das
add
das
inc
aas
sbb
dec
jb
das
dec
jg
aas
inc
bound
dec
inc
mov
sbb
dec
lcall
aas
dec
xchg
adc
inc
aas
sbb
inc
xchg
sbb
dec
ds
inc
mov
push
pop
inc
lcall
pop
inc
aas
sbb
out
inc
jg
clc
and
in
pop
push
jl
je
decb
jns
daa
popa
jge
sbb
xchg
jo
and
js
sub
jns
push
push
jns
daa
mov
jl
push
inc
jge
and
je
pop
mov
add
cmp
inc
dec
shlb
sbb
insl
dec
int3
in
dec
or
lods
dec
or
jmp
inc
sbb
sub
adc
mov
cmp
inc
lock
cmpsb
jo
xor
cld
xchg
outsb
jo
xchg
stos
mov
icebp
mov
cmp
outsb
subb
xor
data16
bound
mov
mov
mov
mov
lock
mov
hlt
mov
xchg
sbb
mov
push
fiadds
lods
int3
mov
ds
ds
mov
cmp
test
sbbl
mov
mov
push
mov
adc
mov
pop
mov
mov
adc
cmpl
pop
mov
pop
xchg
pop
orb
mov
dec
mov
dec
xchg
dec
sbbb
mov
jg
outsb
sbb
outsb
push
jg
outsb
adc
jle
outsl
mov
outsl
xchg
outsl
cmpb
mov
cs
mov
adc
mov
push
movzbl
and
jg
daa
xor
daa
xor
sub
mov
push
jnp
jecxz
jmp
xchg
jmp
sub
shll
repz
jmp
imul
xchg
sub
jnp
loop
mov
sub
leave
add
pop
cli
add
dec
repnz
dec
cli
mov
mov
jl
rorb
daa
cmp
into
sbb
popl
cmovs
sbb
dec
xor
lahf
inc
xor
lahf
dec
xor
outsl
dec
xor
jg
and
jg
and
popl
sbb
inc
push
adc
xlat
push
testb
pop
test
push
push
movl
push
push
ret
inc
push
es
cmpsl
pop
notl
fildl
push
xor
fcmovnbe
push
pusha
call
pusha
repz
arpl
icebp
imul
shll
ljmp
or
jns
mov
adc
repnz
cs
pop
loope
jecxz
fldl
jmp
orb
xchg
addr16
xchg
jecxz
cmpsl
sub
cmp
cmp
xchg
adcb
notl
sub
loope
push
rolb
scas
pop
xchg
xchg
pop
lret
pop
into
ja
dec
ret
dec
xchg
andb
mov
aas
mov
or
out
hlt
shlb
hlt
enter
enter
shll
out
outsl
call
in
repz
pushf
loopne
cmp
call
das
dec
icebp
fdivs
nop
addr16
stc
cwtl
arpl
mov
icebp
mov
cmc
mov
lahf
sbb
push
rorb
clc
mov
ja
lea
jno
out
jge
dec
ljmp
jl
lea
outsb
add
push
sub
push
scas
imul
cmpsb
jg
push
mov
jg
movlhps
mov
adc
xchg
cmp
or
adc
mov
pop
das
xchg
sbb
cmpb
push
scas
mov
and
and
pushf
daa
popa
ja
jmp
adc
mov
jmp
negl
mov
fildl
test
out
jo
jmp
je
xor
sbb
xchg
push
int
and
jp
or
lods
dec
shlb
lds
or
dec
jle
and
cmp
jno
pop
and
sbb
xchg
adc
arpl
insl
cmpsb
jns
outsb
or
mov
cmc
add
vmwrite
push
out
mov
rcrb
adc
jge
inc
out
jo
out
jbe
out
pop
jb
out
popa
xor
adc
incl
xor
incb
xor
ret
cli
and
push
mov
lods
push
adc
sahf
dec
inc
xlat
sbb
fwait
sbb
push
xchg
or
push
xchg
or
push
fwait
or
push
lahf
or
addr16
cmp
addr16
cmp
addr16
cmp
addr16
cmp
ja
sub
ja
sub
ja
sub
ja
sub
xchg
pop
movb
pop
into
xchg
xchg
dec
ret
dec
xchg
fwait
dec
lret
dec
into
cmpsl
xchg
jp
cmpsl
xchg
jp
cmpsl
fwait
jp
add
sbb
jnp
sub
jg
and
ja
sub
jnp
sub
jg
and
jae
and
ja
das
xor
xor
sub
lock
imul
arpl
lock
outsl
dec
hlt
lcall
cld
cwtl
arpl
mov
hlt
mov
clc
mov
cld
mov
lock
imul
addr16
test
jns
test
jns
test
jns
test
jns
pop
outsb
mov
pop
push
clc
pop
mov
outsb
stc
hlt
dec
push
clc
dec
cwtd
cld
dec
bound
hlt
js
test
cld
js
test
hlt
push
mov
bound
hlt
sbb
clc
sbb
cld
sbb
lock
hlt
or
clc
or
cld
or
lock
hlt
cmp
clc
cmp
clc
sub
cld
sub
icebp
fsubrs
cmc
fsubrs
stc
fsubs
std
fsubs
icebp
enter
enter
enter
enter
clc
outsb
sub
clc
push
stc
clc
sub
clc
bound
icebp
call
push
icebp
cwtl
outsb
dec
cmc
cwtl
push
stc
cwtl
dec
std
cwtl
bound
mov
cmc
mov
stc
mov
std
mov
icebp
mov
push
hlt
sarb
clc
fidivl
cld
shlb
lock
hlt
enter
enter
enter
clc
outsl
jmp
clc
clc
addr16
lock
imul
call
arpl
icebp
cwtl
outsl
or
cwtl
imul
cwtl
addr16
cwtl
arpl
icebp
mov
cmc
mov
stc
mov
std
mov
icebp
mov
imul
mov
arpl
icebp
test
cmp
test
cmp
test
cmp
test
cmp
pop
outsb
dec
cmc
pop
push
stc
pop
dec
std
pop
bound
dec
outsb
pop
cmc
dec
push
stc
dec
pop
std
dec
bound
js
imul
js
imul
push
push
stc
push
bound
sbb
cmc
sbb
stc
sbb
popf
sbb
inc
add
sub
jp
lahf
sahf
push
outsb
aaa
scas
sub
mov
decl
add
in
xor
adc
sbb
add
fiadds
xor
mov
scas
sub
mov
aas
mov
pusha
mov
jecxz
and
mov
cwtl
jle
icebp
nop
push
std
cwtl
data16
negb
outsb
sbb
mov
testb
cmp
mov
movsl
cmpsb
mov
incl
call
test
cmp
lods
cmpsl
out
inc
aam
dec
mov
sbb
cltd
fimuls
sbb
pop
test
push
scas
dec
jb
and
jns
xor
imul
leave
inc
loope
test
add
cltd
sbb
inc
dec
ret
adc
adc
hlt
mov
cwtl
cmpb
aam
nop
mov
pop
xor
je
cmpb
test
adc
addl
xor
ret
inc
leave
aad
sbb
inc
and
adc
je
dec
cltd
fmul
pop
xchg
jl
inc
and
or
and
xchg
jns
xchg
adc
inc
sub
add
mov
inc
loop
mov
jmp
mov
xchg
call
mov
lds
mov
cwtl
roll
xchg
jne
inc
cltd
xchg
jge
dec
and
add
xchg
fcoms
pushf
dec
mov
aam
popl
inc
push
jmp
sub
call
and
and
outsl
test
inc
sub
push
mov
inc
inc
push
mov
sbb
lcall
fistl
into
lds
test
pop
xchg
sbb
mov
les
data16
inc
fbld
je
das
ret
or
sbb
add
insb
lods
leave
and
rorb
stc
fimuls
adc
test
enter
adc
addb
cltd
sbb
mov
adc
cmp
mov
cld
out
ret
sbbb
aad
rorb
rcrb
sbb
daa
sbb
mov
call
sbb
sub
mov
cmp
inc
sbb
jmp
dec
mov
outsb
adc
push
cmp
jo
aam
push
and
call
adc
fistpl
clc
imul
push
push
push
outsb
out
xchg
scas
loopne
cmp
enter
test
pusha
cmp
adc
dec
cld
addr16
lea
or
mov
or
xorl
push
adcb
or
xor
loopne
inc
lds
xchg
sbb
loop
fsubl
jle
inc
push
inc
lcall
adc
outsl
xchg
jmp
xorb
adc
lods
xchg
xchg
sub
ret
xor
pop
push
sub
and
inc
insb
push
adc
mov
lds
adc
aaa
mov
ret
imul
mov
push
push
adc
xchg
shll
nop
push
mov
test
mov
or
pop
sbb
lcall
pop
sbb
mov
leave
mov
stos
inc
sub
pop
cli
andl
adc
pop
mov
sub
sub
xchg
popf
mov
push
sbb
roll
adc
repnz
jnp
shll
lret
mov
dec
test
addl
fnstsw
fmuls
dec
jb
xor
imul
mov
fisubs
xor
jb
shl
xchg
xor
loop
cmpsb
sub
fsubl
aaa
xchg
sbb
in
add
loope
dec
adc
shrl
adc
push
adc
insb
pop
loopne
lods
pop
add
and
adc
or
adc
jno
imul
rcll
loope
jecxz
rcrl
test
cmp
and
or
orb
xor
jle
adc
xor
pop
jns
cmp
sbb
gs
and
mov
adc
mov
xor
push
add
int3
ret
icebp
fmull
xor
shll
xchg
test
pop
push
mov
aas
adc
enter
mov
arpl
aam
push
flds
js
inc
or
in
nop
adc
mov
mov
sbb
sarb
mov
icebp
stc
ja
inc
mov
mov
test
call
inc
test
addr16
int3
sbb
xor
push
and
scas
pusha
or
xchg
add
xchg
inc
outsb
inc
dec
or
push
ja
cmpsb
push
pop
dec
test
mov
inc
stos
pop
push
mov
and
adc
rcrb
xchg
rclb
leave
sbb
repz
add
push
cld
cmp
xor
cmp
push
shl
xchg
or
inc
fbstp
sub
dec
sbb
mov
jge
rcl
push
adc
xor
adc
outsb
fsubrs
xor
xchg
sahf
adc
arpl
adc
adc
fwait
adc
inc
lods
inc
xor
adc
mov
xchg
push
rolb
popa
out
aam
xchg
inc
fsts
nop
pop
mov
push
xchg
addl
bound
sbb
gs
adc
push
pop
xor
inc
jmp
xchg
push
lea
or
popa
push
out
mov
adc
mov
push
or
fs
leave
lea
push
dec
add
inc
dec
outsb
push
bound
mov
inc
xor
cmc
inc
fcoml
jle
popf
loope
lods
sbb
jl
stos
sarb
dec
xchg
sahf
xchg
xor
int
ret
test
lahf
adc
xor
push
mov
add
sbb
mov
sbb
and
push
les
push
inc
mov
dec
dec
xchg
shll
ds
repnz
xchg
inc
gs
sub
mov
push
xchg
inc
xor
notl
dec
dec
shlb
bound
push
jno
test
js
sbb
dec
outsb
xor
xchg
into
ret
and
imul
rclb
lock
adc
xlat
stos
sub
pop
aam
addr16
inc
int
mov
pop
or
sub
or
test
ds
pop
cltd
pushf
xor
dec
fwait
sahf
xchg
lahf
xchg
lahf
add
lahf
add
lahf
add
xchg
adc
jno
inc
inc
xor
enter
inc
lds
dec
cmpsb
push
hlt
dec
cmpsl
push
testl
stc
dec
stos
push
clc
dec
stos
push
sti
jmp
push
sbb
outsb
sbb
add
inc
push
xchg
mov
jno
sub
xchg
pop
std
fcoms
mov
jle
into
fildl
out
or
or
out
insl
sbb
adc
pushf
outsb
test
mov
or
dec
xor
and
ret
stc
sub
jns
sbb
and
push
incb
sbb
jo
movsl
fistps
ljmp
dec
cmpsb
adc
cltd
and
out
mull
data16
add
sub
lock
sbb
fwait
mov
test
je
dec
xor
negl
jp
sarl
xor
daa
push
xchg
je
xchg
out
mov
jp
cld
lock
pop
add
rcrl
add
add
push
sahf
shll
ja
xlat
push
add
das
shlb
and
push
out
sbb
orl
std
lds
outsl
lret
or
jo
dec
outsb
cmp
xor
xor
mov
imul
mov
push
std
cmc
cwtl
testl
push
arpl
sub
add
shrb
xchg
push
nop
mov
mov
lret
bound
test
cld
lret
inc
or
xchg
ret
dec
jmp
rcll
test
adc
push
xchg
mov
inc
mov
insl
sar
insl
cmp
xor
cld
lods
sbb
pop
loopne
lods
cmpsb
pop
mov
mov
lods
mov
aas
mov
jge
shlb
add
add
testb
cs
repz
out
js
mov
xor
sub
rcl
into
ret
iret
ret
rcll
and
shrb
xchg
roll
xchg
push
inc
rcll
jl
repz
outsl
dec
hlt
cltd
outsb
dec
cmc
cltd
imul
cltd
imul
push
stc
cltd
gs
cli
cltd
fs
sti
cltd
addr16
cld
cltd
dec
std
cltd
popa
dec
cltd
pusha
dec
lcall
loop
xchg
fwait
sub
inc
cmpsl
mov
add
arpl
sbb
lcall
cld
lahf
inc
adc
cmpsb
sbb
out
dec
fiadds
lret
fnstcw
fidivl
pop
sbb
or
in
cltd
xchg
jno
shlb
dec
jle
sbb
fsubl
rol
and
adc
xor
sbb
xor
adc
jns
or
scas
jl
cmpsb
imul
hlt
ret
pop
add
ja
sbb
cld
sub
add
jo
push
xchg
icebp
and
subl
outsb
cmp
addb
mov
push
out
pop
add
dec
jno
inc
and
pop
std
mov
mov
xor
pop
inc
out
popf
jge
inc
jo
inc
xchg
adc
mov
rcrl
add
sbb
lahf
rorl
or
popf
or
jmp
rcl
popa
clc
iret
sbb
out
pop
les
je
xchg
dec
xor
pop
add
and
sub
inc
and
aad
sbb
in
lahf
xchg
mov
xor
or
dec
mov
nop
std
ja
jmp
rorl
xor
fimuls
imul
fcoml
xchg
mov
jnp
insl
or
jl
jne
mov
push
cmp
mov
lret
xchg
xor
mov
icebp
and
sub
inc
cmp
js
jb
or
push
xor
mov
insl
loope
call
in
cltd
mov
sbb
rol
push
jo
outsb
movsl
inc
sub
aas
pop
inc
jg
mov
sbb
gs
jmp
jle
int3
rorb
std
mov
pop
testb
es
inc
push
xor
sub
cmp
insl
jmp
std
pop
jp
push
cmp
cmp
pushf
fmull
push
gs
es
addb
pop
arpl
int3
inc
xchg
hlt
pushf
cli
sahf
push
sub
mov
push
sbb
sarb
xchg
mov
imul
sub
dec
inc
mov
sbb
inc
xchg
popa
and
aad
ret
jne
add
jg
sbb
loope
fs
js
gs
movsb
mov
lahf
loop
pushf
inc
mov
bound
add
inc
bound
adc
call
jp
inc
jns
mov
dec
cs
leave
icebp
dec
movsl
es
scas
mov
movsb
cs
sbb
jb
adc
movsl
dec
adc
mov
or
add
or
pop
shlb
mov
dec
lcall
cli
inc
sub
jo
in
ss
jle
push
mov
sahf
test
inc
aas
andl
xchg
adc
mov
push
ficoml
sbb
les
pusha
pop
popf
mov
pop
sbb
sub
fisttps
out
icebp
sub
nop
mov
inc
xor
push
pusha
pop
sbb
scas
adc
push
fldl
mov
inc
xor
fnstsw
stc
inc
push
inc
int
fs
sbb
test
jnp
iret
jno
jae
push
sub
add
mov
rcrl
aaa
jmp
fwait
mov
mov
lcall
or
or
inc
adc
out
jp,pn
daa
fcoms
lock
mov
aad
xchg
orl
daa
jmp
inc
cmpb
pop
scas
inc
xchg
adc
movsb
and
pop
or
lahf
push
lock
fs
loope
int
mov
dec
push
cmp
out
pop
pushf
sub
movsb
sbb
cld
pop
idivl
jae
adcb
std
mov
ret
mov
push
std
es
pushf
push
aas
pop
je
xorb
xchg
shlb
nop
inc
push
jmp
pop
dec
lcall
lahf
jno
sub
aam
loope
mov
adc
jns
pop
ds
adcb
repnz
cmp
in
adc
push
jno,pn
jl
or
or
xchg
inc
dec
jbe
in
popf
sbb
in
mov
lret
lea
rcl
les
pop
xlat
dec
sbb
add
daa
and
movsb
xor
je
pop
lea
test
adc
push
popf
icebp
sub
mov
push
std
imul
xor
jno
cld
pop
sub
xchg
sbb
popa
test
mov
push
cwtl
icebp
cmp
daa
loopne
or
ja
shrl
add
adc
mov
pop
jge
push
sbb
xchg
stc
xchg
adc
sarb
adc
rol
test
into
jnp
fisttpl
mov
mov
scas
imull
jnp
xchg
jo
addl
dec
mov
push
pushw
in
repnz
ljmp
cmp
ljmp
jno
xchg
sbb
mov
test
and
add
imul
jp
mov
xchg
adc
xchg
sub
lea
or
insb
push
sbb
xor
rol
imull
in
fstl
pusha
mov
push
mov
fnstcw
imul
int3
mov
dec
adc
aas
inc
insb
xor
xchg
fcoml
xchg
dec
inc
movl
fldcw
sbb
shrl
inc
in
xor
jne
rcrl
movsb
nop
std
jno
xchg
sbb
test
loope
data16
stos
sbb
jno
inc
inc
mov
or
cmpsl
lahf
insb
xor
int
cmp
loope
jl
pop
pusha
push
jecxz
shl
sar
cmp
mov
movsb
ret
imul
out
fmul
fistps
mov
pop
das
out
mov
out
xchg
in
sbbb
dec
inc
xchg
loop
mov
and
jecxz
push
and
lea
imul
lret
scas
pop
xor
mov
and
pop
xor
in
ret
jb
adcb
jl
call
pop
scas
mov
xchg
mov
pop
call
xchg
cld
push
aas
cmpsl
xor
lds
adc
sbb
bound
out
sbb
cli
inc
push
sbb
je
nop
lods
shlb
cmpl
jg
js
or
mov
or
cmpsb
shr
repnz
aaa
sub
dec
es
sbb
dec
fsubr
test
hlt
sbbl
cwtl
or
dec
imul
xor
pusha
dec
fadd
xchg
add
test
ljmp
sub
mov
cmp
and
or
aas
or
fs
xor
enter
clc
mov
andb
decl
cmp
aad
subl
pop
jecxz
arpl
jb,pt
add
dec
adc
test
mov
dec
pushl
repnz
call
stos
out
sub
fmul
sub
addb
dec
pop
shrb
inc
loopne
push
in
adc
ds
mov
and
xor
jbe
or
pop
mov
test
xchg
xchg
leave
aaa
fcomps
subb
jbe
mov
std
mov
outsl
mov
call
adcb
sub
in
xor
mov
bound
dec
mov
shll
xor
lea
jbe
out
push
loop
loopne
mov
pop
mov
mov
mov
sub
xchg
mov
xor
pop
add
jmp
into
pop
xor
mov
ja
test
fisubrl
outsl
jns
fstpl
push
cmc
mov
andb
xor
cmp
roll
or
jne
xor
and
adc
imul
lods
cmp
std
inc
and
ss
in
sbb
sbb
js
sbb
jae
icebp
mov
arpl
insb
rcl
lods
cmpl
dec
sbb
scas
imulb
leave
cmpsb
outsl
mov
mov
mov
out
subb
mov
es
sub
fdivrs
pop
xor
or
and
adc
mov
and
fs
arpl
faddp
popf
push
jg
mov
jbe
dec
push
movsb
adc
cli
sbb
push
mov
out
cmp
movsl
popf
sub
repz
and
fsubrs
in
add
push
sbb
inc
fbld
bound
lds
int3
aad
hlt
adc
hlt
and
inc
inc
mov
adc
mov
mov
sbb
jle
dec
sub
rolb
sub
lea
xor
xchg
sub
adc
adcb
mov
sbb
adc
dec
fs
cwtl
xor
sub
dec
pop
fs
dec
sub
js
jl
shll
enter
sbb
test
dec
and
xchg
sbb
dec
sarb
cmc
dec
xchg
mov
mov
shrl
adc
out
pop
mov
shl
daa
inc
test
jae
jne
lret
mov
sbb
push
pop
cltd
adc
add
push
sbb
xchg
ret
inc
jmp
jg
dec
and
xlat
mov
mov
fnsave
lret
inc
je
dec
push
and
bound
dec
aam
sbbl
xchg
add
dec
mov
jl
dec
and
or
sub
aam
mov
adc
mov
sbb
aad
mov
push
clc
imul
aad
adc
pop
test
sub
enter
gs
shll
loop
inc
and
mov
adc
sbb
push
mov
dec
sbb
pop
push
test
and
imul
add
aad
movsb
sbb
and
shlb
inc
push
adc
arpl
shlb
leave
fcompp
sbb
es
or
mov
rcl
sub
test
and
in
scas
push
dec
xchg
and
mov
adc
lds
inc
pop
jnp
xchg
cmpb
imul
sub
inc
fcmovb
sub
call
cmc
ror
xor
mov
inc
mov
inc
add
lds
mov
lahf
ret
inc
cltd
adc
inc
sub
add
shll
bound
xchg
popa
ret
push
and
adc
test
dec
test
lahf
sbb
or
sbb
gs
inc
mov
test
pop
lcall
dec
adc
jo
dec
xor
leave
sub
test
inc
ror
sub
and
mov
adc
repz
sti
pushf
adc
out
and
jg
and
imul
mov
add
in
popl
sbb
lock
and
test
mov
xchg
adc
mulb
dec
and
or
movsb
rol
daa
adc
inc
push
into
in
push
sbb
adcb
imul
sbb
aam
add
jb
dec
sbb
mov
dec
sub
or
and
xor
in
enter
adc
addl
sub
adc
iret
mov
xor
inc
cmp
leave
push
mov
aas
inc
and
add
test
xchg
sub
fucom
mov
add
adcl
sbb
jb
cmpb
je
and
xchg
insb
cltd
and
dec
cltd
sbb
sub
mov
adc
mov
and
test
cmc
and
test
movsb
sub
inc
mov
adc
hlt
mov
xchg
bnd
inc
or
or
add
aas
inc
and
or
pop
or
in
rcll
mov
sbb
sbb
xchg
mov
movsl
dec
movsb
mov
sub
inc
cwtl
and
dec
dec
fsubrl
sub
xchg
fidivs
xchg
loop
jne
ret
push
sub
pop
dec
xchg
dec
aam
pushf
sbb
inc
xorb
inc
les
xchg
adc
inc
mov
mov
fs
dec
and
pop
sbb
test
lahf
movsl
rol
push
sub
mov
and
mov
adc
adc
dec
adc
jecxz
add
lahf
mov
sbb
dec
fisttpll
push
mov
outsl
inc
sub
add
cmp
cmc
and
xor
xchg
sbb
adc
dec
sbb
dec
push
mov
js
insb
xchg
inc
jne
inc
or
sbb
inc
jp
dec
and
or
and
test
gs
iret
aad
inc
sbb
xor
es
sbb
mov
sbb
sbb
dec
inc
mov
xchg
bound
mov
pop
sbb
jge
inc
sub
push
mov
jb
sbb
in
leave
in
fs
mov
and
jb
adc
leave
sbb
inc
dec
out
cwtl
xchg
jae
inc
cltd
fistpll
das
jno
rolb
add
mov
lret
inc
and
sbb
test
inc
and
xchg
sbb
dec
ret
sbb
sbb
adc
icebp
out
xchg
and
dec
sub
imul
mov
aam
sub
fcom
fs
loope
lds
pop
mov
in
xchg
sbb
out
xor
gs
fs
sbb
jecxz
xor
inc
test
jb
dec
rorl
sub
ret
gs
add
push
mov
jns
nop
push
dec
add
adc
pop
nop
int3
lahf
push
lods
cs
jmp
cld
mov
mov
mov
cs
bound
push
aad
add
jmp
mov
cmp
dec
push
ja
test
adc
jl
xchg
xchg
sarl
sbb
sub
cmp
add
push
mov
push
cltd
fidivrs
dec
movlps
pop
fs
push
push
cmpsl
jno
scas
and
gs
push
and
xchg
and
idivl
xor
fsts
cmpsl
popa
push
je
test
pushf
icebp
jne
jno
xor
push
and
add
clc
jge
inc
adcl
push
add
sbb
popf
or
mov
inc
outsl
or
shr
loope
icebp
rol
outsb
cmp
pushw
and
adc
push
je
cld
push
dec
or
ficoms
jle
add
cmp
mov
dec
dec
jp
nop
xchg
into
fwait
lods
sbb
mov
mov
mov
popf
pop
mov
lret
xor
lret
sbb
pop
inc
test
sbbb
xor
sub
mov
add
sbb
rcr
pop
cltd
and
push
and
scas
ficompl
inc
mov
push
jnp
movsb
imul
push
mov
dec
adc
lds
lahf
xor
jecxz
push
cmpsw
add
pop
ja
push
insb
mov
push
sbb
mov
loopne
jo
jbe
push
scas
mov
xor
fs
push
into
pop
or
jmp
es
cltd
sarl
cld
enter
or
mov
sbb
mov
mov
or
fs
pop
xor
inc
call
mov
pop
fstpl
push
mov
push
xchg
popa
add
jmp
addb
push
push
addl
fcom
out
mov
ret
push
cmp
jo
or
loope
sub
mov
pop
push
xorb
add
xor
data16
inc
adc
push
sub
decl
movsb
lcall
subl
add
xchg
lods
jnp
adc
ret
push
jge
fs
into
or
push
pop
dec
fildl
fistl
test
add
repz
in
in
mov
xor
lret
ret
mov
ror
mov
inc
xchg
jl
loope
lahf
and
repnz
add
dec
push
ret
in
in
std
add
adc
test
aaa
mov
push
or
sti
fdivrl
iret
and
iret
inc
push
jns
or
fidivrl
add
movsb
mov
mov
sbb
cmpsb
inc
jecxz
frstor
ljmp
jmp
jle
inc
jbe
push
outsl
or
add
movsl
enter
out
cs
push
frstor
int
jb
loopne
xchg
mov
mov
xor
inc
setb
stos
mov
pop
sahf
lock
addr16
das
shrb
cmpsl
jecxz
cmc
outsl
pop
jge
fnstsw
mov
mov
shlb
sbb
rcrb
lock
rclb
pushf
push
pop
ret
pop
xor
lds
push
std
and
in
fidivl
push
rcl
push
mov
mov
or
or
dec
inc
in
jle
mov
ds
mov
in
cmc
int
inc
sbb
jmp
rclb
fisubs
js
or
jo
sahf
pop
sub
push
stc
dec
test
adc
xchg
adc
adcb
push
mov
in
pusha
aaa
mov
lds
fiaddl
sub
imull
fistpll
or
lret
std
push
fistpll
fdivr
cmp
hlt
idivl
sub
push
xchg
shl
cmp
shlb
popf
mov
sarb
push
clc
lock
in
leave
pop
cmc
outsl
add
popf
leave
jae
dec
xchg
or
push
pop
adc
fdivr
push
mov
xchg
jno
and
and
or
push
dec
jnp
mov
aad
pop
inc
jbe
dec
jae
or
and
mov
xchg
insl
shll
inc
sbb
das
xchg
sbb
pop
dec
repnz
pop
jmp
mov
nop
sarb
inc
cltd
fxch
sbb
and
mov
inc
js
add
gs
test
test
pop
lea
sbb
nop
sbb
mov
enter
xor
inc
jns
leave
push
je
mov
leave
test
sbb
adc
in
leave
and
out
sbb
cld
dec
ret
aad
adc
dec
sub
cmp
cs
or
xorb
bound
test
and
aam
pushf
sbb
dec
adc
test
mov
xchg
and
jmp
jbe
inc
cs
or
mov
sbb
fst
or
mov
and
cltd
adc
mov
jnp
inc
sbb
sbb
fs
dec
das
loope
sbb
addb
xor
add
mov
sbb
fadds
mov
push
stc
sbb
dec
mov
xchg
sub
je
add
cltd
aad
adc
outsl
pop
xchg
pop
out
or
mov
adc
xchg
dec
inc
sub
dec
jb
rcrb
adc
xchg
cmpb
jmp
jo
dec
sub
in
arpl
test
loop
shll
aam
das
mov
xor
cmc
mov
add
dec
mov
jns
dec
cs
or
ret
and
xchg
adc
test
leave
inc
and
add
xchg
sbb
sbb
xor
push
jg
inc
sbb
mov
dec
sub
add
test
cs
mov
mov
jne
lds
test
and
and
sbb
rclb
adc
enter
sarb
dec
mov
sub
movsb
jno
dec
and
fiadds
push
test
add
xor
mov
repnz
adc
sbb
orl
insb
dec
mov
leave
adc
jae
dec
loope,pn
jns
adc
ret
adc
push
inc
les
xchg
sbb
dec
push
mov
push
pop
adc
dec
xor
mov
js
popf
sbb
sbb
les
inc
das
xchg
add
xchg
push
xchg
iret
add
mov
sbb
mov
dec
fs
xchg
jb
mov
fcomps
adc
jl
inc
and
add
addl
xchg
dec
dec
inc
les
addl
adc
inc
je
xchg
mov
jns
inc
mov
fsts
add
mov
cmp
adc
inc
mov
inc
cs
push
lahf
addl
and
dec
shlb
and
test
std
das
jno
cmp
addb
xchg
leave
lds
and
outsl
andl
and
adc
fcoms
adcl
aam
dec
inc
and
or
adc
push
and
pusha
fstl
movl
cs
sbb
mov
inc
xchg
mov
or
or
or
leave
pop
xchg
jae
dec
and
sbb
add
push
jno
xor
mov
dec
push
and
ret
sbb
mov
lcall
fstps
mov
fisttps
adc
addl
loope
cmc
and
pop
xchg
dec
adc
cwtl
sbb
outsb
dec
adc
movsl
inc
push
mov
xchg
ret
dec
jns
mov
inc
daa
orl
adc
add
movsb
adc
hlt
sub
loop
rorb
ror
push
adc
dec
fsubr
cmpsb
and
push
pop
mov
and
mov
cmpsl
fildl
and
and
adc
orb
cmp
stc
cwtl
mov
mov
fsubrl
lds
or
pop
fnsave
popa
into
and
addb
sub
sbb
dec
shlb
and
push
je
dec
cltd
fstps
add
jg
daa
roll
mov
push
jnp
push
loope
mov
movsb
adc
xchg
dec
in
xchg
sbb
rclb
pop
movsl
inc
movsb
mov
popf
and
inc
leave
adc
jle
dec
sub
or
lea
cmp
fsubp
inc
ret
in
xchg
adc
xchg
and
dec
add
mov
dec
xor
xor
add
xchg
jg
inc
jns
sub
jb
inc
mov
xlat
xor
push
xchg
ret
rcll
mov
scas
test
xor
cltd
sbb
cmpsb
inc
loop
nop
adc
adc
dec
inc
mov
dec
shl
push
jg
dec
jmp
mov
test
sub
dec
adc
inc
cs
outsl
test
sbb
orl
sbb
xchg
and
dec
mov
je
mov
add
pop
inc
inc
mov
xchg
sub
dec
or
rcl
and
jb
test
and
nop
add
inc
hlt
mov
xchg
mov
sbbb
adc
adc
adc
cwtl
pop
mov
adcl
mov
insb
adcl
in
loop
aam
or
xchg
add
mov
lea
leave
inc
add
imul
lea
pop
insl
jge
clc
mov
xchg
add
push
popf
sbb
inc
test
popa
test
inc
sbb
int3
push
popa
push
lahf
arpl
xchg
popa
lea
call
or
std
cmp
dec
loope
mov
in
rclb
fstps
aas
test
sbbb
pop
cmp
enter
jecxz
pop
push
adc
sarl
dec
and
push
inc
push
mov
jns
sbb
ret
jecxz
loope
sbb
inc
adc
ret
stos
repz
dec
lods
and
loope
sbb
sbb
mov
push
xlat
mov
fisttpl
inc
mov
add
lcall
dec
ret
sub
mov
xor
and
add
jge
pop
loopne
inc
fxch
leave
test
cwtl
sbb
les
sub
and
lock
test
mov
xchg
and
sub
pop
jns
pop
jg
xor
add
into
fldl
mov
xor
call
cld
subb
add
sbb
cmpsb
rcrl
mov
jae
in
adc
lods
sbb
dec
or
pop
shlb
add
jno
fcoml
sbb
mov
cltd
pop
arpl
gs
fsubrs
loop
or
iret
int
mov
mov
mov
pop
fistps
mov
xchg
fdivrl
test
cmp
nop
lea
pop
mov
add
adc
orb
imul
inc
les
pop
pop
xor
sbb
add
mov
jno
push
lret
pop
jno
sbbb
cltd
adc
inc
icebp
or
stos
dec
int
add
pushf
dec
in
cmpb
cmp
sub
fcmovb
xor
pop
inc
test
sub
pushf
mov
and
sbb
or
aam
inc
orb
jae
lods
xchg
popa
pop
add
movsl
add
icebp
icebp
pop
into
mov
lds
push
mov
pop
aaa
mov
cmova
mov
inc
test
rolb
push
enter
shlb
and
ret
popf
mov
adc
jmp
jge
mov
pop
inc
cltd
sarl
adc
inc
xor
push
pop
add
dec
aaa
xchg
and
fnstsw
mov
push
push
clc
mov
mov
shll
sbb
fldt
mov
jno
inc
icebp
push
iret
insb
jns
inc
ss
ficompl
or
rolb
mov
inc
inc
push
jmp
shll
and
and
and
push
lods
pusha
lods
pushf
pop
shll
lea
ret
insb
sub
add
inc
mov
add
loop
mov
test
pop
aam
lret
inc
push
pop
arpl
xchg
jo
dec
inc
call
or
mov
roll
push
pop
add
enter
movsl
cmp
adc
cmp
or
mov
adc
leave
aam
cmp
or
or
sbb
lea
icebp
pop
xor
mov
mov
push
fstps
test
mov
mov
dec
adc
shll
push
inc
mov
pop
shll
loop
cmp
popf
lcall
sub
xchg
adc
mov
sub
xchg
cltd
pop
xlat
loope
ds
ret
push
ror
mov
xchg
dec
je
outsl
mov
add
adc
sti
sub
loope
movsl
ret
pop
dec
add
loope
loop
mov
push
jg
nop
in
test
xchg
loope
push
into
cs
sub
pop
icebp
lahf
adc
inc
cwtl
add
adc
movsl
sbb
movsb
scas
fs
push
mov
push
lea
inc
rolb
xchg
jno
aad
mov
pushf
test
test
pop
fcompl
xor
movsb
lret
movsb
push
mov
or
bnd
pusha
rolb
lds
inc
cwtl
out
add
jno
jg
jne
bound
dec
push
out
add
cs
xor
sbb
jne
or
insb
mov
loopne
inc
dec
inc
cmp
faddl
push
int
cwtl
jae
shr
add
jl
mov
inc
scas
loop
xor
dec
push
filds
dec
sarb
gs
or
mov
cmpsl
icebp
scas
call
pop
xchg
inc
adc
fadd
orb
dec
lahf
lods
mov
mov
popa
movsl
pop
ljmp
mov
je
ret
std
or
xor
sub
jp
inc
xor
cmp
les
cltd
mov
xor
je
inc
cmp
dec
inc
xchg
cmpsl
movsb
jnp
mov
pop
stc
ror
sub
push
mov
loopne
adc
inc
shll
loopne
jmp
push
clc
mov
rolb
mov
sub
xor
pop
test
sahf
jge
mov
ss
mov
pop
rcrb
pop
mov
fldl
insl
add
mov
sbb
add
les
rol
adc
xor
and
add
les
xor
movsb
sub
lods
daa
ret
jae
lods
scas
fwait
lret
out
cli
ds
test
lret
adc
pop
xchg
sub
popa
cltd
dec
pop
xchg
dec
cltd
aad
pop
pop
fcomp
dec
xchg
out
inc
bound
fisttps
icebp
add
pushf
xor
test
iret
cmp
nop
into
jp
sarb
idiv
lods
sub
iret
shl
std
loopne
orl
mov
pusha
std
scas
ja
lea
or
push
add
push
or
pop
dec
xchg
adc
push
clc
and
and
push
lea
enter
fnstcw
sbb
pop
pushf
pop
fs
jl
add
cmp
div
bound
jno
and
jns
add
mov
jmp
lock
push
mov
sbb
and
fxch
push
add
mov
loopne
stc
shlb
aas
xchg
mov
pop
popl
jge
mov
jno
sub
adc
xor
int3
mov
dec
nop
adc
adc
ror
mov
shlb
mov
push
syscall
ficomps
mov
ror
cmpsl
pop
xchg
mov
jbe
xchg
and
insl
push
add
nop
sbb
fsubr
mov
cmp
add
pop
inc
or
cmpsb
cmp
or
pushf
sub
xor
push
call
or
sbb
lcall
or
jns
fldl
popa
push
nop
or
sbb
xor
aad
ret
adc
jne
mov
sbb
and
fsubp
jl
or
lds
out
cmp
repnz
push
push
test
sbb
xor
adcl
dec
jp
add
mov
les
nop
pop
insb
xchg
les
in
scas
lds
dec
add
mov
jb
xchg
leave
fwait
pop
enter
nop
mov
repz
push
or
mov
xor
ss
sbb
loopne
and
jo
push
adc
xchg
sbb
rorb
or
lods
shlb
or
mov
pop
mov
and
mov
add
popf
mov
lahf
xor
mov
mov
sbb
roll
lods
sub
inc
aam
dec
stos
or
sub
jl
loope
mov
in
rorl
rol
and
test
mov
call
mov
aaa
outsl
jecxz
or
jl
fcomps
inc
fimuls
cltd
movsb
jnp
adc
adc
insb
addb
lret
xchg
loopne
popf
inc
adc
adc
enter
mov
rorb
adc
push
pushf
rcrb
aam
xor
sbb
mov
rorb
andb
add
mov
ffree
xor
cltd
loopne
into
sbb
andb
xchg
imul
popa
orl
or
lock
outsb
jp
push
dec
cmp
mov
ja
mov
lret
sbb
adc
dec
mov
push
and
xchg
decl
push
or
movsb
pusha
in
push
sub
mov
cld
mov
filds
gs
pushf
xchg
mov
mov
aad
jge
stc
xor
inc
xchg
cmp
insl
add
in
jne
or
scas
es
xchg
pop
mov
or
dec
out
jg
lahf
pop
iret
sahf
inc
aas
cmpb
lock
or
or
fsubr
mov
cli
lock
xor
int3
push
mov
xchg
shl
xchg
jle
scas
dec
add
sbb
xor
xchg
xchg
in
rorb
les
pop
push
lds
movsb
cmc
inc
push
pop
std
jno
int3
popa
xchg
les
cmp
xchg
dec
icebp
adc
test
xchg
into
outsl
xchg
mov
lock
xchg
aaa
jg
es
ror
cmp
mov
xchg
jg
sar
pop
movsb
outsl
xor
mov
es
and
mov
aaa
add
lock
loope
arpl
icebp
popf
mov
icebp
pushf
rcll
popf
inc
add
xor
in
adc
jns
cmp
jne
in
in
cwtl
mov
pop
mov
aam
popf
scas
jmp
mov
gs
cmc
lds
adc
dec
decl
mov
and
jae
mov
inc
xchg
ud2
xchg
mov
rorl
orb
and
subb
nop
int3
pop
dec
test
testb
inc
xchg
and
scas
push
imul
cs
add
addr16
arpl
push
mov
das
mov
sub
fdivrs
or
and
add
movsb
fisubs
push
mov
sahf
leave
outsb
jmp
jg
cmpsl
add
inc
mov
or
jmp
add
mov
push
sbb
out
mov
imul
inc
arpl
xchg
addr16
ret
scas
jle
testb
sbb
inc
stos
inc
stos
jb
jb
testb
jae
dec
dec
inc
fisttpll
sub
repz
scas
add
das
adc
or
out
sbb
add
insl
test
pop
jns
jmp
jl
mov
dec
mov
add
or
dec
mov
inc
jge
movsb
aam
dec
enter
data16
js
push
cwtl
jl
and
insb
pop
int
push
and
pushf
nop
jno
enter
mov
je
pusha
lcall
fcomip
push
fisubl
mov
repnz
dec
xchg
lods
in
mov
daa
push
jno
xchg
fists
xlat
jg
aad
pop
and
lahf
fstpt
jb
iret
inc
dec
decl
push
mov
testl
push
dec
pop
jae
jb
inc
pop
adc
and
dec
pop
or
xor
xlat
testl
je
adc
test
sbb
push
lock
pop
leave
jg
lods
loopne
arpl
sbb
test
test
je
shrb
icebp
push
or
lds
in
fcompl
mov
loopne
test
inc
and
xchg
mov
xchg
icebp
pop
loopne
out
push
jle
inc
sahf
push
mov
pop
mov
push
adc
rcl
stos
pop
mov
out
fwait
call
inc
mov
mov
xor
and
orb
mov
hlt
in
aaa
adc
mov
mov
int
nop
cs
mov
shl
lea
int
mov
jbe
andl
sbb
pop
cmp
fcomi
dec
xor
hlt
popf
xchg
sbb
jae
jae
test
pop
pop
ss
pop
outsb
bound
cmpsl
rcll
repz
and
clc
sahf
dec
pusha
push
std
jge
lods
popf
insl
add
dec
in
in
call
push
jno
or
test
loopne
orl
xor
icebp
pop
jno
xchg
dec
adc
adc
mov
popf
xor
popf
in
dec
movsb
inc
push
or
lcall
stos
push
jge
shl
pop
call
lods
andl
lock
sub
shl
cmp
add
popf
sbb
jo
aad
lret
movsl
negb
inc
cs
xchg
sbb
push
arpl
add
mov
push
stc
insb
inc
or
xor
xchg
push
lods
pusha
cmpsb
rcr
paddb
push
clc
popa
enter
out
pop
sub
mull
loop
test
daa
bswap
or
push
popa
orl
dec
jae
adc
pop
ss
dec
push
ds
cmp
adc
inc
or
xor
in
and
xchg
mov
test
xchg
xor
inc
test
mov
or
adc
or
test
imul
mov
cmp
in
and
in
rorl
push
addr16
sbb
js
or
add
jg
sbb
adc
push
push
cmpb
jne
repz
shrb
sub
lahf
push
pop
or
imul
jbe
es
lret
lret
shll
pusha
jmp
aad
mov
cmp
pop
mov
add
bound
add
testl
mov
jb
je
push
xor
sub
je
jbe
push
mov
push
push
pop
inc
inc
aaa
dec
push
push
mov
sub
cmp
rorl
fwait
mov
mov
sub
cli
push
mov
xchg
push
push
out
mov
adc
mov
fwait
jae
ja
push
or
adc
ja
ds
aas
cmc
out
ja
or
dec
sbb
pop
scas
sub
jb
xchg
cvtpi2ps
popa
cmp
ljmp
repz
sbb
in
call
sub
sbb
lret
adc
mov
popf
inc
add
in
add
xchg
push
mov
outsl
inc
fdivr
and
pushf
enter
fbstp
pop
xchg
ljmp
inc
xorl
lret
das
mov
adc
xchg
test
and
imul
outsl
adc
xor
xor
loopne
xchg
call
into
cmp
mov
cmpsl
data16
ja
adc
in
sub
push
sbbl
lret
icebp
in
sub
add
in
addr16
mov
adc
test
lahf
rcrl
popl
insl
scas
jmp
test
sbb
sub
mov
or
pop
addl
filds
or
push
jg
scas
inc
mov
add
shrl
lahf
cli
and
cmp
pop
jns
push
fwait
add
or
outsl
pop
push
fidivs
mov
fcoms
mov
mov
xor
shr
int
lret
stos
mov
mov
stos
jbe
daa
push
adc
outsl
mov
pusha
push
xor
cmpsb
add
adc
mov
dec
cmp
popa
scas
push
cmp
xchg
mov
jnp
scas
adc
mov
loope
or
mov
jns
sti
cmpsb
lea
xor
push
xchg
xchg
fisubrl
fbstp
push
loopne
repz
mov
stos
pop
sahf
xchg
sti
aaa
nop
jmp
pusha
leave
mov
pop
in
ficoml
mov
mov
xchg
hlt
lds
push
fs
icebp
add
lcall
or
push
js
mov
push
cmpsl
adc
js
and
sbbl
add
jle
jmp
cmpsl
cmp
cmp
rolb
roll
inc
mov
clc
pop
inc
pushf
mov
or
mov
inc
int
hlt
popf
test
jl
cmp
sahf
sbb
repz
pop
daa
sti
dec
ja,pt
mov
cli
data16
cmpsb
in
ret
sbb
stos
sub
lahf
movl
lods
pop
inc
test
adc
dec
dec
bound
push
jmp
test
xor
fstl
hlt
out
in
into
incb
in
xchg
cmp
std
movsl
xchg
xorl
adc
push
jns
stc
lods
xchg
xor
adc
pop
jbe
sub
rcrb
movsl
pop
cld
ljmp
sbb
jnp
inc
dec
sbb
jno
adc
shrl
mov
xchg
in
ffree
enter
addl
dec
lahf
or
int3
das
and
sahf
mov
and
xor
sub
sbb
jge
jg
adc
mov
fldt
loope
mov
inc
mov
aaa
adc
ja
push
out
dec
lret
and
test
dec
test
cmc
xchg
stc
out
imul
inc
mov
fwait
mov
pushf
jno
sti
sbb
rclb
jb
push
addr16
jge
das
idivl
stos
shrb
jno
pop
pop
xchg
sub
testl
pushf
jns
mov
pop
pop
nop
fimuls
out
aas
out
xor
outsl
call
clc
and
mov
loopne
popf
movsl
or
mov
int3
jns
mov
repnz
pop
loopne
or
mov
sahf
hlt
js
or
mov
rorl
insb
nop
mov
leave
popa
std
fcompl
clc
and
rorb
scas
push
add
inc
dec
mov
xchg
xor
mov
dec
sbbb
insl
mov
iret
push
cmp
mov
add
xchg
mov
addr16
iret
push
push
add
mov
negl
push
ss
arpl
addb
or
hlt
mov
xor
int
pop
decl
loopne
pop
add
fisubl
adc
sub
add
pop
push
data16
xchg
add
daa
popf
push
xor
push
or
mov
dec
fildll
mov
mov
pusha
jecxz
add
jge
inc
in
jge
pop
int
sub
push
aaa
pop
sub
sbb
xor
push
arpl
mov
mov
push
mov
sub
jmp
fwait
lcall
sbb
scas
loopne
pop
ss
and
push
ret
fadds
xor
stos
scas
xchg
repz
pop
mov
sub
sbb
pop
dec
jle
dec
mov
and
in
and
add
mov
push
mov
mov
aam
adc
adc
xchg
nop
mov
in
and
icebp
cld
lods
cmp
inc
pop
rorl
and
dec
addr16
lods
call
adc
andb
das
cmpsl
cli
mov
jmp
push
add
or
orb
inc
scas
fwait
add
fimuls
cmpps
inc
jmp
movb
out
lahf
rcll
nop
sub
mov
xor
pop
push
lock
add
sbb
loopne
int
mov
pop
mov
icebp
loope
fs
adc
scas
nop
lock
mov
arpl
fldcw
jo
cmp
nop
ljmp
fimuls
inc
dec
loopne
pop
mov
jle
jg
mov
push
aaa
sub
sub
insl
dec
fisubs
ja
das
adc
jp
xchg
xor
push
ja
sub
int3
dec
scas
xor
dec
sub
mov
xor
lea
leave
sub
xor
insb
xchg
xchg
movsl
adc
insl
mov
jp
cmpsl
dec
mov
push
or
fnsave
ss
popa
out
out
inc
mov
sub
cli
xchg
xor
popf
cmp
fnstcw
dec
adc
mov
or
jno
mov
push
or
popf
and
push
mov
cmp
xchg
or
pop
add
sub
add
mov
les
adc
add
fsubrp
cmc
movsl
orb
in
cld
add
out
add
dec
call
cltd
insb
std
enter
mov
aad
adc
hlt
xor
mov
push
movsb
or
sysenter
xor
add
and
rcr
inc
xchg
sbb
rcrl
leave
repz
sahf
fsub
dec
loop
leave
cmp
fs
jg
pop
stc
and
push
and
sub
fldl
jnp
movsb
dec
add
mov
inc
sahf
fidivl
xchg
into
ds
mov
out
popa
jle
add
add
xor
mov
adc
jmp
jb
dec
scas
xchg
xor
lahf
and
adc
jmp
lcall
ljmp
rorb
ret
ds
out
loop
jns
jle
ret
aaa
adc
sar
data16
scas
daa
lret
push
inc
jle
in
lret
ja
sub
mov
fwait
sahf
xorb
bound
outsl
pushf
shlb
int
jge
and
enter
lods
xor
leave
dec
xlat
fsts
stc
test
dec
and
in
inc
stc
cmp
stos
and
jmp
test
les
fld
sub
xor
jge
cmp
jmp
add
test
sbb
sbb
aad
push
add
sbb
stos
xchg
out
dec
cwtl
and
or
arpl
js
mov
insl
stc
insb
test
cmp
inc
mov
xchg
inc
adcl
mov
jae
scas
mov
cmp
roll
rcrb
add
loop
adc
out
jo
aam
pop
mov
push
inc
mov
pop
or
cmp
js
xchg
sbb
push
mov
sub
push
mov
pop
repz
mov
and
pop
push
popf
fmull
lea
and
dec
inc
loopne
xchg
fs
fcmovbe
cltd
rorl
inc
jg
sub
xor
in
mov
mov
movsl
sbb
dec
in
or
xchg
sub
push
add
cmc
xor
mov
xchg
cld
bound
xor
mov
cmp
mov
cwtl
test
sub
push
mov
push
add
cwtl
push
mov
add
xchg
xchg
dec
pop
and
mov
add
lea
daa
sbb
dec
lea
in
push
sbb
lods
push
and
inc
enter
rep
mov
sub
insl
pop
imul
popa
fbstp
pop
jne
dec
inc
sub
arpl
inc
pop
dec
and
fists
push
adc
incl
xchg
sub
mov
das
xor
pop
lods
cmp
cmp
insl
shlb
stc
sub
add
inc
xchg
jns
hlt
push
inc
mov
leave
adc
popf
dec
mov
pop
mov
push
adc
call
pop
adc
and
sti
xlat
loope
jo
xchg
and
or
inc
dec
leave
or
or
jl
xor
mov
rorb
rclb
mov
jmp
addb
lret
add
imul
scas
push
inc
out
jmp
into
rcrl
cs
jg
mov
adc
add
mov
and
repnz
adc
stos
outsb
and
mov
sbb
jbe
mov
and
cmpsl
pop
inc
rcl
aaa
mov
das
bound
call
fists
ficoml
push
add
push
pop
or
mov
clc
cmp
in
dec
js
std
inc
jno
popa
sbbb
dec
pop
or
xchg
test
or
adc
inc
push
adc
int3
movsl
push
icebp
int
add
push
orl
push
pop
dec
aad
push
fs
cltd
roll
in
nop
lods
mov
or
clc
nop
imul
xor
std
xor
movsl
test
push
push
sbb
jl
sub
sbb
cltd
push
xor
adcl
popf
and
imul
add
fs
jle
add
lock
sbb
pushf
imul
mov
cwtl
dec
in
push
hlt
push
pop
xchg
jmp
dec
scas
cs
mov
mov
pop
cmp
fcmovnbe
jg
mov
mov
loop
dec
out
sbbl
push
cli
ljmp
add
push
insl
push
mov
inc
jle
ja
das
xchg
push
or
das
ret
mov
jecxz
mov
jmp
sbb
push
or
jle
pop
data16
shll
mov
pop
pop
lcall
jecxz
out
mov
push
pop
fldt
daa
xchg
mov
stos
test
andl
pop
jae
jb
mov
dec
decl
arpl
std
push
imul
hlt
js
sub
adc
int3
dec
cld
push
sbb
test
xor
xchg
push
stos
pop
cmpsl
ja,pn
out
adc
jnp
inc
dec
shll
mov
jbe
push
push
pop
xchg
adc
xchg
xchg
stc
jle
pop
sti
rcll
xor
push
push
das
pop
mov
ror
xchg
push
dec
insb
test
and
add
jne
js
test
cwtl
push
mov
fnstenv
lock
pop
pushf
lods
adc
push
dec
dec
stos
dec
jno
daa
or
mov
cwtl
stc
add
mov
gs
and
jmp
lods
pop
push
add
add
fwait
scas
bound
es
adcl
adc
push
xchg
add
nop
adc
push
fimuls
cmp
mov
andl
or
fdivrs
lea
xor
sbb
sub
or
mov
sub
jno
rorl
pop
pop
cmpsb
and
int
fucomip
adc
and
je
xor
rcrb
cmp
mov
fldt
cmova
mov
push
out
pop
sub
outsl
adc
adc
aaa
add
fistpll
jge
faddl
das
adc
mov
mov
fs
sub
sbb
aaa
ljmp
enterw
mov
pop
inc
and
sub
push
lcall
aam
mov
add
jae
add
sti
pop
adc
xchg
pop
les
aad
add
jae
sar
fsubrs
mov
pushf
fcoml
mov
adc
push
test
andl
jp
sub
jmp
xchg
ss
andl
jl
ret
xchg
repz
shlb
out
sbbl
out
lcall
push
mov
lret
mov
jmp
push
test
jmp
loope
mov
add
loopne
mov
cmp
and
jno
fldt
fmuls
push
push
add
adc
cmpl
inc
push
lods
pop
xchg
call
and
xchg
adc
insb
adc
outsb
push
xchg
mull
dec
out
jno
jbe
div
lods
mov
or
dec
sahf
push
filds
cmp
push
mov
pop
fnstsw
inc
movsb
mov
push
scas
or
les
pop
dec
xchg
mov
push
lea
pop
dec
lahf
int
mov
mov
xor
int3
cmp
mov
cmpsl
bound
xor
les
mov
clc
sbb
std
lock
push
lret
nop
jecxz
push
push
ja
das
xchg
andb
push
sbb
aad
test
aad
inc
pop
add
rorb
sbbl
pop
daa
xor
and
fucomp
mov
dec
xchg
jmp
inc
lret
in
cwtl
and
pop
inc
or
lock
icebp
push
fisttpll
inc
xor
leave
add
test
ds
sbb
loope
pop
mov
or
shr
push
pop
and
sbb
and
pop
cmp
mov
xorl
push
test
inc
sti
lock
xor
rol
cltd
les
push
insb
adc
arpl
add
jns
es
shll
or
and
mov
inc
mov
mov
xchg
or
pop
xchg
push
inc
sti
push
outsl
adc
mov
adc
insb
inc
enter
lahf
cwtl
sahf
test
push
and
jl
cmc
xchg
aad
push
and
sbb
mov
dec
shlb
jo
and
adc
dec
sbb
push
imul
addl
inc
and
enter
add
jae
outsb
roll
mov
adc
pop
inc
sub
add
repnz
les
lods
ljmp
sbb
or
rclb
gs
mov
sub
call
in
in
jnp
cmc
and
mul
and
hlt
aam
sbb
loope
adc
in
cld
icebp
stos
pop
inc
les
dec
outsb
add
sbb
adc
scas
sbb
xchg
stos
cmp
xchg
add
inc
sub
negl
and
test
mov
jg
inc
cmp
add
xor
mov
mov
add
fadds
jns
in
fdivrs
leave
repnz
cmp
ss
xchg
sahf
or
mov
js
push
stos
ret
cmp
les
xor
mov
out
sub
lcall
mov
jno
test
cmpsl
pop
push
mov
loopne
dec
ljmp
jge
mov
aas
jge
adc
mov
jne
rorb
aam
pop
pop
sub
cwtl
pop
inc
or
xor
xchg
aad
jno
or
or
jno
loop
lods
out
mov
adc
mov
xlat
dec
push
xchg
jecxz
push
push
js
inc
enter
int
adc
std
mov
add
push
mul
mulb
xchg
lea
xor
icebp
add
movsl
sbb
ret
dec
enter
orb
or
push
jmp
xor
ss
xchg
syscall
lock
push
stos
js
mov
sbb
jo
cltd
xchg
jle
xchg
stc
sbb
iret
mov
in
push
jg
dec
dec
add
cmp
pop
sarb
adc
jecxz
xor
adc
loope
pop
sahf
adc
or
fildl
and
aam
rclb
pop
shrb
xorl
sbb
and
pop
and
adc
and
jae
adc
inc
mov
aad
lods
pop
inc
sahf
cmp
xor
dec
into
cmpb
mov
fbstp
lahf
cmp
pop
add
dec
popf
and
jno
push
or
xchg
leave
sbb
adc
or
push
imul
arpl
pop
jb
inc
ret
subb
push
ja
mov
mov
push
xor
icebp
std
inc
sub
adc
and
sahf
and
inc
xchg
sub
and
arpl
add
mov
loopne
lcall
btr
loopne
pop
jo
sbb
mov
cltd
lods
cmp
or
cmp
jae
aad
aad
sarl
popa
mov
test
cmpsb
push
outsl
dec
test
int3
xchg
and
sub
aad
sub
orb
jne
dec
ja
test
sub
and
dec
mov
loope
cmp
sub
adc
mov
jmp
in
fbld
outsb
popa
mov
icebp
inc
outsl
dec
call
shr
and
cltd
jae
fstps
add
add
lret
mov
rcll
cmp
xorb
rolb
mov
cmpsb
scas
jnp
scas
pop
popa
icebp
and
lea
push
enter
push
mov
rclb
dec
adcl
adc
push
dec
push
cwtl
aas
mov
mov
mov
sub
int3
push
lea
dec
mov
mov
mov
mov
and
int
adc
popa
loopne
pusha
adc
pop
xchg
into
mov
rcll
or
rcll
jbe
icebp
xor
push
lcall
mov
shll
jae
lods
jbe
loope
xor
mov
xlat
leave
ret
outsb
test
cmpsb
test
orb
adc
push
xor
and
aad
sar
cmp
sahf
sub
sub
cwtl
mov
leave
mov
inc
xchg
dec
sarb
or
or
shrb
aad
daa
sub
dec
add
or
and
lock
add
inc
push
je
fcompp
jo
movsl
js
xor
or
ret
scas
das
pop
pop
dec
aas
out
xor
push
sub
xorl
movsl
and
jle
inc
sub
cmp
fisttps
in
movsb
adc
cmpsb
push
jg
test
cmp
sbb
popa
mov
adc
sbb
inc
fcompl
pop
outsl
xor
inc
clc
arpl
and
or
and
and
js
ret
adc
sbb
fistpll
jbe
out
or
add
push
or
jnp
dec
rolb
insl
andb
daa
xchg
inc
insl
rorl
jne
fisubs
mov
or
fsubs
pop
dec
sti
inc
adc
jle
add
xchg
test
aam
adc
pop
jno
or
in
dec
outsl
icebp
das
sbb
mov
cltd
mov
dec
jnp
fcoml
popl
and
jnp
rorl
aas
dec
test
push
cs
xchg
and
mov
aam
sbb
stc
adc
imul
lcall
pop
movsb
insb
fstps
fnstenv
inc
xchg
insl
out
pop
pop
repnz
xor
iret
mov
and
cmc
inc
lea
push
xlat
mov
mov
dec
sti
pop
add
sbb
and
push
adc
enter
fcoml
test
mov
cmp
mov
cmp
and
addl
cmpsl
adc
adc
xor
ret
icebp
je
int
in
or
and
xchg
mov
rclb
and
movsb
push
leave
int3
adc
ret
xor
dec
call
mov
adc
xchg
mov
mov
arpl
mov
shlb
pop
fcoms
fcoml
inc
and
mov
xor
xlat
pop
push
popa
pop
std
dec
mov
adc
jae
mov
lahf
push
les
sahf
and
add
sbb
mov
pop
mov
pushf
and
inc
hlt
adc
in
lds
inc
rcl
rcll
ljmp
les
adc
mov
stc
mov
test
sub
fisubrl
jne
xor
int3
sub
stc
hlt
pop
nop
or
sub
xor
in
shlb
mov
std
outsb
push
daa
pop
je
mov
mov
xor
insb
hlt
pop
shlb
out
mov
aad
fisttpll
mov
roll
loop
mov
push
push
xchg
and
inc
bound
bound
mov
mov
jbe
cld
loop,pn
mov
push
and
xlat
je
mov
rcll
cltd
inc
mov
hlt
pop
xor
lods
push
test
mov
sbb
or
jnp
sarb
or
and
sbb
adc
movsb
cmc
mov
sbb
loop
mov
repnz
and
aas
ret
lahf
mov
loope
cmpsl
mov
and
cwtl
test
pushf
cmp
fistps
fcmovnu
movsl
aas
inc
fstpl
or
fidivs
sbb
iret
or
push
sbb
jo
push
add
dec
cld
lock
insb
lods
jo
arpl
xor
xor
xchg
sbb
outsb
popa
sub
js
cmp
and
sub
mov
pop
aaa
fs
loope
mov
xchg
sub
sarb
push
nop
mov
sub
test
pop
stos
lock
daa
out
fwait
sub
sub
mov
in
lret
adc
dec
xchg
mov
add
cmp
inc
jb
orb
inc
mov
jns
fidivs
subl
or
xor
xchg
cmpsl
mov
mov
enter
arpl
nop
pop
sahf
repz
xlat
xchg
xor
gs
rcr
push
jbe
jno
lcall
mov
lcall
add
inc
mov
sarb
adc
mov
pop
into
sub
sbb
dec
cld
dec
and
cmpsl
pusha
add
xor
enter
mov
adc
xchg
xchg
jg
xchg
je
pop
mov
test
movsb
cmc
cmc
add
iret
imul
sbb
test
inc
nop
out
jg
add
adc
test
fisttps
push
jae
and
or
pop
adc
rcrl
aad
das
roll
cmp
scas
pop
ja
sub
push
jmp
xor
jns
jecxz
and
mov
mov
dec
test
mov
pop
jne
and
adc
xor
xorb
sub
and
pusha
push
push
adc
test
mov
or
jb
push
push
insb
xchg
daa
lea
push
fstps
lds
ret
push
cltd
sub
adc
insl
add
fisubs
fwait
and
adc
adc
popa
repnz
mov
adc
adc
inc
sub
negb
and
rcl
lods
daa
inc
push
jnp
fnstsw
shlb
inc
adc
mov
mov
and
pop
pop
sbb
mov
fcoml
xchg
pop
je
rcrb
inc
push
xor
aaa
inc
and
stos
dec
and
shll
push
add
jecxz
sub
pushf
arpl
and
jmp
ret
xlat
or
flds
adc
ret
xchg
ficoms
sbb
lock
repz
mov
ret
fsubl
pop
cld
outsl
aad
dec
add
add
aad
xchg
lcall
stos
mov
inc
movsl
lea
sahf
sbb
out
pop
loope
xchg
or
idivb
inc
jb
jnp
and
xchg
je
push
or
iret
xor
xchg
and
lret
sub
scas
repz
inc
test
insl
adc
and
fisubl
sub
add
push
inc
xchg
stc
inc
mov
adcb
fsubp
mov
ja
std
dec
and
dec
mov
push
ljmp
aad
shll
mov
xchg
push
nop
in
stc
sbb
inc
sti
or
outsl
fisttpll
fsubrl
adc
daa
shlb
js
inc
mov
and
pusha
jb
roll
decb
shlb
rorb
mov
and
xchg
adc
pusha
repnz
xchg
xor
lods
shrb
xchg
hlt
gs
push
adc
push
stc
mov
subb
mov
imul
push
dec
aaa
inc
cltd
mov
fsubrs
nop
gs
adc
scas
xor
cmp
add
adc
fxtract
inc
mov
bound
subb
and
movb
cli
ds
adc
pop
sbb
shrl
mov
aam
sbb
push
aaa
xor
mov
push
shll
and
rol
xor
into
scas
scas
pop
int3
lds
enter
subl
ds
inc
inc
test
leave
lahf
xor
stos
cmp
in
fisubl
dec
and
add
cmpsl
pop
mov
inc
mov
lret
scas
mov
sti
mov
mov
mov
iret
loopne
lahf
aad
xor
scas
pop
jns
int
inc
popa
in
push
iret
aad
insl
dec
jo
test
dec
pop
movsb
es
popa
lret
mov
std
and
mov
pop
fwait
push
xorl
jo
je
call
xchg
daa
push
inc
xchg
les
cmp
inc
dec
loope
inc
xchg
push
push
or
add
ss
das
pop
test
fcoms
push
ja
iret
imul
out
xor
xlat
mov
push
roll
mov
xor
stc
xchg
fcmovu
jnp
out
mov
and
popf
addr16
xchg
or
arpl
add
sub
push
inc
outsb
lret
xlat
push
clc
mov
pop
mov
xchg
ret
mov
inc
or
cmc
aas
mov
mov
iret
xchg
repz
mov
inc
mov
push
push
pop
mov
in
push
cmp
add
adc
mov
rolb
cmp
cwtl
movsl
fdivrs
mov
orl
inc
enter
sbb
les
aas
sub
push
dec
inc
dec
jae
pop
test
jmp
cld
pusha
loop
adc
push
testb
mov
sbb
mov
push
sbb
orl
push
push
push
out
mov
dec
aas
mov
orb
adc
rcll
sbb
lock
mov
out
dec
cmp
xchg
sbb
stc
jecxz
xchg
lock
adc
and
movsb
inc
orl
add
jge
add
mov
xor
clc
adc
xchg
imul
pop
jns
mov
add
inc
stc
sbb
mov
rcrl
jns
xchg
test
xlat
std
pop
lods
sub
inc
mov
sbb
xchg
std
lret
loopne
adc
or
jl
mov
icebp
cltd
mov
pop
push
mov
or
movsl
adc
notl
jno
sbb
inc
iret
inc
loope
adc
and
push
leave
cmp
mov
repnz
repnz
pop
or
inc
hlt
cmp
add
add
hlt
push
mov
ds
subb
scas
inc
xor
xor
cmp
xchg
mov
adcl
add
lods
stc
mov
push
rcl
stc
mov
add
outsl
cld
mov
outsb
sbb
cmp
push
push
das
push
ljmp
fwait
pop
aas
push
or
iret
xchg
aam
aas
incb
addr16
lahf
push
test
add
divl
cmp
loopne
inc
pop
loop
inc
cs
inc
and
xchg
mov
push
adc
cmp
xor
adc
sbb
sub
cmc
sahf
adc
ret
cmpl
inc
jno
ret
xchg
or
xchg
cmp
hlt
cmp
and
fcompl
or
mov
mov
scas
imul
xlat
dec
ror
outsl
push
nop
repz
sub
stc
outsb
cld
insb
dec
pop
cld
dec
bnd
rcrb
movl
stos
call
inc
mov
add
mov
leave
sarb
test
ljmp
mov
mov
pop
add
icebp
outsb
data16
popa
pop
inc
push
pushf
movsb
lds
and
sub
les
loopne
add
es
or
test
sarl
jp
out
hlt
adc
stos
hlt
mov
daa
add
popa
sub
rcll
push
mov
xchg
jge
sub
mov
es
or
arpl
dec
jbe
inc
mov
add
and
mov
jo
cmp
cmp
pop
dec
jo
test
xor
rcrb
mov
mov
xchg
daa
int
dec
clc
insl
inc
add
repz
mov
shl
cwtl
and
shlb
int3
insl
fiadds
mov
adc
dec
xor
cli
clc
inc
loop
push
testl
push
jae
inc
adc
or
nop
hlt
imul
dec
ss
mov
jb
aam
sbb
jo
push
sub
and
cmp
inc
mov
xor
cmpb
aam
out
add
insb
ret
popa
popa
mov
mov
pusha
jbe
lods
jmp
rclb
adc
shlb
test
gs
push
dec
dec
xchg
aad
mov
movsl
and
pop
inc
jmp
stos
adc
adc
pop
push
fadd
xor
ret
enter
sahf
mov
inc
call
ss
rorb
mov
pop
cmp
popf
sbb
xchg
adc
leave
push
xor
and
fcmove
pop
inc
push
add
and
je
clc
inc
gs
push
and
and
mov
adc
fcoms
and
pop
xorb
cld
dec
bound
adc
xorl
xor
dec
mov
push
adc
cwtl
xchg
and
fiaddl
aaa
jg
ljmp
and
popl
sbbb
fidivrs
bound
and
push
push
hlt
xor
lds
gs
and
xor
jp
lea
fadd
jbe
mov
rcrl
inc
mov
push
mov
test
add
test
mov
add
adc
inc
pop
push
push
out
add
movsl
lods
mov
cmpsl
mov
cmp
stc
and
inc
sub
sub
sarl
mov
adcl
adc
inc
push
mov
enter
pop
sar
inc
js
fs
ljmp
imull
les
shll
fisttpl
inc
pop
mov
or
and
imul
push
jmp
int3
mov
cltd
fadds
insl
cmp
dec
cwtl
or
adc
adc
mov
mov
add
mov
xor
popl
push
lods
jg
dec
jmp
aam
jb
lock
adc
dec
rcrb
movsl
pop
cmp
mov
pop
loope
push
fiaddl
xor
add
ret
aas
mov
jo
sahf
push
shll
repz
sub
repz
dec
inc
pusha
mov
shrl
rcll
push
dec
mov
push
cwtl
xchg
xchg
out
icebp
xor
in
add
popa
push
arpl
cmp
jb
inc
icebp
inc
leave
insb
lahf
dec
loope
mov
loope
cltd
pop
fnstenv
shr
mov
inc
mov
lods
rcr
pop
dec
fnstenv
xor
push
add
dec
jno
adc
in
sti
in
mov
push
daa
fcomps
push
jp
push
cltd
push
mov
insb
lock
sbb
or
dec
dec
pop
lock
subl
adc
xchg
lods
add
sub
icebp
mov
pop
jo
rorb
inc
call
mov
shlb
lods
inc
stos
cs
sbb
jge
adc
bound
fcomps
xchg
sub
filds
sti
dec
repz
mov
fmul
pop
cmp
adc
xchg
leave
or
test
mov
test
xor
aaa
inc
mov
addb
jmp
testl
aas
cld
dec
pop
arpl
sahf
pop
out
dec
ret
lods
enter
adc
jmp
out
ljmp
rcr
fs
sub
out
pop
ret
adc
testl
rcr
fsubrl
test
xchg
inc
xor
inc
fisttpll
jp
pop
add
sbb
mov
add
mov
cltd
dec
outsb
iret
jo
sti
clc
mov
cmp
push
inc
jno
in
xchg
js
adc
repz
das
cmp
pop
inc
adc
fs
orl
inc
mov
testl
mov
aad
test
fstl
fnop
imul
adcb
pop
dec
orb
in
cltd
add
sbb
test
inc
mov
adc
xchg
cltd
scas
mov
push
lods
sbb
int
sbb
sub
xchg
movsl
push
push
adc
aaa
clc
jle
add
in
sub
mov
lret
xchg
dec
fmuls
popa
cld
shll
add
dec
mov
sarb
pop
mov
sub
push
int
inc
enter
jg
mov
or
inc
xchg
inc
orl
add
sbb
mov
sti
and
xor
jb
or
pop
pop
pop
mov
into
xor
adc
idivb
shll
mov
int
mov
add
adc
inc
popf
xchg
inc
lock
stos
jno
add
js
cli
inc
aaa
xchg
xor
call
sbb
sub
jge
cmp
js
pop
or
add
mov
add
cmp
add
sbb
push
sbb
cltd
aad
popf
sbb
iret
daa
xchg
fcom
add
sub
shll
repnz
jns
sub
pop
loope
dec
dec
aas
mov
mov
xchg
mov
add
xlat
add
xor
xchg
adc
fdivrl
xor
lcall
in
outsl
xor
daa
mov
mov
dec
dec
jge
sbb
ficompl
or
andb
scas
test
rcll
sub
lods
pop
jecxz
inc
mov
or
add
rcrl
lds
sbb
and
and
push
or
test
mov
sar
mov
pop
test
jg
or
adc
pop
sbb
push
pusha
mov
bound
clc
lock
fstps
stos
sub
sbb
imul
pop
stc
sub
sbbb
mov
or
pop
in
mov
xchg
jo
push
pop
and
in
addl
pop
dec
fs
sahf
nop
mov
pushf
jno
insl
xchg
adc
cmp
or
lock
inc
inc
add
pop
pop
stos
xor
es
rorl
arpl
sbb
mov
aas
mov
and
arpl
sbb
arpl
adc
int
jo
loop
icebp
std
mov
mov
jne
jmp
mov
ds
lret
cli
push
mov
cmc
push
aas
mov
cmp
sub
cmc
mov
push
repnz
cmpsl
shll
orb
and
rorb
les
roll
xchg
inc
mov
push
push
mov
add
shll
roll
mov
mov
clc
mov
call
xorb
mov
add
mov
bound
mov
loopne
mov
add
cwtl
ret
xchg
pop
adc
add
cmp
add
fsts
ja
adc
aam
inc
pop
scas
mov
push
shll
dec
xchg
xor
rolb
xor
cmp
mov
and
cmp
xor
leave
fidivs
inc
pop
daa
addr16
push
addr16
pop
hlt
pop
fistl
cmp
repnz
bound
cmpsl
nop
jb
mov
mov
push
rolb
pop
mov
pop
mov
and
sbb
xchg
mov
iret
cmp
pop
xorl
clc
gs
sbb
and
mov
addl
imulb
in
aaa
call
inc
pop
sub
inc
inc
pusha
inc
cmp
pop
xchg
test
xor
inc
add
lret
popl
rolb
jne
rorb
jg
out
fwait
mov
in
xchg
in
dec
addr16
insl
arpl
pop
inc
std
jge
enter
inc
adcb
es
mov
sub
cmp
shll
sbb
push
rcrl
sub
push
andb
repnz
push
mov
xor
je
and
inc
shll
jge
ret
in
cltd
adc
xchg
std
dec
push
push
scas
cmpsl
aam
and
inc
sub
cld
mov
mov
xchg
in
jae
inc
add
push
inc
push
stos
pop
push
mov
inc
dec
loope
push
or
sub
js
ds
andl
pop
pop
mov
cmp
imul
es
jne
xchg
leave
js
out
mov
jno
jno
jo
push
dec
jbe
clc
imul
inc
mov
push
dec
or
inc
jb
mov
push
pop
test
or
mov
shll
mov
push
cmp
add
xchg
adc
jle
daa
push
syscall
mov
int
gs
inc
cmc
test
mov
inc
lcall
out
sbb
mov
daa
lahf
push
in
adc
adcl
cld
arpl
jb
shl
lret
out
push
push
add
or
push
sbb
fcoms
movsl
jno
mov
mov
ret
fmull
das
pop
add
sbb
push
mov
repnz
push
fmul
inc
pop
sbb
or
dec
test
add
ret
icebp
jno
test
or
call
mov
pop
pushf
repz
inc
sbb
imul
fs
and
and
std
fists
sub
lods
xchg
movsb
inc
shl
repnz
mov
inc
mov
xor
pop
fadds
lret
lods
inc
xchg
sti
shrl
inc
lret
inc
out
push
data16
gs
fstpl
cmc
push
xor
cmp
sub
shl
test
add
mov
loop
jmp
inc
xor
xor
push
add
add
add
stos
leave
jo
shll
outsb
add
pop
inc
adc
sub
clc
lds
rcll
sbb
pop
nop
xor
popa
insb
add
pop
aas
cmp
fs
xchg
test
dec
xchg
sahf
mov
hlt
sbb
pop
mov
imul
loop
imul
or
repnz
je
loope
call
lods
les
ficompl
xchg
dec
and
sub
aas
ret
mov
inc
movsl
scas
sbb
test
and
pop
jp
pusha
or
and
es
int
nop
push
insl
adc
mov
push
dec
dec
adc
notl
inc
mov
dec
cmp
pushf
leave
fwait
mov
sahf
insl
ret
inc
push
xor
mov
adc
push
jns
jg
add
shrl
shll
mov
adc
cmp
dec
mov
not
xorl
icebp
lea
hlt
jmp
lds
stos
inc
cmp
jecxz
xchg
jmp
pop
push
dec
dec
add
push
cmp
les
notb
test
dec
rcr
inc
rorl
test
mov
xor
cwtl
jns
mov
and
inc
add
ret
push
fnstenv
xor
or
imulb
mov
push
imul
mov
lods
or
mov
pop
pop
push
imul
mov
push
invd
sub
push
xorb
mov
adc
lods
test
inc
data16
sbb
inc
add
lods
mov
and
pop
xor
add
and
add
mov
lea
adc
test
dec
fdivl
fld
pusha
xchg
cmpb
jne
adc
fdivl
adc
mov
sub
pop
xchg
imul
sbb
rorb
add
xor
or
sub
add
jmp
dec
jae
or
shll
cltd
loop
test
nop
fldenv
insb
sub
pop
mov
and
and
mov
mov
shrb
xor
hlt
test
pop
jl
add
dec
gs
test
test
mov
cmp
rorb
push
repnz
dec
mov
mov
pop
push
out
jge
rcl
lock
jge
add
mov
repz
and
adc
sbb
icebp
fldcw
inc
fwait
out
enter
jns
push
mov
into
in
push
cli
sbb
dec
popa
les
test
sbb
adc
mov
insl
xchg
dec
mov
xchg
sub
dec
dec
mov
int3
xchg
fstl
sub
push
add
mov
inc
add
xor
dec
js
cmp
jmp
pop
sbb
test
loopne
adc
sub
sub
cli
mov
call
jmp
out
dec
ret
cld
stos
scas
sub
jge
inc
push
stc
push
adc
sub
in
repz
jbe
push
sub
adcl
push
sbb
inc
out
aas
jle
jne
mov
add
popa
pop
pop
push
test
pop
pop
inc
es
data16
movsb
notb
mov
mov
mov
cltd
jle
lcall
xor
mov
xor
icebp
push
subl
insl
stos
pop
in
inc
sahf
and
jecxz
xor
sbb
xchg
and
fwait
mov
inc
xor
mov
inc
inc
adc
jae
add
je
lock
push
inc
in
add
xor
in
dec
mov
xchg
xor
adc
loope
sbb
cltd
jno
add
mov
mov
andb
adc
inc
dec
pusha
sub
xlat
adc
sub
cmp
es
pusha
mov
xor
clc
adc
inc
int3
mov
nop
mov
loopne
lahf
gs
xor
mov
dec
das
and
cmp
dec
add
adc
loope
sub
stos
pop
jae
inc
mov
sbb
dec
push
or
push
loopne
add
adc
inc
fstps
fs
xchg
cmp
sahf
push
cmpb
js
cld
sbb
arpl
cld
dec
aad
out
lret
or
outsl
cmp
lahf
xor
push
adc
sarb
mov
add
loop
popa
pop
andb
adc
lds
rclb
xchg
mov
adcl
pop
lods
and
inc
adc
mov
in
test
divb
inc
jne
xlat
cmc
mov
jecxz
aas
jo
scas
or
jae
or
scas
inc
test
jno
and
iret
les
push
lods
xchg
dec
ds
push
arpl
mov
pop
and
fldl
rcr
subb
movsb
push
in
dec
mov
ficomps
cltd
xlat
ds
or
loopne
dec
xchg
out
jbe
xor
daa
xchg
cltd
xor
lock
adc
push
js
cltd
cmp
push
sbb
mov
cmp
add
sbb
push
dec
stos
cmp
xlat
xchg
lds
popa
push
push
into
dec
outsb
pop
mov
aad
jle
xor
pop
fbld
loope
xor
pop
xchg
add
sub
nop
cmp
inc
dec
sbb
popa
jmp
lret
push
cld
popa
add
and
andb
je
hlt
pop
mov
shrb
int
mov
inc
and
fisubrs
loop
dec
xchg
push
add
sub
les
ret
mov
nop
mov
arpl
cmp
enter
repz
lret
mov
mov
mov
mov
push
jl
imul
roll
dec
xchg
sub
stos
mov
sbb
lods
movsb
pop
aaa
cmp
inc
imul
insb
push
jno
sbb
push
sbb
cmc
scas
cwtl
inc
in
add
bound
mov
loope
push
adc
xlat
dec
push
aam
leave
and
mov
lds
mov
adc
adc
stos
pusha
mov
stc
ds
mov
mov
jnp
adc
inc
mov
dec
hlt
add
dec
xlat
aas
orl
xchg
inc
jbe
jmp
xchg
or
clc
lcall
ja
add
aas
imul
scas
mov
sahf
testl
mov
jne
subl
push
pop
jecxz
inc
jns
stc
inc
or
inc
inc
popa
pop
cltd
add
loop
pushf
aam
das
test
enter
push
mov
add
lcall
fwait
pop
xchg
or
jae
cmp
adc
es
scas
or
push
loop
andl
popf
mov
rol
clc
lcall
in
inc
xchg
inc
mov
test
aam
mov
out
inc
mov
roll
call
xchg
xor
ja
lcall
mov
jp
push
mov
cs
mov
sub
mov
mov
std
movsb
rcll
add
adc
clc
test
mov
mov
mov
adc
inc
mov
test
rcrb
mov
xchg
and
je
mov
stc
xchg
adc
xchg
xor
out
cwtl
push
pop
mov
mov
stc
test
dec
scas
fdivp
xchg
fimull
push
lock
xor
hlt
mov
inc
push
nop
xlat
test
cwtl
jno
test
insb
push
pop
push
push
icebp
fimull
push
imul
mov
dec
movsb
add
mov
lcall
in
out
push
mov
sbb
sbb
push
or
sarl
mov
outsl
ss
lods
inc
cmp
std
mov
popf
inc
fwait
in
rol
pusha
mov
leave
je
enter
xchg
mov
pop
outsl
lock
cmp
pop
add
stos
pop
adc
repz
push
test
push
add
jg
pop
fs
dec
adc
leave
ds
aaa
mov
add
push
ret
or
aam
fistpll
mov
sub
or
repnz
stos
ljmp
inc
std
sbb
jp
int3
mov
aam
xchg
aam
or
inc
add
add
adc
pop
shl
test
or
fisubs
shll
popl
mov
pop
cli
and
fsubrl
lea
push
mov
add
sbbb
pop
add
add
lret
adc
push
lods
sti
mov
std
mov
add
fwait
pop
mov
push
sbb
imulb
push
jle
add
addb
mov
dec
jmp
into
ja
je
ficoms
fsubl
test
or
pop
and
add
rolb
cmp
repnz
mov
or
and
rolb
lahf
xchg
add
gs
pop
aas
popa
mov
pop
sarl
xchg
pop
cltd
ds
xchg
scas
and
and
mov
push
incb
lock
inc
mov
push
movsl
sub
imul
shrb
or
icebp
mov
subl
adc
les
cmpsb
shlb
filds
push
aam
inc
or
inc
push
stc
sbb
and
ret
sub
and
dec
sbb
push
fbld
sbb
mov
inc
add
test
repz
sub
push
mov
mov
mov
dec
nop
sub
push
push
mov
mov
push
fnsave
repnz
mov
adc
insb
mov
mov
push
int3
stos
pusha
aas
adc
sbb
ss
jmp
push
je
mov
mov
mov
hlt
inc
mov
inc
add
jo
imul
enter
inc
jb
pushf
movsl
mov
push
imul
insb
dec
jbe
push
in
xchg
push
imul
ljmp
pop
cmp
in
aam
sbb
inc
call
push
and
inc
or
push
xor
xchg
lret
mov
add
dec
popl
xchg
push
leave
xchg
into
xchg
xchg
lret
sub
in
int
fistl
add
mov
hlt
test
insb
adc
add
xchg
xor
mov
pop
cwtl
mov
popa
push
cmp
lock
andl
leave
rclb
hlt
inc
jl
test
xchg
jmp
pop
daa
sbb
mov
xor
pop
aad
adcb
adc
mov
xor
jl
jl
push
push
mov
add
push
inc
cwtl
scas
xor
inc
xchg
xchg
inc
js
test
jecxz
and
jecxz
jo,pn
pushf
sar
in
mov
fadds
rorb
nop
popa
in
jo
cwtl
cmp
shlb
roll
mov
pop
adc
test
and
repz
das
std
movsb
mov
in
inc
dec
dec
sbb
test
inc
pusha
std
sbb
adc
sbb
sbb
xor
out
stc
mov
jmp
add
mov
out
pop
das
cld
xor
mov
mov
pushl
jge
mov
add
cmp
pop
les
pop
pop
imul
lods
cmp
lock
fsts
push
aam
adc
lock
push
mov
dec
cmp
xchg
addr16
inc
loop
sub
push
repnz
movsl
mov
sub
add
sub
mov
or
sbb
inc
ja
xchg
rol
and
inc
pop
pushf
lods
shl
dec
hlt
sbbb
push
lods
out
mov
dec
add
mov
aad
jne
add
jns
cs
mov
push
adc
or
add
fiadds
jl
test
fcmovnbe
inc
cmp
or
inc
mov
push
jns
int3
mov
inc
jno
ss
xchg
mov
jae
insl
and
fcompl
and
inc
sar
lahf
arpl
cmp
pop
outsb
in
mov
jecxz
outsb
add
jbe
adc
dec
pop
adc
faddl
aaa
pop
cmpsl
cmp
dec
cwtl
and
and
pop
push
push
xlat
cmp
push
loopne
add
insb
pop
frstor
pop
mov
lret
ljmp
popa
out
filds
or
subb
jge
add
lock
test
rcrb
call
cmp
jne
daa
test
jns
into
pop
xchg
or
sbb
repz
push
push
xchg
ds
leave
js
dec
repz
jae
clc
xchg
add
icebp
scas
fwait
and
mov
and
pop
inc
sub
jge
xor
adc
bound
iret
stos
clc
cwtl
add
push
fsub
mov
sub
incl
jp
test
rcll
or
jle
scas
pop
cmp
xchg
push
mulb
jle
xor
or
dec
aaa
or
mov
or
andb
cld
dec
push
pop
stc
sbb
sbb
or
cmp
add
inc
cmpsb
push
les
setns
imul
mov
sbb
jl
pop
ljmp
pop
mov
push
int3
xorb
push
mov
or
mov
lods
mov
add
adc
lock
and
adc
shll
mov
add
mov
das
push
xchg
insl
or
lods
shrb
ds
cmpsb
jecxz
js
or
sarl
pop
lods
aas
in
mov
cmp
fucomp
loope
and
imul
inc
and
repz
push
or
mov
inc
inc
sbb
mov
push
jecxz
dec
test
inc
adc
out
bound
movsb
mov
imul
cmp
xchg
faddl
cmp
or
call
cli
mov
mov
sbb
pop
mov
out
mov
cltd
or
loopne
sbb
pusha
ds
jae
dec
fldt
add
cmc
aam
outsb
cmp
push
xor
fnsave
push
or
out
loope
jmp
inc
dec
mov
daa
lcall
push
dec
dec
andl
test
adc
add
subb
jl
push
inc
into
popf
push
pop
test
dec
aad
lahf
addb
jmp
jnp
hlt
test
jl
adc
cmp
mov
into
loop
push
and
repnz
out
push
int3
xor
xchg
popf
inc
stc
dec
add
push
dec
dec
stc
xchg
arpl
rcrb
adc
aaa
sbb
stos
aad
enter
sub
mov
flds
bnd
inc
mov
fdivrs
pop
push
loop
dec
mov
push
and
sbb
cld
sub
in
lea
mov
outsb
adc
negb
jne
outsb
mov
jae
int3
fmull
ss
mov
shlb
in
mov
aas
mov
inc
cmp
mov
aaa
les
and
stos
mov
out
jecxz
cmp
jl
push
jp
xchg
jmp
push
fsubr
jle
mov
and
adcl
add
and
popa
push
in
insl
mov
lcall
movsl
add
jns
lock
nop
aas
les
bound
xchg
mov
into
lods
je
arpl
mov
and
cmp
xchg
push
call
pusha
jp
push
pushf
add
in
and
in
sbb
clc
xorb
je
sub
movsl
into
int
push
push
aad
pop
jecxz
adc
adc
dec
ret
sahf
xchg
sub
loop
movsb
rolb
xor
mov
arpl
aad
mov
pushf
movsl
and
test
mov
adc
adcl
pop
arpl
lods
mov
iret
mov
xchg
mov
sbb
mov
lods
adc
or
bound
jecxz
sbb
iret
push
pop
mov
inc
xchg
es
icebp
adc
das
rcr
inc
outsb
nop
push
mov
xor
mov
push
push
adc
sarl
sub
aam
inc
inc
adc
imul
dec
loope
xchg
adc
push
lock
push
loope
js
push
ret
pop
jns
adc
mov
adc
out
addl
mov
rcrl
test
jge
fsts
mov
adc
and
and
xor
jbe
xchg
mov
jmp
xor
mov
sar
outsb
and
mov
aaa
sbb
fs
fcoms
cld
repz
jp
in
test
leave
loop
pusha
xor
push
movsl
enter
sub
rcrb
ds
pop
popa
sub
adc
insb
fidivrl
fildl
pop
shll
push
mov
xor
outsb
roll
dec
fsubs
adc
mov
scas
das
rcr
arpl
mov
inc
push
mov
xchg
in
lock
xchg
arpl
mov
push
fisubrl
insb
mov
mov
adc
inc
lahf
dec
les
sbb
shl
popa
adc
mov
xchg
aas
dec
pop
rcrb
xchg
clc
pop
sbb
and
int
lods
cwtl
loope
pop
lock
pusha
push
push
outsb
out
and
cwtl
jg
in
test
insl
orl
psubb
mov
adcl
ret
leave
push
out
jecxz
sub
imul
mov
inc
jnp
sahf
inc
dec
inc
pushl
loop
push
cmpl
and
mov
pop
xor
mov
mov
cmp
outsb
pop
cmp
jae
mov
sbb
ret
add
nop
out
in
inc
movsb
push
mov
loope
add
stos
add
je,pn
push
xchg
mov
pop
cs
adc
push
jmp
std
push
hlt
pop
push
xor
sbb
jle
push
or
popf
inc
or
outsl
cmp
test
inc
popa
loopne
and
fistpl
xor
adc
addl
jne
inc
lahf
add
test
cmpb
leave
fistl
loopne
pop
jg
push
pop
xchg
add
rcl
lahf
xchg
hlt
sbb
popa
xor
icebp
add
and
or
sbb
sub
test
jb
push
stos
cmpsl
inc
sbb
push
jle
cmp
insl
inc
lahf
adc
lods
jle
ret
mov
inc
hlt
lea
adc
movsb
shlb
mov
sbb
pop
sbb
push
pop
or
loope
fsubl
shlb
fisttpll
cmp
jg
shl
pop
pusha
mov
rcrb
mov
out
and
dec
mov
push
lret
dec
loopne
das
jecxz
add
and
insb
jp
sub
push
cwtl
jge
add
paddusw
push
lret
mull
cmpsb
jo
sbb
repnz
add
dec
inc
dec
xor
jge
and
mov
push
ret
jbe
or
add
push
ja
adc
xchg
mov
dec
add
or
adc
hlt
pop
push
push
in
push
inc
sbb
xchg
mov
and
shl
adc
aam
jbe
dec
xor
sub
lahf
add
cmp
arpl
adc
test
andb
mov
sub
lock
add
sbb
xorl
xchg
dec
out
std
int3
pop
mov
sub
jmp
cmp
inc
hlt
lea
sub
xor
push
cmp
mov
dec
jo
icebp
adc
loop
or
fists
sarl
jge
jl
mov
mov
mov
das
push
pop
mov
jno
xlat
inc
push
cmp
xchg
out
push
scas
mov
int
sbb
dec
push
in
jmp
xchg
add
jge
int3
sbb
lods
lods
or
mov
fmuls
lret
fdivrs
adc
pop
fidivrs
fdivrp
paddq
inc
add
pop
inc
xchg
xor
push
jl
fidivrs
cmp
bound
xchg
mov
lods
loope
pop
lret
cmp
mov
int
dec
mov
test
xchg
adc
sbb
fldenv
push
outsb
call
or
in
xchg
and
cmpb
push
pop
scas
pop
xchg
xchg
dec
fwait
mov
pusha
in
sbb
popf
xchg
in
fmull
xor
pop
loop
dec
and
rcll
rolb
xor
cmpsl
sar
es
mov
shll
push
xchg
xchg
scas
das
and
roll
and
out
adc
and
mov
ss
dec
mov
mov
push
or
pop
inc
cmc
sbb
lods
mov
sbb
dec
jge
and
mov
mov
sahf
subl
push
ljmp
out
or
mov
movsw
gs
gs
mov
or
mov
xor
fwait
ljmp
pop
or
clc
cmpsl
sub
mov
mov
in
xor
and
iret
cmp
sbb
ds
jp
leave
cmpsl
push
addb
ss
push
dec
shrb
or
xor
xor
aam
jecxz
loope
les
sub
lcall
xchg
stc
and
push
fmull
xchg
sub
and
sbb
or
mov
adc
lahf
shlb
cmpsb
mov
int3
or
dec
push
sbb
pop
test
xor
sub
adc
add
sub
jo
movsl
xlat
sbb
mov
mov
adc
test
sub
sti
xchg
scas
fsts
clc
pop
dec
fiaddl
inc
push
insb
inc
test
cltd
jbe
sub
xor
mov
dec
push
jno
movsb
leave
or
imul
pop
aaa
cmp
inc
in
xchg
clc
mov
inc
mov
sub
repz
xor
sahf
das
mov
add
add
push
and
cmp
or
pop
add
shl
repnz
inc
aas
mov
sbb
int
clc
push
fst
sbb
sbb
jge
sbb
inc
inc
aad
inc
mov
push
push
das
and
jne
sub
nop
cs
xchg
jne
mov
sbb
in
hlt
stos
xlat
int
dec
outsb
and
xchg
fcomi
cs
sbb
out
xchg
cmpsb
xchg
je
pop
sbb
lcall
push
add
aaa
in
jo
adc
addb
push
fwait
shll
mov
pop
xor
add
pop
cmp
in
test
push
shll
sbb
dec
insb
and
mov
ret
cmp
or
jmp
mov
cmpsl
jae
push
ljmp
daa
xor
aas
mov
sub
arpl
scas
lods
lock
dec
and
je
push
push
mov
sub
and
jge,pt
adc
loope
pushf
dec
dec
lock
punpcklbw
mov
test
cmpxchg
hlt
test
mov
testl
sub
mov
scas
inc
mov
dec
popf
lahf
cmpsl
xor
mov
inc
adc
pop
out
pop
es
in
decl
clc
lods
jb
sbb
imul
dec
mov
mov
jecxz
push
sahf
add
pop
out
pop
mov
out
ret
cmp
mov
lcall
loope
adc
add
xorb
gs
lret
ja
xchg
xchg
dec
scas
dec
jns
or
pop
mov
mov
lahf
inc
cmpsb
test
mov
ss
sbb
stc
nop
das
add
sbb
out
stos
test
flds
cmp
push
push
sbb
jbe
shll
and
sarl
aad
xor
xor
mov
add
and
sbb
inc
in
decb
sub
inc
out
mov
movsb
shrl
cs
data16
out
push
fidivs
or
mov
xchg
and
cmc
pop
fsubs
xor
add
push
sub
div
andb
fwait
or
call
inc
das
adc
dec
sub
ret
leave
fldcw
xor
sub
fisubs
push
mov
xor
mov
pop
cmpsl
lahf
mov
and
pop
mov
add
jmp
adc
shlb
clc
call
repz
or
das
and
icebp
mov
mov
movlps
stc
or
aad
inc
jb
subl
fcomps
push
loopne
jb
mov
addl
xor
push
loope
inc
scas
xchg
push
cs
pop
sbb
inc
int3
mov
add
and
js
jno
fs
dec
cmp
in
xor
jg
lea
jae
aam
or
dec
push
aad
sbb
sub
out
cmp
mov
clc
xlat
push
aad
popa
jg
mov
xchg
inc
imul
mov
clc
leave
adcl
in
and
push
inc
or
jnp
push
fmuls
sbb
add
jae
out
repnz
leave
and
jg
inc
rolb
cwtl
shlb
imul
fistpll
and
sbb
jbe
xor
cmpsb
dec
in
sub
and
inc
mov
sarb
jge
mov
mov
mov
cli
in
inc
ret
push
mov
lea
push
adc
xor
daa
std
inc
inc
or
test
mov
inc
dec
adc
push
lcall
aaa
cmp
jns
call
push
and
mov
inc
xor
clc
inc
loopne
xor
and
cmp
or
sbb
aad
adc
dec
and
ss
inc
adc
xchg
insl
das
lock
jo
mov
pop
mov
lea
cmpsb
std
sti
xchg
and
invd
pop
fldt
in
push
inc
xchg
jecxz
add
jo
inc
aam
mov
mov
fwait
mov
stos
inc
testb
scas
cwtl
jmp
in
xor
cmp
xor
pop
int3
push
hlt
pop
mov
jae
sub
xchg
inc
vmread
sbb
mov
ljmp
cmc
mov
sub
xor
mov
push
lret
call
or
pop
popl
and
add
jg
pop
wrmsr
or
and
mov
orl
aas
lea
nop
mov
push
sarl
xor
inc
int3
xlat
sbb
jo
sub
inc
dec
push
push
lods
mov
adc
jb
lea
and
repnz
dec
fidivrs
shll
ds
jecxz
loopne
loopne
xchg
cmp
rolb
enter
frstor
push
push
inc
addl
roll
mov
xlat
mov
add
shrb
lods
fdivrs
icebp
mov
and
jg
xchg
pop
adc
push
jne
push
inc
cvtps2pi
mov
push
mov
stos
lahf
inc
pop
int3
loope
cmp
movsb
dec
fsubl
test
into
out
mov
xor
rclb
insb
jnp
mov
lcall
xchg
lods
iret
test
inc
push
inc
add
jbe
sub
pop
stc
dec
hlt
pushf
lods
aam
cmovo
cld
dec
xor
adc
push
rcll
ja
nop
inc
std
scas
insb
and
les
loopne
addr16
sub
or
mov
in
and
xor
and
fildll
or
inc
mov
push
imul
mov
repnz
push
cmp
loop
fiadds
xchg
inc
ss
xchg
xor
add
mov
cmp
cmc
arpl
int
mov
add
and
orb
adc
test
lods
ds
mov
mov
or
mov
or
mov
flds
inc
sub
je
adcl
xlat
les
loope
int
pop
insb
ja
jl
sub
std
adc
mov
xchg
fdivs
pop
sbb
or
adc
or
inc
subl
mov
sbb
pop
inc
insl
aam
andb
push
inc
out
adc
scas
add
sbb
add
dec
sti
inc
insl
mov
test
dec
out
jnp
push
lcall
dec
xchg
push
mov
adc
cmpl
test
push
sbb
xorl
shl
mov
adc
push
les
inc
push
lret
inc
or
mov
sarb
aam
dec
fiaddl
mov
sbb
vrcpss
jle
lock
jb
xor
ret
and
into
sbb
enter
fs
scas
dec
and
or
push
movsb
fdivl
or
hlt
jno
push
pop
lds
lds
pushl
dec
jg
lock
mov
lock
mov
je
sub
pop
insb
leave
jmp
clc
or
in
lret
inc
push
adc
jnp
mov
or
aas
jnp
int
xlat
add
bt
inc
dec
movsb
test
jb
inc
xchg
cmpsb
mov
imul
mov
or
je
mov
imul
or
mov
out
and
add
xor
repnz
push
sub
xor
adc
and
cs
mov
xchg
mov
ficomps
or
dec
mov
in
jl
loop
cltd
and
sahf
push
jno
les
sbb
jbe
fildl
xchg
repnz
push
pop
mov
lods
jle
dec
mov
dec
sub
rol
xchg
sahf
adc
ror
xchg
jl
add
add
cmc
pextrw
es
mov
push
xor
in
shlb
and
inc
shlb
mov
sti
mov
jmp
scas
ja
loop
or
insb
test
rorl
js
push
rcrl
sbb
ret
adc
sub
test
aas
push
fadd
rcll
add
jae
cli
int
int3
mov
or
cld
adc
dec
push
add
jge
mov
loope
inc
xchg
adc
mov
icebp
lret
filds
add
push
mov
inc
pusha
jge
repnz
sar
dec
xorb
jo
rclb
mov
push
fs
sub
test
rclb
stos
mov
insb
push
gs
dec
adc
popa
add
push
xor
lret
add
and
mov
pop
adc
xor
inc
add
pop
jno
jg
inc
mov
arpl
dec
mov
xlat
leave
in
enter
jae
test
cmpsb
out
js
dec
out
pop
test
ret
push
lods
sub
xchg
js
clc
insb
mov
mov
lods
push
push
dec
cmp
repnz
mov
jmp
sub
jae
js
ret
xchg
xor
and
sahf
mov
xlat
test
cmp
bound
clc
cmpsl
mov
decl
data16
and
js
add
rcrl
movsb
ja
adc
arpl
cmp
jg
lods
stc
and
lahf
xor
stos
adc
std
stc
adc
add
out
jecxz
push
cwtl
sbb
shrd
or
xor
add
jns
dec
xor
les
jle
push
leave
mov
xchg
xchg
or
xchg
aaa
lds
adc
popf
xchg
ljmp
add
add
push
push
movsl
mov
cmc
or
outsb
mov
dec
pop
xchg
sub
sub
cld
lods
lds
lock
imul
push
into
es
pusha
lret
lea
push
jno
xchg
push
sbb
pop
insl
stos
sahf
push
push
add
mov
subl
mov
add
cmp
fistl
mov
cmp
sub
xor
popf
ret
xor
and
in
mov
lret
outsl
fldl
push
jle
inc
sbb
xor
and
xchg
push
cwtl
adc
sbbl
cmpsb
pop
push
jb
push
push
in
inc
insl
sbb
mul
push
mov
inc
sbb
stos
sub
mov
mov
lcall
loope
adc
pop
and
fsubl
mov
mov
xor
cmp
inc
pop
jo
fsubl
ret
in
sub
pop
insb
inc
shrl
sbbb
ja
ret
adc
mov
shrl
xchg
mov
add
mov
mov
das
lods
sub
xchg
loope
pushf
pop
or
dec
push
inc
insb
js
push
push
negb
frstor
adc
shl
js
mov
inc
push
test
lret
lods
cmc
jb
or
mov
sub
jne
pop
xchg
jb
movsl
adc
arpl
add
arpl
push
pop
imul
and
inc
push
rcrb
cmp
push
mov
inc
sbb
push
adc
ret
cwtl
mov
jle
cmpsl
lea
jns
jb
lods
sbb
inc
test
inc
das
shrb
out
test
adc
popf
bound
mov
aas
mov
pop
adc
inc
fsts
stos
inc
cmp
jne
and
stc
scas
or
and
pop
js
and
sbb
inc
repnz
xorb
iret
jecxz
mov
dec
mov
xor
aas
imul
dec
ljmp
lock
mov
in
daa
xor
popf
popa
add
dec
std
adcb
ret
roll
shr
ljmp
xor
lock
push
push
loop
xchg
or
mov
pop
push
adcl
scas
aam
scas
or
dec
mov
aam
xchg
scas
sub
mov
int3
dec
cmpsb
paddsb
jae
xor
out
insl
mov
loop
sub
rcrb
or
cld
hlt
lods
add
pop
movsl
aaa
ret
adc
jecxz
mov
arpl
in
subb
cld
jb
in
mov
mov
lods
sahf
adc
je
inc
shll
sbb
push
mov
mov
mov
fistl
rcr
stos
xor
test
stc
or
lock
jb
and
cmpsb
aam
lea
roll
insl
stc
mov
cmp
mov
mov
jb
adc
mov
sub
mov
dec
loopne
push
mov
lods
fcomi
inc
mov
xorb
aaa
mov
sub
dec
sbb
outsl
in
dec
xchg
iret
ret
mov
pop
bswap
or
mov
mov
bound
inc
ret
sarb
nop
xlat
push
lcall
dec
cmp
pop
pop
jl
shll
and
daa
pop
xchg
push
push
push
bound
and
imul
jmp
push
xchg
clc
xlat
and
push
dec
fdivs
and
dec
xor
push
pop
push
sbb
leave
and
push
mov
loopne
xor
cltd
decb
jns
js
sti
ficoms
cltd
out
cmp
mov
rcrl
pop
or
dec
call
sbb
outsb
sbb
je
insl
adc
sbb
mov
sub
enter
lahf
fs
test
inc
mov
ss
repz
xchg
lock
scas
addl
les
pop
pusha
pop
js
push
sub
jnp
test
into
ret
add
push
dec
dec
and
cwtl
mov
mov
insb
test
inc
mov
dec
inc
push
or
add
ds
add
arpl
jo
pop
mov
test
jge
dec
mov
repnz
aas
xchg
sub
push
xor
mov
lock
and
push
mov
push
out
dec
addl
mov
jb
dec
xchg
movsb
adc
lock
test
jns
xchg
jno
and
and
js
leave
cmp
aas
and
push
adc
test
pop
pop
std
out
sahf
adc
jo
adc
sbb
mov
or
repnz
call
les
and
mov
ret
jbe
adc
inc
cmc
and
push
in
or
dec
or
sbb
vmread
insl
pop
sub
lods
into
cmc
mov
ret
cli
ljmp
jns
popa
stos
fst
inc
xor
push
fstl
cmp
js
cld
scas
add
or
add
sub
addb
mov
cmp
push
popf
shll
nop
aas
jl
dec
xchg
mov
cmp
cmp
mov
and
fildl
or
jg
or
addb
inc
inc
pushf
or
dec
clc
lcall
push
mov
add
mov
int
mov
fs
out
mov
pop
adc
movsl
into
loopne
xor
str
mov
bound
mov
pop
sbb
inc
into
stos
sbb
sahf
sbbb
pusha
fsub
aas
mov
dec
test
push
mov
shl
pop
sbb
dec
mov
and
pop
ret
dec
push
lock
mov
fcompl
bound
push
cmp
jne
sub
dec
inc
xchg
leave
fstpt
add
aam
outsl
cmpl
aad
insl
arpl
popf
int
adcl
clc
ret
mov
iret
add
and
sbb
cli
popa
inc
or
sub
jmp
ds
int
cltd
push
add
dec
and
cld
cs
dec
mov
fcmovb
xor
mov
or
push
sbb
repnz
dec
fcmovnbe
xor
lahf
sbb
lods
mov
sub
adc
adc
or
icebp
outsl
mov
push
in
dec
mov
xor
sbb
dec
add
push
shrl
in
dec
das
test
pop
push
rorb
ds
scas
mov
sbb
add
jp
xchg
rcl
mov
pop
inc
pop
pop
fsubrl
subl
pop
xchg
adc
ret
mov
jbe
testb
push
int
jo
sbbl
pop
in
xor
and
adc
stos
int3
mov
out
dec
mov
int
rorl
inc
cmp
jne
dec
das
mov
sub
push
xor
in
fs
filds
add
or
adc
push
iret
lods
in
jnp
xchg
clc
push
push
jge
xchg
inc
xchg
cld
in
xchg
dec
mov
add
xchg
hlt
sarb
inc
mov
xchg
add
jae
int
std
jmp
adc
int
mov
iret
scas
ss
idivl
sub
or
xor
xchg
sbb
pushf
cltd
in
mov
mov
sbb
mov
adc
push
mov
push
and
xor
pop
sbb
filds
push
andb
cmp
rcrl
popa
jnp
cmp
stos
sar
inc
or
pop
mov
lock
rolb
mov
add
jb
sub
data16
jae
into
cli
mov
cmpsl
lcall
cwtl
inc
cli
push
cltd
push
clc
leave
gs
mov
jae
xchg
in
pop
rolb
loopne
add
fisubl
mov
test
xor
ret
into
sub
nop
lods
cmp
add
jo
pop
rcll
andl
sub
loopne
test
lods
inc
push
jno
daa
xchg
repz
loopne
add
inc
jmp
pop
aaa
fmuls
dec
aas
adc
sbb
repz
mov
fwait
xor
insl
mov
and
andl
lret
dec
xor
sub
inc
mov
pop
and
test
or
pusha
inc
adc
mov
jnp
bound
cmp
stos
call
addb
movsl
cmp
lcall
inc
sbb
adc
enter
cmp
mov
sub
stos
sub
add
inc
mov
mov
xchg
imul
adc
popf
lods
mov
dec
ret
adc
jbe
jecxz
inc
cld
adc
and
mov
lahf
lods
adc
mov
mov
stc
loope
xchg
cmp
pop
outsb
stc
or
mov
add
jne
popa
xchg
or
mov
push
xlat
cmp
and
or
pop
ja
mov
subb
pop
test
inc
mov
mov
and
iret
sub
popa
lret
pusha
subl
fcmovne
jae
mov
roll
fldl
loop
fistpll
add
insl
xchg
and
in
mov
add
idivl
cli
outsl
add
cmp
enter
cmp
imul
adc
in
dec
xor
mov
mov
cmpsl
add
shl
adc
loopne
repz
xor
outsb
and
xchg
daa
hlt
xchg
mov
mov
out
cmpl
jb
std
pop
inc
cmp
xchg
pop
xor
sbb
jecxz
daa
repnz
lock
lods
mov
push
mov
inc
test
add
enter
int
movsb
stos
addr16
mov
xor
out
flds
and
ficoml
jo
push
xchg
xor
leave
test
cmp
fwait
dec
xchg
inc
mov
pop
and
pop
mov
aas
mov
add
sar
in
jbe
push
in
inc
stos
xchg
frstor
mov
push
adc
aam
xchg
nop
xor
into
daa
mov
fdiv
mov
add
lods
mov
rorl
dec
mov
jno
in
movsb
sbb
loop
inc
fmuls
jmp
mov
add
jmp
int
adc
xor
jecxz
insb
repnz
xchg
loop
inc
or
popl
mov
scas
mov
push
leave
fidivrl
ret
xor
and
xlat
mov
mov
test
fldl
fists
mov
jbe
pop
xor
pop
cmp
sub
jge
aad
xchg
das
sub
movsl
add
setge
push
lcall
mov
bound
mov
jl
loope
mov
push
cwtl
xchg
mov
sbb
test
sbb
xchg
jbe
sti
push
test
or
in
pop
cmpsl
fbld
xor
daa
mov
outsb
adc
xor
nop
add
push
ret
mov
fnstcw
stos
mov
or
xor
sub
and
fcmovne
inc
xchg
cld
cmp
push
sti
lcall
clc
add
sbb
sub
xorl
adc
cmpb
xchg
cmp
xor
push
negb
mov
imul
pop
test
icebp
adc
sbb
inc
insb
loopne
xchg
xor
jae
mov
or
inc
push
leave
lods
das
aas
jle
andl
lods
aas
out
nop
pop
sub
and
sbb
fninit
adc
outsb
jg
icebp
out
int
lahf
jne
mov
sub
or
xor
jl,pn
aas
push
jno,pn
jle
sbbl
add
sbbb
lock
push
push
sbb
pusha
clc
dec
adc
in
fisubs
xor
or
repnz
aam
pushf
mov
andb
int
movsb
subl
aad
xor
pushf
bnd
jne
adc
loop
pop
mov
xor
lcall
push
add
cltd
sbb
addr16
pop
mov
movsl
xchg
sarb
cmpsl
mov
jbe
mov
add
sbb
dec
call
mov
cmpsb
and
arpl
mov
or
cmp
adc
mov
aas
or
lock
jo
adc
lock
pop
jno
sar
loope
pop
cwtl
sub
shlb
xor
jne
fiadds
jecxz
sbb
mov
popf
mov
sub
cmp
dec
in
add
jb
inc
scas
adc
cmp
xchg
iret
data16
mov
mov
sar
push
lods
aad
vmovntps
cwtl
cwtl
and
dec
rclb
push
xchg
lods
ds
mov
jb
cld
dec
push
push
push
mov
roll
cmp
inc
ljmp
call
add
push
repnz
mov
add
mov
stc
int3
xor
adc
inc
add
repz
jno
dec
or
int
cmp
repz
adc
fdivrs
sbb
push
jle
movsb
sti
lret
les
and
mov
sahf
add
push
push
mov
dec
adc
or
lods
insl
out
loopne
insl
sub
mov
sbb
adc
cwtl
mov
loop
faddl
mov
mov
sbb
jns
push
clc
out
pop
push
and
lea
xor
rcrb
mov
fisttpll
mov
cmpsl
aam
aam
clc
sahf
shlb
inc
test
mov
jmp
mov
and
mov
push
dec
cmp
sbb
gs
add
push
jne
jmp
ret
xorl
add
mov
cmc
jl
mov
inc
mov
je
rcrl
xor
jns
dec
insb
jbe
or
imul
dec
cmpsb
xor
xchg
dec
out
fcoml
add
adc
popf
adc
mov
and
pop
add
pop
enter
jmp
pop
dec
in
cmp
adc
dec
mov
dec
popf
xchg
cmc
insl
jns
inc
inc
adc
aad
cli
push
pop
jb
push
mov
push
xchg
js
out
pushf
je
int
fstpl
inc
icebp
jg
jp
lea
xorl
pop
mov
nop
cmp
int3
mov
les
lcall
in
jns
shll
mov
lock
push
loope
lahf
je
rcrl
cli
arpl
pop
pop
data16
and
imul
repnz
pop
les
xchg
nop
nop
fisubs
xor
push
push
imul
push
fistps
fcompl
cltd
bound
mov
movsb
repnz
sbb
cmp
lock
mov
bound
pop
dec
inc
jge
push
lods
adc
jnp
lahf
in
and
jne
dec
rorl
xchg
stc
xor
or
and
adcb
in
movsb
xchg
push
cmp
pop
xlat
mov
dec
adc
mov
mov
inc
repz
push
pop
xor
mov
lock
test
jecxz
out
ficoml
mov
mov
adc
mov
xchg
out
lods
add
popf
jmp
or
aas
and
and
stc
xor
xchg
mov
fmull
divl
or
inc
insb
stc
les
arpl
aam
cld
into
cmp
sbb
repnz
sahf
xor
cwtl
xorl
imul
int3
lock
bnd
cs
adc
add
roll
jl
inc
inc
lock
out
imul
and
out
adc
mov
mov
shrb
test
fwait
popf
nop
push
jecxz
repz
lret
and
sbb
dec
lods
mov
adc
ret
sbb
fwait
lea
hlt
mov
jecxz
mov
push
les
xor
or
add
addb
lea
ret
mov
inc
and
sbb
inc
outsb
cmp
mov
xor
int
imul
pop
and
push
cmpsb
aaa
fimuls
ret
mov
das
cltd
jge
and
xorb
clc
jns
shrl
icebp
lea
lret
add
add
add
push
test
jge
inc
adc
out
ret
cmp
loop
in
aaa
in
jecxz
push
pop
jl
adc
and
arpl
cld
jle
and
pop
bound
add
or
mov
push
fcoms
mov
and
call
fstpl
pop
add
dec
pop
cmp
aad
fimull
lcall
imul
pop
jbe
nop
push
mov
pop
pop
cmp
xor
enter
in
ds
inc
dec
repz
dec
push
sti
xchg
test
movsb
and
or
dec
mov
adc
xor
xor
xor
jl
xchg
and
inc
inc
daa
or
pop
into
cmp
dec
jp
je
adc
push
pushf
sti
imul
add
push
jl
inc
fdiv
inc
fbstp
addl
push
add
dec
push
cmp
rcrl
cmp
push
xor
arpl
out
mov
int
outsb
push
pop
cmp
jns
das
cmpsb
pusha
xor
andl
loope
mov
ficoms
push
inc
scas
loope
and
aam
dec
shll
test
mov
js
and
mov
jge
out
daa
int
push
jo
xor
jne
sbb
stos
incb
ss
xor
or
lock
mov
cld
jno
xchg
out
push
mov
enter
push
adc
adc
xor
cmp
and
adc
inc
popf
dec
aad
lods
mov
pop
out
stos
push
jecxz
data16
xor
jb
pop
xlat
sbb
pushf
add
adc
mov
insb
jbe
xor
imull
push
pop
rcl
jg
orl
dec
xchg
inc
jge
nop
mov
mov
mov
rolb
std
fsubs
xchg
mov
cld
push
scas
fsts
repz
push
arpl
in
adc
mov
ljmp
enter
sbb
mov
and
rcrb
ds
and
sub
loope
pushf
lock
jnp
nop
xor
add
in
xchg
xor
arpl
add
repnz
in
imul
popa
adc
add
inc
or
cld
adc
or
insb
adc
es
push
inc
iret
ljmp
or
cmp
cmp
scas
add
enter
mov
and
mov
popa
cs
sarb
lods
push
and
sbb
jle
cmp
cmc
in
bound
out
add
lahf
out
jecxz
xchg
test
adc
xchg
mov
mov
pop
jmp
inc
mov
inc
in
fdivs
leave
cmp
or
xchg
push
pop
test
adc
in
push
lock
jmp
jae
subl
cli
into
jp
loop
add
push
pop
xor
mov
and
pop
cltd
cltd
xor
inc
sub
and
jae
xor
push
orb
repz
lock
enter
addr16
push
jo
addr16
push
repz
push
xor
test
mov
sbb
stos
fldz
call
ds
inc
jmp
pop
add
adc
adc
imul
mov
je
pop
jge
icebp
xor
andl
out
scas
nop
cmp
js
pop
pop
fwait
adc
ja
and
xchg
test
mov
push
mov
ret
outsl
mov
ljmp
sbb
pop
pop
aaa
ret
jae
inc
fs
and
xor
orb
cmpsb
inc
out
jo
fiadds
mov
loop
add
pop
lock
mov
pop
cmp
xchg
hlt
cmp
out
pop
sub
push
mov
std
jecxz
bound
mov
xor
ss
dec
notl
adc
data16
sbb
lahf
test
scas
gs
mull
inc
mov
mov
push
push
and
mov
out
repz
xchg
xor
sub
sbb
call
push
xchg
nop
xchg
ret
dec
aas
add
sub
jno
bnd
xchg
or
push
out
push
sub
shl
shlb
lds
loop
mov
loop
inc
mov
xchg
pop
cs
and
mov
mov
sbb
lock
jle
subl
or
iret
pushf
pcmpeqw
ss
and
xchg
pop
mov
mov
add
pop
lahf
or
imul
mov
adc
pusha
in
test
cwtl
mov
enter
cwtl
int
pop
push
insl
leave
movsl
adc
sub
gs
mov
test
push
push
pop
add
lds
fwait
pop
loop
in
jp
lea
sahf
out
faddl
xchg
addl
incl
icebp
lds
jb
xorb
xlat
dec
xor
clc
mov
sbb
test
testl
cs
mov
cwtl
jo
ljmp
popa
aam
xor
filds
daa
xor
rcr
data16
and
and
xchg
arpl
inc
xor
sub
xor
paddsb
adc
xor
cwtl
pop
int
stc
mov
pushf
inc
and
dec
xor
pop
inc
push
xor
sbbb
test
in
stc
mov
insb
cmp
fistps
arpl
rol
xchg
adcb
mov
shlb
xor
sub
mov
mov
scas
out
xor
inc
bts
mov
xlat
sbb
aad
mov
arpl
mov
mov
sbb
cmp
dec
or
sub
xchg
dec
faddl
clc
pusha
imul
lret
ljmp
and
in
rolb
adc
jecxz
xor
mov
dec
mov
loope
jge
mov
push
rcr
rorb
test
cmp
pop
adc
fsubr
or
imul
jne
and
dec
test
and
adc
inc
dec
iret
push
sti
pop
jge
mov
stc
xchg
jb
in
repnz
shlb
fisttpll
dec
cmp
dec
bnd
jne
mov
xor
inc
jge
aas
push
rcrl
pop
adc
aaa
inc
mov
test
xor
int3
mov
add
and
std
jle
mov
fisubs
fists
jne
jo
jo
push
mov
mov
pusha
xor
aad
mov
sub
dec
sbb
aam
sbb
bound
mov
out
das
aas
dec
mov
add
int
and
test
xor
loope
inc
jp
adc
xor
sbb
rclb
out
sub
dec
sbb
dec
les
xor
insb
add
dec
sbb
mov
push
and
cmp
xchg
mov
lret
mov
dec
test
adc
xor
dec
adc
pop
fldl
pushf
mov
xchg
dec
leavew
cmp
mov
adc
mov
faddp
and
xchg
pop
mov
mov
adc
ja
lahf
add
mov
lods
cmp
inc
fbld
inc
mov
in
icebp
test
push
xor
or
pop
adc
loope
cwtl
das
push
push
lret
mov
xor
stos
cs
les
pusha
je
inc
pop
div
rorl
lock
adc
inc
int3
hlt
push
jp
dec
mov
push
xchg
adc
xchg
in
cmpl
pop
dec
ret
loopne
and
push
sub
jo
sbb
and
adc
mov
ds
rclb
fdivs
stos
add
stos
arpl
je
cmpsb
gs
aaa
aam
push
pusha
mov
lock
test
mov
jge
subl
mov
clc
iret
mov
loopne
add
and
lcall
mov
aad
pop
sub
dec
mov
adc
add
xor
shll
gs
sbb
out
outsl
mov
mull
aad
lock
inc
in
push
call
aam
cmp
das
xchg
sub
ret
addb
jp
hlt
dec
add
out
fdivrl
push
aas
sahf
cmp
pop
cmp
sub
fucomp
out
adc
and
arpl
cld
jge
xchg
mov
mov
adc
mov
out
pop
test
mov
daa
and
fwait
xchg
adcl
jne
aaa
test
mov
cmpsb
ja
push
mov
rcl
mov
or
push
outsl
push
ffreep
jae
repz
repnz
repz
loope
jo
cwtl
fldenv
loopne
dec
jo
sub
cmp
push
adc
and
fstpt
lds
adc
dec
daa
dec
sbb
inc
loop
xchg
insl
scas
add
out
cwtl
inc
stos
mov
pop
lret
lret
fisubrl
mov
add
push
xlat
add
mov
andl
out
dec
push
mov
imul
aaa
and
pop
dec
outsl
jmp
leave
dec
scas
lret
and
adc
push
adc
add
mov
push
cmc
jle
or
stos
mov
add
mov
test
ret
dec
scas
mov
ds
js
sbb
pop
ret
cli
and
pop
xor
xchg
cmpsb
mov
sbb
enter
aad
push
lods
aas
lret
cmp
adc
jo
xchg
xchg
cmpsb
add
nop
mov
jecxz
mov
and
stos
ds
in
loop
lods
fnstsw
insb
ret
ss
add
mov
ret
push
mov
ficompl
pop
dec
mov
inc
push
cmp
add
call
in
mov
iret
sarl
pop
lock
cmp
adc
mov
mov
xchg
lock
repz
lods
mov
or
adc
add
flds
add
sarl
sub
mov
sub
push
popf
xor
mov
lret
and
push
test
mov
mov
and
mov
mov
fstl
dec
aam
icebp
dec
cmc
in
addb
scas
add
and
jl
or
cli
sbb
xorb
xorb
or
push
add
loopne
jne
jg
or
xor
push
mov
dec
call
data16
sub
loopne
pop
leave
mov
jecxz
jge
mov
xor
jl
xor
mov
enter
mov
add
dec
shl
orl
and
cmp
iret
es
or
push
xchg
jmp
roll
test
adc
leave
pushf
pop
sbb
mov
adc
jno
mov
rol
dec
jnp
les
lods
push
sub
or
ss
inc
and
js
inc
les
enter
out
mov
jo
or
dec
or
inc
inc
test
lret
out
mov
and
mov
inc
push
arpl
insb
clc
cld
mov
test
clc
inc
xchg
dec
mov
sbb
dec
adc
push
xor
push
and
lcall
cmp
pushf
pop
cltd
jbe
lahf
dec
mov
outsl
xor
test
lock
sub
popf
and
or
xchg
les
jmp
ss
mov
or
sub
push
mov
dec
lcall
add
sub
mov
sahf
das
adc
loope
or
and
in
int3
repnz
stos
jmp
lock
or
xor
ds
fs
call
push
adc
sbb
mov
add
jg
add
call
xchg
dec
mov
push
xor
fbstp
xchg
dec
dec
cmp
lcall
mov
lret
sub
sub
xor
sbb
inc
inc
cwtl
leave
xchg
add
push
gs
int3
cld
in
sub
push
sub
int3
stos
loop
popa
pop
fdiv
aad
clc
clc
mov
cli
inc
fidivs
fsubs
frstor
push
cwtl
pop
ljmp
adc
jle
mov
outsl
jp
mov
push
sbbb
in
xchg
call
jl
xor
dec
or
mov
imul
jno
je
dec
bound
je
scas
xor
int
sbb
lcall
xchg
inc
mov
jbe
jb
add
lods
jnp
cmp
lret
andb
and
insb
adc
jnp
inc
stc
js,pn
mov
inc
shrb
nop
movsb
insb
ds
add
inc
lahf
xor
call
dec
push
pop
ret
or
or
adc
movsl
push
fidivs
nop
xor
fsubr
lock
cmp
jae
cmp
in
pop
pop
in
lret
and
cmp
xchg
push
lea
xor
frstor
mov
xchg
loop
test
dec
fimull
fcoml
js
jb
sbb
out
fimull
in
shrb
aaa
inc
mov
jge
pop
gs
sbb
loop
push
loope
add
add
add
pop
arpl
hlt
pop
nop
aaa
jne
shll
push
daa
inc
lcall
sbb
xchg
inc
jle
cmc
add
cmc
loope
cmc
pusha
push
repnz
enter
ret
ret
iret
add
rorl
js
in
sub
xor
mov
test
mov
mov
push
lods
xchg
lock
mov
lods
in
fists
int
addb
sub
inc
ja
push
jecxz
sub
ret
icebp
push
imul
inc
hlt
xor
sbb
jge
das
gs
sub
sub
in
pop
sarb
pop
sub
test
xor
out
jge
cmp
and
pop
adcb
fmuls
lds
mov
les
jo
inc
sar
fucomp
push
and
lock
mov
inc
add
dec
mov
mov
icebp
lods
pop
inc
out
jge
mov
add
pop
in
and
aas
add
xor
adc
mov
cmp
mov
popf
push
test
scas
popa
jo
arpl
nop
fs
sub
jle
push
cmpsb
push
lds
sbb
mov
fdivs
jg
xchg
std
enter
sub
stos
insl
mov
fldenv
stos
and
in
mov
add
or
mov
jno
push
pop
ret
std
enter
ret
push
xor
add
add
and
or
into
jge
mov
and
mov
adc
call
lret
popa
cld
lds
fs
inc
sbb
out
xchg
test
shl
xor
inc
in
adc
rorb
pop
sbb
and
ficomps
movsl
or
das
sbb
mov
adc
xor
jne
shlb
cltd
xor
mov
xchg
adc
xlat
inc
adc
hlt
movsl
call
jns
adc
jle
or
stos
push
sub
mov
fsubrp
inc
add
cmpsl
fistps
test
in
sbb
fwait
aam
mov
mov
mov
add
jo
js
or
add
je
in
pop
jae
fcoms
test
shlb
sub
addr16
add
xor
inc
adc
or
add
es
out
in
sbb
mov
lods
cmp
push
push
sbb
and
mov
inc
cmp
xor
pop
lods
inc
sbb
fwait
mov
cltd
lcall
fucom
adc
stos
movsb
xchg
les
ret
mov
cmp
mov
inc
fildll
je
test
xor
xchg
dec
into
inc
call
inc
pusha
sbb
and
sub
out
cli
das
push
shlb
and
ss
push
fwait
or
xchg
in
or
cmp
sahf
mov
push
cli
rcll
fcoms
repz
and
cld
push
mov
cmpsl
out
lock
dec
xchg
mov
mov
lds
sti
dec
dec
shlb
sub
and
xchg
adc
lods
add
pusha
pop
push
xor
sysexit
dec
dec
cmc
mov
push
xchg
cmp
add
int3
lods
mov
fprem
xchg
shrb
jb
xor
and
add
adc
call
stc
inc
lea
leave
inc
push
sbb
addr16
mov
dec
xchg
adc
aaa
add
sub
sub
push
lods
inc
scas
hlt
scas
test
or
enter
pop
pop
inc
stos
hlt
mov
test
add
pusha
jnp
dec
stc
mov
iret
and
xlat
sub
and
jmp
sbb
repnz
gs
lahf
mov
int
jge
push
repnz
xor
inc
mov
sub
fisubrl
addr16
push
inc
mov
shll
jnp
iret
mov
and
sarl
in
xor
test
push
std
jl
mov
clc
flds
bound
mov
mov
sub
pushf
sub
mov
inc
jecxz
shlb
in
lods
xchg
dec
and
mov
es
lcall
push
pop
mov
inc
aam
xor
sub
mov
xchg
in
dec
mov
sahf
xchg
mov
push
mov
fdivrs
sub
pushf
divl
cmp
in
jg
mov
cwtl
sub
pushf
into
insb
dec
mov
dec
inc
cmp
add
or
out
jl
add
cmp
lahf
jnp
inc
mov
xor
loope
out
add
mov
add
dec
in
pop
xor
or
mov
push
mov
repz
mov
dec
iret
or
outsl
adc
imul
shr
inc
test
cmpsl
add
push
jecxz
pop
or
movsb
mov
incl
mov
lds
jo
add
sub
daa
mov
stos
mov
mov
clc
bound
jl
icebp
fucomip
push
imul
jg
mov
aam
mov
pop
pop
dec
xor
pop
lret
mov
mov
rorb
pop
pop
mov
jo
pop
popa
jbe
and
mov
xorl
stos
adc
mov
int3
ret
mov
out
cwtl
sbb
inc
lret
xor
imul
mov
fistpll
add
mov
dec
jge
sarb
sbb
xchg
cmp
in
xchg
out
gs
push
jmp
outsb
cli
and
rcr
clc
loop
fwait
mov
xchg
test
sub
shll
outsb
es
xor
sti
loope
pop
aaa
inc
sbb
or
insl
nop
and
movsb
test
push
cmp
fidivrs
or
mov
adc
lods
mov
mov
fs
jne
aam
add
std
add
fisubrs
xorb
push
push
xchg
jns
push
adc
mov
sbbb
es
pop
test
adc
fcomip
aad
mov
rcll
es
out
sbb
dec
roll
test
push
pop
xchg
cwtl
scas
xchg
ret
mov
insl
sub
outsl
lods
add
adc
or
mov
push
mov
xlat
ret
dec
aaa
mov
out
pop
mov
outsb
jne
fimull
mov
arpl
inc
mov
les
mov
insb
sbb
jnp
mov
mov
sbb
out
add
xor
adc
cmpsb
push
xchg
outsb
pop
and
insl
pop
sub
mov
inc
jns
divb
jne
push
pop
out
cmpsb
out
lret
jne
mov
insl
add
push
push
jae
add
hlt
inc
pop
push
divl
lea
cmpsl
jg
int
clc
sbb
and
adc
and
add
push
ret
add
mov
adc
dec
enter
sti
int3
cmpsb
jo
enter
xchg
inc
ss
push
out
add
cwtl
add
adc
loopne
imul
sbb
xchg
jmp
out
mov
ja
sti
in
pop
add
sbb
push
mov
inc
mov
mov
pop
repz
sbb
loope
jmp
inc
dec
inc
imul
inc
push
insb
arpl
or
add
fildl
mov
outsl
popa
pop
push
mov
pop
jae
pop
and
imul
enter
mov
inc
inc
mov
pop
int
inc
pop
movb
ds
out
lods
adcb
push
xchg
adc
add
adcb
ffreep
add
and
rcll
mov
add
sbb
jb
sbbl
and
jb
test
add
cmc
adcl
mov
sbb
fldl
and
fdivs
inc
xchg
fsubrl
xchg
mov
fisubrl
adc
mov
mov
nop
sahf
mov
dec
inc
push
adc
test
xorl
dec
inc
adc
lea
mov
sarl
loope
push
xchg
test
test
sub
inc
lar
in
inc
jb
adc
aam
inc
push
rorl
add
filds
rcll
dec
test
enter
aad
adc
mov
cmp
rorb
add
adcb
and
inc
cmp
add
movsl
mov
push
cmp
sub
inc
inc
rorl
add
ficoml
sbb
shl
jb
adc
push
sbb
add
cmpsl
push
push
pop
sbb
stc
fs
lahf
lock
xchg
xchg
mov
stc
or
pop
sub
pop
mov
xchg
stos
mov
xor
inc
xor
mov
mov
aad
cmp
xlat
enter
movsl
scas
adc
xchg
mov
insb
dec
aas
add
inc
subl
nop
dec
sub
fidivrl
int3
adc
jg
xor
add
adc
subl
in
pop
test
rolb
loopne
iret
cmp
jo
enter
decl
and
push
out
pusha
inc
cmp
inc
nop
xor
sbb
push
jbe
add
sub
sarb
je
cmp
and
push
lret
daa
sub
or
jl
clc
sub
push
inc
decb
xor
incb
dec
dec
andb
sub
test
les
das
in
aam
xor
pop
pop
dec
fdivrs
add
in
ds
sbb
iret
daa
iret
mov
stos
clc
mov
test
mov
pop
mov
sub
mov
pop
inc
jle
xchg
mov
repnz
std
sub
and
fldenv
subb
pop
mov
inc
fwait
or
pusha
sub
mov
and
and
mov
shr
leave
cld
add
std
andl
inc
inc
call
or
daa
cmc
scas
push
cmpb
and
mov
push
and
sub
pop
dec
xchg
stos
iret
stos
lock
push
shll
sar
push
cmc
lea
sbb
int
sbb
aad
sbb
jmp
subl
or
das
test
in
int
and
stc
icebp
rcll
xchg
push
or
cmp
mov
in
out
pop
jo
dec
xchg
ss
adc
cmpsb
roll
in
arpl
jbe
and
ret
mov
lcall
lahf
lret
cmpsl
add
mov
jae
pop
cmp
das
lahf
and
jne
adc
test
dec
js
sbb
call
and
cwtl
xor
dec
in
je
xor
sbb
add
xchg
xchg
mov
in
lcall
xor
daa
add
dec
or
pop
mov
and
lret
pop
cltd
jecxz
subb
mov
or
pop
imul
leave
nop
jmp
or
cmpsb
add
addr16
and
or
cs
aam
cwtl
nop
xchg
push
and
or
adc
and
call
adc
std
dec
imul
xor
sub
dec
adc
cmp
and
push
cmp
jb
cwtl
xchg
enter
aam
aaa
out
scas
jp
popf
popa
or
sbb
pop
and
fbstp
mov
imul
inc
sbb
mov
adc
sbbb
inc
sbb
and
stos
inc
mov
in
loope
ret
pushf
push
lcall
adcb
cltd
jmp
inc
jl
and
mov
inc
addb
test
jge
mov
int3
inc
pusha
andl
jne
cwtl
mov
and
push
xchg
pop
cmc
pop
aam
ljmp
aad
test
mov
outsb
add
gs
out
mov
mov
sbb
add
xchg
scas
loopne
pop
lret
pop
cmpb
xor
pop
add
dec
daa
scas
xchg
je
aam
adcl
or
ss
or
test
popf
popf
adc
push
roll
mov
test
imul
jmp
into
push
jne
icebp
in
xor
mov
cmp
lods
jnp
pop
mov
push
andl
cld
nop
mov
sbb
add
xor
adc
push
shrb
xorb
push
jne
dec
fldl
scas
xorb
jnp
push
movsb
notb
adc
sub
test
fidivl
dec
imul
lds
jl
adc
imul
jmp
add
sub
mov
bound
mov
std
gs
and
mov
and
in
rorb
in
jl
fwait
sbb
push
scas
jo
xchg
popa
flds
mov
or
pusha
hlt
popf
xor
push
sbb
add
int
xchg
lock
rclb
shlb
dec
or
je
loop
mov
imul
xchg
mov
cmp
jb
popf
or
cmp
mov
xor
inc
dec
xchg
lods
lret
mov
mov
xchg
ds
lea
mov
mov
jecxz
lock
outsl
hlt
scas
xor
add
and
aaa
shrb
mov
inc
sub
and
xor
decb
cmp
loop
adc
adc
mov
into
sbb
cmp
aam
orl
lahf
and
dec
lret
mov
pusha
mov
fidivrl
mov
push
cmp
imul
dec
mov
and
rcr
pop
jae
out
adc
hlt
lds
or
lea
andl
jmp
mov
add
imul
add
out
adc
jecxz
inc
xchg
rorb
insb
lea
sbb
mov
sub
pop
mov
aaa
push
pop
leave
dec
inc
sarb
nop
sbb
popf
dec
repnz
add
dec
repnz
cmp
add
addl
or
jne
cmp
insb
rorl
push
pusha
mov
xchg
nop
orl
rcr
dec
std
popf
mov
sbb
add
and
push
int3
cmp
and
js
lcall
rclb
inc
mov
jno
out
xchg
xor
arpl
repz
mov
and
lods
xor
lahf
dec
sarb
sub
xchg
pop
in
mov
outsb
sub
icebp
aaa
int3
jne
cltd
add
xor
test
adc
das
adc
push
pop
jle
ljmp
mov
imul
mov
enter
cmp
pop
dec
lret
sbb
lods
pop
int
mov
lahf
mov
mov
push
lahf
mov
imul
cmc
cs
in
filds
cmpsb
das
inc
add
cs
pop
test
sahf
orb
movl
mov
jo
dec
and
sub
sub
and
repnz
pop
into
or
popf
enter
add
mov
movsl
jns
jo
ficoml
pusha
dec
je
adc
cmp
or
and
push
push
arpl
shl
int3
mov
sub
rclb
or
mov
pop
movsb
xchg
inc
add
mov
fistl
icebp
xor
inc
sub
dec
cwtl
sub
scas
pop
sbb
cmp
xor
sti
push
lds
in
imul
daa
pop
nop
mov
push
mov
pop
and
out
and
mov
and
in
sbb
cmp
gs
jle
call
adc
xor
icebp
test
or
mov
sub
inc
pop
jns
and
mov
sbb
clc
jo
jbe
js
cwtl
bound
xor
xor
pop
fcoml
in
bnd
mov
movsb
imul
fcom
and
ret
and
sahf
inc
jb
or
cli
push
nop
ds
into
aas
push
or
notl
js
sbb
push
xchg
roll
lods
mov
lcall
inc
cmp
jecxz
mov
push
cmpsb
shlb
jns
sbb
or
ret
adc
clc
iret
das
aam
lret
clc
add
jb
mov
in
and
pop
es
mov
lcall
lea
ss
lods
sbb
outsl
shrb
pop
mov
out
xchg
fsubr
mov
dec
fimuls
jbe
ret
mov
sub
fstpt
sahf
sub
jecxz
mov
gs
leave
adc
aaa
xchg
lea
aam
insb
inc
js
push
lret
cli
pop
fsts
mov
bound
loope
shlb
mov
mov
cmp
stos
sub
popa
jbe
xchg
push
pop
adcb
xchg
jg
push
ffree
cmp
sub
lahf
mov
shlb
stos
xchg
pop
cwtl
add
push
aas
or
or
push
sub
test
clc
rorl
mov
push
mov
ss
in
or
xchg
xchg
xor
jae
xchg
filds
punpckhdq
fnstsw
fcom
subb
out
sbb
xor
leave
xchg
mov
mov
adc
pushf
xorb
push
sbb
pop
sbb
fstpl
lea
les
and
xchg
adc
enter
mov
jne
in
andb
rclb
jo
mov
rolb
xchg
sbb
jp
sbb
xchg
sbb
pminub
inc
adc
test
dec
sbb
cmp
test
fiadds
jne
rcl
test
jmp
and
push
test
ja
scas
mov
xchg
data16
insl
jno
mov
sbb
imul
or
pop
pusha
test
cmpb
sub
add
push
or
pop
test
sub
push
hlt
adc
rorl
dec
push
add
cmp
scas
iret
dec
or
ds
in
adc
aas
ret
pop
insl
rcrl
add
cltd
test
mov
subl
cmp
dec
les
cmp
into
nop
adc
pop
ss
or
dec
xchg
dec
adc
add
ficoms
cmp
scas
scas
iret
popf
aad
add
add
push
in
mov
push
mov
or
mov
addl
xchg
lods
xor
inc
sbb
mov
push
adc
or
ret
cmp
inc
scas
sbb
fldt
lret
test
leave
movsl
push
dec
int3
test
pop
pusha
mov
xor
inc
xchg
jg
arpl
fdivl
or
and
ret
push
ja
pop
jp
outsl
mov
inc
test
js
sbb
cmp
mov
in
xchg
mov
fiaddl
add
xchg
dec
loopne
dec
aam
xor
dec
ja
lock
push
add
es
lret
xor
cltd
aaa
jno
rorl
inc
pop
or
add
adc
int3
mov
mov
or
inc
pop
sbb
add
scas
jnp
sbb
in
fcoms
xchg
dec
arpl
movsl
test
mov
lret
xchg
push
ja
call
popf
mov
and
sarl
xadd
push
xchg
push
repz
imul
sub
inc
sbb
mov
lret
inc
jo
cmpb
fstps
sbb
hlt
out
call
xor
sub
adc
inc
and
je
leave
inc
xchg
xchg
sub
and
test
pop
cmp
cmp
xor
dec
mov
xor
arpl
lcall
adcl
push
lds
popa
or
aas
pop
cmp
mov
ret
jbe
push
roll
xchg
sub
jno
xor
pop
cmpsb
dec
mov
add
xor
in
imul
ds
dec
xlat
mulb
ds
lea
je
lcall
std
daa
xor
mov
cltd
push
subl
lret
add
push
push
fisttpl
mov
out
pop
dec
pop
mov
push
or
xor
mov
cmpb
repz
pushl
and
adc
mov
aaa
aad
adc
mov
dec
sub
adc
sbb
adc
inc
cmpsb
cmpsb
xchg
pop
test
sbb
pop
lahf
push
es
add
mov
loop
mov
sub
pop
or
sub
inc
mov
inc
pop
lods
xchg
adc
sbb
xchg
das
push
push
and
roll
and
or
mov
push
cmp
mov
sahf
adc
movaps
adc
cwtl
xor
pop
lea
push
xorl
dec
mov
xchg
int
mov
ss
test
cmpl
std
movsl
inc
mov
inc
inc
lods
sbb
xchg
andb
nop
repz
cli
pop
or
vpminub
inc
stos
xchg
xor
push
in
pop
mov
aaa
sub
or
out
frstor
out
fs
outsb
dec
out
pusha
xchg
fs
je
adc
pop
and
iret
jae
fucomp
daa
push
aam
ss
mov
adc
ljmp
mov
jb
xor
xor
fistps
sub
scas
jge
icebp
imul
or
cwtl
incl
push
push
add
adc
inc
pop
scas
sub
push
and
pop
scas
cmpsb
and
stc
xchg
movsb
scas
cltd
cmpsl
test
outsb
ja
ficomps
hlt
push
pusha
sub
mov
int
or
and
add
xchg
xchg
out
js
ret
das
stc
pop
or
and
into
bound
cltd
jno
jnp
in
cmp
daa
xchg
mov
out
mov
mov
xchg
nop
lods
jae
aam
xchg
ret
fistpl
jecxz
out
or
sbb
jge
cmp
xchg
jns
inc
dec
popa
xor
push
sarb
insl
mov
mov
mov
xchg
push
sbb
inc
and
add
loop
fbstp
sbb
jns
enter
flds
mov
or
or
test
xchg
pop
xchg
ret
push
cmpb
int3
cwtl
ljmp
dec
xchg
inc
adc
push
pop
adc
cmp
cmpsl
cltd
or
fiaddl
mov
or
and
das
add
daa
sbbb
add
iret
fistpll
push
mov
mov
cmp
lds
pop
fmull
sti
cmc
lcall
push
mov
and
lea
mov
loope
cmp
push
sahf
dec
pop
or
mov
sub
mov
rcll
stos
mov
lds
mov
pop
push
mov
data16
testb
mov
add
shrb
int
mov
push
sbb
adc
fildll
xchg
and
sub
jnp
lcall
mov
mov
xchg
cmc
ficoms
test
xchg
sub
inc
lea
mov
fcmovb
ret
cld
fcomps
sub
push
repz
pop
addl
mov
jg
sub
pop
sbb
pusha
imul
adc
stc
push
add
clc
mov
push
and
jl
call
push
jne
mov
popa
js
int3
test
push
jecxz
andb
shl
push
dec
enter
mov
mov
push
jle
es
push
inc
inc
int
ljmp
jb
dec
bound
jge
mov
shlb
inc
arpl
daa
fs
adc
xchg
repnz
fisubs
and
sub
leave
xor
sbb
mov
sti
scas
addb
add
inc
scas
push
mov
sbb
lret
mov
or
pop
jns
movsl
mov
mov
loop
addr16
push
mov
shlb
repz
lock
pusha
or
shll
jae
adc
add
popf
inc
add
enter
add
loop
rcll
and
rcl
sbb
mov
dec
dec
aaa
and
out
jecxz
loope
mov
push
dec
cmp
add
mov
mov
cmp
add
mov
jl
add
mov
les
push
lds
jns
js
adc
xor
cmp
sub
sub
adc
mov
inc
dec
and
mov
lods
orl
xchg
mov
cmp
mov
shll
jge
in
push
sub
jg
movsl
add
or
add
inc
out
fistl
daa
test
lds
fldl
cmp
push
pop
pop
push
shlb
xor
add
fisubl
lahf
test
enter
jb
inc
dec
inc
aad
inc
mov
push
add
aad
ret
jno
decl
fiadds
pop
stc
shlb
cmpsl
test
int
hlt
insl
inc
push
pop
pop
add
xor
clc
sub
cmpsl
insb
lds
daa
aas
push
cld
int
sahf
movsb
and
inc
test
push
hlt
arpl
or
aam
inc
dec
lahf
mov
pop
mov
add
icebp
xor
aam
pop
adc
mov
jb
out
in
mov
js
outsb
and
and
push
mov
mov
push
repz
in
icebp
and
pushf
adcl
sub
mov
and
adc
jle
add
repnz
imul
cmpsb
xchg
scas
push
repnz
and
mov
push
sub
cld
add
mov
jmp
lock
mov
mov
icebp
mov
mov
mov
pusha
pop
add
push
and
push
ficoml
adc
repnz
mov
mov
xor
mov
ret
pop
or
mov
mov
dec
popf
or
cmpb
ret
jmp
shl
fisttpll
mov
cmp
cwtl
test
or
roll
xchg
lock
sub
inc
adc
out
sahf
repnz
add
inc
lret
add
in
xor
push
sub
lds
dec
sub
lea
mov
icebp
sub
push
inc
add
sbbl
aad
sarb
je
daa
outsl
xchg
leave
mov
lods
aad
stc
mov
adc
adc
cmp
jmp
or
push
repnz
hlt
mov
and
pushf
add
and
leave
pop
mov
stos
cli
in
loope
fisubl
jg
sbb
fwait
cmp
stos
dec
scas
shr
inc
add
imul
inc
xchg
lock
lret
stos
lods
je
mov
mov
pop
sbb
mov
addr16
push
pop
adc
ds
cmc
mov
nop
pusha
xchg
sbb
orl
push
aad
mov
fsubrl
inc
arpl
pmulhuw
mov
loopne
dec
out
inc
jp
mov
sub
sub
xchg
popf
mov
adc
and
jo
adc
jns
xor
jbe
jne
adc
pop
push
sbb
sti
jo
push
mov
dec
add
sub
sbbl
in
repnz
out
dec
xchg
in
call
push
loopne
jmp
outsl
rcll
popa
pop
popa
in
loop
xchg
cli
cmp
pop
nop
out
push
lcall
cmp
push
cmp
int
inc
sbb
fsubl
jne
imul
gs
lods
mov
sahf
mov
xor
das
jb
jnp
int
loopne
mov
rclb
sbb
add
or
fisubrl
sbbl
push
pop
push
or
push
mov
mov
leave
xor
adc
in
addr16
nop
mov
inc
cltd
adc
lods
cmp
jno
out
mov
mov
mov
loopne
dec
mov
push
pop
data16
imul
cwtl
cs
popf
es
in
ret
je
mov
lods
ja
fadds
jbe
jb
push
lret
mov
out
shl
mov
pop
push
and
cmc
mov
xchg
inc
mov
fs
push
mov
aam
mov
push
push
cwtl
shlb
pop
mov
push
xor
dec
lret
sti
aam
cld
sarb
iret
int3
and
or
dec
mov
xchg
js
daa
bound
jo
aaa
lock
pop
xchg
xor
or
imul
jns
mov
mov
aam
sub
lret
jecxz
adc
sbb
mov
add
adc
xor
dec
out
test
hlt
in
xchg
pop
pop
mov
and
sub
stc
movsb
pushf
in
xchg
rcrl
xor
push
enter
repz
popf
shld
xor
xor
clc
mov
test
xchg
lds
lret
cmp
pop
lret
inc
add
repz
gs
rclb
inc
add
cmpsl
je
jge
icebp
dec
scas
js
test
lret
aas
adcl
push
test
int3
push
inc
xor
loop
cwtl
mov
loop
push
mov
sub
and
movsl
jno
push
divps
fiaddl
rorl
stc
mov
int3
aas
insb
add
mov
jl
pusha
adc
daa
cmpsl
arpl
cwtl
cmp
jg
mov
and
xchg
pushf
push
xor
aas
aad
jno
gs
mov
lds
pop
icebp
outsb
adc
mov
gs
cwtl
mov
inc
jp
mov
inc
out
iret
inc
pushl
popa
xchg
in
lea
lahf
fbld
mov
sub
push
fmuls
test
push
sbb
pushf
push
cld
nop
inc
and
sub
outsb
fcompl
inc
lcall
adc
outsb
dec
inc
in
or
lahf
lods
add
jno
xchg
dec
das
dec
mov
jno
dec
pop
sub
jmp
fsubrs
mov
mov
xor
sbb
mov
mov
inc
and
in
or
jmp
mov
xchg
rol
data16
or
mov
inc
insl
mov
and
loop
and
inc
push
clc
and
es
dec
add
mov
into
iret
sub
addr16
pop
mov
mov
jno
mov
sarl
lock
inc
das
ret
popa
pusha
shrl
fwait
ja
gs
mov
push
or
push
xchg
jo
and
push
xchg
loop
in
jno
jle,pt
mov
sahf
adc
aas
and
mov
fists
inc
insb
jbe
xchg
xor
and
sbb
cli
push
jecxz
and
inc
lcall
cmpsb
adc
out
pop
push
sahf
out
shlb
andl
cmc
xchg
pop
lds
imulb
sbb
rcr
and
loop
inc
pop
mov
pop
adc
adc
pushf
sub
sbb
mov
ret
cld
repz
jge
loopne
push
popf
mov
out
jne
add
jecxz
ljmp
xchg
rorl
loope
adc
cmc
pop
add
cmpsb
fcmovbe
in
lods
dec
and
lea
call
cmp
lds
in
sub
pop
jnp
testb
pop
subl
inc
lret
cmp
mov
sbb
push
fsubrs
sbb
mov
xorl
mov
test
xchg
ret
arpl
sbb
and
add
lcall
push
jns
jl
pop
in
vpaddusw
cld
sub
sbb
cmpsl
push
call
or
mov
push
and
jp
jecxz
mov
pop
push
inc
insb
andb
mov
das
sbbb
xor
mov
add
push
lods
add
xor
ds
movsb
movsb
test
sti
push
sbb
pop
cld
inc
and
sub
jle
icebp
into
sahf
mov
out
push
xchg
mov
pop
xor
ljmp
or
jmp
cwtl
andl
dec
out
sub
xchg
mov
lahf
test
adc
jno
adc
mov
popa
ja
cmp
mov
jmp
push
sahf
xchg
mov
test
xor
or
cwtl
rclb
mov
jle
popa
pop
adcb
lahf
xchg
dec
cltd
adc
imul
fadd
mov
fistps
stc
sbb
sub
lret
inc
test
and
mov
adc
inc
or
mov
gs
repz
das
xor
add
pop
sbb
dec
sub
xchg
lahf
ljmp
xchg
or
dec
sarb
and
aad
sub
xchg
dec
out
loop
mov
jecxz
dec
mov
fs
mov
shrb
ret
cmp
fcoms
psubusb
and
mov
insb
int
loopne
test
sbb
jecxz
pop
scas
arpl
mov
inc
sahf
add
add
shll
mov
pop
lods
inc
bound
shl
sub
push
roll
fcom
scas
pop
sub
fisttpll
test
fdiv
or
shll
clc
aam
push
divl
jmp
sbb
cmp
mov
or
mov
ja
ss
stc
in
mov
aas
into
sub
repz
aad
pusha
mov
adc
xor
pusha
xor
lret
add
mov
xchg
add
lods
xchg
data16
xchg
dec
xchg
in
mov
pop
rcrl
sarb
ret
mov
lock
inc
and
rolb
out
and
loopne
and
or
xor
jne
nop
pop
iret
and
pop
leave
dec
push
push
push
cmc
aaa
sub
andl
inc
in
leave
in
push
and
rorl
mov
adc
mov
jle
pop
dec
lods
dec
repz
cltd
fidivrl
sub
in
mov
cmp
mov
fiadds
pop
jne
xchg
inc
movsb
aas
sbb
pop
push
ret
lods
data16
sahf
mov
jo
xor
push
adc
faddl
push
repz
xlat
cli
shrb
shll
hlt
dec
sbb
scas
adc
pop
cmp
mov
pop
aas
stos
fstl
pop
outsl
and
jae
dec
js
aad
scas
pop
loopne
cmp
jg
inc
lock
jne
js
shlb
fchs
stos
testl
dec
vmread
movsb
test
xor
lret
mov
mov
lea
rcrl
sbb
jl
flds
aad
cmpsl
call
icebp
xchg
add
add
cmp
mov
ss
fcoml
and
inc
fidivrs
cmp
sub
push
push
sbbl
sub
lahf
popf
adcb
hlt
aas
xor
lret
leave
stos
std
das
mov
sbb
pushf
push
push
in
cmp
addl
inc
push
inc
cmc
add
mov
rol
fprem
sbb
inc
and
jge
rcr
bound
lock
aaa
aam
dec
loop
outsb
mov
lock
ror
xor
scas
out
shrb
mov
adc
cltd
aas
sub
sbb
cwtl
or
mov
and
outsl
pop
sbb
xchg
sbb
enter
js
or
int3
mov
mov
pop
loopne
leave
xor
fcom
adc
stos
jns
loopne
in
mov
insb
subb
jns
mov
xchg
and
xor
fnstsw
popa
xor
add
mov
neg
mov
ljmp
push
negl
mov
iret
mov
lods
jmp
mov
andl
lret
inc
outsb
shl
insb
repz
ja
add
and
inc
and
stos
xor
cmp
fwait
push
ret
repnz
ljmp
jle
fcompl
add
xor
cli
pop
outsl
clc
ret
jo
push
rolb
jbe
repnz
sbb
dec
jns
insl
mov
jecxz
mov
fbld
inc
push
sbb
mov
mov
push
mov
je
rcrl
je
jne
std
add
or
pop
cmp
push
fcomps
icebp
leave
mov
test
sub
pop
test
insb
ficompl
mov
cmpsl
xchg
jmp
xchg
lds
push
shll
cltd
movsb
mov
aas
xor
ss
iret
cwtl
cmpsb
mov
and
fldenv
jge
mov
aad
cmp
sbb
sub
sbb
enter
nop
popf
lds
test
cld
and
fs
push
nop
rcrb
js
cmc
insl
dec
inc
push
mov
sar
popf
xor
sbb
mov
lods
cmp
pop
jo
ljmp
push
leave
or
jle
fisttps
arpl
lock
mov
pusha
shll
jmp
inc
pop
adc
jmp
leave
push
push
inc
mov
inc
les
dec
fisubs
push
cmp
cs
scas
add
dec
je
movsl
pop
push
and
out
repnz
ret
gs
loop
inc
popa
enter
cltd
movsb
mov
mov
mov
int
xor
int
or
sbb
test
jmp
mov
pop
mov
pop
hlt
sub
ljmp
dec
fisttps
or
pop
adc
inc
sbb
daa
dec
mov
bnd
cmp
loopne
rcrl
sbb
push
xor
sti
jne
mov
and
or
lods
out
cli
pusha
jp
das
imul
cs
ror
adc
mov
rclb
jbe
dec
pop
mov
mov
inc
lahf
scas
test
pop
ljmp
xchg
cmp
inc
mov
add
sub
stos
mov
cmp
fldl
lahf
mov
sub
or
and
cmp
mov
xchg
and
fimuls
inc
imul
jecxz
jle
cmp
test
jo
es
fdivr
fidivs
and
sbbl
or
push
mov
fsub
pop
imul
pop
jnp
pop
arpl
and
inc
sub
cli
and
sbb
clc
ja
sub
push
jmp
sbb
addr16
xor
shl
mov
sbb
or
sub
inc
push
out
jae
loope
jae
adc
jb
push
add
sub
repnz
dec
mov
lock
int
inc
in
inc
enter
aas
xchg
out
idivb
scas
pop
or
ljmp
xchg
jbe
roll
lods
push
and
xor
fistpll
pop
mov
or
std
mov
int
xor
mov
sbb
mov
popf
jp
clc
lds
push
add
lods
and
rorl
aad
and
jp
sub
push
movsl
add
mov
mov
lcall
add
fisubrs
rcll
es
mov
dec
sbb
xor
adc
mov
adc
je
in
mov
and
lds
dec
sbb
mov
dec
jl
nop
jns
mov
jne
in
cmp
inc
les
out
fdiv
aad
push
sbb
int3
into
icebp
sbb
lock
imul
mov
sub
rcl
add
xchg
subl
sub
xor
pop
dec
cltd
rcrb
cmp
call
mov
adc
push
mov
pop
test
dec
stos
iret
mov
cmc
rcll
hlt
mov
cmp
out
mov
adc
lret
clc
jl
xor
ret
mov
stos
push
in
mov
cltd
jne
leave
cmp
jns
jae
and
inc
push
outsl
scas
jl
and
mov
dec
pop
in
jl
into
pop
adc
mov
add
imul
test
outsb
mov
inc
cltd
adc
repnz
cs
sbb
out
inc
jle
pop
ficoms
dec
inc
dec
push
mov
outsb
mov
xorb
sbb
popf
icebp
loop,pt
sub
lods
sub
and
fdivrs
mov
xchg
jbe
lahf
push
jp
adc
call
jnp
mov
add
add
stos
imul
test
cmp
adc
mov
or
rol
xchg
or
mov
stc
mov
dec
lahf
sub
dec
mov
ss
pop
das
roll
push
aad
pop
rclb
jbe
add
add
dec
std
inc
pop
pop
imul
ss
stc
or
int3
rol
inc
mov
adc
jmp
push
outsl
movsl
dec
repnz
nop
in
aas
push
xor
jno
or
and
xchg
test
fcompl
lock
xor
mov
and
sti
sahf
pop
in
sti
div
loope
sub
js
cmp
or
inc
sti
bound
fstpl
int
xchg
inc
cld
push
sub
rcrb
lahf
mov
out
movsl
mov
push
xor
dec
add
mov
ds
loop
outsl
icebp
paddq
ds
in
inc
lods
icebp
adc
mov
push
pop
inc
fwait
xchg
loopne
lret
push
cmp
test
cli
jbe
and
mov
sbb
lret
jg
pop
bnd
inc
xor
xchg
jno
arpl
adc
mov
dec
sub
inc
fcomps
clc
lahf
rcr
inc
mov
cwtl
mov
jbe
mov
js
jg
sbb
mov
mov
pop
add
mov
sbbl
shrb
add
inc
mov
rolb
call
mov
and
pop
jg
push
lock
push
mov
rcrl
push
sub
ret
int3
test
xchg
push
xlat
in
cmpl
pop
push
in
in
test
insb
pop
pop
pop
cmp
js
cld
orb
inc
lret
xchg
mov
push
imul
add
fidivs
and
mov
inc
fistl
repz
jecxz
push
and
cmc
std
in
and
lahf
mov
inc
xor
mov
cmp
mov
insl
icebp
in
or
ret
push
mov
mov
test
sahf
cmp
sahf
pop
ret
xor
pop
daa
dec
stos
add
dec
sub
addl
stos
and
or
xor
mov
pop
xor
jnp
imul
inc
push
jb
xchg
push
rol
ja
dec
push
and
pop
and
clc
mov
jge
sub
cltd
sarl
and
stos
daa
or
hlt
push
sbb
adc
inc
or
inc
xor
pop
aam
dec
jg
je
insl
inc
lods
mov
lock
sarl
mov
imul
es
jge
fptan
out
dec
jp
jb
push
fwait
cmp
stos
in
pop
or
out
loope
inc
inc
js
xchg
adc
shll
popf
mov
jb
lea
pop
inc
pop
aas
mov
pop
popa
rol
addl
xor
cld
adc
roll
and
cmp
lcall
add
inc
mov
rcr
mov
rcrb
je
dec
and
sub
popf
xchg
es
sub
icebp
cwtl
inc
mov
adc
cmpsl
aaa
movsl
mov
popa
sbb
cli
loope
push
xor
shl
pop
mov
mov
and
pop
pop
loope
nop
outsl
movsb
lods
ljmp
roll
or
out
add
mov
mov
sub
pushl
nop
cmpsl
shrb
rorb
push
jb
cld
cld
sub
add
add
mov
fsts
mov
jl
add
push
jnp
xchg
mov
loop
mov
jl
test
stos
pusha
mov
imul
jg
cld
or
mov
and
and
jae
push
imull
push
mov
dec
rcrb
shrl
pop
and
jle
std
sbb
fcoms
pushf
clc
sub
xchg
lahf
inc
inc
mov
jp
or
mov
add
xor
xor
cmpsb
push
loop
lar
xchg
jmp
sbb
mov
outsb
sbb
test
adc
enter
ss
add
daa
out
add
push
test
pop
sarl
int
aam
xor
mov
dec
xor
out
xchg
or
out
mov
adc
adc
push
daa
or
pop
pop
cmp
push
inc
adcb
cmp
test
loopne
mov
adc
or
push
sbb
xchg
dec
rorb
mov
repnz
mov
fdivrl
xchg
lods
adc
js
rorl
icebp
les
std
loop
xchg
or
repnz
ret
add
push
xchg
cltd
xor
movsb
or
hlt
sarb
pop
stc
xchg
push
add
out
cmpsl
orb
js
jno
test
xor
loop
cmp
pop
inc
in
fmull
popa
jmp
ss
adc
js
loope
fidivl
test
fdivrl
lods
test
nop
push
ret
jle
mov
pop
in
stos
loope
adc
cmp
fnstenv
lret
xchg
ret
call
push
lahf
sub
aam
popa
add
lds
data16
inc
sbb
xor
xchg
mov
sbb
adc
movsb
imul
jnp
rol
adc
or
dec
cmc
lods
cmpsl
mov
popl
sbb
xor
fbstp
les
add
pop
dec
ret
and
sbb
lods
cwtl
fld
add
cmc
movsb
enter
mov
and
adc
xchg
mov
and
sbb
clc
adc
xor
adc
sub
mov
xchg
jns
jmp
lret
movsb
mov
push
push
or
and
add
xor
push
sub
mov
jmp
xchg
sbbb
mov
xchg
push
mov
shlb
push
movsl
arpl
aam
stos
jg
inc
sbb
jmp
jge
test
sub
pop
cwtl
jle
lcall
xchg
frstor
sbb
push
mov
orl
aaa
mov
test
sahf
mov
pop
xor
gs
leave
push
outsl
cmp
pop
idivl
stos
outsl
testb
xor
mov
lods
sti
std
stos
aad
push
in
cmp
sub
movsl
in
adc
lret
mov
adc
mov
sbb
push
arpl
xchg
pop
jb
push
scas
cwtl
pop
jp
lret
pop
or
dec
sbb
insb
pop
fadd
mov
pop
test
addb
adc
movsl
bound
mov
pop
enter
pop
roll
mov
and
push
mov
add
jns
inc
test
filds
out
cld
push
mov
ret
xchg
nop
pop
xchg
in
xchg
xor
cs
add
or
sub
pop
in
enter
mov
mov
pop
push
add
inc
sub
out
popa
inc
add
popf
int
inc
repz
push
enter
add
dec
pop
mov
adc
inc
push
je
cmpsb
cmp
jo
les
lret
icebp
mov
push
add
mov
sarl
int3
pop
jecxz
pop
mov
push
push
inc
adc
pop
rcr
stc
out
fsubs
nop
or
inc
jl
mov
pop
test
pushf
pop
mov
popa
or
and
mov
jg
dec
sub
xor
pop
call
mov
xor
sub
shll
sub
sbb
add
jnp
pop
cmp
dec
loope
adc
test
cltd
xchg
imul
push
js
popa
adc
push
add
aad
lea
xor
xchg
xor
sysexit
cs
jne
je
push
outsb
sbb
sarl
aad
cmp
push
aad
outsb
rcr
mov
mov
add
push
xor
xchg
xor
lods
xor
stos
pusha
mov
cmp
rcl
scas
sbb
inc
or
dec
sub
jge
push
xchg
xchg
mov
mov
fnstcw
outsb
pop
mov
inc
jno
int3
dec
push
fldenv
adc
fists
or
fdivrp
out
dec
add
std
mov
int3
out
mov
cmpsl
mov
pop
or
mov
pop
dec
lock
pop
fsubrs
pop
sub
shlb
lret
mov
lret
pop
ss
push
sbb
add
jg
lcall
pop
cmpb
rcll
mov
lock
jno
dec
sbb
ret
std
add
jg
popf
icebp
mov
inc
addr16
push
in
mov
inc
mov
loope
mov
scas
inc
outsl
in
enter
repnz
pop
push
add
push
push
arpl
push
push
cmc
scas
xor
fisubs
stos
mov
adc
scas
adc
fcomps
xchg
adc
fdiv
sti
popa
push
mov
push
aas
mov
cmp
and
inc
inc
dec
push
pop
mov
bound
loopne
shlb
ret
or
xchg
rcl
pusha
dec
ja
icebp
jmp
push
and
dec
and
aas
cs
pop
cltd
mov
adc
mov
subl
xchg
mov
stc
dec
jge
fsubs
sahf
cmpsb
cltd
out
adc
dec
fisttpl
pop
outsl
cmp
fwait
mov
aad
pop
fs
ds
cltd
inc
imul
mov
cs
add
imul
cmp
decb
sbb
rolb
icebp
push
cmp
adc
or
sbb
and
lahf
scas
mov
jmp
jmp
flds
idivb
adc
mov
mov
adc
inc
push
pop
fdiv
mov
mov
dec
and
mov
iret
pop
nop
stc
movsl
arpl
push
add
mov
mov
clc
daa
in
xchg
int3
adc
shrb
jbe
mov
pop
inc
inc
or
cmp
push
bnd
orl
mov
insl
imul
push
cmp
lahf
rcl
cmp
xchg
push
pop
pop
and
mov
and
enter
into
or
pop
sarb
mov
les
sbb
sti
inc
nop
push
add
jb
dec
sub
mov
pop
jb
cmp
inc
pop
xchg
outsb
or
movsl
xor
sub
and
retw
and
jns
mov
xor
xchg
movsb
lea
inc
mov
test
mov
flds
int3
popf
xchg
repnz
push
fists
adc
push
add
add
push
mov
push
and
xorb
add
mov
les
or
dec
pop
mov
daa
jb
mov
ret
push
movsb
xor
testl
cwtl
mov
or
mov
sub
fbld
int
pop
inc
ds
outsl
mov
jg
adc
test
int
mov
enter
js
nop
lods
rol
and
inc
loopne
pop
cld
fildll
inc
sti
aad
xor
fstps
xlat
sbb
iret
inc
inc
mov
subl
inc
xchg
test
mov
repz
int3
out
daa
pusha
or
or
push
addr16
popf
jno
call
mov
pop
adc
jb
sahf
outsb
movsl
dec
xor
sub
add
gs
in
sub
js
xor
test
mov
or
sub
in
out
pop
testb
stos
sbb
push
outsl
xlat
inc
mov
cwtl
imul
xor
push
adc
xchg
bnd
jo
dec
gs
stos
sbb
jp
jnp
lcall
push
outsb
leavew
mov
xor
test
add
cs
mov
bts
fsubl
cmp
icebp
outsb
dec
and
clc
xchg
subb
jmp
inc
repz
std
add
rorl
and
jle
lds
rcrb
mov
jge
ljmp
adc
cmp
push
xor
xchg
sbb
insb
mov
jne
inc
pop
jl
mov
sbb
pmaxub
mov
movsl
mov
xchg
nop
mov
fldenv
xchg
fwait
notl
cwtl
xchg
or
and
push
popf
cmc
popf
jmp
inc
fcoml
cltd
jbe
inc
xor
dec
push
cmp
popf
fcoms
stos
push
int3
sahf
shll
cmpsb
xchg
sbb
xchg
scas
jle
hlt
int3
push
ret
mov
bound
fwait
lods
or
adc
lods
inc
pushl
inc
scas
lods
mov
and
mov
xor
cli
scas
mov
js
popf
add
jns
hlt
out
or
cmp
inc
adc
leave
stos
sbb
popa
mov
jnp
jbe
or
dec
cmp
sub
subl
bound
stc
and
lock
and
mov
pop
mov
fs
pop
aam
repnz
push
add
xor
and
inc
xchg
xor
mov
outsl
nop
inc
cld
jne
jbe
mov
aaa
jle
test
outsb
stos
shr
les
test
popa
rorb
add
jmp
loop
dec
test
fidivl
add
test
outsl
adc
push
xorb
adc
das
repnz
mov
gs
sub
and
xchg
jge
adc
inc
mov
xchg
ss
push
imul
inc
fcoms
cs
push
test
mov
sbb
add
gs
roll
out
imul
push
loope
sbb
adc
mov
in
mov
xchg
fmulp
xlat
or
sub
push
addl
enter
add
ret
sub
scas
imul
sbb
idivb
sbbl
mov
mov
or
adc
call
fadds
call
and
cld
int3
pop
sbb
pusha
or
dec
or
and
popf
sbb
clc
or
inc
icebp
lcall
and
xchg
dec
inc
nop
jae
out
inc
jge
aas
rcrb
mov
repz
mov
pop
pop
stc
hlt
rorl
add
fimuls
aas
jne
test
push
sub
add
or
popf
xor
ljmp
cli
xchg
cmp
in
inc
gs
incl
cmp
mov
mov
cwtl
add
orl
nop
int3
push
fxch
mov
movl
ret
mov
mov
insb
adc
fs
rcrb
adc
mov
adc
loope
inc
lahf
int3
sbb
sbb
pop
mov
cld
inc
cs
xor
test
jecxz
pop
aas
xchg
xor
subb
pop
adc
mov
jp
or
push
hlt
mov
dec
add
sbb
js
bound
pop
leave
aas
and
jo
mov
out
sub
les
push
xchg
or
xchg
stos
adc
addr16
test
mov
jmp
and
mov
repz
xor
lret
in
dec
cli
dec
xchg
dec
xor
or
out
push
pushf
mov
inc
jae
or
cmc
loop
test
xor
mov
or
rclb
pop
std
mov
inc
les
sbb
jb
js
mov
dec
inc
jl
xchg
aas
pop
divl
fbld
jnp
sub
stc
rcll
cmp
stos
jbe
mov
inc
dec
cmp
mov
and
adc
mov
push
push
and
and
andb
cmpb
xchg
enter
inc
push
jp
in
int
cmp
xchg
int3
mov
push
sub
js
mov
push
das
int3
adc
add
addl
bound
xchg
xor
test
addb
jns
imul
rolb
xorl
rcrb
js
lods
ffreep
jae
aam
cmpsl
add
xchg
mov
aas
mov
xchg
sub
jmp
pop
dec
mov
sub
in
inc
push
cltd
dec
push
and
inc
adcl
and
inc
pop
pop
out
mov
cwtl
repz
and
rcrl
xchg
mov
movsb
stos
cli
pop
push
mov
test
mov
aam
mov
mov
adcl
call
mov
mov
pop
je
hlt
arpl
test
and
and
push
into
or
inc
push
movq
cld
push
push
outsl
fdivr
stc
pop
push
cltd
jo
ror
xor
cmp
dec
fnstenvs
push
mov
sbbb
in
pushf
jge
dec
and
mov
xor
ret
test
repz
push
test
pop
pop
add
pop
xor
cwtl
ljmp
xchg
aaa
xor
inc
fldl
mov
in
js
aas
popf
push
dec
cmpsl
cld
es
fnstenv
test
pop
insb
lds
add
xchg
scas
aam
sub
test
push
sub
sbb
mov
pinsrw
adc
xor
ds
mov
sbb
clc
pop
cmp
daa
xor
test
sbb
sbb
out
xor
sub
bound
jge
clc
push
stc
inc
je
in
dec
or
push
mov
add
out
cmp
sub
pop
xchg
imul
xor
cmp
mov
lock
fwait
lea
inc
cmp
decb
jg
mov
test
into
pop
rclb
sbb
xchg
scas
push
out
ret
popa
mov
and
sub
sahf
je
push
int
and
add
sub
or
mov
xor
and
adc
repnz
insb
inc
loope
rorl
fs
and
cmp
inc
andl
sbb
inc
jl
rcll
lock
inc
jo
push
mov
mov
loop
jl
ja
mov
sub
inc
test
inc
inc
lock
mov
ss
dec
push
adc
lea
jb
adc
push
pop
dec
pop
out
cld
push
test
aas
xor
or
xor
lret
push
fdecstp
loope
push
and
lds
xor
jo
jne
mov
add
cmp
loope
sub
xchg
enter
shrl
pop
mov
leave
sub
jle
cmp
out
jl
aad
test
push
mov
aad
incb
mov
or
and
add
pop
jg
loop
rcll
repz
mov
inc
jge
inc
dec
jg
push
xchg
test
adc
je
jle
cmpsb
inc
inc
dec
je
scas
imul
aam
xor
push
lret
sbb
notb
fisttpl
pushf
add
dec
xchg
sub
into
push
push
dec
pushf
xlat
pop
and
mov
ret
sub
lret
shr
cmpsl
and
sbb
mov
cld
mov
pop
push
pop
je
enter
push
adc
std
into
je
movsb
pusha
xchg
clc
outsb
xchg
mov
into
xchg
lock
stc
outsb
sbb
xchg
xchg
dec
arpl
cmpsl
pop
jne
test
sbb
clc
add
pusha
inc
test
aad
and
in
fwait
insb
mov
sub
push
inc
add
sarb
shrb
pushf
testl
pop
dec
bsf
cmp
mov
or
sti
gs
cmpsl
xlat
jle
add
pop
xor
xor
jmp
inc
inc
and
adc
mov
xor
pop
ret
out
fimuls
mov
test
pop
fs
push
popa
lcall
xchg
dec
popl
jb
and
pop
sub
inc
jae
add
enter
jo
mov
loopne
test
inc
lahf
lcall
or
pushf
sub
ret
decb
das
cmpsb
sbb
or
aas
cmp
movsb
cltd
push
xchg
push
cmp
mov
sbb
adc
mov
std
loop
out
add
popa
inc
and
or
cli
jne
lock
cltd
icebp
mov
ret
jl
mov
mov
lret
mov
xor
call
pop
in
pop
test
rorl
xor
lods
dec
xor
xchg
pop
js
cmp
fwait
negb
jb
inc
ds
addr16
and
push
es
push
pop
pusha
cmpsl
xchg
int
lock
or
jbe
hlt
pushf
mov
add
addr16
push
jl
push
ja
fxch
int3
jge
inc
sbb
jecxz
and
repz
mov
inc
push
add
mov
imul
xchg
jmp
ss
inc
dec
jle
and
mov
adc
outsb
xchg
add
jno
clc
sahf
inc
inc
mov
arpl
mov
inc
out
adc
js
jb
xor
inc
rolb
push
mov
repnz
mov
sbb
adc
mov
pop
scas
pop
xor
lret
sub
cltd
inc
xchg
jo
cld
arpl
mov
and
xchg
js
cmp
mov
mov
je
pop
fistps
xor
inc
in
inc
push
add
pop
daa
sbbl
fsubrl
insl
mov
cmp
jp
bound
sbb
mov
loopne
fwait
push
sbb
mov
sbb
test
in
les
xchg
inc
mov
aam
iret
cmp
xor
push
or
xor
push
leave
xor
sbb
sbb
cld
mov
jnp
adc
add
lods
and
jno
and
xchg
frstor
inc
mov
push
or
push
push
sbb
imul
ret
xchg
aas
loop
in
xchg
jbe
out
fcom
cltd
push
cli
jne
pop
mov
pusha
pop
adc
inc
sub
cmpsl
inc
sub
lcall
icebp
rcrb
ret
mov
cmp
faddl
push
and
clc
pop
inc
jp
in
pop
push
in
aad
int3
or
stos
mov
pop
mov
lcall
pushf
inc
push
xor
push
mov
push
add
xchg
movsl
inc
cmp
jno
jno
and
pop
sbb
fwait
es
lret
sub
fcomi
dec
sbb
dec
stos
in
add
xor
and
jne
repnz
hlt
xchg
push
ss
jmp
mov
cmp
and
inc
dec
cwtl
xchg
and
mov
push
push
fxch
mov
fnstenv
das
push
mov
movsl
test
sub
and
xchg
mov
xor
adc
rol
push
adc
inc
ss
inc
and
rcrl
or
sbb
xchg
mov
adc
cmp
mov
pop
inc
add
mov
orl
xchg
sub
dec
sub
repnz
sahf
cmp
rorl
cli
nop
ljmp
or
hlt
cmpsb
test
add
mov
lcall
std
jg
movsb
inc
push
pop
inc
lahf
mov
fld
adc
push
pop
add
adc
jge
pop
in
pushf
adc
mov
popa
test
lods
mov
mov
cld
loope
xchg
fcmovu
lock
cli
xor
inc
xor
lods
mov
and
and
cltd
js
add
jno
enter
add
lods
cltd
rclb
sub
rcl
out
sbb
cmc
loopne
test
inc
adcl
outsb
push
and
les
xchg
xor
sub
push
ljmp
dec
and
pop
shrb
movsb
xor
adcl
stos
loopne
pop
iret
in
mov
or
rclb
cmp
cmpsl
enter
mov
jecxz
pop
mov
leave
in
sbb
and
pop
mov
fmull
adcl
lea
mov
mov
outsl
mov
mov
jg
ret
mov
cmp
sbb
aam
lods
out
mov
xchg
xchg
push
sub
out
stc
adcb
mov
xchg
dec
mov
insl
stos
pop
push
or
sti
xlat
add
arpl
aad
popf
sahf
hlt
push
adc
hlt
aas
jno
test
test
cmc
hlt
add
pop
std
push
dec
loope
test
sahf
aam
xor
lods
shrl
mov
lods
es
inc
mov
insb
xor
jbe
jmp
mov
adc
mov
cmc
pop
mov
loop
pop
dec
test
mov
sbb
cli
scas
mov
jmp
lret
adc
sbb
push
fadds
mov
cmp
sarb
sub
push
jl
fs
mov
scas
sub
hlt
xorl
push
movsl
cmp
push
mov
ror
jns
std
faddl
push
enter
xchg
or
aad
enter
imul
in
lcall
repnz
cwtl
lcall
mov
pop
and
dec
fidivrl
jmp
sub
cltd
push
inc
jb
cmpsb
xor
jnp
fildll
test
scas
and
test
gs
jl
pusha
or
insl
out
pop
cmp
scas
out
xchg
outsl
mov
gs
iret
insb
xor
and
xor
shr
xor
xchg
jb
mov
cmp
mov
cmc
rorl
mov
test
mov
add
mov
mov
xor
sub
scas
cmpsb
pop
insl
in
xchg
jge
mov
xor
mov
in
push
dec
push
jb
mov
xchg
test
call
push
adc
and
scas
jno
daa
into
xor
mov
shlb
sbb
lahf
jae
mov
push
insl
sbbl
scas
ljmp
test
jp
xor
pop
or
or
scas
cmp
mov
mov
xlat
leave
addl
movsl
and
cmp
jmp
ljmp
stos
nop
movsb
fimuls
orb
jb
sbb
lods
lock
or
xor
mov
and
icebp
cmp
cltd
lock
and
sbb
pop
push
enter
sbb
out
cmp
sti
outsb
jecxz
inc
sub
xchg
bound
mov
jmp
and
insb
fisubs
insb
inc
cmp
pusha
test
loop
pushf
xor
imul
sti
adc
inc
cmpsl
lea
add
dec
sbb
push
sbb
in
add
mov
sbbb
test
xchg
lcall
mov
in
xor
mov
dec
sub
hlt
pusha
loopne
sub
stos
std
dec
or
push
repnz
add
aam
leave
sbb
outsb
shll
mov
imul
mov
stos
in
adc
xchg
dec
xorb
adc
mov
and
sahf
int
int
stc
mov
nop
mov
push
bound
aas
push
push
pop
push
mov
cmp
jns
mov
push
mov
push
shlb
lret
leave
dec
adc
das
adc
or
inc
test
mov
rorb
testl
xchg
in
push
cltd
adc
xor
jbe
enter
mov
kxnorw
cmp
cld
adc
jge
imul
pop
or
loop
sbb
ret
aad
mov
lahf
push
fisttpl
les
das
fs
scas
jmp
ja
cld
dec
test
adc
add
test
add
ljmp
jge
iret
mov
add
pop
call
rorl
cmpsl
sub
or
popa
std
leave
pop
push
js
cmpb
push
dec
inc
add
les
pop
jae
std
leave
sub
addr16
and
push
dec
push
in
push
jne
adc
dec
pushf
notl
sahf
dec
and
xchg
mov
lock
inc
dec
or
sub
inc
or
jge
add
sbb
lds
mov
call
xchg
and
mov
jecxz
sbb
or
cmp
aam
mov
test
fidivrl
std
movsb
pop
cmp
xchg
xchg
or
xchg
andl
and
nop
cmp
pop
ficompl
sub
arpl
mov
push
stc
xor
xor
push
orl
cltd
inc
jb
pop
in
mov
movsb
xor
pop
test
xchg
inc
dec
push
sub
pop
mov
inc
cmp
jae
xchg
divb
lcall
mov
mov
lret
mov
sbb
pop
clc
sahf
int
jge
cld
mov
push
mov
mov
xor
jb
push
daa
add
repz
inc
int
jo
jno
xor
xchg
add
je
mov
mov
das
pop
inc
cmp
test
rcr
or
mov
fdiv
cs
insb
push
mov
pop
pop
clc
inc
mov
jns
mov
out
push
xchg
pop
cmp
jno
sbb
push
jg
nop
sarl
cmp
das
out
in
pop
sub
mov
addr16
movsb
out
inc
test
sbb
pop
repz
addl
in
loope
mov
adc
xchg
jecxz
std
scas
enter
mov
cmpsb
cltd
inc
into
clc
xchg
dec
jne
xor
mov
mov
movsl
sbb
repnz
clc
sbb
loopne
int
movsl
dec
pop
mov
dec
cli
adc
dec
dec
adc
loop
out
scas
pop
xchg
icebp
mov
jl
dec
xchg
and
push
or
cmp
sbb
gs
cmp
rcr
and
aaa
ss
or
mov
popf
adc
dec
dec
jecxz
sub
insb
jg
mov
xchg
into
jge
xchg
jo
sbbl
shrl
fadds
mov
movsb
push
mov
push
inc
scas
outsl
dec
fdivl
clc
xor
outsl
cmpsl
int3
orl
inc
pop
in
sahf
arpl
or
nop
mov
cs
hlt
mov
shr
in
fadds
icebp
fsubl
pop
cmpsl
rolb
pushf
mov
mov
pusha
subl
mov
xor
test
adc
push
repz
mov
ret
pusha
aam
cli
cmp
push
and
mov
inc
lock
sub
jae
inc
out
inc
shll
mov
fiadds
inc
loop
mov
sti
ret
adc
test
xor
dec
out
sub
dec
pusha
ret
cmp
cmpl
das
mov
mov
mov
xchg
cmp
insl
dec
rclb
enter
mov
ret
mov
pop
outsb
adc
push
xchg
out
or
pop
and
dec
cmp
pop
loop
mov
movsl
mov
lds
into
cmpl
in
inc
nop
xchg
dec
push
adc
jle
mov
mov
lcall
push
dec
mov
mov
aam
mov
mov
jp
shl
and
lcall
hlt
test
pop
aad
int
jno
cld
jbe
xorb
outsb
in
adc
jae
and
repz
push
popa
cmc
test
shll
mov
pushf
bound
xor
data16
sbb
je
aad
loope
dec
in
outsl
outsl
test
lahf
cmc
pusha
inc
sbb
jnp
cmp
aad
mov
xor
dec
imul
fldenv
mov
xor
scas
cmp
sub
incb
cmp
inc
gs
xchg
jl
fisubrs
xchg
mov
adc
or
push
add
popa
hlt
test
mov
mov
mov
movsl
lcall
push
sub
mov
sbb
clc
mov
fldl
xor
xlat
mov
jbe
loop
ret
ljmp
mov
adc
fsubs
negb
cmp
mov
cmc
jo
add
fldl
dec
adc
mov
jo
dec
mov
movsl
lea
ret
adc
jecxz
lcall
arpl
pushf
push
or
dec
leave
mov
dec
cmpsl
mov
pop
inc
mov
aam
lea
les
and
jge
inc
je
cmp
test
and
es
sub
in
cmp
mov
ret
xchg
lods
ror
jns
fwait
push
cmp
sub
add
out
addr16
inc
adc
xchg
cmpsb
push
hlt
add
lock
movsl
xor
fisttps
daa
jg
mov
mov
lahf
pop
and
mov
mov
jmp
mov
jg
roll
popf
mov
fnstenv
mov
call
ljmp
jl
inc
cmp
popa
mov
xor
inc
push
jno
out
addr16
add
test
outsb
push
mov
lea
popf
inc
enter
jecxz
jnp
ret
in
inc
movsb
pop
adc
test
mov
mov
push
jmp
rcrl
xchg
jp
xchg
jae
add
dec
mov
incb
mov
orl
fst
adc
cmp
popa
shlb
cmpsb
xchg
cwtl
add
nop
add
cmp
shrb
lds
xchg
adc
or
fcomp
xlat
lret
repnz
sbb
push
push
mov
pop
inc
xchg
xchg
test
xor
pop
xor
in
scas
hlt
jle
mov
adc
and
loopne
mov
out
lods
outsb
add
adc
sbb
orb
adc
sbb
xchg
and
sub
in
add
scas
push
adc
mov
inc
dec
mov
push
cltd
movsl
xor
or
mov
std
dec
aad
inc
add
stc
sbb
mov
stc
popf
shll
mov
xchg
test
test
xor
add
aas
mov
mov
cmp
add
cwtl
jmp
and
and
sub
push
les
jle
stos
inc
outsl
rcrl
daa
imul
pusha
movsl
and
inc
jb
daa
dec
mov
es
loopne
bound
addr16
sub
pushf
dec
pop
clc
into
sti
leave
shrl
sbb
inc
push
or
outsb
loop
jecxz
cmp
mov
cmpsl
dec
jnp
dec
repz
jp
mov
fs
insl
sbb
out
in
push
push
out
bswap
mov
fsts
pop
inc
lret
pushf
adc
pop
stos
rolb
or
call
mov
cwtl
aaa
loope
shrb
jb
sbb
push
fcoms
push
leave
push
icebp
clc
adc
push
repnz
add
divb
mov
inc
and
xor
pop
xor
cmp
cmpsl
pop
push
dec
and
jl
rorb
cmp
xchg
adc
lock
out
push
pop
lods
out
je
mov
lods
add
cmp
jne
shll
pop
lcall
inc
movsb
sub
pop
lret
roll
inc
rolb
inc
mov
pop
cmc
and
fbld
int3
xchg
insb
add
push
imul
imul
cmpl
lea
nop
mov
inc
test
int3
sbb
push
ss
add
xchg
add
cltd
or
out
mov
lods
mov
xlat
lods
mov
arpl
inc
ret
fwait
xchg
ret
xchg
nop
test
stc
push
push
jecxz
push
js
std
inc
adc
mov
mov
lcall
stc
jge
sub
rolb
push
push
pop
lods
fcoms
andl
push
sti
cwtl
imul
notl
les
sarl
insb
sbb
jnp
subl
stc
jmp
jge
ja
xchg
push
aas
mov
hlt
andl
dec
mov
sub
loop
fildl
xor
mov
sub
xor
popf
inc
xor
mov
into
dec
jb
in
sbb
jmp
test
push
aaa
enter
test
inc
mov
fimuls
pop
or
andb
mov
jp
push
movsl
movsb
dec
inc
stc
cmp
lds
push
mov
je
inc
and
nop
pop
je
sub
sbb
fisubrl
sbb
scas
repz
xchg
add
mov
mov
mov
mov
cmp
clc
jecxz
jle
jmp
hlt
xor
mov
dec
jbe
fcoms
test
inc
popf
cmp
call
in
daa
int
aam
xchg
xchg
mov
push
adc
pusha
je
mov
pusha
fildl
fcoml
mov
push
mov
movsb
mov
ret
xor
or
push
cmp
add
cwtl
jo
ds
cmpl
jnp
xchg
cmp
pushf
dec
ss
dec
add
test
lahf
ds
xlat
out
fstpt
adc
imul
dec
xchg
push
andb
xchg
scas
out
outsb
hlt
inc
out
loopne
jle
mov
cltd
push
or
rolb
adc
rcl
dec
push
or
mov
das
xorb
mov
int3
loopne
inc
stos
push
mov
or
dec
mov
aam
enter
push
and
inc
xchg
sbb
fucom
add
lock
aad
add
push
std
inc
pop
sbb
movsl
test
mov
insl
rol
call
scas
or
sarl
lret
pop
jnp
sub
aad
xor
inc
and
nop
mov
pop
push
push
sub
dec
dec
add
leave
cmp
je
adc
add
xchg
shlb
dec
cli
lahf
in
mov
frstor
xchg
rep
dec
aad
outsb
movsb
ror
jecxz
xchg
or
mov
xor
jl
push
cmc
add
int
rcrl
xchg
int
jno
aam
push
lock
pop
or
bound
aad
imul
in
stc
lds
jbe
dec
test
pushf
clc
xor
lea
in
rorl
repnz
xor
mov
ja
roll
dec
idiv
inc
xor
push
adc
xor
inc
test
lds
add
jg
cli
sbbl
xchg
cmp
add
hlt
inc
jo
fwait
xlat
xlat
cmc
pusha
mov
and
popf
nop
sub
cwtl
ret
in
jge
xor
lahf
sbb
xor
test
dec
push
in
andb
nop
mov
or
sbb
inc
movsb
mov
cld
aad
push
pop
movsl
mov
pop
pop
or
push
and
adc
dec
loope
enter
push
cld
push
dec
or
cmc
cmp
sub
inc
outsb
push
shll
insl
pop
mov
cmp
jl
xor
cmp
push
mov
cli
jecxz
add
jnp
leave
inc
pop
mov
push
sub
sub
movb
dec
lods
out
lcall
dec
and
test
jge
xor
add
inc
inc
and
pusha
xchg
scas
daa
mov
ss
sbbb
cmpb
push
xchg
add
mov
inc
mov
inc
xchg
lods
or
adc
in
mov
in
and
jns
and
inc
fisubrs
ret
adc
adc
movsl
xchg
pop
insb
jge
add
lods
mov
mov
gs
mov
leave
and
mov
cli
mov
popl
jnp
lods
pop
or
rorb
jne
mov
sbb
sbb
clc
lcall
into
mov
adc
or
test
sbb
push
mov
jno
test
add
mov
cmp
cmp
das
or
scas
aam
lods
loopne
fsts
sbb
cmp
outsb
aaa
push
addr16
sub
xchg
pop
int3
jmp
out
xlat
cmp
test
adc
dec
sbb
xlat
mov
pop
loopne
in
mov
pop
dec
fadds
or
mov
lods
je
mov
loope
call
xor
sbb
imul
shrb
xor
cltd
inc
mov
clc
fsubl
mov
add
cmp
scas
sub
je
movsb
sub
aaa
shr
sbb
lods
xor
in
mov
xchg
jmp
dec
adc
cmc
hlt
push
add
mov
std
out
jnp
popa
enter
pop
das
inc
outsb
outsb
add
mov
hlt
xor
pop
mov
jb
hlt
pop
mov
outsb
dec
inc
icebp
dec
in
xor
cmp
pop
jnp
pop
dec
mov
enter
and
aaa
fsubr
inc
flds
insb
and
aad
addr16
in
xchg
jbe
add
mov
mov
ljmp
fmull
jmp
dec
cmp
test
push
jge
fs
cmpsl
dec
adc
sbb
mov
xor
xor
mov
repnz
hlt
add
movswl
push
loop
hlt
clc
or
in
sbb
mov
shlb
mov
arpl
mov
jp
mov
inc
jno
xor
dec
lods
mov
or
adcl
icebp
cmp
jl
popf
int
hlt
notb
test
daa
or
push
mov
xchg
lods
lds
je
mov
dec
roll
out
and
mov
push
mov
lret
jnp
out
push
int
jle
imul
cmpsb
mov
loop
fstpl
inc
enter
and
inc
fsubl
sub
sub
jge
inc
mov
movsb
mov
scas
mov
movsl
pop
unpcklps
lcall
jb
cwtl
jo
inc
push
in
mov
les
cld
mov
ds
xor
stos
push
jmp
and
je
add
inc
out
dec
push
cmp
sbbb
inc
xor
cmp
loop
lahf
xor
gs
cwtl
inc
sub
push
mov
xchg
or
rcrl
fisttpll
xor
rorl
dec
lea
jae
mov
push
dec
xchg
pop
fldt
push
push
adc
stc
mov
fcoms
inc
dec
pop
cltd
jae
fidivs
mov
mov
xchg
mov
jbe
sbb
aas
mov
jg
popa
and
mov
sub
je
mul
sti
fidivs
ja
adc
jno
add
inc
dec
xchg
xor
jo
popa
dec
inc
imul
lahf
xchg
add
sbb
repz
push
pop
fsts
cli
pop
sub
cwtl
out
rcr
mov
xlat
dec
mov
mov
jo
jbe
sub
cs
fsts
mov
iret
lcall
clc
test
lea
cmpsl
sub
repnz
pop
xorb
lds
mov
test
rolb
mov
sti
sub
inc
lods
and
pop
rcrb
stos
xchg
les
adc
mov
ret
pop
mov
roll
inc
sub
movsl
jmp
mov
movl
mov
jae
xchg
in
adc
mov
icebp
gs
xor
das
sub
pop
dec
push
or
mov
and
push
mov
aaa
add
pop
jle
fadd
loop
setb
stos
in
and
lcall
in
xor
dec
mov
std
inc
xor
scas
mov
dec
sub
inc
inc
mov
cmpb
jno
test
mov
xor
inc
es
mov
ret
add
xor
push
pushf
scas
mov
jb
movsl
xchg
js
sub
fucomip
iret
mov
jno
mov
inc
mov
mov
cmp
xlat
push
pop
or
mov
lods
loope
cmp
mov
shr
and
sbb
adc
das
mov
dec
inc
adc
mov
jle
lock
pop
sub
cltd
popf
xchg
rorl
add
dec
imul
adc
icebp
pop
mov
add
push
jl
outsl
mov
add
mov
shr
shrb
jl
jmp
scas
aaa
imulb
mov
dec
mov
adc
imul
insb
cltd
movsl
xor
cmpl
sub
jg
and
adc
pushf
rcrb
pop
cmpsl
inc
adc
je
test
dec
and
dec
loop
xor
insb
bound
test
fildll
out
xchg
out
iret
popa
mov
fucom
pop
mov
cmp
rorb
cld
push
mov
insb
mov
insl
addb
in
jno
add
adc
sti
add
cmpsl
out
ficoml
ficompl
dec
les
xchg
hlt
in
sub
inc
in
aam
clc
fimuls
stos
lea
loop
and
jb
jmp
inc
cmp
mov
mov
ljmp
cs
cwtl
and
dec
mov
aam
loope
mov
and
xlat
sub
pop
mov
rcr
cmp
and
andl
xlat
mov
dec
std
adc
push
sub
inc
in
je
cmp
hlt
jecxz
les
les
mov
xor
cmp
xorb
repz
and
rcrb
aam
test
ret
mov
adc
cmp
addl
mov
inc
lock
or
lret
int
xchg
mov
jge
dec
push
add
cltd
cmp
insl
stc
mov
sub
or
xlat
xchg
lods
push
inc
sbb
int
sbb
mov
test
lret
lcall
jns
in
or
xor
jnp
push
sti
cmp
popa
pop
and
mov
pop
fwait
ds
push
daa
xchg
mov
inc
xchg
dec
and
int3
push
sbb
push
inc
or
push
cmp
cs
fsubr
and
popf
test
lret
sahf
xchg
pop
jno
test
test
and
sarb
imul
push
jbe
xchg
cmc
inc
mov
dec
push
sbb
inc
fmuls
daa
cli
adcl
cli
repz
mov
in
enter
test
inc
adc
push
inc
mov
sahf
int
pop
int
add
mov
xchg
push
es
cmp
add
dec
jno
inc
push
jne
jmp
or
inc
pop
js
add
adc
out
icebp
push
adc
aas
mov
jne
jp
std
cli
das
mov
pop
dec
dec
clc
lock
xchg
fsubrl
xchg
xchg
mov
cmp
dec
mov
sti
push
inc
or
insb
pop
mov
popa
jl
pop
sbb
or
jno
sub
dec
and
push
enter
mov
inc
lods
or
decb
pusha
or
leave
mov
stos
pop
in
dec
xor
flds
lds
adc
push
push
fnstenv
or
ret
fwait
dec
je
jns
sbb
test
repz
imul
dec
mov
lods
cmp
bound
ret
cwtl
mov
ret
jns
movsb
add
add
enter
in
mov
jb
dec
push
add
inc
mov
fwait
repz
lods
adc
loop
sahf
dec
add
loope
xlat
cmp
mov
fmull
pop
adc
jmp
in
adc
push
dec
out
pop
mov
add
sbb
jge
jns
xchg
movsb
rcl
cmp
dec
dec
xchg
cmc
pop
mov
mov
out
in
inc
lret
test
stos
lret
bound
or
in
subl
fsubs
into
xor
pop
pop
in
push
mov
sub
lods
stc
mov
mov
icebp
popf
test
es
adc
mov
sti
repnz
jns
outsb
gs
popf
enter
aad
ljmp
adc
xchg
lock
mov
loopne
mov
cmp
imul
pop
test
dec
test
imul
sbb
mov
ret
and
mov
xor
jg
shlb
xor
into
call
jmp
push
roll
push
test
negb
mov
lcall
je
add
jg
shll
add
pop
mov
and
leave
cmp
out
ret
xchg
aas
adc
cmp
mov
xor
push
adc
test
out
fsub
sub
daa
mov
pop
mov
mov
sbb
test
gs
mov
arpl
xchg
in
inc
xchg
mov
ret
or
out
cmc
movsb
mov
adc
cld
mov
add
adc
adcb
or
cwtl
loopne
push
push
fdivrs
adc
sub
inc
idivl
mov
test
insl
cmp
jnp
leave
sbb
add
mov
and
push
icebp
xchg
mov
in
adc
push
sub
cmpsb
xor
jae
aas
ljmp
push
mov
loop
in
sub
addl
fucom
mov
ss
arpl
adc
popf
cmpsl
xor
rcrl
cmp
mov
rorl
cmp
pop
imul
je
aad
cmp
daa
xchg
sbb
sub
xlat
lds
sbb
orl
stos
scas
and
jmp
inc
imulb
nop
enter
xor
sbb
inc
xor
dec
pop
cwtl
sub
fmulp
xor
movsl
push
loopne
mov
jle
mov
pop
jo
aam
inc
push
push
pop
push
decb
cmp
xchg
sti
lock
leave
dec
mov
insl
js
in
addl
xor
loopne,pn
pop
and
add
cltd
into
icebp
jns
pop
out
lock
test
xor
or
mov
jg
push
icebp
clc
jne
dec
shlb
notb
roll
mov
mov
lea
add
mov
cmc
and
test
aam
movsl
outsl
inc
xor
std
xchg
jbe
push
js
pop
jmp
sub
popa
imul
test
sbb
mov
push
aam
hlt
cmp
jno
pusha
and
lcall
jp
sub
mov
loope
adc
fs
pop
adc
cmpsb
mov
insl
leave
jg
lock
popw
and
dec
test
and
fsubrl
orb
cmp
jae
mov
sbb
jo
pop
lds
subb
imul
inc
stc
xor
imul
xchg
repz
psrlw
dec
xor
cmp
jno
mov
add
mov
lods
cmp
inc
jnp
sbb
inc
ljmp
shrl
xchg
rcl
pop
shll
ss
adc
mov
push
mov
imul
sbb
adc
inc
jnp
bound
adc
out
and
jne
jno
jge
jno
lods
sub
push
leave
and
in
and
and
test
mov
in
adc
int
icebp
push
xlat
dec
sbb
sbbb
out
sub
cltd
call
mov
popf
adc
setge
dec
adc
subl
ficompl
cmp
add
and
dec
shufps
mov
dec
movsl
jg
mov
adcb
test
in
push
xchg
fdivs
add
inc
sti
add
clc
xchg
pop
leave
sub
jmp
gs
xchg
test
and
andb
stos
movsb
mov
cmpsb
sub
pusha
mov
xchg
lods
aam
mov
and
inc
je
inc
or
addl
push
cmp
xor
jno
cltd
je
in
movmskps
enter
ss
test
cld
adc
cmp
push
jg
adcl
sarl
xor
mov
imul
pop
cli
jp
or
movsl
aad
aas
mov
shll
dec
gs
mov
xchg
pop
shrl
cwtl
lds
jno
rcl
cmp
mov
mov
jno
push
lock
mov
data16
enter
out
outsb
mov
mov
dec
call
test
cmpsb
int3
push
nop
sahf
out
mov
enter
push
lds
inc
popf
insl
pop
sbbl
sub
pop
or
and
subl
and
fwait
sub
cltd
jle
cmp
fs
int3
xchg
add
insb
addb
sbb
push
lods
ret
arpl
daa
cmc
adc
ljmp
mov
es
ss
inc
add
jo
mov
into
jecxz
sbb
jo
nop
pusha
jb
test
fidivs
aam
rclb
cmp
xor
mov
popf
icebp
cmp
lods
xchg
dec
and
stc
sarb
push
ficompl
adc
pop
xchg
out
dec
int3
das
xchg
test
inc
and
mov
stos
jnp
out
jnp
int
divb
aas
adc
and
aas
scas
xchg
pushf
cmp
dec
out
es
xchg
mov
push
sbb
sbb
pop
or
adc
xchg
add
push
cld
and
or
and
push
out
sbb
mull
fists
mov
aam
wrmsr
dec
pop
jb
and
sbb
mov
shrb
fadds
bound
sbb
xchg
ss
add
jae
mov
mov
inc
or
fwait
adc
mov
dec
and
out
xor
add
aaa
push
popf
sub
adc
xchg
inc
ja
mov
pop
lea
or
movb
inc
jbe
fdivrl
cli
mov
jmp
shl
data16
add
sbb
jbe
fstps
inc
xor
xor
or
cmp
inc
cmp
xchg
push
mov
dec
enter
fidivrs
mov
js
loope
add
inc
mov
fimuls
add
adc
xchg
jge
aad
or
testl
ljmp
adc
and
jno
lcall
popa
xchg
xchg
shl
mov
idivl
xor
call
push
js
jbe
mov
mov
mov
popa
dec
cmpsb
inc
scas
cmp
xchg
mov
pop
mov
out
pusha
ret
mov
psraw
clc
or
inc
cmp
adc
pop
push
xor
adc
outsb
jmp
in
int3
mov
fucom
call
mov
dec
push
cmp
clc
subb
in
cmpsl
or
in
arpl
fbstp
or
in
ss
mov
jns
ds
dec
pop
mov
or
sahf
rorb
sbb
pop
frstor
mov
sbb
outsb
cmpsl
out
cmp
pop
mov
jecxz
subb
or
inc
and
push
jns
lret
xorl
push
call
jle
call
adc
shll
or
jg
call
dec
push
adc
int3
adc
add
sbb
daa
mov
sub
sbb
in
or
add
mov
inc
call
movsl
jge
jecxz
sbbl
xor
jmp
dec
mov
vmovntps
cs
lcall
xorl
push
loope
push
xor
sbb
movsl
xchg
insb
movsb
loopne
adc
push
mov
fisubrs
and
jnp
mov
push
xchg
dec
flds
insl
in
sbbb
sub
fnsave
ds
xor
jne
xchg
xchg
dec
rcrb
xchg
xor
jle
mov
cmp
and
jg
lds
pop
mov
jno
pop
rcll
push
xor
xchg
mov
cmc
add
je
lods
or
pop
dec
test
cltd
mov
icebp
mov
leave
icebp
test
int
sbb
adc
repnz
rorl
push
xchg
imul
popl
sbb
mov
and
gs
adc
bound
xchg
aad
hlt
fildl
shl
aam
repz
sarl
mov
sarl
adc
mull
jnp
sub
scas
adc
xor
daa
sbb
shrb
adc
cli
pop
add
loop
xchg
pushf
add
shr
dec
xor
or
mov
adc
int3
inc
incl
jns
inc
inc
mov
dec
xor
lahf
stos
jae
jns
mov
div
xchg
movsl
sbb
cmp
ret
mov
mov
enter
shrb
shl
cs
std
sbb
cs
pop
sar
sbb
xchg
inc
je
cmc
or
or
inc
push
fldcw
xor
sbb
bound
xchg
neg
iret
mov
jns
cmp
popf
out
mov
mov
and
push
stos
pop
cmc
adc
scas
and
ljmp
imull
cmp
push
or
insl
or
arpl
sub
inc
xchg
cmp
xchg
iret
nop
sub
rcll
sarl
fsubr
dec
mov
cwtl
add
sahf
add
dec
popa
mov
inc
ret
sbb
test
pushf
adc
cs
daa
pop
fwait
jb
cmp
and
push
js
rol
lods
fnstcw
push
xchg
xor
stos
jno
cmp
add
mov
pop
mov
xchg
int
mov
adc
xor
inc
lock
push
push
iret
or
jae
xor
mov
adc
repnz
mov
lret
mov
ljmp
imul
adc
mov
dec
dec
inc
dec
push
bound
pushf
vpxor
sub
lock
cmp
xchg
mov
arpl
jbe
add
xor
inc
scas
aaa
or
mov
pop
jo
or
push
adc
sbb
sbb
adc
clc
js
outsl
aam
bound
lods
and
jg
inc
and
rcr
and
inc
jnp
adc
mov
movsb
adc
cmp
rorb
pop
xor
cmpsb
mov
test
mov
gs
inc
in
mov
pusha
cmp
js
stos
jmp
jge
cmp
sub
jp
and
xchg
mov
repnz
popf
test
mov
int
dec
inc
and
adcl
xchg
xchg
enter
jge
int3
mov
inc
vpsubsb
flds
mov
and
dec
test
xor
test
dec
test
movsl
adcl
int3
mov
loopne
and
lcall
test
mov
inc
jmp
in
bound
mov
dec
and
add
prefetchnta
lds
mov
mov
mov
push
push
movsl
sti
adc
pop
imul
push
adc
or
push
push
std
cmp
call
and
ret
stos
push
js
sahf
pop
mov
out
adc
clc
test
jecxz
cmp
sbb
jmp
add
in
adc
data16
sbb
jge
movsl
pop
pusha
add
pusha
ds
pop
je
sub
in
int
sbb
and
packsswb
push
pop
je
sbb
inc
push
int
adc
fisubrl
and
dec
cli
scas
and
pop
or
push
inc
stc
fs
ljmp
push
inc
xchg
adc
int
pop
ds
imul
lahf
rcrb
lock
cltd
test
test
or
shlb
sbb
iret
mov
lret
cmp
mov
mov
push
push
mov
popa
xor
adc
lahf
out
in
push
sbb
outsl
pop
add
filds
fidivl
sub
mov
pop
test
imul
push
dec
sahf
push
imul
mov
or
loop
insb
sbb
cmc
mov
shrb
imul
adc
push
into
scas
or
push
inc
outsl
pop
mov
push
jg
push
inc
lcall
mov
sbb
aaa
aaa
lods
adc
andb
aad
jb
adc
add
jg
push
sub
pop
iret
xor
mov
mov
data16
push
jge
scas
pop
in
ds
mov
add
pusha
push
pushf
push
aas
mov
jl
cltd
adc
push
stos
xchg
inc
ror
cmp
cmc
pushf
cltd
ja
jp
popf
nop
add
lret
sub
sub
ljmp
outsl
sbb
mov
jo
push
lods
mov
loope
and
mov
popa
mov
mov
mov
jg
jg
rorl
rcl
mov
mov
sti
dec
loopne
mov
push
pop
dec
mov
les
ja
push
scas
jbe
cmp
and
inc
xor
cmp
outsb
or
jmp
inc
popa
xorb
xor
adc
sub
and
pop
jbe
pop
dec
insl
imul
or
pop
vcvtsi2sd
xchg
push
sbb
adc
xchg
inc
movsl
ds
dec
insb
cli
cmp
cmp
mov
pop
xchg
sbb
mov
adc
test
push
mov
mov
mov
lods
test
movb
out
fs
ret
mov
iret
xchg
rol
js
mov
clc
dec
mov
bound
out
xorb
int3
dec
inc
mov
xlat
repnz
shlb
adc
rclb
push
dec
pop
mov
inc
dec
sub
orb
xchg
pop
pusha
clc
cmp
push
jb
push
and
lock
adc
cs
arpl
fs
mov
movsl
test
incl
sub
jne
int
out
push
adc
mov
inc
stos
ja
mov
adc
and
jge
push
loop
pop
cli
dec
inc
lods
stos
jne
adc
mov
sarb
add
adc
lock
lods
mov
roll
les
lods
xor
jecxz
jne
add
insb
dec
ficoml
mov
mov
movsb
popa
dec
sbb
mov
mov
dec
jb
pop
jp
xor
fcmovne
pushf
test
ret
push
lea
je
mov
es
and
xor
xchg
pop
dec
shl
scas
cmpsb
mov
sub
xorl
jb
or
es
mov
dec
pop
mov
cs
test
inc
jo
dec
mov
gs
iret
outsl
cmc
repz
mov
sbb
roll
pop
mov
lods
mov
movsl
jmp
in
js
mov
cmp
inc
jle
sbb
fcompl
cld
push
fsubp
fmulp
inc
pop
ss
call
aaa
push
and
rcll
lods
push
mov
les
mov
add
test
loopne
in
icebp
movsl
inc
push
jno
out
adc
cmpsb
out
cmpsl
mov
out
sub
bound
pop
jb
shlb
pop
ret
xchg
or
rclb
push
xor
inc
fmull
lods
roll
jle
cli
dec
andb
sub
stc
xchg
mov
aam
mov
mov
mov
sub
lcall
xor
mov
sub
sbb
push
inc
or
mov
test
lods
das
fdivrs
inc
movsb
sbb
loopne
scas
in
xchg
int3
dec
mov
sbb
cld
insb
sub
xor
xchg
ror
mov
mov
lret
shll
jle
adc
pop
daa
lock
sti
test
test
lods
adc
popf
jne
ljmp
imul
fiadds
push
stc
xchg
xsaves
jle
mov
imul
xlat
xchg
negb
xchg
push
push
daa
insb
add
fstpl
jb
push
pushf
repz
mov
addr16
inc
nop
sub
imul
in
jns
popa
inc
orb
xchg
and
push
cltd
and
adcb
mov
mov
test
jle
shrl
sbb
inc
out
mov
push
or
sti
stc
mov
pop
dec
push
sub
push
cld
rcrl
and
dec
aad
adc
icebp
in
sbb
fstps
mov
repnz
push
xor
push
add
pop
jmp
and
inc
pop
inc
repz
mov
lcall
push
xor
into
mov
lahf
push
dec
or
lcall
inc
push
inc
insl
ja
lock
dec
jge
pusha
push
xchg
jecxz
cmp
and
test
lret
sbb
xor
dec
fists
out
cs
fcom
xlat
mov
dec
inc
xor
sub
push
adc
mov
and
adcb
pushf
mov
push
in
cwtl
cmp
fwait
cmp
cmp
daa
pop
mov
dec
lea
adc
xlat
adc
pop
mov
sahf
inc
adc
fs
add
adc
repz
xchg
push
jae
xchg
adc
lea
or
scas
xor
xor
xchg
xor
push
push
orl
sub
pop
ret
cmp
test
movsb
test
fistpl
push
jbe
dec
dec
mov
bound
jl
push
and
rcr
mov
mov
jbe
xchg
adc
mov
shll
sbb
add
dec
mov
imull
les
sbb
or
test
lods
inc
mov
imul
iret
xchg
dec
icebp
sub
xchg
mov
enter
in
mov
scas
add
popa
push
in
aam
adc
out
dec
xor
inc
mov
in
pop
xor
lods
jne
je
sub
out
lcall
inc
xor
hlt
loopne
sub
stos
or
inc
or
mov
lea
adcl
shlb
cmp
mov
daa
sbb
stc
adc
jns
mov
inc
adc
fwait
add
mov
adc
inc
mov
dec
shll
int
add
mov
and
jno
ret
jp
rorl
xchg
inc
shr
or
xor
sbb
sbb
jg
add
pop
mov
pop
inc
repnz
xor
iret
and
lds
lret
and
mov
dec
mov
pushf
xor
add
xchg
jne,pn
mov
arpl
push
les
frstor
in
pushf
sub
test
jnp
xchg
adc
sbb
movb
jg
lahf
ds
cmp
es
mov
push
xor
and
sbb
dec
and
xor
and
aas
jle
adc
mov
dec
mov
mov
mov
add
nop
jge
out
lods
jmp
pop
ret
inc
cmp
add
adcl
dec
or
and
add
ret
pop
mov
xor
sbb
jmp
fisubrl
lock
leave
sbb
jne
push
lea
loopne
icebp
dec
in
jp
popa
shlb
xchg
inc
sbb
das
ret
pusha
mov
clc
sbbl
jae
mov
fwait
pop
push
sbb
int
lock
out
repz
mov
bswap
xor
xor
pushf
shlb
sbb
mov
and
shll
pop
push
stc
cmp
sub
pop
icebp
jns
je
fstp
xchg
pop
add
jo
add
pop
fcoml
adc
fstps
lods
mov
scas
push
mov
mov
test
dec
or
cmp
mov
sbb
les
pop
cwtl
in
pop
ret
mov
cmpsl
adc
sarl
sub
sbb
jl
in
or
cmpsb
stc
xor
fwait
ret
jne
xor
cld
fdecstp
cltd
add
bound
push
xchg
sbbl
mov
and
dec
push
addr16
pop
mulb
gs
aaa
or
dec
je
push
inc
test
add
xor
aas
mov
popl
push
outsb
cli
mov
xchg
pop
or
daa
add
mov
dec
sarl
xor
loopne
test
jmp
jmp
dec
cmp
push
or
jbe
dec
sbb
xchg
mov
or
pushf
sbb
cmpsl
icebp
mov
aam
stos
and
fidivrl
xor
fadd
mov
push
add
sti
lahf
lds
js
int3
mov
or
into
mov
rorl
mov
mov
inc
movb
adc
jbe
sub
jge
dec
or
outsb
test
and
aam
xor
and
sub
dec
lods
adc
xor
xor
mov
rolb
and
lods
je
adc
jp
in
and
aas
xor
jno
or
mov
adc
adc
out
in
fxch
dec
aaa
movsb
cltd
jecxz
movsl
out
testb
mov
mov
adcl
test
push
insb
push
jge
fsubs
mov
fwait
loop
cld
xchg
out
sahf
dec
adc
adc
orl
jo
mov
xor
insl
andl
inc
outsb
or
cmp
sub
ja
push
jmp
adc
loop
orl
add
outsl
stos
dec
inc
mov
aas
mov
push
faddl
and
and
jecxz
scas
cmp
mov
xchg
stos
fcoml
mov
and
scas
in
icebp
cltd
sbb
fstpl
push
sbbb
sub
mov
sbb
in
mov
push
xlat
push
shl
mov
mov
std
jb
xchg
xor
cmp
push
mov
test
out
orb
push
cwtl
hlt
lods
adcl
push
lods
and
shl
popf
mov
jne
dec
shll
cmp
pop
outsl
inc
xchg
call
in
mov
fstps
and
cld
mov
xor
jbe
pop
call
and
dec
rolb
cmc
data16
test
adc
adc
pop
mov
setns
and
test
fisubl
pop
insl
and
out
loopne
imulb
ljmp
mov
inc
lea
cmp
ret
and
mov
push
or
sub
loope
shrl
mov
aas
cmc
jno
mov
sbbb
pop
add
jbe
xchg
aaa
clc
sub
test
lret
cmpsl
jecxz
adc
rolb
and
mov
shrb
cld
popa
adc
inc
out
dec
in
adc
or
testl
arpl
cli
ds
jnp
dec
xchg
and
mov
and
pushf
cltd
or
movsl
xchg
inc
call
sub
imul
sub
aam
xchg
mov
loopne
sub
fldl
dec
rcr
mov
enter
jge
mov
or
cmpsl
sub
cmp
push
jne
add
and
jno
mov
cltd
xchg
mov
stos
sti
fucomp
popf
dec
sub
cmp
cmp
sub
add
aad
sarb
sahf
xchg
popf
push
cmp
test
jle
pusha
add
dec
inc
dec
and
fs
pop
jne
rorl
lahf
pop
ret
icebp
orl
dec
fmull
xorb
sbb
inc
imul
dec
test
dec
cld
repnz
dec
imul
adc
adc
lret
inc
adc
ds
xor
push
pop
dec
popa
push
sbb
xlat
mov
and
loopne
call
dec
xor
jg
je
or
or
sarb
shl
xor
push
pop
mov
inc
es
cld
or
test
and
into
shll
imul
xor
jp
dec
jnp
push
or
sbbb
js
xor
popa
or
inc
std
cmp
cli
fnstenv
push
js
cltd
lock
outsl
dec
cmp
xor
test
push
dec
sahf
adc
push
movnti
push
ret
cs
fwait
or
cld
add
inc
adc
or
cmp
lret
sahf
push
mov
or
adc
add
lds
push
call
ret
cltd
pop
fists
adc
inc
lds
inc
xor
stos
enter
jle
add
mov
mov
push
call
insl
mov
add
and
add
cmc
sarb
test
iret
mov
in
pop
pusha
adcb
loop
lock
lock
insl
and
lock
mov
adc
push
cmc
mov
jmp
and
loop
test
add
vmread
aam
cmp
push
imul
xor
mov
loope
mov
mov
and
sahf
mov
push
aam
mov
lock
lds
insl
scas
xor
rcl
cmp
push
orb
cmp
cld
imul
shll
scas
rcrb
sbb
ja
or
add
fcompl
out
aas
mov
ja
sub
je
push
ficompl
test
leave
std
and
cmp
cwtl
push
xor
loop
stc
repnz
inc
das
xor
stc
into
lods
or
jo
push
insb
push
rclb
je
dec
add
adc
loopne
sbb
add
mov
xchg
cwtl
inc
andl
adc
xchg
push
pop
jl
fcmovnb
and
aam
aam
inc
add
call
or
nop
fimuls
xor
sbb
jl
sbb
adc
aad
jl
push
mov
xor
adc
adc
movsl
mov
jle
or
ror
mov
loopne
mov
pusha
je
mov
mov
inc
mov
xchg
dec
in
push
mov
in
arpl
mov
mov
mov
bound
repz
loop
fstpl
pop
or
push
arpl
lcall
xchg
cmpsl
jb
lret
cli
cwtl
cmp
clc
xor
xor
adc
cmp
mov
nop
inc
push
jno
xor
sar
sahf
xor
out
mov
and
add
lods
repnz
push
data16
push
jne
dec
sbb
cmp
push
mul
inc
dec
mov
cmpsl
jmp
jge
xchg
data16
andb
cmp
mov
les
cmc
stos
jmp
mov
nop
fwait
add
dec
xchg
cltd
push
mov
popf
cwtl
jmp
dec
xchg
arpl
cmpb
repnz
es
xor
shl
adc
aad
cltd
repnz
cmp
inc
fmull
dec
pop
shlb
jge
inc
pop
sbb
out
sbb
sbb
sar
adc
mov
lcall
es
mov
insl
and
add
xchg
sub
mov
idivl
lret
mov
pop
mov
mov
xchg
xchg
jmp
cmp
inc
jmp
popa
stc
push
xchg
sbb
and
mov
ja
cmp
inc
pop
adc
or
test
dec
mov
push
stc
das
and
repnz
sub
ficoml
adc
xchg
dec
pop
inc
dec
and
stos
clc
push
inc
fwait
ret
jmp
sub
add
mov
lret
and
popf
add
lea
lock
cmp
inc
adc
dec
js
insl
stos
and
outsb
scas
es
mov
push
ret
mov
xor
adc
push
mov
mov
xchg
xchg
jmp
cmp
int3
mov
ficoms
and
sub
in
ss
and
jo
fwait
jno
cli
insl
push
xor
xlat
lods
mov
inc
pusha
loopne
test
rorb
lea
jp
adc
loopne
xchg
xchg
jae
addl
sub
rcrb
pop
sub
push
pop
insl
movb
pop
and
loope
dec
mov
sub
out
mov
hlt
pop
test
xchg
push
sbb
lretw
scas
mov
or
and
dec
pop
icebp
jg
mov
adc
dec
in
fs
push
sbb
sub
lea
adc
sbbl
inc
and
loopne
popf
in
adc
add
sti
aad
cltd
lock
xor
ret
rcr
lods
or
dec
and
xchg
mov
or
mov
insl
insb
popa
das
je
orb
dec
adc
addr16
pop
sbb
push
adcb
adc
push
sub
in
pop
mov
movsl
mov
cmp
adcb
cmp
icebp
mov
lea
mov
or
aaa
rclb
leave
stos
loope
scas
sbb
popf
out
mov
test
pop
xchg
xchg
aas
div
or
sbb
push
push
dec
dec
cmpsb
hlt
cmc
xchg
inc
imul
cli
stos
inc
xchg
sbb
mov
movsl
or
mov
aam
xlat
pop
pusha
push
xchg
das
ret
ret
in
lret
inc
lds
xchg
and
add
sahf
push
cltd
or
lahf
scas
shl
or
mov
test
movsb
data16
and
lret
jbe
push
jns
lcall
sbb
inc
pop
mov
dec
inc
pop
and
or
jne
xchg
stos
pop
jb
push
push
in
or
lods
and
xor
cmp
lea
jmp
cmc
jb
sub
testl
mov
push
pop
sbb
std
sub
pop
push
add
inc
dec
push
sahf
and
subl
push
stc
sahf
inc
mov
test
push
lds
mov
lahf
in
mov
push
xor
adc
mov
push
inc
shlb
repz
loopne
popf
enter
xchg
arpl
push
fs
rcl
pop
cld
mov
cmc
dec
stc
movsb
cmp
dec
out
aad
in
or
icebp
and
out
mov
inc
xchg
and
mov
rol
cmpsl
pop
int
cltd
addb
xor
popa
mov
jbe
enter
cltd
popf
pop
or
sbbl
outsl
ret
and
jge
inc
flds
inc
loopne
mov
fldl
hlt
icebp
mov
in
jns
pop
out
or
imul
cwtl
stos
mov
loopne
xchg
push
imul
in
jne
mov
xor
mov
mov
jge
cmp
mov
repnz
cmp
inc
pop
mov
test
lret
gs
cli
lds
add
or
stos
shlb
aaa
orl
sub
mov
mov
stos
and
lods
or
push
and
xchg
or
push
push
push
test
ljmp
or
push
add
pop
pop
add
jo
add
aad
mov
scas
cmc
jle
aaa
adc
inc
test
xchg
mov
adc
roll
in
jecxz
rolb
aad
jo
cmp
jb
scas
jl
lock
add
into
mov
pusha
lock
xor
subb
nop
push
arpl
jno
inc
dec
leave
add
inc
bound
enter
xchg
cld
mov
std
sub
fmuls
arpl
fxch
mov
xchg
or
mov
outsb
push
lea
testb
movsb
fsts
add
inc
inc
mov
pop
out
mov
sub
sarl
loope
repz
or
divb
imul
inc
outsl
pop
enter
cmpl
in
and
and
sbb
pushf
das
pop
dec
mov
inc
mov
outsl
adc
hlt
fwait
cmpsl
sub
adc
or
and
fiadds
dec
add
mov
mov
inc
inc
in
fxch
fisubl
subl
lret
adc
inc
and
addb
push
add
jne
push
stos
or
shll
sub
pop
push
dec
jne
dec
xchg
nop
cltd
imul
push
adc
mov
gs
dec
add
inc
mov
push
mov
mov
inc
stos
mov
inc
xor
stos
lds
mov
xlat
mov
inc
sti
ja
test
outsl
mov
push
jb
mov
ret
mov
hlt
cmc
outsb
mov
xor
push
mov
int3
movsl
adc
xor
sarb
mov
lock
push
jo
add
jns
dec
jnp
jns
add
fidivrs
aam
lea
add
dec
outsl
mov
sbb
push
mov
pop
push
sahf
sub
imul
jle
adc
loope
pushf
add
popa
inc
stos
or
ret
movsl
sbb
dec
adc
loopne
sbb
pop
jae
adc
adc
push
jg
inc
add
mov
xchg
sarb
test
in
mov
inc
jle
sahf
orb
add
add
mov
add
pop
mov
iret
shlb
push
pop
mov
mov
or
imul
enter
fdivrl
mov
push
add
adc
inc
adcb
xor
out
mov
lock
in
lea
es
and
mov
xor
lods
ss
xor
repz
in
push
cmp
daa
add
mov
movb
mov
fidivrs
in
and
adc
mov
fcoml
test
rclb
paddq
xchg
adc
add
or
frstor
nop
pop
sbb
push
rcl
in
pop
xor
and
xor
add
dec
pop
cmp
sbbl
add
insb
and
shll
movsl
lock
and
insb
lea
add
insb
les
jbe
xchg
mov
pop
jl
lret
or
cmp
cwtl
push
lods
or
mov
lret
mov
outsl
out
inc
dec
add
xorb
in
pop
aam
push
xorl
outsl
push
sbb
pop
loopne
mov
xor
aas
aaa
inc
cwtl
xor
loop
loope
mov
outsl
enter
mov
aas
repnz
push
stos
push
jmp
xor
in
iret
inc
loop
pop
lahf
icebp
andl
mov
iret
cmp
sarl
xchg
jg
xchg
iret
dec
imul
mov
mov
fbstp
add
push
mov
sub
xchg
js
fcomip
popf
jmp
loopne
call
psubsb
decb
in
jne
lods
pop
dec
cmc
dec
push
frstor
jp
ret
gs
movsb
or
mov
orb
sbb
enter
int3
jo
push
mov
sbb
mov
jns
bound
cs
sahf
add
mov
shlb
xchg
push
leave
loopne
scas
out
mov
or
imul
sbb
inc
lcall
mov
and
sub
out
or
sub
mov
cmc
push
stos
adcl
icebp
inc
into
mov
xchg
in
xchg
pop
mov
pop
and
cmpsb
xchg
nop/reserved
xchg
ss
jne
adcl
inc
ss
mov
negb
repz
push
sbb
lret
daa
jne
push
fwait
ljmp
inc
jge
lods
cmpsl
dec
push
test
testb
daa
pop
xchg
add
and
movsb
push
fidivrs
push
rol
inc
mov
stos
sub
and
jle
jnp
push
dec
dec
sbb
imul
cli
stc
adc
call
or
daa
aas
mov
mov
sarb
sbb
aas
mov
cld
dec
leave
jle
bound
or
fdivl
pop
dec
cmp
dec
cmp
ljmp
movsb
scas
push
repz
cli
sbb
sub
pop
jb
aas
leave
cld
dec
xor
mov
sub
aad
andl
in
sbb
add
stos
aad
rcr
scas
xor
fucomp
clc
jb
int
xor
inc
pop
xchg
cli
push
push
fs
xlat
sub
jle
mov
in
mov
or
dec
jno
popa
call
repnz
rcll
ljmp
outsb
imul
lahf
push
aas
call
sbb
shlb
shll
pop
mov
test
jbe
arpl
push
or
inc
pop
jle
shr
test
push
loope
xchg
addr16
repnz
jns
jbe
rclb
jnp
xor
jb
xor
add
daa
loop
dec
push
xchg
adc
and
stos
xor
pusha
cmc
fisubl
adc
pop
call
cli
sub
sub
or
or
mov
cmp
bound
jg
inc
mov
test
imul
adc
sub
scas
out
jp
dec
sahf
clc
xchg
push
sahf
clc
inc
leave
cli
cmp
stos
pushf
rcrl
cld
jmp
sbb
xor
hlt
mov
cs
insl
cwtl
aam
dec
fcompl
pop
imul
and
jmp
jns
inc
mov
push
sbb
add
test
dec
mov
je
pop
aas
cltd
fldl
mov
aad
cmp
adc
sbb
outsb
dec
aaa
mov
dec
jp
and
mov
fildl
and
jnp
loop
dec
sub
cmpl
orl
imull
adc
dec
adc
mov
sbb
jnp
or
pushf
mov
mov
sbb
xor
sub
xchg
or
aad
popa
ret
sub
push
sbb
clc
mov
addl
inc
scas
xchg
add
repnz
sub
xchg
adc
lds
and
cs
xchg
inc
inc
out
mov
push
cmp
mov
and
fdivr
fisubl
xor
fs
mov
fs
lods
push
dec
mov
inc
sbb
into
cld
daa
in
loop
xor
lahf
in
push
cmpsb
fdivr
sbb
shlb
inc
test
mov
loop
pushf
push
inc
out
push
stos
test
sbb
mov
test
adc
mov
xchg
adc
mov
jp
roll
adc
sub
out
pop
mov
insl
aaa
daa
fdivs
clc
mov
push
rol
inc
mov
lds
call
movsl
inc
mov
push
mov
out
adc
sbb
sbb
mov
add
mov
fsubs
cmc
jae
xor
jae
sbb
cmp
icebp
mov
cld
cltd
je
or
xor
ret
sbb
inc
lea
insl
lock
jecxz
sub
push
mov
jb
adc
outsl
pop
mov
lcall
mov
push
dec
aaa
xorl
inc
add
cld
out
cmpsb
data16
fdivp
lret
rcrb
or
mov
mov
fnstsw
pop
dec
dec
or
cmpsb
nop
orb
sti
or
xchg
add
mov
add
test
jns
dec
adc
lock
xchg
dec
push
or
xchg
mov
add
sahf
lahf
lahf
cmc
lret
xchg
or
cmp
not
mov
hlt
pop
loope
xor
pop
jns
pop
fistpll
pusha
xor
push
rolb
xchg
xor
daa
sub
xor
or
adc
pop
fimull
shlb
mov
add
sbb
dec
adc
ja
add
sahf
push
dec
aad
push
decb
ret
std
aas
xor
push
movsb
dec
lret
iret
rol
sbb
jle
sbbl
sub
mov
fcompl
dec
push
add
or
or
jle
xchg
mov
mov
clc
jb
leave
sbbb
repz
add
inc
add
mov
mov
or
jne
push
insb
adc
push
dec
mov
push
mov
movsb
iret
or
lcall
sub
jne
and
jno
push
add
jno
xchg
jl
or
test
add
xchg
ficompl
leave
pop
imul
call
into
out
shll
xchg
mov
lcall
das
mov
rcrl
jne
push
call
popa
mov
cmp
inc
pop
xor
sub
pop
pop
out
cmc
cmpsb
xlat
lods
fidivrs
adc
rorb
mov
movsl
js
cltd
push
data16
mov
and
outsb
fistps
jb
jbe
arpl
inc
lods
xchg
adc
stc
shll
ret
idiv
outsb
fidivrl
lods
cmp
sub
das
mov
fdivrs
ja
mov
mov
sub
mov
inc
sarb
test
in
xor
xchg
mov
xor
mov
daa
test
pop
outsb
add
jae
inc
into
lret
mov
in
adc
inc
std
fidivl
or
push
in
testl
cltd
outsl
cmp
jl
mov
cmc
test
push
in
mov
xchg
pop
sub
or
cmpsl
jg
nop
lahf
adc
inc
cmpb
push
mov
test
scas
enter
xchg
jae
pop
imul
adc
dec
adc
pop
sbb
pop
or
out
push
xlat
sbb
and
cmpps
inc
jbe
ret
lods
mov
jp
xorb
adc
cmpsb
lahf
push
ret
lcall
cld
ret
or
fcoml
ret
inc
or
push
mov
sub
xor
pop
xor
mov
cli
xchg
xor
inc
stos
psraw
addl
hlt
in
or
aas
inc
test
jnp
adc
cld
inc
xchg
or
mov
sub
sahf
fsubs
movsb
xchg
adc
mov
outsb
es
pop
aaa
into
jns
jmp
mov
in
xor
inc
or
cmp
mov
mov
xchg
xor
cmp
pop
popf
adc
mov
addb
mov
js
and
xlat
pusha
sbb
jne
fldl
pusha
dec
fsub
adc
mov
frstor
and
mov
aas
pop
dec
mov
jg
stos
mov
cltd
add
loope
call
enter
jnp
push
fmull
leave
jp
repz
in
push
sbb
pop
sbb
arpl
xor
aaa
mov
pop
outsb
adc
ret
or
loopne
jo
js
adc
ds
movsb
xor
push
inc
and
cmp
jb
jae
mov
ficompl
dec
out
mov
xor
loop
fldenv
sbb
in
push
push
add
push
mov
mov
pusha
pop
scas
daa
jb
out
xchg
pop
insb
lds
inc
add
popf
adc
loop
add
aas
shlb
orl
das
int
jno
and
and
aas
shl
sbb
adc
cmp
mov
jae
js
test
ret
sub
jo
jmp
push
sbb
pop
mov
jmp
jp
das
pushf
pop
adc
into
adc
sub
push
push
mov
test
stc
inc
movsb
data16
mov
xor
xor
mov
pop
ljmp
or
jmp
rcll
push
jnp
pop
adc
mov
fnstcw
pop
mov
nop
sub
xchg
orl
in
fucom
push
adc
adc
cmp
mov
aad
or
leave
push
stc
xor
insb
sub
xor
call
aaa
adc
enter
sub
cmp
xor
or
ds
test
ljmp
add
clc
push
xlat
push
pop
dec
and
push
adc
lock
aas
call
sbb
mov
jo
mov
inc
rorl
mov
repz
mov
sub
hlt
lods
das
daa
mov
stc
mov
adc
fs
pop
and
inc
jns
push
fsubrs
aas
push
icebp
insl
pop
inc
daa
jno
jns
stos
mov
mov
mov
std
rcr
movsl
mov
mov
mov
stos
adc
mov
call
xchg
xchg
sbb
mov
mov
pop
lods
daa
shrl
lds
add
lret
jbe
roll
mov
pop
imul
orb
adc
call
jp
or
mov
lret
mov
and
xchg
shlb
stos
xor
loopne
enter
push
aam
add
in
sbb
arpl
adc
and
or
scas
hlt
inc
adc
mov
inc
lods
inc
sbb
inc
je
inc
inc
mov
xor
js
hlt
fnsave
ret
ret
seto
xchg
cli
frstor
cmpsb
cmpsl
sub
adc
testb
rcrl
bound
push
call
pminsw
hlt
sbb
jns
and
mov
fistps
xor
in
mov
test
xor
xchg
dec
jb
jnp
pop
mov
iret
dec
inc
push
nop
lods
pop
or
test
xor
imul
loope
loopne
int
std
jp
mov
stc
pop
add
xchg
xor
pop
out
add
shl
sub
ljmp
mov
dec
rcrb
hlt
fidivl
xchg
movl
push
xchg
mov
and
sub
fdivrs
dec
lret
ret
mov
adc
push
inc
xchg
mov
sbb
or
in
jno
adcb
push
push
push
inc
dec
mov
fstl
mov
popa
xor
mov
sbb
push
mov
jae
push
stc
sbb
sub
inc
movsl
mov
pop
int3
iret
loopne
dec
scas
or
inc
scas
test
in
test
xchg
dec
jbe
inc
xchg
xchg
adc
adcl
and
ds
xor
sub
mov
dec
pop
sub
xor
in
daa
nop
sub
fcos
adc
rcrl
push
bound
out
loope
inc
jg
ret
jno
xchg
xor
mov
xor
inc
and
xor
ss
add
xor
rep
aam
nop
lods
leave
mov
imul
jl
ja
ds
ds
sahf
bound
dec
mov
pop
movl
stos
push
imul
pop
sbb
push
aad
cwtl
pop
inc
inc
xchg
leave
enter
sub
push
popl
add
push
xor
and
sbb
or
adcl
cmp
xchg
or
cmp
sbbb
dec
js
repnz
outsl
cmp
mov
sbb
call
sub
adc
jbe
lahf
in
xor
loop
imul
inc
sub
inc
xchg
push
movsl
pop
dec
dec
test
mov
fcmovb
mov
ds
xchg
adcl
cli
dec
or
movsl
and
cmpb
pop
and
imul
push
stos
mov
jb
push
add
adc
dec
cld
mov
cli
fs
and
test
insl
push
outsl
enter
sbb
mov
ja
pop
test
or
cmp
sahf
scas
test
in
inc
gs
das
bound
mov
mov
popf
mov
cwtl
repz
push
xor
sbb
mov
add
sub
push
adc
jbe
out
and
dec
gs
pusha
lock
rclb
int
mov
xchg
aam
aaa
lods
mov
sbb
mov
sub
push
push
jno
vsqrtss
pop
pop
aam
sbb
mov
call
jb
inc
in
inc
or
xlat
cmc
xchg
orl
lds
lods
lods
cmc
dec
mov
loope
xor
jle
sbb
fimuls
mov
inc
out
push
or
andb
cltd
sarl
icebp
dec
test
mov
out
or
jecxz
inc
mov
aam
add
sub
adc
mov
fisttps
idiv
adc
out
cmp
jb
mov
rcrb
sarb
and
adc
and
rcl
mov
adc
fdivrl
ds
stos
aad
rcr
jne
test
fs
jg
cltd
adc
fnstcw
fs
xor
stos
sbb
pop
inc
cmc
jle
std
das
out
pop
xchg
jne
or
add
or
js
mov
lds
push
push
mov
scas
sarl
lea
and
std
cs
into
cld
adc
mov
mov
lahf
test
push
cmp
scas
and
fmul
imulb
lret
dec
adc
mov
or
lds
stc
and
sahf
sbb
inc
push
jns
pop
sub
or
xor
arpl
dec
sahf
add
jmp
jmp
mov
imul
sub
jmp
dec
push
notb
xchg
sub
mov
xor
repnz
movsb
jg
mov
insl
sub
jp
xor
mov
mov
push
lahf
mov
xlat
insl
jp
jle
mov
dec
std
pop
mov
sbb
jns
out
clc
sbb
addr16
out
push
or
lret
je
cmpsl
les
adc
nop
leave
xchg
dec
aas
fstl
les
loop
and
fmulp
sub
mov
test
push
xchg
inc
scas
push
push
loope
xchg
shll
iret
add
test
sbb
push
ficoml
shll
loopne
mov
sbb
dec
push
lea
sbb
sarb
mov
dec
dec
fs
push
dec
cmp
stc
test
sbb
jge
xchg
dec
and
mov
ja
ja
cmpsb
mov
arpl
sbb
fldt
repz
sti
test
popf
mov
fstps
cs
sub
mov
ja
aaa
and
scas
or
dec
and
sub
cwtl
stos
orl
pop
adc
iret
into
mov
adc
dec
xor
sbb
add
mov
mov
dec
mov
mov
mov
jae
and
mov
mov
lock
inc
mov
popf
mov
mov
mov
and
faddp
xchg
sub
dec
cltd
jo
bound
test
ds
ja
and
adc
push
xorl
push
stc
fnstenv
push
aam
xchg
push
mov
ret
lods
leave
xchg
adc
arpl
xor
outsb
mov
lock
enter
fmul
xchg
xchg
xchg
pop
out
sub
add
fsts
aam
das
les
arpl
loope
and
xor
fwait
in
adc
push
jge
mov
push
es
xor
jmp
push
inc
outsl
add
out
lods
or
clc
xchg
cmpsl
rolb
iret
aad
or
jmp
les
fs
sbb
fiaddl
sarb
mov
in
fwait
push
shll
aas
cmp
adc
inc
rol
sbb
push
bound
cmpb
ds
test
fs
sbbl
icebp
rcll
ljmp
sub
push
out
rcl
adc
outsl
cmpsl
inc
les
adc
rcrl
je
lods
inc
inc
xchg
mov
ljmp
or
push
adc
lds
jno
jecxz
ljmp
pop
in
jge
lret
dec
and
mov
mov
fsubrl
incb
and
pop
adc
mov
stc
xlat
daa
aam
pop
mov
sbb
sbbb
stc
jl
test
neg
in
mov
test
mov
add
adc
add
iret
dec
sbbl
dec
sbb
cltd
sub
and
jl
jecxz
dec
je
cli
add
dec
jne
push
inc
lock
cmp
movsb
mov
fmul
leave
call
push
stc
into
pop
clc
xor
enter
mov
xor
pusha
add
rclb
jnp
hlt
inc
or
xchg
xor
std
mov
mov
es
or
inc
cmpsb
pop
push
cld
push
dec
dec
cmp
fcoms
popa
inc
mov
mov
rcll
add
mov
sbb
aas
mov
dec
pushf
push
fldcw
popa
sub
mov
push
ret
loopne
icebp
sub
dec
iret
xchg
adc
popa
xchg
pop
aaa
and
add
js
gs
icebp
jae
repnz
push
movsb
adc
outsb
inc
sbbb
mov
lret
decb
pop
out
mov
jo
cmp
fldl
ficoms
insl
out
test
mov
out
scas
cmc
inc
dec
js
or
nop
cmp
cli
aad
adc
arpl
jmp
arpl
aas
xchg
push
loope
daa
and
cmp
push
pop
je
xor
pop
push
mov
mov
hlt
sub
and
movsl
mov
mov
sbb
pop
dec
orb
xor
pop
xor
inc
add
nop
mov
mov
xchg
mov
iret
js
inc
sbb
pop
dec
inc
inc
loope
mov
testl
xchg
ret
dec
lret
push
mov
std
loope
popa
pop
mov
dec
or
sti
xor
xchg
sarb
in
ret
test
call
repz
adc
sbbb
mov
popa
fwait
sbbb
pop
cmp
pop
push
repnz
xchg
sbb
sbb
pop
sub
fists
loopne
movsl
jno
cld
or
inc
sub
cmc
mov
imul
adc
push
sbb
data16
imul
or
inc
std
nop
clc
shl
test
mov
push
pop
push
imul
std
push
inc
popf
inc
dec
movsb
mov
scas
bound
cmpsl
jg
adc
dec
push
jl
cwtl
sbb
mov
repz
and
push
dec
mov
std
push
xor
push
add
cmp
mov
xorb
jne
jle
sbb
jecxz
mov
call
add
into
mov
sub
pop
icebp
in
sub
xchg
xor
rorb
adc
adc
mov
sbb
icebp
popa
lea
cli
ficomps
and
hlt
cli
adc
leave
push
mov
mov
cmp
mov
adc
aad
cmpl
ja
mov
inc
jb
cmpl
sbb
insl
mov
lcall
sub
push
sahf
dec
cmp
and
sub
mov
dec
imul
cmp
dec
cmc
mov
sbb
lret
das
rclb
or
mov
pop
inc
xor
fildll
mov
sub
bound
icebp
lea
jo
mov
cmp
ss
xor
add
adc
sbb
mov
cli
ror
in
adc
mov
test
mov
sarb
xchg
scas
xor
inc
mov
call
cld
mov
cltd
movsb
sbb
insb
dec
xor
cltd
lcall
in
adc
leave
xor
outsl
mov
xor
dec
dec
adc
test
xchg
loope
popf
or
inc
xchg
ret
js
or
popf
pop
cmp
sahf
lods
cmp
rcrb
sub
dec
nop
or
dec
or
add
je
and
xchg
scas
mov
pop
into
ss
xlat
dec
loope
fsubrs
inc
add
sti
xchg
pop
out
in
mov
aad
xchg
xor
test
lods
je
inc
and
je
imul
mov
adc
jg
or
je
mov
and
sbb
cmp
jecxz
hlt
cli
inc
dec
jo
insb
add
lret
cmc
xchg
jecxz
or
inc
pop
or
das
inc
popa
in
jmp
inc
jl
call
dec
pop
ret
sarl
lock
mov
sub
cld
push
inc
iret
lret
pop
pop
xchg
ret
add
lahf
pop
fistl
pusha
inc
or
fiadds
jecxz
xorl
std
in
aas
repz
push
mov
clc
inc
xchg
inc
push
jg
xchg
fadds
sbb
arpl
scas
add
out
mov
test
and
dec
lea
sub
sahf
sbb
das
cmp
iret
mov
jno
dec
jo
mov
data16
sbb
je
mov
test
and
and
inc
or
cmp
and
sbb
std
push
movsbl
sub
and
iret
insb
daa
pop
xchg
cltd
dec
lea
pop
jle
in
rcrl
adc
xchg
fwait
pushf
jge
in
loopne
mov
dec
mov
aam
xchg
hlt
mov
xchg
pop
inc
cwtl
xchg
push
adc
lock
xchg
mov
xchg
adc
and
jns
dec
icebp
cmpsb
fldcw
fwait
fs
stc
or
jle
mov
aad
jecxz
mov
clc
mov
bound
xchg
inc
jl
mov
add
jae
rorb
mov
dec
pop
mov
sbb
lcall
stos
aas
fcompl
out
pop
jae
sbb
cmc
fnstsw
push
notl
js
push
rorl
and
adc
ds
xor
xor
cltd
xchg
and
push
inc
and
fbld
jecxz
movsb
ficoms
sbb
or
push
pop
or
divl
stc
add
dec
or
aas
xchg
push
ss
push
cmp
inc
fdivrs
pushf
scas
inc
and
into
or
lea
xchg
mov
in
push
jbe
xchg
fisttpll
shrb
pushf
loopne
xchg
mov
int3
jne
repz
jl
adc
xor
inc
mov
ret
sub
xor
pop
call
cmp
mov
loopne
xor
testl
repz
inc
lods
fists
jns
mov
adc
adc
xchg
pop
or
sbbb
and
les
call
adc
fidivs
clc
cltd
cmpsb
nop
or
into
ret
in
lock
or
pop
call
mov
mov
jb
add
out
mov
scas
mov
add
xor
fs
mov
cli
gs
and
into
xchg
bound
pop
pop
push
sub
dec
add
mov
add
aad
popf
cwtl
aad
dec
cmp
push
mov
test
leave
adc
sbb
loopne
pusha
mov
jp
xchg
jb
xor
push
sub
mov
mov
sub
rorl
add
dec
pop
test
sbb
sbb
add
popa
sub
js
jo
mov
inc
mov
cmc
adc
jl
pop
shl
fisubl
ljmp
xchg
mov
nop
addb
inc
xchg
add
cmpsb
je
inc
shlb
dec
adc
cmp
jae
inc
call
inc
pop
mov
jae
xchg
arpl
mov
mov
adc
adc
adcl
add
mov
push
call
test
cld
inc
outsb
addr16
pusha
shrb
in
or
jo
or
stos
adc
or
leave
jne
sahf
adc
mov
jbe
mov
or
pop
pop
cmp
or
add
mov
and
mov
push
push
or
mov
inc
jb
mov
in
or
xor
pushf
adc
or
nop
out
jne
add
and
insl
lret
lahf
dec
add
xchg
in
and
test
mov
sub
mov
notb
sbb
push
xchg
clc
fnsave
lea
cmp
aaa
xchg
clc
out
sub
hlt
jl,pt
adc
lret
fmulp
adc
inc
xchg
push
add
adc
sbb
jg
pop
rcr
sub
in
mov
pop
sbb
xchg
scas
pop
and
jae
shrl
roll
data16
add
add
sbb
push
cmp
dec
fwait
imul
pop
sub
enter
jne
adc
mov
xchg
push
add
add
xor
repz
dec
repz
sahf
ret
adc
sbb
or
sbb
xor
in
push
pop
lds
push
jmp
fdivrl
push
aam
mov
push
pop
push
xor
adc
xchg
rol
adc
cmp
add
in
rcrb
dec
sti
repnz
xor
push
inc
or
xchg
repz
mov
andl
dec
rclb
sar
fldt
and
dec
stos
mov
fidivrs
jnp
or
test
and
push
cltd
pop
sbb
jnp
jb
sbb
sbb
add
xchg
lods
sbb
in
dec
push
xchg
addb
rcrl
jns
mov
pushf
fdivs
das
fstp
aas
fnstsw
push
ja
out
inc
movsb
ret
inc
jne
jb
out
push
mov
mov
cwtl
inc
push
loope
pop
pusha
push
inc
cmpsl
into
cwtl
je
movsb
pop
add
adc
repz
jmp
fcomps
bound
gs
pop
xor
push
test
xchg
mov
and
or
cmpb
push
enter
test
fdivrp
cmp
mov
and
sarl
in
and
lods
rorl
nop
adc
dec
mov
xor
and
sub
and
xor
xchg
push
dec
adc
push
pop
cs
fwait
cmp
sbb
xchg
and
xchg
push
cmp
icebp
dec
xorl
shll
inc
loop
cltd
inc
pop
mul
cltd
repz
fistl
js
lds
and
mov
push
cmpl
mov
arpl
insb
cltd
ss
lahf
in
arpl
cwtl
nop
pop
dec
inc
shrb
add
and
push
mov
arpl
call
pop
mov
pop
pop
loop
sub
shlb
nop
dec
mov
adc
int3
jmp
xlat
inc
dec
push
mov
inc
mov
bound
or
ljmp
inc
xor
mov
xchg
jle
mov
sub
mov
daa
push
or
inc
scas
mov
fwait
sub
mov
in
data16
adc
rcrl
aas
mov
cwtl
fstl
lret
or
mov
cs
test
test
push
dec
cmpsb
xor
rcll
dec
jno
pop
loope
pop
cmp
mov
addr16
orl
adc
add
enter
xor
loop
add
fs
mov
into
clc
aas
mov
rolb
mov
inc
pop
adc
scas
lret
rcrb
push
cmp
adc
add
and
out
aas
adc
xor
aas
pop
addb
jne
mov
xchg
dec
aas
movsb
call
add
jno
jne
fldt
aam
sub
test
mov
adc
repnz
cmp
icebp
das
sub
mov
dec
mov
mov
shll
sub
fdivrs
lret
les
ss
cmc
jns
fwait
pop
mov
xlat
in
ret
ds
push
add
nop
mov
pop
or
mov
push
cld
sbbb
jo
dec
out
inc
sub
adc
mov
scas
lock
adc
imul
and
scas
jne
jno
push
icebp
addr16
mov
jb
mov
gs
repnz
int3
repz
cli
dec
jne
faddp
scas
adc
outsl
int3
adc
mov
icebp
sub
dec
push
adc
adc
pushf
movsl
movsb
arpl
adc
subl
and
xchg
ret
in
mov
mov
sub
daa
mov
movsb
adc
xchg
and
fadds
stc
rcrb
pop
lock
inc
clc
xchg
pop
xor
lahf
fldl
pop
rclb
fsubp
incb
lods
pop
push
or
cmp
call
pop
push
nop
fptan
hlt
stos
stos
mov
cmp
cmc
rcl
aam
test
sub
jge
xchg
cmp
out
loopne
xlat
push
insb
rcrb
jg
push
add
inc
mov
lock
or
mov
add
test
adc
mov
leave
dec
mov
push
push
inc
pop
pop
push
mov
test
es
lahf
fs
xchg
xor
jp
mov
push
mov
jnp
cmp
dec
xor
xlat
xor
mov
pusha
mov
mov
cltd
or
push
test
pop
lret
sahf
ja
int
sbb
iret
bound
inc
sbb
or
addr16
xchg
adcl
inc
xchg
sub
stos
push
xchg
jno
push
addl
jbe
sub
aam
loope
xor
mov
js
dec
out
sub
outsb
in
test
adcl
and
repz
or
clc
mov
xchg
ret
cmp
loop
fdivrs
and
mov
dec
mov
and
andl
loope
outsl
not
push
mov
lcall
and
stc
rorl
cwtl
aaa
in
aas
jl
arpl
movsb
subl
lret
aaa
lcall
or
fcompl
int3
imul
test
sub
outsb
insl
jae
pop
xor
and
add
jmp
sbb
mov
add
mov
ss
addb
shrl
rclb
adc
andb
rcl
fidivl
out
movsb
mov
and
addr16
cld
pop
enter
xchg
inc
adc
or
stos
xchg
stos
mov
pop
test
ljmp
or
lret
adc
test
icebp
mov
pop
xchg
mov
ret
data16
xor
xor
in
stc
ss
xor
xor
cltd
push
jae
xadd
fstp
xchg
in
pusha
push
lcall
stos
xor
push
lods
xor
or
mov
lds
dec
dec
sub
dec
enter
gs
mov
repnz
dec
adc
cltd
adc
mov
jnp
and
mov
popa
cmovg
dec
nop
insb
mov
ret
ret
cwtl
mov
sub
int3
inc
pop
cmp
gs
and
movl
lahf
out
popf
xchg
pop
into
pop
push
popa
and
and
dec
fstpt
dec
dec
out
rorb
div
sbb
shr
leave
pop
xchg
pushf
sbb
mov
dec
xchg
cmp
into
cli
pop
xchg
lret
aad
test
adc
xor
push
mov
pop
jmp
divb
cld
repnz
jo
mov
fwait
add
inc
lahf
call
insl
sarl
mov
daa
push
add
int
or
icebp
mov
jns
push
sbb
adc
mov
loop
push
xor
sub
xor
ljmp
mov
or
dec
fnstenv
xchg
push
mov
inc
loope
mov
shlb
hlt
mov
add
mov
cltd
iret
lds
xchg
mov
mov
test
sbb
mov
imul
sarl
scas
sbb
jecxz
dec
test
push
pushf
loope
push
adc
lret
pop
xchg
add
pop
lahf
mov
packssdw
lahf
inc
or
ret
call
dec
push
cmpsl
mov
mov
sbb
testl
out
insb
inc
mov
aam
orb
sub
mov
test
sbb
repnz
mov
cmp
adc
aam
out
negl
adc
and
sahf
mov
and
imul
test
mov
push
xchg
inc
xchg
xchg
adc
adc
xchg
push
adc
pop
mov
fsubl
ret
ja
push
fcmovnu
mov
stc
push
iret
js
sbb
ds
pushl
xlat
jns
pop
ljmp
sbb
adc
test
adcl
pop
test
pop
jno
test
lods
mov
xacquire
mov
add
adc
repz
shl
add
enter
inc
or
push
push
or
ljmp
xchg
adc
and
and
push
ja
mov
push
mov
or
icebp
inc
mov
hlt
rolb
jl
mov
dec
mov
pop
dec
icebp
iret
jne
push
fwait
dec
inc
gs
loopne
xchg
hlt
out
cltd
mov
fsubrl
mov
fisttpl
pop
rclb
and
fldt
mov
add
pop
cmp
inc
fimull
add
jne
push
push
arpl
loop
ss
push
repz
xlat
xor
nop
push
imul
out
mov
xchg
xchg
adc
dec
push
mov
and
stc
rorl
jecxz
adc
shll
jmp
in
add
dec
push
sub
push
sti
cs
in
rcll
icebp
out
mov
adc
dec
adc
es
iret
out
je
icebp
push
and
in
xchg
out
loop
lcall
xlat
rorl
scas
shll
add
cmp
icebp
jo,pn
mov
mov
mov
mov
das
jb
mov
decl
std
cwtl
jne
out
push
adc
sbb
add
shlb
fiadds
or
jb
pop
inc
fcoml
fisubs
add
adc
jne
rorl
ret
and
adc
cmc
and
sahf
pop
pusha
dec
dec
mov
xchg
and
sub
xor
sub
and
lret
rol
and
icebp
mov
sbb
mov
add
push
fistpll
orb
add
insb
xchg
push
jae
and
jg
loop
jae
inc
cmp
jg
lds
jnp
fwait
es
mov
cmp
sar
loopne
xor
adcb
std
sub
and
and
dec
push
add
fidivrs
addr16
cld
shll
jb
sbb
jle
imul
sahf
mov
push
pushf
mov
pop
rolb
pop
sub
rcrb
iret
icebp
mov
inc
dec
out
sbb
push
stos
int
outsl
sbb
ret
les
clc
cwtl
xchg
fs
adc
pop
jle
xor
adc
rclb
jp
orl
scas
add
fistpll
dec
sahf
dec
daa
je
xor
lahf
test
cmc
inc
test
and
int3
out
add
stos
outsl
and
xor
cmp
dec
arpl
pop
and
add
imul
adc
pop
lcall
lock
ret
mov
jno
mov
xchg
test
outsb
mov
or
faddl
xchg
dec
cmp
ret
shlb
loope
inc
xor
jg
and
mov
js
mov
test
filds
jae
mov
mov
xchg
inc
scas
sub
xor
push
popl
cltd
insl
fisubs
xchg
imul
jl
outsl
nop
xor
outsb
testl
fld
sub
pop
cwtl
mov
xchg
ja
ss
sbb
inc
or
inc
stc
or
jbe
enter
xor
adc
mov
test
mov
cltd
jge
xchg
inc
lock
mov
jmp
loop
mov
and
adc
sbb
adc
negb
jo
push
inc
mov
fs
neg
adc
cmp
xchg
pop
inc
aaa
cmp
popf
call
inc
adc
push
push
mov
jle
ret
iret
and
sbbb
pop
dec
xchg
adc
xchg
push
movsb
inc
into
fstps
inc
dec
xor
scas
lahf
insl
in
imul
or
adc
movsb
test
adc
pusha
push
adc
jmp
jge
shll
stc
or
int
sub
fstl
mov
loopne
adc
fiadds
test
aam
pop
inc
test
mov
stc
sbbb
inc
cmp
add
and
push
adc
push
mov
inc
add
lcall
and
adc
mov
hlt
adc
and
clc
mov
adc
and
or
xchg
ret
add
clc
shlb
popl
mov
pop
ret
pushf
shr
and
mov
lret
add
pop
rcrl
fcoms
push
fxch
adc
jno
xor
movsb
add
pop
inc
loopne
imul
lahf
sbb
and
xchg
add
adc
mov
pop
and
adc
xchg
test
jo
inc
and
or
adc
pusha
frstor
outsb
popa
sbbl
mov
mov
xchg
add
sbb
push
fstps
and
xor
loope
pop
in
cmovno
cmpb
loope
test
and
filds
ret
hlt
adc
and
shrl
add
adc
les
dec
andl
xor
xchg
push
jo
inc
or
test
pop
xor
or
roll
and
adc
jb
mov
mov
adc
mov
add
mov
pop
and
adc
add
ffreep
das
and
xlat
sbb
pop
adc
mov
jle
inc
add
sbb
and
frstor
lds
add
jb
insl
rcrb
js
jns
sbb
rolb
addb
jmp
cwtl
cltd
lret
adc
add
ret
dec
sbb
rcrl
shll
sbb
inc
xchg
xor
inc
and
cmovno
inc
wbinvd
shrl
adcb
pop
popf
sbb
mov
sbb
xchg
sbb
jae
sbb
loope
rcr
popa
shl
inc
je
push
sub
lods
xchg
adc
and
add
xorb
cmp
stc
sub
xchg
cltd
shlb
xchg
cmc
xchg
sbb
inc
xchg
mov
xchg
jb
fadds
push
xchg
push
icebp
sbb
sbb
mov
mov
popa
cmp
xchg
rorb
push
sar
and
or
xorl
shlb
and
in
mov
leave
inc
adc
popf
xchg
jno
jmp
and
mov
push
ret
cmc
and
filds
xchg
sbb
rclb
jns
adc
inc
shrb
mov
adc
xor
xchg
and
cmp
or
inc
ret
xchg
aas
and
bound
push
add
out
cltd
add
out
addl
test
and
mov
inc
and
push
test
sbb
mov
fadds
pop
cltd
and
mov
shll
xchg
lret
cmc
xchg
jo
sbb
xor
filds
jno
sbb
popa
test
rcll
inc
sarb
inc
adc
xor
push
pop
sbb
push
or
xorb
inc
xor
push
mov
ja
adc
inc
fcompl
inc
test
xchg
jb
sbb
pop
sar
adc
filds
repz
sbb
and
ffreep
xchg
ret
jne
pop
xchg
rolb
imul
add
mov
pop
inc
dec
fstpt
nop
jno
sbb
push
adc
xorb
aam
xchg
sbb
lock
mov
pop
addr16
lret
and
jnp
or
mov
xchg
fs
sbb
stc
mov
sbb
cwtl
enter
and
mov
repnz
mov
mov
xchg
enter
push
std
xchg
pop
flds
inc
cwtl
bound
xchg
sbb
jmp
mov
sbb
inc
push
jno
jno
sbb
xchg
sbb
lock
mov
xchg
loop
insl
sub
loop
mov
dec
and
arpl
or
fwait
adc
dec
stc
fstps
dec
sub
aam
sub
test
cmp
push
and
movsl
sub
sub
loop
mov
dec
and
arpl
or
cltd
sbb
sbb
bnd
or
jnp
in
lret
push
sub
adc
fwait
sbb
pop
dec
adc
adc
enter
mov
fimull
sbb
dec
sub
pop
dec
mov
sub
or
test
push
sub
adc
cltd
sbb
pop
dec
adc
dec
push
mov
enter
mov
fmuls
sbb
dec
sub
add
and
inc
test
loop
mov
fwait
sbb
dec
loop
mov
dec
and
arpl
or
lcall
cltd
sbb
jp
dec
sub
xlat
xchg
sub
xchg
cmp
push
and
movsl
sub
mov
dec
sub
loop
mov
dec
and
arpl
or
cwtl
adc
dec
stc
fcomps
dec
sub
aad
sub
test
cmp
push
sbb
and
adc
lret
pushf
cltd
fwait
jo
loopne
test
ret
sub
xchg
push
lret
cmc
sub
fisttps
lcall
rcrb
fisttpll
dec
sub
std
xor
sbb
fwait
cltd
rorb
xchg
mov
cltd
loopne
mov
dec
and
lahf
jo
in
sbb
or
ror
sub
add
cwtl
sbb
imul
adc
add
mov
ret
sub
xchg
push
lret
cmc
sub
fisttps
dec
sbb
add
stos
mov
lcall
mov
dec
and
arpl
or
fwait
adc
dec
stc
fstps
dec
sub
aam
sub
test
cmp
push
sbb
mov
cmp
add
lock
lret
pushf
sarb
addb
jno
adc
mov
dec
aam
dec
add
cmc
jge
mov
pop
dec
sub
push
cltd
mov
jae
xor
xor
in
outsl
mov
dec
inc
sub
ret
sbb
pop
gs
add
inc
sbb
fwait
bnd
dec
jns
mov
pop
dec
sub
add
mov
aam
sub
test
sbb
xor
in
outsl
mov
dec
inc
sub
ret
sbb
adc
inc
sbb
cltd
bnd
sub
addb
jno
adc
mov
dec
aam
fwait
sbb
lock
mov
mov
pop
fwait
bound
dec
dec
fcmove
sbb
scas
dec
sub
or
addb
leave
adc
mov
dec
aam
cltd
sbb
lock
mov
mov
add
dec
dec
fmul
sbb
scas
dec
sbb
or
stos
xchg
sub
mov
sbb
mov
mov
mov
push
inc
jno
cltd
adc
sub
add
adc
js
testb
rclb
cltd
push
mov
hlt
mov
xchg
inc
jnp
inc
sub
test
inc
mov
fcmovnb
es
test
iret
fwait
jno
test
cmp
push
or
incb
add
xchg
and
sti
test
lock
movhps
mov
mov
xchg
cmp
adc
daa
cwtl
sub
push
cli
leave
xchg
movsb
pushf
add
shl
push
rcrb
mov
sbb
shrl
sbb
push
jne
xchg
test
xchg
and
iret
lods
jnp
mov
iret
pavgw
mov
pop
cmp
fistps
lret
push
dec
dec
and
add
inc
mov
push
movsb
jmp
jb
mov
inc
mov
fst
lods
pop
repnz
nop
outsb
cmc
scas
mov
or
aam
pusha
mov
dec
jno
cs
cld
inc
rolb
int3
mov
les
push
dec
and
add
cmp
ret
bound
in
daa
cwtl
into
jnp
shl
ss
jecxz
add
fs
mov
fisttps
sub
movsb
cmpsl
iret
push
jo
clc
jp
add
mov
or
test
mov
sahf
sbb
pusha
js
or
jg
adc
sbb
mov
dec
jno
loopne
push
nop
mov
cmp
push
or
dec
shll
and
jl
cli
rcrb
shlb
push
int3
clc
push
or
ret
cmpsl
xchg
rorl
jecxz
dec
mov
xor
addr16
inc
movsl
repnz
xchg
cmp
lret
inc
data16
out
adc
sahf
cmpb
aam
pop
jns
lahf
frndint
mov
out
jmp
std
aad
pop
push
repz
cmc
pop
pop
outsb
dec
mov
push
test
mov
xor
jp,pn
xor
mov
repz
push
cld
orl
aad
sub
pushf
cmc
sub
cmp
mov
push
and
sbbb
notl
fdivr
pop
test
push
dec
pushf
lods
push
xor
imul
shlb
pop
xchg
movsl
mov
test
jb
fwait
adc
pop
add
inc
popa
inc
test
das
nop
adc
push
xchg
lcall
inc
jle
andb
cmp
roll
xor
inc
shll
call
fiadds
xor
adc
subb
nop
jne
xchg
mov
fwait
or
mov
aam
inc
pop
adc
or
fdivrl
shrb
inc
push
aam
inc
push
fmul
and
mov
in
xchg
jae
mov
pop
mov
add
es
test
mov
sti
movsl
pop
ljmp
dec
jno
adc
jecxz
cmp
mov
adc
out
sti
pop
jbe
ret
stos
jle
out
fnstcw
xchg
aas
sbb
jl
enter
out
pop
mov
adc
gs
sbb
mov
and
popa
mov
or
jne
in
leave
sahf
sub
out
test
xchg
jae
out
lcall
push
int3
inc
push
jecxz
mov
or
mov
xor
into
insl
popf
pop
addb
jg
mov
mov
hlt
repnz
fidivrl
jne
sub
dec
shrb
cmp
scas
sbb
call
cmp
hlt
test
cltd
cmp
xor
jne
gs
dec
xchg
imul
dec
in
inc
add
fcmovnu
aad
cmp
shll
mov
jg
add
add
inc
es
mov
and
mov
shlb
inc
imul
stos
add
lcall
and
cmp
ret
sub
and
jae
inc
adc
cmpsl
fisubl
jmp
xchg
mov
fnstenv
scas
mov
stc
into
gs
test
test
adc
ja
jge
jno
fcom
js
in
js
jmp
js
test
cmpsl
sahf
cmp
mov
or
mov
sbb
insb
sbb
jns
mov
and
push
mov
mov
sbb
mov
out
or
sub
xor
xor
repnz
imul
js
std
ficomps
mov
add
repz
fdivs
add
mov
int3
sub
cmp
aaa
pop
xchg
xor
hlt
loopne
xchg
add
rclb
insb
xchg
roll
notb
push
jl
nop
ja
mov
xor
push
test
cmp
mov
push
xor
xchg
xor
push
ds
js
push
arpl
fbld
in
lods
pusha
mov
pop
pop
mov
inc
fnstsw
add
push
lahf
push
push
mov
push
sarb
test
cmovl
sarl
test
iret
mov
loope
jno
push
mov
mov
ss
push
fimuls
push
or
pop
sbb
adc
decl
xchg
xchg
push
jno
divl
push
xchg
xlat
sub
cmp
aam
inc
je
jne
jg
inc
cmpsl
lods
mov
cmp
sbb
ret
sub
and
hlt
dec
rcll
or
cmpsl
adc
iret
rorb
dec
jno
and
adc
adc
dec
add
mov
and
rcrb
mov
add
pop
mov
or
mov
jl
test
jns
icebp
loopne
rorb
lahf
xchg
movsl
add
add
inc
jo
pop
add
dec
pop
push
mov
ss
xchg
jb
add
iret
iret
xchg
fwait
push
inc
inc
int
and
xor
xlat
add
loope
pop
dec
add
frstor
mov
fistpll
sub
xchg
ret
push
fbld
in
aas
mov
hlt
sub
adc
scas
dec
repz
add
inc
leave
fcomp
push
sub
orl
or
mov
sub
mov
adc
nop
pop
sbbb
mov
and
stc
adc
add
adc
add
popf
xchg
dec
xchg
sub
shlb
lds
cmpsb
hlt
cmp
fldl
les
mov
adc
out
or
mov
pop
test
dec
jle
add
loopne
jae
addb
sbb
pusha
mov
pop
test
inc
sbb
lock
xchg
xchg
jo
mov
sub
xlat
test
xor
inc
inc
hlt
mov
xchg
ret
dec
dec
fstpl
dec
mov
popf
adc
inc
or
xlat
dec
mov
and
pop
push
inc
add
inc
and
xor
adc
mov
lahf
adc
cmpsl
in
add
roll
leave
mov
dec
add
lcall
arpl
mov
jne
dec
jo
sahf
sbb
fcoms
sbb
mov
jne
xchg
bound
inc
mov
cmp
cmpb
mov
aad
popa
lret
aad
les
pop
mov
sbb
inc
repnz
or
jno
test
mov
or
insb
inc
std
push
lcall
nop
cmp
inc
lret
enter
popa
fbld
and
push
xchg
mov
xor
frstor
ret
mov
stc
sub
jp
inc
or
push
dec
pop
sbb
or
and
xchg
sub
mov
and
sbb
dec
mov
push
fwait
add
aas
int
enter
ja
inc
adcb
and
test
inc
sbb
popf
orb
scas
sbb
or
lds
and
jo
inc
sbb
jle
flds
rorl
test
negb
sub
pop
pop
test
and
push
or
adc
inc
cld
subb
sbb
mov
xchg
mov
mov
inc
ffreep
adc
repz
xchg
das
add
mov
dec
fdivr
sbb
jp
dec
daa
xor
add
xor
outsb
or
sbbl
hlt
arpl
repnz
jns
add
pop
cmpsl
or
test
push
inc
int3
clc
push
in
fimull
xchg
bound
jnp
sub
leave
adc
mov
push
and
loopne
mov
inc
xchg
and
adc
ret
mov
jge
sub
cmp
shlb
push
nop
mov
cmp
nop
repnz
mov
rorl
fcoml
inc
adc
nop
xor
lahf
xor
push
or
rcll
jp
dec
sbb
push
test
call
lahf
push
lcall
cli
cmc
jbe
sbb
mulb
ja
shlb
mov
mov
dec
out
mov
xor
inc
jno
cmp
daa
inc
xchg
or
testl
addb
lods
fistl
nop
cmc
test
mov
mull
dec
int
mov
pop
arpl
lahf
shlb
add
mov
hlt
or
aas
push
movsb
fbld
cmp
movsl
aad
push
sbb
in
popf
mov
cs
sbb
xchg
lsl
fldcw
jnp
xor
jp
faddp
pop
mov
jne
stos
in
cmp
mov
addr16
fstpl
add
cli
js
or
jmp
push
sarl
adc
xchg
leave
test
add
nop
or
push
fdiv
cmp
mov
pusha
test
push
aam
push
out
cmc
push
add
cmpsb
rcrb
or
les
inc
imul
add
push
fwait
mov
lods
pushf
xor
add
xchg
jl
loope
fsubrl
aaa
mov
pop
dec
dec
push
ret
addr16
decb
adc
push
sub
adc
xor
stc
cwtl
add
pusha
inc
dec
or
das
push
xlat
add
fwait
emms
sbb
cmp
lds
mov
lea
xlat
pop
pusha
lods
lods
les
jmp
inc
inc
ljmp
dec
adc
mov
shrl
adc
fadds
or
lret
pop
push
push
add
and
out
inc
lock
in
mov
push
testb
xchg
daa
pop
and
adc
adc
pusha
xchg
addl
fsts
xor
mov
mov
pop
and
rcrb
xor
movsb
mov
jp
sub
jne
ljmp
jg
sub
mov
push
push
pop
lcall
xchg
fwait
inc
js
xchg
mov
xor
or
sub
lret
push
movsb
cmp
cmp
add
call
or
sub
jo
add
cmp
and
push
xchg
fs
push
lcall
jecxz
xchg
xchg
cmp
inc
mov
jbe
pop
lds
mov
sub
mov
daa
pop
jecxz
outsb
cmp
shlb
jns
or
gs
or
sub
cltd
cmpsl
cmp
pop
and
imul
lcall
and
cwtl
mov
sub
sbbb
int
mov
loopne
push
jbe
xor
pop
pop
push
aas
lahf
push
hlt
cmp
shlb
movsl
cmpsl
mov
sbb
loopne
ja
daa
lret
dec
inc
imul
mov
dec
cmp
and
or
in
mov
lock
sub
ss
pop
xchg
rcrl
mov
mov
repnz
cmpsb
leave
fidivl
das
shlb
std
or
addr16
ds
inc
jle
shll
imul
dec
adc
sub
stc
adc
xor
cmp
inc
pushf
mov
dec
adcl
push
push
mov
rorb
lret
push
subb
jmp
scas
cli
push
pop
ss
popf
pop
inc
mov
pop
cmc
lret
jle
loope
pushl
test
dec
add
pop
push
aam
iret
xchg
movlps
push
or
sub
es
xlat
scas
fildll
inc
add
jbe
mov
jge
mov
sbb
xchg
xchg
sub
xchg
pop
fcoms
cmpsl
mov
cmpsl
cmpsl
test
lods
lock
outsl
push
push
and
dec
je
mov
xchg
daa
shl
in
mov
hlt
fimuls
nop
into
mov
int
out
js
gs
fsubr
movsl
mov
lods
xor
dec
adc
mov
imul
out
jle
xchg
call
dec
mov
cs
dec
out
inc
add
leave
gs
stos
fmul
jns
lds
test
rolb
inc
jns
inc
dec
push
cmc
sub
xor
imul
mov
pop
les
ja
fwait
push
and
jp
mov
les
into
lret
push
rcrl
pop
adc
lahf
test
jmp
push
mov
cmp
mov
mov
or
or
pop
or
mov
or
push
fisubl
cmpb
ret
add
bound
mov
pop
sbb
lods
mov
xchg
int3
and
mov
pop
mov
xchg
pop
out
leave
inc
and
pop
xor
inc
xchg
sbb
mov
outsl
mov
jp
sub
sub
imul
andl
or
mov
xchg
jmp
and
pop
scas
xor
test
lds
paddsb
leave
cmc
pop
or
aam
cltd
popa
insb
mov
and
or
pop
ret
iret
and
cmc
jnp
pusha
es
xor
mov
mov
xchg
xchg
inc
out
adc
iret
mov
sub
mov
sub
pop
lods
mov
mov
clc
push
fwait
mov
sbb
les
xchg
movsb
sahf
adc
inc
testb
fs
ja
mov
lods
inc
cmp
jg
push
das
enter
adc
fldl
movsb
fdivrs
xor
mov
leave
aas
stos
shlb
inc
mov
mov
add
push
pushf
inc
lret
fmull
in
jae
sbb
and
imul
mov
int
push
in
and
or
ss
add
sbb
clc
adc
repz
clc
arpl
xchg
add
and
lret
icebp
push
stos
push
cvttps2pi
pop
push
xchg
xchg
aam
cld
mov
les
mov
xchg
dec
ja
add
push
fisubl
push
stc
mov
adc
xchg
xchg
enter
loope
adc
inc
nop
ss
push
dec
push
aas
dec
cmp
jl
jle
pop
cmp
dec
inc
cmc
xor
jo
lahf
inc
push
gs
insb
pop
mov
inc
push
jbe
lea
and
cmp
mov
adc
stos
push
repz
jmp
cmp
sub
add
push
sbb
or
xor
sbb
dec
xlat
popa
inc
jae
mov
xchg
mov
xchg
mov
pop
call
jmp
push
stc
push
test
pop
mov
inc
cmp
xchg
xchg
xor
push
sbb
mov
xor
aaa
clc
lock
and
adc
out
adc
mov
and
mov
scas
jbe
inc
mov
mov
mov
or
ret
filds
sahf
or
in
add
xchg
cmpsb
aaa
lahf
xchg
fcomip
int3
mov
xor
dec
iret
test
mov
rcll
xchg
imul
test
cmp
dec
aad
mov
icebp
loope
add
sub
mov
mov
jo
mov
cmpsl
xor
and
imul
sbb
lret
in
xchg
xor
adcl
mov
hlt
inc
sub
sarl
lret
cmp
sub
mov
xchg
je
lock
lods
loop
insl
adc
enter
adc
test
jae
push
outsb
add
jno
pop
pushf
xor
dec
mov
daa
adc
add
in
lcall
data16
mov
addl
in
and
adc
jo
ret
mov
loop
mov
sub
mov
xchg
rorb
ja
sarl
jp
lret
push
jno
push
lods
and
sbb
push
roll
es
lds
ljmp
mov
inc
adc
fs
mov
aas
mov
in
push
inc
mov
cmp
add
test
xchg
mov
test
push
fadd
cltd
pop
lcall
sub
cltd
push
and
jne
cmp
push
and
lret
ja
jecxz
jno
inc
cmpsb
mov
into
hlt
lret
cmpsb
xchg
jg
mov
imul
ljmp
ljmp
cmovns
hlt
loope
jg
mov
popf
cwtl
rol
and
cmp
xchg
rorb
mov
add
fchs
cs
pop
adc
xchg
sbb
pop
int
mov
es
jnp
aam
sub
push
jmp
dec
push
push
fsubs
in
ss
pop
adc
or
movsb
sbb
imul
mov
adc
es
and
jne
xchg
and
test
lea
cmpsl
cltd
in
jb
clc
push
test
push
dec
mov
jmp
loopne
jns
out
in
or
xor
out
dec
add
sub
xor
sub
jo
pusha
push
or
ds
addr16
push
aam
adc
pop
divl
in
cmc
push
adc
push
or
xchg
dec
test
shll
inc
lea
testb
mov
and
xchg
mov
push
mov
in
popa
sub
adc
lds
fucomi
add
dec
ds
fcomps
mov
pop
mov
jecxz
fwait
jl
popa
rorb
or
sub
xor
push
imul
cmp
jb
cmp
xor
adc
mov
add
mov
jmp
aam
xchg
cld
cs
jbe
dec
rclb
push
inc
inc
xchg
rorb
mov
clc
adc
xchg
cmp
mov
cmp
daa
outsl
fs
push
or
dec
and
js
inc
sete
inc
rcrl
xchg
inc
inc
icebp
pushl
dec
jp
xchg
mov
mov
push
into
mov
adc
mov
adc
adc
cmp
mov
xchg
dec
xchg
push
xchg
fst
xchg
push
cmpsb
lds
das
int3
cmp
xchg
fucomp
and
pop
idiv
dec
pop
ja
ja
es
stc
xor
inc
mov
pop
or
pusha
inc
stc
leave
cmpsb
xchg
je
popa
sti
mov
cmp
add
inc
pop
and
jo
je
add
dec
daa
shll
push
bnd
les
dec
popa
cmpsb
push
cmp
xchg
push
mov
out
cmp
xchg
mov
jns
push
mov
ret
cmp
aas
mov
adc
cmpsl
xchg
repnz
xor
cli
cmp
sub
push
mov
push
mov
and
xchg
aaa
inc
lds
inc
add
fisubl
inc
dec
mov
fsubl
inc
mov
test
scas
lods
lret
push
leave
mov
xor
mov
and
add
daa
test
les
push
xchg
xor
jmp
aad
les
je
popw
mov
and
pop
dec
sub
pop
aam
push
push
jb
incl
inc
cmp
dec
cmpsl
out
sbb
shll
sbb
cmp
scas
push
js
imul
or
hlt
cltd
xchg
ss
movsl
jnp
jnp
aam
mov
ret
pop
mov
inc
mov
xchg
stos
stos
push
mov
movsl
fdivl
cmp
and
in
adc
inc
inc
sahf
outsb
lds
mov
icebp
inc
mov
sti
or
adc
mov
push
or
aam
repnz
aam
xor
jle
xchg
cmp
pop
and
jecxz
pop
xor
leave
pop
cli
sbb
add
mov
mov
loop
test
test
sbb
dec
add
sbb
or
stos
push
sahf
adc
add
sahf
mov
xor
pusha
stos
push
icebp
pop
inc
icebp
mov
js
das
mov
or
cmp
and
das
sti
les
outsb
jo
adc
adc
movsl
or
out
cld
hlt
mov
cmp
pushf
lea
xchg
sub
adc
mov
pop
outsl
rorl
xchg
es
pusha
rclb
add
xchg
add
inc
xor
mov
das
rsm
andl
add
push
and
sbb
adc
cwtl
popf
pop
movsl
fistpl
jg
js
jo
cmp
incl
imul
imul
je
filds
add
divl
test
lds
inc
xchg
dec
sarb
mov
or
pop
jo
push
adc
mov
std
or
cmp
and
mov
addb
sahf
fcompl
sbb
push
ljmp
and
add
lock
js
and
inc
cld
and
js
push
pop
pop
and
lods
inc
int
ret
push
and
fsubrs
cmp
mov
insb
inc
xchg
jp
push
sub
jge
daa
cmp
adc
and
inc
pop
subb
sarl
frstor
lcall
mov
cwtl
sbb
jg
cmp
xor
mov
int
hlt
or
mov
push
sbb
xchg
push
add
xor
xchg
jne
frstor
insl
outsb
mov
roll
nop
add
mov
mov
out
outsb
adcl
mov
jl
xchg
pop
pop
lahf
mov
mov
js
mov
xlat
jae
call
enter
push
dec
add
inc
fnstsw
add
je
mov
mull
jle
add
jmp
test
cmpsb
sti
imul
xchg
out
std
pop
mov
adcl
mov
and
cld
cltd
inc
addl
mov
pop
add
push
fdivs
adc
mov
inc
cmp
iret
push
sub
push
cmp
mov
lds
mov
lcall
mov
outsb
mull
ss
aas
and
xchg
mov
sub
ret
fmull
bsf
in
lret
xchg
add
testb
aad
add
popf
cli
dec
je
rorl
xlat
jns
add
add
inc
nop
mov
inc
inc
adc
push
mov
push
jnp
fisttps
push
mov
stos
in
jnp
call
int3
inc
in
ja
test
add
push
inc
daa
adc
adc
ss
dec
mov
jo
xlat
mov
mov
add
std
add
cld
movsl
js
sub
jo
mov
and
mov
sbb
mov
pop
dec
les
mov
sbb
add
sbb
mov
pop
icebp
cmc
imul
out
mov
hlt
mov
ret
scas
dec
push
or
shl
hlt
add
sub
mov
das
add
outsb
out
add
pop
adc
jns
pop
mov
xchg
arpl
inc
jb
jmp
mov
adc
icebp
and
or
inc
xor
mov
add
dec
test
mov
cmp
cltd
mov
inc
adc
cmp
xor
ret
lds
xor
mov
fistpl
jae
jg
xor
xor
mov
in
or
mov
in
mov
pop
je
dec
xchg
mov
loop
xchg
stos
ret
test
jo
xor
xchg
ds
rcr
mov
lahf
jnp
lock
fwait
cmpsb
adc
push
hlt
sub
cmpsl
inc
sub
lahf
aas
loopne
icebp
add
jns
xchg
xchg
or
adc
icebp
or
dec
inc
shlb
xchg
dec
test
mov
fldl
add
mov
pop
jl
insb
ret
pop
and
inc
aam
xchg
cmp
es
repz
add
aad
adc
xchg
lds
sarb
or
aas
pop
orl
sar
call
sbb
pop
cli
popf
cmp
sar
scas
pop
ret
arpl
xor
outsb
dec
pop
and
subb
jge
sub
mov
pop
test
testl
movsb
pop
cmp
nop
ljmp
ss
push
sbb
jl
push
pushf
movsl
outsl
ret
aad
jl
adc
push
ljmp
xor
je
pop
or
xor
call
inc
cmp
mov
bound
xor
and
xor
ljmp
jg
adc
dec
icebp
mov
mov
sub
pop
cs
outsb
and
je
test
pop
xchg
add
cmp
stc
fldt
or
iret
mov
roll
push
mov
movsl
mov
push
jbe
in
lret
jns
flds
test
cmp
mull
mov
push
cli
fsubrp
pop
imul
inc
mov
gs
adc
insb
insl
sub
dec
mov
jb
cwtl
cs
xchg
or
and
mov
lods
aam
inc
mov
or
jns
pop
pop
or
pop
mov
lahf
mul
jo
cmp
add
add
sbb
out
iret
inc
repz
out
test
sbb
adc
scas
cmp
lcall
push
adc
jb
in
push
ficomps
call
xlat
cld
adc
iret
mov
or
pusha
dec
loope
rcrb
lods
push
pop
aaa
sub
or
jno
push
add
lock
fistps
or
mov
or
aaa
xor
jnp
movsb
pop
pop
lahf
sub
inc
lea
negl
add
lods
jb
adc
push
test
fwait
or
sub
inc
mov
sbb
cmp
cmp
push
bound
jo
sbb
add
sub
xchg
jb
sahf
sub
fdivrl
pushf
lahf
lock
or
andb
or
decb
aad
add
aam
sub
cmp
add
xchg
push
inc
xchg
or
movsb
test
fistpl
js
push
fistl
and
mov
mov
or
mov
pop
stc
sub
je
fcoml
daa
enter
aad
scas
pop
adc
mov
mov
insb
add
xor
mov
pop
mov
jb
jno
in
imul
ds
add
dec
sub
pop
repz
js
add
scas
test
sbb
or
inc
cmp
pushf
pop
push
sub
cmp
fisubrl
adc
xor
test
inc
gs
or
test
pop
daa
in
jl
sbb
mov
loopne
adcl
imul
clc
jo
mov
icebp
jno
cmpsb
aad
xor
add
adc
sub
cmp
scas
pushf
outsb
adcb
sub
mov
mov
inc
mov
loope
andb
ljmp
loope
inc
dec
fmull
nop
cmp
nop
aas
cli
xchg
out
mov
bound
shlb
fldl
in
loope,pt
mov
push
das
je
sub
outsb
add
lea
sbb
push
in
sbb
pop
loopne
shll
pop
shll
fadds
mov
jp
popa
cld
xchg
jecxz
and
popa
push
dec
mov
inc
sbb
pusha
stc
stos
into
push
pop
jo
dec
jmp
in
and
mov
jno
push
sbbl
push
or
push
std
sahf
inc
cmpsl
lahf
sbb
insl
jno
and
mov
clc
shl
pop
inc
je
sub
stos
enter
mov
dec
mov
jl
ljmp
mov
testb
and
mov
jno
cs
or
adc
scas
mov
or
test
sbb
push
push
pop
lock
test
dec
arpl
movsl
pop
sbb
je
mov
adc
jne
fdivr
test
js
xchg
cmp
or
int3
pop
stc
pop
imul
test
out
sbb
dec
pop
or
jle
icebp
pushf
shl
hlt
mov
loop
sbb
add
and
shll
jnp
shrb
add
adc
jp
mov
sub
mov
and
fwait
pop
cmp
pop
inc
jge
sbb
shrb
push
subl
xchg
sbb
lret
hlt
sub
mov
int
scas
pop
push
loopne
push
xor
pop
popf
push
inc
sbb
add
mov
femms
cmpsl
loopne
call
sbb
inc
pop
cmp
push
fstpl
loop
fildl
movsb
push
xchg
in
je
or
movsl
pop
sub
add
adcl
adc
jmp
adc
movsl
leave
repnz
xor
sub
inc
dec
sbb
sbb
sahf
and
mov
mov
jg
sbb
leave
andl
sub
lret
out
sub
mov
imul
bound
ret
inc
mov
idivl
jmp
test
cmp
ficomps
mov
stc
arpl
or
inc
lcall
mov
xchg
adc
fs
aas
notb
and
pushf
ds
mov
sbb
loop
ret
repz
push
stc
adc
add
sti
jle
sub
int3
in
test
and
hlt
fwait
dec
frstor
xor
pop
push
mov
mov
in
push
sarl
sbb
dec
shll
push
stos
es
or
mov
cmp
xchg
xor
inc
sub
movsl
repz
jge
xor
dec
inc
popa
dec
pop
andps
inc
addb
lock
bound
lds
inc
vpperm
lock
js
and
in
and
int3
push
xchg
jmp
mov
xor
dec
mov
inc
and
outsb
es
and
inc
or
scas
push
shl
dec
mov
fs
jno
icebp
sbb
mov
push
and
mov
xchg
out
in
in
xor
cmp
jecxz
sub
into
pop
clc
cmp
stos
insl
faddl
dec
aad
call
push
and
aam
das
std
rcl
sbb
sub
mov
jno
add
repz
push
js
dec
push
inc
xchg
mov
cmp
mov
sbb
scas
dec
add
or
cmp
cmpsl
adc
mov
adc
cmp
dec
sub
sub
repz
lea
jns
test
clc
push
jecxz
pop
fwait
std
mov
jae
xor
dec
bound
scas
and
lahf
cmp
adc
nop
orl
icebp
jg
not
test
jne
mov
pop
insl
add
mov
notl
outsl
and
push
inc
xor
pushf
pop
xchg
jns
sbb
insb
loopne
cmp
sub
mov
sbb
push
shrl
movsl
adc
js
push
das
and
xor
dec
fcmovnbe
mov
es
aam
movsb
les
insl
mov
add
mov
iret
mov
inc
jl
cmp
ss
rorl
adc
ret
pop
and
sbb
push
jb
lret
icebp
cmp
mov
hlt
mov
test
sbb
xor
push
cmpsl
mov
adc
jecxz
inc
leave
test
lds
icebp
mov
movsl
pop
pop
xchg
fmull
fnstenv
jecxz
xor
add
inc
mov
inc
imul
dec
mov
mov
loopne
push
js
mov
push
dec
push
lods
push
xchg
fdivrs
inc
or
pop
jb
pop
sub
push
mov
clc
and
cmp
out
mov
push
dec
jae
inc
mov
repnz
pop
popa
pusha
int
nop
js
aad
inc
das
push
test
push
and
fildl
jmp
pop
enter
rcrb
gs
lods
jno
rorb
into
sbb
and
xor
das
aad
or
xor
test
loopne
jno
hlt
xchg
imul
mov
jb
pop
or
fstpl
push
mov
pop
add
iret
imul
pop
sarb
fldt
stc
sub
insl
imul
gs
pop
rcll
and
push
pop
ja
mov
pop
and
js
sbb
jnp
loop
jbe
and
int
hlt
sbb
or
pop
adc
add
sub
repz
lods
ljmp
les
xchg
std
jge
or
pop
test
push
gs
sarl
mov
xchg
lock
rolb
subl
or
imul
and
das
adc
es
cmpsl
xchg
js
jno
xor
idiv
adc
test
sbb
sahf
or
jmp
jae
xor
pop
dec
mov
sbb
mov
out
or
inc
test
rorl
xor
mov
jne
push
gs
dec
mov
les
nop
into
push
sbb
cmp
popa
adc
mov
icebp
subl
js
push
into
lds
adc
sbb
sbb
xor
mov
and
push
out
adc
out
and
mov
xlat
fists
xchg
enter
cmp
or
mov
and
aam
daa
pop
aad
cltd
rcrb
aaa
xor
add
push
call
mov
inc
fs
insb
and
cmc
test
sbb
lds
lret
daa
loopne
clc
add
sbb
xor
xor
push
push
add
add
cmpb
mov
fistpll
mov
cmp
xchg
fs
push
mov
sub
movsb
add
dec
sbb
push
pop
stos
arpl
inc
psubusw
lods
cmp
cmp
in
sub
pop
js
and
push
adc
cmp
stc
dec
push
push
test
jecxz
sbb
mov
jno
movb
lret
xor
adc
fcoms
sbb
sbb
icebp
arpl
sahf
iret
cwtl
sti
mov
xor
xor
arpl
js
outsb
movsb
and
outsl
adc
mov
jb
jnp
adc
or
test
aas
xchg
sub
loop
xor
inc
jno
bound
jbe
arpl
mov
out
ffreep
jno
mov
mov
shlb
test
adc
push
loop
mov
jo
dec
or
dec
xlat
dec
cltd
mov
ficomps
loopne
clc
jge
aad
add
popa
inc
mov
test
mov
and
add
adc
imul
jge
in
repz
in
pop
push
jp
bound
rcll
push
jb
decb
int
sbb
dec
popf
in
rcrb
nop
cwtl
js
stos
repnz
sbb
add
cmpsb
lahf
aaa
scas
test
jno
mov
cs
xor
adc
mov
dec
mov
test
pop
push
inc
testb
or
in
xchg
inc
push
lods
in
arpl
orb
mov
or
fistps
popf
and
add
or
shrb
mov
pushf
rcrb
test
fsubl
adc
outsb
mov
push
ljmp
sbb
test
sahf
and
aas
mov
sub
mov
inc
pop
insl
mov
and
sbb
fsubrl
xchg
icebp
and
jo
test
adc
mov
xchg
add
jo
lds
sbb
movsb
and
dec
mov
or
pop
add
data16
xchg
bound
mov
cs
jg
pusha
mov
ds
fcmovb
mov
pop
push
sahf
push
sti
xor
xchg
popa
mov
inc
aaa
int3
dec
cmp
jnp
jns
push
jnp
cmp
imul
mov
mov
daa
sub
lret
mov
pop
cmp
subl
or
neg
frstor
popa
in
icebp
mov
rolb
sbb
rolb
jae
lods
ja
lock
sbb
out
ret
popf
sub
icebp
xchg
iret
mov
imul
mov
pushf
lret
loopne
xchg
jle
scas
xchg
imul
loope
out
sub
dec
out
je
loop
popf
cmpsl
lock
test
mov
sbb
push
lcall
out
mov
and
adc
outsb
repnz
and
out
dec
repnz
mov
jo
sub
mov
loope
cmp
or
lret
cmpsl
push
pop
mov
sbb
movsb
or
aam
ret
mov
cmpsl
xor
mov
cmp
jg
stc
mov
or
mov
sub
jbe
call
mov
adc
mov
mov
jl
pop
movups
lds
xor
pop
mov
pop
push
pop
aas
insl
or
insl
mov
xor
push
iret
insl
sub
test
cmp
ficoms
sub
fidivl
pop
sub
mov
mov
lret
mov
test
xchg
jle
push
ret
icebp
mov
test
cli
jno
and
mov
inc
outsb
lods
add
push
jecxz
push
xor
roll
xchg
cmc
lods
subl
mov
push
and
popa
or
push
loopne
or
loopne
inc
mov
pop
clc
push
sbb
add
mov
stos
xchg
xchg
mov
and
push
and
out
pop
add
pop
adc
outsb
mov
cmp
cmc
negl
rcll
js
aaa
or
dec
sub
dec
pop
and
pop
sbb
xchg
sbb
pop
mov
pop
shll
and
aam
push
mov
popf
out
sub
xchg
dec
fwait
jl
mov
mov
mov
gs
test
sti
out
jg
pop
repnz
stc
or
inc
pop
add
jbe
sbb
or
push
jns
lods
lds
rclb
idivb
push
test
insl
jp
cli
xchg
add
dec
js
adc
jmp
rcrb
aam
pusha
xchg
mov
or
sbbb
jno
inc
movb
les
jle
adc
xor
mov
enter
int
fdivs
or
pop
jmp
test
and
enter
sarb
and
popa
or
xchg
movl
js
jecxz
pop
sub
xchg
ss
cmp
mov
jne
and
bswap
mov
mov
lret
or
ret
sbbl
fmull
push
mov
fists
jecxz
js
sub
jl
es
pop
adc
push
jle
mov
sub
repnz
push
add
dec
xor
push
mov
mov
mov
sbb
out
mov
loopne
jmp
dec
jne
dec
js
push
ds
sub
xchg
sub
jbe
push
inc
addr16
fimull
mov
inc
mov
aad
xor
jle
and
dec
add
lods
cmc
fwait
dec
mov
and
jnp
and
cmp
flds
cmp
mov
arpl
jo
jg
mov
and
stos
mov
push
pop
adc
adc
jecxz
inc
cmp
add
xor
mov
inc
out
dec
insl
fwait
push
xorl
lret
iret
mov
and
mov
stos
add
inc
jb
xlat
adc
jne
pop
dec
and
arpl
aas
loope
fldl
shrb
or
push
sbb
testb
xchg
push
cli
out
jno
xor
fcomps
adc
les
scas
add
daa
push
xor
fldenv
outsb
or
mov
add
jo
out
flds
jle
pop
dec
add
mov
xlat
xor
mov
mov
add
inc
nop
and
testl
cmp
xlat
push
mov
mov
add
aam
xchg
mov
shrl
jo
scas
aaa
or
add
insl
aas
fstpt
push
aad
sub
ja
pop
jge
add
mov
test
xor
fimuls
pushf
arpl
shll
stos
ror
aad
jge
scas
and
adc
lods
sub
hlt
fimuls
sbb
repz
sbb
fldl
int3
push
xchg
inc
cltd
lcall
push
adc
lcall
fldl
daa
inc
mov
push
aas
sbb
pusha
clc
adc
dec
icebp
jecxz
or
fwait
mov
cmc
ljmp
xchg
repnz
adc
shlb
jo
fnstsw
push
cltd
jno
or
jne
nop
out
jle
jecxz
lret
mov
xchg
sbb
add
pop
cmp
sahf
cmpsb
mov
add
jns
arpl
mov
insb
inc
jmp
push
sbb
jno
xorl
adc
mov
gs
mov
js
lods
push
adc
and
incb
xor
push
lock
or
pushf
inc
cmpsl
mov
inc
add
mov
push
test
xchg
push
inc
xor
mov
lahf
fists
stos
imul
imulb
sub
out
mov
push
in
mov
xlat
arpl
lahf
pop
lds
jecxz
and
pushf
mov
dec
cmpb
mov
iret
inc
ret
or
pop
dec
cmpsl
pusha
movsl
dec
jg
out
sub
xchg
cmc
ficoms
sbb
movups
dec
xor
jae
mov
mov
idivb
xchg
pop
lock
or
je
sti
mov
adc
xlat
outsb
adc
out
jbe
pop
xchg
es
push
pop
loopne
in
and
xor
or
jb
inc
xchg
sub
xor
adc
inc
inc
pop
call
pop
cmpsb
fs
push
and
sbb
adc
inc
lret
cmp
icebp
dec
push
in
mov
sbb
jle
loopne
and
push
jne
aam
inc
call
dec
lods
hlt
fildl
and
xor
inc
stc
jge
and
sahf
inc
test
loopne
push
jb
mov
inc
xchg
push
cmp
mov
push
cmp
sahf
fisubs
inc
pop
insl
mov
jmp
jmp
insl
mov
cmc
and
inc
pop
inc
inc
adc
dec
xchg
push
lock
sarl
loopne
push
and
pop
bound
or
mov
outsb
jne
and
addb
cmp
repnz
mov
add
cld
mov
iret
loopne
pop
and
jmp
bnd
loope
fnstcw
jle
cmp
push
ret
mov
inc
int
iret
dec
jne
pop
pop
aaa
mov
notl
sbb
mov
and
repz
mov
pop
in
aas
mov
and
jno
sbb
cli
xchg
xchg
rorb
fcmovnu
inc
sbb
inc
popf
repnz
push
pop
mov
scas
and
and
rcrb
mov
jp
xor
push
or
pop
fs
and
into
cmp
popf
and
jb
jle
jg
mov
xchg
sbb
xorl
pop
hlt
in
adc
jnp
xor
push
xchg
jle
pushf
jne
or
mov
mov
xor
mov
arpl
push
and
dec
mov
pop
jbe
adc
idivb
sub
xor
sbb
pop
adc
clc
mov
mov
sbb
lods
icebp
mov
fstl
shr
sub
test
cld
sub
mov
sti
push
fnstenv
push
sub
push
insb
push
sahf
nop
adc
dec
inc
lea
xchg
dec
cli
mov
aam
mov
movsl
xorl
lods
push
iret
and
rcrb
fs
loope
cmp
jne
mov
dec
lahf
dec
pushf
imull
cs
adc
and
xchg
add
sbb
sbb
pop
leave
xchg
and
cvtpi2ps
mov
popa
in
ss
adc
adc
mov
push
add
mov
pusha
mov
pop
cmp
inc
pop
pop
fadds
js
xchg
aam
mov
repnz
jns
sarl
jo
test
cmc
mov
dec
inc
fiadds
xchg
addr16
sahf
scas
or
and
add
movsb
stc
imul
ja
inc
push
repz
mov
jno
incb
lds
nop
loopne
ret
sub
pop
lock
mov
fsubrl
jno
nop
cmp
inc
mov
shl
leave
sti
mov
daa
xchg
sub
stc
push
pop
loope
add
lds
call
dec
mov
sub
mov
xor
test
cmp
pop
sbb
clc
adc
in
mov
add
fcompl
std
or
xor
outsl
add
push
sbb
sub
stos
add
iret
out
out
xchg
cmp
lea
inc
iret
pusha
fadds
inc
sbb
das
push
fmull
jae
dec
popa
cltd
add
das
pop
rorb
pushf
fs
negb
mov
cmp
pop
inc
add
shll
lock
sbb
call
jp
mov
jmp
cltd
push
push
sbb
cmp
loop
pop
inc
push
lret
xchg
jnp
dec
adc
add
into
outsb
out
mov
lret
mov
adc
mov
adc
test
fistps
sbb
bnd
loop
outsl
adc
aas
shll
int3
test
or
add
dec
arpl
inc
leave
out
mov
push
add
into
cmp
mov
push
xor
dec
faddp
sahf
xchg
adc
mov
loopne
pop
mov
inc
les
mov
loopne
test
cld
lret
sbb
hlt
in
inc
mov
add
add
xor
rcr
cmp
push
rolb
or
xor
xchg
outsb
xchg
pop
clc
orl
cmp
mov
subb
lcall
xchg
std
mov
sbb
js
inc
push
sub
fidivs
push
mov
icebp
or
data16
xchg
xchg
aad
cmpsb
rcr
xor
and
dec
mov
test
sub
mov
std
mov
test
fiaddl
jge
adc
inc
shlb
dec
mov
fimuls
ficoms
test
icebp
mov
push
pop
into
sub
mov
xchg
cmp
imul
jno
push
lahf
icebp
int3
js
lock
and
push
or
jmp
and
cmpsb
push
mov
into
add
xor
cli
popa
xor
rep
sub
incb
insb
sub
jmp
fisubl
mov
into
mov
ljmp
sbb
sahf
loope
or
sub
out
das
adc
or
lahf
mov
inc
cmp
mov
jge
push
and
sbb
jbe
xchg
cmpsl
mov
repz
shr
stos
mov
pop
loop
movsb
push
scas
test
push
ret
outsl
mov
xor
lret
dec
lods
inc
push
sub
cmp
aas
adc
sbb
xor
stc
fsubl
ljmp
repnz
cmpsl
add
add
and
ret
outsb
les
scas
repz
or
mov
sbbl
xchg
cmp
mov
push
jb
das
jecxz
add
sbb
sbb
xor
mov
loop
push
int
mov
sub
push
mov
xor
mov
fdivp
xorb
push
mov
scas
arpl
bound
sbb
dec
fimuls
inc
movsb
sub
cmp
in
mov
movsl
add
into
add
jnp
addl
jl
hlt
loope
ds
mov
lea
clc
ja
mov
jae
pop
inc
xchg
push
fcmovnb
cld
inc
lods
inc
movsb
rorb
das
xchg
sbb
xor
out
dec
jnp
adc
int
test
lods
leave
xor
pushf
jge
add
mov
dec
insb
fsts
sbb
iret
push
xor
nop
adc
inc
xor
test
ret
jno
or
pop
pop
pop
popa
adc
lods
je
rcr
in
jb
test
fcomi
scas
stc
js,pt
sub
shlb
hlt
outsl
add
notl
inc
jecxz
cld
out
xor
mov
test
jb
jl
inc
ret
loop
and
adc
ret
xchg
xor
sub
leave
stc
sub
popa
repz
lock
mov
sub
aaa
mov
xchg
sbb
inc
push
cmpsl
add
fs
sub
jbe
cmp
jo
add
sub
cmc
mov
fildll
cmpsl
cltd
sbb
sbb
cmp
repz
pop
xchg
test
sahf
rol
dec
pop
call
fisubrl
cltd
mov
outsb
inc
aas
dec
xchg
lods
sar
test
inc
in
nop
cmp
adc
mov
inc
dec
inc
push
adc
dec
mov
movsb
js
pushf
sub
inc
xor
mov
sbb
mov
add
xchg
xchg
dec
dec
add
xor
das
mov
test
push
gs
cmpsl
repz
fsubrl
or
xchg
inc
adc
cmp
aad
adc
push
shll
adc
fiaddl
ja
fstpt
movsl
lds
into
xor
fwait
add
rol
loopne
lret
test
sub
fldenv
shrb
ret
mov
jnp
jp
mov
addr16
sarb
push
push
sbb
push
aam
jo
stos
lea
adc
icebp
mov
fwait
daa
and
cmp
xchg
sub
test
mov
shlb
mov
pmaxub
cwtl
pusha
cwtl
jmp
out
nop
mov
movsl
xor
gs
arpl
inc
push
and
mov
pusha
pusha
hlt
shl
jno
lods
add
adc
pop
xor
loop
cmc
mov
frstor
sbb
lock
cmp
loop
out
xor
dec
int
sub
and
fwait
sub
stos
repz
jmp
fidivrs
xchg
add
pop
push
push
xchg
xor
inc
pop
mov
call
dec
fs
int3
test
and
sub
scas
movsl
mov
add
bound
lret
shl
sahf
push
int
inc
jno
ja
les
das
and
add
mov
arpl
mov
sub
outsb
fdivrl
jns
xlat
dec
leave
fsubrl
dec
jle
sub
lods
lea
rcrb
xlat
lcall
inc
adc
sbb
pushl
test
mov
fsubp
adc
hlt
sub
addps
rcrb
inc
fdivl
cs
inc
test
cltd
lahf
add
enter
in
and
dec
lds
or
lahf
dec
pop
and
mov
ja
add
xchg
adc
out
mov
repnz
xlat
or
fstl
xchg
test
out
das
xor
sub
adc
testb
sti
loopne
and
mov
cwtl
sbb
popa
push
sbb
ret
movsb
imul
push
and
or
lret
add
popl
pop
inc
fcoml
repnz
mov
ljmp
fcompl
insl
mov
jo
or
add
sub
add
loopne
mov
mov
jp
jmp
std
inc
push
lock
pop
hlt
add
in
lods
notb
cmp
cmpsl
sbb
adc
aaa
es
xchg
and
push
pop
mov
xor
mov
fnstenv
sub
mov
mul
dec
lea
mov
xchg
or
cmc
into
jl
xlat
orl
mov
in
push
and
nop
call
iret
in
xchg
push
dec
pop
in
dec
mov
push
pop
and
jbe
mov
call
mov
add
jae
push
sbb
icebp
cmp
xor
jno
aam
sbb
mov
add
xor
addb
iret
mov
out
ret
icebp
outsl
add
add
sti
xchg
and
sahf
mov
cwtl
pop
shll
jnp
shll
je
arpl
xor
loop
mov
cmpsl
aam
adc
not
add
fwait
cmp
int3
lahf
adc
adc
push
sbb
xlat
je
fsubr
jge
negl
mov
test
push
pop
dec
pusha
push
sbb
lcall
test
xor
xlat
adc
in
jns
call
push
aam
faddl
or
xor
popf
stos
in
adc
pop
rcrl
sbb
fldenv
cmpsl
mov
push
mov
cli
push
das
inc
popf
cmp
test
pop
int
mov
inc
iret
cmp
sub
adc
add
inc
call
push
jg
addr16
jno
push
xchg
mov
jno
jb
adc
orl
je
and
gs
add
adc
in
pop
fsubrs
shlb
sub
adc
mov
jecxz
sti
addb
nop
scas
add
mov
push
mov
jl
ret
mov
add
dec
jbe
xchg
jge
lods
add
xor
jbe
clc
sub
cld
add
adc
mov
sahf
mov
into
adc
push
inc
cmc
sbb
imul
sbb
adc
push
add
xor
push
mov
in
out
jp
mov
adc
add
loop
mov
mov
mov
rep
adc
pop
lods
or
daa
cmp
dec
mov
rol
inc
cmp
hlt
add
arpl
js
dec
dec
push
fldcw
sub
push
dec
mov
adc
pop
addl
mov
in
and
sbb
cld
pop
jge
addr16
movsbl
fucomip
int3
push
adc
inc
add
add
cmp
mov
add
mov
sbb
rorl
test
repnz
in
pop
outsb
xchg
out
inc
mov
shll
andb
sub
lock
lods
jo
shrl
dec
lcall
rolb
xchg
pop
mov
mov
pop
push
or
mov
pusha
dec
add
jecxz
std
push
das
xor
loope
mov
rcrb
hlt
test
xchg
jae
pop
pop
rolb
mov
ret
sub
lret
or
push
jge
mov
or
dec
mov
shlb
xor
mov
sub
xchg
sub
xorl
test
inc
push
pop
icebp
ds
gs
push
aad
lock
in
loopne
pop
sarb
xchg
push
adc
mov
push
in
push
or
cmp
mov
in
add
push
sbb
test
fdivs
dec
add
jns
and
or
mov
xchg
sbb
insl
add
jo
pop
gs
maxps
fisubrs
mov
int3
ss
mov
cmc
push
add
xor
fdivrl
mov
push
sbb
iret
sbb
mov
fistl
add
enter
mov
shrb
jg
xor
and
add
out
or
cmp
adc
outsb
aam
ret
lahf
rolb
movl
inc
inc
jge
les
pop
imul
inc
lods
push
in
fs
flds
lahf
insl
dec
inc
adc
bound
mov
mov
jbe
mov
repz
imul
jge
dec
out
fstpt
sub
test
pusha
cmp
cmpl
hlt
dec
lods
test
push
scas
int3
mov
daa
ljmp
movl
nop
push
cmc
mov
int
and
or
and
jmp
dec
push
mov
inc
adc
into
call
pop
pop
xchg
add
dec
mov
push
call
nop
cmp
outsb
xor
or
and
cmp
xor
xor
pop
in
lss
or
mov
int
shl
sub
mov
jnp
rcll
js
pop
dec
xor
jns
mov
lret
mov
inc
addr16
cwtl
jns
cmp
js
test
push
mov
int3
add
js
or
or
mov
add
or
adc
or
cmc
push
mov
inc
xor
inc
ss
lcall
dec
pop
mov
insl
fisttpl
cmovl
lock
insl
pop
mov
and
bound
push
mov
sub
push
sub
push
movsb
insb
or
int3
repz
mov
xor
lds
mov
int
jno
lock
pop
sub
pushf
mov
rolb
stos
push
adc
adc
dec
jo
push
fwait
sub
stos
fsubrs
pushf
mov
or
mov
add
cmp
outsl
mov
roll
ss
lcall
sub
mov
xchg
dec
xchg
outsb
add
xor
xor
lock
add
ljmp
cs
aad
faddl
dec
mov
jno
sarb
icebp
or
shl
ja
push
dec
xor
push
and
ret
pop
stc
int3
push
or
dec
add
push
sub
xor
fistps
lahf
mov
and
push
cmp
repnz
dec
adc
xor
sarb
outsl
mov
dec
loopne
adc
mov
adc
jns
mov
shll
rclb
inc
imul
outsl
fs
xchg
adc
xor
iret
sub
dec
or
sbb
call
aad
mov
mov
gs
pop
out
shrb
loop
lods
mov
loope
insl
add
mov
dec
jg
mov
filds
leave
mov
jne
sbb
pushf
xchg
sbb
xchg
jnp
sarl
and
and
sub
aaa
arpl
fldcw
inc
cmp
mov
lcall
sub
mov
inc
jle
cmp
mov
jbe
add
lret
xchg
test
inc
loop
and
aam
jge
mov
mov
pop
dec
les
js
or
cmp
leave
sub
fcoml
dec
mov
xchg
in
shl
cmpb
out
mov
in
xor
fld
ss
stos
dec
std
mov
pop
imul
inc
pop
jg
and
rcrl
jl
push
push
mov
adc
jl
add
sub
lock
inc
sub
jmp
psrad
shlb
fimuls
aas
pop
cmp
int
push
lret
lea
mov
and
adc
pushf
inc
push
mov
mov
fldenv
push
dec
je
xchg
lock
roll
jl
mov
lods
into
or
mov
xchg
xor
sub
hlt
je
dec
xchg
or
gs
mov
adc
popf
lds
xor
in
mov
rolb
loope
out
and
shlb
xor
gs
push
pop
xchg
out
mov
sbb
and
stos
orl
rorl
jle
imul
jb
test
call
loopne
movsb
mov
pushf
dec
fadds
test
jge
mov
andl
mov
jl
testb
mov
mov
jge
dec
sub
pushf
pop
arpl
inc
add
sub
in
sti
cld
pop
repz
mov
pop
lods
pop
sub
scas
add
outsb
dec
mov
repnz
leave
int3
mov
jnp
daa
adc
pop
test
mov
rcr
add
rcll
shrl
or
dec
shr
mul
sbb
adc
add
xor
fwait
and
adc
daa
mov
std
in
jo
sbb
stc
je
push
xchg
xor
dec
xchg
mov
jle
jl
out
call
inc
int3
adc
and
jb
rcll
push
scas
jl
jbe
into
mov
lods
dec
mov
rorb
pop
lret
andb
inc
ja
mov
or
or
aad
insl
push
pop
test
sub
and
push
or
mov
pop
xchg
andl
in
mov
in
or
insl
xor
pusha
or
jl
ds
or
comiss
jp
xor
cmpb
sahf
int
repz
xchg
sbb
outsb
into
imul
mov
add
sbb
aaa
inc
sarl
xor
jmp
scas
fcomi
mov
enter
and
imul
aas
fst
mov
jecxz
sub
call
jl
test
mull
xchg
push
inc
adc
dec
xchg
cmp
inc
and
jae
push
clc
clc
repnz
dec
inc
mov
xchg
xor
dec
xchg
and
mov
dec
xchg
je
push
inc
or
dec
pusha
mov
xor
lcall
sbb
pop
or
inc
jecxz
sbb
inc
orb
sbb
pop
icebp
daa
out
sti
imul
inc
push
sbb
sbb
sub
jp
inc
adc
aaa
cmpsl
pop
orl
ja
xor
add
fld
mov
sbb
mov
loopne
jnp
dec
ljmp
mov
mov
ja
ret
xor
xor
arpl
mov
inc
cmp
nop
popf
adc
sbb
jae
hlt
push
enter
push
sub
sbb
pop
aad
mov
sbb
arpl
push
adc
inc
add
adc
addl
xor
or
shl
repz
xchg
leave
xchg
mov
test
sarl
dec
mov
dec
lcall
test
and
jne
pop
fcompl
jp
jb
pushl
cmc
inc
inc
repz
mov
sub
testb
lahf
mov
sub
cmp
pusha
push
dec
js
sti
cs
fcoml
jne
push
test
and
and
and
pop
or
imul
inc
adc
scas
fldenv
out
sbb
stc
mov
mov
and
test
insl
repz
movsb
dec
mov
inc
mov
adc
rcll
icebp
cwtl
sub
sub
es
loop
cmp
sahf
adc
int3
int
xchg
push
push
aaa
fadds
mov
mov
mov
push
in
xchg
pop
pop
fiaddl
movsl
mov
cmp
cmp
pusha
xchg
add
xchg
sbbb
pop
aaa
push
dec
mov
push
jl
push
push
movsb
fists
xchg
aaa
mov
mov
rcrl
stc
rolb
bound
loopne
fcmovnbe
adcb
loop
pushf
cli
and
enter
movsl
inc
jg
jb
sbb
scas
add
test
cmp
mov
jne
inc
jecxz
mov
mov
cmp
cwtl
and
cmp
cmp
cwtl
int
push
lahf
push
mov
repnz
or
dec
out
in
or
std
lds
fidivrs
pop
ficomps
mov
mov
adc
cmp
sub
sub
sub
mov
rorb
test
pop
push
pop
adc
push
mov
sub
mov
lods
nop
push
pop
insb
jo
dec
push
sub
xchg
adc
sbb
and
sub
sbb
pop
pop
inc
push
pop
pop
sbb
xchg
dec
enter
push
loopne
shlb
mov
add
pop
lret
or
mov
bound
dec
sbb
xchg
es
pop
cmpsb
and
pop
or
stos
sbb
inc
mov
mov
aad
fistpll
xor
fnstsw
dec
xchg
sarb
aad
push
fdivs
push
jne
mov
lock
into
movb
andb
fcompl
jae
leave
xor
andw
pop
cmp
jne
mov
cmpsb
es
in
sbb
push
push
jecxz
ss
xorl
ja
jecxz
dec
lds
dec
clc
leave
cwtl
loop
mov
or
sub
dec
dec
sbb
xchg
and
cmp
cmp
hlt
mov
sbb
adc
sarl
mov
inc
hlt
shll
out
ja
out
push
or
addps
xchg
mov
jg
popf
or
jae
je
mov
in
loop
cmp
and
or
push
mov
aas
shl
mov
loop
dec
add
out
sub
sub
aas
fisttps
sbb
aam
cmp
push
das
lds
jecxz
sbb
in
out
fucomi
bound
fcoml
mov
mov
push
test
pop
xor
stos
inc
mov
mulb
subl
in
dec
xor
xchg
xchg
insb
mov
push
lcall
cld
test
popl
repz
push
inc
aaa
jl
ret
mov
fldcw
xor
pop
pop
in
dec
adc
lock
xchg
insb
loopne
mov
xor
inc
call
imulb
mov
flds
shl
fimuls
cmpsl
int3
movsl
push
orl
aam
loop
mov
outsl
std
xor
add
int3
and
mov
xlat
adcb
adc
add
aas
out
mov
lret
loop
fcoml
ja
add
aaa
jnp
dec
push
mov
ret
lods
cmpsb
in
cmc
test
add
test
sbb
fmuls
or
mov
call
push
rclb
loop
jmp
xchg
pop
cli
icebp
aad
cli
add
cmp
lahf
shl
mov
aas
lcall
rorb
hlt
mov
popf
xor
loope
jp
out
mov
add
dec
lahf
dec
add
sbb
cs
add
pop
ret
fwait
decb
jle
xchg
jno
inc
sbb
jecxz
xor
je
sub
fs
fistpl
pop
dec
xchg
pop
data16
add
push
jae
js
add
jno
pop
cmp
and
sbb
pop
or
push
xchg
cmp
insb
add
pop
rol
aad
loope
dec
jg
sbb
test
jp
xor
or
pop
pop
xor
rclb
inc
dec
mov
push
mov
pop
jo
push
adcb
inc
inc
ror
das
inc
std
sbb
in
loop
push
cmp
xchg
sbb
mov
jecxz
mov
add
sbbl
int3
jbe
jno
popa
ret
pop
dec
sub
aam
sahf
imul
pusha
insb
mov
pop
xor
or
mov
mov
adc
xchg
ljmp
xor
hlt
inc
mov
or
dec
adc
mov
test
sbb
cmpb
daa
pop
daa
adc
test
sahf
and
inc
cmp
pusha
xchg
lock
jns
ret
adc
pushf
pop
push
cwtl
jecxz
mov
lods
sub
clc
xor
or
or
repnz
mov
idivb
fdivrs
leave
sbb
fcomps
sub
jle
in
mov
xor
sbb
lea
xor
cmpsl
mov
xor
xor
clc
fcompl
stos
pop
add
adcl
lds
push
pop
cmp
sub
adc
lods
mov
push
dec
sbb
rol
out
mov
push
push
fiaddl
ss
dec
jno
std
imul
push
mov
lea
and
jmp
test
sub
dec
inc
enter
sti
je
jne
mov
and
and
test
jmp
rcrl
jp
push
jo
and
push
imul
adc
or
xor
push
add
leave
mov
sahf
or
inc
mulb
add
xchg
cmp
adc
cmp
insl
cmp
sub
jg
xchg
mov
mov
pusha
xchg
and
dec
mov
jb
int3
and
imull
test
cmp
dec
and
mov
and
loope
push
push
insl
enter
mov
add
leave
int
mov
push
mov
dec
mov
js
push
or
xchg
mov
divl
stc
mov
inc
add
sub
dec
pop
sbb
loopne
rcrb
cmp
jg
dec
sub
adc
imul
add
jno
imul
adc
sbb
sbb
sbb
aaa
popf
sub
stos
aaa
test
mov
pop
push
sbb
aam
ret
ja
pavgb
sbb
adc
jl
test
std
mov
adc
in
jl
mov
leave
cmp
pop
and
in
shll
pop
les
aad
mov
leave
add
jno
cmp
loopne
sbb
push
push
ret
pop
lock
mov
mov
std
adc
daa
add
sbb
jecxz
enter
testb
mov
mov
inc
scas
xor
xlat
xchg
mov
int
call
sbb
sub
mov
cmp
loopne
mov
pusha
shll
fisubs
ret
ret
in
or
inc
loopne
out
stos
adcb
push
push
adc
pop
imul
mov
inc
hlt
gs
gs
fsts
cmp
cmp
outsl
pusha
dec
nop
pop
rcrl
fidivl
jmp
add
mov
sbb
add
mov
xor
jmp
les
dec
hlt
ret
rcrl
rolb
sbb
ss
shrb
jo
in
jne,pn
call
mov
std
fnstcw
sbb
xchg
ss
sbb
mov
inc
ds
xlat
test
xor
das
in
test
jmp
and
fiaddl
adc
sbb
in
cld
mov
adc
jns
push
push
pop
aas
xchg
lods
push
sbb
push
adc
mov
mov
adc
jl
xchg
iret
dec
and
gs
jo
push
or
adc
ret
imul
pop
test
lods
pop
and
fadd
cmc
call
jmp
add
ret
push
mov
pop
pop
mov
xlat
push
add
and
insb
add
in
cwtl
mov
xlat
mov
or
jo
mov
inc
fs
bound
movsb
leave
jne
jns
adc
mov
out
inc
and
ret
mov
pop
sub
mov
and
pusha
orb
clc
add
test
xor
inc
cmpsl
lock
pop
scas
int
fldl
and
stc
mov
fldl
mov
dec
adc
iret
shrl
in
xchg
push
xchg
fmul
xchg
ljmp
imul
pop
jb
and
sbb
stos
mov
jle
xor
xor
mov
pop
jmp
divb
fcompl
sub
addr16
and
loope
shlb
and
cmp
test
xchg
lock
jecxz
in
xlat
cmp
sbb
lock
fwait
js
ds
jge
inc
imul
pop
fwait
adc
cmp
nop
test
push
in
pop
add
jg
cltd
repnz
sbb
pop
sub
jo
addr16
mov
add
jle
or
test
sub
mov
ss
cwtl
lcall
int3
sbb
in
dec
xorl
pop
cli
dec
add
ret
lds
in
cltd
add
and
ljmp
add
pop
pop
mov
fisttps
adc
mov
mov
mov
insl
add
testb
and
icebp
fldenv
jmp
inc
inc
adc
jl
cmpsl
enter
push
push
push
mov
fsubs
hlt
mov
add
mov
test
mov
fsubs
lahf
xchg
icebp
push
adc
cli
mov
mov
stc
lcall
mov
aad
movsl
call
dec
in
loop
mov
inc
std
loop
push
or
jg
inc
std
sbb
bound
and
aad
popf
ljmp
xchg
cld
mul
arpl
fld
nop
pop
push
insl
mov
repz
mov
xchg
test
or
push
repnz
or
in
lods
jl
mov
ficomps
ret
mov
pop
aas
cmp
pop
jle
pop
sub
jl
outsl
lahf
cmpl
loopne
mulb
mov
iret
mov
fnsave
add
hlt
mov
aas
jl
fstp
inc
out
adc
loop
js
pop
sbb
xor
inc
adc
fiadds
dec
gs
mov
or
test
jp
jg
in
aam
out
test
sti
inc
clc
test
out
adcb
sbb
adc
cld
xor
cs
sar
mov
sbb
mov
pusha
cli
and
test
aaa
mov
sarl
lods
adc
sbb
push
sub
push
data16
cmpsl
and
or
mov
imul
mov
sbb
mov
loopne
mov
out
sti
std
or
dec
jmp
and
cltd
pushf
cmp
push
test
pop
ret
inc
imul
sub
or
sbb
xchg
sbb
or
insb
xchg
scas
push
in
test
mov
mov
add
mov
mov
shl
and
jl
outsl
addb
sub
inc
mov
arpl
adc
push
pop
mov
adc
dec
xchg
lods
frstor
push
mov
mov
test
sbb
rcl
pop
jmp
push
jne
jl
icebp
pop
je
cmp
js
and
jge
xlat
ret
or
mov
mov
cmp
mov
mov
loopne
das
dec
xor
adc
inc
xchg
cltd
cltd
nop
xchg
dec
repnz
in
sub
cmpsb
inc
pop
mov
or
int3
xchg
pop
addr16
push
aas
popf
sub
mov
xchg
pop
add
mov
jp
lock
sbb
shrl
in
or
fldt
into
cltd
jnp
adc
xchg
dec
lods
idivl
xor
sarl
mov
add
stc
add
test
mov
je
arpl
sar
data16
add
in
outsl
jne
pop
or
mov
pop
inc
jnp
out
ds
cmp
aad
neg
or
fcompl
dec
test
dec
inc
pop
add
mov
loopne
xchg
repz
add
adcl
jle
out
and
bnd
mov
std
push
sar
movsb
fnsave
mov
cmp
gs
dec
push
std
mov
xor
xor
loope
shll
or
xchg
add
mov
std
repnz
cmpsb
in
out
dec
and
push
movsb
xchg
jnp
mov
lahf
inc
push
fcoml
scas
xor
jae
ret
mull
cltd
fstpt
sbb
inc
jge
mov
and
inc
js
xor
sti
pop
lea
in
cmpsb
ffreep
xchg
or
insb
pop
std
sbb
mov
in
push
or
testb
inc
mov
jecxz
dec
std
sbb
adc
jp
fisttpl
push
mull
fadds
daa
push
adc
loop
mov
adc
cmp
cmc
idivb
fnstsw
jo
jecxz
pop
cltd
dec
iret
sub
lods
ja
sbb
or
inc
mov
les
sbb
inc
mov
adc
rorb
xchg
fdivrs
scas
lds
fsubl
push
push
mov
cmp
insl
and
mov
xchg
scas
push
push
xchg
adc
test
and
stc
and
push
dec
mov
or
xor
pop
mov
mov
adc
aam
inc
add
push
mov
sub
shlb
scas
add
add
adc
flds
loop
les
rcll
mov
add
fsts
ja
jl
add
test
fwait
mov
ja
iret
mov
push
sbb
xorb
outsb
mov
addl
test
xchg
mov
fs
adc
out
mov
sbb
lock
adc
movsb
loope
insl
jp
stos
dec
lea
fwait
je
pop
or
loop
push
and
pusha
fwait
ret
movsl
bound
cltd
xor
fsubrs
js
lcall
rolb
adc
adc
ss
jmp
pop
jns
aad
or
adc
lret
popa
shlb
or
pusha
popa
enter
xor
insl
lahf
mov
jg
cmp
hlt
or
rcrb
fisttpll
aas
add
xchg
fstpl
push
push
cmpsl
and
sahf
je
fs
daa
mov
xlat
fwait
std
mov
xor
iret
loope
iret
mov
mov
into
adc
pop
fiaddl
in
rorl
pusha
add
loop
mov
pusha
and
bnd
sub
pop
fisubl
jb
lock
push
push
leave
icebp
shlb
rcl
sahf
cmpsb
enter
ja
jp
jmp
insl
sbb
push
sub
fsubrl
popa
pop
mov
xor
mov
out
mov
mov
insb
fucomi
jecxz
sbb
pop
sub
and
dec
nop
jle
aaa
and
popa
mov
dec
std
shrl
jecxz
xchg
or
lock
pop
fdivl
cltd
fwait
inc
mov
call
sub
cmc
nop
bound
outsb
sub
jle
mov
test
xor
loopne
in
dec
push
mov
jns
or
jecxz
iret
cmc
orb
push
dec
sti
pop
pop
pop
stc
xor
out
xchg
fwait
xor
daa
movsl
stos
jne
inc
das
push
lret
lods
cld
jo
adc
test
mov
ds
add
lea
ds
mov
mov
cld
sbb
add
aam
repz
rolb
iret
sub
jmp
pop
cmp
jnp
cmpsl
sub
sbb
clc
mov
xor
fdivp
rolb
mov
adc
rorb
jg
push
shrb
cmpsl
jb
mov
fsubrs
cmp
mov
cmc
lret
cld
in
jno
cld
mov
test
lock
and
daa
add
inc
xchg
les
xchg
inc
add
in
stc
adc
and
add
imul
mov
into
jge
test
mov
add
setne
jae
out
sbb
cld
xorl
stos
xor
addl
out
jno
int3
dec
addb
lahf
push
xchg
dec
loope
subl
push
sub
xchg
test
adc
jl
lds
pop
stc
shlb
cmc
mov
or
loope
mov
push
mov
push
push
sahf
cmp
hlt
jno
shlb
jle
mov
aas
sub
rorb
inc
loope
rcrb
cli
vcvtpd2psx
add
xor
jge
push
bound
ret
dec
adc
mov
roll
xchg
out
rolb
andb
stc
xchg
out
inc
repnz
aaa
in
mov
mov
sbb
out
loope
jge
mov
sbb
roll
loope
xor
jb
inc
and
imul
add
mov
iret
sbb
jns
mov
imul
mov
or
pop
fstpt
sbb
sbb
mov
and
shl
fs
push
aad
add
mov
cld
jmp
sbb
or
inc
repz
fistpll
cmp
push
std
xchg
and
jns
lock
fucomi
mov
pop
testl
pop
inc
aas
loope
stc
js
lods
mov
jo
sub
stc
mov
sarl
test
jbe
inc
lock
xchg
icebp
xor
and
ret
cltd
and
jns
xor
pushf
imul
jne
sbb
stos
lds
dec
add
push
xchg
add
adc
push
ljmp
outsl
push
mov
xchg
sbb
push
mov
cmp
fwait
xor
cmp
xor
scas
inc
xchg
cmp
lods
jae
sub
pop
sub
cmp
stc
mov
push
test
adc
mov
add
lock
cmpsb
rorl
sbbb
pop
sbb
mov
popf
aam
mov
imul
adc
rolb
push
push
fcoms
popf
test
cmp
adc
cmp
xor
jne
inc
in
lock
test
out
insb
pop
sarb
daa
push
push
mov
adc
les
mov
xchg
cltd
inc
test
xchg
int
gs
pop
adc
inc
mov
add
je
test
test
int3
pusha
insl
xchg
mov
xlat
and
push
dec
push
jl
xchg
data16
andb
adc
mov
stc
or
xchg
aas
repnz
cmp
add
mov
cltd
out
lret
arpl
inc
rolb
mov
sbb
push
jns
and
out
add
adc
rorb
push
mov
aam
sbb
adc
sbb
pop
push
cmp
sbb
jecxz
mov
pop
rcr
into
mov
add
jmp
pop
dec
aad
inc
and
adc
push
adc
mov
in
xchg
sbb
sub
add
test
imul
lcall
daa
pop
inc
les
out
xchg
mov
int3
mov
cli
fiaddl
and
cld
xchg
std
in
or
pop
idivb
add
subl
shll
repnz
mov
sub
push
cmc
les
das
cltd
lock
pusha
stos
shrl
subb
adc
push
cld
arpl
mov
test
ret
push
jecxz
mov
xor
cmp
loopne
ret
lahf
sbb
cmp
inc
push
je
and
pusha
cmpsl
jg
push
push
iret
or
movsl
loop
inc
cmc
cmp
jne
ret
xchg
add
mov
pop
stos
mov
mov
fistpl
sub
add
jnp
pop
les
lods
imul
push
xchg
xchg
cwtl
daa
and
pop
lds
enter
stos
sti
sbb
and
inc
dec
sbb
adc
cmpsl
push
fwait
mov
shl
adc
lods
add
mov
jnp
push
popa
lods
fnstcw
adc
lock
nop
rclb
mov
bound
jle
repz
mov
aas
sbb
push
mov
addl
fwait
sbbl
cld
jmp
jg
out
iret
push
ret
sbb
jl
push
mov
pusha
cltd
insb
test
lods
mov
aaa
or
nop
int3
dec
movsb
popf
mov
cld
jle
mov
xchg
adc
pop
xchg
pop
push
sbb
inc
js
pop
sub
pop
add
adc
pop
cmpsb
lcall
sub
popa
mov
jp
daa
mov
mov
mov
sub
cli
pop
repz
sbb
lds
dec
add
incl
jne
xchg
cmp
jmp
sub
xchg
sub
in
or
xor
psubsb
or
gs
loopne
lcall
inc
mov
sub
pop
inc
stc
imul
mov
cltd
lret
mov
mov
aam
sub
add
cmp
mov
aaa
sub
int
arpl
mov
jns
popf
mov
mov
xchg
into
xor
lds
inc
dec
sarb
leave
iret
and
ja
push
pop
mov
mov
mov
xchg
pop
add
dec
jmp
pop
clc
cmp
cli
dec
sbb
clc
nop
jns
cwtl
or
cmp
sarl
xchg
out
dec
xorl
push
or
pushf
adc
imul
dec
pop
mov
jle
enter
int
pop
jge
jb
mov
test
mov
scas
push
sbb
add
pop
test
in
pop
add
push
mov
flds
dec
mov
pop
cmp
push
jmp
or
cmc
jmp
movsl
sub
repz
adc
mov
cld
ret
arpl
sar
fdivp
sbb
jae
xor
mov
mov
in
fdiv
rol
cmp
jne
push
jmp
insb
aas
clc
sbb
sahf
jo
and
adc
fstpt
and
adc
mov
lock
cmpsb
xor
ja
mov
test
lahf
mov
pop
movsb
in
mov
and
jns
insb
clc
xor
lods
jns
subl
int
stos
and
and
xor
aas
rcr
mov
imul
jb
cli
outsl
dec
pop
dec
mov
test
imul
lcall
movsl
sarl
scas
pop
jle
mov
test
dec
lods
and
jns
cmp
loope
je
mov
mov
sbb
sbb
xor
xchg
bnd
mov
jno
lret
dec
jp
dec
adc
jnp
fiaddl
dec
push
dec
xor
xor
repnz
push
outsb
lea
xor
nop
sub
mov
and
dec
mov
jl
and
out
jo
lcall
ss
in
mov
iret
push
mov
and
or
cltd
into
xchg
sbb
push
dec
sbb
dec
cmp
jns
adc
push
push
popl
data16
and
loopne
insl
push
inc
add
in
push
mov
arpl
fwait
push
adc
mov
lock
in
scas
add
dec
jae
mov
scas
ret
sbb
mov
mov
pop
shrb
and
dec
inc
inc
lods
pop
jnp
xchg
adc
jnp
dec
in
xor
push
mov
mov
insl
cmp
hlt
add
dec
xlat
mov
mov
push
mov
mov
outsb
out
sub
jg
arpl
dec
sub
fs
jo
jecxz
roll
je
rorl
outsb
aad
jp
pop
in
mov
lock
or
sub
pop
ficoml
xchg
stc
add
inc
sub
out
cmc
jle
cmc
jl
shl
fwait
push
pop
mov
mov
out
jecxz
pop
sbb
or
jl
aad
lcall
pop
iret
pop
add
shl
stc
pop
in
sub
inc
ret
je
xchg
or
push
or
test
mov
aam
inc
cmc
movsl
ficoms
cwtl
lea
sahf
cmc
cmc
pop
stc
add
jno
mov
pop
dec
push
mov
inc
sbb
ficoml
xor
out
mov
add
jb
mov
insb
jbe
in
stos
leave
rcrb
mov
in
or
divb
cmp
mov
adc
jle
fadds
sbb
inc
push
inc
pushf
orl
add
xor
pop
out
jl
or
add
pusha
int
pop
ljmp
in
out
fsubs
test
lcall
insl
mov
dec
dec
jo
cwtl
mov
xchg
pusha
cmp
or
sub
or
xor
std
pushf
push
xchg
int
jg
inc
pop
xchg
cmp
pop
inc
mov
mov
push
mov
xchg
xchg
push
jns
mov
rorl
mov
and
rcrl
neg
sub
sbb
insl
inc
lock
mov
jo
xor
sahf
pusha
incl
jge
dec
add
push
popa
arpl
mov
sbb
mov
lcall
sbb
int
dec
mov
mov
das
jle
inc
mov
sub
pop
mov
add
pop
insl
aam
sahf
adc
insl
ficompl
sti
shll
nop
cmp
loopne
sub
enter
pop
pop
cmpsb
or
pop
or
js
jo
aad
pop
data16
or
and
stc
pop
fbld
xor
icebp
fcompl
sbb
lea
mov
xor
repz
add
pop
stos
test
int3
je
movsb
push
cli
roll
fucom
aam
pop
shlb
fcoml
adc
iret
popf
push
outsl
mov
mov
dec
out
pop
movsl
fwait
std
dec
aas
es
arpl
scas
aam
sbb
xor
mov
popa
jne
ret
mov
imul
sbb
cli
xchg
xor
dec
shll
int
push
lods
shlb
push
xlat
ret
pop
cs
jae
mov
sahf
out
cmc
cs
push
into
jl
or
push
push
or
cmp
gs
pop
in
insl
pushf
insl
dec
jno
inc
sbb
sbb
scas
push
jmp
push
add
dec
push
cmp
lahf
and
xlat
and
cmpsb
js
scas
cs
movsl
adc
add
cmpsb
xor
jns
pop
loopne
popf
mov
jmp
mov
inc
gs
stc
inc
add
in
mov
push
jae
test
jo
push
jl
and
sub
pushf
out
out
dec
sub
sub
and
lcall
cld
imul
lds
xchg
mov
in
mov
aaa
ret
cmpsb
mov
xchg
hlt
pop
sbb
dec
aam
icebp
sbb
xchg
mov
notb
addb
sbb
push
jb
mov
scas
push
gs
mov
bound
add
gs
fdivp
xchg
cwtl
push
cs
idivl
cli
out
mov
sbb
lock
push
add
cmp
mov
fsubs
xchg
out
lock
jno
ja
mov
into
arpl
ds
or
or
sbb
inc
or
inc
outsb
and
mov
pop
andl
cmp
int
ss
test
jp
mov
test
imul
sarl
push
xchg
notb
in
loope
lret
mov
adc
mov
push
fbstp
cmp
imul
aas
loopne
cmp
jae
lods
leave
popa
sbb
outsl
arpl
mov
mov
push
addr16
cmpsl
dec
push
mov
fsubr
adc
mov
mov
xchg
jns
out
outsl
fbstp
mov
mov
mov
sub
jg
out
sbb
adc
repz
jge
inc
add
mov
sbb
xor
ret
push
dec
cmc
xor
imul
sarl
ret
icebp
cltd
ficompl
pop
xchg
addr16
dec
ret
pop
inc
sbb
adc
pop
repz
repz
je
add
jbe
test
lods
outsb
adc
stc
out
jle
sti
call
rolb
jnp
fmull
xchg
add
rcl
cmp
jge
fmulp
jmp
jle
ja
mov
dec
or
xchg
xchg
and
pushf
jne
jo
rcl
in
sbb
mov
in
mov
loop
dec
push
sub
ljmp
test
dec
shr
bnd
aas
adc
cwtl
mov
inc
jne
inc
push
in
imul
je
imul
pop
xchg
or
jl
hlt
cld
jbe
or
or
outsl
mov
xlat
inc
fdivr
cld
sub
arpl
inc
pop
xlat
and
orb
in
sarl
std
jns
sub
dec
add
mov
mov
mov
outsb
aam
test
stos
cli
mov
mov
mov
adc
cmp
cli
pop
out
and
enter
nop
in
add
pop
neg
lods
loop
int
lock
mov
mov
ficomps
mov
sub
mov
fidivrs
cmp
push
mov
in
add
frstor
pop
push
add
jns
dec
jle
fdivl
pop
sti
pop
subb
sbb
fcoms
jge
enter
aas
ret
cltd
shlb
stos
dec
inc
mov
and
sub
test
xchg
int
gs
push
dec
out
xchg
pop
push
rcll
ja
jb
add
xor
out
cld
and
cmp
mov
ja
std
pop
loope
loopne
inc
and
rcll
pop
lea
ja
sub
nop
mov
loopne
xchg
mov
cmp
xor
fsubl
inc
xor
adc
inc
sub
sbb
scas
inc
test
pusha
scas
cmpsb
xor
pop
push
mov
ja
sub
fwait
and
jnp
jae
sbb
mov
dec
sub
scas
test
jbe
data16
in
test
sbb
mov
mov
dec
dec
add
cmp
inc
roll
movsl
push
jno
lods
divl
dec
stc
push
or
xchg
cld
std
je
sarb
add
call
or
lods
mov
pinsrw
out
gs
jle
push
int3
cmpsl
roll
stc
lods
add
arpl
stos
movsl
in
pop
or
ret
gs
clc
push
fsubrl
push
mov
shl
testl
xchg
jnp
mov
imul
insb
xor
les
imull
and
rol
adc
pop
cmp
mov
sub
daa
push
xchg
push
sbb
sbb
inc
ror
dec
mov
push
jecxz
xchg
pop
sub
mov
mov
jl
jae
jne
and
aam
fsubl
cs
in
cli
loop
jno
push
cmp
push
sbb
adc
sub
addl
sub
lods
jo
dec
inc
js
lods
and
pop
shlb
cld
push
sbb
lea
movb
daa
adc
ss
mov
rclb
mov
mov
xchg
insl
mov
mov
jmp
cmovns
push
pop
fisubl
cli
bound
movsl
test
into
adc
add
push
and
fs
dec
movsb
scas
push
mov
mov
cmp
and
imul
in
mov
mov
fdivr
adc
xor
cli
mov
add
incl
push
jmp
popa
pop
lods
mov
in
jns
ljmp
sub
mov
push
inc
pushf
and
push
dec
push
les
aaa
sbb
jecxz
sub
add
pop
movsb
sub
in
ffree
lret
ja
mulps
push
jb
xchg
test
cmpsb
adc
mov
push
jbe
and
or
and
hlt
jbe
aad
fnsetpm(287
fistpl
out
or
lcall
pop
rorl
call
xchg
int
cs
daa
ror
adc
scas
sbb
jbe
jo
pop
xor
adc
call
dec
aam
js
cmp
scas
jnp
sbb
sbb
mov
xchg
fnstcw
mov
pop
sub
push
lds
mov
sbb
pop
mov
and
aad
or
shlb
inc
mov
stc
lcall
xchg
add
xchg
notl
ret
decl
inc
xor
clc
fwait
dec
sub
push
mov
loop
in
pop
and
into
or
push
jno
sub
subl
pop
push
xchg
dec
test
icebp
into
mov
mov
lret
sub
lcall
adc
test
sbbl
push
fildll
test
nop
push
adc
xchg
pop
or
push
loope
push
xlat
rol
pop
push
hlt
cmp
xlat
jle
sbb
and
aam
mov
ja
xlat
out
dec
xor
xor
lea
dec
cwtl
cmp
dec
xchg
or
and
scas
popf
or
sbb
inc
xor
daa
push
dec
ret
add
pop
lcall
dec
push
lret
or
hlt
shrl
add
inc
loopne
and
dec
out
call
and
lahf
mov
aam
push
xchg
adc
pop
sbb
sti
mov
rolb
sbbl
out
in
inc
pop
shl
mov
and
sbb
jbe
push
and
out
std
mov
jbe
xchg
movsl
mov
sets
or
cmp
sbb
testb
add
add
andl
test
addr16
cld
push
push
shl
gs
and
dec
out
or
cli
sbb
rcrl
xchg
out
adc
rolb
mov
dec
adc
cmp
adc
cwtl
popa
pusha
fidivl
jecxz
in
repnz
pop
push
into
insb
mov
fmulp
jecxz
loope
fmuls
fiadds
or
adc
mov
and
psubsw
xchg
adc
arpl
xchg
ret
dec
xorb
nop
jmp
sub
cld
repz
cmp
mov
inc
test
jae
sub
js
mov
lret
ficoms
call
fldenv
pop
stc
jge
arpl
mov
xor
repnz
repz
aas
mov
data16
repnz
jnp
and
aas
dec
and
sub
add
sahf
nop
cmp
adcb
fimuls
mov
mov
aam
fdivl
test
movsl
imul
push
jae
leave
pushl
mov
ret
jb
mov
insl
or
inc
in
pop
and
adc
ljmp
mov
cltd
enter
enter
inc
xor
mov
and
mov
out
in
xor
aad
lods
mov
ljmp
sub
inc
ja
lds
mov
push
jecxz
cmc
or
rolb
cmp
cmp
xor
cmp
cmp
hlt
mov
inc
popf
adc
push
js
mov
push
and
mov
xor
into
addb
repnz
pop
push
in
fld
sub
and
jp
repnz
cmpsl
sbb
test
jns
or
lcall
sahf
or
test
add
inc
data16
adc
dec
data16
inc
cmp
and
ss
jo
mov
adc
pop
add
fbld
pop
scas
mov
test
test
daa
fsubs
dec
test
loope
push
mov
mov
mov
push
pop
and
lret
pop
popf
sub
leave
jecxz
and
mov
idivb
ja
dec
dec
scas
sbb
nop
cs
adc
adc
popa
shrb
inc
lods
jl
addb
fstpl
inc
mov
iret
and
enter
gs
mov
aas
insb
jne
scas
roll
cmp
andl
cmpsb
pushf
dec
push
cs
outsb
stos
or
mov
push
outsl
and
pop
add
xor
adc
xchg
push
popa
dec
push
inc
and
lock
lret
cs
sub
adc
aas
add
inc
xchg
sbb
sub
sbb
inc
lods
jg
mov
sub
push
inc
rcrb
insl
inc
push
adc
xor
jae
iret
and
fcompl
mov
fdivrs
lea
mov
adcl
cmp
lret
std
or
or
dec
jle
dec
mov
shrb
pop
cli
ja
fildl
repnz
xchg
popa
lods
jl
pop
or
lea
testb
xor
jl
ret
cmpb
int
nop
cmovae
push
jns
rorb
and
and
out
out
dec
xor
or
adc
xor
sbb
or
cltd
sub
sbb
adc
push
xor
jo
or
push
insl
mov
inc
imul
daa
adc
rclb
das
out
lret
scas
dec
movsl
bound
cs
jl
inc
ret
leave
mov
sbb
stc
mov
fildll
ret
aaa
in
or
lods
ret
pop
sbb
js
orb
fcomps
arpl
mov
ljmp
mov
jb
mov
lock
scas
dec
insb
and
adc
xor
xchg
mov
push
mov
popf
lcall
lods
mov
xor
in
dec
ds
push
xchg
insb
test
inc
decl
data16
cmc
insl
jae
in
or
and
out
lcall
mov
test
and
mov
test
push
aam
mov
add
xchg
pop
push
lcall
loop
push
add
and
pop
add
dec
dec
pushf
js
enter
fsubl
mov
or
xor
dec
push
pop
inc
sbb
adc
out
pop
inc
or
pushf
inc
cmpsl
dec
sarl
dec
test
add
cltd
mov
pushf
push
shl
sbb
fisttps
sbb
cmpsb
enter
push
inc
test
push
mov
shl
push
push
ret
or
xor
sbb
adc
sbb
lcall
or
xchg
inc
add
pusha
dec
xorl
int3
inc
sbb
test
into
xchg
mov
xor
pop
outsl
cmp
addl
sar
rcrl
sbb
lret
adc
shll
addr16
rcrb
and
pop
cmp
push
xor
cmc
add
pop
cltd
rclb
icebp
sbb
xchg
add
sbb
rclb
dec
mov
xchg
jge
icebp
adc
cltd
insb
or
sbb
repz
outsl
or
sbb
hlt
cltd
outsb
or
sbb
inc
xchg
sbb
cwtl
rorl
int3
ret
stc
fisubrs
ret
mov
ljmp
fdivrp
ret
scas
fdivrp
ret
scas
fdivrp
dec
popa
ficoms
push
scas
ror
add
shlb
iret
shlb
sarb
iret
imul
cmp
imul
iret
insb
sarb
iret
outsb
sarb
iret
outsl
shrb
ret
pusha
push
leave
lret
xor
xor
pusha
shlb
mov
in
mov
in
mov
out
cmpsl
mov
mov
mov
mov
ret
nop
roll
jecxz
scas
aam
mov
in
mov
in
mov
out
mov
out
mov
mov
mov
mov
ret
nop
fsub
roll
jecxz
mov
aam
leave
movsl
aam
leave
cmpsb
aam
leave
cmpsl
aam
leave
test
stc
leave
test
aam
leave
stos
aam
leave
lods
aam
leave
lods
aam
leave
scas
aam
leave
scas
aam
ret
and
icebp
les
fbstp
and
jae
and
jb
and
jne
and
shll
daa
shll
sub
jns
sub
js
sub
jnp
sub
jp
sub
jge
sub
sarl
das
rcrl
push
arpl
xchg
arpl
push
pop
mov
inc
sbbl
movsb
pop
repnz
movsl
pop
cmc
inc
cmpsb
pop
hlt
inc
cmpsl
pop
testl
pop
stc
inc
stos
pop
clc
inc
stos
pop
sti
inc
lods
pop
cli
inc
lods
pop
std
inc
scas
pop
cld
inc
scas
pop
incl
pop
out
inc
inc
pop
loope
mov
lock
mov
push
repnz
movsl
push
cmc
dec
cmpsb
push
hlt
dec
cmpsl
push
testl
stc
dec
stos
push
clc
dec
stos
push
sti
dec
lods
push
cli
dec
lods
push
std
dec
scas
push
cld
dec
scas
push
decl
ds
jno
xor
push
xor
push
xor
push
add
pop
dec
dec
rclb
mov
adc
loop
dec
ret
outsb
ret
imul
notb
imul
adc
clc
adc
stc
adc
adc
sti
adc
cld
adc
std
adc
adc
out
adc
xor
or
xchg
adc
addl
sbb
push
mov
sbb
in
sbb
add
fnsave
mov
lcall
mov
sub
fmuls
lret
fiadds
imul
addl
xchg
notl
adc
ficoml
les
push
scas
pop
xor
jb
inc
xor
fcomp
mov
and
sub
fstpt
sub
mov
jle
inc
mov
push
faddp
xor
stos
in
pop
cmc
rcrl
dec
adc
test
popa
mov
adc
mov
roll
pop
add
pop
out
xorl
and
test
lock
sahf
in
fs
mov
repz
add
pusha
xor
sub
and
and
outsl
jne
dec
dec
xchg
dec
int
sbb
ret
dec
idivl
out
mov
in
dec
nop
imull
nop
imul
push
fbld
inc
rolb
adc
popf
sbb
pop
pushf
shl
jno
cmp
je
cli
mov
out
sub
lcall
mov
rcll
jecxz
mov
mov
clc
test
gs
test
data16
jns
mov
mov
ljmp
fsub
or
fst
outsl
mov
jge
sbb
and
scas
scas
cmpsl
sbb
iret
arpl
aas
rclb
addr16
mov
aaa
ds
ljmp
xchg
in
pop
jno
dec
shll
popa
sbb
cli
xchg
pop
cmp
int3
lahf
push
ds
adc
push
push
outsb
add
iret
pop
dec
mov
aam
into
fists
inc
fidivrs
sahf
push
das
dec
das
nop
pop
jae
or
loope
cli
stos
dec
pop
outsb
cmpl
fimuls
nop
mov
aas
loop
add
out
inc
jbe
jmp
sub
stc
std
movsb
popa
icebp
mov
mov
cwtl
mov
or
iret
cmpsb
sahf
das
jg
mov
lds
adc
pop
ret
shll
jae
mov
xchg
push
aam
mov
adc
sarl
add
dec
sub
sub
jge
ljmp
adc
or
adc
iret
or
push
daa
fildl
aam
mov
or
pop
cltd
int3
jae
std
add
pushf
xor
popa
jo
ret
sahf
sarl
sbb
aas
test
test
mov
scas
sahf
mov
mov
add
jmp
fadds
dec
mov
adc
xor
addr16
xor
push
and
iret
insl
repnz
mov
insl
bswap
adc
push
pop
push
out
or
outsl
or
iret
push
mov
inc
sub
inc
pop
bnd
and
fsubp
xchg
inc
add
xor
pop
inc
ljmp
cltd
into
sub
or
insb
pop
sbb
sbb
sbb
and
insb
mov
push
sub
icebp
add
jge
mov
movsl
jl
push
clc
lods
stc
cwtl
stc
jl
cld
dec
addr16
decb
insl
fisubrl
dec
cmp
movsl
mov
aas
mov
scas
sub
leave
lock
outsl
into
mov
and
shlb
mov
xchg
push
lcall
mov
sbb
jmp
dec
cltd
jecxz
mov
xchg
shll
jmp
or
ret
rcrl
add
jg
mov
imul
sbb
sbbl
gs
lds
adc
lret
loopne
lret
push
lods
jmp
push
out
aaa
ja
popa
lret
dec
mov
test
jns
in
sub
ss
push
arpl
vxorps
flds
lahf
popf
ret
test
into
pop
arpl
cli
repz
and
incb
pusha
push
out
push
call
lods
jbe
xor
std
mov
pop
test
insl
push
outsl
cmpsb
pop
inc
outsb
in
mov
xor
pop
inc
and
mov
add
xchg
je
mov
mov
jno
dec
push
xchg
adcb
aaa
jo
je
test
test
push
xor
mov
call
lahf
lahf
jnp
jmp
cwtl
and
xlat
sbb
inc
imul
mov
sub
xor
pop
lods
out
lcall
mov
loop
mov
mov
mov
fisttpll
sub
popf
ja
jmp
pop
push
sbb
gs
mov
pop
jno
push
adc
xchg
mov
cmp
out
nop
push
ret
cld
loop
shrl
clc
inc
push
sbb
out
or
insl
xchg
mov
sbb
int3
subl
loop
jl
cmc
pop
jns
cwtl
test
add
jb
dec
adc
sahf
or
in
xchg
pop
test
or
mov
pop
push
into
aam
cmp
xchg
xor
mulb
cltd
jae
movsl
jne
sbb
and
rcr
out
jns
sub
js
jne,pn
xor
xchg
pop
roll
hlt
mov
iret
xor
in
push
lods
iret
cmp
pop
and
popf
pop
xchg
adc
loop
aad
insl
addl
sbb
in
lods
xor
or
shrl
test
pop
lods
cmp
scas
dec
jns
jne
adc
jb
push
sahf
jae
sub
inc
cltd
pop
xchg
and
bound
cs
xor
and
loop
call
push
push
jbe
or
out
xchg
pcmpeqd
sub
into
sub
js
sub
jnp
adc
cmp
cmpsb
dec
out
icebp
scas
in
xlat
jo
out
ja
jbe
nop
xor
movsb
pusha
into
loope
shlb
iret
or
xchg
outsl
jle
xchg
das
push
into
hlt
inc
pop
arpl
jecxz
add
add
jbe
enter
jg
lea
adc
ret
outsl
leave
sbbb
lret
inc
fistpl
push
jnp
cmp
jge
loope
jge
loopne
jle
jecxz
jg
jecxz
dec
push
loop
xchg
mov
jae
fists
mov
pop
xchg
push
ret
mov
xchg
xchg
lds
sahf
xor
xchg
ficoms
adc
test
jle
call
push
je
fxtract
je
lds
aaa
or
outsl
push
mov
push
cs
into
lahf
push
push
into
iret
push
dec
xor
push
mov
push
mov
sub
push
icebp
adc
imul
sbb
jp
sub
xchg
jg
loop
loopw
and
mov
jge,pn
mov
ss
pop
insl
cwtl
sahf
ss
movsl
mov
jle
sbb
out
cmpsb
add
fcmovbe
movsl
sbb
pop
es
lock
mov
jge
xchg
xchg
mov
xchg
aas
or
adcb
gs
movsb
mov
test
ret
jns
cmc
xor
push
mov
and
inc
pop
or
dec
add
add
cwtl
out
iret
das
adc
xor
ljmp
lock
pop
xor
imul
pop
pusha
dec
call
mov
push
arpl
sub
xor
daa
repz
ds
cmp
jle
mov
jns
inc
mov
sbb
lret
pushf
js
ja
pop
dec
in
mov
push
arpl
subl
repz
loop
lock
mov
jo
push
sub
push
nop
in
dec
add
and
popa
addr16
jae
push
rcl
dec
call
cli
and
jg
mov
pop
mov
data16
sbb
ficompl
jp
or
and
fistpl
xchg
mov
lcall
cs
sub
dec
lock
xlat
push
add
mov
and
movsb
mov
fpatan
sub
lock
into
inc
mov
sbb
and
cmc
popf
into
add
ret
test
xchg
and
dec
push
fists
fcoms
cmp
cmp
incl
mov
daa
xor
adc
xchg
rcrl
subl
js
jo
clc
cmp
idivl
inc
repz
leave
mov
mov
into
pop
mov
aaa
or
adc
int3
test
jecxz
scas
mov
fnstcw
xorl
pop
xor
shll
or
mov
aad
adc
popf
push
add
sub
jnp
sbb
cvtps2pi
mov
xor
xchg
cmp
push
mov
adc
cmp
xor
test
pop
cs
imul
inc
pop
and
mov
test
or
and
outsl
ret
imul
or
in
arpl
repz
push
add
pusha
xchg
push
jle
sub
scas
jo
subl
cld
mov
sahf
in
jmp
or
add
clc
nop
pushf
inc
dec
adc
loopne
mov
cmp
stc
pop
daa
pop
sub
call
cmc
inc
push
imull
test
inc
clc
stc
stos
adc
call
dec
mov
inc
lcall
rcll
mov
arpl
push
das
shr
aam
fistl
das
cltd
adc
mov
test
ds
lea
cmp
xchg
int3
in
xor
outsb
dec
add
sub
fs
fnsave
hlt
and
and
daa
jp
add
xor
lret
enter
mov
leave
adc
pusha
mov
loopne
call
bound
cs
pop
adc
cmp
mov
fmuls
push
add
cwtl
cli
push
or
mov
mov
push
mov
cmp
mov
mov
jbe
jne
adc
mov
add
out
add
push
ror
inc
mov
inc
push
jae
push
ret
adc
jne
lcall
repz
xchg
loopne
mov
test
lods
xchg
dec
in
mov
xchg
repz
mov
mov
insl
mov
and
cwtl
in
in
std
sar
jne
xchg
stos
sbb
mov
arpl
dec
cmpsb
jg
mov
sub
sub
mov
stc
or
pop
sub
pop
dec
adc
mov
sarb
pop
adc
ljmp
jnp
jae
mov
dec
xor
imul
jno
or
mov
cmp
sbb
jp
pop
test
mov
movsl
jns
sahf
xor
insb
cmpl
inc
sbb
xchg
jle
into
andl
xchg
test
push
push
mov
jle
jecxz
faddp
addl
testb
lea
cld
adc
jmp
dec
test
xchg
mov
xchg
aaa
aam
and
jmp
outsl
loope
xchg
jo
dec
mov
jecxz
movsl
shl
test
testb
sbb
in
rol
leave
incb
test
mov
lods
push
bound
push
pop
scas
repz
mov
adc
das
test
enter
jg
ds
and
lock
dec
mov
sbb
ficoms
loopne
pop
lahf
add
cmp
stc
adc
push
push
popa
push
rol
mov
loop
test
ljmp
dec
or
xor
outsb
icebp
pop
mov
inc
lods
repnz
adc
inc
xlat
sbb
imul
sbb
test
sub
dec
pop
out
or
sub
pop
cli
test
popf
mov
mov
sub
mov
xchg
repz
insl
inc
adc
cwtl
dec
jnp
dec
xchg
add
lods
dec
out
xor
fisttpl
shll
add
jnp
sahf
leave
mov
mov
out
loopne
loop
adc
shlb
sub
mov
mov
into
xchg
cmpsl
push
mov
cmp
mov
ror
mov
xlat
fsubs
fdivrl
add
aad
inc
mov
frstor
or
aam
mov
je
dec
movsb
jb
loopne
int3
jg
push
scas
xor
test
or
mov
xor
xor
push
push
call
jae
jae
clc
mov
loope
mov
mov
mov
sbb
or
jae
and
mov
jl
or
in
and
lahf
cld
jl
cmc
sub
loope
sub
jle
ret
xor
mov
dec
hlt
push
or
out
fstl
cmp
cmp
push
adc
jne
aam
cld
and
incl
add
xchg
icebp
test
xor
sti
mov
arpl
xor
add
mov
push
es
mov
cwtl
in
adc
mov
xchg
lock
or
jmp
outsl
add
inc
cltd
fwait
scas
add
fwait
aas
push
into
popf
das
add
fsubl
rol
xchg
mov
xor
movsb
mov
leave
std
int3
popa
in
ljmp
popa
mov
cmpsb
cwtl
cmp
mov
lods
fldcw
jg
bound
pop
popa
xchg
and
pop
cmpsl
loop
cmc
in
xchg
fisttps
lahf
cwtl
xchg
leave
pop
cltd
leave
das
lcall
pop
scas
insb
cld
sbb
je
cmp
pop
das
test
fldcw
imul
outsl
sub
fldcw
repz
mov
cmpsl
cmovge
notl
out
pop
jbe
mov
rorl
mov
mov
gs
lods
pop
addr16
in
gs
add
lahf
adc
mov
push
enter
mull
nop
into
sub
lds
pop
push
imul
mov
aas
sub
sub
orl
and
adc
clc
or
lods
xchg
lds
mov
xor
mov
enter
in
aam
stos
mov
push
or
lret
popa
leave
xchg
push
ror
test
jo
cmc
jecxz
ret
int3
pop
and
mov
and
shlb
into
mov
dec
repz
ret
xchg
addl
dec
testl
ret
mov
idivb
jmp
call
xchg
add
shll
mov
pop
and
cs
cltd
or
xor
mov
xchg
out
out
adc
push
cmp
icebp
pop
push
sahf
in
inc
pop
ret
stos
ret
pop
push
out
jno
xor
es
cwtl
sbb
ror
jecxz
cwtl
jp
xchg
mov
add
add
or
jp
int3
jne
sarl
repnz
or
leave
std
fld
push
sarl
sbb
daa
aam
dec
mov
cpuid
cmp
jo
adc
jp
mov
insb
sbb
cmp
cmp
jmp
out
shl
insb
rorl
jge
jl
inc
and
mov
xchg
xchg
add
push
cld
js
mov
adc
sbb
dec
mov
and
push
mov
cmp
rolb
jl
test
dec
cmp
xchg
push
mov
fwait
add
cmc
fstpl
call
xchg
scas
xchg
sbb
mov
xchg
sub
movsb
cld
cs
mov
or
fdivrs
cmc
dec
jne
sbb
jae
adc
lods
push
mov
orb
mov
and
jmp
mov
or
nop
pinsrw
mov
inc
test
xor
push
sti
push
scas
dec
cld
arpl
imul
lahf
shlb
xor
sub
jecxz
pop
mov
inc
divb
mov
sbb
rcr
xchg
xor
jae
repz
cmp
xchg
ficomps
repnz
nop
cltd
popf
test
xchg
pop
cwtl
mov
adc
lret
mov
xor
mov
cmp
bound
les
mov
push
in
xchg
cmp
push
imulb
movsb
in
add
scas
jl
into
fstl
add
fists
cmc
loop
add
adc
pusha
pop
imul
or
popf
hlt
hlt
pop
mov
dec
inc
jno
sbbb
adc
mov
xchg
out
lcall
addr16
mov
xor
ds
or
outsl
sbb
js
pop
sahf
stos
inc
pushf
cltd
mov
popf
inc
sub
xchg
aad
xchg
int
call
jg
xchg
leave
jp
out
mov
dec
lds
movsl
mov
outsb
jne
sbb
mov
mov
repnz
xor
nop
push
repz
and
jno,pn
sub
outsb
sub
mov
into
adc
imul
pop
xor
xlat
push
stos
jmp
jb
inc
xor
jg
repnz
cmp
pop
cld
fsubl
mov
mov
addr16
fs
mov
mov
aas
mov
stc
xchg
in
popa
sub
ljmp
int
mov
xchg
jmp
je
sbbb
sbb
sarb
inc
imul
outsb
sbb
fisttpl
mov
add
mov
xor
fcompl
ficoms
int
or
mov
add
repz
cmp
inc
inc
push
pop
sub
cmp
jns
xchg
js
fisttps
and
pcmpeqd
add
bound
mov
mov
or
dec
push
xchg
push
adc
or
js
ds
das
out
mov
stos
jl
cmp
sub
ss
sbbl
out
les
loopne
mov
fnclex
divl
inc
or
dec
cmp
dec
mov
subb
dec
aam
pop
dec
sbb
xor
rol
repnz
mov
xchg
dec
add
stos
fdivrp
jge
sbb
fistpll
fsubrp
pushf
adc
out
push
inc
lea
add
lret
sbb
mov
add
pushf
pushf
and
cmp
and
das
sbb
decb
popa
iret
push
mov
pusha
mov
push
jle
xchg
xchg
sub
jnp
xor
outsb
or
cltd
stos
imul
testb
stc
int3
jnp
sub
xor
adcb
adc
cwtl
outsb
mov
nop
xchg
jbe
js
xchg
and
outsb
cwtl
add
xor
jecxz
mov
mov
pop
add
xchg
repz
push
sub
movsb
loop
outsb
js
inc
xchg
cltd
sbb
fstpl
rcll
daa
mov
outsl
sub
or
sbb
sub
ret
sbb
loope
bound
out
dec
loop
sub
repz
cld
subl
push
xchg
mov
leave
lock
ja
xor
mov
add
jge
testb
jge
out
xor
jo
pop
adc
add
adc
mov
xor
jb
mov
fsubp
leave
dec
adc
cltd
out
test
xor
or
xor
pop
mov
rcrb
adc
mov
push
sbb
fists
clc
push
sub
add
jl
or
inc
dec
adc
push
and
ret
adc
xchg
js
ss
loope
pushf
dec
fistps
sbb
test
aam
mov
or
jns
movsl
jns
jmp
aas
inc
int3
cmp
adc
movb
add
dec
pop
repz
cld
sbb
aad
dec
and
inc
addr16
mov
fwait
ljmp
cwtl
mov
ret
adc
imul
fwait
or
pop
and
inc
pop
mov
out
fisttpll
hlt
cmp
mov
inc
xlat
fiaddl
sbb
cli
daa
fisttpl
adc
dec
dec
and
ss
lock
call
xchg
into
mov
cmp
les
fiadds
xchg
pop
jb
outsl
push
inc
ret
adc
popf
xchg
incb
pushf
ficomps
add
xchg
bnd
mov
aaa
fcomip
mov
rorl
test
xor
into
pop
push
dec
jg
push
dec
mov
inc
fwait
test
xlat
inc
jne
jmp
dec
pop
fmulp
dec
sbb
leave
cltd
ror
stos
popf
shrb
jle
sub
loope
xchg
mov
cs
int3
icebp
xchg
dec
mov
xchg
pop
mov
cmc
adc
inc
adc
repz
repnz
adc
stc
adc
adc
dec
cmp
dec
outsb
pop
pop
inc
cmp
and
orb
add
lock
js
test
rcrb
test
add
pop
sbb
inc
sub
fstpl
xchg
jp
mulb
mov
imul
enter
aam
cmp
pop
pop
jge
push
pop
jo
pushf
pop
sub
xchg
pushf
xor
dec
and
cwtl
arpl
and
push
push
dec
pusha
stc
or
popl
lods
sub
push
adc
and
rorb
fdivrp
xchg
mov
stos
inc
jle
xchg
push
rcrb
mov
add
lods
insb
in
test
popf
inc
das
or
pop
sbb
dec
ffreep
fidivl
loopne
pop
mov
lds
leave
mov
aad
mov
dec
mov
sub
js
sbb
in
insb
xchg
jle
and
ds
stos
inc
inc
fwait
repnz
clc
lods
mov
dec
push
loopew
hlt
sbb
add
xchg
clc
xchg
mov
cmp
jnp
and
ret
push
shlb
orb
inc
gs
dec
adc
sahf
call
add
xchg
jb
ss
nop
ljmp
inc
sbb
rcr
in
test
xchg
iret
cmp
mov
out
shrl
jno
icebp
pop
sahf
shll
mov
sahf
int
mov
inc
pop
nop
mov
rclb
mov
clc
push
push
js
adc
addr16
mov
lcall
sbb
lret
push
add
test
in
fucomi
cmp
aaa
and
adc
pop
mov
push
call
jl
out
mov
test
jo
vpacksswb
cmpsb
in
and
std
push
gs
bound
aaa
cli
xor
jmp
mov
cwtl
mov
cwtl
push
sbb
enter
add
pop
fmuls
pop
jnp
pop
sbb
pop
cmp
add
jno
and
bound
jno
xchg
jle
xor
rorb
testb
in
call
cli
jnp
int
inc
push
mov
mov
ss
jecxz
pop
sbbb
add
stos
mov
aas
lret
inc
add
dec
in
xchg
std
lcall
mov
int
push
pushf
scas
int3
cmp
roll
mov
movsl
push
jge
or
jle,pn
sbb
aaa
in
jno
sub
cmp
lea
jbe
test
and
gs
xor
lcall
adcl
repz
push
or
mov
daa
mov
nop
fstpl
fmul
xchg
inc
les
ds
pop
arpl
pop
mov
fmull
pop
shlb
test
clc
aad
mov
jno
es
push
xor
lahf
shrb
call
adc
addr16
inc
fbstp
je
lods
divb
in
pop
add
ret
cmp
cmpsb
mov
fs
repz
stos
cmp
jecxz
sub
imul
pop
jns
outsb
xchg
dec
add
je
xor
mov
sbb
sbb
lds
push
shll
data16
jl
inc
mov
add
sub
repz
pop
jae
xchg
dec
stos
xchg
adc
in
rorb
loopne
pop
out
es
dec
sub
adc
sbb
or
mov
scas
inc
stos
pop
xor
pusha
lock
addr16
mov
lret
lahf
ret
pop
into
aas
cld
add
popf
cmpsl
xchg
sti
fmul
leave
mov
aaa
mov
into
cmp
sarb
dec
flds
icebp
fwait
scas
addr16
repnz
add
add
js,pt
pop
gs
aaa
add
or
popf
push
xchg
and
mov
arpl
add
mov
add
adc
push
add
push
les
das
pop
mov
out
fdiv
js
mov
sbb
loope
push
dec
nop
test
add
dec
pop
aas
mov
push
inc
mov
mov
mov
mov
cwtl
push
and
push
cs
pop
inc
rolb
mov
and
cs
xor
fwait
test
push
xchg
cwtl
mov
pop
je
flds
movsb
mov
fnstsw
sarl
cmp
add
mov
push
fsubs
mov
ficomps
adc
or
xor
cmc
das
mov
stc
pop
mov
mov
mov
dec
das
add
xor
pop
and
xor
mov
ss
mov
push
xchg
add
fs
jo
mov
das
dec
pop
inc
rolb
mov
mov
mov
pop
or
mov
push
scas
je
xchg
je
mov
push
shlb
iret
in
mov
sub
das
aas
call
jne
mov
add
cmp
sub
sub
test
pop
xor
cmp
pop
cs
xchg
jo
ja
lds
pop
aaa
mov
dec
nop
sbb
subl
cmp
test
push
mov
dec
cmp
jne
mov
pusha
lahf
xchg
xchg
call
adc
push
mov
dec
add
divl
rolb
or
push
das
dec
pop
inc
rolb
mov
dec
repz
cwtl
out
pop
add
add
mov
sub
pop
cs
xchg
sbbb
dec
add
mov
out
add
das
shrb
push
add
pop
cmp
mov
cmp
adc
inc
mov
outsl
add
loopne
add
jbe
dec
daa
das
push
or
sub
shrb
push
add
cmpsl
inc
pop
daa
mov
cmp
sub
push
add
aaa
inc
pop
and
add
push
fnstsw
roll
jbe
dec
daa
das
push
dec
xchg
sub
push
add
mov
pop
daa
mov
cmp
sub
lahf
enter
adc
add
aas
sbb
cmp
mov
or
and
mov
loopne
push
ss
js
pop
mov
xchg
shrb
push
nop
inc
in
mov
sub
push
add
mov
and
out
xchg
pop
rcrl
ffreep
push
and
outsb
pop
ja
xchg
pop
loop
outsb
adc
out
cmpl
lock
int
and
push
xchg
rorb
mov
pop
sahf
mov
lahf
cwtl
out
inc
push
add
push
out
xorl
test
out
addb
repz
inc
xchg
testl
jecxz
or
add
popa
push
mov
dec
and
mov
daa
mov
sub
add
mov
jno
fstpl
add
das
xchg
add
sub
out
mov
scas
movb
mov
add
mov
ja
aaa
stc
push
or
cmp
inc
orl
push
push
push
dec
mov
sbb
iret
inc
stc
jle
mov
xlat
inc
stc
ret
mov
ss
jge
pop
push
jmp
push
add
xor
stc
and
adc
add
aam
inc
pop
mov
and
sub
inc
inc
sub
push
je
shlb
jns
es
fists
push
inc
fwait
push
es
fists
inc
daa
lcall
ja
xchg
push
data16
mov
stc
add
cltd
loope
loop
and
add
mov
push
add
mov
push
add
mov
push
add
add
add
add
add
add
and
add
pusha
add
addb
push
add
add
add
add
nop
add
addb
add
test
add
rolb
addb
add
lock
addb
add
add
add
or
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
or
add
add
or
add
add
or
add
roll
push
add
add
add
add
movb
push
add
add
add
add
add
add
add
pusha
aad
add
adc
add
add
add
add
pusha
testl
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
pop
pop
pop
add
add
add
push
add
push
add
inc
add
add
bound
test
test
cwtl
xchg
cwtl
add
outsl
add
mov
add
jbe
jne
je
imul
add
mov
mov
add
stos
stos
add
pushf
pushf
add
mov
add
add
ja
outsl
outsb
insl
add
lcall
xchg
xchg
xchg
add
nop
add
push
add
pop
add
pop
add
push
add
lods
lods
add
stos
add
movsl
movsb
add
mov
add
xchg
xchg
add
aam
rcl
rolb
int
into
add
int
add
enter
mov
add
mov
scas
add
mov
lea
fldl
rcl
rolb
iret
rcl
add
fcmovu
add
aaa
cmp
cmpsl
cmpsl
test
add
dec
add
inc
add
jno
addb
add
std
std
add
cld
cld
add
sti
sti
add
cli
cli
add
stc
stc
add
clc
clc
add
div
add
div
add
cmc
cmc
add
hlt
hlt
add
repz
repnz
icebp
icebp
add
lock
out
out
add
out
out
add
in
in
add
in
in
add
jmp
add
ljmp
call
out
add
out
add
in
add
in
add
jecxz
add
loop
add
loope
add
loopne
add
add
add
fstp
add
add
fcmovnu
add
fcmovu
add
add
fcomp
add
xlat
xlat
add
add
aad
add
aam
add
rcl
add
rcl
add
rcl
add
rcl
add
iret
iret
add
into
into
add
int
add
int3
int3
add
lret
lret
add
leave
leave
add
enter
mov
les
ret
ret
ret
add
ret
rol
add
rol
mov
mov
mov
add
mov
mov
add
mov
add
mov
add
mov
add
mov
add
scas
scas
add
lods
lods
add
stos
stos
add
test
add
cmpsb
cmpsb
add
movsb
movsb
add
mov
mov
add
sahf
sahf
add
pushf
pushf
add
lcall
cwtl
cwtl
cwtl
add
xchg
xchg
add
xchg
xchg
add
popl
mov
lea
mov
add
mov
add
xchg
add
addl
addb
addb
add
add
jnp
jp
jp
jns
jns
js
js
jbe
jbe
je
je
jae
jae
jb
jb
jno
jno
jo
jo
outsb
outsb
outsb
add
insl
add
add
imul
addr16
data16
add
add
arpl
bound
add
popa
add
pop
add
pop
add
pop
add
add
pop
add
pop
add
pop
add
push
add
push
add
add
push
add
push
add
push
add
push
add
dec
add
dec
add
add
dec
add
inc
add
inc
add
add
inc
add
inc
add
cmp
cmp
cmp
cmp
cmp
xor
xor
incl
incl
add
incl
add
incl
add
dec
lret
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
push
fdivrp
jmp
dec
add
incl
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
adc
incl
es
incl
inc
incl
push
sub
add
and
add
inc
add
add
add
add
incl
pop
pop
pop
add
add
add
push
add
push
add
inc
add
add
bound
test
test
cwtl
xchg
cwtl
add
outsl
add
mov
add
jbe
jne
je
imul
add
mov
mov
add
stos
stos
add
pushf
pushf
add
mov
add
add
ja
outsl
outsb
insl
add
lcall
xchg
xchg
xchg
add
nop
add
push
add
pop
add
pop
add
push
add
lods
lods
add
stos
add
movsl
movsb
add
mov
add
xchg
xchg
add
aam
rcl
rolb
int
into
add
int
add
enter
mov
add
mov
scas
add
mov
lea
fldl
rcl
rolb
iret
rcl
add
fcmovu
add
aaa
cmp
cmpsl
cmpsl
test
add
dec
add
inc
add
jno
addb
add
std
std
add
cld
cld
add
sti
sti
add
cli
cli
add
stc
stc
add
clc
clc
add
div
add
div
add
cmc
cmc
add
hlt
hlt
add
repz
repnz
icebp
icebp
add
lock
out
out
add
out
out
add
in
in
add
in
in
add
jmp
add
ljmp
call
out
add
out
add
in
add
in
add
jecxz
add
loop
add
loope
add
loopne
add
add
add
fstp
add
add
fcmovnu
add
fcmovu
add
add
fcomp
add
xlat
xlat
add
add
aad
add
aam
add
rcl
add
rcl
add
rcl
add
rcl
add
iret
iret
add
into
into
add
int
add
int3
int3
add
lret
lret
add
leave
leave
add
enter
mov
les
ret
ret
ret
add
ret
rol
add
rol
mov
mov
mov
add
mov
mov
add
mov
add
mov
add
mov
add
mov
add
scas
scas
add
lods
lods
add
stos
stos
add
test
add
cmpsb
cmpsb
add
movsb
movsb
add
mov
mov
add
sahf
sahf
add
pushf
pushf
add
lcall
cwtl
cwtl
cwtl
add
xchg
xchg
add
xchg
xchg
add
popl
mov
lea
mov
add
mov
add
xchg
add
addl
addb
addb
add
add
jnp
jp
jp
jns
jns
js
js
jbe
jbe
je
je
jae
jae
jb
jb
jno
jno
jo
jo
outsb
outsb
outsb
add
insl
add
add
imul
addr16
data16
add
add
arpl
bound
add
popa
add
pop
add
pop
add
pop
add
add
pop
add
pop
add
pop
add
push
add
push
add
add
push
add
push
add
push
add
push
add
dec
add
dec
add
add
dec
add
inc
add
inc
add
add
inc
add
inc
add
cmp
cmp
cmp
cmp
cmp
xor
xor
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
lret
lret
lret
lret
add
add
add
add
add
add
add
add
add
add
add
add
add
int3
icebp
lock
push
jmp
aad
lret
add
add
add
add
add
add
add
add
add
add
out
mov
call
add
add
add
add
add
add
add
sub
xchg
jo
cli
cli
cli
mul
lret
ret
fmul
add
add
add
add
add
into
jecxz
xorb
mov
cli
cli
cli
clc
fdivrs
add
add
add
adc
ret
mov
cli
cli
cli
cli
cli
cli
cli
cli
fsubs
shl
lret
add
add
mov
iret
movsl
xchg
fwait
mov
shr
clc
cli
cli
cli
cli
cli
cli
clc
mov
lret
xchg
rorl
nop
xchg
sahf
mov
xchg
cltd
das
mov
cli
cli
cli
cli
cli
mov
stos
lret
xchg
cltd
lahf
lcall
jno
jae
test
out
cli
mov
lret
add
mov
xchg
pusha
fs
jno
jae
ja
addl
lret
add
xchg
popf
mov
pop
pop
pop
pop
popa
bound
push
jo
jae
ja
cmp
inc
lods
add
lret
pop
push
push
push
pop
pop
pop
pop
pop
popa
bound
push
jo
jae
ja
jns
add
add
push
push
push
push
pop
pop
pop
pop
pop
pusha
bound
push
jo
test
mov
add
add
add
nop
nop
nop
nop
push
push
push
push
pop
pop
pop
pop
pop
pusha
bound
jae
movsl
mov
add
add
add
add
add
add
push
pop
pop
pop
pop
movsb
movsb
movsb
movsb
add
add
add
add
add
add
add
add
add
add
add
fwait
popf
popf
popf
popf
popf
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cld
aas
push
add
inc
add
add
pop
clc
add
pop
loopne
add
addb
add
add
add
add
add
add
add
add
add
add
pop
add
add
loopne
add
incb
pop
jmp
jg
incl
add
add
mov
add
add
add
add
add
add
add
sbb
addb
add
mov
add
sbb
add
add
add
add
add
andb
pop
add
add
dec
add
hlt
adc
enter
mov
add
add
add
add
add
pop
push
add
add
add
add
add
and
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
sub
add
sub
add
and
add
sbb
add
adc
add
pop
add
add
add
add
add
adc
add
add
add
add
add
addb
add
add
add
add
push
add
add
add
daa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
nop
es
xlat
inc
inc
dec
cli
pop
pop
pusha
sti
inc
inc
inc
out
sub
sub
and
push
push
lods
add
add
add
add
add
cmp
add
and
add
or
add
add
add
add
add
add
add
add
pop
pop
mov
inc
inc
out
popf
popf
decl
ljmp
jmp
incw
addb
pop
pop
pop
repz
adc
mov
add
nop
add
add
add
dec
add
add
add
add
add
add
add
adc
add
sub
add
dec
or
or
sub
ja
ja
mov
mov
fstp
xlat
xlat
xlat
incl
test
xor
xor
xor
xor
xor
xor
inc
inc
inc
lcall
pop
jp
jns
xchg
pop
ljmp
add
add
add
add
sbb
add
push
add
add
add
add
add
add
add
add
add
add
push
fwait
aas
aas
aas
fcoms
lret
fdivr
aad
aad
mov
addr16
jno
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
cmp
cmp
push
mov
out
pop
pop
pop
mov
add
add
add
sub
add
or
add
add
add
or
add
add
sub
mov
imul
cmpsb
cmpsb
fstp
fcmovu
ret
incl
popa
popa
incl
test
call
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
xchg
xchg
lcall
pop
faddl
add
mov
add
add
add
add
sub
dec
dec
mov
ret
ret
ret
fstp
iret
iret
iret
jmp
insb
insb
pushl
jmp
mov
ljmp
test
xchg
lcall
cltd
cltd
decl
jae
call
push
cmp
cmp
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
cmp
cmp
mov
mov
add
add
add
add
test
aad
fdivr
mov
xchg
call
mov
ljmp
test
mov
mov
rcl
sar
jmp
into
int
mov
mov
mov
mov
test
test
pushl
cmpsl
cmpsl
jle
jle
pop
pop
pop
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
ljmp
inc
inc
mov
add
inc
add
add
lcall
jnp
decl
mov
mov
mov
ljmp
mov
inc
loope
loope
in
in
in
jmp
in
jmp
loopne
fdivrp
fdivr
fcmovnu
fcmovu
aam
aam
enter
mov
mov
mov
mov
decl
push
pushl
xor
pushl
xor
call
inc
mov
add
inc
add
add
stos
stos
mov
mov
pushl
scas
scas
inc
ret
ret
fcmovnu
out
out
out
in
in
in
jmp
out
jmp
in
jmp
jecxz
jmp
loope
jmp
loopne
fdivr
fcmovnu
fcmovu
xlat
xlat
xlat
call
call
rcl
dec
leave
leave
inc
mov
enter
mov
pop
pop
decl
dec
dec
mov
add
inc
add
add
pushl
lods
lods
inc
rol
aam
aam
in
in
in
push
icebp
icebp
push
icebp
icebp
push
lock
out
out
out
in
in
in
jmp
jmp
ljmp
jmp
in
jmp
in
jmp
loope
jmp
loopne
fstp
fcmovnu
fcmovu
fcomp
fdivr
call
aad
call
rcl
dec
rcl
call
rcl
call
rcl
lcall
cwtl
add
add
xchg
xchg
xchg
dec
lret
out
out
repz
cli
cli
cli
clc
clc
clc
push
div
push
cmc
cmc
push
hlt
hlt
push
icebp
icebp
push
lock
out
out
out
in
in
in
jmp
jmp
ljmp
jmp
in
jmp
in
jmp
loop
jmp
loopne
fstp
fcmovnu
fcmovu
fcomp
fdivr
call
aad
call
aam
pushl
cmp
cmp
add
push
add
add
addl
into
push
cmc
cmc
std
std
std
sti
sti
sti
cli
cli
cli
stc
stc
stc
push
div
push
cmc
cmc
push
hlt
hlt
push
icebp
icebp
push
lock
out
out
out
in
in
in
jmp
jmp
ljmp
jmp
in
jmp
in
jmp
loop
jmp
loopne
fstp
mov
cwtl
cwtl
out
push
scas
sub
sub
sbb
push
add
add
pop
pop
pop
adc
pop
fs
jecxz
sti
sti
sti
cli
cli
cli
stc
stc
stc
push
div
push
cmc
cmc
push
hlt
hlt
push
repnz
lock
out
out
out
in
in
in
jmp
jmp
ljmp
fcmovu
movsl
movsl
movsl
incl
push
push
andl
and
add
add
add
add
pop
pop
pop
xor
jbe
sahf
sahf
mov
mov
jmp
in
stc
stc
stc
push
div
push
cmc
cmc
push
hlt
hlt
push
repnz
lock
popf
popf
popf
out
imul
xor
arpl
add
or
push
push
push
inc
jbe
jbe
pushf
pushf
pushf
aam
mov
mov
mov
push
subl
das
xor
add
or
add
add
add
add
adc
add
add
add
add
add
add
push
add
inc
add
add
pop
clc
add
pop
loopne
add
add
add
add
add
rolb
pop
cld
add
inc
ud0
clc
incl
add
add
xchg
mov
add
add
add
add
add
add
add
sbb
addb
add
mov
add
sbb
add
add
add
add
add
andb
pop
add
add
dec
add
hlt
adc
enter
mov
add
add
add
add
add
pop
push
add
add
add
add
add
and
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
add
add
or
incl
pop
pop
pop
add
add
add
push
add
push
add
inc
add
add
bound
test
test
cwtl
xchg
cwtl
add
outsl
add
mov
add
jbe
jne
je
imul
add
mov
mov
add
stos
stos
add
pushf
pushf
add
mov
add
add
ja
outsl
outsb
insl
add
lcall
xchg
xchg
xchg
add
nop
add
push
add
pop
add
pop
add
push
add
lods
lods
add
stos
add
movsl
movsb
add
mov
add
xchg
xchg
add
aam
rcl
rolb
int
into
add
int
add
enter
mov
add
mov
scas
add
mov
lea
fldl
rcl
rolb
iret
rcl
add
fcmovu
add
aaa
cmp
cmpsl
cmpsl
test
add
dec
add
inc
add
jno
addb
add
std
std
add
cld
cld
add
sti
sti
add
cli
cli
add
stc
stc
add
clc
clc
add
div
add
div
add
cmc
cmc
add
hlt
hlt
add
repz
repnz
icebp
icebp
add
lock
out
out
add
out
out
add
in
in
add
in
in
add
jmp
add
ljmp
call
out
add
out
add
in
add
in
add
jecxz
add
loop
add
loope
add
loopne
add
add
add
fstp
add
add
fcmovnu
add
fcmovu
add
add
fcomp
add
xlat
xlat
add
add
aad
add
aam
add
rcl
add
rcl
add
rcl
add
rcl
add
iret
iret
add
into
into
add
int
add
int3
int3
add
lret
lret
add
leave
leave
add
enter
mov
les
ret
ret
ret
add
ret
rol
add
rol
mov
mov
mov
add
mov
mov
add
mov
add
mov
add
mov
add
mov
add
scas
scas
add
lods
lods
add
stos
stos
add
test
add
cmpsb
cmpsb
add
movsb
movsb
add
mov
mov
add
sahf
sahf
add
pushf
pushf
add
lcall
cwtl
cwtl
cwtl
add
xchg
xchg
add
xchg
xchg
add
popl
mov
lea
mov
add
mov
add
xchg
add
addl
addb
addb
add
add
jnp
jp
jp
jns
jns
js
js
jbe
jbe
je
je
jae
jae
jb
jb
jno
jno
jo
jo
outsb
outsb
outsb
add
insl
add
add
imul
addr16
data16
add
add
arpl
bound
add
popa
add
pop
add
pop
add
pop
add
add
pop
add
pop
add
pop
add
push
add
push
add
add
push
add
push
add
push
add
push
add
dec
add
dec
add
add
dec
add
inc
add
inc
add
add
inc
add
inc
add
cmp
cmp
cmp
cmp
cmp
xor
xor
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ret
ret
ret
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
dec
out
dec
fcmovbe
lds
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ret
loop
dec
add
or
push
out
jecxz
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ret
in
cmc
iret
xchg
add
lods
or
adc
in
daa
in
lds
add
add
add
add
add
add
add
add
add
add
add
add
add
icebp
out
stos
jp
or
lods
repnz
cli
cli
out
jecxz
mov
sbb
lret
add
add
add
add
add
add
add
add
add
add
add
fdivp
rcll
xor
cli
cli
cli
cli
cli
cli
neg
scas
or
in
add
add
add
add
add
add
add
add
add
out
mov
jo
ja
test
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cmc
fnstenv
lds
add
add
add
add
add
add
iret
jmp
movsl
jo
jae
jle
iret
out
push
mov
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
fistps
and
in
lds
add
add
add
add
xlat
in
les
test
xchg
sbb
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
fisubrs
add
add
xlat
loope
mov
jo
ja
movsb
shl
leave
lcall
popf
rcl
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
clc
leave
sbb
jecxz
add
add
int
jo
jb
mov
xchg
xchg
xchg
pushf
mov
sbb
iret
ljmp
cli
cli
cli
cli
cli
jmp
add
xchg
je
test
fbstp
cwtl
sahf
mov
push
adc
and
xor
pop
xchg
xchg
mov
lock
cli
cli
cli
cli
cli
cli
cli
call
lea
xchg
rcr
pushf
mov
mov
bound
jo
jb
js
adc
xchg
mov
cli
cli
cli
cli
xchg
mov
xlat
mov
mov
mov
pop
imul
outsb
outsl
jo
jb
je
jbe
xchg
pushf
shl
cli
cli
cli
stos
inc
xlat
shll
cwtl
sahf
mov
popa
fs
imul
jo
jno
je
jbe
jns
cmp
mov
xlat
mov
cltd
lahf
lahf
mov
pop
pop
popa
popa
bound
addr16
insl
outsb
outsl
jo
jno
je
jne
ja
cmp
inc
xlat
cmpsb
xchg
xchg
fwait
mov
pop
pop
pop
pop
pop
pop
popa
popa
bound
addr16
insl
outsb
outsb
jo
jno
je
jne
ja
cmp
cmp
dec
xlat
lods
pushf
xchg
subl
pop
pop
pop
pop
pop
pop
pop
popa
popa
bound
addr16
insl
outsb
outsb
jo
jno
je
jne
ja
aaa
inc
inc
inc
add
pushf
je
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pop
popa
popa
bound
gs
insl
outsb
outsb
outsl
jno
jb
je
ja
mov
add
add
rol
dec
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pop
popa
popa
bound
gs
insl
outsb
outsb
outsl
jno
cltd
leave
add
add
add
add
rol
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pop
pusha
popa
bound
fs
imul
lret
into
into
add
add
add
add
add
add
add
add
rol
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pop
pusha
popa
bound
fs
add
add
add
add
add
add
add
add
add
add
add
mov
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pusha
jbe
ret
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rol
push
push
push
pop
pop
pop
gs
lret
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
ror
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
into
into
into
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
lcall
incl
add
cld
add
incl
add
jmp
add
add
incl
add
incb
add
incl
add
clc
add
add
add
rolb
add
add
incl
add
add
add
clc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sldt
lock
add
jg
add
add
add
incl
add
lock
aas
incl
add
incb
add
incl
add
jmp
pop
incl
add
clc
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
add
add
sbb
addb
add
mov
add
sbb
add
add
add
add
add
andb
pop
add
add
dec
add
hlt
adc
enter
mov
add
add
add
add
add
pop
push
add
add
add
add
add
and
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
push
add
add
add
xor
add
add
add
add
adc
add
pop
add
add
add
add
add
add
add
add
add
add
add
push
adc
daa
sub
and
and
push
push
pop
ret
adc
add
add
add
add
add
push
add
add
add
daa
add
add
add
add
add
add
add
add
add
add
or
or
sbb
mov
das
das
repz
aaa
cmp
pop
pop
pop
incl
jo
jmp
call
push
cmp
cmp
xor
xor
and
and
shrd
add
xchg
add
add
add
pop
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
push
push
andb
daa
iret
ds
je
je
mov
mov
push
dec
push
lcall
fwait
fwait
incl
pushf
pushf
lcall
xchg
cwtl
incl
je
jmp
incl
inc
repz
das
aad
adc
mov
add
xchg
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
sbb
sbb
dec
dec
dec
lcall
rcl
fstp
test
test
jb
jb
popf
popf
popf
incl
inc
pushl
xor
pushl
xor
pushl
xor
decl
dec
lcall
js
js
xchg
xchg
xchg
lcall
xchg
call
push
out
xor
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
or
and
mov
cmp
repz
jo
mov
mov
fstp
fdivr
fcomp
fdivr
rcl
sar
xchg
xchg
xchg
decl
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
inc
inc
inc
jmp
incl
pushf
pushf
incl
insl
sti
inc
inc
inc
fmull
or
lods
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
xorb
xor
dec
dec
dec
cli
nop
nop
nop
dec
leave
leave
fstp
fcmovnu
call
rcl
inc
mov
xchg
xchg
xchg
ljmp
push
decl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
incl
inc
jmp
lcall
call
jbe
sti
inc
inc
inc
xlat
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
push
push
push
sahf
cmp
cmp
fs
fstp
fstp
fcmovu
aam
aam
iret
iret
iret
pushl
je
dec
dec
dec
ljmp
jge
jl
cwtl
cwtl
cwtl
decl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
jmp
popa
lcall
lcall
sub
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
or
sub
sub
addl
fstp
fstp
fcomp
fdivr
rcl
sar
mov
call
push
push
lcall
pop
call
mov
pushl
pushf
pushf
call
mov
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
jmp
lcall
cwtl
xchg
ljmp
push
or
add
jg
add
inc
add
add
add
add
add
add
add
add
adc
cmp
popa
popa
popa
cli
xchg
xchg
xchg
call
aam
fstp
fdivr
call
rcl
jmp
jae
call
push
jl
jl
mov
mov
mov
mov
pushl
scas
jmp
mov
lods
lods
lods
incl
imul
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
cmp
cmp
jl
jl
stos
stos
stos
decl
daa
rolb
add
add
add
xor
xor
dec
dec
dec
fnstcw
js
stos
stos
stos
fstp
fstp
fcmovnu
aam
aam
rol
decl
pop
pop
pushl
jb
popf
popf
popf
mov
mov
mov
mov
mov
scas
scas
scas
ljmp
cmpsl
cmpsl
jmp
mov
ljmp
scas
scas
pushl
mov
jmp
mov
call
push
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
call
ljmp
test
mov
dec
dec
dec
dec
test
fstp
fstp
fcos
lret
lret
lret
jmp
je
jmp
popa
call
mov
mov
pushl
mov
lods
lods
lods
jmp
cmpsb
cmpsb
jmp
rol
fdivrp
clc
clc
clc
inc
ret
ret
pushl
mov
xchg
lcall
movsl
movsb
ljmp
scas
scas
pushl
mov
call
jbe
decl
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
call
push
pushl
addr16
add
jno
push
push
jge
mov
fdivr
fcomp
fdivr
mov
mov
xchg
push
ljmp
rol
mov
mov
pushl
mov
stos
stos
stos
jmp
movsl
movsl
mov
aad
push
icebp
icebp
jmp
jmp
jecxz
jecxz
fdivrp
fstp
fdivr
fcmovnu
fcmovu
aad
aad
mov
mov
lods
lods
jmp
stos
stos
ljmp
mov
mov
mov
decl
push
push
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xchg
in
add
add
push
push
mov
mov
jo
jns
jns
popf
popf
popf
inc
ret
mov
mov
mov
mov
mov
scas
scas
scas
ljmp
cmpsl
cmpsl
pushl
sar
jmp
out
out
call
loop
jmp
loop
jmp
loope
fdivrp
fstp
fdivr
fcmovnu
fcmovu
fcos
fcos
xlat
xlat
xlat
dec
int
inc
ret
ret
mov
mov
pushl
mov
mov
pushl
jno
cmp
cmp
xor
xor
xor
xor
xor
xor
mov
cwtl
cwtl
in
add
add
pop
pop
mov
jb
xchg
xchg
xchg
pushl
ret
mov
mov
mov
mov
mov
lods
lods
lods
ljmp
mov
inc
mov
out
out
out
out
out
in
in
in
jmp
out
jmp
out
jmp
in
jmp
in
jmp
loop
jmp
loop
jmp
loope
jmp
loopne
fdivrp
fstp
fdivr
fdivr
fcmovu
fcos
fcos
xlat
xlat
xlat
call
call
aam
dec
leave
leave
inc
ret
ret
mov
mov
ret
mov
mov
inc
inc
inc
pushl
xor
jmp
mov
add
pop
mov
rol
mov
mov
pushl
mov
stos
stos
stos
ljmp
rol
fdivrp
out
out
out
out
out
out
out
out
out
in
in
in
in
in
in
jmp
jmp
jmp
jmp
call
jmp
in
jmp
in
jmp
jecxz
jmp
loop
jmp
loope
jmp
loopne
fdivrp
fstp
fdivr
fdivr
fcmovu
fcos
fcos
fcomp
fdivr
call
call
rcl
dec
int
dec
enter
mov
dec
enter
jle
ljmp
cmpsl
cmpsl
ljmp
pop
mov
mov
mov
mov
scas
scas
scas
ljmp
mov
sar
ljmp
push
icebp
icebp
push
repnz
icebp
icebp
out
out
out
out
out
out
out
out
out
in
in
in
in
in
in
jmp
jmp
jmp
jmp
call
jmp
in
jmp
in
jmp
jecxz
jmp
loop
jmp
loope
jmp
loopne
fstp
fdivr
fdivr
fcmovnu
fcos
fcos
fcomp
fdivr
call
call
aad
call
rcl
call
rcl
dec
rcl
dec
into
into
dec
into
into
lcall
add
push
pop
pop
pop
mov
scas
scas
mov
int3
int3
jmp
loop
in
in
in
push
cmc
cmc
push
div
push
cmc
cmc
push
cmc
cmc
push
repz
repnz
repnz
icebp
icebp
out
out
out
out
out
out
out
out
out
in
in
in
in
in
in
jmp
jmp
jmp
jmp
call
jmp
in
jmp
in
jmp
jecxz
jmp
loop
jmp
loop
jmp
loopne
fstp
fdivr
fdivr
fcmovnu
fcos
fcos
fcomp
fdivr
call
call
aad
call
aam
fdivr
mov
add
bound
scas
scas
scas
fcos
jmp
jmp
div
idiv
cld
cld
cld
sti
sti
sti
cli
cli
cli
stc
stc
stc
stc
stc
stc
push
div
push
cmc
cmc
push
cmc
cmc
push
hlt
hlt
push
repnz
repnz
icebp
icebp
out
out
out
out
out
out
out
out
out
in
in
in
in
in
in
jmp
jmp
ljmp
call
out
jmp
in
jmp
in
jmp
jecxz
jmp
loop
jmp
loop
jmp
loopne
fdivrp
fdivr
fdivr
fcmovnu
fcos
fcos
fcomp
fdivr
inc
ret
xchg
xchg
xchg
incl
gs
add
add
arpl
and
js
test
into
into
push
cmc
cmc
std
std
std
cld
cld
cld
cld
cld
cld
cli
cli
cli
stc
stc
stc
stc
stc
stc
push
div
push
cmc
cmc
push
cmc
cmc
push
hlt
hlt
push
repnz
repnz
icebp
icebp
out
out
out
out
out
out
out
out
out
in
in
in
in
in
in
jmp
jmp
ljmp
call
out
jmp
in
jmp
in
jmp
jecxz
jmp
loop
jmp
loop
jmp
loopne
fdivrp
fdivr
fdivr
mov
mov
jl
jl
pop
pop
pop
mov
and
and
add
add
add
add
pusha
pusha
pusha
adc
pusha
push
pop
pop
pop
xchg
lea
mov
loope
loope
std
std
std
cld
cld
cld
cld
cld
cld
cli
cli
cli
stc
stc
stc
stc
stc
stc
push
div
push
cmc
cmc
push
cmc
cmc
push
hlt
hlt
push
repnz
repnz
icebp
icebp
out
out
out
out
out
out
out
out
out
in
in
in
in
in
in
jmp
jmp
ljmp
jmp
out
jmp
in
jmp
in
jmp
jecxz
jmp
loop
jmp
loop
dec
lret
lret
jmp
insb
insb
out
ds
add
add
pop
pop
pop
and
pop
fs
push
xchg
xchg
xchg
icebp
rol
call
cld
cld
sti
sti
sti
stc
stc
stc
stc
stc
stc
push
div
push
cmc
cmc
push
cmc
cmc
push
hlt
hlt
push
repnz
repnz
icebp
icebp
push
lock
out
out
out
out
out
out
in
in
in
in
in
in
jmp
jmp
ljmp
jmp
out
pushl
test
mov
and
and
add
add
add
add
pop
pop
pop
xor
push
test
jb
xchg
xchg
xchg
dec
leave
leave
push
lock
stc
stc
stc
stc
stc
stc
clc
clc
clc
push
div
push
cmc
cmc
push
hlt
hlt
push
repnz
repnz
icebp
icebp
push
lock
out
out
out
out
out
out
in
in
in
call
xlat
xlat
jmp
js
out
cmp
mov
xor
arpl
add
push
add
add
add
add
push
adc
push
push
push
push
push
movsl
js
js
test
test
rcl
sar
stc
stc
stc
clc
clc
clc
push
div
push
cmc
cmc
push
hlt
hlt
push
repz
call
mov
xchg
pop
pop
pop
int
cmp
test
xor
inc
add
add
add
add
push
push
push
and
push
je
pop
pop
mov
mov
dec
into
into
ljmp
jp
inc
inc
inc
mov
cmp
arpl
es
add
add
push
push
push
inc
dec
dec
dec
jbe
aas
aas
cmp
add
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
cld
pop
incl
add
jmp
add
incl
add
incl
add
incb
add
incl
add
lock
add
add
inc
add
add
add
incl
add
add
add
clc
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
cld
add
add
incl
add
rolb
ud0
add
clc
add
jg
add
incl
add
clc
aas
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
adc
add
add
add
add
add
adc
add
add
and
push
add
and
add
add
add
or
add
add
and
add
add
add
adc
add
xor
add
add
or
add
add
add
add
add
add
add
push
add
add
add
