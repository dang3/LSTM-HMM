push
push
push
mov
movzbl
mov
shl
movzwl
mov
mov
xor
div
movzwl
mov
add
sub
push
mov
imul
sub
push
call
movzwl
mov
test
je
call
mov
mov
mov
and
push
push
call
movzwl
mov
test
je
mov
add
push
call
mov
sub
mov
push
mov
or
sub
push
call
mov
test
je
mov
imul
mov
add
push
mov
sub
sub
push
mov
or
imul
push
push
call
test
jne
push
push
call
movzwl
mov
mov
xor
div
mov
mov
and
push
mov
add
sub
push
call
movzbl
mov
test
je
call
mov
sub
movzbl
mov
shr
movzbl
cmp
jle
mov
add
push
call
cmp
jge
mov
jmp
mov
movzwl
cmp
je
mov
add
push
mov
xor
mov
add
push
call
cmp
je
mov
jmp
mov
imul
sub
push
mov
add
add
push
call
movzwl
mov
test
je
mov
xor
or
push
mov
or
or
push
mov
or
sub
push
mov
or
push
call
mov
pop
pop
pop
ret
push
mov
sub
push
push
push
mov
mov
movzwl
mov
or
sub
push
mov
add
add
push
call
movzwl
mov
test
je
call
mov
or
xor
movzwl
mov
test
je
mov
and
or
push
mov
xor
push
mov
sub
push
push
call
mov
and
push
mov
sub
add
push
call
movzwl
mov
test
je
call
mov
shr
mov
mov
mov
cmp
jge
mov
mov
jmp
mov
or
mov
movzbl
shl
mov
mov
sub
push
mov
movzbl
sub
push
call
movzwl
mov
test
je
call
mov
test
jne
push
call
mov
mov
imul
imul
movzwl
movzbl
sub
push
movzbl
xor
push
call
mov
mov
test
je
mov
movzbl
xor
push
mov
xor
mov
sub
push
mov
or
push
call
mov
add
mov
mov
sub
movzwl
mov
xor
sub
movzwl
cmpb
je
call
mov
movzbl
or
sub
push
movzbl
movzbl
xor
add
push
call
mov
mov
test
je
movzbl
xor
movzbl
xor
push
call
mov
or
mov
imul
mov
mov
movzbl
xor
push
movzbl
movzbl
add
push
call
movzwl
mov
test
je
call
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
imul
imul
movzbl
mov
shr
mov
cmp
jge
mov
and
push
call
mov
test
je
mov
or
mov
add
push
call
mov
sub
push
mov
xor
push
call
movzwl
mov
test
je
mov
sub
push
call
mov
shr
mov
cmp
jle
mov
xor
push
push
push
mov
imul
push
call
mov
and
push
mov
and
push
call
mov
test
je
call
mov
add
sub
mov
xor
mov
mov
or
mov
mov
test
je
push
push
mov
or
and
push
push
call
mov
xor
add
mov
xor
mov
mov
mov
mov
mov
mov
mov
or
mov
test
je
movzbl
mov
jmp
push
movzbl
and
push
call
mov
mov
test
je
push
push
mov
and
push
call
mov
or
add
mov
movzbl
and
movzbl
cmpl
jne
mov
mov
jmp
mov
sub
cmp
je
movl
mov
xor
divl
mov
cmpl
jge
call
mov
add
mov
cmpl
je
pushl
movzbl
imul
push
movzbl
push
pushl
call
movzbl
and
mov
imul
mov
mov
or
xor
mov
movzbl
xor
add
mov
movzbl
mov
mov
mov
or
mov
mov
movzwl
add
sub
push
movzbl
movzwl
and
push
call
mov
mov
test
je
pushl
movzbl
or
push
movzbl
imul
push
call
movzbl
imul
add
mov
add
mov
movzbl
sub
mov
mov
movzwl
imul
sub
mov
add
mov
mov
and
mov
cmpb
jne
pushl
movzbl
push
movzwl
and
movzwl
sub
push
call
push
mov
movzbl
add
sub
push
call
mov
mov
test
je
pushl
mov
movzbl
or
push
pushl
mov
or
push
call
mov
and
sub
mov
sub
mov
movzbl
xor
mov
cmpl
jge
movzwl
mov
jmp
push
movzwl
sub
sub
push
call
mov
mov
test
je
movzwl
push
pushl
movzbl
xor
push
mov
movzbl
or
movzbl
add
push
call
jmp
mov
and
and
mov
movzbl
add
add
mov
xor
mov
movzbl
shl
movzbl
test
je
movzbl
xor
mov
imul
push
push
call
mov
mov
mov
movzbl
sub
mov
mov
sub
push
mov
and
push
call
mov
test
je
push
mov
and
push
movzbl
imul
push
push
call
movzbl
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
movzbl
mov
shl
movzbl
cmp
jge
call
mov
imul
push
mov
add
push
call
movzbl
mov
test
je
push
mov
or
push
mov
xor
xor
push
call
mov
imul
movzbl
mov
or
xor
mov
mov
test
je
call
movzwl
shr
mov
mov
xor
movzwl
add
movzbl
movzbl
and
push
mov
movzbl
imul
push
call
mov
mov
test
je
mov
sub
add
push
movzwl
push
movzwl
push
call
mov
xor
or
mov
movzwl
sub
mov
mov
or
or
movzbl
movzbl
and
mov
mov
or
mov
mov
test
je
movzbl
xor
push
push
movzwl
xor
push
call
mov
sub
sub
push
movzwl
imul
add
push
call
mov
mov
test
je
mov
or
push
movzbl
push
mov
xor
imul
push
call
mov
sub
movzbl
add
mov
cmpb
jne
push
call
cmp
jle
mov
mov
jmp
cmp
jne
push
pushl
push
push
call
mov
mov
mov
movzwl
movzbl
or
sub
push
mov
movzwl
imul
push
call
movzbl
mov
test
je
call
movzwl
shr
mov
movzbl
movzwl
add
sub
push
movzwl
or
add
push
call
movzbl
mov
test
je
call
mov
mov
mov
mov
movzwl
or
and
mov
mov
and
push
mov
movzbl
add
push
call
mov
mov
test
je
movzwl
sub
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shl
movzbl
cmp
jge
mov
mov
jmp
mov
shl
movzwl
mov
shr
mov
mov
mov
xor
div
movzbl
mov
xor
push
mov
imul
push
call
mov
mov
test
je
movzbl
push
movzbl
push
mov
and
add
push
call
mov
movzwl
movzbl
shr
mov
cmpb
jge
movzbl
or
push
movzbl
push
push
movzbl
sub
push
call
mov
movzwl
imul
push
movzwl
movzbl
sub
push
call
movzwl
mov
test
je
call
movzwl
xor
movzwl
cmp
jle
movzbl
mov
jmp
mov
or
push
movzbl
add
push
call
mov
mov
test
je
call
mov
movzwl
cmpb
jge
call
cmp
jge
movzbl
mov
jmp
mov
movzwl
and
push
movzwl
movzbl
xor
push
call
mov
test
je
mov
movzbl
and
imul
push
mov
sub
push
mov
or
mov
imul
push
call
mov
xor
mov
movzbl
mov
movzbl
and
mov
imul
mov
movzbl
movzwl
xor
push
mov
sub
push
call
mov
mov
test
je
push
movzwl
push
call
mov
test
jne
movzbl
push
movzwl
push
push
push
call
mov
movzbl
mov
mov
add
push
movzwl
imul
push
call
mov
mov
test
je
mov
movzwl
xor
push
movzwl
push
call
mov
and
imul
mov
mov
sub
movzbl
movzbl
shl
mov
cmpb
jge
mov
jmp
mov
xor
add
push
movzwl
sub
push
call
mov
mov
test
je
movzbl
xor
imul
push
mov
or
movzbl
add
push
call
movzwl
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
movzwl
mov
shl
mov
mov
mov
xor
div
movzwl
mov
test
je
mov
jmp
mov
xor
or
movzwl
cmp
jge
mov
imul
push
mov
sub
push
push
call
mov
shr
movzwl
mov
xor
push
mov
or
push
call
mov
test
je
mov
or
or
push
call
mov
imul
movzwl
cmp
jne
call
mov
movzwl
mov
test
je
mov
and
push
mov
add
push
mov
sub
sub
push
mov
sub
push
call
cmp
jne
call
push
mov
add
push
call
movzwl
mov
test
je
mov
imul
push
call
mov
sub
movzwl
test
je
mov
and
add
push
mov
or
mov
sub
push
mov
and
push
call
mov
xor
add
push
mov
and
push
call
mov
test
je
mov
imul
imul
push
mov
and
push
mov
and
push
mov
xor
mov
add
push
call
test
jne
push
push
call
movzwl
mov
xor
add
movzwl
test
je
call
mov
shl
mov
cmp
jle
mov
xor
push
movzwl
push
call
mov
mov
cmp
jge
call
mov
and
imul
movzwl
mov
imul
push
movzwl
and
push
call
mov
test
je
movzwl
or
push
call
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
mov
xor
div
movzwl
mov
test
je
push
mov
or
mov
imul
push
mov
or
mov
sub
push
mov
or
push
call
cmp
jne
mov
imul
push
mov
or
mov
sub
push
mov
and
push
mov
or
and
push
call
mov
add
push
mov
sub
push
call
movzwl
mov
test
je
push
call
mov
movzbl
mov
and
push
push
call
movzwl
mov
test
je
mov
and
push
push
push
call
mov
test
jne
push
push
push
push
call
movzbl
mov
mov
xor
div
movzwl
mov
movzwl
cmp
jne
mov
and
add
push
mov
imul
imul
push
call
mov
mov
mov
add
push
movzbl
xor
push
call
movzwl
mov
test
je
push
movzbl
push
mov
imul
push
call
mov
test
jne
push
movzbl
push
push
push
call
movzwl
movzbl
mov
xor
div
movzbl
mov
test
je
movzbl
jmp
mov
mov
xor
div
mov
mov
shl
mov
movzbl
movzwl
add
push
movzwl
movzbl
imul
push
call
movzbl
mov
test
je
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
movzbl
mov
mov
test
je
call
push
mov
imul
push
call
mov
test
je
push
push
mov
imul
imul
push
call
mov
shr
movzwl
mov
add
mov
mov
shr
movzwl
cmp
jge
mov
and
imul
push
mov
sub
push
mov
add
push
call
mov
xor
div
mov
cmp
jle
mov
sub
push
call
cmp
jne
mov
jmp
mov
sub
push
mov
add
push
call
mov
test
je
call
mov
push
mov
and
push
call
movzwl
mov
test
je
mov
and
mov
imul
push
call
mov
movzwl
mov
mov
cmpl
jge
mov
and
or
push
mov
imul
add
push
pushl
call
mov
shr
mov
mov
imul
push
mov
sub
push
call
mov
test
je
mov
imul
mov
sub
push
push
mov
or
imul
push
call
mov
imul
mov
cmp
jne
pushl
call
mov
and
push
mov
or
push
call
mov
test
je
call
mov
test
jne
call
mov
mov
shl
mov
mov
shl
mov
cmpl
jle
push
call
mov
add
mov
cmp
jge
mov
imul
add
push
call
mov
imul
push
mov
xor
push
call
mov
mov
test
je
pushl
mov
and
and
push
mov
and
and
push
mov
sub
push
call
mov
imul
imul
mov
mov
xor
push
mov
or
push
call
mov
mov
test
je
pushl
pushl
mov
sub
sub
push
mov
or
movzwl
add
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
movzwl
mov
shl
movzwl
mov
shr
movzwl
cmp
jne
mov
and
push
mov
or
push
push
call
push
mov
add
add
push
call
movzwl
mov
test
je
push
mov
xor
push
mov
xor
and
push
call
mov
or
sub
mov
xor
mov
mov
xor
sub
mov
mov
movzwl
imul
sub
mov
xor
mov
movzwl
sub
mov
cmp
jle
movzwl
jmp
mov
mov
mov
mov
or
or
movzwl
cmp
jle
movzwl
push
push
push
call
movzwl
imul
sub
mov
movzwl
shr
mov
movzwl
xor
sub
push
push
call
mov
mov
test
je
push
mov
xor
push
call
mov
movzwl
xor
sub
cmp
je
mov
mov
movzbl
or
imul
mov
movzbl
shl
mov
movzbl
mov
movzbl
imul
mov
movzbl
movzbl
or
movzbl
mov
mov
movzbl
movzbl
sub
mov
movzbl
movzbl
xor
push
movzbl
and
push
call
mov
mov
test
je
movzbl
and
movzbl
sub
push
call
movzbl
and
add
mov
add
mov
movzbl
and
mov
movzbl
movzbl
xor
push
movzbl
movzbl
imul
push
call
mov
mov
test
je
movzbl
push
movzbl
or
movzbl
add
push
movzbl
or
movzbl
add
push
call
movzbl
movzbl
or
sub
add
mov
add
mov
cmpl
jne
pushl
movzbl
push
call
movzwl
movzbl
and
push
mov
movzbl
or
push
call
mov
mov
test
je
movzbl
movzbl
add
sub
push
movzbl
movzwl
sub
add
push
call
mov
sub
mov
mov
add
mov
jmp
mov
movzwl
mov
xor
sub
mov
xor
mov
movzwl
add
mov
mov
or
add
push
mov
movzwl
sub
add
push
call
mov
mov
test
je
movzwl
push
call
mov
mov
mov
mov
mov
mov
test
je
mov
imul
add
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
movzbl
mov
xor
or
movzbl
cmp
jne
mov
mov
jmp
mov
add
push
mov
and
push
call
movzbl
mov
test
je
call
mov
movzbl
cmp
jge
call
mov
or
push
mov
sub
push
call
movzbl
mov
test
je
call
mov
shr
mov
cmpb
jge
push
mov
imul
push
mov
or
mov
sub
push
call
movl
movzbl
mov
xor
div
movzbl
cmp
jne
mov
mov
jmp
mov
sub
add
mov
xor
mov
mov
or
movzbl
movzbl
and
mov
mov
mov
movzbl
and
add
mov
mov
shr
mov
movzwl
sub
mov
sub
mov
movzwl
imul
mov
cmp
jle
mov
jmp
mov
movzwl
imul
push
movzbl
sub
push
call
movzbl
mov
test
je
call
mov
imul
mov
add
movzwl
sub
mov
movzbl
movzwl
sub
movzbl
mov
movzbl
sub
push
mov
xor
push
call
movzbl
mov
test
je
movzbl
push
call
mov
add
mov
add
mov
mov
add
movzbl
mov
movzwl
imul
mov
sub
mov
movzbl
add
mov
cmp
jne
mov
imul
push
call
cmp
jle
mov
mov
jmp
mov
sub
push
movzbl
imul
push
call
mov
mov
test
je
call
movzwl
or
mov
movzwl
mov
movzbl
sub
add
cmp
je
movl
mov
mov
cmpl
jge
mov
mov
jmp
movzbl
imul
push
mov
movzbl
xor
sub
push
call
mov
mov
test
je
call
mov
mov
mov
test
je
call
cmpl
jne
call
cmpl
jne
movzwl
mov
jmp
movzbl
imul
push
movzwl
xor
push
call
mov
mov
test
je
mov
and
push
movzwl
add
sub
push
movzwl
xor
push
mov
imul
push
call
movzwl
and
or
mov
mov
test
je
movzbl
or
push
mov
and
movzbl
xor
push
movzwl
or
push
call
cmpb
jge
movzbl
jmp
movzwl
and
push
movzwl
movzbl
add
push
call
mov
mov
test
je
movzwl
xor
sub
push
pushl
movzbl
and
or
push
call
mov
and
mov
movzbl
movzwl
add
add
mov
sub
mov
jmp
movzbl
and
mov
sub
mov
mov
and
sub
movzbl
mov
movzwl
xor
sub
mov
mov
mov
add
movzbl
movzwl
xor
sub
mov
movzbl
sub
mov
mov
or
push
movzbl
add
sub
push
call
movzbl
mov
test
je
movzbl
push
mov
xor
push
mov
movzbl
or
xor
push
call
movzbl
movzwl
or
sub
mov
mov
mov
add
mov
movzwl
xor
sub
mov
mov
shl
movzbl
movzwl
add
sub
mov
mov
mov
movzbl
add
add
sub
mov
mov
mov
xor
div
mov
movzwl
movzbl
add
push
movzwl
add
push
call
mov
mov
test
je
mov
add
sub
push
call
mov
mov
mov
add
mov
movzbl
and
add
mov
mov
sub
mov
mov
test
je
movw
mov
or
mov
cmpw
jne
call
cmpw
jge
call
movzwl
movzwl
sub
add
push
push
call
mov
mov
test
je
movzwl
push
call
movzwl
shl
mov
cmpw
jne
movzwl
mov
jmp
movzbl
movzwl
xor
mov
mov
add
movzwl
movzwl
sub
sub
mov
movzbl
xor
mov
cmpb
jge
movzwl
jmp
movzwl
movzwl
xor
mov
movzwl
xor
and
mov
movzwl
movzwl
add
push
movzwl
movzbl
and
push
call
mov
mov
test
je
movzbl
push
movzwl
movzwl
add
push
movzwl
movzbl
xor
movzwl
or
push
movzbl
or
movzwl
sub
push
call
movzwl
movzbl
add
add
mov
movzbl
movzwl
movzbl
imul
cmp
je
mov
mov
movzbl
shr
mov
cmpb
jle
movzbl
add
push
movzbl
movzbl
sub
movzbl
add
push
movzbl
imul
push
call
movzbl
movzbl
imul
push
movzbl
movzbl
add
push
call
mov
mov
test
je
movzbl
add
movzbl
sub
push
movzbl
push
movzbl
or
movzbl
imul
push
movzbl
push
call
mov
movzbl
and
and
mov
mov
movzwl
imul
mov
mov
test
je
movzbl
and
push
call
movzbl
xor
movzbl
imul
mov
mov
shl
mov
shr
or
mov
movzbl
shr
mov
movzwl
movzwl
imul
mov
movzbl
xor
mov
add
mov
mov
shl
mov
movzbl
sub
add
mov
add
mov
mov
mov
cmpw
jge
movzwl
mov
jmp
jmp
movzbl
or
sub
mov
mov
cmp
jne
mov
mov
movzbl
mov
movzbl
add
push
movzbl
sub
push
call
mov
mov
test
je
movzbl
and
movzbl
add
push
movzbl
add
movzbl
sub
push
call
movzbl
shr
mov
cmpb
jne
call
movzbl
sub
mov
mov
mov
cmpb
jne
mov
movzbl
sub
push
mov
or
mov
sub
push
mov
or
xor
push
mov
sub
push
call
mov
mov
sub
mov
movzbl
or
add
mov
mov
sub
mov
movzbl
imul
push
movzbl
xor
push
call
mov
mov
test
je
movzbl
push
call
mov
movzbl
imul
sub
mov
mov
mov
movzbl
imul
add
mov
mov
mov
mov
movzbl
and
push
movzbl
movzwl
and
push
call
mov
mov
test
je
movzwl
push
movzbl
imul
imul
push
pushl
call
mov
add
movzwl
or
sub
mov
mov
mov
cmpl
jne
pushl
mov
movzbl
xor
push
movzbl
push
pushl
call
mov
imul
mov
add
mov
movzwl
mov
mov
shl
mov
cmpl
jle
call
movzbl
imul
sub
mov
mov
mov
add
movzbl
or
add
mov
movzbl
shr
mov
mov
movzbl
or
mov
sub
mov
mov
mov
add
mov
movzwl
and
or
mov
mov
movzbl
xor
sub
mov
xor
mov
mov
mov
cmpw
jne
movzbl
jmp
mov
sub
push
movzwl
movzbl
and
push
call
mov
mov
test
je
movzbl
add
push
call
mov
movzwl
add
sub
push
mov
movzwl
sub
add
push
movzwl
and
sub
push
movzbl
movzbl
imul
push
call
mov
movzbl
shr
mov
cmpw
jge
call
push
mov
movzwl
and
push
call
mov
mov
test
je
movzbl
movzbl
xor
push
movzbl
push
movzwl
and
push
mov
imul
push
call
movzwl
movzbl
and
mov
add
mov
mov
movzbl
add
mov
mov
test
je
movzbl
and
movzbl
add
push
mov
and
movzbl
add
push
movzbl
sub
push
movzbl
movzwl
or
push
call
cmpb
jge
mov
movzwl
or
push
mov
and
sub
push
mov
xor
mov
imul
push
mov
or
xor
push
call
mov
movzbl
add
add
mov
add
mov
movzwl
and
mov
imul
mov
movzwl
movzbl
or
push
movzbl
sub
add
push
call
mov
mov
test
je
movzbl
xor
movzwl
and
push
mov
and
mov
imul
push
call
movzbl
movzbl
add
sub
mov
sub
mov
mov
mov
jmp
mov
and
mov
movzwl
mov
pop
pop
pop
mov
pop
ret
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
push
mov
sub
push
push
push
mov
movzbl
mov
movzbl
mov
add
push
mov
add
push
call
movzbl
mov
test
je
mov
and
push
call
mov
shr
movzbl
mov
test
jne
push
push
push
call
movzbl
mov
mov
mov
xor
movzbl
mov
or
mov
cmp
jge
mov
jmp
movzwl
sub
push
mov
movzwl
sub
push
call
mov
mov
test
je
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
and
mov
imul
mov
mov
or
add
push
mov
xor
add
push
call
mov
test
je
mov
sub
sub
push
mov
and
imul
push
mov
add
push
mov
or
and
push
call
mov
movzbl
mov
test
je
push
push
call
mov
sub
push
mov
add
push
call
movzbl
mov
test
je
mov
sub
sub
push
mov
or
mov
imul
push
mov
sub
push
push
call
mov
xor
movzbl
test
jne
call
mov
mov
sub
mov
mov
and
or
mov
cmp
jne
push
mov
add
push
call
mov
sub
sub
push
mov
and
sub
push
call
mov
test
je
mov
xor
or
push
push
call
mov
sub
mov
cmp
je
mov
xor
push
mov
or
xor
push
mov
sub
push
call
cmp
je
mov
jmp
cmpl
jne
push
call
movzbl
mov
shr
mov
mov
sub
sub
push
mov
and
sub
push
call
mov
mov
test
je
call
mov
sub
sub
movzbl
push
push
call
mov
mov
test
je
push
mov
or
push
call
movzwl
add
mov
mov
test
jne
mov
xor
xor
push
mov
or
xor
push
call
cmp
je
mov
mov
jmp
mov
imul
add
push
movzwl
xor
sub
push
call
mov
mov
test
je
mov
add
push
mov
sub
push
call
mov
imul
add
mov
mov
xor
mov
add
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
sub
movzwl
cmp
jle
mov
or
push
push
push
call
cmp
jle
mov
mov
jmp
mov
and
push
mov
add
add
push
call
movzwl
mov
test
je
mov
sub
push
push
mov
and
sub
push
mov
sub
push
call
mov
shl
mov
mov
shl
movzwl
mov
shr
mov
mov
movzwl
or
add
push
mov
add
sub
push
call
mov
mov
test
je
movzwl
sub
push
push
call
mov
sub
mov
mov
mov
cmpw
jne
mov
mov
jmp
mov
movzwl
and
push
movzwl
imul
sub
push
call
mov
test
je
mov
imul
push
mov
xor
movzwl
add
push
mov
xor
mov
add
push
push
call
mov
add
mov
push
mov
movzwl
add
sub
push
call
mov
test
je
call
movzwl
and
mov
cmpw
je
push
movzwl
push
mov
movzwl
sub
sub
push
call
cmp
jge
movzwl
mov
jmp
mov
movzwl
xor
add
push
movzwl
movzwl
add
add
push
call
mov
test
je
movzwl
xor
movzwl
add
push
push
push
call
mov
mov
add
movzwl
mov
test
jne
call
mov
mov
add
mov
mov
mov
movzwl
sub
mov
movzwl
add
add
push
mov
and
push
call
mov
mov
test
je
mov
sub
push
push
call
mov
shr
mov
cmpw
jne
movzwl
push
mov
xor
push
call
mov
add
sub
push
mov
movzwl
sub
sub
push
call
mov
test
je
mov
movzwl
add
sub
push
push
call
mov
cmp
jne
mov
movzwl
imul
movzwl
imul
push
movzwl
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
push
call
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
mov
push
call
pop
orl
orl
call
mov
mov
call
mov
mov
mov
mov
mov
call
cmp
jne
push
call
pop
call
push
push
call
mov
mov
lea
push
pushl
lea
push
lea
push
lea
push
call
push
push
call
add
mov
mov
mov
cmpb
jne
inc
mov
mov
cmp
je
cmp
jne
cmpb
jne
inc
mov
mov
cmp
je
cmp
jbe
mov
lea
push
call
testb
je
movzwl
jmp
cmpb
jbe
inc
mov
jmp
push
pop
push
push
push
push
call
push
call
mov
push
call
push
mov
sub
push
push
push
mov
movzbl
mov
and
mov
imul
movzwl
mov
test
je
mov
and
push
mov
and
push
mov
and
xor
push
mov
xor
push
call
mov
or
push
push
call
movzbl
mov
test
je
push
push
push
call
mov
add
movzwl
mov
shl
mov
mov
mov
cmpl
jle
mov
sub
push
push
call
push
mov
and
push
call
mov
mov
test
je
push
mov
or
imul
push
mov
imul
push
mov
and
push
call
mov
add
mov
cmp
jne
mov
mov
jmp
mov
xor
sub
push
mov
or
push
call
mov
mov
test
je
call
mov
movzwl
mov
and
movzwl
cmp
jle
pushl
push
call
mov
xor
mov
mov
shr
movzbl
cmpl
jge
mov
imul
push
mov
and
push
mov
xor
push
mov
and
push
call
mov
test
je
mov
jmp
mov
or
push
mov
and
push
call
mov
mov
test
je
mov
and
and
push
mov
xor
push
mov
xor
and
push
call
mov
test
jne
push
call
movzwl
mov
add
mov
cmpl
jle
mov
mov
jmp
mov
sub
movzbl
cmp
jge
mov
jmp
mov
xor
sub
push
mov
xor
sub
push
call
mov
mov
test
je
mov
imul
mov
add
push
mov
xor
sub
push
mov
imul
push
mov
sub
sub
push
call
mov
mov
mov
test
je
push
mov
imul
mov
sub
push
call
mov
imul
mov
add
movzbl
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
movzbl
cmp
jge
mov
xor
and
push
mov
imul
add
push
call
mov
movzbl
mov
test
jne
push
push
call
movzbl
mov
or
sub
cmp
jle
mov
jmp
mov
shr
mov
cmp
jne
mov
xor
mov
imul
push
call
push
push
call
movzbl
mov
test
je
mov
or
sub
push
mov
imul
add
push
call
mov
imul
mov
cmp
jne
call
mov
test
jne
push
push
push
push
call
mov
mov
or
sub
movzbl
push
mov
add
add
push
call
mov
mov
test
je
push
push
push
call
mov
movzbl
or
and
mov
mov
imul
mov
sub
mov
mov
or
add
push
mov
imul
add
push
call
movzbl
mov
test
je
push
mov
or
sub
push
mov
or
and
push
call
movzbl
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shl
mov
cmp
jge
push
call
cmp
je
push
push
mov
or
sub
push
call
mov
imul
sub
push
mov
and
push
call
mov
test
je
push
mov
and
sub
push
call
mov
shr
mov
mov
movzbl
add
add
push
mov
movzbl
xor
add
push
call
mov
test
je
mov
and
mov
add
push
mov
sub
sub
push
movzbl
imul
push
movzbl
and
mov
sub
push
call
mov
and
add
mov
xor
mov
mov
add
mov
cmpb
jge
movzbl
push
mov
add
push
mov
xor
movzbl
or
push
mov
or
mov
add
push
call
mov
movzbl
and
sub
mov
mov
mov
mov
add
mov
push
mov
imul
add
push
call
mov
mov
test
je
mov
and
push
mov
xor
and
push
mov
or
movzbl
add
push
push
call
movzbl
and
sub
mov
xor
mov
mov
mov
cmp
je
movzwl
add
sub
push
mov
movzwl
xor
push
mov
and
push
call
cmp
jle
mov
jmp
mov
movzwl
add
sub
mov
mov
mov
movzbl
mov
movzbl
sub
add
cmp
je
movw
movzwl
or
mov
movzbl
mov
movzwl
mov
movzbl
movzwl
add
push
mov
movzbl
imul
push
call
mov
mov
test
je
call
movzbl
or
mov
cmpw
jle
mov
mov
jmp
movzwl
add
push
push
call
mov
mov
test
je
movzwl
push
movzwl
push
call
movzwl
movzbl
or
sub
mov
mov
movzbl
movzwl
or
sub
xor
mov
movzwl
mov
xor
div
mov
cmpw
jle
movzbl
jmp
mov
mov
mov
movzbl
xor
mov
imul
mov
mov
movzbl
or
push
movzwl
movzwl
add
push
call
mov
mov
test
je
movzwl
add
add
push
movzwl
or
push
movzwl
push
movzwl
movzwl
or
push
call
mov
mov
xor
mov
movzwl
imul
movzwl
add
mov
cmpw
jne
movzbl
add
push
movzwl
and
push
call
mov
mov
mov
movzwl
mov
mov
test
je
call
cmpw
jge
mov
add
push
movzwl
imul
movzwl
sub
push
call
movzbl
and
push
movzwl
movzwl
or
push
call
mov
mov
test
je
call
movzwl
xor
add
mov
add
mov
movzwl
imul
movzbl
sub
mov
movzwl
movzwl
or
add
mov
sub
mov
mov
shr
mov
cmpw
jge
movzwl
push
movzwl
movzwl
add
push
call
mov
test
je
call
movzwl
movzwl
add
push
movzwl
movzwl
imul
push
call
mov
mov
test
je
movzwl
or
push
movzwl
movzwl
and
sub
push
call
jmp
movzwl
imul
imul
mov
cmpb
jge
push
mov
and
and
push
mov
and
movzbl
and
push
call
cmpw
jne
movzbl
mov
jmp
push
mov
movzbl
xor
add
push
call
mov
mov
test
je
movzwl
sub
push
pushl
mov
add
push
call
mov
movzwl
xor
add
mov
xor
mov
movzbl
add
mov
test
jne
movzwl
mov
jmp
mov
or
push
mov
add
add
push
call
mov
mov
test
je
pushl
call
mov
mov
mov
movzbl
xor
mov
call
mov
cmpw
jge
call
push
movzbl
and
push
call
mov
mov
test
je
mov
and
movzbl
and
push
push
call
movzbl
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shl
movzbl
mov
add
movzbl
cmp
jle
call
mov
add
add
push
mov
xor
sub
push
call
movzbl
mov
test
je
mov
xor
mov
add
push
call
mov
or
xor
movzbl
mov
sub
add
push
mov
imul
push
call
movzbl
mov
test
je
push
mov
xor
mov
add
push
mov
imul
push
push
call
mov
movzbl
cmp
jge
mov
mov
jmp
mov
sub
sub
push
mov
add
push
call
movzbl
mov
test
je
mov
and
push
push
call
mov
add
movzbl
cmp
jle
push
push
push
mov
add
sub
push
call
mov
sub
add
push
mov
and
push
call
movzbl
mov
test
je
call
mov
mov
xor
div
movzbl
mov
movzbl
cmp
jle
mov
and
mov
imul
push
push
push
call
mov
xor
movzbl
cmp
jne
mov
xor
push
call
mov
and
push
mov
sub
push
call
movzbl
mov
test
je
mov
imul
mov
sub
push
push
push
call
mov
test
jne
push
push
call
movzbl
mov
mov
xor
div
movzbl
mov
and
push
mov
xor
add
push
call
movzbl
mov
test
je
push
call
mov
add
movzbl
cmp
jne
call
mov
imul
push
mov
and
push
call
movzbl
mov
test
je
mov
imul
push
push
call
mov
xor
mov
sub
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
movzwl
mov
movzbl
mov
or
imul
movzwl
cmp
jge
mov
jmp
push
mov
and
sub
push
call
movzwl
mov
test
je
call
mov
test
jne
push
push
push
push
call
movzbl
mov
shr
movzbl
mov
xor
push
mov
imul
push
call
movzwl
mov
test
je
push
push
call
mov
and
mov
sub
mov
mov
and
push
mov
and
push
call
movzbl
mov
test
je
mov
or
mov
add
push
call
mov
or
add
movzbl
mov
or
sub
push
push
call
movzwl
mov
test
je
mov
or
imul
push
call
mov
xor
divl
movzbl
cmpl
jne
push
pushl
push
pushl
call
movzbl
mov
movzbl
cmp
jne
mov
or
push
push
push
push
call
cmp
jle
mov
mov
jmp
mov
shl
mov
mov
add
add
push
movzwl
add
push
call
movzbl
mov
test
je
push
call
mov
add
movzwl
cmpw
jne
pushl
mov
and
push
call
mov
sub
sub
push
mov
movzwl
imul
push
call
movzwl
mov
test
je
push
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
movzwl
mov
xor
mov
imul
movzwl
push
mov
add
push
call
movzwl
mov
test
je
mov
and
sub
push
push
mov
add
push
push
call
mov
movzwl
mov
add
push
mov
xor
push
call
movzwl
mov
test
je
mov
and
push
mov
imul
mov
sub
push
mov
and
push
call
mov
or
movzwl
cmp
jle
mov
mov
jmp
mov
imul
push
mov
xor
push
call
movzwl
mov
test
je
call
mov
xor
sub
mov
xor
mov
mov
movzwl
mov
test
je
mov
imul
add
push
call
mov
sub
push
push
call
movzwl
mov
test
je
mov
or
and
push
mov
and
mov
sub
push
mov
or
push
call
mov
sub
add
mov
xor
mov
mov
mov
cmp
jne
mov
sub
push
call
mov
mov
mov
mov
mov
mov
movzbl
or
push
mov
movzbl
add
push
call
movzwl
mov
test
je
mov
xor
push
push
movzbl
or
movzbl
sub
push
call
movl
mov
or
mov
mov
movzwl
add
cmp
je
movw
movzwl
or
mov
mov
or
movzwl
imul
mov
movzwl
sub
add
mov
push
mov
movzwl
sub
add
push
call
mov
mov
test
je
movzwl
add
push
pushl
movzwl
push
call
mov
shl
mov
cmpl
jge
mov
or
movzwl
sub
push
call
movzwl
movzwl
and
add
movzbl
mov
mov
movzwl
xor
sub
mov
movzbl
sub
sub
mov
add
mov
movzwl
shr
mov
mov
test
je
mov
jmp
movzbl
movzwl
add
add
add
mov
movzbl
and
mov
movzwl
or
add
push
mov
movzwl
add
sub
push
call
mov
mov
test
je
call
mov
movzwl
xor
add
mov
sub
mov
mov
xor
or
mov
cmpl
jne
movzwl
push
call
cmpw
jge
pushl
movzwl
movzbl
add
push
call
jmp
mov
imul
movzwl
push
movzbl
movzwl
sub
push
call
mov
mov
test
je
movzbl
and
push
push
movzbl
and
movzbl
imul
push
movzbl
or
mov
sub
push
call
movzbl
movzwl
xor
add
mov
xor
mov
movzbl
add
add
movzwl
mov
mov
mov
movzwl
xor
mov
sub
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
sub
movzwl
cmp
je
call
mov
sub
push
push
call
movzwl
mov
test
je
mov
and
mov
add
push
mov
or
push
push
call
mov
xor
sub
movzwl
mov
add
push
mov
sub
push
call
movzwl
mov
test
je
push
mov
imul
push
call
mov
shl
movzbl
mov
movzwl
mov
sub
push
mov
imul
push
call
movzwl
mov
test
je
push
call
mov
shl
movzwl
cmp
jle
push
push
mov
and
imul
push
push
call
mov
or
push
mov
xor
push
call
movzwl
mov
test
je
push
call
mov
test
jne
push
push
call
movzwl
mov
sub
movzwl
mov
or
mov
cmpl
jle
mov
mov
jmp
mov
and
mov
cmp
jle
mov
xor
mov
sub
push
mov
sub
add
push
mov
imul
push
mov
and
push
call
cmpl
jge
mov
mov
jmp
mov
sub
sub
push
mov
xor
sub
push
call
mov
mov
test
je
pushl
call
mov
or
xor
movzwl
mov
test
je
mov
mov
jmp
mov
mov
pop
pop
pop
mov
pop
ret
push
push
push
mov
mov
movzbl
mov
and
imul
movzbl
mov
or
movzwl
mov
test
jne
push
push
push
push
call
movzwl
mov
imul
add
movzbl
mov
imul
push
mov
or
sub
push
call
movzwl
mov
test
je
call
mov
shl
movzwl
cmp
je
mov
xor
sub
push
mov
xor
mov
imul
push
call
cmp
jge
mov
mov
jmp
mov
or
add
push
mov
or
sub
push
call
movzbl
mov
test
je
mov
add
sub
push
push
call
mov
add
movzbl
mov
or
add
push
mov
or
add
push
call
movzwl
mov
test
je
mov
xor
push
mov
and
and
push
call
mov
or
movzwl
cmp
je
mov
and
push
mov
and
and
push
call
push
mov
sub
add
push
call
movzwl
mov
test
je
call
mov
mov
pop
pop
pop
ret
push
mov
sub
push
push
push
mov
mov
and
movzwl
cmp
jge
mov
mov
jmp
mov
sub
movzwl
cmp
jge
push
mov
or
mov
sub
push
mov
add
sub
push
call
cmp
jge
mov
mov
jmp
mov
mov
cmpw
jne
mov
mov
jmp
mov
add
sub
movzwl
cmp
jne
mov
mov
jmp
mov
xor
movzwl
cmp
jge
push
movzwl
xor
push
movzwl
or
push
call
cmpw
jge
push
mov
imul
push
mov
add
push
push
call
movzwl
and
mov
imul
movzwl
movzwl
shr
mov
mov
add
sub
movzwl
cmp
jge
push
call
mov
test
je
mov
jmp
mov
or
movzwl
cmpb
jge
movzbl
jmp
mov
test
jne
push
push
movzbl
push
push
call
mov
mov
xor
mov
sub
mov
movzwl
and
sub
push
movzwl
movzbl
add
add
push
call
movzwl
mov
test
je
call
mov
movzwl
and
movzwl
mov
imul
push
mov
sub
push
call
mov
mov
test
je
mov
or
mov
imul
push
push
call
mov
mov
xor
div
movzwl
mov
shl
mov
movzbl
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
movzwl
mov
or
add
mov
cmp
je
mov
xor
xor
push
mov
or
sub
push
call
push
mov
xor
sub
push
call
movzwl
mov
test
je
mov
and
mov
imul
push
mov
xor
mov
sub
push
push
mov
and
push
call
mov
shl
mov
mov
imul
add
mov
xor
mov
mov
add
movzwl
mov
test
jne
mov
jmp
mov
and
push
mov
add
add
push
call
mov
test
je
push
call
mov
and
add
mov
xor
mov
mov
mov
test
je
mov
jmp
mov
sub
add
mov
mov
mov
mov
or
mov
mov
movzbl
xor
mov
mov
shl
mov
mov
or
sub
push
mov
movzbl
imul
push
call
mov
test
je
movzbl
push
call
mov
movzbl
sub
cmp
je
movl
mov
and
mov
cmpl
jle
call
mov
imul
imul
mov
cmpl
jne
call
movzwl
shl
mov
movzbl
movzwl
imul
push
push
call
mov
mov
test
je
call
movzbl
or
mov
movzbl
mov
mov
movzwl
mov
mov
test
je
mov
movzbl
or
push
call
movzwl
and
push
movzbl
xor
push
call
mov
mov
test
je
movzbl
sub
movzwl
add
push
call
movzbl
xor
add
mov
add
mov
mov
movzwl
sub
mov
cmpl
jge
call
movzwl
movzbl
sub
add
mov
add
mov
mov
and
movzbl
sub
mov
mov
test
je
movzbl
mov
jmp
mov
movzbl
and
push
mov
movzbl
add
push
call
mov
mov
test
je
movzbl
push
movzbl
push
movzbl
xor
movzbl
xor
push
movzwl
movzbl
xor
add
push
call
movzbl
movzwl
imul
add
mov
sub
mov
movzbl
mov
cmpb
jne
movzwl
xor
mov
sub
push
movzwl
movzbl
add
sub
push
movzbl
add
push
movzbl
push
call
jmp
movzbl
mov
cmpb
jge
call
mov
imul
add
mov
xor
mov
movzbl
mov
xor
div
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shl
movzbl
mov
xor
sub
push
mov
sub
sub
push
call
movzbl
mov
test
je
mov
xor
mov
imul
push
call
mov
imul
imul
movzbl
mov
and
push
push
call
movzbl
mov
test
je
mov
and
push
call
mov
or
mov
sub
mov
mov
shr
mov
mov
or
mov
mov
or
sub
push
mov
movzbl
sub
sub
push
call
movzbl
mov
test
je
push
mov
imul
push
mov
imul
push
call
mov
movzbl
sub
mov
cmp
jne
mov
and
push
mov
or
push
call
cmp
jle
movzwl
push
mov
movzbl
xor
push
mov
add
push
push
call
mov
movzwl
or
sub
push
mov
sub
add
push
call
mov
mov
test
je
push
mov
movzbl
or
mov
add
push
mov
movzbl
or
push
call
mov
shr
movzbl
mov
sub
mov
cmp
jle
movzbl
xor
xor
push
call
movzwl
mov
cmpw
jne
movzbl
and
push
call
movzwl
movzbl
add
add
push
mov
sub
sub
push
call
mov
test
je
push
movzwl
push
movzwl
push
mov
xor
push
call
mov
xor
movzbl
cmp
jle
call
mov
movzbl
sub
add
push
mov
movzwl
xor
push
call
mov
mov
test
je
push
movzwl
push
push
call
movzwl
mov
xor
div
movzbl
mov
test
jne
pushl
movzwl
push
movzbl
push
call
mov
movzwl
and
xor
mov
mov
movzwl
add
push
movzwl
add
push
call
movzbl
mov
test
je
pushl
call
mov
xor
mov
movzwl
add
push
mov
movzwl
and
push
call
mov
mov
test
je
mov
and
sub
push
movzbl
xor
push
movzbl
push
call
mov
shr
mov
movzwl
xor
movzbl
mov
test
jne
movzwl
push
push
pushl
call
mov
mov
movzbl
mov
test
je
mov
movzbl
sub
push
call
cmpb
jne
mov
jmp
movzbl
xor
add
push
mov
movzwl
imul
push
call
movzbl
mov
test
je
call
movzwl
shl
mov
mov
mov
mov
or
sub
push
mov
movzbl
imul
add
push
call
mov
test
je
pushl
mov
xor
xor
push
movzwl
sub
push
call
mov
xor
sub
mov
movzbl
xor
movzbl
sub
mov
cmp
jne
mov
mov
jmp
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
xor
mov
mov
sub
add
push
mov
and
push
call
mov
test
je
push
mov
imul
push
mov
and
and
push
mov
or
push
call
mov
sub
movzwl
cmp
jge
push
mov
imul
push
push
mov
xor
sub
push
call
cmp
jne
mov
mov
jmp
mov
add
mov
cmp
jne
mov
jmp
mov
shr
mov
movzbl
add
sub
push
movzbl
imul
push
call
mov
test
je
mov
movzbl
and
imul
push
call
mov
xor
movzbl
or
mov
cmp
jne
movzbl
push
push
movzbl
push
movzbl
push
call
mov
mov
imul
movzbl
sub
mov
cmp
je
push
mov
sub
sub
push
call
movzbl
and
push
mov
add
sub
push
call
mov
mov
test
je
mov
sub
push
push
mov
or
movzbl
imul
push
call
movzbl
add
mov
cmpb
jge
movzbl
push
mov
imul
movzbl
add
push
movzbl
add
push
call
mov
movzwl
cmpb
jge
push
movzbl
or
push
movzbl
push
call
movzbl
shr
mov
mov
sub
add
push
movzbl
and
push
call
mov
test
je
mov
movzbl
imul
movzbl
sub
push
movzwl
or
push
push
movzbl
push
call
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
movzbl
mov
xor
sub
movzbl
push
mov
add
push
call
movzbl
mov
test
je
mov
or
push
mov
and
imul
push
mov
xor
push
mov
and
push
call
mov
shl
movzwl
cmp
jge
push
push
mov
imul
add
push
mov
and
imul
push
call
mov
or
push
mov
and
push
call
movzwl
mov
test
je
call
mov
sub
sub
movzwl
cmp
jge
push
mov
xor
push
mov
or
push
call
mov
or
add
push
mov
sub
sub
push
call
movzbl
mov
test
je
mov
or
add
push
call
mov
add
movzbl
cmp
jne
mov
mov
jmp
push
mov
or
sub
push
call
movzwl
mov
test
je
call
cmp
jne
push
push
call
movzbl
mov
shr
movzbl
mov
shr
mov
cmpb
jle
mov
imul
push
mov
xor
movzbl
and
push
push
mov
xor
push
call
cmpb
jne
movzbl
push
mov
xor
movzbl
imul
push
movzbl
and
movzbl
imul
push
push
call
mov
and
push
push
call
mov
mov
test
je
mov
and
push
call
mov
shr
mov
cmp
jne
push
push
movzbl
and
imul
push
call
mov
xor
add
mov
mov
imul
push
mov
movzbl
or
push
call
movzwl
mov
test
je
movzbl
imul
imul
push
push
movzbl
push
call
movzbl
mov
movzbl
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
movzwl
mov
shl
movzwl
mov
and
add
push
mov
or
add
push
call
movzwl
mov
test
je
push
push
call
mov
mov
cmp
jle
mov
jmp
mov
test
jne
call
movzwl
mov
sub
mov
cmp
je
call
mov
mov
mov
and
add
push
movzbl
and
add
push
call
movzwl
mov
test
je
mov
and
movzbl
xor
push
call
mov
imul
mov
cmpl
jge
mov
and
xor
push
call
mov
or
mov
movzbl
imul
add
push
movzbl
sub
sub
push
call
mov
test
je
call
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
xor
and
movzwl
mov
shl
mov
mov
imul
movzwl
cmp
je
mov
sub
push
mov
xor
xor
push
push
mov
or
or
push
call
cmp
jle
mov
xor
push
mov
xor
and
push
call
mov
xor
mov
sub
mov
cmp
jge
call
mov
imul
sub
push
push
call
mov
test
je
mov
imul
imul
push
push
call
mov
mov
or
xor
mov
mov
shr
mov
mov
and
push
mov
sub
add
push
call
mov
test
je
mov
or
movzbl
add
push
mov
add
add
push
mov
add
push
call
movzbl
and
mov
mov
shr
movzwl
cmp
jge
movzbl
push
call
movzbl
imul
push
push
call
movzwl
mov
test
je
mov
or
movzbl
add
push
call
mov
movzwl
cmp
jle
mov
movzbl
and
sub
push
call
movzbl
mov
cmpb
jne
mov
imul
mov
add
push
call
mov
test
jne
push
push
push
push
call
movzwl
mov
add
mov
movzbl
sub
push
mov
add
add
push
call
mov
mov
test
je
mov
xor
movzwl
or
push
call
movzbl
imul
movzbl
imul
mov
cmpl
jle
mov
add
sub
push
call
mov
imul
push
movzbl
or
push
call
movzwl
mov
test
je
movzbl
sub
push
mov
xor
add
push
mov
add
push
mov
and
push
call
mov
add
movzwl
push
mov
and
push
call
mov
test
je
mov
movzbl
or
add
push
mov
or
add
push
call
mov
test
jne
movzbl
push
call
movzwl
movzbl
movzwl
mov
sub
push
mov
movzwl
xor
push
call
movzwl
mov
test
je
movzbl
push
call
mov
add
mov
movzbl
xor
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
and
mov
mov
and
sub
push
mov
sub
sub
push
call
movzwl
mov
test
je
mov
and
and
push
mov
or
xor
push
call
mov
shr
mov
mov
sub
mov
mov
add
push
mov
imul
push
call
movzwl
mov
test
je
push
push
push
call
mov
and
mov
movzbl
xor
push
movzbl
xor
push
call
mov
test
je
push
mov
and
movzbl
sub
push
mov
xor
push
call
mov
shl
mov
cmp
jge
push
movzbl
or
push
mov
imul
push
push
call
mov
shl
mov
cmpw
jge
mov
imul
push
push
call
movzwl
and
push
mov
add
push
call
movzwl
mov
test
je
mov
movzbl
xor
or
push
call
mov
mov
xor
div
mov
mov
test
je
push
mov
xor
movzwl
and
push
mov
or
sub
push
movzbl
push
call
cmp
jne
mov
jmp
movzwl
shl
mov
cmpl
jge
mov
xor
push
mov
and
push
movzbl
push
movzbl
sub
movzbl
add
push
call
mov
and
mov
cmp
jne
mov
sub
push
movzbl
or
mov
imul
push
call
mov
or
push
mov
or
push
call
mov
mov
test
je
push
movzwl
push
movzbl
xor
movzwl
sub
push
mov
movzbl
xor
movzbl
imul
push
call
movzbl
sub
mov
mov
add
push
mov
imul
push
call
mov
mov
test
je
mov
or
or
push
mov
and
push
mov
add
push
pushl
call
mov
test
jne
push
movzwl
push
movzwl
push
movzwl
push
call
mov
movzbl
sub
mov
movzwl
and
mov
sub
mov
movzwl
movzbl
and
push
mov
movzwl
xor
push
call
mov
test
je
mov
movzbl
or
push
mov
add
add
push
call
mov
movzwl
cmpw
jge
movzbl
push
movzbl
and
sub
push
call
movzbl
or
sub
push
mov
add
push
call
mov
mov
test
je
mov
or
xor
push
mov
movzbl
add
push
mov
imul
push
movzbl
push
call
movzbl
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shl
mov
mov
or
sub
push
mov
add
add
push
call
mov
test
je
mov
xor
or
push
call
mov
sub
sub
movzbl
cmp
jne
mov
mov
jmp
mov
xor
mov
mov
and
sub
mov
xor
mov
mov
add
mov
mov
and
sub
mov
mov
mov
mov
xor
add
movzbl
mov
or
sub
push
mov
add
add
push
call
mov
mov
test
je
push
push
push
mov
xor
mov
add
push
call
mov
add
add
mov
sub
mov
mov
imul
mov
mov
test
je
mov
mov
jmp
movl
movzwl
and
cmp
je
movl
mov
shr
mov
cmpw
jge
call
mov
movzwl
imul
push
movzwl
add
add
push
call
mov
mov
test
je
call
mov
sub
add
mov
mov
movzwl
imul
push
movzwl
imul
push
call
mov
mov
test
je
movzwl
push
mov
add
push
movzwl
add
push
mov
movzwl
or
imul
push
call
mov
sub
mov
cmpw
jle
movzwl
add
push
mov
or
push
call
cmpl
jge
mov
mov
movzbl
mov
cmpw
jge
movzbl
mov
jmp
mov
movzwl
or
movzbl
sub
mov
movzbl
movzwl
add
push
movzbl
movzwl
and
push
call
mov
mov
test
je
movzwl
movzwl
and
push
movzbl
push
call
mov
movzbl
mov
mov
movzwl
add
mov
cmpb
jle
call
movzwl
movzwl
add
push
movzwl
movzbl
xor
add
push
call
mov
mov
test
je
call
movzwl
movzbl
xor
add
mov
add
mov
mov
mov
movzwl
movzwl
sub
push
push
call
mov
mov
test
je
movzbl
push
call
movzwl
movzbl
imul
sub
mov
add
mov
movzwl
mov
cmpl
jle
movzbl
imul
mov
add
push
movzbl
push
pushl
movzbl
movzwl
xor
or
push
call
movzwl
movzwl
xor
push
movzwl
movzwl
add
push
call
mov
mov
test
je
movzwl
or
push
pushl
call
movzwl
movzwl
xor
add
mov
sub
mov
movzwl
mov
cmpb
jle
call
jmp
mov
mov
movzwl
and
movzwl
sub
mov
movzwl
shr
mov
movzwl
movzbl
imul
push
movzwl
movzbl
sub
push
call
mov
mov
test
je
movzbl
movzwl
add
push
call
mov
and
mov
movzwl
movzbl
xor
mov
movzbl
shl
mov
movzwl
and
movzbl
imul
mov
movzwl
movzbl
sub
mov
movzbl
shl
mov
movzwl
imul
mov
add
mov
mov
test
je
mov
movzwl
and
xor
push
call
mov
movzbl
imul
push
push
call
mov
mov
test
je
call
mov
add
mov
movzwl
xor
sub
mov
mov
shr
mov
movzbl
and
mov
movzbl
shl
mov
movzwl
or
mov
imul
mov
mov
add
mov
mov
shl
mov
push
mov
movzwl
and
push
call
mov
mov
test
je
call
mov
movzwl
or
mov
movzbl
mov
add
mov
mov
shl
mov
mov
test
je
movzbl
or
movzbl
or
push
movzwl
imul
push
call
movzwl
and
mov
add
mov
mov
mov
mov
test
je
movzwl
mov
jmp
movzwl
or
mov
movzwl
and
movzwl
imul
mov
mov
test
je
call
mov
movzbl
sub
mov
mov
cmp
jne
movb
movzbl
shl
mov
movzbl
and
mov
movzwl
movzbl
imul
sub
mov
mov
cmp
jne
mov
mov
movzwl
shl
mov
mov
movzwl
and
push
mov
movzwl
and
push
call
mov
mov
test
je
mov
or
push
movzwl
or
imul
push
mov
xor
push
call
mov
mov
cmpw
jle
mov
or
push
pushl
movzwl
add
add
push
mov
sub
push
call
mov
movzwl
imul
sub
mov
mov
mov
cmpl
jle
pushl
mov
add
push
mov
xor
push
call
cmpw
jle
mov
xor
movzwl
sub
push
pushl
mov
or
add
push
movzwl
and
movzwl
or
push
call
push
mov
imul
push
call
mov
mov
test
je
call
movzbl
mov
movzwl
imul
movzwl
imul
mov
mov
test
je
pushl
call
cmpb
jle
movzwl
push
movzwl
push
movzwl
movzbl
or
movzbl
or
push
call
movzbl
and
push
push
call
mov
mov
test
je
pushl
movzwl
add
push
pushl
mov
imul
movzwl
add
push
call
movzwl
xor
cmp
je
mov
mov
mov
movzbl
or
mov
cmpb
jne
movzbl
xor
movzbl
add
push
movzbl
push
movzbl
xor
push
movzbl
xor
movzbl
xor
push
call
cmpb
jge
movzbl
mov
jmp
movzbl
movzbl
imul
push
movzbl
movzbl
add
push
call
mov
mov
test
je
movzbl
and
push
call
movzbl
xor
mov
mov
movzbl
sub
sub
mov
cmpb
jne
movzbl
movzbl
or
push
movzbl
and
movzbl
imul
push
call
movzbl
movzbl
or
add
push
movzbl
movzbl
and
push
call
mov
mov
test
je
movzbl
movzbl
or
push
movzbl
movzbl
and
push
call
mov
sub
mov
movzbl
mov
movzbl
movzbl
sub
add
mov
add
mov
mov
xor
sub
mov
cmpb
jle
movzbl
sub
push
call
movzbl
movzbl
xor
push
movzbl
movzbl
imul
push
call
mov
mov
test
je
movzbl
push
call
jmp
movb
movzbl
shl
mov
cmpb
jle
movzbl
mov
jmp
movzbl
mov
xor
div
mov
cmpb
jle
movzbl
xor
movzbl
imul
push
call
cmpb
jne
movzbl
add
push
movzbl
imul
push
call
movzbl
xor
movzbl
add
mov
cmpb
jge
call
movzbl
movzbl
and
push
movzbl
movzbl
add
push
call
mov
mov
test
je
movzbl
push
movzbl
and
movzbl
xor
push
movzbl
movzbl
or
movzbl
imul
push
call
movzbl
or
mov
mov
test
je
movzbl
or
movzbl
sub
push
movzbl
sub
push
movzbl
push
movzbl
movzbl
or
movzbl
sub
push
call
push
movzbl
movzbl
sub
push
call
mov
mov
test
je
movzbl
push
movzbl
or
movzbl
imul
push
movzbl
xor
push
call
movzbl
movzbl
xor
mov
movzbl
mov
mov
movzbl
add
mov
cmpb
jne
movzbl
push
movzbl
push
movzbl
push
movzbl
push
call
movzbl
movzbl
or
add
mov
add
mov
movzbl
or
movzbl
xor
mov
cmpb
jge
mov
imul
movzbl
imul
push
movzbl
movzbl
xor
imul
push
call
movzbl
xor
add
mov
add
mov
mov
or
add
mov
cmpb
jne
call
mov
movzbl
sub
add
mov
sub
mov
mov
movzbl
or
mov
movzbl
movzbl
sub
push
movzbl
or
add
push
call
mov
mov
test
je
movzbl
movzbl
and
movzbl
imul
push
mov
movzbl
and
xor
push
movzbl
imul
movzbl
imul
push
movzbl
movzbl
imul
add
push
call
mov
movzwl
sub
mov
jmp
mov
xor
div
movzbl
cmp
jne
mov
xor
push
mov
add
push
mov
add
add
push
mov
or
mov
imul
push
call
cmp
je
mov
jmp
mov
imul
sub
push
mov
add
sub
push
call
mov
test
je
mov
and
xor
push
call
mov
or
add
mov
xor
mov
mov
movzbl
mov
imul
push
movzwl
and
push
call
mov
test
je
mov
xor
push
call
mov
mov
mov
mov
or
sub
movzbl
mov
movzwl
imul
push
mov
or
sub
push
call
movzbl
mov
test
je
mov
imul
push
mov
xor
movzwl
sub
push
movzwl
or
push
mov
and
push
call
mov
sub
shr
mov
mov
sub
sub
mov
xor
mov
mov
shl
mov
mov
mov
mov
mov
add
movzbl
movzwl
and
push
mov
add
add
push
call
mov
test
je
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shr
movzbl
mov
movzwl
cmp
jge
mov
and
push
call
mov
add
sub
push
mov
imul
add
push
call
movzwl
mov
test
je
mov
imul
push
push
call
mov
movzbl
mov
movzbl
mov
or
mov
mov
test
jne
movzbl
push
push
call
movzbl
movzbl
or
mov
mov
sub
sub
push
mov
add
sub
push
call
mov
mov
test
je
mov
imul
push
movzbl
sub
push
call
movzbl
xor
sub
movzbl
mov
mov
cmp
jne
mov
imul
movzbl
add
push
pushl
call
movzbl
pop
pop
pop
mov
pop
ret
jmp
jmp
ret
jmp
xor
ret
jmp
hlt
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
add
pop
xchg
add
add
addb
add
xchg
add
xchg
add
xchg
add
xchg
add
add
and
add
inc
mov
add
add
add
jp
add
mov
add
mov
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
dec
mov
add
add
je
add
test
add
stos
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
mov
add
add
mov
add
mov
add
mov
mov
add
mov
add
mov
add
mov
add
mov
add
add
inc
mov
add
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
sbb
add
add
dec
mov
add
add
jb
add
orb
mov
add
mov
add
mov
add
mov
add
add
add
lea
add
add
inc
lea
add
add
pusha
lea
add
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
mov
add
mov
add
add
inc
mov
add
add
push
add
jbe
add
orb
add
mov
add
mov
add
mov
add
mov
add
popl
add
add
and
add
cmp
add
dec
popl
add
add
add
jp
add
mov
add
mov
add
lret
add
popl
add
popl
add
popl
add
nop
add
adc
add
cs
add
cmp
add
pop
nop
add
fs
add
js
add
test
add
movsb
nop
add
mov
add
les
add
in
nop
add
add
add
sub
add
dec
xchg
add
pop
xchg
add
xchg
add
jbe
add
adcb
add
xchg
add
mov
xchg
add
ficoms
add
xchg
add
adc
add
cmp
add
pop
xchg
add
insb
xchg
add
js
add
mov
add
mov
add
mov
xchg
add
loop
add
hlt
xchg
add
add
add
push
xchg
add
xor
add
push
xchg
add
push
xchg
add
nop
xchg
add
cwtl
xchg
add
add
add
mov
add
les
add
fcoml
add
cld
xchg
add
or
add
add
cmp
add
inc
xchg
add
pop
xchg
add
push
xchg
add
add
add
jmp
add
inc
add
add
add
lea
add
addb
adc
add
add
add
xor
add
mov
add
add
add
add
addl
add
add
add
add
hlt
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
add
pop
xchg
add
add
addb
add
xchg
add
xchg
add
xchg
add
xchg
add
add
and
add
inc
mov
add
add
add
jp
add
mov
add
mov
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
dec
mov
add
add
je
add
test
add
stos
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
mov
add
add
mov
add
mov
add
mov
mov
add
mov
add
mov
add
mov
add
mov
add
add
inc
mov
add
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
sbb
add
add
dec
mov
add
add
jb
add
orb
mov
add
mov
add
mov
add
mov
add
add
add
lea
add
add
inc
lea
add
add
pusha
lea
add
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
mov
add
mov
add
add
inc
mov
add
add
push
add
jbe
add
orb
add
mov
add
mov
add
mov
add
mov
add
popl
add
add
and
add
cmp
add
dec
popl
add
add
add
jp
add
mov
add
mov
add
lret
add
popl
add
popl
add
popl
add
nop
add
adc
add
cs
add
cmp
add
pop
nop
add
fs
add
js
add
test
add
movsb
nop
add
mov
add
les
add
in
nop
add
add
add
sub
add
dec
xchg
add
pop
xchg
add
xchg
add
jbe
add
adcb
add
xchg
add
mov
xchg
add
ficoms
add
xchg
add
adc
add
cmp
add
pop
xchg
add
insb
xchg
add
js
add
mov
add
mov
add
mov
xchg
add
loop
add
hlt
xchg
add
add
add
push
xchg
add
xor
add
push
xchg
add
push
xchg
add
nop
xchg
add
cwtl
xchg
add
add
add
mov
add
les
add
fcoml
add
cld
xchg
add
or
add
add
cmp
add
inc
xchg
add
pop
xchg
add
push
xchg
add
add
add
adc
inc
gs
je
jb
jne
dec
outsb
outsw
inc
add
adc
gs
inc
jb
je
arpl
push
arpl
outsb
add
jb
jo
inc
add
repnz
imul
outsl
jne
arpl
add
fs
jb
arpl
jae
gs
outsl
jb
add
popa
jo
je
imul
pop
push
imul
jne
jb
inc
js
add
pop
push
jb
je
inc
outsl
outsb
jae
insb
gs
add
add
je
inc
push
add
push
or
jb
jne
insb
inc
jb
gs
or
je
outsl
arpl
gs
outsb
outsw
inc
add
xor
dec
jo
outsb
inc
jbe
outsb
je
add
jno
inc
outsl
jb
popa
je
gs
popa
addr16
add
xor
inc
gs
outsl
outsb
jae
insb
gs
jne
jo
je
push
add
xchg
or
je
jb
arpl
jae
data16
dec
popa
jae
add
scas
add
outsb
fs
imul
gs
add
filds
dec
jae
bound
addr16
jb
jae
outsb
je
icebp
rcpps
inc
imul
gs
add
or
je
outsl
insl
insl
popa
outsb
fs
imul
dec
outsb
je
jb
outsl
arpl
fs
outsb
arpl
insl
outsb
je
add
jo
jb
popa
je
add
lods
add
je
je
dec
popa
outsb
fs
add
fldl
inc
gs
imul
push
or
outsb
fs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
adc
je
outsl
fs
gs
popa
outsb
fs
gs
add
cmp
fs
imul
add
lret
add
jb
popa
je
add
arpl
inc
jb
popa
je
inc
imul
outsb
addr16
add
cmp
push
gs
imul
jb
popa
add
jb
insl
jo
inc
add
or
jp
outsl
push
gs
jne
arpl
add
add
je
popa
jae
inc
jb
outsl
jb
add
popa
insb
imul
addr16
or
outsb
insl
popa
jo
imul
insb
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
cmc
push
inc
gs
je
imul
inc
add
incb
gs
outsb
fs
inc
imul
insb
outsl
bound
dec
gs
outsl
jb
push
je
je
jae
add
add
je
je
dec
popa
outsb
fs
add
cmp
push
popa
imul
insb
gs
bound
arpl
add
je
inc
dec
inc
push
add
and
insb
jae
jb
insl
jo
add
xor
dec
jne
je
inc
jns
gs
outsl
push
imul
stos
adc
je
push
dec
outsb
outsw
add
inc
insb
outsl
jae
dec
popa
outsb
fs
add
inc
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
inc
gs
jne
jb
outsb
je
jb
arpl
jae
add
dec
outsb
imul
inc
jb
je
arpl
push
arpl
outsb
add
add
outsl
bound
inc
fs
je
insl
inc
add
adc
push
add
pop
add
je
jb
outsl
arpl
fs
arpl
insl
outsb
je
add
inc
gs
outsb
jbe
jb
outsb
insl
outsb
je
popa
jb
popa
bound
add
push
jne
jae
inc
jbe
outsb
je
add
add
popa
fs
imul
gs
jb
outsl
jb
je
inc
insb
popa
jae
add
dec
or
je
popa
jae
inc
jb
outsl
jb
add
gs
imul
arpl
inc
imul
insl
push
inc
jb
gs
imul
adc
dec
outsl
arpl
inc
jb
add
push
outsb
push
gs
js
gs
imul
gs
jp
dec
outsl
fs
xor
inc
imul
dec
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
mov
inc
jne
jb
outsb
je
imul
jns
add
xchg
push
push
gs
je
jbe
outsb
je
add
gs
imul
rcpps
jo
sub
inc
gs
outsl
insl
jo
je
jb
popa
insl
gs
add
add
je
push
inc
outsl
outsb
je
js
add
invd
inc
gs
imul
bound
gs
add
push
adc
je
jne
jb
outsb
je
push
dec
add
dec
cmovs
jo
jb
add
inc
push
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
add
gs
imul
dec
jne
inc
imul
outsl
popa
fs
gs
jne
arpl
add
inc
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
push
add
insb
gs
imul
jae
gs
push
imul
dec
gs
jo
insb
insb
outsl
arpl
lods
or
je
jb
jbe
push
jns
gs
add
add
je
jb
arpl
jae
outsl
jb
imul
imul
inc
outsb
je
jb
jb
je
arpl
push
arpl
outsb
add
add
push
gs
jb
outsl
jb
outsl
fs
add
push
jb
je
inc
outsl
outsb
jae
insb
gs
add
cmova
push
jns
je
insl
push
imul
insb
gs
imul
popa
imul
je
jo
gs
bound
arpl
add
push
dec
inc
dec
xor
cs
insb
add
adc
push
je
jb
push
popa
add
add
je
je
arpl
bound
arpl
orb
gs
imul
add
push
arpl
push
imul
inc
js
push
gs
dec
jne
inc
add
adc
gs
inc
inc
add
mov
popa
je
push
outsl
insb
imul
add
adc
je
insb
je
add
or
gs
gs
dec
bound
arpl
xor
dec
bound
arpl
add
push
popa
jbe
inc
inc
add
cmp
imul
adc
jae
outsl
jb
inc
inc
add
inc
gs
gs
inc
js
outsb
je
outsl
imul
popa
or
gs
imul
outsl
jb
add
arpl
push
arpl
aas
add
je
push
arpl
outsb
add
popa
je
inc
outsl
insl
jo
je
bound
imul
or
arpl
insb
add
inc
gs
gs
dec
gs
imul
inc
jb
popa
je
inc
dec
inc
push
arpl
outsb
add
mov
inc
gs
arpl
popa
jo
add
jb
inc
outsl
arpl
push
add
jbe
push
outsl
inc
js
add
or
outsb
fs
outsl
arpl
add
or
je
imul
outsl
jb
add
inc
jb
popa
je
push
outsb
add
add
insb
arpl
imul
adc
gs
je
push
arpl
outsb
dec
outsb
imul
pop
push
outsl
insb
jns
imul
inc
jb
popa
je
inc
outsl
outsb
je
outsb
imul
scas
or
je
gs
inc
insb
imul
inc
gs
imul
gs
or
jb
popa
je
inc
outsl
insl
jo
je
bound
inc
add
add
je
gs
inc
outsl
insb
outsl
jb
add
dec
xor
cs
insb
add
inc
gs
jo
popa
je
push
outsb
add
or
imul
outsl
ja
js
add
or
je
outsl
arpl
add
jle
inc
insb
imul
arpl
outsb
add
adc
push
imul
popa
jae
inc
js
add
pushf
or
je
imul
or
imul
ja
jb
insl
push
outsl
imul
push
gs
jae
jb
bound
arpl
arpl
imul
data16
popa
je
push
arpl
adc
ja
gs
inc
add
dec
outsb
jae
jb
dec
outsb
jne
add
outsb
inc
insb
imul
add
push
outsl
jae
dec
gs
popa
addr16
add
pop
or
je
imul
add
adc
imul
inc
add
adc
jo
imul
add
fs
je
push
imul
and
push
gs
popa
jo
jne
add
mov
inc
outsl
arpl
add
dec
or
fs
arpl
insb
gs
je
jb
inc
add
inc
gs
popa
jb
outsb
je
ljmp
outsb
jne
ud2
inc
jb
popa
je
dec
arpl
dec
outsb
imul
mov
inc
gs
popa
jo
jne
add
lock
inc
gs
imul
outsl
arpl
add
outsl
addr16
outsl
js
outsb
imul
jb
insl
inc
add
add
jne
push
imul
inc
or
outsb
fs
gs
popa
addr16
imul
add
add
imul
jb
popa
fs
jb
arpl
jae
add
mov
dec
outsl
popa
fs
arpl
inc
add
inc
popa
insb
insb
push
imul
outsl
arpl
cmova
inc
insb
popa
jae
dec
outsl
outsb
addr16
add
inc
imul
add
mov
push
gs
jne
jae
jb
xchg
or
fs
ja
imul
cwtl
or
jb
ja
fs
fstl
push
gs
jae
addr16
add
add
push
imul
arpl
or
fs
insl
popa
addr16
add
stos
adc
ja
outsb
jne
popa
jb
ljmp
jns
je
je
add
gs
imul
jae
add
arpl
outsb
jne
je
insl
add
inc
gs
arpl
insb
insb
dec
outsb
outsw
add
bound
outsb
jne
je
insl
add
loopne
inc
jb
popa
je
push
outsl
jo
jo
outsb
jne
fisttpl
dec
jae
insb
addr16
jne
je
outsb
inc
push
add
roll
jb
ja
arpl
inc
js
add
push
inc
gs
imul
popa
arpl
outsb
je
add
rcpps
push
imul
jae
add
push
popa
imul
inc
gs
jb
jns
imul
adc
je
gs
je
jo
imul
mov
inc
gs
jns
inc
outsl
insb
outsl
jb
jb
jae
add
add
fs
imul
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
pop
inc
gs
insb
addr16
jb
arpl
filds
popa
jae
inc
popa
jo
jne
add
ljmp
je
arpl
fs
jb
jo
add
xchg
jne
jae
jb
outsl
jae
add
insl
inc
push
imul
add
inc
jb
popa
je
push
imul
inc
add
push
imul
js
inc
add
orb
imul
popa
jae
inc
add
int
push
gs
insb
addr16
je
insl
push
gs
inc
add
arpl
outsb
jne
popa
imul
add
cmova
inc
inc
add
inc
insb
addr16
je
insl
push
gs
inc
add
inc
push
xor
cs
insb
add
sbb
pop
arpl
je
outsl
insb
data16
add
adc
addr16
popa
imul
in
pop
gs
je
rorl
pop
imul
insl
add
gs
jae
jb
popa
je
gs
add
or
pop
pop
insw
outsl
fs
rorb
jne
je
imul
or
jae
je
popa
jo
pop
je
jo
add
mov
pop
jo
pop
arpl
insl
outsl
fs
loop
pop
popa
arpl
insb
outsb
add
pop
gs
gs
pop
push
gs
add
adc
arpl
inc
imul
insl
gs
arpl
add
int
gs
je
add
push
inc
push
push
cs
insb
add
js
inc
gs
je
imul
push
add
add
add
mov
add
add
add
add
add
add
add
adcb
add
push
add
addb
add
mov
add
add
add
add
add
add
add
addb
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
addb
add
add
add
add
add
pop
jae
mov
cli
pushf
inc
clc
sbb
shll
fcompl
mov
setnp
add
xor
dec
dec
ds
ss
add
sbb
mov
xor
add
xor
push
sbb
leave
inc
and
ja
add
adc
ja
sub
fcompl
imul
dec
mov
xor
add
fdivs
pop
jae
pop
mov
aad
pop
jae
hlt
add
fcompl
xor
fwait
xchg
es
inc
add
lds
dec
addr16
ret
push
fistps
mov
xchg
adc
mov
jle
inc
cmp
and
adc
fildll
push
out
add
dec
insl
mov
mov
push
mov
add
shlb
popf
cwtl
mov
add
test
adc
cli
xchg
push
jo
daa
xchg
xlat
es
add
cli
fcom
jo
or
xor
sbbb
push
push
jae
addr16
in
mov
inc
addr16
dec
stos
addb
in
xor
sbb
push
lea
pop
es
out
rclb
addb
cmp
add
cmp
jae
shlb
out
loope
fninit
xchg
xor
fdivrl
mov
jmp
xchg
jecxz
fisttpl
scas
test
dec
and
push
add
xchg
ficoms
adc
xchg
inc
mov
loope
jno
mov
rclb
add
lret
xor
hlt
stc
andb
xor
iret
pop
sub
imul
into
xor
mov
adc
cmp
data16
jp
xor
mov
xchg
out
mov
addr16
mov
inc
xchg
jecxz
mov
mov
int3
sub
shl
bound
stc
mov
repnz
fstpt
fstl
sub
mov
or
pop
sub
pop
cli
xchg
xchg
mov
pop
clc
lods
lret
sarl
sbb
xchg
sbb
inc
data16
pop
addr16
out
fimull
xchg
and
inc
repnz
pop
pop
out
movsb
xor
push
stc
dec
aad
loopne
sub
sbb
out
jp
mov
jge
mov
int
inc
je
mov
cli
call
arpl
cld
pop
sarl
inc
lret
mov
out
je
hlt
or
mov
mov
mov
test
xchg
xor
mov
fwait
xor
iret
shlb
loop
loopne
xor
push
inc
in
stos
pop
cmp
jae
xchg
cwtl
mov
adcb
mov
subb
movsb
inc
std
clc
fcomip
addr16
and
fnstcw
loope
lret
outsb
cld
cmc
xor
daa
sub
mov
pop
aad
push
jmp
gs
nop
mov
addr16
stc
jo
fistps
andl
icebp
jae
adc
stc
lock
jg
cmpsb
pushf
pusha
dec
aas
icebp
jae
and
and
shlb
cmpsl
dec
repz
xchg
loopne
cmp
loope
jmp
cld
test
jecxz
xor
dec
stc
jo
jmp
lock
xlat
hlt
push
imul
test
cmpsl
cmp
cwtl
dec
mov
push
sub
mov
cmp
xchg
insl
dec
mov
fildl
sbb
ret
mov
xor
mov
xchg
jecxz
mov
xchg
jecxz
aaa
cmp
imul
and
jne
dec
aad
pop
rclb
cld
test
sub
mov
mov
pusha
fs
std
sbb
cmpsl
cmp
jp
xchg
popf
or
push
sbb
outsl
push
out
loopne
xor
sbb
xor
push
mov
cli
aas
cmp
adc
sbb
xchg
popf
pop
std
mov
gs
cmp
leave
mov
xchg
ljmp
push
in
adc
and
xchg
xor
hlt
fisubl
test
popf
lock
test
jecxz
cmp
or
pop
ret
clc
mov
data16
xor
loopne
xor
ret
sub
lods
bnd
mov
iret
xor
jae
push
mov
adc
xor
loope
xor
je
xchg
jecxz
pusha
hlt
ret
fs
jecxz
mov
xchg
outsb
adc
sbb
movsl
cmp
cli
adc
xor
jecxz
pusha
hlt
ret
fs
jecxz
mov
xchg
mov
pop
mov
jecxz
mov
aas
icebp
jae
mov
out
loope
xor
xor
adc
icebp
and
data16
xchg
mov
xchg
mov
iret
xor
iret
xor
popf
lock
xchg
xor
xor
pop
mov
hlt
jae
mov
movsl
sub
icebp
jae
and
jae
jmp
inc
pop
xlat
sub
rorb
jae
data16
cmpsl
cmp
sbb
test
iret
cmp
lods
adc
icebp
jae
jecxz
pusha
sub
les
push
icebp
adc
nop
xor
jo
xor
je
xor
leave
sbb
movsl
sub
pop
sahf
and
and
mov
push
or
adc
bnd
dec
popf
lock
enter
jg
dec
xor
jae
jbe
xor
mov
inc
cmp
xchg
adc
mov
outsl
cmpsl
and
or
jl,pn
outsl
iret
pop
scas
jl
push
jecxz
xor
ret
rorb
lock
mov
iret
pop
xchg
sbb
pop
push
cmc
sbb
push
jbe
jecxz
xor
sbb
cmpsb
cmpsl
cmp
cli
push
mov
fdivs
push
mov
jecxz
jo
push
fwait
stos
pop
imul
cmp
jae
mov
xchg
jecxz
fadds
push
mov
or
pop
ret
js
xchg
movsb
test
out
lock
mov
push
mov
xor
sub
inc
std
and
push
dec
pop
lds
out
jns
mov
mov
jbe
dec
adc
add
imul
hlt
sub
mov
inc
aas
xchg
adc
iret
cmp
test
sub
inc
jbe
lcall
test
jb
sub
mov
push
imul
mov
flds
push
jo
push
mov
or
fsubs
xchg
jecxz
xor
push
mov
sub
push
pop
mov
pop
inc
and
shlb
add
push
xor
into
push
dec
scas
mov
xchg
jecxz
xor
xchg
jg
cmpsl
cmp
jae
cmp
pop
lock
clc
xor
dec
cwtl
sub
mov
push
ret
push
popf
jae
nop
loopne
aad
xchg
pop
lock
clc
xor
push
subl
loopne
iret
adc
addr16
jno
sbb
mov
pop
xchg
xchg
push
iret
pop
popf
add
cmp
cmp
mov
jno
cmp
ds
mov
mov
int3
jecxz
jne
imul
inc
dec
cwtl
pop
lock
clc
xor
pop
xchg
in
cmpsl
add
mov
inc
hlt
dec
cmpl
jecxz
push
rorb
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jae
push
cli
test
dec
loop
mov
movb
or
cmp
ret
xor
sahf
add
test
dec
cmpsl
outsl
test
shlb
pop
out
clc
arpl
dec
roll
push
aad
cwtl
adc
nop
enter
lcall
outsl
sahf
adc
ret
sbb
xchg
sti
inc
enter
ret
mov
push
enter
xlat
xchg
out
ret
and
enter
xchg
mov
pop
ret
dec
xchg
pop
fldl
icebp
jae
jecxz
xor
jecxz
xor
jecxz
xor
jecxz
xor
jecxz
xor
jecxz
xor
jecxz
xor
jecxz
xor
jecxz
xor
jecxz
xor
jecxz
xor
jecxz
xor
jecxz
xor
jecxz
xor
jecxz
xor
jecxz
xor
jecxz
xor
jecxz
xor
jecxz
xor
jecxz
xor
jecxz
xor
jecxz
xor
jecxz
xor
jecxz
xor
jecxz
xor
jecxz
xor
jecxz
xor
jecxz
xor
jecxz
xor
jecxz
xor
jecxz
xor
jecxz
xor
jecxz
xor
jecxz
xor
jecxz
xor
jecxz
xor
jecxz
xor
jecxz
xor
jecxz
xor
jecxz
xor
jecxz
xor
jecxz
xor
jecxz
xor
jecxz
xor
jecxz
xor
jecxz
xor
jecxz
xor
jecxz
xor
jecxz
xor
jecxz
xor
jecxz
xor
jecxz
xor
jecxz
xor
jecxz
xor
jecxz
xor
jecxz
xor
jecxz
xor
jecxz
xor
jecxz
xor
jecxz
xor
jecxz
xor
jecxz
xor
jecxz
xor
jecxz
xor
jecxz
xor
jecxz
xor
jecxz
xor
jecxz
xor
jecxz
xor
jecxz
xor
jecxz
xor
jecxz
xor
jecxz
xor
jecxz
xor
jecxz
xor
jecxz
xor
jecxz
xor
jecxz
xor
jecxz
xor
jecxz
xor
jecxz
xor
jecxz
xor
jecxz
xor
jecxz
xor
jecxz
xor
jecxz
xor
jecxz
xor
jecxz
xor
jecxz
xor
jecxz
xor
jecxz
xor
jecxz
xor
jecxz
xor
jecxz
xor
jecxz
xor
jecxz
xor
jecxz
xor
jecxz
xor
jecxz
xor
jecxz
xor
jecxz
xor
and
mov
xor
push
imulb
fildll
sahf
rol
inc
adc
mov
lods
fsts
and
loop
mov
and
sbb
xchg
xor
icebp
xchg
add
arpl
push
dec
lret
stos
movsl
jbe
loop
xor
in
nop
push
lods
add
cmp
repz
jl
cmp
dec
mov
stc
pop
iret
xchg
das
jae
filds
icebp
fwait
in
push
cmp
loop
in
mov
cmpl
lea
mov
ss
call
repnz
out
clc
pop
les
jecxz
mov
and
mov
xlat
lret
push
hlt
scas
shl
jmp
mov
loop
shr
sub
and
push
clc
cmpsl
mov
jle,pn
sub
xchg
xor
dec
icebp
jle
mov
rcr
je
push
push
mov
xchg
out
cld
inc
mov
cmp
jb
and
rcll
movsb
cmp
or
or
dec
cmp
dec
adc
pop
sbb
xor
fmull
jge
scas
lahf
pop
ljmp
mov
shlb
mov
popa
adc
push
js
lods
inc
push
sub
loopne
cmc
loope
adc
je
loop
rol
lret
inc
js
test
xor
push
loopne
popf
sub
inc
test
divb
test
clc
inc
shlb
popa
push
or
sbb
insb
out
cli
push
jle
xchg
jp
stos
mov
adc
pushf
mov
ret
lcall
jmp
sahf
clc
outsb
insl
ds
clc
mov
outsl
xor
je
es
xchg
cmpsb
push
dec
xor
sub
repnz
test
stos
sbb
sbb
mov
inc
js
mov
andl
mov
sub
test
mov
xchg
shrb
push
clc
mov
pop
jnp,pn
push
stos
out
rcrl
aaa
test
sbb
scas
sbb
xchg
scas
call
scas
mov
xor
cmpb
push
pop
xchg
popf
test
xor
scas
lea
test
sbb
jp
repnz
pop
movsb
xchg
ret
bound
ljmp
mov
je
push
js
xchg
adc
movsl
xchg
jnp
sbb
xor
je
loop
shll
add
fwait
mov
out
push
cmp
rclb
hlt
pop
mov
popa
adc
clc
js
lods
mov
adc
je
sti
pusha
xchg
xor
push
sbb
clc
stos
cli
fdivp
stos
adc
je
loop
repz
test
mov
inc
push
and
sbb
adc
adc
js
xor
xor
fisubrs
hlt
mov
lcall
and
mov
lods
push
and
les
out
fildll
jmp
sbb
stos
sub
ljmp
inc
cmp
outsb
shlb
add
shl
mul
dec
adc
js
adc
inc
mov
jp
inc
xchg
insl
inc
mov
out
sbbl
aaa
xor
pushf
mov
push
shll
rcr
mov
mov
or
add
mov
dec
ret
hlt
pusha
aas
fsubrs
nop
outsl
xor
cld
jbe
fstl
push
fistpl
add
mov
jb
in
outsb
xchg
jp
cli
lock
aaa
mov
fidivs
ljmp
xchg
sbb
add
hlt
lods
cmp
and
cli
repnz
inc
movsb
sub
jp
cmpsl
aam
notb
rcll
out
xor
mov
jnp
push
xchg
mov
je
mov
jecxz
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
mov
mov
sbb
dec
rorl
in
jnp
jae
pop
cwtl
adc
mov
scas
out
xchg
inc
sbb
xor
adc
adc
mov
into
xchg
mov
inc
mov
loope
xor
std
jbe
xor
stos
imul
mov
xchg
test
adc
add
cmp
add
lds
adc
cmp
push
and
mov
lock
callw
adc
lcall
ret
sub
xor
lcall
mov
lea
rcll
dec
mov
inc
xor
nop
movsl
xor
or
xchg
cmpsl
jbe
push
pop
jne
dec
sub
inc
inc
rcrb
aas
outsl
mov
pop
xchg
and
icebp
ror
cld
pop
xor
cmp
sub
lock
out
mov
pop
cs
mov
dec
push
repnz
push
js
mov
pop
enter
dec
mov
mov
repnz
repz
in
adc
sub
adc
ret
fs
and
cmpsl
ja
dec
imul
dec
pop
cli
jle
test
rclb
and
gs
push
fists
into
in
setbe
jbe
subl
jbe
mov
pop
ret
jmp
xchg
pop
adc
or
je
pop
xor
clc
sbb
ljmp
stos
in
cmp
pop
cmp
cmp
mov
in
shl
xlat
pop
mov
pop
rorb
xchg
xchg
mov
and
xlat
cmpsl
dec
sahf
jo
and
ret
movsb
xchg
clc
lahf
or
xlat
xlat
shr
sub
lret
movsb
dec
repnz
push
dec
icebp
rcll
cmp
sbb
insl
add
cmpsb
je
nop
aad
jecxz
fcoms
or
pop
data16
cmp
je
inc
dec
jp
push
ret
adc
adc
out
jge
sbb
ret
sti
xchg
mov
and
mov
inc
scas
add
pusha
in
push
je
push
pushf
mov
data16
jl
sub
repz
cmpl
jo
jo
fsubs
sub
or
fildll
cmpl
loopne
bound
sbb
movl
xor
gs
jb
add
xchg
or
popf
shlb
fs
orl
cli
inc
or
push
out
xor
rorl
shl
push
mov
rcrb
pop
ds
stc
rcrb
pop
cmp
faddp
pop
int3
fadd
inc
xchg
pop
es
jl
repz
into
lds
sti
repz
pop
mov
ds
mov
inc
ds
push
ds
mov
int3
addr16
addr16
push
pop
cmc
push
in
clc
push
sti
pop
cld
push
in
pop
loopne
sub
mov
push
mov
sets
mov
fldt
xchg
testb
das
repnz
jno
popf
mov
jl
stos
mov
js
mov
jl
scas
mov
add
sarb
out
mov
insb
scas
mov
outsl
scas
mov
imul
es
jbe
cmpsl
stos
ret
mov
xchg
lahf
cmp
mov
movsl
pop
stos
adc
add
dec
mov
insb
sub
cli
popf
xor
and
jb
popf
lahf
push
jno
int
subb
mov
sbb
add
cmpsl
dec
mov
insb
or
or
popa
pop
add
rcrb
iret
push
test
stos
adc
fwait
mov
in
popf
pushf
sbb
ja
cmpsb
fwait
mov
mov
les
and
mov
rclb
mov
cld
js
loope
lea
call
int
xor
daa
std
das
mov
lock
jne
adc
adc
rcll
adc
xchg
pusha
ss
adc
pusha
popf
fistl
push
cltd
pusha
cltd
fstps
mov
call
lahf
ret
call
sahf
shr
call
call
xchg
call
lret
call
lea
mov
mov
fildl
sub
jo
xor
fildl
lahf
push
dec
popa
roll
mov
push
jmp
mov
push
sub
mov
mov
cs
mov
sub
out
mov
xor
xchg
mov
mov
mov
ss
mov
xor
fnstcw
cmp
lahf
mov
mov
mov
ds
mov
cmp
lods
ja
hlt
jg
pop
shrl
loopne
jbe
adc
push
adc
ss
push
and
pusha
clc
ss
push
es
adc
push
and
pop
pusha
hlt
ss
push
sub
pusha
divb
pop
push
sub
pusha
lock
push
cs
sbb
push
sub
pop
pusha
in
ss
push
xor
pusha
out
ss
push
xor
pusha
call
push
add
push
xor
pop
pusha
in
dec
push
cmp
pusha
out
dec
push
add
pusha
fnsave
xor
push
jb
fbstp
xor
push
je
fnstenv
ss
add
ss
or
pusha
aad
cmp
push
jp
xlat
cmp
push
jl
shll
ds
or
ss
adc
pusha
int
and
push
bound
pop
loope
popf
push
arpl
popa
push
fs
xchg
xchg
jecxz
mov
push
mov
push
inc
stos
enter
pusha
lret
inc
scas
mov
adcb
and
insb
es
xchg
and
and
xchg
fildl
mov
xchg
sbb
xor
fwait
sahf
sub
jle
sbb
lods
jle
sbb
xor
sbb
or
mov
rcrb
cmp
jp
mov
xlat
sbb
cs
mov
cmpsl
sbb
paddd
cs
mov
popf
lret
fistps
dec
stos
xor
cmp
xor
add
xor
jmp
inc
jb
stos
jl
in
cmp
add
cmp
loope
cmp
mov
pop
jbe
xchg
mov
sbb
in
mov
cltd
sbb
jmp
cltd
sbb
in
stos
lds
mov
jmp
mov
insb
sub
rorb
outsb
or
insb
cs
int3
or
insb
pop
aas
or
icebp
insb
adc
or
push
insb
adc
popa
imul
pop
les
pop
insb
sbb
or
insb
sbb
or
push
insb
sbb
or
insb
sbb
and
je
loopne
mov
sbb
mov
in
sub
mov
sbb
mov
fnstsw
push
and
pop
jl
ret
and
cld
cmp
or
inc
cld
cmp
insl
mov
cld
add
and
pop
insb
sub
cld
and
das
mov
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
mov
cld
pop
insb
push
mov
add
xor
pop
mov
or
mov
cld
pop
mov
or
cmp
inc
mov
xor
pop
and
cmpsl
test
daa
jecxz
xor
xchg
cltd
in
fldt
ret
stos
sbbb
stos
test
add
or
pop
test
cltd
insl
xchg
ljmp
push
add
dec
add
jnp
push
push
push
jl
mov
enterw
mov
pusha
enter
mov
enter
mov
jns
enter
mov
xor
rcll
out
mov
pusha
xor
sbb
sbb
sbb
sbb
sbb
cltd
sub
sbb
sbb
popf
sub
sbb
sbb
mov
ror
ja
aaa
mov
int3
ja
ja
inc
or
mov
ja
inc
and
mov
in
clc
inc
add
mov
inc
call
jl
pop
pop
or
pop
mov
insb
in
pop
adc
insb
out
pop
sbb
lods
insb
lret
insb
fistpll
out
test
lods
rorb
sbb
lea
push
aad
xor
mov
push
scas
sbb
inc
xor
ja
push
aad
adc
lea
mov
and
mov
pop
nop
test
jnp
sbb
or
in
add
sbb
add
inc
iret
inc
pop
or
inc
or
fs
sahf
sub
loopne
aaa
jae
inc
push
setno
push
jecxz
lahf
xor
pop
mov
gs
xchg
add
dec
adc
lahf
cmp
inc
sub
jnp
inc
repz
inc
or
lahf
daa
dec
icebp
inc
inc
movnti
inc
bswap
lahf
and
dec
jecxz
pop
pop
and
pop
insb
push
inc
orb
and
sbb
push
or
add
dec
lret
push
test
fs
addb
and
ds
lahf
inc
das
mov
cld
inc
cs
cld
inc
aaa
mov
and
notl
dec
aas
or
sub
mov
pop
insb
dec
mov
jb
mov
or
iret
fisubrs
fmul
into
stos
push
int3
inc
xchg
fidivrl
push
jae
rorl
mov
dec
mov
push
jg
inc
fcoml
adc
push
pop
add
sbb
ret
aaa
les
enter
test
jle
mov
xor
mov
jnp
mov
ret
imul
add
lods
cmp
fistpll
add
pop
fstl
add
dec
xor
push
js
add
or
add
dec
mov
pop
push
xor
aas
dec
xor
pop
pusha
inc
out
or
xor
or
cmp
stos
loopne
shrl
xchg
aas
cmp
jg
ret
je
ja
adc
jne
adc
jae
adc
inc
add
jno
push
nop
inc
add
fistps
nop
dec
add
jge
sbb
jnp
sbb
dec
add
jns
push
nop
dec
add
filds
nop
jne
rolw
add
inc
filds
jno
inc
filds
nop
jae
insb
rorl
or
dec
fcoml
xchg
fstps
shrb
cmp
stos
out
xchg
cltd
cmp
aam
in
cwtl
cltd
xor
fisubrl
lds
lahf
sbb
enter
mov
cmp
pop
setnp
inc
push
test
inc
ja
inc
inc
jno
inc
inc
jae
inc
dec
jge
inc
dec
jg
inc
dec
jns
inc
dec
jnp
inc
xor
mov
push
dec
test
movzwl
xor
mov
push
dec
addl
dec
popl
bsr
cmp
mov
inc
cmp
mov
inc
btc
and
movsl
lahf
inc
dec
xchg
inc
and
cmpsl
lahf
inc
dec
xchg
inc
and
mov
inc
bt
sub
lods
lahf
dec
dec
popf
inc
das
rsm
lahf
dec
dec
cwtl
inc
adc
aam
jne
out
adc
lahf
ja
in
adc
dec
loop
pop
psrld
sbb
fcompl
sbb
ficomps
sbb
dec
ljmp
dec
testb
lahf
addr16
hlt
inc
add
dec
repnz
pop
cmpps
bswap
lahf
insl
dec
incb
add
inc
push
or
inc
push
pop
lahf
xor
push
bt
pop
shrd
pop
imul
pop
pop
lahf
cmp
pop
bts
inc
pmullw
inc
lahf
and
inc
psrlw
inc
psrlq
dec
paddusw
dec
pandn
dec
psubusw
dec
pand
xor
lds
xor
lahf
push
dec
repz
xor
rcrl
movnti
cmp
int
pop
dec
std
inc
cmp
iret
lahf
pop
dec
sti
inc
cmp
leave
lahf
pop
dec
stc
inc
ds
lahf
inc
dec
movl
dec
lds
maskmovq
imull
and
aad
jne
mov
cmp
jno
int
je
aas
mov
jp
mov
gs
hlt
inc
and
xchg
call
cmp
dec
out
add
aad
xor
jg
arpl
out
arpl
aad
push
roll
push
movsl
lahf
fs
inc
add
in
lahf
dec
fadds
unpckhps
add
adc
push
bndldx
or
cld
outsb
or
insl
push
jmp
dec
xchg
test
loop
sub
in
cld
xor
mov
inc
add
aad
push
and
sbb
aas
jb
sub
ret
or
clc
popf
and
je
loop
rcrl
mov
jge
pop
mov
jb
mov
adc
insl
aam
icebp
mov
hlt
je
loop
sarl
shll
cmpsb
lret
adcl
sbb
xor
cmpsl
mov
push
adc
mov
cs
sar
lock
movsl
mov
mov
shlb
add
sbb
mov
add
je
loop
rorl
xchg
adc
cmpsl
pusha
push
mov
test
cmp
or
mov
fadds
js
ficomps
push
mov
adc
js
ret
xchg
add
pop
inc
cli
icebp
icebp
and
je
loop
shrl
test
xchg
enter
std
shll
mov
jecxz
xor
loope
push
adc
je
loop
rcll
sti
js
xchg
mov
out
cmc
pusha
or
mov
popa
pop
ljmp
cmpsl
adc
cs
fsub
ss
test
out
mov
shl
and
jbe
push
lods
adc
cmpsl
jo
out
sbb
xor
fiaddl
push
and
push
loopne
sarb
imul
mov
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
js
hlt
sbb
ds
push
jae
daa
mov
push
cmp
push
jb
adc
dec
xchg
sbb
addb
addl
aaa
cmp
xor
inc
shl
cwtl
mov
popa
push
js
lods
xor
into
cmpsl
push
push
cs
jecxz
mov
fdiv
ss
roll
push
idivl
xchg
mov
out
mov
mov
sbb
cmp
jb
adc
js
daa
sbb
pop
lea
jecxz
pop
enter
repz
xchg
xchg
pop
gs
cmp
ss
cmpsl
mov
imul
inc
int
add
xor
pop
xor
jne
stos
mov
or
pop
mov
pop
adc
push
mov
and
mov
push
cmp
sbb
lods
jp
fs
mov
in
ret
cmpsb
insl
xor
insb
int
xchg
dec
lds
lods
jecxz
mov
out
arpl
xchg
loop
xor
lahf
lret
je
xor
xchg
sub
aas
mov
aaa
cmp
xor
stc
aaa
icebp
test
shrl
jae
and
lds
jae
nop
push
jl
cmp
push
out
dec
xchg
cmp
inc
and
popa
aam
pop
mov
orl
cmp
adc
and
in
jne
or
into
in
jae
js
mov
repnz
pop
xchg
cmp
xchg
xor
jecxz
jno
adc
ret
rcrb
cmc
xor
xor
lahf
xorl
cmpsl
lea
pop
cmp
inc
sbb
icebp
mov
add
shlb
or
or
push
pop
fldcw
cld
sahf
mov
adc
adc
push
das
pop
mov
popf
add
mov
fstpl
cmp
sub
sub
aas
xor
andb
arpl
jo
mov
xor
fwait
loope
push
or
decl
ss
dec
fidivl
into
jae,pt
adc
aam
pop
pop
xchg
shll
mov
jl
shl
lahf
xor
stc
xchg
inc
mov
push
divb
test
pop
ret
ja
mov
addr16
or
pusha
das
jp
icebp
inc
sbb
push
add
loope,pn
int
adc
in
pop
mov
test
xor
xchg
out
jl
xor
push
shll
sahf
cmpsl
push
add
pop
or
or
cmp
ljmp
icebp
add
lds
mov
movsb
jge
out
jmp
mov
repnz
sar
push
mov
inc
mov
ret
push
sub
pop
shll
xchg
and
in
mov
pop
inc
mov
jb
js
cmp
rcr
mov
mov
outsb
dec
cs
imul
pop
lret
push
pop
cli
xor
imul
ficoms
int
xchg
fcomps
hlt
cwtl
jge
fwait
xchg
sbb
cmp
adc
lods
xchg
and
mov
pop
mov
push
sub
dec
mov
popa
das
jb,pt
jbe
lods
pop
xchg
mov
and
shlb
mov
mov
pushf
rcl
fisubs
aas
cmp
inc
lds
sbb
scas
cmp
jg
jbe
mov
icebp
jle
mov
mov
popf
sti
jbe
in
mov
je
ljmp
adc
pxor
int3
mov
jmp
push
stos
decb
shr
xchg
sbb
mov
mov
jmp
mov
dec
lahf
outsl
es
into
ja
addr16
bound
hlt
push
dec
mov
out
pop
mov
subl
nop
push
inc
mov
andb
add
inc
and
sbbb
pop
adc
arpl
inc
add
jns
int
dec
pop
lock
dec
sub
lods
daa
fbld
scas
shl
pop
fs
adc
rcrl
sbb
jnp
lea
xor
push
outsl
and
jns
hlt
jo
addb
test
test
add
jnp
rol
repnz
fwait
clc
mov
in
mov
ss
ret
cli
lahf
xor
sub
cmp
push
faddl
and
sbb
in
mov
out
outsb
pusha
jecxz
lds
dec
mov
push
sbb
imul
int
jnp
int3
inc
repnz
mov
clc
mov
and
das
mov
push
jne
xchg
jno
push
xchg
das
dec
mov
pop
int
ja
scas
xor
hlt
push
rolb
loopne
cmp
test
insl
arpl
ret
add
and
mov
imul
jnp
mov
in
mov
push
mov
scas
jae
fwait
lods
mov
lock
pop
xor
mov
je
in
test
in
mov
add
test
xchg
cmc
roll
inc
inc
popf
jnp
addr16
repnz
in
pusha
js
sbb
pop
sub
rcl
cmp
loopne
sub
push
pop
in
pop
outsl
jnp
divb
add
add
add
adcb
mov
xchg
mov
clc
call
mov
lock
push
outsl
and
out
fisubl
stos
clc
daa
and
pop
shll
push
xchg
dec
inc
aaa
adc
dec
push
fnstenv
mov
bound
mov
das
shlb
out
mov
subl
mov
out
loopne
data16
mov
fsubs
push
add
call
dec
mov
adc
repnz
cmp
in
mov
call
mov
dec
or
in
ja
lret
pop
bound
incb
add
test
std
mov
out
adc
add
dec
mov
adc
jne
lods
fcmovnbe
in
pusha
mov
sub
push
mov
dec
sub
in
outsl
cs
gs
into
mov
add
mov
mul
mov
scas
cmp
loopne
pop
test
sbb
push
add
out
xor
jnp
sub
clc
jno
in
mov
ret
test
and
mov
xchg
cld
sub
mov
or
mov
std
in
lcall
fs
pushf
enter
arpl
push
leave
xchg
cmpsl
adc
mov
faddl
shl
cmp
push
imulb
mov
or
aad
lret
inc
sarb
dec
mov
popa
imul
push
push
add
jecxz
mov
fsubrl
jge
jno
lods
enter
cltd
loop
roll
aam
js
xchg
mov
out
pop
pusha
sub
test
inc
popa
popf
mov
push
mov
std
out
andl
inc
jecxz
fdivr
es
jp
pop
je
loop
shl
imul
cmpsl
out
leave
pusha
sbb
push
and
sbb
cmp
mov
jp
stos
mov
fsubr
ss
call
cwtl
sbb
out
sub
and
push
and
jb
adc
jnp
sbb
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
cmp
inc
push
rcll
lcall
sbb
rcr
das
add
adcl
sbb
cmp
js
mov
addl
add
adc
in
adc
je
loop
shrl
sbbl
je
mov
popa
leave
cli
js
lods
push
push
cmp
xor
cs
inc
mov
fsubrl
mov
call
xchg
inc
cs
push
outsb
stos
xchg
mov
sbb
sbb
sti
leave
add
inc
xorl
js
lods
lea
cmpsb
mov
and
cmc
add
jle
cli
ds
dec
adc
je
loop
shll
clc
lds
xchg
push
lods
push
and
ret
jb
adc
js
lds
sbb
cmp
inc
jle
insb
icebp
adc
mov
sub
movsl
rcll
js
xchg
mov
rorb
les
out
js
lods
lcall
cmp
fmul
ss
fcom
xchg
pop
mov
jmp
jnp
addl
pusha
fdivl
mov
popa
and
imul
cmpsl
stos
lock
mov
ss
add
cmp
push
push
stos
mov
fs
jmp
stos
mov
aad
fsubl
rolb
push
and
jb
dec
cs
jecxz
mov
fsubl
pop
shll
inc
ficoms
stos
mov
xchg
mov
out
lea
mov
sar
jns
enter
fcoms
js
mov
add
xor
mov
xchg
adc
je
loop
rorl
js
xchg
pusha
out
mov
rol
dec
sbb
dec
jb
adc
xor
pusha
add
stos
mov
xor
adc
je
loop
shl
cli
and
mov
out
jae
scas
mov
rcrb
aaa
mov
popa
rol
jp
pop
lods
in
dec
cmpsl
lret
out
xchg
mov
fmull
ss
shl
mov
sti
xor
stos
cmp
add
sbb
mov
sub
cmp
push
pusha
cmpsl
jle
cs
jecxz
mov
fmull
ror
mov
push
stos
jl
jp
test
mov
aad
fcoml
mov
fsubrl
and
cmp
jb
adc
js
cmc
sbb
mov
mov
jecxz
cwtl
cli
dec
icebp
sbb
je
loop
rcll
dec
bnd
xchg
mov
out
mov
shlb
mov
popa
cld
js
lods
push
fiadds
cmc
mov
jecxz
xchg
out
icebp
data16
je
loop
shll
sbb
pusha
add
outsb
mov
mov
adc
js
ficomps
xchg
mov
inc
jecxz
inc
cli
imul
loop
shll
or
xchg
mov
out
dec
pusha
stos
mov
shlb
mov
push
js
lods
addr16
xchg
cmpsl
push
aaa
cs
mov
ss
rcl
popf
mov
mov
roll
ljmp
mov
inc
xchg
cmp
jb
push
push
cmpsb
pop
ljmp
mov
jecxz
and
jnp
ds
je
loop
shll
xchg
mov
out
insb
pusha
dec
mov
rcrb
aam
sbb
lods
insb
push
lods
cmpsb
popa
fiaddl
ret
jecxz
add
inc
icebp
pop
adc
je
loop
ror
xor
xchg
mov
out
inc
pusha
dec
mov
shrb
mov
popa
hlt
adc
push
mov
mov
xor
ss
lods
sarb
adc
stos
scas
mov
xchg
sbb
mov
test
in
and
cmp
cmpsl
stc
mov
mov
fcompl
roll
pop
push
pushf
stos
mov
mov
mov
mov
or
insb
fildll
and
jnp
in
stos
adc
js
cmp
xor
jcxz
ja
push
icebp
mov
je
loop
rorl
push
js
xchg
movsb
out
cmpsl
pusha
insl
mov
rcr
imul
push
push
sbb
xor
movsl
rcrl
in
jle
repz
loop
jecxz
les
insb
xor
in
sub
mov
lcall
add
sub
sbb
xchg
rorl
lret
mov
jmp
aam
jno
push
push
or
xchg
mov
pop
push
cld
dec
push
into
xor
sbb
repz
jle
cmpsl
movsb
lods
lea
pop
sarb
repnz
xchg
pushl
insl
mulb
push
lods
xor
xchg
out
int
into
int3
xor
sbb
mov
aaa
loope
sbb
jae
jp
push
int3
sbb
xchg
ds
call
jecxz
stc
xchg
xchg
test
jecxz
imul
xor
add
pop
jecxz
das
pop
or
leave
scas
pop
icebp
out
stos
cld
push
jecxz
pop
and
mov
dec
xchg
inc
je
cmpl
add
mov
add
je
push
push
xor
stc
mov
xor
hlt
data16
cmpsl
mov
jo
pop
jns
and
mov
loope
in
shr
adc
xchg
push
hlt
int
ss
add
and
xor
mov
xor
xor
sbb
fisttps
in
pop
mov
iret
push
hlt
jl
dec
jp
int3
adcl
outsb
fwait
test
clc
lods
rcll
cmp
imul
lret
sub
into
jge
sbb
jo
jge
orb
je
push
stos
dec
in
sub
push
and
aas
dec
les
or
dec
xor
cld
mov
add
into
inc
cmpsl
jb
jge
sbb
dec
cmp
mov
mov
dec
push
iret
pusha
push
push
pavgw
fs
pop
scas
out
xchg
cmp
lea
jae
and
dec
stos
and
jb
mov
cld
xor
cmc
aas
mov
std
cmp
cmp
incl
loopne
jmp
int
mov
xlat
repnz
lds
fidivrs
cmp
ficompl
sub
xchg
icebp
push
xchg
scas
jp
jp
push
jae
subl
sbb
xchg
xchg
popa
mov
pop
lret
jecxz
dec
xchg
mov
pop
loop
xchg
adc
inc
sahf
push
and
jb
mov
xchg
jo
cli
loopne
xor
mov
jne
dec
dec
insb
dec
insl
add
fcom
xchg
mov
shll
add
add
cmp
sub
jge
cmpsl
push
pop
sbb
xor
cwtl
cmp
and
xchg
lods
push
hlt
xchg
stos
jle
and
pop
movsb
and
lds
repz
or
dec
xor
mov
dec
cmp
cmpsl
push
insb
xchg
les
scas
mov
incb
aam
jae
adc
mov
xchg
add
xchg
mov
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
in
bound
sti
jecxz
sbb
daa
sub
jmp
pop
lahf
test
pop
out
std
addl
dec
cmpsb
inc
jb
xchg
fldt
pminub
dec
imul
dec
mov
dec
fmull
xor
or
cltd
or
inc
sbb
inc
es
lea
into
push
adc
xor
and
jle
or
shlb
in
inc
inc
xor
xchg
and
aad
dec
xor
cmp
lcall
ds
outsb
xlat
fists
sarb
aam
cmp
in
inc
push
xchg
shr
push
jns
push
iret
mov
pop
jp
and
jle
fisubl
mov
orb
and
sub
cmp
dec
sub
jae
mov
mov
adc
test
sbb
les
cmpsl
pop
cmp
pushl
fnstsw
ret
inc
out
imul
and
inc
sub
icebp
sbb
dec
xchg
imul
addr16
cmpsl
dec
xor
negb
adc
add
push
mov
cmp
mov
out
inc
sbb
jg
mov
aad
cmp
xor
rorb
test
xchg
and
insb
mov
push
pop
lret
pusha
repz
inc
pop
ret
jb
aad
and
mull
loop
pop
and
sbb
cmp
repz
fdivrl
pop
shr
rolb
xchg
mov
push
stos
jae
xor
sbb
dec
into
sbb
aaa
fmull
mov
and
and
sbb
mov
adc
js
xchg
sbb
test
sub
mov
cli
jbe
ret
adc
je
loop
rorl
add
js
xchg
insb
out
pop
pusha
loope
adc
xchg
push
and
mov
push
js
lods
push
push
cmpsb
cmpsl
loope
cs
jecxz
mov
fmul
ss
fst
movsl
and
imul
je
lock
orl
test
and
loopne
pop
cmpsl
fcompl
mov
shl
sbb
adc
je
loop
roll
jae
roll
ss
xchg
mov
shrb
sub
lods
mov
scas
cs
mov
faddl
loopne
sbb
sbbb
cs
mov
jmp
push
xchg
pusha
mov
pop
mov
popa
push
mov
lods
push
push
push
cmpsl
push
into
cs
mov
ss
rcll
lds
xor
stos
lret
push
dec
aaa
call
pop
aad
fmull
mov
xchg
push
and
sbb
jmp
mov
fcompl
push
icebp
mov
loop
rcr
push
xor
xchg
popa
test
lods
ja
and
sbb
adc
js
sub
das
mov
mov
mov
push
test
stos
lcall
lret
inc
shlb
mov
lods
std
push
pop
cmpsl
aad
loop,pn
out
mov
fcoml
dec
roll
shlb
push
push
lret
mov
xchg
xor
mov
inc
push
and
sbb
into
jb
adc
adc
sub
jg
dec
jecxz
jb
mov
std
adc
je
loop
shrl
xchg
or
jbe
inc
mov
rorb
mov
popa
xor
mov
push
clc
cmpsl
insb
jecxz
jecxz,pt
mov
decb
push
push
push
fwait
aaa
push
lcall
xchg
fcoml
add
push
and
sbb
js
jnp
cmp
stc
pop
aas
fdivl
leave
icebp
inc
adc
je
loop
rcl
cmp
clc
xchg
pusha
jl
std
jne
and
sbb
in
out
pop
js
cmpsb
sbb
lcall
jecxz
addr16
add
je
loop
shrl
fdivrl
xchg
mov
out
xchg
pusha
fidivl
mov
popa
mov
popa
js
lods
push
mov
int
lret
add
sub
cmpsb
adc
je
loop
rol
inc
sub
xchg
pusha
dec
mov
shlb
ss
lahf
js
lods
das
push
sbb
jecxz
mov
fsubl
ss
test
dec
adc
xor
fcoml
stos
or
aaa
das
fwait
pop
fsubr
mov
jle
lds
push
aad
cmp
shlb
pop
icebp
inc
adc
je
loop
rol
push
ljmp
test
lds
dec
sbb
cmp
jb
adc
movsb
xchg
xor
pop
jecxz
adc
and
je
loop
rcrl
push
js
xchg
mov
out
or
mov
rclb
xchg
daa
js
lods
xor
cmpsl
and
jecxz
mov
fsubl
ss
fcom
jle
mov
loop
pop
mov
mov
aad
fmull
add
aas
shrb
and
sbb
stc
jb
adc
js
xchg
sbb
shrl
rcrb
mov
pop
stos
dec
mov
movl
add
or
push
and
jb
adc
lea
sub
mov
into
sub
stos
mov
or
mov
rcrb
mov
fs
jb
adc
js
jne
mov
test
cmpl
push
pop
stos
call
xchg
xchg
sbb
sub
shlb
or
enter
out
add
cmpsl
xor
dec
icebp
jecxz
mov
je
xor
mov
out
int
push
mov
rorb
mov
popa
repnz
outsl
js
lods
rclb
cmpsl
jo
sub
mov
jp
xchg
cli
mov
je
loop
shll
xlat
test
lcall
pusha
inc
mov
rorb
insl
mov
popa
popa
out
js
lods
pop
push
scas
cmpsl
in
outsl
cs
jecxz
mov
fmull
ss
shlb
inc
mov
mov
js
xchg
jg
test
shlb
or
and
add
ss
mov
fdivl
rcl
mov
dec
cs
push
add
fnsave
icebp
mov
aad
faddl
movsl
inc
push
and
and
cmpsl
cmc
sub
jnp
mov
ss
roll
cs
push
cld
stos
mov
add
in
aaa
jbe
sbb
mov
insb
mov
popa
clc
sub
or
out
cmp
mov
mov
cmp
push
lods
aaa
mov
jp
mov
mov
lods
and
xchg
jno
jb
jge
jmp
mov
push
pop
xor
or
or
jae
push
lods
out
or
pop
repz
ds
decl
and
lea
out
div
loopne
push
cmpsl
pop
and
xor
jnp
jp
adc
jge
xorl
sub
or
jo
repnz
repnz
arpl
ret
inc
adc
mov
jno
shl
mov
xchg
rclb
jg
repnz
sbb
inc
out
inc
mov
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jns
pop
and
call
xchg
lret
sub
in
mov
movsl
fistl
out
jl
test
and
bound
out
xchg
adc
sub
je
aas
xor
xchg
sub
cmp
cmp
lock
in
and
rorb
cmp
cld
mov
add
pop
bnd
loope
mov
repnz
mov
add
ss
bound
and
out
repnz
mov
subl
add
pushf
xchg
fistpl
ficomps
cmpsl
repnz
push
and
push
out
push
ret
jne
push
call
movsl
adc
sub
hlt
and
outsl
push
repz
inc
loopne
fcoml
xchg
bound
xchg
test
pop
loopne
fbld
push
push
jo
sub
sbb
jns
jbe
mov
lret
pop
sub
test
js
and
mov
jns
in
repnz
iret
sub
jl
test
test
xchg
std
mov
pop
inc
push
add
pop
movsl
push
mov
mov
ja
xor
mov
shll
stos
push
mov
pop
aad
test
fsubr
pop
mov
nop
jae
mov
sub
pop
and
lods
gs
mov
fsubs
popa
hlt
pusha
setae
out
ret
rcll
shl
adc
shlb
imul
test
adc
mov
aam
dec
inc
movsl
cld
cmp
pop
and
in
push
jno
sub
test
std
inc
bound
icebp
cmp
sti
jg
xlat
push
jnp
nop
push
xchg
iret
mov
mov
jmp
adc
inc
cld
repnz
and
sub
lea
aas
add
js
dec
sbb
jno
aaa
mov
sub
push
push
dec
repnz
cmp
jb
add
dec
dec
inc
test
jo
xor
pop
mov
cmp
clc
adc
movsb
dec
mov
cmp
sub
push
sbb
shl
mov
scas
rcll
or
cmp
xor
and
outsl
jns
pop
repnz
mov
and
push
enter
flds
ret
cmp
sbbl
inc
mov
push
loopne
lds
mov
js
ss
test
bound
imul
xchg
int3
mov
inc
push
fdivs
repnz
push
lock
mov
test
sarl
and
and
fs
inc
fists
lret
mov
bound
sub
test
or
mov
fistl
in
inc
mov
dec
inc
lret
cmpsl
push
je
mov
cltd
jge
sbb
cmp
mov
bound
cld
mov
mov
sbb
lock
jne
pop
and
nop
mov
cs
pusha
and
adc
mov
int3
adc
outsl
mov
test
xor
and
xchg
cltd
cli
sub
pusha
xchg
cmp
mov
aaa
js
adc
js
ret
mov
stc
push
test
mov
shrl
add
in
loopne
add
xchg
mov
ljmp
dec
movsl
leave
pop
xchg
and
repnz
sbb
adc
mov
xchg
mov
mov
pusha
outsl
mov
shlb
scas
icebp
adc
xchg
test
xor
jns
sbb
adc
je
push
das
test
loop
cmp
lds
cmpsl
mov
pop
pop
rcr
jl
sbb
test
xchg
xor
pop
cmpsb
repnz
mov
test
arpl
add
xor
xchg
enter
es
xor
ret
test
mov
movsl
jnp
xor
jge
test
xchg
insl
xlat
clc
faddp
outsl
dec
xchg
cmp
sbb
jecxz
lret
push
jmp
mov
popa
daa
das
jns
jl
mov
movsb
xchg
or
cltd
lock
xor
bound
or
cmpsl
int3
fs
add
pop
insl
adc
add
aaa
fimull
push
hlt
sub
fdiv
orl
or
jne
inc
jbe
add
out
nop
xchg
scas
cwtl
mov
insl
lods
fcomps
push
sub
repnz
or
xchg
or
fsubs
pushl
or
call
jb
in
sar
dec
xchg
cmp
add
xor
aam
enter
in
mov
scas
loop
dec
loopne
lock
mov
cmpsl
loope
mov
cmp
je
jl
or
stos
icebp
and
int3
int3
ficoml
dec
jae
inc
add
xchg
in
inc
push
sbb
cmp
jecxz
sbb
xchg
xchg
jge
insl
scas
sub
jo
xchg
xchg
fcoml
add
stc
fwait
imul
xor
stos
cmc
mulb
inc
inc
je
decl
or
and
aam
lahf
mov
mov
rcrb
fmul
repz
rol
lea
daa
xchg
xor
shlb
mov
in
add
sub
lods
cmpsl
sbb
inc
les
jmp
jne
fnstenv
pop
dec
loopw
push
fimuls
nop
mov
mov
out
int3
cmp
xchg
ss
dec
dec
jnp
rclb
add
xchg
mov
xor
sub
loopne
mov
icebp
xor
mov
repnz
movsb
pop
jns
jle
ljmp
xor
test
cmpsl
jns
js
std
lea
cmp
arpl
adc
sar
iret
sbb
cmpsl
and
sub
sbb
dec
jl
pop
mov
xlat
xchg
jno
addr16
das
scas
mov
mov
fwait
stos
shlb
decb
les
inc
clc
lods
loopne
fcomi
jne
sbb
mov
sbb
xor
jnp
mul
lock
cmp
add
div
icebp
xor
aad
xchg
mov
mov
ds
clc
fucomi
xchg
cld
dec
in
out
and
xchg
cmp
jmp
lods
test
jo
pop
imul
xchg
movsb
call
sbb
pop
ret
push
jns
movnti
pusha
mov
pop
and
cmp
sbb
sub
ret
test
mov
jge
ljmp
add
mov
jl
fs
sahf
mov
jae
shll
lahf
pop
lcall
jmp
in
scas
bound
hlt
shrb
cmpsl
sub
push
fcoml
sbb
dec
stos
addl
push
icebp
repz
pop
xor
mov
sbb
fs
mov
push
idivl
in
repz
pop
hlt
test
popf
imul
jnp
jne
dec
fisttpl
push
mov
add
out
mov
and
std
pop
test
sub
adc
setp
addr16
or
fildl
cmpsl
rcr
sarb
xchg
jnp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
lock
imul
xor
push
inc
repnz
gs
ror
punpckhwd
mov
cmc
fnstsw
adc
sbb
pusha
cmpsl
je
mov
mov
rorl
movsl
pop
or
adc
jae
xchg
add
push
mov
push
xchg
fisubrl
jno
cmp
mov
add
fisttpll
sbb
sub
jb
xchg
lods
cmpsl
fsubrs
jp
outsb
jecxz
jp
bound
push
fsubl
outsb
xchg
pushf
add
adc
xor
mulb
xor
xchg
pop
add
jae
mov
mov
xlat
and
in
fucomp
mov
pop
sub
ret
iret
movsb
dec
jae
repnz
mov
jge
sub
dec
cmp
mov
fs
icebp
cmp
sti
movl
or
pop
xchg
call
sbb
pop
jecxz
in
pop
cmpsl
mov
pop
movsb
in
mov
rclb
sub
icebp
in
xchg
rcrl
pop
test
lods
jmp
xor
sub
xor
inc
stos
push
test
mov
adc
rorb
pop
jae
lea
int
push
jp
xchg
pop
add
push
xor
mov
fldenv
test
pop
jecxz
in
mov
notl
icebp
repz
xor
dec
sbb
aam
and
fsubr
lds
and
rcll
adc
cmpsl
push
dec
nop
aaa
dec
mov
clc
cmp
pop
jl
xor
mov
repnz
test
add
testb
outsb
sahf
lret
xlat
lcall
mov
loop
js
mov
jmp
outsl
sahf
xchg
jo
mov
mov
lcall
fldcw
nop
or
fwait
xchg
sbb
dec
insb
xor
icebp
stos
xor
pop
loopne
mov
inc
mov
pushf
push
mov
test
cld
inc
mov
cmpsl
xchg
jnp
xchg
es
data16
insl
cmpsl
adc
and
xchg
jmp
inc
ja
nop
out
mov
inc
les
js
sbb
and
andl
mov
push
cltd
jl
cmp
jle
aaa
lret
adc
aas
and
pushf
cmc
hlt
cmp
movsl
jo
pop
xor
aad
jg
mov
aam
xor
int
or
lods
xchg
fcmovnb
adc
pusha
aad
enter
push
mov
movsb
clc
js
ret
cmp
nop
sbb
adc
mov
ljmp
aam
and
test
and
bound
push
add
jo
xlat
repz
lods
rcr
test
or
sub
sbbb
sub
lods
mov
cmpsb
cwtl
jno
mov
ret
or
jl
daa
bound
call
mov
loop
ficomps
in
adc
repnz
push
in
imul
clc
insb
mov
ret
adc
scas
sahf
and
imul
jp
mov
xchg
sub
inc
iret
cmpsl
xchg
and
sub
mov
mov
idivl
loopne
mov
cmp
adc
negb
cmc
jns
mov
ds
fidivrl
mov
inc
xchg
arpl
and
stos
cmp
iret
mov
lret
inc
and
hlt
adc
pop
mov
ljmp
repnz
aas
leave
enter
sti
xor
enter
push
shlb
loope
mov
mov
shll
cmc
cmc
mov
sub
push
mov
sarb
pop
enter
and
in
fnstsw
and
pushf
xor
out
insl
sbb
je
mov
nop
add
scas
sbbb
or
mov
insl
pop
mov
fldcw
shlb
push
push
loop
mov
mov
sub
xchg
push
repz
into
insb
lea
inc
addb
mov
or
or
pop
sub
or
or
cmp
and
push
inc
xor
pop
jmp
jo
pusha
std
mov
push
sar
dec
hlt
je
leave
mov
cmpsb
in
lods
mov
mov
aad
pop
mov
mov
movsl
or
in
pop
les
pop
xor
out
lret
mov
in
sbb
pop
stc
jns
xchg
std
inc
mov
xchg
push
outsb
sti
push
inc
or
jbe
jle
inc
fcom
mov
repz
nop
in
aad
dec
pushf
dec
out
repz
mov
sbb
xor
test
repz
cwtl
xor
push
cld
jmp
sbb
xor
test
jbe
push
jp
rcr
push
and
add
jbe
push
xchg
pop
test
pop
imull
cld
inc
lods
imul
push
rclb
xchg
repnz
out
shrl
pop
xchg
mov
nop
std
dec
in
inc
sub
mov
orb
cs
xchg
pop
xor
sbb
adc
int
dec
jg
andb
jne
xchg
clc
sbb
sub
add
push
ret
insl
mov
out
std
xlat
je
sbbl
sti
add
add
jg
rcll
scas
loopne
stos
shlb
inc
mov
push
stos
push
mov
and
pushf
mov
aad
faddl
lods
mov
mov
sti
popf
xchg
ss
sbb
scas
enter
mov
movsl
push
mov
std
shll
mov
mov
push
mov
or
push
shlb
add
out
mov
repz
adcl
jecxz
sbb
pushf
scas
inc
add
clc
dec
mov
cld
cmp
loop
dec
adc
std
out
cli
cltd
cmp
lods
xchg
xchg
fnstenv
mov
mov
dec
pop
xchg
jmp
aad
pop
fadd
xchg
mov
fwait
iret
mov
fdivrs
inc
clc
mov
jae
xchg
sbb
jecxz
rcrl
adcb
jp
hlt
cld
sbb
shll
sbb
and
les
and
out
pop
lods
mov
cmpsb
shlb
je
or
stos
outsb
mov
mov
xor
scas
pushf
add
jle
or
hlt
push
ret
outsb
lret
scas
clc
sbbl
inc
imul
ljmp
and
cmp
mov
jo
jnp
and
adc
sbb
cwtl
jmp
pop
lods
jnp
jl
cli
pop
out
rol
push
in
add
pop
xor
dec
adc
push
mov
lret
pop
xchg
adc
pop
push
ljmp
jmp
jle
inc
pop
aas
sti
mov
movsb
scas
or
mov
sbb
pop
jmp
dec
aaa
dec
adc
decl
push
adc
fisubrs
dec
jg
mov
enter
or
cmp
add
and
mov
pop
je
adc
mov
jecxz
shll
das
lods
arpl
xor
xor
cmpsl
lock
pop
iret
jno
in
cwtl
jmp
pushl
lock
jno
cmpsl
shlb
jl
std
cwtl
sub
xchg
mov
mov
xor
mov
bound
addr16
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
lods
push
or
ljmp
inc
xor
mov
sub
stc
addr16
in
negl
dec
sahf
adc
test
orl
or
sbb
test
sbb
iret
movsl
adc
out
pop
add
sub
jo
inc
mov
jg
push
mov
dec
rolb
add
jbe
gs
dec
into
push
mov
fistps
jp
push
mov
dec
mov
ja
jle
push
test
sarb
mul
xor
icebp
mov
fstpl
call
mov
je
arpl
dec
into
out
lret
aaa
or
les
mov
dec
dec
aaa
pop
xchg
xor
stos
xchg
and
xor
adc
xchg
out
sbbb
scas
sbb
shl
test
xchg
sub
dec
xchg
cs
or
jmp
inc
inc
xchg
add
faddl
mov
fsubrs
imulb
popf
xchg
inc
out
pop
inc
mov
lods
xchg
fsub
dec
mov
shl
fdivrs
lock
sub
mov
mov
setl
xor
dec
push
jno
jg
ret
adc
push
jae
stc
rcrb
arpl
ds
xor
mov
pop
fs
test
mov
mov
stos
or
push
xor
mov
sbb
sub
shll
mov
out
insb
xchg
in
insl
lahf
out
insb
jne
xchg
out
xchg
and
add
lock
int
mov
and
push
add
lea
add
js
lret
pop
js
jecxz
outsb
fiaddl
cmp
sbb
push
lret
add
add
xchg
cmp
sahf
ljmp
js
pop
jl
or
movsb
xchg
jecxz
call
inc
out
jb
xor
shrb
fwait
enter
xchg
add
lock
push
testl
hlt
jns
adc
cmc
pop
stc
pop
xchg
jo
mov
push
iret
inc
push
test
add
or
cmp
jge
sub
movw
sub
lock
add
cld
outsl
in
or
les
push
iret
jge
and
cmpsl
stos
gs
sbb
xchg
aas
pushf
pop
loopne
lcall
sbb
mov
leave
push
movsb
arpl
lret
jg
mov
xchg
cmp
push
mov
add
push
stos
cmp
aas
mov
hlt
cmpsb
fcomps
xchg
cmp
aas
int
icebp
xor
push
pop
arpl
imul
sub
mov
inc
int
icebp
xor
fsubrs
mov
inc
loopne
or
add
and
insb
push
fdivrs
lea
adc
je
push
cmp
add
or
bound
notb
insl
rcrl
jo
cmpsl
xor
xchg
and
fnstenv
sti
mov
mov
in
xchg
xor
or
cmp
aas
mov
lods
sbb
fs
jne
js
xchg
inc
orb
dec
xrelease
imul
ret
push
sahf
sbb
jecxz
into
dec
shl
jle
jo
dec
filds
add
push
les
mov
inc
pop
test
daa
outsb
mov
out
stos
jbe
dec
jae
lea
push
cli
jno
in
xor
and
outsl
pushf
les
lea
and
arpl
clc
jae
inc
enter
ljmp
mov
jmp
daa
inc
shrl
negb
lea
aaa
das
idivb
in
jns
cmp
or
xchg
dec
fsts
std
sub
ret
adc
dec
and
loope
mov
sbb
lods
das
std
imul
out
mov
bound
clc
ljmp
xchg
jecxz
shr
iret
test
xchg
imul
xchg
les
adc
inc
ljmp
inc
clc
jg
icebp
sub
scas
repz
push
xor
push
xlat
sub
mov
mov
jecxz
mov
mov
pop
push
adc
jge
mov
cmpsb
and
mov
dec
push
xchg
repz
andl
add
mov
dec
cs
das
daa
je
xchg
arpl
xchg
int
ret
adc
push
push
in
pushf
jmp
std
insb
mov
dec
sar
cmp
in
bound
jle
lods
jbe
sub
mov
imul
pop
aas
inc
into
xor
jp
ss
and
imul
stos
cmp
mov
or
push
mov
inc
mov
mov
mov
cmpsl
push
cmp
mov
mov
fsubs
mov
in
push
mov
stos
in
aam
jbe
out
xchg
aam
fdivrs
xchg
lods
pop
mov
jmp
js
lods
sub
loop
les
push
jnp
jge
pusha
and
jmp
fcmove
jno
into
fldl
movsb
lahf
push
xorb
and
sub
shrb
pop
movsl
and
mov
push
sahf
adc
pushf
add
push
adc
inc
sti
data16
insl
mov
pop
ret
insl
or
stc
push
cli
cli
xchg
xor
jg
lcall
rolb
xchg
dec
sub
aad
les
addr16
fsubp
push
rorl
sbb
lods
aas
and
xchg
scas
xor
les
push
ret
or
and
add
dec
rcll
pop
rcl
enter
and
adc
ja
and
push
jmp
je
cmp
imul
aad
jge
jge
sub
push
popa
aaa
pop
mov
push
pop
xor
xor
shrl
fsubrs
sub
add
cmp
enter
xchg
push
les
mov
repnz
xlat
aas
mov
xor
aam
add
cld
arpl
es
daa
cld
mov
into
movsb
push
xchg
add
jg
call
loopne
xchg
call
icebp
push
mov
cmpsl
push
mov
mov
nop
or
out
das
int3
pop
out
divl
xor
dec
repz
mov
insl
mov
movsl
icebp
mov
adc
dec
les
xor
ds
fistl
aas
jp
cs
cltd
sub
jl
and
sbb
xchg
cmc
inc
rorb
pushf
jl
lods
aam
into
xchg
inc
insl
pop
in
outsl
cmp
aam
js
and
pop
cmp
ja
or
in
aad
aad
push
outsb
rcrb
leave
shrl
mov
mov
jge
jnp
lret
mov
out
xchg
scas
xchg
cmp
das
aad
sbb
pop
adc
pop
ss
rcrb
mov
imul
mov
or
fs
stos
inc
xor
fmull
pop
add
in
dec
dec
adc
insb
add
clc
js
scas
ret
xor
movsb
jbe
push
mov
movsl
aam
cmpsl
mov
in
jae
mov
mov
loope
lret
sbb
xor
aas
jge
fldt
fisttpll
push
sahf
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
imul
push
push
sahf
cmpl
bound
jns
cmc
push
dec
pop
popa
dec
jg
call
xchg
out
fdivrs
outsl
mov
or
xchg
stos
lods
jnp
xchg
ja
mov
rep
andl
lock
cwtl
enter
and
aam
fnsave
sub
pop
out
sbb
jb
leave
mov
cwtl
pop
repnz
push
fistpll
fnstcw
roll
pop
dec
out
xchg
push
test
out
mov
mov
dec
push
ss
add
sub
cmp
mov
jnp
fcmovu
popa
jge
lcall
xorl
clc
xor
lods
dec
xchg
add
cmp
sbb
stc
lds
sub
xor
scas
xor
jp
or
in
into
cmp
xchg
xlat
aaa
ds
jle
mov
jmp
daa
fistl
dec
lods
pop
mov
fldt
lds
sbb
adc
jo
fisubrl
sub
enter
xchg
jb
cmpsb
test
pop
iret
in
insl
jle
mov
push
fsubrs
stos
mov
jnp
sub
xlat
mov
int3
mov
xchg
leave
imul
mov
clc
out
cld
dec
out
inc
sub
rcr
ljmp
push
int3
ds
xchg
sub
cli
dec
icebp
je
sbb
mov
push
or
fdivrl
mov
jp
adc
mov
fs
mov
ret
push
sahf
jl
add
ds
push
dec
add
icebp
aam
push
sub
jp
sub
into
mov
push
std
jae
sub
and
push
pop
xchg
sarl
and
outsl
mov
add
cmp
dec
insl
xor
add
ds
ss
push
leave
je
dec
scas
and
in
mov
fs
aas
movsl
js
mov
aas
or
pop
cld
xchg
loop
loopne
mov
xlat
pop
ret
arpl
adcl
or
idiv
mov
xchg
ss
push
jno
xor
jg
test
mov
addr16
xorl
push
jbe
icebp
pop
and
xchg
ljmp
xchg
or
mov
bnd
mov
scas
xor
mov
dec
mov
aaa
ljmp
add
dec
test
roll
popf
sbbb
add
jecxz
mov
add
test
cmp
adc
or
or
dec
mov
aas
ret
dec
scas
leave
test
and
cltd
daa
lret
loop
jl
fs
adc
xchg
push
bound
inc
jge
cmp
out
mov
int3
jo
imul
push
movb
dec
sbb
inc
fcoml
add
and
sbb
mov
pusha
in
push
hlt
add
mov
inc
iret
push
hlt
aaa
adc
std
out
xchg
xor
pusha
sbb
clc
sub
xor
bound
mov
bsf
mov
pop
out
dec
aas
xchg
pop
xchg
dec
ficomps
add
push
idivb
stc
mov
fdivl
test
mov
stc
dec
aam
je
sbb
push
jae
adc
ret
adc
fstps
jmp
adc
mov
add
nop
aaa
pushf
or
inc
mov
sbb
cmp
push
mov
dec
addr16
out
imul
mov
jg
outsl
gs
mov
icebp
popa
sbb
add
punpcklwd
dec
xor
dec
jecxz
insl
cmp
inc
fildl
mov
and
jbe
test
inc
incl
cmp
data16
cmpsl
aas
pop
sub
push
je
mov
add
sbb
or
test
cmp
xchg
sbb
adc
enter
ret
adc
mov
js,pn
jle
icebp
pop
and
push
dec
xor
hlt
lods
sub
loope
loopne
jecxz
stos
inc
in
daa
or
and
adc
mov
jb
xor
or
rorl
push
loopne
pusha
incl
in
jns
out
rcrl
aam
mov
das
pusha
sbb
adc
dec
bnd
sbb
pop
repz
mov
lcall
or
fldcw
gs
aam
push
jns
cmp
out
stc
in
mov
and
test
ja
cmp
daa
icebp
pop
lret
inc
outsl
jmp
xchg
mov
rorl
in
jns
jnp
mov
dec
cmp
loope
pop
or
pop
jecxz
sub
sti
push
xor
xor
in
repnz
mov
sbb
lret
lock
adc
and
in
xor
and
xchg
push
popf
and
es
and
lea
sub
cmpsb
add
ret
mov
sub
fsubrl
in
mov
mov
ret
pop
mov
jo
nop
inc
push
test
ss
mov
movl
xchg
adc
mov
pop
inc
jmp
sbb
and
xchg
push
ret
inc
push
cmp
fs
xchg
cmp
mov
or
dec
push
sarb
jb
mov
repz
dec
int3
leave
xchg
dec
mov
mov
or
outsb
loope
loop
stos
test
sbb
add
push
test
nop
das
jmp
mov
ret
add
dec
aaa
pop
test
jmp
dec
mov
lods
push
mov
xorl
cld
jnp
fcoms
movl
cmp
push
lock
in
mov
orb
mov
adc
mov
pop
hlt
mov
push
or
cvtpi2ps
adc
cmp
push
addl
push
in
mov
rorb
movsl
jne
adc
movsb
lds
xor
fs
bound
cs
inc
jl
pop
mov
mov
push
cmc
xor
mov
add
add
icebp
std
and
arpl
dec
outsl
jp
fwait
scas
or
inc
lds
imul
add
popa
mov
adc
mov
jno
scas
shlb
inc
xchg
repnz
push
movsb
in
aas
mov
xlat
sbb
lret
stos
iret
push
out
or
int3
mov
xchg
lcall
mov
daa
clc
adc
data16
mov
lret
inc
mov
mov
pop
xchg
lret
add
xchg
out
rcl
xchg
inc
vpaddsw
loopne
mov
jbe
mov
nop
mov
lods
jnp
ljmp
in
xchg
ret
add
or
pop
nop
insl
mov
test
pop
push
shrb
dec
jo
push
imul
xor
lods
xor
dec
cli
je
outsl
int
loop
push
pusha
fiaddl
and
fwait
adc
xchg
loop
dec
xlat
dec
sub
rorb
inc
insl
mov
jbe
fistpll
mov
mov
arpl
pusha
leave
outsl
repz
cmp
mov
xor
je
inc
icebp
xchg
outsb
popa
cmpsb
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
popa
aad
lods
lods
mov
daa
and
je
std
pushf
xor
lock
jecxz
in
out
mov
arpl
cld
mov
adc
xchg
popf
sti
add
sbb
lea
pop
jmp
lret
dec
lret
xor
adc
pushf
sbb
ds
dec
iret
inc
mov
stos
subl
cmp
inc
shl
push
nop
ret
xor
and
jbe
xlat
cld
jg
bound
test
xlat
orl
cmc
jae
mov
cmp
sub
movsb
push
xchg
dec
lret
dec
mov
push
jno
jmp
dec
mov
xor
test
dec
sahf
cmpsb
popf
sub
jno
int3
movsb
in
cmp
ljmp
into
fisttps
fsubr
jecxz
stos
xor
or
inc
fists
gs
mov
add
or
mov
sub
mov
and
pop
mov
loop
std
nop
arpl
sub
xor
pop
aaa
push
movlps
mov
jle
add
cmpsb
mov
dec
lahf
in
and
push
adc
add
cmpsb
rclb
xchg
jbe
adc
pop
mov
push
jecxz
mov
mov
sbb
hlt
mov
inc
into
mov
popa
movsb
cmp
and
lahf
jle
ja
cltd
cwtl
pop
fs
cmp
sub
mov
aam
ret
mov
inc
nop
xlat
jbe
or
xchg
jno
cmp
adcb
push
jle
lcall
aaa
mov
or
je
lock
pop
xchg
sbb
mov
popl
dec
es
scas
mov
ds
loopne
mov
and
or
test
mov
movsl
jb
pushl
ds
mov
es
mov
lahf
fisubrl
aad
add
adc
testl
sti
and
mov
pand
mov
pop
fstpt
add
xchg
jmp
inc
lock
movsb
or
in
mov
xchg
movsb
out
sbb
outsl
jno
shlb
or
sahf
popf
push
cmpsl
sub
and
cmp
sbb
outsb
repnz
leave
aad
test
inc
jno
jo
icebp
inc
inc
cmp
jb
cmp
aad
int
cmpl
jmp
popf
popf
add
mov
mov
or
cli
std
jno
iret
sti
pop
cmp
inc
cmp
and
gs
sub
into
test
ret
sbb
sahf
in
fwait
mov
mov
cmc
sbb
and
mov
and
and
push
cmp
fisttpl
inc
repnz
movsl
mov
mov
jecxz
or
icebp
pop
clc
push
jae
loope
dec
sbb
push
test
adc
ljmp
cmpsb
movsl
xor
loopne
insb
test
div
mov
push
xchg
lahf
jmp
add
flds
jno
jno
jg
das
popf
movsb
fdivl
ret
ds
outsb
cli
mov
mov
test
fs
xor
mul
adc
push
cwtl
sbb
push
addl
movsl
sub
mov
outsb
jmp
sti
shlb
repnz
cwtl
mov
xor
mov
or
mov
dec
pop
out
test
movsb
mov
sbb
mov
mov
xchg
add
push
test
std
push
add
cwtl
mov
fbstp
mov
in
xchg
push
insl
test
out
mov
gs
add
maskmovq
mull
addr16
nop
mov
dec
sbb
add
push
loop
or
add
mov
leave
xor
enter
sbb
jecxz
mull
mov
cmp
xor
lret
push
shl
loop
lock
xchg
inc
mov
cmp
cmpsl
jne
push
test
sti
mov
movsl
inc
adc
or
dec
sti
mov
jecxz
mov
mov
repz
inc
pop
add
cltd
add
mov
pop
cltd
add
add
inc
mov
pop
pop
xlat
imul
in
icebp
shlb
std
arpl
push
mov
fbld
ret
mov
pop
mulb
adc
dec
jno
in
mov
sbb
mov
enter
or
sti
mov
and
mov
mov
out
test
xchg
sub
fadds
movsb
jne
mov
sbb
pushw
xor
loop
xor
mov
ret
jns
dec
jns
mov
addb
inc
lret
pop
adc
mov
psubsb
mov
movb
mov
les
popf
movsl
xlat
jns
sti
mov
cwtl
mov
leave
test
out
push
dec
and
sahf
jo
push
adc
mov
push
mulb
push
fisttpll
mov
push
push
test
mov
cwtl
jg
enter
adc
mull
mov
aas
js
jecxz
outsl
or
mov
in
mov
xchg
loopne
adc
push
pop
jno
pop
sbb
scas
pop
in
movsb
push
xchg
push
adc
push
lahf
sbb
push
cmp
push
addr16
xchg
scas
outsb
std
cmp
mov
xchg
xor
jmp
addl
sbbl
rcl
xor
ret
dec
std
scas
jp
xor
es
test
arpl
cmp
mov
rol
sahf
xlat
dec
pop
xchg
movsb
mov
jnp
cmp
out
fsubs
arpl
mov
std
push
lahf
arpl
xor
jb
dec
rolb
out
sarb
pusha
mov
scas
inc
pop
out
xlat
adc
jl
loopne
inc
mov
adc
dec
imul
mov
xchg
and
adc
xchg
shll
repz
stos
ja
cmp
ret
les
inc
mov
stos
lret
repz
pop
dec
je
imul
push
in
inc
cmpsb
adc
xor
cld
push
mov
mov
fs
data16
adc
mov
mov
lcall
aad
leave
push
pop
dec
sub
or
stc
loopne
fsub
call
lahf
out
inc
mov
je
outsl
repnz
cld
mov
jae
cmp
out
jle
xchg
xlat
pop
sbbb
pop
push
inc
repnz
xchg
cmp
sbb
lret
ret
in
sbb
dec
jmp
mov
pop
inc
cwtl
pop
lcall
pop
mov
pop
out
pop
pop
fsin
cli
imul
mov
adc
mov
xorl
je
push
lock
push
cmp
stos
inc
add
in
add
nop
xchg
cmpsb
mov
mov
push
cmp
jmp
int3
cmp
pop
pop
or
cmp
sarl
negl
iret
sbb
xchg
adc
or
pop
mov
mov
and
jp
rcr
test
popf
jmp
bound
dec
xor
jle
inc
push
jae
shl
in
out
test
lods
adc
inc
adcb
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
sbb
ss
test
inc
mov
ja
in
inc
stc
std
incl
loope
pushf
xor
and
pop
shll
lods
push
mov
pop
stos
or
addl
mov
pop
xchg
inc
and
sbb
mov
mov
addl
push
mov
ja
ljmp
add
fs
xor
pop
sbb
mov
bound
push
stos
pop
jbe
outsb
in
adc
ja
stos
mov
in
stos
mov
inc
xor
cmpsb
sub
aaa
in
push
mov
sub
int3
jnp
pop
fmull
inc
imul
in
and
xchg
out
orl
sbb
adc
cmp
mov
sbbb
pop
mov
sub
pop
stc
hlt
push
dec
out
pop
gs
pusha
mov
in
adc
leave
roll
inc
pusha
push
jo
enter
push
shl
sbb
sarb
jbe
and
jns
pop
sub
cmp
fstpt
add
or
xor
adc
inc
dec
adc
and
push
xor
clc
sub
push
aas
inc
call
aam
mov
add
pop
lea
jmp
lock
cmp
in
jecxz
adc
fcmovbe
dec
clc
push
mov
ficoml
jmp
pop
dec
ret
or
mov
sbb
jg
xchg
aas
xchg
or
loope
add
mov
test
adc
repnz
or
jno
les
arpl
or
jne
cmp
fcompl
push
cmp
movsl
aam
inc
fcmovne
adc
shrl
gs
negb
sbb
push
cmc
fcmovne
inc
mov
std
gs
or
jo
cmp
arpl
mov
xchg
inc
loope
cld
push
or
in
push
in
xchg
xor
shrb
sahf
inc
push
pop
sbb
test
dec
out
xchg
push
xchg
outsb
cld
cmc
xor
roll
ja
or
pop
out
outsl
xchg
and
jmp
xor
sbb
cmp
int3
test
addr16
jns
sub
push
fsubs
pop
mov
pop
jnp
xlat
ret
lods
push
cs
pop
sti
sbb
push
and
cwtl
or
adc
fcmove
cmp
and
test
mov
mov
arpl
std
pop
mov
in
mov
jbe
jns
add
mov
inc
xorl
outsl
scas
and
std
shl
xchg
mov
aam
add
lret
jp
cmpl
shrl
insb
ror
outsb
push
call
push
pop
in
mov
shll
xchg
xbegin
hlt
and
push
mov
xchg
xor
sahf
pop
pusha
or
xor
jp
mov
sub
xor
adc
repnz
or
nop
or
inc
rorl
push
out
mov
clc
push
outsl
xchg
jne
push
in
stc
mov
xor
mov
out
lods
dec
mov
pop
loopne
add
in
arpl
outsb
mov
sub
adc
clc
adc
arpl
pop
mov
test
popf
sub
cmc
pop
mov
sub
mov
in
adc
xchg
outsl
cmpsb
jbe
sahf
and
dec
xor
pop
xlat
cmp
out
fldcw
sbb
jg
lret
scas
sub
test
xor
jmp
adc
mov
icebp
lret
lahf
jmp
add
sbb
jmp
pushf
mov
push
or
mov
and
pop
jno
push
adc
insb
inc
sbb
arpl
inc
into
addl
inc
adc
loop
ljmp
jno
or
push
in
xchg
stos
shll
in
aaa
repnz
mov
sub
enter
mov
xor
or
lahf
dec
jecxz
insb
cli
xchg
lea
mov
neg
shlb
sbb
jns
cmpsl
xor
imul
outsb
lret
je
lock
inc
shrw
sub
fsubp
inc
jns
mov
loope
add
icebp
xchg
rcl
fisubs
inc
cmpsb
mov
dec
sbb
loop
xchg
dec
mov
jle
neg
mov
push
xchg
jb
imul
dec
inc
mov
xor
leave
or
dec
inc
pop
lds
in
mov
mov
xor
pop
and
out
adc
inc
jmp
adc
inc
les
mov
xor
out
sub
mov
sub
ret
cwtl
and
stos
pop
scas
cmc
cmp
push
pushf
fnsave
cmp
icebp
scas
lods
adc
dec
add
fincstp
push
sub
cmp
lds
ds
jne
in
les
sbb
outsb
loop
jge
cld
fdivl
rorl
or
and
cmpb
pop
jle
or
pop
mov
cltd
xchg
gs
fldcw
test
mov
sub
pushf
popf
push
inc
jno
xchg
add
mov
and
adc
mov
arpl
aas
in
lret
ret
inc
sahf
das
push
xchg
xor
cmp
cld
js
shlb
aas
xchg
popf
adc
jo
xor
add
repz
and
cmpsb
push
sub
dec
mov
cs
daa
or
loop
fidivrl
in
sbb
popa
sub
inc
xchg
adc
add
jae
jecxz
loop
sub
testb
jp
pusha
inc
xor
sar
add
mov
leave
jns
shlb
cwtl
inc
ja
cli
lds
mov
xor
fisttps
int3
ds
fcoml
dec
inc
popf
dec
xchg
pop
enter
pop
popa
add
imul
or
in
loope
outsl
stc
xchg
mov
ss
sub
sub
fst
add
fabs
inc
xor
adc
ds
js,pn
xlat
sbb
or
or
sub
sbb
mov
imull
pop
inc
jmp
stc
mov
inc
outsl
mov
mov
dec
sub
ret
fcmove
mov
pop
xchg
loop
push
mov
xor
leave
mov
jb
sbb
or
dec
mov
popf
push
jl
inc
jge
addr16
add
pushf
xor
sti
ret
mov
jmp
test
mov
sub
mov
cmpsl
jns
fdivr
arpl
int3
mov
test
dec
lahf
clc
cltd
mov
into
xor
sub
andb
dec
adc
int
xor
dec
and
inc
jae
cmp
insb
les
mov
add
inc
xchg
outsb
mov
jne
mov
adc
pop
addl
mov
mov
push
cmpsb
xor
xchg
cmp
mov
xlat
inc
outsb
into
loop
sbb
mov
pushf
ret
inc
dec
mov
jne
andl
sub
or
stc
inc
xlat
into
aam
rorb
mov
jno
test
lcall
aad
push
fwait
add
xchg
adc
pop
fldt
out
je
adc
mov
adc
in
aad
decl
adc
push
adc
gs
adc
dec
pop
aam
cltd
inc
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
push
push
popf
push
pop
jo
frstor
xchg
add
push
push
fcmovbe
popa
or
rorl
data16
shrb
add
mov
xchg
xchg
pop
clc
push
add
push
pop
mov
pop
mov
in
testb
sti
xchg
adc
sub
adc
dec
mov
push
adc
jns
movsb
in
push
aad
xor
iret
outsl
push
add
nop
xorb
in
aaa
lds
test
xchg
test
iret
lods
loopne
pop
sub
mov
sbb
and
lret
push
jno
adc
rcrb
hlt
test
sub
pop
int
mov
inc
div
sub
jb
adc
jge
push
push
inc
dec
mov
sbb
movsl
sub
mov
in
cwtl
cwtl
jb
fs
movsl
shl
adc
xor
sbb
mov
pushf
movsl
jno
mov
adc
jae
shlb
ja
dec
cltd
and
dec
les
adc
imul
sub
dec
sahf
aam
xchg
daa
cmp
jmp
mov
gs
out
or
fidivs
pusha
js
nop
xchg
es
mov
and
push
mov
mov
mov
mov
cld
outsl
jle
xchg
arpl
inc
int3
mov
fldt
sbb
outsb
rcrl
dec
pop
cs
loopne
enter
cmp
out
mov
sbb
xchg
mov
insl
les
sarb
xrstor
stos
lds
ffree
xor
push
ret
data16
or
mov
movsl
popf
dec
cmpb
pop
arpl
pushf
cmp
add
rcl
sbb
xor
add
add
cmp
pop
add
pop
lret
pusha
rcrb
stc
cmc
cmp
test
push
mov
movsb
mov
sbbl
lea
or
icebp
xchg
mov
xchg
or
xor
movsl
and
aas
adc
sti
dec
jb
sub
add
or
cmp
jp
mov
cmp
sub
sti
xor
call
insb
cwtl
mov
dec
arpl
xchg
jg
in
fs
notl
out
xchg
loope
cld
mov
cmpb
cli
sbb
js
mov
or
mov
in
scas
push
mov
adc
dec
call
popa
pop
into
cmp
lahf
jae
les
in
jl
cld
stos
or
cmp
call
int3
fdivrs
dec
lahf
mov
xor
inc
cli
xchg
cmp
test
adc
call
push
mov
loope
int3
sub
mov
aad
nop
fidivl
add
lods
jg
mov
sti
adc
add
test
fsubr
int
jno
shr
loopne
sarb
cli
rcl
sbb
stos
insb
cld
mov
std
test
xchg
jo
loopne
fcoms
outsb
xchg
xor
sbb
sarb
es
jecxz
aam
fisttpll
nop
xor
push
jmp
add
loop
xor
adc
fimull
pushf
popa
in
push
cmp
mov
ja
cwtl
sbb
popf
mov
bound
cmpb
ds
ficomps
jge
push
jle
mov
or
xchg
out
pop
push
daa
mov
push
mov
cmp
mov
pushf
arpl
cld
pop
enter
das
sub
and
or
mov
aaa
js
add
sub
cmc
sub
es
stc
inc
or
pop
xchg
jnp
sub
sub
pop
mov
popa
push
fstpt
inc
aam
add
sti
fwait
mov
or
dec
sub
mov
or
mov
stos
in
jns
push
leave
loopne
pop
dec
mov
mov
sti
mov
xchg
inc
loopne
fisttps
cwtl
dec
adc
push
xlat
aaa
hlt
sbb
js
aam
push
xchg
loope
mov
pop
and
cltd
lret
in
fistpl
outsl
mov
out
or
jns
and
ss
ret
add
fsubp
in
cmp
lcall
xorl
mov
inc
rcr
andl
jle
mov
pop
jg
and
call
divb
or
shlb
mov
pusha
cmc
and
fwait
jns
sbb
sbbb
adc
mov
add
sub
xchg
scas
push
add
shll
inc
fs
je
outsl
mov
addr16
mov
xchg
jb
movsb
pop
sub
imul
daa
flds
sbb
jmp
mov
test
push
outsb
and
cltd
or
xchg
cmpw
loope
pop
lds
les
adc
mov
adc
iret
cmp
push
add
in
insl
mov
ret
aaa
sub
dec
movsl
out
dec
sub
and
inc
sbb
mov
cmp
inc
jnp
or
inc
movsb
and
repz
daa
push
out
imul
xchg
xchg
adc
cmp
dec
ja
ret
jle
gs
negl
adc
insb
sti
mov
pop
jg
mov
push
sbb
idivl
test
nop
jge
xor
or
xchg
jmp
push
testb
jle
ja
xchg
sbb
xchg
call
dec
push
mov
ret
dec
xor
movsb
jmp
push
std
dec
fldenv
sbb
adc
imul
popf
mov
and
dec
push
das
cmp
jno
mov
sbbl
pop
aad
pop
popa
ja
push
clc
cmpsb
xchg
mov
repz
in
pop
cmp
jmp
pop
mov
arpl
fbstp
xor
outsb
test
mov
mov
push
cmpsb
push
push
jg
push
sbb
outsl
lock
push
aad
arpl
xchg
jp,pn
jp
push
ret
mov
je
jae
sub
jl
fdivrl
xor
cmp
sub
icebp
mov
mov
in
and
sub
leave
mov
data16
mov
cmp
xchg
leave
push
mov
loop
add
mov
jge
ss
or
sbb
or
xor
cmp
sbb
scas
jle
movsl
sbb
jb
outsl
adc
ret
push
repz
sbb
int3
ret
popa
mov
test
cmc
out
in
and
mov
mov
dec
sbbl
test
pop
jmp
popf
int
into
sbb
sub
sub
insl
mov
movsb
mov
mov
jnp
adc
sub
or
inc
aaa
gs
mov
enter
xchg
and
int3
popa
sbb
insl
lock
rcr
fwait
xchg
or
stos
and
pushl
add
cmp
or
mov
fisttpl
loopne
push
pop
inc
pop
and
mov
fimuls
sbb
sbbl
std
imull
mov
or
fcomps
sarb
mov
push
or
ret
xor
into
mov
adc
scas
mov
addr16
pushf
inc
out
jne
aas
add
mov
and
test
pop
fmuls
jmp
das
sbb
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
and
int3
mov
mov
and
add
cld
mov
sbb
imul
arpl
mov
cltd
push
jle
test
jo
js
jns
bswap
lret
adc
insl
cmp
and
in
daa
daa
pop
outsl
arpl
in
mov
cltd
ja
push
sti
mov
sbb
outsb
out
adc
add
sbb
jnp
or
mov
xchg
jns
push
xor
mov
inc
call
xor
push
cmpsb
cs
cmc
loope
add
and
into
insb
jl
xorl
mov
cmp
dec
iret
xorl
mov
add
xchg
jb
push
nop
dec
std
arpl
hlt
jecxz
mov
jno
mov
push
ss
xchg
mov
movsb
xor
push
pop
loope
lcall
jg
inc
pop
mov
xlat
popa
arpl
inc
jo
pushf
jmp
pushf
pop
sub
adc
mov
mov
ret
jo
mov
push
xchg
mov
xchg
cli
xorb
lods
loope
pop
lds
fsubr
xor
pop
jl
in
int
loopne
cmc
xchg
mov
lret
mov
in
sub
sbb
ja
or
shlb
sarl
push
sarl
loopne
inc
jmp
mov
push
ss
sbb
in
sarl
or
ss
rep
and
stc
filds
pushf
adc
cmpsb
insl
jp
je
xchg
jp
jg
and
sub
arpl
push
repnz
and
divb
icebp
bound
cmp
std
inc
mov
and
std
in
fildl
movsb
xorb
mov
or
xor
fwait
ret
push
sub
stc
lock
cmpsl
xor
fcoms
mov
mov
dec
sbb
cmp
jl
mov
bound
outsb
sbb
int3
cmpsb
cltd
mov
xor
punpckldq
and
leave
dec
push
mov
fistps
cmp
sub
mov
sub
insl
xor
xchg
pop
jle
faddl
push
ds
clc
ja
cmp
xchg
inc
cmp
xchg
stos
fisubrs
cli
stos
sub
xor
loopne
mov
stos
fsts
adc
jg
jb
pop
sbb
and
in
xchg
inc
lods
sahf
adc
xor
rolb
arpl
std
jge
jg
jb
cmc
xchg
lret
jne
jge,pn
sbb
ss
int3
je
pop
stos
xor
and
push
sar
mov
xchg
sub
enter
xchg
subb
or
ds
push
stc
loopne
test
outsl
shll
lret
xor
mov
call
inc
insb
data16
lret
mov
call
pop
ret
xchg
aad
rcrb
dec
xor
dec
lods
imul
inc
inc
cmp
xchg
push
adc
stos
out
xchg
test
adc
imul
shr
sbb
aam
jge
mov
mov
pop
dec
xchg
or
sbb
inc
fidivs
cmpsb
in
cmpsl
mov
shlb
pop
xchg
cmpsl
sub
xchg
mov
dec
xchg
aam
mov
mov
push
jno
fldenv
aam
out
jg
mov
rcll
outsb
jnp
shlb
enter
es
mov
xor
mov
fisubrs
repz
popa
loopne
notl
les
clc
mov
icebp
inc
mov
daa
mov
pop
daa
adc
std
pop
xchg
cmp
cmp
imul
jae
xor
lds
mov
adc
dec
nop
out
jl
pop
adc
lahf
int
fstpt
or
xor
xchg
pop
inc
lahf
test
and
or
arpl
pop
scas
adc
mov
mov
adcl
fistpl
adc
int3
cmc
and
jg
movsb
pop
dec
in
dec
ret
in
fwait
mov
dec
and
jns
xchg
pop
or
mov
or
hlt
lock
mov
int3
xchg
jp
icebp
cmpsl
or
lock
movsb
inc
add
pop
mov
movb
in
stc
popa
lock
lret
frstor
cltd
lret
pushf
sub
inc
insb
add
cmp
ret
enter
pop
pushf
xchg
negb
cmp
in
aas
outsb
inc
stos
jle
fisubrl
dec
mov
fwait
nop
inc
js
push
mov
add
fidivs
pop
bound
into
mov
and
cmp
push
mov
scas
daa
cwtl
addr16
push
and
loopne
and
aam
test
rcrb
stos
bound
cmp
cmc
mov
mul
cltd
add
loope
mov
cltd
nop
adc
pop
mov
lahf
addr16
mov
xchg
xchg
sub
mov
dec
mov
push
and
clc
sbb
push
in
lods
push
mov
rcr
sbb
cmp
mov
and
icebp
loope
push
xor
icebp
push
stos
push
jmp
shr
pop
xor
into
add
mov
push
jmp
mov
xchg
idivb
mov
aad
inc
adc
pop
pop
or
push
mov
and
and
addr16
out
ja
sbb
mulb
mov
dec
lea
clc
mov
mov
xchg
xor
lea
das
jne
fnstenv
xchg
push
cltd
fwait
pusha
sbb
xor
inc
jl
lret
outsl
xor
xor
aas
pop
imul
jmp
js
in
je
inc
xchg
sahf
sub
cmp
test
sbb
and
cmp
loop
and
jmp
jb
outsl
subl
js
lret
movsb
scas
into
cmp
add
lcall
sbb
lods
inc
pop
sar
sub
or
pop
mov
adc
mov
leave
fsubs
fsts
incb
leave
insl
jmp
pop
js
test
push
cmp
add
popa
mov
cmpsb
inc
push
outsb
mov
stos
sub
adc
outsb
cmpsb
cmp
jo
int3
cmp
and
adc
out
cmp
lock
jne
jae
pusha
push
sbb
xor
sbb
nop
orb
pop
cld
mov
xor
dec
out
cli
inc
dec
bound
movsl
lock
jb
enter
jg
arpl
punpckhwd
dec
mov
mov
mov
aam
inc
mov
pop
test
into
xor
inc
fwait
xor
movsl
or
xor
out
pop
leave
rclb
and
test
mov
jmp
inc
sbb
loope
xchg
je
aam
jbe
mov
fsubrs
ret
cmp
adc
outsl
sbb
pop
aaa
and
subb
mov
and
movsl
xchg
and
xchg
fbld
incb
jg
xchg
fmul
cmp
mov
mov
jne
mov
in
or
add
int3
sub
jl
pop
lock
fs
ret
adc
inc
push
int
cmp
mulb
lock
sar
lds
in
ljmp
aam
sbb
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
push
dec
imul
cmc
sbb
insl
jb
aas
xor
and
cld
jbe
cmc
mov
or
test
jg
cmpsb
adc
add
jae
adc
nop
fcomps
add
mov
push
jbe
lahf
stos
sub
out
scas
shlb
out
mov
jg
out
int
adc
mov
cmp
and
hlt
pusha
call
pop
insl
popf
clc
mov
pop
pop
enter
addr16
ficoml
cmp
and
into
mov
jp
dec
test
rorl
out
push
pop
sub
ja
into
movsl
mov
push
jl
jae
out
pop
test
pop
sbb
sbb
mov
mov
les
jg
jmp
sub
jb
mov
fstl
rcrb
clc
out
jne
sub
sahf
popa
cmp
aad
rolb
jne
test
xor
mov
jb
jmp
icebp
pop
mov
push
cli
sub
scas
shl
mov
aam
jmp
xor
outsb
mov
jno
push
xchg
lahf
lock
or
and
mov
push
arpl
repz
out
xchg
mov
fisttpl
mov
jmp
leave
jecxz
popf
jecxz
mov
mov
sub
and
push
test
sub
in
mov
clc
inc
mov
test
adc
fsubp
sub
gs
jmp
out
or
dec
cmc
mov
iret
mov
sbb
mov
push
fadds
fmull
cmp
jmp
xor
dec
or
es
iret
mov
in
lock
lods
xchg
movsl
sti
push
sub
loope
cmc
shll
pop
jno
jecxz
or
sbbb
cmc
loopne
and
xchg
imul
leave
lret
popf
push
fiaddl
jmp
adc
jle
outsb
cwtl
enter
and
and
repnz
hlt
fs
cwtl
cmpsl
sub
cwtl
pop
stos
out
mov
cmp
xchg
lock
inc
int
inc
jne
bsf
loopne
jg
sbb
xchg
cwtl
movsb
mov
loop
js
fists
scas
loop
jne
cmp
test
add
loopne
lock
std
cli
test
and
and
inc
sarl
mov
jle
ljmp
cmp
dec
push
loopne
sbb
imull
test
cmpsb
pop
lds
lcall
push
jmp
and
stos
jae
daa
mov
xchg
inc
sub
test
lock
inc
or
icebp
mov
test
cmpsb
or
hlt
scas
cmp
mov
scas
dec
xchg
mov
ret
sub
out
ja
notb
ljmp
shll
push
repnz
and
xor
in
sbb
int
loop
jmp
xorb
xchg
xor
notb
jle
sbb
aad
movsb
jp
xchg
inc
mov
cmpsb
dec
xchg
dec
movsb
mov
jmp
push
enter
jle
lock
push
imul
xor
xchg
sbbb
adc
into
adc
add
mov
mov
aaa
out
mov
sbb
pop
pop
movsl
outsb
sbb
and
xor
and
mov
mov
cmp
cmc
fld
mov
lock
mov
xor
in
repnz
outsl
and
lcall
fdivs
cmpb
inc
adc
aam
ficompl
or
out
lock
shlb
or
or
notb
mulb
mov
rorl
cmpsb
fidivs
dec
loope
mov
dec
js
mov
nop
jb
aas
sbb
lock
sbb
xchg
out
xchg
cli
dec
lret
mov
ror
sbb
loopne
aad
cmp
repnz
mov
inc
loope
add
add
sbbl
lret
xor
scas
mov
mov
mov
xchg
sbb
push
pop
inc
pop
stc
stos
mov
loopne
stos
sub
addr16
loopne
aad
fnsave
sub
ret
push
cmp
adc
icebp
cmpsl
adc
pop
cmp
mov
push
xchg
clc
enter
adc
scas
push
pop
mov
inc
aaa
hlt
xchg
cmp
mov
adc
mov
cmc
call
pop
mov
mov
lock
mov
negb
jg
jp
pop
stos
cmc
xor
test
or
sub
jecxz
fnstsw
xchg
mov
jns
add
add
inc
in
shlb
lahf
and
inc
mov
sbb
cmp
adc
push
aam
mov
aam
cld
jne
dec
js
in
inc
adc
jo
push
cmp
fwait
imul
pop
mov
pop
or
std
out
push
inc
sub
stos
mov
fdivs
andl
test
mov
cmp
shlb
ficoms
rcrl
es
push
xchg
loopne
sub
push
adc
scas
les
mov
enter
mov
mov
fnsetpm(287
sub
inc
xchg
sbb
xor
mov
dec
arpl
cmp
jno
mov
mov
out
sub
adc
fstl
fbstp
imul
daa
into
lcall
cvtpi2ps
or
xchg
cmp
xchg
pusha
push
xor
arpl
xor
sbb
pop
inc
adc
subl
rolb
and
dec
out
sub
mov
mov
leave
xchg
jo
movsl
inc
rcrl
inc
pop
jg
xchg
iret
push
push
rcl
clc
mov
add
pop
insl
mov
push
add
dec
push
aad
add
sbb
inc
fidivrl
push
mov
inc
mov
or
and
out
pushf
shll
gs
cmp
xchg
push
lock
ret
mov
loop
and
adc
and
mov
stos
test
inc
scas
aam
pop
mov
dec
add
pusha
imul
popf
sub
pop
lret
repnz
aad
xor
hlt
mov
sub
jmp
lods
in
aad
add
pop
mov
sub
addl
pop
test
push
xlat
mov
sarl
cmpsb
in
mov
fwait
icebp
mov
mov
mov
pop
mov
cltd
mov
add
inc
ds
hlt
addl
pop
pop
adc
pusha
cli
arpl
jl
arpl
sub
lea
and
int
mov
mov
xchg
out
jl
out
jo
mov
js
pop
and
add
ficoml
rcl
imul
call
or
sub
into
adc
outsl
sarb
sub
loope
mov
mov
jecxz
xchg
xchg
sbb
or
ret
jl
adc
out
cltd
lcall
test
test
outsb
fld
imulb
cmc
dec
and
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
rorl
les
outsl
add
aas
push
mov
pusha
jecxz
lea
inc
in
push
mov
cmp
fistps
inc
int
inc
loope
mov
push
cmp
mov
ds
mov
imul
fwait
data16
dec
out
out
pushf
inc
iret
aad
mov
test
jge
aam
mov
mov
fcoms
cmp
mov
fildll
pop
aaa
pop
mov
mov
adc
fwait
dec
hlt
lret
insl
pop
jg
scas
or
outsl
mov
pop
rcrl
xor
xor
mov
cmp
negb
int
mov
cmp
mov
adc
lock
adc
cltd
lds
jecxz
repz
outsb
xchg
cltd
push
mov
inc
test
mov
mov
dec
aas
lds
sbb
sub
lods
sbb
push
data16
lcall
mov
popa
jle
mov
addb
into
scas
mov
rcr
aam
cmp
or
enter
jmp
push
mov
mov
jnp
dec
xor
push
arpl
test
push
pop
in
push
dec
ror
pop
add
mov
xchg
xor
cmp
mov
int3
mov
movl
fiadds
mov
idivl
into
lcall
das
mov
aam
fwait
sbb
mov
lea
sbb
cwtl
test
or
mov
call
mov
jg
les
out
adc
hlt
aaa
bound
gs
mov
lret
rcrl
adc
sbb
fidivrs
xchg
mov
sahf
roll
lock
imul
rcrb
jbe
pop
jl
insb
push
add
idivl
std
mov
mov
sub
pop
out
nop
mov
popf
xor
mov
xor
xor
xchg
aad
ret
dec
xchg
sub
xor
push
lcall
jne
xor
xchg
in
jb
dec
ds
sahf
fisttps
fsubs
sbb
out
dec
clc
sbb
jl
lods
adc
adc
push
xchg
es
xor
addr16
xor
adc
aam
cwtl
out
movsb
sbb
cmp
mov
ss
dec
negl
adc
xchg
ret
jp
jae
mov
in
xor
sbb
lret
das
je
popf
inc
xor
push
jl
sbb
scas
mov
loope
xchg
mov
fsubl
push
mov
mov
or
bound
out
jb
pop
je
push
lods
dec
jmp
pop
outsb
jne
inc
lock
pushf
cmp
push
fdiv
mov
cli
adc
sub
mov
dec
lods
fmull
imul
roll
sbb
loope
scas
scas
rclb
adc
pop
xor
and
rolb
jl
pop
or
and
pop
es
outsb
xor
and
adcl
push
mov
jae
pusha
xchg
pop
idivb
inc
shlb
sbb
add
mov
outsl
xchg
pop
jno
mov
aam
test
mov
aas
push
mov
mov
xor
sub
sub
fcom
mov
icebp
mov
scas
xchg
in
jp
stos
pop
add
ret
loope
test
sbb
ret
jl
outsl
sub
mov
fwait
push
mov
adc
push
test
add
xlat
addr16
icebp
les
xor
pop
xchg
bound
cwtl
movsl
ret
and
lods
push
mov
dec
jns
mov
mov
add
ret
out
testl
add
repnz
inc
xchg
pop
sub
mov
mov
pushl
das
in
push
jmp
mov
mov
inc
add
and
sub
mov
jmp
and
in
mov
lds
push
cmp
test
jle
mov
sbb
add
bound
mov
repnz
ficompl
mov
mov
adc
sbbl
push
lock
push
fcomi
imul
insb
xchg
cmp
push
negl
jecxz
cmp
mov
addb
in
push
mov
add
js
mov
xchg
xchg
arpl
mov
outsl
jb
nop
mul
and
mov
mov
mov
popf
xor
fsts
sar
xor
sbb
adc
cmp
sub
pop
repz
add
insl
in
jo
iret
or
cmc
push
rcrl
mov
mov
mov
arpl
aaa
mov
add
lret
xchg
scas
mov
in
rcll
fisubrl
xlat
xchg
out
out
arpl
clc
lcall
push
dec
cmp
sbb
stos
call
dec
or
insb
popa
mov
pop
ficompl
add
and
lret
mov
and
sub
subb
loop
mov
jge
add
cmp
mov
fnsave
push
lds
out
adc
sub
aad
loop
push
cld
shlb
push
jbe
add
loop
sti
dec
mov
addl
shll
test
push
adc
push
in
in
sbb
jne
add
adc
scas
pushf
jne
mov
mov
aaa
cld
roll
loope
sbb
rol
test
icebp
mov
lock
addr16
adc
or
mov
addr16
inc
xchg
sbb
rorb
dec
loopne
pushf
arpl
jb
sbb
xor
dec
das
aad
mov
andb
sub
pushf
xchg
lret
roll
sub
jb
sub
pushf
xorb
and
dec
js
push
dec
repnz
cmp
mov
mov
test
mov
xchg
pop
xchg
in
cld
lret
xor
in
shl
test
push
inc
pop
push
sti
shlb
sahf
arpl
pushf
rcll
lahf
xchg
lods
jle
push
mov
xor
dec
cmpsl
sbb
imull
nop
xchg
or
mov
mov
xchg
test
jb
sbb
je
aaa
sub
sbb
fwait
rcrb
fs
or
xlat
xchg
sti
sub
cmp
clc
mov
xchg
mov
pop
loopne
or
pop
js
imul
jl
jne
cmp
lcall
jge
test
pusha
pop
orb
fmuls
push
mov
in
mov
add
data16
xorl
xor
test
inc
mov
push
movsb
test
sub
inc
cmp
mov
adc
pop
stc
out
and
sub
out
ret
out
std
cwtl
inc
stc
outsl
addr16
and
dec
dec
sarb
jo
loope
sub
xor
jl
mov
mov
ja
lea
test
out
mov
dec
cmpl
popf
xor
out
mov
ja
add
add
and
and
popa
ret
inc
dec
dec
xlat
pop
jecxz
test
jle
add
mov
push
aaa
and
in
repz
movsl
scas
ret
aad
outsb
fsubs
pop
xchg
leave
mov
divb
fwait
cmp
rol
cmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
int3
cmp
sbb
es
sahf
sub
std
out
fwait
jnp
fimuls
lret
jmp
fcmovne
aas
andb
sbb
push
push
aam
push
std
std
mov
lea
ficomps
pop
add
cltd
mov
jne
fwait
sub
mov
les
lret
xor
aaa
or
cs
mov
rolb
dec
mov
es
add
push
outsl
mov
fwait
jle
push
pop
or
xchg
call
xor
mov
rep
jecxz
es
jl
mov
pop
inc
out
cmp
cmp
ss
scas
jp
jns
scas
xor
mov
mov
nop
in
push
pop
cld
adc
pop
jmp
mov
int3
sub
mov
enter
je
xlat
inc
stos
movhlps
and
mov
jecxz
mov
daa
ljmp
in
insb
loopne
mov
xchg
test
xchg
lret
cld
adc
stos
repz
pop
js
push
clc
cmp
xchg
das
xor
shrb
cs
cwtl
jb
and
mov
or
cltd
push
jb
sbb
mov
mov
ret
rorl
rcll
sbb
and
mov
and
cwtl
in
jl
xchg
movl
test
xor
jns
xchg
xchg
jae
cmp
lods
mov
ret
cmp
out
clc
outsl
pop
inc
scas
jmp
test
jnp
imul
sbb
rol
cmpsl
mov
lods
or
jne
sub
sub
loop
divb
gs
mov
pop
adc
in
cmp
cltd
pushf
popf
mov
adc
lea
sahf
and
jo
lahf
dec
push
mov
sub
out
pushf
fmuls
mov
sahf
dec
movsl
add
jmp
lret
mov
or
popa
lds
sub
lds
push
aam
ja
lret
insb
and
std
push
das
subb
sbb
out
pop
push
add
aam
lock
adc
idivb
lods
dec
out
and
jl
aam
jl
mov
loop
mov
jge
and
sahf
mov
push
mov
int3
adc
mov
push
jb
jp
dec
xorb
in
daa
fstps
adc
insl
cwtl
imul
fnstcw
dec
cli
jl
notl
mov
dec
popa
movsb
ja
imul
adc
pop
notb
aam
jnp
cvtpi2ps
es
rorl
aad
scas
xchg
mov
adc
lea
dec
cli
aaa
xchg
lret
bound
js
inc
bound
mov
pop
or
and
push
fsubp
in
cwtl
rcr
subb
cmpsb
adc
adc
mov
repz
mov
fstl
std
aam
add
mov
scas
fisttpl
out
jnp
rol
mov
test
test
and
xor
jp
adc
cli
mov
push
push
jecxz
hlt
movb
imul
daa
or
jne
xorb
jae
int
dec
sub
jmp
aaa
not
fs
cmp
inc
outsl
jae
sbb
push
cli
add
mov
clc
inc
xchg
pop
arpl
into
push
add
mov
and
adc
xor
sbb
repnz
aad
adcl
inc
xlat
xor
push
clc
fwait
cs
subb
lahf
test
cwtl
jp
test
mov
adc
mov
sbb
jg
jp
rcr
test
cmp
xlat
popf
or
iret
lahf
jmp
in
adc
push
lods
imul
mov
mov
or
cwtl
and
sbb
outsl
jns
or
mov
add
push
repnz
xchg
fisubrl
in
cmpsb
jno
xor
and
cli
loopne
adc
adcl
sbb
add
adc
cmp
mov
pop
xchg
add
into
addr16
mov
sbb
inc
loopne
std
lea
adc
rep
call
mov
xor
mov
xor
xchg
inc
push
xor
nop
or
xchg
push
outsb
sub
mov
and
and
fdivr
mov
pop
or
cs
and
jl
test
push
clc
mov
jle
das
push
ja
jl
dec
push
add
arpl
and
mov
inc
aam
dec
xchg
je
popa
mov
mov
mov
xchg
cmp
mov
lods
clc
test
jg
lods
cmp
loopne
add
xor
xor
and
or
popf
jmp
adc
ljmp
jl
xchg
cmp
inc
ss
andb
call
js
in
inc
xchg
add
ljmp
sbb
jo
cld
cltd
nop
pop
cs
or
push
js
stos
dec
nop
and
fstpt
fs
adc
mov
pop
hlt
ficomps
test
or
mov
jl
popa
jae
mov
inc
out
aas
xor
sahf
xchg
jecxz
mov
mov
lods
out
ss
scas
pop
addb
push
sub
inc
push
and
mov
dec
sub
sar
mov
push
mov
mov
and
lahf
jp
mov
xor
dec
lahf
cmp
out
lret
rdtsc
dec
arpl
loop
inc
mov
jg
popa
mov
aaa
xchg
or
fdivrs
movsl
fwait
sub
test
xor
adc
mov
mov
pop
loopne
jns
lea
hlt
sti
add
mov
imul
mov
fdivr
jl
inc
call
pop
and
sbb
and
xchg
cmp
push
je
mov
cld
negl
add
push
cli
push
lock
mov
movsb
mov
add
mov
out
test
sub
repnz
xchg
jns
pop
sbb
outsl
cmp
pop
popa
test
mov
popf
adcb
ja
or
sbb
inc
adc
ret
mov
xor
mov
push
movsl
aas
hlt
mov
les
out
mov
push
fsubrp
aas
mov
insl
loop
and
ss
xchg
rcrb
cs
repz
nop
icebp
movsb
mov
movsb
push
out
lret
mov
mov
and
sub
xor
xchg
inc
repz
mov
outsl
xchg
pop
cmpsl
popa
loope
nop
cmp
test
loopne
clc
cmp
imul
xchg
push
mov
add
mov
fstl
xlat
imul
gs
arpl
xor
lret
notl
scas
call
dec
fucomp
inc
cwtl
dec
xlat
cltd
repnz
mov
xor
pop
in
mov
mov
jb
and
aas
xchg
and
repnz
jge
sar
rcll
pusha
mov
cmp
sbb
aad
pushf
in
add
mov
jmp
pusha
dec
aad
sub
mov
cmp
imul
les
fsub
inc
sbb
fmuls
xchg
dec
adc
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
ds
sbb
dec
scas
icebp
aad
in
fwait
cmpsl
push
mov
jne
jl
lock
mov
shrl
out
test
fdivr
sub
xor
xlat
rcl
mov
aaa
xchg
sbbb
cmp
pop
add
das
loope
scas
out
pop
inc
loope
lcall
dec
fwait
lahf
data16
int3
out
les
dec
pop
sbb
les
in
mov
outsl
stos
or
cmp
xlat
cmc
jle
lcall
mov
cmp
orb
xchg
adc
sub
stc
and
stc
add
test
inc
cmp
mov
pop
stos
mov
cmc
in
into
lret
popa
mov
sbb
aaa
dec
jle
mov
lahf
aas
sti
xchg
push
test
sbb
jl
adc
insl
sub
inc
xor
sbb
mov
mov
out
clc
and
pop
sub
cmp
jns
loopne
mov
jo
add
xchg
jns
aam
xor
xchg
rolb
out
dec
cmp
negb
iret
sbb
imul
jb
mov
pop
push
les
cmpsb
inc
add
fiaddl
test
aad
cmp
xor
mov
shll
aam
inc
divl
sub
xchg
push
or
mov
not
xor
mov
movsl
pop
jecxz
jo
pop
add
push
xor
push
push
dec
ret
aad
cmc
jne
sarl
inc
cwtl
sbb
fnstcw
pop
popf
or
sub
movsl
cmp
sub
rcl
add
mov
push
fs
lods
sbb
popa
and
hlt
scas
cmp
enter
dec
test
sarl
xlat
fsubs
xchg
outsb
test
loope
not
adc
pop
sub
pop
sub
cmpsl
xchg
les
cmp
jecxz
and
inc
mov
mov
ror
mov
ja
jo
lcall
mov
test
cmpsl
rclb
hlt
inc
lock
mov
insb
or
outsb
mov
scas
fnclex
cmp
hlt
imul
out
push
pop
dec
hlt
repnz
subb
test
or
movl
mov
movsb
inc
pushf
push
mov
mov
push
xchg
dec
cwtl
xor
cmp
addr16
mov
testl
cmp
inc
outsb
add
xchg
pop
sub
jecxz
cs
or
mov
mov
sub
imul
repnz
outsb
movsb
int3
push
icebp
sub
pop
rclb
js
push
or
and
loop
pusha
pop
jl
adc
cmp
mov
mov
sbb
orl
out
cmp
push
pop
je
dec
shrb
pop
add
ret
stos
adc
cwtl
cmp
pop
inc
mov
mov
mov
lea
jo
nop
pop
scas
clc
cmp
cwtl
call
lods
lcall
icebp
pop
or
adc
std
push
add
in
xchg
push
js
repnz
mov
cwtl
jb
jp
cwtl
movsl
aam
lahf
pushf
pop
pop
addb
dec
cmp
cmp
test
dec
filds
shl
xchg
loopne
in
cmp
inc
insb
ljmp
jo
adc
enter
ja
jmp
je
xor
cwtl
std
call
pop
cmc
inc
cmc
test
lahf
int
rclb
or
jae
sbb
scas
xchg
je
rcrb
ja
adc
imul
lds
mov
ss
jb
sahf
xorps
and
sbb
sbb
aaa
sub
push
or
test
outsl
mov
dec
push
nop
mov
or
jmp
sbb
pop
cmp
adc
in
clc
repz
sti
sbb
jge
dec
cmp
push
mov
mov
push
cmp
fwait
es
mov
sbb
push
addr16
sbb
push
cmp
mov
cmpsl
inc
fsubs
fadds
movsl
jmp
jle
xorl
dec
pop
xchg
jle
lock
xchg
fwait
sub
jmp
aad
cmp
and
addr16
inc
hlt
div
add
enter
jo
push
ljmp
jo
inc
inc
in
jle
pop
sbb
mov
cmp
add
pop
lock
rorl
mov
stos
daa
add
mov
ss
mov
mov
sub
aam
pushf
dec
loope
roll
sbb
jnp
jmp
clc
orl
add
ret
jo
inc
mov
xchg
leave
add
ljmp
aaa
ret
imul
mov
fisubrl
lock
or
push
clc
int
mov
pop
mov
fcomi
xor
out
sbb
mov
adc
fidivrs
in
mov
add
push
stc
arpl
pop
pop
xor
jo
or
sarl
jae
mov
mov
xchg
inc
cwtl
push
ja
push
aaa
mov
mov
sbb
pop
push
inc
inc
jbe
mov
clc
xchg
test
addr16
jecxz
xor
adc
das
sub
shrb
fxch
aam
ss
sbb
enter
jg
sti
and
ret
xor
icebp
test
arpl
jb
mov
ret
adc
movsl
sahf
xchg
repnz
pop
jne
in
inc
inc
nop
in
aaa
test
jo
cmpsl
cmc
idivl
fmul
out
je
decb
sbb
mov
dec
xchg
jbe
daa
adc
fcmove
push
fcmovb
and
and
cld
scas
push
jecxz
bnd
fwait
mov
iret
ljmp
push
scas
mov
lds
dec
gs
sbb
push
gs
push
test
jnp
addr16
cmp
add
sbb
push
popl
pusha
cmp
push
jge
xchg
push
push
shlb
call
pop
jg
iret
insb
cld
cmp
xchg
aas
std
test
arpl
adc
pusha
lret
fcomi
shrb
repnz
xchg
cmc
pop
cli
faddl
xchg
pop
inc
xchg
adc
mov
pop
stos
xor
jge
sbb
stc
lret
mov
add
shl
add
mov
and
mov
sub
adc
jno
cld
mov
cmp
push
lcall
bound
test
scas
insb
call
subb
rolb
loop
xchg
pusha
lea
cmp
adcb
and
jnp
aas
outsl
pop
jp
jmp
clc
xchg
out
sub
cltd
push
mov
mov
fwait
push
hlt
mov
insb
xor
mov
fcoms
xchg
adc
or
mov
popf
lret
lds
das
pop
xor
call
or
pop
aaa
cmp
xor
sub
fsubrs
mov
data16
scas
fdivrl
and
loope
and
adc
jg
xchg
idivb
daa
add
dec
adc
jmp
movsb
pushf
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
test
push
jb
out
xlat
sbb
fsts
push
aam
mov
sub
jmp
nop
or
mov
or
inc
xchg
jle
xor
int3
push
mov
aad
pop
mov
dec
andl
and
mov
mov
push
push
dec
xlat
xchg
mov
mov
jns
mov
leave
jge
loope
cmc
mov
bound
jp
adc
mov
ds
push
jnp
lcall
mov
xchg
jl
push
jecxz
aaa
shrb
pushf
cmpsl
mov
cs
jne
or
stos
cmp
xor
cmpsb
sbb
jnp
bound
pop
and
push
mov
arpl
lods
call
les
loop
pxor
enter
jecxz
or
lahf
gs
fcomip
jae
push
adc
loopne
mov
in
data16
iret
xchg
pop
aaa
icebp
scas
xor
and
cmp
test
pop
addb
addr16
adc
and
movsl
push
pop
stc
jo
or
das
push
pop
test
jo
cmpl
fs
fsubr
or
cmp
popf
outsb
dec
add
mov
jecxz
fwait
xchg
pop
push
repz
cld
lods
jge
insl
fcmovbe
das
xchg
out
mov
xor
jbe
jp
outsb
setb
sbb
mov
jl
inc
fmuls
arpl
fs
in
inc
test
cld
imull
addr16
xor
int3
mov
fwait
add
sub
aam
cli
mov
push
mov
movsb
loopne
pop
pop
call
mov
jb
and
xchg
shlb
add
lea
shrb
fwait
daa
les
mov
pusha
inc
pushf
jne
mov
adc
loope
sbb
imul
rorl
cmp
test
sarl
sub
sti
xchg
test
sbb
ret
mov
out
std
mov
lods
lret
sub
mov
out
inc
jl
cld
nop
xor
jnp
in
les
xchg
lcall
sarl
loopne
loop
test
push
fsubl
mov
sub
jmp
insb
enter
int
rcrl
jne
dec
xor
xor
lock
cld
xchg
mov
jo
sbb
and
ficoml
and
ret
inc
inc
test
dec
loopne
mov
push
repz
sbb
je
rcll
or
sbb
mov
sarb
sub
jnp
test
mov
mov
dec
lock
ss
cmp
fs
xchg
mov
cmp
xor
jne
jmp
jno
adc
push
cmp
inc
repz
lods
cmp
dec
jbe
mov
arpl
sahf
fmuls
icebp
lret
cmp
add
xchg
cmp
and
jbe
icebp
mov
xchg
shrb
outsl
pop
mov
add
out
mov
loope
inc
pushf
cmpsb
add
pop
push
out
mov
mov
sahf
aam
and
jg
cmp
mov
call
or
cmp
imul
ret
xchg
lahf
cs
mov
or
mulb
mov
test
out
bnd
icebp
xor
mov
push
stos
je
fistpl
xlat
cmp
cmp
xchg
les
push
gs
ret
leave
mov
push
cmp
jae
jge
adc
mov
adcl
inc
divb
out
test
mov
jmp
and
insb
data16
je
sbb
fucomip
sarl
enter
les
push
xchg
into
mov
sbb
jl
in
dec
jle
call
clc
rcll
mov
stc
sarl
sub
inc
jns
xchg
mov
cmp
sbb
lock
ja
dec
loope
inc
loope
arpl
xor
cmp
sub
fcomps
dec
cmp
ficompl
loop
mov
ret
je
dec
mov
outsb
push
mov
test
mov
insl
jg
out
mov
gs
fisttpll
popa
adc
mov
jns
ja
js
push
movsl
mov
fnstcw
data16
pop
xor
sbb
pop
dec
add
and
loope
mov
mov
mov
sbb
dec
inc
imul
ds
push
mov
xor
aas
shl
cli
testb
divb
cmp
dec
dec
mov
test
pop
test
sbb
push
add
xchg
sub
cli
pop
fldenv
fldt
or
adc
hlt
scas
in
cmp
cmp
mov
push
xlat
pushf
popa
clc
and
mov
repz
jns
mov
sub
cmp
pusha
imul
inc
and
nop
dec
push
nop
adcl
test
enter
repz
movsl
hlt
call
and
sub
mov
sbb
sbb
pusha
pop
adc
and
data16
js
aaa
or
repnz
xor
stos
popa
jl
cld
stos
mov
out
jo
call
cmpsl
clc
aam
aad
xchg
mov
fsubs
mov
in
or
filds
les
out
js
jge
mov
jbe
jnp
push
loop
aad
popa
jp
sub
hlt
sub
jns
push
jo
cwtl
jbe
movsb
test
xchg
inc
cmp
int
stos
push
ret
jg
mov
sarl
sub
adc
cmc
adc
cmpsl
xor
test
divb
cltd
repz
lcall
js
shrb
jno
sub
mov
sub
adc
hlt
test
cli
xchg
lods
loop
cmp
mov
pushf
xchg
cltd
or
repnz
xchg
dec
adc
imul
push
jl
fs
xor
adc
arpl
push
int3
add
popaw
mov
adc
movsb
xchg
stc
add
push
xor
xchg
out
jbe
inc
adc
scas
in
push
push
adc
lods
xchg
add
inc
sub
pop
std
stos
or
xor
aam
shll
xor
das
and
std
fdivrl
jnp
xor
jecxz
fwait
cmp
mov
mov
out
mov
aad
xchg
cltd
xchg
js
dec
hlt
xor
and
mov
shlb
movsl
in
pop
andl
test
push
pop
aad
ficompl
je
jg
je
push
add
mov
bound
pop
nop
xor
divb
and
fadd
push
pushf
xchg
ja
lds
popl
sbb
in
mov
loope
inc
jecxz
repz
cld
loop
adc
sbb
sbb
add
push
sub
mov
nop
fidivrs
mov
mov
lock
mov
fbstp
sub
aas
out
cmp
or
jb
rcrb
ja
sbb
sub
fcmove
inc
movsb
aad
aas
lock
jmp
fcoml
dec
add
pop
add
cmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
xor
out
add
cld
sbb
and
push
mov
jmp
add
jle
shlb
shrl
stc
out
iret
or
ret
mov
shlb
xor
test
mov
sub
loopne
push
add
cmp
push
fidivl
fsubl
mov
dec
out
xor
pushf
xchg
aam
adc
add
mov
sub
jle
dec
jbe
pop
dec
lods
adc
adcl
xor
xchg
imul
mov
subb
and
lcall
jne
sbb
xchg
xor
ljmp
fs
scas
stos
cmp
jmp
lods
mov
cltd
insl
jb
into
shl
js
sbb
and
cmp
inc
lcall
notl
les
bound
jg
out
je
jo
jne
sahf
xchg
xor
or
sbb
jne
lods
mov
fwait
mov
sbb
int3
dec
sbb
inc
call
pop
mov
sahf
popa
pop
insb
mov
in
dec
scas
movl
stos
push
xor
aad
pop
aad
lods
xor
jecxz
jecxz
fs
testb
lods
xor
insb
xchg
sub
subb
push
sbb
lock
xor
xorb
and
mov
loop
mov
and
jbe,pt
cs
mov
dec
adc
mov
call
push
pop
dec
pop
pushf
gs
aad
call
jo
stos
push
cld
nop
iret
xchg
mov
pop
les
adc
aas
divl
or
jmp
sub
pop
leave
aad
pop
mov
imul
push
rorb
icebp
mov
in
outsl
popa
std
sbb
out
outsb
out
ret
push
xchg
repz
pop
rcrb
adc
jno
mov
stc
or
daa
jb
test
ret
and
or
movsb
rorl
insb
add
mov
push
sub
fdivrl
xchg
scas
xor
mov
loopne
push
push
hlt
sub
andb
cmpsb
xor
or
in
pop
testl
xlat
cmpsb
lods
jecxz
inc
mov
ret
lods
dec
xlat
xchg
shrl
mov
jg
popa
add
adc
push
cli
xor
mov
dec
inc
mul
mov
rcl
lea
movsl
pushf
pop
mov
ficoml
adc
dec
and
jnp
js
mov
insl
out
jp
push
out
xor
icebp
lcall
lods
mov
sahf
fs
aas
out
jl
mov
ja
pop
movsb
or
std
add
mov
mov
or
xor
jle
ds
mov
fstpl
setge
adc
mov
imul
sti
dec
loopne
and
icebp
fcoml
and
rclw
and
repz
or
inc
jp
adc
or
jnp
pop
fld
dec
xor
pop
sub
sub
add
cwtl
repz
push
sub
vucomiss
mov
or
dec
or
sub
jnp
xchg
inc
inc
sarl
sbb
imul
sbb
rorl
add
arpl
bnd
mov
out
cmc
or
les
adc
or
stos
mov
sahf
jnp
aad
mov
aas
pop
ja
test
lahf
lret
or
jle
sub
outsb
mov
sar
and
add
and
xor
adc
xlat
and
orb
mov
ljmp
mov
sub
mov
out
jecxz
lret
loopne
aam
decb
fadd
pop
cmp
jbe
shrb
xlat
lods
loopne
into
das
jbe
test
imul
jne
cmc
mov
aad
or
xor
push
mov
lea
jnp
insb
push
pusha
movsl
roll
jp
mov
pop
movupd
cli
ret
out
clc
xchg
test
xchg
and
xor
fsubl
add
xor
mov
imul
fists
adc
jno
cmc
test
and
xchg
jb
outsb
mov
pop
addl
add
ret
add
adc
add
or
icebp
push
fcmovnbe
adc
clc
mov
daa
and
mov
lahf
mov
mov
aaa
xor
and
fsts
cmp
outsb
hlt
lds
je
lock
push
aam
sbb
jge
sbb
push
ret
or
push
loope
push
je
mov
dec
loopne
pusha
test
call
xor
push
outsb
mov
sarl
mov
jmp
mov
xor
jle
movsb
mov
adc
shll
out
xor
inc
mov
pushw
xor
cmp
js
test
test
clc
push
push
jg
addr16
daa
iret
mov
call
cmp
gs
add
in
test
repz
lock
or
sbb
insl
mov
or
sub
lret
add
stos
pushf
mov
repnz
sbb
xor
mov
mov
out
stc
clc
jmp
jg
add
jnp
lahf
ret
data16
and
loopne
push
gs
push
mov
nop
pusha
clc
sbb
mov
and
add
test
push
sub
lcall
mov
ja
lahf
jnp
mov
xchg
ret
sbb
pop
lock
xchg
nop
test
pop
jmp
negb
lods
mov
push
rdtsc
lods
lods
cbtw
cmc
daa
ret
sub
jo,pt
xchg
cmc
add
mov
ss
scas
divb
ljmp
stc
adc
xchg
jb
mulb
adc
test
cmpsl
sbb
adc
push
mov
add
dec
adc
and
push
sub
aaa
aam
scas
jb
xchg
clc
mov
xchg
lret
rclb
pop
fmuls
jg
shlb
push
dec
enter
cmp
ret
scas
loope
pop
nop
ss
cmpsl
inc
push
lods
push
in
jecxz
pop
and
loope
jne
push
pop
loope
sbb
push
les
test
or
nop
leave
push
mov
stos
repz
adc
push
mov
clc
jbe
adc
fs
sub
shl
cmp
sub
add
icebp
and
js
nop
add
ret
cld
jp
mov
cmp
pop
or
xor
cmp
adc
callw
adc
mov
adc
push
mov
and
xchg
jl
mov
cld
mov
int3
ljmp
cmp
or
jle
jno
xchg
loope
add
int
fstl
mov
and
aam
test
test
push
icebp
pop
out
inc
xchg
loop
fstpt
sbb
outsl
inc
mov
fs
mov
stos
dec
pusha
adcl
mov
lock
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
lds
lcall
jecxz
repz
sub
mov
in
movl
cmp
sahf
cmpsl
mov
daa
xchg
adcl
fwait
pop
sub
mov
nop
push
js
cmp
test
cmp
sti
and
fldcw
pop
and
jb
test
call
fwait
xchg
test
sbb
jl
sbb
negb
or
sbb
mov
pop
push
ss
jno
pop
unpcklps
mull
sbb
hlt
and
icebp
xchg
cmp
roll
int3
lret
xchg
gs
insl
cmp
sbb
lock
out
mov
jbe
inc
in
push
dec
leave
push
clc
loopne
cmp
mov
stc
fs
icebp
daa
fs
sub
sahf
mov
into
and
xor
pop
pusha
add
mov
cmpb
mov
pusha
adc
push
ret
shll
loope
aaa
cmc
sbb
std
add
sub
push
inc
mov
inc
gs
js
mov
lahf
mov
push
fst
cld
jl
js
pop
bound
int
fnstcw
pusha
adc
sarl
push
mov
pop
pusha
ja
popf
xor
mov
sub
arpl
cwtl
sbb
xor
repz
aas
xchg
out
pop
mov
mov
ja
and
mov
lods
lods
lds
mov
xchg
movsb
hlt
push
cmpsb
ds
jne
adc
xor
push
das
cmpl
push
pop
addr16
xchg
decl
dec
int
cmp
push
cmp
sub
and
mov
popf
repz
ret
pop
test
aam
pop
mov
js
xchg
mov
lea
fdivs
stos
mov
add
add
mov
and
add
mov
xor
sub
in
dec
push
mov
ds
xchg
imul
add
rol
sbb
mov
movsb
or
in
cwtl
push
cltd
int3
add
adc
test
dec
int
cmpsl
dec
pop
sub
or
imul
push
test
sub
or
adcb
call
ljmp
cli
sbb
pop
not
jno
cmp
xor
and
push
in
push
mov
push
mov
movb
cmpsb
pushl
scas
or
sub
lcall
jne
bswap
fisttpl
xor
imul
insl
dec
mov
mov
in
fadd
ffree
mov
mov
test
dec
jo
jnp
jl
sbb
jno
cmpsl
sub
jno
jg
mov
movsb
jl
sahf
add
pop
dec
jge
pop
pop
lock
sbb
rorb
psubusw
pop
cmp
xchg
xchg
out
out
pop
std
sub
xor
cmp
push
inc
mov
sbb
lcall
mov
sbb
mov
fwait
sbb
decb
enter
xchg
int
mov
ds
mov
fldz
ficompl
gs
inc
xchg
jb
mov
jge
imull
fstl
jp
lods
jne
iret
sub
jnp
jmp
push
xor
push
out
sbb
mov
dec
je
push
mov
stos
addb
mov
sub
dec
sbb
nop
gs
adc
push
xchg
sahf
push
imul
es
imul
rcll
lahf
iret
repz
popa
cmp
adc
cmp
mov
scas
mov
sub
push
cmp
mov
in
sarb
stos
xor
or
xor
inc
push
repnz
mov
mov
lahf
into
mov
adc
xchg
adc
sti
sub
pop
mov
lret
fwait
mov
mov
mov
pushf
cmp
repnz
dec
xchg
dec
rorl
jge
push
enter
lahf
push
scas
and
cmp
mov
mov
xchg
inc
call
pop
xrelease
xchg
stc
loopnew
imul
test
mov
push
add
shrb
and
sbb
shrl
and
xchg
test
lods
leave
mov
push
xlat
jecxz
jl
sub
sub
insb
mov
test
daa
fstps
inc
fstpt
out
pop
cld
mov
jns
jns
push
add
sbb
cmp
push
outsb
test
out
xchg
cmpsb
lret
mov
mov
in
ljmp
in
mov
subb
pop
adc
fisttpl
push
scas
aaa
xor
xlat
rcr
add
testb
add
enter
xchg
mov
dec
ficoml
push
fwait
cmp
xor
push
dec
jmp
orl
lock
out
loope
das
jle
push
inc
sub
outsb
pop
loop
pop
mov
ds
jbe
out
xchg
jecxz
jg
mov
fldpi
cmp
fwait
mov
sahf
mov
adc
xor
mov
fdivs
cmpsb
inc
jno
mov
sub
bound
dec
or
sar
divl
and
clc
leave
pop
in
popl
ljmpw
push
test
push
dec
andb
adc
inc
adc
imul
mov
ret
jnp
idivl
pop
jno
xchg
sbb
subb
nop
push
or
test
fidivl
jnp
fildll
jo
mov
mov
aam
loop
rclb
aam
es
stos
stc
xchg
mov
mov
inc
movsl
xchg
aas
fadds
daa
mov
adcb
push
add
cwtl
adc
loope
movsb
sub
push
cmp
sub
xchg
in
dec
mov
adc
add
aad
mov
lock
sbb
jo
mov
fildl
ss
mov
lods
dec
dec
je
enter
pusha
int3
or
call
jecxz
lock
pop
lds
sub
mov
sbb
lods
sbb
xor
andl
cli
dec
cmp
xchg
cmp
test
mov
sub
int
lds
inc
imul
pop
xchg
mov
in
add
cli
mov
shrb
mov
outsb
insl
jg
sbb
popa
ret
outsb
xlat
int3
pop
imul
loope
mov
adc
cmp
testl
add
testl
loop
pushw
imul
mov
sub
lcall
int
js
adc
cmp
movsb
push
pop
in
fs
dec
iret
jnp
mov
pop
fiadds
pop
loop
mov
push
lock
mov
fsubs
flds
cmp
fwait
nop
imul
mov
pop
out
hlt
leave
scas
pop
jo
pop
sbb
dec
inc
call
push
or
mov
sbb
inc
mov
add
xor
into
das
jnp
mov
insl
jl
inc
mov
rorb
gs
push
sub
out
scas
lret
mov
sti
rol
cltd
repnz
push
and
inc
jno
bound
rcrb
addr16
test
shll
adc
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
out
dec
push
movsl
fcompl
add
mov
xor
jnp
jl
mov
aam
push
mov
mov
daa
jo
movsb
sbb
lret
push
lahf
movsb
mov
and
ljmp
mov
hlt
xor
out
xor
shl
push
cmc
mov
icebp
mov
mov
pop
lret
cwtl
sbb
mov
lahf
and
repz
outsl
xor
sahf
sbb
test
ret
inc
div
cmp
push
popf
data16
fwait
jp
mov
jg
mov
iret
jmp
out
inc
jmp
add
fidivrs
jp
mov
or
mov
and
pop
cmp
movsl
shr
gs
sbb
jecxz
push
test
jne
mov
mov
pop
je
xchg
add
addb
mov
xchg
or
jo
fwait
mov
xor
icebp
call
xor
insl
or
jge
mov
sbb
aad
xchg
out
jge
lock
sbb
ret
inc
lret
mov
pop
and
mov
imul
sbb
notb
call
sbb
mov
loope
mov
ret
push
aam
push
or
mov
or
mov
xchg
mov
xchg
test
cli
iret
sub
xorl
inc
mov
ficompl
and
xchg
lahf
mov
sti
decl
lcall
adc
and
add
cmp
push
adc
pop
adc
xchg
test
xor
inc
out
lock
ret
mov
mov
xor
adc
pop
inc
dec
cltd
dec
scas
and
fs
ret
xor
xchg
fisubs
inc
aaa
jge
xchg
dec
data16
sub
jp
cld
or
push
divb
mov
cwtl
jmp
fwait
dec
insb
cmp
negb
jo
jle
imul
repz
pushf
scas
sub
mov
mov
test
mov
outsb
or
cmc
lea
mov
popa
dec
nop
orl
arpl
or
xchg
adc
cmp
push
jmp
loope
imul
imul
mov
sarb
hlt
dec
into
shrl
std
add
mov
push
sbb
out
cli
dec
pop
and
sbb
enter
sbb
test
mov
sbbl
fstps
push
jae
and
mov
fidivs
mov
lahf
neg
aad
addr16
test
call
add
iret
shlb
pushf
inc
std
mov
xor
dec
jg
dec
or
jo
jnp
sbb
lds
js
or
loop
into
cmpl
or
das
pushf
push
sbb
xchg
xchg
out
dec
sub
pop
cmp
ljmp
xor
adc
enter
into
stos
popf
icebp
or
pusha
imul
add
mov
in
je
pop
in
fisubs
mov
jnp
pushf
inc
fidivrs
loopne
fwait
jge
movsl
rol
movsb
jb
jl
mov
rclb
out
mov
xor
jl
hlt
lret
adc
mov
and
pop
sbb
push
rorb
sbb
mov
xor
test
cli
dec
shrl
cmc
mov
rorb
sbb
pop
jl
xor
sbb
rcrl
test
xor
fsubrl
sbb
rclb
clc
mov
dec
call
add
jb
in
int3
xchg
jl
inc
cmp
jle
jo
aas
mov
sub
arpl
dec
xor
adc
lret
pushf
or
ret
add
pop
stc
fisubl
arpl
out
adc
dec
das
sub
enter
std
mov
test
bound
adc
jecxz
scas
insl
jnp
and
fcmove
ficoml
pusha
xchg
in
add
inc
movups
mov
add
scas
scas
sti
inc
mov
add
push
scas
xchg
mov
adc
adc
sbb
inc
xor
xor
jg
mov
into
and
pop
jg
lods
adc
and
lods
aam
push
dec
mov
mov
jg
loop
xchg
dec
and
dec
faddl
fsubl
arpl
push
ds
std
push
jmp
cmpsl
xchg
incl
cmpl
ljmp
lahf
xor
out
pop
int
jne
cmp
clc
les
out
test
add
mov
rcr
push
jge
or
and
enter
leave
xchg
push
lea
inc
mov
cmp
sbb
lods
addr16
xchg
leave
ds
pop
mov
xor
sub
pop
sahf
or
or
testb
add
cmpsl
dec
push
or
ret
mov
mov
or
inc
movsl
inc
push
fwait
or
cmp
outsb
xor
dec
inc
pop
out
mov
mov
std
pop
std
jo
or
cmpsl
pop
test
mov
sbb
xchg
sub
fcomps
enterw
mov
dec
in
imul
push
cmp
or
pushf
add
stc
sahf
notl
call
xchg
push
fcoms
outsl
test
mov
mov
ljmp
jge
fisttpl
icebp
xchg
repz
jne
cmc
call
mov
das
lock
xor
test
xchg
loope
sbb
xchg
cmpsl
xor
test
icebp
daa
sub
add
sub
sti
lea
dec
into
mov
adc
jmp
xor
jmp
in
or
push
std
dec
mov
pop
push
xchg
fldenv
mul
mov
jge
in
loop
mov
push
sbb
fwait
sbb
pusha
dec
or
data16
inc
mov
ret
bnd
xor
push
jg
shlb
cwtl
xor
jbe
std
cld
inc
cmp
or
cmc
movsl
ret
clc
pusha
jb
scas
loop
movsl
jle
or
mov
sarl
add
mov
and
mov
cltd
jb
pop
mov
data16
jg
xor
mov
push
or
cmp
push
mov
sbb
aam
pop
fsts
xor
loope
fdiv
in
cmp
iret
adc
test
pop
aaa
lcall
or
shrl
mov
movsl
aas
je
rcll
xchg
mov
xor
rorl
test
push
add
clc
mov
mov
inc
imul
mov
inc
xchg
cmp
sbb
dec
fnstsw
inc
adcl
into
mov
or
xchg
imul
adc
xchg
mov
fbld
or
cs
and
and
cwtl
inc
push
mov
push
jmp
aad
xchg
sarl
icebp
push
and
sarb
mov
dec
jb
or
and
lret
addr16
stc
add
in
xchg
or
out
nop
and
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jecxz
pop
ljmp
sti
dec
cmp
popa
pop
pop
jecxz
int
stos
dec
ret
ja
sub
sbb
and
adc
cmovo
repnz
ja
sbb
insb
arpl
out
xchg
aam
faddp
and
xchg
mov
roll
movsl
inc
cs
out
sbb
enter
jmp
data16
jnp
sbb
scas
dec
cwtl
sti
pop
repz
hlt
rcrl
int
pusha
sbb
push
les
lock
mov
pop
movsl
fcomps
loopne
mov
loop
cld
jo
jne
lcall
hlt
dec
lods
xchg
movsb
adc
stc
push
stos
arpl
stc
xchg
cmp
mov
dec
cld
int
inc
sti
or
sbb
sbb
cmp
mov
lods
test
rcl
mov
outsb
pop
arpl
cmpl
in
insb
sub
js
push
loope
mov
mov
aam
or
inc
jg
ficompl
out
cmpsl
push
mov
sbb
lods
call
aam
test
and
xor
orl
ja
call
inc
xor
or
hlt
hlt
dec
outsl
je
and
cli
inc
out
jmp
push
cmp
lcall
test
adc
gs
mov
inc
imull
out
sub
xchg
arpl
subl
jge
pusha
mov
pop
sahf
out
test
push
xchg
imul
les
arpl
jmp
in
sbb
js
pop
pop
int3
sysexit
sub
sahf
xor
push
cmpsb
xor
into
mov
das
lret
arpl
js
add
bound
xchg
loopne
mov
sub
add
in
inc
push
xchg
xor
fistpll
push
xchg
shl
dec
jno
and
enter
jne
and
mov
lods
mov
insb
test
imul
aad
push
in
in
mov
add
and
add
xorb
data16
popa
repnz
das
jb
ljmp
imull
push
fucomip
cmc
sub
sbb
xchg
fnstcw
push
mov
push
ret
roll
repz
add
mov
pop
cmc
mov
cmp
jmp
loopne
hlt
mov
sbb
xchg
enter
js
push
cmpsl
xchg
push
sti
jmp
push
stos
add
fiadds
cmpsb
test
pop
pop
sub
ret
pop
sbb
mov
and
mov
mov
sub
add
std
mov
cs
and
add
lcall
or
pop
dec
add
xor
xor
into
fwait
sbb
movsb
aam
push
push
sbb
mov
rol
xor
je
movsl
aam
insl
mov
rol
cmp
pop
pusha
sbb
popf
inc
dec
mov
js
push
inc
icebp
dec
jnp
icebp
sbb
movsb
rcrb
call
call
xchg
push
xor
xor
jmp
sbb
ljmp
pop
mov
xor
or
lods
lock
hlt
repnz
xchg
jg
xor
imul
outsl
and
dec
test
jbe
inc
xchg
mov
int3
jb
fisubl
push
xchg
icebp
pop
push
sbbb
xchg
addr16
andb
in
out
lods
repnz
add
mov
push
push
fwait
push
inc
mov
shlb
jg
xor
cmc
mov
aam
aas
enter
lea
xchg
lock
out
push
mov
lret
imul
push
dec
aam
fbstp
jne
jl
cmp
scas
push
mov
rorl
aas
js
dec
lds
inc
sbb
mov
call
dec
es
mov
lods
cmp
xchg
dec
xor
jbe
pop
jge
dec
nop
fcmovbe
test
adcb
std
andb
pminsw
andl
out
and
movsb
ret
lret
leave
repz
fidivrl
out
cld
cmpsb
aas
movsb
xor
jnp
pop
xor
add
iret
cmp
sbb
sbb
movsb
mov
sub
cmp
cmp
std
pop
jge
mov
xchg
mov
mov
mov
popf
mov
ja
pusha
shlb
mov
cs
push
movsl
cmc
fnsave
stos
movsl
popa
and
jge
es
loopnew
pop
in
aam
fwait
mov
mov
fisubs
jmp
cmpsl
cli
cmc
inc
sahf
mov
arpl
mov
jg
xor
lods
mov
and
dec
mov
loopne
mov
pop
pop
xor
mov
hlt
icebp
je
sbb
mov
notb
frstor
call
mov
and
xlat
xchg
jp
stos
aad
ljmp
dec
lock
aam
adc
and
xchg
jb
pop
xchg
ud1
clc
cmp
add
xchg
adc
xchg
sbb
test
xchg
rclb
lock
add
hlt
jno
pop
test
xchg
jbe
inc
les
push
sar
cmp
inc
mov
lahf
and
fs
stc
stos
movsl
sahf
add
push
and
and
fidivrl
pop
bound
fdivs
pop
jb
xchg
sbb
stos
sub
or
mov
adc
clc
pop
adc
mov
aam
jmp
inc
clc
in
or
lret
test
xchg
ja
mov
movsb
loop
aaa
ret
cwtl
repnz
pop
inc
ja
and
mov
pop
idivb
dec
push
sub
incb
jns
movb
cmp
ljmp
sbb
ror
mov
xchg
mov
dec
sbb
add
xlat
xor
pop
idivb
sub
or
mov
lret
loope
arpl
xchg
lret
in
cmc
sub
push
negb
dec
repz
in
jns
inc
enter
scas
add
adcl
test
stos
je
xchg
adc
popa
nop
leave
pop
and
out
adc
pushf
mull
jmp
inc
fmul
sti
sbb
xchg
lods
or
dec
inc
sub
xchg
mov
sub
lret
es
es
xorb
int
push
mov
lods
scas
sbbb
jno
jmp
mov
pop
adcl
imul
icebp
shll
add
lods
sub
cmpsl
cmp
mov
xchg
push
mov
test
lcall
add
ret
mov
bound
jns
mov
push
shlw
push
pop
out
xor
jno
je
sub
cmp
inc
aas
push
and
jmp
into
xchg
arpl
repnz
fstpt
scas
jl
cmp
aaa
adc
cltd
fwait
jp
ss
lock
cmpsl
ljmp
jl
scas
adc
rorl
fucom
hlt
jns
cmp
xor
inc
jbe
xchg
xchg
xchg
das
orl
iret
mov
subl
mov
pop
inc
push
int3
insb
daa
scas
std
testb
movl
scas
loopne
ljmp
add
repnz
nop
jecxz
loope
fcmove
inc
hlt
sub
jns
xchg
mov
sub
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
aas
mov
iret
imul
pop
xchg
mov
ret
fsts
scas
mov
sti
leave
dec
push
dec
fnsave
sbb
stos
outsb
pop
dec
push
das
xchg
adc
sbb
jnp
test
repz
mov
inc
sahf
sbb
imul
mov
stos
popf
repnz
or
decb
sub
out
pop
xor
inc
cld
ret
xchg
aad
xor
std
and
ret
loope
fs
mov
movsb
fdivrl
icebp
or
loop
imul
cmpl
sbb
js
push
dec
loopne
test
cltd
dec
das
inc
jge
push
add
js
andb
jns
cmp
cmp
mov
aad
sahf
or
pop
mov
sbb
fidivrl
mov
mov
rcrl
in
adc
jg
push
gs
push
push
imul
and
pop
xor
lock
jle
aad
mov
lcall
inc
jo
loopne
cmp
imul
mov
pusha
call
movsb
int3
mov
jb
imul
adc
sbb
sub
inc
fdivrs
mov
clc
sar
mov
cmp
rcrb
mov
mov
mov
aam
push
inc
push
aas
add
dec
push
fadds
mov
sbb
sub
loopne
cmc
jne
fsubrs
sbb
jecxz
pop
test
push
bound
mov
sbb
push
jne
shr
shll
xchg
fsubrl
gs
cmp
jmp
repz
cmp
push
int
sti
test
into
pop
repnz
cmp
pop
aaa
aam
lcall
iret
stos
adc
std
mov
add
jl
inc
sti
out
test
popf
daa
insb
pop
pop
xchg
xor
call
inc
ret
stos
pop
dec
lret
jge
cmp
inc
inc
xchg
ffreep
cltd
data16
pop
sahf
xchg
push
xchg
enter
pop
push
lock
mov
xchg
and
inc
jmp
or
add
mov
repz
pusha
jg
dec
popf
add
and
inc
lea
xlat
fwait
pop
aam
dec
xchg
jns
or
movsb
mov
popf
push
xor
mov
push
push
int3
mov
dec
rol
imul
xchg
out
add
and
cmpsl
int3
pop
mov
xchg
mov
push
dec
mov
andb
xor
sbb
and
bnd
dec
jo
test
clc
mov
aas
les
cli
xchg
neg
sbb
mov
sbb
jb
shrb
out
xorb
sbb
xchg
fxch
and
js
pop
xor
dec
jmp
dec
xchg
int
or
mov
imul
enter
or
es
popa
push
gs
mov
pop
and
jbe
inc
push
les
xlat
pop
mov
pop
sbb
sub
icebp
sbb
dec
sbb
es
or
jge
mov
cmp
fdivs
faddl
ds
idiv
sub
push
lcall
popa
dec
cmp
adc
adc
cs
nop
int3
fbld
jno
pop
fnstsw
fstpt
out
pop
icebp
xor
int3
or
add
jmp
lret
stos
jnp
jmp
out
pop
push
push
cli
mov
inc
out
fisttpl
jnp
or
je
xchg
testl
fs
sub
push
add
imul
push
cmp
mov
loope
rcrb
jg
mov
xchg
sbb
scas
xchg
dec
cltd
and
aaa
mov
or
and
mov
data16
lret
insb
loope
ret
pop
inc
mov
jp
sti
pop
mov
inc
pop
out
test
fdivl
mov
mov
fnstenv
test
scas
cmpsl
or
xor
repz
add
cld
sbb
or
mov
adc
outsl
mov
cmp
fisubrl
add
into
jle
xchg
sbb
or
popf
data16
cwtl
jmp
mov
loopne
jl
test
lea
mov
aas
orl
fcomps
repz
test
inc
fs
mov
lret
mov
mov
shll
mov
adc
lahf
xchg
fidivl
incb
popa
in
psubb
adc
sub
jbe
mov
and
lret
pop
out
ja
xchg
mov
arpl
inc
les
mov
hlt
push
mov
repnz
mov
mov
jl
pop
ljmp
sub
sbb
frstor
or
je
js
ss
rcrb
cmp
mov
mov
mov
mov
push
shll
je
les
andl
repz
sbb
mov
stc
ret
inc
mov
mov
cwtl
popf
arpl
fsubrp
mov
dec
outsl
jl
rcrl
adc
pop
aas
jne
test
xchg
test
or
movsl
hlt
stos
icebp
inc
test
xchg
clc
arpl
test
lods
dec
int3
dec
adc
mov
cmp
push
sti
rclb
outsb
lcall
mov
leave
adc
arpl
cmp
xor
cmpsl
stc
orb
push
jecxz
cmpsl
fcomps
insb
and
xchg
je
mov
sub
ficompl
pop
je
xchg
mov
insb
fistps
pushf
addr16
fsubrs
icebp
scas
mov
mov
or
rorl
mov
xchg
xlat
xor
ja
pushf
adc
lea
fcomps
dec
rorb
nop
lock
push
sub
fwait
adc
jl
sbb
sub
sub
jns
adc
leave
jmp
push
and
scas
add
ss
mov
mov
mov
mov
or
fiaddl
mov
arpl
jns
cld
int
pusha
jle
imul
stos
mov
mov
push
cltd
lods
mov
lahf
xor
mov
inc
rorl
test
cmp
sub
dec
xchg
xchg
inc
or
test
icebp
cmpsb
inc
test
popf
stos
adcb
dec
pop
and
mov
dec
mov
mov
mov
aaa
rorl
jecxz
dec
fs
stos
sub
adc
loopne
lret
mov
insl
mov
movsb
mov
in
hlt
addr16
jle
int3
cmp
mov
addl
dec
cs
insb
out
cltd
hlt
ja
or
cmc
jle
leave
sbb
mov
enter
xchg
add
push
cmp
pop
loop
xchg
insb
xor
jle
iret
push
jno
cld
ds
ss
sub
imul
fucomp
cwtl
inc
cmpl
xchg
xchg
dec
test
pop
std
sub
cltd
repz
push
dec
adc
sub
xor
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
enter
mov
maxps
scas
pavgw
add
popf
mov
lock
rcr
shl
test
test
and
xor
pop
and
pop
inc
sbb
fidivl
inc
cmp
mov
dec
lret
push
inc
int3
nop
fs
dec
adc
adc
or
pop
add
or
mov
inc
inc
lcall
das
cmp
hlt
inc
enter
cli
or
cld
ja
lahf
jp
sbb
fdivs
and
cmp
push
sbb
dec
mov
aam
mov
ret
idiv
inc
movsl
push
sub
xchg
aaa
jmp
sub
mov
sbb
test
rcrl
aas
xor
stos
mov
cwtl
mov
lahf
std
scas
jnp
stc
imull
sahf
or
sub
in
pop
jae
loopne
rcr
idiv
and
shll
jl
imul
cmpsl
fwait
stos
fs
arpl
cli
or
jne
cwtl
and
inc
push
add
addr16
iret
jecxz
xchg
add
imul
clc
push
pushf
mov
push
pop
cltd
lock
cmp
jno
int3
mov
loopne
mov
outsb
rorb
add
adcb
cmp
sub
sbb
repz
addr16
call
std
mov
push
dec
or
movsb
aam
mov
mov
jl
or
inc
dec
push
pusha
mov
pop
aas
push
into
ret
jecxz
mov
popf
dec
loopne
sbb
adc
test
pushf
das
ss
mov
outsb
xchg
outsl
les
std
fsubr
loopne
mov
or
out
dec
lock
pop
js
and
call
es
clc
mov
inc
ds
fldt
ret
lret
and
and
lds
les
xchg
adc
lcall
cwtl
sub
lret
sub
outsl
adc
pop
jl
xchg
xchg
test
jb
adcb
or
adc
adc
mov
daa
push
jmp
pop
jl
cmc
pop
push
jg
xor
lret
repnz
pop
insl
std
outsb
xchg
adc
and
or
rcl
jne
xchg
jb
sub
inc
or
ret
push
sub
push
icebp
add
imul
pop
enter
push
jecxz
data16
flds
test
cmpsl
add
shrb
out
out
sbb
dec
dec
xchg
fisttps
cltd
mov
mov
xchg
push
cmp
addb
xchg
subb
fcompl
or
repnz
mov
pop
lret
pop
mov
cmpsb
lods
adc
cwtl
fistl
daa
int3
jns
sbb
mov
mov
sbb
pcmpeqd
or
mov
xchg
mov
out
int
in
jbe
adc
je
fdivrs
push
fcoms
jle
sbb
ret
mov
mov
stos
jns
inc
adc
jbe
xor
pop
shlb
mov
inc
jp
rclb
mov
lods
push
add
clc
hlt
mov
pusha
or
rorl
xchg
aam
mov
jb
mov
sbb
cltd
xorb
pop
aas
add
push
push
and
scas
leave
pop
in
inc
movsb
fcmovnu
cmp
fdivrs
addr16
cmp
dec
aas
popa
test
fwait
dec
add
mov
inc
mov
cmp
jbe
lock
nop
bound
popa
mov
adc
les
adc
cmp
dec
lods
sbb
out
jb
nop
ret
lea
cli
push
loop
xlat
xlat
repnz
int3
sub
inc
mov
cmp
fmull
je
ret
pop
jns
cli
mov
dec
cmp
sbb
mov
scas
xchg
add
daa
dec
fwait
lock
jmp
add
pop
jl
xchg
push
sub
movsb
out
lock
ret
shlb
or
test
mov
rorb
push
ljmp
dec
pop
ljmp
jmp
push
mov
ss
jmp
add
daa
pop
mov
cmovle
push
cs
negb
sbb
push
push
fwait
dec
pop
rolb
mov
jmp
jno
jae
pop
sbb
test
out
adc
jle
aas
xchg
xor
jle
int3
mov
inc
cwtl
jp
ds
pop
xchg
mov
addr16
add
mov
pop
loopnew
jge
in
sbb
sbb
lds
cltd
leave
stc
stos
add
sub
jae
cmp
xchg
cmp
jno
or
in
push
add
mov
in
adcb
rolb
mov
fxch
repnz
adc
mov
icebp
pop
sbb
sub
mov
out
or
mov
or
insb
es
into
insl
pop
jge
inc
xchg
dec
mov
notl
push
pop
xlat
inc
pop
pushf
in
lcall
push
push
ret
mov
outsb
and
pop
addb
shll
push
cmpsb
jmp
imull
sub
int3
jno
adc
arpl
xor
pop
mov
iret
imul
int3
push
or
pop
or
adc
pop
sub
clc
dec
movswl
out
xchg
inc
or
fistl
mov
les
rcr
fwait
push
inc
movsb
test
out
sbbl
push
push
dec
mov
xchg
mov
shrl
mov
jns
je
adc
divl
movsb
cmc
leave
xlat
jnp
jmp
data16
movsb
xlat
pop
push
fldt
inc
jg
sbb
jo
mov
cmpsb
and
or
and
and
pop
adc
hlt
mov
dec
jae
arpl
aad
outsb
aas
mov
jns
dec
sahf
lahf
out
mov
jg
scas
pusha
movsl
dec
call
add
in
cmpsb
nop
test
jbe
jns
stos
loopne
xor
aad
dec
mov
add
mov
mov
add
push
inc
imul
int
fcom
outsl
ss
fs
sbb
in
mov
lret
inc
jle
stos
xor
stos
jp
arpl
roll
dec
fistpll
xor
out
push
mov
pop
loope
xorl
fstps
cmp
js
js
xchg
xchg
test
scas
ja,pn
push
dec
mov
pop
shl
mov
xchg
xchg
sbb
inc
stos
ljmp
jb
mov
mov
adc
jl
rcl
cs
stc
mov
or
int
or
popa
out
gs
mov
cs
arpl
pop
repnz
scas
add
adc
xor
pop
aam
js
xchg
jbe
ret
std
into
xor
push
push
lret
xor
ss
popa
int3
aaa
arpl
push
mov
mov
or
repz
and
mov
je
repnz
and
sub
fisttpll
sti
sbb
pop
loop
add
clc
add
push
inc
js
adc
xchg
enter
aad
jp
or
pusha
mov
mov
xchg
ljmp
testb
loop
jbe
jb
icebp
leave
mov
movsl
arpl
sbb
aam
ret
pop
add
mov
push
adc
into
lods
mov
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
imul
mov
shrb
add
lods
shlb
sarb
loope
std
push
rclb
xchg
pop
push
lods
and
mov
rcll
lret
xor
add
notl
push
mov
stc
in
iret
jns
enter
cwtl
pop
dec
push
pop
jge
pop
sbb
int
cmp
and
rorl
xchg
xor
pop
mov
aam
jge
adc
subl
or
mov
xchg
and
loopne
int
rolb
xchg
int3
jns
xchg
out
hlt
test
jmp
sarb
bound
test
inc
mov
jne
out
jmp
movsb
jnp
dec
add
mov
lock
mov
pop
sahf
or
mov
add
pop
aaa
xchg
pop
lods
negb
xor
adc
stos
mov
sub
les
adc
sbb
lret
stos
cmpsb
pusha
outsl
in
out
inc
lock
mov
call
and
enter
cs
test
into
add
mov
pop
add
jne
fisttpl
inc
pop
in
ret
or
jg
lock
ret
aaa
shlb
lahf
xor
aam
fdivs
enter
insl
fwait
in
add
push
adcl
hlt
cwtl
into
ret
push
imul
push
mov
pop
ret
ret
mov
hlt
mov
mov
pop
stos
xor
xor
push
mov
xor
cmp
jp
enter
xchg
or
inc
enter
rcll
pop
outsl
cltd
fs
mov
lds
mov
fistpl
xchg
and
xor
mov
xchg
xor
ss
mov
mov
push
cmpsb
out
lock
int3
mov
and
mov
mov
lahf
aas
adc
adc
jle
inc
nop
sub
into
es
push
cmp
fs
cmp
arpl
or
mov
mov
les
movsb
dec
jae
push
shll
dec
add
cwtl
lods
mov
sbb
test
das
popf
and
aam
mov
mov
inc
or
iret
sbb
pop
lahf
xchg
addr16
or
sbb
sbb
dec
pop
cli
mov
add
aad
sub
dec
in
add
mov
out
addr16
popf
jp
sbb
inc
imul
movsl
inc
cmp
cmp
mov
and
hlt
sbb
sti
dec
imul
sbb
jl
inc
test
ljmp
fsubl
out
sbb
mov
mov
lock
rclb
in
mov
mov
sub
ss
push
arpl
sbb
ret
icebp
sbb
stos
mov
cwtl
xchg
lods
in
and
adc
mov
sti
es
and
mov
leave
outsl
sub
pop
xchg
cmp
mulb
cmc
push
loopne
test
push
js
lock
adc
push
fmuls
fyl2x
xor
in
xor
fcomp
std
and
or
adc
sarl
ret
popf
fucom
mov
push
fcoms
sbb
push
repnz
adc
ds
pop
lret
sbb
loop
cmc
sbb
aam
lret
mov
inc
fadds
mov
push
or
jo
dec
inc
push
loop
das
stc
sbb
rclb
or
jnp
mov
les
not
fwait
add
testb
pop
and
test
dec
xchg
scas
dec
sarb
xor
popa
test
lret
and
jns
test
mov
call
test
push
out
xlat
sbb
xor
push
ror
dec
repz
xchg
clc
jl
in
push
aad
data16
es
push
inc
push
jg
xchg
pop
out
fsubrs
cli
mov
nop
or
xchg
mov
mov
fsub
imul
ds
xor
mov
xchg
aaa
call
mov
cltd
fsubl
and
xor
ret
pop
cmp
into
fmull
xchg
popa
sub
mov
add
jecxz
lds
fsubs
sbb
daa
pop
push
stos
mov
push
sbbl
push
notl
test
xchg
cmp
popa
or
push
mov
out
out
lahf
gs
sub
adc
add
jbe
std
loopne
shll
mov
ljmp
sbb
fdivrl
xchg
jb
jl
mov
mov
in
dec
jnp
movsl
sub
mov
xor
fisubrl
push
arpl
sub
inc
bswap
xor
cmpsl
cmp
pop
mov
fcmovnb
adc
fmull
aad
sub
in
xlat
iret
sarb
js
sub
cwtl
mov
jnp
add
cmc
sub
mov
and
fsubs
pusha
das
stos
testb
jle
push
mov
push
aas
and
pushf
or
sbb
push
movsb
cwtl
shll
dec
mov
pop
andb
scas
cmp
sbb
mov
mov
arpl
nop
xchg
lods
aad
dec
loopne
xor
test
cmpsb
xor
jp
mov
out
push
hlt
or
and
cmp
and
lret
sarb
mov
cwtl
idivb
and
daa
popl
jg
cwtl
dec
ret
icebp
add
call
xor
in
mov
xchg
cs
lahf
dec
mov
adc
fldcw
inc
mov
cmpsb
out
hlt
scas
ds
mov
les
mov
mov
lcall
adc
bound
pop
xor
mov
xor
sar
je
adc
out
lock
fisubrs
je
mov
push
xor
mov
insb
fistl
jmp
pop
stc
std
gs
pop
test
cmp
mov
adc
hlt
fwait
clc
push
loope
in
out
add
xchg
inc
xor
push
cmpsl
dec
jg
pop
in
ljmp
add
mov
jl,pt
mov
xchg
jae
leave
aaa
leave
and
loopne
rolb
stos
mov
popa
mov
data16
mov
dec
jmp
ss
aam
mov
push
into
ficomps
gs
xlat
mov
into
mov
push
arpl
sub
fdivl
orl
mov
repz
repz
and
cli
mov
ret
and
dec
cmp
inc
leave
jns
mov
dec
jl
rolb
out
sbb
jns
ljmp
add
lods
fwait
dec
lods
inc
jge
push
test
jb
xchg
jb
pop
popf
cmp
jb
or
stos
in
popa
dec
push
xchg
jb
sbb
mov
lods
mov
popf
push
pop
repnz
cmc
xlat
std
add
loop
fistps
inc
jne
cs
xor
add
xchg
sbb
pop
ror
sub
xchg
mov
push
lahf
lods
pop
lods
mov
out
cmp
sbbb
iret
jae
and
pop
sbb
xchg
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
pop
aaa
enter
imul
push
and
xor
in
mov
push
sti
mov
sbb
dec
scas
mov
mov
mov
mov
arpl
mov
xor
mov
shlb
mov
sbb
scas
push
jne
dec
push
mov
leave
adc
sar
repz
stc
sub
lcall
adc
mov
fidivl
sbb
pop
and
adc
push
aam
sbb
in
testb
dec
in
iret
mov
cwtl
push
lods
add
hlt
dec
xor
sbb
push
mov
xchg
mov
push
std
inc
sbb
lods
mov
xorb
les
shr
sbb
push
bound
stos
scas
das
les
dec
ret
pop
mov
loope
jnp
in
pushf
jmp
jl
test
fld
loopne
test
jb
jns
in
mov
xor
out
inc
sbb
loope
add
inc
pop
scas
ljmp
test
mov
jae
inc
lea
mov
ret
mov
sbb
dec
xchg
push
into
dec
jae
aam
popf
mov
mov
mov
jns
mov
xchg
mov
mov
insb
mov
push
cmc
repnz
in
inc
push
cld
mov
add
aas
xchg
xchg
xchg
dec
cmp
or
arpl
sahf
sub
loope
fsubs
cmp
mov
ja
pop
sub
nop
fcmovbe
cmp
jl
icebp
jle
ret
sbb
insb
pop
jl
cmp
std
lods
adc
fs
ljmp
aaa
loope
jmp
jg
cmp
mov
jae
mov
lahf
adc
stc
ror
test
pop
push
xchg
fbstp
mov
pop
pop
loope
push
jl
dec
xchg
loope
jne
xchg
out
push
icebp
aam
xor
jne
inc
or
mov
push
add
cld
das
mov
stos
cltd
xor
jne
xor
cmc
adc
push
pushl
stc
testb
push
push
pop
test
xor
lds
sbb
xchg
loopne
and
hlt
adc
mov
jg
std
in
sub
add
movsb
inc
kmovd
add
pop
aaa
lret
repz
pop
scas
or
test
adc
repnz
jl
adc
int
and
pusha
stos
shll
push
mov
and
int3
nop
xor
pusha
jo
lret
test
int
mov
lahf
add
inc
test
sub
sub
mov
clc
je
dec
into
les
xchg
add
ljmp
mov
pop
leave
sbb
add
dec
jno
xchg
mov
je
mov
sbb
aaa
xchg
mov
add
movsl
adc
dec
loop
insb
cld
cwtl
iret
dec
popa
xor
lods
xchg
movsb
mov
push
daa
pop
xchg
sti
mov
add
adc
xor
lds
loopne
add
sub
int
xchg
add
push
push
pop
adc
imul
adc
or
mov
adc
xchg
shrl
ja
add
popa
test
xor
adc
xor
cmc
xchg
mov
mov
loop
in
out
int
xor
xchg
add
int3
mov
loop
mov
pop
dec
pop
mov
ja
jns
fldenv
sub
inc
and
xchg
xchg
rolb
lods
ja
inc
sar
push
mov
int3
adc
fwait
ja
xchg
dec
outsl
xlat
insl
loop
out
loopne
aam
sub
loop
mov
divl
pop
mov
aas
fwait
xchg
xchg
xor
adc
scas
push
std
cmp
pop
mov
xor
ja
xchg
mov
dec
mov
push
iret
mov
xchg
lock
inc
movsb
push
pop
ret
inc
fstpl
mov
cmp
andb
movsb
inc
cmp
andb
lret
hlt
insb
sbb
sbb
sbb
subb
rclb
mov
sarl
pusha
stos
in
push
pusha
popa
inc
adcl
shlb
xchg
inc
mov
ljmp
orb
fstl
mov
jo
loope
mov
iret
mov
mov
sub
jno
mov
stc
push
cmp
aaa
mov
cmpsl
lret
iret
mov
cmp
cmpsb
xchg
jge
es
lock
mov
orb
ja
mov
sbb
xchg
fists
inc
jae
pop
cmovns
jae
cmc
jmp
pusha
testb
lock
pop
sbb
cli
xchg
sbb
xor
stos
sub
popf
xchg
leave
mov
rcll
push
push
es
adc
add
sub
add
pop
jne
pop
out
mov
std
popf
mov
and
imul
test
sbb
aad
jl
sub
xchg
stos
aas
test
lret
clc
pop
push
mov
andl
fmuls
add
sub
lcall
test
xchg
lock
hlt
xchg
xchg
dec
test
es
cmp
bound
mov
jae
test
sbb
ss
aam
add
xor
pusha
adc
out
pop
in
aaa
xchg
out
lcall
cmp
test
rorl
cmp
jp
mov
mov
clc
mov
sbb
pop
cmpsb
icebp
ljmp
out
sarb
mov
or
xor
jae
hlt
stc
mov
xchg
push
loop
sahf
adc
push
jne
add
cmp
mov
xchg
jae
ret
aas
mov
ss
loope
sbb
sbb
jb
test
das
adc
fcoms
pushf
sbb
adc
cmp
xor
aas
jns
ds
sbb
push
sub
frstor
xchg
lcall
mov
sarl
insl
cmp
daa
mov
rcrb
push
mov
xor
sbb
cli
xor
hlt
jno
std
outsl
dec
mov
dec
mov
mov
pop
mov
test
jge
mov
into
fsubs
xorl
sbbl
dec
rclb
les
aas
lds
ficomps
stos
xchg
enter
repnz
popf
mov
cmp
outsb
leave
mov
es
cs
call
jp
movsb
je
mov
sbb
filds
jbe
lea
into
xchg
jmp
movsb
adc
or
pop
push
out
jecxz
and
mov
xorl
pop
inc
in
dec
mov
add
mov
aas
mov
jmp
mov
sub
cmp
rorl
movsb
xor
mov
mov
scas
call
mov
fwait
mov
jnp
std
loopw
xchg
sbb
push
add
jl
lahf
mov
lahf
pop
out
mov
mov
lcall
inc
popw
jae
test
std
xor
push
out
out
jle
adc
imul
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
sahf
sar
pushf
sarl
and
sub
mov
xor
orb
out
rcl
push
test
scas
aam
in
loopne
pusha
push
sub
stos
xchg
jo
sbb
jns
mov
test
repnz
cmpsb
movsl
mov
orl
pop
sub
add
sbb
push
jg
xchg
adc
test
call
pop
addr16
sbb
cmpsl
test
imul
ss
sub
dec
lcall
dec
adcb
pop
mov
iret
call
daa
ja
lds
inc
adc
les
xchg
aaa
repnz
xchg
rorb
in
das
push
shl
pusha
sub
addr16
das
test
jns
and
scas
in
inc
mov
adcb
test
aad
clc
inc
jns
sti
in
cmp
insb
cmpsl
aas
and
imul
popa
fs
int3
sbb
sub
and
adc
addr16
mov
bound
std
testb
or
mov
fld
mov
dec
jp
aam
jle
dec
dec
jb
testb
xchg
cmpl
and
add
mov
pop
sub
enter
movsb
xchg
push
les
insb
loop
jo
aas
xor
pop
xchg
pop
inc
jp
movsb
adc
pop
mov
mov
in
mov
leave
sbb
jbe
in
cld
mov
mov
and
leave
not
fdiv
push
lcallw
xor
inc
sbb
loopne
rcll
andb
out
fisubl
mov
cmpsl
cwtl
arpl
pop
mov
push
xchg
sarl
mov
dec
ret
mov
lea
push
dec
inc
inc
jnp
cmp
adc
sbb
mov
addr16
and
jbe
xor
xor
insl
dec
mov
inc
adc
and
pusha
mov
xor
add
mov
sub
or
ljmp
aam
ljmp
or
imul
test
add
xchg
mov
jno
adc
lcall
cmp
push
pop
clc
sub
int
or
addl
pop
xorl
iret
or
ret
aaa
daa
mov
cmp
cwtl
repz
sbb
cmc
cli
data16
mov
shlb
sub
fadds
pop
or
xor
sahf
icebp
shlb
js
daa
mov
pop
cmpl
gs
jl
sbb
mov
imul
mov
cld
xchg
adc
cmp
mov
adc
or
lret
sbb
sbb
mov
popf
xchg
std
vunpckhpd
stos
adc
pop
pusha
arpl
out
out
stc
cltd
xchg
daa
mov
stc
sbb
fadds
push
jns
jg
loop
xor
and
jns
jle
or
mov
dec
or
ja
xor
mov
int
shll
push
hlt
decb
or
push
jg
xlat
leave
push
shlb
out
into
fldcw
imul
call
int
out
inc
leave
dec
popa
push
sub
mov
hlt
pop
ss
jns
fbstp
cwtl
insl
mov
jae
xchg
mov
sub
cld
mov
in
ret
test
or
imul
xlat
fs
mov
leave
shll
aad
adc
xor
xor
pop
jo
mov
shl
adc
xor
lea
lcall
pop
push
imul
mov
xchg
iret
sti
lock
jge
in
lods
je
stc
or
mov
sbb
mov
cmp
and
inc
dec
mov
xchg
inc
fwait
add
lock
lret
mov
sub
cmp
sub
mov
pop
xchg
test
gs
mov
inc
mov
mov
outsl
es
jp
pop
dec
mov
pop
inc
mov
adc
push
fisubrs
dec
xchg
jl
in
movzwl
mov
insl
out
and
outsl
outsb
mov
imul
xlat
sub
int
push
pop
and
and
insl
mov
movsl
mov
inc
rcr
inc
imul
das
adc
orl
jle
and
cli
in
adc
mov
lods
sbb
fcoms
ds
dec
xor
sub
adc
fwait
mov
adc
outsb
imul
mov
sub
mov
pop
jb
adc
sub
repnz
pop
aad
xor
xchg
imul
cmpl
fistpl
int
sbb
pop
daa
mov
outsb
cmp
xor
test
pop
dec
mov
in
inc
aaa
pop
cwtl
cmpsb
dec
les
clc
xor
lock
fs
addr16
shrl
je
js
outsb
aaa
and
insl
push
pop
lahf
jecxz
mul
enter
fwait
stc
xchg
fwait
dec
je
int3
inc
test
mov
cmpsb
arpl
mov
and
sbb
adc
outsb
or
fcompl
push
or
adc
xor
das
mov
jge
fcom
pop
adc
adc
inc
jmp
mov
lret
aam
xor
add
dec
lcall
xchg
xchg
mov
arpl
mov
iret
jo
mov
sarb
sbb
pop
and
pop
mov
pushl
xchg
stos
add
push
cmc
pop
insl
flds
lock
push
dec
popf
int
jne
outsb
rolb
push
mov
jnp
cli
mov
cmc
or
mov
add
jo
jnp
popa
test
jmp
or
test
imul
repnz
loopne
adc
daa
stos
cmp
and
adc
nop
imulb
sub
mov
test
jp
pop
mov
scas
fisubl
rcr
add
mov
aam
arpl
or
int3
pop
out
loop
les
in
sti
mov
mov
mov
imul
pushf
adc
es
stos
push
ret
sub
imul
dec
lea
shll
jmp
in
mov
and
mov
je
xor
push
flds
pop
cmp
call
clc
imul
adc
add
mov
xchg
das
xor
jp
faddl
stc
push
push
inc
sub
popf
and
rcl
or
out
pop
sub
mov
lea
sti
mov
jbe
in
fcompl
pushf
adc
sub
mov
sahf
adc
push
sarb
fwait
mov
neg
lods
sbb
nop
cltd
jo
pop
repnz
subb
sahf
mov
and
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
sub
sbbl
and
out
insl
push
push
jl
pop
xchg
mov
mov
out
sti
and
cltd
push
inc
cmp
sbb
push
xchg
sub
popa
aam
mov
or
jecxz
popf
movsb
cmpsl
dec
and
inc
push
or
jmp
fdivs
sarl
out
out
out
cli
and
nop
jns
pop
mov
sbb
mov
mov
insb
test
push
sub
jle
jl
inc
xor
push
mov
push
sbb
call
and
leave
imul
std
sub
imul
incb
arpl
cmc
push
add
xchg
jp
push
leave
je
sarl
xor
mov
orb
mov
movsb
mov
push
rcr
lods
or
cs
mov
loope
xchg
int
jne
popf
push
pop
xor
sahf
test
push
mov
jbe
bswap
out
stos
add
insb
dec
xchg
test
jg
adc
out
adc
jmp
loope
xchg
xchg
xor
setnp
mov
pop
push
std
mov
lea
sahf
lds
mov
fwait
das
aas
jne
lods
xorb
aad
jno
shll
insl
aam
fwait
in
push
les
jmp
gs
mov
adc
cmpb
int3
pop
ror
xor
dec
and
cmp
cli
bound
add
and
xorb
popa
lods
mov
adc
sbb
mov
lods
sub
cmp
fwait
inc
aaa
sbb
daa
in
fwait
pop
into
outsb
sub
sbb
inc
inc
int
or
stc
incl
push
jecxz
ja
fldt
cmp
pop
in
adc
push
sbb
dec
stos
xor
shll
shl
adc
lods
mov
bound
fdiv
pop
mov
and
or
cmp
and
cmp
pushl
insb
adc
repnz
pusha
push
rolb
divl
sti
aad
mov
mov
jl
mov
xchg
adc
jp
loope
inc
int3
fistps
cmp
adc
test
or
les
push
in
pop
rorl
and
inc
add
sbb
test
out
sbb
clc
mov
and
pop
or
add
loop
fisubrl
and
stos
inc
jle
jae
out
repz
dec
push
arpl
pusha
mov
add
loope
sub
push
loope
cs
push
int3
adc
sbb
mov
push
sub
or
lret
lods
jo
or
and
pushf
mov
stc
xchg
mov
ds
testb
mov
cmp
ret
leave
push
jno
shl
iret
inc
fmuls
dec
sbb
dec
and
fwait
sub
in
add
or
mov
xchg
jns
test
mov
stc
aam
jnp
rorl
std
xor
jge
push
into
fmuls
arpl
mov
jns
repz
and
sbb
jae
xchg
test
adc
mov
loopne
popa
inc
jo
mov
dec
or
test
jmp
jecxz
xor
and
cmp
fwait
notl
mov
push
sbb
pop
aad
sub
jmp
mov
jbe
sbb
pop
inc
push
pop
push
xor
lret
incb
ds
stos
ror
jl
cmpsl
xchg
adc
sbb
test
adc
fdivrs
ret
test
sub
leave
lcall
mov
lods
mov
mov
pop
pop
sahf
in
cli
jb
mov
shl
or
xor
movsb
ret
mov
shll
ss
loop
in
enter
xor
adc
push
scas
adc
dec
inc
mov
mov
test
jmp
adc
pop
jb
shl
jl
ja
dec
xor
mov
add
xor
loop
inc
subl
popl
or
inc
fwait
loop
fwait
xor
pop
leave
mov
es
loope
and
sbb
repnz
ds
and
inc
adc
fdivl
add
aad
cld
xchg
les
push
xchg
mov
and
pop
pop
mov
shlb
out
loop
repz
and
or
loope
and
push
lret
mov
jne
loope
or
repnz
dec
and
mov
enter
loopne
pop
add
jns
sub
mov
cmp
lods
arpl
push
loopne
and
movsl
movsb
mov
push
xor
mov
negb
or
call
in
aad
imull
dec
dec
cld
cmp
mov
iret
inc
divb
jmp
jge
mov
adc
adc
push
mov
mov
fimull
xorb
aas
mov
jb
out
pop
stc
out
daa
add
js
ja
mov
push
sub
cmp
mov
stos
repnz
mov
and
push
xor
repz
stc
dec
or
addr16
lods
lret
mov
jo
jno
testb
daa
push
icebp
mov
ret
sub
push
call
cmp
pop
mov
mov
cli
mov
push
mov
mov
fwait
aas
sbb
je
jg
fcomps
pusha
repnz
das
mov
data16
xchg
or
cmp
jp
fidivs
std
mov
mov
cmp
andb
test
xorb
addr16
nop
xchg
and
jp
stos
fmuls
jg
sub
cli
hlt
adc
add
aas
int3
add
push
test
cmpl
xor
arpl
inc
sbb
lcall
jecxz
mov
stos
dec
das
push
ret
cmp
shlb
test
inc
je
cli
sbb
repnz
push
fdivrs
fldenv
add
pop
mov
mov
rcrl
adc
aam
aas
out
cmp
test
xchg
daa
dec
pop
fsub
jb
cmpsb
aas
cs
jmp
js
push
sbb
mov
xchg
adc
jns
out
inc
mov
dec
pop
push
and
cli
jae
xor
sub
mov
add
imul
pusha
subl
inc
test
jp
mov
push
sbb
pusha
dec
sub
adc
jge
addl
nop
mov
and
pop
sub
xor
jecxz
and
mov
pusha
sbb
lea
je
jl
pop
insl
sbb
add
adc
pslld
in
pop
fidivrl
push
push
and
pusha
jns
mov
pop
ja
popf
movsb
fiadds
leave
repz
fdivl
mov
adc
sub
sarl
ds
mov
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
cld
cmc
cmp
inc
and
out
pusha
jge
push
mov
jl
push
lods
ljmp
scas
loop
push
cmp
insl
mov
jbe
mov
scas
ret
push
leave
pusha
out
aam
pop
test
jecxz
xor
ljmp
jne
mov
lret
inc
popf
pop
mov
popa
mov
movsl
in
add
test
sub
jecxz
jae
sbb
sbb
std
std
mov
and
pop
lret
cmc
cs
mov
sbb
nop
nop
inc
and
and
cmp
mov
and
test
outsb
dec
dec
mov
jmp
sbb
inc
arpl
xor
test
fcoms
mov
sub
jg
addl
idivl
mov
clc
sub
adc
inc
push
fwait
xchg
ljmp
int
in
cmp
jb
sbb
jl
imul
test
mov
out
addr16
mov
pop
loop
fsubs
adc
ljmp
aas
ror
out
ret
iret
sub
and
in
jl
das
add
in
icebp
cmp
xchg
mov
int
pop
jp
ja
movl
outsb
jnp
jle
ret
rcr
test
pop
outsb
mov
lods
push
bound
sub
and
add
jle
jo
cmp
orb
mov
jno
daa
sbb
leave
and
out
dec
cmp
leave
xor
inc
xchg
notb
mov
pusha
jne
das
in
lds
or
pop
int3
rolb
mov
insl
xchg
mov
lds
sbb
push
sub
mov
add
in
pop
cltd
insl
mov
std
add
int3
fs
mov
cmp
mov
je
cmp
cwtl
mov
ljmp
push
xor
addr16
jnp
sbb
ret
out
aam
popa
xor
jecxz
aam
push
xchg
push
lods
lret
xor
or
call
add
scas
xor
xchg
add
les
sti
add
paddw
stos
nop
imul
or
lock
sbb
fs
sbb
pop
jmp
cmpb
xchg
xor
mov
dec
dec
lahf
jne
sahf
je
ja
sbb
dec
push
sbb
xor
popf
loopne
test
aas
lea
add
mov
jle
mov
movsl
dec
popf
rep
mov
pop
shrb
mov
jge
stc
dec
cli
cld
jne
js
movsb
inc
mov
lds
pop
stos
lret
mov
add
negl
xor
sub
xchg
cmp
jl
mov
roll
and
jmp
sti
lret
fldt
and
movsb
scas
cmp
xor
out
bound
sub
bound
fidivrs
insb
xor
xlat
rorb
push
popf
jecxz
repz
out
mov
or
lock
fs
pop
out
daa
and
cmp
in
stc
testb
addr16
aam
mov
sbb
adc
mov
test
imul
mov
pop
cltd
and
call
data16
clc
loope
xor
push
pushf
sub
cmp
cmp
mov
cmpl
inc
pop
or
jns
and
addr16
sbb
daa
jo
push
add
pop
ret
mov
xor
cs
and
aas
or
stos
and
xor
jmp
adc
mov
jl
ficoml
cs
xchg
dec
mov
pushf
xchg
mov
ljmpw
push
mov
jns
mov
push
pop
push
fucomi
sbb
out
lret
cwtl
xor
and
and
fnstsw
mov
push
jbe
sahf
pop
cwtl
popf
inc
lahf
sub
lret
ja
dec
dec
pop
sbb
pop
jecxz
push
mov
pushf
cli
daa
inc
push
push
push
add
sbb
xchg
lods
sbb
gs
mov
push
pusha
outsb
mov
jne
sbb
jl
ja
std
mov
hlt
cltd
imull
int
sub
push
dec
ja
clc
lret
add
std
dec
pop
xchg
sbb
cmpsl
aas
clc
xor
jg
and
int3
dec
testl
clc
adc
lods
xlat
pop
roll
mov
addb
add
clts
aad
mov
sbb
push
cmp
imul
and
add
and
test
xchg
fcoml
insl
xchg
jb
push
leave
xlat
jo
test
hlt
movsb
lods
inc
insb
mov
adc
push
dec
pop
cmpsb
cmpsb
mov
xor
cmp
xchg
xchg
scas
inc
sub
adc
dec
push
mov
xchg
test
int
fmul
or
cld
imul
roll
pushf
lods
adc
mov
push
aaa
loope
stos
dec
bound
in
outsb
dec
mov
mov
xor
in
jge
aam
xchg
dec
inc
fistpll
pop
xchg
add
jbe
sbb
pop
lret
and
mov
jae
mov
dec
cmp
and
jno
insb
mov
add
xchg
pop
shlb
rorb
mov
jmp
divl
je
xlat
js
mov
cwtl
das
adc
out
nop
mov
jg
mov
mov
dec
sar
lock
and
test
lret
ret
pop
ret
jge
push
jb
add
outsb
jne
sub
jecxz
mov
fistpll
mov
in
push
cmp
push
mov
out
push
sbbl
or
cmp
sub
xchg
jp
push
mov
sbb
shll
sub
das
outsl
xor
ja
out
in
inc
mov
cmpsb
pop
ret
jecxz
mov
pop
int3
fidivl
pop
and
adc
fisttps
fisubl
sahf
mov
sub
stc
push
push
lds
in
xor
push
iret
dec
test
jno
nop
call
nop
adc
xchg
xor
cmp
mov
jae
cli
loope
or
inc
arpl
aam
inc
jle
mov
daa
ds
out
popa
adc
imul
lcall
sbb
add
mov
jae
mov
jno
and
and
and
jle
dec
inc
cmpsb
sub
imul
xchg
jbe
push
cmc
lret
bound
loop
cmp
test
stos
stos
sbb
mov
movsl
adc
je
pushf
sbb
adc
and
rcrl
out
call
fnsave
ret
dec
int3
dec
mov
jo
jae
dec
jns
sub
adc
aaa
js
or
frstor
sub
lods
or
push
imul
mov
inc
mov
pop
add
and
jg
out
es
shl
loopne
ljmp
loopne
push
mov
sub
ret
and
loop
sub
add
les
jno
arpl
and
mov
xor
ret
cmpsl
leave
lret
mov
out
push
pop
imul
xor
xchg
mov
push
enter
test
stos
mov
stos
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
notl
sub
jno
cltd
xchg
pop
leave
in
sahf
pop
pop
pop
popa
xor
idivb
ljmp
adc
and
fiadds
jg
adc
into
jl
roll
push
lret
rcl
clc
outsl
jle
push
in
mov
jecxz
stc
les
nop
repnz
cs
sub
mov
cmp
fwait
rcl
outsl
jne
jnp
jnp
inc
fmuls
out
xor
and
xchg
into
popf
in
test
arpl
and
xor
xor
imul
dec
add
outsl
xchg
jns
loope
es
sub
jb
jmp
loop
jl
das
movl
je
cmpsb
orl
orb
sub
xchg
pop
addb
xlat
cmp
xor
mov
js
push
incl
xchg
lods
cmp
cmp
jno
in
arpl
nop
or
jo
and
jb
cmp
adc
cltd
fistpll
hlt
sbb
fs
push
sub
inc
push
add
lret
pop
and
mov
mov
fs
adc
cwtl
sbb
adc
pop
nop
scas
dec
pop
in
lock
mov
stos
jne
fistl
adc
jp
aam
mov
pop
mov
and
test
shrb
xchg
mov
rolb
ja
nop
pop
movsb
loop
in
pusha
xor
sbb
pop
fdivr
aad
ds
cmp
addr16
mov
mov
std
and
jne
sbb
mov
rcl
fsubr
ljmp
cmp
popa
add
imul
push
mov
dec
mov
add
loop
int
fs
ja
icebp
stos
jle
dec
leave
aam
ja
sahf
jo
inc
fdivrl
sbb
sub
or
cmp
stos
push
cmc
imul
enter
ljmp
mov
jo
mov
enter
add
or
push
and
repnz
sub
mov
xchg
lret
and
jecxz
sbb
inc
fdiv
sub
dec
push
mov
leave
shr
and
out
push
and
mov
or
xor
scas
dec
sarb
inc
adc
fidivl
pop
test
mov
xor
cli
xchg
fildl
lock
shlb
mov
pop
sub
pop
jle
lock
cmp
xor
daa
les
xor
ficompl
xorb
mov
imul
in
xchg
dec
xor
and
gs
cmpsl
inc
mov
fs
insb
inc
dec
add
sbb
xor
sub
inc
loop
xor
and
pusha
inc
mov
lock
sub
insl
stc
fcomip
mov
aas
ficomps
adc
roll
mov
loopne
cmp
sbb
and
pop
fs
pop
and
aad
xchg
dec
imull
pusha
or
mov
push
mov
aad
into
xlat
sub
scas
jo
xchg
repz
fists
je
push
and
xchg
adc
or
jecxz
pop
xor
mulb
push
or
cmp
inc
imul
pop
es
ljmp
lahf
sub
outsl
ret
mov
fbstp
and
test
sbb
ja
mov
adc
in
loopne
jecxz
and
scas
pop
mov
cli
pusha
sub
mov
add
fcompl
inc
imul
sub
and
mov
sub
mov
dec
out
sbbl
xchg
into
outsl
movsb
ret
data16
mov
ret
into
imul
hlt
push
push
cmp
sub
lret
push
mov
jg
mov
add
fcom
push
adc
mov
jecxz
in
pop
sub
into
or
xchg
scas
and
outsl
pop
enter
mov
xor
add
xor
mov
mov
ljmp
fadd
into
iret
popa
jle
mov
rcrl
cmp
xchg
sbb
testl
jl
rcr
xor
inc
call
test
ljmp
repnz
pop
fdivs
xchg
andb
test
lock
or
xor
mov
mov
jnp
aaa
leave
fwait
cmp
mov
fchs
and
mov
push
lods
mov
inc
outsl
in
js
fidivs
lahf
pop
in
sub
incl
pop
cs
outsb
adc
int
mov
jo
or
mov
adc
rcl
xchg
repnz
fsubrl
ja
push
mov
imul
xor
xor
clc
dec
xor
je
aad
mov
stc
filds
pop
ljmp
xchg
cmp
mov
mov
add
mov
push
mov
shl
jecxz
and
jle
mov
sti
xchg
mov
ret
fs
xor
cmc
enter
adc
and
cs
pushf
addr16
in
movsl
push
cmp
pop
and
div
or
call
test
ljmp
arpl
pushf
jl
test
mov
xchg
add
jns
and
cltd
push
mov
inc
jl
sbb
mov
mov
movsb
adc
aam
les
and
mov
in
xchg
test
out
faddl
jl
sub
repnz
ja
xchg
sub
cltd
jb
pop
ret
xlat
clc
pushf
ja
data16
rol
mov
test
aaa
data16
push
dec
aas
xchg
mov
cmp
jae
mov
jae
add
add
scas
leave
xchg
pop
in
add
arpl
cli
push
aam
fdivs
or
popa
movsb
shrl
inc
lcall
jl
and
inc
jo
and
bsr
popf
lcall
fdivl
nop
push
pop
scas
xor
lea
adc
mov
roll
push
jno
fistpll
sub
dec
ljmp
addr16
hlt
lea
jno
movsl
shrl
mov
dec
cmp
sahf
inc
iret
xor
jp
imul
mov
es
inc
jmp
cmp
push
adc
daa
push
pop
sahf
cmpsl
call
dec
sub
out
inc
popf
out
xor
ret
mov
push
lods
aad
aam
sarl
mov
gs
fiaddl
jmp
pop
cmp
cmp
push
jae
pop
push
shll
pop
fisubs
pop
stos
movb
in
push
push
push
test
jnp
or
mov
mov
pusha
scas
mov
jmp
sub
and
adc
mov
jl
in
clc
jge
sub
cmp
inc
mov
jp
idiv
and
sub
xlat
or
lods
int
pop
stc
mov
and
in
testl
jb
sub
dec
jl
andb
ljmp
jo
cld
mov
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
adc
sub
jge
js
lret
xchg
pop
push
and
sub
stos
movsb
fadds
mov
loope
rcll
push
push
push
addl
cmp
jnp
pop
jg
mov
jmp
call
push
lret
push
out
pavgb
mov
cmp
nop
adc
jmp
xor
jl
mov
test
repz
push
and
adc
jae
sbb
push
cmpl
inc
mulb
loope
les
fsts
lds
cld
ret
cmp
xor
clc
mov
add
and
xlat
cmp
sbb
fidivrl
in
lahf
sbb
out
sub
add
jp
popf
into
loop
cld
scas
ljmp
mov
js
fmull
lea
psubw
gs
mov
inc
repnz
pop
popa
and
stc
push
lods
in
adc
add
insl
jle
cli
rorl
pop
jmp
movsl
mov
or
and
push
pop
outsb
pop
dec
and
pop
xchg
movsl
pop
mov
cwtl
xchg
pop
daa
gs
push
cmp
and
add
cmp
cld
lret
xor
shl
cli
repnz
testl
mov
mov
mov
test
popa
mov
insl
push
ds
out
sub
shrl
ja
jl
test
adc
mov
scas
sahf
loop
or
push
jp
inc
push
out
jmp
add
cmp
arpl
out
cld
repnz
cwtl
lds
push
imul
sbb
scas
mov
sarb
std
ja
or
pop
or
xchg
xchg
cmp
es
mov
fldt
pop
xor
mov
mov
loopne
mov
stos
jl
cld
leave
rcrb
inc
scas
and
insb
and
pushf
daa
or
pop
arpl
dec
mov
fldl
pusha
jns
fucomi
or
mov
mov
lods
mov
iret
int
mov
pop
ds
jecxz
or
sbb
test
cmpsl
bound
addr16
xchg
ja
js
push
dec
jbe
addr16
test
enter
arpl
call
add
repz
gs
dec
scas
push
fwait
dec
bnd
stos
call
mov
sub
test
inc
nop
and
and
add
xchg
lret
push
loope
rcrl
loopne
js
sbb
or
pop
xchg
or
cmp
stc
and
inc
pop
aad
test
xchg
hlt
enter
arpl
dec
pushf
pop
loope
mov
test
jmp
jmp
inc
aaa
jecxz
test
and
shl
cltd
jnp
inc
les
sbb
dec
sub
cmp
call
and
outsb
mov
mov
cmp
xor
daa
lds
mov
dec
clc
repnz
int
mov
lods
push
inc
xor
cmp
fadd
add
xor
sahf
test
xchg
mov
jo
jmp
adc
pushl
dec
pop
adc
lea
mov
cmp
cmp
add
aaa
sub
js
pusha
adc
xlat
lea
lea
pop
sbb
aaa
lock
fwait
mov
mov
push
sub
sahf
sbb
dec
stos
mov
jae
xchg
add
cmp
pop
sbb
loope
cld
mov
or
mov
mov
mov
xor
push
mov
movsl
push
sti
cld
dec
stos
lret
xchg
jmp
jne
data16
int
aam
adc
repz
inc
loop
in
xlat
xorb
icebp
jmp
jg
pop
loope
test
jg
mov
aas
pop
cmp
inc
xor
xor
das
nop
inc
inc
or
cmp
iret
push
addl
mov
out
mov
or
lods
aad
mov
test
cld
xchg
loope
mov
jge
mov
loope
pop
xor
popa
cmp
in
ret
sbb
lds
lods
cld
adc
mov
mov
sub
outsb
pop
mov
push
loopne
mov
popf
mov
pop
adc
inc
jp
inc
imul
enter
stos
ret
jne
icebp
mov
outsl
sbb
fnstsw
mov
cwtl
xor
and
or
aaa
mov
add
mov
dec
mov
in
pop
loop
fucomip
popa
ret
xchg
mov
insb
and
pushf
lcall
fmuls
cmpsb
jb
fwait
jg
inc
dec
dec
test
imul
jb
cmp
loop
lcall
std
xchg
les
xchg
pop
adc
add
mov
push
lods
incl
loop
shll
jecxz
aaa
fsub
cwtl
push
mov
std
push
cltd
int3
push
jbe
addr16
mov
xchg
arpl
or
lock
jne
mov
out
sbb
cmp
std
fisttps
mov
loope
sbb
jmp
addr16
sub
sbb
cmp
insl
imul
mov
stc
cmp
push
xor
dec
loop
xor
roll
pop
pop
add
mov
mov
inc
dec
mov
lcall
sti
mov
mov
lret
xchg
add
dec
shrl
sahf
jae
andb
icebp
jl
push
xchg
shrb
jmp
xor
xchg
outsl
xor
mov
jmp
mov
inc
cmp
cmp
sbb
stos
scas
fwait
mov
popf
leave
icebp
sbb
and
xchg
cmpb
in
pop
dec
dec
test
cwtl
lock
mov
cmp
cld
push
adc
daa
inc
mov
dec
adc
aas
insl
jg
inc
sbb
andl
jmp
pop
adc
int
shl
adc
rcrb
push
pop
jg
stos
les
jl
pop
jb
xor
xor
test
insl
clc
jge
insl
xlat
xor
cmc
xchg
loope
mov
jno
mov
aad
adc
stc
push
or
cld
movsl
sbb
push
jmp
pusha
insb
xchg
outsb
mov
push
sub
stc
sub
pushf
pop
js
mov
rorb
fwait
and
stos
adcb
pop
mov
or
lock
push
sbb
lea
or
dec
mov
add
adc
pop
sbb
imul
stos
mov
push
mov
sub
ds
mov
push
fisttps
ja
sbb
push
and
xchg
int3
fisubrl
mov
inc
sbb
pop
frstor
bound
mov
sbb
xchg
fmuls
stc
les
xchg
jl
push
lock
fsubs
mov
lahf
and
in
out
mov
cmp
pushf
repz
jle
ret
push
cli
les
or
lahf
pusha
xor
sub
xlat
add
pop
addl
dec
mov
sbb
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
and
fidivs
xor
popf
xchg
xchg
mov
mov
ret
shrl
js
xchg
mov
xlat
dec
xor
rclb
cmpsl
lods
cmpsl
loope
loope
and
sub
mov
sar
stc
and
ret
mov
xchg
adcb
jnp
adc
cmc
and
sub
push
jge
test
pop
clc
fs
mov
divl
jo
xlat
mov
pusha
xor
ljmp
sbb
push
fisubs
inc
cmc
mov
cmp
scas
loopne
pushf
outsl
xor
test
jge
mov
adc
push
out
pop
mov
mov
adc
call
icebp
push
ds
pop
push
xchg
popa
jg
cmpsl
jae
jb
lock
mov
icebp
dec
mov
dec
mov
add
push
cmc
lock
mov
mov
aam
and
push
arpl
out
sarb
mov
sub
add
push
enter
push
mov
jecxz
out
pop
mov
or
iret
testl
adc
out
mov
es
mov
imul
aad
leave
rclb
pushf
sub
rcrl
and
and
jb
adc
push
jno
gs
aam
fbstp
adc
addr16
cmp
mov
lods
adc
sti
mov
cmpsb
push
idivl
dec
xchg
xchg
movsb
mov
cltd
ja
and
pusha
in
cmp
sbb
stos
das
adc
dec
mov
ds
andl
sbb
pop
xor
xor
dec
jmp
push
sbb
cmc
movsl
sbb
sbb
negb
ret
leave
mov
mov
movsl
cwtl
outsb
mov
add
adc
dec
pop
sub
mov
sub
inc
mov
std
jl
xor
ja
cmp
add
cs
aaa
ret
xor
or
inc
les
test
mov
dec
push
jns
popa
push
xor
or
sti
icebp
jns
sub
in
mov
pop
and
mov
pop
pop
mov
pop
dec
and
xchg
jmp
push
cmpsb
jp
out
ret
or
jge
jb
jmp
arpl
cli
inc
or
add
outsb
outsl
sbb
mov
sub
push
mov
decb
loope
or
inc
pop
loope
lahf
mov
and
ret
or
xor
mov
lret
bound
ja
jbe
or
pusha
imul
mov
in
sbb
je
sub
sbbl
mov
push
xlat
push
mov
adc
sbb
or
sbb
loop
adcb
add
push
jg
out
addr16
adc
push
xchg
das
movsl
or
test
jl
add
xchg
sub
imul
push
sub
sarl
inc
scas
xor
out
shll
cmp
dec
add
insb
leave
adc
sub
or
sbb
scas
shrl
in
or
out
call
rorl
pop
insl
mov
mov
xor
pop
out
pop
pop
repz
add
dec
sar
insb
cmp
flds
addr16
fwait
mov
hlt
inc
aaa
pop
add
adc
lea
enter
arpl
mov
mov
pop
into
lock
pop
stos
lret
aad
jl
jl
jg
ret
mov
test
jle
and
add
jle
movsl
sub
lahf
sti
adc
sub
movsb
cmpl
adc
and
dec
loop
inc
imul
test
fisubrs
inc
testb
push
mov
and
mov
arpl
out
mov
loopne
dec
es
push
push
mov
call
sub
sub
xchg
mov
jp
dec
cld
xor
nop
addb
out
cltd
cmp
push
jecxz
fsubrl
fimull
add
das
inc
cmp
mov
mov
jge
push
enter
jb
rcl
jmp
mov
js
dec
mov
jns
arpl
and
sbb
inc
add
or
mov
andb
imul
add
xor
add
push
ds
fidivrs
mov
adc
andl
insb
push
lock
inc
int
dec
insb
add
xchg
mov
stos
stc
and
sub
jne
cld
call
rcrb
jle
sahf
mov
pop
repz
imul
and
orb
cli
push
adc
adc
out
jg
out
clc
mov
pop
xorl
jbe
jnp
jb
sub
cmp
dec
imul
xchg
or
insb
sub
andl
scas
je
xor
dec
push
or
sti
data16
jg
jg
add
imul
out
fs
cmp
aam
pushf
cmp
lret
aad
mov
insb
xor
push
and
jg
jge
pusha
ljmp
or
arpl
cmp
jge
popf
jl
and
pop
and
add
scas
lret
out
sbb
in
sub
xchg
xor
add
mov
stos
mov
inc
and
cwtl
imul
cmc
outsl
jle
call
movsl
clc
push
xchg
repnz
jmp
int
or
jnp
cmc
int3
mov
out
sub
int3
or
stos
inc
jnp
pop
push
imul
or
fldcw
repnz
xchg
and
test
dec
mov
stc
movsb
movsb
push
push
push
and
clc
dec
aam
mov
test
lcall
push
scas
pusha
outsb
stos
adc
xchg
mov
cld
in
std
or
fiadds
pop
pop
hlt
and
push
fs
pushf
sbb
mov
pop
mov
je
sahf
mov
stos
in
jmp
mov
call
arpl
dec
lahf
mov
ret
sub
mov
aad
push
jae
ret
mov
clc
sub
stos
push
lahf
pop
in
cltd
imul
frstor
inc
xor
dec
in
sbb
and
xchg
adc
jmp
push
xor
fmuls
jno
xor
lea
xor
call
or
cwtl
fnstenv
test
mov
stos
push
sbb
mov
lods
mov
mov
cmp
orb
in
fdiv
shll
es
pop
pop
xor
cmp
pop
mov
mov
popf
bound
pop
mov
imul
cmp
pusha
jl
imul
sub
jo
dec
lret
ss
cmp
movsb
pop
cmp
dec
and
mov
inc
mov
jg
mov
mov
int3
cmp
out
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
shrl
push
test
push
cmp
push
ljmp
imul
movsb
mov
fucom
repz
push
es
cmp
mov
in
pushf
popf
loop
loope
sbb
sub
mov
cmpsl
xor
aaa
mov
xor
and
mov
mov
xchg
repz
cmp
hlt
pushf
sbb
sub
push
push
dec
stos
cmp
sub
out
lret
cmp
fdivs
or
mov
pop
and
enter
lods
jns
cmpsl
jno
into
outsl
xchg
adc
stos
bound
jmp
xchg
pop
sub
and
jmp
ret
fiadds
pop
mov
mov
lods
pop
inc
push
aad
ljmp
jl
js
rclb
push
mov
push
cs
shll
out
ss
pop
dec
inc
imul
movsl
cmc
ds
push
cltd
fidivrl
fildl
int3
inc
sub
loop
xor
dec
sub
mov
mov
fstpl
shrl
lahf
sub
mov
or
pop
call
jge
repz
sbb
outsl
icebp
mov
into
rorb
jp
int3
pop
pop
mov
imul
ja
jmp
jne
les
das
lods
loope
imul
test
cmc
nop
imulb
and
call
cmp
data16
adc
mov
mov
cmc
es
out
xor
sbb
mov
leave
jno
xlat
ret
and
sbb
mov
lret
inc
cmpsl
jo
push
aaa
mov
js
sbb
or
daa
std
sbb
mov
dec
inc
cmp
xchg
jmp
push
popf
cmp
cmp
testl
andb
aaa
dec
and
dec
and
add
mov
xchg
fidivrl
mov
rclb
fucomp
xlat
loop
or
mov
stc
xor
jle
lods
arpl
fs
mov
sub
addr16
mov
pop
je
or
pop
dec
add
mov
ds
js
jne
cmpsl
fdivs
pushf
mov
aas
mov
sbb
test
xchg
inc
imul
ret
hlt
ret
sub
mov
cmp
shlb
cmp
dec
and
mov
mov
loopne
xchg
negb
adc
lds
bnd
push
xorb
pusha
fadds
insl
xchg
mov
xlat
lds
cmp
aas
xchg
mov
or
addr16
push
lret
das
inc
pop
add
call
jecxz
es
push
ffree
jae
insl
dec
fmuls
jns
bound
xchg
and
sub
out
mov
and
loopne
fimull
jecxz
mov
dec
inc
mov
cmp
push
sahf
push
int3
out
ljmp
insl
dec
lcall
add
adc
pop
fidivl
insb
int3
aam
dec
mov
dec
adc
xchg
jne
xor
add
add
popa
in
out
add
rcrb
push
or
mov
mov
jmp
test
xchg
loopne
icebp
stos
cltd
and
jno
loopne
int3
pop
int
stos
add
mov
xorb
adc
sbb
adc
in
ja
fbld
aad
jo
sahf
xchg
js
repnz
test
mov
fnstcw
xor
dec
push
sbb
push
jb
fs
inc
popa
jb
sub
xchg
idiv
mov
test
or
scas
inc
jns
xor
cmp
mov
add
clc
inc
xchg
in
jmp
es
add
or
cmp
mov
mov
arpl
add
push
jmp
sbb
repnz
jmp
sbb
in
sub
leave
lock
inc
pushf
bound
or
pop
lock
and
cmpsb
push
jns
sbb
movsb
fisubrl
mov
and
push
test
xchg
jl
xchg
push
out
sarb
pop
rorl
xlat
jg
fistpl
out
add
or
push
idivl
stc
fmull
mov
push
and
inc
cmpsb
call
or
rorl
push
xchg
jae
mov
push
or
sub
mov
popa
insb
xchg
inc
scas
jae
pop
movsb
mov
and
out
adc
or
int3
mov
and
push
dec
mov
xchg
jle
sti
loop
hlt
xchg
pop
leave
aam
xor
std
sub
test
imul
xlat
jne
cmp
mov
stos
jae
out
cmpsl
or
add
loopne
iret
dec
pop
or
add
fwait
int3
ret
in
lcall
cmp
lahf
das
clc
lods
pop
xchg
sub
fisubs
loope
mov
lods
call
xor
test
dec
dec
push
test
and
jne
fwait
lock
mov
shll
outsb
mov
stc
jns
inc
loopne
fmull
addr16
jg
ret
lcall
adc
movsl
mov
je
cld
jge
mov
clc
lret
jge
scas
and
xchg
cmp
mov
outsb
test
mov
inc
mov
lods
inc
adc
mov
movsl
xor
cmc
jge
lods
dec
cld
and
sbb
jge,pn
ja
and
repnz
out
ficomps
ret
pop
or
cmovae
xchg
arpl
ja
xchg
xchg
ss
mov
sbb
dec
inc
or
test
push
push
mov
or
stc
movsb
cltd
pusha
lret
mov
sub
lret
pusha
stos
mov
ss
mov
adc
scas
adc
rorl
test
sub
les
dec
cmpsl
stos
pop
ja
hlt
rcrb
inc
cmp
pusha
push
stos
and
in
fdivrl
shl
push
ss
mov
mov
xchg
push
and
outsl
push
cmp
mov
enter
jge
call
jl
in
cmc
sti
ja
in
ja
mov
out
add
push
pop
outsb
adcb
xchg
popa
add
xlat
lods
mov
push
cld
notl
faddp
imul
rcll
test
dec
cli
popf
les
sarl
sbb
loope
mov
pop
xchg
outsl
xchg
jno
xor
repz
sbb
jmp
mov
cmp
jno
jg
es
mov
xchg
adc
fidivs
jb
jae
test
scas
cmp
shll
xchg
ret
and
cmpb
bound
testb
scas
mov
jle
shll
jp
jae
or
cwtl
fucomp
dec
xor
imul
dec
jg
aad
ss
pushf
aaa
inc
fsubs
xor
pop
pop
mov
lea
or
fadds
lret
enter
imul
jbe,pn
scas
fsts
xor
sub
test
stos
repnz
insb
xchg
mov
adc
idivl
cmpsl
loopne
xchg
sti
stos
icebp
js
xchg
mov
movq
repz
mov
jbe
jle
mov
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
xchg
sbb
outsl
or
jge
fisubrs
int
mov
int
jl
lcall
cmp
mov
jbe
adc
adc
icebp
pop
adc
icebp
inc
xor
pop
xlat
cmp
xchg
adc
testb
add
push
jb
mov
push
push
dec
fsubs
hlt
sbb
leave
xchg
sbb
jecxz
pop
mov
cmp
mov
cmp
push
orb
scas
xchg
sti
and
int
jmp
mov
mov
mov
jmp
sbb
xchg
pusha
shl
mov
ret
cmp
mov
mov
or
mov
cmp
pop
lea
mov
lds
call
fisubrs
in
data16
pop
mov
cltd
mov
pop
xor
cmp
fistpl
and
xor
cli
or
fldt
iret
stos
jno
test
mov
lods
ret
pushf
mov
sub
and
jo
cmp
sti
mov
cmp
outsl
sbb
mov
mov
rorl
mov
scas
mov
inc
jmp
mov
mov
mov
fimull
jae
push
repnz
call
adc
push
jmp
jae
sbb
icebp
frstor
sbb
pop
mov
mov
dec
xchg
push
arpl
jle
fdivs
nop
ss
std
repnz
sbb
data16
cmp
jmp
lea
and
mov
bound
mov
add
lcall
fwait
sub
pop
out
lock
sub
pop
loope
adc
loopne
shll
jp
mov
stos
jbe
sbb
push
rcrb
jb
jmp
out
les
pusha
sbb
je
gs
push
jl
cs
add
and
and
inc
stc
mov
movsb
shrb
das
in
call
shl
push
lods
push
pop
out
scas
cmc
das
insb
mov
addl
leave
in
push
dec
lret
in
sub
cmpsb
aas
sub
lret
out
shll
out
out
cmp
notl
pop
flds
mov
fsubrs
out
sub
les
out
dec
and
mov
mov
dec
lea
cmpsb
or
pop
add
aaa
adc
push
lock
mov
sub
cmp
push
insl
std
sub
xor
fldenv
xchg
jnp
inc
ds
in
in
adc
jecxz
in
inc
rclb
cmpsb
js
loopne
enter
dec
mov
mov
rorl
and
rcll
or
push
not
sub
andl
aad
sbb
je
test
jbe
sarl
rolb
in
test
out
lods
ret
or
rol
icebp
fsubs
insb
sub
std
sarb
test
pushf
scas
inc
jp
dec
mov
loop
mov
adc
aaa
pusha
cmp
and
sub
adc
arpl
lock
test
out
dec
stos
fcom
sub
and
cmp
addl
arpl
aas
hlt
ret
or
pminsw
lods
mov
add
sub
daa
add
xchg
dec
icebp
xor
xchg
jne
dec
mov
popf
sbb
test
lods
xor
ret
leave
dec
sbb
dec
jle
daa
mov
dec
lock
mov
cmp
test
sbbb
and
cs
and
outsl
add
sbb
test
xchg
fadd
flds
gs
mov
nop
cmp
adc
addl
jle
or
cmpsb
out
ss
popf
int
sbb
push
xor
xchg
xchg
addr16
scas
cmpsb
dec
jbe
int3
stos
mov
pop
std
inc
int
shr
dec
out
dec
div
fisubrl
pop
out
jo
adc
push
test
mov
icebp
mov
and
inc
aas
scas
pushf
jae
cmp
xchg
rolb
xlat
sub
in
xchg
and
mov
xchg
pop
fisttpll
mov
xchg
push
add
sti
pop
fwait
lods
pop
nop
stos
aad
cmp
xor
andl
cli
sarl
xchg
jbe
adc
push
mov
fdivr
jbe
jge
and
stos
pushf
and
add
nop
mov
inc
dec
repz
mov
sarb
push
mov
popf
enter
aaa
into
push
dec
frstor
shl
cmp
mov
adc
xchg
cmp
outsb
and
inc
sub
ret
or
loope
lahf
loope
mov
sbb
aaa
add
pop
dec
fnsave
jecxz
fdivr
mov
mov
xlat
loop
sub
leave
push
in
xchg
mov
insl
fdivl
aaa
test
mov
mov
jb
cli
out
xchg
inc
mov
xorb
repnz
pop
adc
jne
pushl
outsb
cli
lods
sub
inc
test
push
jns
push
js
sbb
xchg
pop
enter
jbe
mov
xchg
bound
mov
pushf
jns
aad
lahf
adc
jno
and
sti
imul
movsb
ljmp
pop
decb
xchg
jne
fs
ja
into
adc
mov
mov
dec
push
and
cmpsb
pushl
dec
and
mov
stc
xor
cmp
push
hlt
sbb
add
sub
popa
fnstsw
fadds
aas
jb
pop
mov
hlt
test
or
outsl
test
xor
xlat
sub
out
mov
mov
popw
lods
inc
outsb
insb
xchg
jmp
cmp
in
sti
repnz
xor
jmp
fldenv
je
cld
or
sbb
lcall
mov
test
fcompl
adc
mov
mov
mov
pop
fs
mov
sub
jl
and
shll
arpl
das
mov
lahf
loop
ja
out
mov
mov
aad
fcoms
fwait
subl
jmp
test
lcall
jge
jge
inc
rcrb
pop
or
adc
cmp
sub
enter
or
cmpsb
or
pop
leave
or
fdivs
push
xor
cmp
lea
stc
cmp
sub
push
xchg
adc
insb
test
and
xchg
sarl
mov
call
cwtl
call
inc
dec
xchg
jmp
dec
xchg
sbb
jno
and
mov
gs
fwait
cmpsb
fsubs
leave
xchg
not
arpl
mul
movsl
mov
xlat
add
shlb
xchg
cltd
cmp
dec
mov
hlt
mov
fisttpl
inc
cmp
mov
mov
sub
push
pop
sti
loop
je
mov
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
xor
outsl
lret
ja
hlt
mov
fsubs
lock
jg
loopne
jmp
add
aad
pushf
mov
shll
cmp
mov
xchg
inc
push
in
sbb
sub
jge
mov
test
xchg
insb
clc
test
push
in
pop
cmp
lahf
adc
and
cmp
iret
repz
pop
cmpsb
imul
dec
cmpsb
mov
xchg
in
hlt
cmp
out
push
ds
ret
es
jnp
insl
arpl
mov
nop
add
mov
shrb
pop
mov
cwtl
mov
mov
and
in
pop
pop
sbb
clc
inc
lret
mov
mov
icebp
push
test
cmp
jg
outsl
in
mov
outsl
and
pop
leave
mov
or
pop
fadds
pavgw
iret
shlb
or
add
ret
jg
inc
or
clc
sub
scas
push
dec
fbstp
arpl
adc
push
or
sbb
mov
xchg
subb
cwtl
fmul
test
mov
xchg
sbb
cmp
jle
or
inc
adc
cmp
adc
jecxz
mov
shlb
shll
sbb
fs
cs
test
loopne
mov
stos
outsb
mov
and
mov
jl
std
idivl
lds
fldt
mov
out
test
test
fnstcw
push
lock
jmp
adc
cmp
fnsave
ja
push
sbb
xor
rcl
xchg
push
push
ja
das
mov
test
cwtl
add
xor
sbb
rcll
mov
and
xchg
jge
fiaddl
adc
push
gs
cmp
movb
or
mov
or
xchg
jmp
or
pushf
push
in
test
arpl
xor
rol
sbb
sbbl
test
mov
xchg
pop
pop
pop
mov
xor
mov
pop
jg
add
aam
mov
xchg
negb
xchg
movsb
cwtl
or
jl
xchg
jo
movsb
shll
cmp
or
mov
jo
sahf
cmpsb
pusha
idivb
sarl
push
mov
in
lea
sbb
sahf
mov
gs
out
push
xchg
dec
mov
lret
sub
pop
pop
out
cwtl
fcmovnu
inc
fwait
mov
cmp
into
jmp
or
sar
pop
nop/reserved
mov
inc
push
pop
fistpl
sub
cmp
xor
mov
imull
sti
loopne
inc
lock
inc
fwait
add
jmp
enter
fwait
jl
xor
je
mov
push
sahf
dec
sub
add
or
dec
addb
cmp
les
inc
mov
sub
xorl
sub
mov
inc
sub
xor
outsb
sub
xor
jne
addb
pop
and
mov
sbb
push
mov
cmp
sbb
addl
call
inc
out
ret
xchg
or
into
imulb
into
add
insb
aad
repnz
push
fcoms
mov
lcall
push
hlt
negb
fiadds
outsl
and
mov
mov
push
ss
addb
or
xchg
sbb
xchg
xchg
jnp
or
mov
jnp
pop
int3
push
cwtl
inc
mov
jns
test
pop
pop
lock
data16
fisubs
dec
lret
pop
inc
xlat
mov
std
jl
push
idivl
movsb
and
scas
jp
sub
cmpsl
and
ret
outsl
ds
fsubrs
mov
jo
add
add
dec
and
loope
sti
mov
sub
mov
ss
mov
fwait
and
pushf
fcoms
test
pop
loop
stos
sbb
xchg
push
xor
imul
mov
movsl
mov
sarl
lods
gs
loopne
pop
and
fwait
movsb
xor
shlb
hlt
cmp
sub
push
sti
jmp
dec
and
jnp
pop
loop
testl
pop
idivb
cwtl
lret
jle
out
lcall
adc
jnp
sbb
imul
fldenv
sti
in
bound
push
adc
xor
add
pop
xchg
push
mov
and
jbe
dec
jno
lret
mov
add
jo
loop
or
hlt
iret
dec
xor
imul
sbb
iret
outsb
clc
test
xlat
mov
leave
pop
movsl
or
pop
gs
cmp
and
fucomp
jns
mov
insl
mov
int3
scas
arpl
mov
pop
repz
dec
das
cwtl
xlat
pushf
sbbl
xor
fdivl
cmp
in
cmp
scas
das
dec
mov
mov
push
into
sbb
mov
mov
movsb
int3
push
imul
pop
or
lret
mov
js
adc
cmp
shrb
jle
mov
out
outsb
rorl
cmp
cmp
xchg
cld
adc
xchg
lret
je
jne
xchg
gs
sahf
jnp
jl
addl
inc
add
and
cmp
adc
loope
cld
ret
cmp
jbe
dec
jecxz
dec
les
fldenv
and
dec
mov
sahf
insb
mov
adc
inc
or
mov
into
add
test
sub
or
cld
mov
out
and
xchg
iret
add
inc
data16
rclb
pop
sar
mov
mov
mov
mov
sbb
jae
cltd
daa
fadds
insb
fsub
jg
mov
call
dec
fmull
test
add
and
int
add
sub
cmpb
lret
xchg
imul
pop
fwait
push
xchg
aaa
hlt
lret
sub
dec
and
add
dec
mov
xor
adc
cmp
xor
shr
xor
sbb
pop
sub
add
not
mov
xchg
clc
gs
push
push
adc
sbb
sbb
ret
clc
shll
addr16
add
js
inc
or
in
bound
lea
shrb
in
jmp
pushf
ja
out
push
pop
add
in
jo
mov
hlt
shl
imul
mov
mov
imul
sbb
sub
xchg
loope
xchg
xchg
mov
pop
les
adc
ss
fwait
loop
movzwl
mov
aas
xchg
cmp
jne
jns
adc
in
jnp
fnstenv
cmp
fldenv
mov
pop
enter
cmp
loope
ror
xchg
sbb
daa
add
push
cmc
dec
pushf
sbb
in
fsubl
jns
cltd
mov
ja
fidivs
dec
fcompl
adc
mov
fdivs
test
mov
dec
pop
pop
xchg
mov
rorb
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
cmpsb
lods
sub
lods
nop
loopne
sbb
jl
pop
lock
push
or
subb
xchg
pusha
sub
addr16
mov
dec
loop
push
jle
das
cmpsl
sbbl
and
sub
mov
mov
and
rcrl
dec
pop
ja
mov
mov
mov
xchg
cld
in
cwtl
cwtl
enter
test
inc
sarb
lret
xor
mov
jb
shr
subb
cmp
cld
sub
in
cmpl
mov
dec
jl
push
enter
call
insb
xor
jmp
adc
sahf
sub
add
lods
add
adc
ficoms
pop
fwait
and
stc
cmpsb
xor
xorb
pop
and
or
js
shr
faddl
mov
inc
mov
lret
addr16
mov
xchg
je
leave
je
or
push
out
psubsw
mov
insl
xor
das
and
jmp
jmp
xor
push
push
loope
stos
pop
js
xchg
add
sub
jle
push
int3
subl
loopne
cltd
sbb
mov
fs
xchg
movsl
out
push
into
lock
mov
xor
inc
fdivrl
leave
sub
andb
ret
and
sub
lds
xor
pusha
pop
in
push
cmp
clc
aam
xchg
fmulp
mov
xchg
cmp
int
or
mov
dec
sub
add
mov
mov
push
jne
in
jg
clc
popf
scas
idivl
pop
xchg
pushf
sbb
bndstx
push
clc
test
sbb
jnp
xchg
xchg
mov
inc
sbb
js
sub
xor
cmp
int3
andb
mov
ds
jo
pop
mov
xlat
xchg
mov
insl
nop
stc
push
xchg
ret
push
xor
test
movsb
fdivrs
xchg
push
bound
lds
arpl
mov
jmp
fs
daa
mov
xchg
fisubrs
push
mov
push
mov
pop
xor
sub
call
and
xchg
sbb
xchg
repnz
fists
out
and
sbb
push
lahf
lods
mov
mov
cmp
dec
insl
bound
sahf
iret
xchg
push
sub
loop
mov
jl
cli
sbb
jge
scas
xor
xchg
cmpb
xor
aam
test
xor
adc
iret
in
jecxz
xlat
fisubs
jnp
pop
inc
and
sbb
pop
test
jbe
int3
adc
fsin
fadd
imul
add
sub
insb
cmpsl
pop
or
sbb
shl
fistpl
xor
xor
push
or
clc
inc
rcll
mov
repz
lret
test
adc
dec
mov
xchg
sbb
xorb
pushf
mov
mov
or
in
les
lea
mov
adc
lea
dec
sbb
add
inc
jmp
in
sbb
xor
adc
addr16
push
sahf
inc
cld
fucom
push
or
mov
push
xor
movsl
sbbb
fldt
testl
xchg
pop
and
rclb
jecxz
test
stos
mov
lret
cmp
xchg
outsl
push
mov
dec
push
mov
fmull
out
insl
popa
shrb
rcrb
out
xchg
xchg
shlb
jmp
mov
mov
add
lahf
adc
add
cmp
repz
push
lods
dec
sub
mov
xorb
jae
decb
pop
cli
shrl
aas
popf
imulb
and
iret
pop
subb
insb
fldt
int
mov
out
aaa
inc
mov
cmp
jecxz
call
mov
lret
push
ljmp
mov
pop
jl
adc
fs
sahf
outsb
fisubl
sbbl
adc
mov
push
jp
adc
mov
les
adc
and
dec
push
mov
sbb
repnz
or
cmc
mov
loope
sub
hlt
jbe
jo
cld
pop
mov
lret
adc
inc
test
imul
pushl
xchg
lahf
mov
xchg
aam
inc
mov
sub
dec
lahf
out
fimuls
enter
data16
subl
mov
fadds
mov
or
mov
ret
or
popa
pop
jno
nop
data16
or
ret
sbb
xchg
movsl
sbb
pop
add
ret
dec
xchg
daa
pop
or
lods
loopne
pop
and
out
or
stc
pop
mov
inc
stos
mov
cmp
inc
xchg
push
adc
adc
out
jp
aaa
push
rcl
sub
sti
pop
movsl
hlt
out
jno
loopne
cwtl
and
mov
mov
fs
mov
test
and
xchg
adc
setne
outsb
add
jg
in
mov
mov
stos
xor
mov
add
jnp
sbb
outsb
lret
in
or
pushf
nop
xchg
mov
lret
push
mov
mov
push
jp
push
mov
out
sub
and
push
pop
imul
xor
add
mov
xchg
jbe
sub
cwtl
jmp
push
mov
sbb
xchg
push
jns
jl
push
adc
and
insl
sarb
sbb
push
ret
fisttpl
cwtl
xchg
or
push
in
clc
pop
scas
adc
sbb
or
jmp
jns
xchg
pop
adc
lds
insb
adc
jbe
mov
mov
fisttpll
js
xchg
test
js
test
out
cmp
leave
sets
cmpsb
enter
jge
mov
xor
js
push
loopne
mov
in
rcrb
push
mov
mov
pmullw
in
sbb
jg
or
lds
repnz
testb
inc
mov
mov
lret
mov
xchg
sahf
jle
stc
mov
mov
mov
ret
mov
push
fmul
xor
rorb
sbb
sbb
loop
sub
jne
jge
js
sub
or
cmp
mov
xor
data16
loop
in
popf
loope
add
fs
jno
aaa
das
repnz
jle
add
in
xchg
test
mov
dec
adc
and
cld
lds
dec
jle
mov
mov
or
and
adc
xor
add
std
and
std
mov
dec
ss
mov
xor
imul
xchg
fbstp
sub
outsb
into
cmc
pop
xchg
repnz
arpl
xor
mov
lock
scas
jge
js
add
repz
mov
push
cmpsl
scas
fsubrs
mov
mov
or
xchg
imul
mov
test
mov
test
in
jae
mov
out
jbe
cwtl
push
adc
cmp
out
mov
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jnp
andb
lcall
movsl
adc
mov
in
cld
test
xchg
jo
jno
mov
cltd
outsl
aas
test
jmp
mov
enter
mov
add
inc
mov
aaa
pushf
jle
pop
inc
push
inc
ret
aad
movnti
sbb
in
test
arpl
add
test
or
mov
scas
xor
push
faddl
pop
inc
jne
daa
enter
int3
push
ffree
ret
push
pop
iret
lret
jns
jge
popa
add
sbb
or
jo
mov
popf
test
mov
add
not
sti
scas
pop
xchg
in
jno
or
add
mov
ficoms
mov
inc
jnp
mul
cs
shrl
sbbb
jge
mov
pop
lea
stos
std
xchg
mov
push
inc
jbe
scas
xchg
or
movsb
xor
pop
int3
imul
cltd
fisubrl
data16
aam
daa
xor
bound
lods
daa
xchg
xor
or
mov
lods
scas
fs
ljmp
pop
fadds
push
pop
mov
insl
pop
and
lcall
and
nop
adc
add
push
aam
enter
push
pop
arpl
mov
and
movsl
movsl
inc
std
mov
cmpsl
sub
test
dec
sarb
adc
ljmp
scas
loopne
adc
cmc
and
mov
add
imul
sbb
jge
sahf
adc
je
or
loope
mov
daa
add
dec
int3
pop
jb
bound
testb
pop
addr16
mov
je
push
icebp
in
in
shlb
mov
cmc
repz
int
xor
aad
push
push
adc
sub
pop
rorb
cwtl
orl
mov
adc
js
outsl
out
xchg
fistl
jne
cli
popa
shlb
lock
mov
sub
mov
mov
iret
xchg
mov
loop
xchg
lcall
mov
ret
inc
jne
insb
lahf
and
push
outsb
cmp
outsb
fmuls
and
jno
add
sub
or
bnd
rorb
inc
push
xchg
out
push
and
std
push
or
popf
lahf
test
inc
adc
ds
imul
adc
xor
push
repz
rorb
fcmovbe
mov
aaa
das
jl
lret
inc
test
out
je
outsb
shlb
xchg
push
xor
xchg
add
pop
pop
daa
lods
jle
cltd
adc
cmp
cld
mov
or
and
jl
xchg
sar
mov
pop
stos
dec
sbb
call
jo
mov
mov
push
scas
or
arpl
fidivrs
adc
mov
test
std
scas
or
xchg
jg
aaa
mov
mov
pop
jno
dec
lret
shlb
cmp
inc
xchg
sub
enter
lods
lock
dec
mov
pusha
ret
test
pop
les
mov
dec
outsl
mov
or
dec
movsb
imul
and
popa
dec
dec
or
sbb
push
xchg
shlw
xchg
test
int3
mov
xlat
imul
mov
div
adc
stc
fs
push
jnp
pop
shll
adcb
push
out
int
mov
stos
mov
mov
xor
in
loop
push
dec
loopne
scas
imul
insb
dec
push
ret
je
sbb
push
ss
mov
in
cmpsl
iret
mov
out
scas
enter
or
mov
push
scas
test
shrb
out
out
mov
fwait
imul
and
mov
rol
sbb
mov
xchg
int
test
mov
lea
bound
aas
push
lret
loopne
or
push
insl
in
mov
icebp
insl
mov
divb
pusha
and
mov
notl
or
rcrb
insl
jmp
subl
sarl
xchg
and
in
stos
adc
or
lds
mov
inc
out
loope
cmpsb
pusha
ljmp
rol
lret
sti
jg
xor
jl
in
xor
inc
nop
imul
inc
cvtps2pi
adc
psrlq
sti
xor
into
fiadds
mov
jno
mov
pshufw
movsbl
mov
cmpsl
xchg
xchg
jp
js
mov
push
lcall
rcll
aaa
xchg
shll
sub
cs
jns
add
inc
mov
stos
repnz
mov
cmp
not
aas
jle
cs
inc
scas
mov
cmp
outsb
mov
mov
sbb
les
out
insl
sbb
sub
mov
add
int3
adc
mov
testb
lea
nop
scas
mov
xor
insb
push
shll
jl
pop
pop
out
nop
push
jne
das
or
jns
or
fisttps
fsubrl
jo
and
rorl
inc
jo
andb
icebp
shlb
mov
jbe
lock
fidivrl
in
mov
insl
and
dec
and
add
imul
dec
xchg
and
jns
sub
xor
fnsetpm(287
xchg
sub
sub
xlat
movsb
cmp
ds
dec
popa
mov
sub
jl
xor
sar
and
scas
rcrb
dec
xchg
shrb
xlat
mov
imul
mov
push
gs
negb
push
add
test
ja
test
pop
mov
xor
and
xlat
cmc
xchg
add
fwait
mov
dec
sub
fisttps
cli
mov
xchg
imul
jo
in
cmpsl
xchg
mov
pop
ljmp
xchg
mov
adc
sahf
fdivrs
jb
addb
push
mov
push
inc
bound
jmp
int
and
enter
scas
mov
jo
push
xlat
sub
aam
fcomps
adc
push
ret
sahf
adc
insb
add
pop
xchg
xchg
fmul
xchg
sbb
and
jg
fdivrl
sbb
mov
pop
and
fsubs
repz
xorl
xor
ret
sub
stc
ss
in
fldenv
push
test
rcrl
cmp
mov
sbb
insb
mov
pop
movsb
test
jns
mov
xor
popl
mov
shll
lods
popa
xor
loopne
aam
shlb
icebp
ja
movsl
mov
mov
xorb
lahf
jbe
inc
jl
fsubr
and
jo
outsl
andb
mov
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
les
je
unpckhps
repz
fidivrl
cmp
xor
addl
xchg
ss
clc
add
inc
jg
scas
arpl
mov
aam
jae
jmp
mov
or
test
xchg
inc
popl
mov
cmpsl
add
icebp
push
add
jge
addr16
cmp
push
test
dec
lahf
push
arpl
mov
xor
call
fwait
xchg
cmpsb
and
int3
sub
sub
cmp
cwtl
outsl
add
out
or
xor
lds
in
imul
shlb
nop
adc
cmp
pop
out
ss
outsb
mov
subps
aam
pop
jno
cmp
imul
fwait
jg
push
mov
adc
in
xor
aas
leave
idivb
jnp
xlat
dec
or
jmp
pop
pop
aam
jb
in
rcl
dec
lds
lock
mov
mov
xor
int
jnp
push
cmp
fimuls
xchg
ja
pop
clc
cmpsl
jmp
jne
hlt
push
leave
adc
jl
jp
sbb
xor
cmp
add
mov
mov
or
scas
addl
mov
insl
test
jl
fs
sbb
stos
dec
stos
fcomps
loopne
das
pand
das
push
clc
xchg
out
mov
dec
mov
out
dec
pop
jge
mov
arpl
je
push
dec
jl
lahf
jecxz
js
jns
adc
add
xchg
mov
adc
lods
mov
sub
and
mov
xor
xor
cmp
fldcw
jl
iret
xchg
pop
xor
fmuls
lock
ror
aad
mov
sub
mov
stos
clc
xchg
push
cld
out
mov
cmp
cmp
ficoms
dec
cmp
cs
cmp
mov
inc
adc
mov
sub
popf
les
adc
mov
mov
mov
std
jmp
add
mov
xor
xor
jo
sub
aas
lahf
mov
sub
ret
lret
adc
push
aaa
inc
dec
and
dec
lret
pop
in
sub
inc
les
mov
movhps
test
pop
mov
bound
xor
aam
gs
xchg
jo
in
sub
jl
xchg
jno
popa
scas
push
insl
lret
mov
out
jnp
lea
outsb
test
jl
sbb
popf
fistpl
mov
js
push
repnz
rol
cmp
and
shrl
xor
hlt
jge
je
lds
or
outsb
xor
addr16
xlat
aad
cs
data16
test
fbld
mov
loop
cltd
dec
jp
pop
xchg
clc
insl
ror
popa
adc
rclb
scas
pop
adc
sub
mov
cli
lret
repz
lcall
in
aaa
subb
sbb
adc
pop
jecxz
pop
adc
xchg
clts
and
fstl
mov
push
cli
pop
lret
shr
sub
popf
jno
adc
out
and
push
imul
push
jne
add
aaa
imul
pushf
xor
jae
mov
sbb
mov
inc
test
dec
in
xor
cwtl
xor
sub
mov
sbb
xchg
cwtl
das
or
cli
loopne
xchg
mov
iret
xchg
mov
xchg
aam
jecxz
push
adc
adc
fiadds
xchg
neg
icebp
sbb
in
mov
insl
js
sbb
bound
popa
push
shrb
hlt
cli
movsb
xchg
jp
in
js
and
xor
addl
mov
mov
push
adc
inc
mov
add
jecxz
repz
arpl
sbb
mov
mov
mov
rclb
clc
dec
test
push
stos
pusha
adc
xor
das
movsb
js
xchg
out
repnz
mov
add
mov
das
fidivl
mov
xchg
cmp
xchg
mov
jbe
inc
clc
les
lret
xchg
mov
add
bnd
cmp
insb
es
es
paddb
pop
adc
or
adc
inc
js
fwait
rol
adc
mov
into
mov
mov
les
push
cmp
jl
ljmp
fs
popa
push
mov
scas
and
jnp
jl
jbe
aam
cltd
and
add
stos
cmc
out
inc
in
pop
inc
push
popw
test
adc
sti
divl
or
jnp
test
sbb
aas
or
sbb
pop
jl
sbb
call
fwait
push
xor
xchg
jecxz
mov
arpl
aam
adc
mov
dec
popa
xchg
jmp
xchg
fwait
test
mov
dec
cld
xchg
push
int
jb
inc
push
cwtl
pop
pop
jnp
data16
daa
test
dec
jo
popl
jmp
sbb
stos
dec
out
mov
dec
push
or
and
frstor
xor
dec
cli
out
lret
mov
outsl
sbb
push
xchg
mov
cmp
je
add
mov
clc
pop
roll
ret
dec
push
dec
push
sbb
jo
xor
cmp
jg
sbb
push
leave
jl
dec
push
dec
lcall
mov
xchg
cmp
notb
jl
lret
lcall
cmp
pusha
xchg
inc
mov
cmp
pop
mov
xchg
sbb
xor
mov
loopne
das
dec
sarl
cwtl
pop
lcall
xor
xchg
push
jmp
jns
push
xor
add
and
mov
sub
sbb
or
out
sti
out
ja
ret
test
inc
cmp
push
adc
popl
stc
jge
fisttpl
sbb
pop
movsl
push
clc
insl
jmp
pop
and
arpl
sbb
stos
xchg
jp
je
sbb
adc
mov
data16
cmp
dec
mov
fmuls
pop
mov
ret
aam
sub
inc
lods
sbb
jle
in
xchg
cwtl
mov
sub
mov
cwtl
lahf
mov
hlt
sub
pop
andl
adc
mov
aad
es
mov
fs
movsb
cmpsb
adc
add
xchg
mov
mov
out
ljmp
daa
mov
xchg
xorb
xchg
repnz
andl
or
add
adc
lods
jbe,pn
push
test
sbb
mov
dec
jns
xchg
sub
ja
and
sub
push
test
shl
cmpsb
int
sbb
ds
inc
mov
mov
mov
pop
stos
mov
sahf
sahf
mov
shlb
roll
stc
gs
push
cmc
push
mov
lock
jp
mov
xchg
test
add
mov
shll
addb
cmp
fdivrl
jno
sub
xor
div
jns
xor
xor
int
mov
aaa
js
fs
cmp
push
call
cmp
mov
pop
sbb
dec
xchg
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
aaa
out
xchg
pop
sbb
xchg
cli
xchg
cmpsb
jl
sub
xchg
push
pushf
adc
mov
jo
or
test
pop
dec
decl
sbb
repz
test
repnz
mov
test
xor
jb
subb
xchg
jmp
and
pop
jae
mov
mov
enter
inc
mov
int3
xchg
outsl
mov
mov
pop
lock
shrb
cmpsb
out
adc
add
sbb
mov
fidivl
cmp
fwait
jns
movsl
dec
cmp
push
out
loope
mov
pop
jne
mov
mov
mov
inc
inc
ss
mov
cmpsl
fs
negb
in
fsubp
bound
in
cmp
ds
jp
sbb
mov
pop
jge
fidivs
adc
arpl
scas
mov
dec
test
fimull
lods
adc
and
lret
jbe
nop
push
jne
jbe
xchg
push
out
test
imul
ret
sbb
dec
cmp
fldenv
xchg
jg
sub
sbb
stc
pop
mov
test
test
mov
push
sub
enter
mov
imul
push
faddl
icebp
test
repz
pop
loopne
cmp
mov
pushf
popa
pusha
jmp
mov
pop
xlat
stos
jno
xlat
cmp
pop
aaa
jnp
and
jg
sbb
mov
ss
cmpsl
and
ret
mov
mov
inc
je
leave
cmp
cwtl
ss
stos
sbb
mov
rorl
adc
jg
dec
cwtl
cmp
aas
mov
xor
outsb
inc
ljmp
mov
roll
es
sbb
popa
test
test
jne
sbb
popa
mov
push
cmp
pop
and
insl
xor
push
mov
xor
sbb
hlt
lock
mov
push
mov
test
push
sahf
cmp
push
in
lock
arpl
push
fildl
xchg
loop
add
pop
stc
xchg
mov
or
xchg
xchg
sbbl
mov
xchg
fiaddl
mov
push
mov
mov
dec
jno
leave
mov
ja
je
lret
and
repz
mov
mov
fdiv
aaa
ficoms
xor
jge
xor
mov
xor
nop
es
pop
mov
cmpsl
inc
loop
lds
dec
lock
inc
paddw
or
push
cmp
pop
push
arpl
sub
sahf
in
inc
xchg
adc
and
fs
shlb
xchg
sub
xchg
out
inc
dec
add
push
cmpsl
and
lcall
into
pop
mov
jne
ficoms
leave
imul
loopne
pop
mov
es
daa
mov
ret
jl
jmp
decl
mov
mov
fcmovbe
loope
pushf
sti
cld
cltd
inc
test
es
add
lret
lret
into
add
leave
sub
xor
scas
stc
and
mov
out
rclb
dec
pop
xor
lret
mov
in
out
lock
inc
add
jnp
push
dec
xchg
inc
xchg
mov
adc
cmpsl
xor
in
inc
pop
pop
mov
and
adc
popl
aad
xchg
inc
xlat
cmp
in
fs
cld
dec
xchg
mov
fwait
mov
popa
cmp
and
mov
xor
cmpsb
or
dec
sub
mov
jp
mov
or
andb
test
std
adc
pop
cmpsb
movsb
add
inc
adc
popf
push
jg
cli
in
cmp
cmpb
outsb
xchg
push
adc
adc
cmp
scas
mov
pop
sub
sub
mov
js
loopne
jmp
inc
shlb
mov
fisttps
insl
sub
ljmp
pop
cmpl
mov
mov
pop
mov
cs
gs
mov
mov
push
jp
cmp
jecxz
aam
sbb
jg
addl
jnp
je
cli
mov
and
outsb
aad
test
out
xchg
aad
cld
push
dec
sub
dec
scas
dec
push
outsb
mov
subb
and
pop
jg
test
add
jmp
mov
mov
ljmp
mov
or
jp
or
mov
pop
pop
aam
lret
cmpl
int
push
aaa
mov
and
addb
ljmp
loope
dec
jp
xchg
dec
andb
jge
rcll
mov
loope
flds
jp
add
scas
pop
push
dec
pop
mov
jne
mov
lods
dec
lahf
xor
mov
push
push
stos
sahf
xchg
sub
scas
mov
add
std
pop
sbb
push
js
cli
jecxz
rclb
test
cwtl
fucom
cmpsl
fwait
mov
nop
imul
aaa
cltd
testl
clc
pusha
mov
jg
lods
outsb
sub
xchg
leave
imul
pop
mov
xor
out
lahf
pushf
arpl
clc
jns
xor
cwtl
dec
xchg
sub
and
enter
sub
iret
sub
pop
je
add
fiadds
pop
sti
lods
push
adc
rcrb
adcb
or
mov
jp
ljmp
sub
icebp
cmp
addr16
cltd
ja
xor
jbe
mov
ret
decl
dec
mov
daa
mov
jecxz
mov
push
rorb
xchg
pop
add
push
adcb
push
add
ret
arpl
add
out
fwait
insb
shll
sub
cmpsl
cmp
sbb
and
jb
fstp
pushw
fwait
lret
jl
mov
sub
mov
jae
add
push
jnp
imul
sbb
test
pop
pusha
dec
and
adc
cli
icebp
dec
mov
and
mov
pushf
insb
push
jle
add
dec
pop
add
out
add
mov
mov
lret
push
sbb
mov
pop
pop
repz
mov
push
movsl
lahf
out
inc
sub
xorl
adc
cld
into
call
xor
adc
enter
ss
xchg
sahf
and
cmp
dec
jbe
cmp
xor
outsb
in
in
test
testl
xchg
pop
psubusb
mov
push
pop
adc
pusha
add
mov
sub
ret
sub
int3
add
out
jge
jecxz
into
ret
push
repnz
fldl
in
out
outsl
sbb
call
sub
fmuls
ret
scas
lea
ret
cli
push
lock
ja
add
mov
jle
rorb
out
imul
mov
inc
pop
cmp
xchg
jno
inc
test
shlb
or
outsl
mov
inc
jns
push
push
jecxz
sar
adc
mov
es
jp
jl
push
addr16
lods
adc
add
mov
repz
jmpw
push
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
sahf
mov
les
dec
mov
lret
in
je
xor
mov
inc
sub
sarl
loope
cmpl
fwait
cmpsl
popa
loop
fidivs
and
pop
or
lcall
insl
insb
xchg
adc
mov
mov
aad
repz
call
rclb
pop
mov
test
dec
add
push
imul
fisubs
lahf
scas
push
inc
push
cli
les
idiv
repz
ja
test
insb
sub
std
xchg
movsl
mov
inc
push
adc
xor
lods
into
in
fwait
dec
xor
cli
movsl
in
inc
dec
push
lret
cmp
and
or
repnz
int3
inc
xor
xor
int
or
mov
add
pop
push
pop
jbe
fisubrl
mov
sub
ljmp
sbb
shlb
popf
rcr
dec
sbb
or
xor
push
addr16
idiv
movsl
addr16
js
imul
dec
mov
fstpl
cmp
movl
jo
js
in
into
in
pop
int3
nop
fwait
test
pop
xor
and
adc
mov
mov
add
in
cs
inc
and
sti
and
push
jnp
addr16
in
fidivs
lods
sub
test
pushf
adc
in
imul
std
mov
out
jo
jo
add
out
cmpsb
push
add
jno
dec
mov
jmp
pop
inc
adc
xchg
inc
aad
out
mov
and
data16
mov
lret
lahf
pop
sbb
jecxz
xlat
fildl
lods
sub
dec
movsl
or
inc
aaa
fs
and
dec
add
xchg
movsb
addb
iret
xchg
ds
inc
cmpsl
out
adc
fstpl
test
xchg
mov
cmc
arpl
std
jle
mov
arpl
mov
call
movsb
inc
xchg
fdivrl
leave
out
sbb
mov
inc
push
cld
stos
xchg
jg
and
rorl
sbb
jecxz
xchg
es
rcr
mov
sub
xlat
lods
ss
mov
mov
enter
mov
adc
add
fisubl
cmp
scas
scas
adc
mov
out
or
pop
ja
popf
fsubs
aad
sbbb
fwait
jbe
adc
dec
shrl
xchg
jns
gs
into
bound
mov
int3
aad
out
pop
aam
sahf
sar
mov
jp
mov
roll
fidivs
lea
outsb
mov
and
shlb
xlat
adc
orl
xchg
add
cmp
cmp
and
inc
ds
adc
and
sbb
sarb
lret
hlt
adc
xlat
out
xchg
repz
in
xor
dec
paddb
sub
out
mov
roll
or
movsb
dec
sahf
jnp
add
push
aad
adc
es
xor
sbb
cltd
into
psllw
mov
pushf
jne
inc
jmp
jp
pusha
into
pusha
test
ljmp
popa
mov
imul
lret
and
sahf
and
rorl
out
hlt
loopne
fbstp
mov
pop
and
push
adc
push
add
stos
ja
sbb
mov
test
adc
inc
and
mov
lret
mov
loope
ds
lock
or
aaa
sub
or
bound
and
mov
shrl
sub
sysexit
push
jecxz
mov
sub
mov
sbb
xor
push
addb
push
xchg
mov
sbb
repz
mull
xchg
add
cs
push
jle
shl
or
push
loopne
fstpt
sarb
aas
cli
je
call
insb
push
xchg
lret
outsb
add
nop
out
lock
insb
sub
std
xchg
pop
outsl
shrb
jl
dec
pop
jns
sub
cmp
jecxz
cmc
pushl
push
jle
push
mov
in
jns
xchg
ss
mov
pop
or
loopne
insb
sti
adc
lret
mov
bound
imul
xor
sbb
pop
mov
cli
xchg
ljmp
andl
enter
scas
inc
cmp
xchg
outsb
shl
mov
jne
pop
cmp
int3
or
and
mov
ja
aad
lods
test
mov
xor
pop
movsl
and
inc
inc
xchg
pop
jne
lcall
out
lock
mov
aaa
xchg
jnp
push
jmp
call
sbb
lods
push
fdivrs
cli
scas
or
xchg
adc
or
lea
scas
shll
mov
es
fistpl
add
rol
sbb
cmp
sbb
push
mov
pop
and
outsl
cli
add
add
inc
pop
jg
pop
push
sbb
and
sub
in
shlb
ret
mov
in
push
xorb
lret
push
fdivrl
xchg
aas
rcl
movsb
and
adc
and
jnp
add
sbbb
add
rcrw
jmp
fisttpl
sub
mov
scas
repnz
pop
arpl
dec
inc
pop
in
ret
gs
mov
mov
sti
sub
adc
push
lret
sbb
sbb
mov
or
cmp
mov
cmp
icebp
repz
push
test
sbb
es
test
lods
popa
iret
cmp
cmp
andb
popa
imul
insb
in
icebp
mov
mov
pusha
out
jl
lock
movsl
repnz
cmc
hlt
push
mov
shll
sub
xor
xchg
mov
jmp
add
inc
pushf
call
cld
mov
inc
dec
mov
cmp
flds
sarl
mov
sbb
cld
or
cmc
movsl
pop
mov
mov
aad
xchg
in
sbb
xorb
mov
aam
cmpsl
fwait
sub
xor
cmovl
mov
movsb
xor
fs
daa
sbb
ss
rcrl
cmpsb
enter
mov
pop
ja
mov
sahf
mov
divb
and
loop
loopne
add
ror
pusha
and
mov
loopne
orb
push
and
xor
lods
add
inc
lods
out
adc
pop
stos
ss
jp
insb
jmp
mov
and
cs
daa
js
jmp
push
shr
out
inc
pop
fdivr
in
lods
loope
and
mov
mov
mov
lea
xorl
cwtl
outsl
pop
fstpt
shlb
mov
sbb
and
cmp
inc
pop
pusha
pop
rolb
rorb
test
xchg
cli
pusha
add
ficomps
inc
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
bound
jl
jae
xchg
in
mov
shl
aas
stos
mov
pop
pop
mov
push
rcrb
clc
and
cmpsb
sbb
addr16
mov
in
std
int3
iret
inc
fsin
mov
jnp
test
add
pop
fisubs
pushf
fdivrs
pop
ljmp
sbb
mov
dec
adc
ficompl
sbb
nop
mov
mov
adc
mov
sbb
enter
xor
jge
adc
leave
out
outsb
cmpsb
test
in
idivl
push
mov
lahf
xchg
sub
adc
jg
sub
cmp
mov
pop
push
dec
cmp
iret
push
adc
xor
push
pusha
push
cmp
pminub
outsl
jecxz
mov
stc
jp
mov
fcompl
jg
stos
in
dec
lock
push
add
repnz
push
and
in
sbb
add
sbb
movb
jno
test
rorb
ja
sub
inc
xchg
pop
inc
push
dec
jecxz
jmp
and
cmp
jbe
ja
jnp
jle,pn
sub
add
xor
lret
fsubl
and
sub
inc
push
in
mov
sub
loopne
pop
imul
in
push
sbb
sti
push
cmpsb
inc
mov
je
pop
or
pop
ljmp
mov
pushf
lcall
daa
jecxz
or
outsl
sbb
ret
sbbb
test
mov
lahf
and
mov
outsl
adc
push
test
lods
pusha
test
mov
cwtl
popa
jmp
shlb
in
xor
faddl
jmp
pop
jl
test
sbb
and
xor
aas
xor
xchg
sti
fstps
int
sbb
xor
repnz
push
add
movsb
outsl
arpl
xchg
dec
mov
sub
js
stos
inc
jl
xchg
in
sbbb
mov
ret
gs
adc
mov
neg
jl
inc
std
pop
jl
fbld
test
and
in
fwait
cmc
loop
jl
jnp
xchg
cmpb
in
lds
sub
push
shlb
xchg
cs
xchg
sti
in
lahf
clc
fwait
add
sbb
cmp
das
cmpsl
push
imul
sbb
mov
mov
add
sub
pop
sti
pushf
xor
or
movsb
jne
rcll
cmpsb
sti
aad
rcl
inc
fwait
mov
out
data16
ret
shr
out
movsb
in
rcr
mov
and
adc
imul
sub
into
data16
mov
push
mov
mov
mov
sub
orb
iret
sahf
imul
mov
pop
mov
jbe
xor
jp
mov
cwtl
pop
fcmovbe
loop
cmpsb
les
jge
inc
out
sarb
sub
cmc
mov
mov
xchg
je
cmp
xchg
lret
xchg
nop
pop
jg
or
dec
cli
mov
aam
shll
lahf
cmpsl
xor
pop
cli
mov
xchg
outsl
lods
shll
loope
fwait
test
out
jno
out
dec
and
cld
mov
pusha
jl
bound
mov
mov
dec
jge
add
sbb
and
fidivrs
icebp
mov
data16
jmp
mov
insb
test
insb
fstpt
andb
mov
out
cmpl
mov
sub
jmp
lock
popa
mov
lcall
xor
pop
loope
or
cmp
test
pop
pop
dec
bound
dec
adc
pop
and
sbb
ret
mov
xchg
fsub
cmp
xor
and
xchg
cmp
mov
xor
pusha
cmp
sub
mov
xchg
cwtl
outsb
pop
push
and
js
dec
fstps
jns
aas
nop
xchg
in
das
pop
cli
xlat
scas
mov
stos
and
cwtl
xorl
pusha
out
aam
cmp
push
mov
mov
das
shlb
filds
es
loop
mov
mov
push
pop
jl
sbb
ror
cltd
in
cld
jb
and
cltd
daa
pop
xchg
adc
push
xlat
imul
andl
sub
in
cmpb
jb
fstps
fnstenv
or
cmp
add
or
cwtl
out
scas
push
sub
cmpsl
inc
push
sub
lock
test
sub
icebp
gs
fs
xchg
or
gs
xchg
cmpsl
arpl
flds
ret
and
push
cmp
xor
and
cmp
js
out
sti
adcb
clc
aad
mov
inc
jo
aaa
and
invd
ss
jg
cwtl
test
out
ja
lods
repnz
movsl
pop
adc
in
mov
sbb
mov
xor
sbb
inc
pushl
sbb
sub
mov
mov
mov
cwtl
pop
or
mov
adc
in
test
fcmovnbe
sub
add
dec
shr
icebp
insb
ret
mov
jnp
scas
das
stc
lods
push
jne
sbb
scas
mov
pop
sbb
push
scas
loope
es
sub
stos
ret
addr16
sub
shlb
or
jle
cmp
fisttpll
out
rcr
lods
push
cmp
out
icebp
ret
pop
test
jmp
sub
xor
repz
test
mov
and
test
pop
push
mov
lcall
lods
jb
hlt
xchg
fsubrp
inc
out
popa
mov
lods
jp
out
add
ror
int
sub
push
nop
mov
or
xor
mov
fdivs
subl
popa
std
or
mov
dec
fldz
fistpll
fcos
test
mov
mov
ficompl
xchg
push
into
insl
inc
inc
cs
pop
mov
movsb
adc
fdivl
push
dec
movsl
inc
pop
ret
sti
push
out
aam
ret
shll
out
cmpl
sti
pop
pop
mov
jb
and
jbe
or
xor
loopne
push
lret
nop
and
jl
stos
shll
pop
inc
movntps
fildll
xor
mov
loope
cwtl
in
insb
and
aaa
mov
iret
hlt
adc
fcoms
ss
pop
mov
jnp
or
cmpb
fistl
xchg
subl
sbb
popa
or
or
adc
and
sar
sub
imull
or
jbe,pt
jo
inc
pop
push
or
stos
mov
add
or
in
sbb
aas
mov
cmc
arpl
xchg
dec
arpl
fimull
jecxz
xchg
adc
mov
sbb
mov
loopne
or
sub
xchg
icebp
out
loope
ja
in
stos
pop
mov
sbb
sub
fwait
sbb
jbe
adc
cwtl
mov
ljmp
cmp
pusha
loopne
dec
pop
aam
in
jp
xchg
cmp
xlat
mov
bound
cmp
sub
xor
jnp
loop
cltd
repz
and
fs
jns
mov
fs
fs
jno
pop
jne
mov
mov
imul
push
popa
sub
mov
cmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
ficoml
daa
push
inc
sti
test
cli
dec
pop
xchg
sahf
ljmp
add
mov
test
jp
xchg
out
pop
lds
xchg
or
movsb
jg
jmp
mov
outsl
icebp
push
aaa
dec
xor
fisttps
pop
mov
adc
xor
mov
inc
inc
enter
fwait
sub
aad
cld
jl
mov
inc
jbe
push
mov
mov
pop
xchg
nop
rcrb
cs
mov
dec
push
cs
xor
clc
lods
add
jecxz
mov
inc
in
imul
inc
add
jae
fwait
test
insl
insb
jo
lret
aam
out
jne
mov
psubb
in
sub
pushf
sbb
fdivs
cmpb
mov
test
sbb
pop
popa
pop
pop
popa
mov
lret
lea
add
addr16
inc
sbb
test
xchg
jbe
sahf
decl
inc
lea
push
movsb
mov
jb
test
mov
pop
xor
lcall
mov
jnp
fs
mov
ret
lock
mov
stos
mov
jle
iret
push
cmp
das
and
mov
mov
nop
bound
lds
sar
jnp
les
daa
jb
push
sub
xor
repz
xorb
jmp
dec
fldenv
ljmp
sbb
push
jno
push
xchg
mov
pop
stos
cwtl
inc
push
jae
hlt
roll
fidivl
or
test
or
jns
xor
add
insl
popf
jge
or
mov
xor
idivb
outsl
cld
mov
data16
push
inc
cld
mov
insl
scas
cmpb
mov
call
jbe
mov
ss
xor
sbb
ja
frstor
dec
cmc
stc
into
mov
faddl
pop
or
push
fcompl
in
jns
jmp
sbb
aas
out
push
push
mov
jbe
clc
and
je
push
dec
jp
pop
jo,pn
sub
das
sub
sbb
int
push
out
cwtl
jmp
lret
enter
fimull
lea
shl
popf
sub
in
loop
dec
frstor
inc
jmp
add
enter
testb
lods
add
es
sbbl
mov
into
pushf
and
jecxz,pt
inc
mov
pop
sub
pop
cmp
repz
jl
in
lods
aas
lock
outsl
es
push
fwait
pop
rclb
ret
mov
scas
dec
mov
movsb
sbb
int
loop
addr16
pop
fldt
scas
xlat
div
or
cmp
pop
movsl
popa
fwait
das
popa
cmp
jg
cwtl
lahf
ss
adc
pop
leave
test
dec
lods
mov
mov
aad
movsl
in
xchg
jmp
rcll
or
ficomps
sub
pop
cmp
int3
push
jmp
add
dec
pusha
ljmp
jmp
sbb
sub
mov
pop
xchg
lahf
iret
fdivs
in
lds
lods
lock
pop
es
fisttpll
mov
cmp
or
cmp
adc
int3
lods
dec
pop
xor
push
test
sbb
movsl
adc
cmp
cmp
mov
and
ds
mov
jg
jb
xor
mov
outsl
sbb
cltd
mov
lods
xor
push
push
mov
fsubs
and
ret
xchg
inc
inc
jb
stos
fs
dec
pop
popa
pop
out
sbb
rolb
pop
sub
pop
inc
mov
mov
movsl
xor
pop
cmp
js
inc
adc
or
cltd
mov
rcl
hlt
loop
fistpl
outsb
mov
add
sbb
sub
and
pop
in
out
pop
sbb
push
mov
jp
lahf
add
xchg
mov
dec
or
mov
cmp
frstor
adc
mov
sub
hlt
test
jnp
and
iret
jae
push
ret
loope
cltd
lret
mov
adcl
iret
push
jae
push
push
clc
sbb
loope
jg
test
xchg
xchg
lods
enter
fadds
mov
cli
mov
popa
enter
xchg
ret
aam
in
cmp
loop
cmp
dec
cmpsl
jmp
inc
sbb
outsl
jbe
pop
je
into
outsl
repz
and
jo
loop
ret
cmpsl
test
mov
dec
out
mov
rep
pop
das
cmc
or
ss
cli
inc
jp
in
arpl
sahf
sbb
shlb
xor
mov
adc
inc
lret
xor
mov
mov
jns
push
xchg
nop
pop
xchg
push
mov
mov
fwait
inc
jo
int3
mov
repnz
repnz
jle
je
xchg
xchg
int3
pop
popa
icebp
jns,pt
repz
pushf
dec
mov
test
aas
movsb
xchg
mov
bound
cltd
pop
loope
xchg
aaa
jns
pushl
test
loope
cmp
pop
fcoml
clc
pop
xchg
pop
enter
xchg
lret
or
dec
cmpsb
repz
das
pushf
inc
lret
push
jge
movl
ja
int3
shlb
mov
repnz
nop
das
dec
popf
xchg
int3
or
sbb
xchg
fadd
push
insb
mov
scas
push
cli
cltd
sub
out
std
or
pop
mov
mov
hlt
jbe
fsts
lds
push
push
xchg
cs
ja
pop
or
mov
clc
inc
out
pop
nop
std
adc
fbstp
inc
ds
sub
mov
adc
leave
in
mov
loopne
and
in
mov
in
sbb
mov
ljmp
jle
lret
dec
push
push
push
add
jle
mov
cmp
sbb
and
mov
inc
xchg
or
pusha
std
aam
sub
or
jb
or
sti
add
aaa
out
sub
inc
sbb
mov
addr16
cmpsb
adc
cmp
movsb
icebp
repz
pop
test
shll
sbbb
adc
ret
fistpl
mov
ret
sbb
push
aam
ds
lret
sahf
inc
push
mov
xchg
idivl
lcall
cld
pop
mov
xchg
aas
std
inc
push
mov
fistps
popf
inc
inc
lcall
fdivrl
mov
cli
dec
iret
mov
imul
test
lea
pop
loopne
mov
sahf
mov
xchg
cmp
mov
imull
cli
xchg
call
xchg
push
xchg
add
fisubrl
imul
inc
add
sub
lret
jmp
sbb
jle
cs
cmp
in
jnp
or
fcoms
hlt
jo
sbb
xchg
sub
mov
cmpsb
stc
stc
insl
adc
mov
repz
aaa
imul
lcall
xchg
mov
pop
cmp
push
ja
cld
cltd
xor
pushf
addr16
xchg
fs
adc
sar
ds
xor
out
sub
paddusw
adc
xor
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
loopne
fs
cmp
roll
leave
push
push
pop
inc
mov
cli
sbb
push
fisttpll
mov
leave
aam
movsb
lods
push
mov
jg
jns
mov
pop
pop
scas
dec
out
int3
fs
out
sbb
ret
aaa
jb
pop
repz
adc
and
test
mov
mov
xchg
jne
and
imul
lock
inc
addr16
popf
cld
inc
clc
xor
pop
in
ret
sub
fists
pop
cmpsb
fdivl
xchg
hlt
push
mov
xlat
xchg
pop
jecxz
sbb
and
fisubs
add
or
mov
inc
arpl
fldenv
sahf
addr16
jne
jmp
sbb
fmuls
out
jmp
and
cwtl
dec
push
out
jns
sbb
aaa
mov
loopne
sub
in
adc
in
out
data16
mov
cmp
mov
pop
adc
mov
mov
loope
and
out
jle
nop
out
sub
pop
bound
and
inc
lods
sub
dec
hlt
das
adc
loopne
pop
fdivrl
pop
sti
test
mov
push
call
inc
adc
adc
jle
mov
adc
pop
arpl
inc
stos
add
ss
movsl
pop
xchg
imul
jb
xor
cmpsb
les
popa
lock
pop
mov
mov
and
push
add
imul
xchg
push
xor
not
out
push
cmp
dec
std
push
loop
push
stos
xor
mov
loope
rolb
pushf
out
sbb
sub
scas
pop
faddl
push
lods
pusha
addr16
push
call
xorl
fwait
shrb
popf
jne
adc
cmp
arpl
loope
add
inc
inc
adc
cwtl
fwait
push
fwait
mov
fimuls
mov
adc
sbbb
testl
mov
cmp
xor
das
dec
pop
mulb
jb
jb
adc
scas
jnp
mov
enter
pop
hlt
cmpsl
cli
sbb
jmp
mov
xchg
sub
adc
fucomi
sub
scas
pop
imul
push
retw
dec
or
pop
xchg
test
xor
jo
iret
ror
push
push
dec
in
cmp
mov
mov
cwtl
out
mov
jnp
imul
xor
dec
mov
les
mov
je
mov
add
fildll
mov
mov
bound
xor
and
jl
stc
fidivrs
mov
lea
cmp
inc
sbbl
clc
scas
xlat
inc
sbb
xor
xor
jge
and
and
jp
push
enter
js
inc
pop
dec
imul
daa
out
mov
add
sub
sbb
out
sbb
cmp
repz
xor
add
setne
mov
push
mov
outsl
pop
and
decb
mov
jno
lea
mov
ja
imul
pusha
xor
cmp
xor
call
lds
jecxz
rcl
pushf
mov
andb
fstl
mov
mov
lret
popa
mov
js
jle
cltd
fisubs
ja
adc
inc
add
shll
jp
iret
lods
cltd
pop
add
movsb
pushf
ret
add
or
bsf
jecxz
in
mov
xchg
sbb
lahf
mov
lea
out
pop
cs
add
orl
jns
sub
test
icebp
pop
sbb
js
inc
cmc
inc
imul
mov
and
je
mov
and
mov
idiv
jge
sti
popf
shlb
movsb
sbb
push
fiadds
ljmp
jnp
mov
and
push
sbb
test
pop
cli
xchg
cmpsl
add
mulb
dec
shlb
cli
mov
dec
lea
push
imul
mov
push
repz
mov
icebp
int3
adc
je
loop
rcrl
jl
dec
xchg
mov
out
js
movzbl
shll
ljmp
les
or
les
jp
sarb
adc
inc
adc
insb
mov
lock
and
insb
mov
mov
or
add
test
pusha
jp
shl
and
test
or
mov
fdivrs
xchg
xor
divl
mov
jmp
clc
inc
sbb
sbb
sub
sub
push
cwtl
stos
pushf
mov
fwait
ds
adc
add
js
lcall
dec
cmp
sub
arpl
add
push
and
hlt
clc
lret
add
nop
rcr
rolb
mov
add
jns
adc
dec
mov
aad
fiadds
ret
push
ljmp
aam
test
lahf
or
xchg
mov
loop
loopne
test
pop
cmp
cmpsl
andb
xor
mov
out
nop
and
lcall
inc
ljmp
mov
call
test
outsl
xor
sub
adc
inc
aaa
cmp
xchg
mov
aad
fdivrl
pusha
arpl
mov
adc
jo
mov
mov
inc
ljmp
mov
jo
cmp
adc
je
loop
sarb
arpl
mov
mov
sbb
ret
movsl
sub
nop
mov
aad
fdivrl
add
jg
ljmp
popf
pop
mov
out
mov
push
mov
or
cmp
gs
scas
add
sub
clc
sti
add
inc
ror
mov
rcl
pop
mov
ljmp
lods
xor
jmp
push
inc
shlb
push
sub
ljmp
pushf
cmpsl
nop
mov
sub
les
or
cmp
xchg
lret
jp
cmpsb
jl
jne
mov
test
jp
hlt
push
loop
shlb
push
sub
iret
adc
adc
dec
ljmp
hlt
mov
mov
jl
je
cli
aam
test
lahf
je
loop
sarl
xchg
mov
out
sub
jmp
pushf
and
call
add
js
jl
inc
je
loop
rorl
js
xchg
mov
out
cld
pusha
iret
mov
rolb
xor
mov
arpl
lock
popf
imul
rolb
subl
pop
mov
cmp
arpl
mov
jmp
and
test
mov
sbb
arpl
out
add
bound
xchg
enter
addl
loope
inc
jp
push
imul
aad
rcrl
pop
pop
ljmp
pop
arpl
cld
mov
clc
out
sbb
lods
mov
mov
mov
mov
jecxz
popf
cli
cld
jb
push
test
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
pop
mov
int3
push
and
sbb
ds
mov
popf
mov
icebp
mov
je
loop
rcrl
test
popf
outsl
andl
mov
jo
je
jnp
sub
inc
xor
repnz
repnz
adc
push
and
sbb
xor
jbe
sub
fsubl
shlb
mov
loopne
in
lret
push
cltd
pop
inc
lcall
shlb
aaa
mov
fmull
add
inc
bnd
stos
scas
js
loope
fiaddl
aaa
push
lret
xorb
pop
mov
pusha
jp
shl
push
xor
lahf
jl
mov
rclb
jns
scas
aad
xchg
cmpsl
aad
add
popf
loope
icebp
out
mov
cs
cmpsb
lret
push
sbb
jb
and
ret
jp
cmp
js
sbb
mov
mov
sar
mov
cmpsl
sub
mov
fcompl
sarb
mov
sbb
jae
ljmp
sbb
test
sub
cmc
sbb
adc
js
dec
sbb
adc
adc
and
cli
xor
adc
arpl
aaa
xchg
loope
into
scas
mov
data16
lods
sbb
cmpsl
jbe
cs
movsl
mov
fdivr
ss
mov
and
mov
es
cmp
ss
stos
mov
aad
fsubrl
mov
ljmp
cmp
jb
adc
js
sub
subl
add
jle
cli
scas
icebp
mov
loop
shll
xchg
mov
out
xor
mov
shlb
pop
jl
mov
sarb
shl
loop
cli
inc
icebp
inc
adc
je
loop
rcll
xchg
xchg
sahf
out
xchg
pusha
aad
inc
shrb
push
sbb
lods
ja
push
cmpsl
ljmp
fcompl
pop
rcll
sarb
mov
mov
stos
fstps
pop
fmul
add
insl
mov
and
enter
ds
clc
scas
lret
mov
rcr
inc
mov
popa
dec
dec
js
lods
and
cmpsl
pop
imulb
jecxz
mov
faddl
xchg
shl
les
sub
sbb
cmp
push
jae
scas
lret
jecxz
fdivrp
cli
jp
pop
scas
pop
jecxz
mov
fsubrl
push
and
call
loop
cmpsb
ret
popf
sbb
cmp
js
push
sbb
sub
cmp
cmp
cli
push
nop
lret
pusha
xorl
dec
js
lods
and
out
mov
mov
popf
mov
mov
shll
rcl
sarb
mov
sbb
jae
ljmp
sbb
test
sub
cmc
sbb
xor
popf
xor
ret
inc
inc
stos
lret
scas
or
and
jb
adc
jmp
loope
xchg
shrl
into
js
xchg
mov
out
fisubs
mov
shl
jne
aas
popa
pop
push
js
lods
dec
push
cmpsl
and
mov
fcoml
shlb
mov
adc
mov
loop
sbb
adc
test
and
in
sbb
adc
int
sbb
std
mov
jecxz
jecxz
lcall
sti
push
test
test
mov
jp
jle
inc
sbb
cmp
dec
adc
and
cmp
int
pop
mov
jecxz
pop
cli
ds
xor
roll
xor
gs
out
inc
pusha
or
mov
popa
repnz
idivb
lods
stos
push
ret
jle
jbe
xor
ss
roll
sarl
push
mov
mov
xchg
sbb
jno
sbb
pop
push
cmpsw
jp
cs
xchg
mov
fsubr
ss
mov
icebp
mov
out
add
jmp
dec
scas
ds
xchg
mov
out
aad
xchg
mov
shr
jle
and
inc
pop
js
lods
xor
push
cmpsl
sub
mov
fcompl
imul
mov
shl
xchg
rcll
mov
ret
in
sub
mov
aaa
cmp
xor
jns
iret
mov
ljmp
stc
data16
push
les
sub
jmp
and
aam
fcomps
push
add
push
int
cli
shr
insl
cmp
cmp
cmp
xchg
cmp
lcall
in
pop
shll
pop
add
andb
mov
fiadds
inc
cmpsb
icebp
mov
shll
popa
mov
enter
xorb
rcll
pop
cmp
dec
aam
jb
sahf
or
cmp
icebp
jne
aas
dec
paddsw
pusha
mov
mov
mov
mov
jno
frstor
idiv
xchg
jbe
jbe
or
ja
das
mov
test
aas
sub
sbb
adc
shlb
xchg
sahf
add
in
inc
adc
jecxz
call
unpcklps
lock
mov
sub
sbb
mov
loope
jmp
je
rolb
mov
clc
mov
xor
stc
xor
loopne
xor
xor
pushf
jecxz
mov
icebp
aas
sub
xchg
jg
add
or
fisttpl
mov
inc
and
aam
fisubrs
loopne
push
int
rclb
jne
mov
and
pop
addb
and
dec
ljmp
dec
jno
test
cld
mov
mov
mov
popa
sub
sbbb
dec
mov
inc
pop
xchg
test
mov
jl
aam
hlt
lods
sub
in
jns
outsb
imul
mov
dec
ja
repz
cwtl
test
ljmp
cmpsl
xchg
je
ret
sbb
push
rol
push
mov
ret
cmc
aas
fs
mov
aas
and
sti
push
in
nop
xchg
sub
lods
xchg
aaa
sbb
call
pushf
mov
lea
jns
repz
lret
push
and
stos
adcb
mov
call
cmp
dec
notb
sub
addr16
lcall
pop
xchg
xor
ficomps
ret
mov
nop
nop
cmc
or
or
mov
adc
loop
repz
mov
mov
sbb
rorl
cmp
dec
test
mov
lock
xchg
dec
test
fxch
icebp
test
jns
fistps
add
pop
jae
mov
mov
inc
ja
cmp
loopne
imul
push
out
cmpsb
mov
push
leave
mov
dec
push
push
pop
inc
cmp
je
nop
mov
insl
sub
divl
sbb
rolb
mov
mov
sti
das
in
stc
out
push
cmp
nop
lahf
outsl
push
pusha
sbb
pop
outsl
sbb
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
sub
mov
cld
or
cmp
shr
je
adc
pushf
sti
cld
outsl
and
adc
xchg
jo
out
pop
test
pushf
mov
mov
sub
add
inc
insl
jmp
roll
loop
push
jmp
dec
xor
add
mov
lcall
sbb
jne
sbb
pop
outsb
sbb
aaa
sahf
jecxz,pt
cmpb
mov
xchg
push
dec
xchg
dec
push
test
aad
call
or
adc
jge
cli
ret
sbbb
mov
inc
mov
cmpsl
notb
xlat
loopne
aaa
xchg
add
xor
push
jmp
adc
jecxz
push
mov
mov
cmp
out
add
cltd
stos
lret
xorl
mov
mov
sub
jle
sbb
sbb
std
push
sub
sub
pop
add
jg
sti
xchg
mov
stos
sub
add
pop
outsl
jb
dec
test
mov
popf
incl
mov
cmp
jno
sti
test
jne
cmp
decb
xchg
fstp
push
sti
xor
fwait
inc
push
std
xor
testl
icebp
dec
call
cmc
cwtl
inc
pusha
jne
test
fidivrs
mov
mov
test
adc
test
addr16
pusha
sbb
stos
lahf
addl
je
shl
aas
sbbl
push
enter
inc
mov
test
scas
inc
push
mov
dec
test
mov
clc
pop
arpl
pop
adc
aam
test
jno
sub
imull
dec
jge
fwait
adc
rolb
sub
jmp
imul
repnz
mov
pushf
xchg
into
loop
leave
pop
push
sahf
insb
push
fstl
push
and
lods
and
addr16
inc
pop
adc
jmp
cmp
pop
xor
adc
add
ss
xchg
cli
fmull
push
or
mov
hlt
cltd
xchg
pusha
mov
movsb
popa
cmp
and
lahf
mov
sbb
test
cmpl
daa
jecxz
push
jbe
lds
inc
jmpw
repz
rcrl
jae
pop
loope
repz
loop
and
sub
fstpl
mov
cmpsb
hlt
mov
int3
mov
lods
cmp
mov
adc
sub
sbb
inc
mov
fsub
mov
mov
push
dec
aad
gs
adc
inc
movsl
sbb
scas
test
push
cli
mov
jge
pop
mull
push
nop
iret
test
imul
mov
xchg
daa
sub
xchg
sarl
ret
lcall
icebp
adc
je
loop
sarl
addr16
mov
cmpsb
int3
into
xorl
call
stc
mov
jecxz
mov
fdivl
rcll
xor
jne
and
sbb
add
add
clc
jb
scas
js
iret
sbb
fdivrs
cmp
and
jp
lret
lahf
xor
sub
setge
mov
xchg
jno
cmpsb
js
lods
stos
push
loopne
adc
cs
jecxz
mov
fdivr
ss
mov
js
xchg
mov
out
push
pusha
or
pop
pop
bound
ljmp
in
repnz
lds
jp
stos
shlb
add
sbb
cltd
fcompl
sbb
in
pop
popf
mov
aad
fsubl
cmpsb
test
popf
je
or
xchg
mov
cli
pop
push
mov
pushf
clc
cmc
xchg
pusha
imul
das
sbb
sbb
xor
sbb
js
popf
jns
mov
fsubrl
mov
outsb
shll
fidivrs
mov
mov
sbb
mov
adc
loopne
mov
fidivl
js
xchg
mov
out
sbb
mov
push
popa
sbb
and
filds
adc
xor
clc
cmpsl
push
loop
mov
outsb
adc
pop
jp
cmp
sub
test
xchg
mov
jmp
shrb
push
call
cmp
push
test
hlt
mov
jb
or
pop
fdiv
or
cmpsl
mov
push
enter
test
rcrb
aaa
inc
and
aad
fsubrl
dec
test
and
xchg
sub
popf
repnz
arpl
inc
cmp
jb
adc
js
cmp
push
jmp
push
inc
hlt
clc
mov
ss
mov
loop
xorps
stos
fisubs
mov
sbb
into
mov
inc
js
lods
push
push
push
cmpsl
adc
pop
jecxz
mov
fcoml
ss
jg
icebp
mov
jp
cmp
and
jmp
sahf
mov
enter
jecxz
mov
fdivrl
das
lret
jl
inc
je
nop
js
xchg
dec
push
or
sub
popf
push
cs
fwait
sbb
mull
jns
and
test
mov
dec
popf
cmpsb
xorb
ficompl
repz
sub
xor
jecxz
fwait
cli
icebp
test
xorl
mov
rol
sarb
mov
add
pushf
clc
aaa
es
inc
iret
jns
stos
hlt
pop
lea
xchg
cmpsb
pusha
scas
push
cwtl
ret
xchg
jb
ss
rolb
cmpsb
ljmp
push
jne
adc
roll
cmp
ja
shl
lahf
icebp
inc
scas
sub
xchg
out
push
mov
add
push
mov
les
jl
in
mov
maskmovq
testl
push
pop
jp
nop
pop
scas
std
rcll
pop
jae
and
les
hlt
leave
mov
fmuls
jo
lods
negb
or
sub
dec
lahf
sbb
es
nop
pop
fldenv
andb
inc
jle
les
xor
rcrb
dec
loope
icebp
inc
lcall
je
rolb
inc
push
jge
ss
inc
hlt
test
xor
shlb
and
in
xor
out
int
dec
inc
div
fstl
mov
daa
ja
dec
pop
inc
sahf
pusha
icebp
stos
cmc
sub
ret
cmp
mov
lea
xchg
inc
call
and
jecxz
push
ret
push
jae
dec
adc
jle
cld
sbb
push
sahf
mov
fstps
xchg
jno
pop
push
iret
push
mov
sub
pop
ret
pop
sub
mov
sbb
mul
mov
mov
ret
xchg
dec
ret
mov
mov
lcall
add
jp
cmpsl
lcall
and
xchg
not
push
xchg
jmp
inc
xor
sub
push
js
subb
adc
cmc
xchg
mov
aad
fisubs
fs
sti
out
sbb
sbb
pop
loop
cwtl
mov
popl
inc
cmpsb
inc
popa
out
out
sbb
ficoml
movsl
mov
cltd
sbbb
add
push
or
out
pop
mov
push
sub
call
mov
push
les
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
push
fsubs
rorl
sub
push
mov
lret
cmp
hlt
xchg
clc
ret
cmp
mov
push
addl
faddl
std
mov
pop
rorb
xchg
sub
test
lahf
ds
ret
jp
sahf
xchg
subl
jge
aaa
mov
adc
fsubl
test
loope
pop
jb
outsl
in
push
jo
pop
mov
add
mov
jns
mov
enter
add
add
push
cmp
adc
add
in
inc
jecxz
xchg
adc
xorl
lahf
jo
xor
test
and
js
and
and
or
js
fstpt
adc
dec
xorb
jne
sub
nop
ja
ret
mov
cmpsb
jne
cmp
lea
pop
out
push
mov
orb
in
cli
repz
mov
rol
enter
mov
imul
and
xchg
xor
mov
ret
sbb
mov
jbe
insb
gs
sbb
cld
or
test
push
out
mov
mov
icebp
repz
mov
decl
test
hlt
gs
sarb
add
xchg
movsb
lds
push
sub
bswap
repnz
out
sub
das
sub
jmp
stos
icebp
add
jle
mov
iret
pop
mov
add
jne
rol
add
inc
and
repnz
push
jp
or
add
lea
adc
sbb
imul
repnz
and
cli
je
xchg
xchg
ljmp
mov
push
push
or
daa
add
aas
mov
and
pop
testb
mov
arpl
sahf
mov
aad
xorb
mov
mov
jge
out
push
jnp
out
stc
setbe
mov
lret
push
mov
xchg
cmp
ss
sub
xchg
ret
inc
xorl
shll
test
and
lods
ds
dec
daa
test
xor
stos
out
push
xchg
mov
mov
xlat
je
imul
movsb
adc
das
cmpsb
dec
and
mov
loop
cld
adcb
pushf
mov
ljmp
add
sbb
add
ja
mov
fistps
fstps
xor
or
loopne
loope
pop
jp
aam
hlt
pusha
xchg
popa
pop
xor
mov
push
test
push
rorb
push
je
cmp
outsb
mov
push
aad
leave
jmp
scas
push
call
stos
mov
sub
into
pop
push
push
inc
add
repz
pop
dec
jmp
cmc
inc
cmc
dec
aad
cmp
shrb
mov
inc
stos
fs
push
into
out
bound
rorl
inc
test
mov
loopne
mov
loop
dec
cld
dec
push
sub
filds
data16
mov
pop
xchg
arpl
mov
xor
or
sbbb
dec
xchg
js
aaa
pop
or
ljmp
mov
notl
dec
movsl
int3
and
inc
jne
and
lods
clc
lret
testb
adcl
xor
jle
push
insb
push
sbb
adc
lods
mov
lock
out
out
fsubl
popa
in
dec
loope
in
xor
mov
jmp
movsb
adc
test
sbb
ret
ja,pn
fcmovnb
mov
mov
js
ja
mov
dec
repz
mov
mov
loope
pop
test
inc
push
mov
sahf
sti
sahf
in
add
adc
pop
push
frstor
gs
cli
or
jns
imul
mov
adc
mov
push
loop
push
pop
xchg
cmp
xlat
arpl
mov
scas
shlb
pop
inc
sub
and
int3
jne
std
imul
sbb
loop
aam
jl
add
out
sub
cmp
in
ror
or
repz
out
addr16
test
out
push
repnz
shl
xchg
mov
jbe
aam
rcll
rorl
pop
mov
adc
aad
add
mov
jb
out
add
push
dec
je
loopne
mov
jb
pop
insb
cli
dec
test
xor
add
rcll
repnz
push
je
fidivrl
lahf
popa
shufps
add
adc
inc
sbb
je
fcomp
push
int
std
cmp
scas
pop
out
cwtl
fldenv
pop
dec
inc
aam
lods
pop
mov
inc
loop
test
xchg
in
popa
popf
gs
cli
mov
push
inc
sbbb
or
insb
adc
and
mul
jne
in
out
xchg
jo
sti
or
cmpsl
movsb
add
push
jge
xor
iret
mov
or
loop
xor
mov
mov
add
ret
jmp
add
mov
hlt
jne
add
je
xor
ja
mov
push
imul
ss
jl
ret
bound
int
sbb
xor
pop
mov
xchg
cld
or
xor
mov
mov
fistpll
mov
jne
pushf
xor
lock
je
jl
mov
mov
or
dec
dec
ja
cwtl
xchg
pop
sub
jg
cmp
fs
into
and
gs
jmp
xchg
push
cmp
jmp
out
cmp
scas
xor
xor
mov
fcomi
leave
jne
and
shll
je
rorb
sbb
cmpb
xchg
pushf
and
popa
fadds
pop
push
out
sub
icebp
data16
bound
mov
repz
xor
sbbb
inc
popf
pop
aad
rcr
mov
jl
jo
aas
je
jle
add
mov
lock
into
jl
addr16
xor
lds
out
sbb
sbb
rcr
xor
cmp
inc
pop
mov
mov
jge
cmpsl
mov
sbb
mov
jnp
xchg
mov
or
cltd
xor
mov
loopne
clc
flds
push
inc
gs
pop
test
pop
add
jne
sahf
mov
cmp
ret
stos
xchg
inc
aam
mov
mov
scas
xchg
sbb
rclb
loope
xor
adc
xchg
mov
add
pusha
flds
mov
sub
add
loop
push
int
sbb
xchg
insl
lret
mov
cld
je
inc
outsl
jne
jbe
sub
dec
or
push
sbb
jle
pop
mov
mov
adcl
sbb
and
shlb
inc
aad
cld
stos
into
and
jns
clc
adc
mov
mov
mov
pop
les
or
and
mov
jno
mov
adc
cli
fidivrl
mov
push
cli
jno
mov
xor
out
test
and
popf
popa
cmp
lcall
fistpl
out
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
cltd
add
dec
int
movsb
in
mov
aaa
loop
inc
fsubrl
imul
out
sbb
outsl
sbb
pop
add
mov
jb
dec
pop
sub
adc
cmpsb
inc
aas
andl
push
sbb
shl
imulb
popf
xchg
rcll
jmp
sub
and
movaps
in
es
adc
jp
out
sub
fcoml
sahf
sti
inc
js
mov
mov
nop
mulb
pop
add
sti
sbb
adc
das
js
loop
test
loopne
cmp
and
cmpsb
out
out
inc
rorb
shrl
scas
push
mov
mov
jg
repz
mov
jnp
pop
adc
dec
inc
mov
inc
mov
cltd
ljmp
test
mov
mov
stos
shlb
push
sub
in
fcmovnbe
cmp
das
mov
rcl
sub
push
xchg
int
fwait
stos
xchg
mov
push
pop
xchg
gs
mov
cmp
cmc
test
jmp
dec
inc
jg
xor
out
xchg
fdivrl
out
pop
imul
add
jp
cmpsl
in
mov
dec
jnp
cmc
xchg
subb
repnz
pop
cwtl
pop
mov
mov
es
ds
xchg
cld
cwtl
inc
inc
jne
shrb
jns
cltd
fmul
mov
mov
dec
sarl
call
aad
outsl
shrb
fcoml
mov
mov
dec
cld
imul
sahf
in
mov
dec
push
push
mov
mov
and
fs
mov
lods
jp
cmp
inc
shlb
int3
mov
xor
mov
stos
mov
repz
mov
movsl
xor
ror
jb
insb
loope
hlt
push
jo
xchg
jmp
jae
fs
ficoms
cwtl
scas
and
xlat
jbe
sahf
mov
dec
mov
cmc
ss
fdivrs
lds
inc
lret
cmp
cld
mov
mov
in
xlat
pusha
leave
cmp
inc
in
in
popf
xlat
out
mov
cmpsb
gs
adc
and
js
jmp
ror
outsl
out
stos
cli
lret
cmp
lcall
leave
and
ret
mov
movsl
stos
jae
loope
pop
test
sahf
mull
rcrl
jns
stos
push
mov
cmpsl
push
mov
xor
ljmp
sub
adc
mov
dec
lds
repz
sbb
pop
fistpll
in
xor
and
popa
data16
jae
inc
mov
dec
cmp
sahf
or
sub
stos
xchg
cli
insb
sbb
sahf
jnp
cs
pop
stc
hlt
lcall
mov
and
jl
jge
push
fstp
lods
iret
xorb
fildl
mov
test
jecxz
aad
std
ror
aaa
or
push
mov
dec
mov
sbb
mov
mov
dec
push
mov
xorb
mov
jbe
mov
icebp
jns
in
push
lods
fidivrl
xchg
mov
sbb
and
jnp
jnp
mov
orb
push
add
xchg
fstps
gs
xchg
lret
mov
mov
xor
inc
rcrl
rep
jmp
add
or
icebp
cmp
insl
out
xor
mov
pop
repz
stos
leave
packssdw
cmp
push
imul
mov
xor
cltd
into
push
in
xchg
xchg
cmpsb
aaa
fs
ret
xchg
mov
dec
int3
fisttpl
sbb
dec
loope
pushf
cmc
imul
pop
xchg
idiv
jo
mov
pop
testl
gs
fcoms
in
mov
push
jl
lods
xchg
add
aam
test
dec
or
cmpl
mov
xorb
lret
push
rcll
mov
xchg
mov
not
aas
fidivs
stos
enter
loop
sub
fiaddl
mov
lret
mov
pushf
mov
add
repnz
mov
and
xchg
in
cltd
cmp
negl
adc
rcr
sarb
dec
dec
enter
xchg
cld
pop
pop
push
sti
mov
loopne
lret
xchg
jae
lds
clc
push
push
insl
aam
loop
pusha
jl
xor
fldl
xlat
lcall
gs
mov
fdivrl
xor
out
adc
addr16
jae
sub
aas
leave
sbb
fisttpl
movsb
fwait
lods
push
stos
add
push
jbe
or
adc
adc
xchg
and
adc
push
stc
xchg
jp
mov
in
sbb
and
imul
pop
cmp
and
dec
shr
fwait
jge
jns
movsb
push
faddl
outsl
cltd
sahf
mull
jb
stc
bound
push
cmpsl
adc
lods
and
ss
jb
inc
jmp
fbstp
int3
jb
mov
push
mov
dec
xchg
imul
or
std
pop
xchg
or
stc
add
add
mov
sarl
pop
in
ja
lock
scas
fistps
cld
cmp
xchg
cwtl
add
sbb
pop
leave
jl
add
lret
test
xrelease
push
mov
outsl
jnp
pop
xor
jo
cld
enter
or
cs
sbb
xor
dec
add
sub
mov
dec
push
sub
jo
repnz
mov
mov
add
mov
pop
pop
jbe
repnz
sub
ds
lcall
in
xor
int
scas
push
in
scas
ret
pop
lock
repz
and
push
adc
popa
movsl
bound
sbb
xchg
cmp
adc
and
jle
rclb
je
popf
ret
fidivrs
lcall
jnp
cmp
into
push
out
fadds
popa
jae
cmp
cwtl
popf
push
test
sbb
mov
lods
stc
sub
and
jmp
out
mov
outsl
or
xchg
mov
gs
lods
addr16
push
dec
xchg
cmpsb
push
loopne
imul
cwtl
jmp
jmp
xor
xchg
xor
inc
mov
pop
mov
push
pop
hlt
adc
xchg
ja
xchg
sub
mov
mov
cmpsl
mov
xchg
push
lcall
lods
jne
nop
jmp
push
idiv
fstps
in
dec
mov
stos
arpl
shll
aas
jns
pop
xor
xchg
adcl
emms
enter
addr16
pusha
dec
mov
out
xor
inc
adc
arpl
aad
xchg
or
or
pop
mov
mov
std
fwait
xchg
xor
sahf
xchg
jbe
cmpb
cmc
daa
mov
fs
xor
lret
in
push
scas
lods
mov
sahf
lea
sti
xor
and
gs
ret
mov
mov
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
lret
mov
jbe
and
movsb
and
mov
loop
and
and
mov
int
arpl
in
and
out
ljmp
jb
cltd
lcall
pop
dec
sub
pop
fidivrl
xor
mov
push
inc
mov
sbb
sahf
sahf
inc
aad
shr
sbb
mov
addr16
jmp
xor
aaa
mov
in
cmp
or
movsl
aad
sub
dec
xchg
mov
mov
cld
add
mov
dec
xorb
icebp
cmc
xor
jp
out
xchg
xchg
sbb
imul
std
jo
mov
push
popa
call
bound
sbb
pop
lcall
scas
mov
gs
das
cmp
out
and
pusha
pushf
xor
mov
dec
mov
pusha
sub
cmpxchg
outsb
pop
jge
int
inc
inc
jae
pushl
fwait
xchg
nop
rcrb
push
xchg
mov
imul
xchg
mov
rcl
jg
test
push
mov
mov
aas
icebp
dec
jecxz
incl
jne
fcoml
outsb
rcrb
mov
push
adc
fdivrl
ds
sbb
inc
inc
stos
jecxz
and
mov
mov
sub
cmc
cmp
fs
adc
cmc
hlt
push
push
dec
test
and
push
xor
imul
mov
scas
sahf
mov
adc
xchg
sub
aas
pop
push
mov
outsb
fcmovnb
push
aad
test
lcall
ret
push
jle
mov
iret
adc
outsb
les
jmp
sub
gs
je
jae
fldt
jmp
jbe
jmp
xlat
xlat
adc
adc
pop
hlt
pop
pop
imul
mov
xor
into
repz
dec
pop
test
mov
sbb
cmp
es
shlb
iret
sti
test
int3
lods
subl
pop
push
fs
jg
add
push
dec
aam
push
inc
push
mov
int3
push
cmpsb
add
cwtl
test
fwait
scas
sub
test
or
push
fidivrl
es
mov
lods
or
repnz
or
sbb
cmpsb
shl
lret
sti
pop
ljmp
insl
scas
insl
pop
xor
icebp
out
jp
cmc
cmpsl
in
push
and
mov
icebp
cmp
fidivs
adc
mov
cmpsb
adc
push
nop
pushf
push
cmpsb
sub
cmpsb
int
testl
adc
xor
pop
out
adc
call
data16
shlb
popa
xchg
push
js
ret
mov
and
clc
outsl
jecxz
enter
dec
xchg
xchg
xor
jp
aad
test
or
movsl
cmp
mov
mov
sahf
pop
fstpt
xlat
jne
push
cmpsl
xchg
pop
mov
sbb
lds
xchg
stc
pusha
xchg
ret
outsl
mov
fisubl
js
fnstsw
test
and
push
push
push
cmp
mov
fwait
mov
call
xchg
loope
mov
js
jmp
sub
pop
sub
out
pop
cli
xor
pop
outsl
dec
add
cmc
cmc
fnclex
jl
rcrb
sub
dec
jge
xor
arpl
repnz
ds
loopne
adc
mov
cmpsl
add
in
movsl
jl
pop
pop
iret
jo
aaa
mov
and
icebp
xchg
lock
adc
pop
sbb
inc
mov
rcll
jmp
sbb
test
lahf
or
xor
je
arpl
mov
stos
cltd
push
enter
and
test
pop
inc
push
iret
mov
fwait
jg
xor
out
fs
pop
jge
mov
adc
add
lea
mov
jnp
and
cmc
daa
mov
mov
into
imul
mov
pop
lock
popf
jg
mov
pusha
inc
jno
cmp
mov
sbb
scas
jecxz
sbb
fbstp
push
popf
cmpl
movsl
xchg
cmp
adc
pop
inc
add
cmc
mov
mov
sbb
adc
dec
data16
xchg
xor
sti
adc
jns
add
int3
xor
mov
test
repnz
loopne
in
sub
sbb
int
fisttpll
ret
mov
popa
mov
mov
mov
stos
xchg
fisubl
mov
and
jg
out
lret
mov
movsb
mov
andl
xchg
shlb
adc
loope
or
cld
xchg
add
ret
out
mov
and
and
fwait
daa
push
xor
data16
adc
lahf
pusha
and
jg
dec
jno
fwait
and
and
and
add
mov
out
jae
out
scas
std
fimull
adcl
fsubr
pop
sbb
xor
fiadds
movb
jo
enter
jb
test
aas
mov
scas
sbbl
mov
sub
lcall
push
mov
popf
xchg
cli
dec
andl
stc
addr16
mov
addr16
mov
xchg
adc
into
push
arpl
out
push
or
pop
xlat
lahf
jmp
lahf
scas
sbb
or
movsl
popa
js
xchg
mov
push
cltd
daa
stc
and
push
daa
lret
int
dec
rcll
into
pop
fidivrl
xchg
xor
cmp
cmp
fwait
ret
mov
stc
push
sub
mov
lret
leave
mov
jge
mov
scas
mov
shll
or
dec
popa
add
fs
je
ds
mov
outsb
push
dec
xorb
icebp
dec
loope
outsl
ja
lahf
push
mov
decb
dec
dec
mov
mov
add
sbb
mov
lret
push
inc
or
xor
inc
sub
pop
ret
dec
cmp
je
mov
jns
add
cmp
out
jl
cmp
pop
testb
jl
push
ja
mov
push
xchg
push
xchg
inc
orl
sub
jno,pn
call
aaa
decb
jae
stc
insl
lea
mov
bound
gs
sahf
test
dec
addr16
nop
ljmp
xchg
mov
inc
hlt
fwait
sti
scas
sbb
xchg
cltd
ds
in
out
mov
lods
adc
cmc
cmp
push
gs
loope
inc
gs
loope
test
clc
outsb
pop
test
fsubl
mov
dec
mov
mov
dec
sahf
fwait
jl
dec
cmp
out
or
jl
xchg
inc
mov
dec
scas
cmp
dec
adc
jmp
jno
loop
sahf
pop
xlat
adc
push
jp
arpl
pop
mov
cmp
call
js
cmpsl
jmp
sbb
sub
es
mov
sti
dec
out
mov
ficoml
sti
inc
es
aam
int
ret
jb
test
repz
cs
in
xchg
sti
adc
es
inc
push
mov
mov
push
cmpsl
jo
int3
les
ja
sub
addb
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
mov
mov
pop
nop
dec
shl
jmp
ret
movsb
enter
pop
mov
cmp
cmpsl
fwait
and
pop
aaa
sahf
test
sub
xchg
cli
jecxz
mov
fdivrl
pop
sbb
insl
popf
mov
jp
enter
ja
cmpsl
sbb
pushl
rclb
xor
popa
inc
and
mov
pop
and
push
sub
pusha
or
sbb
fimuls
jmp
mov
mov
and
cmc
lods
xchg
xorl
aas
mov
mov
inc
mov
lds
mov
mov
repnz
pop
test
loopne
push
add
jge
lods
cmp
xor
cwtl
mov
xchg
xor
pop
sub
xchg
fisttpl
rcll
popa
cmp
sbb
sbb
fisubs
lret
and
mov
stc
movsl
outsl
lds
jbe
pop
xor
sub
test
movsb
test
andl
imul
cli
flds
cwtl
or
push
cmp
dec
addr16
push
push
jl
je
data16
pop
pushf
jge
call
cmp
xchg
jle
add
jmp
mov
f2xm1
add
xlat
popf
lock
sbb
movsb
add
sub
mov
fisttpl
mov
outsb
mov
shrl
xor
lods
jg
xlat
and
imulb
insb
inc
outsl
add
lret
push
dec
cmp
loop
xor
lds
mov
xor
cmpsl
icebp
jp
fnstsw
pop
scas
mov
add
jno
push
outsb
lcall
cli
inc
pop
in
xchg
adc
inc
add
scas
fsubr
fmuls
mov
push
scas
mov
or
inc
int3
xchg
sbb
cmp
sub
xor
pop
movsb
mov
out
push
pushf
andb
shlb
add
mov
pop
ret
xor
sbb
xor
xchg
pushf
mov
sbb
pop
adc
and
jbe
dec
pop
inc
sti
add
jg
jl
mov
and
xor
mov
inc
pop
push
aas
xchg
cli
xchg
xchg
rorl
aad
mov
xor
jp
mov
imul
pop
out
mov
lret
fwait
dec
inc
aam
ja
popa
shll
mov
add
xchg
movsb
ror
xor
inc
into
dec
xchg
rcrb
mov
sub
dec
xlat
repz
ficoms
pop
inc
mov
or
fdivrs
cmp
iret
lcall
lock
in
arpl
mov
mov
xchg
dec
out
add
dec
adc
loopne
push
push
pop
lret
lds
sub
unpckhps
popf
push
push
push
xchg
push
in
aad
fists
add
mov
aas
jmp
mulb
sub
mov
call
adc
outsb
sub
mov
inc
cmp
mov
mov
push
nop
adc
sahf
movsl
lret
cmpsl
pop
cmpsb
add
data16
mov
mov
xorb
or
fbld
fstpl
xor
pop
cmp
filds
mov
jmp
out
sbb
xchg
push
sub
pop
and
jl
jae
xchg
inc
aad
sub
outsl
mov
nop
aam
cmp
mov
xor
adc
xchg
inc
in
push
cmp
or
clc
xchg
xchg
outsb
nop
imul
cwtl
xchg
scas
sti
and
xor
jne
push
lahf
mov
adc
add
mov
pushaw
loope
mov
cmp
jbe
add
or
dec
in
ja
add
hlt
xchg
adc
das
adc
sahf
ret
push
cmc
adc
xor
repnz
sbb
stc
xchg
mov
jmp
int3
js
fwait
popa
fnsave
cld
inc
xlat
gs
in
aaa
mov
xchg
mov
fcmovnu
xchg
cmp
adc
data16
mov
shl
sub
shll
push
loope
jl
fcmove
sbb
jno
nop
in
movsl
jbe
andl
mov
xchg
movsl
mov
ret
or
xor
lahf
sub
daa
push
or
icebp
rcl
aad
daa
mov
mov
add
dec
scas
dec
jne
cmp
jne
lock
xor
cwtl
xor
test
xor
sub
arpl
and
xor
inc
push
dec
jns
rorb
daa
sti
sub
frstor
test
and
flds
pop
mov
dec
adc
xchg
repnz
into
adc
clc
add
lds
addr16
jge
pushf
jbe
fsub
in
insl
pop
mov
jb
push
pop
mov
rep
lock
inc
jmp
clc
lock
or
in
in
loopne
bound
lahf
xchg
jge
loope
cmp
jg
sub
ds
xchg
inc
lea
shll
jecxz
aad
adc
gs
sbb
cs
ficomps
adc
lods
mov
inc
cmp
out
or
mov
xor
adc
das
fs
fdivs
cmpsl
pusha
fistpl
js
frstor
xchg
mov
add
js
sbb
sbb
test
pop
xchg
pop
cmc
inc
arpl
jl
nop
inc
pop
or
or
lcall
adc
bnd
lret
cwtl
cmp
ljmp
jb
mov
test
icebp
dec
dec
xchg
push
test
std
cs
sbb
int3
data16
arpl
push
or
test
cwtl
repnz
add
cmpb
add
dec
lods
and
je
sbb
dec
adc
ss
or
xor
xor
add
in
push
cltd
std
scas
mov
sub
push
nop
jle
inc
mov
in
stc
cltd
cmpsl
cwtl
lcall
cli
shlb
scas
out
and
std
cmp
xchg
dec
push
rol
aaa
aad
addl
mov
jmp
jns
addb
stos
ja
adc
adc
inc
test
cmpsl
dec
sub
pop
lea
repz
out
aaa
enter
adc
mov
mov
and
xlat
jbe
sti
mov
pop
sbb
jmp
cmp
sbb
sub
nop
fsubrl
jns
adc
dec
and
jb
lock
cmp
jne
repnz
enter
jbe
cwtl
and
shrb
adc
popf
fsubr
cwtl
loop
movb
gs
mov
adc
mov
in
in
insb
repnz
sarb
out
jne
pop
fidivrs
fldcw
in
out
je
and
inc
lahf
in
daa
jmp
inc
add
or
daa
push
sti
xchg
mov
movsl
push
and
fdivrp
jge
dec
aas
sbb
jmp
cmpsl
icebp
popa
pushf
test
jmp
fwait
add
add
jnp
push
aam
scas
popa
jns
lret
push
dec
sub
mov
in
and
mov
add
inc
clc
out
js
sti
jp
psubsb
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jne
out
test
int
mov
push
cmp
pop
mov
fsubrl
lret
xchg
mov
stos
in
pop
cltd
sbb
cmp
out
fsubl
pop
and
mov
cmp
and
adc
sbb
je
mov
testb
pop
mov
dec
push
inc
enter
test
mov
mov
fcompl
outsl
jbe
es
int
jb
fmull
fidivl
ds
jae
imul
jecxz
ja
pop
test
loopne
cmpsb
pusha
inc
les
outsb
push
mov
das
xorl
and
mov
divl
icebp
loopne
into
or
pop
push
and
shll
into
call
xor
loopne
pop
or
sbb
push
shrb
ja
cmovnp
mov
shlb
scas
insl
pop
xchg
sbb
cmp
pop
or
test
je
mov
xor
jmp
inc
cmpsb
xlat
imul
sbb
icebp
lss
andb
ja
mov
sub
sub
inc
push
mov
outsl
pushf
inc
scas
cmp
test
mov
sub
cmp
inc
int3
jmp
sbb
gs
repz
or
rorb
adc
push
mov
pop
pop
and
imul
fwait
mov
add
mov
inc
pop
jl
ja
mov
and
xchg
dec
adc
push
cli
cwtl
rorl
scas
clc
and
sarb
pop
and
jle
dec
cmp
dec
sub
repnz
adc
int
scas
mov
adc
mov
add
mov
dec
js
stc
pop
mov
sbb
adc
loop
mov
inc
xor
lret
loopne
mov
pop
orl
pop
xorb
ljmp
dec
cmp
jb
lods
movsb
fwait
xor
ds
pop
add
lock
call
icebp
ret
mov
arpl
mov
insb
ret
sbb
inc
dec
fimuls
jmp
pop
adc
adc
lds
mov
fs
push
fwait
push
repz
pop
xchg
inc
cwtl
aad
mov
inc
mov
shl
fsubr
fsts
sub
hlt
int
and
imul
arpl
icebp
pushf
adc
and
jbe
xchg
sbb
ret
in
dec
popf
jbe
in
cwtl
fmuls
icebp
les
sbb
fmuls
fldcw
jo
sub
push
push
mov
sub
mov
mov
in
fnstcw
push
and
clc
and
adcb
imul
jne
aaa
cltd
xchg
pop
fs
mov
sbb
into
and
int3
cmpsl
push
ficompl
sub
test
addl
repz
and
in
mov
aam
and
mov
in
push
cmp
pop
sarl
jb
cltd
push
mov
mov
test
adcb
int3
adc
int3
dec
push
push
mov
mov
sbb
nop
push
in
and
jo
scas
lea
sub
sbb
jg
adc
xor
push
or
popf
js
ret
add
faddp
sub
jle
dec
mov
push
sub
inc
push
xchg
in
flds
add
out
mov
mov
shll
test
repz
pop
fxch
xchg
sbb
fldenv
jmp
flds
lahf
push
pop
mov
pop
ss
jmp
sbb
xchg
and
mov
sbb
push
and
push
mov
fisttpl
arpl
mov
mov
ja
xchg
pop
or
scas
sti
lret
push
movsl
push
or
outsl
cs
imul
add
and
fdiv
inc
sub
orb
mov
cmpsb
jnp
lods
ficompl
pop
nop
in
fsubs
jg
loope
dec
lea
dec
mov
in
mov
nop
rclb
add
inc
mov
nop
loopne
outsb
pop
or
pusha
dec
call
inc
sbb
inc
out
insb
mov
daa
sub
int3
and
sub
xor
mov
jns
cmc
movsb
ss
push
mov
jg
jmp
add
mov
out
cmp
xor
test
pop
and
push
dec
xor
adc
fldl
popf
inc
es
sbb
ljmp
adc
push
sub
shrl
mov
stos
inc
loopne
in
mov
aas
xor
pop
adc
pop
inc
jbe
fcoms
mov
push
inc
mov
aam
nop
sbb
mov
lods
xor
shlb
push
mov
xor
bound
adc
fldt
sbb
mov
mov
rclb
pop
add
push
js
adc
in
std
pop
lret
sub
and
outsl
mov
lret
push
cwtl
cmp
xlat
subb
and
fbld
mov
inc
sub
xor
test
in
sbb
or
or
adc
aaa
js
mov
or
xchg
daa
mov
mov
arpl
aaa
adc
sti
fidivl
cltd
inc
int3
sahf
outsb
adc
cmp
int3
mov
and
mov
mov
dec
pop
stos
jp
daa
daa
scas
push
arpl
mov
cmp
mov
fstl
nop
mov
cmp
mov
ret
pusha
movsl
loop
ljmp
xchg
xchg
adc
enter
or
xor
rorl
mov
jg
mov
xchg
ljmp
push
jmp
adc
add
popa
xchg
adc
push
sbb
inc
aaa
mov
leave
in
int3
jecxz
outsb
jbe
fwait
inc
add
and
sbb
pop
mov
movb
fcoms
fistpll
jg
push
fldcw
mov
ds
rcrl
ficoms
popf
adc
mov
sbb
jl
rolb
sti
jb
jle
cli
loop
mov
xor
mov
adc
add
push
mov
adc
xchg
push
cmp
shlb
ret
push
mov
cmpsl
cs
mov
out
repz
lahf
gs
sub
popf
cmp
mov
xor
fsubr
ret
jnp
jmp
mov
mov
push
and
test
jo
lcall
ret
mov
push
mov
js
aam
scas
ljmp
cmp
push
in
and
cmp
arpl
adc
sbb
jg
ret
mov
aaa
or
xchg
mov
sbbl
lret
xchg
popf
sub
adc
repz
popa
dec
setne
gs
jbe
push
ja
nop
imul
outsl
rcll
dec
test
xchg
test
jmp
stos
xor
jle
cli
ljmp
scas
fnstcw
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
in
movsl
aas
lahf
mov
cmp
jne
cwtl
mov
xchg
jp
dec
cmpsl
test
sahf
mov
push
fmul
mov
xchg
js
lret
sahf
cld
stos
xor
pusha
mov
movsl
mov
test
sarl
lret
push
jne
pusha
inc
jns
sub
and
jne
outsl
imul
in
out
push
scas
in
dec
fwait
scas
scas
push
fstpl
push
push
repz
lcall
inc
out
add
sahf
daa
mov
call
int3
subb
cli
popa
and
lods
cmp
ret
mov
mov
push
mov
out
pop
out
pusha
mov
mov
push
lret
into
xchg
or
or
test
pusha
sbb
je
or
dec
in
mov
jne
cmpsl
scas
out
add
ds
lret
dec
ja
js
jecxz
pop
or
gs
hlt
imul
pop
sahf
ljmp
mov
dec
fidivl
cmp
imul
xchg
jecxz
shl
xor
push
cmpsl
bound
ret
dec
insl
sarl
and
mov
mov
pop
mov
fimuls
xor
jae
mov
jbe
mov
lock
std
pusha
addb
pop
and
and
fsubs
cltd
pop
mov
pop
scas
push
insb
mov
dec
lret
push
xchg
int
inc
js
enter
int3
cmp
cwtl
lahf
mov
jge
jl
insl
addr16
sti
dec
leave
mov
lret
sub
js
cmpsl
fnsave
jae
pop
sbbb
adc
sarw
repz
repz
jp
lods
jnp
mov
call
test
int3
lds
xor
pusha
pusha
adc
sub
lds
pop
popa
adc
inc
mov
xor
xchg
adc
xorl
add
movsb
pop
shlb
movsl
inc
jae
call
insb
mov
enter
ss
sbb
in
ficoms
test
jecxz
imul
popa
jo
fdivrs
movsl
add
sub
xor
stc
cli
out
aas
mov
pop
push
add
lea
lock
das
jns
pop
pop
jo
and
jmp
fisubs
pop
outsb
xchg
xchg
mov
loop
jb
xor
fwait
mov
dec
fld1
mov
dec
aaa
jnp
push
xchg
imul
add
jo
adc
mov
or
lods
pop
dec
xor
mov
jo
push
popa
mov
mov
cld
fadd
shrl
ret
insb
push
das
mov
mov
lods
add
push
sarl
fsubr
lods
mov
call
sbb
fdivl
cltd
cmpsl
pop
xor
insb
repz
xor
dec
lock
xchg
aam
aam
jmp
inc
and
cmc
cmpsb
aas
sub
mov
aaa
push
xchg
pop
aam
dec
mov
push
push
scas
adc
inc
mov
add
lock
push
les
push
enter
dec
aas
pusha
fwait
cmp
lods
scas
pop
test
and
cmp
jp
xchg
aad
jo
mov
inc
icebp
icebp
pop
push
sub
cmc
jbe
jg
sub
and
sbb
out
mov
cmc
and
stos
into
ficoml
mov
xchg
lret
rcr
push
ljmp
xor
mov
mov
in
imul
sti
mov
cmpsb
or
mov
es
sahf
mov
sbb
ret
out
pusha
out
mov
aas
roll
sbb
cltd
repz
cli
add
shl
enter
or
ficompl
out
mov
cmp
xor
enter
in
adc
push
xchg
add
jp
lods
pusha
sbb
jg
out
insb
sub
lock
hlt
sbb
ret
pusha
sbb
mov
lods
inc
in
xchg
xchg
dec
xchg
push
int3
lock
and
pusha
sbb
pop
mov
lret
es
inc
inc
push
test
cltd
out
ja
push
adc
mov
mov
pop
movsl
sub
ror
adc
pop
shrl
xor
lods
push
fstps
popf
mov
movsb
inc
push
movsl
ja
ror
pushl
out
inc
and
test
jnp
hlt
sti
mov
mov
cwtl
mov
sbbl
pop
arpl
ss
adc
mov
std
jmp
or
movsb
mov
mov
xchg
je
jns
mov
jne
jmp
and
xchg
mov
sbb
mov
leavew
pop
popf
and
outsb
cmp
jo
fldl
mov
lock
popf
xorb
xor
mov
xchg
jo
sbb
mov
xchg
xlat
scas
icebp
aad
and
out
xor
pop
rolb
inc
imul
jmp
sti
sub
popf
mov
shld
cmp
sub
cmp
sbb
xchg
das
sbb
arpl
mov
stos
xor
inc
repnz
jnp
push
mov
gs
xor
cmc
adc
push
mov
push
stos
mov
mov
and
imul
popa
sub
addr16
cmpsb
cs
push
mov
inc
xchg
int3
ljmp
out
push
sub
or
loope
inc
or
push
and
adc
lods
mov
add
jns
nop
mov
sti
push
lea
sbb
adc
sti
inc
addr16
push
sarb
jmp
in
enter
fidivrs
xchg
mov
rclb
cltd
xor
mov
in
hlt
jae
mov
gs
outsl
out
sahf
mov
int
jle
xchg
sub
mov
sbb
xchg
mov
in
push
xchg
stos
outsl
add
mov
std
mov
pusha
dec
xchg
movsb
movsb
mov
loope
lret
ret
jb
mov
insl
xlat
push
call
outsb
lret
pop
jmp
inc
sbb
pop
arpl
mov
addb
stos
nop
xor
mov
adc
adc
fidivrl
pusha
adc
jb
cmpsb
jg
cs
mov
mov
or
xor
pop
ljmp
jae
lock
sbb
inc
lret
fsub
sub
jae
cmp
mov
push
mov
or
jb
sub
xchg
or
in
icebp
add
movsb
push
xlat
jl
je
jg
jmp
insb
stc
mov
mov
sahf
insl
insb
and
lods
sub
ret
xchg
cmc
sarb
xchg
xor
pushf
and
sub
dec
jmp
fstpt
sti
sbb
sahf
mov
or
mov
iret
out
lds
cmp
divb
daa
pushf
add
decb
push
lcall
adc
rcrl
cmp
loop
scas
sahf
hlt
movsb
int3
inc
lret
mov
sub
jge
movsl
sarb
mov
addr16
pop
and
nop
push
push
push
adc
es
and
adc
scas
or
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
test
jge
mov
xchg
mov
cmp
icebp
je
nop
aam
loopne
lea
sbb
cmp
jg
in
in
scas
insb
push
pop
int
fiaddl
fidivl
push
stos
xlat
jmp
or
xor
mov
xorb
add
enter
dec
aad
test
cltd
cwtl
add
mov
inc
mov
xorl
js
je
xlat
js
imul
inc
dec
hlt
dec
jge
jecxz
into
add
imul
push
lods
iret
enter
mov
lods
xchg
pop
xlat
jecxz
std
jne
lods
jne
mov
jbe
test
pop
sbb
mov
adc
sub
and
add
inc
jl
pop
pop
cwtl
aam
adc
push
ret
mov
mov
arpl
inc
mov
sub
jle
cmp
outsl
fidivl
mov
fucom
or
lret
push
mov
pop
loope
int3
mov
pusha
dec
dec
test
mov
sbb
mov
mov
jnp
sbb
and
rorb
test
sbb
sub
loopne
iret
mov
pusha
sub
mov
ja
sub
jnp
into
jo
sbb
mov
sbb
cmp
cmp
cwtl
push
jmpw
sbb
jp
or
out
inc
in
outsl
push
int3
scas
fs
jmp
cs
scas
jge
jne
out
jl
xchg
cltd
fcmove
xor
xchg
pop
popa
pop
sub
bound
nop
inc
xchg
xchg
fistpll
pop
mov
mov
lods
dec
and
pop
adc
jge
fwait
into
ret
scas
enter
or
je
gs
pusha
sub
icebp
mov
adc
scas
pop
mov
aad
lods
push
pop
mov
adc
sbb
sbb
adc
daa
push
cwtl
rclb
in
and
push
testl
mov
jnp
mov
sub
mov
add
fdivs
fs
imul
in
mov
lock
rcrl
cld
xchg
sub
enter
nop
stos
mov
test
mov
adc
or
xchg
xchg
enter
andb
popa
adc
xchg
jo
shlb
or
add
jp
jb
cmp
aam
sub
jbe
ja
shlb
insb
sbb
dec
pop
imul
mov
push
pop
push
stos
xchg
pop
xchg
in
hlt
mov
loopne
xchg
add
or
dec
fsubr
dec
mov
xor
cmp
adc
clc
pop
mov
inc
enter
pushf
add
jl
push
loope
outsb
jecxz
icebp
mov
loope
lods
repz
pop
adc
mov
mov
fwait
dec
sar
inc
ret
fcoml
cmp
pop
xor
cmp
add
dec
sub
push
cwtl
jmp
cli
add
cmp
ret
ljmp
dec
shrb
test
loopne
nop
in
sbb
xor
in
or
mov
push
xchg
pop
pop
pop
ss
xor
jno
out
mov
sub
sub
cli
cmp
sub
pop
pushf
lock
xlat
cmp
pop
xchg
mov
rolb
mov
mov
mov
popa
push
stos
outsl
or
insb
adc
sub
push
imulb
jnp
sbb
jb
pop
stos
out
jnp
add
jmp
iret
inc
cmc
add
filds
push
push
jp
dec
hlt
rorl
in
cmpsl
adc
pusha
and
lret
sahf
cmc
sti
push
pop
notl
fld
aas
inc
jae
cwtl
or
jecxz
inc
nop
push
dec
sahf
and
pop
and
dec
sbb
dec
movsb
and
rcrb
xor
cmpsb
jmp
repnz
sub
cmp
push
pop
cmp
xchg
adc
andb
xchg
cmp
std
pop
mov
sub
pop
push
loopne
aaa
add
adc
mov
or
push
cwtl
lods
sbb
les
sbb
lahf
dec
pop
mov
jg
fwait
xchg
ficoml
push
push
add
mov
jo
loop
out
add
fsubr
adc
jmp
stc
clc
cmp
nop
push
mov
pop
jnp
outsb
mov
daa
add
stc
cli
sub
scas
xor
ds
loop
fcom
fwait
mov
loop
dec
pop
add
pop
xor
mov
insl
int3
in
mov
fistl
xorl
add
xor
ljmp
lret
pop
sbb
das
stos
cmpsl
pop
lret
scas
stc
cmpsl
push
insb
lock
shll
mov
xchg
cmpsb
scas
int
mov
iret
stos
xchg
es
shll
cs
lret
pushf
jge
pop
and
mov
or
lock
pop
cmp
and
add
int
add
imul
adc
gs
dec
jae
add
loop
sahf
lcall
cltd
shl
in
push
xchg
pusha
ja
fwait
test
jg
stos
mov
nop
mov
cmp
mov
fsubr
ret
testl
dec
jb
fdivrl
jmp
jle
and
cmp
or
sbb
test
xor
xchg
into
rorl
fcompl
lock
fcom
nop
xlat
adc
and
push
adc
cmpsl
sbb
in
xor
rcrl
push
adc
push
icebp
into
in
je
sub
mov
ror
ret
ss
shlb
andl
mov
icebp
stc
cld
cli
pop
dec
enter
cmpl
sbbl
ficoms
lret
adc
or
jg
adc
add
sarl
jmp
jmp
mov
lods
mov
insb
push
test
cs
and
dec
cmp
popf
mov
fidivrs
mov
bound
xchg
inc
cmp
rcll
test
outsl
mov
repz
sahf
roll
mov
sub
and
pop
xor
ret
stc
insb
fstl
popf
out
inc
lods
ds
mov
adc
adc
imull
push
fsubs
loope
inc
arpl
xor
or
xor
pop
movsl
jge
dec
in
cld
inc
mov
cmc
jno
adc
cmp
movsl
shll
lock
push
push
in
fdiv
push
bound
sub
mov
loope
nop
mov
or
jg
icebp
add
dec
xchg
xchg
into
mov
adc
or
js
lahf
xchg
pop
lret
xlat
push
push
inc
mov
adc
jnp
loopne
pop
pusha
ret
adc
inc
sub
repz
in
rorb
lret
cmpsl
les
xor
inc
add
mov
ss
xor
ss
ds
mov
jbe
jl
mov
popa
inc
lret
sbb
add
xchg
jo
inc
push
daa
and
mov
dec
setge
in
sub
xchg
imul
sub
push
out
popw
fisubl
mov
pop
pop
rol
mov
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
xchg
mov
stos
cmp
xor
pop
mov
lods
xor
std
xchg
xchg
pop
data16
xor
or
test
xor
jmp
fcoml
jge
push
aas
in
aad
jg
jae
mov
pxor
and
xor
xchg
adc
sub
jno
int3
shl
nop
or
pusha
dec
stc
and
out
sbb
add
lahf
pop
mov
icebp
lcall
sti
xchg
je
jmp
data16
mov
jb
fidivrs
adc
fs
cli
and
xchg
xchg
imul
jge
std
and
sbb
loopne
or
mov
xchg
push
xor
fstpl
jae
jne
xchg
jmp
fsubrs
mov
add
ret
and
jne
pusha
popf
or
mov
std
js
in
rcll
mov
jno
imul
insb
fucom
pop
ss
inc
hlt
cmp
ljmp
pop
sbb
test
cli
push
cmc
xchg
stos
dec
sarb
dec
sbb
scas
outsl
int
sbb
jbe
push
fsubr
jecxz
xor
mov
ret
fbld
cmp
sbb
out
dec
sbb
mov
pop
les
lods
mov
xor
push
xchg
lret
outsb
test
decl
or
mov
cmp
dec
and
insb
add
cld
ficomps
xchg
negl
add
nop
dec
imul
daa
pusha
mov
roll
inc
stos
lahf
cmp
mov
inc
pop
or
movsl
pop
xor
ja
stc
adc
pushl
xor
stos
sub
pop
mov
nop
sub
popf
inc
jl
mov
cmp
and
pop
add
outsl
aaa
dec
cmp
pop
cli
rcrb
xchg
insb
cmpsb
sub
fiaddl
outsl
xor
stos
test
xchg
mov
jg
cli
fst
sub
dec
cmpb
gs
jge
aas
lret
out
push
ss
aad
push
xchg
lret
cwtl
and
dec
push
icebp
ja
lods
inc
sbb
fbstp
adc
mov
cltd
sub
push
cld
mov
adc
xor
test
adc
cmc
cmpsl
mov
mov
dec
scas
fprem1
or
addr16
pop
jle
xor
mov
popf
cmpsb
fwait
cld
inc
sar
xor
jg
mov
test
jb
or
ss
mov
cmpsb
dec
push
mov
test
testb
dec
xlat
ror
fcompl
xchg
xor
xorl
ljmp
aaa
das
es
or
fistpl
inc
push
xor
out
and
leave
dec
cld
push
xor
push
repnz
sub
repz
dec
and
cli
scas
adc
test
push
inc
cmp
xor
cli
sub
aaa
insb
mov
call
mov
add
add
dec
negb
xor
insb
xchg
movsl
repz
aam
aam
lahf
dec
lds
outsb
fs
sbb
loop
jb
jb
inc
sub
xor
and
jmp
aaa
cmp
add
push
mov
pushf
cmc
outsb
aaa
cmp
cltd
out
ds
xchg
push
xchg
push
rol
cmp
push
stc
out
notl
mov
scas
pop
jnp
adc
mov
je
in
cmp
je
sbb
pop
and
mov
fucomp
les
es
sub
xor
add
ret
popf
mov
mov
out
shll
inc
movsb
je
xor
in
repnz
add
mov
sarl
pop
push
aaa
and
shlb
mov
mov
cmp
pop
loopne
icebp
mov
movsl
jl
jo
xchg
and
scas
out
lods
orl
cmp
fcoms
aas
jle
xor
addr16
jp
in
adc
les
cmc
test
sbb
cmp
mov
xor
add
jl
push
push
in
or
repz
jmp
stc
icebp
outsl
jb
pop
jl
mov
pushf
xchg
mov
stos
jbe
xlat
jmp
decb
inc
cmp
mov
inc
popf
pop
jg
ss
sti
pop
daa
mov
jo
dec
and
mov
and
es
mov
mov
xchg
mov
adc
mov
jl
ss
cmp
sub
adc
mov
cld
jno
mov
xchg
repnz
sbb
adc
ljmp
sbb
int
mov
adc
loopne
mov
popa
jg
and
add
mov
in
scas
jmp
jl
iret
xorl
outsb
mov
sbb
adc
xlat
repnz
lea
jl
push
or
inc
jl
into
test
int3
int
clc
sub
aaa
test
dec
in
std
leave
fs
cmp
pop
aam
pop
mov
outsb
mov
shl
ret
mov
sbb
pop
fcmovnb
test
mov
pop
sbb
push
lds
push
add
pop
mov
stos
cld
pop
push
lock
cmp
push
fs
jo
ss
cs
out
clc
aam
leave
push
push
imul
pop
xchg
jl
or
sub
shlb
cmp
lods
xor
push
xor
xchg
mov
int
roll
outsl
and
add
stc
mov
test
lods
addr16
icebp
jp
call
js
push
adc
sub
pushaw
xor
gs
pop
shll
xor
movsl
call
inc
sbb
loopne
xchg
clc
cmc
sbb
dec
icebp
cmp
mov
push
rclb
mov
int3
mov
mov
adc
divl
push
cmp
popa
xchg
popa
sbb
popa
in
cwtl
add
xor
pop
fimull
in
sub
in
das
inc
mov
cld
push
test
mov
mov
cld
scas
lds
mov
xor
mov
jge
xchg
stos
and
jle
repz
adc
cmp
rorl
and
sbb
pop
mov
out
orl
xor
stc
sub
bound
cmp
shrl
filds
shrl
xchg
repnz
nop
mov
push
jmp
jmp
push
jmp
nop
jge
insb
int
xchg
sbb
stc
popa
or
les
and
inc
shll
xchg
movsl
test
or
cmp
sub
cmp
adc
sub
popa
dec
sub
into
mov
cli
sbb
sub
lret
mov
sti
iret
xor
jecxz
test
jmp
xchg
mov
mov
pop
std
mov
or
jle
mov
xchg
jl
push
cltd
lods
insl
push
int3
loop
sbb
jnp
mov
decb
addb
into
jg
pop
mov
xchg
cmpsl
sbb
cwtl
icebp
loop
stc
lea
cmc
and
shr
lods
push
nop
sbb
add
fstpt
xor
jecxz
iret
imul
adc
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
ret
cmp
mov
push
xor
mov
add
inc
notb
add
popa
fwait
pop
jns
aad
pop
ss
dec
das
lea
fildll
dec
dec
sbb
xchg
jg
sbb
pop
dec
sub
pushf
push
cmp
mov
dec
inc
or
loop
push
clc
mov
push
imull
out
jp
dec
mov
xchg
pop
ja
in
out
xchg
outsb
lods
es
mov
mov
add
loop
pop
adc
dec
mov
jns
ja
int
sub
push
outsl
ret
test
jnp
or
loope
mov
movsl
popa
dec
enter
cwtl
aad
mov
xchg
decl
std
fdivl
dec
mov
jns
cmp
adc
fnstcw
cld
js
and
jge
pop
lahf
push
mov
push
setae
test
add
js
sbb
jg
testb
mov
mov
inc
mov
scas
test
xor
cs
cmpl
mov
pop
mov
mov
push
pop
in
ljmp
adc
outsl
arpl
push
push
push
repz
sbb
jne
or
sbb
test
pop
sbb
jmp
xchg
xlat
dec
fists
loopne
adc
sbb
add
or
cmpsl
cmpsl
xorl
jmp
sub
aas
outsb
repnz
or
push
lock
cmp
lcall
fisttpl
jle
xchg
pop
loope
sub
inc
out
pop
xchg
mov
mov
loope
sbb
pushf
sub
and
xor
fcoms
in
mov
scas
xchg
xor
lret
arpl
sub
insl
sub
push
mov
and
fs
cmpsl
int3
fwait
subb
pop
xchg
dec
insl
jbe
stos
rclb
sbb
mov
mov
aam
push
and
sbb
not
in
in
xchg
insb
lock
hlt
int3
fcompl
imul
jge
and
and
imul
cmpsb
or
cmpsl
subb
xor
mov
ret
movsl
pushf
inc
xchg
jg
cmp
lods
ret
add
movsb
xchg
call
push
movsl
pop
jle
cmp
negb
test
out
inc
and
xlat
pop
call
inc
pop
jl
orl
sub
adc
adcb
std
cld
fiaddl
fs
cli
rcrb
xor
jmp
push
jl
jge
sbb
lcall
push
jl
jecxz
out
bound
push
mov
in
imul
and
sbb
jle
ss
out
xchg
xor
sbb
sbb
push
push
jnp
mov
stc
shl
adc
shll
inc
xor
inc
mov
mov
out
icebp
push
mov
mov
out
pop
call
push
fs
cmp
adc
shlb
or
neg
jne
stos
imul
je
ds
out
adc
loop
mov
pop
loop
and
pusha
and
fstpl
loopne
mov
inc
call
ss
and
mov
repz
lock
cmp
xor
scas
sub
gs
movb
int
fcomps
inc
insb
mov
mov
jg
mov
cld
and
and
lods
out
cmp
mov
mov
mov
pushf
xchg
jge
mov
xchg
inc
sbbb
insl
ret
ret
sbb
adc
adc
and
adc
push
sbb
mov
lods
mov
ja
or
lods
xor
das
js
push
cmp
mov
fsubl
fwait
sub
push
or
test
or
inc
test
mov
mov
imul
mov
push
and
adc
sbb
call
sbb
nop
mov
cltd
add
in
sti
jp
stos
fdiv
and
xor
outsl
sbbb
push
mov
cmp
in
cld
mov
mov
mov
fs
fcmovnu
add
lret
in
sbb
dec
in
jecxz
popf
xor
data16
nop
mov
xor
stos
cmp
lret
dec
pop
mov
mov
aaa
pop
push
fwait
jle
cmpsl
mov
add
lret
lds
cmp
rcrl
pop
mov
dec
mov
jecxz
sbb
in
mov
aam
jne
cmp
pop
popf
cmp
and
std
stc
mov
lret
rolb
cmp
push
lcall
inc
cmp
add
push
ljmp
and
sarl
jmp
test
loope
jl
sbb
pop
mov
adc
jno
imul
inc
hlt
inc
test
cld
mov
mov
nop
xchg
mov
popa
aam
aam
movsl
insb
rorl
inc
mov
pusha
or
movsb
sub
push
inc
clc
ds
gs
or
sub
ljmp
push
and
adc
and
jns
fiaddl
popa
dec
cmc
xchg
insb
in
or
sub
dec
ret
aas
sbb
sub
cmp
into
imul
pop
mov
jne
jge
iret
inc
mov
ret
out
data16
mov
bound
xchg
sbb
mov
aaa
stos
cmpb
movsl
xor
adc
jl
and
shlb
and
xlat
shll
in
nop
and
stc
xchg
call
hlt
jle
or
cmp
jo
xchg
jg
stos
fcompl
lods
inc
inc
mov
sbb
ja
ret
push
xlat
jge
into
jle
dec
out
jno
mov
inc
mov
arpl
iret
mov
jge
xor
mov
imul
adc
cli
inc
lahf
adc
daa
fdivs
jno
bswap
js
mov
inc
fcoml
inc
pop
push
mov
jecxz
xor
bound
jbe
cwtl
ret
sti
push
xor
xor
and
hlt
cli
imul
out
xor
jns
loope
icebp
adc
xor
cld
lock
cmp
in
hlt
cmp
loopne
add
sbb
cmp
pop
dec
out
sub
sti
mov
jl
adc
out
unpcklps
ljmp
cld
data16
xor
ljmp
out
add
and
fcoms
xlat
mov
pop
mov
mov
loope
test
dec
adc
xor
push
popa
mov
stc
cmp
mov
dec
cmp
nop
xor
inc
inc
ss
pop
cmpsl
adc
ss
sub
lret
popa
shll
and
cwtl
imul
rclb
add
jo
mov
cli
rorl
and
push
out
and
fs
fsub
cltd
arpl
add
out
inc
push
ds
mov
fimuls
ss
mov
movsl
sbb
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
and
in
loop
lret
sub
push
push
mov
sbb
pop
cmp
aad
push
add
mull
xchg
jne
outsl
in
xchg
loopne
scas
stc
insb
cmp
js
gs
jecxz
ret
xchg
jl
xchg
outsb
leave
mov
es
mov
test
lahf
mov
cmpsl
sub
popa
lods
insl
xor
roll
cmp
inc
test
data16
mov
jle
hlt
imul
fidivs
xor
lds
push
enter
andl
cmc
xchg
fsubrs
loope
push
testb
popa
mov
and
nop
pop
aad
jb
nop
cltd
pop
dec
scas
jb
mov
cmovs
fisttps
jo,pn
pop
push
icebp
faddp
pop
lock
fwait
mov
lods
and
xor
push
dec
fnstenv
mov
jno
inc
jge
cmp
fstpt
sbb
imul
push
in
or
test
dec
fdivrl
mov
cmp
jae
jb
jno
pushf
aas
xor
adc
ret
mov
test
hlt
dec
es
aam
fisttpll
idivl
popf
insl
mov
fldl
hlt
test
jbe
cmpl
outsl
inc
iret
fidivs
hlt
push
and
xlat
repz
jns
sbbl
mov
in
mov
test
mov
call
pushf
jo
xchg
inc
sahf
mov
jg
fimuls
adc
mov
xchg
repnz
mov
hlt
bswap
or
aad
imul
jg
push
popf
lret
lods
push
aaa
ljmp
inc
fs
jl
sbb
push
or
jns
adc
ss
fldenv
cltd
enter
icebp
repz
or
mov
and
das
inc
mov
push
lcall
pop
push
js
sub
test
pop
jb
test
shr
fstpt
shrl
xor
or
or
pop
mov
cmpsl
pop
xchg
cs
js
in
out
dec
xor
subl
dec
add
cmp
mov
sbb
lahf
sub
hlt
cli
movsb
scas
mov
mov
lret
or
lock
enter
adc
or
mov
fstpl
daa
jl
cli
sarl
mov
out
flds
jp
jmp
mov
mov
icebp
dec
ss
xor
xor
lock
jmp
sub
sbb
out
pushf
outsb
or
fildll
mov
leave
movsl
ja
cmp
jge
push
mov
test
int3
inc
cmpsb
data16
xchg
imul
fs
jp
mov
mov
jbe
rcll
mov
loope
or
push
sub
cltd
outsl
cmp
lock
fwait
ret
cwtl
int3
or
mov
mov
fsubrs
add
mov
mov
xchg
jle
cli
jmp
popa
insb
push
hlt
into
test
mov
je
and
or
add
scas
orb
cmp
push
in
je
mov
add
sub
jl
lret
sbb
fistpl
xchg
daa
rorl
int
std
cmp
inc
push
sbb
or
pop
push
clc
jge
mov
lds
pop
andl
mov
jp
lcall
mov
cmp
jnp
pop
aad
int3
inc
adcl
mov
out
cmp
inc
jbe
sbb
ja
cmp
loope
cmp
cmp
add
inc
mov
jne
ret
xor
cld
aas
inc
insb
gs
mov
push
mov
mov
lret
in
mov
push
or
jns
pop
sub
cld
sub
fabs
xchg
or
push
lods
lret
out
jmp
call
stos
mov
loop
jl
mov
fiadds
aad
out
test
sbb
jo
les
lds
jmp
xor
sub
and
cld
setnp
push
mov
popa
int
fs
int3
stc
fs
xor
rorb
push
stos
cmc
nop
inc
adc
sub
cmp
mov
cmc
clc
mov
aad
cli
test
movsl
fstpl
bound
popa
sarl
cmpsl
sahf
or
xor
in
add
sbb
pop
pop
jle
lock
aad
fstp
xor
inc
js
hlt
aas
inc
adc
xchg
rolb
jge
mov
and
lahf
int3
pusha
pop
ja
jle
arpl
or
rolb
pusha
push
cli
push
lret
andb
jbe
into
lods
cmp
xor
jae
mov
sbb
repnz
jae
nop
add
mov
aas
push
aas
daa
mov
call
fcomps
push
icebp
out
mov
adc
clc
xchg
pop
dec
adc
out
fstpt
sbb
pop
xor
pop
fabs
arpl
mov
cmpsb
scas
jle
cwtl
rcl
lds
bound
push
or
stc
jns
daa
xchg
jo
mov
pop
mov
aaa
int3
mov
xor
mov
imul
ds
mov
push
aas
repz
pushf
stc
lds
jne
lock
std
and
push
jns
out
mov
jge
roll
xor
jl
insb
lret
cmp
mov
push
dec
mov
repnz
mov
or
mov
pop
adc
lods
insb
iret
jge
lock
mov
and
pop
fldenv
add
mov
cmpsb
mov
add
xchg
cmpsb
aad
das
pop
mov
loopne
or
lea
add
stos
push
shlb
out
fsubr
mov
out
in
sub
sub
sub
test
mov
fisubrl
outsb
stc
push
loopne
cmp
add
push
movsb
leave
xchg
andl
mov
xor
pop
mov
fcmovb
mov
sbb
mov
jmp
loopne
icebp
in
lods
shll
fistpl
mov
xchg
add
dec
outsb
insl
in
push
gs
je
or
adc
movsl
lret
mov
inc
mov
ljmp
dec
push
lcall
aas
ret
mov
mov
xor
js
mov
test
push
in
mov
jae
gs
pop
inc
jno
std
or
rclb
dec
cmpsb
aaa
and
mov
jne
mov
inc
scas
jmp
inc
fstl
pop
and
xor
arpl
cld
outsb
fidivrl
nop
cmp
jle
mov
or
pop
fcomps
stos
mov
ret
sbbb
mov
sbb
mov
sbb
cmpsb
sarl
mov
fcompl
pusha
jbe
repz
arpl
leave
pop
jnp
mov
mov
out
ss
sbb
mov
outsl
insb
xor
xor
cmp
lods
or
gs
outsb
es
jo
ret
rorb
cmp
push
mov
sbb
xchg
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
inc
sbb
jno
test
pop
popa
shlb
sub
adc
cli
mov
pop
lret
fistl
push
lods
push
jmp
jns
shlb
div
pop
ljmp
xor
aam
push
fistps
mov
push
fs
mov
cmp
int
loope
mov
into
lea
adc
in
mov
or
iret
insb
scas
call
xor
pop
es
ficompl
jno
repz
push
jns
loop
nop
dec
cmp
dec
stos
pushf
dec
xor
fdivrl
popa
cltd
movsb
lea
sub
xchg
pop
pop
push
xor
lods
sub
cmpl
lcall
inc
inc
lret
mov
add
push
outsb
ret
aaa
jb
js
jge
pusha
lahf
lcall
dec
push
adc
pop
mov
addr16
enter
test
fwait
push
divl
pop
les
xchg
mov
dec
push
test
xchg
out
stos
lock
fsubrl
imul
test
andb
xchg
ljmp
push
lret
ja
sbb
xchg
loope
dec
sbb
int3
fcmove
mov
mov
bound
test
xchg
out
lock
dec
pusha
pushf
sbb
ret
add
inc
test
push
mov
repnz
jg
les
aam
addb
jp
cmc
xchg
popa
sbb
in
aad
jne
sub
xorb
ret
lea
fwait
test
cmp
or
cmc
inc
mov
mov
cmp
jmp
sub
and
aad
stos
ret
stos
jae
repz
inc
jns
aad
dec
push
pop
cmpsl
push
syscall
bound
pusha
jns
xor
push
sbb
jno
push
cld
or
test
cmp
cmp
ja
inc
es
mull
jmp
mov
jge
xchg
xor
aam
in
cmp
jg
pop
push
dec
loopne
rol
mov
and
inc
cmp
or
push
int
mov
fs
sbb
arpl
adc
in
sti
shl
xchg
mov
fisttpl
xchg
in
jne
push
mov
or
cmpsb
enter
js
push
cmp
sub
adc
mov
pop
sbb
push
shlb
mov
ret
popa
cmp
pop
mull
imul
adc
adc
rcrl
xchg
imul
imul
and
shrl
and
add
xorl
popa
mov
ss
dec
lret
cmp
test
mov
xor
mov
insb
ljmp
arpl
dec
test
inc
int
sbb
mov
xor
aaa
jl
inc
clc
fidivrl
dec
repz
sub
scas
mov
rclb
xor
imul
clc
mov
lret
js
mov
lds
subb
fisubs
repz
xchg
sbb
mov
sbb
insl
ss
cld
aad
leave
lods
push
dec
test
mov
lds
sbb
xchg
insb
hlt
and
pop
sarl
idivb
outsl
subb
fsubrl
jb
adc
shl
cmpsb
or
mov
xchg
outsl
mov
sub
inc
and
std
js
and
mov
dec
adc
and
inc
mov
cmp
shll
pop
test
and
mov
xor
adc
pushl
movsb
loopne
out
test
insb
out
addr16
frstor
sti
lea
roll
fidivrl
and
cwtl
mov
sbb
js
repz
dec
or
test
sbbb
fimuls
push
jp
mov
fidivrl
shl
inc
cli
sub
mov
xlat
sub
or
xchg
mov
sub
mov
int3
into
nop
in
mov
mov
dec
scas
push
push
dec
and
repz
repz
hlt
dec
iret
in
push
idivl
dec
xchg
jle
jb
lods
mov
xchg
adc
jle
test
icebp
cmp
mov
gs
mov
sbb
pop
cmp
push
inc
xchg
mov
xlat
js
loope
aam
push
sbb
jb
in
js
dec
test
arpl
push
aam
jb
aam
pushf
call
fiadds
mov
xchg
rcrl
xor
psrlq
mov
insl
pop
test
jne
divb
mov
inc
out
in
add
sbb
push
or
push
cmp
xorl
shrl
lds
sbb
mov
mov
mov
insl
jns
subb
adc
xor
es
cmp
ret
cmp
in
pushf
sub
mov
insl
rcrb
data16
andl
setle
enter
ret
xchg
int3
and
pop
das
cmp
xor
gs
add
in
jp
and
test
sub
out
repz
mov
or
adc
jecxz
fsubl
or
in
cmpsl
mov
adc
shlb
jno
mov
inc
sub
jnp
rorb
mov
mov
repz
daa
add
xchg
mov
sub
adc
adc
fisubrs
xor
roll
icebp
push
pop
add
call
repnz
rorl
jg
pop
dec
scas
xchg
loope
lret
fstl
lods
jo
cmp
das
mov
nop
or
push
insb
mov
jbe
imul
mov
stos
sti
mov
out
loope
lock
test
mov
ja
dec
push
sbb
push
test
mull
jge
popf
stos
cmp
loop
lods
testb
and
pop
fs
into
inc
and
jecxz
sub
shrb
popf
xlat
sysexit
popa
sarl
std
mov
push
popa
icebp
pop
cmpl
xchg
loop
inc
push
jmp
sub
ljmp
and
adc
not
xlat
repnz
xchg
fnsave
pop
mov
cli
xchg
pop
mov
adc
andb
into
inc
dec
jns
sbb
mov
aas
push
mov
mov
loop
mov
in
nop
lahf
insb
fcoml
insl
inc
cltd
fs
push
stos
mov
xor
imul
jp
adc
jno
xor
mov
ja
jecxz
int
mov
or
lods
arpl
mov
ret
jle
xchg
repz
fldenv
push
fcoms
cmovnp
xor
cmpsb
in
cmp
fidivs
cmp
pop
fdivs
repz
or
aas
mov
popf
push
or
xchg
scas
cli
adc
pop
jnp
jnp
sbb
out
mov
stos
fcmovnb
data16
pop
xchg
not
inc
mov
xorl
push
xor
push
insl
lret
push
xchg
sarl
xchg
stc
pop
cmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
fistps
add
mov
jg
sbb
dec
imul
adc
bound
inc
mov
mov
pushf
xor
lea
fs
scas
xchg
jne
fs
enter
loopne
int
loope
pop
shlb
aaa
dec
cmp
cltd
into
insl
pushf
push
popa
outsb
aaa
mov
aas
out
ja
push
add
mov
and
push
xchg
int3
mov
push
je
xor
sbbb
and
jo
pusha
jae
push
or
cmp
clc
or
addr16
mov
std
mov
jg
ret
js
test
and
add
dec
xchg
sbb
rcrb
push
hlt
stc
ss
movsb
pop
bound
data16
xlat
lods
mov
cmpsb
push
cmp
sub
mov
add
push
mov
sub
test
and
pop
adc
cmp
dec
leave
cmpsl
mov
dec
int3
ja
cld
xchg
inc
rorb
inc
mov
cmc
xor
xchg
cmc
sahf
clc
mov
mov
fdiv
loope
sahf
fdiv
add
or
enter
pop
inc
cwtl
scas
and
loop
mov
sti
cmp
mov
test
sub
sub
xchg
daa
mov
mov
mov
shll
adc
out
push
ror
sub
sub
sbb
mov
xor
popf
adc
xchg
test
lret
xchg
std
mov
pop
les
movsb
inc
cld
int3
mov
test
xchg
arpl
pusha
stc
mov
jnp,pn
aad
imul
sub
sbb
jo
pop
das
js
or
cmp
les
mov
ljmp
adc
mov
mov
ds
push
add
clc
jge
push
repnz
gs
mov
popa
or
icebp
ss
in
adc
fdivrl
inc
adc
cmp
add
xor
dec
sub
ret
mov
xchg
jnp
sarb
std
imul
add
jo
repnz
adc
jb
loopne
fdivs
cmp
adc
and
lcall
push
imul
or
add
inc
imul
inc
lods
push
lret
push
in
gs
addr16
fidivs
out
in
sbb
pop
stc
in
pusha
jle
cmc
mov
test
mov
in
jmp
sbb
add
notl
ret
sbb
andb
or
stos
mov
mov
sahf
and
gs
jle
sbb
mov
push
cmc
xor
pop
mov
test
divb
es
jl
clc
push
iret
insl
dec
sub
jne
test
ret
push
imul
fdivs
and
mov
fiadds
stc
aad
push
sbb
push
fisttpl
and
loopne
fmull
sub
test
push
jb
sbb
hlt
mov
add
movsb
xlat
leave
adc
xchg
out
mov
addb
sbb
jbe
jnp
enter
xlat
rcr
push
div
sub
popf
adc
aas
or
outsb
xlat
int3
test
jnp
test
xchg
xlat
lods
leave
imul
jns
test
dec
je
xchg
xlat
enter
mov
fwait
xor
cld
and
rorb
dec
loope
setnp
dec
xchg
mov
pop
mov
add
sahf
mov
pop
push
in
mov
jne
jmp
and
pushf
ret
push
sub
jns
cwtl
cmc
sti
enter
das
pushf
push
pushf
bnd
cs
add
and
xor
xchg
leave
and
es
pop
pop
push
pop
jbe
cmp
imul
sbb
xor
inc
aam
adc
and
in
or
ljmp
in
cltd
lcall
loopne
mov
mov
xor
sbb
push
repnz
popa
jo
mov
xchg
mov
cmp
in
xchg
dec
insl
inc
aas
adc
xchg
dec
sbb
addb
xor
imul
arpl
inc
mov
mov
rcrl
out
test
adc
cmc
sbb
sub
fsubrs
js
fimull
shlb
jns
and
sar
enter
ljmp
repz
xchg
mov
xchg
xchg
jecxz
rcrb
or
inc
outsb
sarb
and
push
sbb
ljmp
adc
mov
insb
sbb
icebp
mov
cmp
pop
or
and
jmp
jmp
enter
repnz
lds
aas
inc
mov
dec
ret
in
push
adc
inc
mov
leave
mov
or
or
call
xchg
loop
jecxz
add
jae
and
loopne
lods
xor
adc
pop
jecxz
cmpl
mov
pusha
adc
sbb
pop
clc
jl
insl
or
xor
xchg
lcall
lds
xor
leave
int
lock
pop
sbb
mov
mov
jecxz
and
push
mov
pop
dec
xchg
mov
aad
pop
leave
xor
cmpsl
rolb
sbb
cltd
test
xchg
sbb
cmpsb
sbb
sbb
bound
pushl
jg
inc
push
jp
adc
daa
ds
lret
test
andl
roll
ret
es
ja
inc
cmp
add
cwtl
hlt
out
jl
daa
mov
pop
adc
inc
popa
imul
inc
sub
fxch
dec
fnstcw
mov
lock
or
addr16
stos
sbb
movsb
mov
inc
xchg
addb
stc
xor
lahf
jl
cmc
movsl
aaa
fbstp
into
aaa
mov
sub
xor
in
xchg
cmp
repz
sub
or
jmp
andps
jnp
fdivs
imul
enter
mov
push
xchg
and
lock
adc
mov
icebp
jns,pt
xchg
cli
imul
shrb
pop
and
sbb
scas
jae
xchg
into
js
inc
cli
pop
cmp
push
push
rolb
loop
cmp
ret
sub
fwait
jb
mov
nop
mov
mov
cmp
pop
xor
addl
cmc
imul
inc
in
in
pop
mov
jnp
stos
pushf
adc
mov
enter
rol
idivb
cmpsb
and
ja
mov
aam
arpl
push
inc
jbe
fiaddl
inc
lods
cmc
popa
jl
jg
jne
outsb
addr16
sar
ror
nop
dec
nop
sbb
lea
xor
call
adc
lret
arpl
inc
repnz
add
sbb
push
mov
push
fcmovb
add
sbb
sub
insb
insb
test
xchg
sbb
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
aam
call
loop
and
cmp
jnp
mov
cmpl
sbb
xchg
jb
testb
cmp
dec
cld
dec
rcrl
xchg
pop
hlt
mov
pop
adc
sub
pop
fwait
imul
jle
pop
pop
mov
or
ret
pop
pop
sub
test
mov
jge
pop
pop
fwait
sbb
push
rcrb
mov
cld
sbb
sti
std
xor
icebp
shrb
lock
jl
fwait
test
lret
dec
dec
mov
enter
jns
in
jecxz
and
and
jmp
push
mov
push
jo
sub
fstl
mov
inc
repz
pop
xchg
mov
pop
sbb
jnp
jmp
aaa
mov
std
bnd
sarl
sub
aaa
mov
enter
test
aas
loop
int3
nop
add
hlt
xor
mov
into
sub
pop
icebp
adcb
mov
jo
dec
leave
sub
sbb
lea
adcl
push
imul
jecxz
loopne
cmp
or
push
lock
flds
dec
outsl
loope
fnsetpm(287
push
dec
xchg
mov
dec
dec
xor
mov
jb
cmpsl
fld
fstp
sub
jae
jb
imul
scas
dec
ljmp
pop
xorb
mov
mov
call
out
jo
ret
add
xor
jl
ss
add
xor
adc
mov
arpl
mov
outsl
mov
sbb
mov
mov
shl
mov
xchg
xchg
lcall
pop
fsubrl
mov
imul
loopne
add
add
adc
xchg
out
fbld
xor
mov
pusha
jbe
mov
fildll
add
cs
and
jae
mov
and
lcall
rcll
dec
cld
add
gs
xchg
inc
shlb
pop
mov
imul
clc
enter
jmp
push
and
jmp
ficoml
and
jb
das
add
sub
clc
imul
xchg
xchg
xlat
mov
ds
adc
mov
stos
int
jne
sub
aaa
hlt
mov
cmp
xchg
mov
daa
test
jo
mov
xchg
std
les
mov
cltd
arpl
jp
and
mov
sbb
or
in
test
loope
sbb
fistpl
sti
test
dec
jecxz
repnz
jbe
insb
adc
adc
sbb
adc
mov
adcl
lods
aam
arpl
mov
stos
movsb
sub
inc
les
shlb
out
cld
test
stos
insb
push
adc
leave
xchg
sar
jo
call
aam
loop
mov
and
xchg
pop
call
pop
inc
cmovo
pop
int
insb
mov
jo
fisttpl
mov
sbb
insl
hlt
mov
mov
ja
clc
aam
in
xchg
sbb
aad
add
insl
mov
jo
fstpt
mov
sbb
insl
out
sub
stos
ja
hlt
pop
mov
add
and
int
xchg
mov
repz
inc
dec
cld
sbb
lods
sarb
jle
mov
stc
outsl
es
push
loope
cmp
insl
sbb
adc
add
jno
cld
and
test
and
mov
js
fwait
rcll
adc
xchg
adc
add
cli
hlt
in
mov
cmp
jb
clc
lods
lods
roll
xchg
jp
rolb
cli
push
cmpsb
sbb
mov
fstpt
sti
xor
je
mov
lahf
xchg
xor
shll
test
shll
push
out
push
rolb
sub
call
andb
mov
aaa
clc
jno
mov
inc
lods
or
sbb
test
std
cmp
pop
jp
fdivs
sti
push
jle
fmuls
shlb
cmp
or
ret
xchg
add
lods
sub
sbb
xor
pop
mov
inc
sub
jnp
adc
repz
call
stos
pavgw
mov
or
loopne
call
dec
add
or
add
pop
ljmp
bnd
loopne
mov
decb
in
mov
mov
std
or
fidivrl
xchg
push
pop
sbb
push
aas
pop
aam
sarb
xchg
push
xor
xor
aaa
jmp
adc
adc
inc
jae
pop
je
jo
daa
pop
mov
ds
pop
lahf
pop
mov
mov
out
jg
xchg
push
pop
pop
hlt
push
aas
pop
aam
sarb
xchg
push
xor
xor
aaa
jmp
adc
adc
inc
ja
addr16
jo
daa
addr16
add
addr16
addr16
mov
out
jg
xchg
push
nop
add
addr16
addr16
push
lock
push
rolb
xchg
fs
xor
adc
adc
je
jo
daa
push
push
or
mov
mov
out
jg
xchg
pop
nop
or
hlt
pop
lock
aam
rorb
push
add
push
push
cs
in
cmp
in
mov
dec
mov
or
jmp
movsl
or
lret
inc
test
sub
or
or
or
imul
dec
popf
jo
dec
inc
add
add
jge
mov
shrb
enter
lret
mov
adc
or
or
push
scas
imul
scas
dec
mov
nop
add
test
mov
add
xlat
jmp
movsl
xchg
enter
lret
fildl
xlat
sub
gs
or
xlat
or
inc
xchg
sub
xlat
imul
xchg
dec
add
xlat
dec
fildl
add
cmp
subb
movsl
mov
sbb
leave
lret
lds
leave
sub
mov
sbb
leave
or
inc
mov
sbb
imul
mov
jo
dec
lds
add
xor
adc
adc
jno
sub
xchg
mov
pop
pop
mov
repnz
imul
aaa
cltd
cmp
fisubrs
xor
xor
mov
pop
cmpsl
pop
mov
arpl
mov
add
cltd
movsb
and
xor
cwtl
xchg
js
jmp
fcmovnb
sarl
xor
dec
movsb
fcom
or
add
lods
fisttpl
dec
sti
ficoms
push
pop
add
dec
in
stos
or
jb
std
jbe
push
or
xor
sahf
fidivrs
into
cltd
jmp
das
inc
mov
cmp
test
aad
lods
push
lcall
shrb
cmp
inc
add
jge
jle
mov
mov
aad
mov
xchg
aam
aam
aam
lahf
jbe
jnp
mov
leave
xchg
lret
sub
mov
sbb
push
cmp
mov
mov
leave
mov
cmp
or
imul
adc
or
ds
test
xchg
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
add
jne
hlt
out
xor
call
mov
inc
test
fcompl
pop
sbb
jl
mov
push
cmpsb
sbb
insl
and
lea
lods
push
xor
outsb
shll
and
cmp
insb
fcmovbe
sbb
pop
decb
fstpt
fwait
push
adc
add
xor
test
mov
fwait
push
xlat
js
lock
fwait
sub
sbb
push
cltd
cwtl
jge
sbb
leave
lds
mov
je
out
sbbl
loop
out
xchg
jge
xlat
mov
mov
mov
lret
out
mov
push
adc
fwait
lcall
std
scas
loopne
movsb
je
ficomps
adc
add
mov
push
fdiv
dec
out
loopne
shll
sbb
or
adc
sbb
push
xchg
scas
mov
andb
lahf
dec
push
test
xchg
notl
add
inc
out
adc
add
inc
push
outsl
xchg
fistps
loope
lods
test
adc
pop
aas
push
addr16
pop
pop
push
or
dec
pop
mov
push
dec
xor
or
push
mov
ljmp
add
xlat
and
add
outsl
inc
sahf
add
aas
mov
fwait
mov
xchg
fistpl
mov
ret
fidivrs
sarb
std
popa
scas
jmp
mov
or
mov
add
xor
or
lret
stos
repz
hlt
into
mov
or
jl
scas
push
scas
add
jbe
xor
xchg
push
jge
movsl
leave
xchg
aam
ror
in
lds
outsb
pop
pop
or
inc
pop
dec
imul
ljmp
fdivl
sbb
or
or
cmp
outsb
movsl
add
cmpsl
hlt
pop
lret
clc
ja
xor
xchg
jo
lods
add
push
sub
iret
jle
test
insl
sbb
cmp
insb
cmp
ja
and
call
xchg
inc
cli
stos
pop
mov
stos
adc
jge
mov
aad
xlat
or
fdivr
int3
xchg
xchg
sbb
int3
xor
xor
xchg
fstps
mov
pop
ret
orb
lods
xchg
lcall
std
stos
adc
int
add
fwait
stos
into
test
in
pushf
ds
stc
sbb
push
leave
cmc
mov
mov
sbb
leave
sub
push
mov
sbb
xor
fsincos
or
add
and
xor
mov
rcrb
cmp
je
or
mov
lods
rclb
cmpsb
leave
pop
add
inc
jnp
pop
int
pop
mov
pop
nop
inc
push
orb
mov
add
int
lods
jl
jecxz
xchg
adc
lock
and
loopne
roll
jmp
aad
into
and
add
mov
sbb
sbb
fstl
rorb
loop
cmpsl
ret
int
add
jle
or
pop
addb
xchg
adc
and
lds
lcall
mov
adc
xchg
fildll
push
or
push
push
pop
lock
xchg
or
xor
jnp
jne
pop
cmp
xchg
jmp
stos
cmp
clc
into
mov
xchg
pop
sysret
pop
aaa
iret
adc
dec
dec
dec
leave
jo
push
aam
out
loopne
sarl
pop
sbb
int3
ret
jl
lods
scas
mov
jp
xor
jmp
xchg
pop
mov
and
sbb
sbb
unpckhps
cmp
aad
cmpb
and
mov
push
add
lock
rorb
lods
loop
fists
std
sarb
sahf
or
or
add
dec
data16
pop
incb
xor
push
insl
mov
xor
mov
data16
and
lods
cmp
inc
orl
cmpsb
sbb
gs
nop
out
jecxz
mov
fisttpll
leave
inc
lds
cmp
test
stos
rolb
or
mov
xchg
ja
int
adc
out
mov
or
add
xlat
pop
xlat
mulb
lods
mov
fnstcw
cmp
xor
xchg
insl
mov
lods
or
mov
insb
mov
push
fwait
mov
jl
and
shrb
fildll
pop
pop
cmp
arpl
cmp
or
fcompl
scas
push
bnd
insl
ljmp
mov
add
movb
clc
popf
in
dec
daa
inc
js
sbb
dec
or
jge
adc
imul
xchg
outsb
jge
sub
je
mov
inc
imul
in
or
movsb
fs
mov
std
push
stc
ljmp
fmul
mov
xchg
filds
in
iret
fsubl
jb
mov
mov
fwait
lock
pop
es
cli
mov
adc
lods
add
fistpll
or
jae
cmp
aad
arpl
xor
mov
out
fisubs
or
pop
mov
outsl
and
rolb
hlt
rorb
pop
test
add
hlt
cmp
mov
pop
jge
jge
out
xor
mov
lods
out
scas
adc
sti
rcr
inc
test
in
das
jg
mov
movsl
xchg
movsl
xchg
lods
out
leave
pop
je
add
push
mov
stos
ret
mov
loope
cld
rorl
xor
mov
or
mov
loopne
sub
es
sarl
pop
jl
rol
add
push
mov
lock
add
lods
mov
jle
test
push
sub
repnz
cs
rolb
xchg
xchg
jo
add
fistpl
sub
push
cs
imul
jp
emms
cmp
aaa
mov
imul
lods
in
ja
cmc
mov
mov
xchg
scas
inc
mov
fwait
or
lock
cmp
mov
adc
push
shll
mov
cli
xchg
cmpsb
mov
inc
jbe
pop
sbb
jae
or
push
and
outsb
enter
shrl
pop
xchg
jbe
sub
push
int3
or
mov
ds
fwait
push
movsb
out
pop
mov
sbb
jae
adc
jmp
aam
or
fdivr
pop
lods
fwait
and
pusha
fbld
jne
xlat
dec
cmpl
mov
popf
inc
xchg
fwait
int
les
hlt
sbb
add
cmc
mov
test
xor
xor
rcll
inc
mov
addr16
outsl
cwtl
push
cmp
js
std
push
fs
mov
mov
adc
aaa
lcall
push
pop
nop
inc
add
les
push
or
inc
cld
fstps
or
sbb
js
loop
aaa
xchg
sub
gs
lods
cld
mov
mov
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
pushf
or
jo
sub
outsb
jo
jl
sbb
aam
add
jbe
sub
subl
iret
int
cli
cmp
cmpsl
cmp
push
out
adc
cmp
or
fsubs
cs
mov
addr16
pop
mov
sub
push
add
mov
out
ret
sub
push
cmp
mov
std
cld
in
scas
or
sub
sahf
adc
popa
hlt
mov
les
fdivrs
adc
rolb
stc
add
add
imul
movsb
and
fadd
add
pop
mov
sbb
sub
cmp
cmp
inc
xchg
jge
repnz
imul
or
dec
roll
lods
xchg
pop
fs
adc
xchg
cmp
or
neg
out
sub
fisttpl
add
lahf
fadd
or
pop
test
cmpsb
scas
iret
mov
addr16
and
dec
jg
inc
fstp
sbb
jno
lret
inc
lods
dec
mov
or
push
fidivrs
push
pop
test
nop
adc
and
lcall
inc
sarl
adc
data16
scas
fmuls
or
sbb
push
enter
lahf
or
mov
inc
aad
cmp
leave
dec
xchg
adc
pop
or
or
pop
and
orl
xchg
ljmp
iret
mov
cmp
sbb
or
and
in
filds
mov
mov
mov
call
xor
and
lcall
lcall
movsb
push
and
cmp
aad
xchg
xchg
pushf
stc
in
cmpsl
inc
sbb
mov
subl
xchg
push
cli
cmp
dec
and
add
xchg
aam
icebp
icebp
jae
sbb
jge
push
test
int3
insl
add
pop
cmp
add
stos
jmp
andb
mov
out
mov
lcall
pop
fdivrp
outsb
cmc
dec
addb
add
cmpsl
mov
xor
pusha
mov
js
push
push
les
shlb
inc
pop
dec
int3
inc
rcrb
jnp
popa
int3
jecxz
lret
mov
data16
xor
movsb
push
xchg
add
addr16
data16
out
adc
mov
mov
repz
lret
into
inc
cld
pop
and
or
pop
push
pop
loope
and
lods
test
pop
and
movb
mov
loop
adc
or
add
cs
int3
sub
nop
jecxz
ljmp
cmp
mov
and
jne
mov
loopne
lcall
aad
xor
shll
gs
jmp
mov
dec
or
pop
mov
xchg
outsl
adc
push
loopne
jl
and
pop
jbe
sub
jne
mov
loope
dec
pop
dec
xchg
jg
push
mov
fstl
data16
or
sbb
mov
cmp
inc
add
filds
subb
stc
in
and
out
outsb
jo
cmp
cmc
push
mov
fs
lahf
decb
data16
clc
lahf
stos
mov
jae
push
mov
inc
stos
decl
fisttpll
lahf
pop
mov
inc
aaa
insl
pop
iret
add
pop
mov
fsubrl
inc
test
ss
pushf
jno
xchg
sbb
mov
push
repnz
jno
jle
xor
adc
pop
shrb
aad
pop
pop
pushf
icebp
stos
mov
int
sub
addr16
inc
jne
dec
fldl
hlt
daa
imul
and
scas
sub
mov
xchg
call
pop
frstor
lcall
lret
int3
push
xor
aas
aad
cwtl
or
insl
cmp
pop
mov
mov
js
xchg
cmp
pop
lcall
xchg
sub
into
dec
inc
sbb
hlt
fiaddl
fwait
add
mov
sbb
cmp
mov
imul
mov
icebp
outsb
cli
test
or
xor
not
adc
hlt
test
pusha
into
lods
idiv
sub
adc
cmpb
sbb
pop
sub
je
mov
mov
mov
inc
outsl
xchg
fstpl
cmp
mov
inc
outsb
aad
push
or
ja
mov
push
mov
rcll
in
dec
add
inc
push
xchg
cmp
ljmp
fisttpll
out
ljmp
adcl
mov
das
add
lret
into
ja
pop
pop
hlt
sub
jns
jo
xchg
xchg
fistpl
dec
int3
in
mov
loop
dec
scas
ss
inc
pop
subl
insb
shl
mov
insb
lea
insb
je
add
lcall
inc
and
jge
aaa
or
push
pop
lods
push
test
rclb
lret
sbb
xchg
and
ror
adc
mov
or
aas
in
lds
pop
fdiv
rcrb
jecxz
addl
adc
int
out
repnz
testl
push
ljmp
jne
jge
xchg
cmp
dec
mov
xor
mov
aaa
in
sub
jg
testl
ret
lahf
or
sti
inc
xchg
or
cwtl
into
mov
jbe
sub
dec
push
inc
dec
sahf
fwait
adc
fdivrl
pop
sbb
cmc
lcall
in
sub
fdivl
stos
je
and
mov
inc
fs
inc
adc
and
dec
jne
jl
mov
jl
sbb
cmp
pop
xchg
outsl
or
loop
fisubrs
gs
add
fdivs
inc
pop
add
scas
pop
ds
into
pop
out
mov
sub
xchg
sub
add
push
pop
cmp
bound
push
wbinvd
push
aad
movsb
fldenv
fs
xchg
cmpsl
loopne
fwait
lret
ljmp
mov
dec
xchg
cmc
dec
mov
sbb
dec
or
jge
jcxz
push
aad
ret
xor
pop
andb
sub
jmp
and
dec
jl
scas
dec
stos
fistpll
push
jns
leave
pop
adc
sbb
aam
inc
and
jecxz
xchg
jecxz
pop
or
fldt
adc
or
cmp
jno
lods
pop
mov
xchg
fisubrl
lods
insb
xchg
cmp
insb
and
jbe
std
fsubrs
sub
dec
jo
cvtps2pd
in
mov
mov
dec
rcr
bswap
add
add
xor
inc
ljmp
test
rcll
mov
into
es
jae
cs
lds
cli
dec
push
lods
fistpl
pop
stos
mov
push
fcomi
les
insb
add
push
cmpsl
or
int
aad
insb
sbb
mov
or
sbb
push
inc
dec
cmpsl
rcl
jg
cltd
je
cmp
lea
fcompl
push
xchg
enter
leave
lea
test
iret
xlat
adc
push
sub
nop
mov
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
cmc
in
dec
popf
rcl
repnz
std
xchg
mov
stos
cwtl
fcmove
test
or
xor
enter
dec
push
fdivl
jl
sbb
add
dec
das
sbb
repnz
mov
mov
test
shl
cmpsb
stos
fdivp
ja
in
jb
ljmp
shll
sbb
arpl
femms
adc
sahf
add
outsl
push
inc
mov
fsts
stos
ss
push
leave
cmpsl
in
insl
inc
add
scas
xchg
ds
jnp
xchg
pop
pop
out
stos
mov
dec
inc
fcoms
inc
in
push
imul
pop
inc
movsl
cld
jecxz
jge
bound
icebp
adc
or
and
mov
mov
and
cmp
cmp
ss
push
cmp
insb
aad
pushf
cli
mov
dec
outsb
lahf
in
add
sbb
aad
test
fldz
lea
out
stos
adc
xor
inc
rcr
jl
repz
mov
mov
jge
sti
cmpsb
pop
ds
stos
data16
loopne
xchg
jle
mov
mov
mov
hlt
mov
mov
mov
jno
push
scas
stc
popa
adc
repnz
jecxz
or
rorl
dec
mov
jge
lea
dec
lcall
cmp
add
mov
lods
out
sahf
int
fldcw
push
inc
pop
jbe
scas
and
cmp
test
outsb
add
mov
int3
adc
outsb
sub
lcall
lret
pop
mov
rcrb
mov
adc
sub
rorl
jno
sahf
pop
mov
mov
adc
inc
pop
out
sbb
mov
sbb
pop
test
adc
dec
jne
dec
xor
fdivl
in
cmp
sbb
xor
scas
in
xor
xchg
faddp
pop
add
push
out
jns
xor
push
mov
std
mov
lcall
jl
sbb
in
pop
test
mov
xorl
pop
pop
pop
stos
bound
mov
mov
and
loope
cmp
pop
popf
adc
scas
xchg
add
adc
cwtl
psllq
imulb
xor
nop
movsb
in
rcrl
and
aam
inc
mov
pop
in
sti
inc
outsb
add
add
mov
lods
or
mov
dec
adc
and
sub
mov
mov
sub
lods
fnsave
jl
cli
cwtl
faddp
xchg
mov
mov
add
and
iret
sub
bound
jne
add
mov
stos
scas
and
jo
in
call
fsubr
fidivrs
xor
into
aaa
dec
aaa
aaa
lods
dec
pop
xchg
and
sub
js
lods
pop
cmp
and
out
pause
add
in
test
xor
fs
and
mov
out
mov
hlt
or
and
fs
stos
jmp
push
aaa
icebp
xchg
cmp
inc
sbb
adc
mov
pop
adc
mov
mov
scas
sti
mov
cmp
in
test
insb
dec
aam
in
pop
xchg
fcoms
hlt
jno
pop
nop
inc
sahf
or
pushf
imul
adcb
sub
sub
mov
and
push
cmp
pop
push
aas
adc
jg
push
ret
inc
daa
and
mov
push
cli
mov
mov
dec
testl
xor
pushf
or
cmc
adc
inc
or
js
daa
stos
xchg
xlat
fists
xor
iret
xchg
roll
jl
mov
push
cs
or
in
mov
gs
push
dec
cmovb
sub
sub
icebp
and
stos
or
push
fsubr
fimuls
mov
aad
mov
mov
nop
jp
mov
data16
mov
ret
jne
sbb
add
aas
iret
push
cmpl
fs
mov
repnz
sti
in
dec
clc
sub
sahf
stos
push
pop
push
cmp
movsb
sbb
ljmp
jecxz
xor
nop
nop
test
add
add
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
nop
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
insb
add
add
add
add
xor
cmp
xor
xor
inc
add
add
pop
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
inc
add
add
xor
dec
add
pop
add
add
push
jno
dec
add
push
add
jae
inc
add
xor
add
xor
pop
add
insb
add
imul
add
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
jae
inc
add
pop
add
add
dec
add
inc
add
insl
add
add
add
popa
add
add
dec
add
jne
jo
add
dec
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
pop
add
pop
add
add
jne
dec
add
arpl
ja
je
jns
sub
jae
je
add
xor
or
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
add
jno
je
ja
inc
add
add
add
cmp
or
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
add
jno
je
ja
inc
add
add
add
cmp
push
add
add
imul
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
test
add
add
add
add
add
add
pop
add
xor
pop
add
add
add
add
xor
add
add
insb
add
jns
inc
add
push
add
push
add
add
push
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
.byte
