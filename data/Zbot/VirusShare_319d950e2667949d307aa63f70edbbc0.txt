pusha
leave
scas
js
mov
jno
dec
or
pcmpgtb
into
xchg
mov
mov
mov
pop
pop
fwait
lds
pop
iret
fwait
cmpsb
fbld
pop
pop
iret
fcmovbe
fdivrl
ror
arpl
int
xchg
xchg
sbb
enter
xor
cmp
sti
fwait
xor
loopne
xor
or
shlb
adc
adc
mov
ror
negb
jmp
imul
insb
sub
xchg
pop
std
sbb
sbb
lret
fs
into
fs
pop
in
addr16
pop
imul
pop
ret
mov
lret
fs
in
lods
and
cmpsl
aaa
mov
pop
dec
dec
cmp
outsb
sbb
pop
int
add
mov
insb
out
lret
mov
bound
pop
jnp
or
sub
movsl
push
pop
and
push
and
cs
sub
mov
sub
xor
aam
jnp
sbb
notl
rcrl
sbb
xorb
mov
stos
aad
in
add
xchg
insl
cmpsb
lock
adc
lret
push
add
pop
mov
cmpsl
push
sbb
fs
pusha
pop
pop
mov
dec
sub
sub
pop
pop
pop
std
sbb
fs
or
imul
xchg
push
xchg
jle
ds
mov
mov
lock
arpl
xor
xchg
out
cwtl
cmp
je
stos
lret
inc
mov
jecxz
daa
sbb
testl
inc
push
mov
scas
or
inc
inc
sti
and
or
push
mov
fildl
adc
mov
repz
push
and
add
mov
fs
ss
aam
add
pop
sbb
movsl
int3
push
int3
xchg
fisubrl
pop
outsl
push
pop
adc
cmp
pop
cmp
push
cs
add
outsl
dec
sub
enter
insl
popa
out
test
add
outsl
dec
sub
enter
insl
fs
test
add
outsl
dec
sub
enter
sti
jne
sti
int
dec
add
push
imul
sbb
push
repz
xor
movsl
jl
fucom
sti
cwtl
test
clc
mov
push
repz
gs
pop
dec
pop
or
add
scas
xchg
sub
sub
xor
add
cmp
lret
dec
movsb
cld
inc
repz
imul
mov
pop
lds
xor
rorb
and
ret
sub
loope
add
dec
adc
push
sbb
movsl
int3
xor
and
jp
out
shrl
xchg
adc
pop
popw
pop
sbbl
pop
outsl
nop
lret
iret
adc
rorl
cltd
lds
pcmpgtb
int3
and
lcall
pop
add
call
pop
outsl
mov
cmpsl
int
jmp
adc
bound
inc
sbb
out
fs
jecxz
js
pop
iret
dec
pop
in
nop
and
or
imul
loop
iret
xlat
clc
fadds
push
dec
gs
loop
adc
pop
imul
lret
mov
int3
enter
fisttpl
test
cmp
cmp
imul
push
sub
xor
fists
arpl
sbb
lret
push
ljmp
push
cmp
push
rclb
pop
pop
iret
in
add
sbb
out
sbb
pop
lock
or
add
fnclex
or
aaa
add
mov
int
pop
adc
cmp
stos
repnz
lods
into
les
incl
enter
fs
add
cmp
push
mov
jbe
and
push
andl
pop
fisubl
pop
int
xchg
lcall
jg
loopne
pop
outsl
je
ror
gs
pop
das
rclb
pop
jecxz
out
ror
push
scas
cs
into
arpl
mov
fs
add
xor
push
lahf
push
pop
pop
fbstp
std
jp
nopl
fs
leave
add
lds
or
into
add
pop
outsl
je
icebp
lret
gs
pop
das
repnz
pop
jecxz
jmp
out
stc
gs
pop
mov
nop
stos
sub
inc
xor
mov
pushf
or
mov
icebp
xchg
das
xor
int
inc
mov
out
cpuid
ret
popa
out
or
or
outsl
or
loope
xor
in
adc
xor
inc
mov
push
jae
out
xorl
inc
or
xor
es
pop
and
stc
test
or
sbbl
imul
cltd
ds
sub
ss
push
jmp
sbb
cmp
or
xchg
and
pushf
in
mov
pushl
mov
ja
pop
fbstp
sub
cmpsb
into
repnz
sti
adc
xor
and
pushf
jmp
cli
cwtl
cmp
push
outsl
xor
dec
sbb
add
ret
cmpsb
mov
daa
mov
xor
push
setb
clc
outsb
xor
mov
inc
lret
sub
xchg
sbbl
push
sub
gs
push
into
movb
pop
dec
add
mov
fs
leave
clc
das
or
subl
inc
xor
push
jae
out
adc
jp
inc
out
or
push
icebp
test
fs
pop
iret
bound
rcrl
pop
sub
push
or
stc
dec
pop
scas
jo
lret
mov
out
xor
popa
pop
pop
arpl
test
push
adc
iret
sbb
lret
xor
int3
pusha
out
out
js
pop
outsl
fcomps
sub
xor
cmp
repz
push
out
xor
data16
aaa
cli
cltd
in
cmpsb
sub
xor
cmc
cmp
out
inc
sbb
fbld
roll
ljmp
fs
cmp
aad
pop
fbld
into
outsl
sub
repz
daa
stos
sbb
cmpsb
mov
pop
mov
or
mov
pop
add
xor
pop
out
movsb
push
pop
fstl
dec
adc
xor
jmp
jns
mov
cmp
aaa
inc
jbe
lock
loop
das
adc
xchg
mov
loope
aas
fcmovb
inc
pop
in
push
push
mov
mov
popf
push
out
aaa
popa
or
test
adcb
xchg
test
mov
mov
icebp
xchg
fsubp
lds
push
inc
dec
mov
xor
inc
mov
xchg
movsl
mov
push
sub
or
mov
fcom
adc
or
dec
mov
nop
movsb
push
add
das
test
out
cmp
fstl
xchg
adcb
ds
sbb
in
out
dec
je,pn
fdivs
repnz
das
or
aas
in
das
cmp
std
fs
aas
in
mov
out
sbb
sub
add
pop
fldt
lret
int
js
pop
call
shll
xlat
cmpsl
mov
push
iret
mov
mov
push
adc
cmp
bound
xchg
add
sub
mov
sbb
sbb
adc
or
cmp
mov
test
xor
xlat
pop
js
cmpsl
cwtl
testl
addr16
fwait
and
mov
or
lock
outsl
xchg
xchg
pusha
add
addr16
add
mov
push
int3
je
js
test
adc
incb
xor
add
inc
inc
lret
ja
lcall
ficompl
into
ret
sub
pop
addr16
ret
into
mov
pop
and
lret
inc
and
mov
aam
inc
imul
inc
popa
out
or
ret
sahf
and
sub
adc
cmp
sbb
adc
enter
paddusw
or
call
and
mov
addb
xor
and
inc
pop
enter
jg
add
sbbb
push
int
lea
adc
flds
adc
mov
out
dec
mov
imulb
xchg
gs
dec
xchg
daa
xorb
jno
xchg
add
push
or
adc
fwait
mov
jp
enter
iret
test
xchg
data16
mov
mov
sbb
in
arpl
sti
jmp
loopne
adc
test
pop
pop
xchg
mov
nop
sub
pop
push
movl
clc
adc
xor
xlat
sub
or
imulb
clc
cmpsl
dec
imul
sub
scas
pop
imul
cmpb
push
inc
dec
jb
sbb
test
leave
or
fisttpl
pop
fnsave
cmp
ljmp
jmp
sub
test
stos
push
push
addr16
sti
ret
mov
lds
inc
push
sub
mov
cmpsb
push
lahf
jecxz
sub
fisubl
sbb
inc
enter
sahf
in
fistpl
xchg
into
jno
cld
mov
inc
nop
pop
hlt
int3
xor
adc
andl
sbb
enter
cli
or
adc
adcl
hlt
mov
xor
pushf
mov
hlt
loope
and
repz
popf
mov
insb
test
mov
inc
imul
test
adc
rcl
jl
orl
imul
cmp
sub
cmp
sti
jae
push
mov
popf
adcb
mov
jmp
test
fsubl
test
jno
and
push
aam
inc
cwtl
or
push
dec
and
mov
pop
xor
mov
pop
into
sbb
inc
xchg
inc
push
cmc
ficoml
clc
sbb
mov
fsts
pop
inc
pop
dec
movb
lock
xchg
out
rcrb
push
inc
cmp
or
push
daa
dec
or
xchg
sub
pop
xlat
xchg
loope
sbb
inc
iret
push
mov
out
je
mov
adc
sub
add
lret
xchg
addr16
jle
or
xchg
test
push
adc
lahf
cmp
mov
inc
ljmp
adc
push
push
cmp
das
or
les
sub
adc
loope
ja
push
out
dec
cmp
ljmp
cli
enter
xchg
gs
clc
push
or
mov
sub
pop
jne
push
cmpsb
subl
mov
sbb
jp
retw
mov
xorl
nop
pminub
jg
stc
out
add
bound
cmpsb
cmpsl
ret
adc
faddl
cli
xchg
subb
adc
mov
mov
and
jae
dec
push
shrl
xchg
popf
adc
mov
imul
div
imul
add
xlat
mov
push
mov
push
andl
xchg
lcall
out
das
adc
out
pop
mov
push
xchg
sti
jbe
cmpsl
xchg
sbbb
test
and
es
push
mov
ret
pop
movsl
adcl
loopne
mov
mov
and
out
cmp
pushf
std
iret
mov
inc
enter
jae
xchg
ljmp
lods
xchg
sbb
lds
add
dec
mov
sarb
scas
enter
out
sbb
into
adc
inc
xchg
sbb
enter
or
popa
cltd
mov
push
jnp
sbb
sub
ficoml
std
dec
sti
daa
mov
sbb
xchg
aad
out
jbe
fisubs
negl
aas
xchg
fiadds
pop
or
and
xchg
gs
setle
sbb
bound
divb
inc
and
cltd
pop
and
ss
xchg
push
inc
cmp
fs
mov
into
fdivrl
jl
mov
ljmp
scas
push
or
adc
xor
xchg
aas
cmp
stos
jae
hlt
adc
imul
scas
pop
adc
sahf
push
int3
insb
mov
mov
out
pusha
insb
jge
adc
or
mov
imul
jg
shr
xchg
in
scas
loop
cwtl
cltd
add
sbb
sub
fmulp
call
sbb
cs
psrlq
mov
movsl
out
xchg
fs
sbb
pop
aas
sbbl
scas
lods
cmp
adc
ror
sub
jmp
or
jbe
ljmp
mov
clc
movsl
cwtl
push
aam
xchg
test
adc
mov
xchg
ret
pusha
jne
mov
ficoms
outsl
mov
adcb
sbb
cmp
das
push
negl
mov
and
inc
lods
int3
ror
scas
push
dec
loopne
loope
enter
cmp
push
pop
xchg
fs
div
or
ds
xchg
dec
lahf
aad
push
jmp
dec
sub
dec
dec
lock
add
mov
mov
test
sub
shrb
scas
pop
jmp
mov
outsl
and
lods
ja
aaa
adc
adc
xor
pop
les
adc
dec
push
push
call
and
pop
fidivrl
push
xlat
iret
mov
inc
mov
test
add
lea
mov
mov
and
jmp
in
lahf
fidivl
push
pop
sub
xchg
adc
je
xchg
cmp
leave
inc
sahf
pop
loopne
push
iret
adc
out
cli
xchg
cmp
fwait
jb
sbb
push
pop
cmpsl
inc
outsb
gs
mov
sub
sbb
xor
cmp
gs
shlb
das
push
xchg
out
sahf
push
pop
cltd
daa
movsb
xor
dec
and
inc
cmp
stc
adc
and
adc
mov
and
inc
pop
push
fldt
loope
addr16
adc
pushf
and
mov
mov
dec
rcl
subb
xor
nop
and
cs
int
dec
xchg
data16
aas
add
aam
xlat
mov
sahf
inc
jns
mov
push
loop
out
or
sbb
aam
and
xchg
mov
cmpl
rorl
pop
sbb
stc
sti
cs
pop
dec
fimuls
push
sub
int
pusha
xchg
jbe
adc
sbb
mov
gs
stos
sub
mov
cmc
bound
jnp
scas
hlt
aas
fldcw
adc
out
repz
push
sbb
jecxz
sti
mov
aad
gs
popa
sbb
movsl
out
and
out
divl
jae
cmpsb
ds
inc
lock
iret
loopne
ljmp
enter
out
mov
xchg
popa
je
cmp
iret
repnz
clc
int3
mov
out
cltd
ret
cmp
inc
cmp
dec
jmp
dec
call
inc
mov
dec
and
mov
push
scas
negl
add
dec
outsl
adc
cmp
aad
sahf
push
movsb
jge
xor
int3
jmp
imul
lods
push
iret
fcmovbe
add
scas
and
sub
out
and
add
mov
sub
mov
scas
and
mov
push
sub
int3
sub
push
pop
push
pusha
xlat
xlat
adc
lock
decl
mov
cmp
sub
mov
popf
xchg
lcall
addr16
sbb
adc
pop
cmpsl
int
fsubs
pushw
fwait
cmc
test
xchg
rcrb
pop
out
xchg
jno
xor
mov
xlat
std
int3
xchg
std
ljmp
push
dec
pop
subb
ja
cmp
jnp
mov
pop
jno
iret
or
int3
aad
test
addr16
add
push
jnp
dec
push
sbb
jmp
int
outsb
mov
cmp
jb
ljmp
pop
mov
shlb
daa
or
dec
mov
fwait
clc
xchg
push
dec
pop
daa
push
fistpl
les
dec
and
mov
ljmp
out
mov
sub
mov
cmpl
sub
push
lret
xor
adc
jno
sbb
roll
ljmp
xor
into
inc
jmp
shll
pop
cmp
cmp
xchg
clc
add
mov
xchg
dec
or
or
adc
andl
loopne
cmp
jb
shlb
xor
xchg
push
test
dec
add
push
leave
aam
xor
cmp
mov
aaa
sti
jae
fistpl
lods
sub
cmc
sbb
add
mov
les
pop
or
pop
fists
lahf
push
cmp
xor
add
jp
cltd
mov
xor
lea
es
push
xchg
ljmp
jne
nop
mov
mov
inc
pop
cmp
add
mov
sub
test
pop
js
fiadds
pop
into
mov
or
pop
sbb
jp
adc
aam
int
xor
call
int
sub
data16
mov
push
sub
mov
xchg
inc
inc
xchg
mov
out
jle
and
ja
adc
mov
cmp
xor
xlat
inc
sbb
adc
out
push
inc
fwait
scas
fmuls
jbe
iret
jns
inc
sti
cmc
mov
xchg
add
mov
push
or
imull
push
enter
sarl
ss
fucomi
cld
pusha
push
arpl
xor
stos
scas
fldl
mov
inc
repnz
adc
cmpsl
cld
and
addl
mov
cmpsl
push
out
int
fcomps
mov
jae
xor
jecxz
notl
int3
mov
xchg
cmp
in
ljmp
adc
xor
fmull
js
stos
xchg
inc
scas
negl
aad
ficoml
jo
jmp
imulb
inc
add
adc
adc
dec
sbb
xor
push
lods
daa
in
aam
push
int
add
out
gs
sbbb
and
fnstcw
iret
filds
pop
data16
sub
mov
bound
int
inc
xchg
push
mov
shl
sbb
cltd
add
push
cmp
mov
jl
dec
xchg
mov
adc
jns
sub
call
gs
je
stc
jl
mov
mov
sti
fdivrs
and
cmp
pop
xchg
cmp
sub
int
loopne
loop
aas
add
loope
sbb
aad
push
fisttpl
push
cwtl
ret
or
push
pop
dec
hlt
and
lock
push
cmpsb
aad
movsb
sbb
jge
sbb
lret
lea
or
movsb
adc
push
mov
or
in
daa
stc
mov
inc
push
rcl
mov
ss
rorl
pusha
sbb
jb
lcall
loop
inc
orl
filds
dec
sub
mov
fidivl
pop
and
daa
sbb
jmp
std
sbb
inc
rol
js
xor
fwait
mov
jo
ror
insl
test
fs
popa
out
mov
rcrl
jl
push
test
xchg
je
das
cld
xchg
je
mov
fwait
push
cmpsl
inc
sbb
pop
jecxz
cwtl
pushf
pop
loope
pop
js
inc
loope
push
inc
dec
add
xlat
loop
add
or
jae
sub
mov
dec
shrl
sbb
scas
push
lahf
push
xchg
stc
out
push
and
mov
dec
pop
mov
int3
sbb
shrl
lret
mov
pop
mov
sbb
sbb
or
or
fcoms
and
js
xchg
jl
push
into
aas
sysret
in
and
sub
or
ljmp
adc
les
cmpsl
mov
std
sub
shll
add
test
sbb
ret
xor
cmp
movsl
mov
jp
pop
sbb
push
or
shlb
popa
xchg
movsb
sbb
inc
mov
test
test
adc
lret
ljmp
cwtl
sub
mov
sub
movlps
push
sbb
icebp
xchg
and
adc
test
lcall
or
in
imulb
cmpl
mov
outsl
cmp
jns,pt
dec
cmp
xchg
popfw
sahf
popa
cmp
xchg
loope
and
jns
xor
adc
mov
daa
push
gs
push
mov
aad
mov
sub
jmp
jnp
pusha
mov
testb
and
ret
adc
adc
xchg
add
pushf
inc
or
pop
bsf
mov
push
fsubs
cmp
and
int
mov
adc
les
nop
xchg
and
addb
dec
test
pop
test
push
ljmp
aam
insb
xor
movsl
clc
jl
sub
mov
imul
int3
aas
aas
push
pop
push
cmpsl
inc
jns
jmp
out
loopne
push
int3
stos
in
adc
and
pop
sbb
pop
jns
leave
adc
jae
in
xor
sub
dec
enter
cmpsl
cmpsl
mov
sub
fadds
xchg
xchg
xor
pop
mov
mov
ja
shlb
dec
add
add
pop
iret
xchg
enter
mov
mov
fs
arpl
data16
jae
adc
pop
mov
sbb
sarl
jmp
mov
pop
leave
xor
sbb
jno
imul
dec
jg
pop
xchg
push
push
fwait
loop
hlt
sbb
mov
sti
jb
xchg
pop
or
dec
adc
sub
or
adc
cmp
and
lods
sub
int3
movsl
inc
pop
ja
cwtl
xlat
mov
jae
out
sbb
xor
lds
lret
inc
lods
insb
pop
enter
jg
or
adc
lods
mov
cmp
test
outsl
xchg
sti
jo
lds
sbb
xor
iret
inc
pop
lock
cmc
push
mov
idivl
fnsave
cmp
or
mov
xchg
stos
cwtl
mov
lock
pop
sub
cmp
cs
mov
adc
adc
fcoms
ljmp
ret
mov
mov
cmpsl
and
sub
cmp
sbb
clc
divb
jnp
lahf
addr16
xchg
push
call
push
jg
imul
ljmp
or
cmp
insb
loopne
negb
mov
add
inc
lods
cmc
adc
mov
loopne
pop
outsb
push
push
cmp
insb
lods
or
cmp
fwait
adc
jno
ret
cwtl
cmp
loop
mov
adc
pop
dec
fsubl
or
add
repz
inc
test
in
lds
ja
fucomp
sub
pop
adc
repnz
dec
xchg
clc
das
adc
call
push
pop
jle
mov
push
adc
sbb
adc
add
fldl
int3
enterw
adc
cld
mov
cmp
negl
xchg
cwtl
stc
push
fwait
lds
adc
repnz
and
pop
shrb
pop
pop
sbb
pop
push
icebp
out
sahf
or
ror
xchg
in
mov
es
aas
xchg
sbbb
sbb
pushf
add
jno
sub
mov
rcll
lcall
xchg
data16
shrb
pop
int
dec
xchg
push
push
insl
dec
hlt
out
cmp
mov
or
es
push
out
gs
pop
sub
or
aas
in
jmp
mov
in
sbbw
push
repnz
aaa
jl
adcb
scas
lret
pop
cmpsl
lret
inc
add
xchg
je
clc
loopne
jg
in
outsl
addr16
pop
loop
fwait
mov
or
ljmp
data16
inc
inc
add
ret
cli
jo
add
add
adc
adc
stos
aas
push
xchg
test
xchg
adc
shlb
fwait
addr16
fmull
dec
xlat
push
jbe
sbb
push
sahf
mov
adc
shll
xchg
popa
add
ror
ret
in
cwtl
shrb
cmp
lahf
jecxz
pop
cmp
test
test
dec
loopne
xchg
loopne
fimuls
iretw
cltd
pop
out
sub
ja
lock
or
cmp
jg
push
jns
loop
std
xlat
insb
pop
mov
inc
sbb
adc
add
or
jmp
loopne
pop
xchg
icebp
adc
cmp
test
int3
sbb
movnti
fwait
sahf
sar
mov
jb
into
jno
pop
inc
jns
adc
fisubrs
cmp
fdivl
int3
out
mov
imulb
sub
fnstsw
cs
jle
int3
push
aam
ss
xchg
repz
push
xor
iret
mov
pop
mov
std
mov
and
gs
cmpsb
pop
mov
jmp
xor
data16
sub
cmp
call
aam
pop
xchg
ret
imul
ja
iret
sbb
pop
bound
xor
enter
sbb
add
pop
xchg
adc
mov
pop
mov
mov
movsl
inc
pop
push
push
je
rcrl
daa
push
sub
in
sbb
pop
shlb
add
xor
aam
inc
daa
mov
add
in
addr16
xchg
repnz
cmpsb
lods
faddl
stos
xchg
jbe
xchg
and
in
mov
test
mov
in
push
ffreep
stos
cmp
dec
lahf
or
mov
mov
outsl
rclb
xlat
push
shlb
jl
pop
xchg
movsb
aaa
mov
insl
nop
imul
out
int
add
fs
xchg
push
fwait
sbb
pop
sbb
push
gs
mov
or
fadds
mov
and
cmp
sbb
imul
pop
lahf
xchg
ret
pop
cmp
or
cli
in
in
in
insl
fcomps
dec
jo
pop
incb
mov
aas
iret
popf
int
in
fadds
lea
mov
sbb
pop
push
ss
shll
gs
rcrl
mov
mov
iret
mov
in
out
icebp
and
dec
mov
push
mov
aaa
scas
sub
adc
out
adc
negb
xchg
mov
xor
or
sub
fistpll
push
ljmp
mov
div
fdivrs
xor
popf
mov
jge
fldt
inc
mov
inc
cmp
jns
push
jp
aaa
lahf
dec
sbb
stc
nop
push
out
lahf
stos
shl
arpl
sbb
inc
sahf
adc
shl
adc
lahf
filds
clc
pushf
leave
dec
shll
dec
fmull
sbb
rcll
js
fmuls
sub
notl
jns
push
insb
ljmp
push
xchg
dec
mov
mov
imul
xor
push
das
aaa
cmp
jae
adcb
sahf
push
shrl
icebp
sbb
lock
pop
jecxz
adc
cmc
dec
mov
iret
push
imul
inc
repz
loop
push
repnz
cmpsb
xchg
int3
scas
stos
popf
inc
data16
fwait
sub
sbb
sahf
loopne,pn
out
xlat
dec
pushf
xor
test
stc
outsl
adc
sub
fists
cmova
imul
jle
jb
jle
adc
mov
xchg
push
iret
sbb
incl
adc
test
xchg
and
int
decl
push
cmp
out
mov
and
cmp
clc
outsb
mov
mov
adc
loop
inc
out
outsl
in
cmp
mov
jl
and
cmpsb
nop
jae
std
mul
inc
ret
push
out
xchg
pop
fidivs
gs
in
xor
sbb
jp
mov
ret
xchg
mov
insb
jae
hlt
jle
sbb
arpl
test
push
aas
decl
dec
loope
and
bound
sbb
aam
stos
loope
sub
mov
out
push
jmp
popf
in
sub
insb
shrb
or
pop
mov
add
push
movsb
rep
test
xor
mov
sbb
jbe
dec
vminpd
lahf
dec
mov
push
fnstcw
pop
outsl
out
jge
and
imul
cs
xchg
adc
add
and
rcrb
cmp
jmp
pop
sub
push
push
sbb
push
addb
mov
lock
loop
imul
data16
es
adc
inc
xchg
mov
lcall
stc
push
pushf
adc
inc
dec
adc
lock
lahf
push
sbb
clc
insb
data16
fdivrl
jne
pusha
or
fld
ljmp
adc
stos
sbb
mov
inc
cmp
mov
add
add
lcall
gs
aas
orl
mov
daa
add
out
cs
fisubrs
addr16
inc
inc
ljmp
gs
test
fs
fdiv
call
sub
sahf
lahf
addr16
stc
shll
sbb
addr16
and
cmc
or
or
fstpl
adc
fildll
in
pop
mov
dec
call
jecxz
out
xor
sbb
in
push
push
jmp
xchg
sbb
sbb
push
inc
mov
and
sbb
cmpsl
pop
pop
fildl
clc
bound
jb
sbb
bswap
inc
loopne
shlb
or
add
in
out
mov
adc
das
inc
into
clc
xorb
pusha
popa
adc
add
pop
xchg
jb
xor
fnclex
or
ljmp
sbb
jb
cmc
ret
loop
fs
or
fildl
lahf
iret
pop
imulb
mov
out
jmp
cmp
sahf
push
dec
sar
sbb
movsb
sub
and
lea
pop
shll
jp
test
sub
jl
mov
push
jmp
enter
cmc
xchg
jbe
mov
ret
cmp
mov
sub
sub
jns
pop
arpl
insb
stos
mov
add
dec
dec
pop
ja
push
sub
adc
popf
mov
jo
push
fwait
add
shll
loopne
leave
shr
xchg
jbe
cs
clc
mov
sub
cmpsl
push
fs
nop
out
sub
sbb
cmp
xor
adc
mov
or
push
xchg
iret
push
jecxz
cmp
in
lods
cmpsb
movb
xchg
addl
mov
jb
push
addr16
mov
aam
dec
push
cmp
inc
xor
std
fadd
scas
inc
pop
cmpsl
pop
mov
popf
imul
or
cmp
dec
mov
repnz
les
iret
adc
test
scas
jl
pop
pop
sub
ds
icebp
jnp
sahf
insb
add
push
fcomps
aad
imul
js
arpl
mov
adc
bound
rcl
or
imul
push
add
xor
mov
mov
mov
xor
mov
aad
sbb
xchg
push
iret
or
and
and
test
sbb
and
repnz
es
fsubrs
inc
rcrl
test
mov
imul
hlt
daa
inc
in
fldenv
xchg
jnp
pop
dec
sbb
data16
int
popa
iret
inc
pop
imul
int
ret
jecxz
sub
out
outsl
sub
xchg
jmp
pop
test
fistps
or
jg
pop
ds
cld
lods
cmp
daa
jge
das
rcrb
loop
test
mov
mov
jge
repz
sbb
popf
cli
das
adc
out
sbb
insb
stos
xor
mov
inc
int
cltd
push
sbb
lcall
iret
jb
out
fisttps
in
push
and
mov
push
xchg
popw
enter
idivl
pop
out
lods
mov
pop
test
cmpsl
insb
std
inc
into
mov
das
inc
fldcw
fs
jbe
fadds
xorb
push
sahf
xchg
pop
cmp
or
sbb
mov
fnstenv
pop
out
dec
test
cmc
mov
fistl
pop
xchg
push
add
xor
sbb
and
movsl
push
jmp
mov
sbb
cltd
cltd
pop
and
out
popf
cld
call
ss
cmp
inc
sbb
adc
mov
xor
gs
cltd
mov
repz
movsb
loop
fnstsw
pcmpgtb
xlat
mov
jp
dec
cmp
loop
sti
cmp
jo
cmpsb
dec
into
mov
inc
fs
js
fs
idivl
xor
cmp
dec
fldln2
nop
push
mov
dec
push
or
jg
in
or
nop
das
pop
movsl
push
cltd
pop
sbb
mov
mov
inc
add
lret
xchg
cmpsl
adc
push
icebp
adc
leave
addr16
and
and
scas
test
and
sub
dec
xor
fstpl
xchg
aas
punpckhdq
arpl
xchg
adc
mov
jnp
push
xor
xlat
fnstcw
das
data16
mov
inc
iret
jmp
mov
cmp
push
adc
sbb
and
in
mov
scas
gs
mov
fwait
lret
sub
enter
cmp
inc
mov
cli
pop
insl
outsb
inc
decb
mov
fadds
addr16
icebp
xchg
test
or
popf
add
lcall
push
in
adc
push
xor
in
int
inc
adc
in
sbb
hlt
cwtl
dec
jb
cmp
mov
jne
push
or
movb
lret
pop
mov
jns
inc
fdivs
sbb
sbb
add
xchg
in
in
insb
mov
dec
xor
stc
pop
lock
in
sbb
push
dec
into
xchg
xor
shlb
aad
mov
aaa
ret
xchg
push
int
jns
push
xchg
repnz
andb
in
fistl
jle
iret
mov
gs
cltd
pop
fld
aas
rorb
pop
pop
ret
ds
xor
jecxz
jb
adc
pop
add
repz
ret
stos
push
fisubrs
add
ret
out
lret
popa
pop
dec
xchg
sub
xlat
mov
push
pusha
and
sbb
lock
add
out
adc
or
pop
inc
outsb
iret
xchg
iret
xor
mov
in
je
data16
jno
inc
and
test
scas
insl
lods
arpl
sbb
call
int3
test
mov
mov
scas
push
or
test
push
adc
jge
cwtl
or
sbb
xor
adc
xchg
imul
aas
ret
fcmovnu
add
push
jae
imul
lods
fsubrp
shll
or
gs
mov
enter
push
inc
add
cwtl
in
cli
idivl
and
inc
xchg
push
ljmp
int3
xchg
inc
andl
sbb
add
cltd
int
repz
inc
cltd
jmp
add
adc
mov
cmp
mov
inc
mov
xchg
repz
or
jb
push
push
xor
clc
imul
idivl
cmc
fcomps
xorb
iret
arpl
xchg
fistpl
pop
xor
push
pop
sbb
mov
or
out
jnp
sbb
daa
enter
jbe
mov
loopne
rcll
aaa
jg
adc
cmp
push
sub
dec
xchg
or
mov
lock
arpl
iret
icebp
inc
adc
movsl
adc
mov
fs
mov
sbb
out
mov
std
lahf
adc
stos
cmp
xorb
iret
push
lea
xchg
adcl
or
lcall
sbb
mov
and
frstor
sti
shl
xchg
int
in
loopne
test
push
int
ret
cmp
imul
leave
push
xor
inc
fisttps
pop
inc
sub
sub
addr16
pop
jo
aas
stos
inc
outsl
outsl
fs
and
popw
mov
sarb
adc
outsl
ret
add
adc
mov
mov
xchg
cli
jbe
pop
lretw
add
test
sbb
jp
inc
dec
adc
lds
test
int
mov
stc
gs
dec
pop
pushf
loopne
or
lods
call
cmp
addr16
mov
jo
push
fwait
push
jmp
stos
pop
adc
dec
ja
sti
ret
jmp
int
shll
fwait
int
dec
dec
pop
or
test
rcl
fcomps
out
and
cmpsl
mov
mov
push
rclb
ret
sahf
lret
adc
clc
test
out
pop
insb
in
sub
and
mov
addr16
push
xchg
filds
adc
cs
mov
and
imull
rcrl
sbb
mov
mov
sbb
xchg
sub
mov
inc
fisubs
xor
roll
or
in
fnstsw
add
or
add
pop
mov
je
popf
sub
mov
fdivrs
jge
nop
and
mov
cld
mov
int
mov
scas
pushl
inc
xlat
out
pop
xchg
jp
cmc
ja
push
sub
test
sub
jle
scas
shll
or
jmp
sub
stos
jbe
divl
xchg
cmpsb
jge
jecxz
cmpsb
test
cmpsl
pop
stos
sbb
aad
aam
mov
outsl
adc
incb
adc
mov
adc
push
les
in
int
test
mov
aas
mov
push
aas
fdiv
inc
test
fdivrl
clc
pop
xor
pop
imul
insl
and
mov
fisttps
or
aaa
add
sbb
push
jb
es
jecxz
aad
and
mov
in
mov
jno
mov
fwait
add
imul
cmp
ja
dec
or
fimull
in
jecxz
or
mov
jbe
sahf
pop
mov
xchg
out
sub
push
adc
movsb
cli
cmp
scas
in
fs
mov
arpl
mov
and
dec
and
adc
or
push
cld
sbbb
call
or
dec
xor
sub
cmp
rcrb
inc
pop
addr16
fs
xor
repnz
addr16
lahf
fs
mov
imul
dec
pushf
outsl
mov
adc
idivl
repz
cmp
shll
push
mov
cwtl
mov
xchg
aas
and
xor
out
or
lock
andb
cmpsl
xchg
cmpsb
xor
dec
sti
cmp
cmp
imul
lds
mov
push
inc
pop
lock
addr16
cld
sbb
push
pop
cmpsl
jae
mov
cmpsl
sub
icebp
or
data16
jb
lahf
sub
mov
iret
jnp
jns
daa
cmp
cwtl
xorb
xchg
stos
ret
and
pop
push
jg
popf
gs
push
and
lahf
inc
mov
or
or
sbb
fsubr
pusha
int
and
rcrb
pusha
ror
movsb
adc
pusha
xor
int3
mov
adc
cwtl
or
inc
mov
int3
push
data16
sub
pop
sbb
aad
jmp
add
mov
cmpsl
ret
push
adc
arpl
mov
adc
fisubs
cld
sbb
and
test
jo
aaa
loop
ja
jmp
addr16
daa
inc
aas
fstpt
cmpsb
pop
adc
sbb
add
stos
adc
fadd
cltd
in
stos
jo
rolb
mov
gs
push
orb
sbb
dec
pop
aas
adc
imul
popa
into
inc
int3
addr16
inc
daa
out
lods
and
int3
loopne
mov
dec
xor
ss
movsb
adc
out
xchg
xchg
xlat
or
xor
jg
or
aas
adc
fildll
jl
cmp
mov
adc
mov
outsl
test
fsts
inc
je
xchg
fwait
adc
addr16
cmp
or
nop
fdivl
adc
imul
out
cmpb
jno
fsubl
packsswb
mov
sbb
stos
or
pop
sbb
cs
push
xchg
clc
scas
shlb
popa
jns
int
xchg
or
jp
dec
pop
fdivs
insl
dec
sub
aas
xor
jmp
addr16
incb
inc
scas
out
sub
hlt
cli
push
xchg
out
jmp
sbb
ds
dec
out
test
movsl
xchg
xor
movsb
dec
into
shl
ss
dec
int3
jecxz
or
test
imul
js
push
mov
shlb
xor
mulb
push
jmp
aaa
mov
loop
pop
ffreep
popa
mov
sbb
clc
mov
addr16
repz
mov
in
cmp
in
sbb
scas
add
cmp
adc
mov
sbb
addr16
fcomps
xchg
rcll
push
fdivrp
repz
push
pop
dec
cmp
cmpsl
shrl
aas
pop
add
sarl
popa
sub
mov
js
sbb
arpl
jge
mov
push
inc
ljmp
lret
fwait
cli
idiv
jae
sti
jno
in
xor
call
inc
pop
out
into
rorb
sub
lea
mov
push
incb
jle
xchg
adc
adc
or
mov
jge
int3
hlt
cmc
int
outsb
faddl
insl
out
shlb
adc
push
xor
or
pop
jle
ret
pop
subb
in
dec
int
mov
fisubrs
out
pop
mov
roll
cmpsl
or
adc
aam
push
shll
mov
inc
addr16
jmp
lret
jle
push
sti
pusha
mov
fmul
sub
mov
add
insl
ret
sbb
in
xor
scas
cltd
adc
ret
adc
mov
push
push
adc
into
xor
inc
xlat
mov
jbe
sub
mov
jmp
push
push
into
stos
dec
ss
andb
fadds
cltd
int
icebp
pushf
fsts
cwtl
pop
jg
fstps
aas
pop
clc
outsl
mov
xchg
imul
cmp
roll
call
ljmp
scas
add
aam
mov
pusha
mov
or
push
cmp
repnz
je
inc
jae
xchg
jne
push
int
adc
bound
lock
jne
enter
insb
int3
sbb
adc
mov
adc
fwait
push
xor
push
jno
out
ds
adc
xlat
adcl
xchg
xor
or
gs
or
nop
movsb
sub
into
dec
push
movsb
and
popa
push
into
test
cmp
js
nop
adc
int
dec
jge
cltd
movsb
cmp
sbb
or
cmpsb
mov
mov
clc
jp
imul
pop
fidivrs
shlb
inc
cld
adc
mov
mov
xchg
gs
mov
or
push
stos
mov
clc
les
sbb
adc
jle
int
jg
aam
call
cld
jmp
sbb
cs
sbb
cmp
mov
mov
inc
jmp
adc
jecxz
cmp
sbb
es
xchg
jae
testl
and
push
sub
aas
fisubl
dec
mov
stos
adc
int3
cmp
and
pop
xor
pop
dec
inc
cmp
xchg
adc
aad
clc
or
and
or
sbb
push
mov
stos
cmp
out
dec
shrb
popf
pop
out
out
mov
pop
rorb
add
std
int3
cld
int
jbe
dec
and
push
out
cld
out
dec
push
shll
and
mov
pusha
push
and
dec
imul
sub
clc
mov
sbb
jnp
adc
adc
jnp
mov
rcl
sub
pop
push
dec
jmp
dec
das
es
inc
aam
je
fisubl
sarb
and
lods
inc
imul
fists
sub
inc
push
dec
loopne
mov
idivb
inc
and
mov
inc
xchg
mov
push
xchg
imul
xor
leave
out
xchg
add
add
jnp
or
test
push
int3
or
push
addr16
push
pop
faddl
in
sbb
push
dec
pop
mov
lods
clc
inc
iret
mov
lahf
clc
fdivrs
callw
cmp
outsl
icebp
and
out
xchg
pushf
lods
adc
dec
xchg
jns
mov
ja
jmp
xchg
imul
and
movb
jle
sti
adc
pop
repz
mov
push
push
and
push
cmp
cld
int
adc
iret
jle
repnz
sub
dec
lods
mov
inc
xchg
cld
push
add
sarb
popa
pop
iret
sub
mov
clc
test
xchg
dec
xchg
data16
icebp
mov
push
sbb
sbb
arpl
repz
mov
rorl
sub
xchg
push
inc
cmp
jo
test
mov
pusha
das
ds
les
test
sbb
dec
fbld
cmp
jns
out
mov
iret
pop
out
cmc
pushf
sub
repz
rcrl
ret
cli
cmp
pop
mov
scas
hlt
loopne
inc
pop
push
lahf
mov
jg
add
std
xchg
dec
shl
mov
in
test
jmp
sahf
and
stos
pop
xlat
out
bswap
dec
xor
inc
sub
push
dec
repz
pop
mov
call
add
mov
shll
lcall
add
fmul
orl
inc
push
pushf
mov
fisubs
sbb
push
or
rcl
adc
not
std
jb
or
cmp
jl
insl
popf
out
test
lret
mov
push
sbb
lea
push
inc
mov
inc
call
mov
xor
or
xor
sbb
lret
cmpb
mov
insl
adc
adc
add
aad
pushf
cltd
popf
ja
cmp
xchg
daa
pop
loopne
pop
iret
cltd
mov
popf
push
cmpsb
imul
and
int
cwtl
pop
sub
add
inc
mov
hlt
aas
imul
mov
lea
enter
xchg
iret
xor
das
pop
sarb
insb
outsw
or
sbb
gs
ljmp
inc
or
adc
cltd
sbb
pop
cmp
arpl
sbb
test
push
add
lcall
jle
ror
dec
inc
add
cmp
or
add
daa
adc
sbbl
xchg
cltd
inc
adc
and
adc
pushf
or
pop
dec
inc
push
pop
loopne
enter
jmp
add
mov
arpl
sbb
xor
or
dec
insb
shl
fidivl
scas
jne
loope
cmp
jecxz
mov
ljmp
imul
inc
pop
xchg
sbb
sbb
mov
pushw
js
jmp
pop
mov
incl
aas
push
enter
out
push
add
push
int
mov
ljmp
cmpsl
or
test
call
lret
lods
fwait
fs
cmp
pop
sub
cmp
rol
dec
add
jbe
adc
into
dec
in
ret
into
js
jg
push
es
jmp
push
xlat
test
int3
push
cmpsl
jo
icebp
ds
popf
pop
lret
sub
and
jb
dec
mov
cmpsl
sbb
ret
sub
enter
push
add
or
dec
dec
fwait
and
sbb
mov
mov
cmpsb
mov
clc
pop
pusha
lock
mov
loope
imull
or
cwtl
sahf
add
jp
push
iret
adc
es
and
or
jb
dec
sub
iret
pop
inc
pop
addl
and
sbb
add
jl
adc
sahf
add
je
xlat
enter
into
mov
pop
sub
fwait
inc
xor
test
xchg
xor
and
jb
ret
sbb
scas
jnp
mov
push
in
jg
roll
push
imul
mov
fisttpll
xor
adc
and
in
iret
sbb
adc
sbb
scas
lods
addr16
adc
mov
jmp
cltd
int
cli
nop
jmp
push
adc
lods
lcall
mov
or
adc
sub
popf
fcmovu
pop
pop
mov
dec
adc
fs
inc
adc
push
xchg
insb
adc
push
push
sub
push
aaa
adc
push
cmpsb
clc
jl
movl
int
mov
jecxz
sbb
popf
mov
add
cmpsl
flds
imul
leave
and
add
aad
push
or
decl
push
push
mov
movsw
xor
push
popf
inc
mov
cmp
mov
inc
stos
jo
xchg
cmpsl
adc
xlat
pop
mov
xor
jg
gs
fisubrl
jno
in
dec
int
push
enter
xlat
je
add
sub
sbb
sbbb
repz
push
ret
mov
je
dec
xchg
inc
jb
sbb
lret
xchg
in
notb
inc
movsb
push
jg
cmpsb
jnp
bound
jg
jnp
es
xchg
xadd
adc
call
xor
push
addr16
cwtl
sahf
mov
adc
stc
dec
xor
data16
in
test
cmp
and
call
addr16
cld
adcb
insl
mov
popf
imul
dec
decl
jmp
insl
mov
cmpsl
mov
adc
inc
sbb
push
xor
movsl
ret
and
mov
sarb
inc
mov
lret
pop
mov
jo
repnz
sub
iret
push
and
push
in
pushf
out
push
jnp
arpl
jmp
pop
dec
adc
pop
das
or
push
dec
push
jg
std
lods
movsl
test
imul
loope
into
cmp
imul
or
cmp
sbb
adc
and
and
inc
rcrl
ds
pusha
and
popa
xchg
mov
lods
adc
icebp
js
movsl
ds
negb
out
fistps
cs
adc
repz
dec
test
in
mov
pop
lahf
inc
and
mov
in
negb
out
scas
scas
dec
cmpl
mov
push
jl
sub
jns
addr16
iret
xor
fcomip
mov
adc
sbb
int
dec
idivb
aam
test
sarl
cmp
insb
sarb
imul
pop
xchg
dec
adc
jae
divb
push
and
dec
js
push
insb
in
aam
mov
inc
adc
insl
ret
lahf
mov
jmp
nop
imul
out
pop
and
rcll
insl
lea
int
dec
iret
int
andb
jb
sbb
out
cmp
es
adc
adc
pop
jecxz
mov
iret
adc
imul
sarl
jl
adc
pop
fs
int3
add
in
push
dec
fistpl
sbb
xor
bound
adc
inc
xchg
mov
mov
push
std
mov
xchg
je
int
je
add
scas
frstor
mov
movsl
add
in
sub
dec
nop
mov
iret
test
rclb
fiaddl
pop
sbb
cld
outsl
inc
jbe
add
int3
mov
pop
sbb
sbbl
mov
les
aaa
adc
cmp
outsl
and
sbb
aam
mov
ret
daa
stos
xchg
or
xchg
iret
test
out
pop
inc
arpl
je
bound
call
jo
pusha
gs
mov
jmp
mov
addr16
scas
mov
jg
jbe
hlt
lea
inc
sbb
adc
xchg
jle
gs
xchg
xchg
loop
lock
sbb
mov
mov
adc
mov
dec
call
inc
inc
iret
fisttpl
leave
inc
xchg
stos
mov
inc
rorb
pop
cmp
es
jge
jle
cmpsl
popf
xchg
rcll
mov
stc
adc
pushf
sub
das
mov
jmp
xlat
or
call
pop
pop
sbb
lahf
in
insl
int3
or
in
pop
mov
test
add
and
push
mov
pop
lds
fildl
or
cmp
cmpsb
lret
push
movsl
sbb
adc
int
sub
cmp
int3
dec
mov
sbb
push
pop
mov
daa
int3
int
mov
fnstsw
push
fstpt
mov
sbb
inc
or
cld
mov
dec
push
push
mov
jnp
dec
aam
add
lods
pop
xchg
test
aam
or
jb
jmp
push
clc
outsb
in
fwait
ret
gs
sbb
jno
aas
xor
and
and
js
or
les
mov
add
test
xchg
adc
das
add
and
test
adc
adc
add
in
inc
ret
dec
inc
adc
add
dec
adc
xor
addl
add
add
add
addb
add
adc
dec
test
add
and
inc
mov
and
inc
or
nop
sub
in
or
shll
xchg
or
mov
adc
add
add
adc
add
add
add
adc
inc
inc
add
xchg
rcrb
addb
lea
and
dec
enter
adcb
add
add
add
rolb
add
add
pop
cwtl
pusha
pusha
roll
adc
sub
ss
add
xor
dec
add
add
add
xor
add
add
clc
orl
xchg
mov
sub
sub
adcb
inc
add
lret
add
movsb
inc
nop
nop
lock
lock
enter
or
sbb
or
add
add
andb
add
add
inc
adc
inc
and
push
adc
inc
nop
add
add
adc
aam
push
sub
and
movsl
and
movsb
or
inc
or
add
adc
dec
inc
adc
add
pusha
adc
inc
add
inc
dec
inc
mov
bound
and
add
add
add
ret
and
addb
addb
pop
cmpb
mov
adc
mov
pusha
enter
push
fwait
or
orb
and
push
sbbb
js
add
pusha
andb
add
push
inc
rolb
inc
shl
adc
sbb
rcr
push
inc
inc
add
andb
and
add
xor
add
add
adc
adc
and
add
and
inc
push
xor
push
or
mov
inc
pop
add
add
addb
or
mov
sbb
dec
sbb
adc
or
andb
dec
adc
add
adc
nop
add
inc
add
inc
test
cmp
or
test
add
adc
dec
push
add
adc
sbb
inc
inc
sub
add
adc
dec
sub
ret
pop
and
dec
add
and
sbbb
and
inc
mov
mov
inc
mov
add
xchg
inc
add
adc
inc
gs
add
and
sbb
add
addb
or
adcb
add
inc
lret
or
mov
inc
rolb
add
push
popf
or
mov
inc
test
add
dec
adc
pusha
es
and
or
push
add
and
adc
add
cmp
add
inc
add
sbb
add
add
and
add
or
add
adc
popa
setno
add
sub
or
add
adc
or
xchg
add
or
add
add
and
and
add
repnz
adc
inc
addr16
and
mov
dec
adc
dec
or
add
add
rcrb
adc
xor
or
adc
inc
add
add
mov
fs
and
les
addb
add
push
sub
mov
sub
or
mov
sbb
sbb
addb
add
inc
addb
inc
add
test
adc
jmp
movhps
sbb
add
inc
add
add
adcl
add
add
sub
inc
lcall
addb
inc
adc
and
lds
nop
jo
add
add
cmp
and
adcb
add
inc
add
adc
add
adc
sbb
nop
inc
rolb
mov
add
andl
mov
inc
sbb
and
mov
nop
add
lds
add
adc
add
push
aaa
adc
imul
dec
inc
dec
mov
add
adc
or
add
mov
sbb
and
add
or
inc
add
dec
mov
imul
and
or
add
xchg
or
pusha
jo
pusha
add
ret
push
or
mov
add
or
jo
inc
mov
add
rclb
sub
sub
dec
add
pushf
add
sbb
inc
nop
add
or
sub
add
add
mov
loopne
add
sub
xchg
or
aam
sub
pop
or
add
add
and
dec
dec
add
sbbb
add
and
rolb
inc
add
sbb
push
insb
or
enter
adc
and
xchg
shl
or
cwtl
adc
dec
and
add
rolb
add
fsubrl
adc
loop
adc
shl
inc
mov
add
or
or
bound
mov
add
mov
adc
push
and
add
pop
addb
or
add
add
nop
push
and
adc
cmpsb
xchg
mov
add
inc
and
push
and
nop
add
sbb
adc
push
pusha
loop
shlb
and
and
mov
inc
adc
and
loopne
add
push
and
and
or
jmp
addb
add
sbb
or
adc
add
and
add
pushf
cmp
or
add
mov
pop
inc
fcoms
xchg
nop
and
inc
push
adc
add
and
and
sbb
and
inc
add
cmp
inc
xchg
add
add
inc
cmp
push
shlb
xorb
inc
inc
inc
push
xchg
inc
popa
and
js
adc
add
xchg
sbb
push
push
aam
push
dec
mov
mov
add
inc
inc
sbb
or
add
adc
add
or
mov
inc
ficoms
out
xor
mov
addl
lea
mov
sbb
movsl
inc
popf
add
sbbb
xchg
add
addb
sbb
cmp
and
pop
dec
inc
and
test
or
les
add
lods
add
add
sbb
and
adc
add
and
add
add
push
add
les
adc
mov
bound
add
inc
inc
add
inc
and
addb
orb
sbb
add
and
adc
or
mov
or
or
or
xchg
and
inc
and
mov
jmp
add
rolb
subb
and
add
inc
dec
add
dec
mov
add
inc
add
add
add
sub
sbb
add
dec
mov
call
add
add
or
or
add
add
pusha
or
and
or
nop
xor
sbb
mov
add
adc
js
push
rorb
daa
add
lods
cmp
push
add
xor
xor
add
test
and
add
add
xchg
add
sub
sub
adc
test
add
aaa
xor
adc
inc
add
push
test
adc
or
add
test
out
popa
add
or
int
add
roll
adc
sub
sbbb
mov
adc
addb
inc
xor
inc
push
add
les
add
ret
pop
mov
mov
or
adc
and
sbb
add
fadds
add
or
or
and
add
adc
adc
sbb
dec
add
and
add
sbb
mov
and
mov
or
mov
adc
and
add
orb
adc
pusha
add
sbb
test
add
add
add
xorl
add
or
dec
popa
push
sbb
mov
cwtl
adcl
cmpsb
or
inc
addl
or
rolb
and
loop
dec
and
push
addl
add
adc
adc
jno
dec
add
add
sbb
add
add
cmp
add
xor
in
or
and
or
or
inc
adc
sub
or
sbb
dec
push
add
adc
adc
dec
xor
adc
inc
movsb
inc
das
add
daa
xor
les
push
sbb
and
adc
sub
stos
mov
adc
add
inc
loopne
adc
add
xchg
inc
and
les
add
inc
andb
add
add
inc
add
mov
push
add
adc
rclb
adc
sub
xchg
add
inc
adcb
add
rcll
add
add
jp
dec
or
add
add
pop
inc
shrb
mov
add
mov
add
add
dec
and
inc
and
push
or
addb
add
adc
mov
dec
and
dec
aam
mov
add
pushf
add
mov
inc
sarb
sub
mov
inc
sbb
xor
test
add
or
adc
sub
lock
mov
add
add
dec
pop
and
push
or
ret
or
stos
test
cmp
adc
xor
or
add
dec
mov
pusha
add
bound
cmp
add
or
adc
inc
push
loopne
aad
add
fwait
or
push
add
nop
add
mov
cmp
sbbl
inc
and
inc
add
add
add
test
mov
or
orb
add
or
pop
add
subl
push
xorl
push
and
adc
add
add
add
add
mov
or
mov
add
or
push
add
add
xchg
or
addb
add
dec
push
add
inc
and
sub
out
or
sbb
or
add
push
sub
test
or
inc
mov
add
inc
add
cwtl
or
dec
push
xor
test
adc
add
adc
inc
jno
add
xor
and
or
add
nop
inc
add
push
add
adc
addb
andl
xchg
lods
add
in
xchg
adc
inc
add
xchg
imul
add
or
xchg
add
adc
adc
test
adc
add
addb
inc
adcb
and
adc
or
sbb
add
push
add
adc
daa
or
or
adc
adc
adc
and
test
add
bound
add
add
or
add
add
jo
inc
inc
add
adc
add
or
addb
add
or
dec
push
and
andb
pusha
push
adc
add
pusha
data16
inc
adc
leave
push
dec
add
arpl
and
adc
adc
test
and
test
sbb
or
or
roll
or
and
mov
mov
jmp
inc
add
push
add
or
inc
roll
adc
or
and
add
lret
or
les
or
je
or
and
pop
orb
and
jno
add
sub
xor
and
test
add
add
mov
inc
xor
add
push
add
sub
add
test
add
push
or
mov
mov
adc
add
and
xchg
push
push
mov
inc
mov
adc
sbb
andb
orl
or
dec
add
sbbb
adc
dec
dec
lret
or
rclb
add
inc
add
mov
push
add
add
or
adc
adc
add
les
cwtl
or
pop
dec
add
and
add
inc
adc
sub
add
inc
inc
and
pusha
or
add
inc
dec
lock
dec
add
in
or
adc
cmp
mov
dec
inc
adc
cwtl
inc
pusha
mov
test
popf
add
and
sbb
adc
mov
or
subb
pop
add
mov
mov
sub
adc
push
shll
addb
addb
push
or
add
bound
mov
and
and
sbb
add
add
add
add
test
add
inc
sbb
add
andb
mov
or
push
mov
or
and
test
add
roll
or
add
push
and
and
shlb
adcb
and
and
push
add
and
popa
add
sub
and
cwtl
and
or
xchg
add
mov
xchg
push
add
and
movsb
rolb
inc
inc
inc
andb
adc
or
add
rol
add
push
addb
xor
popa
inc
or
and
add
adc
add
adc
js
mov
add
sbb
add
add
add
sub
push
adc
add
inc
stos
add
cli
shrb
bound
pusha
mov
or
push
add
add
mov
push
add
test
inc
sbb
or
add
xchg
add
mov
push
adc
addb
add
add
dec
mov
sbb
add
mov
adcb
adc
inc
or
sbb
aad
sbb
add
xchg
inc
add
add
or
add
test
mov
add
mov
push
push
adc
or
and
mov
sbb
cwtl
sub
fmuls
add
mov
or
sub
test
int3
and
inc
push
imul
test
mov
test
xor
andb
sbb
mov
add
adc
mov
pusha
or
movsb
loopne
add
adcb
and
aad
add
add
push
enter
and
or
or
adc
add
lea
and
add
add
mov
data16
add
add
add
inc
push
xor
mov
or
pop
les
add
add
inc
and
add
and
pop
lcall
add
rorb
adc
add
add
pop
les
dec
add
sub
dec
sbb
add
xchg
inc
add
add
and
shrb
rclb
test
pusha
js
add
add
and
inc
rorl
or
sbb
or
inc
xor
sbb
add
add
sbb
adc
add
lret
or
add
loop
sbb
adc
add
or
pop
push
xor
add
and
add
inc
sub
add
and
jno
and
pop
nop
pop
xchg
push
es
add
or
xchg
mov
push
mov
orb
sahf
or
add
adc
inc
sub
inc
movsl
add
cwtl
and
push
add
add
and
mov
dec
push
and
sub
add
sub
cwtl
xor
inc
insl
add
movsb
adc
aam
add
inc
dec
dec
xchg
addb
or
movsb
pop
add
and
dec
addb
sub
ret
adc
mov
sub
roll
push
adc
mov
addb
orb
sub
add
or
add
xchg
xchg
add
and
cmp
cmp
xchg
inc
inc
sbb
push
add
push
add
inc
mov
add
fildl
mov
add
inc
dec
add
rolb
add
call
adcb
add
add
or
add
and
and
push
add
faddl
lds
and
or
aam
and
add
mov
sbb
test
add
test
mov
xor
add
add
inc
inc
orb
mov
add
pop
adcb
pusha
and
dec
popa
add
add
add
mov
and
inc
mov
mov
adc
scas
add
addb
cwtl
shll
mov
loopne
cwtl
and
and
mov
inc
test
push
add
ret
addb
xorl
dec
or
movsb
or
or
add
add
add
inc
push
and
sub
add
inc
add
pop
and
xor
cwtl
or
add
mov
and
push
xor
mov
add
addb
mov
adc
jo
and
add
test
ret
add
mov
add
push
pushf
inc
or
inc
adc
adc
push
add
xor
add
test
and
adc
adc
adc
add
and
add
mov
xorl
push
lcall
add
pop
add
sub
addb
adc
rolb
lods
push
add
push
add
adc
push
mov
add
inc
inc
add
sbb
inc
and
add
inc
inc
adc
add
mov
add
and
add
add
and
pusha
or
xchg
add
inc
and
add
inc
popa
and
ret
add
sub
adc
pusha
sub
inc
pusha
add
addb
push
and
push
add
and
add
adc
add
add
pusha
mov
sub
push
xor
enter
mov
mov
pop
mov
test
add
adc
push
inc
xor
add
and
andb
adc
cmp
add
dec
and
and
push
sub
add
sub
daa
inc
sbb
cmp
adcb
add
rorb
cwtl
add
sub
push
loopne
mov
add
add
inc
add
add
adc
add
add
loopne
test
and
and
adc
and
adc
inc
lahf
adc
add
or
adc
cmp
nop
mov
add
ret
mov
adc
push
xchg
add
and
push
add
adc
test
add
xor
add
mov
mov
inc
push
xchg
and
add
push
add
add
jp
and
adc
inc
add
inc
adc
pusha
xchg
mov
mov
add
xchg
test
lds
test
sbb
add
rorl
or
adcb
add
sbb
and
or
xchg
add
add
rcl
sub
add
and
inc
pop
daa
inc
inc
add
push
push
inc
mov
push
cmpb
dec
shrb
add
adc
xor
add
iret
aam
add
and
mov
push
mov
add
movsb
push
and
sbb
push
adc
test
or
rorb
pop
or
fs
push
push
sub
sub
sbb
or
add
and
add
xor
or
rclb
and
mov
nop
add
adc
movsb
or
xorl
or
and
adc
and
adc
mov
jns
add
pop
or
mov
add
adc
push
adc
xchg
add
inc
push
and
push
fmull
add
add
sub
popa
inc
mov
xor
add
adc
add
jmp
add
adc
rorb
mov
inc
sbb
and
jno
cwtl
bound
enter
add
orb
mov
add
add
add
add
and
and
rclb
mov
cmp
inc
add
sbb
addb
sbb
dec
movsb
add
xor
push
and
jl
and
nop
adc
push
loopne
and
adcb
add
push
add
addb
inc
add
add
xor
mov
cmp
inc
inc
sub
add
add
add
inc
push
add
or
add
sbb
inc
and
inc
mov
add
test
xor
add
addb
insb
and
inc
adc
jno
or
or
adc
shll
xor
push
xchg
add
add
ret
mov
inc
add
test
add
push
jne
inc
enter
pop
imul
add
or
or
add
adc
and
shrb
or
xor
adc
dec
add
aaa
in
add
add
adc
and
orb
dec
and
dec
or
mov
mov
sbb
dec
adc
add
adc
inc
add
sbb
add
push
popa
xchg
adc
adc
sbb
add
and
add
and
addb
mov
and
mov
adc
pushf
movsl
push
add
shll
inc
or
mov
or
add
add
push
xchg
adc
push
pusha
and
add
add
add
adc
and
inc
and
sub
adcb
adc
pop
and
add
adc
inc
cmp
add
xchg
orb
add
adc
add
add
add
add
and
and
inc
sub
inc
xor
rcrl
and
and
inc
xchg
xor
add
adcb
inc
inc
add
test
adc
bound
add
add
mov
mov
addb
andb
adc
add
movsb
inc
add
add
add
inc
dec
add
dec
jbe
adc
push
nop
add
nop
add
add
mov
add
or
addb
inc
sbb
adc
add
and
shlb
mov
add
xor
lds
inc
call
cmp
or
inc
jo
sbb
and
xor
and
loopne
inc
sbb
add
dec
sbb
lret
adc
les
add
dec
inc
or
or
test
add
nop
add
fadds
mov
adc
mov
add
in
dec
mov
rorl
adcl
add
or
sub
mov
add
adcl
or
addb
or
mov
pusha
add
add
sbb
add
jl
push
mov
or
adc
and
inc
push
push
lcall
dec
add
add
addb
or
xchg
add
jno
add
test
add
add
inc
push
jb
push
adc
inc
push
mov
add
or
or
and
movsb
add
cmp
sbb
or
ret
sub
add
pusha
or
sub
adc
adc
test
add
addl
adc
adc
push
test
and
inc
mov
inc
add
add
add
add
or
inc
xor
mov
xchg
adc
adc
adc
or
lock
movsb
mov
add
dec
xchg
and
and
or
test
add
adc
or
fs
test
nop
addb
adc
arpl
inc
or
andb
or
adc
adc
or
pop
add
mov
js
or
rolb
and
add
add
sbb
pop
add
dec
and
xor
inc
test
cmp
mov
or
push
movsb
mov
add
adc
sbb
xchg
add
add
xor
adc
daa
or
and
addb
add
inc
and
or
jae
inc
and
sub
mov
or
or
dec
add
stos
sbb
or
adc
add
add
and
add
add
or
int3
mov
push
bound
mov
mov
addl
addl
add
or
and
add
add
and
and
add
mov
add
add
sbb
sbb
adc
or
sbb
add
pop
push
xchg
imul
adc
push
add
mov
or
js
inc
cmp
or
add
add
popa
dec
and
test
inc
and
nop
and
test
cmp
inc
sub
add
test
mov
sub
add
add
adc
push
inc
dec
add
rolb
nop
mov
add
or
sbb
addb
sbb
sub
xchg
dec
add
and
cmp
nop
add
sbb
or
inc
ret
sub
adcb
add
adc
inc
sbb
addb
ret
addl
add
shlb
popa
pusha
add
add
add
nop
mov
js
or
test
sbb
and
and
addb
xchg
dec
and
inc
add
addl
or
nop
sbb
add
adc
sbb
or
mov
nop
and
add
and
cmp
add
mov
and
add
inc
or
test
dec
add
or
clc
inc
aaa
or
adc
sub
adc
add
adc
add
lahf
and
jae
pop
inc
scas
inc
rclb
add
dec
add
call
push
inc
and
add
and
xor
sub
pushf
es
addl
add
push
adcb
add
add
cmp
ret
inc
adcb
inc
jno
add
push
add
add
inc
add
inc
and
dec
add
dec
jne
test
or
add
pusha
and
adc
add
or
add
push
add
or
adc
pop
inc
add
dec
sub
addb
addb
xor
add
add
push
and
add
shlb
inc
inc
and
test
rolb
add
push
add
inc
add
xchg
inc
push
or
inc
adc
add
inc
addb
pop
inc
sub
mov
pop
add
repnz
adc
mov
add
nop
inc
movb
add
pop
fs
add
add
sub
or
adc
and
push
daa
add
xchg
add
add
push
pop
add
dec
cltd
or
add
cmpsl
sbb
xorb
xchg
add
mov
add
add
jae
sbb
push
lcall
add
add
inc
add
or
or
orb
sbb
mov
mov
addl
add
adc
add
add
add
xchg
adc
add
xor
and
or
add
or
pop
and
adc
inc
add
sbb
or
push
rcrb
mov
and
and
or
add
add
adc
add
scas
dec
push
add
nop
sbbb
andb
adc
cmpb
add
push
lea
add
inc
clc
add
lret
cmp
or
mov
add
inc
and
andb
add
xor
add
or
test
add
lods
inc
mov
and
and
mov
add
movsl
xchg
jbe
mov
test
test
add
es
add
sbb
rolb
test
add
and
adc
add
or
xchg
inc
add
addb
or
shlb
add
sub
and
jo
addb
sub
add
pop
add
xor
les
pop
test
pop
inc
add
adc
push
addb
jl
add
inc
add
xor
mov
and
and
dec
sub
xchg
add
cmp
lcall
add
add
or
add
dec
add
or
adcb
sub
or
add
mov
pusha
jo
inc
adc
and
push
mov
add
add
sbb
rolb
adc
push
adc
pusha
enter
in
pusha
sub
mov
inc
loope
movsb
add
test
andl
add
xchg
rclb
sub
int3
shll
sbb
add
add
cwtl
add
or
or
or
adc
or
or
or
mov
or
shlb
rolb
xor
dec
orb
add
pop
addl
push
dec
push
add
add
add
push
add
and
movsb
adc
sub
or
add
add
pop
orl
adc
mov
and
add
adcb
push
adc
sub
nop
or
add
inc
rolb
add
push
mov
mov
nop
or
mov
andb
add
or
sbbb
adc
add
push
add
add
adc
and
pop
add
addb
and
nop
push
nop
add
add
add
and
and
inc
sbb
add
xor
xor
and
adc
cmp
mov
add
adc
add
and
xor
push
add
or
cmp
add
sbb
push
add
adc
cmp
adc
or
add
in
adc
adc
sub
test
xchg
and
subl
mov
add
nop
pop
rorl
push
add
adc
or
or
adc
add
add
addb
cwtl
push
xor
mov
data16
shlb
mov
inc
les
add
lds
or
push
and
or
add
fs
and
add
xchg
rolb
add
xor
add
inc
cwtl
jo
pop
enter
mov
add
cmpsb
adc
or
and
xchg
or
add
xor
bound
ret
mov
inc
sbb
das
and
ret
or
and
add
adc
add
enter
or
add
add
jns
fimull
pusha
push
addb
or
test
and
jo
or
cmp
mov
dec
or
cmp
or
add
and
sub
and
xor
dec
dec
inc
xor
add
or
adc
dec
add
cmpsb
mov
add
add
add
xor
mov
sbb
xor
and
push
and
inc
add
and
test
add
adc
mov
add
sub
sbb
inc
movsb
mov
daa
inc
inc
add
or
and
adc
inc
outsb
inc
add
mov
adc
add
mov
rcrb
sub
add
add
add
movsl
dec
and
daa
and
inc
add
xor
add
and
enter
inc
dec
and
cmp
push
add
or
add
add
inc
add
sbbb
add
and
adc
push
add
or
add
and
inc
adc
test
add
jo
xor
inc
add
add
xor
mov
push
adc
lock
sub
sbb
rorb
add
inc
ret
add
xchg
mov
add
addb
dec
pusha
jb
adc
dec
inc
push
or
add
add
adc
and
and
sub
inc
add
or
add
enter
and
push
push
add
and
or
mov
and
xor
sbb
add
add
cmpsl
add
inc
pusha
push
xor
orl
or
and
xor
adc
and
or
add
and
xor
mov
add
add
add
inc
nop
test
dec
push
and
add
or
add
add
add
add
add
adc
lea
add
inc
dec
and
movsb
add
inc
inc
test
adc
adc
incb
push
adc
and
andb
inc
or
add
adc
and
adc
test
add
pop
orb
adc
adc
mov
adc
add
add
add
add
sbb
or
or
add
add
dec
or
pop
add
inc
adc
add
xor
add
mov
inc
cwtl
sbbl
inc
mov
and
add
mov
xor
add
test
dec
nop
sbb
addb
ss
add
dec
adc
lods
inc
or
int3
adc
xor
jb
push
xor
or
adcb
add
inc
add
push
mov
test
cwtl
add
rolb
mov
dec
inc
inc
sub
or
test
adc
inc
insb
add
sbb
gs
leave
add
sub
push
and
pop
push
and
add
shlb
and
or
test
xchg
add
and
inc
add
xchg
inc
add
add
add
mov
add
adc
and
and
xor
adc
and
or
add
add
and
outsl
or
adcb
loope
mov
add
dec
add
add
inc
mov
or
movsb
movsb
add
and
add
inc
add
push
xor
sbb
mov
dec
push
sub
or
or
rclb
xchg
adcb
orb
pusha
nop
inc
add
and
rorb
add
adc
adc
or
or
inc
or
mov
sub
pusha
xchg
rolb
addl
add
add
or
add
inc
xor
add
out
ret
or
inc
dec
inc
or
loopne
add
add
add
xchg
bound
push
or
adc
or
add
or
or
mov
add
push
pop
addb
xchg
shrl
mov
and
add
test
add
and
daa
add
mov
shlb
sahf
push
xchg
add
test
inc
inc
add
adc
add
add
sub
and
dec
add
add
add
or
sbbb
add
add
add
pusha
add
adc
pusha
test
mov
sbb
and
add
add
add
and
add
sbb
adc
add
adc
mov
xchg
inc
add
inc
adc
and
adc
add
add
addb
and
mov
xor
sbb
add
dec
sub
add
add
add
add
or
ror
add
adc
mov
adc
sub
inc
pop
add
add
sbb
add
and
rolb
or
and
or
sub
add
mov
inc
and
sbb
test
xchg
or
adc
adc
or
add
roll
inc
adc
addb
add
add
add
push
or
jno
ret
and
and
push
inc
adc
fs
loop
xchg
sub
or
pop
mov
dec
rorl
add
adc
and
add
int3
or
inc
es
add
push
leave
adcb
inc
rorl
mov
movsl
add
inc
add
add
in
enter
inc
add
add
adc
addb
mov
lea
and
or
add
add
add
dec
subb
sbb
dec
inc
sbb
pop
or
scas
adc
and
xchg
or
test
add
fs
adc
adc
add
or
inc
gs
adc
subb
add
push
add
test
adc
or
inc
or
xor
and
inc
xchg
add
inc
xor
sub
popa
mov
adc
or
orl
add
add
add
and
dec
bound
sub
xchg
xchg
addb
inc
add
mov
data16
mov
xchg
push
push
call
leave
xorb
add
pop
add
adc
pop
add
mov
push
adc
add
xorb
and
and
sbb
add
inc
das
add
imul
and
inc
and
or
and
add
and
and
or
push
push
test
sub
inc
add
andb
pop
and
js
and
xchg
inc
sbb
jnp
mov
add
fldcw
or
sub
adc
test
adc
or
mov
fadds
add
push
mov
add
and
add
mov
test
loop
out
dec
lea
add
adc
add
add
orb
addb
adc
push
or
sbb
and
popa
add
adc
push
xor
push
add
and
rolb
sub
add
sub
ror
inc
or
add
add
or
cwtl
add
adc
add
xor
and
xchg
inc
test
test
and
adc
and
and
mov
add
adc
loope
push
enter
adc
mov
add
test
xor
and
pop
roll
xor
add
add
les
or
cmp
add
and
ret
add
adc
adc
adc
pusha
nop
cmpb
pusha
inc
subb
adcb
add
adc
andl
sub
addb
dec
and
adc
add
push
mov
adc
add
and
pusha
add
dec
arpl
add
sbb
add
add
add
pop
es
inc
push
add
adc
and
adc
or
inc
or
shrb
orb
xor
add
add
daa
aam
xor
add
lds
orb
popa
add
add
adc
ret
sub
add
shlb
add
or
shlb
ret
adc
dec
adc
xor
addl
test
xor
push
and
jmp
add
jb
add
add
add
mov
mov
add
sbb
dec
imul
test
push
or
mov
orb
bound
loopne
push
xchg
arpl
addl
or
jb
sbb
in
subb
mov
pusha
and
jo
add
add
add
inc
mov
add
cltd
and
and
andb
add
and
inc
add
and
add
add
nop
and
add
cmpb
add
add
inc
inc
adc
push
add
adc
xchg
push
add
add
inc
pusha
add
xchg
add
cmpsb
add
adc
or
pushf
sbb
mov
add
mov
add
or
or
mov
add
add
add
add
add
adc
and
and
inc
add
je
dec
add
add
add
dec
enter
mov
adc
mov
leave
sbb
adc
adc
jo
bound
adc
inc
inc
add
adc
and
dec
adc
add
add
xchg
adc
and
add
test
cwtl
adc
and
inc
rorb
add
les
pop
cltd
adc
add
add
add
cs
and
stos
or
or
or
inc
and
add
add
push
ret
and
or
and
sub
shll
or
and
inc
or
inc
add
inc
adc
add
sub
inc
adc
test
dec
and
push
add
or
mov
sub
add
add
xor
dec
mov
addb
add
xor
dec
inc
or
inc
or
loopne
inc
dec
inc
test
adc
add
nop
adcb
add
test
add
xor
movsb
adcb
mov
add
adc
push
dec
mov
andb
add
orb
jecxz
adc
je
add
add
and
add
add
and
inc
push
dec
cmp
and
inc
rorb
add
mov
inc
test
adc
fs
adc
lock
add
adc
add
add
test
xor
add
loope
and
movsb
sbb
push
inc
test
and
inc
xchg
jne
inc
or
add
adcb
dec
dec
add
inc
inc
or
cmp
inc
add
add
add
add
dec
loopne
and
add
xor
and
jo
and
add
sbb
add
and
or
mov
push
xchg
test
inc
orl
and
sub
fwait
and
add
fildl
test
and
and
and
or
and
addb
add
movsb
xor
cmpsb
or
dec
mov
inc
push
inc
add
or
pusha
sub
or
inc
xor
push
dec
add
sub
adc
mov
xor
xchg
popl
and
pusha
and
adc
in
jmp
les
add
adc
ret
add
inc
or
add
nop
add
or
nop
sub
push
adc
mov
adcb
sbb
add
adc
test
add
add
enter
inc
adc
inc
cs
and
push
add
inc
sbb
dec
xchg
lcall
and
rolb
mov
sbb
or
rolb
adc
add
push
adc
inc
add
or
and
or
adc
and
mov
pop
adc
and
inc
xchg
mulb
sub
xor
push
addb
sub
add
add
add
add
inc
add
add
mov
or
shrb
nop
add
js
mov
sbb
cmp
add
push
xor
add
sbbb
add
enter
and
add
add
add
push
or
pusha
addb
add
adc
inc
jbe
andb
or
and
add
enter
add
loope
mov
mov
pop
add
and
nop
jno
add
loopne
movsb
add
sub
push
add
or
inc
add
sysret
nop
adc
add
or
add
inc
and
jmp
and
sub
xor
inc
add
add
add
xchg
dec
nop
adc
pop
imul
add
mov
cmp
leave
push
add
sbb
mov
addb
jo
add
add
add
lds
rclb
and
inc
mov
sub
rolb
adc
shl
add
inc
sub
adc
sbb
add
nop
add
aad
inc
add
add
mov
and
push
inc
xor
adc
mov
aam
push
inc
dec
inc
or
dec
add
nop
dec
add
adc
mov
cmpsl
inc
punpckhbw
mov
add
fs
test
and
sbb
mov
mov
adc
adc
add
adc
add
andl
test
add
xchg
pop
or
adc
ret
test
add
add
add
or
adc
push
add
xchg
adc
push
add
inc
add
rolb
mov
rorb
sbb
and
and
xorb
add
addb
bound
adc
addb
add
push
adc
push
add
adcl
xchg
and
inc
adc
and
inc
pop
mov
xor
inc
add
add
addb
push
inc
add
mov
adc
nop
add
cmp
movsb
js
sub
addb
inc
xor
rclb
call
or
mov
and
or
add
or
inc
add
adc
inc
add
mov
inc
adc
sbb
inc
cmp
push
icebp
dec
and
pushf
add
xor
addb
or
adc
movsb
xor
add
or
adc
adc
or
fcoms
dec
or
or
addb
add
add
sub
add
pop
lcall
add
or
add
pop
mov
pop
xchg
adc
xchg
sbb
add
sub
inc
inc
add
push
addb
add
inc
lahf
test
andb
add
inc
or
adcb
adcl
add
add
cltd
mov
dec
orb
add
addb
and
push
or
add
or
nopl
nop
adc
add
das
add
add
test
add
pop
or
inc
test
add
bound
dec
ret
inc
and
adc
add
push
lcall
inc
push
add
adc
inc
and
addb
push
sbb
inc
or
sub
or
test
add
addb
add
shlb
adc
sub
mov
aaa
dec
mov
sub
shrb
push
xor
inc
pop
rorb
or
add
dec
add
and
sub
and
rolb
add
add
sbb
or
test
inc
sub
or
orb
inc
add
inc
add
pop
or
inc
add
add
add
loope
andb
add
and
adc
push
add
and
sub
add
add
or
or
add
les
push
sti
or
mov
cmpb
inc
sub
inc
adc
sub
cs
pusha
add
adcl
enter
add
rclb
dec
push
add
stos
adc
test
push
add
shlb
pushf
cwtl
movsb
sbb
sbb
mov
add
add
add
adc
sub
inc
test
orb
roll
and
add
and
add
add
or
add
add
add
enter
jo
add
add
pop
or
insb
add
movsb
rcrb
add
add
js
adc
inc
add
rclb
or
add
adc
loope
adc
sub
push
dec
add
add
or
inc
cld
adc
add
push
adc
mov
dec
mov
add
adc
insb
jo
inc
test
cmpsl
add
or
add
or
push
pop
adc
sub
jecxz
add
ret
or
xorb
add
or
add
andb
adcb
inc
mov
add
and
test
dec
addb
adcb
add
sahf
add
adc
and
or
mov
xchg
sub
or
add
and
pop
cmp
xor
or
add
mov
push
add
add
add
rolb
test
inc
add
pop
add
cmp
pusha
or
add
push
andb
adc
add
popa
push
rolb
sub
inc
and
inc
or
and
or
enter
add
andb
add
add
and
dec
and
and
adc
add
je
add
mov
rorb
addb
and
sub
adc
nop
inc
or
adc
add
add
add
add
in
mov
test
adc
lret
dec
or
es
and
add
push
or
add
adc
or
and
dec
cmp
pusha
sbb
lea
adc
sahf
rolb
addl
rcll
add
sbb
inc
and
push
andb
or
inc
daa
push
adc
or
adc
movsb
add
adc
push
pushf
dec
add
inc
add
add
rcll
adc
add
leave
mov
add
add
add
adc
adc
subb
or
pop
add
add
sub
add
or
add
dec
or
adc
inc
jns
and
push
mov
sub
mov
push
push
push
push
call
add
push
add
mov
mov
push
mov
sub
mov
push
mov
add
mov
mov
push
call
cmp
je
mov
cmp
jne
cmp
jne
add
push
push
push
push
push
call
add
mov
mov
call
cmp
je
mov
push
push
call
add
sub
mov
mov
mov
push
push
call
add
sub
mov
cmp
je
mov
mov
mov
cmp
je
mov
push
call
mov
push
push
push
push
call
add
push
call
cmp
je
mov
cmp
je
call
mov
mov
mov
mov
cmp
jne
push
push
push
call
add
push
call
add
xor
mov
mov
mov
push
call
cmp
je
push
push
push
call
add
mov
test
jne
sub
push
push
push
push
push
call
add
add
call
mov
push
call
add
cmp
je
push
push
push
push
push
call
add
mov
mov
push
call
add
push
push
push
push
call
add
cmp
je
xor
mov
mov
cmp
jne
mov
mov
push
push
push
push
push
call
add
mov
mov
cmp
je
test
jne
test
jne
or
push
push
push
push
call
add
mov
push
push
call
add
cmp
je
sub
mov
cmp
jne
and
mov
mov
mov
mov
mov
mov
add
mov
push
push
call
add
push
push
push
push
push
call
add
mov
xor
cmp
jne
mov
cmp
je
mov
mov
xor
push
push
call
add
push
call
add
push
push
push
push
call
add
sub
call
mov
mov
push
push
push
push
call
add
mov
mov
xor
push
push
push
call
add
mov
mov
push
push
call
add
mov
mov
add
push
push
call
add
mov
mov
test
je
cmp
jne
mov
add
push
push
call
add
cmp
jne
mov
add
push
push
push
push
call
add
push
push
push
push
push
call
add
mov
lea
xor
cmp
je
mov
cmp
je
sub
mov
mov
mov
mov
test
jne
mov
cmp
je
add
mov
mov
cmp
je
mov
xor
mov
cmp
je
and
mov
cmp
je
mov
mov
mov
mov
add
cmp
je
cmp
jne
mov
push
test
je
push
push
push
push
push
call
add
push
or
mov
cmp
jne
test
je
mov
sub
cmp
je
cmp
jne
mov
push
push
push
call
add
test
je
mov
add
mov
push
push
push
call
add
test
je
and
mov
cmp
je
mov
add
test
je
mov
mov
call
or
mov
call
test
je
cmp
je
sub
push
push
push
push
call
add
mov
call
cmp
je
and
test
je
mov
push
push
push
push
call
add
push
push
call
add
and
mov
mov
add
mov
mov
mov
cmp
jne
add
test
jne
xor
cmp
jne
mov
mov
cmp
jne
xor
cmp
je
mov
shr
sub
mov
mov
mov
mov
cmp
jne
mov
xor
mov
cmp
je
add
cmp
je
mov
mov
cmp
je
mov
cmp
jne
add
mov
push
push
push
call
mov
mov
xor
mov
push
push
push
push
call
add
mov
mov
push
push
push
call
add
sub
xor
cmp
je
sub
mov
mov
mov
cmp
jne
and
push
push
push
call
add
pushl
push
pushl
call
mov
call
mov
test
je
xor
cmp
je
or
mov
addl
mov
add
mov
mov
mov
mov
mov
mov
mov
call
call
mov
sub
push
call
add
cmp
jne
push
call
add
mov
test
jne
mov
mov
or
push
push
push
call
add
mov
push
push
push
call
add
call
push
call
add
mov
add
cmp
je
test
je
add
push
push
push
push
push
call
add
mov
push
push
push
call
add
mov
pop
call
pop
mov
xor
cmp
jne
mov
push
push
call
add
pop
test
je
push
call
add
leave
ret
mov
mov
cmp
jne
mov
push
push
push
push
call
add
push
push
push
push
push
call
cmp
jne
cmp
jne
mov
push
push
call
add
xor
mov
push
push
push
call
push
push
push
push
call
add
push
push
push
call
call
push
call
mov
add
push
push
push
push
call
add
cmp
jne
xor
mov
test
je
mov
push
call
add
push
push
push
push
call
add
mov
push
push
push
push
push
push
call
mov
cmp
je
mov
or
mov
mov
cmp
je
mov
push
push
push
push
call
add
push
push
push
push
call
mov
sub
cmp
je
cmp
je
call
call
mov
add
push
push
call
add
mov
push
push
push
push
push
call
mov
add
push
call
add
push
push
push
call
add
push
call
add
push
push
push
push
push
push
call
mov
mov
mov
xor
mov
pop
mov
pop
cmp
je
cmp
jne
call
pop
push
push
push
push
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
push
call
add
push
push
push
push
push
call
add
push
cmp
je
mov
add
push
push
call
add
push
mov
mov
add
mov
movl
and
mov
push
push
call
add
cmp
jne
cmp
je
add
cmp
jne
sub
push
push
push
call
add
call
cmp
jne
xor
mov
mov
mov
mov
sub
cmp
je
add
mov
mov
push
push
push
push
push
call
add
call
cmp
je
cmp
je
cmp
je
mov
sub
cmp
jne
mov
mov
sub
mov
cmp
je
push
push
push
push
call
add
call
cmp
jne
mov
or
mov
cmp
je
mov
cmp
jne
mov
mov
mov
add
xor
mov
mov
mov
cmp
jne
mov
mov
push
call
xor
mov
mov
cmp
jne
mov
sub
mov
cmp
je
mov
mov
sub
mov
cmp
je
and
mov
mov
mov
mov
or
je
mov
mov
addl
mov
add
test
je
mov
lea
sub
mov
inc
sub
mov
mov
mov
cmp
jne
add
cmp
je
xor
mov
mov
mov
sub
add
test
je
add
cmp
jne
xor
cmp
je
cmp
jne
cmp
je
cmp
jne
add
cmp
je
cmp
jne
sub
test
jne
cmp
je
and
mov
cmp
je
or
cmp
jne
mov
cmp
jne
add
mov
test
je
sub
mov
mov
mov
sub
sub
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
test
je
mov
test
je
call
mov
cmp
je
push
push
push
call
add
add
cmp
jne
cmp
je
cmp
je
mov
cmp
je
mov
mov
mov
sub
mov
mov
push
call
add
pop
mov
mov
mov
pop
mov
test
jne
mov
cmp
je
sub
test
je
push
push
push
push
push
call
add
pop
mov
xor
call
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
mov
mov
push
mov
add
mov
push
push
push
push
push
push
call
add
push
call
add
mov
rdtsc
mov
mov
mov
mov
sub
mov
mov
add
call
mov
mov
push
push
call
add
sub
mov
call
mov
mov
mov
xor
call
push
push
push
push
push
call
add
mov
push
push
push
push
push
call
add
test
jne
mov
xor
mov
mov
cmp
je
cmp
jne
mov
push
push
push
push
push
call
add
mov
rdtsc
mov
mov
mov
xor
mov
mov
mov
sub
test
jne
mov
mov
cmp
jne
mov
sub
mov
xor
cmp
jne
test
je
mov
test
je
sub
mov
mov
cmp
je
mov
cmp
je
cmp
je
mov
mov
mov
sub
cmp
jne
test
jne
mov
sub
cmp
je
add
mov
test
je
mov
add
test
jne
sub
mov
cmp
jne
xor
mov
cmp
je
mov
sub
mov
cmp
jne
test
jne
mov
mov
xor
test
je
xor
mov
mov
mov
cmp
je
mov
mov
xor
mov
cmp
je
sub
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
test
je
test
je
test
jne
mov
xor
cmp
je
cmp
jne
sub
cmp
jne
sub
mov
test
jne
xor
test
jne
add
mov
mov
mov
mov
mov
mov
pop
mov
xor
mov
cmp
je
mov
pop
xor
cmp
je
or
mov
pop
mov
xor
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
call
add
push
xor
mov
mov
push
cmp
je
mov
push
mov
test
jne
add
cmp
jne
mov
cmp
je
add
push
push
call
add
mov
mov
add
cmp
je
sub
mov
mov
cmp
jne
and
mov
mov
mov
sub
cmp
je
and
mov
cmp
jne
xor
mov
mov
mov
mov
cmp
je
cmp
jne
xor
cmp
je
mov
cmp
jne
mov
mov
decl
sub
mov
mov
mov
mov
xor
or
mov
rorl
mov
xor
mov
addl
mov
mov
add
add
mov
sub
mov
cmp
jne
cmp
je
cmp
jne
sub
test
jne
mov
jmp
mov
mov
call
add
push
call
add
push
push
push
push
push
call
add
xor
mov
mov
mov
mov
pop
mov
pop
xor
cmp
je
mov
cmp
je
mov
call
mov
call
cmp
jne
push
push
call
add
pop
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
movl
mov
mov
mov
cmpl
je
mov
mov
add
mov
mov
add
mov
jmp
mov
push
lea
push
call
lea
push
call
mov
mov
push
lea
push
call
lea
push
mov
push
call
mov
movl
mov
sub
mov
movl
mov
add
mov
movl
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
mov
mov
mov
cmpl
je
movl
cmpl
jge
cmpl
jle
jmp
jmp
mov
mov
mov
movl
jmp
mov
add
mov
mov
mov
cmp
jae
mov
add
mov
add
mov
mov
jmp
mov
mov
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
cmpl
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
je
mov
movzwl
mov
movzwl
cmp
jle
mov
mov
mov
cmpl
je
mov
test
je
mov
mov
mov
movsbl
cmp
jl
movsbl
cmp
jg
movsbl
add
mov
mov
mov
mov
movsbl
cmp
jl
movsbl
cmp
jg
movsbl
add
mov
movsbl
movsbl
cmp
je
jmp
movsbl
test
jne
mov
mov
jmp
mov
add
mov
mov
add
mov
jmp
mov
mov
mov
mov
cmp
jne
xor
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
cmpl
je
cmpl
je
cmpl
jbe
mov
movsbl
test
je
mov
mov
mov
mov
add
mov
mov
cmpl
je
mov
cmpl
je
mov
mov
mov
cmp
jae
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
ja
mov
mov
cmp
jb
mov
mov
mov
add
cmp
jae
mov
mov
sub
mov
mov
add
mov
jmp
jmp
movl
jmp
mov
add
mov
mov
mov
cmp
jae
mov
mov
mov
mov
mov
add
mov
mov
movsbl
mov
movsbl
cmp
jne
mov
movsbl
test
jne
mov
mov
movzwl
mov
mov
add
mov
jmp
mov
add
mov
mov
add
mov
jmp
jmp
xor
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
cmpl
je
cmpl
je
mov
mov
mov
mov
mov
test
je
mov
mov
mov
mov
mov
mov
movzbl
movzbl
xor
mov
mov
mov
movsbl
sub
mov
mov
mov
movsbl
mov
movsbl
lea
mov
mov
mov
movsbl
test
jne
jmp
mov
add
mov
mov
add
mov
jmp
mov
sub
jmp
xor
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
push
push
call
add
push
add
cmp
jne
test
je
or
mov
mov
push
xor
mov
push
mov
sub
push
call
add
cmp
jne
mov
mov
or
mov
call
mov
mov
add
cmp
je
push
push
call
add
mov
sub
mov
cmp
je
mov
pop
call
pop
sub
mov
cmp
jne
mov
mov
cmp
jne
mov
xor
mov
cmp
je
xor
mov
cmp
jne
mov
xor
mov
push
push
push
push
call
add
mov
pop
test
jne
add
mov
cmp
jne
xor
cmp
je
cmp
je
test
je
xor
mov
call
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
mov
push
push
push
call
add
push
mov
mov
push
mov
or
test
je
mov
mov
call
push
push
call
add
xor
cmp
je
mov
cmp
jne
and
mov
mov
cmp
jne
mov
push
call
add
push
push
call
add
push
call
add
mov
mov
test
jne
mov
sub
mov
pop
mov
pop
cmp
je
cmp
je
test
jne
mov
mov
cmp
je
sub
mov
push
push
push
call
add
mov
pop
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
mov
mov
push
push
push
push
push
call
add
push
cmp
jne
cmp
je
xor
mov
push
push
push
push
call
add
mov
mov
mov
mov
sub
mov
cmp
jne
push
push
push
push
call
add
push
push
push
push
call
add
pop
mov
mov
pop
mov
and
cmp
je
mov
sub
mov
mov
mov
pop
sub
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
push
call
add
push
cmp
jne
mov
push
push
push
push
push
call
add
call
xor
push
push
push
push
call
add
mov
push
push
push
push
call
add
push
mov
mov
and
mov
mov
mov
mov
cmp
je
mov
push
call
add
mov
mov
cmp
jne
mov
push
push
push
call
add
xor
cmp
jne
push
push
call
add
mov
mov
and
mov
call
push
push
push
call
add
push
call
add
mov
pop
push
push
push
push
push
call
add
pop
xor
mov
cmp
jne
push
push
push
push
push
call
add
pop
mov
and
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
add
mov
push
mov
xor
mov
mov
push
xor
mov
mov
mov
mov
push
mov
sub
mov
xor
mov
mov
mov
mov
mov
pop
mov
cmp
je
mov
add
mov
cmp
je
xor
mov
mov
cmp
je
mov
mov
add
cmp
jne
sub
mov
cmp
je
xor
mov
mov
mov
mov
pop
mov
cmp
je
mov
test
je
sub
mov
cmp
je
add
mov
cmp
jne
cmp
je
mov
cmp
jne
sub
test
jne
mov
sub
mov
cmp
jne
mov
mov
cmp
jne
add
mov
cmp
jne
mov
mov
cmp
jne
mov
sub
cmp
jne
mov
or
cmp
je
add
cmp
jne
add
mov
mov
mov
mov
pop
sub
mov
mov
mov
mov
leave
ret
add
adc
lcall
dec
sbb
rorb
xor
dec
adc
sbb
sbb
int
push
cltd
push
mov
jmp
mov
sbb
mov
sahf
es
iret
cli
div
jg
cmc
inc
pop
lcall
xor
shll
adc
add
and
movsb
push
dec
dec
xor
mull
sub
fiaddl
pop
pop
lds
xchg
adc
les
outsl
in
cmpsb
and
push
iret
pop
adcl
fcom
jge
pop
pop
xor
call
ret
adc
jge
fldlg2
ret
stos
cmp
mov
outsl
mull
cld
pushf
or
call
lcall
leave
push
aam
stos
sbb
pop
cld
and
cld
movsb
enter
add
lcall
mov
repnz
mov
sbb
lods
xchg
rcrl
mov
gs
inc
das
pop
xchg
stc
mov
jnp
pop
mov
xor
sti
add
addr16
sbb
scas
push
call
mov
pop
sub
mov
loope
dec
in
pop
iret
lahf
jae
insl
adc
outsb
or
das
xchg
cmc
repz
adcl
sub
scas
imul
pushf
icebp
inc
dec
aaa
loope
pop
push
pop
or
jno
and
iret
repnz
adc
or
jg
pop
pop
dec
repz
arpl
mov
and
sbb
mov
repz
fwait
xor
jle
negl
adc
mov
cmpsl
inc
es
pop
jae
cwtl
das
ret
dec
repz
cmp
pop
or
mov
mov
lret
jp
or
ret
lahf
mov
add
and
ljmp
sbb
xchg
mov
sbb
test
rcrb
sbbb
mov
mov
inc
or
rcll
push
push
fwait
out
popf
pop
sbb
add
mov
jnp
or
cs
sbb
mov
ljmp
xor
xorb
mull
mov
scas
leave
test
and
out
xchg
xor
dec
pop
add
mov
sub
lea
nop
rsqrtps
fildll
into
aam
sub
inc
mov
rcr
push
aas
mov
inc
pushf
addr16
iret
adc
jae
adc
cli
dec
inc
fildll
push
mov
lods
sub
add
sar
mov
imul
mov
in
sbb
adc
cmp
lret
push
int3
daa
sub
mov
sahf
fs
sbb
inc
dec
dec
jnp
mov
xchg
int3
push
xchg
or
push
jecxz
sub
sarl
pusha
push
dec
std
out
fscale
inc
xchg
dec
dec
sbb
push
out
inc
insl
mov
adc
iret
aas
stc
mov
fmull
xchg
fnsave
rorb
das
loope,pt
aaa
push
fiadds
lods
sbbl
adc
pop
xor
lcall
cs
shrl
xchg
pop
pop
out
jbe
daa
pop
shll
mov
or
jb
std
sub
aaa
rcl
inc
inc
push
inc
mov
pusha
dec
psubw
push
lret
leave
inc
adc
sub
jno
clc
fistpll
adc
js
test
loopne
ljmp
pushf
add
addr16
scas
das
iret
jp
jp
pop
cmp
pusha
iret
pop
inc
pop
out
and
push
enter
mov
rclb
cmp
sbb
scas
aaa
nop
adc
outsl
idivl
test
iret
test
add
data16
arpl
fcoms
fiaddl
call
ss
call
lock
lahf
sub
xor
xor
sbb
insb
and
repnz
or
sbb
std
lret
popf
dec
imul
add
cmp
mov
add
dec
pop
add
sbb
sbb
call
decl
loopne
leave
test
push
inc
gs
push
jb
imul
and
movsb
arpl
inc
xchg
adc
ret
sar
repz
scas
cmc
fisubrs
shll
adc
fldt
add
fisttps
cmpsb
xchg
fisubl
stos
iret
xchg
sub
stos
jle
pop
sbb
out
mov
mov
inc
fs
sub
lea
mov
cwtl
dec
cmp
adc
add
xor
cs
sub
iret
xchg
cmp
inc
ja
iret
jns
mov
dec
push
xor
dec
mov
jge
stc
ror
mov
lret
push
add
xor
gs
int
adc
mov
jno
xchg
sbb
ja
scas
clc
sbb
scas
xlat
iret
lahf
push
outsb
outsb
mov
jae
ret
xchg
arpl
bound
shrl
test
cmp
jp
push
cmp
sub
outsl
inc
cmp
int3
sbb
mov
adc
mov
xlat
pop
out
jbe
gs
sub
cmp
jg
in
mov
adc
push
icebp
or
mov
inc
xor
add
jne
jl
les
pop
sbb
outsb
cmp
lods
mov
cwtl
daa
inc
add
xor
or
out
mov
out
pop
je
sbb
xchg
inc
mov
cmp
out
outsb
aaa
and
jecxz
jnp
push
cli
xlat
push
iret
movsl
and
out
enter
mov
into
and
sub
fs
cld
cwtl
outsb
mov
fwait
sbb
cmpsb
or
xor
mov
fiaddl
mov
shl
and
dec
fsubp
xor
mov
into
bound
adc
lea
daa
push
inc
dec
adc
enter
mov
adc
mov
js,pn
aam
push
add
adc
inc
ja
xchg
loop
sti
inc
mov
or
sbb
ret
add
imul
and
js
adc
dec
mov
adc
mov
mov
pop
flds
xchg
aam
and
xchg
call
pop
push
ljmp
fs
mov
jne
fwait
push
xchg
pop
sahf
leave
add
xor
dec
addr16
jg
fnsave
xlat
clc
inc
push
or
and
xchg
adc
sbb
lret
sti
inc
sbb
movsb
dec
stos
rcrb
ja
jns
push
mov
cmp
jge
ljmp
out
push
push
pop
push
data16
cmp
iret
jmp
lret
lahf
mov
cwtl
push
inc
rol
add
dec
inc
pop
mov
incb
inc
adc
adc
into
iret
lret
cmp
cmp
lods
mov
enter
test
add
into
addr16
sub
je
lahf
punpcklwd
das
xchg
mov
mov
sub
cmp
or
popf
jns
pushf
into
mov
push
call
pop
cmp
pop
ja
push
adcl
fildl
mov
sbb
enter
and
cmp
into
mov
into
icebp
inc
or
int3
and
lods
iret
jge
inc
or
cld
dec
push
dec
xchg
dec
jns
xchg
iret
or
fcmovb
cmp
dec
cmp
mov
and
nop
xchg
into
fbld
pop
inc
call
ror
jp
push
push
movsl
push
bound
test
outsb
test
mov
push
mov
sbb
and
loope
dec
pushf
xor
xchg
xlat
xor
mov
sub
mov
stos
cwtl
test
enter
mul
sub
iret
test
add
push
mov
xor
push
and
bound
lahf
adc
push
cmp
out
jle
outsb
je
dec
or
adc
or
sarb
pushf
sub
int3
je
push
mov
xor
push
jecxz
int3
jge
cs
jecxz
inc
sub
xchg
sbb
dec
pop
gs
inc
mov
outsl
int3
in
test
pop
mov
lahf
mov
inc
fldt
cmpsl
push
test
pop
cmp
add
xchg
cmp
lods
sbb
scas
stos
lahf
lret
test
xchg
jmp
dec
adc
or
push
jecxz
int3
push
loope
int3
adc
int
jb
les
xchg
scas
fcom
cli
aad
lods
jne
loopne
sarl
mov
inc
ja
scas
jae
aam
mov
mov
push
xor
pop
fimull
imul
jns
push
jb
dec
lea
leave
inc
xchg
push
dec
adcb
das
stos
out
out
mulb
dec
int
sub
mov
or
adc
pusha
jg
xchg
push
cmc
mov
leave
out
iret
int
dec
xchg
clc
outsw
inc
push
inc
dec
aaa
cmp
pop
and
xchg
rcl
sub
adc
sbb
cmp
lds
movsb
push
push
push
lods
mov
sbb
push
inc
xchg
loopne
xlat
lahf
out
les
repz
aad
out
mov
imul
xor
jnp
fs
pusha
mov
imull
xor
inc
int
mov
ds
pusha
sbb
sahf
call
push
dec
push
and
inc
push
imull
pop
popa
cmp
movsl
mov
fs
sbb
or
int
adc
adc
adc
push
gs
jbe
ret
sub
sbbl
xchg
outsb
idivb
imul
inc
fprem
ljmp
imul
cmp
paddw
jg
outsb
inc
mov
mov
dec
push
test
daa
jae
sub
or
jae
push
js
jle
sbb
or
sti
jbe
push
aam
sbb
sbb
shrl
mov
in
sub
sub
adc
mov
mov
outsb
ds
cmc
int3
into
out
int3
arpl
aad
data16
sub
shl
mov
pop
mov
pop
pop
mov
ret
lds
fwait
test
pop
scas
jle
dec
fcomps
adc
fmuls
fwait
int3
fwait
adc
fsubs
and
jne
push
jns
dec
xchg
int
movsb
mov
cmpsb
outsb
mov
stos
rorl
mov
push
loopne
mov
call
mov
pop
movl
jbe
int
mov
jecxz
push
xor
pcmpeqd
jg
lock
jp
outsb
imul
inc
fnstenv
push
sar
or
sti
xchg
mov
int
jg
daa
jle
push
push
icebp
lods
push
xchg
pop
mov
imul
adc
adc
ljmp
push
lahf
test
cmp
ficompl
repz
loope
adc
mov
incl
jb
inc
jno
sahf
stos
inc
mov
mov
in
pop
push
mov
lcall
test
xor
subb
addr16
popa
pushf
xor
loope
adc
in
imul
lahf
lock
stos
xchg
aaa
int
into
jl
xor
sub
pop
sub
or
mov
mov
addr16
nop
test
dec
sbb
xor
push
sub
dec
out
adc
and
pop
aam
fs
pop
pushf
pop
ja
mov
jecxz
lock
sbb
sbb
aas
call
test
test
push
aad
mov
pop
icebp
stc
jl
or
cmp
insb
mov
out
in
dec
nop
push
imul
pop
enter
pop
ja
sahf
mov
mov
les
rcl
mov
and
cld
orl
stc
in
pop
rclb
xchg
pop
mov
mov
pop
cmp
lret
add
adc
and
inc
cltd
jmp
iret
inc
pusha
adc
push
or
push
out
ds
ret
jl
jecxz
push
jg
sbb
jbe
mov
mov
call
mov
mov
push
popa
adc
add
pop
mov
inc
mov
mov
into
jge
adc
imul
test
into
pop
daa
cltd
data16
into
mov
iret
sub
icebp
sbb
idiv
sahf
rcll
das
mov
adc
mov
lock
xor
dec
xorl
mov
mov
or
xchg
aad
push
jbe
mov
fdivrs
push
mov
hlt
mov
or
inc
fisttpll
addr16
xor
push
aad
jno
fdivrs
lods
mov
iret
vmread
push
jne
adc
fnstcw
js
int3
jmp
std
push
mov
sbb
dec
rcrl
lea
mov
addr16
iret
fcmovnbe
leave
scas
test
mov
movsl
pop
movsb
lods
stc
jle
adc
sub
push
js
fs
push
iret
mov
test
nop
adc
out
inc
cmp
daa
push
mov
pop
sbb
es
fcmovnbe
pop
pop
jno
pop
sti
mov
movb
mov
push
fisttpl
and
sbb
out
mov
xor
negl
or
adc
mov
cmp
negb
popa
xchg
enter
mov
fcomps
mov
cltd
nop
scas
jl
mov
ss
sbb
popa
sbb
lods
jno
lret
jle
subl
add
mov
push
dec
scas
sbb
aaa
rcrl
jmp
aad
mulb
int3
adc
into
cltd
add
pop
lods
push
cmp
dec
loope
cwtl
push
push
pop
imul
push
popf
inc
xchg
iret
sbb
cmpsb
push
fistpl
adc
dec
hlt
dec
inc
jo
mov
js
iret
iret
mov
scas
shll
push
faddl
xor
adc
lret
popa
mov
mov
gs
mov
sbbb
pmulhuw
adc
jg
sbb
daa
jno
mov
mov
adc
mov
fs
lds
inc
dec
int
and
stos
sbb
push
lock
pop
xchg
dec
xchg
add
movsb
pusha
popf
in
pop
ljmp
fstl
inc
or
jmp
and
int
sbb
push
sub
sets
lret
lods
sub
outsl
xor
in
mov
pop
pushf
inc
adc
push
jo
jmp
shlb
mov
pop
nop
jne
subb
inc
inc
loope
and
enter
xchg
dec
cld
cmpb
aam
dec
into
push
imul
addr16
lods
push
push
sbb
adc
pop
cld
xchg
jg
mov
nop
and
test
cltd
testb
mov
cmp
pop
mov
inc
inc
or
repnz
icebp
gs
arpl
insb
or
cmpl
jmp
dec
icebp
pusha
pop
mov
xchg
mov
xor
cltd
push
adc
dec
or
add
idiv
pop
into
push
in
jmp
es
push
iret
neg
into
stos
mov
out
mov
xchg
pop
xlat
in
pop
out
mul
js
fsubrp
push
pop
adc
out
incl
nop
addr16
pop
push
fwait
lahf
sub
in
mov
pop
mov
pop
notb
sub
sti
xchg
push
std
or
pushf
clc
push
or
adc
test
cmc
xor
mov
ljmp
cmpsl
iret
leave
outsb
pop
gs
cmpsb
and
in
iret
cmp
test
cmp
push
push
mov
hlt
addb
push
inc
xchg
data16
sbb
sbb
pusha
or
push
jae
pop
xchg
setnp
inc
xchg
xchg
push
xchg
mov
iret
hlt
and
lods
xchg
and
push
push
pop
push
loope
sbb
mov
pop
cld
addr16
push
sbb
lahf
in
arpl
push
nop
fsubs
push
fwait
clc
adc
xlat
mov
adc
or
pop
fwait
jl
sbb
shrb
sbb
insl
mov
mull
inc
jmp
pop
out
push
push
push
jbe
sbb
add
out
push
adc
or
cmp
inc
movsb
int3
push
das
incl
inc
rorl
mov
jb
adc
unpcklps
push
rcll
frstor
jp
loope
pop
das
dec
jbe
pop
pusha
ss
and
das
mov
mov
lcall
call
test
into
cmpsl
cld
push
inc
gs
or
scas
push
pop
inc
lcall
das
jb
pop
sahf
in
dec
fists
sbb
lret
xchg
fsubp
fiaddl
popa
and
fwait
lahf
jmp
repz
sbb
jns
adc
enter
dec
and
enter
push
push
cmpb
pop
push
pop
setne
push
sbb
cmp
push
fcoms
push
sub
fsubp
dec
and
pop
out
sub
dec
sub
cmpb
cmp
aas
insl
sub
cld
pop
sbb
pop
pop
sub
lahf
out
mov
fwait
je
insl
pushf
movb
or
in
dec
iret
lock
gs
lods
stc
or
pop
jo
out
lea
xchg
adc
les
or
xchg
adc
shlb
fbld
add
out
cmp
pushf
sbb
shl
cmp
or
stc
sbb
pop
jecxz
out
jp
or
int
push
add
push
mov
jle
leave
push
and
mov
cmp
filds
inc
pop
lret
enter
pop
inc
push
xchg
add
leave
cltd
fs
dec
or
xchg
mov
cmpsl
add
cmpsl
jo
inc
cmpsl
pop
mov
sbb
xor
hlt
imul
cs
ret
add
jae
popf
pop
clc
sbb
addr16
into
inc
repz
mov
int
and
lret
jge
clc
insb
sahf
sbb
push
adc
iret
stc
and
pushf
add
int
out
push
cmp
sbb
fnstcw
sti
push
gs
in
test
mov
mov
adc
out
inc
dec
dec
mov
jmp
sahf
jle
inc
inc
sbb
call
inc
pushf
pop
mov
adc
daa
jge
inc
or
rcl
cmpsl
mov
lock
cmp
adc
jns
fldt
notb
jge
lods
ret
lahf
insl
cld
adc
fwait
inc
pushl
lret
dec
push
popf
cld
ja
sbb
push
mov
pop
xchg
out
inc
rorl
lock
enter
imul
lods
dec
fistpll
loopne
push
into
jae
rcr
cmp
sub
pop
mov
sbb
add
mov
aad
jl
xor
addl
jne
fmuls
ret
sti
jno
xlat
jp
sahf
add
fwait
popa
adc
sbb
movsb
adc
mov
inc
daa
ljmp
mov
scas
mov
repnz
dec
out
lds
dec
sbb
fwait
push
repz
ja
nop
pop
mov
addb
fisubrs
movsl
jns
into
lock
mov
dec
sti
adc
arpl
sbb
out
push
addr16
lds
lret
xor
cmp
xchg
into
jno
jno
out
inc
out
scas
adc
mov
lock
push
push
jp
mov
xor
cld
push
pop
cmc
icebp
into
outsb
xor
repz
mov
sbb
imul
pop
push
push
test
fwait
cltd
movsb
jecxz
mov
push
adc
out
ret
mov
adc
mov
inc
leave
sub
dec
or
sub
ret
push
rol
adc
push
dec
shrb
ret
fisttpl
adc
iret
adc
mov
sub
xchg
xchg
daa
jg
inc
rcrl
lea
adc
mov
sbb
fcoms
inc
mov
or
xchg
mov
sbb
mov
and
mov
adc
dec
dec
js
push
inc
stc
inc
mov
int3
arpl
mov
ljmp
arpl
xchg
jp
push
and
icebp
jle
aas
xchg
inc
nop
sub
and
pop
scas
dec
inc
dec
xchg
mov
movsl
rcl
push
inc
cmpl
ret
lahf
clc
cmp
lods
jb
mov
in
xchg
les
sbb
mov
imul
xchg
leave
addr16
ljmp
mov
cmp
in
mov
outsb
mov
xorl
sbb
pusha
adc
inc
jle
cmp
lods
shrl
adc
adc
pop
mov
pop
xchg
pop
jecxz
call
inc
rol
push
sbb
adc
push
and
mov
fistl
or
lock
out
rcl
push
jg
jecxz
mov
mov
sbbl
cmc
and
outsb
inc
mov
ss
aam
mov
mov
nop
mov
and
add
fnstenv
addb
movsb
dec
stc
lret
rol
jno
pop
ficompl
sub
les
xchg
fadds
out
fcoms
mov
push
sbb
mov
jle
inc
ds
add
aad
les
adc
adc
mov
repz
data16
pop
mov
lock
enter
xlat
gs
cmp
sbb
addl
sbb
mov
into
xor
fwait
add
and
cmp
addr16
leave
scas
or
pushf
mov
rcrb
lahf
fs
fcom
int
adc
adc
mov
ror
out
inc
jl
stos
das
and
ja
mov
xor
sub
cli
push
addr16
outsb
ds
subl
insb
subb
jnp
out
in
mov
lcall
fistl
sbb
leave
fs
ja
mov
cmpsl
jl
xor
inc
sbb
dec
mov
push
add
js
xor
mov
test
sbb
pop
dec
insb
pop
andb
sbb
dec
sbb
xchg
js
and
lea
xchg
xor
and
cmc
in
adc
and
into
mov
icebp
lret
jmp
stos
dec
cmpsl
inc
push
adc
repz
ljmp
cmp
ljmp
jge
lcall
rcrb
test
int3
jl
cmp
enter
es
sbbb
or
test
adc
sahf
jo
incl
jns
add
mov
adc
cmp
xchg
icebp
shrb
mov
outsl
pushf
pop
sbb
or
stos
pop
stos
lcall
fdivrs
xchg
mov
sbb
and
das
push
das
repnz
sub
push
sub
adc
add
sub
fwait
sub
add
sbb
pop
in
lea
fs
mov
pop
sub
jmp
lods
cli
xchg
pop
adc
adc
shl
fnsave
repnz
fistl
xor
push
maxps
xlat
mov
movsb
int
mov
pop
jns
jmp
jnp
jmp
notb
pushf
pop
or
rclb
sbb
sub
iret
cmp
pushf
pop
inc
cmp
adc
nop
je
fs
notl
sbb
mov
mov
leave
mov
fwait
push
inc
aas
jno
mov
out
mov
mov
enter
int
sahf
fucomp
enter
push
jno
jno
addr16
sahf
lock
icebp
cmp
sbb
or
xlat
mov
mov
loopne
xchg
rclb
repnz
jg
sahf
notl
adc
es
sbb
out
leave
sets
mov
push
test
and
jae
je
or
loop
adc
fdivs
push
push
enter
imul
ror
xchg
lods
or
sbb
arpl
movsl
sbb
jecxz
addr16
sbb
in
cli
push
mov
not
sbb
add
inc
mov
inc
mov
and
xchg
mov
mov
xchg
dec
xor
inc
or
xchg
sbb
aas
mov
sbb
xor
outsb
sub
inc
add
ret
sti
push
jne
decl
iret
push
rolb
mov
inc
bound
leave
push
mov
repnz
ret
daa
jecxz
bound
iret
pop
jnp
gs
sbb
mov
add
jae
sbb
rorl
jle
sub
int
or
mov
xchg
hlt
jecxz
adc
cmp
sti
int
jns
iret
gs
lahf
sub
and
fistl
popf
dec
out
dec
push
jle
dec
pushf
rolb
int3
mov
mov
mov
stos
mov
icebp
sbb
and
popf
pop
adc
cmpsb
and
into
sub
cld
enter
add
aam
push
pusha
in
jae
data16
add
fs
icebp
sub
ss
dec
sahf
mov
xor
jecxz
lahf
out
xchg
nop
into
jbe
int
mov
mov
daa
std
aaa
fsubl
xchg
cmp
sub
data16
jae
xor
inc
mov
mov
or
adc
mov
push
nop
int3
out
in
les
xchg
jbe
push
adc
jl
cmpsl
mov
dec
push
cmpsl
mov
leave
out
adc
sbb
int
jns
daa
and
rclb
push
rolb
xchg
pop
in
adc
cmc
popf
dec
stc
pop
jle
or
jp
mov
fists
andl
sub
dec
in
movsl
mov
and
push
push
iret
fbld
and
movsl
mov
jg
add
and
test
inc
ja
jmp
fwait
insl
sbb
out
inc
dec
pushw
pop
xor
or
stos
enter
pop
mov
addr16
in
and
ljmp
call
or
pop
dec
jo
jnp
xchg
xor
iret
adc
ret
xor
iret
pushf
iret
sbb
jbe
gs
sti
dec
jae
adc
push
pop
jmp
dec
xor
in
adc
sbb
xchg
cmc
mov
xchg
push
sahf
call
test
idivl
in
es
icebp
cmp
sbb
xor
push
imul
inc
add
and
push
pushf
adc
dec
aaa
cld
es
push
sbb
rol
iret
and
gs
out
hlt
fstpl
and
or
adc
jl
xchg
push
mov
pop
cmpsb
sub
insl
fisubrs
adc
push
stos
mov
stos
push
adc
or
gs
jle
sbb
hlt
addr16
push
adc
sbb
cmp
mov
xor
arpl
in
rorl
and
es
test
je
sbb
xor
ret
ljmp
out
stos
jmp
add
inc
xor
dec
ljmp
jmp
int
repnz
or
or
dec
ret
popa
sub
int
outsl
pop
movsb
gs
mov
jne
fldl
rcll
and
sbb
rorl
xchg
sub
sub
push
dec
lret
sbb
pop
push
jbe
dec
jo
adc
in
movsb
mov
dec
jno
ror
and
pop
pop
sub
lcall
outsb
sti
int
add
mov
dec
lret
pushf
add
je
pop
movsl
pushf
fidivs
lea
in
js
scas
shll
jb
sub
mov
call
sub
cmpl
adc
or
dec
xchg
insl
scas
dec
adc
lock
sub
push
or
add
stos
mov
ds
xor
lods
adc
into
sbb
add
xchg
add
in
push
xor
sbb
xchg
aad
sbb
in
add
pop
mov
dec
je
xor
rorl
aaa
mov
mov
jg
rcrl
push
adc
inc
movsb
mov
scas
push
inc
adc
mov
cmp
pop
insb
js
into
dec
in
mov
data16
add
outsl
les
add
push
sbb
sti
add
hlt
in
or
call
sbb
ja
addr16
pop
flds
add
fldt
push
lock
or
addl
mov
imul
jb
push
pushl
jbe
pop
mov
loop
ja
lods
xchg
test
xlat
mov
add
hlt
mov
pop
dec
sti
lods
add
or
call
aas
pusha
cmpsb
pop
and
pop
in
cmpsb
test
xor
out
adc
ret
inc
xchg
sub
bound
or
jae
into
pop
adc
notl
pop
sbbb
fistps
out
test
inc
iret
iret
or
pop
adc
inc
sbb
push
mov
push
mov
lahf
js
jl
jb
ljmp
jl
jb
mov
ret
fcomps
push
call
pop
daa
dec
out
mov
gs
js
shll
xlat
psubusb
aas
into
fsubl
pop
or
mov
adc
fwait
and
push
stc
sub
into
lahf
aam
cwtl
sti
adc
xchg
xor
sub
cmp
xlat
pop
jle
and
loopne
movsbl
and
adc
lahf
dec
fisubs
push
cmp
add
pop
addr16
mov
out
not
mov
mov
orb
pop
repz
jno
std
dec
dec
pop
push
aas
cmc
daa
pop
inc
movsb
xor
push
xchg
jecxz
dec
sbb
out
int3
ljmp
adc
xchg
scas
jnp
xor
and
mov
mov
and
jge
call
pop
test
and
dec
shll
in
std
push
pop
inc
loop
adc
inc
mov
jne
sti
std
sub
out
adc
ljmp
or
int3
mov
adc
mov
adc
jecxz
aam
testb
ret
sub
jl
outsl
and
cmpsl
mov
outsl
xchg
inc
cmp
pop
sbb
cltd
mov
sbb
mov
pop
pop
adc
xor
mov
test
into
loop
aaa
mov
mov
mov
xlat
jl
mov
push
pop
push
pop
mov
sub
pop
jge
dec
es
loope
cmp
enter
push
cli
movsb
jns
into
cli
in
pop
mov
xchg
pop
and
inc
nop
int3
sbb
inc
pop
dec
adc
dec
or
push
insb
pop
fsts
out
xor
and
out
js
outsl
mov
cmp
push
enter
push
jo
aam
pop
and
stos
ret
push
inc
sbb
in
insl
pop
loop
sbb
sbb
js
add
jbe
stos
xlat
decb
test
gs
lods
xchg
jae
push
dec
xor
push
xchg
pop
je
pop
out
jae
into
mov
sahf
cs
xchg
or
xchg
aas
and
pop
mov
jmp
fwait
ret
cmpsw
sbb
fidivs
mov
in
pop
push
adc
inc
mov
lods
je
push
mov
mov
loop
jns
cltd
frstor
rcrl
pop
sub
aam
fcmove
js
dec
lods
push
stc
int3
lods
sbbb
sub
mov
add
xor
xor
int3
and
and
push
pushf
sub
cld
adc
test
inc
sbb
cmp
int3
pop
ljmp
inc
out
fldt
mov
mov
cmpsl
adc
jmp
daa
add
inc
push
push
jns
xchg
call
fsubl
jmp
mov
xchg
mov
icebp
cs
mov
or
pop
scas
sub
adc
das
rol
or
sbb
mov
sbb
dec
sbb
mov
or
fstl
cli
jbe
fwait
mov
jno
iret
outsb
or
lods
cltd
push
stos
dec
sbb
movsl
lcall
dec
lds
mov
xor
pop
jnp
xor
imul
pop
movsl
mov
std
int3
push
idivl
addr16
mov
cmp
cmpsl
ret
inc
add
mov
adc
add
dec
jnp
int
jne
mov
pop
xchg
insb
push
ja
addr16
xchg
adcl
jne
into
les
and
mov
adc
adc
push
int
and
or
pop
lahf
jns
cmovo
notb
sub
xor
mov
mov
inc
xchg
loopne
mov
adc
xor
cwtl
ss
and
fnstenv
ret
and
inc
or
jae
lahf
out
data16
sbb
sbb
ja
xor
inc
push
imul
rcrb
push
outsb
call
fcomi
fs
xchg
jae
xchg
out
xchg
cmp
add
out
mov
jmp
mov
xchg
out
arpl
mov
divl
jecxz
gs
test
sti
int3
test
mov
mov
push
jmp
sub
add
into
call
repnz
jmp
xorl
test
push
xor
pop
sub
into
mov
inc
sbb
sub
ds
sahf
test
rcrl
push
or
jno
xchg
sti
inc
mov
outsb
in
sbb
and
xchg
icebp
test
xor
jmp
sti
pop
pusha
data16
insb
shrb
fisttpl
subl
fimuls
aad
insb
pop
push
iret
lret
push
xor
pushf
inc
mov
jbe
xlat
and
imulb
repz
out
jno
bound
ss
xchg
loop
adc
or
out
sbb
je
adc
push
mov
sbb
cmc
call
and
inc
aam
sbbl
xchg
hlt
iret
cmp
mov
push
mov
or
int3
mov
pop
insl
jecxz
cmpsb
cmpsl
call
data16
push
inc
lods
stos
adc
data16
push
adc
test
sbb
shr
iret
stc
sbbb
cmpsl
push
test
jnp
push
push
sti
lds
inc
in
testb
fidivrl
insb
xchg
adc
or
inc
inc
adc
gs
jb
cmc
sbb
stos
dec
lahf
rcr
add
sub
mov
aad
notb
ficomps
jns
ret
jge
test
pop
push
inc
stos
jmp
mov
sbb
sbbb
xchg
cmp
pop
sbb
test
scas
in
xchg
mov
mov
in
loopne
or
pop
movsb
cmpsl
outsl
pop
dec
out
push
test
rolb
int3
out
cmp
inc
scas
lcall
sti
imul
lock
std
adc
test
repz
repnz
push
mov
cmp
pop
shlb
or
repz
mov
outsl
mov
push
adc
aad
aam
aad
lret
sbb
loope
adc
rcr
decb
pop
shlb
data16
in
inc
out
sbb
sub
mov
pop
ja
or
cli
lahf
mov
mov
xchg
gs
mov
imul
sbb
out
lods
fadd
push
sbb
aaa
inc
test
aaa
lods
jp
mov
imul
stos
pushf
gs
push
divb
and
and
inc
fstpl
pcmpgtw
mov
inc
test
out
sahf
jmp
lods
and
mov
imul
pop
mov
sbb
int
dec
mov
mov
jge
in
js
sub
idiv
mov
mov
ljmp
rcrb
jae
imul
icebp
push
add
fsts
scas
mov
icebp
addb
ss
pop
mov
cmp
lret
shrb
sub
cmp
cld
out
mov
movsb
insl
call
fidivrs
pop
pop
mov
pop
sub
sbb
sahf
jg
outsb
or
ss
xor
pop
inc
inc
jb
cmp
jne
das
push
outsl
sti
push
push
jnp
cmp
mov
mov
iret
push
mov
das
roll
push
sbb
shll
adc
push
mov
jg
ret
xor
addr16
jge
into
mov
adc
rorl
inc
ljmp
mov
xchg
inc
stos
jb
aas
fucomi
sbb
pop
rolb
or
sbb
dec
stos
sbb
add
push
jg
lods
mov
push
xor
or
inc
outsb
pop
aas
inc
int
mov
fs
pop
out
loopne
call
aam
xchg
lret
and
push
pop
aas
test
xor
sbbl
sti
pushf
adc
push
sub
repnz
outsl
andb
andl
adc
out
dec
les
sti
imul
push
fisttpl
loop
or
jge
jmp
push
pop
out
cwtl
mov
inc
fs
cwtl
subl
cmp
mov
scas
insl
in
xor
int
out
icebp
mov
in
fstpl
xor
pop
sbb
call
mov
mov
out
ja
test
or
pop
dec
fxch
mov
pop
cmpsl
stos
rcr
addr16
mov
jle,pn
mov
mov
sbb
cmp
dec
add
sbb
int3
dec
sbb
mov
mov
push
movsl
mov
lock
sub
jl
or
adc
mov
xchg
xchg
mov
adc
xchg
pop
jo
notl
jne
fcomp
push
pop
jb
nopl
cmp
sub
xchg
sub
lret
test
mov
addl
dec
iret
xchg
push
adc
rol
mov
dec
cmpsl
sbbl
add
push
sbb
scas
std
js
mov
fiadds
sahf
sbb
pop
xor
cmpsb
ror
je
mov
dec
out
lea
fcomip
loopne
and
mov
and
cmc
popa
popf
rcrl
add
lret
xor
in
adc
mov
push
pop
add
insl
mov
fidivrs
mov
fmul
push
sbb
aas
jmp
mov
cmp
inc
mov
inc
adc
leave
aad
rclb
push
mov
jecxz
push
fwait
scas
jae
push
add
sbb
or
fsubr
inc
xor
jle
out
hlt
pop
cmp
cmp
frstor
mov
push
aam
int
rcrb
gs
insl
enter
aam
push
mov
stc
xchg
in
or
out
mov
dec
xchg
push
add
filds
sbbl
jp
je
mov
inc
dec
lret
xorl
fcomip
iret
xacquire
jecxz
xor
and
bound
inc
dec
fstpt
mul
sbb
cld
ficomps
pop
and
lret
fcoml
dec
or
ds
rorb
cmp
outsb
and
pop
sahf
mov
dec
popw
sub
cmp
inc
jecxz
ljmp
push
inc
mov
aam
jne
ret
test
xor
insb
inc
stc
mov
or
iret
inc
xor
sbb
mov
or
pop
sbb
adc
rol
inc
inc
fcomi
rorb
popa
popl
inc
pop
adc
inc
xchg
xchg
push
sahf
lods
adc
lea
push
xchg
iret
inc
add
sbb
lods
lods
out
stos
pusha
adc
ss
inc
aas
jmp
outsl
adc
mov
jae
xor
jecxz
mov
mov
adc
adc
add
in
into
mov
aam
inc
fwait
stos
imul
into
loopne
pusha
int3
xchg
movsb
push
mov
stos
out
adc
dec
and
pushf
cmp
xorl
sbb
push
ss
adc
popf
in
loop
mov
mov
int3
jns
mov
aas
xchg
imulb
pushl
jmp
mov
push
fnstsw
lret
js
pop
push
adcb
sbb
imull
sbb
aas
and
pop
dec
sbb
lahf
mov
sbb
dec
mov
std
test
clc
cmpsb
dec
add
fwait
cmp
pop
jbe
adc
stos
rcll
sub
fs
mov
scas
cmc
cmp
fwait
and
insl
das
call
xchg
ss
leave
and
add
sub
pop
inc
divb
mov
mov
test
cmpsl
xchg
pop
mov
clc
adc
jnp
lock
pop
addr16
shrl
inc
lock
xchg
loope
push
pusha
sahf
rclb
pop
sbb
fcomp
pop
mov
fcomps
mov
pop
in
pop
cli
aam
loopne
inc
mov
add
std
xlat
and
ljmp
xchg
push
adc
push
xchg
xor
xchg
cmp
jl
sahf
jno
lds
pop
sbb
xor
sub
lock
stc
in
clc
stos
ja
xor
add
or
testb
in
mov
repz
ljmp
mov
les
pop
mov
and
or
xor
or
out
test
cli
popa
loopne
mov
fnstsw
and
adc
push
lock
lret
or
xchg
std
int
cmp
mov
lahf
mov
or
das
das
jae
xchg
nop
into
lahf
mov
sbb
outsl
lds
push
jecxz
mov
lods
pop
xchg
insb
mov
pusha
mov
int
push
mov
push
arpl
das
in
lret
cmp
int3
in
hlt
pop
out
aas
fstp
cmpl
pop
out
mov
stc
leave
jle
movsl
hlt
sub
inc
xchg
shlb
and
jmp
in
into
xchg
call
lahf
stos
jl
test
pop
jno
jno
repnz
repnz
xabort
mov
cmpb
sbb
lahf
ds
mov
push
icebp
or
xchg
scas
out
jne
jnp
sub
add
mov
jns
sarl
ret
inc
jbe
inc
in
push
jp
aaa
xchg
mov
sub
fisubrs
cmp
xor
fcomp
inc
lea
popa
into
push
push
shll
pusha
aam
rorb
bound
dec
popf
mov
push
int3
sbb
jnp
sub
xor
mov
rcll
dec
lret
loop
clc
add
int3
pop
lret
movsl
ret
dec
pop
std
sub
inc
loope,pt
int
loope
mov
fstl
adc
cmp
adc
jb
jecxz
add
inc
in
jle
inc
push
clc
sbb
xor
pop
xor
mov
pop
mul
dec
sbb
lret
jg
push
js
dec
xor
pop
push
aas
js
aad
mov
inc
ljmp
push
outsl
jae
lret
int3
ds
incb
in
fcmovnu
push
push
xorl
inc
cmp
inc
ja
addr16
add
mov
cmpsl
inc
push
aas
jae
out
push
clc
and
movl
nop
jp
lock
xor
shlb
jb
out
push
inc
xchg
aaa
pop
adc
cmp
mov
and
aam
gs
push
popl
fsub
in
add
dec
push
lods
add
or
jae
repnz
and
fisttps
test
outsl
and
cmp
xchg
pop
mov
mov
add
movsl
add
sahf
jg
push
adc
aaa
pop
aam
cs
jmp
aam
adc
mov
mov
pop
and
push
aam
mov
adc
xchg
std
cld
xchg
aas
mov
mov
cwtl
stc
push
scas
push
bound
daa
sbb
cmp
xchg
push
mov
mov
lock
xlat
cmp
sub
repz
jnp
dec
jp
rorl
imul
and
clc
insb
outsl
out
ss
fisttpll
je
xor
fs
cmp
ds
cs
or
cmc
cmc
push
repz
mov
mov
movsb
push
xchg
iret
and
push
loopne
dec
icebp
sbb
add
in
fisubrs
int
fldt
das
sub
mov
xlat
mov
push
pop
adc
xor
inc
lods
push
cli
adc
cli
and
and
mov
sbb
stos
sahf
repz
out
loopne
aaa
sahf
dec
pop
cmc
xor
int
mov
jns
inc
add
ret
jge
decl
stos
movsl
insb
mov
icebp
pop
push
and
fs
xchg
add
unpcklps
enter
mov
int3
inc
cmp
xchg
mov
dec
mov
xlat
mov
jne
adc
sub
cmpb
fcomp
arpl
rol
adc
in
mov
iret
outsb
in
and
push
xorb
imul
and
adc
repnz
into
popl
xor
mov
pop
pop
rolb
in
fcoms
leave
push
popa
outsl
in
jge
mov
pop
mov
adc
pusha
jle
inc
gs
ljmp
hlt
jmp
inc
mov
push
adc
out
pop
or
push
mov
movsl
int
fcomi
jnp
jo
fdivrl
push
mov
mov
jo
sub
fstl
out
aas
inc
movsb
cmpsl
pusha
adc
out
jae
xchg
cmp
int3
cltd
sub
subb
lahf
int3
es
mov
inc
repz
sarl
adc
push
idivb
push
and
mov
or
arpl
icebp
ljmp
push
int3
pop
cmp
sbb
lods
pop
or
push
add
sub
mov
push
cmpl
data16
loop
pop
sbbl
jae
outsl
cmpb
add
pop
adc
pushf
lods
int3
inc
addb
mov
jg
sbb
adc
out
jl
pop
test
adc
inc
xor
scas
push
sub
mov
cld
jecxz
js
sbb
pop
sahf
repz
pop
ljmp
shll
out
lcall
movsl
fdivs
mov
scas
hlt
les
cld
mov
ret
adc
xor
cmp
cmc
js
xchg
int3
push
pusha
int
cmp
adc
jns
push
test
ds
or
xchg
sub
enter
or
in
icebp
and
jno
pop
pop
lods
imul
fnstenv
arpl
lahf
push
inc
add
out
mov
notl
test
mov
xchg
insl
mov
dec
pop
sbb
jecxz
data16
mov
xor
mov
mov
mov
aas
cmp
in
sahf
pop
xchg
xor
lods
fmul
divb
ficomps
cli
clc
cmpsb
or
lret
adc
cld
jno
cltd
repz
int3
xchg
loopne
fbld
dec
xchg
scas
ds
mov
xor
xchg
mov
xor
nop
xor
lret
scas
xlat
sahf
mov
xchg
xor
iret
jo
mov
lret
mov
sarb
xchg
outsb
shlb
into
xlat
pop
push
out
mov
iret
add
cmc
fidivrs
xchg
iret
movsb
les
arpl
and
out
inc
aam
scas
fidivrl
xchg
mov
or
pusha
jns
cwtl
lret
push
adc
cmp
clc
add
clc
ret
int3
jge
sahf
cmp
loopne
out
mov
cmp
movsb
mov
mov
push
adc
pop
sbb
push
lock
xor
pusha
cmp
gs
pop
cmpsb
jl
mov
adc
or
jnp
mov
add
popw
orl
ret
clc
cmp
hlt
sbb
nop
outsb
push
lahf
pop
push
and
lret
push
movsb
loop
pushf
test
push
ljmp
adc
pushf
in
mov
sbb
sbb
fs
mov
mov
adc
mov
fisubrl
pop
in
into
mov
push
shll
and
xor
jge
pop
lods
dec
add
pop
dec
or
jae,pn
dec
bsr
sbb
sub
xor
test
enter
inc
imul
mov
mov
pop
ja
push
out
xchg
test
push
pusha
imulb
sti
sbb
lods
xor
fisttpl
mov
xchg
pop
das
mulb
inc
push
addr16
add
orb
jl
sbb
push
sbb
pusha
jmp
xchg
xor
gs
sbb
out
lret
adc
add
cltd
loopne
ja
cld
xlat
cmp
lret
push
add
jmp
ja
outsl
xor
push
mov
add
xchg
sub
jnp
dec
inc
pop
out
dec
jmp
outsl
sar
ret
cltd
push
dec
push
xchg
adc
push
test
adc
inc
sbb
push
dec
mov
mov
mov
cltd
cs
jne
pop
adc
sbb
insl
popf
mov
adc
int3
pop
fsts
gs
jp
sarb
into
loope
pop
jecxz
sub
gs
or
subb
lods
clc
je
int3
mov
push
jp
push
and
inc
adc
xchg
ja
lret
aad
sub
xor
lock
insl
gs
and
fwait
or
xor
sub
cmp
loopne
cs
push
sbb
dec
aam
cmpsl
sar
mov
adc
rcrb
xchg
cltd
mov
cmp
pop
lahf
adc
push
mov
lea
push
adc
pop
jg
gs
fnstenv
aaa
sbb
leave
mov
lods
dec
cmc
das
les
sbbl
jae
push
insl
xor
repz
mov
sbb
mov
jp
addr16
push
fbstp
xchg
das
pop
inc
or
ljmp
sbb
inc
jl
push
fsubrp
sbb
notl
das
lahf
mov
sub
push
int3
js
fsubrl
and
push
repz
xchg
mov
add
inc
les
sbb
out
movsl
sub
adc
push
test
lods
mov
shll
push
ret
or
scas
mov
popw
mov
cs
and
pop
fstpl
cmp
sbb
repz
pop
xor
pop
dec
sbb
outsl
xlat
sbb
dec
addb
mov
popa
jne
xchg
loopne
sar
mov
add
and
pop
mov
int
in
jnp
aas
out
or
cwtl
adc
mov
outsb
fisubl
clc
push
mov
adc
cmp
dec
push
adc
xor
xchg
add
hlt
cmp
xchg
jne
mov
aas
cmpsb
add
jb
adc
repz
cmpsb
mov
mov
in
push
imul
cmp
daa
jae
mov
or
jg
pop
push
ret
xor
outsb
imul
cmp
or
loopne
mov
jge
jnp
sahf
xor
or
add
xor
adc
gs
inc
add
inc
cmp
fcompl
iret
or
test
mov
cli
and
cmp
sbbb
mov
adc
lret
xchg
xchg
test
fdivl
int3
xchg
xchg
push
jge
neg
aaa
aas
mov
inc
pop
out
dec
xor
gs
test
sbb
aam
test
mov
cmpl
into
lcall
iret
sbb
push
sub
and
fsubrl
pop
or
fcmovb
stos
cli
and
push
fbld
sbb
pop
dec
xor
repz
test
neg
pushf
pusha
rcll
add
xchg
sub
sbb
pop
rorb
push
pop
out
and
sbb
lret
test
or
mov
pop
add
popa
ficomps
add
or
push
jle
fbld
mov
mov
hlt
aaa
in
fs
icebp
js
cwtl
lahf
cmp
iret
adc
mov
and
jg
pusha
in
mov
push
mov
cmp
loopne
loopne
jge
out
outsl
sar
cmc
int3
xor
push
aam
push
jno
xchg
and
sbb
lods
in
mov
sub
fdiv
or
jns
sub
jbe
inc
push
xchg
negb
jo
push
push
cli
sbb
ret
xor
je
inc
xchg
jge
stos
push
repnz
data16
xchg
fidivs
push
pop
pop
outsb
and
cltd
mov
dec
add
movsb
mov
andb
rolb
inc
lock
cmp
cwtl
into
push
or
jp
pushf
sub
or
aaa
mov
sti
or
int
int3
xchg
stos
sbb
xchg
jge
inc
stos
ret
mov
adc
js
mov
ret
jecxz
das
sti
add
mov
and
daa
cmp
sbb
mov
and
xor
in
subb
into
ljmp
add
test
dec
mov
das
shll
loop
addb
ja
sbb
inc
pop
jmp
or
loop
hlt
addr16
push
stos
fdivrp
xor
cmp
js
jb
mov
xchg
addb
add
inc
push
xor
dec
popf
sbb
xchg
fdivrl
adc
cmp
dec
cmpsl
inc
pop
push
sub
out
and
scas
mov
sbb
inc
arpl
dec
fldcw
push
inc
pop
sub
mov
into
inc
jge
mov
cmp
jmp
repnz
adc
sbb
ss
inc
outsb
push
stc
add
out
lds
sub
push
pushf
pop
and
adc
jns
or
pop
mov
fnstenv
test
out
mov
shl
jl
pop
cld
pop
int3
test
lods
xchg
fs
js
sbb
pop
daa
fcmovnbe
pusha
sahf
or
adc
test
daa
pushf
jnp
pop
mov
ja
or
xchg
add
sarb
pop
sbb
cld
je
lahf
adc
add
lret
aam
in
stos
pop
pop
inc
cmpsb
ds
sub
dec
xchg
push
out
scas
aam
xchg
in
push
popf
out
push
sbb
imul
ficoms
sahf
fwait
or
inc
adc
das
test
fwait
mov
mov
js
jecxz
sbb
xchg
lahf
adc
jno
mov
loop
xchg
add
cmp
or
mov
mov
add
shl
ret
jb
popf
mov
cmc
add
pop
in
sbb
int3
mov
frstor
dec
add
in
add
outsl
dec
push
repz
loopne
sub
int3
aam
into
mov
cmp
test
das
xchg
repz
fsubl
mov
adc
lret
pushf
sub
test
pop
fst
ja
pop
int3
es
fs
bound
xchg
int3
jecxz
cmpsw
out
cmpsb
dec
test
leave
and
jmp
ss
xchg
jnp
dec
cmp
jo
xchg
iret
jns
imul
loope
cmp
in
clc
sarb
idivl
jge
out
leave
test
in
dec
sub
fimull
mov
stos
jbe
jecxz
and
and
shr
dec
in
inc
dec
mov
inc
test
mov
imull
cli
dec
lock
cmp
popa
xlat
cmc
dec
adc
out
adc
aam
xor
in
in
jge
int3
cmpsb
sahf
cmpsl
mov
pop
inc
pop
add
push
adc
cmpsl
imul
and
push
cmp
out
sub
push
xchg
nop
dec
push
in
shr
loop
out
in
mov
pop
mov
idivl
jle
adc
jmp
sbb
push
imul
sbb
fildll
mov
sbb
cmp
pop
ret
mov
mov
adc
mov
pusha
out
sahf
xchg
jmp
aas
pop
roll
ja
adc
jo
inc
mov
sub
inc
mulb
std
in
push
inc
insb
or
mov
popf
inc
pop
ds
pop
adc
pop
rcl
imul
cli
out
movsb
fs
ficoms
mov
insl
out
pop
adc
cli
mov
fnstsw
iret
fidivs
lret
aad
pop
in
dec
out
dec
cld
inc
mov
xchg
sbb
inc
add
mov
jg
decb
push
dec
filds
mov
lret
std
or
jmp
pushf
mov
aad
mov
out
popw
movsl
int
cld
or
enter
inc
jne
adc
jle
das
insb
xchg
shrl
inc
push
sub
cmp
xor
dec
movsl
xor
int
adc
pusha
cs
daa
mov
or
or
ret
mov
push
mov
aas
push
daa
inc
outsb
data16
cmp
lea
adc
daa
fcomip
xchg
adc
adc
les
and
adc
dec
out
hlt
sbb
mov
push
pmovmskb
pop
mov
jmp
mov
pop
inc
dec
pop
call
mov
mov
stos
shll
push
dec
sub
or
stos
imul
xchg
inc
ret
dec
pop
repnz
sbb
mov
mov
clc
inc
cmpsl
push
cmpsl
jno
jb
orb
add
ljmp
idivb
xchg
mov
inc
fisubrl
add
adc
int3
and
pop
into
dec
jb
jmp
add
lret
and
mov
xchg
aam
ret
push
mov
push
push
pusha
outsb
fsubl
divb
xor
orb
iret
aaa
lods
xchg
jae
cmp
mov
ds
fadds
and
and
mov
adc
cmc
push
or
adc
aad
pop
idivl
test
into
roll
pop
fsubrl
sub
lcall
sbb
fidivrl
add
subb
mov
cmpsb
hlt
xchg
xchg
push
repz
sbb
aad
scas
addr16
adc
or
sbb
push
in
pop
fcmove
mov
loop
and
out
push
mov
xchg
ficomps
mov
fistps
das
stos
ret
jb
popf
push
inc
in
or
int
ficoms
sbb
jnp
insb
adc
test
mov
sbb
inc
roll
cmp
pop
inc
jecxz
xlat
cmp
das
xor
mov
sbb
mov
push
sub
into
sarb
pop
ja
sahf
call
call
out
xor
int3
aad
inc
push
pop
cs
pop
ss
add
add
imul
mov
sub
pop
mov
fsubs
dec
lea
xor
mov
push
iret
repnz
push
fcom
xchg
mov
adc
mov
sub
pop
int
test
data16
add
or
addr16
jmp
cmp
jbe
int
xor
addr16
movsl
insl
mov
pop
pop
cmpsb
mov
repnz
and
pop
fdivs
jb
repz
repnz
int
jno
adc
sbb
mov
push
sbb
fbld
xchg
xor
sbb
movsb
mov
inc
scas
sub
and
push
mov
inc
and
pop
aam
and
xchg
lcall
into
xor
mov
cltd
xchg
cld
mov
fnstenv
adcb
push
push
int
jns
dec
inc
inc
xor
int3
push
sub
inc
je
mov
shlb
int3
call
cld
fcmovne
or
jg
mov
popf
pop
aas
int
fisttpl
mov
inc
cmpsl
pop
xchg
ds
sbb
push
mov
lea
cli
dec
into
and
jle
sarb
jp
decl
push
scas
insw
mov
sbb
xlat
or
push
adc
out
cli
jb
les
sbb
rcrb
aad
jl
sbb
andb
in
and
sub
mov
mov
pop
mov
pop
mov
roll
and
pop
sbb
and
sbb
adc
push
mov
inc
mov
test
jne
adc
sahf
sti
filds
dec
xchg
mov
sub
jmp
je
sbb
mov
inc
popa
aad
sbbb
fwait
leave
fwait
pop
cmpsb
out
adc
jo
sbb
pop
out
mov
mov
mov
int
jl
int3
pop
movsb
xlat
mov
jb
pushf
adc
ret
sahf
mov
cmpsb
dec
mov
add
dec
call
in
xor
adc
inc
iret
dec
lods
or
xchg
xchg
jl
lret
xchg
push
xchg
sub
push
and
jmp
lods
adc
jns
int
mov
popf
push
mov
das
dec
and
jbe
sbb
jbe
sbb
add
sbb
inc
push
or
push
pop
jge
sub
orl
ret
adc
pop
adc
dec
sub
jmp
jmp
cmp
inc
icebp
xor
imul
adc
into
pop
pop
xor
sbb
sbb
mov
adc
push
cld
push
jmp
dec
mov
and
xchg
js
test
sbb
xlat
add
test
push
iret
mov
mov
scas
mov
adc
clc
pop
xchg
sub
aaa
stos
mov
sbb
adc
lock
dec
or
push
test
jge
dec
push
push
ljmp
cmc
int3
xchg
je
aas
cmp
cs
hlt
mov
dec
and
mov
jg
inc
sbb
pusha
imul
adc
cmc
push
nop
pop
ss
arpl
add
insb
imul
cmp
mov
out
int3
xlat
mov
mov
repz
or
popa
pop
neg
sbb
jecxz
push
jecxz
sbb
pop
xlat
mov
repnz
sub
int
in
lret
lahf
xchg
add
cli
push
adc
dec
repnz
mov
mov
rcrl
mov
cltd
mov
push
fcmovne
popa
jo
dec
push
xlat
mov
and
sti
jmp
cmovs
fsubrl
dec
pop
aam
pop
fmul
je
in
clc
and
xchg
stc
insb
test
lds
pop
int
or
mov
ljmp
pop
repz
pop
xchg
loopne
xchg
js
dec
iret
add
cmp
aas
or
adc
notl
lods
or
rclb
je
push
jle
and
scas
stos
pop
dec
repz
mov
mov
pop
and
mov
mov
lahf
test
int
dec
mov
idiv
mov
div
enter
adc
jo
mov
adc
pop
sbb
or
iret
push
mov
push
xchg
inc
sbb
lock
sub
inc
and
aas
xor
scas
sbb
out
mov
imul
push
dec
cmp
sbb
sar
jle
jmp
sbb
mov
xorb
movsl
sub
rclb
lds
data16
push
rcrl
and
out
pop
pop
les
xor
imull
scas
adc
fstl
andb
iret
mov
fidivrl
mov
cmp
mov
lds
dec
adc
or
mov
pop
push
stos
in
mov
stos
lret
mov
jo
cmp
ljmp
lds
lock
pop
inc
pop
sbb
or
dec
ret
out
mov
ljmp
inc
push
mov
aaa
sbb
adc
enter
ljmp
adc
jl
inc
and
pop
ds
xchg
int
gs
stos
mov
fisubl
add
adc
push
mov
jecxz
dec
sar
cwtl
push
push
fistps
scas
pop
add
pop
stos
data16
inc
inc
sbb
mov
mov
sbb
repz
addr16
jne
mov
shl
push
cld
adc
hlt
jns
jmp
test
mov
mov
sbb
arpl
push
jnp
and
dec
push
notl
test
adc
scas
lret
cld
dec
mov
push
mov
pop
sub
insb
jp
xor
mov
xchg
push
out
jb
or
inc
jl
data16
xchg
push
adc
sarb
jbe
ja
add
int
xor
into
int
ds
dec
aam
sub
pop
stc
push
adc
sti
cmp
rcll
or
mov
ja
pop
mov
pop
fsubr
xor
mov
mov
imul
in
xorl
adcb
sub
in
mov
mov
jbe
cmp
xchg
mov
rorb
fiaddl
aas
mov
or
inc
push
imul
and
mov
xor
sbb
test
arpl
hlt
mov
iret
test
xor
ret
cmp
arpl
fildl
jo
pop
sbb
cltd
in
push
int
mov
mov
adc
in
inc
addr16
pop
pop
loope
movsb
int
adc
int
repz
mov
or
cmp
push
lods
fdivl
cld
imul
xchg
stos
add
add
add
or
and
sub
add
sbb
and
add
mov
rolb
adc
addb
dec
hlt
inc
and
dec
rorb
inc
adc
adc
inc
or
pusha
and
push
or
add
adc
addl
adc
inc
and
nop
or
add
push
mov
add
add
add
mov
and
add
push
inc
add
pop
dec
add
add
adc
add
add
and
and
add
inc
add
adc
add
or
add
inc
inc
popf
adcb
or
pushf
add
adc
add
add
adcb
add
push
adc
inc
add
add
add
add
addb
add
nop
add
or
add
add
add
add
add
xor
add
inc
sub
add
jb
sub
add
add
addl
sub
dec
mov
adc
adc
adc
add
adc
nop
add
add
add
add
sbb
or
push
or
inc
adc
inc
add
or
xor
nop
pusha
add
add
add
add
add
or
or
add
and
jbe
mov
mov
test
or
mov
push
roll
addb
mov
add
add
in
dec
inc
add
sbb
jae
adc
add
inc
push
inc
add
add
add
and
subl
mov
add
mov
add
mov
dec
nop
or
add
push
addb
lea
inc
add
add
inc
inc
adcb
push
push
adc
mov
add
add
test
inc
inc
add
addb
and
add
add
inc
dec
add
ret
adc
mov
add
add
xchg
addb
add
add
orb
and
inc
adc
inc
inc
inc
sbb
inc
add
rolb
add
rolb
xor
inc
push
add
inc
and
add
pusha
adc
push
adc
addb
rorl
add
inc
cwtl
push
add
push
inc
inc
inc
lret
sbb
addl
jl
xor
add
add
push
and
jo
inc
and
add
push
dec
and
adc
inc
add
add
test
or
add
add
addl
xor
sbb
push
inc
sub
or
orb
add
adc
add
add
add
sub
add
add
and
test
or
addb
addb
add
add
jge
and
add
andb
add
add
bound
cwtl
inc
popa
add
xchg
and
or
push
add
add
inc
add
mov
add
sbb
xorb
addb
and
movsb
adc
add
add
add
add
add
pop
pusha
add
and
add
pusha
inc
inc
pop
loopne
test
add
and
dec
nop
add
adc
push
adc
inc
add
orb
add
cwtl
or
add
or
mov
add
push
jecxz
mov
inc
add
inc
add
add
or
adc
or
add
mov
inc
add
or
add
add
movsb
adc
add
push
add
add
add
int3
adc
sbb
add
add
or
and
add
add
add
dec
or
add
add
test
add
addb
rolb
add
addb
add
sub
or
and
inc
push
inc
add
or
je
jecxz
enter
and
push
inc
test
mov
mov
push
and
add
add
add
test
add
add
add
add
sbb
pusha
mov
add
push
add
andb
mov
enter
add
add
and
or
add
add
sbb
mov
test
add
or
add
xor
inc
add
add
or
inc
addb
and
pop
and
pusha
inc
add
inc
add
rolb
or
add
andb
add
add
inc
add
adc
sub
bound
addb
mov
add
adc
push
adc
test
inc
add
pusha
mov
adc
mov
add
add
and
pusha
inc
add
add
add
add
add
add
add
push
add
sub
mov
fimull
or
addl
or
and
add
inc
pusha
add
adcb
and
rcll
add
add
sub
push
sub
push
add
add
sub
add
sbb
and
inc
add
add
adc
xchg
add
add
mov
add
test
rorb
inc
and
and
add
add
push
adc
adc
inc
pusha
add
cmp
pusha
add
and
addb
and
adc
add
inc
add
add
add
or
and
push
inc
add
dec
add
push
add
inc
inc
sbb
push
cwtl
add
addl
add
add
adcb
and
add
add
add
add
add
add
test
add
add
inc
add
add
sub
add
add
or
dec
and
inc
push
enter
orb
insl
lock
pusha
jns
add
add
add
dec
add
add
bt
nop
and
pusha
add
addb
sub
mov
xor
add
xchg
add
add
pusha
add
dec
add
mov
or
adc
sbb
les
add
addb
inc
or
movb
or
inc
add
lcall
ret
add
jne
add
and
nop
subl
addb
loopne
add
lea
mov
or
test
add
add
add
es
add
rolb
or
addb
add
add
orl
lea
adc
add
add
test
inc
inc
sbb
add
add
nop
inc
adc
out
add
add
add
sub
add
mov
or
add
adc
adcb
add
test
pushf
mov
add
test
add
and
orb
add
addb
add
adc
sbb
add
add
nop
or
add
add
enter
pusha
or
add
add
or
rcll
or
or
or
or
add
add
adc
push
add
add
xchg
add
add
dec
sub
inc
sub
or
or
add
loopne
and
adc
shlb
add
les
add
add
push
add
add
sub
addb
mov
add
nop
inc
inc
inc
es
nop
inc
andb
and
add
or
inc
dec
add
addb
inc
and
pop
adc
add
loopne
movsb
bound
add
mov
xor
add
adcb
add
adc
add
mov
or
add
pusha
dec
ret
rolb
xor
add
les
add
and
add
xor
adc
inc
adc
add
test
orb
add
addb
orb
lea
jo
add
or
add
add
add
addb
adc
or
add
orb
adc
or
dec
add
inc
pop
and
add
adc
add
loopne
push
add
test
add
andb
mov
mov
or
add
inc
add
add
addb
add
add
rolb
mov
mov
add
and
adc
inc
add
or
add
add
add
addb
add
adc
add
pop
mov
dec
adcb
adc
add
add
add
mov
add
add
add
xor
pusha
mov
or
add
and
mov
enter
add
add
or
add
sub
adc
add
dec
addb
add
add
add
add
add
dec
push
add
adc
inc
add
add
test
add
xor
adc
or
add
add
add
add
sbb
sub
mov
add
push
add
adc
add
push
mov
add
add
or
add
inc
add
add
sbb
add
pusha
add
add
inc
add
loopne
add
add
add
pop
add
adc
and
push
test
add
sbbb
adc
cmp
inc
addb
inc
addl
push
xor
and
inc
adc
add
add
add
add
dec
addl
or
and
xor
add
inc
inc
add
add
add
add
and
add
add
add
add
rol
inc
add
or
pop
mov
and
adc
mov
or
dec
pusha
nop
addb
inc
orb
add
and
nop
xor
jo
add
adc
add
adc
adc
adc
or
aad
add
add
inc
inc
inc
add
add
push
andb
adc
or
sub
add
xor
add
mov
add
add
push
xchg
and
add
inc
inc
in
add
inc
dec
add
je
add
add
and
add
push
add
jo
add
add
add
and
mov
adc
add
add
and
inc
and
bound
and
add
or
add
add
orb
add
addb
adc
adc
inc
push
add
add
xorb
cltd
or
or
adc
add
adc
dec
mov
or
sbb
or
add
add
test
and
and
add
or
andl
add
adc
adc
mov
imul
sbb
add
inc
add
dec
add
rolb
jp
wrmsr
add
test
and
rolb
add
insb
mov
or
dec
push
sub
sarb
adc
xor
jo
xor
or
add
add
mov
adc
and
adc
add
push
add
xchg
add
add
adc
add
arpl
and
add
inc
add
addb
and
xor
or
add
add
mov
or
and
add
add
inc
add
adc
inc
adc
and
ror
add
mov
add
lock
xchg
rorb
pusha
jbe
addb
nop
inc
sbb
rclb
add
inc
add
dec
cwtl
inc
add
add
cwtl
or
sbb
add
dec
jmp
or
adc
add
andl
inc
or
inc
or
push
add
add
xchg
push
inc
or
add
add
movsb
bound
inc
and
movsb
adc
rcrb
adcb
sub
add
inc
inc
addb
inc
mov
add
inc
adc
les
add
add
inc
add
and
inc
adc
or
or
in
sub
and
xor
add
jo
and
inc
and
and
or
mov
and
add
sbb
mov
add
add
inc
adc
cwtl
inc
add
and
add
and
sbb
add
inc
cltd
or
and
add
test
mov
inc
dec
push
add
add
add
add
sbbl
inc
inc
inc
xchg
push
add
add
add
push
add
add
and
inc
inc
jl
add
add
dec
and
add
add
sub
add
add
add
or
add
xorb
les
adc
add
and
mov
add
adc
add
add
out
mov
and
add
and
add
or
adcl
adc
adc
and
and
or
add
inc
add
add
pop
add
or
add
inc
and
andb
inc
sbb
add
add
add
adc
mov
and
and
jl
or
inc
or
and
inc
ss
adc
test
dec
sub
and
sbb
add
add
adc
sub
add
addb
add
and
adc
xor
add
nop
add
add
adc
mov
and
push
mov
and
add
inc
dec
and
add
add
inc
adc
andl
andb
inc
pusha
add
inc
inc
add
add
add
add
inc
adc
inc
add
add
jb
add
inc
add
adc
add
or
and
enter
add
inc
add
push
push
and
inc
xor
add
add
dec
add
addb
movsb
jle
add
add
add
add
or
pusha
mov
and
add
add
sbb
add
and
and
add
adc
push
adc
add
adc
add
.byte
addb
.byte
lahf
push
lahf
cmpsl
enter
adc
mov
in
lahf
push
mov
dec
fsubrs
rcll
cmp
leave
leave
imul
or
push
jo
and
adc
pop
and
inc
movsl
movb
int
adc
icebp
mov
cld
mov
jnp
into
or
mov
gs
lret
jmp
xlat
pop
pop
pop
scas
imul
inc
inc
and
pop
mov
add
push
rcrb
into
jg
stc
ss
xor
fldcw
pusha
or
lret
sbb
xor
popf
int
jb
movsl
mov
mov
fwait
mov
inc
jecxz
rcrl
neg
dec
sub
dec
adc
xchg
xchg
in
insb
lahf
inc
push
aad
pusha
xchg
into
test
jecxz
out
mov
dec
and
aam
test
lcall
js
mov
mov
gs
out
pop
in
pushf
lea
test
outsb
pop
or
inc
inc
addr16
push
leave
roll
jae
or
xchg
cmc
fiaddl
pop
inc
adc
adc
hlt
adc
push
int3
pop
sbb
mov
repz
lahf
por
cmp
lcall
cltd
inc
pop
imul
and
movsl
insb
scas
or
fwait
leave
or
xchg
sahf
loop
adc
std
or
sub
xor
aad
subl
xchg
dec
push
lahf
pop
mov
insl
sbb
mov
xchg
ljmp
jp
cs
cmp
and
push
inc
add
adc
fisubs
xchg
and
adc
dec
aaa
lret
mov
mov
or
push
mov
bnd
mov
xor
sub
inc
fildll
insb
test
add
or
cmp
rorl
cmp
pushf
xchg
int
js
xchg
addr16
mov
lods
push
xlat
cmp
and
pop
xchg
ss
imul
fldcw
stos
lret
loop
mov
js
test
mov
cli
push
out
inc
jne
out
popf
dec
mov
mov
dec
mov
xlat
push
pop
out
adc
stos
inc
pop
ret
xor
mov
int
adc
push
pop
sub
repnz
cmp
ret
ret
sbb
pusha
xlat
jg
mov
dec
adc
lret
imulb
xor
sbb
push
mov
and
popf
sbb
popf
rcrl
int3
mov
pop
add
push
daa
out
out
jle
popa
cwtl
pop
out
mov
add
rcrl
nop
pop
lahf
out
pop
and
push
cmp
cld
into
gs
scas
iret
push
shl
repnz
xor
mov
test
mov
xchg
rcll
test
fadd
xor
push
in
sbb
pop
ja
pop
fwait
out
jmp
inc
adc
popf
add
add
mov
cltd
js
adc
movsb
dec
mov
fs
pop
sub
or
clc
stos
lods
in
gs
xchg
lea
cmp
pushf
mov
movsl
push
mov
mov
cmp
mov
into
dec
ljmp
mov
movl
rcll
adc
jge
call
orl
cmp
aas
ljmp
mov
or
insb
pop
out
xor
out
ljmp
mov
or
xor
clc
xor
pop
xchg
imul
add
push
push
and
faddl
xchg
push
das
jmp
icebp
vpermt2pd
mov
rorl
inc
inc
adc
lods
sbb
outsl
nop
dec
xor
sub
cmp
pop
aad
add
stos
push
mov
ljmp
xchg
add
sub
mov
ror
xchg
loope
inc
pop
dec
lcall
mov
icebp
xor
push
sbb
dec
mov
sbb
shll
mov
mulb
loopne
into
cld
jo
movsb
and
cli
jo
sbb
dec
add
adc
faddl
inc
xor
inc
out
sbb
push
out
inc
insb
inc
imul
jno
popf
lock
int3
dec
adc
sti
fdivrl
bound
dec
test
gs
pop
mov
iret
loopne
sbb
push
rcrb
fadds
cli
xor
loope
adc
pop
xor
in
sbb
lds
test
jp
cmpsl
movl
lcall
sub
bnd
aad
lods
in
iret
cmc
cmc
mov
cmpsb
and
fwait
mov
je
insb
cmp
mov
or
insl
out
cmc
scas
mov
sbb
stos
cs
mov
add
push
mov
int3
pop
pop
pop
xor
mov
mov
shr
jmp
pop
lea
push
adc
pop
push
out
sub
ss
out
xchg
xor
add
xor
sub
push
addr16
es
jg
xchg
sbb
pop
and
rcll
out
xchg
pop
loope
adcb
int3
lods
stos
inc
loope
adc
mov
imul
push
loopne
int
mov
pop
mov
ss
ja
pop
pop
push
test
nop
adc
sbb
mov
inc
or
sub
in
loop
hlt
shlb
add
jecxz
out
lds
out
mov
mov
pop
idivl
inc
dec
dec
xchg
sbb
not
or
unpcklps
loop
in
lods
adc
mov
inc
pop
imul
lahf
adc
sahf
xchg
into
xchg
cli
data16
jnp
test
pop
gs
aas
in
hlt
jns
adc
and
sbb
into
cwtl
loop
sbb
and
adcl
jnp
outsl
int
lahf
dec
sti
push
dec
dec
jmp
pop
sub
outsb
fcmove
out
jne
flds
fdivp
push
xchg
xor
aad
sub
push
int
or
mov
push
es
inc
add
mov
jb
or
xchg
sti
arpl
insl
sbb
imul
dec
outsl
inc
je
adc
imul
or
loope
jp
in
iret
fiadds
inc
test
add
test
sub
add
into
inc
jecxz
addr16
outsb
xchg
dec
scas
pop
test
jb
xor
call
mov
les
idivb
mov
cmp
sbb
sarb
pusha
inc
cmpsb
repz
div
cltd
orb
shlb
sbb
iret
adc
push
mov
addr16
jae
aam
adc
shll
pop
lods
jo
bound
ret
or
jnp
sbb
inc
out
jge
inc
mov
int
nop
dec
add
fstpt
xchg
dec
dec
dec
pop
mov
ficomps
jg
push
stos
dec
daa
inc
shlb
iret
mov
or
fdiv
inc
aas
mov
jnp
ret
mov
mov
cmp
repz
add
dec
add
nop
loopne
ret
mov
xor
xchg
js
push
aad
loope
repnz
and
gs
fcoms
jae
test
sti
adc
cmp
cmpsl
xor
lret
popf
dec
jle
aad
mov
cmpsl
push
push
cmpsb
shll
dec
test
stc
xlat
je
mov
test
add
data16
mov
mov
adc
sbb
jo
xchg
pop
nop
stos
xchg
push
xchg
xchg
mov
scas
sbb
imul
out
push
stc
jg
jge
arpl
aas
gs
jb
cmpsl
mov
pop
mov
or
nop
xorw
nopl
push
in
es
add
sbb
cmc
jl
xchg
add
addr16
outsb
lahf
repnz
xlat
test
or
and
aad
jl
sub
mov
adc
scas
pop
or
rcrl
cs
cmp
dec
out
test
idivb
dec
testl
fwait
xchg
std
loop
arpl
push
jmp
ljmp
xor
loop
push
sub
mov
insl
hlt
mov
lahf
inc
push
add
outsl
call
add
fcoml
shrb
faddl
mov
mov
mov
or
adc
dec
cmp
xchg
andb
mov
iret
and
mov
outsl
add
push
mov
bound
out
dec
leave
add
jecxz
outsb
lods
das
js
pop
call
mov
into
cltd
fstl
xchg
cli
push
pop
movsl
mov
fwait
and
das
mov
stc
lret
sub
and
lahf
adc
jae
xor
int3
dec
push
cld
data16
fdivrs
int3
adc
cmpsl
mov
cmp
and
or
and
and
imul
and
dec
xchg
fdivr
pop
or
aas
orb
adc
shlb
dec
orl
leave
mov
and
mov
test
iret
or
jae
ja
lahf
jne
or
jnp
pop
loope
adc
push
ljmp
outsl
jne
and
mov
mov
mov
insl
mov
and
es
xlat
mov
inc
mov
cwtl
iret
sahf
popf
pop
add
out
jecxz
aaa
and
lods
cli
cs
mov
cwtl
push
fs
repnz
xchg
in
sbb
pop
lds
pop
lods
xchg
bound
testl
addr16
cmpsl
sbb
mov
push
sti
dec
sbb
sbb
xlat
pop
push
adc
out
xor
out
dec
add
inc
sbb
test
lret
xchg
sbb
sbb
enter
mov
loopne
or
mov
sub
stc
int
rep
mov
pop
shll
outsb
sbb
mov
iret
xchg
sahf
aas
xacquire
sbb
jmp
jl
or
sub
ss
scas
movsb
xor
mov
and
xor
mov
sbb
ja
adc
pop
mov
cmp
dec
xchg
adc
sub
adc
fmul
pop
sub
or
mov
sub
mov
lods
mov
mov
int
pop
pop
push
push
pop
fwait
cwtl
shl
jno
in
pop
pop
adc
outsl
jl
and
out
in
mov
or
jbe
jb
mov
lret
mov
adc
data16
lret
jecxz
push
mov
popa
mov
data16
scas
and
fsubrl
adc
pop
mov
sub
and
iret
sub
push
or
inc
gs
pushf
test
into
sub
mov
mov
adc
mov
movsb
mov
lret
dec
mov
ss
cld
outsl
arpl
xchg
shl
test
arpl
xchg
xlat
jnp
bound
in
jae
into
push
xlat
ljmp
movsb
call
into
rorl
dec
addr16
shrl
cmp
cltd
jae
sub
int
mov
ss
rcll
cmp
push
bound
xlat
push
rol
mov
sbb
ret
mov
dec
adc
lret
out
stos
cmp
jo
push
pop
sbb
sub
mov
mov
aas
fwait
cmp
mov
push
lds
xor
int
sub
daa
cmc
xor
in
into
popa
outsb
xchg
lods
fistps
jecxz
rclb
imul
and
dec
push
es
arpl
push
addr16
inc
cwtl
in
sub
pop
aas
push
push
fildl
sub
cmp
jmp
sbb
push
inc
enter
xor
inc
fiadds
jo
sub
jnp
adc
mov
inc
inc
popa
push
xchg
xor
dec
cwtl
sbb
pop
mov
pop
jns
call
idivl
xlat
in
movsl
add
inc
iret
xor
push
adc
pop
mov
arpl
jmp
push
gs
xor
xor
flds
lods
adc
xchg
mov
shlb
and
pop
mov
iret
dec
fnstenv
aam
shlb
je
adc
je
jle
or
pop
and
adc
cmp
lods
and
ret
adc
jo
mov
cld
mov
sub
jb
out
push
inc
rcrl
fnstsw
adc
icebp
lcall
push
jb
push
inc
int3
call
mov
and
shll
and
popf
mov
adc
push
cs
mov
jecxz
fcmove
ss
push
xchg
adc
or
jbe
dec
bound
cmp
pusha
jmp
imull
jo
rcll
sbb
bound
pop
xor
test
push
dec
sub
or
adc
and
xchg
out
int
bound
sbb
adc
mov
or
push
xor
int
cmp
out
add
loope
adc
sub
out
sub
fs
push
loopne
fisubrs
add
xchg
fwait
icebp
lret
mov
or
pop
sub
daa
pusha
mov
fidivrs
jmp
lcall
arpl
inc
insb
les
push
mov
or
sti
or
jge
stos
adc
or
iret
xchg
sbb
xchg
xor
or
shl
adc
iret
dec
test
dec
pop
push
push
ljmp
adc
dec
bound
push
jo
es
push
jl
cld
add
jbe
rcr
jg
hlt
pop
addb
clc
inc
adc
mov
cli
mov
shrl
or
into
mov
popf
vmovdqa
xchg
or
addr16
adc
adc
sti
lea
sub
outsl
adc
orps
aam
mov
into
scas
push
dec
std
dec
sbb
and
sti
hlt
lods
mov
fcmovnb
in
pop
lds
push
and
dec
pop
sbb
pcmpgtd
daa
popf
addr16
imul
sbbl
push
decb
or
sub
cwtl
jmp
jns
adc
cwtl
jns
push
dec
mov
mov
out
cmp
pushf
dec
data16
cwtl
cmp
sbb
scas
push
pop
daa
add
inc
test
and
pop
iret
sti
mov
lahf
xchg
int3
into
jge
pop
cltd
gs
shll
pop
push
pop
add
xor
movsb
sbb
push
mov
bound
dec
push
or
mov
out
inc
sti
cmpsl
testb
push
aaa
stc
mov
iret
add
aam
rcrl
outsl
data16
sub
add
fsubrl
popa
add
aad
out
out
push
sbb
adc
out
mov
push
lea
or
out
outsb
addb
jns
incl
push
lret
mov
mov
fcmove
mov
or
aaa
cmc
adc
mov
icebp
pop
or
adc
popf
mov
outsl
mov
imul
clc
adc
and
sarb
inc
adc
imul
mov
and
pushl
movsl
sbb
stos
sub
ljmp
jbe
loop
mov
xor
test
dec
fdivl
in
xchg
lds
sub
ss
mov
cmp
inc
mov
mov
dec
adc
fcomp
je
movsb
add
sbb
adc
movsl
xchg
jg
inc
test
in
push
pop
sbb
push
pop
pop
cmpsb
push
push
jno
sbb
mov
movsb
popf
sbb
in
nop
in
std
pop
xlat
lcall
into
lahf
sbb
cld
xor
popf
sti
jp
adc
adc
subb
gs
mov
xor
or
inc
adc
pop
arpl
leave
jns
push
inc
jge
sarb
cmpsb
mov
mov
iret
xchg
xorl
sbbl
mov
cmp
xor
dec
adc
adc
cmp
push
xchg
xlat
xchg
push
lret
adc
sti
jecxz
adc
enter
xchg
gs
outsb
mov
sbb
mov
js
addr16
stos
xchg
xchg
cld
mov
aas
repnz
jmp
jnp
in
mov
push
add
jb
shlb
loope
adcb
int3
jp
fprem
notb
fwait
dec
adc
mov
mov
push
cmp
sbb
pop
lcall
sbb
test
ljmp
jmp
cwtl
cmp
adc
push
cli
sbb
das
sub
pop
inc
out
pop
cwtl
dec
sbb
lahf
xchg
sbb
fistpl
mov
data16
xchg
insb
adc
subl
mov
mov
jge
push
das
lea
cmpsl
mov
push
adc
pop
cmp
push
insb
clc
or
sbb
mov
popa
mov
sbb
stos
dec
pop
inc
adc
fnstsw
rolb
sbb
jno
gs
imul
stc
popa
dec
and
adc
push
cmp
std
in
leave
das
mov
xor
mov
dec
jne
push
iret
int3
aas
xchg
loopne
push
jnp
aam
stc
and
cld
lahf
in
scas
push
and
sub
fimuls
lcall
or
mov
aas
sahf
shl
push
std
lret
sbb
sbb
pop
sti
cmpsl
inc
mov
scas
xchg
loop
cmp
loop
rcll
adc
sub
inc
mov
xchg
pushf
jl
adc
pop
adc
xchg
dec
out
pop
shll
outsl
push
sbbl
mov
rclb
daa
mov
es
inc
test
pusha
insb
sbb
fistpll
loop
xorl
inc
sub
test
dec
into
mov
push
push
sbb
out
daa
shr
jmp
sbb
dec
sub
and
faddl
sbb
aam
xor
pusha
pand
in
jbe
pop
push
push
rcrb
pop
mov
xchg
das
dec
pop
in
pushf
jle
clc
cld
loop
push
xchg
call
clc
std
and
inc
aas
sbb
pop
add
cwtl
xchg
bound
out
pop
stos
fwait
int3
dec
pop
clc
cltd
push
sbb
push
xchg
push
arpl
fsubp
call
jae
lahf
sub
sbb
pop
rcrl
call
stos
lret
pop
pop
dec
shrb
leave
jge
clc
dec
int3
in
adc
sub
or
cmp
sbb
ljmp
sbb
jne
in
cmc
and
mov
icebp
addr16
rorl
and
sbb
dec
pop
enter
dec
in
and
es
bound
sub
cmp
xchg
repz
sbb
fwait
or
pop
icebp
push
mov
and
jb
rcrb
fistl
notl
dec
inc
clc
add
into
and
lret
out
sub
insb
std
pop
fwait
lcall
sti
ds
xlat
sub
jbe
inc
movsl
les
pop
test
or
out
cmp
rorl
jecxz
mov
sbb
mov
inc
sbb
iret
jo
cmpsl
mov
cmpsl
sbb
nop
mov
nopl
add
adc
addr16
xor
pop
adc
cmp
adc
movb
inc
in
sub
arpl
add
lea
xor
inc
cmpb
or
pusha
push
mov
jnp
mov
pop
add
inc
xlat
xchg
das
fistpll
pop
add
jno
mov
int
jns
je
shrl
das
inc
loop
sub
bound
pop
scas
jmp
xchg
cltd
pop
cli
mov
or
aaa
jle
adc
cmpsl
inc
in
in
or
xchg
xlat
ds
cmp
mov
sbb
xchg
sub
sbb
loope
iret
dec
adc
pop
adc
dec
imul
pop
mov
mov
roll
adc
xor
ficoml
pushf
cmpsb
sbb
dec
cmpsl
fadds
int3
aas
jae
xchg
paddusw
shrb
sbb
fisubl
xor
mov
jecxz
sarl
lock
setl
test
xchg
xor
inc
sbb
or
loopne
xor
xchg
lcall
jns
or
sbb
outsl
jle
adc
out
roll
mov
jno
testl
inc
and
das
jo
mov
lock
inc
int
sbb
cmp
pusha
in
decb
xor
test
dec
mov
fstps
out
int3
fs
aad
xchg
es
insl
cltd
xchg
cs
and
aam
pop
jne
adc
scas
out
sbb
or
faddl
iret
jae
add
cmp
ds
fcmovb
pop
jb
and
push
in
push
dec
lahf
push
inc
adc
inc
outsl
push
lods
scas
adc
jno
bound
andb
lds
dec
insl
jns
sbb
ljmp
mov
sbb
pop
les
xchg
dec
cmp
sub
scas
and
icebp
inc
cmp
jmp
lock
mov
mov
int3
push
dec
mov
xor
jl
out
lea
mov
cmp
cmp
jl
fldt
mov
fnstsw
sub
insb
repnz
sbb
iret
inc
mov
test
xor
pushf
rclb
addr16
pop
movsl
or
stos
cmc
adc
fs
lret
cmpsl
outsb
and
pop
jg
es
mov
rclb
cmpsl
mov
imul
cmp
mov
into
test
insb
insl
outsb
pop
or
or
int3
adc
xor
ss
popa
repz
sub
fnstcw
repz
out
divl
into
and
lock
mov
daa
lret
js
mov
out
add
insl
pop
cmp
addr16
hlt
jne
cmp
dec
lea
push
inc
fists
imul
xchg
pop
pop
imul
mov
pop
int3
xchg
sbb
mov
scas
int3
lcall
sub
inc
jno
int
adc
stc
addr16
jge
or
mov
rorb
adc
cmpb
or
sti
out
push
push
xchg
lock
push
mov
sub
pop
dec
sub
jle
pop
inc
cmp
pop
xchg
cmp
inc
mov
lcall
sub
popf
shrl
out
pop
pushf
pop
pop
cmp
fimuls
sbb
dec
rcl
pop
pop
test
stos
pop
xchg
fsubr
or
data16
loopne
call
push
imul
xor
adc
and
in
inc
fdivs
aas
into
nop
cmp
inc
jmp
pop
adc
lcall
outsl
sbb
sub
cmpsl
lcall
lea
aaa
xor
pop
mov
mov
in
sbb
cmp
adc
inc
movsb
mov
xor
and
or
mov
mov
into
xlat
shl
push
sbb
ret
cmpsb
and
test
std
mov
cmp
popa
lahf
mov
scas
pop
add
in
adc
dec
icebp
arpl
pop
fmulp
fsubrs
push
push
imul
inc
mov
rcll
xchg
fdivrs
cwtl
push
loope
sub
cli
adc
cld
push
cmp
xchg
sub
mov
jmp
popf
pop
push
leave
sbb
idiv
xchg
pop
mov
adc
sar
and
mov
orb
add
out
jb
push
ret
adc
inc
outsl
push
mov
mov
lods
cmpb
test
mov
mov
mov
std
test
xchg
inc
das
xlat
mov
mov
xchg
stos
add
cmp
gs
or
int
push
stos
sahf
sar
or
or
jb
cmpsb
and
sub
mov
test
push
insb
mov
jecxz
fsubrl
shlb
push
mov
mov
iret
add
stos
push
test
jnp
jmp
adcl
jns
add
ret
shlb
mov
adc
sarl
xchg
aas
push
mov
rcrl
or
mov
or
int3
lret
jo
inc
sub
inc
dec
in
rclb
mov
rol
fistps
sbb
into
xor
fadds
int
pop
inc
sbb
jae
adcl
push
in
test
jmp
arpl
or
fcmovu
and
mov
push
lea
and
mov
ja
ja
cmp
ret
leave
fildll
gs
cmp
scas
mov
in
pop
dec
loope
jb
ret
xlat
jns
adc
call
push
call
rcrb
xchg
gs
dec
aam
repz
dec
sub
ljmp
pusha
into
adc
sar
sarl
insl
out
dec
ljmp
scas
lret
xor
addr16
outsb
out
sbb
addl
psubq
push
xchg
cld
cmp
les
popf
inc
out
push
mov
ss
inc
jne
int3
addr16
imul
ret
fcomi
addr16
sub
adc
das
or
nop
in
test
nop
int3
rorb
enter
push
pop
popf
stc
testb
inc
flds
push
sbb
arpl
scas
filds
push
jae
inc
outsb
lea
repnz
daa
pop
mov
aam
add
ret
sbb
sub
aas
insb
repz
loopne
jecxz
cmp
xor
sbb
and
into
div
ja
sub
inc
pop
int3
mov
in
repz
dec
push
ljmp
or
dec
add
inc
add
jbe
cltd
mov
dec
test
repz
fs
cmc
xchg
sbb
andb
dec
enter
bound
add
pop
shll
repz
sbb
int3
cmp
push
jmp
sbb
sbb
push
pop
dec
cmp
enter
or
or
loopne
stos
cmpsl
aam
repz
push
filds
mov
clc
dec
pop
bound
ret
jl
inc
test
xor
mov
lods
xchg
mov
and
mov
fstpl
lock
stc
dec
sbb
mov
mov
jl
or
dec
int3
push
mov
mov
in
pop
dec
sbb
push
sbb
iret
xor
inc
shlb
pop
push
push
into
dec
xchg
push
in
into
or
addr16
out
lds
shll
pop
aam
mov
xor
and
test
lahf
aad
aas
popa
fimull
daa
test
mov
xor
int
arpl
arpl
int
in
xchg
mov
sbb
iret
push
mov
outsl
int3
leave
mov
mov
add
pop
repnz
add
sub
cmp
fwait
sbb
repz
cmp
jle
pop
pop
pop
adc
lea
and
or
aaa
mov
mov
xor
mov
test
jmp
aad
inc
mov
packuswb
into
add
aad
rcrl
jo
stc
adc
or
jne
mov
jne
gs
pop
xchg
pusha
jg
outsl
adc
fldenv
adc
pop
sub
jge
repz
mov
adc
jne
pop
lret
pop
push
pop
lea
xchg
xorl
push
lods
push
pop
int3
pop
xchg
out
push
sti
mov
int
xor
sub
adc
xchg
cld
ljmp
repz
ds
mov
xor
jle
out
idivl
mov
fldt
nop
jmp
daa
jg
mov
sub
fisttpll
dec
sbb
xor
pushl
out
pop
cwtl
mov
divps
push
adc
mov
sub
cmpsb
mov
sysret
data16
jl
test
dec
sarb
cmc
mov
inc
addb
mov
mov
aad
sub
addr16
ja
cmp
adc
push
ljmp
lahf
mov
mov
mov
adc
out
xor
out
sub
call
push
pop
pop
es
insl
add
jmp
fsubl
and
inc
mov
mov
fwait
stos
jl
lea
or
pop
dec
dec
pop
mov
push
xchg
fwait
mov
pop
out
pop
adc
jge
push
xchg
jge
and
imul
mov
xor
push
mov
scas
push
sti
cmc
push
sbb
mov
cmp
push
int
aad
cli
push
dec
adc
sbb
sub
xor
adc
je
cmp
rcll
jnp
cmc
push
adc
addr16
out
lods
int3
inc
push
idivl
push
cmp
mov
mov
aas
pop
mov
jecxz
inc
test
push
mov
adc
adc
int3
cli
adc
inc
add
cmc
jno
mov
iret
xchg
iret
popf
fnstcw
xchg
sub
mov
or
cli
mov
cmp
out
clc
loop
pop
testl
inc
pusha
push
xchg
push
push
stos
push
hlt
push
pop
jbe
fimull
std
outsl
pop
cmp
jbe
int3
or
sub
nop
xchg
insb
int
das
adc
jmp
xor
jl
mov
mov
mov
adc
test
js
dec
outsl
ret
add
adc
mov
cmp
sbb
mov
call
iret
add
cmpsl
pushf
cmpsl
mov
sti
mov
jbe
pop
inc
insb
stc
sbb
int3
in
por
dec
lock
push
in
int3
push
movsl
cli
add
pusha
sbb
mov
mov
aam
cmc
into
mov
push
and
adc
push
sub
addr16
out
je,pn
adc
lods
lods
push
add
inc
pop
int3
sbb
inc
movsl
in
jb
call
pushf
arpl
inc
jbe
sub
inc
xor
push
or
ss
or
xchg
cltd
inc
ret
mov
in
in
adc
jo
dec
repz
sahf
mov
std
ljmp
movsb
test
inc
cld
sub
ja
pop
jle
neg
rolb
insb
test
int
call
loope
push
inc
jmp
inc
shrb
mov
or
in
cmp
lock
push
cs
mov
loop
lret
aas
popf
jecxz
dec
pop
lahf
nop
inc
cltd
pop
js
mov
cmpb
fmul
inc
shl
fs
mov
and
daa
adc
sbb
dec
xchg
jnp
adc
insl
data16
sub
lahf
sbb
movd
jecxz
mov
mov
mov
cs
pop
inc
or
mov
mov
mov
mov
je
push
lret
xlat
dec
rcr
out
mov
int3
in
adc
pop
push
xlat
das
lahf
jmp
lods
cmp
jge
push
and
inc
xchg
dec
out
scas
scas
mov
dec
shll
lahf
adc
jge
sti
adc
pop
xchg
xchg
or
dec
mov
mov
call
rorb
mov
imul
pushf
xlat
mov
test
pop
jge
jo
adc
mov
ret
imul
mov
jo
cwtl
jp
aam
lahf
fcoms
pushf
cld
and
mov
sbb
jge
cwtl
xchg
repnz
dec
leave
push
cmc
leave
jbe
rep
or
or
and
inc
add
call
ret
loop
arpl
xor
adc
pop
addr16
test
push
add
and
add
cmp
push
enter
adc
push
es
push
lods
inc
or
test
int
mov
cltd
pop
daa
ljmp
pop
push
xchg
insb
cmpsl
push
aas
push
xor
adc
pop
stos
out
lret
pop
inc
rol
sub
jmp
sub
or
mov
cs
inc
lods
mov
int3
push
stc
push
mov
sbb
arpl
adc
mov
clc
lock
aam
lcall
mov
cltd
jns
sbb
mov
and
fidivrl
adcb
bound
dec
mov
lods
sbb
add
push
and
pop
addb
lock
push
int
jno
xor
in
jle
movsl
and
mov
cmp
imul
add
movsl
test
or
aas
iret
movsb
cmp
mov
rol
mov
sbb
fsubrl
cli
push
xor
stc
notb
sti
int
push
ljmp
lock
test
push
test
push
xor
mov
movsl
iret
pop
xchg
mov
into
and
jmp
icebp
sbb
pushf
adc
sbb
add
jp
mov
roll
inc
popf
push
mov
add
adc
scas
jmp
stos
xor
iret
inc
stos
inc
sbb
cwtl
fdivrp
or
jmp
xor
in
pop
loope
xchg
mov
iret
in
fdivrp
add
adc
dec
inc
out
cld
xchg
and
out
je
pop
push
adc
jl
sbb
cmc
pop
jb
rcrl
daa
shll
pop
pop
ljmp
cmp
jp
adc
push
pop
sub
lods
fisubs
loopne
or
test
mov
in
repz
mov
aad
lds
adc
add
mov
daa
in
xchg
loopne
mov
adc
sub
out
bound
int3
or
test
inc
out
jnp
adc
dec
push
xchg
mov
loopne
xchg
push
outsl
sub
dec
test
mov
pop
lods
pop
dec
cwtl
hlt
xor
loopne
pop
add
mov
mov
and
xor
sbb
push
push
sub
inc
inc
bound
lret
outsl
roll
xchg
icebp
inc
out
xchg
insb
out
fbld
jl
push
aaa
roll
xlat
push
jmp
xchg
pop
imul
fnstsw
adc
jmp
movsl
cltd
xchg
jae
and
ja
jmp
push
daa
rcrb
int3
sub
lret
or
loope
sbb
inc
fbstp
clc
ret
mov
dec
shrb
into
testl
mov
jae
push
jg
adc
push
sbb
or
in
mov
clc
imul
imul
mov
dec
imul
xchg
iret
or
adc
push
mov
cmp
add
pusha
dec
insl
lea
icebp
or
dec
in
loope
notl
mov
ja
dec
fs
pop
xchg
xor
and
mov
stos
jne
and
addr16
jg
sbb
jb
mov
xchg
pop
fpatan
and
cld
pop
push
pop
imul
aam
or
out
mov
sbb
call
pop
rolb
push
cmp
scas
dec
jno
mov
cmp
das
mov
and
dec
jmp
inc
int3
or
cltd
dec
test
repz
fstps
or
out
pop
je
setns
mov
mov
adc
pop
mov
sub
pop
jno
mov
js
fwait
and
iret
xchg
imul
fwait
imul
ret
pop
test
jle
adc
xchg
out
fistpl
cmp
into
xor
dec
ret
cmpl
out
fisttps
pop
enter
sbb
jmp
push
std
adc
mov
inc
mov
lods
mov
jecxz
pop
popa
stos
addr16
fildl
jg
sub
sbbl
mov
and
es
cmp
adc
cli
inc
mov
fsubrs
xor
divb
les
mov
cmc
mov
out
outsb
sbb
push
fadd
pushf
andl
xchg
fucom
mov
bound
push
sbb
mov
stos
push
mov
repz
int
sub
inc
pop
fsts
mov
out
inc
adc
pop
jnp
and
jmp
mov
jecxz
in
and
scas
loop
scas
outsl
push
cld
lods
cmp
notb
roll
out
mov
xlat
xchg
push
mov
sub
test
sub
lahf
inc
mov
sar
dec
push
arpl
cmp
inc
mov
xchg
sbb
gs
repz
add
mull
stos
cld
add
inc
shll
xchg
add
mov
jnp
xchg
jno
xor
out
sub
mov
xor
xchg
in
jo
rcll
mov
outsb
jmp
pop
lahf
adc
cmp
adc
mov
pop
push
push
lret
inc
sbb
negl
adc
subl
mov
fs
int3
out
adc
cltd
adcb
xor
push
fistl
or
ljmp
pop
lret
jbe
xchg
mov
mov
stos
sahf
mov
jmp
xor
into
cmpsb
aad
mov
or
out
jl
push
into
xchg
dec
mov
jb
lret
rcrl
fbld
out
mov
mov
mov
int3
cmp
xchg
sub
pop
xchg
fists
add
aas
inc
xchg
aad
decb
xor
or
dec
xlat
fs
push
movsl
sbb
dec
adc
in
pop
fwait
dec
pop
and
push
fcmovb
lahf
mov
mov
ja
shrb
adcb
ret
inc
or
mov
and
inc
sbb
cmp
adc
adc
mov
js
adc
call
bnd
cmp
aas
sbb
in
xchg
addl
sbb
add
lds
xlat
cwtl
sub
shll
jo
add
xor
and
fildll
cmp
push
push
xor
mov
xchg
jne
sbb
andl
mov
push
jg
jbe
adc
mov
in
adc
sbb
andl
mov
mov
sbb
dec
mov
and
lret
pop
fbld
faddl
std
out
mov
dec
xchg
xchg
sbb
pop
arpl
jns
pop
lock
ds
mov
push
jle
stos
rorb
scas
imul
add
inc
xchg
and
popa
mov
loope
int3
aam
aad
gs
or
or
jg
scas
sahf
fimuls
adc
scas
scas
cmp
leave
test
imul
pop
lock
subl
jmp
push
jg
daa
sub
cmp
push
int
sbb
mov
adc
rclb
add
add
out
inc
and
cmp
test
pop
inc
mov
movsb
mov
xchg
jge
cmp
in
lea
addr16
or
rorb
insl
iret
push
or
iret
aam
cs
ja
jmp
popa
sbb
jb
lods
pop
jge
inc
dec
fldl
data16
push
sbb
lock
test
lret
das
insl
xlat
enter
in
into
push
mov
addr16
push
dec
sbb
outsl
std
into
push
add
lock
adc
cmp
outsl
jae
or
jge
loopne
xlat
out
cld
hlt
sbb
mov
repz
adc
cli
sbb
out
or
shlb
pop
pop
lret
mov
push
xchg
aas
int3
mov
lcall
lret
pop
xchg
pop
sti
pop
xchg
hlt
and
inc
addr16
mov
push
enter
repz
ss
pop
mov
leave
sahf
jmp
int
out
iret
jne
mov
fs
sub
arpl
adc
mov
test
mov
sbb
ljmp
mov
xor
or
dec
mov
xchg
ficoms
push
rcl
mov
or
push
xchg
xor
jmp
push
add
andb
jmp
jns
pop
mov
xchg
push
lock
sub
sarl
gs
nop
adc
adc
nop
fildl
cmp
xlat
dec
and
out
pop
xchg
mov
or
hlt
lock
jle
pop
inc
jnp
outsb
or
adc
cmp
adc
inc
mov
js
aad
add
inc
add
mov
adc
mov
in
jle
sbb
push
into
sub
idivb
jb
pop
sbb
bound
ja
nop
mov
fwait
mov
je
cmp
push
pop
and
or
lcall
sbb
dec
jle
test
lahf
sbb
jge
stos
pusha
clc
loop
int
popf
and
xchg
mov
sti
je
je
arpl
adc
call
movsl
enter
adc
stos
inc
fldt
lea
sub
call
inc
aam
mov
test
sbb
lea
aaa
cmp
add
out
or
inc
call
movsb
adc
jae
lret
jmp
cmc
sub
mov
out
push
popf
gs
pop
cmp
daa
bound
sti
xor
pcmpeqd
daa
cli
pop
imul
inc
adc
fdivrl
xchg
mov
out
out
in
filds
fwait
push
jmp
inc
add
fildll
xchg
pop
ds
ja
es
decb
jbe
repnz
push
mov
mov
test
fsubrp
sbb
mov
dec
mov
pushf
popa
push
lret
mov
scas
movsl
mov
das
call
mov
pop
or
mov
xchg
enter
int3
cli
cmp
icebp
add
xor
push
shll
gs
mov
outsb
or
add
adc
mov
fs
iret
pushf
mov
aaa
push
out
pop
pop
test
jg
pop
pushf
loopne
ret
sub
fld
cmc
shr
int
mov
jne
sahf
sbb
adc
ds
fistpl
popf
out
cmp
cmp
push
je
xlat
or
sub
rorl
cltd
mov
insb
cmp
sub
or
cmp
lretw
in
dec
in
xchg
cwtl
xor
fcmovbe
and
jns
ret
push
jg
imul
int
ja
xchg
arpl
test
cmpsb
pop
sbb
aaa
dec
sub
xchg
adc
bound
leave
data16
cmp
adc
out
push
nop
adc
sbb
fisubrs
add
dec
jno
mov
inc
loopne
pop
sub
mov
push
mov
std
fstpt
popw
shlb
or
outsb
sahf
sbb
jmp
adc
nop
testl
call
in
adc
js
sti
mov
test
add
mov
jne
mov
pushf
xor
mov
and
gs
push
pop
pop
and
inc
mov
ror
jbe
mov
hlt
enter
test
jge
movsl
or
loopne
lahf
test
sbb
inc
jle
pop
jg
outsb
cmp
data16
into
adc
xchg
movsl
cmp
sbb
mov
and
xor
shll
mov
cs
stc
mov
jo
push
in
lcall
repz
dec
pop
sbb
stc
sbb
in
mov
adc
int
dec
mov
xlat
inc
sti
in
push
in
jnp
iret
and
pop
xchg
js
mov
pop
sub
gs
xchg
xor
mov
es
int3
mov
js
das
js
rorb
in
xchg
pop
add
ficompl
adc
pop
inc
fldt
push
sub
scas
dec
out
js
adc
sbb
shlb
nop
or
cmpb
aad
adc
pop
sub
add
xor
jb
mov
cs
inc
loopne
lret
addr16
inc
adc
in
dec
xchg
icebp
outsb
int
insl
icebp
stc
imul
out
add
and
lret
insb
loope
cmpsb
push
cmp
mov
leave
lds
data16
jo
ds
pop
jns
pop
jae
jle
mov
or
xchg
pop
adc
lock
out
xchg
std
enter
lods
and
lcall
xor
push
mov
out
jmp
cmp
stos
add
out
jge
rcl
sub
leave
iret
mov
ret
in
popa
cmp
jne
lds
scas
int
mov
cmp
not
out
dec
xlat
adc
pop
test
addr16
rclb
enter
sbb
push
mov
cmp
dec
gs
push
inc
popl
sbb
mov
pop
jo
mov
int3
xor
pop
adc
clc
adc
fwait
imul
mov
push
lahf
add
mov
clc
cmp
xor
pop
mov
movl
adc
lret
adc
dec
xor
int
rcrb
stos
dec
add
jo
sub
mov
dec
mov
mov
faddl
push
outsb
fwait
mov
cmp
jne
add
push
aas
imul
je
and
and
sahf
movhps
ret
push
subb
add
inc
cmp
out
sub
pop
pop
call
iret
pop
lods
jg
out
lcall
inc
inc
test
data16
cmpsl
jmp
or
addr16
clc
out
jnp
test
pusha
scas
mov
repz
fisubrl
jg
adc
adc
push
add
and
sub
into
imul
imul
pop
lock
adc
lret
pop
sub
dec
jo
into
jns
daa
xchg
dec
or
pop
leave
std
sbb
push
dec
xchg
mov
adc
data16
out
push
push
mov
push
sbb
daa
js
mov
cmp
cmpsl
lods
rolb
push
xchg
mov
push
stos
notl
sbb
pop
sarl
xchg
mov
mov
xchg
push
rclb
inc
test
mov
xchg
into
jl
xlat
xchg
jle
insl
addr16
std
in
add
add
cmp
jmp
cmp
mov
sbb
jle
and
mov
sbb
mov
faddl
andb
cmp
adc
jae
inc
sahf
xor
cmc
jp
scas
push
sbb
cmp
dec
or
mov
jae
jmp
add
popf
adc
pop
int3
jbe
iret
jns
dec
imul
call
pusha
sub
insl
mov
mov
into
test
adc
mov
adc
pop
push
aas
sub
add
std
cmpsl
mov
dec
aam
mov
lret
xor
ljmp
xchg
adc
popf
bound
roll
or
pop
iret
push
adc
mov
addr16
xchg
xchg
and
mov
sbb
lds
addr16
pop
mov
cmp
ja
push
loopne
jbe
sub
or
and
insb
mov
xlat
cmc
pop
cltd
xor
daa
sub
jle
add
jge
sbb
fcmovne
push
adc
jmp
mov
dec
sbb
jb
push
loopne
movsb
loop
outsb
push
enter
sbb
pop
aad
into
das
pop
daa
sahf
dec
sbb
shll
cmc
mov
clc
lds
lcall
shrl
jbe
dec
jns
cmp
int3
or
fdivl
fiadds
add
into
popf
insb
ret
sbb
in
lea
fisubrs
stos
pop
jo
inc
pop
sub
in
mov
fcomi
stos
xchg
add
std
fisubl
jecxz
mov
fxsave
sub
lret
out
xchg
xchg
cmp
shl
dec
pop
push
jno
les
adc
nop
pop
dec
adc
xchg
ja
or
or
in
iret
push
jbe
add
pop
in
inc
cmp
ss
or
add
repz
push
adc
sub
and
and
mov
sti
adc
add
out
sbb
aas
js
ds
popf
inc
jns
and
xchg
outsb
shl
ds
in
aaa
and
inc
xchg
mov
iret
xlat
dec
pop
pop
outsw
lds
cmp
sbb
cmp
scas
fwait
mov
test
sti
mov
and
fcoms
ss
mov
xchg
mov
pop
xchg
sbbb
xor
out
iret
inc
lods
adc
sbb
ret
push
shlb
fisubrl
jb
lcall
or
xor
xchg
lock
pop
sbb
fwait
and
add
outsb
int3
rolb
std
iret
int
dec
jb
pop
push
jp
iret
jo
sbb
sbb
scas
inc
adc
out
pop
add
sbb
push
jbe
sub
test
adc
mov
test
insb
push
cmp
stc
loope
mov
sbb
push
das
pop
adc
mov
cs
mov
adc
jmp
sbb
int3
cmpsl
mov
cmp
mov
cmp
stc
sub
push
ljmp
cmp
lods
mov
dec
inc
fildl
push
adc
div
push
out
std
sbb
loop
loope
adc
notb
push
int3
mov
test
loope
call
cld
daa
sti
orl
test
push
sbb
mov
jno
xchg
adc
pop
dec
aad
bound
loop
sbb
lds
cs
aam
loop
sub
lea
lret
orb
xchg
push
roll
jb
in
mov
push
imul
cmp
lods
xor
jmp
iret
xchg
push
cmpb
jo
push
shll
lahf
addr16
mov
push
loop
shll
in
outsl
sbb
stos
or
xor
sub
dec
sarl
mov
sahf
aad
cmp
scas
push
scas
xchg
inc
xor
lcall
addr16
and
lock
and
cmp
fistl
call
sbb
mov
pop
xchg
pusha
pop
js
movsb
daa
lock
test
fldt
sbb
in
testl
or
mov
cwtl
sbb
push
pop
sbb
pop
sti
mov
into
gs
fs
lret
add
ljmp
sbb
hlt
shr
jmp
in
xchg
jae
inc
cmp
lock
add
xor
xchg
pushf
loop
cmp
dec
jge
das
jno
xchg
inc
notb
ljmp
sbb
xchg
int
or
hlt
mov
fcoml
mov
jne
and
cwtl
pop
lret
pop
jle
divb
int
lret
inc
xor
inc
ret
xor
das
pop
adc
sub
cmp
xchg
mov
jne
sub
js
adc
sti
cld
adc
int
cmp
or
mov
stc
cs
in
pop
push
mov
int
testl
data16
jecxz
enter
orb
push
sbb
sbb
lahf
subps
jp
bound
ss
pop
inc
mov
fmul
adc
sahf
mulb
sbb
sub
xchg
stos
popa
call
mov
roll
or
fiadds
dec
jecxz
arpl
push
pop
dec
push
adcl
enterw
std
dec
pop
popa
inc
fst
push
out
xchg
mov
xor
xchg
adc
push
xchg
and
and
sub
test
cltd
iret
adc
xor
pop
sti
out
ja
hlt
andl
mov
push
sub
imul
push
clc
and
loope
adcl
aam
fnsave
test
xor
pop
xchg
xchg
sub
scas
fildll
icebp
std
or
inc
fistpl
dec
cmp
push
mov
push
sub
gs
stc
jl
mov
out
cli
data16
push
sbb
sub
rclb
sbb
jae
or
xchg
pop
or
fwait
mov
pop
sub
add
popa
inc
mov
pop
adc
mov
jle
setg
dec
push
sbb
dec
lods
push
mov
cld
mov
pop
int
push
imul
ds
loopne
mov
jo
mov
dec
shl
cmp
stc
pop
xlat
inc
std
jge
and
movsb
adc
fsubrs
add
frndint
push
xchg
mov
int
jge
dec
inc
xor
sbb
pop
mov
push
or
rorb
add
lds
mov
push
jecxz
cmp
jns
iret
mov
xchg
arpl
es
je
push
in
sbb
rorl
addr16
cwtl
faddl
mov
mov
insb
xor
cmp
mov
adc
stc
sub
push
adc
fwait
aam
fbstp
cmp
cmpsb
sbb
and
sbb
xchg
les
iret
jnp
out
ret
mov
js
pushf
fs
in
lods
mul
lods
inc
xchg
xchg
out
adc
cs
movsb
insb
mov
sub
xchg
adc
call
sbb
inc
sbb
mov
bound
icebp
pop
js
cld
scas
lds
dec
ja
out
dec
mov
mov
pop
dec
in
ja
xor
mov
scas
jmp
add
ret
sbb
add
push
xchg
pop
fsubl
xor
pop
sbb
cwtl
xor
in
and
jmp
fsubrp
js
or
sbb
test
cmpsb
pop
sbb
clc
out
repnz
push
dec
mov
ret
or
lahf
fsubr
loopne
stos
mov
or
shl
loopne
pop
notl
pop
mov
jge
mov
iret
stc
inc
mov
or
cmp
fdiv
sbb
jnp
stos
jl
push
and
nop
adc
daa
push
jle
push
out
xchg
mov
jo
inc
divl
repz
xchg
js
jmp
adc
sbb
push
std
dec
or
insl
inc
addr16
sbb
sub
xchg
ret
jne
stos
mov
ja
addl
or
lret
cs
adc
dec
and
xor
xor
push
and
pop
adc
ja
dec
jl
adc
inc
cs
imul
int3
hlt
paddusw
gs
jns
clc
pop
sub
mov
dec
rorb
cmpsl
fnstsw
sarb
js
push
in
cmp
and
pop
inc
inc
in
xchg
add
iret
addr16
xchg
aas
inc
xor
clc
faddl
adc
and
pop
pop
push
pop
pop
out
adc
cmp
jp
aaa
add
xchg
mov
movsb
ljmp
jnp
insb
xor
pop
andl
int3
add
fwait
mov
imul
sahf
push
or
mov
sbb
fcomps
ret
push
testl
testl
iret
lock
loope
shlb
adc
iret
adc
pop
inc
scas
stc
int3
push
jp
add
sbb
and
in
clc
jmp
jge
cli
bsr
ret
aaa
nop
xor
arpl
push
into
jnp
jl
add
sbb
popf
add
push
push
out
sahf
movsb
jmp
dec
ljmp
ja
mov
nop
mov
add
xor
mov
loopne
pop
mull
dec
mov
hlt
fadds
and
insl
mov
iret
push
scas
dec
jmp
inc
lret
call
dec
and
fists
and
int
insb
push
pop
mov
mov
dec
out
pop
or
into
fsubrs
nop
insb
dec
aas
es
mov
or
test
and
fidivs
xchg
push
repnz
mov
fdivl
int3
fists
leave
loop,pn
push
test
pop
sub
xor
inc
xchg
gs
push
aad
dec
in
push
xor
sbb
inc
addr16
xchg
add
int
insl
int
add
adc
inc
push
xchg
sbb
mov
adc
mov
into
pop
lock
imul
out
jnp
inc
sti
out
cltd
sub
iret
jl
or
pop
aad
sbb
bnd
xchg
adc
into
xor
and
sbb
mov
dec
push
push
into
mov
cmp
dec
xorb
sbbl
or
add
xchg
jnp
lret
pusha
das
in
sbb
div
test
adc
lahf
icebp
mov
shrl
xchg
sub
add
gs
mov
bound
ja
mov
jle
adc
daa
fists
insl
repz
mov
inc
push
jae
pop
mov
pop
jmp
adc
xor
xchg
popa
lods
mov
mov
out
mov
and
test
mov
enter
xchg
xor
add
scas
jnp
loopne
dec
rcll
inc
enter
ljmp
pop
movsb
and
xor
mov
into
adc
jae
arpl
adc
dec
jb
test
push
xor
das
insb
je
das
mov
imul
gs
mov
sbbl
mov
les
xchg
ljmp
adc
out
adcl
sbb
aam
popf
gs
popa
sbb
loopne
sbb
xor
sbb
aas
daa
jg
scas
std
xchg
ljmp
aam
cmp
cmp
pop
cmc
xor
in
jl
add
cmp
popa
lret
iret
sub
out
aad
cmc
inc
xor
xor
js
or
addr16
test
jne
iret
push
push
mov
push
inc
addl
sbb
mov
inc
xor
lret
mov
pop
dec
xchg
fidivs
ret
sub
jno
fwait
je
pop
lret
xchg
cmc
jmp
gs
into
nop
outsb
pusha
lcall
inc
dec
in
arpl
sbb
pop
adc
loopne
stos
or
lds
sti
movsb
iret
imul
shrl
jmp
rcrb
sbb
fbld
jmp
insb
xchg
add
iret
lds
pop
xor
cmp
push
aas
test
rolb
adc
fstpl
test
xlat
sub
inc
adc
mov
ja
jno
xor
rol
sub
fisubrl
adc
sbb
mov
in
dec
jg
int3
test
mov
daa
add
pop
in
adc
ds
push
adc
or
push
iret
sbb
lods
mov
cwtl
add
dec
imul
mov
data16
sbb
lret
daa
cmp
inc
sbb
sbb
daa
notl
das
mov
sbbl
sbb
add
mov
fwait
mov
fsts
dec
add
das
adc
or
xor
aam
lahf
push
adc
adc
or
dec
int3
jle
in
shll
ljmp
sbb
pushl
insl
mov
and
or
sbb
ljmp
adc
mov
je
divb
mov
sbb
cmpl
out
out
sbb
std
xchg
cwtl
mov
push
lahf
push
cmpsb
inc
xchg
in
push
lret
jns
pop
stos
loop
sbb
pop
mov
adc
push
aam
cmp
sbb
call
dec
jmp
sbbl
lret
mov
into
cli
xchg
cwtl
xor
lahf
pop
icebp
or
mov
jae
cld
mov
xor
fcomps
sbb
add
gs
mov
mov
sub
mov
jp
jbe
stos
and
sub
dec
xchg
into
loopne
lock
and
in
jb
leave
mov
jecxz
daa
in
mov
hlt
adc
xlat
negb
mov
cmpsb
inc
xchg
mov
and
xchg
sub
adc
je
adc
je
in
into
sub
icebp
es
sbb
gs
cmpsb
repz
xchg
icebp
xor
inc
pushl
mov
xchg
xorb
cld
imul
cmp
sbb
or
dec
push
pop
inc
fmulp
fwait
adcb
jne
js
aas
andb
loop
hlt
aad
scas
xlat
mov
fwait
fs
sbb
push
stc
jmp
cmp
cmp
mov
jecxz
jg
add
adc
adc
call
fdivrl
sub
pop
sbb
int
pop
mov
cmc
loope
lahf
jecxz
push
dec
insb
or
xchg
out
sub
bnd
pop
xchg
sub
mov
iret
sahf
pop
out
dec
gs
in
movl
notb
hlt
pop
push
dec
push
mov
xchg
adc
push
jp
pop
dec
pop
lret
scas
divb
xchg
popa
push
out
xor
push
imul
sbb
mov
movsb
cmp
adc
push
subl
pusha
sbb
fnstenv
jns
cmp
imul
push
jb
or
xor
pop
ret
jnp
std
mov
in
fistl
mov
pop
hlt
in
xor
sbb
cmp
outsl
xor
mov
push
stos
jg
movsb
jp
lret
inc
push
xlat
and
cwtl
jge
inc
std
dec
jae
pop
add
scas
out
mov
fs
in
xchg
dec
sbb
jae
jae
adc
xor
repz
dec
inc
pop
aaa
loope
xchg
pop
sbb
push
adc
sub
out
push
jns
sub
test
pop
addr16
xchg
dec
pop
pop
pop
rcll
dec
push
xor
xor
outsb
into
add
xchg
mov
loope
add
stos
rcrb
adc
xchg
jge
jno
mov
and
mov
jnp
and
mov
xor
xor
cmp
push
call
mov
adc
fwait
dec
xor
xchg
cmpsl
mov
mov
or
xchg
lcall
inc
fcmovu
or
adc
lahf
mov
mov
dec
sahf
cmpsl
mov
pop
mov
add
lods
hlt
dec
sbb
cmp
notl
push
or
stos
sbb
cmp
and
cli
aad
gs
mov
pop
imul
mov
iret
pop
int
sbb
fcoms
popf
stos
cmp
mov
cmc
leave
push
push
jns
in
pop
ror
sub
pop
test
call
dec
out
fsubrp
mov
ror
dec
mov
gs
push
ds
sbb
dec
cmpsb
repz
outsb
adcl
add
inc
outsb
rcrb
std
int
lods
inc
imul
mov
add
lods
cmp
xor
js
mov
pop
cli
data16
cmpsb
xor
add
js
out
daa
xor
xor
and
cmp
jecxz
fimuls
dec
or
out
movsb
adc
addr16
out
push
lret
loope
sti
adc
and
pop
push
cld
jb
int
push
fstpt
or
adc
cmp
adc
shr
mov
and
ljmp
dec
lcall
loopew
lahf
pop
mov
mov
fbstp
je
xorl
and
jae
sub
mov
imul
push
mov
lahf
call
sub
loope
sbb
popf
inc
les
jecxz
jo
and
sbb
and
cmc
cmp
add
jle
cmpsl
fstpl
jne
or
pop
dec
shrb
rclb
out
cmp
inc
mov
into
popa
lahf
imul
sti
sti
add
fisubrl
add
loope
add
rorl
mov
outsl
adc
pusha
repnz
adc
je
hlt
lods
test
aas
imul
lret
sub
mov
xchg
pop
in
aad
mov
adc
cmp
mov
arpl
jae
mov
dec
pusha
movsl
or
inc
ja
in
int3
mov
or
jb
cmpb
sbb
mov
gs
pop
jp
pop
adc
das
dec
sbb
aas
in
repnz
imul
add
mov
scas
adc
inc
inc
ljmp
fstpt
sti
cld
adc
jp
lods
mov
add
dec
int3
loope
add
cmp
sub
ja
cmpsb
outsb
xor
int
add
mov
jns
clc
mov
mov
and
int
fistpl
and
aas
sbb
hlt
cmp
mov
dec
std
cmpsl
sub
movsl
nop
imul
adc
pop
sbb
pop
std
pop
jl
rcll
rcrb
je
or
movsl
imul
iret
test
jae
mov
add
mov
push
jecxz
subl
fwait
cli
adc
push
pop
mov
xchg
xor
push
fs
pop
lock
fwait
or
jnp
daa
popa
cmp
js
rcl
mov
loopne
aaa
push
push
sub
or
insb
shr
push
add
iret
pop
pusha
clc
lock
cmp
cmpsb
loopne
xchg
push
rclb
sbb
add
icebp
std
dec
addr16
fcomip
cmp
push
lahf
inc
std
mov
test
pop
sub
mov
lret
cmpsl
cwtl
loopne
or
pop
into
mov
xor
dec
mov
sbb
xchg
jns
pushf
push
imul
sub
mov
flds
stos
mov
pop
pop
mov
inc
call
int3
popa
arpl
lret
dec
sbb
ss
test
iret
push
rcrb
leave
fwait
adc
and
lds
inc
iret
imul
push
push
mov
popf
shl
mov
mov
inc
jle
dec
adc
mov
lods
push
cmpsb
int
sub
add
push
mov
inc
fidivrl
les
std
dec
jae
repz
push
cmp
jg
mov
sub
lods
rcr
out
push
lds
xchg
cmp
in
jnp
into
sbb
adc
mov
stc
jecxz
xchg
jle
add
cli
jge
mov
jb
scas
rorl
ficompl
add
adc
fs
out
pop
hlt
xchg
imul
add
int
xchg
xor
xlat
aad
clc
stc
pop
or
lahf
hlt
movsb
leave
pushf
push
sub
pop
lahf
and
test
ljmp
xchg
mov
push
pop
scas
ficompl
scas
addr16
add
daa
push
adc
jnp
inc
pop
pop
ja
pop
nop
sbb
jbe
mov
lods
jno
add
cbtw
fnstsw
cmp
out
test
adc
sub
mov
dec
dec
push
or
pop
aam
aad
cmp
adc
push
push
fs
test
xor
mov
xchg
push
adc
adc
inc
inc
mov
in
pop
xor
fisubrs
pop
out
xor
xor
jmp
lcall
inc
out
insb
sbbl
lds
pop
clc
popa
mov
adc
or
push
lods
sarl
aad
out
addr16
xlat
movsl
mov
sbb
push
xchg
pusha
and
inc
hlt
adc
lcall
shl
or
push
inc
and
popf
fistl
inc
adc
out
or
out
inc
dec
sbb
rclb
into
insb
imul
mov
out
inc
inc
and
xor
sbb
insb
dec
movsl
in
adc
adc
pop
dec
leave
jl
rorb
dec
or
jnp
sbb
dec
adcb
sbb
mov
xor
iret
fdivr
pop
and
sbb
out
nop
lock
arpl
in
push
ret
negb
loop
sti
repnz
xchg
inc
ficoml
shrl
in
mov
test
popa
call
into
jecxz
or
jb
adc
pop
int
lret
filds
repz
push
ret
ja
and
stos
mov
dec
subl
popf
sbb
add
xchg
lret
inc
test
mov
int
dec
negw
xlat
adc
mov
inc
std
stos
ljmp
inc
sbb
int
xchg
hlt
aaa
push
outsb
into
and
in
xor
dec
adc
adc
sub
das
out
mov
call
imul
repnz
dec
or
pop
repz
hlt
mov
mov
sbb
aam
je
push
and
int3
xor
repnz
mov
xor
lock
mov
jecxz
sti
mov
ja
sbb
inc
int3
lcall
ret
dec
jle
sub
int3
or
jb
adc
dec
cld
adc
loop
jbe
mov
scas
mov
mov
add
inc
and
jmp
mov
shll
pushw
add
or
xor
cmpsb
fstpl
add
mov
fs
lods
nop
adc
incb
aad
cli
mov
das
dec
add
mov
xor
test
incb
arpl
into
dec
fists
pop
mov
sbb
jmp
std
stc
pop
out
jp
repz
into
leave
dec
dec
xor
insl
jb
test
push
insb
cwtd
inc
pop
cmpsl
mov
mov
push
loope
out
adc
cld
lret
jle
dec
out
sbb
xlat
jmp
pop
pop
mov
pop
sbb
fldenv
les
fildll
dec
sti
stc
jecxz
gs
pop
adc
leave
outsb
int3
jg
pusha
inc
test
cltd
push
out
mov
sar
xchg
sbb
rorw
test
sbb
inc
mov
movsl
cmp
jae
aaa
daa
popf
pop
cmpsb
xchg
xor
movsl
mov
cmp
add
jne
adc
mov
dec
dec
call
pushf
xchg
xchg
flds
stos
adc
stos
sbb
and
push
clc
sbb
aad
mov
xchg
inc
icebp
and
leave
idivb
and
xchg
or
repnz
into
sub
fs
pop
pop
subb
aas
inc
xorl
ret
sub
or
daa
pop
data16
mov
push
push
fwait
mov
dec
fdiv
lods
rclb
jb
jbe
lods
sbb
cltd
cld
das
repnz
add
data16
fisttpl
rolb
imull
mov
sbb
shlb
push
outsb
lahf
hlt
pop
fisttpl
pop
xchg
adc
ljmp
int
mov
lea
loopne
leave
adcl
out
pop
push
mov
clc
sbb
ror
sub
push
gs
fildll
sub
dec
mov
pop
fsubp
sbb
inc
bound
repnz
sbb
outsl
js
jecxz
ret
test
out
enter
outsb
sbb
xor
push
push
dec
pop
sahf
fcoms
cld
add
nop
push
dec
xchg
popa
nop
mov
lods
sbb
sbb
sub
cmpsb
cmp
xor
pop
mov
jns
and
lods
sahf
jge
sub
pop
rcrl
scas
mov
das
jmp
pop
xchg
cwtl
push
int3
mov
fsub
jecxz
test
jmp
cmp
in
mov
mov
adc
xchg
and
out
andb
xor
ret
in
xor
int
mov
sub
pop
push
add
loopne
mov
pushf
push
sub
fmuls
jno
mov
lds
jns
aaa
mov
and
mov
jb
je
int
hlt
xor
jno
cld
mov
mov
movsb
xor
stos
jb
cmp
enter
je
loopne
ss
into
pop
jno
out
mov
inc
ss
dec
xor
adc
jae
ljmp
ret
add
ds
mov
das
test
jmp
add
movsb
into
and
jae
mov
mov
mov
popf
adc
gs
dec
mov
ja
cwtl
sbb
es
push
ja
sub
int3
mov
pusha
adc
pushl
inc
mov
cmp
fcoms
cmp
inc
xlat
mov
ret
push
jle
int
addr16
pop
push
jo
divb
dec
andb
jae
pop
scas
push
add
dec
sbb
das
push
xor
fsubrl
jb
fucomip
imul
pop
int
mov
aaa
xchg
or
mov
call
jge
xchg
outsb
xchg
xchg
sub
ret
mov
into
cmp
jbe
sbb
mov
addl
push
movntps
addr16
iret
inc
lods
dec
or
mov
mov
push
loop
js
add
cmc
inc
loopne
loopne
pop
mov
xchg
rclb
jbe
inc
push
or
ret
cmp
lea
and
dec
in
adc
data16
aam
pop
loopne
fcmovne
add
mov
mov
xor
adc
dec
leave
addr16
popf
pushf
maxps
sbb
in
sub
rcll
fs
imul
fs
std
out
data16
xor
cmpsb
int3
gs
repnz
pop
stos
cltd
insl
adc
pop
data16
loop
ljmp
push
cmc
xchg
add
leave
xor
xor
das
out
ja
cmp
lea
imul
std
xor
push
call
int3
jle
jae
addr16
loope
adc
lcall
sub
sub
adc
xchg
roll
es
adc
repnz
inc
sti
addr16
ja
xchg
in
inc
mov
cld
arpl
imul
imul
cmpsb
and
in
fs
fnstenv
adc
shl
inc
push
test
mov
loopne
loope
arpl
or
fldt
shrl
cmp
sahf
mov
inc
push
sub
les
fdivl
add
xchg
xchg
pop
xchg
lret
xchg
adc
mov
testb
push
mul
ja
lahf
xchg
clc
sub
outsb
je
sti
jbe
mov
sbb
lret
xchg
mov
jno
repz
icebp
lret
jno
ss
sbb
jge
dec
mov
shlb
rolb
addb
jmp
mov
push
inc
int
cmpsb
mov
test
out
jecxz
sbb
rcl
adcl
call
jns
aaa
jle
sti
xchg
mov
out
xlat
xor
cmp
pop
xchg
lret
push
int
out
shrl
push
adc
cwtl
or
ljmp
push
push
mov
xor
inc
data16
sbb
iret
xchg
sub
mov
push
pusha
mov
push
xorl
addr16
jmp
push
pop
mov
push
xchg
inc
sbb
mov
pop
lds
je
cmp
dec
mov
push
cmc
mov
in
dec
cmp
push
xor
lods
jnp
inc
and
mov
cmp
sahf
lahf
push
inc
pop
jmp
push
cmpsb
int
data16
ret
fxch
and
add
adc
out
adc
inc
sahf
nop
xor
jp
xchg
faddp
cmp
cld
es
mov
in
cmp
adc
jb
popf
out
shll
adc
movb
push
inc
in
add
or
jge
adc
inc
mov
arpl
xor
mov
add
jp
cmpsb
jge
xchg
jns
adc
inc
lock
in
ds
cmp
jl
mov
jnp
cmp
lods
sbb
ja
adc
gs
xor
or
cs
jecxz
sbb
push
rcll
loopne
adc
adc
inc
xor
daa
adc
sbb
sbb
les
outsl
mov
push
pop
add
add
mov
sahf
push
adc
xor
pop
dec
outsl
sub
jge
mov
hlt
outsb
fsubs
das
xchg
js
inc
pushf
rcrb
xchg
ret
fisubs
daa
sbb
pop
mov
cwtl
decl
scas
std
or
out
cmp
sbb
out
repnz
mov
mov
cmpsl
movsl
push
lock
jae
ja
add
loopne
push
and
and
mov
mov
jo
in
mov
gs
enter
mov
insb
inc
mov
cmc
adc
or
iret
xlat
ja
sub
sbb
dec
sub
clc
push
or
push
int
mov
int
ja
dec
or
in
push
dec
sar
pop
mov
ret
into
aad
mov
inc
mov
jne
sbb
stc
mov
es
data16
or
mov
mov
mov
pop
jmp
int
pop
loopne
sti
mulb
clc
clc
xlat
enter
mov
jle
popf
adc
sbb
test
into
outsb
data16
mov
iretw
jnp
push
mov
push
cmp
push
loop
in
mov
mov
lock
es
aaa
xchg
jmp
popf
out
xchg
adc
daa
xchg
leave
cmp
mov
int
mov
pop
gs
int3
mov
adc
je
xlat
jmp
data16
mov
lds
arpl
fimull
lea
filds
ret
adc
adc
arpl
sbb
mov
data16
test
mov
adc
sbb
mov
or
sti
push
iret
sub
roll
push
shrb
cmp
int3
popl
das
aad
mov
mov
insl
xor
cld
mov
int
or
xor
xchg
push
aaa
push
push
xchg
jnp
call
adc
scas
or
scas
cli
negl
push
dec
push
mov
mov
pop
mov
daa
push
jb
into
sbb
add
cld
out
inc
outsl
aad
dec
xchg
mov
and
movsl
and
jmp
ds
lret
loope
xor
xchg
push
mov
out
mov
pop
insb
clc
mov
aaa
stos
dec
dec
jnp
jns
lcall
push
mov
pop
sbb
je
aad
arpl
in
xchg
std
cmp
loopne
movsl
iret
mov
jno
push
mov
xchg
jno
xchg
pop
pop
outsb
cmp
insb
fstpt
into
pop
xchg
dec
call
inc
outsl
nop
inc
arpl
loopne
fcompl
gs
pop
aas
dec
pop
pop
and
mov
adc
cld
xchg
adc
jne
push
cmp
xchg
ss
sarb
pusha
sbb
icebp
lahf
call
xorb
icebp
mov
dec
cmp
jmp
adc
mov
xchg
mov
movsb
dec
movsb
fsubrs
jge
loope
movsl
icebp
aaa
aam
dec
mov
aas
jae
cld
mov
fisttps
mov
lods
cmp
push
fistl
xor
ljmp
push
aas
mov
fmull
shl
mov
clc
enter
addr16
mov
popf
add
sbb
jno
hlt
inc
xor
mov
push
jmp
das
sbb
arpl
out
mov
push
push
pop
cli
int3
rolb
push
mov
rclb
pusha
test
dec
xchg
rcll
cld
loope
sbb
pop
adc
testl
xchg
int3
and
inc
repnz
mov
iret
addr16
ret
sub
pop
mov
cmc
pop
dec
mov
call
mov
arpl
adc
xor
sub
add
ja
loopne
xchg
gs
pop
bnd
leave
dec
mov
jno
sbb
gs
test
dec
mov
dec
sub
test
shll
adc
mov
dec
js
aaa
in
inc
xchg
jne
adc
aam
sbb
call
sbb
xchg
sbb
pusha
xorb
mov
hlt
add
mov
pop
jnp
dec
stos
inc
cmpsb
sub
jle
sbb
cld
std
mov
pop
push
xor
sbb
jge
lds
lea
pop
dec
addr16
mov
jne
push
and
pop
imul
xor
jnp
movsb
sbb
fstl
pop
jg
mov
push
es
cwtl
es
ret
xchg
movsl
or
inc
mov
jecxz
out
dec
out
sbb
push
inc
shlb
inc
repz
cmp
into
cmpsl
jbe
or
and
mov
dec
enter
test
iret
clc
pop
daa
aas
addr16
lret
push
imul
mov
or
sti
insb
mov
push
mov
jne
test
and
addr16
into
dec
and
cltd
sbb
ficoml
cmp
popf
inc
inc
fidivs
jl
fsubrl
loope
mov
in
inc
pop
pop
xchg
cs
les
popl
arpl
iret
scas
jo
and
xchg
sub
jl
stc
mov
inc
movsl
jp
ret
mov
push
inc
arpl
inc
pushf
test
xchg
sbb
or
cs
sub
mov
sub
into
cs
in
data16
adc
mov
orl
icebp
andb
add
cmc
adc
pop
addl
iret
or
jnp
dec
repz
ja
das
pop
cmc
or
test
outsl
vcvtsd2ss
pop
mov
imul
or
lcall
mov
out
faddl
outsb
sti
ja
fs
xchg
pop
push
dec
scas
add
fistl
mov
xlat
inc
iret
data16
xor
fidivs
popw
jo
pop
pop
ja
hlt
sbb
and
push
ljmp
lock
and
push
inc
ds
dec
adc
adc
mov
mov
sbb
iret
fbstp
sti
jno
adc
cmp
or
mov
in
jb
mov
add
lret
sub
mov
inc
xchg
out
mov
xlat
or
adc
pop
gs
test
pop
inc
jo
inc
addr16
pop
adc
cli
aas
sbb
pop
stos
adc
push
loope
mov
xchg
aas
popa
sub
das
int3
into
and
inc
dec
xor
movsb
add
out
pop
adc
pop
jno
push
data16
out
cltd
jmp
push
cmpsb
push
sbb
je
add
adc
fsts
into
cli
add
lds
lcall
int
les
aas
into
sub
sbb
jb
in
adc
es
adc
call
int
jle
sahf
push
pop
pop
mov
add
mov
fs
jae
xlat
jp
and
xchg
outsl
fsubrs
push
rorl
xor
push
adc
cld
jge
lret
inc
adc
pop
mov
adc
testl
pop
and
pop
jnp
pop
jno
mov
andl
iret
je
scas
push
shl
sub
pslld
into
test
js
in
push
pop
rolb
shl
shrl
push
les
ss
dec
add
stc
lcall
cmp
mov
mov
nop
mov
sub
sub
push
pop
stos
fisubrs
xlat
sbb
sti
xor
sti
stos
imul
repnz
add
das
pop
popw
ror
aam
andb
insb
mov
xchg
lods
fcomps
ret
es
in
mov
adc
int3
mov
jne
sub
fmul
jmp
das
and
insl
rorb
or
mov
mov
jl
push
mov
xchg
je
add
test
and
and
jnp
outsb
add
jle
clc
lock
scas
fwait
or
pop
roll
mov
xor
xchg
xchg
nop
jo
add
jb
or
cmp
add
sbb
pop
rorb
shl
in
push
mov
pop
jg
add
sbb
pusha
iret
fucomp
pop
xchg
jb
or
aas
cmp
add
into
cmpsl
push
jge
sti
sub
pop
sbb
ret
outsl
adc
mov
cmp
sarb
dec
sub
iret
push
scas
out
lods
xchg
lret
sbb
cmp
pop
cmp
sbb
ret
inc
fldcw
pop
stos
push
in
in
addr16
lds
dec
ss
and
icebp
repz
sti
in
pushf
int3
xchg
imul
fdivrl
int
stos
or
pop
push
adc
enter
add
iret
movsl
in
lret
fisubrs
lods
sahf
pop
into
js
sbb
arpl
jg
jge
push
jb
loop
fcom
inc
mov
lds
addr16
jmp
cmp
adc
sbb
ud1
adc
ljmp
or
add
adc
scas
jge
jmp
pop
mov
pushf
int3
popa
push
shll
and
xor
lea
adc
in
xlat
push
cmpsl
sub
imul
adc
or
decl
fldt
or
dec
push
lock
out
fildll
xor
mov
sti
mov
fildl
xchg
sbb
cltd
test
and
xchg
addr16
je
lea
adc
mov
push
aaa
inc
adc
out
into
cld
mov
adc
sahf
lds
repnz
xor
sub
sbb
fwait
lret
ja
sub
sub
inc
int
sbb
scas
mov
aaa
pop
jo
mov
lods
out
repz
ret
mov
sub
add
insb
jp
mov
sub
int
and
rolb
notl
hlt
lea
inc
pop
int
and
bound
cmp
xorb
sbb
push
inc
mov
push
push
loop
fcmovnb
fisubrs
xchg
outsl
xor
sub
int3
cld
sbb
rorb
aad
mov
shl
jb
mov
inc
xor
xor
cmp
fcoml
call
cld
sub
mov
sahf
and
fcmovbe
jbe
push
stos
xchg
iret
cs
lret
pop
mov
rcll
dec
insb
sub
jne
into
scas
mov
fildll
inc
rorl
daa
sbb
mov
test
das
cltd
leave
aaa
stc
mov
loop
inc
mov
es
mov
sahf
enter
pop
and
sbb
imul
mov
mov
popl
aaa
in
outsl
jne
jmp
inc
dec
aas
bound
xchg
mov
das
popa
jb
jbe
jmp
mov
jecxz
fdivr
ja
jnp
mov
push
push
xlat
rcrl
leave
inc
xor
pop
dec
push
adc
cmp
jne
pusha
fcompl
xorl
cli
jp
and
iret
sbb
test
inc
mov
push
pop
mov
out
fadd
negb
push
sub
add
roll
inc
test
or
cmpsl
int3
mov
mov
out
clc
cs
mov
scas
inc
stos
out
sub
into
mov
mov
xor
sbbl
jp
or
pop
sub
in
rolb
ficoms
data16
into
aas
sbb
push
outsl
arpl
addr16
js
rorl
stc
cltd
int3
fcmove
sbb
gs
mov
inc
lods
sbb
or
mov
or
or
movsb
sbb
dec
xchg
leave
inc
xor
xchg
cmp
xor
bnd
adc
arpl
pop
js
push
cmp
sub
aaa
push
lret
rorb
iret
lret
dec
or
cmovns
aad
in
hlt
out
pop
add
fmuls
pop
xchg
mov
loopne
pop
outsl
inc
jmp
out
scas
sub
popf
adc
xchg
dec
adc
orb
mov
test
mov
imul
cmp
fwait
lods
movsb
jb
sbb
roll
mov
mov
add
lret
ljmp
adc
cmp
test
cmpsl
push
loopne
sbb
aaa
dec
cmp
pop
inc
push
pop
mov
lods
lds
xchg
test
and
mov
adc
xchg
out
test
xchg
xlat
jno
sbb
ljmp
stos
fiaddl
dec
stc
cwtl
test
scas
and
les
pushf
loopne
xchg
daa
mov
lods
addb
cltd
lods
adc
push
jae
or
aas
sub
loope
outsb
lret
out
iret
loop
xor
jp
sub
adc
icebp
in
sbb
xchg
aam
jo
int3
sti
mov
xor
pop
stos
test
leave
cmpsl
or
and
packssdw
xor
push
imul
mov
ret
mov
pop
sbb
adc
das
xor
clc
icebp
add
mov
sub
xchg
sub
dec
mul
lods
sub
mov
adc
mov
mov
imul
sbbb
sahf
jno
mov
mov
loop
outsl
dec
call
push
mov
jae
rcrl
popf
je
jo
aas
xor
jge
xchg
push
popf
insb
in
push
dec
test
inc
adc
cmpsl
add
loopne
push
sub
xchg
fistps
fists
xor
je
jo
push
fsts
adc
in
mov
xor
inc
gs
gs
bound
addr16
dec
mov
jmp
push
lahf
out
adc
mov
lds
xor
arpl
pop
sbb
sbb
lret
enter
test
inc
pop
in
push
pop
dec
sbb
aaa
sahf
jno
cmp
loopne
inc
test
loopne
test
lret
gs
mov
pop
dec
in
fimull
add
xchg
jno
mov
rcll
dec
inc
adcl
xor
and
clc
dec
fsubs
test
xchg
movsl
jns
mov
adc
pop
add
adc
push
fwait
int
or
push
hlt
xor
cmpsl
push
push
fdecstp
loope
inc
lahf
or
sahf
adc
addr16
test
lock
add
sbb
movsb
int3
sub
adc
adc
sbb
xchg
sti
mov
mov
or
pop
mov
mov
fdiv
jbe
jmp
sbb
add
push
sti
sub
pop
add
adc
jbe
in
scas
cmp
inc
fcoms
in
inc
outsl
daa
xor
push
mov
add
xorl
iret
andb
sub
into
insl
ja
mov
in
mov
jbe
push
push
popf
mov
adc
out
outsl
sub
jae
xchg
adc
push
xlat
cmp
int
sbb
shrl
repz
pop
daa
sub
out
or
inc
dec
jp
insl
push
andl
shrb
pusha
mov
imul
sbb
or
loope
sbb
rcll
fwait
or
xor
add
das
mov
or
mov
movsl
out
mov
mov
je
fistps
push
xor
sbbl
or
call
mov
xor
jg
clc
fnstcw
inc
xchg
jo
mov
lret
mov
insb
and
xchg
jne
scas
pushf
rorb
adc
in
jne
out
fstl
in
test
lods
stos
push
pop
inc
fs
clc
adc
cld
repz
gs
pop
pop
mov
jmp
mov
cmp
or
aas
ja
clc
jp
pop
test
jns
mov
addr16
inc
mov
rclb
pop
es
ljmp
jecxz
cltd
add
sbb
daa
dec
xor
pop
pusha
jg
inc
cmp
movsb
adc
push
xchg
sub
pop
movsb
sbb
adc
xchg
addr16
mov
ficomps
xor
cmp
pop
xor
cmpsl
pop
cmp
leave
or
into
cli
scas
cmp
jae
push
cmp
int
mov
and
cltd
lods
adc
jg
js
add
mov
clc
mov
mov
dec
fldl2t
or
add
sahf
cs
rcrl
push
out
pushf
sbb
int3
jg
or
gs
mov
lods
pop
sbb
ljmp
mov
call
xchg
into
xor
popa
scas
pop
dec
ja
xlat
xchg
adc
dec
and
leave
cli
sub
xchg
scas
iret
stos
div
lahf
adc
and
cmp
icebp
int3
arpl
out
cmp
jg
adcb
fcoml
pusha
and
call
test
scas
movsb
jg
push
xor
and
ss
add
jmp
cmpsb
sub
and
xchg
sub
dec
inc
or
sbb
jnp
jmp
sub
push
inc
sbb
loopne
pop
dec
lret
mov
sbbl
sub
notb
ret
mov
jae
cmp
cmpsb
fs
movsl
int
mov
inc
mov
sbb
in
sbb
das
popa
test
out
adc
in
cmpsb
pop
rcrb
pop
cld
adc
shrb
ret
sbb
sti
sbb
mov
inc
mov
xchg
push
stos
repz
add
test
mov
inc
pop
cmpsl
dec
mov
fwait
imul
into
rol
cmpsl
mov
iret
jg
mov
sbb
mov
rcll
fldl
pop
or
fdivr
inc
loopne
xorl
movsl
sbb
pusha
cs
into
dec
icebp
aam
fists
xor
hlt
pop
pop
sbb
push
push
adc
aaa
mov
adc
adc
lret
mov
inc
mov
push
shll
inc
push
testb
fsubrl
sub
dec
cwtl
ja
iret
inc
aas
mov
insb
lret
jae
fildll
fdivs
inc
dec
sbb
call
and
and
mov
pop
push
cmp
fldt
lret
jb
mov
outsl
xorb
fimuls
jbe
lea
adc
jmp
int
sbb
and
and
fwait
xchg
scas
cmpsl
cmc
lret
jb
cld
sbb
fsubs
in
jno
add
xchg
aas
outsb
lret
add
jmp
sub
xor
int3
push
test
pop
aas
pop
shrb
repz
je
xchg
or
stos
xchg
int3
rcrl
mov
jnp
stos
cmp
loopne
jg
lret
lods
adc
adc
xchg
xchg
adc
inc
cli
lods
cmpsl
mov
sbb
sub
inc
mov
lock
sub
insl
daa
int3
jb
icebp
fisubrl
loop
arpl
jmp
mov
mov
sbb
adcb
sbb
cmc
jb
aaa
add
jne
mov
cli
xor
dec
les
out
repz
jg
adc
push
dec
and
cwtl
andl
or
push
sbb
mov
mov
xchg
push
xchg
pop
mov
adc
hlt
mov
mov
inc
pop
fs
pop
clc
mov
xor
xor
push
mull
repz
fcmove
cmp
push
call
sbb
dec
dec
sub
sub
mov
or
jnp
loope
pusha
sub
lods
int3
aam
cs
sub
cmp
mov
xor
lds
cld
or
out
std
pusha
jbe
or
pusha
rorb
ffreep
sahf
push
push
or
or
cld
std
sar
fs
sbb
mov
js
dec
decl
lea
mov
cmp
push
data16
test
pop
addr16
mov
arpl
xchg
xchg
push
push
sarl
sahf
or
fs
rcll
mov
scas
test
lds
xlat
iret
sub
int3
and
push
inc
test
sbb
lret
pop
imul
pop
repnz
sbb
es
sbb
sbb
jle
imul
ja
jg
cltd
shll
ss
dec
in
enter
push
pop
dec
inc
mov
push
mov
test
sbb
mov
mov
mov
push
cmp
lahf
scas
repnz
inc
hlt
inc
lret
dec
xor
ja
loope
xchg
xor
js
xchg
sbbl
data16
and
mov
jmp
iret
cmp
sbbl
out
add
ficomps
das
xchg
cmp
pop
pushw
jnp
mov
pushf
mov
cltd
lahf
mov
insl
icebp
pusha
xchg
jb
sbb
push
pause
fidivs
sbbb
xor
mov
rorb
adc
sub
sbb
pop
mov
in
lods
sub
clc
out
sub
sahf
mov
jns
sbb
outsb
sbb
sbb
enter
iret
lahf
jno
sub
jae
pop
aas
cld
pop
xorb
push
xchg
lock
lahf
adc
adc
push
or
adc
add
mov
jg
test
cmc
daa
insb
xchg
pop
lock
int
mulb
and
into
enter
add
push
vzeroupper
push
sub
aad
sahf
adc
fisubl
pop
fstpt
nop
lds
or
scas
hlt
push
das
imul
insb
rorb
sbb
call
cmp
mov
adc
push
rcrl
repnz
mov
mov
jg
into
sti
and
jae
xchg
mov
dec
pop
sbb
dec
loopne
dec
movsl
mov
adc
inc
jns
ds
or
js
leave
xor
mov
push
jne
daa
clc
lcall
xchg
dec
sbb
adc
cltd
jg
rcr
xchg
mov
push
ja
xchg
sub
jge
adc
push
lods
dec
mov
shr
nop
lea
repnz
push
sub
or
adcl
out
aam
fwait
shrl
xlat
inc
int
dec
sbb
push
pop
out
cltd
mov
mov
push
decl
add
iret
ja
arpl
push
add
test
data16
push
faddl
sbb
shll
push
sbb
gs
or
xchg
dec
dec
adc
push
sbb
cmp
fnstenv
pop
or
je
jo
xor
sub
sbb
cmp
popa
inc
aam
adc
sub
jne
fiadds
inc
pushf
movsl
adc
pop
lret
cmc
mov
outsl
push
cmp
add
into
lods
mov
mov
fnstenv
addr16
cmp
int3
jl
push
jmp
mov
dec
mov
sub
add
push
jge
pop
add
orb
adc
dec
es
and
mov
into
lea
scas
jecxz
or
popf
inc
xor
imul
mov
aaa
mov
ja
scas
gs
rcrb
aas
cmp
cltd
xor
push
sub
mov
nop
xor
repz
push
cmp
lods
sbb
cwtl
ds
call
jmp
push
push
xorl
cmp
sbb
mov
aad
sub
sahf
adc
jg
xor
test
ffreep
cmp
imul
out
or
cmp
cmpsb
push
pop
repz
mov
xchg
lds
movsb
xchg
pop
mov
lea
xor
pop
mov
xchg
pusha
or
int3
sub
shrl
sahf
push
inc
iret
insl
xor
pop
clc
cmp
lcall
aad
mov
mov
xlat
push
add
scas
cmp
adc
mov
jb
sbb
lock
mov
fwait
pop
aaa
cmp
xor
pop
arpl
scas
adc
cmp
xchg
sbb
sbbb
cs
mov
pop
jbe
test
sahf
loop
adc
addr16
ds
das
xchg
add
cmp
sub
call
adc
xchg
adc
movsl
inc
out
cmp
cltd
adc
rorl
mov
gs
fildll
xchg
jle
repnz
out
int
cltd
lcall
adc
gs
push
sub
call
int
sahf
and
outsl
dec
jecxz
jmp
loop
mov
int
mov
dec
mov
setp
cmp
std
mov
lds
adc
inc
push
dec
pop
push
adc
add
js
cwtl
out
jle
mov
xor
iret
imul
in
shrb
and
lret
push
cwtl
xor
addr16
jno
cld
scas
pop
cs
pop
and
loopne
gs
push
dec
sbb
pop
stos
jmp
pop
or
inc
adc
leave
push
sub
jns
fwait
or
imull
ret
ss
sbb
sbbl
and
xadd
sar
lea
int3
sub
mov
and
scas
lea
dec
aaa
jmp
ljmp
xor
push
pop
mov
mov
and
shr
push
or
mov
imul
stos
jns
imul
faddl
push
sbb
hlt
repnz
pop
push
in
inc
pusha
and
mov
or
xchg
scas
dec
into
arpl
lret
insl
jnp
pop
push
xor
lock
adc
pusha
sub
add
jno
and
gs
xchg
out
dec
pop
pushf
xchg
adc
sub
out
inc
jns
stc
mov
inc
fisubs
sbb
iret
sub
push
xor
in
shl
sarb
loope
ljmp
lahf
jle
imul
sbb
jae
sbb
sbb
dec
mov
or
jge
rorl
inc
adc
mov
inc
mov
lods
movsl
adc
je
dec
je
int3
rorl
scas
into
clc
clc
lahf
das
addr16
or
pop
outsl
pop
push
adc
dec
popa
rorb
and
dec
fiaddl
jp
sub
sub
pop
inc
mov
sub
fs
sbb
insl
or
shrb
cld
aaa
loop
pop
dec
icebp
mov
jmp
adc
cltd
into
into
push
vmovd
frstor
sub
and
imul
roll
jl
pop
test
xor
scas
jnp
xchg
ljmp
add
sub
cmp
mov
out
shlb
popa
push
out
push
and
fmulp
lods
int3
mov
dec
xchg
pop
stos
out
clc
xchg
unpcklps
repnz
std
xor
fsubrl
mov
inc
sbb
mov
xchg
rolb
pop
adc
divb
inc
or
mov
adc
cmpsl
add
jne
xchg
outsl
test
cwtl
mov
lock
push
sbb
aaa
in
push
daa
arpl
rclb
test
sbb
iret
jge
loope
popw
xchg
inc
pop
add
imul
test
lods
fdivrs
xchg
lret
jle
push
mov
iret
test
loopnew
sbb
repnz
cmpsb
lods
dec
sbb
jns
fists
pop
jno
add
cmpsl
xchg
cwtl
pop
jae
out
xor
jp
xor
mov
xchg
jmp
xlat
add
xor
push
in
adc
iret
shll
sub
jns
jno
add
jg
adc
cltd
cmpsb
enter
mov
int
addr16
mov
sub
pop
push
je
iret
push
imul
pop
add
adc
lods
xchg
push
not
sbb
je
lock
mov
cmp
call
jbe
or
fs
aam
cld
sbb
aas
cmp
jp
mov
icebp
xchg
push
mov
push
int3
inc
loope
je
jecxz
fwait
cmpsb
ficoms
lds
cmpsl
out
test
dec
dec
jle
push
inc
repnz
int
sub
addl
and
sub
stos
imul
inc
lret
iret
pop
ss
out
ja
cmp
in
push
movsb
mull
adc
sbb
in
jecxz
xor
push
dec
push
xchg
mov
pop
jns
inc
dec
dec
mov
pop
adc
call
enter
aas
ror
addr16
and
mov
jnp
adc
scas
mov
adc
inc
out
mov
push
out
mov
ss
mov
mov
and
pop
sbb
inc
ret
cwtl
cmovne
sbb
push
sar
in
cmpsl
inc
movsb
push
lods
rcr
mov
fucomip
adc
iret
add
cmc
cmpb
dec
out
enter
xchg
pop
roll
push
lea
push
popa
mov
dec
jmp
lahf
shll
cmc
add
into
push
ja
int
addb
jle
out
arpl
xor
leave
aad
js
mov
cmp
xor
pop
xor
add
mov
push
lahf
and
mov
pop
jmp
lods
negl
sub
lret
fldcw
nop
rcll
add
imul
inc
inc
lea
mov
sar
mov
push
dec
je
add
push
xchg
rcrb
xchg
rcrl
loope
mov
adc
sbb
adc
mov
iret
movb
push
xchg
lret
pop
lret
lea
sahf
add
test
jnp
out
bound
mov
lods
scas
push
sub
sbb
rolb
gs
mov
adc
inc
pop
pop
dec
mov
adc
sbb
lds
gs
pop
xorl
sub
adc
sbb
jg
sbb
or
lahf
mov
fmulp
bound
jnp
mov
lods
sbb
das
in
nop
add
or
sbb
cmpsb
adc
arpl
leave
adc
ljmp
rorl
out
mov
inc
sub
pop
add
sbb
dec
jp
cmc
ja
iret
imulb
push
pop
fiaddl
notb
js
pop
pop
cmp
pop
gs
xchg
fstl
lds
pop
xchg
inc
pop
pop
and
add
filds
or
sbb
repz
add
fwait
test
aad
xor
push
ljmp
adc
iret
std
subb
pop
pop
roll
adc
xchg
psubq
dec
lods
pop
or
cmc
pop
gs
leave
inc
xor
push
mov
pop
out
repnz
sbb
fwait
sbbl
addr16
jge
inc
or
mov
cltd
xchg
mov
leave
testb
mov
daa
addr16
mov
xchg
adc
es
mov
adc
push
fwait
push
lahf
dec
xchg
jge
mov
jge
pop
inc
jle
mov
es
mov
dec
fmull
int3
cs
sbb
pop
and
lcall
mov
repz
and
fisttpll
mov
jne
lret
xor
add
jecxz
push
int3
pop
push
add
push
fiaddl
cs
sub
mov
mov
jne
xlat
or
adc
hlt
sbb
sahf
push
es
pop
iret
fists
dec
inc
pop
out
dec
push
lahf
out
imul
and
mov
mov
dec
adc
pop
cmpsl
shlb
pop
in
sub
pushf
push
inc
pushf
sbb
das
jb
mov
repnz
and
int3
idivb
lods
add
pop
int
inc
call
sbb
sbb
std
push
loope
popf
stc
cs
int
loope
push
addr16
or
cmp
and
pop
jg
or
aad
and
into
sbb
inc
out
sahf
lahf
xorl
mov
mov
xchg
push
out
data16
in
push
and
ja
sbb
sti
lret
pop
sub
aad
inc
je
sbb
pusha
std
int
xchg
fwait
cli
xchg
ja
int3
lock
xchg
dec
pop
imul
div
add
loopne
inc
test
inc
jg
add
jb
sbb
sub
iret
dec
cltd
and
jmp
pop
sub
xor
sbb
cld
jg
push
jecxz
shll
or
sbb
mov
mov
js
popw
mov
pop
adc
mov
mov
lods
adc
sarb
pop
sub
adc
imul
dec
and
icebp
imul
sbb
or
sbb
adc
mov
test
inc
roll
pop
pop
xlat
cmpsl
sbb
iret
xchg
dec
cmp
pop
xor
or
icebp
sbb
pop
data16
ljmp
sahf
push
and
dec
lods
int3
push
cmp
xor
call
stos
bound
ror
fistpll
sbb
sbb
aaa
inc
jmp
lods
jmp
sbb
push
cmp
dec
mov
in
cmp
iret
sbb
xlat
fisttps
ds
outsl
pop
cs
jg
ret
jmp
mov
scas
dec
mov
mov
xchg
mov
daa
mov
std
mov
mov
sbb
iretw
xor
pop
push
arpl
in
scas
xchg
lcall
mov
or
push
cmp
test
pop
pop
xor
into
iret
push
push
add
sbb
dec
xchg
or
sub
lret
pop
adc
fwait
popf
add
sub
sbb
and
pop
fucom
inc
mov
xchg
imul
sub
movsl
outsl
sub
flds
je
sbbb
test
jbe
sbbl
cltd
ss
sbb
mov
mov
lret
jb
inc
jae
mov
pop
dec
jmp
pop
xchg
int
das
mov
lods
fs
push
jb
inc
mov
cmp
in
mov
push
ss
push
push
fsubr
hlt
int
fildl
inc
dec
dec
inc
cmpsl
push
inc
xchg
leave
and
inc
xchg
jne
hlt
fxam
add
or
leave
or
mov
in
sbbb
inc
adc
out
test
iret
sub
mov
call
add
sbb
jae
aaa
sub
or
int3
mov
cmp
jne
add
pop
jp
add
ja
shlb
sbb
mov
frstor
rorb
sbb
imul
fs
bound
or
dec
inc
sub
mov
adc
dec
inc
loope
adc
mov
ffreep
dec
cmp
or
push
cmp
out
int3
push
cmp
xchg
and
lahf
leave
inc
push
ljmp
push
add
call
loope
sti
add
lret
pop
call
andb
addr16
xchg
rolb
js
sub
addr16
out
sbb
out
push
sbb
inc
test
aaa
adc
or
mov
push
sbb
xchg
das
lret
rcll
adc
mov
pop
and
sbb
or
addr16
lahf
dec
or
mov
orb
daa
int
mov
imul
adc
xor
jb
push
mov
stc
mov
push
mov
mov
adc
in
aas
cld
cmp
lods
pusha
push
stc
pop
cs
sbb
xor
into
pop
sti
jns
fs
xchg
fs
mov
push
mov
fisubs
sbb
sbb
mov
in
or
pushf
mov
repz
jecxz
xor
cli
insl
dec
pushf
lods
jnp
push
cmp
fisttpll
mov
sbb
inc
outsl
fistpll
and
jmp
pushf
xor
pop
adc
cmp
mov
into
movsl
in
xor
xchg
adc
sbb
jl
sbb
sahf
in
test
js
fildll
xchg
sbb
hlt
pop
out
pop
xchg
ret
out
fwait
sub
arpl
bound
andl
jb
xor
lods
dec
fcomps
data16
push
and
addr16
jmp
daa
decl
or
fldcw
adc
ss
inc
inc
mov
push
cmpsl
leave
adc
imul
push
xchg
data16
hlt
mov
xor
mov
rorl
sti
in
and
repz
adc
adcl
sbb
pop
call
sahf
loope
addr16
mov
sbb
sbb
aam
or
xlat
jo
mov
push
int
rorl
inc
notl
push
rcrb
rolb
or
push
int3
and
and
xchg
and
cmp
sar
mov
push
ret
andl
push
movsl
pop
lcall
ret
jns
xor
xchg
lret
mov
cmp
push
mov
gs
jmp
adc
pop
inc
fsubrl
loope
fisttps
xor
int
push
add
in
cli
jne
mov
ja
repz
xchg
ds
pop
add
dec
call
sbb
movsl
xor
push
jnp
inc
xor
sbb
test
and
cld
fsubrs
rclb
das
imul
jbe
mov
adc
clc
sub
cmp
bound
adc
addr16
lock
mov
add
pushf
test
jg
and
pop
add
xor
xor
int
dec
je
addr16
sahf
inc
sub
sbb
int
jle
fnstsw
in
cmp
sbb
stos
push
jl
addr16
cld
sbb
push
sub
pushf
add
push
pop
and
scas
cmc
dec
gs
int3
push
push
jo
sahf
in
pop
pop
push
pushf
into
cmp
push
imul
rorb
lahf
sbb
xchg
cmp
loopne
push
mov
mov
inc
xchg
xchg
int
shrb
inc
data16
add
cmc
fadds
inc
fs
add
sub
push
sbb
add
push
fcom
fldenv
pop
lods
test
sbb
push
mov
outsb
adc
adc
adc
sub
xchg
inc
sbb
or
or
adc
mov
test
xor
psraw
xchg
sti
adc
jg
aad
fistps
je
or
pop
aaa
mov
lods
icebp
push
jge
inc
enter
addl
ret
addr16
aas
dec
popa
push
sub
push
fildl
jl
adc
xchg
mov
jge
int
stos
xor
addr16
sbb
xor
cmpsb
adc
jo
jmp
js
inc
ss
and
dec
test
push
inc
push
push
ljmp
sbb
dec
mov
sbb
mov
call
pop
and
jle
push
leave
lock
ss
sub
sub
jl
jb
popf
test
loope
fs
cmp
cmpsl
sbb
mov
daa
aam
rol
shrb
bound
mov
adc
cltd
cmc
jmp
and
cld
adc
ljmp
xchg
pop
push
aas
adc
sub
adc
gs
pop
or
adc
stos
xor
inc
xchg
jno
add
pop
movsl
lahf
fdiv
shr
fdivr
in
repnz
out
adc
nop
repnz
inc
pop
jo
cwtl
outsl
mov
jnp
rolb
sbb
push
mov
repz
jecxz
push
outsl
fidivs
push
dec
mov
sub
fdivs
test
aaa
push
inc
dec
movsl
test
pop
jno
out
lcall
shrb
in
sub
pop
sbb
xchg
pop
incl
cmpsl
sub
andb
dec
push
pop
insl
cltd
adc
std
jne
fisttpll
xor
negb
insb
int3
adc
roll
in
mov
or
xor
bound
push
addr16
insl
gs
sbb
sub
inc
push
xor
movsb
dec
sub
jno
add
pop
jp
inc
push
mov
and
fstps
lods
pop
aaa
inc
les
xchg
sub
in
sub
mov
cmpsl
cmp
movsl
pop
aas
repnz
hlt
lock
push
fsts
sub
mov
popf
fistl
add
pop
movsl
cmpsl
adc
fisubrl
fisttpll
in
inc
pcmpgtd
sbb
mov
addr16
sbb
cmp
push
gs
mov
pop
shlb
adc
into
jp
adc
sbbb
aaa
in
ja
inc
outsl
int3
addr16
call
sahf
insb
sbb
pop
mov
popl
jp
mov
in
and
inc
lret
mov
clc
in
iret
xchg
and
pop
xor
add
or
cmp
unpcklps
ja
jnp
enter
adc
aas
pop
add
inc
sub
hlt
sti
push
pop
cmp
push
mov
ds
xchg
sbb
hlt
xchg
or
jl
stos
addr16
jle
xchg
es
push
cmp
test
jmp
or
mov
and
mov
dec
sub
mov
out
idivl
fistl
xchg
fwait
mov
into
jg
sub
and
xor
or
push
xchg
and
cmpb
cmpsb
repnz
int3
ret
sbb
xchg
cs
gs
pop
daa
fimull
dec
in
repz
jmp
jbe
adc
dec
pushf
xor
gs
das
lods
ja
into
adc
cmpsl
push
out
test
leave
push
or
xchg
shlb
inc
cmp
push
add
push
test
iret
loop
jge
jnp
xchg
xor
popa
sub
data16
int
dec
fwait
mov
sub
or
mov
or
bt
les
popa
int3
add
xchg
cmp
sbbb
sub
dec
out
imul
xor
cmp
movsl
cmp
mov
jle
cltd
dec
ljmp
xlat
cmp
mov
adc
je
aam
idivl
mov
push
lcall
rcl
adc
xchg
arpl
adc
loope
pop
or
sbb
scas
out
mov
fucomp
leave
fiaddl
jno
jg
push
add
push
shll
rcrb
iret
lret
jmp
mov
mov
lods
enter
jg
addr16
jno
pop
jo
rcl
cmc
dec
mov
inc
lcall
or
shl
shrb
lods
xchg
iret
pop
test
mov
or
or
adc
stos
xor
into
sahf
dec
cmpsl
cltd
dec
movsb
in
rol
mov
cltd
addl
pop
sub
push
lahf
movsl
mov
adc
cmp
bound
std
out
sti
stc
xchg
test
sbb
or
je
adc
in
addr16
jmp
aas
cmp
inc
adc
xlat
jns
lods
sub
daa
mov
cmpsb
loopne
imul
xchg
jl
adc
in
cmpsb
xor
and
test
pop
test
dec
pop
fsts
push
sti
jl
adc
inc
test
mov
shlb
dec
aam
jmp
shlb
and
iret
cld
adc
xchg
sbb
out
arpl
push
sbb
push
and
jl
cmp
sbb
in
jl
mov
insl
addr16
cmp
das
dec
mov
push
nop
rorb
call
pop
inc
out
add
sbb
sbb
push
iret
mull
sahf
cmpsb
lock
pop
int3
movsb
sti
sahf
int3
jnp
sbb
fstpt
bound
popf
jmp
sbb
orb
jle
rcr
aas
popl
pop
push
xor
mov
mov
dec
inc
push
inc
adcl
mov
popf
pushf
jmp
jnp
lcall
push
mov
stos
push
xor
dec
sbb
cmp
push
lods
pop
jge
add
setne
sbb
xchg
sbb
pop
push
xor
adc
nop
mov
popf
rclb
leave
aaa
pop
dec
pop
mov
mov
pop
sub
clc
mov
add
scas
mov
cwtl
mov
ror
subb
sahf
pop
adc
jne
hlt
inc
pop
mov
xchg
sbb
mov
inc
ret
adc
sbb
loope
or
or
fidivl
out
sti
sbb
adc
fldt
mov
push
ljmp
adc
lahf
cmp
sahf
fidivrl
adc
xor
out
pushf
mov
mov
push
mov
xchg
add
adc
mov
mov
mov
xchg
int3
sbb
cwtl
inc
lahf
or
cmp
xchg
sbb
dec
ror
ss
add
scas
push
adc
bnd
in
or
fsts
and
lahf
pop
fildll
scas
bound
push
lods
push
int3
mov
ds
out
adc
ss
inc
lock
popf
iret
adc
addr16
mov
and
cmpb
adcb
or
fdivr
leave
xchg
ljmp
repz
rclb
mov
insb
add
je
das
fwait
in
fs
pop
ja
xor
test
gs
scas
gs
xchg
sub
testl
bound
add
bnd
testl
into
jl
jp
imul
mov
add
adc
pop
ds
jmp
push
cs
push
je
push
call
adc
sbb
cs
inc
inc
push
subb
mov
lods
and
shll
dec
loopne
les
push
repz
inc
xlat
jb
xlat
ljmp
sahf
push
push
pop
add
mov
and
jle
and
mov
sbb
mov
xchg
push
adcl
mov
mov
int
lods
fsubr
xor
mov
prefetch
ja
push
out
adc
stos
jecxz
push
cmpsl
das
data16
push
out
fwait
dec
in
mov
popa
and
fxch
jbe
adc
test
or
mov
cmc
arpl
xor
or
mov
data16
inc
mov
inc
adc
rclb
mov
je
into
adc
xchg
push
push
mov
sub
ss
gs
sub
int3
xchg
lods
xchg
mov
dec
xor
lcall
into
fsubrl
jnp
div
sbb
pop
pop
inc
push
sub
xlat
int
mov
mov
fcoml
push
sbb
adc
shrb
xor
iret
subl
mov
mov
mov
sbb
pop
in
push
mov
dec
xor
dec
xchg
mov
jge
jg
cli
push
xchg
sbb
loope
sub
imul
or
fsts
mov
das
dec
jo
repnz
rcll
xlat
cmc
clc
xor
int
outsl
jbe
mov
iret
xor
mov
fs
ficomps
cwtl
loop
push
lods
or
or
sldt
dec
pop
idivb
mov
faddl
imul
int
insl
in
addr16
stos
and
outsb
or
mov
add
ror
cmp
cs
insb
enter
fistpl
pushl
lock
xchg
push
add
push
in
hlt
js
jae
aam
mov
xchg
pop
les
stc
sbb
rcll
scas
cld
add
ror
test
jae
repnz
and
or
jmp
fcoml
aas
and
mov
stos
lods
push
jl
enter
enter
xchg
repnz
push
pop
adc
dec
popa
mov
and
das
popa
into
mov
imul
popf
js
ljmp
fbld
rorb
repz
pop
ss
and
push
hlt
gs
jge
push
push
sbb
call
and
mov
sbb
adc
sbb
push
test
mov
insl
adc
adc
popf
mov
int
sbb
cs
add
pushf
rcr
dec
mov
stos
inc
xchg
adc
lods
mov
scas
push
cld
sbb
add
cmpsw
test
cmp
mov
and
paddusw
dec
ficoml
test
fsubs
aad
mov
das
lea
mov
mov
add
pop
inc
test
aas
shl
and
mov
xchg
sahf
fucomip
inc
data16
push
cltd
ds
bound
push
test
mov
outsl
sar
outsw
rolb
adc
nop
loope
lret
sbbl
sahf
inc
aas
jecxz
push
mov
or
cmpsl
lock
arpl
or
push
enter
mov
jno
loop
sar
aam
ds
imul
add
sarb
xor
adc
fisubrs
xor
add
pushf
in
mov
clc
pop
outsl
out
mulb
sti
mov
mov
cwtl
xlat
fwait
mov
cmp
dec
mov
pusha
idivb
nop
push
inc
ja
adc
mov
sub
push
xchg
int
add
jno
lea
roll
jmp
mov
xor
inc
cs
fnsave
rorb
imulb
into
outsl
leave
cmp
hlt
xor
int
iret
mov
jecxz
scas
popa
lret
imul
dec
int3
call
adc
adc
push
int
pop
and
popa
push
into
das
fadds
or
mov
lret
std
iret
lcall
push
xchg
int3
dec
cmc
ds
and
and
pop
mov
xchg
movsl
or
fistl
iret
mov
ret
leave
iret
sub
mov
nop
mov
jl
dec
push
int3
lea
ja
aam
test
addl
jmp
adc
adc
jnp
cmc
cmp
daa
or
mov
ds
mov
sbb
lods
mov
int3
pop
outsl
xchg
jb
mov
hlt
sub
dec
ss
test
imul
aaa
and
int3
iret
jae,pn
stc
cld
out
fidivs
adc
mov
cmovnp
js
adc
loop
cmpsl
pop
mov
repz
xor
jl
insb
jb
sarl
ret
daa
cli
or
aas
and
imul
test
addr16
shll
movb
push
mov
in
inc
cmp
into
adc
mov
pop
rcrb
leave
pop
pushf
mov
into
leave
je
repnz
pop
cwtl
in
cmc
and
shlb
mov
or
js
pop
cmp
mov
int
pop
add
fcmove
vpavgb
arpl
pop
aad
mov
xchg
mov
ljmp
int3
jo
push
jp
test
into
cmpsb
and
imul
test
sar
les
jmp
push
lcall
adc
jle
sbb
cmpsl
xor
es
cmp
ret
push
movsl
sbb
adc
sub
seta
dec
add
ds
and
mov
mov
cmpsl
stos
adc
adc
xor
and
mov
cmp
cmc
inc
call
call
push
dec
test
cmp
repz
out
pop
xchg
adcl
int
pop
out
pop
fidivs
scas
sbb
jmp
xchg
pop
iret
popf
mov
stc
sbb
out
gs
push
jecxz
lods
je
pop
repnz
lcall
push
mov
pusha
jnp
mov
mov
dec
ja
loope
xor
into
popa
xorb
or
rol
pop
xlat
addl
icebp
inc
insb
out
and
xlat
popa
lea
repz
clc
add
xchg
stos
hlt
mov
daa
vpmacsswd
and
subb
xor
fcompl
and
bound
addr16
leave
cli
xadd
call
inc
xlat
iret
pop
lret
jns
adc
addr16
sub
ljmp
push
mov
push
add
popa
leave
fisubs
sbb
xchg
sub
cmp
fldl
dec
sbb
mov
int
cwtl
mov
xlat
insl
sub
pop
dec
xor
jmp
ficomps
sbb
and
cmp
in
and
inc
lret
push
dec
inc
cmpsl
sbb
lods
or
dec
stc
adc
or
sbb
sar
pop
mov
stc
cs
sub
lret
sbb
xlat
adc
ret
insl
jno
shll
insl
hlt
mov
hlt
addr16
out
aaa
jge
or
fld
ja
dec
push
jns
sub
mov
test
jns
fcomps
adc
ss
pop
xor
lcall
lods
fisttps
pop
cmpsl
into
movsb
cmp
jae
add
jle
pop
and
xchg
jmp
gs
loopne
repz
cltd
inc
mov
jle
movsb
jne
icebp
cmp
and
xchg
fs
dec
xlat
jmp
adc
pushf
je
cmpsl
xchg
in
push
or
xor
push
rcrb
pop
insl
sub
out
lock
rcr
sbb
fldl2t
movsl
adc
pop
fucom
sbb
cmp
int3
jg
xchg
jmp
fsubl
mov
lcall
xchg
insb
push
fs
adc
shll
add
pop
sti
push
aam
adc
mov
sub
sub
adc
and
push
push
sbb
mov
push
clc
aaa
lods
fists
and
jno
ret
mov
sti
mov
jo
adc
cmp
pop
arpl
push
sahf
adc
dec
fsubr
or
pushf
mov
push
fsubl
jmp
ret
into
repnz
int3
push
push
fwait
mov
adc
sub
mov
daa
sahf
lods
mov
addr16
or
push
inc
mov
xchg
addb
pusha
jmp
cld
add
dec
in
adc
lcall
ficoms
cmp
mov
fs
shl
notl
pextrw
adc
dec
cmp
jmp
cwtl
lret
jle
ljmp
cltd
cmpsl
cmp
sub
push
out
inc
into
test
or
and
mov
aad
jns
inc
sti
pop
push
xchg
cmc
push
mov
sub
jmp
pop
aad
pop
mov
fs
add
cmp
cli
jnp
lret
mov
xchg
mov
xlat
dec
dec
push
int
fwait
adc
sbb
xchg
adc
mov
and
cmpsb
xchg
inc
imul
or
xchg
loope
mov
push
adc
mov
cmpsb
fsubrl
sbb
pushf
mov
unpckhps
scas
dec
leave
int
sti
mov
test
dec
push
pop
mov
incb
test
jnp
pop
mov
sub
jg
lds
and
enter
hlt
in
insl
addr16
daa
or
jp
dec
fdivrl
aad
xchg
and
aad
shlb
dec
inc
ljmp
loope
scas
loopne
push
cmp
ficomps
xor
es
push
xchg
iret
loop
lds
xchg
lret
xchg
into
outsb
cmp
fwait
xor
in
nop
ret
mov
or
cmp
imul
daa
popf
xchg
loop
out
bound
ss
xchg
out
lret
xchg
in
push
xlat
pop
das
int
and
hlt
fs
push
xlat
fs
cwtl
xor
fwait
test
cmp
imul
sahf
push
xchg
test
pop
add
lahf
imul
test
lret
sbb
xor
add
or
add
or
add
add
cmpsb
or
add
or
add
or
add
or
add
add
add
or
add
or
add
add
and
add
into
or
add
add
cmp
add
adc
add
mov
add
xor
add
mov
or
add
add
pop
or
add
or
add
or
add
or
add
add
lcall
add
add
pusha
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
add
add
or
add
or
add
add
or
add
inc
or
add
add
mov
add
test
add
xchg
or
add
or
add
or
add
add
add
cmpsb
or
add
or
add
or
add
or
add
add
orb
add
add
or
add
or
add
or
add
or
add
add
add
or
add
cmpsb
or
add
inc
or
add
jp
add
add
add
cmp
add
pusha
push
add
or
add
or
add
decb
add
out
or
add
dec
push
add
adc
add
push
push
add
and
add
inc
push
add
add
add
pushf
push
add
mov
add
scas
push
add
add
add
into
push
add
add
add
add
inc
add
cmp
add
pushf
inc
add
add
pop
xchg
add
lock
inc
add
add
add
inc
add
inc
add
pop
add
inc
outsb
xor
inc
push
ss
push
jbe
dec
pop
bound
dec
xor
jbe
add
inc
push
push
xchg
dec
jns
push
push
dec
push
dec
dec
imul
inc
jno
outsb
dec
inc
dec
xor
dec
pop
ja
jo
outsb
xor
push
inc
add
adc
inc
lds
pop
xor
aaa
jbe
push
push
je
inc
jae
xor
insl
popa
js
inc
jno
jne
insl
push
dec
dec
inc
xor
insl
dec
push
push
dec
inc
dec
push
inc
dec
xor
push
xor
xor
push
push
dec
pop
inc
xor
push
gs
bound
inc
push
cmp
jb
inc
push
push
inc
push
bound
push
xor
jo
dec
inc
inc
ss
push
dec
inc
addr16
outsl
outsl
jae
popa
xor
fs
outsl
push
inc
inc
jne
dec
add
add
add
add
add
add
add
add
add
add
dec
add
add
inc
add
add
add
add
push
jns
push
arpl
jbe
dec
xor
dec
push
xor
pop
pop
xor
cmp
outsl
dec
cmp
dec
push
popa
jbe
inc
pop
inc
pop
fs
jb
xor
dec
ss
aaa
xor
xor
dec
xor
xor
inc
push
jno
insb
xor
ss
jb
inc
jno
cmp
jbe
cmp
dec
xor
inc
inc
cmp
data16
popa
dec
xor
inc
aaa
jne
inc
cmp
pop
jbe
inc
ss
dec
xor
jb
dec
inc
dec
cmp
cmp
dec
pop
push
addr16
arpl
inc
addr16
push
push
inc
xor
jp
jne
jo
dec
insb
push
cmp
imul
outsl
inc
imul
jns
push
xor
pop
gs
inc
jp
insb
push
dec
push
cmp
jne
ja
addr16
pop
dec
ja
add
aas
aad
add
stos
push
mov
add
push
dec
dec
outsl
inc
je
outsl
dec
insb
jno
push
push
push
aaa
ja
inc
jns
aaa
dec
popa
inc
jne
jae
jne
jns
ss
insl
jb
dec
inc
je
jp
inc
inc
xor
imul
jo
insl
jne
dec
xor
dec
xor
js
push
gs
jns
je
dec
imul
pop
js
inc
gs
aaa
inc
pop
push
bound
dec
imul
jns
dec
xor
aaa
inc
jo
inc
inc
ss
inc
pop
inc
push
push
dec
jo
jbe
fs
inc
xor
jns
pop
bound
jno
add
add
ss
dec
xor
dec
jne
xor
inc
bound
dec
addr16
jne
inc
inc
inc
push
gs
gs
imul
inc
push
dec
push
gs
push
jp
pop
ja
inc
jb
jns
insl
dec
jae
jo
push
push
push
xor
outsl
jb
insb
gs
outsl
insl
push
push
dec
pop
aaa
dec
push
xor
push
jae
inc
push
push
dec
bound
jp
gs
dec
xor
insb
push
push
dec
xor
pop
inc
push
xor
xor
xor
inc
dec
imul
push
xor
inc
aaa
jo
ss
push
fs
fs
xor
inc
xor
ja
push
push
je
dec
push
xor
outsb
push
inc
fs
push
outsl
jae
outsb
push
dec
pop
imul
popa
inc
pop
inc
xor
fs
jbe
xor
jns
push
outsb
push
insl
push
dec
pop
insb
jae
bound
gs
aaa
aaa
inc
xor
push
add
push
add
inc
pop
imul
inc
inc
arpl
push
bound
push
push
bound
xor
jo
jne
jno
inc
outsb
fs
cmp
addr16
push
pop
jae
insb
push
xor
inc
arpl
inc
imul
push
popa
push
pop
xor
inc
dec
dec
xor
xor
inc
push
dec
inc
jne
data16
gs
xor
pop
push
xor
inc
dec
fs
ja
push
jno
aaa
inc
pop
xor
push
push
jb
jp
jb
dec
bound
ss
push
push
push
jno
jno
cmp
outsl
push
jb
push
insb
jo
push
xor
add
add
js
inc
xor
inc
insl
jp
push
js
xor
dec
inc
arpl
imul
jp
arpl
inc
pop
addr16
inc
push
xor
jbe
je
je
bound
jns
imul
popa
dec
jo
addr16
outsl
jns
pop
fs
inc
dec
inc
xor
xor
push
jns
js
cmp
push
xor
xor
inc
inc
push
push
jns
pop
fs
xor
gs
pop
pop
xor
pop
xor
inc
jp
inc
jno
insb
jne
push
insl
aaa
ja
arpl
jp
jne
insb
insb
add
add
jp
jno
dec
fs
dec
gs
pop
inc
xor
outsl
dec
inc
insb
xor
imul
dec
inc
inc
push
js
pop
insb
dec
add
add
movsb
adcb
inc
cmp
add
xor
arpl
inc
insb
xor
push
outsl
jns
aaa
push
bound
arpl
jb
inc
inc
inc
dec
fs
dec
push
pop
push
jb
push
insl
dec
dec
imul
xor
outsb
cmp
dec
xor
jns
addr16
push
xor
aaa
ja
inc
gs
outsl
jne
outsb
push
imul
addr16
jo
xor
aaa
xor
ja
push
pop
inc
ja
dec
xor
dec
ss
inc
inc
pop
inc
imul
jo
inc
inc
js
dec
dec
add
imul
push
inc
dec
inc
insb
xor
push
pop
je
popa
inc
outsl
pop
cmp
aaa
imul
xor
dec
je
insb
outsl
jae
xor
dec
cmp
ja
data16
jp
dec
inc
dec
inc
inc
inc
fs
inc
pop
dec
ja
arpl
dec
inc
dec
bound
inc
jne
inc
ss
inc
push
arpl
imul
push
je
cmp
gs
xor
dec
je
inc
js
cmp
jne
pop
dec
push
imul
popa
addr16
cmp
push
aaa
xor
gs
dec
xor
jns
xor
popa
pop
dec
insl
jo
imul
push
jb
je
xor
push
push
gs
dec
jbe
fs
aaa
dec
push
push
xor
addr16
push
xor
dec
dec
push
dec
outsb
outsl
xor
push
dec
imul
xor
addr16
dec
xor
push
inc
inc
push
aaa
push
dec
arpl
arpl
jne
cmp
dec
data16
add
inc
dec
dec
xor
je
dec
inc
dec
arpl
xor
imul
jo
dec
jae
arpl
pop
pop
dec
dec
xor
imul
jp
insb
jb
push
insb
xor
imul
fs
dec
push
push
arpl
ja
pop
dec
xor
push
js
outsb
cmp
jo
push
push
jne
imul
insb
inc
insl
jp
bound
aaa
jae
push
dec
dec
je
cmp
dec
jns
inc
push
xor
addr16
js
insb
push
inc
jo
xor
push
imul
push
imul
inc
je
inc
push
inc
add
add
mov
and
add
insb
add
push
push
push
xor
push
push
insb
jbe
dec
dec
jb
addr16
add
add
push
push
xor
inc
dec
xor
push
jne
outsb
push
add
push
xor
push
push
jo
xor
push
ss
dec
inc
push
inc
outsb
dec
ss
jns
gs
insl
insl
cmp
imul
arpl
js
xor
push
aaa
xor
fs
inc
push
imul
jp
jno
inc
inc
jp
push
insl
dec
inc
js
outsl
popa
inc
dec
push
push
xor
xor
inc
cmp
gs
xor
push
outsl
dec
jae
add
add
jns
inc
popa
cmp
jo
arpl
dec
dec
insl
push
xor
dec
dec
push
xor
jae
outsl
data16
inc
dec
dec
push
imul
jp
cmp
push
inc
inc
push
push
inc
inc
dec
popa
xor
pop
jne
inc
gs
xor
jbe
jne
jno
imul
bound
cmp
inc
xor
push
addr16
insb
xor
jo
push
push
push
ss
aaa
inc
imul
dec
inc
insb
push
jp
inc
jne
insl
je
push
xor
bound
xor
ja
push
cmp
push
dec
pop
insl
dec
fs
bound
jno
insl
push
dec
outsl
ss
push
jno
cmp
add
add
dec
dec
push
inc
pop
push
inc
dec
dec
dec
dec
imul
dec
inc
jo
ja
gs
push
dec
aaa
push
xor
push
cmp
xor
addr16
xor
inc
xor
cmp
xor
inc
dec
insb
push
js
gs
push
push
ss
jb
push
je
arpl
push
fs
dec
push
dec
insl
bound
xor
fs
dec
xor
dec
xor
jno
add
add
outsb
cmp
xor
dec
imul
arpl
jo
inc
push
dec
dec
push
jb
pop
pop
push
ss
js
arpl
xor
aaa
pop
jne
inc
xor
dec
inc
inc
push
inc
push
inc
push
gs
jbe
push
inc
inc
dec
dec
popa
push
bound
cmp
inc
xor
xor
dec
insl
jne
inc
dec
dec
dec
inc
push
push
fs
dec
dec
push
xor
push
jno
xor
inc
inc
inc
push
aaa
je
dec
xor
jo
gs
pop
dec
push
jno
arpl
arpl
jbe
jae
push
dec
arpl
aaa
insb
dec
ss
push
addr16
outsb
jp
xor
push
xor
inc
dec
dec
ja
jno
push
addr16
xor
ja
outsl
push
cmp
push
xor
push
jae
push
push
jb
dec
ja
dec
push
ja
inc
xor
add
add
insl
push
outsl
insl
inc
push
inc
inc
pop
imul
popa
inc
push
jae
dec
dec
inc
push
push
je
jno
inc
cmp
push
inc
jbe
popa
push
dec
push
xor
jb
push
arpl
inc
inc
popa
gs
xor
push
ss
jae
push
jns
bound
popa
imul
popa
dec
pop
dec
je
jo
xor
pop
jno
dec
insb
push
jo
imul
xor
dec
jp
popa
push
add
add
push
jp
jno
ja
dec
xor
dec
push
xor
inc
pop
insl
dec
inc
imul
push
push
inc
push
xor
outsl
jb
xor
push
insl
imul
aaa
pop
jne
arpl
dec
dec
inc
cmp
push
jne
jne
jno
je
push
xor
imul
jo
dec
aaa
push
insl
jp
jbe
push
bound
jns
pop
push
gs
inc
je
bound
jne
push
ja
imul
insl
ja
dec
xor
push
inc
dec
imul
dec
jno
push
ja
pop
jbe
xor
pop
dec
jbe
imul
dec
push
push
inc
jp
push
pop
ja
data16
xor
add
add
dec
outsb
jbe
imul
xor
push
dec
dec
add
cmp
pop
sub
test
dec
jp
adc
movsl
ror
mov
add
jnp
pop
pop
sti
inc
jmp
lcall
outsb
pop
ret
add
adc
push
testb
test
lret
push
push
repz
jl
adc
jae
pusha
jl
iret
cmpsl
mov
das
gs
iret
or
sbb
int
mov
aas
arpl
iret
movsb
push
fstp
dec
cwtl
adc
jne
in
int3
adcl
lea
pop
jl
or
shll
sub
test
xchg
adc
ds
inc
xchg
inc
push
call
push
in
mov
cli
ss
sub
jecxz
jb
scas
sub
in
inc
outsl
jle
and
pop
push
mov
dec
jle
push
adc
fcmovne
in
es
push
bound
inc
inc
add
movsb
inc
push
mov
std
push
adc
in
adc
push
out
data16
dec
retw
rcll
mov
dec
add
aas
fidivrl
in
inc
repnz
push
fcomps
call
out
ds
dec
push
mov
jecxz
inc
pop
mov
mov
test
mov
mov
jmp
mov
cmp
mov
inc
clc
rcrb
int3
cld
mov
mov
cmp
sbb
adc
fcoms
inc
dec
loop
pusha
mov
cmp
mov
je
push
xor
mov
adc
jl
popa
popa
mov
adc
mov
sub
aam
jg
push
outsl
adc
sub
stc
es
and
stos
int
fwait
push
data16
es
pop
repz
push
inc
jp
jg
xchg
add
jo
outsl
push
aaa
push
xchg
cmpsb
mov
rcll
mov
pop
xor
imul
mov
rcll
xchg
jmp
cltd
mov
in
inc
or
adc
cmc
xchg
test
gs
addr16
out
mov
xchg
sbb
cmpsb
xchg
adc
pop
or
push
mov
xchg
iret
and
mov
sub
aad
sbb
lods
hlt
and
inc
js
femms
call
out
stc
fdivr
mov
and
mov
or
cmpsb
xor
arpl
mov
int
pusha
adc
sub
pop
sarl
mov
push
pop
aas
mov
push
popa
imul
hlt
out
cmpsl
fldenv
cld
xchg
pop
pop
test
lahf
in
fwait
mov
or
or
and
or
vpxor
test
hlt
mov
imul
je
fnstsw
xor
inc
not
mov
imul
mov
les
jmp
add
stos
aam
cmovns
add
inc
jo
adc
jle
cli
add
shlb
pop
stos
mov
leave
lcall
and
xorb
cwtl
lds
scas
add
ds
addr16
mov
jbe
lods
push
loope
bnd
adc
sub
cmp
push
xchg
add
mov
int3
xchg
xchg
push
or
fcoml
stos
cwtl
cli
jns
mov
or
push
inc
pop
pop
and
xor
push
jmp
data16
lcall
ret
loope
int3
pop
ficomps
inc
aaa
sbb
sahf
adc
ja
inc
movsb
fld
sub
aad
lds
pop
mov
fwait
mov
jno
jno
jp
sub
iret
int3
or
adc
push
mov
add
push
mov
popl
add
jecxz
jge
cld
ljmp
andw
sbb
inc
jns
pop
stos
mov
pop
sti
jge
and
sbb
stc
push
sbb
push
lds
int3
mov
or
cmp
leave
pusha
mov
pop
push
inc
xchg
inc
adcl
fldt
sbb
pop
jbe
sub
pop
mov
xchg
aas
mov
data16
ljmp
pusha
inc
add
test
out
iret
jg
adc
mov
fbstp
jge
into
popa
outsl
mov
in
mov
mov
rcrl
pop
inc
loopne
push
sbb
cmp
sbb
jl
mov
adc
xchg
es
jbe
lret
add
or
cmpsl
mov
pop
dec
push
jae
dec
cmc
filds
push
and
mov
cli
ja
or
dec
int
fiaddl
inc
cltd
je
into
aaa
jb
iret
js
mov
fiaddl
and
js
xchg
ja,pn
mov
sub
scas
push
dec
sbb
push
addr16
push
push
scas
loope
pop
sbb
inc
inc
clc
dec
repz
mov
xchg
insb
pop
daa
bsr
popf
cmpsb
into
xchg
mov
push
cmp
and
addr16
aas
mov
push
test
iret
int3
mov
cmp
imul
jl
sbb
pop
dec
inc
loop
xchg
dec
sbb
xchg
push
fistpll
stc
xchg
lds
decl
ret
xchg
or
jle
gs
ss
sub
pop
lret
mov
clc
pusha
das
fsubrs
push
mov
sarb
inc
inc
in
pop
lahf
add
push
push
cmpsl
cmp
push
int3
dec
loope
outsl
inc
dec
sbb
bound
and
fistpll
sub
ja
repz
mov
adc
and
and
mov
mov
aas
xchg
xchg
popf
mov
call
fs
mov
ret
mov
jne
sarb
cmpl
xchg
es
mov
fwait
push
pop
into
jecxz
mov
jbe
dec
sbb
int3
xchg
inc
jecxz
and
xor
gs
pusha
rcrl
sub
and
jb
pop
stos
enter
scas
xchg
int
incl
sahf
cmc
jg
push
sbb
add
xchg
movsl
cmp
int3
dec
push
cmp
leave
jmp
sbb
dec
test
or
adc
cld
pop
adc
in
mov
jg
push
xorb
xor
mov
mov
cmc
std
dec
notl
scas
xor
jle
inc
imul
inc
inc
jns
lret
imul
vzeroupper
pop
in
aad
lods
sub
xor
imul
mov
cmp
push
lods
inc
dec
imul
hlt
inc
fs
call
cmovg
mov
push
jl
push
call
lret
sbb
lock
ret
ficoml
push
iret
addr16
loopne
add
aam
ret
out
mov
mov
xor
push
mov
jecxz
mov
inc
test
push
out
loop
mov
pop
xchg
ds
std
push
into
push
mov
lods
push
iret
dec
icebp
cmc
ret
mov
lods
in
aad
push
inc
gs
mov
cmc
repnz
mov
and
lahf
in
cs
hlt
push
aas
sub
cmp
lret
in
mov
or
pop
ja
xchg
inc
ljmp
adc
sti
pop
and
rdtsc
lods
mov
dec
jno
adc
daa
dec
mov
loop
sbb
das
lahf
sbb
mov
sbbb
adc
cli
push
arpl
pop
std
mov
push
and
ljmp
sub
and
mov
in
imul
nop
shrb
cmp
test
stc
push
outsb
pop
das
data16
cmp
push
push
push
imul
dec
jl
pop
jecxz
cmp
mov
into
out
pop
repz
dec
aad
je
sub
shrl
cs
gs
aad
outsb
xor
fcoms
vxorps
pop
pop
stc
push
xor
inc
mov
mov
imul
test
mov
ds
dec
movsl
insb
sbb
adc
jge
or
adc
mov
adc
into
push
add
jbe
pop
pop
sub
cmpsl
jbe
out
ds
adc
mov
mov
lods
into
mov
fxch
mov
push
ds
mov
into
lahf
and
adc
push
jecxz
dec
out
fdivr
add
das
sub
lods
pop
paddb
jl
leave
mov
inc
mov
jp
iret
int3
icebp
imul
cmpsl
and
out
repnz
incb
cmp
rcrl
sbb
lock
sahf
and
scas
test
dec
test
lds
imul
inc
sub
jo
mov
push
lods
das
push
lods
leave
pusha
xlat
inc
mov
mov
sarl
mov
add
dec
or
in
mov
ss
push
adc
lds
push
in
imul
adc
adc
lds
or
ds
imul
push
jae
pushf
xor
imul
pop
fnstenv
jmpw
bound
bound
xlat
pusha
sub
cmp
dec
arpl
lret
push
inc
pop
ja
pop
movd
outsb
into
push
mov
and
mov
and
test
jae
out
jo
push
dec
push
flds
add
adc
and
leave
loop
inc
dec
in
mov
stos
add
sbb
dec
imul
fsubrs
sub
pop
stos
pop
mov
inc
adcl
mov
push
shr
iret
sbb
out
push
es
adc
stc
leave
outsb
mov
add
rcrb
cmpsl
or
fbld
loopne
outsb
push
aas
andb
fsubrl
scas
fsubrs
inc
gs
push
push
push
and
sub
addr16
sub
mov
stos
and
mov
cmpsl
xlat
in
push
scas
push
nop
and
jns
adc
daa
sbbl
pop
adc
xchg
pop
ljmp
fs
xor
cmp
pop
jnp
das
mov
adc
leave
stos
sti
mov
in
dec
int
sbb
dec
addr16
jl
shlb
mov
inc
dec
sbb
sub
push
inc
shll
testb
or
test
movsb
lret
add
sbb
jae
dec
test
aas
addr16
sbb
push
dec
dec
int3
stos
sbb
sbb
adc
push
xchg
sub
popa
scas
xor
cmp
mov
mov
insl
fisttpl
subl
pop
jg
cmpsl
add
jmp
mov
stos
or
sub
popa
addr16
cli
mov
dec
xchg
push
adc
ja
rol
cmp
and
pop
mov
sub
xchg
pushf
fld
dec
push
sub
fisttpll
and
jns
mov
das
jbe
stc
into
test
outsb
mov
scas
mov
dec
ja
sub
rolb
test
jbe
movsl
ljmp
cmp
or
lcall
mov
je
fldenv
pop
jae
adc
rclb
adc
jle
push
stos
jmp
adc
adcb
out
imul
fwait
pop
mov
push
loopne
mulb
idivb
push
add
insl
xchg
inc
mov
fistps
je
sbb
push
lods
inc
js
and
out
loopne
and
or
stos
lcall
mov
xchg
addr16
push
lret
add
push
dec
push
std
aaa
cmp
arpl
int
cmpsb
or
xchg
mov
js
mov
je
pushf
lods
call
into
test
and
cmp
aas
lds
push
clc
adc
adc
fmulp
aas
test
rclb
ficoml
mov
movsl
sub
add
dec
int3
insb
cmp
cmp
aad
dec
sbb
push
and
cmp
imul
ss
nop
fs
mov
dec
int
sbb
lea
xchg
bound
scas
sti
imul
pushf
nop
and
sbb
xor
mov
push
adc
jno
out
sti
cmpsl
into
sub
arpl
pop
push
out
adc
sbb
push
fsubrl
pop
aaa
popa
jbe
mov
int3
sysexit
in
inc
xlat
into
andl
nop
insl
fchs
sbb
add
xchg
mov
xchg
jp
fs
mov
push
adc
pop
jno
push
cmp
ja
cmp
jae
lret
cmp
mov
inc
arpl
in
xchg
in
cmp
fcoml
mov
pop
aam
sbb
mov
xor
mov
loop
cmp
leave
sbb
arpl
mov
call
test
xor
daa
adcb
pop
das
pop
cmc
xor
xlat
scas
aas
lock
jle
cltd
or
shl
add
sbb
mov
adc
push
sbb
dec
pushf
jo
notb
ja
sub
fbld
inc
or
lahf
adc
sub
lret
inc
clc
stc
sbb
cmp
adc
shll
xchg
cmp
in
fstps
es
or
dec
lahf
jl
dec
jmp
jle
sbb
xchg
addr16
push
imul
inc
lds
xor
pop
mov
xchg
fiaddl
inc
inc
dec
fnsave
pop
mov
push
dec
adc
adc
bound
insb
in
xor
aaa
aam
iret
push
and
mov
mov
push
call
xor
mov
mov
std
aaa
int3
push
pop
cli
loop
adc
push
out
imul
aam
push
push
adc
arpl
mov
sbb
xchg
orl
sub
scas
popfw
enter
and
xlat
xchg
cli
dec
clc
mov
lret
or
jnp
stos
push
add
daa
into
ret
push
push
repz
insl
and
mov
and
pop
scas
rorl
pop
repnz
icebp
mov
push
adc
push
jg
cwtl
jb
push
inc
imull
and
imul
add
sbb
push
shrl
orb
daa
sbb
sbb
inc
mov
fwait
cmp
push
inc
or
mov
sub
iret
aad
mov
jmp
and
mov
and
adc
shr
stc
bound
sub
pop
imul
inc
pop
fs
sub
fdivrl
adc
jle
imul
fsubr
fcmovbe
into
inc
adc
xlat
out
mov
pop
and
sub
sub
sub
mov
js
xchg
mov
adc
mov
adc
test
sbb
add
mov
xor
sti
jns
mov
cmc
hlt
inc
lea
insb
and
vhsubpd
nop
shr
ret
das
jnp
or
jl
and
test
popf
into
sbb
repz
pop
pop
addr16
xor
hlt
dec
sbb
inc
and
sbb
mov
xchg
daa
pusha
mov
daa
jae
pop
or
and
enter
jecxz
loopne
jle
ja,pn
ret
jle
leave
into
inc
sbb
enter
pop
lahf
push
push
shlb
addr16
subb
jge
push
mov
pop
jne
mov
sbb
fs
ds
sbb
inc
aad
fistpl
xlat
inc
dec
addl
das
cmp
pop
rcrb
mov
pop
mov
sahf
xor
pop
lahf
mov
xchg
jle
and
sar
adc
fstl
push
cmp
lret
int
cmp
iret
cs
adc
testb
shrb
pushf
into
mov
lock
xchg
loopne
iret
daa
std
jns
stos
dec
cmp
push
mov
push
test
shll
and
hlt
pop
popa
lret
xlat
or
mov
push
cs
mov
lea
or
daa
push
aaa
xor
cli
std
push
data16
jmp
mov
add
lock
lcall
mov
ficoml
pop
mov
je
add
sbb
cmpsl
and
insb
and
sub
test
or
push
push
xor
loop
cmp
add
repnz
int
scas
add
dec
daa
push
icebp
scas
insb
push
scas
push
movsb
insl
fisubl
and
loope
out
ss
add
popf
iret
jge
sub
addr16
call
iret
sub
adc
lret
inc
mov
inc
clc
stos
mov
adc
xlat
cld
shll
negb
xor
repnz
adc
inc
lea
mov
jmp
mov
and
das
sub
push
xor
cld
dec
push
cmc
jb
out
xor
push
lcall
sub
into
loopne
pop
mulb
mov
mov
or
dec
inc
subl
dec
or
pop
or
cmp
scas
les
movsl
int
movb
mov
push
add
add
add
test
rcrl
ja
aad
inc
fcoml
arpl
cmpl
sbb
shlb
dec
dec
xchg
add
adc
movsb
adc
inc
xor
imul
pop
jb
test
add
es
fisttps
imul
jo
cli
ljmp
adc
imul
inc
fdiv
arpl
insl
inc
mov
mov
pop
nop
mov
int
xor
fisubl
bound
adc
dec
sub
xor
int3
mov
push
dec
adc
pop
xchg
xchg
mov
pop
inc
xor
jp
inc
inc
jg
cmp
push
push
bswap
cmp
test
cmp
sarb
ja
cmp
and
and
in
pushf
mov
dec
enter
sub
push
imul
sarb
movsl
in
outsb
jno
test
popa
andb
dec
addr16
mov
adc
xchg
addb
sub
test
pop
adc
loop
imul
les
inc
incl
and
aas
or
into
into
push
sub
add
xor
xchg
std
test
pop
add
mov
and
jmp
xor
xlat
sub
xchg
push
xor
pop
adc
rolb
mov
repz
push
gs
jmp
adc
scas
outsb
sbb
xchg
inc
cwtl
adc
push
outsb
fsub
and
idivl
scas
pusha
dec
xchg
mov
testl
sbb
nop
jp
pop
out
int3
cmc
sub
xor
push
mov
pop
mov
xchg
or
cmp
push
hlt
inc
popa
rclb
fwait
adc
in
dec
xor
mov
add
test
pop
das
xor
cwtl
mov
inc
lcall
dec
push
push
mov
sbb
adc
push
push
add
lahf
in
pop
sub
mov
insb
pop
inc
xchg
mov
add
popf
pop
popfw
mov
int
pusha
jg
inc
aaa
test
rclb
sarb
sbb
cmpsl
pop
into
jo
push
in
cmp
inc
jae
ljmp
dec
and
pop
lahf
pop
rcrb
popf
dec
jne
into
into
cld
movsl
push
gs
bound
jnp
in
add
xor
daa
add
inc
dec
xchg
mull
or
sbb
out
out
xchg
call
xchg
pop
pop
dec
add
out
fsubrs
mov
cli
lret
inc
lock
jp
add
push
int
test
lret
fcom
movsb
add
fs
adc
addr16
xchg
or
leave
stos
mov
xchg
inc
xorl
loope
xor
rcrb
aam
pop
cld
mov
mov
pop
jle
and
adc
xchg
push
aas
or
enter
ljmp
fldt
lcall
push
into
fisttps
xor
or
sti
jne
adc
pop
xchg
push
data16
clc
inc
inc
aam
adc
mov
mov
lods
jmp
lcall
pushf
fwait
sahf
pop
inc
addr16
mov
adc
lock
jg
arpl
enter
test
pushf
mov
stos
sub
lods
fmuls
out
sub
or
ljmp
inc
push
lods
idivl
cld
movsb
fdivr
mov
shl
rorl
mov
imul
inc
dec
xor
push
sbb
fstpl
xchg
dec
out
leave
ds
iret
jge
push
sbb
rorb
mov
mov
imul
ret
popa
dec
inc
mull
popf
adc
inc
jg
jb
xchg
fsts
jae
aaa
and
into
jg
xchg
daa
repnz
vpsllq
mov
cmc
iret
scas
gs
iret
icebp
dec
nop
mov
lock
lds
or
mov
mov
add
add
arpl
xchg
xchg
lcall
inc
repnz
stos
mov
icebp
lods
xlat
and
dec
aad
and
sub
fcoms
rcr
mov
mov
cltd
arpl
ficoms
adc
lcall
in
fisttpl
imul
sub
sbb
push
jecxz
popa
cmp
sbb
jno
iret
adc
xchg
pop
scas
xchg
insb
pusha
repz
in
xchg
adc
and
xchg
rcrl
jae
jmp
pop
jbe
mov
stos
lahf
call
in
imul
fwait
xchg
gs
add
xchg
jl
adc
xchg
stos
dec
out
sbb
inc
jle
adc
mov
in
adc
xchg
add
arpl
push
xchg
mov
xor
testl
and
mov
rcll
leave
jns
or
mov
adc
pop
xorl
daa
shll
cmp
or
jns
les
iret
cs
cmp
rol
mov
ret
repz
add
sbb
loope
add
outsb
mov
lret
dec
push
popa
mov
scas
mov
pushl
or
or
clc
xor
inc
scas
or
adc
mov
dec
call
bound
jae
mov
out
int3
andl
cld
aad
int
mov
daa
shll
xchg
xor
pushl
ds
pcmpgtd
decb
push
adc
xorb
leave
and
pusha
call
xchg
push
movsl
sub
sub
movsb
test
data16
es
and
cs
push
jnp
pop
rorb
pop
loop
cmp
addr16
dec
xchg
imul
xchg
out
xor
lahf
ja
jb
add
sbb
dec
sub
sysexit
push
mov
scas
jo
pop
cpuid
adc
push
imul
outsb
cwtl
xchg
vpsubw
cmp
dec
mov
jmp
xchg
in
sub
adc
bound
dec
mov
shlb
nop
inc
jns
pop
push
lcall
je
out
into
lcall
or
sbb
push
negl
arpl
jl
imul
xor
cmpsl
jecxz
leave
mov
fwait
lahf
mov
arpl
dec
pop
scas
mov
or
xor
data16
jo
sbb
gs
dec
aas
nop
imul
bound
push
pop
push
fs
xchg
imul
js
mov
add
cld
shll
inc
sbb
outsl
xor
lret
pop
int3
push
addr16
push
ljmp
dec
dec
pop
aam
cwtl
dec
pop
lretw
jl
xchg
int3
sub
xor
stos
push
daa
jns
cmp
pop
out
mov
out
mov
mov
pop
arpl
adc
xor
test
je
push
lea
pop
aam
add
jne
sbb
fbld
cmp
out
data16
cmp
adc
jl
xor
stc
enter
mov
and
inc
xchg
xchg
push
sbbb
dec
pop
sub
adc
pushf
xchg
or
or
push
mull
sbb
clc
inc
lods
int3
lods
sbb
cmc
add
and
xchg
insb
mov
adc
jo
icebp
pop
outsl
inc
cltd
adc
enter
sub
jne
jp
pop
pop
cmp
test
adc
pop
fildll
popa
or
aas
mov
xchg
shlb
outsb
cmp
sbb
dec
adc
movsb
or
inc
or
add
inc
or
push
mov
in
inc
or
in
movsb
mov
mull
inc
pop
lods
out
dec
adc
pop
mov
insl
mov
mov
out
or
xor
lods
jmp
cmp
adc
das
dec
lret
popf
inc
sbb
jmp
and
adc
cmp
xor
rcl
ss
jle
pushf
out
push
xchg
in
and
repz
sbb
xchg
pop
fists
mov
mov
push
jmp
sbb
aaa
sbb
adc
cmp
out
cmp
sub
iret
jge
daa
jns
fildl
lds
lods
clc
iret
jmp
int
aam
mov
mov
movsb
sbb
cmp
in
addr16
inc
in
leave
rcrl
inc
lock
push
push
jge
scas
hlt
dec
pop
inc
adc
into
xchg
push
mov
insb
sbb
push
out
xchg
jo
pushf
es
mov
dec
push
mov
iret
and
repnz
mov
push
xor
je
in
stos
sbb
lret
dec
stc
cmpsb
imul
gs
push
pop
or
or
shll
popa
out
loopne
sub
xchg
iret
sahf
xor
shl
mov
ud2
imul
repnz
mov
cmpsb
arpl
iret
push
popf
mov
out
test
dec
adc
and
imul
mov
pushf
icebp
and
scas
mov
inc
lahf
adc
or
mov
mov
sub
mov
jp
dec
mov
inc
jecxz
movsl
cmc
in
mov
push
ror
inc
mov
jbe
add
xor
pop
sub
or
jecxz
ret
sub
icebp
pusha
xchg
sub
sub
stos
fwait
addr16
cmpsb
mov
jg
and
inc
in
loope
adc
shlb
cmp
pop
rol
lea
out
test
fwait
inc
sbb
dec
insl
and
sahf
icebp
dec
jae
arpl
aaa
jns
jae
pop
in
popa
jg
popa
or
inc
mov
adc
jl
cli
mov
push
pop
or
dec
outsl
enter
test
loopne
mov
adc
adc
xchg
or
push
xor
xchg
jecxz
mov
lret
mov
push
sub
sub
repnz
fld
mov
adc
pop
lods
add
fistps
addl
xor
js
nop
xchg
lret
out
adc
or
mov
xchg
pop
push
jg
inc
das
repnz
into
jmp
pop
iret
add
clc
pop
arpl
insl
ds
addr16
push
dec
imul
xchg
aaa
xor
cmp
mov
stos
xchg
aam
mov
iret
mov
mov
sub
add
mov
fwait
sti
sbb
or
cltd
out
std
adc
test
int
and
inc
mov
rolb
out
sbbb
iret
rol
pusha
sub
addb
lock
jecxz
loopne
inc
inc
jecxz
divl
push
aaa
pop
sub
fs
pop
cmpsb
in
push
xchg
les
pop
out
or
test
dec
add
and
jle
hlt
ds
addr16
push
rcrb
dec
sahf
aas
inc
mov
loop
and
add
cmp
int3
std
cli
jp
out
and
xchg
xor
pop
subl
rorb
inc
mov
sbb
out
jae
dec
pop
adc
jge
into
xchg
mov
into
and
push
add
cmp
ret
aam
bound
imul
mov
mov
inc
aam
xchg
test
rcr
pop
int3
dec
sti
lods
aaa
loop
pop
mov
movl
jns
mul
ss
mov
jmp
popa
loopne
dec
mov
out
cmp
stos
aam
divb
mov
inc
cmpsl
mov
push
xor
lahf
bound
xchg
aaa
idiv
push
decl
ds
pop
outsl
sarb
jge
jle
repz
and
out
arpl
shr
int
data16
mov
lret
sbb
sbb
negb
imul
mov
mov
cli
mov
inc
mov
pop
fs
icebp
mov
and
cmp
cmp
sub
ds
xor
btc
insb
dec
fnstsw
popf
dec
add
rcll
cmp
push
adc
push
into
movsl
stos
cmp
dec
pop
addl
xchg
inc
cmpsb
cwtl
gs
lock
lods
aam
arpl
cmp
loopne
xchg
pop
sbb
fisubs
sbb
test
mov
fistpl
aas
add
inc
fistps
in
push
push
mov
stos
sbb
call
xchg
enter
iret
sbb
arpl
cmp
mov
out
out
adc
sbb
sub
sub
push
leave
mov
or
decl
testb
ret
mull
push
jmp
pop
mov
call
xchg
adc
mov
movsl
push
inc
jns
iret
icebp
pop
mov
orb
mov
das
rolb
and
sub
adc
sub
push
popf
add
sub
out
or
cvtpi2ps
mov
fsubrl
inc
mov
cmpsl
dec
push
rcrb
cmpsb
add
pop
arpl
lahf
sub
sub
xorl
shrl
stos
dec
adcl
mov
push
inc
fimull
xchg
outsb
std
in
xlat
pop
imul
dec
rorl
mov
add
jmp
xchg
xor
lods
xor
xor
push
mull
dec
dec
jg
insb
lcall
stos
push
pop
sbb
mov
iret
das
stc
movsl
filds
lds
or
out
loop
int
pop
sarb
mov
pop
mov
add
or
xchg
int3
shll
jnp
jae
dec
lcall
movsl
jmp
test
xchg
fcom
mov
and
rol
push
mov
jecxz
dec
int3
rcl
fs
or
sbb
push
enter
mov
adc
add
mov
and
lods
push
cmpsl
push
mov
ror
dec
jle
shl
hlt
cwtl
test
jmp
cmpsl
sbb
push
push
pop
xor
xor
fs
xchg
mov
lret
out
sub
gs
sahf
dec
mov
add
aaa
rcrl
mov
out
adc
jae
popa
dec
inc
dec
in
scas
or
jp
cmp
cmpsb
mov
add
pop
pcmpgtd
fidivs
call
fcoms
and
scas
jne
out
mov
dec
int3
hlt
xor
lcall
pusha
push
pop
and
test
int
andl
xchg
push
adc
int
mov
adc
push
iret
out
arpl
xor
outsl
xor
mov
std
iret
mov
ja
sbb
inc
jg
out
dec
xchg
xor
popf
pop
das
out
or
data16
push
mov
push
mov
in
dec
ja
aad
sbb
mov
pusha
ret
dec
enter
mov
ja
aaa
mov
mov
or
cmp
pop
lock
and
xchg
sbb
push
aad
jp
lahf
adc
fs
incl
dec
sbb
sbb
add
jmp
xchg
jae
cmp
mov
sbb
mov
jbe
adc
mov
xchg
push
inc
lock
scas
sbb
lret
in
push
inc
lods
xchg
aaa
sbb
mov
sub
jecxz
inc
xchg
repnz
cltd
out
testb
mov
adc
fadds
fld
flds
xchg
xor
adc
push
inc
adc
xchg
sub
mov
std
mov
adc
sub
pop
fcompl
in
pop
add
xchg
fadd
fcmove
pop
mov
pop
jmp
lock
arpl
mov
iret
cmc
andps
mov
fstps
es
movsb
int3
sbb
pop
lret
popa
fisubs
or
inc
dec
push
and
dec
and
enter
adc
test
push
hlt
sahf
jle
adc
lds
fistl
lds
pop
push
pop
push
movsb
cmc
movsb
or
xor
mov
int
shlb
inc
add
xchg
and
inc
adc
int
leave
cmp
xchg
mov
out
xchg
mov
mov
lods
hlt
gs
andl
scas
push
das
jns
xor
addr16
adc
shll
or
and
sbb
lahf
lret
adc
popl
push
and
repz
std
dec
inc
mov
xor
gs
jb
mov
push
xchg
ffreep
adc
je
dec
mov
js
fistps
mov
jp
xlat
hlt
test
jp
adc
adc
dec
sub
push
shrb
push
mov
sbb
and
stos
pop
xor
dec
movsl
data16
push
call
lds
int3
sahf
sbb
das
mov
or
jl
adc
ds
sbb
js
mov
movsl
jg
out
ljmp
xchg
mov
jae
out
add
in
jbe
jno
add
push
cwtl
popf
pop
adc
push
lods
fdivs
int3
insb
or
rcr
sub
push
sub
decb
sbb
push
hlt
mov
xchg
into
push
push
mov
mov
pop
mov
iret
inc
shrb
mov
mov
clc
xchg
jnp
mov
lods
push
cmp
aad
xchg
sub
popf
pop
bound
jbe
push
loopne
adc
jns
pushf
push
adc
mov
mov
push
pop
js
iret
lcall
adc
xor
cmpsl
sbb
js
or
stc
adc
xchg
loop
shr
mov
pop
aas
pusha
cmpsb
scas
xchg
rcl
xor
out
push
lea
pushf
xchg
inc
int3
enter
push
pop
dec
jno
cmp
fdivs
icebp
and
xchg
xor
in
adc
sub
jle
int3
repz
mov
pop
in
cmp
sub
in
jmp
sbb
mov
aaa
or
push
outsb
sub
loop
mov
push
add
adc
dec
or
popf
loop
dec
aam
xchg
inc
and
cmpsb
or
inc
addr16
inc
or
sahf
mov
or
arpl
fistpll
jp
jne
aam
outsb
push
addr16
les
stc
inc
cmc
addr16
cmp
bound
test
imul
sbb
push
xor
mov
gs
jl
mov
jo
cmpb
pop
sahf
lods
js
int
testl
into
mov
push
sub
fstps
push
and
adc
cmp
scas
out
mov
mov
and
fsts
das
in
ja
ja
push
iret
cmc
jl
pop
gs
push
mov
push
sbb
out
clc
rcll
leave
ja
mov
addl
mov
or
dec
shlb
into
and
or
or
fidivrl
ficomps
dec
push
dec
mov
cmp
cmp
ss
std
jge
jmp
and
or
jl
pop
sub
fstps
push
adc
push
pop
aas
loop
cmpsl
fwait
xor
xchg
jmp
pop
cmpsl
dec
pop
jmp
sbb
je
lods
sub
xchg
movsl
push
cmp
imul
pop
adc
sarb
loopne
pop
outsl
iret
out
inc
pop
gs
in
fucomp
shlb
pop
add
insb
aam
cmp
pop
lret
cwtl
inc
push
sbb
push
mov
in
or
adc
jo
hlt
fucomip
xor
ret
jo
iret
nop
jns
jle
fwait
push
test
cmpsb
inc
or
lret
mov
add
gs
mov
repnz
ss
cmp
imul
xor
jge
mov
push
stos
pushf
adc
adc
adc
les
sub
cmpsb
dec
sbb
jnp
in
mov
jns
xchg
ds
xchg
xchg
sbb
sbb
dec
mov
iret
inc
adc
and
les
sub
cmp
ja
into
ja
ss
mov
lcall
pop
jecxz
cltd
push
jnp
mov
sub
stos
fs
jmp
js
jb
adc
pop
rol
cmp
inc
les
or
mov
and
adc
shrl
cmp
mov
sbb
lcall
xchg
mov
and
lds
adc
scas
jnp
mov
mov
xchg
adc
rcrb
adc
xor
movsl
mov
and
iret
pop
and
push
cmp
mov
inc
jno
int
loop
xchg
mov
adc
mov
out
daa
bound
into
fmuls
test
add
aas
fistpl
cltd
adc
adc
pop
and
shl
pop
jno
je
cmp
test
dec
cmp
into
int
in
lods
jne
adc
ret
mov
test
mov
sbb
mov
ja
dec
xor
or
push
xchg
out
cmpsb
imul
push
cmp
loopne
fcompl
xchg
cmp
xor
sbb
cmp
rclb
aam
push
mov
dec
call
test
pop
pop
and
push
inc
xchg
push
pop
std
add
or
ds
out
xchg
std
adc
outsl
jbe
fldt
mov
into
sbbl
subl
js
sub
fdivs
rorl
cltd
aaa
fmul
cmpsb
xchg
rep
enter
gs
push
in
gs
adcl
ja
hlt
sbb
ja
fbstp
out
data16
pop
mov
push
lret
imul
push
arpl
std
les
sub
push
adc
cmp
ret
shrl
cmc
and
clc
cmp
pop
outsl
xchg
push
push
adc
pushf
lret
dec
int
mov
push
mov
addr16
orl
cmpl
sbb
mov
fstpt
je
dec
add
xchg
sub
mov
pop
sub
adc
lods
cmp
xchg
in
adc
push
mov
and
and
bound
inc
por
mov
or
mov
ret
inc
jge
aad
lahf
jmp
mov
xlat
shlb
sub
js
rorl
in
add
inc
ja
stos
push
push
mov
push
aad
hlt
sub
or
mov
dec
negl
adc
popa
adc
push
cmp
mov
pop
sbb
gs
adc
ret
dec
add
jo
dec
std
rolb
lahf
cmp
popa
lods
pop
stc
mov
add
mov
push
xchg
xor
lret
stos
jns
sbb
das
dec
mov
pop
stos
popl
ret
add
adc
pop
mov
fs
jo
sbb
push
arpl
ret
leave
pop
pop
sbb
inc
pushf
xchg
out
loopne
sbb
fcmovnu
imull
aaa
mov
adcb
loop
or
lret
mov
loopne
or
cmp
in
pop
jbe
add
insb
into
mov
pusha
mov
fstpt
mov
xchg
jge
sbb
les
inc
enter
sub
fs
jmp
cmp
ret
ljmp
mov
pop
fcoml
push
outsl
pop
adc
test
xchg
pop
dec
mov
jmp
adc
or
inc
movsb
fdivl
or
dec
int3
mov
aad
gs
lcall
jnp
out
cmpsl
push
xchg
test
bound
popa
mov
rcr
fwait
push
lret
aas
and
push
ljmp
xchg
cld
adc
sbb
sub
movq
stos
jge
out
aas
or
test
fwait
pop
push
xlat
sbb
pop
jecxz
push
fsubs
imull
push
into
xchg
shrl
stos
push
stos
imull
mov
mov
sub
rclb
ja
ret
fcompl
push
pop
mov
adc
xor
push
dec
sub
cli
xor
push
subl
shlb
jmp
leave
ss
push
inc
sbb
pop
xlat
loop
and
fists
dec
mov
mov
jnp
mov
adc
lcall
or
ds
int
aaa
push
push
or
aas
cmp
fmull
adc
mov
or
jnp
jge
fists
and
pop
mov
lds
push
mov
pop
cmpsl
lock
test
std
iret
and
mov
mov
sbbb
outsl
adc
ss
mov
enter
sbb
push
rcll
cmpsb
push
fcompl
jecxz
les
and
cs
int3
inc
pcmpgtw
pop
inc
int3
shr
adc
iret
in
xchg
or
push
icebp
push
dec
xchg
add
cmp
mov
lds
call
jnp
push
rcll
bound
into
aaa
xor
lret
dec
mov
pop
outsl
inc
sbb
jecxz
int
js
mov
pop
call
out
ficompl
push
cmpsl
and
lods
jnp
sarb
adc
nopl
insl
pushf
fcmove
imul
iret
mov
das
movsl
mov
adc
inc
cmp
sbb
push
add
sti
aam
lods
mov
cmpsb
push
pop
add
jmp
sbb
adc
sbb
iret
mov
xor
in
fdivs
testb
cld
lret
push
shll
incl
out
inc
and
xchg
mov
sbb
daa
ret
rclb
or
into
mov
jns
or
loope
mov
rcrb
dec
int3
mov
sbb
xchg
into
push
inc
xor
iret
frstor
jp
lahf
inc
mov
dec
scas
sbb
dec
cmpsl
mov
push
mov
pusha
repz
imul
mov
xchg
adc
cmp
fisttpl
dec
inc
call
jg
pop
xchg
pushl
fcmovnu
xlat
pop
mov
xchg
adc
xlat
out
xchg
or
cmp
sbb
movsb
std
pop
ljmp
jp
pop
sub
add
cs
mov
lahf
popa
into
add
fisubl
sub
orb
push
inc
fcmovnbe
mov
loope
mov
in
sub
xchg
xchg
negb
es
mov
adc
inc
add
hlt
adc
popa
pop
test
xchg
fwait
jg
jae
scas
aam
aas
out
adc
pop
push
jns
imul
sub
xchg
imul
add
mov
push
adc
sub
fstps
jecxz
xchg
add
inc
movsb
adc
lret
int3
jns
into
sbb
mov
arpl
aam
int3
dec
push
pop
int3
mulps
addr16
dec
or
adc
clc
adc
cli
push
repz
pop
repnz
push
hlt
nop
pop
add
dec
out
mov
sbb
adc
shl
push
push
xchg
mov
iretw
sub
push
out
scas
cli
mov
jmp
scas
out
push
aaa
rorb
xchg
in
lods
push
sbb
repnz
out
adc
push
mov
mov
adc
clc
frstpm(287
lret
ja
mov
aas
adc
jne
xor
fidivl
int3
test
addr16
shl
jno
sub
and
lret
xchg
sub
cltd
mov
or
mov
mov
or
mov
rcrb
mov
nop
xchg
cwtl
sbb
sub
notb
daa
std
or
hlt
into
pop
dec
sahf
sub
std
in
dec
dec
mov
mov
loop
out
out
insb
insl
imul
xor
pop
cld
adc
add
lret
pop
and
xlat
xchg
or
sub
divl
inc
rcll
dec
dec
push
inc
es
jle
lods
or
int3
dec
fistpl
out
addr16
jae
ss
movl
ljmp
sub
mov
sarl
loopne
push
iret
in
cld
scas
jae
adc
fldt
cmp
stos
stc
mov
sbb
sbb
adcl
adc
mov
gs
fsubrl
out
add
inc
fimuls
cmp
and
shll
inc
mov
mov
leave
into
cld
jle
lcall
into
out
xchg
xchg
int3
inc
stos
mov
icebp
data16
jmp
sti
add
mov
push
inc
aas
das
xor
fdivp
aas
lods
adc
sub
pop
jle
int3
out
ja
or
bts
je
push
movsb
addr16
in
add
loopne
sbb
jns
ret
push
pop
aaa
inc
sbb
xor
imul
and
and
pop
mov
cmp
sbb
jmp
jg
lock
mov
mov
inc
pop
push
jge
aas
ss
mov
fsubrl
mov
xchg
sbbl
sbb
or
in
jl
mov
adc
stos
cltd
adcb
in
les
insl
rcll
jno
dec
inc
pop
jo
not
out
sbb
daa
jo
jmp
sbb
cmp
sbb
dec
lret
dec
dec
lods
dec
jns
pop
daa
xor
mov
inc
jmp
jb
outsb
out
daa
adc
mov
rcrb
and
mov
push
push
jbe
xchg
ss
dec
in
xlat
icebp
loopne
sbb
pop
test
mov
push
mov
mov
movsl
mulb
or
sub
sbb
aad
ficompl
pop
mov
fimuls
sbb
cmpsl
xchg
sbb
jg
in
sub
rorl
push
xchg
mov
gs
sarb
pusha
push
push
push
xor
sbb
scas
loope
add
pop
fwait
and
jo
mov
lea
pop
in
dec
nop
mov
mov
subb
cld
push
rcrl
sbb
gs
jae
loopne
sbb
insb
scas
dec
xor
cmp
and
int3
adc
mov
jle
adc
and
adc
sbb
and
fiaddl
push
nop
adc
mov
and
mov
lods
mov
jb
pop
pop
outsb
xlat
sub
sbb
daa
fs
xchg
cmc
mov
int
cmpb
outsl
sti
sbb
add
hlt
pop
outsl
jmp
fdivr
xchg
inc
push
push
fdiv
and
je
xchg
cwtl
sub
iret
adc
xorb
mov
fisubrs
xor
mov
mov
scas
or
aaa
mov
or
cmp
rcll
cmp
adc
sbb
inc
clc
or
data16
sahf
pop
mov
sbb
mov
or
je
mov
push
pop
push
jp
rclb
adc
adc
fisubrl
adc
mov
and
loopne
mull
mov
dec
adcl
xor
fs
enter
xor
icebp
sbb
mov
into
cmpsl
movsb
arpl
ss
in
rcrl
outsb
cmp
mov
fisubrs
sub
popf
and
xlat
aad
lods
mov
dec
idivl
and
mov
adc
enter
inc
jge
pop
mov
pushf
jp
iret
xlat
sbb
push
jecxz
in
inc
arpl
stos
std
aad
sbb
pusha
and
sti
adc
jp
sbb
push
mov
adc
imul
mov
int3
or
jnp
sub
stc
push
mov
in
adc
in
mov
scas
add
ja
loopne
sbb
lock
iret
arpl
dec
outsl
out
insl
fcmovne
pop
push
pop
fstpl
addl
and
vmovddup
push
cmp
mov
lret
pop
push
or
jg
sub
ja
repz
int
fmul
fsubl
fmull
cwtl
insb
popf
sbb
out
cmc
ljmp
xor
jmp
pop
push
std
out
stos
inc
mov
lea
or
cmp
dec
xor
cli
inc
sub
mov
fidivl
pop
xchg
lret
das
mov
enter
push
xor
pop
cmp
adc
addl
xor
aas
icebp
leave
adc
cmp
out
outsl
or
adc
lds
jge
dec
mov
fistl
stos
cmpsb
sti
mov
jae
pop
inc
mov
xor
or
mov
and
test
movsl
int
jp
xor
notb
xor
addb
pop
pop
sbb
sahf
sbb
pop
xlat
mov
pop
push
das
pop
xor
sub
pop
jbe
int
imul
test
in
sahf
jb
push
sbb
cmpsl
jl
sti
push
cmpsb
cmp
mov
push
xchg
scas
and
add
and
rorl
mov
push
or
ds
or
adc
xchg
hlt
xchg
mov
adc
inc
int
sbb
cmpsl
cmp
jno
push
dec
sbb
cmp
pop
jg
xor
mov
int
mov
in
push
jmp
adc
inc
mov
test
fistpl
inc
cld
sub
xchg
lods
and
int3
push
push
mov
jg
jle
cltd
and
cs
dec
data16
fists
sbb
scas
sbb
rcrl
jne
adc
cmp
aaa
icebp
adc
shrl
dec
stos
xchg
pop
fildl
inc
inc
dec
sbb
and
xor
cli
dec
adc
xor
cmp
adc
ret
int
fwait
push
outsl
mov
inc
fdivrl
out
push
or
jnp
pop
outsl
inc
stos
sub
xor
mov
dec
aas
into
sbb
pop
mov
cmpsl
jns
or
sbb
rcrl
outsb
iret
inc
cmp
inc
adc
int
jl
jne
loope
hlt
cmp
mov
dec
in
jbe
cwtl
mov
mov
data16
sbb
mov
push
andl
das
push
bound
xchg
in
sbb
clc
fwait
mov
push
jmp
sub
pushf
mov
sbb
mov
out
mov
out
arpl
clc
xchg
xchg
int
lods
xchg
jbe
sar
les
je
cmc
jne
loop
repz
cmp
es
adc
sub
repz
add
out
xchg
mov
or
sbb
mull
pop
aas
test
cmp
mov
adc
push
or
mov
and
and
lods
test
sub
lods
in
adc
repnz
sbb
pop
int
or
outsl
xor
push
mov
bnd
dec
popf
lahf
enter
inc
pop
aam
xchg
ss
sub
enter
jb
adc
or
sbb
dec
xor
pushf
in
into
or
leave
addr16
add
add
push
sub
pop
shlb
call
loope
int
jnp
cmp
ja
cltd
mov
adc
sub
andb
and
sub
add
fbstp
ret
pushf
movsl
insb
idivl
arpl
mov
call
test
pop
popa
pop
sub
pop
lcall
push
dec
loopnew
pop
push
push
xor
push
imul
clc
repz
lcall
adc
mov
sbb
xor
xchg
or
sbb
lods
test
into
mov
iret
rorb
call
adcb
fisttpll
xchg
xor
xor
sub
imul
imul
push
idivb
mov
pop
mov
icebp
in
lds
int3
stos
jmp
aad
rorb
sbb
sbb
sbb
test
fs
mov
adc
aam
push
or
cld
ss
xchg
ret
pop
mov
xchg
mov
nop
push
inc
nop
enter
pop
and
adc
cmp
xchg
lods
and
jnp
cmp
enter
rcrb
push
xor
int
adc
pushf
int3
shll
mov
adc
sbb
pop
adc
cmp
int3
xor
cmp
out
popf
or
cmp
mov
fcoml
mov
push
out
shll
adc
dec
icebp
data16
cmc
add
scas
ds
push
mov
mov
je
movsl
mov
pop
mov
aas
ljmp
stos
scas
xor
adc
mov
dec
pop
iret
mov
jns
int
sub
arpl
ljmp
aaa
lahf
pushl
cltd
jmp
jo
dec
and
push
add
xor
test
cmp
fwait
adc
mov
inc
push
push
movsb
xchg
aaa
int3
insl
ret
test
adc
push
mov
rep
jge
lahf
cwtl
push
iret
test
push
fbld
fistps
daa
add
pop
dec
xlat
outsl
mov
and
stos
aad
pop
leave
scas
fs
int
mov
iret
xlat
mov
test
jecxz
jge
push
push
data16
fucomp
in
inc
sub
add
add
test
fs
add
sti
icebp
xchg
mov
popf
mov
push
jnp
xor
add
in
mov
mov
adc
call
in
sti
push
aam
xchg
pop
jp
dec
fdivs
je
sarl
jno
add
adc
jg
mov
fbld
jecxz
cmp
jp
andl
mov
mov
or
lods
fidivl
adc
jl
aas
repz
scas
fistpll
lods
movsl
mov
cmp
mov
cli
outsl
test
adc
es
mov
repnz
into
lahf
dec
popf
cmpsl
gs
sbb
int
pop
xchg
cmp
dec
sahf
ror
stos
dec
rorb
mov
arpl
lods
inc
jb
shlb
rorl
mov
les
daa
test
adc
enter
mov
aaa
add
sbb
dec
push
adcb
cmpsl
gs
testl
and
inc
push
dec
int3
xchg
pop
jne
out
pusha
cld
lods
sbbb
adc
mov
data16
xchg
or
cmc
fisubs
xor
inc
imul
call
inc
cwtl
cmp
imul
push
nop
addr16
mov
addr16
shl
xor
and
jmp
ds
xor
icebp
sbb
ja
test
or
adc
addr16
andb
out
add
sub
xchg
pushf
loop
mov
push
mov
and
pop
push
dec
jg
add
addr16
and
sbb
or
cmp
movsb
mov
cwtl
pop
sahf
push
sub
push
pop
pop
les
inc
pushf
adc
push
int
xchg
and
inc
push
mov
mov
repnz
les
jnp
mov
out
inc
mov
je
fstps
xlat
std
andnps
in
push
adc
or
movsl
jb
and
inc
sbb
imull
pop
sar
int
mov
sbb
push
push
int3
ja
xor
ljmp
out
dec
dec
ss
call
fisubl
sbb
int3
test
sbb
mov
in
mov
addr16
sub
sub
jnp
xorb
xor
imul
mov
mov
int3
mov
xlat
in
add
out
xor
inc
mov
rcrl
sbb
icebp
pop
outsl
inc
xorl
fnstenv
mov
sbb
or
scas
fwait
sbb
bnd
push
inc
pop
fcoml
popf
lods
out
dec
rcrb
loopne
lods
ds
xchg
pop
dec
ja
add
int
sub
or
jecxz
stos
xchg
sahf
in
dec
sub
sbb
jo
imul
dec
cli
cmp
dec
push
fistl
incl
inc
pusha
jbe
stos
sbb
lret
lahf
pop
xchg
cmp
and
jnp
popa
repnz
int3
loop
je
sbb
hlt
ret
test
adc
mov
sub
out
insb
cltd
push
mov
hlt
sub
and
inc
gs
int
unpckhps
daa
cmp
pop
mov
shrl
jbe
adc
jae
daa
cli
cmc
fcompl
xchg
adc
adc
out
sbbl
int
ret
out
cmp
ret
fmul
push
inc
or
lahf
or
sahf
fisubrl
xor
sbb
addr16
push
push
sub
enter
xchg
xchg
mov
ficompl
xor
les
imul
sub
sbb
inc
out
jno
mov
addr16
cwtl
mulb
dec
jl
xor
mov
dec
inc
insl
jnp
inc
loopne
cmc
fists
push
and
sahf
or
or
mov
adc
jne
sbb
lods
dec
call
mov
mov
mov
pop
sahf
fstl
test
or
sub
aad
into
mov
sub
mov
insl
pop
in
in
je
sbb
out
xchg
dec
es
std
sbb
je
cwtl
mov
stc
mov
sbb
lret
imul
rorw
andl
adc
stos
fistpl
mov
mov
into
dec
xor
data16
ds
pop
mov
mov
bound
mov
adc
jbe
mov
jo
cld
out
cli
cmpsb
push
mov
push
sub
out
int3
xchg
fisttpll
or
mov
sub
pop
ljmp
adc
outsb
or
jns
lds
xor
mov
push
lods
into
mov
daa
sbb
out
out
adc
dec
cwtl
sub
inc
adc
pop
movsb
cmc
push
jno
dec
jne
cmpsl
in
lahf
sti
dec
xchg
cli
shll
decb
jno
xor
pop
and
sub
lahf
adc
iret
inc
xchg
jge
jo
insb
clc
push
jae
dec
adc
sub
out
lods
dec
js
pop
daa
jnp
sbb
cs
jb
sub
into
hlt
dec
int3
mov
into
ret
imul
sbb
inc
leave
adc
push
xchg
adc
push
lret
fnstcw
or
scas
add
inc
push
leave
in
push
xchg
inc
les
pushf
aas
pop
div
dec
jno
jge
scas
pop
in
adc
scas
mov
jp
into
sahf
jp
clc
fidivs
push
dec
jo
mov
cmp
enter
mov
lods
call
inc
nop
mov
pop
mov
pop
add
add
xchg
sbb
dec
adc
icebp
imull
dec
push
and
xchg
cmc
imul
outsb
or
push
sbb
in
int3
inc
mov
jl
or
shr
or
adc
shrb
gs
aaa
pop
mov
sub
pop
lods
fcmovnbe
lods
push
ficoml
sahf
fstpl
inc
sub
pop
dec
adc
mov
push
out
and
shrb
xchg
push
push
das
adc
mov
aad
negl
mov
sub
pop
ficoms
mov
cmpsb
xchg
fdivrl
bound
clc
or
xchg
repnz
iret
mov
out
jbe
jae
lcall
xchg
in
scas
sbb
fdivrs
cmp
insl
aam
mov
lcall
lock
mov
push
decl
mov
call
sbb
gs
mov
sbb
mov
je
inc
dec
mov
cmp
or
and
mov
xchg
xlat
out
not
call
shlb
cmp
popf
pop
into
push
push
push
andl
aam
or
and
push
push
popf
pushf
ja
test
pop
cltd
aad
jo
std
push
pop
jo
mov
xchg
push
jb
into
mov
pop
or
dec
insl
sbb
outsl
inc
lods
stc
mov
inc
cmpsl
aaa
sbb
rclb
sub
repz
sbb
pop
int
lods
adc
mov
enter
add
mov
mov
aas
sbb
xor
pop
bswap
dec
mov
std
sub
outsb
dec
cmp
or
decb
insb
sbb
in
pushl
jp
invd
mov
enter
or
jnp
int
in
mov
data16
mov
andb
add
lock
into
mov
mov
jne
repnz
jbe
push
into
sub
and
xchg
jmp
push
pop
pop
jbe
jo
cmp
out
lods
mov
push
mov
adc
nop
xor
ljmp
out
adc
fsubp
xchg
out
xor
pop
les
ror
fbstp
notb
pop
gs
negl
mov
out
out
jge
mov
xor
pop
lock
int3
pop
dec
call
xchg
jmp
repz
sub
sbb
stos
mov
add
shl
pop
inc
icebp
imul
gs
push
inc
inc
push
pop
mov
rclb
push
addr16
inc
data16
ltr
mov
aam
and
sub
or
push
into
xlat
addb
pop
out
and
lahf
sub
popf
rolb
fcomi
mov
cmc
test
sub
sub
das
ret
sbb
daa
roll
push
fisttpll
out
sbb
add
ds
push
jne
adc
loope
mov
enter
cmp
mov
sub
div
and
push
stos
out
dec
or
mov
lds
xchg
aad
xchg
mov
aas
xor
ficoml
into
jle
push
in
pop
jb
sbb
movsl
aam
shrb
rcrl
inc
mov
pop
mov
jg
in
inc
push
fisttpll
ss
stc
jno
sbb
mov
xorl
pop
cmp
pop
subl
dec
pusha
or
in
loope
out
lret
adc
xorl
fadd
into
int
cs
pop
jno
and
fwait
push
fsubrl
sbb
or
stos
and
sti
sub
outsl
mov
lods
pop
in
mov
aas
mov
subb
sub
addb
fsubrs
adc
shlb
jl
jbe
pop
mov
push
roll
cmp
in
cmpsl
lock
push
cmc
mov
or
mov
addr16
cmp
lret
dec
sub
adc
loopne
push
xchg
adc
jmp
movsb
outsb
push
lret
loop
hlt
add
insb
and
sub
aas
inc
cmpsl
rorb
imul
pop
or
lcall
movsb
mov
dec
add
test
adc
cmp
gs
cmp
shrl
or
test
sbb
xor
push
cmpsl
int3
stos
sbb
cwtl
pop
adc
adc
add
mov
int
inc
scas
es
shrl
mov
push
imul
push
adc
dec
xchg
and
rcrl
dec
sbb
sarb
in
lea
lods
sub
push
inc
pop
sbb
sbb
adc
jnp
pop
ss
adc
adc
cs
mov
outsb
cld
int
inc
fstpt
insb
push
push
sbb
sbb
outsl
add
adc
loop
pop
jle
xor
nop
mov
test
addr16
adc
pop
lcall
sbb
sub
xchg
test
je
shll
cmp
jo
dec
arpl
rclb
cwtl
adc
mov
cmp
int
mov
in
imul
inc
sub
push
and
xchg
xor
inc
fsubrl
adc
or
adc
in
mov
imul
cmpsb
mov
ret
fcom
jnp
dec
pop
mov
jno
stos
lds
inc
sbb
xchg
dec
push
sti
pop
cmpsb
jo
mov
mov
int3
leave
xchg
fcoml
jle
outsl
dec
iret
ret
push
js
mov
mov
push
popw
pusha
movsb
jle
cltd
pcmpgtd
fisubl
in
mov
pop
movsl
or
adc
jp
and
decb
push
jl
jno
stos
iret
xchg
mov
adc
xchg
mov
icebp
arpl
adc
fbld
sub
cli
aam
mov
out
pop
out
das
dec
mov
inc
or
xorl
add
push
popl
out
push
adc
ds
pop
outsb
push
shrb
or
dec
jmp
fwait
mov
or
mov
xchg
add
jnp
movsl
ret
sub
jmp
loope
shrb
into
fcmovnbe
pop
shlb
cli
and
and
ret
scas
imul
out
xchg
adc
mov
adc
mov
push
into
cs
dec
add
jne
mov
repnz
xlat
lods
icebp
loope
shll
test
inc
mov
ret
rcrb
add
or
jmp
ret
cld
cmc
mov
orb
fs
jl
adc
jbe
outsl
dec
pop
dec
stc
test
fwait
add
jmp
aad
mov
pop
dec
dec
sbb
jbe
ljmp
fucomp
call
cmc
cmp
and
icebp
push
dec
test
in
sti
hlt
mov
adc
adc
lea
lea
cmpsb
dec
inc
aaa
xchg
or
daa
addr16
mov
jg
and
or
loop
add
mov
and
testb
push
call
leave
jbe
mov
push
mov
stc
out
pop
adc
fdiv
pop
add
cmp
cmpsl
cmc
data16
adc
test
xor
ret
imul
pop
jmp
sbbb
lock
insb
cmp
inc
popa
rcrl
push
cwtl
enter
adcl
push
out
xchg
lret
mov
lds
inc
nop
adc
jl
je
xor
mov
xchg
stos
int3
inc
sbb
cmc
jg
jg
sti
enter
pop
in
cmp
ja
mov
negb
jae
je
cld
cmp
push
pop
lret
inc
mov
fisubl
xchg
sbb
add
adc
adc
inc
jo
adc
shll
out
sbb
pushf
push
loop
jnp
and
pop
inc
scas
repz
or
adc
jb
pop
loopne
hlt
jmp
int3
stos
add
mov
mov
inc
loopne
sbb
add
andl
frstor
rolw
fxam
push
outsl
ljmp
adc
imull
fisubs
ljmp
dec
push
sahf
cmpsl
mov
xchg
push
jecxz
lahf
push
cmp
ja
int
in
pushf
dec
cwtl
rol
int
xchg
dec
sub
loop
push
or
scas
dec
mov
push
xor
xchg
or
cld
dec
andl
jecxz
arpl
in
movsb
jae
ficomps
push
fs
cs
sub
jbe
ss
pop
aas
mov
icebp
aaa
dec
fs
adc
xchg
jne
jae
aad
dec
fs
jae
mov
lahf
and
inc
mov
lea
xor
xor
adcl
mov
aam
cli
cmp
test
ljmp
and
imul
cmp
rorl
lcall
rorb
in
mov
stc
dec
push
dec
jmp
xor
ret
ja
jb
inc
and
jnp
and
cmpsl
jge
or
jl
sub
xchg
adc
jae
mov
arpl
add
int3
movsb
push
rcrb
mov
jo
iret
cmp
insb
iret
mov
lcall
mov
inc
cmp
and
out
in
enter
mov
sub
push
and
mov
and
iret
sub
je
dec
dec
cmp
into
mov
lds
cld
adc
test
mov
push
mov
test
repz
jno
add
sbb
inc
gs
add
clc
movsb
adc
fs
sti
or
push
pop
jg
jns
cmp
cld
rcll
lods
push
xchg
jle
fs
and
lods
ss
fcmovu
pop
cmpsl
clc
faddp
mov
cltd
and
mov
jae
sub
pop
cs
jl
mov
dec
int3
fs
inc
and
out
repnz
xchg
adc
addr16
pop
mov
int3
outsb
test
test
scas
mov
notl
loope
sbb
mov
leave
icebp
xchg
or
pop
mov
es
fisttpll
add
mov
jno
scas
add
mov
int3
rorl
imul
sbb
and
ret
sub
ja
sbb
jo
loopne
push
daa
std
nop
pop
cmpsb
inc
shl
insb
aam
aam
cmp
aam
out
addr16
out
pushf
pop
dec
add
pop
das
pop
cmp
gs
adcl
fisubrs
hlt
dec
xchg
int3
jns
sbb
push
aaa
or
pop
inc
cwtl
push
nop
mov
call
mov
addr16
xchg
push
xchg
mov
jo
pop
dec
mov
and
vmwrite
cmp
inc
cmp
push
add
mov
jns
add
outsb
jl
inc
mov
adcl
add
add
into
scas
icebp
push
ja
cmp
xchg
add
mov
sahf
clc
adc
pop
mov
mov
daa
inc
adc
mov
jecxz
or
pop
test
hlt
and
mov
sbb
mov
stos
mov
incl
mov
inc
inc
cmp
or
imul
and
test
test
ret
mov
aam
pop
std
mov
add
notl
mov
mov
lret
int
mov
scas
arpl
nop
hlt
ja
inc
and
into
clc
mov
and
in
nop
and
aam
fistps
cmpsl
shlb
mov
jmp
cmp
jp
test
adc
sbb
cmp
mov
adc
mov
aam
mov
iret
in
dec
push
sub
js
adc
dec
jecxz
dec
push
imul
ds
mov
movsl
cmp
test
sbb
repz
fisubl
int
push
movsl
cli
nop
in
add
into
pop
push
sbb
or
adc
lock
lahf
mov
cmp
cmp
cmp
dec
pop
xor
or
xchg
jecxz
sub
cmpsl
jns
or
adc
fbld
cmp
shll
fistl
rolb
sbb
sbb
sti
pusha
and
dec
cwtl
rorb
inc
mov
pop
arpl
jo
mov
pusha
mov
mull
add
mov
out
add
pop
in
add
fwait
jne
sub
mov
iret
sub
bsf
aam
mov
sbb
nop
ljmp
cmp
sub
push
cmp
sbbb
lcall
fs
pusha
ljmp
sahf
xor
sbb
mov
ret
imul
notl
ret
sub
repz
adc
xor
adc
push
xchg
cwtl
outsl
iret
roll
pusha
gs
add
loop
cmp
inc
test
and
push
repz
adc
jle
gs
sbb
xchg
mov
add
enter
push
sub
adc
testb
xor
int3
mov
and
fisttps
add
sbb
xchg
ret
out
div
xchg
mov
lods
lret
xchg
daa
cld
int
into
or
movsb
pop
out
pop
rcll
arpl
stc
cltd
mov
push
and
loopne
stos
mov
cmp
sbb
andb
xchg
or
fcoms
iret
push
sbb
push
cmc
xor
shlb
fcmovnbe
mov
subl
inc
cmp
lret
das
xchg
in
jecxz
sbb
imul
sub
mov
push
imul
and
mov
in
stc
test
fsubrl
lock
int
push
js
cmp
jno
cs
test
test
popa
xchg
sbb
int
enter
dec
ss
add
mov
cmpsb
xor
sub
sti
sub
cltd
scas
and
divl
xor
out
xchg
popf
loopne
ss
push
jb
mov
jns
inc
or
inc
imul
xchg
push
enter
xchg
jmp
pop
jge
inc
mov
cmpsb
sub
fisttpl
sub
push
push
or
adc
test
mov
mov
ja
std
add
ret
and
mov
push
leave
xchg
std
pcmpgtd
mull
shll
push
jle
test
jae
imul
jae
test
into
pop
adc
inc
mov
es
sbb
add
and
jg
movsl
jl
fldt
dec
dec
push
pop
pusha
shll
mov
decl
mov
sbb
lea
dec
adc
mov
fwait
cmc
jno
mov
mov
out
test
imul
mov
xlat
and
sbb
cmp
cmpb
mov
punpckhdq
push
jp
fwait
mov
stos
imul
mov
or
sub
add
and
and
lds
in
xchg
cmc
or
sub
xor
pop
mov
clc
adcb
or
inc
cmpb
test
add
jg
shrb
scas
jle
pop
test
adc
sbb
mov
xor
push
cld
inc
iret
mov
scas
cmp
inc
daa
push
repnz
add
inc
loopne
shll
es
sub
dec
inc
shrl
jbe
adc
jle
mov
aad
adc
aas
jae
stc
lret
xor
ss
push
push
push
cmp
or
addr16
insl
pop
pop
sbb
xlat
sahf
lret
xchg
rcrb
sbb
pushf
or
add
rolb
nop
loope
arpl
mov
loopne
xchg
sbb
pusha
sub
sbb
pop
sbb
outsl
cmp
ds
pop
fdivr
iret
add
aas
or
mov
jmp
les
jns
ja
mov
xchg
add
adcb
sub
scas
insl
jmp
rcrl
push
fstpt
sbb
aas
mov
dec
ret
into
test
loopne
and
jno
xchg
clc
mov
mov
cmpsb
cmp
imul
lahf
pop
repz
sbb
roll
int3
cmpsl
in
int
sub
out
addr16
dec
mov
iret
jae
rcr
mov
adc
aam
stc
out
push
push
lock
andb
xchg
adc
xor
enter
xchg
or
lods
jmp
sbb
int
fwait
cmp
mov
insb
ret
xchg
sub
cmp
iret
fxch
out
jb
xor
and
dec
js
out
int
and
stos
push
andb
pop
sbb
push
xor
adc
push
into
loop
cmp
into
lret
xchg
dec
int3
nop
aad
sti
gs
cmp
imul
enter
dec
cmp
shl
jns
aas
and
xlat
pop
outsb
inc
dec
test
sbb
inc
dec
jae
inc
and
out
retw
mov
jmp
int3
xchg
or
push
xchg
fnstsw
shl
lods
call
out
int
hlt
lahf
xchg
repnz
pop
xlat
sbb
or
adc
cmpsl
iret
imul
lea
in
jno
pop
outsb
js
xchg
jmp
mulb
pop
inc
outsl
hlt
dec
mov
mov
int3
mov
loop
push
pop
out
lcall
add
jbe
jb
popf
je
pop
jg
fptan
pop
mov
int
mov
xchg
imul
inc
inc
mov
in
adc
jbe
xchg
icebp
arpl
xchg
gs
push
mov
mov
dec
add
cs
int
xchg
jge
icebp
iret
or
es
mov
sbb
es
bound
dec
movsl
pop
test
in
mov
scas
or
inc
sbb
insb
test
jmp
insb
add
test
sbb
int
and
cmpsb
mov
mov
ror
sbb
add
add
je
adc
inc
mov
lahf
add
in
into
sub
xor
aas
outsl
mov
cmp
jl
enter
cmp
xchg
jne
negb
xor
xchg
jmp
adc
test
fmulp
sbb
adc
les
adc
int
in
mov
and
call
int
sub
add
xchg
mov
out
bndstx
es
addr16
leave
jno
push
sub
repnz
insb
leave
sti
into
leave
jo
mov
mov
sbb
xor
or
xor
insb
adc
or
lahf
shll
cmp
mov
ret
inc
jg
push
mov
or
adc
sbb
lea
arpl
jg
adc
or
mov
iret
and
cmp
fstps
pop
aad
jns
push
pop
hlt
pusha
xor
mov
adc
xchg
shl
mov
adc
or
rcl
push
loope
add
xor
adc
sbb
test
mov
adcl
lret
jmp
icebp
es
add
add
cli
cmpsl
add
mov
add
aaa
adcb
test
dec
sti
pmaxsw
jp
test
pop
int
clc
lahf
ret
inc
data16
push
fcmovnbe
push
stos
sbb
adc
add
push
cmp
mov
sar
adc
loop
out
fistps
inc
ss
add
in
ds
arpl
int3
cmpsl
pop
hlt
jl
adc
mov
stos
inc
pop
sbb
ret
imul
sub
xlat
xchg
jge
cmp
mov
mov
adcl
push
aam
popa
sbb
iret
adc
mov
or
jl
sub
jo
jg
mov
sti
push
mov
sub
cmpsl
sub
add
jecxz
pop
rorl
adc
jbe
dec
jmp
sti
hlt
in
leave
gs
fimull
mulb
pop
dec
int
xchg
mov
out
pop
jecxz
nop
lods
call
mov
hlt
adc
loop
mov
sbb
add
movsl
int3
dec
and
aaa
stc
pop
mov
into
fists
fs
clc
int3
or
lds
mov
in
inc
mov
mov
lods
mov
fdivl
rcrl
sbb
xchg
lods
fistl
pop
clc
pop
or
int
jae
call
jmp
int3
inc
dec
mov
mov
rorl
test
clc
es
pop
rorl
add
dec
xchg
pop
push
addr16
sbb
mov
and
jecxz
push
xchg
ja
push
jecxz
xchg
bound
sub
mov
xchg
mov
out
jl
fisttpll
loopne
push
push
sarw
mov
ret
inc
or
lret
mov
xchg
dec
jp
loop
mov
out
outsl
out
dec
and
pop
jge
and
mov
sbb
imul
mov
mov
testl
arpl
pushf
pop
fcmovnbe
xchg
cld
pop
mov
lock
mov
lret
jmp
and
testb
fmuls
jg
sbb
imul
ud2
push
test
std
sub
dec
or
rclb
or
dec
dec
sbb
inc
jl
insl
scas
sbb
jo
adc
or
aas
lock
adc
and
xchg
scas
pop
and
push
pop
cmc
sti
dec
shlb
lret
or
inc
xchg
into
movsl
push
mov
rcll
es
push
adc
pop
push
adc
mov
icebp
inc
out
mov
enter
insl
stos
push
movsl
xor
push
scas
dec
xor
jae
push
loopne
sahf
push
dec
push
out
cmc
cmp
and
push
jp
ret
inc
xchg
outsb
mov
jne
adc
push
sbb
fmuls
cmc
iret
push
add
mov
cmp
lods
sbb
out
push
daa
adc
lock
dec
add
xchg
aad
iret
dec
movsl
outsb
jae
mov
lods
popl
leave
push
jge
cmc
mov
pop
push
lahf
adc
imul
movsb
dec
mov
out
sbb
xlat
lret
mov
and
in
sbb
sahf
xchg
xchg
gs
js
adc
ds
or
or
push
inc
leave
test
xchg
xor
pop
adc
pop
sub
xor
mov
xor
sbb
add
les
xchg
sbb
cmc
clc
subb
loop,pt
jo
adc
pop
mov
adc
call
mov
fidivrl
mov
dec
iret
les
inc
push
inc
add
mov
out
push
outsl
cli
or
enter
jmp
sbb
and
push
cmpsb
or
mov
and
sub
and
pop
xchg
cwtl
sbbl
nop
jmp
xor
fwait
testb
fst
loop
push
cmp
add
mov
int3
pop
ss
daa
cmp
popf
data16
or
js
pop
jmp
cmp
mov
and
sbb
push
daa
mov
fwait
cmc
lea
mov
push
push
ret
mov
idivb
cmp
daa
lcall
adc
jl
push
pusha
or
and
xchg
dec
movsl
add
pop
cmpsl
inc
or
iret
jbe
mov
js
pop
fmulp
xor
mov
pop
ret
repz
jno
or
xchg
push
data16
test
aas
pop
pop
out
push
nop
fnstsw
or
cmp
popa
into
dec
sbb
ret
out
out
into
adc
data16
imul
pop
mov
mov
xlat
pop
pop
inc
ret
or
xor
and
add
int3
adc
stc
das
push
icebp
adc
cmp
ficompl
daa
xchg
cmp
pop
jnp
jmp
fisttpll
imul
pop
loope
jmp
sti
and
cmpsl
xchg
mov
jecxz
or
jmp
mov
aam
std
iret
sub
mov
sbb
in
test
rcll
iret
add
add
push
add
pop
ja
int
cld
mov
mov
loop
ret
or
addr16
xor
int3
add
sbb
in
ja
ja
adc
xchg
ljmp
gs
xchg
out
fs
inc
push
dec
in
das
in
xor
xchg
or
div
adc
rcrl
adc
lea
iret
fcoml
jg
or
mov
xchg
dec
push
adc
adc
xchg
out
jbe
xchg
and
sbb
inc
sub
push
hlt
cmp
jecxz
lods
into
mov
aas
adc
arpl
cmp
lret
rorl
and
sti
loop
jle
mov
mov
xor
je
jg
inc
frstor
iret
clc
push
pop
inc
sub
in
lods
adc
aad
push
enter
xchg
int
shl
stc
repnz
and
xor
sbb
popa
jnp
jle
xchg
mov
stos
dec
lods
lret
mov
or
sarb
into
hlt
inc
or
push
imul
mov
inc
aas
iret
or
mull
mov
inc
sbb
aas
shlb
dec
or
mov
ljmp
adc
push
xchg
xchg
sbb
push
imul
dec
repnz
out
xchg
mov
movsl
push
mov
inc
cmp
gs
ja
lock
daa
scas
loop
add
xchg
imul
sahf
int3
sbb
cmpsb
into
jo
adc
mov
sahf
pop
nop
dec
test
pop
jp
call
cli
xchg
fwait
shl
lret
fbld
jae
mov
sbb
inc
into
lods
sar
or
xor
insl
lcall
inc
int3
or
xlat
ss
mov
add
mov
sbb
rcrb
push
pop
out
das
daa
adc
jge
inc
mov
int3
mov
fldt
mov
inc
push
adc
ss
sub
fstl
sti
fs
movsl
jg
ss
nop
hlt
iret
int3
mov
xchg
loope
repz
cmp
sbb
or
clc
and
addr16
mov
add
fcoml
mov
sbb
add
and
sti
ljmp
push
scas
mov
jg
mov
lahf
sahf
inc
jno
push
push
nop
cwtl
lret
mov
or
sete
jg
push
fs
sbb
lods
xchg
mov
adc
pushl
test
into
pushl
jmp
iret
and
fmul
ja
pop
sbb
shll
inc
sub
jae
cld
adc
pmovmskb
mov
push
xor
jp
push
dec
adc
cmc
xchg
sti
int3
hlt
pop
pop
jo
daa
fcmove
and
inc
in
pop
sub
outsl
into
aad
fs
rep
jbe
push
xchg
in
in
xchg
fidivs
sbb
mov
push
sub
loope
cmp
pop
les
dec
jl
lahf
adc
stos
jb
stos
and
fisttpl
popf
jno
daa
sub
mov
shlb
iret
mov
cmp
gs
stos
push
mov
push
cmpl
shlb
mov
scas
jae
rorb
leave
ror
pushf
mov
iret
push
dec
xor
mov
int
xor
test
xchg
dec
jne
lods
xchg
gs
jl
movsb
push
push
subb
imul
sbb
ljmp
pop
aas
out
cmpb
arpl
push
sbbb
cli
loopne
out
jno
ret
xchg
adc
xchg
test
mov
cmpsl
movsb
xor
xchg
adc
add
cmp
insb
adc
aam
hlt
xchg
xor
push
int
popf
cwtl
fisubrs
js
mov
inc
dec
pop
add
sub
data16
iret
push
mov
sbb
dec
dec
inc
std
notl
cmp
shrl
int
xlat
sbb
lods
jp
xchg
mov
xlat
dec
sahf
dec
ljmp
gs
mov
aaa
in
out
mov
int3
pop
std
mov
ret
rol
outsb
pop
in
loopne
ja
clc
inc
mov
mov
pop
mov
daa
movsl
lcall
mov
fwait
in
jne
cmp
and
pop
dec
call
and
adc
push
xlat
push
int
ret
jae
xlat
mov
xchg
sarb
fdivrs
in
ror
jg
xchg
fwait
gs
popa
mov
sub
mov
xchg
in
xchg
inc
jmp
cltd
cs
fiadds
enter
insl
je
pop
aaa
mov
pop
dec
shlb
mov
inc
sbb
pop
decb
out
push
lcall
jnp
in
dec
mov
shl
nop
nop
jno
scas
adc
bound
jl
iret
push
ret
pop
adc
mov
mov
mov
and
iret
jecxz
fnstenv
sti
add
out
pusha
push
ficoml
or
jecxz
sbb
adc
mov
in
loopne
pop
pop
repnz
ja
add
outsl
inc
rcrl
lods
popf
and
inc
pop
ficompl
add
dec
inc
mov
ss
cs
out
insl
adc
sbbl
hlt
pop
cli
clc
mov
pop
mov
cli
xor
push
shll
dec
or
add
push
add
or
imul
popa
push
add
add
bound
bound
sbb
mov
push
pop
rcrl
adc
cli
sub
mov
mov
jne
pop
jo
sbb
xchg
bnd
call
or
scas
and
sbb
mov
jg
jg
and
dec
push
addl
addr16
out
cmp
mov
das
mov
xor
mov
test
xchg
sbb
mov
popa
xchg
sbb
pop
add
popa
and
sub
fstpl
pop
fisttps
fmull
je
add
cs
addr16
rorl
and
sbb
in
xchg
pop
adc
mov
mov
das
into
in
lods
cmp
stos
stos
push
arpl
sub
jecxz
cmpsl
sbb
add
movsb
adc
arpl
adcb
repz
jbe
das
fxch
gs
pusha
shll
sti
lahf
test
push
push
pop
iret
shl
lds
dec
or
lds
loopne
and
push
adc
movsl
pop
out
mov
sub
mov
mov
push
mov
shrl
xchg
gs
test
vpcmpistri
mov
scas
scas
lods
cmpsb
fsubrp
and
shr
fimull
push
adc
jnp
cmp
insb
fsubrl
sbb
adc
lret
cmp
adc
out
mov
scas
gs
ss
aad
dec
pop
cs
punpckhbw
stos
and
xor
gs
jno
outsl
inc
scas
pusha
sbb
cmp
int3
loop
and
mov
fld
sbb
mov
movsb
dec
aaa
push
cmp
shlb
stos
lret
jp
mov
outsl
mov
shlb
jecxz
lret
roll
inc
xorb
inc
in
icebp
mov
mov
orl
add
sbb
mov
out
bound
inc
sti
test
cmp
push
mov
jecxz
push
inc
xchg
dec
test
xchg
inc
js
lcall
or
adc
ja
cld
sbb
inc
and
inc
adc
lods
jb
sub
lock
test
dec
insl
loop
sbb
clc
jae
into
daa
push
in
pop
imul
xchg
adc
add
dec
or
clc
into
je
adc
adc
push
sub
mov
sarl
dec
int
jae
pusha
sahf
in
cmp
cmp
pop
ret
fsubr
cwtl
pop
adc
push
cmp
int3
movsb
sbb
std
pop
mull
push
out
das
aas
xor
lret
xlat
pop
adc
pop
lea
sbb
xor
imul
fnstcw
nop
pop
sub
xlat
adc
and
aad
insl
push
jae
adc
mov
and
hlt
clc
mov
xchg
rolb
mov
imul
xor
inc
sub
data16
cmp
sub
sbb
ret
or
push
add
addr16
push
push
cli
nop
add
into
lcall
mov
out
gs
movsl
je,pt
ja
adc
adc
mov
nop
push
sub
inc
lock
cltd
jecxz
xor
pop
lods
movsb
cwtl
clc
mov
pushf
popa
rorl
popa
inc
insb
test
and
loop
xorb
repnz
data16
pop
sub
or
cmp
repnz
jns
jnp
dec
jl
sbb
xlat
lret
adc
movsb
or
icebp
adc
xchg
lds
scas
sbb
inc
aam
dec
rclb
mov
push
enter
insl
aad
imul
jns
sarl
adc
dec
push
sbb
clc
pushf
xor
adc
add
psllw
lods
addr16
cld
movsl
movsb
aaa
fwait
sub
mov
add
jl
repnz
das
mov
stos
adc
sub
sub
shll
mov
imul
aad
sbb
gs
adc
push
jns
jnp
mov
aaa
add
pop
popf
mov
inc
mov
scas
call
pop
mov
adc
icebp
cmpsl
push
into
push
pop
jns
data16
pop
arpl
js
adc
push
iret
sbb
and
aam
ss
xchg
sbb
out
lds
aas
cmp
insb
pop
movsb
dec
push
in
xchg
fdivs
cwtl
jle
or
int3
adc
scas
dec
or
sbb
aaa
push
sti
xor
shll
imul
dec
ljmp
fwait
inc
pushf
jmp
mov
add
xor
xor
cltd
clc
aam
lret
mov
and
push
addr16
xor
mov
adc
scas
shl
cmpl
sbb
lods
sbb
int
stc
fs
fs
outsb
xchg
ja
fdivp
in
jl
int
fstpl
and
insl
lcall
cmp
ret
sbb
notb
shl
xchg
push
add
and
push
leave
scas
ds
notl
sbb
dec
mov
jg
sbb
mov
and
out
fcomps
pop
sahf
ret
iret
push
cmp
jnp
icebp
sub
inc
daa
gs
dec
inc
hlt
loope
out
mov
or
sub
ret
adc
xchg
stos
popa
pop
arpl
loop
dec
enter
sti
dec
popa
mov
gs
mov
lretw
cmpsl
test
sub
pop
push
je
test
out
rol
push
xor
lahf
xchg
fildll
aam
sbb
outsl
imul
ds
inc
push
xchg
or
xchg
adc
dec
gs
pop
mov
mov
divb
je
lea
in
sbb
mov
push
sub
insl
sbb
xchg
dec
cwtl
lahf
pop
mov
sbb
xchg
std
mov
jmp
mov
adc
jmp
push
xchg
xchg
cmp
lahf
stos
imul
push
dec
iret
sub
out
lea
fnstcw
push
imul
sub
add
extrq
in
or
sub
sbb
xlat
jle
adc
push
loope
inc
arpl
mov
in
dec
sub
push
movsb
loope
enter
fidivl
outsl
and
iret
pusha
hlt
xchg
gs
cmp
inc
push
sub
cltd
mov
or
jae
sub
push
and
adc
enter
xor
sbb
leave
pop
clc
loope
out
rclb
stos
ffree
mov
jmp
stos
popf
aas
and
cmp
movsl
and
gs
das
pop
nop
mov
scas
jl
lods
pop
pop
out
push
xchg
cmpsl
enter
cmp
scas
and
mov
inc
repnz
mov
push
fsubs
out
inc
cmp
sub
in
or
adc
add
sbb
lcall
sbbb
pop
fs
xchg
enter
aas
fsubrl
loopne
push
add
mov
inc
fdivrs
daa
xchg
je
inc
push
out
pop
js
push
lods
loope
dec
inc
mov
mov
dec
mov
mov
aas
cmc
loop
daa
stos
daa
inc
sbb
in
jl
mov
daa
adcb
push
jecxz
imul
jl
mov
loop
in
lcall
mov
jbe
adcb
pop
repnz
insb
jg
and
into
add
mov
aam
dec
adc
aad
popf
or
maskmovq
negl
and
mov
mov
pop
lahf
adc
test
mov
repnz
icebp
jnp
into
xor
lcall
inc
aam
jg
cmpsl
push
jg
inc
inc
mov
push
pop
xchg
imul
mov
ds
and
jg
push
sbb
call
inc
mov
cli
fisubrs
ret
cmc
mov
xchg
push
into
pop
adc
push
dec
mov
pop
rcrl
test
xor
ja
mov
cmpsl
rcll
insb
dec
cmc
push
rolb
imul
inc
and
int
inc
add
adc
inc
jb
cld
out
lods
adcb
lahf
sbb
sub
aas
subb
add
cmpsb
or
ds
mov
add
mov
dec
inc
mov
xchg
dec
jle
adc
repnz
add
inc
inc
push
inc
push
dec
xor
cs
insb
add
add
dec
outsb
imul
inc
arpl
add
addr16
outsb
jne
push
popa
insb
jne
inc
add
add
addr16
jb
popa
je
dec
gs
add
add
addr16
outsb
jne
push
popa
insb
jne
push
add
add
jns
je
arpl
imul
gs
push
add
add
dec
jo
outsb
push
inc
dec
popa
outsb
popa
addr16
add
add
push
jne
jb
push
gs
imul
jne
add
add
inc
gs
imul
outsb
je
outsl
jne
arpl
add
inc
fs
arpl
jae
inc
insb
insb
outsl
ja
fs
arpl
dec
inc
push
dec
inc
dec
xor
cs
insb
add
add
push
jns
je
insl
push
imul
insb
gs
imul
dec
outsl
popa
fs
imul
add
add
push
imul
jb
add
add
je
imul
bound
gs
add
add
inc
outsb
je
jb
jb
je
arpl
push
arpl
outsb
add
add
inc
jb
popa
je
inc
imul
jns
add
add
inc
gs
imul
insl
popa
je
outsl
outsb
inc
jns
popa
outsb
fs
add
add
dec
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
add
inc
gs
jb
jbe
push
jns
gs
add
add
popa
fs
imul
gs
outsl
jbe
inc
imul
jns
add
add
push
popa
imul
jo
imul
dec
jae
popa
fs
jb
je
push
je
add
add
gs
inc
imul
jne
je
inc
jns
gs
outsl
push
imul
add
insb
jae
jb
jo
push
add
add
inc
gs
imul
add
push
gs
outsb
jbe
jb
outsb
insl
outsb
je
popa
jb
popa
bound
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
inc
gs
je
imul
inc
add
add
dec
outsb
je
jb
outsl
arpl
fs
outsb
arpl
insl
outsb
je
add
add
je
imul
bound
gs
add
add
inc
gs
push
dec
outsb
outsw
add
add
je
gs
jo
popa
je
inc
add
add
dec
gs
jo
jb
popa
je
add
add
push
gs
je
jbe
outsb
je
add
add
je
popa
je
inc
outsl
jb
popa
je
add
add
inc
gs
gs
inc
imul
jae
popa
insb
imul
add
add
jne
push
jns
je
insl
dec
outsl
arpl
gs
add
add
dec
outsl
arpl
inc
jb
add
add
outsl
bound
push
imul
inc
push
xor
cs
insb
add
add
inc
gs
jb
jns
imul
add
push
arpl
jo
jns
add
inc
gs
jns
inc
outsl
insb
outsl
jb
jb
jae
add
add
inc
gs
imul
jb
popa
fs
jb
arpl
jae
add
add
ja
jo
imul
add
je
arpl
insb
insb
dec
outsb
outsw
add
add
je
outsb
jne
add
inc
gs
popa
jo
jne
add
add
dec
jae
imul
jae
popa
addr16
add
add
dec
outsl
popa
fs
imul
add
je
imul
add
jae
dec
gs
popa
addr16
add
add
dec
outsl
jbe
push
imul
add
push
gs
insb
addr16
je
insl
push
gs
inc
add
add
je
arpl
insb
insb
push
outsl
jae
add
add
je
popa
jb
outsb
je
add
push
outsb
fs
gs
popa
addr16
add
add
push
gs
imul
outsb
add
add
dec
jae
insb
addr16
jne
je
outsb
inc
push
add
add
push
outsb
imul
add
add
je
outsl
arpl
add
add
inc
push
js
push
add
add
je
outsl
jo
imul
add
dec
jae
imul
popa
bound
add
add
jae
gs
push
popa
jb
insl
gs
jb
dec
outsb
outsw
push
add
add
outsb
fs
gs
popa
addr16
add
add
dec
popa
jo
imul
imul
push
gs
imul
outsl
outsl
imul
add
dec
xor
cs
insb
add
add
gs
dec
bound
arpl
add
dec
imul
add
inc
gs
insb
imul
add
push
gs
imul
outsl
jb
add
add
gs
je
push
popa
insb
gs
add
add
gs
je
inc
imul
add
arpl
insb
add
add
je
je
arpl
bound
arpl
dec
push
push
inc
push
push
cs
insb
add
add
pop
pop
jae
je
popa
jo
pop
je
jo
add
add
aas
aas
xor
gs
imul
inc
inc
inc
pop
pop
add
add
pop
pop
jo
pop
arpl
insl
outsl
fs
add
ja
jae
arpl
add
add
jb
push
add
addr16
popa
imul
add
pop
gs
outsb
outsl
add
add
aas
aas
pop
push
inc
pop
inc
pop
push
inc
pop
inc
pop
add
add
imul
outsl
arpl
add
ja
jae
outsl
jne
add
add
popa
insb
insb
outsl
arpl
add
pop
inc
js
push
push
js
gs
imul
pop
ja
jae
arpl
add
dec
dec
inc
xor
cs
insb
add
add
dec
outsb
imul
add
add
push
je
imul
inc
dec
push
dec
inc
add
add
push
popa
jae
dec
gs
push
gs
insb
insb
outsl
arpl
add
push
push
dec
dec
dec
cs
insb
add
add
jb
jne
jb
push
popa
insb
jne
inc
add
orb
add
add
sbb
add
adc
add
inc
xchg
add
sub
add
push
xchg
add
mov
add
add
add
add
or
add
les
add
mov
xchg
add
add
add
orb
add
adc
add
push
add
test
add
rorb
add
mov
or
add
add
cmpsb
or
add
or
add
or
add
or
add
add
add
or
add
or
add
add
and
add
into
or
add
add
cmp
add
adc
add
mov
add
xor
add
mov
or
add
add
pop
or
add
or
add
or
add
or
add
add
lcall
add
add
pusha
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
add
add
or
add
or
add
add
or
add
inc
or
add
add
mov
add
test
add
xchg
or
add
or
add
or
add
add
add
cmpsb
or
add
or
add
or
add
or
add
add
orb
add
add
or
add
or
add
or
add
or
add
add
add
or
add
cmpsb
or
add
inc
or
add
jp
add
add
add
cmp
add
pusha
push
add
or
add
or
add
decb
add
out
or
add
dec
push
add
adc
add
push
push
add
and
add
inc
push
add
add
add
pushf
push
add
mov
add
scas
push
add
add
add
into
push
add
add
inc
ret
ret
cmp
dec
int3
mov
push
sub
ljmp
xchg
cltd
cmpsl
adc
mov
bound
pop
bound
ffreep
and
adc
adc
xor
adc
push
add
lret
aas
test
and
cwtl
mov
lds
dec
adc
xchg
fisubrl
lock
inc
iret
pop
dec
mov
xchg
and
add
or
fcmovbe
jb
loop
int3
cmpsl
cmp
fwait
sub
sti
cld
and
out
scas
jno
aad
int3
mov
gs
push
xchg
fcompl
inc
test
gs
add
or
xchg
push
shll
lds
xchg
lcall
pop
flds
int3
sahf
pop
inc
test
fwait
jnp
and
sbb
sbb
into
into
lcall
jmp
imul
push
mov
rol
enter
add
int3
xchg
cmp
push
mov
dec
mull
lds
cmpb
scas
out
sbb
push
sbb
icebp
lret
ret
push
add
xchg
into
les
lahf
mov
sbb
jno
mov
pop
mov
js
xchg
les
int
jae
inc
mov
mov
xchg
mov
mov
dec
movsb
push
push
out
mov
mov
gs
inc
sbb
and
mov
test
jne
mov
es
add
adc
add
push
mov
fisubrs
jae
movsl
dec
and
fiadds
inc
cmp
sub
cwtl
xor
movsb
insl
push
shll
mov
push
outsl
adcl
add
jns
and
adc
adc
aad
or
pop
sarb
sbb
jl
sub
and
adc
pop
iret
or
jae
imul
int
out
lahf
fldl
mov
int3
push
out
mov
dec
in
leave
out
mov
shrb
adc
stos
cltd
stc
adc
pushf
cmp
lcall
into
add
lcall
xor
arpl
jge
popf
mov
cli
out
lock
or
sbbl
cmp
dec
sub
insl
inc
test
idivl
das
cwtl
addr16
lret
xchg
jmp
bound
movsl
mov
fnsave
xchg
es
outsb
int
and
mov
mov
pop
in
adcb
movsl
push
or
xlat
or
rorb
push
pop
fcompl
movsl
mov
xor
into
push
pop
fistpll
cmp
dec
fmull
leave
sbb
push
popf
pop
rcl
adc
xor
mov
out
mov
movsl
stos
push
dec
pop
adc
test
push
pusha
jl
addr16
pop
ficompl
cmp
add
int3
and
push
scas
or
mov
sub
dec
sahf
aam
scas
pop
and
xlat
ret
mov
jo
outsl
aam
mov
loope
or
jb
mov
push
bswap
clc
insl
mov
xchg
or
sub
mov
jns
cmpl
push
enter
insl
int3
sarl
jp
push
inc
hlt
jecxz
inc
xchg
mov
cmpsl
stc
adc
jb
xor
mov
cmc
mov
sub
test
sbb
lea
inc
adc
imulb
mov
loopne
aad
add
mov
mov
pop
daa
jnp
test
iret
sub
adc
mov
jbe
push
mov
int3
rol
dec
test
lcall
in
pop
mov
mov
sbb
mov
adc
out
imulb
cltd
xchg
sub
arpl
mov
adc
lods
adc
das
sub
mov
push
fstl
xor
jbe
ljmp
aaa
enter
cmp
adc
subl
int3
push
outsb
inc
pop
pop
movsb
int
push
hlt
pop
jns
out
xchg
xor
add
out
pop
mov
lret
ficoml
mov
ds
jnp
rcll
lea
enter
aas
adc
lahf
jne
gs
insb
jb
fcompl
fstpt
addr16
adc
and
add
imul
push
lahf
adc
ret
xor
mov
sub
dec
or
mov
mov
gs
xlat
and
out
xchg
addr16
lret
rcl
pop
test
adc
mov
sarl
jnp
lcall
push
popa
xchg
add
push
mov
repz
sahf
adc
push
inc
roll
add
jnp
sbb
mov
mov
int3
call
push
mov
cmp
ljmp
ret
out
and
xor
push
pop
sub
mov
dec
pop
sbb
imul
ror
push
adc
xchg
xchg
push
popa
fstl
xchg
jmp
popf
pop
aad
or
push
adc
gs
test
mov
push
fistl
addb
lret
and
inc
mov
jne
fcompl
lods
inc
sbb
movsl
ret
cwtl
sub
out
sub
lods
inc
out
rorl
xchg
mov
pcmpeqw
or
xorl
sbb
sbb
ds
aad
or
mov
mov
lretw
mov
pop
mov
and
push
pop
addr16
sbb
push
jbe
fwait
xor
pop
movsl
xor
and
bound
and
jno
cwtl
addr16
cmp
mov
adc
loop
adc
loopne
out
inc
adc
or
ret
or
xchg
aam
push
ds
ss
gs
mov
movsl
rorl
mulb
push
popa
test
movsl
jle
into
std
aam
bound
jns
dec
adc
push
aad
jmp
loopne
js
mov
pop
int3
adc
shrd
xchg
ficomps
daa
fsubr
pop
cmp
mov
mov
popa
mov
outsb
test
hlt
push
cmp
call
jecxz
fwait
je
push
sti
dec
cli
ja
jne
pop
sahf
enter
jb
push
data16
ret
xor
pop
dec
popa
sbb
pop
dec
jge
jmp
push
pusha
gs
shll
cmpsb
and
mov
xor
lcall
faddl
loopne
addr16
cmpsl
xor
mov
xchg
sbb
xor
mov
lods
jl
ss
push
xchg
mov
add
dec
ret
push
xchg
leave
mov
sti
add
sub
jnp
cmp
dec
lret
and
int3
inc
ret
fadd
pop
adc
adc
sub
xorl
movsb
inc
cli
std
sbb
fadds
adc
rcrb
sub
push
sub
cltd
sub
inc
push
insb
int
lods
lock
xlat
out
adc
je
add
mov
push
minps
notl
sub
sbb
clc
sbbl
leave
xor
adc
inc
test
ds
jl
clc
xchg
adc
and
sti
push
popw
mov
and
pop
sub
filds
in
gs
cld
xchg
sbb
add
roll
and
mov
fwait
movsl
xlat
adcl
les
xor
pop
mov
into
add
and
sbb
sub
shrl
test
dec
aam
movsb
mov
hlt
cmp
or
into
int
xchg
dec
popf
push
push
mov
jp
mov
dec
or
pushf
jle
and
pop
insl
push
dec
negl
sbb
je
pop
inc
and
adc
fwait
rclb
int
rcr
in
leave
mov
pop
dec
iret
sbb
in
iret
push
and
mov
lahf
cmp
add
std
repnz
adcb
push
inc
fidivs
aaa
stos
mov
pusha
sahf
adc
repnz
scas
mov
push
fcomps
pop
dec
loopne
les
push
sub
lcall
inc
mov
es
dec
dec
pop
pop
push
pop
mov
sbbb
das
dec
insl
ror
sub
imull
push
adc
aam
and
nop
dec
roll
test
sbb
xlat
sbb
inc
xchg
fcmovb
int
pop
sahf
xchg
rclb
push
adc
cmpb
mov
xchg
inc
jbe
and
and
jb
or
pop
jle
into
fwait
adc
inc
jge
out
push
xchg
test
mov
mov
dec
push
jmp
popa
inc
mov
xor
pop
adc
sti
insb
scas
and
mov
pushf
mov
adc
outsl
js
adcb
fdivr
inc
mov
push
fs
rorb
addr16
jp
adc
aam
in
iret
pop
outsb
sbb
out
pop
pop
das
pop
enter
xlat
mov
enter
push
lods
icebp
scas
imul
sub
test
iret
mov
mov
cmpl
jg
hlt
sti
xchg
lods
mov
xlat
mov
stc
pop
sub
out
ret
fsubs
loopne
add
sahf
jnp
push
rcr
in
das
int
imul
in
push
inc
xchg
sbb
push
sbb
cmp
or
or
pop
aas
daa
fildl
sbb
mov
scas
pop
dec
dec
loope
or
jecxz
int3
stc
cld
pop
xor
mov
loope
movsl
push
fistpl
mov
adc
sbb
insb
cmp
repnz
shll
divl
xor
adc
loope
push
mov
in
in
shlb
push
das
mov
inc
pop
hlt
dec
rorl
sbb
jbe,pt
add
xchg
push
aam
arpl
pop
call
fdivrp
clc
gs
scas
dec
lods
dec
test
sti
jg
scas
aas
pop
dec
popf
and
pop
int
mov
mov
sbb
push
andl
mov
push
ret
in
fwait
jecxz
mov
add
lea
cwtl
push
add
mov
jle
inc
insl
lods
into
shlb
mov
lcall
jg
pop
scas
jle
addb
out
cmpsb
subl
or
scas
arpl
push
adc
mov
cmc
xchg
int3
xchg
jecxz
dec
es
adc
sub
adc
das
pushf
outsb
inc
and
ret
xchg
outsl
mov
adc
dec
mov
jle
rclb
iret
test
xchg
cmpsb
filds
adc
inc
lahf
pusha
or
mov
int3
mov
sti
sub
andl
rorl
out
dec
pushf
adc
dec
js
mulb
inc
cwtl
repnz
shll
xor
sbb
sub
in
iret
cmp
jl
ds
lds
jg
pop
adc
or
pushl
dec
fidivrs
pop
push
adc
sbb
mov
inc
shl
mov
lock
sbb
xchg
push
and
lret
mov
cmp
cltd
fmuls
add
xor
adc
and
jmp
add
pop
mov
sub
into
addb
pop
dec
dec
fists
fsubs
xor
add
movsb
jg
fwait
xchg
jnp
xor
mov
and
cmp
mov
loope
call
adc
inc
jmp
loop
cmpsl
xorb
xchg
addr16
sub
movb
pop
mov
addr16
cmp
inc
push
push
enter
or
adc
call
jns
lea
icebp
pop
cmpsl
arpl
pop
push
pop
call
into
dec
test
push
and
arpl
imul
addr16
sub
adc
xor
lods
push
dec
dec
and
xlat
cmp
pop
aaa
pop
cwtl
loopne
sbb
cltd
and
jge
jle
shll
lahf
pop
adc
aam
dec
int
les
mov
jb
in
adc
insl
sbb
dec
sbb
fidivl
and
andl
sbb
push
inc
out
fsubrs
push
imul
pop
ljmp
sub
ret
xchg
arpl
cld
out
test
hlt
aas
sub
je
int3
mov
mov
aas
and
pop
shlb
lcall
cmpsb
arpl
hlt
daa
pop
mov
fs
jg
or
jnp
sbb
cmp
jae
das
sbb
or
out
xor
xor
jl
push
ja
aaa
xchg
jle
adc
sbb
adc
sbb
lds
add
xchg
adcl
cs
cmpb
mov
shlb
leave
sbb
popa
out
js
xor
push
int3
stc
fdivrl
mov
gs
int3
cld
pop
push
sbb
xor
je
mov
sbb
cmc
or
clc
enter
sti
cmp
sbb
xchg
imul
sbb
cmc
lods
cli
leave
addr16
mov
cli
ss
or
daa
sub
lahf
push
fs
push
into
push
orl
adc
loopne
out
sub
or
clc
fdivl
cmp
mov
lock
inc
jecxz
fstpl
jmp
xchg
adc
cmp
mov
in
push
sbb
dec
or
xchg
ret
orl
gs
mov
sbb
popf
and
scas
cmp
imul
mov
xor
xchg
cmp
lcall
sbb
mov
dec
adc
mov
pop
mov
and
adc
fcompl
pop
mulb
push
fcoml
sbb
jno
iret
jg
sbb
popf
ficomps
xchg
jae
push
cltd
fdivs
jb
add
gs
xor
mov
rcrb
jb
cmp
lods
pop
dec
push
adc
mov
sub
jno
pop
outsb
into
xchg
jge
out
inc
test
icebp
cmpsl
popa
jg
xchg
cmp
push
cld
jg
adc
sbb
pop
adc
in
nop
into
test
adc
sbb
shll
add
pusha
sbb
daa
iretw
dec
cltd
pushf
imul
cmc
iret
cmc
enter
ret
cwtl
ss
jo
adc
stc
mov
test
add
pop
setg
repnz
das
dec
push
xchg
jo
stc
inc
adc
push
push
test
in
repz
nop
in
movsb
test
movsl
mov
mov
jmp
pop
in
ss
cltd
pop
jecxz
outsl
jecxz
pop
or
inc
roll
xchg
aas
mov
out
les
sub
gs
aaa
xor
in
ret
xor
push
dec
cwtl
fsubrl
jns
neg
stos
bound
sbb
push
xchg
repnz
pop
or
sti
fwait
adc
jb
imul
jbe
or
adc
and
jnp
mov
cmc
jbe
addr16
cld
inc
add
dec
push
or
lods
pusha
dec
scas
mov
hlt
jns
or
pusha
and
testl
mov
or
movsb
into
push
fldenv
sahf
mov
jbe
mov
pop
sub
in
int3
add
mov
sub
push
cmc
inc
sbb
ja
testb
or
ja
enter
and
jle
pusha
icebp
sub
push
sbb
stos
sti
push
pop
mull
adc
push
push
loopne
sbb
es
push
iret
push
ret
and
fnsave
jo
pop
into
pop
sbb
fs
lds
into
mov
cli
jp
xor
scas
pop
mov
stos
outsb
cmp
or
mov
movsl
xor
mov
insb
sbb
jne
test
mov
fnstsw
gs
int3
and
mov
insl
ret
gs
mov
mov
mov
fs
or
or
add
or
stos
lock
int3
ja
push
pop
addr16
push
int3
popf
outsb
std
push
negl
cmp
pop
add
in
or
cli
nop
sbb
outsl
lret
cmp
mov
and
repz
lock
pop
sub
rclb
add
dec
inc
push
jg
inc
ret
into
scas
push
aad
out
out
xor
sub
jg
jne
scas
daa
adc
jecxz
rclb
iret
dec
and
fcomip
inc
mov
jns
int3
out
aas
dec
iret
pop
sti
loop
push
out
jbe
xor
test
mov
bound
fmuls
shll
xor
sub
test
nop
fcompl
push
rcrb
sub
arpl
mov
cmpsl
pop
sahf
rcr
into
aam
and
pop
adc
mov
lcall
cmp
in
xlat
push
mov
lea
repz
xchg
fcmovbe
into
jo
inc
sub
insl
xor
lds
xor
ss
push
mov
add
lret
push
lret
xchg
xchg
adc
cld
and
inc
add
push
int3
inc
fwait
lods
jl
xchg
sub
jg
cmp
movsl
lods
mov
sarb
lds
rolb
mov
out
into
sahf
inc
jmp
bswap
gs
xor
jmp
sarb
xlat
fdivrs
andl
pop
push
mov
inc
push
lods
xchg
mov
movsl
arpl
enter
test
cmpsl
dec
addr16
fsubs
fisttpl
mov
dec
ret
vunpckhps
jecxz
adc
js
aas
clc
lahf
clc
sti
lods
addr16
jmp
inc
sub
mov
mov
cmpsb
cmp
jg
int3
int3
xchg
out
out
out
cmovo
add
into
mov
jns
push
iret
int
xor
pusha
ss
pop
outsb
and
aad
sbb
mov
sub
inc
cltd
lea
icebp
jbe
hlt
sub
sbb
mov
push
and
cs
lret
or
xchg
in
push
dec
ja
adc
dec
int3
mov
outsb
loope
cmc
mov
mov
and
sbb
rcrl
int
pop
jmp
push
in
shll
dec
and
insb
int3
pop
cmc
sahf
stos
push
xlat
mov
dec
sub
mov
fsubrl
icebp
data16
pop
lea
lea
in
clc
shrl
inc
lret
outsb
push
movsl
scas
push
frstor
ds
xchg
stc
and
test
fcomip
push
cmpsb
call
data16
rclb
dec
addr16
testl
pop
adc
sub
cli
mov
adc
out
aam
xchg
aam
sub
push
out
mov
mov
dec
out
js
cli
int
and
push
cmp
aam
adc
pop
jmp
inc
stos
shlb
xlat
sub
cmp
roll
push
adc
cmp
pop
push
mov
or
popf
dec
into
push
leave
out
inc
call
or
cld
pop
xchg
inc
call
dec
dec
jp
xor
repz
insl
loopne
mov
lods
cltd
jne
adc
popa
and
dec
gs
stos
outsb
push
pop
adc
mov
cmp
mov
add
jg
pop
lret
cmp
inc
xor
inc
push
adc
dec
jecxz
mov
sti
pop
arpl
sbb
rcll
and
xchg
mov
faddl
add
addr16
daa
adc
shrl
sbb
aad
mov
pop
push
or
xchg
and
adc
push
decl
movsb
int3
sub
sbb
push
pop
xor
push
std
adc
or
sub
sub
mov
push
mov
lcall
mov
cmc
flds
cs
and
ljmp
dec
fwait
call
dec
xor
ss
push
sahf
mov
jg
fmuls
call
sbb
scas
into
aas
fcoms
iret
mov
sub
test
push
add
aas
fmulp
mov
out
adc
adc
dec
add
lret
addr16
adc
test
add
mov
jne
leave
push
out
cwtl
push
add
and
xchg
ds
push
sub
addr16
inc
jp
mov
add
push
and
nop
mov
or
mov
int3
push
xchg
out
jno
push
mov
mov
sbb
xor
mov
xchg
mov
xchg
xchg
fiadds
pop
pop
clc
clc
pop
call
mov
adc
dec
bound
cmp
fsts
xchg
or
lss
push
sbb
pop
fbld
mov
in
pop
jg
sub
mov
cmp
push
int
push
jne
cmp
sbbl
dec
sbb
rorb
xor
or
xor
push
je
xor
stos
dec
mov
cmp
pop
incb
imul
es
dec
and
std
aas
rorl
xchg
into
insb
and
incb
dec
push
addr16
movsb
dec
xor
ret
lods
cmp
movsb
stc
xchg
mov
aas
push
out
or
js
or
pop
sub
sub
pop
push
and
iret
pop
push
jo
push
aaa
sub
xor
mov
mov
int3
loope
push
pop
dec
imul
inc
adc
std
stos
mov
addr16
mov
sbbl
and
rol
add
mov
movntq
jae
adc
rcl
inc
mov
dec
add
sbb
loope
enter
shrb
lcall
jae
sub
jp
pop
ret
lahf
jbe
dec
nop
inc
adcl
stos
cmpsb
loopne
dec
pop
mull
test
cld
pop
jle
cmp
push
xchg
pop
push
push
aaa
fiaddl
mov
inc
jl
dec
mov
mov
push
add
testl
loopne
jmp
pop
aas
inc
out
pop
mov
addr16
lret
clc
popa
push
in
sti
repnz
push
sbb
cmp
push
pop
in
leave
mov
int3
adc
insb
jecxz
sbb
push
push
ljmp
sub
out
or
sbb
dec
pop
inc
hlt
sti
out
push
lcall
xor
inc
addr16
cmpsl
lea
in
push
cmp
mov
push
sti
dec
cmp
fldenv
xchg
call
add
fwait
push
xchg
and
mov
pop
into
add
sub
cld
hlt
sbb
out
int3
xchg
in
push
cltd
jnp
or
cmp
in
lret
sub
mov
push
popa
push
push
out
jmp
inc
dec
dec
mov
fsub
into
call
mov
pop
fstl
adc
cld
pop
ja
dec
ret
sub
push
testb
sbb
gs
sbb
sbb
insl
cwtl
and
inc
nop
sub
and
push
mov
mov
lret
aam
out
pop
dec
inc
and
scas
sbb
ret
cmc
fistl
inc
test
dec
cltd
add
xchg
clc
cmp
adc
and
jae
je
pop
roll
and
inc
out
or
sti
fucomip
cmp
push
pop
pop
lock
loope
loopne
pop
iret
pop
sub
test
cmp
ljmp
adc
mov
mov
xlat
xchg
sub
jns
cltd
or
mov
xor
popa
jns
hlt
fstpt
jge
push
push
sbb
mov
movsl
adc
inc
pusha
icebp
enter
and
lock
fisttpl
stc
inc
loopne
pop
jle
data16
in
out
arpl
movsb
mov
and
push
loopne
cmpsl
sbb
xchg
mov
stc
adcl
push
and
jg
mov
jecxz
outsl
inc
push
mov
add
push
mov
push
test
inc
jl
nop
ljmp
adc
mov
cltd
int3
mov
and
fs
lock
stos
punpckhdq
out
notl
mov
mov
sub
sahf
and
push
fs
gs
int3
dec
pop
iret
jp
pop
pop
push
mov
pop
xchg
xor
sbb
call
add
mov
test
mov
adc
dec
aas
pop
lahf
inc
pop
bound
fldt
mov
adc
add
ds
outsb
movsb
inc
int
mov
imul
push
pop
out
push
jl
call
pop
in
cmpb
mov
js
aaa
iret
mov
mov
pand
idivb
rolb
insb
test
std
iret
lock
cmc
adc
loop
mov
ja
jp
adc
test
gs
add
int
adc
xlat
ficompl
push
sbb
stc
sub
loope
pop
xor
mov
aad
sti
inc
cmp
or
push
cmp
adc
jmp
sbb
adc
into
inc
adc
sti
shrb
xchg
mov
subb
push
or
xchg
clc
push
sarl
jns
jb
push
sbb
sub
ja
xchg
dec
sbb
repnz
adc
and
popf
lock
gs
or
data16
cmp
sbb
incl
and
loopne
pop
daa
pop
test
outsb
push
mov
jl
lret
and
jp
push
lods
pushf
pushf
sbb
testb
adc
ret
test
int3
or
adc
sbb
cli
cwtl
out
mov
jecxz
movsb
add
cltd
xor
xchg
cmp
repnz
ret
mov
cs
divl
rcrl
jae
and
incb
int3
mov
fmuls
imul
fsubs
and
fimull
and
flds
fnsave
cmp
sub
ficompl
repnz
fmull
inc
movsl
inc
mov
fnstsw
lret
sbb
xlat
pop
xor
int3
in
cmpsb
inc
pop
cmp
pushf
jno
int
push
mov
mov
das
popf
test
adc
or
movsl
popf
add
pop
into
pop
mov
outsl
push
jle
iret
sub
push
mov
dec
jge
out
jae
xchg
addr16
mov
pop
jmp
cmpsl
cmp
icebp
mov
roll
mov
aaa
fiaddl
rcr
sbb
push
ljmp
mov
adc
and
fcoml
adc
fdivr
mov
lds
jns
inc
or
jp
sti
and
adc
lods
dec
mov
lock
pushf
jnp
add
imul
mov
rcl
sub
insb
aas
jnp
std
int
insl
lock
loopne
lods
or
xchg
stc
mov
push
pop
subb
gs
insl
pop
aad
scas
pop
pushf
mov
jno
outsb
inc
int
out
inc
inc
iret
and
fbstp
jp
pop
or
pop
out
cwtl
orl
idiv
daa
mov
xor
add
popa
inc
lret
sub
out
dec
aas
addr16
adc
jno
lea
pop
movl
dec
sahf
stos
imul
inc
fidivl
popf
pushf
lahf
xlat
loop
or
scas
push
pop
mov
adc
cmpsb
enter
insl
xchg
and
inc
sar
add
imul
pop
cmp
out
setbe
mov
xchg
push
xchg
jmp
mov
sar
nop
sub
daa
iret
mov
lret
xchg
adc
outsl
jecxz
out
fwait
in
push
sbb
push
in
dec
mov
adc
mov
mov
pop
sub
or
inc
or
xor
clc
jl
add
jmp
addl
fdivs
xor
push
enter
mov
test
pop
adc
int3
in
xchg
aaa
and
aad
into
xorb
test
js
mov
xchg
mov
jle
inc
daa
repnz
sbb
inc
out
into
int
or
iret
xchg
push
mov
imul
cmpsb
arpl
or
sub
aam
lret
inc
call
adc
inc
push
xor
jo
ss
iret
aaa
sbb
addr16
enter
fs
xchg
sbb
cmp
and
xchg
adc
stos
je
sub
call
pushf
jp
addr16
lds
adc
hlt
mov
dec
repz
fmull
pminub
ds
pop
xor
or
or
inc
cs
dec
movsb
idiv
pop
and
push
ja
inc
or
dec
mov
mov
lea
mov
dec
mov
insb
int
loope
shrl
xchg
xchg
inc
pop
push
aas
int
push
int
cmpsl
add
repz
repz
sbb
add
out
jnp
sbb
mov
clc
sbb
data16
clc
adc
xchg
outsl
sbb
aaa
cmp
out
cmp
fstl
sbb
mov
xchg
pop
jne
and
mov
jmp
std
cmp
gs
push
inc
pop
mov
mov
mov
shrl
inc
scas
mov
gs
fstpl
shll
xchg
test
movsb
inc
ficoml
adc
je
pop
sahf
lahf
imul
das
add
lods
outsb
cmpsb
ljmp
cwtl
testl
imul
mov
fsubrl
popf
lods
mov
lea
mov
sahf
jns
mov
add
insl
popf
and
add
int
out
int3
sbb
pop
push
shrl
or
dec
sahf
jne
cmp
jmp
push
cmpb
mov
movsl
sub
sub
loope
pop
jp
mov
inc
cmpsl
out
fsubs
push
add
mov
inc
fmulp
mov
jge
nop
cs
and
int
pop
jae
jbe
mov
xchg
loope
repz
xor
cltd
pop
mov
iret
mov
outsl
repz
mov
addl
stos
loope
pop
push
inc
imul
cld
movsl
pusha
or
dec
insb
pop
out
xor
mov
mov
mov
mulb
mov
dec
js
inc
clc
icebp
aas
xor
imul
sbb
fisubl
aad
sti
pop
lahf
sub
imul
ds
js
mov
into
jb
jns
data16
ror
sub
test
push
xchg
or
movsb
ret
pop
adc
scas
dec
pusha
or
jecxz
fisubl
or
push
dec
insl
into
cli
push
mov
popa
imul
into
fsubrl
aad
mov
ret
loopne,pt
faddl
les
fsubs
mov
inc
mov
out
sbb
stos
cmp
sbb
jnp
xchg
mov
iret
fisubrs
test
adcl
jecxz
jge
lea
jge
sub
pop
fadds
movsb
sbb
or
pop
sbb
test
jnp
mov
add
cmp
dec
aas
or
push
adc
pusha
jl
dec
lods
test
sub
dec
popf
lds
jae
adc
or
adc
inc
addb
aad
cmpsl
out
dec
mov
sbb
push
push
aas
lret
xchg
movsb
data16
push
push
les
mov
int3
incl
cs
daa
adc
xchg
js
aaa
mov
out
pop
adc
lock
jmp
stc
cwtl
aam
mov
xchg
je
pop
je
add
aam
lea
inc
mov
out
loope
stos
jle
in
or
and
xchg
shrb
and
adc
inc
mov
in
lock
dec
push
xor
adc
add
mov
sahf
int
push
loop
outsb
cmp
pop
or
or
jp
push
mov
push
call
inc
fimuls
ficompl
testl
jne
iret
add
cmp
fstpt
pop
jbe
jl
repnz
stc
std
jne
cltd
and
in
push
iret
in
nop
xchg
filds
sbb
cld
jns
adc
stos
faddp
mov
fsubs
clc
xor
dec
jbe
sbb
push
lods
mov
mov
lods
lods
jge
mov
dec
adc
addr16
sbb
pusha
fbld
pop
sbb
jnp
call
popf
add
ljmp
into
cmp
jg
lret
adc
ror
add
iret
pavgb
jmp
imull
or
in
push
std
adc
mov
ds
test
ficoml
movsb
das
fxch
dec
fsubrs
jns
cmpsb
inc
fwait
cld
sub
lds
fwait
into
outsl
das
cmp
adc
subl
hlt
pop
mov
cmpl
lcall
cmc
and
imul
dec
in
sahf
ror
gs
inc
cwtl
int3
outsb
cmpsl
mov
cmp
and
leave
dec
sbb
or
xor
mov
and
fmul
repnz
xor
sbb
sub
insb
ds
out
fmul
add
jno
jae
xchg
sub
fcompl
dec
xchg
daa
icebp
mov
jg
test
les
mov
into
mov
in
adc
cld
lods
fwait
je
jo
out
sarl
push
cmpsb
mov
iret
pop
xchg
xchg
pop
mov
int
shll
sbb
push
sub
add
jmp
std
push
cmpsl
div
push
push
sti
xchg
and
xor
xor
push
lea
sbb
outsb
lret
dec
or
mov
inc
addl
sbb
hlt
and
pushf
mov
sbb
adc
insb
cmc
and
push
in
repz
jecxz
push
or
sub
sbb
jmp
sbb
imull
ret
adc
hlt
pop
inc
sbb
in
fmuls
pop
dec
inc
leave
cmp
pushf
aam
arpl
adc
fadds
hlt
jg
int
sahf
sub
inc
jmp
add
mov
mov
fcoms
jb
pop
shl
pushf
sahf
mulb
lock
mov
fisttpl
or
xchg
addr16
sub
out
xor
sbb
xchg
jl
adc
ret
test
jecxz
mov
sub
add
iret
pop
xlat
adc
inc
adc
pop
sbbl
dec
stos
nop
fs
sbb
stc
loopne
daa
jno
inc
sub
test
cmp
sbb
popa
cmpb
jmp
jp
or
cmpb
dec
xchg
sbb
shrb
cs
cmpb
jl
cmp
adc
sbb
mov
and
pop
mov
mov
mov
mov
xlat
std
ficoml
jae
mov
fs
jl
mov
lock
int3
cwtl
push
xchg
roll
inc
cmp
inc
xchg
sub
mov
iret
ficoml
adc
mov
and
push
ret
dec
sub
test
push
hlt
int3
inc
cmpsl
test
jmp
cmpsb
int3
fdivl
insl
or
sti
sbb
lock
std
jno
or
lret
sub
stos
movsl
clc
sti
test
mov
fistpl
pop
int
rcll
mov
pop
jge
insb
int3
aam
push
mov
pop
dec
popf
or
push
mov
mov
daa
jns
add
sahf
jb
push
push
jg
ja
mov
sub
or
scas
cmc
sbb
test
mov
add
mov
sarl
gs
dec
add
dec
test
add
inc
frstor
jno
jge
enter
and
inc
xor
dec
sbb
jns
aad
or
leave
in
enter
sub
mov
inc
mov
int3
lret
jp
push
adc
xchg
shlb
es
push
dec
scas
sub
ljmp
sbb
repnz
testl
adc
movsl
pop
lds
imul
aad
icebp
mov
test
rcll
inc
lock
cli
movzbl
and
lahf
sub
movsl
adc
movsb
aaa
sub
push
clc
pop
push
sbb
adc
mov
lods
lret
xchg
test
es
cmpsb
sub
and
pusha
repz
xor
add
cmpsl
pop
dec
jmp
mov
hlt
mov
sahf
jbe
data16
cli
out
fwait
setns
pop
imul
je
loopne
push
or
jmp
daa
mov
mov
dec
and
sub
inc
pop
ret
jno
dec
lcall
movsl
into
sti
in
in
data16
ljmp
lock
les
dec
sbb
das
jle
dec
das
ss
dec
pop
icebp
and
jecxz
pushf
sbb
lahf
pop
cmp
lea
or
xchg
push
data16
adc
ficomps
cmp
rol
adc
sbb
sub
das
cmp
sbb
scas
enter
mov
and
fistpll
and
cwtl
shlb
int
mov
cmpsb
into
cmpsl
cmp
and
lock
int
bound
inc
out
rcl
xor
xlat
in
mov
mov
push
lds
lahf
insl
repz
inc
fsubl
adc
stos
das
xor
mov
mov
into
pop
arpl
inc
push
decl
nop
pop
sub
add
and
jp
addr16
mov
mov
pop
inc
andb
ds
sbb
push
sub
push
pop
mov
movsb
sbb
inc
dec
cwtl
adc
popl
ret
xor
sbb
shll
jb
rcll
fdiv
or
test
setns
fildl
or
popf
cmp
divl
and
das
pop
xlat
rorb
adc
sub
in
add
sub
loopne
jmp
jo
stos
inc
mov
fwait
mov
imul
cmp
pop
inc
push
ja
leave
outsb
lret
inc
sbb
clc
push
or
imulb
inc
stos
xchg
in
int3
push
cmp
mov
cmp
icebp
push
je
sbb
sbb
pop
jecxz
loop
rorb
icebp
out
iret
in
pushf
into
sub
push
xchg
bound
mov
pop
nop
das
test
xchg
das
or
mov
aad
xchg
lahf
clc
incb
cmpsl
int
jb
jp
jae
lcall
mov
lods
adc
std
inc
inc
pop
addb
nop
or
test
add
xor
push
pop
scas
or
stos
fbld
inc
imul
jle
push
aad
popf
sbb
data16
pop
adcl
test
or
fsts
inc
lods
in
fcomps
mov
pushf
mov
aam
adc
jne
mov
dec
movsb
push
inc
rcrb
mov
scas
sti
xchg
leave
into
fwait
pop
iret
decl
mov
jne
gs
ss
lds
insb
aaa
sbb
jno
and
lods
sahf
data16
subl
sbb
xor
fldl
testl
xchg
cld
and
pop
mov
pop
fnstenv
lret
jmp
lods
push
repnz
mov
xchg
call
scas
push
pop
adc
gs
lahf
xor
daa
inc
adc
out
pop
sbb
pop
dec
arpl
mov
mov
dec
sub
inc
call
xchg
mov
inc
iret
and
lret
sub
dec
arpl
push
outsb
push
jo
test
dec
int3
arpl
push
xchg
lods
addr16
cld
mov
cmpsl
ja
and
aam
popf
push
out
lods
int3
rdpmc
pop
jae
adc
pop
pop
lods
iret
adc
fwait
xchg
sub
out
xor
sub
mov
nop
test
sbb
mov
mov
sbb
pop
push
xchg
fmull
inc
push
push
push
jne
js
dec
push
in
lahf
cli
sub
sahf
pusha
call
fcmovnbe
cmp
rorl
jnp
xchg
sub
fildll
in
bound
sbb
xor
mov
pop
pop
fwait
jbe
jg
lcall
inc
cmpsb
cwtl
add
mov
std
sbb
push
or
adc
out
cld
jmp
sub
into
aaa
out
xchg
pop
data16
jmp
mov
mov
xchg
int3
jae
lds
popf
jo
mov
adc
les
cwtl
lds
xor
outsl
mov
mov
fsubl
jp
les
jmp
addr16
int3
push
test
lcall
pop
xor
fiaddl
xchg
cmp
or
cmp
dec
or
add
mov
add
add
push
dec
jne
inc
cltd
xor
xchg
xchg
rcrb
in
and
fwait
aad
xor
fwait
fwait
lods
jne
out
push
cs
int3
mov
inc
sub
into
test
inc
push
test
pop
into
test
mov
flds
cld
gs
jl
scas
adc
cli
inc
push
js
test
fsubrp
jp
gs
outsl
je
pop
data16
push
ljmp
adc
data16
outsb
mov
xchg
int
mov
test
outsl
test
mov
inc
or
cmp
xchg
adc
mov
call
jl
int3
into
in
xor
pop
mov
test
jle
cmpsb
lret
jl
adc
test
outsl
fldz
cmp
or
lret
das
divl
mov
es
inc
adc
mov
push
inc
add
cmp
mov
and
ret
or
cmpsl
mov
mov
test
cmpsb
shl
testb
jb
out
dec
sbb
and
int
push
ljmp
push
adc
or
pop
in
sbb
arpl
aad
fdivrs
ja
sbb
sub
cmp
cs
pop
mov
adc
pop
out
stos
outsl
and
xlat
mov
mov
inc
sar
jg
out
fs
lods
cmp
pop
das
jg
inc
fiadds
mov
ret
mull
scas
outsl
cwtl
inc
roll
pop
stos
cmp
out
xor
xor
jmp
outsb
and
pop
jbe
int
shrb
icebp
lea
mov
jmp
je
arpl
mov
ja
imul
xchg
jno
xchg
sub
jb
push
mov
cmp
rol
imul
insb
mov
lret
push
and
add
or
aad
ds
movsl
aad
mov
addr16
cli
test
lds
xor
arpl
add
pop
pop
pandn
cmp
fcomip
in
or
ljmp
and
push
out
outsb
ja
mov
sub
ja
arpl
push
int
outsl
cwtl
sbbb
int3
test
xchg
gs
ficompl
out
sbb
add
mov
pop
pusha
mov
jne
cld
je
iret
adc
or
insl
andl
aaa
in
pop
adc
loop
adc
iret
ret
add
shrb
sbb
pop
adc
inc
gs
fisubl
rorb
fldl
je
sbb
mov
lods
shr
xchg
or
mov
lret
mulb
in
push
adc
lods
sti
jo
rorb
into
jbe
or
out
sbb
sbb
test
cmp
push
fstpl
fs
aas
fstps
xor
arpl
or
mov
fdecstp
pop
gs
clc
pop
jns
into
xchg
fidivrl
cmc
movswl
shrb
xor
and
adc
out
shll
mov
gs
test
inc
add
adc
pop
sbb
mov
arpl
sbb
adc
jg
push
into
pop
mov
pop
or
adcb
insb
pop
out
je
movsl
das
inc
pop
jecxz
insb
push
jns
fistl
mov
dec
pop
pop
ja
cmp
dec
rol
xchg
lret
ret
xor
or
cmc
test
cld
jecxz
mov
pop
clc
mov
jl
loop
incl
jg
cmp
xor
and
arpl
mov
enter
clc
mov
xor
xchg
jmp
and
mov
lret
adc
hlt
pop
mov
cltd
into
inc
js
int3
enter
push
push
lock
jae
push
lret
or
pop
push
icebp
push
mov
and
test
push
pop
xor
mov
mov
cmp
int3
lahf
and
popf
std
xchg
mov
movsl
xchg
stos
fsubrl
xchg
adc
sub
mov
pushf
loopne
jp
or
jg
mov
sbb
inc
push
add
jle
and
repz
out
push
outsl
sbb
inc
pop
cmp
shl
ja
adc
mov
cs
leave
sbb
sub
xchg
adc
cli
int3
in
test
xor
rcrb
popa
cmpsb
cmp
pop
out
jl
and
sub
dec
and
push
sub
push
mov
adc
dec
sbb
repz
push
cwtl
cmp
push
adc
mov
repz
push
or
int3
imul
out
leave
cwtl
cld
movsb
test
cwtl
cli
int
pop
ret
ja
dec
add
sti
aas
popa
cmpsl
icebp
fsub
lret
daa
andl
push
stos
xor
dec
xchg
aas
and
jg
je
aad
cmp
adc
cmp
js
xchg
pop
repz
int3
push
dec
push
pop
push
mov
in
pop
sti
outsl
push
enter
cmpsl
test
lds
jl
push
iret
shrb
clc
sub
inc
xor
xor
push
jecxz
xor
loop
add
adc
jge
and
push
mov
int
iret
cmp
iret
push
data16
push
sub
xor
sti
bound
and
xor
shlb
jne
pop
insl
loop
xchg
mov
iret
push
xlat
mov
and
loop
outsl
mov
in
roll
daa
adc
xchg
pop
sbb
adc
cmp
fs
mov
pushf
scas
fucomip
sub
ret
fcomip
xchg
adc
and
add
push
add
stc
or
out
sti
repz
sti
fwait
push
ss
jp
cwtl
mov
push
popa
mov
mov
in
xlat
cmp
sbb
orl
popf
and
mov
sbb
inc
popa
mov
and
jge
mov
jmp
sbb
movsb
nop
addr16
xor
decl
faddl
or
int
inc
out
movb
add
or
add
xlat
sbb
fs
outsb
xchg
mov
cmp
shlb
imul
sbb
adc
add
jg
test
jae
sub
adc
pop
sub
testb
jns
je
adc
push
mov
dec
stos
inc
add
les
pushf
push
insl
fsts
imul
rol
jne
aad
leave
and
call
or
mov
gs
pop
jecxz
cwtl
ror
sahf
jmp
imul
push
test
ds
loop
iret
push
movsb
jbe
gs
arpl
mov
or
fistl
leave
sarl
push
nop
orb
push
push
lret
incb
es
mov
adc
int
lods
dec
or
repz
adc
inc
cmpsb
jp
loop
lretw
lahf
dec
scas
pusha
lahf
xor
insl
mov
or
mov
lock
adc
das
lahf
stos
lds
scas
push
sbb
mov
fbstp
cwtl
sbb
fadds
cmpsl
mul
ljmp
push
dec
nop
rorb
shll
push
and
jp
push
xor
les
pop
xor
pop
jb
jb
call
int
pop
out
fisubl
cli
sbb
add
sahf
fidivl
mov
mov
sti
aad
out
mov
rorb
cltd
lahf
imul
fcomps
mov
cld
pushf
sub
mov
out
sub
adc
cmpsb
mov
pop
ficomps
outsl
arpl
shlb
iret
sbb
jbe
insb
mov
push
push
sub
lcall
pop
and
cmp
movsl
or
push
dec
repnz
pop
jmp
pop
pop
test
mov
adc
jl
push
mov
or
lret
mov
cwtl
push
std
xchg
mov
sbb
mov
jnp
fwait
ss
xchg
inc
xchg
fs
in
pop
imul
insb
pop
or
sbb
lcall
std
test
xchg
loopne
xor
inc
insb
dec
fiadds
mov
xor
adc
mov
cmpsl
xor
fcmovnu
outsl
sbb
pop
lock
jecxz
xor
jne
xchg
in
push
adc
ror
divl
adc
mov
dec
add
pop
bnd
imul
inc
and
jns
sbb
gs
lock
nop
dec
inc
pop
lahf
inc
aam
sub
imul
dec
lods
int
mov
bound
lahf
xchg
decl
push
lcall
scas
aaa
or
mov
jl
dec
sub
movsl
push
xor
mov
push
int3
ds
rclb
sbb
pop
lods
mov
mov
xchg
hlt
push
outsb
pop
jmp
xor
jne
push
sub
loop
and
test
mov
inc
push
sahf
dec
jle
cmpb
test
push
shlb
pushf
xchg
movsb
mov
jno
leave
xchg
shr
aas
aaa
iret
inc
and
mov
cmp
sub
insb
or
pop
repz
lret
mov
je
pop
rorl
mov
clc
pop
mov
mov
jns
addr16
fldt
xor
cmpl
sbb
cltd
aas
sub
out
inc
sub
push
mov
lods
int
sti
pop
imul
dec
dec
sbb
inc
gs
cmp
mov
nop
repnz
inc
int
adc
lds
mov
icebp
push
jbe
push
sbb
push
jecxz
push
adc
push
scas
xchg
jae
push
jnp
jno
xlat
shlw
cmc
aad
cmp
idiv
dec
pop
adc
orb
sbb
loope
mov
adc
aad
dec
jno
mov
xchg
int3
push
fists
jnp
mov
jbe
loopne
daa
scas
cmpsb
xor
dec
les
movsl
mov
sbb
out
divb
jge
fistl
jo
mov
aas
dec
jmp
das
sub
daa
test
jp
aaa
sub
into
push
xor
push
dec
jp
arpl
sub
push
sub
call
int3
adc
shrb
iret
repz
mov
notl
fdivl
push
out
enter
mov
xor
xchg
push
outsb
cmp
nop
int3
adc
out
add
and
sbb
int3
insl
inc
in
stc
negl
gs
xor
inc
in
jmp
mov
pop
out
out
pop
pop
adc
mov
mov
lock
sbb
ret
fs
adc
pop
and
xlat
jp
mov
int
iret
popf
call
or
lahf
pop
scas
test
ja
fimuls
jne
or
test
adc
fsubr
icebp
or
mov
dec
and
cmp
mov
insb
adc
mov
xor
rclb
int
lret
add
data16
xor
cld
or
int
pop
shrb
mov
test
cmp
mov
push
inc
mov
ret
or
mov
addr16
add
iret
mov
into
aaa
mov
adc
and
dec
push
test
add
cli
gs
sub
mov
and
dec
in
cmp
adc
jb
push
inc
pop
xchg
fs
push
push
push
mov
inc
into
sub
lcall
mov
testb
mov
les
lahf
pop
mov
mov
cwtl
sbb
pop
cmp
adc
and
inc
mov
fcmovne
ja
xchg
push
and
jecxz
inc
add
or
aam
mov
mov
int3
jb
lahf
dec
cmpb
lods
jp
mov
loope
inc
or
in
or
adc
inc
xor
dec
loopne
dec
jb
rdmsr
fstps
cmp
jmp
cmpsl
xorl
jmp
cmpsl
test
xchg
into
sbb
fisttps
push
or
aam
scas
lea
or
ret
ret
loopne
cmp
mov
int
enter
nop
xchg
pusha
mov
jnp
sbb
add
mov
adc
pop
out
jno
sbb
cmpsl
xor
sbb
jnp
or
add
pop
mov
push
insl
xorl
addr16
mov
xor
aas
dec
roll
mov
lcall
adc
adc
aas
aam
mov
adcb
mov
in
mov
mov
xor
push
adc
ja
rcrb
mov
push
sub
mov
popf
inc
xchg
xchg
movsb
fcmovnu
call
pop
daa
rorl
dec
adc
or
pop
inc
in
xchg
fbstp
push
xor
aaa
outsl
out
loopne
int3
mov
int
adc
jb
in
decb
out
inc
jmp
xchg
into
xchg
int3
in
int3
add
jmp
sti
lcall
pop
mov
inc
add
lret
sbb
adc
pop
mov
adc
fcom
imul
test
jo
push
xchg
rcrb
cld
into
arpl
addb
dec
jg
imull
sub
enter
mov
or
scas
int3
cmp
imul
out
out
sbb
scas
or
inc
mov
push
sbb
iret
add
cmp
stc
push
or
int3
adc
iret
push
or
and
jo
jle
mov
dec
jp
pop
xor
or
or
mov
lret
dec
jae
addl
les
imul
sub
aaa
pop
sub
loope
cmpsl
aas
jp
pop
fisttpl
aas
in
push
repz
dec
aam
lods
aad
pop
dec
mov
mov
xchg
lahf
inc
dec
mov
sub
mov
sarl
inc
popf
int
pop
push
imulb
test
je
outsl
int3
push
add
aam
inc
adc
and
cwtl
or
test
addr16
call
into
adc
mov
and
xchg
pop
xchg
mov
call
sub
subl
dec
mov
str
pop
add
sbb
cwtl
xchg
les
faddl
repz
xor
add
inc
lods
cmpsl
push
inc
aas
lret
xchg
call
push
mov
dec
sbbl
push
jle
add
insl
cmpsb
test
mov
adc
call
sbb
mov
das
sbb
jecxz
pop
in
cmp
jp
int
add
jb
out
bound
push
stos
fistpl
loop
inc
sub
imul
mov
sbb
jl
notb
adcl
shlb
push
rorl
push
push
aas
adc
xchg
jo
pop
loope
pusha
and
mov
andb
sub
jnp
push
and
xor
pusha
add
je
inc
loopne
sbb
iret
data16
into
push
pushl
fnsave
push
or
cld
xor
inc
pop
or
jg
xor
jmp
sbb
notl
scas
je
inc
pop
ja
dec
int3
sbb
and
xchg
dec
cmpsl
fistpl
out
lahf
xchg
cmpsl
sbb
inc
gs
scas
sbb
add
fidivl
int
addr16
jle
pop
push
cmp
les
pop
mov
test
dec
mov
xchg
loopne
into
sbb
mov
in
adc
sbb
lods
daa
jle
and
dec
inc
mov
dec
push
sbb
test
adc
xchg
mov
mov
lock
nop
and
dec
jge
call
sbb
push
xchg
push
xchg
inc
sbb
outsl
nop
arpl
sub
nop
insl
lret
int3
push
jg
scas
lcall
out
push
adc
mov
pop
pop
mov
cwtd
hlt
dec
jne
pusha
stos
mov
pop
mov
and
pop
mov
sahf
dec
out
mov
gs
test
int3
rcll
repz
sti
in
jp
add
int3
add
xor
addr16
inc
sti
add
je
test
inc
jae
push
push
mov
xor
xor
xchg
aaa
sbb
daa
pop
scas
subb
lods
pop
jne
stc
gs
xor
movsb
dec
sbb
push
popf
push
or
and
jbe
add
out
pop
jae
les
push
cmp
add
jae
pop
dec
cmpsb
aas
push
fildl
xchg
sarl
pop
addr16
xchg
dec
cs
ds
aam
fs
xlat
mov
cmpsl
imul
and
push
xchg
lds
adc
aam
jns
dec
adc
adc
ret
xor
inc
or
mov
adc
jae
gs
jo
lret
shl
mov
xorl
stos
fstl
mov
pop
inc
push
les
xchg
pop
mov
and
push
into
std
or
lods
dec
sbb
bound
mov
movsb
insb
std
mov
jae
sbb
push
mov
xchg
jl
dec
arpl
cmp
inc
push
cmpsl
cli
cltd
sbb
gs
int3
mov
jg
dec
adc
popl
push
cld
pop
sbb
shrl
ficomps
dec
add
push
sti
cmpsl
nop
test
inc
data16
adc
aaa
ret
out
inc
sar
scas
cmp
xlat
ret
insl
xor
sub
xchg
mov
gs
jl
movsb
ja
int3
popf
fwait
nop
inc
data16
cltd
inc
repnz
xchg
adc
int
push
lahf
push
inc
aam
jno
daa
add
adc
es
fldcw
sbb
fnstenv
call
xchg
cmpsl
sbb
js
xor
adc
inc
xor
shlb
aam
int3
jnp
mov
movsb
xchg
stos
cmp
sbb
cmp
pop
ja
daa
gs
cmpsb
adc
ror
int
repz
insb
cmp
bnd
lret
and
mov
jae
xchg
jg
das
cli
add
mov
or
rclb
fistpl
or
es
cwtl
leave
les
int
push
popa
int
jmp
lods
sets
xchg
sbb
cmp
add
sub
sbb
ret
nop
popf
adc
notb
cmp
test
pop
imul
dec
pop
scas
pop
rep
push
mov
push
mov
inc
test
mov
mov
mov
test
adc
out
or
dec
dec
fstpl
fistpll
xchg
cmpsb
add
cmp
rorl
inc
adc
sbb
loopne
xchg
int
add
mov
sbb
pop
dec
mov
adc
stos
adc
lods
imul
inc
jo
mov
insl
jno
mov
and
lret
push
cs
int3
sbb
inc
jb
int
outsl
nop
pop
addr16
testb
cmp
fistpll
std
pop
out
cmp
sti
xchg
adcb
lods
gs
test
aam
and
ja
mov
bound
add
mov
pcmpeqd
ljmp
jb
test
add
and
cmpsl
out
xor
adc
jnp
adc
sub
into
ret
or
push
sub
sbb
ficomps
test
cmp
leave
sub
inc
data16
mov
jl
add
sbb
xor
dec
out
adc
cmp
in
xchg
add
mov
into
out
push
push
push
xchg
ret
xor
pop
sbb
enter
cmp
xor
orl
rclb
iret
ljmp
push
push
jo
add
stc
into
rcrb
push
xor
test
fnstsw
and
movsl
nop
push
and
mov
push
and
shll
ss
out
push
pop
outsb
sbb
or
fdivrs
aas
jns
sbb
jge
mov
dec
test
cli
push
or
orb
stc
cmp
pop
data16
in
inc
jmp
iret
jge
mov
xor
cmp
call
out
lret
repnz
mov
dec
mov
xchg
push
pop
adc
pop
or
sbb
daa
lcall
aam
or
mov
int
pop
push
push
sbb
insb
inc
push
and
mov
inc
lea
out
jmp
arpl
repz
dec
push
pop
cmp
jp
xchg
inc
push
int
sub
sbb
xor
xchg
adc
mov
pusha
fnsave
vmovdqu
xor
out
and
fistl
jmp
xchg
inc
in
pop
out
cmc
iret
rolb
dec
mov
mov
push
scas
nop
mov
jne
cmp
stc
adc
inc
xchg
jbe
pushf
loope
cmp
je
xchg
hlt
fsts
popf
jecxz
fists
jge
jmp
rcr
arpl
lcall
pushf
pop
sub
dec
mov
mov
nop
sub
xor
push
rcr
cmc
sahf
mov
repz
push
enter
lea
nop
xor
cli
aas
outsb
push
dec
cs
jl
push
pop
inc
xchg
outsl
jae
dec
jmp
rolb
and
lods
jne
out
sbb
jae
dec
add
fdivp
outsb
sub
loopne
pop
pop
mov
and
xlat
bound
aam
jbe
pop
scas
loope
ljmp
pop
cmp
xchg
push
fwait
push
fistpl
dec
add
cwtl
arpl
jne
hlt
adc
into
fidivrs
mov
ffreep
js
inc
decl
loope
xchg
push
sub
orl
jecxz
xchg
mov
das
and
shlb
push
addr16
int3
mov
add
push
push
inc
sub
js
mov
cmp
push
jmp
outsl
cmc
rcr
cmc
and
inc
into
in
pop
sub
shll
push
push
xchg
xchg
push
ja
and
push
inc
notl
pop
in
cs
pop
jb
cmp
xor
push
jnp
and
fdiv
leave
mov
cmp
jne
popf
adc
xchg
jp
inc
mov
cmp
dec
push
les
dec
and
pop
and
aad
mov
scas
in
ss
jp
dec
inc
push
into
add
mov
clc
push
cmp
aad
adcb
into
ficoms
xor
xor
shrb
adc
out
idivb
enter
subl
roll
pop
lods
and
mov
leave
and
pop
cs
mov
ljmp
jo
loop
push
jmp
aas
pop
jo
fldlg2
sub
inc
xor
fadd
lods
std
addr16
bound
mull
jbe
inc
pop
sub
sub
xchg
insl
pop
or
inc
push
mov
xchg
xor
gs
jp
fs
xor
add
or
cmp
test
movsb
add
fwait
cmp
inc
fisttpl
das
pop
jecxz
cmp
pop
jmp
pop
mov
shll
mov
sub
mov
pop
jno
push
ja
stc
cmpsb
cmp
std
and
cmp
mov
inc
jnp
jge
jnp
pop
cmp
lret
js
mov
dec
flds
enter
or
jmp
push
adc
cmp
fiadds
lods
add
sub
subb
or
lea
ljmp
icebp
cmp
jbe
stos
add
add
ss
adc
add
outsl
fsts
scas
push
mov
mov
adc
repz
mov
fistps
inc
data16
and
xlat
dec
xor
add
push
xchg
push
push
mov
jns
jo
out
xchg
mov
pop
test
push
jmp
mov
mov
in
popa
sub
push
dec
jno
daa
xlat
mov
sub
or
and
repnz
xchg
cs
test
out
stos
add
cmp
adc
icebp
sub
push
dec
mov
lea
mov
cmp
pop
jae
call
cmp
test
inc
ficoml
out
ljmp
in
cltd
out
inc
or
xlat
es
sub
mov
pop
outsb
mov
push
cmp
cli
iret
xchg
adcl
movl
push
pop
cmp
or
lea
in
xchg
sub
dec
xor
xor
pop
sbb
dec
idivb
aam
seta
mov
jmp
pop
inc
lcall
add
int
insl
lods
cmp
mov
mov
push
dec
jge
dec
fadds
xor
addr16
adc
lock
lock
out
xchg
arpl
popf
icebp
xor
cs
test
loope
fiadds
xchg
pop
fucomp
mov
lods
dec
outsl
aad
xor
xchg
push
loop
xor
push
dec
lock
les
xchg
cmp
fld
xor
das
mov
dec
sub
aad
rcll
pop
push
out
shrl
in
dec
cltd
jnp
sub
push
in
push
pop
lock
je
pop
xchg
adc
sub
sti
orb
push
or
test
leave
out
jno
aam
dec
mov
aaa
cmpsb
sub
repz
icebp
test
adc
add
adc
in
xor
adc
cmp
mov
sbbl
push
dec
sub
aad
aaa
mov
mov
imul
lds
cmp
xor
and
rclb
test
sbbl
push
dec
add
dec
xor
pop
fcmove
bound
push
shl
sbb
add
inc
xchg
mov
push
jl
sub
xor
mov
mov
push
dec
pop
or
mov
insb
push
fadd
xor
sub
jg
xchg
push
mov
sarl
fcomps
xchg
dec
adc
adc
jecxz
sahf
push
adc
cmp
cmp
cs
dec
inc
dec
das
fadd
xor
sub
mov
dec
enter
add
mov
or
arpl
xor
das
pop
test
push
push
pop
out
push
add
inc
test
sub
add
fcoms
lcall
xchg
sbb
push
pop
repnz
add
ret
xchg
pop
adc
xor
jnp,pn
inc
inc
sahf
push
cltd
out
inc
add
sarb
lods
aas
and
pop
fucomp
test
push
dec
test
jb
cli
sub
dec
push
xor
cmc
cmp
cmpsl
adc
pop
xor
das
scas
andb
mov
mov
adc
pop
mov
mov
jl
dec
mov
lahf
divb
sub
xorb
cmp
pop
pop
xchg
mov
stc
jmp
xor
out
fiadds
cltd
cmp
pop
popf
push
pop
out
jmp
stc
dec
sub
sbb
out
test
push
sub
repnz
pop
pop
xchg
imul
and
fstl
inc
xorb
push
and
dec
add
push
popa
lods
mov
out
imul
jnp
sub
scas
push
mov
jno
int3
pop
mov
fistl
pop
fdivl
test
inc
push
dec
jns
mov
sub
or
push
out
sub
dec
jmp
outsb
xor
push
scas
int
push
sti
icebp
jns
dec
pop
fists
out
xchg
inc
stos
dec
popa
rcr
add
lods
cmp
push
scas
cmp
pop
or
add
jne
jecxz
push
aaa
ljmp
iret
jns
push
xor
push
cmp
xor
ja,pn
xchg
push
dec
in
data16
mov
pop
push
in
data16
in
test
xor
sub
outsl
push
dec
je
and
mov
xchg
or
cmp
xor
sub
out
pop
add
loope
mov
sub
pop
in
sub
jmp
lea
lcall
sub
xchg
dec
adc
das
test
inc
cs
sub
push
add
ret
lret
push
in
adc
and
fs
dec
mov
push
xlat
ds
out
outsb
lahf
lods
push
sub
icebp
cmp
dec
cmp
xchg
inc
push
dec
cmp
sub
inc
push
aad
repz
rcll
dec
leave
dec
xlat
push
add
mov
les
xor
cmp
out
adc
popl
gs
mov
cltd
inc
xor
sub
push
dec
movsl
dec
mov
sub
cmpsl
push
ljmp
imul
adc
mov
push
xor
jb
push
inc
cmp
push
lds
in
xor
dec
dec
repz
cmpsb
xor
sub
mov
icebp
pop
xchg
jmp
sbb
pop
sbb
fsts
roll
scas
or
xchg
mov
mov
mov
and
fistpl
lret
cli
out
andl
pop
fdivrs
fmul
xor
gs
mov
fstps
out
icebp
shrl
cmp
cwtl
push
les
fimuls
pop
bound
js
inc
cltd
out
sbb
sbb
fidivrs
mov
dec
mov
ja
xor
ja
ljmp
repz
cmp
pop
cltd
adc
out
jbe
sbb
repz
adc
mov
into
mov
shll
pop
fnstenv
das
add
dec
lcall
out
mov
popf
gs
dec
mov
mov
aas
mov
and
loopne
aad
mov
into
test
iret
sbb
xchg
and
lods
addr16
cmp
pop
sub
ficoml
inc
sti
aaa
fcomp
xchg
in
scas
scas
sbb
nop
adc
aas
int3
cmc
mov
and
mov
dec
imul
mov
and
lahf
sbb
in
addl
adc
arpl
and
lret
out
pop
xor
movsl
mov
mov
rorb
es
sbb
imul
and
faddl
cmp
pop
dec
rcll
cs
xchg
push
daa
inc
int3
out
inc
mov
ja
fsubs
mov
push
dec
mov
loopne
sti
xor
adc
in
xor
imul
sub
lcall
add
dec
pop
cmp
fadds
push
mov
insb
mov
or
xchg
popa
xorps
xchg
jecxz
push
mov
test
jo
push
sub
xchg
dec
imul
sbb
popf
cmp
adc
ljmp
push
enter
sbb
aaa
pop
mov
stos
loop
in
or
bound
movsl
sub
xor
adc
pop
xchg
int3
pop
rol
fs
fsubr
sti
jbe
enter
test
push
cmpsb
call
loope
xor
into
popf
xor
in
sbb
lods
scas
js
stos
repnz
mov
add
dec
fbld
test
lock
test
icebp
or
and
push
mov
rcrb
pop
push
movsb
int3
push
push
test
sarl
lret
jge
pop
inc
xor
mov
xchg
mov
jns
ja
xchg
pop
fxch
dec
inc
adc
or
push
call
jl
inc
int3
pushf
cmpsb
sar
inc
mov
mov
sbb
or
mov
pop
int
and
lock
sbb
in
in
in
pop
push
sbb
sbb
aam
sbb
inc
lds
inc
mov
adc
jns
mov
rorl
fdivrl
insb
repz
add
adc
jae
popf
push
inc
inc
rcr
add
fnstenv
out
dec
ret
push
or
sbb
and
js
push
push
pop
mov
cmp
movsl
or
jae
scas
int
iret
add
test
in
adc
jbe
out
dec
movsb
xchg
aam
pop
ror
sarl
das
ja
imul
and
movsb
out
cmpsl
push
dec
or
test
and
je
sub
mov
xor
imul
subl
sbb
ja
mov
cld
xchg
shr
call
ret
mov
addr16
adc
pop
jg
mov
ja
call
aaa
divl
sbb
lods
js
xor
jmp
adc
jo
rolb
or
int3
dec
inc
add
clc
xchg
push
addl
ljmp
imul
sub
frstpm(287
insb
stc
mov
jg
pop
fists
cmpb
lret
cmpsl
daa
mov
bound
stc
mov
shrl
jnp
cltd
push
pop
jmp
cli
nop
out
and
jns
and
adc
out
xor
es
dec
xchg
sbb
in
sub
xor
iret
push
mov
psllq
xchg
mov
fstl
lret
xchg
dec
mov
add
mov
popa
lods
popf
lods
jnp
fstpl
in
add
sub
cs
aas
push
jp
sub
in
cmp
iret
xchg
cmp
push
ja
xlat
andb
push
xchg
out
mov
cmpsl
aaa
xchg
adc
loope
sub
push
dec
jmp
xor
out
or
mov
push
ret
icebp
test
stos
xor
das
dec
subb
xchg
add
in
inc
scas
mov
dec
cld
add
fcmovnbe
inc
xor
sub
sbb
jmp
xchg
rcll
and
inc
test
mov
pop
es
cmp
xor
xor
push
dec
or
xlat
push
xor
in
jecxz
mov
lock
xchg
jecxz
test
push
adc
cmp
lea
insl
out
add
sbb
fsub
aaa
sub
or
test
imul
cmp
lahf
adc
mov
push
cltd
out
movb
cmp
mov
fstps
in
inc
jecxz
push
fadds
xor
xlat
mov
clc
pop
fists
fstl
inc
xchg
adc
stos
imul
pop
sbb
push
das
pusha
push
dec
lds
push
xor
sub
fwait
push
negb
push
fcomip
cltd
mov
lds
mov
leave
jle
cmp
push
mov
cltd
out
lods
sub
dec
sti
xchg
xchg
sub
aas
push
faddp
push
outsb
push
mov
pop
call
xor
add
fldcw
lods
sub
cs
pop
fidivs
mov
push
mov
dec
or
icebp
jmp
xchg
xor
mov
test
in
ss
xchg
cmp
xchg
subl
loopne
dec
std
dec
jg
push
aaa
sbb
mov
outsb
push
jmp
inc
aas
cmp
mov
mov
inc
dec
popf
shr
add
cmp
push
jmp
sub
push
dec
pop
dec
dec
mov
push
and
stc
cmp
jmp
leave
das
xor
das
pop
test
jb
stc
shlb
pop
xchg
xor
in
movsl
sub
dec
lret
fdivr
aaa
and
mov
icebp
sub
sub
or
lahf
xorb
push
sub
mov
cmp
stos
xchg
push
fstpl
in
jno
sbb
dec
and
lcall
push
xchg
jns
int3
pop
jmp
fistl
movsl
push
xor
adc
pop
inc
ds
mov
dec
add
leave
cmp
pop
sub
imul
xor
call
stc
sbb
cmp
jae
jns
xor
das
fdivrs
sub
or
out
cmp
or
inc
xchg
ficoms
icebp
dec
cmp
pop
pop
xchg
ja
or
andb
mov
scas
push
push
int
shr
sub
dec
inc
and
sub
push
push
push
mov
lock
xchg
pop
adc
ret
test
rorb
out
out
pop
ficoms
or
imul
push
dec
in
bound
sub
mov
cli
push
out
lock
aam
lahf
xchg
daa
adc
ficoml
out
mov
mov
cmp
adc
pop
dec
in
mov
in
dec
fdivrs
xor
sub
mov
inc
cmp
fwait
adc
scas
test
inc
sbb
in
ds
std
aaa
jmp
push
loope
inc
out
mov
rclb
jnp
sub
mov
mov
repz
cmp
adc
les
fldl
push
cltd
rclb
add
dec
jmp
sub
dec
pop
aam
xor
sub
mov
push
jp
int3
ss
sti
inc
xchg
out
insl
cs
inc
push
push
fucomp
pop
pop
jp
cmp
xor
out
sub
xchg
cmp
fcoml
pop
lock
cmp
pop
das
xchg
dec
adc
xchg
xor
sub
out
stc
in
fiaddl
inc
or
sbb
fstpl
in
push
mov
lods
dec
cmpl
sub
jb
repz
ds
pop
scas
xchg
aas
adc
xor
outsl
test
rorb
add
fwait
dec
lods
inc
adc
push
in
out
subl
mov
push
xor
add
sahf
mov
push
inc
lock
movsb
pop
pop
xchg
adc
cmpsl
xchg
out
push
or
inc
lret
shrl
in
aad
sbb
xchg
dec
arpl
push
xor
andps
pop
fsubrl
push
and
mov
xchg
push
adc
int
xchg
in
mov
jge
add
out
dec
cltd
dec
jae
and
sub
mov
push
and
sbb
push
jecxz
push
fcomps
xchg
xchg
rorl
test
mov
jge
xor
in
imul
dec
xlat
aam
aaa
out
sub
dec
loop
lock
int
mov
jg
push
mov
lds
vcmpss
push
fisttpll
ds
and
es
add
subb
shl
mov
or
xchg
popf
cmpsb
ficompl
into
pop
mov
popf
adc
dec
mov
adc
push
aas
sbb
dec
cpuid
ljmp
or
call
push
daa
push
or
dec
dec
and
pop
ret
inc
sub
js
sub
aad
frstor
push
test
setno
and
jns
push
ss
mov
dec
mov
dec
ss
and
out
jle
jne
xor
aas
pushf
and
mov
mov
fs
es
popa
ds
mov
sbb
add
xchg
or
xor
sbb
out
adc
xor
dec
and
xor
sbb
cltd
and
add
mov
das
and
xchg
stc
pushfw
mov
out
or
mov
lods
lcall
inc
sub
add
add
dec
mov
jmp
sbb
das
in
adc
inc
stos
pop
leave
and
sbb
shrb
ja
sbb
or
mov
enter
notl
or
inc
addb
clc
aas
or
mov
lahf
insb
and
shlb
mov
mov
pop
rcrl
dec
das
shrl
gs
jbe
inc
aaa
push
out
es
mov
cmp
cltd
insl
daa
mov
push
sub
hlt
inc
dec
nop
fstps
push
pop
push
cmp
push
pusha
scas
or
or
std
lods
es
cli
or
hlt
aaa
push
int3
pushf
sahf
or
lret
cmpsb
lods
sub
rcl
aaa
add
add
roll
jo
pop
xchg
int
or
mov
cli
and
inc
or
push
adc
add
cmp
jge
jge
call
lods
dec
pop
inc
stos
adc
adc
dec
dec
sbb
pop
pop
mov
repnz
push
mov
lret
fwait
and
clc
cmp
jge
dec
cwtl
not
rolb
sub
cmp
mov
data16
pop
inc
or
push
and
pop
rorb
sbb
pop
push
mov
and
add
pop
and
add
adc
js
sub
pop
sti
push
outsl
iret
adc
das
outsb
shll
icebp
ljmp
jae
jge
add
cmp
add
xor
lods
in
add
imul
loope
jg
mov
sbb
shll
imul
xor
mov
push
jb
aad
stos
shlb
pop
ljmp
mov
aas
insb
mov
aas
sub
in
lcall
add
xor
outsl
scas
dec
xchg
lods
insl
xor
mov
dec
xchg
movd
ret
push
loopne
mov
cmp
cmp
das
ds
cmp
cmp
adc
dec
std
not
pop
addb
out
jp
outsb
push
call
cmp
nop
dec
pusha
cs
jae
push
jmp
xchg
aam
lea
xor
in
xor
jno
ffree
push
mov
cmpsl
clc
mov
push
xor
mov
divb
cmc
mov
pop
icebp
scas
je
or
mov
push
xchg
sti
fs
je
cmp
ljmp
cmp
sbb
sub
jl
loop
pop
filds
cs
push
js
mov
sbb
out
fdivr
sarb
test
adc
adc
fildl
pop
xor
mov
dec
or
push
push
push
es
or
repz
rcll
ss
cmp
cmp
insl
and
jmp
imul
mov
push
mov
sub
shrb
or
jecxz
in
mov
sbb
cli
push
or
cltd
in
ljmp
gs
and
sub
shlb
test
es
shr
or
adc
es
and
sub
and
cmp
xorl
inc
mov
pop
data16
cmpxchg
gs
mov
and
es
mov
ljmp
ljmp
daa
cmp
mov
rcrb
mov
test
ucomiss
push
xchg
push
xor
in
cs
fs
lods
mov
pop
cmpsb
mov
je
popf
gs
and
push
aad
or
or
cmp
jno
sub
xchg
push
or
inc
rorb
pop
stc
and
or
add
test
jp
jne
cltd
or
push
inc
add
mov
js
xor
cs
mov
jo
stc
mov
sub
or
xor
jbe
rorl
ja
cmp
sbb
aaa
adc
pop
cmp
adc
repz
nop
inc
push
jns
insb
mov
fldl
push
cwtl
sub
repz
mov
out
roll
dec
aaa
scas
sub
sub
bound
es
jno
push
ja
mov
js
out
xchg
dec
sbb
xor
adc
mov
and
iret
bound
daa
in
out
addr16
repnz
inc
aaa
xchg
dec
es
adc
out
adc
ss
xchg
andps
into
push
insl
push
pop
and
repz
dec
push
stos
or
imul
mov
das
add
aas
and
adc
jp
jl
xor
rcrl
popf
sub
paddb
add
rolb
xlat
mov
insl
push
loopne
dec
add
xchg
or
sbb
xlat
inc
xor
test
out
or
mov
lods
pop
mov
dec
and
rcrl
mov
icebp
sbb
or
push
cmpb
mov
clc
ljmp
xlat
std
push
aam
iret
gs
add
jo
hlt
icebp
std
jnp
and
xchg
xlat
std
sub
mov
add
ss
mov
and
mov
or
mov
inc
sbb
fidivl
dec
or
or
and
js
and
cwtl
lods
inc
cmpsb
inc
push
call
jbe
xor
aam
dec
pusha
pushf
cld
mov
sub
push
testb
icebp
mov
jp
loop
mov
xchg
push
push
ds
xchg
inc
adc
sahf
push
imul
icebp
pop
addr16
pop
xor
pop
out
push
sbb
das
push
cli
test
shl
pop
sub
rorb
adc
xor
inc
pop
dec
imul
lock
mov
jecxz
div
outsb
sub
mulb
mov
adc
inc
mov
imul
outsl
push
ljmp
jno
pop
push
ror
pop
mov
pop
inc
ja
sub
daa
xchg
push
pop
xchg
xor
push
outsl
mov
lds
test
es
icebp
sbb
aaa
cwtl
or
test
shl
std
cmp
or
jbe
push
rcll
out
pop
rclb
push
and
xor
jmp
lret
push
outsl
je
mov
orb
jae
js
adc
popa
jg
repz
xchg
fildl
xor
push
pop
jg
into
sub
sub
xor
sbb
inc
das
out
sub
cmp
cmp
jo
movb
inc
cmp
jns
jl
push
xchg
add
adc
lods
xchg
lahf
sub
out
cmp
or
jmp
mov
test
repnz
bound
into
dec
aas
sub
sub
out
xor
out
adc
aaa
mov
push
imul
jnp
into
aaa
mov
push
aas
aaa
sbb
fnsave
in
pop
jnp
in
or
lret
inc
adc
mov
aaa
les
sub
dec
jecxz
adc
mov
dec
inc
loope
pop
xchg
xor
in
mov
cmovno
push
decl
or
iret
andl
in
jno
lea
mov
mov
cld
sub
and
jnp
jne
mov
adc
push
sbb
pusha
jnp
adc
fistps
cmp
push
test
imulb
or
ds
scas
popa
insl
sub
bnd
test
inc
mov
mov
adcl
sahf
adc
dec
ja
sbb
add
and
rclb
mov
jge
cmpb
add
cmpsb
or
sub
or
jmp
scas
pop
loope
mov
dec
mov
adc
or
fcom
push
dec
unpckhps
xor
jp
xchg
xchg
jb
sti
iret
pushf
push
xor
jb
stc
xchg
cltd
or
mov
xchg
in
mov
arpl
dec
sub
outsb
dec
xchg
outsl
jns
scas
shll
cmp
pop
mov
or
int3
pop
push
outsb
imul
inc
mov
push
aaa
roll
inc
ret
mov
inc
aaa
push
jl
sbb
xor
pop
add
aaa
push
icebp
loope
iret
xor
inc
pop
cmpsb
int
sbb
sub
mov
xchg
loope
aam
adc
dec
jno
stc
icebp
test
adc
sahf
adc
cwtl
lret
jne
inc
inc
rcr
or
popf
fdivrl
xchg
dec
pop
sub
add
push
lods
daa
scas
out
jp
mov
sub
cmpsl
sub
dec
clc
jp
popf
push
adc
dec
mov
cld
sbb
jle
out
sub
divb
add
xor
pop
push
popa
test
inc
das
movsb
sbb
movsl
into
pop
fldl
inc
push
push
inc
outsl
test
mov
pop
in
mov
bound
mov
sbb
pop
xchg
push
loope
aam
add
repz
inc
lock
xchg
mov
or
scas
rolb
and
mov
mov
cmpsb
jecxz
xchg
and
inc
lcall
shll
in
out
pop
xor
push
xchg
fiadds
imul
ret
push
dec
fstpt
repnz
data16
mov
jg
mov
in
push
mov
scas
data16
cmp
inc
mov
adc
mov
xchg
or
dec
pop
cmp
fwait
sbb
push
shrb
jns
push
adc
fisttpl
lea
add
xchg
inc
in
movsl
jp
and
push
sbb
stc
push
cs
lret
mov
inc
mov
adc
call
rol
inc
cs
push
adc
or
cmpsb
dec
mov
and
mov
in
ret
bound
xchg
mov
imull
movsl
loop
push
push
mov
out
in
or
pop
mov
aas
jge
lods
fwait
xor
lret
fdivrl
push
jbe
call
es
shll
das
sub
xor
mov
sbb
and
insb
and
pop
mov
aad
call
test
outsl
repz
jnp
or
mov
push
loopne
mov
ss
je
mov
adc
xchg
lods
pop
inc
push
push
lock
cmp
add
stc
add
std
hlt
or
insl
jnp
inc
cmp
addr16
add
push
das
pop
imul
xchg
imul
push
ljmp
mov
es
repnz
insb
daa
jge
popa
testl
jle
bound
in
lret
incb
pop
sub
xor
rorl
lahf
lock
xor
int3
aad
repz
pop
loop
dec
push
jg
hlt
push
aas
push
in
or
dec
jno
pop
push
inc
jle
lds
repz
adc
sub
push
cmp
adc
lods
adc
ja
out
push
pop
xor
mov
das
dec
ja
insl
sub
fisubrs
dec
ds
cs
xor
daa
aaa
stos
fs
or
flds
out
push
mov
mov
fdiv
inc
jo
sbb
xchg
add
fistpll
into
mov
add
push
mov
lret
movsb
cmpb
push
ljmp
clc
sub
cmp
shl
dec
in
les
dec
pushf
and
mov
aas
fidivl
adc
add
into
add
push
enter
mov
shll
jbe
daa
into
jo
pop
mov
aad
jo
sbb
cmpsb
scas
rorb
dec
mov
nop
in
fisttps
sub
xchg
idivl
mov
inc
nop
adcb
out
cmp
call
jns
pop
jns
mov
or
and
leave
xchg
mov
or
push
xor
data16
daa
push
lods
addr16
fbld
mov
pop
lret
fsubrs
stos
dec
cmpsb
or
sub
mov
pusha
pop
mov
movsb
mov
mov
pop
mov
adc
sbb
sub
cmp
js
jmp
lahf
cmc
dec
or
push
adc
add
cmp
mov
mov
insl
subb
cmp
test
stos
dec
mov
add
inc
fbld
call
lcall
xchg
andl
cmpsb
mov
fcmovu
pop
loope
out
mov
jns
push
inc
rcrb
negl
out
rol
repnz
flds
xlat
loop
pop
mov
push
pusha
enter
mov
mov
aad
test
nop
mov
stc
aam
outsl
leave
lods
add
mov
popf
in
pop
fidivl
mov
sub
dec
mov
ficoms
pop
in
adc
std
mov
or
fistpl
stc
mov
jb
dec
or
stc
insl
cmp
aad
mov
loopne
pop
push
fiadds
cmp
in
cmpsl
bound
pop
iret
cmpsl
movsl
dec
cs
cld
pop
mov
loope
adc
into
ljmp
mov
ljmp
mov
rol
mov
push
std
aaa
popa
xlat
sti
call
mov
sti
adc
add
ffreep
sub
lods
out
sub
test
fiaddl
out
jl
cmpsb
ljmp
push
sbb
test
dec
es
aas
sbbl
adc
outsb
rcr
cltd
or
xchg
push
mov
das
sbb
int
or
adc
xor
sbb
out
es
jg
lds
fsubrl
and
push
mov
pop
jmp
stc
mov
cmp
add
int
cmc
bound
jne
arpl
jle
cs
sbb
lock
xchg
cmpsl
add
inc
jo
inc
fstpt
out
push
aaa
dec
mov
push
lock
stc
jo
shlb
inc
lea
pop
inc
cmpsb
mov
jge
pop
fsubr
imul
add
add
add
add
call
add
adcb
add
inc
add
sbbb
add
pop
add
addb
add
add
add
jo
add
add
add
add
add
mov
add
add
add
add
add
mov
add
add
or
add
add
add
add
add
add
add
add
add
add
add
nop
add
cmp
add
xor
add
mov
add
pop
add
add
inc
add
add
dec
push
inc
push
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
or
add
imul
add
lcall
add
add
add
add
add
add
add
add
add
add
add
add
add
add
decl
add
add
add
add
decl
add
add
add
sbb
add
decl
add
add
add
add
add
decl
add
add
add
addb
add
decl
add
add
add
decl
add
add
add
decl
add
add
add
decl
add
add
add
addb
add
decl
add
add
push
add
adc
add
decl
add
add
incl
add
add
decl
add
add
pop
add
push
add
add
decl
add
add
add
add
decl
add
add
incl
add
add
decl
add
add
incl
add
add
decl
add
add
pop
add
add
add
pusha
add
add
add
add
add
add
add
and
add
incl
add
add
add
pushl
add
addb
add
add
add
add
add
add
add
adc
add
add
add
add
xor
add
incl
add
add
add
add
add
add
pop
add
add
add
call
add
add
js
add
decl
add
sbb
add
pushl
add
add
negb
pop
sub
and
xchg
outsb
add
inc
jmp
ja
jl
rcll
mov
ja
jmp
jmp
ja
jl
rcll
mov
ja
jmp
jmp
fidivrs
adc
ja
jmp
jns
pop
pop
mov
test
xor
add
add
pushl
add
add
add
add
add
add
add
inc
add
add
incl
add
add
add
add
add
add
add
inc
add
add
decl
push
push
push
dec
clc
dec
cmpsb
mov
xchg
popa
pushf
push
add
add
add
add
add
add
add
incl
add
add
add
add
add
add
add
add
add
add
outsl
insb
xor
je
bound
push
call
decl
add
pushl
add
dec
add
add
jmp
add
incl
add
add
mov
lcall
add
jl
add
jmp
call
add
dec
dec
popa
jbe
outsl
insb
insb
arpl
outsb
dec
imul
decl
cmp
push
inc
outsl
insb
insb
arpl
outsb
push
push
add
add
decl
cmp
insb
insb
arpl
outsb
push
add
add
incl
add
dec
je
insl
push
call
add
jae
inc
imul
outsb
imul
decl
add
inc
gs
outsl
jne
je
incl
add
xchg
jo
inc
outsl
jne
je
add
add
incl
add
les
je
je
insl
push
incl
dec
je
insl
push
push
push
call
add
imul
gs
fs
imul
dec
popa
jbe
outsl
insb
insb
arpl
outsb
and
xor
push
jns
and
jb
jb
adc
inc
outsl
insb
insb
arpl
outsb
and
popa
jae
push
push
adc
insb
insb
arpl
outsb
and
je
jb
popa
arpl
push
add
je
outsl
and
fs
je
insl
verw
je
outsl
and
je
outsl
jne
je
push
push
push
add
je
outsl
and
je
je
insl
sbb
add
add
sbbb
or
add
orb
add
add
gs
je
and
and
inc
dec
and
jb
imul
xor
xor
je
inc
jb
and
and
aaa
and
xor
xor
cmp
xor
adc
mov
push
adc
sub
add
push
push
sbb
add
add
add
pushl
add
add
add
add
add
add
dec
add
add
add
nop
add
add
add
sbb
sbb
sbb
inc
add
add
add
add
add
add
add
add
add
andb
add
add
add
add
sbb
sbb
and
dec
add
inc
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
addb
add
and
pop
add
inc
add
add
add
add
add
jo
add
add
add
add
add
or
add
int3
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
pop
add
add
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
in
jl
add
add
in
jl
add
add
add
add
add
add
add
mov
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
xchg
add
add
add
add
xor
cmp
xor
xor
inc
add
add
add
adc
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
inc
add
je
inc
add
data16
outsb
add
add
and
push
add
add
add
add
add
add
or
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
add
push
push
add
xor
jno
je
data16
add
inc
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
add
je
add
outsb
add
insb
add
popa
add
add
add
add
add
add
add
add
add
insb
add
outsl
add
jns
jb
imul
je
add
xor
jo
jo
bound
add
aaa
add
cmp
jb
popa
add
add
add
inc
add
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
ja
je
inc
add
outsl
add
je
add
push
add
pop
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
aas
js
insb
and
jb
imul
xor
and
arpl
imul
inc
sub
je
outsb
fs
insb
outsl
outsb
gs
and
ds
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
gs
outsb
fs
arpl
cmp
gs
outsb
fs
je
jae
gs
bound
cmp
jae
gs
bound
fs
je
je
and
gs
xor
and
outsb
popa
insl
gs
jb
jae
data16
push
imul
inc
outsl
insl
insl
outsl
outsb
sub
jb
insb
jae
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
jo
bound
dec
gs
outsl
imul
and
xor
xor
xor
arpl
xor
and
addr16
addr16
ds
fs
outsb
fs
je
jae
gs
bound
cmp
fs
outsb
fs
arpl
cmp
jb
jae
dec
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
cmp
arpl
imul
jne
jae
gs
jb
jbe
insb
gs
cmp
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
ds
jb
jno
gs
gs
jb
jbe
insb
gs
cmp
jae
arpl
imul
jne
je
outsb
outsw
ds
popa
jae
gs
bound
