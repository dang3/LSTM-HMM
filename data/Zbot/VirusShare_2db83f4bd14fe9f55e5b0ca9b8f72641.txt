dec
shll
adc
nop
adc
nop
sub
or
sbb
dec
dec
add
cltd
call
or
adc
mov
pop
or
inc
or
inc
add
stc
and
adc
add
mov
add
and
add
addl
add
push
add
nop
jo
popa
loop
add
adc
add
orb
or
sub
add
and
pusha
or
and
add
and
mov
and
adc
or
addb
xor
and
add
or
adc
call
sub
or
sbb
add
xchg
orl
or
jb
pusha
add
or
add
adc
pop
adc
or
rolb
or
inc
add
andb
push
push
add
cs
add
inc
push
add
pop
push
add
adcb
push
add
test
add
ret
add
push
add
add
add
push
add
cmp
add
push
push
add
push
push
add
xchg
push
add
lods
push
add
mov
push
add
in
push
add
push
push
add
push
push
add
add
add
inc
push
add
bound
add
add
nop
push
add
lods
push
add
push
add
clc
push
add
adc
add
sub
add
inc
push
add
jb
add
xchg
add
push
add
out
push
add
clc
push
add
adc
add
xor
add
add
pop
pop
add
js
add
xchg
pop
add
lods
pop
add
rcrb
add
pop
add
cli
pop
add
sbb
add
add
add
add
add
pop
add
pop
add
dec
pop
add
jbe
add
into
pop
add
lock
add
sbb
add
dec
pop
add
sbbb
pop
add
or
sub
outsb
pop
add
les
repnz
add
or
add
sub
add
add
sahf
pop
add
in
pop
add
push
pop
add
sub
add
jle
add
rcrb
add
pop
add
add
add
add
add
add
pop
add
in
add
cld
pop
add
sbb
add
add
inc
pusha
add
pop
pusha
add
jb
add
mov
add
pusha
add
mov
pusha
add
loop
add
add
add
popa
add
xor
add
inc
popa
add
pop
popa
add
jbe
add
mov
add
popa
add
int3
popa
add
out
popa
add
add
add
adc
add
and
add
cmp
add
add
bound
add
add
nop
bound
add
bound
add
bound
add
bound
add
bound
add
arpl
add
arpl
add
arpl
add
add
push
arpl
add
add
mov
add
arpl
add
arpl
add
arpl
add
arpl
add
arpl
add
add
and
xor
push
add
pop
add
insb
add
js
add
mov
add
add
mov
add
shlb
hlt
add
or
add
add
dec
add
jo
add
mov
add
add
shlb
add
add
add
and
add
add
bound
add
data16
mov
data16
clc
data16
or
add
add
add
add
add
dec
add
pop
add
insb
add
mov
add
add
aam
add
out
add
add
add
push
add
inc
push
add
jle
add
xchg
push
add
mov
push
add
push
imul
add
imul
add
add
js
add
mov
add
imul
add
imul
add
push
add
push
add
add
push
push
add
add
add
test
add
add
enter
loopne
add
hlt
push
add
imul
and
add
imul
push
imul
jb
add
subb
add
add
dec
mov
sub
xor
mov
mov
inc
aam
dec
dec
test
jnp
aam
dec
adc
mov
lock
gs
adc
push
lds
sub
insl
adc
pop
pushf
push
dec
adc
push
xlat
popa
fimull
pop
sahf
insl
cmp
pop
sahf
popf
push
outsb
sbb
pop
sti
decl
outsb
push
mov
nop
out
in
je
xlat
jns
jp
outsb
cwtl
out
lcall
xchg
ja
push
repnz
ficoml
test
sbb
sti
xor
dec
in
inc
pop
sahf
sbb
sbb
js
adc
and
cmovp
insb
dec
inc
jo
testb
vpshufd
or
jmp
inc
jg
sbb
dec
mov
cmp
test
out
and
fs
fdivs
pop
add
lret
pop
mov
mov
pop
lret
push
push
insl
ffree
mov
pusha
pop
sbb
adc
out
and
leave
scas
lods
cltd
push
dec
sbb
aad
push
push
pushf
pop
mov
sub
xchg
inc
enter
adc
push
sbb
in
inc
cmc
out
lcall
adc
dec
out
xchg
sub
es
sbb
push
int
nop
xor
cmpsl
dec
aad
in
lcall
adc
sarb
cmp
inc
cmpsb
jnp
divb
and
push
push
adc
loopne
push
insl
dec
adc
inc
push
inc
addr16
mov
test
int3
ss
pop
mov
mov
fdivrs
scas
xchg
push
es
inc
inc
aam
je
shl
inc
aam
push
sub
dec
mov
fs
aam
nop
out
in
je
xlat
dec
enter
out
push
inc
jg
popf
aad
inc
fs
fsub
lods
out
hlt
gs
cmp
adc
adc
pusha
mov
out
cmpsb
inc
inc
push
int
or
gs
jecxz
bound
leave
push
inc
outsb
push
push
adc
out
inc
pusha
pop
pop
imul
je
sub
inc
stc
cwtl
adc
cmc
sub
inc
mov
dec
cmp
lret
cltd
lods
push
hlt
sbb
gs
mov
push
lock
inc
adc
into
mov
inc
aam
ficomps
pusha
in
and
lcall
mov
inc
aam
in
in
sub
xchg
fwait
add
test
addr16
outsb
and
adc
cmp
lcall
adc
add
in
fucomp
xchg
pop
sbb
imul
adc
clc
adc
aad
out
mov
repnz
aad
insl
lock
push
push
inc
aam
in
into
pop
pusha
fldenv
xchg
mov
movsl
out
out
mov
outsb
in
aam
bound
pusha
das
cmp
rclb
or
mov
rcll
pop
jne
push
pop
in
fsubrp
out
iret
pop
sbb
pop
mov
cmp
aam
dec
lock
int
into
ficoml
aam
in
in
sbb
gs
inc
xchg
cld
call
xor
in
fnclex
pop
dec
fdivl
out
iret
nop
sub
aad
pushf
pushf
dec
xor
lret
cmpsb
inc
pusha
mov
adc
incl
lret
dec
pop
in
cmp
jne
or
dec
fstpl
xchg
dec
imul
insb
sub
popa
add
ljmp
es
jo
scas
sti
sti
inc
aam
mov
sub
div
adc
sbb
movsl
out
out
mov
fdivl
jno
add
lcall
adc
dec
or
fucomp
out
adc
adc
out
xlat
nop
popa
pop
cltd
jmp
sbb
jno
xor
xor
sbb
leave
nop
cmp
pusha
push
clc
stc
in
lods
out
out
in
sbb
imul
push
fisubl
adc
xor
imul
sbb
arpl
cmpsb
pop
stos
bnd
fcoml
lret
daa
pop
mov
adc
mov
in
lcall
adc
pusha
add
sbb
adc
sbb
adc
insb
pop
dec
std
pop
xchg
cmpsb
inc
enterw
imul
dec
dec
jbe
mov
test
xchg
movsl
xchg
popa
pop
jge
sub
xchg
mov
sbb
mov
push
lea
sbb
shl
xchg
cmpsb
insb
fcoml
imul
imul
cwtl
das
pop
jecxz
push
cmp
lcall
pop
gs
and
jmp
lret
push
and
daa
jg
add
imul
outsb
mov
pop
imul
loopne
outsl
test
adc
nop
adc
imul
idiv
mov
xchg
jg
lahf
sub
mov
add
mov
mov
pop
sbb
cs
mov
stos
jns
mov
push
mov
cmp
int
pop
outsl
insb
pop
in
jmp
loope
sbb
outsb
jns
stc
leave
dec
lock
and
dec
popa
smsw
push
inc
jp
call
fwait
mov
aad
sub
int3
test
push
cmp
lods
lods
pushw
xor
mov
push
int
outsl
popa
ja
cmp
cmc
aad
in
jecxz
call
xchg
ljmp
fwait
jg
mov
and
call
out
jp
movsb
call
pop
ljmp
cld
stos
xchg
pop
xchg
xchg
adc
std
mov
mov
cld
fidivs
jbe
movsl
imul
adc
jp
aaa
rcl
bound
adcb
outsb
sbb
jo
add
stc
daa
or
loop
jmp
mov
cmp
icebp
fstps
sub
mov
negl
repnz
cld
cmpsb
xchg
ds
xlat
shrb
std
mov
movsl
ja
cmp
sbb
pop
or
loop
jmp
mov
lods
scas
pop
jmp
xchg
shr
sbb
fidivrl
loop
lahf
sti
mov
std
arpl
dec
in
xchg
pop
daa
fistl
add
pop
dec
test
pop
cmp
outsl
std
loop
add
adc
aam
jb
out
mov
lods
cli
jbe
xchg
pop
sub
mov
pop
imul
cmp
jecxz
push
aaa
shlb
jl
mov
push
mov
pop
shr
ss
push
sub
in
xchg
fsub
imul
and
sbb
arpl
dec
mov
xor
mov
fwait
adc
or
js
movsl
sub
mov
stc
inc
or
loop
call
cmc
shlb
cmp
lods
fdivl
subb
mov
jmp
mov
lods
cmp
mov
xchg
mov
adc
inc
fldenv
or
mov
lret
push
outsl
pop
mull
lods
fucomi
cli
in
jg
push
xchg
push
ja
stos
mov
push
lahf
mov
out
je
cmp
mov
rclb
push
loope
outsl
jae
mov
jecxz
push
std
aad
xchg
dec
idivb
xorb
or
bound
mov
push
js
enter
lcall
dec
or
loop
call
iret
sbb
cmp
xor
ds
loope
adc
mov
push
imul
sbb
mov
test
adc
fldcw
jecxz
std
clc
pop
loopne
push
out
dec
ljmp
xchg
push
jl
int
sub
mov
xchg
pop
and
push
aam
sahf
jo
test
call
jmp
adc
inc
jno
jns
adc
mov
es
mov
xor
loop
fmuls
sbb
cmp
int3
mov
test
jmp
mov
ss
in
xchg
push
sbbb
sbb
imul
sbb
cmp
xchg
adc
lret
jo
push
imul
and
jg
in
data16
popf
and
sbb
dec
scas
xchg
ret
test
mov
lea
mov
int
fwait
add
sub
push
inc
xor
shlb
inc
and
cmpl
shrl
gs
inc
daa
movsb
pop
sub
ror
das
leave
mov
or
hlt
adc
xor
push
mov
dec
je
jl
dec
mov
push
inc
dec
xchg
in
cmp
flds
rcr
inc
testb
lret
inc
sub
push
mov
shl
movb
adc
icebp
push
jg
fisttpll
pop
cmp
aas
leave
leave
dec
dec
dec
push
dec
jecxz
ja
sub
movsl
fidivrl
iret
movb
push
and
and
mov
mov
dec
xor
clc
mov
fstpl
loope
fistps
mov
inc
jno
or
mov
sub
jl
jp
test
fsts
popf
xchg
jl
and
xor
loop
push
and
sub
xor
dec
aad
dec
dec
rorl
out
lcall
mov
xor
stos
bnd
mov
and
jl
mov
pop
sbb
xchg
jne,pn
mov
sbb
push
cmc
pop
jno
ljmp
lock
xor
je
fists
cmc
or
push
jg
roll
add
imul
push
cwtl
sti
cmpsl
adc
loope
jl
push
in
int3
lcall
aaa
cmpb
jo
test
jnp
cld
pop
push
xchg
idivl
cwtl
mov
mov
jmp
jge
push
jecxz
mov
out
xchg
data16
xor
dec
imulb
jno
pop
leave
in
out
xor
data16
push
adc
icebp
mov
daa
inc
int3
stos
cltd
je
adc
ja
lcall
mov
push
jecxz
movsl
adc
into
jbe
dec
outsl
and
stos
mov
and
cwtl
movb
and
push
jbe
stos
mov
fistpl
out
in
xchg
sub
jbe
fs
loopne
sub
xchg
dec
xchg
adc
ljmp
push
scas
out
movsl
sub
mov
int
push
rol
test
scas
sub
test
mov
mov
cltd
and
jnp
fs
cltd
es
shl
frstor
mov
cmp
pop
mov
lock
imul
cmpsl
lcall
inc
push
jb
adc
jle
jne
sbb
sahf
gs
add
fs
fs
sbb
out
and
in
push
cmpsl
iret
call
mov
lods
push
test
push
cmpsb
in
inc
push
hlt
or
call
cmp
inc
test
mov
mov
aam
es
in
and
pop
sub
out
sbb
fists
daa
lret
push
arpl
negl
xchg
rol
sub
push
and
or
icebp
out
aam
xor
lret
sbb
je,pn
add
shl
mov
adc
adc
loope
lahf
icebp
add
lret
xor
lock
nop
mov
jnp
insl
adc
sbb
or
push
xor
aam
in
sub
xor
nop
and
and
pop
inc
gs
dec
jl
adc
popf
push
and
es
jbe
mov
mov
mov
hlt
sbb
push
daa
aas
stos
mul
pop
push
pop
jne
fsubs
cltd
into
cli
test
mov
mov
fwait
lods
xor
mov
inc
jle
icebp
addr16
in
iret
jl
jp
cmp
mov
in
sbb
inc
add
adc
or
sahf
push
push
mov
adc
fucom
sub
iret
add
lahf
dec
or
leave
inc
out
imul
test
aam
ret
lods
js
dec
cltd
adc
inc
xchg
nop
sbb
and
call
dec
imul
add
dec
repnz
sbb
or
sub
xchg
pop
cs
test
xchg
rorl
aam
cmp
push
dec
mov
fwait
in
or
adc
sbb
cs
push
inc
bound
out
and
xorl
xchg
mov
dec
stc
fwait
or
idivl
sbb
ret
fldcw
jne
in
ljmp
xchg
mull
pop
inc
icebp
jno
dec
adcl
and
scas
repnz
and
mov
test
std
mov
mov
std
mov
cmpsb
std
mov
int3
std
mov
js
std
mov
js
cld
popf
jp
sbb
push
xchg
adcl
sbb
movb
xor
dec
adc
push
dec
push
addr16
adc
push
push
out
push
out
push
xchg
dec
pop
pop
dec
pop
sbb
sub
decb
lock
and
in
xor
pop
dec
aaa
pop
dec
cs
fbld
fcoms
scas
nop
mov
adc
nop
adcb
nop
xchg
adc
call
xchg
adc
fcoml
rclb
lret
nop
mov
adc
leave
nop
lret
pop
lret
xchg
mov
insw
add
daa
jmp
pop
cmc
lods
jo
cmc
test
sahf
dec
fisubl
add
or
adc
shrl
fdivrl
in
bound
pop
pop
loopne
pop
xchg
cmpsb
lret
mov
inc
clc
js
add
sub
or
and
test
or
ja
fisttpll
adc
js
dec
lods
test
dec
fidivrl
push
cwtl
sub
ljmp
push
int3
dec
das
cmp
sub
xchg
cltd
sub
ljmp
mov
fcmovu
fwait
int
cmp
mov
lret
js
add
push
dec
in
sbb
mov
or
pop
roll
add
sti
pop
loopne
popa
je
mov
fs
pop
xor
or
loop
add
loop
cmp
rcrb
cmp
xchg
add
mov
or
fidivrs
pop
dec
sarl
pop
sub
sbbl
pushf
pop
or
popf
pop
or
sahf
pop
push
roll
pop
xor
sbbl
rorl
pop
sbb
test
roll
pop
pop
rorl
push
inc
clc
mov
fs
push
pop
lods
xlat
inc
fcmovne
pop
inc
fmul
pop
inc
mov
sub
dec
test
and
xchg
or
mov
pop
xchg
xchg
or
xchg
or
xchg
or
xchg
or
test
or
stos
or
lods
or
lods
or
mov
or
or
mov
inc
xchg
or
or
xchg
adc
nop
cltd
jl
xchg
sbb
cmpsl
lcall
fcomps
mov
pop
fistps
mov
pop
scas
lcall
mov
lcall
cmpsl
lcall
test
lcall
test
xchg
pop
lods
lcall
scas
lcall
mov
popf
pop
mov
lcall
lcall
clc
lcall
cli
lcall
cld
lcall
into
lcall
rcrb
pop
ret
pop
lcall
leave
lcall
lret
lcall
adc
aaa
stos
ljmp
scas
out
pop
aaa
stos
ss
aaa
test
pop
aaa
mov
push
pop
xor
inc
xor
lret
add
arpl
inc
xor
adc
sbb
in
nop
sbb
setae
arpl
inc
sbb
or
std
or
sub
addr16
jmp
cmp
jmp
loopnew
push
jp
jmp
addr16
or
jmp
jp
ljmp
push
ljmp
or
ljmp
or
sub
pop
ljmp
push
dec
fiaddl
adc
dec
xchg
les
pop
mov
les
pop
cmpsl
es
dec
movsb
les
xchg
dec
push
dec
mov
les
dec
lods
les
pop
mov
pop
and
pop
mov
cld
push
and
call
les
out
les
loopne
les
aaa
repz
les
xor
sbb
jb
jmp
fnsave
fdivl
sbb
jae
leave
fdivl
faddl
cltd
call
faddl
pop
iret
or
pop
int3
fdivl
rcr
sbbl
fsubrl
call
faddl
pop
xlat
fdivrl
enter
out
sbb
jae
hlt
mov
adc
mov
push
hlt
mov
adc
mov
push
hlt
mov
cmp
dec
rcll
push
mov
jo
cmp
xor
hlt
xorb
xorl
hlt
addl
hlt
test
hlt
xchg
hlt
xchg
hlt
lods
jo
hlt
scas
jo
hlt
scas
jo
hlt
shlb
hlt
shll
hlt
shlb
hlt
shll
hlt
aam
loopne
aad
loope
jo
hlt
xlat
jo
hlt
fdivs
hlt
fnstenv
hlt
fidivl
hlt
hlt
mov
jo
hlt
mov
jo
hlt
mov
test
lods
dec
cmp
mov
dec
add
dec
or
clc
dec
pop
stc
mov
cli
dec
or
sti
mov
cld
insb
js
mov
dec
pop
xchg
faddl
sahf
fmull
dec
dec
pop
sbb
sub
jbe
mov
ja
insl
rcrl
fmull
fisttpll
fimuls
dec
sub
rorb
rorl
ret
jae
dec
push
les
leave
mov
mov
pop
outsl
in
add
bnd
addr16
aas
gs
ljmp
xchg
add
ljmp
mov
ljmp
ja
add
ljmp
test
push
outsl
jge
push
das
jns
adc
jp
adc
add
and
das
repnz
das
not
pop
das
sbb
sub
das
pop
shlb
sub
mov
sub
mov
cmp
cwtl
fdivl
pop
push
fdivl
pop
add
xor
fdivl
pop
add
inc
push
rorl
dec
xchg
push
or
dec
jbe
push
sar
push
les
xor
fdivl
jp
imul
in
jns
loop
jle
jecxz
dec
shl
pop
xchg
fdivp
pop
pusha
pop
xor
add
popf
clc
pop
jl
stc
pop
test
cli
pop
add
ret
dec
add
fstpl
pop
add
ffreep
int
iret
lret
mov
lret
addl
adc
fnsave
andl
lret
cwtl
inc
mov
lret
bound
les
mov
imul
repz
lret
mov
sbb
test
pop
mov
stos
inc
lret
test
mov
mov
inc
mov
mov
addr16
adc
xchg
lods
orb
fmull
mov
leave
movsb
push
rcr
movsl
push
rcl
cmpsb
push
aam
mov
adc
lea
lret
sub
movsb
lret
add
lret
jge
push
mov
xchg
fs
mov
pusha
pushw
mov
loopne
bound
xor
scas
jbe
hlt
test
jo
hlt
stos
jo
hlt
int3
ja
hlt
or
xor
push
stc
dec
adc
cli
dec
push
sti
or
cld
fildl
jo
popf
add
clc
and
lock
jae
mov
js
inc
dec
jg
inc
dec
jp
push
jmp
xor
out
dec
push
roll
push
clc
dec
jg
rclb
dec
dec
faddl
dec
rcrb
les
dec
push
in
pop
ljmp
addb
inc
bound
push
aad
dec
mov
xchg
xor
mov
push
fstps
ds
fdivrs
and
jge
cltd
fcoml
les
dec
cmp
movsl
mov
sbb
lret
sub
and
dec
cltd
and
dec
popa
and
lea
mov
mov
adc
scas
clc
shlb
out
clc
shlb
std
shrb
das
cli
shrb
das
call
sub
cld
shrb
das
rcl
das
into
shlb
das
ret
sarb
das
rcl
das
das
ret
das
shlb
das
shlb
das
leave
rolb
sarb
lret
rolb
enter
int
jns
lret
das
iret
sarb
int3
sarb
rcl
dec
das
inc
das
rcl
dec
sub
leave
push
mov
imul
insb
push
mov
insl
push
mov
outsb
push
mov
outsl
push
mov
rcll
sbb
pop
test
popa
pop
sbb
xchg
pop
aaa
rcrl
pop
sbb
jecxz
sbb
cld
pop
sbb
std
push
sbb
push
sbb
out
sbb
shl
push
pop
shl
push
add
jmp
add
in
add
in
add
out
add
out
push
add
shr
push
pop
shr
push
sub
xor
rorl
sub
push
pop
sub
ficompl
shll
pop
shll
pop
das
shll
pop
push
sarl
pop
push
shll
push
shll
pop
push
sarl
pop
push
sarl
pop
push
sarl
pop
push
sarl
pop
cmp
add
rcrl
cmp
push
pop
cmp
pop
pop
cmp
roll
pop
aas
roll
pop
and
or
roll
rorl
pop
daa
rorl
pop
dec
rcll
dec
shrl
dec
shrl
pop
dec
rcll
dec
rcll
dec
rcll
dec
rcll
jo
pop
pop
jno
push
pop
jb
push
pop
jae
push
pop
je
pop
pop
jne
pop
pop
pop
shll
pop
pop
sarl
pop
sarl
pop
pop
shll
pop
pop
shll
pop
pop
shll
pop
pop
shll
pop
inc
shrl
pop
inc
shll
or
sbb
push
or
pop
pop
or
roll
pop
psrlw
pop
xor
or
roll
xor
push
pop
xor
minps
rorl
pop
aaa
rorl
pop
sbb
push
pop
sbb
sub
sbb
sub
pop
sbb
push
pop
sbb
rcll
pop
rcll
add
pop
pop
add
push
pop
add
push
pop
add
push
pop
add
pop
pop
add
rcrl
pop
rcrl
sub
and
sarl
sub
ds
sub
daa
pop
sub
shll
pop
das
shll
pop
push
shrl
pop
push
shll
push
shll
pop
push
shrl
pop
push
shrl
pop
push
shrl
pop
push
shrl
pop
cmp
jae
cmp
dec
pop
cmp
dec
pop
cmp
dec
pop
cmp
in
mov
jmp
mov
test
shll
in
and
xor
inc
mov
inc
daa
in
inc
xchg
int3
pop
dec
cwtl
int
xchg
outsb
notl
jmp
repnz
adc
or
dec
rcrb
je
xor
outsb
inc
ja
js
pop
rcrl
rorl
pop
rorl
pop
shrl
rcll
pop
pop
rcrl
pop
inc
imul
xchg
inc
push
inc
mov
mov
xchg
imul
ja
or
ljmp
xchg
cmp
aaa
add
cmpb
cmp
pop
out
xchg
mov
test
push
ljmp
mov
es
stos
adc
pop
mov
aas
or
loop
call
and
mov
and
mov
cmp
dec
xchg
mov
dec
mov
mov
jne
mov
jbe
imul
loop
call
mov
jl
fsubrs
lret
xor
jns
addr16
push
mov
stc
insb
or
loop
jmp
mov
loop
or
jecxz
xchg
testb
push
mov
mov
repnz
repz
lods
cmc
ja
xchg
pop
mov
ja
cmp
lret
les
std
decb
or
loop
jmp
mov
push
rcr
adc
pop
sbb
pop
into
stc
fisttpll
loop
jmp
mov
push
cmp
push
push
xchg
das
jp
aaa
sub
push
jl
mov
outsl
fnstenv
cmp
mov
in
stos
push
mov
mov
sbb
aaa
sbb
jl
mov
push
cmp
lea
cmp
cmp
shlb
rol
fs
jl
mov
adc
jne
movsl
cli
movsl
adc
dec
imulb
test
jns
mov
pop
andl
jae
mull
pop
xchg
pop
ret
cld
jns
aas
sbb
pop
mov
div
dec
je
loopne
cld
cmpsb
add
in
xor
jns
jns
fisttps
lods
mull
push
imul
int
addl
push
fisubl
add
xor
sbbb
sub
cltd
sub
push
xchg
push
mov
and
js
or
imul
testl
and
mov
sub
jnp
lods
incl
jno
in
jns
ds
rolb
cld
in
hlt
lret
sbb
dec
fwait
imul
xchg
sub
std
mov
or
push
jno
insl
jns
jl
dec
adc
inc
loope
stos
push
cmp
sub
sub
aad
dec
imul
imulb
repnz
imul
mov
fsubrs
push
push
test
mul
jg
arpl
call
jg
and
xor
cld
out
hlt
fs
jns
sbb
mov
gs
mov
enter
inc
or
push
cmp
inc
adc
ljmp
xchg
jns
pop
inc
sbb
sub
dec
jp
push
and
mov
push
notb
fsubrs
mov
jns
push
ficompl
jns
mov
dec
divb
and
imul
mov
sub
dec
cltd
bound
push
mov
sbb
xor
lods
mov
xor
imul
fnstsw
push
int
pop
ror
adc
std
cli
fcomps
mov
pop
cld
sbb
flds
inc
jnp
xor
push
mul
sub
loope
hlt
ja
dec
test
push
add
int3
xchg
cld
clc
or
xchg
mov
xor
aam
mov
add
cld
pop
sbb
lock
xchg
xchg
stc
negb
xchg
jo
jns
xor
mov
outsl
or
jge
cld
or
jbe
xchg
or
xor
inc
addl
cld
sbb
mov
push
movsb
sub
jl
jno
add
jno
sub
std
pop
sarl
or
sbb
loope
loope
cld
sar
inc
mov
jns
aaa
push
enter
add
mov
pop
push
call
pminsw
cmp
stc
adc
cmp
mov
add
xchg
call
imul
divb
xor
addr16
int
imul
mulb
xchg
in
jns
imul
mov
fstps
mov
pusha
and
cmp
pusha
loop
movsl
push
divb
add
mov
fcoms
icebp
outsl
xchg
cs
adc
mov
jns
jns
xor
clc
movsl
cld
cmp
data16
js
dec
push
cmp
push
and
fneni(8087
negb
lock
lods
mov
sahf
pop
std
jo
je
mov
xchg
push
mov
imul
mulb
pop
jne
psraw
arpl
cmp
sbb
ror
push
div
ds
cld
inc
stc
xor
xor
sti
pop
mov
mov
jno
imul
jns
call
jge
jg
push
cmp
jns
or
sub
xor
das
in
jno
push
adc
jns
fstp
mov
xchg
push
stc
ss
push
push
pslld
inc
cmp
fdivl
ret
inc
or
repz
pop
insl
push
notb
push
stc
loope
notb
loopne
mov
sbb
or
aam
in
or
je
cmp
scas
dec
mov
and
mov
push
orb
fcomi
jns
cmp
jp
mov
or
and
gs
cmp
arpl
mov
outsl
or
mov
sbb
in
repnz
xchg
clc
insl
push
jns
popa
xchg
jp
sub
push
jp
push
test
cmp
mulb
aam
pop
xor
imul
test
and
aaa
cmp
fstps
loop
out
jp
jno
mov
mov
sbb
push
ja
push
xorl
cmp
jae
add
cld
or
or
loop
jmp
mov
sub
add
mov
add
add
movsb
inc
add
and
in
sub
mov
lea
mov
push
mov
mov
push
and
mov
mov
mov
test
je
or
lea
cmp
je
mov
mov
mov
sub
mov
push
mov
xor
mov
mov
mov
mov
xor
mov
lea
mov
or
mov
mov
mov
mov
test
jne
mov
cmpl
je
xor
lea
mov
cmp
je
mov
decl
mov
mov
cmp
je
mov
mov
mov
lea
mov
sub
cmp
jne
mov
cmp
jne
mov
mov
add
add
mov
test
je
cmp
je
cmp
jne
cmp
jne
sub
mov
sub
cmp
je
mov
cmp
je
test
je
xor
cmp
jne
mov
mov
test
jne
cmp
jne
lea
sub
mov
mov
cmp
je
cmp
je
cmp
jne
lea
mov
cmp
jne
cmp
je
add
mov
or
add
sub
mov
cmp
jne
mov
xor
sub
mov
test
jne
cmp
je
mov
mov
cmp
jne
lea
mov
mov
sub
test
jne
mov
xor
cmp
je
cmp
jne
add
cmp
je
add
mov
mov
xor
mov
cmp
je
mov
mov
mov
and
mov
cmp
jne
cmp
jne
mov
test
jne
lea
mov
cmp
jne
inc
mov
cmp
jne
mov
cmp
je
mov
cmp
jne
mov
mov
xor
xor
mov
mov
add
xor
sub
mov
mov
mov
cmp
jne
lea
cmp
je
cmp
jne
mov
mov
xor
mov
mov
add
mov
test
jne
test
jne
cmp
je
lea
sub
cmp
jne
mov
cmp
jne
sub
xor
and
and
cmp
jne
sub
mov
and
cmp
je
cmp
jne
cmp
je
add
sub
cmp
je
cmp
jne
mov
mov
mov
mov
mov
sub
add
cmp
je
mov
jmp
add
mov
sub
xor
cmp
jne
mov
cmp
jne
mov
lea
inc
mov
mov
lea
mov
or
add
test
je
mov
mov
sub
cmp
je
mov
mov
mov
lea
cmp
je
xor
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
cmp
jne
lea
cmp
je
mov
mov
mov
mov
mov
mov
add
cmp
je
cmp
je
mov
mov
mov
lea
mov
mov
mov
sub
mov
lea
cmp
jne
cmp
je
lea
mov
xor
mov
mov
add
mov
pop
mov
mov
cmp
je
mov
mov
mov
mov
mov
mov
test
je
mov
cmp
jne
cmp
jne
mov
pop
cmp
jne
test
jne
mov
mov
mov
mov
pop
mov
mov
pop
ret
sbb
add
mov
add
adcl
sub
mov
lea
mov
push
mov
push
mov
xor
add
mov
add
mov
add
add
mov
push
lea
mov
mov
mov
add
mov
lea
push
call
mov
mov
push
push
push
call
sub
mov
mov
mov
mov
test
je
mov
xor
mov
mov
push
call
mov
push
call
mov
mov
mov
cmp
jne
mov
cmp
je
mov
xor
mov
add
mov
mov
or
mov
mov
and
mov
mov
mov
add
cmp
je
mov
cmp
jne
mov
mov
mov
and
mov
mov
mov
mov
cmp
jne
test
je
and
lea
mov
mov
test
je
mov
mov
mov
cmp
jne
add
mov
mov
mov
mov
lea
cmp
je
cmp
je
cmp
je
cmp
je
mov
xor
mov
cmp
je
mov
lea
mov
cmp
jne
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
xor
mov
mov
add
mov
mov
mov
add
mov
dec
mov
mov
add
mov
sub
mov
mov
mov
mov
mov
cmp
je
xor
mov
mov
mov
add
mov
mov
mov
cmp
je
lea
lea
mov
and
cmp
je
mov
cmp
je
mov
lea
mov
test
je
xor
mov
mov
mov
mov
xor
mov
cmp
je
mov
mov
mov
cmp
jne
xor
add
mov
cmp
jne
mov
mov
mov
add
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
xor
lea
cmp
je
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
je
mov
mov
xor
and
mov
and
test
je
mov
mov
mov
mov
mov
mov
and
mov
and
mov
sub
cmp
je
mov
mov
test
jne
xor
lea
sub
mov
cmp
jne
mov
cmp
je
mov
mov
cmp
je
cmp
jne
mov
cmp
je
mov
cmp
jne
xor
cmp
jne
mov
mov
and
mov
mov
mov
mov
add
cmp
jne
mov
mov
mov
mov
test
je
xor
mov
mov
mov
and
cmp
je
mov
lea
and
cmp
je
mov
mov
mov
mov
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
sub
xor
mov
add
cmp
jne
cmp
je
mov
test
jne
and
cmp
jne
mov
cmp
jne
cmp
je
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
push
call
mov
or
je
sub
mov
mov
mov
add
mov
add
mov
mov
mov
cmp
je
mov
mov
mov
mov
mov
mov
or
mov
mov
or
je
mov
push
call
cmp
je
mov
mov
mov
mov
and
mov
mov
mov
mov
mov
lea
mov
mov
add
mov
and
mov
mov
mov
mov
lea
mov
xor
lea
lea
sub
add
mov
mov
mov
cmp
je
xor
mov
divl
mov
add
lea
mov
mov
cmp
jne
mov
mov
mov
mov
mov
sub
mov
mov
add
cmp
je
mov
mov
cmp
je
mov
mov
add
mov
mov
mov
cmp
je
cmp
je
mov
call
xor
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
sub
mov
mov
pushl
mov
push
lea
mov
shrl
mov
xor
mov
add
mov
cmp
je
mov
mov
pushl
call
mov
addl
mov
lea
mov
mov
mov
and
mov
call
xor
mov
mov
mov
sub
cmp
jne
mov
cmp
jne
sub
lea
mov
cmp
jne
mov
mov
mov
mov
lea
mov
mov
lea
cmp
jne
mov
cmp
je
sub
mov
mov
cmp
jne
mov
cmp
je
cmp
je
xor
mov
mov
and
cmp
jne
lea
mov
mov
test
jne
and
mov
xor
add
cmp
je
mov
xor
xor
cmp
jne
test
jne
mov
cmp
jne
mov
xor
sub
add
and
test
jne
lea
cmp
jne
mov
lea
mov
cmp
je
mov
xor
and
cmp
jne
cmp
je
mov
mov
mov
add
mov
add
mov
mov
mov
cmp
jne
mov
lea
cmp
jne
cmp
jne
cmp
je
xor
mov
mov
mov
xor
mov
mov
mov
and
mov
mov
sub
mov
mov
lea
mov
sub
test
jne
and
mov
pop
mov
pop
mov
pop
lea
mov
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
sub
mov
cmp
je
mov
cmp
jne
lea
lea
or
cmp
jne
mov
mov
lea
sub
cmp
jne
mov
leave
ret
mov
addb
and
add
mov
cmp
and
xchg
jo
add
or
and
add
in
sub
mov
mov
mov
push
xor
mov
push
xor
mov
mov
mov
mov
push
mov
mov
xor
lea
add
mov
mov
mov
push
sub
and
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
sub
mov
push
xor
and
mov
push
lea
sub
xor
mov
add
mov
add
mov
push
mov
mov
xor
xor
mov
mov
call
cmp
je
xor
cmp
je
mov
mov
cmp
je
mov
cmp
je
sub
lea
lea
sub
mov
mov
mov
mov
movl
lea
mov
mov
xor
cmp
je
mov
mov
sub
sub
cmp
je
and
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
mov
mov
add
cmp
je
mov
mov
mov
mov
mov
mov
add
test
je
mov
mov
mov
mov
mov
mov
lea
mov
cmp
je
xor
mov
mov
mov
mov
add
dec
mov
mov
mov
and
mov
or
je
mov
mov
mov
inc
add
sub
mov
cmp
jne
mov
cmp
jne
cmp
jne
lea
mov
mov
repnz
mov
mov
test
jne
mov
mov
and
cmp
je
sub
mov
addl
mov
mov
and
add
mov
cmp
je
lea
test
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
jmp
mov
xor
xor
add
add
mov
mov
mov
mov
add
xor
sub
mov
pop
mov
mov
xor
mov
mov
pop
mov
mov
test
jne
lea
add
mov
add
mov
pop
mov
mov
mov
cmp
je
mov
sub
and
cmp
je
cmp
je
sub
lea
mov
mov
sub
mov
mov
mov
pop
ret
lret
and
mov
addb
fstps
sarb
inc
add
mov
add
add
add
add
push
add
clc
adc
add
push
add
ss
add
push
adc
add
add
add
les
add
call
add
add
add
add
add
fcoml
add
adc
add
push
add
push
add
nop
adc
add
add
add
add
loop
add
or
add
push
push
add
cs
add
inc
push
add
pop
push
add
adcb
push
add
test
add
ret
add
push
add
add
add
push
add
cmp
add
push
push
add
push
push
add
xchg
push
add
lods
push
add
mov
push
add
in
push
add
push
push
add
push
push
add
add
add
inc
push
add
bound
add
add
nop
push
add
lods
push
add
push
add
clc
push
add
adc
add
sub
add
inc
push
add
jb
add
xchg
add
push
add
out
push
add
clc
push
add
adc
add
xor
add
add
pop
pop
add
js
add
xchg
pop
add
lods
pop
add
rcrb
add
pop
add
cli
pop
add
sbb
add
add
add
add
add
pop
add
pop
add
dec
pop
add
jbe
add
into
pop
add
lock
add
sbb
add
dec
pop
add
sbbb
pop
add
or
sub
outsb
pop
add
les
repnz
add
or
add
sub
add
add
sahf
pop
add
in
pop
add
push
pop
add
sub
add
jle
add
rcrb
add
pop
add
add
add
add
add
add
pop
add
in
add
cld
pop
add
sbb
add
add
inc
pusha
add
pop
pusha
add
jb
add
mov
add
pusha
add
mov
pusha
add
loop
add
add
add
popa
add
xor
add
inc
popa
add
pop
popa
add
jbe
add
mov
add
popa
add
int3
popa
add
out
popa
add
add
add
adc
add
and
add
cmp
add
add
bound
add
add
nop
bound
add
bound
add
bound
add
bound
add
bound
add
arpl
add
arpl
add
arpl
add
add
push
arpl
add
add
mov
add
arpl
add
arpl
add
arpl
add
arpl
add
arpl
add
add
and
xor
push
add
pop
add
insb
add
js
add
mov
add
add
mov
add
shlb
hlt
add
or
add
add
dec
add
jo
add
mov
add
add
shlb
add
add
add
and
add
add
bound
add
data16
mov
data16
clc
data16
or
add
add
add
add
add
dec
add
pop
add
insb
add
mov
add
add
aam
add
out
add
add
add
push
add
inc
push
add
jle
add
xchg
push
add
mov
push
add
push
imul
add
imul
add
add
js
add
mov
add
imul
add
imul
add
push
add
push
add
add
push
push
add
add
add
test
add
add
enter
loopne
add
hlt
push
add
imul
and
add
imul
push
imul
jb
add
subb
add
add
inc
inc
inc
dec
inc
push
xor
cs
dec
dec
add
push
add
pop
inc
imul
inc
gs
outsl
fs
inc
js
std
add
dec
pop
push
gs
jo
inc
gs
outsl
fs
xor
inc
dec
pop
inc
gs
dec
push
pop
push
jb
pop
inc
insb
popa
addr16
inc
js
add
fiadds
inc
dec
pop
inc
gs
inc
gs
arpl
dec
inc
pop
dec
imul
gs
inc
js
add
test
inc
gs
push
popa
jb
outsb
je
std
add
pop
inc
jb
popa
je
pop
inc
gs
outsl
fs
inc
js
add
inc
dec
pop
push
jne
jb
pop
push
gs
outsl
jbe
pop
push
jne
push
jb
add
inc
dec
pop
push
gs
inc
gs
outsl
fs
push
jb
bound
pop
inc
js
int
inc
dec
pop
inc
gs
arpl
gs
jne
arpl
inc
outsl
outsb
data16
imul
add
inc
dec
pop
push
jne
jb
pop
inc
outsb
fs
push
gs
outsl
jbe
pop
push
jne
push
jb
gs
add
in
add
pop
inc
gs
inc
gs
arpl
dec
inc
pop
dec
imul
add
add
pop
inc
jb
gs
push
popa
outsb
addr16
dec
imul
inc
dec
push
pop
dec
outsb
imul
je
outsl
outsb
add
mov
dec
push
pop
push
imul
je
imul
outsl
outsb
add
cmp
inc
dec
pop
inc
gs
push
gs
imul
inc
dec
pop
dec
gs
gs
push
popa
outsb
addr16
dec
imul
dec
pop
inc
fs
dec
inc
inc
add
jge
inc
dec
pop
inc
outsl
outsb
outsb
arpl
popa
arpl
outsb
gs
add
inc
gs
inc
gs
arpl
dec
inc
pop
push
imul
add
inc
dec
pop
inc
gs
inc
insb
outsl
bound
pop
push
je
je
pop
inc
js
add
inc
dec
pop
inc
jb
popa
je
pop
push
popa
outsb
addr16
dec
imul
inc
dec
pop
inc
gs
inc
gs
outsl
fs
push
je
je
jae
dec
push
push
inc
dec
push
push
cs
dec
dec
add
add
jae
je
inc
jae
jb
popa
insl
bound
inc
inc
dec
inc
inc
pop
push
inc
inc
xor
inc
pop
add
les
aas
aas
pop
cmp
jae
jb
popa
insl
inc
inc
aaa
inc
inc
add
aas
aas
outsl
jae
jb
popa
insl
inc
inc
push
inc
inc
inc
inc
push
xor
inc
pop
add
outsl
jae
jb
popa
insl
inc
inc
push
inc
inc
inc
inc
push
xor
inc
inc
inc
pop
add
aas
aas
xor
jae
jb
popa
insl
pop
ja
je
popa
jae
imul
inc
inc
inc
push
xor
inc
push
xor
pop
add
scas
add
jne
bound
data16
fs
jae
jb
popa
insl
bound
inc
inc
dec
inc
inc
pop
dec
inc
pop
add
aam
aas
jo
je
outsl
jae
jb
popa
insl
inc
inc
push
inc
inc
inc
inc
push
xor
inc
pop
add
aas
jae
je
outsl
arpl
imul
inc
pop
pop
pop
add
test
aas
aas
xor
je
gs
insl
inc
inc
dec
inc
inc
inc
inc
inc
push
xor
pop
add
add
jb
bound
inc
imul
gs
insl
inc
inc
push
inc
inc
push
inc
push
jae
jb
je
gs
insl
bound
inc
inc
pop
pop
add
aas
aas
pop
cmp
je
gs
insl
inc
inc
aaa
inc
inc
add
dec
add
jb
bound
inc
outsl
jae
jb
je
gs
insl
inc
inc
push
inc
inc
push
inc
push
jae
jb
je
gs
insl
bound
inc
inc
pop
pop
add
add
aas
pop
inc
jae
imul
insl
inc
inc
push
inc
inc
push
inc
pop
dec
inc
pop
add
ja
aas
aas
pop
cmp
je
gs
insl
pop
ja
je
popa
jae
imul
inc
add
add
insl
je
outsl
arpl
and
popa
je
popa
arpl
data16
jb
popa
insl
inc
inc
push
inc
inc
pop
dec
inc
pop
add
cld
add
aas
xor
jae
jb
popa
insl
inc
inc
push
inc
inc
inc
dec
push
inc
inc
dec
inc
pop
add
test
aas
jae
imul
jae
jb
popa
insl
inc
inc
push
inc
inc
inc
inc
push
xor
inc
pop
add
add
je
outsb
insb
outsl
arpl
aam
aas
aas
xor
jae
jb
popa
insl
inc
inc
dec
inc
inc
inc
inc
push
xor
inc
push
xor
pop
add
gs
gs
imul
inc
inc
inc
inc
push
inc
inc
inc
pop
add
aas
bound
popa
jb
inc
imul
inc
inc
xor
add
mov
aas
addr16
imul
jb
popa
insl
inc
inc
push
inc
inc
inc
inc
push
xor
inc
inc
dec
inc
inc
pop
add
add
insb
outsl
arpl
imul
inc
pop
pop
pop
add
add
jae
je
inc
imul
inc
dec
dec
dec
inc
pop
add
add
jae
jb
jae
jb
je
gs
insl
bound
inc
inc
push
inc
inc
push
inc
inc
pop
pop
add
jae
jb
popa
insl
pop
ja
je
popa
jae
imul
inc
inc
inc
push
outsl
jae
jb
popa
insl
inc
inc
inc
inc
push
xor
pop
add
push
inc
push
xor
inc
dec
dec
add
add
aas
xor
fs
je
jo
imul
push
inc
inc
inc
push
inc
inc
inc
pop
add
ja
aas
aas
pop
aas
and
inc
outsl
insl
jo
gs
bound
gs
dec
inc
jae
fs
inc
push
inc
inc
inc
inc
push
xor
inc
inc
inc
dec
inc
pop
add
push
add
ja
popa
je
insb
outsl
imul
jb
jae
fs
inc
push
inc
inc
push
inc
inc
pop
pop
add
add
aas
xor
and
popa
jae
arpl
je
gs
insl
bound
inc
inc
push
aas
and
push
jb
imul
fs
inc
inc
jae
fs
inc
push
inc
inc
inc
pop
pop
add
out
aas
aas
dec
jae
fs
inc
pop
inc
pop
dec
inc
inc
push
aas
and
popa
jae
arpl
je
imul
and
push
jb
imul
fs
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
inc
inc
xor
xor
inc
pop
add
in
aas
outsl
pop
imul
jns
gs
inc
inc
jae
fs
inc
dec
inc
inc
push
inc
inc
push
inc
inc
xor
inc
inc
pop
add
aas
imul
aas
and
popa
jae
arpl
je
imul
and
push
jb
imul
fs
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
inc
inc
xor
jae
fs
inc
push
inc
inc
inc
inc
push
xor
inc
dec
push
inc
inc
inc
pop
add
in
add
aas
pop
aaa
aas
and
outsl
outsb
gs
jne
arpl
and
inc
inc
inc
jae
fs
inc
ss
inc
add
add
pop
inc
gs
jbe
inc
pop
dec
outsl
arpl
outsw
inc
jae
fs
inc
push
inc
inc
aas
inc
push
pop
inc
jbe
jbe
arpl
pop
pop
add
fs
fs
outsl
jb
pop
insl
imul
insl
gs
arpl
imul
inc
jae
fs
inc
push
inc
dec
pop
pop
add
aas
and
popa
jae
arpl
data16
jb
popa
insl
inc
inc
push
aas
and
push
jb
imul
fs
inc
inc
jae
fs
inc
push
inc
inc
inc
pop
pop
add
jo
je
inc
aas
and
popa
jae
arpl
je
gs
insl
bound
inc
inc
push
aas
and
push
jb
imul
fs
inc
inc
jae
fs
inc
dec
inc
inc
dec
push
inc
inc
dec
inc
pop
add
aas
aas
ss
fs
inc
pop
inc
inc
inc
push
aas
and
popa
jae
arpl
jae
jb
popa
insl
inc
inc
push
aas
and
push
jb
imul
fs
inc
inc
xor
inc
push
xor
inc
inc
inc
pop
add
jmp
aas
and
jne
jo
outsb
arpl
inc
jae
fs
inc
push
inc
inc
inc
pop
pop
add
add
jb
popa
fs
aas
and
popa
jae
arpl
jae
jb
popa
insl
inc
inc
push
aas
and
push
jb
imul
fs
inc
inc
jae
fs
inc
push
inc
inc
inc
inc
push
xor
inc
push
inc
inc
dec
inc
pop
add
pusha
add
arpl
jo
jb
inc
aas
and
popa
jae
arpl
je
imul
and
push
jb
imul
fs
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
inc
inc
xor
jae
fs
inc
push
inc
inc
dec
dec
dec
push
inc
inc
dec
inc
pop
add
cmp
aas
fs
outsl
jb
pop
insl
imul
insl
gs
arpl
imul
dec
inc
jae
fs
inc
push
inc
pop
dec
pop
pop
add
add
aas
pop
aaa
je
insl
gs
bound
gs
jae
fs
inc
ss
inc
add
push
add
aas
inc
imul
gs
jae
fs
inc
push
inc
inc
push
inc
pop
pop
pop
add
add
aas
dec
jae
fs
inc
pop
inc
aas
inc
push
aas
and
outsl
insl
jo
gs
dec
inc
xor
inc
push
xor
inc
inc
pop
add
add
aas
pop
aaa
aas
and
jne
pop
addr16
inc
push
aas
and
jae
jb
popa
insl
bound
pop
imul
inc
inc
push
aas
and
push
jb
imul
fs
inc
inc
jae
fs
inc
inc
jae
fs
inc
ss
inc
add
aad
aas
aas
pop
cmp
and
popa
jae
arpl
jae
jb
outsb
addr16
jb
popa
insl
inc
inc
push
aas
and
push
jb
imul
fs
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
inc
inc
xor
jae
fs
inc
aaa
inc
inc
add
add
aas
xor
and
outsl
insl
jo
gs
dec
inc
jae
fs
inc
push
inc
inc
inc
inc
inc
dec
xor
add
xor
aas
xor
and
dec
jo
outsb
arpl
inc
jae
fs
inc
push
inc
inc
inc
pop
pop
add
sub
aas
aas
xor
and
imul
inc
inc
push
aas
and
jae
jb
popa
insl
bound
pop
imul
inc
inc
push
aas
and
push
jb
imul
fs
inc
inc
jae
fs
inc
inc
jae
fs
inc
push
inc
inc
inc
pop
pop
add
aas
and
imul
inc
inc
push
aas
and
jae
jb
popa
insl
bound
pop
imul
inc
inc
push
aas
and
push
jb
imul
fs
inc
inc
jae
fs
inc
inc
jae
fs
inc
push
inc
inc
inc
pop
pop
add
fs
jae
pop
dec
outsl
arpl
outsw
inc
jae
fs
inc
push
inc
inc
inc
inc
push
xor
inc
dec
push
inc
inc
inc
pop
add
pop
dec
popa
outsb
add
add
imul
aas
and
popa
jae
arpl
je
imul
and
push
jb
imul
fs
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
inc
inc
xor
jae
fs
inc
push
inc
inc
inc
inc
push
xor
inc
dec
inc
inc
push
xor
inc
inc
pop
add
imul
popa
jae
arpl
je
imul
and
push
jb
imul
fs
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
inc
inc
xor
jae
fs
inc
push
inc
inc
dec
inc
dec
inc
pop
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
imul
je
jne
jb
outsb
arpl
outsl
jb
popa
je
add
inc
add
je
outsl
outsb
jae
insb
gs
imul
add
je
outsl
outsb
jae
insb
gs
jne
jae
jb
outsl
fs
incb
inc
gs
outsl
outsb
jae
insb
gs
insb
imul
outsb
addr16
inc
add
outsb
add
imul
jae
insb
gs
outsb
jo
je
add
add
gs
je
push
popa
jo
push
popa
jb
imul
push
imul
outsb
jae
insb
gs
push
xor
add
inc
outsb
je
jb
jb
je
arpl
push
arpl
outsb
add
je
popa
insb
imul
imul
je
outsl
outsb
add
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
inc
imul
jne
arpl
add
add
popa
jo
jb
popa
je
add
les
push
gs
outsl
insl
insl
inc
outsl
outsb
imul
push
jne
jne
push
jae
jb
outsl
jb
dec
je
insl
add
inc
imul
je
outsl
insb
jne
gs
outsl
jne
je
outsl
imul
add
je
outsl
fs
gs
imul
add
mov
push
outsb
push
gs
js
gs
imul
gs
inc
add
imul
outsb
je
push
push
gs
outsl
insl
jo
je
jb
popa
insl
gs
js
add
add
insl
push
jns
je
insl
dec
popa
outsb
addr16
addr16
jb
jne
jae
add
push
inc
dec
inc
outsl
outsb
jae
insb
gs
jo
jb
je
outsl
outsb
add
add
imul
je
jo
gs
bound
arpl
add
insl
push
gs
jne
arpl
jns
gs
add
fwait
add
imul
outsl
jne
arpl
add
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
dec
popa
insl
gs
add
sub
inc
outsb
jne
push
jns
je
insl
dec
outsl
arpl
gs
add
fiaddl
push
outsb
insb
outsl
arpl
imul
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
pop
add
je
jne
inc
bound
push
je
imul
add
je
popa
jo
push
popa
jb
insl
gs
jb
add
add
fs
outsl
outsb
jae
insb
gs
insb
imul
add
je
push
push
gs
arpl
inc
outsb
je
jns
add
add
gs
je
dec
outsl
bound
je
add
add
jo
outsb
inc
imul
outsb
jne
inc
popa
je
inc
outsl
jb
popa
je
inc
js
add
je
inc
gs
imul
dec
outsb
outsw
jb
popa
je
outsl
outsb
add
push
add
popa
outsb
addr16
imul
jne
push
imul
dec
outsl
popa
fs
imul
js
add
xlat
add
je
imul
bound
gs
add
mov
inc
jb
popa
je
dec
outsl
bound
push
arpl
add
add
gs
jne
jb
outsb
arpl
outsl
jb
popa
je
add
pop
add
insb
outsl
bound
push
outsb
imul
push
jb
je
inc
outsl
outsb
jae
insb
gs
add
add
je
outsl
insb
jne
gs
popa
insl
gs
outsl
jb
outsl
insb
jne
gs
outsl
jne
je
outsl
imul
push
gs
insl
gs
push
add
addr16
popa
jo
imul
insb
add
add
gs
data16
gs
imul
push
add
mov
imul
gs
imul
outsl
popa
fs
imul
add
mov
inc
gs
outsl
dec
outsb
outsw
push
add
inc
gs
outsl
outsb
jae
insb
gs
gs
arpl
outsb
dec
outsb
outsw
add
add
je
jae
jb
gs
jne
je
popa
outsb
addr16
inc
add
xchg
inc
popa
je
insb
inc
jo
inc
js
je
add
add
imul
imul
insb
gs
bound
arpl
add
insb
jae
jb
insl
jo
add
jo
push
imul
jne
jb
add
jae
insb
jae
jb
jo
push
add
addl
gs
fs
imul
gs
scas
add
jae
push
jne
jne
fs
outsl
insl
jo
gs
outsl
outsb
push
je
je
jae
add
push
push
push
inc
push
dec
cs
dec
dec
add
push
add
je
jo
gs
outsl
jbe
inc
imul
je
jns
add
lds
push
gs
jo
outsb
imul
je
jne
jne
inc
popa
insb
insb
bound
imul
roll
inc
dec
pop
push
jne
pop
inc
gs
arpl
outsb
pop
inc
js
lahf
add
je
jo
imul
jb
imul
outsb
fs
jns
popa
insl
gs
add
stc
add
dec
pop
dec
jae
push
gs
imul
imul
js
add
add
je
jo
imul
jae
push
imul
outsl
jo
jb
jns
add
in
inc
dec
pop
dec
outsb
jbe
jb
pop
push
popa
outsb
addr16
dec
imul
push
gs
jo
insb
outsl
jae
dec
outsb
inc
imul
je
jo
gs
popa
arpl
jo
outsb
outsw
jb
popa
je
outsl
outsb
inc
add
cmp
jo
gs
jo
gs
outsb
push
arpl
outsb
jae
add
inc
jb
gs
push
popa
outsb
addr16
dec
imul
push
gs
jo
imul
inc
gs
arpl
sti
add
pop
push
gs
inc
gs
outsl
fs
push
imul
jb
jo
jb
jns
add
jne
push
gs
imul
jns
fs
js
add
jb
push
gs
jo
imul
jne
insb
push
arpl
outsb
push
outsl
dec
outsb
jae
popa
insb
insb
inc
js
add
add
je
jo
gs
outsl
outsb
dec
outsb
je
jb
arpl
gs
outsl
fs
pop
add
pop
push
jne
jb
pop
push
gs
outsl
jbe
pop
push
jne
push
jb
gs
inc
js
add
push
gs
jo
imul
jbe
arpl
outsb
je
jb
popa
arpl
add
inc
gs
inc
gs
outsl
fs
push
je
je
jae
inc
js
add
push
gs
jo
outsb
imul
dec
gs
jns
outsl
jo
gs
outsb
data16
push
add
dec
pop
inc
gs
inc
gs
push
popf
add
gs
jo
imul
dec
imul
cs
dec
dec
add
gs
outsb
arpl
add
sbb
dec
jae
dec
jo
outsb
push
jb
fs
je
add
dec
outsl
popa
fs
je
imul
add
imul
outsl
fs
je
add
dec
jae
inc
gs
jne
insl
popa
jb
dec
outsb
outsw
jb
popa
je
outsl
outsb
push
add
add
imul
imul
add
imul
gs
jne
insb
imul
insl
jo
outsb
outsb
je
add
outsl
jne
arpl
imul
outsl
jne
arpl
add
push
jae
inc
gs
je
jb
push
add
or
push
arpl
fs
gs
imul
outsb
je
add
push
gs
outsl
insl
jo
outsb
outsb
je
je
je
inc
add
push
jae
inc
gs
je
jb
inc
js
add
cmp
dec
jae
inc
gs
outsl
insl
jo
outsb
outsb
je
je
je
push
add
push
jne
jb
inc
gs
je
jb
push
je
je
inc
jb
insl
inc
gs
jb
jo
outsl
jb
add
dec
jo
outsb
push
popa
arpl
addr16
js
add
add
jae
inc
gs
popa
je
bound
gs
je
je
add
push
arpl
fs
jae
jne
insb
add
add
jae
push
arpl
fs
gs
outsb
je
addr16
lret
jae
inc
insb
outsl
jae
dec
popa
outsb
fs
add
push
add
imul
inc
gs
je
imul
dec
jae
inc
gs
imul
je
jb
dec
outsb
outsw
jb
popa
je
outsl
outsb
push
add
add
imul
jae
jb
popa
je
push
add
int3
add
imul
gs
js
outsl
jb
push
add
adc
jne
arpl
imul
gs
gs
insb
jne
imul
dec
jae
push
jne
jb
inc
gs
je
jb
push
je
je
push
add
add
imul
add
add
imul
je
bound
gs
add
push
add
imul
gs
jo
insb
jns
jb
outsb
jae
outsl
jb
push
add
jo
dec
jae
push
gs
gs
je
jb
inc
je
jb
bound
gs
add
into
add
imul
insl
popa
jb
dec
outsb
outsw
jb
popa
je
outsl
outsb
inc
add
dec
xor
cs
dec
dec
add
inc
dec
inc
jb
popa
je
push
jb
outsb
jae
outsl
jb
push
add
ret
add
push
jb
outsb
jae
popa
je
push
inc
inc
jae
js
add
mov
gs
popa
insl
gs
jb
imul
outsl
add
jb
outsb
jae
popa
je
push
inc
inc
add
movsl
add
inc
push
inc
inc
jae
xchg
add
inc
jb
popa
je
push
jb
imul
inc
add
inc
gs
outsb
outsw
add
add
inc
jb
popa
je
push
jb
outsb
jae
outsl
jb
add
add
inc
jb
popa
je
push
jb
outsb
jae
outsl
jb
inc
js
add
add
push
jb
outsb
jae
popa
je
inc
outsl
insb
outsl
jb
add
add
inc
jb
popa
je
push
jb
outsb
jae
outsl
jb
inc
js
push
add
arpl
outsl
insb
outsl
jb
dec
outsb
inc
popa
insl
jne
add
cli
add
dec
jae
jb
imul
imul
inc
outsl
outsb
jbe
jb
inc
outsl
insb
outsl
jb
popa
insl
gs
outsl
dec
outsb
fs
adc
inc
dec
inc
jb
popa
je
push
jb
imul
inc
dec
inc
gs
gs
push
jb
outsb
jae
outsl
jb
add
add
inc
outsl
outsb
jbe
jb
dec
outsb
fs
outsl
inc
outsl
insb
outsl
jb
popa
insl
gs
add
dec
inc
jb
popa
je
dec
jne
je
push
jb
imul
outsb
jae
outsl
jb
add
inc
dec
inc
push
outsl
insb
outsl
jb
add
add
inc
jb
popa
je
inc
gs
arpl
imul
imul
add
fdivs
icebp
rcr
jl
push
lock
cwtl
jecxz
scas
inc
inc
fs
ret
test
xor
int
cwtl
nop
mov
nop
mov
inc
cmpsb
mov
and
xchg
arpl
mov
and
mov
call
xor
adc
inc
xor
xor
mov
loope
adc
or
popa
in
jo
mov
ds
rorl
clc
repz
icebp
pop
pop
popa
sahf
or
jecxz
fs
repz
out
add
std
in
ja
mov
or
jno
lea
mov
fmul
lock
lret
fxam
cmpsl
push
inc
call
shrl
mov
pop
subb
mov
cmp
mov
pop
je
add
arpl
cmp
popa
push
invd
xchg
cmc
decl
pop
xor
sbb
sbb
mov
xor
jle
je
out
sbb
je
cmp
stc
xchg
idiv
clc
push
xchg
inc
lret
loopne
outsb
inc
in
repz
stc
clc
fiadds
pop
out
and
adc
movsl
xor
mov
gs
xchg
aaa
cmp
jle
xchg
std
rclb
scas
push
sbb
cltd
loopnew
mov
mov
testl
push
daa
push
inc
outsl
add
mov
out
or
mov
dec
add
adc
call
gs
lcall
fcoms
adc
mov
pop
xchg
push
mov
sti
mov
gs
loop
cltd
add
arpl
in
cmpsb
roll
fstpt
out
and
sub
jae
hlt
sub
pop
movsb
scas
push
push
arpl
sbb
fstpt
sub
stos
mov
notl
inc
push
push
mov
dec
sub
dec
std
cmc
movsl
xor
out
dec
dec
mov
outsb
clc
inc
cld
mov
inc
pop
push
int3
sub
out
jbe
pop
add
dec
setae
cmp
negb
aas
test
cmp
xor
stos
mov
sarl
clc
iret
fnsave
cli
shlb
mov
int3
rclb
push
adc
add
push
filds
sbb
lahf
lcall
adc
sbb
mov
mov
adc
loopne
data16
sbb
arpl
mov
mov
adc
test
and
sub
rolb
outsb
lods
mov
push
out
pusha
xchg
repnz
test
pop
jne
ret
loopne
popa
sbb
mov
pop
cmp
xchg
cmpsl
fs
mov
popa
lret
cwtl
ss
fwait
gs
adc
xor
mov
push
pusha
clc
pop
js
jp
cld
popf
outsb
mov
add
repnz
xchg
sub
pop
sbb
fwait
mov
loop
and
dec
shl
push
adc
cmc
js
arpl
mov
gs
xorl
cmp
push
sahf
mov
out
mov
ds
jo
sub
sbb
in
xor
sbb
xchg
or
out
mov
inc
dec
cwtl
repz
out
dec
push
cli
xchg
ljmp
mov
or
insb
int
and
xchg
mov
ror
aad
or
xchg
xchg
or
add
jns
or
clc
cmpsb
adc
out
xchg
push
sti
cmp
xchg
add
cwtl
sbb
lret
xchg
outsl
or
mov
lea
pop
jge
add
adc
out
repnz
or
fwait
lods
stos
adc
jns
loope
push
mov
sbb
fstpl
arpl
sub
in
jbe
cmc
sbb
sbb
sbb
fisubl
cmp
enter
iret
xchg
inc
shll
stos
test
sbb
cmp
fsubs
push
mov
sbb
push
dec
enter
mov
mov
sarb
mov
jb
add
pop
scas
enter
out
xor
cmpsb
cs
aad
inc
inc
aam
jnp
iret
scas
push
inc
enter
ret
or
pop
jb
stos
dec
add
mov
cld
dec
inc
cmc
cld
or
ret
pop
shl
pop
mov
es
ss
mov
ret
lret
hlt
pop
inc
and
cmc
or
xchg
jl
dec
pop
cltd
ss
lods
cmpsl
pop
mov
scas
xchg
push
rorl
xor
mov
in
movzwl
mov
mov
push
add
nop
out
cli
sub
repz
jb
lds
inc
ret
ja
adc
outsb
mov
call
adc
mov
jb
cmc
lahf
push
lea
out
sahf
mov
icebp
aad
jl
lods
mov
and
stos
mov
pop
lds
ss
mov
addr16
addr16
jae
mov
xor
lcall
sub
scas
fisubl
pusha
sub
add
aam
cmp
xchg
fs
xchg
or
sbb
xor
imul
jne
xchg
fsubr
jmp
arpl
jl
xchg
adc
fwait
jns
pusha
repz
jo
sbb
xchg
push
pop
rcr
loop
push
or
mov
cltd
mov
pop
mov
adc
add
sbb
jle
mov
fs
jae
sbb
mov
in
outsl
jns
out
mov
cmp
xchg
mov
lahf
in
fcoml
pop
cmp
stc
popf
jne
sbb
sbb
sub
and
and
jl
push
cmpsl
xchg
out
xor
cmp
fsts
fisttpl
es
dec
js
rclb
xlat
pop
dec
dec
jge
xor
jbe
inc
push
fmul
cmc
loop
mov
add
xorb
ja
cmp
shl
sbb
popf
or
cld
hlt
dec
dec
lods
incl
mov
lds
cmp
nop
sbb
jge
out
jp
mov
xor
stos
dec
fs
and
call
cmpl
scas
jg
sbb
addr16
adc
fs
dec
enter
sbb
jle
adc
xchg
jbe
lcall
test
cmp
cmpsb
aas
out
jecxz
sbb
xor
bound
std
cwtl
movsl
inc
dec
lea
pop
gs
cltd
or
mov
adc
lods
fistpll
daa
push
test
cmc
or
pop
xor
inc
cwtl
xor
jmp
in
mov
xlat
out
push
mov
dec
inc
mov
pop
pop
xchg
add
out
es
lods
mov
pop
xor
mov
fistpll
jp
roll
sti
push
pop
sub
fdivrs
cmp
sub
ss
mov
pop
xchg
lcall
insl
pusha
int
push
dec
xor
sbb
das
mov
sub
movsl
je
int
dec
push
test
xchg
out
cmc
cld
mov
lret
mov
add
and
cmpsb
in
pop
push
dec
int
dec
dec
int
out
outsl
inc
cld
sti
push
and
mov
test
cmp
roll
arpl
mov
push
mulb
adc
mov
insl
cwtl
add
mov
sti
push
pop
inc
or
or
lock
sub
sub
and
cwtl
and
repz
adc
movb
lods
jp
mov
bound
xchg
data16
xchg
push
repz
jno
push
push
sbb
xchg
fisubrs
pop
sbb
pmullw
pop
in
mov
sarl
hlt
xlat
and
jnp
lret
test
orl
xor
pop
sub
mov
sub
fisubl
loop
pop
jge
inc
adc
hlt
sti
arpl
push
in
ljmp
lret
pop
sbbl
pop
call
mov
xor
sahf
pop
jge
sarb
sub
icebp
cmp
lea
pop
jge
push
out
jns
adc
push
sbb
loop
mov
out
xchg
cli
cli
incb
cli
mov
pop
ficomps
dec
adc
movl
inc
fistpll
aam
repz
jnp
jb
je
add
xorl
inc
mov
or
out
mov
insl
sbbb
xlat
sahf
cmp
inc
sti
andb
mov
imul
push
add
sbbl
nop
fs
push
jge
mov
aad
imul
stc
and
jo
icebp
sbb
cmp
xchg
out
jno
jmp
je
mov
and
aam
pop
cmp
ret
push
mov
xchg
ficoml
dec
lcall
popa
test
mov
pop
adc
pop
mov
adc
bound
add
xor
xchg
xchg
das
mov
mov
arpl
lcall
arpl
bound
enter
xor
insl
arpl
mov
cwtl
mov
cwtl
fimuls
fmul
push
jo
repz
fistl
dec
inc
orb
clc
fwait
gs
sbb
in
sahf
mov
in
xchg
fnstsw
xchg
and
mov
inc
rol
inc
inc
popa
rolb
lret
or
fidivs
xor
shl
cmp
mov
fsave
adc
test
nop
subb
call
imul
out
fs
outsb
out
seto
in
jg
out
lea
adc
rolb
xor
push
pop
repz
cmp
adc
aaa
xorb
adc
mov
sub
pop
pop
test
cmp
pop
adc
fiadds
inc
cli
loopne
bound
out
push
push
push
mov
divb
ret
pop
shll
xchg
jnp
cmpsl
mov
sbb
mov
in
fsubrl
sbb
nop
mov
xor
sbb
sbb
outsb
inc
leave
enter
jmp
xor
sbb
addr16
call
out
push
xchg
xchg
sbb
in
push
lret
jecxz
popa
aad
lret
pop
pusha
arpl
sbb
lret
cmp
fistpll
lret
mov
std
sbb
ret
xor
add
scas
pop
and
xchg
and
mov
jge
jmp
clc
ficoml
ja
jmp
adc
aad
inc
jns
andps
movsb
cmp
mov
adc
lret
js
enter
fs
aas
das
movsl
addr16
add
mov
and
data16
repz
fisubl
or
jecxz
cmp
rcll
jb
cmp
push
mov
movsb
lret
xor
and
in
out
pusha
jmp
sub
jg
adc
repnz
outsl
stos
incb
push
pop
stc
pop
push
or
arpl
mov
rcrl
inc
aam
pop
ds
les
outsl
out
sub
mov
xor
icebp
repz
aaa
push
fsubs
pop
cs
filds
and
mov
mov
orl
and
mov
xor
out
lcall
adc
mov
adc
sahf
mov
repnz
pop
push
gs
sahf
sarb
mov
sub
notl
shrl
xor
int3
rolb
dec
dec
nop
mov
cld
inc
push
push
gs
cmp
mov
xlat
mov
pop
xchg
sbb
lcall
push
in
jns
mov
dec
xchg
mov
push
fcomp
add
cmc
in
call
jle
test
adc
mov
test
mov
subl
in
mov
mulb
mov
sarl
adc
jle
in
adc
mov
jbe
add
jmp
sbb
movsb
mov
xchg
pop
sbb
xchg
push
mov
rcrb
push
std
sub
je
and
rcrl
dec
int
cmp
je
in
mov
dec
out
cli
mov
js
xlat
mov
call
aam
jmp
fcomps
std
push
mov
mov
dec
scas
mov
movsl
and
push
adc
add
cli
into
jnp
mov
jbe
add
in
xchg
sahf
cmp
mov
push
dec
mov
repnz
subb
xchg
sub
pushf
fcomp
cmp
pop
xor
insb
adc
jl
cmp
push
inc
inc
push
xchg
imul
add
mov
bound
xor
mov
adc
jne
out
fcomps
mov
xor
iret
icebp
pop
andl
pop
je
stos
pushf
sub
fs
in
xchg
inc
pop
cli
fidivrs
aas
iret
pop
inc
inc
ret
notb
pop
movsb
sarl
cld
and
dec
jo
hlt
dec
mov
jno
jbe
pop
cli
popf
popf
pop
in
push
hlt
cmp
jmp
icebp
out
push
and
pop
into
testl
out
mov
add
sbbl
outsb
mov
mov
inc
int
cmc
xlat
in
dec
xor
xor
or
insb
addr16
mov
mov
out
testl
add
pop
inc
inc
repz
js
mov
mov
imul
xchg
test
loope
je
sub
and
jmp
add
std
sar
inc
into
fsubp
jno
fmull
int3
jl
orb
leave
test
jo
mov
fmulp
pop
pop
mov
cmp
mov
cmp
into
push
cmp
ficompl
das
subb
pushf
call
xor
mov
es
mov
loopne
jl
in
addr16
hlt
cmp
inc
sub
popa
jmp
xchg
imul
sbb
mov
push
cltd
or
or
imul
pusha
inc
popa
mov
test
les
scas
dec
and
mov
ja
mov
out
clc
lret
fmul
dec
mov
pop
cmp
data16
daa
sahf
jns
fadd
dec
sub
test
push
addr16
lret
mov
jae
iret
pop
inc
mov
inc
dec
ror
push
mov
pop
sbb
dec
adc
mov
jo
inc
adc
or
lea
sub
pop
std
push
jo
jecxz
gs
in
ficompl
sub
xchg
mov
xor
shl
daa
addr16
xchg
pop
dec
pop
shll
sbb
or
scas
mov
aas
xchg
push
mov
mov
sbbb
adcl
cltd
fnclex
push
test
cltd
fs
insb
out
jns
sub
mov
aam
add
call
jne
pop
dec
add
jnp
jns
outsb
dec
test
push
adc
fwait
or
rorl
xchg
xchg
dec
dec
scas
aaa
dec
adc
scas
dec
dec
rorl
cmp
das
aam
xor
dec
into
icebp
dec
jbe
imulb
stc
leave
pop
sbb
mov
adc
lods
xchg
ss
mov
cld
sub
fisttps
lods
fs
loop
insl
sub
lret
sub
stc
pop
pop
jae
iret
push
dec
ret
fstl
test
insb
movzwl
and
push
fs
sbb
jge
inc
cmc
shrb
fisubl
mov
out
xchg
gs
fs
mul
mov
repz
lcall
out
pop
or
fiadds
xor
push
mul
lcall
push
mov
dec
imul
daa
push
mov
dec
mull
scas
pop
push
mov
and
jnp
mov
rorb
jmp
sub
push
and
sub
cmp
xchg
fucomi
jb
fdivl
mov
pop
inc
out
js
jl
pop
jae
cs
leave
xchg
outsl
daa
dec
mov
insl
sbb
pusha
pop
ds
lods
dec
call
popa
stos
jnp
cmp
xor
mov
sbb
daa
sub
sbb
jo
mov
aas
popf
sub
sub
and
cli
pop
inc
adcl
sbb
repnz
leave
inc
pop
sub
add
scas
dec
movsl
xor
inc
jo
aam
inc
pop
rcrl
test
movsl
or
repz
cmp
and
pop
das
repnz
push
cmp
sbb
js
inc
sub
cmp
mov
jl
cmpsb
gs
cmp
lret
inc
in
mov
pop
xor
xchg
jle
push
inc
inc
mov
insb
and
inc
sarl
cltd
xchg
adc
pop
insl
rorl
out
rcll
inc
cmp
movsl
cltd
mov
aaa
mov
movb
pop
aas
adc
popa
fyl2x
cmp
cli
fimull
mov
mov
jnp
jmp
insl
popf
out
andb
sbb
mov
pop
lods
adc
add
jmp
out
scas
scas
rcll
gs
stos
sub
rclb
mov
sbb
mov
stos
xor
inc
sbb
pusha
fiaddl
fimuls
mov
pop
daa
lock
push
sub
pop
int
add
and
je
pop
mov
rcrb
loope
fcompl
sbb
xchg
mov
xchg
test
dec
out
rorl
inc
push
mov
inc
push
mov
scas
mov
shl
xchg
in
in
push
test
adc
add
imul
xchg
scas
or
mov
data16
push
out
add
pushf
cmp
fstps
dec
test
sub
dec
test
push
aaa
addr16
pop
mov
sub
faddl
in
nop
xchg
sub
stos
pop
push
fisubrs
and
aad
pop
cmpl
and
push
xor
dec
std
sbb
lock
jne
push
js
notl
loopne
dec
add
dec
cmpb
inc
inc
mov
inc
arpl
add
insl
push
inc
jbe
enter
jnp
mov
add
nop
popa
sub
insl
or
les
loop
xor
jl
loopne
sbbb
xchg
xchg
imul
js
dec
mov
lock
sti
dec
lea
fcmovnbe
adc
inc
addl
and
mov
int
lret
pop
insl
into
ret
add
add
cmp
xorl
mov
add
jns
cmp
mov
lret
pop
xor
popa
add
lods
fisubrl
jnp
pop
inc
pop
mov
stc
cmp
xor
cwtl
mov
bound
in
test
or
sbbl
in
cmp
mov
pop
out
addl
xor
dec
adc
rorb
fbstp
inc
lock
or
popa
xchg
dec
adcl
into
adc
mov
pop
mov
fs
or
pop
jmp
test
dec
inc
roll
int
add
daa
cmp
or
mov
pop
mov
mov
xchg
test
adc
lcall
in
push
scas
es
pop
xchg
lret
jp
aaa
dec
sar
jl
mov
mov
gs
aam
pop
sbb
fsub
jp
movsl
sti
sti
ss
inc
ret
ret
xor
jbe
jle
adc
adc
out
sbb
js
push
push
imul
xchg
fs
outsl
in
adc
movsl
sbb
cmpsl
sbb
pop
push
pop
lret
xor
cmp
cwtl
push
and
jne
test
and
sti
loopne
fdiv
pop
and
rclb
imul
jecxz
insb
dec
cmp
mov
add
out
inc
xchg
inc
inc
or
je
dec
imul
jae
fmuls
imul
xchg
and
sti
cmp
mov
dec
cltd
jl
xor
adc
sub
jge
pop
jmp
popa
sub
addr16
outsl
out
insb
mov
mov
in
outsb
pop
frstor
rcll
outsb
cmp
nop
xchg
sbb
jb
scas
fistpl
and
es
in
lods
out
inc
lcall
xchg
cs
add
mov
andl
jns
sub
cmpsb
cmpb
lret
pushf
inc
dec
push
loop
dec
iret
fdivl
rcrl
inc
rorl
cmp
ja
pop
dec
outsb
aam
push
adc
pusha
cs
test
lcall
xchg
scas
dec
call
out
and
sbb
lea
loop
sahf
mov
imul
in
cmp
pop
cld
push
stos
lret
jmp
and
test
sbb
dec
loope
sbb
cmc
xchg
in
shl
mov
jl
or
xchg
lods
insl
pusha
popf
sub
jp
cltd
push
push
mov
in
cmp
outsl
mov
popa
xor
xor
add
out
ret
out
cmp
stos
cmpsb
or
js
fwait
aad
and
cmc
in
pop
mov
sbb
sub
pop
xchg
dec
popf
sub
or
mov
jle
imul
mov
cmp
stos
data16
js
fwait
aad
xchg
cmc
in
pop
fwait
mov
xchg
insb
hlt
or
xor
sahf
mov
xchg
testb
mov
mov
sbb
jnp
js
fwait
test
std
ret
insl
cmp
fs
inc
pop
mov
jo
enter
aam
mov
addr16
and
imul
push
insl
arpl
jl
adc
or
insb
outsl
sub
lcall
int3
mov
fisttps
in
das
jmp
inc
sub
push
adc
mov
fdiv
sti
arpl
lods
mov
sbb
sbb
ja
mov
jne
jo
loopne
orl
add
fs
cmp
mov
push
dec
inc
into
outsl
cmp
mov
jge
push
icebp
outsl
sub
pusha
rcrl
ljmp
pusha
popf
and
adc
les
pop
and
cmp
xchg
cmp
scas
mov
dec
jmp
in
xchg
inc
and
xor
sub
insl
outsb
leave
sti
mov
jle
or
and
and
icebp
psubsw
ret
pushf
pop
in
cmc
jo
push
and
push
pusha
inc
rcrb
repz
pushl
jp
pop
xchg
adc
jg
sbb
xchg
aas
mov
fwait
ljmp
jo
andb
sar
js
cmp
xchg
in
mov
insl
xchg
adc
xlat
sub
roll
movswl
mov
add
cmp
mov
adc
dec
mov
xorb
pop
mov
lret
adc
sub
pop
jle
hlt
jns
ss
xlat
add
iret
adc
push
push
in
dec
push
in
adc
lcall
jne
pop
lahf
jns
and
adc
inc
xor
js
fisubrs
sub
jge
mov
jne
call
sti
lods
lret
cmp
pushf
or
imul
jnp
or
pusha
rcrl
mov
cmp
jecxz
lret
vpshaw
dec
and
jns
lods
mov
pop
or
cmp
mov
jne
arpl
or
and
in
pop
mov
fstpl
insl
mov
insl
fsubl
cwtl
into
pop
sarl
lcall
dec
push
add
inc
mov
shrl
adc
cld
ds
mov
dec
int
jecxz
mov
sahf
sbb
out
nop
push
outsb
mov
cmp
sbb
int3
dec
xchg
mov
fstpl
pop
rcrb
daa
into
scas
xor
in
push
sbb
pusha
popf
dec
mov
addr16
lods
sbb
adc
movsb
mov
sahf
or
jae
mov
icebp
xchg
pop
add
lock
mov
and
pop
xor
inc
std
lret
std
xchg
and
fsubl
or
lcall
fldenv
jecxz
nop
sbb
pop
andb
sbb
jl
sbb
xchg
fwait
idivb
lcall
fildll
shll
fsubrl
and
fwait
sahf
xlat
cwtl
sub
hlt
movsl
loopne
and
aaa
frndint
pop
push
dec
pop
out
dec
lock
push
dec
cmc
cmp
ds
mov
loop
xchg
fsubs
dec
xor
fcoms
test
sub
pushf
or
sbb
xor
mov
insl
jnp
mov
push
lea
cltd
int3
pusha
jl
inc
mov
into
sti
xor
pop
cmp
inc
decb
and
push
inc
add
std
popa
outsb
jecxz
mov
xor
clc
call
data16
and
dec
xor
add
test
out
push
jmp
mov
enter
adc
es
aas
sbb
into
ss
add
or
push
adc
mov
outsl
mov
jb
cltd
ss
jne
cmp
or
sub
shll
adc
repnz
cwtl
sahf
jl
cmp
xchg
dec
jge
flds
fwait
or
fcmovnb
sbb
sub
cld
or
xor
mov
sbb
lods
stos
push
adc
mov
cmp
mov
lfs
sub
sbb
dec
aaa
in
ds
inc
fs
add
insl
ror
sub
scas
std
fld1
push
into
lcall
jne
into
dec
xchg
nop
in
stc
jle
mov
inc
add
in
ret
sub
add
dec
sti
mov
aas
sub
sti
out
push
bound
push
data16
cld
and
pop
mov
lea
xchg
jb
xor
out
adc
cmp
addr16
fwait
loopne
add
and
mov
lods
sub
cld
in
push
add
cmp
js
xchg
dec
and
outsl
inc
lods
in
and
add
mov
dec
daa
xlat
xor
sbb
xchg
pop
test
mov
movsl
je
add
call
test
mov
aam
add
imul
insb
inc
fldl
sti
pushf
insl
dec
xchg
inc
cmp
pop
ss
adc
aas
test
mov
pop
mov
arpl
mov
out
lock
push
jne
cmp
mov
jns
test
xlat
loop
jl
in
mov
pop
in
iret
add
jo
pop
aaa
jnp
sbb
out
andb
out
and
leave
sub
clc
in
sti
mov
push
sbbl
rorb
pop
divb
xchg
fnsave
dec
hlt
popf
cmp
xchg
mov
push
cmp
jns
cltd
lret
hlt
mov
call
enter
ffree
xchg
add
xchg
pop
push
out
ljmp
pushf
and
sub
mov
sbb
std
cs
rol
nop
jb
dec
cmp
jns
les
xor
push
mov
jns
jecxz
fists
imul
push
das
xor
xchg
pushf
lea
test
push
xor
add
and
dec
stos
xlat
mov
inc
mov
pop
in
movsl
and
xchg
push
push
push
das
pop
iret
lods
push
imul
stc
adc
inc
dec
out
fs
divl
sahf
test
pop
popa
clc
dec
std
push
mov
outsb
jnp
jae
sbb
rcrl
mov
pop
sahf
std
jbe
inc
or
je
in
cli
lcall
stos
mov
add
and
arpl
xchg
imul
popf
adc
sti
insb
pushf
mov
xor
jo
popa
or
cltd
jmp
in
and
enter
inc
cld
nop
ret
inc
cld
cmpsb
jmp
ret
aam
xor
and
cmpsl
aaa
jno
nop
stos
push
stos
and
sub
into
jo
adc
into
jle
mov
or
xlat
push
or
add
lcall
popf
adc
ds
jp
cmp
push
dec
in
jae
jmp
ret
enter
rcrl
std
call
sbb
in
xchg
mov
cmpsl
xchg
lods
ret
lock
mov
out
or
pushf
pop
dec
xor
jge
push
cmp
add
xor
shll
or
movsl
fdivl
out
stc
jns
cmpb
outsb
imul
xchg
es
mov
xchg
sbb
jmp
rcll
mov
insl
mov
mov
popf
call
push
dec
mov
outsl
pop
mov
push
cs
arpl
push
clc
or
jge
cmp
jbe
pop
packsswb
push
lock
xor
push
daa
ret
mov
jle
js
loop
rolb
mov
testb
sub
int3
daa
add
in
jecxz
cmpsl
orb
pop
mov
push
mov
cmc
cli
inc
jnp
adcl
pop
cmp
outsb
xchg
lods
mov
mov
inc
ret
and
adc
xor
popa
repnz
popa
test
mov
push
clc
sub
jle
push
pushf
popa
fidivrl
cmp
mov
push
mov
or
adc
add
add
and
aad
movsb
jl
sub
jns
push
loop
sub
test
fldl
imul
push
jp
in
cmp
xor
or
inc
popf
hlt
std
pop
cmpsb
call
mov
xchg
leave
arpl
cld
xchg
xchg
fsincos
out
movsl
xor
sbb
dec
adc
outsb
cmp
add
inc
pop
and
pop
xchg
bound
imul
out
sbb
cli
enter
jae
xchg
pushf
cmp
aam
inc
test
push
jmp
fcomi
dec
dec
dec
jnp
jnp
or
and
xchg
or
outsb
push
jge
test
dec
out
mov
xlat
into
jnp
fwait
mov
push
sub
push
jns
cwtl
xor
mov
jnp
pop
mov
out
xchg
cmpsb
and
dec
dec
call
jbe
lods
aaa
xchg
orl
mov
in
inc
pop
sub
fstl
addr16
pop
sbb
subps
jo
out
js
daa
filds
xchg
outsb
popa
lret
pop
out
stos
sub
mov
js
cmp
mov
mov
or
outsb
cld
std
add
cmpsl
repz
sbb
imul
adc
stos
cmc
notb
orl
icebp
add
in
adc
into
add
adc
std
mov
frstor
mov
xor
das
sbb
test
aam
shl
pop
lods
test
iret
lret
mov
inc
sbb
fs
gs
jp
xor
xchg
or
cs
sub
mov
leave
and
shl
insl
push
out
loop
xor
outsb
imul
popf
mov
push
mov
dec
push
jno
daa
cmp
in
sbb
mov
addr16
out
sbb
popf
outsb
cltd
les
jmp
jg
rcrb
push
pushf
cs
lock
cmpsb
jl
cmp
xor
jnp
sub
sti
popa
jnp
popf
xchg
mov
or
jg
das
jno
insb
popa
imul
xchg
push
andl
jecxz
jae
xchg
pushf
mov
in
lret
mov
stos
outsl
dec
cltd
jae
push
mov
inc
jp
call
addr16
inc
adcl
mov
jecxz
fcoml
and
inc
outsb
lret
fisubs
jmp
in
scas
sbb
imul
aam
arpl
cltd
mov
cmpsl
lea
in
test
lods
pop
orb
xor
sub
xchg
jl
enter
out
scas
mov
mov
fldcw
jmp
xchg
mov
icebp
loopne
pusha
cmc
jo
mov
adc
mov
inc
loopne
mul
and
sub
pop
or
xchg
repnz
stos
lahf
repnz
add
stos
mov
dec
pop
hlt
sbb
pop
int
xor
jp
repnz
xchg
loope
jnp
xchg
out
int3
in
push
sarl
mov
cmpsl
adc
add
mov
pop
cmp
jnp
add
fs
inc
insl
pop
out
dec
dec
mov
ror
leave
jne
cmp
cli
outsb
pop
mov
loop
imul
cmp
dec
jmp
les
mov
stos
push
xor
fidivs
add
aad
cmpsb
jmp
insl
inc
pop
imul
lret
push
aaa
lea
sbb
mov
pop
xchg
xor
out
sbb
xor
cmpsl
call
fdivr
push
push
pop
jbe
sub
call
add
adc
cltd
jo
cmp
xlat
push
push
test
out
jb
in
in
push
push
scas
hlt
sbb
mov
mov
out
stos
out
adc
leave
stc
jbe
popa
adc
negl
arpl
lcall
in
add
add
mov
inc
push
and
insl
and
out
in
sarb
out
xor
nop
push
dec
nop
push
notb
push
fstpl
inc
cwtl
dec
test
push
mov
arpl
mov
arpl
mov
sbb
xchg
push
xchg
mov
or
outsl
mov
cmp
mov
pushf
sbbl
in
into
or
jecxz
cmp
clc
orl
lea
dec
imul
lret
popa
xor
movsb
cwtl
adc
cltd
inc
sbb
sbb
insb
mov
push
adc
cld
mov
arpl
cmp
shrb
sbb
xor
mov
jecxz
ret
movsl
cmp
dec
pop
push
sbb
add
mov
push
mov
xchg
out
mov
add
mov
sub
out
add
dec
test
das
into
imul
pop
das
repnz
inc
sarb
jl
pop
sub
orl
rorb
mov
or
mov
in
and
fwait
xchg
fnstsw
mov
dec
sub
mov
jae
lea
xchg
mov
mov
cld
pop
and
mov
xor
add
and
fists
pop
loope
mov
push
add
fdivrl
mov
jg
sub
lcall
insl
or
ljmp
stos
cs
cwtl
mov
jmp
jo
sub
notb
fwait
es
sub
rdtsc
xchg
loopne
mov
jecxz
jg
mov
loop
mov
inc
fcom
insl
aad
and
fxch
sub
cmc
adcl
inc
mov
faddl
addl
sbb
scas
cmp
pushf
call
icebp
ja
pop
sbb
xor
inc
imul
mov
clc
cmp
out
jns
in
jbe
dec
sub
pop
scas
rcl
pop
adc
push
xlat
sub
xchg
loop
inc
inc
and
in
fadds
imul
cld
imul
int
cmc
rcr
insl
popf
imul
fcompl
xchg
add
outsb
pop
sahf
adc
and
cwtd
jns
daa
in
loopne
lcall
cmp
mov
hlt
mull
jmp
imul
mov
out
loope
pop
jmp
std
in
popa
mov
insb
or
das
jae
outsb
xchg
push
in
sub
sub
adc
xchg
movsl
add
hlt
mov
inc
pop
jne
mov
popa
into
or
lret
lret
cmpsl
fimull
xchg
lods
sbbl
dec
mov
test
xor
popf
and
stos
or
push
mov
addr16
shrl
jne
inc
push
mov
or
test
notb
mov
testb
adc
shr
cmp
mov
ret
xchg
jnp
mov
sub
xchg
daa
hlt
test
fistps
jmp
inc
jmp
sub
and
loope
xchg
xchg
loop
shll
pop
jno
dec
imul
fldl
mov
insl
bound
outsl
xchg
ficoml
push
fiadds
mov
pop
lods
rolb
outsb
mov
insb
adc
adc
js
or
imul
sub
sub
icebp
mov
sub
icebp
scas
push
test
mov
or
dec
shrl
jl
jb
adc
jb
test
mov
jmp
outsb
loopne
dec
cmp
dec
loope
cmp
ds
cmp
mov
dec
xchg
setbe
jg,pt
xorb
cltd
out
or
and
ja
int
mov
mov
mov
in
call
sahf
jl
mov
jne
pusha
bound
mov
add
mov
add
sbb
and
or
mov
pop
shll
mov
pop
and
out
and
cwtl
out
add
movsb
sub
pop
hlt
mov
fcomps
shrl
cmp
dec
nop
mov
test
xchg
sub
stos
pop
xchg
leave
pusha
adc
or
xchg
lret
dec
test
fs
cmpsl
loope
push
add
pop
fs
mov
leave
mov
inc
cmpsl
std
es
push
stos
stos
jecxz
pop
inc
data16
pop
leave
add
mov
inc
jnp
pop
stos
mov
outsl
jmp
cld
dec
xchg
mov
or
dec
orl
ljmp
push
loope
mov
scas
push
lods
push
and
int
movsb
sbb
insl
jo
inc
cltd
push
mov
xlat
xor
sbb
call
push
rcrl
in
movsb
jbe
nop
jae
popa
or
scas
imul
ljmp
into
lods
mov
test
pop
ja
xor
and
fimull
mov
inc
push
xchg
and
xor
cltd
je
jo
push
test
sub
int3
inc
lahf
nop
and
loopne
arpl
aam
adc
dec
mov
aam
in
xchg
adc
fwait
test
arpl
in
push
and
divl
lcall
insl
rorl
jne
mov
daa
dec
sbb
adc
add
pushf
push
adc
sbb
mov
adc
fwait
insl
cmp
lahf
sbb
pop
in
sub
jo
jnp
imul
adc
mov
std
arpl
cmpsl
cmp
push
sbb
ret
rcr
lods
cmp
fisubs
and
jne
notb
in
in
push
scas
or
pop
push
test
outsb
mov
inc
imulb
insb
ja
decb
add
and
jmp
shll
lea
outsl
int
push
call
nop
dec
es
stos
ja
sbb
push
call
xor
lds
sub
mov
cli
push
jae
dec
mov
enter
inc
xor
adc
scas
out
pop
xchg
jno
ja
and
int3
mov
out
dec
pop
stos
sub
jle
sbb
test
sub
xor
outsb
into
test
push
pop
mov
push
movsb
iret
xor
repz
cmpsb
sbb
repnz
andb
pop
fwait
push
insb
jne
aam
cmpsb
push
or
lds
aam
or
mov
cmpsl
fdiv
sahf
xchg
pushf
add
pop
add
test
xchg
push
jnp
adc
mov
ja
mov
lret
loopne
cmp
rclb
cmp
pop
pop
dec
sub
mov
lods
in
leave
sbbb
out
in
das
xlat
cmp
jmp
or
sahf
imul
imul
ficomps
cwtl
outsl
out
pop
jge
mov
push
pop
mov
xchg
popa
das
sbb
pop
dec
xchg
inc
sarl
stos
ds
test
push
xlat
imull
in
imul
mov
das
mov
mov
pop
sbb
stc
out
pop
fldcw
cs
mov
sub
cmp
shrl
ret
mov
add
aad
sub
mov
inc
xor
adc
push
jge
cs
lods
mov
or
sti
jl
cltd
js
pop
mov
out
inc
adc
fisubrl
sub
push
and
movsl
sbb
add
xchg
sbb
lcall
in
jbe
inc
cmc
adc
int3
sub
outsl
xor
add
push
sahf
adc
std
xor
out
out
mov
imul
mov
lahf
xchg
loope
push
cs
mov
push
mov
adc
dec
fisttps
rcl
sub
inc
push
xchg
mov
lret
out
push
mov
mov
sbb
and
sub
jae
cli
neg
call
sbb
int
loop
hlt
mov
mov
out
in
push
fcompl
dec
lea
xor
pop
icebp
js
out
jle
push
mov
inc
xchg
mov
sub
push
sahf
adc
outsl
cmp
and
dec
and
jge
test
pop
mov
push
ret
mov
sub
sarb
setae
add
xchg
jmp
adc
mov
shrl
out
cmc
pop
xor
pop
jecxz
jl
inc
jb
pop
push
xchg
jp
outsb
aad
rcrb
idiv
inc
ja
fdivs
mov
inc
pop
inc
adc
or
push
xor
loop
jge
shl
jo
mov
out
cli
cmp
mov
call
mov
mov
inc
adc
dec
pop
out
loopne
mov
fwait
sti
stos
jnp
mov
pusha
stos
xchg
jo
clc
fistps
mov
pop
in
aad
aas
jno
push
loope
jg
jge
mov
lret
stc
jmp
pop
cmpl
xor
test
test
sbb
cltd
jo
xor
stos
and
or
push
repz
js
mov
jb
insb
call
into
cmp
loope
push
jne
cld
xor
add
repnz
out
jae
imul
sub
mov
negb
xlat
pop
adc
jne
cmp
cmovg
mov
imul
adc
insb
cmpb
mov
inc
into
sbb
xchg
sarl
add
lock
xlat
lea
inc
dec
jbe
into
add
push
data16
mov
jno
jae
and
inc
aad
cld
out
loop
and
push
jb
in
push
adc
adc
add
inc
jo
lret
and
xor
xchg
arpl
sub
xor
adc
sarb
xor
mov
movsb
sti
hlt
nop
pop
fsubl
jne
mov
movsl
lods
mov
xchg
shrl
aad
xor
imull
sub
rorl
data16
mov
cmp
xlat
dec
add
fwait
stc
cli
rclb
mov
or
js
sti
adc
je
insl
or
inc
xor
xor
pop
xchg
nop
iret
imul
and
out
jle
pop
sbb
pusha
ds
mov
addr16
mov
xor
lods
xchg
dec
pop
ror
mov
push
popf
outsl
xor
imul
lods
xor
cmc
mov
pop
arpl
out
xchg
xchg
bnd
ja
popa
outsb
dec
shrb
xchg
jecxz
mov
pop
mov
add
outsl
dec
inc
data16
lcall
dec
and
pushl
mov
fcomi
sahf
loope
sarl
and
push
pushf
arpl
cld
mov
cmpsl
mov
cmp
push
out
into
imul
fs
scas
dec
jnp
lods
pop
cmp
nop
jge
pop
lods
sbb
lods
pop
jmp
out
test
jnp
xor
sub
cli
cmc
add
xor
mov
mov
out
outsl
sbb
fisubl
dec
std
sarb
outsl
lds
insb
jo
mov
mov
push
xchg
xchg
mov
pop
mov
repnz
jae
xchg
pop
scas
repz
in
mov
pop
sti
cmpb
xchg
das
testl
jl
pcmpgtd
jmp
add
loop
push
adc
int3
stos
addr16
dec
rorl
lea
into
lods
adc
jp
divl
jg
jbe
pop
outsl
ljmp
stos
bnd
pop
insb
pop
mov
mov
cmp
add
and
lahf
loop
loopne
cmpsb
and
outsb
mov
pop
add
or
xchg
and
inc
insl
xchg
testb
xchg
sub
push
sbb
cmp
roll
push
or
pop
cmp
movsl
popf
lods
call
out
cmp
rol
add
stos
jl
cwtl
in
repnz
icebp
out
push
popa
cmpsb
mov
xchg
jl
mov
mov
dec
or
sub
mov
xor
mov
jbe
aaa
jl
push
enter
and
push
imul
movsl
mov
adcb
jne
hlt
dec
out
pop
stos
pushf
push
xchg
jns
js
cli
pop
adc
jb
cmp
push
xlat
push
std
nop
lea
lods
or
out
lret
lds
mov
shl
ret
jl
subb
or
das
je
rcrb
int3
call
f2xm1
jno
mov
inc
add
in
in
sbb
call
rorb
mov
or
fdivs
ja
xor
adc
mov
mov
mov
xchg
lret
js
ss
dec
shl
insb
loop
into
xor
sahf
rcrl
mov
out
cli
subb
jmp
out
or
jo
idivb
cwtl
icebp
testl
cmp
cwtl
xchg
add
sbbl
push
fidivrl
popf
mov
jge
mov
xchg
dec
pop
iret
pop
push
ror
std
lcall
cmpsl
idivl
mov
dec
xchg
jns
ljmp
rolb
cmp
fdivl
pop
push
mov
xor
mov
lea
xchg
pop
daa
xchg
push
cmp
jg
sbb
fwait
mov
addr16
or
in
push
enter
div
cmpsl
pop
ja
jnp
or
adc
ret
sbb
adc
outsb
sub
test
mov
and
test
fcmovbe
mov
ja
jmp
call
sbb
lock
fdivr
adc
lahf
in
xchg
jp
fwait
stos
insb
in
jae
lea
pop
push
das
push
repnz
popa
cmpsl
jae
mov
aaa
int
mov
aam
add
addr16
test
scas
push
sub
adc
inc
xor
mov
rcll
movsb
jne
loopne
rcr
sub
iret
insb
jno
ds
mov
fnstsw
ja
pop
lea
sub
lcall
imul
iret
movsl
negb
adc
jle
test
scas
mov
repnz
sub
and
pop
and
fs
dec
add
xor
adc
lea
jmp
mov
cwtl
movb
and
lcall
push
sbb
fldcw
xchg
out
rol
push
imul
popa
jbe
stos
lea
addr16
add
jmp
ja
cmpsl
in
jg
movsl
repz
inc
insb
cs
pop
or
sub
mov
icebp
push
in
dec
xor
and
outsb
nop
shll
stos
xchg
pop
inc
sub
mov
in
test
mov
jle
pop
mov
inc
les
xchg
dec
mov
lods
cld
cmpsb
jae
sub
in
in
cmp
ja
adc
ds
push
and
bound
sub
dec
jae
enter
or
cs
xchg
jle
dec
pop
jecxz
jae
loopne
jmp
or
xchg
mov
jmp
call
mov
pop
inc
xchg
test
outsb
cmp
outsb
fisttpll
pop
pop
ljmp
mov
pop
ficomps
xchg
cmp
dec
xchg
xchg
lods
push
jl
popa
subl
xor
pushf
sbb
jbe
sbb
inc
inc
into
xchg
cltd
cmc
movsb
dec
sub
call
dec
dec
into
pop
mov
sbb
pop
in
adc
or
loopne
dec
stos
enter
out
lret
push
mov
rorl
call
push
push
pop
cltd
dec
adc
dec
shlb
jecxz
pop
xchg
dec
xchg
push
hlt
repz
jmp
push
sub
xchg
iret
ds
mov
and
jecxz
adc
or
sub
mov
out
les
cmp
sbb
xor
inc
jmp
cmp
adc
out
movsl
outsb
and
jne
adc
movsb
or
cmpl
push
and
cmp
mov
jg
pop
in
out
sbb
cmp
xchg
adc
push
pusha
cmp
int3
insb
sub
test
mov
repz
hlt
dec
ja
cs
fimuls
pop
or
jecxz
lcall
popa
arpl
shl
imul
dec
stos
mov
jg
mov
aaa
pop
cld
stc
movsl
pop
lcall
test
mov
mov
xchg
cmpsl
into
adc
mov
mov
icebp
xor
mov
repz
loop
push
sub
stos
mov
loopne
ret
lds
sbb
lea
jae
xorps
sbb
add
sbb
pop
jo
sub
mov
pop
in
xchg
enter
rcrl
adc
xchg
cmpsl
or
in
cltd
ljmp
mov
in
add
insb
xchg
xor
cmp
pop
imul
in
mov
push
inc
test
jnp
sub
in
inc
mov
inc
jle
jge
jg
loop
sbb
aad
lods
sbb
cmp
adc
xchg
pusha
add
out
rcr
mov
adc
lcall
lods
in
movsl
lock
dec
popa
jae
or
adc
cmp
std
xchg
lea
xchg
pusha
mov
jmp
or
hlt
scas
push
test
pop
xor
pop
pop
adc
fwait
sbb
pushf
es
loopne
rcrb
or
test
fwait
call
pop
pop
std
sahf
mov
xchg
push
dec
leave
xchg
nop
mov
shll
sbb
mov
daa
xor
enter
xorb
andl
push
dec
iret
aad
int
shl
cmp
movsl
mov
or
jno
pop
mov
sub
lods
adc
cmp
stos
leave
xor
std
cmp
mov
add
dec
xchg
lahf
cli
insl
jne
mov
cmpsl
out
xchg
cltd
jl
adc
mov
mov
into
lea
fs
call
ljmp
popf
das
and
lock
insb
hlt
or
xchg
pop
sub
cmpb
cmp
addl
pop
push
or
or
dec
mov
scas
and
jne
add
rcll
pop
ljmp
push
daa
lret
xchg
dec
sti
mov
das
dec
push
pushf
dec
jno
lcall
mov
push
repz
not
ja
imul
pushaw
bound
ret
loope
cwtl
jo
popa
add
cmp
cmc
push
loopne
pusha
scas
adc
js
pop
push
jo
test
push
inc
test
cmp
testb
out
daa
sbb
adc
inc
xchg
dec
sahf
sub
xor
sbbb
lds
outsb
fisubrl
lods
cwtl
out
loope
mov
vpsraw
dec
pop
stos
sbb
jne
xor
push
xchg
insb
pop
ret
ret
lods
xchg
push
sbb
push
dec
sbb
mov
jmp
pop
not
lcall
xchg
push
jbe
and
adc
push
pop
push
or
jns
test
xchg
mov
stc
adc
jecxz
rorl
xchg
dec
sbb
call
out
xor
cld
fdivs
pop
lret
mov
aaa
or
push
mov
test
push
jmp
jbe
push
sub
mov
mov
inc
and
mov
lcall
sbb
in
mov
jmp
test
lds
in
and
pop
js
into
loop
xlat
rorb
jle
nop
adc
test
nop
test
lahf
cwtl
and
xchg
out
cmc
fidivs
push
mov
add
sbb
in
xchg
xor
jb
fistl
add
fnstenv
fistl
hlt
ja
out
ja
bound
loopne
jg
push
mov
xor
or
nop
or
repz
sub
push
pop
lock
aad
enter
iret
shl
inc
fldl
cs
push
fdiv
out
enter
push
mov
push
je
stc
insb
nop
dec
fstpl
dec
jae
imul
loop
pop
stc
popf
dec
test
xchg
in
mov
xor
test
in
push
popf
or
cmc
cmpsb
lods
push
ds
or
or
nop
pop
add
dec
scas
xor
jecxz
cmp
and
add
inc
jecxz
jge
cmp
loop
xchg
jp
jno
movsl
test
cmc
jp
fidivrl
daa
sub
pop
dec
incb
adc
lret
push
pop
cmp
shlb
mov
inc
in
inc
pop
jno
addb
insl
xor
jne
mov
in
lret
sub
insl
cli
sbbl
pushf
insl
pop
pop
pop
lock
jecxz
or
add
sub
jne
cmp
adc
mov
sub
jmp
notb
fisubs
cs
mov
scas
subl
and
decb
fnstcw
cmpsb
ja
imul
in
pop
push
jp
ljmp
sub
daa
mov
push
dec
cltd
xor
cs
pop
out
cltd
fstpt
mov
out
hlt
lock
ficoms
mov
outsb
xor
lret
pusha
xor
add
add
xor
inc
lret
pop
data16
testb
cmc
shll
adc
sub
fsts
and
mov
call
lret
dec
stos
fdivl
mov
rcrb
sbbl
sub
ss
loope
jnp,pn
inc
pop
sti
bound
sbb
jns
lret
outsb
out
cmp
push
jl
iret
xchg
popf
mov
adc
lods
cs
mov
out
push
mov
adc
daa
sub
fcomps
sbbl
push
icebp
xor
jecxz
mov
hlt
inc
repnz
sbb
pop
in
iret
out
les
fsubl
mov
mov
mov
subb
pop
pop
test
mov
rcll
jg
inc
sbb
sbb
add
adc
or
js
xor
cmp
test
jb
js
dec
xchg
enter
xchg
outsl
xchg
out
pop
fisubrs
aad
pop
insl
adc
pusha
jmp
xor
imul
jno
sti
adc
fistpl
and
rcrl
mov
xor
cmc
addr16
inc
imul
inc
bound
cmp
popa
sti
fisttpl
je
xchg
mov
popf
or
ds
xchg
lods
fs
mov
mov
and
daa
xor
inc
inc
dec
xchg
sbb
mov
pop
lret
cltd
stc
push
jge
xchg
mov
testl
lods
sbb
sub
jp
jb
xor
fsts
rcrl
stos
xchg
sub
mov
mov
push
ret
flds
adc
or
pop
fmuls
lods
or
cmp
dec
roll
pusha
push
bound
jns
sub
mov
mov
xchg
loopne
idivl
xor
add
add
push
mov
sbb
mov
icebp
adc
cltd
repz
mov
sbb
jge
out
add
mov
xchg
jbe
inc
mov
popf
fsts
jnp
aad
and
clc
inc
jle
jnp
cmp
sbb
ss
mov
adc
nop
roll
jae
ret
sahf
xlat
mov
cld
stos
sub
nop
mov
dec
push
cwtl
sti
xchg
mov
adc
sarl
sbb
out
rorl
xor
and
leave
popa
mov
sbb
sbb
and
fwait
mov
sti
push
test
test
sub
xchg
mov
aam
loop
jge
jno
cmp
push
in
arpl
divb
scas
hlt
inc
aas
sarl
push
add
push
xchg
out
mov
add
aam
nop
add
dec
rclb
repz
leave
xor
and
pop
inc
std
out
mov
stos
cmp
cs
fsubs
sbb
sbb
mov
push
adc
hlt
repnz
inc
and
xor
fnstcw
insb
test
lret
cs
xchg
jp
cmp
add
fdiv
test
mov
lds
cmp
or
push
clc
movsl
pushf
sub
fisubrl
xchg
cmp
std
push
es
sub
sub
nop
imul
outsb
insl
jo
push
xchg
psrlq
js
or
cmpsb
jg
add
rol
aaa
nop
xor
push
sbb
xchg
into
xchg
dec
out
mov
and
push
outsl
mov
adc
xchg
stos
out
inc
lret
lret
sub
or
lods
and
pop
cmp
insl
or
movsb
sub
ss
popa
mov
je
nop
mov
jnp
jge
cld
outsb
pop
subb
cmp
and
xchg
and
jle
cmc
cmp
pop
and
sbb
dec
jp
in
mov
pusha
pop
adc
fldenv
jle
out
out
inc
popf
mulb
int3
mov
mov
xchg
mov
xor
inc
ss
jo
test
ja
mov
repz
and
dec
cmp
xchg
nop
add
mov
jo
movsb
or
mov
xor
ds
imul
mov
ljmp
mov
in
dec
mov
inc
mov
cmpl
roll
mov
xlat
out
in
jl
das
jne
mov
in
in
pop
loope
push
dec
hlt
mov
add
cs
and
or
fildl
ds
push
jmp
push
icebp
add
into
les
cli
inc
pop
lds
push
jae
mov
mov
dec
movsb
mov
bound
adc
sbb
sub
pop
xchg
clc
or
cmpsb
sbb
fcmove
imul
dec
pop
movsb
je
fsubrp
cs
insl
mov
in
aam
fistl
jmp
stos
mov
sbb
test
xor
bound
popf
mov
cmp
mov
pop
inc
sahf
mov
int3
inc
gs
and
rcll
imul
in
inc
mov
ja
cltd
push
pop
test
imul
aam
jne
daa
fldenv
test
and
push
aaa
mov
call
popf
ret
shll
into
sub
xchg
sbb
cmp
ljmp
call
jl
sahf
clc
xchg
dec
jle
std
cld
jmp
inc
xlat
xchg
jmp
cmpsl
xchg
ret
dec
mov
out
mov
rorl
nop
pop
mov
jne
test
sbb
jns
pop
xchg
mov
loope
mov
insl
xor
push
std
movsl
mov
mov
cmpsb
push
lea
orl
cmp
popf
ds
pop
jmp
loopne
xchg
jae
lods
xor
in
dec
add
cmpsl
aam
lcall
add
dec
jnp
fwait
pop
mov
cmp
inc
cltd
adc
mov
repz
out
cmp
sub
fs
push
jnp
adc
dec
sub
mov
rolb
adc
xor
stos
shrb
mov
fisttpl
out
cmc
add
push
aaa
nop
and
jno
ss
mov
jl
stc
popf
lcall
jno
pop
imull
hlt
mov
mov
cmp
fwait
and
or
out
xchg
pop
loope
cmp
mov
dec
inc
aaa
sub
mov
push
lock
daa
fidivl
sub
inc
outsb
cmpsb
pop
mov
xchg
lock
jnp
xchg
cmc
repz
aas
mov
adc
xor
xchg
xchg
xor
adc
fdivs
mov
mov
shll
xor
cwtl
pop
enter
test
std
lds
or
mov
ret
xchg
into
xor
fnstsw
lcall
dec
or
enter
cli
pop
hlt
pop
cs
push
int3
mov
and
jge
mulb
sbb
fxch
push
add
and
cltd
mov
in
dec
jns
jb
adc
fwait
jecxz
std
fidivs
mov
pop
daa
or
mov
addr16
sti
and
cmp
pop
pop
add
inc
xchg
dec
arpl
loop
into
add
es
dec
or
pop
lock
cmp
rcl
dec
cmp
adc
lods
arpl
fbstp
and
mov
jmp
fs
xchg
ret
insb
lea
push
cmp
xor
adc
mov
sub
sbb
jae
sub
stc
aam
xchg
lcall
sahf
aaa
cmp
icebp
movsb
sarl
pop
sbb
divb
dec
lea
clc
repnz
psrad
out
lret
aam
outsl
pop
int
lods
lret
addr16
mov
push
and
push
sbb
test
pop
add
jp
or
stc
and
out
jp
adc
or
hlt
loope
or
into
aas
icebp
popf
gs
imul
mov
xor
push
into
jbe
cmp
inc
inc
cmp
cmp
popaw
mov
lock
or
jno
mov
or
daa
imul
push
dec
mov
push
icebp
popa
adc
push
jo
adc
lock
lret
mov
inc
in
adc
test
mov
loope
or
or
jnp
enter
mov
lods
sbb
movsl
mov
push
loop
jo
sar
jmp
jecxz
inc
xor
inc
in
xor
movsl
cmp
mov
ret
cmp
std
mov
mov
aam
inc
cmpsb
xchg
fcoml
loopne
inc
sub
xor
shrl
xchg
xchg
pop
add
arpl
and
test
xor
push
jb
push
push
icebp
stc
out
test
xor
push
test
test
add
out
hlt
enter
mov
xchg
adc
jns
in
xchg
fwait
xlat
scas
stc
xchg
jne
mov
push
mov
stc
xlat
mov
lods
jge
addl
mov
subb
ret
push
popa
sub
jb
insl
mov
popa
adc
jecxz
fstps
outsb
dec
lret
xchg
sti
cmp
out
pop
cmp
adc
fnstenv
xor
sti
imul
pusha
mov
inc
sub
bound
fidivrl
loopne
daa
xor
cld
or
jo
adc
pop
mov
test
xchg
imul
repnz
jnp
dec
inc
push
xor
jle
xchg
jnp
sti
negl
pop
cmpsl
xchg
and
xchg
push
out
or
mov
mov
mov
test
aam
push
sbb
inc
stc
jno
fldcw
mov
mov
mov
insl
scas
jbe
mov
fnsave
xor
adc
inc
jl
fsub
xchg
adc
push
fcomps
loopne
cli
movsb
mov
mov
movsl
inc
int3
ss
cmp
sub
pushf
sbb
fiaddl
pop
into
arpl
adc
pop
lcall
or
clc
sbb
pop
or
aaa
inc
xchg
pop
sbb
mov
mov
arpl
data16
test
test
out
jmp
repz
xchg
scas
aad
mov
cmpsl
lcall
cs
adc
popf
mov
xchg
icebp
jo
sub
in
pusha
ret
inc
cli
shr
ja
leave
fsubrl
aaa
daa
jne
or
mov
and
es
ret
fsub
fdivr
mov
or
in
out
inc
xor
cmp
insl
rclb
cmp
movsl
mov
testb
test
ja
cltd
or
xchg
bound
leave
mov
clc
pop
sbb
mov
lcall
mov
mov
lods
nop
out
fiadds
cmp
in
jmp
add
nop
inc
jb
sub
mov
cld
mov
mov
sbb
and
mov
cmp
xchg
lcall
xchg
ja
mov
das
pop
mov
jg
iret
and
and
leave
int3
push
cmpb
in
xor
insb
push
cltd
xchg
leave
jp
lods
inc
shl
mov
lods
icebp
mov
add
dec
je
aaa
push
test
in
iret
mov
jne
fidivl
mov
mov
iret
test
xor
shrl
loop
sbb
jne
stos
inc
mov
sub
lcall
pusha
push
pop
pop
rolb
punpckhwd
pop
cwtl
cmp
jb
icebp
adc
jnp
ficoml
loop
loopne
in
shlb
sahf
nop
in
out
dec
dec
dec
mov
std
add
mov
fs
mov
or
jmp
pop
sbb
adc
adc
shl
popa
cld
cmpsb
mov
inc
xchg
es
mov
dec
subl
mov
mov
lock
popa
mov
pop
jl
mov
adc
and
pop
decl
inc
shrl
cmp
fs
ss
icebp
mov
mov
inc
xor
xchg
ja
adc
and
out
fwait
mov
shll
loopne
dec
and
clc
inc
mov
or
mov
loop
into
add
cmp
lods
sbb
loop
ficoms
mov
cmp
dec
push
mov
sbb
xchg
mov
test
ss
pop
roll
adc
imull
sti
sbb
mov
jno
cwtl
test
pop
cltd
addr16
jno
lea
int3
push
or
lock
movsl
pop
ror
data16
out
cltd
lcall
and
add
in
arpl
mov
xor
mov
sub
insb
pop
sbb
mov
popa
fsubr
jp
sbb
out
push
pop
pop
and
push
mov
inc
fistl
xor
jmp
jne
fwait
in
cld
fldl
pop
and
inc
push
mov
cmp
or
sub
inc
fdivrp
adc
outsb
ss
and
loop
xchg
mov
mov
and
in
fisubrs
cli
int3
sbb
cmp
insb
jmp
inc
out
arpl
jns
outsb
inc
out
sub
and
cld
add
inc
and
sbb
in
ja
adc
leave
in
adc
sbb
adc
push
inc
aaa
adc
js
and
insb
aaa
icebp
push
scas
rcrb
inc
popa
inc
jns
sub
mov
movsl
push
mov
cld
inc
test
imul
mov
xorb
scas
xlat
int3
and
aam
add
xchg
jo
mov
into
clc
cs
out
sbb
stc
mov
jnp
dec
das
scas
or
sbb
test
xor
outsb
leave
adc
das
repz
mov
cld
ficomps
sbb
lea
arpl
je
dec
in
mov
aas
int
dec
and
push
fnsave
call
jo
xorb
ja
push
loop
test
insb
popf
jl
xchg
mov
lods
cwtl
jb
lret
push
loopne
jl
add
std
stos
sti
xchg
or
mov
xchg
shl
leave
nop
movsl
push
ljmp
cmp
add
loopne
fistpll
sbb
loopne
dec
test
mov
pusha
push
mov
xchg
mov
xchg
add
mov
inc
inc
xchg
out
out
add
shrl
addr16
out
mov
sub
lea
pop
dec
xchg
sbb
mov
mov
dec
cld
push
cmp
xor
pop
xchg
push
repnz
mov
jns
inc
pop
cwtl
lods
outsl
adc
sbb
sbb
push
shll
fsubl
or
call
mov
inc
sub
push
aaa
sub
push
dec
jmp
jg
xor
xchg
cltd
adc
jecxz
adc
test
hlt
mov
nop
sub
adc
add
test
loopne
cltd
jns
xor
xchg
adc
push
dec
loop
in
repnz
mov
in
and
sub
imul
pop
mov
jb
aaa
push
push
subb
repnz
mov
into
dec
jmp
les
lods
ss
sbb
outsb
mov
sarb
adc
cmc
ret
jno
stc
xor
jae
xchg
pop
cmpsl
xchg
add
les
cmp
push
popf
xor
pop
rclb
inc
testb
sbb
xlat
sbb
mov
jp
push
mov
into
xchg
mov
sbb
out
mov
mov
movsl
sbb
cmpb
dec
sarl
leave
mov
cmp
xor
jmp
lea
xchg
js
mov
repz
cmpb
out
out
scas
adc
pop
daa
jge
insb
jno
xlat
cld
dec
je
stc
mov
pop
jmp
and
fucom
outsb
imul
cld
and
inc
adc
push
sub
call
adc
sub
jnp
lea
loop
mov
sub
imull
mov
cli
mov
imul
xor
or
shlb
sub
dec
cmp
outsl
int3
lcall
daa
mov
imul
fistl
mov
inc
dec
sub
shlb
jb
pop
fsubrl
imul
mov
cmc
or
stos
mov
lea
lods
iret
cmpsl
lea
insl
and
lods
adc
dec
and
call
call
into
inc
xor
test
mov
sbb
jo
cwtl
insb
xor
push
mov
sub
cld
dec
mov
shl
mov
mov
jno
into
sbb
xor
dec
out
inc
pushf
adc
dec
mov
jns
pop
xchg
mov
push
pop
lret
jmp
in
repnz
das
jp
xchg
jnp
dec
or
dec
repnz
out
adc
hlt
xor
xchg
fsubr
adc
push
sub
and
lock
fcoml
outsb
iret
mov
sub
inc
iret
test
leave
les
ljmp
lahf
je
shrb
shrl
cmc
jne
fcom
arpl
sti
call
mov
dec
imul
inc
push
push
mov
popf
sbb
incb
std
into
sti
and
in
insl
or
pop
scas
addr16
out
dec
sub
push
sub
lcall
fcomps
cmpsl
mov
adcl
cmp
inc
jno
jo
push
es
fisttpl
icebp
je
push
cld
insl
test
movsl
ja
movsl
test
stos
dec
shl
xor
and
lea
test
fistpll
bound
dec
or
jb
es
mov
decl
imul
clc
rclb
fcomp
stc
mov
cmc
mov
and
cmp
adc
jbe
inc
lock
add
addl
pop
mov
mov
es
test
stos
enter
icebp
cmp
stos
es
inc
insb
xor
and
pop
mov
mov
icebp
syscall
push
dec
popa
dec
bound
jp
incb
rolb
lock
or
sbb
push
dec
cltd
pop
rorb
sti
loopne
dec
and
jo
lock
hlt
pop
outsl
ljmp
stos
stc
fimuls
cmp
mov
movsl
testl
cmpsl
cmpb
sub
sahf
into
xor
sbb
sbb
adc
or
inc
jnp
cmp
lea
push
adc
insl
pop
jno
imulb
xchg
jmp
lret
push
sub
sbb
outsb
add
sbb
in
add
out
pop
mov
push
imul
les
cmp
cmp
lock
ret
sbb
push
mull
mov
test
xchg
nop
and
and
jno
test
sbb
push
sbb
inc
pushf
add
stos
push
push
data16
out
sub
faddl
and
int3
inc
adc
inc
mov
jo
popa
je
sbb
push
in
push
jg
ret
in
out
rcll
stos
or
nop
int3
cmp
lcall
cmp
push
bnd
adc
dec
divb
mov
jns
or
fisubs
movsb
inc
mov
movsb
fisubrl
lret
push
pop
cmp
pop
jmp
adc
int
mov
cmpsl
sub
pop
add
stos
mov
jmp
sbb
mov
cmpb
stc
fisubrl
aas
roll
dec
test
inc
jg
out
sahf
cwtl
fisubrs
test
xor
inc
cmp
ret
std
xor
clc
sub
mov
mov
push
stc
outsb
sub
popf
orb
stos
fistl
or
repnz
sub
jo
fchs
repz
pop
lods
sub
in
mov
hlt
divl
test
cmp
push
push
dec
xchg
testb
sub
xor
push
push
std
out
adc
outsl
mov
call
inc
mov
xchg
mov
and
xor
int
pusha
orl
xlat
jne
add
mov
pop
test
mov
xor
fldt
ds
dec
imul
lods
das
pop
scas
lods
pushf
push
mov
cmp
lods
pusha
mov
mov
add
pop
mov
out
sub
mov
mov
xchg
ficoms
bound
push
cmp
push
stos
add
add
pushl
das
sbb
cltd
inc
adc
pop
in
dec
ss
cmp
inc
in
ja
in
das
cmp
xor
adc
daa
cmp
ret
fwait
lahf
xchg
subb
xchg
pop
cmp
jbe
push
negb
ret
jge
or
test
out
pop
push
test
mov
adc
cmp
add
cvttps2pi
fldl
int
dec
mov
mov
in
insl
scas
xchg
shll
sti
stc
jbe
mov
inc
adc
pop
scas
out
pop
in
call
push
addr16
outsb
xchg
repz
cltd
into
add
sub
push
push
push
fwait
push
in
pop
pop
nop
out
in
pop
xchg
sbb
addr16
inc
mov
cmp
fisttps
xor
das
sub
add
sbb
inc
vmulpd
mov
push
xor
adc
in
in
hlt
pop
adc
jg
fidivrl
cmp
jo
xlat
faddl
push
push
push
jno
jp
cltd
rcrl
imul
mov
jge
jmp
cld
xchg
ficomps
sbb
mov
rorb
and
lret
adc
mov
cmpsb
and
aad
cmc
mov
sub
jecxz
jbe
shrb
flds
std
cld
movsb
sbb
sbb
dec
sbb
aad
shr
lret
inc
cli
lea
push
sub
cmp
in
int
imull
in
adc
scas
xchg
std
sub
addb
ljmp
maxps
push
fwait
pop
pop
call
adc
push
aam
in
jle
jl
push
arpl
into
jl
in
iret
sbb
fwait
xchg
inc
mov
lock
lcall
mov
or
out
push
data16
lock
dec
out
stc
loope,pn
sarl
and
dec
mov
mov
inc
add
xor
mov
mov
pop
cltd
out
fs
or
fcom
xchg
mov
dec
pextrw
push
add
mov
pusha
or
jle
pop
cvttps2pi
adc
stos
mull
or
js
sbb
dec
push
arpl
loopne
mov
fwait
stc
inc
mov
lods
cli
test
mov
and
pop
or
scas
js
xchg
jae
xchg
mov
jl
xchg
jmp
lret
popa
ret
fstpt
mov
stc
shl
les
pop
test
mov
pop
cmp
rcr
mov
out
xlat
rorb
xchg
push
mov
nop
hlt
pop
jmp
or
ret
jecxz
pop
jnp
cli
inc
movsb
fnsave
iret
lods
xor
xchg
dec
pop
xchg
cmp
adc
mov
in
mov
jg
mov
lods
or
clc
inc
movsb
xchg
mov
xchg
in
push
test
pop
mov
nop
and
push
mov
xorl
or
pop
rep
gs
xchg
aad
sbbb
fdivrs
int
mov
fiadds
dec
sbb
add
adc
or
jge
push
ret
loope
and
jle
scas
clc
or
je
aad
mov
sbb
xchg
mov
xor
inc
or
repz
pop
mov
pop
xor
cltd
jbe
inc
pushf
ja
pushl
and
mov
cs
cmpsb
dec
mov
addr16
fists
fwait
mov
pop
in
xchg
daa
mov
shlb
insl
mov
ja
cmp
jg
adc
dec
cmp
xchg
rcll
cmpsb
pop
dec
imul
sub
adc
rclb
mov
imul
in
fnstenv
adc
push
dec
xor
pusha
sarl
jmp
shlb
jb
fsubrp
add
jne
loop
xorl
jbe
xchg
loopne
iret
inc
mov
cltd
nop
enter
fisubs
mov
outsl
in
pmaxsw
cmpsl
adc
pop
push
xor
inc
fimuls
pop
mov
dec
sub
test
cli
ja
jle
push
aas
lea
cli
xchg
out
std
sub
inc
push
lret
xchg
inc
lret
dec
mov
mov
jl
out
shl
or
xchg
inc
push
sub
pop
jmp
mov
pop
or
in
outsl
adc
cmp
jl
push
jp
xlat
sub
push
lods
jnp
mov
and
imull
xchg
inc
lods
cmp
sub
in
adc
cwtl
xchg
js
xor
scas
inc
mov
push
xor
mov
or
insb
shll
fidivrl
add
das
sub
xchg
lret
fs
mov
add
inc
ja
or
mov
sarl
insl
in
shlb
or
xor
jno
dec
addr16
jae
inc
push
and
sbb
inc
mov
aaa
jne
jb
lcall
in
sbb
xchg
sub
cmc
mov
in
repnz
shlb
in
out
scas
pop
setl
testb
cmpl
popa
pop
cmp
sbb
outsl
and
mov
add
cld
pop
xchg
dec
stc
movsl
mov
gs
dec
int
or
repnz
jecxz
iret
and
xorb
or
mov
pushf
dec
popa
mov
out
rorb
sbb
add
iret
cmp
fldl
cmp
xchg
inc
cmp
je
sbb
enter
mov
add
pop
pop
scas
out
xor
mov
sub
int3
xchg
push
adc
jns
mov
jmp
jae
push
jne
and
fcmovne
mov
fwait
add
adc
mov
sbb
jecxz
sbb
in
or
ljmp
mov
inc
pop
test
sahf
icebp
bound
inc
cmp
mov
push
add
cmp
popa
mov
mov
jg
daa
sub
int3
jne
out
adc
stc
xchg
jle
out
or
push
enter
int3
xchg
pop
cltd
insl
sub
int3
imul
lods
int3
je
int
cmp
in
mov
pusha
cmp
rep
push
or
adc
addr16
mov
insb
mov
aaa
and
in
jb
fcoms
mov
dec
mov
bound
cmpsl
xor
dec
int
adc
xor
adc
mov
xor
and
pop
int3
fwait
adc
scas
or
iret
int3
scas
rorl
push
into
sbb
in
gs
in
dec
or
sbb
jnp
pop
test
lods
cmp
adc
mov
test
mov
jne
sub
adc
add
mov
ret
adc
inc
inc
adc
sti
dec
dec
dec
dec
xchg
lcall
loop
mov
movsb
dec
jb
or
fistpll
sub
fbstp
icebp
test
mov
dec
sbb
loope
rcrb
sub
ud2
cwtl
imul
xchg
pop
mov
shlb
loope
imul
jns
cmp
push
scas
cmp
fstpl
sbb
std
test
mov
inc
rorl
inc
or
sub
outsb
xchg
adc
or
and
in
pushf
clc
lock
popf
iret
xchg
out
xlat
lret
testl
mov
xchg
sbb
outsb
adc
jle
push
nop
cs
lea
aas
or
cmp
xchg
insl
pop
cli
popa
dec
adc
call
imul
lret
movsl
loopne
xor
test
lahf
inc
or
imul
lea
push
sbb
mov
in
int
jae
jp
sbb
or
cwtl
jecxz
mov
mov
pop
sbb
jl
inc
ds
icebp
cmp
subl
adc
jle
dec
xor
sub
mov
lret
ds
popa
xchg
pop
xor
imul
mov
dec
lret
jnp
pusha
xlat
inc
xor
mov
aad
xlat
pop
push
mov
movsb
imul
test
sub
lods
lods
jecxz
fs
sub
pop
std
or
fstpl
fldt
mov
jl
add
cmpsl
mov
jae
sub
adc
sbb
or
xchg
nop
sbb
sbb
loop
clc
mov
fldenv
pusha
xchg
adc
lahf
rorl
sahf
or
ret
xor
ss
das
ss
xor
cmp
imul
xor
popf
sbb
and
xchg
inc
jmp
cmp
and
fwait
and
jbe
jl
push
mov
mov
adc
push
sbb
pop
insb
call
fwait
call
shrl
out
pushf
sti
fs
xchg
repnz
cld
insl
sbb
fisttpl
mov
add
and
push
cmp
mov
daa
leave
mov
jp
mov
sub
lock
xchg
cmp
push
jmp
lods
and
mov
dec
iret
fs
inc
cmc
lea
xchg
mov
pushf
adc
dec
jecxz
popa
dec
mov
push
pop
dec
lcall
push
jnp
std
jmp
je
out
rorb
mov
jo
int3
pop
scas
push
xchg
test
testb
pop
cmp
js
or
out
out
outsl
dec
out
fs
enter
call
int
dec
mov
or
jmp
push
enter
loope
test
xor
test
and
outsl
pop
fs
push
xor
push
add
xor
adc
adc
push
mov
cmp
out
cmp
pusha
or
daa
js
add
loop
dec
sub
dec
add
fbstp
jmp
push
ja
adc
pop
fsub
stos
adc
ja
sub
sub
and
inc
shll
movsb
in
les
in
xor
inc
repz
test
scas
into
call
outsl
lods
add
popf
sub
push
jge
out
jns
add
pushf
pop
and
subb
jo
or
jns
adc
outsl
cltd
dec
xor
adc
lret
xchg
cmp
xchg
gs
and
xor
sbb
pop
insl
lock
push
shll
sbb
sbb
push
jno
dec
cs
stos
add
mov
xchg
orb
test
mov
mov
inc
xchg
adc
negb
inc
dec
adc
mov
arpl
add
mov
lahf
sti
add
jbe
pusha
mov
dec
add
fs
fsts
in
sbb
mov
int3
in
jae
push
xchg
dec
out
int3
cld
add
aam
xchg
lcall
push
pop
ss
cmp
test
pushf
push
fmuls
mov
xchg
or
jnp
cmp
mov
je
lahf
or
mov
ret
fisttps
pop
mov
sahf
out
filds
push
or
sarl
mov
dec
mov
mov
outsl
push
or
mov
mov
jecxz
mov
aas
outsb
pop
or
xchg
sub
insb
mov
mov
in
jl
adc
pop
inc
ror
adc
cmp
test
loop
mov
outsl
xchg
jnp
pop
je
adc
lods
or
sbb
sub
adc
push
cmp
inc
mov
hlt
mov
push
std
clc
jne
xorl
add
arpl
out
pop
in
popf
lcall
cmpb
mov
movsl
mov
pop
inc
add
inc
mov
hlt
je
fidivrs
dec
cmp
out
int3
in
adc
ja
sbb
or
je
daa
xchg
sub
and
adc
bndstx
sbb
dec
mov
lcall
adc
orl
std
out
cmp
sub
xchg
inc
sub
sbbb
into
fwait
xchg
mov
xor
rclb
jo
and
outsb
mov
dec
adc
xor
movsl
aad
cmpsl
jbe
adc
push
loop
loope
xor
add
xchg
imul
sub
test
movsb
lock
bound
xlat
cli
dec
sub
cmp
stos
jns
push
lcall
scas
rclb
adc
jo
xor
dec
std
popa
out
rorl
addr16
jge
add
cli
int
jmp
mov
mov
mov
xchg
iret
outsb
rorb
sahf
jb
or
jge
lcall
push
dec
rcrb
cli
xorb
add
inc
sahf
in
push
ja
sub
test
adc
cmp
cld
aas
mov
mov
and
push
xor
sub
loop
ss
cmp
cmpsb
push
cmp
mov
cmp
xchg
pushf
cli
jle
sbb
jecxz
out
scas
sti
pop
and
mov
ror
push
push
sub
mov
cmp
cmpsb
pop
lcall
lahf
sbb
popa
cmp
adc
lds
mov
cmpsl
adc
aas
fcomps
out
shll
fadd
sarl
rol
or
repz
scas
outsb
iret
ret
addr16
fwait
push
push
aam
sub
xor
inc
jp
xchg
xchg
int3
xchg
dec
dec
mov
out
or
inc
out
inc
iret
sbb
or
jg
fbld
mov
das
enter
dec
xchg
jo
es
lret
pop
test
loope
xchg
cltd
fwait
lock
xchg
fidivrl
lock
pop
cmpsl
cmpsb
into
xchg
adc
pop
jle
shll
leave
bound
adc
xchg
inc
xchg
mov
adc
sahf
or
into
aas
inc
push
adc
or
xor
shr
sbbl
adc
popa
mov
xorb
cmc
jg
dec
push
in
or
sbb
sbb
addr16
imul
pandn
les
dec
push
pop
sbb
xor
lods
or
mov
mov
xor
xchg
jg
ret
mov
jns
out
cmp
pop
xchg
sub
aad
xor
lahf
sahf
fcomps
jge
pushf
out
sbb
xchg
call
cmpsb
mov
xor
enter
testb
gs
xor
mov
push
leave
rcrl
sbb
mov
pushf
daa
add
mov
add
decb
rclb
test
leave
jle
iret
iret
jnp
push
sub
mov
mov
push
mov
je
sbb
outsb
inc
rorl
movsl
jecxz
pusha
fisubrs
and
test
mov
mov
out
fldcw
and
fchs
in
sbb
jp
or
lea
jmp
jle
xlat
popf
inc
push
push
fs
dec
test
pop
or
pop
xchg
sbb
repz
mov
clc
push
mov
pop
sub
mov
mov
fidivl
fisttpl
xor
out
out
sbb
dec
and
jbe
cmpsb
in
cltd
cltd
dec
mov
mov
inc
bound
enter
mov
pop
mov
dec
arpl
sti
sub
in
jge
data16
divl
loopne
fwait
jp
and
or
xchg
push
fldt
push
hlt
out
addr16
lea
xchg
in
sub
loop
mov
es
sti
add
sub
sub
add
mov
jmp
data16
insb
lcall
sbb
jo
popa
cmpsl
and
clc
movsl
mov
lds
scas
stos
inc
lret
les
js
out
pop
push
lcall
mov
aad
in
in
imul
add
mov
jge
inc
int3
in
jbe
mov
scas
rcrl
fiadds
mov
test
shlb
jne
lods
cmpsb
sbb
leave
xchg
xor
jg
cs
jmp
push
test
cmp
jmp
subl
loope
xchg
lret
call
rolb
scas
cmpsb
xchg
rcll
fcoms
push
mov
hlt
push
mov
test
sbb
shll
lret
roll
cmc
int
or
mov
aad
pusha
test
adc
cmp
aam
jne
pop
shlb
clc
cmp
push
add
xorb
push
mov
insl
sti
jo
mov
jge
jno
jbe
aam
adc
jmp
ret
lea
mov
mov
push
ror
pop
ljmp
add
and
fmull
adc
add
mov
mov
xchg
jmp
call
adcb
icebp
popf
dec
pusha
fisttpll
jg,pt
inc
adcb
repz
lahf
sbb
add
int
push
loopne
addr16
push
sub
outsl
jbe
and
sbb
pop
daa
sbb
jecxz
js
pop
rol
mov
scas
jbe
or
outsl
push
push
sbb
shlb
imul
push
into
iret
xor
bnd
sbb
roll
repnz
jl
xchg
data16
call
sbb
jae
out
cmp
outsl
aad
inc
cld
inc
pcmpgtw
in
mov
mov
insl
loope
fldt
sti
pusha
jno
fcomps
testb
xor
mov
data16
or
and
or
cmc
and
mov
jle
dec
ljmp
out
jbe
jno
push
add
xlat
and
push
jnp
push
push
xchg
lahf
cwtl
sub
test
pop
dec
jmp
mov
push
aad
xchg
mov
push
adc
testb
shll
sbb
sub
add
jg
mov
fists
call
enter
add
push
adc
inc
inc
sub
lock
pop
mov
add
mov
cmp
add
mov
daa
test
sti
or
les
imul
pusha
insb
sbb
cmp
lahf
std
test
jae
add
xchg
jne
call
mov
int3
mov
jecxz
imul
mov
sbb
xor
aam
push
cwtl
adc
cwtl
loop
pop
outsl
stc
sbb
mov
in
or
fs
inc
dec
ss
je
fsubrs
xchg
push
pop
lods
adc
pusha
sarl
lea
adc
sbb
sbb
inc
jle
lret
sbb
jb
in
movsl
xor
cltd
or
in
daa
sub
in
mov
aaa
sub
out
loop
pop
bound
dec
sbb
bound
xchg
faddp
adc
ficomps
add
jge
test
adc
clc
mov
mov
stos
cli
or
mov
and
mov
add
sbb
mov
push
xchg
int3
sub
stc
faddl
ret
leave
mov
xor
int
jnp
test
mov
sbbb
adc
mov
shll
nop
icebp
inc
or
mov
add
mov
xchg
mov
sti
mov
andb
nop
movsl
pusha
add
xor
popa
stos
addb
lcall
jae
test
stos
pop
dec
je
fwait
psubsb
or
rcr
test
mov
dec
ja
inc
sub
mov
std
ret
pop
out
jge
fcomps
outsb
xchg
inc
loop
adc
cmc
xor
es
cmp
xchg
lea
leave
mov
mov
iret
push
cmp
dec
fmuls
xorl
pop
jne
mov
pusha
fiadds
out
push
das
jl
add
repnz
push
cmp
stos
mov
xor
insl
sub
incb
je
repz
cmpsl
out
jnp
rclb
adc
xchg
xor
xor
arpl
test
inc
test
adc
insb
std
push
cmp
mov
push
je
ficomps
ret
shrl
mov
in
jne
mov
pushf
add
lret
mov
xchg
ja
iret
and
jmp
repnz
imul
hlt
adc
shlb
addr16
cld
jecxz
and
cmpsb
in
pop
les
adc
cmp
out
loop
or
xor
push
lea
loope
sbb
mov
leave
repz
insl
shlb
mov
ret
out
mov
imul
imull
fwait
into
jns
jnp
out
pop
mov
mov
ss
mov
test
fnsave
fwait
imul
lods
pushl
cmp
ds
sub
sub
jecxz
dec
out
rorl
xchg
mov
daa
pushf
pop
imulb
icebp
pop
cli
sub
dec
or
inc
pop
outsl
scas
mov
add
and
push
add
orb
and
inc
dec
inc
dec
push
push
dec
cs
dec
dec
add
and
or
inc
insb
xor
cs
dec
dec
add
add
test
dec
inc
dec
add
icebp
adc
push
add
sbb
add
adc
rcrb
test
dec
adc
mov
xor
cs
insb
add
add
add
fs
push
inc
inc
inc
popa
fs
push
push
jb
jbe
inc
push
jne
push
xor
dec
dec
add
add
popa
.byte
add
add
or
add
add
add
cmp
add
sbb
add
sbb
add
jecxz
jmp
sub
jae
in
fwait
inc
dec
popa
or
mov
xor
sbb
or
mov
movsb
mov
push
js
int3
rorl
ds
push
cmp
jmp
mov
outsl
jo
scas
cmp
cmc
mov
nop
mov
jl
outsb
enter
cmp
dec
add
imul
loopne
cmp
les
js
outsl
push
out
pusha
add
aad
xchg
sbb
jmp
aaa
sti
cmp
out
movsb
inc
cmpl
push
jp
push
push
lret
push
out
push
or
out
push
sbb
mov
lods
cld
mov
jp
insb
insl
mov
push
jnp
push
cmp
and
jnp
imul
cmp
fisttpll
bound
cmc
xor
push
mov
mov
ret
bound
cwtl
or
cwtl
test
inc
xchg
mov
jno
outsb
out
jmp
cmp
adc
lds
push
dec
push
movsb
mov
nop
fstps
cwtl
movsb
aas
jge
loopne
push
bound
jbe
fucomp
and
mov
mov
inc
addr16
add
cwtl
lret
xchg
mov
int
jecxz
add
and
stc
jg
pushf
jmp
adc
pop
out
mov
or
lea
mov
or
xchg
xor
xor
not
cmp
push
scas
in
mov
cli
mov
fnstenv
inc
jmp
mov
in
xchg
jle
sub
loopne
pusha
pop
lea
add
pop
push
ret
cmc
push
int3
fisubrs
out
dec
lret
shll
imul
fnstcw
testb
insl
sub
cmpb
jne
into
stos
adc
push
jno
dec
xor
push
sbb
call
lret
inc
cli
adcl
sub
lods
xchg
pop
pop
subb
jns
add
push
pop
sbb
loope
mov
push
dec
loopne
xchg
or
sub
sub
jmp
mov
inc
fmul
dec
hlt
cmc
outsl
jecxz
outsb
sub
sbb
jns
lods
mov
ljmp
sbb
jle
xchg
mov
daa
ljmp
insl
dec
xchg
filds
xchg
adc
popa
call
add
fucomp
aas
mov
jge
cmp
sub
or
cmp
scas
out
mov
adc
mov
and
in
lods
push
outsb
sub
outsb
ret
das
outsl
add
popf
or
dec
int
xchg
out
cld
mov
shrl
mov
ja
xchg
scas
and
push
mov
fucom
mov
psraw
xchg
in
jmp
add
mov
add
mov
fisttpll
shlb
mov
push
divb
xchg
inc
and
fmul
xchg
sbb
mov
outsl
movsb
dec
adc
xor
push
dec
sbb
mov
ds
pop
movsb
bnd
adc
xor
int
test
test
in
jecxz
add
test
test
arpl
mov
add
push
popa
clc
fmuls
in
push
les
insb
cltd
pop
hlt
insl
push
incl
test
jbe
les
ja
out
call
inc
mov
aam
mov
stos
push
ja
push
pusha
mov
mov
setp
lea
clc
add
and
scas
out
lea
xchg
popf
mov
xchg
inc
dec
xlat
cmp
push
adc
lea
cmp
fwait
adc
xor
test
cld
xlat
pusha
aad
test
rol
xchg
push
or
pop
adc
ror
lods
mov
xchg
insl
adc
cmp
xchg
or
outsb
stos
jnp
xchg
test
sub
mov
jae
mov
push
xchg
lock
adc
mov
insl
xchg
push
adc
andl
xor
ja
insb
rolb
sysexit
aad
clc
cmp
mov
ficomps
add
cmp
pop
push
sub
iret
jno
adc
jmp
ret
sbb
push
jno
dec
mov
and
mov
xlat
sub
jnp
test
pusha
shlb
addr16
fsubs
mov
mov
leave
into
test
push
lods
cld
mov
adc
pop
jmp
add
or
jecxz
sbb
bound
pushf
jmp
mov
adc
lahf
sub
mov
je
or
imul
sbb
xlat
jno
push
rcll
and
xor
jmp
sub
test
xor
fcoml
shl
sub
add
rorl
push
popa
xor
orb
jmp
push
and
or
hlt
cmp
sub
push
into
push
xor
in
jmp
adc
and
jecxz
jno
test
sbb
mov
adc
mov
push
out
outsl
insb
bound
nop
push
aam
xchg
mov
in
cmp
arpl
cmp
in
xchg
pandn
insl
popf
outsb
xchg
cltd
hlt
sub
xchg
pushf
popf
jecxz
xor
xor
iret
jl
call
in
sarl
outsl
movsb
mov
or
out
and
lods
in
testb
adc
pop
push
add
and
or
mov
aaa
jecxz
and
nop
stos
jo
imul
popf
pusha
push
push
xchg
outsl
adc
mov
push
fs
aam
xchg
fisubrl
sub
cli
rolb
push
jnp
cmpsb
xchg
xchg
clc
inc
add
jecxz
ljmp
adc
cmp
mov
dec
adc
mov
or
jbe
cmp
jo
push
mov
sti
xor
bswap
mov
jae
aad
or
nop
jecxz
sub
shll
sahf
loope
in
sti
loop
into
xor
sbb
mov
push
sarl
xchg
jge
sub
xlat
in
pushf
dec
mov
mov
ficoms
aaa
insl
cli
push
test
adc
push
fldl
loop
icebp
dec
pop
ljmp
insl
mov
push
add
pop
pop
sbb
cwtl
cwtl
add
mov
fs
lock
push
pop
xor
add
lahf
mov
push
popf
pop
fnstenv
push
xchg
jmp
sub
popf
jno
jge
shl
pop
push
cltd
test
jo
cwtl
xor
adc
aam
mov
shrl
loopne
outsl
xchg
adc
dec
pop
inc
xchg
jmp
add
mov
lods
xor
and
pop
out
pop
mov
jle
lret
ja
push
or
hlt
jnp
push
xchg
popf
push
aad
xchg
cmp
mov
dec
iret
push
ficomps
std
popf
inc
xchg
insb
push
es
push
mov
xor
adc
fistl
sbb
sbb
xchg
arpl
pop
cmpsl
dec
pop
sti
xchg
xchg
scas
fwait
lea
incl
shrl
sbb
movsl
cwtl
in
sbb
sub
mov
pop
sahf
adc
outsb
insb
lods
inc
fwait
inc
es
jbe
xchg
popw
push
or
push
push
xchg
daa
stos
rcrl
or
jmp
lock
push
sbb
xchg
push
fbstp
mov
add
or
cmc
shr
popa
adc
push
pop
shll
mov
mov
popa
dec
lds
cltd
inc
adcb
out
jns
fwait
xchg
fistpl
insl
sub
fdivp
shl
fwait
and
mov
or
inc
arpl
imul
jae
sbb
mov
daa
rcll
sbb
jnp
fmull
xor
jbe
and
adc
iret
ficoml
sbb
xchg
rcrb
mov
negb
andl
cmp
lods
push
and
pop
xchg
daa
out
loope,pn
and
xchg
xor
or
push
lret
pop
ljmp
call
bound
idivl
fwait
insb
pusha
fmull
cwtl
in
dec
sbb
lret
adc
mov
sbb
iret
lods
rcll
pop
rcrb
fidivrs
arpl
out
dec
popf
sub
popa
cwtl
daa
aaa
iret
imul
jo
in
cmp
imul
mov
and
inc
push
pop
das
addr16
jge
and
data16
mov
xchg
repz
jne
fwait
fwait
add
push
sub
jecxz
mov
push
mov
mov
or
adc
aad
add
inc
cmp
adc
addr16
popa
arpl
sbb
or
cmp
cld
xor
add
jnp
pop
mov
pushf
gs
sbb
mov
ljmp
sub
sub
lods
dec
bound
and
movsb
pop
imul
lods
pop
call
push
xchg
mov
mov
sti
movmskps
out
add
pop
or
imul
xor
dec
test
cltd
jle
adcb
cmp
nop
or
mov
cmpsl
sub
add
mov
or
adc
or
dec
xchg
mov
mov
sbb
mov
mov
leave
cwtl
scas
mov
push
outsb
in
ljmp
and
popa
nop
idiv
outsb
insb
icebp
hlt
rcrl
mov
dec
jg
cmp
push
xor
jo
movsl
push
and
and
adc
xchg
je
repnz
nop
add
inc
lea
cwtl
sub
add
add
fstpt
cmp
adc
hlt
mov
mov
xchg
test
add
xor
js
or
aad
xor
inc
in
gs
push
mov
lock
push
or
ja
pop
jmp
cmp
push
lahf
lds
shll
call
mov
jne
xchg
jo
movsl
mov
insb
cmc
jge
mov
push
add
std
int3
xchg
and
ds
imul
and
ret
mov
push
ljmp
js
rol
ret
adc
push
push
cwtl
pop
in
fdivrl
mov
xorb
add
inc
lds
imul
add
jo
iret
push
repz
adc
jns
hlt
jge
lock
add
xchg
add
push
loope
jg
adc
ss
call
lret
inc
icebp
in
lods
sub
push
pop
scas
sarb
lods
insl
push
stos
xor
fisubl
mov
adc
pop
and
call
and
xchg
leave
xchg
mov
icebp
divb
push
xchg
push
push
adc
popf
and
add
enter
sub
idivb
mov
and
insb
mov
repz
mov
xchg
jge
mov
stos
xor
pop
test
in
jnp
jmp
int
or
ror
scas
loope
out
jne
imul
sub
loopne
addb
jl
xorb
cwtl
cltd
in
sbb
lea
jl
jp
xchg
aas
or
add
cmpsl
movsl
or
dec
inc
push
mov
repnz
dec
mov
ss
jge
xor
inc
inc
stos
lds
cwtl
rcrl
les
add
xchg
pop
mov
add
or
insb
mov
test
mov
and
retw
xchg
lret
cmp
xchg
ljmp
xchg
push
les
push
jo
push
arpl
icebp
xchg
mov
mov
or
lock
push
lods
decl
jno
mov
or
sub
flds
ret
lea
push
jecxz
jge
divl
sbb
call
test
aam
sub
mov
ljmp
stc
inc
cmp
mov
xor
push
inc
stos
aaa
ds
imul
imul
push
std
arpl
jo
xchg
mov
dec
push
sbb
repnz
addr16
je
mov
cld
lcall
inc
or
or
push
fsubl
dec
loope
lcall
sti
pushf
int
jnp
and
jns
sbb
sub
xchg
mov
sti
in
xchg
subl
stc
add
leave
test
shl
mov
in
mull
outsl
fdivrl
dec
out
jo
scas
sub
clc
inc
xchg
cmp
bound
sbb
xchg
call
push
fwait
loopne
imul
adc
cmp
push
jae
lock
xchg
adc
push
xor
daa
js
orl
cmp
in
cltd
sarl
enter
addl
sub
xchg
sub
mov
inc
stos
enter
into
shl
js
add
inc
pop
repnz
xor
mov
leave
jge
lock
out
lock
cmpsl
notl
cld
xor
addr16
cmp
addr16
repz
nop
imul
pusha
inc
aas
adc
stos
mov
in
mov
push
pop
jno
cmp
dec
pop
cli
aad
xchg
sbb
loop
cmp
test
jnp
mov
xchg
push
inc
cmp
adc
and
cmp
jmp
sbbb
js
sbb
or
mov
test
push
ret
cmp
mov
cli
adc
js
push
aaa
xchg
cmp
addr16
add
jge
sub
fwait
mov
mov
jge
scas
push
add
adc
push
int3
mov
pop
jge
dec
notb
mov
testb
and
jbe
loop
nop
mov
ds
inc
push
ss
outsl
fisubs
fs
aas
movsl
orl
pushf
mov
push
jno
xor
inc
pop
pop
ror
jmp
jl
add
xor
call
pop
add
out
cwtl
mov
add
jl,pn
sub
jmp
arpl
cld
shlb
stos
sahf
js
jne
xchg
and
cmc
and
movsl
dec
adc
iret
insl
aaa
mov
lock
cmc
sub
mov
xchg
cmp
cmc
dec
pop
sub
pop
jecxz
lcall
push
cwtl
jb
push
mov
out
test
sbb
shlb
add
hlt
inc
jl
shrb
lret
xor
lds
sbb
cmpsl
shll
gs
loopne
or
stc
addb
test
xchg
push
adc
in
rorb
popa
sbb
cltd
call
sahf
mov
sub
jecxz
mov
cmp
xchg
movsl
sbb
xor
test
out
and
mov
out
icebp
and
xchg
fwait
xor
sahf
das
pop
fs
test
add
mov
mov
leave
movsb
mov
ds
jne
inc
gs
add
test
cmpsb
pop
leave
ret
lods
jnp
mov
xchg
lcall
ja
sub
xor
jmp
inc
cmp
aas
dec
insl
popf
adc
jl
iret
cmp
mov
jmp
int
sub
out
neg
xchg
cwtl
mov
ja
adc
dec
in
pop
mov
sub
fisubrs
into
or
imul
and
adc
das
movsl
jmp
mov
jo
and
and
push
push
fwait
jmp
jo
cmp
loop
enter
dec
pop
cmpsl
mov
mov
jecxz
inc
jecxz
arpl
or
and
jge
jae
lret
adc
imul
adc
fwait
aad
cmc
lret
fsubs
jns
cmc
shrl
sub
call
pop
mov
aad
out
faddp
mov
adc
sti
push
mov
add
fcmovne
push
insb
jmp
fnstenv
das
lds
dec
outsb
and
push
pop
dec
and
push
xor
mov
mov
push
and
out
jg
or
pop
ja
pop
mov
mov
add
nop
outsl
gs
in
out
push
xchg
bound
imul
iret
mov
push
xor
icebp
inc
fstl
and
test
dec
jb
sahf
xor
sbb
lret
ss
or
lds
out
pop
repnz
or
mov
adc
cmp
sbb
mov
inc
rcrl
jmp
dec
xchg
cmpsb
popf
add
gs
hlt
pop
in
xor
aaa
mov
es
pop
jmp
cmp
cmp
stc
enter
mov
jnp
mov
pusha
pop
jge
mov
hlt
aas
out
mov
cmpb
int3
inc
pop
or
in
mov
in
scas
ljmp
lret
bound
xchg
mov
lods
cwtl
push
pop
dec
xlat
rorl
icebp
inc
dec
scas
or
xchg
rclb
fld
ret
sbb
xchg
inc
jg
xor
inc
roll
in
insb
adc
mov
jmp
fildll
cmp
fcomps
or
jns
cmc
jb
js
pop
push
adc
jbe
mov
and
dec
fwait
mov
int3
out
mov
inc
push
xor
out
dec
xchg
xor
lret
sub
lret
push
stc
and
je
test
lahf
daa
in
pop
cwtl
push
pop
outsl
rolb
in
hlt
jp
mov
filds
test
shlb
jb
shr
popf
dec
cmp
cmp
xchg
ljmp
mov
jl
xchg
rcll
adc
icebp
out
adc
outsb
sarl
fnstenv
pushaw
lods
mov
ja
ficoml
push
hlt
mov
pop
sahf
pushf
mov
dec
push
in
jb
mov
aas
dec
sbb
or
cmp
and
add
adc
push
lret
pusha
dec
and
std
in
xchg
iret
popa
xor
or
jne
mov
xor
outsl
jb
call
mov
xchg
xor
lock
dec
jle
xchg
mov
cmp
xor
sub
jmp
sbb
and
add
loop
pop
popa
cmc
inc
push
and
xchg
mull
outsb
lds
sbb
icebp
push
cwtl
xorl
out
decl
inc
scas
out
xor
arpl
ljmp
ljmp
dec
cmp
add
arpl
xor
movsl
push
sub
mov
sbbb
outsl
dec
pop
mov
and
and
mov
subb
loope
sti
data16
aad
fcoml
dec
mov
xchg
into
mov
daa
lea
in
jl
in
je
add
inc
xchg
movsb
xlat
ror
enter
jg
and
sti
add
mov
cmp
push
sub
push
fisubrs
pop
loope
jmp
pop
push
or
cmp
push
lods
and
cmp
cmpl
jmp
lcall
xorl
mov
dec
xchg
jge
inc
xchg
dec
icebp
loope
test
pop
enter
popf
lods
add
sbb
jb
or
sbb
pop
xchg
pop
add
push
dec
and
mov
lret
int3
sub
ja
int
add
hlt
icebp
push
cmp
les
bound
shrb
pop
sbb
fcmove
gs
lea
enter
sete
in
lret
rcrb
sarb
fdivrp
test
jle
xchg
repnz
pop
addr16
mov
push
mov
shrb
cmp
aas
cmpb
xor
mov
pop
clc
rorb
loop
bnd
pushf
push
enter
int3
adc
dec
fwait
cmc
roll
into
jp
std
jbe
in
xchg
mov
mov
testl
and
in
xor
add
arpl
sub
pop
nop
into
xchg
jge
cwtl
jnp
arpl
in
icebp
and
jo
sahf
ret
pop
setl
movsl
pop
xor
int3
xchg
insl
jbe
inc
lret
add
or
sub
aaa
mov
sbbb
sbb
mov
lahf
or
xchg
push
and
or
daa
ret
testl
mov
mov
loope
xor
lcall
rep
int
push
in
testb
push
ljmp
rcrb
cmc
push
cld
mov
mov
mov
lret
xchg
imul
pop
pop
push
outsb
sbb
arpl
into
pop
dec
or
dec
pop
xchg
sub
jne
mov
jle
in
das
insb
insl
xchg
and
imul
add
xchg
dec
jbe,pn
lret
fidivs
push
xchg
xor
cmp
add
stos
aas
fildl
ja
jl
jae
sti
xchg
cmovb
mov
rclb
js
or
pop
lods
addb
lock
pop
adc
int
movsb
or
iret
cmp
dec
fdivr
fsts
xchg
into
sahf
jno
insb
iret
xlat
xor
pop
xchg
jnp
adc
dec
sbb
xchg
lods
pop
aas
leave
icebp
movsb
push
scas
arpl
ja
and
jbe
push
mov
stos
inc
xchg
cmp
and
jbe
ljmp
mov
jno
push
pop
xor
sbb
bound
iret
pop
cmp
mov
cld
test
notb
xchg
jnp
push
stos
xchg
cltd
arpl
ret
lcall
and
imulb
call
in
adc
push
aam
adc
clc
fcmovne
jl
in
sub
lds
push
adc
pop
in
subl
test
rcl
ds
cmp
bound
ss
jb
mov
jg
aas
lret
aas
sbb
push
cmp
or
out
jbe
outsb
movl
or
inc
repnz
imul
inc
imul
mov
sbb
sarl
xchg
test
add
xchg
call
ds
and
out
cmp
hlt
sbb
out
cmpsl
push
and
push
sub
cmp
jbe
fs
ficoms
push
out
push
fwait
mov
push
sub
or
loopne
mov
mov
xchg
enter
fucomi
fidivrs
cmp
fldcw
sub
pop
or
sub
lods
out
sbb
cmpl
pop
jge
or
cmp
aad
jb
add
sbb
rcll
clc
popa
cld
fldt
int3
insl
addl
loop
lods
xor
mov
inc
repnz
les
lods
or
popa
push
rcll
jmp
pop
lret
imul
inc
aaa
xor
decl
xchg
in
addr16
jg
or
loop
aam
lahf
xlat
decb
fsubrs
repz
xor
inc
mov
pop
subb
pop
rorl
add
daa
rol
pop
out
mov
rorb
pop
and
push
jle
stos
pop
fiadds
push
imul
rclb
pop
push
dec
add
jns
in
push
icebp
std
pop
jne
les
jge
mov
icebp
xor
cmp
adc
bound
cmp
lret
mov
sbb
mov
add
xchg
jl
cs
xchg
mov
xlat
jecxz
fs
movsl
pop
sti
js
cld
jle
cmc
fwait
or
notl
add
ss
cmp
xchg
and
fxch
cltd
xchg
scas
in
jle
leave
and
cltd
mov
jecxz
fs
xchg
mov
xor
lret
pop
in
or
sub
and
stc
cld
clc
cmp
sub
cwtl
cmp
repz
or
and
in
or
andl
rorl
and
lret
fnstcw
fs
push
add
test
ss
std
xorb
sub
or
push
nop
pop
mov
jp
rclb
and
sub
mov
test
outsl
or
pop
lods
rcll
lock
pop
sbb
jo
repz
adc
mov
idivb
je
ja
lcall
mov
pop
int3
test
stos
jnp
test
jecxz
xor
fwait
js
testb
mov
inc
fimull
ljmp
add
mov
push
pop
outsl
adc
add
scas
inc
dec
push
loope
loop
out
push
push
stos
shrl
jmp
dec
mov
std
or
mov
sbb
and
leave
test
repz
adc
jnp
dec
pop
arpl
popa
sbb
cs
fistl
scas
jg
xorl
push
outsl
inc
pop
addr16
lcall
call
sbbb
jae
insl
sbb
xchg
out
outsl
dec
ja
js
cld
mov
push
cwtl
popa
in
in
outsl
aas
out
test
sbb
popa
js
cmp
sbb
adc
pop
scas
lcall
out
xor
add
mov
adcl
imul
jp
outsl
pop
fwait
mov
pop
jne
push
dec
bound
push
inc
mov
push
das
mov
cmp
push
push
and
pop
jne
xor
cmp
mov
mov
and
xchg
cmpsl
packuswb
clc
leave
fistl
push
add
lcall
pushf
jns
daa
push
mov
fcomi
dec
clc
dec
frstor
mov
out
popa
sahf
dec
pop
ja
dec
fcmovb
pop
movsl
subl
cltd
movsl
je
outsb
icebp
outsb
jecxz
push
inc
jmp
jno
test
sti
sbb
xchg
je
rclb
mov
stos
xchg
stos
scas
pop
inc
repz
sub
in
push
popa
loop
sub
fcmovnu
ror
pop
out
push
cmpsl
mov
addr16
sbb
notl
pop
stos
inc
cs
mov
loop
xchg
inc
xchg
sub
jo
sub
sbb
nop
pop
mul
pushf
aas
xor
fsubp
jne
popa
cmc
and
iret
les
dec
insb
sbb
push
mov
aaa
scas
arpl
sub
outsb
leave
ljmp
xchg
cmpsl
dec
jb
cmc
add
ret
push
mov
lret
push
ja
fistl
stos
js
lds
push
lret
dec
jo
movsl
jl
or
jne
mov
rolb
xor
test
mov
test
sarl
jle
xor
jmp
pop
lahf
adc
cmp
cmpsl
lret
movsl
inc
add
inc
pop
divl
in
and
jne
loope
xchg
or
fs
dec
adc
lret
gs
outsb
adc
xchg
or
push
incb
into
sbb
pusha
ficompl
lcall
in
mov
and
sub
lods
dec
andl
shll
cmpb
dec
xchg
lcall
movsl
adc
mov
movsl
sub
xor
popf
mov
js
loop
ret
xchg
test
popa
leave
addr16
shll
sbb
cmpsl
mov
and
add
pop
dec
nop
fucomi
jmp
cmp
push
in
jmp
mull
cmc
push
in
xor
pop
dec
sbb
dec
in
aam
cmp
mull
adc
jo
and
inc
sbb
xchg
dec
push
in
inc
cmp
je
loop
repz
dec
sahf
push
int3
into
sbb
das
sub
repz
lods
stos
xchg
pop
inc
nop
es
mov
loop
je
sti
adc
sti
enter
lcall
xor
lcall
sbb
sub
clc
lds
jns
pop
lahf
jg
shl
xchg
mov
push
mov
dec
mov
movntq
out
std
and
mov
repz
or
notb
popa
xchg
test
jnp
lahf
sahf
outsl
sti
in
jle
xchg
adc
push
sbb
sbbb
stc
xchg
dec
stos
lcall
outsl
mov
aaa
fnsave
and
dec
lods
inc
bound
and
es
pop
xchg
addr16
and
sub
test
insb
test
fidivrs
lock
push
push
fistl
cli
add
dec
xchg
jne
cmp
mov
dec
jo
hlt
ficoml
adc
add
imul
mov
push
mov
rcrl
insb
mov
jge
add
pop
pop
pop
shlb
pextrw
out
jnp
pushf
cld
hlt
jge
mov
xor
xchg
adc
enter
push
or
mov
mov
jne
enter
stc
in
movsl
andb
mov
sti
pop
pop
sbb
mov
xchg
push
xchg
and
sbb
clc
push
sub
out
sbb
mov
pop
leave
inc
mov
testb
xchg
inc
in
dec
lret
movsl
ficompl
xchg
movsl
fcmovb
lret
dec
es
in
in
cmpsl
daa
out
inc
scas
lret
and
jb
ja
mov
in
adc
sub
cmp
xor
je
sbb
sbb
adc
sbb
filds
or
xor
mov
and
bound
rorb
cmp
cmp
insb
incb
jbe
mov
mov
inc
ss
fisubrl
mov
mov
xor
xchg
fists
mov
mov
in
lods
ja
fidivrs
fmul
and
xor
jae
sti
jo
out
into
ret
rcl
jae
outsb
mov
pop
xchg
mov
jbe
lods
rcrb
push
jp
pop
xor
pop
xorb
add
dec
push
dec
arpl
sbb
pop
pop
lods
daa
es
lods
and
mov
fstl
mov
or
stc
xor
popa
and
repnz
lret
nop
cmpsl
xchg
in
imul
jbe
cwtl
cmpsb
pop
ja
sbb
cmpsl
leave
inc
xor
or
sub
adc
and
sub
cs
aam
sbb
fs
lods
jnp
outsb
cwtl
clc
es
jo
scas
xlat
rol
xlat
jno
sbb
adc
fldt
mov
and
mov
out
sti
imul
fs
popa
sub
fsubs
pop
sahf
fsubl
adc
test
mov
push
cltd
outsl
mov
and
pop
adc
negb
add
movaps
cmpsl
adc
sub
es
js
lock
mov
mov
sbb
pop
cs
cwtl
lods
xchg
sub
and
add
loope
lods
outsl
divb
andb
mov
mov
add
fwait
pop
xor
lds
mov
jbe
je
lahf
fstpl
jnp
jmp
test
idivl
mov
fs
roll
out
add
inc
and
and
in
lahf
repnz
dec
subl
in
push
sub
mov
movsl
in
mov
cmp
loop
adc
sbb
insl
or
fildl
andb
lea
nop
dec
sbb
dec
inc
cmpsb
inc
mov
jb
mov
inc
pop
add
icebp
push
sub
in
and
mov
pusha
lahf
cmp
xor
add
xchg
pop
adc
scas
jo
subl
aam
xchg
cmp
movsl
jbe
push
fdivr
mov
lock
pushf
cmp
mov
loop
stos
arpl
movsb
pop
push
insl
mov
dec
xchg
scas
mov
inc
imul
into
mov
pop
js
push
popa
xor
and
xchg
jl
outsb
out
imul
or
loop
aam
mov
xor
mov
and
not
push
les
in
cltd
pop
hlt
scas
xchg
jne
add
fucomp
nop
out
out
ja
xchg
push
or
sbb
mov
bound
mov
or
push
jbe
xchg
xor
out
iret
hlt
sbb
call
call
ss
lcall
in
fwait
xor
testl
jp
cltd
push
dec
popf
sbb
jg
adc
inc
mov
cmp
sti
cmp
and
mov
or
xchg
mov
fs
push
sub
shr
jmp
loopew
push
jg
or
loop
jno
cs
adc
test
jne
iret
xchg
arpl
fisubs
mov
int3
push
repnz
sub
in
jo
das
push
lock
call
ss
adc
ret
cmp
jnp
call
sub
or
stos
pop
outsl
push
pop
insl
lock
xchg
jl
pop
das
daa
scas
ds
test
cmc
mov
test
adc
inc
dec
sti
sbb
adc
add
lods
movsl
pop
fwait
cmp
lret
imul
jle
imul
popl
mov
int
and
leave
shr
xchg
rcl
lods
push
ret
aam
lock
add
mov
stos
inc
icebp
xchg
sub
xor
lds
cmp
jmp
jp
ljmp
push
gs
cmp
out
ja
mov
add
stos
sbb
cltd
push
sbb
pop
mov
inc
movsl
jle
notl
and
popf
outsb
jmp
jl
mov
stc
xchg
in
mov
insl
jno
hlt
je
inc
js
cmp
aad
adc
jmp
popf
pop
in
fsubrs
jp
loope
pop
outsb
jg
jo
or
scas
jnp
imul
es
jge
inc
mov
push
adc
xor
xor
cmpl
mov
pop
lods
fisubs
out
mov
out
bound
out
xchg
cwtl
cmp
mov
out
xchg
in
es
fmuls
loopne
push
add
cli
sbb
cmpsl
fwait
adc
mov
mov
sbb
test
stos
lock
or
dec
data16
mov
add
xchg
nop
pop
fistpll
ljmp
add
jle
inc
loope
or
pop
int3
in
dec
lret
jbe
mov
imul
push
dec
lret
int3
and
cwtl
xchg
pop
mov
adc
adc
mov
out
or
hlt
cld
shrl
mov
jb
jae
out
pushf
sti
stos
lock
clc
idivl
je
out
push
cmp
movsl
adc
and
jbe
xchg
in
sbb
test
hlt
mov
push
imul
in
or
add
popa
cmp
dec
sub
dec
imul
jne
sbb
pop
imul
lret
call
stc
jmp
stos
cmp
pop
xchg
push
fwait
and
insb
sbb
xchg
sahf
jo
cld
pop
add
mov
add
aad
arpl
loopne
mov
inc
mov
stos
dec
push
xchg
sub
xchg
jno
jge
push
faddp
jne
popa
ds
sbb
jno
stos
lret
add
iret
jg
insl
in
frstor
sti
loopne
ja
push
in
fucom
out
jmp
xchg
in
cmc
shll
push
and
pop
inc
jl
jno
or
sbb
call
pusha
cld
sub
int3
outsb
sbb
dec
xchg
push
ficoml
mov
pop
in
cld
pop
mov
push
dec
nop
idivb
push
aaa
xchg
subb
enter
bound
fadds
jmp
call
xor
outsb
xor
insb
iret
xor
and
sub
rcrl
fnsave
jge
testb
rcrb
mov
movsb
sbb
out
inc
pusha
call
incl
sub
dec
insb
fsubrs
arpl
test
jecxz
test
pop
cmp
inc
mov
stos
out
lret
lret
cli
mov
adc
mov
je
insb
fcom
in
rolb
movsl
fdivp
pop
pop
jp
adc
insl
mov
das
jae
movsb
sub
popa
int3
arpl
repz
sub
mov
int
mov
adc
xchg
out
xor
adc
iret
ds
mov
testl
bound
jmp
pop
jp
jo
xchg
mov
sahf
xchg
fcom
das
ret
fstps
sub
in
out
dec
push
sarb
jge
mov
inc
xor
sbb
popa
popa
sub
outsb
leave
adc
roll
cmp
dec
cmp
stc
pop
jge
outsb
jl
fs
rep
inc
das
xchg
push
push
pop
pop
fsts
and
pop
xlat
aas
pop
xor
adc
mov
add
fnstcw
xor
pop
or
sub
pusha
mov
mov
cmpl
aaa
mov
repnz
icebp
mov
loope
xchg
xchg
pop
pop
mov
mov
jg
ss
jecxz
pop
sbb
repnz
fcompl
iret
in
xchg
or
insb
int3
scas
dec
leave
lds
sbb
push
std
arpl
jmp
or
movsb
jne
jne
pop
sbb
ds
or
xchg
or
adc
mov
sbb
jb
adc
push
cmp
mov
xchg
jo
cmpsb
out
movsb
cmp
adc
pop
xor
adc
dec
leave
jb
orb
xor
stos
cmp
push
cmp
cmpsb
nop
lret
sahf
cmp
cmp
mov
pusha
mov
adc
mov
imul
popa
mov
push
add
cmp
mov
mov
fidivrs
add
into
mov
rcl
rorb
adc
fnstsw
pop
and
cltd
shll
adc
push
xor
fbstp
loop
ror
loope
xchg
outsl
pop
test
nop
pop
jo
pop
cmp
sbb
stos
push
mov
add
pop
and
enter
lods
out
loop
loop
mov
call
lret
jle
into
hlt
jle
out
mov
sbb
or
lods
or
repnz
test
jne
sbb
lahf
jae
fisubrl
clc
stos
push
mov
lret
aad
and
out
aas
andb
add
or
or
xor
test
jl
insl
push
adc
in
fstps
popaw
pop
cmc
call
call
mov
fnstsw
add
loope
inc
in
popa
mov
pop
mov
loope
inc
nop
sahf
jecxz
adc
sbbl
jbe
jbe
dec
out
mov
sbb
pop
sbb
dec
adc
and
std
divb
in
cmp
fldcw
inc
popa
ljmp
ja
mov
ret
sub
cmp
xchg
sub
insb
push
xlat
push
in
outsl
int3
dec
popf
enter
and
je
sub
pop
pop
gs
dec
adc
mov
into
inc
arpl
push
mov
ficomps
scas
jle
or
inc
mov
mov
loopne
cmp
push
mov
dec
fsub
jmp
int3
xor
pusha
add
inc
lret
sub
push
rolb
push
or
dec
movsl
insb
insl
add
cmc
mov
dec
add
ret
mov
sub
sub
jno
jge
js
and
mov
dec
cmp
lods
dec
dec
outsl
jns
dec
data16
data16
dec
adc
sub
push
into
push
daa
sbb
push
cmp
mov
js
rcll
mov
push
shll
cmp
das
mov
pop
sarl
sbb
je
test
pop
sub
out
mov
add
xor
xor
cltd
dec
out
movsb
addr16
in
andl
xchg
cmpsl
iret
setg
outsb
jnp
jmp
notb
in
cltd
lds
mov
stos
addr16
leave
std
loopne
or
into
repz
daa
pop
lret
je
adc
add
arpl
out
mov
in
cs
in
xor
popf
jg
xor
or
xor
pop
jnp
out
sbb
xchg
mov
sbb
int
hlt
push
mov
bound
xor
jne
and
movsb
mov
pusha
shrb
into
sub
adc
sbb
lods
mov
stos
lock
push
mov
adc
or
sbb
push
xchg
push
or
dec
scas
pop
cmp
insb
dec
es
jg
out
lods
pop
pop
lret
daa
stos
lock
push
shll
cmc
aam
loop
push
sub
mov
jl
mov
dec
xor
sub
push
dec
outsl
add
xor
mov
sbb
test
push
fistps
or
shlb
in
stos
cltd
xchg
fwait
loopne
les
jg
xchg
and
out
add
movsl
jecxz
mov
divb
nop
daa
inc
ljmp
push
push
sti
pop
mov
jl
sbb
pop
aad
sub
mov
jge
aaa
shll
lock
stos
sub
jl
mov
push
pop
lahf
cltd
out
popf
cmp
pushf
xchg
and
mov
imul
xchg
xchg
call
ds
aas
sti
pusha
repnz
cmc
xchg
jno
push
out
loop
out
sbb
and
push
adc
adc
dec
mov
das
push
popa
popa
idivb
lods
mov
pop
in
or
xchg
sub
mov
and
ljmp
inc
mov
add
mov
hlt
xchg
leave
mov
int
nop
jns
iret
out
in
pushf
sbb
pop
popf
loopne
shlw
daa
data16
fcoms
rcrb
cmp
push
sub
ss
sti
mov
dec
mov
sbb
ss
jge
pop
out
jmp
xchg
cwtl
hlt
ret
ds
xor
jmp
lcall
fcomi
pop
sbb
mov
enter
mov
lods
sbb
mov
inc
lods
cmp
push
ss
pop
addr16
cs
aaa
aaa
fidivs
pop
sbb
xchg
push
or
mov
dec
std
fbstp
cmp
scas
push
call
jbe
xchg
aaa
jnp
loopne
dec
inc
loope
mov
mov
imul
jne
cld
jle
ljmp
aaa
lods
and
xor
push
sub
into
bnd
ss
popa
or
or
in
dec
lods
cmp
jmp
insl
mov
into
popf
jne
mov
xor
je
movb
sahf
jl
lret
push
sti
mov
mov
fwait
sbb
jae
add
scas
mov
mov
and
and
out
xor
pop
pop
cmc
xchg
mov
jo
push
cltd
jle
cmp
mov
pop
push
pop
addr16
in
stos
xor
out
jae
mov
adc
add
je
mov
adc
mov
imul
imul
pushf
ja
pop
xor
lret
insl
cmpsl
dec
lock
and
mov
cmp
lock
bnd
mov
aam
xlat
jo
inc
inc
mov
jno
pop
cmpsb
aaa
test
loopne
push
ja
pop
out
lret
iret
inc
cwtl
push
adc
cs
iret
mov
push
lods
addb
in
pop
sbb
or
xlat
int3
mov
dec
or
clc
popa
sub
mov
fstpt
repnz
popa
sbb
jbe
xor
pop
imul
sbb
sbb
imul
push
fucomp
pop
jnp
repz
add
or
sahf
mov
inc
jmp
sahf
js
sub
mov
imul
lock
in
cmp
cmp
icebp
stos
dec
jg
mov
pop
out
iret
mov
in
outsb
stos
or
inc
shl
mov
imul
adc
push
movsl
in
xchg
test
cmp
fnsave
pop
or
jo
xchg
adc
fwait
outsb
cmp
subb
jae
mov
and
mov
ja
ret
inc
outsb
dec
and
adc
popf
inc
jl
outsb
cmpsb
mov
lods
jmp
sbb
ljmp
cli
es
mov
lea
out
and
push
sbb
repz
pop
pushf
push
fwait
push
outsb
stos
cli
std
in
je
fidivrs
pop
dec
mov
inc
pop
fcoml
and
rcl
push
mov
adc
pusha
out
test
je
sbbl
xor
std
shlb
aas
lods
dec
sub
lret
xlat
jbe
sti
xchg
cmp
pop
andb
add
push
lods
pop
pusha
mov
xchg
and
dec
std
rep
out
hlt
cs
test
pop
pop
dec
cmp
pop
sbb
mov
ja
cmp
pop
jne
cmp
fwait
mov
jg
pop
or
movsb
sub
sub
clc
jmp
dec
dec
sub
in
sbbl
rorl
repz
loopne
ljmp
lea
repz
cmpsl
mov
push
out
adc
jp
sub
out
cmp
push
fidivrl
arpl
out
stc
inc
jp
and
mov
cmp
add
icebp
lods
xor
out
dec
mov
dec
jecxz
dec
inc
in
push
xlat
and
cmp
cmp
clc
mov
adc
xor
aaa
lret
push
mov
fwait
mov
negb
popf
and
jns
fwait
inc
jo
mov
icebp
and
loop
mov
mov
mov
cld
call
ret
jne
and
popa
aaa
mov
xchg
mov
xor
stc
scas
ljmp
loopne
cs
loop
ljmp
adc
cwtl
mov
adc
push
in
addr16
jecxz
add
outsb
rolb
jge
cmpsb
sbb
mov
inc
adc
dec
pushf
jnp
pop
jbe
jecxz
xor
jo
cmpsb
cmp
fwait
mov
test
xor
and
mov
mov
sbb
jge
es
xor
pop
stos
cmp
lahf
pop
mov
cmp
xchg
cmpsb
lods
mov
cs
movsb
jle
fildl
mov
mov
sti
mov
mov
adcb
aam
mov
out
mov
jbe
pop
sbb
flds
nop
popa
inc
jecxz
lock
cmpsl
movsl
in
adc
adc
mov
dec
shlb
mov
pop
sub
push
jb
and
xchg
negb
mov
shl
xchg
aam
or
xor
add
cltd
mov
sub
and
mov
sbb
test
aas
cs
jle
push
loope
xchg
xor
stos
and
orb
cmpsl
jp
fisubs
jmp
push
push
fimull
push
sub
xchg
mov
nop/reserved
ss
cmp
or
jae
aas
sbb
sbb
adc
ja
inc
mov
insb
pop
js
mov
in
pop
mov
push
out
lahf
add
mov
mov
sbb
sub
aaa
push
push
int
push
mov
push
xchg
or
insl
or
arpl
fs
js
cli
fucom
dec
jne
jb
jne
sbb
sbb
arpl
adc
xchg
in
or
mov
xchg
movsl
cld
in
and
sbb
push
stos
idivl
insl
fnstenv
mov
repz
sbb
inc
ja
xchg
pop
pop
mov
pop
jno
mov
outsb
sub
inc
fiadds
cmp
cmp
sbb
stos
push
push
inc
inc
push
inc
sub
gs
repnz
clc
ret
mov
push
bound
cmp
add
cld
dec
xor
sbbl
sbb
sbb
idiv
mov
mov
loope
mov
subb
cmp
or
or
xchg
push
sub
xchg
icebp
push
cmp
scas
scas
add
mov
jo
dec
test
push
aaa
mov
aad
popa
push
mov
sbb
dec
addl
in
xor
rorb
sub
add
or
xchg
sbb
or
cltd
jnp
ficoms
imul
mov
pop
es
mov
mov
stc
pop
cmp
push
hlt
stos
mov
dec
sub
lock
inc
pop
push
outsl
jle
dec
xor
in
and
xor
and
jecxz
shlb
jae
ds
loopne
dec
js
int
pop
movsb
mov
lds
pop
sub
out
jl
push
aaa
xchg
or
subl
fucom
jb
adc
dec
jnp
pop
mov
hlt
add
dec
ficompl
sarl
adc
and
adcb
stc
int
pop
in
pusha
mov
lods
rorl
lea
cmpsb
push
cmc
loopne
xor
in
pop
pusha
add
arpl
mov
mov
dec
sbb
enter
push
je
jmp
je
int3
les
mov
and
int3
xchg
cmp
push
pop
pop
icebp
push
fisubl
movsl
mov
mov
dec
xchg
push
sahf
pop
mov
add
leave
xchg
dec
sti
cmp
and
pop
cmpsl
cmpsl
lret
in
into
mov
push
mov
dec
daa
es
push
fisttps
push
xchg
cwtl
out
jo
andb
dec
rep
push
mov
repnz
jp
in
repz
ds
xor
rorb
jl
xor
sub
adc
sub
xor
jae
cmp
mov
das
movsl
push
out
pop
pop
pushf
mov
mov
stos
insb
in
jge
jmp
cli
nop
repnz
pop
xor
ljmp
jbe
add
mov
or
stos
adc
stc
adc
data16
ja
push
jno
not
in
adc
test
shlb
out
cmp
jle
outsb
aas
insl
fisubrs
xchg
push
lret
scas
sbb
xchg
jae
jge
cmp
mov
clc
cmp
jno
notb
jg
pop
cmp
and
mov
out
adc
js
test
mov
mov
or
xor
and
fdiv
xchg
xchg
xchg
scas
mov
sti
hlt
cld
add
mov
xchg
xchg
or
or
mov
jae
into
adc
adcb
and
into
bnd
and
ljmp
loop
xchg
mov
sub
in
pop
mov
es
lcall
stos
push
sbb
test
jno
popf
scas
adc
sbb
jb
xlat
aaa
inc
cmp
jmp
mov
add
xor
jo
out
ljmp
jnp
sarl
sti
inc
cmpsl
jg
xor
jbe
add
pop
pop
lret
ljmp
xchg
pop
shlb
mov
pop
add
std
adc
inc
push
and
jo
mov
iret
roll
sbb
dec
mov
pop
call
pop
and
inc
xor
movsb
mov
ljmp
testb
push
cmp
inc
std
imul
enter
fstl
icebp
add
insb
dec
jnp
faddl
popf
sub
and
xor
out
test
push
push
xlat
jo
sti
aam
sub
aas
mov
cwtl
push
and
xlat
or
push
pcmpgtb
out
sarb
or
daa
fwait
xor
mov
and
mov
ja
pop
addr16
sub
aas
in
pop
push
insl
aas
aaa
in
imul
test
in
mov
es
fsubrs
daa
imul
dec
lret
push
enter
add
aaa
add
loop
enter
mov
lahf
jns
arpl
pop
pop
outsl
test
xchg
fwait
out
mov
loope
mov
idiv
pop
add
int
jl
mov
mov
repnz
cmp
jmp
pop
ds
icebp
mov
sbb
test
or
inc
cmp
push
jbe
imul
adc
std
fcoml
push
add
pop
es
xchg
or
ja
hlt
cmp
push
jp
sub
movsb
frstor
cwtl
pop
xchg
push
push
push
daa
js
push
ffreep
aaa
inc
or
fsubrl
test
mov
jo
stos
int
out
in
adc
roll
push
add
pop
jne
insl
xor
add
mov
jmp
aaa
pop
mov
nop
scas
xchg
mov
sbb
leave
popa
pusha
xchg
xchg
ficompl
sbb
jnp
insb
jb
or
adc
jge
shlb
cmpsb
imul
outsl
mov
out
jmp
push
scas
mul
cmpsl
or
xchg
inc
xchg
or
ljmp
pop
lret
test
leave
sbb
adc
fwait
out
xchg
pop
ret
rol
mov
in
push
dec
gs
mov
add
mov
cmp
outsl
movsb
ss
in
sbb
cmp
mov
outsl
pop
in
push
pop
push
xchg
pusha
xchg
cmp
ljmp
jnp
sbb
call
sbb
jns
push
addr16
pop
cmp
std
jae
int3
mov
les
stos
pop
and
xchg
mov
push
push
movsl
adc
call
push
mov
jno
in
fnstsw
jne
arpl
jg
pop
or
add
cmp
testl
out
cltd
jge
mov
jp
mov
gs
ret
js
xchg
push
lods
cmp
or
in
or
iret
ss
xchg
stos
or
lahf
mov
and
call
inc
xlat
in
cmp
mov
decb
pop
push
imul
pop
jmp
ja
aaa
outsb
mov
jo
pop
call
out
test
pop
int
movsb
stc
xor
test
insb
or
pop
leave
fwait
inc
sub
data16
xrelease
imul
ja
jl
outsl
pop
mov
push
push
mov
iret
dec
mov
mov
std
jle
mov
movsl
sbb
adc
mov
and
pop
cli
and
out
sub
and
arpl
out
mov
cmp
add
stc
push
sub
scas
add
je
add
dec
lods
mov
xchg
xchg
mov
inc
mov
loope
adc
dec
pop
sbb
int
mov
add
enter
int3
mov
cwtl
push
fsubr
jmp
mov
divl
and
jmp
jmp
in
xor
andl
fsubrs
jb
mov
jmp
adc
jmp
out
pop
and
push
pop
cmpsb
jmp
sbb
int3
and
inc
jle
mov
jno
mov
jle
ror
cmp
inc
std
xchg
xor
mov
sub
shl
sbb
mov
mov
xor
lods
inc
mov
jl
sub
imul
jmp
shlb
or
lods
jl
dec
fstps
adc
jmp
sbb
xlat
sub
mov
mov
mov
scas
and
fsts
push
pop
or
sbb
push
or
cmpsl
push
mov
fidivs
repz
mov
inc
mov
les
push
aam
pop
mov
adc
jb
movsb
sbb
loopne
mov
pop
sbb
repz
cmp
stc
push
stc
scas
mov
push
imul
push
sub
out
shll
jnp
sbb
xchg
pop
lahf
lcall
mov
mov
and
out
jge
notb
iret
pop
loope
addr16
out
out
cs
or
rorb
xchg
cs
mov
jno
sub
cmpsl
sub
jmp
sbb
loopne
mov
std
mov
xor
scas
lds
sbb
aad
mov
cli
and
jmp
and
push
mov
xchg
push
icebp
inc
pop
lods
pop
sub
int
mov
adc
and
and
std
sub
loop
ss
mov
movsb
ds
mov
ds
rorl
jne
cmp
addr16
stos
mov
sbb
les
mov
jb
aas
push
mov
int3
test
adc
fnsave
jl
inc
sbb
sahf
jl
mov
sub
imul
shrl
aas
stc
adc
sub
loop
push
cmp
rol
cmp
into
pop
int
sti
call
add
fs
cmp
mov
clc
fistpl
xchg
out
jle
lock
out
leave
sbb
sahf
in
adc
xchg
fistps
pusha
cltd
dec
xor
sbb
dec
xchg
adc
sub
ret
aad
sub
jno
adc
xchg
insl
mov
jne
push
cmovns
mov
stos
iret
stos
adc
adc
lock
aaa
pop
ret
add
insb
lock
mov
lods
adc
add
jns
and
test
mov
xchg
aam
nop
jg
int3
lds
imul
fnstcw
inc
test
aaa
xchg
mov
scas
stos
pop
xchg
sahf
inc
sbb
jle
sub
nop
sbb
and
iret
xchg
das
sbb
dec
popf
fwait
dec
pop
sub
icebp
sbb
xchg
push
mov
lods
cld
sbb
stos
dec
mov
stc
jnp
fimuls
insl
lahf
or
lahf
adc
pop
cmp
fst
jg
sub
add
dec
pop
adc
rclb
adc
jne
or
and
cltd
mov
rcrb
xchg
push
daa
mov
add
and
sarb
push
loope
loop
inc
mov
fs
cmpsl
imulb
add
pop
pop
out
push
dec
popf
lods
mov
out
mov
dec
mov
mov
cmp
imul
cmp
adc
pop
and
and
rcrb
push
repnz
bound
fs
and
mov
imul
inc
fcoms
adc
xchg
adc
dec
xor
mov
gs
lret
or
aaa
pop
cld
xchg
scas
xor
test
sbb
dec
xor
lock
adc
jbe
cmp
inc
movsb
xor
mov
std
cmp
cli
xor
mov
icebp
arpl
sbb
mull
xor
pop
lea
inc
push
ror
cmpsl
add
jp
sarb
adc
and
add
ljmp
add
out
and
ljmp
lods
rcrl
test
sub
pop
lret
lret
push
jne
roll
mov
dec
push
aad
jno
push
pop
xor
xchg
repnz
in
xor
mov
mov
cmp
repnz
inc
cmpsl
xorb
jne
push
std
push
xor
dec
jne
and
cld
outsl
outsb
aam
push
insl
cmp
sub
jns
push
pop
add
mov
mov
dec
mov
daa
hlt
test
xor
lret
inc
or
cmpsb
mov
mov
pop
bound
dec
sbb
add
pop
lret
mov
les
push
cmp
sbb
scas
inc
inc
clc
cmp
mov
mov
cmp
leave
sti
lahf
jle
jno
call
imull
mov
mov
mov
pushf
push
lret
fnstenv
in
popf
cmp
add
mov
cli
pop
sbbb
inc
push
xor
stos
aam
xor
xchg
mov
sub
ret
es
hlt
pop
add
fimuls
fcoms
push
jnp
pop
add
xor
xchg
mov
pop
int
pushf
pop
push
aaa
mov
in
sbb
pop
sahf
sahf
jne
pop
scas
sbb
mov
mov
imul
jno
sarl
dec
insb
or
in
dec
pop
inc
xchg
leave
jmp
inc
dec
adc
mov
push
dec
lret
jns
test
fisubl
pop
aad
lcall
ret
pushf
sub
dec
push
add
cltd
shll
in
fadds
sbbl
call
jp
jne
push
push
mov
test
outsb
ss
in
push
subb
push
adc
or
rcl
mov
rcrb
cltd
mov
mov
shlb
sub
and
xchg
outsl
push
inc
clc
rcrb
mov
push
xchg
push
lahf
mov
hlt
ds
lods
popa
inc
lock
mov
mov
cwtl
adc
in
sub
push
ret
cld
add
pop
lods
inc
push
stos
stos
sahf
out
data16
mov
stos
test
cmp
inc
gs
movsb
jecxz
ret
out
cmp
sbb
mov
ds
movsl
mov
into
popa
mov
movsl
ds
push
mov
addr16
fwait
popa
mov
xchg
or
pop
inc
into
mov
jge
ror
jge
cmp
data16
imul
out
stc
or
push
sbb
adc
shrb
xor
cmc
cmp
data16
jnp
cmc
adc
adc
sbb
inc
lods
jg
pop
jne
mov
and
stos
rolb
mov
cld
pop
les
icebp
cmpsl
jae
adc
lret
fwait
mul
aas
mov
push
scas
sbb
xor
testl
int3
xchg
and
sbb
jae
in
pop
push
dec
or
ljmp
sub
cli
xchg
cmp
sbb
pop
in
mov
dec
movsb
ficomps
mov
lods
cmp
lret
dec
jg
cmp
inc
jne
inc
pop
inc
loopne
iret
lret
xchg
pop
push
test
out
jg
xor
fcomps
jno
ja
test
jo
popa
mov
icebp
pop
xlat
test
xor
outsb
pop
dec
int
push
adc
xlat
pop
cmp
push
jl
xchg
movsl
lret
inc
sub
push
loope
in
mov
scas
in
imul
lock
movsb
xchg
push
pop
adc
push
dec
hlt
sbb
push
pop
test
mov
sub
adcb
xlat
insb
mov
in
push
daa
lcall
fldlg2
adc
cmp
jbe
sub
lret
iret
sub
push
adc
repnz
add
mov
push
mov
shll
shrb
inc
test
xor
add
pop
jb
xchg
jmp
adc
pusha
inc
jb
lcall
jmp
inc
es
mov
popf
int3
mov
jnp
push
out
cwtl
pop
xor
subl
sub
jle
nop
mov
xor
adc
pusha
and
enter
xchg
es
pop
call
pop
dec
mov
pop
jnp
jp
les
iret
aas
rorl
mov
mov
jp
cltd
cld
insb
or
add
jle
add
mov
adc
fsubrs
lcall
push
push
pusha
call
pop
mov
shll
lret
test
out
dec
scas
lcall
out
rcrl
jg
jo
sbb
xor
int3
scas
and
xchg
jge
jns
imul
push
pop
sbb
push
loop
mov
or
sub
addr16
dec
cmpsb
pop
faddl
stos
addr16
jb
pavgb
call
cmp
in
add
and
pop
mov
sti
int3
sbb
inc
mov
mov
xchg
test
and
bnd
mov
je
sub
aaa
cwtl
imul
cmp
adc
popa
js
add
in
push
lds
leave
inc
movsl
es
mov
push
sbb
andl
push
cmpsb
jmp
xchg
stos
mov
test
cmpsl
fdiv
and
sbb
addb
adc
clc
add
mov
lret
adc
adc
pop
cmp
xchg
mov
popa
jle
mov
in
ret
jg
pushl
insb
out
push
mov
in
push
inc
push
dec
xchg
shl
cmp
lcall
xchg
test
out
xchg
fwait
in
repnz
scas
test
pop
sub
hlt
pushf
and
xchg
inc
orb
xchg
push
stos
daa
xchg
jbe
imul
dec
gs
cmc
mov
mov
cmp
dec
stos
and
shr
xchg
mov
or
pop
or
add
stos
fwait
jo
mov
sub
into
out
push
dec
xchg
test
psubusb
addr16
xlat
or
jbe
mov
push
jp
sbb
mov
push
stos
mov
movd
nop
mov
fcmove
dec
pop
in
fsubr
jmp
mov
repz
push
dec
lahf
fisubrl
inc
fdivrl
notb
out
int3
inc
in
in
dec
lahf
mov
int3
addr16
std
mov
ljmp
adc
and
mov
cmp
adc
xchg
mov
dec
xchg
sub
jmp
outsb
call
fwait
mov
popf
std
aam
fisttpl
cmp
lcall
mov
mov
les
push
add
pop
sbb
aaa
xor
add
pushf
and
or
jne
pushf
movsl
or
cmp
int
fs
outsl
jge
cs
cmp
outsl
xor
mov
jbe
mov
sbb
push
push
push
or
or
pop
test
stc
push
push
ljmp
add
ds
dec
mov
sahf
adc
adc
js
push
xchg
sbb
bnd
and
mov
addl
jecxz
jecxz
cs
jne
push
push
mov
and
xlat
or
or
or
shrb
sbb
rcll
cmp
nop
test
mov
imul
xor
or
mov
push
sbb
repnz
push
add
push
int3
lahf
outsb
pop
movsl
mov
dec
cltd
lock
js
out
jecxz
subb
cmpsl
xor
hlt
imul
and
xchg
popa
adc
sar
cmpb
in
out
adc
dec
and
int3
push
call
mov
mov
dec
xor
fcmovnbe
enter
scas
loop
and
aam
xchg
jl
fs
scas
lea
cwtl
iret
push
pop
sbb
or
fildl
dec
test
test
sbb
stos
loop
mov
push
jo
mov
jns
int
mov
sti
das
pop
jbe
mov
xor
cmp
inc
and
push
js
leave
dec
push
lods
ret
rcr
lret
hlt
fld
jae
outsl
sarl
lret
popa
lret
in
xchg
pop
insl
jmp
dec
out
xor
xor
sub
stos
jg
pop
test
arpl
and
rcrl
cmpsl
xor
jge
les
jle
push
int
add
gs
test
xor
orb
xor
mov
mov
sti
xor
cmpsl
insl
insb
in
pop
jne
rcrb
iret
sbb
out
int
sub
les
xchg
mul
test
push
ja
fstpt
addr16
cmp
jo
aam
rorb
push
fimuls
or
mov
push
xorb
or
adc
sbb
imul
push
stos
out
xchg
orl
inc
xor
lea
cmpsl
nop
adc
in
popf
popa
or
pop
push
xor
push
sub
movsl
sbb
mov
jnp
push
sub
fs
cwtl
test
xchg
imul
inc
inc
cmpsb
push
int
mov
gs
mov
add
push
and
mov
in
sub
add
lea
lcall
in
aad
xchg
and
adc
or
push
stos
cmp
cmc
sbb
loop
fnstcw
rcrb
rcll
es
push
imul
sub
lret
xchg
dec
mov
or
mov
push
sub
fs
mov
inc
sub
push
sti
push
dec
js
outsb
mov
push
cmp
lret
cmp
pop
js
jnp
jmp
lods
outsl
inc
adc
push
jg
jb
in
cld
lret
xchg
dec
scas
mov
xchg
pop
mov
out
mov
sbb
or
pop
cld
fnstsw
mov
ss
cmp
inc
mov
dec
std
je
jo
jne
mov
outsb
call
cmp
push
sahf
or
pop
jne
fidivl
dec
push
xor
outsl
sbb
fwait
dec
sub
sbb
ljmp
adcb
cld
aaa
pop
xlat
test
in
mov
hlt
pop
mov
sbb
and
jb
dec
cmc
pop
sahf
push
in
popa
ljmp
movsl
mov
xor
dec
stos
push
inc
lret
pop
and
rorb
cmp
cmpsl
jecxz
dec
jns
lods
cltd
mov
push
sub
fdivrs
rcll
mov
adc
xor
pop
arpl
xchg
add
cmp
in
fisubrs
xorb
out
cmpsl
inc
cmpsb
cld
cmpsb
push
scas
sbb
sub
outsb
sbb
xchg
xchg
pop
iret
rorl
flds
imul
movsl
movsl
std
lods
fwait
test
lea
push
inc
mov
xor
sbb
pop
jmp
dec
test
hlt
jmp
adc
mov
xor
jnp
inc
stos
test
movb
icebp
xchg
into
stos
push
in
cmp
fimull
popf
daa
xor
pop
ficoml
sub
imul
testb
lods
loope
mov
xor
lcall
ficomps
cltd
inc
push
pop
push
sarb
movsl
pop
lds
arpl
jo
sub
mov
sub
xor
mov
mov
stc
lret
insb
loopne
stos
jle
dec
inc
jge
dec
sub
inc
cmp
inc
fs
jo
negl
test
loope
xchg
mov
mov
cltd
out
lea
mov
imull
idivl
sbb
sbb
pop
aad
add
fnstsw
xor
aad
addr16
roll
fistps
mov
pop
push
mov
popa
pusha
sti
inc
mov
in
adc
fisubrs
mov
andl
sub
movsl
or
int3
rcrl
xchg
pop
cmp
mov
inc
push
scas
add
cmc
into
add
cltd
add
jnp
aam
xchg
pop
pop
xchg
jl
jno
out
and
scas
in
lods
into
jae
mov
lret
lahf
push
push
rcrb
push
jo
xor
lahf
cmp
push
inc
cli
in
adc
adc
clc
fs
testl
push
ja
cld
dec
xchg
sub
dec
jbe
or
std
sbb
jmp
push
jmp
subl
test
cmp
pushf
aad
xor
ret
cwtl
ss
fs
pop
xchg
lret
js
push
imul
jp
add
fs
subb
jmp
xlat
mov
dec
fists
stos
inc
popa
pop
imul
fs
das
pop
stc
lret
call
mov
clc
in
jg
aaa
xchg
sub
lods
push
js
outsb
int3
push
inc
test
mov
in
push
ja
mov
dec
ret
pop
pushf
repz
test
pop
addr16
jnp
stos
inc
push
test
jl
dec
sbb
cli
rcl
cmp
dec
xchg
xlat
rorl
add
incl
ljmp
jo
arpl
daa
xor
and
ljmp
push
pop
xorl
fcmovbe
in
and
stos
insb
jecxz
ds
push
test
in
push
nop
insl
xchg
and
jnp
push
mov
mov
xor
and
xchg
jne
repnz
jb
dec
jae
sub
mov
adc
out
and
scas
inc
add
jns
push
pop
dec
aas
ss
push
xchg
insb
push
jp
popf
xchg
sub
cmp
cmpsl
pop
mov
std
jmp
add
subl
test
ret
add
into
rclb
mov
or
icebp
sub
xchg
call
adc
adc
cmpsl
test
movsb
or
je
ds
mov
sub
cld
repnz
cmpsl
je
lahf
cmpsl
in
pop
sub
cmpsl
pop
jbe
dec
notb
sbb
sahf
into
in
sbb
pushf
aaa
rcrl
or
out
pop
mov
pusha
test
mov
aaa
pop
clc
cmp
int
jnp
mov
dec
and
dec
nop
or
sarl
inc
ja
lods
push
std
jb
std
inc
push
lods
out
mov
jle
mov
mov
add
pop
nop
mov
ljmp
or
pop
and
mov
cmp
lods
mul
mov
fdivrs
in
push
inc
or
pop
test
rorl
or
mov
sbb
xor
push
push
pop
cli
fildl
int
out
jns
xchg
rclb
loope
cmpsl
xchg
mov
or
cmp
sbb
js
lods
frstor
stos
push
clc
mov
and
loopne
xor
xor
loope
ror
jge
sahf
push
jns
and
rorb
popf
adc
rcrl
jl
notl
in
enter
xchg
notl
insl
push
adc
pop
jmp
popa
pop
lret
lret
cmp
cmpb
xchg
inc
imul
mov
movsl
iret
mov
leave
out
sub
iret
and
sbb
pop
jl
divl
in
dec
push
sbb
out
or
lods
sbb
sbb
jbe
cmpsb
push
jmp
std
and
mov
cs
in
test
stos
adc
ljmp
nop
xchg
fs
stos
push
fwait
hlt
aad
pop
sbb
xor
mov
sti
imul
adc
pop
mov
test
cmp
mov
jbe
popa
mov
lods
movsb
sbb
aam
insb
shll
jecxz
pop
xchg
add
xchg
stos
test
lahf
or
sub
dec
mov
pop
jne
enter
add
add
icebp
ds
loop
aam
pop
pop
lret
inc
mov
mov
fs
adc
insl
pop
mov
sbb
xor
cmp
lods
sbb
dec
jb
cli
adc
xor
stos
jns
stc
clc
adcl
test
push
push
inc
aaa
lahf
lahf
or
test
mov
outsb
lcall
movl
into
out
fadd
cmp
and
sbb
leave
movsl
cmp
jo
or
imul
sub
bnd
push
pop
lods
pop
lahf
dec
inc
test
nop
mov
xchg
pop
aas
fidivs
ret
cmpsb
xchg
bound
xor
es
mov
fsub
ss
jl
hlt
pop
and
out
fisttps
lret
push
stos
js
push
mov
out
push
not
cmpsb
lds
popf
jo
jno
dec
and
rclb
push
xchg
pop
push
push
stc
jle
inc
test
out
jmp
mov
cmp
adc
rcl
cmpsb
jmp
mov
cltd
imulb
stc
subl
mov
nop
sbb
mov
jb
add
mov
and
stc
loopne
dec
shl
fs
jnp
sub
stos
outsb
ljmp
jle
inc
sbbl
fs
insb
std
sti
add
xor
jb
cmp
jno,pn
ficoml
lds
jno
xchg
jnp
and
xchg
ljmp
dec
cmp
rolb
sbb
int
lret
cmc
xchg
repz
fs
dec
adc
and
push
dec
inc
and
out
mov
sub
adc
leave
mov
jecxz
mov
xchg
jnp
jnp
repnz
je
xchg
iret
bound
or
jle
dec
ret
xchg
push
dec
into
std
mov
pop
cmp
repz
push
pop
xchg
mov
insb
ret
or
push
leave
jmp
lret
test
push
call
xor
xor
insl
out
ss
dec
mov
mov
cmp
jbe
loope
call
daa
dec
cli
fists
fwait
int3
mov
fwait
lods
sahf
fldt
inc
mov
xor
dec
mov
jb
das
lahf
mov
leave
ljmp
adc
cltd
sahf
fisttpll
add
movsl
jo
mov
loopne
add
dec
fs
testb
cmp
xchg
xlat
adc
roll
test
hlt
stc
inc
popf
rclb
bound
inc
enter
pop
mov
cmp
xchg
xchg
xor
movsb
arpl
stc
out
loop
and
pop
cltd
sbbl
xchg
pop
xor
xor
fisttpl
negb
jl
xorl
test
movsb
sub
xlat
push
repz
push
push
test
filds
test
pop
pusha
inc
dec
sub
mov
and
mov
and
push
push
xor
jg
or
lods
cmpsl
cmpb
adc
sbb
rcll
pop
pop
xlat
mov
jmp
sbb
test
gs
xor
loop
push
mov
ret
punpckhbw
scas
repnz
sub
iret
and
mov
fwait
outsb
inc
leave
out
dec
inc
add
out
sbb
mov
xor
cld
adc
loopne
mov
or
loop
movsl
jl
mov
loopne
cli
test
ja
movsl
les
adc
mov
movsl
mov
js
addr16
sbb
push
inc
in
outsb
pop
dec
mov
imul
movsl
or
cmpsb
lcall
sub
sub
cld
testb
adc
lock
push
adc
ja
push
adc
out
push
lock
mov
mov
out
cmp
xlat
fiaddl
adc
mov
dec
mov
sub
pusha
filds
lret
jnp
pop
out
dec
das
or
scas
ficoml
mov
fs
scas
lea
adc
cltd
lcall
xor
fs
outsl
and
push
lock
inc
xor
into
push
data16
xor
cmp
mov
iret
out
cmpb
aad
in
cltd
shlb
iret
iret
test
mov
sbb
out
cmc
cmpsb
out
into
mov
sar
nop
cwtl
in
into
xchg
addr16
pop
ret
pop
mov
sbb
mov
scas
data16
cli
push
test
pop
inc
cmp
repnz
sbb
mov
push
fwait
mov
dec
mov
and
add
out
hlt
lea
test
push
scas
dec
andb
mov
cmc
and
mov
mov
ret
sbb
sub
adc
rcrl
or
cwtl
cli
pop
or
cmp
push
aas
gs
in
fwait
pop
sub
loop
sub
dec
int
xchg
xor
jge
adc
jne
mov
mov
stc
adc
in
rorl
xlat
aam
mov
dec
cmp
jo
dec
outsb
jg
jge
push
lcall
dec
out
aaa
test
cmc
mov
je
pop
adc
loope
outsl
or
mov
mov
ret
xchg
aas
stos
mov
sbb
cli
into
hlt
or
dec
aaa
fdivs
push
jbe
jge
aam
in
push
into
in
shll
repz
cmovge
and
pop
cmp
pushf
xchg
jmp
adc
lret
hlt
cltd
call
sti
addr16
push
jo
inc
scas
push
xchg
movsb
and
shrl
jns
sub
iret
inc
addr16
lahf
daa
sub
dec
test
mov
adc
nop
popa
pop
adc
xchg
dec
adc
inc
sub
aam
ffreep
adc
out
inc
lds
lods
scas
jbe
mov
and
fldl
dec
out
sub
fstpt
mov
sar
jecxz
lods
pop
xchg
loopne
jecxz
push
sub
or
insb
pop
loope
lret
out
fdivr
push
imul
mov
stos
jle
in
add
mov
push
leave
jl
cs
mov
cs
mov
pusha
out
inc
dec
sbb
imul
sbb
cmpl
inc
das
xor
ds
xchg
cs
mov
jl
call
push
testb
cmp
mov
mov
test
mov
lock
icebp
lfs
pop
aad
jp,pn
mov
dec
aas
hlt
mov
mov
nop
repnz
mov
hlt
pusha
std
add
fisttpl
push
xchg
add
roll
add
mov
cmp
ss
leave
stos
test
bound
lret
xchg
sub
or
add
inc
jp
dec
inc
loope
out
mov
xchg
dec
xchg
cmpl
fisubrs
and
mov
loopne
in
jmp
in
in
shll
mov
mov
xchg
into
mov
push
cwtl
stos
mov
out
icebp
xor
popa
mov
jnp
and
xchg
xorl
shrl
popl
mov
popa
add
cs
jl
jmp
pop
in
into
insl
loop
cltd
adc
add
xchg
daa
jge
mov
adc
hlt
imulb
rclb
jle
pop
cmp
test
inc
dec
addr16
lea
xorl
out
je
fidivs
sub
popa
mov
xchg
fsubrp
stos
into
in
shr
dec
aaa
mov
xchg
test
je
daa
mov
or
test
imul
jnp
lods
sbb
mov
add
push
push
pop
jge
out
cmp
cwtl
loope
test
push
shr
test
sbb
or
lea
ds
mov
int
mov
loope
and
xor
cwtl
ljmp
mov
mov
dec
lods
iret
insb
sbb
aaa
adc
cmp
cmc
inc
jge
shll
pop
sub
mov
lret
push
adc
mov
rclb
xchg
dec
loopne
bound
adc
lds
inc
lahf
mov
inc
adc
daa
rcll
insl
cmpsb
enter
imul
fimull
mov
mov
arpl
rcll
and
xor
push
outsl
add
pop
cmp
sub
dec
push
mov
loop
loop
sbb
sbb
nop
jle
pop
jmp
xchg
adc
loop
mov
xchg
jbe
sbb
out
push
mov
ja
mov
out
xchg
in
adc
loopne
pop
aam
or
in
pop
nopl
cmp
cli
out
sub
sub
inc
aad
ja
pop
mov
jne
dec
sti
and
stc
push
mov
ror
jnp
or
repz
adc
arpl
pop
cmp
in
loope
out
cmp
mov
dec
adc
int
loop
sbb
lods
dec
dec
cwtl
call
shll
jbe
mov
loop
mov
xchg
sahf
cmpsb
fidivrs
push
out
dec
ja
mov
sbb
test
sbb
push
loopne
mov
nop
cbtw
out
mov
xchg
mov
sbb
jo
cmpsl
and
sbb
lods
push
ret
xchg
icebp
sbbb
rcr
cwtl
jns
shlb
imul
xor
mov
xchg
pop
jle
loope
cltd
add
jnp
inc
jge
dec
es
pop
mov
into
faddl
jnp
cs
mov
mov
xor
repnz
aaa
fnstsw
int
pop
push
adc
pop
cmp
leave
or
stos
inc
cmp
pusha
jle
insb
pusha
xchg
jb
mov
lahf
dec
xchg
adc
in
or
imul
out
dec
sbb
shrb
xchg
out
jae
inc
lods
dec
xchg
dec
outsl
and
lahf
add
insb
cmpsb
push
rcr
or
int
xorl
jp
mov
mov
jmp
pop
sub
clc
test
pushf
push
add
in
iret
jae
lods
dec
pop
add
fnsave
and
or
adc
rcll
xchg
repz
jge
mov
mov
xor
iret
mov
mov
mov
pop
addr16
mov
rcr
sbb
loopne
or
jmp
in
xchg
adc
pop
loope
xor
sub
dec
mov
outsb
jns
ja
test
mov
xchg
ja
cli
mov
cmp
xor
gs
rcrl
jne
lods
movb
fmul
dec
repz
enter
js
mov
push
orl
cmp
ret
out
mov
jmp
stc
movsb
jne
rcr
hlt
ret
testl
mov
dec
arpl
inc
push
add
std
mov
mov
jmp
adc
adc
outsb
jbe
push
cmp
push
xchg
loop
add
dec
in
call
jge
jb
adc
push
orb
cmp
in
insb
fnstsw
loope
mov
jae
in
dec
fsts
pop
inc
xchg
and
xor
int3
lea
mov
inc
or
fldcw
mov
or
pop
in
inc
push
jg
jle
mov
sarb
aad
int3
push
and
dec
inc
mov
cwtl
shlb
fwait
jno
inc
mov
lret
lahf
dec
pop
push
aam
into
ja
add
jecxz
inc
aas
mov
shll
roll
push
mov
or
rcr
mov
jl
in
movsl
mov
imul
jmp
das
icebp
dec
leave
pop
jb
push
xor
iret
add
fwait
adc
insb
dec
jo
cmc
mov
push
jns
cld
pusha
add
pop
adc
movsb
in
into
add
xorb
cmp
and
hlt
mov
jg
lea
dec
mov
mov
mov
jp
bound
add
and
imul
add
xchg
out
fidivs
into
mov
adc
add
inc
mov
test
sti
xchg
and
add
popf
stos
add
bound
js
jo
xchg
and
test
inc
popa
dec
sbb
xor
dec
aaa
insb
addb
repnz
pop
mov
in
lods
jbe
or
or
ljmp
dec
push
ret
leave
je
hlt
aaa
je
cmpsl
fadd
je
or
inc
or
mov
and
dec
and
fmul
xor
lea
stc
jb
mulb
xchg
push
mov
mov
mov
sub
loopne
jae
pop
jecxz
stc
fistl
pop
ds
loope
pop
sar
fnstcw
les
out
push
popa
xchg
xlat
test
fcompl
rcr
lcall
pop
into
subl
xchg
ljmpw
lods
sarb
mov
cmp
jg
add
imul
push
cltd
rcrb
iret
pop
jae
jo
jae
fwait
sbb
xor
mov
ja
hlt
xchg
push
ds
xchg
xor
xor
out
or
fwait
imulb
jns
fnsave
dec
ficoml
push
fnstcw
sbb
fldenv
jno
xor
cmc
test
and
in
ds
add
cli
popf
js
popf
xchg
inc
lods
shll
lods
inc
cmp
xchg
out
hlt
dec
or
cmp
mov
mov
xor
ret
add
bound
repz
loopne
add
movsb
dec
push
int
xchg
adc
xor
xor
push
jmp
jge
mov
and
rcrb
mov
mov
push
mov
xor
ss
jo
pop
xchg
sbb
imul
or
movsl
xlat
imul
je
mov
xchg
int3
mov
push
mov
hlt
aaa
test
sub
jmp
divl
andnps
bound
mov
jmp
sub
shrl
xchg
popa
clc
lcall
push
lea
faddp
push
addr16
ret
or
mov
sub
push
daa
iret
xor
xchg
and
imul
cmpsl
andl
sub
lret
inc
mov
lds
mov
aas
cmp
mov
jl
cmp
mov
pop
or
mov
sbb
fcomi
pop
movsl
sub
jl
xor
ljmp
pop
mov
dec
and
adc
jp
lds
or
xchg
add
adc
mov
cltd
mov
sbb
fs
xchg
popa
or
imul
and
fdivrp
push
lock
jp
sbb
call
push
lea
stos
notl
mov
cmp
jg
dec
fisubrs
sub
mov
stos
jmp
pop
mov
test
sbbb
add
mov
mov
xor
in
gs
dec
loopne
pop
add
out
pop
pop
icebp
jne
adc
into
xchg
mov
pop
mov
cli
add
adc
mov
dec
lods
adc
movsl
xchg
fwait
and
arpl
xor
imul
sbb
cld
movsl
xchg
xchg
lock
mov
sub
push
dec
mov
xor
cs
xor
andl
pop
cld
sar
inc
fsubr
lods
jle
push
arpl
or
lods
xor
xor
incl
imul
xchg
popf
repz
xlat
push
mov
jo
fwait
inc
mov
push
repnz
std
push
js
lods
mov
push
xchg
push
xlat
out
shlb
cld
mov
jp
or
insb
jge
cld
jb
loop
out
fcoml
push
gs
and
adc
pop
clc
adc
sub
aad
in
and
mov
or
sub
push
xor
inc
ror
pushf
call
push
sbb
push
jmp
mov
dec
push
xor
lds
in
loop
xorb
sbb
jno
sbb
push
out
adc
mov
mul
mov
cli
lods
xlat
mov
stos
int3
push
push
push
sbb
bound
flds
fistpl
aad
or
or
xchg
jg
add
out
pop
fadd
je
fs
rclb
and
inc
adc
lods
xor
pop
adc
inc
push
add
adc
inc
bound
push
add
stos
sbb
cmp
out
sbb
stos
stc
jg
ret
adc
mov
inc
dec
sub
and
cmpsb
das
adc
cltd
cmp
xchg
bound
fprem1
cltd
or
iret
push
call
jnp
push
add
imul
xor
dec
cmp
bound
in
mov
cmp
call
pop
nop
jo
loope
push
inc
and
xor
jge
push
and
in
out
inc
inc
or
mov
push
dec
inc
cs
adc
test
ds
cmp
insl
ljmp
pop
outsl
loope
out
xchg
inc
and
push
mov
in
out
jecxz
shl
cmp
sub
push
imul
mov
sbb
scas
stc
jbe
cs
push
xchg
or
loopne
data16
add
or
push
mov
arpl
jno
enter
cmc
insb
pop
inc
dec
pop
lahf
mov
fcompl
mov
outsb
ds
mov
std
ss
xchg
jp
xchg
imul
sbb
aas
clc
outsl
bound
out
dec
stc
lods
sub
xchg
xor
imul
out
cltd
loope
cltd
shrb
inc
jle
adc
lret
xchg
jg
cmp
cmpsl
sahf
dec
inc
and
popf
pop
gs
es
enter
bound
leave
xlat
idiv
or
in
or
inc
call
aad
std
sub
loopne
icebp
xchg
loop
dec
lds
jb
fdivs
mov
jo
dec
in
push
sbb
mov
cmp
xchg
or
in
xchg
xchg
pop
cli
stos
roll
lods
cs
ret
dec
addr16
ds
jo
idiv
pusha
icebp
imul
xor
mov
xor
sahf
clc
loope
adc
or
in
push
in
adc
sbb
imul
dec
fadds
outsl
clc
testl
dec
lds
test
cltd
mov
in
ret
push
inc
in
mov
add
add
aas
push
mov
jmp
and
sub
and
add
lods
mov
mov
call
fs
push
dec
inc
ficoms
jp
rol
cmp
mov
andl
sbb
mov
call
sbb
cmpsl
pop
sbb
sbb
imul
rcr
sbb
sbb
pop
xchg
cld
push
and
pop
jge
shlb
out
in
loop
addr16
out
mov
xchg
sbb
scas
insb
jne
popa
cmp
out
xchg
fucomip
ja
xchg
jns
test
inc
pop
jle
xor
cmp
jg
aas
adc
scas
fldenv
fldenv
clc
inc
loope
pop
aam
xchg
jnp
add
rorl
push
push
fwait
lcall
xchg
pop
addb
push
dec
cs
mov
dec
jmp
cmp
adc
enter
inc
xchg
lahf
stos
fsts
cmp
xor
cmp
pop
imul
jbe
mov
mov
js
push
xchg
ljmp
mov
jne
mov
leave
mov
data16
push
adc
jns
inc
je
mull
jne
aam
pop
mov
xlat
push
sbb
push
dec
testb
pop
sbb
mov
add
pusha
test
test
cmp
mov
push
push
pop
sbb
addr16
je
in
cltd
xchg
mov
test
fnsave
in
pop
aad
lods
pop
mov
mov
testl
fnclex
out
js
and
movsb
or
dec
cmp
adc
push
mov
rcrl
rorb
xchg
xor
dec
ror
mov
jle
jnp
jo
test
or
add
cld
in
mov
lock
loopne
or
ljmp
lret
loop
inc
cmp
pushf
mov
psadbw
insb
pop
inc
push
dec
clc
push
shlb
xchg
sub
loopne
sub
test
cmp
data16
dec
out
sbb
std
aaa
fninit
es
push
loope
leave
insl
sbb
cwtl
and
testb
lea
sbb
push
aas
push
fdivp
sahf
popa
jg
fmull
inc
cmc
rol
negb
xor
lcall
int
stos
xor
lods
inc
adc
daa
sbb
inc
icebp
divl
nop
js
inc
cld
pushf
inc
addl
insb
adc
ljmp
xor
lcall
add
mov
lret
mov
loop
loopne
insl
enter
jge
cmp
inc
in
push
repz
mov
pop
repnz
in
iret
inc
adc
xorb
mov
push
jo
movsl
repnz
add
lret
xor
pop
shrl
cmp
aas
pop
lods
cmpsl
rol
hlt
lock
jns
xlat
inc
sub
pusha
jl
ja
ja
enter
std
mov
and
pop
lret
das
movsb
xchg
mov
or
add
js
adc
loope
push
sub
mov
test
cmp
aas
and
xor
stos
out
sub
jle
sub
out
jge
lahf
lock
cmpsl
movsb
test
es
mov
mov
sub
aaa
cmpsl
mov
nop
xchg
pop
outsb
sarl
sub
adc
mov
insb
jl
out
xchg
notb
loopne
outsl
jno
out
scas
inc
testl
push
mov
dec
nop
in
adc
cs
xchg
pop
mov
inc
cmpsl
push
jmp
fwait
scas
push
pusha
out
lods
mov
test
add
pop
addr16
dec
and
sbb
std
test
sbb
mov
mov
mov
addl
test
inc
ja
fmuls
lahf
js
sti
pop
adc
mov
ror
push
sbb
push
pop
repz
aad
fisubs
sbb
jbe
jg
push
and
shll
sub
sbb
and
push
ljmp
mov
pusha
sarb
adc
mov
pop
xor
or
cmp
lret
cmpsb
lds
cmp
pushf
fdivs
xor
jno
xchg
arpl
insb
out
ret
bound
cmp
sbb
hlt
sub
rcrl
cwtl
loop
mov
mov
jl
mov
jl
add
out
push
pop
sbb
sub
sbb
jo
frstor
mov
cmp
jmp
push
and
or
iret
addr16
dec
pop
xor
daa
aas
push
loopew
xor
mov
ret
sub
dec
sti
ret
fisttps
mov
jne
pop
mov
mov
in
xor
jae
ficoms
cmp
push
xchg
test
xchg
cmpsb
outsb
cmp
push
mov
xor
pop
mov
in
mov
push
jp
dec
lods
nop
pop
pop
or
in
pop
dec
add
jb,pn
ljmp
or
enter
mov
repnz
bound
enter
push
fs
rcrl
add
notb
xor
sahf
fcomps
iret
push
stos
in
jae
fsubr
imul
and
repnz
mov
push
or
gs
dec
cld
in
imul
pop
mov
adc
in
xchg
shl
loopne
adcb
or
cmp
ret
lret
cmp
rcr
add
cmpl
mov
sub
cmpsb
testb
cwtl
adc
ret
sbbb
inc
test
stc
sti
adc
shlb
adc
fidivl
jge
arpl
into
into
and
bound
icebp
mov
xor
sub
add
repnz
scas
pop
adcl
jno
jecxz
jae
jmp
jo
pusha
or
adcb
lcall
sti
stos
xchg
pusha
add
loop
loop
cmc
lret
dec
sub
inc
cmpsl
xchg
out
pushf
or
push
adc
fsubp
leave
imul
fmull
iret
lods
dec
jae
xor
cmp
je
arpl
data16
cmp
pusha
arpl
and
inc
mov
dec
in
push
call
cmp
xor
dec
jne
and
in
jmp
divl
decl
mov
popa
nop
sub
inc
push
testl
jb
sbb
lret
insl
js
lods
cltd
subb
je
cmp
pop
or
insl
adc
push
push
in
mov
hlt
lcall
pusha
outsl
push
out
cmpsb
out
xchg
mov
add
aam
adc
out
iret
std
int3
cli
lcall
call
jge
insb
scas
jno
imul
in
mov
sub
mov
xor
inc
xchg
inc
dec
mov
jno
loop
sbb
int3
test
ret
dec
inc
xor
push
or
arpl
aas
fdivrl
cmp
xchg
aad
fmuls
xorb
xchg
jnp
insb
bound
xchg
sahf
adc
xchg
out
mov
imul
push
fldenv
mov
rorl
jne
addr16
fwait
arpl
out
mov
sbb
push
test
test
push
xchg
xchg
fidivs
sbb
sub
les
in
or
dec
arpl
pop
xor
sahf
lock
sub
aas
orl
aad
sub
xchg
or
arpl
aad
inc
outsl
pop
pop
loope
xchg
arpl
pop
std
cmp
adc
xor
adc
dec
repnz
cmpsb
dec
fildll
mov
jne
not
ret
or
lods
lcall
xor
nop
fstpt
lret
inc
sahf
fwait
pop
jl
out
pop
mov
cmc
push
add
cmp
jmp
fstl
sbb
mov
and
mov
jp
adc
in
inc
xchg
xchg
and
imul
cmpsb
stc
jae
mov
sbb
fsubrl
test
cld
addr16
out
sub
sub
push
es
call
mov
pop
ret
push
mov
ds
sub
push
pusha
jmp
xchg
je
xchg
into
cwtl
clc
add
nop
or
add
jmp
clc
dec
push
lods
ffree
or
push
out
push
ja
mov
iret
call
les
test
sbb
jl
pop
push
mov
outsb
es
xlat
daa
int3
pop
xor
cmpsl
sbb
cmpsb
inc
pop
xor
sub
test
scas
sbb
xlat
pop
dec
xor
inc
jno
rcl
xchg
popa
popa
js
fs
lahf
sub
mov
xlat
data16
out
adc
add
add
pop
pop
push
push
insb
cmp
lret
or
loopne
push
push
adc
stos
and
out
mov
iret
mov
pushf
insb
insl
sub
mov
cmp
pop
pop
fmull
sub
mov
outsb
sub
sbb
push
xchg
cmp
ret
sti
jae
add
push
bound
cltd
lahf
lods
cwtl
xorb
adc
call
push
xchg
push
adc
imul
into
pop
out
xor
xchg
scas
loop
adc
adc
mov
and
in
push
dec
cmp
aam
dec
loope
enter
aam
shlb
lds
mov
roll
fidivs
mov
fistpl
adc
dec
popa
aad
dec
push
mov
dec
pop
jno
fwait
xchg
rol
push
dec
dec
pop
bound
popa
and
jecxz
test
adc
mov
jl
cmp
scas
pusha
add
mov
sbb
mov
jle
fwait
lret
lahf
mov
add
sbb
cmp
ss
xchg
push
enter
adc
test
sbb
into
addr16
insb
icebp
sbb
xorl
xor
xor
insl
jae
pop
iret
dec
pop
xor
aas
aaa
ret
ljmp
pushf
xor
and
or
cmpsl
xor
jb
adc
cmpl
push
aam
mov
push
mov
cmc
subl
jge
push
cmp
jp
cld
or
outsl
fs
push
test
dec
jl
mov
lcall
shlb
dec
and
das
push
lock
xchg
and
jle
mov
jp
rcl
fnstenv
add
pop
pop
rcl
sbb
lods
push
and
xor
testl
aad
in
sbb
xchg
addr16
stos
dec
pop
sbb
jle
jne
scas
mov
pusha
sbb
call
mov
popf
repnz
jbe,pt
mov
and
mov
sub
xchg
xor
jae
xchg
mov
adc
outsl
dec
xchg
pusha
inc
outsb
inc
lea
cmp
jg
xchg
push
push
adc
ja
shrb
out
sbb
bound
popf
bound
ret
dec
sub
adc
add
cli
sub
cld
cmp
push
sbbl
test
and
pop
es
xor
into
jl
movsl
inc
stos
sub
lods
dec
xchg
jns
scas
insb
xchg
push
inc
fs
xchg
inc
scas
lret
popa
mov
mov
stos
shlb
repnz
cmpsb
iret
cmp
jle
in
push
inc
mov
adc
cmpsl
js
jle
jne
mov
daa
xor
push
jmp
pop
std
stos
mov
push
pop
cmp
or
mov
push
cmc
add
movsl
fs
lret
cmp
add
out
mov
cld
dec
sub
mov
lret
test
bound
pop
mov
add
jecxz
push
push
add
loop
sub
into
lods
lret
jo
sbb
mov
ret
repz
clc
push
sti
jge
std
push
movsl
xchg
in
std
addb
in
add
fimuls
mov
test
xchg
add
pop
mov
or
dec
push
fnstenv
leave
sub
in
dec
fcompl
jmp
repz
jmp
cmpsb
mov
sub
sub
cmp
movups
aam
shr
cmp
cmp
mov
xchg
push
jno
iret
and
lock
iret
jno
fmul
push
lcall
pop
lods
jnp
pop
xchg
out
mov
push
cwtl
push
clc
nop
push
cld
loop
cwtl
pop
insl
jne
mov
aad
sbb
mov
pop
mov
mov
out
notb
mov
or
lcall
lret
cmp
xchg
jmp
cli
jnp
iret
mov
sub
popf
mov
mov
xchg
cs
and
dec
jmp
fisttps
mov
xchg
sbb
inc
jmp
std
or
and
rcrl
test
add
fists
push
push
adc
jbe
out
in
test
gs
ret
push
jae
add
sahf
xchg
xchg
test
cmp
mov
add
sbb
aas
iret
or
add
ret
xor
mov
mov
mov
sub
jae
in
cmp
subl
test
or
jns
imul
pop
pop
pushf
lods
into
sub
inc
fistps
in
andl
fcoml
std
dec
adc
loope
and
mov
call
and
jle
ret
xchg
cs
pushf
mov
adc
mov
mov
mov
lcall
outsb
lods
push
cmp
cmp
popl
xor
adc
gs
outsl
inc
push
es
insl
in
fldenv
push
jge
in
mov
or
and
into
int
dec
add
push
xchg
pushf
mov
cmp
push
outsb
repz
mov
notb
jmp
and
push
xchg
cmp
or
pop
sbb
xchg
push
pop
lcall
inc
sbb
sbb
push
ds
dec
pop
shrl
stos
adc
pop
iret
push
adc
jnp
and
inc
cltd
inc
dec
ja
mov
dec
shl
movsl
ja
pusha
inc
stos
jge
sub
pop
fdivrs
jbe
lret
cmp
out
int3
adc
or
cltd
xchg
ss
mov
popf
out
inc
cmp
cmp
jbe
icebp
sarl
out
jg
outsl
push
xchg
xchg
insl
push
pop
dec
outsb
fcoms
daa
aad
fwait
lret
stc
mov
dec
cmpsb
hlt
jae
xchg
aad
popa
xor
mov
mov
pop
push
leave
fldl
jns
ljmp
aam
cmp
pop
cmp
sub
aas
push
test
or
pushf
push
cmp
push
xchg
ret
push
sar
ja
out
cld
enter
xchg
xor
int3
outsl
fisubrs
shrb
sub
mov
popf
push
dec
cltd
movsb
jecxz
jne
stos
xor
cmp
jb
inc
ficompl
or
lret
mov
dec
inc
push
push
mov
jb
or
push
pop
icebp
cmp
imul
mov
enter
pop
fistps
mov
jl
sbbl
out
cltd
or
add
cld
pop
push
lret
lock
mov
xor
mov
mov
dec
scas
loopne
jo
cmpsb
aam
xorl
cmpsb
jmp
shll
stos
mov
push
fstl
fs
std
jle
into
cld
scas
addl
insl
pop
test
mov
adc
mov
lock
inc
cmc
jp
mov
inc
cltd
mov
sub
inc
jg
jle
out
outsb
adc
lcall
fsubrs
outsb
popl
scas
stos
movsb
nop
cli
lods
pop
mov
call
rorb
std
sbb
jl
aas
negl
sbb
lods
aam
push
mov
inc
rclb
cmp
dec
aaa
data16
popf
movsl
fmull
xchg
or
mov
adc
jge
cld
insl
fwait
enter
clc
les
sub
out
scas
int3
fiaddl
jg
sub
and
dec
dec
pop
outsb
dec
les
pusha
call
and
mov
imul
xor
ret
leave
into
bound
cmp
cli
push
sub
dec
inc
push
sti
cltd
and
lea
xchg
and
mov
jl
lds
lea
pop
lea
sbb
mov
popa
std
inc
repnz
cmp
add
or
add
sub
outsl
adc
and
lahf
pop
int3
lret
fwait
in
lea
or
std
lods
add
mov
mov
ds
mov
cwtl
adc
mov
sub
sub
sub
in
xchg
xlat
mov
jmp
jae
xchg
loop
mov
inc
pop
flds
push
xchg
rcl
or
push
xchg
ds
fsubrs
loope
push
xchg
xor
xchg
xlat
dec
sub
push
mov
movsb
in
xchg
out
push
pop
inc
insl
or
roll
inc
arpl
mov
dec
cmpb
cmp
in
fs
pop
loop
or
pop
and
pop
call
jb
xchg
push
movl
xor
cli
lea
sbb
adc
ja
outsb
and
xor
and
pop
mov
pushf
js
mov
and
int
cmpl
fwait
into
cmpb
sub
cmp
jge
mov
or
xchg
stc
stos
daa
xchg
push
mov
test
sbb
pmaxsw
mov
jb
out
cmpsb
clc
mov
sbb
adc
sbb
insb
pop
ret
out
addr16
scas
jbe
mov
jmp
mov
sub
lea
mov
sbb
es
into
leave
aaa
ja
lock
pop
out
rcl
push
imul
add
lods
cwtl
xchg
imul
adc
aam
inc
cmp
ror
push
mov
push
dec
lods
adc
add
repnz
imul
aam
cmp
add
lock
or
push
fs
lea
popa
stos
negb
mov
es
sub
push
add
mov
and
decl
and
test
inc
movsb
jmp
lea
jne
xor
jl
fsubl
sbb
push
lods
repnz
push
pusha
out
xchg
inc
cmpsb
mov
dec
lahf
jnp
int3
popf
mov
je
sub
pusha
jecxz
cltd
imul
sbb
neg
lods
das
sub
inc
aad
movsl
adc
popa
pop
mov
call
sbb
flds
mov
in
inc
mov
sahf
xchg
dec
mov
mov
adc
iret
pop
das
test
popa
mov
push
in
and
inc
and
xchg
adc
in
ss
xor
pop
cmpsl
scas
adc
fstps
jnp
pop
push
mov
jl
pushw
scas
ja
push
sub
sub
sbb
lcall
addb
cmp
inc
mov
and
cwtl
sbb
adc
faddl
jne
push
mov
xchg
popa
ds
popf
add
outsb
jnp
push
data16
jecxz
cmpsl
jbe
jnp
sbb
cltd
sbbl
sbb
cmpsb
out
jge
sbb
popf
pop
dec
jle
push
add
pop
push
mov
scas
or
and
lea
rcr
mov
daa
sbb
mov
pop
lcall
andl
inc
les
mov
outsb
sub
inc
sbb
aam
sub
subb
loop
pop
dec
in
xlat
pop
fsubrs
je
xor
xchg
rcll
xorb
cmp
pop
outsb
arpl
mov
je
fbld
ljmp
xchg
inc
cld
cs
cmp
xchg
adc
fldenv
sub
dec
data16
out
push
dec
ljmp
repz
pusha
push
fwait
je
les
push
test
sub
mov
or
jle
pop
sbb
pop
arpl
je
mov
aad
xchg
jg
inc
push
outsl
fwait
jl
and
jg
orl
and
clc
out
adc
enter
fs
lea
mov
ret
scas
sub
fistl
and
push
xchg
push
into
pop
sbb
pop
add
inc
out
xchg
sub
mov
aaa
cmp
inc
push
mov
fsubs
pop
divb
rcr
pop
popa
leave
das
adc
movsb
inc
cmp
jne
push
xchg
xchg
push
dec
pusha
lock
sti
int
sub
shll
sub
pop
or
lea
sbb
out
aas
shll
push
std
rorb
lret
pop
xor
aad
jmp
subb
roll
insl
adc
fbld
add
enter
imul
daa
xor
repnz
xchg
lock
ja
das
lods
inc
nop
add
add
fistps
ljmp
std
inc
push
mov
scas
push
pop
jae
icebp
push
mov
sti
fnstenv
xchg
dec
jmp
test
and
and
and
cmp
sbb
push
lcallw
loope
out
jbe
sbb
rolb
call
mov
adc
rcrb
mov
fninit
pop
out
sub
xor
insl
bound
idivl
into
pop
into
int3
inc
push
fwait
mov
cmp
fsubrs
sbb
aam
cmp
and
xor
dec
flds
pop
sub
in
add
iret
insb
pop
sub
imul
cltd
adc
push
pop
in
loopne
imul
xchg
in
push
push
into
mov
xor
sbb
scas
push
cwtl
cmpsl
imul
push
push
std
popf
cmpsb
repz
dec
scas
sbb
jg
mov
mov
mov
xchg
cltd
mov
add
into
push
cmc
pop
adc
adc
adc
jbe
fidivl
pop
push
mov
jmp
dec
mov
sbb
dec
pop
dec
bound
popf
lds
cltd
int3
jmp
mov
xchg
arpl
push
adc
imul
adc
out
add
into
pop
cmpsb
sbb
lods
cwtl
aad
or
out
jne
jecxz
push
cwtl
lds
and
cmpb
fistl
and
cmc
push
leave
cmp
movsl
rcl
add
lcall
fisttpll
lock
test
pop
popa
lods
fwait
mov
lret
in
adc
pop
nop
outsb
mov
and
das
sbb
jp
sbb
push
xor
js
ret
fwait
sbb
adc
dec
es
lds
decl
in
sti
mov
aam
jle
lcall
adc
sbb
jle
xor
adc
pop
xchg
xchg
push
aaa
shrl
or
inc
notl
and
shrb
or
outsl
xchg
fwait
ud2
sbb
jo
xor
ret
mov
xchg
add
mov
adc
push
pushf
xchg
imul
mov
pop
mov
sub
inc
hlt
mov
dec
xchg
mov
bound
cmp
out
hlt
jne
xchg
mov
orl
repnz
add
dec
or
dec
mov
shrb
std
lcall
dec
jae
xchg
loopne
stc
fadds
xor
dec
inc
xchg
pop
fiaddl
adc
shl
sbb
cmp
loop
test
insl
lea
pop
dec
out
cmp
fstps
jmp
shll
or
test
mov
sub
dec
scas
loop
mov
pop
pop
xchg
movsl
jbe
insl
shl
jp
scas
dec
leave
int3
cmpsl
not
push
aam
int3
push
mov
or
mov
jno
jne
out
mov
ds
mov
lcall
xchg
mov
into
aaa
jecxz
jo
lds
sbbl
or
pop
mov
jl
test
lods
add
sub
push
cmpsb
ret
ljmp
mov
add
lea
and
mov
mov
add
das
scas
sub
movsb
push
dec
int3
ja
orl
out
std
mov
mov
dec
aad
and
add
addr16
in
stos
aaa
mov
sub
pop
rorb
lahf
push
shl
mov
jbe
jae
jae
ret
repz
mov
push
mov
pop
stc
out
push
lock
pop
dec
repz
jnp
loopne
scas
inc
mov
int3
fildl
mov
lcall
sahf
jle
ret
dec
inc
stos
je
imul
outsl
and
pop
jle
or
mov
sarb
ret
xor
in
sbb
push
std
insb
sub
adc
lret
std
scas
pop
addr16
and
aad
push
mov
faddl
mov
mov
arpl
cmpsl
roll
cmp
jmp
loop
push
sub
xlat
ljmp
mov
iret
fs
pop
test
subl
lret
sbb
cmpsl
popa
insl
in
mov
jbe
xchg
pop
jmp
in
cmp
xchg
add
dec
lret
xor
dec
xor
mov
jg
pop
push
stos
mov
pop
iret
je
adc
inc
cmp
sub
fisubrl
push
adcb
scas
aaa
push
out
push
fdivrl
testb
or
in
ffree
xchg
in
xchg
rcrl
dec
or
or
sub
loop
mov
loope
das
jmp
push
xchg
push
push
aaa
add
mov
fldcw
lods
out
int
mov
loopne
test
dec
negb
adc
cmpsb
ljmp
adc
mov
cltd
jge
xchg
add
pop
lods
or
jne
pop
push
arpl
and
adc
inc
int3
popl
and
stos
repnz
mov
pop
dec
sub
pusha
dec
lds
pusha
shr
mov
ret
and
subb
cmpb
inc
rolb
inc
mov
imul
outsl
in
cmpsb
mov
adc
rcll
jnp
cld
imul
fidivs
xor
negl
sub
sbb
inc
jg
mov
jne
and
sar
xorb
cmpsl
pop
or
or
fidivrl
das
idiv
push
cmpsl
sub
and
inc
push
inc
jl
mov
test
jns
nop
xor
sbb
bound
frstpm(287
das
xor
xchg
aam
pop
inc
mov
add
xchg
sbb
repz
xchg
pop
call
dec
mov
fstpl
pop
dec
pop
jnp
sbb
xchg
xor
mov
pop
mov
add
and
and
mov
mov
shl
sahf
mov
inc
xchg
in
mov
leave
pop
mov
jecxz
fidivs
arpl
sub
dec
adc
dec
mov
jo
push
aaa
sub
jg
pop
fisttpl
add
xchg
cmp
rorl
jp
outsb
inc
nop
mov
vpsrad
mov
add
je
mov
arpl
mov
shl
cmc
inc
jge
pop
test
adc
pop
pop
rolb
xchg
inc
lcall
js
outsb
inc
pop
mov
lret
leave
in
ja
jecxz
jo
es
inc
lods
jge
pop
adc
fdivr
mov
test
mov
cmp
sbb
mov
push
cltd
inc
imul
hlt
rcr
xlat
les
sbb
mov
push
sbb
add
out
sbb
fmull
lods
adc
lods
mov
repnz
and
aad
cmp
jge
ljmp
das
iret
sub
push
aad
or
jle
scas
in
jmp
sub
hlt
arpl
inc
adc
sbb
mov
inc
imul
pop
cltd
pop
xchg
fdivp
hlt
insb
jmp
lods
jl
mov
dec
mov
pusha
popf
inc
loope
pop
xchg
fwait
idivb
cwtl
mov
push
xor
jno
and
jno
adc
jnp
or
dec
mov
lods
repnz
push
jbe
push
rorl
push
xor
push
fwait
inc
inc
and
test
lret
pop
pop
xor
cmc
mov
add
inc
test
data16
push
mov
xchg
push
pop
push
xchg
movsb
jle
or
addb
test
mov
mov
in
or
out
in
andb
notl
lds
pop
xchg
fldl
test
push
negb
aam
jns
out
lret
inc
lods
mov
push
sbb
sahf
pop
outsb
adc
loope
loopne
shll
and
mov
fstpt
test
dec
lds
hlt
cmpl
outsl
mov
mov
mov
call
adc
sub
xlat
mov
mov
xor
stos
shll
pushf
lcall
fs
mov
sarl
cmpsl
call
les
nop
idivl
rorb
sub
add
in
add
pop
aaa
mov
mov
int3
cmp
adc
pop
adc
je
xlat
mov
push
in
and
dec
jmp
cmpsl
inc
ljmp
sub
adc
add
stc
sahf
ljmp
andl
mov
sub
pop
pop
xchg
push
sahf
jb
mov
sti
shr
ljmp
and
ds
ret
icebp
rcll
mov
inc
lcall
xorl
xchg
push
pop
and
jne
mov
testb
adc
adc
and
lods
xchg
ds
or
nop
lret
or
inc
jae
cli
cmpsl
es
xchg
xlat
cmpsl
xchg
xorl
es
sub
rolb
stos
lods
cmp
jno
and
stos
jmp
out
lods
cmp
inc
out
movsl
or
xor
mov
negl
hlt
mov
xchg
fucomi
push
in
loope
or
insb
lds
scas
mov
mov
movb
xchg
cmp
faddl
loopne
jns
inc
sbb
xor
mov
dec
and
das
ret
adc
jb
pop
push
cwtl
dec
out
sub
pop
sbb
adc
push
sub
mov
aas
push
sub
leave
pop
pop
dec
dec
jae
mov
cmp
insl
std
push
out
xchg
hlt
int
cmp
jo
int
mov
jg
repz
outsl
sbb
push
cmp
lods
sbb
cltd
int3
jo
roll
mov
aad
fcoml
xlat
push
mov
or
xchg
imul
mov
push
jae
adc
sbb
push
in
nop
outsb
cwtl
xchg
call
in
popf
sub
cmp
gs
mov
test
out
sbb
lea
lahf
insb
dec
push
stc
insl
or
popa
outsb
in
insb
sbb
std
stos
inc
cs
sti
movsl
lods
adc
lods
add
mov
pop
fst
mov
adc
push
xchg
xor
insb
inc
adc
fcomip
jo
fsubl
pop
sub
xor
aaa
cmpsb
push
xor
ja
jb
sub
out
lea
lods
dec
jecxz
out
pop
jge
jae
add
dec
cmpsl
lock
je
jbe
adc
push
stos
pop
sbb
push
sub
in
add
jecxz
cmp
out
pop
inc
push
aad
cmp
cmp
sbbl
jmp
aad
inc
stc
jns
out
jle
imulb
xor
mov
cld
inc
jge
roll
rcr
pop
jmp
mov
mov
add
add
mov
rcll
and
cmpsl
cli
xchg
push
pop
ljmp
xchg
inc
push
xchg
sti
loop
mov
ja
mov
mov
call
lods
icebp
jecxz
mov
sahf
into
xchg
fistpl
dec
jl
xor
test
rolb
ret
out
sbb
and
sub
lods
out
xor
mov
fisttpl
xor
test
out
packssdw
push
or
mov
cmp
jp
jae
sub
std
neg
sub
stos
aam
push
mov
cmp
test
push
cmp
fsts
inc
mov
enter
out
dec
pusha
mov
cmp
mov
cmp
scas
into
mov
rcr
push
push
xlat
in
dec
lds
mov
test
mov
xor
aaa
sbb
sub
cmp
aam
repnz
stos
push
cli
fistpll
daa
icebp
xor
testb
imul
out
jns
cld
push
enter
mov
or
sbb
scas
test
cwtl
mov
aad
mov
fadds
xchg
and
inc
cmp
sub
inc
mov
mov
adc
lock
push
rcll
outsl
or
adc
lahf
jp,pt
jo
int3
jb
in
lret
lock
jnp
js
jns
arpl
mov
sbb
test
fnstenv
pop
iret
sub
sub
push
mov
pushf
popa
sbb
loope
in
fwait
mov
cmp
jo
notb
bswap
sub
xchg
call
sbb
add
mov
lods
pop
cwtl
sbb
iret
push
add
test
cmp
dec
leave
push
jg
jo
inc
jge
insl
addr16
imul
push
xchg
mov
js
roll
inc
outsb
dec
mov
adc
lcall
cmpl
stos
xor
mov
xchg
orb
cli
mov
xor
inc
jne
mov
dec
cltd
xchg
mov
or
add
shlb
rclb
icebp
and
rol
movsb
mov
mov
sub
and
outsb
out
mov
jg
cltd
cmp
mov
mov
adcl
jmp
pop
and
inc
imul
xchg
xchg
mov
inc
xchg
mov
push
lods
cmp
pop
mov
lods
es
bound
xor
xor
dec
mov
mov
arpl
mov
call
mov
lock
pop
rcll
out
push
lods
pop
xor
pusha
imul
jne
ss
lods
xchg
mov
push
ss
and
movsl
lahf
fldcw
leave
push
mov
sarb
xor
fisubl
in
sarl
dec
and
mov
fldcw
sarl
push
pop
jmp
in
sbb
inc
scas
rcrl
jle
sub
or
push
into
jns
inc
int
inc
or
inc
ds
out
outsb
add
bound
mov
sbb
jo
adc
ss
inc
sbb
pop
outsb
test
insb
inc
mov
sahf
jns
mov
stos
je
arpl
push
loop
xor
pop
lods
cs
xchg
in
outsl
add
insb
xchg
dec
data16
pop
xor
mov
lcall
jl
pop
dec
cmpb
fsts
mov
adc
popa
inc
push
sub
push
sarl
lahf
or
mov
or
and
pop
xor
and
stos
js
mov
cmp
mov
aam
ja
and
jecxz
inc
push
hlt
imul
jmp
mov
fidivs
and
lods
loop
aas
sti
cmp
aam
fldcw
dec
add
subb
sbb
pop
pushl
out
pushf
cli
cs
push
mov
jno
bound
jl
mov
imul
jo
xor
mov
imul
sub
lahf
pop
jge
adc
cmpsl
mov
pop
loope
test
mov
and
mov
in
xchg
push
iret
ja
jo
out
xlat
mov
mov
lods
ljmp
fmull
jle
jmp
out
loop
dec
daa
inc
mov
xchg
xor
sub
push
xlat
mov
ss
test
outsl
mov
dec
out
inc
inc
cs
test
cmp
push
jno
std
cld
dec
mov
nop
loope
mov
adcl
adc
mov
jnp
idivb
mov
push
cmp
js
adc
sbb
mov
test
clc
mov
pop
mov
incl
lret
jp
cmc
sub
mov
lahf
xor
pop
test
push
sti
inc
shlb
bound
nop
mov
sti
and
or
sti
adc
mov
push
push
lret
dec
adc
int3
sbb
out
cmpsb
bound
test
mov
jb
cwtl
shrb
nop
jns
rcr
call
sti
add
test
incl
fstl
cmp
in
enter
fs
aam
roll
sar
jge
in
cmp
inc
shlb
cmp
mov
jno
push
sbb
mov
pusha
sbb
xchg
cwtl
jns
xchg
stos
dec
mov
and
loop
push
imul
pop
inc
push
pop
icebp
or
fucom
lcall
outsb
pop
ss
adc
fisttps
pop
mov
call
xchg
aaa
rcll
insb
xchg
mov
cmp
jnp
or
pop
jg
pop
movsl
ret
xchg
icebp
or
rcrb
imul
pop
andb
xchg
sahf
jmp
sti
inc
pop
mov
aam
push
mov
pop
out
mov
and
sbbl
mov
ret
aam
mov
push
insb
fisttpll
test
xor
clc
jae
ret
hlt
aam
adc
mov
test
add
ja
shrb
hlt
sbb
sbb
dec
testb
pop
mov
mov
mov
mov
test
mul
outsl
jl
subl
mov
rclb
iret
int3
sub
cs
imul
imul
cmp
aad
into
adc
jp
outsb
sbbb
and
sbb
insl
dec
dec
lret
nop
add
cmp
addl
lahf
pop
or
aas
pop
push
dec
loope
adc
pop
jne
out
rclb
aaa
sbb
adc
sbb
leave
pop
sub
inc
loope
xlat
jb
repz
lea
in
in
mov
xchg
cwtl
mov
bound
pushf
es
and
movsl
mov
insb
jbe
and
ss
inc
adc
cmpsl
bound
sub
push
mov
out
push
inc
lea
popa
loopne
dec
jo
jle
decb
jae
aaa
insb
ret
fdivl
mov
push
inc
jnp
push
mov
mov
mov
or
mov
and
ret
xor
insl
outsb
sbb
sbb
xorb
rclb
es
in
pop
and
das
in
cvttps2pi
pop
jge
mov
mov
not
push
test
sbb
shr
test
jle
jge
and
push
aam
cmp
mov
js
dec
sub
fcmovnbe
push
clc
ret
jno
sub
xor
out
aam
dec
jne
lods
aas
cli
ret
or
loopne
cmpb
fisttpl
cmpsb
pop
jae
inc
out
sbb
filds
ss
pop
cmp
mov
mov
push
xor
jno
fs
adc
cmp
dec
dec
pop
mov
dec
in
mov
fmull
pop
test
jbe
ljmp
jmp
mov
jmp
dec
sub
shlb
je
mov
sbb
fcompl
adc
inc
xor
and
or
sbb
rcrb
pop
push
push
push
and
xor
imulb
insl
push
push
and
pop
out
cmp
fsubr
dec
jno
cmp
insl
pop
mov
mov
xor
negl
cmp
out
sbb
adc
popf
aaa
pop
lea
imul
sub
or
dec
sbb
xchg
imul
mov
mov
jmp
lds
mov
xchg
jnp
or
pushf
cld
xchg
pop
lods
je
sbb
cmpsl
aad
push
addl
and
aas
es
inc
xlat
adc
hlt
int
ret
pop
sbb
shll
push
push
scas
push
cld
pop
sbb
lret
sbb
add
stc
fdivrl
std
lods
in
xchg
insb
sbb
cs
sbb
sbb
inc
inc
add
imul
cmpsb
fs
int3
shr
insl
xor
or
mov
pop
mov
jp
flds
loop
shrb
sarb
sub
andb
mov
in
jle
mov
daa
xchg
pop
insl
add
popa
daa
mov
dec
jmp
dec
scas
dec
sub
push
test
xor
jmp
movsl
jecxz
dec
nop
jnp
movsl
cmp
stos
inc
xor
push
call
or
xchg
xchg
inc
adc
inc
inc
inc
jo
cmp
sbb
insl
imul
xchg
movsl
pop
pop
mov
and
out
xchg
lea
jae
pushf
dec
test
sbb
roll
xor
lods
inc
xlat
cmp
vmwrite
sbb
in
adc
mov
and
jp
add
int
adc
cmpsb
inc
imulb
pop
shll
aam
imul
cld
loop
arpl
rol
add
xor
xlat
pop
gs
xorl
sbb
lcall
test
sub
jno
mov
mov
mov
movsl
test
mov
and
ret
and
cs
sbbb
push
mov
xor
xchg
add
cmp
adc
pop
xchg
jo
jne
pop
out
data16
fstl
les
aas
imul
sbbl
lock
sbb
rorb
lods
int3
in
je
cmc
or
cs
cwtl
mov
adc
xchg
push
xorb
dec
cmp
mov
push
xchg
inc
pop
mov
dec
movl
sbb
xor
roll
and
fsubrp
popa
out
lea
push
addl
sub
fwait
sub
int3
iret
popf
stc
jnp
sub
lcall
mov
outsl
test
cmc
jmp
xor
sbb
dec
test
sarb
xchg
repz
jg
pop
in
mov
mov
mov
pop
xchg
dec
mov
test
jne
lods
shr
loop
lods
inc
movsl
clc
hlt
fldl
aas
inc
xchg
daa
loop
rcrl
jecxz
lahf
jnp
movsb
pushf
lods
lods
mov
sbb
push
adc
sahf
pusha
aam
jge
xor
sbb
jbe
mov
popf
call
jg
cli
sbb
icebp
cmpsl
lock
movsb
das
ror
cwtl
inc
mov
mov
pop
and
int3
mov
or
dec
arpl
lods
add
xchg
or
int
add
add
inc
insl
ret
jne
cmp
out
rcll
jg
negb
scas
pop
imul
ds
xchg
cltd
mov
js
cmp
dec
adc
jo
mov
std
ret
adc
jnp
outsl
mov
loopne
es
in
and
in
hlt
sub
bound
xorl
jle
testl
fcoms
adc
shlb
fildl
push
adc
or
pop
adc
fiaddl
gs
int
jg
aaa
push
repz
js
fs
insl
ret
jecxz
insb
xchg
push
loopne
insl
mov
xchg
adc
push
pop
fidivrl
jo
lea
je
xchg
dec
jae
jmp
shr
jmp
bound
sub
cs
adc
sarl
pop
adc
ja
jmp
insb
insl
sbb
xchg
arpl
sub
mov
mov
jbe
popf
jo
or
xlat
es
cmp
mov
cltd
pop
push
mov
or
scas
xchg
mov
pop
insb
out
dec
std
mov
into
aad
xchg
stos
stos
cwtl
add
jmp
lods
stos
pop
xlat
lock
ds
in
mov
mov
out
nop
insl
push
sbb
clc
sarl
test
pushf
lds
mov
push
imul
mov
xor
xor
xor
cmp
jl
sbb
mov
sbb
loope
pushl
dec
std
mov
mov
adc
mov
out
mov
fcomps
inc
sub
scas
imul
sti
das
repz
dec
jbe
popf
imul
cmp
int3
or
xor
push
dec
dec
dec
and
push
sub
cmp
es
sbb
mov
push
dec
jp
subb
call
pop
xchg
lods
inc
outsb
xchg
push
clc
aam
dec
rcll
rclb
imul
or
push
pop
xchg
sbb
into
ss
mov
mov
aaa
cmp
add
mov
jl
cmp
jle
adc
cwtl
xchg
sbb
pop
pop
jae
leave
jb
pop
mov
mov
mov
imul
pop
in
loope
fbstp
lods
aad
pop
push
pop
call
arpl
out
test
adc
les
testb
mov
push
popf
scas
int3
loopne
pshufw
imul
jmp
and
stos
adcb
push
cmpb
adc
cmp
iret
stos
ss
jl
icebp
ret
lahf
jne
out
divl
lahf
test
arpl
jb
mov
out
add
dec
or
xor
add
cwtl
jae
pop
pop
js
fcmovb
jo
push
inc
cmp
lods
test
sbb
xchg
and
inc
out
jge
lret
outsb
out
imul
or
lret
xor
pop
jns
push
pop
addr16
adcl
jae
push
imul
and
icebp
xchg
aad
aad
sbb
pop
faddl
clc
sbb
ret
xor
sub
and
mov
out
xor
xchg
adc
jle
fcompl
incl
leave
xchg
mov
mov
xchg
icebp
ss
pop
fcompl
mov
mov
scas
cmp
add
stos
orb
mov
inc
push
negl
cli
lret
insl
inc
push
gs
push
jl
inc
fstpl
pcmpeqw
sarb
jbe
sbbb
ds
stos
into
cmp
pop
negl
dec
jbe
xchg
mov
icebp
mov
movb
dec
ss
in
sub
sbb
push
cld
data16
jp
mov
and
pop
pop
stos
sbbb
movsl
mov
popa
jae
or
xor
pop
xchg
mov
push
adc
push
jae
in
jp
in
lods
push
mov
in
out
insb
push
add
and
xor
push
push
pop
jg
pop
push
and
and
fcomi
stc
jno
adc
mov
mov
sahf
xchg
subb
leave
ret
lods
test
cmc
movsl
xor
daa
mov
push
cmp
push
cmp
out
pop
mov
cmpsl
pop
jl
jno
rol
ds
cmpsb
xchg
into
loop
loop
inc
lds
mov
or
out
mov
push
neg
inc
aas
popf
sub
add
maskmovq
divl
push
outsl
fadds
jmp
std
stos
xchg
lods
inc
pop
xor
sbb
loope
jae
inc
sahf
loope
push
popa
shl
adc
add
inc
popa
sub
fistl
ret
es
jno
aam
add
rolb
loopne
outsl
mov
cld
lds
mov
pop
fisttpll
sarb
orl
xchg
cmp
inc
lret
adc
popa
cli
mov
hlt
xchg
test
xchg
mov
add
pop
pop
dec
in
jnp
pop
cwtl
sub
xchg
dec
cld
ficompl
mov
popf
cmp
xchg
cmpl
cmp
dec
mov
aaa
mov
dec
xchg
adc
iret
bound
repnz
push
mul
mov
hlt
cmpsb
aad
mov
ja
pop
test
ljmp
daa
dec
pop
sbb
inc
lcall
push
jge
stos
scas
xchg
loop
test
pusha
out
in
movsl
xchg
les
ror
push
and
add
lea
mov
fisttpl
je
fimull
cwtl
repz
and
dec
pop
jmp
sbb
sbb
jae
out
cmp
sar
test
test
adc
out
test
js
ss
jmp
inc
test
imul
fwait
lods
sar
sbbl
xchg
mov
fs
jno
enter
jmp
jbe
push
jb
lahf
fisubrl
fisubs
jne
inc
push
pop
jp
mov
and
shll
cmp
push
mov
fstl
bound
jmp
jp
add
jl
push
jae
mov
add
stos
fsubrs
cmp
inc
xchg
lock
cmp
pop
mov
mov
pop
adc
or
test
adc
sbb
push
mov
sub
add
mov
dec
imul
ss
lods
xor
push
jae
adc
pop
cmp
out
xchg
jge
cs
cmp
xor
stos
mov
out
push
pushf
ret
xlat
jnp
sbb
mov
mov
xlat
lret
testb
mov
outsl
sbb
je
push
mov
sub
sub
es
stos
aas
jge
std
or
hlt
icebp
sbb
mov
jge
add
dec
xor
mov
mov
xor
cmp
xchg
or
stc
push
mov
shl
aam
loop
sub
test
in
push
mov
repnz
mov
cmp
dec
cmp
adc
add
insb
rcll
adc
push
cld
sub
or
sbb
jp
ds
jg
pop
dec
push
stos
xchg
imul
mov
xchg
sub
jmp
pop
pop
mov
nop
xchg
adc
repnz
adc
push
fisubrs
xchg
add
mov
jb
mov
in
sbb
push
aad
and
out
cmpsl
fs
ss
push
out
fidivrl
cli
push
xchg
nop
pop
push
shr
xchg
mov
mov
dec
mov
mov
ror
pop
aaa
inc
mov
popa
mov
insl
ss
into
xchg
xor
mov
aad
push
cs
shll
or
xlat
jbe
adc
hlt
jo
mov
push
flds
dec
scas
sbb
daa
sub
jg
popf
mov
clc
jl
pop
add
cmpl
dec
pop
cmp
das
mov
pop
stos
or
sub
aad
adc
ret
out
data16
cli
loop
add
enter
jmp
jb
nop
sbb
or
inc
jmp
pop
std
fdivrp
xor
pushf
jmp
nop
mov
sub
enter
dec
mov
pusha
shl
jl
imul
or
out
mov
mov
push
mov
or
sbb
out
lret
adc
cmpsl
mov
pushl
icebp
sbb
push
cmp
add
xchg
push
ja
and
movsl
add
mov
dec
int3
jns
ds
jae
imull
leave
loopne
mov
add
and
adc
mov
cmc
test
fstpt
mov
dec
into
adc
push
push
add
leave
sbb
and
push
nop
adc
daa
in
cmpsl
out
andl
pushf
outsl
sub
ds
xorb
cwtl
cli
mov
fwait
xchg
mov
add
pop
jb
cltd
outsl
sub
arpl
aaa
mov
out
mov
add
inc
or
xor
xor
bound
out
xor
test
fwait
shll
repnz
or
decl
cmp
pop
lret
in
arpl
fcmovbe
clc
aaa
pop
push
jle
cs
mov
mov
ds
imul
outsb
add
scas
and
ret
adc
inc
xchg
and
testb
xchg
sub
push
popf
das
pop
std
rorb
test
jne
add
push
popf
pushf
imull
in
jnp
mov
dec
xorl
pop
aad
xor
sub
jnp
clc
ja
idivl
lods
inc
negl
mov
sbb
out
cmp
rcr
cmp
adc
adc
pop
mov
cmc
out
mov
lahf
iret
pop
xchg
rorl
bound
or
inc
mov
lock
pop
adc
out
and
cmp
into
adc
je
outsb
xor
nop
bndldx
and
cmc
pop
sbb
in
loop
dec
std
subb
orl
mov
mov
xorb
jp
jo
out
inc
xor
xor
sbb
ss
loop
dec
mov
fistpl
test
sub
fdivrp
fsubrl
faddp
fcoml
jae
mov
into
add
out
cmp
mov
enter
mov
sub
std
shrb
les
data16
int
sub
pusha
imul
out
sbb
sub
je
movsl
sub
pop
add
rcrl
xchg
movsb
ds
loop
sub
test
sub
mov
prefetch
sub
aaa
test
or
mov
push
ret
push
mov
pop
in
leave
in
pop
dec
mov
sub
jmp
mov
pop
jl
inc
jo
and
clc
loope
push
mov
test
dec
add
pop
mov
fxch
push
bound
push
mov
mov
adc
lock
mov
pop
bound
or
dec
insl
push
ja
xchg
xor
mov
dec
adc
in
iret
mov
push
ds
inc
jno
jg
sbb
push
xchg
add
or
rcl
nop
aam
movsl
fnstsw
movl
ja
cli
add
jne
and
dec
dec
mov
call
subb
dec
push
hlt
pusha
imul
daa
jo
scas
cs
test
dec
ss
ds
sub
aaa
fsub
jbe
xchg
pop
xchg
xor
pop
repnz
repz
xchg
sbb
mov
stos
cmp
popf
dec
lods
scas
or
leave
cmp
pop
stos
jmp
sub
lods
data16
mov
add
pop
icebp
jo
mov
iret
push
outsb
sbb
jg
movsl
xchg
push
xorb
test
rolb
mov
lods
inc
call
mov
mov
cmp
xor
pushf
dec
outsl
sbb
aaa
cmpsl
int
rol
xor
adc
sub
push
fwait
mov
int
jae
sbbl
push
ret
cmp
jb
clc
mov
cmp
leave
jns
rclb
or
stos
lds
adc
stos
imul
cltd
dec
lret
je
arpl
in
ficoml
xchg
jae
jl
cwtl
fbld
out
mov
pop
adc
idivb
sti
dec
out
mov
fdivl
js
lahf
loope
inc
scas
cmp
sbb
cwtl
rolb
push
sub
or
insl
xor
pop
outsb
and
adc
mov
hlt
inc
jo
lahf
inc
adc
fildll
lock
xor
mov
cmpl
mov
push
mov
aas
stos
loope
lods
jbe
test
dec
das
sub
adc
icebp
dec
xor
cmc
mov
std
jo
mov
shll
xchg
sub
and
das
sbb
mov
sbb
cmp
push
cs
add
pop
jmp
and
and
push
mov
test
jl
leave
pop
call
xor
cmp
dec
sub
out
adc
test
xchg
mov
xchg
loop
sbb
loop
lcall
push
cwtl
sub
mov
xchg
xor
ret
cltd
or
push
in
mov
inc
icebp
push
inc
add
mov
sbb
sub
xor
js
imul
outsl
mov
xchg
jne
movsb
jne
jg
loop
mov
dec
push
jns
xorl
and
sbb
ja
inc
or
mov
or
mov
mov
push
jo
jo
fildll
cld
or
adc
jbe
xchg
add
dec
stc
pusha
adc
das
mov
sub
mov
or
scas
roll
loope
mov
push
lea
mov
fwait
sti
jge
push
pop
sti
xchg
push
inc
jecxz
lods
mov
arpl
fmuls
fs
je
cltd
jno
out
iret
mov
repnz
je
repnz
or
mov
int3
movsb
lods
push
mov
xor
xchg
ljmp
adc
mov
cmp
rcll
add
icebp
imul
call
sbb
adc
int3
xchg
rcr
rorb
scas
ret
inc
lods
pop
cvtps2pi
loope
add
cmp
fwait
mov
dec
xchg
xor
clc
push
pop
adc
in
sbb
in
cmp
les
mov
adc
xchg
cmp
fisttps
xchg
dec
loope
mov
push
mov
fidivl
js
mov
pop
insl
shll
jl
dec
call
pop
pop
fdivrs
lock
arpl
lret
lds
fdivl
sbb
insl
rcll
fnstenv
in
sbb
add
loope
pop
xchg
mov
outsl
inc
sub
idiv
push
gs
popa
pop
jno
addr16
pushf
lea
inc
outsb
xchg
mov
and
adc
mov
cmp
cmp
jg
arpl
push
adc
movups
mov
jnp
call
fcompl
ss
mov
cwtl
fchs
inc
mulb
outsl
int3
mov
xchg
push
mov
fsubr
push
xchg
pcmpeqw
adc
xchg
xchg
addl
sti
rorb
rcl
add
ja
xor
in
xlat
lahf
addr16
inc
fcoml
push
jne
vunpckhps
rolb
fnstcw
or
dec
loop
sub
ja
cltd
dec
decb
or
dec
xor
int3
scas
mov
cmp
dec
test
cwtl
movsl
daa
std
repnz
rcll
pop
xorl
dec
shrl
jne
out
dec
mov
cmp
test
jmp
mov
das
ret
dec
push
push
and
ds
xchg
add
push
push
xor
pop
mov
push
js
shrl
popf
lods
leave
test
jmp
xchg
scas
mov
movsl
je
test
sub
jno
xchg
add
cltd
ds
rcl
cmp
pop
pop
lcall
ljmp
xor
jp
fisttpll
xorl
xor
fs
movsl
cmp
mov
mov
inc
ja
nop
xor
stc
sub
fwait
loop
jmp
mov
pushf
cmp
les
xchg
bound
bnd
adc
mov
mov
pop
push
cmp
insl
pop
mov
add
sti
dec
push
ja
xchg
mov
push
mov
arpl
subl
sahf
pop
or
fstl
out
sub
xchg
jle
jmp
into
testl
bound
and
mov
negb
bound
and
ljmp
aas
lods
mov
aaa
xchg
in
jecxz
stc
in
insl
lods
sbb
pop
adc
adc
lods
ret
pop
lods
cld
add
bound
inc
loop
xchg
out
ja
mov
push
and
add
sbb
or
mov
std
stc
insl
or
loop
jmp
mov
and
icebp
lds
jb
scas
adc
stc
and
loop
call
aas
ljmp
aaa
xchg
outsb
out
js
pop
mov
jns
adc
loop
call
adc
mov
pop
inc
mov
jbe
xor
sub
adc
lods
xchg
mov
sbb
pushf
loop
jmp
mov
in
imul
idivl
stc
lods
sbb
sbb
insl
adc
hlt
ja
xchg
jp
push
or
int
or
stc
cmc
push
jge
ljmp
or
gs
adc
test
popa
sbb
call
jmp
mov
dec
cmp
loop
out
shlb
xor
mov
add
xchg
pop
ljmp
fdivl
jmp
popa
gs
in
push
out
add
xchg
inc
jp
xor
push
mov
mov
jmp
cmp
idivl
sti
sub
jb
push
out
jecxz
jbe
imul
in
in
push
xchg
sbb
mov
je
sti
and
xchg
jl
fwait
cmpsb
push
adc
mov
mov
push
add
loope
adc
test
imulb
lcall
aaa
loope
and
stc
out
and
mov
and
fimuls
or
loop
call
out
jmp
cmp
fistpll
aaa
insl
rcrb
mov
inc
pop
push
pop
adc
std
dec
mov
pop
dec
stc
std
or
loop
jmp
mov
sub
rcr
add
xchg
or
aaa
pop
rorb
xor
js
loopne
add
mov
cld
and
data16
jno
popa
inc
adc
lock
adc
aam
nop
jmp
jae
jno
pop
xchg
and
out
inc
loop
call
out
js
pop
fsts
rclb
xchg
decl
std
es
stos
ja
leave
mov
sbb
jne
jbe
or
or
in
imul
pop
fwait
sbb
cltd
pop
jne
pop
sbb
adc
mov
fxch
inc
xchg
mov
xor
test
mov
xor
pop
push
xchg
adc
std
mov
push
imul
dec
bound
pop
ror
jl
mov
push
dec
dec
outsb
repz
cmp
mov
sbb
jo
xchg
xchg
pop
sbb
lods
cmpb
in
cld
repnz
push
cmc
jp
aaa
in
rcrb
push
fstp
outsl
inc
ja
cmp
cmp
loop
call
and
aam
pop
fldcw
aaa
mov
je
call
ljmp
xchg
lods
ljmp
lret
popa
repnz
lcall
fstps
adc
stc
rcrl
rcl
fs
xchg
iret
std
jg
or
sti
lcall
sub
mov
jge
jle
std
clc
add
andb
mov
xchg
adc
jns
fs
std
and
cmp
jp
aaa
into
aam
dec
daa
push
out
mov
add
sbb
jp
aaa
pop
shlb
mov
push
outsb
xchg
ja
cmp
inc
xchg
pop
pop
ret
adc
clc
mov
mov
xor
loop
call
or
cmpb
fstps
aas
aaa
xchg
hlt
jge
mov
push
ja
popa
iret
lods
outsb
jbe
push
out
push
pop
lods
int3
fucom
jbe
idivb
cmp
and
aaa
pop
rcr
jl
mov
mov
lods
or
xchg
pop
popa
notl
addr16
in
mov
fildll
jbe
into
cs
ljmp
xchg
mov
rcrb
xchg
mov
push
mov
cmp
lods
mov
test
loope
adc
insb
mov
addr16
sbb
cmp
fstps
xchg
dec
jp
aaa
inc
shlb
aaa
push
outsb
aad
cs
test
adc
pop
repz
jae
jmp
push
xchg
mov
ret
inc
xchg
iret
jp
aaa
shlb
mov
outsl
push
ja
cmp
xchg
add
mov
stc
repz
imul
fwait
loope
out
arpl
in
xchg
int3
std
push
mov
pop
dec
stc
decl
loop
jmp
mov
cmp
or
or
lods
lret
ja
xchg
cmp
xchg
out
cmp
add
fwait
inc
xor
mov
jb
lret
mov
aad
push
push
mov
out
clc
stos
pop
or
adc
loop
call
xor
mov
jmp
ja
out
outsl
rcrb
addr16
rcrl
iret
std
push
mov
pop
dec
stc
decl
loop
jmp
xchg
sbb
fs
mov
fstps
xchg
shlb
mov
push
outsb
xchg
ja
cmp
inc
xchg
pop
pop
ret
adc
clc
mov
mov
xor
and
adc
adc
mov
lahf
xchg
or
xchg
stc
pop
or
loop
jmp
mov
xchg
cmp
push
insl
sbb
fldl
adc
std
xor
or
loop
jmp
mov
sbb
mov
pop
jp
aaa
call
insb
jl
mov
out
outsb
insl
ja
cmp
fidivs
xchg
pop
jne
adc
mov
xor
stc
sub
loop
call
add
lcall
xchg
xor
in
jge
mov
push
outsl
outsb
outsb
in
imul
pop
mov
pop
push
stc
or
loop
jmp
mov
push
cmp
fldcw
fistl
rorb
push
cmp
outsb
imul
jbe
xchg
pop
xchg
out
push
std
fmull
or
loop
call
cmp
fldcw
adc
mov
or
add
mov
je
cmp
sbb
adc
out
sbb
ret
and
ljmp
xchg
aas
jp
aaa
aaa
mov
out
in
jge
std
jmp
cmp
fisubrs
xor
test
inc
adc
std
jg
pop
ss
mov
fsub
push
jmp
mov
add
sbb
adcb
test
loopne
cmp
fdivrs
inc
pop
sahf
sbb
mov
jmp
push
movsl
fstpl
mov
cltd
push
pop
popf
dec
insl
gs
imul
andb
xor
jge
outsb
movsl
imul
xor
lods
loopne
and
lods
inc
lods
push
jmp
rorl
and
stc
mov
pop
fnsave
nop
arpl
sub
dec
dec
adc
sub
fwait
out
jecxz
mov
push
scas
jp
cmp
lahf
dec
popf
ret
les
cmp
mov
push
out
js
or
rorl
out
cmp
push
outsl
jo
jecxz
bound
and
nop
cmp
les
stos
call
outsb
mov
xor
xor
in
stos
xchg
fsubrs
push
sbb
and
sti
in
and
mov
push
mov
push
aad
mov
les
cmp
inc
mov
in
add
imul
or
hlt
dec
mov
pop
ret
mov
pop
shl
cmp
clc
cmp
stos
icebp
or
les
xor
jne
sub
mov
xchg
mov
movsl
xchg
sbbl
popf
push
pop
pop
ja
lcall
or
jl
aas
cli
push
mov
mov
pop
push
jbe
adc
insb
jnp
scas
gs
sbb
pop
shll
nop
dec
cmp
push
nop
and
mov
std
test
into
lds
push
enter
push
loop
inc
enter
call
imul
fs
dec
imul
pop
xchg
jo
xchg
popf
push
xor
cmpsl
outsb
popa
jg
adc
loopne
pop
push
js
mov
jb
push
sub
jno
sbb
push
inc
xor
mov
or
mov
xor
mov
xchg
jg
jg
jl
hlt
loopne
insb
popa
cltd
pop
in
jno
push
mov
fwait
lcall
out
mov
or
push
and
sti
jp
pop
lret
aad
insl
or
push
imul
js
fucompp
mov
mov
sbb
push
sti
cmp
adc
or
lds
rcrl
cltd
dec
arpl
fs
cld
imul
mov
pusha
xchg
add
jp
add
jp
add
jp
or
push
push
push
adc
dec
add
push
cld
xchg
rcr
and
sub
xchg
and
outsl
test
in
xor
adc
mov
hlt
push
in
ret
iret
add
cmp
dec
iret
arpl
fidivrs
adc
push
xchg
mulb
dec
negl
rcl
xlat
jge
push
mov
jge
pop
lahf
push
sbb
ret
jg
imul
pop
sub
jp
pop
or
mov
pop
fadd
lret
jecxz
rdtsc
ss
and
aam
xlat
mov
xchg
xlat
and
vminss
lcall
push
cvtps2pi
and
cld
into
push
sbb
sbb
mov
sbb
push
scas
lds
int
popf
push
pinsrw
push
lea
jbe
xor
mov
and
int3
add
fwait
inc
pop
daa
push
inc
aaa
pop
addr16
stos
mov
lds
add
push
adc
or
lods
gs
daa
test
outsl
lds
popa
mov
jne
ds
cmpsl
call
xor
jle
push
rol
jb
fsubr
out
aas
mov
xchg
jge
sub
imul
add
fnstcw
inc
outsb
clc
sbb
daa
lcall
push
inc
push
add
cmp
clc
or
call
scas
sub
into
cmp
or
mov
mov
mov
mov
mov
xchg
mov
xchg
data16
mov
lods
inc
jns
mul
or
mov
shll
dec
push
xchg
popl
lcall
push
pop
sub
cmp
lods
ror
push
jb
xchg
push
pushf
sub
sarb
hlt
sub
adc
jo
cs
sub
or
mov
sbb
pop
pusha
jle
sbb
fcompl
adc
xor
dec
add
into
sub
mov
loope
loop
adc
cltd
sbb
mov
movsl
jb
jg
jae
test
lcall
out
out
fdivrl
xor
pop
push
xchg
mov
shll
xchg
inc
xchg
dec
adc
xchg
daa
sti
in
aaa
pop
jae
jmp
lds
clc
outsb
fdiv
leave
lods
mov
hlt
scas
ret
jb
push
leave
ficoms
das
dec
add
or
outsb
fmul
jecxz
pop
iret
cltd
jnp
subb
mov
imul
rcll
cmp
xchg
mov
push
loopne
hlt
xchg
push
add
xor
mov
or
xchg
in
push
mov
stos
lret
aad
add
cmp
dec
cmc
mov
out
jmp
push
std
fld
loopne
xchg
shlb
sbb
push
ja
cmp
insl
and
add
ljmp
imul
cmp
daa
sbb
aaa
xchg
lock
jns
sub
cmp
es
pop
adc
xchg
shr
les
push
fwait
outsb
insl
stc
aas
stc
loop
std
adc
fsubs
mov
and
xchg
mov
jge
mov
jno
mov
mov
out
test
xchg
lods
jl
fsubs
sbb
cmp
orb
shrl
movsb
mov
mov
push
adc
cmp
int
inc
pmulhw
out
push
mov
das
loop
call
roll
lcall
xchg
stc
cmp
ret
ret
xor
popa
pop
aad
adc
nop
inc
jmp
jl
mov
loop
mov
lods
pop
popa
adc
subl
imul
cmp
jnp
iret
or
insl
popa
cmp
xchg
loope
punpckhdq
ja
mov
loopne
mov
lods
and
xchg
pop
sahf
lods
repnz
test
and
push
cmp
and
adc
lods
fidivrs
cmp
loope
cmp
stos
jp
inc
xchg
popa
jnp
test
stc
in
pop
loop
jle
cmp
mov
addl
cltd
push
pop
in
clc
or
add
imul
mov
mov
daa
or
loop
jmp
xchg
pop
xor
fdivrl
fs
outsl
and
lods
mov
xchg
ret
push
aad
sti
and
dec
xchg
pop
lods
iret
dec
fisttpl
in
mov
adc
shr
fdiv
xchg
cmp
pop
js
sbb
push
aaa
sub
mov
imulb
ja
cmp
lods
mov
rclb
ret
shlb
out
mov
mov
aam
test
jbe
xchg
pop
and
adc
push
insl
in
jae
jo
xchg
sub
aam
add
adc
mov
and
stc
or
xchg
notb
outsb
jmp
mull
cmp
sbb
lcall
shr
push
mov
nop
or
mov
lods
xchg
mov
mov
mov
jecxz
push
inc
mov
loope
cmp
popa
std
xor
jnp
out
je
and
xchg
push
js
enter
xor
jmp
outsb
push
fstp
outsl
dec
ja
cmp
test
iret
xor
out
int3
ja
cmp
cmp
mov
in
out
mov
sbb
stos
call
dec
ljmp
fs
clc
ljmp
adc
std
mov
into
ljmp
xchg
ret
jp
aaa
fnop
cmp
jne
xlat
incb
std
push
cmp
inc
fs
out
bound
je
cmp
sahf
lods
mov
loop
push
loop
fadds
sub
insl
mov
aam
jne
out
rcrb
stc
xchg
test
int
insb
fmul
dec
pop
ror
inc
shll
ret
pop
in
mov
fiaddl
fcmove
stc
cmpsb
xor
in
fisubrs
cli
leave
leave
jns
aad
bound
js
adc
in
sub
mov
into
dec
pop
add
rolb
push
push
inc
pop
popa
sbb
push
insb
mov
jnp
mov
and
dec
push
mov
dec
adc
stos
inc
inc
ret
data16
mov
push
into
cmpsl
add
pusha
test
in
out
mov
mov
pop
dec
sahf
in
push
mov
aad
popf
dec
sbb
push
je
into
shll
fsubl
sub
or
mov
fildll
jge
sbb
mov
fcomps
xchg
les
stc
fwait
in
lea
mov
cs
out
hlt
clc
lcall
out
lret
sub
dec
xchg
sbb
push
sub
mov
loop
sub
test
rolb
pop
test
dec
inc
es
jno
xor
mov
int3
push
mov
ret
js
mov
mov
pop
cmpsl
pop
jo
loope
jge
push
sub
xor
pop
aaa
lods
popa
cmpsl
movsl
push
sbb
frstpm(287
jae
sbb
testl
decl
idiv
fdivp
aaa
or
add
mov
orb
jmp
mov
fsubrl
hlt
imul
fisttps
in
cld
ljmp
mov
repz
dec
jns
js
push
or
nop
insl
insb
into
cmpsl
add
cmpsl
daa
out
es
and
cmp
cmpsb
std
je
sti
mov
aaa
imul
jl
sti
scas
mov
out
push
hlt
repnz
and
aam
loop
movsb
fs
cld
test
setno
cs
and
int
pop
aad
data16
fdivrs
xchg
int
pop
test
lcall
mov
cmpsb
outsb
mov
cld
or
or
pop
xchg
inc
jp
ret
xlat
push
sbb
lea
inc
leave
mov
jns
fs
repz
lcall
lea
imul
outsb
jp
fmull
rcr
ds
subl
mov
inc
cmpsl
or
jl
outsl
jp
pop
outsl
testb
adc
stos
cmp
bound
sub
push
pop
sbb
xchg
lcall
mov
mov
popf
std
aaa
fstl
mov
pop
adc
push
jns
in
mov
btc
std
iret
jnp
sub
hlt
es
xchg
pop
lds
push
divb
cld
sub
xchg
cld
dec
repnz
setp
cs
pop
in
aas
push
sbb
adc
push
sub
test
xchg
push
lds
pushf
pop
inc
imul
sbb
mov
mov
jle
or
ficoms
sub
pop
fisttps
lret
sub
pop
clc
mov
cmp
negl
fimull
xorb
shrb
xchg
psllw
mov
aam
push
cmpl
cmp
adc
add
cltd
fsts
xor
cmp
add
clc
insl
aaa
movsb
lock
in
stc
mov
pusha
mov
push
cmpsl
fwait
sti
lods
cmp
jg
cli
or
sub
shll
jecxz
std
pushf
in
jecxz
in
dec
mov
out
iret
sbb
inc
jecxz
aad
fwait
dec
add
cmp
subb
sahf
sub
xlat
xlat
pushf
repnz
adc
outsb
ret
mov
out
mov
loopne
xchg
dec
mov
cmp
jge
xchg
cwtl
jl
fimuls
lods
push
lea
ss
inc
mov
insb
bswap
mov
dec
lcall
mov
shrb
das
arpl
mov
inc
pop
add
jp
xchg
mov
push
testb
add
std
mul
mov
pop
xchg
jl
pop
pop
test
pop
mov
mov
out
ja
mov
pop
mov
mov
cmpsl
mov
push
xchg
mov
es
and
fidivrl
xor
roll
lods
jae
clc
adc
call
jno
dec
jnp
cmc
jp
dec
scas
and
insb
ss
and
cs
mov
jl
mov
xchg
sbb
addr16
inc
je
repz
mov
lcall
js
test
pop
push
xchg
fldcw
shll
int3
daa
jp
xchg
add
int3
xchg
loope
call
jle
mov
cmp
mov
arpl
dec
adc
daa
dec
das
inc
test
or
mov
inc
ss
fmull
bound
imul
xchg
jp
div
mov
loope
aaa
insb
mov
or
out
bound
mov
dec
call
push
movsb
mov
movsl
cmp
xor
outsb
pop
jecxz
jge
jmp
mov
jo
xchg
imul
idiv
int
mov
xchg
sbb
dec
push
pusha
pushf
add
lcall
shl
ljmp
jmp
out
out
call
xchg
and
les
cmp
push
sbb
repz
cmp
mov
lcall
fiaddl
gs
or
aaa
jl
or
sbb
push
jne
std
bound
bnd
outsb
add
insb
faddp
shlb
ss
sbb
inc
push
dec
xchg
lods
sub
popf
xor
lods
imul
ja
jmp
push
ds
lret
mov
xchg
out
inc
lock
clc
inc
xchg
add
aaa
mov
push
or
dec
jecxz
mov
and
xchg
mov
mov
or
pop
insl
pop
push
insl
sub
push
fisttpll
adc
lret
scas
xor
in
adc
out
pusha
push
repnz
es
icebp
jns
fs
and
scas
cmp
pop
jae
cmp
xor
xchg
add
out
add
fimull
sbbb
jbe,pn
movsl
or
push
gs
xchg
xor
mov
test
push
push
or
mov
int3
outsb
arpl
add
test
shl
dec
xlat
sub
fisttps
jae
ja
outsl
mov
jecxz
mov
int3
in
xor
pushl
stos
jl
mov
popf
stos
addr16
mov
adc
ror
bound
repz
mov
add
mov
enter
xor
arpl
sbb
xlat
cwtl
imul
cwtl
inc
std
push
dec
dec
jns
aaa
popf
mov
sub
test
aad
flds
inc
iret
lret
dec
mov
jnp
add
sub
mov
mov
xor
lret
jge
or
in
sbb
jbe
in
pop
clc
pop
adc
inc
imul
inc
mov
fmuls
jge
jp
push
mov
fisttpl
imul
mov
mov
icebp
lods
dec
stos
call
inc
jbe
pop
jg
mov
xor
xchg
shrl
add
xchg
inc
cmp
clc
or
cmp
sbb
jno
addl
jns
shll
xlat
mov
xor
pop
dec
mov
iret
and
in
loopne
jg
int3
pusha
scas
and
aaa
mov
lock
cmp
or
test
popa
cmp
insl
pop
mov
jp
xchg
cwtl
xlat
mov
out
ds
add
rcl
xchg
icebp
fwait
movsb
cmpsl
lea
and
clc
test
std
inc
lcall
inc
mov
js
addr16
add
cmpl
sbb
jmp
jge
mov
inc
mov
jp
xchg
aam
addr16
inc
add
xchg
push
lods
stos
mov
mov
test
push
and
xchg
insb
fwait
mov
outsb
jnp
sub
out
jp
mov
sbb
lcall
jp
sbb
push
mov
pop
xchg
sub
jns
sub
mov
mov
repnz
mov
push
cwtl
imul
and
fistpl
mov
sub
gs
jne
gs
inc
sarb
xchg
jp
in
fnstcw
js
das
cmp
loop
cwtl
je
pusha
ficoms
cmp
fildll
sbb
xor
icebp
cmp
xchg
push
cmp
out
lret
ret
lret
loope
or
ret
out
loop
mov
or
mov
pop
stc
ds
cmp
sub
into
sub
mov
dec
iret
popl
js
movsb
in
push
stos
cld
in
lock
popf
ja
inc
in
fnsave
out
pop
xlat
sub
pop
aad
hlt
loopne
xchg
stos
jp
ret
int3
hlt
pop
rolb
call
nop
aam
sub
les
in
xchg
sti
mov
outsb
popf
mov
fcmovu
jge
or
push
push
mov
jnp
fildll
mov
data16
imul
test
pop
pop
mov
and
fwait
jp
cmp
out
adc
or
cmc
jb
jmp
popa
jg
mov
ds
lcall
call
call
mov
insl
or
mov
fiadds
mov
fwait
arpl
data16
in
xor
mov
lods
sti
or
xor
loope
clc
ljmp
fimull
pop
dec
xchg
or
outsb
cmpsl
das
mov
incb
dec
scas
dec
jmp
cmp
add
and
mov
mov
mov
xchg
loope
decl
fwait
jecxz
aaa
xor
stc
xchg
ret
jp
ja
psraw
sahf
xchg
mov
lret
mov
outsl
adc
sub
shrl
js
mov
jnp
lahf
outsl
popf
daa
adc
ret
out
jne
shrl
mov
cs
mov
jmp
lods
insb
jmp
aas
jp
in
mov
xor
sbb
ljmp
cmp
add
pop
shrl
fisubs
pop
negb
cmp
mov
mov
ss
ss
xor
inc
fldcw
and
outsb
ljmp
pop
cmp
scas
mov
aad
jecxz
xor
call
inc
enter
cmp
stos
repnz
push
jle
daa
mov
aaa
aad
mov
inc
inc
xchg
inc
pop
fstp
jg,pn
push
clc
adc
jle
fildll
or
rclb
mov
jge
mov
lcall
mov
lock
sub
lock
loop
lods
cld
dec
xchg
mov
mov
mov
inc
and
jge
cmp
test
and
in
cmp
cltd
sub
push
test
pop
es
scas
and
rol
jg
imul
std
jne
push
je
cmp
lahf
flds
xor
lds
je
scas
fs
lcall
xchg
adc
cmc
insl
outsb
mov
in
jp
lods
sub
ljmp
test
fwait
ja
xlat
jno
jns
inc
inc
out
push
jp
cmp
bnd
pop
testb
test
cmp
jne
ljmpw
xchg
int
jns
push
inc
fsts
or
xor
pop
push
aaa
sub
xor
fldenv
xchg
push
popf
jp
push
enter
dec
notb
int3
dec
movsl
adc
dec
ljmp
pop
and
pop
notb
fsts
jbe
fldt
test
add
sub
xchg
scas
test
pop
inc
jmp
loopne
mov
insl
loope
adc
into
notb
imul
ja
jae
xchg
xor
in
adc
and
mov
and
fbld
cmp
scas
and
and
and
adc
hlt
jl
out
adc
pushf
stc
andps
das
push
int3
leave
jg
fmul
dec
push
in
enter
enter
enter
enter
enter
enter
enter
enter
adc
out
inc
mov
aas
dec
pushf
fildll
lods
jne
lock
jne
lock
lahf
lock
je
lock
mov
lock
fcomip
cmp
scas
lock
je
lock
je
sbb
mov
mov
lret
jne
lock
jne
lock
lock
je
lock
je
lock
mov
lock
fcomip
cmp
scas
lock
je
lock
je
sbb
mov
mov
vmread
das
js
std
jg
fdivr
dec
js
cld
lahf
js
cld
outsl
js
cld
mov
js
cld
fistpll
cld
scas
js
cld
js
cld
iret
jp
adc
and
xor
rsqrtps
das
push
int3
fistpll
dec
push
in
ficomps
push
or
mov
push
sub
fists
fisubrs
push
pop
fmulp
pop
mov
push
out
fidivs
jp
iret
pop
dec
test
push
push
aam
daa
push
movsb
fbstp
hlt
filds
fists
push
in
mov
xor
xchg
push
push
fisubs
push
je
push
inc
rcll
mov
loop
imul
add
adc
and
xor
movb
push
dec
sbb
bound
jb
cmp
orb
fimull
stos
dec
xor
cli
dec
inc
lret
fs
jmp
xchg
or
push
out
push
out
push
out
push
xor
in
cmp
aaa
pop
pop
imul
inc
xlat
inc
cmc
sub
sbb
push
jecxz
add
shll
adc
xor
jmp
ja
icebp
xor
mov
add
std
add
mov
pop
xor
mov
jnp
clc
sarl
push
call
ficomps
repz
mov
iret
pop
inc
mov
cmpsl
dec
pop
mov
dec
aas
shll
stc
nop
pop
adc
nop
inc
out
out
nop
outsl
cmp
push
in
xchg
jl
cmp
mov
sti
fldl
push
cs
push
pop
sarl
inc
mov
xchg
aad
dec
or
mov
lock
sti
je
lock
testl
mov
cmp
push
cld
mov
jns
push
ficoms
ficoms
sbb
cwtl
cli
std
inc
push
in
inc
jl
push
dec
rorb
cmp
mov
inc
not
adc
jge
loopne
mov
sbb
adcl
jbe
jne
cmp
xchg
push
ljmp
scas
mov
pushf
loop
mov
or
repz
lahf
jp
and
or
stos
dec
es
sbb
cli
mov
xor
cmpsb
inc
inc
leave
sbb
mov
cmp
cmp
mov
xchg
pop
push
dec
mov
out
test
pop
push
stc
into
test
fiadds
enter
loopne
jge
cmp
xchg
je
ret
out
sbb
aad
adc
dec
cmp
push
sbb
mov
push
fwait
add
xlat
std
sbb
mov
mov
cmc
popf
dec
cmp
fcompl
js
out
mov
adc
int
js
fistl
pop
popf
mov
adc
lret
into
inc
inc
jae
arpl
pop
mov
sbb
data16
or
mov
sub
outsb
adc
div
ljmp
dec
out
xchg
cltd
push
sbb
push
jge
mov
aam
adc
xor
jmp
gs
repnz
pop
clc
pop
sub
add
jmp
fiaddl
jecxz
mov
dec
ss
cld
dec
push
fs
add
out
loopne
sbb
jmp
mov
push
repz
xchg
dec
out
xchg
in
daa
mov
xchg
popa
adc
roll
xor
ja
daa
sbb
mov
rcrb
cld
bound
cld
mov
js
out
xchg
xchg
cmp
mov
mov
pop
jno
pop
jae
add
fidivrs
sub
sbb
xor
sti
and
mov
jo
clc
dec
fwait
pop
lock
push
notl
pop
pop
inc
call
or
dec
aaa
sti
push
je
add
pushf
jmp
fwait
xchg
sbb
lcall
andl
fsubl
inc
lods
les
cmp
mov
popl
clc
rcll
in
imul
icebp
jo
push
dec
sub
xchg
test
inc
pop
mov
dec
push
mov
xorl
je
or
and
pop
inc
mov
push
out
fwait
xorb
aad
pop
cmpsb
rorl
xor
add
push
or
mov
inc
test
inc
mov
jmp
add
js
or
xor
cmc
sbb
popf
popf
cmp
mov
mov
mov
inc
popa
add
test
jno
ret
scas
adc
push
cmp
add
lret
fstps
fbld
push
adc
jbe
repz
repz
hlt
xchg
lock
hlt
mov
mov
or
add
popf
mov
push
sbbl
aam
jmp
ficoml
out
jbe
xchg
dec
out
nop
popf
and
mov
xchg
cli
shlb
sbb
mov
or
sbb
test
testl
lahf
pop
sahf
popf
inc
jnp
fisttps
decb
imul
dec
testl
inc
loop
pop
int3
fdivrl
add
movsl
rcrb
les
jecxz
and
in
sbb
mov
out
fucomip
push
or
iret
rclb
lods
push
adc
or
mov
push
nop
adc
popf
cmp
imulb
cld
xchg
std
mov
jb
imul
sbb
xchg
je
je
jle
lock
mov
sub
fidivs
pop
rol
fwait
fwait
in
lock
stc
inc
inc
iret
enter
sbb
daa
out
push
out
push
out
xchg
imul
mov
das
dec
dec
aad
imul
xor
sub
movl
sarl
fst
jle
add
jmp
fmull
orb
imul
xchg
call
push
hlt
mov
lahf
xchg
cmp
arpl
xor
xorl
xchg
and
aas
jmp
icebp
insb
jp
mov
sbb
adc
sub
fwait
push
jmp
stos
lods
xor
test
push
jo
jne
hlt
ljmp
pop
xorl
sbb
es
inc
add
out
sbb
fstl
mov
lods
push
das
and
or
ret
or
mov
fstpl
push
mov
push
fdivrl
lret
rcrb
and
hlt
and
cmc
adc
fsts
xchg
pushf
jle
dec
mov
stc
faddl
and
xlat
icebp
dec
insb
lret
adc
jae
jbe
push
xchg
or
leave
xor
mov
xchg
adc
fwait
mov
or
push
pop
xor
xor
out
mov
push
sbb
adc
out
mov
mov
sahf
lcall
cmpsb
add
cli
loope
testl
and
gs
ljmp
shll
adc
cmp
out
js
dec
adc
testb
jb
jbe
je
jae
imul
jecxz
test
add
mov
cmp
fs
lcall
cmp
mov
cmp
cmc
pop
outsl
fiadds
pop
xchg
push
fnstcw
jmp
xchg
pusha
and
xlat
add
push
fs
xor
and
pusha
pop
daa
jl
out
fsubs
and
in
or
hlt
xchg
mov
push
xor
stc
pop
push
mov
lret
call
add
leave
mov
shl
push
jns
lock
into
mov
pop
sbb
adc
arpl
xchg
push
scas
mov
dec
into
repnz
mov
dec
pop
repz
out
jae
jns
dec
pop
lea
xchg
es
addr16
hlt
and
out
popf
mov
outsb
out
lds
xor
lret
out
mov
and
pop
insl
xchg
out
mov
mov
xor
insb
push
xchg
sbb
stc
adc
mov
lret
imul
push
clc
xchg
sub
and
lret
lds
sbb
push
lret
mov
pop
or
xchg
xchg
daa
dec
leave
mov
add
scas
cld
dec
std
rcl
imul
dec
movsb
enter
add
scas
mov
lahf
aaa
xor
cmp
sub
movsl
or
popf
mov
and
in
adc
nop
call
add
push
pop
imul
dec
dec
sub
mov
cmp
pushf
in
mov
sbb
pushf
in
xor
cwtl
dec
mov
xchg
mov
dec
adc
push
lock
iret
pop
jl
push
cmc
pop
inc
cli
mov
rcll
adc
inc
test
sub
cmp
ss
xchg
xor
setae
stos
or
cli
push
jge
out
iret
push
cmc
lods
or
cwtl
lds
cltd
dec
sbb
fwait
out
imull
lea
cmc
dec
or
out
adc
ljmp
sbb
in
imul
adc
sbb
fcoms
dec
hlt
ud1
popf
addr16
xchg
jbe
je
imul
lods
fisttpll
ficomps
push
dec
fsubp
lret
push
scas
sbb
xor
daa
cmp
lock
dec
and
ss
xor
push
push
xchg
pop
insb
push
cli
aad
push
push
aad
or
cmc
icebp
lock
lcall
cli
sbb
movsl
push
iret
lahf
adcl
adc
shlb
int
aaa
cmc
inc
and
jl
push
outsl
push
mov
ficompl
in
push
hlt
lret
lods
ret
fs
push
pop
stos
les
add
mov
cmp
xchg
xor
ljmp
add
and
sbb
les
push
cmc
xchg
pop
mov
in
mov
movsb
inc
jnp
rcrb
ljmp
push
adc
pop
and
lea
xor
aam
cltd
fwait
cmc
lock
ljmp
jp
sub
lahf
xchg
sbb
insl
aaa
cltd
repz
sahf
sbb
shrl
movsl
jge
mov
fisttpl
ret
inc
enter
loop
cmc
ljmp
cmc
push
jl,pt
cltd
mov
in
fidivl
sub
out
jp
and
int3
sub
test
cwtl
pop
out
jge
sub
ret
out
icebp
xor
adc
hlt
aam
lret
test
neg
enter
lods
inc
sub
int
pop
sbb
rcr
dec
cld
sti
js
loop
scas
lock
jno
push
xor
xchg
in
mov
xchg
loop
pop
mov
icebp
or
lods
jp
movsl
inc
and
push
shl
in
xchg
adc
subl
dec
push
out
push
stc
mov
push
mov
popa
pop
push
mov
adc
loop
popf
xor
out
fcomp
cmp
pop
jle
jp
adc
mov
xchg
or
or
cmp
push
adcb
fbstp
in
mov
out
mov
orb
movl
shlb
sub
stc
pop
sahf
pusha
dec
es
sahf
insb
pop
scas
lods
fmull
out
push
xlat
aam
inc
bound
lea
adc
popf
mov
inc
adc
cmp
mov
mov
jecxz
mov
jbe
repnz
call
ror
sbb
inc
repz
push
sbbl
jecxz
cwtl
xor
out
jo
xorl
or
and
mov
adc
fstps
mov
in
inc
mov
push
jns
rcrl
pusha
daa
xor
incl
pop
sub
mov
insb
mov
or
xchg
pop
ret
test
jge
mov
out
jge
jmp
push
jge
and
jo
inc
repz
testl
fs
jle
or
andb
or
into
adcw
popa
adc
jns
ror
leave
jbe
fnstsw
dec
mov
sbb
sbb
outsl
dec
hlt
jae
aas
xchg
cli
adc
aas
or
mov
adc
nop
repz
xchg
mov
sub
scas
mov
jmp
xchg
int3
sbb
into
cmp
rcrb
dec
loop
fs
hlt
jno
pop
push
sti
ja
pop
jno
adc
pop
push
stc
mov
out
xchg
in
lock
push
fldt
shl
inc
scas
jp
orb
dec
jno
cmp
xchg
push
lods
roll
out
pusha
test
outsb
bound
sub
mov
add
pop
sbb
ja
xor
sahf
xor
jecxz
sbb
mov
jmp
std
xchg
mov
das
faddp
dec
dec
clc
scas
push
mov
testl
and
mov
mov
sbb
mov
xchg
rcl
test
sbb
sti
push
xchg
lea
jle
and
sub
arpl
pop
mov
xlat
xlat
gs
push
mov
adc
into
fs
push
fst
push
pop
rcll
cs
inc
add
dec
add
or
int
mov
sahf
jo
sbb
adc
mov
add
pop
out
in
call
jne
push
andl
rcrl
es
mov
cmp
je
and
mov
out
push
ret
or
je
hlt
outsl
cwtl
std
lea
fstl
jl
call
mov
ret
xchg
add
pushf
jl
test
insb
andl
sub
bound
nop
pop
aad
and
out
pop
das
jecxz
jge
out
in
jne
jo
imul
lret
jl
adc
test
in
fisubs
inc
cmp
dec
jp
xor
cmp
inc
push
in
enter
out
mov
add
pusha
adc
add
add
add
inc
add
pop
inc
add
and
orl
add
sub
add
pop
add
movsb
imul
imul
add
aad
add
add
xchg
in
dec
sub
inc
adc
add
add
add
add
add
adcb
add
inc
add
sbbb
add
pop
add
addb
add
or
sbb
sbb
in
add
add
add
jo
add
jbe,pt
inc
daa
fiadds
add
add
add
add
add
add
mov
dec
xchg
add
add
add
test
add
fldcw
scas
dec
add
add
push
add
add
add
add
add
add
add
add
add
add
jbe
inc
repz
ja,pn
add
add
add
add
add
add
add
add
jg
dec
ds
add
add
add
add
lock
add
loope
add
add
add
add
add
add
add
loop
add
add
add
add
add
in
add
add
cmp
xor
insb
add
outsl
add
push
add
push
add
add
inc
add
add
add
bound
dec
add
and
dec
add
add
add
imul
push
aaa
add
add
add
je
push
inc
add
push
add
add
je
dec
add
imul
add
outsl
add
push
add
add
jae
outsl
add
add
add
add
add
popa
add
jbe
push
add
add
inc
add
add
add
bound
dec
add
and
dec
add
add
add
imul
push
aaa
add
add
add
je
push
inc
add
push
add
add
je
dec
add
imul
add
outsl
add
push
add
add
jae
outsl
add
add
add
push
add
push
add
push
add
dec
add
dec
add
dec
add
inc
add
add
add
mov
add
add
add
adc
dec
cltd
or
add
adc
dec
cltd
or
add
add
add
add
add
add
add
or
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
in
add
add
xor
xor
xor
cmp
xor
xor
bound
xor
add
cmp
or
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
dec
add
js
sub
add
jae
and
push
add
add
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
inc
add
outsl
add
add
add
aaa
add
add
add
add
xor
or
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
inc
add
dec
add
arpl
je
dec
add
imul
add
or
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
add
jno
xor
push
add
inc
add
add
inc
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
dec
add
add
dec
add
inc
add
add
jns
popa
add
add
add
add
inc
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
xor
push
add
jb
push
add
dec
add
cmp
jo
jb
push
add
push
add
add
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
data16
push
add
add
add
add
xor
push
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
data16
xor
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
popa
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
je
jne
je
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
or
and
arpl
imul
and
and
cmp
gs
gs
gs
jb
jbe
insb
gs
or
and
and
and
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
cmp
jb
jno
gs
gs
js
arpl
imul
insb
ds
and
and
jb
jno
gs
gs
jb
jbe
insb
gs
or
and
jae
arpl
imul
cmp
je
jne
je
outsb
outsw
ds
jae
gs
bound
add
add
sbb
add
and
inc
xor
xor
xor
add
xor
add
mov
add
aaa
aad
dec
cmp
imul
xchg
cmp
cmp
cmp
cmp
mov
cmp
cmp
pop
cmp
cmp
cmp
cmp
jg
loope
out
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
adc
mov
aas
and
sub
data16
je
jp
nop
aas
mov
inc
add
add
add
xor
xor
xor
xor
xor
xor
xor
push
xor
mov
xor
xchg
xor
xor
xor
xor
xor
xor
xor
xor
pop
xor
repnz
inc
ss
ss
ss
fidivs
sbb
cmp
mov
aaa
mov
cmp
add
add
and
sub
xor
cmp
inc
ss
ss
add
