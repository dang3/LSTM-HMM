mov
pusha
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
mov
push
pushl
pop
call
sub
mov
add
ret
add
sub
push
pushl
pushl
call
add
pop
sub
mov
add
ret
jb
add
add
add
mov
push
mov
sub
push
pushl
pushl
call
add
pop
sub
mov
add
ret
mov
push
mov
sub
push
push
push
pushl
call
add
pop
sub
mov
add
ret
pushl
call
pop
mov
mov
mov
shl
mov
mov
std
repnz
cld
cmpw
jne
mov
push
sub
jb
pop
cmp
ja
mov
jmp
hlt
add
mov
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
sub
mov
add
ret
add
sub
push
push
pushl
call
add
pop
sub
mov
add
ret
add
sub
push
push
pushl
push
call
add
pop
sub
mov
add
ret
mov
push
mov
sub
push
push
push
call
add
pop
sub
mov
add
ret
add
mov
mov
sub
push
push
mov
push
xorl
mov
call
push
pop
mov
mov
mov
xor
dec
and
mov
mov
sub
sub
push
pop
push
pop
sub
or
adc
add
mov
pushl
sub
sub
pop
bswap
sub
cmp
jne
xor
push
mov
call
sub
ret
add
add
mov
push
mov
sub
push
push
pushl
pushl
call
add
pop
sub
mov
add
ret
add
add
sub
push
pushl
pushl
pushl
call
add
pop
sub
mov
add
ret
add
add
add
mov
push
mov
sub
push
pushl
pushl
call
add
pop
sub
mov
add
ret
mov
push
mov
sub
push
push
push
pushl
pushl
call
add
pop
sub
mov
add
ret
add
mov
push
mov
sub
push
pushl
push
pushl
call
add
pop
sub
mov
add
ret
add
add
sub
push
pushl
push
call
add
pop
sub
mov
add
ret
add
add
add
sub
push
push
pushl
call
add
pop
sub
mov
add
ret
add
sub
push
pushl
push
call
add
pop
sub
mov
add
ret
add
sub
push
pushl
push
call
add
pop
sub
mov
add
ret
add
sub
push
pushl
pushl
call
add
pop
sub
mov
add
ret
add
add
test
add
loope
cmpb
and
push
pop
or
dec
pusha
bswap
lret
push
cmpb
add
dec
mov
aam
mov
popa
adc
cli
loop
push
lods
js
push
adc
idivb
dec
nop
das
dec
or
outsl
mov
push
rsqrtps
lds
scas
mov
jecxz
mov
inc
add
popf
push
nop
sbb
gs
test
dec
rol
mov
jp
jnp
adc
cwtl
in
mov
sbb
fisttpl
lea
cmp
pop
jne
in
repz
sbb
xchg
push
es
xchg
push
xor
lret
sub
test
andb
jge
outsl
xor
cmp
pusha
jmp
push
lahf
dec
sub
lcall
adc
and
imul
sub
and
push
stc
push
jnp
pop
fildll
add
jmp
scas
cli
mov
push
xlat
dec
mov
mov
pop
jmp
pop
add
add
pop
icebp
cltd
cli
add
fs
xchg
imul
add
out
pusha
mov
loopne
outsb
jo
push
jecxz
mov
push
jb
pop
sbb
adc
push
mov
leave
jl
dec
adc
into
lcall
stc
fcmovnb
fs
scas
gs
mov
aad
pcmpgtw
and
mov
in
adc
iret
ljmp
das
cmp
sub
mov
or
xchg
mov
pusha
push
orl
ret
adc
mov
xor
mov
icebp
push
lods
push
push
push
add
in
sahf
adc
rolb
lds
inc
adc
inc
jmp
push
in
sti
lahf
std
push
cltd
pop
sub
icebp
icebp
stc
add
inc
inc
inc
or
mov
pushf
adc
movsl
lock
xlat
test
and
mov
sub
add
das
cltd
jne
sbb
xchg
jmp
xor
testb
and
testb
xor
mov
imul
mov
fdivrp
or
mov
jmp
pop
and
mov
movsl
call
mov
adc
sbb
push
or
gs
add
test
sbbl
push
cmc
ss
push
nop
outsb
push
imul
popa
push
push
dec
pop
sahf
push
mov
cmp
aam
insb
rol
outsl
das
ljmp
mov
dec
nop
mov
mov
call
mov
popf
test
dec
or
and
sub
call
bound
in
fs
pop
sub
and
stos
mov
ja
mov
stos
sarl
in
add
flds
daa
inc
daa
sarl
mov
add
sub
aam
sub
aam
push
xchg
sub
mov
xlat
jge
sub
adc
inc
inc
mov
hlt
arpl
or
mov
test
ss
or
xlat
pop
out
sub
ljmp
mov
pop
icebp
cmp
fldenv
inc
push
dec
mov
je
loopne
test
enter
mov
cs
adc
fidivs
popa
mov
out
repz
xlat
shlb
jmp
hlt
xchg
dec
fbld
xor
push
cltd
dec
push
add
out
fsubrs
pop
out
nop
daa
rolb
out
mov
push
arpl
inc
cltd
pushf
and
repnz
cwtl
xchg
repz
cmp
fldpi
neg
in
add
fists
lock
test
inc
enter
nop
das
popf
aaa
enter
pop
lock
jo
push
xor
mov
ljmp
push
in
sbbb
fstl
bound
pop
test
sbb
test
mov
ljmp
subl
jb
or
imul
or
lahf
lea
loopne
mov
std
push
dec
sbb
pop
jg
jae
cmp
sub
repz
jge
add
loopne
or
and
mov
stc
pushf
xchg
rcrl
cmovl
shlb
pop
sub
ja
sub
aad
clc
sub
pop
adc
daa
jo
fdiv
out
arpl
sub
movsb
cld
repnz
sti
dec
rcll
loop
scas
jge
loope
mov
add
xchg
mov
pop
shll
out
lods
lock
loopne
inc
frstor
js
sbb
push
cmp
mov
xor
dec
sahf
xchg
jmp
dec
sub
shlb
inc
mov
mov
mov
scas
loope
xchg
mov
dec
stos
push
cmp
mov
nop
fucomp
ja
das
lods
addr16
lahf
les
push
int
pushf
xor
pop
iret
div
fs
xor
test
imul
imul
push
jns
fiadds
and
outsl
lock
imul
les
jno
into
xchg
push
cs
es
cltd
sbb
dec
in
enter
sbb
xchg
aas
test
push
add
sti
pop
fs
insl
cli
icebp
mov
ss
out
sti
leave
pop
clc
mov
cmpsl
xchg
xor
add
mov
hlt
into
fisttpl
push
sub
jne
xor
or
sar
jno
jno
and
cmc
lret
pop
or
cmpsl
xor
or
leave
lock
dec
call
mov
sbb
jecxz
stos
or
lret
jb
roll
push
outsb
jp
xchg
sbb
xor
sti
xchg
sbb
test
jnp
mov
adc
adc
add
push
sar
xchg
mov
add
stos
ss
cld
xor
jmp
jnp
xchg
in
dec
pop
cmpsb
mov
insl
cld
cmpb
jl
mov
fcmovne
jmp
out
pop
jp
pop
push
mov
sbb
insb
les
ret
sub
pop
xchg
dec
push
sahf
add
ss
outsb
jmp
adc
dec
jno
xchg
add
xchg
xor
adc
xor
sbb
int3
stos
xor
js
or
push
repz
xchg
or
push
repz
xchg
or
push
repz
mov
or
push
repz
loop
test
push
xchg
test
xor
filds
inc
pop
and
mov
mov
.byte
mov
.byte
das
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
repnz
add
and
add
and
add
add
cmp
add
push
and
add
and
add
add
mov
add
inc
and
add
add
and
add
jle
add
mov
and
add
add
add
add
push
and
add
and
add
add
enter
mov
add
push
add
mov
and
add
and
add
and
add
and
add
and
add
add
add
add
scas
and
add
add
add
add
add
add
pop
and
add
and
add
add
add
add
movsb
and
add
and
add
add
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
repnz
add
and
add
and
add
add
cmp
add
push
and
add
and
add
add
mov
add
inc
and
add
add
and
add
jle
add
mov
and
add
add
add
add
push
and
add
and
add
add
enter
mov
add
push
add
mov
and
add
and
add
and
add
and
add
and
add
add
add
add
scas
and
add
add
add
add
aad
inc
gs
gs
inc
imul
jb
popa
je
dec
jne
gs
add
rolb
dec
gs
jo
gs
jb
jns
ljmp
jb
popa
je
add
inc
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
je
inc
imul
add
add
add
insb
outsl
jae
dec
popa
outsb
fs
add
push
gs
imul
bound
gs
add
faddl
inc
gs
outsb
jbe
jb
outsb
insl
outsb
je
popa
jb
popa
bound
add
add
imul
jae
adc
push
gs
insl
gs
push
add
adc
dec
gs
jo
imul
inc
jb
popa
je
inc
imul
gs
je
jbe
outsb
je
add
add
je
jne
jb
outsb
je
imul
jns
add
add
je
je
jb
jne
dec
outsb
outsw
push
add
add
outsb
fs
insb
outsl
jae
add
add
fs
je
insl
push
add
push
add
gs
outsb
fs
inc
imul
gs
imul
je
add
push
imul
je
add
add
insb
gs
jae
dec
jne
gs
add
add
outsb
imul
inc
jb
je
arpl
push
arpl
outsb
add
add
je
imul
cli
add
popa
imul
insb
gs
bound
arpl
inc
push
dec
inc
dec
xor
cs
insb
add
mov
inc
imul
je
imul
je
inc
gs
imul
imul
gs
jb
inc
popa
arpl
add
dec
jo
outsb
inc
imul
inc
gs
gs
push
jb
inc
popa
arpl
inc
outsb
je
jns
add
lret
add
je
inc
outsb
fs
gs
gs
inc
add
gs
jne
jb
outsb
je
imul
jns
add
add
je
push
jne
jb
dec
outsb
outsw
inc
add
addl
gs
gs
push
jb
inc
popa
arpl
inc
outsb
je
jns
add
addl
gs
gs
push
jb
inc
popa
arpl
inc
outsb
je
jns
add
mov
inc
gs
gs
inc
imul
inc
je
push
jne
inc
imul
je
inc
jb
popa
je
inc
imul
jns
add
dec
dec
dec
inc
push
cs
insb
add
add
inc
popa
outsb
push
outsb
insb
outsl
popa
fs
outsl
ja
add
inc
insb
insb
inc
popa
outsb
push
outsb
insb
outsl
popa
fs
outsl
ja
add
inc
insb
insb
inc
popa
outsb
push
outsb
insb
outsl
popa
fs
outsl
ja
add
inc
insb
insb
inc
popa
outsb
push
outsb
insb
outsl
popa
fs
outsl
ja
push
dec
inc
push
push
push
pop
pop
cs
insb
add
add
add
add
sub
add
push
add
addb
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
add
lock
add
mov
add
mov
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
adcb
add
cwtl
lcall
movsb
mov
int
lods
lods
fdivs
scas
lods
pushf
sahf
popf
popf
pusha
xchg
stos
add
add
add
popf
pushf
imul
scas
test
mov
in
in
in
out
out
jmp
ljmp
mov
scas
xchg
xchg
xchg
inc
addb
add
lahf
sahf
jp
cltd
cwtl
in
stos
stos
std
mov
call
stc
cli
std
std
cld
jmp
out
cli
mov
lcall
std
incb
std
incl
mov
mov
push
test
mov
lcall
mov
inc
mov
jmp
cld
sti
cld
sti
cld
fdivrp
lods
lods
stos
mov
add
add
int
into
add
cwtl
cwtl
lcall
xchg
xchg
push
scas
scas
scas
ret
mov
lods
lods
stos
lcall
mov
mov
sti
out
out
cli
cli
clc
sti
sti
sti
std
std
std
sti
in
in
out
loope
mov
mov
add
cltd
lcall
test
test
mov
mov
mov
ret
inc
mov
mov
mov
mov
cld
iret
ror
cmc
fcom
shl
loope
ljmp
loopne
in
fsub
hlt
inc
out
mov
mov
add
cmpl
add
add
add
add
add
add
xchg
mov
enter
aad
std
ret
mov
mov
mov
mov
leave
dec
lret
leave
enter
lret
leave
out
ror
iret
repz
jecxz
aam
in
rol
ljmp
sahf
jecxz
mov
imul
pop
pop
pop
cmpb
cmp
sub
xor
inc
inc
inc
ds
add
add
add
add
cmpsl
movsl
rol
sarb
rcl
sar
rol
ljmp
movsb
movsb
jmp
movsb
cmpsb
mov
aam
inc
ret
sar
ret
ret
icebp
enter
ror
leave
icebp
mov
mov
popf
lcall
xchg
xchg
nop
call
mov
push
lcall
idivb
ljmp
push
fdivrs
jnp
pop
pop
push
inc
sbb
sbb
mov
test
std
rol
dec
enter
sarb
mov
mov
mov
lods
pushl
mov
call
int
inc
sarl
ret
cmc
lret
mov
stc
cltd
xchg
cltd
call
xchg
xchg
call
mov
pop
mov
xchg
xchg
decl
cwtl
cwtl
call
nop
nop
call
mov
jle
jge
push
push
push
dec
mov
popf
fidivrs
mov
mov
mov
mov
shlb
sahf
mov
pushl
mov
leave
dec
enter
int3
lret
mov
test
jmp
cwtl
mov
jecxz
xchg
inc
mov
ret
pushf
cltd
lcall
lcall
test
call
nop
out
push
push
push
test
and
push
dec
dec
dec
xchg
jne
nop
nop
mov
cltd
lahf
lahf
cli
jb
test
jnp
mov
mov
mov
inc
ror
fcmovnu
jmp
call
aam
mov
mov
mov
cltd
popf
jmp
cltd
sahf
xchg
xchg
xchg
es
mov
cli
mov
lea
call
xchg
xchg
lcall
pushf
lcall
insb
imul
push
push
cmpsl
bound
mov
xchg
mov
call
stos
stos
pushl
ret
fcom
xlat
out
in
out
stc
div
sti
std
sti
push
div
call
xlat
xlat
mov
cmpsb
movsb
lcall
xchg
cwtl
orl
ror
cli
mov
xchg
xchg
lcall
cltd
lcall
mov
std
xchg
xchg
xchg
repz
xchg
xchg
in
fwait
cltd
fwait
jmp
mov
mov
sti
stos
jle
lods
jle
pushl
mov
ret
call
iret
sar
loopne
loopne
div
hlt
std
cld
std
std
std
sti
std
in
in
out
dec
ror
mov
movsb
mov
xor
add
add
mov
lret
mov
mov
jmp
cwtl
cltd
pushl
mov
xchg
std
cmpsl
addb
fwait
push
dec
call
and
lcall
push
adc
scas
pop
mov
mov
jmp
out
push
clc
clc
std
clc
idiv
fcomp
fdivr
mov
mov
cmpsl
movsl
mov
add
mov
ret
test
cmpsb
ljmp
lods
lods
jmp
cltd
cltd
inc
mov
imul
es
mov
incl
or
mov
add
xchg
push
add
fwait
jmp
push
mov
scas
test
jmp
in
push
cmc
cmc
cld
cld
std
cli
stc
cli
out
out
out
fucomi
rol
mov
scas
scas
dec
stos
lods
stos
push
mov
mov
ret
cli
lods
test
pushl
mov
ljmp
popf
sahf
inc
mov
jno
xchg
push
sbb
xchg
push
push
decl
adc
call
adc
jmp
push
add
mov
pusha
dec
call
js
call
xchg
mov
iret
stos
cmpsb
call
mov
ret
call
int3
enter
mov
mov
addb
scas
test
push
mov
lods
lods
pushl
mov
mov
mov
xor
lcall
sub
call
add
movsb
adc
ljmp
sbb
lret
inc
xor
fidivs
jmp
jl
jmp
subl
call
mov
fidivrl
mov
insl
cmpl
add
lods
lods
cli
scas
lods
scas
mov
mov
mov
mov
popf
fwait
jmp
inc
cmp
lahf
xor
call
adc
ljmp
add
ret
fisubl
ljmp
out
xchg
cmp
xchg
test
negl
cmp
mov
ret
xchg
cwtl
adcb
add
add
add
adcb
xchg
stos
test
mov
sarl
scas
mov
mov
scas
lods
jmp
push
dec
jmp
adc
cmpsl
adc
add
rcrl
dec
sub
jmp
jge
push
cmpsb
xchg
push
movsb
xchg
clc
cmpsb
cwtl
cld
test
std
lods
sahf
cld
cmpsb
xchg
ljmp
cli
lcall
add
inc
dec
inc
pop
dec
pop
push
sti
mov
mov
sar
mov
mov
mov
mov
push
jmp
adc
ljmp
sbb
dec
sbb
and
icebp
fwait
mov
cli
mov
test
mov
scas
std
mov
mov
sti
sahf
lahf
lahf
movsb
nop
nop
xchg
adc
add
add
inc
pop
push
push
push
cli
test
cmpsb
inc
vcmpsd
inc
mov
mov
mov
mov
iret
enter
ja
mov
inc
jmp
pop
add
mov
and
fbld
ss
cld
mov
mov
dec
mov
call
sar
iret
mov
call
ror
std
mov
mov
add
imul
mov
fcomp
fcmovnu
lock
sar
into
ror
mov
mov
call
rcl
mov
sub
ljmp
sbb
dec
pop
add
fsubs
jmp
jo
dec
ret
std
int3
std
xlat
lret
std
fxch
std
fmulp
push
into
mov
movsl
cmpsl
cmpsb
rcll
add
add
repz
out
repz
in
out
lahf
call
loopne
loopne
rcl
icebp
fstp
fdivr
mov
sbb
ljmp
sbb
dec
push
add
fbld
ud0
nop
jns
std
std
jmp
fdivr
jecxz
jmp
fdivr
call
fdivrp
clc
aad
lods
scas
scas
loope
mov
add
std
std
add
cld
std
or
div
pop
clc
clc
cld
ds
fcmovnu
in
rclb
pushl
sbb
dec
and
jmp
and
sbb
sti
mov
std
ljmp
cld
in
out
in
std
loope
cli
loope
push
iret
mov
pushl
mov
loope
fsubl
aad
rcr
test
ljmp
adc
inc
push
add
rcrl
add
loop
add
push
scas
mov
push
lret
sar
leave
mov
in
mov
std
fcmove
ret
cld
fmul
ret
lret
mov
lods
xchg
xchg
xchg
aas
cmpl
add
enter
mov
scas
inc
inc
pushl
dec
inc
inc
arpl
int
imul
xchg
xchg
aam
scas
clc
aam
mov
lock
mov
mov
mov
mov
ret
mov
dec
mov
mov
add
xlat
lds
int3
cmc
int
mov
std
ret
mov
idivb
mov
mov
lods
shlb
stos
mov
test
test
mov
mov
mov
rcl
or
std
incb
add
add
rol
add
lods
cmpsl
inc
mov
mov
fsubrs
lods
stos
test
lods
cmpsb
cmp
mov
popf
adc
std
incb
cmpb
lahf
lahf
mov
sbb
stos
sbb
jg
add
add
add
inc
pop
incl
add
lock
jmp
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
incb
add
incb
add
incb
add
incb
ud0
add
ljmp
add
add
add
add
add
add
and
add
add
mov
add
pushf
fwait
fwait
adc
mov
stos
mov
mov
mov
mov
mov
cmpsb
movsl
cmpsl
jle
cwtl
xchg
mov
add
std
add
lahf
fwait
lea
mov
sti
enter
fcmovnu
in
jmp
push
out
lock
loope
loope
ret
rcrb
xchg
cwtl
adc
add
add
incb
cmpsl
test
sbb
pushf
lcall
ret
dec
leave
enter
hlt
repnz
cld
cld
std
std
push
repz
dec
lret
int
mov
pushf
sahf
or
add
add
std
incl
lods
stos
stos
push
pushf
popf
popf
or
stos
stos
test
icebp
lcall
mov
enter
fstp
push
div
cld
std
std
std
std
cld
std
call
mov
xchg
dec
addb
add
xchg
and
cwtl
cwtl
pop
popf
sahf
sahf
jnp
scas
mov
mov
mov
jmp
mov
sti
fcom
imul
jmp
idiv
clc
idiv
sti
cli
stc
in
jmp
fsub
in
sti
popf
lods
lods
test
test
add
xchg
xchg
enter
ret
mov
mov
mov
mov
mov
inc
iret
lret
hlt
xlat
rcl
lock
repz
in
jecxz
lock
fcomp
repz
loope
jmp
mov
inc
inc
inc
or
pop
and
aas
aas
and
adc
movups
adc
sbb
adc
add
push
mov
nop
mov
sti
rcl
sar
ret
ret
mov
pushf
sahf
jmp
test
call
ror
inc
ret
enter
int
out
into
ret
iret
test
int3
scas
stos
mov
call
mov
test
insl
popa
popa
popa
lahf
dec
dec
dec
mov
gs
sub
sbb
or
lahf
mov
sti
ret
int3
int
rol
pushl
scas
mov
mov
scas
pushl
ret
iret
into
int3
inc
mov
mov
lock
mov
xchg
xchg
xchg
xchg
xchg
xchg
call
nop
stc
mov
arpl
mov
lea
mov
test
lock
insb
jno
pop
pop
xor
cltd
cltd
jle
lods
lods
in
mov
ret
mov
lds
lcall
mov
mov
lret
lret
mov
mov
clc
mov
mov
mov
lcall
xchg
xchg
xchg
lock
xchg
xchg
push
mov
scas
mov
xchg
decl
xchg
xchg
jmp
mov
xchg
xchg
xchg
xchg
repnz
jb
popf
aaa
cmp
dec
arpl
mov
out
mov
xlat
test
ds
jle
mov
mov
inc
ror
sar
ror
into
std
mov
mov
mov
fwait
movsb
jmp
cwtl
mov
ss
mov
cld
cltd
xchg
xchg
decl
nop
call
mov
movsb
call
jae
lret
inc
mov
dec
cltd
data16
jg
loopne
lcall
jle
mov
pushl
enter
jmp
icebp
repnz
div
fcomp
fcos
mov
mov
mov
xchg
xchg
sti
cwtl
xchg
cwtl
test
rol
ret
fmul
lret
cltd
fwait
call
cwtl
call
mov
test
clc
mov
fistps
fwait
popf
hlt
test
xchg
hlt
stos
nop
xchg
std
scas
xchg
xchg
ljmp
mov
inc
ret
rcl
sar
call
cld
cld
std
std
cld
cld
std
push
lock
call
aam
mov
mov
lcall
rol
ror
cld
mov
lahf
mov
lcall
sahf
lahf
ljmp
pushf
pushf
sti
test
addb
popf
push
push
lcall
and
lcall
jge
mov
lret
fcmovnu
out
in
out
cld
std
std
std
std
std
std
cld
cld
cld
jmp
jecxz
mov
test
movsb
push
add
add
sarl
cld
cmpsb
cmpsb
cmpsb
ljmp
lods
lods
lcall
lods
lods
mov
inc
cmp
decl
ud2
decl
or
add
mov
cmp
mov
mov
in
in
in
std
std
sti
cld
push
cmc
cmc
call
iret
iret
shlb
mov
adc
add
add
add
add
mov
test
pushl
cmpsl
test
inc
stos
test
call
sbb
decl
adc
lcall
adc
ljmp
es
gs
call
xorb
popf
xchg
call
mov
fld
ret
int3
leave
dec
leave
mov
mov
mov
scas
aas
mov
mov
lods
cmpsb
test
mov
lods
scas
mov
mov
mov
mov
mov
inc
lcall
sub
call
adc
jmp
pop
add
mov
push
cmp
fidivrs
jmp
jnp
jmp
subl
mov
ljmp
dec
mov
mov
lea
add
stos
cld
mov
mov
mov
mov
mov
dec
pop
push
jmp
xor
lcall
ljmp
sbb
inc
and
push
in
xchg
cmp
icebp
xchg
test
cmc
cwtl
test
clc
cltd
xchg
in
mov
leave
movsl
cmpsb
test
xchg
nop
nop
pop
insl
mov
jnp
cmp
mov
mov
rol
mov
lods
lods
dec
leave
lret
je
ljmp
xor
popf
adc
jmp
sbb
inc
sbb
call
das
pop
jmp
cmpsl
fwait
push
test
pushf
sti
scas
sahf
scas
sahf
push
scas
mov
ljmp
mov
add
cmp
cld
lods
stos
stos
inc
rol
ret
ret
rol
ljmp
lret
mov
pop
push
jmp
add
mov
add
rcrl
rcrl
add
loopne
daa
push
cmpsl
cwtl
sti
mov
lods
std
shlb
std
lds
jmp
aad
pushl
mov
add
dec
pop
addr16
mov
mov
inc
stos
lods
lods
inc
inc
stos
test
mov
dec
jmp
adc
add
shlb
add
in
add
repz
inc
cld
lds
dec
sar
rol
call
call
cli
lret
mov
pushl
xchg
xchg
push
add
add
jg
andb
stos
test
movsb
loop
in
fcmovu
fcomi
aam
aad
mov
int
dec
mov
ljmp
pop
add
mov
add
pop
add
fisubl
jmp
or
clc
jg
call
into
std
fcom
fmul
std
std
jecxz
std
xlat
jmp
mov
xchg
imul
add
add
jmp
or
div
das
icebp
icebp
icebp
pop
out
icebp
icebp
and
ljmp
mov
sub
lods
adc
add
lret
fisubs
out
ss
cld
mov
std
out
std
out
std
jmp
loope
jmp
std
loopne
in
aad
inc
ret
xchg
xchg
xchg
cmp
add
add
decl
hlt
cmc
hlt
push
loope
fcoml
scas
inc
aas
ljmp
add
rcrb
add
jecxz
add
repnz
and
std
mov
xlat
cld
fcmovne
stc
fmul
push
enter
out
aam
in
rol
fmulp
mov
xchg
mov
add
add
into
int3
insl
int
leave
divb
adc
mov
xor
fadds
jmp
popa
dec
loop
mov
std
fcmovnb
mov
fadd
mov
repnz
mov
fxch
sarl
mov
mov
jg
mov
in
test
mov
ret
std
shll
in
mov
mov
mov
mov
mov
xchg
mov
dec
sarb
sbb
mov
addl
add
mov
shl
mov
mov
mov
scas
mov
stos
test
lods
lods
movsb
xor
movsl
cmpsb
adc
mov
incl
stos
stos
lods
push
movsb
movsl
movsb
sub
stos
test
cmp
lahf
lahf
mov
add
std
incb
incl
sbb
incb
or
cld
add
rolb
inc
add
incl
add
add
or
add
sbb
add
cmp
add
cmp
add
cmp
add
cmp
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
cmp
add
cld
incb
cld
cld
cld
cld
sub
add
sbb
add
xor
add
add
and
add
add
pusha
or
add
lahf
popf
dec
movsb
movsb
movsb
lcall
mov
enter
lcall
mov
lcall
js
test
loope
mov
int
in
in
div
idiv
repnz
aam
shl
lods
lods
lods
js
mov
add
std
incl
lcall
or
cmpsb
cmpsl
push
popf
popf
in
lahf
sahf
sahf
mov
leave
lret
jmp
in
std
std
std
std
stc
cli
sti
dec
iret
into
in
mov
cltd
lcall
add
add
xchg
nop
and
mov
mov
aam
mov
jmp
movsl
cmpsb
inc
enter
loope
div
cmc
cli
cli
stc
sti
out
in
out
call
ljmp
xchg
cwtl
and
cltd
lcall
movsb
movsl
mov
fcmovb
ret
ret
lock
stos
mov
mov
mov
pushl
enter
into
lret
repz
shl
loop
loop
in
dec
out
lods
rol
xchg
cwtl
cltd
push
imul
dec
dec
dec
dec
aaa
xor
inc
inc
inc
inc
inc
pop
add
add
addb
test
mov
lret
inc
mov
cmpsb
movsl
movsb
jmp
stos
inc
mov
enter
ret
lret
in
mov
cmc
stos
mov
mov
sti
mov
xchg
js
xchg
xchg
idivl
sub
js
jmp
test
outsb
pop
imul
movsl
mov
ret
scas
mov
test
scas
mov
pushf
dec
leave
mov
shl
mov
negb
xchg
cwtl
call
nop
jne
mov
jle
lods
stos
decl
xchg
xchg
lcall
fwait
nop
xchg
xchg
out
jbe
jns
push
push
push
pusha
addl
out
stos
stos
sti
imul
mov
xchg
mov
pushl
enter
ror
rcl
sar
mov
lahf
movsl
jmp
cltd
mov
push
rol
les
mov
decb
xchg
xchg
call
sahf
lahf
call
jle
fsts
push
fwait
popa
arpl
jle
sbb
lcall
xchg
mov
pushl
mov
fstp
lock
out
push
cmc
idiv
loop
loopne
mov
mov
cltd
leave
cwtl
cwtl
cltd
and
sarl
lcall
xchg
call
xchg
xchg
sti
lcall
out
cmpsb
xchg
xchg
clc
cmpsb
jle
cli
movsl
imul
test
inc
ret
aam
aad
jmp
in
cld
sti
cld
std
std
push
idiv
call
xlat
xlat
pushl
mov
lcall
mov
mov
test
fwait
pushl
cmpb
push
push
call
and
sbb
lcall
sbb
pushl
mov
fcomp
fcos
lock
out
std
std
cld
std
cld
push
repnz
aad
aam
mov
mov
stos
stos
fwait
sldt
add
shlb
scas
scas
mov
mov
mov
mov
mov
jmp
sbb
adc
mov
push
call
adc
ljmp
dec
cmp
sarb
shll
mov
sar
sarb
dec
mov
add
add
add
add
scas
scas
mov
mov
ljmp
mov
pushl
sub
cwtl
sub
call
adc
ljmp
and
call
push
outsb
call
mov
call
mov
scas
mov
cwtl
lahf
cwtl
jle
cmpsb
mov
mov
mov
mov
jmp
cmp
lcall
add
mov
xor
call
pushf
mov
negb
stc
mov
mov
int3
mov
add
dec
pop
dec
jle
cmpb
mov
sar
mov
mov
pushl
xor
movsl
adc
pushl
add
fisttpll
push
test
test
cld
mov
std
mov
test
ljmp
add
add
dec
js
test
mov
mov
dec
mov
pop
jmp
sbb
dec
push
add
frstor
push
std
mov
call
sar
rol
rol
jmp
ret
mov
xchg
inc
test
les
in
cmpsl
rcl
fsubr
ret
cli
rol
scas
dec
inc
ljmp
sbb
call
and
call
xchg
jle
fcmovnbe
fcmovnbe
jmp
sar
jecxz
jecxz
push
aam
inc
ret
xchg
xchg
xchg
pop
std
incb
in
in
in
push
hlt
repnz
repnz
out
call
lock
push
dec
ljmp
sbb
fsubs
add
lock
cld
mov
fdivrp
jecxz
std
in
in
sti
loope
push
rol
inc
vfmsubadd132pd
add
fsubs
ror
int3
mov
adc
inc
sbb
call
sub
in
mov
jmp
mov
std
loop
mov
repz
leave
shr
lret
ret
fidivrl
popf
sahf
dec
incl
aad
enter
les
mov
xchg
icebp
ret
cmpsb
mov
rol
mov
scas
movsl
mov
mov
roll
sub
leave
rcrb
int3
int3
add
int3
int
add
mov
mov
lret
mov
mov
mov
lods
scas
stos
dec
lods
scas
cmpsl
sub
mov
stos
add
add
add
cmpsl
sbb
lcall
add
add
add
clc
add
push
add
incl
add
incb
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
add
add
add
and
add
add
and
test
add
add
push
push
add
add
and
mov
add
add
sbb
add
add
and
mov
add
add
fcompp
jmp
gs
sub
and
jg
aas
mov
loopne
hlt
adc
mov
adc
fnsave
cltd
xor
fnstenv
mov
sub
pop
scas
jo
repz
rcll
test
in
ljmp
jno
push
mov
add
fsubrl
and
lret
bound
test
mov
pop
not
pop
sahf
push
sbb
jl
daa
and
lcall
and
cld
cmovo
inc
sbb
pop
cmc
xchg
jo
xor
in
mov
xor
push
pop
mov
nop
fwait
lods
xlat
outsb
fidivrs
mov
int
push
adc
xchg
movsb
xor
aad
jb
in
dec
out
pop
xchg
sub
dec
insl
add
pop
scas
inc
mov
int
fucomip
test
xorl
pop
jae
or
cmpsb
sub
sbb
inc
cmp
mov
jl
outsl
push
jle
ds
jge
mov
ret
sahf
xchg
into
in
loope
icebp
and
es
jmp
inc
fxch
xchg
mov
mov
ret
pop
push
pop
pop
cmc
mov
js
lods
ja
faddp
add
xor
pop
mov
adc
aam
gs
in
mov
insb
add
lock
adc
mov
cmp
pop
test
ds
pop
jecxz
lds
adc
push
imul
pushf
jb
jno
mov
clc
testl
pop
scas
dec
loop
and
test
adc
mov
gs
jl
xchg
push
das
add
or
imul
pop
cmp
insl
add
mov
aaa
into
push
hlt
ret
pop
sub
pop
inc
loope
jns
jae
lods
lcall
fcmovu
aas
or
jnp
sub
lea
xor
mov
dec
jmp
or
insl
cmp
insl
movsb
mov
aam
outsb
repnz
ret
add
sti
xchg
in
mov
lods
hlt
sbb
add
into
js
lds
inc
cmp
jae
push
popf
lahf
push
mov
jno
inc
fdiv
insb
inc
fstps
mov
jle
xchg
adc
inc
mov
icebp
out
pop
hlt
xchg
or
cmp
lea
lcall
pop
mov
imul
insl
fists
xchg
cmc
mov
cmpsl
adc
test
lds
cmpsb
xor
xlat
dec
dec
jecxz
clc
dec
out
sahf
push
rorb
add
icebp
mov
and
cmpsb
cmp
and
pop
jbe
loop
sbb
add
sbb
push
mov
cmp
cmp
adc
aas
shll
hlt
adc
jnp
data16
xor
imul
repz
adc
lods
daa
das
pop
int
loope
jns
in
pop
imul
std
jb
push
movsb
push
mov
push
lds
aas
mov
pop
imulb
jns
pop
in
dec
mov
add
inc
mov
cmp
xlat
aas
mov
repnz
pop
cmc
xchg
push
jp
cmp
cwtl
das
mov
mov
ficomps
push
mov
aam
xor
mov
adc
cmp
lds
movsl
xor
dec
dec
jecxz
testl
iret
dec
insl
add
lock
and
cmpsb
cmp
es
xchg
xchg
xor
imul
pop
repnz
loop
mov
rorl
js
mov
sbb
sbb
jnp
xchg
ljmp
sub
lret
pushl
fbstp
js
adc
mov
cmp
scas
cli
clc
xor
lods
inc
push
out
ficoml
ret
pop
jns
lret
outsl
mov
popf
add
pop
hlt
jmp
outsl
push
pop
xchg
and
lods
lret
fisubrl
lcall
push
pop
in
nop
adc
stos
inc
adc
mov
or
test
lret
scas
inc
add
outsl
push
add
mov
push
rcrb
bound
testl
cld
push
sbb
sub
sub
movsl
cmp
rolb
sbb
pop
out
sub
mov
push
mov
inc
fst
in
cmp
push
dec
in
pop
xchg
cs
andl
flds
mov
jle
dec
in
jns
mov
mov
in
hlt
sbb
dec
and
mov
mov
dec
in
imul
out
nop
daa
sbb
pop
fidivl
xor
pop
cmc
repnz
leave
lahf
stc
mov
cmp
push
dec
filds
iret
sbbb
pop
popa
clc
dec
neg
outsl
and
das
pushf
xor
xlat
outsb
in
sbb
and
das
scas
inc
pop
cmc
mov
mov
jp
aas
loop
adc
xor
testl
push
lods
and
adcb
nop
inc
int
je
mov
lods
sub
and
rclb
and
mov
sub
pop
or
cmp
xor
andl
inc
xor
push
mov
lods
inc
xlat
fisubl
leave
cwtl
mov
dec
jecxz
divl
int
and
lret
popf
cmp
lret
push
lsl
mov
mov
and
and
and
push
dec
jge
jge
pop
lock
scas
push
xor
cmp
inc
fldt
mov
mov
movsl
pop
icebp
ror
test
sbb
or
mov
mov
cmpsl
movsl
cmp
cmpsb
cmp
inc
aam
xor
xchg
xchg
mov
sub
xorb
aad
out
testb
pop
lods
inc
mov
adc
ret
dec
pop
sub
aad
xor
shrb
xor
jp
sahf
test
int3
mov
data16
inc
fiaddl
aas
jge
insl
inc
lret
bound
aas
mov
test
cmp
mov
dec
out
data16
dec
loop
pop
mov
in
xchg
mov
gs
or
mov
jb
into
test
into
mov
push
add
push
in
pop
pusha
push
lods
xchg
pop
fbstp
int3
xchg
sub
mov
adc
pop
stos
ret
sahf
mov
jno
imul
xchg
or
push
jo
mov
inc
push
fsubr
add
int
movsb
fidivs
lret
add
mov
test
leave
push
in
incb
mov
ret
xchg
sub
lea
int3
push
out
jge
cmp
mov
jecxz,pt
pusha
testl
aaa
test
adc
adc
add
or
add
adcb
pushf
mov
lret
fisttps
lods
data16
fstps
test
pop
pop
cmc
dec
xor
popfw
stos
inc
lret
ja
cld
movsb
sbb
add
mov
mov
fwait
or
and
stos
inc
cmp
mov
pop
jno
sub
mov
sbb
scas
ret
cmc
outsl
push
and
loope
inc
xor
jbe
jnp
and
adc
mov
rcrl
jb
les
mov
test
daa
dec
loope
xchg
mov
addr16
sbb
frstor
pop
inc
push
jmp
xor
cmpsl
ds
and
push
push
in
orl
mov
inc
fxch
cmpsl
add
push
add
scas
test
imul
cmc
mov
lods
data16
fisubrl
je
pop
or
fidivrl
out
mov
scas
xchg
sub
mov
rorb
push
inc
sub
int3
pop
cwtl
insl
into
mov
jb
push
jno
dec
adc
adc
scas
inc
rolb
or
push
cmp
pop
push
lahf
shll
add
and
mov
push
in
je
rclb
inc
test
or
mov
cmpsl
ds
push
jmp
xchg
mov
lods
inc
sub
aad
ljmp
xor
and
repz
xor
lret
add
ds
and
xchg
and
int
sbb
push
les
jo
ljmp
jmp
or
inc
outsb
cwtl
das
pushf
lahf
shrb
ret
mov
push
call
and
mov
cmp
xor
pop
sub
clc
jg
in
mov
cmp
dec
lods
fstp
outsl
fs
cmp
ret
hlt
or
push
stos
ret
mov
pop
aad
inc
fcompl
mov
jo
push
clc
or
sub
xor
aaa
enter
call
out
loopne
mov
mov
push
es
ss
das
lea
jl
add
rcl
in
add
mov
push
and
inc
push
jne
mov
lds
pop
repz
icebp
adcb
xchg
lcall
test
dec
loope
add
or
sub
mov
xchg
sbbb
add
mov
lret
ljmp
cld
xchg
popa
loope
mov
mov
mov
adc
sbb
lds
pop
icebp
js
sbb
cwtl
xlat
jl
add
pusha
xchg
sub
into
push
lods
sti
inc
js
jae
xor
cld
push
fimull
pop
outsb
inc
das
cmp
xor
xor
mov
mov
and
pop
gs
cwtl
jbe
inc
mov
js
das
stos
imul
inc
add
inc
xchg
imul
sub
int3
insl
sbb
adc
inc
arpl
sub
lods
scas
ja
jg
out
mov
fimuls
sub
test
repnz
ds
mov
mov
pushf
mov
into
adc
shlb
repz
or
mov
rorb
pop
gs
xchg
jecxz
cmp
mov
fwait
sub
ss
sub
adc
shrl
and
mov
jo
rol
and
ret
push
imul
jle
sub
in
or
push
push
xchg
div
or
data16
dec
push
jp
sub
cmp
rcr
fildll
jbe
push
or
pop
sbb
ret
mov
pop
in
xor
loopne
mov
or
and
das
mov
fdivrl
imul
xlat
push
push
lcall
insb
pop
cs
jl
in
mov
idivb
in
jnp
pop
cltd
push
mov
or
cmp
push
imul
js
or
or
mov
fwait
imul
mov
je
xor
inc
mov
mov
mov
sbb
pusha
or
in
popf
insl
xchg
push
mov
sbbl
ss
test
ret
and
sbb
sbb
rclb
rcll
mov
outsb
test
and
xchg
push
fcomi
out
iret
and
mov
cwtl
xchg
pop
das
lds
jp
ds
ret
cltd
mov
jge
sahf
cmc
aas
aad
rorb
dec
fsubs
mov
jo
imul
mov
loopne
jmp
fiadds
mov
test
mov
adc
scas
aaa
add
jp
sbb
lcall
fadd
cmpsb
xchg
ds
jg
stos
mov
loope
js
hlt
lret
insl
addr16
jb
daa
outsl
je
add
lret
push
sub
push
out
cmpsl
dec
jne
push
push
fxch
ret
repz
add
loop
movsb
mov
fbld
or
jl
add
push
fld
leave
adc
out
dec
cltd
in
call
inc
sbb
inc
add
mov
sub
push
push
sahf
adc
dec
xor
jp
jge
out
dec
cltd
or
jbe
mov
aas
xlat
mov
daa
cmpsb
adc
nop
sbb
xor
pop
lret
jge
dec
sbb
sub
sti
mov
dec
push
mov
outsl
fstl
shrl
push
push
xchg
out
push
mov
xchg
cld
dec
pop
scas
jg
pop
mov
mov
or
testb
mov
daa
pop
sub
adc
pop
mov
add
fbstp
jae
daa
and
fmulp
xor
cmp
insb
add
js
gs
inc
xchg
fldl
cwtl
iret
das
lods
inc
pop
lock
and
sub
orl
loop
outsl
push
jno
imul
sbb
fwait
xor
ds
sub
test
xlat
outsb
mov
cmc
mov
fists
stos
adc
sbb
test
xor
stos
scas
cmp
jg
dec
out
cltd
dec
fcomip
sbb
add
mov
fdivl
cmpsb
stos
inc
sar
xchg
sub
enter
mov
jge
cmp
je
jns
fwait
mov
lret
and
jp
inc
xlat
or
pop
cmc
popa
adc
addr16
roll
in
data16
test
nop
jae
mov
mov
cmp
jb
pop
mov
fbstp
or
ja
icebp
std
xchg
out
xchg
jno
sbb
cmp
cmp
jle
sub
mov
ficompl
xlat
adc
jl
or
xchg
mov
je
mov
les
shrl
add
xchg
lret
or
xchg
adc
xor
push
movsl
lea
hlt
stos
stos
cmp
adc
and
repnz
xor
push
xchg
mov
inc
or
insl
cmp
cmp
dec
cmp
pop
push
bound
test
mov
lret
lock
mov
mov
popf
insl
add
pop
cmp
hlt
icebp
mov
adc
dec
loope
cmp
push
pop
popf
mov
sbb
mov
jle
mov
rcll
shlb
fdivrl
and
xchg
insl
dec
popf
xor
xchg
mov
enter
popf
sub
addr16
inc
fstpl
nop
clc
sti
out
push
lods
fmuls
sbbl
repz
sub
sub
scas
inc
pop
mov
fnstenv
sbb
mov
and
ret
add
fldl2t
jmp
adcb
popa
clc
mov
xlat
jg
pop
push
and
xchg
pop
mov
sbb
inc
inc
daa
mov
xchg
mov
jns
xchg
sub
lahf
push
ljmp
jno
sbb
shlb
xor
out
test
fxsave
icebp
or
sub
fdivl
inc
sub
mov
dec
jp
mov
push
pop
daa
mov
imul
int
test
in
out
test
or
fistl
xchg
lcall
mov
jae
jbe
add
rcrb
loop
inc
fidivs
or
lds
cmp
movsb
out
sbbl
int
lock
adc
ja
imul
pusha
xchg
sub
mov
jne
mov
pop
push
fdivrp
xchg
cmc
aaa
loope
fistps
repz
fists
test
add
dec
push
inc
fdivs
jbe
jle
pop
notb
sub
jge
adc
icebp
mov
out
dec
fwait
xor
or
push
mov
xchg
enter
sbb
stc
fnstsw
iret
pop
adc
mov
cmp
and
mov
lea
pushf
cmp
sub
test
cmp
dec
push
jns
jmp
js
test
scas
cmpsb
cmp
out
mov
sub
sub
pop
inc
into
gs
jbe
fists
mov
sbb
lcall
shll
mov
out
mov
enter
push
fbstp
cli
movsb
cmp
scas
inc
insl
mov
jb
xchg
fs
stc
nop
setg
xchg
sub
pop
scas
aas
inc
sbb
nop
aaa
cmp
loope
push
ljmp
jno
jae
test
pushf
es
mov
inc
lock
push
pop
shrl
jg
adcl
or
mov
jmp
cmp
fildl
pop
repnz
push
stc
fwait
popa
sbb
mov
into
sub
mov
push
dec
arpl
jo
test
sbb
scas
es
in
cli
sub
fwait
inc
ror
bound
scas
jmp
xlat
mov
int3
pop
cmc
add
sub
addr16
xchg
popa
lcall
mov
xchg
sub
or
mov
in
jg
mov
ret
mov
shll
enter
mov
and
test
xchg
jp
mov
fdivp
lcall
std
pop
push
mov
dec
and
ja
aad
je
xchg
sub
sahf
repz
push
scas
inc
add
adc
hlt
sti
das
and
cld
xchg
jnp
dec
in
xchg
sbb
xor
ret
pop
pop
mov
cwtl
jno
loope
mov
xlat
jp
lds
pop
pop
out
cwtl
das
mov
jnp
mov
add
mov
movl
aad
out
and
fstpl
gs
divb
dec
loopne
and
push
jne
cmp
mov
mov
sti
fidivs
call
imul
xchg
addr16
sbb
mov
sub
cmp
fst
push
jne
jae
push
in
int3
pushf
xchg
sub
in
or
stos
xchg
sub
shlb
jl
inc
mov
fstp
jne
mov
mov
or
push
repz
sahf
ja
mov
pop
mov
cmpsl
ds
mov
lds
push
jmp
insl
aam
pop
test
mov
inc
xchg
mov
aad
adc
jb
int
repz
in
test
clc
jp
clc
loope
mov
cmp
mov
lods
aas
push
in
mov
aad
std
fdivl
test
hlt
mov
movsb
adc
sub
xor
pop
inc
in
test
cmp
pop
push
push
mov
jno
push
jb
cmp
mov
lds
aad
mov
repnz
push
imul
lock
movsb
cmp
jae
movsl
cmpsb
in
dec
out
iret
sub
pop
or
push
inc
in
add
mov
and
in
sub
cmp
cmp
loop
jb
pop
lods
jmp
loope
sarl
xchg
pop
lahf
xchg
sub
cmp
dec
dec
ja
ret
out
dec
cmpsb
dec
loopne
gs
fucomip
addr16
adc
adc
dec
stc
das
movb
dec
in
mov
imul
inc
fbstp
negl
xchg
mov
aad
mov
enter
loopne
rorb
adc
xchg
sti
sub
jo
or
or
lret
mov
lret
dec
loopne
push
decb
scas
lods
jne
xor
out
test
es
scas
ss
rclb
xor
jne
mov
ljmp
jb
pop
aas
or
cmpsl
loop
mov
lds
int3
arpl
push
ljmp
jno
or
lahf
insb
xor
mov
jae
inc
faddl
shrl
outsl
arpl
jne
out
xchg
sahf
sbbl
repz
ss
sbb
ret
sbb
mov
icebp
pushf
pop
fdivl
mov
movntq
cmp
rol
inc
pop
testl
jge
in
test
xchg
xor
ret
and
fsubr
push
call
dec
imulb
xor
out
pop
lea
jbe
inc
lahf
stos
inc
addr16
inc
leave
pusha
stos
arpl
jle
or
xchg
cmp
test
jo
mov
add
cs
add
pop
mulb
sub
pop
inc
push
sub
mov
les
hlt
mov
and
inc
xor
push
popf
pop
loop
stos
mov
in
cmp
sbb
shrb
fcompl
mov
mov
xchg
xorl
fsubrp
test
push
std
ret
cmp
dec
outsl
in
lret
bound
mov
jge
inc
add
or
or
pop
adc
add
pop
lods
and
insl
incl
in
test
push
ljmp
push
mov
mov
aaa
into
push
shlb
in
test
les
leave
jae
sti
js
jns
sbb
sub
add
mov
ret
hlt
outsl
ds
adc
pop
repnz
js
inc
mov
xchg
sub
mov
insb
add
mov
and
xchg
add
inc
ss
cwtl
jecxz
int3
arpl
stos
in
test
push
inc
xlat
xchg
or
loop
xor
je
pop
divb
cwtl
inc
fmulp
pop
jg
mov
gs
sbb
sbb
mov
cmp
push
fidivl
loop
pop
adc
cli
xchg
fdivs
sbb
mov
mov
iret
sub
jp
and
popf
xor
sarb
add
ret
pop
leave
and
fidivl
jns
push
stos
cmp
loope
decb
cld
xchg
push
loope
ficoml
jae
mov
lds
testb
stc
dec
fcomps
pop
pushf
sub
xor
mov
mov
mov
and
test
jmp
or
scas
cmp
dec
in
pop
xor
lea
outsb
add
fildll
and
mov
shlb
add
imul
add
fs
mov
pop
cmp
xchg
sub
pop
push
jmp
cmp
fdivl
pop
insl
xchg
pop
scas
cmp
mov
xchg
push
in
sub
xsha256
cmpsb
rorl
in
jbe
mov
sub
push
lods
rorl
jbe
inc
fstpl
cwtl
shrl
cmp
lods
gs
sbb
es
loopew
in
sbb
outsb
add
push
xchg
insl
shrl
push
pop
loop
gs
xor
movsb
cmp
cmpsl
decl
sub
pop
rcll
aaa
movsl
cs
xor
jns
insl
mov
repnz
jnp
adc
pop
push
out
dec
pop
lock
out
and
jne
mov
sahf
in
jnp
mov
or
scas
inc
call
setno
sbb
in
jp
and
pop
repnz
pop
aad
sbbb
fwait
dec
mov
fdivl
cmc
mov
mov
sti
out
dec
imul
cmp
enter
sbbb
popf
xor
cmp
arpl
adc
mov
fimuls
pop
cmpsb
jnp
loopne
and
repnz
mov
test
popa
clc
cmc
cmpsb
pop
scas
fists
jno
push
add
pop
cmp
ja
pop
push
lods
test
int
mulb
popf
xor
add
cmp
pop
lods
pop
ljmp
movsl
iret
data16
mov
out
cmp
outsl
popf
pop
mov
call
or
xor
mov
sub
lea
mov
scas
adc
into
clc
xor
and
outsl
push
sub
lods
jl
dec
loope
popf
adc
iret
out
loopne
icebp
push
movsl
sub
adc
dec
jne
int
xchg
and
adc
xchg
sub
xor
cmp
data16
jne
mov
mov
fisubl
popa
sub
cwtl
das
pusha
dec
push
ljmp
mov
add
daa
dec
in
dec
xchg
sub
pusha
idivl
fistl
test
jecxz
insl
sbb
inc
fldenv
add
push
mov
ret
add
test
xor
insl
insl
andl
jl
ficoml
in
add
loop
pusha
and
test
jns
insl
mov
and
xchg
cs
jg
inc
test
in
andl
add
or
pop
insb
nop
daa
xchg
jl
fisubs
enter
add
mov
dec
pop
inc
flds
test
pusha
sarl
ret
push
fdivl
push
or
cltd
stos
and
loop
mov
das
add
loop
mov
loop
lods
or
fdivp
lds
add
pusha
mov
xchg
mov
and
call
jle
cmp
mov
out
xchg
jmp
push
mov
jg
ds
lahf
test
enter
add
das
adc
sbb
cmpsl
mov
xchg
mov
push
mov
sub
dec
xor
je
fsubrs
int3
or
add
ss
and
xlat
pop
arpl
pusha
pushf
sbb
mov
fcmovnb
push
add
or
pusha
push
adc
mov
lods
mov
xlat
ficomps
insb
and
loopne
push
inc
or
lods
pushf
inc
fadd
int
cmc
out
popa
and
loopne
push
inc
lds
scas
inc
stos
fwait
or
mul
and
cmpsl
inc
aas
mov
push
mov
jl
mov
or
inc
sub
mov
cwtl
jge
mov
lock
xor
cld
adc
inc
sbb
sbb
pushf
sarl
mov
push
popf
dec
or
dec
jecxz
pop
cld
xchg
mov
and
test
cld
sbb
scas
dec
inc
fnstcw
dec
loopne
pushf
je
int
sbb
inc
out
sbb
dec
lahf
cmp
andl
stos
stc
test
mov
inc
fisubs
dec
loop
sub
adc
sbbb
cmp
mov
cvtps2pd
arpl
aam
jmp
or
cwtl
inc
loopne
xchg
pop
bound
mov
outsb
mov
inc
fstpt
fsubl
or
push
lea
js
pusha
scas
xchg
sub
mov
mov
inc
cmovg
imul
cwtl
leave
mov
jae
ljmp
push
inc
cmp
mov
xchg
pop
cmc
rorl
or
fldenv
add
and
push
sahf
mov
jg
bound
iret
out
jl
xor
fwait
jo
decl
enter
mov
into
ss
ss
fsubrs
mov
xor
int3
arpl
shrl
jg
adcl
or
mov
jmp
cmp
fildl
pop
repnz
push
stc
fwait
popa
sbb
mov
into
sub
mov
push
dec
arpl
jo
test
sbb
scas
es
in
cli
sub
fwait
inc
ror
bound
scas
jmp
xlat
mov
int3
pop
cmc
add
sub
addr16
xchg
popa
lcall
mov
xchg
sub
or
mov
in
jg
mov
ret
mov
shll
enter
mov
and
test
xchg
jp
mov
fdivp
lcall
std
pop
push
mov
dec
and
ja
aad
je
xchg
sub
sahf
repz
push
scas
inc
add
adc
hlt
sti
das
and
cld
xchg
jnp
dec
in
xchg
sbb
xor
ret
pop
pop
mov
cwtl
jno
loope
mov
xlat
jp
lds
pop
pop
out
cwtl
das
mov
jnp
mov
add
mov
movl
aad
out
and
fstpl
gs
divb
dec
loopne
and
push
jne
cmp
mov
mov
sti
fidivs
call
imul
xchg
addr16
sbb
mov
sub
cmp
fst
push
jne
jae
push
in
int3
pushf
xchg
sub
in
or
stos
xchg
sub
shlb
jl
inc
mov
fstp
jne
mov
mov
or
push
repz
sahf
ja
mov
pop
mov
cmpsl
ds
mov
lds
push
jmp
insl
aam
pop
test
mov
inc
xchg
mov
aad
adc
jb
int
repz
in
test
clc
jp
clc
loope
mov
cmp
mov
lods
aas
push
in
mov
aad
std
fdivl
test
hlt
mov
movsb
adc
sub
xor
pop
inc
in
test
cmp
pop
push
push
mov
jno
push
jb
cmp
mov
lds
aad
mov
repnz
push
imul
lock
movsb
cmp
jae
movsl
cmpsb
in
dec
out
iret
sub
pop
or
push
inc
in
add
mov
and
in
sub
cmp
cmp
loop
jb
pop
lods
jmp
loope
sarl
xchg
pop
lahf
xchg
sub
cmp
dec
dec
ja
ret
out
dec
cmpsb
dec
loopne
gs
fucomip
addr16
adc
adc
dec
stc
das
movb
dec
in
mov
imul
inc
fbstp
negl
xchg
mov
aad
mov
enter
loopne
rorb
adc
xchg
sti
sub
jo
or
or
lret
mov
lret
dec
loopne
push
decb
scas
lods
jne
xor
out
test
es
scas
ss
rclb
xor
jne
mov
ljmp
jb
pop
aas
or
cmpsl
loop
mov
lds
int3
arpl
push
ljmp
jno
or
lahf
insb
xor
mov
jae
inc
faddl
shrl
outsl
arpl
jne
out
xchg
sahf
sbbl
repz
ss
sbb
ret
sbb
mov
icebp
pushf
pop
fdivl
mov
movntq
cmp
rol
inc
pop
testl
jge
in
test
xchg
xor
ret
and
fsubr
push
call
dec
imulb
xor
out
pop
lea
jbe
inc
lahf
stos
inc
addr16
inc
leave
pusha
stos
arpl
jle
or
xchg
cmp
test
jo
mov
add
cs
add
pop
mulb
sub
pop
inc
push
sub
mov
les
hlt
mov
and
inc
xor
push
popf
pop
loop
stos
mov
in
cmp
sbb
shrb
fcompl
mov
mov
xchg
xorl
fsubrp
test
push
std
ret
cmp
dec
outsl
in
lret
bound
mov
jge
inc
add
or
or
pop
adc
add
pop
lods
and
insl
incl
in
test
push
ljmp
push
mov
mov
aaa
into
push
shlb
in
test
les
leave
jae
sti
js
jns
sbb
sub
add
mov
ret
hlt
outsl
ds
adc
pop
repnz
js
inc
mov
xchg
sub
mov
insb
add
mov
and
xchg
add
inc
ss
cwtl
jecxz
int3
arpl
stos
in
test
push
inc
xlat
xchg
or
loop
xor
je
pop
divb
cwtl
inc
fmulp
pop
jg
mov
gs
sbb
sbb
mov
cmp
push
fidivl
loop
pop
adc
cli
xchg
fdivs
sbb
mov
mov
iret
sub
jp
and
popf
xor
sarb
add
ret
pop
leave
and
fidivl
jns
push
stos
cmp
loope
decb
cld
xchg
push
loope
ficoml
jae
mov
lds
testb
stc
dec
fcomps
pop
pushf
sub
xor
mov
mov
mov
and
test
jmp
or
scas
cmp
dec
in
pop
xor
lea
outsb
add
fildll
and
mov
shlb
add
imul
add
fs
mov
pop
cmp
xchg
sub
pop
push
jmp
cmp
fdivl
pop
insl
xchg
pop
scas
cmp
mov
xchg
push
in
sub
xsha256
cmpsb
rorl
in
jbe
mov
sub
push
lods
rorl
jbe
inc
fstpl
cwtl
shrl
cmp
lods
gs
sbb
es
loopew
in
sbb
outsb
add
push
xchg
insl
shrl
push
pop
loop
gs
xor
movsb
cmp
cmpsl
decl
sub
pop
rcll
aaa
movsl
cs
xor
jns
insl
mov
repnz
jnp
adc
pop
push
out
dec
pop
lock
out
and
jne
mov
sahf
in
jnp
mov
or
scas
inc
call
setno
sbb
in
jp
and
pop
repnz
pop
aad
sbbb
fwait
dec
mov
fdivl
cmc
mov
mov
sti
out
dec
imul
cmp
enter
sbbb
popf
xor
cmp
arpl
adc
mov
fimuls
pop
cmpsb
jnp
loopne
and
repnz
mov
test
popa
clc
cmc
cmpsb
pop
scas
fists
jno
push
add
pop
cmp
ja
pop
push
lods
test
int
mulb
popf
xor
add
cmp
pop
lods
pop
ljmp
movsl
iret
data16
mov
out
cmp
outsl
popf
pop
mov
call
or
xor
mov
sub
lea
mov
scas
adc
into
clc
xor
and
outsl
push
sub
lods
jl
dec
loope
popf
adc
iret
out
loopne
icebp
push
movsl
sub
adc
dec
jne
int
xchg
and
adc
xchg
sub
xor
cmp
data16
jne
mov
mov
fisubl
popa
sub
cwtl
das
pusha
dec
push
ljmp
mov
add
daa
dec
in
dec
xchg
sub
pusha
idivl
fistl
test
jecxz
insl
sbb
inc
fldenv
add
push
mov
ret
add
test
xor
insl
insl
andl
jl
ficoml
in
add
loop
pusha
and
test
jns
insl
mov
and
xchg
cs
jg
inc
test
in
andl
add
or
pop
insb
nop
daa
xchg
jl
fisubs
enter
add
mov
dec
pop
inc
flds
test
pusha
sarl
ret
push
fdivl
push
or
cltd
stos
and
loop
mov
das
add
loop
mov
loop
lods
or
fdivp
lds
add
pusha
mov
xchg
mov
and
call
jle
cmp
mov
out
xchg
jmp
push
mov
jg
ds
lahf
test
enter
add
das
adc
sbb
cmpsl
mov
xchg
mov
push
mov
sub
dec
xor
je
fsubrs
int3
or
add
ss
and
xlat
pop
arpl
pusha
pushf
sbb
mov
fcmovnb
push
add
or
pusha
push
adc
mov
lods
mov
xlat
ficomps
insb
and
loopne
push
inc
or
lods
pushf
inc
fadd
int
cmc
out
popa
and
loopne
push
inc
lds
scas
inc
stos
fwait
or
mul
and
cmpsl
inc
aas
mov
push
mov
jl
mov
or
inc
sub
mov
cwtl
jge
mov
lock
xor
cld
adc
inc
sbb
sbb
pushf
sarl
mov
push
popf
dec
or
dec
jecxz
pop
cld
xchg
mov
and
test
cld
sbb
scas
dec
inc
fnstcw
dec
loopne
pushf
je
int
sbb
inc
out
sbb
dec
lahf
cmp
andl
stos
stc
test
mov
inc
fisubs
dec
loop
sub
adc
sbbb
cmp
mov
cvtps2pd
arpl
aam
jmp
or
cwtl
inc
loopne
xchg
pop
bound
mov
outsb
mov
inc
fstpt
fsubl
or
push
lea
js
pusha
scas
xchg
sub
mov
mov
inc
cmovg
imul
cwtl
leave
mov
jae
ljmp
push
inc
cmp
mov
xchg
pop
cmc
rorl
or
fldenv
add
and
push
sahf
mov
jg
bound
iret
out
jl
xor
fwait
jo
decl
enter
mov
into
ss
ss
fsubrs
add
pop
out
mov
xchg
ss
imul
add
sub
xchg
push
andb
mov
rcll
or
and
xorb
adc
push
push
push
in
jp
jp
push
cmpsb
mov
lahf
sub
push
or
dec
pusha
sbb
lahf
shlb
cs
mov
xchg
ljmp
sarl
jo
mov
icebp
mov
and
repz
cmc
mov
sub
add
jge
xor
int
adc
push
push
in
loope
xor
adc
shlb
movsl
dec
xchg
and
push
or
subb
lds
dec
notb
das
jne
imul
push
mov
shlb
ret
jmp
or
add
pop
lahf
das
int3
mov
inc
mulb
repz
pop
or
cli
lods
jns
pop
xchg
fsubrs
cmc
mov
outsb
fisttpll
cltd
sbb
cld
jle
jg
sub
scas
mov
xchg
lret
dec
xor
adc
jle
inc
rep
or
rcll
testl
ja
ficompl
mov
rcll
xor
leave
jns
sub
mov
ficomps
outsl
sbb
mov
loopne
test
xor
cmp
jp
out
mov
fistpl
lcall
pop
inc
xor
cmpb
into
fs
stos
hlt
daa
rcrl
fldcw
cmp
mov
push
test
aas
cmpsl
in
mov
adc
mov
test
jo
xchg
sbb
mov
out
nop
enter
mov
xor
pop
adc
xor
xor
dec
mov
loopne
loope
aaa
mov
xor
ss
mov
lahf
and
pop
xor
xor
mov
mov
pop
mov
rorl
push
xlat
and
sbb
je
or
sahf
aaa
mov
mov
dec
shlb
cli
jae
nop
popf
add
in
jbe
je
adc
hlt
test
inc
jge
lea
pop
fiadds
movsb
push
xor
jg
sbb
arpl
mov
mov
cwtl
fwait
sbb
mov
std
push
sub
jge
mov
bswap
jbe
dec
lahf
negb
pop
out
and
lret
bound
lods
inc
ret
push
int
push
mov
out
imul
call
xchg
frstor
or
das
aaa
into
pusha
push
cmp
mov
add
es
popa
xor
mov
int3
push
in
std
cmpsb
scas
inc
fcomps
adc
dec
stc
mov
dec
mov
les
cmpsl
cmc
lahf
js
rcll
das
movb
sub
lcall
add
cwtl
shlb
push
mov
inc
jmp
jg
bound
xchg
jo
lods
inc
out
adc
cmp
push
mov
pop
dec
loopne
xor
out
loopne
mov
popf
xor
pop
out
or
mov
pop
mov
xchg
sub
ret
mov
cmc
pop
jle
push
shrl
rcrb
les
push
xchg
lds
inc
jecxz
mov
fisubrs
xor
insl
mov
call
or
ret
mull
fdivrs
out
xlat
jne
xchg
stos
insb
pop
stc
dec
aas
jae
repnz
pop
xor
in
imul
add
out
jmp
roll
push
mov
cmp
pop
or
and
fsubs
bound
xor
into
fs
mov
jg
sahf
sti
push
arpl
inc
inc
fstp
sub
js
push
dec
enter
pop
add
nop
es
push
sbb
repnz
jge
push
xchg
cmp
movsb
push
jecxz
scas
ficomps
frstor
ss
lret
and
out
jno
rcrl
cmp
fs
aad
scas
mov
sti
outsl
in
je
add
gs
sbb
mov
xor
popf
dec
or
add
lret
movsb
loopne
cmp
dec
sub
mov
outsb
pop
xor
sub
cmp
aad
mov
lock
shll
in
xchg
out
push
mov
jge
xchg
jns
pop
pop
inc
dec
mov
mov
aam
add
xchg
mov
mov
add
mov
js
dec
xchg
xchg
push
imul
cmp
outsl
sub
mov
cmp
int
adc
nop
sbb
dec
jp
and
cmpb
dec
repz
push
mov
mov
xchg
xchg
pop
aas
or
pop
roll
inc
cmc
jnp
adcb
dec
rorb
jno
adc
scas
adc
push
pop
repz
lcall
pop
mov
fs
xchg
cmp
sbb
cmp
jmp
rcrl
rcll
repnz
add
cmp
in
push
jne
mov
cmpsb
out
lock
bound
scas
leave
xchg
call
arpl
or
arpl
mov
or
das
sub
into
out
cmp
nop
cmp
xchg
pop
pushf
das
xchg
addr16
lea
cmp
mov
shlb
imul
aam
es
push
pop
adcb
mov
imul
call
xchg
stos
mov
mov
mov
sub
pop
insb
sbb
mov
sahf
jo
movsl
ret
out
nop
test
dec
int3
mov
iret
sahf
dec
fs
add
mov
in
sbb
add
out
dec
xchg
dec
icebp
int
sub
push
addr16
dec
and
data16
mov
sarb
ss
loop
sbb
mov
mov
push
cmp
fimull
hlt
sbb
test
lock
in
push
fldenv
mov
xchg
cwtl
cli
add
popf
shl
push
lahf
outsb
popf
pop
xor
into
mov
fdivrp
pushf
add
hlt
lea
inc
stos
xlat
jnp
mov
jae
add
xor
cltd
jns
cmp
sarl
loope
mov
xchg
fadd
aaa
dec
inc
sub
push
leave
xchg
nop
inc
mov
test
xchg
rolb
xchg
add
nop
out
dec
pop
xor
std
cltd
add
push
pop
fisubl
mov
jae
sahf
daa
frstor
cltd
daa
enter
pop
xor
aaa
ja
add
sub
stos
sub
out
rcrb
xchg
sbb
pop
call
fs
xchg
rcll
ljmp
cltd
cmpsb
js
rorl
xchg
ret
sbb
test
add
loop
sub
hlt
cmc
mov
push
adc
and
cwtl
ret
pop
xor
add
jb,pt
xor
ss
icebp
outsb
adc
sbb
mov
std
in
sbb
dec
cmp
ds
cmp
adc
xor
mov
cmp
aad
inc
iret
jg
push
int3
cwtl
adc
pop
mov
movsl
cmpsl
sbb
insb
push
push
mov
cmp
imull
or
sub
adc
jg
xchg
pop
push
or
xchg
add
lods
movsb
dec
hlt
push
jge
cmp
xor
pop
inc
cmp
repz
test
hlt
call
in
fucomp
mov
pop
push
test
xchg
xchg
sti
lods
and
divl
test
cwtl
in
fucomi
push
out
inc
xchg
mov
das
mov
test
repz
mov
sub
and
popa
push
xlat
ss
and
ljmp
push
arpl
scas
and
jne
mov
adc
jno
xchg
push
add
xlat
dec
addl
bound
divl
xchg
xchg
mov
xchg
ljmp
popl
jnp
orl
push
hlt
mov
dec
shll
pop
jmp
nop
dec
jmp
xchg
push
sbb
lds
inc
xor
sbb
in
loop
sub
pop
stc
and
push
sbb
add
or
pop
mov
lods
in
jecxz
pushf
mov
mov
ret
inc
pop
call
mov
inc
into
xchg
pop
adc
jl
popa
pop
pop
adcb
xor
jno
int3
pushf
pop
jbe
push
push
jo
popf
aas
xor
jns
imul
lock
sub
sub
mov
push
aam
addr16
dec
test
iret
enter
fsub
in
mov
insb
xchg
js
clc
sbb
or
jo
inc
or
push
sbb
fwait
sub
jae
push
into
jmp
pop
push
ret
xchg
jg
xchg
push
int3
mov
cmp
loopne
fcomip
mov
rorl
push
lcall
insb
addr16
xor
add
xchg
pop
sti
xchg
stos
int3
or
mov
out
or
jg
sbb
push
rcr
sub
mov
xlat
dec
cwtl
fwait
stos
sub
mov
loope
dec
sub
data16
rcrl
call
dec
push
pop
stc
xchg
out
xor
pushf
inc
mov
fwait
loop
mov
insl
stos
out
in
test
sahf
dec
pop
sub
test
xor
push
push
popf
es
jge
mov
mov
sbb
inc
mov
or
xchg
imul
pop
stos
lods
xchg
repnz
movsb
jne
xchg
sub
dec
mov
popa
dec
das
xchg
fisubrl
js
cmp
sub
adc
imul
jnp
hlt
je
ljmp
fnstcw
sub
cmp
sub
movb
and
mov
cmp
xchg
clc
sbbb
jmp
sbb
or
sbb
lock
stos
adcl
test
loop
mov
js
pop
hlt
movsl
push
adcl
or
cmp
push
fmuls
cmp
cmp
mov
in
cs
adc
out
inc
jnp
push
fidivl
sub
shrl
nop
out
push
sub
lret
in
dec
jne
xchg
dec
call
jnp
pop
fnstsw
sub
or
pop
add
jnp
pop
aaa
push
or
pop
cmpsl
out
xor
push
inc
push
jecxz
lods
lods
mov
ficompl
dec
mov
mov
mov
jb
cmp
outsl
add
or
xchg
adc
push
int
lahf
sub
push
loop
and
imul
mov
and
or
adc
ja
loope
xchg
and
fsubl
adc
insl
mov
xor
movsb
xor
into
loop
mov
pop
loop
pop
mov
add
add
sub
test
push
add
mov
inc
push
jp
add
xor
add
int3
xor
subl
jne
and
jl
and
loop
pop
sbb
mov
jp
add
fwait
push
mov
mov
and
sti
jb
in
push
or
and
pop
mov
pop
pop
je
jns
mov
xchg
rorl
outsb
fadd
addl
loope
cltd
lods
sbb
add
inc
int
xor
bound
inc
lret
scas
addr16
pop
cmp
jge
scas
imul
dec
jmp
sbb
dec
push
je
test
push
inc
or
enter
dec
mov
pusha
cmpsl
fs
mov
ja
cmp
sbb
mov
lcall
mov
mov
jp
call
dec
rcll
xlat
shrl
in
sub
outsl
outsb
shlb
outsl
xchg
pop
in
cmp
ss
je
push
xchg
dec
andl
mov
pop
out
js
cmp
xor
cmp
xchg
lahf
mov
xchg
xchg
addr16
movsl
add
andb
inc
lods
sub
pop
mov
gs
cli
inc
pop
cmpsl
fstps
ja
xor
fiaddl
lods
push
pop
push
in
sub
frstor
and
adcl
jbe
addr16
movsb
rorl
xor
leave
je
pop
nop
leave
call
cmp
push
daa
pop
pop
fadds
sahf
or
mov
cmp
pop
sti
stos
test
and
inc
add
pop
push
or
mov
les
jecxz
ss
adc
jle
lret
mov
ss
cmpsl
mov
movsb
and
test
add
or
and
dec
sbb
push
cld
mov
and
or
popf
cmc
mov
js
imul
fs
sub
pusha
and
dec
and
add
sub
mov
cmpb
int3
mov
dec
sub
mov
pop
mov
mov
push
xchg
mov
or
cmc
sbb
push
push
xor
pop
push
push
xchg
sbb
out
adc
pop
pop
ret
stos
mov
dec
adc
sbb
jo
fnsetpm(287
xor
imul
and
jns
shl
mov
cmpsb
shll
aaa
inc
and
testl
dec
jmp
into
jmp
cli
push
movsl
dec
bound
dec
clc
bound
adc
scas
mov
pop
mov
inc
pop
cmp
mov
cmpsl
jo
or
or
ss
mov
clc
loop
mov
sbb
cmovns
std
inc
subl
mov
xchg
enter
sbb
pop
inc
ja
dec
loop
jecxz
cmp
inc
shll
nop
lcall
xor
leave
push
sub
daa
sub
shl
and
ficoml
cmp
adc
out
jae
repz
adc
add
clc
mov
jns
cmc
test
into
or
xor
das
mov
ss
mov
rep
and
lea
rorl
inc
ja
cli
cmpsl
in
cltd
fs
rolb
imul
mov
mov
lahf
cld
add
mov
xchg
stc
stc
xor
pop
cltd
std
mov
dec
daa
sbb
test
imulb
jno
mov
push
push
ret
fs
cmpsb
dec
test
jg
nop
and
gs
cmp
pop
pop
or
arpl
xchg
inc
lock
scas
flds
pop
sub
lds
push
out
jp
xor
cmp
push
sub
xchg
jg
xor
std
movsl
and
and
adc
fmull
movsb
lcall
or
lcall
ja
jnp
and
hlt
fisttpll
jne
aad
imul
out
mov
int3
dec
repz
mov
sub
jo
sbbb
addr16
inc
lods
cmc
and
movsl
adcb
cmpsb
loope
mov
int
jnp
cli
rclb
mov
ret
push
nop
loopne
mov
pushf
not
sbb
mov
adc
scas
cmpsl
lods
cmp
pop
cmp
xor
xor
inc
mov
pop
xchg
jb
inc
adc
int
mov
mov
addl
sub
push
cmp
enter
cmpb
pop
dec
pop
adc
rcr
popa
cmpsl
test
add
rcr
push
mov
push
push
cmp
jbe
subb
jge
pop
cmp
and
xchg
adc
mov
xor
cmc
and
xchg
mov
sti
adc
in
movb
lock
std
aas
mov
cmp
inc
out
push
xorb
jae
in
cmp
cmc
sarl
iret
push
sbb
xor
pop
les
int3
into
push
addr16
hlt
pop
loop
and
imul
stc
pushf
inc
jecxz
xchg
or
mov
cltd
pop
adc
cmpsb
stos
in
adc
js
or
add
sbb
out
adc
pop
lods
test
push
dec
mov
cld
cmp
sub
test
jl
xchg
sbb
out
shll
rol
out
fs
dec
jge
push
sti
out
js
dec
mov
xor
lret
ljmp
in
jp
std
out
push
pop
sbb
pop
mov
es
cmp
jb,pn
das
out
in
and
dec
stc
or
inc
mov
pop
mov
stos
shrl
scas
mov
xchg
aam
outsb
scas
lea
imul
sbb
hlt
push
inc
or
xor
inc
inc
sbb
or
lahf
arpl
lret
imul
js
pusha
adc
inc
inc
imul
mov
inc
pop
ret
jl
sbb
inc
and
pop
and
jae
add
or
pop
mov
les
ja
mov
xchg
push
cmpsb
mov
add
test
push
sub
shll
mov
push
daa
pop
add
push
mov
xchg
cmp
or
cmc
or
xor
sti
aaa
mov
scas
nop
nop
rolb
xorb
mov
jg
in
jae
mov
mov
sti
sbb
xchg
movsl
inc
xchg
sahf
cmp
cmc
fildl
scas
push
aam
daa
rorl
sbb
int
pop
and
addr16
or
or
les
sub
sbb
orl
dec
testl
push
jb
popf
test
push
and
mov
pop
push
push
scas
add
add
cmp
mov
test
sbb
imul
loope
mov
adc
mov
dec
mov
pop
cli
sbb
cmpsb
push
stc
xchg
test
push
loop
lret
js
jno
jmp
js
jno
xchg
jle
or
ljmp
enter
lods
out
icebp
mov
add
adcl
cltd
aaa
arpl
lock
repnz
adc
outsl
mov
mov
add
hlt
add
cli
negb
inc
pop
jbe
cs
loop
mov
lret
fadds
and
dec
jecxz
shlb
je
loope
jg
push
add
dec
add
es
jge
mov
mov
std
test
push
mov
inc
ljmp
sbb
xor
push
cmp
push
sbb
iret
jl
dec
ficompl
mov
mov
push
ds
mov
jp
xchg
cli
icebp
xchg
push
ljmp
xor
mov
jbe
nop
adc
xor
fwait
arpl
dec
lea
icebp
mov
mov
mov
pop
inc
cmp
mov
inc
fisubrl
or
mov
mov
lods
ret
and
adc
mov
lea
lea
in
insb
outsb
addb
sub
les
push
mov
repnz
sub
dec
mov
inc
sbb
bound
sahf
ret
mov
ficoms
filds
lret
pop
pop
jno
mov
rorb
xor
inc
or
imul
mov
aam
lods
cwtl
test
push
loope
mov
imul
xchg
sub
ret
popa
jns
add
ret
and
popa
push
mov
inc
sub
and
cmp
pop
xorb
idivl
int
outsb
inc
test
adcb
jmp
mov
sub
pop
xchg
pop
push
not
mov
and
jo
das
outsb
jl
adc
xor
in
cli
cmpsl
pop
xor
mov
add
inc
in
add
mov
mov
int3
cmp
mov
cld
cltd
arpl
ret
pop
fnstenv
adc
xchg
xorl
aaa
daa
push
pop
dec
pushf
inc
frstor
adc
in
in
jmp
or
pop
xchg
out
push
lahf
dec
aas
je
int3
pop
lods
in
jg
or
inc
or
adc
cmpsl
push
mov
mov
ja
push
push
xor
add
sti
xor
dec
xor
fdiv
mov
ret
jl
mov
and
add
stc
stos
jb
push
dec
in
and
in
bnd
test
roll
fbstp
jns
rorl
ja
dec
nop
mov
call
jns
pushf
outsl
aaa
add
lahf
mov
pop
mov
fcmovnbe
shlb
cmp
jmp
cmp
mov
jnp
mov
lea
mov
dec
jns
nop
dec
xor
lea
sahf
push
add
fsubrl
sti
push
mov
inc
mov
lock
mov
rorl
fcomps
cmp
mov
dec
mov
mov
jmp
cli
push
push
cmp
arpl
rcll
sahf
out
jb
sbb
push
gs
fistpll
nop
cmp
push
ds
out
adc
or
xor
jmp
gs
sbbb
sub
aam
dec
push
test
pop
rolb
sbb
int
jne
inc
push
jno
push
sbb
mov
or
vcomisd
pop
leave
jo
icebp
add
data16
mov
jge
outsl
fcoml
and
and
pop
gs
or
outsb
or
inc
cmp
xchg
push
cmpsb
cli
jne
popf
dec
mov
mov
add
cwtl
push
clc
imull
call
bound
mov
ljmp
sbb
hlt
sub
cli
mov
scas
push
and
mov
push
pop
or
cltd
fwait
dec
ret
sub
in
jle
sbb
call
mov
addr16
mov
ja
movsb
pop
std
int
xor
dec
out
pop
pusha
mov
push
adc
push
xchg
int
jge
leave
xor
sbb
loope
jnp
cwtl
std
jl
sub
xchg
imul
outsl
and
push
sub
jno
pushf
addr16
jmp
fstpt
hlt
shrl
test
out
cmp
push
ds
lahf
or
sub
inc
push
dec
push
push
test
popa
dec
mov
push
rcrl
pop
sti
shrb
cmp
adc
mov
cmp
xor
and
in
scas
dec
add
mov
xchg
pop
icebp
add
mov
movsb
mov
pop
push
push
cltd
jp
shrb
cmp
aam
dec
dec
stos
lret
pop
call
xor
cmp
jae
arpl
cmc
add
jge
push
imul
scas
daa
inc
add
bnd
pop
outsb
das
mov
cmpsb
mov
adc
sarl
mov
js
xor
shrb
xchg
add
rcl
jns
add
mov
and
in
cld
adc
in
test
mov
jecxz
xor
xchg
sub
xlat
mov
int3
and
hlt
dec
dec
cmpsb
iret
push
call
iret
xchg
mov
add
clc
push
aas
push
xlat
push
mov
les
int
push
arpl
fistpl
xor
shlb
mov
inc
add
mov
rcll
xchg
inc
imul
subb
push
jnp
dec
icebp
mov
es
lret
rcrb
pop
mov
fisttps
xchg
int
adc
xchg
and
lods
movsb
incb
cmp
xchg
ja
adcl
push
cmc
fists
int3
push
pop
sti
cltd
repz
inc
push
mov
dec
dec
les
in
xchg
jl
nop
jbe
int
inc
mov
shlb
xor
filds
test
std
adc
jns
int
push
adc
mov
fsts
xchg
xchg
cmc
push
push
test
out
xchg
xor
mov
test
push
divl
fidivl
inc
sbb
and
mov
movsb
push
sti
jb
xor
nop
mov
mov
jmp
jmp
cmp
jne
mov
or
mov
cld
inc
out
loop
into
aas
ds
inc
cmp
pop
test
hlt
cmp
ds
adc
scas
fidivrl
aad
and
mov
pop
pusha
mov
mov
shlb
icebp
mov
pop
pop
cltd
test
sbb
sbb
imul
ja
negl
pushf
aam
movsl
or
lods
sbb
pop
jns
mov
sti
pop
jmp
jno
mov
jmp
lock
ret
rorl
add
push
out
and
stos
mov
ret
jmp
ret
popf
jnp
mov
mov
dec
scas
dec
mov
fisttpll
pop
mov
inc
jle
lds
cmp
mov
roll
push
pushf
jmp
fdivrp
aad
xor
and
fldcw
arpl
test
lret
pop
adcl
inc
add
inc
aad
mov
push
std
jmp
adc
dec
test
jmp
xchg
js
jnp
xor
sbb
dec
jne
inc
nop
sbb
out
into
rclb
xor
or
push
jmp
insb
insb
push
hlt
pop
and
push
and
dec
repz
xchg
aad
sbb
cs
popa
pop
and
out
enter
adc
and
add
jns
sahf
int
fsts
out
mov
inc
ror
stos
addr16
sbb
jno
cmp
jp
jp
xchg
and
xor
jb
movsb
out
and
inc
test
push
pop
sub
test
xor
inc
jg
dec
imul
inc
mov
sbb
push
loop
enter
mov
in
pop
outsb
add
outsl
fimuls
repnz
add
aam
push
ret
fwait
fs
xchg
mov
sub
in
popf
ljmp
and
mov
or
jge
inc
add
pop
leave
xor
out
add
pushf
aas
pop
mov
push
jle
jg
enter
adc
fmull
cmc
pop
dec
pop
lcall
rolb
loop
je
aam
dec
sbb
inc
cmp
dec
fdivrs
pop
jnp
aas
cwtl
sbb
nop
xor
int
jo
add
out
es
xor
cmp
xor
pop
cltd
cli
mov
fmuls
sub
loopne
insl
into
jno
and
das
sbb
or
cmp
rolb
popa
mov
fcomp
lret
gs
inc
adc
or
loopne
fisttps
js
lret
outsb
ret
loopne
xorl
stc
jmp
pusha
and
popa
xlat
inc
test
push
fisttpll
jno
cli
dec
aaa
adc
aaa
lock
or
ret
jbe
aaa
jge
shll
dec
jo
cltd
sbb
movsl
or
bound
add
inc
add
adc
test
add
sbb
mov
outsb
loopne
push
dec
out
jb
rcl
imul
xchg
outsl
inc
aam
mov
jl
add
out
add
mov
insb
aaa
jo
loop
mov
jl
mov
clc
add
enter
clc
push
pusha
outsl
aaa
push
jne
xchg
adc
shrl
xor
aaa
in
adc
xchg
adc
andl
sub
adc
inc
sbb
sbbl
int
sub
aam
push
stc
call
adc
jl
test
leave
push
ds
pop
cmp
push
mov
inc
adc
adc
int
and
cli
adc
dec
test
add
adc
roll
pop
and
push
fwait
shrl
mov
call
loop,pn
pop
bound
sti
dec
dec
fidivrs
xlat
dec
push
nop
pop
mov
dec
sbb
lcall
jo
adc
sub
in
mov
push
jl
test
ja
cmc
xchg
xchg
pop
pop
and
scas
loopne
jle
aaa
or
fucomp
stos
pop
mov
lods
into
cwtl
xchg
repz
dec
mov
cltd
test
in
fs
popa
pop
sbb
and
pusha
call
lea
out
in
mov
pop
push
fcom
rcrl
ds
aam
xchg
dec
andl
cmp
inc
ljmp
int
decl
out
dec
cmp
and
pop
mov
sub
arpl
movsb
lcall
and
adc
inc
into
fcmovnu
sub
rcrl
xlat
push
inc
lcall
jle
mov
jno
enter
cmp
xchg
mov
cwtl
lret
push
iret
ljmp
lods
mov
movb
and
ret
mov
icebp
daa
xor
inc
mov
ss
push
cmc
jnp
pop
ljmp
pusha
cmpsb
adc
fnsave
divl
ror
ret
int3
xlat
mov
xchg
xchg
lds
aaa
or
or
mov
mov
push
je
shlb
add
cli
or
fnstsw
ss
xlat
outsb
test
lret
xchg
lret
fimuls
pop
cwtl
clc
cs
lret
enter
test
inc
mov
sub
jecxz
mov
push
push
gs
mov
into
clc
movsl
gs
pop
xchg
pop
adc
mov
shlb
mov
out
push
and
or
loopne
hlt
jle
add
jne
scas
and
pop
aas
xlat
or
adc
imul
rcl
fstp
test
insl
push
push
imul
mov
cmpsl
push
icebp
fiaddl
mov
insb
lods
xlat
in
push
jbe
jmp
push
mov
adc
insb
stc
lahf
inc
stos
mov
xchg
orl
enter
adc
dec
push
pushf
pop
rol
mov
cltd
sbb
xor
je
aad
mov
in
lea
dec
dec
lods
xor
dec
mov
out
fadd
das
add
scas
sub
jbe
adc
mov
sub
pop
in
and
dec
fisubrs
mov
add
cmpsb
and
jb
xchg
xor
fnstcw
add
test
cld
out
xchg
xchg
jnp
sbb
push
or
fmull
pop
adc
cmp
sub
adc
mov
jne
jb
aad
notb
sub
fmuls
mov
pop
mov
pop
outsb
xor
lcall
incb
loopne
jns
sub
xor
sub
in
fs
leave
mov
incl
mov
mov
add
es
add
fisttpl
cltd
or
ret
imul
mov
and
lods
dec
jns
jo
add
xlat
mov
or
int3
out
push
mov
inc
popf
mov
out
inc
out
dec
pop
add
fdivp
add
ficoml
daa
and
lock
cltd
out
fsub
mov
insl
test
sarl
sbb
mov
stos
pop
fstps
out
xchg
or
pop
sub
ds
xlat
cltd
gs
stos
pop
mov
roll
xorl
pop
cmpsl
data16
jo
fstp
addb
jb
aaa
or
fisttpll
aad
push
xor
add
push
je
imul
fadd
or
push
shr
xchg
arpl
push
insl
mov
movsb
arpl
dec
sub
or
and
das
mov
outsl
in
cs
mov
inc
test
mov
jb
sti
jne
or
jecxz
cld
repnz
call
or
push
push
sbb
or
xchg
inc
test
rcrb
mov
inc
shr
movsb
call
push
aam
mull
imul
sbb
pop
mov
fucom
ja
sub
mov
int
mov
or
xchg
shl
mov
mov
sbb
hlt
test
mov
xchg
sub
mov
fsubrl
push
loopne
pop
jno
xchg
sub
mov
les
aad
lcall
adc
insb
push
aas
jne
adc
mov
inc
fistl
ss
in
push
adc
sbb
leave
mov
cltd
lods
and
pop
pop
int
scas
add
es
lods
js
mov
hlt
cltd
mov
dec
push
shrl
imul
jp
mov
xchg
rolb
leave
add
or
out
cmp
adc
jge
push
sahf
sti
mov
sbb
leave
pusha
add
es
xchg
gs
jns
xchg
mov
xlat
jecxz
fsubrs
stc
sbb
adc
dec
loopne
xor
sbbl
jnp
stc
insb
or
sbb
cli
std
xor
add
push
mov
repz
imul
inc
lret
mov
stos
ja
cmc
inc
lods
cwtl
mov
inc
and
mov
inc
adc
lret
les
xor
sbb
lret
in
cs
imul
cld
add
stos
les
or
and
shll
sbb
cmpsl
aad
int
leave
xchg
test
fsts
ljmp
sahf
add
clc
je
xor
jno
jg
iret
xchg
dec
loope
xchg
jbe
lret
mov
xor
mov
fildll
jae
pushf
xchg
out
test
push
insb
add
mov
je
inc
ljmp
jns
adc
fbstp
push
fbstp
pop
mov
xchg
adc
inc
xchg
adc
mov
xor
or
sub
jge
call
outsl
mov
clc
movsb
pop
mov
lock
ret
in
dec
mov
jmp
dec
sbb
ds
sbb
popf
pop
sahf
into
pop
movsb
cmp
push
jmp
fwait
add
or
inc
fstpt
out
popf
push
movsl
das
mov
lods
or
pop
cmc
outsl
sub
sbb
negb
pusha
mull
enter
mov
clc
sbb
push
call
jg
and
daa
jecxz
ljmp
and
push
fbstp
loop
sub
dec
add
mov
mov
inc
xlat
lods
pop
inc
fistl
sub
in
jno
test
xchg
imul
push
jae
roll
daa
mov
xor
es
std
data16
cmp
ds
pop
mov
dec
push
push
push
daa
cld
xchg
or
mov
and
nop
cmp
xchg
scas
mov
xlat
adc
in
cmp
lods
jae
call
fdivp
pop
rcrb
inc
pop
xor
and
dec
jb
test
push
or
adc
xchg
dec
ljmp
insl
pop
shrb
xchg
adc
xchg
stc
push
xchg
dec
in
test
inc
fstpl
popa
pop
loope
and
dec
filds
dec
xchg
out
push
icebp
xor
fnstcw
adc
insl
mov
mov
lds
movsl
and
ret
ljmp
push
pop
leave
movsb
shlb
mov
in
movsb
ss
shlb
xchg
dec
fcmovnu
hlt
std
and
cmp
test
dec
pop
mov
xchg
jge
in
data16
dec
js
pop
ret
repnz
add
enter
lret
inc
je
imul
pushf
mov
fisubl
jl
sub
and
mov
in
test
lahf
adc
sub
data16
pop
test
mov
mov
fcoml
or
cs
inc
mov
ret
sub
movhps
mov
popa
imul
mov
pop
hlt
in
aam
out
pmulhuw
insl
cmp
sahf
mov
sbbl
xor
js
andl
lds
mov
dec
out
in
leave
cmp
hlt
faddl
pop
je
loope
out
pop
out
mov
pop
idivb
sub
and
mov
repz
enter
ljmp
dec
adc
ficoms
inc
test
lock
ljmp
test
fwait
movsb
cmpsb
outsb
add
cmp
cltd
scas
inc
lret
int
cmpb
rcrl
out
in
icebp
push
loop
js
incb
inc
fdivl
inc
fisttpl
xchg
call
repz
daa
dec
fists
mov
rcrl
inc
fdivrl
movsl
in
xlat
pop
movsb
cmp
pop
icebp
jo
pop
arpl
xchg
sub
mov
mov
pop
xlat
mov
gs
fldcw
shr
addl
or
or
xor
enter
iret
repz
adc
inc
aam
or
gs
cltd
sub
and
rcll
lods
inc
and
int
mov
in
test
lahf
ljmp
lock
xchg
inc
sub
je
dec
iret
enter
stos
ljmp
or
pop
insb
pop
scas
add
mov
or
adc
jp
lcall
mov
dec
dec
fnstenv
rorl
bound
mov
add
adc
lods
repz
mov
xor
cmp
fsubl
pop
dec
mov
jle
cmp
mov
shlb
test
push
test
imul
mov
xor
adc
cmp
push
jbe
xchg
in
add
into
mov
leave
xlat
or
int3
ja
pop
orl
dec
es
mov
lock
ja
test
shlb
int3
scas
sbb
in
push
sub
mov
fsts
mov
push
outsb
or
cwtl
fs
cmc
inc
andb
clc
rorb
jae
aad
jno
mov
fisubrl
add
add
jge
add
mov
and
icebp
std
xor
fcompl
sahf
sbb
aaa
int3
clc
sti
sbb
mov
js
xor
dec
and
popa
push
arpl
mov
ja
lods
sub
pop
test
lcall
das
xor
and
aaa
orl
mov
mov
sbb
cmp
jo
sbb
adc
je
push
mov
das
add
fwait
xchg
cmp
push
cmpsl
push
push
lds
scas
sbbl
xchg
hlt
lods
addb
call
cli
inc
pop
xor
jno
and
lods
repz
loope
dec
mov
push
fwait
sbb
loope
xchg
adc
lods
roll
loopne
inc
mov
int
jne
pop
movsl
ljmp
xchg
inc
mov
lock
jns
jecxz
and
xor
andb
shl
or
sbb
xchg
popf
ficomps
push
and
dec
cld
inc
in
sub
xchg
xchg
mov
inc
jl
cmp
and
shrb
in
pop
mov
add
ficoml
in
and
ds
or
imull
test
cltd
in
ret
jmp
cs
movsb
adc
pop
into
aaa
loope
dec
pop
jecxz
popa
jp
dec
iret
sarl
push
and
mov
test
es
repz
lahf
inc
mov
mov
rclb
xchg
mov
cmpsb
sahf
xor
aaa
jle
es
and
daa
cld
jno
enter
mov
cld
repnz
das
test
push
aaa
cld
loope
or
pop
pusha
out
jo
mov
push
dec
arpl
dec
loopne
into
ja
adc
shlb
enter
sub
push
mov
add
add
xor
fwait
cmp
test
dec
pop
mov
test
xchg
mov
enter
sbb
mov
test
gs
sbb
xor
dec
cli
or
movsl
aad
jae
gs
add
mov
sub
jmp
jne
push
and
push
mov
ror
test
mov
cmpsl
enter
aam
sarl
pushl
add
dec
push
pop
aam
xchg
test
mov
repnz
xchg
xor
cmp
cmp
mov
pushf
outsb
into
mov
roll
mov
sub
gs
mov
mov
mov
push
btc
mov
fldenv
and
xlat
loope
push
cmpsl
or
push
add
add
mulb
inc
push
xor
ffreep
aas
push
xor
xor
cmp
int3
popa
std
push
subl
cmpsl
pop
dec
sbb
in
xchg
imul
xchg
aam
dec
sbb
xlat
dec
xor
int
pop
jne
pop
dec
call
imul
nop
cmpb
mov
out
push
lods
sbb
mov
movsl
sbb
add
add
mov
mov
fistps
sub
test
negl
test
fnsave
adc
outsb
sti
out
sti
xor
sbb
push
xor
mov
mov
test
call
call
and
scas
ss
inc
xor
pop
fistpll
int
shl
stc
dec
cli
and
dec
insb
xchg
cmp
out
xor
jne
mov
dec
gs
mov
push
adc
add
insb
lcall
xabort
or
adc
int3
faddl
jl
imul
adc
xor
and
std
decb
into
pusha
stc
pop
xor
jl
mov
jg
push
jmp
test
pop
mov
into
xchg
and
loop
cltd
jo
jns
enter
cltd
out
shlb
stos
adc
inc
sti
jno
in
jmp
mov
xchg
or
cld
xchg
sbb
pop
ja
test
shrb
add
adc
mov
dec
mov
lahf
xchg
mov
and
jno
inc
push
bnd
lods
mov
sub
push
cmc
mov
xor
and
int3
jecxz
inc
pop
jmp
mov
addb
xorl
fcmovu
lock
stc
pop
or
stos
std
test
or
mov
adc
mov
mov
pop
movsl
lea
push
push
push
jge
jge
and
jno
lcall
dec
lds
aas
mov
add
mov
jle
in
or
scas
imul
jecxz
pop
or
add
mov
cmp
adc
add
inc
lds
sub
jno
arpl
mov
dec
andl
mov
mov
out
repz
mov
iret
mov
or
xchg
repnz
stc
aaa
mov
stos
add
push
xor
sbb
push
int3
imul
inc
xor
lcall
subl
mov
push
dec
lret
rcl
pusha
inc
push
int3
dec
mov
in
xor
addl
xchg
xor
dec
mov
push
aad
les
in
shll
cmpsl
icebp
imul
cmp
inc
or
or
shll
jnp
jb
push
sub
jecxz
je
pop
push
xor
repnz
in
xor
add
ljmp
and
push
mov
bt
std
sti
pop
mov
in
rorb
test
bound
mov
xchg
sbb
stos
rcr
scas
mov
sub
lret
add
jbe
leave
or
shr
movsb
sbb
fidivs
leave
or
sub
sbb
sub
aas
cli
fldcw
or
in
dec
cld
jmp
pop
mov
xchg
in
push
idivb
jge
or
inc
jb
fiadds
ss
cmp
xor
cmp
push
icebp
jmp
and
lock
lret
cld
xchg
daa
mov
dec
call
mov
mov
shrb
pop
adc
dec
imul
push
pushf
mov
or
cli
xchg
inc
inc
lea
sbb
lret
int
jmp
pusha
sbb
ds
jo
jae
mov
sahf
loope
xchg
sub
add
mov
jl
inc
fildl
cmpsl
stc
fdiv
in
andl
sbbb
incb
das
pop
movsl
cmp
push
and
fisubs
loope
xor
pop
jo
out
push
mov
adc
daa
mov
data16
fsub
xchg
mov
imul
and
pop
dec
loopne
lods
stos
inc
fisubrs
pusha
xor
test
xor
es
out
jne
inc
ficoms
lods
pcmpgtb
mov
popa
mov
fucom
adcb
or
cmp
std
sahf
pop
mov
sbb
scas
fidivs
adc
xchg
xor
lret
in
repnz
in
pop
hlt
push
inc
adc
jae
jnp
jno
scas
inc
xchg
cltd
xor
out
arpl
out
dec
sbb
push
insl
cmp
insb
push
mov
mov
loopne
cmp
adc
pop
data16
arpl
into
in
pop
jg
or
insb
pop
jge
xchg
and
andb
xchg
aad
jno
mov
out
cmp
ja
out
jnp
das
xchg
in
xchg
mov
lret
push
and
inc
sub
int
jnp
outsb
xchg
sahf
pop
jecxz
mov
js
hlt
adc
out
pop
fwait
mov
inc
jl
js
mov
xor
mov
mov
lea
insl
jno
adc
xchg
xchg
hlt
mov
mov
leave
in
adc
aaa
aaa
xor
push
mov
mov
fldt
ljmp
and
leave
pusha
test
out
xlat
aad
pop
pop
stc
add
jnp
dec
and
lods
popf
inc
fmul
into
and
and
aas
push
inc
jge
jae
pop
hlt
movsb
xchg
fwait
xor
cmpsl
jnp
sbb
lcall
mov
push
int
fnstenv
xchg
stos
inc
les
xchg
cmp
push
mov
xchg
cmpsl
ds
cmp
shrl
loopne
hlt
rclb
sbb
rcrl
fwait
xchg
int
fidivl
xchg
stos
inc
lds
fwait
dec
pushf
mov
mov
xchg
repnz
std
inc
fsubr
fwait
cmp
lret
cmc
out
xchg
jb
enter
loope
mov
xor
fwait
repnz
push
stos
inc
mov
fnstenv
sahf
jb
sarl
mov
mov
popf
repnz
movsl
sub
adc
pop
pop
hlt
dec
fwait
jb
int3
mov
cli
xchg
mov
xor
cmpsl
rorb
insl
ret
jnp
popf
mov
test
xchg
shrb
clc
pop
mov
fwait
lahf
ss
xor
mov
idivb
rcrb
xchg
into
gs
mov
repz
pop
out
xchg
xchg
into
gs
aad
ljmp
push
in
in
xchg
sub
adc
loop
leave
mov
in
and
push
push
jmp
leave
mov
cli
xchg
insl
leave
stc
jge
ljmp
pop
ficoml
call
leave
leave
inc
fdivrs
mov
fidivs
les
xchg
insl
movsb
sti
xchg
pop
pushf
fidivs
push
sub
dec
xchg
insl
lds
fidivs
inc
pop
lock
insl
ret
repz
xchg
mov
cmp
xlat
insl
rcll
add
sahf
fidivs
mov
mov
ret
test
fidivl
jg
fldt
xchg
les
testb
xchg
sbbl
movsl
ljmp
sub
nop
jg
ret
add
sahf
out
test
das
rcrl
jnp
rcl
test
mov
dec
in
nop
inc
fld
jns
ret
imul
ret
popf
arpl
or
push
inc
faddl
inc
fidivrl
andl
shl
js
out
dec
loop
out
data16
mov
xchg
push
ljmp
push
out
lret
add
xchg
pop
repnz
ljmp
sub
cli
into
lcall
dec
jo
inc
fwait
imul
or
hlt
xchg
mov
push
call
jmp
and
lea
into
mov
and
push
rorl
ret
or
aam
mov
or
mov
es
pop
fwait
aaa
into
or
and
cmp
or
mov
and
and
or
cwtl
or
mov
int3
cmpsb
or
addb
in
mov
or
and
and
xchg
test
xor
ret
ss
and
xor
dec
cmp
das
pop
mov
sub
adc
lds
jo
rolb
les
imull
out
call
int
or
cmp
das
mov
xor
mov
mov
in
pop
cs
mov
mov
out
ficoms
movl
aad
sub
jns
pop
sub
dec
add
popa
xor
stos
loop
faddl
pop
mov
ss
das
jmp
pusha
cmpsb
aas
sbb
aas
xor
dec
lods
jae
fisttps
mov
mov
daa
mov
pop
lea
std
push
mov
cmp
rcrl
dec
jecxz
mov
mov
push
lea
std
or
mov
aam
dec
fbld
sub
jge
xchg
test
je
sbb
lods
inc
push
cmc
add
push
imul
les
pop
cmc
repnz
mov
jo
inc
xchg
seto
orb
nop
daa
mov
mov
mov
sbb
lds
mov
lods
inc
sub
testl
xor
ss
test
rol
pop
ret
in
lods
inc
das
sbb
mov
jle
mov
or
push
enter
fxsave
mov
pop
sahf
push
sub
or
out
test
mov
cwtl
das
orl
clc
push
mov
pop
or
in
test
or
fadds
lret
push
mov
sub
mov
inc
fldcw
ds
insb
int3
arpl
jbe
fcomps
mov
mov
pop
test
pop
testb
aaa
cmc
test
out
jae
fsubp
inc
fcom
xorl
mov
sti
xchg
pop
leave
rcrl
xor
xor
sbbl
stos
jns
frstor
fstl
mov
mov
add
pop
push
scas
inc
ss
fstl
flds
lds
xor
pop
loop
scas
inc
xor
jnp
in
push
popf
loop
inc
fstp
jg
lds
xor
sbb
mov
mov
push
popf
in
aas
mov
mov
xchg
inc
cli
scas
inc
sub
mov
popf
in
xor
ljmp
lcall
mov
imulb
adc
ret
xor
mov
stos
inc
stos
mov
call
inc
divl
lret
jnp
cmc
mov
ss
je
push
cmpsl
jmp
out
xchg
mov
mov
inc
fisubl
lret
mov
mov
dec
loop
xor
push
push
notb
sub
sub
mov
repnz
jne
pushf
jp
in
rclb
ret
std
popa
add
in
jb
movsb
fs
std
in
hlt
mov
dec
in
fwait
enter
data16
push
sbb
sub
add
std
out
fsubrs
jl
in
and
mov
arpl
testl
jmp
push
mov
ljmp
scas
pop
mov
mov
shll
sti
push
lods
sub
gs
jp
push
mov
jns
inc
push
push
lods
cmpsl
imul
mov
pushf
call
es
aad
inc
mov
cmp
repz
lods
stos
repnz
daa
in
push
mov
call
push
lods
sbb
mov
mov
lods
mov
mov
push
mov
mov
xchg
and
xchg
xchg
stos
sbb
leave
orl
jg
and
jno
pop
sahf
sub
mov
ret
lock
jg
stos
xchg
call
dec
imul
xor
cmp
jl
mov
sbb
sbb
push
stos
pop
loopne
dec
cmp
pop
imul
jle
inc
fnsave
lret
call
jne
jbe
stos
loopne
sbb
shrl
pop
pop
mov
hlt
xlat
outsb
es
repz
sbb
in
mov
fdivs
xor
mov
mov
mov
mov
mov
mov
movsb
inc
xlat
push
add
dec
inc
scas
mov
shl
jge
push
scas
clc
scas
inc
jmp
stos
inc
fs
sub
scas
inc
xchg
mov
lret
inc
fld
jl
push
scas
pop
scas
inc
js
mov
xlat
cld
stc
stos
inc
sub
pop
testb
pop
jle
jge
mov
ret
fwait
xor
stos
add
fistl
mov
test
fwait
xchg
aas
mov
dec
out
unpckhps
popa
xor
xchg
popa
mov
xchg
mov
call
or
jno
cmp
xlat
insl
pop
pop
lea
lea
mov
rcll
test
xor
xor
push
push
out
xchg
in
cmpsl
push
sahf
xlat
shrl
mull
mov
inc
inc
inc
fidivs
lods
inc
sahf
xchg
popa
cld
sarl
adc
loop
inc
xor
xchg
cwtl
test
mov
xlat
fnstenv
cmp
inc
and
mov
push
in
xchg
jge
test
mov
or
iret
xor
cld
pop
xchg
sub
dec
pop
mov
mov
or
ret
hlt
add
mov
adc
montmul
cmpsb
test
lcallw
mov
dec
loop
mov
jnp
sub
xchg
pushf
xchg
iret
rorl
rcll
jbe
call
xchg
xor
movsl
cmp
fwait
ja
int
mov
push
lds
inc
lcall
push
lcall
rorb
aas
dec
loop
ds
mov
pop
notb
jle
and
push
jmp
daa
movsl
cmp
mov
mov
int3
mov
sbb
bound
mov
gs
aaa
pusha
or
push
stos
or
fcoml
and
sub
pop
xor
sbb
sbb
mov
dec
mov
mov
cltd
mov
test
cmp
bound
xchg
shlb
adc
mov
and
test
daa
adc
mov
es
cltd
push
adc
iret
adc
mov
mov
push
movsl
dec
mov
daa
mov
xor
or
inc
xor
aad
sbb
mov
push
adc
mov
inc
sbb
mov
negb
or
in
sub
push
loop
xchg
xchg
dec
inc
mov
sub
cmp
adc
int
fistps
dec
adc
dec
inc
lcall
mov
xor
inc
cmp
adc
mov
pop
inc
add
orl
and
adc
inc
push
push
dec
lcall
dec
push
mov
inc
sbb
jg
addb
dec
loop
aam
out
dec
out
psubusw
fsubrs
jmp
fnsave
testb
leave
cmp
mov
mov
aam
push
les
adc
jo
movsb
out
test
and
imul
inc
outsl
push
xor
out
dec
inc
rclb
int3
arpl
sahf
xor
dec
dec
sti
xchg
aas
adc
popa
inc
dec
push
out
aas
sbb
jp
dec
xor
aas
sbb
pop
dec
dec
push
lods
aas
pop
in
test
outsl
push
inc
push
inc
fldl
pop
gs
push
dec
xchg
mov
pop
inc
cmp
popf
stos
sbb
orb
repnz
adc
inc
add
jb
imul
test
mov
inc
or
jnp
cmc
mov
fbstp
or
rclb
jbe
aad
lahf
and
in
test
testb
or
cmp
jae
fidivl
jae
test
mov
mov
es
xchg
pop
std
mov
out
add
cltd
xor
mov
test
mov
fs
cwtl
sub
sbb
mov
mov
fcmovnbe
push
lds
in
out
mov
pop
sbb
cmp
mov
mov
fcomps
test
mov
add
mov
pop
fs
xchg
push
or
jmp
inc
mov
imul
sub
lea
test
sub
push
scas
xchg
loope,pn
in
test
mov
cpuid
pop
xchg
ljmp
dec
jb
cmp
adc
jmp
mov
shll
les
adc
test
or
mov
sbb
mov
in
subl
push
mov
jp,pn
mov
movsb
out
pop
push
pop
mov
push
xchg
sub
pop
hlt
xor
loopne
ljmp
mov
icebp
ja
hlt
cwtl
hlt
inc
push
mov
out
and
pop
pop
hlt
jl
fnsave
push
mov
iret
xchg
sub
mov
jle
mov
ja
es
imul
pop
pop
push
mov
lahf
mov
sub
inc
mov
mov
xchg
hlt
int
loopne
out
xchg
push
mov
std
jle
out
sahf
adc
mov
mov
shld
push
jmp
or
mov
and
es
xchg
mov
fsubs
mov
push
or
pop
jp
sbb
imul
adc
adc
sub
lahf
mov
and
push
cmc
jb
out
sbbl
aad
test
dec
mov
pusha
imull
sub
rcrb
test
sbb
popf
xor
test
cs
add
jb
sub
push
test
or
sbb
pop
sbb
ds
stos
inc
clc
mov
clc
jl
lahf
ss
mov
jg
adc
push
lcall
inc
ds
mov
sub
dec
rcrl
adcb
shl
mov
mov
dec
les
jne
mov
xlat
mov
das
cmp
cmp
inc
cs
mov
mov
sub
jp
inc
pop
or
dec
jns
and
clc
popl
or
push
sbb
aam
inc
mov
xor
jbe
inc
xor
test
sbb
pop
and
push
cmp
inc
sbb
rorb
call
dec
cwtl
rcrl
mov
adc
inc
fcmovnbe
sbb
fmull
sti
xchg
aad
outsb
add
mov
pop
dec
lret
mov
rolb
pop
inc
fmuls
lock
push
push
dec
and
pop
inc
shrl
ret
jg
add
jno
int
inc
je
andb
std
dec
jae
pop
sbb
dec
jb
jmp
sti
inc
jb
arpl
dec
loopne
jno
mulb
stc
inc
jne
push
push
je
repz
pusha
idivl
je
imul
jmp
jae
repnz
mov
out
jb
scas
fs
gs
aas
js
mov
dec
in
fwait
iret
data16
gs
mov
sub
pop
mov
mov
data16
aaa
mov
dec
out
jae
loop
andb
dec
mov
cmp
inc
fisubs
or
xor
fdivl
lods
scas
push
fildll
repz
sub
outsb
pop
fnstsw
add
arpl
stos
loopne
faddl
cs
insb
fdivr
dec
jecxz
and
xchg
mov
mul
rcll
jmp
add
out
push
cmc
pop
repz
mov
mov
movsl
js
mov
sbb
or
dec
mull
mov
cld
mov
xchg
sub
mov
inc
or
xlat
out
and
mov
or
mov
mov
dec
mov
mov
mov
dec
loope
push
adc
mov
testl
call
in
into
gs
and
nop
or
mov
lods
adc
mov
imul
pop
test
push
lods
vmwrite
stos
aas
enter
pop
lock
cmc
push
call
mov
lret
mov
into
test
roll
jno
push
in
loope
sbb
test
push
in
and
push
lahf
ss
cmp
loope
icebp
sbb
xor
out
and
xchg
jno
mov
movsb
mov
lods
jno
push
in
xchg
out
push
mov
test
xor
lds
lods
imulb
push
in
fwait
imul
pushf
stos
cwtl
das
sbb
push
lods
jae
pop
lock
movsb
xchg
sub
rclb
icebp
cmp
stos
outsl
insb
add
ret
hlt
and
inc
inc
jno
dec
mov
ret
shrl
mov
lock
or
aas
push
sub
xchg
mov
dec
or
loop
add
xor
push
test
es
mov
push
cwtl
pop
test
jb
rorb
imul
pusha
jae
out
pop
jg
mov
aaa
sub
sbb
cs
negl
sbb
or
sahf
repnz
lret
or
cli
lcall
mov
call
and
sbb
aad
cmp
shrl
in
lea
mov
fbld
adc
xor
mov
out
mov
insl
cmp
rclb
hlt
mov
scas
adc
scas
add
enter
mov
push
dec
out
and
iret
push
cmpsb
insl
add
je
in
movsl
stc
mov
sub
je
stc
dec
test
sub
pop
shrl
dec
lahf
repnz
and
iret
repz
add
add
repz
adc
or
xchg
and
cld
repnz
xor
vmovapd
loop
inc
divl
les
movsl
cmp
mov
lret
jb
and
xor
jne
mov
insb
push
inc
lds
ror
inc
push
push
vpand
fs
mov
orb
jae
scas
in
sub
aam
xchg
faddl
xchg
push
pop
shlb
jg
dec
mov
sub
mov
shrb
or
lock
data16
pop
jns
movsl
stos
jge
sbb
shlb
loop
and
push
push
jo
add
ret
xchg
cmc
leave
cld
xchg
sti
push
cmpsb
cmp
dec
imul
rcrb
rclb
lidtl
inc
popa
pop
mov
gs
sub
mov
pop
repz
push
mov
xchg
mov
movsb
loop
mov
das
add
ret
xor
push
dec
loope
mov
push
cmpsl
sub
xchg
sub
dec
cmpsb
jle,pt
dec
mov
gs
sbb
out
daa
cmp
pop
outsl
inc
add
rclb
dec
adc
ss
imul
xchg
fmull
and
popa
aaa
stos
inc
push
mov
pop
mov
jl
and
push
push
xor
lcall
and
cld
aas
pop
push
fidivl
sub
pop
jno
mov
les
lods
cmc
int
xor
push
xor
dec
push
push
insl
movsl
mov
hlt
mov
or
adc
xchg
imul
pushf
mov
arpl
mov
jmp
cmp
outsb
add
mov
and
stos
inc
out
inc
fsubr
cwtl
fsubrs
minps
inc
jmp
mov
icebp
push
out
and
adc
xor
push
cmp
roll
out
mov
sti
testb
hlt
dec
mov
out
xor
fdivrl
add
test
lret
sub
js
xchg
dec
test
mov
fcomps
jl
rorl
cli
xchg
imul
inc
mov
pop
and
push
xchg
inc
outsl
add
mov
ljmp
repnz
std
dec
shll
sbb
push
in
ss
jbe
ret
jne
jmp
push
ljmp
leave
lock
xor
shlb
push
xchg
push
roll
and
mov
stos
inc
push
add
ja
pop
lods
pop
xchg
mov
add
xchg
inc
and
scas
andb
aaa
movsb
clc
nop
and
stos
mov
xchg
stos
scas
aad
fcmovne
sti
xchg
clc
sti
or
xor
aad
outsb
push
std
xchg
jb
and
mov
gs
leave
and
xlat
in
call
or
mov
and
scas
je
pop
lods
lea
mov
popa
out
popf
sub
test
jne
in
ds
or
enter
cltd
xchg
xchg
pushf
xor
mov
data16
push
pop
out
dec
adc
mov
test
fbstp
int3
push
out
cmp
stos
xor
int3
fs
nop
sub
adc
xchg
ficoms
mov
test
lret
sbb
divl
mov
push
adc
and
divl
jno
iret
gs
xchg
outsb
push
out
sub
pop
enter
jl
pop
fucom
jle
adcl
and
pop
inc
cld
xchg
pop
jnp
xor
xchg
pop
out
clc
movsl
add
mov
mov
mov
out
mov
fcompl
cmpb
orl
xor
mov
fnstsw
andb
lods
xor
das
std
fs
fistl
mov
dec
dec
lret
pop
imul
cltd
insb
dec
mov
arpl
add
filds
push
in
and
cmpsl
sbb
hlt
shlb
lret
aam
ja
negl
xchg
inc
push
push
loope
lock
mov
inc
pop
cmpsb
sub
aad
jae
fs
push
andw
mov
dec
adc
mov
arpl
cmpsb
ret
jae
cmp
pop
cwtl
aas
shrl
loope
jns
outsb
push
lea
mov
imul
push
cli
jae
inc
pop
negb
pop
add
int3
dec
adc
pop
add
jae
adc
dec
lock
cli
dec
insl
mov
das
mov
orl
jns
xorb
and
cmc
mov
lods
mov
jmp
sub
dec
jg
decb
out
rcl
sbb
sub
inc
jae
pop
mov
sub
mov
lcall
sub
dec
fdivl
js
mov
mov
repnz
shl
jp
cs
dec
cmp
popf
xor
xchg
sub
dec
loopne
xor
mov
ret
add
fildll
lret
sbb
lock
xor
or
jb
popa
decb
mov
xor
and
cld
xor
jl
mov
fisubrl
mov
fnstcw
mov
fdivrl
aad
orl
shll
arpl
rorb
mov
loopne
imul
or
mov
testb
fisubrs
or
js
push
cmpsb
inc
xlat
and
ret
push
icebp
jmp
daa
jns
xchg
scas
inc
mov
inc
add
sbbb
jmp
xlat
adc
repz
push
cltd
je
mov
inc
into
aad
or
jmp
push
out
cs
inc
dec
mov
or
pop
jle
test
nop
sub
aam
out
push
push
push
jmp
loop
scas
inc
sbb
imul
cmp
pop
icebp
inc
call
inc
mov
fidivs
lods
pop
stos
int3
hlt
cs
add
fcoms
mov
push
sbb
cmp
test
arpl
cmpsl
mov
cmpsl
cmp
fisubs
js
setnp
cmpsb
cmp
jae
fmull
jb
adc
cwtl
xor
cmp
dec
push
std
subb
mov
enter
or
dec
and
std
push
popf
xor
movb
in
fcomip
cmp
mov
push
cmp
lret
inc
mov
fnstcw
shlb
pop
inc
xlat
xor
inc
mov
movl
adc
xor
dec
in
push
pop
mov
fisubrl
shlb
out
test
mov
cmpsl
popf
mov
inc
shrl
fisubs
int3
outsl
testb
pop
inc
xorb
and
adcl
inc
inc
fidivrs
fsubrp
test
enter
iret
fldt
lods
and
outsb
mov
lcall
jecxz
imul
dec
inc
faddl
inc
push
out
es
xor
out
sbbl
shl
pop
hlt
scas
clc
out
test
scas
fdivl
mov
sub
sub
dec
sahf
xor
sub
pop
aam
mov
in
add
xor
adc
push
cmp
insl
shll
aaa
mov
fsubl
xchg
test
popf
xor
or
repz
xor
mov
inc
dec
in
jno
pop
in
popf
xor
mull
fcmovnbe
adc
inc
insl
xor
lret
inc
std
insb
inc
repnz
addl
test
or
nop
dec
mov
jnp
lods
std
pop
adc
mov
std
pusha
mov
ficoml
and
sbb
dec
std
jbe
sub
mov
push
mov
lret
add
movsl
push
inc
pop
mov
push
jmp
test
jecxz
pusha
fsts
mov
mov
and
dec
jle
xchg
cli
cwtl
push
movswl
pop
loop
fbld
lret
stos
and
arpl
addr16
jge
or
xchg
dec
jecxz
gs
or
scas
cmp
ret
push
rorl
mov
ret
hlt
adc
adc
cmp
test
or
rclb
adc
cmc
stos
insl
push
or
lds
aaa
cmp
push
or
dec
add
popa
cmpl
shll
hlt
daa
pop
push
pop
sarl
stc
jo
adc
lret
add
sbb
xchg
mov
test
fcmovnb
jnp
lret
sbb
leave
pop
push
or
ljmp
or
popl
inc
imull
sub
mov
lret
or
mov
mov
insl
je
addr16
imull
mov
movsl
push
xor
ret
and
jmp
jae
cmpsb
ficoms
leave
push
leave
cmpb
out
sub
ret
jns
andb
lods
int3
dec
fcoml
jge
rorb
mov
xchg
stos
jbe
jae
ret
push
and
mov
sarl
int3
lds
mov
add
jnp
call
add
dec
sub
sub
cmp
mov
cmpl
add
and
cmpb
add
std
add
mov
cmpb
mov
dec
add
or
into
dec
or
mov
add
iret
push
in
and
sub
stos
cs
push
cmp
stos
inc
mov
int
mov
mov
add
loope
ficoml
loope
in
jns
or
xor
or
ljmp
sbb
out
xor
ret
inc
push
pop
divb
fistps
icebp
pop
push
pop
hlt
mov
fwait
xor
cmp
push
mov
rcrl
jmp
mov
rcrb
jmp
push
dec
out
insb
mov
xor
out
dec
loope
aaa
dec
in
pop
fwait
xor
or
dec
out
daa
push
out
inc
cmpsb
cmp
adc
inc
inc
or
add
ja
mov
pop
out
in
mov
jbe
pop
jb
sbbb
xchg
fldt
shll
add
aas
insl
pop
call
jne
fildll
cltd
ret
fs
rcrl
mulb
cmpsl
sbb
imul
lea
push
arpl
xchg
inc
loope
cmpl
shl
xchg
jmp
ret
dec
add
loope
in
jns
or
inc
jecxz
mov
aaa
cmpsl
icebp
pop
mov
sbb
xor
insl
inc
loop
gs
scas
outsb
divl
shlb
xchg
ss
cmp
stos
lcall
imulb
cmpsl
stos
sbb
pop
enter
jne
fnstsw
fsubrl
xchg
mov
mov
dec
fwait
sub
nop
ret
push
icebp
in
das
or
ja
add
or
pop
aas
daa
pushf
sub
int
loopne
addr16
pop
xchg
xor
je
in
push
gs
mov
mov
cmp
movsl
cmpsl
xchg
and
dec
jno
push
std
xor
fstpt
std
push
divl
jg
js
outsb
xchg
jp
rolb
int
cli
or
and
iret
ljmp
jbe
sahf
xchg
cmp
int
sbb
clc
in
nop
or
negb
and
mov
mov
lock
negl
mov
je
nop
rorb
jl
mov
jbe
cmp
push
jmp
push
sbb
stos
addl
lret
pop
orl
fnstcw
jno
aad
dec
inc
or
jnp
inc
popa
orb
xchg
or
add
ret
int3
mov
mov
icebp
ss
pushfw
and
nop
scas
mov
lcall
faddl
scas
faddl
adc
gs
pop
push
cmp
fisttpll
xchg
pop
shl
sahf
es
push
fiadds
mov
ss
jl
push
pop
je
sbb
pusha
or
aad
out
fnsave
mov
cmp
push
pop
in
jno
jl
xor
xor
adc
pop
out
repnz
push
inc
mov
aam
push
add
outsl
mov
clc
bound
xor
cs
cmpsb
outsl
sbb
lcall
cmc
pop
xchg
push
clc
pusha
or
xor
and
cmpsb
stc
mov
xchg
lods
sbb
lea
sahf
ds
jo
scas
push
in
sub
pop
fdivs
jmp
push
push
insl
jl
xor
outsl
xor
call
push
fwait
mov
or
cmpsl
sub
xor
ss
fsubl
insl
in
pop
repnz
fiaddl
cmpsl
in
pushf
xor
xor
insb
add
mov
stc
in
insl
add
es
xchg
pop
mov
sbb
stos
cmp
imul
sbb
mov
pop
in
pop
dec
cmp
sub
call
jecxz
cmp
repnz
outsl
push
inc
mov
fsub
push
adc
out
mov
sbb
inc
cmp
fwait
insl
bound
xchg
mov
sbb
mov
inc
out
add
cmp
rorl
jne
loopne
sbbl
xor
pop
mov
push
xchg
sub
mov
pop
out
lods
inc
fidivrl
push
out
push
aad
cs
popf
call
cmp
imul
cmc
mov
data16
dec
shrl
mov
adc
fwait
shrl
cmp
movsl
imul
insl
and
shrb
cmp
imul
bound
cmp
pop
insb
mov
mov
mov
filds
adc
push
out
bound
xchg
insb
orl
mov
sub
aad
in
push
cmp
mov
pop
mov
sub
jns
in
stos
cmp
imul
sahf
cld
mov
sub
sbb
or
mov
sarl
and
imul
sub
addr16
cltd
aaa
and
in
mov
jp
aas
ss
addr16
cld
xchg
xchg
mov
jge
in
and
cmp
jge
mov
mov
lods
add
in
jp
xor
jg
mov
xchg
sub
xor
gs
jl
mov
xchg
sub
gs
loopne
iret
mov
mov
and
fnsave
inc
fsubr
xchg
mov
enter
push
mov
xchg
sub
xor
fnsave
lods
inc
in
loop
sub
xor
addr16
cltd
xor
fcmovnbe
insb
or
cs
cmpl
or
rcl
insb
add
es
pop
mov
push
lods
stos
xor
mov
lret
mov
std
mov
dec
loope
xor
outsl
gs
test
ret
mov
cmc
xor
push
pushw
or
jmp
lds
mov
addr16
xor
ljmp
aas
push
mov
les
aaa
lahf
imul
lret
cmp
mov
mov
movsl
dec
or
mov
je
fdivs
lahf
dec
shrl
fadd
add
fnstenv
aas
loopne
or
xchg
fs
add
into
and
mov
inc
mov
mov
roll
test
push
pop
jmp
int
cmpb
test
xchg
inc
movsb
jnp
pusha
aam
popf
cmp
into
icebp
data16
adc
inc
lds
sbb
dec
pop
cli
cmp
xor
inc
fs
inc
dec
xor
ljmp
mov
sub
jb
xor
lds
pop
mov
cmp
jno
pop
arpl
pop
mov
js
in
push
adc
ja
mov
sbb
jae
cmp
loope
lods
int3
mov
bswap
mov
sarl
mov
leave
hlt
mov
out
xor
test
pop
jns
jg
clc
or
fsubrs
sub
jbe
mov
popf
xor
movsb
cmp
mov
sbb
daa
dec
jecxz
ja
lahf
push
mov
push
aam
lea
sbbb
mov
add
push
xor
addl
xor
push
xchg
sub
push
mov
fisubl
jge
mov
scas
inc
add
push
xchg
jge
sub
pusha
pop
fwait
dec
cmp
cmp
enter
je
dec
sbb
xchg
inc
outsb
jno
pusha
icebp
xor
daa
addb
push
shlb
mov
in
ljmp
sarb
dec
cmp
lcall
imul
adc
jns
in
adcb
push
mov
lods
cltd
stc
nop
or
xchg
into
gs
mov
xor
sub
mov
fldt
das
push
cmp
into
jbe
shll
in
mov
jo
data16
mov
ret
pop
pop
cmc
mov
sbb
mov
lock
sub
inc
test
int3
push
popw
mov
ja
mov
push
mov
mov
out
add
rolb
divl
es
inc
push
movsl
xor
push
call
inc
sub
mov
pop
sbb
mov
sub
mov
orl
test
in
ret
xchg
es
cmp
dec
sbbl
cmc
outsb
push
out
adc
shl
and
test
xor
push
and
test
aad
leave
mov
xchg
insl
fdivl
test
loopne
adc
sbb
lahf
ss
es
push
data16
xchg
daa
insb
add
mov
cwtl
das
es
movsb
cmp
ror
gs
popa
mov
xor
je
add
shrb
xchg
jg
or
pop
and
sbb
movsb
cmp
ror
retw
stc
mov
mov
stos
sbb
jmp
or
mov
pop
jmp
adc
ret
mov
xor
sahf
lds
rcrl
popa
clc
jnp
mov
lahf
xor
fnstenv
les
mov
mov
mov
dec
fidivs
vdivsd
fadds
leave
sbb
bound
rcrl
pop
lock
std
xchg
sub
lea
lock
adcb
orl
dec
cmpsl
icebp
and
mov
je
shlb
stc
out
sub
mov
inc
jb
jb
cmp
add
loope
xor
cmpsl
ds
mov
lahf
sub
add
push
jge
fs
dec
push
es
pop
or
inc
repnz
xor
ds
int3
adc
pop
popl
stos
xchg
add
mov
ficomps
iret
pusha
ds
lock
out
or
xor
xchg
mov
pop
jle
test
sub
xchg
adc
out
aas
push
je
dec
pusha
mov
gs
je
sub
mov
cmp
push
ret
mov
lods
xchg
sub
push
push
popf
jne
lods
inc
mov
xchg
sub
sarb
lret
add
cltd
xor
mov
in
test
bound
scas
or
hlt
jge
push
in
sbbb
xor
nop
daa
mov
lds
fcmovu
sbbb
addr16
inc
fldl
inc
fildl
add
push
adc
mov
stos
dec
mov
loop
mov
or
or
inc
lds
sub
neg
out
pop
icebp
sbb
or
fcoms
mov
xchg
and
sub
sti
xchg
popa
dec
add
inc
pop
movsl
cmp
add
mov
popa
jnp
adc
add
mov
lods
test
sbb
lods
call
mov
loopne
cmc
shll
rclb
fnstenv
add
call
or
movsb
xchg
sbbb
cmp
jo
push
popf
das
adc
js
icebp
mov
dec
push
fdivr
xchg
push
js
adc
call
xchg
inc
fxch
push
sbb
scas
mov
adc
push
sbbb
inc
mov
xor
push
sbb
push
push
or
outsb
stos
mov
sbb
imul
xchg
sub
mov
es
mov
sub
or
aad
or
pop
sbb
lret
insl
or
push
stos
jg
mov
mov
inc
add
mov
jo
adc
sub
sub
lock
dec
js
rcrb
repz
lret
bound
sbb
iret
jb
aam
jno
in
test
cmc
push
hlt
mov
or
int
sbb
and
jno
mov
push
aam
adc
shrl
loop
adc
je
movsb
cmp
or
stc
dec
or
or
fwait
mov
or
cs
popf
lahf
mov
and
jmp
sub
ret
insb
lds
dec
sti
loopne
adc
and
add
add
negl
leave
scas
mov
inc
scas
sarl
aam
push
mov
scas
pop
call
dec
loope
sti
out
in
into
add
push
shld
rol
pop
mulb
insb
add
pop
pop
icebp
jne
shlb
cmc
mov
pop
fidivrl
ror
xchg
sub
fstl
call
mov
test
xorl
aaa
inc
movsb
clc
push
add
inc
fsubrs
leave
call
xor
mov
jbe
out
adc
loopne
aad
xchg
add
pop
jae
scas
inc
xchg
xchg
insl
push
push
popf
xor
daa
cmp
cwtl
push
out
xchg
push
jne
stos
dec
loop
ds
xchg
push
pop
call
pop
xor
push
fs
or
test
cmpsb
divb
loope
pop
cmp
mov
mov
pop
sbb
cmp
das
cmp
rclb
shrl
aas
xor
fs
not
loope
or
imul
sub
pop
loopne
leave
pusha
jnp
cwtl
das
cmpsb
pushf
lcall
das
jae
mov
ret
mov
mov
or
enter
mov
jp,pt
cld
es
out
lret
adc
andb
xchg
adc
ss
test
leave
shrl
sbb
inc
fmull
movsl
int
insb
add
mov
pusha
divl
mov
mov
rcl
repz
xor
adc
call
lea
scas
mov
fbstp
leave
adc
imul
bound
adc
mov
jbe
adc
loop
clc
sbb
sub
pop
sahf
pop
jl
stc
lods
dec
jno
jge
adc
int
repz
dec
loop
jbe
add
mov
dec
fisttps
or
inc
cmp
data16
popf
mov
in
adc
xchg
pop
adc
cmp
mov
push
mov
jbe
xchg
out
adc
ss
xor
test
ja
sub
mov
dec
pop
mov
cmpsb
cmp
lods
mov
sahf
xor
jb
fnstenv
xchg
cmpsb
cmp
imul
mov
inc
pop
sti
xor
jge
int
dec
sahf
xchg
sub
outsl
sahf
xor
pop
ret
adc
push
lea
pushf
xor
test
std
aaa
int
jae
fwait
xor
inc
movsl
pop
push
cltd
clc
sub
pop
mov
and
push
movsl
popa
insb
jle
jne
sub
xchg
roll
mov
fadds
lahf
test
setb
pop
nop
mov
mov
roll
lock
int
popa
out
data16
push
xor
test
fnstenv
add
gs
arpl
test
dec
aas
outsb
ds
in
outsl
sub
lods
rcrl
test
insl
clc
push
leave
and
xor
dec
ret
repz
cmp
repnz
int
pop
mov
mov
fidivrl
daa
xor
sub
or
lret
bound
push
out
inc
xchg
je
pop
lahf
loop
adc
pusha
push
dec
mov
cmp
push
arpl
sub
push
push
or
mov
fidivs
mov
les
test
xorl
imul
popf
sub
pop
mov
push
out
lods
adc
popa
inc
int
adc
fs
popf
xchg
and
jae
sub
nop
daa
clc
pop
ret
pop
lea
mov
dec
scas
add
sahf
add
shll
mov
sbbb
adc
push
xlat
gs
imul
scas
mov
xor
mov
loop
test
int3
stc
xor
loope
jmp
int
in
push
into
in
mov
add
xor
aas
xor
out
push
repz
sbb
inc
xor
in
push
adc
and
inc
push
in
ja
cwtl
dec
fbld
mov
data16
pop
psubusb
jl
imulb
into
or
inc
and
test
pop
insb
or
addr16
hlt
mov
cmp
xor
pop
repnz
push
xor
inc
fsubl
cmp
and
fidivl
push
cmp
mov
sbb
xor
mov
je
mov
inc
dec
rcrl
jl
ret
mov
out
pop
les
push
paddw
or
adc
mul
jns
data16
inc
faddp
dec
fisttps
loop
int
data16
lods
mov
in
xor
or
mov
cli
ss
inc
rol
cli
and
enter
stos
cli
xchg
faddl
stos
ficomps
mov
loopne
mov
ret
sti
and
and
mov
add
xchg
inc
jnp
pop
out
cwtl
mov
push
jmp
rolb
and
and
pop
clc
pop
testl
inc
out
mov
pusha
jecxz
inc
xlat
decb
out
jp
shrb
popa
sbb
xchg
ds
sub
into
sahf
clc
rclb
push
in
mov
push
dec
loope
stc
pusha
imul
ljmp
divb
xchg
add
ss
push
and
inc
imul
gs
fbstp
mov
out
and
sbbb
mov
mov
mov
iret
mov
mov
and
aam
sbb
cmp
mov
ror
or
and
leave
push
inc
out
test
dec
jecxz
lcall
imul
sub
sbb
ds
in
insb
movsb
cmp
push
cld
xchg
dec
leave
fidivl
add
je
cmpsl
movsb
pushl
int
das
testb
sub
sbbb
int3
sbb
adc
jnp
add
in
xor
push
dec
loope
loopne
daa
adc
mov
gs
push
out
enter
push
ljmp
push
mov
sbb
or
imul
cmp
ljmp
jnp
mov
push
ficomps
rcr
jne
shll
mov
pop
icebp
lods
test
mov
scas
and
dec
push
jp
push
mov
xor
mov
mov
int
push
ljmp
out
sbb
fdivrl
jmp
les
ja
popf
xlat
mov
insl
sub
add
mov
mov
xchg
xor
sbb
cs
movsb
cmp
daa
sbb
ret
jb
mov
mov
sahf
test
or
xchg
cs
sahf
pop
mov
xchg
mov
call
push
fstps
lods
jno
cmp
pop
xchg
xor
add
xor
fildll
rorl
loop
add
icebp
mov
push
mov
mov
nop
mov
add
outsb
add
aaa
or
xchg
mov
ficoml
call
test
lahf
loope
jmp
fwait
push
sbb
in
sub
mov
sub
dec
sub
pop
int3
testb
cmpsb
push
in
and
fisubrs
ficoms
inc
and
sbb
std
inc
mov
shll
add
imul
popf
ja
sub
mov
sub
lea
xor
sub
jns
repz
sbb
inc
addr16
cltd
data16
pop
std
mov
add
sti
xchg
inc
hlt
fnstenv
out
data16
xchg
iret
in
addl
sbb
out
inc
stos
jo
inc
fdivr
xchg
xor
adc
shrb
pop
test
hlt
mov
jmp
push
pop
dec
jecxz
xor
in
mov
adc
into
inc
pushf
sahf
jae
test
aad
fisttpl
repz
in
inc
loopne
sub
addb
js
adc
ficoml
sbb
rclb
sub
push
xchg
roll
sbb
push
into
pop
push
in
pop
mov
sbb
lea
iret
jnp
fstpt
nop
mov
push
insl
add
or
and
in
ds
or
faddl
cmp
sbb
add
sbb
sahf
jbe
sarb
call
in
clc
and
into
xchg
and
cmpsl
ds
inc
fucom
mov
js
xor
pop
out
adcl
mov
push
mov
gs
addr16
orl
std
xchg
sbb
xor
mov
sbbl
shrb
lret
mov
loopne
fidivl
aam
movl
lods
push
jmp
xchg
push
out
or
cs
xlat
cltd
int
xlat
fnstsw
inc
fdivs
xor
cmpsl
push
sbb
inc
enter
fs
cmp
sub
and
adc
cmp
repnz
pusha
idivl
push
or
mov
mov
adc
fnsave
cmpsb
test
sbb
shrl
mov
xchg
sub
into
sub
mov
stos
repnz
sub
and
imul
xor
xor
stos
pushw
movsl
push
sti
pop
mov
inc
sbbl
loope
int3
arpl
std
xchg
icebp
xchg
stc
push
ret
loope
lcall
pop
or
xor
test
xor
xor
and
inc
xlat
addr16
push
pop
mov
adc
inc
xor
mov
test
cmpsb
sub
push
in
cmp
pop
or
repnz
push
xchg
xor
mov
pop
cwtl
push
lods
out
jnp
fsubrs
adc
popf
push
jne
inc
adc
xor
push
mov
sar
into
and
in
test
sbb
mov
popa
inc
fistl
push
push
push
inc
sti
mov
dec
and
aaa
fcompl
pusha
sti
inc
int
or
ja
stos
fnstsw
cmp
xchg
mul
jl
push
push
in
aaa
cltd
xchg
push
test
add
push
push
sub
jecxz
xor
insl
sbb
rcrl
clc
lret
imul
enter
sbb
lods
pop
cmp
cmp
arpl
andb
fists
push
jp
add
jp
push
stc
inc
daa
inc
mov
mov
adc
mov
xchg
inc
test
aaa
jg
jl
lock
dec
mov
jmp
adc
push
les
xchg
mov
shlb
mov
inc
test
loop
repz
cmp
sbb
adc
sbb
push
pop
cmp
and
mov
lods
cmc
cmp
icebp
mov
imul
pop
mov
mov
jnp
repnz
dec
mov
jns
xor
js
sbb
sub
cmp
dec
pop
jnp
mov
mov
mov
and
mov
mov
test
dec
mov
cmp
test
xor
adcb
jns
sub
push
inc
ret
repz
pop
push
pop
pop
sarl
pop
and
mov
inc
or
push
push
mov
jle
pop
mov
inc
mov
ja
aaa
sub
movsb
cld
sub
sub
lods
out
test
scas
inc
pop
xchg
lods
lahf
and
jmp
mov
in
aam
call
or
inc
jo
int3
mov
jb
cmpsl
ret
mov
add
jnp
pop
push
out
xor
dec
int
int3
in
sbb
jg
lods
sti
push
push
mov
in
loop
adc
ffreep
inc
fdivp
add
insb
out
test
jg
xor
sbb
data16
pop
repnz
call
addr16
push
mov
lds
cmp
xor
mov
cwtl
xor
ss
popf
arpl
lea
xchg
lea
add
cmpsl
inc
sbb
in
jg
jecxz
and
jno
dec
mov
mov
push
jl
dec
das
dec
test
xor
add
add
imul
xchg
dec
cltd
jae
jno
in
jmp
push
jmp
or
in
in
and
lock
loop
aas
repnz
out
xchg
cmp
pop
andb
dec
pusha
push
jmp
sbb
int
das
addr16
fnsave
imul
mov
subl
mov
add
sub
sbb
sub
pop
mov
xlat
cld
mov
push
sub
mov
dec
dec
xchg
mov
jo
jl
adc
cmc
sti
ljmp
into
enter
pop
dec
aas
lds
out
push
out
jb
shll
cs
fwait
imul
outsb
add
sbb
movsb
and
mov
jnp
sbb
imul
xchg
pop
hlt
les
aaa
add
dec
mov
pop
or
loopne
mov
jmp
stos
mov
div
arpl
mov
jle
xchg
sub
aad
and
ja
mov
pop
mov
lret
jecxz
stc
nop
test
test
lret
inc
pop
mov
dec
xchg
pop
jne,pn
fadd
adc
subl
test
xchg
add
or
out
add
pop
shll
pushf
lods
daa
cmp
pop
fstpt
adc
adc
insl
or
cmpsl
mov
ret
pop
decl
fiaddl
movsl
inc
and
aas
ret
and
dec
inc
mov
and
out
jmp
mov
add
push
cmp
in
nop
popa
inc
fdivs
push
popa
clc
xchg
mov
je
dec
cmpsb
cs
xor
pop
lret
mov
enter
push
and
aas
out
inc
out
pushl
fyl2x
data16
push
lds
enter
cli
out
mov
mov
outsl
add
or
or
fildll
and
ret
gs
pop
jnp
out
push
pop
push
pop
andl
popw
sahf
xchg
in
push
daa
outsl
fisubl
pushf
xchg
ljmp
movb
ljmp
sbb
ja
mov
push
xchg
xlat
sbb
negl
dec
cmp
stos
inc
lods
lods
jae
dec
and
add
decb
insl
push
subb
ljmp
and
int
or
shll
sub
sti
cmc
pop
add
inc
jmp
jnp
loopne
sbb
aad
mov
pushf
xor
add
mov
shr
adc
jg
out
push
add
ja
icebp
test
or
jne
sbb
or
aaa
lea
push
jns
inc
xor
mov
sbb
fwait
pop
repnz
ret
pop
shll
stc
lods
lods
xchg
out
lret
inc
lods
dec
call
or
cwtl
pop
loop
loope
cmp
mov
dec
lds
aaa
stos
jbe
xor
sbb
mov
loop
sti
pop
or
popa
push
hlt
das
fldcw
std
popf
xor
js
popf
mov
fldl
mov
aad
ss
inc
lds
out
mov
dec
or
sbb
leave
jae
loopne
test
mov
loopne
inc
rorb
add
adcb
push
jno
xor
add
cld
es
push
in
mov
add
inc
test
es
decb
cmp
or
divb
pop
or
mov
xor
imul
inc
into
je
and
cs
sbb
adc
ss
pop
in
addr16
sbb
pop
dec
loope
pop
and
iret
jns
aas
stos
dec
es
jecxz
dec
jecxz
pop
push
pusha
es
sbbl
push
cmp
cmc
les
cmc
push
sbb
jbe,pn
iret
mov
stos
inc
push
rcll
mov
cmpsl
push
adc
lret
je
xchg
sub
adc
fs
dec
lods
push
mov
andb
pop
lock
ficoms
stos
dec
inc
fnstsw
cmp
dec
cmp
jl
sbb
cld
scas
mov
or
mov
mov
in
in
lcall
je
sbb
adc
arpl
testb
xlat
and
add
out
jg
dec
popf
xchg
push
cs
dec
sti
sbbl
lcall
xchg
mov
data16
mov
inc
aaa
dec
mov
and
sbb
shl
hlt
aaa
fsqrt
sti
jp
gs
and
loopne
xor
jns
jp
loope
mov
test
or
sub
jb
dec
inc
loope
xor
xlat
fucomp
mov
in
hlt
mov
outsl
stc
pop
loop
cmp
dec
hlt
mov
sbb
jnp
popf
lret
cmovne
mov
in
or
sub
loope
enter
xor
mov
dec
call
dec
lods
stos
fdivp
insl
pusha
js
sbb
out
or
lods
test
jmp
stos
scas
inc
fistps
je
lret
in
ds
xor
pushf
mov
outsl
dec
xor
js
fsubs
xchg
push
jbe
sub
dec
sbbb
inc
jl
inc
outsb
sub
lahf
xchg
pop
aas
icebp
push
stc
cmp
movsl
das
inc
xchg
pop
inc
xchg
les
imul
mov
cmp
mov
call
jle
fldenv
jbe
outsl
or
xor
jmp
pop
lds
add
scas
outsl
or
stc
loop
sub
mov
sbb
popa
leave
inc
jo
gs
daa
sbb
push
jmp
movsb
aam
dec
sbb
repz
xor
sub
add
mov
xchg
mov
mov
cmp
jno
fsubl
sarl
or
pop
fldl
mov
sbb
movsb
push
pop
ljmp
pusha
jmp
xor
push
add
inc
add
stos
repz
out
std
mov
in
cmp
mov
inc
stos
and
and
sahf
rcrb
repz
shlb
in
into
loopne
out
lock
lret
aam
jl
lods
xchg
jne
add
xchg
sbb
jnp
rol
loope
jl
dec
adc
add
add
stos
subl
dec
cmpsl
jge
idivb
imul
popa
pusha
add
push
dec
test
push
arpl
xchg
inc
push
mov
iret
pop
pop
cmpsb
scas
fdivrl
call
test
in
jg
in
push
popf
xor
or
mov
jle
mov
add
jnp
pushf
call
jae
insb
xor
popf
loop
shr
sub
xlat
rcrb
in
stos
xor
sub
xchg
jge
and
sbb
jp
mov
outsl
push
in
mov
jp
pushf
loope
mov
jne
in
sbb
xor
cmp
fidivrs
lahf
ret
fldl
loopne
push
daa
test
sub
in
adc
mov
cli
scas
push
rorl
cmc
in
andl
inc
push
inc
cmp
cmovnp
xchg
test
jmp
dec
repnz
lahf
push
adc
insb
xor
and
pusha
inc
cmc
arpl
mov
pop
faddl
decb
bound
push
sbb
pop
mov
data16
je
xor
gs
ret
mov
loop
lret
cld
stos
imul
dec
into
js
iret
jmp
lds
aaa
inc
fisttps
cmp
mov
jo
paddd
cmp
out
or
outsl
mov
scas
or
xchg
cli
cmp
lret
mov
hlt
inc
mov
stc
xlat
xor
rcl
mull
roll
mov
mov
repz
int3
add
mov
fildl
and
xlat
mov
test
popf
imul
popa
arpl
ss
or
fcomps
stos
mov
das
xor
push
mov
movsl
lcall
mov
pextrw
push
stos
inc
ljmp
lods
mov
mov
xchg
cmp
xchg
lods
sbb
mov
fldenv
enter
inc
sub
pop
gs
mov
sbb
stos
inc
loop
push
call
aad
fbstp
notb
lcall
imul
add
cmpsb
es
call
ret
cmp
mov
out
xchg
cmp
ret
sarl
push
pop
sub
adc
pop
mov
popf
adc
int3
add
and
push
faddl
xor
dec
sarb
in
mov
lahf
vcvtsi2ssl
sbb
notl
adc
xchg
mov
and
repnz
loop
cltd
mov
mov
inc
pusha
sbb
and
mov
sub
daa
icebp
mov
adc
sub
fcmovnbe
loope
fcomp
out
jp
inc
lods
push
xchg
mov
sub
sbb
iret
xchg
sub
aam
mov
popf
mov
cli
push
lret
ret
pop
shl
push
lock
push
into
fwait
test
mov
pop
sahf
stos
bound
and
mov
ja
inc
push
cmp
ret
repz
out
inc
sbb
js
add
mov
jbe
mov
hlt
or
adc
cmp
cmp
int3
xchg
call
xchg
cltd
xor
mov
ret
fildl
push
ja
jg
add
push
jmp
cmp
jp
adc
xchg
mov
jge
jne
sbbl
sub
jmp
inc
or
xor
in
icebp
xlat
pop
add
cmp
lds
jnp
stos
stos
xor
push
push
jl
mov
mov
mull
push
clc
jo
xlat
xchg
js
fs
movsl
cltd
xor
xor
push
mov
push
jnp
xor
gs
pop
mov
ss
hlt
xor
lcall
and
mov
sub
pop
in
sbb
in
and
xchg
cmpsl
mov
push
mov
jno
in
loopne
les
bound
mov
cld
les
mov
sti
cs
dec
loop
dec
or
or
jmp
imul
jo
shl
rclb
dec
imul
mov
add
and
adc
adc
outsb
xchg
lret
decl
pop
outsl
jns
cmpsb
std
cli
push
xchg
ss
mov
pop
adc
mov
test
and
cmp
std
xor
notl
sbb
or
shll
mov
sub
cmp
lcall
cmp
mov
gs
add
fisubrl
jg
inc
mov
pop
mov
sbb
repz
nop
daa
daa
ret
sbb
inc
repnz
and
xchg
mov
int3
arpl
aam
sub
sub
adc
xlat
int
ja
lcall
aad
or
bound
jge
jo
cmpl
mov
imul
push
test
flds
push
addr16
pop
fisttpll
sti
pusha
outsl
jmp
push
pop
movsb
xorl
in
jne
enter
adc
and
sub
or
xchg
cmp
mov
sbb
jno
insl
enter
imul
pop
push
aaa
xor
jbe
cltd
dec
insl
cmp
mov
xor
adc
mov
xchg
xor
push
aam
sub
xor
das
out
adc
pop
aas
fwait
adc
sub
inc
popa
divb
inc
inc
fwait
xor
add
add
mov
push
sbb
mull
mov
sti
loopne
mov
xchg
jns
in
pop
adc
les
xor
rolb
sahf
sub
stos
in
ds
int3
stos
mov
xchg
pop
jne
sbb
aas
xchg
arpl
sbb
inc
fsub
mov
fs
xor
testb
pop
movl
pop
inc
or
loop
cmc
mov
lds
lgs
sbb
dec
xchg
push
add
call
out
or
mov
xchg
in
jg
aas
lods
cmpb
ss
loopne
push
ret
mov
or
inc
push
jl
add
aad
push
adc
xchg
ret
jp
lock
jnp
mov
popf
and
push
inc
or
cld
mov
push
ss
loop
mov
sbb
jmp
enter
pop
ret
adc
pop
cmp
xor
orb
insb
scas
inc
sahf
xchg
sbb
fdivl
xor
dec
push
push
adc
cs
inc
addr16
int3
pop
and
sub
mov
or
dec
sub
jb
lock
cwtl
repnz
outsl
or
lahf
xor
testl
popf
sub
jo
nop
clc
leave
jle
xor
push
mov
and
call
imul
xor
mov
mov
sub
push
dec
sub
jp
icebp
subb
jb
add
gs
aaa
sub
lret
mov
adc
jbe
das
mov
xlat
jne
mov
test
imul
add
sbb
cwtl
dec
inc
and
push
fs
inc
pop
and
xchg
add
icebp
fwait
jl
mov
cmp
mov
popf
mov
jb
mov
aam
insb
call
sbb
and
es
fiadds
sbb
xchg
bswap
inc
ret
loop
xor
ret
xchg
rcrb
or
je
arpl
mov
roll
mov
icebp
xchg
push
idivl
or
inc
mov
cs
cli
fdivrl
mov
lea
adc
push
xchg
mov
mov
int3
test
stc
ret
mov
lea
pushf
fcomip
jl
imul
fwait
adcb
sub
adcb
jle
jl
out
xchg
mov
js
jg
and
mov
pushf
add
rclb
cmp
dec
xor
loope
js
xor
pop
ljmp
xor
mov
xor
jmp
xchg
mull
loop
in
sbb
xlat
xchg
pop
jmp
test
imul
clc
pop
adc
sahf
mov
pop
jge
lcall
push
clc
sub
jmp
mov
add
add
gs
jmp
scas
inc
mov
sbbb
adc
out
push
jl
inc
jl
cmp
shll
cld
cs
hlt
sbbl
xchg
ret
fs
mov
and
fwait
add
in
pop
ficoml
test
jge
xor
out
repz
inc
xor
adc
imull
adc
ss
loop
cwtl
jge
imul
inc
and
in
js
jmp
popf
sub
pop
popf
pop
cmp
or
inc
add
dec
ret
lds
cmp
or
into
sub
jno
scas
pop
mov
jg
xor
cwtl
adc
sbb
ds
inc
or
bound
orl
or
scas
xor
jae
cmpsb
insl
and
mov
mov
and
and
lock
inc
xor
mov
push
outsl
adc
test
ss
bswap
pusha
inc
sarb
outsl
cs
pusha
call
pop
jns
inc
leave
pusha
jae
fs
fsubrp
movsb
je
add
lods
mov
xor
adc
in
sbb
mov
inc
pop
hlt
mov
xor
mov
dec
popf
xor
lods
dec
in
mov
andl
stc
and
push
out
shl
mov
push
mov
inc
insb
sbb
fucomp
inc
into
lret
lret
pop
push
jl
pop
add
mov
mov
inc
push
fistpll
arpl
iret
js
fdivp
jne
or
cmp
push
std
xchg
js
fnstenv
lcall
rclb
mov
imul
cmp
sbb
mov
int
jno
les
cli
daa
adcb
ds
or
adc
loope
xor
mov
leave
dec
fisubrs
xchg
sub
test
call
sarl
push
mov
les
mov
test
and
js
mov
jmp
push
sbb
popf
mov
sub
fidivs
dec
adc
insb
arpl
cmpsb
cmp
sbb
ss
mov
mov
mov
aas
stos
sbb
mov
pop
rcr
jae
xlat
lds
pop
ds
mov
push
push
xchg
testl
inc
mov
xor
cmp
repz
pop
inc
frstor
jne
mov
sarl
xchg
jle
jecxz
cmp
sbb
inc
mov
jecxz
or
mov
je
ret
inc
dec
and
dec
mov
insb
xor
loopne
push
cmp
xor
fs
add
ret
mov
mov
fs
repnz
pop
push
ljmp
sub
cmc
xchg
sub
cmpsl
pop
dec
jne
dec
das
jbe
xor
gs
popa
int
rclb
aaa
outsb
mov
mov
pop
repnz
aas
call
cmp
jne
adc
mov
cmpsb
mov
clc
sub
call
lret
mov
mov
cmpl
sub
or
jl
pop
adc
xchg
jo
inc
gs
ds
sub
push
cmp
mov
pushf
ss
xor
and
adcl
jno
sti
arpl
inc
fidivs
mov
jg
sub
xor
fdivs
mov
ret
dec
adc
mov
outsb
call
popa
ret
das
pushl
and
pop
mov
adc
pop
jbe
inc
std
push
jae
xor
pusha
aam
daa
out
and
loope
into
test
faddl
in
in
lret
bound
add
jne
stos
jns
push
sbb
push
cmp
adc
jmp
xchg
push
ljmp
push
cmp
jge
pushf
jge
es
sti
inc
out
aam
or
leave
pusha
xchg
dec
and
cs
push
mov
mov
sub
and
sub
call
iret
test
mov
lock
push
out
pop
repnz
jno
clc
mov
mov
dec
out
ret
mov
xchg
sub
inc
insl
add
out
adc
push
shrl
cmp
mov
lea
cmpsb
sub
xlat
outsb
adc
les
cmc
mov
dec
loop
xchg
stos
mov
fidivl
enter
push
js
dec
out
cltd
movsl
cmp
das
sub
pusha
xor
pop
bound
pop
add
sub
xlat
daa
outsl
mov
jae
sub
je
adc
mov
add
sahf
les
jmp
scas
pushf
scas
fcmovnu
es
xchg
xchg
jbe
lock
ficoml
iret
xor
mov
push
hlt
mov
pushf
call
cld
in
movsb
jnp
es
mov
mov
adc
pusha
or
jno
leave
loope
sbbb
inc
clflush
movsb
mov
mov
jl
push
pop
inc
pop
test
xor
xchg
pop
in
add
sbb
pop
mov
inc
dec
in
shlb
push
or
hlt
mov
push
push
mov
xor
out
aaa
fcomps
or
mov
mov
push
mulb
inc
fistpl
mov
sbb
icebp
lahf
cli
or
fistps
mov
test
cli
dec
sbb
dec
mov
out
test
xchg
leave
movsl
ret
repnz
mov
cmp
pop
movl
xchg
or
out
mov
mov
jp
or
aam
mov
xchg
inc
xchg
test
and
sarb
idiv
lret
pop
xchg
repz
int3
subb
cmpsb
leave
push
leave
arpl
jecxz
lods
test
fmuls
inc
adc
push
sub
loop
jmp
or
cmp
stc
sarb
or
fucomp
adc
mov
pop
loopne
mov
shl
dec
cmpsb
jge
sbb
or
enter
ds
addr16
ja
out
or
xor
pop
movsl
xchg
xor
test
mov
cld
fbstp
in
loope,pt
cmpb
pop
imul
xchg
fwait
repnz
repz
fdivrl
aam
insb
jle
testb
xchg
push
test
mov
push
dec
mov
jbe
gs
sub
not
sub
cmp
mov
out
shll
lods
into
inc
addr16
mov
rep
cmp
imul
jl
aam
lock
popa
mov
sub
int
jp
call
jbe
push
sbbb
pop
adcb
mov
mov
push
dec
shl
cmp
add
add
cmpsl
mov
in
lret
add
and
out
hlt
jo
es
or
sbb
lret
pop
insb
pushf
test
push
xchg
sbb
les
scas
xchg
pop
inc
inc
ss
or
push
mov
pop
dec
lods
mov
push
arpl
adc
scas
mov
into
gs
jbe
and
push
inc
out
dec
jmp
mov
inc
pop
add
sarl
icebp
pop
cs
dec
add
or
ss
inc
sub
out
cmc
push
xchg
and
fstpl
stos
mov
inc
fldl
lods
das
and
in
mov
cltd
clc
fidivs
sbb
xor
les
push
andps
aaa
lret
flds
and
movsb
cs
xchg
jecxz
in
or
xchg
call
add
shlb
sarl
subb
stos
test
jmp
jno
or
jbe
and
mov
roll
xchg
dec
loope
or
pop
push
stos
ds
fnsave
shrb
movsl
mov
loop
push
in
das
clc
sbb
xor
test
into
push
in
lcall
nop
sahf
and
push
lods
mov
sbb
dec
jp,pn
jge
cmp
push
stos
push
jl
js
mov
data16
pop
testb
mov
mov
mov
xchg
push
and
jmp
inc
add
rorl
addr16
jns
lahf
mov
pop
cmp
sbb
aas
outsl
ret
movsb
dec
mov
sub
test
sbbl
dec
js
loopne
jo
adc
loopne
mov
and
mov
lret
out
cli
adc
cmpsb
popa
or
shll
and
ds
push
test
add
xor
xor
and
adc
cmp
pop
sub
push
jo
cmp
push
out
repnz
pop
call
aad
sbb
sahf
js
out
jb
and
or
jge
push
das
mov
test
repz
aam
adcb
aam
mov
cltd
bound
add
sub
push
sti
sbb
fmuls
or
or
sbb
lahf
sbb
xchg
addl
jmp
pop
pushl
sub
into
roll
cmc
aam
sahf
clc
dec
dec
add
xorb
pop
push
jbe
aam
addr16
lock
lds
xchg
js
cltd
bound
ror
ds
scas
xchg
sub
push
call
jb
sahf
add
andb
sub
lock
mov
pop
mov
into
pop
mov
nop
push
or
cmp
mov
fwait
sbb
jb
pop
in
jns
into
and
std
das
or
add
xorb
loope
dec
add
dec
cmp
push
sarl
inc
mov
sub
xor
sbb
sti
insb
xchg
xchg
adc
mov
test
pop
pop
xor
loop
imul
hlt
imul
sub
pop
inc
out
ret
mov
int3
lret
xor
jns
push
sbb
clc
ja
cli
pushf
adc
outsl
daa
fdivr
imul
dec
mov
rorb
cmp
jl
rclb
pop
dec
test
in
dec
out
jne
mov
push
push
jmp
push
mov
mov
pusha
negl
imul
outsl
sub
cmpsl
mov
jmp
xchg
xchg
cmpb
cmp
aaa
mov
xor
or
lret
sbb
imul
add
test
dec
pop
not
ss
jg
notb
sub
ds
cltd
lcall
xor
mov
dec
and
xchg
sub
sub
mov
flds
mov
movsl
cmp
adc
filds
cmp
adc
in
int
adc
push
ror
inc
loop
leave
dec
fsub
ret
jl
cli
add
push
xor
bound
pop
xchg
pop
xchg
jb
mov
lcall
ja
mov
inc
jb
inc
mov
cwtl
out
jns
xchg
ljmp
stos
xchg
ret
test
jecxz
push
adc
add
leave
cmc
sbb
pushf
leave
aaa
test
lods
mov
mov
loopne
negb
test
std
xlat
aaa
mov
movsl
mov
int
or
into
popa
mov
ret
call
stc
mov
inc
sbbb
lods
pop
cmc
outsb
adc
mov
int
xchg
iret
or
js
arpl
xchg
push
or
cmc
and
repz
ljmp
mulb
cmpsl
inc
test
sbb
adc
mov
add
jb
pop
push
sub
enter
mov
clc
out
mov
jp
inc
push
scas
jg
orb
aas
xchg
test
faddl
sahf
int
jecxz
sub
push
movsb
xor
imul
icebp
xchg
sub
sbb
jge
sbb
popf
icebp
mov
call
mov
inc
sbb
cwtl
das
lahf
cmp
pop
mov
fsub
jle
test
add
cmp
lahf
cltd
popa
sti
shr
ss
and
scas
pop
sbb
filds
in
lods
sbb
xor
cmp
or
push
loop
orl
loope
hlt
hlt
mov
fldenv
jge
pop
adc
xlat
jmp
call
sub
fbld
dec
aam
jmp
cmc
jb
xor
stos
in
sbb
xchg
popa
sub
inc
push
cmp
js
pop
jge
inc
scas
cmp
into
out
inc
dec
mov
xor
adc
and
adc
data16
xchg
and
inc
ffree
mov
mov
adc
call
push
xchg
xor
mov
into
jle
clc
cmpl
pop
dec
push
mov
inc
push
mov
lea
jnp
dec
in
xchg
jl
aaa
into
mov
lds
lods
mov
add
push
in
pop
xor
testb
repnz
int
mov
mov
mov
stos
push
aad
xor
daa
sbb
push
jl
mov
int
push
test
or
sub
das
xchg
mov
popa
xor
cmp
jecxz
push
jmp
pushl
pusha
adcb
xor
xchg
enter
lret
test
pop
mov
shr
in
xor
push
or
sahf
xchg
cmp
test
fbstp
xchg
test
ja
xchg
jp
mov
jmp
or
jae
ljmp
mov
test
std
push
test
ds
das
sbb
ja
or
sbb
lds
mov
mov
jl
fsubrs
mov
popf
call
cmp
push
imul
lods
xlat
xchg
bswap
mov
lods
lahf
mov
or
mov
and
mov
lahf
loope
sbb
xchg
repnz
lret
test
push
into
jge
xchg
out
cwtl
mov
jmp
sti
push
push
std
lods
mov
fidivrs
sub
push
jmp
mov
xchg
or
ss
mov
sbb
push
jge
pop
stc
je
and
mov
stc
lcall
clc
jns
xchg
mov
cltd
cltd
test
inc
or
and
jno
dec
xchg
call
scas
adc
add
adc
push
movl
shl
xor
xchg
pop
sti
add
mov
mov
push
adc
dec
test
inc
rcll
in
xor
lock
lahf
adc
sti
inc
mov
pushf
clc
call
mov
fdivrs
repnz
out
leave
pop
xchg
sbb
std
or
xchg
sbb
mov
loope
push
loop
dec
fldt
push
aas
scas
inc
mov
add
std
aas
fmull
mov
mov
fcmovb
aam
testb
call
cmp
xchg
insl
test
movsl
add
push
sub
cmp
push
mov
cs
in
in
cmp
push
xor
cmp
xchg
out
shll
or
or
mov
pop
orb
shlb
adc
sbb
xor
lea
push
add
and
lods
add
sbb
and
cmp
in
daa
notb
lods
pop
aam
inc
stos
xchg
movsl
mov
mov
fnsave
cs
add
mov
mov
sub
sbb
ljmp
lds
pushf
and
pop
push
or
imul
pop
jle
jl
inc
arpl
pop
sub
cmpl
sarl
sub
xchg
in
cwtl
icebp
repnz
das
xor
sub
adc
mov
imul
jmp
pop
mov
or
cltd
loope
and
cmpb
pop
adc
popf
outsl
bound
jbe
and
inc
or
shlb
inc
xor
push
lea
shll
mov
or
lods
pop
jecxz
jmp
dec
pop
xor
arpl
ror
js
mov
jbe
or
adcb
mov
dec
dec
push
aad
jns
xchg
ret
push
out
sub
sub
dec
and
xchg
jge
pop
sahf
shrb
enter
sar
test
sub
scas
and
rcrl
leave
and
imul
outsl
jl
xor
fcmovb
imul
in
push
dec
inc
mov
xor
sub
cmp
cmpsb
inc
sub
dec
shrb
call
and
sti
outsb
jae
les
incb
in
in
xchg
addb
cmp
insb
push
mov
pop
ss
dec
inc
ljmp
xor
sbb
test
push
pop
jmp
push
or
rorb
sarl
pop
and
push
sub
mov
inc
inc
mov
ret
pushf
jl
jmp
sub
jns
fwait
loopne
push
loop
ja
cmpsb
out
add
clc
popa
inc
nop
jnp
sbbb
popf
cli
jno
mov
lods
je
and
mov
dec
and
jle
hlt
mov
popf
mov
mov
mov
xchg
insb
outsb
mov
adc
and
xchg
stc
xchg
cmc
mov
data16
je
mov
test
test
xchg
jecxz
inc
mov
mov
cld
outsb
inc
cmp
mov
popa
out
cmpsl
push
pop
je
fnsave
inc
mul
mov
sbb
pop
cmpsl
sbb
imul
xchg
fistl
sub
inc
and
daa
mov
mov
or
pop
add
lret
adc
in
js
mov
shlb
ja
mov
mov
sub
xlat
and
push
add
or
test
jmp
or
fildl
sbb
addr16
fucomip
mov
sub
inc
lods
dec
pusha
or
sbb
lea
int3
sub
mov
hlt
mov
jo
push
cmpsb
jno
lods
push
shlb
cmpsb
adc
jno
xor
mov
dec
insb
xchg
loop
cs
scas
jns
das
inc
adc
mov
int
lcall
adc
addb
push
in
fwait
and
out
test
xor
sbb
imul
pop
gs
js
or
xor
cmp
cli
sub
int3
test
jb
push
mov
adc
int
shlb
xor
out
vpminsw
sahf
xor
dec
and
lahf
sbb
pusha
push
mov
addr16
sbb
inc
dec
loop
shlb
or
jp
push
ja
popf
dec
mov
shll
cmp
incb
test
test
aam
or
mov
sub
jle
push
addr16
xchg
push
shl
lret
and
dec
xor
scas
test
dec
push
int3
daa
leave
fs
icebp
mov
xchg
or
shlb
xchg
mov
add
jnp
push
push
imul
adc
add
xchg
jmp
xchg
imul
or
aam
adc
int
mov
adc
lret
mov
mov
out
add
or
xchg
bound
or
inc
lcall
push
shll
mov
xchg
stos
sbbl
mov
pop
push
in
cmp
mov
ret
mov
mov
pushf
xor
shll
adc
incl
xchg
jno
xor
pop
cmc
xchg
jl
fbstp
inc
pop
xchg
lods
lcall
mov
mov
or
push
lcall
and
push
xchg
fmul
ret
jge
bound
and
ja
fldenv
xchg
int3
ret
mov
lahf
out
cmp
inc
dec
outsl
pop
add
push
pusha
popf
push
hlt
mov
lods
in
push
xor
int3
lods
cmp
xchg
insl
cmp
aas
pop
repnz
mov
mov
je
jge
cmp
cmp
js
in
xor
mov
aad
faddl
adc
push
sbb
cltd
test
cmp
sub
mov
mov
clc
popf
popa
or
mov
sub
in
in
xor
addr16
fdivrl
pop
repnz
out
sub
add
stc
test
ret
dec
gs
rclb
cmpsb
pop
jg
arpl
aaa
xor
jmp
in
mov
shl
cmp
lods
push
jno
test
xchg
scas
das
mov
and
test
stos
mov
lahf
cmpsb
cmp
inc
xchg
sub
sub
mov
push
jo
or
jnp
clc
mov
imul
leave
mov
stos
xor
in
ret
add
mov
xor
fstl
adc
sub
call
mov
imul
arpl
insb
into
jl,pt
mov
jmp
mov
fs
cwtl
cmp
pop
sbb
pop
pop
aaa
aam
je
fsubl
nop
out
out
loop
add
out
cmc
mov
inc
fcomps
xchg
push
jno
rolb
mov
imul
lods
xor
mov
xor
insl
dec
push
sbb
mov
push
push
xor
xchg
pop
into
enter
mov
xorb
push
shlb
xchg
sub
sub
clc
iret
jns
pop
sub
dec
psubd
xchg
in
or
nop
push
pushf
repnz
imul
pushf
outsb
jo
leave
jmp
aam
adc
mov
mov
mov
out
fwait
cmpsb
lock
add
ficoml
xchg
cmp
xchg
in
movsb
lret
shl
and
xor
cli
test
in
insl
cmp
pop
push
add
out
outsl
jecxz
rol
icebp
lock
in
rorb
clc
fidivs
popf
jge
pop
dec
push
cld
and
jmp
mov
pop
jg
pop
add
mov
enter
imul
dec
mov
sbb
addb
loope
test
pop
add
incl
orb
and
dec
mov
pop
loope
push
adc
cvttps2pi
stos
cld
hlt
jnp
adc
data16
inc
push
mov
js
sub
je
add
fld
dec
pop
push
pop
repz
hlt
jle
mov
ret
outsl
mov
hlt
or
lret
xchg
mov
shr
pop
mov
dec
out
or
test
pop
jnp
insb
xchg
jno
xchg
mov
add
sub
rcrb
xchg
add
out
in
and
insb
fwait
dec
std
push
sti
xor
sub
mov
je
bound
dec
xchg
adc
xchg
pop
xchg
push
pop
mov
lcall
adc
je
pop
fwait
xor
jg
pusha
repz
ds
adc
ss
adc
mov
cmp
sahf
movsl
fcomps
jbe
xor
vcvtpd2psx
jno
lcall
aaa
cld
sbb
mov
lock
jae
ljmp
cld
lea
sbbl
dec
pop
cmp
or
jp
stos
jg
inc
adc
movsl
imul
mov
mov
lea
dec
hlt
adc
cmp
sarl
adcb
rcrl
imul
pop
ret
pop
mov
movsl
jns
repz
jg
sub
dec
aad
imul
popf
es
jne
scas
jnp
loopne
movsl
jne
add
push
mov
enter
addb
imul
sbb
mov
mov
mov
xor
xlat
mov
gs
in
xchg
shrl
movsb
dec
out
shrl
adc
cmpb
mov
dec
in
jae
xchg
lds
and
pop
cld
outsl
addr16
nop
inc
pusha
ret
mov
jl
mov
and
das
cwtl
scas
lods
ljmp
pushf
xor
cmpl
repz
shr
adc
enter
push
fwait
xor
xor
das
lret
je
xchg
in
fwait
xchg
into
inc
aas
push
jecxz
push
std
and
jns
les
add
jecxz
pop
and
daa
movsl
mov
lods
test
scas
cmp
or
out
shr
push
lds
shll
push
jg
es
sub
jg
sbbl
adc
dec
push
loope
inc
in
adc
lock
loope
rclb
push
cmpl
cwtl
lods
and
outsb
aad
and
cmovp
cmp
int3
outsl
dec
push
negb
sbb
mov
out
add
jmp
inc
and
movsb
mov
mov
xchg
sbb
int3
mov
push
pop
jecxz
lock
fldl2t
pop
pop
das
popf
adc
orb
sub
xchg
shl
hlt
sarl
daa
push
cmp
lock
mov
gs
mov
fbstp
imul
and
in
popa
div
jp
push
je
inc
dec
mov
add
adc
into
sbb
add
inc
mov
sarl
cmp
cmp
fistpl
mov
mov
dec
inc
loop
push
stc
adc
or
inc
push
add
sarb
jmp
call
es
and
push
jg
fldlg2
ror
sbb
fnstenv
movsb
ss
xor
cmp
xor
lods
outsl
and
cmp
xchg
lret
out
mov
push
in
mov
jbe
outsl
lods
push
cmp
mov
insb
jle
fcoms
add
cmpsl
icebp
jno
jo
rep
add
js
fmull
adc
outsl
cld
xchg
or
xor
push
clc
pop
fwait
sbb
lods
xchg
mov
pop
in
inc
mov
sub
dec
mov
je
or
adc
test
xchg
leave
pop
aas
sbb
mov
test
adc
dec
pusha
out
sbb
into
dec
in
adc
pop
fiadds
mov
ja
or
or
dec
hlt
mov
push
test
sbb
lcall
and
popf
std
push
ss
mov
stc
je
push
montmul
cmpsb
test
cmpsl
xchg
add
mov
clc
jg
xchg
aad
pop
and
mov
jle
cltd
mov
insb
adc
jns
insb
cs
xchg
cmp
fisubs
mov
add
ret
mov
into
int
mov
loop
ret
arpl
iret
movsl
add
jns
lret
das
popa
and
sub
clc
test
push
and
jle
sahf
sub
and
or
pop
ret
sbb
xchg
leave
mov
dec
movsl
push
adc
sub
inc
lcall
push
fs
loope
xchg
xchg
insl
sbb
arpl
push
mov
mov
dec
jnp
sbb
mov
test
addr16
stc
or
jp
imull
and
lcall
push
jne
mov
mov
in
and
lret
sub
scas
call
cmpsb
sbb
mov
loop
aam
xchg
add
jb
imull
movsb
rorl
mov
pop
mov
aas
rcll
stos
mov
mov
sahf
sub
xor
xor
add
fnstenv
jecxz,pn
in
addr16
fstpl
jb
or
pop
call
adc
ds
xor
pop
imul
adc
loope
mov
in
fxch
add
fdivr
test
aaa
stc
xchg
sub
lea
ja
jecxz
lar
xchg
ret
insb
lods
rcrb
cmpsb
test
loopne
int
mov
bnd
repnz
lretw
sbb
fimull
fistpll
aas
jno
xchg
push
mov
push
aam
fwait
jne
into
gs
sahf
push
lods
pop
in
and
dec
enter
mov
daa
test
add
mov
mov
loop
neg
shlb
inc
adc
mov
loop
call
add
mov
stos
sub
jb
dec
add
push
jecxz
cmp
int
and
pop
aaa
inc
lret
jp
xchg
pop
stos
loopne
rclb
inc
pop
push
int
lcall
movsl
loop
push
out
insb
xlat
mov
and
dec
sbb
in
dec
out
mov
push
mov
cli
out
rcl
sti
das
ret
sbb
pop
mov
icebp
fnstenv
push
jo
jb
jecxz
mov
scas
loopne
icebp
push
add
sbb
stos
lahf
stos
dec
dec
pop
insb
pushf
mov
xlat
fldcw
jo
andl
sub
sbb
jns
mov
stos
jle
cmp
leave
nop
sbb
add
in
adc
mov
adc
call
fldcw
or
xor
add
lock
mov
mov
shl
adc
aaa
dec
fcomps
imull
sti
pop
jmp
mov
data16
imul
jbe
mov
ljmp
jecxz
xchg
test
jb
xchg
and
sti
repnz
cld
aaa
inc
test
lret
jmp
sbb
mov
pop
stc
cmpsl
mov
push
push
fwait
stc
ja
add
roll
dec
pop
adc
decb
cmp
lds
lds
xchg
rcl
test
rorl
and
jae
pop
scas
nop
and
xor
pop
mov
pop
xor
rolb
popa
push
arpl
subb
sub
jl
sub
cmp
jp
jmp
rclb
jns
add
push
addl
call
shlb
xor
aaa
xchg
fmull
xchg
loopne
icebp
pushf
inc
loope
add
pop
insb
int3
dec
out
imul
mov
adc
jns
push
pop
and
add
stos
in
dec
and
pushf
xchg
pusha
or
mov
in
pop
int
stc
repz
or
mov
mov
sub
sbb
and
test
jne
pop
xchg
sbb
xchg
jbe
jge
mov
mov
movsl
ret
insl
mov
scas
add
jge
pop
cli
andl
or
mov
fucomip
xor
les
ds
dec
arpl
jmp
jae
xor
cltd
pop
repz
imulb
jp
jle
push
adc
fisubl
mov
xor
push
mov
test
inc
imul
add
cmp
scas
mov
mov
jne
inc
pusha
inc
xchg
iret
push
test
shl
mov
adc
mov
cs
cmp
dec
mov
adc
clc
scas
and
push
or
iret
push
mov
xor
and
stc
mov
and
mov
jmp
push
jmp
jns
icebp
pop
dec
xor
xchg
sub
adc
cltd
sar
fldl2t
cmp
addb
adc
or
mov
push
lds
gs
fucom
dec
incl
mov
mov
sbb
xchg
cmp
jle
fsubrs
mov
test
cmp
mov
out
les
hlt
lea
fisubrl
test
daa
jmp
dec
ja
shrl
jl
or
pop
add
mov
fistl
sbb
arpl
mov
mov
mov
xor
dec
sbb
fiadds
push
pop
ljmp
test
pop
jo
es
cli
xchg
loop
or
dec
jnp
sub
add
push
mov
or
dec
jmp
in
in
jecxz
dec
in
popl
mov
xchg
mov
fildl
jle
cld
push
cwtl
inc
aam
out
fucomi
rcll
mov
jecxz
xchg
mov
cmp
sbb
xchg
ss
inc
dec
sub
mov
mov
stos
mov
enter
out
inc
fnsave
decl
lcall
nop
mov
fcompl
stos
scas
inc
popa
push
stos
icebp
mov
cmp
jg
ja
xchg
sub
xchg
cwtl
xchg
clc
es
lods
xchg
lock
out
add
inc
or
arpl
movsl
cmp
push
jbe
pop
shll
std
mov
sub
jo
mov
jno
mov
jecxz
pop
repz
and
jp
jb
push
mov
add
mov
mov
or
jmp
cmp
jle
out
add
loope
fsubrs
add
pop
movsb
cld
mov
and
fdivl
fucomip
jns
pusha
adc
mov
cmp
and
and
inc
fcomps
loope
pop
push
mov
test
sub
xor
add
add
or
loopne
call
add
mov
jle
call
sub
loopne
sub
sub
lret
and
xchg
rcrb
pop
test
lret
jecxz
std
sub
xchg
add
leave
xchg
into
gs
push
sbb
mov
in
subl
or
arpl
add
sub
cmc
jp
and
sahf
push
sub
stos
jmp
mov
jge
fwait
xor
jno
sti
insl
mov
repz
daa
fbld
test
data16
sub
movb
mov
in
pop
rcrb
lcall
push
call
push
test
sbb
cld
sti
sub
fwait
lcall
in
jns
pop
or
pop
bnd
inc
ds
cmp
insb
cwtl
xor
dec
lahf
arpl
rol
inc
bound
mov
push
cmp
add
mov
inc
in
shlb
add
xlat
mov
syscall
dec
xor
adc
push
mov
arpl
lcall
cli
adc
xlat
decl
mov
repz
push
adc
cmp
decb
dec
inc
xchg
dec
dec
xchg
push
dec
fildll
xchg
mov
notb
push
jno
adc
cmc
dec
mov
fwait
jnp
push
mov
dec
and
xor
inc
xlat
popl
insb
cli
pop
cmc
sub
sub
popl
sub
not
cmpsb
push
daa
outsl
aad
ret
jb
scas
cltd
push
test
jbe
adc
repnz
andl
xchg
push
dec
jmp
fidivrs
out
popf
imul
movsb
pushf
or
adc
jg
leave
iret
es
or
xchg
cmp
hlt
mov
mov
loopne
shr
not
idivl
push
pop
lock
xchg
xor
negb
addr16
mov
roll
pop
jge
fmul
stos
fisubl
inc
add
xor
arpl
sahf
pop
faddl
inc
rorb
popa
lret
pop
rcrb
xchg
jl
push
sub
aas
clc
lods
adc
mov
push
mov
rcrl
adc
imul
jg
aam
sub
cmc
pushf
xor
xchg
xchg
clc
nop
out
mov
jnp,pn
movsl
xor
popf
mov
xchg
sbb
xchg
movsb
aaa
push
je
mov
in
add
gs
jb
nop
out
sbb
not
outsl
data16
fmuls
pop
xor
xchg
xchg
call
movsb
js
cwtl
das
lcall
sub
and
and
ficoml
mov
add
test
cmp
dec
mov
inc
loope
jo
dec
arpl
idivl
fisttps
addl
mov
mov
lahf
mov
lds
shl
int3
out
push
lods
sbb
nop
dec
xlat
jbe
jb
and
xor
mov
pop
push
xor
mov
imul
in
ret
fildll
pop
pop
pop
outsb
inc
pop
xor
and
dec
xchg
leave
leave
sbb
mov
cld
or
and
sub
lods
cmp
ror
in
insb
fisttps
mov
flds
mov
stos
jbe
js
clc
stos
aad
push
pop
pusha
push
lods
push
lods
fisubl
loope
repz
jg
pop
repnz
mov
loopne
add
and
call
popa
add
push
movsl
leave
es
xor
mov
mov
pop
push
push
mov
cs
imull
adc
ljmp
frstor
xchg
add
push
sbbl
out
sbbl
jbe
mov
pminsw
mov
adc
mov
cmc
ljmp
aas
mov
lds
pop
mov
pop
pop
sbb
lock
xchg
add
out
sbb
loop
aaa
into
fisttps
sub
ds
test
and
aaa
cmpsl
ds
lcall
pop
lock
arpl
mov
nop
imul
sbb
xor
out
sub
divb
inc
jle
cli
push
jge
mov
pop
out
scas
inc
fucom
outsb
call
xchg
jb
stos
sub
sub
in
shrb
jmp
adcl
das
mov
mov
mov
fisubl
add
hlt
cmp
pop
notb
mov
iret
cmc
int
sbb
push
out
jno
dec
cmp
ret
popa
stc
adc
sahf
inc
and
mov
xor
fsubrs
mov
cmp
xor
mov
arpl
loop
das
call
out
adc
adcb
and
dec
or
xor
sub
pop
mov
movsl
xchg
lcall
test
adc
mov
mov
push
test
jo
out
ds
xchg
xchg
and
loope
mov
push
test
popf
enter
inc
mov
nop
sbb
dec
mov
cmp
jecxz
out
stc
xor
inc
cmp
out
lods
pop
cltd
out
mov
dec
adc
aam
adc
xlat
pop
mov
xor
pop
movsl
aad
mov
cld
int
adc
clc
loopne
xor
jmp
fistps
mov
fdivrs
push
dec
cmp
popa
sub
rclb
dec
das
jmp
jecxz
mov
push
jbe
shl
inc
mov
shrb
push
insl
rclb
cmp
xor
xor
mov
and
sahf
xor
ja
lods
inc
sub
js
ror
pushl
pop
mov
test
push
mov
test
lods
sub
mov
test
ret
push
bound
outsb
aad
mov
mov
std
out
xchg
pushf
add
push
inc
scas
out
mov
cmp
xchg
sub
ret
popl
dec
out
xchg
push
out
and
scas
inc
push
and
pop
adc
pop
and
adc
je
jns
cltd
sub
push
aaa
and
mov
stos
add
push
push
adc
rorb
jmp
movsb
testb
or
test
pop
sub
jmp
cmp
mov
push
mov
or
inc
sbb
pop
pushf
pop
fbld
sub
mov
shlb
inc
adc
ljmp
cli
pop
sarl
shl
push
call
popa
test
push
fdivrs
jnp
jp
or
test
xchg
scas
sub
arpl
in
inc
inc
or
xchg
or
mov
lret
in
jecxz
cmc
jb
sub
sub
mov
mov
mov
inc
add
repz
shll
mov
shl
ds
mov
addr16
out
mulb
jae
movsb
out
ret
xor
mov
js
inc
push
cmpsl
jg
cld
pop
repnz
and
mov
icebp
hlt
pop
mov
fstps
cmp
jp
or
mov
adc
leave
je
inc
xor
jecxz
out
inc
jecxz
stc
push
call
inc
mov
stc
out
cmp
ds
sub
inc
add
lea
push
inc
adc
pop
sub
inc
fcom
les
fsubr
push
adc
test
jb
movsl
mov
and
in
icebp
adc
xor
jns
and
daa
mov
sub
adc
cmp
loopne
imul
sbb
mov
rcr
and
cmp
and
push
jecxz
lods
sub
out
add
push
pushf
jnp
and
or
lahf
cmp
mov
aaa
add
mov
xlat
outsb
lret
pop
push
notb
xchg
or
pop
add
pop
xchg
out
in
fmuls
daa
cmp
pop
jne
ds
loope
push
inc
fimull
test
repz
icebp
mov
lock
jnp
sahf
push
lds
js
push
stos
fistpl
add
insb
test
lret
push
jmp
negb
test
pop
scas
dec
mov
sbb
out
jecxz
mov
adc
std
scas
mov
sbb
test
lret
out
sahf
iret
lret
orb
or
testb
js
negl
sbb
scas
mov
nop
roll
iret
fmuls
mov
mov
sub
pop
mov
inc
adc
xbegin
aad
sahf
pop
out
aam
mov
mov
push
inc
inc
lock
jmp
lahf
inc
inc
test
xchg
inc
pop
test
jne
or
mov
cmpl
dec
popa
or
rolb
cs
xchg
pop
jns
pop
test
sbb
scas
inc
xchg
int
fisttpl
sbb
sbb
mov
fnstcw
loopne
bnd
and
xchg
adc
push
fldt
jbe
enter
push
sbb
mov
clc
leave
popa
lods
inc
adc
jle
lret
xor
data16
in
mov
sub
mov
or
lret
cmpps
pop
adc
jg
in
mov
push
int3
pop
popa
popf
and
out
mov
imul
fisttpll
mov
in
jbe
gs
xor
ja
or
jnp
jbe
inc
test
stos
add
out
popf
add
fwait
movsb
sti
inc
and
or
pop
mov
std
push
repnz
jmp
add
jle
sbb
dec
outsb
xor
fsubr
ss
pop
sbb
lock
xor
pop
out
aas
cwtl
mov
jge
mov
sti
add
pop
mov
in
and
data16
test
out
test
scas
sbb
and
in
aas
jle
out
lock
lods
mov
inc
fcoms
add
int3
cmpb
push
cmp
inc
pop
in
mov
sbb
inc
cwtl
xchg
sbb
inc
xor
dec
ret
jle
xchg
mull
xchg
in
xchg
je,pn
sbb
iret
push
cmpsl
sbb
shlb
cs
loop
push
fistpl
movsb
cld
lock
cs
cmpsb
cmp
push
sbb
pop
dec
js
inc
and
fnstenv
aam
jl
sbb
ret
mov
pop
pop
dec
mov
sub
sbb
sub
sub
push
loopne
inc
fcmovbe
test
add
push
bound
popf
pop
jne
dec
mov
jbe
adc
push
cltd
pop
jmp
add
cmp
jp
dec
fldcw
push
pop
sbbl
add
dec
popa
jb
adc
cwtl
sub
in
push
push
loop
mov
daa
mov
xchg
je
mov
loopne
sbb
inc
add
sti
pop
ret
loopne
inc
clc
jmp
scas
and
test
jne
xchg
add
cltd
adc
mov
ret
lods
pop
pop
or
test
out
popa
aam
pop
mov
adc
cmp
dec
push
fwait
imul
pop
mov
inc
jle
aaa
mov
xchg
push
mov
push
test
adc
add
mov
imul
imul
xor
loopne
ficompl
mov
add
pop
push
mov
add
sti
dec
cwtl
outsl
sbbb
inc
or
stc
jl
adc
iret
push
cmc
jecxz,pt
dec
and
shlb
mov
add
das
jp
jb
xchg
scas
fs
pop
ret
or
pop
inc
gs
sbbl
popa
je
adc
dec
xchg
jb
mov
pop
hlt
cmpsb
fwait
sbb
lret
pop
ss
pop
jmp
ljmp
or
shlb
mov
push
add
das
xor
lret
in
movsl
cmp
xor
pop
adc
or
mov
stc
jae
hlt
dec
inc
popa
mov
or
inc
add
test
lods
jns
mov
dec
inc
popf
mov
cwtl
popf
jbe
arpl
imul
cmpsb
orl
outsl
push
out
jl
cmp
sbb
fpatan
test
test
test
mov
sbb
pop
cld
pop
mov
and
push
loope
pop
mov
add
dec
pop
std
cmp
jne
sbb
test
jnp
xor
mov
lea
out
dec
mov
lods
out
inc
enter
shr
mov
sbb
stos
insl
stos
cmp
stos
repnz
shrb
pop
aad
xchg
out
icebp
or
fcoms
loopne
outsl
sub
inc
mov
mov
sahf
shlb
inc
mov
jns
cltd
xor
push
stos
ss
pop
sub
pop
das
loope
push
xchg
inc
mov
and
sbbl
hlt
xchg
dec
loop
lret
mov
call
sbb
call
sub
cld
sbb
dec
rcl
stos
mov
icebp
pusha
clc
fisubs
lret
jg
cld
cwtl
adc
scas
push
jge
inc
mov
lods
inc
rorb
ljmp
pushf
pop
adc
call
aad
adc
ljmp
imulb
nop
push
out
and
outsb
mov
scas
push
xchg
sub
out
dec
loopne
jecxz
and
pop
addr16
xor
cs
fcomp
pop
pop
call
dec
pop
subb
outsl
cmp
pop
jle
cmpsb
xchg
inc
je
fwait
scas
and
dec
testl
pusha
stc
js
mov
sbb
decl
jp
rolb
rol
iret
jecxz
dec
mov
pushf
insb
es
inc
cmp
movsb
loop
push
fdivrl
mov
stc
shrl
add
jnp
pop
lods
dec
mov
pop
adc
cmc
jnp
xlat
cs
sbb
and
sbb
jle
cmp
outsb
mov
sbb
iret
nop
push
mov
mov
fldcw
cmp
and
mov
movsl
jecxz
cmc
push
outsl
jno
divl
repnz
gs
jne
xchg
aad
addl
mov
aam
test
outsb
cld
push
mov
movsl
sarl
out
and
fldt
or
fdivrp
pop
imul
xlat
xorl
loope
sahf
jae
mov
call
inc
adc
fsubr
std
push
cmp
jg
in
sbb
mov
push
push
pop
jecxz
adc
sarb
enter
and
dec
addr16
pop
xlat
inc
cmp
jecxz
imul
rcll
xor
ffreep
pop
add
xchg
mov
push
mov
clc
xchg
insb
out
les
loopne
add
sub
jae
ja
imull
or
inc
icebp
xchg
pop
mov
pop
leave
pop
das
mov
fstpt
out
sub
shrl
mov
mov
push
or
es
fchs
fnstcw
into
jmp
out
cltd
es
jae
or
jo
into
inc
test
es
pop
mov
add
inc
fisubl
adc
loop
mov
sbb
xchg
sub
jmp
adc
or
std
and
cmc
mov
cmp
cmp
pop
or
js
mov
js
mov
pop
std
fsubrs
subl
adc
sbb
ret
lds
jl
mov
jle
pusha
fnstsw
fidivl
dec
pusha
add
adc
or
mov
mov
inc
flds
pusha
jge
cmpsl
insl
jge
lods
repnz
mov
roll
inc
pop
repz
call
inc
loop
loope
outsb
outsl
jnp
mov
aas
mov
jg
push
je
xor
dec
loop
ja
mov
or
xchg
test
push
test
push
lock
jg
cltd
xlat
mov
push
jecxz
xchg
jmp
ret
inc
fstps
push
nop
fidivrs
divb
push
lcall
ja
repz
mov
pop
cltd
dec
into
movsl
pop
rclb
and
enter
xchg
std
xlat
sbb
and
out
push
popf
inc
data16
fbstp
ja
inc
or
ds
or
enter
inc
lcall
inc
int
pop
mov
sbb
negl
movsb
cmp
in
test
adc
or
pop
sub
lods
cmp
sbb
call
cmp
test
lret
stos
push
inc
mov
pop
mov
mov
pop
push
jg
or
jns
test
add
in
pop
xor
adc
lret
jb
scas
jne
dec
cmpsl
stos
or
dec
jg
mov
mov
aad
pop
xor
mov
push
push
fsubrl
cs
cmp
lret
cltd
jle
mov
test
pop
push
stos
jmp
mov
movsb
jmp
cmp
jg
pop
popl
cmp
popf
xor
pop
mov
push
cmp
mov
xchg
mov
dec
mov
inc
sbb
jno
sbb
orb
nop
jne
mov
mov
xchg
ljmp
insb
ja
push
test
or
xor
xor
sub
inc
scas
inc
adcl
enter
jg
xor
fs
mov
or
inc
mov
sbb
test
or
add
loopne
mov
jmp
aaa
js
push
popa
sbb
mov
push
andb
int
jecxz
rclb
cltd
pop
or
popl
insb
ljmp
loop
test
xchg
pop
mov
cld
add
popa
out
je
xchg
inc
mov
pop
mov
adc
ja
sub
pop
fwait
jbe
lods
jb
pop
or
mov
aam
or
add
out
test
adc
dec
cmpsb
sbb
dec
push
sub
jge
aaa
mov
or
mov
inc
mov
adc
pushf
popf
repz
call
cmc
pusha
insl
sub
mov
mov
mov
sbbb
aad
pop
mov
fidivl
xchg
xchg
aaa
mov
mov
mov
add
shlb
jae
push
pop
dec
fs
scas
adc
loopne
dec
loope
shrb
orl
lret
inc
jg
xchg
sbb
sbb
sbb
repz
ja
xchg
bound
adc
js
lods
movsb
jle
dec
ljmp
addl
stc
cmp
mov
or
enter
pop
pop
dec
mov
cli
test
fstpl
mov
mov
aam
cmpsl
arpl
fs
fldt
pop
mov
add
sub
loopne
pop
insl
xchg
movsb
jno
mov
movsb
cmp
add
mov
mov
ja
test
pop
outsl
test
sub
fcoms
jae
mov
orl
cmp
adc
adc
inc
dec
or
outsb
cmp
sbb
mov
into
int3
pop
push
or
dec
jno
shll
mov
outsb
ljmp
inc
adc
call
in
or
push
dec
loop
jne
fsubl
pop
cli
movsb
arpl
shll
int
and
inc
pop
jb
mov
xchg
jge
scas
add
and
ds
mov
jbe
shll
xchg
call
sbb
push
arpl
dec
mov
mov
repz
push
cmp
push
mov
cmpsb
mov
mov
out
ss
jmp
xchg
out
xchg
jb
mov
lret
and
mov
jecxz
rcll
les
and
movsb
jecxz
adc
shrl
push
jb
andb
call
cmp
shr
adc
jecxz
push
push
stos
pop
pop
scas
lea
daa
cld
mov
mov
and
mov
cmpsb
cmp
sub
addr16
call
jecxz
jg
push
mov
inc
enter
mov
cmp
sbb
dec
clc
cmp
cltd
xchg
iret
push
lods
or
fs
sub
or
les
test
jne
loop
inc
push
iret
fimull
mov
repz
xchg
notl
dec
aas
lahf
push
jo
imul
mov
test
pop
xor
push
movsl
clc
pop
js
lret
iret
stc
scas
int
rorl
adc
dec
in
test
or
notb
push
jge
adc
cwtl
cs
clc
popl
push
jmp
xor
out
jae
leave
adc
jno
cmp
dec
jg
jae
jo
cwtl
pusha
mov
add
inc
cmp
xlat
sarb
hlt
sub
and
out
cmp
xchg
push
in
aaa
int3
jne
scas
ja
arpl
mov
ja
add
xchg
es
inc
lahf
inc
xor
mov
cmp
ds
lcall
fsubrs
add
imul
sbb
imul
loop
shrb
ret
add
hlt
mov
jne
dec
arpl
adc
lea
mov
push
stos
bound
push
lods
lret
xchg
cli
jne
adc
cmc
adc
and
push
mov
or
js
lea
mov
push
inc
cltd
aam
dec
mov
shll
xchg
loop
sahf
sub
stos
xchg
int
jno
adc
pop
out
in
insb
inc
les
jne
mov
shlb
scas
std
mov
std
push
stc
das
movsb
dec
lcall
xchg
leave
lret
aaa
jns
inc
or
aad
xor
in
push
xor
dec
lret
dec
add
in
dec
popa
adc
pop
sbb
xor
xor
outsb
add
mov
test
adc
jp
jp
stos
test
and
xor
cmpsb
jo
testb
jle
jg
xchg
jne
mov
ja
cmc
cld
and
or
adcb
loop
push
xchg
xchg
xor
sbb
mov
or
loop
leave
sub
fabs
mulb
fadds
enter
mov
ret
fsubs
and
push
negl
lret
sub
adc
enter
iret
int3
out
mov
xchg
xchg
mov
int3
jo
test
and
jmp
ljmp
pop
aaa
and
jb
fsubrs
jb
shrb
dec
inc
pop
test
shlb
loopne
mov
cld
inc
rcl
sub
hlt
mov
add
in
adc
test
aas
lds
daa
fidivrs
enter
ss
xor
mov
ds
cli
cwtl
and
leave
jnp
mov
dec
lock
dec
push
xchg
popa
ss
add
ret
lods
cmp
sbb
fiaddl
lcall
jo
stos
cmp
xchg
push
mov
add
dec
setp
xchg
adc
addr16
dec
test
jnp
loop
sbb
clc
mov
sbb
les
insl
cmp
repnz
test
jb
call
xchg
divl
arpl
in
pop
push
jb
xchg
mov
push
cmc
mov
inc
lock
lock
jl
lcall
iret
mov
jne
stc
xchg
mov
inc
xor
push
pop
inc
int
lret
adc
dec
nop
dec
ffree
outsb
call
jmp
mov
gs
push
test
inc
in
jmp
pop
mov
push
bound
xchg
or
or
sub
popa
dec
and
jle
inc
pop
repz
cltd
sub
aam
and
clc
mov
popf
jl
mov
es
xor
dec
dec
scas
shrb
bound
add
inc
in
test
sub
fnstsw
sbb
mov
pop
cmp
aam
xor
jae
jmp
dec
fildll
scas
inc
pusha
es
pop
push
adc
fwait
sub
inc
push
mov
das
mov
into
or
mov
ss
add
mov
and
pop
dec
bound
sbb
pop
xchg
or
sahf
je
data16
pop
outsl
mov
shl
popa
dec
fisttps
fidivrl
xchg
enterw
fnsave
iret
iret
adc
fsubrl
insb
seta
cld
test
sub
daa
enter
mov
sub
imul
dec
es
jae
ret
into
adc
xchg
xor
std
sbb
mov
test
and
and
lods
inc
mov
ret
cmc
ja
mov
push
cmp
int3
jns
jg
dec
lcall
mov
jg
xchg
mov
fiaddl
pushf
mov
subb
pop
sahf
add
es
mov
fsubrl
das
ljmp
add
lea
and
cmp
push
shr
loope
and
sub
adc
xchg
sbb
das
sahf
rcr
arpl
popa
mov
mov
sar
lret
pop
sub
test
inc
das
test
or
xlat
and
mov
sub
std
or
add
sub
sti
cmp
add
sbb
movsb
cmpsb
shl
int3
xchg
inc
sub
pop
bound
inc
iret
sub
pop
mov
test
fbstp
xchg
xor
insl
cmp
mov
stos
call
jmp
arpl
ljmp
repnz
jns
pop
fsubrs
mov
xor
or
sub
inc
and
mov
std
mov
push
adc
mov
pop
sub
push
cmp
popa
mov
fs
in
enter
mov
js
int
or
lods
inc
xlat
add
lret
cs
hlt
je
and
jo
popf
cmc
mov
adc
call
shlb
cmp
add
in
out
pop
and
push
and
fidivs
addr16
data16
ljmp
xchg
subb
into
loopne
and
cmp
out
imul
rorl
sbb
aaa
dec
or
xor
mov
push
pop
mov
arpl
xchg
ret
ds
sub
pop
mov
push
inc
in
and
push
fiadds
int3
jg
test
inc
pop
fnstsw
divb
nop
movsb
pop
les
sbb
dec
fisttps
stos
and
mov
and
or
lcallw
xor
shlb
push
mov
mov
ficoms
dec
mov
mov
xchg
pop
ds
cmp
pop
test
lods
adc
mov
aam
lock
inc
sub
loope
gs
es
inc
mov
jne
mov
mov
mov
out
bound
xor
mull
iret
add
push
in
mov
sub
rorl
aas
cmp
fdivrs
ss
enter
pusha
sarl
iret
jle
bound
int3
jg
jae
sub
ljmp
mov
subb
pop
addr16
mov
xor
test
negb
push
xchg
lock
insl
push
adc
orl
jge
sbb
and
aad
xor
outsl
test
testb
mov
cmpsb
xchg
adc
mov
inc
pop
lock
sbb
sub
outsb
push
ja
cmp
xchg
cmpsb
mov
gs
push
inc
inc
xor
and
inc
push
dec
inc
mov
stos
icebp
out
dec
in
jmp
data16
mov
mov
pop
in
or
hlt
mov
or
adc
sbbl
push
fld
jmp
aaa
mov
imul
insl
js
push
jmp
out
xor
movsl
arpl
jl
mov
testb
mov
les
or
call
xchg
sub
xor
inc
cs
test
and
enter
push
lahf
cli
dec
in
fsubrl
mov
insb
fistpll
hlt
mov
popf
or
ljmp
or
or
mov
stos
xchg
lods
test
fmul
lret
adc
mov
lods
arpl
stc
sbb
cmp
mov
cltd
jl
iret
xor
adc
push
xchg
adc
dec
inc
push
mov
jae
outsb
cmpsb
and
stos
iret
loopne
in
jb
add
mov
push
popa
sub
add
cli
sbb
rcrl
pop
push
pop
push
xchg
xchg
stos
adc
sarb
jp
loope
icebp
testb
loop
sub
cmp
add
sbb
fisubs
mov
call
xor
jo
pop
xor
or
mov
ret
cli
push
pop
je
fwait
xchg
inc
call
xor
cmp
repnz
gs
pop
andb
cmp
daa
repnz
jbe
jp
in
add
jecxz
jge
dec
pop
ljmp
push
jb
fmuls
or
or
ja
ss
aad
stos
push
cld
ret
ret
pop
nop
ljmp
dec
or
stc
pop
sub
push
add
add
iret
adc
divb
sub
pop
sbb
xchg
xchg
cmp
jnp
lods
scas
pop
mov
adc
and
adc
sub
cwtl
ret
push
fldl
movsb
out
ficoms
mov
adc
fcomp
cmp
add
repnz
pop
sbb
xor
clc
add
pop
dec
add
aaa
mov
lcall
nop
mov
mov
es
pusha
pop
sahf
jne
jle
int
es
daa
sbb
mov
cmp
subb
mov
outsl
and
lods
cwtl
inc
imulb
xor
iret
xchg
xchg
add
lock
mov
xchg
mov
fsubrp
mov
ljmp
notl
or
outsb
add
inc
sti
mov
sub
vandnps
dec
shlb
xchg
xor
mov
or
cmp
dec
outsl
aas
lcall
into
push
test
movsl
repz
xchg
in
ss
and
cli
xchg
rcl
adc
arpl
or
mov
loopne,pt
andb
inc
dec
or
xor
insb
data16
sub
pmuludq
xor
push
sahf
ljmp
cli
mov
jge
call
or
pop
int
andb
pop
pop
sub
clc
inc
adcl
add
xor
stos
and
flds
xor
or
loop
cmp
data16
movsl
xor
outsb
ss
sti
mov
mov
add
cmpsb
clc
aad
adc
mov
outsl
rclb
cli
mov
ja
sub
push
adc
cmp
jbe
add
sti
cmpsb
xor
mov
je
stc
test
and
jbe
in
adc
lret
push
adc
pop
into
in
aas
ja
bound
nop
mov
jg
and
arpl
lahf
and
pushf
fidivl
push
inc
sbbl
cs
lahf
and
fnsave
cmp
xor
push
inc
lds
fidivrl
dec
jecxz
pop
pop
rcll
xor
jp
pop
lods
inc
mov
adc
dec
cmc
mov
push
stos
shlb
adc
mov
sub
shll
leave
add
dec
fnsave
mov
push
mov
dec
fistpll
mov
loope
loope
fiadds
aaa
loope
xchg
mov
cmp
arpl
ficoml
mov
lret
jmp
imul
cs
add
dec
dec
push
jg
sub
pusha
roll
xchg
pusha
ror
and
inc
pop
add
push
in
dec
push
jl
loopne
mov
mov
pop
inc
sahf
add
jbe
cld
push
xor
movsl
jns
xchg
and
lock
xor
adc
insb
cltd
mov
mov
outsl
push
xor
mov
inc
adc
adc
ficoms
mov
sbb
test
cmp
push
out
and
mov
push
inc
xor
push
in
loop
inc
popf
or
mov
jmp
mov
in
sub
add
mov
adc
cs
mov
inc
jge
push
and
out
xor
pop
pop
and
js
je
jg
inc
sarb
repz
dec
sahf
mov
adc
sbbb
outsb
dec
jae
data16
test
enter
pop
popa
insb
adc
fwait
subl
mov
sub
inc
popa
addr16
adc
push
add
mov
cmp
leave
test
shrl
inc
xchg
int3
pop
fcoms
add
mov
cmp
pusha
ja
pop
loope
push
jb
mov
push
movsl
icebp
fnstcw
stos
cmp
mov
ds
push
cmpsb
push
stos
pop
cld
fsts
jl
mov
cmpsb
inc
mov
jnp
or
out
inc
ja
and
shrl
cmp
jg
inc
aas
lods
insl
pop
jg
jl
mov
xchg
stos
inc
ficomps
fnstcw
cld
ss
adc
int3
sbb
sbb
jg
lods
push
inc
jg
ja
xor
repnz
adcl
xor
sahf
jno
repnz
ja
push
test
add
ds
xchg
sbb
addr16
das
orb
enter
xchg
js
dec
lods
ljmp
in
iret
inc
mov
jmp
xlat
inc
pop
xchg
dec
push
jmp
loop
inc
clc
lods
fwait
lods
fstpl
int
jg
sbbb
jl
out
mov
daa
adc
dec
loopne
bound
pop
xchg
xor
mov
daa
inc
xor
xchg
inc
mov
mov
add
sub
inc
add
daa
sbb
mov
das
push
adc
and
jae
icebp
and
xchg
ffree
cmp
push
push
mov
mov
gs
fdiv
fdivrl
and
and
aad
sub
cmp
pop
pop
jg
jp
xchg
lods
scas
loop
dec
les
mov
cmp
xor
shrl
jno
movsb
mov
add
ret
loope
popa
clc
sti
add
data16
xchg
xor
dec
jge
jb
push
mov
fwait
sti
mov
sbb
inc
mov
int
cmp
push
in
fadd
or
dec
es
pop
add
mov
in
test
mov
cwtl
das
jns
inc
mov
add
repnz
and
aaa
or
out
cmp
cmpsb
arpl
mov
add
outsb
aas
jne
and
lret
lret
inc
mov
in
push
insb
mov
mov
iret
dec
in
xor
pop
inc
xchg
mov
out
int
sbbl
mov
inc
xchg
add
mov
jnp
lahf
das
popf
fbstp
int
xchg
push
cmp
ljmp
jmp
scas
cmp
or
sbb
lret
mov
pop
adc
std
xchg
sub
cld
iret
fcompl
mov
jns
sti
out
fwait
into
gs
insb
dec
sbb
mov
js
popf
cmp
mov
lods
xchg
int3
lret
into
gs
mov
addl
jb
mov
or
mov
mov
xchg
or
add
in
lret
push
mov
inc
cli
pop
fwait
nopl
dec
xor
sub
aas
mov
pop
loopne
fnsave
in
dec
out
sti
rcrl
popa
fadd
jp
inc
sub
pop
ror
outsb
bound
test
pop
test
jb
stos
lods
jge
and
lcall
shrb
xchg
outsl
and
repnz
int3
data16
adc
and
bound
out
mov
movsb
jecxz
daa
inc
push
or
ficompl
pop
cmp
jge
mov
add
sbb
test
and
mov
add
nop
daa
fisttpll
scas
mov
popa
ret
and
repnz
mov
jns
mov
push
adc
lock
jno
es
aad
movsl
pop
subl
dec
stos
mov
repnz
fbstp
inc
push
out
out
inc
push
dec
add
movsl
xchg
decl
sub
mov
and
xor
or
cltd
out
aad
inc
jne
push
mov
std
mov
dec
fistps
clc
xor
mov
add
ror
lds
mov
lahf
imul
pop
mov
pop
jns
test
cmp
mov
int
test
pop
mov
add
leave
adc
cmp
push
sub
xor
fwait
add
dec
fucomip
mov
jg
mov
rep
dec
shl
mov
fstl
loop
imul
or
add
rcr
xor
bound
pop
rclb
or
and
pop
xor
test
outsb
jl
daa
jns
lods
imul
into
xchg
mov
mov
imul
push
aas
push
inc
std
pop
mov
subl
repz
shrl
lcall
idivb
icebp
pop
std
xlat
and
or
in
add
leave
xlat
test
data16
repz
js
mov
mov
xorl
inc
roll
aas
mov
jo
jb
jns
pop
xchg
add
pop
push
inc
ds
mov
inc
push
add
xchg
sbb
and
adcl
je
or
std
sti
push
test
xor
cmp
jecxz
jg
lcall
jle
push
xor
dec
les
jns
pop
outsl
fadds
ret
pop
cmp
sbb
add
daa
cmc
clc
shll
jg
fs
cld
lret
pop
test
cmc
ss
es
xchg
out
inc
xchg
inc
aas
xchg
xlat
xchg
mov
push
stc
lds
or
iret
add
in
xor
pop
cmp
and
pop
inc
and
adc
pop
mov
mov
sbb
enter
sub
arpl
adcl
loope
sub
push
push
popf
jl
sub
push
ret
mov
mov
negl
inc
ficoms
fsubrs
or
lea
or
stos
jge
sbbl
ret
mov
aaa
xchg
sub
sahf
mov
loop
jge
xlat
pop
jbe
dec
and
inc
mov
push
in
push
mov
pop
std
lods
dec
out
inc
iret
cmp
sub
xlat
add
mov
mov
xchg
cltd
div
int
jmp
push
mov
inc
push
sbb
xor
inc
fidivs
push
mov
lds
jp
mov
xchg
mul
jle
shlb
test
push
lods
inc
rolb
les
sbbl
incl
add
sbbb
scas
mov
mov
lock
into
loope
jns
into
das
repnz
outsl
lahf
ss
adc
or
mov
fisttpll
or
mov
adc
pop
lods
pop
aas
lcall
xchg
mov
mov
shll
aaa
xor
pop
inc
dec
lods
and
shl
mov
sbb
leave
insl
loopew
inc
std
dec
aas
jle
mov
xchg
mov
push
orb
mov
leave
and
cmp
xchg
jne
sahf
sbb
mov
out
jmp
loopne
hlt
push
decb
in
cmp
add
out
mov
push
mov
stc
fldcw
lret
xor
icebp
xor
loopne
adc
test
jl
repnz
ret
mov
mov
push
jbe
mov
shl
jp
cmpsb
or
xor
clc
addr16
jmp
sub
scas
fwait
stos
fs
sbb
dec
xchg
cltd
xor
sbb
sub
sbbl
fbld
es
push
jns
inc
rorl
aas
mov
jne
xchg
lretw
icebp
mov
js
stc
imul
mov
adc
jns
mov
sbb
stc
shlw
sbb
cwtl
push
jbe
or
cmpsl
cwtl
cmpsb
cmp
or
and
dec
cwtl
ds
lcall
idivb
insb
cmp
mov
aam
mov
inc
push
pop
mov
inc
aam
mov
pop
inc
js
jp
aam
push
push
and
je
inc
sti
push
jle
js
cld
xchg
cmp
pop
adc
clc
and
in
stos
xchg
cmp
xchg
cmc
repnz
pop
cwtl
ss
push
push
sbb
sub
push
sbb
call
or
fbld
dec
dec
jecxz
pusha
inc
fwait
imul
and
jmp
lret
xor
fldenv
jmp
iret
int3
scas
cmp
mov
lods
ds
xchg
dec
loop
scas
pop
aaa
mov
fistpll
and
fs
fidivl
xor
in
mov
sub
stos
sub
xor
dec
xor
shlb
cmpsl
push
mov
xchg
push
iret
leave
jnp
xor
mov
xchg
pop
add
xchg
mov
push
fdivl
pop
add
sub
in
pushf
pop
out
xchg
fsts
sub
jae
dec
sub
movsb
mov
rorb
add
aad
test
push
out
js
enter
mov
xor
imul
cmp
and
mov
pusha
inc
mov
dec
rcr
sti
xor
sub
sbbb
enter
mov
dec
loop
ja
test
push
lret
enter
into
fsub
inc
jbe
fildl
mov
outsl
lcall
push
mov
stos
mov
fldt
adc
inc
mov
adc
rolb
sub
mov
jb
cmpb
scas
or
and
xchg
xor
ds
or
lds
and
and
ss
mov
addr16
sbb
jl
ljmp
cmp
pop
push
pop
scas
jb
xchg
stc
nop
fadds
mov
inc
push
pop
push
xchg
cmc
sbb
fs
pop
rcrl
and
sbb
dec
mov
mov
xor
sbb
pop
and
mov
sub
add
aad
rolb
jmp
jno
add
mov
sub
cld
push
js
test
ljmp
cmpl
jno
mov
popa
loope
stos
jne
ret
hlt
xchg
push
sub
push
mov
jle
lret
jnp
cmpsl
lock
lock
lds
add
push
loop
sbb
push
stos
or
adc
cwtl
es
add
ljmp
sub
test
cltd
rcrl
mov
lahf
in
sub
jno
fbstp
xchg
insb
scas
out
test
outsl
lret
arpl
aas
out
dec
data16
cwtl
insl
xor
cmp
pushf
lea
push
inc
fimuls
sahf
inc
mov
dec
loopne
popf
dec
dec
add
scas
mov
ds
rep
popa
stc
notl
pop
aam
out
jmp
mov
cmp
mov
mov
je
dec
ret
or
fsubs
mov
mov
pop
mov
mov
hlt
xchg
adc
pop
inc
mov
mov
dec
adc
inc
imul
jae
sub
jp
loope
outsb
int
mov
lret
jb
pushf
aam
or
xchg
sub
mov
pop
test
fwait
adc
push
maskmovq
testl
inc
cmp
js
jecxz
lock
mov
cwtl
test
xchg
cmp
pushf
cwtl
xor
inc
jle
jne
addr16
stos
mov
call
bound
jmp
out
aad
popa
push
inc
sbb
arpl
ja
cmc
ds
pushl
push
dec
ds
mov
xchg
in
imul
pop
push
jae
dec
cltd
sub
dec
pop
mov
insb
xor
sar
pop
add
xchg
cltd
je
cmpsl
sbbb
xlat
xor
add
movsl
arpl
push
orl
mov
shlb
cltd
ja
cmp
aas
out
es
xor
cmp
decb
sahf
fwait
lods
iret
xor
jl
andl
or
xor
shrb
mov
insl
pop
mov
shlb
cmovns
inc
lahf
pop
gs
and
pusha
stos
sahf
outsl
lock
adc
push
fstpt
xlat
insl
lcall
sbb
fsts
sbb
cld
ret
sub
roll
dec
aam
arpl
cmp
xchg
lcall
xlat
add
js
mov
fbstp
dec
add
stos
inc
bound
inc
out
dec
push
test
push
jl
dec
iret
cmp
mov
das
cmpb
sub
add
jae
cmp
jae
and
lret
test
cmc
xor
clc
push
cld
and
jns
pop
js
lcall
jns
push
call
lock
ja
jnp
mov
add
xchg
sub
movsb
ljmp
and
xor
xchg
mov
sbb
push
sti
inc
outsl
icebp
loopne
repnz
data16
addr16
roll
xchg
sarl
test
cmpsb
mov
push
and
pop
add
mov
fsubp
pop
int3
mov
mov
loopne
sbb
test
xor
aaa
jnp
push
popf
jmp
lcall
clc
mov
inc
cmp
mov
xchg
hlt
push
jns
shl
call
in
xor
pop
cmc
push
mov
aaa
sbb
xchg
xlat
cmp
mov
call
xchg
neg
mov
or
out
popa
jbe
or
jbe
adc
outsl
adc
mov
into
xchg
mov
in
mov
out
sub
pop
fnstenv
sub
stos
ret
pop
or
loope
push
je
cmpsl
push
shl
nop
lea
sarb
adc
out
jge
aad
mov
or
fidivl
mov
xor
sbb
mov
loopne
lret
cmpsl
sbb
inc
sar
mov
test
mov
inc
xor
cwtl
and
ret
jp
mov
sbb
push
imul
mov
fisttpl
push
in
fwait
add
xchg
xor
or
xor
or
pop
enter
shlb
cld
stc
nop
jbe
rol
xchg
pop
adc
mov
call
pop
repz
iret
outsb
test
cs
adc
pushw
mov
test
add
push
cli
mov
xchg
sbb
cmp
ds
ret
fistpll
mov
and
loope
push
ficompl
sbb
pop
in
dec
and
jge
in
test
ret
mov
or
test
jmp
pop
or
and
sbb
fs
cmp
xor
sbb
xchg
cmp
adc
rcrb
xchg
fs
les
aad
add
fnsave
in
sub
add
sub
pop
pop
mov
rclb
mov
popa
xor
mov
lea
mov
cmpsb
mov
pop
xor
lahf
nop
jnp
fsubrl
insb
cs
movsb
mov
in
dec
push
outsl
push
mov
shl
add
cwtl
cltd
repz
jbe
inc
flds
push
popf
cwtl
mov
call
add
push
outsl
jns
xor
push
outsb
sub
iret
and
les
cltd
test
push
jne
mov
ret
jmp
loope
dec
loopne
mov
mov
fwait
sbb
jno
gs
and
adc
mov
pop
pop
adc
mov
dec
loop
xlat
xchg
lcall
inc
clc
inc
adc
inc
arpl
out
stc
jns
sub
sbb
xchg
ret
mov
popf
dec
ret
les
push
outsb
xor
test
xchg
fldt
test
das
adc
mov
xor
in
cwtl
sbb
add
add
cmp
decl
cmp
test
in
push
mov
dec
cltd
sbb
jno
dec
fdivrl
adc
sbb
out
and
cmc
or
test
sbb
mov
ds
or
out
dec
or
dec
mov
pop
inc
dec
push
mov
mov
pusha
add
cmpsl
add
add
sbb
outsl
push
dec
dec
sbb
rcrl
adc
pop
sbb
or
jle
fnstsw
pop
les
sbb
pop
cmp
and
mov
in
loopne
mov
lret
jmp
pop
aad
push
push
js
push
xor
lcall
dec
push
stc
inc
ss
nop
adc
int
out
test
xchg
ja
fisubs
inc
test
xor
shrl
adc
mov
movsl
iret
leave
stos
nop
sti
lock
lods
into
dec
dec
inc
xchg
adc
sbb
dec
insb
fs
popf
imul
push
jb
and
sbb
push
int
pcmpgtb
xchg
inc
adc
repz
dec
scas
inc
js
ret
xlat
sub
lret
in
fstps
orl
outsb
popl
ret
jecxz
subl
jnp
cmp
mov
fcompl
mov
xchg
ss
jns
pop
jmp
push
sbb
mov
pop
movsb
and
mov
int3
lods
out
mov
cmp
mov
sbb
repnz
sub
out
mov
scas
shlb
fsub
ja
xchg
vpmaddwd
dec
mov
dec
mov
popa
lods
push
lret
xor
xor
sbb
das
out
mov
xor
mov
cmc
mov
ljmp
hlt
lcall
xor
jnp
cmpsb
sub
sbb
pop
mov
add
mov
add
sbb
xchg
pop
push
gs
push
sub
jns
aas
push
and
mov
scas
icebp
mov
pop
jbe
int
xchg
push
adc
cld
std
scas
aam
adc
inc
push
sbb
fdivl
sub
imul
ret
popa
das
insl
rcll
in
xor
mov
loop
not
adc
sahf
sub
and
mov
inc
dec
pop
repnz
mov
push
jns
je
inc
fwait
addr16
push
aas
ret
scas
arpl
rcrb
jl
jp
and
hlt
mov
test
xchg
popf
repnz
mov
mov
pop
in
and
and
sub
xor
xlat
cmp
push
mov
sti
mov
fsubs
daa
push
loopne
inc
mov
push
mov
push
sbb
lret
lret
xchg
inc
inc
repz
icebp
push
popf
mov
push
sub
cs
or
cmp
mov
mov
pop
dec
adcl
sarb
sar
jbe
shll
leave
dec
sbb
cmp
pop
mov
jbe
push
jno
push
mov
js
fwait
and
lret
or
or
xchg
pop
hlt
ret
jge
mov
popf
loope
and
inc
popf
cmp
test
and
insl
sarl
or
stos
icebp
lahf
xor
es
jg
push
icebp
enter
pop
movl
ss
stos
ljmp
fnstcw
lds
or
daa
pop
les
xor
scas
fwait
ja
pop
movsl
jp
ret
sbb
adc
push
pop
xchg
and
pop
push
pop
and
mov
mov
pop
leave
pop
xchg
stos
xchg
nop
jp
push
js
cs
push
mov
adc
ss
test
cmp
outsl
inc
push
cmp
int
ss
sahf
out
push
pusha
test
ljmp
fucomi
jle
cli
xlat
outsb
sub
jg
adc
mov
les
adc
fnstcw
bound
mov
mov
das
jp
arpl
ljmp
iret
ja
mov
fwait
jmp
pop
js
push
jns
adcb
mov
insb
dec
xor
imul
ss
inc
jl
insl
jnp
jmp
icebp
sub
clc
iret
sub
push
dec
add
daa
sbbb
ret
jmp
push
xor
pop
iret
loop
daa
push
jno
ret
or
rcll
aas
cwtl
andb
dec
cli
or
adc
rorb
je
pop
or
ljmp
inc
cltd
ret
popf
and
les
insl
pop
inc
lret
int
dec
mov
mov
lds
mov
stos
sub
dec
sbb
sahf
fsubrs
mov
pushf
sti
outsl
fldenv
in
cmp
mov
ljmp
sbb
pushf
out
mov
js
inc
imul
push
and
shrl
sub
arpl
addr16
push
sbb
mov
mov
xorb
sub
test
mov
adc
mov
fistpll
pop
shll
xchg
das
adc
dec
push
sarl
mov
xchg
scas
addr16
fwait
add
inc
add
jmp
jb
ret
push
out
and
insb
ret
lret
lds
sbb
jo
pop
leave
test
pop
mov
imul
es
js
outsl
ret
shrl
out
scas
ja
lods
pop
adc
outsl
shlb
int3
sbbl
movsb
sbb
loop
pushf
and
jl
insl
sbb
clc
dec
call
mov
ret
aas
cmp
pop
and
push
inc
stos
and
pop
repnz
std
mov
daa
pop
sub
lea
in
add
ret
std
cmp
das
in
mov
push
xchg
lcall
adc
xor
xor
push
inc
in
push
pop
lcall
mov
data16
mov
test
inc
cmpsl
lea
and
test
add
cwtl
or
inc
je
out
sub
mov
loop
jecxz
aas
nop
movsb
cwtl
mov
jne
dec
out
xchg
adc
stos
mov
cmpsl
les
insl
aam
movsl
lds
scas
sub
xor
dec
addr16
add
push
mulb
scas
idivb
jecxz
lret
xchg
test
inc
add
add
jnp
inc
aas
call
mov
xchg
inc
clc
shrl
xchg
add
cmp
jle
cmpps
pop
push
push
xor
ss
stos
jle
cmp
outsb
inc
or
inc
mov
jg
cli
or
sbb
add
dec
and
call
xchg
shll
in
inc
es
xchg
int3
lret
cli
inc
mov
add
stos
cmp
cmp
pop
jp
push
frstor
add
mov
ljmp
mov
aam
push
pop
faddp
je
push
cmpsb
test
mov
in
into
gs
sub
jmp
in
sbb
jo
gs
popa
sbb
push
push
stos
in
xor
xor
test
inc
inc
mov
add
inc
cmpsb
mov
out
loopne
sub
sbb
in
xchg
add
sarb
in
push
das
std
lods
mov
lret
bound
test
les
xchg
jnp
ljmp
cwtl
jmp
pop
fdivs
scas
pop
sub
xchg
jns
int
cmp
mov
insl
nop
in
decl
mov
fstpl
mov
dec
mov
push
dec
in
cmp
xchg
jb
insb
adcl
or
pop
stos
pop
sub
or
clc
xchg
pop
and
or
push
xchg
loopne
lds
and
iret
andl
inc
push
divl
add
dec
test
ja
mov
adc
sub
xor
add
test
movsl
cmp
push
aam
das
mov
xor
cmp
mov
and
cmovle
aad
lods
cmc
lcall
sbb
js
jp
sub
push
adc
cltd
test
rclb
je
jecxz
xchg
fistl
push
mov
das
jmp
movsb
push
nop
and
jle
mov
ljmp
adc
enter
divb
mov
rcrb
imul
dec
out
mov
mov
add
inc
addr16
in
ds
dec
lret
lock
divl
adc
gs
lret
loop
popa
dec
scas
xchg
pop
ja
xor
ja
gs
in
cmova
or
xor
jns
cmpsb
movb
push
jns
jne
test
push
cmp
test
mov
leave
mov
daa
incb
dec
mov
jne
lea
dec
xor
cmpsb
sti
push
ds
pop
es
sahf
pop
repz
add
or
dec
push
stc
mov
cmpsb
dec
fildl
or
cmp
ja
jp
cmpsb
mov
inc
test
cmpsl
xor
cli
inc
inc
jno
add
add
cltd
cld
stos
jns
addr16
loopne
jno
out
sar
lcall
out
std
sub
lahf
or
push
out
aam
mov
lock
mov
or
pop
pop
dec
xor
adc
in
push
sbb
push
xor
sbb
mov
andl
dec
dec
xchg
xchg
or
add
sti
push
es
das
jnp
pop
int
xchg
adc
jmp
push
cmpsb
sahf
dec
mov
jp
call
and
fisubs
mov
fldcw
pop
testb
jecxz
fidivl
aam
adc
dec
lea
fadds
sub
std
mov
push
cmc
mov
xchg
adc
adc
lea
adc
sti
lea
jno
inc
dec
pop
sbb
aaa
push
cli
dec
mov
out
pop
mov
daa
lret
adc
adc
jb
popa
jae
push
ret
gs
sub
or
xor
inc
pop
jne
xor
jnp
inc
mov
in
and
cmp
cmp
xor
lcall
cmpsl
lahf
jns
xchg
and
shl
loop
and
cmp
sub
pop
jo
out
rorb
jl
xchg
fwait
or
int3
push
push
scas
loop
mov
inc
sbb
ljmp
push
daa
mov
cmc
shll
jl
cmpsl
pop
xchg
adc
jbe
pop
lds
es
fisubs
stos
xchg
adc
leave
pusha
xchg
mov
aam
testb
aam
aad
pushl
mov
jecxz
inc
pop
lret
jp
jmp
jle
nop
mov
jns
insl
xchg
bound
mov
shrl
jge
mov
sbb
ja
lods
shrl
pop
jae
lock
xchg
dec
pop
sti
movups
pop
xchg
add
ret
push
jg
mov
push
sbb
stos
pop
pop
in
adc
jb
and
adc
lods
jae
cs
pop
and
xchg
sbb
mov
add
dec
fbld
jbe
push
cmp
pop
adc
pop
sbb
xor
cmp
or
cmp
stc
sub
clc
mov
xchg
rclb
shlb
xor
enter
clc
mov
jg
mov
arpl
cmp
jecxz
push
mov
or
adc
lods
das
adc
fmuls
xor
subl
lahf
lcall
imul
lahf
in
aas
inc
inc
subb
xor
pop
or
imul
lods
lahf
lahf
pop
mov
inc
in
xchg
aas
es
adc
popl
scas
popf
les
addr16
pop
out
rcr
inc
leave
fdivl
loopne
jp
cmc
sub
aam
in
insl
andb
mov
es
jg
ret
adc
inc
sub
dec
or
cmp
and
lds
sbb
jmp
cmp
mov
test
sub
mov
movb
inc
jbe
out
lret
jp
es
loopne
jp
scas
jp
mov
push
mov
sbb
fcom
mov
push
into
imul
pop
test
clc
push
outsl
enter
mov
mov
push
xlat
test
jae
and
scas
lcall
rcrb
incl
xchg
sub
repz
sub
mov
ret
mov
jno
rol
mov
dec
xchg
out
add
shll
and
sbb
les
lods
add
push
sub
add
cwtl
sbb
sub
mov
inc
and
fucomp
into
gs
mov
ficoml
jne
ds
pop
cwtl
pop
add
mov
cwtl
and
stos
mov
pop
inc
addb
sub
cmpsb
sub
and
and
gs
test
cs
push
lods
popa
shrb
dec
ret
outsl
cmpsb
lret
sbb
xchg
jge
dec
jmp
jp
fs
mov
add
fcomps
dec
jb
test
out
int3
arpl
xor
ljmp
aaa
pop
insb
imul
addr16
mov
les
enter
lea
or
mov
shrl
xorl
cltd
fs
push
mov
int3
movsb
ss
mov
imull
in
clc
aad
dec
jecxz
dec
arpl
jb
sub
jl
sub
sbb
jae
fisubl
dec
popa
clc
jle
or
mov
testl
jne
push
push
xchg
push
xchg
push
dec
push
icebp
push
pop
ds
mov
stc
aad
mov
jo
andb
sub
pop
sub
inc
out
jns
xchg
jmp
jno
jo
dec
les
in
xor
cltd
dec
and
test
inc
jecxz
ja
inc
dec
cs
mov
mov
add
jle
test
lock
and
jmp
mov
ret
hlt
cs
rcl
mov
pusha
testl
mov
and
lds
mov
out
movsb
pusha
lods
xchg
mov
jge
sub
or
xor
paddd
jns
mov
out
in
popf
pop
hlt
mov
iret
mov
jne
loopne
xor
jg
sbb
pop
inc
pop
mov
sbb
jae
pop
std
in
mov
imul
mulb
in
jle
lds
mov
sub
das
add
in
push
push
out
or
rcl
aad
loop
daa
cwtl
stos
or
repz
jmp
mov
insl
inc
fcoml
mov
xor
ds
cwtl
bound
mov
popa
sti
scas
xchg
dec
in
dec
lahf
outsl
pop
xchg
dec
notl
jo
sbb
rorl
push
push
xlat
loope
mov
out
sub
stos
lea
into
insb
cwtl
test
data16
sbbl
test
mov
es
movsl
movsb
mov
mov
xchg
stos
jmp
fcmovu
sahf
or
das
push
xchg
add
ret
sarl
gs
out
out
xor
fs
lahf
sub
ret
enter
into
ret
daa
add
fstps
in
mov
mov
div
sti
or
inc
push
loop
mov
testl
and
call
add
adc
into
adc
dec
sbb
xor
cmpsl
imul
mov
pop
sub
mov
push
es
inc
in
dec
fdivs
push
xchg
mov
push
cmpsb
mov
jnp
leave
sbb
dec
inc
inc
xor
fldenv
aad
jb
adc
das
out
inc
xchg
push
jle
loopne
mov
test
cmp
daa
lret
data16
xchg
out
repz
shrl
js
mov
aad
sbb
push
cmpsb
mov
mov
mov
test
dec
leave
jo
popf
cld
mov
sti
shll
xor
push
pop
mov
sbbb
mov
jne
imul
fmuls
add
lods
out
scas
aam
movsb
and
scas
sub
pop
js
xor
and
jmp
frstor
fcomi
out
rorl
leave
shrb
fwait
movsl
leave
xor
push
jnp
mov
scas
leave
xor
xor
mov
and
popa
cs
xchg
mov
shl
dec
dec
cmp
jmp
and
push
fdivrs
sbb
push
xor
or
or
mov
push
popa
xor
pop
push
leave
pusha
sub
ret
rol
jbe
mov
dec
iret
scas
popa
add
repnz
sarb
pop
pop
popf
xor
movsl
xchg
les
fadds
adc
xchg
mov
or
das
cld
sahf
js
inc
sbb
popa
cmp
sbb
cmpsb
pop
les
mov
push
leave
pop
out
loope
lods
mov
bnd
popf
cs
fbstp
loop
shl
aas
mov
jg
cmp
cmp
je
stc
andb
mov
sti
in
xchg
dec
mov
push
in
sbb
and
add
bound
cli
lret
or
adc
or
out
jae
mov
arpl
shll
jo
and
mov
add
pop
pop
cmp
jg
push
sbb
stos
lea
gs
fisubrs
and
pop
sti
jne
mov
xchg
inc
add
inc
sub
jbe
js
aaa
xor
inc
std
mov
mov
mov
lds
in
inc
mov
cmc
cs
push
and
fildll
mov
xchg
jp
rorb
jnp
and
jl
testl
push
jbe
and
pop
popa
stc
add
lea
shrb
dec
adc
repz
pop
fstl
das
pop
aaa
sbb
insb
pop
pop
inc
pop
mov
sbb
out
adc
cmp
mov
mov
jns
das
mov
dec
jae
dec
xor
push
lcall
sahf
pop
jae
out
mov
jno
push
inc
aas
and
fdivl
fstpt
jnp
pop
mov
cmp
xchg
cmp
ljmp
mov
enter
or
les
sub
mov
mov
mov
in
mov
fcoml
clc
fnstcw
test
pop
dec
jecxz
popa
clc
gs
pop
stc
repnz
cmp
pop
dec
cmp
jo
inc
loop
mov
aaa
outsl
xor
or
xor
add
aam
mov
adc
test
lret
mov
lcall
and
ret
filds
call
cmpsl
adc
xchg
es
fbstp
and
jl
cli
push
aaa
jo
sbb
addr16
sahf
cmp
mov
xor
cmp
aas
pop
or
xchg
out
push
fwait
pop
sbbb
xor
lret
mov
or
call
test
mov
pop
and
push
pushf
std
mov
imul
adc
std
mov
loop
xor
ja
mov
add
mov
sub
mov
inc
data16
out
jbe
int3
lret
mov
push
mov
mov
cmp
pop
cmp
sub
xchg
or
mov
bound
xchg
fisubs
add
sub
stos
and
pop
sub
mov
pushf
ds
xchg
andb
imul
je
test
outsb
mov
xor
jo
sahf
push
add
push
inc
adc
loop
mov
mov
add
hlt
cmp
and
push
mov
mov
sub
lods
fisttps
pop
negb
mov
push
mov
jns
fs
lcall
test
call
xor
jno
sbb
pop
push
scas
or
adc
negb
mov
mov
sbb
fstpt
fldenv
imul
jge
and
inc
test
pop
mov
mov
repnz
mov
in
ja
in
xor
mov
mov
fucom
fsubp
pusha
mov
pop
aad
push
dec
lret
pushf
push
or
daa
mov
pop
call
cltd
mov
fsubs
jg
in
lahf
or
xchg
adc
ss
shll
jmp
inc
cwtl
inc
sub
mov
dec
push
in
add
ficompl
ss
jae
jle
repnz
stos
andl
in
arpl
into
xchg
xchg
sub
shl
sub
loopne
mov
test
add
js
cmp
mov
push
jg
push
adc
lea
push
testb
cmp
push
cmp
cmpsb
pop
lea
xor
lock
ss
cwtl
shrl
stc
push
dec
jecxz
sbb
jno
lahf
push
rcrl
pop
jge
mov
ret
push
jecxz
add
xchg
mov
dec
aas
test
sbb
pusha
pop
sarb
shlb
insl
mov
sahf
dec
loop
inc
loop
scas
call
fcmovne
xor
push
mov
out
ret
and
imul
notl
jle
imul
ret
pop
popa
add
or
add
add
pop
and
mov
jg
out
jge
mov
aam
outsl
sbb
sarl
pop
insl
xchg
dec
dec
enter
adc
rclb
je
bound
scas
inc
push
lods
mov
bound
mov
aam
in
push
cmc
movsb
jae
jae
jl
add
cmp
and
sbb
cli
xchg
call
pop
jne
lds
rcrb
jo
ret
mov
repnz
popf
bound
pusha
pop
ret
jae
adc
xchg
xor
push
fwait
jb
add
es
adc
or
mov
mov
ljmp
inc
into
scas
sbb
xchg
or
scas
leave
leave
add
sarl
fsubl
sub
mov
dec
sub
jns
cld
outsb
push
inc
push
xor
jnp
lret
sbb
mov
loop
mov
in
mov
rcl
mov
sbb
je
jle
je
repz
pop
push
ljmp
mov
pop
and
adc
sahf
dec
test
stc
andb
cmp
bnd
ds
lahf
ss
loop
scas
test
pop
iret
insl
inc
push
lahf
mov
aas
testb
hlt
arpl
in
inc
jno
push
and
xchg
sub
nop
pop
sbb
push
xchg
fiadds
push
in
sbb
and
or
adc
xchg
pop
push
sbb
or
adc
mov
fisttpl
daa
xchg
nop
pop
jg
fldcw
daa
data16
add
jmp
jle
xchg
and
inc
loope
int
cmpsl
dec
mov
out
pop
mov
out
je
sbb
xor
mov
outsl
push
mov
jle
push
xchg
dec
in
stos
dec
mov
nop
and
add
jge
or
cmpsl
sbb
testl
mov
inc
sub
in
dec
int
lea
lret
out
sub
mov
cmpsb
sbb
in
xchg
push
cmpsl
sub
lds
mov
mov
mov
mov
inc
adc
movsb
std
fs
push
push
xchg
jnp
dec
and
push
xchg
lahf
out
test
mov
xchg
call
push
sbb
sub
mov
pop
dec
or
dec
sub
adc
sub
and
lds
mov
jp
test
xchg
divl
test
daa
sahf
adc
mov
repnz
into
hlt
add
mov
adc
mov
lahf
and
dec
addr16
in
enter
and
pop
xlat
cmp
repz
outsl
pushf
hlt
aam
imul
adc
arpl
inc
fadds
and
push
lds
mov
sub
add
rcrl
xor
in
addl
pop
hlt
pop
jns
sahf
sub
repz
sbb
sbb
sbb
les
push
ret
pop
js
mov
rcrl
pop
lret
cmpsb
lea
shr
adc
imul
stos
add
xor
pop
mov
insl
test
xorl
fwait
pop
cmpsb
repnz
push
dec
pop
xchg
insb
mov
push
repz
addr16
sub
in
sbb
sub
cmpsb
insb
sub
pop
repz
push
push
aas
in
mov
cli
push
test
push
aad
das
mov
movsb
loopne
pop
mov
ftst
add
sub
cmp
imul
inc
mov
out
mov
pop
out
mov
mov
gs
pop
arpl
or
loop
sub
mov
inc
jae
cltd
shrl
cmpb
jae
aaa
test
xchg
stc
lods
sub
loop
lods
adc
aas
aam
ret
hlt
aaa
pop
cltd
movsb
mov
push
inc
dec
dec
jb
mov
fsubl
xor
xchg
add
call
fcmovnb
xor
mov
leave
mov
sub
or
notb
cs
aas
add
xor
inc
call
fistl
enter
shll
sbb
jmp
mov
popa
xor
push
cmp
add
loope,pt
pop
pop
cltd
sub
cli
mov
popfw
xchg
pop
sub
mov
data16
push
int3
lret
sub
push
and
cld
adc
or
inc
mov
mov
out
fisubl
ret
popa
mov
insl
dec
adc
int3
neg
mov
adc
and
mov
adc
mov
cmp
dec
sbb
mov
sbb
bound
sbb
sbb
xor
xor
or
std
sbb
loop
cmpsb
sub
add
test
mov
xorb
mov
insl
fistpll
pusha
stos
jne
dec
fsubs
cltd
int3
xor
jmp
and
mov
fstpl
jae
rclb
pop
sub
mov
in
sub
xchg
out
jnp
dec
lods
mov
push
jno
shlb
movsb
and
jge
iret
sub
and
dec
sahf
call
fcompl
adc
pop
outsl
add
sahf
outsl
dec
pusha
loope
jo
fisubrs
push
orl
cmp
sti
arpl
cltd
aad
xchg
cs
sbb
or
lcall
dec
mov
repnz
push
sub
pop
adc
cmp
mov
mov
xchg
ret
jo
pushl
or
pop
or
cmc
std
push
dec
loope
pusha
ret
sub
or
jbe
inc
push
inc
xchg
mov
lahf
insb
mov
fsubrl
mov
xchg
jle
fisubrl
mov
or
lds
xchg
jne
xor
pop
push
push
push
into
shrb
mov
inc
imul
aad
pop
mov
sti
bsr
push
mov
fsubrl
loopne
es
iret
or
push
aam
into
stos
jmp
mov
sub
stos
or
mov
pop
add
cmp
pop
xor
inc
out
inc
pop
adc
jnp
arpl
pop
imul
cmc
mov
cltd
pop
pop
repnz
pop
frstpm(287
jns
pop
std
iret
enter
inc
call
cltd
test
or
push
lret
adc
inc
or
cs
push
add
xchg
das
out
lret
dec
sbb
mov
rcrb
mov
mov
jmp
cmp
jo
pop
push
rcr
sub
inc
gs
mov
cltd
cmc
xchg
xchg
and
pop
cld
xchg
enter
sbb
push
fidivs
lds
jge
or
loopne
insb
adc
stc
push
mov
and
inc
andb
mov
xchg
mov
movsl
icebp
inc
call
xchg
sub
cmc
mov
comiss
inc
outsl
ljmp
mov
pushf
lahf
pop
stos
sbb
and
sbb
xor
or
push
add
mov
sahf
mov
push
and
mov
push
aas
loop
leave
adc
mov
jae
sub
lcall
push
lea
add
sub
push
icebp
ja
arpl
mov
shll
and
lds
popa
jg
push
mov
mov
push
test
cwtl
leavew
ss
mov
jecxz
lock
mov
xor
adc
pushf
jne
pop
out
pop
stos
pushf
pop
adc
shrl
clc
jnp
lcall
data16
cld
mov
aas
sbb
gs
xor
cmp
cld
lret
cld
pop
sub
jecxz
in
rorl
sti
leave
int3
jg
pop
cltd
and
fcomip
dec
push
or
scas
mov
loopne
lret
and
jl
cmpsb
jp
cmpb
les
and
ret
push
hlt
loopne
push
cmp
push
divb
loopne
test
push
mov
push
fdivl
das
lcall
push
cmp
push
scas
pop
in
sbb
iret
lods
push
bound
lahf
pop
in
lret
bound
inc
jmp
jp
fisttpll
lock
iret
mov
inc
pop
adc
pusha
mov
or
pop
jae
mov
cmpsl
out
frstor
cmp
xor
fcoml
arpl
icebp
mov
or
aam
nop
cld
andb
dec
arpl
inc
das
xchg
bound
std
stos
or
push
xchg
fists
xor
mov
je
jae
subl
insl
loopne
dec
pop
mov
call
mov
inc
inc
jns
ja
dec
in
xor
test
out
inc
lahf
mov
popa
in
pop
scas
mov
pusha
xchg
fdivl
and
mov
push
push
loop
lods
inc
in
dec
xchg
push
jle
push
fnsave
mov
or
mov
movsb
mov
jne
jae
xchg
mov
mov
add
into
add
push
push
and
xor
mov
sbb
inc
fcoms
lahf
mov
push
repz
mov
into
push
lret
je
xor
dec
in
add
jno
aas
adc
adc
xchg
xor
insl
pop
mov
pop
add
mov
in
fld
push
lret
test
cmp
push
jmp
dec
inc
inc
fdivl
pop
pop
lods
mov
sub
or
cmpsb
pop
testb
push
mov
push
cs
nop
and
mov
inc
popa
push
aam
or
test
mov
jnp
mov
loop
add
sti
xchg
rorl
push
mov
pop
popl
test
insl
mov
or
mov
mov
lds
ds
bound
aam
and
out
fsubrs
pop
ret
jbe
dec
add
flds
xchg
je
pushf
cmp
pop
mov
test
es
inc
test
cmp
cmpsb
mov
hlt
into
out
movsb
add
sub
pop
mov
lahf
test
xlat
cmpsl
jae
sub
or
fnsave
iret
dec
push
popf
stc
inc
xchg
xor
xchg
lea
notb
cmp
inc
fdivrs
ljmp
fdivl
mov
and
fstps
fldcw
lods
and
add
jbe
clc
popf
daa
and
jb
leave
in
stos
mov
lods
add
enter
les
ret
dec
shrl
dec
inc
dec
xor
jns
fwait
cmp
fisubl
xchg
mov
fsts
cmp
into
loop
dec
mov
pop
adc
adc
pop
jae
push
sub
jno
sub
sbb
lods
mov
pop
xor
ret
negb
or
add
push
xor
xor
jg
lret
mov
orl
and
jmp
sbb
les
xor
adc
mov
sbb
btc
stos
cmp
adc
mov
mov
sbb
rorb
test
and
pushf
xchg
mov
inc
xchg
scas
xchg
mov
imul
outsl
loop
mov
insl
aaa
and
rcrl
or
cmp
rep
mov
adc
push
inc
mov
clc
les
sub
imul
cmp
xor
hlt
addr16
push
cltd
std
push
push
pop
loope
jno
cmp
out
and
sbb
xor
dec
decl
push
in
and
add
jp
xor
push
sub
or
cmp
add
das
fcmovbe
inc
ja
xchg
test
dec
push
jmp
imul
adc
push
arpl
addr16
and
inc
push
xor
mov
stos
mov
dec
stos
sbb
pushf
adc
sti
aaa
outsb
sbb
loop
pop
mov
mov
lock
repnz
or
xchg
imul
clc
vucomiss
xor
popa
xchg
or
push
jae
jmp
repnz
ret
add
iret
dec
mov
add
and
push
adc
lods
and
jg
adc
fildll
sbb
jb
daa
outsb
mov
adc
shll
pop
ret
lods
xor
dec
popa
stos
jle
xor
mov
inc
daa
aad
orb
xchg
adc
stc
or
cmp
or
mov
sti
mov
sbb
mov
xor
int3
jle
mov
and
jne
rorl
jp
cmp
je
sbb
push
jae
pop
pop
addr16
mov
je
popa
clc
fs
xor
pushf
pop
xor
jae
sarl
pop
incb
scas
push
je
xor
mov
jle
and
pop
cli
or
sbb
xchg
xlat
rorl
in
bound
xchg
sub
xchg
repz
sub
std
inc
xchg
xchg
ja
add
push
stos
lods
sub
int
sub
js
adc
imul
pop
js
adc
filds
in
xchg
sbb
push
mov
das
movb
loop,pn
int
cs
xor
call
sbb
imul
cmp
addl
xor
lea
test
sahf
inc
jg
jne
mov
xor
cli
jo
in
imull
in
icebp
inc
mov
mov
pushf
inc
push
pushf
xor
cwtl
push
das
addr16
and
mov
mov
rol
fs
popa
test
aaa
fcmove
pop
mov
cmp
std
lock
inc
loopne
lret
lret
push
push
aaa
popa
xchg
sub
subb
mov
and
mov
xchg
jmp
cmpsb
cmp
push
loopne
pop
adc
push
sub
adcl
imul
shlb
fcmovbe
shl
mov
adc
ret
dec
sub
push
push
and
inc
repnz
inc
dec
imul
insb
int
cmp
mov
repz
dec
dec
inc
test
test
lret
in
sti
jge
mov
adc
scas
sti
scas
xchg
mov
xchg
pop
hlt
mov
push
inc
dec
rolb
dec
pop
arpl
insl
es
nop
fimuls
shll
loope
or
and
mov
test
rcl
mov
fbstp
mov
and
shl
inc
hlt
lock
lret
lcall
add
mov
stc
jg
loop
mov
inc
cmp
add
repnz
dec
es
and
mov
clc
sub
rcl
xor
scas
insl
push
fnsave
cmp
mov
xor
dec
rolb
paddsb
lods
outsl
push
push
or
and
andl
or
xchg
insb
jo
out
cmp
imul
jae
daa
repz
lock
out
cld
xchg
sub
dec
stos
inc
inc
test
jge
arpl
pusha
pop
xlat
sbb
pop
cli
out
insb
out
inc
mov
push
call
cmp
shl
pop
inc
cmpsl
je
inc
stos
sub
sbb
sbb
cltd
xor
and
and
cmpsb
dec
loope
hlt
push
jmp
dec
xchg
sbb
das
mov
or
movsb
dec
shlb
mov
pop
adc
and
inc
cmp
mov
push
adc
cmp
xor
call
notb
mov
push
mov
cmp
mov
mov
pop
call
nop
pop
mov
add
lds
iret
xor
test
testb
bound
lock
scas
jno
push
mov
push
xchg
mov
cmp
fmul
push
pop
mov
fnsave
pop
repnz
sub
adc
test
stos
dec
mov
leave
mov
bound
aaa
fs
pop
pop
xlat
sub
xor
leave
movsl
mov
jmp
outsl
pop
adc
scas
stc
xor
push
cltd
orl
scas
mov
fldl
inc
test
out
ret
adc
jns
mov
lret
and
xor
jecxz
add
xor
and
aad
aaa
or
stos
and
sbb
mov
push
push
ret
cwtl
jae
jle
movsl
jmp
and
or
imulb
jbe
push
out
mov
jo
fadds
push
sbb
js
mov
mov
mov
inc
and
cmpsl
andb
cwtl
mov
fbld
shrl
hlt
ds
cmp
cmc
in
mov
push
push
jne
xchg
mov
add
insb
fstsw
mov
xor
test
or
sahf
add
cmp
pop
mov
dec
ss
sbb
imul
mov
leave
pop
and
and
adc
xchg
cmpsl
sbb
xlat
inc
pusha
sarb
mov
arpl
inc
ret
jno
push
xor
cmc
in
cmp
cmc
mov
outsb
sbb
ja
lret
cs
cli
add
inc
ret
movsl
sar
mov
cs
addr16
dec
aam
inc
push
adc
sbb
mov
add
mov
pop
lock
das
cmpsb
ja
cwtl
push
cld
leave
xor
sub
sub
rcrl
xchg
int
cltd
sub
jo
cs
jge
jbe
loope
shll
push
scas
pop
dec
imul
arpl
cmpsb
mov
pop
imul
call
sbbl
les
cld
outsl
outsb
cwtl
mov
jl
inc
jns
paddsb
fsubr
call
in
das
push
sti
loope
sbb
xchg
frstor
repnz
repz
das
cmp
scas
xchg
mov
push
xlat
mov
and
sub
cmp
iret
notl
cmpsb
dec
call
in
mov
cs
lods
repz
mov
cmpsl
test
repnz
adc
rorb
push
in
nop
sub
pop
ljmp
iret
inc
movsl
arpl
mov
lret
inc
jle
adc
mov
pop
inc
push
mull
pushf
f2xm1
lret
mov
push
outsb
lret
xchg
out
bound
inc
std
dec
std
aam
push
pop
and
mov
xchg
mov
xchg
mov
flds
sub
xchg
adc
std
inc
fldt
test
clc
push
jo
adcl
adc
sbb
hlt
jo
aaa
ss
push
push
xchg
inc
or
adcb
inc
adc
or
push
push
xor
sub
jle
xchg
in
js
xchg
popa
fstpl
icebp
mov
ss
jp
dec
xor
xchg
jle
dec
rorl
sub
out
xor
nop
jnp
mov
sbb
cmpsb
lret
xchg
rclb
lcall
mov
mov
add
lods
aas
and
mov
xchg
loop
fdivrs
test
sti
fwait
test
mov
xchg
jecxz
int
lock
into
fidivl
ret
iret
mov
mov
mov
lea
push
jmp
xchg
out
cmp
push
jle
pop
test
cmp
cmpsl
xor
xor
iret
jecxz
sub
iret
pop
lock
pop
xlat
dec
and
sub
push
stc
pop
and
popa
jp
mov
fdivr
insl
call
int
or
xchg
ss
add
push
pusha
cld
inc
mov
push
cltd
xor
gs
stos
mov
sub
loop
jge
pop
sti
arpl
push
imul
inc
cwtl
adc
jl
test
adc
adc
cltd
add
sbb
add
mov
negl
fnstsw
pop
pop
cmp
sahf
aas
adc
dec
dec
es
fstps
loop
lock
or
adc
add
adc
dec
pushf
outsb
insl
inc
gs
and
pop
ljmp
jno
xchg
loopne
leave
push
mov
dec
dec
pusha
mov
cmp
and
push
sbb
jg
aam
xchg
nop
mov
ljmp
sub
pop
mov
mov
jecxz
ret
push
cmp
pusha
push
aam
ffreep
shrb
imul
sub
aad
nop
notl
sub
inc
mov
xchg
lock
daa
pop
fisubl
push
in
xchg
adc
add
inc
xor
lods
leave
or
push
cmp
je
xor
mov
outsb
pop
xor
and
and
es
dec
cmp
sub
lods
push
cmpsl
sbb
dec
jecxz
in
icebp
insb
ficompl
add
cwtl
stc
mov
shll
push
mov
int3
jno
ret
jae
mov
cmp
fld
in
adc
jge
daa
popa
xor
mov
push
jb
mov
jecxz
sbb
iret
mov
mov
stc
and
movsl
or
lods
jmp
jnp
xchg
xor
sbb
movb
xlat
sbb
out
xor
adc
cltd
addl
sahf
and
into
stc
popf
push
add
xor
mov
fs
cmp
leave
xor
fdivl
xor
pop
out
and
leave
fidivl
lret
mov
stos
jbe
fwait
in
inc
cwtl
out
dec
mov
push
cmp
rcll
jo
repnz
pop
fsubl
push
sbb
or
movsl
sub
jge
mov
push
and
into
and
jg
adc
and
push
push
ljmp
test
sbb
cmpsl
push
cwtl
fwait
xchg
stos
sub
cltd
out
lret
mov
cmpsb
les
sbb
ds
inc
or
decl
or
add
loop
mov
in
xchg
mov
pop
jno
fcomps
adc
push
ljmp
push
cld
xorl
fwait
add
out
mov
dec
imul
sbb
divb
repz
inc
fmull
and
fwait
fs
jne
dec
repz
push
mov
ret
bnd
ret
sub
loopne
push
loopne
cmp
xorl
push
sbb
xchg
and
and
add
cmpsb
stc
test
xchg
push
lods
enter
jp
lods
mov
and
notl
mov
ja
aad
xorb
test
dec
pusha
andb
lret
push
icebp
xchg
cmpsb
mov
cmpsl
mov
cld
mov
mov
mov
dec
add
hlt
cwtl
jg
mov
sbb
daa
call
lds
mov
shll
adc
and
in
lods
dec
cli
roll
rclb
sbb
inc
es
add
mov
out
jb
and
cmc
sbbl
addb
xchg
fidivrs
mov
int
ljmp
dec
and
inc
mov
xchg
or
push
insb
aam
mov
movsl
fnsave
push
or
sti
jbe
fs
cmpsb
xchg
idiv
adcb
lahf
jle
adc
jne
cwtl
xor
xor
cli
adc
jg
int3
pop
clc
push
adc
lcall
int3
cld
sbb
lds
lods
pop
arpl
cld
xchg
sbb
lds
les
lea
xor
test
insl
adc
push
add
je
push
iret
das
jp
add
mov
mov
jle
xor
adc
lods
xor
addl
cmpsl
out
mov
adc
xchg
pop
ljmp
xor
dec
lods
pop
jo
pop
pusha
or
inc
jl
cmpps
int
and
mov
aaa
mov
jle
push
mov
add
pop
nop
xchg
out
xor
push
xchg
pop
jmp
ficoml
sub
outsb
add
out
iret
adc
movsb
sub
mov
stc
repnz
into
lock
jecxz
leave
push
sbb
jecxz
mov
sti
cmpsl
dec
in
outsl
ret
xchg
daa
fsts
test
out
frstor
cmp
rcrl
cltd
scas
daa
cwtl
dec
std
dec
and
xchg
mov
and
pop
lock
or
pop
add
repnz
dec
mov
inc
xchg
jae
cvtps2pi
pop
push
adc
pop
dec
mov
push
xchg
jb
or
pop
repz
stos
in
loop
push
in
pop
je
jb
jae,pn
test
dec
cmc
das
mov
adc
add
push
inc
xchg
pop
repnz
pop
fs
xchg
sbb
lahf
xchg
push
pop
xor
and
jns
xchg
sub
pop
mov
dec
shr
lods
cmpsl
fnsave
fisubrl
stc
sti
inc
ret
xchg
lahf
xlat
inc
fisttpl
bound
pop
xchg
ljmp
es
stos
cmpb
push
jl
xchg
mov
mov
jecxz
or
push
es
dec
rcll
jl
dec
jmp
xchg
inc
cmp
pusha
lahf
xor
pop
or
xor
inc
adc
rcrb
xchg
dec
es
pop
lods
xor
es
mov
pop
mov
mov
jle
pop
cltd
nop
imul
cmpsl
pop
jae
sbb
nop
lods
and
sbb
outsl
lahf
mov
int
pop
mov
int3
jo
fistpll
into
xor
mov
test
cmp
andl
rcrl
mov
pop
cmp
loopne
inc
insl
lahf
add
xor
push
cwtl
pop
cmpsl
rcrl
jp
out
sub
mov
inc
js
push
xor
jge
xchg
outsb
xchg
notl
in
pop
push
loop
ljmp
xor
inc
pop
push
cltd
xor
fnsave
jg
inc
pop
cld
push
les
test
imul
test
leave
fnstcw
leave
int3
or
mov
sti
cmp
out
pop
subb
sub
movsl
mov
cli
sti
mov
xchg
jl
and
inc
xchg
push
sti
cmpsl
jns
push
or
add
loopne
and
shrd
push
aaa
pop
repnz
bound
fstps
cmp
jb
in
xor
fnsave
shrb
ljmp
cwtl
imul
je
cmpsl
jne
push
hlt
test
sarb
ret
and
push
mov
lahf
or
sub
sbb
inc
popf
dec
aad
cmp
lcall
imul
dec
stos
test
cmpsb
jns
jg
imul
push
and
test
cltd
dec
rclb
lods
jge
ficoms
mov
mov
cmpsb
jns
sbb
mov
outsl
int3
sbb
ss
xor
bound
das
jns
jmp
adc
idivl
insl
test
dec
push
push
nop
or
imul
and
jl
mov
imull
adcb
out
and
xchg
fs
sbb
pop
outsb
sarl
pop
dec
movsl
dec
dec
lods
xchg
sbb
je
outsb
xor
xor
mov
jae
mov
orl
cli
xchg
cmp
xorb
sbb
mov
and
mov
aas
leave
mov
mov
xlat
sub
nop
inc
sub
clc
and
dec
int3
addr16
mov
or
ja
ds
inc
inc
pop
es
ljmp
pusha
jmp
mov
in
out
js
int3
subl
push
lock
mov
or
aam
mov
push
dec
cld
push
dec
js
idivl
aad
les
addr16
dec
test
mov
call
and
shrl
pop
xlat
push
fimuls
addr16
loope
jg
daa
data16
decb
mov
cwtl
pop
sub
dec
mov
sbb
dec
int3
mov
push
fildll
es
and
test
sub
xchg
fbstp
push
jae
fwait
in
fildl
je
stc
ds
lock
orb
jno
pop
js
xor
push
cs
fs
adc
das
out
cmpsl
inc
int3
arpl
shlb
push
jne
mov
test
mov
inc
scas
lock
adc
add
xor
js
mov
ja
sbb
loope
test
push
lea
push
cmpl
idiv
jge
and
sbb
push
sahf
mov
sbb
or
or
daa
jle
jge
mov
mov
jecxz
testl
frstor
xchg
mov
rclb
ja
jge
pop
adc
jne
shrl
push
sbbb
stos
in
and
cmp
movsb
outsb
icebp
mov
sti
mov
sub
jnp
test
inc
sbb
or
rorb
push
adc
mov
cmp
adc
mov
mov
dec
xlat
icebp
and
mov
xchg
push
jg
cli
iret
xchg
ret
cmc
sarb
movsb
jecxz
mov
cmp
pop
stos
rorl
sbb
bnd
mov
push
push
pop
imul
addb
cld
pop
adc
mov
notl
cs
cli
dec
push
repz
adc
or
or
shl
jp
inc
sub
jecxz
add
mov
dec
mov
bound
mov
mov
or
cmpsl
cltd
loope
xchg
jecxz
push
push
ret
iret
popf
or
and
ret
cmpsl
movsl
dec
or
inc
push
cmp
insb
cmc
xchg
cmp
loop
popf
mov
lret
bound
loope
adcl
daa
sub
mov
pop
decl
sti
addb
inc
fildll
mov
push
push
sbb
push
fbstp
jg,pn
mov
aad
push
jne
adc
inc
in
ss
nop
imul
outsb
pop
mov
xchg
sub
call
sarl
push
testb
push
xor
loop
mov
xor
cmp
lds
hlt
out
sub
dec
jo
cld
dec
push
xor
fcmovu
aad
movsl
cld
shl
data16
jnp
jp
sub
ret
sbb
test
or
outsb
or
sti
xlat
rclb
mov
inc
imul
lock
or
push
loope
in
popa
cli
iret
loop
sub
mov
cli
mov
jl
fsubrl
jns
pop
xor
fwait
and
into
sbb
call
sub
add
rcrl
xor
in
dec
sti
inc
sbb
scas
idivb
adc
or
cmp
jb
pop
mov
insl
xchg
test
mov
adc
sbb
xor
xchg
jecxz
testb
and
in
add
fcom
adc
shl
xor
scas
inc
shrl
adc
jbe
push
jbe
insl
and
adc
mov
add
popf
aam
test
cmp
and
jge
jle
inc
pop
mov
iret
sahf
pop
fisttpll
ljmp
xor
mov
push
pop
lods
cmp
lds
test
cs
mov
jnp
cs
sbb
imul
sub
ljmp
jle,pn
xchg
jns
sbb
mov
clc
ljmp
das
xor
inc
pop
mov
dec
mov
mov
popa
mov
or
cs
jg
push
add
popf
dec
xchg
out
stc
mov
and
sbb
rorb
iret
es
mov
lods
jmp
xor
ret
cmc
popf
inc
push
push
push
sub
xor
xchg
or
sbb
andl
cmc
jmp
into
and
and
cmp
cmp
dec
jl
sbb
popf
aam
dec
xchg
xor
jns
dec
cmpb
movsb
mov
lahf
loopne
xchg
adc
and
ljmp
and
bound
jmp
sbb
xorl
cmp
dec
mov
std
les
in
test
push
mov
cli
loopne
lock
push
mov
jecxz
fisubrl
cmp
add
in
cmpsl
mov
jae
sub
into
lret
notl
add
xchg
scas
loop
mov
ret
jecxz
add
call
push
xor
icebp
mov
add
adc
pop
sbb
into
xchg
cmp
xchg
negb
jnp
push
cmpsb
enter
int3
cld
aam
and
xchg
enter
jo
push
sub
in
pusha
fisttpll
fs
add
and
shll
mov
mov
mov
incb
add
xchg
call
adc
stos
ljmp
sbb
enter
xchg
or
lods
stos
shlb
pusha
notl
sarl
mov
hlt
or
adc
nop
lahf
div
mov
add
ds
pushf
rcr
outsl
pop
inc
mov
aam
repnz
repz
in
mov
das
mov
filds
gs
mov
jecxz
sbb
cmpsl
gs
scas
cmp
inc
mov
jbe
loop
jl
pushf
lods
nop
inc
icebp
or
or
dec
aad
pop
imul
out
mov
das
push
mov
nop
dec
mov
sar
or
sub
out
adc
inc
cmp
adc
aad
xlat
insb
dec
xchg
mov
cmp
loop
jl
dec
idivl
xlat
fadd
data16
fwait
das
lock
pop
ficoml
or
inc
inc
xor
insl
into
adcl
or
dec
jle
cltd
cmp
lds
add
addr16
lcall
mov
repnz
cld
cs
out
lret
add
jno
das
ret
jp
or
mull
insb
and
push
mov
inc
mull
in
hlt
les
repz
cmp
jecxz
xchg
pop
sbb
dec
jg
loopne
ss
sub
insl
fstps
push
nopl
test
in
jbe
pslld
into
rcll
loop
orl
jp
xchg
jo
sbb
in
lret
nop
adc
xor
sti
sbb
sbb
mov
dec
add
add
add
adc
retw
movsb
adc
xchg
popa
pop
call
adcw
mov
mov
lea
sbb
out
cmp
into
push
and
sub
pushf
cmc
sbb
dec
push
mov
pusha
pop
mov
call
sti
iret
and
popa
xchg
mov
aam
mov
ja
xchg
push
ljmp
insl
add
jecxz
popf
sar
and
imul
or
sub
daa
mov
dec
push
in
adc
shll
jmp
adcb
movsb
mov
inc
fcmovu
outsl
or
mov
fists
ja
inc
ror
stos
jno
mov
lea
pusha
push
push
push
out
mov
jecxz
mov
rcrl
enter
cli
imul
jmp
hlt
adc
and
push
mov
cmc
mov
lret
cmpsl
jl
fadds
jbe
int
sbb
test
scas
clc
test
mov
inc
fldenv
jmp
mov
mov
inc
mov
enter
mov
dec
mov
nop
pop
inc
out
cmpsb
loope
push
push
xor
fisubl
or
jae
push
rcrl
aam
inc
out
inc
cli
test
pop
ds
mov
sbb
bound
adc
pushf
les
xor
rcll
cmpb
cli
xchg
sbbl
xchg
pop
cmp
in
add
ds
arpl
adc
call
dec
mov
adc
mov
mov
push
push
xchg
popl
cmpsb
stos
mov
jg
cmp
arpl
ret
cmp
xor
cmp
push
sbb
jo
ret
in
xor
mov
push
in
ljmp
and
dec
pop
ret
call
mov
call
mov
pop
jb
adc
mov
pop
loope
push
lret
shll
insl
cmpsb
push
jmp
pop
mov
adc
stos
fstps
data16
jns
or
and
push
insl
cmp
push
inc
in
popa
mov
xchg
cmp
cmp
in
push
data16
into
or
jbe
lods
dec
add
inc
xchg
mov
test
movups
lds
in
sub
das
inc
je
ds
push
lods
or
jle
imul
scas
das
popf
mov
cmpsl
add
sbb
clc
es
lcall
dec
pop
rol
push
add
dec
hlt
nop
mov
ret
insb
mov
test
dec
inc
cmp
or
cltd
dec
cmp
cmpb
adc
insb
divb
imul
inc
push
xchg
ljmp
mov
popa
push
pop
pop
mov
rcl
iret
adc
pop
loope
aam
sub
pop
xchg
cli
mov
inc
jno
js
int3
sbb
mov
ffreep
adc
jg
pop
sbb
fdivp
push
xchg
out
sub
xor
stos
adc
adc
aaa
pop
xchg
aas
add
push
mov
test
jecxz
inc
rcrb
dec
incb
xor
addr16
pop
and
shlb
sbb
inc
pusha
mov
jbe
test
shrl
push
js
test
fwait
ret
repz
sbb
nop
nop
jns
or
cmp
test
mov
test
dec
stos
inc
adc
daa
add
push
clc
jno
bound
int
mov
cltd
divl
adc
cmp
scas
mov
iret
loope
aad
gs
xchg
scas
inc
leave
mov
dec
fcomi
cmp
push
aaa
mov
lcall
push
out
push
lcall
lods
scas
movsl
fcomps
mov
inc
aam
inc
jecxz
into
jmp
push
mov
outsl
mov
push
xor
jb
xchg
scas
lods
pop
push
ljmp
lock
jnp
or
xchg
out
fwait
push
stos
pop
mov
and
mov
jl
xchg
mov
ret
cmc
inc
push
popa
repz
jp
into
shlb
mov
pop
mov
inc
out
pmaxub
and
loope
xchg
dec
icebp
adc
cmp
in
add
xchg
inc
mov
push
repnz
fwait
ss
mov
inc
pop
in
mov
mov
pop
adc
das
cli
sbb
insl
std
xchg
xor
sbb
xor
xchg
push
call
xchg
cmp
inc
imull
out
inc
sbb
pop
and
dec
mov
stc
call
clc
push
dec
or
test
push
fsubl
push
pop
icebp
mov
fidivs
pop
int
aas
in
and
mov
push
mov
jno
xor
movsl
cs
addr16
test
jne
add
ds
sub
pop
aad
cli
lret
mov
jl
mov
mov
cmp
xor
out
or
jbe
and
xchg
call
sahf
jnp
add
mov
sbbb
int3
les
push
xchg
repnz
leave
mov
stc
push
js
shll
inc
stos
cli
mov
sub
sub
mov
cmp
sti
mov
cmc
sbb
jo
loopne
mov
mov
mov
rorb
stos
push
ljmp
rcrb
das
call
imul
cmp
fwait
test
xchg
add
pop
mov
mov
cmp
sbb
jnp
jl
mov
and
test
idivb
push
xchg
fcmovu
mov
test
hlt
inc
add
call
jecxz
mov
mov
sbb
dec
pop
mov
sti
jg
shlb
mov
shrb
lds
aad
xchg
iret
sub
push
mov
xor
xor
stos
push
ljmp
lock
mov
or
xchg
push
push
cmp
xchg
sbb
sbb
sbbb
xor
bound
mov
push
movsb
popa
faddl
cmc
pop
imul
mov
sub
pop
xchg
mov
dec
loope
into
xor
das
push
xlat
mov
pop
xchg
jl
dec
xor
lods
or
push
push
mov
xchg
pop
ret
sbbl
add
call
sti
popf
sub
or
aas
mov
push
or
push
xor
sbb
ja
lods
jmp
js
and
mov
rorl
sub
enter
dec
pusha
lret
insb
lret
fnsave
sub
mov
jb
andb
jae
daa
fidivrs
inc
lds
dec
add
fiadds
cmpsl
iret
push
add
ret
push
lret
and
gs
sub
jbe
addr16
lret
xchg
pop
dec
leave
ss
jnp
mov
cs
int
inc
out
mov
jl
fsubrs
push
push
nop
or
inc
adc
data16
or
call
push
pusha
cmp
inc
inc
push
icebp
push
popa
add
adc
leave
push
subb
add
jo
imul
push
adc
pop
in
out
in
cs
lea
or
mov
or
lea
stos
in
adc
leave
mov
mov
loopne
xchg
shr
aam
mov
subl
cs
pop
fists
lods
cmp
or
arpl
push
jbe
repnz
jl
inc
pop
shlb
movupd
mov
push
and
mov
enter
lret
sub
aad
mov
jge
push
imul
in
pop
xchg
add
nop
mov
lods
push
adcl
stc
dec
shll
fwait
in
test
sub
inc
out
pusha
std
inc
mov
mov
outsl
shrb
rol
loop
xor
gs
inc
cmp
push
shrl
ja
adc
sub
mov
int
cmp
lahf
mov
das
inc
mov
push
shlb
ror
cmp
jnp
outsl
lods
and
lahf
inc
lds
mov
dec
cmp
aas
push
mov
dec
sarl
jle
add
lods
stos
sti
or
sub
push
push
sub
jnp
outsb
ds
mov
insb
movsb
sahf
ret
ss
mov
ja
imul
mov
std
fsubrs
or
jle
jnp
lahf
stc
jle
dec
daa
and
xchg
mov
daa
jb
pop
sbb
and
call
or
mov
xchg
mov
notl
inc
add
loopne
jmp
pushf
cld
andb
cwtl
add
mull
movsb
cwtl
lea
mov
ja
ret
push
mov
add
sbbl
jp
sti
inc
pop
mov
fdivl
repz
out
jp
out
sub
das
and
inc
mov
js
imul
sub
mov
jg
add
xchg
pop
sti
pop
xchg
or
je
cltd
addb
ss
add
inc
sbb
maskmovq
negl
xor
loopne
mov
sbb
dec
mov
fcmovnbe
xchg
loope
mov
inc
mov
xlat
cmp
int3
xchg
mov
sbb
shlb
cmp
scas
scas
setp
mov
mov
jmp
or
aam
and
loope
or
and
and
test
and
inc
sub
lcall
inc
sbb
fisubl
cmpb
and
test
xor
or
mov
aas
jl
scas
sub
dec
inc
out
inc
fsts
push
dec
pop
mov
cmp
push
sub
xorl
rcl
icebp
insl
jle
sub
mov
into
add
pop
jge
add
push
das
sbb
leave
dec
dec
daa
sub
pop
mov
shlb
mov
pushf
in
mov
inc
cs
test
jo
and
push
adcl
mov
in
flds
icebp
xor
or
mov
pop
push
clc
and
andb
inc
mov
clc
xchg
pushl
nop
adc
and
mov
stos
mov
dec
inc
inc
push
std
cmp
cmpsl
jmp
pusha
in
add
insl
jmp
push
add
and
imul
or
ja
pop
mulb
or
loop
scas
testb
inc
nop
daa
je
and
stc
popa
and
sahf
dec
add
roll
or
movsl
in
mov
xchg
popa
lock
ja
insb
sbb
pop
dec
lea
lret
adc
and
pop
sarl
mov
inc
lcall
inc
adc
scas
dec
dec
ljmp
mov
pop
adc
mov
stc
into
mov
mov
aaa
cli
xor
sbbb
mov
test
and
inc
bound
and
je
push
mov
ret
fidivrs
daa
loop
in
rcrl
sbb
lahf
fistpl
sub
loopne
mov
addr16
push
cwtl
dec
mov
in
insl
and
sbb
push
jnp
dec
dec
pop
dec
int
mov
out
or
stos
and
movsb
mov
iret
sbb
or
cmpsl
dec
pop
rcrl
cld
jnp
stos
and
or
cmp
ja
negb
loop
sbb
sbb
aas
cmpsl
lea
add
sbb
mov
pop
or
ljmp
std
insb
jle
mov
sbb
push
push
dec
gs
push
popf
aaa
jl
nop
mov
xchg
push
mov
add
jb
mov
add
and
pushf
repz
xor
fidivs
mov
push
mov
scas
sub
or
mov
addr16
addr16
leave
cmpsb
stos
cli
out
pop
dec
and
jnp
xor
sub
divb
push
nop
imul
pop
mov
and
leave
xor
fisubl
xorl
xchg
cmp
or
or
push
pop
sbb
xchg
addr16
mov
xchg
pop
notl
loope
lds
mov
notb
popa
jns
mov
or
xor
ret
in
cwtl
stc
lods
daa
mov
inc
mov
out
fmull
and
mov
cs
and
mov
push
inc
leave
hlt
push
out
xchg
inc
pop
dec
insb
outsb
sub
inc
mov
pop
pop
addr16
test
xchg
adc
clc
pusha
imul
jecxz
outsb
sbb
pusha
lahf
push
mov
xlat
mov
shlb
int3
addr16
fstps
push
inc
lods
fcomi
or
jnp
cs
repz
repnz
pop
xchg
sub
je
pop
dec
pop
xlat
add
adc
adc
das
insb
aas
cmpl
int3
mov
cmc
addr16
stos
cmpsb
lods
jnp
adc
insl
sbb
inc
in
push
jge
or
cmpsb
cmp
iret
pop
popf
int3
cmp
fsubrl
pop
push
popf
lea
loopne
sbbb
cli
xorl
loopne
inc
add
jl
xchg
lods
ret
xchg
enter
jb
ds
push
mov
pop
sub
imul
popf
adc
in
or
daa
xor
data16
aam
push
xchg
or
pop
outsb
mov
sarl
inc
mov
sbb
ret
decb
imul
push
movsb
mov
scas
lahf
adc
daa
cmp
es
push
dec
mov
mov
call
cmp
jl
xor
push
imul
mov
jno
sub
icebp
les
or
mov
mov
aaa
lret
adcl
cmp
adc
mov
jecxz
pop
xor
fs
and
hlt
cmp
xchg
imul
jmp
aad
imul
cs
int3
xchg
js
xchg
test
test
inc
je
outsb
pop
push
jo
cmp
in
ret
push
and
fucom
stc
decb
or
lea
jp
mov
gs
mov
jg
scas
data16
stos
inc
push
add
add
ljmp
call
je
dec
adcb
cli
dec
lods
xor
mov
jg
ret
rcl
fdivrl
outsl
xor
repz
push
mov
mov
outsb
std
mov
ss
and
pop
fistps
movsb
jbe
daa
add
pop
in
mov
push
push
subl
in
cltd
mov
dec
mov
in
jl
imul
sbb
mov
repz
adc
cmp
cwtl
fcoml
or
ret
fcmovu
loopne
cmp
stos
adc
mov
mov
rolb
push
mov
repnz
and
cld
add
stos
mov
jl
xor
mov
into
and
sub
ljmp
sbbb
xchg
adc
or
scas
sub
inc
mov
mov
comiss
ret
fwait
movsl
sub
pop
jle
adc
call
lcall
shll
pop
rolb
in
push
and
cmp
jge
pop
dec
aad
les
mov
inc
aaa
push
in
test
loope
int3
lret
shr
nop
pop
inc
cmp
lods
aas
xchg
jnp
lret
fwait
cmc
push
xor
xchg
push
daa
mov
jecxz
push
jns
xor
in
or
jnp
xchg
adc
mov
lcall
in
out
clc
shr
aad
loop
mov
dec
mov
out
ja
mov
outsl
std
xchg
xchg
adc
jl
or
jmp
test
insl
jge,pt
insb
inc
lock
sbb
dec
ret
jae
jmp
in
adc
mov
scas
xor
loope
adc
ja
mov
out
pushf
adc
jns
in
test
mov
out
xchg
mov
fildll
adc
fcompl
test
test
and
outsb
repz
icebp
mov
mov
or
insb
daa
fsubrp
negl
shrb
jp
repz
sbb
sbb
mov
xor
jns
push
in
imul
dec
push
jmp
ret
jge
imull
lods
rcrl
adc
mov
sbbb
mov
je
pop
cmpsb
push
lods
mov
ljmp
cmc
lahf
outsb
sbb
lock
out
int3
mov
mov
sbb
dec
mov
push
shrb
adc
dec
stc
push
sbb
dec
jecxz
mov
pop
cltd
fdecstp
das
and
sbb
dec
pushf
inc
int3
dec
cmp
jne
inc
dec
iret
jae
jge
sub
out
dec
stc
jnp
adc
mov
cwtl
imul
pop
adc
loop
outsb
outsb
aad
clc
sub
mov
sbb
add
notb
push
popa
lea
adcl
push
int3
in
js
push
sub
mov
pop
xchg
xsha1
cmpsb
dec
popa
repnz
pop
mov
nop
pop
cmp
mov
rorb
test
xchg
jnp
repz
cmp
arpl
adc
test
jns
popf
stc
pusha
jmp
jnp
test
xchg
pop
loop
sbb
dec
lahf
fucomip
sbb
push
add
mov
stos
sti
jno
stos
int3
ljmp
xchg
cmpb
iret
andb
sbb
mov
fists
aad
out
push
ja
mov
xchg
imul
call
pop
mov
xchg
adc
mov
imul
rclb
fmuls
dec
icebp
xor
mov
xor
jl
mov
cld
inc
shll
std
sbb
mov
push
cmp
and
mov
mov
popa
add
add
lret
jl
loope
mov
inc
jp
ja
lea
or
cs
push
clc
ss
imul
rclb
xchg
adc
movsb
push
aas
jge
mov
or
aas
fdivr
xor
cld
lcall
jbe
mov
sbb
mov
outsb
sbb
mov
inc
daa
and
push
lcall
mov
cmc
xchg
mov
dec
sbb
fbstp
push
icebp
daa
sbb
jp
pop
dec
loope
xor
inc
lret
or
and
pop
psubq
cmpsb
sub
bound
data16
out
ret
aad
js
in
inc
cmp
push
or
cmp
xchg
xchg
jno
in
sbb
mov
arpl
leave
xchg
cmp
shll
gs
xchg
push
sarl
mov
mov
push
pop
mov
add
jnp
mov
fsubl
sub
add
push
mov
out
xor
enter
xchg
stos
cmp
mov
adc
inc
mov
in
into
or
lea
ds
daa
dec
pop
sub
mov
mov
pop
ja
pop
test
fs
arpl
out
ret
lods
xchg
adc
imul
sbbl
push
mov
mov
in
xor
ret
xchg
mov
fldt
cmp
add
icebp
cmpsb
xchg
dec
movsb
dec
sbb
lea
inc
shrl
xor
sbb
ret
push
sub
stc
dec
fdivl
push
inc
cmp
add
stc
push
cli
leave
pusha
jo
jnp
ss
out
mov
sub
jnp
out
lods
imul
dec
sub
dec
pop
lahf
mov
cwtl
xchg
mov
jle
sub
std
loope
cmp
cmp
ss
sub
mov
cli
in
aam
ss
pop
mov
jmp
or
popf
sbb
inc
pop
icebp
lahf
nop
and
shll
add
mov
cmpsb
scas
inc
push
pop
repnz
xchg
sub
dec
loope
adc
push
lea
subl
dec
jmp
mov
shll
clc
fistpll
jmp
jge
jo
inc
cmp
inc
pusha
call
inc
sub
insb
jno
rol
push
push
cmpsl
add
in
je
pop
ss
push
hlt
add
mov
add
out
jg
call
scas
jbe
or
jecxz
ss
lods
cmp
jge
pop
push
jb
adc
add
fisubrs
jns
pop
or
adc
xorl
sub
aam
cli
nop
das
and
push
setnp
test
fwait
xchg
add
outsl
fsubrl
inc
adc
xor
sbb
xor
cmc
insl
pop
jb
mov
inc
sbb
movsb
scas
aaa
test
lcall
fbld
divb
pop
mov
rcl
out
into
ret
cmp
push
insb
xchg
dec
mov
lret
loope
mov
cwtl
jp
aas
sub
bound
aam
cmpb
xlat
divl
cmp
scas
fisttpl
push
dec
mov
sarl
icebp
arpl
pop
addr16
fdivs
fld1
jl
jle
or
and
mov
fdivrs
lods
adc
lea
js
xchg
xchg
cs
sti
xor
mov
subl
lcall
lods
sub
popf
arpl
mov
and
fnstsw
mov
xor
pop
cmp
pop
lock
rcl
mov
loopne
lods
imul
ja
pop
outsb
cmp
jne
add
es
aaa
out
xchg
call
add
jg
pop
xor
jl
js
mov
nop
ss
in
in
sbbb
cmc
sti
int3
mov
ret
push
cmp
jl
jns
sbb
add
cmpb
mov
mov
mov
xor
mov
inc
push
mov
lcall
and
gs
inc
lock
std
bound
aaa
sarl
push
mul
mov
fidivrl
and
xor
mov
lret
lds
mov
lea
fistpll
fstp
fcmovb
ret
push
mov
fistpll
icebp
or
mov
nop
push
dec
jmp
jns
mov
scas
xchg
xor
fs
incb
jnp
mov
adc
push
add
push
jmp
dec
in
jp
ds
mov
icebp
repnz
inc
ret
andl
test
test
aas
push
mov
xchg
sub
push
jmp
sbbb
stos
call
push
pusha
scas
sbbb
push
les
xchg
in
addl
data16
cmpsl
jne
sub
xchg
sahf
ja
lea
mov
mov
flds
outsb
rclb
repz
xlat
jl
mov
cmp
dec
stos
push
call
ret
mov
xchg
out
inc
movsl
xchg
mov
and
fidivl
fmul
ss
rcll
jo
cmp
pop
imul
rolb
pushf
dec
loopne
lret
iret
sbb
ds
fs
das
mov
mov
xor
sub
mov
cmp
lcall
push
jmp
or
pop
mov
pop
and
pushf
sbb
popf
or
mov
adc
inc
or
jbe
pushf
xchg
in
push
rcrl
jp
mov
pop
sbb
jle
aaa
add
mov
push
xor
in
mov
jmp
movsl
stos
jl
cmpsl
inc
les
cmc
sub
sbb
jl
mov
xchg
fs
repnz
dec
push
or
rclb
lods
jne
fwait
inc
dec
mov
dec
mov
fstpl
or
cmp
xchg
push
nop
in
movsb
inc
fldl
insb
into
lahf
cmp
lahf
popa
jl
jne
andb
lahf
xchg
cld
inc
rclb
lcall
clc
out
ja
xchg
insl
add
inc
xchg
clc
out
sbb
cmp
mov
mov
test
dec
pop
pop
iret
iret
sbb
call
push
aad
pop
mov
mov
mov
sbb
repnz
jbe
sub
stos
push
nop
dec
or
push
jmp
cs
sub
xor
mov
stos
add
out
das
insl
sbb
pop
jle
cs
addr16
cmc
lcall
fs
dec
xchg
push
xchg
loop
fistl
aas
add
pushf
pop
insb
fimull
inc
inc
test
sub
sbb
adc
xchg
leave
jecxz
fildll
cmp
rclb
test
cmp
imul
mov
mov
adc
pusha
mov
lahf
pop
mov
movsb
cmp
push
dec
bound
test
fsubr
add
inc
inc
stos
cli
subl
push
jmp
fistps
jo
lret
das
lcall
sub
add
inc
cld
xchg
jb
or
adc
repz
mov
aas
ss
xchg
or
jo
test
cmpsl
call
pop
cmc
sbb
cld
mov
testb
mov
inc
sbb
test
test
mov
xchg
arpl
push
out
pop
imul
fildll
insl
or
pop
call
pop
pop
jmp
mov
lret
xchg
lret
or
mov
int
and
mov
rcr
fs
and
jmp
push
fcoml
cmc
jne
cmp
push
push
sub
inc
mov
sub
or
cs
cmpsl
cmpsb
sub
subb
into
push
cmp
mov
adc
or
popa
scas
mov
mov
adc
adc
jae
jmp
jnp
jno
fdivl
popf
or
adc
pusha
inc
adc
pusha
jae
rcll
fldcw
xchg
hlt
lds
mulb
js
pop
push
dec
sub
pop
repnz
out
or
sbb
out
out
negb
pop
das
sbb
or
push
in
xorb
push
sub
pop
sbb
cmp
call
popf
inc
mov
dec
popa
adc
cltd
dec
or
sub
inc
or
sbb
int3
pop
jp
ljmp
pop
xor
jmp
es
aaa
imul
out
dec
inc
cmp
cmp
mov
or
cmc
or
sbb
inc
je
xchg
into
push
push
xor
push
ret
jecxz
js
loopne
mov
inc
xor
aam
sbb
jne
inc
mov
or
push
iret
add
sub
inc
scas
ss
push
push
mov
cwtl
mov
lret
es
pop
and
push
jne
push
and
pop
push
dec
stos
adcb
or
es
jl
cwtl
mov
std
insb
inc
clc
pop
xchg
mov
shrl
jnp
lods
movsl
js,pt
push
push
gs
and
shll
gs
pop
repz
pop
jne
pusha
jp
sbb
loopne
test
mov
js
jno
scas
mov
pop
inc
pop
mov
or
ja
nop
mov
rorb
jae
dec
mov
testb
sub
fldcw
mov
push
xlat
xchg
pop
push
sahf
aas
pop
dec
fs
lcall
hlt
fs
sub
xchg
ss
in
jge
sti
push
fcomps
lds
arpl
push
push
aam
mov
pop
repz
cld
lcall
in
sbb
or
xlat
cmp
or
xchg
rcrl
test
mov
int3
push
test
sahf
jne
in
mov
inc
jns
xchg
imul
mov
add
lcall
and
loop
repz
inc
fsub
add
mov
fldenvs
enter
pop
sbb
test
fidivrs
movsl
jle
pusha
or
lods
jb
add
mov
incb
aaa
ja
loope
jno
inc
test
call
pop
adc
test
push
fstl
push
pop
lret
xorb
or
ldmxcsr
dec
jno
xchg
dec
cmc
aad
cmp
rcll
repnz
mov
test
daa
add
leave
xlat
push
sub
fstl
sub
inc
mov
nop
mov
inc
je
stc
aad
push
pop
push
xlat
jb
test
jecxz
inc
cli
jge
mov
dec
shlb
aam
insl
add
js
push
pop
fisttps
imul
test
and
cmpsb
push
sbb
or
js
cmp
xor
int3
pop
rcrl
add
pop
lods
pusha
pop
fstpl
fwait
mov
hlt
and
sub
xor
leave
mov
jle
ja
sahf
scas
push
mov
rcrl
sbb
add
lahf
int3
out
jmp
mov
orl
sbb
pop
insl
cmp
ret
mov
push
movsl
arpl
adcb
adc
lea
lret
pop
stos
cs
cltd
mov
cmp
mov
mov
and
push
fstl
xchg
xchg
jns
pop
shll
dec
pop
lea
or
lcall
sbb
add
xor
cltd
inc
mov
mov
cmp
push
mov
xor
bound
sbb
lods
sub
mov
jae
jle
sahf
mov
and
sbb
sub
pop
add
mov
test
pop
jl
push
out
sbb
fiaddl
mov
das
addr16
in
cmpb
imul
pop
push
inc
mov
dec
xor
int
sbb
test
lds
in
movsb
mov
sbb
mov
fbld
adc
lahf
inc
xor
xor
in
sub
dec
push
cmpsb
inc
outsl
in
pop
mov
fnstcw
sbb
in
fsubs
pop
pushf
lahf
sub
mov
jmp
lret
incl
lret
popa
in
push
mov
mov
dec
sti
jmp
jae
push
nop
fwait
imul
loopne
ja
pop
pop
and
sub
jge
std
popf
cmpsb
jle
add
cmpsl
lahf
cs
jo
inc
daa
add
lcall
xlat
shrb
or
adc
insl
xchg
imul
arpl
testl
fwait
cmc
mov
pop
push
inc
mov
mov
out
ror
arpl
out
scas
pop
mov
push
mov
fimull
push
sti
testb
lret
sti
xlat
adc
clc
mov
sub
mov
es
mov
dec
movsl
fwait
test
sub
add
dec
lcall
cmp
adcl
gs
pop
xacquire
jns
and
cld
pop
repnz
aas
push
movsl
jo
xchg
lods
mov
sub
jne
adc
xchg
shrb
ret
jno
cmp
in
pop
shlb
sub
je
sub
inc
ja
and
gs
shrb
xor
xor
xor
inc
fld
daa
mov
hlt
decb
pop
in
fstpl
sub
mov
xchg
daa
stos
pop
outsb
sub
out
xchg
xchg
cld
cmp
mov
fwait
shll
or
mov
jg
js
sbb
add
jl
movsb
mov
cmp
sub
loop
stc
clc
insb
js
daa
cmpsb
iret
ret
repz
sbb
shr
rcll
hlt
xchg
jne
cli
push
mov
in
popf
cmp
xor
xor
int3
jle
sub
cmp
les
lds
mov
incb
loopne
dec
mov
cltd
mov
int
sub
mov
mov
std
mov
add
inc
jnp
xorl
pop
cmp
rorl
dec
bound
scas
fidivrl
daa
dec
and
daa
xchg
aad
lahf
in
cmpsb
outsl
mov
ret
jnp
xor
pop
aaa
mov
mov
data16
icebp
jecxz
arpl
pushf
xor
mov
jne
imul
inc
mov
lods
lea
test
loopne
das
addr16
and
jmp
mov
mov
adc
jp
cld
cmp
or
sbb
in
sub
xchg
mov
jbe
out
mov
mov
push
test
or
cltd
xor
ljmp
xor
or
rclb
xchg
inc
clc
dec
pop
sub
lahf
pop
cmp
scas
mov
push
xor
inc
or
and
stc
xchg
das
mov
aad
sbbb
inc
fbstp
pop
mov
fcom
adcl
hlt
cltd
mov
inc
pop
cmc
andl
sbb
cwtl
fsin
cwtl
shr
jo
in
or
jbe
sarl
rorl
mov
ret
xor
xchg
add
mov
sub
es
fwait
test
leave
mov
pop
sbb
in
pop
jae
sub
cmpsb
mov
aam
repnz
ja
add
push
dec
jl
push
inc
insb
popf
or
and
insb
push
dec
push
and
adc
lods
lret
jns
sbb
adc
cwtl
scas
seto
push
cmc
mov
mov
mov
loop
int3
in
roll
xlat
adc
subl
adc
lahf
lret
inc
jnp
pop
loopne
movsb
mov
mov
arpl
iret
ss
cli
xchg
in
sbb
add
mov
jne
mov
hlt
hlt
inc
in
push
loope
xchg
push
inc
jmp
xor
jg
icebp
and
int
lods
jno
scas
shll
pop
rcrb
xlat
xchg
imul
jns
loop
push
adc
inc
sbb
movsl
icebp
lods
lds
test
xor
rolb
dec
mov
aaa
loopne
stos
gs
mov
jne
jnp
xchg
mov
mov
inc
rcrl
sub
fsts
sbbl
inc
push
lahf
inc
test
inc
pop
popa
xor
jl
xlat
push
jne
addb
iret
xchg
jmp
dec
or
sti
adc
stos
lcall
cmpsl
mov
jl
jns
test
push
mov
movsb
push
sbb
adc
mov
fdivrl
mov
mov
push
aas
xchg
outsb
mov
lods
insb
push
jmp
inc
cld
insl
leave
js
pusha
paddd
stos
jge
inc
xor
jne
in
popf
xor
idivb
push
fwait
inc
jmp
push
pop
dec
fs
xor
enter
push
adcl
outsb
popf
jecxz
mov
arpl
mov
inc
jmp
add
bound
xchg
stc
nop
stos
mov
pop
dec
mov
xor
or
add
mov
inc
push
jno
mov
adc
mov
testb
stos
xchg
ja
inc
enter
jmp
xchg
or
mov
fdivrs
movsl
fildll
dec
sub
dec
dec
loopne
xchg
arpl
fs
pop
ljmp
add
push
xchg
dec
pushf
push
popf
std
cmp
imul
push
push
sahf
fstl
ds
xlat
add
imul
lds
sbb
addr16
inc
push
pusha
push
ss
out
out
xchg
imul
sahf
hlt
roll
fnsave
rol
jae
fwait
push
xchg
pop
jecxz
scas
jne
and
pop
xchg
cli
jae
aaa
movsl
mov
cmp
sub
shrb
mov
sbb
out
stos
into
sub
dec
mov
sub
xchg
xchg
das
or
xor
dec
pop
es
add
fs
sahf
sub
xchg
hlt
pop
jge
rorb
mov
data16
ja
cmc
std
outsb
pop
cmpsb
fwait
pop
lods
mov
xchg
push
outsl
add
and
or
icebp
mov
sub
int
daa
mov
outsb
pop
fmulp
xor
fstpt
nop
or
jb
add
jbe
jb
xchg
or
negb
cli
sbbb
pop
or
push
les
dec
jle
ja
call
xchg
aas
pushl
dec
inc
imul
lods
dec
push
shl
cltd
lods
and
mov
sbb
pop
hlt
adc
mov
cwtl
jae
push
pop
cmc
pop
and
pop
jg
xor
lods
fcomp
gs
fsubl
pop
dec
in
or
daa
push
call
jbe
fistps
dec
and
outsb
xchg
cmc
xor
inc
push
mov
mov
shrb
shrl
xchg
daa
mov
cltd
test
outsl
sub
sub
jmp
fbstp
jns
push
pop
inc
stc
or
mov
jp
insl
jo
enter
pop
inc
dec
xchg
out
loop
push
fiaddl
cs
popa
adc
xchg
pop
aaa
lret
aaa
fwait
in
mov
cld
ffree
jp
xchg
mov
mov
mov
sub
add
les
js
jo
lods
mov
mov
or
mov
loope
jne
push
cmp
repnz
lcall
lods
xor
faddp
in
idiv
mov
or
stc
adc
or
stos
xor
test
shrb
dec
xor
cmpsb
out
gs
pop
and
aad
call
push
rclb
aam
mov
and
sbb
pop
shl
std
nop
sub
aad
push
pusha
xor
scas
jge
add
mov
pop
xchg
add
dec
mov
aaa
cmp
mov
sub
stos
add
cld
subb
fldcw
loope
mov
mov
data16
daa
outsl
repnz
cltd
std
mov
mov
xchg
push
fistps
mov
cli
or
jb
iret
lcall
jmp
cmp
mov
repnz
adc
ds
jmp
popf
cs
xor
ret
xor
jbe
sbbl
sub
mov
loop
sbb
call
or
sahf
cs
adc
enter
cmp
sub
pop
cltd
mov
aam
gs
daa
or
in
les
repnz
in
cmpl
or
inc
mov
fs
or
dec
scas
fidivs
push
jmp
out
shrb
add
mov
jle
test
pop
pop
outsl
daa
inc
push
out
test
test
fcomps
ds
insb
mov
jb
pop
dec
jecxz
mov
jp
jp
mov
sbb
mov
andl
int
sahf
out
jo
fidivl
ljmp
jns
mov
test
daa
dec
roll
enter
push
inc
icebp
lret
arpl
jno
fstpt
push
shlb
jb
js
ss
add
xchg
ss
jns
xchg
sub
fildl
lret
lahf
test
push
add
push
fwait
dec
lret
ljmp
int3
mov
stos
jecxz
test
push
sti
jmp
mov
push
pop
paddsb
ss
sub
sub
sub
out
mov
data16
test
outsl
pop
bnd
or
adc
repnz
pop
cwtl
bound
ds
mov
xchg
sub
lock
rol
sub
repnz
testb
gs
sbb
mov
or
mov
or
popa
rcrb
xchg
mov
jbe
daa
xlat
sbb
test
push
rcrl
mov
fnsave
sbb
movsb
cmp
daa
mov
fcoml
loop
xor
jne
push
mov
dec
shlb
lcall
iret
and
and
pop
adc
sahf
sbb
lea
ds
jo
mov
mov
movsl
cli
xchg
adc
stos
xchg
inc
fwait
mov
fcompl
fsubs
mov
je
inc
call
adc
sbb
iret
fs
push
lock
rcl
mov
sub
jmp
sub
mov
mov
push
adc
xchg
mov
sub
clc
test
sti
push
stos
xchg
pop
dec
stos
inc
enter
lea
push
std
enter
sbb
mov
movsb
dec
loopne
leave
icebp
inc
pop
inc
lock
incb
pop
filds
sbb
mov
in
jno
push
rol
jecxz
lret
sbbb
pop
fnstenv
pop
loop
mov
je
push
sbb
fimuls
xchg
popf
mov
bound
sub
addr16
push
mov
rcll
scas
gs
pop
das
ret
std
orl
pop
adc
jno
mov
lock
shl
jmp
nop
inc
mov
mov
pop
mov
addr16
outsl
gs
aaa
in
mov
sbb
mov
in
mov
cwtl
loop
rclb
add
lahf
and
adc
daa
cltd
jno
dec
dec
sbb
outsl
dec
jecxz
inc
aam
js
loopne
mov
fidivs
mov
pushaw
and
mov
lcall
in
mov
inc
sbb
fsubrp
gs
outsb
adc
subl
arpl
loopne
mov
addr16
pusha
mov
pushf
jne
lods
push
pop
jno
mov
sub
rorl
dec
fbld
jne
jno
das
call
movsb
and
or
inc
sub
adc
arpl
cmp
sub
repz
xchg
jg
out
imul
pop
mov
adc
repnz
and
rol
jns
lahf
pop
cld
int3
arpl
scas
das
pusha
xor
add
sbb
dec
jo
mov
fsubrp
add
fwait
aaa
pop
push
pop
inc
sub
test
add
adc
in
je
xor
inc
std
push
andb
imul
xor
pop
sbb
inc
xchg
nop
or
pop
ja
daa
cmp
lock
sbbl
push
dec
loope
loope
fadds
xchg
mov
stc
add
and
adc
inc
mov
pop
scas
test
ljmp
push
enter
imul
ljmp
in
scas
mov
in
pop
pop
outsl
jb
adc
iret
xchg
mov
lock
dec
push
pop
jb
imul
push
push
mov
mov
lret
iret
fistpll
cld
repz
jp
inc
pop
add
sbb
in
addr16
call
iret
movsl
pop
fucom
adc
clc
pop
fs
push
push
inc
lret
ja
movsl
dec
push
test
ficoms
out
lcall
lds
jge
ss
test
cld
push
push
xchg
cmp
mov
daa
xchg
outsb
add
testb
xchg
mov
cli
aam
inc
and
lea
add
movsb
addr16
push
dec
cmp
add
sahf
lods
pushf
and
sbb
xor
cld
addl
adc
scas
mov
nop
cmp
add
xchg
int
lods
push
in
dec
daa
jbe
pop
imul
push
sub
nop
pop
or
lcall
sbb
outsl
imul
rcll
notb
jno
mov
pop
mov
call
or
daa
cmp
push
in
pop
stc
mov
pop
pop
xor
sbb
loop
fwait
nop
lods
mov
filds
lahf
je
jg
inc
movsl
sub
pop
sbb
and
add
mov
in
inc
or
mov
ret
or
cmc
push
imul
cli
push
dec
shlb
sbb
cmpsb
add
es
sbb
push
hlt
add
cmp
nop
jb
inc
fadds
xor
jnp
sbb
inc
bound
cmpsl
cmpsl
dec
test
xchg
adc
push
push
lahf
je
scas
movsl
add
add
jb
in
add
mov
ja
setne
xchg
xor
int
rcrb
mov
or
or
mov
fnstcw
ljmp
pusha
or
pop
jb
stos
cmc
push
stc
call
inc
jecxz
add
push
sti
out
cmpsl
cmp
fbstp
popf
cli
jae
sub
push
and
push
imul
pop
jbe
lock
and
mov
ja
xchg
sub
das
xor
lahf
xor
leave
movsb
pop
in
mov
cmc
mov
add
je
shrb
aas
les
xchg
adc
lret
xor
std
mov
jne
sub
shrb
cltd
inc
fisttpl
popa
xchg
sub
test
lret
xor
dec
mov
cmc
mov
gs
ljmp
les
and
xor
dec
pop
xor
cmp
push
ljmp
inc
fsubl
ljmp
sbb
fbstp
xchg
jne
add
pop
repnz
sub
cld
stc
aad
mov
popa
shrb
cmpsl
pop
or
mov
pop
movsb
out
arpl
psubsw
mov
jmp
ss
roll
push
mov
mov
imul
cmp
xor
pushf
test
jae
mov
jnp
lds
pusha
jmp
pop
pushf
mov
mov
push
mov
ficompl
jae
jp
xor
and
push
repz
out
xchg
jnp
cmpsl
out
data16
mov
xchg
pop
insl
mov
daa
repnz
mov
clc
dec
cltd
or
mov
jle
xor
test
roll
ret
sub
add
std
pop
push
mov
xchg
insb
add
sbb
or
jmp
sub
popf
add
iret
xor
inc
mov
sbb
pop
cwtl
fwait
inc
pop
xchg
mov
sti
mov
push
inc
dec
adcb
mov
push
cmp
sbb
test
or
popa
gs
mov
ret
hlt
data16
repnz
sarb
sub
clc
orl
mov
shl
out
and
pop
push
mov
test
cmp
test
sub
iret
scas
xor
test
dec
xor
pop
mov
adc
jge
arpl
fcomps
jno
xchg
mov
data16
int
cmp
mov
sub
movsl
jge
stc
mov
lcall
jl
lret
and
icebp
push
sub
iret
in
mov
outsl
ret
add
xchg
cmpsl
inc
add
xchg
lret
xor
or
adc
pop
xorb
lahf
push
pop
and
sub
push
mov
hlt
cmp
dec
mov
call
mov
push
mov
add
and
push
insl
sbb
mov
mov
and
in
mov
stos
pop
lcall
mov
fst
sbb
leave
sub
divl
inc
push
sbb
and
pop
ja
test
movsl
shrl
dec
or
into
xor
xchg
jmp
fs
jo
movsb
inc
mov
movb
lret
loope
jecxz
out
cmp
sbb
xor
sbb
pop
xlat
mov
in
ret
or
jb
adc
sahf
and
nop
sbb
add
inc
fs
dec
and
jno
int3
test
mov
pusha
scas
push
push
shrb
pop
adc
xor
jecxz
adc
xchg
sub
aaa
mull
rcll
jp
xchg
loope
sti
xorl
aaa
or
aad
lret
mov
sbb
cmp
gs
dec
test
iret
push
loopne
sarl
cmpsl
movl
pop
daa
mov
scas
jnp
fldenv
mov
test
stos
push
pop
mov
test
jo
movsl
cmp
jne
adc
in
repnz
and
ljmp
sbb
pushf
fsubr
fisttps
andb
rorl
xor
je
push
add
and
mov
lret
subb
stos
sbbl
pusha
cli
lea
ss
pop
mov
loope
std
aas
dec
fdivr
cmp
pop
cld
adc
add
mov
dec
mov
fcoml
jo
outsb
xchg
adcb
cmp
inc
out
pop
out
pop
fadds
test
cmc
pushf
and
lock
js
faddl
fbstp
addr16
push
mov
dec
rol
jb
repnz
mov
cmpsl
aad
mov
push
push
xchg
push
movsl
mov
mov
inc
scas
in
js
fisttps
in
inc
cltd
std
mov
push
xchg
cwtl
pop
mov
sbb
inc
sbb
xchg
xor
in
in
je
mov
repnz
and
push
test
add
pop
xor
in
rcl
ror
data16
daa
lret
bound
sub
sti
cmp
jecxz
jg
inc
loop
dec
out
mov
dec
in
mov
out
cmc
pop
jmp
cmp
mov
test
call
or
decb
mov
and
or
mov
jae
jecxz
jne
jo
adc
mov
cmp
les
pusha
push
add
adc
adc
xchg
push
xor
or
jo
cmc
xor
push
mov
lea
mov
jl
inc
adc
test
je
out
pop
mov
cmp
into
imul
fwait
test
cwtl
xor
ds
sbb
jno
rcll
outsl
and
xor
push
push
aas
in
sub
clc
fistpl
repz
aas
ds
loop
test
inc
mov
iret
push
mov
mov
push
push
fcompl
xchg
push
mov
push
inc
pushf
dec
aas
xchg
adc
cltd
ror
push
xor
inc
lret
std
lret
adcb
pop
sbb
lds
gs
notb
lock
add
push
or
push
jae
rcll
pop
cmp
push
inc
or
mov
outsb
ret
shll
fdivrp
add
data16
mov
dec
icebp
ficoms
test
gs
lods
ljmp
xchg
xchg
mov
loope
fdiv
or
adc
fnstsw
das
movsb
mov
push
push
cmpsl
popa
add
jle
ja
or
or
int
xor
shlb
pusha
clc
pop
inc
inc
push
dec
clc
xor
movsl
andb
dec
cmpsl
mov
loope
ret
fisubs
jnp
adcl
adc
dec
cli
mov
push
sub
mov
rcrb
jmp
hlt
maskmovq
testl
mov
fdiv
mov
ficoml
leave
xchg
jne
inc
push
push
sbb
loopne
dec
lss
push
pop
in
mul
jns
sbb
mov
div
add
jmp
push
push
xorl
data16
xchg
push
jge
cli
lods
das
pop
sbb
popf
dec
sbb
mov
mov
mov
sbb
cmp
sub
cmpsb
lret
mov
sub
sub
outsb
mov
adc
sub
pushf
pop
gs
push
sub
leave
leave
dec
lcall
aad
ret
push
movsb
js
xchg
fiaddl
push
sub
mov
cltd
rcrl
jb
mov
outsb
out
push
jmp
pop
sbb
jg
jb
xchg
dec
xchg
add
test
fs
fisubs
or
jo
lea
fdivl
sub
mov
ljmp
cmc
dec
and
test
ds
inc
add
xor
jbe
xlat
xor
cmpsl
ret
jae
cpuid
jp
lods
sub
in
xor
pop
sbb
out
inc
cmp
loope
lods
mov
cmp
xchg
or
fwait
repnz
movsl
sahf
fnstenv
push
jmp
jns
jo
js
push
jne
mov
ret
mov
daa
pop
push
mov
cli
pop
sub
fs
rcll
add
inc
clc
sub
sbb
pop
dec
pop
sub
mov
es
sub
xor
adc
xchg
push
push
sbb
enter
lret
stc
adc
aaa
sbb
lahf
dec
push
jmp
sbb
inc
cmp
cld
dec
adcl
aad
pop
fmulp
ficoms
stc
dec
imul
lahf
das
pop
insl
mov
imul
sarb
inc
dec
xlat
xchg
mov
fisttps
popa
jecxz
cmpsb
scas
cld
sub
jnp
mov
xor
jo
xchg
mov
es
scas
arpl
adcb
daa
xor
mov
les
mov
bound
xchg
sbb
int
add
subb
xor
mov
loop
outsl
pop
fs
test
adc
adc
call
ljmp
jno
fists
fisttps
inc
mov
ucomiss
lahf
xor
push
dec
je
mov
jns
mov
pop
lahf
mov
es
data16
clc
and
mov
mov
hlt
jbe
insl
das
push
loope
into
inc
or
mov
jbe
ss
and
jecxz
mov
xor
repz
or
mov
push
pop
aam
fs
cmp
adc
pusha
cmp
xor
loopne
cltd
test
pop
mov
lock
and
push
es
jbe
inc
push
and
ret
orl
sbb
sahf
and
outsl
aam
lods
push
adc
sbb
and
dec
repz
ds
and
pop
ds
aas
daa
shrb
arpl
ja
fs
xchg
rorl
sub
nop
divl
ss
lcall
push
imul
test
lret
repnz
push
pop
xor
enter
jp
das
mov
cwtl
repnz
push
xor
xor
add
pop
pop
push
decl
outsb
jg
and
sbb
push
adc
add
sti
sub
pop
stos
stc
or
pop
out
arpl
mov
sahf
frstor
inc
nop
aad
jns
stc
pop
sub
mov
pop
js
jb
test
ja
lret
insb
mov
add
xor
pusha
sub
invd
or
and
movsl
ja
sarb
xchg
pop
mov
ja
idivb
cmp
test
in
shl
jae
inc
lret
ret
pop
loopne,pt
das
in
orl
lcall
jge
and
rcll
xlat
es
mov
ffreep
cmp
xchg
sbb
xor
mov
scas
in
push
ret
pop
std
and
and
repz
imul
ljmp
ds
xlat
lea
enter
xor
test
cmp
popf
pop
inc
aas
leave
aaa
ds
cli
push
or
ja
test
xor
mov
mov
nop/reserved
ret
movsb
jecxz
add
dec
pop
and
rcrb
fwait
push
fs
push
sarb
sahf
jne
leave
stos
call
pop
test
and
arpl
mov
inc
jp
lret
test
mov
jne
pop
rorl
sbb
pusha
push
xchg
mov
fcompl
jl
jl
lods
mov
fwait
fwait
into
jg
and
pop
cmp
test
pusha
jae
fucomip
aad
in
fwait
mov
sub
pop
addr16
push
mov
leave
mov
bnd
xor
xor
pop
lret
int3
rcll
jne
sarl
dec
fistps
imul
cmpsl
sbb
test
xchg
stos
jbe
mov
push
push
mov
jb
lret
or
rcrb
adc
insl
xchg
std
pushf
shl
fiaddl
and
inc
ficoml
dec
jnp
in
out
push
or
mov
popf
cmpsl
pop
sbb
inc
bound
sub
cmp
stc
insb
add
inc
cltd
lds
orl
or
xor
sbb
sti
pop
xor
scas
enter
insb
add
ds
xchg
jl
push
shll
pop
or
inc
addr16
je
stc
out
or
push
repnz
stc
popf
aas
cmpsl
push
sub
cmp
xchg
cmp
out
stos
aaa
ljmp
les
mov
fsin
popf
inc
jb
mov
fucomp
dec
mov
pop
xor
xchg
push
cltd
mov
ds
mov
push
jbe
mov
leave
js
and
xchg
pop
jns
or
and
xlat
mov
push
inc
push
sub
ss
imul
adc
daa
lods
jg
xor
ljmp
outsb
dec
inc
sahf
or
pop
xor
popa
jg
or
mov
pop
cmp
sub
xchg
mov
mov
jb
out
mov
mov
or
shlb
pop
shlb
out
jne
clc
pop
lahf
lods
dec
sbb
cmp
jns
sbb
inc
scas
inc
xchg
add
stos
out
jg
xchg
sbb
jne
mov
xor
sbb
imul
int
rcr
sbb
insl
mov
outsb
mov
ja
mov
pop
sahf
roll
cmp
jg
mov
fstpt
inc
add
and
xchg
mov
xor
inc
rorb
adc
mov
lods
dec
fwait
inc
sbb
mov
jae
cmp
or
int3
pop
xchg
mov
addr16
cmp
mov
dec
sbb
mov
clc
rcrl
xor
xchg
pop
insb
aas
adc
mov
ja,pt
mov
xor
lds
jl
fidivs
insb
xlat
fmul
adc
push
xchg
mov
je
mov
clc
rcr
dec
mov
sbb
stos
aam
push
fisttpll
cmp
insb
push
pop
pusha
add
sbb
and
cwtl
push
hlt
lea
stos
daa
lds
mov
xlat
push
roll
iret
iret
aad
push
fildll
mov
in
mov
pop
je
lods
xchg
add
push
dec
into
andl
and
xlat
icebp
test
jnp
out
and
imulb
mov
data16
pop
enter
lahf
push
xchg
and
mov
lds
mov
pushl
sbb
filds
xchg
shr
fwait
push
mov
jb
mov
push
adc
je
insb
mov
inc
es
inc
in
sbb
test
jmp
andl
dec
mov
call
out
shrl
adc
push
xchg
aad
lea
dec
daa
mov
or
jno
pop
imul
out
dec
in
ss
and
dec
sbb
cmpsl
notb
cmp
aas
jl
pop
pop
rcrl
xor
mov
loop
dec
mov
push
adc
outsl
das
mov
push
fldt
and
iret
cmp
fists
aas
pop
ret
pop
xchg
pusha
arpl
leave
mov
push
push
gs
shrl
daa
sub
shrl
dec
pop
and
pusha
mov
rclb
push
aas
add
xor
test
lds
subb
test
imul
adc
dec
push
stc
test
mov
imul
sbb
ret
pop
mov
hlt
out
jmp
lock
sarb
scas
mov
sub
xchg
into
dec
mov
push
and
arpl
sbb
ret
in
or
ljmp
lea
dec
outsb
and
inc
cmc
mov
fidivrs
mov
loop
mov
xchg
and
lods
cmp
jmp
addb
push
sti
mov
ret
xorb
pusha
int
adc
and
cmc
mov
push
shll
jg
xor
shrb
insl
or
dec
sub
dec
fimull
mov
xor
cmp
xor
shlb
xchg
enter
fcmovne
hlt
xorb
and
ss
mov
xchg
mov
xchg
test
jg
in
pop
scas
sete
je
or
pop
mov
adc
cmp
inc
lret
or
mov
sbb
jbe
jno
pop
mov
ret
xor
pop
divb
js
in
std
push
xor
mov
mov
adc
fwait
jb
inc
js
cld
cmp
cltd
jge,pt
popa
dec
inc
lods
push
mov
imul
fildl
xchg
push
add
and
cmc
add
add
in
jo
scas
xlat
jmp
cmpl
sub
push
cmp
and
mov
mov
mov
cmp
imul
mov
scas
pop
mov
dec
mov
imul
scas
pop
cwtl
pop
cmp
and
inc
sub
jmp
mov
lret
or
stc
test
inc
scas
sbb
mov
mov
inc
pop
jp
mov
outsl
xchg
daa
cmpsl
js
mov
push
and
notl
inc
sub
mov
into
out
mov
loope
push
cli
add
test
sub
xchg
add
fiaddl
mov
imul
stos
sub
jo
mov
jno
mov
rclb
inc
fldcw
jmp
pop
mov
sbb
jge
sub
and
sbb
sbb
and
cmpb
fs
movsb
rorl
insb
jnp
jle
scas
pop
outsb
add
fiadds
movsl
popa
add
loopne
rcrl
inc
sbbb
add
pop
out
sahf
sti
mov
loopne
pop
and
jo
sbb
popa
sahf
dec
ficoml
or
icebp
jo
and
jg
or
jno
mov
or
pop
jmp
aas
mov
sarl
pop
jmp
test
data16
xchg
and
jo
and
cmp
outsl
jae
mov
cmp
loope
bound
add
sti
push
lods
rcll
mov
jbe
lahf
ss
sub
mov
scas
sti
add
push
outsl
jge
shl
je
push
mov
dec
sub
add
mov
out
cld
push
mov
xchg
nop
sbb
mov
fwait
pop
test
sub
aam
jmp
arpl
cmp
decl
cld
pop
lea
add
sub
sub
es
add
psllq
popa
add
sbb
mov
hlt
repz
outsl
mov
dec
pop
xchg
mov
mov
aam
les
aas
movsl
icebp
fwait
mov
push
mov
sbb
xchg
call
or
cmp
dec
sbb
sarb
push
cwtl
icebp
jb
shr
cmpsb
xchg
jl
icebp
sbb
mov
push
cmp
push
cmp
out
es
adc
out
xchg
dec
ja
repz
faddl
inc
popa
shl
outsl
inc
xchg
push
stos
inc
lods
repz
xchg
jp
mov
int
mov
jecxz
clc
cmpb
inc
out
push
sbbl
inc
adc
clc
xchg
popf
out
into
clc
jno
sbb
or
aaa
bound
test
cmp
push
shlb
repnz
popa
or
adc
fadds
push
outsb
or
imul
sti
dec
jo
cli
adcl
dec
mov
in
mov
mov
fdivrp
dec
pop
mov
sbb
jl
sbb
sub
pop
xor
inc
fadds
pop
sub
inc
imull
inc
pop
lret
aam
sbb
jnp
inc
mov
repnz
pusha
out
pop
ss
out
popa
lret
fldcw
jmp
pop
cmc
mov
es
sbb
mov
lock
pop
inc
jne
shlb
cs
cmpsl
enter
enter
cmp
inc
shll
mov
mov
je
cmp
lea
mov
mov
lds
sbb
xchg
xchg
dec
stos
icebp
inc
jp
jecxz
pop
fldenv
sub
je
mov
add
dec
fsts
aaa
into
pop
mov
dec
or
iret
push
xchg
mov
ds
out
outsb
stc
je
mov
lcall
or
dec
push
inc
mov
jg
lahf
adc
sub
fistl
cltd
call
lds
pop
int3
mov
les
dec
cmp
shlb
dec
cli
adc
aas
leave
dec
sub
cmc
ljmp
in
pop
popf
hlt
lret
or
adcb
push
cmp
jb
mov
call
fwait
inc
inc
xchg
pusha
xlat
pop
int3
sbb
ret
movsb
pushf
daa
out
push
mov
cmpsb
dec
jge
es
push
sahf
xchg
mov
pop
and
xlat
movsb
ja
and
mov
imul
or
enter
dec
outsb
sarl
jg
sub
xchg
jle
loopne
and
sub
mov
in
leave
pusha
lcall
fstpl
cmp
in
cmp
pop
mov
dec
xor
mov
xor
lea
push
cmpsl
pop
push
stc
nop
jge
or
sahf
pop
out
inc
push
mov
mov
fidivs
rorl
push
mov
js
jnp
rcll
sahf
fnsave
fs
sub
divps
mov
test
es
loopne
and
push
sbb
les
pusha
mov
fistl
push
ds
sahf
or
punpckhdq
xor
out
xchg
filds
mov
sub
push
mov
dec
cld
adc
ss
jecxz
ja
cmp
or
iret
push
inc
jl
std
rcrb
rorl
stos
and
cmp
lret
jnp
xor
in
push
insb
das
xor
jl
lahf
popa
pusha
push
sti
movsl
data16
mov
bswap
and
mov
imul
imul
mov
cmpsb
add
mov
add
outsl
loop
mov
jge
inc
jne
mov
jl
lods
ljmp
xchg
pop
clc
mov
and
lods
outsl
xor
xlat
xchg
and
jno
aad
inc
mov
xor
in
clc
sub
dec
mov
out
int3
push
out
popf
adc
dec
mov
nop
mov
cwtl
cmpsl
xor
cmp
cwtl
aaa
or
inc
xchg
jecxz
lock
jle
pop
or
pop
dec
clc
test
sbb
jle
stos
cmpsb
jns
clc
andb
imul
insb
fdivl
or
jae
push
jmp
lret
bound
mov
jb
bound
into
in
push
push
int
mov
adc
call
fldenv
add
pop
je
into
movsl
xor
int
lock
inc
inc
cmpsl
fildl
scas
jae
dec
xchg
inc
mov
jp
data16
push
das
sti
and
je
insb
xor
fidivl
pop
gs
icebp
push
jno
sbbb
in
in
jge
xchg
push
fxch
sbb
jbe
arpl
dec
xchg
jb
mov
insb
cmp
mov
in
mov
lods
js
in
test
scas
and
sbb
pop
repnz
lcall
mov
stos
mov
movsl
push
inc
mov
call
dec
lea
insl
cmp
outsl
cmpsl
push
mov
imul
loop
outsl
xchg
push
xor
inc
pop
sbb
nop
pushf
jp
push
nop
or
lcall
inc
popf
pop
jle
dec
push
mov
shrb
hlt
or
addr16
pop
lock
dec
out
jge
xchg
xchg
adc
sti
or
jno
cmp
xchg
push
mov
jnp
int3
lret
add
lcall
inc
dec
and
jle
fldlg2
cmp
pop
cwtl
clc
pop
xor
pop
dec
mov
mov
push
loopne
shr
xchg
insl
sub
sub
and
hlt
xchg
ret
roll
addb
adc
pop
push
jbe
loopne
sbb
sub
sbb
outsl
mov
outsb
mov
sbb
aaa
push
mov
jae
out
lret
mov
push
sbb
xchg
loope
pop
jmp
stc
leave
xchg
cmc
mov
subl
cmc
sbb
add
movsb
cmpsl
aad
jb
enter
sahf
jle
rcrb
fidivs
int3
sbb
sti
xchg
sti
cmp
std
ret
fwait
ja
lahf
sub
xchg
push
inc
arpl
movsb
dec
and
cmp
cli
adc
cmp
ficoml
mov
mov
inc
clc
pop
jg
mov
mov
fsub
out
mov
mov
hlt
sub
test
and
add
testb
das
shll
std
sbbl
inc
add
xchg
add
push
xor
sbb
fcmovu
in
int3
out
add
inc
in
lcall
popa
in
xchg
sub
std
jb
mov
jl
push
push
or
xor
mov
cmp
jbe
rclb
pop
ds
and
ljmp
push
aaa
je
and
lods
lcall
push
cli
push
push
in
lds
pop
push
dec
not
scas
and
inc
scas
in
pop
out
lret
cmpsl
ljmp
cmp
mov
shrl
lock
orb
cli
mov
jecxz
les
and
in
jp
jo
lea
aaa
in
or
xchg
cs
mov
imul
mov
les
ja
sbb
arpl
add
sbb
outsl
into
xor
out
pop
push
pop
add
repnz
sub
push
clc
popa
ficoml
sub
xchg
and
jmp
mov
push
jecxz
loope
adc
mov
mov
in
movsl
je
pop
stc
adc
pusha
jnp
jl
or
dec
mov
sti
or
daa
lcall
mov
mov
adc
or
fmull
scas
rorl
mov
imul
cmp
push
xchg
sbb
idivb
mov
pop
push
cmp
int
pop
jno
out
cmc
adc
pusha
pop
xlat
mov
jb
adcl
jo
repz
test
bound
sbb
fdiv
pop
clc
sub
hlt
aaa
push
test
cltd
cli
mov
mov
call
mov
mov
mull
out
movsb
in
sti
clc
push
cltd
movsb
das
sub
movsb
xchg
pop
lock
lret
mov
and
xchg
or
popf
pusha
data16
popf
scas
pop
push
mov
jle
cmc
cmpsl
icebp
ds
out
insb
std
xchg
lcall
lds
push
bound
stc
adc
jge
mov
insl
dec
loop
add
in
xchg
loope
add
jmp
pop
fisttpl
enter
sbb
aam
test
mov
fnsave
push
add
jg
xor
enter
cmp
inc
imul
repnz
mov
std
out
sti
jg
mov
mov
add
mov
cmc
paddd
out
push
sti
shrb
clc
jae
xor
enter
sbb
xchg
lret
vpcmpeqb
xchg
jns
adc
pop
imul
and
ret
jle
rcl
ds
in
pusha
and
pop
mov
mov
or
add
sbb
dec
je
adc
jecxz
rcrl
fiaddl
daa
add
lret
lods
mov
and
repnz
dec
sti
dec
stc
popf
jb
cmpsl
push
repnz
inc
enter
mov
jp
inc
int
inc
aas
mov
sahf
mov
xchg
cs
xchg
add
lcall
call
scas
mov
xor
sbb
mov
adc
xchg
add
mov
clc
dec
mov
cmp
iret
lret
lret
pop
jns
pop
fisubrs
xchg
shr
lods
lds
or
dec
dec
dec
lea
xor
vpunpckldq
cwtl
or
fnclex
mov
mov
sub
pop
jnp
pop
mov
jnp
sahf
lds
add
pop
mov
mov
add
notb
cld
fldenv
inc
fidivs
inc
mov
loopne
test
shrb
repz
movl
cmpsl
inc
aam
sub
mov
push
insl
hlt
pop
mov
inc
mov
mov
scas
gs
add
fs
push
sbb
or
lds
xor
in
dec
jno
dec
lahf
sub
mov
lcall
pushf
in
inc
dec
loope
nop
push
in
shl
jo
pop
fnsave
daa
mov
enter
pop
sbb
cmp
icebp
jae
fisubl
inc
mov
pop
stos
in
scas
inc
adc
repnz
xor
aas
add
inc
cmp
jp
or
repnz
sbb
lcall
and
mov
xor
jl
cmp
push
and
push
in
pop
push
mov
jno
jge
xlat
nop
in
push
push
hlt
sbb
mov
adc
mov
movsl
and
jnp
pusha
cwtl
pop
cmp
test
dec
fnstenv
imul
and
mov
mov
sbb
repnz
sbb
popl
arpl
ret
lds
repz
mov
in
subb
lret
or
adc
cmc
and
add
mov
inc
cltd
cmp
loope
clc
push
jmp
xchg
aad
fcomps
pusha
jmp
and
insl
or
aaa
jl
add
cmp
mov
push
divb
andl
imul
hlt
inc
repnz
mov
jg
into
popf
rcrl
cmpb
dec
pushf
cmpl
dec
push
cmp
pop
and
rcll
sbb
mov
inc
cs
mov
ljmp
call
dec
or
or
inc
lret
push
sbb
xor
daa
inc
mov
dec
pop
cmp
idivb
imul
sahf
popf
lods
das
outsb
sbb
shr
jmp
andb
pop
ljmp
ljmp
popa
dec
loopne
cmc
pop
fisttpll
addr16
pop
inc
adc
jmp
iret
push
push
int
icebp
cmp
int3
sub
pop
shlb
pop
repz
clc
imul
jmp
inc
dec
sahf
dec
sub
sub
vpavgb
imul
sub
mov
pop
jecxz
push
mov
test
mov
fsubl
sub
add
daa
in
rorb
in
xor
fwait
div
jle
mov
sub
xorb
cmc
call
in
adc
movb
adc
int
mov
pop
cmpsl
lea
mov
popa
aam
popa
insb
rcll
sub
lret
jl
dec
jne
in
push
leave
jp
gs
fwait
pop
cmp
icebp
dec
dec
inc
mov
subl
cltd
int
mov
jge
sbb
push
jge
into
scas
ss
add
arpl
fdivs
adc
mov
arpl
and
pop
push
push
out
cmpsl
cmp
jns
enter
rcrb
xchg
es
xchg
aad
cmpb
pop
addr16
addr16
outsb
cltd
fisttpll
push
stos
cmpsb
mov
adc
aam
lret
push
inc
mov
or
in
adc
mov
aad
jg
popa
pop
and
fiaddl
jo
negb
xor
xchg
lea
loopne
sahf
push
jno
inc
jns
lods
pop
movsb
and
jns
sub
addl
dec
dec
vmwrite
pop
addr16
orl
rcll
inc
outsb
dec
pop
push
jnp
clc
lret
movsb
add
es
sub
out
jne
popf
inc
pop
mov
adc
loopne
push
xor
arpl
inc
xor
xchg
jno
in
inc
inc
push
test
cmp
lods
dec
or
scas
scas
xor
mov
in
and
dec
xor
fcmovb
cmp
ss
out
divb
add
es
inc
xchg
pop
into
pop
loop
out
sub
cmp
mov
inc
pushf
cmpsb
adc
lds
imul
mov
popf
bound
mov
lds
ds
mov
jb
outsb
push
or
fsubl
jmp
xchg
pop
sub
dec
aam
lahf
add
pop
cld
mov
xor
loopne
adc
xchg
mov
stc
mov
add
pop
push
add
push
mov
xchg
in
icebp
jmp
dec
jmp
mov
xorb
lods
rorl
sbb
repz
in
je
into
xor
mov
popf
pop
cmc
call
imul
inc
lods
add
add
test
scas
push
adc
ja
pop
fwait
mov
jnp
aaa
lds
fistpl
sbb
shl
sub
push
repnz
iret
stos
push
pop
pop
mov
shll
int
bnd
movsl
push
mov
aaa
clc
push
pop
cmpsb
in
scas
xor
push
push
aam
jbe
sbb
lods
and
mov
aaa
clc
ss
stos
icebp
sub
mov
mov
jbe
fmull
fyl2x
enter
iret
mov
test
cmp
push
notb
shl
adc
out
sti
cmp
pop
cmp
ficoml
pop
cltd
scas
fdivrp
popf
xor
adc
stos
jne
cmpsb
int3
sub
int
xor
out
imul
mov
sbb
mov
push
in
push
jle
in
jle
push
add
xchg
jle
test
cmp
jg
lea
mov
test
inc
add
mov
fwait
movsb
sarb
or
push
add
jge
inc
fcompl
jl,pt
call
sbb
pop
cmc
xorl
xor
fldenv
add
xchg
push
xchg
sbb
mov
enter
outsb
pop
or
je
jnp
add
sub
sbb
mov
or
ds
push
add
cmp
sub
inc
xchg
out
sti
adc
out
out
rolb
dec
imul
rol
test
push
push
cmpps
outsl
adc
add
std
push
ljmp
cmpsb
dec
cmp
enter
xchg
test
cmpsb
jb
add
add
pop
imul
adc
or
jne
mov
xor
xchg
lods
sti
dec
scas
mov
sub
cli
pushf
loope
mov
cmp
popl
sahf
push
popl
lods
je
es
shlb
adc
int
mov
xchg
dec
out
frstor
xor
adc
ss
or
fcoms
pop
and
mov
ss
push
add
cmpsl
xchg
mov
dec
pop
pop
subl
fdivs
xchg
mov
sbb
jg
dec
test
lods
testl
jg
mov
movsb
pop
mov
mov
or
and
call
adc
jecxz
cmp
or
inc
fmull
jle
mov
xchg
or
pop
pop
repz
sub
andb
out
out
adc
js
jne
mov
push
loopne
or
ds
push
jae
notb
gs
inc
jne
sahf
mov
jge
pop
push
in
push
mov
lea
iret
frstor
jecxz
push
xchg
orb
shrl
push
fisttpll
mov
mov
push
mov
sub
xchg
aad
fsqrt
not
xor
xchg
push
sahf
rol
inc
cmpsb
leave
jns
fisubl
loopne
test
and
js
xchg
push
cmp
das
dec
aam
mov
or
lret
and
pop
insb
rclb
loope
xlat
daa
ljmp
icebp
ja
das
out
data16
hlt
ss
cltd
xor
ljmp
cltd
pop
aam
mov
push
fs
filds
insl
xchg
dec
dec
pop
lods
jnp
pusha
mov
cmp
xchg
rcrl
data16
mov
or
sub
mov
xchg
mov
repz
push
mov
pop
out
mov
and
xor
enter
jmp
jecxz
pop
mov
add
xor
cld
mov
pop
dec
pop
ds
jp
and
dec
pop
sub
adc
jmp
cmpsb
xor
and
mov
sti
cmpsb
mov
cltd
xchg
imul
xor
xchg
loop
popa
lock
orl
push
lahf
sbb
push
mov
subl
nop
in
call
inc
push
negl
movsl
mov
fistpll
es
icebp
mov
dec
ret
xor
cmc
imul
ficomps
movsl
lds
push
mov
push
sbb
into
or
mov
jge
es
leave
jae
jg
lock
cmp
push
mov
mov
jl
sti
lods
cmpl
mov
push
cmpsl
sahf
lds
mov
sub
dec
ljmp
mov
push
jb
mov
xchg
push
mov
ret
movsl
push
shrb
push
cmp
aad
adc
mov
in
xor
in
test
add
mov
outsb
shll
cmp
popf
insb
iret
inc
pop
mov
idivl
aaa
xor
lds
fiaddl
mov
out
clc
test
xchg
movsl
repz
sahf
push
popf
iret
repnz
loop
add
leave
in
jne
mov
adc
push
or
daa
or
mul
dec
jecxz
pop
lea
jnp
push
lahf
add
in
xor
sub
mov
sbb
sub
int3
dec
test
and
cltd
push
fsubl
add
popa
xlat
outsb
xchg
std
add
mov
and
jecxz
insl
inc
nop
stos
mov
add
ljmp
int3
adc
jnp
and
sbb
push
sub
push
ret
xchg
push
outsb
mov
stc
mov
shl
call
jge
fisttpll
leave
mov
sbb
mov
bound
sub
mov
int
fists
jo
cmp
push
xlat
arpl
imul
adc
scas
shl
aas
movsb
cmc
mov
jl
inc
jmp
pop
cmp
test
pop
pop
icebp
js
sti
movsb
subl
jg
pusha
inc
popl
inc
and
push
jne
movsb
mov
sbb
push
sti
repz
xchg
mov
xchg
faddl
dec
pop
inc
add
lods
cs
inc
gs
xor
mov
stos
dec
cmpsl
fdiv
stos
add
mov
xchg
shrb
add
sbb
pop
add
jnp
movsl
loopne
aad
jmp
bnd
aas
test
leave
testb
xchg
mov
test
mov
xchg
sub
jnp
cwtl
sbb
out
mov
mov
clc
rolb
push
std
into
pop
addr16
fucomp
jle
adc
adc
je
rorl
jns
fs
add
fwait
sahf
xor
aaa
push
fwait
mov
and
xchg
push
stos
pop
xchg
or
daa
ljmp
adc
mov
pushf
iret
jbe
test
fnstsw
adc
shr
push
out
cmpsb
je
sub
fsubrs
movsb
jg
mov
or
ljmp
call
in
xchg
fcoms
cld
rol
lock
out
xor
and
pop
repz
out
int3
cmp
pop
pop
rorb
add
dec
out
repnz
push
sbb
ds
jp
jo
jge
mov
dec
sub
dec
cmpsb
test
setp
hlt
movsb
je
and
dec
pop
push
mov
pop
mov
movsl
or
or
testb
xchg
xchg
adc
fidivl
inc
dec
fldenv
adc
jmp
pusha
jl
rclb
dec
repz
cmp
dec
push
test
ret
sbb
ret
mov
repz
sbb
cmpsb
mov
cli
test
add
xorb
in
jp
adcb
es
in
jbe
pop
fldenv
push
cmp
mov
mov
and
test
les
ljmp
push
inc
jo
call
fidivrl
xchg
fdivrs
jb
leave
test
in
repnz
ror
push
popa
sbbl
ret
movsb
imul
adc
adc
gs
xor
popa
aas
push
mov
shll
fs
dec
pop
cld
jns
push
cmc
inc
jle
mov
mov
jecxz
xchg
push
dec
fwait
arpl
cwtl
shl
cwtl
dec
and
xlat
mov
jo
push
mov
mov
push
mov
mov
pop
jge
in
ja
outsb
jl
and
jbe
sarl
mov
ret
or
out
lds
mov
insb
add
frstor
xor
push
movsl
lds
or
mov
mov
mov
stos
mov
push
pusha
jle
pop
push
fs
daa
ret
pushf
test
daa
mov
xchg
add
jle
sub
int
inc
pop
hlt
jne
add
xchg
pusha
pop
lods
js
fisubs
pop
pop
push
push
es
xor
loope
adc
ret
pusha
xor
adc
imul
or
scas
push
pop
jg
xorl
stos
jbe
fisubl
push
add
ljmp
inc
repz
jle
pop
mov
hlt
adc
leave
sub
xchg
jb
cwtl
fisttpl
pop
loopne
push
mov
test
faddl
xchg
repnz
ret
sbb
aam
xor
dec
fistl
mov
sbb
data16
sahf
cld
dec
cmc
xor
fidivl
inc
mov
jmp
in
mov
fistpl
hlt
pop
mov
imull
scas
imul
jnp
in
xchg
inc
fwait
iret
sub
fcomi
mov
inc
xchg
je
cmp
mov
cs
xchg
lds
pop
push
inc
xorl
mov
leave
cmc
les
outsb
pop
cmpsl
mov
lds
repz
aad
sbb
jae
and
or
mov
f2xm1
xchg
sbbb
xor
pushf
or
ljmp
or
xor
jl
bound
mov
jbe
xor
test
mov
cmp
int
test
nop
gs
ja
jo
adc
shlb
jnp
jne
add
je
bound
push
shlb
std
xor
stc
mov
pop
in
jle
inc
fisubrs
inc
pop
adc
inc
pusha
xchg
xor
ret
add
sbb
les
mov
jge
xlat
ljmp
mov
scas
mov
adc
adc
or
mov
loope
adc
fcmovnu
xor
pusha
aad
xchg
jae
out
enter
push
call
lahf
aad
and
outsl
jle
push
mov
mov
fstpt
insl
or
out
add
dec
inc
not
aam
sub
movsl
icebp
ficoml
sub
push
xlat
dec
stc
or
adc
xchg
jae
mov
out
es
and
pop
enter
clc
cmp
adc
sbb
xor
insb
xchg
mov
or
fcoms
jl
insb
dec
call
push
enter
in
pop
inc
and
add
pop
pop
mov
sub
fbld
loopne
out
cwtl
in
std
dec
mov
fidivrs
xchg
or
adc
mov
add
test
inc
insl
sub
mov
scas
xchg
dec
sbb
jb
xor
aas
lret
mov
andb
and
or
adc
repz
xchg
push
jae
iret
mov
xlat
mov
cmp
mov
and
sub
data16
mov
jno
cmp
dec
ds
cmpl
mov
imul
jmp
inc
inc
and
sub
or
into
repz
lcall
imul
popa
mov
cmp
sub
roll
stc
movsb
mov
xlat
pop
ljmp
stos
mov
call
xor
test
es
pop
repnz
data16
jns
lea
sbb
xchg
mov
xchg
push
in
ds
mov
pop
mov
into
nop
daa
and
xor
push
mov
imul
mov
or
cmpsl
int
jle
jecxz
popa
and
or
decl
cwtl
imul
loope
ss
orl
push
lock
cltd
es
inc
in
js
shlb
repz
add
pop
lret
sub
outsl
add
test
movsl
mov
mov
xchg
mov
lock
scas
pop
and
lahf
and
stos
stos
mov
ret
mov
fsubl
call
or
push
sub
les
addl
ljmp
in
cmpsb
and
jbe
sub
adc
hlt
mov
ljmp
jle
mov
and
leave
pop
inc
ja
hlt
mov
mov
adc
inc
arpl
scas
inc
push
xorl
lcall
sahf
clc
xor
popf
cld
lcall
repz
fld1
xor
xchg
adc
shl
sub
xchg
push
or
leave
mov
jmp
aaa
sub
dec
pop
pop
stos
pop
xlat
fisubrl
out
test
xchg
imulb
add
lds
ret
es
in
pusha
inc
dec
icebp
dec
shlb
mov
fs
negl
lret
mov
popa
adc
dec
and
scas
jb
leave
cmpsb
sub
icebp
adc
xchg
mov
shl
hlt
pop
or
lahf
test
sbb
xchg
push
adc
xchg
inc
in
push
cmp
cmpsb
movsl
xor
aam
pop
push
jae
pusha
mov
push
shl
mov
enter
addr16
int3
jg
les
pusha
dec
mov
jno
dec
shlb
xor
cmp
xor
xor
les
stc
iret
xchg
xchg
mov
cmc
xor
sbb
call
scas
aas
in
sub
sub
clc
mov
push
xchg
fldt
push
or
dec
add
sub
aam
add
or
in
jno
ss
lods
inc
ljmp
xlat
mov
orb
mov
cmpsl
ret
mov
sub
ds
xor
mov
and
xchg
pop
pop
popa
clc
push
cmp
popf
dec
and
test
data16
xchg
aas
fsubrs
dec
fwait
stc
jl
ret
loopne
and
iret
pop
outsl
add
pop
imul
jns
and
pusha
pusha
push
in
and
es
aad
repz
hlt
cmp
aas
jb
jl
mov
pop
cmc
dec
scas
ret
arpl
pop
outsb
test
mov
jne
repz
mov
fnstenv
push
push
pop
add
test
jl
mov
push
insb
and
jp
add
dec
cmpsl
or
mov
xchg
lret
push
jge
mov
dec
add
add
dec
and
jle
push
ds
pushf
xor
and
cmpsb
sub
leave
pusha
aaa
mov
out
sbb
pop
jb
adc
sub
inc
in
sub
testl
push
sarl
repz
dec
loopne
scas
mov
mov
ljmp
xorb
push
sarl
or
stos
add
mov
sub
in
or
mov
popa
decl
movb
xchg
pop
scas
je
loopne
lock
loope
das
out
inc
sahf
xchg
adc
dec
add
mov
push
rcrb
js
popa
or
icebp
ds
jle
stos
pop
js
nop
jno
sahf
ss
lods
or
jnp
pushf
sub
push
outsb
cmpsb
sbb
push
into
lret
cld
out
fisubs
lock
xchg
sbb
xchg
sub
mov
cmp
mov
int
scas
ja
aas
pop
shlb
cwtl
add
sbb
or
mov
mov
dec
addb
shrb
adc
jae
lahf
in
mov
bound
adc
clc
jne
bound
sbb
stos
xor
aad
rcrb
cld
mov
ret
hlt
cmc
jecxz
xor
jns
dec
popa
cmp
hlt
inc
sbb
inc
jg
push
xchg
test
pop
loop
pushf
or
enter
arpl
jp
arpl
and
cltd
mov
mov
add
cmp
mov
adc
xor
into
jl
push
scas
in
sub
adc
cltd
in
pushf
addr16
in
cwtl
daa
mov
lea
stc
jns
stos
and
cmp
pop
push
push
xchg
inc
lock
mov
lret
mov
dec
inc
fdivrl
arpl
pop
cltd
cmp
mov
sbb
daa
mov
scas
xchg
mov
in
hlt
jae
lds
aaa
lods
mov
mov
call
jae
outsl
push
push
xchg
add
in
lea
jge
add
movsl
mov
dec
sbb
not
shrb
pop
popf
mov
into
sbb
dec
mov
jp
lods
and
subl
jge
xchg
sbbl
cmp
rcrb
inc
leave
repnz
es
lret
ja
jmp
test
and
daa
sbb
cmpsb
cs
jge
aam
adc
or
loope
addl
add
mov
jno
bound
jae
xchg
sub
ja
int3
pop
mov
mov
push
shrb
ds
mov
ret
inc
add
cmp
mov
ficoms
fdivrl
sarb
repnz
fwait
cmp
add
cltd
in
pop
jnp
mov
fdivs
cld
mov
xchg
incb
mov
and
sbb
lods
or
insl
adc
lahf
sub
loopne
lods
insl
addr16
sahf
hlt
lods
cmp
xchg
mov
pop
and
sub
push
scas
xchg
fwait
ss
mov
bound
mov
testl
mov
cmc
lahf
icebp
lret
loope
or
cmpsb
mov
lahf
fcmovb
mov
aad
pop
ret
sbb
pop
and
jl
push
shlb
add
int
inc
cwtl
mov
pushf
and
pop
flds
pop
push
fisttpll
xor
enter
cmpsl
lock
lret
lods
inc
std
ficoml
mov
mov
xchg
scas
nop
daa
loopne
imul
jb
addr16
push
call
ds
and
mov
loopne
nop
push
cmc
xor
cmp
pop
mov
rol
adc
cmp
mov
dec
mov
pushf
cli
clc
lock
ficoms
mov
loopne
divb
ljmp
enter
and
dec
xor
mov
mov
ret
inc
pop
outsb
cs
mov
ja
xlat
xor
int
mov
repnz
repz
jp
add
fcmovnb
std
gs
dec
pop
adc
mov
cwtl
cld
lcall
stos
lahf
cmpsl
loopne
fstl
leave
es
mov
push
or
sti
test
cltd
mov
and
mov
cltd
loope
fld
ss
inc
pop
mov
je
sub
roll
xchg
mov
sbb
popf
shlb
sbb
pusha
insb
call
push
add
sbb
add
mov
inc
je
cli
pop
sub
lds
pop
test
mov
rorb
cmp
push
je
xor
cwtl
das
pop
push
fwait
xor
fstpt
pop
fwait
xor
jo
mov
testl
inc
push
and
xor
into
sbb
loope
jae
pop
cmc
aas
lcall
aaa
mov
aaa
negl
xor
mov
mov
mov
pop
fisubs
out
addb
sbb
in
das
xchg
pop
cld
xchg
lods
test
cmpsl
push
into
sbb
dec
lcall
push
cmp
cmp
inc
in
cmpl
pop
rorb
xchg
mov
icebp
in
and
mov
add
cltd
sbb
push
inc
cmp
adc
jo
cwtl
xchg
mov
pop
ds
call
sarb
jbe
icebp
lret
and
out
gs
test
push
jecxz
andb
mov
jno
and
or
clc
and
mov
push
rorl
push
push
push
lret
jbe
add
orl
or
std
in
pop
repnz
and
adc
sub
popf
pop
xor
pop
mov
pop
aaa
mov
push
and
mov
int3
into
add
mov
mov
xchg
mov
aam
sbb
inc
xor
testb
cmc
andb
stos
fwait
cmpsl
mov
cmc
adc
mov
sbb
cli
ficoms
add
loop
pop
test
orb
xor
and
xor
lcall
adc
repnz
jmp
adc
inc
lock
and
jno
scas
adcb
inc
xor
movsb
jnp
cwtl
clc
and
add
or
leave
push
popf
je
into
mov
mov
rcrl
push
pop
xchg
jbe
sbb
ret
pushf
inc
mov
setp
mov
inc
or
aaa
ficompl
scas
mov
loope
addr16
add
lods
aaa
sub
js
test
cmc
sbb
xchg
pop
mov
fs
mov
inc
jnp
repnz
into
push
hlt
jns
add
and
sbb
outsb
xchg
shl
fwait
dec
jne
dec
test
into
testb
sbb
sub
loope
into
dec
in
stc
sbb
pop
in
add
popf
into
jo
js
sbb
jns
xchg
pusha
jmp
lods
cld
gs
clc
xchg
push
xchg
sub
xor
lock
adc
data16
pop
pop
jp
inc
mov
pushf
mov
clc
fiadds
add
mov
movb
cmp
jecxz
cmp
sub
pop
mov
rcrb
sbb
sub
std
or
pop
std
ja
lock
or
mov
push
xor
adc
jl
pushf
pop
push
xchg
and
push
sbb
clc
fnstsw
pop
sbb
in
jge
lock
pop
add
aad
es
aad
icebp
cltd
mov
mov
push
xchg
gs
pop
popf
push
insl
xor
sub
sbbb
stos
fwait
icebp
pop
test
mov
cmp
in
xchg
push
cltd
dec
repz
jnp
cmp
lcall
and
inc
gs
jb
or
leave
sbb
pop
xchg
aaa
or
out
push
popa
mov
pusha
adc
pop
push
jne
stos
jle
and
out
aas
js
push
shrl
add
push
lds
sbb
pop
subl
push
pop
mov
mov
ror
fistps
sbb
and
jp
in
repnz
and
ds
sbb
push
int
jne
in
out
push
in
sbb
cmpsb
lret
imul
xor
sub
mov
repnz
rclb
movsl
add
pop
or
jg
out
test
pop
mov
inc
in
xchg
sti
leave
leave
and
mov
aas
jmp
jmp
std
shr
addb
insl
aad
or
pop
mov
pop
jae
leave
add
popa
xor
cli
or
stos
lods
jle
aaa
int
es
inc
inc
jp
xor
xor
stos
xchg
xor
enter
fwait
mov
dec
push
add
fs
gs
stos
xchg
mov
outsb
aam
jbe
cmp
and
movsl
test
add
dec
mov
arpl
aas
jne
out
fbstp
loop
bound
push
and
mov
mov
xor
enter
sub
sbb
jb
shr
and
add
or
mov
push
popa
int
cmp
dec
sbb
jb
cmp
jae
push
adcb
and
jnp
jb
setbe
enter
push
or
pop
out
icebp
pop
pop
push
xchg
icebp
xor
test
inc
stos
sub
or
fdivl
rorl
add
xor
mov
pop
lret
mov
ja
inc
inc
stc
es
js
inc
push
mov
add
cmp
test
lods
jmp
fbstp
or
or
mov
fists
inc
mov
sbb
xchg
or
fidivl
int3
test
push
jg
fcomp
sti
jne
int3
push
pushf
addr16
out
data16
dec
lret
jmp
fwait
es
mov
popf
xor
insb
mov
mov
popa
outsb
push
add
pop
sub
or
scas
je
mov
mov
or
mov
mov
jmp
sbb
vpacksswb
rcrl
lods
jo
into
inc
pop
ja
fstpt
mov
decl
ret
mov
add
test
push
subl
fwait
ljmp
mov
das
mov
push
sbbl
cmp
aaa
lahf
cs
push
dec
mov
sarl
imul
out
xchg
mov
fsubrs
add
cmp
xchg
fs
insl
js
mov
orb
rcrl
shrb
pop
and
xchg
dec
mov
out
sahf
add
xor
and
data16
mov
inc
fildl
outsb
or
sbb
out
f2xm1
scas
inc
xchg
dec
xor
mov
xor
and
push
pop
out
push
mov
add
dec
xlat
repz
rolb
aam
pop
mov
aas
aam
repnz
daa
push
xor
inc
and
inc
xchg
add
dec
add
popl
mov
mov
dec
les
ret
in
jecxz
in
sbb
xchg
cmc
cmp
jecxz
ss
jmp
push
sub
xchg
shrl
dec
pushf
ja
shl
cmp
xchg
aas
inc
push
repnz
sbb
xor
sub
cmpsb
pop
add
push
fisttps
aaa
loopne
fildll
imul
add
fisubrs
and
lret
lds
loop
add
inc
mov
mov
or
in
jecxz
push
xchg
and
out
popf
nop
sbb
into
jp
dec
cmpsl
fstpt
xor
lcall
das
jb
aad
lahf
mov
out
lahf
pop
adc
sbb
inc
fcmovnb
in
arpl
andb
mov
mov
cmp
lods
push
sarl
mov
pop
and
test
rclb
adc
stos
repz
dec
ss
push
loop
adc
aad
add
cld
aas
mov
ds
pusha
mov
pop
enter
inc
mov
fs
in
ja
and
add
jns
and
sbb
add
jno
dec
fiadds
xor
je
out
rorl
enter
jbe,pn
pop
sahf
pop
insl
sub
cmp
ss
mov
cmp
addr16
into
sub
sbb
daa
sbb
push
sarl
popa
xchg
jl
pop
loopne
pop
adc
mov
rcrl
add
add
insb
js
ss
and
pop
je
lret
lret
ss
jb
lahf
rcrb
aam
subb
xor
popa
add
cmc
icebp
clc
xorb
cs
aad
inc
and
imul
mov
add
pusha
adc
ja
pusha
xor
pop
out
xchg
dec
xchg
bnd
pusha
jge
pop
cmc
in
jae
inc
push
jge
aaa
gs
aas
dec
mov
rcr
adc
mov
adc
fidivrl
test
mov
jg
push
xchg
pop
sbb
test
cmp
pop
int
lods
fwait
enter
cmp
in
inc
fistpl
hlt
call
add
fcmovbe
imul
lock
dec
icebp
ret
hlt
adc
mov
lcall
into
inc
push
arpl
fisubl
repnz
pusha
lods
das
lret
xor
test
jmp
lods
iret
pop
pop
jl
ret
cwtl
mov
jl
loope
or
mov
shl
fcmove
fnsave
pop
sar
aaa
sti
push
out
pop
pop
jecxz
adc
xchg
inc
in
mov
es
xchg
xor
icebp
es
call
test
xchg
shrb
mov
add
outsl
cs
mov
pop
pop
mov
mov
push
iret
ret
inc
leave
pop
pop
aaa
cmp
xchg
test
mov
stos
out
pop
cli
sub
les
scas
jl
inc
inc
sub
add
adc
test
xor
inc
sub
jbe
inc
mov
xlat
ja
mov
jge
fstp
push
sub
xor
pop
mov
or
and
test
sti
es
sub
inc
bound
aas
mov
int3
lret
gs
aam
nop
ss
dec
inc
daa
mov
jne
inc
push
adc
mov
pusha
fwait
cmpsl
cs
mov
mov
push
cvtdq2ps
popa
decb
repz
call
mov
inc
mov
je
pusha
xor
xchg
lods
inc
adc
sbb
ds
and
shl
cmp
je
test
mov
lds
sbb
pop
mov
cmp
xchg
idivb
sbb
adc
xor
dec
test
push
lods
jle
adc
xor
sub
je
sub
outsl
imul
fucomp
xor
in
sbb
push
fmuls
and
and
mov
fnstenv
fs
fwait
pop
push
int
nopl
dec
mov
xor
jl
sti
in
fcompl
cmp
ljmp
mov
push
and
daa
mov
mov
cwtl
cld
jae
cmp
frstor
adc
ja
mov
adc
cmp
scas
popf
cwtl
push
sbb
xor
xor
push
xor
cmp
rcr
jle
xlat
mov
mov
jmp
push
lea
sahf
push
je
or
mov
loope
lret
and
dec
rcrl
xchg
rorb
push
push
cmp
dec
pop
jmp
add
loopne
jecxz
loope
push
jmp
and
cli
ss
push
popf
inc
cwtl
pop
cld
mov
jbe
aas
cmpsl
jle
lcall
adc
pop
inc
xchg
xor
mov
mov
jmp
jo
in
mov
pop
sarb
jg
pop
pop
enter
mov
stos
sub
lcall
out
push
fisttpll
andb
and
jnp
mov
ja
cld
xchg
ret
je
xor
xchg
inc
stos
out
push
fs
or
xor
lea
cmpsb
push
cmpsb
notb
bound
imul
nop
fdiv
inc
push
repnz
negb
cld
cmp
lcall
jne
xor
mov
insb
fdivl
subb
dec
or
adc
mov
int3
jne
jb
push
inc
pop
and
and
adc
mov
je
jno
lods
and
rcll
ror
sub
jb
popa
sub
mov
jnp
adc
rclb
inc
inc
cmp
popa
xchg
gs
push
dec
fisttpll
mov
mov
xlat
outsb
lret
mov
inc
out
fcomip
mov
in
out
sbb
mov
or
insl
fdivs
and
jno
or
adc
push
cltd
loopne
lret
push
mov
in
mov
aaa
push
or
xchg
out
lods
nop
gs
inc
xor
mov
mov
add
or
cmp
xchg
shrl
sbb
jecxz
icebp
aam
dec
in
jbe
sti
pusha
arpl
je
mov
sbb
outsl
jle
adc
cmp
mov
mov
push
sbbl
hlt
and
aam
sub
sbb
push
adc
adc
mov
or
clc
into
mov
jns
fsubr
jecxz
in
decb
fisubrs
shrl
into
sbb
sbb
sbb
pop
xor
jle
icebp
out
inc
fabs
ljmp
popa
decl
ja
xor
adc
in
lret
lret
push
into
lret
cmp
mov
fldl
push
xor
shlb
test
sub
cmpsb
decb
bound
fistpll
fnstenv
inc
jle
lret
xor
mov
fisubrs
push
push
sbb
and
out
inc
sub
pop
mov
pop
cs
test
mov
sti
fwait
in
mov
jbe
clc
mov
cmp
imul
test
xchg
dec
test
psadbw
pop
sub
lods
gs
sbb
cwtl
cli
out
push
cltd
pop
enter
sub
cmp
scas
mov
out
push
aad
xchg
cmp
call
and
pop
fdivrl
jno
bound
jne
mov
or
stos
bound
mov
rcrl
push
clc
loop
test
push
jecxz
insb
push
outsb
add
rcrb
pop
sahf
mov
mov
rolb
sub
adc
lret
or
testb
push
or
xchg
dec
fnstcw
sbbb
iret
sub
pop
outsb
test
test
pop
cmpsl
mov
pop
pop
push
call
fsubrl
clc
lds
push
add
mov
xchg
push
xchg
pop
mov
and
pop
xchg
scas
mov
icebp
xor
push
cwtl
arpl
jbe
stos
sbb
pop
ja
in
test
adc
fwait
inc
cmp
arpl
loopne
sub
sahf
add
fnstsw
and
adc
mov
mov
mov
xor
ret
movl
mov
fbstp
lock
pop
ljmp
pushf
cli
shrl
and
add
repz
scas
pushf
and
cmp
pop
jp
inc
xor
imul
out
mov
dec
or
mov
fcoms
lock
or
inc
push
mov
stos
adc
repnz
pusha
add
jns
addr16
es
in
int
pop
push
hlt
lds
push
add
insl
imul
lea
lcall
xchg
gs
pop
enter
sti
xchg
fstps
lods
sahf
mov
adcb
inc
adc
mov
mov
cmpsb
sbb
pop
insb
aad
adc
call
popl
inc
push
sub
jp
outsl
addr16
xchg
mov
lret
cmp
or
xchg
dec
xchg
outsb
scas
ja
xorb
shlb
in
adc
inc
push
push
movsl
jno
cmp
mov
test
add
filds
shll
sbb
mov
jb
cmc
imul
jo
lcall
lods
cmc
adc
lock
loop
adc
xor
fsubrs
addl
pop
les
js
pop
in
aam
addr16
cltd
loope
es
call
mov
pop
cwtl
fs
pop
int
sub
ror
or
jbe
jne
sub
mov
or
xchg
jl
ss
out
adcl
ret
inc
stos
mov
xlat
repz
jp
push
pusha
xchg
xor
negl
push
or
repnz
mov
dec
push
shrl
mov
cmp
loopne
cmp
lods
cmp
nop
xor
dec
movsl
hlt
and
movsb
lea
xor
testl
lret
cltd
sahf
push
aad
jae
sub
mov
dec
scas
xor
lahf
out
sbb
jo
pop
lock
mov
repz
ja
adc
jns
fbld
mov
testb
out
repnz
and
xor
aaa
ret
adc
pop
jp
hlt
push
in
and
out
cli
das
std
ret
in
ss
ss
cli
pop
pop
lret
fnsave
rcl
mov
inc
cmp
jb
dec
sub
insl
xchg
aad
hlt
xor
sub
dec
and
push
addr16
leave
adc
daa
icebp
xchg
add
mov
or
cmc
mov
aaa
add
mov
in
lods
stos
sub
xor
xchg
scas
sub
xchg
dec
icebp
or
rcll
pusha
jl
sbb
or
scas
rorb
inc
pop
outsb
cmpb
out
ja
ret
cmp
jb
dec
fdivl
push
fpatan
addr16
jne
jg
rcrl
cmp
mov
pop
dec
mov
sbb
add
ss
and
xchg
cmp
outsb
popa
bound
and
xchg
push
lods
mov
mov
and
jnp
cmc
push
mov
and
pop
pop
xor
into
inc
xor
hlt
dec
sbb
sti
shrl
fwait
repz
inc
fisttpl
mov
xlat
mov
mov
push
adc
xor
mov
mov
test
fwait
push
cmpsl
sbbb
data16
out
sbb
jle
lods
xchg
adc
or
aam
pop
outsb
fwait
ss
sbb
mov
aam
nop
or
mov
data16
mov
push
or
int
xlat
test
xchg
cmpsb
popa
popa
stos
rolb
movsl
jl
les
iret
dec
sbb
into
inc
xlat
adc
jnp
pop
inc
pop
cmc
jge
push
jb
sub
xchg
xchg
inc
mov
ja
jle
sbb
sub
xchg
push
inc
out
stos
jg
mov
sub
dec
mov
jnp
das
out
loop
push
push
in
aam
xchg
jnp
jb
dec
ja
std
xchg
cmpsl
xchg
xchg
sub
sbb
dec
loopne
inc
or
mov
push
push
scas
shll
jmp
loopne
mov
sub
push
cmp
ds
repz
pop
lds
cwtl
or
xchg
jae
shrl
fisttps
clc
lods
sbb
push
adc
aad
add
cmp
dec
ret
filds
mov
icebp
insl
push
daa
jo
cmpsb
mov
pop
cmp
inc
bound
cmp
loop
lods
mov
jnp
fmul
or
push
jno
cltd
movsb
icebp
pop
cmpl
jne
sub
lods
xchg
mov
into
jb
cld
dec
in
inc
movsl
dec
push
out
pushf
aaa
push
imul
outsl
out
dec
jecxz
and
outsb
std
lret
and
xor
add
xchg
xor
into
fistl
shrb
ret
push
pop
pop
cmp
or
push
cmpsb
sbb
jmp
xor
stc
lock
imulb
std
xchg
sbb
cltd
adc
ret
lods
dec
push
inc
inc
fdivl
cmpsl
out
std
inc
mov
scas
call
or
sbb
ss
pop
xor
add
shll
add
mov
aam
shr
xlat
repz
inc
in
add
loope
mov
imul
jne
test
cmp
cmp
mov
sarl
add
xorl
nop
mov
in
xor
lret
xchg
inc
shrl
dec
iret
xor
adc
mov
push
imul
movsb
adc
add
mov
ret
push
in
add
cmp
rol
xchg
xchg
xor
cmp
xchg
push
lods
jecxz
into
mov
popl
stc
test
xchg
pop
and
outsb
mov
xchg
xchg
fimuls
sbb
jge
fidivrl
pop
push
or
out
push
sbb
lods
mov
inc
xor
mov
xchg
mov
fs
xor
jne
sbb
adc
pushf
mov
sub
cmp
jne
dec
pop
mov
cmp
add
aam
dec
push
rorl
call
ja
mov
jnp
movsl
enter
adc
shl
adc
xor
outsb
xor
adc
scas
sbb
das
pop
cmpsb
inc
scas
pushf
lock
inc
cltd
xlat
mov
jecxz
pusha
mov
mov
sub
ds
in
mov
dec
mov
cld
pop
pop
imul
add
sbbl
mov
mov
xchg
in
pop
negb
xor
mov
pop
pop
addb
incl
pop
mov
inc
fldlg2
sbbl
or
popa
test
jnp
ret
mov
mov
in
push
mov
imul
and
xchg
adc
push
das
sub
pop
mov
and
cmpsb
push
movsl
imul
xor
mov
repnz
mov
sbb
es
ds
jecxz
sbb
mov
cld
imul
pop
shl
dec
test
and
popf
push
xchg
sar
sub
fcompl
les
xor
insl
arpl
stos
add
jno
test
push
faddl
mov
dec
test
jle
fadds
in
int
daa
mov
cmpsb
xchg
mov
adc
std
cwtl
call
jo
lods
cmp
orl
xchg
fstpl
stos
ljmp
icebp
mov
mov
push
ds
ja
xchg
sub
mov
lock
or
hlt
adc
outsb
push
push
jne
push
int3
mov
adcb
pop
sbb
les
mov
sub
inc
sbb
add
cmp
mov
lret
cmp
sub
or
inc
push
xchg
mov
cmp
cli
xchg
jnp
pop
push
adc
xor
push
wrmsr
pop
fadds
fisubs
xor
jae
fdivrs
inc
inc
jmp
sub
fdivrs
mov
push
inc
mov
mov
insb
mov
or
mov
or
int
jg
out
cli
and
mov
adc
lods
add
pop
bnd
ss
movsl
jle
mov
ret
std
jb
adc
push
ret
pop
inc
or
das
das
adc
scas
xchg
mov
cmp
sub
jecxz
fsubs
shr
aam
dec
xor
lret
jb
jp
cwtl
cld
xchg
mov
jns
fwait
sti
push
stc
and
fsts
adc
out
in
add
cmp
sbb
aad
mov
stos
cmp
pop
ror
shl
stos
sbb
les
sbb
dec
shlb
fistps
mov
je
call
aaa
push
cmp
mov
psubsb
mov
sub
jne
loop
shll
pop
push
cmpsb
mov
mov
cwtl
lret
push
sti
stc
pusha
add
iret
std
xchg
mov
popf
push
mov
icebp
scas
fdivrl
imul
cmp
call
sbb
adc
insb
fdivrl
bound
xchg
mov
and
xchg
aad
scas
sbb
add
lret
mov
icebp
sarb
mov
sbb
lea
xor
push
mov
or
mov
jl
lahf
mov
stc
aad
aad
and
push
mov
movsb
dec
repnz
sbb
incl
popf
or
sub
decb
std
adc
or
cli
cmp
sub
cmp
rclb
or
jb
cmp
jl
dec
andl
cmp
aad
xchg
nop
imul
fistpll
in
inc
into
adc
push
dec
jecxz
inc
mov
xchg
mov
pop
cmp
lret
test
int3
adc
jo
sub
push
pop
das
ret
call
int
mov
jge
dec
and
jge
cmp
movsl
sub
sbbl
dec
sub
repnz
cld
push
ret
es
jbe
dec
test
shl
cmpsl
push
leave
lret
sahf
rcr
cmp
push
mov
or
xor
test
xor
ret
aad
loope
pusha
adc
stc
push
imul
push
movsb
xor
xchg
push
daa
or
cld
xchg
sbb
js
xchg
repnz
xchg
pop
adc
adc
ss
int3
ret
xchg
add
jmp
sbbb
test
sub
pop
ret
int3
ficomps
mov
xor
test
jl
aad
mov
aas
negb
cli
mov
lret
add
pop
loopne
mov
push
add
inc
inc
mov
aad
insl
sahf
push
inc
add
daa
add
inc
mov
ljmp
mov
fstpl
sub
mov
sub
pop
loope
push
adc
lret
divb
cli
lret
pop
jecxz
in
arpl
cwtl
movsb
cmp
mov
dec
daa
xor
ja
mov
cmp
stos
push
scas
and
test
aaa
or
sub
pop
insb
mov
add
xchg
shl
nop
add
popa
dec
and
jbe
in
in
dec
aas
adc
cmp
and
aam
ffree
hlt
and
test
in
jno
mov
dec
xor
push
mov
dec
aad
add
lea
and
mov
cmp
icebp
outsb
popf
icebp
mov
adc
dec
nop
movsl
repz
fmul
insb
fists
sbb
mov
xchg
nop
jo
mov
jbe
std
cmpl
test
repnz
lock
and
mov
or
scas
xor
mov
dec
in
jp
xlat
imul
dec
shl
sbb
mov
sti
sub
dec
popa
xor
stos
fmul
mov
sahf
jb
pushf
loop
ficompl
mov
sbb
dec
scas
daa
jno
call
adc
sbb
xchg
dec
fldcw
test
ss
cmp
push
sbb
or
shr
jl
pop
lahf
mov
dec
or
sahf
pop
movsl
rcl
xor
loop
xor
aam
sub
push
mov
ljmp
das
xchg
pop
lahf
sbb
mov
xchg
inc
adc
jnp
push
addl
cmc
jl
xor
pop
lods
xchg
fdivl
decb
jecxz
mov
repz
pop
or
xlat
clc
pop
aad
lahf
cmp
jle
mov
rcr
jno
fwait
rep
int3
ret
das
or
or
xchg
xchg
fnstcw
sub
fcomps
decb
xchg
xchg
or
adc
aad
push
arpl
data16
jbe
fcoms
fsubr
das
ds
fdivl
fdivrp
xchg
sbb
les
dec
mov
iret
std
xchg
or
imul
ret
movsl
push
hlt
mov
adcl
push
mov
testb
popa
add
loopne
and
xor
scas
ds
jle
loope
add
push
rcll
clc
adc
pop
repz
mov
sub
mov
pop
ljmp
push
dec
xor
xchg
mov
pop
not
or
and
sub
sbb
stc
rclb
int3
jbe
jge
jmp
test
mov
pop
imul
add
or
ficompl
push
mov
inc
arpl
lods
je
push
xchg
int
pop
jb
insl
test
inc
cmp
daa
mov
pop
scas
sbb
sar
and
push
sub
dec
loope
pop
out
nop
or
mov
aad
xor
jns
dec
fwait
rcll
in
adc
pop
das
inc
cltd
mov
out
mov
and
sub
out
jmp
invd
pop
fisttps
and
aad
inc
pop
add
jbe
cmp
push
xchg
adcb
stc
pop
sti
lcall
cmpsb
sbb
adcb
push
fsubrs
mov
cmp
ror
xor
dec
dec
int3
and
add
fs
jge
adc
sbb
xchg
jle
dec
cs
das
lret
jbe
push
xchg
sbb
lret
sti
and
clc
xor
nop
pop
cs
popl
add
shlb
test
or
ret
push
cmp
push
outsb
xor
or
push
xchg
cli
nop
mov
mov
int
outsb
test
aam
std
dec
pop
push
jmp
data16
cld
xor
ret
pop
and
int
mov
call
orl
js
and
dec
fdivr
fadds
xlat
sti
xchg
or
adc
push
mov
cmp
add
scas
cmc
xor
push
pushf
leave
js
cmp
dec
mov
add
cmp
mov
lret
jb
repnz
pop
adc
push
pop
popa
mov
cmc
and
xor
idivl
cmp
in
stos
jae
cmp
or
or
dec
arpl
adc
and
outsb
push
sbb
or
dec
mov
popf
sub
fwait
xor
adc
cmp
cmp
pop
ljmp
xor
scas
movsl
pop
sar
repnz
shrl
das
rorl
pop
pop
xchg
out
sti
cmp
xor
inc
lret
arpl
xchg
movsb
fbld
shlb
out
pusha
pop
jge,pt
or
cmp
test
arpl
or
mov
ret
push
inc
lahf
mov
fsubr
movsl
in
mov
ja
add
sub
popf
jne
push
aaa
in
fs
hlt
mov
leave
das
sbb
xor
cmp
sbbl
outsl
in
repz
pop
xchg
jnp
clc
insl
or
out
iret
stos
push
or
movsb
lods
sbb
cmp
mov
push
fwait
xor
shrl
mov
clc
xchg
out
scas
ja
or
icebp
xor
cmpsl
cmp
jecxz
fucomip
decb
stos
in
in
sub
sbb
mov
push
inc
sub
in
movsb
fnsave
xor
push
mov
int
mov
pusha
dec
adc
into
jnp
psrad
xor
xchg
in
bound
push
shrb
outsl
shll
movsb
mov
out
pop
repz
roll
add
call
sahf
sbb
dec
dec
sahf
lods
dec
cmp
and
sub
or
lcall
pop
adc
xchg
xchg
mov
arpl
js
xor
push
cmp
movsb
inc
mov
jno
and
ds
hlt
mov
cmp
pusha
fdivrs
jns
xor
xchg
fs
cwtl
out
push
sbb
mov
jl
sbb
sub
cmp
xor
insb
xor
jmp
mov
jno
dec
out
add
dec
lods
ss
loop
cmp
pop
jno,pt
jo
push
jne
and
dec
bound
daa
clc
or
dec
jae
adcb
fcmovnb
mov
fisttpll
jg
into
gs
mov
in
js
push
lea
sbb
stc
mov
jmp
pop
mov
adc
nop
pcmpgtd
xchg
xor
lret
adc
fxch
sahf
test
shr
xchg
scas
cwtl
and
add
adc
jne
mov
getsec
sub
add
es
jae
mov
cli
push
mov
rcl
add
xor
pop
cwtl
loope
movsb
mov
dec
daa
xlat
adc
pop
jnp
adc
rol
pushf
in
sbb
ss
sub
mov
loopne
gs
xchg
xchg
dec
pushf
mov
sbb
pop
push
fdivrs
jae
cmp
notb
mov
test
push
xor
aam
cld
add
cltd
dec
test
jp
jle
jle
mov
mov
in
add
xor
inc
inc
loop
fistps
mov
push
iret
fisubs
xchg
mov
adc
rcll
add
movsb
pushf
nop
call
call
xor
mov
push
push
lret
inc
inc
lds
push
test
clc
inc
out
les
jecxz
inc
gs
push
testb
fbstp
adc
cmp
mov
push
fildll
or
jae
inc
push
jb
mov
ss
jg
shlb
xchg
sub
fmull
mov
fdivl
xor
bound
inc
call
adc
gs
insb
xor
cltd
bound
cltd
cmpsl
pusha
mov
add
gs
sahf
fisttpl
arpl
es
adc
cmp
int
mov
dec
jae
sub
jb
dec
add
push
leave
fnstenv
lock
fstps
jp
divl
lods
push
js
scas
scas
outsl
ret
cmp
outsb
cmp
cmp
cmp
adc
lds
sbb
subl
pop
outsl
nop
add
in
sbb
cmpb
jno
cmp
pop
jecxz
mov
call
sbbl
pop
inc
icebp
dec
mov
jg
sti
out
cmp
sub
pop
aas
movsl
dec
dec
cmp
push
dec
and
xlat
pop
push
mov
movsb
pop
shrb
mov
adc
inc
hlt
aad
cmp
jg
gs
push
enter
int3
xor
scas
popf
insb
in
sub
cli
pop
int
sbb
mov
movsl
push
inc
cmc
mov
mov
testl
xchg
shrl
cmpsb
jne
add
sub
fistl
jp
xor
enter
or
in
mov
cmp
and
loope
jnp
or
cltd
xor
decl
rol
add
push
aad
test
sbb
fwait
insb
push
mov
push
pop
hlt
insl
inc
fimuls
clc
aaa
in
movsl
fdiv
mov
jbe
and
scas
push
jae
push
or
test
and
push
sub
cmp
push
pop
adc
and
jne
pop
cmp
jb
sbb
push
inc
fildl
adc
push
add
cmc
mov
enter
fcoms
and
adc
dec
and
loope
inc
push
les
outsl
incb
sub
jle
and
enter
fdivrl
mov
jle
scas
jg
inc
mov
popf
ljmp
mov
bound
mov
andl
dec
or
jnp
lea
lds
sbb
add
ret
inc
sahf
mov
push
and
sub
xchg
inc
ljmp
stos
add
xor
mov
pusha
stc
std
sub
xchg
cmp
fisubrl
aaa
lret
push
jb
xchg
sbbl
fldcw
cmp
add
push
or
mov
in
out
dec
popa
and
xchg
mov
mov
iret
cmc
pop
cld
pxor
mov
orb
push
or
inc
inc
shl
jae
popf
stc
cld
mov
lea
je
leave
out
mov
push
cs
push
scas
bound
mov
rorb
movsl
mov
lods
lds
pop
mov
lret
xchg
add
or
popf
mov
jg
fadds
jecxz
xchg
pop
and
or
pop
add
mov
testl
and
sub
push
inc
inc
xor
lret
sbb
dec
lock
pop
lret
xlat
push
push
out
inc
or
or
mov
std
jl
push
lods
jno
add
dec
jl
ret
sub
and
mov
dec
inc
fisubrs
bound
pop
pop
fiaddl
mov
fmuls
popf
hlt
xor
in
mov
inc
mov
cmc
dec
add
popa
mov
divb
hlt
adcl
and
dec
arpl
inc
aad
cmp
mov
pop
jb
scas
inc
mov
sarl
xor
ret
call
test
lods
sbb
hlt
inc
pop
jle
gs
sbb
jne
mov
sub
imul
lods
push
fdivs
sbb
rcll
call
dec
cmp
rcr
or
xchg
dec
popl
pusha
ret
hlt
push
mov
push
add
repz
add
cmpsb
push
cmpb
call
xchg
xchg
int
iret
ds
sbb
push
dec
aad
out
cmp
adc
inc
test
sti
shl
aam
sbb
sub
ret
fildll
scas
fidivrs
sbb
mov
fiaddl
shlb
scas
xor
xlat
cmpsb
ret
push
xor
sbb
rol
ja
jne
xorb
lds
negl
jae
je
dec
mov
fucom
testl
jp
cltd
mov
and
imul
bnd
cmpsl
and
das
sarl
lock
jmp
add
clc
cmp
push
pop
mov
fbstp
or
or
es
push
push
out
mov
aam
xchg
pop
lahf
mov
inc
call
ja
aas
outsb
pop
push
xchg
sub
cmpsb
push
xor
jg
push
inc
pop
jg
cmp
js
lods
jo
push
cmp
sbb
dec
xor
rorl
push
sub
mov
mov
std
icebp
jp
es
add
je
xorb
or
stc
push
outsl
aad
aad
stos
jne
or
mov
jb
enter
movsb
jmp
push
sub
push
jo
test
pushl
xchg
and
pop
adc
cmp
pop
lds
loop
push
xor
add
sti
fwait
in
andl
sbb
sbb
cmpsl
scas
sahf
pushf
js
mov
mov
shlb
int
imul
sbb
mov
lret
jae
jp
ljmp
addr16
push
inc
pushf
sub
sti
sarb
data16
ljmp
cld
xor
leave
sbbb
inc
ljmp
stos
jne
cmpsl
sbbb
cmc
jle
les
pusha
sbb
aad
es
popa
jae
les
pop
jmp
insl
fldl
clc
push
sti
lcall
pop
jmp
cli
cltd
jg
in
cmp
pop
jno
add
xchg
movsb
or
mov
cmpsl
adc
inc
mov
pop
rcrl
adc
sbb
subl
fsub
sbb
movsb
out
push
inc
push
inc
testl
mov
or
sbb
add
sub
pop
pop
pop
iret
inc
insb
mov
xchg
dec
out
fsts
dec
dec
or
test
and
rcrl
ja
sub
arpl
mov
cmp
ljmp
iret
or
mov
xor
xchg
or
sub
xor
mov
pusha
inc
sti
adcl
push
pop
cmp
rol
jae
mov
testb
push
xchg
inc
sbb
es
push
xchg
insb
insl
in
inc
scas
mov
mov
lret
mov
stos
mov
and
stos
xor
in
pop
fwait
sbb
pop
shrb
adc
ret
fs
inc
pop
and
subb
jo
movsl
adc
sbb
pop
jae
stc
and
jg
ret
jl
insl
lret
xchg
sbb
cltd
movsl
hlt
dec
or
add
cmp
out
xor
sahf
in
mov
movsb
add
insb
cmp
cwtl
pop
xor
jnp
bnd
lahf
cmc
testl
pop
subb
pop
andb
or
rcll
xor
scas
popf
xor
jne
shrl
add
in
cmpsb
lock
je
lahf
and
dec
xor
test
lods
inc
fimuls
cld
stos
push
sbb
dec
popf
scas
push
inc
addl
inc
lea
aas
dec
xchg
lods
sbbl
mov
fs
cltd
pusha
loope
lret
jp
je
enter
xchg
lods
xchg
mov
jb
cmc
ja
jl
js
push
lods
test
xor
sub
cmp
or
jae
xor
sub
sub
dec
js
adc
mov
arpl
jno
mov
xor
mov
ret
inc
mov
add
jb
xor
shl
dec
out
fs
in
rorb
je
mov
xlat
xchg
jbe
lcall
add
sub
mov
dec
arpl
xchg
mov
cwtl
lods
inc
or
icebp
pushf
pop
pusha
add
sub
or
push
xchg
sub
movsb
scas
and
push
aam
mov
dec
mov
sbb
cmp
frndint
pop
in
rolb
sbb
outsb
loopne
adc
xchg
out
xor
cltd
shll
push
push
repnz
sbb
enter
xor
adc
dec
push
and
pushl
or
das
repz
imul
pop
sbb
test
adc
add
sbb
xor
mov
loop
jae
cmp
dec
call
dec
cli
ljmp
fsubrl
pop
dec
and
scas
sbb
lea
in
aaa
jbe
mov
test
cvtpi2ps
pushf
lret
mov
je
ja
mov
enter
push
in
add
cmpl
stos
stos
inc
daa
dec
mov
pop
les
popl
pop
or
jl
mov
jl
mov
mov
lds
dec
sbb
mov
fildll
adc
fwait
xor
repnz
cmpsb
cld
ret
mov
fsubs
test
or
cmp
push
addb
sbb
push
loopne
pop
incl
sbb
mov
mov
cmpsl
ret
adc
jecxz
mov
jge
inc
into
xor
fisttpl
sbbb
jle
jl
ss
mov
fiadds
data16
test
push
gs
mov
jl
daa
xor
test
and
adcb
pop
out
mov
or
repnz
pop
adc
in
cmp
cld
inc
lea
out
and
dec
xor
popf
and
push
call
and
enter
cli
xchg
std
lcall
xorb
or
push
xor
jmp
ret
test
push
out
leave
mov
cmp
dec
jecxz
lods
outsl
popa
add
cmp
jle
or
push
stos
jae
sub
shll
pushf
ret
xor
pop
and
insl
add
ret
pop
scas
in
inc
push
jne
hlt
mov
andl
mov
sub
lds
in
scas
notl
or
mov
pushf
lar
or
adc
int3
mov
cmp
sub
xchg
jle
mov
fwait
loope
add
and
push
fiadds
mov
data16
adc
in
and
inc
cmp
stos
mov
push
aad
test
pop
fld1
jmp
jbe
out
mov
push
and
out
dec
dec
xrelease
sbb
call
xor
fs
lods
push
push
xchg
cli
fcmovnu
xchg
mov
test
pop
and
jle
sub
lea
dec
das
push
mov
imul
xor
cmp
xor
fidivrs
daa
xchg
ja
pop
mov
fistps
mov
mov
jo
outsb
rcrl
jge
cmp
jo
arpl
xchg
add
pop
pop
jne
cs
mov
loopne
fwait
into
pop
xchg
in
push
iret
aaa
pop
loop
lock
and
pushf
adc
cld
or
xor
lret
push
push
mov
push
jmp
push
add
xor
inc
pop
sbb
daa
outsl
pop
cmp
add
inc
idivl
dec
mov
add
shll
and
lds
mov
and
mov
adc
cmp
push
fdivrl
sbb
ss
fidivl
push
mov
add
pop
sbb
or
leave
inc
mov
ror
movb
jge
outsl
ljmp
orb
mov
push
adc
test
imul
sbb
loop
popa
mov
clc
and
rcl
ds
add
jg
add
call
inc
stos
sahf
and
mov
mov
mov
jmp
orb
aaa
into
sub
nop
jmp
push
jp
fcoml
test
xchg
cmp
add
add
movsb
push
popa
clc
inc
sbb
jg
mov
outsl
mov
in
inc
punpckldq
xlat
jae
lea
dec
cmp
xor
mov
dec
xor
push
sub
jecxz
or
rorl
rorb
fldcw
hlt
test
dec
cmp
pop
orl
fnsave
mov
add
mov
loop
jge
in
hlt
icebp
ljmp
jno
jo
es
xchg
mov
mov
in
or
dec
push
mov
and
test
aad
lods
sub
loop
into
lea
sbb
mov
arpl
lock
js
subl
mov
icebp
out
clc
xchg
int
jl
mov
cwtl
adc
ljmp
mov
icebp
into
popa
push
dec
fld
pop
pop
scas
nop
and
mov
les
mov
out
cmpb
aas
mov
mov
shr
xor
lahf
pop
or
imul
mov
pop
imul
sarl
fcoms
mov
xchg
outsb
xor
cs
push
lock
pop
sbb
push
mov
pop
mov
addr16
mov
xchg
mov
inc
mov
fidivl
xchg
sti
fs
imul
leave
int
bound
xchg
xchg
add
jne
js
sti
xchg
test
sub
mov
mov
mov
push
mov
dec
pop
mov
push
popf
push
inc
push
fisubrl
xchg
stc
inc
and
cmp
cwtl
gs
adc
mov
push
push
shrb
lcall
aad
xor
or
mov
loopne
inc
sahf
das
push
js
and
and
or
mov
nop
ljmp
lea
xchg
in
jp
cmp
push
xchg
les
test
cmpsl
in
js
dec
scas
or
in
mov
cmp
adc
dec
jo
fwait
mov
mov
in
loop
ja
add
add
pop
rclb
inc
out
sbb
sub
js
jge
jns
sbb
ds
lret
sub
ficoml
or
in
push
loop
xorb
mov
inc
xchg
add
cmpsl
sbb
adc
xchg
sub
pop
call
xchg
outsb
lcall
jle
jno
stos
add
lahf
adc
cltd
cmpsl
insl
test
rorl
icebp
jecxz
repz
sub
mov
mov
pop
outsb
sbb
loope
sarb
pop
cmpb
push
mov
push
iret
es
push
push
pop
loop
jmp
and
and
sar
mov
test
jbe
std
mov
adc
sub
pop
ds
ljmp
jno
ret
lret
jae
fsts
and
or
jl
xchg
insb
fcoms
sbb
repz
lret
sub
sub
sbb
mov
enter
pop
pmulhw
mov
loop
fsubl
sbb
mov
ss
sub
mov
test
jns
mov
rcrb
iret
addb
in
das
or
fisttpl
sbb
nop
or
cmp
cwtl
jecxz
push
and
xor
or
cltd
jge
mov
pop
mov
lret
daa
jo
test
mov
push
xor
xchg
or
dec
mov
stos
xchg
or
sub
test
jne
jmp
push
pop
mov
cmp
pop
idivl
orb
jl
clc
pop
shrb
xchg
mov
pop
jp
pop
dec
dec
insb
hlt
sbb
or
pop
cmpsb
push
lret
and
sarb
out
jo
cli
ja
push
jbe
xor
scas
lock
and
xor
inc
fsubrs
push
adc
clc
cwtl
pop
imul
dec
cmp
incb
outsb
sub
out
mov
scas
push
addb
push
xchg
inc
jg
mov
mov
repnz
adc
in
sub
pop
dec
je
in
push
xchg
ja
add
xchg
jmp
and
imul
lods
jle
inc
jae
shld
jp
sbb
sub
in
dec
lahf
inc
or
inc
mov
rorb
test
dec
cmp
push
jmp
and
mov
or
add
std
and
out
mov
sarb
out
movsl
pop
out
sbb
lahf
sub
dec
cmp
adc
repz
into
and
cmp
jmp
clc
inc
mov
xlat
icebp
ss
cltd
std
sar
add
cmpsb
int
cld
push
xlat
jae
or
adc
dec
inc
pushf
xor
arpl
cmp
pop
cltd
std
data16
fbld
js
jmp
adc
mov
sbb
cmp
int
adc
popa
inc
mov
popf
mov
dec
pop
jns
das
sbb
xchg
out
jns
cmp
dec
xchg
and
mov
cmpsb
cmp
push
push
aaa
adc
mov
scas
jp
ljmp
cmp
mov
xor
adc
mov
lcall
lea
inc
pop
sbb
int3
dec
pop
jp
or
fisttps
add
call
cmpsl
add
sub
cmp
sar
xchg
mov
adc
cmpsb
data16
sub
imul
lcall
lds
in
inc
mov
das
fs
adc
xor
push
add
mov
cmp
cmp
mov
sbb
outsb
lds
das
cmp
insb
add
pop
mov
fcmovu
data16
dec
lock
popf
jo
add
ffreep
mov
mov
lahf
mov
clc
cli
mov
out
xchg
sub
les
and
repnz
mov
xchg
pop
leave
cwtl
add
xor
or
pop
imul
dec
sub
je
into
insb
js
lahf
aam
pop
or
sub
rcl
mov
aas
lret
xor
xor
pop
ljmp
xor
rcrl
stc
dec
popa
cmp
add
out
add
es
pop
sbb
pop
sahf
xor
jmp
aad
xchg
cmpsl
mulb
mov
out
nop
xor
inc
stos
ds
sub
and
push
imul
imul
icebp
pop
sub
in
mov
and
push
push
sub
jbe
inc
inc
imul
add
mov
jno
fucomp
add
and
xchg
xchg
push
mov
repz
fildl
dec
leave
fiadds
mov
xor
inc
popa
call
in
mov
push
dec
pop
jecxz
jnp
mov
stos
adc
dec
pusha
ss
andb
xor
scas
pop
push
imul
or
sbbl
hlt
repnz
loope
pop
push
and
sub
and
dec
jmp
xchg
test
push
ret
cli
jge
lea
fdivr
cmp
xchg
sahf
fdivr
out
xchg
or
subl
dec
jle
mov
or
sub
xor
daa
inc
cli
push
mov
jns
or
sub
push
scas
aaa
push
popf
inc
sti
arpl
mov
pop
adcb
bound
sti
test
add
outsl
cwtl
add
mov
nop
imull
ja
sbb
es
jmp
cld
stc
orb
adc
add
mov
or
pop
push
inc
fcomps
insb
hlt
pop
cmpsb
sub
xchg
ja
enter
ss
rorl
jg
xchg
and
adc
in
sbb
scas
dec
adc
jno
cmp
cmp
rcll
mov
ljmp
jge
and
sbb
cli
aas
dec
fidivrs
jb
xorl
sar
mov
mov
lock
js
adc
sbb
hlt
gs
pushf
inc
pop
mov
sbbl
mov
movsl
imul
add
push
aas
xor
inc
dec
adc
and
cld
fnstsw
fs
cwtl
or
xor
in
ret
jl
stc
or
imul
aas
ds
pop
outsl
dec
pop
lds
shl
adc
in
ja
inc
push
sub
ret
xor
hlt
clc
dec
popf
or
cs
jns
pusha
sbb
fstpl
aam
jle
mov
inc
out
jae
testb
jl
adc
cmp
ret
movsb
stos
mov
mov
lods
jo
jns
pop
jmp
inc
hlt
jmp
inc
in
fldl
call
adc
and
andb
mov
popa
mulb
insl
jae
fisubl
loopne
mov
movsb
repnz
xchg
pop
scas
adc
andl
inc
mov
inc
shll
pop
pop
cmp
ror
gs
push
rol
shll
ret
mov
dec
ret
xor
ss
loop
imul
cmp
pop
rorl
mov
loopne
mov
ja
aad
mov
es
addr16
and
push
pusha
jp
mov
push
sbb
iret
shrl
insl
mov
push
mov
fadds
xor
mov
je
xor
mov
ja
int3
insb
xchg
cmpsl
mov
icebp
adc
loope
push
loopne
call
pop
mov
pop
in
mov
ds
insb
gs
jp
mov
dec
mov
cmp
daa
push
pop
call
adc
ljmp
ss
pop
outsl
shrb
cmp
push
and
jmp
fdivs
cmp
or
leave
cli
pushf
cmp
push
push
in
xorl
mov
scas
repnz
lock
or
daa
and
in
push
mov
popa
adc
mov
pop
pop
pop
cmp
mov
testb
hlt
lret
adc
xchg
mov
pop
inc
push
shlb
int
lea
aam
rcrb
mov
push
sbb
xor
int3
incb
mov
ror
out
and
adc
repnz
cs
xor
shrb
aas
pop
jae
js
dec
and
loope
imul
or
je
or
lret
inc
and
daa
mov
and
mov
insb
mov
cmp
and
fidivl
push
mov
jae
jge
inc
cmp
test
xchg
rcrb
sbb
cltd
mov
setl
or
test
adc
adc
adc
push
mov
pop
loop,pn
idivl
push
pop
cwtl
aaa
pop
test
mov
lcall
mov
scas
mov
sbb
shr
mov
xchg
sub
push
or
add
sahf
les
add
sub
arpl
outsl
add
mov
subl
mov
roll
cld
xchg
fldl2e
jne
push
sbb
test
out
nop
lea
pop
lock
sar
push
arpl
or
dec
imul
dec
mov
mov
lods
xchg
add
bound
xchg
inc
stc
sbb
notb
sbb
lock
xchg
pop
mov
enter
scas
adc
inc
fisubrl
dec
popa
cmp
mov
sub
pop
aam
call
insl
aam
push
sub
or
jge
sub
loopne
fdivl
pusha
fcmovnbe
pop
mov
dec
jl
add
aad
sbb
mov
insb
mov
ltr
inc
repz
arpl
xchg
mov
inc
ljmp
in
test
mov
cli
push
nop
inc
out
sbb
packuswb
xchg
fimuls
getsec
ljmp
and
outsb
or
repz
cwtl
push
clc
and
sbb
adc
pop
arpl
push
cwtl
push
sarb
ffreep
aad
push
mov
inc
pop
lret
xor
pop
loopne
push
adc
in
popa
xchg
lds
daa
je
popa
aam
xchg
fidivrl
add
push
in
sbb
loopne
jge
js
xchg
jmp
out
jl
or
mov
daa
jns
rol
or
adc
cmp
call
bswap
mov
jno
std
xchg
bound
jns
cmp
sbb
and
and
mov
addr16
push
cmpsb
push
ljmp
inc
fcmovb
fwait
cmc
push
orl
jg
shlb
frstor
sbb
jle
and
push
jp
notl
xchg
faddp
sbb
mov
cmpsl
push
xor
stos
inc
std
or
push
jno
loop
outsl
or
lds
dec
mov
inc
pop
sbb
stos
and
lret
xchg
push
sub
daa
loopne
in
sbb
inc
mov
xchg
pop
pop
mov
movsl
mov
pop
repnz
cmp
sarb
fisubrs
insb
cmpsb
push
leave
ss
jl
sub
ret
or
mov
je
jl
cmp
xchg
iret
andb
push
inc
orb
and
neg
jle
dec
xchg
addr16
inc
adc
imulb
sahf
adc
add
in
inc
and
fyl2x
mov
nop
stos
mov
fisubrl
xor
xor
in
push
mov
ret
pop
sahf
pop
dec
sarb
push
ljmp
testb
popf
insb
popf
iret
movsb
or
ja
sub
mov
inc
test
jae
ja
test
lret
sbb
sub
pop
jno
lret
xchg
shlb
pop
mov
inc
sti
movsb
and
xchg
bound
push
dec
loopne
inc
pop
mov
lea
out
xchg
scas
out
xorb
std
addr16
add
lcall
cmpsb
cmp
sub
fisttpll
dec
test
mov
lods
in
push
repnz
dec
xor
out
imul
stc
inc
and
pushf
xor
insl
mov
frstor
fucomp
sti
push
dec
add
pop
bound
sahf
lcall
sbb
lret
lcall
insl
js
cmp
outsl
loopne
push
lahf
test
and
xor
ds
cmp
mov
xorl
aad
lock
or
mov
jns
dec
push
iret
insl
in
xlat
push
sbb
or
aaa
sub
dec
inc
push
inc
sub
pop
xor
jnp
out
lds
cmpsl
ficomps
xchg
lock
pop
xor
sbb
xchg
add
sbb
fsubrs
xchg
cs
and
outsb
cmp
mov
js
or
inc
sbb
ds
js
xchg
loop
mov
jo
sbb
and
sub
dec
inc
inc
addr16
es
lock
add
ljmp
scas
popl
es
or
in
xchg
xor
and
shrl
and
dec
sub
mov
cwtl
hlt
es
insl
repnz
push
negl
cmpsl
pop
mov
popf
add
fcomps
dec
fwait
std
pop
mulb
repz
popa
negl
jge
mov
std
fwait
rorb
xor
popa
jno
popa
push
push
jo
mov
cltd
jo
dec
iret
popf
sti
add
sub
mov
int
jge
push
dec
jp
dec
mov
inc
outsl
rcl
arpl
mov
icebp
testb
sbbb
in
mov
add
pop
cmpsb
lock
push
in
pop
xchg
pop
aas
fistps
pop
xchg
pop
xchg
inc
push
push
dec
arpl
loopne
inc
fwait
and
xchg
cmpsb
stc
inc
pop
jmp
add
jl
sub
mov
sbb
xchg
sub
stc
aam
or
imul
xchg
jae
adc
sub
in
mov
jbe
mov
mov
xchg
mov
int
mov
mov
xor
iret
enter
cmpsl
out
addb
popa
and
data16
js
inc
adc
pop
jp
jmp
xlat
cmpsl
ret
or
lea
mov
or
test
dec
mov
movsb
mov
mov
or
imul
es
fs
xor
inc
mov
mov
xchg
mov
data16
aaa
push
or
rol
data16
div
or
and
push
jmp
xchg
fadds
or
sbb
sbb
lock
cmpsl
jo
adcl
cwtl
js
cmp
outsb
jmp
jl
dec
out
pop
dec
pop
cmp
aas
mov
fmuls
pop
bound
and
lahf
adc
add
lods
ljmp
outsl
xchg
inc
jmp
add
mov
mov
fdivr
push
xchg
xor
cltd
rcl
lret
xchg
cld
addb
out
ss
pop
push
jge
rcrl
dec
int3
mov
dec
repnz
push
inc
cmpb
sbbl
xchg
pop
sbb
xchg
out
sbb
adc
cmp
lcall
hlt
in
or
push
cmpl
ss
bound
sbb
mov
or
jo
test
inc
out
push
add
je
shrb
or
es
std
dec
jbe
push
int
repnz
adc
test
shld
pop
cmp
adcb
mov
arpl
test
dec
push
fcomip
iret
inc
lret
aaa
cwtl
dec
cmp
psllq
push
repz
clc
adc
or
mov
mov
push
inc
pop
xchg
repnz
daa
xchg
sub
pushf
pop
cld
and
adc
inc
lahf
shr
movsb
in
dec
cmp
scas
mov
add
lcall
sbb
sub
cmpsb
cmp
jb
les
subl
fstl
jbe
cli
iret
push
adc
pushf
shl
test
mov
sbb
pop
sahf
jne
jp
movsb
movsb
xor
push
leave
js
aam
xchg
mov
mov
mov
jg
inc
rolb
xchg
push
cmp
out
inc
dec
dec
mov
in
mov
pop
aas
pop
mov
mov
stos
inc
addr16
je
arpl
xchg
xchg
cld
xchg
enter
push
inc
dec
aad
jbe
pop
daa
cmc
js
retw
lret
out
push
xor
andl
pop
aas
and
sbb
stc
cmpsl
push
call
cmpsl
jge
add
mov
push
and
push
push
addr16
dec
hlt
test
jg
insb
mov
sbb
insb
stos
aam
fisttpl
push
dec
shrb
je
dec
test
pop
mov
lock
icebp
or
inc
mov
fxch
loopne
mov
rclb
sbb
pusha
sbb
and
je
mov
add
cmp
inc
pop
mov
and
or
outsl
dec
dec
outsb
pushf
or
xchg
mov
aam
sti
jp
jmp
lret
cltd
insb
bound
test
add
jg
orb
mov
out
adc
icebp
ja
and
je
and
add
shll
jne
mov
push
sbb
push
mov
push
in
addr16
and
fmulp
gs
jbe
pop
ds
push
dec
mov
pop
cmp
push
in
or
ss
pop
pop
push
fcoml
inc
mov
je
fiadds
xchg
mov
es
push
fnstsw
js
push
push
xchg
lret
jbe
loopne
dec
push
popa
cmp
xchg
sub
jo
push
out
xor
insb
and
mov
cmp
cmpsl
mov
ss
cmp
imulb
cmp
lahf
push
loop
jns
xchg
or
sarl
insb
mov
cwtl
jmp
out
cmpl
icebp
inc
xor
mov
popf
ja
scas
and
push
imul
dec
sbb
out
pop
mov
jmp
jno
bound
push
xchg
push
in
push
aam
les
mov
adc
divl
mov
cs
add
hlt
pop
int3
loopne
aad
shll
arpl
dec
lods
pop
or
das
rorl
stc
mov
dec
pop
jl
arpl
dec
xchg
mov
iret
dec
sub
push
pop
mov
jge
mov
in
sbb
mov
xor
test
lods
cmp
jg
mov
je
push
mov
mov
into
daa
push
adc
xor
in
xchg
mov
test
mov
jp
inc
add
inc
push
mov
cmp
fsubl
pop
sbb
lods
push
jle
xor
and
in
cs
lods
dec
mov
mov
nop
cli
push
mov
in
fistpl
pop
fadd
lods
push
xor
addr16
push
pushf
mov
jae
lds
arpl
xchg
cwtl
or
and
hlt
repz
addr16
bound
dec
fsub
clc
jmp
aad
sahf
push
or
ret
loop
test
divb
lods
nop
out
inc
mov
sub
roll
js
in
cmpsb
pop
movsl
and
push
popf
je
shrb
xor
sbb
sub
mov
mov
mov
imul
fildll
repnz
mov
stos
in
pushf
inc
jnp
jnp
mov
insb
pop
movsl
xor
aas
xchg
jge
jbe
sub
addr16
xchg
cs
xor
jns
mov
inc
out
xor
push
popa
push
sub
mov
cmp
jns
jno
mov
add
nop
adc
add
pop
lret
out
fsubrp
and
xchg
jg
mov
sahf
push
icebp
inc
adc
pop
mov
or
std
xchg
cmp
pop
sti
lahf
hlt
insb
lea
sbb
inc
fistl
adc
addr16
addl
dec
and
or
popf
pop
sbb
pop
mov
pop
adc
mov
mov
jne
cmpsl
call
test
and
je
adc
pop
sbb
pop
enter
and
sti
ficomps
xchg
add
loop
add
jo
fwait
loope
mov
pop
aas
adc
inc
popl
cwtl
je
push
jge
pop
ja
mov
mov
aas
mov
and
pop
cmpsl
mov
mov
pop
sti
btr
fs
push
mov
lods
outsb
and
pop
idivl
xchg
in
arpl
or
aam
movsb
jo
dec
ror
aam
jmp
sarl
pop
inc
fcoml
fsubrs
pop
aam
fisubrs
mov
mov
mov
in
xor
pop
jecxz
leave
push
sub
mov
test
fdivrs
in
inc
fsubr
mov
jns
push
stos
movsb
mov
dec
push
mov
or
cmpsl
xor
call
mov
sbb
and
cs
push
aam
xor
popa
xchg
dec
pop
orb
popa
movsb
arpl
fs
lds
xor
and
out
push
enter
pop
mov
sub
jecxz
mov
lret
push
fistl
and
fcomps
xchg
aaa
test
lcall
std
mov
sub
mov
lock
push
mov
dec
dec
andl
sub
pop
dec
adc
or
mov
xchg
sbb
call
sub
dec
jmp
xchg
pop
jnp
imul
ss
sbb
xor
jmp
adc
mov
stos
es
cmc
fdivrs
jmp
enter
aas
dec
es
out
cmp
xchg
mov
cmp
in
cmp
inc
out
psrad
mov
cwtl
ja
mov
scas
pusha
or
dec
mov
shl
lret
sub
add
cs
pop
mov
inc
push
mov
andb
iret
xor
push
ret
push
ja
dec
lret
movsb
repnz
mov
out
stos
mov
pusha
fisubs
addr16
shl
or
jge
jecxz
icebp
xor
stos
sbb
pop
push
daa
lock
or
out
test
mov
fwait
in
or
iret
loope
mov
sub
ret
cmp
add
sbb
pop
lock
mov
xorl
push
lods
adc
jno
xchg
stos
add
clc
lahf
in
push
sub
push
filds
aaa
or
test
loope
mov
add
inc
pop
inc
inc
xchg
xchg
lods
push
and
fsubr
sbb
and
enter
sbb
mov
sbb
aaa
stos
inc
in
fs
mov
mov
scas
push
sub
xor
adc
xchg
jge
test
adc
xlat
jle
dec
and
xchg
std
cmpsl
andb
sub
mov
mov
les
stc
pop
push
push
movsb
test
rorb
jl
cmc
in
push
test
ficoms
stc
je
inc
cwtl
gs
jmp
popf
inc
and
ficoml
test
mov
xchg
push
scas
xchg
pop
aad
nop
cmp
pop
aad
vshufps
dec
sbb
inc
ds
inc
mulb
fsub
insl
icebp
orl
jae
pop
add
cmp
jns
cltd
stos
mov
fsubr
pop
imul
sti
xchg
movsb
das
psubusw
jp
dec
into
ja
iret
rcr
mov
xor
pop
inc
ret
rol
shll
push
sbb
push
dec
in
mov
cmp
dec
add
jmp
push
xchg
jae
pop
mov
pushf
mov
in
cmp
push
push
imul
outsl
push
xor
cmp
mov
lret
movsl
addr16
jmp
push
pop
add
hlt
mov
sub
aaa
es
pop
cwtl
lret
bound
mull
movsl
pop
adc
sbb
mov
adc
jo
push
adc
push
daa
add
and
pop
out
aaa
inc
rol
push
aam
inc
adc
mov
and
fstl
not
sbb
push
cltd
std
or
out
scas
and
shlb
ret
out
push
dec
daa
sub
xor
sbb
aad
fildl
push
imul
gs
scas
jp
mov
dec
adc
inc
lods
lock
xchg
or
jmp
shl
mov
cmp
ds
and
jecxz
fs
pushf
repnz
xchg
mov
ja
push
adc
movsl
cmp
cmpsl
icebp
les
xchg
ret
mov
shrl
mov
pusha
xchg
js
add
push
popa
clc
test
arpl
push
inc
adc
add
mov
lock
mov
xchg
es
aad
cmpsb
pop
pop
dec
fmull
lds
or
repz
xchg
sbb
testb
jne
inc
rcrb
test
rclb
pop
adc
mov
das
xor
in
lcall
jge
mov
pop
jmp
ficomps
bswap
add
clc
or
mov
mov
ror
outsb
sbb
and
aam
ljmp
add
es
loope
or
aas
std
mov
or
cli
lret
js
orl
dec
pop
mov
int
mov
mov
pop
shlb
daa
mov
cmpsb
cmp
mov
lds
xchg
add
call
cmp
cld
cmovge
xor
fcoms
loope
add
fisubrs
push
adc
mov
test
jg
sbb
sub
jge
or
lea
adc
fdivrl
and
push
xor
sub
in
mov
rclb
rcrl
int
out
outsb
imul
cs
xchg
stos
sarb
lds
push
data16
xorl
insl
mov
call
push
cmp
sub
out
stc
adc
push
pop
lret
out
xchg
sub
sbb
neg
mov
leave
and
xor
push
in
imul
adc
and
cltd
sbb
sti
fcompl
cmp
pop
cmp
loope
pop
lock
je
inc
lcall
sbb
pushf
mov
jl
test
shlb
div
aam
xchg
pushf
fidivl
mov
fisttps
xchg
mov
pop
jno
fdiv
mov
cmpsb
mov
clc
fcom
jbe
out
mov
jns
sub
ficompl
add
sbb
sub
leave
cmp
lret
mov
adc
mov
inc
and
dec
jmp
xchg
icebp
or
jle
sahf
call
negl
leave
repnz
aas
stos
push
fsubrl
mov
sbb
push
xor
push
pushf
out
in
dec
pop
dec
jge
imul
adc
jae
push
adc
and
cmp
paddd
shrl
xchg
cmpsb
xchg
inc
mov
in
cmp
ret
das
xor
stos
mov
lock
mov
push
jp
popf
adc
icebp
fisubl
or
insl
add
call
mov
test
scas
sbb
cld
xor
push
aas
mov
rcrb
lret
aam
ret
in
xor
mov
scas
xor
ja
inc
test
je
les
lock
cmp
add
sub
icebp
fmuls
mov
pop
lret
ljmp
cmpl
mov
and
push
mov
xchg
xchg
ja
adc
fstl
mov
clc
rclb
jae
and
in
das
xchg
je
mov
mov
pop
das
push
push
mov
jb
mov
fucomp
insb
jne
mov
adc
ds
das
jo
es
cwtl
fildll
or
mov
jae
cltd
cli
or
cli
or
sarl
mov
jnp
cltd
addr16
aad
push
fwait
xor
loope
leave
xchg
mov
mov
adc
mov
scas
popa
jbe
gs
gs
popf
sahf
subl
xor
pop
notb
jge
outsl
jp
and
push
jmp
cld
jns
aam
pop
testb
xchg
mov
incl
rcrl
cwtl
and
mov
mov
fsub
inc
imul
test
cmc
sbb
aas
sbb
dec
pusha
and
push
adcl
movsl
inc
sbbl
and
out
mov
mov
xchg
in
jg
nop
leave
and
testb
sbb
mov
mov
in
imul
dec
xor
adc
scas
jg
sub
lea
jns
cwtl
ds
xor
xchg
inc
mov
fcmovb
in
cmp
sub
mov
xchg
sub
or
push
cwtl
cmp
cld
aas
out
cltd
pushf
or
add
je
subb
adc
insb
pop
mov
jl
dec
dec
enter
mov
mov
lcall
je
stc
cmp
pusha
xchg
mov
imul
fstpl
test
sbb
lahf
ljmp
adc
jb
inc
outsl
insl
pop
dec
fadds
lea
pop
mov
and
cmpsb
push
cltd
fsubrl
leave
arpl
mov
data16
cwtl
pop
fsts
mov
packuswb
sub
test
cmp
inc
in
pusha
inc
mov
movb
xlat
sbb
shl
ds
clc
jns
sub
and
rclb
jno
insb
pop
inc
lods
add
adc
jbe
into
pop
call
push
movsb
inc
mov
into
fidivl
mov
clc
mov
jb
sbb
xor
leave
add
push
cltd
push
mov
xchg
mov
or
pop
es
mov
xor
bound
and
xlat
inc
mov
xor
xlat
pop
cmp
cld
pop
cmp
cmp
xchg
divl
call
sub
push
arpl
clc
cmp
pop
leave
or
outsl
out
ret
mov
rcll
mov
in
jne
in
lea
push
cmp
test
push
push
jb
das
cmp
lahf
lret
in
cmpb
call
cmp
push
cmp
or
inc
push
jno
mov
sarb
mov
cli
xlat
cli
rcrb
incb
cltd
xchg
cmp
xor
stos
out
inc
adc
addr16
and
addr16
mov
aam
sbb
imul
pushf
aam
push
cmc
xchg
cmp
push
push
fbld
push
das
and
sti
dec
push
push
sbb
cmp
jo
call
inc
mov
mov
mov
push
pop
mov
jb
out
daa
aam
sub
dec
jl
hlt
pushf
jo
dec
stc
and
out
xor
ficoms
dec
add
out
jle
stos
mov
push
enter
dec
icebp
enter
xor
jbe
ficoms
mov
ret
inc
pusha
jnp
jp
or
jg
sbb
ficompl
cmp
imul
icebp
out
sub
sub
call
jb
sub
add
sub
insb
dec
push
push
insb
mov
pop
cli
mov
lahf
test
xor
xlat
sbb
sub
xor
lds
sub
push
imul
icebp
mov
xchg
sub
movd
test
out
fwait
das
mov
pop
add
xor
lcall
out
inc
xor
xchg
mov
jp
adc
pop
jg
push
jb
loope
pop
jns
adc
test
xor
fbstp
jb
or
push
mov
jg
push
in
jmp
int3
arpl
mov
imul
xor
adc
inc
pop
xchg
add
fistpll
fnstsw
push
icebp
in
js
mov
lea
popa
or
imul
sti
cmp
inc
pop
mul
xchg
sbb
adc
aam
mov
and
lods
fmull
sub
dec
mov
jmp
lret
sti
outsl
add
es
test
aas
test
and
push
push
push
mov
ljmp
popa
scas
xchg
mov
cmp
leave
lahf
cmpsl
pop
pop
popa
pop
adc
pop
sbb
pop
scas
mov
jae
inc
xorl
inc
xor
sbb
cmp
xchg
jge
lcall
add
cmpsl
mov
loope
push
pushf
pop
jnp
xchg
dec
jne
mov
xchg
sbb
mov
inc
cld
mov
add
push
lea
scas
mov
adc
cmpsb
outsl
daa
mov
pop
shll
rcr
and
jmp
fadd
xor
stos
mov
je
lahf
or
mov
movsb
dec
mov
loop
pop
fisubrs
test
sbb
or
and
xorb
mov
xor
iret
call
iret
int
js
mov
jne
push
and
or
mov
out
lcall
and
push
popf
sub
inc
cmp
leave
ret
add
mov
push
incl
repnz
pop
dec
push
insl
fwait
idivb
divb
jmp
xchg
dec
xor
mov
cmp
pop
add
xchg
mov
and
mov
movsb
mov
roll
loop
ja
sti
add
test
cmp
test
pop
leave
bound
adc
mov
adc
adc
cmp
mov
je
in
fdiv
xchg
xlat
and
push
fstpl
imul
mov
loopne
dec
lahf
fbld
cmp
mov
dec
out
adc
inc
int
insl
shr
or
jns
idivb
rcrl
rolb
cmp
insb
xor
and
test
call
lods
or
lods
push
movsb
jnp
filds
mov
loopne
out
mov
cld
sub
xor
hlt
fwait
jo
int
dec
pcmpgtb
or
xor
enter
jg
cmp
xchg
stos
sub
jecxz
dec
dec
jb
cltd
sub
ds
jmp
out
push
rorl
outsb
sbb
mov
inc
shlb
mov
fsub
movsb
popa
jnp
dec
loopne
jp
ljmp
xor
jg
jns
xchg
stos
lret
je
movsl
nop
jp
test
enter
sub
push
aad
cmp
cli
out
xchg
adc
cmpsb
sub
jbe
loopne
pop
jo,pt
repnz
dec
loope
add
dec
push
push
leave
and
xchg
test
decl
xchg
jle
leave
jg
test
mov
lods
cmp
test
mov
mov
push
and
push
ds
dec
pop
jle
es
mov
cmc
outsb
sub
js
sahf
pop
lock
rcl
mov
jle
sti
push
pop
pop
ljmp
push
lods
jb
add
movsb
stc
popf
sbb
add
int3
scas
sahf
jno
xchg
mov
imul
fstps
inc
lea
lcall
jne
sbb
adc
or
and
sbb
add
jl
cld
jbe
jbe
stc
push
xchg
aaa
mov
lds
clc
rcl
xlat
pop
imul
sub
xchg
ljmp
jp
fisubl
test
push
mov
mov
popf
ss
fldt
xor
inc
mul
mov
ror
push
sahf
sub
jb
sub
cmpsb
jno
lods
or
insl
jge
push
mov
xchg
aad
or
pop
cmp
movsb
push
pushf
pop
imul
adc
cld
popa
pop
ss
pop
push
push
mov
jl
rcrb
pop
jo
push
mov
xlat
lea
sbb
stos
xchg
imull
mov
gs
lea
mov
dec
mov
mov
dec
push
in
jns
rclb
jns
out
push
aam
and
and
add
lret
imul
xchg
outsb
cmpsl
jp
adc
sbb
dec
mov
sarb
cld
ljmp
push
sbb
cli
jae
inc
call
jl
hlt
mov
rorl
jg
shll
mov
inc
jnp
xor
sbb
out
shrl
popf
loop
rcrl
getsec
jb
cld
mov
mov
cwtl
xchg
push
test
inc
jb
pop
movsb
gs
lods
push
pop
cmpsl
jl
push
cmp
inc
out
das
xchg
mov
or
push
decb
aaa
adc
jmp
push
add
outsl
push
dec
mov
mov
lea
in
add
sbb
add
dec
dec
vandnpd
imul
pop
or
das
mov
or
dec
xchg
outsb
adc
cmp
into
fnsave
xchg
inc
push
stc
mov
lods
mov
push
jmp
stos
fs
jnp
jg
insl
movsl
push
sahf
xchg
lds
js
pushf
int3
cwtl
mov
idivl
rorl
pop
test
stc
cld
lea
addr16
push
jo
scas
push
adc
sub
fcos
adc
push
xchg
push
adc
xor
movsb
pop
push
pop
pop
imul
jl
jmp
clc
dec
or
scas
inc
pop
sub
mov
fisubrl
or
dec
in
sbb
cmp
insb
dec
add
cmp
sub
adc
stos
loop
jbe
jbe
imul
aaa
icebp
cmpsb
clc
out
sub
mov
add
mov
test
sahf
imul
pop
fcomp
dec
ss
jnp
popa
clc
xor
repnz
in
dec
movsb
in
jno
sbbb
into
xor
or
xor
inc
push
jmp
or
or
fnstcw
xchg
jmp
mov
fs
mov
xchg
ljmp
insb
scas
jp
cmpsl
add
adc
outsb
add
lock
pop
jb
inc
nop
ds
mov
fimuls
mov
inc
or
rcrb
sub
inc
pushf
jns
loope
aaa
cmpsl
and
mov
test
or
sbb
or
pop
and
in
adc
out
mov
and
out
insb
sub
stos
add
in
push
mov
orb
mov
sbb
cs
jp
sub
sahf
push
gs
cmp
push
leave
mov
int
daa
out
leave
fs
cli
je
mov
outsl
sbb
sti
ficompl
mov
lds
mov
sbb
cmp
jge
sub
xchg
and
push
sub
sub
test
icebp
cwtl
and
pop
mov
mov
ds
push
mov
cmpsl
fcoms
aaa
jbe
ss
lods
jo
std
cmp
jl
add
movd
pop
sti
and
ss
icebp
in
loopne
popa
adc
les
fstl
cli
aaa
push
add
int
jns
xchg
lahf
pop
push
insb
xchg
aaa
jp
in
sbb
icebp
push
or
jnp
mov
sti
dec
addr16
aaa
xchg
test
shrb
adc
nop
jl
dec
ret
add
inc
das
dec
jns
movsl
push
call
ror
leave
mov
rcll
add
xor
out
pop
enter
and
sbb
lock
cmp
lock
push
jns
pop
jns
jo
les
jp
jae
inc
das
mov
idivl
out
or
psubd
xchg
scas
nop
xor
push
aad
mov
xchg
xchg
mov
push
imul
jnp
xor
xor
and
subb
jge
cltd
sub
xchg
fstps
add
pop
push
xor
xchg
xchg
fimull
mov
cld
push
jno
lock
sbb
dec
jl
test
iret
or
add
lret
xchg
insl
add
xchg
jno
dec
add
adc
xor
ss
das
imul
pop
pusha
push
sbb
lcall
mov
ret
sbbb
jl
cmp
push
sbb
dec
ss
mov
out
testb
int3
lods
pop
mov
or
sahf
jl
dec
pop
lock
ret
cmpsb
enter
mov
loopne
xor
push
push
mov
push
xor
arpl
cwtl
add
push
dec
mov
rol
ret
mov
xchg
xlat
mov
fisubrs
scas
push
jecxz
scas
mov
inc
stos
dec
cs
sub
cmp
out
mov
jecxz
int
hlt
ja
dec
in
xchg
jg
in
xrelease
lret
adc
or
inc
adc
outsb
add
loope
mov
xor
adc
nop
ss
insb
cmp
xor
loop
or
cmp
pop
dec
fs
imul
mov
adc
or
push
out
fs
mov
loope
jnp
stos
ljmp
pushf
jg
pop
mov
fwait
idiv
pop
insb
add
cmpsl
mov
movsl
xchg
stos
out
clc
mov
adc
cwtl
sbb
mov
mov
test
sub
xor
sub
test
lret
mov
or
lea
scas
scas
xor
jmp
pop
fsubrs
cmp
loope
cmpsb
add
or
nop
in
xchg
cmp
loope
fmuls
dec
dec
jmp
aaa
cmp
push
sahf
mov
inc
sbb
sti
enter
xor
mov
test
int3
and
mov
inc
ja
lock
addr16
sub
lds
push
dec
movsl
add
xor
sbb
add
xor
sub
mov
jg
push
sbb
push
cltd
outsb
orb
dec
xchg
jle
int
shrb
xor
mov
add
mov
out
movsl
adc
dec
lea
repnz
xchg
ss
iret
cwtl
test
mov
adcb
out
jbe
cmp
xor
xor
dec
inc
fidivrs
pop
test
gs
push
jp
add
pop
cwtl
int3
out
sbb
popf
rolb
sbb
out
add
mov
inc
fistpll
loop
cli
lock
scas
push
repz
data16
sbb
cmp
repnz
fstl
push
adc
inc
les
int3
mov
sbb
push
ljmp
jno
loope
push
xlat
add
fldcw
lea
test
fwait
adc
rcll
insl
out
add
add
repz
dec
fdiv
jle
insb
inc
aad
mov
nop
movsl
jg
or
cmp
add
xchg
daa
test
lret
addr16
loope
xchg
cwtl
fdivl
push
mov
inc
xor
mov
pop
loopne
das
sar
add
sti
sbb
sub
push
or
mov
es
jb
fidivrl
clc
jne
stc
or
adcb
jg
ds
ficomps
pop
push
ficoml
daa
and
repnz
out
out
pop
adc
push
lods
repnz
push
aad
dec
insb
add
cmpsb
pop
scas
inc
popl
jg
stc
int
sub
cmp
adc
filds
dec
test
cmp
lahf
outsb
inc
js
sti
iret
xor
enter
pop
ljmp
pushf
mov
cwtl
out
pop
adcb
je
jge
dec
loope
inc
out
dec
fimuls
sahf
pop
enter
fucomi
jecxz
xchg
rclb
aas
repnz
mov
mov
pop
cmpb
cmpsb
cmp
cs
mov
icebp
pop
cli
lret
fldcw
xorb
jo
fsubrs
and
ja
test
js
adc
mov
ss
cltd
mov
cmp
inc
jecxz
cld
cli
imul
arpl
mov
mov
jmp
popf
push
popa
mov
es
cmpsl
dec
inc
test
out
sbb
mov
lods
mov
or
lods
xchg
mov
or
mov
jbe
jno
pop
cmp
mov
jge
sar
pop
lock
sbbb
aad
ss
lahf
divb
inc
jo
mov
mov
inc
idiv
stc
adc
mov
and
ret
adc
push
adc
loopne
fdivrl
mov
mov
mov
jne
out
push
repz
insl
sahf
cwtl
cltd
mov
mov
cmp
in
test
and
cmc
lds
aaa
in
pop
cwtl
dec
rol
hlt
in
mov
adc
and
dec
frstor
ljmp
jg
adc
cmp
adcl
mov
repnz
stos
push
fmull
mov
sub
mov
dec
cmpsl
ret
in
fnsave
int3
dec
dec
sbb
adcb
iret
scas
and
jb
dec
mov
jp
adc
pop
and
lds
ss
and
aas
add
cltd
push
sbb
fimuls
mov
into
scas
push
je
je
cmpsb
sbb
xchg
insb
repz
adc
or
jecxz
mov
cmp
incl
cld
and
lret
fadds
shlb
add
dec
or
loopne
xchg
push
push
mov
add
cmpsb
mov
xchg
xor
xchg
lods
movsl
testb
shlb
cmpsb
pop
icebp
xlat
out
shlb
cmp
ds
mov
mov
push
movsl
jo
outsl
das
stos
loope
xchg
cs
adc
dec
pop
inc
por
sbb
mov
cmp
movsl
or
and
fists
movsl
xchg
sbb
push
or
cs
test
inc
jle
js
mov
lock
mov
mov
in
subb
add
cmp
out
fstl
sub
fistps
mov
sub
les
xor
adc
ds
fwait
and
xchg
addr16
sub
sbbb
subb
jo
mov
cmpsl
enter
or
fbstp
cs
fisubrs
out
test
addr16
dec
bound
xchg
stos
sbb
mov
or
fwait
jp
mov
test
imul
mov
fmul
or
stos
push
or
sbb
ljmp
sub
sbb
je
daa
mov
push
mov
sub
repz
dec
and
add
insb
pushf
fsubrs
inc
je
push
jno
inc
test
mov
sti
ficomps
pmullw
and
divl
test
push
jle
add
sti
dec
mov
enter
fldenv
das
inc
mov
jp
lds
scas
sbb
in
add
pop
imul
stos
inc
xor
cmp
les
dec
ret
push
in
rolb
xchg
xor
loopne
sbb
or
insl
mov
cmp
add
iret
outsl
pusha
mov
dec
lret
and
push
cmp
icebp
lret
mov
leave
mov
lock
scas
std
lret
into
movsb
adc
xchg
push
adc
mov
inc
loop
xchg
pop
insl
into
mov
scas
pop
ss
fsubs
push
jmp
outsl
sbb
cmp
rorl
fs
daa
sub
inc
imulb
inc
mov
jecxz
cmpsb
sbb
incl
adc
outsl
adc
pop
stos
xchg
scas
cmpsb
call
in
and
inc
xchg
dec
pusha
out
xchg
imul
mov
cmp
inc
nop
jno
imul
xor
pop
sbb
mov
xor
and
push
inc
push
cli
lahf
push
lock
sub
add
jl
cmp
adc
int3
or
leave
dec
or
xchg
xchg
rcll
push
and
aaa
inc
lcall
inc
fildl
inc
jecxz
sbb
insb
popf
ljmp
mov
cmp
inc
mov
pusha
test
repnz
in
add
push
mov
bound
imul
pop
lea
xchg
cltd
mov
movsb
ret
test
scas
push
outsb
hlt
and
jle
fildl
mov
in
xchg
mov
sahf
mov
outsb
mov
inc
inc
test
divl
test
ds
leave
cld
subb
repz
fistl
xchg
imul
pop
movsl
xchg
jmp
and
sbb
sub
hlt
xchg
das
dec
cmp
inc
sub
jno
and
lret
iret
repnz
pushf
xor
pop
in
pop
pop
fstpt
sbb
adc
jge
and
fcmovbe
outsb
loop
add
cmp
outsb
add
lahf
mov
stc
jo
pop
jle
xchg
inc
mov
gs
push
jmp
cmc
jno
repnz
inc
cmp
aaa
into
and
and
xor
iret
ja
adc
cwtl
loope
stc
mov
or
cmpsl
movsb
int
mov
shrb
and
adc
icebp
mov
testl
cwtl
lret
push
daa
push
push
mov
aas
out
sbb
lret
mov
ss
lods
iret
fld
dec
push
cltd
xchg
and
push
sub
int3
sbb
xor
or
popa
cmp
jns
addb
push
into
in
popa
inc
gs
sub
andl
lret
bound
mov
cmpb
push
mov
inc
mov
push
mov
cmc
adc
cmp
cmp
lret
hlt
jg
in
mov
jmp
nop
js
dec
aaa
mov
dec
push
mov
shl
repnz
out
xor
jno
and
pop
xor
cmp
and
cmpsb
cmpsl
addl
sbb
or
sub
pop
pop
or
jae
stos
pushf
outsb
mov
push
mov
fcmovne
or
inc
sub
sub
mov
aas
imul
insl
or
xchg
adc
adc
jno
sub
inc
cmp
pushf
xor
pop
leave
xor
ja
in
push
push
push
fnstsw
fbld
insl
inc
pusha
lahf
into
cmp
movsb
mov
les
sbb
aaa
into
scas
lahf
or
scas
xlat
sub
adc
mov
insl
test
lds
inc
cmp
mov
arpl
sub
rcr
xchg
sti
add
sub
data16
into
and
subl
cmc
sar
hlt
daa
xchg
pop
int3
les
inc
jmp
mov
shl
or
in
das
push
rolb
push
mov
mov
ss
insl
add
jb
cld
xchg
cld
lcall
in
clc
into
sahf
in
dec
or
in
push
es
or
jns
add
xorl
fisttpl
pop
mov
movsl
ret
shrb
pushf
imul
imul
loop
pop
popf
in
call
jne
or
mov
shll
and
or
std
jecxz
enter
cwtl
jae
jae
loop
arpl
inc
out
repz
push
lea
fwait
sub
fs
in
dec
and
xor
xor
jno
fidivs
inc
xchg
mov
or
test
sahf
je
mov
sub
push
inc
subb
mov
xor
popa
fnsave
clc
adc
mov
mov
dec
mov
imul
iret
xor
out
dec
les
clc
mov
mov
pop
mov
fsubp
rolb
scas
and
fbstp
jl
test
mov
xor
repz
cli
xchg
mov
pop
jo
or
movsl
cmp
sub
testl
mov
shll
int
jp
sbb
iret
push
pop
mov
fidivs
cmpsl
add
dec
cmp
add
repnz
push
mov
xor
xlat
xchg
icebp
and
xchg
pop
sub
push
cmpb
mov
out
xchg
enter
clc
mov
sub
dec
sbb
pop
in
add
and
out
iret
ds
repnz
adcb
adc
push
lret
sbb
in
push
imul
in
test
lret
clc
cmp
in
xchg
std
lods
hlt
or
push
jge
fdivl
clc
or
in
or
ja
cmp
insl
sbbl
subb
loop
inc
xlat
mov
fistpl
xchg
cli
adc
pop
lock
mov
call
or
xlat
xchg
sub
fs
enter
mov
ficompl
ret
movb
cmc
xchg
mov
and
pop
inc
xchg
xor
xchg
sahf
add
mov
js
or
adc
xor
or
add
inc
stos
and
out
pop
add
mov
mov
idivl
add
imul
xchg
and
sub
repnz
sbb
ds
sbb
push
jno
xchg
cmc
mov
loope
and
push
inc
sub
testl
push
lods
pop
jae
je
mov
sbb
sbb
xchg
rcrb
jecxz
push
mov
in
cmp
push
add
push
cmp
cwtl
sti
inc
xchg
sub
add
add
ja
and
cmpsl
sbb
cmc
jge
push
repnz
adc
int
push
call
dec
int3
cmp
aam
xchg
adc
negb
add
pusha
ss
cwtl
push
inc
es
test
push
mov
push
sbbl
mov
mov
or
and
out
jbe
xchg
aaa
jbe
imul
outsl
pop
jecxz
sub
push
xor
push
rcrb
sbbb
or
fucomip
fmul
test
or
hlt
loope
jb
jp
mov
pushf
test
repz
jns
push
and
jp
out
inc
sbb
test
jae
scas
outsb
jb
ret
in
mov
mov
push
scas
mov
fisttps
sub
rcr
adc
fmul
jae
cmp
scas
insl
fcmovnu
and
mov
popa
sbbb
dec
gs
sub
sub
shlb
inc
enter
data16
sti
dec
sub
push
loope
jne
push
or
inc
add
push
mov
mov
sbb
sbb
dec
sub
and
out
lods
iret
or
insb
cli
jno
sub
mov
dec
or
mov
daa
mov
bound
mov
fs
cmpsl
jo
les
pop
mov
insl
dec
loop
sbb
inc
daa
xchg
pop
push
fsubr
pushf
test
inc
adc
icebp
test
cmc
aas
out
test
sbbl
lds
loope
mov
jbe
dec
mov
xchg
es
adc
out
fs
in
lods
ljmp
jae
adc
arpl
cmp
push
loop
in
ret
xchg
mov
xchg
or
adcl
ret
push
divb
push
sub
shrb
mov
addr16
lock
cmp
mov
lods
mov
enter
sub
lods
jo
cmpsl
bound
mov
inc
mov
mov
jl
outsb
add
shlb
cs
mov
cmp
xchg
pop
out
mulb
and
xor
shrb
jne
or
out
push
cmpsl
aaa
int
mov
arpl
sub
outsb
stc
sub
iret
jne
jbe
push
in
fsubrs
pop
lock
and
iret
push
sbb
sbb
lods
cmc
xchg
sbb
cmp
ret
movb
add
jecxz
es
sub
pop
mov
mov
out
add
and
idiv
out
cld
loopne
dec
in
test
movsb
push
push
mov
pop
call
pop
jb
nop
mov
inc
leave
add
rcrl
add
mov
adc
xor
mov
adcl
std
shlb
pushf
in
orl
popf
xor
lea
xlat
push
xchg
pop
jecxz
push
fwait
jne
pop
mov
mov
fidivs
je
mov
pusha
lret
daa
andl
sbbl
in
loop
ret
fidivrl
int
pminsw
pop
scas
rolb
cwtl
jle
mov
dec
sub
mov
repnz
pop
adc
jle
and
jge
enter
dec
leave
or
lret
dec
mov
popf
outsl
inc
fcmovnb
add
jbe
stc
loope
imul
dec
cltd
test
or
stos
inc
or
aam
sti
sub
mov
into
shll
push
stos
bound
and
inc
sbb
inc
fldcw
inc
fdivrl
subb
or
int
test
jge
adc
xchg
jnp
sub
jbe
in
sarl
lret
enter
sbb
inc
or
xchg
and
notb
int
add
shrb
or
stos
movsb
push
inc
sahf
outsl
pushf
addb
and
mov
dec
lret
js
push
ss
fcmovnu
push
fcoml
hlt
mov
scas
push
movsl
lret
add
sbb
fdivrl
jecxz
xor
mov
or
adc
jns
incb
sbb
repz
cmp
mov
add
or
pop
dec
fidivs
or
ds
xor
mull
inc
xor
subl
jne
jge
inc
mov
outsl
repz
shrl
call
mov
sub
enter
dec
out
jnp
enter
cmp
outsl
bnd
push
icebp
xlat
out
shrl
xchg
sub
dec
lock
mov
ljmp
cmp
fisubrl
jae
push
or
ss
sbb
enter
add
movsl
xchg
mov
add
cmpsl
push
pop
lea
leave
sub
xor
dec
bound
mov
insl
icebp
lds
mov
pop
fwait
push
pushl
test
or
outsl
or
pop
cmp
repz
mov
cmpsb
cmp
mov
out
hlt
lea
sub
pop
add
xchg
and
into
xchg
out
cs
outsl
lds
add
sub
mov
inc
popl
aaa
inc
pusha
outsb
inc
pop
arpl
sbb
xor
dec
dec
push
push
arpl
fists
inc
inc
inc
nop
scas
push
mov
fucomip
or
fwait
or
test
js
dec
cltd
inc
or
mov
pop
mov
push
out
push
daa
mov
lret
mov
ds
xorl
push
inc
xchg
mov
repnz
in
push
mov
out
cmp
dec
aas
outsb
mov
push
inc
je
loop
loope
movsb
mov
orl
jmp
push
das
cmp
pop
sbb
xorb
sbbl
cmp
pop
add
das
adc
in
cvtps2pd
inc
iret
pop
loop
mov
out
dec
repz
add
je
or
xchg
cmpsb
cmp
mov
imulb
pop
pusha
inc
add
push
nop
push
sti
xor
insb
clc
test
mov
push
out
pop
divb
or
or
dec
add
sbb
sbb
roll
enter
outsl
sub
push
inc
adc
aas
inc
popa
push
cltd
xchg
ja
outsb
pop
lahf
cltd
push
test
js
mov
xlat
cmp
xchg
gs
push
mov
pop
cmp
les
adc
ret
je
adc
test
sti
sub
mov
adc
insl
jp
adc
scas
pop
push
call
inc
imul
jo
popa
fwait
jae
fidivrl
imul
dec
repnz
fdivrs
shrd
rcr
ja
mov
or
add
aad
inc
sti
xchg
in
cwtl
and
inc
pop
sub
cmpsb
imul
jp
loope
shrb
loope
clc
pop
call
aas
push
sub
adc
rorl
fistpll
leave
daa
fldenv
inc
mov
mov
lcall
or
jmp
imul
shll
repz
bswap
test
jge
stos
scas
or
lahf
data16
icebp
sbb
aam
and
pop
mov
jne
add
or
jge
lea
cmp
mov
push
sbb
jne
push
shl
xchg
adc
push
and
add
mov
dec
fdivrs
push
inc
mov
arpl
mov
shrb
mov
pop
jecxz
sub
sub
cltd
shlb
sub
repz
adc
int3
mov
ret
adc
pusha
mov
insb
adc
repnz
push
lahf
jbe
push
add
push
jl
mov
inc
and
push
push
xor
mov
push
call
dec
cmp
test
xchg
in
das
add
push
pop
subl
add
andl
pop
mov
xchg
daa
mov
pop
lret
test
lock
pop
cmpb
jnp
test
mov
cmc
addl
int
and
adc
dec
adcb
mov
je
rcrb
pop
pusha
cmp
inc
rcr
loop
ds
sbb
jns
popf
mov
jb
ss
cli
inc
test
push
dec
jno
mov
fiadds
fxrstor
std
imull
enter
aad
adc
mov
int
stc
jns
ds
ja
lods
xor
dec
iret
jo
sbb
sbb
icebp
enter
in
xchg
pop
push
push
cld
pop
add
shll
shrb
ret
jne
pop
movsb
les
in
mov
in
popf
nop
pop
add
cmp
xchg
and
iret
xchg
push
subb
mov
fisubl
icebp
gs
add
movsl
sub
dec
mov
ja
mov
insl
mov
ss
sbb
sub
notb
push
sbb
shr
int
int3
adc
dec
bound
push
inc
aad
sbb
cli
mov
stc
mov
push
jl
push
push
mov
inc
xor
stos
sub
pop
setno
or
mov
cmp
push
mov
jle
mov
hlt
push
mov
arpl
std
add
add
mov
shl
fcmovu
stos
mov
scas
xchg
aaa
ret
lock
cld
mov
insl
pop
push
pusha
mov
lahf
and
push
sbb
jnp
out
push
jmp
pushf
inc
jo
cltd
lods
push
sbb
sub
sti
enter
sbb
insb
mov
rcrb
add
xor
daa
or
jns
pushf
pop
ljmp
cmp
pop
push
and
bswap
inc
sbb
xchg
xchg
rclb
mov
repz
insl
repz
mov
or
xchg
sbb
add
stc
and
cmpsl
fwait
loop
scas
mov
adc
sbb
bound
xor
dec
lods
aam
orb
dec
in
xor
movsl
cli
pop
cmp
pop
and
xor
mov
and
sbb
xor
xchg
movsb
push
xchg
pop
jb
mov
lahf
pushf
jo
mov
pushf
sub
pop
cmp
xchg
and
int
mov
int3
sub
mov
adc
xchg
sbb
push
int
out
je
cld
aas
push
lods
jne
fidivs
mov
repnz
ret
mov
repz
fnsave
fnstenv
lods
jbe
sub
mov
add
xor
mov
sub
jbe
mov
or
insb
push
sub
pushf
fnsave
and
and
sub
add
mov
xchg
pop
lahf
jo
stos
test
lret
data16
imul
jbe
pop
popf
in
ljmp
mov
sahf
adc
and
sub
cltd
in
add
xor
sub
cmp
dec
and
mov
xor
mov
repz
add
out
js
hlt
shll
push
stos
or
das
jne
mov
mov
jl
movsl
loop
stos
stos
outsb
leave
push
jbe
pop
xchg
or
inc
cmp
shlb
test
mov
jp
in
pop
inc
cli
pop
dec
sub
mov
sbb
sbb
mov
mov
pusha
push
in
ss
inc
fmull
pop
sub
cltd
sahf
repnz
out
adc
repnz
arpl
scas
divb
cld
adc
add
cmp
push
cmp
movsl
mov
jp
inc
push
rcrb
pusha
mov
xor
push
jle
cmp
sti
mov
xlat
jmp
mov
mov
cmp
or
push
push
ret
mov
xchg
aas
stos
std
inc
fcompl
fisttpl
hlt
mov
inc
xchg
adc
cltd
dec
repz
mov
aam
mov
sbb
aam
mov
jne
dec
mov
iret
and
pop
sbb
dec
rclb
add
and
scas
cmp
dec
adc
mov
imul
xor
andl
bound
in
push
cmp
stos
fiaddl
inc
inc
jmp
aad
stc
and
inc
and
xchg
jp
inc
lea
int3
fnsave
push
jmp
xor
lret
jle
loope
lret
push
mov
loopne
sbb
xchg
xchg
lock
add
pop
xor
mov
mov
mov
cmpl
sbb
fldenv
popa
clc
test
sub
push
cmpsb
push
and
lret
fsubrs
push
push
rol
mov
je
sub
idivb
cmp
mov
lods
dec
pop
lret
lret
lret
cld
in
push
jnp
xor
or
mov
aam
pop
outsl
call
push
push
popf
push
lcall
cmp
test
repnz
sub
mov
cmovns
add
icebp
dec
adc
scas
sti
push
insb
pop
jno
leave
xchg
dec
xor
mov
add
xor
mov
ja
and
pop
inc
mov
lock
repz
scas
test
push
push
mov
sbb
ja
sub
push
hlt
inc
inc
push
push
outsl
ss
fyl2x
loop
mov
je
cmp
xor
push
pop
pop
push
cmp
insl
lea
sbb
xchg
gs
add
sub
aad
xchg
nop
movsb
cmp
push
dec
adc
cwtl
mov
mov
ret
mov
adc
addr16
ror
popa
test
adc
cmp
scas
and
lret
mov
shrb
ljmp
dec
cmp
stos
in
inc
push
xchg
xchg
addr16
cltd
jmp
int3
inc
notb
or
stos
test
mov
inc
pop
shlb
xchg
dec
push
lcall
add
bound
xor
test
push
nop
sub
into
loope
jo
inc
mov
orl
mov
loopne
mov
mov
cmc
mov
int3
or
mov
push
pop
adc
xlat
jp
mov
andl
shll
or
cli
das
out
js
cmp
push
cmpl
jne
and
xor
inc
jne
es
lods
xchg
int
clc
jae
mov
imul
push
fcoms
or
leave
mov
sti
js
pop
xor
sahf
xor
test
lret
push
insb
negb
sub
ljmp
jb
lods
jo
jge
jge
inc
fisttpl
jge
adc
in
mov
pcmpgtd
or
adc
mov
mov
mov
shrb
or
lock
mov
xchg
xchg
dec
scas
xchg
lcall
or
and
jle
xchg
lods
das
jp
imul
out
cmp
clc
subl
or
mov
or
mov
jbe
test
hlt
mov
leave
xchg
daa
es
popa
lods
into
inc
lods
and
and
lret
aas
cli
jae
jle
orb
fisubrl
pop
scas
pop
inc
xor
fldenv
sub
xchg
xor
xchg
push
inc
inc
jge
jne
cmpsb
cmp
int
cmp
daa
xchg
movsb
ja
pop
mov
cwtl
imul
sahf
sbb
scas
stc
scas
stos
mov
inc
lods
loop
sub
lahf
jo
pushf
jns
ja
jmp
mov
fcompl
insb
or
or
aas
mov
fcmovnb
sbb
pushf
jg
in
or
jge
dec
dec
add
pop
mov
and
and
push
cmp
scas
ret
pop
and
jno
loopne
inc
in
nop
jmp
jnp
push
and
and
js
sbb
jmp
push
jge
test
sti
pop
outsb
mov
ret
or
call
mov
cs
push
icebp
call
sbb
shll
jnp
add
sbbb
cli
sub
stc
jns
in
pop
mov
sub
push
add
jbe
and
inc
xchg
in
mov
imul
mov
out
add
jbe
push
push
push
mov
push
mov
int
gs
and
test
setae
cmp
adcb
mov
xorl
mov
push
aam
lret
rcrl
in
xchg
call
mov
outsl
xlat
jno
xchg
stc
testb
or
leave
adc
pop
rcl
cmc
xor
jnp
mov
add
or
sub
call
fdivrl
loopne
jnp
mov
adc
fstpl
mov
mov
enter
bound
sbb
jmp
lock
cmpsb
cmp
push
push
out
xchg
jb
push
cmpsl
mov
mov
out
arpl
adc
mov
inc
pushf
xchg
push
xchg
bound
push
out
mov
cmp
push
fnsave
mov
mov
lods
outsl
add
movsl
sbb
test
xchg
add
cld
mov
pop
dec
cwtl
pop
mov
imul
clc
dec
mov
aas
sahf
push
mov
inc
cmpsb
mov
or
in
mov
pop
adc
push
shll
test
mov
sbb
push
lcall
fstpt
mov
es
xlat
movb
in
stos
jmp
repz
inc
mov
mov
faddp
sub
call
sub
jb
nop
xchg
sub
fnsave
out
dec
cmp
pop
hlt
cmp
xchg
rcrb
mov
jp
bound
mov
inc
mov
sbbb
pop
in
mov
adcb
dec
cmp
xchg
sub
ja
shlb
ret
xor
mov
mov
pop
in
mov
mov
inc
mov
xchg
test
pusha
stc
data16
add
xchg
aaa
arpl
mov
fistpll
lds
mov
jns
and
aaa
int
and
adc
push
shrl
inc
ficoms
add
add
mov
je
inc
xor
push
dec
push
jb
jg
push
jmp
or
pushf
movsl
jae
jae
dec
pop
sub
out
test
inc
lods
mov
jecxz
pop
dec
inc
hlt
adc
mov
mov
mov
push
adc
cmp
xor
popf
sbbb
push
or
mov
lods
jecxz
dec
pop
jecxz
es
adc
test
mov
push
push
fst
repnz
or
out
cld
cli
rcr
ret
icebp
xchg
mov
cwtl
addr16
xchg
leave
lcall
push
stc
test
sarl
daa
loope
inc
push
stc
push
sahf
es
mov
dec
arpl
jl
imul
mov
adc
mov
jecxz
inc
pop
loopne
jmp
test
mov
jne
loopne
loop
push
and
inc
icebp
and
cmpsb
pop
cwtl
ds
leave
js
cmp
scas
in
mov
mov
movb
lods
mov
cmpsl
mov
cmc
cmp
es
in
enter
xchg
xor
inc
push
push
or
push
pushf
and
sahf
sbb
xchg
pop
and
lods
jg
popa
outsl
sub
icebp
or
jb
cmp
fsubrl
xor
int3
mov
cmp
xor
pushl
out
cs
fldcw
pop
push
jg
ret
sub
repnz
mov
push
jnp
pop
mov
dec
adc
in
mov
xchg
call
mov
push
mov
xchg
pop
inc
dec
jmp
dec
dec
push
or
pop
xor
mov
outsl
rcrl
pop
shlb
pop
cmp
cmpsl
push
stc
cwtl
in
dec
pop
aam
out
sbb
sbb
lcall
filds
in
mov
sbb
push
aam
jae
xor
fcomip
es
cmp
push
push
and
fdivl
pop
imulb
add
out
dec
shl
cli
pop
je
sarl
lods
dec
push
mov
push
sub
mov
mov
pop
movsb
push
jbe
inc
ret
pop
shl
and
sbb
fwait
in
or
cmp
ret
cmpsl
cmp
jecxz
mov
add
add
and
dec
push
hlt
inc
push
mov
cmp
mov
scas
cmp
stos
lds
jb
push
mov
inc
add
leave
out
fsubrl
fsubrp
stos
push
sbb
rorl
jae
sbb
jb
adc
leave
xchg
fdivl
std
lret
push
mov
fcoml
incb
popl
push
push
ja
adc
dec
push
inc
dec
pop
lea
pop
scas
dec
dec
loope
shrl
dec
stos
jecxz
lcall
imul
loop
gs
pop
inc
mov
add
sbbb
push
aam
out
loopne
js
pop
leave
cmc
mov
sti
adc
mov
mov
cmp
pusha
sub
jne
clc
test
ret
fildl
pop
cmp
sbb
dec
jecxz
ja
add
into
xchg
and
mov
and
dec
jo
addr16
dec
inc
gs
lock
and
lret
into
jns
mov
or
push
cli
and
add
leave
mov
mov
ljmp
add
rcr
push
mov
pop
outsl
cmp
adc
nop
jecxz
mov
jg
fisubrs
xor
jb
or
add
add
sbb
sub
sub
addr16
fwait
lods
cltd
rorl
push
rolb
inc
sub
inc
adc
push
sub
push
pop
sbb
add
jge
cltd
scas
iret
cwtl
shlb
dec
lret
sub
lods
dec
mov
pop
enter
sbb
cltd
dec
sbb
mov
inc
stos
sbb
and
sahf
push
push
mov
movsb
jmp
xor
push
xchg
xchg
sbb
xchg
insb
mov
pop
stos
jmp
jb
test
fstpl
sbb
adc
jns
jge
xor
push
xor
lret
lret
bnd
stos
mov
xor
pop
int3
mov
sbb
pop
xor
lock
repz
scas
dec
and
popa
push
movsl
xchg
sub
jge
push
sub
inc
cld
enter
xchg
into
fdivr
xchg
mov
jns
dec
out
cmpsl
push
cmpsb
sbb
dec
mov
rcll
and
and
sub
fstps
xchg
push
sbbl
decl
out
push
cmp
fdivp
xchg
popa
les
dec
push
pop
icebp
mov
mov
dec
loop
cmp
imul
lahf
pop
jno
es
lock
jnp
loope
or
popa
mov
das
adc
dec
shlb
push
pop
mov
loopne
out
push
sbb
psrld
nop
push
pop
imul
or
push
cmp
push
fldcw
fnstenv
popf
jge
ljmp
sub
sahf
adc
shrl
fs
sarb
in
jge
insb
fiaddl
cmc
add
cmp
jae
in
dec
ds
dec
leave
test
xor
inc
movsb
push
aaa
or
sbb
pop
or
xor
outsb
inc
add
and
mov
bound
sbb
or
mov
iret
jmp
pop
aas
clc
jno
cmp
xchg
sbb
mov
dec
or
outsb
lret
mov
mov
mov
or
daa
dec
ss
int
shll
cld
cbtw
mov
lcall
scas
jne
sbb
and
cmpsl
ret
xor
addr16
mov
inc
mov
test
pop
jne
xchg
loopne
imul
mov
mov
adc
sub
sbb
inc
inc
jmp
cmp
xor
dec
lods
pop
xchg
inc
fdivs
sub
mov
cmp
jbe
cmp
stos
sahf
dec
adc
xchg
xchg
push
or
adc
divl
ret
sbb
push
push
adc
ja
outsb
mov
mov
in
fcompl
scas
mov
iret
in
bound
clc
rcrb
jle
shlb
mov
push
mov
subb
jl
pusha
add
outsl
clc
aas
dec
fstpl
addl
fwait
mov
lcall
lahf
gs
dec
add
adc
mov
lods
jmp
or
cs
fstps
cmp
mov
test
lods
jg
or
or
mov
arpl
cmpsl
jb
rcll
ja
sbb
pop
sbb
mov
fnstenv
in
pop
icebp
lret
rclb
les
lock
xor
int3
pop
add
mov
xor
js
lcall
fst
add
pop
mov
inc
gs
cli
adc
xor
adc
jl
ret
fbstp
mov
jno
or
jg
mov
dec
push
pop
int
xchg
add
push
cmp
push
jbe
push
mov
out
or
outsl
mov
hlt
push
arpl
or
xor
adc
pop
jle
xchg
sub
mov
xor
imul
xchg
xchg
test
bnd
hlt
repnz
cmp
pop
add
mov
cmpb
xchg
pushw
jmp
jg
or
adc
bound
jb
mov
xor
jmp
dec
cltd
sbb
jo
xor
mov
in
mov
fwait
and
fs
add
push
mov
ds
mov
popf
stc
pop
hlt
pop
or
adc
push
and
and
addr16
pushf
jl
sbb
movsb
ljmp
negb
icebp
or
sbb
push
mov
push
repnz
jno
jae
sbb
dec
clc
iret
std
ja
sbb
cwtl
jno
inc
xor
ror
ds
cmp
add
nop
in
xor
outsb
fldl
and
ljmp
gs
add
aas
test
pop
adc
jg
push
insl
jb
jmp
pop
add
sahf
jecxz
lahf
repz
fimuls
inc
imull
xchg
outsb
hlt
rep
std
xcrypt-ctr
cmpsl
cltd
xchg
mov
cmc
imul
mov
fsts
inc
fcmovbe
xchg
cmp
or
or
push
mov
aad
cwtd
shrl
ror
dec
and
pop
lcall
cmp
repnz
lcall
or
mov
test
inc
inc
mov
pop
loope
push
push
fisubs
out
add
loop
loop
mov
cmp
jns
sub
dec
in
pop
push
xor
mov
subl
push
sahf
call
or
xchg
scas
and
loopne
cmp
data16
orb
lock
jg
scas
enter
add
jle
inc
dec
sahf
out
cmp
sbbl
rcrb
pop
adc
pop
mov
dec
add
iret
pop
scas
test
faddl
leave
xor
pusha
lahf
xchg
ljmp
shl
add
movsb
pop
imul
jecxz
xchg
pushf
mov
push
daa
aaa
cmp
in
inc
dec
and
pop
push
popa
pop
mov
cmp
sbb
jmp
mov
pop
test
pop
jecxz
push
out
fldenv
rorb
hlt
test
xor
pushf
xor
inc
bound
iret
pushl
dec
shr
out
icebp
jp
mov
jmp
mov
les
pop
out
repnz
shrb
push
jmp
push
pop
or
cltd
sub
mov
gs
jle
cmp
inc
xchg
sbb
dec
aaa
into
push
xchg
add
pushf
lods
cmpsb
dec
adc
jecxz
adc
push
fnstsw
dec
testl
sahf
xchg
outsl
xor
stos
movsl
sahf
inc
mov
lahf
and
into
sbb
xor
repnz
xchg
lea
sub
pushf
xor
fimuls
out
stos
aaa
ret
inc
push
rcll
push
mov
push
sarb
xlat
test
and
or
popa
sub
fstpl
out
xor
push
mov
jge
jnp
push
idivb
mov
jge
in
mov
sub
daa
mov
xor
call
xor
mov
mov
push
repz
jns
repnz
jg
or
mov
in
std
mov
jge
push
add
sub
and
test
sbb
xor
scas
or
mov
fidivrs
add
mov
fdivp
add
enter
mov
fsubrs
inc
int
mov
pop
loop
dec
cmpsb
addl
mov
orl
jge
je
je
pop
add
popa
mov
xlat
test
icebp
in
dec
mov
arpl
dec
andb
pop
mov
or
fnstenv
xor
push
xor
pop
push
xchg
decl
sbb
or
xor
inc
mov
lahf
es
cli
and
sub
imul
loope
scas
ds
test
test
cmp
pop
icebp
pop
and
sti
out
inc
pand
or
xor
neg
data16
fbstp
dec
mov
call
jo
xchg
jbe,pn
add
cmp
movsl
xchg
or
iret
pop
jns
jb
lret
xlat
lret
lret
or
adc
inc
gs
or
mov
out
pop
mov
pop
dec
jmp
inc
cs
sbb
repnz
adc
outsl
cmp
xor
mov
pop
dec
mov
mov
jns
popa
xlat
xchg
mov
xchg
iret
pop
lahf
stos
inc
or
add
cmpl
inc
cmpsl
inc
out
sub
xlat
ljmp
mov
xor
stc
cmpsl
adc
sub
add
pop
popf
cmp
orb
jo
leave
shlb
js
leave
int
mov
outsl
jge
mov
push
cltd
pusha
pop
ds
mov
xlat
je
mov
aaa
push
xchg
lods
in
cmp
sub
xor
aaa
and
rorl
mov
in
out
dec
cmp
out
out
sub
imul
sbb
fnstenv
stc
je
jns
sbb
and
cmp
lret
push
jmp
aad
push
inc
inc
pop
inc
sbb
addb
cmp
cmp
sub
lcall
jo
mov
or
push
xor
jge
or
jnp
lea
into
dec
dec
arpl
xchg
sub
jge
mov
inc
sbb
loopne
cs
xchg
add
out
and
int3
xor
out
out
dec
pop
lock
dec
leave
cmp
jmp
ret
jb
repz
ficoms
cmp
aam
sub
push
xor
mov
sti
shrb
mov
lcall
aam
std
mov
fmul
pop
or
push
in
xchg
jge
cmpsl
jae
and
mov
ror
aaa
into
repnz
fidivrl
mov
dec
push
aaa
stc
pop
mov
xchg
mov
fld
push
mov
add
xchg
add
cmpsb
and
inc
xchg
xor
stos
sti
xchg
sbb
lods
arpl
bound
ficoms
sub
cwtl
addr16
push
inc
mov
inc
inc
std
repz
addr16
jp
add
push
bnd
and
cld
cmp
xchg
les
inc
sbb
dec
call
shll
xchg
mov
mov
stos
stos
mov
xchg
pop
push
xchg
vpand
pop
xchg
subl
popa
and
adc
mov
add
inc
xor
jg
xor
test
cmp
xor
cs
add
lret
insl
leave
mov
popf
loop
xlat
arpl
push
jmp
jecxz
inc
pop
jbe
gs
xchg
jmp
repz
mov
cmpsl
add
add
adc
adc
fbld
inc
data16
das
movsb
addr16
add
push
cmp
or
pop
xchg
addb
push
inc
insl
call
icebp
dec
icebp
and
pop
dec
mov
out
push
inc
pop
inc
or
cld
dec
mov
shll
testb
dec
adc
gs
push
ss
je
push
push
lret
push
xor
gs
int3
imul
daa
ds
test
and
xor
xchg
inc
stc
adcl
fnsave
inc
xchg
je
aas
cmpsb
mov
into
jns
stos
stos
popf
imul
pushf
mov
in
mov
iret
cmp
mov
push
fcmove
leave
cmpsb
and
aad
dec
mov
movsb
mov
inc
pop
mov
call
or
andb
in
mov
nop
scas
inc
lret
mov
fistps
sbbl
fadds
sub
repnz
jmp
imul
lret
sbb
push
dec
push
shlb
faddl
push
and
lcall
test
push
cmpsl
push
aas
mov
push
jg
fwait
cmp
jmp
mov
mov
testl
jo
jb
loope
das
ret
pop
fidivs
in
lods
adc
push
cli
repz
test
shll
mov
pushf
lods
mov
mov
cmp
das
stc
jns
adc
inc
pop
hlt
cld
mov
add
pop
mov
mov
int3
lret
sbb
rcrb
push
cmpsb
loope
popa
cs
xchg
jl
int3
jmp
adc
push
mov
outsl
cli
adc
inc
cmp
fisttps
inc
lcall
or
xchg
sub
and
icebp
in
scas
out
andb
enter
call
and
pop
iret
and
aam
data16
test
sub
icebp
mov
aas
cmpsl
stos
xor
and
and
loope
add
mov
mov
mov
push
movsl
rcrl
cwtl
cmp
popf
mov
lea
mov
inc
add
sub
aas
cli
pop
cwtl
call
mov
pop
dec
movsb
add
sbb
pop
xor
jl
ret
ret
cmp
pop
icebp
sbb
es
jmpw
fadds
cmpsb
pop
mov
jb
aas
stc
ss
movsl
dec
cld
add
das
and
xchg
sub
subl
mov
mov
idivl
lret
loopne
fistpll
sbb
pop
leave
cmp
mov
dec
das
cwtl
add
push
int
or
insl
add
lods
pop
shll
pop
loop
or
fwait
cli
and
call
xorl
outsb
inc
adc
lcall
fwait
call
cmp
lret
xor
ljmp
cmp
aam
test
mov
lcall
cwtl
mov
shll
mov
or
push
test
je
mov
jecxz
cmp
sub
ljmp
mov
mov
jmp
mov
inc
adc
dec
push
lock
adc
push
fdivrs
in
insb
lret
jge
dec
in
enter
mov
or
lds
xor
push
mov
ljmp
mov
aas
leave
jae
lds
mov
das
repnz
call
pop
das
incb
mov
fbstp
dec
push
dec
loopne
push
push
mov
in
cmp
testl
pusha
add
ds
test
jae
arpl
mulb
push
cmp
cltd
addr16
lcall
push
fsubrl
adc
cmovle
in
mov
scas
jno
loopne
ret
bound
ljmp
mov
adc
mov
jl
es
test
lret
and
xchg
and
int
outsb
jmp
mov
ffreep
outsb
push
lock
xchg
loop
in
out
inc
popf
stc
jne
cmp
das
xchg
xchg
lds
jb
pop
cmp
dec
pop
and
xlat
push
shrl
call
mov
out
mov
loopne
xchg
xchg
cmpsl
cmp
js
call
push
cltd
or
cli
addr16
push
cwtl
sub
jp
xchg
pop
sahf
enter
sbb
cld
push
xchg
insl
mov
xchg
int3
outsl
daa
gs
cmp
int3
push
leave
add
jno
test
dec
sahf
or
int3
lods
sbb
jbe
out
sub
jecxz
rcrl
pop
lret
mov
cmp
and
icebp
jns
data16
sbbl
or
insb
xor
lods
out
ja
sub
mov
scas
adc
mov
or
mov
in
dec
dec
push
sbb
xor
out
ja
mov
mov
pop
insl
inc
cltd
test
and
mov
cmp
add
mov
push
insb
int
sub
fstps
dec
or
gs
jno
rorb
movsl
cmp
xchg
cmp
mov
sub
imul
jge
jge
and
add
push
add
push
fcmove
xchg
mov
pop
outsb
insl
jle
and
inc
push
and
sub
mov
xchg
push
dec
push
push
sbb
lods
inc
adc
leave
fisubl
popa
mov
cmp
lock
pop
adcb
cltd
pusha
in
inc
out
icebp
xchg
sbb
jl
and
mov
push
shrl
bound
test
xchg
arpl
dec
rolb
fwait
mov
sub
and
icebp
test
loop
es
in
je
and
sahf
sti
mov
fcomps
pop
outsb
sub
dec
xchg
es
add
sbb
mov
xor
test
subb
xchg
push
imul
cmp
scas
int3
inc
lret
xor
and
dec
inc
jne
add
lds
sub
shl
hlt
inc
add
leave
sbbl
adc
mov
sti
inc
sbb
filds
call
mov
pop
ret
lret
jle
jg
pop
test
mov
inc
or
sub
cmp
dec
or
pop
aaa
push
lahf
cmp
jo
or
pop
push
and
sbb
cmc
test
adc
jg
and
xchg
add
pop
sti
mov
adc
fildll
or
xchg
out
push
fbstp
mov
lock
pop
inc
lds
pop
pop
loopne
jg
mov
lret
sbb
leave
fwait
cmp
and
xor
aaa
icebp
mov
test
adc
mov
jecxz
mov
aad
or
out
sub
mov
out
stos
add
pop
pop
js
push
negb
cs
jne
mov
test
sti
xchg
lock
mov
not
int
pop
sbb
rcll
dec
scas
repnz
adc
fildl
int
mov
sbb
incb
fidivl
pop
pop
cmp
test
imul
cmp
outsb
mov
xor
mov
push
call
push
mov
xor
jg
inc
dec
in
lock
shll
lods
fdivp
push
int
jne
pop
outsl
pop
mov
mov
adc
cmp
arpl
pop
scas
cmp
sbb
mov
sub
decb
mov
pusha
mov
mov
fwait
pop
cmp
fidivs
lret
sub
js
mov
xchg
call
inc
daa
xor
add
mov
loopne
movsl
mov
aam
addl
add
test
xlat
das
bound
sbb
xor
bound
mov
out
xchg
imul
add
inc
test
je
inc
sub
xchg
adcl
mov
mov
ret
xor
leave
stos
vcvtsd2ss
fldl
jne
inc
xchg
cli
test
into
pop
repz
add
ljmp
nop
gs
pop
or
lods
xchg
jbe
insb
call
sub
mov
ljmp
adc
ret
jns
xlat
out
and
sarb
dec
enter
xor
shlb
insl
xchg
mov
rolb
imul
cltd
pusha
shll
sbbl
aas
jns
in
dec
push
movsl
out
ret
inc
add
add
jnp
jno
dec
repz
and
aaa
or
mov
insb
jge
sbb
dec
inc
das
mov
and
mov
lret
add
xor
int3
pop
fs
loop
fldenv
or
sarb
repnz
pop
jl
aad
mov
sbb
addr16
cld
aas
mov
scas
adc
mov
in
stc
sbb
fistl
inc
sbb
fstpt
enter
std
inc
outsb
test
enter
mov
cwtl
test
cmpsb
ds
out
add
in
dec
arpl
scas
mov
push
roll
jno
shl
sahf
mov
push
aam
inc
fiaddl
in
or
jmp
iret
pop
je
push
sbb
xor
inc
nop
jl
adc
jo
std
test
dec
pop
xor
shll
and
cmp
movsb
aas
or
mov
scas
movsb
ret
push
in
push
hlt
or
jnp
rorl
mov
call
dec
aad
xor
cmpsl
es
push
into
in
aad
mov
xlat
mov
sub
fcom
xchg
add
ret
stc
idivl
test
js
inc
xchg
pop
jbe
cmp
stc
dec
shlb
inc
add
cmp
push
gs
in
mov
cltd
sub
mov
cmp
outsb
mov
stos
xchg
and
inc
jnp
hlt
dec
sti
ds
les
mov
dec
test
sbb
insb
pop
and
jae
stos
cmp
sub
mov
lods
subb
sbb
daa
dec
das
stos
pushf
test
push
bnd
xor
inc
push
cmpsl
inc
inc
push
and
push
jbe
ljmp
mov
xchg
mov
mov
je
leave
int
imul
daa
xlat
call
dec
and
mov
fiaddl
and
and
enter
sbb
jo
repnz
lcall
inc
test
cltd
xor
inc
mov
mov
pop
sbb
pop
mov
ds
dec
insl
cli
and
or
mov
inc
imul
push
push
sbbb
xor
adc
je
cmp
mov
mov
mov
call
and
mov
mov
inc
int3
and
or
dec
fldenv
inc
xor
inc
cmp
fsubrs
cwtl
mov
aad
mov
ss
das
jl
push
leave
scas
inc
sti
jg
push
movsl
mov
jbe
mov
scas
fdivs
push
clc
out
lods
jns
out
fsts
add
xchg
xor
cli
movsl
cltd
jp
decb
clc
out
push
fwait
cmp
jmp
xor
pop
lahf
movsb
inc
cltd
mov
mov
or
add
mov
push
inc
mov
insb
add
scas
mov
hlt
sub
movsl
cwtl
lahf
rorb
inc
fstpt
in
cmp
xor
or
daa
out
das
aam
lahf
lock
dec
pop
inc
nop
idivb
sarb
fisubs
ret
scas
dec
jmp
movsb
cld
xchg
add
pushf
divl
inc
popa
decl
mov
xor
rol
jp
cmp
aas
aad
mov
ret
outsb
mov
js
inc
gs
test
and
pusha
xor
out
test
lods
pop
andl
jns
nop
scas
mov
ret
jo
xor
xchg
sbb
sahf
test
nop
das
xor
add
mov
mov
cmp
outsb
lock
xchg
call
sub
mov
fcomip
mov
imul
add
insb
jmp
dec
popf
adcb
jns
sbb
repnz
aam
push
push
ds
mov
sbb
push
or
sub
mov
rorb
jnp
test
fstpt
inc
cli
cwtl
cmc
call
sbb
push
test
add
cmc
iret
push
pop
das
dec
jecxz
out
pop
out
fidivl
and
pusha
pop
mov
sub
rcrl
jge
jle
js
lods
scas
aaa
sub
push
popf
sarl
iret
jl
clc
jo
dec
dec
add
mov
pop
sarb
mov
lock
movsb
push
lock
repnz
mov
movsl
fdivrs
mov
movsl
pop
mov
sbb
pop
movsl
sub
popa
pop
add
int3
jae
mov
cmp
jle
dec
xchg
repz
push
push
lret
jae
jo
adc
jns
mov
push
jp
add
mov
aam
jne
test
sub
dec
push
mov
xchg
adc
mov
xor
mov
loope
fisubrs
push
mov
jo
sbb
dec
dec
inc
pop
and
das
clc
nop
fwait
mov
mov
push
and
mov
adc
inc
rcl
jge
mov
mov
gs
mov
ret
lea
push
sahf
sub
mov
xchg
adc
mov
jp
into
popa
xchg
mov
push
mov
jbe
pop
jecxz
mov
or
fcompl
jmp
mov
ljmp
jno
push
mov
dec
push
imul
leave
cltd
adc
jns
push
xor
push
push
mov
aas
mov
inc
cmp
add
xor
out
mov
adc
fldcw
mov
sbb
movsl
mov
jno
into
pop
pop
pop
mov
aam
cmp
mov
iret
in
inc
and
push
insl
sbb
bound
aaa
sbb
add
inc
push
pop
out
cmovg
ss
mov
cmpsl
xchg
xor
mov
mov
imull
xchg
add
cld
push
xchg
outsb
or
ret
mov
cmc
pusha
add
mov
jne
dec
and
mov
and
xlat
mov
mov
and
xchg
or
dec
pop
lock
push
testb
xor
cmp
sub
cmpsl
icebp
ss
stos
and
stos
popa
cwtl
or
je
mov
je
subb
aam
or
pop
mov
inc
repnz
dec
loope
mov
or
mov
inc
rcrb
fistl
xchg
cwtl
or
adc
mov
in
loope
inc
pop
es
and
push
and
mov
rep
call
enter
and
push
dec
mov
sbb
xchg
arpl
or
lock
xchg
jmp
cmpsb
scas
fucom
add
push
cmp
sbb
into
add
pop
ss
jnp
lret
push
jne
xchg
push
fisubs
and
adc
scas
aas
inc
and
push
arpl
xlat
popf
jb
xchg
movsb
mov
ficoml
sbbl
dec
test
push
xchg
adc
out
lds
dec
adc
lret
lods
jmp
dec
cld
sbb
sar
pushf
xor
scas
inc
aam
mov
or
aad
test
or
daa
mov
xor
lods
cld
test
sub
cli
ret
push
pop
in
adcl
cwtl
cmp
mov
adcl
bound
adc
gs
pushf
inc
int3
decl
push
push
je
sbb
add
sub
mov
mov
mov
enter
push
or
add
and
arpl
cmp
pusha
ja
outsb
lds
daa
adc
ficomps
fcomip
and
push
push
xchg
sub
push
fwait
xor
int
hlt
jns
sub
jno
imul
mov
cmpsb
mov
xchg
clc
int
cmp
leave
and
cmp
push
push
push
cmp
repnz
outsb
push
and
push
enter
dec
xchg
inc
fsubr
push
fstp
ja
in
jb
pop
cmpsl
mov
cld
stc
outsb
lret
loop
scas
js
or
mov
jge
jg,pt
jl
or
stos
pop
jl
mov
int
ljmp
aad
idiv
sarb
pop
pop
ljmp
lret
pop
sbb
dec
addr16
push
popa
adc
int
pop
outsb
or
stos
sti
and
inc
fadds
inc
ljmp
out
add
lea
push
xlat
pop
mov
call
fdivrl
push
cmp
dec
mul
dec
in
adc
shr
enter
std
loop
dec
lahf
push
mov
cwtl
pop
add
dec
inc
xlat
xor
add
cmpsb
add
sbb
in
aaa
sub
pop
push
dec
aam
in
dec
cli
xor
mov
gs
lcall
and
jge
push
jnp
ret
mov
mov
cwtl
xchg
insl
aas
push
shrb
std
stc
je
cmp
and
inc
inc
mov
loope
cmp
cmp
add
cltd
dec
lret
cmp
sub
and
push
push
or
gs
insl
sub
mov
in
cmp
mov
xor
dec
fstps
push
jns
mov
pop
outsl
bound
xchg
push
mov
stos
out
es
test
leave
mov
in
inc
dec
gs
mov
dec
popa
pop
dec
jb
cltd
pop
rolb
mov
mov
inc
xor
jmp
xor
in
imul
and
movsb
xchg
push
hlt
addr16
fwait
inc
loope
or
push
xor
mov
inc
bound
mov
mov
orl
xchg
cwtl
jne
inc
mov
xchg
adc
push
push
repz
pop
cmp
jae
xchg
addr16
dec
jbe
push
pushf
or
popf
mov
in
das
addr16
jnp
push
jmp
lock
int
popa
hlt
dec
jecxz
fisttpl
xchg
stos
testb
hlt
inc
inc
dec
dec
ljmp
inc
je
lods
les
mov
sarl
iret
mov
push
mov
add
inc
pusha
push
sbb
mov
push
outsb
add
xchg
gs
lret
xchg
mov
mov
fnstenv
xchg
ljmp
mov
insl
jb
lea
aaa
or
pop
cmp
dec
dec
cmc
out
and
inc
aam
xchg
loope
mov
fdivl
mov
fildll
jne
icebp
mov
das
ljmp
push
pop
mov
fbstp
push
xlat
pop
xor
adc
rcr
xor
or
xchg
imul
iret
add
cs
adc
cmp
scas
sub
add
jle
jns
ljmp
or
lahf
cmp
bound
xchg
cli
pop
testl
jg
adc
pop
adc
fsubs
scas
movsl
cmp
mov
rcrb
int
xchg
dec
push
fimull
cmp
xchg
xchg
inc
adc
sub
nop
idivb
dec
hlt
mov
jae
jnp
sahf
or
mov
xchg
mov
pop
mov
add
sub
sbb
xchg
cmp
mov
jbe
mov
mov
mov
les
icebp
std
mov
push
out
ficomps
les
cld
out
arpl
fcoml
dec
loope
in
xor
push
arpl
xchg
mov
lods
repnz
cmc
cli
inc
data16
hlt
addr16
addl
cmp
enter
dec
or
addr16
jns
shr
out
adc
add
push
inc
cmp
loope
push
sarb
pushf
scas
leave
cmpsb
test
pop
stc
addr16
in
inc
inc
dec
pushf
fmul
sarb
mov
push
mov
inc
outsl
jg
xchg
sub
ljmp
add
shll
sbb
scas
adc
insl
call
dec
dec
ljmp
mov
cmpsl
fs
add
sub
loopne
inc
loop
mov
sub
inc
repnz
aas
out
sarl
loope
leave
mov
pop
in
cmc
cmp
movsb
cmc
and
mov
or
fwait
xor
inc
xchg
cmp
out
lcall
jecxz
lcall
addl
mov
add
push
test
imul
adc
jmp
pcmpgtd
ret
adc
aam
xchg
and
cmpl
cmp
mov
dec
dec
or
adc
clc
ret
cmp
mov
jnp
jle
imul
fidivrs
sub
idivb
cmpsb
xor
add
icebp
mov
test
dec
jbe
sub
xor
enter
and
mov
xchg
xor
mov
lds
push
rcl
push
popa
fsubs
test
push
sub
inc
pop
jbe
inc
mov
cltd
ja
or
adc
inc
mov
push
inc
pop
popf
jb
imul
adc
jo
sbb
inc
jo
jb
xor
mov
and
mov
lea
mov
xchg
cmp
cvtdq2ps
jb
xor
aas
dec
call
aad
faddl
adc
mov
xchg
mov
ret
mov
pusha
sub
test
rcrl
pop
lods
je
shll
into
and
and
and
mov
aas
imul
sbb
xlat
sub
fisubrs
ljmp
pop
mov
mov
in
jle
jecxz
cmc
adc
repz
add
xchg
pop
imul
cmp
arpl
inc
sbb
adc
mov
add
movsl
or
cmpsl
and
pusha
xlat
aad
and
add
rcr
inc
shrl
mov
stos
repnz
push
sbb
shll
sbb
xchg
adc
cmp
mov
push
lods
stos
inc
sbb
xor
and
jno
mov
or
jmp
xor
push
or
mov
or
loopne
mov
dec
pop
and
cmp
push
dec
and
lret
dec
adc
adc
popa
int3
negl
mov
call
push
push
jge
jb
daa
fsubr
or
mov
aas
xor
xchg
or
mov
lahf
xchg
push
repz
xchg
test
push
lahf
bound
dec
out
xor
test
popa
inc
cwtl
sbb
dec
pop
push
lods
adc
push
stos
xchg
xor
in
inc
jmp
mov
cltd
push
inc
fildl
test
and
mov
xor
cmpsb
shll
test
mov
pop
jl
pop
hlt
das
lods
mov
clc
jae
negl
mov
and
outsl
xchg
sahf
sbb
cmp
pop
ja
loop
add
sbbl
inc
les
call
ja
mov
test
xchg
or
jecxz
dec
in
adc
notb
add
fisubrl
pop
cmp
mov
adc
dec
dec
cmp
xchg
push
in
pushf
cmp
subl
cmpl
imul
sbbl
loop
mov
daa
clc
mov
loopne
sahf
and
dec
xor
xchg
insb
dec
faddl
xchg
mov
mov
stos
scas
test
jo
dec
lret
dec
jo
out
insl
jbe
in
repz
inc
push
sbb
sbb
ds
mov
xor
sub
icebp
dec
divb
adc
jbe
and
mov
das
insb
gs
mov
hlt
push
bound
js
das
test
lock
mov
sbb
cmp
out
push
mov
or
cs
sarl
sbb
adc
jnp
push
outsb
pushf
cmp
nop
pushf
push
inc
aad
in
scas
xchg
iret
dec
mov
add
mov
or
andl
ret
push
sub
jp
dec
jecxz
gs
mov
out
and
mov
jge
xchg
adc
jae
inc
cmpsb
outsb
xchg
adc
mov
cmp
pushf
sahf
andl
rcrb
insl
repnz
cmpsb
cwtl
dec
leave
lahf
div
cmp
lcall
push
and
or
arpl
adc
cmpsl
push
mov
stc
jo
xchg
sahf
cmc
jl
pop
sbb
adc
sarb
dec
ljmp
test
or
lahf
arpl
adc
mov
cmp
mov
insb
xor
pop
add
xor
faddl
inc
stos
ss
test
jmp
sub
jl
sub
add
popa
icebp
dec
inc
bound
xchg
sbb
xchg
or
pop
cmp
mov
cmp
jl
sub
rcll
nop
fyl2x
mov
rcll
iret
xchg
jns
or
fsubs
lods
lret
xor
dec
push
out
pop
xchg
adc
dec
aad
and
inc
pop
push
fistpl
ja
lcall
repnz
and
arpl
adc
mov
std
dec
pop
cld
inc
and
push
outsb
xchg
or
into
or
pop
pop
pop
insb
dec
mov
out
testl
lea
ficompl
adc
call
in
jno
inc
push
xchg
adc
popa
scas
pop
loope
stos
pop
or
or
pop
gs
push
into
mov
out
outsb
sbb
test
imul
es
inc
mov
jg
jmp
or
mov
lea
mov
fcom
outsb
add
cmp
call
movsb
cbtw
out
push
into
data16
dec
lret
cwtl
mov
sub
push
push
pop
mov
stc
cmp
sbb
mov
mov
sub
xor
and
lcall
ds
xchg
lea
adc
jge
push
mov
sbb
fcompl
or
pop
pushf
mov
add
fs
cmp
mov
xor
cltd
mov
inc
stos
xchg
rclb
mov
sub
out
xor
sub
push
test
sbb
iret
xchg
xchg
ds
dec
in
or
mov
dec
add
pusha
cmpl
jnp
je
popf
cwtl
stos
and
cmp
mov
push
imul
pushf
arpl
in
sbb
push
insb
push
xor
pop
push
lods
add
xor
mov
outsl
jb
cltd
jo
lret
push
cli
insl
in
or
mov
sahf
jge
adc
sbb
fstpl
int3
cli
sar
sub
pop
jle
loope
lds
pop
mov
sti
nop
out
inc
shl
out
cmp
jecxz
dec
sub
xchg
mov
sbb
punpcklwd
mov
loopne
test
inc
mov
xor
sub
imulb
jmp
dec
pusha
jle
shr
fstl
cmp
or
push
rcrb
aad
std
pop
fdiv
push
dec
iret
sbb
scas
scas
pop
cmp
imulb
popf
xor
xchg
movsl
daa
lahf
cmp
push
stos
jecxz
repz
xor
or
cs
dec
xlat
inc
fstps
inc
xor
rcrl
or
ja
ja
movsb
test
sbb
push
adc
push
out
sbb
pop
or
gs
stos
inc
int
inc
mov
enter
pop
mov
cltd
push
clc
rolb
push
je
mov
rol
pop
out
sbb
jmp
loop
aam
scas
es
loop
enter
push
lret
cld
invd
xor
fistpll
push
pop
xchg
jnp
sub
and
jge
mov
adc
and
dec
xor
adc
inc
insb
cld
scas
loopne
test
jecxz
aas
cmpb
scas
cld
xchg
lds
je
and
dec
lods
repnz
fistpll
inc
stos
sbb
loope
int3
lret
scas
pop
dec
push
ss
push
add
push
cltd
mov
inc
push
mov
adc
lea
das
ret
add
mov
cmpsl
jl
je
jp
dec
ljmp
inc
sbb
pop
int
jecxz
dec
and
jnp
push
pop
test
mov
adc
hlt
and
arpl
dec
pop
out
jnp
xchg
and
and
bound
cwtl
cmpsl
or
fsubr
scas
pop
fbstp
lods
loopne
std
pop
pop
in
rcrb
sbb
shlb
sub
out
les
dec
mov
xchg
out
xor
loop
into
aaa
or
mov
cmpsb
std
lods
test
pushf
sub
movsb
xchg
jbe
sub
sub
add
sahf
sbb
cld
mov
out
cwtl
pop
std
xlat
test
and
xchg
lea
fldt
mov
jl
jle
cmp
push
lods
dec
adc
test
out
cmp
pop
push
loope
xor
mov
dec
lcall
mov
outsb
clc
or
push
es
xor
and
lods
inc
test
lret
data16
xchg
fs
jecxz
jb
xchg
sub
inc
scas
mov
fildll
mov
pop
mov
fstpl
fdivl
vcvtpd2dq
imul
sbb
xor
lea
orl
adcl
pop
movsl
adc
pop
js
js
xor
lods
test
test
xor
inc
dec
dec
add
sti
in
mov
rclw
push
pop
lock
jl
cwtl
aad
or
pusha
xchg
xchg
sub
in
ret
or
pop
divl
cmp
jmp
daa
enter
push
sar
loope
lock
jmp
into
subl
xchg
xchg
dec
and
sub
rorb
sbb
push
imul
dec
push
jle
xchg
jp
pop
and
sub
fwait
ds
lahf
testl
xor
in
add
xchg
pop
mov
das
sub
js
clc
cwtl
in
aam
jns
inc
scas
loopne
inc
mov
lret
mov
jle
mov
xchg
daa
into
jl
push
lock
or
mov
mov
lcall
push
andb
pop
aad
dec
mov
cs
daa
fdiv
pop
movnti
xchg
dec
nop
add
into
repnz
jecxz
icebp
sti
stos
inc
sbb
mov
fdivrl
rorl
sub
mov
mov
ds
or
xchg
repz
pusha
mov
adc
out
push
imul
test
lea
aaa
xor
in
fildl
mov
cmp
notl
cmp
test
test
xor
add
movsb
bnd
mov
in
scas
mov
fnsetpm(287
push
fwait
sti
pxor
pop
adc
sbb
daa
add
adc
dec
daa
imul
arpl
in
jl
mov
jno
xchg
out
push
cmc
pop
and
pushf
jmp
int3
fsub
nop
pop
lcall
inc
mov
mov
les
sbb
ja
subl
push
inc
sub
movsb
cli
lock
inc
scas
push
rorl
mov
jns
jns
and
mov
outsl
out
insl
sub
push
push
fs
pop
push
xchg
mov
rol
leave
add
push
sarl
cld
inc
xchg
nop
ss
sbb
push
cmp
mov
xchg
test
cmpsl
pop
cmp
pop
lods
pop
out
scas
dec
hlt
sub
jl
int
sbbb
arpl
mov
mov
out
ljmp
pop
stos
inc
nop
add
inc
cmp
out
fsubrp
inc
rcl
jo
push
jge
push
in
mov
cwtl
stos
jp
cmpsl
cmp
pop
or
imul
xchg
pop
and
xchg
mov
leave
das
cmp
and
or
pop
inc
mov
iret
push
inc
cltd
add
lret
add
sub
cmp
jl
cmpsl
mov
pop
shrb
push
insb
mov
fisttpll
mov
ss
jg
dec
and
mov
add
mov
push
inc
push
jne
sti
push
push
sbb
adc
ficomps
inc
es
add
rcrb
ficoms
cmp
xor
mov
xchg
mov
aas
insb
or
stos
inc
inc
sarl
negl
sub
jb
fs
pop
stos
mov
sahf
fwait
mov
aam
imul
mov
pop
xchg
pop
call
cmp
or
cmc
mov
imul
out
lcall
jno
loopne
add
cmp
and
inc
xor
js
jge
sahf
test
adc
sub
jno
aas
dec
outsb
lds
jmp
jb
sbb
push
jg
inc
adc
jl
cmpb
fisubs
push
and
mov
inc
pop
jmp
sbbl
dec
pop
mov
ret
je
sub
cwtl
es
into
imul
cmp
jge
mov
pop
sub
mov
mov
pop
dec
and
add
sub
dec
fs
out
test
inc
mov
mov
mov
cmpsl
aad
shl
sbb
adc
mov
xrelease
adc
add
dec
popa
cwtl
das
xchg
outsl
cli
sahf
mov
stos
aas
lahf
mov
loop
test
jecxz
test
enter
add
mov
lret
push
lcall
push
insb
popf
call
xor
jb
adc
mov
repnz
sub
scas
xorl
adc
aad
hlt
addl
sub
cmpb
nop
daa
xor
jnp
sbb
inc
test
ds
dec
and
push
outsl
dec
rcll
incb
ljmp
jl
psrlw
sbb
es
scas
cmp
sub
add
neg
repnz
mov
aam
adc
mull
in
push
add
lcall
or
push
rorl
add
test
xchg
jo
add
ret
push
inc
jo
addr16
xor
push
hlt
dec
insb
sbb
sbb
out
sti
sub
jl
add
loopne
cwtl
xor
popa
cld
inc
rcrl
inc
lcall
and
sahf
sbb
sbb
lea
or
adc
js
jno
outsb
lahf
rol
adc
mov
gs
mov
xor
pop
fisubl
inc
cmp
cld
fcmovnbe
notb
mov
bound
shlb
adc
cmp
xor
mov
push
ja
loop
cmp
loop
mov
int3
ds
mov
lods
popf
orb
adc
clc
sub
insl
das
shrl
bound
iret
daa
jnp
pusha
fadd
sarl
rcrb
cmpb
mov
mov
aam
subl
sbb
sub
pop
mov
and
mov
aam
rcrb
dec
xlat
xor
mov
rorb
cmp
pop
xchg
sub
jmp
ror
sub
js
pop
imul
sbb
xchg
add
icebp
xor
or
flds
push
adc
aaa
lret
and
or
lcall
scas
and
jo
jno
adc
adc
hlt
adc
push
jne
xor
xlat
jg
mov
xor
dec
ljmp
or
shrl
jbe
xor
ret
jae
cmp
xor
in
in
add
jg,pt
add
jg
pusha
xchg
out
jbe
xchg
mov
xchg
add
xor
pop
push
outsl
je
jl
xchg
xchg
scas
xchg
iret
cmc
adc
dec
adc
stos
orl
xchg
and
sub
stos
sbb
fs
push
jns
dec
jmp
out
mov
push
adc
adc
gs
outsb
scas
je
or
inc
fcmove
xchg
les
add
std
mov
shrb
lods
mov
out
jbe
insb
sub
jl
sbb
data16
xchg
popf
mov
call
aaa
mov
jne
scas
pop
ficompl
xor
mov
ret
cli
arpl
hlt
int
mov
int
sahf
adc
iret
std
xchg
pop
loopne
xlat
pop
in
repnz
leave
flds
aad
push
call
hlt
sbb
jnp
or
addr16
pop
fnstcw
iret
push
in
and
sti
mov
inc
outsl
fucom
or
loope
xchg
in
cmp
pop
scas
cld
push
push
xchg
mov
loopne
adc
push
sbbl
int3
xrelease
jae
ret
cwtl
push
fidivrl
ficompl
hlt
fisubl
popa
std
xchg
push
push
inc
cld
movsl
xor
xchg
loop
outsl
rolb
nop
push
rcll
jo
es
das
push
xorb
and
es
scas
mov
rorl
clc
jg
and
loop
or
pop
shll
push
loop
cmp
movsb
mov
insl
xor
dec
in
inc
nop
jne
add
dec
push
iret
add
lock
fcoml
stos
xor
test
inc
adc
std
pop
sbb
insb
lods
mov
sub
mov
ficompl
xchg
mov
das
test
sbb
add
ret
dec
sub
loopne
jmp
mov
jle
orb
pop
rep
in
out
fimull
cmp
icebp
insl
imul
push
fs
outsb
fdivrl
sub
inc
lret
adc
pop
xor
jae
push
loope
mov
and
dec
pop
lock
dec
pop
cld
lret
ja
outsl
cmp
push
inc
sti
into
gs
dec
sbb
lret
stc
push
sar
pop
imulb
xchg
or
pusha
or
cwtl
std
push
scas
mov
shrb
mov
sub
mov
dec
insl
gs
loope
pop
push
xor
jne
scas
into
or
add
insb
nop
dec
rorb
inc
mov
mov
jecxz
push
jo
adc
jae
sbb
pop
adc
ds
jmp
mov
orl
das
mov
mov
sub
pop
in
dec
pop
aas
pop
lods
in
shll
outsb
inc
xor
mov
fwait
psrad
jp
mov
pop
dec
out
push
lods
cmc
pop
add
push
add
mov
sbbb
push
jae
lds
add
je
mov
shld
lret
icebp
xor
and
xchg
movsb
ljmp
adc
mov
ret
push
aas
xchg
je
cmpsb
clc
movsl
ljmp
ljmp
les
or
cwtl
mov
arpl
adc
cmpsb
movsl
xor
or
mov
or
lds
shr
dec
rol
pop
add
or
mov
scas
call
fistps
int
lcall
mov
out
sbb
gs
jg
adc
or
inc
inc
pop
lods
addb
mov
out
leave
cmpsl
ja
jo
mulb
jmp
xor
fdivr
mov
dec
mov
in
es
loopne
mov
push
cmpsl
dec
mov
adc
loop
cwtl
sub
inc
xchg
inc
inc
inc
sbb
repnz
sbb
xchg
cmp
cld
jo
jno
jb
mov
popa
pop
sti
xchg
dec
clc
cmp
sub
arpl
push
les
nop
sub
adc
inc
lret
sub
stos
adc
or
loope
mov
xor
mov
enter
add
loopne
hlt
testb
fdivrl
daa
test
lahf
repz
and
insl
jge
push
es
lcall
dec
in
sbb
pop
jb
movsb
lret
jns
cmp
iret
inc
push
inc
sbb
mov
iret
and
fcoms
pop
jmp
ret
fidivl
jmp
ret
fstpt
mov
das
outsb
test
and
jmp
out
push
sahf
jl
xchg
mov
repnz
mov
push
sub
adc
mov
jge
lods
in
mov
addr16
ljmp
insl
rorl
mov
cmp
in
loope
dec
pop
jae
subb
sbb
mov
add
or
push
ret
mov
fdivs
add
leavew
mov
iret
adcb
sbb
inc
adc
xchg
aad
adc
mov
sub
mov
push
lahf
pop
inc
xchg
les
push
mov
ret
stos
shr
std
mov
outsl
jmp
mov
insb
stos
frstor
bound
aam
or
icebp
push
push
shlb
ljmp
cmpsb
popf
and
scas
xor
call
adc
daa
test
pop
xor
popa
sub
xchg
mov
scas
or
cmp
rol
pop
pop
xchg
gs
cmpsb
insl
and
cmpsb
add
scas
xchg
jg
mov
mov
das
dec
or
mov
pop
mov
pop
jl
adc
fcomps
add
push
icebp
push
sub
lods
ss
je
and
dec
data16
repz
imul
sbb
cmp
sbb
inc
or
mov
loop
test
jbe
inc
and
adc
outsb
fisttpl
add
jg
mov
loopne
shr
clc
mov
mov
xor
and
adc
jl
cld
mov
enter
pop
call
xor
stc
sahf
add
xor
mov
adc
mov
popa
mov
sub
sub
in
sub
ljmp
inc
addr16
inc
mov
icebp
cwtl
shrl
or
leave
ret
clc
fsubs
scas
fscale
fsubrp
sub
xor
and
xchg
iret
shlb
dec
push
fldt
or
das
mov
nop
xor
add
mov
loopne
sbb
rorl
adc
rolb
pop
adc
mov
jns
js
sbb
mov
mov
je
out
stos
and
xchg
mov
je
out
jb
clc
ret
adc
sarb
mov
pop
adc
mov
add
loopne
fbstp
cltd
stos
jl
sbb
insl
adc
dec
cmc
jecxz
mov
pushf
les
adc
sbb
sbb
sub
xor
enter
in
enter
sbb
sub
jmp
loop
stc
xor
mov
test
loopne
xor
and
adc
outsb
add
lock
push
scas
inc
test
je
cld
and
push
sbb
nop
arpl
xor
cmp
dec
repnz
inc
imulb
ljmp
xor
std
cwtl
repnz
pop
imull
lods
adc
fucomi
push
sbb
in
push
in
cmpsb
repnz
sub
insb
ja
inc
add
inc
pop
jae
cmp
xchg
lock
out
mov
fstl
dec
out
sub
imul
and
popl
nop
inc
popf
xor
mov
ljmp
adc
fildl
pusha
subb
xorl
or
cs
xorb
pop
fidivs
xor
dec
test
scas
push
cmp
adc
aas
xor
pop
lcall
jg
dec
dec
ja
lret
push
jns
cmp
cmp
lds
shl
inc
dec
xlat
repz
out
and
cld
xchg
test
xchg
inc
jl
pop
xchg
test
shl
and
and
and
push
out
xchg
mov
push
sti
es
jo
pop
mov
cmpsl
repnz
fnstenv
mov
rorb
test
xor
std
mov
dec
rorl
ror
imul
popf
je
imul
repnz
outsl
push
repz
dec
loope
add
jno
lds
mov
pop
js
cmp
xchg
mov
cltd
std
shrb
outsl
loop
mov
dec
mov
xor
sbb
aam
jmp
inc
insl
ja
adc
dec
test
pop
fidivl
std
sahf
xor
repnz
mov
pop
xor
mov
inc
mov
pop
cmp
sub
mov
dec
mov
jnp
inc
mov
jnp
cmpsb
push
push
rolb
gs
and
push
mov
or
dec
mov
stos
inc
daa
xchg
sbb
cmp
jl
pop
imul
xor
sbb
and
sbb
xchg
xchg
dec
sub
push
sub
hlt
aas
mov
cmp
xchg
sub
stos
rcrb
roll
je
add
xlat
and
daa
sub
std
and
adcl
cwtl
mov
cmc
lea
cmp
ljmp
fstl
mov
or
test
dec
in
cmp
ljmp
stc
mov
hlt
push
test
cmp
cwtl
daa
rcl
pop
insb
add
lods
subb
sub
adc
add
xchg
mov
mov
mov
sub
sbb
xor
fnstenv
xchg
and
notb
sbb
xor
mov
mov
cmpsb
aad
push
adc
add
shlb
jle
fdivl
push
sbb
sbb
push
stos
cmp
fcomps
test
mov
int
jmp
pop
inc
std
or
outsb
adc
cmpb
add
frstor
xchg
add
je
pop
xor
xchg
jmp
cwtl
sbbl
jp
jbe
jns
xor
sbb
js
dec
ds
scas
mov
jg
xor
or
cmp
mov
filds
cs
and
pop
or
cmp
in
jns
sub
sub
xchg
cmp
je
test
xchg
push
jecxz
adc
sti
lea
in
ret
negl
mov
stos
xorb
xor
cmc
rcll
cs
rcrb
jecxz
inc
mov
add
sbb
lcall
loop
cmp
fldl
not
pushf
out
in
pop
or
xor
inc
icebp
push
in
sbb
mov
int3
and
fistps
mov
mov
cmpsl
add
mov
clc
bswap
adc
mov
shrl
popf
loop
and
push
mov
fsubp
pop
int3
repnz
and
fcompl
inc
xchg
xor
je
push
hlt
and
xchg
cmpsl
out
jle
push
jb
in
aaa
add
clc
pop
adc
ja
sub
mov
fidivrl
iret
mov
cmp
out
imul
push
adc
mov
xor
jle
jb
std
sub
sbb
mov
and
sbb
xor
lea
aaa
notl
push
pop
mov
jge
enter
stc
shll
mov
stc
xchg
repz
pop
mov
jo
push
loope
cs
inc
fstp
sbb
test
mov
fcomps
mov
and
mov
dec
dec
mov
insl
pcmpeqw
cmp
cld
into
cmpl
push
jecxz
out
cmp
std
jge
mov
cmpsb
pop
cld
lcall
in
stos
mov
fnstenv
ja
fcompl
daa
dec
notb
test
dec
dec
xchg
xor
scas
call
fistps
inc
pop
or
jecxz
mov
xor
mov
mov
iret
pop
ret
jbe
sub
xchg
daa
fidivrl
pop
and
pop
notb
enter
data16
pop
dec
aad
imull
or
in
mov
mov
popf
insl
adc
xor
fs
mov
fldenv
cmpsb
xchg
mov
sbb
rolb
das
or
aad
leave
and
or
mov
or
pop
sahf
sahf
xchg
xor
ret
hlt
test
ret
pop
icebp
hlt
addr16
ret
jle
pop
cli
or
in
xor
lret
cmp
ss
jo
cmp
jne
out
adc
insl
imul
inc
enter
push
les
divb
addr16
jl
pop
xchg
sub
sahf
sti
test
jno
scas
leave
sbbb
testb
lods
insl
shlb
pop
or
add
jbe
mov
jbe
inc
mov
ret
outsb
data16
into
and
in
cmp
jb
mov
int
or
pop
mov
orl
jmp
push
xchg
xor
xor
inc
mov
jo
jb
lock
add
sub
pop
loope
cmp
jnp
shlb
aaa
je
inc
dec
pop
sbb
outsl
push
in
pop
sahf
clc
xlat
mov
add
dec
dec
in
stos
test
data16
push
inc
and
pop
sti
xorb
cmp
insb
mov
mov
or
addr16
rcrl
fdivp
enter
and
pop
lcall
push
and
notb
push
adc
jecxz
fldt
jmp
shrl
add
sub
sahf
sub
pop
cmp
daa
out
mov
fldt
xor
aam
les
mov
pop
ljmp
popf
mov
lret
adc
shll
xor
cltd
sbbb
jnp
sub
jns
cli
iret
xor
dec
pop
xchg
pop
fistl
mov
and
pop
stc
push
mov
mov
or
or
xlat
push
push
cwtl
xlat
aam
clc
outsl
aaa
adc
cmp
mov
mov
push
daa
ljmp
test
adc
ljmp
mov
rcll
mov
push
sub
pusha
mov
inc
add
jmp
push
mov
pop
je
int3
pop
lds
popf
rcll
adc
jp,pt
add
pop
insl
rol
pop
cltd
mov
out
lods
sbb
cmp
or
fnstenv
push
add
mov
rorl
pop
int3
mov
dec
rorl
mov
sub
aad
push
push
js
dec
jbe
orb
popa
ds
cmp
mov
je
repnz
push
mov
loopne
jp
pushf
rol
xchg
push
sahf
and
ret
rol
rol
imul
lea
ret
dec
add
mov
shll
out
inc
push
mov
mov
inc
pop
jae
fs
int
mov
fs
pop
adcl
push
dec
out
test
and
pushf
ficomps
icebp
push
lcall
int
mov
in
jbe
inc
nop
push
fcmovbe
xchg
mov
mov
testl
xor
sbb
lea
mov
adc
cld
mov
pop
push
sti
and
and
mov
insb
flds
pop
adc
push
add
push
pushf
enter
xchg
push
dec
iret
cmc
add
jl
and
shlb
inc
cltd
xor
subl
repz
pop
push
jp
ffreep
push
loopne
aad
mov
movsb
test
orb
mov
jmp
aam
lahf
std
xchg
inc
xchg
adc
mov
jge
ficoml
les
mov
add
nop
sahf
in
xor
mov
mov
xor
cmpsl
mov
icebp
and
stos
jns
xchg
jno
pop
icebp
mov
mov
or
xor
iret
daa
xchg
cs
xor
mov
hlt
add
ret
push
push
into
fadd
add
push
ljmp
mov
arpl
insb
xchg
mov
xchg
js,pn
mov
jmp
out
shl
aaa
lock
inc
jmp
xorb
jae
je
mov
add
jns
adcb
lret
mov
shlb
mov
jne
shrb
aad
enter
sbb
and
xchg
xor
ljmp
push
cmovno
xchg
xchg
sub
loop
dec
clc
shrb
fmuls
loopne
and
or
pop
ss
loop
aad
mov
out
lock
fisttps
sbb
lock
xlat
sbbl
pop
out
dec
cmp
xchg
scas
push
pop
adc
mov
pop
adc
insl
xor
pop
jmp
mov
subb
adc
inc
int
js
shll
push
icebp
movsl
fiaddl
aaa
rcl
fs
and
fimuls
aaa
xor
push
push
es
cltd
push
mov
shll
bound
fucomi
in
das
dec
inc
pusha
clc
mov
in
mov
adc
mov
loop
add
mov
movsb
shlb
jl
imul
mov
pop
addr16
jle
les
idiv
sub
icebp
jns
add
xchg
insb
jle
lea
es
data16
je
inc
push
jb
mov
pop
xchg
out
sbb
dec
loope
ret
aas
rcr
rep
mov
mov
sub
pop
mov
dec
sub
pop
sub
dec
daa
jl
push
adc
inc
jae
lcall
out
outsb
add
addb
jl
int3
lret
in
mov
mov
lret
add
cmpsl
in
jl
adc
add
inc
sub
mov
lock
mov
pushf
pop
ja
inc
xchg
pushf
outsl
push
sub
xor
stos
sbb
into
push
mov
stc
dec
lea
xchg
jg
adc
mov
movsb
pop
orl
mov
js
jp
lcall
sub
insl
and
mov
popl
subl
and
mov
push
inc
enter
sub
mov
or
outsl
dec
or
sub
pop
pop
subl
lahf
jae
cs
fdivrl
pop
mov
mov
mov
enter
addr16
xor
jo
cmp
fsubrl
sbb
negb
cs
pop
sub
scas
call
or
inc
pop
movsb
inc
add
pusha
pop
pop
loop
jns,pt
mov
add
subb
cmp
popf
inc
fsubrs
icebp
and
fiaddl
rcll
jecxz
loope
mov
popf
mov
xor
bound
mov
add
xchg
push
mov
push
sub
adc
sbb
cld
ret
and
cmp
out
pop
add
clc
lahf
hlt
inc
cmp
out
data16
out
mov
aas
jp
jg
jg
insb
fisttps
sub
fidivrl
mov
mov
cmpsl
or
mov
in
sub
jno
cmpsl
xchg
adc
xchg
or
scas
sti
inc
mov
xchg
repz
pop
inc
lcall
inc
and
add
pop
or
and
fstpl
xor
inc
hlt
push
push
popa
xchg
stc
xchg
mov
enter
sbb
addl
fistl
jae
lods
or
push
cld
dec
in
jge
out
fs
xchg
or
sbbb
aad
and
rolb
les
cmp
mov
es
ret
dec
ljmp
sbb
lret
jecxz
pop
sbb
xchg
mov
push
addr16
jbe
inc
push
mov
mov
xor
inc
fcmove
lods
dec
or
lock
test
icebp
mov
and
shl
mov
pop
hlt
jbe
adc
push
pop
mov
mov
cmp
or
or
jp
xchg
nop
mov
ret
sahf
and
cmp
fidivrl
mov
imull
jns
add
xor
sbb
ret
stos
rcll
pushf
mov
clc
dec
push
iret
sub
add
xor
or
adc
andl
movsl
add
fldenv
push
mov
add
js
push
fisubl
pop
subl
out
aam
pop
push
pop
jle
and
shll
test
jle
fsubr
lret
ss
packuswb
int3
and
cmp
inc
addl
data16
rcrl
mov
sub
jne
inc
sbb
mov
movq
mov
mov
cld
cmpsb
test
push
jge
iret
push
insb
out
dec
sbb
inc
cmp
xor
js
xlat
and
add
ds
or
pusha
xchg
stos
cmp
div
nop
dec
xor
sub
mov
fdivs
call
aas
stc
daa
inc
shrl
mov
xchg
lods
jne
aad
test
test
sbb
push
mov
scas
mov
or
test
in
sub
in
in
mov
ret
jnp
in
data16
fnstsw
mov
xor
ja
fprem
sahf
pop
test
call
fnstsw
sbb
sbb
imul
test
push
daa
insl
or
dec
sub
xor
xor
clc
and
cs
and
notb
pop
mov
mov
negb
rclb
cmp
jp
mov
add
test
and
xchg
xor
hlt
adc
mov
jecxz
addr16
xchg
sub
insl
test
mov
dec
in
add
fcoml
mov
scas
test
lahf
rorl
ret
xchg
add
lods
mov
xchg
popf
push
push
nop
jnp
or
dec
jno
add
mov
jae
mov
xor
inc
out
outsl
arpl
call
xor
inc
mov
sbb
cwtl
pop
push
call
ja
ljmp
rclb
aad
popf
push
mov
cmpsl
out
mov
fnstenv
mov
stc
nop
mov
movsl
jnp
xchg
pushf
dec
jmp
or
push
inc
neg
inc
sub
mov
dec
into
and
shrb
inc
shr
xchg
sahf
jno
mov
rcrb
js
add
ret
cld
mov
add
out
int3
cltd
imul
test
cmp
arpl
insl
daa
cmp
mov
or
sub
pop
mov
and
mov
fldenv
or
jg
sub
sbb
fdivs
mov
jl
sub
scas
jns
or
dec
push
add
xor
lea
js
mov
cmp
pop
movsb
leave
dec
sub
cld
push
gs
lds
dec
ljmp
adc
cmp
loopne
push
leave
mov
adc
int3
add
test
push
push
adc
or
loop
es
in
jae
xor
nop
popa
jo
scas
aad
add
adc
fcoms
clc
add
sub
out
jb
std
in
sbb
sbb
imul
test
inc
adc
out
call
iret
ret
ja
pop
jbe
movb
xchg
add
iret
je
mov
push
push
dec
fwait
pusha
and
int
shr
xor
push
push
add
jg
stc
push
subb
mov
lds
popa
pop
mov
or
sahf
pushf
movups
push
fdivl
scas
inc
out
xchg
jecxz
mov
pushf
push
push
jo
adc
cld
xchg
inc
lock
shlb
insb
mov
and
orb
cmp
and
data16
jp
fcoms
filds
es
sub
sub
pop
fidivl
arpl
dec
add
xor
ljmp
or
sub
leave
push
lods
jne
int
push
adcb
add
sbb
stos
mov
and
repnz
stc
pop
je
cmpl
enter
lea
mov
push
ss
adc
mov
jg
push
push
lods
sbb
push
inc
jne
and
pushf
inc
rcl
mov
cmp
push
sub
in
pop
gs
ret
std
and
pop
lods
pop
cmp
les
jb
cmp
insb
lret
inc
cmp
mov
mov
ss
ljmp
push
subb
gs
popf
insb
sub
xor
mov
mov
aad
cs
lea
mov
sbb
pop
movsb
popf
jmp
xor
xor
sub
stos
int
sub
arpl
pop
scas
aam
bound
aaa
lret
fsubrl
popf
mov
jmp
imul
aam
flds
cmp
sarl
sbb
loop
mov
aaa
je
arpl
push
gs
cmp
mov
sarb
and
xchg
fnstenv
add
out
loope
push
or
mov
stos
test
dec
mov
cmpb
xchg
sbb
out
xchg
jmp
push
adc
pop
sarl
cmp
push
mov
sub
jl
xor
mov
shll
sti
cs
pop
mov
movsb
mov
sbb
sub
sbb
push
pop
mov
in
xchg
scas
xor
add
adc
les
int
pushf
pop
repz
out
std
or
imul
cmp
inc
xchg
icebp
sub
ljmp
and
and
fs
mov
imul
xor
stos
rcrb
mov
fstl
mov
jmp
out
adc
pop
cmp
test
aad
pop
sub
mov
dec
pusha
mov
lock
xor
xchg
sub
out
outsl
pop
rcrl
js
push
pop
cltd
ds
xor
mov
xchg
jmp
movsl
setge
dec
add
mov
ret
pop
hlt
adc
mov
inc
inc
dec
pop
cld
mov
mov
clc
gs
fxch
stos
push
or
mov
lret
push
xor
daa
or
xchg
sub
sub
jno
add
das
aas
outsb
call
mov
cltd
xor
add
test
scas
fadd
jae
aaa
xorb
outsb
subl
mov
mov
mov
push
addr16
mov
repnz
or
lock
mov
ss
sbb
cmp
dec
iret
and
lock
out
cltd
mov
rol
cmp
loop
mov
les
push
sbb
jno
pop
fmul
jl
push
fxch
xchg
insb
sub
lret
xor
out
xchg
cmpsl
cmp
fbstp
shrb
or
incl
pop
lods
imul
enter
test
pop
lcall
add
cmpsl
xor
fdivs
mov
shlb
rep
cmp
mov
std
pushf
dec
ficompl
mov
in
outsb
cwtl
dec
pop
mov
xchg
movsl
lds
leave
shrb
dec
cmp
repz
adc
frstor
notl
std
sbb
dec
xchg
imul
inc
stos
xchg
test
mov
push
out
add
inc
sub
pop
adc
popa
inc
ljmp
xor
ds
mov
outsb
icebp
pop
jl
mov
leave
ss
movsb
sub
xchg
cmp
jp
dec
push
jns
shr
cwtl
icebp
pop
push
xlat
sbb
cmp
cmp
scas
test
shl
jl
hlt
cmpsl
or
pop
mov
mov
bound
jmp
iret
ds
jge
and
sarl
ss
push
inc
xor
mov
add
out
ds
dec
adc
out
mov
inc
ret
inc
lcall
mov
mov
mov
pop
bound
mov
jns
dec
scas
cmpsl
jns
in
cmpl
jo
testb
mov
pop
rclb
int3
and
inc
cld
adc
ja
mov
pushf
lea
push
push
push
js
cld
adc
in
insb
push
stos
aas
dec
add
xor
jecxz
sbb
mov
push
outsb
popf
repnz
lret
adc
loopne
mov
in
call
lea
cltd
sub
push
std
push
js
xchg
jns
push
fmull
stc
test
inc
mov
adcl
stc
mov
push
cmc
or
shlb
xchg
fdivrl
jnp
js
xchg
pop
sub
xchg
test
lock
inc
xor
adc
jo
xor
dec
jnp
es
lret
dec
test
rorl
pop
and
rcr
shl
sti
repnz
sbb
lds
push
aad
jge
push
sub
movsb
add
mov
in
lods
inc
and
xchg
sbb
out
add
adc
push
xor
or
ficoml
xchg
sub
repz
jb
test
mov
xor
js
inc
mov
aam
das
inc
jns
lea
es
outsb
pop
mov
lds
xchg
lds
lock
lock
pop
test
adc
xor
ret
adc
or
jmp
mov
xchg
pop
andl
scas
leave
cmp
push
jae
in
outsl
movsb
repnz
test
or
outsl
sbb
test
lock
in
mov
int3
adc
push
mov
adc
out
loope
adc
dec
add
jae
mov
push
inc
sbb
sbb
ds
scas
scas
daa
or
jb
inc
sub
jg
pop
shl
popf
scas
push
xlat
jmp
jp
popf
push
lds
stc
mov
ljmp
call
dec
loopne
scas
sahf
mov
fsubrs
repz
aas
inc
jb
sbb
test
push
popf
cmp
pop
and
scas
leave
fstl
jp
inc
dec
pop
dec
cwtl
outsl
mov
imul
sbb
sub
cmpsl
ret
ds
icebp
cs
xor
mov
js
mov
call
adc
movsb
fcomp
push
clc
jo
or
adc
xchg
pop
cmpb
rcrl
adc
mov
pushf
inc
sahf
cmp
xchg
push
sti
pop
sahf
sub
sbb
paddd
scas
sub
pop
fists
xor
push
cmp
push
adc
pop
jp
push
in
pop
lahf
mov
inc
iret
gs
add
jno
push
mov
xchg
out
mov
sarb
or
mov
mov
add
push
insl
lahf
sub
lock
sbb
dec
leave
les
push
testb
es
std
aam
lock
pusha
idiv
std
push
scas
jnp
jg
jbe
adc
aad
aaa
or
cld
or
fldl
mov
lods
mov
scas
enter
jg
test
dec
lods
inc
jl
aaa
dec
jne
dec
adc
and
cmpsl
rcrl
pop
mov
xlat
repz
sbb
adcb
jmp
in
mov
pop
insb
scas
mov
repz
cld
jge
lret
fmull
inc
inc
inc
cltd
test
xlat
cmp
and
clc
mov
jp
arpl
pusha
xchg
jecxz
int
je
pusha
or
lds
fsubp
xchg
aad
xor
push
aam
cs
cmp
jbe
loope
orb
lods
repnz
dec
pop
mov
hlt
inc
sub
and
in
push
push
in
lahf
add
xchg
xorb
movsl
test
popa
movsl
xlat
pusha
pusha
push
xchg
sbb
or
std
pop
adc
push
mov
xor
idiv
xchg
dec
mov
out
popf
cmp
addb
arpl
imul
mov
pop
or
dec
add
xor
sub
jbe
mov
pop
out
stos
dec
movsl
jae
loope
xor
lcall
mov
adc
pop
loope
call
icebp
ds
in
cmp
inc
out
lock
mov
and
xor
mov
into
mov
insb
sbb
repnz
das
ret
push
fwait
inc
mov
xor
or
test
cltd
std
adc
add
jae
fidivrl
adc
mov
ljmp
data16
nop
pop
outsb
shll
fsubr
pushf
pop
rorb
andb
gs
cli
xchg
push
sub
cmpsl
scas
push
subl
bswap
sub
jnp
pushf
xchg
adc
cmpsl
jbe
sbb
les
cmp
cmpsb
xor
adc
in
bound
mov
mov
cld
orb
xchg
adc
fsubrs
pop
jno
arpl
pusha
es
xor
int3
outsl
and
lret
or
in
fadds
xchg
sbb
mov
insb
sub
ss
or
into
mov
lret
out
cwtl
shrb
sub
repz
push
cs
data16
dec
test
mov
lods
inc
push
add
inc
push
arpl
js
or
adc
xchg
inc
pop
data16
cltd
popa
and
repnz
mov
lods
sbb
mov
cmpb
sahf
xchg
loope
push
mov
into
ret
fisubrl
loop
mov
test
fistpll
aam
add
stos
sahf
stos
fldt
pop
imul
jecxz
mov
dec
add
insl
loop
push
dec
mov
xor
xor
rolb
add
pop
lea
mov
jmp
insl
add
nop
je
stos
jg
xchg
mov
fs
out
mov
jnp
adc
add
mov
mov
andl
push
cld
addb
or
fisttpl
in
stc
std
sub
pop
ficoml
xor
pop
insb
lret
inc
cmpxchg
pop
dec
push
or
sub
cltd
cmp
pop
movq
and
rcl
fcmovb
dec
jg
repnz
lods
jg
add
cwtl
mul
xor
jmp
cwtl
cmc
iret
add
movsl
mov
dec
cli
xchg
inc
xchg
ss
es
add
mov
push
out
mov
dec
pop
pop
cwtl
add
add
mov
pusha
sub
fdiv
cmp
push
clc
sub
dec
stc
xchg
arpl
dec
iret
add
push
out
es
sub
cmp
stos
mov
pop
stos
insb
adc
push
andb
pop
mov
lret
and
imul
inc
xlat
out
and
inc
xor
hlt
cmp
mov
mov
hlt
mov
mov
or
and
ret
test
cwtl
fs
insb
push
push
std
sbb
mov
dec
popf
mov
xchg
and
fisubrl
gs
clc
xor
sbb
pop
xchg
xor
mov
or
adc
pusha
jo
pusha
shl
popf
jo
std
les
pop
addb
add
rcl
lods
test
enter
mov
cli
mov
jmp
pop
sarl
jb
dec
outsl
daa
jns
lea
dec
jecxz
xchg
dec
shlb
mov
in
flds
jns
and
outsb
aas
jnp
xor
outsl
push
sub
push
negb
imul
out
pushf
inc
sub
and
xchg
pop
mov
push
mov
mov
jne
leave
cs
clc
ret
mov
gs
jae,pn
push
gs
pop
mov
mov
arpl
sub
mov
fwait
xorb
int3
lock
sahf
cmp
mov
or
cmp
sub
cmp
add
addr16
das
dec
jecxz
sub
mov
push
mov
dec
idiv
aas
lock
mov
lds
outsl
jne
mov
push
sub
out
sbb
cmp
pop
testb
insl
ret
outsb
pop
arpl
sbb
push
sbb
or
mov
in
xor
cmp
insb
mov
in
dec
repz
shll
pop
pop
pop
fildll
mov
push
sub
popf
je
and
ficoms
inc
xchg
jae
mov
lods
mov
imul
notl
cmp
les
shlw
pusha
imul
xchg
dec
jb
outsb
scas
or
and
mov
icebp
movsl
notb
and
adc
push
adc
inc
pop
mov
icebp
in
mov
ret
xchg
jmp
nop
xor
lea
cmp
xchg
pop
dec
imulb
dec
sub
ret
pop
insb
xor
fwait
cmpsl
lods
push
add
nop
push
jb
icebp
notl
or
outsb
add
in
inc
cmp
cmp
cmpsb
push
mov
jbe
inc
rorb
mov
imul
in
ds
rcll
out
nop
add
les
test
imul
loop
or
jg
ss
cld
lret
inc
pop
jmp
xchg
mov
flds
mov
in
leave
jecxz
ret
mov
xor
js
add
test
cmc
pop
mov
in
dec
popf
or
and
lahf
xor
pushf
out
push
cwtl
test
cltd
push
inc
in
xchg
cmp
insb
mov
mov
call
sub
lds
loope
lds
inc
lret
jmp
inc
arpl
fimull
iret
adc
loopne
jmp
es
push
xor
fistpl
cli
aad
inc
jge
mov
fsubp
sub
dec
aam
test
adc
fisubrs
or
fwait
adc
ss
lock
repnz
clc
adc
adc
mov
nop
lret
lods
sti
bound
out
scas
test
in
je
inc
call
fiadds
in
rcrb
pushf
fnstsw
fidivrl
mov
sub
add
xchg
sbb
lods
out
xor
rclb
or
into
xor
adc
adc
js
adc
adc
jbe
adc
xchg
loop
rolb
mov
lods
inc
lret
inc
mov
dec
rcrb
pop
repnz
inc
add
cld
dec
pop
idivb
movsb
out
insl
push
or
jne
push
aad
push
lret
imul
pop
das
in
push
sub
sub
je
mov
sub
testl
push
mov
inc
notb
mov
inc
roll
lods
les
hlt
js
and
iret
xchg
outsl
xor
mov
nop
push
or
cs
subl
fdivrl
push
out
push
sub
imul
leave
stc
test
pusha
xor
mov
and
popa
cld
sub
ss
push
imul
inc
mov
sub
sbb
outsb
push
sbb
je
cld
mov
in
shlb
push
call
ss
lds
enter
lret
pusha
clc
hlt
lahf
fmulp
enter
jo
dec
fcmovne
and
stos
mov
int
test
or
dec
das
xchg
sarl
lahf
pop
pop
jp
push
imul
mov
xor
popa
mov
rorb
iret
sub
mov
inc
aas
jns
and
add
mov
data16
lret
iret
ss
mov
pop
inc
int3
int3
testb
dec
dec
mov
insb
cmp
sub
stos
inc
sub
inc
sbb
in
sbb
std
or
dec
test
and
hlt
lea
mov
xlat
stc
inc
or
xor
out
leave
jecxz
cmp
dec
push
js
mov
jb
daa
movsl
int
fisubrl
lret
popa
add
pop
push
jno
or
dec
cld
xorb
out
cwtl
movsb
jecxz
int3
rol
arpl
aam
jno
lods
xor
pop
testb
push
and
adc
and
in
sbb
xor
sub
or
stos
sbb
xor
pop
mov
xor
mov
mov
repz
mov
dec
loopne
pop
mov
ficompl
lahf
push
negb
sub
iret
mov
fadd
arpl
int3
scas
add
sbb
xchg
outsb
in
inc
cli
loope
and
cmpsb
std
fldenv
adc
call
or
adcb
stos
rcrb
mov
call
cmpsb
push
sahf
test
arpl
sbb
int
jge
test
mov
shl
mov
sub
add
gs
xor
inc
pushf
mov
inc
lds
out
and
adc
inc
add
adc
subl
out
jmp
or
xor
push
cmp
push
xchg
add
inc
sahf
xorb
push
push
adc
pop
addl
loope
fisttpll
pop
mov
mov
int
push
imul
stos
in
ret
outsl
push
addr16
popf
mov
imulb
andb
mov
or
pusha
fs
or
outsl
leave
mov
stos
xchg
and
xchg
mov
in
movsb
ja
fmuls
aam
cwtl
pop
mov
je
stos
ds
repnz
orl
sbb
push
out
dec
sti
cmp
aas
pop
sahf
call
in
data16
and
mov
addr16
decb
pop
mov
outsl
ljmp
test
cmpsl
push
and
enter
push
loop
lods
xor
push
nop
xchg
pop
scas
std
inc
mov
mov
js
push
ds
add
sub
pop
mov
or
andl
nop
xorb
mov
or
push
pop
sbb
shll
dec
pop
popa
cmp
sub
xor
clc
dec
adc
mov
pop
xor
xchg
movsl
cmp
dec
cmc
mov
or
jb
ljmp
or
adc
out
xchg
jae
cmp
rol
adc
and
push
push
xlat
jl
inc
sbb
mov
inc
stos
movsl
xchg
insl
add
xor
les
pusha
mov
outsl
mov
dec
cmpsb
sub
mov
pop
loope
fcmovnbe
and
inc
idiv
stos
inc
rcll
out
and
lods
mov
dec
sub
cli
insl
inc
push
lds
movsb
inc
pop
shlb
clc
mov
push
call
sarl
adc
outsl
and
jno
xchg
addl
lcall
imul
cwtl
or
lea
or
in
push
inc
ljmp
dec
and
sbb
imul
xor
jns
in
notb
pop
jbe
fwait
loop
jecxz
pop
push
sbb
idivl
test
jle
arpl
addr16
add
js
pop
add
xchg
lods
fistl
jmp
or
pop
or
outsb
mov
mov
adc
xchg
push
dec
rcl
push
ret
arpl
popa
inc
dec
sbb
mov
sub
fmull
mov
lea
adc
or
imul
sbb
gs
xor
xor
sbb
int3
sbb
and
mov
or
flds
mov
scas
mov
xor
and
std
test
cwtl
dec
mov
mov
aam
adc
push
mov
or
mov
dec
fs
adc
fadds
mov
incb
pop
addr16
dec
rcl
inc
mov
push
icebp
xchg
jg
dec
scas
in
add
push
sbb
jge
arpl
popf
xor
loop
insb
andb
shl
add
cmp
insb
imul
sub
lea
dec
dec
and
mov
in
cs
fmull
vaddsd
cmpsb
out
mov
xchg
push
daa
mov
pusha
lods
pop
scas
cmp
dec
push
out
jns
ret
outsb
add
cmpsl
testb
inc
jo
cmpsl
ds
add
push
push
notb
add
cmc
std
adc
cmp
imul
push
in
call
mov
lea
push
ja
outsl
lods
xchg
push
mov
outsl
out
cmp
ljmp
test
into
movsb
jmp
and
mov
push
or
clc
xor
or
cmp
xchg
les
mov
mov
mov
shll
mov
outsb
sub
xchg
pop
mov
push
xchg
scas
xor
cmpsb
aaa
dec
xor
mov
pushf
sahf
stos
into
outsl
jg
in
in
stc
push
into
cmp
jae
lock
addl
int3
clc
lcall
sbb
xchg
lcall
xchg
movsl
insb
repz
or
nop
int
repz
mov
cli
test
xor
iret
hlt
inc
fsubl
hlt
arpl
mov
push
pop
push
mov
xchg
cs
out
pop
inc
xchg
int
or
cli
push
lods
nop
adcb
inc
out
das
pop
push
mov
sbb
ret
stos
dec
scas
fisubs
xchg
pop
push
sub
aam
pop
dec
lock
mov
or
mov
rorb
out
scas
sbb
sbb
mov
imul
rcrl
sbb
frstor
iret
dec
pop
lret
in
ljmp
je
in
xor
xchg
cmp
pushf
repnz
fwait
ja
dec
dec
mov
mov
loopne
or
fmull
and
mov
push
popf
fidivrs
movl
mov
dec
push
fadds
adc
cmp
inc
xor
int3
cld
jge
inc
and
fmull
je
out
aas
test
dec
insb
mov
cmp
es
lea
push
loop
and
cmp
add
sub
sub
pop
gs
xchg
or
dec
fwait
aaa
daa
inc
mov
and
jo
pop
das
addr16
xchg
pop
xor
add
cwtl
mov
sti
int3
inc
into
cmp
fdivs
fucomp
psllw
xchg
jo
loop
xchg
into
adc
icebp
sbb
mov
cmp
push
add
repnz
mov
jmp
xlat
fs
insb
jne
insl
scas
dec
into
fdivrl
pop
movsb
sbb
mov
dec
fs
adc
fadds
xor
in
adc
arpl
test
cli
and
gs
ds
mov
out
xchg
jmp
sbb
jne
sbb
test
dec
pop
shrb
sbb
les
dec
bound
shr
sub
mov
jo
nop
mov
or
inc
mov
mov
test
or
xchg
js
lret
jle
inc
leave
mov
idivl
aam
cmp
lock
sbb
mov
push
sub
loopne
popa
push
lock
pop
pushl
cmp
cmp
pop
loope
outsl
xchg
push
sbb
mov
hlt
pop
push
cli
mov
pop
bound
mov
js
test
gs
fistpll
xlat
push
aam
inc
jno
pusha
fstl
push
shlb
es
test
pop
and
xchg
xchg
xor
andb
xchg
sub
push
cmp
gs
arpl
xchg
pop
mov
lret
int
insb
fstpt
mov
mov
fisubrl
jl
sbb
jne
mov
inc
sar
xchg
add
sahf
xor
mov
sub
cwtl
mov
add
fstpt
cmpb
mov
and
iret
push
mov
sub
mov
push
adc
repnz
lods
mov
mov
add
imul
ficoml
ss
sar
xchg
sbbb
xor
addb
inc
push
cwtl
xor
lret
pusha
jns
mov
xchg
test
and
xor
xchg
mov
les
enter
pop
inc
shrl
add
mov
sbb
orb
add
popf
or
push
andb
xchg
cli
popl
sub
push
cmp
cwtl
cmp
sbb
fmuls
or
sarb
mov
pop
enter
pop
and
dec
or
jae
push
pop
and
hlt
lea
jg
sub
pop
mov
loop
jnp
jns
fstpt
in
xor
ret
or
and
cmp
call
mov
pop
sarb
or
push
lea
popa
aad
loopne
mov
xor
lods
xchg
lds
jp
xor
sahf
dec
lea
cld
cmpsb
adc
shll
scas
cmp
adc
jg
sbb
jne
cmpsl
ret
xlat
sti
mov
pop
ja
das
into
mov
xor
ds
dec
popf
xchg
out
mov
jae
rcll
pop
aas
pop
sub
lds
movsb
cld
pop
repz
or
mov
rcll
add
test
fcomi
sahf
fdivl
int
xchg
mov
or
dec
in
jb
jmp
push
ljmp
push
mov
jg
and
jns
repnz
int
lock
and
jge
addb
xchg
mov
pop
jno
adc
mov
dec
clc
iret
sub
xor
fs
jo
aad
dec
icebp
frstor
in
mov
push
mov
mov
fisubrs
jbe
addr16
out
and
stc
sub
or
jae
jns
pop
push
into
jp
inc
fstl
jl
aad
inc
mov
adc
or
xchg
xor
bound
cs
fsts
dec
addr16
fcmovnbe
adcl
loop
outsl
or
ror
imul
test
mov
insl
stos
xchg
js
loopne
je
and
aaa
icebp
cmp
mov
and
xchg
movl
pop
sbbb
imul
es
inc
xchg
fiadds
loopne
testb
js
aad
xor
cmp
sbb
std
nop
sub
mov
push
icebp
lret
ret
out
xlat
scas
sbbl
sbb
dec
imull
lahf
clc
in
push
fsubr
push
ljmp
and
push
stc
es
xchg
jbe
int
jecxz
addr16
add
mov
stc
sarb
lds
cmpl
dec
pusha
push
mov
sub
repz
cmpsb
push
sbb
adc
scas
sbb
fsubr
pop
jo
xchg
cmpsl
mov
cmp
ret
mov
sub
aad
pusha
data16
push
push
iret
das
xor
adc
sub
je,pn
mov
popf
int
fldenv
jl
imull
jp
sub
loopne
or
adc
push
popf
shl
into
mov
ret
rcrl
fldl
add
popf
and
jns
aaa
lahf
stc
call
cmp
pop
add
fucomp
add
cs
xor
add
push
pop
dec
and
dec
mov
fs
sti
psubusb
dec
mov
ja
gs
mov
in
xchg
mov
pusha
imul
jp
jge
aad
aam
cwtl
cmc
sti
loope
dec
les
push
lret
lret
pop
js
push
lea
xor
add
jb
or
shrl
jg
jnp
mov
into
std
das
lods
int3
mov
jmp
fcoms
into
add
sbb
fildll
or
xchg
push
mov
movsl
mov
xchg
sub
mov
mov
pop
into
and
ljmp
mov
lea
jno
adc
test
roll
ss
or
pop
cwtl
sub
add
stos
jmp
lret
movl
sub
in
push
push
push
add
push
repnz
repz
cmp
fstpl
mov
xchg
mov
sbb
jg
push
push
xchg
mov
jae
inc
test
cmp
sbb
fdivrl
or
aaa
sub
mov
insl
das
push
fcom
push
repz
sub
dec
enter
adc
notb
inc
cmp
xchg
icebp
and
add
push
hlt
pop
pop
mov
mov
adc
loope
sub
fidivrl
jmp
pop
or
je
insl
pop
jno
sar
out
sarb
pop
inc
hlt
cwtl
scas
cmp
xor
push
push
cmp
cmp
push
and
test
movsw
xchg
lods
mov
cmc
pop
pop
out
pop
push
mov
push
xchg
jno
and
sbb
jp
movsl
push
icebp
pop
cmp
loop
pop
fildl
cmpsb
xlat
cmp
or
pop
adc
add
fcoml
outsb
test
xrelease
cwtl
mov
repnz
add
ja
and
aas
jle
movsb
movsb
inc
add
dec
adc
fistpl
cmp
dec
cmpsb
lss
aam
cmc
and
insl
inc
xchg
sbb
xchg
mov
xor
pop
jbe
adc
mov
ret
testb
and
ljmp
lret
arpl
imul
sub
mulb
cltd
aas
sbb
sbb
sti
xchg
and
ret
rcr
outsb
ficoms
fstl
data16
rcrl
add
or
sub
inc
jbe
in
imul
jno
repnz
mov
ljmp
pop
inc
add
lcall
or
clc
jmp
cmpsl
xor
stc
jo
iret
pop
pop
cltd
xchg
pop
mov
fwait
mov
cmp
cmp
pusha
xor
add
insb
push
or
cltd
or
push
mov
sub
lahf
das
out
aad
jmp
and
fsts
or
cmp
mov
addr16
mov
filds
ljmp
jg
add
cmpsl
push
loope
add
jge
or
les
jp
jmp
orl
mov
pop
cs
leave
push
or
std
or
pop
xchg
mov
leave
mov
add
jmp
xchg
lcall
rcrl
lahf
repnz
cmp
push
inc
mov
lea
rcr
inc
out
xor
js
sub
lret
inc
sti
mov
push
cli
sub
repz
and
leave
jb
arpl
test
cwtl
jmp
jmp
sub
sub
sub
nop
fs
jno
or
ss
imul
imul
idivb
jo
loope
test
jle
fnsave
orl
rorl
shrb
cmp
movsl
mov
insl
cmpb
xor
cmp
sti
addb
jmp
dec
in
sar
sub
jb
push
sti
call
cmp
stc
add
mov
fs
cli
es
mov
fisubrl
sub
ljmp
notl
or
sub
adc
pop
cli
push
popf
cmpsl
popf
sbb
sbb
rclb
fmulp
dec
lret
std
inc
icebp
mov
mov
in
push
cmp
dec
sub
dec
decl
out
jl
fbstp
xchg
lods
lret
sti
ds
jne
out
inc
lock
enter
xor
mov
adcl
dec
movsb
imul
iret
inc
pop
inc
lcall
adc
cmp
in
in
inc
in
frstor
and
sar
and
jbe
insb
add
and
push
xchg
incb
adc
int
mov
mov
roll
das
dec
mov
mov
aam
test
xor
call
mov
push
jge
outsb
andb
xchg
pop
jo
or
lret
loopne
dec
and
mov
inc
arpl
ffreep
imul
push
xor
jo
or
scas
lds
test
test
mov
mov
adc
adcl
jae
push
mov
addr16
sbb
sbb
adc
inc
cmpsl
ja
xchg
popf
pop
add
mov
je
inc
push
or
dec
dec
xchg
rcr
push
cmp
ljmp
jmp
sub
es
inc
pop
cmp
mov
push
and
cmp
xor
jnp
adc
push
sar
bound
ret
test
stc
pop
or
je
xor
push
xchg
fadds
or
fildl
add
call
mov
les
push
ss
out
mov
insl
vcmpsd
shrl
cmp
mov
ret
mov
sbb
popf
push
mov
add
add
negl
mov
in
das
stos
push
iret
dec
mov
aam
dec
cmp
dec
lock
int3
adc
xor
inc
push
xchg
popf
daa
inc
repnz
xchg
pop
popa
lret
int
pop
mov
jae
mov
call
ss
sti
and
xor
mov
mov
dec
cmp
mov
iret
push
mov
jecxz
inc
jne
add
lret
rclb
test
jns
call
sbb
mov
in
xor
into
in
fs
jg
xor
pop
mov
push
cmp
mov
repnz
sahf
call
jb
mov
cmp
mov
adc
xor
cltd
xor
jne
lret
fwait
pop
out
xchg
xchg
incb
xchg
insl
int3
icebp
cmp
push
pop
stos
shrb
and
stos
or
daa
cmp
sbb
xchg
into
add
add
xlat
mov
add
ss
test
push
or
xor
pop
mov
test
push
mov
pop
repnz
dec
mov
or
mov
mov
dec
leave
lods
hlt
pop
push
lock
sti
pop
mov
cmp
movaps
test
cs
fnstenv
int
mov
out
push
push
jmp
aad
movsl
pop
pop
jae
rorl
mov
adc
ljmp
inc
mov
lds
std
push
xchg
out
dec
mov
test
add
inc
fbld
mov
push
jbe
hlt
mov
push
call
in
mov
outsb
xlat
shlb
or
lcall
mov
outsl
loop
and
movsl
add
bound
lods
std
mov
sub
jecxz
loope
aam
adc
decl
dec
imul
adc
inc
or
xchg
lahf
add
lret
pop
lock
hlt
xorl
mov
pop
or
aam
mov
subl
xchg
insb
sahf
inc
loopne
js
mov
mov
jge
dec
sahf
sbb
mov
xchg
into
leave
loope
je
mov
dec
outsl
inc
cltd
jl
xchg
scas
add
jne
add
out
mov
mov
cwtl
std
pop
shll
stos
in
mov
lret
add
mov
mov
lahf
popf
addl
lret
pop
orps
jge
pop
cmpsb
notl
mov
int3
push
adc
or
cmp
out
ror
pop
adc
fwait
sbb
mov
and
mov
mov
imul
jnp
addr16
pop
out
xor
fs
clc
pop
popa
jg
push
mov
bnd
lds
adcl
test
dec
mov
xchg
add
sbb
jg
loopne
inc
fwait
daa
pop
xchg
sbb
cli
movsl
outsb
xchg
ret
adc
sbb
data16
out
push
xchg
push
xor
jecxz
mov
dec
ljmp
and
loop
push
stc
nop
stos
enter
dec
pop
jg
sar
push
mov
ss
fmull
ret
mov
inc
mov
stos
ret
add
mov
sub
jl
test
inc
sti
inc
enter
and
lea
shrl
xorl
sbb
aas
outsl
loope
and
rcll
mov
and
xchg
mov
test
shrl
xchg
insb
adc
roll
ljmp
push
fwait
cld
cmp
xor
mov
xchg
test
dec
pop
fbld
lods
push
je
pop
imul
jno
movsl
xchg
jmp
insb
jo
or
repz
ds
cmpsl
negb
or
sbb
aam
or
mov
lret
xor
pushf
push
push
pop
stos
loopne
mov
sub
fisubrs
ret
loopne
cmp
rol
sub
aaa
cmp
pop
ljmp
pop
lahf
enter
jmp
xor
inc
lds
call
mov
lds
push
imull
and
int
add
xor
stos
mov
pusha
xchg
xchg
scas
mov
jns
push
dec
fidivs
ljmp
mov
in
test
push
dec
mov
xchg
jno
mov
insl
mov
jge
fsubrs
cld
lahf
push
stos
mov
jns
jne
dec
xchg
movsl
mov
repz
cmp
adc
repz
add
or
mov
mov
mov
fstps
or
xor
in
xor
sub
cmc
mov
cmp
sbb
ds
fs
lret
mov
add
scas
jecxz
push
mov
insb
or
test
jno
jbe
mov
sub
cmp
and
ja
pop
test
nop
mov
or
pop
loop
repnz
sbb
insb
jle
stc
pop
and
cmp
leave
es
pushf
fdivp
je
or
sti
add
xchg
mov
mov
lock
cmpsl
jmp
mov
add
or
sub
mov
add
outsb
lds
cmpb
push
sbb
xchg
rcrl
inc
sub
in
aas
mov
jae
cmp
dec
int
inc
mov
pushf
push
aaa
dec
fiadds
fmuls
in
dec
fwait
out
and
inc
push
outsl
fstpt
mov
test
idivl
test
ret
into
clc
loop
movsb
mov
scas
push
jno
and
rcll
lock
aaa
jnp
dec
movsb
lds
pop
xchg
in
adc
adc
outsb
mov
xor
dec
push
mov
pop
and
mov
push
pop
pop
dec
sbb
in
sub
push
mov
pop
push
filds
lahf
test
mov
std
rcr
add
mov
inc
test
mov
or
jg
sbb
call
jmp
stos
xor
subb
pop
loop
dec
push
in
jle
out
inc
outsl
mov
dec
gs
stos
pop
pop
lds
xor
lret
hlt
pop
sbb
pop
mov
aad
adc
mov
stos
mov
rclb
dec
icebp
pop
jb
aad
push
stos
je
pop
hlt
cmp
push
and
stc
adc
mov
cmc
dec
out
mov
xchg
or
test
pop
in
repnz
inc
fisubrs
cltd
and
in
inc
mov
push
jmp
dec
cmc
pop
pop
mov
mov
scas
push
cmc
xchg
sar
ret
lret
dec
jg
jmp
mov
xor
xor
mov
mov
cltd
lcall
push
das
add
orl
jp
mov
add
xchg
xchg
push
dec
lea
push
cmp
mov
jno
test
dec
nop
cmp
xor
jb
js
mov
sub
sbbb
sbb
xchg
rcrb
lea
repz
test
xor
xchg
mov
jo
sahf
loope
cmpsb
dec
cmp
mov
pusha
scas
fstpl
movsb
cmp
ja
push
mov
or
divl
je
aas
or
inc
in
popf
adc
mov
sbb
adc
or
mov
cmp
lcall
xor
dec
movsl
xlat
and
lods
mov
add
shll
or
gs
repz
das
addr16
mov
add
xchg
push
mov
pop
pop
mov
mov
jno
std
jl
or
cmpsb
mov
test
roll
cmp
xlat
cld
xor
stos
sbb
jns
pop
stos
mov
mov
aad
subb
ret
sbb
sub
adc
in
pop
test
lret
sub
sbb
cmpsl
dec
stos
aad
add
ds
or
mov
out
dec
into
arpl
or
cmpb
mov
adc
dec
ds
lock
mov
pop
mov
rclb
xchg
sbb
gs
adc
out
mov
aaa
cmpsb
jae
pop
out
enter
push
mov
mov
push
jo
fsubrl
int3
arpl
xchg
mov
arpl
sbbb
int
sahf
ja
negb
fistl
loopne
jl
pop
ret
jbe
xchg
mov
and
rcrl
jl
lcall
xchg
ret
das
jmp
mov
and
adc
mov
push
cmp
and
ret
repnz
addr16
and
sbb
sbb
popf
jmp
out
fadd
and
sbb
push
and
mov
pop
jmp
push
sahf
fmul
push
mov
or
mov
jecxz
jbe
into
cmp
mov
xchg
cli
lds
and
mov
in
mov
jno
and
jns
xor
add
js
mov
loopne
ds
andb
aaa
scas
mov
out
inc
sbb
and
sbb
repz
es
out
cmpl
adc
movsb
repnz
iret
xchg
clc
jne
xchg
ja
insl
jmp
push
repnz
push
xchg
add
addr16
mov
dec
das
cmp
outsl
and
lods
nop
sbb
sub
stos
and
fnsave
jae
scas
pop
add
xor
call
mov
mov
js
or
jecxz
or
shll
pop
jb
xchg
shll
das
lods
iret
xor
into
bound
aam
mov
jae
test
add
dec
std
gs
dec
aad
sbb
stos
push
int
mov
or
int
xor
sbb
xchg
ficompl
inc
xor
loopne
sbb
mov
mov
aad
int
and
mov
repnz
dec
fdivrs
outsb
fldenv
repnz
pop
lahf
jo
mov
jl
fwait
add
fst
out
cmpsb
adc
mov
mov
lea
adc
sti
mov
lods
cli
mov
lock
je
sub
cld
mov
mov
and
lods
jno
lods
ret
push
pop
insb
les
xor
xor
jb
inc
daa
xlat
mov
sar
adc
iret
push
add
dec
add
int3
out
sbb
inc
orl
xchg
outsl
popa
pop
push
jmp
movsb
and
andl
dec
or
xorl
push
jbe
sub
push
push
lods
mov
mov
arpl
xchg
and
dec
adc
xchg
lock
jne
andl
addr16
jge
sti
das
jle
clc
int3
mov
neg
mov
in
andb
add
and
mov
jmp
mov
out
and
and
into
insb
in
sub
scas
jne
fsubrp
jge
jb
and
mov
push
arpl
add
sub
lock
xchg
pop
in
xchg
pop
pop
mov
cmp
push
push
mov
or
and
ja
incl
push
xor
cmp
jle
xor
pop
test
aad
mov
test
test
jae
xor
sub
xchg
bound
fwait
loope
div
pop
out
pop
cmp
xchg
outsb
sub
pop
icebp
test
addr16
adc
mov
ret
pop
push
into
xor
cmp
aad
and
int
sub
loop
bound
test
mov
stos
fs
out
mov
and
out
lret
popa
sub
loop
pop
jae
jnp
xor
fnsave
jno
push
xlat
loopne
and
adc
mov
push
push
jg
adc
sub
or
cmp
push
aad
andl
push
sub
fadds
out
cltd
push
and
fucomi
xchg
aas
add
and
scas
outsl
add
icebp
inc
mov
in
adc
test
sti
pop
jle
ror
out
inc
mov
ja
xchg
dec
mov
or
jmp
cmp
cmpsb
fdivrs
mov
and
jb
lcall
pop
call
mov
cmpl
jle
mov
adc
xchg
in
outsb
jl
cmpsl
push
or
pop
mov
mov
xor
test
inc
xor
cwtl
lock
dec
lret
in
jecxz
pop
in
rolb
push
or
xor
sbb
mov
icebp
sbb
sahf
daa
xchg
std
dec
in
or
pop
repz
in
stos
push
mov
add
lods
inc
add
xchg
xor
xchg
jmp
ret
push
bound
or
call
in
mov
outsb
add
lcall
in
and
jae
in
or
jne
stos
and
xchg
lret
lds
mov
pop
daa
les
call
data16
dec
imul
jle
in
out
mov
lret
icebp
or
mov
sbb
dec
aam
jo
sbb
shlb
dec
inc
push
sub
jmp
mov
lcall
imul
pop
dec
push
hlt
xorl
cmp
xchg
pop
shll
cmp
fstl
and
mov
imul
les
dec
lods
mov
cmp
jmp
xor
sbb
jno
and
mov
ret
push
and
jmp
sub
call
adc
xlat
xchg
inc
add
sub
stc
mov
lods
call
xor
out
mov
aam
adc
mov
fistpll
pop
imul
imul
xchg
enter
fsubrs
test
dec
mov
not
or
movsb
repnz
ret
xchg
out
sub
repz
mov
cmp
and
lcall
jnp
xlat
mov
inc
nop
pop
js
incb
pop
cwtl
jae
push
je
xchg
arpl
les
test
jo
sbb
imul
xchg
mov
or
cli
cli
jg
stos
movzwl
xor
mov
je
mov
ret
xchg
scas
call
jmp
cmc
ret
pop
es
or
mov
push
pop
jmp
push
cmp
pop
xor
test
les
or
clc
fidivl
cs
cmp
jae
push
outsb
mov
into
lods
xchg
call
cmp
fsts
cld
mov
jl
shlb
aam
pusha
cmpsl
xor
jmp
ror
insl
sti
jbe
push
dec
dec
sbb
in
jecxz
add
sahf
clc
out
and
subl
jle
pop
jl
xchg
fisttpl
loope
sbb
hlt
aas
fwait
push
jge
dec
dec
pop
mov
add
sbb
push
jecxz
loope
xchg
ljmp
mov
aaa
jle
out
jl
jl
xor
jb
fsts
stc
cmp
outsb
cld
xchg
arpl
mov
xor
out
pop
cli
jo
mov
dec
dec
xlat
out
xchg
sub
sub
fmull
xchg
stos
mov
or
mov
popf
add
or
xchg
fldcw
sbbl
xchg
jns
loopne
fadd
jno
xor
fisubl
mov
ljmp
push
testl
add
dec
adc
or
movsb
nop
push
jle
scas
mov
and
ljmp
or
jmp
aaa
out
test
mov
lahf
jbe
test
js
and
dec
loope
stc
inc
loope
je
mov
out
out
scas
xlat
sub
mov
lcall
ja
add
dec
scas
sub
or
rolb
mov
arpl
mov
icebp
lds
pop
sub
test
ds
mov
inc
dec
cs
dec
xchg
adc
mov
xor
shl
jbe
sti
ret
cmp
inc
js
jne
loope
ret
mov
aad
in
fs
neg
inc
adc
push
cmpsb
jns
dec
ljmp
sbb
mov
cli
loopne
push
out
xchg
dec
mov
and
cmp
mov
cmc
mov
sbb
jle
leave
js
lds
inc
mov
cmp
es
not
cmp
add
das
loopne
arpl
std
popf
packsswb
inc
mov
and
fwait
fs
es
fnsave
push
xor
sti
push
subl
pop
test
inc
pop
jne
in
cltd
cmpsb
pop
hlt
and
sub
loop
xchg
mov
mov
xchg
and
in
out
push
jno
cmp
adc
dec
aam
jno
sahf
scas
mov
adc
test
mov
jl
push
in
popf
cmp
call
mov
mov
fmull
rorl
mov
shr
mov
leave
aaa
push
shrl
dec
clc
push
movsl
in
aad
pop
pop
pushf
jg
scas
sub
outsl
aaa
iret
mov
insl
test
addr16
fistps
cld
fucomi
out
mov
sub
fimull
or
sarl
cmpsb
xor
mov
sahf
xor
inc
arpl
mov
xchg
mov
xchg
stos
cmp
pop
addr16
insl
mov
mov
ret
negb
or
ljmp
add
in
add
in
int
jl
stos
test
jns
inc
sbb
lea
sbb
popa
jl
mov
clc
div
or
sbb
fs
les
pop
pop
fadds
or
js
jb
ljmp
or
inc
dec
pop
icebp
int
sub
push
mov
lahf
mov
paddq
push
pushf
das
push
sti
addb
jl
dec
sub
notb
mul
add
push
sub
mov
cmpsl
inc
jns
das
cmp
jbe
push
pop
mov
or
mov
pop
rclb
mov
cli
mov
fs
xchg
mov
lcall
and
mov
dec
fs
int
fs
lods
bound
test
cmp
push
push
sbb
js
repnz
ja
push
dec
stc
pop
ss
sub
decb
fsts
outsl
mov
repz
sub
pop
cli
jecxz
push
aam
dec
outsl
int3
sbb
ret
cmp
mov
cs
dec
fsts
pop
pop
data16
pushf
testb
movsb
movsb
pusha
dec
adc
jle
jae
lahf
sub
test
das
cmpsl
jge
fadds
pop
iret
jae
out
scas
pop
mov
sbb
andb
pop
int
mov
push
xor
arpl
xchg
mov
cmp
inc
ljmp
pop
jno
add
ret
flds
loop
mov
test
mov
mov
into
mov
lret
mov
cld
push
add
and
repz
mov
push
xchg
dec
sub
scas
hlt
imul
sbb
adc
push
xchg
les
push
sub
push
mov
inc
cld
jnp
and
filds
fdiv
xchg
push
mov
or
pop
or
pop
jmp
lods
jecxz
adc
pop
fsubrp
lods
sti
loop
sbb
dec
fstl
and
sbb
imul
ss
mov
or
mov
aad
mov
popf
hlt
jmp
sbb
mov
push
test
stos
es
es
push
jecxz
andl
ljmp
mov
push
xchg
jge
sbb
dec
or
or
xchg
out
inc
inc
push
movsb
mov
sahf
pop
dec
xor
pusha
movsl
and
outsl
cmp
cwtl
orl
movd
inc
xchg
add
adc
mov
sbb
lods
mov
cmpsb
adc
ja
adc
decb
xchg
xor
xchg
xchg
jg
ds
jae
imul
cmp
or
sub
aam
jle
push
movsl
jbe
push
adc
mov
addr16
dec
lahf
mov
mov
pop
and
mov
jne
sub
stos
xchg
ds
jmp
enter
addr16
mov
das
subl
pop
je
aaa
mov
cmp
mov
scas
movsb
or
sub
mov
mov
repz
add
inc
inc
inc
loope
cmp
stc
sbb
and
fsubr
lds
daa
or
decl
enter
scas
push
mov
pop
cmp
adc
sub
jo
mov
sbb
pop
jno
dec
and
mov
sub
jp
jl
xor
pop
jns
xlat
lods
pop
cmpsl
sub
mov
or
sub
xor
lret
std
add
movsl
pusha
subb
xor
push
push
lea
lret
xchg
inc
insl
rolb
or
inc
gs
cs
icebp
cltd
and
arpl
jns
jnp
pop
push
mov
pop
cld
and
mov
mov
or
ljmp
cmc
mov
inc
mov
cmp
into
adc
push
adc
stos
lds
lods
sarl
pop
mov
in
inc
cltd
mov
lret
outsb
pop
mov
add
cmp
pop
push
dec
adc
flds
jle
add
mov
cli
es
push
cld
sub
adc
dec
loop
jns
imul
cmovne
aam
pop
or
lods
aad
data16
insb
stos
dec
in
and
pop
or
cmp
mov
jecxz
xchg
xor
sub
int
fadds
jbe
cmc
dec
inc
jmp
jmp
mov
mov
jae
in
jecxz
mov
sbb
cmp
xchg
add
and
sub
leave
xchg
mov
popf
ss
sarl
xor
cs
ljmp
mov
add
jo
std
pop
adc
and
roll
mov
or
in
lods
mov
adc
or
adc
push
xchg
cmc
or
push
ds
stos
cmpsb
lret
cmp
xor
insl
pop
push
dec
adc
dec
cmpb
stos
sahf
popl
add
int3
rclb
adc
mov
push
ljmp
jge
mov
rorl
jle
rclb
repz
xchg
jne
ret
out
fcmovbe
and
dec
add
xchg
outsl
arpl
popf
test
xor
dec
dec
pop
jl
or
stos
jns
inc
subl
dec
pop
pop
sub
lahf
out
inc
adc
mov
lods
es
push
push
jmp
push
push
sub
add
sbb
cwtl
add
cmp
mov
mov
mov
test
push
ljmp
in
jecxz
jae
fcmovbe
movsl
stos
pop
out
ret
frstor
xlat
fdivrs
inc
jbe
cmp
xorb
popa
mov
adc
adc
mov
mov
lcall
clc
mov
fists
xchg
dec
cmp
push
jmp
rcl
dec
mov
adc
mov
call
xchg
dec
and
filds
xchg
mov
xor
and
call
scas
aas
orl
jno
pop
arpl
xor
lds
push
or
jle
aaa
add
pop
test
mov
mov
mov
push
cmc
adc
cmpsl
pop
les
sti
arpl
and
cmp
and
aam
outsl
pushl
mov
mov
lret
lret
cmp
into
test
int3
xchg
clc
jmp
jl
sub
adc
cmc
pop
out
fnsetpm(287
push
or
cmp
add
cltd
dec
stc
mov
in
sub
ja
and
and
in
ret
loopne
out
mov
out
lods
lea
lock
adc
push
xor
andb
outsb
test
sub
fstps
sbb
cmp
sbb
mov
shlb
lcall
lret
mov
lods
stc
in
jae
push
sbb
mov
xlat
lods
sub
pop
fwait
lcall
pop
or
mov
and
pop
cmp
xor
ficoms
mov
mov
push
fisubrl
xchg
inc
sub
cmc
pop
out
pushf
daa
outsl
add
adc
lahf
test
pop
cmp
mov
int
push
mov
xlat
jg
cltd
xor
ret
out
push
jno
sub
mov
loop
xchg
rol
negl
aaa
testl
jne
mov
aas
mov
xchg
jmp
xchg
push
sarl
mov
xchg
int
out
mov
pushf
push
int
pop
hlt
jge
mov
lds
push
imul
sbb
into
fnstsw
test
scas
fsubl
pop
push
inc
aas
lret
or
fstpl
jnp
lahf
insb
push
push
pop
jb
push
outsl
out
aam
test
mov
leave
js
fs
push
nop
mov
add
jno
and
pop
adc
fucomp
ficompl
xor
sbb
dec
iret
gs
push
inc
popf
and
stos
cmp
mov
mov
xchg
pop
sub
xor
and
jbe
mov
cmp
adc
ret
lcall
pop
and
jno
daa
inc
mov
mov
adcb
or
and
scas
out
or
cmpb
pop
negl
int
lret
addr16
or
cltd
cs
inc
cli
xchg
sub
push
xchg
dec
sbb
ret
movsb
shll
xor
dec
scas
test
or
lea
jne
popf
cmp
or
cmp
ss
cmp
insl
xor
ds
add
push
loopne
popf
hlt
sbb
mov
les
pop
mov
rcrb
xchg
pop
rorb
inc
dec
lods
ret
sbb
loop
pop
mov
adc
pusha
lret
and
les
cld
cmpsl
pop
and
jecxz
xorl
imull
movsl
inc
movsb
pop
inc
mov
and
inc
fmulp
mov
cmc
mov
and
loopne
popl
rorb
test
mov
jno
jb
jnp
out
xchg
adc
push
xlat
or
xor
jp
shl
pop
jg
cmp
xlat
in
sti
rclb
stos
mov
cmc
jecxz
daa
pop
rcrl
add
add
inc
xlat
mov
ret
sbb
sti
xchg
aam
andb
dec
insb
xchg
cs
cld
int
out
xor
inc
sti
fstpl
loop
sub
add
cmc
rorl
int3
mov
mov
jns
xchg
iret
pxor
mov
push
enter
sub
aas
test
outsb
pop
imul
mov
fidivl
jmp
and
xlat
jmp
ljmp
aas
sbb
jp
ljmp
in
inc
inc
xlat
loop
gs
out
dec
mov
jbe
fisubl
sbb
adc
push
out
xchg
pop
and
imul
mov
lods
mov
dec
mov
jmp
shrb
mov
sub
stc
pop
rolb
lcall
data16
arpl
adc
lret
lcall
fwait
xor
inc
adc
xor
cmp
pop
leave
xor
rclb
outsl
pop
cli
adc
sub
inc
test
jbe
aam
add
ret
and
adc
add
lea
fildll
inc
jmp
bound
stc
mov
imul
mov
xchg
data16
mov
jl
and
popf
test
iret
fsubs
inc
insl
mov
sbb
pop
pop
bound
ret
test
lahf
sbb
push
or
insl
in
push
insl
and
outsl
mov
int
dec
out
jns
jae
xlat
out
ret
jb
stos
in
sar
imul
pusha
jecxz
xchg
insl
movsb
out
icebp
mov
shll
or
cmpsl
cmp
addl
add
lret
in
jecxz
pop
adc
mov
adc
or
xorl
or
push
jmp
jbe
lcall
cmp
ljmp
int3
lahf
insl
add
out
jns
sti
mov
xor
faddl
popf
push
xchg
mov
pop
and
xchg
out
lret
sbb
sub
ja
ret
jb
push
or
adc
out
imul
xchg
dec
rclb
lods
lcall
jns
xchg
or
dec
mov
or
dec
imul
insl
pop
push
repnz
inc
jo
stc
mov
adc
adc
pop
xchg
subb
mov
fldl2t
gs
lock
adc
mov
mov
std
or
xor
xlat
arpl
scas
outsb
xchg
test
inc
or
cltd
xor
sub
mov
scas
xchg
adc
add
daa
daa
in
push
fidivrl
mov
std
adcl
and
negb
adc
test
or
outsl
aam
pop
lcall
ljmp
mov
xchg
xchg
mov
cld
mov
jmp
in
fucomip
push
fldl
rcll
jecxz
mov
fmul
and
popf
push
sub
jb
popa
mov
sbb
les
jns
adc
jnp
dec
push
outsl
out
sub
mov
mov
xor
icebp
in
sbb
mov
mov
inc
xchg
add
pop
insb
pop
xchg
aam
lahf
mov
sbb
lods
cmp
xor
xor
and
sbb
aas
dec
in
cli
test
push
outsb
push
leave
jnp
or
js
ret
xchg
jge
scas
xchg
xor
xor
mov
outsl
xchg
adc
mov
in
inc
iret
imul
lods
pop
cmp
mov
subl
xor
adc
je
shlb
jo
sub
dec
sahf
cli
repz
dec
in
rol
pop
ret
imul
daa
loope
addr16
mov
mov
add
xchg
repz
out
outsb
pop
iret
mov
inc
mov
fimuls
stc
cltd
addb
inc
pop
leave
or
cmp
pand
in
mov
sbb
outsl
xor
or
add
inc
in
subl
xchg
mov
imul
inc
dec
or
lahf
xor
dec
loopne
pop
js
scas
outsb
icebp
or
mov
lcall
stos
mov
xor
stos
out
aad
or
data16
inc
dec
jmp
lods
in
sub
lret
js
inc
inc
out
test
les
subb
cmp
pop
in
inc
mov
xor
rcll
fsubl
mov
sub
dec
sbb
arpl
fisttps
or
cmp
adc
or
cmp
xor
sub
mov
mov
loopne
xchg
addr16
jl
jne
jo
and
nop
fnstsw
inc
pusha
cmp
adc
pop
call
mov
fisubl
jbe
pusha
pop
jbe
ror
lret
cmp
sbb
xchg
repz
jle
ds
movsb
in
out
mov
push
ss
sub
and
inc
adc
ja
test
enter
insb
jb
pop
sbb
xchg
popa
xor
cli
pusha
daa
dec
shrb
stc
mov
inc
xchg
or
call
fnstcw
xor
mov
xchg
out
and
aas
dec
xor
or
aam
mov
fwait
cmp
icebp
movsl
les
xchg
pop
or
add
and
pop
rolb
dec
or
jmp
mov
cs
or
out
and
jbe
cli
xchg
mov
popa
mov
sub
or
add
mov
call
push
jae
jne
jecxz
xlat
popf
adc
hlt
xlat
loope
cmp
pusha
mov
inc
inc
std
arpl
mov
mov
pusha
into
shll
jo
lods
js
mov
jecxz
mov
mov
cmp
je
scas
js
add
movsl
mov
testl
mov
outsb
enter
jg
pop
add
aam
mov
outsl
lods
push
ret
mov
test
or
cmp
int
sub
out
pop
dec
xorb
jp
sub
shrb
jno
jl
mov
jge
bound
cs
add
xor
jmp
clc
sbb
jbe
dec
cmp
push
dec
dec
int3
or
rclb
orl
inc
adc
aam
sahf
xor
sbb
cld
mov
cmp
xchg
fdivrs
cmp
lret
lds
cltd
mov
add
pop
push
aad
hlt
dec
sbb
repz
xchg
or
lcall
push
jge
idivb
cmp
push
sub
push
and
jge
mov
out
xor
mov
mov
xchg
movups
xchg
shr
xor
fldenv
out
add
cmp
dec
cmp
jmp
ljmp
inc
add
pop
xor
mov
pop
jl
stos
test
adc
inc
fwait
loope
push
out
dec
or
mov
repz
rcl
or
mov
inc
imul
xchg
lods
lods
bound
arpl
flds
pusha
test
push
dec
mov
lret
popf
mov
adc
push
sbb
jp
shrb
or
mov
mov
dec
mov
cmp
outsb
jp
dec
sub
mov
jmp
mov
repnz
ret
fisubl
out
ret
fs
popa
and
xchg
mov
mov
xchg
add
lds
dec
push
sbb
sbb
les
dec
fisttps
out
xchg
jmp
push
movsl
xchg
push
jb
pop
cld
lcall
hlt
outsb
mov
ret
sbb
dec
dec
jecxz
add
adc
sub
mov
mov
pop
jno
cmc
std
xchg
daa
push
aad
scas
arpl
xchg
sarb
lock
ret
outsl
scas
cmp
adc
jae,pn
and
popa
mov
stc
mov
adc
hlt
fcomps
add
sahf
arpl
sbb
or
cmc
pop
sbb
and
popa
mov
dec
addr16
out
and
sub
pop
int
movsb
ret
xor
pusha
or
andb
pop
sub
call
cs
andb
mov
sbb
lods
fiaddl
xchg
or
push
imul
jo
jl
in
cli
xor
stc
jb
hlt
sub
shrl
adc
jbe
fstpt
mov
sarl
icebp
sbb
int3
xlat
les
rcrl
mov
xchg
pop
ja
cld
insl
jg
cli
test
pushl
adc
add
mov
outsl
sti
test
or
jge
push
jbe
fistl
sub
push
stos
je
pop
and
jg
sub
lret
data16
fisubl
stc
int
in
sub
or
dec
jl
jle
dec
stc
es
out
cmp
movsl
xor
data16
fcmovb
aad
push
push
adc
fdivl
sbb
aas
es
clc
pusha
xchg
push
cmp
mov
and
pop
xchg
lods
jae
cld
movsb
into
in
inc
sbb
mov
pushf
jo
inc
cwtl
cmc
bound
and
mov
sub
or
mov
xorl
pushw
sbb
push
js
insl
mov
push
scas
aam
push
jne
push
mov
shll
xor
and
inc
int3
inc
cmp
in
popa
lret
dec
filds
int
jecxz
outsb
les
xchg
inc
lahf
call
push
in
pop
pop
or
cs
insl
addr16
mov
icebp
pop
add
in
xor
dec
jmp
cmpsl
cmp
inc
nop
dec
push
dec
push
pop
fwait
inc
xor
scas
jecxz
dec
in
inc
cmp
xchg
aas
out
cli
add
inc
call
das
addr16
test
inc
mov
clc
push
add
clc
test
push
xor
cwtl
call
and
mov
mov
adc
push
aam
add
shlb
mov
push
dec
push
movsb
stos
mov
int3
mov
in
out
jo
xchg
cmp
push
mov
cmp
and
push
push
out
xor
cwtl
and
dec
and
lock
movaps
push
push
inc
dec
push
scas
enter
or
daa
js
add
test
jl
pop
lods
in
das
test
ds
mov
dec
in
sarb
and
mov
outsl
shrb
mov
insb
and
cmp
mov
cmpsb
sbb
add
cmpb
div
in
and
andl
mov
mov
xchg
pop
lcall
cs
mov
out
cld
pop
aas
stc
je
dec
ret
xchg
jne
testl
xor
loopne
push
adcl
adc
aaa
push
sbb
xor
fisubs
in
jl
mov
int3
mov
add
out
adc
cmc
or
mov
in
out
push
pop
and
jbe
sbb
cmp
stos
ss
push
jl
add
jle
and
sub
sub
addr16
je
xor
sbb
lret
lret
mov
test
fsts
pop
xorb
rcr
mov
in
adc
icebp
adc
popa
call
shlb
cmp
imul
test
inc
aaa
xchg
mov
cwtl
lds
cmpl
jno
mov
sbb
test
pushf
sbb
out
ds
xchg
pop
iret
adc
cltd
repnz
ret
iret
andb
shlb
fsubrl
call
jbe
fimull
mov
out
or
gs
xor
testb
inc
aad
jle
push
adc
pop
pop
pop
out
mov
movl
add
and
sub
leave
test
sti
adc
adc
inc
pop
mov
mov
sarl
pop
pop
mov
sbb
jae
push
sbb
imul
lods
outsl
inc
push
mov
xchg
out
adc
xor
sbb
and
pop
mov
jge
fwait
xchg
mov
mov
mov
mov
mov
mov
inc
std
mov
jg
mov
mov
cmc
inc
scas
and
mov
sub
pop
mov
ret
jge
pop
xor
icebp
and
push
in
mov
imul
pushf
jmp
or
push
dec
pop
lods
sahf
mov
push
fs
pop
xor
push
rcrl
pop
repz
ret
add
sbb
jg
push
xchg
cmc
into
lock
jge
nop
ror
popa
fdivrl
jnp
mov
repz
jmp
jnp
cs
fbstp
xchg
mov
fstl
add
sbb
iret
lea
shlb
xchg
inc
es
divl
jb
lods
jo
clc
push
pop
cmc
ds
add
sub
jnp
adc
pop
int
dec
nop
adc
lahf
cmp
pop
in
jle
int3
out
ret
or
jnp
faddl
xchg
and
mov
cli
sbb
addb
mov
xchg
jp
shrl
mov
out
movsb
mov
rclb
add
subb
ja
fisubs
js
stos
sbb
leave
dec
mov
out
lret
sbb
or
mov
scas
jle
out
jle
fsubrs
add
mulb
mov
popa
rcrl
popa
cmpl
add
clc
insb
shlb
iret
imul
scas
inc
jo
arpl
sub
std
imul
push
push
mov
cltd
sbb
test
popa
stc
pop
cmpb
jns
fsubrs
lret
fsubl
adc
popf
mov
fidivs
jo
sub
insl
pop
leave
push
mov
mull
dec
int
shrb
aad
xlat
mov
rorl
aam
jno
mov
pop
negb
mov
lods
loope
js
sbb
int
addr16
pop
popa
or
orb
std
mov
and
popa
xor
movsl
mov
sarb
mov
in
inc
rcrb
jle
cwtl
xor
ja
shll
sti
fwait
dec
test
loope
and
mov
bound
pushf
jo
adc
mov
lods
lock
push
push
xor
mov
jno
aam
adcb
cltd
push
sbbb
dec
sub
push
popf
stc
jg
out
push
sbb
cld
or
cmpsl
jns
test
std
int
or
sbb
rep
xchg
sbb
lds
mov
jg
jne
lret
js
or
jge
insb
cli
and
and
cs
and
cwtl
in
push
decb
push
xor
push
cwtl
xchg
fwait
sti
push
loopne
scas
pop
inc
dec
loopne
push
jno
inc
sub
or
xor
sbb
dec
push
push
mov
fdivrs
andb
xor
mov
mov
leave
xor
xchg
pop
jle
or
fchs
aaa
add
rcll
inc
mov
out
int3
pop
pop
xchg
and
add
icebp
inc
je
cmp
push
xchg
add
push
fwait
mov
mov
sub
xchg
mov
and
lods
mov
fdiv
jns
mov
jg
fldcw
inc
pusha
int
or
and
jmp
cmpl
pop
adc
and
dec
and
jl
cld
add
adc
imul
jne
inc
mov
push
jo
xchg
mov
fs
rorl
cmp
inc
sets
outsl
sub
push
push
std
cwtl
das
xor
pop
out
sub
aaa
xor
test
icebp
pop
mov
push
inc
fidivrl
fs
mov
fisubrs
repz
xor
ss
xor
pop
xor
fwait
pop
movl
mov
stos
inc
sbb
adc
push
out
mov
add
aad
std
inc
and
push
repz
xor
lret
push
sahf
roll
js
mov
test
jbe
dec
pop
jg
fldenv
out
sbb
cmp
lcall
xchg
pop
icebp
cmp
pop
popl
sar
cmp
int3
xor
fidivl
lcall
pop
jns
scas
and
xchg
lock
mov
inc
xchg
sub
mov
sbb
push
aas
jmp
into
sub
push
int
lcall
in
lods
mov
lock
inc
adcl
pop
icebp
test
nop
pop
lcall
xor
push
loope
loope
ds
jno
xor
xor
or
lods
pop
imul
jne
cmpsl
ret
gs
cmp
mov
shld
xchg
jl
jl
fsubrs
movsb
ret
mov
popa
and
scas
push
mov
mov
popf
push
fidivrl
std
aam
lret
lds
jb
lods
es
or
es
repz
jl
adc
sub
push
pop
jmp
in
dec
and
stc
data16
fnstsw
adc
sti
mov
out
cmc
rcll
adcl
ds
faddl
mov
inc
aad
sbb
adc
testb
xchg
xchg
ret
sub
out
call
insb
sbb
popa
or
sbb
enter
pop
aad
push
arpl
notl
xchg
xchg
xchg
fidivrl
or
sbb
sbb
int
mov
push
js
push
aas
or
xchg
add
mov
in
adc
cmp
add
jb
push
sbb
aad
cmc
daa
push
in
jle
hlt
mov
iret
imul
push
jmp
jp
lea
fwait
push
cmpsl
mov
lods
rolb
cwtl
pop
push
imul
push
dec
xlat
jle
lahf
popa
mov
xchg
imul
cli
scas
push
or
xor
mov
mov
fldt
mov
mov
mov
dec
jmp
push
mov
mov
testl
out
rcrb
and
js
lahf
daa
adc
or
arpl
mov
repnz
in
out
movsb
and
sbb
mov
outsb
inc
ss
add
mov
pop
sub
popf
cmp
inc
sbb
in
jae
inc
and
lret
sub
inc
out
shl
in
xchg
mov
das
loopne
loope
dec
pop
es
mov
inc
rcrl
inc
cmc
jo
mov
aam
sbb
pop
jb
test
ret
or
loop
push
cmc
inc
fildll
and
std
aam
push
sub
iret
mul
mov
ljmp
out
nop
push
inc
aad
mov
push
sahf
inc
leave
mov
cli
dec
pop
into
in
adcb
icebp
adc
stc
pop
push
lods
das
pushf
pop
cmc
dec
xor
jg
out
jae
testl
and
cwtl
mov
adc
pop
sti
nop
addb
les
out
aaa
cld
pop
cli
mov
data16
cwtl
shlb
push
loope
fimull
pop
stc
stc
jg
sbb
xchg
pop
cmpsl
dec
inc
sbb
int
mov
fisubrl
cld
xchg
lret
sbb
sbb
rcrb
mov
scas
into
sbbl
sbb
ret
adc
call
cmp
xor
sub
enter
pop
rol
and
push
addl
push
mov
sahf
cmc
ficoml
jbe
inc
sub
out
js
rcrl
ret
loopne
xor
mov
fisttpl
xchg
or
out
cmp
das
sti
or
aaa
push
shrl
insb
xor
cltd
jecxz
repz
stos
lahf
div
cmp
add
bound
das
pop
lods
dec
jne
sub
sub
push
pop
inc
cmp
fnsave
stc
rolb
or
movsl
pop
or
cld
or
pop
movsb
jp
stos
testl
movsl
jbe
pop
push
stc
sub
cmp
mov
sub
in
fdiv
jae
mov
pop
arpl
pop
xchg
push
add
aaa
mov
lea
je
jge
cmpsl
daa
add
xor
or
fs
lcall
es
push
pop
inc
subb
sub
and
subl
mov
mov
ficoms
loop
xchg
aam
mov
or
inc
divl
in
or
jb
add
test
outsb
xchg
in
lock
cmpsl
and
or
jge
out
sbb
repz
insb
shlb
rol
fs
hlt
popa
cmp
cmpsl
lea
push
outsb
xchg
mov
insb
dec
test
mov
pop
inc
pop
in
test
ljmp
shrb
or
pop
in
mov
push
or
or
in
nopl
fidivl
cmc
add
mov
test
mov
mov
leave
inc
dec
repnz
rcrl
pop
lds
pusha
setg
pop
cmp
adc
xor
mov
imul
arpl
push
or
mov
jl
sub
js
or
sub
jmp
xchg
cli
xchg
jb
stos
add
dec
jbe,pn
inc
lods
out
and
fsubl
inc
pop
outsb
imulb
mov
mov
mov
and
popf
pop
pop
xchg
std
xchg
add
arpl
lret
mov
mov
and
repz
sahf
mov
lret
push
sti
jns
out
jmp
jns
iret
mov
xchg
mov
lods
push
lods
fdivrp
mov
movsb
aad
mov
div
pop
push
pop
cmp
mov
call
mov
or
leave
icebp
sarb
fiadds
shr
inc
ja
mov
enter
in
adc
jl
mov
jae
or
sahf
mov
inc
lods
push
push
adc
fnstenv
xchg
xor
and
mov
call
push
call
popf
gs
int3
jg
jnp
dec
lods
rcrb
aad
inc
lahf
jmp
rcll
mov
ret
xlat
adc
fwait
xor
sbb
sarl
cmpsl
mov
popa
fmul
je
jns
out
mov
xorb
andl
pop
movsb
sbb
les
mov
into
rorb
inc
popa
xchg
push
push
rcrl
xor
out
dec
mov
mov
xor
adc
rclb
push
icebp
daa
pop
xor
push
pusha
addb
dec
pop
adc
psllq
push
mov
add
push
adc
push
stos
addl
fwait
cltd
ret
mov
sub
jmp
fiaddl
nop
int3
jg
mov
idivb
imul
lcall
mov
loope,pt
rcrb
dec
pop
xchg
dec
fwait
mov
mov
xchg
icebp
es
inc
ffree
inc
sub
decl
mov
shrd
sub
fisubrl
fmul
push
jae
scas
mov
or
xor
test
xchg
stos
mov
bound
inc
cmpl
cmp
mov
inc
pop
mov
mov
mov
lret
dec
popa
imul
adc
xchg
mov
fnstsw
mov
push
sub
mov
rolb
hlt
outsl
incb
rol
imul
aad
sub
icebp
mov
pushf
jl
testb
fucomip
sub
xor
xchg
pop
in
loopne
mov
sub
or
xchg
sbb
sbb
push
and
add
or
out
sbb
loop
or
mov
and
push
scas
cmp
cli
inc
or
ds
or
imul
mov
add
ret
xor
mov
jge
jns
mov
jge
inc
dec
mov
push
fucomip
gs
xchg
lahf
xchg
add
xor
scas
fldl
sub
es
xchg
lods
imul
mov
ficomps
in
dec
mov
dec
scas
inc
out
push
xchg
je
mov
ljmp
mov
or
in
pushf
add
xchg
in
push
cwtl
mov
sub
push
mov
dec
enter
sub
sub
negl
pushf
lods
out
add
xor
std
xlat
repz
mov
xchg
call
hlt
dec
aaa
pop
mov
outsl
jnp
aaa
fcmovne
mov
lret
popa
jl
mov
insb
out
push
cmpsl
add
mov
cld
sub
cmp
loopne
fnsave
popa
rorb
or
sbb
int3
sub
loopne
mov
push
xor
push
ss
pop
add
out
icebp
jae
add
or
adc
push
sub
test
test
test
pushf
adc
and
test
std
sbb
lcall
fsubr
out
xchg
test
mov
faddl
or
jne
pusha
ljmp
sti
lock
fsubs
sbb
adc
jge
jne
je
ds
cld
push
jnp
fldt
fwait
lret
mov
sub
jmp
sti
stos
cmc
and
not
outsb
push
imul
out
shll
fwait
ficoms
fists
add
jnp
sbb
or
jp
daa
mov
out
inc
pop
jbe
fmul
mov
add
push
ss
out
push
xlat
xchg
movsl
cmpl
mov
sub
fstpl
mov
mull
mov
push
xchg
add
in
jo
inc
fstpt
sbb
mov
sahf
xchg
and
jg
test
push
fisubrs
popf
lods
lods
cmc
je
daa
into
ret
sbb
icebp
in
dec
sbb
pop
ljmp
test
mov
and
sub
popf
jno
ja
push
jno
mov
das
les
xlat
lret
mov
jmp
mov
lock
cltd
popf
cwtl
loope
xchg
xchg
jns
cmp
in
out
lcall
ss
scas
cmpsl
jo
pushl
or
and
loop
pop
mov
nop
sbb
mov
push
clc
rclb
fiadds
scas
push
hlt
mov
jne
jl
lea
mov
sbb
iret
pop
gs
rorb
lods
loope
mov
jns
push
and
shll
nop
mov
ret
push
fimull
cmp
inc
ss
push
pop
cmp
inc
pop
sub
mov
loopne
stos
lds
cs
xor
test
or
sahf
stos
lea
rcrl
xor
pop
adcb
roll
mov
mov
and
shrl
lret
inc
das
push
add
push
lods
push
ret
push
mov
sti
pop
sbb
xchg
sub
adc
pushf
lods
add
jae
sbb
int3
jle
push
adc
mov
mull
push
jnp
mov
or
mov
adc
out
and
pop
outsb
adc
xor
leave
mov
mov
xor
or
mov
sub
out
cmp
adc
notb
push
sahf
out
xchg
ds
dec
ja
das
lcall
cwtl
pop
in
jb
inc
mov
clc
mov
push
fsubrs
sub
movsl
cmpsb
cmpsb
inc
nop
inc
cs
fnstsw
xchg
jmp
fildll
jno
jae
leave
pop
int3
imul
fs
mov
mov
push
inc
mov
fmull
mov
xlat
sub
mov
pop
and
jg,pn
aam
in
inc
test
jmp
fdivr
or
sub
inc
mov
push
push
or
fmulp
in
clc
pop
andb
inc
stos
inc
and
test
mov
push
nop
push
imul
push
ljmp
fmuls
mov
push
mov
jne
sti
dec
stc
outsb
sbb
xchg
cmp
cwtl
out
int3
push
sbb
push
pop
icebp
mov
sahf
or
mov
ret
jle
sbb
scas
inc
push
cli
cmp
in
gs
sub
cmp
add
jo
jae
mov
and
inc
mov
lret
cmpsl
mov
sar
push
and
cmpsb
andb
or
ret
data16
push
add
ljmp
test
ret
int3
outsb
or
hlt
outsb
mov
jne
dec
sbb
sub
xor
arpl
lods
mov
test
movsl
ror
jno
push
cmpsl
mov
dec
leave
xor
cmp
lcall
daa
adc
pusha
aaa
sti
lahf
cli
push
inc
icebp
lret
jae
adc
into
pop
lock
sub
or
pop
jno
jge
or
dec
dec
adc
mov
mov
or
xor
fists
fidivrs
and
and
inc
fmull
or
bound
roll
gs
jecxz
js
ss
cmpsb
cmp
mov
shll
shlb
or
mov
lcall
push
sub
xlat
mov
mov
mov
or
push
std
mov
sbb
cld
or
xor
shr
aad
daa
or
in
jmp
or
mov
xchg
dec
jno
shll
xchg
shlb
xchg
xor
push
int
or
add
cltd
repnz
adc
fildll
icebp
imul
or
sbb
adc
sbb
push
sub
insl
xchg
repnz
cmp
and
lods
andl
inc
adc
jae
std
jo
adc
icebp
sbb
ljmp
or
mov
cli
dec
sti
dec
xchg
cmp
dec
inc
dec
stos
dec
xor
xchg
jp
sub
mov
xor
dec
xor
cmp
xchg
dec
out
sbb
rep
sti
fwait
arpl
add
sub
je
aad
pop
and
jle
icebp
jae
pop
cmpxchg
incb
sub
orl
pop
xchg
cmp
fimull
popf
fmull
cli
mov
ljmp
repnz
cmp
xor
or
xchg
repnz
imul
push
shl
lds
lds
cs
add
sbb
pop
dec
dec
mov
xchg
imul
and
outsb
push
and
push
jbe
aad
shr
cli
shll
inc
push
sbb
inc
leave
adc
and
lods
pop
mov
jl
popa
mov
dec
popa
push
sbb
lea
cmp
add
push
sub
and
adc
fdivrs
scas
test
aam
mov
push
xor
cltd
and
fsubl
dec
xor
xchg
mov
pusha
cmpb
jecxz
mov
push
xor
lods
mov
inc
pop
lret
jmp
cwtl
xor
movsl
je
sub
mov
icebp
sbb
imul
decb
imul
mov
stos
aaa
je
je
jle
ja
sub
push
sbb
mov
pop
imul
ret
xor
dec
jge
shl
outsl
ljmp
popa
mov
loopne
or
jae
into
push
jne
outsb
jl
jg
xchg
adc
mov
cwtl
stc
push
out
xchg
mov
clc
inc
bound
shlb
mov
insl
shlb
imul
jmp
xchg
iret
mov
push
test
inc
loope
jne
nop
xor
insb
mov
test
fwait
adc
sbb
mov
sahf
shr
ret
aad
jecxz
mov
or
outsl
sub
and
mov
push
int3
push
and
out
add
jmp
push
mov
or
aad
nop
adc
mov
iret
dec
ss
imul
mov
or
or
adc
pop
popl
pop
mov
std
push
mov
lret
or
mov
pop
sahf
xchg
test
ret
mov
stos
repz
xchg
ja
mov
mov
mov
push
rcl
inc
adc
xchg
jecxz
xor
repnz
push
or
inc
pop
cli
icebp
hlt
mov
filds
mov
fists
cld
sub
push
push
dec
shll
jge
jnp
ss
inc
adc
jnp
sarb
add
sub
pop
sbb
inc
push
fisubrl
mov
andl
inc
aaa
into
mov
add
lret
shlb
ss
xchg
sarb
out
addl
sti
loopne
sub
inc
loope
enter
lods
lods
adc
push
ret
xchg
int
sahf
aad
xchg
cmc
dec
and
sub
jecxz
xor
jbe
dec
xlat
jle
rclb
or
pop
mov
inc
bound
mov
cmp
clc
and
imul
shll
mov
sbb
ja
test
pop
cmc
sub
out
dec
jnp
cld
jmp
addl
movsl
repnz
lret
cmp
jmp
loope
pop
mov
int
movsl
lds
mov
sahf
out
mov
jmp
pop
push
inc
icebp
sti
jp
cwtl
daa
push
pop
rcrl
and
push
lock
or
jne
punpckhdq
cmpsb
jbe
lea
lcall
xor
push
xchg
ret
call
loop
mov
mov
hlt
and
inc
xchg
fidivl
dec
pop
sub
pop
adc
cmp
fdivs
cmpsl
mov
adc
jg
cs
push
fiadds
add
xchg
jne
mov
xor
mov
cmp
push
push
ja
js
inc
push
xchg
scas
out
shlb
inc
push
sub
std
inc
xor
gs
pop
lcall
dec
rorb
outsl
or
adc
ret
jl
dec
push
les
lahf
mov
pop
inc
je
hlt
xlat
push
aaa
fcmovb
jae
dec
cmp
lret
enter
enter
fistpl
mov
inc
jl
jl
rorb
sahf
mov
test
dec
fnstsw
adc
test
test
sqrtps
ja
xor
and
push
cld
stos
xchg
out
imul
shll
pop
add
test
jp
fs
cmp
mov
or
imul
xchg
sbb
mov
xchg
pop
leave
adc
in
xchg
pop
jmp
movsb
ficoms
mov
adc
mov
movsb
cmp
push
pop
jbe
sarl
xchg
inc
fs
test
cmpsl
ret
xchg
mov
ds
sub
sbb
add
sbb
mov
cld
sti
gs
lahf
stc
popa
das
inc
pop
scas
push
fistl
dec
and
pop
aas
dec
aam
dec
data16
xchg
mov
and
je
das
xchg
or
test
lahf
pop
mov
mov
xor
cld
dec
and
repz
sbb
std
jo
mov
cmpsb
call
in
imul
aam
cmp
dec
ss
mov
push
js
inc
fwait
cmpsl
movsb
aad
xchg
sub
cmpb
mov
cmp
lret
push
shll
dec
adc
xchg
lds
mov
add
jge
lcall
mov
mov
shrb
fisubrs
dec
scas
rolb
jb
push
xlat
xchg
ss
sti
inc
loopne
test
jle
sbb
adc
arpl
ret
insb
imul
roll
sub
enter
in
ret
mov
sbb
jns
or
rolb
xchg
mov
pop
jp
xlat
mov
mov
add
sahf
lods
sbb
jmp
xor
xchg
push
lock
mov
dec
insl
icebp
jne
ficoms
pop
ss
sub
ficoms
sahf
test
push
lret
xchg
dec
fists
test
inc
add
mov
cmp
mov
aaa
fisubrl
and
test
pop
ret
inc
add
js
jg
outsb
test
pop
xchg
pop
jne
ret
inc
jmp
loop
pop
clc
dec
lcall
idivb
lods
add
jmp
roll
scas
mov
int3
leave
fwait
adc
push
add
flds
stc
or
dec
add
stc
adc
mov
or
xchg
xor
sahf
xorl
or
sbb
jno
xchg
addr16
mov
insl
out
jle
fstl
fs
leave
test
mov
mov
imul
add
call
in
enter
mov
dec
push
cs
inc
nop
mov
xor
insl
shrl
pushl
cmp
arpl
sbbb
xor
pusha
jno
imul
and
push
add
and
data16
cmpsl
mov
sbb
cld
sub
adc
es
sti
fmulp
mov
loope
cmp
mov
pop
sbb
cltd
pusha
test
movsb
int3
lods
out
push
rorb
jo
mov
ret
aam
insb
repnz
inc
ja
push
dec
es
sbb
xlat
ss
cmp
neg
mov
loopne
push
out
or
xchg
pop
int3
cmp
lds
sub
std
mov
mov
cli
std
cltd
xor
out
cltd
out
xchg
mov
mov
or
int3
fsubl
sub
jecxz
xchg
and
ljmp
jnp
adcb
out
icebp
insb
std
push
jo
mov
jg
test
add
or
out
test
mov
xor
lods
js
ljmp
mov
pop
repnz
faddl
dec
adc
repnz
in
jno
dec
cmp
jb
pop
lea
sbb
dec
jle
push
jns
inc
arpl
ret
sbb
push
or
add
dec
fistl
xor
lea
xor
imul
xchg
xchg
bound
xor
mov
test
adc
pop
inc
scas
mov
pop
imul
xor
sbb
push
push
pop
jb
add
cmpsb
add
cmp
pop
bound
mov
stos
push
jmp
adc
inc
fbld
aas
or
daa
add
frstor
add
sub
xchg
xor
cli
pop
jmp
lret
fdivl
add
xor
sti
mov
pop
cmpsb
add
mov
insl
jmp
pop
pusha
les
and
adc
int
mov
push
stos
adc
fs
std
mov
adc
pop
add
xchg
cmpb
pop
inc
push
shll
xor
pop
and
nop
push
pop
orb
outsl
mov
adc
lods
cmp
je
adc
mov
out
ss
mov
sbbb
dec
mov
cmpsb
push
or
push
jle
ss
push
push
pop
test
xor
adc
std
ja
je
stos
sub
rcll
negl
out
xor
push
dec
cmc
cmp
fsubrl
aad
mov
inc
stos
test
cs
shlb
repz
xor
cld
mov
mov
sbb
stc
insl
adc
fucomip
and
int
mov
cmp
pop
fwait
push
sbb
push
in
fcomip
and
imul
divl
or
out
jp
mov
imul
lods
into
fprem1
jmp
or
in
jge
push
shll
pop
sub
xor
pusha
and
mov
arpl
push
test
popf
mov
or
sbb
pusha
movsb
repnz
imul
subb
sbb
jge
mov
and
sbb
out
lahf
and
stos
das
addr16
mov
pop
bound
out
sbb
or
xchg
test
add
out
push
xchg
pushf
cvtps2pd
sbb
int
xor
dec
pop
data16
dec
aam
and
insl
in
rorb
cwtl
push
dec
push
repnz
mov
sub
test
ret
add
lock
inc
out
mov
jb
or
sbb
in
ds
test
fisttps
test
and
xchg
cmp
scas
xchg
fidivrl
inc
test
cmpsb
inc
mov
jae
sub
loop
xchg
add
inc
mov
cld
xchg
ss
les
negl
and
shr
filds
jne
mov
or
dec
pop
mov
mov
xchg
dec
movsb
mov
adc
out
popf
or
xor
dec
sbb
ret
lock
xchg
xchg
push
outsl
inc
mov
imul
cmpl
or
sbb
xchg
das
sub
sub
pop
xchg
pop
loope
mov
nop
out
into
ret
jp
or
or
inc
fldpi
orb
and
jne
mov
imul
push
outsb
cmp
in
shlb
mov
mov
sub
xchg
pop
mov
jne
cmp
cmpsb
cmp
mov
hlt
cmp
fsubrs
pop
xor
gs
xchg
cmpb
push
jo
mov
lcall
mov
loope
xchg
movsb
adc
lea
fmuls
je
cmp
pop
jb
mov
jbe
leave
addr16
lret
pushl
jle
in
cli
into
popa
daa
divb
daa
dec
out
repnz
pop
int
mov
cmpb
pop
sti
mov
popa
add
lods
icebp
arpl
and
mov
stc
out
xor
cmp
stos
push
call
lea
adc
xchg
in
mov
pusha
pop
ret
or
add
enter
pop
sarl
out
ljmp
cwtl
rep
ljmp
adc
ja
dec
stos
xchg
and
xchg
pop
sub
lock
add
clc
std
ja
popa
xchg
cld
cli
dec
adcb
add
hlt
cmpsl
gs
aam
insl
aam
testb
sbb
mov
out
std
cmpsl
pop
pushw
jp
jg
call
and
leave
or
sbb
dec
xchg
data16
iret
jb
imul
sbb
mov
aad
mov
pop
repz
loope
aaa
mov
les
jo
movsb
scas
push
adc
in
mull
addl
mov
iret
iret
pop
aas
pop
adc
sti
movsl
or
push
xor
mov
xchg
adc
into
lret
cli
xchg
xor
xchg
and
mov
ljmp
iret
gs
mov
pop
test
sbb
fbstp
jle
addb
in
mov
fsts
leave
push
test
idivl
or
mov
test
mov
push
jge
sbb
lds
mov
mov
dec
sbb
fwait
xchg
jns
leave
push
ss
imul
out
xchg
movsl
cmp
dec
popf
lods
dec
test
imul
mov
mov
mov
cmp
pop
leave
sbbb
inc
sbb
outsb
add
test
fs
lods
in
stos
lea
push
iret
incb
fnstsw
dec
lods
add
outsb
stos
mov
std
inc
cmc
shl
xchg
imul
paddw
insb
push
clc
jge
pop
add
mov
pop
xor
nop
cmp
adc
je
inc
scas
push
jno
and
clc
mov
inc
nop
cmp
jbe
xor
fs
adc
dec
icebp
xchg
xchg
sub
push
pushf
inc
xlat
outsl
add
loope
pop
call
push
or
and
dec
mov
inc
mov
xchg
mov
imul
cmp
sub
test
or
je
cmp
pop
stc
nop
dec
jo
ja
jo
outsb
ss
out
movsb
jmp
jbe
fsubl
mov
insl
idivb
cmp
fucomip
and
cmp
imul
jmp
fnop
inc
mov
pushf
and
sbb
and
inc
insb
cwtl
das
pop
js
repz
xchg
inc
stos
int
push
inc
push
fstp
xor
insb
fnstsw
fisubs
lds
jecxz
rol
jno
sarb
daa
jae
pop
scas
inc
sbb
pushf
not
xchg
push
lods
jns
cmp
adc
add
add
sbb
andl
adc
or
inc
mov
push
and
xor
repz
adc
mov
mov
adc
mov
cmp
sub
pop
bound
jmp
test
sub
mov
lock
jo
mov
push
cli
xchg
inc
enter
in
sub
mov
add
int
faddl
mov
xlat
mov
lds
add
insl
stos
das
call
je
mov
repz
adc
das
ja
pop
dec
mov
xor
xor
inc
adcl
mov
cmp
cmp
ret
sbb
mov
loop
cmp
dec
hlt
or
push
arpl
lods
dec
jmp
rorb
test
sub
out
sbb
adcl
push
xor
fmul
inc
sub
xchg
add
sbb
or
inc
push
decb
gs
lock
and
add
addr16
xchg
mov
cld
or
pop
and
xchg
push
int3
cmpsl
dec
mov
idivl
out
mov
inc
ljmp
push
std
pop
mov
and
out
int3
mov
stc
sbb
mov
fiaddl
mov
mov
mov
push
mov
cmp
out
xchg
adc
inc
sub
cmp
sub
sbb
xchg
mov
imul
clc
rorl
fisttps
roll
mov
mov
jecxz
add
mov
push
sub
mov
outsb
les
imul
cmpsb
clc
repz
js
clc
inc
aas
sub
pushl
or
in
addl
or
add
nop
push
in
mov
push
call
lahf
stos
lret
fisubrs
lret
jno
inc
out
andb
dec
jmp
ss
jno
jmp
aas
xchg
add
call
std
mov
lods
xor
pop
jbe
mov
ds
jmp
loop
out
shlb
and
jno
addr16
add
movsl
mov
mov
iret
test
mov
popa
mov
sbb
dec
jge
ljmp
add
inc
cmc
pop
cmpsl
sbb
cltd
popf
xor
sbb
arpl
jmp
aam
loope
xchg
sub
push
jns
call
int
mov
lock
mov
xchg
fs
pop
xor
and
xchg
bound
adc
or
das
and
and
je
xor
rcr
add
inc
fiadds
lea
fwait
push
inc
aas
iret
mov
adc
mov
jecxz
or
adc
les
mov
jmp
idivl
cmp
fdivrl
inc
shrb
mov
push
pop
insl
shrb
cmp
cmp
popf
lcall
jne
scas
cmp
movsl
inc
into
push
in
mov
mov
mov
jb
add
loope
xlat
add
mov
push
cmp
cmpsb
orb
pusha
daa
mov
cmc
xor
shll
inc
inc
adc
dec
scas
pop
xor
push
fimuls
mov
adc
cld
pop
ljmp
push
push
fwait
jge
cmp
mov
jp
hlt
ret
xchg
jl
pop
cld
dec
aad
cmp
sbb
popa
ja
nop
and
ret
call
ljmp
or
adc
and
mov
in
sub
loop
mov
int3
add
sti
scas
xchg
sub
sbb
or
dec
mov
stos
add
sub
pushf
shrl
add
hlt
mov
mov
mov
xchg
outsl
repz
mov
adc
pshufw
or
inc
sbb
or
sarb
shr
loop
sub
lret
xchg
es
xor
pusha
dec
xchg
in
test
push
mov
sbb
dec
xor
jle
cmc
sub
ja
icebp
xor
cmc
insb
jo
add
xor
dec
les
cltd
stos
stc
test
int3
cmp
mov
ficoml
das
mov
jge
adc
jae
push
test
shlb
cwtl
fistpl
loopne
into
push
jge
add
xchg
clc
and
inc
sub
inc
mov
xchg
andl
shlb
dec
fcoms
je
ret
daa
in
pop
out
pop
test
fwait
and
sbb
or
cmp
adc
xor
push
add
mov
subl
in
hlt
mov
dec
xchg
add
xor
mov
popf
andl
add
js
out
adc
cld
fwait
das
lods
cs
dec
add
lods
mov
fdivrp
or
adc
mov
ret
loope
cld
or
cmp
repnz
and
mov
cwtl
jno
xlat
sub
jo
pop
rcrl
aad
adc
mov
subb
xchg
or
sti
push
sub
jmp
das
adc
pop
xchg
fs
pop
out
and
add
stos
outsb
inc
fnstenv
mov
cmp
mov
daa
inc
ds
adc
mov
cmp
sbbl
xor
fwait
cld
or
mov
or
cmpl
cmp
push
in
repnz
pop
sub
push
jne
jl
mov
adc
inc
stos
and
mov
fwait
das
aaa
cmpsb
sbb
inc
loop
jae
cmpsb
cmp
and
les
mov
mov
cmova
adc
cwtl
inc
sti
or
jle
add
xlat
mov
andb
cmpsl
sahf
jns
rorb
pop
push
xchg
jp
jle
xor
insb
imul
hlt
mov
adc
mov
push
outsb
or
dec
xchg
sub
mov
push
mov
lret
add
arpl
xchg
inc
or
xchg
repnz
xlat
pushf
lea
aad
xchg
mov
and
push
mov
fs
mov
out
loop
xchg
in
xchg
add
hlt
cmp
imul
mov
or
pop
mov
fucom
jnp
imul
mov
push
mov
mov
rcll
insb
fistps
and
cltd
stc
adc
cld
inc
adc
call
cs
cmp
xchg
insl
add
push
xor
lahf
ljmp
or
rcl
ljmp
pop
xor
mov
loop
cmpsb
inc
into
icebp
ret
pop
and
dec
test
push
push
or
add
mov
jmp
or
stos
inc
sti
sub
xor
cmp
inc
iret
push
lahf
cmpl
cmpsb
inc
call
sub
fbstp
sub
xlat
xor
mov
les
std
add
rorb
sub
lcall
jmp
fcmovbe
imul
sub
sahf
inc
lret
out
xor
out
inc
and
fdivl
sub
cld
inc
mov
adc
addb
and
cwtl
push
mov
test
pop
test
insb
sbb
push
adc
int3
arpl
or
jg
push
pop
mov
adc
sub
mov
sbb
es
rcll
cmp
pop
dec
movsl
iret
and
bound
outsb
int
pusha
sahf
aas
pop
dec
jb
jne
fiaddl
dec
cld
xchg
push
in
fimuls
bound
pop
mov
mov
cmp
scas
push
cmpsl
shll
divb
out
mov
repz
or
mov
mov
and
mov
xlat
outsb
mov
psadbw
mov
mov
sub
insb
loope
mov
sar
or
fisubrl
fcomip
lods
leave
jle
call
mov
lahf
dec
aam
dec
loopne
pop
cli
pop
add
push
jne
mov
mov
aam
and
aam
test
sarl
mov
pop
jmp
sbb
fsts
fisubs
sub
adc
sub
xorb
loopne
fxtract
stc
rcrl
in
mov
pusha
in
imul
sub
mov
repz
fidivl
cmpsl
jle
pop
inc
movsb
mov
and
sti
loop
fnstsw
sub
xrelease
cs
mov
xchg
incl
mov
adc
cmp
pop
pushf
repz
dec
sbb
cmp
push
aaa
bound
adc
ret
mov
movsb
enter
adc
fisttpl
pop
pushf
or
rorl
int3
push
in
push
or
mov
and
idivb
jecxz
testl
xchg
cmc
cmp
stos
or
adc
dec
and
loop
mov
inc
add
push
push
ds
aam
adc
je
mov
test
mov
push
fmuls
mov
mov
rcrb
insb
lods
int3
pop
mov
frstpm(287
jge
test
xchg
mov
inc
xchg
pop
jns
stc
xchg
imul
sbb
push
out
adc
js
push
imulb
shll
fs
dec
ret
les
adc
xchg
jle
cmpsb
dec
xor
loopne
in
cmp
push
push
adc
pop
mov
xor
aad
pop
cld
or
scas
js
dec
ljmp
imul
add
jl
aaa
pop
insl
xchg
lea
shll
jmp
xchg
out
inc
adc
rorb
push
adc
enter
mov
aam
outsb
push
fucomp
jb
inc
mov
sub
std
dec
bound
test
xlat
and
xchg
dec
rorb
int
sub
xor
insl
jl
pop
pop
push
push
mov
jge
push
mov
pop
sub
push
lods
ljmp
pushf
pop
jge
push
mov
fstp
test
adc
lret
cmp
mov
xor
or
stc
iret
mov
mov
std
popf
or
out
pop
dec
mov
lods
movsl
aad
jnp
mov
or
gs
mov
mov
xchg
pop
cmp
mov
leave
sub
test
mov
nop
push
xchg
mov
mov
adcl
shl
test
mov
sbb
int
cmpsb
mov
and
iret
inc
cli
sbb
xor
jecxz
xchg
pop
repnz
cld
insl
divb
cmp
ljmp
jp
das
aad
push
shl
jo
insl
jno
in
mov
icebp
cmpsb
push
mov
stos
lods
or
cmp
mov
jmp
pop
fildl
mov
fwait
ss
sub
pushf
popf
arpl
jbe
aam
rcrl
xor
hlt
fwait
push
sub
aad
fs
mov
add
adc
and
dec
push
and
sub
mov
jae
aas
dec
into
push
xor
outsb
out
xchg
inc
dec
lret
ljmp
mov
das
outsl
adc
ds
xchg
addr16
mov
in
sti
sbb
push
push
push
pusha
ds
sarl
sub
cmp
das
sub
lods
mov
addl
fwait
enter
loope
dec
push
arpl
cmp
mov
gs
sbb
jge
iret
jns
into
xchg
sahf
or
daa
add
xor
xorb
xor
push
inc
sti
dec
iret
cmp
sbb
push
add
out
neg
inc
aaa
xchg
pop
mov
push
mov
push
mov
lret
push
shll
int3
dec
mov
add
cmp
mov
aad
push
int
jmp
dec
jb
sbb
jne
sub
jo
das
sub
fwait
cmp
stos
push
mov
popf
jmp
sahf
popf
push
in
pop
out
cli
xchg
mov
les
adc
jp
fbld
inc
pop
stc
lods
dec
pcmpgtw
outsl
daa
outsb
push
popa
or
and
or
xlat
mov
hlt
xchg
and
je
or
sub
out
ret
mov
int
push
in
jmp
inc
lock
pop
and
xchg
lods
push
jmp
add
inc
out
gs
pop
jae
xlat
dec
jle
arpl
sub
inc
sub
je
lahf
jb
jae
das
pop
adc
in
gs
lret
bound
shlb
push
dec
dec
mov
push
mov
ret
mov
mov
inc
test
fnstcw
push
nop
enter
ja
xchg
xchg
jns
add
ret
clc
push
iret
outsl
loope
into
std
mov
mov
mov
jl
cmp
int3
mov
rolb
cmpsb
xor
int
jp
mov
mov
xor
add
loopne
push
daa
rcrl
xchg
shrl
dec
dec
or
ror
movsb
cmp
loope
stos
mov
pop
out
rcrb
mov
dec
arpl
jo
aaa
mov
and
es
push
lret
push
enter
push
or
inc
clc
inc
push
ret
out
pop
adc
xchg
push
test
seto
mov
pop
xchg
in
jp
hlt
fidivl
shlb
jae
pop
push
lods
out
sbb
mov
sub
sbb
push
aad
cmp
les
pop
jge
adc
xlat
ljmp
mov
sti
pop
pause
lods
sub
cmc
out
test
clc
dec
push
movsl
mov
unpckhps
sbb
cli
ret
cld
jp
cmpsb
sbb
pop
sub
jg
mulb
add
jnp
outsb
or
and
xchg
adc
cwtl
sbb
push
imul
dec
cmpsl
imul
mov
je
scas
in
jbe
xchg
das
fwait
sbb
jno
and
cmp
push
pop
outsb
push
cmpsb
xor
cmp
ficompl
hlt
repz
add
adc
jno
mov
hlt
jle
push
mov
lock
cmc
int3
loopne
lahf
into
fdivrl
jne
icebp
ja
cmpsl
cwtl
scas
xchg
mov
hlt
imul
das
jo
jle
pop
fsubrl
cld
gs
andb
cmc
outsb
add
shl
movsl
adc
scas
lret
sub
enter
rol
jg
add
xchg
pop
push
repnz
cmp
add
add
or
pop
in
jle
shrb
xor
pop
int3
fisubl
repnz
or
push
mov
mov
gs
mov
outsl
lods
test
fisttps
mov
icebp
push
jecxz
popa
and
movsl
adc
scas
jae
pop
cltd
or
inc
push
sti
pop
add
addr16
xor
dec
in
dec
cmpsl
xchg
mov
inc
add
shll
xor
stos
jg
vpcmov
xchg
aad
sbb
adc
xchg
sbb
sub
cmpsb
fcompl
or
aad
adc
cmp
mov
pusha
xchg
aaa
iret
rcl
ja
xchg
enter
push
sarl
sub
cmc
daa
into
add
jge
push
aad
mov
mov
push
jmp
pop
and
mov
jb
jmp
repnz
aad
leave
testl
mov
clc
jle
insb
out
cld
inc
jg
xor
pop
push
xlat
shll
or
pop
ljmp
adc
or
push
cmp
testl
sbb
sub
xor
rcrl
mov
pop
das
pop
mov
push
test
sahf
sbb
or
mov
xchg
mov
outsb
adc
mov
daa
pop
xchg
lods
rcrl
dec
push
mov
and
daa
add
inc
xlat
add
aam
test
fisubl
sbb
repz
pusha
imul
mov
idivl
in
mov
jbe
sbb
push
dec
ss
cwtl
ret
xor
in
mov
aam
test
repnz
lahf
xchg
imul
xchg
pop
loope
add
leave
pop
test
adc
inc
lcall
pop
lret
aaa
push
aaa
hlt
addr16
fcmovnu
repnz
push
xchg
cltd
xor
repz
sub
xchg
repnz
mov
push
jge
mov
in
shll
jg
push
pusha
xchg
mov
movsb
mov
or
clc
sub
lcall
push
aad
test
dec
push
aam
cli
inc
popf
pusha
push
pop
or
push
lahf
sub
mov
cmovne
out
sarl
inc
arpl
push
fsubs
mov
xor
fstpl
jno
lods
lea
orb
or
jle
cmp
leave
imul
push
push
gs
xor
push
mov
mov
xchg
xor
xlat
inc
repnz
je
and
bound
mov
stc
bound
aas
mov
pop
nop
sub
and
call
mov
push
push
cs
mov
mov
jnp
jp
add
stos
push
or
mov
test
jae
add
loop
add
fbld
loope
xor
inc
mov
lods
mov
popf
mov
test
sub
and
movsb
dec
inc
outsb
jl
mov
pop
out
ret
lcall
loopne
aam
mov
jb
push
aam
push
push
in
push
cli
jae
inc
sbbl
rol
sti
pop
call
fwait
fs
cld
shlb
inc
jbe
cmpl
xor
pop
push
in
push
cld
mov
xchg
test
cmp
dec
repnz
aaa
lret
aam
push
dec
sub
ror
out
inc
jno
jns
fdiv
gs
or
xchg
add
pop
cwtl
clc
in
cld
mov
sbb
rcl
aad
or
xor
and
xor
mov
mov
loop
pop
fists
lcall
popa
lods
sub
adc
cmp
popa
aaa
jge
jne
add
xchg
ss
dec
out
lds
mov
aaa
sbb
sar
jbe
or
fisttpll
push
bound
mov
test
cltd
xchg
sub
push
jl
aam
insl
fistl
xchg
mov
adc
xchg
push
xchg
add
jl
je
pop
out
mov
cmp
jne
adc
rcrl
cwtl
cwtl
xor
dec
sub
add
dec
into
and
fcompl
mov
loop
into
gs
sti
pop
push
leave
in
ret
clc
shrb
push
test
mov
mov
cs
lcall
js
js
loope
adc
into
inc
inc
out
inc
subl
add
scas
ds
jo
outsl
ror
imul
stc
stos
xchg
ficoms
mov
cli
lds
cmp
js
stc
test
add
push
push
scas
push
mov
sbb
sahf
cmp
outsl
add
dec
jmp
cmp
sub
gs
in
gs
cwtl
pop
int3
inc
orl
mov
add
fmul
push
jl
xchg
sbb
into
pop
sbb
scas
int3
jb
sbb
andb
fisubrl
iret
dec
fsubrs
jno
lret
dec
imul
adc
inc
inc
fldcw
cli
aas
ljmp
aad
ja
scas
repnz
jno,pt
push
cltd
loopne
dec
adc
dec
test
cmp
jge
mov
xor
jp
imul
movsb
xor
fldl
ficoml
andb
jno
sub
xor
jnp
outsb
pusha
cwtl
test
xchg
sbb
pop
popf
adcb
push
loope
popa
xor
aad
dec
pop
mov
push
mov
lods
dec
pop
xor
mov
loop
iret
dec
pusha
jp
cmp
out
pop
pop
shrl
push
stos
mulb
inc
or
adc
nop
push
push
shlb
add
dec
mov
frstor
sbb
jle
adc
je
xlat
push
sub
dec
outsb
xchg
and
sub
hlt
add
dec
mov
dec
popf
out
cmp
enter
push
sbb
inc
cmp
scas
stos
sahf
pusha
ss
ret
imul
pop
mov
popf
pop
icebp
and
shll
cmp
or
rolb
xor
mov
push
ficomps
jg
and
mov
and
or
cmpsl
or
xchg
jge
jecxz
test
es
imul
push
push
or
add
adc
iret
test
sub
leave
aad
xchg
enter
jecxz
lds
add
lods
mov
stos
lods
dec
push
fsubl
adc
fsubs
add
lds
push
sub
sbb
movsb
fcompl
mov
pop
xor
or
pop
add
test
adc
dec
adc
mov
lret
pop
xor
adc
out
cli
xor
repnz
mov
and
sbb
js
ret
dec
jmp
sbb
int
sbb
add
movsl
mov
sub
enter
sub
push
sbb
jl
cs
add
sbb
stos
popa
jmp
test
scas
mov
adc
push
out
call
cs
icebp
dec
fisubrs
or
dec
sbb
ds
push
and
jge
hlt
fucomp
shll
jns
sbb
pushf
insl
inc
jnp
mov
orb
mov
xorl
inc
cld
or
add
pop
add
sarb
mov
adc
mov
add
mov
jmp
xor
or
cmp
push
popf
mov
jbe
xor
jmp
shlb
inc
inc
lods
inc
add
mov
dec
cld
xchg
xchg
orb
lock
push
movsl
push
cmpsb
std
ss
xor
push
stos
sbb
insb
fistps
pop
imul
push
insb
adc
jo
sbb
cli
leave
dec
idivl
dec
call
cmp
pop
lahf
sbb
sbb
sub
push
sbb
jo
in
iret
ss
cmp
dec
pusha
shl
sti
add
mov
or
pop
cmc
daa
repz
fisubrl
jno
js
xchg
hlt
or
mov
xor
lds
add
loope
jmp
add
leave
std
insb
jl
lods
test
mov
imul
outsl
xlat
sbbb
mov
das
push
jecxz
dec
and
lret
cltd
bound
push
inc
int
mov
out
roll
int3
mov
fldt
ja
addl
jmp
xchg
inc
enter
je
jecxz
enter
fdivs
popf
call
jns
mov
lret
cmp
push
or
push
cmp
and
mov
daa
sub
mov
mov
fwait
add
insb
xchg
mov
shlb
push
cs
or
ret
push
out
sub
aas
lock
test
mov
and
adc
ret
ja
stos
das
call
adc
dec
dec
fnstcw
dec
ljmp
rclb
jge
and
test
fs
pusha
xchg
jle
dec
pextrw
outsb
sti
fsubr
sbb
pop
xor
movq
mov
dec
loop
pop
pop
inc
test
in
xlat
xchg
xor
xchg
cli
movsl
cmp
mov
fisubs
gs
scas
pop
adcb
jg
sub
sbb
add
pop
mov
rcll
roll
dec
dec
fistpll
pop
out
xor
int3
iret
cmpsl
mov
out
scas
sub
dec
mov
cmpsb
test
aaa
aaa
scas
out
aas
andl
push
push
stos
push
pop
jae
das
gs
jge
mov
push
outsb
pop
out
xchg
test
pop
popf
push
pop
mov
ds
pop
mov
bound
pusha
rep
lds
ficoms
stc
dec
mov
sbb
add
inc
xor
sub
add
inc
sbb
xchg
in
icebp
push
jne
mov
mov
xchg
notb
into
lds
adc
test
cmpsb
mov
cmp
ffree
inc
push
paddd
das
jmp
hlt
das
out
cmp
pop
call
push
ljmp
cmp
mov
inc
fs
stc
and
loop
repnz
sub
inc
inc
sub
int
jno
sarb
xchg
cmc
movsb
addr16
add
sbbb
sub
out
push
repz
orl
jp
push
inc
outsl
sbb
xor
repnz
inc
pusha
sbb
or
and
ror
jbe
mov
push
jp
test
inc
bound
xchg
sbb
mov
out
fadds
jle
out
sbb
mov
mov
xor
fadd
fistps
and
jmp
and
cmp
lcall
test
dec
les
jp
sbb
mov
xchg
stc
cli
push
adc
adc
cli
jle
dec
jb
mov
mov
out
sahf
je
fsubl
arpl
mul
sti
leave
add
mov
hlt
pop
sub
mov
aam
addb
jge
cmpb
pop
mov
je
push
pop
loop
push
xchg
dec
rclb
mov
ret
inc
add
mov
sbb
ljmp
lock
pop
adc
fidivrl
jbe
scas
jbe
lret
lock
sub
leave
jmp
or
pusha
push
dec
iret
dec
and
shll
dec
inc
xchg
add
leave
push
and
scas
idivl
or
push
cltd
stos
and
mov
xchg
aas
dec
loop
mov
imul
and
sub
add
jle
clc
sub
inc
xchg
push
je
imul
fidivs
add
aam
mov
adc
and
loop
push
add
mov
arpl
repnz
jmp
sbb
jne
push
and
inc
fcomps
add
fs
dec
stos
es
shr
mov
js
aaa
in
aaa
scas
jns
and
call
push
add
sbbb
pop
xchg
ljmp
and
cmpsb
insb
dec
and
mov
test
add
mov
pop
fdivrl
int3
jne
subps
mov
out
insl
dec
mov
div
and
pop
dec
out
add
outsb
sbbl
cmc
lods
aas
mov
jmp
pop
xor
hlt
mov
inc
mov
jle
orl
test
loopne
ret
hlt
pusha
js
inc
mov
dec
repz
test
movb
call
xchg
divb
jmp
test
mov
jo
push
jne
out
repnz
add
xor
mov
sahf
sub
test
jo
cmp
pop
pop
das
xchg
ljmp
idivl
dec
or
shrl
orl
imul
lods
jle
pop
mov
popf
inc
lcall
loopne
repnz
stos
xchg
mov
or
es
repnz
imul
sub
inc
mov
add
out
add
enter
dec
cmp
and
inc
lock
subb
or
aas
jmp
cmp
icebp
jle
mov
imul
mov
movsl
test
cmp
js
dec
out
mov
shll
mov
jg
push
cs
sbb
mov
rorb
stos
outsl
mov
fldenv
xchg
xor
aaa
repz
push
fucomp
test
jp
pop
and
push
push
stos
cmp
jnp
rcll
cmp
mov
xor
pushf
sbb
dec
mov
mov
sub
sbb
scas
inc
daa
pushf
sbb
imul
pop
js
pop
popf
call
cmp
pop
add
pop
int
and
or
pop
pop
sub
mov
test
je
test
xchg
mov
push
jb
push
push
js
fcoml
mov
sti
push
xlat
cs
lods
jp
popf
cmc
mov
std
sbb
imul
notb
mov
hlt
std
cltd
pop
sub
in
mull
stc
shrb
int3
jnp
out
rcll
inc
mov
cmpsb
push
idivl
mov
xor
sarb
add
insl
dec
loopne
mov
aas
add
push
popf
xchg
sub
inc
sbb
push
cmp
hlt
aas
je
lods
movsl
pushf
sbb
into
push
pop
jnp
pop
out
rclb
sub
movsl
pop
lods
xchg
fadds
in
fidivl
ss
push
fs
jmp
add
add
lret
xchg
cmp
adc
sbb
mov
push
fldt
mov
xlat
and
jnp
inc
fwait
in
hlt
lcall
aas
shll
pop
xor
sbb
sub
mov
outsl
adc
dec
pusha
testl
fnstcw
loopne
outsl
push
out
lea
mov
lea
lods
test
mov
ret
xchg
out
and
mov
sbb
add
push
sbb
decl
movsl
mov
jns
movsb
pop
lret
lret
xlat
jl
lahf
and
inc
and
fisttpl
fiadds
cmpsb
aad
add
xor
push
leave
ds
lods
fwait
pop
push
mov
out
movsb
cmp
sub
pop
mov
ret
jnp
pop
bound
mov
in
push
outsb
or
push
xor
mov
in
jp
cwtl
mov
rclb
mov
push
scas
push
mov
aaa
and
xor
js
test
mov
mov
sbb
jle
pushf
xor
outsl
xor
in
pushf
adcb
or
xor
das
faddl
outsb
popf
shlb
cmc
xchg
in
push
stos
sbb
scas
sub
pop
and
mov
push
push
pop
xor
movsb
aas
xchg
leave
sub
mov
test
out
mov
les
movsl
gs
xchg
movsl
lds
push
add
or
test
mov
sarb
and
inc
out
repz
sub
ret
xchg
repz
iret
gs
aam
lds
jl
pop
pop
je
stos
dec
jnp
lea
mov
hlt
cmc
pop
pushw
aam
and
inc
adc
in
std
pop
sub
add
push
cmp
xchg
fstpt
jae
in
outsb
mov
imul
data16
pop
scas
pusha
mov
cs
mov
fwait
arpl
test
or
xchg
xlat
jmp
imul
test
mov
insl
xor
jg
adc
sub
orb
lds
test
add
pop
les
adc
popa
sbb
sbb
lock
lods
enter
inc
xchg
sub
mov
lods
in
jns
push
jge
cmpsl
cwtl
decb
push
es
cltd
sub
xorl
sub
pop
loope
aas
dec
jmp
in
fdivs
inc
mov
jg
adc
cwtl
inc
arpl
mov
sbb
in
repnz
shrl
mov
xchg
shl
mov
pop
lods
push
lods
jmp
lret
js
scas
fidivrs
sti
fwait
pop
ljmp
sbb
cltd
pop
stc
in
aaa
dec
inc
daa
sub
jne
adc
or
jnp
sbb
fs
push
cmpsl
mov
push
outsl
xor
cmpsb
pop
mov
movsl
xchg
or
xchg
jl
or
popa
xorl
cmp
stc
dec
test
mov
jl
fsubl
mov
mov
push
loopne
in
dec
popa
adc
std
sti
and
enter
sub
or
lea
push
mov
push
fbld
bound
inc
pop
aaa
lock
in
sbb
ljmp
jg
mov
inc
mov
stc
adc
pop
fwait
xor
lods
mov
xor
fst
sub
xchg
mov
mov
sbb
cmp
jmp
mov
sti
and
adc
adc
test
test
push
mov
mov
mov
fidivl
lds
les
aam
push
push
add
sub
or
cmp
jnp
sbb
jle
dec
adc
jg
push
push
mov
sbb
push
imul
outsl
ret
mov
xchg
add
inc
std
or
dec
sbb
push
insb
or
in
int
bound
divb
sub
ljmp
sub
iret
data16
lahf
cmp
into
pop
pop
lret
inc
lret
popa
cld
pop
jne
imulb
lret
movsl
data16
adc
outsl
xor
dec
push
mov
imul
fcomip
ds
lock
roll
mov
pop
jb
mov
pop
add
or
cmp
sub
inc
dec
fstpl
push
inc
icebp
ret
in
xchg
add
int
adc
loop
aam
jo
and
sbb
imul
mov
in
imul
dec
pop
lret
pusha
mov
fldcw
fwait
xor
push
mov
inc
mov
insb
dec
push
dec
pop
imul
adc
pop
dec
stc
shl
repnz
add
into
pop
hlt
repz
mov
repz
outsb
inc
lds
cmpsl
adc
mov
cmc
mov
dec
scas
in
pop
outsl
or
xchg
movsl
or
fisubl
data16
ss
nop
push
adcl
aam
or
push
jns
mov
sub
incb
outsb
dec
outsb
cs
fsubr
xor
sbb
fwait
bound
icebp
pop
mov
jo
sbb
js
xchg
jne
mov
pushf
lods
pop
cld
ja
stc
ljmp
addr16
sahf
dec
lods
push
mov
pop
inc
sbb
push
xchg
test
lods
icebp
or
mov
repnz
inc
jecxz
dec
in
pop
jg
xlat
xor
test
adc
sub
popf
insl
dec
loopne
xor
popf
cmp
xor
dec
mov
into
addr16
out
xchg
popf
add
inc
test
mov
mov
and
fisttpll
sub
inc
sbb
push
mov
cmp
push
pop
cmc
adc
pop
cmc
imul
fcoml
test
lods
ja
ffreep
and
ret
stos
rclb
or
sbb
subb
popf
pop
push
inc
mov
movsb
inc
inc
xchg
xor
cmpsl
popa
sbb
scas
mov
mov
pushf
cwtl
sub
mov
push
xchg
push
fldenv
aaa
mov
std
jo
sbb
rcrb
push
ja
pop
lock
cmpsb
inc
pushf
insb
cld
mov
xlat
adc
dec
sahf
jnp
fs
mov
sbb
mov
add
fcmovnu
loope
cli
je
and
push
call
test
push
xor
lcall
jmp
stc
rcrb
test
and
mov
test
add
cmpsb
je
fsub
pop
jcxz
cmc
mov
subb
inc
int3
xor
mov
lret
aam
push
or
ljmp
mov
cmpb
inc
pop
mov
add
sahf
lahf
cmp
or
sbb
sbb
aam
dec
inc
fucomip
sbb
mov
cmp
outsb
push
cwtl
xor
test
xchg
add
lcall
jmp
mov
incb
or
mov
test
mov
adc
lcall
stos
mov
inc
push
imul
pop
js
div
sub
mov
in
pusha
ss
out
sbb
mov
sbb
pop
push
pop
ljmp
push
xlat
ss
cmp
arpl
cmp
aas
mov
push
test
mov
adc
fidivs
cld
test
mov
das
aad
outsb
ficomps
fbstp
xchg
movsl
mov
push
aad
data16
xor
inc
adc
dec
xchg
dec
lcall
imul
pop
dec
int3
cld
ja
sub
lea
scas
stos
mov
pushf
xor
mov
adc
sbb
jb
push
cmp
flds
sub
pop
sub
stos
push
popf
aam
insb
jg
fdivrs
mov
loope
push
scas
out
ds
scas
mov
test
add
test
and
cld
loopne
sahf
pop
inc
push
or
push
jo
mov
aaa
pusha
mov
jg
adc
out
sub
daa
mov
dec
pop
dec
push
pop
loope
mov
aas
mov
test
movsb
mov
or
mov
in
ja
push
stc
push
dec
dec
fcomip
jnp
leave
pusha
js
mov
pop
cwtl
rclb
sbb
clc
rcrl
dec
movsl
add
jg
mov
push
mov
ljmp
xchg
and
pushf
int
outsl
iret
mov
mov
ds
ds
mov
imul
mov
and
subl
dec
sbb
and
shll
cmp
xor
stos
and
aad
shlb
repz
or
sbb
mov
xchg
loop
js
jecxz
jmp
adc
mov
les
mov
push
loop
scas
cmp
andb
pop
lods
int
clc
jp
std
lods
mov
xchg
in
test
mov
jb
js
icebp
xchg
std
adc
test
cmp
jle
jg
test
pop
sahf
fs
in
xor
test
into
stos
mov
cltd
std
testl
dec
sub
ds
inc
ljmp
xor
sti
jp
xchg
adc
dec
add
mov
mov
shrb
pop
push
xor
xor
jns
aad
fisubrl
fmuls
cmp
xchg
and
mov
jnp
daa
stc
rcl
xchg
ret
out
push
push
arpl
hlt
dec
aaa
test
jge
scas
jg
loopne
add
xchg
sub
xor
lea
enter
insl
mov
ljmp
mov
push
insl
inc
mov
scas
mov
jb
xlat
sbb
out
aam
adc
ss
pop
push
data16
xchg
mov
iret
push
pop
sub
lods
pop
cld
fcmovnbe
mov
int
jb
mov
rcr
adc
mov
jno
push
aam
stc
mov
cld
lret
adc
fisubl
pusha
lret
stos
or
repnz
clc
nop
adc
hlt
lods
add
das
jge
or
lods
pop
insb
jno
pop
arpl
add
dec
jle
sahf
cmp
imul
mov
push
int
xchg
or
aam
pusha
out
and
xchg
push
psubb
insb
lret
cld
dec
lock
lea
add
daa
into
xor
mov
inc
push
dec
mov
loopne
fs
xchg
dec
xor
mov
scas
push
outsl
sahf
clc
ret
adc
sub
daa
fs
loope
add
push
repz
inc
stos
xor
mov
ja
insl
loopne,pn
js
data16
clc
addr16
inc
lea
xlat
outsb
in
add
sub
mull
outsb
sub
scas
pushf
fiadds
jns
fsub
or
mov
data16
xor
xchg
push
mov
push
mov
fnstsw
xchg
fucomip
mov
insb
jae
out
dec
in
mov
xor
add
dec
jne
ja
push
or
jb
xchg
pop
sub
out
repz
and
call
xor
cmp
fldenv
les
mov
rcll
aad
mov
ficoms
pop
sub
dec
mov
fmulp
push
mov
movsl
mov
jb
xchg
xor
mov
pop
popf
lcall
cmpsl
je
sti
inc
cmp
mov
dec
adc
rolb
test
dec
cltd
test
pop
or
lea
inc
in
pop
xor
inc
scas
xchg
testb
pop
lea
push
data16
mov
pop
mov
jl
in
or
mov
jns
mov
mov
pop
mov
dec
ljmp
xlat
dec
movsb
les
push
dec
mov
dec
scas
test
push
xor
mov
inc
mov
shr
push
adc
push
xor
in
xlat
outsb
in
xchg
push
sub
test
outsb
in
imul
decl
adc
mov
lret
jnp
fidivl
popa
xchg
pusha
sbb
jmp
sbb
addl
inc
loope
dec
hlt
sbb
aad
or
jnp
imul
cmp
out
mov
mov
into
mov
sbb
lret
enter
lods
mov
adc
dec
jmp
jmp
mov
inc
gs
cmpsl
sbb
lcall
testl
xchg
inc
sbb
sbb
push
push
adc
enter
repnz
test
shrl
pop
add
mov
or
orl
xor
test
mov
xor
jp
jge
add
loope
movsb
mov
mov
aam
pop
cltd
sbb
add
mov
rolb
fdivl
dec
pop
add
dec
xchg
es
xor
out
cmpsl
push
xchg
pop
movb
pop
ret
jge
je
push
pop
mov
or
cmp
xlat
xchg
jae
les
int
mov
and
aam
mov
fucomp
clc
mov
mov
xor
cmp
pop
mov
sbb
idivl
mov
test
jp
sub
dec
dec
arpl
aas
adc
jl
push
int3
lcall
andb
fwait
jmp
or
pop
aam
add
outsl
cli
pop
loopne
rclb
push
rcll
and
call
jae
test
je
scas
push
mov
xor
loop
aad
jmp
xor
insb
lret
mov
adc
dec
stos
lret
lret
fmulp
mov
sbbl
sub
pop
inc
and
ljmp
jb
inc
mov
cmpsl
aas
adc
inc
popa
aas
lock
outsb
stc
sbb
mov
lahf
and
sbb
int
test
std
ret
sbb
lds
rclb
dec
dec
mov
out
cmp
xor
mov
adc
sub
fcomi
mov
jae
jno
sub
dec
pop
add
roll
pop
dec
mov
xchg
jbe
add
xor
lcall
lcall
jae
mov
outsl
mov
xor
stos
into
in
pop
ds
frstor
nop
mov
fnstenv
sub
testl
xor
sbb
inc
insl
in
aas
rcrb
push
mov
push
ret
test
ss
enter
enter
push
pop
scas
clc
in
test
and
out
mov
jmp
clc
lahf
add
mov
xchg
sub
pop
aaa
jl
add
push
sbbl
pop
mov
push
cmpsb
std
sbb
and
or
ret
xor
fidivl
mov
fcmovne
and
sub
push
push
ljmp
les
dec
dec
xchg
add
cltd
scas
xor
call
loopne
push
insl
lret
imul
mov
pop
sahf
clc
dec
sub
sbb
add
jne
mov
push
sub
sbb
push
inc
mov
repnz
push
dec
dec
and
xchg
sbb
dec
pop
add
mov
lods
cmp
xchg
in
ljmp
lds
in
mov
js
mov
mov
jbe
test
sarb
ret
icebp
pop
jmp
test
outsl
fimuls
push
sti
mov
adc
pop
mov
out
add
nop
insl
xchg
outsb
dec
out
aas
in
dec
imul
fwait
cmpsl
outsb
sbb
jg
imul
outsl
sarb
add
pop
les
mov
sar
sbb
pop
add
stos
or
adc
fisubrl
xor
mov
enter
mov
in
mov
mov
int3
xlat
outsb
sub
cltd
popa
imul
sub
inc
jmp
aad
icebp
push
sahf
push
insl
jmp
inc
push
cs
push
jo
xchg
ficomps
xor
inc
ret
sbb
orl
mov
clc
jmp
sub
mov
lea
mov
jnp
insl
or
repz
icebp
push
sarl
cwtl
or
mov
pop
push
pop
aas
jnp
cwtl
je
push
and
and
sbb
adc
add
aaa
jmp
xchg
fistl
xor
push
adc
jge
push
sub
pop
cmpsl
push
dec
rcrl
xchg
sub
adc
pop
pop
mov
scas
outsl
cmc
mov
fstps
mov
inc
ljmp
dec
pop
and
sbbb
fcompl
adc
add
cmp
cltd
rcll
mov
sahf
mov
sbb
mov
mov
mov
cmp
test
adc
jge
adc
push
cltd
pop
lods
xchg
shl
data16
lock
fld
sar
lret
cli
sbb
mov
pop
outsl
add
sahf
xor
js
nop
sub
dec
lahf
testl
ss
ja
mov
ret
push
loop
xchg
mov
cmp
dec
xlat
cmp
mov
mov
pop
sub
sub
std
and
das
sarl
sub
sub
inc
mov
test
iret
fstpl
sbb
daa
mov
sbb
loop
in
dec
arpl
inc
jo
iret
subb
push
mov
xchg
sub
add
xor
xor
inc
in
fwait
ljmp
push
mov
shlb
cld
pop
fiadds
lret
sbb
xor
fbstp
lret
arpl
cltd
mov
or
sub
xchg
repz
loopne
rcrl
and
das
sbb
mov
adc
rcll
sahf
addr16
mov
loopne
lds
xlat
imul
andl
loopne
xchg
cs
cmp
inc
pop
xor
loop
ficomps
dec
cmp
fiadds
and
aaa
push
pop
mov
and
outsb
mov
jg
jge
rorl
leave
pop
add
or
pop
cltd
popf
jb
out
mov
fnsetpm(287
pop
repz
add
call
dec
adc
ret
xchg
add
inc
fwait
les
enter
pushf
sbbb
shr
jle
push
sub
mov
pop
scas
mov
adc
fdivs
jp
js
push
into
icebp
adc
ret
xchg
das
add
in
fcomps
mov
or
mov
loopne
hlt
adc
popf
lods
cld
xchg
mov
movsb
cltd
xor
cmpsl
shrl
fcompl
ret
or
mov
push
jl
add
repnz
jo
inc
mov
add
mov
xor
shlb
inc
adc
dec
xchg
imul
movsb
pop
pop
insb
aam
ds
pop
imulb
outsl
push
inc
xor
leave
in
xor
jne
fwait
test
adc
std
jo
mov
and
into
jmp
in
pop
sub
stos
test
dec
pop
iret
dec
sub
jge
in
cmpsb
mov
mov
imulb
lds
mov
xchg
test
push
dec
adc
dec
or
mov
clc
pop
imul
mov
mov
aaa
orl
shl
movsl
or
inc
fcom
jae
push
mov
dec
fidivl
test
and
inc
fsub
add
repz
js
frstor
dec
mov
or
xor
sbb
jb
mov
mov
mov
arpl
sahf
dec
rol
out
xchg
mov
rcr
jno
inc
sub
dec
outsb
xorl
sarl
imul
out
stos
scas
cld
das
or
sti
xchg
jl
ret
sti
xor
clc
jp
dec
pop
push
popf
jnp
sbbl
cmp
sub
loope
int3
cmp
xchg
in
jno
shl
subl
es
push
cmp
jno
add
xor
sub
shrb
mov
pop
push
ret
sbbb
adc
mov
push
inc
sub
fimuls
push
jns
sbbl
fwait
mov
ret
cmp
imul
xchg
fdivrl
mov
mov
cmp
mov
sbb
mov
push
jns
insb
shld
xor
and
test
data16
ret
push
jmp
mov
jne
int
cli
jnp
pop
mov
popf
sbbl
pushf
mov
into
out
fisubs
shlb
xchg
or
sub
pop
bnd
or
mov
pusha
xchg
adc
push
push
cmp
es
cltd
sub
cmp
mov
xor
mov
cwtl
imul
in
das
out
pop
ss
pop
scas
inc
push
pop
push
int3
push
out
aad
sbb
rcr
push
pop
scas
mov
push
out
movsl
adc
mov
fnsave
jl
popa
dec
push
mov
xchg
in
bound
rcll
out
jno
or
push
adcl
insb
rcll
sarl
inc
aaa
push
out
fcoms
jecxz
stos
mov
xor
ret
pop
stc
leave
jge
xchg
loope
dec
push
mov
subl
les
sbbb
mov
mov
fsubs
aam
dec
push
mov
mov
cli
lea
inc
das
std
and
mov
inc
aad
and
daa
dec
rcr
fwait
aam
mov
push
repz
cs
lock
cmp
push
mov
andb
fbld
xchg
out
xor
xchg
test
enter
pop
mov
ret
ss
mov
pop
iret
push
mov
push
cmp
push
cwtl
gs
in
or
ljmp
cld
pop
xchg
xor
int3
cmp
iret
in
aaa
push
icebp
inc
fbstp
cltd
and
mov
ret
ds
addb
mov
loopne
ret
add
pop
pop
dec
movsb
add
in
xchg
les
mov
cltd
adc
subl
add
adc
mov
ljmp
pop
out
jnp
cli
and
jg
push
xlat
sub
pop
cwtl
pushf
or
es
jns
pop
adc
and
add
mov
popa
xor
lods
sub
mov
out
xlat
pop
or
aaa
dec
add
adc
push
mov
adc
xchg
inc
out
mov
dec
dec
mov
cs
dec
movsl
xchg
or
sbb
jl
pusha
mov
jo
adc
dec
cmp
out
in
or
leave
test
cmc
jne
adc
cmp
xor
jmp
lods
insl
cmp
cltd
xor
arpl
pop
or
loopne,pn
cmp
repz
mov
std
adc
pusha
dec
cs
popl
sub
daa
shr
pop
adc
dec
inc
in
add
insb
sub
cmp
divb
fisubrl
jbe
sbb
into
jns
ret
xor
mov
mov
push
adc
dec
dec
sub
push
cmc
ret
aam
cmc
orb
mov
movsb
pop
mov
out
adc
mov
xor
xlat
push
add
cli
loope
out
dec
and
mov
neg
out
aad
pusha
add
xchg
or
decl
sub
inc
fdiv
add
imul
ret
xchg
fidivl
xchg
fst
lods
ljmp
cmpl
out
loope
fldcw
pop
or
sub
inc
aas
mov
sub
and
pop
sub
scas
cmp
fadds
movsb
mov
int
pop
iret
fidivl
sub
xchg
or
outsb
sub
sub
pop
mov
mov
dec
sarb
jmp
pop
cmpsl
dec
sub
sub
idivl
out
popl
mov
mov
fiaddl
xor
xor
ret
xor
push
jae
arpl
sbb
call
outsl
mov
das
inc
cmp
insb
idivb
pop
pop
cmpsb
outsb
add
sub
cmc
sarl
stc
idivl
fsub
sbb
xchg
sub
pop
pop
dec
mov
mov
mov
gs
dec
outsb
xchg
lcall
jo
test
jno
in
leave
or
aas
cmp
lret
invd
outsl
mov
fdivrs
pop
sub
cli
xchg
clc
aas
negl
dec
add
sbb
ds
sub
decl
xor
adc
push
jl
add
mov
testl
fsubrs
push
mov
ret
jbe
rcl
dec
xchg
data16
mov
andl
push
ss
or
xor
clc
popa
mov
xor
fldt
jmp
xor
adcb
and
jmp
hlt
cltd
jne
lret
push
fidivl
jge
jae
fdivrp
push
xchg
sub
inc
daa
data16
pop
cld
lcall
xchg
or
adc
mov
sub
mov
jg
jge
insb
xchg
imul
dec
mov
mov
push
ret
and
pusha
mov
inc
xchg
loope
cmp
out
int
xor
push
pushf
nop
dec
mov
mov
jo
push
sub
push
cmp
pusha
cld
dec
sbb
or
mov
mov
xchg
sub
pusha
data16
ss
sbb
xchg
inc
ja
jmp
call
and
mov
pop
les
mov
pop
sbb
dec
add
xchg
fwait
xor
cli
push
add
push
mov
pop
out
scas
ret
daa
lods
in
mov
jns
aas
or
into
push
or
pop
filds
es
test
mov
stc
rorb
xchg
pop
movsl
stc
in
pop
aam
mov
jg
and
loop
enter
test
iret
dec
jb
negl
cld
insb
xor
arpl
sub
fidivrs
stos
push
scas
xchg
sbb
insl
mov
pushf
and
push
es
inc
and
jno
inc
pusha
push
xchg
cmpsb
out
stos
in
enter
jbe
lcall
orb
inc
add
or
xchg
sub
shlb
roll
leave
adc
cmpsl
fbstp
sbbl
cmpsl
cwtl
pusha
pop
add
jns
out
aas
dec
dec
push
icebp
xor
pushf
decl
inc
xlat
pop
sahf
or
cmpsb
adc
sub
inc
repz
sahf
dec
pop
dec
addr16
cltd
push
repz
jns
iret
pushf
pop
inc
pusha
sbbb
push
xor
xchg
enter
lds
dec
fidivs
jae
adc
mov
mov
insl
sbbl
insl
mov
xor
idivb
mov
dec
push
add
push
lahf
roll
or
adc
and
xor
xor
scas
sbb
arpl
fwait
inc
into
js
arpl
scas
test
call
or
jl
insl
sub
lahf
xor
pop
inc
pop
stc
mov
sarb
fistps
fnsave
or
mov
xlat
daa
ljmp
jno
xor
and
pop
mov
jmp
mov
out
cmp
inc
fsubl
das
shl
jmp
out
mulb
adc
inc
xlat
insb
das
adc
shll
and
dec
movsl
xor
dec
dec
rorl
enter
loop
stos
out
cmpsb
call
movsl
sahf
xchg
cmc
in
jbe
aam
sbb
test
or
sub
add
inc
mov
jmp
mov
ds
negl
mov
dec
inc
xlat
push
xor
mov
loopne
icebp
test
scas
xchg
fisubl
lods
push
les
stos
sahf
sub
rcl
aad
push
push
sti
push
iret
jnp
subb
mov
jns
mov
orb
pop
subb
xor
jnp
mov
push
cmp
xchg
fmulp
data16
adc
lock
lods
aaa
pop
dec
xor
jb
push
dec
mov
and
daa
pop
aaa
or
pop
mov
lods
inc
xchg
rorb
cmp
sub
sub
mov
cltd
test
into
outsl
je
mov
rcll
outsl
cltd
cmp
mov
cmp
jnp
popf
and
jnp
idivl
cmp
and
pop
adc
sub
inc
fistpll
int
mov
sbb
push
xlat
mov
jp
cwtl
sub
mov
aad
inc
push
or
xor
jmp
push
pop
stos
ds
in
sub
fstps
and
call
xor
jmp
jns
and
cmp
jnp
cmp
jecxz
sub
add
add
insb
popa
sbb
andb
mov
mov
outsb
pop
xlat
pop
arpl
push
xchg
xor
xchg
jne
out
inc
scas
inc
leave
push
fsubr
jns
inc
jo
je
andl
popa
js
push
push
imul
mov
mov
arpl
sub
cmp
lds
je
es
jmp
bnd
jle
cmpsl
fucomp
xor
push
lcall
stc
lea
xchg
loopne
movsl
cmp
add
mov
lock
popa
and
add
push
and
sbb
negb
jmp
andb
mov
out
fwait
pop
pusha
push
in
inc
mov
or
cmp
mov
add
sub
sub
ja
mov
repz
outsb
into
pusha
into
std
and
lods
inc
sarb
ret
es
push
stc
xchg
adc
aad
enter
lock
mov
sub
test
leave
add
mov
fdivrs
shlb
xchg
and
cmp
push
add
pop
adc
adc
xchg
fidivrs
int3
enter
xchg
pop
popa
int3
mov
sub
and
shrb
xor
inc
push
pop
inc
push
sub
and
adc
jle
push
imul
and
movsl
rcrl
movsl
es
aam
mov
lds
cmc
rorl
push
xchg
outsb
pop
fcompl
dec
xlat
outsl
mov
imul
dec
lods
aas
repnz
lea
aam
scas
aaa
cmp
xchg
sub
or
xchg
out
es
sarl
xchg
push
insb
add
jecxz
dec
or
mov
mov
push
and
call
repnz
sub
adc
loopne
mov
cmp
arpl
mov
out
insb
xor
xchg
lahf
cmpsb
xchg
movsl
xchg
insl
cltd
xor
out
xchg
cmc
popa
lcall
cmp
mov
push
mov
adc
das
sub
ss
mov
inc
arpl
adcb
pop
in
add
jmp
jb
popa
shrb
xchg
xlat
cmp
insl
pop
ljmp
add
imul
xor
loopne
out
lds
or
aaa
iret
mov
or
add
sahf
mov
bound
js
sbb
lea
add
mov
decb
out
aad
and
shll
shll
jle
sahf
mov
adc
and
dec
add
pop
insl
mov
fdivl
and
mul
inc
mov
cwtl
ss
fwait
sub
sbb
mov
ret
seta
es
dec
cltd
push
inc
popa
push
jge
cmp
sub
sbb
mov
dec
pop
inc
cmc
xchg
notb
cmc
dec
int
mov
leave
pop
xor
scas
inc
add
jno
jnp
mov
dec
dec
sub
imul
push
jmp
or
pop
lret
imull
sub
mov
inc
testl
ja
fstps
test
mov
xchg
add
nop
xchg
ja
mov
cmc
and
jo
cmp
ja
mov
push
pop
aaa
stos
test
jmp
int3
xchg
fxch
test
cmp
jae
dec
in
movsb
mov
daa
or
cltd
and
ds
aas
andl
lods
mov
sbb
mov
and
and
xchg
push
aas
jg
mov
adc
in
inc
fmuls
dec
loope
mov
movsl
lds
rorl
mov
adc
rcll
addl
adc
pop
lea
hlt
mov
jb
mov
jl
movsl
pop
dec
mov
int
sub
mov
loope
mov
sbb
sbb
mov
nop
pop
cmc
sarb
ljmp
scas
xchg
push
pushf
jle
sbb
dec
pop
push
dec
je
xchg
cwtl
xchg
pop
mov
xchg
pop
cmc
les
jnp
bnd
adc
jo
jno
les
lret
jns
add
dec
test
pop
jmp
aaa
inc
xchg
scas
inc
mov
push
push
and
jb
jp
and
adc
push
lret
faddl
testb
das
into
lock
repz
or
sahf
js
pushf
push
in
pushf
push
jns
jne
pusha
and
ror
cld
push
jne
push
inc
xlat
outsb
cmp
outsl
sbbb
push
ror
xchg
add
clc
fidivrs
cmp
or
scas
jo
sbb
inc
xlat
and
and
mov
push
adc
and
stos
in
xor
mov
or
in
or
dec
fs
das
mov
xor
lock
xor
and
jecxz
mov
cltd
jae,pt
repnz
daa
ret
sbb
scas
xor
jne
add
jmp
sub
jb
sub
sbb
pushf
cmc
mov
lea
mov
shl
ret
or
mov
push
fimuls
shr
adcb
rcl
je
ret
jle
comiss
lods
sbb
adc
mov
xor
xchg
push
call
adc
or
add
sbb
sub
das
add
stos
mov
pop
addb
sbb
scas
jns
and
clc
aas
adc
icebp
mov
cmpsb
in
sub
in
pop
inc
adc
inc
movsb
dec
pusha
xor
push
adc
mov
xchg
push
xchg
pusha
cmp
push
mov
jnp
push
out
pop
cwtl
out
mov
push
in
lods
jmp
and
jmp
jg
pop
xor
add
aas
sti
fdiv
adc
cmp
add
rolb
adc
mov
mov
stos
mov
imul
scas
ret
ficomps
push
jmp
popa
add
lea
xchg
rcll
jo
add
out
out
mov
push
lods
jmp
fsubr
mov
aad
jb
xor
rcl
es
rcll
repnz
daa
push
test
pop
sub
js
dec
jle
insb
cmp
sub
iret
xor
xor
test
jp
cli
ret
mov
xor
and
cs
cmp
imul
in
arpl
inc
stos
data16
xchg
or
mov
or
cmp
push
jbe
mov
call
cwtl
mov
inc
dec
cltd
das
rol
xlat
push
lds
mov
and
inc
shll
in
xchg
mov
mov
ds
pop
mov
cwtl
repnz
xchg
xor
rorb
dec
adc
enter
inc
inc
mov
jmp
fldl2e
and
mov
sbb
lods
data16
adc
push
mulb
inc
insb
fwait
mov
ffreep
cld
lods
int3
sub
xor
cmp
and
daa
popf
jp
int
addb
and
push
jbe
fs
mov
aaa
pop
dec
cmp
xchg
mov
sti
sub
xor
adc
stos
cmp
add
fscale
int3
pop
mov
mov
add
pop
cmp
in
mov
inc
pop
jbe
ljmp
cld
mov
cwtl
xor
daa
pop
sub
pop
jg
aaa
cltd
jle
stc
adc
outsb
mov
ret
je
out
inc
adc
ds
pop
cmc
sub
daa
aas
and
jl
mov
popf
das
into
sbb
sbb
leave
pop
loope
or
jnp
mov
mov
adc
jl
push
mov
push
out
test
out
push
lret
xor
fwait
mov
xor
inc
test
cmpl
lods
fidivs
fidivrs
fsubrl
ja
hlt
in
add
xlat
add
xchg
cld
aad
out
incl
add
mov
and
xor
xor
movsb
add
mov
sti
call
mov
adc
or
mov
test
jg
mov
dec
inc
pop
dec
cli
ds
jne
xchg
mov
sarb
inc
loopne
pop
mov
mov
in
sbbb
outsl
lods
pusha
mov
xor
push
out
xor
nop
ja
les
cmc
mov
test
cmp
cmp
push
imul
ret
mov
imul
imul
mov
mov
stos
cmp
mov
les
cmp
fcmovbe
out
mov
scas
xlat
inc
scas
icebp
aas
jnp
pop
mov
mov
sbb
mov
add
mov
or
aaa
push
fwait
xchg
outsl
lods
aaa
jge
cwtl
cmp
sbb
imul
mov
out
shrb
xor
jmp
test
jge
add
das
ds
push
hlt
mov
cmpl
xlat
out
mov
lret
mov
mov
int
sbb
loope
ficompl
lds
mov
faddl
mov
rolb
dec
add
into
mov
xchg
in
outsb
add
jecxz
cmp
xor
dec
push
cmp
test
clc
pop
mov
sub
stc
fnstcw
dec
or
scas
mov
test
push
rorb
out
dec
jns
into
and
jno
or
repz
inc
sahf
adc
xchg
dec
loop
data16
ds
push
adc
data16
mov
or
mov
push
pusha
sqrtps
repz
mov
aaa
inc
repz
push
popf
sbb
mov
subb
cmpsl
cmp
push
repnz
dec
dec
aaa
pop
imul
mov
movsb
xchg
or
push
xchg
loope
push
lds
popa
fdivrs
mull
adc
fists
inc
mov
add
push
imul
jmp
addr16
push
pusha
leave
fldenv
xor
add
rorl
test
inc
cld
fldcw
dec
push
pop
and
out
cmp
add
fisttpll
loopne
loopne
repnz
hlt
xchg
cmpsl
in
int
xchg
or
add
cmp
aas
in
sub
mov
adc
xchg
fadd
jnp
ds
dec
lods
and
lea
push
push
add
dec
or
aad
mov
jo
rcrl
dec
cld
jns
or
push
mov
test
leave
pop
fs
and
push
sti
imul
or
pop
xchg
aam
insb
imul
insl
push
add
cltd
xorb
sub
dec
or
or
out
clc
es
std
jo
cmp
cmc
sub
fistps
mov
mov
push
pop
or
and
icebp
pop
push
push
mov
aam
pop
ret
ret
push
xchg
outsb
mov
sti
jae
scas
mov
out
mov
out
push
hlt
arpl
in
clc
adc
and
or
scas
xchg
jns
icebp
adc
jecxz
outsb
in
into
enter
aam
addr16
jmp
loope
je
fldl
push
cld
aas
xchg
inc
lods
xchg
add
je
test
outsl
xchg
sub
dec
pushf
inc
sbb
insl
pop
push
cmp
inc
inc
cmpsb
movsl
sbb
xor
pop
push
stos
es
repnz
std
fucomip
rcr
std
dec
pop
sbb
movsl
lds
mov
mov
push
fucomp
xor
push
jno
cmp
push
sahf
jp
cmp
ss
mov
int3
or
adc
mov
fistl
adc
mov
pushf
sub
imul
cs
fisubs
fs
fistl
movsl
adc
mov
in
pusha
fcompl
and
xlat
and
out
sbb
lea
xchg
les
fsubl
es
lods
xchg
add
les
popa
ds
or
and
mov
test
xchg
imulb
repnz
ret
mov
pop
mov
test
decl
mov
mov
test
pop
mov
mov
fcompl
and
xchg
dec
shlb
add
in
stos
inc
pop
ret
adc
xor
pushf
in
jg
push
lea
lock
fwait
xor
mov
jbe
add
sbbl
aas
gs
addr16
cmpsl
and
popf
inc
xor
adc
cmp
and
dec
cltd
dec
mov
cmc
loope
xchg
xlat
lahf
push
jmp
mov
sbb
cmp
or
lds
jns
dec
sarb
push
ja
lret
cmpsb
xchg
jge
in
shrb
mov
nop
in
mov
or
mov
outsb
mov
sbb
push
adc
inc
pop
imul
pop
dec
inc
mov
fnsave
adc
lcall
and
loop
mov
movsl
lret
and
in
sub
inc
pop
adc
enter
push
mov
mov
aad
enter
and
push
sub
lock
fwait
pushf
mov
sbb
cld
cs
sarl
xchg
push
rorb
cmpb
cmpsb
out
mov
xor
leave
loopne
inc
lret
mov
movsl
push
out
ljmp
int
dec
mov
int
jge
fwait
mov
pop
in
xor
xor
lds
std
jg
jb
dec
js
stos
mov
mov
sahf
cmpb
pop
xchg
mov
int
jp
ret
adc
xchg
jns
push
lods
jb
mov
push
std
mov
in
test
movsl
mov
gs
stos
cmp
test
mov
test
popf
pop
insb
jecxz
arpl
jmp
ret
cmp
adc
mov
fsubr
sbb
sub
xlat
add
push
test
jnp
xor
fcomps
or
nop
gs
or
fidivrl
cs
rcll
out
out
jmp
pop
psubd
es
test
scas
and
inc
sub
push
add
js
ljmp
add
cmp
mov
int
jne
mov
cmp
pop
int
les
ljmp
push
stc
push
mov
insl
push
dec
push
jo
cwtl
mov
mov
mov
cmpb
push
jno
gs
ret
mov
mov
test
adc
and
imul
and
in
aas
popa
lret
push
mov
andl
push
xchg
bound
dec
nop
mov
fucom
test
sub
fsubr
hlt
fiaddl
imul
mov
pop
faddl
pushf
dec
lahf
xchg
scas
and
scas
mov
js
scas
cld
jo
or
stos
pop
fucomp
arpl
fs
cmc
rorl
adc
add
scas
repz
dec
or
sub
aad
xorl
mov
inc
lods
mov
push
xor
adc
pop
movq
test
push
pop
sbb
sub
sbb
and
ret
mov
add
mov
inc
in
or
sbb
xchg
cmpb
repz
rcl
sti
rclb
negb
dec
add
xchg
stos
repz
in
sbb
jle
push
sbb
jnp
test
and
xchg
bound
imulb
fcoms
adc
pop
sti
xlat
mov
icebp
and
stos
loopne
pop
xchg
or
cmp
fbstp
jb
popa
fnstsw
mov
pop
cmpxchg
cmpsl
add
add
aad
xor
mov
push
in
mov
add
mov
insb
cmp
mov
pop
mov
popa
loope
sbb
loopne
imul
jmp
fsub
mov
jae
push
repnz
jle
mov
xor
lcall
pop
sub
sub
sub
add
or
stc
inc
dec
cmc
lea
mul
cmp
scas
mov
ret
cmp
sub
loope
jmp
in
clc
ficoms
cltd
cmp
add
bound
mov
adc
cltd
popa
setp
pop
push
xchg
pop
adc
add
jns
mov
lcall
fimuls
jns
int3
mov
xchg
xor
test
push
fnstcw
xchg
pop
test
cmp
test
push
adcb
call
push
add
pop
out
jmp
push
lods
test
movsl
in
stos
mov
jecxz
mov
std
cmpsl
hlt
dec
mov
aam
sti
leave
adc
push
mov
ret
ret
sbb
test
in
sub
sub
mov
and
sub
stos
push
mov
aaa
xchg
int
ja
aam
cltd
nop
add
out
sar
add
icebp
enter
xchg
enter
xchg
movsl
jl
fnstenv
fimull
pop
sub
mov
dec
add
pop
and
sbb
mov
lods
dec
add
pop
data16
dec
xchg
pop
and
lahf
jne
dec
xor
jb
mov
mov
ret
js
je
push
cmp
cmp
stos
daa
cmp
loope
bound
add
fiaddl
cli
xchg
add
or
xlat
std
pop
aad
sub
cmpsl
lret
repz
pop
rol
clc
push
push
push
stos
jno
inc
stc
je
adcb
add
sub
mov
sar
rolb
sbb
popa
lcall
lret
loopne
adc
or
test
mov
lahf
add
mov
ss
je
jge
mov
or
jge
ret
sub
insb
cmp
std
jns
cltd
imul
int3
mov
sbb
jno
hlt
pop
sub
lods
shll
xlat
or
pop
lahf
mov
fwait
jb
mov
cmpb
inc
out
xchg
imul
aam
mov
xor
push
pop
test
ljmp
je
loop
aaa
xchg
pop
xor
popf
cwtl
cmp
add
sbb
cld
subl
mov
sarb
jae
in
icebp
movsl
sbb
call
daa
push
insb
and
cmp
cmp
out
mov
mov
pop
sbb
xor
imul
jae
test
mov
add
mov
inc
imul
gs
sub
sub
xchg
fsubrl
xchg
imul
insl
xlat
xchg
push
sbb
mov
aad
imul
repnz
into
inc
in
xor
add
pop
adc
mov
movsb
out
adc
aam
jg
roll
fbld
pop
bound
pop
sbb
add
jg
je
inc
dec
shlb
lods
dec
rcrb
xor
fisubs
dec
test
push
inc
cmp
mov
mov
addb
cmp
xchg
lods
sbb
inc
fstl
imulb
test
add
mov
repnz
inc
cmp
fcomps
test
or
mov
sahf
es
rorl
ds
and
or
pusha
dec
movsb
add
mov
aas
push
je
ljmp
jns
mov
push
int
inc
push
out
popa
in
add
jp
inc
nop
pop
loope
lea
imul
xlat
outsb
popf
mov
js
cli
sbb
pavgb
int
pop
insb
in
das
jmp
adcb
sub
inc
mov
lds
inc
stos
ljmp
icebp
dec
and
cmc
imul
xor
ret
pop
dec
insl
xor
cltd
cmpsb
daa
into
mov
lahf
xor
aam
mov
inc
mov
lahf
cmp
mov
mov
jmp
outsb
jl
lock
cmpsl
add
inc
pop
adc
sub
mov
push
ret
xor
xchg
push
mov
add
and
gs
cmc
push
fs
pop
inc
cmp
cltd
fwait
in
rcll
push
mov
inc
out
fstps
out
test
add
push
mov
data16
jl
jne
mov
xor
shll
jb
push
pop
mov
cmp
mov
adc
xchg
test
xchg
push
jge
stos
out
jge
rol
fbld
fdivl
xor
jmp
jecxz
lea
in
or
push
mov
push
lahf
and
or
imul
sub
imul
outsl
mov
inc
cmp
mov
xchg
pop
sahf
loope
push
test
repnz
mov
sbb
jb
mov
and
jge
cmp
loope
jo
fldenv
stos
xchg
and
cmp
xchg
stc
dec
iret
inc
jg
jge
adc
add
jnp
jno
jno
ds
mov
in
sarb
push
mov
push
dec
gs
addr16
push
in
pop
inc
sbbl
dec
or
out
sbb
jbe
addb
mov
pop
inc
lcall
inc
clc
jl
xor
dec
test
mov
or
mov
movsb
inc
arpl
xlat
data16
sti
xchg
dec
leave
pushf
gs
nop
out
cmp
push
cmp
in
pop
push
pop
mov
lods
cmp
das
mov
xchg
int
inc
repz
jp
pop
cmpb
sbb
dec
push
mov
mov
cmovs
dec
movsl
sub
mov
mov
mov
shl
lea
mov
inc
xchg
dec
cwtl
sti
ret
xchg
push
xor
xchg
or
dec
arpl
fwait
xor
inc
cmpsb
cmp
pop
dec
les
cli
lock
mov
mov
clc
adc
add
or
push
shll
or
in
cmpsb
sub
es
inc
jo
outsl
jle
orb
scas
mov
pop
out
dec
and
or
outsl
push
or
xor
js
adc
push
sahf
sbb
adc
lock
mov
xlat
mov
or
xchg
fsts
lds
mov
mov
jge
mov
jge
jmp
mov
das
addr16
mov
pop
mov
pushf
pushl
push
imul
fistps
int
hlt
in
enter
and
sbb
lcall
push
sub
push
jo
ret
push
aas
xchg
outsl
pop
aad
jecxz
or
pop
in
jp
adc
add
cmp
test
cmp
in
lcall
testb
xchg
shrl
cmp
jns
sbb
add
mov
jecxz
mov
mov
ret
pop
inc
popa
xor
mov
hlt
mov
sbb
xor
push
data16
js
je
lock
xchg
pop
bound
mov
inc
popa
mov
lret
aaa
int
push
cmp
push
pop
inc
fistl
shll
rcll
add
mov
xchg
sbb
and
cmp
cmp
xor
fwait
push
mov
or
dec
movsb
les
xchg
lcall
fiaddl
clc
das
int3
movsl
xchg
lds
fimull
and
add
aad
cmp
lods
mov
cltd
sti
push
mov
in
sahf
sahf
mov
pusha
mov
mov
inc
mov
mov
adc
orb
pusha
repnz
test
shlb
stos
incl
jae
fsubrl
rcl
xchg
jmp
jno
xor
stc
xchg
pushf
aaa
call
dec
inc
sbb
add
sub
scas
popf
sub
testb
and
adc
fidivs
dec
call
lods
and
add
jle
out
mov
sub
push
mov
mov
push
jo
and
pop
cmc
or
daa
xchg
test
psrad
lahf
test
in
dec
ret
pop
clc
cmpl
das
mov
dec
sbb
pop
xor
sub
test
cmc
mov
testl
mov
dec
fnstsw
das
out
in
rol
mov
push
aas
rclb
add
sbb
adc
fs
push
insb
gs
mov
shl
jge
cmp
dec
sahf
fs
push
fcoms
mov
dec
mov
cmpsl
ret
push
lods
dec
idivl
pushf
jnp
fsts
mov
or
movsl
and
rcr
jl
add
sbbb
and
pop
xor
cmp
lods
pop
fcomps
repnz
test
or
jno
or
out
mov
data16
cmp
fistpll
push
test
mov
cmpsl
sbb
xor
xchg
cltd
cmp
js
andb
dec
jge
ss
jcxz
xor
mov
test
insl
not
mov
mov
subl
cli
lret
mov
push
pop
stc
sub
adc
pop
fcomip
sbb
loopne
aaa
mov
imul
xchg
mov
mov
jl
dec
movsl
stos
fs
lcall
pusha
aam
dec
mov
popf
sbb
ds
dec
push
cmp
jmp
fcomi
push
stos
jg
fdivl
adc
lods
inc
test
dec
or
jg
add
sbb
or
gs
daa
pushf
adc
adc
insl
xchg
dec
mov
out
push
int3
nop
adc
xchg
push
push
insl
test
push
scas
adc
xor
outsb
adc
xchg
jnp
shlb
mov
cmp
loope
xorb
dec
mov
and
or
popa
or
mov
or
fs
cmp
ficomps
movsl
pop
jecxz
adc
mov
pop
out
shrl
fmuls
into
mov
adc
or
or
xlat
xor
pop
mov
loope
push
mov
loopne
repz
insb
ja
sti
test
add
gs
pop
xchg
mov
adc
adc
pop
pop
sbb
frstor
adc
dec
loopne
jo
popf
insl
mov
mov
push
ror
shl
push
lods
pusha
mov
shl
pop
rorl
sbb
xor
pop
ret
or
repnz
xchg
mov
ja
inc
add
pop
cs
pop
xchg
out
loop
jmp
mov
ja
xor
dec
fstpt
or
mov
ja
popa
mov
pop
push
sub
xchg
sahf
shrb
ret
mov
loope
sub
std
fwait
or
inc
ficoms
aam
loopne
xchg
dec
gs
mov
imul
negl
in
sti
push
js
xlat
inc
lret
inc
int3
cltd
mov
mov
scas
inc
inc
jnp
cmp
rep
aas
ret
xchg
pop
jne
mov
out
mov
and
mov
xchg
mov
jbe
imul
in
int3
sbb
imul
stos
in
inc
sub
inc
and
xchg
aaa
cmp
sahf
jno
inc
and
or
sub
or
popf
and
pop
int3
push
and
fsubrl
push
inc
jmp
addl
dec
data16
ljmp
std
cmp
jmp
xchg
or
mov
notb
or
xor
cmp
xor
loope
out
mov
or
inc
out
adc
shll
sti
push
xchg
sub
push
iret
mov
jecxz
sub
into
in
and
out
stos
cmp
jnp
mov
mov
in
into
xchg
sub
cmpsb
pushf
jg
cmp
dec
xlat
pop
mov
cmpsb
test
push
mov
push
imul
xchg
mov
and
mov
xor
sub
cmpsl
cmp
push
cmp
mov
pop
loop
neg
mov
mov
push
lock
inc
pop
lock
test
imul
pop
bound
fstp
mov
adc
mov
mov
imul
fisttpl
mov
loope
popa
in
xchg
nop
imul
push
stos
mov
inc
lds
cltd
push
fisubrs
int
ljmp
movsl
lods
lods
js
shrb
mov
ds
rolb
and
pop
mov
data16
sbb
mov
fidivrl
jmp
pop
lods
mov
sbb
std
cs
js
pop
or
sub
movsl
fwait
pop
test
mov
sub
sbb
mov
fdivs
inc
xor
cmpsl
and
sub
xchg
or
movsl
dec
je
sub
push
fs
push
aas
mov
mov
inc
pop
adc
aam
test
pop
mov
pop
xchg
aaa
mov
adc
jns
xchg
sub
in
insl
pop
mov
jae
mov
mov
inc
cmp
scas
addr16
lds
add
add
loopne
xor
and
movb
ljmp
stos
xchg
cmp
popl
xchg
sub
xchg
aas
sti
cmpsl
dec
mov
ficoml
addr16
scas
xchg
fcoms
je
dec
fsub
ret
test
jne
push
mov
fstps
test
sti
pop
jmp
pop
outsl
inc
idivl
inc
nop
mov
cmpsb
fsubrs
pop
xchg
int
popa
js
pop
mov
inc
dec
cmp
xchg
mov
pop
mov
or
stos
inc
add
jle
lods
cwtl
fimuls
stos
stos
mov
mov
xchg
rorl
loope
cs
push
push
push
popf
aas
jns
int
xchg
popf
sbb
shlb
jecxz
pop
out
sbb
adc
lds
into
dec
stos
cltd
scas
xchg
pop
ljmp
push
addr16
and
push
nop
mov
mov
mov
xlat
cmp
lea
push
negl
push
xor
movsl
or
repnz
pop
jns
test
mov
lahf
add
sbb
es
fldcw
adc
push
jae
mov
imul
xchg
push
leave
push
ds
in
sub
lea
insb
incl
lock
shrl
xchg
call
mov
inc
sbb
cwtl
lock
jo
jg
int3
mov
jmp
shlb
dec
pusha
pop
adc
leave
fldenv
fucomi
xlat
addr16
push
dec
lods
std
inc
cmp
mov
sub
and
and
js
xor
orb
outsl
jns
sbb
sbb
jbe
push
insl
js
lahf
movsl
jge
mov
out
xor
aad
js
pop
addr16
fs
add
mov
mov
imul
insb
int3
xor
jge
dec
mov
jbe
lods
aam
data16
cmp
mov
movsb
movsl
dec
push
imul
or
js
push
mov
pop
inc
xchg
push
dec
jp
hlt
add
push
out
push
dec
bt
int3
xor
sub
jle
mov
add
loope
into
in
rcl
cmp
xchg
loop
jb
xchg
xchg
iret
xor
in
pusha
pop
iret
and
xchg
jmp
pop
mov
pop
mov
mov
out
imul
dec
sub
lea
fiadds
gs
xchg
mov
lret
xorb
cmp
movl
cld
xchg
mov
dec
out
orl
push
gs
ds
ret
or
add
scas
xor
lods
dec
out
inc
inc
fnstsw
daa
mov
inc
jbe
jle
sub
inc
push
adc
fldenv
pop
xor
xchg
in
add
ss
dec
push
fdivrp
popf
push
sub
jmp
call
ja
outsl
push
jmp
in
iret
pop
les
mov
xchg
ret
mov
cmpsl
fsubrs
jae
push
scas
and
push
shl
gs
fwait
pusha
lahf
rclb
lret
jl
push
fwait
arpl
insb
xchg
cld
lret
aam
cmp
int3
cmc
loopne
sbb
push
dec
dec
dec
fldt
fiadds
mov
iret
loope
lods
dec
sarb
push
je
mov
dec
adcb
addl
daa
inc
lock
in
scas
ds
inc
cmp
std
outsl
xchg
fmulp
repnz
loopne
out
dec
enter
pop
movsl
inc
inc
movsb
div
mov
mov
dec
add
push
or
aas
ss
mov
aaa
mov
addr16
mov
icebp
xchg
and
mov
dec
jae
push
push
scas
cmp
test
cmp
fdiv
adc
mov
popa
roll
xor
ja
pop
mov
lea
iret
imul
inc
pop
outsl
jp
xor
adc
and
not
jle
cmc
shr
inc
out
cmp
stc
js
sub
mov
mov
mov
into
loope
xlat
xor
mulb
loopne
clc
inc
xor
enter
inc
fwait
add
jecxz
pusha
cmp
stos
cmp
out
mov
pop
nop
in
pushf
adc
cmp
insb
mov
push
mov
out
inc
dec
lret
arpl
cld
je
ret
sub
lds
outsb
add
jg
sbb
ss
out
adc
dec
jp
in
pushf
cmp
cmc
mov
xchg
lods
adcb
push
mov
mov
push
test
inc
imul
std
stc
lret
or
fs
push
outsb
dec
scas
pop
data16
popa
adc
mov
pop
fcoms
std
lret
sub
inc
dec
mov
leave
sbb
mov
mov
add
sbbb
faddp
pop
iret
ffree
daa
mov
in
lods
stc
mov
sbb
mov
aad
movsl
pop
mov
rorl
popl
push
mov
mov
enter
iret
and
ret
clc
imul
call
mov
push
sbb
or
movsb
cmp
ds
inc
loope
into
and
and
xlat
mov
jecxz
js
callw
sbb
sub
jbe
stos
mov
push
icebp
fxch
mov
cmpsl
push
push
out
mov
push
mov
mov
and
test
rcll
jne
stc
lahf
xor
sbb
pop
into
jae
test
cld
sub
jecxz
les
das
stos
repnz
enter
mov
insb
clc
lahf
xor
add
xlat
cli
or
in
jmp
pop
out
push
sub
shrb
inc
in
ret
addr16
je
push
lods
scas
popf
loope
out
mov
pop
loopne
mov
testl
mov
loope
xor
mov
sbb
add
pop
fmull
mov
mov
sti
shl
or
popf
ljmp
out
mov
adc
fbstp
lret
popa
loop
mov
adcb
cmp
sub
aam
pop
push
test
jne
push
push
iret
out
test
jnp
add
mov
adc
mov
or
psubw
adc
inc
leave
xor
add
psllw
mov
mov
fcomip
xchg
cmpsb
xor
mov
fdivs
or
adc
lahf
mov
pop
push
lods
pop
xlat
jb
cwtl
arpl
lea
rcll
test
lret
add
insb
lret
inc
rcll
enter
lea
mov
fcomps
jl
push
cmpsl
js
hlt
xchg
movsb
movsl
in
shrb
addr16
dec
data16
mov
fldt
sub
xor
mov
rorl
in
fcoms
mov
xor
mov
mov
xor
cmpsb
mov
fnstsw
fbld
test
loopne
adc
jo
mov
stos
jmp
out
pop
je
mov
xor
test
or
enter
movsb
and
sbb
xlat
mov
in
pop
sbb
cli
sbb
and
add
adc
or
aam
es
jmp
into
add
push
mov
pushf
cmp
inc
pop
jecxz
jo
mov
popa
push
mov
mov
cmpb
repz
jl
insl
cmpsb
dec
sbb
sbb
mov
sbbl
iret
bound
out
jae
push
fs
push
mov
fisttpll
nop
jecxz
int3
pop
xchg
mov
loope
lock
out
cmp
int3
packsswb
sub
shl
jl
inc
fstpl
pop
cmpsl
xchg
fs
cmp
adc
movsb
mov
sub
inc
sti
mov
inc
test
push
cmpsb
out
jle
cwtl
movsb
cmp
mov
in
push
adc
ret
outsl
xorb
and
cmp
mov
xchg
sub
mov
ljmp
fwait
or
lcall
arpl
jbe
add
ds
pop
ds
xor
das
sub
push
or
cltd
and
rcll
jno
aas
push
cmp
push
mov
cmp
mov
outsb
jg
ss
jno
xchg
xor
jb
mov
and
cld
adc
movsb
mov
outsb
pop
rclb
cmc
cwtl
push
mov
fstl
inc
xchg
fmuls
dec
and
push
push
test
push
call
subl
outsl
mov
mov
lret
jecxz
mov
fsubs
adc
xchg
cmp
into
fnstenv
in
jae
fidivrs
adc
mov
inc
jns
rcrl
xor
mov
adc
sub
fstl
imul
mov
je
inc
lret
ret
adc
or
cmp
lret
stc
leave
jns
bound
mov
popa
repz
roll
pop
ss
inc
fs
inc
sarb
movsl
pop
loope
popa
xchg
ficomps
mov
scas
scas
es
xor
lock
add
xor
inc
jmp
movsl
push
repz
cmp
inc
out
push
in
adc
fidivs
fsubr
es
rcl
mov
iret
sbb
idivl
jge
aam
sti
jbe
jp
sbb
jmp
js
in
mov
inc
outsb
xchg
sub
inc
iret
cmp
arpl
out
inc
addl
mov
pop
mov
pop
jg
sub
addl
aas
das
inc
stc
xchg
hlt
pop
scas
inc
cwtl
and
pop
movsl
pop
lea
aaa
cmp
xor
fsts
aas
pusha
ss
xor
ja
cmp
test
dec
loopne
lds
mov
out
dec
cs
imul
xchg
mov
pop
sbb
fmuls
sbb
lods
fwait
push
inc
icebp
cli
nop
push
fdivp
mov
add
roll
sbb
mov
sub
je
dec
mov
cmc
dec
adc
and
out
mov
jecxz
lock
jbe
adc
cmp
mov
data16
subb
mov
stc
test
cmp
xchg
push
in
int
test
shr
fwait
push
negl
shll
mov
in
test
lret
je
dec
push
push
dec
adc
sub
sub
addr16
xorl
in
xor
cld
lods
push
push
lods
test
jbe
pusha
jg
mov
decl
mov
pop
inc
push
push
mov
out
pop
lcall
xor
outsb
push
addr16
lcall
popf
test
inc
movsb
sti
popf
das
arpl
jge
std
loope
das
and
xchg
idivb
icebp
jnp
or
jge
jmp
pop
dec
adc
mov
dec
sub
add
scas
ret
mov
mov
mov
sub
sbb
sbb
call
mov
jmp
sbb
mov
push
mov
sahf
jmp
cmp
or
cmc
or
mov
jl
mov
mov
test
lahf
jmp
mov
cmovge
test
or
xchg
sub
cltd
push
les
push
iret
fwait
push
jne
lock
inc
lret
test
mov
mov
dec
stos
orl
aaa
adc
shll
jnp
pop
jle
lret
scas
sub
mov
data16
dec
scas
and
sub
sbbl
adc
add
pop
pop
mov
mov
inc
movsb
fldenv
test
scas
rcl
mov
arpl
mov
inc
push
adc
and
pop
xor
xlat
jo
cmpsl
clc
mov
sub
xchg
xchg
jmp
movsb
stc
in
test
fcmovu
fldl
lret
mov
push
gs
clc
sub
adc
push
stos
inc
pop
pushl
or
sbb
cmc
xlat
xlat
pop
mov
das
mov
dec
dec
add
clc
add
scas
xor
sub
fsubl
dec
sub
outsl
pop
inc
bound
mov
dec
push
pop
jle
pop
das
mov
sarb
mov
or
inc
test
sti
fwait
rclb
scas
inc
jo
mov
sbb
inc
mov
mov
jg
push
xor
cmc
aaa
push
mov
adc
ficoms
ja
sub
or
push
pop
mov
je
sarl
iret
add
xlat
icebp
movsb
mov
jbe
add
add
popa
xor
addr16
mov
push
fs
cs
fnsave
repz
add
popa
jno
sbb
or
mov
lret
paddusw
les
sbb
cld
cmp
mull
mov
sub
and
adc
out
dec
ss
mov
hlt
loope
cmp
pop
ja
inc
inc
jns
dec
loop
mov
mov
imulb
cmp
rclb
xchg
push
lods
arpl
sti
mov
dec
shlb
out
jmp
and
mov
push
jb
sub
push
bnd
xchg
popa
pop
mov
xor
insl
jg
aaa
inc
push
cli
sub
push
outsb
mov
loope
mov
xchg
push
mov
jmp
mov
ljmp
cwtl
scas
xchg
pop
xchg
enterw
call
imulb
insl
shl
sbb
adc
jp
or
cmp
cmpsb
in
lret
add
jns
mov
dec
push
cmp
xor
cwtl
pop
dec
sarl
jle
pop
scas
outsl
mov
mov
sub
daa
cmp
std
nop
adc
sub
mov
inc
stos
mov
cmpsb
daa
adc
dec
dec
cld
jb
gs
and
rcr
push
popf
ret
pop
xchg
shlb
push
pusha
test
adcl
test
adc
cmpsb
aad
cwtl
fs
or
sub
lret
or
loop
or
xlat
fnstsw
loopne
int3
mov
inc
mov
mov
ja
mov
inc
movsl
sub
ret
stc
stos
lds
cmp
jp
pop
mov
fwait
or
push
sbb
lods
movsl
push
push
sbb
add
leave
ret
ds
inc
push
push
stos
cmp
arpl
dec
in
xchg
seto
pop
xor
jge
inc
xchg
stos
jle
out
jns
xor
fidivrl
insb
mov
mull
and
inc
mov
cmp
aas
mov
dec
or
jno
movsb
rcrb
push
les
das
add
mov
jmp
int3
sti
jmp
jmp
imul
aas
add
or
dec
push
icebp
fidivl
movsl
pop
cltd
pusha
jne
sti
inc
mov
push
cltd
std
insl
cmp
mov
dec
adc
out
or
mov
dec
bound
push
enter
and
inc
push
cltd
ljmp
push
loope
daa
sahf
movsl
fs
pushf
inc
add
dec
pop
xchg
shrl
add
jle
pop
test
sarb
int3
ret
jp
lock
scas
pop
pop
jle
out
jle
sub
sbb
push
mov
loope
aaa
cltd
pop
sti
test
in
xor
mov
dec
adc
hlt
mov
icebp
outsl
mov
test
gs
sbbb
mov
ffreep
or
adc
mov
shlb
es
pop
jnp
clc
nop
push
mov
mov
sbb
aad
fisttps
xchg
pusha
jmp
inc
jmp
dec
inc
inc
mov
and
stos
dec
sbb
pop
sub
cmpsb
lret
push
loope
jp
ja
outsb
dec
pop
mov
and
nop
jno
pop
pop
out
xchg
adc
insl
daa
mov
push
pop
leave
mov
rcll
mov
movsb
pop
mov
cmp
xorb
shll
pushf
mov
xor
scas
sbb
sbb
and
push
enter
js
add
xor
insb
enter
dec
mov
fcoml
cmp
loopne
jecxz
mov
fdiv
scas
out
sbb
clc
out
sub
in
mov
fidivrs
scas
cld
mov
push
push
push
iret
and
xor
xchg
inc
test
cmp
cmp
jecxz
popl
imul
cmc
or
aam
xchg
push
insl
mov
xor
inc
clc
lcall
push
add
xor
insl
nop
or
imul
dec
stos
fxam
pop
xlat
inc
iret
stos
xchg
pop
jnp
aas
loop
pop
ja
or
pushf
fs
pop
loopne
scas
dec
mov
imul
testb
mov
jne
cmp
pop
or
jo
jbe
sub
rclb
fidivrs
rclb
jecxz
sub
pop
sbb
push
inc
adc
mov
imul
pop
movsl
scas
orb
rorb
jns
jp
mov
mov
jle
xchg
add
lock
pop
out
and
or
or
push
sti
mov
and
and
or
push
pop
pop
aaa
push
dec
sbbb
pop
in
dec
out
push
les
ret
pushf
xor
aad
idivb
pop
mov
pop
adc
xor
adc
pushf
xor
bnd
loope
vzeroall
ljmp
sbb
mov
aam
dec
pop
lock
pop
pop
insl
jne
nop
jo
into
cmp
xchg
outsb
lds
jmp
xchg
pushf
jo
xchg
jecxz
pop
aad
ja
add
or
and
mov
ja
inc
fxch
adc
imull
push
push
lds
dec
cmp
push
leave
int
in
mov
jo
mov
loope
stc
and
xchg
iret
call
add
ficoml
ds
ds
sub
push
mov
jb
fsts
cmp
data16
push
leave
and
sub
push
add
in
xchg
fisubs
jb
mov
pop
call
in
mov
ret
loopne
rcll
aam
mov
mov
and
cmp
outsb
mov
xchg
scas
xchg
out
repnz
mov
ret
cmp
shl
or
fs
je
jp
xchg
adc
adc
cmp
push
mov
insl
sub
cwtl
popa
fcompl
mov
inc
mov
and
pop
lods
cmpsb
js
in
and
xor
jb
push
sub
sbbl
push
adc
popa
jg
jbe
push
aaa
mov
addr16
rcrl
fistpll
push
inc
xor
mov
mov
lcall
jg
mov
inc
pop
jno
push
xchg
sub
testb
sbb
dec
loope
cmp
jns
mov
testl
testl
and
jmp
shl
out
mov
mov
movsb
sarb
outsl
in
sub
mov
and
nop
lods
sahf
aas
sahf
sbb
fwait
mov
unpcklps
adc
mov
in
push
push
mov
lods
sub
aas
or
lods
pop
pushf
lea
sbb
scas
pop
sti
jnp
xchg
daa
int
ret
into
cmpl
call
xchg
or
add
add
push
ret
push
and
push
icebp
punpckhbw
ljmp
mov
popf
push
mov
test
inc
adc
cmpsb
cmc
push
repz
sbb
jl
and
cli
pop
ja
add
inc
lods
jmp
jae
repz
scas
push
and
gs
mov
dec
out
xchg
rolb
mov
in
dec
in
fadds
icebp
and
cmpsl
xchg
insb
fisttpll
fnstcw
jbe
dec
sub
mov
jbe
jp
pop
xor
lahf
push
or
shll
shl
pop
and
add
fld
movl
popa
scas
sbb
mov
mov
hlt
xchg
push
add
aas
addr16
or
sahf
in
xchg
dec
cli
sti
pop
out
insl
lcall
mov
bound
fcmovne
fidivrs
mov
adc
mov
xchg
push
pop
adc
rorb
push
inc
clc
mov
inc
gs
subl
pop
xorb
insl
rol
test
inc
icebp
inc
push
fsubs
dec
cmpsb
mov
sbb
inc
dec
stc
cmp
pop
dec
pop
push
mov
push
xor
mov
pushf
out
xor
cs
shlb
push
imull
inc
sbb
inc
add
sbb
test
shl
mov
sbb
je
movsl
or
or
sub
popf
xchg
sub
dec
and
jle
imul
mov
fs
adc
sbb
cmpb
gs
shl
mov
mov
int
out
outsb
in
test
imul
rcrl
or
cmpl
cmp
lret
data16
test
adc
and
loop
sub
ljmp
inc
or
xchg
push
mov
jl
sbb
xchg
push
mov
jecxz
push
lods
pop
jl
data16
push
out
jl
and
or
lcall
mov
scas
insb
mov
adc
in
xor
mov
cmp
mov
cmp
mov
mov
shr
jne
jbe
mov
pop
clc
aaa
insl
or
sarb
xor
mov
xchg
push
pushf
push
fstp
sbb
cmp
or
dec
mov
jge
adc
and
pop
das
mov
fwait
in
clc
shll
icebp
insb
test
inc
stos
es
pop
mov
add
faddp
pop
setae
push
daa
xor
pop
xlat
lret
loope
std
clc
pop
sbb
pop
stc
add
jae
movsb
xchg
xchg
cs
flds
adc
jmp
pop
sub
sub
or
inc
cmp
mov
ljmp
jp
sbb
stos
dec
into
sbb
jbe
sub
mov
push
in
fldt
fwait
pop
jmp
xchg
andl
dec
loope
cltd
add
pop
jecxz
aad
dec
pop
jae
gs
js
push
push
add
mov
dec
out
test
adc
shll
std
push
out
adc
sbb
dec
mov
jb
fwait
push
lods
sbb
push
add
test
and
cmpl
sbb
negl
and
je
rorl
cmpsb
loope
shl
int3
out
movsl
cmp
out
pop
sub
dec
fisubrs
int3
test
fs
out
setns
push
repz
dec
and
add
in
cmp
rcrb
push
popf
or
sub
cmpl
cmp
sub
sbb
xor
push
insl
fs
dec
addr16
sbb
enter
loop
pop
test
mov
rcl
cmp
clc
decb
stos
or
mov
sub
mov
add
ljmp
push
mov
gs
lahf
cmp
cmp
addr16
jecxz
add
mov
mov
mov
pop
adc
push
fsubl
shll
ret
into
incb
xchg
jns
jecxz
inc
lods
mov
fnstcw
jno
ds
scas
outsb
dec
orb
aas
push
sbb
or
inc
xor
jne
fucomp
jno
icebp
int3
pop
scas
aaa
adc
into
jl
or
test
inc
mov
pop
out
xor
fbstp
adc
insl
mov
out
push
ficoml
push
daa
rclb
and
jecxz
or
insl
dec
add
push
push
fstps
sub
add
inc
lock
mov
xchg
add
test
test
push
popf
icebp
jmp
push
insl
bound
xor
ret
loopne
push
sub
sbb
push
aas
inc
inc
enter
ret
push
cmp
inc
enter
js
lret
mov
fadd
mov
xchg
inc
mov
cli
movl
mov
int
cmpsb
mov
fs
pop
jp
sub
pop
notb
cmpsl
cmp
jno
scas
stos
stos
cmp
push
jbe
mov
mov
ret
sub
adc
imul
cmp
cld
cmpsl
leave
inc
or
sbb
loope
mov
mov
add
fisubs
popf
xchg
mov
negb
sbbl
mov
aaa
mov
push
out
mov
adc
xchg
sub
adc
in
divl
xchg
add
jmp
orl
lret
adc
shl
and
sub
bound
push
adc
sub
dec
cmp
sbb
sbb
lcall
dec
call
in
xchg
sub
lret
mov
cmpsb
inc
mov
pop
sahf
aad
cmpsl
cmc
push
add
hlt
xchg
cmp
cmpb
stc
push
cmp
scas
or
xorl
xchg
loope
mov
mov
rcrb
add
push
ret
lcall
jne
and
add
ret
xchg
fnstsw
call
inc
popa
stos
pop
imul
xor
std
fwait
xchg
and
sub
inc
cmp
cmp
mov
push
int3
xor
inc
movhlps
shrb
int3
or
arpl
sbb
clc
mov
movsb
mov
add
aaa
cmpsl
or
ds
push
jno
inc
sti
add
mov
hlt
cltd
in
test
je
mov
xor
fidivrs
cs
inc
sub
fdivl
add
std
and
movsl
test
pop
scas
push
xorl
int
enter
sub
jecxz
or
rcl
orl
or
mov
mov
or
popf
and
cmpsb
adc
dec
push
jl
and
mov
push
jbe
lods
fstpt
stos
lret
and
or
xchg
aam
dec
sbb
push
mov
daa
mov
fbstp
xchg
sub
test
imul
gs
mov
fcmovnbe
aaa
stos
outsb
add
sbb
test
add
not
mov
push
inc
dec
jns
aas
fnstenv
fcoms
dec
fstps
adcb
repz
fdivl
mov
std
popl
mov
sub
pop
jbe
add
jmp
je
sbb
in
je
push
add
imul
push
leave
jp
and
xor
xlat
mov
pop
cmp
testl
xchg
push
test
add
fnstsw
das
dec
decb
lods
bound
xchg
into
mov
push
rolb
out
icebp
mov
pop
or
cmpsb
cmp
pop
das
fdivrl
fisubrl
xchg
mov
dec
pop
pop
aad
jg
rcrl
jo
lods
pop
sahf
pop
and
test
mov
cmp
push
mov
call
sub
icebp
repnz
out
pop
or
ja
cmp
data16
out
out
stc
nop
out
orb
and
call
pop
ds
add
mov
mov
xor
push
jmp
int3
pop
lock
ja
add
loop
into
lahf
fdivs
or
pop
cmp
or
out
and
jne
and
push
mov
push
or
add
cmp
add
push
adc
mov
pushf
arpl
xor
push
mov
repnz
rcrl
stos
les
mov
mov
fidivs
adc
scas
fiaddl
pop
xlat
cmc
xchg
call
jle
pop
scas
cmpb
jg
pop
lea
sub
sub
incb
mov
cltd
push
test
dec
test
in
xchg
scas
outsb
aad
mov
out
int3
mov
lahf
mulb
stc
nop
dec
mov
popa
repnz
mov
add
aam
ja
rorb
xor
dec
shrb
call
scas
cmp
imul
xchg
or
lahf
ss
mov
jp
cltd
cmpl
mov
xor
imul
xlat
dec
mov
jns
sbb
scas
inc
dec
imul
ret
push
call
dec
flds
ljmp
xchg
xchg
divb
adc
mov
ret
aas
dec
fdivl
popa
add
pop
imul
insb
sbbl
test
inc
lods
sub
or
ja
push
fbstp
xor
mov
stc
inc
aas
enter
shl
mov
movb
inc
pop
push
mov
and
movsl
or
out
movsl
std
jo
xchg
outsb
add
xor
je
xor
loope
dec
sub
inc
test
data16
adcl
in
jecxz
adc
and
sti
outsl
inc
outsb
cmpsl
insl
rolb
fwait
cld
mov
dec
adc
push
stos
icebp
and
jne
xor
jb
enter
lea
stos
cld
xchg
jle
js
pop
fdivp
mov
push
and
lea
sbb
aam
mov
push
push
loope
mov
xchg
fdivrl
cmp
xor
mov
leave
xor
rorb
jmp
jb
and
cmp
data16
lods
ds
pop
das
pushf
sub
cld
movsb
sti
test
les
xchg
cmp
pop
test
mov
test
lret
mov
mov
xchg
fnstsw
xor
jns
add
pop
bound
push
data16
pop
movsl
int3
adcl
push
xchg
shl
sub
aam
mov
mov
push
and
pop
pop
sbb
pop
inc
xchg
adc
sub
xchg
daa
data16
fidivrl
dec
cli
movsb
jge
mov
or
adc
test
cmpsb
imul
into
rcl
push
les
mov
pop
add
fbstp
mov
cmp
cli
push
in
fcoms
cmp
inc
sbb
dec
fdivrs
adc
inc
dec
out
sub
xchg
movsl
cmp
iret
add
fsubs
mov
pop
ret
ljmp
andb
clc
cmp
add
ds
sub
loop
mov
outsb
sub
test
and
dec
cmpsb
addl
lds
inc
loop
hlt
jp
int
sbb
stos
adc
jmp
lea
dec
jo
cmp
imul
aam
lea
out
sbb
jge
mov
sub
je
jle
hlt
popf
dec
lahf
cs
imul
andb
imul
sub
movsl
inc
aas
fldenv
jecxz
push
mov
dec
cmpsb
jne
mov
fadds
inc
inc
mov
pop
int
mov
repnz
arpl
shlb
mov
ror
arpl
push
insb
roll
mov
cmp
imul
pop
mov
pop
loope,pt
jl
xchg
mov
pop
test
outsl
testl
fistpl
cmpsb
cmp
jne
test
dec
pop
add
inc
icebp
orl
xlat
mov
cmp
popa
sbb
push
mov
xor
pop
adc
cli
xchg
scas
mov
pop
in
cmpsb
jge
lret
fsubl
and
pop
cmp
jns
je
cmp
mov
dec
jnp
jns
in
sub
cs
inc
mov
pop
push
insl
cmp
mov
or
xor
addr16
cmpsl
or
lret
mov
fidivs
add
iret
test
or
mov
or
inc
loope
adc
xchg
inc
lret
ljmp
aam
adc
push
leave
fldenv
dec
sahf
ss
jmp
mov
pop
mov
lret
ss
cwtl
mov
dec
jo
jge
addr16
pop
adc
out
inc
xchg
fnsave
lret
jg
cli
xchg
rcrl
enter
sbb
push
xor
xor
rclb
xor
out
shll
mov
and
enter
push
or
push
cmpsb
and
faddl
jne
xchg
sub
loopne
jns
arpl
outsb
cltd
fistpll
push
and
sbb
jo
mov
inc
xchg
pop
xor
inc
mov
outsb
jmp
test
dec
sbb
arpl
in
or
xchg
orb
movsl
sub
aad
cmc
outsl
sbb
lahf
pop
mov
ja
ljmp
divb
ret
add
lahf
and
test
push
pop
js
insl
xchg
rcrb
les
push
sub
sbbl
cmp
xchg
dec
insl
loopne
aas
jge
lods
fmuls
into
dec
dec
add
push
mov
sbb
mov
ret
jnp
mov
filds
jge
push
cmp
xchg
xor
push
push
inc
lret
sbb
jmp
fiadds
xchg
mov
rorl
or
das
pop
je
mov
push
test
sbb
jl
inc
mov
sub
jg
repz
and
add
into
and
gs
xor
push
dec
sti
lock
insw
or
push
movsl
icebp
imul
cli
push
add
aaa
push
rcr
xor
cld
mov
or
inc
dec
loopne
mov
shlb
cmp
lahf
xchg
cld
nop
loopne
in
adc
mov
fistl
pusha
int
mov
into
fdivl
push
or
pop
mov
jns
outsb
test
jg
and
les
xor
movsb
ss
push
in
out
test
push
fdivl
adc
lcall
sbb
cli
xchg
lret
adc
in
sbb
in
das
pop
outsl
testl
xor
mov
xlat
fcomps
test
and
jae
imul
movsb
mov
cmp
add
dec
movsl
and
iret
insl
jne
sbb
jge
adc
adc
cmp
in
insl
or
mov
fwait
and
addr16
fmul
int
cwtl
ja
fsubrp
add
inc
pusha
xchg
lods
mov
pop
cmpsb
mov
adc
inc
adc
sti
dec
loope
sahf
or
push
lods
sub
add
cli
popf
imul
icebp
mov
pushf
iret
push
or
inc
fistl
xor
push
rolb
push
pop
adc
cld
jns
enter
test
jo
repnz
push
pop
sub
jl
orb
mov
cmp
xchg
in
add
sarb
mov
adc
sbb
in
xchg
pusha
push
fsubs
jge
jb
cmp
stc
adc
pop
jae
push
pop
fwait
cmp
mov
scas
inc
sbb
mov
push
lods
push
fisttps
fcmove
and
icebp
nop
pop
jmp
xchg
mov
add
and
lods
mov
daa
jmp
push
fisubrl
test
loop
ds
jl
pusha
sbb
add
adc
mov
ret
dec
add
add
and
arpl
stos
insb
rcrl
mov
nop
push
sbb
test
adc
jns
adc
and
std
and
leave
pusha
das
fiadds
jb
repnz
add
nop
push
mov
dec
inc
cmp
dec
jne
dec
arpl
into
pop
or
jmp
mov
cmp
and
mov
pop
pop
xchg
ss
push
mov
jbe
ficomps
jns
aas
cmp
sub
ja
cmpsb
cmp
xor
dec
shrb
cmp
cwtl
imul
mov
int3
mov
std
add
fdivr
lahf
or
repz
pop
push
sub
mov
pop
xchg
fidivrs
xor
pop
sbb
fcmovnbe
jno
pop
repnz
mov
pop
insb
sahf
adc
mov
loop
daa
mov
xor
into
rol
cs
pop
cmpsb
bound
out
xor
xor
lahf
adc
cmp
jmp
push
mov
jo
lods
in
sbb
cmp
xchg
jg
cmpsl
out
push
mov
test
outsb
and
imul
jo
mov
or
adc
lock
sub
push
in
mov
dec
xor
out
inc
jl
sti
push
sahf
fimuls
mov
daa
unpcklps
sbb
mov
sbb
into
pop
aad
mov
pop
out
mov
out
lds
leave
mov
sbb
pop
cmp
addr16
mov
add
xchg
filds
add
inc
mov
sbb
gs
jnp
lcall
notl
mov
mov
sbb
push
lds
lea
nop
pop
scas
stc
or
cli
scas
sub
hlt
jae
adc
and
arpl
fidivl
das
hlt
mov
push
icebp
push
push
lods
mov
cmpsb
enter
pop
lds
push
xchg
ficompl
ret
xchg
es
xchg
adc
rorl
ljmp
ret
push
inc
outsl
test
rorb
cmpsb
movsl
fidivrs
repz
mov
out
dec
pushf
xchg
mov
jp
adc
and
push
inc
xchg
or
stc
xor
push
push
popf
sahf
lock
adc
push
bound
pop
int
sbb
sbb
sub
pushf
rcrl
int
push
mov
sbb
xchg
mov
push
jns
movsl
pushf
dec
fisubrs
test
sbbb
inc
enter
jbe
mov
xlat
mov
js
andl
lea
add
dec
ss
hlt
andl
sub
push
call
sbb
cmp
test
imul
dec
cmpsl
es
xorl
sbb
sub
mov
fcomps
push
fstps
pop
xchg
inc
sub
jo
fs
xchg
mov
mull
subl
lds
adc
mov
adc
int3
sbb
in
loopne
xchg
aas
inc
fwait
loope
adc
fdivrl
fwait
push
lods
js
popf
es
cli
inc
jg
inc
scas
mov
and
xor
inc
repz
addl
into
and
pop
xchg
add
imul
cltd
std
push
aam
mov
pop
stc
rorb
aaa
xor
insb
in
jmp
or
lods
pop
pusha
js
nop
out
test
mov
or
fsubl
addb
int3
test
mov
add
rcr
imul
and
lcall
xor
sahf
cmp
mov
outsl
pop
mulb
mov
int3
fdiv
cs
sbb
mov
arpl
jl
aam
push
cld
sub
sbbl
xchg
ljmp
jp
sbb
imul
lea
movsb
jno
lea
xor
cmpl
jns
jl
out
in
cmpsb
lock
dec
dec
sub
or
imul
jb
xlat
int3
outsl
and
cld
imul
mov
pop
mov
in
cmpsb
push
in
enter
add
sub
push
jg
nop
addr16
mov
enter
adcl
bound
inc
inc
push
fwait
int
xchg
enter
stc
leave
int
roll
sahf
lret
xlat
sbb
adc
adc
ljmp
xchg
cmp
icebp
mov
mov
adcb
pop
cmc
push
fwait
pop
repz
mov
cmp
mov
push
inc
push
movsl
xor
push
mov
outsb
pop
sub
aaa
jge
ja
jle
pop
das
in
cmpsb
rorb
push
dec
cmp
pop
cmpsb
in
into
rol
popa
jno
addr16
aam
xchg
popa
hlt
adc
call
mov
repnz
in
and
scas
lret
push
test
int3
inc
pop
jl
or
mov
push
stos
xlat
cmp
sbb
pushf
inc
jns
je
insb
sahf
mov
cmpsl
out
inc
jmp
xchg
xor
mov
inc
lahf
sub
pusha
stc
jno
cmp
mov
push
mov
inc
testl
adc
js
mov
mov
or
inc
mov
addb
pop
int
outsb
loopne
push
xchg
daa
lcall
or
mov
mov
cmc
sbb
sub
aaa
into
dec
rcll
cmc
sbb
add
push
scas
lahf
test
lret
jbe
mov
dec
add
imul
lds
pop
divb
mov
cli
in
gs
xchg
mov
aaa
xor
call
pop
int
test
mov
fwait
pop
lret
movsb
dec
jnp
or
in
cmc
pop
test
push
sub
sub
js
xor
mov
or
cli
jno
jle
sbb
mov
outsb
cmp
adc
mov
mov
or
sbb
dec
inc
push
leave
pop
ljmp
outsb
xor
hlt
sbb
dec
sti
jbe
ficoms
inc
xchg
add
out
xchg
aas
jl
fwait
in
inc
mul
subl
mov
push
aas
cmpsb
inc
cmp
lods
adc
imul
ljmp
xchg
ljmp
stos
push
scas
mov
sub
sub
mov
jl
push
mov
pop
xchg
jle
pushf
or
in
cmp
mov
mov
xchg
mov
pushf
xchg
lods
addps
rolb
mov
in
shl
xor
xor
dec
jg
push
orl
jnp
subl
loope
hlt
xchg
mov
in
fdivs
ss
inc
pop
jg
pop
lret
js
out
test
je
into
xor
push
movsb
loop
jno
out
jmp
push
push
and
jns
mov
test
lahf
loope
and
xor
mov
scas
negb
push
aad
imul
adc
add
mov
jnp
call
pop
sub
movsl
add
pop
and
movsb
mov
cmp
scas
cltd
addr16
out
add
aam
inc
and
mov
hlt
int3
inc
push
inc
jp
je
push
add
push
pop
lret
ljmp
jo
mov
mov
add
dec
test
push
xchg
dec
xchg
iret
outsb
call
sub
and
inc
cmp
xchg
lods
ljmp
call
fidivrs
jnp
adc
aad
test
xchg
dec
lret
orl
dec
mov
cmp
jo
dec
out
mov
nop
rcr
jbe
stc
or
xchg
js
aad
add
sbb
pop
jmp
mov
mov
mov
stc
aas
ficoml
test
pop
out
fs
push
pop
lret
xchg
inc
inc
into
aas
test
outsb
jmp
mov
les
inc
pop
mov
int3
fmuls
jb
inc
mov
and
adc
aas
pop
clc
in
jo
xchg
and
mov
or
cmp
jne
sub
pop
mov
lds
mov
les
idivl
in
and
inc
mov
dec
fmuls
mov
das
sbb
mov
xchg
dec
mov
fsts
cltd
jo
hlt
mov
mov
add
fbld
nop
out
ret
jb
xbegin
jne
inc
xchg
test
mov
xor
repz
sub
popa
stos
sub
je
adc
test
xor
push
mov
inc
mov
mov
dec
lods
xchg
mov
rcll
mov
js
xchg
sbb
daa
in
adc
sbb
add
fwait
add
xor
xchg
dec
push
fwait
popf
popa
mov
mov
push
mov
std
insl
jmp
pushf
scas
inc
xor
mov
popa
cmp
cltd
push
push
daa
addb
jb
icebp
mov
sbb
mov
fistpl
mov
xchg
mov
out
sbb
jecxz
sub
leave
pop
pop
jle
mov
dec
pusha
jl
xor
cmp
sbb
and
push
jb
or
add
fmulp
xchg
adc
lock
into
cwtl
loope
out
mov
sbb
pop
pop
shlb
cld
push
in
test
sbb
jae
adc
push
shrl
jno
arpl
stc
fiadds
pop
idivb
mov
inc
push
or
adc
cmp
jl
dec
lcall
and
and
mov
sbb
mov
das
test
mov
xor
inc
in
mov
mov
and
xorb
pop
insl
mov
test
sbb
cmp
mov
fisubl
pushw
sbb
pop
adc
mov
aad
aam
pop
and
in
add
inc
into
xor
hlt
cmc
aas
push
fadd
jp
mov
stos
fiaddl
pop
jne
xlat
and
lahf
jge
call
or
add
jl
xchg
xor
sbb
or
sbb
icebp
xor
xor
mov
xchg
mov
iret
nop
push
std
mov
dec
jg
sbb
push
push
aad
das
sub
incb
repnz
sbb
out
mov
das
fldcw
outsl
sub
jecxz
mov
cmc
mov
cmp
aaa
cmpsb
xchg
shrb
mov
push
aas
incb
es
or
daa
mov
inc
lret
adc
sbb
jbe
cmp
fadd
inc
notb
cmp
mov
add
push
jae
pop
or
pop
rcl
cmp
push
lods
cmp
adc
pop
and
je
xchg
aam
xchg
mov
push
lahf
jecxz
push
sarb
scas
and
inc
xor
mov
test
jmp
mov
data16
sbb
mov
lock
insb
sub
jb
adc
pop
cmp
fisttps
cmp
cmpsb
cmpl
imul
lods
sbb
xor
jae
sbb
pop
fildll
fwait
movsb
insl
cli
add
clc
or
inc
mov
jno
lret
dec
fs
or
pop
leave
sbb
mov
pop
dec
fisttps
mov
ret
mov
ret
jg
adc
pop
mov
rolb
cmp
xlat
sbb
aad
rclb
iret
lds
loop
jnp
push
mov
inc
hlt
mov
xor
or
imul
je
cmp
sbbb
in
cmpsl
cli
xchg
xlat
pop
out
adc
sbb
loop
cs
add
pop
sbbl
mov
inc
mov
pop
hlt
fadds
sub
cmpsl
ror
fildl
out
sbb
ljmp
xchg
repnz
jns
adc
ds
rcrl
add
cwtl
sbb
lock
mov
and
pusha
imul
or
push
out
ret
rcrl
jo
cmp
dec
mov
dec
call
out
sub
pop
adc
add
pop
xor
inc
push
jmp
cmp
xacquire
scas
push
jmp
sbb
mov
pop
test
sbb
les
sbb
xchg
jo
loop
sarb
sti
es
mov
ret
xor
cmp
inc
or
fistps
push
xor
mov
lret
dec
jb
das
lds
sbb
xor
repnz
cltd
xchg
aam
push
push
dec
push
sbb
sub
inc
dec
cltd
outsb
add
shrl
mov
cmpl
fisubrl
insl
or
push
or
cmp
in
insl
add
loop
lret
mov
scas
or
pop
push
inc
repnz
lcall
add
icebp
movsl
icebp
and
cmpl
rclb
cld
dec
push
add
sbb
pop
loopne
sub
jp
add
std
nop
gs
shll
jnp
aas
aad
dec
dec
aam
js
push
outsl
pop
xor
fwait
cwtl
hlt
clc
movsb
adc
data16
rorl
jmp
xchg
insb
jbe
inc
gs
mov
sub
mov
ret
js
hlt
test
dec
jnp
inc
pusha
imul
in
xlat
aas
dec
pop
xor
pop
loop
push
fwait
incl
in
pop
fcompl
sub
stos
repz
imul
jl
or
lods
xchg
scas
shll
xor
roll
ja
and
and
dec
cmpsb
or
mov
mov
shrl
rorl
cli
mov
xor
aaa
into
pop
sub
jge
lds
div
je
mov
inc
lret
rolb
inc
test
ja
sarl
mov
sbb
cltd
or
xchg
add
xor
orl
push
insl
jmp
xlat
xchg
mov
mov
sbb
imul
xor
mov
iret
push
fidivs
arpl
data16
push
stc
push
stos
push
test
shrb
pop
or
mov
jle
imul
cwtl
aas
pop
cmp
fwait
leave
outsl
and
aad
jbe
jle
or
lret
stos
aam
cmc
test
lods
les
scas
sub
dec
popa
adc
ss
fiadds
dec
pop
lds
cmp
mov
sbb
insl
jg
insl
sub
pop
adc
int
in
sbb
imul
jo
mov
int
frstor
cld
xor
fdivrl
jo
pop
in
int3
rcll
cld
or
xchg
xor
sbbb
pop
mov
cmp
into
fisubs
fidivl
or
movsl
lahf
xchg
mov
pusha
pop
cs
cmpsl
ret
cmp
mov
movsb
hlt
xor
push
and
loope
push
out
dec
enter
jle
cmc
dec
shrl
cli
adc
and
xchg
adc
xchg
sub
push
cltd
sub
movsl
mov
ljmp
adc
into
ficompl
icebp
dec
js
xlat
mov
lret
aas
in
cmpps
pop
mov
andb
xor
xor
inc
test
xor
adc
pusha
sti
mov
pop
fnsave
iret
mov
and
pop
and
fidivrl
fs
test
in
push
xor
jmp
popf
inc
xor
movsl
movsb
and
adc
jg
sub
inc
adc
in
xchg
push
jno
insb
pop
sub
rorb
push
insl
push
popf
mov
mov
popf
adc
xor
out
cmpsl
inc
cwtl
push
clc
pop
movsl
ljmp
mov
lock
sbb
push
lahf
dec
adc
jmp
imul
lea
mov
jle
push
outsl
cmp
sub
arpl
in
and
xor
aaa
lods
mov
adc
rorb
outsl
mov
pusha
jmp
mov
push
hlt
sub
and
out
cmp
jle
fwait
orl
add
and
pop
jecxz
addl
xor
inc
xor
mov
push
lea
in
jbe
sub
mov
add
add
sar
sbb
mov
outsl
push
in
xchg
es
or
sahf
adc
addr16
xchg
out
inc
adc
mov
inc
fs
cmpsl
pop
mov
ds
jnp
cmp
stc
negb
cltd
test
push
test
cmp
into
lcall
dec
push
stos
sbb
mov
inc
rcll
xorl
push
mov
xsha1
cmpsb
push
cwtl
xchg
mov
cmpsb
jp
push
lret
int
mov
inc
cld
dec
xchg
sub
popf
shrl
pusha
in
lods
xlat
mov
or
ljmp
inc
stos
jmp
and
mov
cmp
xor
mov
jle
mov
xchg
or
or
aas
orb
pop
xchg
push
addl
dec
int
jp
dec
mov
xchg
xchg
xor
jae
aas
xchg
mov
in
lods
sti
xchg
add
out
adc
mov
add
inc
inc
add
xchg
add
nop
mov
and
mov
cmp
or
jne
mov
xchg
sbb
shl
mov
ret
cltd
je
out
movsl
mov
mov
les
mov
pop
iret
lock
aam
imul
insl
hlt
aaa
pop
cmp
pushf
pop
xor
adc
dec
sub
sub
push
rcll
std
cltd
dec
sub
sbbl
xchg
and
add
fidivl
mov
outsb
ja
and
pop
pushf
mov
sub
push
dec
lock
cmp
ss
mov
pop
imul
xorb
icebp
cmpb
inc
and
cltd
pop
pop
xchg
mov
sti
inc
repnz
jb
arpl
sarl
push
imul
adc
and
add
pop
enter
inc
fbld
inc
loop
data16
xchg
dec
popl
in
cmp
aam
mov
jnp
jno
push
not
cmp
popa
and
push
xchg
push
dec
ss
push
dec
fnstenv
mov
faddl
xor
idivl
cmc
lods
inc
arpl
loop
movsl
int3
and
fsts
dec
jae
add
mov
adc
sub
test
rorl
cs
fistl
ret
cld
in
test
xor
sbb
out
out
orl
adc
mov
lret
jo
xchg
stc
aam
cmpb
mov
call
repnz
bound
jae
lahf
cmp
pushf
ljmp
inc
aaa
into
jae
sub
cwtl
aam
js
cli
pop
or
int3
push
jbe
xchg
inc
cmp
dec
inc
xlat
test
das
stos
scas
sub
inc
mov
sbb
mov
and
mov
lret
mov
jp
lock
sub
jl
jle
jno
pop
xor
orl
xchg
pop
insl
insl
leave
data16
cmp
out
loopne
xor
pop
inc
jnp
inc
loopne
adc
imull
mov
dec
jo
cmp
xor
inc
mov
adc
enter
mov
scas
push
add
lock
jns
xor
mov
dec
sub
mov
std
mov
cwtl
jns
jmp
shlb
mov
dec
ret
push
cmpl
xchg
xchg
notb
in
xchg
cltd
lret
shrb
adc
push
jmp
mull
cmp
inc
adc
push
xor
cmp
push
cs
mov
mov
into
lret
push
out
pop
movsl
push
js
mov
or
or
mov
adc
nop
sub
jmp
popf
outsl
mov
scas
sbb
xchg
or
xor
xor
jns
cmp
cmp
mov
ds
out
imul
test
fwait
mov
stc
pop
pop
addr16
fwait
out
push
aas
loope
aaa
mov
push
movsl
inc
lahf
std
cmc
roll
adc
cs
pop
inc
outsb
push
dec
xchg
subb
and
out
xchg
scas
fstpl
cmp
xchg
pop
sbb
cld
push
ss
outsb
push
xchg
dec
std
add
dec
xor
push
or
push
xchg
cli
test
jne
ds
pusha
jp
sti
cmp
sub
lahf
pop
es
addr16
lahf
mov
inc
je
push
pop
push
imul
call
out
cltd
jmp
notb
sub
xchg
stos
fcoms
push
dec
xchg
mov
shll
adc
pop
mov
mov
push
insb
sbb
mov
pusha
in
and
add
jg
hlt
mov
fadds
pop
les
or
mov
mov
shll
push
add
jno
fs
rorb
xor
mov
mov
imul
push
repz
xor
daa
test
xor
xchg
inc
pop
iret
ret
imul
out
jle
xchg
adc
mov
mov
inc
and
sbbl
mov
push
ret
add
std
xlat
sbb
arpl
jle
xchg
or
lret
mov
add
sbb
dec
mov
pop
and
leave
cmp
lea
mov
ret
xchg
cmp
add
inc
ss
jl
mov
movntps
pop
push
and
shll
pop
pop
lahf
lret
pop
enter
xor
sar
out
jo
adc
jb
xor
mov
push
push
cmp
aam
push
arpl
jb
mov
aam
ja,pt
repz
adc
push
cwtl
jp
loop
mov
lock
mov
pusha
jp
xchg
cltd
aaa
adc
xchg
cmp
les
push
imull
sbb
add
scas
sbb
xor
inc
xchg
outsl
test
test
mov
nop
or
ljmp
add
jp
cmpsl
popa
pop
cwtl
sbb
jmp
and
sahf
fxch
nop
jnp
mov
jecxz
cwtl
iret
jge
cld
jmp
fcmovu
test
gs
cmp
and
push
push
mov
inc
xor
test
sub
mov
lock
test
add
out
lods
lds
sti
test
ss
fidivrs
xor
pushf
sub
lret
pop
in
fdivr
inc
or
inc
and
inc
leave
pusha
js
stos
inc
pusha
sub
notl
fiadds
and
pop
scas
mov
fidivl
sub
sub
xor
cwtl
xchg
mov
xor
lea
fistpl
jne
add
inc
ljmp
sbb
das
inc
jno
rol
lds
cmpsb
rorl
popa
gs
fdivs
pop
divb
fbld
adcl
popa
insl
sbb
mov
out
fisubrs
push
ss
rorb
call
dec
and
das
push
popl
pop
repnz
inc
dec
pusha
icebp
jbe
sub
xor
adc
arpl
gs
xchg
into
adc
test
xor
nop
dec
jmp
cli
pop
sbb
sub
add
pushf
arpl
jmp
sbb
mov
insl
bound
pop
int
repnz
xchg
mov
andl
jp
dec
cmp
enter
mov
mov
mov
lds
les
loope
adc
push
xor
adc
dec
and
enter
lds
jecxz
cmpsb
enter
in
mov
xor
mov
xchg
cmp
rol
sbb
mov
jbe
fldenv
mov
jp
sub
dec
cmc
nop
jns
inc
aad
icebp
push
mov
and
stos
iret
daa
or
pop
xor
imul
jge
xor
cmp
inc
xchg
popa
xchg
xchg
mov
cmpsb
repz
shll
sub
and
lods
pop
xchg
xchg
sub
jle
dec
pushf
aad
push
or
popf
call
ja
stos
dec
dec
sbb
lahf
stos
insl
inc
adc
std
lcall
sbb
sbb
jae
push
insb
sbb
jae
inc
movsl
jns
cmpsb
repz
push
and
adc
loopne
enter
lahf
xor
xchg
mov
push
inc
mov
stos
push
into
emms
jle
int3
movsl
and
mov
pop
and
movsb
cmp
push
imul
mov
mov
in
test
inc
mov
mov
or
dec
gs
cmp
jle
pop
and
or
inc
push
sbb
add
mov
fidivrl
outsl
sbb
outsb
rcrb
andb
jns
mov
les
pop
jecxz
dec
adc
xchg
and
lea
jns
iret
ss
pusha
loope
adc
push
jecxz
sarb
sub
cs
pop
cmp
jle
sub
sbb
jl
lea
mov
add
testb
stos
mov
scas
add
int
loope
xchg
fwait
adc
jecxz
and
enter
inc
add
adc
and
fdivrs
cmpl
push
fdivl
pop
mov
add
mov
mov
or
cs
inc
cld
rorl
mov
std
loope
call
dec
js
lods
push
push
loopne
leave
adc
or
mov
or
cmp
mov
adc
xor
insb
cmp
xchg
and
adc
push
jecxz
push
daa
jg
fldl
dec
mov
or
scas
xchg
jbe
cltd
mov
mov
pop
movsl
rorb
xor
jl
hlt
push
xlat
outsb
xchg
push
inc
test
add
repnz
pop
jns
dec
sbbb
cmp
pop
cmp
js
sub
das
inc
ja
pop
or
pop
jb
sub
mov
mov
cwtl
out
cmp
rcrb
xchg
mov
mov
ret
pop
mov
cmp
stos
test
xchg
insb
aaa
pop
fstps
ja
jmp
mov
jg
lahf
inc
adc
adc
sbb
jbe
jl
jb
or
rcrb
xchg
lock
stos
push
or
out
dec
mov
dec
mov
insb
leave
movsb
jne
in
inc
mov
das
push
pop
fstl
into
or
jno
dec
dec
jge
cmp
add
jmp
push
inc
je
inc
pop
imul
cmp
jno
pop
movsl
or
or
or
test
hlt
pop
pop
out
mov
jbe
adcb
cmp
sahf
inc
mov
pusha
imul
jmp
xchg
jmp
jbe
gs
dec
test
aaa
popa
or
sbb
fsubr
xor
sub
xchg
outsl
iret
ss
xchg
push
adc
or
xchg
movaps
or
cli
sub
test
mov
test
sub
push
xchg
andl
and
cld
aaa
push
cs
jns
mov
add
jne
dec
loopne
xchg
outsb
adc
in
subl
push
pop
scas
xchg
mov
sbb
fldl2t
inc
cmp
sub
cli
aaa
insb
or
push
adc
lret
mov
sub
into
aas
jnp
dec
outsb
aad
pushf
mov
shlb
icebp
sti
mov
out
push
ficoml
cmpsl
std
mov
cs
jl
adcb
sahf
aam
pop
pop
mov
or
sub
jo
push
data16
sbb
sub
inc
fcoms
div
adc
xor
sarb
shr
adc
xor
int3
fildll
push
jno
sahf
xchg
xor
push
repnz
inc
jmp
jnp
std
hlt
out
cmp
imul
cmc
scas
jne
fists
jmp
mov
cmp
push
mov
enter
fldl
outsb
sub
lods
mov
dec
cmp
mov
pop
incl
outsl
dec
rolb
mov
push
xchg
dec
xor
jg
test
xor
popf
bound
and
clc
mov
sub
dec
aam
jl
mov
sahf
xchg
fucomp
pushf
andb
add
xchg
mov
je
cmp
cmp
pop
repz
test
inc
inc
mov
stc
xor
sub
daa
ret
lods
xor
push
fiadds
dec
and
adc
repz
and
inc
or
fs
jo
dec
lock
inc
sbb
push
cmc
shrb
push
sub
and
mov
int3
pusha
jmp
mov
push
inc
arpl
cs
xchg
dec
xor
mov
ret
shrb
lret
adc
xchg
sahf
sub
lea
lea
mov
or
mov
movsb
add
imul
adc
js
divl
dec
and
push
cwtl
cmc
push
mov
cmp
movsb
stos
mov
pusha
rcrb
ret
sbb
jmp
je
int3
pop
jmp
mov
add
jne
sbb
xchg
cmpsb
mov
mov
mov
dec
xor
pusha
imul
add
mov
push
mov
xchg
aas
out
std
push
loopne
aam
adc
mov
jmpw
loopne
enter
push
fisubrs
outsl
jmp
sbb
add
ret
push
xor
test
into
dec
or
imulb
inc
test
bound
mov
sbb
mov
movsb
std
mov
jmp
push
inc
cltd
call
loopne
push
lea
ret
inc
or
jnp
popa
mov
cmp
cli
rcrb
xchg
stc
fwait
sbb
pop
hlt
dec
out
test
jbe
dec
add
mov
imul
aas
push
mov
mov
es
loopne
movsb
les
out
xchg
enter
adc
sub
xor
mov
jp
pop
insl
jnp
shrb
movsl
sbb
pop
aad
pop
or
fcomi
int3
and
cld
xchg
push
jno
cmp
adc
lret
aaa
xchg
mov
inc
enter
or
shr
test
pushf
lahf
adc
xor
jb
in
or
mov
push
mov
mov
dec
ss
psubsw
lods
mov
test
ja
cmpsl
lods
arpl
mov
dec
adc
push
jne
out
cmp
sbb
aaa
outsb
pop
cli
mov
mov
sbb
mov
sub
repz
and
inc
movsb
inc
fwait
pop
add
xor
xchg
jge
fucomp
jnp
push
add
repnz
ss
add
cmpsb
inc
shll
in
das
mov
divb
dec
mov
addb
adc
xor
jmp
cmpsl
into
cmp
enter
sbbb
fs
cmp
sbbb
sbb
sbb
aam
ss
mov
mov
test
sub
incb
pop
ret
pop
shrb
mov
inc
cli
adc
mov
dec
xor
xor
push
adc
inc
int
inc
iret
movsl
cmp
xchg
das
fimull
xor
sahf
loop
fcomps
inc
mov
nop
xchg
dec
add
lea
pusha
cmp
jge
shll
int3
adc
in
cld
data16
pop
and
stc
or
js
cs
out
je
inc
inc
mov
mov
int
and
out
aaa
in
in
push
cwtl
pop
xlat
jmp
xor
sub
test
fmuls
cld
xchg
aad
scas
jge
sub
data16
adc
sbb
mov
gs
lods
jns
fldl
and
cmc
mov
mov
jno
pop
cmpsb
mov
rcl
leave
in
ljmp
adcl
les
sbb
int
sbb
out
jo
lods
dec
inc
and
andb
sbbb
ljmp
inc
push
or
notl
add
and
push
pushf
dec
std
and
repnz
mov
movsl
popa
stc
popa
xchg
movb
in
pop
repnz
dec
mov
notb
inc
seta
or
into
negl
lods
in
je
faddl
ret
jb
cmp
lods
sbb
movsl
mov
mov
or
rcr
into
aas
iret
cmpsb
push
lret
cmp
call
nop
daa
sti
dec
lret
sbb
bound
push
xor
loopne
gs
in
inc
cmc
adc
mov
mov
mov
std
xchg
jl
hlt
cmp
das
shrl
rcrb
or
jo
jbe
mov
lds
mov
pop
scas
inc
mov
popf
rclb
inc
add
push
jmp
in
pop
daa
testb
cld
xchg
int3
icebp
pop
aad
push
sbb
sub
cmp
pop
rolb
pop
cwtl
push
jo
inc
pop
dec
fcoml
mov
orb
in
push
sahf
ret
mov
mov
jmp
nop
scas
push
call
xor
mov
ret
push
out
add
xchg
ret
arpl
xchg
movsb
inc
je
sub
cmp
test
mov
aas
xchg
mov
jg
mov
clc
cmovg
dec
or
xor
movsb
cmp
ret
or
push
ja
out
pop
lcall
lds
jo
pop
out
nop
push
xchg
mov
inc
loopne
shll
fcmove
ja
aaa
sub
xchg
pop
cs
jae
dec
sub
call
fbstp
cmp
xchg
pop
lahf
pop
cmpl
lret
pop
sti
loope
mov
sarb
out
ljmp
bswap
push
push
stos
mov
cpuid
sub
sbbb
jg
cmp
int3
push
or
cs
jp
out
inc
loop
push
out
ror
fnsave
imul
or
test
pop
push
xor
or
mov
fidivrl
inc
jle
sbb
xchg
scas
xchg
and
int
cmc
dec
pop
daa
pop
sbb
scas
jecxz
sarl
jno
push
in
push
sarl
fcompl
xor
lret
dec
rorl
stos
inc
fildl
stos
cmp
je
lods
in
rcll
rol
ror
pop
sub
shll
pop
addr16
inc
pop
icebp
jbe
dec
out
xchg
add
push
ficompl
pop
js
daa
mov
inc
dec
mov
cmp
scas
ret
jp
mov
jbe
je
mov
ret
js
xor
jp
lret
xor
xchg
and
mov
pop
call
rcll
int3
cmovle
ret
push
jb
les
dec
adc
roll
icebp
in
dec
lods
jp
mov
xchg
add
inc
test
lods
jne
packsswb
cmp
or
cmp
mov
inc
shlb
or
rep
lret
jmp
ja
jp
je
mov
stos
mov
sti
xor
and
push
adc
movl
lret
mov
and
stos
jmp
inc
mov
or
popa
mov
lahf
mov
dec
or
and
and
shl
aam
xchg
pop
movsb
test
out
jecxz
jl
and
push
lods
pushf
mov
iret
pop
jl
jp
dec
pusha
push
inc
pop
shlb
movsl
sbb
fcom
cmp
pushf
jl
cmp
mov
inc
xchg
push
stc
pop
jb
leave
bound
jns
loop
and
inc
fstps
test
mov
sbb
sti
add
pop
xchg
push
stc
nop
ja
popa
ss
adc
adc
push
movsb
add
and
push
mov
mov
mov
push
in
mov
cmp
jmp
or
adc
shll
sub
icebp
es
inc
outsl
dec
repnz
addr16
sbb
xchg
mov
movsb
in
icebp
movsl
cmp
sub
mov
fisubrl
int
xchg
pop
out
out
and
outsl
or
cli
shlb
inc
adc
in
add
andl
mov
leave
mul
rcr
roll
fs
mov
das
leave
or
imul
jmp
jmp
adc
sub
mov
xchg
push
sub
in
cmp
push
mov
lock
lods
add
mov
mov
and
xchg
into
adc
es
xor
cld
rcr
ja
push
outsb
and
inc
or
adc
mov
xor
das
mov
loopne
aaa
fsubr
ficomps
ja
xlat
mov
jecxz
inc
popf
rcrl
sub
sbb
pop
cmc
and
pop
xchg
rolb
and
or
sbb
pop
mov
gs
outsl
cltd
xor
cmp
aaa
push
cmpsl
movb
dec
gs
in
movsb
cmc
leave
inc
in
je
xchg
dec
bnd
cmp
add
or
push
xor
cwtl
test
arpl
push
out
xchg
mov
je
cwtl
xchg
ffree
cmp
sub
mov
rcl
subl
jl
jbe
push
stc
nop
imull
es
es
jnp
xchg
addr16
es
test
mov
mov
sbb
inc
int3
push
add
lret
cltd
sub
mov
hlt
inc
pop
scas
adc
and
pop
pop
sub
push
test
outsb
sahf
add
std
loopne
pop
inc
ss
cltd
out
gs
mov
int3
xor
adc
jb
mov
ficomps
insl
sbb
test
lret
pushf
fmuls
mov
cmp
lcall
cwtl
stos
add
add
dec
mov
pop
dec
mov
and
mov
insl
ret
sub
pop
lret
das
or
add
clc
push
pop
loope
cmp
and
sahf
fcomps
mov
push
add
nop
cmp
dec
outsl
or
jne
js
out
pop
and
cmp
jo
lret
leave
mov
sbb
jecxz
mov
mov
pop
hlt
lock
jg
bound
not
xchg
movsb
mov
call
rcl
pop
je
push
inc
mov
cmc
jp
sub
push
xor
loope
call
xchg
leave
test
sbb
push
ret
jo
imul
sbb
and
mov
pop
in
inc
jae
out
adc
inc
cmc
insl
adc
test
xor
xor
pop
repz
pop
insb
lret
inc
ret
ja
test
int
adc
fldenv
cmpsl
aas
fisubs
dec
pusha
stc
fcomps
jecxz
push
xchg
inc
inc
int3
add
dec
movsl
jno
push
addr16
sbb
ret
jg
pop
iret
dec
jns
stc
push
sub
jb
adc
sbb
add
rcr
sbb
add
jg
cmp
push
dec
rcl
mov
es
xorb
or
mov
shrb
fidivl
icebp
mov
dec
jns
adc
test
cmp
sub
pop
subb
mov
xlat
jmp
xchg
cmp
jge
add
scas
and
jo
and
cld
xchg
xchg
fcoml
push
lods
std
test
lods
ja
repnz
xor
add
pop
mov
ret
and
pop
pop
sub
lods
icebp
notb
xlat
cmc
stc
xchg
add
or
push
sub
sti
cmp
jl
push
adc
jne
in
mov
inc
cmpsl
jno
insb
cli
mov
add
mov
jae
xor
mov
xor
out
test
jb
push
lea
cs
ficomps
pop
in
std
jecxz
out
push
lock
cmp
movsl
out
xor
mov
call
mov
addr16
dec
sahf
adc
mov
lahf
jle
inc
cmp
inc
repnz
jnp
sti
xchg
scas
sub
add
add
sub
pop
jns
in
andl
roll
jle
in
loopne
mov
repnz
rorb
vcvtdq2pd
jno
cmp
pop
xchg
mov
or
cmp
inc
fsubs
dec
ljmp
xchg
push
xor
sar
mov
dec
mov
int3
shrb
jns
inc
loop
adc
pop
xor
mov
aas
cmp
jns
push
and
fwait
xchg
pop
push
in
add
push
mov
fwait
cmp
int
and
mov
dec
push
imul
inc
sub
icebp
enter
jp
sub
pushf
test
leave
adc
cli
xchg
sub
inc
and
xor
dec
in
push
sub
aaa
lahf
mov
jle
jo
jmp
mov
inc
inc
loope
les
inc
stc
ror
stos
xor
add
lret
outsl
and
enter
int3
inc
clc
push
mov
push
inc
popf
ja
fsubs
and
cmp
repnz
push
sub
cmp
add
jbe
sarl
jl
scas
xchg
repz
lahf
and
sbb
les
add
aad
cwtl
xor
roll
loope
ljmp
cmc
aam
flds
aas
or
lds
mov
pop
fbld
mov
pop
push
jmp
mov
ret
mov
or
push
orb
inc
ret
fsubrl
push
testb
fwait
pop
sub
iret
hlt
xchg
lret
ret
sub
add
mov
int
cmp
xchg
test
push
lods
leave
stos
insb
sti
sub
dec
cli
dec
repz
sahf
lret
lcall
pop
fadds
mov
mov
sub
movsb
and
add
xchg
imul
int
test
sub
jge
or
movsb
cmp
xchg
outsb
mov
mov
sbbb
in
mov
aad
dec
in
jne
aas
cmpsl
push
jne
push
push
xor
dec
xchg
sub
fdivl
orl
mov
ja
mov
imul
push
sarl
mov
stos
andl
out
lahf
add
inc
dec
jl
jns
sub
xchg
gs
push
mov
popa
jl
xchg
cmp
out
mov
pop
cmpb
fdivl
imul
iret
pop
mov
iret
pop
sub
stos
insl
add
or
ds
dec
cmp
stos
leave
xlat
lock
rorb
dec
mov
add
cmp
mov
es
lods
sahf
ja
nop
test
push
idivl
fdivr
or
out
cmc
aas
pop
aam
shl
movsl
add
out
mov
mov
bswap
xor
pop
cwtl
cmpsl
xchg
push
mov
mov
inc
fwait
jge
push
or
decl
lret
scas
xchg
pop
adc
jae
lods
outsl
sbb
cli
xchg
pop
inc
pop
cmp
mov
jecxz
outsb
inc
lahf
pop
mov
push
or
push
xchg
xor
cmpsl
pop
xor
gs
lds
pushf
jns
xchg
fwait
add
int3
fmull
repnz
mov
mov
xor
and
pop
je
inc
das
bnd
xchg
jns
imul
or
shl
sti
fmuls
pop
daa
pop
push
jae
stc
test
mov
pop
pop
lret
push
and
inc
or
push
es
stos
out
jle
in
test
stos
jne
nop
cmpsb
xor
xlat
jmp
pop
shl
mov
movsl
pop
xor
hlt
mov
xor
or
popa
mov
dec
jecxz
lcall
and
and
cmp
xchg
in
lods
inc
jecxz
into
jae
jle
sub
mov
or
jae
cmpsl
mov
and
dec
adc
lods
and
and
pop
imul
out
idivb
fwait
cmp
pusha
xor
lcall
arpl
outsb
call
popf
mov
adc
or
pop
xchg
or
pop
jo
lods
add
xorl
ficoms
push
adc
cmc
dec
pop
sbb
lcall
pop
and
int3
call
mov
cmpsb
in
mov
and
push
inc
jno
loopne
pop
pop
repz
sub
mov
je
arpl
dec
mov
jle
add
scas
scas
cld
jg
inc
out
ja
jns
dec
pushf
test
jnp
idivb
rorb
cmp
jmp
sbb
daa
iret
aam
xlat
aaa
std
js
clc
mov
call
or
cmp
mov
in
lcall
adc
cmp
push
mov
inc
inc
gs
icebp
imul
mov
test
imul
gs
push
ficoms
jne
and
out
stc
adc
aaa
insb
push
dec
sub
test
addr16
jbe
add
in
insl
mov
mov
mov
sbb
xor
sar
cmp
pop
jecxz
mov
std
inc
mov
mov
mov
mov
inc
out
insb
xchg
jns
push
add
sub
hlt
out
testb
rcrl
orb
data16
pop
test
into
pushf
stc
nop
into
pop
sub
aam
pop
scas
mov
imul
add
pop
les
inc
dec
adc
cmp
aam
push
sarl
addr16
pusha
pop
sub
xor
dec
dec
out
pop
rol
cmp
mov
or
pop
aam
or
lahf
hlt
scas
inc
sub
outsb
clc
sbb
int
add
jmp
cli
dec
push
mov
sbb
leave
dec
dec
cmp
mov
and
mov
mov
inc
ficomps
jg
js
add
mov
jns
loope
add
sub
push
imulb
cld
jl
test
sbb
in
mov
es
mov
push
mov
jecxz
fwait
out
and
and
les
push
dec
cltd
mov
sub
or
mov
jmp
mov
jb
sbb
sub
add
mov
outsl
and
inc
testb
cli
iret
cmpsb
ljmp
mov
stos
and
test
xchg
inc
jg
idivb
sbb
dec
xchg
loopne
mov
inc
lcall
adc
arpl
clc
setle
mov
in
adc
mov
ret
mov
push
scas
xchg
sub
loop
test
enter
lret
add
xchg
lret
dec
sub
idiv
lret
pop
out
cltd
das
adc
dec
hlt
clc
push
mov
pop
ljmp
jmp
sbb
sub
cmp
imul
jl
mov
pop
pop
out
pop
fadd
popf
jg
mov
lods
jg
pop
imul
push
shrl
inc
data16
pop
outsl
ja
add
sbb
jmp
loopne
push
clc
das
push
nop
insl
les
int3
sub
mov
outsl
sbb
add
jecxz
movsb
icebp
xor
int3
sub
out
in
sub
outsb
sbb
mov
jno
pop
icebp
sbb
ss
dec
cld
push
call
xchg
inc
push
out
ja
xchg
inc
into
sub
mov
insl
shl
imul
addl
jl
push
ljmp
shll
pop
testl
mov
dec
mov
cmp
push
shlb
test
rorl
pop
xor
cmp
jbe
shll
dec
pop
andl
mov
xor
rcrb
pop
mov
loope
sbb
ds
jle
fs
lahf
mov
mov
xor
xor
push
mov
mov
lret
test
test
repz
lcall
dec
test
repnz
gs
pop
xchg
jle
movsl
xchg
and
rcll
jl
leave
lods
xor
jno
outsl
mov
adc
iret
cmp
sub
jne
loope
fisubs
cld
push
xchg
push
fidivs
mov
lods
sub
test
pop
mov
test
aam
cli
ror
fiaddl
sbb
fcmovb
dec
or
jg
mov
fidivrs
scas
xchg
scas
mov
fsubl
pop
mov
mov
in
sbb
or
repz
and
xchg
clc
adc
scas
inc
sbb
outsl
dec
dec
aad
xchg
mov
pop
loop
repz
data16
mov
mov
jnp
dec
je
std
pop
lock
xchg
out
movsb
cmp
mov
out
lret
clc
xchg
cmc
dec
sbb
mov
ds
pop
push
outsb
mov
pop
or
ljmp
outsl
dec
mov
cli
xchg
jb
cmp
int
cmp
imul
pop
decl
fucomi
xchg
cmp
call
stos
add
cmp
dec
loop,pn
ds
shrb
lds
push
movsb
xchg
jp
nop
push
test
pop
sbbl
jo
lret
mov
test
movsb
rorb
xchg
mov
jecxz
ret
cmpsb
mov
push
pop
into
sahf
icebp
adc
jecxz
xor
pop
push
jne
iret
sbb
sub
repnz
pop
jo
add
daa
scas
repnz
nop
adc
into
xchg
jbe
aam
add
sub
jg
lock
in
fildll
xlat
repz
or
int3
xchg
sub
mov
xchg
lods
xchg
mov
adc
imul
cmp
sub
jns
push
les
sub
dec
call
dec
in
ljmp
andl
pop
repnz
mov
mov
gs
das
jno
dec
mov
dec
movsl
mov
cli
andb
lds
movl
std
lods
imul
sub
jns
fdivl
push
fs
lea
add
mov
out
sub
jns
fwait
push
stos
jmp
int
jnp
mov
add
fists
jmp
inc
das
dec
pop
xor
mov
inc
push
imul
dec
cmp
stc
fsubrs
mov
rcll
inc
and
leave
pushf
repnz
cli
cli
pop
jg
mul
test
adc
or
rorb
bound
dec
cmp
jp
pop
bound
out
dec
shlb
cmc
test
fnsave
pop
jnp
test
mov
test
mov
mov
mov
sub
push
add
cmp
out
sbb
ficompl
cmpsb
cmp
loop
cmp
cmpb
jae
xor
addr16
sub
sahf
xchg
jmp
movsb
cmp
mov
iret
addl
mov
jl
xor
fisttps
pop
or
push
jecxz
test
sahf
xor
push
popa
nop
pop
push
sbb
jmp
sbbl
and
lahf
subl
enter
mov
jp
cmp
sbb
fyl2x
sbb
pusha
sub
cmp
leave
pop
lds
movsl
insb
xor
movsl
jl
mov
mov
xorl
imul
jb
pusha
sbb
js
inc
imul
jp
shrl
xlat
insb
mov
scas
les
lret
xchg
push
les
pop
out
dec
rcl
loop
mov
sbb
jae
mov
sahf
jmp
adc
add
movsl
jne
and
test
and
adc
mov
movsl
imul
jp
or
icebp
dec
cmpsb
outsl
negb
arpl
enter
cmp
push
loope
push
push
lods
lahf
push
mov
push
lcall
cmp
adc
push
pop
sub
dec
or
aam
add
test
dec
cmp
filds
inc
fidivrs
pop
arpl
mov
and
nop
pop
movsl
cmp
or
sbb
out
add
adc
sbb
cwtl
ficompl
cmp
movsb
mov
int
adc
push
sbb
test
lock
inc
mov
loop
cmpsb
mov
push
push
bound
and
or
aam
and
mov
adc
cld
jnp
mov
push
call
iret
dec
test
xlat
ljmp
push
inc
sbb
ljmp
mov
mov
mov
movsl
push
push
add
xor
mov
mov
out
pop
fidivl
in
cmpsb
je
inc
sub
xorb
ret
pop
pop
sbb
mov
add
mov
fwait
mov
push
lret
incb
adc
jecxz
aad
sub
stc
repz
inc
ds
mov
imul
repnz
rcr
sub
jae
cmp
orb
adc
push
shlb
inc
mov
cli
xchg
pop
pop
call
jb
sbb
and
cmp
vmovdqu
stc
xor
pop
notb
jbe
push
dec
aaa
jge
int
repz
add
mov
push
push
cmp
outsl
add
fdivrl
dec
pop
leave
push
out
inc
nop
cmp
les
cmc
push
push
push
pop
dec
cmp
and
jmp
jmp
out
cmp
sub
pop
enter
push
inc
add
or
xchg
xlat
outsl
ret
in
daa
aas
jb
mov
pop
sbbb
sbbl
mov
push
jmp
mov
jle
call
add
and
mov
dec
insb
sbb
pop
push
ljmp
call
sbb
add
int
out
in
pop
cmp
sub
mov
sti
adc
jle
js
mov
jbe
in
scas
cmp
sub
adc
xlat
cmp
hlt
dec
dec
push
aas
imul
pusha
mov
fcompl
inc
sbb
push
shll
dec
dec
movsb
jns
mov
sahf
iret
sbb
jae
adc
mov
inc
cld
popf
xor
imul
lods
test
mov
push
nop
repz
insl
jl
mov
out
xchg
fstpl
out
in
cmp
mov
orl
inc
hlt
push
in
push
fs
cmpsb
iret
mulb
repz
inc
movsb
sbb
xchg
fadd
mov
mov
push
mov
gs
in
mov
movsl
test
cmc
mov
out
sbb
mov
decl
test
add
add
mov
in
in
ljmp
incb
in
inc
push
les
pop
das
test
scas
push
sbb
jle
fnstsw
xchg
mov
stc
rcl
fdivs
add
out
inc
pop
notl
rcl
dec
hlt
dec
jle
mov
jle
mov
int
hlt
add
dec
pop
setbe
mov
cltd
aaa
add
cmpl
scas
adc
loope
inc
popf
lret
jbe
sbb
pop
into
mov
cmp
mov
sarb
sub
fwait
orl
scas
adc
pop
adc
add
inc
shrl
xchg
sub
and
rorb
push
popa
sbb
decb
imul
ret
sbb
push
stc
xchg
ss
dec
test
pop
add
cmpsl
pop
test
sub
cmpsl
mov
test
bndstx
pop
inc
dec
call
mov
xchg
pop
push
nop
cmp
or
fadds
pop
mov
fsubs
cmp
sbb
lcall
dec
cmp
insb
outsb
stc
lahf
dec
call
pop
repnz
sahf
incl
and
mov
mov
cmp
mov
ret
mov
sub
push
fwait
int
or
cmp
lods
cltd
adc
xor
mov
in
in
out
sti
imul
inc
pushf
sbb
and
je
cmpsl
bound
stc
out
and
inc
xor
arpl
mov
xchg
xchg
push
cmc
mov
ss
adc
insl
scas
jmp
fisttps
sub
ret
push
popa
fwait
in
pop
add
mov
daa
or
scas
fistpl
test
es
xor
addb
jb
dec
push
lcall
mov
out
popf
pop
test
aas
cmp
fbstp
lods
lahf
ret
cmp
les
or
scas
mov
mov
scas
dec
stos
or
add
dec
fisubl
adc
je
push
cmp
dec
push
add
jmp
pop
out
push
add
sbb
xor
add
sub
ret
sub
sub
xchg
push
mov
data16
insb
int3
fs
pop
dec
jo
push
push
jecxz
sbbl
in
push
cmp
es
aaa
xchg
in
popa
pusha
insl
add
data16
shlb
dec
loopne
les
xor
or
dec
imul
subl
jbe
sbb
popa
iret
adc
sbbb
mov
fnstenv
or
push
in
sbb
mov
push
repz
and
pusha
xchg
popa
mov
jbe
popa
or
jae
or
call
shrl
stos
dec
adc
repnz
inc
push
rcrb
cld
mov
imul
paddb
xor
sbb
outsl
orl
mov
loopne
jbe
pusha
and
xor
mov
jmp
mov
xchg
das
inc
mov
mov
aaa
dec
xchg
fisubrl
scas
jnp
fsubrs
mov
orb
inc
xchg
adc
imulb
push
ja
rorl
fidivs
fisttps
scas
pop
icebp
loopne
ret
add
adc
outsl
cmp
and
sti
nop
mov
lcall
xor
movsb
lds
popa
jb
in
mov
leave
mov
out
sbb
jb
mov
popf
mov
insb
aad
test
adc
xchg
leave
repz
sti
mov
or
sbb
add
cmp
dec
dec
or
xor
and
adc
jg
push
jmp
out
mov
xchg
add
bound
push
popf
imul
arpl
addr16
inc
dec
lahf
mov
imul
lret
cmp
xchg
rcrl
jecxz
xchg
popa
pop
out
cmp
adc
mov
mov
mov
pusha
jbe
subb
pop
sahf
ja
aas
into
clc
sbb
nop
out
or
jo
add
or
test
es
dec
push
add
cld
movq
jnp
xor
push
in
pop
dec
cs
fsubs
shr
cld
xchg
loope
in
mov
cwtl
xchg
icebp
movsl
loope
adc
push
adc
fs
aad
jg
lock
cmp
pop
sbb
xchg
cltd
sub
xchg
sub
mov
notb
lcall
and
stos
int3
mov
mov
push
in
push
lret
cmp
mov
pop
fbstp
fsubrs
mov
adc
in
loope
in
clc
rol
pushf
dec
jo
pop
mov
mov
jecxz
roll
mov
ds
mov
adc
push
repnz
xchg
jecxz
leave
pop
mov
mov
or
loopne
pushf
sub
loop
xchg
ret
jne
fsubrs
xchg
xchg
jb
inc
imul
cmp
sub
stos
js
loopne
jb
loope
add
aas
and
xlat
and
mov
mov
lods
jmp
cs
sbb
pushf
xor
mov
insl
cmpsl
mov
and
mov
add
mov
fwait
mov
test
or
xor
xor
fs
jbe
xchg
ja
mov
mov
movsl
mov
cld
jne
ret
push
je
cltd
mov
movsl
sub
jg
or
dec
fbld
adc
in
jecxz
push
push
mov
movsl
xchg
ficoml
jnp
sbb
push
dec
sbb
cs
cmp
and
pop
or
push
mov
jge
sub
js
je
add
mov
and
sub
push
dec
inc
test
test
push
popa
push
pop
xchg
jecxz
incl
sbb
scas
in
test
dec
inc
push
push
xchg
sub
push
mov
and
outsb
in
andl
nop
daa
inc
and
fadd
jnp
adc
dec
fimull
lret
cmp
pop
xor
icebp
sbb
mov
les
loope
popa
mov
sbb
xor
adc
dec
and
je
or
pop
add
cmpsl
push
movsl
rcrb
fsub
inc
addl
lea
scas
or
in
stos
sub
fnsave
cmpsb
adc
pusha
xor
sbb
leave
movsb
in
adc
jg
jbe
and
movsb
ds
xchg
jo
sbb
sbb
push
lock
decb
push
jae
mov
or
push
or
into
imul
leave
inc
xchg
push
aas
mov
es
rol
add
inc
mov
pusha
mov
sub
or
clc
outsl
inc
lods
cmp
add
int3
fcompl
xchg
and
cmpsl
xchg
enter
aaa
sub
jns
sbb
mov
jle
mov
push
dec
sub
mov
xchg
aam
jae
ret
sbb
pop
pop
mov
and
push
pop
mov
rorl
test
rolb
adc
lods
ljmp
mov
add
aaa
or
cs
add
jcxz
hlt
mov
jge
test
and
shll
jo
mov
mov
lcall
rcr
hlt
xchg
leave
jp
lret
iret
lods
xlat
repz
push
xor
addl
scas
pop
lods
xchg
mov
mull
lea
pop
adc
test
mov
inc
cmc
fmull
nop
mov
mov
push
push
mov
fdecstp
jecxz
test
or
mov
orl
lods
adc
xchg
into
ja
rorb
pop
out
loope
mov
push
sub
sbb
ds
sbbl
inc
lods
dec
mov
mov
mov
lahf
add
xchg
push
add
or
movsl
shld
sub
sub
and
stos
push
aas
pop
cmp
fcompl
xchg
repz
xor
mov
pushf
clc
iret
fldt
mov
adc
leave
mov
out
into
sub
cmp
scas
inc
inc
pop
push
call
or
xor
or
ja
icebp
push
and
clc
mov
cli
jp
or
test
fsubrs
insl
sub
mov
into
jecxz
jmp
lret
xlat
ret
sbb
push
fs
and
icebp
shl
cltd
jp
xchg
movsb
mov
imul
divl
in
sub
or
cmp
gs
push
mov
mov
lret
dec
pushf
sub
mov
test
xchg
mov
jmp
shl
jp
pop
imul
clc
fldcw
mov
fiadds
out
fcoml
out
fmul
out
pop
sbb
dec
push
xor
inc
lock
push
adc
movsl
mov
jge
pop
scas
add
sbb
fisubs
cmpsb
sar
mov
jb
push
bound
cmp
xor
es
pushaw
iret
bound
xor
sbb
adc
mov
mov
sahf
mov
movsb
cmp
jp
xchg
cmpsl
xor
pop
xor
cltd
sub
enter
ret
bound
fstl
pop
push
xchg
in
aas
jmp
enter
or
addr16
aaa
xchg
sbb
mov
inc
popf
movsb
sub
lcall
sbb
nop
mov
lea
pop
roll
mov
adc
mov
sub
pop
cmp
popf
in
inc
fidivl
dec
cmpsb
lods
sar
xlat
lea
orb
push
sbb
stos
mov
sub
xchg
mov
fdivp
xchg
fadd
fs
mov
add
and
fs
or
in
je
repnz
ficoms
sti
dec
cmc
dec
ss
inc
faddl
sbb
xchg
and
ret
nop
daa
aas
pop
pushf
nop
dec
aas
jne
pop
out
pop
add
push
aam
int3
sbb
sub
rcl
jge
jg
inc
sbbb
inc
arpl
lds
ds
stos
inc
in
mov
enter
dec
in
inc
sbb
ja
imul
pusha
or
dec
jp
cmp
rorl
xchg
arpl
sbb
in
inc
mov
pop
test
mov
or
scas
subl
jnp
mov
inc
cli
fildl
inc
pop
xor
rol
sbb
push
add
jnp
jp
les
notb
mov
mov
xchg
std
int3
push
xchg
notl
mov
xlat
fwait
aam
sub
outsb
add
or
mov
jne
fwait
xchg
mov
loope
out
xor
or
mov
mov
gs
xchg
pop
adc
xchg
lock
scas
cld
xchg
cwtl
aaa
jnp
bound
popa
scas
and
test
xorb
push
iret
arpl
inc
push
xor
xor
push
fdivp
out
imul
xor
and
aam
push
mov
or
pop
cmc
xchg
loop
jg
jne,pt
jnp
sti
fldl
es
xchg
insl
stc
sbb
xchg
sub
cmc
dec
jmp
ja
fnstsw
xchg
in
data16
push
sbb
sub
repz
or
and
pop
jmp
add
xchg
xchg
aas
mov
data16
add
pop
repz
lcall
dec
lock
jbe
adc
xor
loopne
sub
push
sub
inc
push
inc
dec
sub
fldenv
or
fs
loope
in
or
push
ljmp
cmp
mov
mov
jbe
push
in
jmp
rcll
adc
insl
fimuls
sarl
hlt
mov
call
adc
cmp
movsl
movsl
add
add
imulb
and
fisubl
test
mov
xor
xchg
aas
mov
lods
pop
imul
mov
fsubrp
aam
lock
lcall
subb
cmp
xor
mov
adc
leave
cmp
mov
inc
stos
inc
cmp
cmp
adc
enter
lret
flds
and
and
cmp
rcl
pop
inc
fimuls
loope
in
imul
insb
jle
xchg
add
dec
push
ret
sbb
sub
dec
es
add
ret
repz
xor
add
mov
ret
adc
cmc
shrl
mov
add
mov
pop
lahf
std
xchg
add
lret
and
jge
cli
cwtl
cvtdq2ps
aam
xor
or
xor
cmp
pusha
xchg
jbe
bnd
int3
sbb
xlat
into
jle
push
adc
push
xchg
cs
push
hlt
pop
aaa
outsl
pop
stc
incb
cwtl
xor
and
add
lahf
lods
dec
jp
call
cmp
pop
inc
mov
sbb
push
iret
imul
xor
lahf
cs
push
in
inc
ss
dec
push
in
mov
nop
test
in
lcall
fwait
xchg
outsb
aam
mov
inc
repnz
das
dec
popa
popa
adc
sub
movsl
cmp
jecxz
lods
dec
push
gs
ds
outsl
aam
sbb
sti
dec
sbb
arpl
sbb
in
lret
mov
loop
js
cmp
inc
pop
int
push
in
icebp
xchg
stos
daa
jg
mov
insl
xor
dec
mov
mov
addr16
movsl
adc
dec
push
push
mov
mov
or
pop
sti
or
inc
jo
sub
shr
mov
fldenv
loope
xor
adc
lcall
sbb
sub
stos
jge
jo
xchg
push
sbb
rorl
dec
imul
lods
daa
in
sub
leave
cmp
jno
mov
sbb
ret
leave
lds
add
pop
cmpsb
push
nop
fidivrs
inc
icebp
mov
mov
mov
mov
push
hlt
fdivl
je
cmp
popf
dec
mov
out
outsb
lret
fsubrp
mov
fsubs
mov
enter
in
jnp
flds
or
dec
cmpsl
mov
inc
sub
mov
in
std
xor
lea
idivl
je
mov
int
mov
pusha
push
mov
add
jno
das
sub
iret
jecxz
ret
call
into
or
pop
out
fs
pop
les
inc
idivb
out
mov
xchg
jnp
or
in
mov
lea
cmp
in
and
push
mov
pushf
or
popa
lods
arpl
xor
xchg
xor
stc
inc
in
or
in
lea
push
inc
xlat
leave
cld
sub
sbb
mov
or
cmpsb
xor
or
lock
xlat
lods
fdivrs
add
xor
mov
sub
sti
xchg
or
xor
int3
cmp
scas
test
aas
fidivl
ficoml
lret
int
popf
jae
adc
pop
repnz
pop
lock
dec
in
and
xchg
sbb
xchg
lea
sbb
push
testl
mov
and
adc
imul
pop
lret
dec
in
mov
xchg
or
nop
mov
ljmp
lcall
sti
call
pop
fsub
xchg
lods
daa
mov
call
and
xor
mov
inc
mov
lods
in
sub
xchg
jb
push
mov
fimull
cld
fimull
pop
adc
mov
or
and
mov
stc
mov
pop
push
fdivrl
push
lcall
cwtl
xor
mov
fdivrl
inc
sub
js
sarl
scas
push
aas
sbb
gs
cmp
or
sbb
fisubrl
push
addl
rolb
xchg
out
imul
in
push
jae
dec
pop
inc
inc
mov
xor
in
mov
clc
aaa
daa
inc
cli
sub
pop
frstor
movsl
sbb
mov
pop
mov
mov
ret
fcom
stc
cmp
icebp
je
jmp
xor
mov
sti
mov
mov
push
xor
mulb
loopne
lcall
mov
mov
andl
pop
add
sub
jp
or
mov
jg
mov
mov
enter
dec
dec
mov
push
pusha
ss
jmp
jmp
push
dec
fdivrl
mov
xchg
push
lea
test
lock
mov
and
inc
push
mov
sbb
xor
sub
out
nop
mov
cmpsl
test
scas
add
gs
fsubr
dec
imul
enter
insl
jns
outsl
jnp
pop
mov
sbb
push
cli
pusha
sub
adc
hlt
pop
jno
hlt
sub
mov
sbb
mov
repnz
push
mov
sub
xchg
add
xchg
jb
scas
mov
fprem1
cmp
insl
jge
mov
jo
test
ja
xor
cs
fldcw
je
mov
rol
out
or
or
hlt
les
jo
jbe
ret
cwtl
add
cs
mov
cli
add
xchg
sbbb
and
test
jae
addr16
sbb
mov
add
inc
and
xor
push
movsb
xor
fnstsw
dec
push
in
inc
sbb
cld
add
movsl
sbb
xchg
cmpsl
bound
mov
lods
cmpsb
mov
xor
dec
into
fadd
adc
jo
ret
adc
cmp
idivl
adc
addr16
in
ret
push
mov
add
pop
lahf
cmc
add
scas
xor
add
test
mov
lds
cs
fstl
je
jge
cmp
mov
mov
inc
data16
out
push
out
insb
pusha
ljmp
movsb
cli
test
and
pop
jge
lret
stc
mov
into
mov
pop
mov
mov
mov
inc
push
mov
add
cwtl
das
and
stos
rclb
mov
pop
adc
jnp
sti
test
mov
sbb
inc
fstpt
push
out
pushf
jae
cmp
mov
jmp
cmp
inc
xchg
mov
loopne
xor
inc
and
out
mov
jmp
jb
pop
xchg
out
nop
insb
out
push
cltd
xchg
mov
xor
inc
cld
push
sarb
xchg
sub
imul
jno
repz
push
imul
and
mov
jno
lret
sub
dec
push
or
sbb
mov
and
movsl
fmulp
fwait
stc
jnp
pop
lock
or
test
lret
jb
jne
cmp
jno
lcall
add
adc
cltd
lsl
dec
cmpl
cmpsl
out
mov
fsubr
push
in
cmp
call
sub
xor
lock
jno
xchg
rorl
push
scas
icebp
mov
jns
sub
cli
test
mov
js
test
stc
xchg
adc
mov
in
in
mov
and
in
out
inc
inc
lcall
addr16
sahf
arpl
push
cmpxchg
clc
nop
daa
out
mov
xor
push
add
fs
sbb
push
and
mov
test
iret
push
hlt
add
adc
lods
or
inc
mov
aam
jmp
mov
pop
outsl
or
shlb
pushf
xchg
gs
sbb
jb
jl
lds
mov
int
pop
jle
gs
inc
jo
adc
outsb
adcb
std
jbe
movsl
leave
jmp
int
mov
pop
xchg
js
mov
js
xor
fstl
pusha
loopne
push
xchg
sbb
ret
sar
jge
loopne
iret
xor
pop
in
sub
pop
jecxz
cmpb
les
dec
scas
lahf
ss
or
mov
or
sub
add
addl
scas
sbb
mov
data16
jo
sub
xchg
into
adc
dec
loopne
into
gs
add
fwait
pop
cmp
cmp
pusha
mov
adc
xchg
test
add
push
dec
movsl
mov
jg
mov
sbb
sbb
jge
or
adc
test
push
jge
notl
push
sub
xor
imull
aas
xchg
lods
mov
xchg
xor
xor
lods
push
imul
daa
aaa
inc
pop
int3
add
pop
mov
es
es
fisubrs
rcrl
or
add
test
jp
imul
push
js
in
mov
sbb
jnp
insl
cmp
movsl
das
cmp
and
fcoml
mov
pop
and
inc
mov
sti
pushf
push
xchg
int
fmul
adc
ja
bound
mov
push
je
stos
add
pop
push
mov
fnstcw
aad
les
mov
or
adc
in
adc
fstps
inc
lea
add
add
jecxz
push
ja
je
fsubrs
push
push
and
sub
fisubs
adc
mov
out
dec
dec
push
cmp
inc
adcl
das
add
cmp
cmp
pop
bound
jnp
outsb
mov
push
sbb
ret
loopne
xor
dec
imul
push
lock
cld
xchg
leave
sub
dec
xchg
sti
loopne
mov
pop
push
jg
add
cld
push
mov
ja
divl
dec
and
fisubrl
mov
xchg
ja
das
test
jnp
jbe
data16
cmp
add
lret
mov
xchg
lret
add
outsb
inc
arpl
aaa
or
jmp
mov
add
mov
cmc
aas
inc
faddl
or
fcmovnb
fistl
inc
in
pop
adc
popf
cmc
scas
push
lods
xlat
test
mov
and
testb
addr16
arpl
jmp
cwtl
pop
adc
lea
xchg
mov
push
mov
adc
repnz
dec
push
xorb
repnz
rorb
or
inc
pop
add
cwtl
mov
xchg
and
stos
call
int3
dec
daa
outsb
xor
mov
and
or
clc
test
in
pop
lea
sbb
dec
mov
popa
addr16
and
loopne
cmp
es
jg
mov
mov
dec
sub
out
ret
fisttpll
sbb
out
jo
shr
sarb
outsb
popa
jns
cmp
pop
jmp
test
mov
push
negl
sar
mov
inc
je
add
fidivrs
notl
testl
test
mov
pop
fs
pop
clc
test
mov
call
rcrl
aad
jp
aas
ja
pop
xor
and
fisttps
imul
jl
subl
call
sub
imul
data16
fiadds
in
cmp
add
sub
fstl
bound
shr
fwait
mov
mov
jne
mov
pop
jno
fcomp
pop
xor
stc
mov
fwait
out
fildl
or
xchg
imul
test
arpl
fwait
sbb
jmp
and
or
cltd
and
cmpsb
std
and
repnz
adc
nop
cltd
rorl
sub
jge
xchg
sub
or
dec
imul
and
daa
cmp
lea
mov
inc
xchg
negb
sqrtps
out
jecxz
inc
dec
fistpl
pop
sbb
sub
lea
into
leave
pop
fmull
and
movsl
shrl
and
mov
jp
adcl
push
mov
lods
dec
mov
into
push
ret
mov
push
xor
push
inc
mov
pop
ljmp
sub
cmp
fcoml
aad
jbe
je
cmpsl
xlat
outsb
icebp
imul
out
mov
mulb
cld
and
data16
call
push
xchg
inc
add
pop
jbe
dec
and
loop
mov
mov
adc
lods
mov
mov
mov
bound
add
add
aaa
push
xor
in
dec
in
adc
sub
jp
dec
jno
pop
sub
fimull
pop
loop
mov
cmp
sub
push
and
adc
imul
cmp
mov
movsb
jmp
andl
mov
outsb
inc
cli
es
and
pop
stos
or
sahf
and
insl
mov
add
push
fidivrl
fsubrs
rcr
int3
pop
push
jae
sbb
mov
mov
test
push
xchg
clc
xor
add
in
add
dec
dec
push
push
ficompl
jnp
stos
cld
and
or
mov
xchg
push
ja
mov
mov
jno
dec
and
ret
imul
push
in
mov
xchg
cmp
mov
mov
leave
cmc
jg
mov
call
jno
and
and
hlt
mov
int3
mov
sbb
dec
ret
repnz
xor
pop
in
je
xchg
xchg
test
jecxz
ficompl
icebp
movsl
dec
int3
popf
or
adc
out
push
cwtl
loopne
mov
out
mov
or
aam
sub
adc
cmp
or
xchg
mov
inc
pop
pop
stc
inc
fidivs
sahf
fstpt
ja
movsb
std
sub
gs
cli
or
mov
test
sub
test
icebp
dec
xor
xchg
notl
sarl
sbb
aas
lods
mov
leave
cmp
fists
fsubl
lock
sarl
dec
mov
clc
lea
mov
repz
jbe
mov
movsl
loopne
push
or
lds
pop
and
or
push
dec
pop
mov
stos
mov
mov
pop
fwait
cmpsl
inc
std
sub
cmpsl
ret
add
fwait
pop
inc
and
lods
mov
sbb
insb
aaa
jle
daa
inc
inc
push
ljmp
movsw
push
push
movsl
incl
xchg
jmp
jbe
sub
push
dec
fmuls
and
add
push
cwtl
xchg
mov
iret
push
sub
test
push
scas
pop
icebp
repnz
and
mov
fwait
add
pushf
in
scas
insl
sub
push
stos
mov
push
jle
push
dec
leave
sub
cld
imul
mov
gs
dec
ljmp
lret
repz
movsb
xchg
cmp
ss
pop
push
das
add
jmp
sarl
mov
daa
in
outsb
fucomip
xchg
mov
ss
popa
cmp
cltd
mov
repnz
stos
inc
aaa
shlb
mov
int
aad
cmp
push
nop
sub
in
mov
xor
clc
mov
cmp
andb
mov
movsb
repnz
ror
daa
mov
fldt
bound
cwtl
popa
ds
outsl
ljmp
xchg
mov
fsubl
inc
cmp
xchg
pop
sub
jne
jnp
sbb
jge
rclb
push
sub
fwait
xor
adc
mov
loop
xor
aad
add
popa
sti
lret
add
cmp
xor
or
lret
mov
and
jmp
cld
sbb
jle
scas
mov
dec
aam
or
outsl
xor
xchg
test
sub
fwait
push
icebp
dec
xchg
int
dec
outsb
js
fucomip
cmp
jge
push
lret
push
in
dec
mov
shlb
imul
fisttpll
mov
repz
es
arpl
jle
push
call
dec
out
fdivrs
mov
addr16
cmp
pop
cmp
pop
sub
subb
add
movsl
jge
pop
add
pop
js
cmp
mov
sbb
aam
add
jo
jmp
data16
and
push
jno
or
xchg
push
pop
aaa
int
cmpl
jl
into
dec
dec
in
out
mov
and
insb
aad
insb
nop
hlt
cmp
test
sub
rcr
enter
cmp
enter
inc
mov
mov
fs
push
sub
xor
loop
cld
xchg
cs
aad
inc
icebp
in
cmpsl
xor
lock
fs
mov
cmp
mov
dec
aad
mov
pusha
les
sbb
mov
pop
xor
cmp
xor
pop
jmp
repnz
push
dec
inc
dec
dec
unpcklps
pop
mov
mov
or
inc
push
outsb
lock
daa
cmp
int
cli
jo
cmp
test
jge
fmull
insb
arpl
fnstenv
mov
pop
aam
lret
ret
fnstsw
pusha
dec
mov
lahf
or
mov
adc
addl
sbb
dec
jb
pusha
mov
movsl
hlt
pop
xlat
lret
test
jmp
and
outsb
inc
and
sub
test
iret
mov
jne
xor
adc
pop
jge
add
fidivs
ss
loope
inc
mov
ret
jb
xor
adc
push
mov
or
fdivs
ret
mov
lret
mov
mov
mov
int
negb
scas
or
mov
adc
jmp
fiaddl
lods
add
xor
xchg
movsb
fstpl
jmp
inc
loop
dec
push
out
xor
das
jge
in
dec
cwtl
loope
inc
xor
dec
pop
fstl
xor
out
movsb
mov
push
stos
jo
lret
ds
hlt
adc
mov
push
adc
enter
dec
imul
int
enter
jne
xchg
and
ficomps
insb
add
mov
mov
lods
andb
pop
inc
dec
out
lcall
jge
add
and
pop
sahf
cmp
jb
sysret
sbbl
popa
or
sub
pop
sub
mov
add
psraw
mov
mov
cmp
iret
jle
add
jns
lock
and
iret
imull
cmp
aas
dec
std
inc
imul
data16
sahf
xor
xchg
mov
mov
std
ss
add
add
xor
push
data16
xchg
adc
xor
jge
hlt
ds
and
mov
pop
mov
lds
cwtl
sub
xor
arpl
std
xchg
int
aaa
js
inc
data16
scas
mov
roll
std
repz
notl
mov
pop
call
add
jl
mov
ja
in
push
data16
lahf
bound
inc
xor
lret
mov
pop
enter
fmull
lret
rcrb
test
mov
inc
sub
push
cmpsb
sbb
sub
add
in
jmp
ja
ss
lea
push
cmp
js
sbb
sbb
lock
add
sahf
nop
mov
ficoms
out
xchg
sub
sbb
xchg
xor
jmp
in
sub
lret
pop
out
inc
mov
pop
or
fnstenv
and
xchg
jno
mov
sub
cwtl
addr16
cmc
insb
jl
inc
xor
dec
dec
jo
mov
mov
sti
sbb
jns
pop
clc
cmp
cld
push
or
nop
xor
jb
pop
cmp
bound
sbb
mov
lods
in
clc
inc
xor
pop
insb
ficompl
mov
inc
fisubl
ja
cmpsl
ds
das
jo
sub
sbb
mov
outsb
sbb
add
mov
rcr
jo
lds
push
clc
dec
testl
mov
aad
pop
jbe
push
lret
repz
imul
adc
adc
gs
push
mov
push
inc
sbb
out
and
or
lds
dec
pop
jmp
xor
aam
and
jae
movsb
shll
push
xor
fs
add
adc
adc
cmc
cld
push
sbb
in
xchg
sub
add
push
push
aad
or
adc
push
add
das
xchg
inc
inc
aas
push
in
std
add
jle
cli
movsl
xlat
adc
leave
sbb
loop
in
dec
test
jmp
shlb
mov
push
xor
add
xchg
dec
nop
test
loopne
aad
mov
cmpsl
ljmp
fwait
xor
mov
or
scas
push
and
push
xor
cmp
sub
out
jnp
dec
insl
sub
loop
xchg
cmp
pop
jbe
out
pop
xchg
and
mov
fs
pop
mov
jae
mov
dec
ja
movsb
and
shll
cmp
cmp
sub
xchg
xor
add
pop
out
insb
cmp
adc
mov
pop
cmc
int
test
ja
loope
repnz
lahf
jmp
lea
push
push
inc
fdivrp
xor
cmp
xchg
outsl
xchg
ds
fwait
mov
pop
data16
jne
mov
hlt
sbb
int
nopl
xchg
mov
mov
and
lea
mov
inc
or
cli
mov
jl
mov
jbe
inc
cmpsb
lock
scas
ret
cli
adc
pushf
bound
loop
push
dec
rolb
pop
fdivs
dec
pop
lods
add
jbe
cltd
popf
or
stos
sub
shrl
jg
lret
mov
jecxz
arpl
mov
jle
loopne
mov
fwait
jbe
mov
test
aad
push
push
mov
and
fxch
cmp
mov
gs
inc
adcb
sti
in
test
cmp
mov
pushl
mov
adc
adc
sub
pop
js
clc
cmp
cmp
push
lret
cmp
out
test
inc
inc
sti
xchg
rcl
aaa
daa
xchg
in
mov
mov
aas
pop
iret
fwait
or
cmpsl
jmp
mov
into
cmpsl
sti
mov
aaa
je
inc
das
mov
call
test
out
cmpsl
and
xor
mov
jl
and
dec
lock
loop
cmp
inc
aad
mov
sub
lahf
xchg
je
pushf
jne
int3
mov
push
mov
leave
fistl
or
add
adc
jmp
jl
mov
fstpt
fistpll
jbe,pn
in
repnz
ret
test
cmpsl
add
andl
sbb
sbb
jmp
cmp
lock
xor
mov
int
stos
jecxz
sub
ja
out
sar
or
call
cwtl
cltd
mov
push
lret
in
iret
fdiv
std
lods
orb
add
jne
repz
popf
mov
push
lret
bound
cmp
repnz
pusha
fnstsw
mov
jle
xchg
sub
dec
insl
sub
je
sub
inc
lea
jp
lock
sahf
pop
int
aad
mov
inc
sub
push
dec
pop
and
dec
pop
mov
cltd
std
xor
notl
orl
xchg
mov
stc
mov
lret
mov
sbbl
push
inc
sbb
push
xchg
clc
sahf
adc
mov
in
imul
jae
lds
insb
into
mov
insl
mov
push
mov
dec
cs
inc
pop
inc
push
rolb
xor
mov
jne
movsl
push
inc
jnp
ret
push
lock
sbb
mov
xchg
cmpsl
mov
sarb
push
sti
addr16
mov
mov
int
lret
out
movsl
ret
lock
cmp
mov
dec
dec
mov
pop
cmp
cmc
and
scas
sub
pop
imul
insl
sub
mov
pop
or
shlb
repnz
push
mov
push
movsl
orb
jl
xchg
repnz
rol
fisubrl
cs
arpl
xchg
stos
xchg
mov
int
dec
int
out
aam
jl
mov
adc
push
loop
jecxz
jne
mov
adc
xor
fwait
sub
cmp
mov
scas
cmp
cmp
iret
pop
jns
jmp
pop
xchg
mov
xchg
int3
xchg
mov
dec
arpl
push
and
push
sbb
aas
fucomi
decl
leave
stos
mov
fsubrl
mov
and
aas
push
or
fbld
fwait
pop
notb
data16
fstps
loop
pop
sti
pop
sub
nop
repz
outsb
cmp
faddl
mov
inc
lcall
xor
push
mov
mov
sub
imul
lahf
jno
xor
fidivrs
ret
jb
rclb
mov
stc
and
rclb
mov
mov
add
add
test
fxch
test
or
stos
lds
push
lcall
hlt
shrb
cmp
mov
xchg
sahf
jno
sar
sbb
xor
sbb
les
xor
cmp
push
mov
pop
aas
pop
cmp
iret
fildl
mov
ja
pop
add
sub
sub
outsb
enter
mov
adc
or
xor
out
popf
repnz
call
or
je
inc
pop
clc
and
iret
sti
lret
add
push
sbb
lret
lds
jmp
xchg
mov
in
sbb
fwait
sti
in
in
jns
sbb
mov
jecxz
inc
fsubrs
lret
pop
idiv
fidivl
adc
aam
repnz
test
lret
sbb
aas
mov
cmp
xor
gs
add
andl
jge
xchg
ficompl
test
sub
lock
push
popf
aaa
rclb
sbb
inc
or
adc
int3
clc
test
test
dec
mov
jbe
push
jmp
dec
hlt
out
mov
inc
ficompl
clc
fsubrs
push
incb
std
mov
rol
aas
jg
icebp
jbe
sub
sbb
or
and
mov
sarb
push
cmp
mov
or
jle
repz
mov
push
lods
dec
idivb
push
std
and
scas
cwtl
xchg
lods
mov
xor
jo
mov
pop
es
or
icebp
mov
adc
sbbl
add
popa
movl
mul
inc
mov
sahf
pop
jb
inc
clc
lret
sarb
fsts
adc
mov
pop
icebp
pop
push
test
imul
stos
sub
adc
dec
sub
inc
lods
jne
mov
pusha
pop
sbbl
orl
cmp
mov
mov
nop
daa
mov
sub
inc
cmp
adc
mov
adcb
std
xchg
test
lret
sti
lods
addr16
int3
in
sub
cli
push
xchg
sub
pop
dec
loope
adc
adc
jno
es
out
inc
pop
inc
jno
repz
fsubs
add
jno
mov
aas
mov
int3
inc
dec
jns
enter
push
lcall
in
shr
jmp
scas
cmp
adc
ret
push
sbb
movsl
push
mov
shl
jo
and
cmp
bound
in
inc
shrb
fistpl
pusha
mov
push
mov
jnp
adc
pop
leave
sarb
js
pop
pop
mov
mov
jo
push
sub
jg
lea
imul
xor
mov
std
add
leave
call
lock
xchg
and
adc
jl
xor
loopne
push
std
mov
adc
or
es
mov
adc
mov
pop
mov
andl
loope
xor
dec
mov
mov
test
push
ss
xchg
add
shrl
mov
mov
test
test
lock
sarb
idivb
pop
cmp
rolb
shrl
out
and
pushf
hlt
lahf
mov
test
mov
push
jns
outsb
outsb
jl
rcrl
mov
nop
push
adcl
push
pop
leave
in
das
cmp
xchg
push
push
outsb
jnp
inc
std
lea
xor
icebp
jl
mov
mov
lcall
mov
xchg
cwtl
push
add
cmpl
xor
jp
cmp
xor
mov
push
push
cld
sarb
sbb
mov
inc
lcall
xchg
sub
lods
pop
dec
iret
inc
fidivrl
jecxz
add
add
pop
cmp
mov
inc
lods
popa
jbe
mov
inc
leave
mov
push
mov
test
push
aaa
mov
data16
mov
xor
adc
add
mov
or
xor
cmp
adc
cmpsb
dec
pop
fs
push
insl
test
lahf
add
bound
outsl
pextrw
popf
adcl
lock
fcompl
push
notl
add
jge
xchg
negb
xor
fidivs
pop
stc
orb
xchg
sahf
das
out
xorb
lock
xor
mov
fs
imul
adc
xor
push
call
ret
cmp
aam
sarb
push
stc
lahf
ljmp
out
mov
jnp
push
lods
movups
mov
pop
stc
or
push
adc
dec
cltd
push
mov
cs
mov
push
jmp
mov
loope
jmp
push
repnz
aad
xchg
in
in
cwtl
pop
and
insl
and
cli
in
cmp
pop
sbbb
mov
mov
cmp
push
lds
scas
pop
repz
enter
jns
mov
scas
je
xchg
pop
adc
pop
in
or
jae
test
jae
pop
test
in
int
loope
mov
push
jmp
mov
sub
imul
push
test
popa
sti
xor
and
xchg
std
cmp
in
or
jge
sbb
int
xor
xchg
mov
add
pop
loope
bound
js
or
sti
cltd
add
mov
ljmp
jo
inc
stos
stos
sbb
cmp
inc
data16
outsb
dec
sbb
pusha
lcall
mov
mov
clc
xor
fidivs
xchg
shl
jmp
es
adc
mov
sahf
adc
int3
mov
xor
mov
push
lcall
icebp
test
dec
fistl
inc
ds
sub
inc
fs
add
xchg
mov
sbb
adc
jge
nop
mov
mov
shrb
add
inc
mov
pop
jp
addr16
fwait
loope
int
push
cmc
shlb
xchg
hlt
jl
es
pop
in
dec
iret
and
push
or
or
lock
mov
cmp
jno
sbb
lret
stos
mov
out
sub
ljmp
pop
test
and
adc
bound
imul
mov
outsl
mov
adc
mov
mov
stos
subl
add
stc
pop
int3
and
shrb
shl
sub
push
push
pop
add
sub
rcrl
and
xor
ss
out
test
mov
fcmovnbe
shll
sub
into
mov
sarl
push
in
push
loope
cmp
add
fnstsw
pop
or
push
jbe
or
adc
and
imul
mov
pop
repz
fidivrs
roll
je
test
cld
dec
inc
push
ds
in
leave
mov
sub
push
add
xor
sbbb
inc
fldl
imul
cmp
jno
xchg
mov
in
lret
adc
mov
jle
push
loope
rcl
jl
sarb
loop
sub
inc
ret
shr
jnp
push
sub
cmp
push
out
sub
jae
test
xor
push
push
xchg
out
inc
movsl
cmc
add
push
repnz
jle
mov
mov
xchg
sub
add
rolb
sbb
sbb
sub
mov
ret
jo
call
fsubrs
call
lahf
dec
stos
mov
cwtl
out
call
mov
mov
test
leave
and
les
in
pop
jbe
lahf
pop
jle
cmp
pop
sbb
loopne
add
sub
cmpsl
adc
outsb
inc
pop
sub
mov
movsb
fdivl
fsubp
and
loope
inc
or
inc
sbb
and
xor
mov
pop
filds
and
mov
mov
ja
cmp
pop
ret
cmp
dec
fldl
test
aaa
popa
push
push
aaa
add
clc
fbstp
je
ja
or
sbb
pop
inc
push
cmpsb
dec
mov
xlat
jl
insl
scas
icebp
sub
inc
hlt
xchg
sbb
sbb
arpl
xchg
mov
ret
mov
ja
mov
cwtl
mov
fstpl
outsl
push
and
addr16
adc
mov
add
daa
sbb
pop
ja
in
jle
shll
fcomps
adcb
andb
jne
push
jne
cmp
and
mov
add
sbb
loopne
adc
xor
jg
cmp
enter
mov
cld
loope
add
mov
sub
hlt
aas
jg
lea
fwait
scas
jno
dec
mov
mov
push
jae
push
mov
loope
lret
and
xchg
jbe
push
or
cmpsl
mov
mov
into
cmp
jmp
loop
orb
ror
sub
push
pop
in
dec
loop
or
sub
imul
mov
and
ret
mov
in
cld
dec
sti
mov
inc
pop
in
mov
lods
mov
ficompl
and
outsb
push
cmp
inc
cmc
push
jb
ja
inc
dec
ljmp
push
out
mov
push
or
cmp
cmc
fcomp
cld
or
jb
dec
sub
aam
test
es
inc
in
in
jo
mov
xor
jg
enter
adc
pop
mov
scas
sbb
loope
push
cmpsl
enter
jnp
lret
and
pop
scas
jns
andb
adc
lret
adc
mov
push
mov
lcall
int
xchg
inc
bound
out
inc
cmp
hlt
mov
outsl
daa
jg
push
mov
add
repz
popa
pushf
push
sub
clc
out
jo
and
insl
inc
push
aas
dec
fisttpll
xchg
js
ss
jns
outsb
jle
fwait
xor
das
jecxz
push
ffree
and
push
mov
pop
mov
add
es
fists
test
push
pop
inc
outsl
push
jmp
jne
jl
aad
xor
lahf
or
inc
mov
and
inc
loopne
or
lret
add
idivl
and
movsb
inc
nop
ljmp
ljmp
dec
sbb
dec
mov
mov
lods
mov
xchg
scas
pop
dec
add
roll
or
xor
cmpsb
arpl
dec
jmp
jg
or
out
popl
popf
ss
sub
mov
xchg
xor
pusha
dec
pop
mov
ds
push
jne
popa
cmp
push
mov
shl
jp
dec
sbb
test
mov
and
adc
loopne
or
push
xor
mov
in
andl
orl
or
push
inc
push
scas
hlt
push
je
add
inc
mov
jle
pop
mov
adc
jb
inc
rcl
pop
out
mov
xchg
dec
and
insb
out
jns
xchg
pop
add
mov
lret
or
or
stos
movsb
ret
cld
or
jo
movsb
out
push
lfence
xchg
sub
mov
mov
jg
jl
sti
mov
js
push
cmp
jp
xchg
mov
mov
cmp
pop
jb
pop
mov
push
fnstsw
xchg
mov
aas
stos
pusha
cmp
xchg
lret
cli
dec
mov
mov
loopne
sbb
sbb
fs
inc
in
cld
jmp
mov
rcrl
mov
sbb
sub
pop
es
pusha
fnstenv
sti
es
and
dec
fsubrs
fistps
ret
mov
sub
pusha
cmpsb
stos
icebp
paddd
out
add
jb
push
insb
lahf
xchg
pop
fs
sbb
lods
dec
sti
arpl
sub
or
mov
js
pop
mov
mov
mov
or
cmp
and
stos
inc
jne
cmp
leave
fnstenv
cmp
imul
sbb
andb
cmp
movsb
lods
inc
in
inc
ljmp
jmp
pop
sub
insb
push
fcompl
das
repz
das
push
jae
adc
inc
scas
xchg
push
lock
pop
hlt
mov
inc
sbb
cwtl
das
in
add
xchg
aad
popa
cmpb
cmp
jl
pop
push
fs
stos
cld
xchg
out
jl
les
roll
and
cmp
fisttps
xor
jne
imul
xor
and
js
mov
lret
adc
out
mov
cmpsb
cmp
jne
mov
sub
and
ds
sub
shrl
mov
outsb
mov
popf
cmp
dec
fists
test
sysret
mov
xchg
mov
pop
les
in
lahf
jbe
adc
dec
in
xchg
aam
cwtl
xchg
cmc
sub
roll
pop
pushf
filds
cwtl
mov
in
cwtl
mov
mov
sbb
add
aam
dec
out
cld
pop
outsl
push
test
mov
movsb
jg
arpl
mov
mov
dec
shrl
xchg
mov
scas
fwait
out
sahf
pop
fldcw
mov
mov
fdivs
jecxz
lods
test
cmp
dec
ret
stc
mov
pop
pusha
mov
movsl
ss
cmpb
popf
pop
mov
rcr
mov
loope
in
lock
in
sub
insb
dec
ficoms
vcvtdq2ps
fsub
in
jne
push
cmpsl
sbb
jmp
sbb
xlat
out
jecxz
into
vphaddbw
or
cld
mov
popl
popa
sbb
addr16
cmpb
jmp
sub
mov
sbb
sub
rcrl
xor
andb
jb
add
aas
mov
mov
fidivrl
xor
push
mov
bound
fs
mov
arpl
add
mov
inc
mov
popl
jl
mov
add
sbb
incb
jl
push
negb
adc
mov
ss
xchg
sbb
adc
mov
lock
push
imul
or
imul
shld
adc
lret
sbb
in
pop
sbb
add
aad
lods
xor
in
sbb
cmpsb
lret
int
dec
loope
mov
in
sbb
jnp
div
mov
sbb
loopne
sti
das
pop
xor
jg
inc
adc
outsb
cltd
scas
xchg
pusha
repz
cmp
mov
inc
sbb
lea
jb
imul
push
fsubl
pop
imul
jg
pop
jno
cmp
inc
pop
inc
jg
pop
hlt
shl
or
imul
scas
or
push
movsl
sbb
jae
out
into
inc
lret
cld
popa
push
insb
cmpsl
ret
mov
int3
xchg
ds
dec
jo
movsb
mov
adc
lcall
imul
xor
cmp
add
rclb
lods
add
int3
jae
pop
fidivrs
add
je
fwait
mov
out
jle
and
loopne
mov
lahf
mov
mov
pop
push
dec
cld
arpl
stos
xchg
cmc
xchg
iret
adc
push
cmp
dec
sbb
leave
movsl
les
repnz
pop
jmp
adc
out
sbbb
mov
lds
mov
pop
subb
stc
or
push
cmpsl
pop
sub
mov
xor
or
adc
pop
outsl
das
sub
jo
fistps
sbb
int3
inc
mov
insl
lret
hlt
sub
inc
pop
add
or
or
lock
mov
lret
int3
or
pop
dec
pop
dec
arpl
and
mov
test
es
jo
mov
mov
out
pop
mov
test
xor
push
mov
jae
dec
mov
push
push
xor
sub
movsb
fadd
or
ss
mov
pop
pop
mov
in
outsb
cltd
sub
push
adc
shlb
lock
and
push
call
inc
mov
jns
sbb
jp
sbb
adc
xchg
nop
mov
xor
inc
bound
fwait
or
mov
shl
mov
adc
aaa
scas
es
imul
es
mov
mov
mov
imul
enter
adc
sub
fwait
sbb
loope
push
mov
fsubrs
in
mov
lret
pop
movsl
cmp
call
and
push
test
sbb
add
je
mov
inc
dec
pushf
mov
bound
sti
and
in
or
fld
jnp
pop
lods
loop
popf
lcall
mov
xor
sub
shr
jnp
clc
jecxz
stc
cmp
repz
inc
popf
and
nop
push
lods
test
add
xor
mov
dec
shl
sti
cmpsl
jmp
je
jb
xchg
sub
imul
shl
mov
test
adc
je
xor
dec
mull
adcb
into
dec
pop
pop
dec
jmp
cs
add
data16
mov
out
adc
cmp
and
xchg
cmp
enter
cmp
jnp
or
call
jbe
pop
jne
jo
jecxz
xchg
sbb
inc
dec
sti
scas
lods
jl
stos
xlat
adc
bound
xchg
in
leave
js
jmp
xchg
inc
xchg
adc
in
jp
mov
xchg
rcrl
out
and
pop
dec
push
or
hlt
in
jl
outsb
call
jae
mov
aam
iret
or
mov
cmp
pop
pop
push
inc
jmp
jge
in
leave
bound
ss
sbb
add
icebp
repz
into
xor
mov
add
loopne
add
adc
mov
icebp
cwtl
stos
adc
and
into
shrl
clc
mov
mov
pop
jp
mov
sbb
insb
mov
add
inc
mov
mulb
push
xor
cwtl
das
push
lods
push
je
jb
dec
xchg
dec
or
ds
mov
sbb
fisttps
push
adc
fs
and
inc
or
ja
mov
mov
jg
push
inc
fs
push
ret
ret
cli
das
jl,pn
mov
pop
sahf
mov
fdivrl
lea
clc
stc
xchg
dec
jb
or
add
fwait
xor
and
lret
adc
divb
aaa
incb
lods
cmp
add
mov
int3
das
add
out
mul
xchg
xor
push
sub
push
js
cmc
and
fistl
repz
push
push
aaa
and
movsl
add
mov
mov
jl
xchg
mov
jo
les
dec
dec
jge
xor
stos
sub
movsl
xor
sbb
push
cs
ret
loope
scas
cld
pop
cmc
sub
sub
sahf
pop
inc
mov
mov
sbb
push
cmp
mov
mov
jmp
loop
outsl
inc
cmpsl
repnz
in
and
and
add
sbb
cltd
mov
test
xchg
sub
sbb
cmp
cli
xchg
addr16
ja
fs
mov
mov
ret
rorl
jg
sbb
rcrb
shll
iret
add
es
cmc
cmpsl
shll
data16
faddl
and
scas
lods
mov
faddl
sti
cmpsb
mov
out
dec
fisubs
loopne
fistpl
scas
ljmp
addr16
test
push
repz
insb
inc
push
sahf
sub
ljmp
lret
clc
cmp
lret
popf
movaps
sub
test
enter
push
mov
shll
fwait
push
out
mov
xchg
stc
les
aaa
jns
cwtl
das
mov
dec
lcall
sbb
lcall
adcl
insb
add
lret
xchg
lds
push
mov
xor
xlat
mul
dec
dec
jge
adc
stos
pop
outsb
stos
or
sub
insb
popf
push
inc
test
jnp
fldenv
xchg
setge
mov
int3
xor
or
adc
push
mov
cmp
jecxz
push
out
jp
popa
inc
mov
jmp
or
in
cmp
js
mov
fiaddl
and
ja
xchg
outsb
sub
jge
xchg
enter
inc
loope
stc
xchg
and
mov
adc
xchg
js
stos
and
std
hlt
add
or
outsl
push
gs
daa
jae
insl
cmp
xchg
scas
cmp
insb
cmp
pop
insl
idiv
xchg
in
loopne
movsb
mov
and
lds
and
in
andl
cltd
sub
lret
xor
add
xchg
pop
dec
int3
pop
div
sbb
and
cltd
std
and
or
jmp
pop
shll
insl
mov
inc
pop
xor
pop
clc
dec
daa
mov
jae
and
popf
inc
xchg
add
mov
arpl
fs
pop
sbb
sbb
add
popf
adc
scas
push
in
adc
outsb
faddl
pop
xchg
jbe
mov
or
cmpsl
divl
jns
inc
and
add
sbb
test
sbb
pop
loopne
or
insb
xchg
inc
jl
inc
fimull
mov
out
mov
adc
fdivs
xchg
je
or
push
adc
or
sub
and
jle
inc
lret
dec
xchg
mov
inc
aas
jne
lods
cltd
mov
dec
xchg
jbe
sbbb
add
sti
xchg
int
push
push
adc
inc
stos
inc
stos
outsb
das
stc
pop
popa
popl
add
or
push
cmc
sub
insl
ret
mov
cmc
mov
or
jo
das
stc
stc
mov
dec
cmp
inc
inc
mov
js
sbb
loopne
shl
aad
add
iret
and
push
movsb
psubusw
dec
lods
jbe
fst
adc
shrb
out
lahf
pop
rcrb
cmp
loop
in
ss
add
bound
mov
mov
ja
cs
mov
sti
push
pop
sub
jno
push
pop
xor
decl
sub
popf
adc
xlat
repz
mov
hlt
fildl
xchg
sahf
cmpsl
sarb
cltd
add
sub
jecxz
stos
pop
idivl
sbb
mov
jno
scas
inc
adc
sub
or
bound
sti
mov
int
test
add
xchg
push
xchg
dec
sti
pop
insb
iret
push
mov
jno
push
lods
sbb
pop
mov
test
jmp
cmp
add
fstps
xchg
push
mov
xchg
das
push
fildl
jne
mov
sub
pop
cmp
enter
out
out
aam
lds
mov
cmp
jmp
mov
into
sbb
lret
sbb
mov
out
inc
scas
lods
or
rcll
sub
jl
mov
call
mov
orb
push
lods
and
mov
cmpb
sbbl
push
pcmpgtd
mov
mov
sbb
or
lret
adc
rcll
xor
int
inc
mov
scas
mov
push
es
fsubrl
or
or
shl
lock
leave
hlt
sub
inc
pop
xorb
lds
pop
xchg
pop
daa
fisttps
mov
sahf
jne
pop
fimuls
mov
aaa
sub
sahf
lcall
jl
int
popl
xchg
xchg
mov
xor
jb
sbb
push
or
clc
jmp
xchg
cmp
hlt
subl
xchg
fwait
decb
out
dec
mov
add
mulb
add
and
lea
mov
stos
cmp
and
xchg
stos
ljmp
jnp
pusha
mov
mov
sbb
scas
jp
or
cld
and
jnp
lea
out
add
jb
fisubl
sbb
adc
jg
pushf
mov
pushf
sbb
loop
sbb
js
push
xor
mov
pop
add
sub
lcall
in
mov
mov
inc
scas
push
add
adcl
andl
lods
jp
jno
jmp
cmp
mov
test
lock
inc
adcb
push
dec
mov
mov
lods
insb
cld
mov
mov
jge
ret
sub
cmp
pop
pop
xor
mov
mov
xchg
pop
lock
shr
test
and
mov
adc
mov
sarb
testl
xchg
iret
fidivs
dec
sub
testb
xor
dec
push
jb
pop
ja
mov
push
xlat
out
and
pop
shlb
mov
pusha
xor
sbb
outsb
rolb
adc
mov
pop
push
in
jp
movsb
test
lret
inc
andb
pushf
repz
mov
jno
xor
sti
xchg
movl
lret
add
jne
and
or
jno
cs
cs
fucomp
push
ljmp
mov
inc
push
inc
and
cwtl
jmp
loope
push
pop
jle
xchg
cmc
mov
fidivl
jb
subl
fistps
fmull
mov
jmp
sub
xorl
das
jle
icebp
sub
mov
cmpsb
fs
test
stos
and
xor
mov
push
dec
fsubrs
or
out
or
add
jmp
call
test
sub
pop
outsb
cmp
leave
lcall
je
mov
push
into
insb
pop
in
test
aas
outsb
jl
nop
int3
ss
push
shlb
insl
mov
mov
dec
xlat
adc
jle
sub
push
insl
in
mov
movntq
dec
cmc
jecxz
or
test
mov
outsl
inc
subl
add
fidivrs
das
cmp
or
xlat
fwait
sub
testl
scas
ret
je
addr16
and
push
shr
mov
mov
arpl
pop
test
sbb
mov
das
fisubrl
mov
stos
fidivs
aam
jno
cld
andl
mov
js
out
pop
inc
fiaddl
call
movsb
repnz
mov
and
or
test
mov
das
scas
imul
xchg
fs
pop
mov
sysret
push
mov
ds
dec
aam
and
sub
out
pop
or
sub
jmp
add
test
mov
mov
cmp
cmp
cmp
mov
cld
lods
xchg
pop
lock
or
mov
push
sub
dec
outsl
adc
sbb
mov
adc
pop
fstpt
pusha
sub
in
movsb
ljmp
incl
or
repz
test
js
cmp
outsb
cmp
xchg
es
addr16
sbb
out
pop
jmp
jnp
adc
pop
cs
pop
pop
movl
add
cmpl
jnp
sahf
lods
adc
addr16
mov
outsb
clc
adc
lea
shr
jne
push
movsl
mov
jo
in
jns
ja
xor
dec
fwait
or
push
bound
push
mov
and
fadds
pop
into
jle
lods
or
insb
xchg
sub
pop
inc
ljmp
sub
or
fdivp
pop
fwait
xchg
out
dec
movsb
fucompp
popl
mov
mov
test
push
popf
and
sub
sbb
add
jge
mov
mov
ret
mov
into
xor
mov
lds
pushf
dec
loope
add
outsb
push
lret
push
push
jmp
outsb
or
and
mov
loop
cld
xchg
push
add
in
and
ja
pop
imul
or
pop
movsb
out
fwait
das
push
pop
sub
jecxz
insb
push
or
and
or
icebp
jecxz,pt
mov
push
add
lahf
or
adc
loop
fdivl
add
out
inc
xlat
or
xor
loop
movsb
adc
jnp
out
jnp
jmp
push
fwait
loope
dec
in
add
ss
push
mov
dec
pusha
ja
rcrl
jae
mov
scas
add
sub
data16
cwtl
push
test
int3
mov
sub
fisubrs
and
sub
fnstenv
testb
enter
mov
inc
sti
add
xchg
jl
dec
xor
shrl
dec
shrl
mov
add
dec
in
push
das
stc
push
jmp
sub
dec
mov
test
xor
fs
adc
shrl
xor
mov
fsubl
push
pushf
cmpsb
xchg
sub
mov
fsubl
lods
cwtl
push
jmp
cwtl
mov
and
cmp
adc
or
add
lret
xchg
shrl
jmp
sub
jle
popa
into
xor
dec
out
jmp
push
out
xor
outsb
fidivrl
rol
pop
pop
jo
in
bound
cmp
repnz
daa
imul
inc
in
shll
pop
mov
mov
stc
shr
loope
lock
cmp
movsl
fsubrl
sahf
idivb
add
and
xchg
dec
rclb
jl
insl
and
movsl
pop
int
adc
js
cmp
lahf
scas
inc
rorl
jbe
or
ja
test
mov
daa
leave
clc
jo
sub
sub
dec
enter
push
mov
mov
add
cltd
loope
ficoms
mov
aaa
pop
sbb
dec
fs
aad
test
dec
mov
ret
hlt
test
out
rcll
xor
pushf
lea
and
sbb
jo
and
mov
push
sub
xchg
adc
daa
mov
pop
sahf
add
xor
pop
and
fildll
lahf
addl
xlat
insb
inc
inc
cmp
or
push
int
adc
fwait
rcrl
inc
lcall
mov
mov
adc
mov
arpl
test
mov
xor
shll
dec
jge
add
fwait
xor
push
adc
or
inc
xor
fs
jnp
leave
sbb
mov
ljmp
lods
inc
jg
jno
cmp
cmp
jae
pop
lret
decl
dec
popa
or
sub
jne
out
in
and
pusha
fldl
jo
scas
cmpsl
sub
test
lods
mov
fidivs
clts
pop
clc
aas
stos
dec
mov
pusha
aas
xchg
aam
sub
es
lcall
push
lahf
mov
mov
aaa
or
jp
pop
dec
adc
or
clc
dec
fsubrs
imulb
or
pop
lret
and
ss
jge
add
or
adc
arpl
jmp
push
ror
in
lret
jae
pushf
inc
sbb
mov
fwait
aas
aaa
inc
adc
aam
jp
xor
mov
mov
mov
push
loopne
test
adc
fnstcw
jg
push
mov
aam
leave
stc
xchg
xor
xchg
bound
cmp
mov
scas
inc
loope
adc
sbb
cli
leave
add
add
fld
roll
mov
adc
push
sti
mov
hlt
in
and
add
out
add
jbe,pn
sub
sub
scas
aaa
into
push
mov
mov
jecxz
dec
loop
xorl
inc
out
icebp
clc
test
jle
jecxz
sti
shll
rclb
xorl
sub
daa
add
icebp
enter
or
add
sbb
add
cmpsb
xor
or
out
jp
and
cmp
add
adc
es
adc
shrb
mov
inc
and
fiaddl
aaa
fnsave
pop
out
popa
sarl
sti
pop
xor
mov
add
jno
or
in
jnp
shlb
lods
mov
cltd
push
dec
mov
mov
adc
mov
add
inc
fldt
int
mov
fstl
xor
adc
aas
sub
fidivrs
inc
pop
js
mov
lcall
cmp
jg
lcall
mov
call
pop
pop
push
bts
xchg
flds
into
push
mov
arpl
daa
ja
pop
jecxz
mov
or
add
mov
pop
aas
sub
sbb
adc
push
jmp
test
dec
scas
ret
or
mov
ljmp
gs
push
outsl
jb
mov
fsub
inc
leave
xchg
js
pop
shl
sub
push
pop
cmp
mov
jo
xorl
adc
stos
add
jno
das
adc
inc
jle
out
lcall
push
add
cmc
jg
andl
xchg
mov
icebp
adc
call
bnd
mov
loopne
jns
pop
mov
cmp
cmp
daa
ret
in
jne
cmpsl
add
in
fstpl
push
out
jl
adc
xchg
mov
or
insb
add
xchg
call
movsb
mov
les
in
insl
int
insl
lret
test
addr16
push
jmp
out
test
xchg
add
nop
daa
loopne
sub
push
add
loopne
push
leave
pusha
xchg
jbe
mull
mov
add
insb
xor
sbb
icebp
fwait
imul
push
xrelease
ret
jnp
add
jae
sbb
jle
add
jge
sbb
pop
lods
imul
pop
popf
xchg
or
cld
mov
jge
dec
mov
ret
insb
cmp
xor
mov
xchg
imul
std
std
mov
in
xor
push
cmp
pop
inc
loop
xchg
mov
xchg
mov
mov
rorb
cmpsl
in
and
out
int
xchg
out
mov
cmp
andl
repnz
cld
push
icebp
push
jb
cmp
ja
mov
test
mov
stos
test
adc
inc
lret
adc
sbb
sbb
movswl
subb
adcb
movsb
fs
xor
icebp
sub
jb
iret
push
das
shll
fdivs
or
sbb
add
and
jae
add
pushf
push
xchg
xchg
ja
fmulp
sub
lods
daa
xchg
jns
lea
out
xchg
adcl
imul
mov
jge
bound
mov
xlat
add
mov
jmp
mov
add
fstpl
sbb
sbb
adc
nop
jl
ret
or
andl
fiadds
and
pop
fcompl
pop
jb
test
sbb
aas
ret
das
cwtl
loop
mov
lea
int3
add
ss
sbb
je,pt
mov
mov
imul
pop
mulb
and
adc
andb
cmp
add
sahf
jle
arpl
aad
lret
jg
loopne
std
ret
fisubs
pop
iret
data16
jge
insl
mov
push
sub
mov
xchg
sbb
jp
mov
sub
jnp
divl
mov
xor
sbb
lods
fndisi(8087
popa
xlat
jb
pop
test
or
fldcw
pusha
add
stc
subb
push
mov
xchg
loop
and
cmp
mov
out
mov
sbb
pop
mov
cmp
mov
loope
push
pushf
inc
sti
push
stc
lods
lds
jns
outsl
stos
dec
fcoms
or
mov
mov
push
or
and
mov
xchg
out
xor
in
xchg
cli
adc
addps
ljmp
stc
aam
cmovge
or
stc
pop
push
lods
call
rolb
cltd
mov
xor
data16
push
fs
mov
test
push
xchg
pop
call
adc
stc
adc
mov
je
js
jmp
adc
call
fwait
test
adcl
xchg
repnz
push
das
jae
push
movsl
dec
push
ret
fiadds
out
insl
add
orb
dec
testb
in
and
fidivl
mov
mov
mov
jnp
adc
ret
inc
fwait
loop
mov
mov
jmp
cmp
aas
adc
inc
xor
pushf
and
pop
dec
outsl
xor
jo
out
sti
lcall
push
movsb
es
sti
std
movsl
or
adc
in
and
js
adc
cld
int
out
ja
or
or
dec
pop
jnp
out
cwtl
insb
mov
bound
or
loopne
in
icebp
or
ja
lods
mov
jp
cltd
test
leave
shlb
subb
jp
and
aaa
pusha
movl
mov
jne
xor
loopne
frstor
in
or
mov
xchg
sbb
push
add
sbb
iret
dec
mov
mov
lret
dec
pop
and
or
pop
lahf
ljmp
in
repz
push
or
cmp
sarb
jge
cmp
fwait
xchg
dec
nop
mov
aas
test
lret
lods
ljmp
cld
dec
fdivl
popf
icebp
jno
repz
iret
rcrl
xor
add
xor
and
mov
jp
ds
jge
and
insl
lock
mov
cmp
cmpsl
pop
imul
ljmp
xchg
mov
mov
int3
bound
jecxz
pushf
xchg
push
mov
mov
es
std
push
mov
addb
mov
mov
scas
js
sbb
inc
sub
push
loopne
pushl
cmpsl
cltd
repnz
outsl
adc
sbb
fnsave
mov
sbb
xchg
lea
pop
mov
popa
cs
mov
shll
call
in
or
xchg
test
inc
mov
cltd
xchg
mov
mov
rcll
pop
shl
insl
jg
adc
mov
cmpsb
in
mov
std
enter
dec
pop
mov
inc
test
xchg
test
inc
pop
push
mov
mov
cwtl
dec
ror
xor
jns
push
inc
test
ret
inc
jmp
fnstsw
and
dec
pop
xchg
add
pop
aas
mov
inc
movb
or
pop
fcomi
je
xor
or
jecxz
mov
adc
dec
inc
push
lods
cmp
mov
dec
pop
mov
loope
gs
arpl
enter
je
imul
ljmp
inc
adc
movsb
fwait
sbb
repnz
loop
mov
jp
jecxz
jl
mov
sbbl
setge
fidivrl
and
push
inc
negb
bound
adc
fwait
inc
xchg
imul
aam
orb
dec
stc
or
js
in
mov
scas
mov
bound
lods
and
sub
in
das
ss
lret
adc
inc
fcoms
adc
xor
fucomp
movsl
dec
add
shrl
sti
or
inc
ret
cmpsl
jb
adc
xor
xchg
xor
rorl
sub
xchg
xlat
je
aas
ss
jmp
push
xchg
aad
sbb
sub
test
repz
das
mov
inc
push
dec
mov
in
add
pop
xor
or
add
call
xchg
push
and
les
test
dec
sti
sbb
mov
mov
push
push
insl
std
jo
pop
jmp
xor
aad
fstl
cmp
decl
insl
inc
in
mov
call
ret
xchg
insl
mov
push
scas
mov
jbe
daa
xchg
out
xor
sbb
cld
test
outsl
and
rcpps
lock
pop
dec
mov
push
pop
rol
push
rorb
sbbb
ret
pop
xor
mov
inc
and
push
mov
int3
popa
push
or
xor
aas
out
xchg
pop
mov
lock
add
xor
and
mov
xchg
outsl
pop
sbb
xchg
repnz
push
and
push
push
or
mov
xlat
outsb
mov
sbb
mov
call
cs
adc
sbb
xor
and
outsb
fdivs
sub
pop
aad
xchg
mov
fs
fsts
and
leave
loopne
lds
xchg
add
inc
cs
pop
bound
pusha
cmc
arpl
daa
sub
pusha
frstor
test
sti
pop
sub
xchg
bound
shlb
xchg
addr16
shrl
js
dec
xchg
test
rcll
popa
stos
cmp
sbb
inc
mov
aas
dec
adc
jns
out
cmp
mov
sbb
stos
adc
or
mov
in
loopne
xchg
mov
aad
mov
mov
js
jecxz
cmp
cmp
lcall
mov
pop
push
mov
rcl
jl
stc
mov
and
add
in
int3
xor
daa
out
je
lods
stos
ljmp
ljmp
cmpsb
dec
inc
cmpsl
cmp
inc
mov
push
mov
outsb
sub
shrl
test
cmp
cmpsb
je
mov
incl
or
cs
mov
lds
repnz
stos
cli
stos
out
inc
cmp
stc
cmp
sub
cmp
int
test
add
mov
in
sub
cmc
push
add
repz
cmpsl
sub
pop
jnp
stc
subb
lock
or
in
xchg
lods
movsb
enter
movsl
outsl
sub
xchg
test
mov
mov
push
fwait
lods
int3
pop
fnsave
and
lods
sti
pop
inc
enter
ja
cwtl
test
adc
xchg
pop
and
addr16
nop
pop
repnz
inc
test
mov
cmp
arpl
xchg
sbb
insb
sarl
mov
mov
fidivrs
nop
daa
jno
cld
mov
sbb
outsb
mov
cmp
jle
adc
or
clc
dec
out
dec
repnz
or
stos
add
sub
icebp
jae
push
cmpb
insb
out
insl
xchg
jle
mov
popa
sub
push
jg
cmc
aaa
lea
dec
dec
xchg
push
pop
push
jmp
inc
fs
and
mov
fldenv
inc
stos
dec
pop
jp
jns
int
sub
inc
mov
dec
or
jle
pop
push
out
int3
lahf
das
mov
xlat
xchg
sbb
ja
enter
repnz
popa
mov
adc
sub
loop
fcomi
stos
mov
xchg
scas
cmpsl
rolb
out
add
inc
sahf
mov
sbb
out
lods
push
xchg
xchg
lods
inc
call
stos
xor
js
add
add
test
xlat
gs
cmc
dec
clc
inc
cwtl
stos
add
outsb
dec
sub
dec
in
cmpsl
nop
insb
pop
lock
pushl
or
mov
scas
or
mov
dec
pop
cs
xor
pop
add
shr
stos
mov
cmpsl
xor
daa
push
jle
aaa
dec
mov
add
ret
jle
mov
mov
aaa
incb
fldcw
aaa
gs
insb
psrad
hlt
rcll
adc
loopne
outsl
sub
xlat
lret
mov
sbb
bound
scas
jnp
loop
sbb
cmp
mov
rcl
add
lret
push
adc
iret
aas
dec
xlat
mov
pop
inc
pusha
lret
repnz
repz
cmp
stc
adc
sbb
jge
jl
pop
shr
mov
stos
movsb
notl
jp
cmpsl
jbe
xchg
frstor
dec
adc
mov
mov
enter
jnp
dec
ficompl
jle
and
pop
imul
xchg
jle
shrl
jle
inc
das
xchg
and
movsl
testl
xchg
adc
pop
push
lock
push
inc
or
push
xchg
adc
mov
dec
add
out
inc
push
adc
aaa
pop
and
adc
cltd
arpl
outsl
into
test
xor
into
out
aaa
popa
pusha
mov
jno
enter
adc
sbbb
out
jl
add
pop
ljmp
lock
pusha
and
call
cs
int
inc
mov
pop
push
fcmovnbe
das
lahf
mov
or
shrb
push
test
xor
insl
fldz
or
add
jge
jbe
fnsave
xchg
pop
test
lods
ds
out
push
and
inc
in
mov
pop
sarb
rorb
lea
cmp
loope
scas
inc
lock
adc
in
icebp
mov
outsb
cmp
out
add
repz
stos
ljmp
mov
imul
idivb
aaa
frstor
jne
aam
adc
adc
xchg
loop
or
roll
cltd
andl
pop
adc
mov
rcll
rcl
cmc
stc
fildl
push
xchg
inc
lock
xchg
dec
pop
iret
push
clc
cwtl
scas
call
sub
pop
lods
pop
jb
daa
fs
sbb
bnd
jo
jae
shll
push
xchg
scas
insb
rcl
out
bound
int3
loopne
adc
orb
jmp
call
in
mov
aaa
call
and
push
mov
cmc
sbbl
jne
or
jae
pop
enter
subb
aas
int3
or
pusha
fs
and
data16
adcb
mov
in
sahf
popf
xor
push
jbe
in
cmpsl
je
adc
arpl
lea
jae
adc
push
fnstenv
cld
jg
movsl
mov
and
add
fdivs
arpl
lock
test
ja
test
incl
dec
mov
ficompl
jle
mov
cmp
lahf
jl
mov
sbb
or
jle
stc
pop
jp
jle
or
push
iret
sbb
mov
sub
sbb
mov
push
imul
and
outsb
push
dec
xor
or
push
pop
or
xor
dec
je
mov
xor
mov
adc
pop
sarb
dec
mov
adc
jbe
test
cmpsb
insl
xchg
mov
or
xchg
xchg
mov
push
fisubl
lret
subl
out
cld
adc
xor
adc
add
pop
scas
cld
int
mov
scas
and
pop
jg
or
xor
pop
js
js
dec
xor
insl
push
add
jmp
push
inc
dec
xor
in
out
pop
cmp
xor
les
inc
dec
or
arpl
and
cmpsl
aad
insl
mov
sbb
scas
hlt
jl
sbb
mov
shlb
sbb
cmc
into
push
test
jge
add
nop
out
das
fdivs
mov
jns
jg
dec
es
jns
add
in
pop
movsl
adc
dec
cltd
sub
test
dec
dec
mov
bound
sub
scas
sub
xor
nop
in
ret
cmp
jecxz
out
stc
dec
addr16
fs
aad
je
jg
test
dec
mov
inc
gs
dec
into
mov
xchg
add
jnp
pop
and
or
idiv
lret
imull
cmp
mov
insb
je
sub
adc
int3
scas
sbb
addr16
sbb
xor
sub
jecxz
sbb
xor
cwtl
cs
sub
pop
cmpsb
xor
jae
ds
sub
xor
enter
add
dec
mov
ret
testl
int
inc
dec
add
lret
fstl
or
sbb
lea
sar
push
sub
inc
fdivr
icebp
cmc
les
sbb
xor
pop
fs
popa
push
mov
out
test
cmp
mov
lcall
jne
xor
scas
mov
sbb
ja
mov
adc
lock
and
test
mov
enter
stos
jge
and
mov
arpl
inc
xchg
inc
push
js
xchg
loop
shlb
stc
sarl
in
std
sub
push
test
psllq
in
cmp
lock
sbb
pusha
ret
xchg
pop
imul
je
mov
mov
pop
aaa
jnp
mov
mov
shl
sbb
xor
jp
cmp
xchg
xor
xorb
mov
fsubl
mov
scas
inc
mov
sti
push
mov
out
enter
test
scas
xlat
and
xchg
xchg
scas
xor
sub
sbbb
mov
pop
and
mov
inc
jecxz
sbb
enter
daa
push
stos
adc
aas
stos
inc
jno
lret
push
push
call
push
push
mov
mov
aad
sub
add
pop
adc
rclb
xchg
ja
fwait
aas
push
mov
xor
fisttpll
push
dec
add
mov
pusha
js
rorb
dec
mov
jg
adc
jae
push
sub
dec
or
mov
jnp
scas
outsb
sbb
cwtl
stos
push
in
mov
dec
movsl
or
sbb
dec
fs
push
je
mov
and
inc
dec
push
mov
push
repnz
pop
shlb
imul
sub
push
iret
push
xor
lods
jl
rcrb
insb
shlb
dec
sti
xchg
push
push
aas
adc
or
jbe
dec
and
dec
mov
lods
std
cltd
cs
shrl
je
push
mov
dec
lock
jnp
sbb
jae
sti
mov
inc
fs
mov
lea
sub
das
or
lret
pop
mov
mov
xchg
test
lret
jnp
andl
ret
mov
push
xor
cld
mov
sbbl
inc
dec
inc
stc
cwtl
shll
sub
mov
divl
adc
and
scas
data16
test
stos
add
push
jb
cmp
jecxz
in
jp
cltd
jns
aas
mov
pop
sub
jmp
test
push
outsb
inc
mov
mov
push
jg
sub
push
fldt
xor
cmp
gs
sbbl
popf
stc
in
xor
xor
mov
repnz
aas
add
cld
dec
add
xor
inc
pop
test
lea
lahf
loopne
xchg
cmp
bound
scas
insb
jge
and
es
mov
test
push
xor
pop
cltd
out
repz
jp
mov
sub
shl
push
jno
inc
lret
jnp
fbstp
ret
add
cs
ljmp
mov
mov
inc
xlat
andb
jbe
daa
sti
mov
cld
xchg
fidivrl
repz
movsb
lds
mov
outsl
fldt
mov
addr16
cmp
popf
jne
ret
mov
sbb
sub
js
lahf
adcl
xchg
or
mov
mov
aad
call
fildll
int3
fldenv
mov
or
jns
lcall
rcr
xor
clc
js
into
jmp
iret
popa
push
push
push
and
cmpsl
sbb
mov
push
or
push
jecxz
mov
movsl
lds
or
adc
ret
cld
shl
sbb
cmp
mov
mov
cltd
scas
pop
sarb
pop
pop
adc
mov
inc
add
jb,pt
movsl
push
js
push
mov
push
repz
cmp
jne
mov
repz
push
jge
sbb
fistps
inc
and
push
push
loopne
pop
outsb
add
rcrb
inc
xlat
cmp
bound
les
aam
push
pop
adc
add
ror
lea
and
inc
rorb
pop
jmp
jne
loop
xchg
inc
loope
push
leave
shl
dec
and
cmp
scas
inc
into
mov
int
gs
dec
and
inc
xchg
outsb
dec
pop
lods
inc
cmc
mov
arpl
mov
movsb
out
mov
mov
mov
sti
arpl
cmp
mov
insb
je
stos
xchg
popf
push
mov
and
mov
out
xor
pop
adc
aaa
enter
cwtl
xchg
pop
push
adc
imul
call
xchg
in
pop
sub
mov
xor
sub
push
outsl
popf
lods
sar
xlat
iret
dec
cmc
adc
xor
dec
jmp
adcl
xor
xor
sbb
loope
in
data16
scas
out
xchg
loop
subb
adc
int
iret
arpl
testb
sub
pop
cli
je
add
pop
ficoml
dec
xor
and
xchg
ljmp
pusha
adc
xchg
pop
mov
mov
int3
sahf
in
mov
int3
repz
and
cwtl
ret
lahf
dec
fucomp
arpl
popf
enter
mov
shlb
inc
gs
call
xchg
arpl
xchg
loop
lods
divl
outsb
add
in
mov
out
push
lret
and
pop
pop
sub
jno
cmc
ret
pop
xor
sub
nop
mov
jge
push
xor
rorl
loop
mov
lock
lcall
popa
jbe
xor
ljmp
inc
arpl
fs
pushf
roll
setp
ret
mov
addb
pop
adc
mov
test
lcall
add
mov
js
jg
mov
out
sbb
lahf
cmp
cmc
divl
jge
push
xchg
ret
jg
js
mov
je
dec
into
jbe
ret
es
inc
push
aaa
add
das
ljmp
bound
outsb
ljmp
jbe
mov
sbb
or
fdivl
inc
adc
inc
sub
stos
call
dec
leave
pop
fwait
mov
add
pop
lods
movsb
sub
mov
leave
adc
popa
and
pushf
or
adc
sahf
xchg
aaa
cmp
lds
cmp
xchg
dec
aad
jge
ret
pop
mov
dec
mov
xor
mov
test
mov
or
pop
push
popf
cmp
mov
ret
push
cwtl
aaa
test
cwtl
je
lods
push
aas
sbb
adc
xor
movsl
cmp
inc
push
cmp
rolb
or
movsl
xchg
mov
xchg
pop
pop
jne
xchg
xchg
sbb
call
insb
repz
in
sbb
test
adc
mov
cmpl
mov
mov
sarb
inc
xor
sub
push
sbbl
mov
add
add
push
mov
or
dec
dec
les
dec
and
fidivrs
push
dec
into
aad
cld
dec
in
add
insb
jl
sub
cmp
movsb
mov
push
das
ja
sti
push
dec
inc
add
jbe
dec
das
test
aam
jno
subl
cmp
xor
lahf
and
cmp
dec
fidivs
shrl
sub
leave
cs
call
ret
xor
or
mov
imull
out
xor
rcrb
test
push
push
out
shll
add
es
out
clc
lret
push
xor
lods
cli
and
arpl
cwtl
push
mov
je
push
dec
sbb
lds
and
ret
pop
xchg
mov
scas
aam
repz
cmp
mov
cli
xchg
sub
adc
sub
and
mov
loopne
mov
lret
scas
call
ss
adc
mov
push
inc
adc
filds
xchg
add
or
mov
xchg
sub
into
jecxz
rcll
xchg
inc
loop
xchg
dec
fcomi
mov
push
fnstenv
int
pop
jmp
int3
and
mov
mov
loopne
jo
fcmovne
popa
int3
push
xor
inc
roll
add
dec
dec
int
lods
inc
shrb
daa
lret
ja
cmpsb
mov
pushf
enter
fidivs
xor
mov
pop
adc
clc
push
or
sbb
testb
xor
add
mov
clc
inc
fidivs
sbb
sbb
mov
cmp
xor
mov
inc
mov
ret
pop
jbe
add
ret
sbb
lea
pushf
fbstp
lock
jmp
push
adc
xor
jne
xor
stos
pushf
xor
loope
mov
int3
cmc
inc
push
cmp
pushf
xor
jbe
pop
sbb
adc
inc
xlat
mov
xor
fisubl
stos
sbb
sub
xor
imul
out
xchg
cmp
repz
dec
in
adc
insb
add
add
les
or
sub
dec
jecxz
stc
xor
sub
fdivl
loop
pop
adc
cli
xchg
lods
dec
cli
xchg
sbb
prefetch
or
cs
sub
inc
jp
mov
cmpsl
stos
xor
fmul
scas
inc
cli
std
dec
in
loop
push
xchg
pop
daa
mov
in
inc
cmp
xor
xlat
outsb
and
inc
addl
arpl
jo
push
mov
mov
je
jno
inc
fisubs
outsl
sub
mov
fimuls
xor
inc
ds
push
out
cmp
outsb
add
lds
clc
jno
rclb
jle
movsl
dec
fidivs
pushf
xor
gs
xchg
or
cltd
or
dec
xchg
sub
mov
int
lods
insl
and
xor
sub
mov
pop
and
daa
lods
inc
pop
adc
push
jp
popa
mov
fwait
xor
in
cmc
push
or
inc
pusha
sub
lret
mov
sti
xchg
push
hlt
jo
es
sbb
jns
aaa
into
outsl
hlt
mov
lret
add
push
lods
adcb
mov
or
pop
outsb
add
inc
fcomi
lea
cwtl
or
int
sahf
xor
dec
sbbb
fwait
pop
hlt
rol
je
testl
cwtl
das
sbb
add
mov
les
cmpsb
stos
inc
aam
or
cmp
loop
sub
cmp
inc
insb
jae
push
stos
mov
and
cmp
fidivs
sub
pop
inc
pop
jbe
pop
cmc
mov
push
mov
lods
jbe
fidivrl
inc
fdivrs
or
hlt
cmp
xchg
pop
mov
push
mov
mov
pop
icebp
enter
cmp
incb
movsb
cmp
jae
roll
outsb
add
shll
adc
daa
popl
xchg
rorb
jge
mov
cmp
insl
lods
push
in
fisubl
ret
jge
inc
fdivl
or
fbstp
mov
dec
jmp
loope
push
pop
movsl
aas
rcrb
in
mov
fwait
dec
mov
hlt
or
enter
shl
dec
in
add
ss
pop
repnz
cmp
sub
aaa
bound
insl
insb
rcrl
mov
push
std
xchg
jns
mov
push
jne
mov
test
jb
mov
or
inc
mov
xchg
sbb
push
cmp
cli
push
jbe
xor
lret
add
les
xchg
xor
les
and
mov
leave
pusha
imul
pop
notb
loopne
xor
or
fstpt
pop
push
in
nop
xor
jnp
or
fs
cmpsb
inc
fnsave
xor
fnstenv
cmp
adc
sub
fists
cld
xchg
dec
or
ja
test
xchg
mov
xchg
arpl
inc
fimuls
and
mov
shl
mulb
test
adc
cmp
pop
mov
cmpsb
mov
mov
pop
repz
in
jmp
sbb
sbb
out
rorl
sub
inc
jg
jae
lret
ja
jle
aam
pop
add
xor
jge
inc
fisttpll
mov
mov
mov
lahf
ss
inc
push
outsl
repz
movsl
cmp
adc
inc
inc
iret
data16
in
mov
sbbl
mov
repnz
sub
out
rcrl
lahf
sbb
into
xchg
pusha
mov
clc
or
out
or
into
xchg
cmp
ret
idivl
mov
lret
bound
mov
push
in
push
jmp
stos
inc
leave
pop
mov
nop
movaps
or
inc
dec
loopne
insb
xchg
test
mov
cwtl
das
js
cmp
inc
jno
mov
mov
int3
arpl
testl
push
dec
je
jnp
mov
into
enter
out
cmpsl
ds
inc
cmp
jae
test
je
push
out
shrl
lahf
loop
pop
enter
dec
push
in
jl
jbe
adc
adc
dec
movsb
cmp
fimull
pmulhw
adc
pop
dec
lods
inc
sbb
pop
notb
pop
or
lea
stos
jle
dec
jecxz
push
dec
jecxz
xor
repz
out
inc
adc
push
xchg
inc
jno
dec
fcomip
addr16
sub
les
ret
cwtl
das
jae
dec
loope
imul
nop
daa
int
lods
inc
lock
lret
bound
das
int
jmp
push
dec
push
in
addl
lret
imul
adc
push
inc
andb
mov
out
leave
cmpsl
ret
pop
aad
js
dec
add
inc
fxch
and
pop
push
xchg
sub
mov
test
mov
add
lret
push
mov
test
push
jmp
push
lea
sbb
mov
cmp
pop
sbbl
mov
scas
shrl
or
adc
inc
sub
fs
nop
fsubrs
adc
rolb
dec
dec
xchg
jg
les
xchg
sub
or
ret
arpl
adc
cld
push
pushf
jg
lret
hlt
mov
mov
dec
movsb
cmp
rcrl
mov
sbb
push
and
pop
xorb
mov
mov
outsl
out
outsb
add
and
add
pop
cmp
subl
or
inc
movsb
enter
xor
add
and
pop
mov
out
es
inc
fdivp
push
leave
pusha
cmp
stos
xor
test
mov
repz
sub
test
test
inc
ficoms
adc
mov
dec
xchg
in
ret
pushf
add
inc
sbb
dec
mov
rolb
xchg
cmp
xor
std
popa
loop
push
sbb
stc
cmpsb
dec
sbbl
jmp
divl
or
mov
cmp
lahf
insb
pop
cmp
mov
loope
rcrl
or
sbb
and
loop
adc
jecxz
dec
cmp
jp
fdivl
push
push
cli
mov
cli
xchg
push
jmp
sbbl
mov
xchg
ret
sbb
dec
in
xor
insb
out
lcall
cltd
lock
xchg
in
jbe
pop
mov
pop
icebp
jno
in
and
inc
jne
js
or
cwtl
xor
ss
out
jle
xchg
mov
cltd
mov
rcrl
das
add
inc
xchg
and
rclb
pop
in
rcrl
loope
das
mov
jecxz
bound
sbb
xor
add
ret
cmpsl
cmc
mov
sbb
push
movsl
inc
xchg
lods
inc
ret
mov
hlt
mov
jae
inc
xchg
ds
lahf
leave
pusha
int
xsha1
cmpsb
dec
adc
push
dec
xchg
inc
faddp
xchg
stos
inc
leave
jecxz
cld
sbb
and
mov
push
out
sti
loopne
in
jecxz
movsb
sbb
rolb
fstpl
mov
fs
clc
xchg
push
xor
xchg
std
xchg
cli
mov
loop
dec
adc
adc
xchg
xor
add
popf
jmp
xchg
idivl
inc
cld
into
mov
xor
sub
cmp
jo
dec
push
mov
stc
or
aaa
push
loopne,pt
mov
adc
test
addr16
push
add
cmpsl
xchg
xchg
mull
addb
mov
sbb
inc
cwtl
dec
shrl
and
cwtl
push
jge
mov
dec
inc
push
xchg
push
pop
jo
pop
dec
jne
push
xor
jecxz
dec
cwtl
cmp
jnp
cmpsl
dec
insb
inc
stos
cmp
loopne
pop
xor
pusha
sbb
fstpl
adc
sub
in
mov
or
or
jns
ficompl
push
in
imul
ljmp
or
out
loopne
test
int
fadd
lods
pop
mov
push
adc
adc
sbb
cli
cmpsb
cmp
mov
dec
les
or
movsb
bound
mov
addr16
jns
inc
shlb
mov
scas
cmp
sbb
xchg
adc
push
cmpsl
sbb
push
stos
jmp
lea
xchg
mov
inc
push
mov
fnsave
cli
out
xor
mov
sti
sub
mov
cmp
stos
loopne
add
cmc
sbb
lock
xchg
repnz
mov
or
imul
push
out
std
and
pop
idivb
pop
aam
popw
cmpl
jnp
js
das
dec
jp
popa
imul
inc
cmp
mov
mov
cmc
sbb
mov
test
out
sub
pop
sahf
inc
icebp
mov
cmp
enter
mov
jno
aas
cmpl
in
popf
imulb
in
mov
xor
pop
sbb
cmp
cld
xchg
mov
faddl
fsts
or
pushf
mov
xor
neg
inc
enter
cmp
ret
cmp
cld
aam
shll
fbstp
scas
lods
pusha
add
dec
dec
mov
dec
scas
inc
add
fs
test
mov
out
repnz
pusha
lcall
jne
ss
jns
inc
cltd
into
inc
add
loopne
and
push
mov
fildl
cmpsl
bound
stos
xchg
push
leave
das
out
xchg
loop
jecxz,pn
lods
push
sti
aas
dec
xchg
mov
and
into
jp
aas
aam
fwait
push
lods
and
sbb
ret
into
pop
xlat
pushl
call
or
adc
sti
sti
sub
lods
pop
jmp
std
repz
loopne
mov
mov
xchg
mov
clc
ds
jo
mov
pop
scas
loope
imul
pop
orl
inc
push
addl
jae
mov
fwait
pop
rclb
mov
pop
sub
pop
mov
mov
sbb
pop
lods
clc
and
dec
fisttpll
mov
cmp
pop
mov
push
testb
push
and
and
divl
jl
clc
mov
xchg
btc
add
inc
mov
enter
add
dec
mov
sbb
jo
cmc
xchg
xor
or
sahf
adc
orb
cmp
loop
inc
subb
popa
mov
push
stos
dec
mov
cmp
dec
sarb
xor
sbb
cmp
mov
mov
test
outsb
in
arpl
xchg
scas
mov
mov
add
mov
mov
dec
sti
leave
push
sarl
ret
inc
ret
rol
mov
call
mov
mov
or
sahf
xchg
repz
jno
data16
insl
fwait
ljmp
adc
cmp
add
scas
or
sub
mov
cmp
nop
std
sub
push
jge
dec
aam
push
rcll
daa
movl
adc
push
dec
bound
dec
adcl
pop
dec
movsl
push
pop
and
ds
js
cmp
push
mov
add
inc
cltd
addb
aam
nop
call
mov
in
orl
push
int
xor
fnstenv
sub
add
es
sbbb
fs
add
xchg
notl
and
or
mov
jge
lds
adc
movsb
bound
push
mov
sub
insl
push
dec
dec
lds
scas
pop
cmp
xor
mov
jb
add
lea
lea
jns
fwait
test
in
push
cmp
inc
jbe
add
sbb
cmp
std
inc
jb
and
inc
cmp
push
ja
or
dec
xchg
push
or
cmp
push
mov
movl
or
mov
ret
fldenv
jnp
les
dec
filds
lahf
mov
jnp
js
or
pop
or
movsl
push
xor
jmp
dec
mov
push
pop
jne
dec
jbe
pop
bound
mov
mov
push
in
stos
push
or
loopne
fadd
mov
inc
mov
pop
test
push
movb
inc
std
mov
mov
clc
mov
jb
into
jbe
rcll
cmp
repnz
mov
cld
ss
or
or
pop
lods
lret
ljmp
mov
hlt
addr16
xor
push
inc
mov
mov
ja
dec
or
lods
jne
push
adc
nop
sbb
movsl
pushf
cmp
xchg
jge
lods
adc
pop
divb
pop
push
pop
out
loope
pop
daa
mov
adc
enter
and
sub
jns
in
test
pop
adc
imul
xor
jge
jg
in
jg
addr16
push
xor
cld
pop
inc
sbb
pop
mov
out
mov
mov
std
cwtl
js
adcl
mov
add
jns
repz
imul
or
mov
inc
xlat
adc
adc
xchg
and
pushf
insl
int
sarl
test
shrl
nop
sub
adc
add
cmp
cmp
adc
lret
sub
or
or
xor
cwtl
adc
dec
jne
cld
pop
and
xchg
arpl
pop
ret
jp
in
cs
mov
repz
jl
loopne
nop
arpl
push
xor
jne
cmp
mov
fists
stc
inc
fisubrs
cmp
sub
or
xchg
repz
in
add
cmp
dec
rcr
jg
cld
inc
leave
or
dec
or
lods
dec
sbb
lock
ret
shlb
imull
jbe
cmp
loop
repz
xor
mov
and
mov
mov
mov
dec
daa
xchg
mov
clc
shrl
push
js
outsl
lret
int3
arpl
cmp
es
imul
outsl
xchg
jp
test
scas
inc
push
xchg
lret
inc
add
xorl
mov
scas
inc
jge
dec
outsl
addr16
xchg
lcall
lods
xchg
jno
aad
dec
mov
or
das
pop
leave
jno
je
ret
pushf
mov
aaa
out
mov
jnp
mov
out
jg
mov
push
lods
and
dec
in
inc
mov
divb
cmc
xchg
pusha
mov
sbbl
xor
xor
mov
mov
fbstp
lcall
jnp
inc
xchg
aad
ffreep
inc
out
inc
sub
mov
push
shrb
std
int3
xor
jle
hlt
dec
enter
push
add
mov
xor
mov
roll
jae
sarl
push
inc
movsb
movsl
pop
pushl
mov
sub
add
inc
ret
sahf
mov
scas
cmp
sub
les
mov
sub
and
inc
xlat
cmc
inc
inc
into
pop
mov
ds
adc
test
mov
call
adc
xor
rcrb
jb
lods
xchg
repz
mov
cmc
xchg
cs
les
out
add
lcall
jmp
movsl
in
and
mov
or
or
add
loopne
push
dec
popa
xor
xlat
push
xchg
push
popf
mov
sbb
inc
jle
insl
sarb
mov
imul
aas
add
sub
cmp
adc
xchg
popf
lret
adc
push
ja
ficoms
cmp
push
test
inc
xor
mov
xchg
pop
push
sahf
xchg
xchg
push
insl
mov
push
jno
or
pushf
int3
inc
sbb
ss
popa
ficoms
sub
mov
pop
mov
scas
jae
nop
cmc
daa
das
cmc
scas
aas
push
push
fildl
xchg
and
pop
stos
inc
push
dec
stos
pusha
pop
pop
mov
pop
dec
jbe
pusha
dec
bound
pop
pop
cmp
pop
sbb
and
push
out
and
xor
push
cmp
jb
xor
cmpsb
ja
push
mov
pop
inc
dec
shlb
inc
lds
cmp
push
dec
aaa
fcoml
out
push
pop
pop
cmp
aas
lcall
jp
fiadds
or
sub
loop
xchg
jle
xchg
dec
mov
cmp
popa
arpl
add
scas
popa
cwtl
std
xchg
lret
mov
shll
fwait
imul
mov
adc
jb
cwtl
xchg
sbb
addr16
aaa
imul
pop
mov
fadds
test
xchg
mov
mov
mov
out
movb
aas
sti
mov
int3
cmp
out
sbb
in
sti
sub
fmul
inc
out
fwait
xchg
xchg
stos
mov
idivb
mov
test
push
push
sti
pop
mov
push
add
xchg
pushf
in
sbb
rorl
imul
mov
push
add
fwait
cmp
jbe
xor
push
mov
and
cli
pop
inc
mov
mov
pop
jno
in
mov
ret
pop
lret
jne
iret
into
or
xor
popf
movl
jbe
jns
lods
cli
andb
iret
inc
int3
aam
jl
lret
popf
xlat
xchg
pop
jecxz
mov
scas
mov
sub
jp
mov
mov
cmpsl
js
nop
mov
jle
push
sub
push
ja
dec
aam
and
pop
xchg
es
mov
add
pop
shlb
shlb
negb
test
lods
in
inc
add
clc
das
and
es
inc
enter
push
xchg
push
add
loope
aam
das
in
sbb
fcomi
cmp
in
std
sub
scas
rclb
shrl
jns
jb
mov
cs
push
lea
in
in
dec
mov
movsb
cwtl
mov
mov
stc
int3
daa
mov
aas
aam
sub
sbb
fmull
psraw
fldcw
xchg
cmpsl
cmc
mov
mov
mov
push
ljmp
or
stc
xor
xchg
ss
inc
data16
clc
push
es
test
adc
add
out
les
inc
push
int3
out
incb
pop
dec
push
into
cmp
or
sbb
cmc
push
cli
jecxz
int3
push
das
ret
loop
scas
inc
addb
bound
lret
lock
imul
and
jbe
mov
dec
arpl
jns
xchg
jle
pushf
and
push
mov
jge
xchg
sbb
fisubl
sub
xor
mov
add
mov
fsts
mov
lea
and
xchg
adcb
adc
pop
rolb
imul
mov
pop
int3
sbb
jnp
cmp
fwait
dec
jg
iret
imul
cmpsl
imul
mov
std
push
push
lcall
hlt
adc
stos
jne
lcall
or
sahf
testl
out
jne
cmpsl
cmp
loop,pn
enter
imul
sbb
popa
aam
cmp
mov
and
ss
jnp
gs
xor
outsl
stos
mov
and
push
cmpsl
mov
adc
add
inc
stos
pop
inc
data16
inc
mov
ds
nop
dec
and
inc
jbe
js
pop
cmp
dec
popf
dec
bound
or
jno
jge
loopne
mov
fsubr
and
stc
sub
fs
fbstp
cld
fsubr
stos
pop
mov
pop
mov
dec
daa
iret
imul
dec
adc
je
xchg
test
ljmp
adc
jns
push
pop
bound
sub
fsubrl
sti
ss
jb
adc
sub
daa
loopne
popf
add
sbb
inc
cltd
adc
adc
jg
add
gs
test
testb
or
popf
scas
jge
inc
in
cmpl
mov
or
sbb
sbb
inc
sbb
mov
aad
sub
and
pop
sahf
xorb
dec
cmpsl
movsb
dec
lret
repnz
xor
sti
out
mov
and
and
mov
add
loope
and
adc
test
clc
negb
or
fnstenv
sub
and
in
cmp
shll
mov
insb
shr
test
aad
sub
jnp
adc
push
mov
les
sbb
add
mov
mov
or
cwtl
test
leave
inc
mov
fcmovb
push
call
fsubp
pop
mov
in
cmp
cmp
mov
jle
jmp
imull
dec
mov
xor
inc
out
pop
lretw
sub
xchg
jns
ljmp
and
mov
adc
dec
push
mov
mov
mov
dec
mov
sbb
adc
cmp
or
dec
jnp
in
shrb
mov
mov
fnsave
stos
adc
adc
mov
mov
loopne
mov
and
cld
cltd
ret
pop
lock
sbb
or
pop
add
sub
jne
adc
jnp
bound
push
sub
pusha
cmp
xorb
dec
inc
sub
push
and
xlat
sub
gs
or
cmp
sarb
cli
arpl
leave
inc
insl
loopne
in
rorb
adc
cmpsl
pusha
imulb
pushf
xor
xchg
loop
hlt
sbb
push
push
mov
aaa
in
fdivs
and
hlt
fisttpl
lret
fucom
ret
fstps
inc
mov
stc
and
call
enter
mov
push
push
sub
lods
outsl
jge
sbb
push
sbb
xchg
jle
xchg
jge
xor
fists
fldt
xor
lahf
push
mov
das
mov
ds
jecxz
test
inc
sbb
mov
cmp
and
adc
push
xchg
aas
daa
fisttps
stos
data16
push
push
shrb
dec
in
mov
or
xor
push
sbb
and
cli
sbb
stos
jne,pt
fisttpll
push
jmp
dec
cmp
cmp
or
dec
jnp
adc
xor
pop
push
out
bound
jge
into
inc
sub
and
js
mov
rcrb
xchg
cmpb
mov
xor
dec
sub
adc
xor
sub
in
dec
or
pop
js
repz
jmp
cmp
mov
and
adc
sarl
aaa
clc
pop
sub
pop
mov
xor
push
push
xchg
fcomps
and
rcrb
ret
nop
sub
fcompl
mov
lcall
sarl
aam
sub
mov
notl
clc
fcomp
dec
mov
or
je
push
adc
push
fwait
jge
jle
adc
jo
adcb
test
cmp
jecxz
bound
fidivrs
pushf
shl
sbb
movd
or
bound
das
stc
jne
pop
push
dec
pop
dec
cmp
shrl
pusha
stc
sub
and
mov
pop
fs
jb
cmp
pushf
sub
pushf
mov
outsb
mov
test
arpl
fs
inc
lret
test
data16
xchg
sub
iret
or
sti
sub
mov
dec
push
sahf
inc
mov
sbb
mov
lods
je
movsb
insl
xchg
dec
mov
test
cli
xorl
push
call
mov
xor
lahf
loope
xchg
mov
or
xchg
movhlps
fwait
icebp
pusha
cmpsl
leave
or
push
stos
pop
rcl
sbb
xor
ret
fadds
aad
popf
lret
sbb
ljmp
shlb
hlt
cmp
mov
in
icebp
xor
sarl
imul
push
mov
or
add
ss
cwtl
xchg
xchg
push
int3
gs
mov
mov
data16
es
stos
pop
mov
mov
lds
pop
shlb
hlt
push
nop
sub
adc
inc
shll
push
or
or
adc
addl
add
fidivs
inc
mov
fcoml
int
xor
jno
sub
push
and
sbb
or
std
xchg
mov
rcl
out
pop
iret
fsubrl
shr
jbe
out
cs
lcall
xlat
shlb
cmp
sbbl
push
popf
out
cmc
loop
mov
int3
sub
rol
sub
iret
mov
test
fbld
xor
movsb
out
or
cmc
jmp
xchg
cld
rcll
pop
pop
int3
stos
add
enter
xor
scas
xor
sub
nop
sub
clc
imul
xchg
es
xchg
push
add
cmp
mov
ljmp
cltd
fisttpl
outsl
clc
cs
lahf
xchg
or
dec
xor
mov
sbb
mov
cltd
mov
mov
and
loopne
inc
loopne
bound
add
xor
jne
push
mov
movsl
lods
add
jb
jno
sub
das
cwtl
nop
mov
out
mov
imul
mov
leave
or
fsubrs
sub
loop
inc
rorl
hlt
jg
mov
out
rcll
popf
or
mov
adc
rorl
jmp
pop
aaa
inc
mov
addr16
push
mov
notb
jae
sub
or
inc
out
lret
loopne
stos
gs
stos
push
sti
idivb
lea
ret
ret
lea
std
in
ja
loopne
pop
mov
mov
xchg
adc
gs
lcall
push
jno
pushf
dec
inc
addr16
jbe
jns
jns
push
adc
sub
rorb
push
add
mov
adc
pop
sti
cmp
stos
lret
sti
or
adc
sbb
cmpsl
repz
test
inc
and
pop
push
cmp
cmpsl
jg
popf
ds
or
jmp
ja
test
in
icebp
xor
fists
insb
sahf
jb
sbb
and
cmpsb
jmp
cmp
ret
movsb
fldl
xlat
and
fmul
lods
xchg
out
fiadds
mov
sbb
lods
cmc
psrad
cld
pop
or
lds
shrb
push
popf
lcall
fdivs
or
sub
fldlg2
int3
cmp
cli
rcll
lods
fiadds
mov
test
sbb
or
dec
sar
and
mov
stc
popa
loopne
push
aad
out
fidivl
lret
inc
mov
pop
fimuls
fisttpll
mov
lds
shrl
xchg
repnz
mov
adc
sbb
add
xor
rcll
pop
aam
add
xor
or
mov
xchg
pop
add
xorl
mov
lods
inc
add
and
jg
in
sbb
mov
sarl
loope
test
fwait
or
mov
xchg
pop
lret
lahf
xchg
jge
mov
loopne
or
inc
imul
fiaddl
fidivl
pop
in
sbb
loope
inc
fcomps
mov
mov
xor
pcmpgtb
mov
or
inc
fdivrs
repnz
lahf
sub
daa
xchg
and
jne
jmp
insb
popa
jo
pop
and
push
gs
mov
xchg
outsl
push
xchg
cmpsl
dec
mov
jnp
pop
shll
xor
dec
data16
es
cmp
mov
js
subb
xchg
aaa
mov
jae
add
push
jge
addb
movq
ds
mov
cmp
mov
push
in
in
inc
mov
push
stos
gs
pushf
pop
lock
in
test
cmp
shr
pop
add
loope
cmpl
jle
inc
pop
pop
mov
dec
fcoms
add
xchg
xor
loopne
rorb
stos
bound
test
scas
and
push
push
push
test
jne
lahf
inc
xchg
nop
lret
xor
or
in
pop
ljmp
sub
int
lret
inc
imul
mov
or
xor
pop
rcrb
xchg
outsb
movsb
xlat
fisttps
repnz
cmp
aad
mov
clc
pop
cmp
cli
dec
mov
mull
pop
icebp
lds
lods
arpl
jl
dec
sahf
xor
je
call
cltd
xchg
pop
lret
sub
jno
jle
loop,pn
sub
or
insl
ss
xchg
rorb
jns
fsubrl
cmp
fistl
mov
sbb
scas
cmp
mov
and
or
sbb
stos
pop
imul
jo
in
jo
cmp
jle
int3
inc
imul
mov
add
mov
and
out
or
mov
fnsave
lret
test
jne
ret
out
xchg
adc
jns
jno
sub
cmpl
or
or
mov
adc
jmp
out
xor
cmpsl
jg
out
mov
inc
in
stos
loope
mov
pop
adc
mov
mov
mov
dec
shr
mov
jecxz
pop
xchg
sbb
xchg
mov
dec
sub
jge
imul
popf
imul
xor
sbb
jg
aas
int3
mov
sbb
sarb
cmp
clc
xor
imul
mov
jmp
jb
jbe
out
xor
je
loop
mov
pop
or
fwait
xor
nop
jnp
cmp
sbb
add
je
xchg
out
test
icebp
dec
aad
pop
in
sbb
aaa
into
out
pop
out
and
push
jnp
ficoml
aaa
jne
fs
jbe
or
lcall
pop
mov
push
aas
xor
rorb
sahf
mov
hlt
je
lret
add
mov
or
in
xchg
cwtl
add
sbb
xchg
and
mov
shlb
cld
test
out
js
stos
mov
push
pushf
fwait
xchg
mov
cltd
andb
je
adc
fwait
cld
cwtl
jo
push
inc
fdivrl
sbb
lret
loop
xlat
leave
inc
cltd
out
aad
fs
mov
lods
dec
mov
pop
jecxz
jmp
pusha
mov
pop
pop
pop
stc
pop
push
or
push
adc
pop
sub
cmp
or
dec
lahf
push
mov
aas
nop
bound
sahf
mov
icebp
mov
popa
cmpsl
testl
mov
iret
sbb
mov
add
dec
xlat
cmp
xor
inc
jecxz
cs
jae
popa
mov
jge
addr16
sbb
xchg
and
imul
je
ja
js
in
bound
inc
sub
add
cli
jmp
lds
movsb
jl
cld
dec
sbb
jns
and
push
out
insl
sub
pop
push
pop
inc
lds
cld
xchg
aad
dec
mov
shlb
imul
negl
cwtl
inc
sbb
cltd
and
lods
jae
es
and
push
cmp
xchg
cmp
and
add
iret
sbb
jp
mov
xor
push
ss
cli
xchg
xor
inc
xchg
adc
mov
mov
add
xchg
sub
fbstp
pop
pop
rol
cmp
cmpb
mov
pushfw
mov
cmpsb
cmp
scas
push
pop
lds
dec
loopne
nop
daa
fistl
jle
mov
test
inc
rcrb
int
shll
sbb
mov
fwait
or
mov
mov
syscall
pop
xchg
jge
sbb
repnz
jg
or
xchg
pop
add
inc
or
mov
pusha
cmpsl
mov
unpcklps
addb
movsl
arpl
outsl
sbb
or
nop
xor
adc
jl
pop
sub
scas
push
push
lret
adc
in
test
cmc
add
add
add
jb
add
sub
scas
enter
loope
in
jecxz
dec
in
cmpsl
sbb
stos
rorb
mov
mov
cmpb
addb
dec
lods
pop
push
fisubl
jae
cld
inc
popf
mov
es
xsha1
cmpsb
mov
mov
imul
addr16
lea
insl
movsl
push
movsl
bound
loopne
addl
and
test
fs
stos
outsl
dec
jecxz
lret
jno
in
inc
mov
mov
into
or
arpl
scas
mov
sarb
inc
fimuls
and
and
gs
pusha
ja
inc
test
lret
cld
aam
cmp
push
out
push
daa
mov
pushf
mov
ret
and
call
sbb
cwtl
jb
iret
mov
les
cmc
or
xor
push
jne
dec
pop
mov
sub
mov
clc
aaa
addr16
pop
push
lods
mov
test
or
out
push
jmp
cmp
pop
sbbb
mov
addr16
lods
inc
incl
popa
jp
mov
jg
movsl
rcrl
push
popf
pop
stc
fbstp
inc
and
jb
std
xchg
jle
inc
fld
lahf
sbb
push
repnz
and
jle
push
push
out
jne
pushf
xor
fidivrs
sub
fsubrs
cmp
testb
fcoms
or
in
test
sub
leave
pop
aaa
or
scas
mov
sarb
inc
fimuls
cs
pop
jbe
inc
test
sbbl
leave
enter
mov
jle
es
pushf
mov
ret
repz
sti
xchg
adc
flds
sbb
xchg
jno
iret
mov
ret
push
in
hlt
or
or
pop
mov
sub
mov
clc
ss
shlb
push
push
lods
mov
test
mov
mov
sub
sub
cmp
pop
jg
dec
loopne
mov
addr16
sbb
lea
pop
mov
xchg
lods
lods
inc
fidivs
shrl
in
push
out
mov
or
inc
aad
jns
mov
test
js
sti
sub
movsb
cmp
ss
outsl
ret
rcll
ret
push
push
in
sub
dec
push
ljmp
jno
int
push
mov
ljmp
les
push
lcall
cs
ss
es
mov
call
cmp
cmp
mov
call
cmp
in
jns
or
xchg
cmp
mov
inc
jnp
mov
js
stos
test
lret
clc
mov
daa
dec
loope
test
stos
xchg
faddl
mov
and
jp
jae
sub
push
or
mov
pusha
lods
test
int
pop
movsb
inc
mov
jl
add
rorl
clc
in
inc
xlat
adc
sbb
xchg
mov
stos
jl
lods
ja
pusha
popf
in
adc
popa
inc
xchg
fidivl
aas
or
sub
mov
dec
movsb
push
pop
xchg
ja
push
jo
in
je
mov
fs
xor
sbb
pushf
jnp
jbe
movl
pop
fsubl
lcall
jno
push
mov
out
inc
pop
sub
push
insl
push
stos
stos
in
or
nop
negb
shl
inc
loopne
jae
scas
mov
xor
add
rclb
mov
cli
cs
cmp
cmpsl
lea
mov
mov
xchg
lds
dec
and
dec
in
lea
fnstenv
cli
dec
ret
cmp
and
stc
lods
mov
outsl
pop
iret
in
mov
adc
mov
xchg
js
lods
xchg
lcall
adc
mov
ja
pusha
inc
test
js
pop
imul
shr
push
adcl
mov
jnp
nop
xchg
adc
sub
push
mov
lock
inc
mov
imul
mov
jno
sbb
jb
ljmp
leave
pusha
mov
jp
dec
or
int
ret
push
mov
adc
mov
orb
jo
adcb
sub
shlb
repnz
push
repnz
push
add
mov
cmpsl
sub
xchg
shrl
shll
pop
mov
lret
daa
scas
stc
stos
es
out
repnz
ja
or
fnstenv
lds
insl
cmp
pusha
jp
pop
mov
lods
rclb
das
add
pop
clc
test
inc
pusha
outsl
or
and
xorl
scas
test
sub
mov
inc
ja,pn
jnp
push
into
xchg
inc
mov
ret
cmp
cmp
sbb
in
stos
push
add
jge
xchg
negb
inc
push
sahf
loop
jp
dec
mov
jnp
jl
test
icebp
xchg
mov
inc
cmp
lahf
mov
lret
sbb
out
xlat
sub
ficompl
ss
mov
push
sbb
clc
xor
mov
dec
mov
sbb
mov
stos
daa
arpl
push
rolb
popf
sar
aas
out
push
pop
pop
mov
stc
cmc
inc
xchg
pushf
xor
add
sbb
ret
mov
sub
test
jb
mov
push
pusha
testl
sahf
xor
inc
jno
jecxz
jmp
pop
fisttpll
outsl
push
xorb
xor
push
inc
adc
jnp
lock
nop
loop
mov
loop
xor
add
ds
pop
repnz
sbb
jg
adc
mov
inc
scas
inc
fstp
jno
test
mov
push
push
inc
mov
test
test
sub
fnsave
add
cmp
mov
daa
stc
pop
leave
cmp
jecxz
lods
pop
rclb
xchg
sub
ljmp
mov
mov
out
adc
loop
jle
ljmp
inc
gs
call
scas
ss
cmp
sahf
mov
outsl
ror
insl
negb
add
pop
loope
popa
hlt
pushl
cmp
and
inc
dec
or
adc
xchg
inc
and
call
out
sub
fwait
ret
cmp
ja
fucom
mov
add
push
fildll
imul
mov
rclb
out
sub
push
cmpsl
aaa
jmp
dec
mov
fistpll
test
sub
push
mov
insb
cmp
mov
xlat
xorb
xchg
inc
sub
fwait
cmp
cmp
mov
adc
shrd
cmp
jae
push
push
adc
dec
cltd
cmp
mov
nop
inc
mov
movsb
cltd
cmp
jb
rolb
and
cltd
cmp
mov
adc
cmp
cltd
cmp
jb
push
out
xor
mulb
pop
add
jns
fwait
jle
inc
test
dec
adc
gs
xor
test
mov
out
pushl
pop
sahf
jnp
inc
or
orl
ja
iret
adc
cmp
xchg
filds
insb
into
or
add
cmc
test
fisubl
mov
stos
pop
pop
int3
xchg
movsl
dec
push
fs
in
push
add
sbb
enter
jb
push
add
lret
mov
and
xchg
call
sti
sbb
sbb
jp
insl
imulb
mov
es
sbb
bound
jmp
jno
ret
push
lret
jl
in
jbe
jo
lret
in
xor
mov
pop
dec
int
in
pop
add
rcrl
inc
ja
insb
negb
iret
cmp
pop
sbb
xchg
inc
iret
xchg
sti
lds
ret
mov
in
jne
gs
int3
cmp
sbb
leave
jno
sbb
add
fs
push
outsb
icebp
sahf
imul
enter
sbb
orl
jle
hlt
rcll
loope
pusha
xchg
filds
cmp
mov
std
pop
pop
add
xlat
mov
mov
inc
xchg
cmp
dec
adc
adc
push
add
enter
push
cld
adc
lea
test
faddl
mov
mov
pop
add
sbb
lea
dec
push
aad
pop
add
add
int3
mov
add
push
test
xchg
pop
fldl
and
les
or
pop
mov
shrl
aaa
push
add
mov
rorb
mov
stc
bnd
or
mov
dec
or
into
lods
cmp
call
icebp
jmp
ret
xchg
inc
cmp
push
add
out
inc
mov
jg
pop
icebp
pop
jo
stos
sub
push
sbb
sbb
jle
cmp
out
pop
lahf
cmp
sbbb
ljmp
sbb
mov
jae
cmp
fs
xchg
fwait
cmp
fistpll
sti
pop
ss
cmpsl
xor
sub
iret
mov
add
sub
cltd
cmp
aaa
jg
adc
jge
aas
dec
xchg
mov
stos
sbb
inc
ds
movsb
std
cltd
cmp
shlb
vpaddb
pop
ja
pushf
sbb
es
adc
out
scas
sub
iret
push
mov
int
out
sahf
pop
mov
roll
cwtl
cmp
pusha
fs
test
sahf
cmp
ficompl
mov
movsb
sub
jnp
pop
stc
sti
push
in
addr16
xchg
inc
pop
shll
cmp
mov
add
mov
push
popa
data16
pop
mov
stos
mov
push
and
cmp
lea
ljmp
std
xchg
insl
mov
sbb
sbb
icebp
pop
scas
dec
push
clc
mov
jg
pop
adc
adc
jae
pop
add
gs
mov
lods
or
out
add
pop
sahf
dec
paddq
sarl
in
jno
fisubs
pop
push
xor
push
sbb
mov
xchg
jge
sarb
outsb
arpl
mov
and
loope
xor
mov
cwtl
inc
or
pop
inc
or
mov
cmpsb
sub
aas
movsb
sub
sar
or
aad
or
pop
fwait
pusha
jmp
fstpt
ss
inc
sti
rorl
pop
inc
push
dec
adc
jge
loope
sub
les
das
mov
sti
inc
or
fildl
outsl
pop
add
fwait
popa
jmp
cmp
movsb
daa
loop
ja
idivw
dec
jp
cwtl
inc
dec
outsl
xchg
ds
sahf
inc
and
insb
inc
cmp
cmp
adc
mov
stos
lret
xchg
test
mov
mov
mov
imul
xor
lea
cmpsl
out
jno
xor
fdivrl
mov
insl
filds
lcall
mov
test
out
cmpsl
mov
push
jp
and
lock
xlat
js
out
or
mov
insb
mov
stos
scas
xor
push
gs
and
dec
pop
lds
jae
das
in
lds
sbb
sub
hlt
aaa
xchg
sbb
inc
or
dec
cmp
mov
out
stc
fs
es
je
ja
sbb
mov
dec
pop
add
add
mov
xor
pop
sbb
jecxz
cmp
hlt
jecxz
es
cld
ja
adc
cmpsl
mov
or
mov
sbbb
jne
test
mov
les
sub
pop
les
jge
push
andl
adc
int
imul
out
aas
ja
sub
leave
mov
add
xor
adc
lret
pop
mov
outsb
in
add
push
jae
mov
mov
add
xor
mov
mov
pop
mov
sbb
or
bound
cmc
aas
orb
pop
and
jo
addl
and
mov
sub
adc
lahf
ss
inc
mov
mov
sub
mov
fistpll
scas
fs
pusha
lea
pop
lds
xor
test
icebp
pop
inc
or
icebp
xchg
outsl
negb
xor
js
out
mov
loop
fistpll
insb
testl
scas
xchg
lods
or
fld
xor
call
test
cld
fs
mov
push
out
mov
or
lcall
fcmovne
add
mov
sbb
addr16
sub
cmp
sub
mov
mov
test
shlb
int
push
cld
fcomps
or
sub
pushf
gs
ror
pusha
in
cmp
sbb
mov
push
mov
pop
xor
icebp
pop
aad
cltd
inc
scas
add
cs
loopne
out
leave
xchg
pop
repnz
filds
mov
lahf
add
adc
pusha
daa
in
insb
test
pusha
cmc
fnsave
in
sub
jbe
cld
pop
pop
jo
out
cmpb
int
inc
adc
sbb
lcall
and
outsb
mov
int3
sbb
out
cmp
test
and
dec
lds
or
and
aas
rclb
jnp
leave
je
lea
imul
xor
fmul
mov
fstl
pushf
enter
rcrl
xchg
mov
int3
pop
mov
mov
sbb
daa
jnp,pn
ja
stos
sub
out
sbb
dec
xor
fdivp
mov
add
jb
dec
add
or
push
roll
push
cmpsb
add
divl
popf
clc
daa
fs
jmp
and
int3
mov
jb
fnsave
mov
mov
scas
sub
into
icebp
adc
fwait
repz
cmpsl
lret
ss
outsb
lahf
and
push
mov
pop
out
xchg
add
jmp
push
xor
sub
or
or
cmc
pop
dec
adc
lret
adcl
clc
fs
out
mov
xor
inc
jp
lret
faddl
imul
add
sarb
pop
xor
int3
pushf
mov
pop
outsb
out
leave
inc
mov
iret
or
inc
adc
push
mov
out
push
loopne
sub
dec
dec
or
pop
sahf
cmp
lock
imul
in
mov
movsb
mov
mov
std
lahf
cmp
dec
push
inc
xchg
push
push
inc
pop
or
das
mov
add
or
jg
inc
je
gs
lcall
add
pop
sbb
pop
push
sti
pop
sbb
inc
sub
je
and
ret
mov
pushf
fldenv
insb
leave
cmpsb
xor
jl
jb
mov
flds
and
mov
in
pop
idivl
and
jp
aas
lods
mov
pop
stc
testb
test
lds
mov
push
rcrb
daa
mov
mov
scas
loop
adc
inc
insl
repz
lcall
cmp
aad
inc
sub
pop
out
xchg
add
insb
sbb
orl
or
sbb
loopne
pop
mov
mov
mov
addr16
push
push
xchg
mov
mov
std
and
pop
cmp
int3
adc
dec
xchg
shl
insb
pushf
ret
xor
push
cld
cmp
push
mov
es
pop
push
ss
or
pop
inc
or
inc
addr16
in
xrelease
cwtl
inc
cmp
iret
xchg
pop
sub
jge
mov
aam
js
jb
adc
jp
pop
pop
add
je
cmp
rclb
out
je
add
or
daa
stos
cmp
adc
stos
xchg
psrld
pop
add
inc
sbb
inc
scas
fsubl
and
xor
cmp
mov
sub
clc
dec
roll
mov
popa
hlt
into
mov
adc
enter
ds
dec
inc
push
mov
mov
lret
mov
or
inc
mov
cmp
mov
xchg
add
sarb
adc
mov
mov
sub
inc
adc
mov
xchg
mov
jo
mov
scas
push
cmp
jne
sub
pusha
mov
or
pop
push
push
lds
sahf
cmp
out
popa
ret
notl
ret
popf
data16
or
adcl
adc
push
pop
dec
or
cmc
into
mov
ljmp
dec
mov
mov
jg
mov
or
mov
icebp
lret
mov
pop
roll
cmpsb
add
cmp
mov
xor
shll
jg
push
adc
push
lock
hlt
pop
orb
faddl
mov
lods
fiaddl
rorb
cld
mov
stos
mov
hlt
fnstenv
idivb
lds
add
lahf
cmp
cmp
pop
sbb
and
xlat
or
inc
xchg
xor
call
test
aas
out
push
xor
sbb
sbb
mov
popa
inc
push
enter
sub
leave
nop
inc
sub
pusha
notb
add
jno
and
jo
xchg
cltd
cmp
sbb
jge
inc
pop
xlat
jge
cwtl
filds
arpl
xor
sbb
mov
xchg
add
stos
mov
push
mov
ds
adc
xchg
cmc
lds
mov
jge
xorb
int3
adc
test
and
outsb
xlat
add
push
jmp
add
lods
cmp
cmp
test
push
push
rolb
sarl
arpl
sbb
cmp
data16
loop
cmp
mov
mov
jnp
mov
push
jl
jmp
push
ret
xchg
mov
xchg
test
and
sbb
sbb
inc
xlat
jp
fsubrs
fwait
add
icebp
xor
xchg
shl
lret
xchg
push
jp
ja
inc
or
ljmp
add
add
stos
xor
cmp
push
xchg
fiaddl
std
dec
test
stc
pop
addb
push
roll
push
lahf
xorb
int
insl
mov
mov
mov
mov
sub
scas
or
inc
adc
sbb
mov
inc
inc
push
adc
dec
sub
push
std
sub
popf
or
pop
ret
cmp
jl
inc
adc
rolb
inc
jbe
movsb
cmpsl
inc
pop
mov
pop
lret
cmp
das
cli
pusha
sbb
dec
das
mov
shlb
aas
and
push
imulb
inc
or
xor
stos
addl
jns
imul
outsl
add
cmpl
sbb
lods
sub
inc
and
sub
xchg
dec
or
lea
enter
adc
cmp
pop
inc
push
add
and
inc
mov
mov
fists
or
mov
sbb
add
mov
sub
loope
bswap
movb
and
sbb
cmpsl
lock
stc
mov
aad
pop
rorl
mov
mov
dec
enter
popf
lret
sbb
mov
inc
lcall
inc
xor
out
cli
and
in
addr16
clc
stc
sub
loope
and
ret
mov
fstps
and
stos
adc
jg
mov
nop
ds
xor
mov
mov
and
aaa
es
push
jge
pop
xchg
inc
cmp
jp
and
dec
mov
and
jns
fdivs
bound
pop
rol
mov
arpl
mov
das
imul
sub
or
test
mov
sub
mov
scas
jne
adc
fdivs
add
adc
mov
jns
push
outsl
in
sub
xchg
xor
lds
test
xlat
test
mov
imul
jae
jbe
add
mov
jno
rol
xchg
into
test
sbb
aas
lcall
stos
add
pop
push
loop
push
inc
inc
adc
pop
imull
daa
mov
jno
subl
sbb
or
and
cmp
lret
shl
mov
jnp
jae
loop
popf
cmp
decl
orb
adcl
arpl
jle
mov
and
cmc
pusha
repnz
out
dec
or
sarb
pushf
dec
push
hlt
pop
push
cwtl
aad
xchg
inc
xor
js
popa
repz
orl
push
rolb
pop
or
test
cs
push
call
clc
inc
ss
nop
push
jp
stos
adc
dec
movb
ficoms
pop
lds
pop
cltd
jle
shr
push
clc
dec
std
nop
cmp
pushf
js
inc
repnz
or
shrb
mov
mov
jno
fs
fwait
aas
popf
icebp
hlt
pop
or
movsl
sub
mov
aas
mov
mov
xchg
and
jle
pop
or
push
aad
mov
cmpsb
hlt
dec
ficomps
cmp
mov
push
jecxz
sub
push
data16
cmp
mov
call
add
inc
or
push
inc
or
insb
cmc
mov
lea
mov
je
xor
add
and
orl
add
test
shr
or
pop
adc
test
mov
mov
or
repz
daa
dec
out
ficoms
into
fidivl
jge
adc
mov
popa
imulb
mov
negl
push
push
jmp
outsb
jge
mov
ret
cli
jmp
adcb
and
fwait
lcall
dec
sub
aam
jno
or
cmp
jge
in
push
std
clc
loope
int
lock
adc
pop
xor
repnz
push
rorl
or
popa
fmuls
loope
sub
es
std
pop
xchg
inc
les
inc
ret
mov
scas
jbe
add
inc
insl
xor
push
pushf
orb
jge
mov
mov
adc
xorb
sahf
fisttpll
loopne
xlat
orb
mov
sub
movsl
das
sbb
scas
out
scas
sub
stc
insl
sub
rolb
test
in
cmp
or
lret
pop
jl
nop
mov
lret
stos
ja
pop
mov
mov
sub
cmpsb
xor
or
cmpsb
in
repnz
adc
mov
cmp
repz
sub
fnstsw
orb
push
into
xchg
mov
inc
push
pop
pop
adc
dec
xor
pop
add
aaa
xchg
mov
loopne
movsb
inc
or
fiaddl
out
jo
or
jmp
aad
sbb
dec
add
mov
push
cli
pop
enter
adc
mov
jle
adc
xchg
cmpsb
jo
push
leave
cmp
pop
inc
adc
xchg
add
cmpsb
lahf
adc
in
mov
js
daa
ret
mov
cmc
dec
movsl
cld
out
mov
shlb
mov
mov
jb
mov
into
es
and
iret
xchg
outsb
xchg
je
aam
or
stos
cmp
hlt
pop
xor
ds
dec
es
gs
lahf
daa
test
les
inc
mov
mov
add
and
jp
sbb
dec
push
stc
insb
and
jge
nop
ret
push
sbb
mov
mov
scas
mov
mov
and
or
cmp
push
push
aam
xchg
out
sub
dec
std
test
pop
cwtl
cmp
in
push
gs
push
push
ret
imul
jb
jae
mov
lcall
and
add
orb
or
mov
push
je
std
bound
arpl
movsb
push
testl
pop
jl
aaa
push
add
adc
xchg
lcall
repz
aad
push
add
adc
out
and
scas
insb
pop
xchg
aas
mov
ljmp
cmc
aas
and
inc
popf
inc
cmpsb
ret
push
cld
ss
lret
jno
or
pop
xor
dec
and
test
pushf
xor
mov
stos
push
pusha
out
and
fdivs
cmp
jne
cmp
sub
dec
or
xor
scas
cmp
xor
scas
xchg
in
imul
or
dec
loopne
cmp
xor
dec
or
cmp
push
leave
adc
mov
clc
mov
movsl
mov
xchg
sti
xchg
inc
call
imulb
ds
jp
or
dec
or
pop
mov
push
andl
cwtl
das
adc
push
push
xchg
mov
dec
push
clc
xlat
arpl
mov
mov
sbb
repnz
push
bound
call
or
jnp
push
sub
xor
shlb
frstor
mov
jge
inc
scas
mov
into
add
loopne
push
out
iret
add
sub
pop
dec
adc
push
mov
sbb
std
bound
xor
repnz
lods
xor
or
mov
push
inc
adc
xor
movsl
sub
cmp
pop
sub
mov
xchg
jnp
mov
cltd
cmp
pushf
push
mov
std
iret
xchg
mov
rorl
xchg
dec
adc
xchg
xchg
adc
adc
js
or
shl
mov
sub
aas
mov
pop
jo
dec
aaa
mov
cmp
sub
into
rolb
or
inc
inc
jp
test
dec
adc
cld
loope
roll
ss
std
popa
stos
and
fsubrs
mov
je
jge
out
outsb
mov
test
push
fwait
lock
ja
pop
std
shrb
arpl
or
jne
out
push
decl
or
jne
mov
push
mov
pop
mov
xor
mov
insb
sub
pop
mov
and
or
or
dec
adc
and
ss
mov
mov
push
roll
loopne
xchg
pusha
out
ss
add
pop
adc
lea
mov
dec
cmp
sub
add
adc
ljmp
pop
push
mov
scas
int
lds
cmpsl
sub
xor
or
sahf
inc
sbb
dec
xchg
cmp
dec
adc
pop
jb
popf
push
loopne
ror
repz
testl
mov
psllw
push
clc
push
loopne
and
xchg
sub
jae
mov
mov
into
mov
ljmp
lcall
cltd
jne
stos
sub
outsl
fwait
aaa
cld
and
xchg
ret
call
stos
sub
in
dec
mov
repnz
mov
inc
mov
adc
repz
sbb
fnstenv
inc
scas
inc
ja
testl
and
cli
xor
imul
or
cwtl
dec
shll
lret
xchg
sub
push
insb
inc
jle
inc
sbb
outsb
xchg
out
je
jle
jge
mov
rcrl
int3
mov
pop
xor
xchg
test
fwait
cmp
fldt
fidivs
cmpsl
xor
push
out
imul
insb
out
push
add
cmp
bswap
sub
pop
xor
lods
jnp
push
aaa
mov
mov
sub
adc
push
add
rorl
push
sbb
and
xor
scas
pop
cli
ja
push
call
mov
jb
scas
mov
roll
outsb
in
stos
pop
sub
mov
mov
ljmp
aad
aam
loopne
rorb
fcomi
pop
inc
sub
cwtl
das
xchg
push
jg
aad
pshufw
ficomps
xor
inc
inc
out
jae
cwtl
call
int
scas
out
jae
out
pop
push
scas
faddl
add
cmp
dec
loopne
mul
sahf
dec
adc
shl
ja
adc
notl
or
jne
fildl
sub
xchg
adc
inc
adc
daa
lods
sbb
out
sub
push
and
loopne
sub
jae
sub
ss
sbb
cmp
out
xor
cmp
mov
loop
movsl
sub
cmc
aas
popf
mov
repz
sbb
pop
inc
mov
enter
cs
pop
inc
cmp
pop
xchg
aas
lret
loope
sbb
xor
je
and
jle
cmp
fadd
xchg
aas
cmp
add
xchg
ja
lahf
jne
leave
data16
and
aaa
sarl
popa
nop
cmp
loopne
push
and
pop
fs
pandn
fs
or
repz
mov
lock
push
divl
xchg
cmp
loope
outsl
daa
dec
insb
icebp
mov
jbe
cpuid
mov
loope
mov
add
lock
xchg
iret
in
rorl
int
notb
lret
inc
and
or
xor
push
popf
cmp
mov
mov
mov
fidivrl
mov
jb
scas
les
mov
ret
scas
cld
push
mov
mov
stos
sub
in
addr16
pop
jle
dec
mov
icebp
pop
frstor
push
lret
inc
mov
loope
xchg
cmc
pop
add
pop
call
jmp
or
insb
lock
xchg
cmp
cmpsl
xchg
lock
nop
mov
add
lret
xchg
sbb
mov
loope
push
sar
pop
cli
aam
insl
call
and
fidivrl
aas
jno
xchg
in
adc
adc
mov
inc
not
roll
leave
mov
sbb
int3
jae
clc
mov
jge
mov
movsl
sub
fmul
das
cli
stc
jmp
jmp
std
xchg
push
mov
jl
out
stos
xor
lahf
inc
test
dec
adc
mov
test
bound
int
jae
addl
lret
push
mov
test
pop
movsb
shll
int3
sbb
jo
dec
inc
or
push
dec
popa
in
aaa
xchg
inc
and
rcll
sbb
inc
ds
popa
mov
scas
sub
pushw
sarl
fdivrp
pop
popf
and
jae
leave
and
insb
dec
sbb
es
push
jg
fdivrs
fs
pop
fiaddl
fs
and
or
imul
cmpsl
xchg
xchg
mov
jnp
sbb
cmp
jne
jecxz
in
xchg
cmp
jbe
and
loopne
ret
xchg
xchg
cmp
sbbb
add
mov
cmp
lods
xor
mov
js
ret
mov
in
leave
mov
mov
lret
mov
inc
mov
and
xor
cld
push
aas
and
stc
xchg
cmp
add
lods
push
orb
cmp
push
cmp
cmpsl
roll
sbb
add
das
mov
cli
push
ret
pusha
movsl
jmp
jae
sub
fucom
imul
pop
cli
sbb
negl
test
pop
push
cltd
jae
popf
cmpsb
int
loopne
mov
mov
ja
addr16
cmpsl
sbb
js
push
jl
dec
mov
into
fcoms
adc
orl
lods
cli
and
daa
std
inc
xsavec
mov
xchg
cs
dec
in
cmc
push
clc
xor
out
pop
into
mov
mov
jae
jl
add
imul
shlb
scas
cs
out
cmp
popf
inc
or
sub
es
sub
xor
adc
mov
sub
lahf
cmpsb
addr16
test
sbb
inc
pop
dec
dec
pusha
in
out
popf
popa
out
mov
stos
jg
lret
loop
sbb
adc
popf
or
pop
cmp
xor
negb
mov
adc
int
or
ljmp
xor
or
sub
stos
mov
mov
stos
daa
lcall
les
jno
cmp
push
push
sub
outsl
push
imul
shrb
fildl
repz
lock
mov
scas
psrld
mov
loope
lock
mov
stos
or
daa
and
inc
pop
cmp
cmpl
out
jo
sub
and
sbb
mov
xor
or
pop
mov
mov
fsubs
test
iret
and
dec
jle
mov
xor
sub
pop
aam
jl
scas
popf
xor
sub
sbb
adcl
adc
and
inc
pop
aaa
mov
mov
lods
mov
ljmp
cmp
mov
lods
inc
or
inc
adc
mov
scas
fistpll
jmp
mulb
push
mov
sub
and
push
mov
stos
lret
push
add
push
adc
jns
sub
mov
fisubrs
push
add
pop
push
add
outsb
xchg
adc
add
sti
pop
stc
pop
xor
jg
adc
mov
jp
das
stos
fstpt
xor
pop
add
sbb
mov
mov
xor
inc
dec
or
inc
loop
jbe
jp
cmpsl
add
or
aam
jbe
cmp
ret
leave
xchg
jnp
mov
and
dec
int3
nop
xchg
inc
js
adc
orb
xchg
cmp
dec
mov
jmp
lret
mov
icebp
pusha
fdivrl
or
mov
jmp
test
ds
cmc
bound
rclb
xchg
ljmp
mov
je
je
sub
loope
aam
xor
pop
ljmp
and
sti
gs
xor
int3
int
sahf
aas
scas
sbb
cmp
sub
cmp
addb
fsubs
mov
and
addr16
push
stc
pop
rcll
icebp
fs
cmpsl
dec
or
fwait
scas
hlt
pusha
jo
jp
lcall
inc
mov
test
ds
cld
outsb
out
push
inc
adc
ret
jge
loop
arpl
or
arpl
pop
push
rol
or
xor
push
push
out
inc
mov
xchg
inc
gs
int
cltd
mov
clc
pop
nop
cmp
ljmp
pop
mov
loope
stc
std
orw
sbb
loop
stos
dec
push
sti
fld
orb
popf
inc
xor
movsl
andb
gs
push
stc
movsb
or
jp
repz
xchg
rclb
inc
adc
or
cmp
loope
adc
pop
movb
ficomps
sahf
sarl
inc
enter
dec
or
aam
mov
mov
fwait
cmp
fdivr
pop
int3
shrl
dec
dec
inc
pop
jbe
jmp
pop
addr16
leave
add
in
ret
notl
lret
cltd
ja
lds
enter
out
loope
push
jns
mov
stos
fidivrl
mov
sub
arpl
andl
xor
mov
push
sub
orb
xor
arpl
mov
or
cs
cmp
outsb
out
mov
push
leave
pop
lods
stos
sub
insl
sbb
cmpsl
jno
inc
jne
or
dec
insb
mov
fwait
int3
or
xchg
cmp
xchg
cmp
jo
std
mov
mov
mov
popa
pop
nop
ds
ja
es
xchg
test
and
lcall
push
adcb
orb
in
loopne
out
imul
lcall
daa
out
jle
aad
into
arpl
sub
pushf
cmp
pop
rolb
in
pushf
sub
xchg
inc
stos
sub
out
mov
mov
hlt
bound
add
xorl
daa
and
push
rcrl
pop
adc
push
iret
les
aam
movsl
sub
mov
bound
rolb
iret
mov
mov
mov
nop
xlat
jge
lods
into
adc
andb
leave
xchg
cmp
test
fdivrs
pop
lret
loope
jb
pop
xchg
inc
inc
sub
mov
movsl
pusha
imulb
cmp
enter
xchg
adc
dec
insl
jne
xchg
cltd
ss
in
ret
add
pop
ret
mov
sbb
lock
sbb
ret
lret
mov
mov
inc
test
or
push
and
cld
push
xchg
outsb
add
jb
mov
xchg
xchg
pop
les
pop
add
xchg
mov
add
push
arpl
test
add
xor
jo
out
mov
repnz
adc
inc
sub
subb
cmp
jg
lea
dec
addr16
repz
xor
ja
mov
das
sub
jge
cmp
mov
mov
stc
mov
pop
scas
mov
xor
lret
lret
xchg
ds
jl
or
push
jecxz
mov
jecxz
add
cwtl
fwait
and
xor
lret
cmp
sbb
mov
push
push
or
xchg
xchg
divb
cmp
mov
jl
mov
out
je
loopne
rol
negl
mov
adc
mov
sbb
push
mov
stos
push
testl
cmc
outsb
add
sub
and
cli
pop
jge
adc
lret
jbe
pop
adc
lret
dec
inc
sbb
testb
add
add
pop
xchg
sub
bound
mov
add
out
jle
icebp
mov
pushf
aaa
movsb
test
fistpl
loopne
test
jb
fnsave
xchg
sub
clc
lahf
inc
mov
mov
pop
in
movb
roll
addr16
loope
mov
xchg
inc
jae
in
ljmp
dec
dec
jecxz
xor
pusha
imul
add
cmpsl
cwtl
cmp
dec
push
lcall
xchg
xchg
inc
les
jns
loop
scas
push
incl
fldenv
lds
or
adc
stos
insb
inc
pop
add
sahf
outsb
in
jno
lret
fiadds
inc
xchg
add
inc
aam
adcb
dec
or
push
mov
pop
rorb
jnp
dec
xor
or
lds
add
mov
cmp
in
sub
lods
fidivs
ds
aad
mov
jne
xchg
fs
mov
cmpsl
add
mov
ja
aaa
xchg
mulb
sti
adc
dec
jne
cli
jmp
mov
jp
mov
das
pusha
icebp
and
xchg
inc
sbb
cwtl
cmp
inc
cmp
sbb
push
int3
jbe
cmp
push
mov
cmpsb
xor
push
sbb
jmp
rclb
cwtl
mov
mov
mov
adc
inc
jmp
popf
inc
mov
scas
out
jae
test
push
cmp
sbb
inc
jb
addr16
negl
jne
xchg
es
scas
xor
ss
or
push
fiadds
sub
std
mov
out
push
les
adc
push
hlt
pop
and
push
mov
jne
outsb
cmpsl
pop
xchg
sub
cmc
mov
jb
inc
movsb
sbb
dec
vpcmpgtb
insl
xor
sahf
sbb
orl
out
imul
pushf
adc
inc
mov
lea
cmova
inc
mov
inc
jmp
or
popa
cmp
sbbl
pop
call
cmp
mov
popf
loope
rclb
and
jne
push
inc
fiaddl
cmpsl
popa
clc
fcoms
mov
stc
jg
sub
popf
xor
notl
sub
je
jnp
fnstenv
popf
xchg
sub
inc
testl
lret
inc
into
gs
xor
sbb
ds
call
sbb
sub
push
popl
shlb
inc
imul
leave
pusha
mov
fsubp
jle
xchg
pushf
fidivrl
mov
pop
inc
fadds
cmp
negb
sbb
lods
es
into
fwait
xor
jns
jmp
and
or
je
outsb
cmpsb
push
xchg
sub
cmc
mov
jno
inc
mov
int
imulb
popf
pop
in
orl
out
push
mov
inc
mov
lea
mov
inc
call
or
popa
cmp
call
cmp
scas
push
popf
loopne
rclb
and
jne
push
inc
fiaddl
popa
clc
xlat
push
sbb
sub
xor
notb
daa
lahf
mov
or
fnstenv
pushf
xchg
sub
inc
testl
lret
gs
xor
sbb
in
or
push
call
sbb
sub
adc
ss
inc
push
mov
pusha
mov
fucom
jle
xchg
pushf
popa
fnstcw
mov
pop
aad
fadds
cmp
mov
pop
negb
sbb
lods
and
fwait
xor
ja
jmp
and
or
jae
outsl
movsl
sbb
sub
testb
sbb
fs
imul
pushf
adc
push
call
cltd
pshufw
mov
mov
cmp
pop
gs
cmp
jmp
cmp
push
rclb
es
fistl
fildl
movsl
stc
dec
sbb
sub
sahf
xor
and
inc
je
js
fidivl
lcall
jbe
mov
pop
cwtl
push
lods
leave
inc
into
gs
xor
sbb
jmp
sbb
sub
adc
inc
fnstsw
fisubs
mov
popa
mov
fsubr
jg
test
popf
pusha
xlat
mov
mov
pop
aam
flds
es
notl
sbb
stos
and
int
int3
pushf
xor
jne
jmp
pop
mov
or
jb
jo
sbb
mov
insl
scas
inc
lahf
sbb
lods
dec
ror
repnz
lret
fwait
adc
addl
jmp
xchg
push
jno
inc
mov
es
or
cmp
cld
lea
int3
arpl
scas
sbbl
pop
ljmp
lods
or
xchg
es
ficoml
fildl
movsb
stc
aad
sbb
sub
sahf
xor
and
mov
or
fidivl
cltd
xchg
sub
inc
clc
jne
mov
push
xchg
push
lods
enter
jno
xor
sbb
push
jmp
pop
mov
sarb
mov
adc
lods
inc
frstors
mov
popa
mov
fucomi
jg
andl
pop
mov
mov
pop
roll
add
cli
xchg
scas
and
sbb
stos
and
int
lret
pushf
xor
je
jmp
push
mov
or
jno
jo
sbb
mov
insb
scas
inc
sahf
pop
push
lods
dec
mov
xor
lcall
jmp
xchg
or
sub
xchg
or
cmp
gs
mov
int3
arpl
lods
sbbl
pop
ljmp
lods
or
test
es
fsts
fildl
mov
sbb
daa
mov
sahf
xor
and
or
fidivl
cwtl
xchg
sub
inc
clc
je
mov
sbb
ds
gs
xor
sbb
push
jmp
push
lea
mov
loopne
and
mov
fsubl
xchg
popa
mov
jg
andb
pop
aad
push
pop
andb
sub
jae
rolb
add
scas
and
notl
sbb
test
lret
cld
jae
jmp
sbb
jb
divl
jo
sbb
mov
imul
inc
mov
xor
cltd
adc
addl
jmp
xchg
or
or
mov
mov
xchg
or
cmp
gs
mov
sbbl
pop
ljmp
lods
or
test
es
fcoms
fildl
mov
sbb
daa
lahf
aaa
into
rorb
xor
and
or
fidivl
xchg
xchg
sub
inc
clc
je
scas
inc
sbb
push
lods
cmp
xor
sbb
push
jmp
adc
ss
mov
adc
lods
inc
or
lret
sub
call
ss
push
popf
pop
aam
push
push
andb
daa
rolb
add
nop
lods
and
notl
pop
scas
pushl
adc
push
leave
pushf
xor
jb
jmp
sbb
push
dec
les
imulb
jo
pop
xchg
sub
testl
inc
mov
xor
cwtl
adc
addl
jmp
xchg
or
cmp
pop
es
pop
inc
fidivrs
mov
inc
jecxz
gs
mov
arpl
stos
sbbl
push
ljmp
stos
or
cmp
mov
xlat
dec
inc
fildl
mov
sbb
es
aaa
into
iret
inc
sahf
xor
and
jae
je
fidivl
xchg
xchg
sub
inc
clc
jae
scas
inc
sbb
int
outsb
out
lret
sbb
push
jmp
adc
jo
mov
fisttps
fdivrl
fisubl
or
sbbl
or
push
popf
pop
sarl
mov
pop
roll
add
nop
lods
and
push
int
scas
jne
adc
push
enter
jno
jmp
sbb
or
outsb
fnstenv
push
xchg
sub
testl
inc
mov
xor
xchg
paddsb
jmp
or
cmp
sub
popl
inc
fidivs
mov
inc
loop
gs
mov
int3
arpl
push
ljmp
stos
or
cmp
mov
dec
inc
fstpt
sti
xchg
sub
sbb
and
inc
sahf
xor
and
jae
jae
fidivl
xchg
xchg
sub
inc
clc
jb
scas
inc
sbb
fs
out
lret
pop
jmp
sarl
jmp
adc
daa
mov
adc
lods
inc
arpl
arpl
or
sbbl
or
ss
push
popf
pop
sarb
mov
push
rolb
add
nop
stos
and
push
int3
pop
scas
std
je
adc
dec
pushf
xor
jo
jmp
sbb
or
insl
fnstenv
adc
testl
inc
mov
xor
xchg
push
in
addl
jmp
xchg
or
cmp
mov
lods
inc
loope
gs
mov
int3
arpl
sbbl
push
ljmp
test
mov
mov
aad
inc
fstpt
sti
xchg
sub
sbb
and
aaa
into
int
sahf
xor
pop
cltd
mov
or
fidivl
xchg
xchg
sub
aas
clc
jno
scas
inc
sbb
int
insb
in
lret
push
mov
add
push
jmp
adc
daa
mov
jbe
lods
inc
fsubs
or
sbb
jg
jle
ss
push
popf
pop
sarl
mov
push
iret
inc
flds
js
nop
stos
and
push
lret
pop
scas
cld
jae
adc
dec
pushf
xor
outsl
push
jmp
sbb
or
insb
fnstenv
adc
sub
testl
inc
mov
xor
xchg
or
push
jmp
xchg
or
cmp
lea
fidivs
push
gs
xchg
int3
arpl
test
sbb
push
ljmp
test
lahf
push
cmp
mov
aam
inc
fstpt
sti
xchg
daa
lahf
stc
rorb
mov
icebp
adcb
fwait
aaa
into
int3
inc
sahf
xor
push
cwtl
mov
or
fidivl
xchg
xchg
sub
ds
jo
scas
inc
sbb
int
imul
lret
adc
ss
jmp
adc
daa
mov
push
test
mov
lods
inc
popa
xlat
arpl
or
sbbl
or
ss
sub
popf
pop
sarb
mov
push
into
inc
fcos
jbe
nop
test
popa
clc
push
leave
pop
scas
cli
jb
push
movsb
sbb
int
lds
jmp
sbb
icebp
imul
popf
adc
lock
inc
xchg
adc
scas
inc
mov
xor
cmpl
or
cmp
nop
daa
mov
inc
fidivs
lods
scas
inc
fists
test
int
xor
jmp
test
mov
mov
jle
daa
mov
rorb
fdivrl
xchg
and
inc
sbb
and
lahf
ss
push
in
sbb
mov
or
xchg
xchg
sub
cmp
scas
inc
push
xchg
pop
scas
ret
fs
jmp
mov
fimuls
mov
mov
fisttpl
fdivl
arpl
push
or
mov
sbbl
pop
jnp
lods
sub
sahf
pop
into
mov
mov
push
int
je
nop
cmpsb
pop
stc
push
pop
scas
clc
jno
pop
mov
les
jmp
pop
mov
or
push
jb
adc
nop
out
arpl
scas
inc
mov
fs
or
cmpl
push
jmp
pop
or
cmp
xchg
sub
lods
scas
inc
ficoms
cld
cmp
xor
jmp
test
mov
mov
jge
daa
mov
rorl
fdivrl
sti
xchg
and
arpl
into
inc
sbb
and
lahf
ss
push
in
sbb
jae
outsb
jmp
xchg
sub
cmp
nop
outsb
jecxz
inc
adc
ss
push
mov
cmpb
mov
mov
fimull
fdivl
aam
cli
add
sbbl
push
jp
lods
daa
pop
sahf
pop
int
push
jns
mov
push
lret
inc
jae
xchg
movsl
sbb
sbb
mov
ret
hlt
push
in
fwait
adc
jae
out
push
xchg
sub
stc
nop
in
bound
scas
aas
mov
gs
ss
or
test
mov
jmp
pop
or
lods
sub
ficoms
sub
stos
scas
inc
fstl
cld
cmp
xor
addb
or
jl
daa
mov
rorb
fdivrl
sti
xchg
and
mov
out
sbbl
enter
jae
push
in
sbb
jae
insl
call
xchg
sub
cmp
nop
insl
loop
inc
adc
pop
scas
shlb
int3
adc
push
ljmp
jno
mov
fdivl
shll
add
lret
bound
shr
addb
pop
sahf
push
int3
mov
mov
push
lret
sti
jb
xchg
movsb
sbb
stc
dec
lds
scas
imulb
pop
mov
rcrl
lcall
or
push
xchg
sub
stc
nop
in
popa
mov
xchg
or
into
gs
ss
pop
in
test
mov
jmp
pop
or
xor
push
xchg
sub
stos
scas
inc
fcoml
cld
cmp
sbbl
push
jmp
xor
cmp
movsb
or
jnp
daa
mov
iret
dec
inc
fdivrl
sti
xchg
and
.byte
