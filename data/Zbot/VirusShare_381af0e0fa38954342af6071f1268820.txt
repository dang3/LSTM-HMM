push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
pop
push
mov
sub
push
push
push
pushl
call
add
pop
mov
mov
push
pushl
pop
call
mov
pop
add
jmp
xor
mov
mov
pusha
call
add
call
in
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
call
in
sub
push
push
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
pushl
push
push
call
add
pop
mov
pop
add
jmp
jmp
ret
std
sub
mov
cld
add
mov
mov
shl
sub
mov
mov
movl
mov
cmp
je
sub
sub
je
sub
lea
mov
sub
jb
mov
sub
ja
push
pop
jbe
mov
popf
dec
call
add
call
in
sub
push
push
pushl
push
push
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
call
in
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
call
in
sub
push
push
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
lea
push
lea
push
addl
lea
push
lea
push
pushl
decl
mov
add
call
lea
lea
sub
sub
mov
pop
mov
mov
mov
mov
push
mov
xorl
pop
sub
or
xor
cmp
je
sub
push
mov
push
push
pop
push
pop
stos
shr
stos
shr
stos
shr
stos
pop
pop
addl
neg
clc
sbb
pushl
lea
lea
pop
repz
jmp
mov
pop
add
jmp
stos
call
in
sub
push
push
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
call
in
sub
push
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
call
in
sub
push
pushl
push
push
push
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
call
in
sub
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
call
in
sub
push
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
call
in
sub
push
push
push
call
add
pop
mov
pop
add
jmp
call
in
sub
push
pushl
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
call
in
sub
push
push
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
call
in
sub
push
push
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
call
in
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
call
in
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
pushl
push
push
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
push
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
stos
call
in
sub
push
pushl
push
pushl
call
add
pop
mov
pop
add
jmp
stos
call
in
sub
push
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
add
jmp
call
in
sub
push
push
pushl
push
push
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
call
in
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
call
in
sub
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
stos
call
in
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
call
in
sub
push
pushl
push
pushl
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
call
in
sub
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
pushl
pushl
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
push
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
call
in
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
call
in
sub
push
push
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
push
push
push
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
push
pushl
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
pushl
push
push
push
call
add
pop
mov
pop
add
jmp
stos
call
in
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
call
in
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
and
add
add
add
push
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
add
and
add
and
add
and
add
add
aam
add
pop
and
add
and
add
and
add
add
jo
add
lret
add
add
add
add
cmp
add
add
push
and
add
add
add
add
add
add
adc
add
and
add
and
add
add
add
add
add
mov
add
add
add
add
add
and
add
add
stos
and
add
add
add
push
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
add
and
add
and
add
and
add
add
aam
add
pop
and
add
and
add
and
add
add
jo
add
lret
add
add
add
add
cmp
add
add
push
and
add
add
add
add
add
add
cmp
push
jb
jbe
je
push
jb
imul
inc
add
add
outsl
bound
dec
outsl
arpl
add
push
gs
imul
xchg
add
je
jne
jb
outsb
je
push
add
dec
add
insb
outsb
inc
add
aam
inc
gs
jb
jbe
push
jns
gs
add
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
add
imul
jb
je
arpl
add
push
push
je
imul
inc
add
test
inc
jb
popa
je
inc
jbe
outsb
je
add
push
add
outsl
jae
dec
popa
outsb
fs
gs
add
je
imul
bound
gs
add
push
add
outsb
fs
outsl
insb
jne
gs
insb
outsl
jae
add
add
je
jne
jb
outsb
je
jb
arpl
jae
rolb
insb
outsl
bound
inc
insb
popa
addr16
data16
je
je
dec
popa
outsb
fs
add
cmp
fs
imul
add
jge
dec
jo
outsb
dec
jne
gs
add
call
inc
imul
bound
gs
add
filds
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
add
popa
jo
jb
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
pop
add
addr16
imul
mov
push
push
gs
popa
addr16
outsl
js
add
push
add
addr16
arpl
jo
inc
imul
jb
addr16
jne
jb
inc
imul
push
je
inc
push
add
push
outsb
jb
imul
jb
gs
mov
push
dec
inc
gs
gs
imul
push
push
bound
je
add
add
inc
jb
add
ret
add
inc
jb
add
addb
dec
inc
gs
popa
insb
insb
outsl
arpl
and
inc
js
jb
arpl
outsl
outsb
inc
add
sbb
insb
imul
outsl
outsb
add
inc
dec
dec
xor
cs
insb
add
add
dec
inc
outsl
outsb
imul
popa
push
outsl
jne
arpl
add
push
push
dec
dec
outsb
jae
popa
insb
insb
inc
jb
jbe
jb
add
inc
gs
jbe
imul
imul
or
push
push
dec
dec
outsb
jae
popa
insb
insb
dec
inc
inc
inc
add
dec
inc
inc
inc
inc
push
xor
cs
insb
add
xor
jae
push
push
popa
je
add
push
pop
push
dec
inc
dec
inc
cs
insb
add
push
stos
test
mov
xchg
mov
sub
cmp
xor
out
sbb
mov
loop
cmpsb
int
add
rcrl
pusha
push
sub
rol
mov
push
in
mov
daa
iret
sti
shll
mov
out
xlat
dec
mov
mov
mov
sahf
loopne
lods
std
pop
xor
pop
mov
rol
adc
xchg
pop
add
xchg
test
daa
pop
imul
or
xchg
cltd
roll
sahf
in
lret
or
push
add
shrb
shlb
sub
divl
imul
in
or
inc
shrl
ja
aad
mov
outsb
sbb
outsl
mov
pop
xchg
pop
fwait
adc
or
mov
outsl
pusha
sub
cmc
pop
mov
push
mov
dec
test
push
dec
cmpsb
in
mov
pop
iret
mov
leave
cwtl
scas
xor
mov
fmull
push
push
shlb
movsl
inc
inc
lods
cs
mov
out
pusha
mov
mov
int3
mov
arpl
out
dec
ficompl
cmp
ret
hlt
out
frstor
xor
fbld
int3
ja
mov
xlat
arpl
testb
jae,pn
incb
orb
jg
push
jbe
arpl
movsl
fsubl
and
sub
pop
xchg
jae
pushf
adc
mov
repnz
mov
lahf
pop
pop
in
lods
shlb
sbb
lds
and
inc
leave
add
push
fdivs
inc
jae
aaa
push
notb
push
cmp
adc
inc
cmp
fbld
inc
popa
sti
pop
fimull
in
add
add
add
add
xor
add
pop
add
add
add
add
add
jo
add
add
add
add
add
mov
add
mov
add
add
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
push
add
test
add
clc
jbe
add
add
add
add
add
or
add
xchg
add
add
add
sub
add
xor
add
sub
add
xor
add
pusha
add
add
add
add
add
add
add
add
imul
sub
add
movsb
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
stos
stos
lods
mov
mov
fwait
pop
xchg
xchg
xchg
or
jge
jl
jp
stos
lods
lods
add
test
push
mov
mov
mov
ret
lret
lret
leave
lret
int3
rcl
in
rcl
shl
ror
iret
hlt
int3
int
hlt
leave
leave
leave
repz
leave
out
mov
in
mov
mov
lods
stos
stos
lea
lcall
add
add
add
add
add
add
add
add
add
add
add
add
mov
sahf
add
mov
mov
out
lret
rcl
sar
xlat
fcomp
std
xlat
fdivr
xlat
xlat
fdivr
aad
aad
rcl
iret
dec
into
int3
aam
rcl
iret
inc
ret
mov
mov
scas
iret
mov
xchg
and
add
push
add
add
add
add
add
add
add
add
lods
lods
lods
add
lods
scas
sbb
mov
jnp
mov
mov
dec
lret
lret
dec
iret
iret
aam
fdivr
fcomp
call
aam
dec
int
dec
into
int3
call
aad
int
int
rol
mov
mov
scas
std
cmpsb
cmpsl
cmpsb
ljmp
pop
or
inc
add
add
add
add
add
pop
add
add
add
add
add
add
pop
pop
pop
add
inc
add
pop
add
or
inc
or
sbb
push
add
add
add
add
or
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
enter
int3
call
rcl
call
xlat
call
fcom
call
aam
int3
int3
int3
dec
lret
lret
dec
int
inc
inc
rol
mov
mov
jmp
mov
fwait
jmp
and
and
add
inc
add
add
add
add
add
and
add
push
add
add
add
add
pop
pop
pop
add
arpl
imul
imul
pop
pop
pop
fs
push
sbb
sub
push
sbb
cmp
aaa
aaa
cmp
cmp
adc
pop
add
add
add
add
add
mov
pop
mov
mov
mov
mov
mov
rol
ret
ret
enter
iret
iret
call
aam
aam
call
iret
iret
inc
enter
inc
ret
ret
mov
mov
scas
scas
lods
jmp
pushf
popf
xchg
xchg
xchg
lcall
test
pop
add
add
add
cmp
add
das
add
add
add
add
add
adc
add
or
add
add
jo
jge
jle
jle
jge
jno
jo
popa
bound
push
push
push
xchg
cmp
cmp
inc
inc
inc
mov
outsl
jo
nop
popa
popa
popa
pusha
inc
inc
inc
xor
add
add
add
add
movsb
movsl
mov
inc
mov
mov
mov
mov
mov
mov
mov
inc
enter
leave
lret
leave
lret
leave
inc
mov
mov
scas
lods
lods
jmp
cltd
fwait
call
xchg
xchg
cwtl
cwtl
lcall
lahf
cmp
prefetch
add
add
add
add
add
add
add
add
add
add
add
add
outsb
outsl
outsb
add
pop
or
jp
nop
lea
incb
jnp
jnp
jnp
jo
outsl
out
addr16
fdivs
ret
jge
jp
jp
fs
inc
inc
cmp
pop
sbb
movups
or
lods
lods
lods
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
cmpsb
cmpsl
cmpsb
lcall
nop
incl
test
xchg
xchg
xchg
sahf
sahf
lahf
sti
mov
cwtl
cwtl
mov
jp
js
xor
das
add
add
add
add
add
add
add
add
add
add
mov
push
push
test
jno
cltd
popf
in
mov
incl
xchg
std
mov
jg
jno
jb
jae
je
jg
jle
addb
addr16
cmp
ss
jle
lcall
shrb
lods
lods
sti
lods
stos
lods
stos
lods
lods
test
mov
lcall
mov
jns
js
jnp
jnp
xchg
xchg
movsb
movsl
movsb
scas
mov
sti
mov
mov
mov
mov
mov
lods
lods
stos
test
push
adc
add
or
add
add
add
add
add
add
pop
pop
adc
mov
mov
xchg
xchg
xchg
incl
xchg
std
xchg
xchg
xchg
std
xchg
xchg
cwtl
stc
xchg
xchg
xchg
in
mov
or
mov
mov
pop
push
push
push
rdmsr
inc
inc
inc
dec
insb
imul
xchg
leave
cltd
cltd
fistps
fwait
stc
nop
nop
xchg
std
mov
decl
mov
lcall
cmpsb
movsl
ljmp
mov
mov
mov
mov
std
mov
mov
mov
jl
or
add
add
pop
pop
adc
lods
call
cltd
xchg
cwtl
incl
xchg
decb
xchg
xchg
sahf
popf
popf
std
movsb
movsl
movsl
stc
mov
xchg
xchg
in
xchg
xchg
in
xchg
push
jne
cmovp
or
inc
daa
sub
push
dec
dec
dec
data16
jb
mov
xchg
rclb
xchg
std
xchg
decb
xchg
xchg
lcall
cmpsl
cmpsl
ljmp
cmpsl
lods
pushl
lahf
mov
mov
mov
mov
mov
ljmp
sahf
adc
add
add
pop
pop
adc
mov
jmp
popf
cltd
lcall
mov
decl
xchg
xchg
xchg
popf
sahf
pushf
movsb
movsb
movsl
test
test
movsb
movsl
mov
fstpt
movsl
push
push
push
outsl
dec
dec
dec
pushaw
pusha
arpl
je
mov
lahf
test
int
xchg
xchg
in
xchg
xchg
testl
mov
jmp
lahf
pushl
imul
mov
xor
js
mov
movsb
mov
mov
stos
stos
mov
movsl
movsl
add
pop
pop
adc
mov
ljmp
pushf
decl
xchg
call
xchg
xchg
call
xchg
cwtl
cltd
fwait
lcall
lahf
lahf
mov
movsl
mov
out
xchg
xchg
nop
xchg
xchg
les
cltd
lcall
mov
stc
xchg
test
std
xchg
jb
lcall
jmp
jnp
mov
jns
mov
jae
mov
insl
ljmp
pcmpgtd
lods
or
lods
or
mov
jg
mov
mov
stos
pushf
movsl
movsl
movsl
and
add
add
pop
pop
adc
mov
jmp
xchg
xchg
call
cltd
lcall
mov
sahf
call
xchg
xchg
call
cwtl
xchg
call
cwtl
cltd
cld
cltd
xchg
pushf
stc
lahf
cltd
mov
cld
sahf
mov
xchg
push
xchg
pop
jg
cwtl
dec
jp
lcall
pushf
pop
addr16
sahf
pop
jmp
adc
stos
adc
adc
lods
packuswb
lods
adc
mov
push
mov
push
mov
insb
mov
cltd
scas
mov
lods
lods
scas
movsb
mov
movsb
add
add
add
add
mov
pop
pop
adc
mov
ljmp
pushf
call
popf
popf
lcall
mov
movsb
jmp
xchg
xchg
decl
mov
decl
ja
fwait
jo
lcall
call
sub
decl
pop
call
add
call
add
sahf
add
ljmpw
sbb
pushl
outsb
mov
and
mov
and
inc
test
ret
mov
lods
scas
mov
sahf
lahf
lahf
add
add
add
add
add
pop
pop
adc
lods
mov
shlb
lcall
movsb
jmp
test
ljmp
cmpsl
cmpsb
lcall
jle
decl
dec
jo
mov
imul
sub
mov
pop
incl
add
incl
add
mov
push
call
add
fwait
add
mov
or
mov
outsb
pushl
sub
mov
sub
les
jle
leave
xor
inc
inc
mov
enter
sarl
lret
movsl
dec
mov
mov
add
add
add
lods
mov
push
adc
test
ljmp
sahf
jmp
test
lods
ljmp
mov
ljmp
mov
mov
mov
arpl
xchg
push
incl
add
addb
incl
push
decl
add
popl
push
call
add
sahf
add
movsl
add
ljmp
sub
inc
aaa
cmp
cmp
dec
cmp
sarl
mov
sarl
call
cmp
dec
mov
std
mov
mov
movsb
movsb
movsb
push
mov
mov
add
add
add
mov
dec
dec
adc
cmpsl
ljmp
sahf
ljmp
scas
scas
pushl
mov
pushl
mov
ljmp
jbe
decl
or
mov
pop
incl
or
xchg
push
incl
add
lea
push
decl
add
popf
add
add
cmpsb
add
lods
add
pushl
cmp
int3
inc
mov
roll
call
dec
mov
xlat
dec
xchg
call
dec
xchg
fisttpl
ficoml
call
test
mov
mov
movsb
movsb
movsl
arpl
mov
add
add
add
cltd
cwtl
cwtl
add
dec
adc
jl
sahf
mov
lcall
test
pushl
mov
pushl
mov
mov
mov
jmp
outsb
decl
pusha
decl
adc
pop
decl
push
call
add
pushf
add
mov
add
test
pop
gs
es
into
dec
nop
call
push
cltd
fcoms
fsts
fstl
ficoms
fistps
jmp
pop
mov
jmp
pop
mov
dec
mov
mov
jne
mov
mov
add
add
add
inc
inc
adc
ja
lahf
lcall
lahf
lcall
mov
mov
mov
mov
mov
mov
mov
ljmp
inc
je
nop
and
and
call
and
sbb
popl
push
call
add
mov
add
lods
add
mov
data16
mov
xor
ficompl
fisubs
fbld
jmp
cmpsb
jmp
cmpsb
jmp
addr16
call
push
scas
dec
mov
mov
mov
sahf
sahf
add
inc
inc
adc
je
cltd
xchg
lcall
popf
sahf
ljmp
mov
pushl
mov
mov
mov
mov
jle
xchg
sub
lcall
lcall
push
callw
add
lcall
jmp
add
mov
pushl
adc
roll
fsubrl
jmp
outsb
stos
jmp
jno
call
je
in
je
jmp
mov
out
jbe
out
je
out
je
jmp
xchg
mov
test
lcall
lahf
add
jg
cmp
insb
outsl
js
lea
sahf
lcall
mov
mov
mov
mov
mov
mov
movsl
scas
lcall
xor
lahf
cmp
sahf
cmp
xor
lcall
call
add
add
stos
add
mov
pushl
add
enter
ficoml
jmp
ja
ljmp
in
xorb
lock
push
test
ljmp
mov
test
popf
daa
sahf
mov
sahf
add
add
add
pop
add
xor
push
jne
jg
out
xchg
xchg
xchg
xchg
pushl
mov
mov
mov
ret
rol
pushl
insb
mov
cltd
cmp
movsl
inc
jge
movsb
inc
jg
mov
sbb
xchg
add
popf
add
mov
add
scas
add
add
mov
add
shlb
cmp
mov
jmp
mov
push
mov
push
pop
push
nop
push
nop
push
xchg
push
pop
out
mov
inc
ret
clc
stos
lods
stos
mov
pushf
pushf
xor
popf
add
add
add
add
xor
push
inc
inc
inc
jb
pop
dec
in
imul
mov
mov
mov
mov
mov
inc
inc
mov
jmp
inc
jp
cmpsl
dec
cmp
dec
test
mov
adc
lcall
jmp
add
mov
arpl
mov
add
movl
mov
out
xchg
push
fwait
push
lcall
negl
leave
push
popf
lret
lahf
int3
sti
sahf
into
cli
lcall
loopne
lret
mov
mov
lahf
mov
xchg
add
add
add
ss
add
cmp
outsb
push
dec
dec
jecxz
pusha
popa
call
mov
mov
mov
sar
ret
ret
inc
mov
enter
mov
mov
ljmp
dec
xchg
movsl
sub
lcall
jmp
add
mov
mov
add
enter
rorl
jmp
inc
xchg
out
mov
push
movsb
into
push
cmpsb
int
clc
test
cld
test
sar
sti
test
std
stos
sar
std
stos
iret
std
test
jmp
mov
int3
std
mov
mov
mov
xchg
xchg
add
fwait
lcall
xor
add
sub
or
bound
pop
xlat
jne
jb
mov
sarb
mov
ret
dec
mov
pushl
push
xchg
scas
push
mov
scas
dec
test
lahf
sbb
pop
jmp
pushl
add
ret
add
int3
add
add
adc
in
pop
test
negl
aam
sti
mov
cld
mov
sti
mov
cld
mov
std
mov
cld
mov
std
mov
mov
std
mov
push
movsl
jmp
mov
call
lret
mov
mov
mov
xchg
xchg
or
add
add
xor
sbb
sbb
dec
dec
dec
outsl
outsb
jo
cwtl
lcall
aad
fsubr
aad
xlat
not
rcl
std
lret
dec
leave
lret
dec
lret
lret
lret
enter
mov
mov
scas
push
mov
lods
jg,pt
lahf
push
arpl
mov
add
mov
arpl
mov
add
roll
outsl
call
add
filds
jne
ljmp
sti
scas
aad
mov
cld
mov
fcos
cld
mov
fdivr
cld
mov
fdivr
inc
std
mov
int
call
leave
int
mov
sahf
mov
or
add
add
xor
add
add
or
movl
jmp
out
jecxz
loope
fsub
fcmovnu
fcomp
fsqrt
aam
fdivr
int
into
mov
push
test
stos
sub
mov
add
mov
arpl
mov
add
lret
call
add
fildl
ja
in
ja
in
xor
cld
mov
inc
inc
loop
inc
fdivrp
std
dec
loopne
inc
fdivrp
dec
loopne
inc
std
leave
cld
mov
lret
lret
mov
mov
xchg
adc
add
add
std
incl
std
std
incb
std
std
add
cmc
hlt
or
in
in
pop
jmp
in
sub
in
out
dec
jmp
call
call
aad
fstp
jmp
mov
xchg
cmpsl
cmp
movsb
adc
jmp
pusha
pushl
push
dec
add
xlat
add
add
jmp
inc
popf
cld
mov
in
dec
loop
std
int3
out
std
int3
in
std
int
dec
jecxz
dec
loop
dec
loop
shl
call
in
call
jecxz
cld
out
mov
xlat
inc
cmpsb
test
xchg
xchg
xchg
sbb
fwait
cltd
add
incb
std
add
clc
testb
repz
repnz
out
repnz
out
lock
cmp
out
in
pop
loopne
lds
xchg
sti
mov
pop
pop
jmp
add
mov
fs
add
movl
jo
flds
jbe
jecxz
jnp
in
adc
negl
sti
mov
shl
std
iret
in
shr
shl
std
shl
aam
call
out
call
call
fucomi
fld1
cld
shl
push
aam
jecxz
leave
lret
stos
test
fwait
xchg
xchg
xchg
and
xchg
xchg
add
std
cli
add
std
clc
add
sti
stc
add
div
or
aad
xor
jae
negb
add
cmpsl
add
scas
add
mov
add
lret
call
add
fildl
jbe
call
sbb
cli
fdivrp
cld
fsubr
fucompp
fldlg2
fldl2e
std
fucomi
std
fsubr
fsubr
fsubrp
std
fsubrp
fucomip
shl
push
ret
out
rcl
sar
stos
stos
lods
lods
xchg
xchg
xchg
outsb
outsl
outsl
add
add
add
loopne
add
enter
mov
cltd
repnz
and
lahf
add
test
pop
pushl
add
ret
dec
add
aad
jno
fiadds
jae
ljmp
cli
mov
shl
std
fucomip
std
fucomi
fucomi
out
std
aam
std
shl
sti
shl
sti
iret
loop
clc
into
fdivrp
stc
int3
fdivrp
cmc
ret
out
mov
jmp
rcr
call
xlat
sti
mov
mov
cltd
lcall
fwait
fwait
lcall
add
add
add
sarb
popf
sub
add
test
popa
pushl
add
les
imul
add
add
add
jmp
ss
cli
xchg
cld
leave
cld
lret
cli
idivl
aad
repnz
sar
lock
int
ljmp
ljmp
cli
jmp
fndisi(8087
cmc
loopne
mov
mov
xchg
add
add
add
int3
add
rol
mov
cmpsb
loopne
xor
pusha
ljmp
add
mov
add
dec
pop
jno
rorb
jne
fsts
jns
loop
cmp
ljmp
jmp
mov
std
loop
ret
cld
fidivs
neg
mov
leave
ljmp
iret
fsubp
rcl
shl
aad
out
loope
jmp
call
popf
call
leave
lret
push
lods
stos
lods
adc
cmpsb
cmpsl
test
mov
ret
rol
pop
mov
stos
aam
dec
cmp
sbb
cmpsl
sbb
lods
and
mov
ja
mov
dec
xchg
les
lret
test
mov
out
mov
mov
lret
ror
int3
mov
into
shlb
xlat
rcl
jg
jb
loopne
gs
in
out
call
xor
cmc
cmc
mulb
repnz
sbb
or
mov
int
mov
add
mov
rol
mov
scas
mov
test
push
lock
sbbl
sarb
test
mov
pushf
lret
mov
enter
int3
iret
addr16
rclb
rcl
dec
aam
aad
rcl
aad
aad
fldenv
xlat
sbb
adc
jecxz
push
loopne
in
call
repnz
add
cli
testl
incb
incb
mov
mov
shrl
mov
mov
mov
mov
mov
mov
mov
mov
rcll
les
enter
int3
lret
rcl
and
aad
sbb
aam
adc
aad
or
push
aam
add
fstp
add
add
in
add
in
jmp
add
incb
mov
mov
add
ret
ret
mov
rol
sub
mov
mov
push
ret
or
leave
movl
int3
lret
add
rolb
rcl
aad
rcr
add
xlat
aad
xlat
aam
add
xlat
loopne
aad
fildl
loope
fstp
fiadds
in
call
add
incl
incl
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
sarb
ret
mov
mov
mov
mov
stos
stos
test
test
test
pop
add
add
add
add
add
add
mov
mov
mov
mov
sarb
aam
into
shr
aam
aam
rcl
sar
iret
ror
cli
int
int3
stc
int3
lret
lret
mov
mov
lods
lods
lods
fwait
xchg
xchg
xchg
dec
ds
sbb
add
adc
add
push
add
add
jg
addb
inc
inc
add
push
push
add
add
add
add
add
add
add
add
add
mov
inc
mov
mov
leave
cld
into
into
into
aad
call
xlat
xlat
dec
iret
sar
int
into
dec
lret
lret
mov
mov
stos
icebp
xchg
cwtl
xchg
mov
or
or
add
add
add
add
add
add
add
add
add
add
je
je
je
je
fs
inc
dec
dec
cmp
sub
sub
ss
dec
sub
inc
adc
sub
push
add
add
mov
mov
mov
mov
mov
mov
inc
ret
ret
dec
lret
lret
call
rcl
call
rcl
dec
lret
mov
mov
mov
ljmp
sahf
popf
xchg
xchg
xchg
jmp
jo
xchg
push
push
adc
xor
add
add
add
add
jg
jg
jp
jp
addl
aam
push
mov
push
push
push
stos
push
outsb
outsb
push
pop
pop
cmp
cmp
pop
outsl
jo
adc
mov
mov
sar
mov
mov
jmp
lcall
xchg
xchg
xchg
fwait
cltd
cltd
out
addl
movups
add
add
add
add
add
pop
fwait
lcall
pushf
cwtl
cltd
fcoml
addb
jge
jge
js
js
jnp
jp
jns
jnp
jae
jae
push
push
push
cmp
jae
sahf
pushf
popf
mov
scas
scas
rep
lods
lods
sti
scas
lods
scas
std
test
sahf
pushf
call
xchg
call
mov
lods
jmp
scas
scas
leave
movsb
movsl
cmpsb
cltd
jb
je
adc
adc
add
add
add
add
outsb
outsl
outsb
pop
nop
mov
loop
cltd
pushf
incl
mov
sti
xchg
xchg
xchg
lock
xchg
xchg
fimuls
mov
jp
and
inc
inc
inc
inc
dec
outsb
jo
orl
cltd
cwtl
repnz
xchg
xchg
std
mov
call
sahf
popf
ljmp
stos
mov
mov
scas
mov
mov
mov
cmpsl
mov
addl
add
add
pusha
popa
pusha
or
scas
mov
cmpsl
lahf
movsb
decl
mov
nop
mov
cwtl
cwtl
xchg
std
sahf
lahf
sahf
sti
lahf
mov
cwtl
call
push
push
push
jo
pop
push
outsl
insl
outsb
insl
xchg
subl
nop
mov
lcall
mov
pushl
pop
mov
mov
jge
mov
lods
stos
insl
test
add
add
add
add
pusha
or
mov
in
movsb
test
call
cwtl
xchg
lcall
lcall
popf
popf
pushf
cli
xchg
xchg
cltd
jmp
xchg
mov
jecxz
orb
xchg
imul
popf
dec
jp
movsb
inc
js
lods
aaa
ja
mov
je
mov
outsb
ljmp
sbb
pop
mov
mov
scas
mov
movsl
mov
add
add
add
popa
pop
pop
or
mov
in
movsb
test
xchg
xchg
xchg
lcall
mov
mov
decl
orl
xchg
jb
cld
xchg
popa
cmp
dec
jp
cmp
xchg
sub
xchg
sbb
adc
sahf
push
popa
jmp
sbb
mov
insl
pushl
sbb
jne
rcrb
mov
lods
lods
xchg
popf
lahf
sahf
adc
add
add
pusha
pop
pusha
or
stos
mov
test
mov
cmpsl
ljmp
test
cltd
decl
push
mov
decl
adc
or
mov
pop
call
add
or
mov
je
mov
jge,pn
les
jge
das
jg
lret
xor
dec
pop
xchg
inc
test
mov
cmpsl
test
sbb
add
add
popa
pusha
pusha
or
movsb
stos
in
mov
test
scas
mov
pushl
mov
jmp
jo
mov
pop
decl
or
add
decl
add
xchg
add
sahf
add
add
mov
insb
inc
cmp
dec
inc
call
inc
nop
call
inc
xchg
call
arpl
stc
mov
mov
movsb
movsl
mov
add
add
add
pop
or
mov
ljmp
mov
mov
mov
ljmp
push
jge
pop
call
pop
pop
decl
push
call
add
cmpsl
add
lods
add
mov
dec
xchg
fcoms
ficompl
ficomps
jmp
pop
mov
fildll
dec
cmpsb
mov
ret
movsl
xor
jg
add
add
dec
dec
dec
pop
jle
jnp
pushf
cwtl
cwtl
jecxz
mov
scas
pushl
mov
mov
lcall
sub
imul
and
xchg
adc
xchg
add
popf
add
cmpsb
add
mov
arpl
mov
xor
jmp
outsb
test
jmp
jno
in
jae
jmp
cmpsl
mov
shrl
addl
pop
outsb
outsb
imul
xchg
cltd
cltd
xchg
pushl
mov
mov
mov
jne
lcall
cmp
popf
sub
xchg
or
lcall
pop
ljmp
add
or
aad
xchg
jmp
js
jmp
mov
out
xchg
push
xchg
mov
push
fwait
cltd
cltd
add
sub
sub
push
push
dec
pop
pushw
loopne
mov
mov
sarb
mov
mov
ljmp
sub
cltd
pop
pop
jmp
add
mov
gs
mov
push
jbe
loope
mov
push
xchg
ret
push
cltd
push
xchg
enter
enter
lret
cwtl
jmp
lods
inc
mov
stos
popa
lahf
mov
add
xor
xor
pop
pop
push
fisttpl
mov
mov
rol
inc
xchg
test
ljmp
and
add
test
add
mov
add
and
push
movsb
int
clc
cmpsl
iret
clc
stos
into
cli
test
sar
lods
sar
cli
test
call
mov
stos
jne
sahf
popf
or
add
add
dec
dec
dec
aaa
jb
jb
stos
stos
stos
ror
int
out
int
cmc
lret
sti
leave
lret
leave
mov
bound
jmp
add
mov
fs
add
into
add
fildl
call
xchg
mov
mov
fdivr
cld
mov
xlat
std
mov
sar
jmp
enter
repz
scas
lods
mov
add
add
add
add
or
aad
dec
loope
loop
loopne
fstp
ffree
fcmovu
fcomp
out
shll
test
or
scas
add
mov
add
aad
jb
jecxz
jl
repnz
mov
cld
ret
loope
inc
loopne
inc
dec
std
enter
lret
loope
std
fdivr
out
mov
lret
mov
xchg
sahf
popf
sahf
sbb
add
add
std
add
std
incb
ljmp
in
in
jmp
jmp
in
xchg
mov
mov
mov
add
mov
arpl
rolb
dec
add
faddl
je
ljmp
cld
cld
shl
shl
std
shl
std
aam
aad
std
fsubr
std
shl
push
enter
lret
sar
mov
mov
mov
add
add
std
add
std
std
add
std
cld
pop
aam
aad
mov
pop
mov
sahf
or
pop
pushl
add
rolb
outsl
fiadds
ja
out
and
shl
std
fucompp
fsubr
std
fld1
std
xlat
out
sti
fsub
std
std
shl
push
fdivr
loope
aad
mov
sahf
lahf
das
add
add
int
int
mov
arpl
ljmp
gs
add
aad
jae
loop
js
in
xor
cli
int3
loop
stc
leave
fdivrp
test
repz
aad
icebp
ret
std
out
ret
sar
in
sar
out
vpsadbw
in
fucomp
enter
test
incl
aad
mov
je
or
insb
inc
pop
jno
int
jnp
xlat
sub
sti
ficoms
clc
jecxz
mov
out
jecxz
leave
jmp
fnstsw
lret
leave
loopne
iret
mov
jecxz
fistpl
in
call
rorb
mov
add
stos
stos
stos
add
xchg
movsb
les
push
xchg
mov
nop
fidivrl
andb
int3
lahf
mov
iret
mov
jge
lret
insl
aam
iret
pop
ror
iret
dec
xlat
xlat
fdivrs
loopne
in
fsubl
jecxz
lock
in
in
or
std
incb
incl
mov
mov
outsb
scas
mov
lods
mov
push
mov
mov
ret
leave
leave
and
rcl
pop
mov
rcl
or
loope
or
int
add
incl
incb
fwait
lcall
or
into
int3
int3
add
incl
add
add
push
add
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
fwait
cltd
fwait
add
rol
enter
leave
mov
ret
ret
mov
mov
scas
insb
stos
stos
stos
xor
jne
add
add
add
add
add
add
add
add
add
add
add
add
stos
stos
stos
add
mov
jmp
aad
std
rcl
sar
into
into
iret
std
mov
mov
cmpsl
cmpsl
cmpsl
sarl
sbb
push
add
add
add
add
add
add
add
add
jno
jb
addr16
dec
das
sub
inc
inc
and
add
add
mov
mov
cmpl
ret
into
int3
call
rcl
dec
int
inc
mov
ljmp
mov
mov
add
xor
add
sbb
jne
je
xchg
adc
bound
mov
data16
outsb
outsb
insl
jb
pusha
popa
cmp
pop
sbb
mov
in
mov
mov
mov
stos
stos
lcall
xchg
xchg
lcall
cltd
cltd
lds
jb
daa
and
add
add
add
jae
je
fwait
xchg
fwait
mov
test
xchg
xchg
test
test
imul
push
inc
mov
popf
into
movsb
mov
mov
decb
lea
lods
test
cld
mov
mov
mov
mov
xchg
xchg
xchg
aas
sub
sub
add
add
xorb
stos
mov
test
mov
xchg
xchg
xchg
cld
popf
popf
pushf
cmc
cltd
cwtl
lcall
push
push
imul
jge
lea
xchg
testl
xchg
pushl
jo
mov
mov
stos
lods
lods
push
stos
stos
stos
add
add
add
cmpsl
mov
mov
lods
cld
xchg
xchg
xchg
lcall
lcall
xchg
cltd
cwtl
std
xchg
xchg
xchg
out
xchg
mov
loope
je
out
xchg
bound
std
lcall
ljmp
pop
jno
mov
insl
pushl
popf
scas
lock
mov
imul
into
add
test
pop
scas
movsl
lods
test
popf
sahf
sahf
jmp
movsl
movsb
call
push
js
xchg
inc
jb
mov
imul
nop
adc
xchg
or
mov
sbb
pushl
and
jp
ret
aas
xchg
rcrb
subl
je
push
mov
mov
test
scas
scas
scas
pushl
xchg
decl
or
xchg
push
decl
pop
jmp
adc
shlb
dec
inc
mov
aad
call
dec
xchg
dec
lcall
movsb
mov
add
push
push
test
lahf
movsl
cld
lods
scas
scas
pushl
mov
ljmp
cmp
xchg
sbb
pop
call
add
mov
add
mov
push
xchg
fistpl
jmp
pop
mov
jmp
movsl
call
fwait
mov
test
test
pop
add
add
arpl
adc
pushf
lcall
mov
mov
mov
popf
dec
jge
pushf
xor
cwtl
and
call
add
stos
add
mov
xor
jmp
jo
jmp
ja
in
jl
push
jge
out
jle
fistpl
mov
mov
add
add
dec
adc
addr16
mov
mov
mov
mov
ret
ret
mov
jmp
inc
jle
mov
add
ljmp
add
ret
or
dec
cwtl
in
lea
push
xchg
push
xchg
push
xchg
jmp
cmpsl
mov
movsl
movsl
sub
inc
inc
inc
adc
push
xchg
xchg
mov
inc
inc
mov
xchg
ljmp
pop
push
pushl
add
adc
jmp
scas
push
test
stc
stos
sar
cli
lods
sar
cld
scas
sar
std
lods
sar
jmp
lret
mov
movsb
ds
incl
xor
outsl
jo
scas
mov
mov
aam
mov
aam
aam
out
lret
cli
mov
mov
jmp
add
les
imul
add
out
xchg
clc
mov
cld
mov
std
rcr
cld
ret
std
ret
lock
ret
cmpsl
test
add
add
add
in
jmp
call
call
in
fcomp
mov
add
mov
add
fiadds
out
aaa
xchg
cld
mov
dec
in
shl
std
shl
shl
call
in
hlt
leave
ror
into
in
scas
lods
lods
popa
jg
jg
std
incl
std
incl
lret
int
sub
sahf
sbb
lods
add
mov
add
loope
jns
cmc
push
cmpsb
inc
loop
cld
xlat
out
cld
aam
cld
shl
sti
aad
sti
shl
push
leave
fdivr
fcmovne
shl
mov
mov
xchg
xchg
xchg
pop
ret
adc
mov
add
mov
or
cmp
out
mov
aam
call
mov
shl
in
rcl
jmp
fcmovnu
scas
cltd
fwait
cltd
add
mov
popf
lods
xchg
dec
and
push
mov
ret
int3
lret
mov
fdivrs
int3
adc
into
outsl
fxch
iret
pop
aad
in
fistpll
call
out
out
sbb
mov
mov
cmp
mov
scas
push
mov
mov
cs
mov
lret
sbb
bswap
into
into
or
aam
push
std
incl
cmpl
add
add
add
rolb
incb
incb
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
xor
fwait
loope
int
mov
xchg
and
sbb
mov
xchg
cmp
lds
adc
lock
test
lret
ja
push
push
call
mov
fbstp
cmp
xor
push
add
loope
push
xchg
test
lret
sti
jge
loopne
sbb
rorl
incb
outsl
pop
icebp
mov
sarl
je
cmp
mov
dec
cltd
sbb
ja
mov
xchg
lahf
or
sbb
icebp
pusha
adc
inc
mov
pop
lock
add
in
mov
push
call
or
and
pop
mov
mov
cmpsl
ds
imul
add
mov
push
montmul
cmpsb
xchg
add
fiaddl
mov
sti
dec
loop
lcall
jg
pop
repnz
jns,pt
jo
movsl
cmp
xchg
xchg
les
pop
jns
mov
pop
fwait
loope
int
shrl
test
lods
xchg
adc
enter
sbb
aam
fsubrs
idiv
xchg
daa
push
lea
adc
out
pop
xor
dec
repnz
push
call
inc
mov
add
inc
mov
lods
inc
xchg
mov
mov
ficomps
adc
call
xchg
arpl
popf
pushf
test
mov
lods
and
cmp
pop
add
lret
push
in
pop
push
push
call
adc
outsb
add
sub
inc
fidivrl
stos
inc
or
pop
popf
or
cmp
out
lock
jle
adc
xor
arpl
mov
xor
push
fnstenv
xchg
pop
test
in
sbb
aad
das
sub
lcall
and
ror
aas
add
cmpsl
ds
pop
hlt
push
inc
lds
popa
clc
jns
cmpsl
mov
rol
pop
add
sahf
jl
jecxz
pop
popf
and
cwtl
stos
out
inc
mov
frstor
mov
decb
mov
push
popa
sub
pop
mov
mov
int
ljmp
es
xor
insb
negb
mov
dec
dec
out
ss
into
data16
push
in
mov
fidivl
or
cmpb
out
pushf
pop
sahf
int
insl
add
out
and
and
inc
fidivl
test
clc
les
pop
stos
in
push
pop
int3
in
cmp
fwait
push
mov
mov
adc
inc
xlat
cmc
xor
mov
pop
testb
lods
mov
jge
lcall
xor
sub
pop
push
inc
jp
push
lods
fsubrs
int
and
mov
out
lods
inc
push
or
popa
movsl
pop
xor
mov
call
call
dec
outsl
push
xor
popf
push
lea
mov
stos
inc
adc
inc
test
pop
xchg
dec
out
jl
sahf
xor
into
or
mov
popl
fdivs
stc
nop
loop
pop
test
sbb
pop
push
ss
cmp
jmp
mov
or
xlat
outsb
adc
daa
xorb
mov
inc
roll
int3
arpl
fdivs
enter
cmpl
or
scas
in
es
add
test
stc
ret
jbe
pop
test
adcb
lret
cld
aaa
sahf
xor
dec
mov
mov
ret
repz
bound
testb
lods
mov
jge
cwtl
aad
lret
push
mov
push
jmp
aas
jns
pop
lods
in
mov
mov
jg
jno
in
push
sbb
test
jbe
andl
add
push
cmp
sub
adc
arpl
je
inc
test
je
jns
or
cmpsl
test
inc
ficoms
je
mov
je
inc
test
jne
jecxz
or
push
movsl
scas
add
inc
jle
cmp
js
fildll
cwtl
das
cmpsl
sarl
dec
jmp
jno
pop
push
mov
xchg
leave
sub
movsb
cmc
and
popl
fsubrs
push
push
hlt
mov
stc
nop
inc
push
es
inc
ficoms
mov
add
lods
stos
inc
fiaddl
mov
xor
leave
pusha
sub
inc
fistl
cli
pop
imulb
add
mov
sub
mov
jnp
hlt
call
sbb
popa
clc
xor
xchg
sub
cwtl
sbb
aas
or
hlt
mov
mov
loope
jno
sbb
or
clc
jmp
aaa
into
pop
adc
inc
lret
adc
add
dec
loopne
sbb
xchg
sti
fiaddl
sahf
or
test
jge
mov
mov
fistpl
mov
cmp
shrb
fimull
ja
jmp
outsl
push
or
pop
jne
in
push
mov
xchg
sub
jb
adc
ror
hlt
mov
inc
int
jbe
cli
xchg
pop
mov
ds
inc
cmp
jno
es
fdivl
push
out
jns
cld
xchg
insl
mov
nop
in
test
icebp
xor
jb
sub
rorb
hlt
int3
js
add
ret
pop
inc
shrl
rorb
jp
adc
mov
add
adc
aad
add
sarb
hlt
mov
add
jle
hlt
pop
hlt
sub
sti
xchg
adc
pop
hlt
and
movl
cmp
or
fnstenv
sbb
stos
push
jecxz
dec
adc
adc
jns
sub
je
out
mov
add
lea
adc
xchg
inc
out
or
or
fs
inc
sbb
push
add
mov
adc
jbe
push
sarl
aaa
repz
jae
and
jecxz
fisubrl
or
mov
sti
sbb
lcall
xchg
sub
mov
mov
push
xor
mov
shl
add
arpl
push
mov
lods
xchg
push
test
int
stos
fs
fsts
mov
test
mov
ja
jne
pop
test
scas
inc
lahf
push
hlt
mov
xchg
stos
inc
ret
mov
jg
fidivs
mov
aad
jno
out
sub
repnz
mov
fsubrs
pop
das
movb
andb
xchg
mov
push
out
in
mul
jnp
adc
sbb
shr
xchg
cwtl
mov
jg
ljmp
cmp
pushf
xor
out
jbe
jmp
loope
cmp
xchg
insb
add
mov
out
mov
pop
add
pusha
divl
ljmp
and
dec
loopne
sti
mov
sub
out
xchg
mulb
es
stos
inc
ss
mov
xchg
sbb
jbe
pop
or
je
add
xor
push
out
adc
fnstenv
adc
mov
add
cltd
xor
into
gs
adcb
adc
je
loopne
test
or
mov
jne
push
lods
pop
lods
jmp
loope
sub
cmp
push
call
nop
stos
out
fisttpl
mov
mov
loope
sbb
shrb
popf
xor
mov
lret
loope
stos
xor
bound
jle
mov
jns
stos
xor
lret
aas
mov
jp
and
xor
push
cli
cmpl
dec
fsubrp
xchg
outsl
adc
shlb
or
mov
fsubl
add
mov
cmp
mov
leave
xchg
xor
shlb
addr16
pop
jo
add
push
push
push
pop
push
xchg
push
pop
test
mov
mov
inc
pop
sub
push
movsl
pop
dec
test
mov
fnstenv
cli
pop
xor
lods
std
push
shrb
sbb
cmc
mov
outsl
mov
mov
mov
aam
test
mov
movsl
cmp
rcrb
sbb
movsb
mov
ja
xor
xor
push
inc
pop
mov
dec
fs
shr
fstpt
jo
cs
out
push
ret
dec
jnp
and
sbb
gs
mov
sbb
fimuls
push
data16
pop
hlt
test
mov
mov
jns
imul
lahf
sub
shlb
mov
push
pop
pop
repnz
ficompl
mov
mov
sbb
jno
mov
mov
jle
fisubrl
jb
push
mov
les
jl
sbb
push
mov
das
mov
rorb
push
lahf
into
lds
mov
add
stos
in
mov
mov
or
sbb
lcall
imul
scas
push
out
test
stos
pop
loopne
insl
loop
je
fiadds
inc
inc
lret
add
and
into
outsl
es
gs
sbb
xor
ret
cld
test
and
rorl
out
inc
pop
jb
inc
mov
jns
xchg
fsubl
xchg
dec
push
into
push
cmp
subb
jl
repnz
loopne
add
loope
rcrb
inc
fdivl
les
sub
lret
and
pop
lret
sarl
push
lods
adcb
cmpsl
in
mov
push
jbe
mov
stos
xlat
cmp
pop
mov
push
dec
scas
ss
and
ss
sbb
cs
mov
sub
mov
add
dec
and
sbb
jg
repnz
sbb
sub
pop
ja
xchg
mov
fisubl
hlt
sub
and
stos
aas
mov
in
ret
imul
mov
inc
pop
addr16
dec
dec
inc
loopne
cmp
cmp
push
inc
les
dec
into
pop
test
jne
dec
and
hlt
push
pop
scas
xchg
add
or
push
fisttpl
test
out
add
jecxz
cmpsb
cmc
rorb
jecxz
lret
out
pop
xor
xchg
arpl
push
mov
test
out
xchg
xor
xchg
mov
bound
adc
cmpsl
mov
shll
int3
test
or
dec
and
cwtl
hlt
xor
pop
movsl
test
in
insl
xchg
dec
pop
push
xor
daa
cmpb
xor
sbb
sub
jge
sbbb
mov
sbbb
int
aad
addr16
out
mov
mov
icebp
dec
lcall
mov
aad
mov
sbb
call
jno
into
xor
mov
jo
mov
add
loop
mov
pop
cmp
mov
ljmp
sarb
pop
loopne
inc
out
jno
lret
gs
sbb
rorb
inc
sbb
cmp
lahf
imul
push
xor
adc
sbb
movsl
jo
xor
and
push
daa
cmp
fs
in
in
mov
xchg
cs
mov
popa
mov
cmp
imul
call
in
xchg
inc
jns
jnp
sub
aaa
mov
arpl
outsl
subl
dec
cmp
xor
lahf
dec
sarl
sub
jge
fbstp
sahf
add
iret
sar
mov
add
add
scas
cwtl
lahf
gs
lret
mov
jae
loope
inc
xlat
testl
jg
lea
jnp
scas
cltd
xor
mov
pop
scas
mov
or
enter
sub
sub
fwait
dec
fs
cmp
orb
adc
cs
fistpll
pop
mov
pop
lock
push
jg
orb
fistpll
movsb
sahf
xor
adc
mov
mov
or
fsubrs
call
add
add
or
nop
daa
idivl
xor
mov
scas
inc
xor
int
mov
add
test
sbbb
mov
or
sub
mov
nop
lock
fdivr
mov
fs
pop
sbb
sti
js
sbb
mov
aaa
into
iret
push
out
call
outsb
add
movsl
lods
mov
int
xchg
sti
test
sbb
fstpl
ret
mov
lret
das
ljmp
jnp
xor
inc
xchg
xchg
hlt
or
cmp
sbb
ret
pop
dec
in
and
popa
loope
fwait
pop
mov
xchg
ficoml
outsb
sti
hlt
sbb
cltd
xchg
icebp
cmp
mov
pop
icebp
inc
mov
ret
or
vmread
dec
loope
xchg
xchg
sub
cltd
stc
mov
out
xchg
ds
xchg
sub
pop
icebp
mov
dec
mov
fsub
js
adc
push
or
xchg
jnp
clc
mov
lret
sbb
sub
cwtl
xor
xor
mov
loope
cmpl
jno
mov
clc
scas
aas
xchg
sub
enter
sti
pop
mov
xor
and
in
cmp
jmp
imul
mov
dec
and
inc
mov
lret
add
js
jecxz
call
cs
pop
out
les
pmulhw
loop
in
addl
mov
and
inc
dec
aas
subb
sbb
dec
loope
ss
jno
js
mov
int3
xchg
sub
mov
rclb
aad
adc
jne
cmp
mov
out
test
adc
clc
movsl
das
fcoml
sub
shl
dec
in
stc
dec
loopne
push
insb
add
push
pop
sahf
xor
mov
jb
and
push
mov
xor
jo
mov
testl
out
and
lret
aaa
fstpt
jmp
jns
jo
lods
lahf
jmp
and
mov
lods
inc
inc
xlat
adc
mov
xor
pop
mov
pusha
testl
jle
push
jl
mov
loopne
inc
fidivl
loopne
clc
adc
jg,pt
pop
fs
cwtl
jbe
and
shl
out
stos
inc
iret
adc
or
leave
pusha
pop
cs
fdivrs
jle
xchg
pop
divb
add
adc
add
mov
mov
fldcw
mull
pop
lods
dec
jle
dec
int3
shrl
push
lock
mov
push
fnstenv
sbb
mov
fsubrs
test
roll
testb
nop
adc
push
cmp
or
pop
and
out
into
ret
pop
aas
sarb
pop
shlb
ds
cs
je
test
push
mov
mov
mov
cmpsl
shrl
mov
rorl
icebp
mov
aas
lods
cmp
shufps
movsb
sbb
int
pop
lea
add
imul
mov
sub
mov
test
cmp
push
push
lds
inc
xlat
sti
ja
jp
adc
not
movl
adc
aad
mov
push
cmp
inc
int3
xchg
mov
in
fidivl
push
cmp
push
clc
pop
test
mov
aad
or
sti
dec
xchg
sub
stc
les
pop
xor
mov
xchg
push
lods
inc
cld
mov
fbstp
cmp
shll
std
xchg
xchg
pop
dec
fbstp
or
std
loope
sub
leave
or
loopne
push
mov
jp
rcrl
and
jbe
sbb
xor
andb
out
mov
sahf
jmp
outsl
push
or
mov
sbbb
test
shll
push
fnstenv
sbb
sbb
test
and
push
inc
movl
xchg
cli
xchg
mov
aam
scas
testb
pop
aaa
into
push
adcb
adc
outsl
lret
aam
or
in
lea
xchg
sub
bound
addr16
scas
inc
push
nop
inc
fldenv
push
call
mov
jo
cmc
loopne
lods
push
adc
xor
inc
lret
mov
jmp
imul
sahf
dec
mov
pop
mov
inc
fisttpl
or
bound
jmp
or
ret
loopne
and
push
loop
inc
or
jne
add
jle
cld
xchg
pop
cwtl
adcb
jnp
mov
es
mov
movsl
xor
lret
lds
push
call
jne
adcb
sahf
add
out
add
mov
aad
aad
jae
outsb
pop
repz
adc
daa
or
jnp
adc
loopne
xor
cmp
pop
popa
clc
bound
orb
test
inc
cli
xor
loope
mov
out
jmp
pusha
out
push
insl
add
or
jg
fwait
lret
ficompl
mov
jmp
test
pop
or
mov
leave
pop
notb
mov
stc
faddl
adcb
leave
test
xor
mov
mov
push
push
hlt
out
xchg
stc
nop
cltd
jge
mov
mov
scas
int
cmp
add
xor
out
xor
lods
pushl
xor
jno
notl
aaa
and
test
lea
fdivs
xlat
outsb
push
mov
cmc
mov
add
jle
stos
nop
xor
enter
inc
mov
lret
pop
popf
outsb
add
push
out
and
xor
inc
pop
stos
inc
xchg
arpl
mov
mov
ds
loopne
jge
adc
dec
add
xchg
ret
mov
int3
mov
ja
inc
fmuls
mov
mov
sub
jge
sbb
push
xor
xchg
adc
test
mov
lods
pop
rolb
ret
in
adc
loopne
cmp
lcall
and
push
sbb
inc
js
sub
pop
cmc
test
mov
dec
ret
ret
imul
dec
in
lcall
sub
test
fdivrl
hlt
mov
inc
adc
call
movl
xchg
mov
rsqrtps
xchg
sub
or
sbb
or
ss
lock
push
jmp
orb
hlt
push
jb
in
sub
cmp
mov
imul
xor
xchg
sbb
jle
xor
mov
jl
pop
mov
adc
fcoml
xor
int3
cmc
call
inc
sbb
mov
gs
fs
rcrl
mov
test
loopne
cmp
adc
pop
idivl
push
in
gs
outsb
test
je
fcmovnb
cmc
mov
lret
jle
mov
cmp
into
gs
iret
pop
test
in
sub
jge
cmpsl
add
mov
lock
cmpsb
cmp
mulb
mov
sbbl
aad
inc
mov
xor
mov
test
out
push
sbb
aas
aad
aas
pop
pusha
inc
dec
hlt
jno
int3
arpl
roll
cwtl
shl
enter
mov
push
mov
shlb
out
repnz
imul
mov
jne
xchg
cltd
das
dec
out
xorb
ret
jb
push
and
mulb
push
adc
dec
arpl
nop
mov
and
mov
add
add
aaa
cli
pop
loop
mov
call
fldl
lods
sub
xor
add
lds
mov
je
stos
cmc
jo
daa
int
and
dec
mov
xor
inc
je
sbbb
sbb
sbb
cmc
add
lds
inc
xlat
sbb
imul
cmp
xor
shlb
iret
xchg
lea
mov
fs
push
or
ds
sub
and
add
stos
inc
out
mov
mov
fdiv
fiadds
daa
fidivl
test
inc
mov
add
and
imul
pop
testl
jl
xchg
push
daa
pop
xchg
inc
mov
adc
repz
sub
ror
ret
jae
xchg
push
dec
jnp
and
pop
icebp
ja
ljmp
outsl
sbb
out
xor
in
jbe
adc
call
cmp
jmp
jle
es
test
push
stc
push
mov
pushw
and
xchg
cmp
xchg
sarb
aaa
fdiv
jno
xor
cmpsb
gs
cmpsb
sbb
inc
lret
xchg
mov
pop
pop
cs
sbb
dec
xorb
add
bound
bound
sub
aaa
bound
sub
test
loope
dec
and
icebp
mov
adc
js
in
scas
push
fiadds
lahf
clc
lock
xchg
das
cmp
sbb
cmc
into
inc
pop
sub
shll
xchg
mov
jns
repz
lods
sbb
xor
or
mov
or
rolb
loop
cs
dec
mov
adc
push
and
insb
xchg
imul
pop
bound
leave
and
sbb
insb
dec
loopne
and
pop
adc
lret
orb
adc
lahf
cmp
les
jmp
inc
pop
mov
sub
sbb
imul
pop
xchg
or
mov
push
out
jae
cmp
sti
test
pusha
xchg
in
out
out
imul
mov
test
repnz
and
sub
fmul
cmc
or
push
mov
bound
sbb
filds
adc
push
cmp
dec
aam
pusha
lds
fidivl
out
std
cmpsb
out
pop
ja
xor
jp
imulb
inc
push
pop
cmp
mov
dec
cmc
shrb
cmpsl
or
or
std
pop
add
sub
adc
pushf
imul
cmp
test
pop
mov
stos
in
leave
sti
add
and
mov
pop
sub
mov
mov
dec
mov
mov
scas
jmp
mov
inc
push
lahf
popa
dec
adcl
cli
insl
daa
xorb
test
xor
test
inc
xchg
gs
jbe
repz
and
repz
negl
xorl
out
cmp
daa
imul
rorl
or
stos
mov
pushf
cmp
push
jmp
push
ljmp
aaa
stos
roll
lock
leave
sarb
ret
mul
nop
jb
decl
fisttps
cltd
ja
add
bound
pusha
and
xor
xlat
dec
push
in
daa
enter
loope
aaa
ja
push
scas
js
dec
stos
sub
jge
jnp
cltd
dec
xchg
adc
sub
pop
cld
je
mov
jnp
cmpsb
testl
mov
addl
jne
dec
and
xchg
cmp
mov
stos
clc
shrb
dec
add
adc
mov
mov
jo
std
add
mov
or
cmp
aaa
xor
or
cmp
sahf
dec
inc
clc
pop
sub
pop
scas
cmp
sub
fs
nop
jb
sub
cli
outsl
rcl
adc
in
loop
and
sbb
sbb
push
jp
loopne
inc
mov
xchg
int3
cmp
or
pop
xchg
or
es
fs
fidivrl
mov
cmp
and
add
lods
mov
mov
mov
xor
aam
adc
std
or
pop
ja
scas
test
and
cld
lock
adc
dec
adc
xlat
mov
inc
xchg
cmp
sti
or
or
xchg
and
test
xlat
insl
jmp
fisubs
and
dec
jl
xorl
push
mov
or
shll
decl
enter
pop
xchg
inc
in
clc
pop
adc
inc
lea
in
push
xorl
orl
lahf
or
scas
mov
fucomip
adc
inc
jne
jg
fsts
jge
xchg
ret
mov
pop
cli
xchg
xchg
push
or
cmp
scas
xchg
icebp
xchg
mov
call
adc
and
push
adc
out
fwait
std
cmc
insb
movsb
xlat
negb
stos
rclb
jbe
int
lods
or
pushf
arpl
scas
mov
bound
xchg
lds
and
adc
vpcmpeqw
jg
jmp
xchg
mov
fldcw
push
cwtl
mov
mov
in
scas
out
dec
jae
cmp
mov
clc
shlb
xchg
test
pushl
icebp
das
inc
or
add
push
out
xor
fnstcw
in
mov
ss
or
pop
and
cmp
adcl
cmpb
dec
jnp
or
shrl
ljmp
mov
cmp
ds
in
ret
jg
and
xchg
pop
add
mov
sub
push
jle
inc
stos
mov
pop
lahf
in
jnp
mov
or
pop
es
outsb
cwtl
lods
sub
xchg
mov
cmp
ret
jge,pn
mov
icebp
cli
fiaddl
in
daa
inc
jae
loopne
push
js
push
xor
nop
into
call
sbbb
push
cli
rclb
inc
xchg
outsb
pop
int
and
push
add
pop
ljmp
dec
in
cmp
mov
dec
das
bound
inc
and
sub
addr16
push
lods
cli
fbld
popa
out
daa
mov
push
test
mov
jle
mov
aam
aaa
adc
mov
xor
pop
cli
out
jbe
inc
cmp
jg
repz
mov
dec
rol
push
xchg
rorb
and
call
jnp
lret
popl
cmp
xchg
cmpsl
mov
jl
pop
push
or
ljmp
jmp
mov
push
ljmp
xor
inc
and
adcl
insb
or
sahf
xchg
shlb
aas
test
and
xor
jmp
imul
test
call
out
cmpl
test
cmp
repnz
push
mov
ds
dec
cmp
fnsave
lahf
sbb
xchg
stos
mov
mov
dec
roll
pop
sbb
dec
incl
push
or
mov
xor
rcll
dec
stos
inc
inc
xor
push
addb
mov
ja
jae
jae
xchg
push
sbb
add
aad
lock
jb
data16
lret
loope
jmp
movl
in
inc
adc
mov
and
xor
in
mov
pop
cmpsb
push
bound
iret
clc
mov
repnz
cmp
add
repnz
shll
sub
insb
push
mov
test
jge
adc
cmp
stc
xchg
xchg
pop
ffreep
pop
loopne
adc
lods
pop
xchg
inc
inc
or
and
mov
jno
xor
and
lea
jb
icebp
mov
fdivs
sahf
jne
es
jb
das
mov
std
xor
cmpsl
das
mov
cs
push
std
xor
push
insb
div
push
sbb
sbb
addr16
cmp
stc
std
sbb
pop
or
imul
leave
adc
out
in
faddp
adc
pop
movsb
and
dec
cld
ss
ret
dec
mov
xchg
ja
adc
std
fdivl
cmp
lock
cmp
sbb
adc
movsb
sub
pop
cs
or
out
xor
js
sub
sahf
inc
pop
fdivrl
repz
ret
adc
cmp
cmp
shrb
push
dec
sbb
scas
and
add
xor
and
xchg
addr16
shl
pusha
fwait
shll
jne
icebp
test
inc
push
sbbb
int
icebp
lret
iret
sbb
paddusw
shl
jmp
scas
stc
lcall
sub
dec
mov
outsb
insl
mov
push
popf
add
push
in
leave
and
mov
inc
inc
shlb
pop
add
fldenv
cmp
or
out
push
xor
inc
test
dec
cmp
sub
outsl
lret
inc
repnz
iret
aam
popf
bound
mov
bound
adc
xchg
mov
add
xchg
jae
cwtl
push
dec
aas
cmp
sbb
sbbb
xchg
movsb
cld
jns
or
xor
dec
test
loope
or
push
sub
fucomp
std
scas
mov
mov
mov
push
xchg
add
lahf
mov
sti
adc
bound
or
inc
push
bound
nop
cs
or
shll
aad
jb
mov
dec
jp
cmp
sub
pop
xchg
pop
inc
shll
jno
pop
adc
fcomp
mov
sbb
dec
scas
sub
xor
jmp
ficoml
imul
sti
jns
inc
sub
lret
mov
movl
mov
cmp
cld
clc
rcr
sete
lret
add
stos
stos
or
mov
fcmovnu
mov
add
jae
dec
imul
inc
push
arpl
mov
add
dec
pop
cmpb
pop
inc
push
push
pop
sub
sub
gs
nop
ret
ds
out
pop
repnz
sbb
fcmovnu
xchg
testb
cmc
push
test
loopne
dec
cmpsb
ret
push
jb
into
dec
pop
cmc
cmp
mov
push
ffreep
in
xchg
mov
test
cld
lahf
clc
mov
jbe
cmpsb
mov
insl
sub
push
icebp
ret
lds
or
hlt
mov
rcrb
mov
in
bound
rclb
xor
dec
fisttps
pop
mov
mov
ljmp
adc
mov
fldenv
add
cwtl
xor
pop
nop
scas
mov
dec
or
mov
cld
loop
add
cmp
cwtl
jne
leave
rorb
or
dec
fucomp
in
stc
sub
push
cmovp
jp
ja
inc
push
xchg
xor
mov
repnz
shrb
jo
jns
cmp
loopne
inc
mov
negb
gs
jbe
cli
or
pop
cwtl
dec
lret
shll
fistpll
pop
gs
mov
xchg
cmc
mov
push
fst
add
mov
add
sub
stc
fbld
pop
push
lret
dec
adc
adc
repz
fs
mov
push
dec
popa
ja
add
in
jp
pop
out
ror
cmp
es
push
add
and
cmp
add
iret
out
idivl
add
xchg
inc
out
push
add
pushf
cmp
xchg
mov
lret
sahf
arpl
or
in
adc
cmc
movsb
lahf
into
or
push
test
clc
mov
or
cmp
popf
xor
mov
mov
aaa
clc
shr
rorl
fistps
mov
adc
pop
dec
testb
sub
mov
dec
xchg
mov
adc
bound
pop
imul
push
jno
es
mov
push
clc
mov
lea
lea
mov
dec
and
hlt
es
sub
lahf
mov
aam
and
clc
xor
and
fidivrs
ret
mov
xor
and
push
cmc
mov
push
xchg
add
jnp
adc
fwait
cmp
out
cmc
gs
mov
adc
repnz
cmpsb
add
lret
adc
aam
push
mov
adc
loopne
jmp
jb
lret
push
xchg
sbb
insb
test
sub
test
in
cli
mov
stos
dec
xchg
stos
jecxz
movsb
lcall
inc
popa
mov
mov
test
in
xchg
testb
sbb
inc
jne
or
ljmp
cmpsl
loope
jo
mov
xchg
fstps
dec
mov
sbb
or
cltd
pop
and
dec
jae
push
sbb
sbb
mov
js
mov
sarb
dec
xchg
inc
in
jo
faddp
mov
jo
sub
popa
jp
fld
push
pop
les
rcr
fsubrs
out
test
adc
push
lea
neg
imul
push
jle
stc
cli
insl
mov
scas
mov
sub
xor
push
nop
jo
inc
mov
out
push
and
mov
jmp
es
pop
and
fdivrs
add
or
sti
movsl
ret
pop
cmp
dec
jns
cld
pop
jecxz
or
cmp
mov
mov
add
std
and
cmp
lret
faddl
scas
insl
bound
enter
lcall
movsl
mov
les
mov
icebp
push
popl
add
xchg
cmpsb
push
or
or
cmp
xor
inc
pushf
imul
jns
js
mov
shlb
mov
out
imul
cmp
inc
fcompl
popf
push
dec
jle
or
pop
sahf
inc
arpl
sbb
mov
test
orb
or
jne
push
push
and
sbb
jge
loopne
aam
rcll
stc
push
outsl
and
dec
nop
xchg
mov
stos
mov
jg
je
fldl
mov
das
pop
repz
repnz
xchg
mov
xor
test
nop
mov
insb
icebp
adc
and
and
push
xlat
add
mov
aas
xor
push
push
push
jnp
pushf
xchg
leave
ret
sub
or
jmp
arpl
push
icebp
aaa
push
loop
jb
mov
insl
dec
cltd
push
pop
testb
or
mov
imull
cmp
add
pop
ja
xchg
adc
pushf
inc
or
pop
push
jnp
ret
je
iret
cmp
mov
leave
or
push
jae
jl
fcoms
in
jmp
std
sub
pop
mov
stos
push
push
and
mov
cmp
nop
and
push
jae
jns
cmpsb
adc
outsl
gs
enter
rorl
mov
inc
pop
lret
jp
fldenv
scas
fs
testl
lea
movsl
add
jb
enter
or
xor
sub
movsl
arpl
sbb
adc
cmp
repz
xchg
es
sbb
inc
sbb
dec
mov
sarl
jle
mov
mov
adc
ret
cmp
adc
mov
setge
mov
adc
lahf
int
mov
out
xchg
not
fld1
outsb
mov
push
push
pop
jp
movsb
push
mov
inc
jne
in
push
mov
and
leave
aad
int
cmpsl
repz
xchg
push
mov
idiv
mov
xchg
fisttpl
jmp
mov
mov
ljmp
orl
add
xor
aad
aad
xchg
jae
mov
outsb
jge
imul
stos
cld
aam
sarb
ljmp
es
aaa
jl
and
or
sub
push
inc
test
mov
aaa
jnp
aad
in
cli
mov
pop
xchg
pusha
jge
movsb
add
xchg
inc
movhlps
fisttpl
ret
xor
push
sti
andb
data16
bound
inc
fildll
testb
outsl
cwtl
sub
mov
mov
test
ss
sub
mov
or
es
mov
orl
sti
jb
xlat
cmc
ficoml
inc
pusha
xchg
enter
hlt
add
in
xchg
rol
or
add
sbb
add
add
sub
sub
mov
sarb
ror
mov
fwait
iret
ds
ret
das
push
sbb
test
and
fimull
pop
jg
adc
cli
int3
sub
dec
sti
cmp
stc
int3
out
xor
xor
push
repz
cmc
mov
inc
dec
enter
out
int3
pushl
ds
insl
test
push
es
mov
outsb
mov
cmc
cmpsb
fistpll
popf
mov
frstor
fs
push
icebp
and
pusha
fadd
outsb
scas
scas
lods
mov
sahf
adc
and
fdivs
adc
xor
scas
pop
out
xchg
xor
leave
repnz
in
ffree
adc
sub
cmp
inc
mov
mov
cmp
mov
iret
ljmp
outsl
pop
fucomi
enter
cmp
daa
mov
shr
fidivl
cmp
jnp
mov
and
setns
movsl
pop
test
in
enter
sub
pop
cmp
mov
sbb
enter
jle
push
sbb
stos
mov
cmp
jbe
fcmovbe
cmp
mov
in
inc
scas
js
inc
lds
cmp
movsb
hlt
xchg
sub
mov
xchg
pop
push
into
sahf
repz
jno
sbb
sub
adc
xor
jmp
push
jnp
push
or
fistpll
sbb
add
pop
lea
push
out
sbb
sbb
pop
dec
pushf
sub
mov
mov
icebp
int3
add
push
pop
xor
and
push
xchg
mov
stos
xchg
sub
cmp
add
mov
sti
cmp
sbbb
jno
cli
mov
in
add
in
aam
cwtl
xor
sub
lds
push
mov
das
andl
and
cmp
das
pop
add
movsb
or
cmp
mov
in
repnz
pop
inc
jns
cmpsl
std
decl
pop
cmp
mov
shrb
scas
mov
pop
std
mov
and
lock
pop
add
xlat
add
rcll
inc
cmp
push
mov
mov
cmpb
outsb
insb
fs
sub
mov
mov
cmp
jecxz
cli
mov
mov
in
xchg
leave
cmp
adc
push
mov
imul
inc
add
ja
adc
ja
push
outsb
sub
lahf
out
inc
test
clc
adc
pop
adc
pusha
mov
mov
mov
negl
aas
adc
notl
sbb
sub
ret
mov
cwtl
add
popf
or
mov
cmp
sub
outsl
mov
test
mov
xchg
inc
movsb
sar
out
sti
leave
dec
push
xor
adc
inc
adc
pushf
scas
push
add
mov
mov
xchg
xor
mov
jl
ljmp
or
outsb
sbb
or
xchg
pop
inc
gs
mov
or
sbb
jp
loopne
mov
dec
mov
ds
and
and
dec
test
into
dec
sbb
cmp
adc
stc
popa
ljmp
inc
jo
int3
cmp
inc
insl
sub
xchg
push
sbb
shlb
les
inc
lret
inc
or
dec
xor
inc
jb
mov
pop
cli
xlat
test
pushf
push
cmp
cmpsb
mov
iret
lret
dec
int
mov
imul
movsb
or
mov
jo
push
dec
add
xchg
outsl
mov
push
xor
outsb
scas
add
push
dec
fs
xchg
push
mov
pop
outsb
out
rcrb
das
dec
inc
mov
dec
fwait
sbb
lret
out
xchg
mov
xor
enter
push
das
xor
push
mov
or
inc
idiv
adc
push
mov
fidivrs
test
jns
imul
leave
fisubs
cmpsl
mov
push
jmp
or
jl
test
mov
ljmp
outsl
bound
jns
xchg
in
fsts
mov
stc
xchg
jne
push
add
enter
push
xchg
inc
push
inc
dec
nop
cmpsb
das
lret
bnd
sti
jo
push
xchg
cmp
mov
add
and
out
jae
mov
xorl
xchg
xor
cmp
jae
imul
stos
jmp
stc
inc
adc
jp
imull
aam
jo
adc
push
sub
test
popa
inc
or
cmpsb
std
dec
sbb
cmp
cmp
push
lods
lods
cmp
iret
stos
lock
hlt
xchg
and
push
add
imul
push
mov
cli
inc
push
insb
int
jb
mov
sahf
fwait
into
mov
cmpsl
xor
clc
cmp
mov
push
addb
icebp
ret
xchg
or
mov
mov
mov
mov
mov
lret
add
pop
dec
sub
jbe
fistl
sub
cmp
inc
negb
dec
ret
push
sbb
stos
enter
push
jp
cmp
cmpsb
mov
in
fdivrl
and
jmp
mov
mov
add
into
sti
xchg
jl
cmpsl
sbb
cmp
insb
divb
mov
and
xor
ret
adc
movsl
xor
jnp
or
push
js
pushf
xchg
ljmp
insb
push
fisttps
in
test
cmpsb
inc
adcb
insb
cmp
push
mov
testl
add
add
xchg
xchg
xor
popf
lods
add
xchg
mov
sub
sub
in
inc
outsl
dec
out
data16
cmpb
mov
mov
shlb
xchg
movsb
mov
ss
adc
enter
cld
push
add
movsl
lock
imull
loopne
mov
loopne
pusha
iret
stos
in
fdivl
in
dec
cmpsl
int3
push
movsb
cli
dec
cmp
cwtl
stos
or
inc
shll
jo
adc
jg
inc
fs
fidivrl
ljmp
and
lods
into
jge
mov
das
mov
mov
fdivs
jno
and
pop
fcmovnu
ret
rclb
fldcw
xchg
push
ja
mov
or
addr16
mov
nop
adc
jle
dec
xchg
jne
or
mov
inc
cmp
movsb
adc
das
rol
mov
add
out
jno
mov
lcall
add
push
sbb
std
cmp
push
insl
add
xor
xchg
insl
add
std
mov
push
xor
cmp
dec
mov
sub
imul
aam
mov
xor
jle
push
dec
cld
aam
movsl
loop
leave
mov
or
add
aas
lret
insl
and
or
ds
sub
loopne
andb
lea
lret
ficompl
xchg
jmp
je
loope
arpl
jg
pushf
sub
loop
xchg
pop
cltd
add
lds
iret
stos
mov
adc
jo
and
mov
fisttps
pop
addr16
test
sub
push
pop
call
push
cli
mov
dec
sahf
mov
inc
lds
mov
outsb
lret
rolb
mov
stos
xchg
divl
or
les
push
clc
inc
and
mov
mov
fwait
and
mov
mull
xchg
and
mov
sbb
js
repz
jecxz
js
sub
sub
popa
cld
jns
movzbl
xchg
mov
and
sti
jl
jnp
dec
out
cmp
es
mov
push
sub
out
xchg
pop
xor
imul
push
jnp
xor
movsb
mov
adc
mov
adc
dec
pop
or
cmpsb
mov
lret
negb
xchg
fbstp
sub
test
cltd
popf
je
insb
pop
mov
imul
or
pop
push
lret
and
std
cmpsb
mov
jnp
fsubr
rolb
lahf
mov
repnz
cmpl
js
push
scas
dec
ja
and
push
les
aad
stc
in
shrb
shll
arpl
push
roll
in
cli
fdivp
xlat
stc
add
stc
or
jmp
pop
and
js
pop
out
cs
fsubs
icebp
ljmpw
hlt
mov
pusha
mov
in
xor
push
aas
enter
sti
inc
sbb
xchg
adc
add
jno
adc
mov
jno
mov
lret
jecxz
mov
es
mov
cmpsl
cmp
mov
inc
gs
add
inc
push
popf
xchg
xor
sbb
jno
or
dec
insl
add
pop
cmp
dec
dec
movsb
mov
pop
mov
inc
fcoms
cmpl
out
xor
pop
inc
js
cwtl
bound
dec
adc
fstp
fwait
mov
mov
stc
ficoms
or
dec
shl
xchg
jae
and
nop
or
sbb
test
pushf
adc
sbb
jns
fistl
icebp
insl
mov
fsubl
jg
lahf
jae
movsl
pop
mov
jne
mov
mov
mov
cmpsl
or
mov
mov
push
sahf
cmp
into
or
jp
dec
cmp
movsl
xor
cli
mov
mov
call
stos
inc
pop
adc
jle
orl
sub
arpl
call
and
popf
cmc
enter
mov
sbb
leave
hlt
out
mov
mov
sbb
mov
incb
push
push
adc
xchg
push
sub
mov
xchg
and
adc
fs
lods
add
add
enter
pop
scas
lret
sub
das
pop
int
cmp
call
cmp
adc
xchg
xchg
insl
out
lock
scas
cld
cmp
and
or
or
out
sub
lret
ds
mov
shll
lcall
push
mov
loopne
je
es
xchg
rcrl
and
xchg
imul
mov
out
adc
lods
out
in
pop
fwait
pop
jecxz
adc
or
or
rorl
rolb
test
adc
outsb
imul
fadd
or
or
xchg
sti
call
outsb
insb
dec
jae
das
mov
stos
sbb
jge
pop
push
sbb
mov
aam
cmp
push
xor
andb
dec
hlt
dec
call
and
mov
test
or
xor
bound
aad
repz
mov
jle
xor
ret
test
cmpsl
jp
iret
fsubl
dec
dec
lods
psraw
cmp
push
lcall
icebp
mov
imul
fildll
mov
add
cmp
mov
mov
cmc
pop
into
test
mov
or
cli
rclb
stc
dec
popf
call
in
ss
das
sarl
dec
add
mov
inc
push
xchg
test
dec
pushf
pop
xchg
sub
sbb
mov
stos
pop
pop
outsl
lods
add
movsl
add
mov
jae
test
mov
adc
jno
lahf
aas
jg
cs
mov
in
in
mov
push
or
mov
xchg
xor
inc
leave
dec
rcrb
mov
shl
push
into
dec
and
and
ret
dec
iret
sbb
cs
roll
fadd
mov
cs
subl
scas
xor
sub
das
out
or
mov
outsl
cwtl
xchg
test
loope
cld
jp
test
xchg
addr16
pop
dec
adc
dec
mov
or
xchg
inc
fs
and
cmpb
fdiv
mov
jecxz
xchg
dec
mov
ljmp
sti
adcb
je
les
mov
cmpsl
mov
and
adc
sub
push
mov
jb
sub
icebp
js
xchg
dec
inc
sbb
dec
mov
mov
roll
std
in
int
pop
inc
test
les
clts
xchg
lret
xor
lds
rclb
cmp
mov
inc
pop
in
or
pop
inc
enter
rcrb
pop
subl
cmpsb
mov
pop
jb
pop
stos
adc
push
cmp
xor
adc
fldcw
ja
cmp
lret
jge
test
rorl
or
lods
aam
pop
cld
xor
pop
lret
addr16
inc
fisubl
out
test
inc
popa
clc
je
or
adcb
rcl
popf
xor
testb
cmp
push
outsb
dec
gs
jns
fidivl
lcall
adc
mov
stos
addr16
mov
mov
fimull
call
addr16
pop
cmp
lods
insb
jg
sbb
shlb
loopne
es
pop
pop
xor
jns
jbe
test
addb
dec
sub
dec
into
gs
xor
mov
in
add
dec
out
out
mov
push
cmp
mov
test
lret
cld
frstor
push
push
les
das
jp
popa
jno
jge
sbbb
not
mov
scas
dec
sub
jae
push
fwait
jnp
cltd
lods
mov
pop
scas
decb
insl
add
pop
sub
push
popa
xchg
sub
jno
out
mov
inc
out
jno
cmc
pop
shrl
push
lea
pop
in
orl
mov
out
ljmp
mov
inc
push
inc
fldl
mov
and
out
sbbb
or
cmp
aaa
jp
popa
clc
mov
jg
fsubrp
fdivl
add
jae
mov
lods
int
in
loopne
cmpsl
sbb
mov
adc
ljmp
test
or
fidivrs
xor
push
dec
lock
rcrl
inc
fld
iret
imul
in
ret
sbb
ds
fbld
es
mov
push
popf
stc
shlb
mov
sbb
pop
inc
sub
repz
inc
ficompl
ror
cli
shlb
or
roll
adcb
callw
jne
subl
adc
inc
sub
adc
test
scas
rorl
or
lock
cli
xchg
mov
ret
cld
rorb
or
pop
repnz
sub
push
push
dec
jecxz
mov
mov
testl
mov
sbbb
sbb
jo
or
xor
les
mov
nop
jmp
stos
inc
fmuls
test
stc
insl
and
sub
mov
testb
jmp
add
cmpsb
cmp
int
ljmp
in
inc
fstl
cmp
shll
add
lret
mov
adc
and
rclb
std
sbb
outsl
push
adc
fidivs
xchg
jns
xchg
lret
lret
loop
out
in
lcall
cmp
fidivl
rcrb
xor
cs
mov
sub
jns
js
jge
jne
jle
ret
imul
shrb
cli
dec
sub
lcall
push
scas
mov
mov
rorb
push
cmp
out
test
push
mov
jbe
mov
stc
or
push
ljmp
push
popf
xorl
scas
movsb
iret
data16
iret
data16
pop
repnz
lcall
jbe
pop
mov
das
sahf
xor
cmp
ss
pop
push
movsl
test
jns
movsl
iret
data16
jmp
or
sbbl
sub
dec
in
ja
fidivs
shrl
rorl
adc
push
pop
inc
xlat
mov
scas
stos
lret
aad
pop
lock
mov
inc
push
push
and
mov
les
xor
and
pop
ja
sub
mov
les
out
dec
fists
and
sbbl
push
call
int
stos
inc
add
and
pop
cmp
scas
fs
inc
test
lret
cmc
loope
sbb
sub
dec
cmp
stos
data16
imull
lret
repz
aam
jb
push
pop
lock
das
mov
pop
jno
dec
stos
jp
mov
hlt
or
push
and
dec
lods
jge
push
cmpsb
into
cmp
clc
enter
sbb
inc
adc
in
dec
cli
xchg
popf
jo
mov
lret
push
in
repz
dec
dec
push
cld
xchg
mov
mov
mov
mov
dec
ds
cmp
mov
leave
lcall
cld
out
sti
xchg
cs
mov
dec
dec
jecxz
push
fs
mov
mov
jmp
in
sbbl
add
push
jnp
mov
sbbl
fsubr
cmp
adc
xor
daa
xor
sti
outsb
inc
dec
in
sti
xchg
mov
fldenv
jmp
in
and
dec
insb
jge
fwait
movsl
mov
test
fidivl
pop
pop
and
cmp
movsl
xorb
mov
fstpl
add
and
push
jmp
sbbb
leave
mov
dec
pop
adc
mov
std
xchg
pusha
jo
push
stos
xorb
neg
mov
rolb
xor
pusha
bound
xchg
adcl
out
loope
dec
in
add
shll
mov
orb
popa
loope
cmpsl
pop
clc
shlb
cmp
outsl
push
push
popf
xchg
sub
shr
xor
pop
repz
in
inc
adc
ja
dec
fbstp
push
in
rclb
inc
xlat
daa
out
sti
adc
shll
push
insb
xchg
leave
pusha
int
fdivl
out
sub
pop
outsb
add
jmp
sub
ljmp
aam
scas
add
enter
ds
push
jecxz
dec
js
fildll
iret
dec
loope
mov
jnp
dec
or
es
pop
stc
nop
mov
jle
out
fsubrs
pop
pushf
xor
add
pop
subb
jnp
add
aad
stc
std
xchg
cs
dec
out
dec
push
mov
scas
jl
fcompl
es
stc
sbb
cmpb
imul
cmp
sub
inc
or
pusha
xchg
sbb
mov
xor
and
push
mov
dec
data16
sub
lret
push
xchg
xchg
xor
jp
jecxz
loop
popa
and
jbe
push
dec
hlt
je
movsb
aas
popa
cltd
or
mov
sbb
or
cs
pop
cmpb
shlb
scas
out
dec
ficoml
pop
ljmp
outsb
idivl
fadds
adc
daa
mov
pop
or
stos
pop
outsl
mov
push
scas
cld
test
jge
adc
mov
sub
rcrb
mov
add
cwtl
push
cmpsl
movl
das
mov
push
les
cmp
addr16
fisttps
and
das
ficompl
push
inc
push
bnd
outsl
notl
test
iret
jp
pop
cmpsl
loope
push
and
pop
notl
adcb
adc
loopne
int
lods
adc
cltd
cmp
call
pushf
mov
or
or
shrl
fcoms
icebp
mov
mov
inc
in
lret
jg,pn
inc
cwtl
pop
pop
xlat
jb
loopne
in
mov
sbb
lahf
xor
xorl
dec
or
subb
mov
shr
leave
es
int
sbb
fnstenv
std
jge
xchg
in
lea
ret
or
imul
pop
bound
test
xlat
sub
cld
inc
shlb
pop
fisttpl
testb
push
and
div
push
push
out
push
inc
addb
cwtl
in
scas
dec
and
ficomps
adc
js
mov
push
inc
in
mov
mov
out
mov
or
and
mov
aam
enter
mov
inc
js
int
jl
jmp
out
lret
je
hlt
or
xor
cmpsb
inc
inc
pop
jnp
xchg
je
test
add
sub
inc
call
jg
subb
mov
push
pop
in
lods
and
inc
jmp
mov
xchg
adc
xor
inc
jns
mov
push
cmpsl
rcrb
aas
mov
in
outsb
scas
dec
stos
sub
jno
fistps
xchg
outsb
dec
ljmp
xchg
pop
jne
lods
jmp
out
hlt
cmpl
and
or
mov
xor
pop
mov
rcr
xorb
jecxz
xlat
mov
add
jle
loop
push
test
shrb
popf
movsb
jmp
add
sub
push
jae
cmp
ret
enter
mov
in
pop
fsubs
sub
shll
call
mov
jp
lret
add
push
xor
xchg
cmpl
stos
movsb
movsb
cmp
lret
loope
std
test
popf
push
dec
loop
jl
sbb
mov
ret
inc
lock
inc
inc
xor
jae
jnp
lcall
push
in
out
out
pop
psubsb
cmp
imul
ret
mov
fdivrl
rorl
cs
pusha
pop
rcrl
testb
aam
stos
add
es
push
push
push
mov
js
jmp
fmul
jbe
cld
stc
dec
in
push
mov
push
dec
jl
jge
mov
push
rol
in
test
icebp
cwtl
das
and
insb
add
ss
imul
xchg
push
jmp
mov
jb
pop
adc
nop
daa
popaw
and
inc
sarl
arpl
stc
cmp
adcb
cmp
lahf
imul
mov
fcomp
inc
fildl
daa
push
out
addr16
icebp
mov
mov
mov
ljmp
out
and
xor
stos
aaa
into
jp
test
xor
pop
jae
sbbl
mov
es
add
mov
adc
negl
sarl
xchg
cmp
pop
or
es
adc
mov
loopne
jl
sub
push
popf
arpl
push
test
sbb
sub
sbb
mov
mov
jmp
inc
jecxz
add
test
xchg
imul
imul
into
mull
dec
adc
mov
pop
xor
jnp
jl
ja
jp
lea
ret
push
add
mov
daa
sub
mov
ret
pop
hlt
adc
data16
hlt
xor
mov
out
aad
mov
incb
mov
or
push
or
fcom
push
jecxz
cmp
push
in
push
loope
mov
js
lods
inc
mov
lret
pop
sub
adc
jmp
inc
and
aad
or
sbb
sti
adc
scas
int
fidivrs
adc
jne
cli
cmp
stos
pop
lods
xor
in
mov
lock
lret
adc
fnsave
out
xor
test
pop
sti
pop
mov
dec
adc
ja
push
fs
repnz
in
ljmp
push
mov
es
jno
loopne
adc
jbe
aas
push
mov
pop
mov
fsub
jnp
pop
pop
hlt
nop
das
add
in
sbb
cmp
ds
pop
sbbl
pop
lods
les
jp
stos
icebp
inc
fldenv
int
adc
inc
pushf
xor
jns
inc
xchg
popf
xor
fs
xchg
jmp
rcrb
gs
call
or
cmp
cmpsb
cmp
loope
fistl
mov
jne
xor
mov
xchg
xchg
addl
addr16
sbb
aam
dec
out
inc
xor
jmp
push
jmp
lods
aam
cmc
scas
mov
outsl
js
ret
xlat
int
leave
sub
xor
das
sbb
push
movsl
push
xor
test
fldcw
mov
xor
jg
ret
imul
ret
cmp
sbb
sbb
hlt
adcb
cld
outsb
stos
cmp
and
cmp
stos
fadd
je
into
icebp
sbb
adc
jge
mov
pop
pop
add
nop
mov
popf
and
or
adc
sub
add
sti
rcrl
xchg
adc
orb
sub
push
dec
push
outsl
adc
es
notl
cmpsb
cmc
scas
push
sub
lock
mov
popa
mov
jbe
xchg
std
jl,pt
push
test
mov
jnp
scas
pusha
neg
sahf
add
xchg
cli
movsl
cmp
aad
xor
jne
mov
jl
jne
jae
call
xchg
or
lds
scas
scas
nop
add
sbb
cs
fbld
mov
scas
inc
mov
sbbl
fimuls
pcmpeqd
jl
insb
lods
inc
pop
jg
sbb
fldt
lds
fs
push
and
pusha
push
xchg
testl
dec
enter
mov
lods
cld
adc
inc
inc
incl
out
outsl
dec
fistps
mov
jbe
jecxz
adc
add
xor
pop
push
mov
lret
mov
push
mov
pop
divb
xor
nop
movsb
pop
clc
cmpsb
pop
movsl
xlat
daa
inc
fstl
test
in
inc
es
test
xchg
pop
mov
scas
xchg
and
and
and
mov
jbe
pop
imul
sub
adc
mov
popf
inc
sbbl
hlt
xchg
clc
test
and
pop
push
sbb
push
mov
mov
xor
mov
clc
inc
cmp
rolb
adc
outsl
add
push
mov
mov
inc
fnsave
push
cmp
js
test
sbb
out
and
pop
jp
ss
xchg
popa
clc
int
add
mov
mov
popf
cmpsb
xchg
inc
ffree
movsl
ss
lock
and
sbb
dec
xchg
cli
cwtl
and
ljmp
lea
push
imul
fnsave
fldl2e
orl
and
pop
push
addr16
into
push
jns
add
roll
push
dec
pop
sbb
orb
pop
push
aaa
into
bound
js
pop
adc
inc
insl
cmp
jp
cmp
dec
scas
mov
sbb
scas
and
and
inc
and
adcl
dec
in
mov
sti
out
sub
aas
jp
pop
insl
push
mov
outsb
arpl
lods
inc
push
jecxz
xor
test
lea
jg
movsl
and
stos
std
les
stos
movsl
cmp
dec
arpl
jns
clc
push
xchg
add
rcll
cmp
xor
test
jecxz
mov
flds
dec
and
mov
add
std
xchg
xor
cmp
test
lods
adc
cmpsb
pop
ja
dec
rolb
mov
je
sub
mov
aaa
js
sbb
ret
and
pop
sbb
pop
dec
pop
push
in
push
addr16
stc
xchg
xchg
cmp
add
add
scas
xor
mov
push
test
inc
fistl
shl
repz
je
push
sbb
xchg
and
cmp
in
test
push
fwait
xchg
pop
and
lock
push
out
add
inc
fmull
or
jns
aaa
push
jmp
mov
or
dec
pop
jnp
dec
les
popl
cli
loope
js
icebp
or
jg
push
mov
fldcw
jge
clc
jecxz
sub
sub
test
je
fbstp
sahf
and
push
insb
fidivs
inc
stc
jne
xchg
adc
out
xchg
mov
psubb
fdivl
call
iret
lea
in
pop
pop
adc
xchg
cmpb
or
xchg
mov
xchg
dec
fucomp
orb
outsl
push
insb
and
call
mov
jo
push
faddl
movsl
hlt
adc
stos
inc
aad
inc
fildl
stos
jecxz
in
gs
push
push
test
test
mov
ror
lds
mov
stc
outsw
pop
cmc
pop
nop
add
fwait
sti
fldenv
xor
adc
xor
inc
fsubr
pop
loope
cmp
jno
stos
xchg
push
and
jbe
lds
ret
fldenv
cli
sbbl
adc
popf
inc
bnd
in
mov
xor
lret
inc
sbb
ret
loop
inc
iret
fsubrs
outsb
test
add
mov
addr16
pop
inc
retw
insb
popa
clc
sahf
pushf
push
in
push
mov
sti
xchg
add
sub
lods
cmp
sbb
pusha
shrl
hlt
test
xchg
jnp
add
and
aaa
lods
lds
mov
stc
daa
lods
push
in
sbb
pusha
shrl
test
push
jmp
and
dec
loop
jle
push
call
lret
rcl
mov
and
and
pop
outsb
push
shrb
xchg
jbe
in
push
insb
lret
bound
jecxz
pop
sahf
push
jmp
stos
push
lret
les
mov
mull
lds
in
jnp
cli
stos
adc
add
repz
sbb
sub
xor
mov
mov
test
dec
push
mov
mov
repnz
pop
in
ds
or
out
xlat
push
add
mov
xlat
outsb
mov
iret
pop
hlt
mov
iret
aam
rcrb
lock
gs
sub
shrb
inc
add
cs
movsl
cmp
sub
inc
fldenv
ficomps
rorb
jl
adc
outsb
test
xor
mov
sub
pop
jle
jo
pushf
cwtl
gs
lret
loop
in
lcall
movsb
cmp
ret
pop
sahf
mov
inc
fcmove
mov
in
pop
push
cmp
inc
aas
sbbl
xchg
mov
in
in
pop
push
lock
fsubp
inc
fs
jno
pushf
xor
cltd
add
and
cmp
ret
mov
inc
fidivl
pop
sub
sbb
sbb
ret
ss
int3
arpl
fldcw
or
or
and
mov
lods
subb
and
dec
jecxz
and
mov
sub
sbbb
add
mov
movsb
add
sub
add
int3
push
imul
cmpsb
lahf
jbe
adc
or
add
inc
sub
push
divb
cmpsb
cmc
adc
addb
cli
xchg
fisubrl
mov
pop
sbb
nop
mov
ret
clc
mov
mov
insb
add
out
xchg
fldl2t
or
lods
inc
repnz
test
dec
jecxz
jns
subb
sbbb
mov
in
hlt
mov
cvttps2pi
aas
dec
jmp
bound
mov
ljmp
pop
hlt
mov
lods
inc
lea
dec
loop
inc
icebp
mov
cmp
test
fdivr
xchg
iret
xchg
and
sub
cli
xchg
mov
arpl
push
jmp
fwait
mov
sti
xchg
xchg
frstor
test
sub
or
xchg
jg
jecxz
cmpsl
jle
xorl
sbb
jne
cltd
sub
mov
pop
jbe
pop
test
ret
hlt
dec
loopne
inc
push
add
test
lods
repnz
lds
cmc
call
jecxz
dec
in
fdivl
gs
loop
add
xchg
xor
sbb
and
lds
push
in
sub
jae
jl
add
iret
xor
cmpsb
arpl
scas
inc
and
aad
inc
int
jne
dec
loop
xchg
jmp
leave
push
jp
xchg
or
fidivrl
sub
imul
dec
loop
dec
shrl
fisubrs
adc
mov
testb
sub
cs
jl
lret
lahf
dec
loope
sub
sbbb
sbb
cmp
stc
xchg
cmpsb
cmp
push
dec
in
call
push
jge
les
xchg
les
lods
inc
inc
loope
mov
arpl
cwtd
xor
push
lea
mov
fistpll
adc
rcll
dec
test
xor
push
test
sub
xchg
mov
movsl
scas
std
rcrl
sub
add
jbe
and
push
ret
mov
in
test
mov
clc
sub
iret
cltd
adc
lds
ljmp
jbe
jle
outsb
add
pop
push
or
pusha
outsl
lods
inc
mov
lret
cld
dec
out
cmp
out
test
sti
xchg
lods
popa
mov
xchg
mov
mov
mov
inc
fistl
aam
cmc
pop
insl
add
adc
pop
xchg
mov
inc
aaa
pop
mov
mov
add
cld
xchg
xor
cmp
lahf
test
lods
adc
pop
inc
fmull
sub
out
dec
lret
js,pt
mov
insl
add
rcrl
pop
mov
dec
and
sub
jae
orl
xchg
fucomi
test
and
andl
lds
movsb
pop
notb
int3
lret
sub
fwait
sbb
dec
stos
mov
mov
push
mov
fwait
xor
dec
loope
inc
xchg
cmp
test
lods
mov
fisubrs
sub
es
lret
fiaddl
cmp
std
rclb
inc
fcoml
out
push
popf
loopne
loop
jo
cmp
rcrl
adcb
in
mov
mov
mov
stc
mov
roll
pop
sub
pop
dec
mov
mov
lods
lret
lods
inc
cld
mov
shll
pop
dec
loop
and
xchg
outsl
in
andl
mov
cld
add
sub
out
outsl
lret
popa
push
out
push
int3
mov
notl
inc
fisttpll
push
in
push
gs
xchg
inc
pop
repnz
cmp
stos
sbb
mov
sbb
xchg
pop
dec
in
shlb
pushf
pop
testb
push
popf
dec
inc
dec
out
bound
xchg
inc
pusha
divl
mov
ds
pop
scas
inc
cmp
ds
dec
filds
lods
fbstp
jae
imul
sub
jbe
lods
mov
out
into
cld
aas
sub
inc
fsubrs
test
push
roll
out
xchg
or
sti
inc
lahf
ss
sub
jnp
cmp
rorl
iret
sub
push
jg
push
data16
mov
movsl
stc
cwtl
das
sub
sahf
xor
je
jmp
ljmp
out
mov
pop
imulb
roll
inc
clc
jne
adc
es
roll
sbb
enter
mov
es
lret
add
xchg
int3
dec
jecxz
and
xlat
ret
mov
hlt
adc
clc
sbb
mov
push
out
mov
out
sahf
pop
mov
pop
ljmp
scas
xor
pop
scas
inc
mov
pop
cmpsl
dec
fwait
pop
or
loopne
xor
pop
inc
pop
ja
lea
pop
gs
xchg
ficoml
outsl
push
and
mov
stos
push
sbbl
iret
scas
cmpsb
cmp
mov
inc
fnstsw
jmp
inc
fcoml
js
pop
mov
nop
stos
xchg
fadd
lods
inc
mov
and
mov
lret
cmpsl
ds
into
xlat
outsb
shl
jle
repnz
in
adcb
call
lds
sar
xchg
repz
xchg
sbb
adc
jns
jns
out
test
daa
mov
pop
loopne
sub
mov
and
inc
mov
push
movsl
testb
mov
cmc
arpl
in
mov
fidivrl
insl
add
hlt
mov
push
lret
mov
shlb
jne
cmp
and
sub
fwait
or
cmpsb
mov
and
jge
rorb
incb
orb
mov
mov
mov
inc
fisubrs
inc
loopne
jbe
insl
add
mov
adc
jge
adc
repnz
cmpsl
je,pt
push
call
shl
ljmp
pop
xchg
sub
inc
jo
jbe
sub
sarb
mov
fisubs
rcl
insb
ret
addr16
hlt
test
out
addr16
sbb
adc
addr16
xchg
cs
jmp
in
xor
sbb
xor
xchg
sub
pusha
test
ljmp
jnp
nop
daa
push
andb
mov
or
or
and
dec
jecxz
addb
mov
push
popf
mov
xchg
or
xor
push
pusha
inc
fcoml
jle
mov
lcall
ret
adc
scas
inc
testl
fdiv
mov
add
je
rclb
lds
push
out
mov
sbbb
cmpsb
lock
mov
xacquire
and
sti
xchg
icebp
dec
and
xchg
mov
leave
call
push
out
in
inc
fcomp
cmp
jle
lock
xchg
jecxz
adcb
adc
pop
test
pop
scas
add
cs
pusha
pop
sub
mov
aam
ja
inc
and
bound
adc
adc
pop
mov
push
mov
scas
stc
jnp
outsb
lods
cld
lahf
ss
lds
imul
or
push
imulb
mov
std
sbbl
les
mov
push
cld
mov
out
jns
jle
sti
es
cmc
incl
scas
dec
out
mov
lcall
loopne
shll
ret
adc
test
pop
subb
popf
shlb
mov
out
add
inc
jmp
jno
imul
pop
cmp
mov
mov
into
add
adc
pop
dec
in
jg
clc
outsl
cmpsl
jmp
dec
adc
mov
xor
inc
out
xchg
xchg
into
jne
dec
shrl
loope
add
cmp
stos
cmp
mov
fistl
mov
rorb
add
pop
lock
jmp
aas
fisttpl
jne
aam
rolb
data16
shll
bound
dec
ja
imul
push
fwait
hlt
mov
mov
jp
addb
mov
shlb
loop
push
mov
sbb
fdivl
jae
mov
or
pop
cld
ret
mov
cli
dec
mov
stos
daa
arpl
xchg
es
xchg
cltd
mov
aam
iret
push
inc
pushf
inc
push
adc
mov
shrb
flds
test
xor
pusha
shrl
fcoml
stos
into
mov
xlat
outsb
jle
adc
insl
push
mov
xorl
arpl
ds
push
testb
bound
into
inc
mov
lods
inc
div
xchg
sub
or
into
jns
xor
jae
stos
inc
cli
fwait
aam
int
aaa
into
jle
jae
pop
xchg
test
add
stos
jno
push
in
cmpsb
pushf
pop
out
int
mov
outsl
sbb
dec
out
xor
xor
popf
xor
shlb
mov
decb
and
dec
xchg
and
xchg
push
mov
or
cmp
jge
adc
into
aas
cmp
mov
dec
mov
push
mov
ss
fstpl
push
xchg
mov
xchg
pop
cmp
lods
jae
xor
int
aam
adc
movb
rclb
outsb
add
imul
es
mov
xchg
mov
xlat
and
or
aas
lods
cmp
loop
fnstenv
xor
pop
scas
pushf
push
mov
mov
je
or
jge
dec
pop
jno
cwtl
xchg
pusha
neg
fs
aad
cmp
sub
mov
sbb
rcrl
add
clc
push
sbb
rcrl
add
sbb
std
and
nop
xor
sbb
cmp
cmp
popa
mov
pusha
xchg
daa
je
out
popf
mov
cmp
shl
movsb
sahf
xchg
push
fstl
and
scas
inc
xchg
mov
mov
and
sbb
ja
cmp
shrb
push
cmp
sti
and
scas
daa
dec
pop
and
adc
outsl
sti
ss
dec
cmp
sbb
jecxz
addl
pop
sbb
cmpsb
pop
leave
popa
xor
cmp
add
sbb
sbb
jo
cmp
dec
mov
lds
mov
push
ret
sbb
sbb
cwtl
hlt
cmp
fisubs
cmp
mov
dec
mov
lcall
pop
rcrl
std
mov
and
add
int3
push
ljmp
and
push
subl
pusha
mov
mov
add
test
push
std
sub
and
lea
ds
leave
sub
popf
pop
pop
xchg
sub
cmpsb
rolb
mov
inc
xor
cmp
pop
dec
push
and
or
jl
sub
add
and
int3
imul
loop
add
lcall
jb
daa
lret
test
dec
push
cmp
in
cld
mov
repnz
mov
xor
popa
cmpl
mov
pop
icebp
add
test
es
pop
sub
sub
lods
int3
mov
gs
fbstp
xchg
es
fcmovbe
insb
or
lods
inc
cmpsl
sub
lret
cli
adcb
mov
ljmp
outsl
or
push
shll
bnd
add
enter
gs
lret
es
push
in
sbbb
jns
sbb
int3
mov
push
les
rcrl
fdivl
jae
outsl
mov
fcomip
lea
pop
xor
lea
adc
arpl
xor
lods
add
xor
push
mov
outsl
adc
lods
je
testb
test
lods
pop
mov
adc
fistps
pusha
shlb
mov
fs
out
and
or
mov
fstp
outsl
cmovo
lods
jno
testb
adcl
pop
mov
adc
mov
clc
loope
fwait
xor
adcb
jl
push
scas
push
sahf
clc
int
cld
jg
lds
dec
popf
xor
sbb
mov
mov
test
cmc
fnstenv
mov
testl
int3
gs
adcl
or
jo
sub
inc
ffree
pop
mov
stos
mov
imul
mov
adc
arpl
pushf
and
mov
leave
pop
or
inc
shl
orl
add
add
mov
movsl
jle
mov
cld
mov
dec
aam
rclb
push
ljmp
jno
jns
cld
xchg
call
or
mov
in
lods
inc
pop
pop
cmp
lea
bound
push
out
fists
jbe
xor
pop
sahf
pop
push
xchg
sub
cmpsl
mov
shlb
frstor
push
dec
out
test
mov
popf
xor
repz
and
mov
fbstp
fnstenv
cwtl
data16
leave
jl
mov
rclb
cmp
xor
pop
or
je
mov
paddsw
mov
cwtl
pop
jae
je
ret
shrb
or
aad
imul
mov
xor
cmp
mov
mov
out
and
dec
ss
cltd
push
dec
lods
lock
fnstsw
push
notb
test
pop
in
jnp
imull
or
mov
push
int3
sub
sbb
sub
inc
loopne
pop
cltd
loopne
dec
stos
cmove
dec
jg
mov
or
aaa
add
sbb
jo
sbbl
daa
push
sbb
rolb
movsl
xchg
inc
push
rcrl
adc
rcrl
sbb
inc
scas
lods
dec
push
movsl
lock
fidivl
adc
inc
loop
xchg
adc
xor
insb
add
test
shlb
fcoms
or
inc
xchg
xor
fs
pusha
call
or
jg
fsubrs
popf
mov
int
pop
scas
and
scas
incl
bswap
or
and
les
xchg
sub
aam
dec
or
outsb
add
sub
arpl
lea
push
jp
subb
or
mulb
sub
push
fxch
popa
or
lods
movsb
sub
jle
lds
leave
testb
pop
push
jmp
sub
sub
psubd
xor
popf
add
lods
in
adc
arpl
imul
add
sbb
sbb
pop
insl
mov
clc
out
ret
pop
add
adc
jns
push
mov
jo
dec
mov
pop
out
and
daa
and
cmc
cmp
mov
lret
fmuls
fisubl
aad
rcr
cmp
dec
mov
pop
pop
lock
jno
lods
mov
mov
mov
xchg
cmp
sub
pop
sub
insl
imul
lret
fs
xor
fucomi
dec
jle
mov
xchg
ljmp
push
mov
add
popa
les
out
lods
pushf
lea
outsb
mov
bound
cmpsl
and
pop
xor
cmp
cli
sarl
pop
mov
cli
iret
lds
shrb
mov
xchg
push
sbb
jae
and
ja
orl
in
fnstsw
sbb
inc
push
out
in
push
orl
xchg
punpckhwd
mov
jg
ljmp
adc
les
lea
cmp
rcrb
fcmovbe
xchg
repnz
aad
sub
push
mov
xlat
lcall
sub
inc
xchg
bound
mov
loopne
or
sbb
inc
inc
iret
cwtl
sti
and
inc
sbb
jmp
sub
pop
mov
jne
ret
lret
fwait
loopne
pop
mov
adc
inc
out
inc
aas
stc
push
std
push
cmp
fwait
mov
add
rcrl
xchg
arpl
mov
stos
and
cmp
sti
gs
out
push
ret
mov
enter
sbb
adc
jmp
inc
or
mov
mov
int3
fwait
int
add
scas
inc
movnti
and
xor
cld
stos
mov
mov
icebp
pop
adc
rorl
jl
ds
sbb
into
inc
and
or
ret
arpl
ja
inc
xor
cmc
pop
dec
out
mov
imulb
mov
add
dec
jecxz
dec
leave
aaa
out
add
jmp
cs
aaa
mov
outsb
pop
mov
ljmp
lea
sahf
jge
mov
pusha
mov
mov
and
push
add
jecxz
mov
dec
dec
in
imul
lods
sub
call
aaa
movsl
and
xchg
cmp
xor
mov
jo
lcall
mov
add
pop
cld
and
aaa
movsb
mov
xchg
aam
cmpsl
rcll
pop
cmp
je
mov
je
mov
jle
pop
push
lds
mov
icebp
popa
test
add
sbb
and
es
movsl
rclb
cmpsl
mov
pop
cmc
arpl
adc
test
fidivrl
mov
or
mov
pop
fcoml
jl
adcb
in
aam
add
in
incb
lret
mov
jo
hlt
jge
cld
cmp
push
rcrl
aam
hlt
cmp
mov
movsb
loop
addr16
dec
sub
mov
fwait
pop
rorl
stc
pop
push
mov
add
xchg
push
jbe
xlat
ret
lods
popa
lods
sbb
fwait
roll
rcll
ss
in
test
inc
sub
sub
std
jae
int3
test
fidivrl
mov
lret
xor
and
dec
fidivs
iret
push
in
add
sbb
push
repnz
pop
mov
cmpsl
lods
sub
push
iret
insb
jl
cltd
stc
jae
stos
cmpsb
mov
and
mov
test
xchg
push
or
test
test
fdivrl
xor
xor
into
cmc
mov
test
ret
inc
flds
or
sbb
inc
pushf
cmp
adc
inc
testl
mov
add
add
xlat
pop
das
fdivrs
cmp
daa
in
push
addb
fisttps
ds
imul
jae
jg
iret
sbb
and
addr16
fs
and
mov
aam
fidivrs
or
enter
pop
mov
test
ficompl
xchg
and
mov
dec
insl
test
push
or
fdivl
popa
cmc
mov
call
xchg
jb
dec
and
sbb
dec
or
jecxz
push
xchg
call
in
adc
orb
out
inc
mov
outsb
pop
out
push
jecxz
pop
adc
arpl
lods
lret
mov
adc
push
repnz
mov
or
shlb
jl
mov
add
js
mov
cmp
cltd
sub
cmp
cli
jbe
ja
seto
mov
hlt
mov
test
and
andb
outsl
cld
out
fwait
push
mov
push
js
xchg
pop
data16
sub
cli
scas
jmp
inc
inc
sub
or
cmp
stc
mov
daa
rcrb
loopne
push
or
mov
cmp
flds
pop
inc
mov
inc
enter
sti
cwtl
insb
mov
mov
aas
sahf
test
scas
sub
mov
mov
movsb
ret
movsl
aaa
fisubl
dec
test
es
jne
in
mov
sbb
orb
cmp
popa
insl
mov
xchg
arpl
inc
fstl
shlb
mov
cld
dec
pop
sbb
les
pop
out
jns
hlt
or
cli
cmp
orb
cmp
fs
stc
xchg
jp
add
xchg
hlt
mov
out
jo
xchg
jle
or
loop
gs
arpl
sbb
inc
iret
add
cs
scas
aas
and
push
mov
mov
rolb
or
mov
xchg
imulb
push
movsl
sbb
dec
cld
adc
or
cmpsl
or
jns
lock
mov
pop
mov
xlat
cmc
add
test
fwait
aad
or
adc
adc
adc
loope
jl
gs
sti
mov
test
dec
nopl
mov
ret
hlt
ret
dec
jecxz
adc
imul
push
mov
lcall
ds
or
jl
inc
inc
notl
mov
adc
pop
orl
mov
nop
daa
mov
cld
scas
pusha
int3
scas
or
ja
mov
mov
add
daa
sbb
ja
loopne,pn
xor
xor
push
in
sahf
jo
adc
or
jns
out
xchg
mov
sti
outsl
or
inc
dec
shrl
repnz
leave
pusha
mov
ret
hlt
gs
popf
inc
mov
sbb
cwtl
or
fldl2e
pop
ret
pop
or
cmp
loope
loop
jg
popl
add
loop
push
mov
add
fcoms
jno
stc
pop
icebp
sub
js
jge
push
lods
cs
xchg
sub
xor
dec
and
push
jmp
ja
jo
cmp
jecxz
ss
cwtl
or
inc
pop
xchg
cltd
test
ja
test
andl
jbe
push
int
push
out
xor
xor
sub
leave
and
cmp
pop
push
inc
adc
dec
dec
xor
inc
push
and
cmp
pusha
xor
sub
rcrl
sbb
inc
cli
pop
or
push
or
cltd
loope
xor
sbb
in
test
xor
push
inc
fiaddl
test
clc
fnstenv
jg
sub
mov
cmp
xor
pop
stos
inc
mov
enter
fnstenv
add
jle
inc
testl
lret
mov
sbb
inc
fsubrs
push
call
jle
outsl
push
ret
adc
jecxz
and
repz
xor
inc
mov
pusha
mov
fucom
jle
in
cmc
mov
xor
add
mov
adcl
and
mov
add
xchg
xor
iret
cmpsb
push
push
mov
daa
mov
push
fsts
test
hlt
out
and
inc
fcomp
enter
mov
lock
fidivl
adc
xorl
movsb
movsb
jns
push
inc
out
xorb
lds
leave
sbb
add
test
mov
out
inc
fsubp
jnp
gs
and
mov
ret
and
xor
adc
dec
in
dec
arpl
cmp
js
rcrl
jnp
jne
dec
movsb
jo
jno
inc
clc
jb
and
dec
adc
xor
sub
or
lods
xchg
dec
loopne
into
mov
scas
movsb
loope
or
inc
mov
xchg
hlt
xchg
out
dec
loop
pop
pushf
xor
insl
dec
lcall
sbb
mov
push
mov
and
les
test
das
loopne
insb
idiv
nop
jmp
or
insb
or
jmp
aad
push
call
xchg
ret
mov
scas
jg
enter
inc
jmp
int3
arpl
std
test
out
mov
sbb
daa
mov
xchg
sub
lret
xor
cltd
xor
pop
hlt
mov
ficoml
lret
iret
leave
pusha
cli
in
ret
pop
ficomps
lcall
adc
orl
jbe
rcrl
fidivl
aaa
jecxz
test
lret
xor
mov
iret
lock
mov
cwtl
add
mov
pop
pop
das
movb
jp
loop
or
mov
mov
and
popf
xor
popa
into
gs
sub
into
push
je
jge
cmc
loope
xor
pop
idiv
sbb
js
scas
shrb
pop
aas
jl
xor
xor
and
xchg
inc
call
in
sbbl
cmp
jnp
out
cmpsl
mov
jmp
sub
ret
and
xchg
insb
inc
xlat
mov
inc
frstor
pop
and
xor
push
adc
inc
out
or
pop
mov
ja
insl
mov
into
mov
loopew
cmpsl
and
cmpsb
xchg
push
cmp
ja
testl
add
enter
rorb
testb
ds
stos
gs
fnstsw
insl
jne
mov
incl
clc
andb
and
dec
mov
push
and
inc
les
mov
or
mov
push
mov
movsb
jo
and
pop
add
xchg
and
mov
add
scas
hlt
mov
dec
push
lods
lahf
pop
xchg
dec
ss
xlat
imul
sbb
orb
add
dec
loopne
test
push
jmp
movsb
cmp
into
stos
dec
pop
divb
mov
mov
fcomip
shr
xor
sbb
shrl
mov
aad
push
adc
mov
pop
shrb
sub
or
sbb
adc
cmpsb
dec
push
cmp
and
cmp
push
sbb
push
mov
jbe
sbb
cwtl
lea
and
jnp
push
sbb
pop
inc
lret
bound
repnz
inc
les
repnz
pop
lcall
imul
xchg
mov
std
cmp
add
xor
mov
mov
inc
pop
ss
shlb
js
push
ja
lcall
jge
inc
outsl
in
inc
adc
mov
popa
out
and
xchg
xchg
xor
mov
push
push
mov
dec
mov
cmp
push
pop
fdivl
cli
push
loope
lock
mov
ss
push
dec
in
adc
cld
xchg
jle
sub
sbb
dec
pop
cmp
movsb
and
fnsave
fbstp
loope
cli
rclb
cli
xchg
in
pop
sahf
mov
push
gs
dec
cwtl
sbb
adc
mov
popf
mov
lods
inc
xor
es
insb
int
pushf
fs
out
inc
ja
push
imul
enter
sbb
nop
in
shlb
cmpsb
test
inc
in
jl
dec
loopne
adc
mov
scas
inc
pop
out
leave
and
mov
outsl
lret
push
mov
stos
inc
fstp
and
xchg
jno
fistl
ds
imul
int3
cmp
fdivl
ror
outsw
add
or
cmp
out
adc
mov
shrb
ljmp
popf
xor
int
cmp
loope
push
sarl
ss
mov
xchg
mov
push
sbbl
or
out
xchg
mov
sahf
clc
test
shlb
in
ror
lds
pushf
xlat
push
addr16
jne
jmp
or
jnp
cmp
sbb
pop
jecxz
mov
mov
ret
xlat
outsb
mov
lds
pop
or
nop
jmp
jp
addr16
push
lods
in
sbb
push
cmp
ss
insb
or
mov
repz
fldt
mov
add
js
sbbl
inc
xchg
fidivs
repnz
xchg
adc
iret
cwtd
mov
mov
test
aas
dec
enter
lcall
jae
shlb
outsl
or
pop
in
sbb
sahf
mov
int3
push
mov
pop
aas
lret
ja
mov
ret
cmp
jge
in
sbb
mov
fwait
xor
iret
sbb
jnp
or
push
bound
mov
push
ljmp
jecxz
mov
mov
je
jbe
movb
mov
out
sbb
xor
cld
cli
insl
in
nop
outsb
add
jg
mov
mov
push
mov
mov
pushf
xor
jne
mov
fldenv
mov
and
pusha
neg
fcoms
nop
icebp
mov
lods
in
adc
test
clc
pop
outsl
sbbl
test
lret
mov
fdivl
repz
out
loope
xchg
jne
mov
jecxz
xchg
sub
mov
dec
add
js
out
cs
dec
loop
dec
repz
adc
push
aam
repnz
mov
insl
add
xchg
mov
int
sahf
xor
stos
mov
aam
pusha
fwait
xor
push
or
ja
pusha
out
jg
push
out
pop
or
test
stos
pop
xor
dec
sub
out
popf
or
mov
pop
cmp
mov
pop
mov
flds
or
dec
mov
sbb
outsb
mov
jns
sbb
ds
jo
ja
into
xchg
arpl
imul
iret
data16
xor
push
jle
pop
scas
clc
lahf
rcrl
fs
cmpsb
inc
mov
imul
pushf
xor
jecxz
lock
fimuls
movsl
rcll
bswap
push
mov
fwait
mov
mov
sbb
jbe
xlat
cmp
dec
xchg
add
inc
sub
inc
fidivs
fdivrs
out
jne
inc
dec
mov
lods
outsl
mov
add
popf
test
jb
inc
mov
pusha
lcall
adc
ss
mov
shrb
push
jne
lret
cs
cld
sbb
push
sbb
pmuludq
push
jg
popa
clc
push
mov
jae
movsb
rep
inc
and
inc
fidivl
sbb
pop
dec
cltd
sti
xchg
lret
insb
loop
pop
jge
loop
ljmp
mov
das
pop
cmp
insb
subb
call
adc
dec
loope
ds
test
out
gs
push
cltd
imul
das
loop
enter
pop
xchg
fiadds
ljmp
xchg
hlt
add
push
test
mov
mov
pop
les
test
dec
repnz
jecxz
imul
aas
inc
aaa
into
pop
pusha
sbbl
jns
lret
out
xchg
inc
fidivl
cmp
inc
fisttpl
stos
jl
add
in
push
and
je
je
pop
cmpsb
enter
mov
mov
movsl
out
cmp
cmpsb
popf
adc
test
mov
xor
dec
and
mov
mov
imul
cld
xchg
sub
and
repz
in
sbb
or
leave
outsl
xor
cmpl
stos
dec
fsubrs
shrb
mov
pop
adcl
jl
pop
cmp
and
adc
ror
mov
dec
into
enter
inc
lea
mov
mov
rolb
push
jae
int
stos
sbb
push
in
dec
leave
mov
sti
xchg
test
ds
push
scas
insl
xlat
mov
adc
and
cmc
xor
sub
cmpsl
jae
push
dec
loope
clc
mov
repnz
dec
mov
and
sub
in
je
dec
pop
filds
icebp
mov
add
in
xchg
or
inc
xchg
sbb
adc
stc
add
sbb
push
in
and
addl
fnstenv
ror
popa
out
mov
xor
mov
pop
add
daa
cli
xchg
pop
sub
inc
xchg
pop
pop
mov
mov
arpl
jo
xchg
sub
mov
shlb
aas
dec
loop
sub
add
or
jnp
dec
mov
mov
pop
mov
cltd
cli
push
out
mov
xor
popf
cs
sub
shlb
jle
int3
and
in
add
bnd
cld
sbb
dec
jecxz
cmp
pop
icebp
lock
sbb
in
sub
fiadds
icebp
xor
adc
imul
adc
jmp
andl
fs
and
inc
inc
fistl
sub
push
je
mov
jb
les
jae
js,pt
aam
pop
jmp
jo
aas
gs
jge
xor
fwait
xor
fsts
test
insb
std
inc
fsubrp
lea
js
lret
bound
xchg
sub
pop
jnp
mov
ret
mov
daa
inc
push
xchg
sub
popa
mov
xchg
pop
stc
nop
fs
sub
test
mov
mov
lods
xlat
lds
into
ret
sub
popf
in
dec
loopne
ja
mov
add
mov
xchg
fs
or
fbstp
movsw
cmp
pop
rclb
pop
out
inc
or
jnp
xchg
sub
outsl
push
fwait
pop
scas
inc
xchg
mov
mov
cltd
jns
das
daa
mov
loopne
xchg
lds
test
push
loop
loop
push
and
divb
gs
outsb
and
push
push
lods
sub
dec
addr16
adc
stc
andb
repnz
inc
ficomps
test
adc
ret
sbbl
xchg
dec
in
inc
jecxz
xor
in
enter
sbb
ret
mov
lahf
ss
sub
pushf
or
xchg
jp
pop
out
xchg
sti
xchg
pusha
loope
dec
ror
nop
daa
mov
xchg
inc
xlat
add
out
shlb
push
mov
inc
dec
mov
ret
repnz
mov
or
lods
sbb
mov
push
out
lods
outsb
add
xor
dec
in
push
in
addl
xlat
mov
and
pop
lahf
shlb
mov
ds
std
loope
ret
pop
push
cmp
jb
testb
insl
xor
andb
pop
repz
cmp
lret
mov
scas
push
xchg
jno
scas
push
addb
mov
sahf
mov
mull
shll
fbstp
ljmp
xor
sbbb
stc
ret
pop
in
int
inc
rcl
push
ret
push
dec
mov
add
imul
mov
jmp
add
mov
jge
mov
push
inc
sbbb
cmp
shrb
adc
leave
andl
pop
out
mov
loope
adc
mov
or
sbb
mov
outsl
sahf
int
sub
adc
js
mov
fiaddl
imul
sbb
movsl
jns
int3
arpl
adc
dec
stos
lods
inc
cmp
test
aas
imul
shrl
mov
insl
push
ficoms
and
mov
ljmp
hlt
insb
add
in
arpl
lock
xchg
and
ljmp
jmp
add
fdiv
mov
inc
or
jb
push
in
dec
xchg
repnz
push
mov
les
in
pop
in
xchg
pop
jle
or
jle
jge
jmp
mov
gs
sahf
xor
push
test
jo
gs
mov
add
lods
push
cmp
mov
jg
push
in
das
mov
or
xchg
mov
adc
je
dec
out
xchg
stc
and
inc
adc
cmp
adc
outsl
inc
pop
scas
pop
nop
dec
in
jl
sahf
dec
inc
and
js
and
std
sub
in
push
dec
sbb
inc
rorb
lahf
out
or
cltd
pop
daa
mov
push
push
out
aam
arpl
jnp
sbb
sbb
dec
dec
loop
inc
xchg
push
jbe
stos
inc
js
decb
or
xor
movsb
mov
rcrl
lea
xor
sbb
gs
dec
jecxz
adc
mov
aaa
pop
scas
dec
mov
push
jmp
pop
mov
and
dec
lcall
sahf
std
xor
lret
scas
paddsb
sti
jae
sub
and
dec
in
inc
jp
push
xor
mov
dec
xchg
dec
jecxz
push
add
test
out
push
pop
scas
xchg
lods
inc
inc
test
aam
arpl
jnp
cli
and
pusha
ficompl
in
and
mov
mov
out
jmp
or
lret
lock
jno
mov
filds
cwtl
call
or
mov
push
ljmp
and
push
dec
out
mov
xchg
out
aaa
dec
out
bndstx
xchg
xor
movsl
mov
daa
jmp
xchg
mov
addr16
xchg
rcrl
fidivs
mov
jecxz
test
enter
icebp
lret
jae
jb
dec
bound
add
mov
cmpsb
cmp
loopne
stos
inc
incl
jmp
sbbb
mov
addb
divb
cld
xchg
inc
jno
mov
jg
dec
out
outsb
add
lahf
mov
adc
mov
loop
jmp
adc
add
lahf
ljmp
inc
xchg
dec
jl
pop
movsb
push
xchg
leave
pop
iret
jl
into
scas
out
fbstp
push
in
cmp
gs
push
pop
sub
fwait
mov
mov
fnsave
punpckhbw
aas
xor
mov
call
hlt
movsl
pop
cmp
dec
and
sub
push
shrb
push
sbbl
insb
inc
in
cmp
lods
jle
and
mov
jmp
add
ret
ja
and
aad
clc
fildl
dec
loopne
push
cmp
xchg
mov
out
cmp
test
mov
pop
leave
jg
cmp
lds
cwtl
das
imul
push
dec
test
stc
shrl
gs
push
mov
jne
js
push
inc
inc
lods
inc
addr16
xchg
mov
add
cmp
mov
mov
jne
mov
out
test
mov
loope
push
lods
pushf
add
mov
dec
push
inc
faddl
pusha
sub
pop
sahf
sub
fisttpl
aaa
and
mov
aas
jbe
fbstp
seta
orl
shlb
outsb
out
xchg
cld
xchg
jecxz
cmp
lea
xchg
pop
add
add
shlb
cwtl
push
or
icebp
out
or
adc
mov
fildll
push
push
push
jmp
aaa
hlt
push
xchg
test
ret
mov
mov
pextrw
xor
mov
mov
xchg
loope
enter
cmp
incb
movsl
cmp
popa
test
repz
ret
dec
mov
jl
aad
fisttpll
jae
mov
ret
lret
rclb
jmp
cmp
mov
push
xchg
incl
fs
nop
xchg
les
fstps
stos
inc
push
mov
mov
daa
mov
lds
jnp
cmp
popf
outsl
out
out
mov
ret
push
loope
sub
cli
dec
ljmp
pop
mov
mov
call
icebp
mov
adc
pop
mulb
in
sbb
lret
push
mov
add
sub
adc
inc
movsb
pop
fcoms
jmp
jbe
out
lods
inc
and
std
and
jo
sbb
cmpsl
int3
inc
sti
je
xchg
cmpsb
mov
push
mulb
les
or
fistpl
and
int3
fisubrs
adc
cmpsb
scas
inc
hlt
lods
jmp
sti
mov
jae
mov
mov
dec
jp
push
rcll
jmp
fbstp
negl
mov
mov
clc
push
outsb
aam
scas
mov
fistpl
and
mov
stos
pop
data16
test
mov
jne
aaa
cli
ret
pop
mov
in
jg
jg
mov
clc
pop
outsl
xchg
mov
xchg
mov
std
jnp
mov
cld
sub
rolb
xlat
arpl
inc
mov
pop
incb
enter
pop
into
push
or
pusha
pop
into
xor
cmp
jb
enter
dec
shr
push
or
shlb
xor
rol
cmp
mov
in
fistps
and
cmp
add
mov
inc
lcall
push
cld
xchg
cmp
sbb
mov
jo
mov
cmp
pop
mov
clc
popl
movsb
xor
mov
sub
jmp
inc
dec
and
xchg
mov
mov
lock
mov
jmp
inc
inc
mov
hlt
mov
lret
mov
ret
jecxz
jg
xchg
lods
xchg
testb
mov
sub
outsl
jno
cmp
hlt
mov
mov
adc
push
out
fwait
mov
mov
cmpl
bound
out
ds
jo
dec
in
xchg
mov
ret
adc
or
stos
out
clc
mov
dec
push
imul
das
lret
orb
rcl
sub
jecxz
mov
inc
xchg
sub
jecxz
mov
fidivs
enter
sbb
or
loop
pop
call
mov
pop
stc
fistpll
push
cld
sbb
xor
jnp
daa
mov
push
lcall
adc
xchg
push
jb
jp
mov
push
popa
movsl
inc
insl
xchg
jp
inc
push
iret
push
mov
cs
cmpsl
addr16
xchg
xchg
xchg
es
xor
jle
pop
in
sub
or
call
jg
dec
shrb
rolb
outsb
add
xorb
push
mov
xor
dec
pop
ds
jo
xor
jl
call
pop
and
jp
sub
jnp
std
xchg
or
scas
jecxz
push
mov
xlat
outsb
xchg
add
adc
inc
fxch
adc
mov
cmp
dec
mov
mov
cmp
daa
sbb
add
hlt
dec
enter
lods
mov
es
pusha
pop
pop
adc
mov
data16
or
jecxz
cmp
and
or
jl
lret
rcrb
mov
bound
movsl
push
mov
mov
cmpl
aad
faddl
pop
add
leave
pop
mov
mov
icebp
out
mov
add
pop
insb
mov
cmp
jp
dec
repnz
pop
sahf
lahf
adc
mov
lahf
add
das
out
lds
mov
stos
and
push
jge
xchg
mov
loop
sahf
mov
idivl
mov
fdivl
jnp
and
out
lcall
mov
inc
dec
arpl
loopne
adc
insl
les
in
xor
mov
pop
pop
out
test
add
xchg
xchg
or
movsl
andl
movsb
sub
data16
mov
push
cmp
push
mov
cmp
ret
int
daa
adc
fistps
mov
shrl
jge
cltd
jae
mov
lea
pop
lahf
push
fnstenv
shrb
pop
push
or
cmp
xor
jge
rolb
push
iret
push
fnstsw
inc
xor
aad
mov
xchg
jp
insb
lock
data16
in
stos
cmp
lea
mov
lock
ds
aaa
sub
adc
out
cmp
in
outsb
cmp
out
ret
je
cmp
and
cmc
sbb
idivl
aaa
mov
add
divl
adc
push
xchg
pop
dec
mov
imul
sub
dec
mov
inc
ret
push
sub
daa
xor
pop
adc
jmp
inc
fsubp
add
stc
nop
lock
xchg
mov
xchg
shrl
inc
mov
ficomps
out
push
xchg
repnz
bound
cltd
scas
or
pop
sub
stos
out
push
ss
cmp
lcall
and
push
cmp
xlat
mov
aaa
push
loopne
fsub
outsb
in
add
ret
pop
xchg
divb
or
in
mov
cmp
shr
leave
mov
push
popf
cltd
jnp
and
sub
mov
cmc
sbb
mov
xchg
mov
inc
in
xor
or
js
sahf
movsb
cmp
aad
mov
push
das
add
repz
int
push
mov
xchg
iret
addl
ja
test
mov
sbb
and
add
outsl
add
loop
mov
xchg
adc
sbb
mov
xchg
ja
test
repz
adc
hlt
xchg
outsb
adc
sbb
jp
lcall
pop
out
and
sbb
push
lds
mov
cmc
mov
mov
mov
adc
push
cmp
add
ret
jo
push
lock
sbb
inc
out
std
pushf
dec
sub
clc
push
das
fmul
out
sbb
popa
in
push
dec
loopne
xchg
mov
rcr
in
or
fidivrs
movsl
repz
or
jno
in
ret
push
out
dec
mov
enter
pop
subl
mov
sub
ds
mov
dec
loop
jge
daa
mov
mov
inc
adc
roll
cmp
lock
mov
add
scas
fwait
sbb
and
popf
cmp
xor
or
inc
into
adc
hlt
dec
push
mov
or
push
shrl
addl
lret
rorb
jmp
clc
jbe
push
outsl
stos
xor
pop
add
popa
xchg
sub
sub
fcmovnb
sti
xchg
stc
enter
cmovae
and
mov
jb
aas
fcomps
daa
aam
mov
lahf
xchg
pushf
xchg
and
adc
out
mov
jb
xchg
mov
jns
lcall
ja
lret
gs
sti
mov
push
sbb
cmc
data16
xchg
in
in
insb
lret
push
dec
in
adc
jne
adcl
stc
xor
add
cmp
ljmp
and
push
cltd
push
orl
test
pushf
xchg
cld
sbb
and
mov
adcl
push
inc
dec
mov
js
xor
bound
mov
cwtl
fwait
inc
mov
loopne
jae
fildl
bound
sbb
cmpsl
push
push
pop
ret
test
sti
cmp
sub
orl
loopne
roll
push
pop
mov
dec
lea
movsb
and
ret
fwait
incb
cmc
jmp
ljmp
dec
push
out
pop
jg
ss
jmp
cltd
pop
jp
push
cwtl
lds
cmc
shrb
fdivr
lahf
arpl
sti
icebp
jns
lock
lcall
adc
dec
jecxz
xor
or
inc
and
mov
lds
dec
pop
dec
push
fcmovu
lds
inc
cmp
mov
stc
dec
stos
xor
mov
push
mov
fwait
arpl
das
mov
cmp
or
jbe
xchg
pop
lahf
cltd
fs
add
je
sbb
mov
dec
js
jge
add
fstps
jb
cli
cmp
jns
and
jbe
mov
jl
rorb
cld
and
lret
fcoml
push
decl
push
adc
inc
inc
das
xchg
sub
sub
repnz
mov
xor
cs
ja
mov
dec
xchg
push
sbbb
arpl
mov
inc
call
push
aas
jnp
popf
cwtl
mov
xor
mov
add
fiadds
clc
aad
adc
fsubl
insl
xchg
hlt
lcall
fidivrl
shlb
and
dec
adc
jl
cmp
dec
push
inc
pop
iret
stos
in
pop
lock
loope
ljmp
pop
fst
subl
pop
and
jns
jno
add
ss
lods
mov
push
call
ljmp
mov
fldl
cli
test
shrl
mov
mov
jecxz
add
ror
xor
bound
jae
jecxz
xchg
and
verr
push
daa
mov
mov
int3
cli
dec
pusha
inc
push
add
mov
and
mov
ss
xchg
mov
jg
clc
cwtl
adcb
cmp
or
inc
push
out
jge
jl
xor
inc
or
fldcw
hlt
adc
cli
and
jns
sti
lock
int
pop
cmpsl
repnz
mov
loope
push
xor
mov
mov
mov
fstl
nopl
xchg
ds
push
mov
inc
xor
push
lret
cmp
sarb
es
ljmpw
adc
cmpsb
sub
shll
sarb
shrl
pop
push
jae
ret
repz
pop
or
addr16
mov
cmpsl
xor
data16
push
xor
mov
mov
xor
sub
xor
push
xor
and
bound
mov
btc
mov
sti
adc
push
push
clc
lahf
push
rolb
push
scas
cmp
pushf
sub
jno
mov
mov
sub
jp
fwait
xchg
sbbl
push
mov
mov
aas
scas
sbb
sarl
lea
or
in
dec
jbe
xor
ret
xchg
movsb
int3
inc
ja
push
repz
sbb
cmp
outsb
pop
pusha
mov
inc
dec
or
ljmp
ja
ds
iret
les
xchg
test
loope
sub
mov
pop
jae
int
and
mov
ror
push
adc
sarb
add
add
jmp
les
rol
sti
sbb
in
cmp
mov
es
fwait
jmp
ret
out
hlt
add
aad
push
lods
or
lcall
pop
stos
inc
push
inc
js
inc
sub
and
aas
pop
lods
inc
dec
pusha
mov
leave
nop
loop
in
insl
and
push
ret
push
enter
outsb
fisttpl
fsubrs
pop
stos
inc
jmp
xor
pop
fidivl
sbb
addr16
daa
jns
cwtl
hlt
xchg
ss
lods
push
dec
imul
ret
outsb
inc
mov
ja
dec
gs
out
pop
in
orl
or
mov
rorl
jmp
push
mov
shrb
inc
sub
cmpsb
dec
pusha
outsl
fsubs
dec
ficomps
xchg
add
or
sbb
iret
inc
pop
dec
mov
mov
fwait
lods
inc
mov
outsl
cld
outsb
mov
jae
in
xor
dec
adc
fldl
jnp
mov
mov
lods
pop
lea
cltd
xor
push
inc
stos
fs
pop
int3
jb
adc
test
lahf
fisubrl
fstl
ret
xor
in
jnp
lods
in
mov
xchg
mov
lods
cmc
imul
ljmp
mov
adc
test
xchg
repz
fdivl
or
aad
fwait
std
xchg
int
sub
push
pop
add
adc
pop
imull
sbb
loop
sub
dec
dec
sub
jno
adc
fadds
add
jb
rcrl
pusha
xchg
pop
xor
jmp
mov
cmp
add
lahf
enter
and
inc
in
cmp
inc
outsb
dec
xchg
repnz
cmp
jne
xchg
out
mov
ja
push
adc
fdivr
inc
ss
insl
push
sub
xor
loope
inc
push
lret
into
add
mov
mov
shll
test
cmp
lods
dec
mov
fistpll
or
adc
xor
dec
mov
dec
arpl
js
push
leave
cmp
jno
or
fwait
andl
out
xor
push
cmpl
insl
in
sbb
dec
mov
lret
movsb
cmp
ljmp
lods
stos
xchg
pop
fstl
push
out
inc
fistps
xor
test
iret
shll
ret
pop
pop
out
push
in
mov
es
lahf
leave
arpl
mov
in
hlt
push
add
in
aas
sub
fs
jns
mov
xchg
jle
shr
inc
in
xchg
pushf
jg
shlb
xor
add
out
push
xlat
icebp
mov
xor
fists
sbb
xchg
adc
push
pop
push
bound
loope
addr16
sub
pop
testl
movsb
mov
inc
xchg
mov
sub
mov
and
pushf
adc
and
push
sbb
fisubl
mov
fwait
jecxz
je
fwait
adc
iret
jae
adc
cwtl
dec
das
and
imul
jmp
xchg
xchg
aad
cmpl
imul
and
push
cld
adc
cwtl
mov
sub
dec
adc
mov
mov
pop
inc
sub
mulb
sti
mov
pop
adc
scas
popf
adc
das
xchg
fdecstp
ds
imul
xchg
in
adc
test
cld
jg
push
cltd
or
pop
cmp
mov
lret
stos
jl
aaa
sbb
lea
adc
enter
outsb
out
xor
mov
push
inc
lods
dec
jl
sbbb
fidivl
jle
dec
fs
das
sbb
mov
cli
cmp
ret
cmp
std
js
das
icebp
mov
dec
mov
int
pop
setne
or
js
bound
cli
push
cmp
enter
add
xchg
sti
mov
push
pop
inc
cmpsb
cmc
out
bound
jge
pop
mov
and
or
add
mov
clc
add
arpl
fs
push
out
push
iret
sbb
mov
add
bswap
push
jge
clc
hlt
clc
xchg
xchg
cmp
sti
call
push
cltd
pop
push
es
fnstenv
cmp
and
jne
xor
dec
aas
sub
jg
out
xchg
jb
sbb
cwtl
mov
push
pop
call
or
shl
out
in
mov
mov
sub
hlt
adc
pop
pop
inc
stos
loopne
aas
or
pop
gs
dec
loopne
xor
rcll
sbb
jae
jbe
jne
push
mov
sbb
ja
push
icebp
push
addr16
adc
jnp
or
xor
sbb
mov
mov
pop
mov
mov
cmp
jg
js
adc
push
cmp
enter
jge
mov
icebp
sbb
aam
pop
adc
pop
and
mov
jo
pop
jle
decl
xchg
adc
mov
pop
sti
mov
mov
pusha
aam
out
cs
dec
add
mov
jl
popf
rcrl
nop
mov
cld
cmp
in
dec
sbb
imul
mov
or
pop
sbb
bound
or
push
jne
sti
les
and
xor
aam
pop
jnp
sub
inc
imul
jge
movlps
jne
in
sti
jle
jne
xor
rcrb
scas
push
push
and
push
cmpsb
sti
or
jb
and
cmp
jae
test
ljmp
or
aas
xor
xchg
xor
ret
jle
jb
cmp
sbb
jbe
dec
clc
jp
add
sub
cmp
mulb
push
add
push
movsl
pop
outsb
mov
jae
jg
stos
dec
leave
and
insb
adc
dec
cld
cmp
push
iret
gs
rcl
jbe
in
pop
mov
and
xchg
dec
fwait
repz
stos
inc
fsts
sub
imul
add
or
push
testb
test
lods
std
jl
inc
scas
adc
sbb
xor
arpl
mulb
push
jg
sbb
push
or
clc
outsl
mov
sti
jecxz
sub
lods
pusha
lea
mov
sarl
lcall
mov
cltd
sbb
aaa
jnp
cmpsb
sub
lock
dec
xchg
aad
mov
lods
es
mov
stc
pop
lea
or
jnp
rcrb
xor
js
data16
stos
mov
xlat
jo
repnz
dec
cltd
subb
or
clc
cmp
xchg
cli
inc
mov
or
xchg
cmc
fs
cmp
sti
repz
pop
or
test
jmp
mov
or
dec
push
out
fwait
popa
in
ret
dec
out
add
daa
jbe
leave
xlat
xor
js
insl
add
cltd
dec
fwait
div
int3
sbb
xlat
jg
pop
xchg
pop
es
mov
push
leave
push
sub
jecxz
dec
push
int3
pusha
cmp
sbb
inc
cmpsb
imul
and
mov
xor
or
cmpsb
cmpb
lock
shrd
sub
xchg
and
loopne
add
test
popa
rcl
jmp
mov
out
lods
mov
movsb
stos
lea
lds
data16
pop
lock
ja
mov
iret
data16
notb
and
dec
loopne
sbb
mov
cmp
mov
jg
pop
mov
pop
mov
adc
pop
xchg
pop
hlt
pop
add
push
jl
cmp
jp
mov
leave
jns
mov
pop
push
sti
pusha
imul
push
or
scas
pop
jle
outsl
ret
popf
xor
nop
dec
in
push
add
inc
loop
add
and
addr16
test
mov
fcmovnb
pop
or
cs
pusha
mov
xor
addl
push
cmp
and
push
xor
testb
inc
jb
mov
push
xchg
in
xchg
jbe
popa
and
iret
in
mov
orl
pop
mov
add
mov
push
jo
fwait
mov
cmp
fwait
xor
add
mov
iret
mov
fnstenv
out
push
gs
push
cmc
rorb
cmpsb
mov
dec
pop
xor
fdivrs
push
xchg
or
inc
mov
leave
pop
jl
dec
iret
ret
inc
jmp
push
ljmp
jb
mov
mov
adcb
in
scas
mov
jne
cmp
mov
sahf
cwtl
xchg
jge
mov
pop
xchg
cld
rorl
cmp
push
add
and
pop
or
ret
or
push
push
gs
add
test
adc
addb
pop
daa
rcrl
daa
stc
je
push
xor
cmpsl
mov
sub
lret
pop
loope
cmp
lods
dec
repz
fs
fldcw
or
jns
scas
cmovbe
adc
mov
nop
and
imul
xor
adc
inc
pop
lret
mov
cmc
arpl
in
or
mov
leave
mov
sti
lea
sahf
push
mov
mov
stos
pop
inc
lret
ret
xchg
cmp
jl
popa
cmpsb
xor
cmpb
into
sbb
add
ret
cmp
pusha
dec
fcoms
inc
lods
xor
pusha
mov
in
and
jmp
pop
mov
fisubrs
dec
notb
cmpsb
cs
fstp
testb
pxor
pop
lret
push
mov
mov
inc
dec
cwtl
ljmp
ljmp
xchg
repz
sbb
cmp
jnp
ljmp
jmp
int
push
repz
mov
je
repnz
mov
addr16
mov
pop
xor
and
adc
in
bound
shrl
or
mov
dec
or
or
cmp
adc
and
cmpsl
add
nop
dec
and
push
loop,pn
repz
ss
jmp
je
cld
inc
sbb
hlt
push
cmpsb
and
or
mov
dec
jae
cmpl
dec
jne
xchg
sti
daa
inc
shrl
xor
push
add
stos
nop
jns
inc
or
jmp
stc
sbb
jnp
add
out
jle
dec
or
adc
xor
es
xchg
stos
call
pop
gs
gs
jmp
daa
test
lds
notb
jmp
lods
ljmp
lret
mov
aas
mov
sub
mov
cmp
insl
ror
lahf
enter
adc
in
and
push
enter
les
jg
call
or
push
movsb
xor
adc
aas
fbstp
dec
cmp
mov
movsb
lcall
scas
xor
adc
mov
and
jle
cmp
mov
jne
dec
jecxz
pop
xor
insb
pop
repnz
popf
mov
dec
add
jge
push
inc
shl
repz
cmp
sub
data16
dec
mov
andl
xchg
add
ja
outsb
sbb
cmp
cld
bound
pop
shr
test
test
fstpl
mov
push
xsave
mov
add
push
fidivrs
call
andb
cltd
xchg
arpl
mov
dec
pop
xor
loopne
adc
std
mov
cltd
push
or
xor
pop
jg
out
lods
mov
roll
idivb
sbb
lock
je
jecxz
xor
pop
pusha
inc
jmp
jle
sub
mov
fisubrl
pop
fsubp
jmp
pop
push
sub
inc
aam
inc
xchg
dec
loopne
jb
sub
lret
bound
dec
push
and
xchg
push
outsl
or
dec
stos
xor
sbb
insb
and
push
xor
cmp
adc
in
je
pop
mov
pop
and
iret
scas
jns
add
stc
call
inc
dec
loopne
mov
or
fistps
loop
pusha
jne
pushf
xor
test
in
or
aad
push
leave
pop
lods
xchg
fdivs
rcrb
imul
mov
lcall
and
bound
les
testb
jecxz
adc
nop
sbb
inc
sbb
ficoml
mov
insl
pop
ds
mov
out
inc
sahf
test
call
pop
jecxz
xchg
fisttpl
mov
out
xor
mov
push
cwtl
jmp
ficoms
mov
imul
pushf
push
mov
push
fcomi
lock
cld
hlt
cmp
fistps
rcll
add
addr16
call
ljmp
jg
enter
xchg
clc
cmp
call
aad
std
adc
xchg
fimull
ss
fldl
adc
sub
pop
flds
ret
dec
cmp
xorb
xchg
jl
push
imul
pop
cmpsb
outsb
push
or
cmp
ret
jle
add
ret
adc
sub
mov
push
adcl
int
xlat
data16
test
jge
dec
pop
push
xchg
inc
lods
jecxz
sbb
clc
aas
sti
cmp
or
clc
push
dec
sub
mov
sub
js
mov
cld
ja
ret
jo
cmp
rorl
pushf
outsl
or
ret
mov
mov
cmp
add
adc
aad
arpl
fs
repnz
lea
fsts
jg
int3
js
scas
jmp
push
and
addb
aaa
cmp
xor
xor
clc
ja
shr
add
pusha
jmp
fmuls
cmp
cmp
jecxz
inc
loopne
imul
inc
jmp
rcl
mov
imul
cmp
mov
and
mov
jg
in
mov
pop
out
push
or
jbe
out
mov
mov
ret
dec
mov
mov
std
or
adc
lahf
push
dec
stc
cltd
sub
in
pop
push
shlb
xchg
fisubs
clc
call
fsubl
shrl
orl
xor
in
add
lret
and
add
xor
in
add
or
cmp
out
xor
dec
push
adc
and
mov
dec
sbb
lret
and
and
lods
mov
dec
fidivrl
adc
cltd
imul
dec
lret
push
js
fwait
and
push
mov
lods
shll
adc
push
mov
xor
fucomp
nop
sbb
lods
sbb
lret
repnz
movsb
mov
mov
sub
rorl
enter
jecxz
xchg
dec
arpl
pusha
push
mov
ret
fldl
out
mov
fsubrl
mov
cmp
out
mov
pop
hlt
xlat
and
cmp
hlt
xchg
stos
xorl
xor
popf
xchg
icebp
pop
adc
cmp
xchg
sub
fs
xlat
out
mov
fistps
cld
repnz
int
xorps
mov
xchg
jmp
je
xchg
repnz
in
shll
or
mov
cmc
sbb
xlat
dec
add
mov
pop
cmp
out
add
stc
inc
mov
cmp
xchg
les
aad
jle
and
fidivrl
xchg
shrl
cwtl
fwait
xor
int
jecxz
pop
mov
lcall
and
pop
mov
hlt
mov
adc
ret
je
mov
mov
sub
pop
xor
lods
and
loope
mov
mov
lcall
sbb
test
jbe
pop
nop
xor
adc
sub
dec
dec
add
addr16
call
popa
clc
xor
xor
lahf
aad
insl
nop
rclb
ss
sub
push
hlt
popa
pushf
or
lods
cli
jno
sbb
out
jae
mov
pop
notb
inc
in
aam
mov
sbb
jg
mov
add
add
hlt
js
cmp
popa
sbb
rep
sub
stc
pop
mov
sbb
cmp
xor
pop
jb
das
sbb
insb
dec
stos
mov
add
push
jg
mov
dec
push
adc
ja
dec
push
or
lcall
push
in
jae
jbe
clc
push
pop
mov
aad
mov
sti
jmp
ss
xchg
fldl
outsl
cmc
push
push
fdivrs
mov
add
jo
pop
fmuls
pop
and
or
adc
sub
xor
repz
adc
cmp
cwtl
stos
scas
add
sarl
fcompl
mov
cwtl
inc
test
fistpll
das
or
jmp
daa
or
es
inc
fildll
dec
jae
das
cli
adc
mov
imul
insb
push
lock
test
and
call
test
mov
icebp
rol
out
adc
xor
and
ja
arpl
pop
dec
test
adc
ss
push
fbstp
stc
mov
or
xchg
and
inc
xor
inc
cs
mov
sub
mov
ret
repz
into
insl
and
or
mov
adc
mov
sub
iret
ds
mov
pop
cmpsb
xchg
sbb
dec
in
stc
insl
int
arpl
ljmp
jbe
scas
sub
jb
sbb
lods
add
xor
push
andb
dec
push
outsl
xor
bound
dec
jmp
popf
lds
lock
insl
and
lahf
out
jno
xor
mov
rcrl
mov
add
mov
sbb
jae
xchg
shll
or
push
mov
out
call
addr16
jbe
sti
mov
in
sbbl
pop
or
dec
mov
mov
and
jne
int
mov
mov
ja
adc
in
incl
lcall
rclb
dec
sbb
inc
cltd
shr
jge
dec
jecxz
popf
aaa
sbb
movsb
mov
pop
sub
ljmp
mov
pop
jl
cmp
jns
ret
push
or
cmp
pop
popf
add
and
inc
out
js
inc
lret
push
lods
in
fidivs
fwait
xchg
lret
mov
arpl
fnsave
adc
imul
pop
daa
and
fwait
lock
cmpsl
mov
fnstenv
mov
cmp
lahf
stc
lds
pop
pop
xor
mov
ja
ss
rcll
rcrl
movsb
add
icebp
out
and
inc
fadd
leave
test
jae
xor
nop
jnp
and
adc
mov
xchg
out
fwait
gs
push
adcl
fistl
xor
pop
div
mov
adc
sbb
and
xchg
cs
in
out
sahf
lahf
cs
loopne
xchg
push
dec
dec
cmpl
pop
add
ja
and
pop
push
cmpsl
psrad
movsl
xchg
pop
outsl
dec
in
mov
notb
mov
insb
adc
mov
and
lea
in
xorl
mov
out
test
outsb
shrl
jae
cmp
aas
mov
outsb
inc
dec
sub
cmpsb
mov
mov
dec
mov
orl
into
inc
ja
xor
repnz
and
adc
in
stos
popl
mov
jae
insl
mov
nop
mov
inc
xchg
sbb
push
and
gs
and
fdivrl
ret
lret
int3
xor
in
mov
xchg
subl
adcl
mov
xor
xor
mov
add
or
int3
xchg
ret
inc
xchg
cmp
jmp
fdivrs
mov
loopne
insb
adc
rclb
cmp
xchg
add
and
cwtl
test
test
test
xlat
js
inc
out
push
nop
out
in
sbb
imul
mov
mov
sub
into
or
adc
lds
xor
fldlg2
and
xor
sbb
stos
sub
xchg
jnp
xor
push
jmp
push
jmp
ja
es
pop
scas
xorl
sub
leave
cmp
shll
pushf
inc
gs
ret
orb
test
push
mov
pop
xor
pop
mov
movsb
cmp
mov
out
xchg
mov
add
mov
dec
mov
push
cmc
adc
mov
fdivl
imul
dec
hlt
out
mov
xchg
mov
loopne
jge
jecxz
cmp
mov
es
scas
je
mov
gs
outsl
test
jmp
mov
hlt
or
mov
test
cwtl
pop
pop
mov
sbb
push
aaa
push
movsb
out
jo
cmc
leave
sbb
and
add
push
pop
push
xchg
sbb
fisubs
cwtl
shrb
enter
inc
cmp
je
or
adc
sbb
xchg
fdivrs
xor
jmp
jb
movsl
xchg
sub
and
dec
mov
xor
lods
hlt
adc
jns
roll
push
hlt
movsl
xchg
call
inc
adc
and
test
lods
fsubs
cmp
gs
or
add
stos
inc
push
add
jb
cltd
adc
sub
xchg
push
jae
les
sbb
sub
aam
testl
mov
je
push
add
xor
mov
ret
ret
mov
xor
and
mov
push
scas
xchg
jecxz
out
push
jle
mov
es
push
popf
sub
mov
into
sbb
jne
shrl
xchg
loopne
mov
mov
clc
lds
cmc
and
xor
jnp
sti
sbb
push
shll
sti
loope
sub
scas
jns
dec
mov
push
in
das
movsl
test
fwait
pop
add
jmp
popa
outsl
push
xchg
addl
xchg
subb
mov
add
test
loop
adc
mov
hlt
test
test
xlat
xchg
push
xor
pop
ss
lds
insl
add
into
inc
in
push
mov
xchg
out
in
inc
movb
mov
ja
push
test
mov
dec
movsl
add
movsb
push
ja
sub
ficompl
jl
xor
cli
xchg
push
push
ja
test
mov
lock
pop
dec
xor
fildll
add
inc
scas
cmp
inc
push
outsb
xor
sbb
lea
xchg
push
cmc
xchg
mov
test
mov
inc
insb
add
xchg
aad
popa
fcompl
lcall
repz
jne
aad
cmp
pop
sbb
mov
sub
cmp
mov
icebp
and
in
shrl
andl
pop
jg
push
sti
fwait
enter
xor
leave
fisttpll
mov
mov
int
mov
adc
sub
jg
inc
mov
gs
xor
andl
sub
ja
testb
adcb
andl
inc
fs
fldpi
hlt
pop
cmpsl
pop
push
xorb
fcomps
lret
daa
cmp
fsubrl
mov
inc
ja
sbb
iret
lds
aad
jo
mov
je
mov
xor
rclb
xor
cmp
jg
pop
sbb
test
add
mov
jae
adc
mov
cwtl
icebp
jnp
and
dec
repnz
sbb
mov
in
or
jle
xlat
sub
in
jg
xchg
sub
clc
stos
es
fnstenv
hlt
imul
mov
stos
pop
push
pop
inc
push
out
out
std
lock
xchg
outsb
add
fucomp
mov
sbb
stos
mov
push
loope
popf
loop
mov
pop
call
test
clc
inc
mov
data16
test
lcall
pusha
call
jnp
cmp
and
int3
decb
decb
stos
inc
sar
adc
xor
fucomip
aas
repnz
mov
mov
call
and
andl
sbb
and
popa
es
loopne
jae
pop
add
mov
push
cmpsb
ljmp
inc
mov
pop
fcmovbe
push
cli
and
pop
adc
enter
bound
clc
in
rorb
mov
mov
cmp
mov
or
cli
aad
fistpl
mov
cmp
sahf
add
jp
pusha
and
xchg
in
aad
aas
outsl
daa
repnz
insb
dec
repz
mov
andl
repnz
mov
dec
std
mov
mov
cmp
notl
adc
inc
push
dec
sbb
xor
nop
and
pusha
push
mov
cmp
add
ss
add
and
gs
xor
mov
push
in
push
test
mov
inc
clc
and
pop
mov
mov
jnp
int3
lods
adc
inc
cli
loopne
mov
movsb
cvtpi2ps
out
enter
mov
pop
rolb
jp
pop
das
push
cmp
stos
aad
cmpsb
dec
cwtl
pop
shrl
insl
inc
push
sbb
out
cmpl
lret
mov
sbb
inc
cli
mov
sub
inc
aad
repnz
pop
jae
adc
pop
leave
loop
push
adc
out
cltd
mov
sbb
cmpsb
mov
lds
fistl
pop
cs
gs
mov
ss
fisubrs
shll
push
arpl
add
es
fidivrs
add
mov
je
andl
and
pop
idivb
movd
stos
xchg
icebp
jnp
add
sbb
mov
ret
jg
pop
jnp
mov
out
jmp
mov
mov
push
outsl
push
xchg
call
pop
movsb
je
mov
fisubs
and
xchg
pop
pop
or
out
int
fdivr
dec
dec
add
xchg
arpl
sbb
mov
pop
lahf
stos
dec
xchg
int3
mov
mov
loopne
cmc
lds
adc
aas
movsb
push
pop
fsubrs
jge
jne
cmpsw
cmp
mov
jge
lret
mov
xor
bound
mov
fs
inc
dec
loop
sti
rcl
insb
add
sbb
add
inc
cmp
jae
ljmp
sub
or
and
mov
mov
xchg
push
int
icebp
adc
mov
mov
pop
sub
fdivrl
loopne
push
jne
cld
stos
mov
inc
lcall
xor
cwtl
popf
sbb
sbb
aad
xor
rol
cmp
dec
arpl
rcrl
in
lea
xor
in
mov
aad
adc
push
pop
repz
out
add
cwtl
sub
and
inc
cmp
in
lea
xor
sub
mov
popf
dec
loope
push
fs
inc
shll
xor
push
ljmp
sbb
ret
dec
add
cmp
mov
sbbl
cmp
xchg
int
aaa
into
inc
bound
xchg
loope
stc
cld
popa
or
mov
pop
stos
lds
inc
inc
cmpsb
call
xchg
fmuls
sub
jns
xor
lock
inc
fstpl
or
ss
fs
xchg
pop
sbb
add
jne
pop
xchg
cmp
jl
sti
cmp
xor
mov
fwait
dec
pop
cmp
stc
and
cmp
inc
mov
test
js
je
and
aaa
mov
push
out
xchg
jle
xchg
data16
pop
ss
pop
outsb
loopne
mov
push
outsb
aaa
sbb
lcall
cmp
push
insl
cmc
test
xor
aam
in
lret
push
test
dec
popa
add
and
mulb
push
std
sti
xchg
mov
repnz
xor
ret
movsb
adc
dec
ljmp
testb
scas
lea
imull
sbb
into
inc
sub
inc
push
outsb
into
aam
arpl
das
cmpsl
mov
or
xchg
sub
sub
add
and
test
sbb
stos
push
mov
popa
stos
adc
lods
mov
int
in
push
mov
xchg
shll
mov
lea
sarb
out
arpl
lret
call
or
hlt
jl
cmpsl
push
sahf
cmp
xchg
aad
jmp
cmpsb
mov
and
test
sub
mov
repz
dec
out
lcall
imul
cli
daa
jg
dec
push
and
movsl
xchg
xchg
dec
sbb
add
inc
and
out
mov
mov
aas
stos
call
mov
cmpsl
cmpsb
mov
dec
jle
repnz
je
fimull
mov
iret
iret
dec
adc
jbe
push
popa
icebp
push
push
push
imull
add
test
xchg
nop
mov
jae
imul
pop
jg
sub
popa
sub
mov
mov
ss
in
jno
dec
lret
mov
jno
add
inc
aam
inc
or
sub
mov
lret
in
pop
ljmp
cmp
jbe
shrb
jae
mov
nop
push
fldenv
xor
cmp
add
mov
dec
loopne
ud0
scas
lds
sub
mov
cmp
int
cmp
clc
sub
lods
andl
pushf
cmp
adc
and
addb
outsl
inc
ret
roll
test
insb
in
pop
push
mul
pop
mov
mov
pop
sub
imul
mov
test
test
and
movsl
adc
imul
xlat
lods
ss
stc
ret
jge
js
push
adc
pop
imul
imul
in
pop
ret
mov
sbb
in
mov
outsb
test
cmp
aaa
ljmp
xor
mov
ret
and
mov
cmp
and
shl
ss
fdivl
cmp
das
mov
subl
xchg
in
popf
xor
sbb
ja
xchg
out
jne
nop
ja
sub
pop
cli
mov
inc
sti
fwait
and
xchg
aaa
stc
addr16
fcoms
sbb
icebp
lcall
scas
xor
test
in
xchg
xchg
and
push
insl
jb
pop
repz
test
xchg
mov
test
mov
dec
xchg
in
jg
mov
mov
rorl
loope
popa
clc
add
cli
fistps
test
xchg
mov
adc
adc
adc
fnstsw
pop
mov
aam
jecxz
test
test
test
ret
fsubrp
les
add
es
fimuls
pusha
test
cmpsb
loopne
iret
jg
movsb
test
cmp
mov
pusha
negl
loopne
mov
je
cwtl
inc
push
jmp
dec
in
pop
adc
int3
stos
popf
rcpps
fldenv
mov
xor
cmp
sub
shlb
outsl
mov
call
mov
cli
sbbb
pop
mov
xor
fs
hlt
data16
iret
sarb
lret
cmp
into
lret
mov
jno
cmpsl
adc
add
enter
popa
subb
aad
flds
jge
adc
sub
jle
shrb
cmp
popa
call
sbb
sbb
mov
mov
dec
mov
dec
adc
mov
xchg
pop
call
xchg
dec
loopne
or
fisubrl
shll
mov
jle
lret
sub
push
sub
mov
out
in
xor
xchg
js
repnz
lods
mov
jns
out
and
push
push
mov
outsb
add
mov
cmp
jp
mov
stc
pushf
and
inc
xchg
xor
inc
jns
movsl
cmp
cmp
bound
imul
fdivl
nop
jnp
adc
repnz
addr16
inc
fcmovnb
add
fstps
test
lea
insl
pop
lock
jecxz
and
push
push
scas
ret
cltd
xor
lock
gs
divb
ds
mov
out
xchg
xorb
fwait
xchg
bnd
dec
and
jbe
xchg
sarb
mov
repz
cmp
mov
push
loopne
mov
scas
outsl
insb
pop
push
xor
and
xchg
popf
ret
jb
push
mov
pop
mov
xor
cmp
pop
add
into
mov
dec
mov
jne
jns
repnz
jbe
xor
xchg
or
ret
data16
dec
pop
jnp,pt
das
js
cmpsb
dec
loope
out
fists
push
cmc
scas
adc
mov
aad
loopne
fadds
imul
xchg
lret
jg
lock
push
mov
ljmp
pop
and
addr16
pushf
in
pop
push
dec
push
sub
and
ret
gs
adc
je
mov
mov
jne
pop
jns
push
daa
jnp
mov
mov
dec
push
montmul
cmpsb
xchg
mov
cmc
mov
mov
push
out
sub
lcall
xor
aaa
cmp
adcl
adc
loop
addr16
shrb
ret
add
test
lds
leave
loop
cmp
mov
or
shrb
mov
mov
lods
cmc
in
fldl
cmp
iret
push
pop
pop
cmp
push
mov
lock
pop
dec
out
xchg
insb
cld
mov
add
dec
in
xchg
inc
xlat
and
push
hlt
dec
mov
xchg
sub
cmc
leave
ljmp
rorl
movsb
or
scas
adc
fidivrl
ss
dec
inc
inc
mov
and
mov
lds
mov
pop
arpl
shrl
cmp
rorl
sbb
stc
adcb
dec
dec
jb
pop
xlat
subl
sbb
popf
adc
and
push
xchg
sub
dec
adc
inc
add
cmpsb
jns
fs
loopne
rolb
xchg
add
sub
leave
push
jg
mov
mov
push
dec
mov
cmpsb
jnp
push
add
sbb
pop
xor
call
add
xchg
pop
mov
dec
dec
scas
loop
pop
and
dec
stos
lds
enter
mov
loopne
inc
xchg
or
dec
sub
cmp
cmp
adcb
cli
test
ret
data16
cmc
out
add
cmp
cmp
sub
xchg
movb
fmuls
cltd
cmc
dec
or
inc
push
xchg
mov
fidivs
bnd
push
mov
dec
xchg
call
or
dec
sbb
adcl
gs
movsb
gs
test
push
jns
ja
inc
shll
adc
fwait
pop
pushw
lods
gs
ljmp
pop
icebp
sub
cmpsl
sub
push
stos
add
add
xor
add
sbb
cmp
and
or
xchg
push
pop
insb
sub
cmc
movsl
loop
pop
pop
push
sahf
push
xchg
jne
int
inc
pop
leave
jmp
or
jge
test
test
mov
jp
jbe
fwait
jecxz
ret
push
lcall
js
int
cmp
nop
insb
adc
sbb
orl
mov
gs
imul
and
clc
aas
pop
add
or
es
mov
fninit
jecxz
aad
lds
dec
sbbb
rcl
mov
pop
cmp
inc
mov
pop
jp
jge
add
aaa
ljmp
lcall
call
sub
rorb
std
pop
lock
iret
pop
add
test
js
add
repz
leave
dec
xchg
inc
movsb
test
flds
ficoml
sub
push
jle
push
call
or
sbb
testl
jl
popa
clc
sub
das
adc
decl
pushf
ret
popl
push
lods
shrb
adc
lods
out
adc
mov
insl
sarb
dec
movsl
addr16
fadds
shr
stc
sbbl
sbb
cmp
inc
sbb
out
cli
dec
xchg
mov
jnp
xor
sbb
and
sbb
lods
lods
push
ja
mov
sbb
dec
ljmp
ss
pop
lods
xor
xlat
push
outsb
or
das
and
dec
out
orb
xor
inc
mov
xor
es
test
cwtl
push
inc
xchg
mov
push
mov
mov
movsb
movsl
mov
jbe
lods
mov
fwait
pop
and
cmpsl
xchg
mov
lcall
sbb
test
add
test
ret
loopne
pop
sbb
arpl
pop
add
pop
out
or
stc
ds
stc
ds
dec
ljmp
outsl
mov
imull
add
mov
cmovl
xlat
sbb
mov
addl
mov
out
pop
sub
inc
imul
mov
lret
jl
nop
popa
js
push
aad
sbb
push
pop
dec
icebp
xlat
mov
enter
mov
mov
in
shll
imul
pop
pop
mov
rorb
fdivs
jb
dec
sbb
leave
jne
test
frstor
lods
mov
stc
push
jmp
test
scas
or
inc
stos
cli
push
fs
push
std
mov
inc
and
xor
int
jbe
inc
mov
xchg
cld
test
pushf
je
push
insl
in
lods
in
stos
fistpll
lock
mov
mov
imul
shl
hlt
shlb
das
xchg
std
xchg
sub
frstor
lea
push
fwait
sbb
inc
test
in
imul
imul
push
orb
jmp
iret
mov
psubb
insl
repz
jno
stos
vcvttss2si
int3
mov
mulps
ja
sbb
imul
es
inc
fwait
mov
dec
fs
pop
in
mov
xor
adc
testl
inc
into
xlat
pop
lret
int3
xchg
mov
push
adc
inc
ja
adc
fcomp
and
btc
test
sub
jle
mov
ret
lcall
mov
inc
push
cmpsb
clc
mov
inc
jp
dec
lods
lret
stc
adc
std
jp
fwait
test
int
lret
xor
fbld
jg
mov
or
xchg
daa
addb
icebp
xchg
jecxz
cmp
or
sbb
test
push
mov
push
pop
mov
mov
xor
fmuls
mov
fld
pop
pop
cld
popa
lods
insl
cld
jecxz
outsb
jg
xchg
pop
xor
pop
dec
repnz
rclb
out
push
je
mov
out
xorl
xor
arpl
jmp
mov
mov
test
repz
mov
pop
fs
outsb
outsb
mov
jno
jg
test
loopne
xchg
cmpsb
mov
push
add
sbb
cmp
jge
icebp
scas
xchg
and
loopne
add
mov
arpl
mov
ds
roll
cmp
aas
xor
outsb
pop
mov
fildl
out
add
ds
mov
imul
fisubrl
enter
fidivs
sub
adc
mov
jge
push
out
in
dec
add
mov
lret
test
inc
push
add
inc
enter
les
lret
xchg
push
sub
repz
addr16
clc
mov
fldl
mov
xor
ss
lcall
stc
jo
in
movsb
cmp
mov
pop
jo
std
push
jnp
out
add
pushf
xlat
outsb
into
or
out
and
std
adc
inc
jbe
jae
lcall
sbb
mov
les
loop
jne
aas
jb
je
sbb
push
out
das
xchg
mov
xchg
xchg
outsl
jae
mov
fcom
jne
and
or
fsubs
inc
outsl
push
sbb
and
jae
mov
bound
lds
push
ret
xor
test
sbb
push
dec
rcl
jecxz
int3
and
adc
push
xor
and
jp
mov
add
push
imul
mov
adc
orb
cltd
or
mov
mov
add
or
cmp
pop
and
mov
adc
or
stos
xchg
add
push
sbb
in
xor
push
sahf
xor
mov
xchg
sub
lds
adcb
or
pop
lods
adc
mov
jp
sub
lret
and
push
push
into
jae
sarl
aad
add
out
loope
lods
dec
flds
push
adc
xor
into
enter
cld
adc
mov
insl
out
pop
int3
lods
mov
push
lcall
lahf
mov
adc
add
fcmovb
inc
pop
test
je
fists
xor
mov
outsl
ss
pop
lea
push
push
test
inc
sbb
sub
mov
fnstsw
cmc
xor
lods
pop
ss
es
jns
les
mov
mov
iret
cmpsb
cli
outsb
js
mov
pop
cmp
cwtl
daa
lods
push
push
dec
loope
js
mov
push
stos
in
sub
xor
iret
lcall
ljmp
fldt
cltd
andl
fnsave
pop
out
jo
sub
inc
dec
lods
ljmp
xchg
add
roll
add
push
aam
cwtl
inc
fidivs
add
enter
ds
cmp
push
xor
dec
push
sbb
cmpsb
cmp
shrl
cltd
adc
jb
cli
fildll
mov
xor
outsb
arpl
int3
mov
std
inc
dec
dec
jl
xchg
sub
loope
inc
inc
sahf
lods
inc
test
jle
loope
pop
and
in
xchg
hlt
jg
fdivs
push
adc
xchg
int3
mov
repz
arpl
mov
movl
stos
push
mov
mov
sub
fistl
testb
cmp
push
hlt
inc
inc
fiadds
or
lock
push
jg
test
push
popf
xor
fcmovne
fisubl
or
ret
in
pop
pop
dec
add
cmp
cmc
inc
repz
xchg
xchg
pop
movsb
sarb
outsl
sub
shll
pop
adc
lcall
xchg
out
pop
pop
push
outsb
adc
sub
ss
stc
fiaddl
push
aas
sahf
aam
adc
sub
jp
int3
stos
inc
sub
push
cmp
gs
clc
jg
inc
jno
cwtl
lea
mov
xchg
sub
sbb
and
mov
and
lods
jmp
mov
pop
scas
dec
rcrl
sub
int
sub
push
scas
imul
push
sahf
lods
stos
stc
sbbb
or
cld
mov
sahf
mov
pop
stos
enter
sahf
add
icebp
fstl
jb
cmp
das
cmp
fldl
mov
mov
lods
pop
xchg
mov
and
into
xchg
addr16
jne
lret
mov
loop
hlt
stc
or
cmp
xchg
insl
add
jno
mov
pop
lea
mov
fisubs
mov
inc
iret
ss
push
xor
pop
push
mov
push
call
repz
js
pushf
lret
outsl
dec
cmp
aaa
fldcw
mov
xchg
out
jo
sbb
mov
shl
inc
sbb
pop
ds
cwtl
dec
jne
ss
out
loopne
dec
inc
in
adc
cmpsl
sti
xor
or
jns
mov
add
loope
jmp
out
divl
sub
test
outsl
jns
mov
mov
sub
xor
inc
in
cmp
xor
jge
int3
cmp
insl
mov
shll
fwait
adc
push
inc
mov
cmp
aas
dec
rol
movsl
add
xchg
movsl
les
jl
pusha
in
adc
push
shlb
test
jp
cmp
sub
shl
push
movsl
xor
or
fsub
aaa
xchg
mov
jb
call
lahf
xchg
daa
mov
mov
andb
pop
add
sub
je
xchg
add
jne
xchg
dec
push
and
jo
rcr
mov
cmc
pmaddwd
pop
xchg
sbb
movsb
cmp
es
mov
mov
xchg
sbb
and
subb
jg
jo
call
jmp
mov
push
inc
dec
add
shl
or
pop
les
jno
les
mov
fucomip
stos
adc
mov
stos
xchg
aam
lahf
sub
add
xor
sti
fs
cli
repnz
loopne
jg
xor
scas
sbb
push
adc
dec
cltd
std
les
ja
push
outsl
adc
pop
push
in
dec
adc
lret
out
mov
pop
adc
sbb
mov
or
mov
cmc
fxch
sti
pop
aaa
stos
out
and
push
add
andb
mov
inc
fs
addr16
push
f2xm1
inc
in
push
lea
mov
fdivrs
iret
scas
fdivrl
call
gs
xchg
lea
mov
dec
negl
outsb
lock
mov
sbb
pop
rcl
imul
xadd
xchg
push
in
xchg
xchg
and
or
subb
ret
push
xchg
mov
and
and
push
test
flds
popf
insb
mov
imul
xchg
adc
lea
jns
sub
or
rcrl
leave
mov
out
inc
and
jae
cwtl
inc
enter
cwtl
xchg
sub
sub
fdivs
lret
mov
pusha
aaa
fisubl
repz
test
inc
jl
lret
inc
xor
leave
flds
cld
inc
fwait
out
dec
data16
xchg
js
leave
in
inc
inc
jns
popa
mov
lret
and
add
jecxz
jle
lcall
adc
push
and
cltd
sub
sbbl
in
in
sub
mov
xchg
lods
movsl
mov
icebp
mov
fs
sub
into
je
ja
cmpsb
addb
cmp
pushf
ficoml
cmpsl
cltd
jmp
lret
pop
xchg
mov
negb
xor
cld
cmp
add
adc
stos
inc
mov
pop
aam
pop
clc
cwtl
pop
sub
cli
xchg
insl
fwait
seto
mov
add
into
lods
outsl
aas
out
arpl
cwtl
mov
cwtl
sub
in
dec
shl
add
pop
ret
sbbb
dec
sub
enter
lods
inc
xchg
pop
mov
ret
imul
mov
nop
xchg
xchg
xor
popf
dec
imulb
cmp
lds
sahf
lret
cmc
mov
or
push
mov
mov
mov
cmp
rclb
fisubrs
cmc
loopne
cmpsl
cmp
rcl
dec
xor
es
pushf
xor
popa
bound
xchg
loop
icebp
lret
cs
scas
sbb
mov
push
aas
dec
cmp
repz
movsl
dec
bound
push
adc
loope
movsb
cmp
sub
pop
ficoms
cs
lea
je
into
gs
xchg
jne
and
mov
push
test
testl
mov
sarb
sub
push
ja
loope
adc
les
jb
xchg
pop
add
nop
and
mov
fcoml
rolb
movsb
popa
clc
xlat
sbb
bound
lds
pop
jmp
mov
sub
ret
or
push
cmp
adc
cmp
roll
jl
sub
fiaddl
dec
xchg
and
fidivrs
mov
fldt
aaa
leave
cmp
bound
inc
int3
add
dec
in
movsl
mov
je
aas
cli
jge
shl
movsb
aam
imul
js
aaa
popa
in
adc
sti
shll
adc
jbe
xor
movsl
sbb
sub
js
jle
adc
cmp
les
pop
sbb
pop
jp
mov
xlat
mov
add
cld
test
xor
jne
movsb
xor
mov
adc
mov
cmc
fisubl
dec
xchg
fdivr
jl
sub
inc
jg
and
fwait
cmpsl
jae
xchg
stos
sahf
js
subl
dec
or
lea
and
loopne
and
xor
jne
jp
lahf
pop
leave
jne
jle
out
mov
cwtl
and
fnsave
push
pop
and
fisttpl
test
shrl
iret
jp
push
loope
add
add
xchg
sub
mov
xor
adc
js
jmp
push
and
cld
sbbb
sbb
cmp
mov
les
ret
xor
insb
mov
shlb
sub
mov
movsl
or
test
mov
pop
jecxz
sbb
out
sub
fnstenv
xchg
xchg
cs
fsubrs
dec
stc
bound
jo
pop
scas
and
fdivrs
cmp
push
cmpsb
inc
mov
lock
mov
test
dec
jbe
icebp
mov
dec
imulb
mov
mov
fdivrl
mov
xchg
lock
popa
mov
push
movsl
push
imul
adc
mulb
movsl
mov
rcrb
gs
sbb
xchg
sub
xor
xchg
xchg
aas
cs
mov
mov
addl
jmp
add
sti
pusha
or
inc
andb
shrl
insl
lea
shlb
shlb
push
loopne
movsl
mov
add
popf
xchg
mov
cmpsl
ja
xchg
push
jnp
fwait
mov
push
pushf
test
sbb
cmp
push
xorl
cmp
inc
loopne
xchg
dec
push
ret
mov
cwtl
mov
inc
inc
push
in
out
sti
pop
xor
lods
pop
shl
dec
dec
xor
jmp
adc
pop
pushf
cmc
xor
lcall
ret
lret
sarl
bound
jmp
scas
in
pop
dec
push
cli
and
test
inc
fnstcw
pushf
loopne
into
mov
test
jg
mov
xor
jg
aad
dec
mov
into
pop
jae
dec
repnz
xchg
in
test
mov
inc
dec
or
cs
jb
das
and
stos
in
pop
std
mov
test
and
mov
data16
int
es
push
out
sub
xchg
cmp
lds
in
mov
adc
rorl
inc
lds
dec
mov
fcoms
loope
aas
in
mov
fnsave
ret
mov
jnp
ret
sbb
nop
sbb
jo
inc
popa
adc
lds
dec
dec
stc
loope
clc
iret
xor
andb
cmp
and
jo
mov
jns
mov
into
inc
arpl
lock
lods
xchg
pushf
adc
lds
popa
add
cmpsl
ds
push
sbb
pop
xchg
scas
mov
xor
and
leave
adc
loop
inc
ret
jge
jnp
out
pop
xor
or
stos
mov
mov
dec
scas
dec
push
ja
jge
mov
rcrl
jge
add
jnp
decb
or
push
outsl
jno
push
xor
push
push
nop
daa
cmp
leave
aam
inc
or
aas
in
popa
jle
jecxz,pt
fwait
xor
push
aas
push
sub
mov
rcrl
or
stc
or
cmovo
dec
and
or
pusha
xchg
jmp
xchg
mov
out
lock
sub
pop
fidivrl
fxch
in
addr16
mov
popa
mov
dec
mov
pusha
in
xchg
hlt
inc
xlat
loope
addl
or
mov
pop
std
lods
mov
xchg
mov
cmpsb
out
mov
aas
stos
sahf
sbb
sbb
sub
mov
mov
mov
mov
jb
les
mov
in
in
dec
push
leave
fcmovne
aaa
jo
cld
push
cmpsb
sub
or
dec
xor
and
xor
loopne
das
and
and
shlb
sub
xchg
sub
in
gs
push
movsl
lods
jb
fs
adcl
sub
xchg
jge
jne
and
popf
dec
sahf
testb
push
ljmp
adc
inc
dec
sarl
inc
inc
pusha
sti
xchg
push
pop
ret
ja
push
outsl
iret
shlb
cmp
push
fstps
dec
out
sbb
add
pop
adc
ljmp
xchg
jns
into
cld
lea
sarb
and
outsb
test
fadds
mov
in
or
xor
pop
test
or
outsb
cli
xchg
shl
mov
cmpsl
sbbb
scas
out
loopne
pop
popa
mov
xchg
jl
or
adc
ss
movhlps
xchg
push
imul
push
mov
jge,pt
push
sub
shlb
mov
mov
pop
fs
jbe
jbe
or
int3
ficoms
loope
cmpsb
pop
mov
inc
inc
cs
xchg
ficoml
wbinvd
dec
pop
lahf
add
sahf
xor
shll
and
inc
fistps
fcomip
sub
vpunpckhqdq
pop
dec
pop
roll
and
xlat
sub
das
pop
sti
pop
pop
lods
iret
inc
sub
addr16
scas
inc
pop
cmp
int
aas
jbe
ljmp
pushf
scas
ds
jb
inc
ret
sbbb
test
inc
mov
xchg
test
cwtl
mov
add
push
jmp
call
or
mov
adc
es
push
test
cmpsb
sbb
rol
jp
arpl
jbe
xchg
jp
sarb
movhps
xchg
daa
into
jle
jo
fldt
adc
pusha
repnz
dec
stos
mov
adc
stos
jno
push
or
inc
fstl
adc
cs
cmp
fcmovnbe
sbb
stos
inc
imul
call
repnz
push
test
shlb
das
dec
sub
push
or
and
mov
aas
push
mov
inc
popf
je
gs
imul
lods
rcr
sbb
lahf
enter
jb
push
push
mov
mov
daa
pushf
add
xchg
aaa
xor
push
daa
mov
mov
xor
ljmp
lock
adc
andb
pop
testl
jnp
or
xorb
imul
xchg
pop
add
cmp
adc
lock
xchg
cli
and
fs
clc
inc
fisubrs
adc
std
cmp
mov
mov
popa
aaa
fisubl
in
stos
cmpsb
lock
mov
insl
ss
popa
and
add
sbb
roll
sub
pop
scas
stos
cmp
push
repz
and
mov
adc
push
out
mov
int
mov
push
test
sbb
xchg
jbe
jnp
sbb
mov
xor
mov
pop
cli
xor
dec
pop
mov
iret
shl
movsb
clc
or
sub
inc
test
mov
mov
cs
push
popa
and
lret
or
dec
rol
fmull
shl
push
sub
mov
insl
mov
test
sub
sbb
jp
outsb
sub
push
fnstsw
cmpsb
jo
aam
dec
and
sbb
in
mov
pushf
cmp
pop
out
dec
das
test
movsb
sub
cmpsb
aas
cs
jg
idivl
movsl
pop
add
ret
mov
jns
data16
js
add
mov
rclb
scas
jo
jo
cltd
xchg
repz
shlb
jge
mov
mov
test
loope
lret
add
push
movsb
mov
mov
call
ss
hlt
ret
test
bound
mov
pop
mov
cli
fnstsw
insb
mov
pop
jg
mov
shrb
out
push
push
sahf
mov
adc
out
cmp
xor
jle
ret
cmpb
test
daa
mov
push
cmp
mov
xchg
and
jl
mov
mov
xor
inc
shr
mov
movsl
mov
popf
dec
int
jnp
imul
scas
push
or
inc
cmc
mov
and
iret
add
jno
inc
or
std
jb
aaa
inc
movsl
addr16
sub
hlt
pop
jbe
out
cld
dec
mov
mov
loop
movups
insl
sub
insl
mov
loopne
dec
jl
jg
daa
mov
shrl
enter
push
in
loope
lock
or
inc
lcall
pcmpgtw
jns
into
data16
shrl
xor
push
adc
stos
inc
xor
or
adc
jbe
add
dec
xchg
adc
adc
jb,pt
lcall
push
out
fdivp
pop
cmp
sub
or
mov
jle
cltd
sub
pop
mov
push
inc
flds
xchg
sub
repz
and
and
inc
fadds
sbb
scas
xchg
pop
aaa
popf
addr16
in
seta
pop
xor
popa
inc
std
pop
call
and
and
sbb
dec
bound
xchg
ds
imul
jp
push
popa
sarb
aad
aam
xlat
push
loop
cltd
pop
inc
push
and
sbb
dec
mov
push
xchg
cmp
andl
or
dec
shll
jecxz
xchg
mov
mov
rcrb
in
sub
mov
xchg
pop
add
and
cmpb
push
ret
rcr
jge
mov
sti
pop
in
xor
sahf
loop
sub
lret
jnp
fistpll
bound
into
gs
pop
ret
push
in
inc
rcrl
xchg
es
jmp
adc
movsl
xchg
es
or
add
ja
cwtl
xor
aad
jnp
push
in
sub
repz
call
lods
movsl
fsubrl
or
cli
mov
xor
xchg
cmpsl
in
mov
adc
icebp
xchg
je
pushf
xor
stos
pusha
ficomps
jmp
cmpl
test
cmp
fistps
push
mov
or
insl
insl
pop
test
add
inc
test
mov
loope
testl
lahf
add
movsl
xor
sub
jmp
lret
inc
ret
inc
out
aaa
in
dec
ret
jge
cmpsl
ficompl
adc
sbb
gs
or
cmp
push
add
push
out
mov
dec
jno
mov
cmp
nop
pop
fmull
cltd
fildl
shrl
or
out
mov
sub
adcl
mov
xchg
mov
or
cmp
sub
or
mov
adc
mov
insl
add
push
xor
mov
cs
pushf
insb
sbb
inc
mov
sahf
sarl
mov
cmp
shll
out
ds
outsl
ss
sub
ja
push
stc
pop
imul
in
fsubrl
pop
mov
cmc
daa
loop
adc
jle
dec
mov
mov
scas
adc
xchg
in
push
testl
call
sbb
mov
mov
call
shlb
inc
mov
lock
add
sbbb
or
outsl
int3
scas
inc
or
or
cmp
repnz
push
int3
cwtl
das
decb
or
pop
fldt
add
cltd
shlb
or
jmp
push
cli
xchg
fwait
cmc
int
mov
mov
mov
mov
xor
out
in
fcomps
insb
test
or
mov
mov
cwtl
inc
aaa
lods
push
inc
and
sub
dec
nop
daa
jl
insl
or
sbb
pusha
pop
lds
out
ja
or
cmpl
pop
mov
mov
and
int
push
inc
sti
push
aad
cmc
das
ficompl
loope
jl
push
cmp
mov
xor
adc
dec
mov
mov
loopne
pop
lcall
jns
jmp
and
xchg
fdivrs
in
and
outsl
add
out
mov
aam
mov
scas
call
xchg
mov
test
xor
enter
xor
sti
jb
movsl
push
mov
mov
mov
xchg
gs
xchg
mov
test
pop
sub
pushf
xchg
inc
scas
ret
mov
jns
jle
add
daa
xchg
andb
rcl
pop
push
sarb
jns
push
outsb
xchg
push
push
ret
sbb
lahf
lahf
lock
int
mov
roll
mov
push
jl
jbe
sub
jl
inc
je
mov
or
outsb
pop
into
fsubrl
fs
jno
adcl
aad
jecxz
pop
push
mov
xchg
jno
or
cmp
out
movsb
repz
lea
cmp
rcrl
inc
loop
sti
mov
and
pop
adc
mov
xlat
ja
or
cld
push
and
xchg
sub
iret
scas
out
mov
jnp
call
movsb
pop
cmc
adc
mov
or
in
sub
data16
test
subl
push
dec
in
cmpsl
rcr
mov
pop
imul
repz
outsb
lahf
out
inc
ud0
dec
stos
or
xor
mov
cmp
cs
popa
repz
push
sub
mov
adcb
sub
xor
sub
mov
push
cltd
out
cld
std
mulb
inc
lahf
xchg
pop
sub
ja
iret
mov
xorl
mov
stos
inc
dec
add
mov
loopne
mov
cmpsl
dec
pop
add
add
dec
pop
mov
fadd
fistl
rol
push
pusha
arpl
dec
pop
xor
mov
mov
lahf
fldcw
in
daa
inc
out
jge
xchg
mov
fistps
cwtl
sub
ja
outsb
repz
int
mov
repz
mov
and
push
ret
cmp
sub
jl
ds
jmp
xchg
xchg
mov
jo
aas
jb
cli
pop
sub
mov
add
jge
lods
test
xor
sar
sti
pushf
scas
sbbl
sbb
mov
popa
jge
push
test
adc
inc
shrb
jnp
push
or
aam
mov
jmp
xchg
repz
arpl
aas
das
push
inc
add
mov
fnop
pop
cmp
icebp
sub
adc
cmpsb
cmp
aam
aas
push
rorl
lcall
xor
inc
jg
xor
dec
pop
out
jle
cmp
and
and
cmp
xor
leave
pop
icebp
mov
xchg
nop
pusha
jmp
popa
in
adc
fwait
inc
loopne
rcrl
xor
inc
adc
fsub
push
inc
shl
jb
int
push
xlat
mov
lahf
mov
dec
xor
int
cmp
aad
push
pop
or
or
lahf
xor
sarl
aaa
add
inc
lods
mov
adc
test
xchg
mov
push
je
xchg
mov
jmp
xlat
aaa
into
cltd
sbb
push
mov
xor
ds
cs
jns
shr
jl
sbbl
in
data16
inc
decl
lock
mov
mov
imul
mov
imul
stc
scas
fdivs
inc
jmp
sahf
cmp
outsb
popf
jecxz
add
xor
int3
or
add
xchg
xchg
and
and
xchg
push
mov
jl
sbb
pop
cld
repnz
cli
out
cwtl
xor
shlb
shll
out
aas
sbb
cli
xchg
nop
mov
jne
std
daa
jg
sbb
dec
sar
add
xor
std
ret
addl
stos
lret
ret
dec
out
icebp
lret
inc
insl
mov
adc
xchg
fs
mov
call
out
dec
incl
imul
decb
or
or
lods
mov
mov
jo
jp
adc
js
sbb
pop
iret
mov
xor
push
outsl
imul
jb
cmp
sub
jno
rcrl
insl
loopne
lds
jmp
enter
push
insl
ss
jb
mov
add
jp
out
or
mov
insl
inc
push
add
mov
push
push
sbb
adc
hlt
dec
mov
nop
aaa
mov
lods
adc
inc
into
int
jl
add
aas
imulb
jbe
fbld
adc
mov
out
cmpsb
push
jae
mov
scas
mov
cmp
ds
mov
jns
int
mov
jnp
sbb
fnsave
fdivrl
addb
outsl
jnp
xchg
test
lods
cmc
cmp
aad
outsl
cltd
mov
jo
jne
stc
addb
cld
fcmovnb
and
mov
fwait
push
dec
dec
jnp
jnp
std
lea
push
mov
decb
imul
out
and
push
cmp
sbbl
in
xor
mov
in
push
ret
jnp
inc
out
xor
xchg
jmp
ret
or
pop
cmp
mov
xchg
pushf
cmp
dec
push
add
loopne
pop
mov
inc
and
pusha
cmp
jbe
loop
and
adc
outsl
in
cmp
seta
mov
stc
mov
jl
daa
cmpb
and
or
call
sahf
in
ja
push
jp
jg
test
in
push
jmp
cld
nop
ljmp
andb
mov
icebp
jg
or
scas
push
lret
mov
jmp
imul
mov
mov
ret
lock
mov
loope
sbb
push
mov
inc
and
dec
or
mov
push
scas
fisttpll
mov
pusha
cmp
loope
nop
pop
and
mov
mov
jg
and
jo
or
cmpb
pop
mov
aam
out
ja
dec
add
or
adc
jmp
loope
out
imul
or
push
jno
rcl
cmp
inc
sub
daa
cs
xchg
add
inc
fnstcw
icebp
inc
das
inc
in
fwait
pop
into
mov
outsl
jnp
and
pop
mov
inc
push
ffree
and
out
dec
mov
cmp
aad
xchg
add
shlb
push
movsl
xchg
inc
es
loopne
ja
out
cmpsb
adc
fsubs
xor
sub
aad
orb
cmp
shll
pop
dec
mov
sub
sub
lds
push
jbe
lahf
test
xchg
add
call
or
icebp
inc
lods
dec
call
stos
js
comiss
mov
jne
or
xchg
daa
add
fidivs
xchg
pop
out
loope
aam
xchg
jnp
inc
xchg
add
cli
cltd
jmp
xchg
xor
push
push
cs
fstpl
sbb
fimull
movsl
dec
inc
hlt
fs
lock
test
les
add
mov
jbe
mov
push
mov
dec
aaa
jl
arpl
push
fstpl
fcmovnb
std
pop
adc
xchg
nop
daa
mov
sbb
pop
outsl
add
es
movsl
push
xchg
daa
or
fdivl
push
popa
sbb
or
jb
mov
pusha
push
mov
bound
inc
push
andl
iret
jbe
rorl
xchg
pop
jne
lds
idiv
jmp
xchg
push
sahf
push
int3
xor
cli
jge
lock
sub
mov
xchg
push
mov
pop
sub
pusha
mov
mov
jnp
adc
cmp
dec
dec
dec
lods
inc
xor
and
sub
cwtl
test
sets
xchg
xchg
mov
lret
inc
popa
cltd
inc
and
stos
aas
cld
and
push
insl
push
and
addr16
mov
andb
lods
mov
popf
jp
dec
mov
fsubs
mov
cmpsl
ret
fbld
jmp
cld
mov
adc
sbb
or
sub
mov
popa
jne
mov
dec
push
mulb
fstpl
shrl
fwait
gs
and
loop
adc
loop
mov
fs
mov
out
push
inc
sub
nop
lods
fs
inc
push
pushl
fiaddl
sbb
popa
push
mov
and
pushf
cmp
xchg
repnz
in
xor
ja
xlat
sub
mov
mov
inc
cmpsb
call
pushf
shrl
mov
dec
out
pop
in
jle
xchg
lock
pushf
arpl
insb
xchg
sub
add
mov
movb
clc
sub
mov
ja
adc
js
or
sub
push
xor
cmpsl
mov
fstps
pcmpgtd
push
xchg
and
jno
dec
inc
into
loope
mov
adc
add
test
fwait
into
gs
je
les
mov
mov
push
sub
out
mov
outsb
or
pop
lret
popf
xchg
lock
mov
andb
mov
popf
add
inc
sbb
add
inc
lret
aad
data16
jecxz
push
stc
or
shll
cs
xor
mov
sbb
nop
dec
dec
mov
out
lcall
adc
mov
push
mov
pop
push
sub
outsb
dec
sbb
cli
push
push
aas
ss
jge
aas
jg
test
aad
jno
shlb
add
cmp
or
fidivl
in
or
mov
push
ret
xchg
call
add
inc
pop
push
xor
dec
push
lods
xchg
mov
hlt
mov
add
clc
xchg
inc
sub
outsb
repz
loop,pn
loope
pop
test
mov
call
xor
rcrl
movsl
ret
js
scas
mov
jns
jp
jmp
notl
lahf
adc
lea
xchg
imul
not
or
lea
push
lahf
push
mov
sbb
lea
mov
mov
pusha
jge
sbb
sub
jns
insb
push
fbstp
mov
out
mov
int3
in
fwait
or
into
push
bound
mov
pusha
jns
clc
sbb
mov
fnstcw
loope
xor
jecxz
xchg
xor
test
in
sub
sbb
dec
mov
jle
shll
jo
inc
vcvtpd2psx
imul
sar
dec
xor
xchg
adc
or
or
addl
psubw
aad
pop
clc
aas
jg
mov
xchg
push
stos
test
mov
add
jnp
fwait
jmp
popf
push
out
fdivrl
mov
sub
or
aas
xorb
or
inc
add
int
push
roll
es
iret
imul
and
loopne
jb
adc
scas
cltd
test
cmpsl
daa
std
xlat
inc
cmp
mov
lcall
outsb
into
adc
pop
xor
cmp
data16
sub
adc
mov
and
adc
fnstcw
pop
pushf
xchg
xchg
divl
aam
pop
push
mov
cwtl
insl
sub
jae
mov
xchg
out
jns
ss
sbb
movsb
rclb
fld
add
mov
cmp
popa
jl
xchg
je
inc
aaa
inc
imul
dec
mov
adcb
xor
inc
and
adc
mov
sbb
lods
xchg
fadds
mov
sbb
xor
xorl
pushf
xor
stc
test
pushf
mov
fcomip
or
inc
rclb
mov
mov
dec
orb
int3
mov
dec
cmp
push
popf
xor
inc
lret
push
stos
aaa
shrl
out
xor
push
or
pop
insl
cwtl
xlat
sbb
rorb
fisubs
xchg
popa
jb
orb
out
push
icebp
fnstcw
and
aaa
mov
mov
pop
dec
in
pop
outsb
and
jb
leave
lret
stc
push
and
mul
or
sbb
inc
fisttpll
fsave
lcall
clc
sahf
mov
jae
push
sbb
jno
popa
enter
cmp
sub
ret
cmp
push
loopne
pop
daa
movl
cld
dec
arpl
mov
pop
adc
stos
jmp
mov
std
mov
psubb
mov
jbe
mov
xorb
dec
and
xchg
push
mov
ss
dec
mov
fdivl
iret
daa
push
jnp
or
push
lods
jge
fwait
cltd
je
push
cmpsb
cli
adc
cmp
mov
movsl
aas
popf
xor
into
pusha
aam
cmp
mov
sbb
mov
vmread
int
jge
mov
dec
adc
mov
lahf
mov
in
loopne
push
inc
add
or
sbb
push
and
push
pop
iret
cmc
and
in
lds
fs
arpl
shlb
cwtl
loope
adc
fwait
and
iret
fldcw
or
pusha
stc
les
hlt
sub
ret
hlt
sbb
iret
push
rcrl
in
push
cmpsb
inc
pop
mov
add
in
sub
ds
iret
sbb
das
sarl
fidivl
xchg
inc
sub
add
stos
mov
popf
push
cmc
mov
inc
adc
mov
jne
repz
jl
adcb
test
sub
xchg
mov
scas
sub
cltd
lds
pusha
shr
fadds
jne
std
shrl
push
pop
xor
xor
fwait
hlt
out
pop
repnz
or
mul
sbb
popa
fldenv
xor
daa
jmp
aad
lcall
pop
fsubr
in
and
lret
daa
mov
or
pop
jb
mov
inc
loop
jmp
lret
outsl
sub
mov
test
imul
pushf
loop
repnz
add
xor
pop
testb
cmpsb
adc
lea
xor
xchg
pop
in
lcall
mov
dec
ret
push
into
ja
mov
lods
mov
push
pop
cwtl
and
and
dec
adcb
ret
cmpsb
cltd
xchg
jmp
jne
cmp
xor
bound
push
push
ret
add
repnz
dec
int
mov
imul
sbb
mov
add
ljmp
sub
jns
hlt
popf
pop
cmc
pop
xchg
imul
push
dec
pop
cmp
mov
push
loope
xchg
pop
or
ds
movsb
in
or
stos
inc
scas
les
movsl
scas
negl
inc
add
jl
xor
push
cmpsl
jb
xchg
cmp
dec
lret
dec
repnz
lods
sbb
or
cmp
and
in
xor
dec
push
jle
pop
in
sahf
inc
shll
and
and
arpl
in
sti
and
xchg
sarb
fsubrl
scas
loopne
into
arpl
mov
call
mov
subl
pop
ret
fidivrs
repz
sahf
mov
push
jle
mov
push
dec
mov
jecxz
mov
popf
bound
or
xchg
adc
ret
lret
sbb
adc
sar
xchg
jge
movsl
fisttps
sbb
cmpsl
pop
aaa
into
add
daa
push
push
pop
mov
push
sub
ret
dec
pushf
jg
mov
push
adc
mul
xchg
repnz
cltd
movsb
mov
adc
push
inc
xor
cwtl
xor
inc
dec
fldl
and
pop
or
ja
in
std
imul
push
fimull
mov
decl
adc
lret
or
and
mov
push
inc
xor
movsl
in
xor
cmp
fsubrs
loopne
cmp
xchg
sub
aaa
scas
iret
jns
push
mov
mov
mov
mov
test
stos
xor
sub
push
cltd
stc
cmp
mov
xchg
adc
das
cmp
sub
xor
adc
nop
or
imul
ds
loop
push
push
clc
mov
shll
data16
ljmp
and
xor
lahf
insb
fisubrl
xchg
dec
les
push
mov
push
ss
dec
sub
incb
push
xchg
scas
in
test
xor
cmp
cli
int
dec
addr16
aaa
fistpll
inc
dec
push
xor
loop
sbb
and
insb
into
cmp
jnp
in
dec
xchg
cmpsl
rol
les
outsb
subl
ja
addr16
sbb
push
ljmp
repnz
mov
dec
ret
xchg
inc
aad
sub
test
rcr
stos
popf
pusha
sti
pop
dec
stos
xchg
jo
pop
dec
enter
dec
inc
ret
daa
mov
inc
mov
lods
mov
jg
or
mov
pushf
cmpsl
cmp
mov
les
sub
pop
lret
imul
pop
mov
add
jg
ret
fsubrs
pop
mov
or
insb
cmp
outsb
mov
jp
xchg
in
pop
pop
or
or
mov
das
mov
lcall
gs
mov
int3
push
in
mov
lcall
mov
repz
insb
lea
mov
sub
and
cmp
xchg
stos
jmp
adc
jae
fwait
and
in
ret
xor
inc
and
mov
xor
fistpl
fildll
push
jae
add
scas
xchg
pop
cmp
lret
xor
out
loop
push
jo
xor
gs
outsb
movsb
js
add
dec
cmc
cmp
icebp
jg
jg
dec
and
mov
sbb
fwait
out
and
divl
push
pop
jne,pn
lods
mov
add
jle
pop
mov
rolb
cli
push
repz
popa
xchg
dec
adc
push
inc
push
aas
insb
mov
je
cmp
sti
pop
sub
xchg
mov
dec
loopne
and
inc
push
jmp
xchg
mov
pop
push
in
add
mov
clc
push
cltd
mov
dec
and
inc
movsl
rcrl
pop
es
lods
adc
faddl
xor
ljmp
leave
int
mov
cs
xor
stos
out
sbb
int3
fld
stos
push
lahf
imul
fs
or
fisubs
imul
lds
xor
popl
dec
dec
js
jne
mov
popa
addr16
shl
frstor
push
push
push
inc
fdivs
in
andb
mov
pop
mov
sar
incb
or
les
mov
pop
stc
jnp
stos
in
add
lahf
int3
loopne
jae
mov
inc
push
test
insb
lret
loopne
gs
xchg
sub
mov
test
fistl
cmp
adc
movsl
jno
imull
jne
inc
iret
xchg
sub
js
mov
lea
sti
inc
mov
icebp
pop
jno
scas
out
cmp
lret
pusha
loop
or
aaa
in
xchg
fcmovnu
jno
add
sahf
xor
push
inc
push
fucom
mov
mov
sbbb
mov
inc
mov
scas
xor
jnp
imul
mov
sbb
adc
insl
inc
lods
xchg
ljmp
mov
mov
push
lahf
in
xchg
mov
sub
mov
dec
insb
xor
hlt
int
outsb
adc
lret
outsl
xchg
cmpsl
ret
in
add
idivl
rcrl
push
inc
push
mov
inc
pushf
xchg
andl
pop
das
sub
or
push
pop
sbb
dec
or
pop
sub
mov
lret
test
jmp
aam
or
iret
push
out
and
insl
std
cwtl
das
scas
es
loope
mov
lock
int
shrl
ds
icebp
mov
subb
jp
push
xor
or
mov
les
shll
stc
mov
fstpt
popa
test
adc
out
ficomps
sub
xor
xor
testb
in
sub
inc
ret
les
xchg
popa
incb
mov
and
loope
inc
rcr
sub
mov
lods
sub
stc
push
mov
jle
test
idivb
lods
inc
lods
add
int
inc
push
push
je
push
call
fwait
mov
sbb
or
outsb
cltd
sub
xor
into
cmp
call
aad
xor
lods
inc
repz
rcrl
xor
jg
fildll
push
dec
xor
dec
gs
ret
cld
inc
and
cmp
push
dec
loop
jne
nop
cmp
adc
int
lret
jns
in
sbb
and
mov
sub
mov
fwait
int
lea
pop
in
lret
sub
and
jecxz
mov
imul
enter
lock
loop
aad
mov
movsb
dec
cld
cwtl
push
jmp
adc
ds
and
cmp
cmp
nop
dec
xor
jecxz
push
and
cmp
pop
leave
cmpsb
or
testb
jae
lcall
lea
mov
dec
mov
push
xchg
rcrl
ret
ret
jb
mov
cmp
xchg
and
lods
imul
stos
mov
and
push
jmp
aad
jmp
or
pusha
imull
dec
add
mov
les
xor
add
rcll
adc
cmpsb
push
mov
dec
mov
xchg
sub
xlat
sub
out
jmp
or
cmp
in
loopne
mov
out
test
cmp
sahf
stc
repnz
subb
arpl
out
test
mov
outsb
add
gs
psadbw
fidivl
leave
add
cli
idiv
cltd
add
and
xor
int
push
dec
and
leave
test
pop
sbb
xchg
jb,pn
xor
pop
push
jne
rcll
int3
jg
jge
int3
scas
out
xor
stos
push
xchg
or
in
push
sub
fdivp
jo
testl
mov
xor
loopne
or
std
push
push
in
les
inc
fldenv
jb
jmp
and
dec
cltd
xor
cmp
je
cld
push
sbb
inc
xchg
xchg
lods
push
aaa
dec
loope
push
adc
ljmp
testl
mov
movsb
stos
mov
sub
lock
pushl
fadds
in
push
sub
mov
sub
enter
push
fmull
sub
push
sbb
lods
mov
add
int3
arpl
pop
sbb
lcall
ret
test
shlb
push
icebp
cwtl
inc
ja
outsl
or
pop
addr16
mov
jl
adc
mov
in
popf
shl
pop
sub
sub
lods
jg
sub
xchg
pop
stos
push
out
jno
cmpxchg
mov
loopne
add
fadds
or
lret
lret
and
cld
mov
clc
xchg
pop
inc
inc
add
jb
or
adc
pop
insl
mov
xchg
jge
fstl
gs
cmp
ret
fisubs
push
hlt
sarb
ficoml
push
int
add
imul
jbe
or
and
adc
addb
jl
pop
in
dec
sub
cmp
sbb
scas
ja
jne
ficoms
jl
dec
incl
movsl
push
scas
and
inc
fwait
adc
jg
sbb
out
ret
mov
inc
test
mov
xchg
aas
out
fbstp
mov
sub
adc
mov
adc
push
sub
popf
pusha
test
out
jle
fisttpl
lcall
es
popa
lahf
fwait
push
or
movsl
in
jecxz
dec
es
add
adc
fidivrs
push
aas
add
pop
bound
lods
mov
jmp
std
ds
add
xor
and
scas
arpl
rclb
stc
inc
lret
push
sahf
or
imul
ficoms
mov
ja
out
fcmovnb
dec
push
sbb
lock
iret
jbe
mov
test
sbb
jg
mov
and
insb
addr16
mov
sbb
dec
jg
imul
pop
cmc
rorl
mov
in
xchg
test
aad
testl
repz
and
outsb
adc
cmp
jmp
xchg
inc
and
test
orb
mov
xchg
arpl
movsb
shr
push
or
inc
sub
inc
add
rcl
xchg
or
xor
aaa
inc
fisubs
push
cmp
adc
insb
jmp
dec
out
mov
inc
adc
stos
in
stos
xchg
sarb
ss
push
xchg
jb
pushf
sub
ljmp
dec
pop
shl
cmp
xlat
movsl
mov
sub
cmp
test
int3
sarl
shrl
add
add
pop
icebp
clc
dec
popf
divb
sarl
jno
inc
aas
cwtl
xchg
movsb
cmp
mov
aas
outsb
addr16
outsl
push
test
or
mov
stos
pop
mov
lock
push
jno
jp
mov
das
ss
cmp
insb
and
leave
repz
cmpsb
xchg
add
bound
pushf
rcrb
mov
and
outsl
subl
aaa
loope
out
sub
aaa
loope
fistl
cltd
cmpsl
and
pop
jb
shll
movsl
jl
rcrb
inc
inc
cmpsl
ljmp
push
jecxz
xlat
mov
adc
mov
jl
decb
dec
aad
adc
inc
sbb
xor
imul
or
aam
test
js
fidivs
loopne
mov
sbb
sbb
mov
std
xchg
add
sbb
push
fstps
out
inc
sub
add
cmp
jbe
pop
std
test
pusha
cmp
adcb
iret
ja
movsb
cmp
lock
dec
ret
insb
bound
xlat
roll
cwtl
add
push
cmpsl
pushf
jecxz
mov
mov
mov
inc
test
inc
movsl
adc
enter
and
jmp
or
push
dec
mov
push
mov
sub
sub
mov
adc
out
stos
or
jmp
out
xor
sbbb
daa
loop
push
inc
push
mov
xor
dec
std
ret
in
outsb
push
sbb
cmp
mov
test
stos
stos
inc
lock
adc
adc
pop
cmp
cmc
mov
adc
orl
xchg
push
mov
cs
push
outsl
mov
call
addr16
mov
dec
push
sbb
mov
xor
or
shl
jg
pop
inc
push
inc
pusha
push
out
fdivrs
cli
xorb
mov
xchg
push
pop
xor
jmp
mov
xor
jmp
mov
out
int3
adc
jbe
insl
das
cmpsb
mov
push
in
lcall
mov
ret
fstpl
push
cs
clc
pushf
push
bndstx
mov
out
mov
lea
adc
cli
pop
mov
pop
cmp
stos
mov
shlb
mov
and
xor
cld
sub
pop
into
pop
lock
dec
pusha
sti
pop
jbe
mov
into
cwtl
mov
mov
mov
xchg
subb
cmpl
xor
test
inc
mov
dec
loop
pushf
js
inc
pop
test
imul
fs
xchg
add
roll
jmp
or
ret
xor
sbb
lret
ljmp
inc
adc
mov
in
xor
fnsave
or
pop
popa
dec
jg
in
xchg
pop
fcmovu
and
dec
sbbb
sbb
rcll
xor
jp
push
add
fisubs
jp
cmp
or
pop
dec
jae
mov
adc
enter
jno
dec
sbb
mov
repnz
jmp
lds
xor
leave
jmp
fstl
out
pushf
xlat
repnz
jo
cmp
daa
divb
mov
cmp
cltd
daa
inc
fistpl
leave
xor
mov
adc
mov
outsb
test
mov
int
cmp
iret
xor
mov
cli
push
inc
mov
jge
scas
mov
inc
push
push
pop
stos
mov
shrb
cwtl
je
mov
dec
push
pop
add
mov
cli
cmp
aaa
push
fstpt
or
out
movsl
and
unpckhps
and
cmp
inc
mov
sub
pop
pop
xchg
sti
mov
mov
stos
ret
aad
dec
mov
pop
adc
iret
or
xor
xor
jg
dec
pusha
fldt
mov
into
fmull
dec
icebp
movsl
shll
mov
cmp
sub
adc
ss
sbb
jg
push
test
jp
aam
inc
pop
test
pop
mov
in
xchg
push
sub
call
cmpsb
leave
cmp
je
inc
ss
imul
mov
sub
data16
cmp
cmc
call
or
mov
jno
mov
subb
dec
mov
dec
loope
js
xchg
mov
push
inc
rcl
jp
add
in
push
ret
push
jno
lret
arpl
pop
xchg
subl
and
push
les
xchg
mov
repnz
dec
sahf
add
leave
push
leave
rorl
mov
mov
jmp
aas
dec
ja
pop
ja
je
cmp
out
adc
pop
cmpsl
inc
fwait
add
inc
sub
sub
mov
and
popa
sub
jae
xchg
adc
push
bound
int
cmp
pop
mov
int
sub
xchg
pop
cs
sbb
xor
lea
inc
xor
and
or
gs
test
xor
fcmove
cmp
loop
aam
inc
pop
int3
in
inc
fldenv
sarb
add
xchg
pusha
scas
leave
and
pop
iret
ljmp
jecxz
adc
cmp
inc
jmp
cmpsl
cmp
nop
iret
push
dec
test
int3
out
les
shlb
pop
pop
push
ljmp
jno
push
jbe
lcall
mov
jle
cmc
es
adc
stos
pop
pop
out
faddl
lret
cli
xchg
and
hlt
add
sbb
xchg
call
xchg
in
dec
jecxz
xor
test
inc
sbbl
rep
push
or
xchg
shl
cs
cwtl
divl
cld
hlt
push
and
mov
cmp
lcall
inc
mov
enter
into
data16
notl
jno
in
sbb
jbe
jge
in
mov
adc
aas
and
jle
popa
pushf
fdiv
push
cli
out
and
cltd
aam
and
dec
jp
jg
lock
in
cwtl
das
sahf
shr
jg
sub
adc
test
xor
pop
fdivl
dec
in
popa
jo
add
mov
push
addr16
and
jmp
cmc
sub
cmpl
int
inc
adc
int
arpl
ljmp
sbb
sub
adc
shrl
repz
xchg
cmp
jl
add
dec
pop
stos
in
test
cli
scas
xchg
sub
sbb
add
in
pushf
add
divb
xor
dec
push
out
jns
dec
jmp
cwtl
loope
pop
pmaxub
test
jne
mov
inc
jl
je
jge
call
or
mov
enter
imul
dec
out
lcall
xlat
push
xchg
mov
sub
xchg
ja
push
fildl
or
test
cmp
pop
xlat
repz
in
das
shrl
adc
pusha
and
add
jb
je
ds
pop
jnp
inc
mov
cmp
inc
mov
inc
adc
jns
cli
mov
fstpt
dec
jmp
call
inc
pop
in
xor
mov
inc
and
and
sub
in
adc
adc
or
cmp
mov
rcr
mov
pop
es
daa
jbe
lea
adc
aaa
andl
js
out
inc
in
testl
mov
loopne
push
jb
jnp
imul
aad
cmp
and
sti
mov
mov
test
std
xor
push
and
lcall
and
shlb
add
test
fcomi
mov
sti
fnstcw
test
pusha
fwait
dec
push
xor
xor
pop
jg
adcl
adc
xor
mov
fwait
sti
pushf
dec
xor
push
jo
adc
dec
fs
push
daa
and
inc
bound
xor
arpl
or
dec
sbb
or
mov
push
pop
icebp
test
js
aad
ret
jle
lods
les
sub
leave
into
gs
repnz
or
add
dec
push
adc
loope
dec
cmp
scas
jmp
mov
jmp
cs
jle
mov
dec
cmc
repnz
pushf
dec
test
decl
push
dec
in
dec
sub
jecxz
insb
add
sahf
or
sbb
dec
out
test
scas
jle
sub
lret
test
cmp
adc
jae
sahf
ljmp
data16
cltd
test
mov
mov
pop
sub
pop
push
mov
lret
add
xor
loopne
repnz
rcrl
ret
out
mov
dec
fisubrs
aaa
insb
jbe
or
xchg
push
cmpsb
pushf
sti
pop
daa
sbb
inc
ljmp
in
mov
inc
sbbb
mov
int
xchg
mov
push
dec
inc
pusha
xlat
daa
test
stc
pop
sahf
je
adc
pop
out
cs
xor
enter
mov
gs
mov
inc
std
add
push
loope
push
or
adc
mov
push
es
or
adc
lahf
dec
xor
jno
inc
mov
test
mov
dec
sub
test
iret
sbb
dec
mov
xchg
cmp
push
push
sub
lods
and
xor
shl
cmc
add
enter
shr
ljmp
inc
sub
pop
rol
sub
mov
cs
out
xlat
testb
jmp
add
ljmp
insl
or
ds
loopne
cmp
mov
or
mov
jge
xor
fwait
xor
jg
mov
daa
add
cmp
mov
into
in
dec
sbb
cmp
ds
inc
jae
pop
outsb
sub
sub
jl
fdivs
testl
sub
aam
std
mov
xor
push
and
push
push
inc
sti
jae
stc
xor
push
lods
xchg
push
adcb
adc
repnz
xor
std
or
jmp
mov
add
mov
push
out
leave
popf
xchg
cmpsb
mov
shrl
mov
fcoms
dec
loopne
and
xchg
in
jb
out
mov
mov
sub
int3
sarb
stc
test
popf
mov
or
cmp
mov
out
lcall
out
call
pusha
pop
sub
in
sub
fisubrs
movsl
dec
repz
hlt
ficoml
sbb
shrl
mov
ljmp
es
lret
xlat
hlt
dec
or
iret
xor
xor
notb
cmp
mov
subb
call
and
dec
fwait
inc
jo
js
in
jnp
mov
pop
sahf
outsb
aad
mov
dec
repz
xor
test
fsubrp
pop
shl
add
cmp
ret
xchg
mov
mov
add
xlat
or
pop
push
jle
js
jno
fwait
xchg
jns
push
es
std
pop
jb
mov
ja
les
pop
ret
jg
insb
xchg
inc
mov
loop
rol
jnp
pop
imul
jo
sahf
shlb
ja
and
fisttpl
mov
scas
inc
ffreep
sti
adcb
inc
movsl
mov
push
inc
cmp
lret
aam
push
pushf
xor
xor
xchg
adc
add
repnz
add
xchg
inc
loop
push
mov
stos
and
pop
mov
gs
lret
inc
or
cmp
hlt
dec
xchg
ret
stos
hlt
loope
adc
lea
jbe
sub
pop
pop
lret
adc
int
jecxz
mov
cmp
fdivrs
popa
das
xchg
add
test
int
test
pop
ja
adc
inc
pusha
mov
lods
outsb
repz
mov
nop
xor
imull
lds
fmul
adc
stos
mov
sub
clc
aas
rorb
cmp
shl
test
push
shlb
std
cltd
push
cmpl
mov
popfw
mov
daa
dec
scas
inc
stos
adc
inc
addl
lock
lods
lahf
cmp
loope
xor
and
xor
into
aas
lcall
mov
mov
mov
mov
mov
cltd
cmp
lret
stos
sub
loop
xor
sub
frstor
outsl
nop
test
stos
das
fdivl
icebp
xchg
jb
dec
sbb
out
cli
jae
pop
mov
hlt
data16
push
mov
jmp
lcall
pop
enter
xchg
je
filds
dec
out
fbstp
xor
sar
push
sub
push
js
adc
add
mov
sbb
insl
rcrb
fildll
out
fsubrp
leave
pusha
and
faddp
xchg
out
add
xor
daa
mov
pop
scas
xchg
add
jl
hlt
insl
cmp
sahf
dec
shll
es
xor
inc
outsb
call
inc
movsb
dec
imul
pop
in
out
imul
mov
fdivl
mov
mov
or
sub
push
sub
test
dec
mov
imul
adc
sbb
ljmp
popf
fists
enter
pop
movsb
out
out
in
push
mov
mov
insb
pop
inc
pop
mov
lea
dec
icebp
xor
pop
add
cltd
jo
popa
mov
mov
lods
shll
pushf
pop
xchg
dec
mov
js
push
pop
sub
pop
mov
and
pop
std
enter
mov
scas
sbb
pop
jae
cli
mov
sub
divl
jns
adc
fs
dec
in
push
icebp
cmp
xor
ret
and
dec
pop
mov
pop
shrl
xchg
pop
or
es
cmp
pushf
orb
jns
xor
shlb
sbb
mov
push
cmp
add
jne
jnp
lcall
adc
sub
andb
arpl
fsubl
aam
push
into
sub
frstor
jmp
pop
sub
out
cmp
gs
jmp
bound
addb
sub
or
add
mov
fidivrl
adc
int3
mov
aam
mov
loopne
out
mov
addr16
cmp
inc
aam
cli
out
and
es
xor
sbb
loopne
mov
lock
ljmp
dec
cmp
decb
push
in
cs
inc
pop
cmp
dec
push
sub
outsl
xchg
xchg
pop
mov
dec
fldt
iret
lcall
jae
clc
dec
xchg
pop
jmp
or
cmp
insl
jge
mov
sub
repz
push
mov
xchg
fnsave
jp
out
push
mov
push
daa
adc
shrb
mov
lock
cld
cltd
icebp
lock
ret
seta
cmp
sbb
flds
pop
out
call
and
frstor
sahf
test
sbb
pop
mov
in
pusha
xchg
lret
ds
ret
in
mov
push
in
xor
inc
test
mov
test
xor
adc
lods
jg
jg
int
sbb
mov
sbb
lret
popf
mov
and
testl
repz
cwtl
pop
push
sbb
xchg
cmp
daa
jnp
push
fsubr
xchg
add
test
ss
roll
or
mov
sub
lods
inc
cmp
jne
ja
add
xor
sbb
jmp
test
sbb
lds
sub
dec
cmp
stc
out
cmpsl
cmp
mov
xchg
popf
test
data16
in
push
push
loopne
mov
jno
lock
iret
push
cmp
cmp
sbb
or
rcl
fcoml
arpl
xchg
and
icebp
adc
adc
cmp
movsb
pop
les
add
loop
in
pop
mov
push
imul
push
mov
mov
orb
and
loope
enter
and
xchg
dec
cmc
inc
hlt
sub
cmp
out
jb
clc
push
sub
out
adc
inc
xchg
mov
xor
addr16
iret
mov
sbb
fcmovbe
mov
insb
mov
andb
subl
inc
lahf
subl
jp
xor
cmpsb
dec
nop
mov
jne
test
xchg
inc
aad
outsl
andb
stc
jle
push
xchg
mov
inc
dec
stos
mov
adc
cmp
cmc
push
outsl
dec
push
dec
popa
mov
xchg
aaa
stos
lret
push
push
mov
cwtl
inc
push
mov
sbb
or
jns
dec
xchg
cmpsl
subb
sub
jmp
leave
cmp
push
lods
lds
outsl
cmp
fwait
jmp
and
int3
and
cmpb
jecxz
das
int3
movsl
fucomp
mov
stos
popa
aaa
sub
jp
repz
mulb
pop
out
out
scas
ret
mov
jno
sbb
fst
popa
jns
cmpsl
jmp
dec
jno
dec
xchg
push
dec
push
cs
push
sbb
ss
loope
fsub
push
imul
js
fs
mov
mov
mov
clc
in
jno
and
jb
ljmp
mov
push
cmc
test
cmp
sbb
mov
daa
fs
enter
js
es
icebp
push
rcr
fwait
jb
testb
js
xchg
mov
jns
push
aaa
movsb
xor
sub
mov
xor
std
and
jmp
enter
jno
ljmp
mov
xor
dec
xchg
shrd
jmp
mov
mov
lret
lret
inc
dec
jnp
jle
push
mov
imul
scas
dec
and
jno
inc
adc
inc
sti
aad
movsl
bound
xchg
lds
sbb
lock
out
add
adc
test
nop
push
mov
push
pop
lock
rcrl
subb
mov
cmc
aaa
shrb
in
push
aaa
pop
pop
adc
fisttpll
mov
cwtl
ret
shll
ljmp
ja
push
jecxz
mov
int3
loopne
lret
jmp
out
add
test
fimuls
mov
lods
mov
dec
sub
fdivl
cmp
fninit
push
jmp
mov
gs
dec
push
mov
jbe
hlt
sub
jbe
cli
cmpsb
data16
inc
enter
adc
pop
icebp
in
andb
scas
sub
and
cwtl
mov
test
imul
cmp
imul
ret
cmpsl
lcall
outsl
stos
sub
sbb
jnp
sbb
push
neg
cli
pushf
mov
mov
divl
add
mov
mov
adc
movb
cli
jne
lret
lods
mov
sub
in
cwtl
push
repz
inc
sub
shl
sti
in
cli
insb
sbb
mov
inc
xor
pushf
xchg
popa
lock
clc
popa
ret
xchg
mov
inc
pop
out
ljmp
bound
sbb
sti
dec
in
out
imul
mov
pop
mov
fidivrs
leave
ljmp
addr16
pop
repnz
sarb
aas
add
ret
xchg
cltd
pop
divb
push
jp
mov
in
or
xor
popf
push
lret
stos
cmp
sbbb
lea
ret
or
cmp
and
dec
dec
in
imul
adc
cmp
call
jp
push
mov
ret
sbb
and
push
sbb
repz
pop
and
stos
mov
in
loop
and
dec
push
jmp
xor
dec
add
add
fsubrs
or
popa
xchg
push
dec
sbb
sub
cmp
insb
hlt
pop
cmp
push
cld
xchg
inc
fcmovne
pop
xchg
pop
test
inc
add
xchg
fcomip
cmp
frstor
mov
push
in
stos
pop
das
push
or
sub
xlat
add
xor
sti
xlat
xchg
sbb
sbb
daa
adc
pushl
and
test
add
sbb
and
xor
xor
ja
fmulp
pop
inc
repnz
scas
movsl
sbb
pop
xor
pop
xchg
icebp
lret
push
push
repnz
inc
and
test
mov
fistl
push
cmp
imul
scas
mov
jmp
fs
inc
stos
inc
jne
pop
dec
test
shrl
test
enter
and
rcrb
jl
pop
mov
xchg
dec
add
lahf
cmp
mov
shrl
xchg
pop
lods
dec
les
dec
in
xor
add
scas
push
and
je
jg
mov
add
or
pop
fldcw
mov
push
add
add
xchg
add
push
test
imul
insl
xor
dec
enter
mov
pop
mov
dec
jno
repnz
cmpsb
mov
push
push
fistpl
loopne
xchg
mov
bound
mov
sahf
sub
aas
sbb
mov
sub
inc
loopne
clc
dec
pop
sbb
repnz
cwtl
or
scas
push
cmc
mov
out
fs
fbld
andb
sub
pop
aaa
and
movsl
pushf
xchg
push
popf
sub
sbb
fisubrl
mov
mov
icebp
jae
xor
ja
push
inc
mov
or
xchg
add
pop
lret
pop
out
mov
insl
lahf
or
in
mov
in
aam
test
adcb
mov
cmp
xor
fwait
pop
je
test
fstps
mov
pop
movsl
ljmp
mov
mov
sub
shlb
rcr
cs
lods
mov
arpl
jge
loope
mov
cli
cli
and
test
mov
bound
xchg
fdivrp
cltd
push
inc
ret
stos
test
push
call
sti
cmp
dec
cmp
leave
inc
fidivrl
adc
lock
movsl
in
jl
mov
inc
nop
ss
scas
std
mov
push
lock
shl
jne
jecxz
mov
lds
xor
mov
dec
out
dec
add
test
mull
jge
in
js
mov
add
fisubrl
mov
lahf
in
lods
sbb
cmp
mov
mov
mov
lds
arpl
or
rclb
mov
jp
mov
xor
cmp
and
and
into
mov
push
mov
shlb
notl
fsubl
stos
mov
fwait
mov
pop
int
or
adc
outsl
daa
sbb
rcrb
test
and
fucomi
dec
push
sub
or
pop
xchg
dec
fs
dec
mov
inc
ret
gs
xchg
shl
ret
in
pop
repnz
pop
pop
movsl
mov
sub
inc
xlat
icebp
xor
loope
negl
mov
dec
add
lcall
cmpsb
cmp
repz
xchg
dec
lahf
loopne
or
test
pop
sub
or
lea
pop
aas
xlat
notb
out
lods
mov
push
dec
andb
lea
cmp
and
test
xorl
enter
jae
pop
dec
or
sbb
dec
nop
and
mov
je
cli
xchg
mov
inc
fstl
jo
push
jne
cmpsb
mov
fldenv
xor
mov
lods
inc
nop
pushf
xor
xor
push
outsb
cmp
cmp
pop
xor
mov
jns
add
xchg
scas
pusha
adc
mov
sub
sub
je
jb
adc
fwait
mov
push
fs
jne
mov
pop
jo
xor
xchg
aam
cltd
mov
or
lret
ja
mov
mov
cmpsb
cmp
jnp
out
ret
jne
loop
test
sub
cmp
mov
mov
stos
jne
dec
ds
xor
insb
and
scas
pop
divl
test
add
mov
in
in
push
push
fildll
inc
out
xchg
or
sub
mov
lods
orl
mov
movsl
insb
sbb
inc
dec
jae
imul
ss
cli
ret
enter
and
fstpl
inc
shufps
add
fcomip
or
mov
or
mov
std
jb
push
push
sbb
les
les
in
mov
mov
cmp
int
mov
leave
test
ja
mov
ret
pop
mov
pop
int
iret
movsl
cmp
jae
xchg
icebp
xchg
popf
cmp
sbb
mov
shlb
es
jp
stc
outsb
cmp
scas
cmp
pop
pushf
fcoms
inc
cmpsb
dec
xlat
push
and
push
stc
inc
cmp
adc
and
push
xchg
mov
imul
movsl
xor
fucomi
rolb
fimuls
dec
adc
cld
xchg
xor
push
outsb
ret
cld
and
mov
cmp
or
addr16
push
std
xchg
in
xchg
jmp
mov
or
mov
loopne
test
adc
and
cmc
mov
pop
mov
dec
fcmovbe
pop
loope
daa
inc
pusha
lds
jns
xchg
xchg
xchg
mov
test
sub
jo
cld
outsb
push
test
lods
pop
sbbl
adc
pop
nop
xchg
jnp
sti
mov
sub
stc
push
inc
xchg
mov
icebp
leave
aam
mov
lods
jg,pt
int3
add
mov
call
add
pop
loop
repnz
xlat
lahf
ds
lahf
jge
imull
sti
pop
shrl
gs
rcpps
mov
ja
jecxz
add
mov
push
pop
mov
xor
enter
adc
mov
and
sbbl
push
aaa
jg
add
je
jg
dec
push
push
orb
cmp
pop
sub
xor
dec
mov
push
ret
push
cli
idivl
outsl
sahf
jae
insb
sti
and
jo
lods
inc
adcl
dec
mov
lea
aad
cli
iret
movsl
inc
or
repz
int3
sub
sbb
cmp
mov
xor
rol
sbb
scas
pop
sub
sub
sbb
mov
mov
clc
std
jl
cmp
stos
inc
popf
ret
xlat
ret
cmp
pop
data16
mov
adc
or
sub
xor
xchg
xchg
or
scas
aam
daa
push
addr16
lcall
and
cltd
or
shlb
stc
push
in
repz
xlat
fstp
sbb
hlt
mov
push
inc
popf
mov
push
movsl
mov
pop
jmp
sti
xor
push
push
xchg
push
mov
divb
add
sti
mov
ljmp
cli
sbb
jl
push
cmp
addr16
adc
pop
arpl
and
cmp
imul
insl
inc
ds
repnz
push
jnp
and
xchg
mov
pushf
frstor
adcb
adc
mov
fwait
or
mov
cmpsb
imul
addr16
stc
push
jb
pop
shrb
mov
push
dec
push
jmp
pop
std
dec
pusha
cmpsb
ret
xor
repnz
std
lods
fsub
ds
daa
ja
sbb
dec
mov
mov
mov
sti
cld
bswap
sbb
jo
pop
jo
jno
lock
imull
cltd
push
cmp
pop
pop
fisubs
jno
orl
pushf
jmp
adc
inc
xchg
xor
loope
es
push
pusha
int
mov
or
arpl
data16
sbb
adc
iret
and
pop
pop
mov
mov
sub
inc
sbb
xor
xor
mov
mov
out
mov
jp
lds
psllw
pop
pop
icebp
add
test
movsb
push
orb
adc
push
and
ficomps
mov
xchg
addr16
push
sub
addr16
push
mov
sbb
shl
add
mov
sarb
enter
inc
leave
inc
pop
push
dec
mov
sbb
daa
std
sarl
xor
in
jb
fnstenv
sti
jl
cmp
test
pop
jmp
push
pop
mov
das
outsl
das
fsubr
stos
pop
add
mov
bound
lods
fwait
daa
lcall
sub
out
push
test
mov
and
filds
fwait
lret
adc
mov
cwtl
lods
ret
cmp
pop
jo
push
jge,pn
popa
xchg
addr16
inc
pop
dec
ja
push
nop
xor
push
sub
test
mov
mov
cmp
fucom
and
shrl
lds
or
jl
outsl
iret
jp
insl
inc
sub
inc
rcr
scas
repz
out
decb
outsb
rcl
aam
mov
ja
pop
mov
mov
ret
cmp
mov
popf
scas
cmp
push
divb
test
pop
adc
mov
xor
out
in
mov
movsb
ret
loope
stos
inc
call
xor
mov
push
daa
mov
rcr
jo
jl
mov
inc
clc
xchg
repnz
lret
push
cmpsl
sbb
sahf
scas
jne
jl
das
or
dec
push
sub
mov
faddp
pop
int3
movsl
push
adc
and
repnz
fsubs
mov
pop
cltd
lcall
aam
add
jno
repnz
mov
jns
repz
sbb
adc
shrl
loope
ret
popf
das
adc
push
sub
lock
pushl
leave
mov
and
push
mov
add
xchg
rorb
mov
mov
test
mov
scas
test
sbb
add
xor
addr16
jo
mov
jp
sti
xchg
ds
ret
pop
add
test
sbb
ret
shll
ret
pop
shlb
das
and
adc
pop
sub
or
stos
arpl
mov
xor
push
in
inc
jns
ljmp
pop
das
add
jl
inc
mov
lods
inc
mov
daa
insl
sub
sti
int3
arpl
sub
push
pop
cmp
repz
sbb
inc
adc
and
dec
pop
cmp
mov
es
decb
sub
nop
mov
fcompl
xchg
clc
xchg
pop
xor
add
fnstenv
mov
mov
es
lods
push
mov
xor
and
or
imul
inc
lret
fmull
int
lods
mov
loope
pusha
cld
rolb
cmp
jl
jbe
xchg
jb
push
in
xor
aam
or
adc
mov
inc
loop
testl
cltd
out
jo
jle
xor
lds
sbbb
ds
dec
jl
lahf
push
mov
stc
ret
mov
xchg
roll
out
stos
es
xor
jbe
mov
dec
fyl2xp1
or
push
inc
fidivl
push
das
mov
xlat
pop
movsl
jecxz
or
jecxz
pop
cli
mov
rolb
xchg
inc
xlat
arpl
xchg
fmull
mov
iret
adc
push
bnd
adc
lea
lcall
mov
out
test
pushl
mov
lock
leave
push
or
push
lea
cmp
and
adc
repnz
ss
lods
movsl
lods
sub
divb
mov
inc
shrb
mov
pop
pop
pop
mov
sbb
sub
stos
inc
jbe
popa
mov
lcall
pop
xor
rcr
mov
mov
stos
loopne
and
orl
ret
out
loope
cmp
flds
xchg
pop
lods
push
and
xchg
cltd
inc
les
in
lahf
testl
lods
cmpsl
mov
sub
adc
hlt
cmp
mov
sbb
or
pop
sub
cmp
mov
ja
jmp
out
adc
lea
sbb
lcall
test
mov
adc
lods
lock
dec
ss
mov
aam
pusha
insl
push
xor
outsb
xor
in
cmp
aam
filds
jne
hlt
rcrl
sub
push
inc
repnz
sbb
dec
xchg
push
lods
les
cmp
mov
imul
xor
pop
scas
sbb
mov
or
jns
pop
or
dec
inc
sti
sbb
mov
sbb
push
call
rorb
lock
outsl
push
stos
out
push
lds
push
or
imul
sub
fnstenvs
fwait
jbe
inc
dec
dec
dec
push
fnstenv
fmuls
adc
int
jp
and
jae
fcomp
outsb
fsubp
ret
int
fmull
xchg
stos
inc
out
stos
flds
enter
lods
lds
imul
push
addr16
push
sub
mov
dec
or
xor
ss
push
push
fdivrl
mov
stos
or
xchg
hlt
push
adc
ds
and
rorb
mov
pop
nop
daa
outsl
in
dec
fisubrs
sbb
ss
aaa
pop
dec
in
loopne
les
insb
shrb
adcl
or
cmp
add
pop
dec
jmp
frstor
loopne
jno
dec
xlat
inc
scas
ret
fmull
sbb
pop
lcall
push
pushf
cli
jb
fwait
testb
xorb
jl
mov
aam
cmc
lret
add
and
pop
aas
outsb
pop
imul
nop
xchg
fnstsw
add
dec
pop
test
pop
dec
adc
cli
cmp
js
sbb
cmpsl
sti
sub
add
repnz
inc
sbb
jmp
add
repz
push
lods
ljmp
pushf
push
jne
pop
dec
es
fbld
sti
in
pop
cld
dec
fnstcw
pushw
xor
jo
or
inc
xchg
add
lds
pop
xchg
mov
sahf
call
add
and
mov
lret
cld
mov
fcmovne
nop
imul
push
sbb
movb
pcmpgtb
ret
adc
fidivs
mov
cld
cvttps2pi
push
lcall
sahf
scas
fdivl
and
cmp
mov
sub
fwait
cmp
jecxz
jns
jns
dec
dec
pop
icebp
xchg
or
sti
mov
aaa
xor
xchg
jns
inc
stos
ds
pop
adc
adc
fs
dec
mov
xor
loopne
xor
pusha
les
movsl
dec
scas
outsb
aam
mov
mov
out
sub
fidivrl
xlat
pop
dec
mov
fnstenv
push
sub
les
clc
fs
insb
add
leave
daa
rcrb
mov
insb
jle
or
ja
dec
dec
aam
jge
ret
iret
dec
pop
cmc
mov
mov
cmpsb
in
mov
outsb
xchg
mov
fstpt
pop
cmc
dec
into
mov
sub
rcrl
dec
fs
mov
push
scas
xor
lock
jno
adc
jo
gs
add
in
cmc
in
xorl
out
dec
dec
jl
mov
xor
cmp
cmp
popf
jg
lmsw
cmp
mov
hlt
cmpsb
stos
and
loopne
adc
not
ret
adc
mov
jb
mov
and
mov
lds
push
sub
push
in
mov
std
mov
sbb
rolb
mov
ret
jnp
hlt
insl
call
mov
xchg
in
adc
cld
mov
out
cmp
mov
adc
add
rcr
mov
out
sub
stc
inc
inc
sbb
mov
xor
jge
repnz
movsb
aaa
shll
add
sub
mov
sbb
subb
pop
cmp
es
adc
adc
xchg
sbb
xor
push
aaa
add
test
push
shll
movl
lods
dec
add
rcl
mov
pushf
cld
xchg
lret
addr16
jo
mov
sbb
jge
jmp
mov
movsl
aas
cltd
push
lods
dec
rcrb
negb
add
lds
ret
push
in
add
loope
or
xchg
popa
push
cli
xchg
push
sbb
inc
pop
dec
fnsave
dec
cmpl
fnstcw
lret
add
and
xchg
pop
loop
push
xchg
adc
pop
dec
and
mov
push
neg
or
mov
and
cltd
mov
call
fildll
jne
ss
jb
jmp
notl
in
fwait
jbe
add
mov
and
mov
lds
out
push
hlt
ja
inc
test
into
mov
jl
mov
lods
xchg
dec
cmpsb
sbb
in
aam
call
lcall
sub
mov
push
shlb
call
out
test
ja
rclb
push
inc
stc
and
mov
or
sub
jns
push
js
xchg
js
mov
out
pop
stos
stc
shl
ss
xchg
outsb
repz
push
or
xchg
sub
mov
cld
popa
and
stc
mov
lods
or
icebp
xchg
nop
dec
dec
popf
cmp
addr16
inc
lret
into
pop
fwait
ret
nop
cmpsb
mov
push
sub
decl
aas
repz
lea
imul
sbb
pop
popa
xor
cli
inc
push
inc
inc
cmpl
clc
and
push
scas
mov
mov
jns
pushf
movsl
jae
pop
in
lret
sahf
jns
mov
lcall
inc
fcompl
mov
cmp
dec
ja
fst
xor
fs
fimull
and
ret
icebp
into
loope
in
adcb
dec
in
lahf
pop
xchg
mov
lret
in
dec
or
fisubrs
jbe
lret
ja
cwtl
test
xor
std
filds
fucom
jge
jnp
iret
and
add
movsl
popf
pop
fmuls
lahf
enter
imul
cmpl
dec
xlat
into
push
loope
lea
adc
das
je
push
pop
jb
jcxz
test
cmpsb
dec
fiaddl
sub
in
loopne
pop
jne
cli
push
and
adc
inc
sub
inc
lret
out
jecxz
lret
cli
pushf
pop
fs
aad
jo
jno
cmp
ljmp
lds
jp,pn
pop
mov
dec
jp
sub
cmc
sub
loop
and
inc
popf
hlt
sub
xchg
nop
ss
push
mov
xlat
inc
cmp
out
jnp
adc
lods
fs
and
lds
arpl
in
add
xchg
or
add
lret
push
loop
ds
orb
lock
or
xchg
or
arpl
sahf
lret
outsl
shrl
inc
ljmp
cmp
lcall
cwtl
mov
mov
popa
aas
jle
je
pop
movsb
sarb
scas
xchg
dec
aas
or
dec
out
mov
inc
aaa
cli
mov
stos
das
adc
sub
dec
in
pop
shrl
shl
mov
aas
outsl
pushf
popa
jge
enter
in
cmp
pop
jb
inc
dec
std
xchg
loope
call
or
xchg
jg
lods
stc
and
add
mov
or
sub
or
mov
jno
clc
pop
xchg
jbe
sub
sbb
or
jno
movb
push
dec
mov
lahf
push
or
test
jmp
lahf
push
push
cmpsl
jp
and
inc
movsl
and
fisubl
mov
mov
arpl
mov
ret
pop
cmp
mov
or
xchg
cmp
movsl
mov
orb
mov
or
add
es
xchg
pushl
push
cmp
or
stc
ds
in
mov
js
sbb
repz
or
flds
xor
scas
icebp
rorb
in
jg
adc
xchg
in
mov
or
or
sbb
loope
push
xchg
xchg
iret
xchg
dec
rorb
imul
ss
and
test
jo
dec
mov
pop
aas
dec
js
mov
lret
push
jmp
fst
outsl
push
or
repz
jmp
sbb
adc
pop
push
bound
daa
testl
cwtl
dec
or
test
push
push
movsl
inc
sub
addr16
xchg
dec
aam
push
mov
xchg
in
push
jmp
dec
sbb
loop
xor
jb
or
dec
push
cmp
in
jae
and
xchg
cmp
repz
inc
ds
inc
inc
pop
les
insl
sbb
push
sub
sub
mov
sti
mov
rclb
mov
sbb
inc
test
lret
pop
push
dec
fcoms
or
enter
fucomi
aam
xchg
lods
sub
mov
push
frstor
lret
jne
cld
inc
ja
jbe
pop
lock
lods
dec
and
sti
push
sub
dec
mov
jle
insl
testl
inc
add
pop
addr16
stos
ffreep
orl
dec
out
push
mov
pop
and
mov
mov
ja
mov
inc
jg
mov
ret
test
mov
cmp
dec
push
cmp
out
adc
and
or
jb
jecxz
pop
adc
insb
and
outsl
jno
mov
add
jmp
gs
add
scas
outsb
inc
fisttps
pop
nop
inc
push
jbe
icebp
shl
and
inc
mov
sbb
mov
and
cld
jno
jle
xor
or
test
subl
add
daa
inc
cli
int3
mov
fs
mov
add
jg
mov
scas
outsl
paddusb
sbb
and
addr16
mov
cld
hlt
shrb
xchg
sbb
pop
fsubs
out
jae
aaa
lret
mov
imul
mov
pop
ja
add
jge
sub
loopne
in
or
sub
cmp
add
in
push
leave
mov
xor
xchg
stc
jno
int3
dec
insb
xchg
lea
mov
or
xchg
bound
jecxz
lret
mov
mov
xchg
and
stc
push
mov
jg
clc
lea
fcmovbe
push
cli
or
xchg
dec
jecxz
lcall
out
sub
dec
xchg
test
jbe
shrl
dec
jg
or
ret
or
iret
lahf
fsubrs
jne
sbb
xchg
mov
mov
in
sbbl
pushl
sub
ret
outsb
xchg
enter
and
in
mov
sti
cltd
mov
sub
fadd
cmpsb
fisttpll
add
cmp
mov
outsb
sbb
jge
sbb
push
cmp
mov
lods
sub
mov
lret
cltd
sbb
out
dec
popa
mov
movsb
adc
fcmovu
fstp
test
or
scas
lahf
pusha
xor
aas
push
push
lret
addr16
xchg
sub
xchg
cwtl
sub
call
jnp
hlt
sub
lcall
adcb
cltd
enter
xchg
pop
outsl
bound
push
clc
jae
ja
jmp
loop
sbb
jg
orb
in
mov
sahf
lret
leave
push
or
je
jmp
sbb
into
mov
mov
xchg
in
shll
add
test
pop
xor
mov
rcll
pushf
aas
xor
and
push
cwtl
pusha
cmp
sub
sub
sub
mov
loope
jp
inc
add
push
inc
ficomps
xor
sub
xor
xchg
mov
repnz
in
inc
inc
dec
ljmp
incb
or
pop
cli
xchg
sub
mov
adc
mov
subl
jnp
mov
sbb
jnp
adc
and
cltd
cmpb
mov
cmp
sbb
pop
add
cli
mov
fucomp
lret
jno
cmp
jb
mov
and
sbb
mov
out
imul
mov
mov
or
lret
loope
popa
and
rol
pop
add
mov
pusha
pop
xchg
or
cli
in
es
in
shlb
ror
xor
leave
fimull
and
fists
mov
lahf
inc
dec
push
push
cmp
lahf
scas
mov
xchg
loopne
sti
lea
xchg
xor
push
orl
repnz
jae
dec
ror
fildl
push
popf
aam
adc
pop
pop
or
xor
sahf
xchg
inc
mov
call
jae
mov
pop
jns
sbb
dec
xor
popf
xor
push
in
clc
xchg
inc
and
std
sbb
dec
sbb
aas
push
cmp
mov
stos
in
sbb
pop
movsb
mov
ror
fsubrs
fstl
nop
mov
or
int3
inc
push
fdivs
adc
insb
sbb
xchg
out
mov
mov
fwait
xor
cltd
movsb
jmp
pusha
test
xchg
shll
mov
push
movsb
dec
rcrl
cmc
sarl
add
roll
addr16
cwtl
xor
adc
jg
in
nop
and
add
loopne,pn
ffree
data16
xchg
jl
xchg
add
xchg
pop
divb
movsl
jge
int
imul
pop
adc
mov
sbb
ds
dec
je
push
dec
mov
add
cld
dec
cmp
sbb
lcall
cmp
push
in
jb
xor
pop
mov
scas
mov
loopne
hlt
inc
jns
ja
xor
mov
mov
sub
jne
cwtl
call
movsl
pop
cld
inc
xchg
cmpsb
ret
test
push
or
call
and
ror
and
push
jnp
out
add
imul
mov
adc
ljmp
add
push
sbb
popf
ss
sub
jl
lods
inc
xchg
jl
cwtl
popa
cmp
repnz
rcr
jno
lods
xchg
mov
xlat
and
mov
push
movsl
repz
sub
mov
cli
or
lret
dec
pop
iret
and
mov
adc
arpl
jbe
out
and
sub
mov
or
imul
sarl
mov
mov
mov
je
or
leave
xchg
sub
add
xlat
jbe
jecxz
lds
lahf
inc
inc
fidivs
fs
pop
lods
lods
and
sub
pop
pop
ss
mov
jbe
stc
mov
mov
outsl
mov
insb
ss
imul
push
or
aaa
and
jnp
pusha
cmp
and
mov
ret
into
mov
arpl
inc
pop
les
sbb
testl
mov
std
test
add
sbb
or
cmp
stc
inc
ret
inc
or
out
and
add
cmpsb
dec
fwait
lods
jno
pushf
cli
add
lods
shlb
adc
sub
lds
jge
mov
hlt
cmp
pop
xor
test
fidivl
icebp
add
jb
fdivl
sub
mov
out
xor
aad
cmp
aaa
mov
pop
sahf
sub
loope
aad
mov
stos
mov
les
test
jns
xor
push
cmc
mov
mov
shl
cmp
inc
push
test
popa
xor
out
sahf
inc
push
inc
xlat
orl
adc
lcall
mov
fidivl
mov
cwtl
and
cmc
pop
fs
repz
cwtl
test
mov
data16
cwtl
daa
enter
iret
repz
sbb
pop
icebp
ja
cmpl
test
add
push
ljmp
movsl
jg
sub
shll
jmp
and
iret
and
arpl
cmp
test
mov
mov
sbb
rol
cmp
fs
mov
nop
ss
iret
iret
iret
test
stc
mov
daa
ljmp
mov
stc
out
pop
imul
sub
js
fwait
lods
hlt
aam
jp
pop
lret
movsl
inc
xchg
xchg
ss
inc
inc
fidivl
sarb
imul
xorb
sub
mov
inc
int
mov
xchg
or
enter
sbb
lret
xor
mov
cbtw
fwait
adc
jecxz
das
push
ds
jo
icebp
adc
cli
add
ret
hlt
dec
inc
push
dec
sbb
dec
loopne
out
daa
and
rorl
pop
mov
outsb
pop
adc
add
xchg
push
jnp
js
and
inc
xchg
push
or
lret
lea
stc
pop
lcall
aad
cld
lret
pop
popf
stos
mov
test
and
push
lret
shl
adc
rol
jp
andl
xor
sbb
inc
jg
cmp
mov
jns
adc
or
out
dec
std
jl
fistpll
test
add
ds
xor
imul
pusha
or
inc
sub
adc
lods
sbb
ret
aam
in
push
mov
inc
xchg
iret
push
xor
jae
out
ja
push
cltd
cli
inc
mov
pop
out
les
jae
sub
sarb
fldt
dec
into
js
cmp
push
or
icebp
xchg
inc
add
inc
xor
mov
xor
or
push
negb
xchg
cmp
sbb
sbb
lret
adc
das
lods
les
fists
sti
imul
push
jge
jno
dec
dec
xlat
outsb
inc
jp
repnz
test
mov
push
pop
insl
mov
or
pop
sub
stc
pop
mov
push
xor
jg,pn
out
xchg
aad
test
push
sub
mov
popa
jl
call
fildll
pop
insb
pop
adc
sahf
xchg
lods
cmpsl
push
mov
jne
jno
loopne
popa
call
fisttpl
addr16
insb
movsl
jo
pop
push
lahf
es
ret
notl
cmc
adc
adc
cmpsb
loope
mov
push
lods
pop
dec
and
push
ljmp
imul
aas
adc
imul
addr16
adc
xor
popl
jge
and
pop
push
outsb
pop
add
jg
sbb
sbb
int
inc
notb
mov
push
mov
lock
jns
cmp
repz
xlat
sti
push
xchg
mov
loope
mov
out
xchg
push
lds
adc
pop
mov
lret
adc
jbe
jle
cltd
adc
sahf
enter
xchg
loope
jecxz
in
imull
inc
push
jbe
cmp
or
enter
xchg
adc
lret
or
movsl
sbb
adc
in
inc
rcll
or
mov
sti
xchg
and
push
insb
cwtl
sbb
shll
or
sbb
repz
push
leave
lcall
sub
data16
adc
mov
fisubrs
xlat
mov
ja
push
or
sub
adc
push
adc
mov
jnp
xchg
scas
loopne
add
bswap
and
lea
cli
mov
fldt
stos
xchg
jbe
sbb
xor
push
shrb
and
sbb
xor
adc
out
or
mov
inc
pushw
mov
sarb
leave
cmpb
ret
sub
repnz
mov
mov
mov
jbe
jae
shll
mov
into
and
movsl
push
lock
pop
movsb
cmp
enter
leave
fnstcw
sbb
out
xchg
mov
cmc
out
push
cmc
jbe
sub
cmpsb
inc
mov
mov
xchg
int3
jns
push
stos
jae
xchg
mov
lds
ss
fsubrl
and
lcall
mov
sbb
test
pop
lahf
add
es
test
push
dec
andl
inc
mov
orb
or
cmpl
jle
and
pop
mov
pop
hlt
mov
fdivrl
push
imul
lcall
es
push
test
pop
inc
pop
fcomip
mov
xor
adc
xchg
dec
or
movsb
aam
sbb
or
jg
jnp
cmp
inc
jb,pt
out
jnp
mov
cmc
dec
jbe
jb
std
scas
lds
ss
mov
jbe
xor
outsb
or
jge
xchg
fucom
xchg
imul
adc
ljmp
mov
movsb
enter
and
jnp
pop
xchg
mov
push
sub
fwait
das
leave
inc
stos
sub
push
inc
cli
jp
outsb
ss
cltd
pop
xor
xchg
add
scas
adc
xor
je
cld
mov
mov
jae
fildll
outsb
clc
fnsave
ja
cwtl
adc
inc
push
js
cmp
xor
sub
orl
push
inc
push
in
js
push
das
int
ja
pop
add
enter
inc
fidivrs
je
sbb
int3
pushf
add
sbb
es
pop
pop
nop
push
xchg
mov
je
cmp
lret
lahf
mov
cli
push
fstl
cmpb
jl
pop
pop
sub
mov
and
bound
cmpsl
sub
dec
repz
pop
xchg
daa
into
pop
pop
jge
push
fs
push
je
int
lock
xor
xchg
in
pop
outsl
inc
subb
popf
mov
push
loop
add
pushl
mov
and
or
out
xchg
data16
mov
call
push
lret
cmp
mov
xchg
adc
test
stos
sub
rolb
push
or
repz
outsl
cmpsb
in
or
jbe
jo
xor
sub
mov
pop
cmc
xor
fidivl
sbb
adc
pop
hlt
cmp
scas
subb
sbb
mov
jecxz
jmp
sbb
dec
jg
sti
stc
in
or
mov
lahf
adc
je
lods
cli
cld
push
cmp
aaa
dec
loopne
pop
shrl
lock
cmpsb
fdivrl
lods
mov
call
cld
jns
loope
gs
mov
xchg
push
out
out
adc
mov
outsl
xchg
mov
dec
xchg
leave
imul
or
push
mov
pop
daa
pop
mov
jp
sub
cmpl
fwait
popf
js
loop
mov
pusha
addb
dec
push
or
fdivrl
pop
nop
push
fcomps
dec
int3
jle
push
ja
iret
sub
sti
push
push
pop
stc
test
push
call
pushf
pop
mov
xor
jns
aas
js
jl
jbe
fs
jle
div
jmp
in
mov
pop
inc
nop
push
mov
jne
in
xchg
arpl
or
into
cmp
insb
mov
stos
stc
rcr
int
sub
out
dec
cmp
ret
test
imul
cmp
sbb
mov
sbb
aaa
sbb
push
test
or
test
jo
push
jp
scas
inc
xor
jb
fimull
cs
xlat
adc
xchg
mov
in
pop
push
pop
push
rorl
popa
in
pop
repnz
jnp
popf
negb
or
xor
xchg
outsl
shll
pop
xor
jae
call
and
leave
xchg
lds
aad
cs
mov
push
daa
pop
lret
pop
mov
mov
repnz
dec
outsb
leave
dec
cmp
push
movsb
cmp
pop
out
insl
out
std
pop
push
test
popa
pop
pop
sub
in
inc
cld
jecxz
xor
outsl
inc
jbe
cmpltps
mov
call
adcb
adcl
ret
pop
mov
sbb
sbb
pop
loope
add
mov
inc
mov
mov
cmp
mov
scas
and
into
mov
sbbl
lret
lock
imul
ret
test
inc
push
jno
lret
push
fld
fisttps
jne
bsf
rolb
push
repnz
inc
add
dec
inc
mov
inc
mov
adc
inc
dec
filds
nop
cmc
mov
mov
mov
nop
fcoml
out
xor
mov
imul
xor
out
and
pop
inc
rolb
negl
mov
ds
ss
push
sbb
popf
into
lahf
stos
daa
test
jg
lock
leave
jl
push
leave
xor
pop
pop
mov
xchg
cmp
cmpsl
xchg
or
clc
aas
bound
xor
mov
sub
iret
dec
sub
std
cmp
aad
icebp
nop
stc
mov
or
mov
dec
imull
mov
clc
stos
mov
lcall
addr16
fstps
push
nop
jae
and
add
iret
fcmovnu
loopne
sahf
push
cmpsb
mov
or
js
or
sbb
xchg
scas
push
sub
pop
lret
cmp
jno
sub
cmp
adc
loope
and
adc
stc
pop
cli
xchg
gs
test
mov
divb
push
loopne
cmp
scas
out
push
sarb
or
xchg
test
popf
pop
jo
pop
fbstp
outsb
jne
mov
out
idivb
shlb
adc
cmc
js
inc
loop
pop
add
pop
mov
movsl
cld
insb
push
clc
lds
ret
adc
call
pop
add
pop
es
sbb
mov
cmpb
inc
mov
sbbl
add
sub
pop
add
jle
jo
push
leave
je
sbb
xchg
jle
push
lcall
insb
sahf
sub
mov
xor
std
jp
call
repz
out
adc
jns
out
lcall
and
jp
flds
adc
push
sub
add
addr16
mov
fistpll
jns
fidivs
lahf
call
jmp
arpl
mov
or
out
rorb
xor
ficoml
xchg
pop
insb
mov
fbstp
dec
push
xchg
into
pop
dec
and
add
and
das
add
aad
mov
or
popa
pop
movsb
sub
adc
clc
jae
mov
out
inc
daa
mov
mov
jl
lock
jb,pn
add
jbe
testl
pop
add
lret
sbb
pop
dec
and
movb
jmp
cmp
sbb
pushf
das
mov
dec
call
aaa
inc
lcall
stos
dec
pop
rorb
mov
fisttpll
jecxz
xor
negl
inc
test
repnz
jg
jp
shrb
int3
sub
idivl
dec
fcmovne
ds
scas
lea
sbb
ret
testb
adc
pop
iret
cmp
jmp
arpl
cmp
mov
dec
mov
xchg
and
sub
mov
es
leave
xchg
psubq
push
push
adc
mov
push
fildl
xlat
out
lods
in
mov
cmp
mov
and
push
sub
inc
push
lahf
mov
jg
dec
adc
mov
xor
xor
pop
push
mov
mov
movl
aas
push
xchg
or
inc
sub
sbbb
scas
pop
cs
cmp
int
aam
dec
sbb
pop
xchg
fsts
jg
inc
jle
cmp
and
test
aad
pop
sub
lea
mov
xchg
push
sub
in
mov
fldl
aad
lret
into
mov
adc
fdivs
pop
add
jae
add
mov
sub
push
scas
pop
inc
bnd
mov
sarl
test
sub
xchg
sbb
aad
std
xchg
add
fdivr
aas
repnz
testb
testl
add
out
xchg
sub
dec
jl
popa
divl
jge
inc
dec
adc
mov
lcall
adc
data16
movsl
mov
xchg
shl
jns
or
fnstenv
add
pop
xchg
xchg
cmc
ss
push
lods
dec
fmull
adc
ljmp
cmp
cli
push
and
mov
pop
cltd
fmuls
scas
mov
mov
ss
shrb
xchg
and
cmpsl
mov
fs
mov
jecxz
aad
add
cmpsl
ljmp
inc
inc
adc
fildll
sub
dec
int
repnz
leave
push
jg
cs
popa
notl
pop
inc
jp
testl
lods
fwait
sti
or
adc
aaa
adc
daa
orl
in
sub
leave
clc
or
mov
jp
negl
adcl
sbb
in
mov
jb
jns
mov
push
push
xor
xor
mov
xchg
sbb
mov
in
adc
inc
sub
lea
int3
mov
cmc
gs
decb
xchg
pop
lock
mov
aas
cmp
sahf
pusha
mov
pop
inc
fisubrs
cltd
lret
inc
xor
and
lods
add
push
or
pop
push
leave
jb
sti
xor
stos
call
sbb
push
fdivs
inc
jmp
and
mov
aaa
std
int3
adc
sbb
orb
adc
xchg
jae
mov
ds
add
outsl
jle
aad
mov
iret
cmpsb
jl
ret
xchg
push
add
jno
rclb
lods
lds
jmp
inc
ja
inc
mov
adc
pop
fbstp
xchg
mov
inc
fimull
in
jb
sub
mov
or
insl
jecxz
or
xor
push
mov
and
rcrl
cmpsl
dec
icebp
push
pop
push
lock
adc
jae
jl
or
pop
stos
push
xlat
bound
jns
push
stos
sub
sbb
jle
in
pushf
xor
out
test
ret
frstor
mov
cld
int
fnstsw
adc
dec
test
and
mov
cmpsb
xchg
iret
cmp
sbb
out
dec
ss
subl
or
push
loope
mov
and
iret
mov
int3
sbb
jne
or
test
popf
rclb
jns
fidivs
dec
call
ja
pop
jle
mov
sub
fcoml
mov
fdivrl
aam
dec
adc
push
push
mov
push
popa
repz
shll
outsl
xchg
repnz
lods
test
add
push
int
jecxz
sub
push
jb
push
cmc
mov
les
out
dec
repnz
out
mov
jbe
inc
pop
les
or
lock
test
sbb
and
leave
inc
shll
dec
ja
jno
dec
jmp
jne
or
out
xchg
inc
test
sub
fldl
adc
adc
mov
sbb
mov
lahf
mov
add
mov
inc
mov
dec
ljmp
sbb
sbb
pushf
mov
push
int3
sub
out
ja
mov
aas
mov
jge
and
lahf
dec
je
inc
loope
ljmp
mov
decb
and
in
aas
lock
stos
popf
call
addr16
inc
out
popa
and
mov
int
add
sub
cmp
popa
cmp
inc
cs
jns
ficoml
xor
push
out
jmp
jge
test
xchg
adc
aaa
push
loope
push
fstl
not
outsl
cmp
mov
mov
xchg
daa
add
dec
test
scas
call
or
sbb
lods
or
jge
jle
add
cmp
or
pop
testb
mov
and
fbstp
scas
mov
fdivs
pop
in
insl
jb
lahf
mov
test
and
iret
jae
add
mov
mov
icebp
add
loope
mov
je
push
jno
push
pop
aaa
fucomp
or
rcrl
outsb
mov
ljmp
lods
and
xchg
fcmove
pop
loopne
icebp
pushf
xchg
inc
xchg
lods
jno
nop
scas
jmp
add
jmp
pop
xlat
dec
or
scas
lret
fwait
inc
pushl
in
xchg
push
mov
stos
jg
out
sub
push
jb
jae
push
push
ret
test
ja
or
cmp
push
scas
push
push
scas
int
mov
ss
push
add
jae
mov
cmc
fsubp
add
test
stc
aad
lcall
cmpsb
push
fwait
out
and
or
gs
xchg
aaa
dec
clc
jne
push
adc
sahf
or
xchg
sub
stc
lods
mov
pop
sub
pop
clc
pop
subl
fs
mov
lds
mov
push
push
push
jp
les
mov
or
lods
mov
inc
arpl
fcompl
jmp
pop
movsl
iret
cmp
test
xchg
outsb
xor
pop
lods
push
sbb
pop
addr16
xchg
pop
das
push
and
or
repnz
aam
cli
inc
adc
push
jo
push
outsb
rol
adc
mov
mov
popf
jnp
mov
xchg
nop
insb
cmpsl
ret
sarl
bound
xor
cld
inc
fsubl
scas
and
ret
mov
scas
push
adc
pop
jo
pop
cmp
mov
rolb
pop
sbb
jno
pop
mov
dec
out
mov
stos
push
out
cmp
and
dec
cmc
adc
sub
push
lock
pusha
inc
cmc
push
cli
push
jp
xchg
pop
mov
adc
adc
pop
jne
sarb
pop
lcall
mov
imul
aaa
cld
xchg
mov
jnp
arpl
sub
out
cli
xor
jl
push
push
nop
imul
scas
dec
or
mov
imul
arpl
mov
ficoms
pop
std
rorb
xor
jge
ret
outsb
sbb
mov
pop
push
dec
and
fldl
out
cmp
sub
sub
aaa
add
adc
dec
outsl
stos
mov
loop
xchg
push
and
std
sti
shl
or
mov
xor
insl
jge
scas
out
stos
enter
addr16
mov
lods
jmp
sbb
sahf
push
sub
je
push
test
add
xor
pop
in
mov
jne
sub
add
and
movsb
mov
adcb
mov
notb
insl
or
xchg
insl
das
sbb
outsb
in
mov
dec
decb
shlb
pop
or
xor
cmp
ja
or
jae
xor
test
sbb
loope
and
push
dec
test
in
and
gs
inc
sbb
cli
jns
xchg
mov
lret
nop
fbstp
dec
repz
inc
sbbl
xchg
mov
push
adc
cltd
dec
or
cmpsl
xor
mov
enter
sub
inc
and
movsb
xor
sbb
subb
xchg
sub
mov
push
lds
push
loope
das
mov
adc
push
mov
xor
xchg
inc
in
fnsave
mov
test
add
mov
jp
daa
mov
inc
sti
push
xor
adc
and
mov
jae
jle
pop
xor
dec
jae
sbb
pop
pop
outsb
js
fbstp
fdivs
test
mov
shl
out
sub
rcrb
mov
inc
pop
shrb
js
fwait
mov
sar
fstpl
push
movsl
sbb
add
mov
test
dec
sbbb
inc
add
in
imul
or
dec
mov
mov
mov
pop
jae
notl
rcrb
ja
cltd
and
and
lcall
mov
add
mov
dec
cmp
fcomi
jl
mov
mov
mov
leave
pop
xor
or
adc
push
je
or
scas
lods
adc
xchg
inc
bound
mov
cmpl
int3
xchg
ret
xchg
xor
cmp
aad
into
std
lods
sti
jne
jbe
inc
sbb
stos
lret
mov
xor
xor
inc
lcall
es
push
dec
jns
cld
das
out
jle
cwtl
fucomip
lret
mov
adc
add
dec
jmp
sbb
test
adc
push
pop
out
lds
in
xchg
jnp
enter
repz
or
sub
aaa
add
jb
mov
sahf
pop
stc
mov
push
and
adc
xor
shll
cmp
test
xchg
inc
pop
pop
jl
jb
into
mov
add
mov
test
jns
adc
enter
add
adc
and
sbb
xchg
repz
jo
add
push
repnz
nop
add
cmpsl
pop
icebp
add
or
and
movsb
cmp
js
sahf
shrl
jp
mov
add
sub
or
push
jbe
das
gs
cltd
jnp
fbstp
fs
scas
out
mov
pop
rcrb
mov
mov
and
iret
jae
gs
xchg
pushf
out
das
inc
std
or
push
test
in
jmp
inc
push
adc
inc
fisubrl
pop
outsb
add
testb
jp
arpl
addr16
pop
lret
bound
out
jb
xchg
mov
cmp
stos
push
les
pop
loop
jnp
bound
repnz
push
ds
add
divl
in
push
lds
sub
imull
pop
fwait
jns
cld
sub
scas
inc
inc
mov
int3
lret
add
scas
dec
mov
push
ss
dec
mov
xchg
leave
vpcmpgtb
xor
insl
fnstenv
add
in
insb
inc
mov
push
adc
xchg
mov
xor
enter
push
inc
mov
iret
test
stc
or
or
pop
push
dec
pop
or
fildl
push
xchg
insb
xor
pop
fwait
popa
clc
int3
ds
inc
lahf
sub
fwait
sti
cld
or
mov
in
jno
cs
insl
cmp
hlt
mov
out
outsl
popf
pop
xchg
pop
mov
ds
jae
jle
push
sbb
push
xchg
xchg
movsl
sub
movsb
clc
push
fdivl
dec
sbb
lods
inc
inc
das
xor
mov
pop
insl
sbb
enter
shl
nop
in
lods
or
xchg
aad
ret
add
xor
je
cmp
stc
js
in
xor
out
js
es
add
inc
stos
in
sbb
test
fwait
movsb
mov
inc
or
jl
mov
or
out
xor
xchg
xchg
mov
mov
jae
shrb
out
mov
dec
cmp
stos
les
jne
add
repnz
jg
loop
push
sub
sahf
gs
data16
mov
adc
outsl
in
std
push
or
push
jb
inc
cld
mov
jb
inc
sub
mov
xor
mov
cwtl
push
mov
shrl
lds
imul
insl
xlat
xchg
mov
iret
mov
sbb
push
inc
adc
dec
mov
add
sahf
fadds
popf
or
and
ret
mov
jae
popa
adc
mov
scas
xchg
adc
in
mov
mov
orb
popf
jns
shlb
sub
loop
int3
arpl
add
jne
rorb
fcompl
mov
cli
in
scas
ss
xchg
sbb
inc
cld
or
push
jmp
fdivs
lock
push
pop
mov
clc
jge
sub
push
pushf
dec
loopne
mov
iret
notb
push
sbb
mov
out
shll
or
enter
mov
sarl
js
test
popa
cmpsl
xchg
sbb
jmp
pop
lock
mov
lcall
and
jl
jle
test
inc
pushf
int
xchg
sbb
inc
push
fildll
xchg
fwait
or
imul
mov
adc
out
fldenv
mov
loope
adc
jl
rcrb
iret
aaa
pop
push
and
in
aaa
sti
arpl
mov
fidivrs
push
pop
jp
xor
iret
xor
dec
popa
push
clc
subb
adc
enter
arpl
out
cmpsb
cs
jae
icebp
inc
mov
sbb
je
mov
dec
sti
stos
mov
fwait
cmp
int
into
gs
mov
fsubrp
dec
cmpsl
xchg
test
or
pushf
cwtl
sti
loope
pop
push
sti
stos
shl
shrl
adc
xchg
ret
clc
push
into
push
mov
leave
aaa
dec
sti
es
fst
adc
arpl
sbb
add
xchg
or
cmp
cmp
shr
test
inc
pusha
xlat
xchg
inc
gs
ja
ss
ret
jnp
cmpsb
cmpl
mov
xchg
dec
push
push
movsl
insb
push
imul
in
add
rcrl
sbb
in
jnp
sbb
push
dec
mov
inc
out
jno
sbb
inc
mov
jo
mov
pop
scas
inc
add
dec
data16
xchg
lahf
in
cmpsb
sub
or
imul
loope
pop
inc
pop
or
stos
lahf
jns
mov
clc
inc
cmpsb
mov
sahf
insb
in
mov
and
and
into
cmpl
stos
push
or
out
push
aaa
loop
add
push
pop
dec
in
dec
in
push
aad
insb
js
cmc
es
lock
fstp
imul
mov
rep
mov
xor
mov
insl
jp
add
aaa
or
loope
insl
loope
fisubs
call
imul
int3
mov
jae
loopne
imul
fdivrl
dec
pusha
push
adc
repz
fistpl
fsubs
aaa
test
rcll
sbb
jnp
daa
mov
dec
hlt
inc
sbb
xchg
movsb
orb
pop
imul
cmpsl
out
pop
neg
mov
rorl
mov
sub
jbe
imul
adc
adc
cmp
clc
sbb
jp
xchg
or
movsb
mov
mov
ss
lods
movb
inc
sub
mov
sarb
iret
and
sub
mov
pop
shr
jge
jae
fbstp
int3
fldt
pusha
lret
lret
mov
push
imul
ficoml
icebp
mov
add
push
pop
or
das
dec
xor
loop
xchg
xor
mov
inc
ret
ljmp
mov
mov
xchg
inc
inc
dec
cltd
xchg
pop
add
pop
cmp
mov
xchg
sub
jecxz
dec
jmp
test
mov
je
pop
and
ds
lret
dec
fstpl
and
adc
cmp
cmpsl
cld
cmp
mov
jmp
or
cmp
xchg
jle
xchg
or
pushf
fidivs
shrl
mov
pusha
jl
or
or
cli
cwtl
notl
lret
les
sbb
xchg
in
mov
jne
xor
leave
popa
push
insb
xchg
jmp
xor
and
es
mov
push
inc
mov
nop
jl
aas
push
out
bound
xchg
and
js
aas
dec
cmc
dec
inc
pop
mov
push
stos
sbb
sbb
and
adc
cmpsb
push
add
push
loop
es
add
shrl
sub
jo
fwait
push
pop
jne
push
push
es
mov
pusha
mov
test
push
xor
ret
icebp
cmp
outsb
lock
adc
pop
jae
and
loopne
mov
repnz
out
mov
mov
test
inc
push
js
and
lea
pusha
jns
stos
and
icebp
mov
pop
pop
push
push
xchg
pop
mov
sub
mov
clc
sbb
xchg
das
incl
ljmp
inc
fs
popl
or
es
xor
test
mov
mov
pop
mov
fbld
mov
int3
push
inc
push
ss
icebp
pop
fwait
xchg
loop
pop
fwait
in
sub
push
jmp
aam
xlat
mov
pop
loope
rorl
lods
jns,pt
sbb
es
dec
fwait
ljmp
pushf
xor
dec
or
lahf
gs
dec
fs
xchg
mov
or
mov
fnsave
enter
scas
sbb
js
sub
dec
fdiv
mov
jmp
pop
out
and
fcomi
add
inc
stos
xor
enter
ret
int3
xchg
sub
xchg
adc
out
sbb
sarl
nop
pushf
push
loopne
nop
push
xor
sbb
ret
dec
loop
xchg
pop
xchg
mov
xor
sbb
gs
and
test
loopne
cmpsb
adc
fsubs
inc
xor
mov
fidivrs
roll
out
imul
pop
movsl
sbb
jge
bound
push
fmul
fsts
les
jle
adc
xlat
lea
scas
gs
dec
loopne
mov
cmp
mov
jecxz
sbb
scas
aaa
into
loopne
add
push
inc
shll
mov
int
add
enter
inc
insb
lahf
xor
lea
mov
pop
ss
cmpsl
xchg
ficoms
cmpsb
stc
mov
call
bound
in
lods
pop
cltd
mov
or
lret
into
inc
out
sbb
cwtl
push
je
decb
in
sub
mov
je
ret
xchg
cld
and
icebp
lods
inc
mov
sbb
sbb
stos
clc
mov
mov
test
pop
xorb
sub
imul
fcoms
out
push
cld
dec
cmc
push
xor
call
cmp
mov
fs
cmpsl
xor
ss
jge
out
mov
jb
push
mov
xor
dec
mov
adcb
pop
rcrl
negb
xor
push
mov
scas
fbld
jl
je
cmp
movsb
mov
or
fs
sub
aaa
lea
ret
fwait
jns
adc
mov
bound
lcall
xor
mov
and
in
cmp
lods
mov
stos
inc
push
ret
cmp
pusha
pop
fsubs
xchg
subb
loopne
aam
sti
or
fstpt
cs
jnp
mov
movsb
add
dec
dec
cmp
mov
test
xchg
mov
dec
sub
rorl
addl
or
pop
pop
sbb
mov
testl
mov
jp
call
jmp
repnz
cltd
test
xor
sub
inc
iret
popf
es
or
aad
mov
cmp
in
inc
add
mov
mov
popa
ss
inc
lret
cmp
xchg
pop
nop
mov
wrmsr
stc
mov
sbb
mov
push
ljmp
mov
sbb
shlb
gs
icebp
push
xchg
out
mov
aam
aas
ret
cmp
or
and
or
mov
mov
sub
cmp
loop
or
cmp
xchg
addr16
shl
mov
out
adcl
jmp
mov
push
sub
pop
fisttps
loope
pop
mov
xchg
adc
fwait
push
xchg
shr
jg
aad
dec
insl
pop
out
iret
xchg
push
call
mov
outsl
cld
push
mov
das
subl
mov
lds
sarb
cmp
stos
jbe
jp
jge
iret
clc
test
lods
daa
test
cltd
sub
adc
and
stc
mov
sti
jo
sbb
add
insl
xchg
mov
mov
nop
daa
xor
sub
and
inc
leave
aaa
enter
fstl
cmp
adc
out
push
fbld
inc
adc
push
sbb
ret
shrb
mov
adc
xchg
test
push
into
jge
xchg
loope
push
adc
dec
mov
popf
sub
scas
mov
fs
jp
pusha
enter
dec
enter
sarb
inc
add
xlat
gs
fwait
popf
sub
bound
movsb
xchg
in
jmp
xor
cmpsl
jo
inc
jg
enter
int3
enter
mov
adc
ss
jbe
cli
mov
clc
jle
push
push
aam
insl
call
ja
dec
or
popl
pop
mov
iret
loop
mov
je
outsb
out
mov
gs
jg
int3
daa
push
and
mov
push
popf
inc
ds
xchg
loop,pn
mov
ret
xor
rorb
jnp
int
loopne
scas
sti
pop
lds
and
or
or
mov
popf
adc
stc
mov
dec
mov
aas
mov
and
jae
jle
pop
jno,pn
add
cmpsb
dec
push
jno
les
jns
insl
mov
mov
int3
or
andl
mov
ret
popa
leave
or
mov
aas
mov
shlb
fs
daa
sbb
lods
jmp
fadds
clc
jno
push
in
cltd
je
add
xlat
sbb
dec
cmpsl
icebp
cmpsl
inc
lds
inc
test
jnp
loop
lds
push
add
and
dec
imulb
jle
adc
pop
mov
push
push
sub
xlat
pusha
testl
loopne
push
xchg
adc
rcr
repnz
arpl
and
scas
push
mull
imul
std
aam
mov
sarl
iret
arpl
adc
aas
je
mov
mov
repnz
sub
pop
adc
mov
cmp
ret
mov
cmp
jge
dec
and
sahf
fistl
dec
popf
imul
scas
mov
adc
cli
loope
push
sbb
repnz
dec
lcall
jle
call
push
sbb
push
jns
out
sti
pop
jle
xchg
lahf
sahf
ss
lret
xor
loope
sub
mov
es
popa
out
jno
fldl
sub
dec
imulb
ffree
mov
inc
daa
rol
stos
outsb
enter
pusha
sub
sbb
shl
add
mov
or
fs
lea
loopne
add
in
lret
dec
xchg
movsb
cmpsl
push
mov
js
into
push
sub
cmp
jae
jno
adc
dec
add
repz
cmp
jmp
repz
or
es
sarl
or
insb
add
and
jmp
outsb
inc
testb
sahf
xchg
sbb
mov
push
jbe
jae
in
cmc
jle
mov
push
push
sub
push
mov
rcrl
lret
cmpb
popa
mov
jnp
pop
lods
fsts
out
jmp
pop
mov
jo
sub
out
push
xor
mov
pusha
mov
add
nop
push
call
fsubrl
adc
ljmp
ds
lcall
in
dec
push
add
inc
mov
xlat
sub
push
lcall
dec
mov
cmp
push
mov
andb
cmp
cmp
int
fistpll
jcxz
loopne
pop
jecxz
adc
fadds
je
pop
add
sub
rcl
div
inc
cs
in
mov
popa
mov
inc
or
cmpsl
sbb
and
call
js
arpl
push
or
ret
ficomps
pop
mov
aas
mov
mov
push
out
cmp
in
daa
add
fs
mov
inc
ret
es
and
nop
fldenv
lahf
pop
pop
int
jnp
jo
mov
mull
adc
stos
shll
inc
adc
addr16
mov
aam
or
pop
push
out
mov
lock
jbe
lret
insb
testl
add
mov
fcomps
sbb
aam
xlat
shrb
dec
test
addr16
fisubs
loope
cltd
fwait
or
mov
inc
cmp
xor
scas
jmp
lcall
icebp
movsb
fstl
ret
ja
out
mov
pop
mov
fldcw
cmp
pushf
aad
xchg
movsb
push
hlt
test
xchg
push
out
mov
aaa
ljmp
dec
lock
dec
jo
fstpt
push
mov
leave
flds
mov
int
int
sub
mov
ds
sti
push
sarl
xchg
push
pop
xor
mov
mov
lock
fildl
enter
pop
data16
das
test
pusha
loope
popa
in
adc
mov
sub
cmp
aam
popa
sub
xor
inc
inc
jge
icebp
loop
cmp
push
mov
inc
fldcw
imul
sub
out
adc
out
sarb
enter
add
cmc
fsubrs
mov
clc
or
negb
xor
jle
sub
int
test
mov
sub
sbb
mov
sbb
sbb
and
pusha
sbb
dec
movb
in
fs
inc
adc
jne
stc
sarl
jno
cltd
adc
mov
adcl
dec
testl
and
cli
data16
jle
sbb
or
in
and
mov
mov
jo
cli
lock
stc
scas
push
sahf
enter
mov
or
imulb
mov
push
xor
sbb
xor
push
fadds
movsb
mov
loop
and
jmp
mov
out
mov
bnd
cmp
test
cmp
and
sti
xchg
inc
ljmp
lds
repnz
or
fldcw
pusha
cmpb
gs
fcomps
or
lss
data16
push
hlt
dec
xor
pop
pop
out
and
sub
dec
pop
or
mov
arpl
xorl
push
push
in
test
pop
daa
pop
imul
dec
jb
jno
cmpsb
cld
or
or
push
push
lahf
push
sub
xor
cmp
cmp
dec
push
dec
dec
lods
sti
push
ljmp
jmp
jbe
xor
add
xchg
aas
lods
test
jne
cli
jl
sub
aam
adc
out
lods
dec
pop
in
jno
xchg
loope
cmpsl
pop
mov
sbb
ds
jle
or
mov
outsl
outsb
sti
cmc
and
gs
pop
add
mov
fwait
aaa
clc
imul
mov
mov
mov
enter
js
ja
dec
add
mov
pop
jmp
mov
mov
jno
fdivrs
and
popf
stos
fs
push
jmp
pop
mov
or
xor
lcall
test
repz
or
aas
cs
sub
in
sub
test
dec
push
xchg
xchg
cmpsl
cmp
push
pop
xor
cmpb
sbb
inc
sub
std
or
aaa
adc
bound
hlt
jae
inc
jb
out
adc
sahf
nop
test
jl
xor
inc
sub
or
jg
inc
and
push
jo
pop
xor
adc
test
or
cmp
mov
lahf
xchg
sbb
test
xor
popf
push
pop
and
push
sbb
loopne
es
push
dec
dec
mov
sub
into
jb
cltd
or
cmp
hlt
jns
mov
inc
mov
sahf
insb
imul
rcll
fdivrs
lds
sbb
vpunpcklwd
xor
mov
ret
dec
mov
mov
cmp
ficoms
or
add
sbb
ds
cmpsb
in
fbld
outsb
icebp
or
mov
add
sbb
inc
inc
lret
jmp
and
mov
cwtl
das
pop
in
scas
mov
mov
ror
jl
sub
inc
stos
jecxz
es
sub
xchg
mov
dec
scas
pop
in
xor
mov
movsl
cmp
jge
push
sahf
xor
mov
incb
cltd
pushf
and
dec
inc
mov
xchg
fimull
out
outsb
repz
mulb
movsl
add
adc
repnz
test
mov
cmpxchg
jns
dec
faddl
adc
testb
fstl
jl
or
insl
sub
adc
mov
js
jno
lock
ret
mov
orb
sahf
push
mov
inc
mov
pop
pushf
push
mov
jnp
push
scas
fcomps
lds
cmp
in
dec
and
dec
pop
sub
push
xchg
mov
sahf
js
daa
xor
in
outsb
push
xor
shlb
mov
xor
or
xchg
mov
pop
movb
sub
aam
mov
out
movsl
pop
out
fcos
xchg
lret
mov
dec
mov
ss
or
fidivs
pushf
mov
cmpsl
lcall
imulb
aas
negl
xchg
lret
cld
mov
fsts
stos
jmp
std
pop
push
cmp
push
add
mov
jnp
mov
inc
ret
shlb
gs
pop
pop
adcb
gs
xchg
cmp
scas
push
cmp
sub
pop
lret
xlat
adc
xchg
xor
or
cmp
aas
addr16
push
lods
ret
xchg
iret
xor
lods
dec
push
inc
int
arpl
push
jmp
sti
sub
cmp
repz
adc
ja
jp
ja
dec
pop
sti
mov
fucomip
add
and
pop
mov
cmp
enter
test
xor
sub
stos
pop
dec
xchg
sub
xor
cwtl
mov
fdivp
rcl
pop
mov
test
icebp
xor
dec
or
std
test
popf
cmpsb
push
fnsetpm(287
andl
lds
add
hlt
rorl
adc
lods
xor
hlt
adc
outsl
and
arpl
incl
xor
in
sub
mov
loope
xlat
mov
popa
dec
push
addr16
sti
push
insb
cwtl
sub
and
and
pop
movsb
or
sbb
push
int
cwtl
in
aaa
inc
push
aas
mov
roll
out
and
hlt
xchg
out
setg
cmp
cwtl
inc
fmulp
dec
ret
insl
out
adc
ret
inc
clc
std
rcrb
dec
dec
out
pop
pop
in
cmc
repz
pushl
outsl
daa
imul
pop
sub
sbb
sub
mov
jle
xor
xchg
dec
adcl
fs
mov
mov
mov
shl
jge
rol
neg
jge
mulb
mov
cli
clc
aam
sub
les
sahf
repnz
jge
test
jmp
stc
dec
add
xlat
aad
test
jmp
mov
sar
iret
cmp
dec
lods
pop
mov
xor
jns
jp
dec
dec
mov
push
mov
cmp
sbb
hlt
fstpt
lret
fmulp
mov
bound
lret
ss
fmul
adcl
cmp
loope
mov
mov
daa
cmp
enter
ss
cltd
xlat
add
cli
xorb
daa
sbb
sti
cmp
xchg
push
inc
cmp
mov
and
sar
dec
out
mov
mov
shll
in
pop
fdivl
mov
pop
mov
data16
mov
mov
xchg
ret
jbe
fsubrs
jl
sbb
je
mov
mov
shlb
push
add
loop
stos
lcall
xchg
and
ret
repz
sub
movsb
sbb
outsb
aaa
outsl
ss
sbb
aaa
cltd
scas
jb
shll
sub
mov
rorb
jge
or
jnp
push
je
shr
in
mov
fcoms
sub
aas
icebp
add
stos
push
in
lods
jmp
or
icebp
jns
into
mov
rclb
adc
adc
arpl
push
fildl
lcall
fdivl
mov
or
lcall
in
jp
enter
pusha
lds
cld
cmp
mov
xchg
fldenv
mov
sbb
and
and
pushf
and
mov
stos
shlb
fdivs
call
or
jmp
out
stos
xchg
in
repz
xor
push
into
mov
push
dec
in
push
pop
incl
push
cmp
popf
pop
aaa
ret
mov
test
cmp
inc
pop
fwait
xchg
in
inc
in
fistpl
inc
call
mov
lods
insl
mov
je
std
loopne
arpl
movsl
in
test
xchg
mov
popf
popf
push
jo
shlb
jge
cmpsl
out
xor
pop
add
add
rclb
jae
hlt
movsb
repnz
fidivs
sub
push
pushf
and
inc
sub
xor
push
int
sbb
aad
iret
cmp
in
sti
push
jnp
jo
jae
cltd
jmp
into
mov
pop
fcoms
jle
adc
aad
insl
and
in
lcall
or
mov
sbb
dec
sbb
inc
fisubs
push
mov
in
insb
je
ja
fsts
cmp
xchg
call
or
inc
call
pop
mov
aam
xchg
push
ret
pop
stos
xor
into
jne
xchg
scas
push
or
xor
movsl
adc
repnz
jno
xorb
sub
or
push
adc
inc
xchg
jle
pop
test
adc
sub
pop
cwtl
gs
adc
xor
lea
mov
movsl
out
adc
sbb
cld
fs
cwtl
ljmp
inc
loopne
or
inc
mov
push
mov
rcll
pop
push
into
add
nop
out
mov
push
addr16
inc
fs
adc
rolb
adcl
xor
jmp
mov
adc
mov
mov
cwtl
je
mov
cmp
add
pop
lcall
cli
inc
xchg
scas
jno
and
scas
clc
mov
xchg
sbb
dec
mov
loopne
loope
xchg
dec
mov
data16
inc
lock
xlat
dec
xor
cmp
push
lods
mov
shlb
jno
ret
cmpsb
cmp
scas
push
fbstp
xor
test
jo
mov
ret
cltd
or
clc
dec
sub
pop
mov
add
nop
pushw
ss
sub
push
sub
add
iret
int
cltd
ja
imul
xchg
stc
push
dec
lds
mov
adc
jno
inc
adc
jb
inc
es
adc
mov
sahf
jae
jmp
adc
stc
enter
push
jae
or
inc
idivl
loopne
rcrb
mov
inc
push
mov
push
out
or
add
pop
jo
inc
lret
xor
mov
pop
stos
stc
cmp
pushf
add
leave
scas
ss
push
dec
push
cmp
shrb
and
pop
mov
int3
add
push
adc
mov
mov
xchg
addr16
je
fnstsw
cmp
loop
or
movsl
mov
pop
cmp
test
push
cli
or
and
add
shlb
leave
orb
lahf
mov
shrl
jp
dec
ror
xchg
xchg
mov
inc
inc
bound
into
mov
repnz
dec
sbb
or
sbb
pushf
mov
loope
fdivrs
int
adc
in
xlat
imul
js
es
cmp
and
fs
rcrl
inc
test
cmp
lcall
xchg
loopne
pop
push
jecxz
jns
jp
xchg
add
fwait
leave
je
fisttpl
test
in
test
lcall
xchg
ja
inc
into
js
cmc
mov
adc
cmpsl
and
cmp
mov
pop
xor
dec
out
xor
out
out
mov
dec
insl
clc
inc
adc
hlt
inc
pop
clc
push
or
in
pop
ja
mov
mov
pusha
lea
hlt
outsl
icebp
lds
jg
sbb
stos
dec
adc
or
addr16
mov
ja
leave
scas
mov
mov
sbb
fwait
rcll
std
xchg
ret
sbb
and
lds
into
aaa
lret
sbbb
scas
fmul
mov
mov
sbb
mov
roll
arpl
aad
mov
cs
cmpsl
rorb
adc
adc
loop
push
xor
cmp
and
add
fisubs
sarb
dec
add
dec
push
ss
mov
push
cmpsb
in
stos
je
sbb
xchg
xor
mov
lods
jp
add
iret
jle
out
addr16
daa
add
out
test
adcl
mov
movsl
sti
inc
out
pop
xchg
bound
inc
fsubrp
loop
or
push
jne
insl
pop
sahf
popf
mov
or
mov
or
movups
pushf
sti
jbe
jbe
pop
pop
jbe
and
mov
in
iret
fucomi
xchg
sbbb
pop
out
lock
adc
repz
imul
test
in
lret
xlat
mov
jns
dec
push
sbb
xchg
insl
cmp
jp
movsb
push
add
dec
or
gs
mov
mov
test
push
leave
lea
repz
out
cwtl
sbb
movsb
ljmp
cltd
mov
shrb
xchg
mov
jns
out
inc
ficompl
fcoms
push
push
cmp
rcrl
push
xor
xchg
int3
mov
push
ss
pop
dec
test
inc
iret
sbb
or
cli
in
jp
or
sub
mov
dec
and
add
in
adc
dec
xlat
mov
adc
jp
aad
sbb
fs
and
std
pop
xor
loop
push
pop
mov
sub
sbb
fnstsw
dec
add
xlat
adc
sub
ds
push
ja
mov
addr16
stos
aad
imulb
pop
imul
enter
sub
in
in
sahf
jecxz
sbb
jae
jecxz
fadds
sbb
fs
out
sbb
cmp
push
movsl
xchg
add
push
dec
femms
jge
loope
ss
mov
xlat
xchg
test
jno
insb
mov
push
fucom
dec
jle
push
pusha
iret
daa
outsl
sarl
add
xchg
lea
mov
popf
dec
pop
aam
jnp
or
dec
mov
pop
sbb
stos
and
sub
out
ret
jns
repz
xor
addr16
stos
mov
xchg
outsl
ret
and
cmp
sbb
push
mov
in
and
adc
ret
mov
sbb
push
jae
inc
mov
mov
sbb
jno
and
into
icebp
mov
xor
inc
jne
outsb
jle
pop
loop
adc
je
jle
notb
xor
xchg
ss
mov
popf
shlb
popa
mov
sub
je
pushf
scas
sbb
push
das
js
cltd
aam
mov
ret
sbb
mov
xor
xor
xchg
sub
push
mov
mov
adc
std
js
cmp
leave
and
xor
cmpsb
stos
or
jp
stc
aas
xorl
fwait
and
xchg
and
cwtl
or
lahf
xchg
imul
repnz
sub
inc
pop
nop
pop
mov
out
mov
mov
pop
mov
into
mov
clc
jge
adc
pushf
jg
mov
mov
ret
mov
ret
les
test
xchg
sbb
mov
cmp
sub
dec
xchg
mov
jnp
iret
insb
ljmp
out
stos
add
sbbb
out
xchg
sub
dec
pop
mov
inc
mov
cmpsl
cmp
jmp
jb
push
mov
cmp
mov
cwtl
pop
shrb
jbe
scas
addr16
pop
and
stos
cmp
jnp
inc
push
sub
mov
cmc
cmp
sub
in
aad
jmp
addl
add
inc
push
xchg
addl
les
mov
mov
xchg
push
jnp
and
xor
fisttpl
mov
adc
xchg
pop
and
cmpsl
call
or
xchg
xchg
xchg
sbb
pop
insl
inc
outsb
lds
sub
shlb
add
or
das
mov
or
cmp
jge
dec
mov
notb
rcrl
aas
mov
sub
test
mov
stos
inc
dec
push
popf
bound
sub
enter
cmpsl
divl
movsl
je
in
loop
or
sbb
push
inc
mov
xlat
jbe
clc
and
es
jne
mov
addr16
inc
fildl
or
out
lods
jmp
xchg
popf
mov
mov
divl
xchg
mov
leave
loope
mov
dec
xor
sbb
fdivrs
cmp
mov
jbe
call
xlat
fldl2t
mov
jb
xchg
push
mov
xchg
sahf
daa
data16
mov
std
xchg
adc
cmp
push
push
jmp
mov
mov
daa
orb
int3
adc
push
ret
subl
mov
sbb
imul
jo
loope
adc
add
pop
insb
dec
add
inc
mov
push
dec
cmpsl
xchg
mov
mov
mov
jl
lods
mov
stc
nop
mov
into
mov
add
adc
and
mov
pop
hlt
ret
mov
cld
xchg
mov
sub
xchg
jne
add
sbb
test
addr16
pop
jg
pop
xor
arpl
xchg
fs
jne
sub
loopne
sub
pushf
jno
push
hlt
mov
jnp
aam
jnp
sub
jnp
pop
scas
inc
sbb
add
imull
add
cltd
xor
repnz
or
test
add
test
test
jmp
idivl
gs
sub
into
fstpl
cmpsl
cmp
jno
sbb
cmp
jno
mov
es
pop
jecxz
lret
xor
push
pop
test
rcrb
pusha
jg
shlb
lods
jno,pt
cmc
ss
bndstx
add
jb
lahf
sub
dec
jge
mov
pop
jne
mov
es
dec
jmp
pop
and
out
cld
pop
popf
popf
push
repz
mov
test
pusha
mov
xchg
aas
rclb
xor
sub
mov
pop
pop
jae
sahf
imul
sbb
mov
loop
xchg
xchg
push
fmull
jmp
pusha
sbb
jne
in
test
out
fstl
lock
shld
mov
mov
inc
ficoml
push
inc
ss
cli
stc
push
xor
insb
mov
xor
int
jbe
push
sbb
test
std
dec
pusha
xor
sub
xchg
push
iret
xchg
dec
xlat
lahf
insl
xor
add
pop
dec
mov
data16
test
push
sub
dec
stc
xchg
mov
call
hlt
pop
xor
shl
jne
and
push
xchg
shlb
mov
imull
jnp
loop
sub
sahf
repz
fsubr
push
adc
jp
pop
ss
lea
push
xchg
icebp
add
pop
imulb
dec
loopne
jge
push
xchg
cmpsb
add
lock
push
xchg
jno
in
fld
lds
jnp
movsb
push
lret
test
jp
movsb
arpl
popa
fcmove
loopne
sub
lcall
sub
jne
call
xchg
lods
jbe
xchg
dec
lahf
repz
xor
xor
pusha
jecxz
push
push
adc
lea
cmp
lock
test
popf
pop
add
jne
lods
pop
pop
divb
sub
cmpsb
mov
push
fmuls
or
and
out
pop
xor
int
enter
push
movsl
shr
or
push
mov
into
pop
cmpsb
push
pusha
pop
in
fcoms
pop
push
je
mov
adc
lret
pop
inc
push
push
mov
and
and
sub
arpl
or
cli
xorl
adc
xor
lret
xchg
jmp
jg
mov
pop
cmpsb
add
sub
dec
fcmovnbe
aaa
stos
testb
jbe
aas
push
or
js
dec
call
fsubs
adcl
das
mov
or
mov
dec
xchg
xchg
aad
jns
dec
jecxz
mov
cmp
sub
mov
push
sbb
gs
sar
fadds
popf
or
scas
jae
add
aad
xchg
lret
inc
addr16
out
ret
xor
sbbb
scas
lock
cmpsl
ret
inc
xchg
clc
xchg
mov
and
daa
test
add
or
add
mov
cmp
mov
jo
jg
mov
sub
jne
hlt
dec
dec
cmpsb
repz
push
dec
ds
and
or
out
mov
dec
loope
or
rep
aas
fnstsw
mulb
scas
push
jecxz
nop
rclb
cs
mov
sbb
enter
pop
notl
or
test
push
pusha
adcl
ljmp
mov
push
and
out
cmp
pop
fcomps
js
push
mov
and
mov
adc
dec
xor
or
fcompl
dec
jno
adc
mov
and
sbb
outsl
sbb
push
mov
sbb
xor
pop
push
fwait
jle
xchg
adc
mov
dec
andb
test
mov
iret
test
fcompl
dec
adc
jbe
push
testl
push
xchg
aad
xor
sbb
fcomip
mov
leave
movsl
push
mov
mov
mov
dec
std
sbb
xchg
outsl
inc
sbb
lahf
dec
data16
mov
dec
lahf
dec
rclb
sbb
gs
xchg
fld
cmpsl
and
fsubs
mov
inc
adc
aaa
lret
scas
aam
jb
jl
sub
enter
in
mov
cmp
jg
arpl
push
ljmp
sub
pop
dec
popa
sub
out
or
je
mov
jne
xchg
shll
dec
dec
nop
in
movsb
push
aad
dec
daa
and
xchg
mov
pop
pop
cmpsb
cmp
loopne
std
js
out
push
xchg
add
aaa
stc
push
pop
cmp
xlat
pop
lea
lds
adc
push
cmpsb
inc
xchg
std
mov
divb
adc
test
and
xchg
clc
test
mov
daa
out
jecxz
push
mov
addl
or
loope
enter
repz
ret
in
test
cli
or
andl
xor
lds
out
push
fisttpll
xchg
add
pop
aad
mov
pop
movsb
xchg
movsb
pusha
cmp
aas
cs
loope
daa
jbe
popa
push
insb
xchg
xor
push
test
icebp
leave
dec
into
inc
add
adc
sbb
push
pop
sub
sub
push
out
aaa
aad
push
push
lcall
out
pop
sbb
push
push
adc
sub
dec
inc
jbe
and
stos
sub
sbb
push
rol
sub
cwtl
sub
je
mov
daa
rcrl
ret
pop
push
add
cmp
inc
mov
gs
insb
les
filds
icebp
push
lret
inc
or
insl
lds
repnz
sub
inc
push
dec
imul
pushf
mov
and
in
pmulhuw
adc
push
divb
lock
xor
test
add
lea
out
and
push
sbb
insl
mov
test
inc
jmp
pop
pushf
mov
outsl
add
shll
fwait
out
mov
fmuls
daa
mov
mov
add
push
jge
loope
insb
mov
pop
ret
je
hlt
push
xchg
imul
bound
inc
pusha
fisttpl
and
out
rcrb
sub
sar
jne
scas
arpl
push
cmp
jno
out
pop
or
mov
jl
adc
in
sbb
xlat
les
pop
fsubs
adc
and
mov
movsb
lods
adcb
jle
aas
fdivl
fsubs
dec
cs
pop
pop
dec
rorl
pusha
cli
movsl
cld
mov
stos
xorb
adc
or
pop
or
stos
mov
or
cld
push
ret
jp
inc
sub
pop
mov
test
out
daa
or
cmp
js
outsb
sti
shrl
push
repz
xor
test
xchg
lcall
push
test
test
roll
jp
mov
dec
mov
call
lea
addr16
add
out
stos
mov
xor
adc
lock
or
mov
insl
add
fsubrl
push
mov
mov
xor
jne
in
sahf
sbb
popf
xor
sbb
iret
mov
and
shll
pop
jno
repnz
cmp
test
xor
aad
or
mov
jg
dec
cmp
adc
push
cmp
fstps
test
push
push
mov
mov
cs
call
xchg
and
cli
adc
idivb
push
mov
or
xor
add
dec
mov
shlb
cld
adc
dec
mov
es
and
popf
xor
sbb
pop
shlb
test
sub
jno
and
cmp
out
dec
fcomip
adc
cld
into
pop
cmp
or
sbb
andb
sbb
negb
or
arpl
inc
cmc
pop
in
out
jg
xchg
ret
mov
aam
gs
lret
imul
xor
xchg
sbb
xchg
push
sub
stos
xchg
dec
lods
movsb
rcl
jnp
fsubl
into
push
aad
stos
mov
in
test
push
or
dec
leave
in
cmp
shrl
inc
add
mov
mov
xchg
pop
jnp
xchg
ret
shlb
push
das
push
popa
jo
stos
mov
cmpsb
insl
sub
insb
xor
popf
sbbb
clc
ja
sub
out
in
xchg
imul
xor
push
mov
inc
subl
xor
jg
loop
jae
ret
cmp
imul
mov
loop
push
sub
stos
cmp
adc
popf
inc
dec
and
mov
pusha
cs
cmp
fsubl
xor
fdivs
or
cmp
es
lahf
dec
in
in
mov
add
fistpl
dec
jmp
or
fstpl
icebp
mov
pop
orps
fidivs
cltd
xor
inc
mov
stos
out
dec
dec
lods
inc
sbb
lret
aas
js
jno
dec
andb
push
jmp
add
dec
gs
mov
jbe
ficompl
loop
cld
sub
sub
call
dec
xor
into
es
loopne
mov
pop
jnp
call
sbb
push
mov
sub
pop
jbe
xchg
movsl
jp
mov
pop
loopne
or
add
cmp
imul
hlt
call
aam
inc
cmp
xlat
andb
mov
fcomip
xchg
aaa
lods
notl
xor
xlat
push
pop
lock
cltd
icebp
pop
xchg
pop
mov
mov
aas
ret
orb
lret
push
mov
insl
test
jae
mov
push
in
nop
daa
xor
mov
lret
jmp
dec
lahf
cwtl
ret
rorl
xchg
or
cmp
mov
arpl
shll
xchg
mov
push
jnp
mov
push
push
in
xchg
xor
imul
xor
loopne
add
mov
lret
nop
daa
shl
xchg
js
scas
cmpsb
addr16
add
cltd
pop
idivb
mov
mov
jge
lea
cmpsb
xchg
push
rol
test
mov
push
dec
xor
mov
pop
testb
add
aaa
cld
stos
cwtl
out
inc
sbb
dec
and
xchg
pop
rolb
lds
fs
xchg
add
push
push
mov
cmp
scas
mov
jno
or
cmc
int3
mov
mov
into
das
jp
inc
test
mov
lahf
bound
sbb
into
jnp
mov
loop
mov
mov
push
hlt
stos
jns
add
into
fs
and
or
adc
into
cmp
pop
add
popa
clc
sub
xchg
inc
jg
or
cmpsl
lods
xchg
add
hlt
lea
mov
pop
cmp
xchg
mov
pop
fbld
stos
jo
iret
and
mov
je
and
push
mov
fldcw
xchg
sub
or
dec
icebp
fistpll
inc
sub
dec
leave
pusha
sbbb
or
imul
pop
out
jmp
mov
adc
push
out
inc
js
fnstcw
lea
in
das
test
pop
mov
pushf
xchg
sub
jecxz
mov
add
dec
xor
sbb
jae
xor
add
mov
add
hlt
mov
push
adc
mov
lahf
pop
nop
mov
mov
insl
or
xor
dec
rclb
bound
clc
iret
push
pop
ss
mov
scas
fcmovb
add
je
popa
mov
xchg
mov
push
lea
xchg
stos
push
enter
sbb
test
or
pop
pushf
or
divb
ffreep
pop
or
in
adc
or
mov
and
or
and
in
faddl
jp
scas
aas
push
lock
mov
push
mov
or
into
loope
pop
jmp
xlat
xor
xchg
jecxz
xchg
fsubrl
shrb
ljmp
insb
sub
pop
mov
dec
sub
cwtl
add
inc
mov
mov
and
enter
and
pop
out
dec
push
mov
or
mov
fisttpl
imul
add
xrelease
cmpsl
sbb
jbe
pop
imul
ret
dec
dec
mov
adc
pop
aas
stos
and
loope
mov
int
sub
lods
jmp
repnz
add
loop
fimull
push
lods
push
ds
insb
push
or
les
jne
xchg
sbb
cmp
mov
adc
add
loope
dec
in
lar
aaa
in
or
imul
add
daa
mov
and
jno
ret
inc
out
inc
mov
fwait
test
cmpsl
aas
mov
stos
inc
and
pop
mov
lret
sti
js
jge
mov
jle
mov
sbb
call
imul
lcall
cwtl
cld
ret
imul
cltd
mov
inc
mov
mov
xchg
and
inc
push
mov
cmpsb
lds
shlb
mov
xlat
xor
outsl
arpl
test
mov
bound
test
int3
or
aas
fsubrl
mov
aad
in
lods
push
sub
iret
jae
in
div
mov
push
adc
cmc
mov
add
cld
cmp
sahf
mov
mov
fs
ret
inc
xlat
clc
sub
outsl
setne
stc
xchg
add
add
sarb
icebp
mov
ret
incb
inc
dec
push
js
ret
xchg
mov
cmp
mov
imulb
and
lds
jecxz
push
push
in
dec
jg
orb
mov
mov
lds
jecxz
movsb
repnz
outsb
adc
push
dec
test
jge
js
sbb
dec
cmp
shl
sub
or
stos
xchg
incl
sbb
jg
mov
push
and
dec
inc
sbb
push
sub
pop
outsb
pop
cmp
inc
dec
inc
insb
jl
pop
inc
out
aam
les
call
and
dec
loop
lods
push
pop
lahf
testl
push
mov
or
cmp
cltd
cs
pop
pop
xor
cltd
icebp
mov
push
sub
cmp
sahf
stos
cmp
into
stc
outsb
sbb
inc
mov
daa
outsl
cmpsl
lahf
jno
mov
pop
dec
push
dec
movsb
mov
push
xor
sub
pop
into
sub
mov
movsb
and
add
aas
dec
jo
mov
jl
pop
jae
popf
test
inc
orl
add
xchg
sub
fidivl
mov
jle
cmp
cltd
out
imul
cs
fwait
test
adc
lret
jmp
icebp
xor
iret
mov
or
aam
sbbl
mov
pop
inc
mov
xor
repz
ljmp
cmc
mov
and
cltd
xor
and
call
mov
stos
add
xchg
sub
movsb
cmc
lea
pop
ss
xchg
inc
jge
test
daa
and
outsl
lods
lcall
add
insb
jbe
je
add
xor
movsl
sti
xor
cld
inc
pop
test
in
mov
adc
int3
faddp
repnz
int
xor
in
int
outsb
hlt
and
push
push
mov
lods
pop
imul
lret
mov
inc
inc
xor
mov
es
xlat
pop
pop
out
clc
lahf
and
std
inc
fucomi
dec
push
cmp
push
xor
push
test
jno
leave
pushf
test
mov
sub
inc
jae
mov
push
in
pop
jb
movb
mov
sub
dec
and
or
fcoms
dec
push
push
test
cs
cmpsl
sub
fmul
pop
or
lock
jg
jns
lods
pop
in
pop
xchg
jae
mov
call
out
and
xchg
iret
call
fmull
mov
or
lret
xchg
pop
cmp
jb
push
sbb
pop
xchg
mov
in
jmp
pop
mov
pop
movsb
fidivl
or
out
and
add
mov
cli
xchg
mov
dec
sub
jns
mov
add
push
jae
inc
repz
sbb
mov
pop
jmp
xchg
xchg
sbb
pop
push
andl
inc
mov
pop
rol
cmp
sbb
adc
fs
push
or
and
ja
je
leave
sbb
iret
dec
ljmp
adc
xor
and
dec
sub
cld
xchg
lcall
mov
or
cmp
mov
fiadds
sub
cmp
cmp
lea
mov
and
sbbl
push
inc
lahf
pop
popf
pop
inc
pusha
mov
cmpsl
lret
fs
daa
mov
mull
fisubs
fsubs
push
push
stc
in
cmp
int3
arpl
jns
rclb
xchg
mov
lret
lock
dec
pop
xor
lahf
jb
cld
ja
mov
les
cmpsb
xor
push
mov
fbstp
shrb
in
daa
xlat
cmpsb
lea
dec
jbe
es
in
inc
inc
fidivl
inc
popa
stc
cmp
mov
xor
sbb
and
adc
scas
push
and
es
scas
push
adc
push
pop
cmc
inc
add
jl
xchg
inc
outsl
push
js
jecxz
mov
frstor
test
dec
jle
jle
std
jo
adc
xor
or
jmp
push
loope
mov
xor
filds
sbb
jb
iret
mov
adc
xchg
loopne
rcll
mov
scas
out
lret
shr
and
or
outsb
rorl
cmpsb
add
mov
ret
xlat
leave
stos
inc
sti
loopne
outsl
lahf
pushf
enter
shlb
test
cwtl
mov
cmpsb
das
das
push
cmp
push
insl
jne
jge
push
fs
add
std
jae
xchg
xchg
jb
xchg
nop
daa
arpl
lret
scas
cmp
loopne
adc
ja
sbb
outsl
and
sbb
test
mull
rclb
push
fidivs
dec
in
outsb
test
adc
xor
push
fwait
mov
adc
sub
add
fs
mov
mov
aaa
mov
daa
push
fs
popa
sbb
js
xchg
cmp
mov
negb
dec
push
or
xchg
imul
adc
imul
cmpsl
int
adc
dec
or
xor
std
loop
lret
icebp
psubq
shl
insb
in
adcl
cmp
mov
pop
cmp
sbb
vphsubdq
mov
mov
lret
lds
shlb
push
xchg
out
push
je
xchg
cmpsl
fists
mov
cmpsb
dec
xchg
sbb
push
popl
sbb
and
sbb
mov
jge
sti
dec
inc
daa
std
imul
xchg
stos
repnz
test
mov
test
stos
test
aas
cmp
push
mov
pop
mov
mov
mov
sbb
mov
sahf
loopne
nop
enter
jp
lret
adc
lds
xor
add
fucomi
cmpsl
psubb
jl
ficompl
shlb
jge
ljmp
faddl
mov
scas
sub
scas
ror
je
leave
mov
mov
imul
xchg
lods
test
neg
mov
push
inc
std
pop
cmp
push
dec
cmp
mov
push
inc
or
sub
sub
pusha
ja
push
gs
test
push
mov
sbb
setno
sub
fsubl
add
jg
push
push
and
scas
testb
xor
push
or
gs
adc
popa
ss
shrb
jle
dec
cli
xchg
jnp
pop
add
push
mov
loope
movups
aas
jl
cld
xchg
cltd
pop
stc
movsl
in
pusha
and
pop
sbb
fadd
mov
imul
add
mov
mov
into
xchg
clc
enter
push
push
decl
sub
jae
pop
aas
mov
mov
cmp
dec
jl
dec
scas
imul
inc
push
xchg
add
mov
push
subb
jns
pop
pusha
mov
daa
movsl
fwait
jl
and
cmp
adc
addb
cmp
cltd
or
jp
stos
xor
movsb
pop
jmp
cld
xchg
inc
and
inc
insb
jbe
out
mov
imul
out
add
and
xor
stc
push
es
jb
lahf
xlat
rorl
xorb
out
push
jo
mov
dec
in
xor
lock
sub
push
daa
mov
test
xchg
adc
imulb
ret
dec
and
bound
mov
sub
dec
dec
sbb
mov
xor
cwtl
in
jg
lret
loopne
lock
adcl
or
in
in
popa
jmp
and
cwtl
jg
mov
in
pop
pop
sbbl
push
int
xor
pop
jne
push
negl
fdivrl
sub
push
nop
sbb
mov
cmp
lods
add
add
int
add
cmp
xchg
out
add
pop
mov
or
pop
insb
mov
jae
mov
aad
dec
and
mov
cmp
scas
nop
daa
in
xor
push
or
jb
push
dec
imul
inc
int3
or
jmp
fwait
in
fwait
jl
popf
cmp
jge
ja
lahf
xor
fisttps
mov
cmp
push
xchg
xchg
in
pop
repz
clc
iret
jecxz
in
adc
mov
mov
leave
xchg
cmpsl
pop
lock
push
push
ret
add
add
fsubrp
daa
or
shll
cltd
push
sub
and
xchg
cmp
dec
loop
jae
xor
aam
dec
sbb
test
pop
into
out
lret
data16
arpl
xor
lods
inc
add
adc
dec
fwait
push
fwait
xor
inc
inc
outsb
lods
ja
rcrb
jae
dec
add
int3
test
loop
shrb
vmread
add
pushf
iret
cmpsb
dec
movl
cmp
mov
dec
cwtl
sbb
das
lret
repz
fidivrs
fdivrl
push
aam
aas
in
mov
aaa
fwait
dec
jne
mov
lds
stos
pop
into
jle
lret
insb
jne
or
data16
fstp
jbe
mov
les
test
popf
cmp
shr
sub
sbb
cmp
push
dec
lret
bound
pop
sbb
roll
sub
enter
aaa
mov
aam
rcll
in
mov
je
sub
in
mov
fsubl
mov
mov
cmpsb
mov
fwait
mov
jp
push
mov
add
cld
push
scas
and
pop
adc
adc
jbe
mov
push
push
outsb
mov
push
jb
xchg
cs
cmp
jns
sub
roll
dec
aad
jecxz
cmp
fs
dec
pop
xor
and
out
mov
pop
dec
or
aam
sbb
stos
pop
cmp
sbb
xor
icebp
inc
push
inc
js
sti
mov
divl
and
adc
push
inc
cmp
popa
int
stos
inc
in
ret
jns
daa
icebp
push
fidivrl
and
jge
mov
mov
xchg
and
imul
leave
ss
push
mov
mov
cmpsb
idivl
lock
out
add
pop
dec
ljmp
stos
and
daa
mov
dec
push
cltd
addb
repz
sbb
xchg
lahf
fisubrl
pop
add
movsl
icebp
cmp
add
push
test
inc
inc
pop
test
add
rcr
jb
incb
jecxz
stc
out
push
jo
call
test
push
sbb
jp
or
push
mov
xor
push
xchg
add
mov
sub
pop
mov
xchg
jmp
add
add
in
pop
push
cmp
mov
xchg
dec
js
lcall
dec
or
inc
arpl
xchg
orl
lds
inc
push
push
xor
ret
xor
add
push
cmp
jge
popf
fcmovu
jno
inc
sub
mov
stc
adc
fsubs
xchg
pop
out
sahf
out
sahf
inc
sbb
ffree
fstpl
jl
add
push
pushf
cmc
mov
je
sbb
mov
mov
jnp
mov
movsb
bound
push
or
and
jno
testb
xchg
mov
pop
xlat
mov
repnz
repz
mov
les
mov
jo
loop,pt
sub
sbb
mulb
pop
das
addr16
or
scas
out
frstor
test
jmp
lock
icebp
dec
aam
es
ss
imul
xor
xchg
adc
push
pop
cmp
lea
mov
hlt
sub
jb
leave
aas
push
or
inc
jbe
adcb
xor
in
je
shll
push
bound
aaa
int
pop
sysexit
repz
lret
into
out
out
cwtl
mov
push
pop
sbb
or
das
or
or
cmp
dec
add
fbstp
inc
mov
call
out
mov
inc
movb
xchg
inc
paddd
outsb
arpl
sbb
out
pop
gs
scas
js
mov
and
call
daa
cmp
cmpsl
xor
mov
in
aaa
sub
sbbb
test
jmp
test
shlb
cmp
and
ljmp
jmp
jg
pop
icebp
mov
rcll
aas
ds
mov
pushf
jp
xchg
mov
inc
sbb
fildl
cli
notb
mov
sbbl
or
mov
inc
pushf
sub
xchg
sub
sbb
and
lock
movsb
pop
xor
pop
lds
scas
push
inc
xor
mov
int
mov
push
xchg
lahf
mov
dec
jecxz
cwtl
mov
jbe
pop
imul
shrl
jo
loope
xlat
pop
sub
xchg
adc
test
sub
mov
movsl
xchg
dec
add
add
fmull
outsb
dec
es
mov
inc
or
mov
shlb
std
divb
jmp
pop
jmp
mov
in
sti
sbb
cmp
roll
push
leave
mov
jae
cmc
in
mov
aas
inc
fisubrl
add
mov
pop
mov
push
xchg
mov
pop
mov
push
jb
xchg
test
into
lea
mov
xlat
aas
sub
push
fcompl
push
jmp
mov
mov
mov
adc
pop
fdivrs
xor
dec
cmpsb
sbb
mov
out
outsl
mov
or
sbb
jg
fucom
decl
ds
jb
inc
mov
xchg
popa
mov
adc
popa
sub
sbb
lock
gs
add
dec
sahf
lock
inc
in
cmp
ret
mov
hlt
cmp
cmpsb
les
xchg
imul
xor
jmp
cmp
gs
stos
xchg
jb
insl
ja
and
inc
fmuls
add
loope
pop
and
xlat
inc
call
push
mov
sarb
in
jp
les
cld
sbb
je
lcall
popaw
inc
adc
fistl
push
popa
fidivs
daa
dec
mov
jbe
add
inc
and
cmpsl
push
mov
dec
xor
jbe
arpl
ja
xor
jle
push
pop
jle
cmp
cwtl
insb
loope
and
push
data16
in
test
xor
js
or
loopne
sub
outsl
cmpsl
mov
inc
in
mov
dec
pusha
leave
popa
imul
adc
lea
xchg
pop
mov
push
jg
test
dec
adc
out
leave
rol
hlt
cmp
stos
aam
adc
sti
shll
jnp
and
into
pop
mov
mov
and
je
sub
mov
sbbb
repz
cmp
sub
cld
and
popf
cld
mov
pushf
or
and
xlat
notb
mov
cmp
xor
out
pop
outsl
popa
test
rorb
fcmove
cmc
jl
xchg
scas
sbb
repz
xchg
dec
notl
fnstcw
lods
xchg
mov
mov
imul
shlb
stos
test
cmp
pop
xor
cmp
sub
or
ficoml
push
fwait
sbb
mov
adc
inc
icebp
stos
cmpl
and
mov
stos
push
fnsave
inc
pop
daa
sahf
push
adc
sbb
outsl
andb
xlat
inc
je
mov
mov
cs
inc
and
pop
cli
jne
cmp
xchg
mov
out
stos
mov
add
out
rcr
jg
cmpsb
cmp
fcompl
sub
mov
xchg
push
and
xor
lods
test
scas
lea
ja
cmp
dec
out
sub
jno
sahf
pop
out
sub
jne
outsb
insb
fidivrs
mov
jle
mov
jmp
fldenv
push
dec
movsb
arpl
js
bound
jnp
or
sbb
lret
add
or
jp
jge
or
sbb
mov
xchg
jne
dec
mov
sub
mov
dec
mov
jns
dec
ret
xchg
adc
loop
jnp
in
pmulhuw
scas
orb
ficompl
push
outsb
mov
jge
divl
stc
addb
ret
into
cmpsb
call
sbb
arpl
jl
or
sub
dec
cltd
adc
ficompl
in
inc
enter
fcomi
jmp
sub
inc
mov
ja
test
lock
fdivrs
jecxz
push
cmp
jp
std
sbb
outsl
sbb
lods
mov
lret
sarb
test
lcall
jns
sbb
dec
rclb
xchg
inc
xchg
cli
popa
ljmp
mov
or
xchg
and
inc
pop
mov
mov
outsb
stc
dec
daa
test
sbb
lret
or
xchg
dec
adc
xchg
stc
mov
leave
test
sbb
pusha
arpl
notb
xchg
xlat
clc
dec
jge
hlt
scas
imul
popa
dec
sub
movsl
or
test
mov
adc
roll
mov
dec
sub
xor
imul
ljmp
jp
mov
dec
fidivs
lcall
mov
xchg
mov
jbe
add
fistl
mov
inc
cwtl
fsubs
int
mov
pop
test
and
push
pop
movb
fadd
ss
je
cld
cwtl
negb
mov
xchg
and
scas
mov
mov
icebp
pushf
enter
mov
fwait
pop
scas
ret
push
push
insl
and
and
imul
push
xor
or
clc
mov
push
jge
arpl
popf
or
sub
inc
fisttpll
sarb
dec
sub
cmp
pop
cmpsl
int
sub
cs
adc
jmp
dec
loop
stos
rolb
aad
sub
push
adc
jne
add
and
mov
in
xor
pop
add
cltd
xor
xor
scas
or
mov
loopne
mov
je
mov
es
jmp
inc
mov
xchg
inc
or
mov
mov
jae
out
sub
test
adc
icebp
jno
mov
movsb
inc
cs
jle
xlat
lcall
adc
mov
cmp
scas
or
outsl
push
aad
push
adc
inc
jbe
lret
outsb
push
insb
js
and
push
imul
lock
mov
lods
inc
ret
ds
pop
mov
mov
jle
jecxz
call
lcall
incb
jle
and
ss
inc
aaa
rorl
aam
std
shr
inc
cli
sarl
dec
and
sub
lods
and
lret
gs
and
add
lock
std
or
pop
call
jo
in
mov
mov
fucompp
push
sarl
cmp
incl
popa
mov
jg
dec
aaa
push
cmpl
cmp
fwait
mov
xchg
sub
and
icebp
loopne
mov
ds
std
lods
push
mov
pusha
outsb
sub
pop
xor
cmp
dec
fimull
in
sbb
push
jns
inc
pop
loope
pop
mov
xor
pop
mov
mov
sbb
fs
push
into
xchg
ljmp
mov
xchg
jle
dec
dec
nop
je
sbb
mov
pop
xchg
lds
jle
in
fcoms
incl
push
and
inc
inc
or
ret
idivb
xchg
hlt
xchg
mov
pop
mov
or
daa
xchg
call
aas
cmp
push
shrb
popf
scas
mov
jg
scas
jne
std
and
xlat
lds
dec
push
rep
insl
jae
pop
xor
int
out
js
and
lods
icebp
xor
fs
addr16
xchg
out
lods
dec
enter
inc
mov
pop
fistl
lock
pop
dec
inc
fidivl
nop
mov
xchg
xor
dec
fisttpl
out
cmp
rcr
lcall
gs
es
nop
inc
push
loop
cltd
test
fldt
movsl
cmpsb
jp
xor
pop
into
out
jge
loopne
ret
jge
repnz
aas
pop
pusha
repz
sub
pop
out
jmp
and
ljmp
imul
and
and
cmp
aas
add
inc
push
fidivl
pop
std
cs
adc
int3
addb
adc
sbb
pop
cwtl
test
cltd
mov
adc
in
mov
lret
xlat
shlb
mov
push
sbb
imulb
mov
push
jp
inc
push
or
pop
mov
mov
ja
out
sbb
addl
ficomps
dec
push
push
bnd
imul
cmpb
push
lcall
inc
and
pop
lock
call
inc
push
shrl
jmp
sbb
cmp
pusha
inc
mov
fisubl
jbe
push
pop
das
int
adc
cmpl
mov
adc
insb
in
adc
dec
sbbb
enter
inc
xor
lods
xchg
cmp
xor
inc
aad
pushl
add
push
dec
lret
or
sti
addr16
push
rclb
fimull
clc
icebp
adc
out
dec
pop
lock
test
popa
and
dec
enter
stos
push
sub
xchg
std
insl
jmp
or
cmp
sbb
xor
shll
out
xchg
cmpb
jns
mov
xlat
std
std
xchg
das
das
lahf
pop
popa
sub
movsl
imul
repz
mov
daa
outsl
xor
shrl
stc
push
add
mov
scas
inc
in
pop
divb
xchg
mov
fwait
ljmp
outsl
cltd
xor
std
mov
fwait
push
scas
xchg
insb
mov
jp
mov
sbb
cmp
outsl
inc
inc
outsl
push
jns
sub
stos
adc
push
mov
pop
jae
or
xor
pop
out
loop
pop
sti
inc
cmp
push
sbb
adc
cmp
adc
loope
movsb
dec
pop
add
xor
sub
fs
gs
and
sbbb
cmpl
push
mov
jno
push
mov
mov
arpl
andb
or
ja
fxch
je
add
mov
popf
addr16
repnz
jae
or
push
xchg
sbb
mulb
cltd
imul
in
sbb
cltd
mov
fsubrs
dec
ficompl
cmc
aas
ds
mov
imul
andl
mov
aaa
mov
aaa
fstps
test
mov
mov
cmp
pop
lcall
xor
arpl
xlat
push
pop
dec
lods
scas
pop
push
lea
xchg
sbb
dec
or
aam
outsl
rep
sbbl
into
mov
and
sbb
fistpll
fdecstp
cmp
stos
ret
les
int3
cltd
push
mov
xchg
adcb
add
or
lea
mov
pop
stos
stos
xchg
sub
shrl
add
push
pop
sbbl
mov
xchg
sub
sub
fld
pop
or
das
xor
mov
inc
out
sarb
ljmp
mov
mov
add
mov
and
dec
xchg
sub
sbb
lods
jo
sub
int3
test
out
push
addr16
sub
cmpsl
scas
inc
and
inc
lret
sbb
sub
cld
lcall
je
mov
jg
jmp
xchg
xchg
or
mov
xchg
adc
ss
sub
fsubrs
in
add
stos
je
push
outsb
lret
jl,pt
cmp
xor
or
repnz
rdmsr
adc
jnp
cs
xchg
mov
test
das
inc
ret
cmp
out
inc
and
cwtl
pop
arpl
sub
dec
dec
pop
adc
loop
fisubl
mov
mov
cmpsl
or
sub
lods
mov
ficomps
dec
push
fwait
cmp
pop
aas
sub
fimull
inc
std
pusha
mov
xor
or
pop
hlt
mov
repnz
aas
xchg
jnp
lds
daa
out
dec
jp
or
xchg
roll
je
fs
test
jo
fistpll
fists
movsl
mov
jecxz
ret
add
notl
or
leave
scas
mov
daa
mov
pop
insl
jg
std
jp
sub
out
fdivrs
push
pop
testb
jge
dec
mov
pop
loope
mov
test
int
add
outsl
xchg
leave
xchg
push
out
add
outsb
mov
clc
lods
push
mov
cmp
fldenv
dec
aas
cli
xor
sbb
pop
mov
shrl
shrl
jl
ljmp
add
scas
mov
loopne
pop
ljmp
ret
loop,pt
or
adc
add
outsb
sbb
cwtl
pop
xchg
das
mov
pushf
jb
out
lahf
adc
inc
inc
shlb
pop
fcoms
pop
pop
imul
das
addr16
insl
fldl
xor
mov
sbb
or
cmp
sub
ds
pop
stc
push
js
sub
cmc
jle
movsl
inc
push
jb
xor
jl
or
and
and
adc
call
aas
and
mov
inc
push
mov
push
dec
xor
add
mov
jb
ja
add
loop
mov
cmp
andl
pop
adc
xchg
sub
sub
xchg
or
stc
rcll
xchg
mov
mov
mov
push
mov
nop
dec
xchg
jge
jge
and
loopne
cmp
add
call
stos
jmp
ret
in
sub
out
push
and
adc
insl
aad
and
pop
xchg
add
pop
call
cmp
incl
pop
cmc
sarb
mov
and
pcmpeqb
inc
outsl
stos
jle
loopne
push
push
or
jl
mov
cmc
dec
xchg
pop
dec
sub
into
mov
fwait
jge
mov
xlat
add
add
arpl
mov
daa
jg
shl
sbb
cmp
pop
sbb
fnstenv
cs
ficoms
jp
cmp
xchg
sub
cmp
stc
lods
fwait
mov
fcompl
or
jne
fisubs
inc
mov
and
sbb
std
xchg
insl
into
cmpb
cs
mov
bound
add
addr16
xchg
xchg
outsl
enter
pop
daa
cmp
xchg
cmp
jno
inc
sub
xchg
sbb
xchg
push
imul
icebp
popa
or
aas
push
inc
testl
lds
push
test
jo
xor
clc
shrb
inc
fwait
outsl
out
movl
ret
fisttpl
sub
clc
fdivl
movsl
dec
jecxz
sti
xchg
mov
and
lods
rcr
xchg
lock
dec
add
cmp
pop
das
xchg
and
cmc
push
xor
push
int3
repnz
pop
aaa
pop
xlat
jp
movsb
mov
cwtl
ret
imul
or
xchg
mov
sub
dec
out
lods
pop
sub
sub
xchg
lret
or
cmp
push
xchg
scas
lods
popf
movsb
jecxz
stos
push
xchg
sub
incb
jae
les
repz
xor
mov
popa
and
jno
add
sbb
iret
sub
jae
cmp
sub
mov
cmpsl
xchg
inc
pop
pushl
mov
scas
movb
push
aaa
into
loop
jno
push
xchg
pop
ja
in
popa
fsubr
dec
nopl
mov
xlat
rcrb
mov
mov
and
stos
xor
pop
fs
pushf
dec
leave
or
fucomi
mov
jns
xor
sub
mov
ret
orb
push
pop
sub
xlat
aaa
pop
outsl
outsb
dec
push
insb
add
lods
cmp
cmp
ret
in
dec
test
xchg
xor
pop
mov
popf
imul
lret
push
pop
mov
push
sub
rcr
aam
cli
leave
in
add
push
push
dec
ja
mov
cmpsl
cli
lcall
in
pop
adc
lods
jmp
ficompl
cld
cmp
mov
out
push
mov
mov
or
je
add
scas
add
aad
mov
test
cltd
clc
fwait
leave
add
mov
adc
mov
cmpsl
jmp
mov
pop
orl
mov
pusha
push
dec
movsl
cmc
lahf
lret
cs
push
or
sbb
lods
cmpsl
cmp
outsb
mov
dec
mov
pop
leave
mov
jl
int3
mov
add
xchg
cmp
mov
and
xor
fwait
outsb
sub
add
or
repnz
enter
mov
adc
or
lret
dec
jnp
sub
and
or
pop
pop
lcall
inc
pop
neg
in
mov
and
dec
stos
rorl
xchg
inc
lcall
and
pop
popa
fdivrl
repnz
push
mov
jnp
fwait
or
xchg
sbb
jmp
dec
sbbb
mov
hlt
lret
and
arpl
loop
and
aam
imul
add
lahf
stc
test
cli
pushf
dec
adc
jmp
cltd
fcomps
out
sub
dec
jb
popf
push
mov
rcrb
xor
shld
sbb
lds
adc
and
inc
cmp
sub
lret
scas
sti
pushl
inc
jb
jo
cmc
or
push
sub
xchg
test
pop
out
adc
inc
inc
mov
aam
xchg
sti
pop
cwtl
test
mov
add
aas
scas
add
dec
fs
js
mov
cmpsl
data16
imul
int3
cmp
pop
xor
pop
mov
push
lret
setne
lods
lds
and
lods
push
sub
test
xor
lret
inc
dec
pop
stos
into
xchg
mov
jecxz
gs
adc
mov
xor
jmp
push
outsb
cli
and
popa
mov
jno
sbb
xor
fidivrs
addr16
mov
or
push
sbb
jge
add
push
fs
mov
imul
cmpps
das
out
mov
sub
test
dec
xchg
jno
mov
pop
addr16
jecxz
rclb
jo
das
pop
lahf
sbb
imul
mov
sbb
lods
adc
mov
add
call
fisubs
lret
mov
repnz
into
test
cmpsl
lods
fstl
and
jmp
or
and
lahf
imul
addr16
and
addr16
xor
test
test
inc
jle
mov
adc
clc
and
lret
mov
fsubp
lds
jnp
cmpb
nop
pop
out
insl
cmp
mov
pop
mov
mov
pop
jbe
jne
sub
popa
jle
xor
cli
jne
inc
cmp
in
popf
mov
xor
push
arpl
fadd
xor
push
movsl
jmp
lods
add
xlat
not
repz
xchg
sub
jp
mulb
or
push
cmp
imul
movsb
cmp
and
stos
mov
test
adc
je
mov
mov
and
xchg
mov
xchg
stc
and
xor
push
clc
sub
and
inc
jp,pn
xlat
bound
aad
dec
and
xchg
jns
adc
pop
andl
xor
testl
js
addr16
popf
test
and
mov
mov
in
pop
mov
lahf
cmp
xor
pop
es
and
fmuls
pop
cmc
lock
pop
cli
shrb
imul
jno
push
rclb
xchg
or
and
mov
cwtl
inc
packsswb
out
test
imul
mov
cmpb
mov
mov
bound
sbb
adc
sbb
lahf
add
int3
repz
es
adc
into
cwtl
das
add
icebp
adc
sbb
mov
pop
jl
pushf
xor
inc
push
adc
arpl
shr
test
xchg
std
jo
and
lods
inc
inc
and
loopne
lahf
imul
into
mov
or
jbe
inc
mov
adc
or
addr16
insb
fsubrs
inc
xchg
sub
push
adc
out
inc
dec
nop
mov
aad
shl
mov
pop
mov
mov
ss
test
std
push
cs
loope
dec
push
lea
ljmp
pusha
jp
xor
scas
cld
int3
mov
or
cmp
movsl
outsb
and
dec
loope
pop
ret
fldl
ljmp
hlt
push
aam
adc
sub
pop
mov
jnp
mov
js
cmp
adc
pop
das
enter
pop
or
call
lret
mov
fbld
mov
mov
adc
fadds
xor
pop
hlt
push
adc
cmp
in
adcl
leave
xor
js
inc
loope
test
sbb
add
rcrl
xchg
push
sub
push
mov
jmp
cmc
insb
add
xor
pop
nop
int
cmp
xor
sub
ror
ficompl
ljmp
pop
je
jg
shrd
inc
arpl
in
xchg
inc
lock
divb
cmp
ds
call
cmp
int3
inc
xlat
mov
fldenv
xchg
in
pop
repz
clc
xor
sub
dec
push
movsl
nop
xchg
and
icebp
mov
lret
imul
ljmp
pusha
in
loop
pop
test
push
lods
jle
jg
ds
xor
mov
jae
cltd
mov
or
mov
add
sub
addr16
mov
arpl
mov
jnp
insl
lods
adc
dec
push
mov
dec
mov
call
insb
add
and
cmp
mov
cs
insb
and
jns
inc
ret
imull
jbe
pop
sahf
das
rorb
pop
mov
add
and
cmp
dec
inc
jb
std
inc
fmull
lret
mov
popf
ret
in
cmpsl
int
hlt
lahf
ljmp
adc
inc
fwait
loope
gs
andl
fadd
push
cwtl
dec
jns
and
xor
aas
mov
sbb
xorb
mov
hlt
and
mov
ret
int
add
bound
push
js
mov
jne
and
repz
adc
orl
int3
mov
or
sub
aam
inc
mov
in
sub
or
cmp
outsl
inc
call
mov
mov
dec
adc
mov
sbb
insb
mov
int3
pop
lods
jmp
ficomps
ret
popf
popa
mov
xchg
sbb
out
out
ja
faddl
mov
sbb
out
mov
lcall
or
inc
pop
jne
inc
dec
push
jne
dec
je
test
cmp
daa
enter
and
test
xchg
sbb
les
cmp
mov
push
loopne
push
sub
pop
jne
cwtl
sbbb
inc
pop
push
push
lods
imul
addr16
sbb
jbe
push
mov
xlat
jmp
adc
mov
int
cli
pushf
sar
int3
fwait
push
nop
out
mov
sbb
dec
add
xchg
push
test
repz
mov
cmp
fdivrl
mov
test
fmul
mov
cmp
lcall
or
cmp
xor
fmuls
out
popa
cmp
push
pop
cmc
mov
push
push
or
aad
aaa
mov
das
mov
ja
jge
lahf
pop
cmp
mov
push
jl
out
dec
sub
in
or
loope
dec
pop
jmp
scas
fsubrl
out
or
inc
lret
adc
sub
xor
pop
stc
fidivl
orl
sbb
push
stc
inc
fmuls
popf
mov
mov
dec
clc
cltd
aam
xor
pop
add
mov
arpl
cmpsl
cmp
je
fisttps
aas
dec
xchg
lahf
jne
fstp
cwtl
pop
jae
adc
push
jmp
or
jno
pop
test
pop
repnz
data16
mov
mov
jb
and
pop
add
inc
add
fsub
ja
xor
push
pop
addb
xor
test
mov
jns
mov
jge
leave
scas
testl
scas
cmp
cmpsl
hlt
jns
es
push
xchg
xchg
mov
call
test
mov
fildll
lea
cs
adc
lock
std
cltd
test
iret
enter
imul
dec
pusha
pushf
scas
mov
imul
pop
sub
cmp
and
rorb
jnp
jno
fisttpll
stos
fs
xor
test
jecxz
sub
sub
ret
aaa
xchg
cmp
fstps
mov
jle
test
imull
cwtl
pop
int
xor
lret
lds
dec
dec
push
push
pop
mov
cmp
xor
clts
xchg
loope
clc
sbb
inc
dec
or
bound
inc
iret
dec
pop
sub
mov
mov
push
jnp
outsl
mov
call
push
das
ljmp
gs
gs
roll
outsb
or
sbb
lock
out
popf
fbstp
test
out
inc
in
std
mov
xchg
sub
arpl
cmpsl
pop
add
nop
or
adc
cmp
lods
lods
repz
fs
pusha
inc
dec
jb
pop
ljmp
cmp
mov
aad
lods
jns
jmp
out
test
adc
cmpsl
scas
mov
push
ss
push
push
cmp
cmp
loop
xchg
inc
lret
push
mov
jnp
jge
cwtl
sbb
out
es
out
pop
sbb
xchg
js
jbe
idivl
mov
add
mov
je
adc
sbbb
cmp
mov
push
and
fiaddl
dec
mov
mov
mov
rcrl
jne
mov
fisttpll
cs
cmp
add
orb
jo
test
jae
cmp
pop
inc
scas
in
fnsave
mov
inc
mov
repz
mov
sub
cmp
adc
mov
sbb
out
xchg
and
pop
push
xchg
mov
xchg
ficoml
insb
pop
xor
in
sub
loop
sahf
adc
into
insl
test
movsl
or
mov
mov
pop
pop
mov
sbb
call
in
aad
inc
add
inc
arpl
xor
mov
loope
pop
outsb
adc
scas
out
push
mov
xchg
mov
imul
mov
adc
pop
mov
lret
fimull
and
sti
xchg
mov
outsl
aam
daa
stos
xchg
repz
scas
fwait
sti
or
jb
add
fs
mov
xchg
add
lahf
ss
xchg
mov
into
mov
lahf
sub
pop
fadds
imul
xchg
pop
add
outsb
mov
pop
dec
cmp
sbb
mov
scas
jb
xchg
in
mov
or
dec
daa
mov
insl
dec
push
iret
xor
test
aam
cld
nop
add
pop
adc
std
push
pop
inc
in
push
mov
fistpll
mov
jb
data16
nop
dec
and
push
test
sarb
mov
fsubr
insb
call
stos
inc
cld
fimuls
cld
and
mov
fnstsw
bswap
pop
dec
int
dec
loopne
cmp
das
das
jge
mov
jnp
out
stos
xchg
inc
loop
into
out
les
sti
xchg
dec
push
into
mov
aam
in
push
mov
inc
xor
mov
iret
lcall
test
jne
int3
cmpsb
rcll
jo
sbb
push
popf
cmc
inc
cs
testl
vcomiss
aaa
sub
dec
mov
mov
cmp
aam
push
push
rorl
or
or
bound
notb
dec
inc
mov
pop
cmp
imul
sti
test
je
cmp
imul
pop
mov
jne
jl
hlt
sub
or
push
inc
imul
in
mov
fnstenv
mov
testl
or
push
iret
loop
bound
loope
bound
sbbb
cs
xor
dec
rcrb
or
sbb
rcll
mov
inc
in
mov
inc
push
in
jae
fsubs
fldcw
jge
pusha
cmp
out
push
mov
dec
mov
xor
ret
loope
push
dec
pop
cld
push
push
xchg
cmp
loope
loopne
sub
xchg
insl
dec
jo
lret
push
jo
dec
enter
mov
inc
mov
xor
popf
andl
xor
imul
lock
ror
dec
ficomps
xchg
push
sub
int3
lods
lock
mov
dec
mov
push
cmp
dec
xchg
shrb
pop
push
daa
push
add
mov
into
fsubrl
rcll
jnp
jae
lret
sbb
cltd
pop
push
jno
cli
xchg
dec
imul
xchg
mov
cmp
dec
add
xchg
xor
arpl
iret
xchg
add
call
ss
pop
xchg
push
adc
fstps
mov
fdivrl
mov
fs
aad
mov
bound
lods
std
andl
gs
negb
lods
sub
mov
cmp
pop
mov
sub
mov
mov
cmpsb
sub
in
aad
adc
ret
push
pop
movsl
push
pop
xor
std
jns
in
dec
sub
ja
adcl
xchg
inc
daa
mov
jno
pop
dec
mov
mov
rcrl
cmpsb
dec
movsl
pop
sbb
xor
insb
out
and
dec
lret
sub
xor
cmp
loope
or
ja
imul
and
xchg
jmp
je
icebp
ds
orl
mov
fisttps
jge
test
dec
fcmovnb
jmp
pop
or
or
jle
jecxz
push
push
jae
dec
push
lcall
negl
iret
stos
es
push
mov
sahf
add
popf
xorb
push
mov
push
in
ret
cmp
push
aam
sbb
add
sets
adc
dec
pop
xchg
jae
cs
cmc
mov
mov
pusha
nop
mov
outsl
fmul
mov
test
push
mov
lds
test
inc
pop
adc
mov
pop
mov
adc
std
mov
cld
out
popf
bound
push
shrl
dec
leave
jbe
mov
mov
jno
and
cmp
jl
sahf
lahf
pop
dec
test
rcrb
and
pop
cmp
mov
inc
iret
pop
xchg
fdivs
mov
add
jmp
mov
adc
in
mov
movsb
mov
adc
popf
add
mov
inc
pusha
jp
jp,pt
arpl
call
sti
dec
mov
lock
add
push
dec
addb
int3
enter
xchg
pop
mov
daa
imul
inc
arpl
mov
int3
aaa
aam
xchg
mov
rol
inc
push
pop
outsb
jg
je
push
push
pop
cmpsb
inc
fsubrs
fidivs
sbb
cld
orb
mov
cmp
inc
sbb
sub
pop
xchg
jno
jo
mov
fstpt
dec
jge
in
data16
rcll
and
jnp
sub
stos
js
rcr
movsl
mov
adc
jnp
jmp
mov
ret
mov
push
not
sarb
sbb
jb
sbb
cmp
inc
pop
jbe
xor
mov
fwait
sarl
mov
int3
and
call
test
outsl
jge
gs
popa
outsl
xchg
sarb
sbb
in
test
ret
xor
push
dec
les
lcall
sbb
add
loop
dec
push
mov
cmc
or
add
ret
cmp
mov
mov
xchg
inc
lahf
xchg
add
movsl
push
cmp
mov
lods
cmp
clc
cmp
sub
push
out
std
mov
rep
push
xchg
int3
cld
sti
mov
sbb
das
repnz
mov
pop
push
jae
decl
mov
clc
leave
in
test
mov
inc
arpl
cmp
movsb
pop
fisubrl
fcompl
enter
inc
fsubs
movsl
leave
stos
jns
lret
mov
push
rclb
popf
mov
xchg
lcall
lcall
jne
ljmp
repz
movsl
imul
or
cwtl
mov
aas
popf
inc
xchg
adcl
mov
add
xor
shlb
adc
push
push
or
icebp
xlat
jmp
xor
pop
lcall
push
in
adc
jae
cmp
or
pop
push
jno
mov
mov
lods
nop
daa
cmpsb
adc
or
shl
adc
movsb
xor
push
cmp
jnp
ss
mov
les
sub
push
lock
mov
adc
loop
push
fcoms
cwtl
mov
fsubrp
cmp
sub
xchg
mov
enter
cmp
mov
test
mov
jbe
in
clc
int
es
cmp
daa
inc
lods
ss
pop
icebp
inc
sbb
addb
sub
orb
add
xchg
repnz
mov
shlb
pextrw
dec
bound
das
jae
leave
sub
jge
push
sbbl
mov
sbb
pop
jge
stos
leave
fsts
jg
repnz
and
fstps
out
adc
sbb
rcr
pop
repnz
and
outsb
push
jmp
adc
cmpsb
jns
xor
and
int
sarb
cmpsb
inc
mov
orb
scas
push
pop
loop
movsl
mov
cmp
add
jb
push
fbstp
sbb
add
lea
inc
arpl
cmpsb
mov
ret
sbb
rol
xlat
and
push
in
cs
jns
insl
je
jl
in
mov
and
fstl
ret
clc
lds
xchg
out
movsl
in
xor
rcrb
ret
dec
adc
sbb
inc
mov
pop
filds
test
adc
sub
movsl
dec
loope
out
dec
test
mov
mov
cmpl
mov
jecxz
or
lods
pusha
es
pop
push
mov
movsl
rcrb
mov
insb
scas
cmpl
stos
mov
adc
or
mov
pop
fwait
sbb
bound
int3
out
push
insl
jbe
repz
lcall
rorl
idiv
mov
fistpll
xor
add
sbb
popf
aad
or
mov
inc
addr16
das
jge
stos
push
out
negl
jne
cmp
xor
bound
or
inc
andb
fcmove
adc
gs
icebp
xchg
scas
mull
mov
or
scas
xchg
add
push
scas
adc
cmpsl
out
sub
push
scas
aas
mov
mov
mov
loopne
pusha
pop
sub
sbb
ljmp
pop
add
sub
cli
xchg
mov
les
jge
xchg
fldl
aad
or
pop
nop
popf
mov
cld
push
ss
xor
jge
mov
es
fimull
test
jl
leave
cmc
jecxz
mov
inc
cmp
std
out
nop
imul
repnz
or
mov
das
xchg
mov
cli
andl
int3
test
icebp
sbbb
cmp
sub
pop
imul
sub
or
decb
sub
dec
pop
xchg
cmpsl
add
mov
das
jne
rcl
jle
adc
push
or
pop
jne
adc
fs
mov
mov
xor
sbb
and
outsb
cmp
fists
jecxz
in
sbb
and
adc
lcall
jne
push
cmpsl
lock
lods
adc
lods
dec
cmc
jge
xor
xchg
xchg
sbb
mov
scas
call
shrb
sahf
or
inc
jne
imul
pop
or
mov
push
jae
sub
cmc
mov
test
inc
or
clc
out
sub
aad
cmp
xor
mov
enter
push
sbbb
into
enter
sbb
mov
lock
and
lret
addr16
aas
int3
pop
daa
jns
jmp
popa
mov
sbb
pop
xor
sub
popa
std
xlat
cmpsl
andb
add
pop
jae
jg
in
outsb
aad
pop
sahf
and
cwtl
mov
inc
push
jmp
sbb
adc
and
xchg
add
ja
mov
ja
push
stos
adc
popf
dec
sub
mov
pop
push
mov
adc
sbb
mov
outsb
lds
in
dec
test
out
sbb
adc
sti
pop
mov
jb
inc
les
mov
push
pushf
lds
ljmp
jno
cli
pushf
xlat
outsb
into
sbb
lods
sarl
shrl
leave
push
rcll
xor
rcrb
push
push
mov
mov
jge
mov
xchg
push
xchg
push
push
imul
sbb
lea
cmc
fdiv
scas
xchg
stc
jnp
imul
cmpsb
lret
pop
dec
xor
dec
jne
push
push
xlat
push
shll
cli
push
jae
dec
loope
nop
inc
or
jne
mov
lcall
stc
xchg
pop
fimull
ret
sub
cmpsb
or
shll
xchg
scas
movsb
lds
jge
jno
loop
pop
dec
pop
mov
in
push
call
xchg
dec
in
mov
fisubs
cmc
jae
mov
lcall
into
std
mov
sbb
jbe
ret
mov
push
or
addl
cmp
or
mov
lods
pop
jne
sub
out
inc
ds
repnz
hlt
xor
cmpsl
push
mov
cltd
mov
push
sti
scas
arpl
jg
push
test
push
das
fldt
outsl
sbb
pop
sub
mov
sbb
jecxz
int3
cltd
bound
pop
mov
sbb
not
push
fmuls
lock
aad
jmp
pop
jle
xchg
mov
sti
inc
js
hlt
and
shlb
inc
outsb
stc
cwtl
sbb
lds
add
lods
and
sti
fpatan
sub
mov
push
sub
mov
mov
lahf
cs
dec
pop
aaa
add
mov
sbb
add
popf
cmpsl
mov
lret
ss
add
sub
mov
push
xor
imul
add
jmp
ret
push
mov
int
mov
cmp
fadd
adc
fnsave
jnp
enter
int3
outsb
sub
popa
cld
cmp
test
sub
iret
je
popa
frstor
mov
push
inc
cltd
xlat
lods
stc
lea
cwtl
sbbl
lret
out
push
adc
adc
jb
jge
call
or
lods
sub
pop
into
push
jae
push
dec
or
xchg
pop
inc
lret
push
fisubrs
lock
mov
cmp
or
mov
pop
sbb
aam
aaa
rol
sbb
xchg
pop
outsl
cltd
test
and
lock
shlb
dec
aam
cmp
out
xchg
pop
inc
dec
out
jno
mov
test
mov
sarb
sbb
dec
arpl
out
sub
push
ds
cs
pop
jp
movsl
ds
mov
insl
sbb
xor
pop
mov
ret
out
aaa
fidivl
rcrb
nop
mov
dec
out
pushf
jg
push
mov
xchg
mov
decl
and
jnp
mov
rorl
dec
adcl
test
das
mov
push
inc
insl
pop
ret
fsubp
xor
push
jbe
shrl
add
jl
jl
jae
cmp
insb
push
insl
ja
mov
push
mov
ret
rcl
jle
cmp
push
mov
outsb
add
add
push
pop
cmpb
push
push
pop
cltd
jno
addl
and
addr16
dec
sbb
stos
addr16
mov
push
shl
dec
mov
into
orl
xchg
mov
pop
push
in
inc
sub
test
lock
pop
xchg
or
in
mov
jo
sub
dec
push
lret
xchg
or
mov
push
pop
adcl
adc
imul
es
mov
fistpl
test
lcall
popf
xor
leave
inc
cmp
sub
jl
or
jo
rcl
and
add
fstpl
jg
cmp
mov
cmp
jle
iret
add
mov
scas
pusha
in
call
cld
icebp
pop
jmp
cmpb
popf
shlb
int
mov
pop
push
int
loope
fistpll
iret
into
cmp
scas
jns
popa
cmp
icebp
adcl
das
fs
cmp
daa
arpl
cmpsb
int
gs
aad
test
sub
pop
jne
xor
iret
cmp
cld
jne
ret
xor
xchg
int
lods
ja
push
icebp
lret
adc
ja
or
mov
jge
fisubrs
xchg
shrl
push
pop
addl
cs
out
jp
out
fs
popa
mov
push
je
and
sbb
test
jecxz
insb
sub
sahf
xchg
sarl
dec
loope
mov
push
lcall
mov
inc
outsl
mov
das
add
in
es
enter
push
or
lret
cli
xchg
std
std
scas
push
or
fldenv
push
and
rorl
jg
pop
jge
dec
sbb
pop
adc
mov
xor
jle
leave
inc
lock
add
cmpsl
pop
xor
enter
in
aaa
stc
jno
stc
pop
or
sahf
mov
pop
cmp
sbbl
in
cmpsb
dec
filds
in
popa
mov
pusha
imul
popf
pushf
xor
jb
inc
push
or
xor
in
adcl
es
enter
call
pop
fildll
repnz
mov
arpl
or
xlat
popf
cmp
inc
aad
rcrb
test
inc
add
jp
add
jle
pop
push
mov
jmp
pop
sbb
int
pop
push
icebp
fwait
jnp
add
enter
imull
inc
test
ja
xlat
push
lock
scas
and
cmp
into
sub
arpl
mov
sbb
xor
int
push
setne
inc
push
mov
pop
adc
decb
and
xor
mov
inc
xchg
mov
push
jecxz
sub
jecxz,pt
mov
in
in
stos
and
xchg
test
jo
xchg
sahf
push
lods
stc
icebp
inc
mov
pusha
divl
xchg
mov
xchg
inc
add
sub
mov
pusha
pushf
mov
xchg
mov
out
mov
lods
cmp
pop
jge
sbb
and
mov
jo
dec
addr16
dec
sbb
imul
imul
std
dec
xor
inc
out
adc
ds
inc
int3
lret
lods
ja
xchg
inc
push
hlt
or
popa
and
push
pop
cmp
or
xchg
dec
mov
add
repnz
mov
mov
iret
mov
repnz
sbb
dec
cli
jmp
ror
es
js
mov
xchg
repnz
pusha
cli
pushf
in
mov
lods
xor
aad
mov
sbb
testl
aas
outsb
rorb
test
rol
and
mov
cwtl
in
jge
sbb
cmp
addb
mov
and
jl
xor
or
sub
adc
add
mov
xchg
lea
mov
hlt
ljmp
xchg
gs
movsb
repnz
xchg
adcb
or
inc
adc
cmp
pop
lods
mov
mov
push
or
out
popf
jl
sbb
cmpsb
popf
stos
shlb
fwait
pop
popw
outsl
mov
mov
inc
fsts
push
mov
popf
pusha
popa
push
aad
sub
cmp
mov
mov
jmp
mov
sbb
outsl
movsl
dec
mov
bound
test
dec
xor
dec
mov
out
pop
shl
jle
lods
cmp
ja
push
mov
dec
sbb
movsb
mov
jp
ret
add
jmp
cld
clc
daa
pop
hlt
rcrl
arpl
adc
push
mov
pop
xchg
sbbl
fisubrs
sbb
stc
popf
ret
outsb
mov
lods
cld
setp
adc
jo
sub
pop
dec
pop
test
xchg
or
cld
mull
data16
cmp
pop
scas
mov
mov
jle
jne
cmpsl
sbb
scas
clc
jmp
mov
leave
push
push
xchg
xchg
aad
push
mov
cmp
sahf
sub
adc
leave
inc
in
int
bound
iret
loop
ret
xchg
in
mov
cmp
rcr
and
xchg
cmc
xchg
mov
aam
out
cs
sub
mov
addr16
cmp
cmp
lea
add
sbb
scas
leave
adc
outsl
fcomps
push
cmp
xchg
pop
rcrb
movsb
adc
cmpsb
fisubs
cmp
jle
in
shrl
std
xor
mov
out
adcb
or
out
jl
and
inc
add
iret
cmpsb
loope
rcl
or
aam
xlat
retw
jge
bound
push
xor
rclb
cmpsl
repz
cmp
rcrl
add
je
push
cmpsl
cmc
lock
repz
adc
xor
sub
xor
push
push
pushf
inc
push
inc
icebp
subl
cmp
call
push
clc
outsl
add
pop
mov
in
es
into
jl
jbe
fwait
loopne
push
push
jmp
inc
dec
in
sub
xchg
push
clc
insb
sub
sbb
outsb
insb
dec
rcrl
aaa
push
jmp
outsb
jne
mov
pusha
sahf
je
rolb
mov
std
shll
xchg
or
lret
lret
add
cmp
lods
loope
xlat
dec
mov
push
add
jle
pop
js
pop
mov
xchg
xor
sti
cld
imul
ljmp
sub
adc
rclb
jle
cmpsl
inc
and
xor
cwtl
scas
push
sub
jmp
mov
stos
mov
sti
rol
mov
add
xchg
into
mov
adc
lahf
and
or
push
or
into
dec
xor
lock
cltd
adc
outsb
ret
dec
xrelease
sbb
push
jno
jg
jecxz
popf
dec
jno
cmp
jo
pop
in
mov
outsb
fldenv
pop
popa
xor
mov
xor
bound
jp
out
xchg
lods
add
inc
pop
out
rorl
mov
and
pop
adc
mov
dec
call
dec
add
loopne
inc
movb
xor
out
popa
pop
ficomps
or
adc
inc
push
mov
jns
pop
dec
inc
pusha
or
jb
mov
arpl
lock
js
mov
sub
pop
jbe
or
stos
cmp
iret
xchg
outsb
xchg
test
leave
enter
jmp
xchg
test
adc
das
mov
notb
mov
push
xchg
push
xor
testl
int3
cmpsl
jp
stos
inc
enter
adc
leave
pusha
mov
pop
sahf
jae
jle
lods
and
nop
pop
jnp
fldt
bound
mov
or
insb
call
mov
mov
psubd
insb
adc
mov
jg
mov
mov
add
mov
inc
adc
xor
xlat
inc
scas
rorl
cs
shrb
adcb
test
jg
or
out
jno
ljmp
scas
and
sub
pop
jo
pushf
test
test
push
push
sub
inc
push
pop
cmc
sahf
push
add
pop
subb
les
add
push
mov
sti
call
shll
jno
ret
mov
gs
jnp
push
inc
sti
nop
mov
xchg
stos
pop
call
cmp
popf
ret
ja
xor
mov
not
insb
call
cmp
stc
movsl
add
jle
xor
mov
cltd
scas
lds
repnz
movsb
sub
adc
sub
and
lods
data16
iret
stos
mov
sbb
inc
ja
mov
ret
push
jmp
sub
imul
add
mov
sub
in
fstpt
sbb
aaa
nop
dec
inc
xchg
pop
mov
cld
inc
dec
dec
pop
into
xor
pop
fdivrl
daa
jp
mov
insl
mov
nop
ret
call
mov
movsb
cmp
repz
mov
imul
mov
inc
stc
fucom
fnstenv
xor
notb
xlat
pushf
add
jle
sub
jg
cmp
int
stos
roll
push
ret
mov
cmp
and
lds
test
cmc
inc
push
add
push
mov
sub
mov
scas
lock
les
nop
mov
jmp
in
push
pop
cmp
aas
aam
sahf
movsl
hlt
sbbb
fcoms
dec
pop
mov
pop
add
push
or
pusha
add
inc
addr16
arpl
sub
inc
ljmp
mov
movsb
jecxz
cmp
inc
call
or
ljmp
scas
push
fmuls
mov
ja
mov
aas
cmpsl
call
mov
add
and
adc
and
fisubl
adc
imul
shlb
push
loop
xchg
enter
sbb
mov
push
jmp
mov
lds
movsb
cmp
push
dec
popa
andb
lds
mov
or
add
jle
ss
push
and
imul
sub
jo
adc
sbb
shrl
repz
shll
jge
loope
clc
sbb
push
ja
adc
dec
or
mov
push
ficoml
clc
addr16
push
flds
sbb
lret
popa
fcomi
ljmp
dec
lock
cmpl
int
add
jno
hlt
dec
mov
or
in
jl
lret
test
fnstenv
mov
scas
int3
lret
mov
dec
hlt
jo
pop
sbb
cs
scas
push
and
into
or
push
cmp
mov
sti
call
jle
and
jb
push
icebp
xchg
cmpsb
mov
mov
push
repnz
jp
xorb
xchg
sub
pop
jnp
lods
mov
adc
fldt
mov
movsl
and
outsb
push
mov
insb
shl
xor
inc
xchg
sub
xchg
dec
push
fs
pop
pop
ds
jae
shrb
addr16
test
mov
mov
cmp
outsl
flds
inc
inc
test
js
aam
sub
mov
cmp
mov
xor
sbb
in
aam
ucomiss
clc
adc
xor
fwait
pop
je
jle
outsl
test
rcrb
mov
cmp
movb
scas
mov
fidivl
add
movsb
stos
xchg
insb
push
sbbb
jge
mov
pushf
cmp
loopne
leave
jo
scas
pop
ficomps
or
push
rorl
into
push
dec
lods
jl
sub
xchg
inc
cmp
sarb
inc
cmpsl
repz
stos
enter
mov
mov
cltd
push
test
movsl
or
mov
sbb
outsl
pusha
sarl
mov
clc
roll
mov
int
lock
hlt
inc
cmpsl
adc
ljmp
or
std
cltd
sub
test
sti
cmpsl
xchg
lret
mov
insb
jno
lock
iret
fistpl
sahf
pusha
xlat
fwait
push
adc
les
dec
es
xor
fadd
enter
cmp
stos
das
push
imulb
cmp
fisubrl
xlat
mov
push
add
jbe
xchg
test
cmp
fdivrs
orl
mov
jo
stos
fs
add
adc
inc
jae
lahf
stos
testl
scas
jp
nop
jl
fwait
ss
jne
out
xor
xchg
fsts
setb
popl
adc
xchg
pop
add
fsub
jae
pop
je
sbb
pop
push
lods
ffree
cmp
testl
loope
je
push
sub
inc
mov
mov
cmpsl
mov
adc
sub
je
jnp
gs
popf
insl
cwtl
inc
sub
dec
adc
push
and
lret
add
insl
fcmove
insb
ds
outsl
clc
xor
push
dec
cmpsl
push
mov
orl
pop
cmp
jp
cs
push
sub
push
testb
mov
ds
out
pop
loop
sub
cmc
cld
lcall
jne
cwtl
in
std
icebp
or
xor
lahf
push
jge
inc
shlb
xor
xchg
mov
mov
pop
xchg
jge
std
scas
mov
xor
xlat
push
cld
and
scas
imul
gs
and
loopne
ret
outsl
dec
dec
cmp
lcall
nop
inc
cld
in
jl
fsubrl
daa
ljmp
push
sbb
mov
pop
insb
lsl
aam
fs
notb
sarl
fists
xchg
js
or
xor
mov
je
xchg
pop
testl
movsl
jmp
mov
mov
add
and
xor
mov
mov
xor
mov
inc
clc
mov
fstl
cmp
cmp
inc
cmp
fdivs
inc
xchg
lock
push
cmp
into
lahf
addl
pop
cmp
popf
das
test
jmp
jb
pop
imul
js
mov
shl
movsb
lsl
stc
sub
es
pop
adc
arpl
ret
pop
lock
ds
push
dec
popa
sub
xchg
cmovne
mov
xchg
pop
imul
lds
dec
mov
cmpb
mov
shl
pop
cmp
pusha
inc
fstpl
mov
mov
je
adc
aaa
xchg
ret
ljmp
std
mov
sarl
jns
push
jbe
ficoms
mov
xchg
push
mov
scas
mov
pop
xor
jl
cltd
clc
movsl
lret
cltd
cwtl
punpckhwd
mov
je
leave
mov
lcall
fucomip
jp
pop
cmc
mov
push
sarb
dec
imul
jp
pop
fstps
or
add
cmpsb
sub
sub
push
dec
testb
add
popa
sub
popl
xchg
lret
inc
push
inc
push
inc
ljmp
popa
sahf
push
mov
adc
and
sub
sbb
add
insl
popf
push
shlb
lret
hlt
sbb
cs
cmpsl
mov
dec
aad
xchg
or
fwait
pop
pop
cmpsl
or
cmp
ss
xchg
lock
mov
cmpb
test
adc
outsb
mov
popf
cmpb
xor
mov
leave
mov
popf
rcrl
dec
ds
call
mov
cmp
or
dec
add
inc
mov
mov
sub
int
cli
sbb
loope
mov
lret
loope
in
add
add
xor
adc
cmp
cmp
fisttps
sub
out
mov
cmpl
sub
arpl
fists
roll
jne
fs
arpl
bound
and
jmp
dec
mov
push
mov
mov
es
imul
loope
fwait
dec
loopne
andb
xchg
out
or
mov
jl
sub
in
jnp
adc
jmp
sub
into
add
icebp
orl
jnp
sti
es
inc
mov
clc
mov
adc
shrl
jg
mov
adc
mov
outsl
jns
pop
repnz
dec
sbb
in
jp
inc
pop
imul
insb
arpl
xchg
jns
inc
push
enter
loopne
xchg
int
xor
test
xor
cmpsl
sub
stc
cmpsb
enter
leave
cltd
std
push
push
in
xor
cmpsl
jl
add
dec
add
popa
mov
lret
sub
inc
sbb
out
cs
mov
fstps
inc
cltd
loop
inc
xor
test
jno
loope
jae
cmpsl
stos
dec
mov
leave
nop
sub
testl
inc
stos
nop
xchg
lcall
test
jecxz
jne
jbe
sub
mov
rclb
cmc
jbe
sbb
int
inc
or
adc
aaa
xchg
push
mov
aad
aaa
or
mov
imul
insl
push
adc
ret
ret
fdivrl
push
outsb
mov
xchg
aad
mov
push
mov
cmp
int3
inc
mov
mov
arpl
sbb
stos
es
lcall
sub
inc
lods
inc
mov
push
mov
cltd
push
mov
or
hlt
cmp
aaa
jae
in
sub
xchg
add
cmp
call
pop
enter
and
popa
lods
pusha
jnp
jecxz
jp
aaa
jo
jns
pop
insb
mov
lahf
xchg
ss
xor
fcoml
lcall
call
push
in
dec
out
inc
mov
vpcmpgtb
imul
movsl
and
push
adc
aaa
xchg
data16
mov
adc
pop
jo
cmp
xchg
inc
adc
rolb
sbb
xor
bound
mov
into
and
cmp
adc
adc
jnp
and
inc
pop
out
cmpsl
adc
imul
or
addr16
sbb
jmp
jae
out
cwtl
mov
jne
and
adcl
mov
cwtl
push
shll
dec
mov
xlat
push
adc
aaa
stos
out
loop
es
sbb
fiaddl
or
xchg
into
sbb
pop
or
adc
sub
xor
jmp
cmpsl
orb
sub
jecxz
insb
add
fnsave
push
int
pop
cmp
push
xchg
cmp
mov
int
imul
sub
and
lcall
push
imul
push
loope
notb
fwait
int
dec
jmp
fucomi
mov
add
and
pop
sbb
pop
and
sub
jp
les
into
insl
push
ror
jbe
inc
test
pushf
add
add
cmp
clc
nop
negl
sbb
decb
inc
push
call
int
and
insl
iret
push
push
push
shrl
ffreep
and
jns
cmp
je
jmp
rcr
aaa
sti
sarl
sub
jne
aam
je
sub
cmp
xchg
inc
inc
shrl
mov
push
jns
push
push
cmp
push
iret
inc
push
repnz
or
push
mov
dec
loop
adc
mov
cli
les
test
sbb
and
out
std
outsb
adcb
sbb
xchg
mov
out
pop
xor
xorb
dec
mov
fistpl
test
popa
and
adc
xchg
jmp
add
inc
mull
xor
mov
inc
insl
and
pop
cmpsl
fbld
ja
repz
jne
xchg
mov
xchg
loope
fistps
or
repz
and
push
pushf
pop
jae
daa
jp
dec
mov
add
sbb
out
sbb
inc
dec
subl
sbb
mov
aas
nop
cli
imul
fcoms
stc
sarb
cmp
lcall
not
cli
andl
std
push
push
mov
pop
pop
pop
push
test
aam
cltd
jmp
clc
into
push
test
repz
clc
bound
pop
repz
fisubrl
flds
dec
jmp
out
cmp
push
aas
imul
mov
ja
call
icebp
sbb
and
sub
cmpsb
mov
or
and
hlt
mov
fstps
mov
repz
push
jl
push
mov
loopne
adc
push
mov
paddsb
test
xacquire
lods
inc
and
sti
cmpsl
xlat
push
push
dec
xchg
jp
pusha
or
in
xor
xchg
lds
std
mov
jg
mov
lods
inc
mov
repnz
fucomip
movsl
sub
or
jb
dec
add
lahf
mov
adc
ds
arpl
fcom
in
xor
mov
leave
push
jle
ljmp
mov
jecxz
fnsetpm(287
mov
and
xor
dec
int
push
pop
sahf
cmp
aad
adc
sarb
and
sub
sub
mov
add
dec
dec
push
adc
pop
mov
ljmp
fwait
xor
add
cli
fnsave
movsl
out
loopne
ficomps
inc
cmp
lock
inc
movsl
xor
mov
mov
mov
outsl
mov
outsb
loopne
sub
adc
pop
mov
pop
cld
scas
or
std
test
das
xchg
mov
jle
xchg
jns
ljmp
push
push
dec
aaa
lods
add
imulb
inc
fnstsw
add
mov
cmpsb
les
pop
mov
ret
mov
xchg
jg
or
cmp
mov
push
cli
add
inc
rcrb
sub
loope
mov
push
pop
addl
scas
ficoml
stos
push
or
and
and
xchg
or
inc
in
loopne
lret
push
add
cs
js
sub
fnstenv
shrl
add
inc
sbb
inc
adc
fstps
popa
movups
mov
push
aas
jp
cltd
dec
test
mov
aas
gs
ficoms
dec
jno
adc
mov
jnp
ljmp
in
add
ret
jno
or
popa
cmp
mov
cli
jl
and
cwtl
mov
dec
mov
movsl
and
enter
pusha
inc
inc
mov
mov
inc
mov
push
xchg
jg
testl
and
scas
call
pop
hlt
pusha
fldt
lret
push
shll
xor
push
mov
inc
dec
and
adc
cltd
mov
imul
cmc
int
test
xor
mov
mov
lcall
cmp
cmp
test
mov
cwtl
bound
xor
addr16
xchg
das
popf
push
aad
xchg
sub
or
out
sub
es
pop
hlt
js
stc
sbb
lcall
aaa
xchg
js
mov
xchg
jno
xchg
aaa
js
ret
ja
xlat
mov
lods
imull
pop
mov
jne
test
in
cmp
fstpt
inc
in
dec
dec
adc
cmp
xchg
test
std
mov
arpl
fimull
xchg
sub
mov
pop
cwtl
dec
mov
loope
xor
mov
int
push
mov
into
xchg
out
and
push
push
in
push
fwait
xor
jmp
aad
out
adc
in
dec
loopne
loop
loop
or
in
lahf
sub
xchg
fidivrs
cs
and
inc
clc
jae
sub
xchg
sbb
ret
add
xchg
push
dec
aaa
xchg
or
dec
loope
cmp
jl
repnz
lahf
test
sar
mov
scas
sbb
es
movsb
mov
pop
jne
into
insl
imul
jecxz
mov
mov
lock
fidivl
dec
lods
push
je
adc
outsb
outsl
mov
jg
nop
imulb
test
and
or
fidivrl
sarb
sarb
or
aas
rcl
lds
out
sbb
push
lahf
jb
pop
jb
frstor
dec
push
jne
nop
push
mov
pop
jmp
daa
bound
jle
popf
out
jb
push
xor
and
and
xchg
push
loopne
and
js
es
pop
stos
and
and
jne
xlat
mov
repz
ds
dec
push
pop
xchg
inc
addr16
adc
dec
mov
in
test
js
sarl
nop
jb
and
cli
xchg
stc
inc
test
inc
rorb
or
das
sbb
jno
ss
adc
jae
sbb
lea
jecxz
inc
xor
jp
in
stos
inc
jne
add
leave
push
and
out
inc
iret
dec
inc
jle
pop
xlat
add
int3
sub
fmul
dec
stc
nop
jge
stos
and
out
sub
adc
mov
les
mov
cmp
fdivrl
sbb
dec
or
pop
mov
test
add
cmp
mov
mov
jle
sub
out
mov
mov
testb
push
jbe
push
int
aas
outsb
jo
rcrl
iret
stos
punpckldq
bound
xor
sbbb
inc
jmp
jle
sti
adc
xor
out
aaa
add
pop
insb
and
lcall
dec
or
xchg
mov
and
xchg
cld
dec
sahf
lods
jb
fadd
xchg
bound
xchg
iret
sti
lods
inc
scas
dec
add
movsb
push
dec
ds
xlat
outsb
mov
aad
adc
xor
dec
mov
inc
jns
dec
ret
test
ljmp
push
ss
stc
nop
cmpsb
outsl
test
outsl
push
addr16
bound
xchg
fldl2t
lods
sar
push
sbb
aas
stc
jmp
mov
pop
xor
data16
inc
xchg
repnz
mov
movsl
cmp
addr16
xor
or
lea
lea
dec
push
pop
add
sahf
inc
adc
sub
lcall
xor
push
js
out
lret
notl
cmpsb
cmp
mov
in
lcall
dec
shlb
fadd
push
or
scas
mov
ficompl
rdtsc
push
cmp
ja
daa
inc
push
test
pop
mov
divl
xchg
cli
pushf
pop
push
mov
andl
fwait
inc
mov
dec
aaa
mov
cmp
xchg
repnz
stc
cmp
cwtl
addr16
cmp
das
mov
lcall
outsl
mov
sbb
aam
call
dec
push
in
cmp
insb
aad
sahf
mov
sbb
lcall
cmpsw
fdivs
xor
xchg
aad
dec
sbb
push
inc
ljmp
movsb
mov
adc
push
pop
jecxz
stc
mov
popf
gs
xor
adc
or
scas
lret
mov
rcrb
subl
loope
mov
dec
adc
pop
add
fmul
movsl
jns
mov
or
ljmp
push
adc
cs
cli
cmp
sub
push
fdivrl
sahf
xor
inc
in
push
cmp
xor
into
insl
insl
add
add
addr16
and
ret
aaa
xchg
cmp
addr16
jnp
insl
jno
and
jns
inc
rcrl
jg
xchg
call
test
mov
into
popa
in
int
into
shl
xor
jmp
sti
xchg
jo
rcll
lcall
mov
mov
lcall
sbb
sbb
stc
jg
push
in
cld
or
je
fdivs
sbb
fmul
call
or
cmp
cs
lods
inc
xor
fldt
mov
add
and
xchg
hlt
add
out
xor
int3
icebp
insb
mov
mov
lock
stos
lcall
mov
loopne
aam
adc
repz
or
cmc
nop
add
testb
stc
push
push
mov
shrb
in
into
scas
push
in
jno
ss
sub
ljmp
icebp
aad
call
cmp
rol
mov
inc
call
dec
or
insb
sub
dec
xchg
xor
mulb
mov
rorb
repnz
imul
xor
data16
adc
js
testl
pop
icebp
xor
fcmovnu
pop
xchg
ljmp
mov
movsl
stos
lahf
xor
mov
push
das
sbb
test
imul
xor
gs
sbb
pop
sub
lds
lret
cld
addl
mov
cs
xchg
sub
sahf
mov
mov
add
adc
jb
xchg
push
pop
ss
out
xchg
inc
add
inc
scas
mov
movd
pop
imul
lds
imul
sbb
fists
or
and
in
mov
cmpsl
push
cltd
dec
mov
popf
aam
out
jmp
dec
mov
lock
mov
ss
sti
gs
sbb
inc
cmp
inc
icebp
fs
adc
iret
pop
xor
lods
insl
push
out
cmpl
int
nop
mov
push
push
icebp
divb
test
es
jge
cltd
sbb
pop
cltd
push
push
lods
iret
and
fimuls
ljmp
push
call
push
cmpb
jg
scas
out
cmp
mov
setp
int
push
add
cmp
bound
sete
loope
jecxz
mov
gs
jo
push
int
jecxz
loope
and
or
cltd
pop
mov
mov
test
mov
push
add
js
test
repnz
inc
cld
mov
shrl
nop
dec
sub
jle
cmp
and
xchg
cs
mov
shll
pop
xor
xlat
loopne
les
ret
xor
push
xchg
ret
call
mov
mov
dec
sbb
repnz
or
pop
mov
add
pop
movb
outsl
popl
data16
mov
jae
xchg
hlt
push
xchg
shrl
sarb
stos
lret
mov
inc
stos
es
jp
push
mov
je
clc
nop
hlt
adc
ret
scas
inc
scas
or
sub
push
xor
xor
jnp
imul
fs
sar
pop
repz
arpl
adc
xchg
aas
push
add
mov
mulb
aad
xorb
movsl
and
into
loopne
leave
fstpt
jb
sbb
or
nop
stos
hlt
pop
imul
sub
push
add
pop
es
mov
shll
mov
sbb
mov
mov
ja
js
stc
inc
lcall
and
mov
or
lods
inc
sbb
aas
ret
aas
jns
push
push
lret
idivl
xor
xchg
mov
sbb
lods
mov
mov
fidivs
sub
popf
test
add
cmp
xor
mov
pop
mov
jae
in
sbb
mov
jecxz
mov
sub
les
out
orl
adc
mov
jmp
dec
dec
or
adc
and
ret
jle
sub
mov
mov
lret
xor
jp
pushf
pop
iret
es
mov
pop
negb
mov
xor
sbb
mov
jbe
loop
or
movsl
mov
mov
fdivrs
mov
jmp
xorb
inc
cli
push
mov
lret
push
je
call
scas
mov
mov
pushf
clc
outsl
pushf
leave
fstps
pop
ja
jge
sub
arpl
repnz
je
scas
xchg
addb
cmp
cmp
out
outsb
push
in
movsl
mov
out
je
int3
rcr
jb
sub
adc
stc
sarl
bound
outsl
int
xchg
xor
imulb
dec
andb
cld
stc
nop
sub
pop
xchg
mov
mov
pop
push
ret
jne
mov
push
cmp
jae
jno
fwait
inc
loop
loopne
das
cmp
mov
bnd
jge
mov
mov
aad
inc
mov
sbb
inc
dec
sbb
xchg
dec
pop
call
cmpsl
inc
pop
mov
add
xor
sbb
nop
movsl
call
ja
lock
cmp
jnp
in
inc
push
test
cltd
aam
leave
cli
out
add
xchg
mov
sbb
or
fwait
dec
lods
pop
jge
stos
sbb
outsb
or
lret
data16
insb
cli
ret
mov
push
mov
dec
ja
scas
cmpsl
outsb
imul
ss
loop
mov
mov
xor
call
rcl
repz
repz
aam
icebp
xchg
adc
jne
push
cmpsb
pop
jb
aad
jge
or
inc
jecxz
xchg
call
jbe
mov
mov
fcmovnbe
push
xchg
movsb
push
xor
incl
adc
pop
jp
xchg
mov
ret
outsl
shlb
popl
or
addr16
jmp
leave
lods
jo
fists
and
jne
movsl
orb
fwait
cmp
sub
mov
jne
mov
push
or
jae
cmp
addr16
stos
dec
mov
pxor
pop
add
mov
push
in
rclb
mov
in
out
adc
pop
cmc
test
lret
and
cmp
dec
lds
clc
jae
data16
jns
cmpsb
sbb
clc
and
sbb
cli
xchg
jmp
cmp
push
aaa
mov
push
mov
dec
gs
lods
xchg
sub
jno
jg
aas
mov
pop
cltd
or
mov
mov
or
cmp
mov
adc
fcmovu
inc
or
inc
fs
popa
inc
addr16
int3
testl
sbb
add
dec
outsl
push
jle
or
movsb
adc
bound
sub
popa
mov
test
inc
sub
out
ja
xchg
movsb
sarb
lds
adc
xor
outsl
je
cmpsl
push
pop
push
into
cmp
mov
daa
shrb
jl
jl
addr16
in
mov
leave
xor
test
hlt
xchg
or
sahf
push
inc
movsl
js
jne
mov
jle
jl
xchg
inc
inc
cmpsb
out
in
sahf
mov
pop
insl
es
bound
andl
mov
dec
lea
fsubrs
and
lea
fdivp
imul
mov
lret
repnz
and
pop
addr16
test
jo
loope,pt
push
mov
shr
jge
mov
add
pop
pop
loopne
push
mov
jp
es
cs
pusha
sub
xor
jmp
lcall
sahf
lods
lods
fs
jmp
or
and
push
adc
iret
xor
ss
or
test
sar
fdivs
scas
mov
add
inc
nop
addr16
lret
xchg
and
sub
cmp
fdivrl
push
mov
sbb
pop
xor
cmp
dec
cltd
sub
cmp
mov
lds
push
in
aas
nop
imul
pop
cmp
stos
fisttpll
sarl
std
lods
inc
cltd
jmp
lret
xchg
ja
faddl
adc
into
push
mov
scas
jecxz
popf
or
out
roll
shlb
push
mov
mov
pop
inc
nop
outsl
mov
mov
movsl
pop
rorb
xchg
andb
push
inc
sarb
dec
in
lock
cld
ficomps
rcrb
dec
lahf
add
cmp
test
inc
adc
push
movsl
dec
stos
cld
xchg
sti
push
dec
push
das
cmp
in
stc
sub
stc
pushf
xor
sub
ljmp
sub
pop
jg
inc
lea
in
in
and
pop
jbe
add
rcrb
jbe
push
cmc
push
lret
push
mov
jle
xchg
mov
mov
outsb
or
pcmpgtw
and
jne
ficoml
cmp
pop
pop
imul
mov
icebp
xchg
divb
or
sbb
arpl
leave
xor
mov
cltd
outsl
dec
pop
fimuls
xchg
push
mov
add
push
xor
xor
je
xchg
into
sbb
push
sti
push
cmpb
out
sahf
call
adc
mov
inc
in
test
mov
sub
jae
dec
in
js
in
pop
xchg
leave
stos
xor
mov
ret
mov
jo
adc
aam
and
mov
inc
std
leave
lret
sti
jmp
mov
negb
imul
popf
xchg
pusha
fs
sti
xchg
xchg
or
push
dec
dec
sti
in
hlt
pop
cwtl
and
mov
fildl
xor
out
lea
int
add
mov
sbb
movsb
cmp
and
pusha
dec
push
je
out
aaa
dec
cmc
jae
data16
test
inc
pop
add
mov
enter
cmc
jmp
lahf
mov
rolb
sbb
cmp
aas
sahf
pushf
in
cmp
outsb
imul
test
push
daa
outsl
fstps
jae
xlat
aaa
imull
js
ret
sub
xor
inc
shlb
push
push
push
lods
add
push
mov
pop
scas
inc
mov
push
int3
sub
lods
cmpsb
sbbl
sub
sbb
sbb
mov
imul
lods
jae
mov
nop
cld
push
mov
imul
lods
mov
test
ja
inc
aaa
call
xor
out
jecxz
cmp
inc
pusha
inc
call
pop
mov
bound
cmpsb
test
pusha
idivl
push
jle
push
je
or
andb
or
filds
bound
cltd
mov
push
inc
mov
repz
fidivrl
push
pop
sub
pop
fdivrl
ljmp
pop
sub
imul
mov
xor
push
mov
push
pop
mov
xchg
cmp
or
sbb
outsl
sub
xlat
sbb
push
in
dec
loope
lret
clc
ja
dec
push
addr16
fwait
or
push
sub
mov
jbe
je
sarb
sbb
ret
pushf
movsl
in
cmpsl
lods
bound
cmc
jo
ret
call
adc
aas
or
sti
jne
and
js
adcb
fsubl
add
adc
fisubrl
sti
dec
adc
imull
lods
outsb
ret
addr16
popf
out
jno
jbe
aad
mov
pop
insb
vpsrld
or
test
pop
dec
inc
push
loop
ret
inc
pop
dec
xor
mov
rcl
mov
pop
and
lods
mov
pushf
push
iret
inc
inc
add
fnstsw
mov
dec
stos
xchg
sbb
jge
sbb
mov
out
mov
xchg
scas
lret
or
bound
cmp
add
adc
adc
lods
and
pushf
adc
add
mov
inc
cmp
subb
jns
add
add
mov
adc
and
scas
mov
jg
xchg
cltd
jmp
ja
mov
into
mov
xchg
dec
sbb
lret
outsb
mov
test
cmp
mov
or
cmp
sub
cmp
jns
mov
xor
xor
sbb
dec
dec
xchg
and
ret
mov
push
in
push
push
cmc
in
int
inc
pop
sbb
jecxz
adc
pop
and
sbb
fxsave
sbb
ja
sbb
and
push
push
pop
or
adc
aas
mov
loop
stos
xor
shll
pop
stos
add
test
push
sub
xchg
jo
mov
out
lret
mov
cmp
fisttpl
ja
int3
or
scas
and
or
into
xorl
imul
inc
mov
iret
sub
pop
and
mov
cmpsl
push
mov
xchg
outsb
and
movsl
outsl
or
add
push
inc
mov
out
lret
call
push
push
adc
jo
cmp
jp
push
cmc
in
mov
shrl
decb
push
push
xchg
inc
out
pop
cmp
fiaddl
xchg
xchg
add
dec
das
aaa
push
stc
mov
mov
jge
cmp
cwtl
sbb
jl
push
arpl
inc
into
pop
xor
and
or
lret
ret
jle
shll
and
cli
sub
add
or
or
mov
jns
push
fisubrl
xor
in
mov
xor
stos
adc
jae
cli
pusha
sub
and
lret
and
lock
in
gs
push
mov
loopne
mov
stos
repz
fists
stc
mov
rcr
ja
std
sub
test
push
xor
xchg
jns
xlat
add
add
mov
into
insb
xor
sbbl
inc
and
test
test
push
ror
testl
leave
push
cmp
fcmovu
xchg
and
popa
jl
sarl
add
push
push
in
xor
xchg
pushf
test
repz
aam
mov
add
inc
mov
jae
mov
or
adc
sbb
js
jno,pn
in
imul
outsl
add
push
insb
repnz
pop
adc
push
scas
movsb
inc
mov
pop
dec
and
pusha
or
xlat
sub
push
xchg
mov
es
or
sbbb
aas
adc
jo
inc
mov
push
push
movsl
cmp
ja
add
jnp
and
lret
ja
subb
fwait
push
mov
lret
dec
jbe
subl
jge
montmul
cmpsb
inc
popa
es
mov
iret
aaa
into
add
shll
push
cltd
dec
mov
in
mov
data16
shlb
cmp
movsl
test
leave
pop
hlt
sbb
mov
xor
cld
sbb
sbb
sar
inc
sbb
dec
arpl
mov
jecxz
leave
aad
mov
lret
je
mov
mov
cmp
jae
movsl
aam
xlat
aam
sahf
mov
fcmovu
jae
shr
arpl
jns
add
and
and
adc
mov
addr16
dec
and
in
mov
cmp
pop
mov
mov
sub
rcl
fldl2t
xchg
fmulp
fldcw
cli
movsl
dec
aaa
cmp
cwtl
sbb
pop
lret
in
scas
adc
das
hlt
mov
ret
adc
inc
mov
call
test
orl
lcall
jne
pop
addb
outsl
sbb
lahf
cmc
cli
pop
andb
dec
and
xlat
repz
scas
push
fwait
jbe
arpl
or
and
lea
into
call
or
and
mov
mov
subl
mov
sub
fldt
testb
push
push
xchg
lret
divl
cmp
or
cmp
inc
je
and
test
inc
enter
lds
test
pop
decb
push
jno
cli
es
and
rorb
arpl
jno
cmp
adc
mull
insl
sahf
and
ss
xchg
lret
adc
jb
mov
sbb
xor
and
cmp
add
push
pop
or
movsl
lcall
repz
dec
or
jbe
aam
or
orb
not
in
sub
push
sub
rcrb
fsubl
jae
shrb
imul
mov
xchg
jle
mov
js
cmp
cli
adc
cmp
mov
cmpsl
insb
sti
or
sub
and
and
repz
lea
in
mov
jle
push
mov
xchg
outsl
sub
pop
and
movntq
int
cmp
sti
clc
insl
leave
cmp
clc
mov
sub
mov
pusha
push
sarb
call
mov
ljmp
fisubrs
sbb
mov
out
out
adc
mov
and
cmpsb
push
in
sbb
inc
add
movhps
bound
cmp
push
mov
inc
add
mov
xlat
inc
popf
ficoms
ficompl
dec
cmp
insb
sub
mov
xchg
cmp
dec
imul
mov
clc
xor
xor
out
sar
push
outsl
fbld
xor
aaa
cmp
push
mov
inc
aam
sbbb
xor
ds
insl
cmp
jp
enter
mov
and
test
and
fbld
or
or
mov
mov
mov
incb
ret
or
sar
push
push
rcrl
push
in
addl
out
sti
xor
cmp
ss
sti
ljmp
lahf
lea
and
dec
in
fneni(8087
pop
push
je
or
jno
and
jg
lds
dec
cmp
adc
cltd
cmp
push
mov
enter
hlt
mov
std
inc
pop
and
or
and
mov
push
testb
lahf
hlt
push
mov
cmp
lahf
xor
push
mov
dec
orl
or
lcall
xchg
and
add
sti
pop
mov
pop
sbb
jp
dec
sbbb
popa
cltd
jbe
jecxz
cmp
jns
leave
lods
cmc
mov
gs
xlat
xchg
xor
std
in
cld
sti
test
pop
dec
nop
dec
cmp
jbe
add
jnp
ficomps
mov
out
mov
aaa
mov
mov
pop
scas
test
xchg
stos
or
leave
pop
cli
nop
das
ret
inc
pop
sub
pop
mov
fst
in
xchg
jl
cmpsl
mov
add
lcall
lret
sbb
outsb
loopne
out
mov
add
mov
mov
push
and
or
ss
out
pop
push
and
sahf
mov
js
call
call
mull
pusha
cmpsl
inc
aaa
push
jb
mov
ret
cmovg
ds
aas
mov
inc
dec
add
mov
pop
cli
inc
lea
daa
inc
xchg
lret
inc
loope
xor
pop
and
leave
loop
jbe
pop
imul
add
rorb
in
sbb
push
or
js
gs
cwtl
add
rorb
aas
sbb
jbe
dec
in
push
inc
mov
int
mov
adc
cltd
sbb
mov
pop
mov
rorl
aam
cmp
and
rclb
ja
je
ss
cmp
data16
gs
in
xchg
or
shll
fs
jbe
imulb
in
jle
loope
lock
mov
je
nop
mov
movsb
mov
jbe
adc
xor
mov
into
adc
or
or
cmp
insb
out
ficomps
pop
sbb
pop
repz
xor
mov
push
inc
inc
rcr
aad
push
or
mov
xor
adc
and
das
sub
or
mov
stos
xor
fcmovnu
push
js
rclb
and
inc
jno
jbe
loope
fs
mov
ss
subl
dec
or
lods
jae
inc
in
cmp
mov
fistpl
pop
ss
jne
ss
inc
pop
xchg
mov
lcall
or
add
sbb
out
jno
inc
arpl
leave
sub
pusha
sub
aad
test
repz
jl
xor
or
les
push
insl
or
push
ss
jle,pn
or
adc
out
bts
sub
cmpsl
fmuls
jge
fstpt
popf
xor
xchg
sub
das
testb
ds
jp
int
fadds
or
sbb
pop
std
and
lds
inc
pop
pop
inc
lcall
inc
pop
dec
sub
sbb
jp
les
clc
cltd
sub
sarl
frstor
mov
sti
pop
insl
lods
xchg
sbb
negl
in
mov
add
sub
test
adc
or
test
mov
stc
in
mov
sub
xchg
inc
xchg
add
test
mov
jle
sarl
jmp
jne
and
in
orl
in
in
ret
sbb
cwtl
inc
cmp
popa
lcall
stos
and
push
ljmp
out
sub
and
leave
filds
mov
lods
in
push
jp
int
dec
or
js
pop
sub
shrb
push
imul
push
and
in
gs
mov
daa
xchg
daa
stos
out
mov
cmpsb
inc
mov
jmp
ljmp
jnp
aad
test
lods
pop
mov
mov
push
aad
and
outsb
daa
test
mov
lods
fmull
adc
or
cmp
icebp
aaa
nop
dec
movsl
popf
imul
das
sbb
xchg
out
sti
repz
lret
cmp
jp
in
lahf
repnz
test
lcall
or
fidivs
mov
leave
leave
xchg
inc
scas
aad
push
sbb
rol
repz
jmp
jmp
cwtl
push
and
adc
pop
shlb
mov
or
daa
rcl
jle
in
pop
mov
mov
sbb
push
lods
jae
shrl
xchg
dec
push
pop
push
icebp
movsl
fsts
pop
scas
into
stos
loope
out
inc
fnstenv
iret
mov
inc
stos
jl
dec
sub
jae
in
add
or
lcall
mov
pop
adc
sete
pop
and
cmp
and
lahf
adc
movsb
xor
sub
aas
adcb
mov
out
adc
lret
cmp
push
jecxz
in
xor
mov
and
xchg
or
dec
and
inc
fwait
lcall
std
rclb
mov
push
and
orb
xchg
pop
scas
cmp
cmp
mov
ja
mov
les
je
and
lret
sti
mov
scas
daa
js
inc
push
idivb
cmp
in
add
or
dec
push
sub
in
push
jle
mov
gs
xor
mov
mov
mov
lret
lret
in
jecxz
mov
fildll
cmp
push
aad
fsubs
nop
dec
les
cmpsb
pop
insb
rorb
add
jp
bound
cmp
scas
cmc
in
insb
incl
lret
movsb
or
ret
in
or
das
rcrb
ret
jp
mov
popa
inc
mov
smsw
lcall
fwait
jb
aad
aam
loope
popf
stc
lcall
jecxz
iret
pop
fnstenv
pop
push
pop
adc
divl
dec
or
cs
fisubrl
jecxz
adc
movsb
and
out
push
jns
lahf
stos
xchg
rcrl
xor
rcrl
jnp
mov
fbstp
adc
push
inc
push
data16
int
lret
das
pop
push
mov
pop
aam
pusha
fsub
movsb
xchg
sub
cmp
xchg
pop
and
push
inc
or
jg
mov
jns
mov
sub
cmp
popl
pop
outsb
xchg
mov
scas
jns
sub
xor
sub
add
fsts
and
push
xor
ss
ja
bound
sbb
shlb
mov
jp
push
pop
jp
jge
xchg
add
icebp
movsb
push
sbb
jl
adc
jle
jp
bound
cmpsb
push
push
insl
adc
pop
lahf
mov
mov
mov
mov
jbe
fisubrs
insl
mov
inc
pop
xchg
mov
xor
and
pop
rep
xchg
int
scas
test
aaa
mov
cmpsb
cld
dec
or
add
lds
cmpsl
in
xor
add
jns
aam
or
adc
fildl
xor
subb
cmpsb
das
mov
push
jae
or
sbb
in
sbb
jae
cmp
mov
mov
movsl
adc
sahf
xor
popf
lods
xchg
adc
lea
mov
sub
lods
popa
in
pop
cld
rorl
xor
rorb
aam
inc
andb
shlb
test
xchg
scas
negl
cmp
mov
mov
mov
lock
dec
and
or
cmpsb
push
fwait
mov
lods
xor
fs
ror
cmp
sbb
das
add
shl
add
xchg
inc
inc
cmp
jmp
test
sbb
imul
addr16
sub
mov
pop
sbb
fs
adc
ljmp
test
mov
dec
andb
cltd
jo
mov
sub
inc
xlat
jle
pop
sbb
jecxz
xor
cmc
and
fscale
or
fld
bound
mov
pop
out
cld
outsb
add
aaa
mov
and
pop
xor
popa
sbbl
cmp
xchg
dec
test
xchg
push
xor
mov
xor
repz
jbe
jns
push
test
dec
rolb
jne
adc
lret
inc
xlat
mov
subb
fsubl
pop
add
into
shlb
cmpsb
das
xchg
lea
jo
in
cs
lods
and
pop
fcos
dec
ds
mov
loopne
stc
push
push
fstpt
mov
outsl
fdivs
insl
xor
push
aad
xchg
je
fstl
xchg
lods
repz
mov
shll
mov
and
rol
je
test
cmp
idivb
xor
cmpsl
add
mov
dec
sbb
popf
cmp
scas
mov
or
add
daa
shrb
pop
clc
pop
pop
jp
lret
mov
call
out
push
hlt
cmp
ret
clc
mov
lea
sub
fcompl
sbb
cmpsl
sub
lahf
nop
pop
jo
bound
and
addps
test
cmp
xchg
pop
shl
push
incl
fwait
cwtl
add
and
pop
push
cmp
jg
movsl
cmc
xchg
loopne
lcall
pop
sub
jbe
fsubrs
jg
test
dec
imul
ljmp
andb
aam
hlt
fisubl
es
cmp
inc
imul
or
fs
adc
dec
add
jmp
movsb
mov
jbe
lds
mov
mov
xchg
cli
inc
pop
or
in
mov
iret
push
mov
jns
adc
lea
test
ret
out
dec
and
fst
xchg
dec
les
ret
cmp
into
mov
pop
sub
leave
push
test
dec
scas
sub
mov
aad
mov
or
xchg
mov
mov
outsb
and
xchg
dec
mov
popf
dec
es
rclb
cmp
xchg
push
push
in
out
adc
mov
xlat
push
or
test
cmovp
cmpsb
jns
outsb
imul
xchg
in
jge
mov
push
mov
mov
repz
mov
xchg
adc
sub
ror
and
lods
into
mov
cs
pop
mov
pop
test
sbb
aas
jg
fnsave
inc
push
pop
ja
push
xchg
fwait
enter
fnstcw
test
mov
lret
xchg
fs
mov
xchg
and
loope
jo
les
dec
jmp
jo
dec
sbb
mov
int3
mov
addb
cmp
push
es
jne
into
xor
mov
dec
test
nop
push
popa
ret
nop
xchg
das
xchg
jecxz
insb
jg
aad
inc
mov
out
mov
and
pop
mov
ds
cltd
inc
mov
adc
pop
lret
jl
push
pop
cltd
jg
fists
add
popf
js
sti
mov
test
xacquire
dec
pop
sub
ljmp
imull
fsts
adc
pop
inc
roll
shlb
mov
mov
dec
hlt
fucomp
test
cwtl
jl
scas
rcr
mov
dec
mov
dec
fimull
adc
sub
xor
stc
xchg
aaa
or
ss
flds
pop
daa
enter
iret
addb
and
in
add
adc
ja
xor
sahf
cwtl
dec
test
test
mov
xor
test
push
shlb
mov
out
add
jp
push
mov
jbe
jne
pop
mov
stos
lcall
das
rolb
sbb
rcrl
push
sti
xor
fbstp
xorl
add
push
xor
jl
out
mov
sub
mov
xor
dec
mov
scas
and
aaa
fsts
mov
jl
add
lret
js
mov
scas
imul
sub
jae
daa
imul
decb
dec
and
xchg
mov
pop
ljmp
mulb
sub
fadds
jecxz
sbb
int3
in
and
sub
adc
shrl
push
nop
dec
dec
or
faddl
add
stos
xchg
aam
pushf
inc
or
push
icebp
insb
push
pusha
ljmp
aad
ds
xchg
sbb
lods
add
xor
ret
scas
push
pop
mov
into
xchg
sub
testl
xchg
mov
adc
push
mov
out
test
sarl
stc
gs
rcrl
scas
push
daa
pop
mul
cmp
lock
mov
pop
inc
push
loop
push
mov
add
mov
fldt
negb
mov
push
je
jnp
cmp
xchg
push
rclb
cmp
arpl
repz
std
cmp
idiv
add
jge
or
and
pop
mov
add
hlt
mov
mov
gs
ret
or
lcall
leave
jp
out
popa
adc
cwtl
rclb
xor
or
lahf
lock
imul
mov
adcb
jae
add
pop
cmpsb
dec
aad
fnsave
icebp
adc
idivb
mull
mov
xchg
jnp
les
inc
fwait
jno
js
aas
jp
mov
pop
decl
lahf
adc
in
nop
sub
adc
es
xor
or
shrb
pushf
mov
rcrl
pop
add
insl
shll
adc
adc
adc
sub
mov
pop
bswap
jns
add
dec
es
insb
lods
fistpl
rcrl
push
sqrtps
aas
lahf
jnp
cld
pusha
outsb
aad
stc
push
out
mov
lret
aad
out
cld
daa
mov
scas
popf
ret
stos
es
test
int3
icebp
les
rorl
shl
mov
mov
cmp
and
fldt
insl
lea
add
dec
xlat
std
les
test
inc
mov
lea
mov
pop
adc
stc
cmp
cmpsb
mov
jle
push
das
cmp
mov
inc
sub
xor
rcll
pop
lock
icebp
add
pop
xchg
sub
stos
jle
push
daa
and
in
jmp
jmp
and
mov
shr
mov
sbb
pop
jge
stos
xchg
sbb
mov
and
or
jae
mov
cmpsb
fildll
mov
dec
pop
testl
jge
sahf
inc
aad
mov
fwait
je
fdiv
adc
mov
sub
lods
in
pushf
and
dec
pushf
scas
loope
test
arpl
mov
push
jno
bt
imul
cli
test
cmp
inc
adc
and
notl
js
aam
mov
pop
xchg
test
or
cmpsl
cmp
xor
les
lea
lods
adc
fidivrs
mov
pusha
xchg
lods
sub
rclb
repnz
pop
sub
or
mov
fisttps
jns
imul
pushf
xor
sbb
cmp
jns
pop
nop
pop
mov
xchg
pop
cs
imul
add
jge
push
jbe
jno
mov
rclb
imul
push
mov
dec
fldcw
cli
aas
sbb
dec
dec
sbb
popf
in
sub
mov
xchg
iret
lods
imul
sbb
xor
loopne
or
fistps
jnp
jecxz
loope
mov
adc
sub
push
outsl
mov
sub
pop
lahf
cld
inc
push
push
jp
push
mov
adc
fwait
mov
and
mov
xchg
jmp
mov
rcll
in
pop
jg
or
mov
push
int
ds
pop
int
inc
test
scas
mov
fnstenv
lret
cmp
xchg
dec
pop
addr16
repnz
mov
stc
data16
inc
pop
xlat
scas
sub
lods
cmp
push
lods
mov
sub
push
test
fnstenv
fstps
cmpsl
out
pop
and
lahf
push
push
xchg
hlt
mov
xor
add
xchg
dec
psadbw
jge
push
dec
int
sahf
or
cs
insl
insl
lods
inc
push
add
push
fcoml
jp
inc
ja
sahf
fs
jmp
pop
mov
enter
push
jae
loopne
push
jmp
pop
or
jmp
mov
loop
xor
inc
ds
cmpsb
push
jmp
jmp
push
add
pop
xor
xchg
inc
cmp
mov
adc
push
pminub
xor
shrl
sub
enter
bound
imul
mov
sbb
mov
std
jmp
aaa
push
dec
int3
add
stos
out
add
mov
ffree
jge
sbb
pop
out
dec
jmp
aaa
jl
imul
fwait
ret
or
cmp
ljmp
test
repnz
js
sbb
sarl
in
cmp
jge
push
mov
pop
je
sbb
sbb
dec
cmpsb
sbb
shl
xor
inc
pop
icebp
dec
shrb
orb
ss
or
nop
pop
push
mov
sub
cmc
add
loop
inc
out
jge
cltd
inc
mov
filds
push
pop
mov
jbe
aad
aaa
hlt
adcl
xor
pop
and
xor
fidivrl
sub
rcr
sub
mov
xchg
test
scas
aas
sbb
sbb
cmpsl
out
roll
mov
mov
je
hlt
ret
xor
and
pop
mov
cmp
cltd
sbb
jno
mov
sbb
cmp
dec
loope
inc
fimull
cs
nop
pushf
outsb
add
xor
scas
cmpsl
aam
nop
and
es
jb
jno
xchg
cmc
mov
int3
popa
or
icebp
in
imul
xsha1
cmpsb
or
jbe
popa
mov
iret
lea
cmp
mov
fistps
inc
cmp
and
scas
xor
and
les
push
fwait
sbb
out
mov
adc
lock
xor
test
ljmp
pushf
mov
sbbl
cmp
roll
scas
cmp
sub
sub
or
mov
adc
pop
and
xchg
shrb
fwait
xor
push
inc
xor
mov
inc
cmp
pop
sahf
pop
and
jp
clc
and
xchg
lods
cmc
mov
les
das
insl
xchg
shlb
or
cmp
jns
fwait
test
xlat
pop
mov
push
adc
mov
xor
sbb
and
mov
fisubl
sbb
sti
sbbl
mov
dec
jnp
jns
push
adc
aam
jnp
in
out
repz
jecxz
dec
lcall
icebp
dec
dec
mov
fisubrl
cmp
add
bound
pop
mov
xchg
jecxz
push
rorb
xorb
push
inc
mov
js
jno
arpl
adc
arpl
cs
aas
adc
pop
lods
pushf
jae
shll
jns
add
push
inc
psrad
lret
mov
lds
cli
mov
cld
outsb
mov
pop
rclb
cmpsl
ret
and
leave
les
push
cmpsl
jne
xchg
mov
cs
push
mov
leave
sbb
dec
test
ret
adc
test
pop
sbb
adc
clc
xor
lret
or
stc
aad
xlat
sub
lea
xchg
mov
adc
fdivrs
iret
sbb
dec
jecxz
push
add
cmp
cmp
push
out
push
rcl
aas
jmp
cmc
inc
jecxz
loope
scas
std
cmp
jecxz
adcl
or
ret
mov
shlb
jmp
mov
or
mov
in
cmpb
fcmovbe
popf
or
xor
or
popf
insb
and
lret
add
xor
rcll
jns
cmpsb
loop
fdivs
out
in
mov
clc
into
or
fidivl
or
lea
insb
loopne
sahf
je
and
add
xor
pop
ds
loope
gs
pop
scas
lds
push
add
ss
cld
sbb
bound
pop
cmp
xor
sbb
jnp
jecxz
bound
outsb
rcll
pop
rcpps
cmpsl
fnsave
mov
mov
jg
sbb
push
pushf
jge
mov
add
and
add
or
mov
xor
lock
xor
cmp
fsubrs
inc
xchg
mov
add
sti
ljmp
cmp
andl
lods
jmp
sub
into
sub
aas
xchg
in
sti
cmpl
addr16
xchg
enter
push
jne
mov
jg
xchg
xor
cwtl
das
loope
fsubl
inc
xor
push
adc
mov
cmp
xor
dec
lahf
shrl
lahf
mov
xor
mov
cmp
scas
mov
cltd
ret
shrb
cmp
inc
push
mov
add
cmp
int3
outsl
xor
andl
js
mov
jns
mov
or
mov
push
test
push
lds
and
or
mov
push
mov
or
fs
dec
mov
mov
and
mov
or
nop
cmp
lds
sbb
pop
sub
xchg
cmp
daa
pop
xchg
mov
jno
mov
clc
cmpsb
sbb
add
movsb
sbb
fadd
xchg
outsb
sub
outsl
or
pusha
xchg
xchg
cmp
repz
je
lock
jnp
aad
inc
fnsave
xchg
jbe
jmp
leave
and
inc
gs
js
lock
cltd
orl
jno
or
icebp
pop
jmp
xchg
mov
inc
ja
ds
sbb
pop
pop
dec
cwtl
inc
enter
mov
xchg
push
sub
adc
movsl
outsb
out
imul
mov
pusha
add
sbb
mov
xor
add
push
idivl
sub
test
stos
and
or
jl
cmc
pop
inc
insb
in
mov
inc
gs
sbb
add
lock
jbe
mov
cwtl
cltd
mov
fwait
mov
int3
mov
pop
and
orb
out
mov
daa
in
and
and
addr16
push
scas
mov
inc
inc
push
jae
cmp
jns
push
jne
adc
add
lahf
jo
mov
cmp
xchg
and
pop
adc
mov
sbb
push
ds
cmp
mull
data16
mov
lahf
aad
push
push
jmp
lahf
xchg
jo
lahf
pushf
pop
mov
mov
jne
inc
push
xor
cmp
popf
mov
sub
imul
divl
and
ja
andb
test
shr
daa
mov
leave
add
xchg
and
mov
push
bound
or
inc
into
adcb
add
xchg
xor
movb
jle
push
test
clc
cmpsl
or
adc
mov
into
jle
fnstenv
movsb
out
push
cmc
xchg
inc
pop
pop
sub
test
xor
insb
test
sahf
pop
jmp
popf
inc
cltd
pop
sbb
pop
stos
loope
insb
flds
xchg
data16
push
cwtl
mov
push
scas
xor
sub
push
aad
mov
mov
fwait
or
push
loop
decb
add
mov
and
lret
or
adc
scas
jp
add
mov
and
mov
inc
fs
enter
fnstcw
and
rcrl
or
pop
es
pop
inc
cli
inc
mov
repz
hlt
aad
ret
ret
mov
fs
ret
outsl
push
mov
cltd
or
jp
xchg
push
add
gs
arpl
jne
out
test
sarl
or
xor
push
xchg
mov
rcrb
pop
push
in
dec
fs
inc
aam
xchg
outsb
outsl
aam
mov
imul
lret
dec
sbb
push
test
inc
sahf
bound
jne
xchg
push
mov
push
sbb
ret
jge
nop
aaa
pop
imul
scas
jns
add
out
pop
jmp
ss
enter
push
movsl
push
sbb
lods
repz
iret
aas
out
rolb
addr16
xchg
jno
into
cmc
lods
xchg
and
mov
lods
movsb
and
mov
push
inc
arpl
scas
mov
and
sarb
push
mov
jo
sbb
xchg
leave
es
loop
icebp
adc
mov
dec
mov
stos
mov
repnz
shrb
outsl
adc
xor
mov
push
and
bound
xchg
sub
sbb
test
ja
test
cmpsl
push
int3
lods
inc
testb
cltd
jecxz
test
mov
jbe
in
and
ljmp
xorb
test
dec
pop
cmp
movsb
pop
mov
je
pop
out
aaa
int
cld
fsubrl
arpl
mov
and
pop
dec
pop
scas
out
test
inc
popf
stc
repnz
jbe
jno
sub
cwtl
xor
rcrl
mov
push
mov
imul
jbe
jbe
add
and
xchg
cltd
add
cld
inc
and
sub
pop
inc
dec
bswap
repz
and
mov
sub
popf
rcrl
leave
pop
outsl
lcall
jns
xor
mov
pop
sahf
out
adc
adc
dec
addl
mov
sub
das
out
sbbb
mov
xor
push
repnz
xchg
pop
cmp
and
sbb
loop
pop
stos
cwtl
ret
mov
lods
test
push
and
loop
jne
int3
jg
pop
mov
xor
addr16
xor
mov
sub
adc
jno
pop
push
xor
mov
stos
xorb
jb
incl
loope
pop
std
je
sbb
les
push
bound
std
ljmp
outsl
mov
adc
icebp
mov
test
xor
aad
insl
xor
jmp
jne
cmp
push
jmp
cmc
adc
xor
or
fwait
push
xor
mov
jo
call
xor
fdivrs
scas
and
cmp
fcmovb
pop
xchg
adc
adc
repz
add
pop
imul
in
sbb
push
mov
or
ds
xor
icebp
push
push
mov
sub
push
dec
aam
lods
jg
add
jl
fldcw
fwait
aad
notl
fnstsw
pop
cmpsl
nop
adc
daa
mov
cltd
int3
mov
je
imul
test
cs
pushf
mov
fidivs
add
iret
fisttpl
or
stos
add
movsl
cld
pop
pop
fdivrs
mov
fidivs
mov
and
pop
mov
sahf
stos
inc
shrb
inc
push
in
stc
push
cs
push
aas
int3
xlat
jl
aas
fiaddl
outsl
cmp
cltd
push
xchg
sbb
test
sub
je
inc
jnp
leave
daa
push
mov
icebp
test
adc
xor
sti
jp
sub
fdivs
xchg
lret
pop
movsb
jmp
and
imul
jmp
jae
ljmp
sti
jne
filds
push
scas
pop
int
add
xchg
sub
adc
jge
cmp
and
jne
aad
mov
cs
scas
push
inc
fsubrl
arpl
or
xchg
mov
ret
fistpll
jge
jg
cwtl
das
xlat
mov
add
sub
and
hlt
ds
and
xor
shll
push
push
mov
mov
push
mov
adc
mov
das
mov
fisttps
xorb
jecxz
add
or
add
mov
fldl
adc
inc
push
jmp
adcb
sti
es
scas
sahf
or
imul
jg
daa
movsl
pop
xor
fisubs
dec
cmc
fwait
xorb
andb
or
cmp
ljmp
les
jb
pushf
aas
or
pop
cli
pop
mov
xchg
pushl
mov
push
outsl
lret
mov
mov
mov
or
rclb
call
shlb
push
lahf
jbe
xchg
dec
pop
xchg
lock
mov
jmp
aaa
jl
add
nop
pop
int3
lcall
fcompp
sub
aam
fbld
test
leave
rol
addr16
xor
sub
js
jb
gs
fs
shrb
sub
leave
mov
cmp
push
arpl
add
les
xlat
cmp
adc
ljmp
or
test
cmp
outsb
hlt
dec
mov
xchg
cs
jmp
sub
add
add
sub
cmpsb
lock
repnz
subb
lods
mov
mov
jno
jl
lcall
movsl
add
ret
mov
add
jo
cs
aam
and
insl
sbb
dec
icebp
cmp
popa
mov
mov
add
pop
push
fstl
call
mov
xor
popa
enter
cld
push
daa
ljmp
subl
pushf
xchg
dec
pop
icebp
xchg
or
inc
and
add
push
jb
xor
lret
and
xchg
mov
add
jecxz
jnp
inc
sti
fwait
mov
clc
rolb
push
ds
sub
sti
xor
dec
fsubl
xor
mov
adcb
aad
jne
adc
ss
adc
adc
je
aam
and
pushf
xor
add
repnz
test
pop
mov
lods
lea
enter
mov
aaa
dec
xchg
test
in
out
sub
sbbb
pop
cmp
pushf
fs
lods
xchg
std
cmp
jns
mov
popa
into
hlt
fwait
insb
add
rcrb
push
mov
xor
les
inc
lods
pop
inc
movsb
mov
push
and
icebp
push
xor
add
pop
in
sti
and
push
lods
std
push
or
inc
lods
cmp
and
pop
bsf
mov
fcompl
pop
or
addr16
jmp
std
inc
cs
into
outsl
push
test
lret
sub
inc
dec
cli
xor
push
ret
loope
xor
fbld
in
sti
sbb
dec
push
arpl
out
inc
cmp
inc
xchg
cmp
scas
lods
lret
in
rclb
test
mov
xchg
mov
add
mov
mov
fidivrl
in
lret
add
repz
iret
jns
add
push
add
or
fwait
scas
xor
rcrb
dec
lret
cmc
shrl
in
pop
ror
push
sti
int3
lret
and
sbb
jge
stos
fs
inc
jnp
or
lahf
push
scas
sub
push
pop
jb
jl
push
fidivl
add
dec
idivb
fistpll
fsubrl
xlat
push
jbe
in
stc
stos
jecxz
fcmovnu
leave
test
push
push
mov
push
jbe
mov
and
scas
adc
cmp
cs
inc
imul
fyl2x
test
out
loopne
xor
fcmovu
xchg
adcl
xor
ljmp
fcmove
mov
test
inc
lret
xchg
stos
ror
pop
shrb
bound
in
int
xlat
aad
ret
out
add
pop
dec
jl
dec
loope
call
imul
roll
xor
cmc
jge
xchg
jl
lods
add
push
inc
push
push
addr16
jae
push
pop
and
in
push
jp
push
scas
inc
mov
ret
xorb
popa
mov
inc
arpl
push
jge
fsubl
pop
mov
movsb
add
or
inc
adc
mov
or
aad
mov
pop
cmc
pop
scas
add
push
iret
mov
jp
jns
or
mov
xchg
adc
sbb
mov
inc
push
shrb
xchg
and
int
or
pushf
adc
dec
data16
mov
xchg
into
jg
and
push
jmp
dec
je
fdivs
inc
stos
xchg
add
inc
stos
xor
filds
push
icebp
mov
stos
jle
add
inc
jmp
dec
xor
mov
test
movsb
out
mov
dec
in
aaa
push
pop
mov
insl
mov
mov
push
ljmp
inc
lea
mov
mov
sbb
adc
mov
push
shlb
aad
cld
pop
cli
pop
cmp
xchg
mov
popa
fsubs
outsl
push
addr16
aaa
jns
push
lea
call
or
adc
lret
mov
movsb
jecxz
jecxz
movsl
adc
pop
inc
mov
add
jge
push
into
and
mov
or
pop
xor
mov
jno
lods
jno
lock
testl
and
and
push
shl
lahf
dec
mov
mov
pop
cmp
pop
fsubr
cmp
jl
jnp
inc
or
js
mov
ljmp
pop
xor
out
outsl
mov
mov
mov
inc
fwait
or
jne
cmp
int
out
dec
frstor
imulb
shr
jbe
xchg
xchg
into
fists
jns
sbb
lahf
loopne
dec
sarb
aam
negl
mov
jecxz
xchg
cmp
cmp
cmp
cmp
sbb
leave
mov
aas
and
push
inc
sbb
xor
xor
mov
dec
push
inc
dec
lret
add
in
dec
je
jne
cmp
and
and
sar
aam
cltd
sbb
cltd
add
data16
sahf
adc
shrl
mov
dec
ss
sbb
mov
lcall
mov
jmp
dec
arpl
inc
inc
movsl
dec
cmp
push
shrb
push
int
pop
mov
mov
push
bound
adc
add
and
fstpl
inc
cltd
or
sbb
fistpl
stos
cmp
daa
fidivl
adc
clc
jp
push
fidivl
sbb
mov
rclb
test
cmp
mov
pop
mov
jbe
mov
push
pop
lods
sub
les
adc
loopne
in
std
jo
mov
je,pn
movsb
cmp
xchg
add
jecxz
aaa
push
scas
add
outsb
cmp
aad
clc
rolb
arpl
pusha
popf
adc
stc
sbb
popa
cmpb
pop
mov
loopne
loopne
shl
ret
test
xchg
bnd
outsb
movsl
xor
jbe
inc
sub
lods
push
adc
call
enter
leave
in
xor
bound
iret
xchg
mov
add
add
mov
enter
push
rcll
or
cli
out
mov
add
hlt
sbb
repz
icebp
dec
pop
iret
fiaddl
dec
add
aaa
mov
ljmp
sti
shl
adc
ja
gs
int
mov
adc
jno
jmp
std
lcall
cmp
mov
jb
sti
sub
push
lods
inc
int
xchg
jl
xor
sbb
pop
stos
push
cmp
mov
clc
jae
push
xor
rol
sbbl
or
push
nop
outsb
rorb
shlb
bound
xor
or
sub
sub
ljmp
adc
bound
sbb
pop
mov
dec
push
je
int3
aam
add
lahf
ss
les
adc
or
pushf
cli
xchg
push
shll
rcl
mov
popa
out
popa
pop
cwtl
imul
xor
push
mov
cmp
sub
das
pop
sarb
icebp
mov
cld
mov
scas
setp
jl,pt
test
loop
popa
repnz
daa
mov
js
mov
dec
int
cs
xor
hlt
or
cmp
lock
iret
push
add
xchg
pop
lret
cmp
mov
adc
pop
push
arpl
mov
jo
out
out
dec
xchg
xchg
movsb
cs
les
push
push
sub
mov
les
movsb
lods
cmp
push
lods
or
push
rcrl
cmpb
xor
push
or
mov
mov
and
xchg
and
test
pop
enter
mov
jb
into
lahf
movsb
cmp
std
pop
xor
mov
testl
aad
xor
shll
pusha
fisttps
or
cmpb
gs
nop
pop
mov
shl
mov
dec
fwait
stos
inc
daa
sub
aam
stc
and
stc
je
bound
pop
call
pop
stos
stos
cmpsl
hlt
addr16
aas
rclb
int3
scas
cltd
dec
in
push
dec
test
into
loopne
inc
and
push
cli
mov
cli
xchg
xor
xchg
jmp
roll
stos
lret
xchg
das
call
shrb
cmp
lds
inc
incb
arpl
pop
icebp
inc
clc
out
push
or
jmp
aam
mov
cmc
andb
enter
into
gs
push
out
lds
jge
test
aam
fldl
enter
popa
out
into
fisubrs
jbe
fldcw
les
fs
in
das
cmp
pop
in
test
inc
fisubrs
or
jno
sub
subb
fadds
cmpsb
mov
inc
repz
adc
push
pop
pop
ja
sbb
push
add
and
arpl
test
andl
xchg
imul
lods
xor
mov
lcall
out
mov
mov
sbbb
scas
out
dec
hlt
sbb
out
push
std
jp
pop
mov
outsl
sub
ret
outsl
xchg
pushf
loope
dec
jle
xchg
daa
popf
push
jns
sub
add
in
decl
prefetch
xor
jmp
popa
insl
ja
jmp
push
shll
pop
fistpll
ljmp
jge
aad
push
jnp
adc
divl
aas
les
adc
mov
adc
dec
push
testb
xchg
cli
imul
pop
or
jne
inc
adc
pop
cmpsl
ds
push
jmp
std
xchg
jg
cltd
cmp
dec
mov
fcoms
pop
fdivrs
pop
or
fxch
sbb
and
xor
and
mov
xorl
inc
xlat
jle
mov
sbb
mov
in
xorl
push
sub
jmp
push
in
aam
mov
out
in
mov
jp
sti
test
das
ret
or
nop
jge
mov
xchg
push
mov
xchg
imul
mov
nop
mov
mov
and
sahf
adc
adc
jno
adc
clc
pop
xor
clc
into
cli
fcomps
imul
push
in
add
cmp
add
pop
cltd
mov
mov
pop
push
leave
xor
arpl
sbb
xor
sub
dec
mov
mov
stos
inc
xor
pop
test
jb
in
movsb
cmp
push
fsubrp
pushf
repz
gs
sub
cwtl
movsb
popa
adc
mov
jmp
int
sbb
outsl
jb
ret
cmp
cmp
les
pop
outsb
sbb
mov
cwtl
mov
adc
dec
xchg
in
sti
sti
in
mov
adc
pop
sub
xchg
imul
sbb
out
cmpsb
inc
inc
les
stc
test
xor
jecxz
mov
jno
rclb
hlt
in
ljmp
packsswb
cmp
popf
mov
ret
add
xor
lods
mov
sbb
lcall
push
xor
decl
inc
push
or
andl
sbb
cmp
dec
pusha
mov
xchg
insl
es
mov
push
enter
outsb
jmp
or
enter
xor
fiaddl
mov
test
mov
aam
pushf
roll
test
rcl
aam
add
dec
insl
stos
add
dec
or
and
orb
popf
dec
lods
lods
push
mov
fs
in
jbe
lea
xlat
mov
jl
enter
pop
cmp
iret
sbb
shll
and
outsb
icebp
jo
bound
cmpsl
sub
in
insb
jge
xchg
stc
push
adc
push
and
sahf
cmp
cltd
jb
adc
int
fadds
out
fistl
into
into
push
or
push
sub
outsl
popl
leave
mov
mov
mov
data16
outsl
mov
ret
mov
fsts
adc
loope
mov
push
mov
add
add
adc
push
loopne
push
mov
ret
xlat
ljmp
push
icebp
mov
xor
pop
cltd
mov
or
ret
xchg
daa
mov
dec
pop
mov
xchg
inc
sub
mov
inc
xchg
ss
pop
ja
call
mov
outsl
pop
push
sti
xchg
mov
xchg
fsub
cmc
sub
je
add
sbbl
loopne
rcrb
imul
and
movsb
lds
add
ret
or
mov
shrb
jmp
sbb
psllw
inc
fisttps
xchg
push
jecxz
inc
mulb
or
enter
cltd
incb
sbb
loopne
lcall
cltd
mov
cld
outsl
pushf
pop
fsubrs
mov
imul
in
or
sbb
inc
mov
push
aam
xchg
pop
scas
shlb
cmpsl
dec
cmp
jo
jae
inc
sub
pop
scas
dec
dec
jecxz
jp
mov
or
xchg
sub
aad
sub
enter
pop
out
mov
adc
das
jle
sbb
shl
rcll
inc
fbstp
xchg
rcrl
enter
sti
in
mov
jg
andl
push
push
pop
xor
shl
shrl
inc
sub
js
lret
int3
and
push
lahf
push
cld
mov
push
leave
sti
xchg
mov
aad
mov
jge
mov
jb
rorl
add
iret
dec
cmp
hlt
test
lret
lock
sub
jle
dec
xchg
popa
lahf
inc
fmulp
pop
cmp
cld
jmp
aaa
sbbl
pop
mov
mov
daa
dec
leave
push
les
adcb
or
jg
sub
dec
or
subb
mov
lret
mov
mov
mov
sbb
push
sbb
dec
jecxz
dec
xor
jmp
add
jle
insb
shlb
es
push
or
fucomp
mulb
lods
add
push
pop
fnsave
xchg
mov
iret
in
jge
pop
out
mov
pop
jbe
pop
cmp
push
add
fcmovb
jnp
outsl
into
pop
in
test
js
jne
notl
push
xor
sarl
push
ljmp
jno
mov
pop
lahf
test
arpl
push
sbb
les
repnz
lahf
mov
dec
bound
inc
lea
jns
push
xor
or
lret
inc
xor
mov
lock
xchg
mov
fsubrl
test
out
lods
movl
popa
leave
rcrb
repnz
pop
ss
cwtl
out
repz
es
repz
xorb
in
sub
xchg
fldz
and
pop
int
cld
sbb
dec
mov
rorl
je
ret
dec
scas
push
sub
push
dec
mov
or
insb
xchg
es
mov
xchg
lods
dec
jecxz
jmp
inc
add
arpl
iret
sub
insl
ljmp
lret
push
add
out
test
mov
xchg
mov
push
adc
add
add
stos
mov
arpl
mov
add
fnstcw
lea
mov
sti
daa
out
or
idivl
dec
pop
gs
loopne
jo
dec
loope
cmp
jno
push
mov
push
stc
sbb
pop
in
sahf
insl
sti
movsb
loop
sbb
mov
push
leave
pusha
call
gs
mov
stos
test
lret
pop
jge
push
lds
js
push
pop
mov
cmc
push
sarl
iret
fistpl
sbb
js
aam
inc
xchg
dec
xor
je
or
jmp
in
inc
cli
jmp
mov
lcall
out
iret
xchg
pop
repnz
mov
test
jo
shlb
int
aas
jp
inc
ret
push
dec
cmp
js
in
mov
mov
dec
fwait
xor
testb
pop
sbb
mov
xor
test
mov
sahf
cmp
mov
fldenv
adc
pop
push
fwait
xor
lahf
xchg
xor
ja
repnz
pushf
scas
xor
dec
shrl
subb
pop
mov
das
dec
jp
jge
imul
bound
cmp
dec
loopne
dec
fstl
sbb
dec
pop
mov
in
pushf
pop
or
or
mov
mov
pop
pop
popa
and
mov
pop
and
aam
jno
sahf
inc
pop
xchg
mov
ss
mov
adc
push
cs
sub
sbb
mov
in
inc
ljmp
add
imul
dec
inc
in
xor
out
lock
jno
lret
mov
scas
shr
xchg
sub
stc
mov
dec
cltd
loope
inc
out
aaa
sbb
mov
dec
shlb
out
adcb
adc
daa
bound
pop
sbb
cld
push
xchg
inc
ljmp
jecxz
mov
adc
mov
mov
out
call
imul
xchg
out
xchg
and
mov
jbe
pop
andl
mov
and
mov
jl
adc
aaa
cmc
pop
cwtl
loope
psubsb
gs
sbb
out
pop
push
je
adc
or
ret
es
lds
ja
js
ja
xchg
lock
xlat
mov
pop
stc
out
dec
sub
mov
dec
sbbb
add
rolb
movsb
sbb
insb
sub
sahf
je
jb
adc
xchg
sub
rolb
sub
push
sbb
pop
lcall
jae
pop
mov
or
pop
or
int
ja
mov
or
es
push
outsb
lahf
lret
sub
cld
fists
data16
stos
or
in
aam
out
je
xor
adc
outsb
cwtl
mov
xchg
mov
loopne
mov
inc
pusha
outsb
add
and
adc
enter
fcoml
leave
dec
cmpsl
and
stos
das
ja,pt
lods
rcl
jbe
push
out
int
sbb
sbb
loop
popa
dec
mov
mov
xor
jecxz
ds
les
orl
dec
loope
cld
pop
in
mov
push
in
cli
inc
mov
int
arpl
jle
xchg
int
leave
sub
and
jl
test
subb
jmp
xor
inc
inc
sbb
mov
dec
push
movsl
ja
push
mov
xlat
pop
clc
enter
pop
insb
mov
in
mov
ret
cld
inc
lods
sbb
fbld
mov
clc
pusha
imul
out
xor
shll
jo
inc
xchg
pop
mov
in
cwtl
cs
adc
lock
movsl
cmp
in
insl
push
in
mov
clc
adc
or
loop
xlat
mov
lods
aam
adc
jge
xor
cltd
cmp
loop
mov
cmp
push
jmp
test
push
ds
inc
xor
fldl2t
sbb
pop
daa
jl
pop
xor
sbb
lock
test
stc
les
adc
ret
sub
sbb
or
xlat
push
pop
mov
mov
pop
loop
int
je
cmp
imul
mov
es
mov
adc
add
push
push
ret
movsl
jp
dec
addb
std
jno
and
cmp
xchg
xchg
adc
gs
xchg
pop
roll
lods
sub
movsb
loop
or
xor
push
test
leave
xchg
add
or
mov
lcall
ljmp
mov
js
sarb
std
adc
sbb
adc
les
popa
loope
ljmp
lcall
frstor
popa
filds
cmpsb
xchg
cs
movsb
push
adc
xchg
test
dec
fdiv
cmc
mov
jmp
push
lock
int3
pop
mov
jb
cmp
imul
fs
mov
or
adc
movsb
stos
daa
mov
pop
cmc
jb
dec
movsb
or
mov
jge
call
inc
lret
imull
jo
or
pop
dec
cmp
lock
mov
and
lcall
sub
clc
pop
and
call
adc
ds
outsb
mov
fdivp
mov
mov
xchg
cmp
mov
dec
dec
enter
mov
fnstenv
adc
arpl
adc
pop
jb
sub
and
in
shrb
cld
add
adcl
or
jecxz
sub
xchg
addr16
out
dec
add
mov
xchg
sub
jge
lret
mov
icebp
idivb
xchg
mov
cmc
mov
inc
cmc
mov
adc
and
add
mov
test
mov
pop
inc
push
unpckhps
into
les
in
push
in
icebp
push
jne
add
mov
cmp
add
testb
fwait
cmp
and
aas
xlat
push
lret
and
in
xchg
pop
aam
or
jno
cmpsb
daa
push
push
testl
mov
pop
pop
adc
and
cli
sarb
shll
adc
out
movsl
jecxz
cmc
xchg
add
lcall
add
mov
fidivl
cmp
mov
lahf
xchg
jb
ds
push
leave
push
dec
int
insl
bound
jo
shlb
loope
or
cli
mov
in
cli
inc
cwtl
mov
adcb
nop
scas
adc
das
stos
jmp
jb
add
es
sub
out
js
cmp
jo
ret
push
or
or
inc
xor
adc
outsl
add
cmc
inc
lea
xchg
or
inc
xor
cltd
push
pusha
fucomp
lretw
or
pop
jp
std
iret
xchg
addr16
popf
push
stc
ljmp
popa
mov
shll
divb
lahf
push
mov
or
sub
mov
call
inc
push
imul
mov
daa
andb
add
inc
lods
movsb
sbb
lods
mov
mov
push
and
shl
adc
icebp
notl
add
out
repz
movsb
ja
and
ret
jmp
mov
mov
fs
or
mov
cmpsb
mov
jno
jo
enter
mov
out
into
add
fwait
add
sahf
shrb
loope
fstpt
dec
push
mov
in
push
add
add
call
lea
shll
inc
xchg
adc
loopne
into
mulps
test
insb
cli
mov
repnz
lcall
mov
mov
mov
addb
popf
fisttpll
dec
xchg
dec
xor
fsubp
cmp
ja
mov
incb
ljmp
push
cwtl
loopne
enter
dec
ret
cld
daa
jl
xchg
je
orl
into
mov
gs
cmpsb
lds
fnstsw
mov
insl
rcr
and
into
mov
adc
les
sbb
pusha
aaa
or
inc
cmp
repz
cmp
jle
lret
fwait
sbb
adc
inc
mov
addl
cmpsb
lods
test
scas
mov
bnd
sbb
xchg
xor
or
cmpsl
sub
mov
fst
test
incb
adc
test
lret
rcr
mov
data16
mov
fsubs
in
push
seta
push
test
adc
aaa
mov
out
and
pop
cmp
outsb
sub
adc
scas
inc
pop
in
lahf
push
loope
and
dec
jg
jns
jo
mov
test
push
pop
and
pop
popf
js
sbb
mov
mov
mov
inc
jge
fdivrs
jg
inc
add
jae
fwait
sub
jmp
in
adc
or
mov
dec
das
push
jb
pop
in
mov
sbb
mov
pushf
add
test
push
jns
jns
adc
dec
or
lret
mov
push
jp
rep
jae
hlt
xchg
test
aas
dec
and
add
pop
aas
test
lcall
aam
loopne
xchg
notb
movsb
les
gs
add
lret
xor
mov
inc
shl
ja
inc
xchg
sbb
int3
pop
ljmp
jb
dec
ja
loopne
mov
addr16
fdivr
and
arpl
adc
push
mov
scas
inc
mov
push
int3
mov
into
lret
xchg
adc
rorb
idivb
sub
adc
mov
push
jae
ficomps
cs
out
leave
aam
mov
iret
js
mov
fs
push
in
cmpsb
xor
mov
pusha
mov
aad
push
and
or
xchg
mov
enter
in
fs
mov
or
xchg
mov
sub
jl
inc
sbb
sub
or
shl
xchg
or
repnz
pop
adc
cmp
rclb
scas
add
push
ljmp
call
sti
or
cltd
ficompl
xor
sbb
ds
dec
clc
mov
shll
xchg
cmp
lds
jle
into
rcrl
or
mov
mov
push
cwtl
imulb
sub
mov
inc
xor
add
pop
out
in
sub
int3
into
jns
loope
xchg
sar
leave
in
cmp
fwait
push
cld
test
fsubrp
inc
jle
sti
imul
push
pop
jno
or
mov
aaa
sbb
scas
and
mov
mov
sarl
subl
xchg
push
mov
rcl
andl
mov
loop
rcrl
sbb
pop
push
fwait
push
jge
xchg
sti
int3
push
jmp
sbb
push
dec
out
jge
in
lds
pushf
jnp
dec
add
loopne
fidivrl
and
push
icebp
xchg
lds
lea
sub
pop
sub
dec
dec
test
fldl
mov
mov
mov
inc
pop
mov
std
pop
repnz
pusha
ret
jle
mov
mov
js
xor
scas
mov
cmp
ljmp
cmp
inc
fdivl
test
shlb
ret
sub
addr16
cltd
pop
mov
inc
xor
mov
aad
rorl
insb
mov
or
mov
test
push
mov
aas
add
outsl
jb
push
mov
movsl
loope
jle
pop
in
mov
insb
jno
or
push
xchg
pop
call
mov
les
pop
ret
push
or
shlb
and
repnz
sbb
incb
and
mov
xchg
adc
leave
mov
cmp
repnz
xor
hlt
jp
enter
scas
pop
andl
in
adc
and
icebp
in
xor
mov
pop
push
ss
push
push
mov
pop
test
push
cmpsl
addl
jo
lods
adc
mov
fcomp
fldcw
add
popf
ret
test
std
mov
xchg
jecxz
js
mov
mov
movsl
js
lods
mov
leave
jecxz
call
or
pop
cmp
pop
mov
dec
cmpsl
and
jo
mov
popa
mov
bound
lcall
cwtl
push
out
mov
push
mov
jle
stos
es
push
push
sbb
mov
sbb
add
cld
xor
xchg
pop
out
icebp
or
inc
mov
jle
or
and
cmpsb
iret
aas
adc
repz
dec
imul
xchg
lahf
add
loop
xchg
movb
or
sti
dec
dec
pushf
scas
jl
je
imul
pop
lock
adc
or
xchg
sub
sbb
fsubrs
mov
scas
jle
fnsave
jo
sti
mov
dec
xor
mov
sbb
inc
addr16
js
sub
push
adc
xchg
test
push
rolb
neg
nop
stos
mov
filds
shrb
jl
xchg
icebp
fs
imul
and
sub
cmpsb
xor
loope
pop
testl
in
cld
pop
stc
or
push
mov
mov
sub
mov
add
cmp
cmp
imul
pop
dec
pop
push
sub
insl
xchg
lahf
cmp
scas
leave
loope
js
pushf
aas
mov
dec
fnstenv
bnd
cltd
and
scas
mov
testl
and
divl
leave
jb
test
arpl
int
xchg
mov
mov
aam
enter
out
jbe
ljmp
or
xchg
push
movsb
scas
push
and
jl
add
data16
push
enter
arpl
sbb
test
lret
movsl
sub
adc
push
or
ret
repz
xlat
mov
pop
cwtl
adc
jge
xor
sbb
pop
jle
sbb
test
ss
addr16
in
aas
and
outsl
jmp
mov
roll
dec
pop
popa
mov
push
aam
enter
scas
xchg
push
pop
mov
dec
cmpl
mov
shll
mov
add
inc
mov
xchg
shlb
mov
xchg
mov
movsl
mov
adc
jbe
popf
repz
mov
ret
mov
adc
int
sbb
in
aad
outsb
notb
insb
insl
loopne
or
daa
add
js
cmp
jmp
xchg
mov
lcall
xchg
sub
shrb
sbb
pushf
push
push
sbb
inc
test
cmc
dec
push
jmp
jecxz
push
cs
pop
sub
aas
fadd
jmp
inc
sbb
adc
sbb
add
shrl
and
add
out
xor
sbbb
nop
and
mov
daa
cmpsb
mov
dec
and
bound
xchg
push
xchg
and
ret
jne
jl
movsb
cmc
imull
adc
mov
mov
pop
sbb
stos
mov
movsb
lret
sbbb
xchg
mov
rcr
in
add
aas
mov
hlt
add
in
sbb
xor
push
scas
xor
cmp
imul
jb
lods
fs
jle
inc
pushf
sbb
mov
mov
push
call
rclb
or
push
cmpsl
loope
nop
add
jae
mov
cmpsb
sbbl
repz
mov
iret
call
dec
fidivrl
push
xchg
push
sahf
repz
inc
pop
or
sub
sub
icebp
fsubrl
enter
push
mov
das
jo
testl
lret
enter
dec
mov
jmp
ss
xchg
testl
in
fists
add
sti
pop
or
pop
cmp
jo
imul
aaa
into
out
mov
int3
adc
lss
nop
adc
push
adc
shlb
int3
xlat
outsl
xlat
jo
or
ret
sarl
aad
push
pop
xchg
addr16
jo
sub
into
lfs
fdivrl
dec
into
out
xchg
and
jge
outsb
scas
das
andl
movsl
insb
and
sub
shll
pop
mov
inc
cltd
jl
jnp
inc
mov
lock
pop
iret
loope
jnp
cmpsb
lods
mov
call
jb
and
jns
pop
and
or
push
add
lock
stc
popa
rcll
and
lret
decl
out
test
or
test
jmp
jne
cltd
jle
scas
mov
pop
inc
cld
adc
cmpsb
cmp
fmull
mov
jbe
add
arpl
xor
push
sub
xchg
aas
lcall
add
mov
push
loopne
into
xchg
rorb
jae
jno
fsts
cmp
loop
aaa
jg
inc
mov
jb
lods
int3
jg
cltd
nop
ss
repnz
inc
les
imul
cmp
ss
dec
jne
lea
leave
xor
cli
sub
je
mov
xlat
mov
mov
adc
mov
jbe
shlb
adc
add
xor
push
cmp
adc
leave
xchg
jbe
inc
sbb
pop
in
stos
pushf
outsl
push
std
imul
rolb
push
leave
pusha
and
ja
cli
inc
je
outsb
cs
leave
sti
cmp
add
push
adc
data16
insb
cs
push
rcll
insb
add
fs
repnz
cmpps
add
inc
lret
dec
xor
je
lahf
andb
or
jbe
jbe
or
mov
leave
pop
iret
mov
cli
fsubrs
adc
sbbl
jmp
xchg
pop
sub
xchg
inc
lock
sbb
pop
dec
push
and
sbb
mov
adc
rcrl
mov
andb
dec
loope
pop
xchg
pop
push
cmp
push
stos
jg
mov
sarl
add
or
nop
sbb
mov
push
out
pop
sbb
mov
mov
jl
xor
adc
adcb
jo
pop
shll
repnz
insl
in
scas
inc
into
imul
add
xor
and
jne
es
outsl
push
inc
cmp
addl
scas
mov
add
paddw
push
mov
mov
daa
scas
aaa
pop
ja
jge
int3
cmp
out
daa
inc
and
scas
inc
jmp
dec
pop
cwtl
or
xor
fwait
mov
sub
pop
xchg
sub
out
inc
sbb
inc
mov
ret
cmp
mov
xchg
outsb
cld
pop
scas
sub
push
xor
xor
inc
cmpsl
ror
jno
sbb
mov
js
gs
es
jle
inc
sbbb
ret
das
ljmp
dec
and
inc
or
sub
pop
add
push
or
and
dec
pop
bound
mov
jo
rol
sub
xchg
cmp
pop
jg
pop
sbb
out
ljmp
mov
sarl
sub
mov
jnp
repnz
mov
ret
mov
repz
inc
fimuls
adcb
jmp
jo
add
test
adc
xorl
xchg
push
adc
test
push
repz
movsb
mov
mov
jle
punpcklwd
rclb
out
pop
mov
fwait
mov
sahf
out
mov
incb
outsb
jmp
xchg
adc
sub
sub
nop
daa
jmp
mov
out
cmpsb
dec
inc
push
jecxz
lea
mov
movsb
in
out
ljmp
mov
mov
mov
xchg
push
cmc
lret
jo
fdivrs
pop
scas
out
adc
lahf
pop
gs
sub
in
imul
lods
sti
mov
sahf
cld
dec
sbb
jno
lea
bnd
sbb
movsb
fdiv
fadds
cli
ja
repz
js
jle
push
mov
leave
add
repz
xor
mov
push
dec
mov
ret
enter
ljmp
aaa
test
into
fists
fiadds
and
lods
and
in
mov
dec
fistpll
loope
adc
cmpsl
stos
jmp
jmp
add
popa
imul
xor
fildll
mov
inc
mov
mov
movsb
mov
aam
aas
imul
add
test
pop
mov
and
xor
dec
ret
mov
stos
lret
push
xchg
push
add
sbb
mov
sub
inc
fsubrs
mov
movsl
outsl
arpl
test
std
mov
insl
clc
xlat
push
fnstenv
xor
jnp
jmp
cmp
adc
cmpsb
jnp
ljmp
aas
inc
bswap
out
loope
adc
movsb
sbb
loope
movsb
aaa
xchg
mul
cli
sub
push
xchg
hlt
out
pop
int3
cmc
cmp
cmp
test
bound
add
cltd
lret
cmpsb
or
jmp
test
stos
cwtl
loope
repz
sbb
or
sub
mov
rcll
hlt
data16
jecxz
pop
xor
or
mov
add
adc
dec
inc
sub
push
scas
inc
and
icebp
inc
ret
add
xor
int3
daa
repnz
scas
inc
adcl
int
je
int
cmp
xor
popf
iret
iretw
mov
and
mov
push
xor
insb
loop
pushf
push
add
jl
and
jae
scas
dec
xchg
adc
xchg
add
nopl
sti
or
pop
or
fs
add
out
cmp
pusha
sub
sub
adc
cli
icebp
adc
pop
out
xchg
and
in
add
pop
mov
ljmp
ja
pop
fiadds
ds
pushf
movsl
inc
jle
mov
dec
mov
js
adc
dec
bound
cmp
pop
das
aas
sub
cmp
mov
mov
gs
nop
mov
adc
or
xchg
orl
scas
cld
jle
shll
jmp
or
loopne
inc
out
pop
aas
or
bswap
loopne
cmp
cmpsl
out
mov
or
jmp
mov
xchg
lcall
mov
movsl
stc
push
mov
movsb
xor
xor
or
movsl
pop
and
mov
andb
cli
ss
lcall
xor
push
jp
pop
dec
jmp
jl
mov
add
outsl
stos
inc
jne
pop
mov
inc
add
pop
hlt
cmp
mov
lret
mov
hlt
insb
push
out
icebp
inc
push
fadds
insb
ds
xor
dec
push
cmpb
add
xor
mov
sahf
hlt
push
mov
into
xchg
sbb
fucomp
shr
das
lret
in
std
enter
pop
add
inc
sub
jae
dec
pop
sub
popa
fdivrl
sahf
xor
cmp
test
dec
pop
in
xlat
ret
and
pop
daa
sbb
xchg
ja
add
push
test
test
loop
fsubl
sub
xor
nop
mov
cwtl
scas
mov
popf
ffree
fadds
cmpsb
fbstp
mov
lods
mov
mov
push
xchg
mov
xor
test
inc
and
xchg
out
cwtl
pop
in
cmc
adc
dec
mov
ds
jecxz
outsl
andl
or
cmp
stc
lds
data16
adc
clc
loop
ljmp
cmp
sub
cmp
imul
sbb
shll
mov
pop
loope
fcoml
sub
aad
sbb
cmp
test
fnstcw
or
mov
shlb
push
mov
test
add
sbb
mov
mov
insl
stc
or
adc
cmp
mov
jns
clc
push
and
mov
xor
hlt
addr16
xorl
xor
daa
int3
pop
lea
bswap
insl
cmpb
mov
xchg
push
push
lret
flds
sbb
ja
and
insl
test
push
jge
xor
jge
sbb
dec
add
add
pop
add
jo
call
aad
jbe
lods
mov
pop
int3
adc
pop
and
fstp
lcall
stos
call
mov
cmp
cmp
mov
test
mov
daa
push
std
stos
xchg
xchg
nop
jecxz
push
mov
cld
stos
subl
mov
shlb
pusha
bnd
and
pop
push
mov
mov
or
pop
bound
inc
popf
test
dec
in
xchg
test
imul
push
pop
out
and
jns
sub
pop
lcall
aas
adc
sbb
mov
mov
fs
xchg
jle
inc
mov
xor
enter
sti
add
fs
lret
in
lret
push
ficoms
addl
sub
ret
cld
test
fstl
rcrl
mov
lcall
ds
pop
fsubs
int
rcl
cmp
jp
push
add
lret
and
mov
fldl
iret
xchg
sbb
fbstp
les
mov
neg
cmp
mov
idiv
outsl
movsb
aad
mov
jp
add
push
pop
xchg
lods
cmpsb
xchg
mov
fistl
cmp
aaa
into
jg
movsl
sbb
mov
lret
cs
mov
loopne
test
inc
mov
bound
and
and
sti
mov
stc
mov
icebp
hlt
jge,pn
inc
adc
mov
pop
js
xchg
je
cmp
push
sbb
push
fcmovbe
test
xchg
dec
fdivs
pop
faddl
cmp
iret
adc
scas
mov
cmpsl
mov
ret
cmp
push
sbb
push
pop
push
mov
aaa
ret
addl
scas
mov
test
adc
lahf
testl
sub
mov
cmp
jne
dec
cld
xchg
inc
outsl
dec
dec
mov
addr16
sbb
out
dec
adc
sbb
daa
xor
sbb
mov
adc
loop
push
add
xor
sub
sti
daa
pop
sbb
dec
aas
push
aaa
in
gs
xchg
or
xchg
scas
movsb
sub
fiaddl
or
fnstcw
and
inc
inc
cld
and
sub
cs
daa
adc
mov
xor
out
pushl
cmp
scas
frstor
jge
pop
mov
movsl
mov
inc
test
push
push
xchg
push
adc
inc
mov
fmull
cmp
jg
mov
test
pop
or
pop
lahf
xchg
cs
jne
pop
stos
sahf
das
add
push
mov
and
adc
xor
mov
mov
imul
addr16
stc
dec
mov
test
clc
rol
sub
loope
sbb
dec
xor
jp
fadd
add
inc
xor
lods
ficomps
jae
movsl
xchg
sbb
cld
jno
xor
outsb
popf
jne
push
or
movsb
cld
shrl
push
imul
enter
pop
adc
dec
test
lods
add
scas
inc
sub
outsl
iret
add
int3
daa
sbb
mov
or
lods
inc
cwtl
dec
repnz
mov
sub
and
mov
subb
ret
mov
xlat
icebp
mov
inc
jmp
lret
sti
jns
mov
push
fbstp
or
rcll
mov
inc
xchg
xchg
bound
mov
mov
pushaw
mov
rcll
sahf
test
test
loope
xor
ljmp
jbe
xchg
cmp
jmp
or
cmp
arpl
inc
jo
test
fsts
add
icebp
ljmp
push
ror
or
je
aam
bound
xor
loope
loope
dec
dec
addl
mov
lret
pop
test
in
incl
mov
sub
pop
ds
or
fidivs
notl
inc
test
loope
cmpsl
or
mov
jne
pop
mov
stos
cmp
xchg
aad
mov
mov
lds
add
lahf
jp
es
aaa
cmpsb
xorb
mov
lret
jl
xchg
pop
aaa
inc
jbe
jbe
mov
ss
lret
sbb
and
aaa
lahf
dec
inc
jbe
cmp
sbb
dec
rcr
jg
loop
xor
inc
lea
sti
jmp
mov
lea
adcb
cmp
rcll
data16
aas
fnsave
and
stc
or
xor
call
data16
filds
mov
xor
orb
lods
inc
aas
cmp
jo
and
hlt
push
jbe
dec
leave
jnp
scas
xlat
xchg
sub
shll
add
fistps
adc
or
out
cmp
out
cli
pushf
das
push
lock
aaa
vminss
gs
stos
sbb
imul
xchg
mov
lret
pop
testb
pop
stos
out
test
sti
sub
mov
daa
mov
mov
push
imul
ljmp
scas
jp
sarb
push
arpl
add
mov
xchg
mov
mov
add
mov
cmp
mov
test
add
iret
int3
imul
cli
jmp
cmp
sbb
outsb
adc
out
sub
jns
mov
pushf
sub
lahf
xor
jge
shll
cmpsl
mov
cmpsb
dec
add
pushf
rcrb
mov
aas
xor
dec
aaa
fnstcw
or
cmp
add
stos
shlb
stos
jno
iret
addr16
negb
cld
lret
je
lds
pop
push
or
clc
adc
and
int
stos
addb
xchg
pop
stc
and
outsl
or
xchg
ds
out
pop
push
dec
xchg
fildll
rclb
aaa
ds
je
jne
inc
lea
repz
jbe
add
mov
and
daa
pop
mov
pushf
cli
xchg
stos
sbbb
inc
movsl
cmp
sub
insb
divl
ret
sub
mov
in
movl
lods
xor
pop
popf
xchg
popf
test
sti
inc
popa
fsubl
ret
pop
out
and
fidivs
addr16
lods
cwtl
pop
lretw
movsl
fldl
fists
ds
add
jo
add
in
test
pop
cmp
xchg
imul
insb
or
pop
pop
outsb
dec
xor
mov
arpl
into
inc
outsl
repnz
stos
sbb
outsb
jnp
cmp
scas
and
push
repz
lods
sub
leave
sbb
dec
scas
adc
mov
pusha
xchg
pop
test
leave
fwait
push
scas
add
xor
xchg
add
and
mov
loope
xchg
inc
rcrl
xor
rorl
pop
adc
pop
inc
or
sub
loope
cmp
xor
inc
stos
dec
mov
jmp
in
aaa
data16
pushf
pop
xlat
clc
xchg
out
bound
cmpsl
mov
in
out
or
sbb
addr16
xor
pop
cmp
pop
out
pop
sub
jmp
fcomps
pusha
clc
adc
repz
xor
movsb
adc
in
xor
data16
push
in
dec
mov
sub
insl
je
cmp
xor
mov
pop
sbb
jno
aad
xor
testb
ja
out
movsb
adc
and
jl
dec
scas
stc
stos
in
aaa
jl
adc
lods
lcall
insb
nop
daa
pop
sbb
ss
pusha
push
inc
xchg
mov
sbb
std
mov
sub
pop
pop
cmp
rclb
mov
leave
scas
fdivrs
sub
mov
mov
into
leave
xor
jmp
int
add
sar
xchg
or
fists
adc
ficompl
rclb
mov
sbbl
pop
mov
add
ja
mov
fisubrs
push
sti
pop
jno
jg
shll
jne
mov
ds
and
xor
xchg
push
ljmp
jb
xor
push
dec
dec
mov
push
mov
int
repz
cmp
xchg
mov
xor
inc
sub
sub
pop
repz
outsb
and
lret
xchg
daa
xchg
cmc
mov
or
or
cmc
inc
ret
jmp
push
pop
push
pop
or
out
push
push
add
adc
fidivs
insl
mov
lcall
mov
insl
test
std
rclb
mov
lock
loop
adc
es
ljmp
pop
ret
xlat
fnstcw
pop
cmp
inc
cmp
ror
loope
xor
mov
outsl
xor
hlt
push
push
jae
push
jns
fnstcw
sub
mov
lcall
xchg
mov
mov
add
jo
jmp
into
movsl
js
es
pop
in
jp
add
mov
sbb
cmp
mov
xchg
cwtl
pop
mov
cmpsl
nop
call
sbb
dec
push
add
fiadds
jecxz
sarb
jp
shll
shlb
jecxz
jbe
pop
mov
outsb
inc
test
and
out
push
jecxz
js
sahf
pop
xor
mov
lock
jmp
dec
and
push
sub
loop
push
outsb
lret
sub
dec
aas
sub
xchg
jbe
subb
inc
mov
xchg
push
rclb
push
mov
test
lods
pop
rol
add
sbb
cld
or
shl
lcall
pop
mov
clc
dec
xlat
xchg
frstor
cmp
xor
lods
and
xorl
aam
outsl
daa
in
dec
or
cmc
int3
fprem1
jbe
inc
fiadds
cwtl
call
and
or
stos
subl
inc
add
mov
xor
xchg
pop
jge
xchg
rclb
or
jle
dec
mov
lcall
and
pop
scas
pop
mov
sub
popf
xchg
popa
xchg
push
test
xchg
and
sub
and
push
pop
clc
push
add
jl
adc
ljmp
mov
and
fsubr
iret
sbb
inc
pop
xor
pop
cli
pop
add
jle
xchg
mov
push
jae
sbb
xchg
in
push
sahf
lods
xor
push
and
sub
jg
shll
cmp
pop
mov
rcr
test
or
mulps
fsubr
cmp
xor
cltd
jb
cwtl
lret
das
stc
push
outsb
and
xor
inc
add
cmpb
xchg
pop
pop
mov
test
repnz
imul
shlb
and
pop
xchg
repnz
mov
cmp
les
and
stos
xorb
stc
push
loop
fsubrl
fnstenv
rcl
mov
pop
aas
aas
adc
xlat
sbb
call
jns
repz
cld
push
pop
inc
pop
mov
aaa
fdivl
loope
mov
jb
add
push
arpl
fnstenv
ljmp
xchg
stc
mov
pextrw
repnz
xchg
imul
repnz
sahf
repz
stos
sub
ljmp
jecxz
mov
roll
fsubrl
call
arpl
jg
aas
adc
pushf
mov
jo
cltd
push
dec
mov
shrl
mov
mov
paddb
out
ja
loopne
subl
push
xor
fs
inc
fstpl
add
rcll
xor
data16
dec
cwtl
lahf
lret
movsb
fcoml
into
cli
jno
push
rolb
xchg
gs
jno
das
popf
das
jnp
mov
cmp
xor
sub
pop
inc
or
cmpsl
nop
and
fdivs
es
mov
bswap
cmpsb
ja
mov
jae
xchg
xchg
push
repz
jge
shrb
iret
cmp
pop
mov
ja
stos
test
cmp
bound
xchg
insb
stc
out
arpl
or
dec
pop
nop
ljmp
in
sbb
mov
leave
aaa
mov
out
pop
dec
push
popf
push
jbe
pop
insb
fisubrl
jl
push
cmpsl
adc
add
cmp
ret
inc
fwait
out
out
dec
lahf
or
es
jno
sahf
jae
lret
adcb
cli
dec
in
fidivs
jp
sub
jnp
xchg
lcall
sub
push
push
push
dec
mov
inc
and
cmp
and
or
xchg
cwtl
jle
call
arpl
jge
mov
push
dec
sbbb
cmp
mov
jg
jmp
add
sbb
pop
loop
aas
fnsave
cmp
ja
mov
or
sar
fwait
into
mov
xchg
std
popa
adc
fcmovne
sub
xchg
xchg
addl
jb
fists
and
fildll
jp
lret
add
jg
fbstp
dec
xchg
xchg
mov
pop
mov
pushf
cmp
std
xchg
add
or
and
mov
pop
adc
int
stc
jmp
mov
push
lods
adc
push
adc
dec
aas
iret
xchg
nop
adc
add
dec
mov
push
jb
inc
push
add
jecxz,pn
in
dec
call
add
mov
cwtl
and
cmc
cmpl
fs
icebp
mov
icebp
jge
and
pop
pushf
sti
fsubs
inc
or
nop
unpcklps
mov
mov
rcrb
data16
in
mov
aaa
fnstenv
ficompl
cmp
imul
dec
cmp
jne
xlat
mov
popf
pop
repnz
mov
pop
fs
cwtl
xchg
xor
addr16
mov
pusha
and
jo
xchg
lret
int
aaa
jbe
adc
xor
push
mov
dec
sub
fs
repz
dec
pop
sti
adc
mov
adc
or
xchg
dec
or
cmc
shll
std
mov
sub
das
insb
jl
pop
or
cmp
xor
adc
xchg
dec
repnz
cmpsl
int
dec
cmp
mov
sub
pop
push
fdivl
imul
scas
xor
test
adc
ljmp
cs
xor
psrad
jo
adc
jne
cli
adc
addr16
add
inc
dec
pop
addr16
fyl2x
cs
jb
dec
cmp
in
mov
insl
add
icebp
sbb
and
outsl
mov
inc
scas
es
enter
call
inc
jl
jmp
add
das
repnz
loopne
cmp
pusha
negl
testb
loop
mov
push
push
imul
and
mov
outsb
sub
push
rorl
outsl
icebp
jne
sbb
mov
push
in
dec
repnz
ret
jbe
or
dec
inc
or
jbe
adc
jno
push
out
xchg
xchg
dec
loope
mov
push
std
leave
jns
movsl
mov
sub
sbb
or
nop
cmp
and
iret
mov
testb
jns
jle
gs
xor
js
and
push
cltd
and
popa
dec
and
loopne
cld
adc
outsb
stos
push
aas
imul
and
mov
cli
in
jp
mov
or
jb
out
mov
sub
dec
popf
nop
sahf
mov
inc
sarb
mov
and
out
sbb
mov
inc
ret
addr16
outsl
pop
dec
lret
jne
idivl
jecxz
mov
push
inc
into
mov
mov
mov
push
mov
inc
fucomi
push
pop
dec
mov
int3
arpl
inc
test
pop
jno
xchg
lods
repnz
pushf
dec
inc
push
xchg
sub
daa
mov
pop
cmp
aas
mov
dec
outsb
loope
push
push
pop
inc
cwtl
lea
fdivrl
fsubl
test
mov
fiaddl
push
arpl
mov
std
pushf
mov
xchg
sub
cwtl
jo
ja
jle
stos
or
lret
icebp
sbbl
leave
scas
gs
xor
adc
loop
and
ficomps
mov
jmp
lods
inc
pop
xlat
std
mov
cmpsb
testl
rcrl
push
or
or
enter
orl
shl
fstpl
cmp
cmp
adc
jno
xchg
mov
cmpsl
pop
repnz
mov
test
inc
mov
lcall
or
ret
cmc
lods
inc
or
mov
les
sarl
mov
jne
mov
test
push
mov
mov
push
mov
loop
xor
push
arpl
dec
or
mov
adc
jmp
repz
sub
lcall
enter
pop
lret
jae
push
jmp
call
jb
and
sub
icebp
sub
ljmp
je
stos
subl
incb
cmpsb
repz
lods
push
ss
xor
test
xchg
mov
sahf
sub
push
sbb
cmp
ss
fidivrs
mov
xor
lods
cmp
js
movsl
pop
loop
mov
mov
mov
pop
arpl
xor
daa
cmp
dec
loope
jl
cmpsb
mov
jbe
cli
stos
mov
sbbl
inc
in
scas
ret
mov
js
jl
rol
dec
fucomi
loop
fists
cltd
out
dec
mov
jo
test
inc
arpl
sub
and
push
je
jb
inc
fs
daa
rorb
xlat
dec
cmpb
cld
aaa
stos
jns
shrl
lcall
outsl
mov
pop
divl
adc
loopne
out
adc
lds
add
test
xorl
mov
fdivs
daa
mov
xor
push
mov
and
std
xchg
fisubs
int3
aaa
fdivrp
sbb
mov
lcall
or
sbb
out
iret
pop
lods
pop
sahf
mov
push
lahf
andl
inc
aam
inc
xor
adc
dec
cld
push
shr
pop
mov
das
sub
jbe
movsb
sarb
addl
pushf
jl
pop
xor
loope
push
ret
iret
popa
clc
add
cli
push
into
sub
lret
lock
aas
mov
or
cwtl
icebp
ficoml
scas
fwait
std
or
inc
nop
arpl
lea
pop
mov
xchg
aam
jnp
cltd
add
or
cmp
cwtl
jae
ret
mov
loopne
aas
fidivl
xchg
dec
push
sub
out
movsb
sahf
mov
and
test
xor
or
orb
fadd
aad
clc
stc
in
add
ds
xor
adcl
cs
mov
pushf
cli
es
int
mov
mov
addr16
jns
loope
rorb
test
jl
into
cs
add
es
or
jl
or
mov
mov
mov
and
cmp
ret
sub
push
mov
test
inc
mov
inc
das
in
cld
dec
leave
pop
jno
lods
add
jo
mov
inc
aaa
fnstenv
jne
outsb
push
mov
mov
mov
insl
add
sbb
ret
mov
sbb
rclb
mov
pop
mov
shrl
aaa
mov
jg
repnz
adc
sub
mov
and
mov
sahf
adc
jnp
mov
mov
mov
push
insb
ret
jecxz
sarl
cmp
call
movsl
scas
out
imul
fs
call
repz
lret
xor
or
jge
mov
or
das
push
add
mov
or
aaa
pop
sbb
add
mov
mov
jp
pushf
cmp
fidivs
lcall
fstpt
lods
and
jae
stos
movsb
movaps
mov
faddl
sbb
mov
cmp
and
mov
sub
lcall
inc
jmp
in
xchg
repz
popf
clc
vpshufd
sbb
sbb
jecxz
xor
jle
popf
dec
jecxz
fbld
pushl
roll
mov
cmp
mov
push
and
sti
and
xor
in
xor
xchg
adc
setle
cwtl
inc
std
inc
cwtl
test
lret
adc
cmpsl
cwtl
xchg
lcall
dec
mov
addps
or
inc
pusha
inc
ret
pop
fwait
shr
sahf
popf
mov
sub
out
adc
pop
scas
stc
jb
fisubl
ja
and
insb
into
sbb
fisttpl
lret
addr16
pusha
mov
xchg
mov
jl
xlat
cmp
cmc
xchg
mov
outsl
clc
adc
jge
outsl
xlat
pop
sar
fcompl
gs
shll
adc
stos
aaa
cmp
loop
arpl
movsl
xchg
loop
push
lods
mov
insl
int
dec
sbb
dec
loope
xchg
xchg
ret
pop
sub
and
rclb
jns
mov
js
je
rclb
test
and
add
stos
xchg
cmp
adc
dec
jo
mov
loope
jp
sub
loope
add
push
cmc
cmp
and
repz
cmp
leave
push
xor
pusha
repz
cmp
adc
sbbl
sti
in
jb
scas
xchg
pop
fsts
adcl
inc
loop
in
jmp
cmc
nop
sbb
test
xchg
stos
mov
fmul
xor
mov
addl
das
pusha
sbb
xor
push
jnp
mov
scas
xchg
insb
pop
sbb
repz
and
lea
test
in
inc
jnp
push
or
mov
cli
inc
inc
std
push
in
cmpsl
jno
adcl
adc
ret
adc
inc
out
mov
and
movsb
adc
test
xorl
imul
sbb
jnp
lods
andb
jns
repnz
sbb
jns
pop
xor
in
xor
sbb
or
in
cmp
stos
hlt
or
xor
jbe
lods
push
and
sbb
aas
push
xchg
cmp
mov
push
stos
into
lods
xchg
add
std
js
mov
pushf
fsincos
dec
jne
jns
ret
stos
pop
testl
mov
pop
outsb
sub
dec
aas
rcrl
jne
jl
shll
int3
ljmp
not
cmpsl
jg
daa
ret
repnz
nop
call
shrl
add
push
test
int
fwait
popf
bound
inc
push
mov
xor
adc
adc
lret
cmp
inc
sub
out
arpl
out
outsl
scas
inc
mov
inc
pushf
jno
out
xor
adc
rorb
filds
adc
out
sbb
cmp
mov
out
out
inc
adc
cmpb
cmpsb
addr16
or
dec
scas
loop
loopne
lcall
pop
inc
idivb
add
insb
call
dec
out
stc
push
adc
dec
insb
in
jnp
cmp
xor
adc
cwtl
gs
cld
std
inc
lcall
insl
je
pop
mov
add
inc
aas
jno
repz
adc
pop
lods
jge
loopne
daa
pusha
test
cmpsl
stc
movsb
sub
fidivl
outsb
jne
ret
dec
jno,pn
mov
and
cmp
lret
add
pop
inc
or
push
cli
loope
jecxz
enter
or
sarb
xchg
lea
test
loop
loop
push
push
cli
or
out
mov
lods
xor
andl
xchg
lcall
mov
fildl
sbb
fmul
and
aam
ljmp
pop
xor
mov
imul
mov
mov
pop
jbe
pop
sti
aas
ds
sbb
mov
push
cmp
popf
stc
pop
add
insb
cmpsl
mov
sbb
ds
xchg
dec
push
cltd
xor
or
and
loope
mov
outsl
cmpsl
ret
in
cmp
push
lcall
inc
fnstcw
out
jecxz
rcr
fbstp
inc
or
popa
js
xchg
sub
cmp
aaa
xchg
mov
mov
insb
nop
xor
or
pop
repnz
inc
adc
jnp
les
stos
xchg
jmp
insl
add
xchg
adc
lcall
push
shlb
mov
add
ja
inc
add
cltd
icebp
aad
pop
sbb
sub
lret
cld
push
shrl
cwtl
aad
or
scas
dec
sbb
shll
xchg
int
pop
arpl
aad
jg
test
inc
push
pop
outsb
fadds
int
fwait
mov
inc
jno
pop
andb
push
icebp
xor
jb
xlat
mov
jge
mov
cmpsb
pop
and
push
out
fcomp
jle
xchg
lock
inc
lods
jecxz
or
inc
int3
arpl
aaa
mov
shr
inc
pop
push
cmc
data16
cmp
inc
outsb
mov
mov
jae
movd
or
int
xor
dec
jo
lea
jae
and
inc
sub
clc
fdiv
std
mov
push
inc
mov
movsb
inc
inc
xor
push
std
fstpt
mov
xchg
fadd
lahf
inc
push
add
add
pop
shrl
sbb
inc
pop
nop
sbb
pushf
adc
inc
sub
adc
jae
cmp
mov
pushf
xor
shrb
daa
inc
hlt
jae
call
lahf
mov
sub
enter
out
shlb
scas
mov
mov
mov
leave
mov
mov
cmp
mov
out
mov
sbb
aas
dec
xchg
dec
inc
pusha
push
jb
push
aad
fstpt
outsb
in
mov
xrelease
mov
pop
adc
push
sbb
stos
out
mov
aam
std
movsl
jbe
ja
adc
add
int
push
mov
addr16
cmc
mov
test
in
fsubrs
das
mov
mov
lahf
test
pusha
imul
sub
notl
filds
pop
mov
jge
sti
and
and
mov
jns
aas
pop
xchg
jmp
outsb
dec
test
mov
lods
inc
cmp
push
push
into
adc
clc
ja
leave
test
aaa
mov
jns
dec
sub
xor
int3
fcom
loop
loope
adc
int3
and
test
dec
jl
jp
sub
jg
dec
sahf
pop
pushl
rorl
cmp
pop
scas
lods
sub
push
lods
sub
stc
jb
adc
cmp
jne
and
or
shll
stos
push
xor
mov
sub
adc
cmp
xchg
addr16
rcll
jmp
popf
lock
xor
mov
out
inc
fnsave
push
fstps
pop
fs
pop
popa
leave
dec
repz
lahf
xchg
mov
adc
pop
testb
inc
btc
mov
inc
adc
adcb
jge
pop
jle
xchg
sub
push
cli
iret
mov
sbb
sub
cmpsb
cmp
pop
jno
mov
mov
je
and
addr16
and
xchg
cli
cmp
std
xchg
pop
call
push
int
mov
ja
repnz
in
pushl
je
dec
jns
clc
addl
inc
call
loop
in
dec
pop
mov
xor
sbb
mov
and
dec
or
cltd
stos
mov
or
ret
cli
lock
inc
and
xchg
xor
or
lcall
daa
sub
mov
mov
filds
or
subb
daa
leave
cld
pop
sbb
ficoms
add
push
outsb
inc
test
mov
mov
scas
inc
dec
lods
cmp
fwait
aam
faddl
push
inc
mov
mov
fucom
mov
dec
push
dec
fsts
add
xor
sub
xor
xorb
jg
ja
aad
mov
lods
stos
jnp
aam
and
fldt
push
test
cmp
xor
fwait
pop
sbb
xor
and
jne
mov
stos
in
pop
test
push
add
cwtl
mulb
pop
loop
dec
je
cmpsb
xchg
dec
pop
lret
or
xchg
sub
insl
adc
xchg
cmp
sub
and
inc
inc
xor
popfw
push
call
pop
adc
data16
add
sbb
imul
sub
dec
gs
cmp
push
ss
rcrb
in
mov
test
sub
xchg
cld
cmp
mov
mov
lcall
popf
loope
packsswb
mov
xchg
xor
add
cli
cmp
loopne
pop
push
jb
rclb
sahf
clc
lret
xor
xor
push
and
xchg
and
cli
jge
xor
loope
adc
adc
pop
xchg
sub
add
cs
repnz
into
mov
adc
cmpsb
mov
testb
bound
jmp
sub
lcall
mov
cmpl
add
add
mov
lock
jns
movsl
pop
push
or
or
mov
pop
fsubl
cmp
jp
fwait
daa
adc
jge
inc
and
insb
pop
inc
pop
or
sub
fs
sbbb
add
mov
xor
ds
add
jne
in
fdivs
pop
out
rcll
lods
les
outsl
movsb
mov
pop
jge
pop
scas
jb
gs
and
int
jno
call
inc
jmp
xchg
sub
out
xchg
sbb
int3
outsl
or
insb
add
hlt
mov
cld
ljmp
jae
fistl
push
out
xchg
pop
insb
mov
mov
push
imul
dec
pop
rolw
mov
mov
push
lods
adc
adc
je
cmp
in
mov
push
sbb
xchg
jmp
movsb
aad
mov
fbld
adc
mov
sahf
testl
adc
xchg
addb
mov
out
ret
sbb
fs
inc
push
dec
add
mov
xchg
pushf
fildl
xchg
sbb
xlat
mov
ret
ret
add
adc
lods
mov
mov
dec
hlt
or
call
push
cwtl
sti
adc
adc
push
lcall
test
pop
lcall
jno
arpl
adc
pop
int
cmp
fwait
sti
adc
fnstenv
arpl
data16
mov
add
int3
leave
push
lahf
xchg
int3
sti
cld
mov
mov
push
addl
daa
xchg
pusha
pop
movsl
rorb
push
cmpsl
scas
out
mov
and
imul
pushf
cs
insb
test
and
scas
sub
not
cmp
mov
or
mov
adc
in
pushf
notb
jmp
insl
js
xor
mov
push
sbb
mov
xor
fwait
push
insl
fisubl
aaa
mov
clc
sbb
push
and
rorb
sarb
test
xchg
inc
pop
clc
lret
daa
pop
cli
sbb
arpl
sub
shrb
pop
dec
and
sub
insl
sbb
stos
push
out
pop
mov
pop
jmp
mov
xchg
jp
dec
js
jp
rorl
adc
sbb
mov
fwait
imul
mov
xlat
sub
je
sbb
jecxz
fcompl
sbb
adc
out
mov
lahf
dec
or
std
pop
add
scas
fwait
or
popa
js
loope
outsb
adc
roll
out
inc
dec
add
rorl
jae
enter
or
jns
sub
xchg
test
leave
mov
jle
xor
mov
sbb
mov
jae
inc
out
js
test
scas
xorb
inc
dec
adc
movsb
arpl
sahf
add
insb
ret
int3
xchg
stos
mov
sbbb
loopne
sbb
cs
mov
xchg
pop
mov
inc
cmp
cmp
cmp
add
icebp
mov
mov
inc
inc
je
sub
aam
test
cmpsb
push
lahf
sub
bound
out
xlat
pop
loopne
cmp
and
xchg
hlt
push
daa
mov
xlat
fldcw
test
mov
sbb
daa
inc
lock
inc
pop
and
bound
insl
adcb
nop
inc
xchg
cmp
xchg
push
add
sbb
in
arpl
push
out
inc
mov
or
inc
aad
sub
js
int3
dec
leave
sbb
mov
test
test
push
je
or
pop
stc
xchg
cmp
add
sbb
mov
jb
adc
imul
mov
clc
mov
stos
loope
lods
aas
int
icebp
scas
push
mov
mov
loop
pop
call
mov
mov
mov
inc
ret
push
ds
andl
jbe
ss
gs
cld
xor
mov
jno
inc
in
push
sub
movsb
xor
stc
mov
ljmp
mov
jne
jne
fs
push
cmp
inc
cltd
add
push
ret
inc
adc
jp
pop
rol
faddp
add
les
arpl
jo
fidivl
bound
push
lret
jns
sahf
jo
cs
jmp
pushf
scas
mov
subb
jg
cmpb
adc
push
sub
xor
out
xor
and
stc
test
leave
pusha
adc
jmp
cmp
sbb
xchg
sbbl
dec
mov
mull
sarb
adc
ja
mov
jle
out
cmp
mov
xor
aaa
stc
add
in
out
stc
adc
cmp
addr16
mov
lcall
xor
jmp
ja
outsl
daa
push
pop
add
fsubl
neg
arpl
int3
jo
ret
cmp
add
jae
in
out
mov
stos
add
cmpsl
xor
and
stos
shll
push
dec
jnp
inc
sub
pop
insl
mov
pop
xchg
int3
mov
outsb
icebp
push
repnz
mov
or
jg
mov
lret
jb
mov
loopne
or
jmp
push
pop
aaa
in
jne
xlat
mov
xchg
aam
and
test
jne
dec
xor
or
imul
loopne
aaa
pop
jno
aaa
stos
rolb
outsb
clc
sub
cmp
mov
loope
mov
sbb
pop
lret
loope
sbb
orb
xchg
sub
stos
mov
movsl
mov
sub
cmc
cmp
out
add
dec
push
fstpl
and
jmp
pushf
lds
mov
and
push
rolb
lods
push
dec
in
pop
sub
add
insb
pop
lods
sbb
dec
fnsave
and
fwait
xchg
sbb
push
lods
jo
stc
push
es
stc
imul
or
xorb
ja
ss
out
outsl
add
imul
mov
jns
int
sub
jnp
loope
mov
inc
xchg
xor
pushf
repnz
push
push
and
cld
rcrl
mov
shlb
movsl
jl
scas
pop
ljmp
call
in
dec
leave
push
ljmp
jno
jo
pop
in
adc
aaa
inc
movsl
lods
inc
jae
lret
xor
pop
pusha
lahf
cmp
bound
pop
into
outsl
lock
data16
add
sbb
arpl
mov
lods
cmp
testb
fwait
sbb
das
aam
fildl
sub
and
lea
or
pusha
xlat
ja
or
jmp
jb
cltd
add
cs
sub
in
stos
mov
cmpps
mov
inc
pop
test
sbb
push
cli
adc
dec
xor
dec
insl
mov
test
adc
sbb
jb
mov
bound
ja
or
or
test
dec
inc
mov
xor
gs
sub
and
out
cld
out
cltd
ret
in
out
std
lock
dec
mov
and
jecxz
sbbb
arpl
sahf
out
pop
push
jmp
jne
adc
mov
popf
mov
pop
and
and
popf
push
mov
xchg
aam
cmpxchg
dec
xor
xchg
sub
cmc
stos
std
scas
push
scas
inc
lea
int
insb
js
imul
push
sub
in
dec
push
add
push
fildll
pop
call
adc
fs
mov
cmp
filds
nop
xchg
andl
mov
adc
add
sub
movl
lret
xor
arpl
mov
add
xchg
push
movsl
mov
mov
mov
push
xlat
sub
test
subl
push
inc
movsb
pop
adc
subb
fcompl
push
push
repnz
sti
inc
in
arpl
cmp
and
mov
add
jae
test
bound
mov
or
jne
adc
repz
push
insl
icebp
mov
jne
fisubrs
sub
mov
mov
cmp
sub
sub
icebp
addr16
movsl
js
jo
or
xchg
jecxz
push
les
cmp
movsl
lds
xchg
mov
arpl
sbb
data16
imul
jp
popa
mov
movsb
mov
adc
sbb
cwtl
and
outsl
adc
xchg
inc
cmpsl
out
inc
add
mov
pushf
popf
mov
lcall
adc
push
sti
cmpb
stos
jnp
loop
int3
and
cmpsb
pop
xchg
fdivrl
jns
in
xchg
sub
std
popf
sub
stos
leave
mov
pushf
xor
sti
loope
jo
and
push
mov
cmp
mov
mov
stos
pop
or
loop
xchg
cmp
stc
data16
push
aam
sub
int
sbb
fdivrs
hlt
js
push
fnstenv
sbb
lret
inc
pop
xor
dec
es
mov
mov
sbbl
sahf
scas
pop
mov
jbe
mov
adc
imul
decb
push
jge
pop
jecxz
dec
xorl
pushf
loopne
or
xor
fwait
lahf
jbe
hlt
xor
out
lret
jb
inc
in
jb
pop
dec
push
jne
fiaddl
f2xm1
sbb
push
dec
xchg
cmp
fbld
mov
scas
cld
cld
in
std
rol
js
int3
stos
vcvtps2pd
fsubl
ljmp
clc
adc
mov
xor
pop
lods
ss
inc
dec
stos
test
js
stc
pop
sbb
rcrb
sahf
movl
popa
mov
test
ds
imul
inc
pushf
add
xchg
mov
sbbl
enter
icebp
push
stos
aas
cwtl
push
movsl
leave
add
push
add
in
in
ja
insb
xor
adc
xor
push
inc
dec
popa
lea
cmp
aad
pop
fldenv
pop
negb
jns
cmp
inc
add
add
imul
push
stos
fisttps
shl
test
insl
out
andb
ja
push
flds
mov
daa
pop
jle
mov
das
hlt
add
sahf
xor
sub
mov
sbbb
sbb
mov
repz
add
and
into
sarl
push
push
icebp
and
dec
adc
mov
arpl
fmul
push
rclb
arpl
sub
cmp
mov
push
dec
jnp
andl
out
inc
clc
and
mov
pusha
push
sbb
out
lahf
imul
mov
leave
or
add
lea
jb
dec
mov
dec
rcrl
jp
fwait
popf
aad
xor
jmp
jnp
mov
lea
lret
add
mov
fsubr
fldcw
bound
rcl
add
jecxz
int3
loop
std
loopne,pt
repnz
sahf
xchg
nop
data16
lea
inc
call
roll
repz
loop
inc
push
std
xchg
pop
loopne
enter
xchg
add
fisttpl
loope
xor
pop
scas
lcall
push
lods
pop
xor
aam
negb
sub
dec
jo
jb
in
push
out
xor
cwtl
test
call
push
and
cmpsl
cmp
jmp
les
imul
rolb
adc
gs
arpl
mov
xchg
mov
mov
movsl
mov
sub
sub
mov
jns
inc
mov
sti
cmpsl
rol
mov
fldcw
shl
insl
xor
jg
das
adc
pop
adc
popf
sbb
inc
popf
fwait
lods
push
pop
inc
movsb
sti
push
dec
xchg
or
lods
mov
or
sti
dec
rcll
je
add
icebp
and
add
es
xchg
psubd
enter
shll
leave
push
mov
pop
fisubrl
mov
mov
popf
lock
pop
sti
js
push
mov
mov
testl
leave
hlt
es
repnz
cmp
imul
jns
mov
push
out
mov
mov
data16
mov
dec
sub
data16
cli
out
arpl
mov
and
push
xchg
mov
int3
aas
cmp
outsb
pusha
mov
dec
sub
push
stos
inc
push
and
cld
test
jp
dec
ss
push
rcll
test
jo
and
aas
loope
adc
dec
mov
or
xchg
mov
test
bound
das
fs
lds
push
jne
inc
dec
cs
stc
test
cmpsl
fsts
lds
popa
sbb
xchg
fidivrl
inc
out
cmp
push
jecxz
sarl
pop
outsb
cmpsb
pop
adc
and
ss
outsb
adc
dec
cmp
mov
pop
mov
shll
ljmp
mov
push
out
jge
cld
cmp
ret
push
inc
flds
cmp
ljmp
outsl
int3
ds
nop
dec
cmp
insl
jns
pop
and
cmpsl
ds
push
lds
in
subl
or
aad
test
gs
and
mov
mov
cmpsl
out
push
dec
outsl
pusha
mov
push
mov
xsha256
cmpsb
push
jns
dec
and
sub
pushf
fdivp
adc
inc
int3
insb
outsl
jnp
or
out
cmpsl
xchg
adc
inc
out
gs
and
out
push
incb
mov
out
ficoml
sbb
pop
add
cmp
xor
fdivrs
lret
adcl
mov
push
adc
pop
icebp
jb
scas
fisttpll
jns
dec
imul
lods
sbb
roll
cmpsb
pop
cmpsb
lcall
mov
sbb
shld
repz
aam
pushf
sub
xor
shlb
push
inc
lods
or
and
jmp
js
inc
fisttpll
fidivrs
inc
pop
movsb
mov
sahf
icebp
adcl
movsb
cmp
out
xchg
inc
xchg
xchg
jl
inc
inc
sbb
push
fwait
inc
pop
repnz
cmc
pop
pop
and
and
fmulp
xchg
push
push
fstpt
ljmp
gs
jbe
cwtl
cmp
shrb
fwait
das
add
leave
mov
push
adc
jg
jbe
ss
dec
shlb
xor
ret
test
lds
mov
lfs
shrl
and
push
ds
push
pusha
jae
lahf
test
fnsave
outsb
shll
insb
cmpsl
push
stos
ret
mov
hlt
or
cmpsb
mov
out
jno
std
aad
cmpsb
icebp
cmp
sti
fists
xchg
push
mov
add
lds
cmp
jecxz
cmp
sub
mov
ror
inc
xchg
inc
stos
mov
mov
cmpsb
mov
dec
inc
fwait
aad
loope
jo
das
mov
mov
mov
cmc
or
jl
push
jae
popf
loope
inc
cs
cs
jecxz
xchg
arpl
shr
xchg
adc
jns
lods
stos
add
movsb
mov
jnp
sbb
adc
mov
out
push
sbbl
icebp
lret
data16
dec
mov
stos
jb
test
xor
cmpsl
cmp
pop
lcall
out
or
movsl
jnp
mov
fwait
cld
or
in
std
lahf
lock
cmp
mov
xchg
call
in
out
mov
jmp
mov
cmp
push
data16
mov
jae
pop
repnz
xchg
xchg
jmp
je
scas
inc
ret
mov
ss
inc
jp
dec
aam
and
pop
rcll
and
mov
xchg
fs
insb
inc
sub
fsts
hlt
pop
mov
dec
dec
and
mov
scas
shrb
arpl
push
pusha
adcb
push
inc
and
lock
mov
cmp
add
hlt
mov
mov
xlat
pop
js
and
push
jo
fnstenv
lret
data16
mov
push
sub
sbb
mov
lds
pop
lret
ss
outsl
xorl
jmp
je
notb
and
push
sub
insb
enter
testb
movsl
push
add
pop
mov
out
pop
pop
pop
mov
insl
adc
inc
cli
lds
cs
sbbl
pushf
subb
adc
sub
jns
insl
fidivs
xor
in
mov
xchg
aad
cli
adc
lds
jg
lea
popf
daa
stos
rcl
or
sub
pop
jecxz
mov
outsb
cmp
repnz
or
adc
popf
in
aas
dec
fwait
and
pop
sbb
xchg
adc
clc
shll
cli
pop
mov
lret
sub
ljmp
dec
dec
push
pop
mov
inc
jle,pn
fdivrs
scas
jno
test
sbb
lcall
lret
imul
mov
clc
inc
inc
shrl
xor
xchg
mov
insl
loop
mov
xor
xor
int
iret
add
sbb
seto
and
imul
es
cld
subl
dec
sub
repz
mov
in
mov
adc
xchg
push
rorb
sub
enter
jp
dec
inc
pop
lahf
stos
inc
int
mov
pop
mov
adc
mov
fildll
add
mov
jne
orl
adc
jge
cli
add
push
mov
jb
sub
dec
bound
out
xor
cld
outsb
sti
sbb
mov
lahf
xor
stos
dec
mov
jge
adc
push
inc
in
add
lret
mov
lret
xchg
dec
es
je
les
adc
pop
adc
pop
repnz
or
fwait
popa
mov
or
jecxz
pop
or
xchg
push
push
jg
adc
out
ret
push
xlat
jmp
push
ret
add
or
or
cmc
cmp
xchg
adc
js
pop
inc
mov
xchg
divb
add
roll
ds
add
xor
jnp
rorb
data16
enter
or
cli
or
fmull
movsb
mov
sti
jp
and
mov
jp
cs
adc
fcoms
add
xchg
sahf
push
push
movsb
pop
in
movsb
outsb
add
add
mov
and
enter
and
enter
cmpsl
lds
outsl
lods
pop
orb
cmp
sub
jo
jbe
pop
test
repz
sbb
cmc
mov
sbb
popf
dec
test
sbb
sahf
adc
cmpsl
jb
sub
jns
push
dec
push
cmpl
adc
jne
aas
dec
push
cmpsl
add
test
je
cmp
les
mov
xor
fnstcw
mov
fimull
mov
pop
out
lret
adc
inc
hlt
movsb
repnz
lret
pop
push
out
and
mov
add
xlat
outsb
das
and
or
push
inc
insb
scas
out
movsb
sbb
and
sub
and
test
mov
rol
stos
mov
or
in
mov
test
jmp
notb
pop
mov
lods
jae
pop
int
in
out
jo
dec
jecxz
xor
jmp
push
pop
popa
in
sbb
adc
addr16
adc
xor
pop
pop
xor
and
push
push
out
adc
jne
in
dec
xchg
popa
dec
dec
mov
sub
mov
jno
mov
and
inc
jae
ljmp
ret
adc
fmul
adc
lcall
lds
xchg
adc
repz
sbb
push
inc
int
rcl
push
adc
xchg
ret
add
out
lds
xor
add
rcr
sbb
mov
pop
je
pop
push
out
popa
pop
nop
hlt
test
notb
or
or
pop
movsb
or
xchg
jge
push
repz
aad
push
adc
pop
cmpsb
scas
sbb
sbb
lret
fs
jnp
add
sub
mov
xchg
mov
mov
push
pusha
and
lock
sbb
dec
push
hlt
pop
ss
lahf
and
cmpl
icebp
test
pusha
int
adc
and
mov
cmpsb
incl
jg
cmp
shrl
cmp
icebp
movsl
jno
add
frstor
pusha
fbstp
cmp
sub
push
add
sub
sub
test
pop
ds
push
mov
inc
stos
lahf
and
mov
js
lret
fmull
jb
sbb
sub
pop
loope
repz
pop
in
fmul
fnstcw
xchg
arpl
fs
add
into
and
dec
imul
shrl
cmp
imul
or
dec
mov
pop
fnstsw
sbb
jmp
daa
es
sub
cli
scas
cmpl
or
dec
mov
outsl
mov
fcoms
imul
addr16
test
inc
inc
mov
loopne
mov
adc
push
addr16
jmp
pop
mulb
cmp
leave
imul
or
mov
sarl
sub
xorl
fdivrs
dec
mov
imul
xchg
les
fs
push
sbb
inc
pusha
push
xlat
int
movsl
add
out
push
mov
divb
popa
sbb
das
sub
adc
and
mulb
les
xor
pop
xchg
popa
or
ja
sbb
or
int3
or
cmp
call
clc
mov
jmp
sti
xchg
sub
leave
dec
in
ret
xorl
mov
inc
call
add
rorl
jl
leave
and
cmp
stos
cmp
xor
cli
fs
pop
test
aad
mov
cs
pop
lods
movsb
mov
repnz
aam
mov
gs
xchg
icebp
mov
arpl
push
data16
pop
mov
add
test
mov
nop
imul
cmpb
scas
mov
pushf
mov
mov
xor
cwtl
xchg
push
pop
mov
mov
rcrb
dec
jg
ss
mov
sbb
fstl
orb
xchg
xor
stos
fnsave
cmp
push
sti
gs
js
mov
sbb
int
out
sbb
xor
not
in
push
btc
dec
mov
cmp
mov
popf
xor
test
mov
mov
xchg
fmuls
dec
out
xorb
daa
mov
fldz
test
jns
mov
test
push
inc
insl
out
xchg
and
cld
adc
sbb
or
dec
repnz
cwtl
in
dec
cmp
or
rorb
dec
rcll
lds
cmc
adc
je
rcr
sbb
mov
sub
dec
dec
loop
movsl
pop
lret
push
cltd
jno
daa
insb
add
xor
imull
pop
inc
fisubl
and
jnp
cmp
mov
sbb
mov
jae
and
mov
jae
add
bound
ss
xor
bound
push
add
push
call
jle
sbb
scas
xchg
and
sbb
shrb
mov
fnstcw
in
push
ficompl
loop
push
clc
add
ret
sub
mov
and
pop
scas
fmul
sub
mov
gs
movsl
ret
add
pop
movlps
ljmp
dec
cmp
mov
xchg
js
push
ret
mov
pop
ss
pop
call
ficompl
aad
test
icebp
dec
mov
pop
sub
sbb
mov
inc
xchg
in
xor
push
cmp
mov
out
sbb
mov
jl
pusha
xor
ret
xchg
jae
mov
sub
ja
pop
cs
mov
cs
in
scas
call
pop
sbb
icebp
sbb
mov
cmp
stos
inc
movl
pop
test
fdivrs
dec
xchg
sahf
outsb
sbb
jle
pop
pop
movsb
inc
arpl
sub
lods
push
out
test
into
dec
dec
or
arpl
mov
dec
les
bnd
outsl
jae
fisttpl
stos
inc
data16
movsl
or
fbld
push
and
jnp
inc
lods
mov
fnstsw
mov
mov
popa
jo
cmpsl
mov
dec
dec
jecxz
adc
mov
push
push
in
into
xor
mov
push
jnp
xchg
xor
aas
cltd
sbb
lret
mov
es
test
popl
popa
add
jne
pop
loopne
int3
enter
rolb
adc
add
push
out
add
xchg
xor
lahf
mov
bound
mov
in
jae
xor
xchg
or
cmpsl
jbe
mov
out
cld
xor
inc
aas
fwait
push
mov
cltd
filds
xchg
daa
lret
iret
and
bound
push
mov
lods
ljmp
xchg
adc
lcall
mov
push
dec
mov
hlt
xor
mov
mov
movsl
adc
cmc
mov
pop
push
or
sar
mov
mov
sbbl
push
jno
jo
mov
mov
xchg
fsubrs
mov
xchg
leave
data16
stc
dec
add
icebp
jmp
adc
imul
sbb
mov
or
divl
fisttpl
fidivrs
mov
inc
test
loopne
sub
xor
shll
int
dec
push
cmpsl
jle
mulb
cmp
pushf
ss
sub
stc
adcl
mov
xor
flds
push
cmp
stos
push
jo
add
loop
xchg
mov
lcall
push
loopne
or
pop
pop
inc
pop
add
xchg
test
lods
jp
les
or
loope
test
jmp
add
xchg
sub
cmp
cli
ljmp
pushf
popf
fs
mov
mov
loope
pop
pop
in
xchg
and
ret
inc
mov
sbb
rcll
adc
jne
pop
lds
imul
fsts
out
scas
stc
xchg
das
mov
inc
nop
rcl
outsl
lahf
or
jmp
adc
repnz
pop
xchg
pop
ljmp
push
aas
xlat
movsl
in
stos
daa
dec
inc
mov
push
xchg
out
jb
pop
adc
mov
mov
jnp
jecxz
movsl
call
test
push
xor
push
push
xlat
je
popf
sbb
ret
adc
mov
in
xchg
mov
fistps
fdivl
or
inc
and
lret
test
loopne
fmul
adc
cltd
out
dec
dec
in
gs
adc
adc
imul
daa
sub
ljmp
scas
mov
mov
mov
dec
xchg
pop
hlt
insb
popa
adc
dec
std
and
sbb
int3
cs
jl
xor
sub
sbb
sbb
jecxz
dec
enter
mull
nop
add
mov
push
outsb
sub
xor
mov
jp
mov
fcmovbe
fsubrs
shl
pop
daa
jns
lods
push
out
lea
lock
push
dec
arpl
es
pusha
out
jae
pop
je
mov
add
pop
cmp
adc
adcb
outsl
repz
and
adc
ror
adc
ds
out
mov
addr16
xor
scas
push
cli
lahf
rclb
cmc
cwtl
jp
fsubrl
pop
lods
int3
inc
xchg
mull
mov
add
mov
into
movsl
icebp
jl
pop
dec
repnz
scas
mov
scas
ss
xorb
cmp
sub
in
push
mov
dec
xlat
aas
pop
jno
sbb
scas
daa
push
cmp
hlt
popa
fcompl
in
push
lods
mov
cmc
movsb
in
add
fcompl
add
in
mov
xchg
mov
adc
sti
xchg
sbb
js
movsl
pushf
outsl
mov
push
testl
es
std
xchg
xor
outsb
insl
or
in
repnz
jge
fldcw
shl
jecxz
inc
adc
ss
mov
mov
ja
icebp
xor
adc
ja
jne
fsts
rorl
inc
cwtl
push
int
fcmove
adc
in
mov
ss
popa
fs
jns
inc
mov
push
mov
incb
pop
aas
dec
add
dec
and
xchg
jns
aam
xchg
add
stos
dec
out
out
hlt
mov
jne
lds
mov
xchg
sub
rcrb
and
push
nop
movsb
mov
mov
cmpsb
imul
out
mov
jmp
push
cmc
mov
std
ljmp
mov
sarb
mov
cs
movsb
xor
and
add
lret
xchg
scas
repz
sbb
mov
jl
sbb
inc
sahf
cmp
out
mov
sub
lds
pop
iret
jne
cmpl
mov
fs
aam
test
std
cmp
js
mov
jge
sahf
jb
and
xchg
gs
dec
rcll
adc
rcr
scas
mov
shlb
pop
insl
in
jg
pop
inc
pusha
sbb
mov
and
dec
ljmp
pop
sbb
insl
sahf
cmp
scas
or
jg
mov
inc
outsl
lods
lahf
sbb
ds
sbb
cmp
xor
fcomi
inc
gs
cli
cmpsl
cmp
fisttpll
add
dec
mov
out
les
dec
iret
cmc
rolb
push
leave
jmp
xor
out
push
dec
imul
setb
andl
insb
jne
jb
and
push
sti
fdiv
mov
clc
mov
pusha
sub
es
and
push
in
sti
in
or
adc
xor
pop
insb
int3
mov
mov
add
pop
mov
lcall
jecxz
pusha
lock
push
push
or
cs
pop
je
sbb
into
xor
xchg
subl
test
aam
mov
push
cmp
sahf
sbb
pop
cwtl
cmpsl
ret
pop
jle
lock
pop
je
dec
pop
mov
stos
cmp
test
fdivl
or
mov
fsubrp
test
andb
add
lret
add
mov
push
mov
mov
dec
pushf
dec
xchg
popf
popa
idivb
mov
mov
shrb
dec
les
pop
test
fistps
dec
fisubs
hlt
mov
xor
push
mov
inc
xor
push
xchg
xor
adc
addr16
mov
and
imul
sub
jmp
mov
add
xor
fnsave
dec
repz
sti
inc
inc
sub
iret
imul
call
hlt
cmp
or
xor
push
mov
imul
loop
idiv
movsl
movsb
jg
jge
popa
int
insb
mov
mov
mov
push
mov
ret
int3
das
cli
js
ds
mov
fisubrs
fidivrs
sbb
cwtl
and
cmpsb
cmp
daa
adc
xor
stos
js
call
mov
add
pop
stc
pop
icebp
out
cli
out
test
frstor
inc
mov
popa
aad
adc
scas
mov
sub
loope
stos
sub
cmp
jnp
adc
pusha
add
push
fidivs
dec
paddb
adc
xchg
mov
mov
lea
ja
push
pop
add
cmp
daa
nop
xor
mov
pop
fiadds
fadd
cmp
or
and
insl
cltd
out
popf
mov
dec
inc
cli
or
lahf
test
ja
call
loop
sahf
popa
jl
shlb
cmc
movsb
es
lea
cmp
mov
adc
jg
sbb
mov
lock
pushf
das
xchg
mov
mov
sub
insb
jecxz
jo
pop
add
xchg
test
jnp
or
mov
jns
push
arpl
jns
push
xchg
mov
jae
push
sub
jecxz
iret
popl
sbb
and
add
cmp
int
lcall
scas
hlt
fbld
cmp
negl
aad
outsl
daa
pushf
ja
jns
jge
cmp
adc
sub
mov
mov
add
sbb
popa
inc
out
push
arpl
inc
hlt
shl
mov
xchg
jmp
leave
push
cmp
cltd
lahf
inc
pusha
fldenv
jne
in
push
push
xchg
jae
in
push
push
add
pop
inc
xor
sbb
jb
jl
sbb
jp
jmp
xchg
jb
cwtl
arpl
jns
cld
daa
xor
and
pushf
arpl
nop
push
mov
push
push
jne
pop
mov
mov
les
adc
out
out
daa
aam
push
push
mov
repz
cltd
jae
pop
pop
adc
movsl
outsl
call
mov
lcall
pop
stc
mov
lcall
loope
pop
push
cmp
dec
pop
into
pop
inc
jae
xchg
mov
cmc
repz
adc
inc
push
sub
push
sbb
dec
sub
jge
pop
push
mov
fldenv
sub
xlat
adc
mov
adcb
mov
out
shrb
mov
jno
loopne
push
mov
adc
subb
out
push
sub
loope
and
das
filds
pop
fisubrs
adc
pop
push
jae
rol
push
fldenv
or
loope
lret
loope
mov
leave
jecxz
negb
imul
or
les
in
in
jmp
ss
lea
cltd
out
lret
xchg
lret
push
push
call
sarl
jb
jl
mov
inc
adc
idiv
push
xlat
xor
inc
pop
icebp
jae
mov
sahf
js
iret
sub
ja
or
add
dec
mov
ret
pop
add
imul
push
push
mov
xlat
outsb
cmp
aaa
into
or
outsl
int3
fimuls
sub
push
test
daa
xor
fbstp
push
ja
xchg
cli
sar
nop
insb
sbb
insl
jns
lds
adc
dec
fildl
xchg
das
sti
mov
sub
int3
test
std
pop
and
sub
xor
movsb
push
or
mov
mov
test
add
loopne
push
addr16
lcall
xor
and
cmp
sti
push
cs
and
jae
jb
lds
xchg
cli
nop
mov
push
mov
ret
das
dec
xchg
bound
arpl
icebp
dec
outsb
std
inc
fcomps
addr16
movsb
mov
arpl
cmp
cmpsl
sbb
ret
dec
in
cltd
pushf
imul
imul
js
int
shr
fiaddl
ljmp
subb
push
shlb
leave
movsb
mov
sbb
loope
pop
sub
push
xor
sbb
jns
aaa
into
jns
dec
adc
fwait
sub
adc
pop
cmc
les
stos
push
fistps
and
dec
bound
repz
xlat
mov
dec
pushl
xor
movsb
lret
mov
into
movsl
out
sub
neg
aad
fs
push
jbe
xchg
rclb
lods
inc
lahf
mov
addr16
out
stos
test
out
mov
mov
in
leave
dec
mov
inc
loope
loop
push
dec
icebp
int
movsb
sti
push
out
cmp
push
in
pushf
into
outsb
xor
lahf
jb
in
lret
mov
in
jecxz
popa
jne
pop
xor
ljmp
int3
inc
mov
es
mov
pop
divl
or
push
in
xchg
aaa
xchg
xor
mov
mov
aas
mov
mov
popa
ss
cmp
ja
in
inc
rcrl
cmpsl
inc
push
loopne
cmp
dec
shrl
aas
fildl
jae
in
fs
nop
adc
inc
lahf
out
cmp
inc
mov
jle
fwait
scas
jecxz
or
loop
inc
test
setp
push
incb
and
xor
or
loop
mov
xchg
and
jb
addr16
lret
or
or
mov
add
push
movl
xchg
adc
jae
add
xchg
pop
and
jnp
addl
cli
mov
into
popa
and
fldenv
cs
insl
push
nop
pop
data16
fnsave
data16
add
stos
mov
mov
movsl
data16
sahf
cs
xchg
inc
mov
fwait
cmc
test
dec
sub
push
pop
mov
inc
adcl
cmp
out
xor
rcrb
orl
out
jle
push
or
pop
lret
shrl
add
lods
adc
push
dec
addr16
jo
sbb
das
ret
xlat
lcall
icebp
sti
dec
testl
lahf
cmp
jb
mov
inc
cld
loopne
gs
out
jae
xchg
jns
jae
adc
adc
mov
sahf
fs
push
jb
jnp
cmp
xor
jle
pop
jp
nop
jbe
repnz
ja
movsb
test
xchg
inc
loope
jns
sbb
insl
popw
pusha
jle
pop
and
add
mov
aad
and
cmpsl
xchg
js
inc
leave
dec
adc
arpl
mov
dec
out
or
ljmp
push
in
cwtl
std
lods
sbb
out
rep
mov
pusha
adc
andl
push
adc
pop
rcrl
sbb
inc
pop
arpl
mov
dec
scas
adc
pop
cmp
mov
movsl
and
es
in
int3
stos
mov
inc
push
in
aaa
or
mov
add
mov
es
xchg
fiaddl
mov
or
push
notb
mov
cld
push
fidivs
mov
outsb
mov
stos
mov
adc
hlt
mov
int
dec
sbb
xchg
pop
clc
nop
iret
jb
push
sub
mov
fs
sbb
outsb
ja
dec
mov
mov
mov
orl
iret
das
frstor
dec
add
cs
daa
mov
imul
lahf
or
fistpll
loop
into
mov
jp
sbb
rol
fmull
cmc
out
mov
stos
inc
xchg
data16
jnp
je
pusha
inc
popa
xchg
std
cli
cmp
mov
mov
and
sti
push
das
leave
and
jmp
xchg
je
xor
or
in
add
pop
push
test
push
sub
out
das
lods
mov
lods
mov
hlt
mov
and
pusha
shrb
pushf
jmp
xor
popf
bound
mov
jmp
lcall
test
jbe
cld
xchg
push
pop
sub
aas
sbbl
and
xor
sub
jecxz
pop
repz
ljmp
lahf
jb
movsb
push
stos
mov
nop
popa
mov
lcall
and
mov
fidivl
hlt
in
test
push
mov
sbb
xor
mov
inc
add
sub
adc
push
jb
enter
sti
jb
dec
xchg
cmpsl
jns
out
test
xchg
ljmp
and
pushf
test
cwtl
insl
jns
outsl
fcomip
scas
adc
loope
stc
lods
inc
out
pop
jp
mov
lea
lock
popf
notb
push
lods
les
mov
dec
xor
ret
push
dec
mov
mov
sbb
xchg
insl
cmp
pop
sub
mov
repz
pop
push
outsl
ja
jle
fisttps
xchg
test
sub
mov
pop
add
and
call
pslld
out
jno
ljmp
push
cmpsb
in
ds
push
mov
inc
pop
into
adc
cwtl
pop
sub
pop
shl
jnp
jle
lods
fs
fldl
xor
into
cli
jnp
or
out
inc
ljmp
cmp
loopw
popa
xor
mov
push
mov
jp
sbbb
inc
sub
ret
push
outsl
fsts
clc
or
ffree
jne
dec
mov
js
int3
addr16
pop
add
sub
or
fidivrl
bound
test
mov
rclb
outsl
mov
adc
nop
lret
xor
data16
rclb
pop
je
test
out
cmp
sbb
nop
sbb
lods
dec
sub
add
and
sub
cs
cmc
mul
mov
dec
sub
das
sub
jo
pop
push
dec
popa
and
mov
push
pop
repnz
xor
xchg
fmuls
mov
push
or
mov
mov
sub
mov
js
add
cltd
xor
popa
mov
call
inc
jo
add
scas
mov
inc
lret
jb
fs
jno
lods
mov
sbb
cmp
orl
in
pusha
pop
pop
vphaddbw
ret
das
adc
popa
pop
jbe
sahf
mov
out
loope
jbe
in
lahf
cltd
popa
ljmp
pop
mov
lock
or
das
nop
add
loopne
xchg
fwait
adc
dec
push
inc
or
mov
into
jns
push
and
xlat
int3
sub
jmp
sub
popa
push
sub
jno
push
call
jo
push
sbb
inc
ljmp
cmp
stc
pop
xor
movups
jmp
leave
int
pop
jbe
push
sbb
and
inc
mov
xor
xor
push
es
sbb
fisttpll
inc
cmp
int3
fidivrs
push
call
jb,pn
xchg
push
fisttpl
jp
xor
cltd
cmp
xlat
in
xchg
mov
std
subb
adc
rcrl
js
out
cld
adc
or
mov
sub
fidivs
andb
push
std
xchg
aas
mov
andb
icebp
xor
xchg
add
adc
out
ret
mov
dec
push
fnstcw
leave
in
subb
lret
xor
xor
xchg
callw
mov
push
add
scas
mov
mov
cld
jge
loope
mov
cld
or
mov
aaa
pop
xchg
inc
movaps
xchg
add
in
out
bound
lret
xor
cs
mov
push
ret
subb
mov
int3
flds
push
jmp
push
pop
sbb
xor
xchg
es
ret
fwait
mov
push
push
fists
xchg
add
mov
imul
jg
not
incb
lcall
nop
cli
xchg
xchg
andb
mov
shr
ja
and
jne
sbb
xor
push
add
pop
rclb
fists
addr16
inc
adc
xchg
std
jno
cs
mov
aad
sbb
jmp
fs
mov
fs
mov
in
insb
js
jge
add
sub
dec
xor
rorb
push
mov
nop
xchg
jp
xchg
lods
mov
ds
adc
pop
int
sbb
xchg
mov
and
mov
insl
inc
repnz
fisttpl
lods
ljmp
xchg
add
loop
cltd
jg
into
lods
lods
inc
fldt
dec
mov
sub
jge
push
xchg
add
fistps
mov
mov
call
dec
testl
or
stos
outsb
pop
xorl
inc
icebp
mov
imul
fs
dec
lods
cmp
out
loope
cld
sbb
pop
stc
push
push
rcll
jl
stc
rol
push
inc
popf
insb
push
fcoml
shlb
jp
pusha
mov
mov
mov
loope
out
in
ffreep
or
loop
pop
xor
xchg
xchg
mov
repnz
dec
icebp
jl
cmpsl
stos
dec
mov
js
fwait
push
cmpsl
incb
xor
and
jnp
loopne
and
bound
add
gs
lea
loop
popa
call
sarb
orl
out
nop
jge,pn
dec
and
cmp
lods
inc
push
cmp
lret
bound
sti
stos
xchg
mov
fdivrs
dec
mov
mov
jne
movsb
test
into
pop
jmp
shr
mov
repz
scas
or
loope
cmp
adc
and
mov
or
mov
or
lock
movsl
sub
sbb
outsl
adc
xorb
sub
mov
xor
push
sbb
test
sbb
cmp
mov
scas
outsl
xchg
adc
sbb
xor
push
stc
nop
dec
push
jge
inc
pop
cltd
out
popf
rclb
and
loop
push
or
addl
inc
mov
jno
xchg
inc
adc
mov
lcall
loope
pop
hlt
cmpsb
sub
clc
ret
pop
pop
jmp
rol
scas
add
aam
mov
orl
cld
inc
ja
jb
jge
rclb
outsb
sahf
sahf
cmp
xchg
inc
fs
inc
scas
clc
divl
fisubrs
lahf
fistpl
adcl
call
push
daa
sahf
push
mov
xchg
mov
push
mov
jecxz
inc
sbb
push
dec
and
adc
ds
pop
stc
pushf
repz
xor
popa
subb
fldcw
movups
xchg
pop
insb
inc
sbb
and
sbb
cmc
and
outsb
dec
cmp
dec
scas
cwtl
add
mov
mov
sbb
or
pop
cld
push
negb
fstpl
fwait
xchg
ret
dec
add
lock
shll
cmp
inc
rclb
adc
mov
fistl
or
fabs
jmp
sub
push
or
std
jne
push
lods
xchg
pop
add
jns
xor
jecxz
insb
shrb
push
push
jb
data16
mov
sbb
or
dec
xchg
add
popa
adc
cwtl
xor
movsb
mov
lcall
clc
add
iret
mov
pop
xchg
repnz
adc
clc
push
inc
fdivrl
or
fisubl
jge
and
in
pushf
mov
jae
sub
xchg
mov
test
scas
mov
stos
fcomi
rolb
pop
mov
stos
push
add
cmp
xor
mov
mov
jnp
mov
les
fdiv
icebp
jo
in
and
mov
insl
mov
xchg
push
jge
jbe
xor
jl
adc
jge
arpl
inc
ficoms
cmpl
add
scas
inc
pushf
mov
lret
popa
push
aam
icebp
nop
jae
jle
mov
nop
mov
mov
sub
jp
aam
inc
shl
and
mov
arpl
sbb
shll
mov
out
sbb
aaa
and
sub
inc
pop
jbe
inc
ficompl
xchg
xor
stc
adc
sub
out
ficoml
cmp
in
es
mov
nop
mov
lea
mov
das
sub
insl
add
lret
jns
mov
repnz
lret
add
mov
push
or
add
inc
ror
xor
addr16
cmp
inc
inc
aad
cmp
sarl
outsl
jmp
or
mov
dec
pop
cmpsl
ret
mov
pop
xchg
sub
rclb
add
pusha
and
dec
inc
pop
mov
mov
dec
aad
leave
mov
fstps
test
adc
int
cltd
sbb
stos
stc
sbb
stc
push
subl
call
mov
mov
push
and
mov
div
push
jecxz
ficoml
out
mov
dec
push
or
in
les
sbbl
int
mov
pop
movsl
mov
out
loope
and
and
push
aam
push
and
jo
dec
xchg
pop
repnz
adc
pop
mov
loope
adc
mov
push
push
dec
cwtl
pusha
lods
mov
push
lock
sbb
mov
or
mov
sbb
xchg
xor
mov
fs
mov
clc
dec
xor
sub
icebp
cmp
cld
clc
das
out
cmp
xchg
ds
push
xorb
inc
xchg
and
lea
xor
test
nop
addr16
jno
mov
loop
mov
pop
paddw
cmp
in
cmp
mov
push
jle
or
inc
inc
dec
jg
inc
inc
or
mov
imul
mov
in
pop
push
mov
push
dec
push
jne
sti
ud2
jae
lahf
lods
sub
pop
int
push
adcb
jb
imul
inc
inc
bound
std
data16
jnp
fisubl
pop
mov
mov
xlat
mov
jg
clc
pop
ss
nop
xchg
imul
addr16
rcrl
and
jne
stc
test
jb
jne
cmpsl
jae
and
testl
xchg
jp
adc
xor
adc
ficoms
gs
pop
outsl
mov
outsb
cmpb
xlat
cld
add
jp
and
insl
cmp
mov
cmp
test
arpl
outsl
rcll
out
lret
loop
shl
inc
mov
jb
xor
or
std
xchg
out
adc
mov
jmp
jb
xor
adc
cld
pushf
imul
test
jecxz
jne
xorb
shr
xchg
xchg
into
ror
movzbl
lock
pop
clc
cmp
dec
aad
add
arpl
jns
seta
sahf
fwait
test
add
pushf
getsec
mov
or
testl
pop
xor
push
push
stc
pop
and
dec
mov
out
sbbl
mov
push
insl
cmp
push
jnp
or
clc
push
sbb
enter
dec
jmp
xchg
repz
cld
lock
jnp
xchg
mov
cmpl
or
mov
sbb
xchg
mov
jbe
lea
jno
pop
jne
sbb
rcl
xor
mov
sbb
mov
stc
sbb
mov
sahf
pop
and
sbbb
and
pop
test
ja
bound
push
pushf
mov
push
mov
mov
fists
mov
push
shlb
sbb
cmp
adc
shr
xor
push
sahf
add
push
insb
mov
loopne
lock
fldenv
push
mov
and
sbb
adc
push
and
xchg
cli
es
js
outsl
scas
call
xchg
sub
lock
loopne
movsl
cmp
rcr
jl
or
sti
sbb
in
dec
divl
movsl
arpl
inc
mov
jne
pop
xor
mov
sbb
add
ljmp
hlt
xor
inc
adc
data16
sbb
fisubrl
push
stos
mov
cmpsb
and
add
jne
test
stos
fwait
mov
jmp
adc
scas
cmp
stos
shlb
sub
scas
outsl
xchg
in
inc
sub
mov
pusha
mov
ret
mov
test
cmp
mov
adc
cmpsb
jns
xchg
xor
mov
cmp
inc
jmp
test
inc
clc
shl
and
or
loop
gs
fistps
sub
jne
jl
pop
cmc
sub
orl
push
popa
jnp
mov
adc
lret
jmp
rcrb
pop
add
movsl
dec
pop
lock
rcrl
outsb
jl
mov
stc
or
lahf
xor
xchg
jae
aaa
int
xchg
cmp
aas
repz
arpl
lahf
arpl
test
pop
cmpl
es
fidivs
filds
mov
fnstenv
adc
xor
sub
imul
ret
inc
hlt
lock
scas
and
mov
mov
iret
das
xor
adc
imul
nop
mov
int
sbbb
push
sbb
sub
mov
add
xchg
inc
pop
cmc
cmpsb
push
test
push
ljmp
inc
fdivrl
popa
outsb
loope
std
cld
cmp
xor
pop
bound
mov
sbb
pop
mov
cltd
dec
inc
pop
cmp
sub
inc
sub
sarb
test
pop
mov
and
mov
aad
jne
mov
jb
flds
icebp
pop
and
pusha
and
das
hlt
adc
fxch
bound
out
dec
add
in
in
mov
inc
addb
pop
loop
lea
fisubrl
mov
mov
add
pop
ss
aam
mov
mov
adc
int3
ret
sar
mov
or
ljmp
add
bswap
cmp
mov
mov
jmp
daa
pop
xchg
xor
or
clc
mov
sub
repnz
test
or
inc
scas
lahf
cmpsl
mov
xor
xchg
loopne
not
cmp
sbb
mov
jg
jns
addr16
xchg
xor
inc
mov
pop
cmpsb
and
lods
cmp
pop
adc
mov
add
fmuls
pop
imul
pop
pop
scas
fdivl
pop
pop
dec
enter
xchg
mov
fildll
std
loopne
outsl
adc
imul
and
pop
into
mov
add
push
pop
xor
rcrl
cmp
fcmovnbe
xchg
pop
inc
dec
sti
mov
sub
lret
dec
pop
mov
lds
jg
cmp
fisttpl
psllw
mov
out
cld
push
rcl
xchg
adc
push
jo
mov
lods
xor
mov
push
xor
cltd
mov
push
mov
sar
adc
lods
and
jno
ror
pop
mov
pop
sub
ljmp
cmp
in
stos
daa
or
fistl
mov
dec
lds
mov
mov
movsb
xchg
xlat
repz
mov
push
jmp
std
mov
inc
rcrl
int3
adc
and
adc
gs
cmc
mov
in
call
loopne
das
jg
push
mov
mov
xchg
mov
fs
sahf
mov
arpl
xor
stc
jp
lods
xchg
cmp
je
jp
fldenv
shr
call
aaa
ret
daa
imul
hlt
aaa
fs
fistpl
xchg
and
ficoms
jno
xchg
jecxz
cmpsb
or
or
mov
enter
loopne
mov
dec
adc
rcrb
insb
jno
xacquire
adc
jmp
fld
inc
xor
inc
jo
fistl
jbe
in
std
push
rcr
xchg
add
imul
pop
imul
push
shrl
inc
xlat
adc
sub
push
je
dec
mov
adc
cmpsb
or
inc
mov
push
push
sub
sbb
pop
mov
adc
rorl
addb
xchg
leave
repz
and
loop
mov
mov
in
sbb
sub
leave
es
xchg
cmp
jbe
or
mov
movsb
mov
out
int
sub
sbb
movsl
aaa
xchg
mov
jl
and
hlt
addr16
add
lcall
icebp
pop
lcall
outsl
xchg
jbe
les
push
adcb
jl
xor
js
dec
scas
mov
dec
fbstp
xchg
inc
fs
insl
loopne
adc
lods
sub
andl
cld
dec
js
xor
sbb
jmp
push
in
pop
cmp
insl
aam
xchg
add
pop
enter
inc
mov
jb
mov
repnz
not
fsubr
cmp
mov
jmp
ja
in
int
out
fwait
stos
in
das
xchg
xchg
rorl
dec
loop
mov
or
and
shlb
push
mov
adc
sbb
cmp
push
cltd
faddl
mov
dec
cmp
push
mov
iret
push
icebp
jne
xor
inc
pop
repz
clc
stos
sarl
mov
add
push
pop
lock
in
lods
pushf
jg
dec
into
jae
sbb
sbb
inc
sub
fcompl
aaa
or
inc
mov
mov
mov
fldl
mov
or
dec
fisttps
cmpsl
sbb
xchg
or
fsubp
cmpsb
call
popa
cs
mov
lock
cli
or
lahf
jl
nop
or
ss
rcrb
js
lds
adc
xchg
jnp
jne
lret
pop
xchg
ja
call
fstpt
xchg
push
and
jnp
cs
popa
jge
out
xor
fstps
inc
and
aad
pop
add
push
es
xor
adc
jno
repnz
push
icebp
jg
in
int3
idiv
stos
outsb
push
fiaddl
mov
dec
mov
hlt
add
push
nop
add
test
xlat
iret
jb
mov
test
aas
arpl
rcrl
jne
xchg
cs
mov
aam
pusha
mov
icebp
xchg
ss
mov
fistpll
test
cmp
or
mov
cli
ss
pop
sti
fnsave
aaa
ja
cmpsb
xor
arpl
leave
inc
popf
outsb
test
jmp
push
fimull
push
push
mov
stos
dec
fidivrl
pop
ds
mov
xor
lods
xchg
scas
dec
out
fildl
and
mov
xchg
inc
lret
mov
xchg
mov
test
xrelease
je
in
outsb
jle
push
or
pushf
push
pop
je
add
imul
xchg
or
push
das
cmp
jne,pn
pusha
out
and
xchg
insb
push
movsb
ret
jae
cmp
aam
jb
mov
popa
sbb
jb
push
push
xchg
sbb
push
js
sub
fists
mov
insl
insb
xor
imul
mov
mov
sbb
dec
adc
pop
jle
ds
fcomps
and
push
imul
push
jns
dec
jp
push
jns
xor
adcl
or
and
in
divb
pusha
cmp
xlat
and
pop
push
sub
fldl
jmp
xor
jmp
or
js
fs
fs
mov
pop
cmp
in
push
jecxz
inc
popa
xor
xor
aaa
hlt
pop
mov
add
test
rcll
xor
cmpsb
mov
movsl
out
inc
xchg
outsl
lock
mov
jne
mov
jae
jbe
std
xor
pusha
mov
rcl
sbb
and
and
and
mov
rorb
adc
mov
ffree
add
aam
andl
adc
xchg
jmp
insl
mov
push
mov
lock
or
xchg
testb
fs
pop
lea
cli
cmc
bound
int3
add
cld
push
or
mov
xlat
sbb
stos
mov
or
cmpsl
insl
test
jne
cmp
mov
repnz
pmuludq
mov
ret
pop
aam
sub
jecxz
lods
stos
jle
adc
popf
mov
rcll
push
mov
out
mov
and
sbb
pop
addr16
mov
enter
mov
adc
es
in
cmp
arpl
or
and
andl
pop
jmp
stc
hlt
cltd
jno
inc
inc
loopne
sub
inc
dec
xchg
jae
loope
lret
sarl
mov
shlb
and
insb
in
iret
das
cmpsb
sbb
sbbl
adc
aad
add
or
fisttpll
lcall
bound
dec
test
outsb
xchg
adc
add
mov
xor
daa
mov
lret
sbb
push
jo
mov
jns
or
mov
pop
cmp
int
lahf
jns
lret
mov
push
jb
out
adc
jecxz
movhlps
lods
jmp
dec
leave
dec
or
nop
arpl
lea
sbb
mov
fcmovnbe
pop
push
bound
mov
and
push
popf
push
push
xor
movsl
fnstcw
or
cmpsl
lds
push
jge
mov
jmp
pop
ljmp
or
jg
dec
xchg
dec
inc
iret
sub
xor
ja
dec
pushl
ds
jno
add
adc
jp
fcmovb
xchg
and
push
mov
mov
cmp
mov
jecxz
fidivl
gs
mov
gs
jp
mov
sbb
dec
repnz
cmpsb
jge
push
je
mov
jp
xor
jnp
mull
sbb
add
lret
bound
nop
push
fldt
punpckhdq
inc
inc
sub
xchg
dec
mov
jmp
call
out
xchg
mov
pop
sbb
or
rolb
sub
dec
jge
sbb
jg
xchg
xchg
jmp
jne
mov
adc
sahf
test
or
xor
lret
xchg
std
mov
adc
fcompl
sub
arpl
movsb
ja
mov
add
jle
xor
outsl
flds
xchg
or
sub
loopne
inc
fs
mov
test
sub
and
push
mov
stos
idivl
popf
loope
jge
adc
mov
xchg
dec
jae
out
ljmp
or
xor
push
pop
lea
add
cmpsl
mov
dec
push
out
or
lcall
test
aas
sub
pop
lcall
mov
sub
dec
lock
adc
loope
jmp
jne
arpl
jp
jnp
outsl
add
xorl
push
sub
xchg
sbb
push
popf
add
aad
push
rcrl
push
shll
pop
out
je
gs
and
mov
lea
mov
clc
rcl
mov
xor
pop
icebp
jl
fwait
fwait
cmp
daa
jecxz
and
in
mov
fidivl
testl
add
mov
jb
fsubrl
popa
popf
mov
jecxz
push
lcall
scas
xlat
shrl
mov
sarl
mov
test
mov
inc
test
jge
xor
and
sub
scas
arpl
dec
mov
inc
sbb
pusha
jnp
cmp
pop
cmp
mov
mov
lods
cmpsl
mov
data16
mov
loopne
inc
fsubrs
or
cwtl
add
cmp
xor
mov
or
pop
or
lds
std
jo
imul
lret
pcmpgtd
jge
xor
insb
mov
mov
jmp
push
leave
pop
ss
out
gs
mov
jge
or
jmp
mov
mov
mov
ret
mov
sub
xchg
sub
mov
mov
cmp
in
jmp
in
push
popf
hlt
add
jns
lds
cltd
xor
add
push
mov
add
dec
push
rorl
neg
xor
daa
ljmp
pop
loopne
jo
filds
cmpsl
mov
push
pop
cmpb
mov
scas
mov
cmp
jge
push
movsl
sbb
mov
pop
sub
fidivs
mov
cwtl
push
inc
and
fstps
test
or
pop
test
pop
or
mov
push
movsl
imul
in
mov
xchg
shll
subl
xchg
pop
jb
cli
mov
rcrb
push
shll
or
and
shrb
mov
mov
mov
push
inc
pop
incl
adc
mov
cmc
add
sub
adc
lea
push
lahf
testb
gs
xchg
jae
adc
xchg
sub
insb
push
jo
jnp
add
into
mov
dec
mov
jne
fidivs
push
hlt
and
mov
mov
cld
std
mov
xchg
dec
pop
les
aad
dec
adc
pop
rdpmc
mov
mov
clc
movsl
lods
xor
fisttpll
add
popf
xor
repnz
cmp
fldenv
xor
cmp
fbstp
leave
xor
in
dec
jmp
ds
jo
lcall
or
mov
out
push
or
inc
rolb
cwtl
das
cmp
pop
cmp
mov
pop
pop
xor
ret
xchg
movsb
pop
out
sub
mov
into
ja,pn
mov
pop
dec
in
mov
xor
loop
sbb
dec
cmpsl
imul
in
xchg
cmp
in
cmc
add
rcrb
jecxz
push
jne
xor
daa
test
imull
xchg
push
adc
outsb
jae
pop
fmull
mov
lret
clc
or
mov
addr16
add
aas
push
xchg
xchg
mov
cmp
push
pop
pop
cmpsb
imul
or
sub
cmpsl
mov
dec
dec
loopne
add
push
mov
add
jbe
push
dec
loope
outsl
and
ljmp
int
mov
cld
push
cmp
fildll
adc
jns
mov
daa
mov
and
mov
xchg
and
cltd
adc
ja
jmp
das
pop
ffreep
mov
dec
out
xchg
or
lea
call
int
xor
out
xor
clc
sahf
adcl
add
mov
jb
inc
jnp
enter
rcrl
push
int
pop
mov
push
mov
fldt
fdivrs
mov
xor
fldt
sub
mov
jne
mov
pop
sub
and
jae
dec
inc
dec
test
inc
testl
cmc
loop
into
dec
xor
int3
rcll
xor
jmp
push
and
imul
lret
es
leave
fstps
push
dec
in
repz
add
sbb
adc
out
cmp
lahf
mov
fwait
outsb
xchg
jecxz
ljmp
mov
sbb
enter
xchg
add
mov
add
rclb
shr
pop
lock
push
loope
sbb
mov
into
cmpsl
jg
pop
out
jle
mov
jge
popf
loop
push
xchg
outsl
ret
aaa
fbld
stos
adc
mov
scas
imul
mov
lock
mov
loop
rclb
pop
test
xchg
scas
mov
xchg
scas
ret
add
jb
imul
mov
es
xchg
mov
xchg
inc
es
dec
mov
sbb
sub
ret
jb
xor
loopne
clc
subl
inc
push
out
pop
ficoml
add
aas
sub
fdivrl
mov
adc
fistps
icebp
loope
js
and
sub
cmp
push
repz
inc
arpl
xchg
dec
or
or
stos
mov
insl
mov
xchg
sbb
add
test
sub
insl
and
xchg
stos
data16
push
or
cmp
fwait
push
lock
scas
xchg
push
movsl
shll
fs
push
inc
mov
jno
fidivs
in
mov
imul
add
lahf
insl
lods
lret
xor
xor
inc
andb
in
mov
lret
loop
loopne
jg
call
jmp
call
movsb
jb
imul
or
mov
lcall
pop
sbb
popa
stos
sbb
mov
fdiv
ret
mulb
fcompl
mov
aas
mov
cmp
and
movsl
fcmove
lret
inc
dec
faddl
push
inc
mov
push
mov
mov
mov
ret
or
xor
dec
jmp
dec
das
xor
and
xor
cli
cld
inc
xor
stos
mov
call
push
sbb
insb
fs
movsl
push
add
sbb
dec
or
clc
je
rorb
inc
mov
in
jo
xor
jb
shl
pusha
aas
leave
mov
addr16
adc
pop
sub
xor
fnsave
sub
in
jne
push
push
fnsave
call
es
and
jmp
mov
xchg
ret
aaa
ret
push
dec
loope
ja,pn
popf
sub
pop
sahf
xor
shrb
scas
roll
test
inc
scas
push
aas
iret
data16
cmp
mov
arpl
adc
xchg
cmp
shll
sbb
cmp
add
icebp
xor
push
adc
pop
pop
cmp
in
jge
inc
fnstcw
and
call
mov
bound
js
dec
dec
cmp
adc
cmp
les
mov
aam
mov
pop
imul
sahf
lods
std
adc
fcomi
lahf
jmp
inc
and
js
std
decb
lods
pop
scas
repz
pop
sub
xor
pop
pop
ljmp
mov
mov
push
mov
push
popf
gs
mov
test
aam
mov
push
jmp
shrb
jmp
insl
sti
cmp
icebp
outsl
mov
adc
mov
mov
inc
cli
pushf
cmc
loope
rclb
mov
push
xor
es
inc
or
lods
jp
cltd
push
sti
pushl
sbb
clc
jl
cmpsb
cli
xor
dec
ret
in
jg
mov
dec
cwtl
mov
out
aam
adc
iret
int3
cmp
xorb
ret
inc
test
sub
into
repz
push
adc
dec
mov
mov
push
int3
and
xchg
mov
sbb
or
lods
mov
xchg
sub
add
shr
push
out
pop
fyl2x
push
and
fmull
push
insl
mov
pushf
inc
sti
insl
mov
lahf
or
mov
pop
cmpsb
data16
rcrb
adc
push
das
ret
mov
mov
and
decb
cmp
cld
bound
pop
movsb
mov
xor
mov
adc
pop
call
adc
cmp
and
add
fistpl
mov
mov
int3
notb
loope
cltd
xor
data16
lret
pop
shr
test
pop
adc
fcompl
shll
fsubl
inc
fldln2
mov
jmp
push
iret
sbb
add
rol
sbb
nop
mov
stc
ret
fwait
shrb
cmp
dec
cld
mov
sbb
and
cmpsl
push
sbb
inc
rcrb
mov
rolb
das
xchg
and
rcrb
cmpsl
pop
pusha
testl
sub
mov
xchg
daa
leave
imul
pop
push
xor
cs
mov
aam
mov
mov
shrb
aas
sub
outsb
imul
insb
test
shlb
sbb
out
ret
shlb
inc
push
js
stos
jl
mov
nop
adc
orb
xor
xor
icebp
popa
cwtl
push
mov
jmp
jl
lock
idivb
cmp
push
pop
jge
or
sti
or
xchg
ja
cmp
mov
fucom
repnz
sub
test
push
sbb
cmp
fwait
ret
pop
cld
lcall
jne
shlb
dec
movsb
addr16
sub
aas
cmp
pop
test
mov
or
add
les
jl
push
xchg
adc
push
and
jb
jmp
insb
add
adc
insb
daa
pop
ficoms
jg
push
das
cltd
pop
lret
subl
sarl
and
mov
jno
pop
xchg
call
mov
daa
xchg
push
stos
jbe
shr
orb
xchg
xchg
push
negl
push
sti
in
jg
jbe
pop
adc
popf
sbbb
ficomps
nop
push
ja
jae
sub
xor
pop
jg
or
sbb
dec
in
stc
imul
hlt
icebp
daa
movsl
xor
dec
pop
xor
pop
mov
in
add
pop
pop
dec
or
inc
adc
fldl
fildll
hlt
stos
cmp
dec
fidivs
cli
sahf
jbe
dec
pop
xor
mov
mov
push
xor
outsl
cs
lret
fildl
lret
cmp
out
mov
mov
lret
and
call
shlb
bnd
pop
imul
sub
xor
xchg
dec
and
out
jg
lret
sub
cs
pop
inc
xchg
mov
add
ret
sbb
dec
and
outsb
daa
rclb
xor
dec
cmc
cmp
ljmp
dec
and
sub
jb
outsb
mov
into
xchg
dec
in
std
mov
or
shl
push
mov
xchg
mov
dec
mov
mov
pop
in
xchg
mov
aam
arpl
sti
cli
adcl
jmp
xchg
cmp
in
jle
xchg
dec
data16
mov
aaa
fidivl
dec
or
iret
out
cltd
repnz
jnp
call
sbb
adc
push
adc
xor
and
lret
adc
outsl
je
call
push
sbb
mov
fnstenv
sbb
aaa
dec
xchg
sti
xchg
cld
test
cli
mov
cmpsb
mov
aam
scas
int
adc
orl
lret
push
outsl
dec
jae
push
nop
ret
mov
mov
pop
popa
rclb
add
sub
mov
enter
mov
mov
sub
call
aas
or
aaa
dec
add
shll
mov
sti
jecxz
jae
add
adc
sub
out
insl
aas
imul
leave
adc
repnz
inc
cmp
or
fwait
fdivr
push
fists
cmp
mov
dec
push
inc
test
dec
aam
cwtl
xlat
fsubs
push
inc
mov
iret
ret
sahf
jge
jb
js
adc
pop
mov
mov
orl
ret
js
jmp
insl
popf
icebp
adc
sub
lahf
jno
xlat
imul
push
lret
sti
mov
rcl
adc
aam
clc
xchg
and
mov
sbb
push
pop
addr16
les
test
fdivl
add
lods
test
lock
mov
xchg
adc
push
cmp
xor
scas
and
push
cld
dec
mov
call
pop
mov
shl
add
aam
jo
std
pop
ljmp
ja
outsb
test
ret
add
mov
lahf
pop
hlt
adc
adc
cmc
mov
fcomps
test
test
hlt
dec
fbstp
xchg
je
cli
es
push
xor
les
call
push
in
insb
repz
lods
mov
jecxz
dec
add
push
dec
je
jmp
push
scas
mov
rol
sti
jg
or
es
and
push
mov
add
es
xchg
lahf
sti
lea
ds
lret
lea
out
repz
xchg
stc
mov
ljmp
add
clc
cs
clc
add
cmp
mov
cmp
and
dec
mov
in
cmc
mov
arpl
int
int
lcall
arpl
ret
xchg
or
ss
push
add
ljmp
daa
je
adc
sub
das
shll
test
or
dec
sbbl
aas
outsl
cbtw
dec
fsubr
test
mov
push
adc
mov
cli
jbe
sbb
mov
sub
mov
xchg
cli
xor
jmp
and
or
sub
or
cld
adcl
xchg
mov
dec
shll
test
jecxz
aaa
stc
push
ds
notl
aaa
mov
aad
mov
dec
sub
mov
out
xor
adc
dec
mov
jo
sbb
clc
das
xor
xor
addr16
jnp
cs
or
add
ret
jb
jge
aam
push
mov
negl
pop
shll
mov
leave
nop
push
inc
push
jmp
mov
and
insl
xchg
mov
push
sub
es
notb
fsubr
xchg
sub
sub
jl
sbb
inc
mov
mov
dec
or
mov
cwtl
push
arpl
fwait
cwtl
stc
or
rorl
out
rol
add
push
adc
ret
rol
ds
lds
sbb
loop
aaa
leave
call
into
ja
mov
ljmp
push
add
popa
sub
lock
ret
xor
mov
mov
test
loop
mov
adc
sarb
das
addr16
pop
add
je
xchg
call
or
es
shll
scas
mov
mov
data16
cmpsl
ljmp
cmp
xchg
cmpxchg
iret
dec
ljmp
pop
fistps
push
in
inc
mov
and
cmp
dec
xchg
pop
cwtl
bnd
test
fdiv
test
in
pop
std
cs
dec
divb
shlb
xchg
sbb
fidivrs
bound
pop
xor
inc
addr16
cltd
je
push
fwait
mov
mov
xchg
std
xor
push
sbbl
push
mov
lods
cmpsl
xchg
mov
flds
shll
arpl
cmp
pop
dec
and
insb
movsl
lock
inc
stc
mov
daa
outsl
hlt
aas
push
pop
xor
fsubrl
call
jno
jp
push
xchg
push
cmpsb
sbb
in
notl
inc
lods
xchg
inc
pop
mov
mov
cmp
adc
lods
ljmp
cmc
fs
inc
jnp
sbbb
sub
sub
jmp
or
add
mov
stos
and
jno
cmp
mov
fstl
into
pusha
test
adc
test
stos
sti
setb
mov
adc
mov
jb
xchg
mov
lods
lds
cmp
xchg
mov
aad
sub
aaa
stos
xchg
dec
neg
call
add
and
aaa
dec
adc
pop
mulb
push
mov
jne
in
sub
imul
js
xor
dec
cltd
ss
stc
outsl
push
xor
out
rcl
jbe
xchg
add
out
push
or
push
jge
test
or
mov
adc
cmp
inc
pop
mov
xor
daa
jle
push
jle
dec
cli
nop
jle
cmp
sbb
inc
pop
outsl
mov
xchg
dec
or
flds
loop
push
jne
add
cmp
inc
clc
test
ret
mov
or
xchg
dec
out
xchg
jmp
push
ljmp
pushf
adc
xlat
jo
stos
aas
fidivs
xor
sarl
test
das
imul
mov
mov
dec
jae
popa
cld
stc
push
mov
adc
cmp
gs
ds
xor
lods
xchg
push
mov
lock
clc
add
sub
movb
stos
scas
in
dec
cmp
lea
fs
mov
repnz
cmp
imul
lds
stc
pop
inc
xchg
lret
cmp
daa
or
xchg
sbb
outsb
jbe
cmp
shrb
stc
sub
aaa
jb
adc
inc
push
out
xchg
inc
mov
test
jbe
ljmp
jno
push
adc
inc
fneni(8087
push
push
push
or
icebp
mov
mov
sbb
pop
rol
sub
jg
mov
out
push
js
xor
add
inc
and
push
bnd
insl
or
addr16
cld
mov
pop
negl
mov
inc
push
cmp
int3
cli
xor
push
inc
inc
fstps
xchg
sbb
cli
sbb
inc
lds
mov
pop
roll
cmp
sub
jno
pop
movsb
push
cmp
out
jno
loop
popa
xchg
xor
aam
or
sub
stos
mov
loopne
xor
cmp
pusha
mov
ret
mov
xor
fs
arpl
ds
mov
enter
xchg
mov
cs
fisubrl
xchg
outsl
iret
mull
mov
divps
dec
shrb
sarl
nop
mov
outsb
outsl
sbb
bound
in
enter
in
mov
add
jecxz
in
mov
and
int
push
call
mov
in
and
mov
fbstp
jns
cmp
sub
loopne
mov
imul
sti
cmp
into
gs
addb
and
mov
int3
dec
out
imulb
jno
add
in
push
mov
xor
cmp
daa
aaa
xor
push
push
add
test
xchg
mov
fidivs
sub
inc
loope
jp
or
add
push
pop
mov
inc
push
jge
mov
mov
mov
jo
subb
xchg
mov
fistl
pop
ds
int
loopne
repz
adc
adc
insl
daa
es
jo
inc
pop
jne
cmp
mov
or
ss
mov
sub
sarl
shl
shrb
insl
cmp
popa
gs
imul
push
mov
cltd
std
dec
xchg
xor
and
adc
imul
jo
pop
mov
hlt
mov
dec
jb
jo
sub
inc
push
and
mov
pop
mov
jmp
cmp
insb
sub
jge
sbb
lods
js
cmp
xor
push
push
imul
fstpl
jnp
fnsave
pop
push
mov
pop
push
aaa
and
bound
js
jl
movsl
pop
test
or
loopne
pop
ljmp
fmuls
bound
cmp
rclb
mov
andl
or
aas
nop
or
test
mov
mov
and
clc
jbe
xor
add
sbb
push
mov
pop
jno
or
xchg
and
arpl
xor
adc
jecxz
cmp
and
mov
or
icebp
mov
lret
mov
flds
cwtl
or
ret
push
add
out
cmp
int
xchg
push
and
mov
mov
in
dec
outsl
out
sbb
dec
dec
mov
insl
in
pop
daa
inc
sbb
outsb
imul
nop
pop
fisttps
and
cs
xchg
add
or
mov
inc
scas
mov
fisttpll
dec
xor
negb
repz
adc
xchg
xlat
mov
sbb
int
adc
mov
push
out
or
ret
push
scas
xchg
dec
mov
rcll
subb
sbb
jl
pop
jbe
lret
pop
aaa
or
xlat
mov
data16
mov
or
inc
sub
dec
mov
mov
and
cs
xor
mov
push
pop
pop
pop
dec
mov
xchg
cmpsb
mov
cmp
fadds
xorl
out
add
mov
mov
cmp
jle
ljmp
dec
mov
scas
scas
stos
dec
push
cli
xchg
sub
arpl
push
insl
push
or
inc
test
sub
dec
pop
push
dec
push
mov
mov
cld
xor
out
stos
and
cli
je
cmp
sahf
andb
lret
pushf
mov
xor
arpl
mov
mov
iret
jge
xor
mov
jb
stc
das
loopnew
nop
jnp
xchg
push
dec
stc
nop
jge
dec
dec
xchg
test
jecxz
ja
add
adc
shll
lret
xchg
adc
rcrl
js,pt
jo
loope
add
mov
sub
mov
out
pop
ds
nopl
push
int3
mov
sbb
mov
xchg
sti
and
stos
inc
fcoms
repz
inc
mov
or
xlat
mov
push
outsb
in
lods
stc
or
mov
dec
dec
test
xchg
pusha
sub
cmp
mov
loopne
and
xor
lcall
push
jae
mov
mov
icebp
push
das
add
push
jge
fldenv
jb
push
push
push
pop
cmp
outsl
aaa
push
ret
sub
popf
mov
push
add
add
and
in
outsb
adc
xor
or
movsl
xor
inc
mov
mov
push
xlat
test
jns
pop
pop
or
xchg
xor
adc
sbb
insb
enter
mov
sbb
les
sbb
shll
insb
push
xchg
and
shlb
stc
xchg
xor
xchg
xchg
and
hlt
cwtl
xchg
imul
repnz
test
cmpsl
mov
mov
pushf
xchg
push
mov
adc
orb
sahf
ss
xchg
pop
cmpsl
or
xchg
xchg
cwtl
xchg
scas
cmp
fucomi
inc
rorb
cmpsb
xchg
sub
insl
lock
push
cmp
jge
iret
scas
leave
lcall
mov
sbb
repz
lock
jns
lods
xor
mov
adc
in
and
cltd
cmpsl
adc
cs
push
push
pop
pop
decl
addr16
hlt
jnp
and
xchg
jmp
insl
mov
xor
and
mov
lods
pop
adc
adc
mov
or
inc
mov
clc
xchg
mov
fisttpll
jecxz
sti
jbe
lods
mov
mov
mov
insb
cmp
jmp
or
das
lcall
out
les
or
ds
add
sub
mov
adc
xchg
dec
and
pop
sub
mov
test
push
fcomps
or
push
out
ret
sub
outsb
mov
sbb
addr16
adc
pusha
out
inc
xor
cmp
mov
push
pop
mov
pop
push
sub
dec
inc
gs
mov
sbb
int3
das
pop
int
cwtl
insb
pop
lea
ljmp
cmp
sbb
mov
addr16
push
lds
jp
std
stos
out
xchg
and
cwtl
jae
ja
sahf
mov
xchg
pop
rolb
lock
dec
pop
xor
mov
mov
mov
stos
dec
and
jns
dec
sub
xchg
xchg
sahf
xor
test
mov
shll
pop
int
cmp
or
dec
divl
push
in
icebp
xor
cmc
in
das
mov
xchg
jmp
mov
mov
sub
jne
mov
sbb
mov
sbb
sarb
stc
or
mov
xor
dec
repnz
mov
sbb
fiaddl
lods
inc
sbb
out
push
push
cltd
stos
aaa
addr16
mov
xor
lea
icebp
rcl
stos
jns
stos
mov
xlat
add
mov
cmp
ds
or
xor
fldt
leave
pusha
or
je
lcall
lds
pushf
arpl
rcrb
add
cmp
mov
lock
cld
sub
push
int
lds
imul
add
add
das
aam
mov
adc
mov
add
scas
ret
roll
arpl
inc
xchg
mov
xchg
shl
jns
cmpsl
or
sbb
fiadds
cmp
into
fisubs
fbld
cmp
imul
sahf
jg
xchg
mov
sbb
mov
mov
imul
fnsave
adc
jge
mov
in
sbb
pop
ror
add
or
mul
sbb
lcall
mov
int3
ja
shlb
xchg
xchg
hlt
iret
outsl
add
movsl
dec
or
pop
jg
sub
push
loop
out
xchg
pop
loope
aad
or
jb
pop
loop
lea
clc
xchg
fs
test
mov
xchg
jne
pop
imul
sahf
movsb
jnp
push
adc
js
xor
ret
dec
mov
jbe
cmp
ss
push
inc
fistl
xchg
xor
mov
dec
jecxz
mov
int3
ds
dec
sub
xor
sbb
rcll
lods
test
test
jp
dec
loope
xor
scas
pop
sahf
loopne
adc
jo
and
push
ds
mov
jmp
pop
inc
or
bound
and
mov
lcall
leave
out
mov
adc
or
adc
push
xor
mov
or
xchg
xlat
mov
xchg
inc
fwait
xlat
pop
mov
mov
shll
mov
repz
inc
popa
xchg
mov
enter
mov
bound
adc
cmc
stos
jmp
and
inc
push
sbb
mov
clc
push
xchg
sbb
jbe
lds
rol
dec
popa
mov
out
xchg
xchg
cmp
mov
loop
xchg
ror
pop
push
frstor
inc
aad
std
in
stos
xor
mov
jl
inc
jb
push
movsb
arpl
in
test
cmp
stos
or
xchg
jl
addl
es
or
lock
icebp
or
movsb
push
aam
pop
jl
fs
push
sub
out
outsl
cmc
arpl
adc
in
rsm
loope
fdivl
adc
dec
js
mov
inc
jmp
and
jle
leave
pop
cwtl
pop
in
test
imull
jle
lea
cli
xchg
push
in
inc
stos
lcall
scas
xor
cmc
push
push
int
xor
pop
int3
jg
loop
adcl
xor
std
aam
nop
clc
sahf
inc
xchg
mov
std
movsb
push
stos
ret
aas
scas
jmp
inc
sub
push
loope
dec
mov
push
orl
mov
or
mov
insl
jge
nop
jb
dec
mov
nop
jo
and
fcoml
popa
clc
jno
jb
js
adc
xor
jns
xchg
in
and
stc
inc
mov
jae
and
push
pusha
mov
aad
insb
push
int3
mulb
cmpsl
pop
bound
mov
gs
cmpsl
outsl
test
mov
ljmp
add
xor
xchg
mov
clc
xchg
mov
ret
pusha
cmpsl
push
movsb
cmp
daa
pushf
test
dec
jnp
jle
and
xchg
dec
aas
adc
mov
dec
mov
cld
ss
push
mov
mov
aaa
shlb
bound
repnz
out
call
push
je
repnz
add
xchg
iret
add
scas
gs
incl
ljmp
popa
sbb
jge
xor
jns
repnz
ss
pop
std
xchg
mov
or
jno
lea
addr16
in
xor
sub
dec
bound
data16
xlat
xchg
es
inc
and
cld
inc
mov
mov
cwtl
dec
mov
jge
dec
testb
pushf
das
pop
mov
dec
rcll
shl
xor
xor
xor
ret
mov
dec
ss
sub
mov
cwtl
pop
adc
sti
xor
jmp
popf
sbb
aam
stc
imul
sub
pop
inc
lret
sbb
aad
lahf
hlt
out
xor
lea
add
pushf
push
xchg
jns
mov
add
out
cmpsl
cld
loope
sahf
lods
adc
subb
in
adc
stc
aad
lds
psllw
xchg
adc
hlt
mov
xchg
leave
mov
adc
outsb
inc
sbb
adc
lret
push
cs
scas
xor
pop
clc
add
out
xchg
ja
push
js
pop
jae
int3
sbb
mov
jo
popf
xchg
or
or
mov
std
imull
jbe
jns
sub
std
lods
outsl
cli
or
sub
aaa
lret
cmp
xchg
imul
dec
mov
xchg
dec
rcll
nop
mov
mov
mov
je
push
inc
ja
jns
daa
mov
mov
iret
aaa
rcrb
xchg
or
xabort
pop
push
icebp
mov
xor
cmp
jbe
movsl
ret
in
jle
cltd
mov
int
repz
shlb
mov
loop
arpl
ljmp
xchg
dec
mov
mov
xor
push
push
jl
push
cs
frstor
popa
test
or
subl
inc
pop
jmp
dec
fstpl
testl
mov
out
fcmovb
cmp
push
lods
pop
adc
jnp
or
jge
das
push
imul
or
xchg
lret
sbb
aam
and
in
leave
ret
std
push
mov
fnstenv
jge
daa
sub
out
mov
xor
mov
mov
lret
push
fdivrl
inc
or
mov
push
and
jl
jle
push
jge
scas
insb
test
cld
mov
xchg
sub
push
jmp
mov
add
and
popa
cmpl
push
jmp
xchg
cmp
push
mov
sbb
lcall
mov
or
dec
and
adcl
cmpsl
jne
inc
test
pop
mov
inc
jmp
xor
popf
pop
lcall
xchg
loope
mov
scas
push
loope
mov
cmp
fsubrs
dec
outsb
loope
sbb
jo
call
or
test
sbb
xchg
ret
arpl
scas
mov
dec
pop
or
and
aam
pop
pop
push
adc
insb
cmp
lods
mov
dec
cwtl
inc
test
call
sbb
xor
sarb
arpl
scas
mov
push
xor
xor
insb
das
push
mov
fcmovnbe
repnz
lret
pop
mov
test
or
fwait
push
sbb
pop
jae
mov
fiadds
mov
mov
sub
adc
or
adc
push
cmpl
push
sbb
sub
pop
adc
sub
push
shll
ljmp
cli
mov
sbb
push
adc
push
in
sarl
daa
mov
jg
popf
xor
mov
mov
popf
cltd
mov
scas
ljmp
pop
mov
mov
fsubl
movsl
aaa
stos
adc
shrl
arpl
sub
test
pop
jmp
ret
arpl
outsb
loope
arpl
sbb
subb
push
and
mov
sbb
xchg
push
out
xchg
aam
stc
je
cmpb
lea
out
add
cmp
test
fstps
lock
sub
ss
inc
call
inc
enter
aas
aaa
lahf
adc
ud0
mov
sbb
js
push
sbb
mov
fisttps
mov
pop
adc
xchg
scas
lds
push
push
movsl
fidivrs
ret
jl
cmpsl
dec
mov
movsb
popf
pop
jle
ret
fidivrs
lahf
enter
movsl
call
mov
orl
ja
movsb
in
enter
out
scas
test
out
xor
aad
dec
xorb
dec
daa
add
pusha
jl
cmp
ja
inc
cmc
push
pop
push
cmp
movsl
cmp
push
xchg
inc
sarl
xor
jae
lock
inc
pop
aaa
stc
cmp
out
xor
stos
fwait
jb
loop
lock
stc
sbb
call
enter
cltd
pop
ret
and
mov
xchg
cld
xchg
adc
shl
xchg
cmc
daa
in
mov
ja
xchg
insl
push
sbb
sbb
aaa
dec
in
outsl
sahf
jb
or
mov
and
mov
inc
out
jns
adc
loopne
adc
scas
insl
fsub
je
xlat
movsl
lds
jle
mov
dec
aas
push
lock
lods
psubsb
inc
adc
dec
out
pop
mov
movsl
aam
pop
es
add
xchg
test
cmc
xor
rcr
mov
fs
push
pusha
adc
and
xchg
mov
insl
cltd
xor
lret
mov
pop
out
test
pop
fdivs
xchg
xor
cmp
stos
or
ret
outsb
jns
inc
fdivr
dec
or
lahf
call
jno
xor
pop
adc
xchg
mov
hlt
popa
int3
xchg
or
daa
add
ss
mov
push
fnstcw
pop
or
cmp
movsb
sbb
loopne
mov
xor
jb
xchg
es
shrb
ds
pop
lods
rcr
sub
cwtl
mov
add
mov
imul
lcall
xor
pop
dec
ja
push
fisubrl
dec
xor
sahf
adc
xchg
pop
push
add
pop
ret
and
leave
pop
insl
lret
test
inc
sub
or
mov
clc
stos
jecxz
sub
xchg
out
repz
ljmp
jne
repnz
lret
int
sub
int
std
or
xor
jge
mov
loop
or
push
addr16
popf
adc
jo
in
pushf
xor
jnp
mov
and
mov
aas
dec
sub
push
arpl
jp
push
mov
lsl
scas
mov
bound
jbe
rclb
jp
push
jb
xchg
pop
cli
hlt
stc
lea
add
xchg
inc
xlat
gs
jbe
xor
hlt
add
aas
divl
add
jno
lahf
inc
push
aad
lods
outsl
loop
icebp
push
clc
aas
push
out
imul
decl
add
jb
ljmp
lret
push
jg
adc
in
test
sbb
out
xchg
pop
filds
and
into
jl
jne
mov
lods
pop
scas
sub
mov
inc
dec
jne
int3
push
xchg
outsl
data16
dec
into
ficoms
mov
aas
ret
jne
popa
lcall
sub
test
aaa
out
xchg
test
add
es
xor
sub
cmp
arpl
addr16
mov
daa
jle
outsb
lret
xchg
popl
xor
test
clc
pop
mov
mov
cli
jnp
aaa
out
sbb
cmp
push
dec
pusha
jl
xor
stc
push
das
dec
daa
jae
adc
fmul
call
test
push
leave
in
pop
jp
mov
inc
rcl
in
push
lea
push
mov
je
loop,pt
test
je
dec
sbb
lock
scas
or
and
dec
pushf
roll
stos
fwait
cmp
cmp
push
pop
repz
push
cld
jecxz
pop
sbb
fcoml
test
icebp
jb
repnz
sbb
xchg
adc
jo
clc
mov
loope
arpl
sbb
lods
add
lock
imul
lcall
repz
lret
fldl
in
out
xchg
data16
testl
rcrb
sbb
mov
push
fbstp
xchg
daa
dec
or
jge
sbb
push
mov
cli
jns
xchg
test
adc
jle
ret
fisttpll
xchg
fwait
jne
mov
xchg
and
shlb
or
pop
fldcw
fnstenv
or
in
push
or
mov
pop
add
push
out
test
lret
cmc
loopne
in
loop,pt
cmp
subl
pop
orb
fists
mov
sarl
push
push
xchg
decb
sahf
push
cmp
cld
loopne
and
add
sbb
outsb
pop
inc
mov
fisubs
das
insl
test
cmp
fwait
mov
int3
fadds
and
dec
and
aad
ja
jo
nop
sub
xchg
adc
add
xor
xor
jmp
das
stc
push
mov
fists
xchg
add
nop
inc
in
cld
mov
sbb
sarl
out
popf
stos
das
popf
loope
dec
inc
jae
inc
insl
fwait
in
jbe
insl
test
mov
xor
test
das
out
orb
cmp
push
xor
mov
jne
jae
add
rclb
loop
mov
or
lret
push
jmp
push
outsb
or
and
inc
push
cmpsl
jae
fsubrl
fsts
jl
sbb
mov
or
loopne
in
jp
add
popa
xor
iret
inc
push
sub
mov
inc
adc
lods
push
inc
mov
dec
pop
cmp
rclb
ja
add
and
jne
push
js
xchg
jmp
mov
cmc
sbb
js
nop
inc
jl
mov
sub
popl
sub
cmp
lcall
cmpsl
xor
out
push
les
dec
movsl
sbb
mov
test
add
cmp
in
lret
add
jbe
push
mov
push
sbb
pop
mov
sub
mov
push
sbb
pop
pop
and
int
sub
scas
mov
loopne
je
arpl
in
and
or
mov
mov
mov
cwtl
test
mov
pop
lods
pushf
inc
adc
or
cs
popf
lcall
and
pushf
or
ds
ret
sub
push
mov
or
sbb
jge
stc
into
push
and
aaa
out
orb
loopne
pushf
push
lret
cmp
mov
out
push
inc
inc
lcall
arpl
xor
and
in
inc
int
pop
iret
push
or
in
mov
in
mov
pop
test
in
je
loop
pop
xchg
adc
repnz
repnz
or
pop
pop
dec
rorb
push
cs
sub
imul
cmp
add
mov
call
mov
loopne
scas
mov
fidivl
push
add
push
mov
xchg
aas
cmp
dec
xchg
call
rcr
and
test
inc
ret
aad
mov
daa
notl
mov
ss
push
je
xchg
sti
push
dec
insl
add
jo
fs
insl
xchg
push
inc
inc
outsb
lcall
mov
xor
push
xor
mov
js
in
dec
pop
cwtl
ret
call
mov
sbb
orl
pop
xor
mov
cmp
dec
xor
mov
mov
push
adc
aaa
mov
sar
pop
sbb
jns
stos
icebp
incl
pop
sub
xchg
adc
call
test
cli
pushf
cltd
cmpsl
ljmp
and
fildll
out
jb
rol
or
lds
pop
jg
dec
jecxz
mov
inc
data16
andl
cmp
mov
int
jp
jae
fldt
gs
test
repz
cmpsb
loope
enter
jno
and
push
pop
movsl
mov
adc
dec
mov
addl
jle
mov
xor
aam
mov
mov
add
jg
jbe
pop
mov
xchg
dec
scas
or
hlt
xor
inc
sbb
jnp
out
and
or
mov
xor
aaa
movsl
mov
arpl
out
xchg
xchg
dec
pop
les
in
or
dec
sbb
daa
and
ljmp
leave
jo
incl
push
cmp
sbb
repz
and
cli
or
add
dec
enter
jno
mov
rorb
sub
aam
xchg
aad
test
mov
pop
out
pop
filds
cmp
pop
ja
or
jbe
push
jo
rcl
adc
out
or
sbb
int
adc
mov
xchg
push
clc
and
xchg
loop
xor
cli
inc
gs
scas
mov
lcall
jns
clc
inc
into
sub
jg
jg
test
push
jo
or
pop
dec
arpl
sub
xor
cs
icebp
adc
mov
fs
adc
repnz
xor
andb
addr16
adc
imul
sbb
adc
adc
xchg
lret
dec
pusha
lret
insb
push
xchg
push
mov
mov
inc
imul
and
pop
icebp
jge
jns
inc
fs
fnstcw
fimuls
adc
arpl
mov
mov
fiadds
or
in
push
sahf
mov
sbb
jp
pushf
sub
lea
cli
dec
aaa
data16
inc
out
in
test
jecxz
add
dec
mov
loopne
pusha
mov
jno
mov
aas
adc
mov
mov
push
mul
lcall
mov
sahf
addr16
test
loopne
or
sub
jle
inc
into
imul
mov
xor
shl
dec
popf
push
mov
mov
cs
push
dec
imul
scas
pop
dec
add
cmc
mov
scas
out
aam
xlat
cwtl
mov
cmp
addr16
jle
add
popf
mov
movsl
mov
movsl
clc
dec
out
aaa
xchg
repz
dec
jb
fs
fldpi
pop
test
pop
inc
dec
xor
mov
adc
mov
pushf
push
inc
mov
cld
and
inc
push
add
fbld
dec
pusha
inc
sbb
add
pop
mov
addr16
mov
std
dec
mov
inc
popa
jecxz
in
clc
inc
dec
mov
pop
lock
shl
js
addr16
sbb
pop
dec
in
add
shrl
mov
in
lock
jbe
mov
jg
pop
paddb
push
imull
and
std
jmp
loopne
add
test
stc
pop
xor
scas
cmp
cmp
pusha
hlt
jne
xor
jmp
lret
cltd
imul
mov
mov
mov
xorl
mov
mov
xchg
adc
movl
cltd
test
fidivl
sahf
jnp
inc
ret
jno
cmp
jl
outsl
negb
or
push
lods
and
push
push
inc
xchg
xor
mov
test
popa
popa
xor
rclb
test
sub
andl
stos
out
pop
push
and
orb
pop
jmp
mov
jge
pop
popf
mov
push
nop
jne
jno
dec
xor
dec
jns
out
mov
push
cmpl
sub
out
sub
in
jl
test
mov
pop
daa
inc
xchg
int3
pop
lds
loop
imul
hlt
inc
clc
or
xor
arpl
push
in
add
cmc
pushl
int3
xorb
jns
push
mov
rol
icebp
cmp
aam
sub
inc
mov
pop
lret
in
cmp
stos
push
outsb
or
cltd
jmp
cltd
mov
or
insl
pop
shrl
jl
daa
rolb
xchg
lret
test
xor
and
test
rcrl
je
fsubrp
push
push
pop
jl
and
mov
shlb
pop
popa
repz
arpl
out
xchg
mov
ss
dec
popa
in
sbb
mov
mov
push
xor
jp
add
add
popa
xchg
inc
jns
inc
mov
sub
call
sub
sub
and
in
mov
push
xlat
push
xor
sbb
shr
fistl
orb
fbstp
mov
xchg
mov
dec
jp
mull
jl
faddl
hlt
jno
popa
add
sbb
push
push
call
mov
push
mov
adc
jecxz
xchg
cmp
incl
shrb
pushf
lcall
mov
sbb
cmp
jp
or
js
stos
mov
and
fwait
imul
sti
ds
pop
out
fwait
mov
dec
adc
adc
cmp
mov
pop
mov
imul
cmp
shrb
jbe
pop
in
inc
scas
fcmovnb
pop
in
out
fsubrs
enter
add
cmpsl
lret
adc
outsl
filds
sub
fisubrs
jmp
dec
push
mov
dec
mov
ljmp
test
push
cmp
mov
fidivrs
and
mov
add
jae
iret
ss
adc
into
xor
int
int3
aas
mov
sahf
fisubrl
int
sub
mov
push
movntq
sti
mov
ja
movsl
out
cld
cmc
mov
mov
repz
loop
je
xchg
inc
jno
jb
mov
lods
xchg
jbe
leave
xchg
das
outsb
sti
roll
and
shrl
sub
or
sub
xchg
mov
push
nop
sbb
jno
pusha
sub
mov
jle
push
fnsave
push
jb
dec
scas
cmp
mov
mov
or
ret
sub
iret
push
das
fs
fcoms
aas
pop
xacquire
cmp
cmpsb
ss
cli
pusha
inc
jle
sbbl
mov
mov
push
push
or
movsl
mov
jecxz
mov
push
in
roll
adc
xchg
inc
inc
inc
data16
sub
in
pop
movsb
inc
stos
fs
mov
pop
push
sub
mov
inc
je
xchg
cmp
repz
adc
lcall
je
jb
jns
cmp
lds
add
mov
outsb
aam
pop
outsb
iret
out
xchg
sbb
push
ss
inc
sahf
idivb
pop
xchg
cltd
cmpsb
jns
mov
push
data16
cmpsb
lock
xchg
dec
jl
xor
fadds
loopne
leave
fs
lret
cmp
jmp
sbb
dec
fbld
cli
icebp
test
int3
data16
into
test
fsub
mov
aam
jb
mov
outsl
dec
mov
push
out
or
xor
mov
jno
mov
ret
sub
jecxz
mov
enter
mov
aam
push
mov
movsl
test
cmpsl
loope
fld
das
repnz
jle
sbb
jnp
das
inc
lahf
mov
das
clc
sbb
adc
mov
adc
dec
sbb
loopne
mov
ja
inc
fimull
cwtl
jae
adc
push
movb
xor
addb
ljmp
fcompl
or
pusha
or
cs
daa
adc
mov
add
cmp
insl
mov
sub
shl
jmp
adc
aad
mov
stos
and
add
jle
icebp
ja
mov
adc
mov
repnz
mov
jg
and
pop
and
mov
repz
pop
cmp
xorl
rol
fistps
in
cld
ljmp
popl
or
mov
movsb
and
lcall
fldcw
sbb
inc
ret
mov
mov
arpl
into
mov
andl
ss
aad
aam
sarl
stos
mov
test
dec
fidivl
int3
loopne
sbb
xchg
adc
lret
and
lods
add
js
and
jmp
sbb
inc
xlat
pop
xlat
jmp
dec
inc
in
negb
mov
out
call
mov
xchg
jno
push
or
hlt
mov
adc
xor
push
cmp
add
iret
push
jns
jns
cmp
loopne
pop
sahf
js
stc
subl
add
xor
xchg
and
jg
cmp
push
stos
mov
lea
insl
add
repnz
dec
leave
inc
stos
jne
mov
xor
adc
data16
dec
add
cmp
and
jg
dec
fwait
mov
int
mov
mov
sbb
adcl
cmp
push
stc
insl
xor
notl
aad
lea
orl
mov
stos
add
cmp
xor
ret
pop
adc
cwtl
addr16
test
mov
dec
fildll
sbb
dec
data16
aaa
xchg
push
insb
lret
sbb
lcall
cwtl
cmc
dec
lret
repnz
add
clc
xchg
cwtl
scas
clc
inc
push
xchg
mov
xchg
sbb
fbld
xchg
sub
add
cwtl
cmpsb
imul
outsb
sub
imul
pop
and
in
xchg
lods
das
out
and
add
mov
push
outsb
js
je
inc
xor
test
mov
jge
das
push
addr16
pop
xor
dec
xor
decb
arpl
push
lahf
cs
pop
dec
add
ljmp
xor
les
inc
arpl
mov
dec
in
mov
mov
push
das
iret
xchg
adc
neg
int
xor
outsl
push
rcpps
jmp
push
push
stos
jno
mov
inc
jne
push
loopne
mov
hlt
or
cmpsl
je
pop
test
xor
jb
jge
sbb
movsb
mov
mov
add
or
lcall
sahf
mov
call
dec
jae,pt
xlat
test
aaa
add
push
jae
cmpsl
adc
and
sub
pop
jp
ljmp
cmp
and
mov
dec
inc
cmp
pop
pop
aas
stc
test
mov
jb
xlat
ja
lahf
hlt
and
mov
ljmp
cmpb
iret
jge
push
enter
dec
mov
sbb
add
sub
sbb
stc
cmpsb
dec
inc
arpl
push
outsb
popf
icebp
sar
call
dec
mov
jge
scas
lods
aas
mov
dec
jl
add
mov
mov
test
stos
les
test
lds
push
iret
jns
outsb
jge
jle
popa
lahf
in
mov
sub
mov
add
and
and
mov
mov
sbb
adc
imul
push
xchg
test
xor
int
ret
dec
mov
rcr
mov
test
mov
leave
push
aas
fsub
subb
sbb
int3
out
enter
mov
mov
inc
stc
sub
je
xor
das
xor
montmul
cmpsb
add
dec
xlat
lods
ret
dec
ss
jecxz
jge
popf
aas
aad
and
jnp
pop
out
xchg
stos
add
xlat
test
stc
cmpb
sahf
jns
mov
or
xchg
clc
pextrw
sub
mov
out
xchg
and
enter
pop
out
cmp
sub
or
push
cmp
adc
outsb
jl
movsl
sub
xor
in
mov
mov
insl
mov
mov
insl
xlat
sub
xchg
cmpl
jae
sub
add
jmp
orl
xchg
stos
fdivl
mov
loopne
rolb
scas
mov
pop
int
bound
imul
lds
rorl
ja
mov
stos
stos
sbb
in
in
sbb
jbe
cltd
push
rcrb
push
sub
mov
js
jl
iret
xor
into
cmp
mov
cltd
mov
pop
call
in
in
pop
adc
mov
out
gs
sbb
stos
inc
inc
jnp
fldt
dec
adc
insb
lock
js
or
add
daa
add
shl
das
dec
shr
xchg
sub
fidivl
sbb
mov
xor
xchg
loope
cmp
mov
das
setge
outsb
sub
mov
jecxz
into
imul
cmp
cmp
cmpsl
hlt
push
fistps
std
or
scas
dec
dec
sbb
fidivs
xchg
mov
or
sbb
mov
mulb
dec
jl
inc
jle
push
lock
mov
add
imulb
dec
popa
mov
xlat
mov
mov
rorl
sbb
aaa
xchg
outsl
hlt
jnp
ret
out
mov
push
lea
rcll
enter
xchg
add
movb
fld
jp
jle
adc
mov
fildll
push
and
sbb
fstpl
aad
je,pt
mov
jge
movl
push
test
xor
push
jp
imul
jge
dec
add
xor
test
sub
mov
xchg
arpl
pusha
rorb
sbb
test
jl
mov
out
dec
jmp
jbe
call
fstl
in
mov
jmp
xchg
jo
or
ss
out
add
clc
pop
xchg
in
cld
xor
gs
mov
sub
fcmovu
jae
data16
jnp
sahf
cli
or
lock
nop
adc
push
sub
lds
fisubrs
icebp
leave
jl
pop
imul
hlt
mov
stc
enter
or
cmp
sub
fmull
mov
mov
fcoms
dec
arpl
test
push
cmc
sub
fisubrl
popf
repz
xor
stos
popf
jp
loope
inc
fcoml
call
movsb
sub
cmp
xor
dec
divl
aas
push
sub
cmp
test
xor
dec
aaa
push
push
inc
pop
mov
sahf
xor
fimuls
jle
mov
or
inc
mov
idivl
jo
xor
out
inc
fiaddl
or
xchg
jge
pop
into
pop
mov
stos
in
xchg
xor
adc
cmc
adc
and
insl
sar
je
pop
jae
cmp
push
pop
xchg
dec
pop
repz
cmpl
pop
sbb
clc
icebp
adc
cmc
adc
push
xor
sbb
bound
sbb
ret
imul
scas
imul
out
xchg
sub
aas
movsl
lds
mov
test
lahf
mov
push
sbbb
or
fwait
jnp
and
dec
lret
push
inc
lret
jne
mov
inc
or
movsb
cmpsl
pop
push
sbb
repz
repz
test
dec
jb
andl
push
arpl
stos
cmp
fsubrs
mov
push
das
vsqrtps
dec
xchg
xchg
das
cmp
or
pop
test
cmc
ficompl
adc
add
out
test
push
and
add
ja
movl
sub
int3
imul
fidivl
rcrl
jge
sbb
xchg
mov
add
test
jmp
insl
xor
mov
es
push
push
aaa
pop
lods
into
pop
pop
hlt
cmpsb
in
ljmp
movsl
in
imul
add
loope
movsb
mov
and
cmpsb
add
bnd
cs
prefetch
mov
jns
notl
jo
add
push
cmp
andl
xor
jmp
shlb
test
xchg
sbb
cmp
xor
rcl
testl
jae
push
andb
insl
into
xchg
jne
into
jae
cmp
mov
lea
icebp
je
push
push
jmp
dec
push
icebp
jl
push
push
ss
add
cmpsb
mov
xorl
sbb
xor
jle
in
scas
and
repz
add
stc
or
in
or
bound
in
pushf
sti
test
or
jg
adc
xchg
push
mov
xchg
cltd
insl
sub
out
mov
lock
imul
mov
aas
jne
mov
fsts
push
xor
test
test
cmp
mov
lret
popf
cmp
dec
inc
sti
neg
add
pop
and
aam
pop
movsl
sub
test
add
scas
call
jp
sahf
lods
data16
aad
push
add
dec
mov
ja
call
sbb
pop
mov
add
mov
aaa
or
aam
fmuls
inc
sub
daa
add
scas
push
andb
dec
lods
mov
pop
repz
int3
arpl
jnp
js
mov
mov
lahf
and
dec
jno
cmp
sub
or
arpl
jmp
and
mov
popa
clc
rorb
sti
dec
mov
sbb
es
mov
dec
iret
sahf
fsubrs
lock
aam
push
pop
xorb
loopne
push
jno
add
pop
jns
fadds
jecxz
inc
ror
testb
shlb
push
out
cld
aam
add
sbb
push
js
into
xchg
sub
testl
pop
hlt
inc
and
and
dec
mov
cmc
fs
add
mov
mov
and
xchg
dec
mov
cwtl
lods
sbb
mov
cmp
imul
gs
and
sbbb
leave
mov
sub
xchg
sub
sbb
aas
ret
iret
leave
mov
cmp
cmp
ljmp
jo
dec
shll
sub
xchg
sub
pusha
insb
add
ja
rorl
mov
test
lret
cld
inc
or
int
pop
adc
dec
call
dec
dec
subb
or
mov
int3
in
inc
fcomps
pushf
mov
jecxz
push
inc
les
pop
push
and
add
movsl
inc
lods
es
adc
jge
mov
push
js
fildll
add
int
cmpsl
std
inc
mov
fcmovnb
sbb
shrl
popf
repnz
mov
pushf
imul
or
aas
or
in
mov
orb
cmp
cltd
push
rorl
jne
adc
mov
prefetcht2
stos
or
pop
inc
dec
dec
or
ret
ret
orl
pop
fisubrl
add
xor
sbb
dec
out
mov
jl
mov
add
cwtl
add
push
das
cmp
xchg
push
and
dec
jbe
inc
xchg
cmpsl
jmp
pop
leave
xchg
mov
test
mov
imul
inc
test
mov
out
xlat
adc
sbb
aas
adc
dec
push
repnz
inc
adc
jno
outsl
inc
sbb
ds
data16
cs
and
out
test
cli
push
jne
lret
jns
lods
fstpt
cmpsl
jg
mov
enter
sbb
sbb
xchg
add
cmpsb
sbb
sahf
ret
mov
cmc
mov
or
jp
or
jnp
cmp
mov
insl
pop
out
and
sbb
sub
pop
arpl
mov
ret
mov
add
pop
ds
push
sub
cltd
cmc
inc
xor
xchg
fs
movsl
std
rolb
test
scas
hlt
std
dec
leave
aas
outsb
sti
push
adc
addb
lods
adc
and
fsts
leave
cs
push
or
cmp
sub
jo
inc
sub
jp
shlb
popa
mov
xor
subl
enter
fwait
mov
gs
out
jmp
fsubrs
mov
pop
or
jp
adc
add
mov
and
inc
insb
jns
cmp
sarb
cli
mov
and
cmpsl
dec
out
cmp
icebp
setne
in
pop
ret
daa
aad
sti
js
xchg
dec
int3
xor
push
xchg
and
aas
push
clc
lcall
in
dec
push
popa
and
pop
pushf
adc
jle
sbbl
mov
sbb
sub
sub
mov
xchg
inc
adc
gs
test
mov
ds
pop
stos
inc
push
sbb
push
jo
clc
mov
push
rcrb
xchg
ret
int3
fcomps
cmc
and
stc
subl
or
and
insb
jg
jne
pop
cmpsl
movsl
out
xchg
mov
push
fistl
add
repnz
loope
adc
inc
faddl
mov
ds
push
push
fimuls
imul
pusha
mov
pop
or
adc
mov
push
addr16
aam
aam
mov
cmp
icebp
xchg
into
repnz
jle
jp
out
mov
aaa
mov
aaa
pop
ret
out
mov
pusha
xchg
mov
daa
mov
jle
or
imul
add
fdivr
fstpt
add
lcall
mov
mov
or
mov
jl
cmc
inc
fmuls
pop
jmp
ficompl
push
lods
lds
addr16
mov
gs
add
gs
loopew
gs
ja
fs
pusha
inc
adc
jnp
and
or
mov
jno
icebp
scas
sti
sbbb
dec
jecxz
rcr
incb
divb
int
jo
cmp
mov
icebp
xchg
aas
xchg
xor
add
cld
ljmp
cltd
lock
out
push
adc
je
inc
push
je
test
fsubs
pop
out
rcrl
std
inc
dec
inc
mov
std
dec
push
std
xchg
sbb
mov
jno
test
and
ret
cltd
dec
lock
pop
sbb
sbbb
cli
or
loope
data16
sarl
and
pop
xor
ror
jo
movl
into
addr16
add
je
fldt
orl
ss
std
cltd
xchg
and
int
je
clc
addr16
push
lret
int
mov
movsl
cmc
adc
mov
mov
fisttpll
test
scas
les
jb
xor
popl
xor
push
inc
pop
xor
pushf
push
mov
outsl
daa
lcall
mov
or
adc
xor
jne
jno
dec
in
jae
and
mov
mov
or
jmp
test
ja
mov
movsl
insl
subl
mov
movsb
popa
mov
dec
pop
out
add
xor
inc
push
jb
or
loop
scas
fldl
add
insl
ss
pushf
pop
test
sahf
outsl
inc
pop
mov
jbe
mov
or
pushf
jp
adcb
fwait
adc
dec
mov
adc
sbbl
xchg
mov
fdivl
in
mov
fcoml
mov
mov
das
mov
lods
pop
dec
dec
xchg
pop
mov
sbbl
pop
sbb
jmp
or
js
sbb
and
push
xor
cld
aaa
aam
in
adc
clc
fcmovne
fisubs
popf
cli
jecxz
test
nop
out
int
jg
mov
cmp
mov
daa
data16
mov
mov
imul
or
mov
dec
movsb
push
scas
push
mov
dec
gs
dec
mov
xor
xor
fs
push
lods
imul
shlb
outsb
in
dec
lods
imul
out
dec
data16
jg
repz
mov
inc
pop
mov
decb
aam
mov
fcomps
lods
jg
popa
in
jecxz
xchg
dec
ret
xor
cmp
sahf
pop
cwtl
pop
sbb
pop
or
xor
cmpsl
aad
lcall
stos
dec
cmp
sub
and
pop
xor
loope
push
icebp
cs
lea
lds
xor
mov
dec
aam
test
mov
xchg
pop
mov
hlt
pop
scas
mov
loopne
jg
xchg
test
scas
adc
push
call
es
leave
testb
dec
pop
adc
jmp
pop
or
fsubrl
inc
fldlg2
xchg
icebp
imul
lret
movsl
mov
ret
pop
sbb
xchg
fldl
repnz
and
push
movsb
movb
in
xchg
dec
sar
pop
in
push
push
cmp
out
inc
xchg
fiadds
xor
movsl
in
jg
sahf
lods
xchg
inc
in
cmp
cwtl
sbbb
jmp
xchg
insb
push
scas
test
outsb
insb
cli
xchg
lret
cld
xor
fwait
mov
mov
cmp
or
insb
jne
pop
bound
push
lods
cmp
gs
jns
movzwl
pop
leave
je
sti
and
and
filds
cld
in
in
scas
jl
jecxz
xor
fistpl
sbb
lea
xchg
sub
push
adc
ficomps
pop
add
mov
or
insl
ljmp
sbb
bnd
sbb
jb
jl
stos
mov
pop
insb
and
into
lcall
fisubs
jge
add
stos
inc
push
lret
lods
ljmp
in
cwtl
popf
lret
mov
cld
cmpsl
enter
aaa
jb
push
inc
fldl
repnz
cwtl
stos
lock
movsl
mov
aaa
into
clc
arpl
nop
cltd
push
in
lret
pop
mov
ret
fisubl
into
cs
mov
out
das
cs
mov
addr16
add
aam
out
inc
inc
sbb
sbb
mov
lret
int3
ss
mov
mov
ds
popa
mov
gs
pop
repz
and
jne
rorb
cmp
cli
jg
sbb
fsubrp
scas
inc
cmovae
test
mov
scas
fcmovu
daa
loope
pop
cld
jbe
xor
push
sub
inc
ret
js
iret
and
lcall
fwait
imul
jae
mov
jg
push
mov
shl
push
dec
cmp
fisubrs
adc
xor
das
pop
mov
dec
iret
add
jmp
mov
hlt
mov
xor
add
outsl
notb
in
outsb
outsb
fwait
roll
cmpsl
cmc
int3
push
int3
inc
fisttpll
lods
fs
sbb
add
add
shll
mov
roll
push
or
jle
push
das
cmpsb
iret
mov
in
dec
fistpll
fwait
jae
cs
test
gs
inc
adc
and
sar
popf
jnp
dec
sbb
movsl
int3
imul
in
test
fistl
es
out
or
mov
mov
dec
ljmp
std
clc
cmp
fmuls
pop
call
pop
push
and
fdivs
ss
mov
and
iret
cmp
inc
dec
sbb
cmp
insb
divb
pop
mov
sub
inc
fnstsw
jl
xor
loopne
sub
insl
or
and
adc
push
jg
mov
push
idiv
push
nop
and
je
rclb
lods
inc
montmul
cmpsb
add
aam
in
rolb
lods
addr16
arpl
dec
push
lret
xlat
dec
daa
sti
xor
inc
and
das
test
lret
bound
clc
sbb
cmp
dec
fs
idivb
orb
xlat
in
adc
ja
lock
mov
cs
xor
adc
sub
ds
pop
lods
jecxz
lret
pop
repz
adc
les
clc
xor
sbb
xchg
mov
paddb
aam
arpl
mov
inc
out
cmpsl
sub
cmp
dec
loop
pop
out
in
lret
push
aas
repz
mov
push
sbbl
mov
ja
mov
fbstp
ds
jle
mov
or
rcrl
pop
push
daa
mov
out
fistl
sbb
popf
bnd
sti
sbb
xor
insb
xor
adc
addr16
je
jo
lods
push
xchg
push
cwtl
idivl
fucomi
xchg
xchg
movb
inc
xchg
in
xchg
adc
insl
xlat
mov
pop
in
repz
std
sub
pop
pusha
stos
mov
repnz
pop
inc
pop
inc
and
xchg
bound
cmpsb
ss
sti
push
or
and
jge
sub
cmc
sar
or
test
jae
adc
lods
lds
data16
mov
mul
adcl
push
cli
jb
push
xchg
scas
sbb
adc
mov
js
fisubrs
or
push
push
jg
jnp
sbb
outsb
jle
mov
aaa
cmpsl
je
fsubrs
scas
push
xor
mov
mov
fmul
aas
mov
pop
std
pop
call
mov
aas
sbb
les
pop
and
sti
movl
mov
movsb
movsb
cmp
fiaddl
mov
fldl
pop
neg
fs
mov
dec
arpl
mov
sti
out
std
mov
or
mov
sub
js
jb
out
mov
enter
mov
pop
push
cmp
jecxz
out
add
inc
loopne
jbe
cmpsb
and
js
das
cmp
push
mov
in
das
push
fildll
jbe
das
jns
pop
popf
std
cltd
jmp
or
int3
pop
test
mov
leave
pop
inc
clc
xor
xchg
dec
call
scas
jl
adc
cs
data16
jge
mov
sub
xchg
jno
push
ss
into
rcrb
js
icebp
xchg
movsb
lods
in
mov
lds
lahf
nop
cmp
dec
cmc
fbstp
jno
out
and
fwait
and
inc
fs
xchg
push
mov
cmp
data16
fisubs
lahf
sbb
decb
sub
lods
dec
xchg
jmp
addr16
push
pop
mov
mov
xor
xchg
movsb
sbb
cwtl
jo
lcall
lcall
negl
cltd
sbb
pop
outsb
jns
sub
enter
dec
mov
aaa
dec
or
sbb
ja,pn
into
test
lods
mov
mov
pop
icebp
dec
bound
xor
add
lret
fistl
lret
inc
jne
sub
push
leave
loope
cld
jecxz
cs
enter
cmp
pop
and
mov
sub
lods
xchg
or
inc
scas
pop
xchg
leave
test
cwtl
popl
sarb
pop
adc
xchg
jo
dec
loop
push
mov
and
repnz
mov
fstpl
xor
orl
xchg
stos
sub
push
daa
sbb
fwait
jg
push
xchg
cs
mov
push
mov
popa
mov
cmc
sub
lcall
jne
out
hlt
and
pop
icebp
movsb
mov
or
jns,pn
movsl
data16
jecxz
cmp
ds
into
jl
call
pop
ljmp
lock
mov
mov
dec
mov
loop
sbb
cltd
je
imul
xor
sbb
out
xor
fstps
les
jl
push
mov
pop
dec
dec
xlat
xchg
call
sarb
push
in
imul
gs
dec
mov
stc
mov
cmp
cltd
dec
imul
inc
xchg
call
insb
das
pop
cmp
adc
push
adc
inc
jno
in
jno
int
add
les
mov
das
pusha
sahf
clc
iret
mov
pop
in
xor
popa
or
xchg
xchg
insb
mov
xchg
int3
push
add
cmp
nop
ja
fsts
xchg
mov
push
mov
ss
jl
adc
mov
and
pop
outsl
adc
ss
jae
push
ret
ret
fildll
xchg
scas
mov
and
out
push
sub
out
jmp
and
inc
stos
flds
pop
mov
popa
je
push
orb
sub
insl
stc
daa
into
sub
pop
add
mov
popf
sub
sub
imul
dec
mov
mull
adc
push
pop
sbb
push
push
in
test
jns
sub
test
vpmulhuw
mov
sub
mov
mov
jno
jle
adc
or
arpl
xchg
push
shll
push
mov
inc
leave
scas
fdivr
es
shrb
bound
out
or
loope
fists
cmp
sti
mov
fld
dec
sub
gs
mov
in
mov
mul
mov
nop
std
enter
popa
in
fstl
aaa
aaa
mov
test
inc
pop
icebp
jle
mov
repz
jne
loopne
or
pop
gs
jno
daa
and
sub
cmp
jl
pop
cs
or
dec
movsb
mov
fdivrl
aad
jmp
das
inc
in
push
xor
fstpl
dec
and
scas
pop
scas
into
pop
mov
or
mov
jmp
inc
fdivl
andnps
inc
sti
arpl
jl
fwait
cmpsl
out
cltd
clc
push
xchg
addr16
fucomp
push
add
in
test
sahf
pop
in
jmp
xchg
addl
mov
jae
dec
lds
insl
pop
sti
inc
pop
xor
mov
adc
xchg
gs
and
int
hlt
dec
ljmp
push
push
nop
loope
test
jo
test
and
int
and
pushf
dec
hlt
jmp
into
add
cld
repnz
or
popf
push
fisubrs
lret
out
scas
loopne
push
scas
nop
cmp
cmp
sub
xchg
sbb
iret
push
sub
ljmp
out
and
push
fildl
jle
out
out
push
sbb
xor
mov
mov
adc
jb
push
mov
nop
iret
lret
cld
mov
loope
adc
scas
mov
jno
cmp
scas
inc
adc
and
sbb
lcall
or
lods
std
sub
int3
mov
push
hlt
or
lods
fs
cmpsl
sub
mov
jno
aam
roll
sarb
dec
mov
cmpsl
scas
negl
in
xorl
or
cmp
outsb
mov
repnz
lret
pop
mov
aas
cmp
insb
rcrl
lea
and
daa
jmp
dec
jns
sub
je
rol
test
arpl
pop
xchg
cmp
inc
cmp
push
popf
xchg
pop
mov
addr16
movsb
adc
cmp
pusha
outsb
and
jne
or
into
mov
ljmp
idivl
and
mov
push
jmp
xor
repz
out
sub
jae
push
adc
xchg
jp
push
sarb
out
test
or
pop
cmp
out
clc
pop
daa
inc
inc
fs
jg
xchg
add
outsl
adc
jle
jae
lahf
add
rorl
adc
pop
cltd
mov
mov
push
jecxz
mov
push
loop
mov
icebp
sahf
stos
sbbb
push
cmp
xchg
sub
shrl
sbb
xor
rolb
mov
mov
out
enter
cltd
imul
nop
loopne
push
call
aas
lods
es
iret
lret
inc
xor
xor
lock
sub
incb
imull
loop
xor
xchg
cmpsl
lods
enter
sub
rorl
fwait
mov
jp
lods
out
fidivrs
aad
cli
pop
loope
stc
fwait
test
add
sub
inc
fcmovnb
aad
or
pop
aaa
sbb
fwait
mov
mov
xchg
sbb
mov
push
fwait
sti
fldlg2
in
jno
jnp
mov
test
xor
cltd
aaa
hlt
iret
sbb
outsl
sub
push
bound
scas
or
add
and
mov
bound
dec
cmp
lods
cmp
fldl
sbb
xchg
inc
in
lret
jo
outsl
mov
mov
rcrl
xchg
or
leave
adc
in
dec
cmpsb
mov
xor
inc
push
push
xor
xchg
inc
push
mov
jge
aas
mov
clc
stos
jne
inc
sahf
shlb
mov
dec
fistps
stos
scas
inc
sbb
lcall
lea
add
sbbl
cmpb
loopne
out
mov
fidivs
mov
test
push
movsl
fwait
lods
xor
lock
stos
fwait
inc
pop
test
scas
cld
sbb
ret
or
divb
ret
pop
ja
fisubrl
lods
sub
stos
lret
std
adcb
insb
or
inc
mov
xor
popl
sub
bound
gs
inc
push
outsb
loope
es
pop
pusha
cltd
lock
cwtl
movsb
inc
dec
dec
adc
mov
pop
push
inc
inc
mov
movsb
xchg
and
lret
jnp
gs
lock
loop
movsb
and
rcrl
mov
jbe
scas
jecxz
jp
dec
mov
push
inc
pushf
xor
sti
nop
cmc
jle
wrmsr
pop
sbb
or
jno
mov
cmc
mov
adc
mov
fcompl
sbb
jmp
xor
rclb
sbb
mov
sub
xchg
mov
mov
pop
push
inc
test
push
adcl
addb
push
xlat
mov
movsl
mov
movsb
cmpsl
into
gs
fisubrs
inc
insb
add
je
push
movsb
cwtl
loope
lret
mov
orb
and
add
pop
cli
push
jl
adc
mov
andb
push
push
push
into
movsl
add
pop
jmp
out
dec
rorb
dec
sahf
data16
or
xchg
inc
fmul
xor
pop
lret
inc
inc
fsubl
arpl
jae
sbb
dec
xchg
bound
aaa
xchg
sub
in
jne
scas
and
imul
fisubrl
add
push
push
mov
imul
xchg
in
in
lret
xor
leave
push
movsl
nop
pop
xchg
jne
leave
in
xchg
pop
cli
add
rol
sti
mov
or
mov
xor
test
sar
dec
pop
and
aam
jnp
inc
pop
rorl
mov
lret
dec
aas
xchg
das
pop
mov
dec
fsubrs
fwait
dec
inc
in
jg
mov
jnp
adc
leave
jbe
add
inc
xchg
add
sub
scas
out
sahf
adc
in
pop
adc
inc
movl
movsb
sbb
stc
cli
lock
outsb
int3
test
dec
pop
adc
mov
rcrl
in
push
fisubl
mov
xchg
gs
jo
xor
std
sbb
inc
inc
aam
xchg
mov
roll
cmp
jmp
sub
jb
dec
fwait
or
add
mov
lret
pusha
aam
dec
outsl
jne
inc
mov
fimuls
lds
cmp
insl
sbb
repz
xchg
add
popa
pop
adc
pushf
jno
popf
mov
cmpsl
push
enter
push
xchg
je
mov
imull
push
mov
test
and
dec
das
pop
and
cmpsb
pop
movsb
add
sub
aam
dec
stos
test
movsb
sbb
dec
out
add
shrl
pop
inc
divb
sbb
pop
imul
xor
fwait
cld
or
dec
mov
ja
les
sahf
js
addl
push
notb
std
lret
mov
popa
shlb
mov
pop
pop
inc
jno,pt
and
dec
xor
lods
mov
dec
pop
inc
or
mov
cmpsb
mov
movsl
mov
xorl
jb
hlt
sbbb
into
lret
jae
cmp
jnp
jl
shlb
jns
hlt
jo
sti
sbb
push
mov
inc
pushf
fwait
jbe
popa
movsl
xchg
jo
fnstenv
mov
imul
out
inc
fiadds
sub
and
popf
jo
add
nop
divl
int3
loop
popa
mull
push
fiadds
gs
adc
dec
aas
call
jg,pn
jecxz
push
adc
cmp
ja
fistpll
mov
cmp
jecxz
lds
insb
and
in
ret
ret
sbb
xchg
jle
xor
lock
rcr
adc
popf
inc
test
movsl
icebp
data16
les
jbe
stos
into
lds
stos
push
sub
loopne
repz
nop
mov
mov
ss
push
mov
shll
fidivs
xchg
mov
inc
loopne
pop
sbb
adc
adc
outsb
cmp
insb
push
and
mov
stos
pop
gs
enter
movsl
shlb
rclb
and
add
into
pop
xor
push
cmc
cmpl
test
shll
insb
pushf
loope
xchg
mov
lods
outsl
mov
ss
push
ja
or
lea
mov
push
sub
loopne
popa
or
rol
dec
hlt
lea
rol
lahf
imul
cltd
out
test
je
fistpll
jnp
cmp
lods
mov
out
repnz
add
inc
fsubrs
sub
sub
lods
jmp
sub
test
jl
gs
in
push
aas
imul
mov
jge
adc
or
insl
inc
nop
data16
cmpsb
mov
or
lret
pop
jl
or
and
cmpsb
popf
popf
movsb
fmuls
scas
xchg
and
cmp
movsl
pop
or
in
outsb
jp
mov
std
sbb
enter
adc
jno
xor
imul
nop
xor
or
mov
dec
pop
push
fldcw
imul
or
jo
mov
jnp
xor
push
inc
pop
int
aam
testl
faddl
xor
jle
xor
ret
dec
push
pop
add
jae
insl
mov
data16
icebp
xchg
adc
bound
pop
aaa
lahf
xor
jge
shrl
bound
jne
sbb
je
rcrl
test
pusha
cltd
stc
pop
lods
call
pop
jae
pusha
lds
mov
jno
aaa
dec
mov
sarl
pop
dec
xor
aaa
popa
clc
stos
xlat
insl
push
pop
jg
dec
sbb
mov
mov
jge
sbb
fwait
sti
testl
cltd
push
cli
sbb
in
mov
jae
cmp
repz
test
loopne
lret
repz
sub
cmc
push
xor
pop
jno
testl
lock
inc
inc
mov
out
xchg
and
aad
insl
mov
data16
mov
pop
sbb
or
xchg
xor
insl
sub
cld
and
xor
cld
loop
sub
aam
fdivrs
add
sub
and
pop
insl
add
das
in
xchg
sbb
popf
push
sbb
sub
xor
insl
das
push
jg
push
iret
xchg
sub
mul
add
dec
test
mov
pop
jnp
aad
pop
xchg
xlat
dec
enter
sub
into
jl
cltd
jl
inc
ja
fisubs
dec
dec
push
lods
pop
cmp
ds
repnz
mov
inc
sbb
dec
mov
cmc
dec
repnz
mov
lcall
mov
inc
outsl
pushf
mov
add
inc
arpl
mov
jl
cmpsl
aas
call
dec
or
lahf
xchg
or
mov
outsb
jae
ja
repz
pop
sbbl
repnz
inc
shrb
fiadds
sbb
fistl
hlt
subl
insl
cmp
add
or
imulb
adc
xor
adc
mov
stc
push
aas
cmp
loopne
std
flds
mov
jl
sbb
pop
out
ja
in
out
dec
push
cwtl
jne
out
push
xor
cltd
sti
adc
mov
es
pop
or
pop
addr16
fsubs
push
cmc
sub
push
call
pop
call
cli
js
mov
addl
orb
sub
xor
js
mov
movhlps
jle
pushl
shll
sbbl
push
enter
in
dec
lret
jl
dec
sbb
mov
gs
movsb
shrl
dec
xchg
jbe
mov
nop
jnp
aaa
dec
divl
fdivrl
movsb
jcxz
sbbb
xchg
jae
les
shlb
or
daa
adc
push
das
sub
pop
cmc
inc
mov
jle
movsl
xor
hlt
xor
es
pop
push
jle
pop
cmpsl
mov
movsl
test
dec
push
lahf
xchg
sbb
mov
roll
xchg
adc
push
fst
cmpsb
mov
cmp
mov
xchg
addl
sahf
xor
mov
inc
ljmp
imulb
push
xor
icebp
pop
and
arpl
add
xchg
test
call
in
or
jb
mov
stc
adc
fisubs
imul
mov
mov
jb
lock
cmp
mov
jns
jg
push
push
push
repnz
out
insl
sbb
hlt
mov
hlt
inc
sub
sti
inc
add
js
adc
jmp
repnz
mov
inc
int3
aam
imul
insb
pop
lcall
icebp
in
test
in
xlat
outsl
addl
shlb
and
push
iret
data16
in
mov
test
fldt
xchg
fdivr
stos
shrb
int3
pop
dec
hlt
push
fbstp
xchg
mov
lahf
popa
push
gs
push
push
jmp
je
ret
iret
out
sbb
jg
and
mov
dec
sbb
std
mov
leave
jb
cld
pop
sub
pop
sahf
inc
push
push
cmp
mov
nop
dec
push
icebp
in
pop
cmp
lock
repnz
xor
enter
ret
dec
and
jp
insb
lods
jno
scas
sbb
push
mov
aam
jecxz
xlat
pop
mov
xor
mov
addr16
dec
push
sub
pop
cs
das
mov
push
xchg
pop
jg
arpl
ficoms
cltd
das
xchg
test
daa
test
fcomps
jecxz
stos
sbb
cmp
sub
jl
jnp
dec
dec
mov
add
jecxz
xchg
dec
sub
pop
fdivrl
jg
leave
in
mov
rcrl
fiaddl
cltd
fucomip
adc
clc
test
sub
fsubl
fcoml
and
mov
jb
int
ljmp
mov
dec
iret
je
inc
in
int3
jb
jmp
mov
enter
xor
sub
mov
loop
in
add
jae
repnz
or
mov
bound
dec
sbb
iret
mov
pop
ficomps
mov
cmp
mov
addr16
imul
dec
pop
push
aaa
xchg
push
mov
cmpsl
xchg
pop
out
jge
fsubrl
arpl
jmp
in
enter
loope
and
add
pop
cmp
aam
iret
fwait
ds
loopne
xchg
pop
mov
pop
mov
sbb
inc
ret
and
and
mov
ja
pop
sbbb
pop
mov
outsl
ds
lock
mov
and
adc
sbb
mov
sbbl
add
subl
jecxz
addr16
sub
idiv
cltd
cmp
imul
lods
cmpsl
cld
mov
cmp
sahf
mov
jp
xor
mov
out
test
push
shr
nop
sbb
xchg
sbb
push
inc
xor
jecxz
sub
cwtl
inc
icebp
clc
call
xor
into
std
and
and
jno
int3
jb
ret
sbb
clc
xchg
repz
les
dec
add
in
orb
out
cld
adc
sub
scas
inc
inc
dec
xlat
push
and
mov
adc
adc
mov
sbb
daa
int3
add
mov
dec
lock
push
int
cld
sub
popa
in
push
repz
mov
mov
test
xchg
fld
pop
pop
mov
sub
adc
data16
xor
mov
call
dec
inc
movsb
jg
jb
cmc
jl
jge
pusha
sbb
lcall
push
pop
fsubrs
ret
pop
cmp
add
data16
jmp
mov
jo
or
popf
adc
pop
dec
mov
insl
fs
int3
and
fldcw
insl
andl
sub
out
sbb
inc
mov
mov
push
jo
add
pop
add
mov
lahf
push
lret
inc
gs
imul
pop
into
ss
dec
lcall
in
out
adc
xchg
sahf
mov
or
jo
xchg
dec
movsl
cli
in
movsl
jecxz
pop
inc
push
sub
add
out
mov
mov
ljmp
sub
xchg
ficomps
loope
je
xor
push
jmp
mov
jno
shll
mov
push
xchg
insb
enter
call
xor
out
into
jo
xchg
cwtl
scas
mov
andl
pop
or
mov
rcrl
add
pop
inc
push
es
fmul
inc
sbb
adc
jecxz
push
mov
mov
mov
icebp
jo
cmp
es
fwait
cli
pop
ret
stos
xchg
mov
sbb
aad
push
mov
dec
xor
lret
push
mov
mov
add
js
jns
fistpl
sahf
jno
cmp
fdivl
and
mov
push
sti
insl
cmp
ficomps
rcrb
aaa
test
jg
adc
imul
adc
outsb
ss
push
xor
scas
cmp
lds
cwtl
push
sub
mov
movsb
sbb
and
xchg
push
ret
dec
push
pop
jb
sub
pop
pop
or
add
dec
jnp
xchg
scas
imul
mov
or
xlat
int
arpl
out
inc
pop
mov
pop
cmc
jp
int
push
fs
fsts
push
loope
test
movsl
leave
lock
mov
les
dec
cmp
jo
ljmp
test
push
stc
mov
es
add
rclb
pop
repz
test
lock
xchg
push
decb
mov
mov
sub
add
es
ffreep
inc
xor
xor
fs
fsubrs
rorl
sbb
stos
inc
push
xchg
sub
call
xchg
sub
xor
cmp
lahf
inc
xlat
into
xchg
gs
and
loopne
cmc
jg
mov
ret
sbb
inc
mov
push
or
mov
inc
loopne
add
test
dec
jmp
shl
xchg
cmp
add
repnz
nop
stc
pop
lock
lods
enter
dec
js
outsb
pop
loop
test
ja
fwait
mov
inc
cmp
repz
jge
jbe
xlat
cmpsb
mov
pop
divb
jae
and
cld
push
das
test
jge
fsubr
jmp
jecxz
jle
jne
inc
lods
scas
dec
mov
fwait
push
or
notl
in
test
mov
cwtl
cs
fisttpl
pop
mov
inc
mov
test
lahf
sbb
std
ret
jge
jle
mov
rol
adc
mov
push
mov
mov
inc
xorb
mov
fs
push
mov
scas
jb
adc
frstor
les
lcall
and
adc
cs
cmp
add
loope
divl
sub
xchg
insb
sbb
push
xor
adcl
imul
mov
imull
dec
fnstcw
cmp
mov
sbb
lods
cmp
inc
pop
sbb
cmp
xchg
push
lea
xchg
mov
test
xor
fs
leave
int
ret
xchg
xor
fwait
inc
adc
cmp
pop
fnstcw
sbbl
cltd
push
out
add
jecxz
and
mov
cmp
and
jbe
mov
arpl
addr16
or
or
jo
add
mov
lock
cmp
fidivrl
popa
mov
dec
dec
mov
dec
cmp
add
jecxz
mov
movsb
das
inc
test
decb
es
ret
sbb
sub
cmp
xchg
xchg
inc
loop
test
pop
or
bound
xor
orb
jnp
inc
adc
dec
xchg
imul
inc
and
inc
out
shl
jnp
xchg
sbb
add
pop
sahf
leave
jne
mov
test
mov
dec
inc
out
dec
in
xchg
jbe
dec
loope
sbb
scas
nop
xchg
push
rcll
adc
or
mov
adcb
xchg
mov
jbe
and
mov
fimull
xor
lea
push
and
ret
negb
movsl
data16
shrb
add
sub
mov
cli
cmp
mov
add
xchg
cmpsl
fimuls
mov
mov
mov
dec
cltd
pop
imul
pop
int3
jg
jmp
pop
and
movsl
inc
pop
add
das
push
dec
fdivrp
sub
dec
xorb
icebp
mov
push
leave
mov
mov
pop
stc
and
jmp
cmpsl
xchg
pop
testb
gs
pop
or
movsl
jns
cmc
mov
mov
pop
daa
pop
adc
in
frstor
sarb
test
xor
in
add
ret
or
cmp
inc
push
ljmp
mov
push
out
cmp
imul
sbbl
dec
xchg
sub
addr16
lods
push
ljmp
mov
jl
or
out
fcmovnb
sbbl
push
xchg
sub
cmpsb
pop
rcll
lods
shl
jle
push
insl
inc
dec
push
jmp
shlb
mov
fimull
xchg
cmp
out
rcl
fisubrs
into
dec
sbbl
dec
flds
int3
ret
mov
or
pop
roll
ret
test
dec
cld
xchg
cmp
hlt
jnp
call
les
imul
jl
pop
jo
out
les
call
js
jne
iret
scas
repnz
pop
sti
xchg
dec
or
mov
dec
and
into
sbb
mov
adc
pop
mov
movsb
bnd
dec
fistps
mov
fs
xor
mov
push
enter
arpl
arpl
inc
xchg
outsb
mov
movsl
cmpsl
inc
sbb
je
xorb
aas
imul
add
out
aad
arpl
test
cli
sub
xchg
lods
dec
sbb
xor
test
push
icebp
shrl
scas
or
bound
cmp
dec
push
popf
push
sub
ret
push
fs
aas
cld
push
cs
push
push
push
test
jmp
sub
mov
fnstsw
out
dec
cmc
in
push
push
xchg
movsl
testb
les
push
pop
mov
cmp
dec
ja
mov
add
je
sti
jae
lods
xor
jl
xchg
xchg
mov
sub
dec
pusha
stc
iret
out
mov
in
in
repz
sbb
mov
dec
pop
xor
dec
dec
les
cmc
out
movsl
push
shrl
mov
jg
mov
xor
scas
add
jp
sub
stos
jnp
dec
fsubr
arpl
cmp
jecxz
add
pop
jge
xchg
in
cmp
xchg
cmp
mov
xor
pusha
sbb
and
mov
inc
xchg
add
stos
cmpsl
fstl
jmp
pop
mov
repz
std
sub
dec
dec
push
cmp
cmp
mov
out
and
adc
sub
pop
xor
pop
mov
ss
repnz
loop
lret
bound
sub
xor
pop
repnz
push
mov
push
enter
stos
shrb
add
sub
xchg
adc
pop
sbb
cmp
ja
pusha
xorb
cld
push
fisubrl
pop
cmc
sbb
jl
push
dec
dec
jae
sub
push
inc
dec
inc
fidivrl
dec
cli
arpl
mov
shl
mov
aaa
stc
push
pop
fdivp
jns
xor
test
cmpsl
fsub
pop
adc
push
pushl
fwait
cmpsl
add
je
sub
jbe
cmpsl
jecxz
push
pusha
stos
mov
push
inc
sahf
or
or
dec
and
push
jno
push
ljmp
call
push
jno
mov
xor
sub
fwait
es
xchg
lds
stc
adc
daa
arpl
das
sbb
fcoms
cli
test
shl
cmpl
stos
mov
and
jl
dec
push
jne
cmpsb
das
popa
xlat
outsb
mov
mov
cmp
roll
or
fs
or
xlat
ret
and
jae
sub
push
jo
ja
je
in
rcll
lcall
ret
adc
jnp
addr16
and
and
int3
jl
mov
jno
lahf
pop
mov
test
orb
pop
out
mov
mov
and
ret
push
pop
imul
imul
lahf
test
aam
mov
xor
leave
loope
add
cmp
inc
ss
sti
dec
mov
dec
in
lods
mov
std
xchg
movsb
test
mov
inc
rclb
call
cmpsb
into
cwtl
aaa
into
and
sub
insb
std
and
stc
movsb
inc
orb
xor
push
and
push
data16
es
lds
adc
xor
hlt
lds
in
and
aad
ss
cmp
mov
mov
xor
push
mov
sahf
subl
dec
aad
cmp
repz
stos
xor
das
mov
std
jecxz
sub
mov
push
loop
mov
push
pop
adc
xor
dec
pop
mov
add
mov
ja
mov
xchg
repz
dec
int3
les
jmp
insl
sbb
mov
aam
test
inc
or
mov
jo
cltd
pusha
sub
xchg
mov
lahf
jge
push
cmp
xor
sti
daa
inc
cltd
jns
das
cmp
outsb
nop
mov
divb
aas
or
mov
popf
sarb
xor
loope
jne
andb
sub
xchg
incb
imulb
sbb
movsl
push
lea
push
fsts
data16
je
jl
push
mov
nop
sbb
sbb
cmp
pop
out
fwait
testl
jle
sarl
mov
pop
pop
cmp
and
or
push
jb
jnp
mov
and
fsubrs
ja
int
pop
inc
cld
dec
jle
lods
pop
hlt
bnd
jl
std
insl
push
mov
push
into
ljmp
xor
dec
push
add
loop
xor
dec
dec
xor
pop
sub
sbb
cli
ficomps
nopl
lods
and
aas
stc
xor
xor
hlt
movsb
mov
cmc
jg
add
or
fsubrs
or
push
push
gs
aaa
adc
and
call
leave
pop
pop
pusha
push
lods
xchg
jns
rolb
sub
mov
xchg
and
inc
xchg
lea
push
sarl
inc
jmp
fnstsw
jecxz
int
imul
push
xchg
pushf
repz
lea
and
hlt
iret
enter
mov
loope
outsb
jp
or
ftst
int
cmp
xchg
fucomi
ret
cmp
ret
sub
test
mov
add
mov
mov
sbb
mov
nop
mov
mov
aas
leave
cmpsl
sbb
lods
cmp
fldl
jle
cmc
mov
push
jae
mov
daa
mov
pop
lods
test
filds
lret
shrb
xchg
addr16
std
popf
xor
pop
notl
aad
lock
ja
xchg
sub
cwtl
xor
leave
and
xor
loopne
mov
mov
lds
push
add
push
add
xchg
dec
xor
pusha
add
jmp
mov
lcall
xchg
mov
adc
imul
data16
jo
jg
lods
inc
outsb
and
push
popf
xchg
jmp
mov
fmulp
sub
lods
inc
or
sub
mov
ret
loope
pop
fwait
cmpsl
test
outsl
mov
scas
out
fs
rolb
lret
insb
or
mov
cmp
xchg
sub
clc
sub
cmp
and
stc
add
repz
mov
cmpsb
gs
sbb
and
les
xchg
in
sti
xchg
loop
stos
das
test
or
cmp
in
loop
pop
insl
xchg
stc
or
sbbb
xchg
mov
and
xchg
in
sbb
and
fsubs
mov
sbb
insl
jg
xchg
iret
int3
inc
stc
sbb
mov
push
repz
orl
or
lods
loopne
into
push
iret
int3
movsl
and
mov
call
dec
repnz
cld
std
or
mov
jnp
pop
xlat
xchg
push
and
inc
gs
lds
inc
outsb
sub
popf
in
add
pop
add
mov
cmpsl
dec
aam
loope
les
xor
call
lea
dec
xchg
ficomps
pop
mov
inc
jmp
shr
xchg
cld
movsl
fmull
sahf
fs
xor
mov
out
inc
and
push
arpl
js
jns
popa
sbb
xchg
mov
inc
push
test
push
shrl
pop
mov
sub
icebp
sbb
sub
rolb
shrb
iret
loopne
push
neg
mov
and
xchg
add
push
mov
dec
and
push
mov
mov
clc
lods
js
xchg
sub
cltd
dec
xchg
mov
lea
sti
jecxz
sbb
repnz
gs
mov
inc
mov
jnp
xchg
pop
add
out
cs
pushf
rcr
cmp
out
jecxz
rclb
addb
pop
jo
leave
pusha
popf
jne
mov
jno
inc
clc
sbbb
push
lea
or
in
cmpsl
xchg
movsb
ret
repz
adc
repz
stos
sbb
scas
enter
xchg
adc
scas
mov
cmpl
cmpsb
stos
jle
psadbw
xchg
loope
jmp
pusha
adc
repz
lahf
and
xchg
pusha
jle
adc
clc
mov
mov
in
xchg
js
or
mov
imulb
jl
sub
lcall
and
ja
pusha
int3
movsl
dec
dec
aas
sti
push
jns
fwait
dec
adc
fcos
mov
outsb
pop
mov
push
jae
rclb
pop
mov
add
inc
sub
out
dec
cmp
nop
stc
pop
aad
scas
ficomps
jg
and
cmp
jnp
xchg
imul
jge
xchg
jo
test
pop
lods
test
sbb
pop
decb
sub
imul
test
sbb
inc
movl
movsb
inc
in
sbbb
in
cmpsl
out
jnp
push
into
xchg
xchg
sub
es
or
add
clc
sbb
icebp
lea
jp
scas
popf
mov
lock
fidivrl
lret
mov
xor
xchg
sub
cltd
mov
ret
hlt
add
addb
jle
lahf
xchg
sub
mov
mov
loop
mov
loope
call
xchg
mov
pop
or
pop
xchg
sub
in
push
daa
push
lods
sbb
sahf
and
cwtl
subl
adcb
popf
sbb
cmpl
clc
out
mov
or
adc
testl
jecxz
pop
jae
add
xchg
test
adc
shlb
lea
and
pushf
xor
jle
jmp
test
adc
in
int
fbld
leave
pop
repz
inc
mov
jbe
jp
push
mov
jb
mov
jg
xor
sahf
dec
aam
cmp
addb
call
repz
movsl
rcll
icebp
or
xor
xor
or
rcrl
mov
repnz
getsec
inc
cwtl
and
push
sub
push
mov
inc
hlt
test
data16
or
mov
mov
xchg
aas
icebp
mov
mov
or
sub
push
nop
jge
cmp
jp
push
and
xchg
push
call
pushf
cli
repz
jmp
adc
mov
int3
aam
jb
lret
mov
test
aad
push
test
mov
in
mov
inc
mov
int
and
or
or
adc
xor
mov
out
jle
pop
push
fwait
add
fwait
das
mov
pop
in
shrl
stos
push
sbb
mov
or
dec
imul
add
pop
aam
cmp
dec
add
xor
iret
jbe
fcompl
outsb
stos
cltd
lods
mov
adc
test
push
lods
pop
int3
js
inc
stos
lods
aam
sub
mov
xchg
ss
loope
add
icebp
mov
jne
sahf
fimull
fxch
lret
shr
cmp
adc
out
popf
mov
jne
add
das
xchg
mulb
jmp
loopne
push
mov
xor
testl
mov
xorb
inc
lods
mov
lods
mov
mov
xchg
sub
cld
in
inc
xor
outsl
std
fnstenv
movl
es
pusha
xorb
pop
jno
aaa
cmp
xchg
dec
and
mov
adc
dec
mov
daa
out
dec
mov
or
das
pop
xor
arpl
jnp
sbb
xchg
ficoms
cli
adc
push
mov
xchg
mov
hlt
hlt
cli
jne
flds
cs
sbb
mov
adc
outsl
loop
mov
jge
xchg
jge
inc
mov
adc
xchg
dec
ja
in
cwtl
mov
xor
pcmpeqd
jb
and
scas
lea
mov
mov
outsb
add
ret
xchg
enter
gs
in
shrb
mov
xor
gs
dec
and
movsb
stc
fs
test
mov
inc
inc
pushf
cld
push
xchg
jne
dec
std
cltd
in
lds
rcrl
and
bound
dec
aad
add
inc
xchg
jbe
enter
fstps
pop
mov
dec
inc
cmp
add
imul
popf
push
sub
cli
fldcw
inc
loope
inc
fsubrs
out
cwtl
dec
pop
mov
jb
and
jns
ds
push
fwait
lods
add
into
loopne
nop
mulb
dec
jmp
lret
inc
cmpsl
cld
add
lcall
mov
mov
test
idivl
adc
dec
cmp
mov
xchg
lock
fstpl
sti
xchg
mov
sbb
mov
out
mov
in
mov
cmp
push
mov
std
lret
fimuls
add
popa
jnp
popa
and
push
les
testb
jge
test
and
fisubl
dec
adc
dec
cmpsl
or
loopne
xor
aam
mov
mov
add
gs
mov
jne
sbb
sahf
lods
and
jne
push
aaa
mov
mov
fdivrp
inc
xchg
pop
and
lods
mov
sbb
jg
call
pop
dec
mov
pop
shlb
sahf
inc
out
cmp
repnz
dec
call
pop
push
push
rcll
cltd
pop
je
push
data16
shlb
in
or
adc
icebp
inc
fcompl
leave
in
js
cs
jns
xchg
sub
dec
imul
mov
add
in
push
cli
jnp
or
ss
popf
mov
ljmp
or
mov
dec
push
mov
in
xor
sbb
cmp
lret
movsb
aas
adc
jmp
ja
je
pop
push
mov
cmp
sahf
fldl2t
aad
xchg
pusha
jmp
aaa
pop
ret
repnz
cwtl
cmovb
ja
in
das
stos
pushf
jp
mov
sbb
inc
repz
shrl
pushf
pop
cmp
fwait
xchg
scas
add
adc
push
movsb
in
pop
pop
mov
imul
cmpl
fdivl
push
xchg
mov
repnz
inc
out
mov
std
push
xor
sbbl
scas
or
sbbb
jecxz
out
sub
test
sub
jp
sbb
sub
out
push
pop
push
and
mulb
mov
sub
xchg
arpl
test
xor
popf
push
jp
push
fimull
cmpsl
lds
dec
in
cli
pusha
ret
pop
movsb
ret
sub
pop
add
hlt
push
cmc
adc
mov
adc
shll
lds
dec
pop
scas
addb
repz
je
nop
mov
mov
xor
mov
jb
mov
stc
shll
pop
or
add
movsb
push
jns
lods
push
sbb
fwait
xor
fcmove
and
cli
fs
sbb
cmp
lahf
push
inc
sbb
fstpt
push
pop
push
fiaddl
aam
les
fldl2t
in
mov
clc
xor
jbe
sub
popf
pop
hlt
mov
mov
movsb
and
push
pop
push
add
jp
sub
mov
je
xor
xchg
outsb
xchg
aam
lea
and
pop
or
imul
in
xchg
xor
inc
jne
push
mov
fs
xchg
aas
cli
shlb
out
aam
xor
jno
std
cmp
test
and
mov
pop
sub
test
ja
insb
fldln2
orl
xor
repz
mov
shlb
sub
or
dec
add
orb
rcrb
loop
out
js
sub
cmp
mov
mov
jl
push
and
push
cmp
inc
fsubs
js
outsb
fistl
inc
loop
add
xor
sub
mov
mov
in
lret
lock
pop
push
inc
pop
mov
xchg
jle
and
sahf
jnp
mov
xor
outsb
lods
cs
fnstenv
sbb
sbb
xchg
fidivrs
mov
push
jge
sbbl
lods
add
mov
nop
cmp
push
mulb
xor
stos
sarb
jle
cltd
pop
cltd
andl
adc
cmpsb
xor
lret
mov
cmp
xor
ror
lret
mov
jmp
dec
testl
or
mov
ja
sub
jl
sbb
scas
out
jb
jae
jbe
xchg
loopne
cli
mov
inc
or
rcll
dec
shrb
mov
roll
push
out
lret
pop
and
cmp
push
fildll
rclb
clc
mov
test
dec
push
test
add
inc
mov
daa
and
test
add
fwait
push
dec
js
mov
cld
inc
cmp
dec
push
push
in
mov
jo
jne
cmp
or
fcmovnbe
xor
pop
and
push
enter
shrb
pop
jecxz
scas
mov
test
and
push
popf
imul
adc
pop
rcll
xor
ljmp
pop
leave
imul
aas
inc
cmp
xlat
sub
test
xchg
ja
push
stc
fidivrs
lods
xchg
or
pop
fistps
gs
shlb
adc
mov
inc
add
loop
pop
jmp
fnstenv
into
in
dec
mov
mov
fsubp
cmp
ret
push
mov
xor
dec
lcall
cmc
xchg
pop
daa
lcall
sbb
mov
dec
lock
das
xor
aam
aaa
pop
jge
cmp
dec
xchg
mov
ss
cld
adc
push
pop
rcr
mov
mov
repnz
xchg
in
enter
jae
pop
jbe
sarb
int
pop
sub
jno
inc
mov
or
jp
or
push
mov
xchg
lods
xchg
jnp
xchg
loope
push
sbb
shrb
or
add
ret
mov
sahf
adc
arpl
inc
jo
adc
mov
push
movsl
pop
jae
adc
icebp
mov
push
jns
pop
js
add
mov
and
shr
push
xchg
push
dec
test
cs
adc
cmpsl
icebp
in
and
sub
rcrl
dec
sub
into
jbe
push
jle
loopne
test
xor
adc
and
leave
test
addr16
ss
int3
xor
add
xchg
sub
xor
inc
mov
and
mov
cs
mov
mov
jge
xor
ja
rol
and
bound
mov
inc
fnsetpm(287
rcrb
sub
xor
pop
jp
xchg
mov
pop
mov
fcompl
rcrl
push
jmp
stos
jo
mov
cmp
pop
pop
ds
xor
cli
jnp
mov
out
sub
sbb
lods
cmp
fwait
xor
popl
shrl
xor
out
sub
in
adc
lods
push
ret
es
adc
es
cmp
out
cmp
push
mov
lret
xlat
setle
inc
or
xchg
and
cmp
movb
mov
cwtl
addl
add
xchg
loop
jle
aam
and
out
or
sub
cmp
mov
cmp
pop
xorl
or
mov
in
mov
mov
mov
and
pop
xchg
mov
mov
fadds
out
cmpsb
gs
je
jp
ds
je
iret
xchg
sbb
iret
mov
sbb
or
testb
test
rolb
arpl
xchg
incl
xor
or
xchg
adc
aaa
shll
cwtl
movsl
jecxz
cmp
aad
pushf
push
scas
xchg
insb
shl
addr16
repz
mov
imul
repz
mov
adc
in
sbb
pop
add
xor
sbb
nop
jae
cld
cmp
xor
lret
and
imul
mov
mov
add
in
enter
in
inc
das
lcall
stos
cmpxchg
ret
jb
jns
dec
xchg
sbb
sti
xor
hlt
fs
xor
aaa
mov
ja
cli
inc
outsb
jge
mov
push
sub
std
mov
mov
gs
jmp
mov
stos
xor
jge
and
mov
xchg
and
push
lcall
stos
adc
add
fnsave
stos
enter
incl
dec
mulb
jecxz
out
sub
xchg
adcl
pop
pushf
adcl
cs
jmp
aam
mov
sahf
in
jnp
push
pop
sbb
dec
les
loope
xchg
insb
adc
stos
fwait
cmp
sub
push
dec
fcoml
add
sti
ds
out
or
imul
jecxz
sahf
adc
push
mov
in
xor
imul
mov
mov
cs
dec
and
lock
int
xor
int
jo
mov
add
outsb
mov
xor
and
sbbl
popf
popa
shrl
ficomps
cmpsl
jmp
stc
fbstp
mov
jp
fldenv
sbb
and
mov
mov
sub
leave
pusha
add
mov
nop
outsl
ss
pushf
push
mov
cmpsl
jo
fwait
popa
xlat
mov
aam
movsl
dec
pop
xor
dec
fcmovnbe
mov
xlat
insl
cmp
and
xor
push
cmpsl
fisubl
int
or
inc
gs
les
addl
cs
repz
push
fwait
sub
movsb
mov
mov
ss
loop
push
push
popf
xor
in
cli
test
dec
aam
sbb
mov
jge
les
pusha
inc
jnp
push
insl
ja
shll
pop
mov
mov
cmpsl
dec
cmp
inc
out
inc
sub
leave
mov
mov
mov
jbe
adcl
rcll
stos
aaa
pop
fsubr
fdivl
sbb
aam
xchg
aam
mov
pop
jne
sbb
fdivrs
mov
sub
icebp
or
jb
and
mov
clc
arpl
adc
icebp
lock
mov
push
cmp
jnp
xchg
sub
mov
pop
mov
sti
cmpsl
xor
add
add
push
repnz
or
mov
jnp
jns
ret
add
lods
or
dec
shll
mov
jae
popa
sub
out
loop
enter
push
data16
int3
pushf
out
xorb
rcrb
lods
xchg
cmpsl
cmp
repz
imul
pushf
test
push
pop
insb
mov
icebp
cmp
jbe
cmpsl
mov
cmp
imul
add
inc
fwait
add
das
mov
inc
out
jns
adc
mov
mov
shr
jge
jns
lret
mov
int
pop
addb
push
mov
mov
dec
push
aaa
stc
in
cmc
mov
mov
cmp
pop
and
mov
push
adc
test
mov
inc
ljmp
mov
pop
add
dec
dec
loop
mov
out
sub
cmc
test
sub
in
loopne
dec
pop
cmp
jae
pop
lcall
dec
aaa
mov
jl
fnsave
inc
mov
push
mov
cld
push
inc
cwtl
mov
mov
rcr
inc
icebp
bound
xchg
icebp
mov
xlat
adc
xor
arpl
inc
lock
lock
sbb
in
rorb
arpl
addr16
shrl
pop
iret
hlt
mov
adc
in
push
push
jnp
xor
push
mov
sbb
xor
cmp
or
mov
in
adc
sbb
add
lock
pop
repz
shrb
push
enter
fbstp
in
cmc
and
imul
jmp
mov
pop
scas
sub
push
test
pop
ds
hlt
mov
cmpsb
push
bound
push
test
xchg
inc
push
inc
in
es
push
icebp
push
or
pop
cmp
jbe
stos
xor
mov
pushf
dec
pop
bnd
mov
popf
flds
pushf
jmp
repz
into
mov
ret
fisubrs
mov
iret
insl
mov
fistps
idivl
sub
jns
lahf
cltd
push
mov
cmp
inc
fcompp
flds
mov
jno
adc
and
filds
jae
in
leave
mov
cltd
jle
imul
rolb
fwait
dec
clc
pop
pop
push
loope
add
jno
push
push
push
movsl
es
pop
cs
pusha
jbe
sbb
mov
sbb
pushf
pop
icebp
mov
sbb
mov
ljmp
push
pop
pop
cmove
js
mov
iret
fnstsw
jg
rcrl
push
inc
push
stos
or
xor
in
jecxz
push
cmpsb
cld
push
nop
daa
mov
mov
mov
sub
mov
mov
call
sahf
adcb
ss
cmpsl
and
js
mov
in
cmp
xchg
sbb
lea
push
and
shlb
sbb
sbb
xorb
push
notb
cmpsl
mov
xlat
push
pop
adc
cmp
or
in
sub
in
popa
daa
or
int3
lret
cmc
ja
cli
mov
mov
mov
js
int
push
mov
fiaddl
jo
dec
push
popa
xchg
push
shlb
movsl
cmp
in
cwtl
inc
jp
mov
mov
jne
xchg
out
jae
in
pushf
sub
xchg
mov
ret
jns
int3
mov
ret
cmp
jnp
loope
cmp
xor
fbstp
dec
inc
lea
mulb
push
lahf
adc
incl
mov
mov
inc
popf
sub
or
int
pop
push
adc
leave
jno
mov
dec
adc
scas
xor
pop
add
rcrl
lret
imul
inc
sbb
lds
inc
rol
fstp
popa
add
aad
mov
pop
fnsave
pusha
stos
test
ret
and
lret
stos
xchg
mov
xlat
pushf
jmp
cli
std
cmpsl
jp
or
movsl
dec
cli
sbb
push
pop
sub
add
pushf
mov
rcrl
call
stc
cli
outsl
jge
ret
outsb
add
test
mov
out
inc
scas
hlt
inc
gs
mov
fsub
push
mov
jnp
jge
xchg
adc
jg
xchg
jno
faddp
mov
jne
gs
xor
mov
gs
inc
popf
repnz
bound
mov
push
lods
in
fidivs
jmp
out
xchg
mov
mov
push
lea
adcb
sbb
je
push
push
and
cld
xor
arpl
dec
daa
inc
dec
ds
add
ss
lods
jae
scas
mov
pop
cmp
jns
lock
push
xchg
pop
mov
mov
test
call
sub
lcall
out
pop
sub
pop
push
add
mov
fs
pop
fs
pop
mov
sar
xchg
xchg
adc
xchg
add
push
or
mov
adc
jns
addr16
jno
je
daa
jo
and
or
rcrl
pop
jle
or
aas
nop
je
cs
fcomip
sub
test
adc
addr16
push
xor
das
imul
push
jp
push
push
dec
dec
cwtl
and
push
stc
push
fidivl
lds
mov
in
hlt
jg
cmp
sbb
or
repnz
xchg
fldenv
subl
pop
call
popw
sar
ds
mov
push
mov
dec
sub
popf
data16
pop
data16
lea
sbb
add
and
inc
and
mov
xor
int3
push
sub
xor
and
sub
xchg
imul
xchg
mov
in
dec
pop
faddl
jmp
xchg
rcll
out
sbbl
sbb
fnstenv
sub
dec
daa
int3
enter
mov
cmp
les
orl
xchg
and
in
fldcw
out
dec
and
mov
sbb
mov
leavew
sahf
push
cmp
gs
std
xchg
push
pop
je
rol
dec
out
jle
jmp
pop
imul
in
push
jmp
sub
and
cltd
inc
icebp
insb
bound
jmp
pop
push
jp
cltd
jl
std
mov
pushf
xor
and
add
sbb
lret
ror
lods
int
and
push
outsl
sti
std
adc
xchg
movl
and
ret
push
fidivl
adc
jae
mov
add
jp
enter
and
int
ja
aam
in
adc
jp
lds
les
in
mov
notb
sbb
lds
mov
arpl
addr16
sub
or
stc
mov
mov
jle
xor
cmova
xchg
mov
pop
xchg
test
rorl
cli
and
gs
mov
cld
fisubrs
xchg
xor
lahf
mov
inc
stc
pop
inc
pop
add
loope
ljmp
xchg
mov
ds
jno
lret
bound
or
aas
sub
pop
jb
in
jb
in
fsubl
add
sub
push
out
loopne
aad
xlat
push
jle
shrb
mov
repz
pop
dec
jl
jnp
jae
shlb
lods
in
push
jb
fmul
outsl
mov
push
adc
into
dec
inc
mov
test
daa
dec
aam
push
lea
lret
repz
and
stos
fcmovb
xorl
imul
popf
inc
sub
scas
mov
insb
sub
push
fists
add
pop
push
sub
mov
std
cld
stc
nop
cs
icebp
dec
dec
pop
scas
ja
lds
mov
loop
xchg
mov
aaa
aad
sub
pop
jne
push
in
sbbb
or
mov
adc
adc
xor
cli
pop
ret
sub
hlt
in
xor
xchg
std
and
shlb
imul
add
shlb
adc
rorb
ljmp
into
or
mov
add
lret
adc
add
sbb
add
push
ret
pushf
sub
imul
push
fwait
scas
lods
cmpsb
adc
divb
stos
std
xor
das
int
popa
test
push
mov
push
xchg
pop
dec
jb
cwtl
pop
aad
xor
sahf
mov
aas
dec
icebp
cmpsb
jmp
pop
cmp
jecxz
mov
repz
pop
mov
or
jmp
mov
mov
mov
ret
cli
adc
sub
cld
xchg
mov
sbb
inc
push
ret
popa
lea
add
mov
stos
adc
loope
in
and
daa
mov
pop
daa
into
fstpt
daa
add
test
incl
iret
jns
ucomiss
test
push
ljmp
dec
xchg
stc
mov
or
fwait
xchg
out
lods
cmpsl
push
sarl
cmp
loopne
shl
push
jmp
sbb
gs
xor
roll
mov
aam
negl
je
fwait
je
jb
pop
sub
xchg
xchg
mov
push
sbb
in
insl
aas
xor
jmp
mov
sub
jno
mov
jle
in
cwtl
push
mov
add
and
fildll
inc
inc
stc
pop
fldenv
dec
mov
call
xor
add
scas
xchg
mov
loope
test
mov
dec
loop
cli
mov
hlt
mov
lret
jg
and
hlt
into
pop
mov
lods
xchg
sub
dec
in
imul
push
xchg
imul
sbb
push
lret
adc
add
orl
lea
mov
cmp
push
push
mov
test
dec
loop
push
out
xchg
add
jns
add
xchg
adc
cmp
add
ss
or
dec
rorb
movsb
pop
rorl
lods
cmp
sahf
jmp
lea
xor
mov
pop
repnz
fimull
mov
and
mov
adc
mov
fwait
jbe
out
out
mov
insl
push
mov
mov
or
xor
test
dec
movsb
frstor
jle
inc
sub
xchg
xchg
mov
dec
hlt
add
sub
scas
test
ss
adc
cmp
sub
pop
cmc
cmp
jo
in
sbb
inc
fiaddl
popa
xchg
stos
inc
lock
xchg
sub
in
xor
sub
pusha
inc
in
fwait
dec
ficomps
out
xchg
and
scas
inc
mov
stos
jmp
fdivrs
das
xchg
addl
pop
rcl
repz
inc
mov
adc
ja
jae
mov
inc
inc
jae
icebp
sub
inc
mov
or
pop
in
out
adc
push
jp
es
inc
push
or
mov
push
movsb
das
aad
sahf
mov
test
stc
inc
xlat
mov
inc
cmpsb
cmp
or
test
ja
mov
cli
xchg
ret
push
movsl
iret
adc
jns
mov
jnp
inc
lret
and
push
and
adcb
add
mov
mov
lds
push
jge
xchg
jns
mov
jnp
push
fnstenv
cld
int3
ret
loop
cmpsb
lock
mov
arpl
xchg
xchg
sub
and
cmp
fimuls
lods
cmpsl
popf
xchg
pop
insl
lret
sbb
push
mov
and
mov
arpl
pop
dec
pop
xlat
dec
jo
cmp
and
pusha
push
fs
mov
mov
nop
icebp
enter
fadd
jno
mov
scas
mov
scas
addb
rolb
cmp
push
mov
sub
xchg
jle
add
lds
sti
push
lods
jne
mov
fbld
scas
fld1
test
sbb
lret
inc
jle
ja
in
pusha
adc
pop
mov
mov
daa
in
stos
movsl
adc
mov
or
cs
in
aas
shlb
out
in
mov
cmp
lret
pop
adc
repnz
stc
cmp
xchg
nop
push
icebp
lahf
idivl
and
xchg
sti
stos
cld
cmpsb
add
xor
fprem1
xchg
mov
sbb
insb
fnsave
popf
sbb
test
in
sub
sub
incl
xchg
xor
movsb
cld
pop
cmpl
lahf
pop
shll
mov
jb
pusha
jb
push
movsb
addl
push
mov
ljmp
pushf
jnp
inc
xor
sarb
add
enter
outsb
fs
push
add
lret
shlb
cmp
scas
shl
rorl
xor
fcompl
mov
mov
push
xchg
popa
daa
lcall
cltd
mov
adc
xchg
pushf
mov
insl
sub
outsb
xlat
mov
xor
inc
and
imul
push
in
pop
mov
mov
aam
cmc
inc
adc
push
ljmp
jno
push
mov
dec
fsubr
pop
sub
das
mov
aam
ret
push
jl
xchg
cmp
sbb
pop
mov
inc
into
or
cmp
arpl
inc
push
xchg
pop
jns
push
outsl
xchg
push
nop
push
dec
ds
ret
pop
imulb
jge
out
xchg
pop
mov
bound
jl
cmpsb
clc
test
mov
loope
push
jnp
clc
das
ja
ucomiss
push
jmp
in
mov
mov
jge
dec
scas
loope
mov
push
das
in
test
repnz
push
or
outsl
add
xor
adc
pop
jecxz
push
adc
fldt
push
mov
fists
insl
sbb
or
dec
popf
sbb
hlt
add
fldenv
mov
cmpsb
mov
ja
imul
inc
fidivl
clc
das
sub
push
in
dec
pop
hlt
push
fsubrp
inc
stos
adc
faddl
repz
js
enter
stc
pop
mov
dec
add
adc
push
aaa
imul
cmpb
dec
fwait
cmpsl
jns
mov
lods
sti
inc
fnsave
out
shr
or
add
sarl
popa
mov
dec
push
xor
adc
or
fwait
mov
or
mov
cmovnp
lea
sarl
xor
dec
adc
sub
sar
clc
mov
out
add
or
lcall
int3
push
jb
mov
icebp
mov
shll
pop
idiv
arpl
ss
loop
loope
pop
push
lret
and
pop
in
test
in
jne
mov
sahf
stos
push
adc
addr16
notl
pop
dec
mov
pop
mov
or
test
out
loopne
inc
or
cmp
xor
gs
inc
sub
jle
mov
imul
arpl
lods
inc
icebp
out
cmpsl
aas
fidivs
xor
push
mov
ret
adc
sbbl
mov
popa
mov
stc
xor
adc
cmc
lods
pop
in
mov
insb
in
sbb
mov
mov
inc
jno
test
mov
nop
mov
and
andl
cld
not
add
cmp
push
gs
lret
enter
push
imul
pop
xor
leave
pusha
insb
fbld
out
xor
xchg
sub
mov
mov
in
cld
fsubrs
test
dec
aas
mov
in
je
sub
xchg
sub
mov
cmp
dec
mov
aad
or
les
cwtl
hlt
jmp
xchg
xchg
mov
inc
push
jo,pt
mov
rcrl
cmp
jno
mov
shll
dec
xbegin
sbb
xchg
les
ljmp
inc
mov
movsl
mov
xor
clc
outsl
push
dec
aad
add
insb
cmc
aaa
xchg
or
sar
jmp
out
mov
pop
push
mov
xor
adc
inc
rclb
lea
cwtl
and
sub
jl
adc
mov
pop
jmp
adc
inc
fildl
dec
loope,pn
jo
dec
sub
imul
insb
in
xorl
or
int
adc
bound
jno
sbb
fstpl
mov
add
into
fdivp
lcall
jl
cmp
jecxz
das
push
inc
mov
push
aaa
lods
fisubrs
push
inc
leave
or
es
fiadds
pop
mov
push
lea
cwtl
sbb
mov
std
sti
mov
fcomp
lret
cmpsb
sbb
loope
add
test
lea
fwait
lea
int
movsb
js
incb
lret
sti
and
xor
test
in
cmp
xor
add
adc
pop
test
push
cmp
dec
outsb
ja
jecxz
imul
fistpll
int
popa
adc
addb
fsubs
xchg
sub
jg
shlb
fmul
fs
in
push
das
or
jnp
lcall
out
mov
ret
fdivrs
frstor
sbb
pop
stos
pop
mov
jge
andb
sub
mov
xchg
inc
test
mov
sub
push
fbstp
repnz
inc
fmull
fisubs
mov
adc
inc
pop
test
or
pushf
dec
es
or
aaa
mov
xchg
pop
jle
ss
inc
xor
mov
addb
outsl
jns
sbb
dec
mov
sbb
sub
jecxz
fidivl
out
pop
pop
leave
adc
jge
inc
mov
orb
lcall
mov
mov
and
scas
les
pop
in
lret
inc
xchg
fisubrl
out
sti
movsl
subb
sub
cmp
pop
dec
add
shl
or
lods
mov
pop
sub
or
mov
insl
shll
and
xchg
sbb
pop
xchg
dec
xchg
mov
or
rorl
push
ret
xor
fwait
pop
outsb
jle
lcall
push
movsb
xor
aad
sahf
dec
adc
lret
cmp
mov
out
lods
fsubrp
in
xchg
xchg
or
ret
lds
dec
adc
cs
lds
mov
std
sub
rcrl
pop
sub
jp
pshufw
sub
jmp
mov
sbbl
dec
and
ds
int
cli
mov
popa
les
sub
pop
div
mov
loop
rorb
std
push
mov
daa
sub
pop
pop
and
adc
and
aad
call
js
pop
out
push
aas
sub
shll
dec
iret
vpmacsdql
js
mov
out
outsl
jno
shl
dec
dec
mov
mov
mov
int
pop
lds
jge
xchg
clc
mov
and
les
addb
roll
lret
mov
add
push
aaa
pusha
mov
push
jp
andl
push
mov
xor
and
popl
stc
or
sbb
cmpsl
popf
adc
out
inc
dec
mov
and
scas
mov
cmpl
rcrl
cmp
scas
jle
push
push
add
rclb
add
add
lahf
adc
es
mov
jbe
pop
mov
decb
mov
pop
dec
xor
shlb
push
lods
adc
jle
jne
jmp
xor
insb
nop
pop
pop
pop
sbb
push
pop
outsb
subl
xchg
enter
mov
pop
or
jmp
mov
mov
sbb
cmc
adc
add
daa
outsl
xchg
xor
xor
xchg
push
inc
push
ljmp
cmp
or
test
jg
loopne
fsubl
mov
sahf
pop
pop
push
daa
lret
jae
jecxz
hlt
sarl
pushf
and
js
xor
call
pop
inc
adc
stos
inc
pop
fwait
icebp
push
test
add
xchg
sbb
inc
pushf
or
mov
loop
lds
mov
or
adc
add
push
mov
pop
shlb
cld
jge
xchg
push
jb
jge
test
inc
mov
mov
rorb
adc
add
stos
inc
pop
jns
test
push
stc
iret
mov
mov
mov
or
mull
ds
sbb
xlat
push
sbbb
mov
push
pop
dec
addr16
pop
lret
cld
mov
cmpsb
out
pop
sbbb
ret
xchg
dec
rcr
push
test
rcl
push
adc
xchg
ret
divb
push
sbb
add
aas
mov
mov
mov
mov
aam
stos
or
mov
mov
sub
loope
cmovp
cmc
sbb
sub
jmp
jg
aam
sbb
sbb
loope
sbb
mov
mov
mov
xor
bound
push
sub
popf
or
loop
aam
cli
jns
mov
out
xchg
pushf
inc
pop
adc
movb
adc
xchg
jo
adc
test
shl
stos
inc
adcb
mov
fwait
mov
xchg
xor
fistl
mov
js
mov
add
mov
movsl
icebp
adc
lret
sti
add
xor
jle
je
or
xlat
mov
mov
push
std
aad
mov
or
call
sub
out
add
leave
inc
dec
fistpll
sbb
movhps
sbb
and
xchg
mov
jb
cld
fwait
gs
add
mov
xchg
push
fldcw
inc
es
stos
or
mov
mov
and
aaa
or
das
fsubrl
stos
mov
aam
fcompl
rclb
pop
cltd
cmpsb
adc
mov
mov
gs
adc
and
stos
jmp
inc
mov
sti
sahf
movsl
mov
pusha
adcl
push
in
xor
das
lods
repz
xor
jecxz
mov
loopne
lods
loop
mov
bound
and
insb
lahf
cwtl
dec
mov
jge
xchg
andl
outsb
sub
mov
push
out
fwait
add
inc
rol
roll
jb
aas
jns
loopne
imul
pushf
inc
lock
setbe
rcl
sub
push
inc
int3
pushf
push
xor
in
sub
out
int3
enter
push
cmpsb
push
aaa
pop
shrd
cmpsl
fldenv
fstpl
dec
fildll
or
mov
sti
dec
jecxz
xchg
fisttpll
sahf
fwait
mov
fnstsw
inc
fcoms
lds
sbb
sub
lcall
push
sbb
bts
fdivl
test
fwait
cmp
nop
ss
sub
pusha
test
inc
adc
out
xor
es
or
inc
mov
sub
out
mov
ja
scas
dec
dec
addl
fs
dec
in
insb
mov
out
ficoms
movups
gs
call
jge
add
leave
cld
leave
in
test
fistps
subb
push
rcrl
jne
mov
rcrl
mov
sahf
out
sub
stc
cltd
aam
aad
pop
pop
add
test
shrl
arpl
imul
gs
sbbl
stos
enter
xchg
pop
push
pop
sub
sarb
fs
dec
push
mov
jbe
icebp
cs
fimull
clc
sbb
into
fdivrp
mov
xchg
mov
push
cmc
rcll
push
ljmp
rclb
cli
add
push
std
cmp
and
loopne
movsb
fidivl
mov
ret
inc
pop
pushf
scas
cmp
icebp
adc
mov
sub
into
insl
int
sub
jne
sbb
cmp
push
push
xchg
mov
leave
inc
cmpsl
in
sub
pop
jge
out
add
or
mov
daa
call
sub
sahf
imul
test
cmp
mov
or
in
mov
imul
inc
mov
add
push
inc
xor
jg
push
fiaddl
mov
jno
pop
fdivrp
inc
mov
jne
inc
push
mov
fsts
xorb
in
test
cmpsb
loopne
mov
loope
imul
cmp
dec
loop
dec
cld
outsl
aas
push
push
mov
add
mov
xor
fdivrl
cmp
jge
in
mov
je
push
fiaddl
xchg
or
mov
cmp
dec
jecxz
and
js
sbb
js
mov
cld
xor
movsl
adc
shrb
xor
orl
or
push
rclb
and
aad
stos
mov
fisttpl
cmp
scas
fucomip
stc
clc
or
sub
addb
jp
adc
or
inc
mov
mov
loope
add
out
cmpsl
push
mov
filds
jo
pop
push
sahf
inc
cmpsl
getsec
pop
in
cmp
add
sub
jbe
dec
jg
or
mov
std
or
outsl
push
sarb
es
mov
mov
push
push
out
and
jnp
sub
sub
fidivs
lock
out
enter
pop
push
lock
fiadds
dec
ja
xor
xchg
shl
dec
cmp
inc
mov
cld
les
popf
mov
add
stos
mov
out
xchg
jge
out
mov
push
ja
bound
insl
pop
push
fwait
or
loopne
mov
test
call
pop
jecxz
dec
sub
addb
or
or
clc
or
jnp
push
ss
popa
stos
arpl
hlt
cmp
out
xchg
loope
out
sub
jns
enter
mov
int
inc
xchg
popa
lods
xchg
jecxz
into
push
cmp
outsb
pop
xor
mov
mov
adcl
into
xor
add
jno
js
loopne
sbb
add
mov
push
inc
rcr
jae
cmp
daa
fstpl
xor
je
dec
scas
fcmove
sub
test
mov
mov
cmp
aas
dec
xor
sub
mov
mov
cmp
jns
push
inc
and
mov
mov
leave
movsb
icebp
mov
pop
xchg
pop
xor
xchg
xor
nop
rsqrtps
mov
shl
dec
mov
sbb
in
push
shlb
mov
xchg
pop
dec
mov
mov
rol
out
xor
xchg
mov
outsb
sub
cmc
sbb
aas
fcoms
jmp
addr16
out
cmc
and
mov
roll
scas
and
stc
test
scas
jp
lret
and
sub
inc
js
mov
test
fmulp
jmp
sbb
push
push
stos
cmp
push
in
xor
sub
cmp
adc
xchg
call
pop
out
iret
das
cmp
adc
xchg
jb
push
cmp
mov
data16
fwait
sti
pushf
js
mov
pop
lahf
xor
dec
mov
jp
adc
mov
sarb
cli
jbe
push
push
lret
jb
mov
sarl
in
mov
xor
ja
xchg
ret
xor
aam
cmc
xchg
cmc
push
in
loop
sahf
pop
repnz
push
in
xor
push
or
mov
stos
insl
fisttpll
mov
movb
jle
mov
add
cs
push
xlat
push
lret
cld
pop
add
and
out
or
jp
sahf
shrb
das
icebp
movsl
shl
xchg
mov
ret
push
jle
pop
cmpsb
fnstenv
stc
mov
test
jns
les
mov
ret
push
xlat
xor
incl
jecxz
push
jne
movsl
data16
pusha
push
xchg
loope
push
jb
movsb
jno
mov
test
ret
test
movsb
mov
sahf
fistpl
into
add
xchg
lods
and
sbb
insl
decl
test
adc
push
inc
iret
pop
mov
clc
imul
inc
pop
in
dec
pop
ror
fnstenv
jo
inc
scas
loope
aam
or
pop
repnz
sbb
pop
sti
mov
xchg
test
dec
add
jne
inc
or
and
sub
pop
inc
and
data16
das
mov
jge
adc
out
adc
fucomp
int
dec
loope
inc
stos
pop
filds
and
cmc
cwtl
into
sbb
pop
es
mov
into
mov
jmp
fs
jo
sbb
jbe
movsl
push
fwait
kxorb
sbbl
push
and
cmp
jge
cmc
mov
inc
mov
add
lahf
xchg
jmp
and
mov
mov
or
pop
add
jno
lret
jae
lods
sub
xor
fdivp
cwtl
sarl
mov
pop
mov
sub
sbbb
rcrb
add
xchg
testb
movsl
inc
inc
pop
aam
lea
repnz
adc
je
adc
sub
test
fwait
dec
push
cli
loopne,pt
xor
lahf
test
nop
rol
jbe
mov
xchg
loop
test
cs
push
cmpsl
out
pop
das
out
hlt
or
aaa
jo
mov
movsl
push
mov
or
in
fdivl
rclb
sti
lret
mov
jge
test
iret
sbb
aas
lods
and
ss
jne
decl
sbb
insb
shlb
lcall
jmp
aas
dec
shll
mov
aaa
stos
lret
mov
jbe
iret
fninit
jae
shlb
adc
adc
add
jle
mov
hlt
sub
cmp
cmp
loopne
adc
jg
and
loope
movntps
outsl
adc
xchg
scas
xchg
in
cmp
ds
fistps
cwtl
adc
movsb
xchg
mov
lahf
and
and
or
inc
dec
stc
xchg
sub
mov
jp
mov
jnp
fsubs
cmp
jnp
iret
mov
in
or
ljmp
out
mov
mov
ret
sub
fs
mov
std
test
in
adc
imul
lcall
pop
pop
xchg
mov
inc
mov
mov
xor
cld
push
dec
fstl
popa
ss
loopne
push
xchg
add
ja
cli
jne
sbb
enter
daa
ja
sbb
loopne
loopne
adc
pop
sub
jge
xlat
mov
sbb
add
loope
icebp
xor
cltd
xorl
sbb
es
xchg
xchg
add
mov
sti
push
push
mov
adc
gs
and
rclb
adc
mov
cmpsb
ljmp
ja
cwtl
insb
jl
inc
mov
mov
fucom
je
mov
iret
ss
aad
mov
inc
lods
in
mov
or
repnz
sub
xchg
out
mov
popa
dec
sub
jp
aad
clc
sbb
andl
sbb
cmp
jecxz
pop
push
in
inc
stos
dec
dec
push
sarl
cmpb
movsl
add
push
adc
jb
xchg
ja
inc
lahf
popa
cwtl
mov
add
in
cmpsb
dec
pop
sub
stos
mov
and
ret
hlt
lods
sub
inc
push
lret
bound
jo
sahf
jne
gs
sti
iret
fstl
test
add
repz
dec
push
pop
pop
cmpsb
cmp
xlat
pop
std
pop
mov
dec
push
sub
cmp
push
out
xchg
xchg
test
cld
inc
out
repz
jbe
sbb
test
fwait
mov
cmpsb
jbe
mov
insl
fcomp
sbb
cmp
scas
xor
cmp
inc
adc
xchg
push
push
mov
mov
pop
sbb
inc
push
add
lods
mov
mov
scas
arpl
lock
fmul
orb
push
daa
jge
cmc
mov
jecxz
sub
push
movsb
mov
push
daa
popf
icebp
adcb
orl
pop
mov
adc
aas
pop
fbld
ss
add
shl
add
ds
or
rclb
mov
movsl
pushf
dec
xor
cmp
stc
or
adc
or
repz
cmp
sub
cld
push
shlb
test
mov
sub
and
fdivrl
pop
push
test
outsb
ret
mov
jmp
scas
xor
lods
cli
jl
popa
xor
adc
push
inc
inc
jmp
and
mov
shrb
cmpsl
mov
repnz
jnp
pop
in
inc
ret
sub
xchg
out
pop
cmp
fimull
dec
pop
enter
push
sub
xchg
mov
cmpsb
jns
jne
pop
xor
inc
mov
stos
loopne,pn
aas
idivb
repz
xchg
xor
xorb
sbb
push
lods
cmp
mov
pop
or
mov
mov
push
sub
sub
ja
xor
jl
cld
roll
mov
xchg
sub
shlb
xor
jbe
jmp
loop
mov
pop
pop
not
pop
sub
outsb
jo
les
mov
cmp
dec
xor
outsl
or
adc
sbb
push
pop
pushf
out
lahf
testl
add
lds
xlat
loop
stos
dec
jne
loop
cli
sub
fisubl
mov
fisubrl
xor
cmc
push
out
rol
add
bswap
icebp
pop
add
je
jb
pushf
movsb
push
dec
cmp
push
and
popf
adc
inc
add
shlb
je
test
pushf
push
xor
pop
dec
clc
adc
jle
xor
xchg
and
fs
and
jecxz
sub
jbe
lods
mov
clc
inc
adc
out
imul
out
sbb
cmp
sub
adcb
mov
xchg
int3
out
cmp
pop
in
test
mov
shlb
adc
addr16
mov
lahf
rcr
mov
or
mov
push
xor
gs
cltd
das
lods
test
dec
mov
fnstcw
filds
orl
or
xchg
cmp
dec
stc
sbb
cltd
and
ds
frstor
pop
insb
mov
iret
mov
mov
test
sahf
jno
cmpsl
mov
mov
push
pop
sub
pop
out
daa
lcall
cwtl
inc
cmpsl
pop
popf
mov
push
pop
jl
sbb
push
jle
stos
mov
in
add
stos
loop
pop
clc
mov
add
xchg
movsb
jmp
lret
pop
cwtl
adc
gs
pop
dec
xchg
mov
movb
add
and
imul
andb
adc
aas
movl
shlb
rcl
cmc
jmp
push
cmp
push
in
or
push
push
sub
inc
aam
out
pop
insl
rolb
sbb
cmp
in
inc
sti
in
dec
and
cmp
sbb
stos
jo
adc
adc
jmp
cmp
add
scas
inc
popf
push
aaa
xchg
daa
mov
inc
inc
imul
fldl
sar
subl
xchg
mov
pop
enter
cmpsl
xchg
arpl
int3
data16
xchg
repz
gs
mov
xor
insl
cmp
cld
fiadds
mov
sbb
add
jge
mov
jle
xor
jnp
jl
mov
pop
in
push
cmpsb
ret
mov
stos
mov
adc
fs
sbb
cmp
jmp
ds
xchg
icebp
cmp
inc
aas
pushf
pop
mov
out
jnp
mov
nop
dec
lds
ljmp
ds
and
data16
xchg
xchg
sti
sub
cmpsb
dec
mov
mov
push
loope
add
imul
sti
xchg
dec
dec
mov
clc
callw
fistps
icebp
scas
xchg
adc
xchg
nop
inc
ret
dec
jg
fwait
and
push
inc
cltd
or
subl
and
lcall
nop
sbb
push
adc
pusha
jg
ret
in
add
xlat
outsl
adcb
mov
fsts
cmp
xlat
cmp
ficompl
or
out
scas
or
das
jmp
lea
adc
adc
push
fdivrs
inc
or
stos
popf
push
sbb
cmc
push
push
pop
test
fiadds
ret
mov
stos
movsl
jae
sub
dec
add
mov
mov
loopne
into
push
gs
and
inc
inc
icebp
push
cmp
jecxz
andb
jne
sub
mov
push
loop
ss
push
xchg
xor
mov
popa
fcompl
cmp
mov
or
xor
xchg
mov
push
out
in
test
mov
or
outsl
mov
or
push
movsb
xchg
and
dec
adc
lock
outsb
and
in
dec
dec
nop
in
push
notl
pop
imul
add
pusha
push
and
sarl
lret
jb
inc
pushf
sub
inc
clc
cmp
ds
fcmovbe
sub
mov
pop
addl
jnp
xor
icebp
dec
enter
loop,pt
loope
data16
jne
sub
push
mov
enter
std
data16
stos
test
push
or
fnstcw
push
das
mov
pusha
inc
mov
fwait
xchg
pop
and
fstpt
es
out
mov
push
mov
movsl
xchg
adc
sub
negl
shlb
in
sbb
pop
cmp
jg
jbe
ja
mov
inc
outsb
push
pop
frstor
inc
fs
mov
cmp
scas
decb
js
bnd
ds
and
sbb
jmp
aaa
push
xchg
pop
pushl
sahf
loope
and
ss
enter
jns
ja
orl
xchg
jp
xchg
les
hlt
cmp
test
mov
leave
rorb
add
mov
orl
mov
xchg
add
or
or
and
xchg
add
outsl
mov
insl
sti
pop
dec
bound
into
adc
xor
jle
sbbb
jmp
incb
fnstsw
sub
add
mov
adc
cmp
popa
or
jmp
rorl
mov
mov
jae
mov
jae
mov
fwait
aaa
ret
xor
jmp
shr
adcl
cmp
mov
call
test
jne
pop
out
aam
cmc
inc
loope
jecxz
adc
mov
ror
in
sub
loopne
dec
mov
sbb
pop
dec
fisttps
push
jno
mov
dec
icebp
mov
dec
add
sbb
sbb
mov
sbb
mov
imull
aam
push
adc
inc
stc
insb
std
jo
xchg
xchg
dec
pop
repz
jmp
mov
mov
push
cltd
and
pushf
adc
cld
leave
mov
iret
pop
outsb
pop
xchg
dec
pop
les
cmp
add
mov
ja
inc
shll
inc
testl
sbb
sub
pop
cmpb
mov
cmp
pop
mov
dec
sbb
mov
mov
xchg
out
dec
dec
mov
int3
pusha
adc
push
cmp
outsl
es
mov
ss
mov
loopne
adc
fcmovne
aaa
arpl
cwtl
or
sub
xor
out
lcall
pop
jbe
jmp
imul
lret
xchg
push
xor
mov
out
shrl
rcrl
stos
push
movsl
mov
in
loope
xchg
movsl
or
cwtl
mov
sbb
jmp
shlb
pop
or
jae
inc
aas
clc
jae
sarb
sub
insb
sahf
shrb
mov
iret
sub
or
in
pushl
mov
mov
mov
in
call
test
mov
or
stos
cmp
aad
pop
mov
mov
lahf
mov
push
jmp
sbb
push
jbe
add
arpl
or
lea
addr16
lahf
mov
or
dec
out
pop
mov
into
dec
sbb
fiadds
dec
mov
jle
out
pop
dec
shll
lahf
xor
inc
mov
in
leave
int
aaa
mov
sub
add
or
mov
icebp
fsubs
sub
fwait
orl
mov
sahf
or
inc
std
jecxz
scas
xor
bnd
sbb
add
loop
push
addr16
int
dec
jmp
push
jb
mov
inc
push
inc
mov
sub
lcall
cltd
pop
out
dec
dec
jns
shll
xchg
push
fwait
mov
sub
call
mov
clc
xchg
sbb
nop
cmp
adc
mov
push
ret
ret
js
mov
mov
inc
fcmovu
shlb
frstor
test
mov
xor
and
rcl
sub
pop
fidivs
daa
ret
xor
add
pop
mull
in
sbb
mov
mov
imul
psubsw
jo
loop
ja
loop
loopne
aas
call
out
add
adc
sbb
call
repz
inc
fsubrs
mov
lock
dec
aad
xchg
leave
int
iret
dec
movsb
push
mov
xchg
movsl
pop
sub
and
imul
fbld
mov
out
movb
pop
xor
lods
xchg
lret
insb
movsl
cmp
dec
les
mov
leave
push
ljmp
addr16
inc
std
pop
nop
xchg
pushf
adc
push
inc
pop
dec
out
and
movsb
pop
ds
xchg
mov
adc
scas
fwait
xor
sbb
cmp
sub
fstps
xchg
jp
lods
inc
arpl
dec
in
sub
xor
xchg
dec
or
push
push
sub
int
pop
mov
shl
mov
rolb
mov
aaa
xor
adcb
push
data16
and
inc
out
cmp
sub
add
and
call
sbb
pushf
bound
jmp
xchg
inc
or
xor
sahf
aaa
fsts
lcall
add
decb
ret
add
sbb
and
cmp
cmc
cmc
sbb
movsb
addr16
ret
dec
pushf
and
push
adc
icebp
sbb
jp
and
xchg
mov
lcall
fiadds
mov
mov
adc
or
lret
popf
sub
imul
jecxz
xchg
jp
xchg
or
mov
int
cmpsb
xchg
adc
sub
jg
rorl
fisttpl
movsb
add
lea
subl
push
mov
cmp
je
pop
sarb
cli
mov
aaa
jmp
test
test
mov
xor
ljmp
jae
ret
outsb
jl
mov
pop
incl
inc
or
xchg
cmp
or
and
jmp
dec
lret
lret
in
push
jle
ss
das
sti
pushf
push
movsl
repz
sub
ret
cmp
mov
cmpsb
mov
add
sbb
jne
nop
cmpsl
mov
movsl
sbb
mov
cmp
pop
cltd
jo
jbe
jecxz
out
jle
test
mov
leave
je
cmpl
arpl
fdivs
outsb
push
jae
dec
orl
mov
in
sub
repz
dec
out
loope
or
ret
inc
sub
mov
mov
lds
clc
jae
mov
dec
and
iret
cmc
push
cld
push
lret
xchg
test
dec
mov
idivb
mov
dec
sbb
loopne
or
mov
inc
test
inc
fidivl
ror
or
mov
lahf
cmpsl
cltd
test
fdivs
test
mov
dec
mov
daa
dec
rcll
stc
inc
shlb
dec
add
cmc
sarb
lea
pmulhuw
mov
stos
fnsave
pop
xchg
cmp
adc
or
sbb
frstor
aam
and
addb
ljmp
testb
sbb
or
cli
push
or
xchg
dec
push
ret
cmp
jg
or
out
fdiv
outsb
fidivl
pop
cltd
ljmp
or
xor
push
mov
test
lods
fstp
bnd
aam
xlat
mov
or
out
fwait
jno
sarb
cmp
pop
subb
leave
pop
pxor
cmp
shlb
pop
ja
orb
cmpsb
xor
push
lea
and
push
xlat
sti
pop
adc
lahf
lret
push
or
lcall
or
movsl
pop
lret
sub
icebp
push
hlt
int
das
test
cmp
xor
pop
dec
scas
dec
dec
xor
xchg
lret
pop
ss
pop
movsb
cltd
mov
out
icebp
sub
out
rolb
outsb
add
sbb
mov
sti
push
fstp
adc
stos
xchg
inc
adc
rcll
loope
repnz
std
ds
das
ds
xor
mov
ret
and
or
pop
adc
repz
inc
stos
xor
cld
lcall
in
push
cmp
mov
popa
fimuls
jnp
out
push
call
xor
ret
mov
jae
push
aas
and
ljmp
pushf
xor
mov
mov
xor
mov
mov
rcl
out
xor
mov
pop
jle
xchg
pop
orb
ljmp
cltd
jb
mov
adc
dec
jmp
mov
clc
cmp
in
or
push
mov
jle
dec
test
and
pop
jns
push
repnz
outsl
out
push
cmp
adc
pop
js
pop
pop
adc
xor
jg
in
mov
sbb
xchg
and
pop
mov
dec
pop
adc
lods
inc
scas
ja
pop
rorl
push
jbe
push
iret
cmpsb
push
pop
mov
mov
fwait
outsb
jp
pop
js
cmp
loopne
cli
subl
fadd
popf
mov
jo
lods
mov
scas
fiaddl
and
adc
sub
movsl
lock
scas
sahf
and
push
sub
pop
imul
test
shll
xor
jmp
or
loope
jns
rolb
mov
and
jae
or
aam
push
cmp
mov
pop
mov
mov
lret
pop
insb
or
pop
inc
sub
pop
xchg
aam
mov
dec
out
sahf
dec
sbb
mov
jg
int
int
shll
mov
pop
mov
mov
scas
ljmp
adc
xchg
mov
mov
lahf
rclb
lahf
jecxz
lods
push
push
jo
jae
sti
daa
push
mov
aad
in
mov
fbstp
adc
lcall
lcall
lock
xlat
xchg
add
pusha
enter
or
sahf
addr16
loope
ret
hlt
push
push
and
sub
jle
inc
sub
jne
int
call
wrmsr
sahf
or
sub
aas
dec
nop
jns
mov
mov
push
or
fcomps
cld
sbb
cmp
es
lea
jmp
cmp
cmpsl
dec
inc
and
call
push
fcmovnu
xor
int
or
pushf
add
aas
xor
fidivs
lds
outsb
popa
mov
sbb
pop
jmp
jo
hlt
adc
cmp
xchg
xor
lret
xchg
fcmovne
loop
jno
dec
imul
int3
movsl
add
es
add
or
xchg
or
icebp
sub
dec
lock
and
dec
mov
jle
xchg
ljmp
mov
sub
and
sub
fdivrl
cmp
cmp
or
add
push
jmp
fcoml
bound
push
mov
clc
nop
int
sub
inc
pop
stos
jg
outsb
jno
mov
int
jo
push
pop
shl
mov
push
fdivrl
mov
std
fsubrl
mov
cmp
or
mov
sub
in
adc
xchg
ja
clc
lea
test
orl
cli
lods
and
xchg
enter
jmp
xor
lods
or
mov
dec
iret
jecxz
inc
mov
insl
adc
ss
cli
arpl
sbb
mov
out
cs
jge
test
pop
test
add
loopne
dec
cmp
scas
fistpll
icebp
out
mov
jbe
xor
or
mov
loope
xchg
scas
xchg
test
out
icebp
push
or
dec
xor
xchg
scas
fdivrl
push
test
cmc
push
jns
inc
mov
cmp
in
xor
jbe
pusha
mov
fadds
cs
mov
mov
ja
jl
outsb
adc
push
in
les
aaa
into
cmpsb
cmp
dec
insb
add
xor
jmp
mov
xchg
lret
ror
icebp
mov
sub
mov
mov
sbb
arpl
mov
stc
pop
sub
or
lcall
and
hlt
and
lods
adc
xor
push
jb
add
or
mov
ret
inc
call
jp
pop
out
pop
fwait
mov
cli
xor
xchg
and
mov
mov
pop
xor
fwait
scas
aad
xor
pop
outsl
sbb
icebp
xor
xadd
adc
pop
and
pop
das
inc
lahf
xchg
pop
loop
aaa
call
inc
negb
jg
or
sub
dec
jnp
jo
rorl
aas
mov
mov
icebp
jnp
push
cmp
mov
sarb
xchg
sbb
dec
add
rcl
xor
pop
sbbb
sbb
out
adc
pop
enter
mov
mov
xlat
inc
lods
pop
jmp
ficompl
arpl
inc
mov
into
xor
or
mov
inc
int3
stos
add
lcall
lock
sbb
push
lret
mov
sub
not
out
lret
push
mov
or
into
int
push
jecxz
xor
mov
or
fiadds
pop
push
fcoms
in
or
ss
push
pop
jno
and
repz
mov
or
ffreep
ja
bound
fcomi
add
push
inc
cwtl
mov
movsl
cmp
cld
cmc
dec
pop
pop
lret
pop
lret
add
mov
inc
sbb
scas
jb
mov
push
in
jecxz
xor
rcl
inc
cmpsl
mov
push
js
lods
sbb
test
sub
cwtl
aaa
pop
push
adc
mov
xchg
mov
lahf
mov
enter
sub
cmpsb
sub
jp
add
push
arpl
jne
push
aad
and
lock
sub
cmp
mov
sbb
or
dec
sub
push
dec
in
scas
cld
cltd
push
or
rcrl
adc
xor
and
pop
call
test
je
or
xor
outsl
cltd
std
in
mov
fcom
xchg
cmp
push
jno
ficomps
ja
pop
sub
call
push
ja
call
imul
pop
mov
pusha
inc
les
xchg
fnsave
inc
std
cltd
mov
or
les
je
subl
sbb
subb
and
and
mov
loopne
sbb
fildll
mov
mov
movsl
mov
fcom
aad
xor
fs
push
sub
ja
xor
sbb
in
xchg
sub
add
jg
int3
sahf
cmc
jp
xchg
sub
mov
adc
test
lret
bound
sbb
cmp
sbb
mov
inc
jg
jmp
rcr
adc
pop
das
repnz
jb
aad
loope
ret
loopne
lods
push
dec
cs
icebp
cli
adc
xor
add
aam
popa
pusha
clc
sub
repnz
fwait
lds
into
dec
rcll
pop
xchg
jecxz,pn
call
cmp
mov
cmp
jo
cltd
push
jns
js
or
jmp
xor
xchg
divl
inc
adc
jmp
mov
cmp
add
repz
dec
aaa
repnz
cmp
xchg
mov
sub
mov
cli
mov
push
test
fstpl
xchg
mov
pop
ja
fcom
jae
pop
xor
adc
pop
jo
inc
js
popa
arpl
mov
and
push
xchg
lret
into
sbb
aaa
inc
mov
sub
mov
sbb
repz
add
mov
fstps
push
inc
out
xor
xchg
push
jle
dec
add
outsb
and
sbb
mov
pop
inc
inc
add
mov
pop
pop
jo
scas
loopne
or
adc
icebp
xchg
andl
mov
pop
data16
mov
or
sub
imul
xchg
mov
add
pop
lcall
icebp
add
mov
fstpt
jmp
pop
imul
push
test
bound
push
mov
ljmp
lock
push
mov
inc
into
daa
cld
cmp
mov
adc
cmp
or
and
out
adc
imul
arpl
enter
push
and
xchg
xchg
cld
jl
mov
adc
out
mov
inc
pop
pop
dec
dec
inc
dec
aaa
push
mov
loopne
ss
xor
je
rcll
out
jne
das
out
pop
rorl
mov
nop
das
jmp
mov
daa
fwait
pop
movsl
shrl
mov
mov
mov
fwait
cwtl
pop
testb
enter
mov
adc
pop
mov
pop
mov
push
cmp
fisttps
sbbb
push
decl
and
clc
pop
xchg
sbb
mov
pop
adc
inc
outsl
hlt
lret
add
inc
pop
daa
and
or
push
mov
cmp
and
flds
icebp
js
into
jmp
sbb
jp
xor
adc
xchg
in
mov
inc
mov
dec
loope
inc
bound
mov
int
pusha
daa
data16
adc
lea
sbbb
insb
aad
lods
xchg
dec
loope
mov
les
mov
add
daa
lret
mov
push
inc
dec
pop
int
call
cmp
cmp
xor
jl
sbb
dec
mov
cmp
add
inc
mov
mov
iret
add
bound
jmp
pop
pop
mov
inc
sub
lock
push
xchg
sub
es
ss
fbstp
mov
je
jnp
push
push
stos
mov
add
sbbb
test
cmpsl
sub
scas
xor
in
dec
add
popa
mov
sar
bound
sarl
adc
push
ljmp
jb
inc
sbb
int
or
jns
roll
sbb
add
jecxz
fnstsw
repz
and
jge
dec
fistps
pop
test
popf
cmp
ss
sahf
sbb
daa
lret
cld
mov
mov
or
xchg
imul
stos
and
cltd
lock
dec
outsb
ss
scas
mov
cwtl
movsb
rclb
inc
add
pushf
pop
je
daa
or
jl
ja
negl
mov
sub
popf
js
fdivrl
push
movsl
mov
cmpl
or
cltd
arpl
data16
sbbb
in
xor
in
int3
pop
mov
fsubrp
nop
push
inc
cmc
mov
push
xchg
mov
push
in
xor
lock
inc
scas
ret
pop
and
loop
pop
dec
cmp
gs
iret
jg
test
iret
ja
loope
lcall
mov
hlt
add
sbb
mov
les
sub
pop
popa
call
test
xchg
push
hlt
mov
subb
xchg
xor
test
and
dec
fbld
lods
jo
push
cwtd
jb
add
push
adc
xor
xchg
outsl
inc
inc
test
mov
les
sti
or
sub
lea
pop
ficoms
sub
push
mov
jnp
nop
daa
jae
into
out
jns
lock
add
mov
ret
test
dec
sbb
ffree
fimull
in
ljmp
aad
insb
pop
sbb
es
fidivrs
adc
and
and
dec
in
sbbl
jmp
sti
pusha
inc
sbbl
arpl
sbb
push
je
popf
insl
shl
sbb
add
test
test
ja
outsb
and
mov
jno
xchg
jb
fs
adc
sub
mov
iret
mov
sbb
add
push
ljmp
pushf
mov
sub
sub
mov
mov
jbe
mov
repz
mov
imul
add
inc
push
mov
xchg
popf
pop
fidivrl
or
scas
fdivs
lret
xor
std
std
divl
clc
fnstcw
push
and
xor
lea
xorb
je
inc
test
enter
mov
mov
xchg
das
call
add
push
mov
dec
xor
bound
es
mov
mov
test
rolb
mov
pop
gs
arpl
mov
push
jmp
icebp
add
cltd
xor
inc
insl
pop
inc
xchg
mov
xlat
sub
cwtl
cmpsl
cmp
mov
repz
fstps
or
add
inc
and
dec
in
and
push
mov
rcl
mov
fsubl
add
fnstenv
cmp
and
jge
lea
mov
or
cmp
push
scas
xchg
add
pop
int
add
shlb
cmp
movsl
xor
pusha
out
popf
fs
sbb
dec
xchg
push
ja
inc
clc
dec
in
movsl
mov
cmp
bound
sbb
mov
lock
jmp
mov
lahf
aam
leave
jg
sarl
fcompl
fidivl
lret
fildll
fwait
cs
nop
outsb
aad
in
pop
out
dec
dec
jecxz
jns
inc
sub
inc
test
pop
sbb
or
lds
sti
add
out
int3
arpl
jg
dec
loopne
mov
jbe
xorb
mov
dec
in
lret
repz
insb
inc
imull
mov
push
fidivrl
inc
out
sub
mov
xchg
cs
adcb
cmp
fldenv
add
loop
pushf
and
pop
sub
mov
repz
cmp
mov
jge
lea
add
and
test
inc
sub
or
mov
int3
fsubp
adcb
dec
xorl
push
loopne
push
pusha
cld
mov
xor
push
jbe
mov
movsb
cmp
fstpl
mov
out
and
andl
clc
repz
jne
ljmp
pushf
daa
stc
add
lret
xor
dec
idivl
push
daa
outsl
xor
pop
mov
jno
mov
push
mov
cmpl
in
out
cmp
sub
int3
mov
jecxz
pop
and
mov
mov
movsl
mov
cmpsl
and
mov
push
fcompl
xor
das
pop
nop
stc
iret
aaa
mov
cmc
dec
jae
push
push
mov
lcall
das
or
push
ljmp
filds
xlat
sbb
pop
icebp
xchg
cmc
ds
lret
dec
add
mov
push
mov
push
rcr
rclb
test
imul
lods
inc
mov
xchg
loopne
rcl
rcl
test
rol
jae
dec
xchg
aam
iret
push
push
clc
push
out
loopne
jae
sub
dec
push
push
lcall
imul
test
xchg
fsubrl
outsl
addl
enter
hlt
push
jnp
insl
sarl
and
inc
test
add
call
push
or
lret
mov
lock
or
push
insl
adc
imull
add
or
push
add
sbb
into
cmpsb
lods
sub
outsb
inc
lea
rcll
jb
mov
out
ret
fs
lcall
mov
xor
ljmp
testb
pop
test
jecxz
sub
cltd
xor
xchg
out
into
mov
xchg
in
in
jle
xor
sti
inc
mov
mov
pop
mov
inc
mov
pushf
sti
sbb
and
mov
ja
shrb
pop
icebp
mov
mov
fidivl
outsb
sbb
jae
fwait
lock
push
repnz
fisubrs
lds
in
push
cmc
outsl
pop
insl
movsl
fsubl
out
ret
ret
cli
mov
or
insb
sub
imul
cmp
rcll
nop
push
insb
sub
ss
fadds
add
enter
push
cmpsb
clc
pop
rclb
js
and
popa
jae
adc
add
in
test
scas
pop
aaa
outsl
popl
shll
dec
dec
stos
jae
inc
loopne
mov
jp
xor
jle
or
fstpl
shll
gs
dec
mov
adc
orb
dec
notl
test
loop
xchg
in
xchg
sub
add
shrl
aam
xor
ret
lds
mov
push
std
xchg
xor
jg
fdivp
ret
jno
mov
jno
dec
sub
dec
jecxz
sarb
lret
test
std
or
mov
add
mov
iret
push
enter
xor
int3
sub
popf
jb
inc
or
pop
lock
mov
les
adc
jno
mov
pop
xchg
push
je
sub
arpl
cmpsb
push
mov
data16
sub
xor
cmp
in
jns
push
rcl
repnz
test
mov
sbb
cli
push
inc
icebp
loop
or
addr16
mov
int3
mov
dec
dec
jno
xor
mov
inc
cltd
add
sbb
xor
and
in
mov
out
lods
fcomi
movsl
sbb
das
push
xor
imul
pop
scas
inc
jecxz
fiaddl
add
ljmp
in
push
cmp
ja
or
mov
lods
popa
sti
push
sbb
mov
pop
pop
loope
stos
cmp
and
pop
clc
jnp
inc
sub
inc
xchg
mov
es
iret
or
pop
inc
cmp
pop
js
sbb
dec
loope
mov
jmp
fs
pop
or
loope
icebp
inc
jnp
lahf
lods
mov
fiaddl
sub
rorb
pop
cmc
leave
sub
mov
sub
mov
cld
pushl
jmp
inc
stos
mov
bound
test
movsl
sub
es
bound
xchg
int
lcall
dec
add
dec
loopne
add
dec
popa
push
loope
jae
adc
mov
insl
jbe
lret
fisttps
pop
cmc
lds
mov
ret
inc
in
cmpl
dec
jmp
jno
loope
insb
dec
jp
clc
mov
mov
dec
test
fdiv
add
pop
scas
jae
mov
clc
add
pop
hlt
and
in
cld
jle
sbb
lea
cld
subl
inc
pop
dec
push
inc
in
add
aas
pop
bound
paddsw
sbbb
mov
xchg
adc
rorb
mov
jp
push
mov
push
xlat
dec
add
push
out
sub
jns
loope
mov
pop
test
out
adcb
out
xchg
sub
test
aad
jae
jmp
fs
lahf
add
mov
mov
and
pop
jno
cmp
mov
lea
into
pop
test
xchg
jmp
bnd
stos
push
sbb
add
mov
mov
add
inc
cld
sbb
das
push
push
jge
out
mov
push
pop
dec
jp
inc
fwait
scas
jecxz
jge
push
push
fcoml
scas
cmc
rcll
negl
aaa
mov
jne
fwait
ss
mov
xlat
jnp
fisubs
fmuls
loop
shlb
jecxz
mov
lret
jae
jp
data16
inc
int
dec
pop
out
out
ja
in
jecxz
push
out
push
cld
cmp
xchg
in
push
fisubs
jne
das
icebp
jg
cld
scas
xor
xchg
adc
imul
test
out
mov
mov
das
insl
pop
or
cmp
mov
aad
pop
loope
das
sbb
insl
or
cmpsb
cmp
jns
aad
push
adc
stos
enter
lret
cmp
fnstenv
cmpsb
shlb
popa
mov
dec
js
pushf
xor
in
pusha
adc
mov
dec
outsb
sbb
inc
inc
lock
xor
adc
pop
mov
out
xor
pop
movsl
mov
dec
shr
out
mov
mov
adc
cli
shrl
in
test
and
adc
xchg
cmp
and
std
pop
addr16
adcl
out
je
add
rcrl
scas
add
and
daa
pusha
and
lods
mov
dec
in
subb
popl
rcrl
bound
xchg
sub
inc
xchg
pop
mov
fnstcw
hlt
dec
push
sbb
sub
add
repnz
or
fsubl
jmp
cli
and
xchg
cltd
dec
or
mov
pop
mov
mov
movsb
popf
mov
stc
dec
sub
xchg
jae
mov
or
and
xchg
adc
fstl
cli
aam
es
sbb
sti
js
sub
data16
sub
sbb
sub
lcall
push
sti
pushf
or
jmp
inc
push
push
xchg
xor
mov
arpl
and
jle
mov
mov
les
xchg
sti
fwait
addr16
jecxz
lds
mov
xor
jp
push
fdivl
push
or
and
push
mov
cmp
sub
sbb
sti
and
mov
adc
mov
mov
adc
movsl
mov
in
aam
pop
enter
mov
sub
add
pop
or
push
mov
fimuls
dec
jle
pop
mov
mov
imulb
arpl
cmp
add
mulb
sti
inc
js
mov
addr16
imul
push
jecxz
xor
fisubs
test
testl
adc
jge
sbb
inc
lds
xchg
mov
lods
int
push
in
add
sti
inc
lods
or
out
pop
stc
in
addl
mov
lahf
push
fs
shrb
jp
pop
addr16
adc
popa
xchg
movsl
out
sbb
mov
cmp
sbb
xchg
jle
xchg
xchg
sahf
imul
mov
pop
bound
mov
shrb
sbb
shl
pusha
aam
fwait
movsl
scas
xchg
ds
test
shl
sbb
cmp
lcall
push
mov
jge
data16
stc
popf
dec
jle
mov
xor
fucomip
lods
push
xchg
sbb
les
ja
insb
cmp
je
xor
add
iret
mov
lea
push
rcrb
fxch
mov
or
sbb
lods
scas
out
mov
and
mov
gs
xchg
ss
data16
add
or
clc
or
cmpsb
daa
and
cmp
add
xchg
movsb
aad
xchg
jg
sbb
xchg
and
lock
mov
inc
inc
push
xchg
mov
addr16
xchg
mov
nop
insb
mov
or
adcb
lods
mov
mov
or
int3
and
ret
mov
inc
pop
cmpsb
stc
aaa
and
out
int3
loope
gs
mov
xchg
mov
jb
xor
push
lods
repz
adcl
cmp
out
inc
je
mov
imul
fnsave
mov
aad
mov
imull
sarb
cmpsl
cmp
jle
enter
lods
daa
aam
or
dec
and
mov
fiadds
mov
jbe
mov
popf
push
mov
test
lods
push
cmp
popf
inc
cmp
repnz
xor
push
imul
xchg
jmp
ds
out
shlb
mov
repnz
test
and
sti
es
ja
insl
es
aaa
loop
mov
pop
mov
icebp
or
xchg
addr16
xor
ss
test
hlt
stc
sbb
pop
add
fldl
mov
pop
sub
dec
pop
insb
aad
stos
jle
sbbb
pop
or
or
lods
push
push
ss
cmp
in
int3
cld
lea
adc
sbb
dec
mov
cwtl
adc
mov
popa
iret
adcb
lods
push
outsb
sbb
out
nopl
arpl
lods
call
mov
hlt
mov
incl
in
xchg
xchg
orl
outsb
push
imul
leave
insb
insb
add
sbb
cmp
cli
sahf
mov
into
addr16
bound
or
gs
mov
sub
test
and
repnz
pop
xchg
enter
fdivrs
jno
lods
scas
xchg
sub
sti
lret
mov
xchg
jnp
test
cwtl
aam
in
mulb
aad
je
inc
mov
xchg
out
cmp
cli
dec
pop
pop
cmp
lretw
sbb
mov
mov
loop
test
mov
sub
popa
les
xor
fstl
mov
push
addl
sub
inc
mov
dec
pop
fdivrs
fidivrs
popa
inc
aas
push
stos
in
jno
mov
popa
jns
stc
popf
ret
lods
sbb
fldt
movsl
lds
ja
mov
push
lock
scas
pop
mov
rorb
sbb
or
out
jno
push
ds
push
jmp
lods
push
arpl
mov
dec
ljmp
jb
insl
mov
sbb
mov
and
data16
pop
jle
nop
daa
xor
sbbb
push
aas
loop
mov
pop
inc
pop
nop
test
aad
lret
pop
fnstenv
daa
clc
fisttps
jmp
jne
inc
mov
cltd
dec
dec
push
xor
dec
mov
jge
imul
call
lret
stos
xor
cmpsl
jp
cmpsb
testb
stc
fsubs
inc
push
cwtl
add
mov
pop
fwait
jge
addr16
mov
mov
mov
xor
xchg
inc
or
test
ljmp
in
fsubr
out
in
or
leave
sub
mov
add
lock
test
mov
pop
cwtl
mov
inc
mov
jmp
xchg
cs
add
in
push
pop
push
ficoml
jmp
push
mov
aas
cld
notl
stos
addr16
inc
xchg
mov
data16
loop
sbb
dec
movsb
lock
pop
sub
push
daa
into
fisubrs
xchg
pusha
and
jae
stc
jnp
sbb
push
and
push
mov
add
lcall
xor
mov
adc
mov
sahf
push
inc
dec
mov
lahf
movsl
jo
xor
andb
jecxz
adcl
dec
mov
push
testb
aas
popa
xchg
test
add
into
sbb
in
adc
je
fisubl
push
aam
xchg
sub
out
setg
jg
jnp
ret
arpl
cli
or
stc
shll
cs
stc
pop
leave
add
mov
aaa
clc
and
repz
cli
push
scas
mov
push
iret
fildl
or
movsl
test
das
ret
adcb
dec
or
jbe
or
fcoml
mov
jo
jg
or
mov
sarl
adcb
pop
and
and
les
xor
push
ja
push
test
and
push
in
aam
inc
scas
ljmp
in
mov
xor
lock
test
cmp
jbe
mov
andb
xor
leave
int
add
repnz
cli
mov
dec
jne
mov
xchg
sub
ret
cmpsb
icebp
and
push
pop
icebp
adc
mov
push
outsl
push
fsubrl
push
into
fisubs
dec
ret
ds
je
jbe
push
push
xor
push
insb
push
outsb
dec
repnz
pop
mov
js
jo
fidivl
push
mov
sti
adc
push
push
iret
mov
mov
fs
fsubrs
xor
bound
cli
mov
fadd
mov
loop
adc
or
add
ret
jp
enter
xchg
ljmp
and
jae
inc
test
fistps
shrl
arpl
fs
or
and
stc
in
xor
aaa
dec
daa
fimuls
lea
stc
test
push
xor
jmp
cmp
xchg
in
testl
jae
lret
dec
ret
je
pop
arpl
lahf
pop
or
jp
repnz
mov
loopne
or
out
js
mov
jl
out
out
jns
fwait
mov
repz
out
test
in
pop
sub
cltd
pop
cmp
mov
inc
xchg
shrl
pop
in
repz
lea
inc
imul
pop
jp
mov
xchg
mov
ret
js
call
add
ds
stos
je
adc
repz
mov
jp
push
clc
sub
movsl
daa
inc
push
pushf
dec
mov
or
imul
adc
test
dec
xchg
insb
xchg
jg
mov
cwtl
std
or
sbb
mov
jmp
repnz
and
or
iret
xchg
xor
jno
cmc
lret
xlat
fsubr
stos
icebp
mov
arpl
idivb
xor
negl
ja
xchg
out
fnstsw
or
fs
mov
push
jo
jle
adc
mov
mov
fcoml
pop
pop
cmp
arpl
insl
sbb
jp
andb
imul
sbbb
or
add
and
into
shrb
data16
test
je
push
pop
mov
lea
sub
test
pop
lods
in
sub
xor
jl
neg
test
sbb
imul
sbb
daa
cmc
push
mov
scas
push
sub
push
movsl
fcmovu
pop
ss
mov
fs
mov
xchg
psrlq
aas
dec
inc
out
lcall
fildl
orl
repnz
xor
dec
cmpsb
mov
mov
lahf
lods
lods
inc
filds
xchg
lret
in
push
das
cltd
sbb
js
clc
mov
hlt
or
pop
scas
add
xchg
cmpsb
cwtl
jmp
aam
mov
out
cmpsb
cmpsb
shrl
stc
xchg
daa
jnp
in
sub
pushf
scas
ret
test
test
loopne
lret
in
xchg
xchg
aam
mov
mov
inc
fmul
mov
sub
out
jno
jae
ja
test
inc
test
int3
arpl
jle
stos
scas
clc
ljmp
enter
push
ds
xchg
dec
mov
cmpsb
inc
gs
xchg
push
andl
pop
or
and
icebp
pop
incl
add
add
mov
lcall
jnp
mov
mov
dec
lods
iret
push
popf
and
mov
pop
add
pop
call
and
pop
push
and
popa
jnp
insb
aaa
imul
les
xchg
xor
arpl
mov
mov
cmp
imul
aaa
out
and
das
push
movswl
sahf
std
pop
sub
fs
pop
out
xchg
outsb
push
pop
jecxz
stc
hlt
in
mov
ja
sahf
or
cmp
mov
lds
push
pop
sub
inc
mov
lret
pop
jns
stos
and
push
jl
out
pop
cli
loopne
mov
pop
lea
ss
dec
addl
push
jge
subl
out
mov
adc
and
or
push
cmp
pop
sbb
xor
popa
insl
add
idiv
or
push
out
push
movsb
inc
jae
xchg
popa
sub
and
inc
andl
inc
mov
and
sahf
ret
xor
mov
test
dec
dec
into
xchg
shld
dec
jecxz
dec
dec
xor
and
jo
adc
je
pop
fxch
lods
push
sub
xor
ds
mov
inc
xchg
mov
fdivp
out
stos
mov
sub
add
mov
cmp
ljmp
cmp
xor
rorb
inc
mov
jg
test
leave
es
mov
push
and
inc
fisubl
fdiv
add
jmp
std
dec
cmp
insl
mov
xor
inc
subb
int3
xor
mov
mov
test
out
mov
jle
adc
dec
mov
test
jno
in
dec
mov
jp
cmp
sbb
fdivrl
pop
out
mov
xor
inc
xchg
repz
leave
adc
enter
mov
ror
xchg
bound
xor
mov
mov
lock
pop
imulb
js
lods
ja
push
mov
mov
test
lds
mov
cmp
dec
gs
xchg
add
lea
xchg
pop
add
pop
sub
aaa
cmp
add
xor
pop
adc
or
xchg
sub
cmc
add
cli
inc
mov
xchg
cld
and
aad
mov
push
mov
pop
jecxz
cmpsb
cmp
sbb
nop
lods
dec
push
pmaddwd
jnp
xor
sbb
push
xchg
sarl
xchg
lods
and
lock
int3
data16
enter
xchg
adc
lds
xchg
mov
lahf
testl
add
aas
scas
icebp
movsl
and
das
inc
jle
addr16
in
jmp
dec
imul
loop
or
test
loop
mov
jo
add
ret
repnz
gs
cmpsl
out
add
xor
push
inc
fldz
arpl
repnz
mov
or
jg
jns
jecxz
imul
or
sbb
add
hlt
xchg
pusha
ss
cwtl
dec
dec
out
sub
xor
pop
decl
mov
sahf
sub
iret
push
xchg
leave
jecxz
jecxz
out
fsubrs
loop
popf
imul
xchg
cmp
outsb
push
out
mov
mov
jbe
popf
cld
out
jecxz
arpl
sarl
mov
xchg
cmpsb
gs
mov
jne
fdivl
cs
jl
js
push
dec
fbstp
push
ret
insl
jle
pop
cmpsb
mov
shlb
popf
stc
imul
cld
push
xor
pop
add
adc
scas
sub
scas
or
push
jnp
mov
xchg
pusha
enter
push
test
add
daa
jns
sbbl
call
push
and
mulb
test
or
inc
adc
jmp
faddp
jecxz
jo
push
shrb
adc
push
sbb
push
es
fldenv
and
and
fidivrl
jns
jbe
cld
out
test
xchg
mov
lahf
out
sti
in
jle
lock
outsl
cmpsl
xor
add
ret
cmp
adc
cmp
jb
mov
call
fldenv
mov
sar
hlt
scas
icebp
sbb
movsl
inc
mov
ljmp
jbe
shl
lahf
or
call
mov
mov
rolb
sbb
xchg
mov
stc
in
into
dec
notb
mov
dec
movsb
int3
lret
ret
imul
ja
test
test
out
xchg
dec
ret
mov
sti
pop
repnz
daa
repnz
ds
or
adc
addr16
jb
es
push
fidivs
lahf
push
popa
enter
dec
mov
jg
pop
mov
mov
dec
push
xor
sub
movsb
aaa
mov
sahf
cmp
or
sbb
addr16
rolb
mov
xchg
adc
mov
aas
cmp
dec
negl
lret
sub
mov
movl
bound
in
fwait
dec
insb
cltd
std
dec
out
xchg
hlt
xchg
rorl
sbb
stos
je
in
push
or
mull
lea
and
mov
stc
pusha
pop
inc
jecxz
shrb
jno
mov
sbb
mov
cmp
iret
andb
jg
addr16
aad
iret
lret
push
xor
addb
insb
mov
sti
sbb
or
dec
dec
or
in
std
mov
cltd
imul
mov
jbe
xor
movsb
xchg
dec
fdivl
shlb
pop
mov
adc
mov
jae
outsb
insl
dec
push
ror
not
xor
sub
and
and
repnz
scas
repnz
fimuls
pop
add
cmp
insb
add
push
adc
cmpl
dec
add
enter
and
cmpb
jno
push
outsb
fldenv
mov
cld
sub
add
mov
aaa
mov
dec
push
lahf
les
pusha
imul
daa
ss
cmp
test
sbb
mov
jl
pop
sub
pusha
faddl
nop
test
testb
je
pop
fadds
jg
xor
mov
into
push
push
pop
xor
sub
mov
cmpsb
fs
push
xor
pop
mov
insb
or
pop
push
jp
lock
scas
pop
out
pop
lea
push
sub
mov
or
mov
rcrb
notl
mov
in
imul
out
pop
jmp
inc
inc
mov
push
inc
ljmp
test
pop
dec
test
cs
loopne
mov
icebp
stos
inc
int
out
sub
test
cld
push
test
lds
fnstcw
pop
cmpsl
xchg
adc
fwait
jb
sahf
pop
cltd
popa
add
mov
int3
in
or
and
push
jbe
sub
cmp
xchg
xchg
sub
cmc
js
mov
xchg
sbb
or
lret
in
dec
mov
rol
jae
xchg
mov
lods
shrb
dec
repnz
xor
bound
lds
cmp
loopne
out
daa
cmc
mov
push
push
mov
xchg
fstpl
push
or
fwait
mov
imul
inc
jp
fisttpl
push
in
inc
lret
sbb
lds
out
jge
pop
mov
cmpsl
cwtl
pop
lock
dec
adc
cmc
data16
cwtl
push
pop
sub
xor
ss
cli
fsubrl
rorl
dec
test
mov
arpl
or
jb
rcrl
sbb
pop
mov
jmp
dec
and
aas
push
insl
and
mov
push
std
or
loopne
dec
hlt
xor
movsl
loope
lods
fwait
dec
in
mov
cmc
mov
pop
adc
repnz
xor
adc
pop
xor
nopl
imul
jne
aam
mov
pop
repnz
lret
pop
sub
insl
arpl
cmc
pop
gs
adc
pushf
aaa
xchg
add
rorl
pop
push
hlt
add
shrl
scas
arpl
or
addl
lds
je
lods
add
pop
ljmp
lock
ja
adc
mov
jp
push
inc
sub
add
fdivrl
mov
xor
fmull
mov
sbb
mov
push
inc
outsb
dec
sbb
arpl
fwait
push
mov
andb
push
ljmp
jb
xor
icebp
test
les
mov
push
inc
iret
data16
xchg
sbb
jg
popa
clc
andb
mov
aam
jmp
push
cmc
mov
addr16
or
xchg
dec
push
pop
orl
bound
jge
ret
cmp
hlt
loopne
popa
pop
pop
adc
mov
mov
sub
inc
push
inc
icebp
lahf
arpl
xor
mov
into
add
cli
aam
jae
mov
enter
insb
std
mov
mov
popf
movsl
cld
mov
ja
cmc
adc
shlb
loope
cmpsl
cwtl
lods
sub
pusha
xor
adc
sub
xchg
movsl
sbb
add
test
cmp
sbb
icebp
enter
push
sub
insl
mov
and
mov
inc
push
jo
fistpll
dec
xor
xor
xchg
add
push
out
mov
outsl
aaa
or
pop
jne
fistpll
xor
mov
add
cmpsb
mov
pop
pusha
jle
call
cmp
inc
mov
in
sahf
sub
cmp
jecxz
sahf
push
imul
lods
mov
dec
andb
mov
xchg
jp
cli
cmp
call
lock
xor
xchg
lret
push
cltd
lret
shl
dec
popa
mov
push
aas
add
sub
aas
lds
ficomps
loop
mov
int3
xchg
shrb
nop
repz
inc
loop
mov
push
pop
xor
popa
mov
push
or
out
and
shl
mov
mov
sbb
mov
popf
jp
sub
jno
jle
sbb
xchg
lret
push
mov
pop
out
pusha
stos
and
inc
pop
shll
sbb
pop
push
inc
cmp
scas
daa
xchg
dec
sti
rclb
push
pop
or
jg
subb
xchg
sbb
ret
add
outsl
add
sbb
sbb
mov
lods
xchg
mov
pusha
jmp
jl
xlat
add
jmp
or
ss
lret
jecxz
mov
push
xor
cld
mov
out
and
pop
pop
adc
jmp
hlt
data16
xchg
gs
into
inc
and
sub
mov
lcall
push
cmpsl
push
adc
ret
and
ljmp
jo
fcoml
hlt
sbbl
mov
in
jecxz
cmp
xor
movsb
xor
loop
sbb
mov
lock
les
int3
arpl
data16
popf
aaa
fildll
rolb
in
fmuls
leave
and
loopne
lea
hlt
dec
and
xchg
inc
lret
out
jmp
ja
mov
cmp
cmpb
mov
mov
or
enter
push
sbb
xlat
mov
iret
fstl
out
imul
test
pop
push
dec
out
ds
pop
out
ljmp
mov
xor
cltd
cld
pop
mov
jne
dec
xor
insl
inc
and
pop
leave
push
or
xchg
add
mov
and
inc
jge
adcb
cmpsl
mov
and
sub
mov
rclb
and
pop
add
dec
xchg
push
mov
push
cmp
mov
outsl
dec
pop
add
sahf
adc
jno
xor
cltd
xchg
mov
stos
lcall
jbe
jnp
imul
sbb
pop
das
cmp
iret
bound
and
stos
stos
ds
add
adc
je
xor
outsb
push
cld
and
into
mov
push
mov
punpcklbw
orb
outsl
cwtl
jmp
sahf
call
push
mov
sub
or
lds
and
and
rcl
push
pop
out
popf
jl
xchg
pop
xchg
lods
add
push
sti
in
xchg
push
lret
stos
push
fwait
bound
les
and
and
mov
int3
notl
jg
and
in
xchg
mov
inc
leave
and
in
stos
pop
lahf
in
pusha
add
cs
loop
mov
test
ret
mov
or
sub
popa
loopne
in
jl
and
pop
push
cwtl
loop
movl
rolb
cwtl
stos
insb
dec
sbb
cmc
gs
addr16
add
cmp
fwait
jmp
int
push
jge
cmpsb
arpl
xchg
sbb
mov
dec
test
or
int3
cmp
sbb
or
push
cltd
fistl
xor
out
loopne
xchg
lea
lds
dec
lahf
arpl
adc
xor
fisttps
nop
and
mov
mov
in
mov
jmp
push
repnz
and
and
call
js
pop
xor
pop
roll
mov
mov
jo
dec
mov
pop
and
iret
call
mov
movsl
mov
sbb
jl
fs
xchg
jle
aam
and
mov
xlat
imul
lea
xorl
sub
cld
scas
inc
out
pop
mov
add
es
and
test
lods
cmp
cmpsl
or
adc
outsb
pop
mov
repz
jle
jg
fiadds
pop
sbb
cmc
sub
in
xchg
and
repnz
mov
push
iret
jp
outsb
mov
gs
scas
lock
das
or
test
push
mov
test
test
sbb
cmp
fwait
push
popf
mov
mov
add
push
lcall
pop
or
in
add
mov
fcomp
sub
sbb
mov
jg
xchg
mov
scas
mov
test
daa
and
in
lock
xor
push
insb
fisubs
or
les
in
dec
sbb
pop
jnp
movsl
cmp
in
and
in
out
fdivl
mov
scas
lea
cli
push
fsts
mov
ret
jb
pop
outsb
xchg
and
xor
jbe
jl
mov
inc
inc
pop
xchg
movsb
out
cmp
jnp
inc
bound
pop
mov
inc
mov
and
adc
mov
xchg
sub
sbb
push
test
cld
cmc
outsl
jnp
sbb
ret
adc
jnp
decb
pushf
add
inc
push
and
inc
lods
test
adc
xchg
dec
icebp
and
mov
xchg
jnp
xlat
aas
push
repnz
mov
mov
sbb
mov
fsubr
add
clc
mov
loope
aam
in
push
pop
cltd
xchg
pop
andl
mov
xchg
inc
xor
ret
sub
leave
pusha
mov
fcomps
das
out
mov
test
pop
inc
xchg
subb
imul
mul
fmull
lahf
or
out
popa
lahf
mov
jbe
icebp
jno
rcr
inc
fcoml
mov
out
adc
insb
add
loope
lret
xor
mov
add
mov
or
dec
in
sbb
mov
or
rol
arpl
mov
pop
arpl
mov
jae
sarb
xchg
xchg
mov
std
push
rcr
sbb
xor
sbb
lcall
and
insl
mov
ss
or
jne
mov
ds
je
mov
mov
clc
test
stos
xor
mov
mov
jmp
nop
push
fwait
inc
mov
lahf
imul
popf
rcl
je
adc
jle
inc
arpl
daa
outsb
inc
push
push
lods
add
jne
sti
pop
mov
push
pop
shll
mov
lock
add
rolb
inc
jmp
imul
adcl
dec
aad
pop
push
inc
psubq
hlt
bound
and
xchg
lods
or
xor
xchg
jmp
insl
fwait
repnz
out
jb
cli
add
pop
mov
inc
bound
mov
push
stos
mov
mov
movsb
loopne
dec
push
mov
xor
fdivrl
mov
in
imul
addr16
movhlps
mov
stos
xchg
fmul
ja
sbb
cmp
arpl
pop
ss
push
lods
jmp
movsb
ja
sub
jmp
arpl
push
mov
out
dec
sbb
xchg
out
lcall
loopne
out
jge
in
pop
mov
pop
pop
repnz
or
fstpl
sbbb
dec
outsb
add
in
and
push
in
gs
stos
andl
push
jo
loope
pop
lea
testb
dec
lahf
push
int3
adc
js
inc
mov
inc
push
dec
enter
pushf
mov
lret
mov
cli
dec
and
inc
mov
sub
mov
hlt
pop
jmp
fs
push
inc
push
rcr
iret
or
lret
in
pushf
xor
test
in
sub
lret
divl
shrl
pop
cmpsb
popa
mov
xchg
jge
rorl
lret
mov
test
xchg
pop
inc
data16
jl
movaps
mov
push
mov
mov
daa
mov
hlt
sbb
cmp
mov
dec
nopl
xchg
jne
and
aaa
enter
xchg
jmp
sub
arpl
call
dec
mov
stc
xchg
popl
mov
sbb
push
and
mov
in
dec
rcr
in
dec
dec
ds
lods
jns
call
xchg
jp
ret
insl
ret
mov
mov
std
sbb
movsb
push
fbld
sbbl
outsb
and
jecxz
in
pop
ss
dec
lock
divb
stc
in
filds
jae
dec
push
pop
cmc
pop
mov
push
inc
or
mov
jo
pop
lods
xchg
jg
or
xchg
mov
jg
jae
insl
stc
and
dec
jo
mov
dec
mov
hlt
iret
mov
or
dec
pop
pop
add
cltd
xor
jg
mov
fiaddl
lret
mov
ret
push
jmp
mov
and
xchg
push
pop
sbb
out
sbb
adc
mov
cld
aad
mov
sbb
sar
push
ds
adc
stos
jnp
clc
pop
lock
xor
outsl
movsb
mov
mov
adc
sbb
sbb
shrb
mov
dec
out
ljmp
inc
lods
negb
loope
xlat
mov
xor
mulb
inc
out
mov
sbb
cmp
xor
fbld
nop
aas
mov
fsubr
mov
add
mov
cmp
and
pop
sub
push
stos
mov
sub
cld
or
hlt
lret
lret
xor
add
out
subb
mov
ret
decl
push
shrb
add
mov
fnsave
add
nop
or
ss
push
divb
xchg
idivb
adc
pop
ss
pop
and
out
lods
jmp
test
popf
sub
jbe
push
xchg
xor
std
sub
cmpsb
sbb
cmp
adc
xchg
adc
and
fsqrt
pop
jecxz
cmp
sbbl
jbe
sub
sti
scas
in
pop
repnz
pop
dec
cltd
ss
scas
je
add
add
jmp
push
dec
ss
sbb
dec
add
ja
xchg
imul
push
cmp
and
fsubp
sbbb
test
mov
mov
scas
and
test
jne
adc
outsl
lds
push
sub
push
jns
or
andl
inc
sbb
or
push
jbe
pushf
or
dec
mov
or
ret
push
js
sub
daa
pop
sti
sahf
imul
aas
cld
push
scas
adc
cld
int3
in
cmc
or
cmp
xor
sub
inc
arpl
adcb
dec
lods
sub
ljmp
outsl
mov
mov
lcall
mov
fistpll
sub
sti
sbb
ret
fbld
pop
and
mov
ds
in
push
xor
push
pop
or
mov
sub
xlat
leave
shrb
xchg
mov
pop
sub
xchg
fisubrl
add
fnsave
in
scas
xchg
inc
fdivs
pop
sub
stos
inc
out
je
lock
bswap
popa
inc
rcl
jb
mulb
dec
push
es
div
lods
mov
sbb
je
fistpll
xchg
push
xchg
je
ret
adc
xchg
mov
pop
push
std
xchg
mov
pop
mov
adcb
xor
push
nopl
mov
adc
fdivl
jno
cmp
pop
or
pop
mov
sub
popf
addr16
imul
cmp
push
es
test
mov
add
mov
scas
adc
xchg
popf
std
cmp
loopne
adc
clc
cmp
nop
outsl
sbb
stos
imul
and
and
add
inc
sbb
outsb
jecxz
fistl
xlat
outsb
inc
cli
jecxz
scas
insl
cmc
adc
and
inc
cmp
subl
push
int3
in
mov
xchg
xchg
pop
outsb
mov
jns
into
or
adc
xor
mov
mov
nop
gs
nop
movsb
xchg
mov
pop
and
pop
mov
int
daa
fwait
and
inc
mov
jae
movsl
inc
movsb
sar
sbbl
or
jg
sbb
push
inc
cli
push
mov
mov
pop
fs
loopne
subb
jg
push
and
loop
adc
daa
test
outsl
aad
push
adc
test
imul
imul
ret
mov
or
stos
int
cmp
arpl
dec
data16
sbb
jno
cmp
outsb
notl
push
out
pop
mov
and
daa
out
push
adc
xor
ret
add
negl
in
std
dec
sbb
int
push
repz
cs
jbe
inc
sub
xchg
xchg
or
dec
pop
pusha
sub
xor
in
les
or
xchg
sti
push
inc
popa
nop
mov
push
mov
icebp
dec
stos
pop
cmp
pop
jnp
pop
xchg
sub
pop
xor
jg
inc
push
fisttpl
push
jg
or
stc
push
ds
push
addr16
cwtl
jae
and
push
xor
comiss
stos
pop
jbe
clc
mov
sub
xchg
lods
xchg
push
lret
clc
sub
dec
aam
popf
jl
jb
cmp
add
fdivrp
xor
fidivrs
xor
scas
out
pop
scas
cmp
shr
jl
and
mov
mov
cmp
mov
ret
not
fmul
mov
aaa
xor
lahf
ljmp
inc
fstp
into
push
bound
fs
sub
jne
mov
repnz
xor
shld
int
dec
pop
sub
enter
pop
out
push
sbb
test
xchg
mov
dec
sub
mov
cmc
js
cmp
rorl
es
mov
pop
out
push
loop
inc
fbstp
pmulhuw
lret
pop
int3
mov
push
ficoml
sub
ret
sub
jb
frstor
push
xlat
inc
out
xor
clc
lret
adc
repnz
inc
adc
adc
js
arpl
xchg
xor
ja
or
outsb
pop
mov
insl
jne
lret
dec
nop
jae
inc
adc
xchg
dec
xlat
iret
stos
mov
call
push
jl
aas
aam
filds
and
scas
pop
hlt
inc
xchg
jmp
les
mov
and
push
mov
aam
ret
or
cmc
mov
shlb
add
adc
push
jo
imul
lea
or
add
lret
mov
jae
push
jp
jne
test
dec
fildll
lea
cmp
rol
lods
js
fidivrs
push
sbb
xchg
adc
popf
sarl
cld
or
dec
mov
pop
pop
dec
and
je
aaa
xor
xchg
out
cmpl
es
mov
into
test
notl
mov
test
sub
mov
mov
dec
jecxz
dec
push
bswap
shlb
jbe
xchg
scas
mov
push
mov
push
push
and
cmp
movsl
neg
push
and
sbb
test
int
mulb
mov
es
aas
adc
repnz
inc
scas
mov
cld
je
fisttpll
push
push
push
je
or
cmpsl
sub
pusha
loopne
fcmovbe
test
lods
inc
dec
mov
jp
shll
cmpsb
js
sub
jno
in
out
pushf
xor
sbb
sahf
inc
mov
stc
daa
pop
cmpsb
decb
stos
pushf
data16
adc
in
dec
aam
dec
sarb
jge
or
xchg
pop
fmul
mov
or
push
cmp
sbbl
lret
pushf
mov
cmp
stos
cmpsb
fimull
pop
jno
pushf
dec
pop
mov
push
mov
adc
in
mov
into
shll
sbb
xor
mov
dec
xchg
test
jne
xlat
lods
xchg
insl
cmpsl
ds
pop
rol
loopne
popf
adcb
std
xor
and
in
jecxz
mov
jl
in
sarl
mov
fwait
mov
mov
adc
sub
fcomps
or
sbb
sub
or
add
mov
loopne
pop
cmpsb
mov
pop
in
loop
mov
pusha
daa
inc
xchg
add
lcall
or
ds
adc
pushl
les
mov
int
pusha
shll
sti
or
ds
sbb
adc
pop
mov
scas
sbb
mov
dec
adc
push
pop
xor
ret
dec
xor
jns
loopne
andl
xor
clc
sub
icebp
jecxz
or
cmp
jge
mov
sahf
or
call
iret
imul
fistpl
adc
mov
mov
imul
mov
cmpsl
das
jle
xchg
lds
mov
es
cli
out
jp
jmp
or
mov
lahf
ss
aad
inc
jmp
inc
jmp
mov
test
mov
dec
mov
fcompl
push
pop
sub
mov
pop
pop
testb
repnz
pop
sub
stos
in
add
lret
xchg
fnstsw
pop
push
pop
mov
cmc
loope
stos
decb
dec
shlb
cltd
idivb
cmpsl
or
xor
pop
ret
sbbl
mov
adcb
sahf
ret
fcmovnb
fcompl
mov
in
jns
adc
xor
into
in
xor
and
cli
clc
inc
xlat
sub
pop
jb
ficoml
test
or
pop
mov
call
cmp
in
or
and
inc
fcoml
icebp
shlw
jbe
push
ja
test
xchg
cmpsl
scas
mov
lea
stc
and
inc
xchg
sbb
sbb
sub
cmp
test
orl
add
push
lods
pop
mov
test
mov
into
out
sbb
push
scas
mov
les
and
pop
sbb
pusha
dec
jg
insl
test
f2xm1
jnp
add
cmp
push
mov
push
movsl
pop
sahf
out
xor
fldenv
incl
addr16
imul
test
lods
mov
fiaddl
mov
mov
lret
add
ljmp
lock
sti
jbe
xor
push
xchg
sbb
addr16
sbb
fisttpl
sub
dec
mov
std
cmp
xorb
or
mov
rcl
mov
cld
push
pop
cmp
adc
push
and
mov
loopne
rorb
xor
mov
hlt
push
cld
adcl
loope
jp
enter
rclb
arpl
sbb
jle
and
adc
in
iret
xor
or
mov
repnz
add
notb
mov
pop
ret
outsb
ss
sub
ja
jbe
lds
and
mov
sub
push
pop
hlt
sbb
pusha
cmpsb
dec
mov
and
sbb
add
pop
neg
and
jge
cmpsb
adcb
push
sbbb
xchg
shrl
repz
loopne
mov
dec
push
in
jbe
xchg
js
mov
lret
mov
cli
or
adc
in
movsb
lock
push
or
mov
sub
nop
loop
adc
jmp
cli
je
cltd
daa
xor
fs
dec
and
jnp
push
repnz
pop
cmp
nop
mov
adc
mov
lcall
cli
xchg
dec
fcmovu
jnp
outsb
and
mov
aas
xor
xchg
or
pop
repnz
insb
sbb
pop
pop
pop
pop
aaa
or
jnp
xchg
cmp
adcb
or
dec
sub
adc
adc
push
cltd
stos
sub
push
mov
mov
ret
xchg
push
xor
push
and
fistps
adc
loope
jae
push
push
xor
xor
cmp
jge
pop
js
fldl
movsb
testl
cmp
inc
lcall
adc
mov
lea
adc
sbb
jmp
mov
fdivrl
push
fdivp
inc
inc
jnp
js
adc
lods
lret
hlt
mov
xor
mov
jmp
mov
movsl
movsb
inc
lea
out
and
out
pop
sub
notb
sahf
pop
cmpsb
inc
jp
mov
sbb
arpl
mov
hlt
icebp
cmpsl
aas
pop
les
scas
add
cs
inc
outsl
adcl
subb
push
jp
pop
sub
mov
in
jl
sub
push
ret
adc
sbb
pushf
xor
dec
push
dec
repz
jp
jg
push
pop
inc
sbb
icebp
mov
dec
mov
nop
mov
ret
sbb
lods
dec
fstp
jmp
mov
pop
sar
xor
dec
jae
sbb
rorb
push
test
sub
pop
stc
sbb
cs
std
pop
fs
movsl
mov
arpl
popf
sbb
scas
jno
subl
xchg
mov
lret
adc
jno
nop
das
add
sbbl
push
int
mov
xor
mov
in
sbb
lcall
aam
lret
lret
add
or
adc
mov
in
inc
sub
xchg
int
sbb
ret
push
sarb
or
cmp
push
push
and
cmp
xchg
lret
adc
loop
mov
pop
imul
daa
test
push
ret
pop
jo
andl
pop
xor
mov
sbbb
divb
xchg
mov
addr16
imull
imul
inc
fcoml
int
xor
xlat
vpaddb
call
cld
mov
ds
bound
cld
mov
mov
pop
outsl
pop
fmuls
gs
scas
call
xchg
xor
add
ss
jb
inc
push
add
sub
jbe
xor
andl
xchg
sbb
jbe
pushf
xor
cwtl
jmp
or
mov
cmp
sub
cltd
rcrl
arpl
adc
dec
imul
adc
in
pushf
or
lret
and
sbb
pushf
cli
adc
aas
mov
sbb
ljmp
jl
arpl
xchg
lods
ja
es
xchg
fdivl
or
xor
sbb
sti
test
orl
lahf
repz
push
lea
push
inc
mov
adcl
int3
sub
cmp
sbb
rorl
jl
or
push
xorl
insb
push
call
add
lcall
push
in
es
mov
aad
push
cmc
mov
push
adc
aaa
push
out
ja
shrl
add
movsl
lea
xlat
stc
cld
xchg
sub
inc
and
sbb
repz
lret
sub
mov
mov
shr
insb
mov
cwtl
xchg
loop
sub
mov
mov
aad
mov
test
hlt
popf
and
xchg
mov
jne
insb
fsubrs
or
push
lock
sti
nop
xchg
andl
jb
inc
pop
xchg
sahf
shr
iret
mov
xor
loopne
jmp
sub
icebp
mov
aas
xlat
sub
sbb
cwtl
mov
lods
arpl
inc
data16
mov
imul
push
mov
sahf
cld
in
lds
and
mov
push
dec
fcmovb
ljmp
sbb
sub
fidivrl
mov
cmc
mov
insb
jns
push
mov
mov
fistpl
mov
pop
push
loop
inc
xchg
js
std
test
rol
js
sbb
test
jl
sar
mov
fadds
mulb
pop
lds
xorb
outsl
sub
lret
in
icebp
mov
sbb
inc
cmpsb
sub
std
adc
and
add
test
cld
jno
ss
or
push
cmp
out
inc
popf
sub
pop
xchg
aaa
mov
mov
aas
or
xchg
sbb
mov
jae
loope
addr16
leave
mov
mov
adc
or
hlt
xchg
adc
stos
jge
ljmp
fcomp
jbe
inc
xor
lea
mov
mov
sahf
ljmp
mov
in
out
fstl
xchg
push
pop
cld
idivl
fldcw
mov
outsb
mov
gs
ret
push
or
lret
scas
adc
push
js
dec
das
or
jl
in
dec
repnz
imul
shlb
push
pusha
xor
push
shll
push
mov
data16
mov
test
mov
pushf
mov
fisubs
pmulhuw
xor
add
add
fnstenv
lret
jnp
xor
stos
jne
das
nop
push
add
add
jbe
cmpl
popa
mov
xor
shl
mov
xor
imul
jae
insl
mov
hlt
mov
push
adc
ja
and
jnp
add
rcll
test
jns
mov
add
test
lret
cld
mov
aas
in
adc
inc
pop
das
lds
in
lcall
sbb
mov
gs
sbb
inc
xor
repnz
inc
or
lcall
and
xlat
outsb
movsl
push
dec
jg
pop
xorl
fildll
pop
movsl
stos
inc
xchg
stc
mov
scas
mov
cmp
pop
sbb
pop
std
sbb
push
cmc
lds
ficompl
inc
inc
pop
stc
stos
test
hlt
adc
xor
dec
rcll
aad
mov
leave
pop
stos
lods
mov
and
jns
hlt
push
lods
jmp
lret
mov
inc
roll
dec
jmp
pushf
lret
out
movsl
mov
add
hlt
test
push
lock
arpl
xchg
xchg
mov
popa
jmp
jne
fs
movsl
fwait
adc
inc
mov
frstor
xchg
push
ret
jno
adc
mov
dec
cmp
scas
pop
jg
lea
mov
sub
aas
shll
pop
cltd
xor
lods
ret
cmc
mov
push
mov
inc
sub
fdivrs
mov
cmp
jns
or
cmc
sbb
xchg
sarb
jne
mov
add
push
dec
in
inc
test
push
pushf
cli
fisttps
faddl
mov
aas
rcl
cs
sub
test
adc
jbe
or
icebp
push
mov
inc
into
mov
push
xor
push
adc
inc
inc
std
and
jne
push
ss
mov
rolb
jge
jge
pop
add
scas
mov
adc
inc
pusha
adc
xchg
inc
push
push
in
repz
push
and
mov
flds
pop
jae
scas
outsb
xchg
mov
fwait
pop
popa
shll
push
cwtl
fidivs
or
movsb
daa
sbbb
aad
int3
pusha
sub
ret
xchg
popf
movsb
mov
jmp
ficoml
push
xor
xor
and
movsb
or
and
divb
push
pop
cmp
inc
inc
push
stc
mov
stos
push
mov
jne
fnsave
insl
test
mov
mov
stos
imul
or
shr
test
jle
int3
in
and
xchg
xchg
and
jmp
test
xor
test
lock
aad
pop
out
push
inc
fs
jne
icebp
nop
pop
sbb
mov
test
das
adc
int
cli
adc
add
sbb
cmp
sub
and
hlt
pop
xchg
movsb
rcr
mov
scas
pop
sub
push
dec
sahf
pop
addr16
je
jge
pop
outsb
sub
fimuls
leave
test
test
stos
push
test
ljmp
dec
add
loope
and
mov
and
or
add
push
cmp
mov
cmp
out
das
mov
mov
xchg
mov
push
pop
lock
sub
sub
push
pop
pop
sub
xchg
lods
loope
lods
jmp
mov
lahf
adc
fsubl
push
push
fdivrs
ljmp
or
shlb
loopne
fcompl
push
scas
movsb
rcll
mov
xor
cmp
xchg
pop
test
xrelease
in
nop
dec
dec
clc
jae
in
xchg
testl
dec
mov
iret
dec
popa
dec
ja
das
gs
lret
jns
movsl
stos
xorb
xchg
in
int3
pop
jg
xchg
sub
sbbb
jne
sbb
dec
andb
fnstsw
int3
dec
jl
imul
arpl
ret
ret
xor
data16
mov
std
cs
inc
sbb
xchg
sub
cmp
cmp
in
in
cmp
ljmp
adc
or
adc
mov
flds
mov
or
and
fisttpll
dec
cmp
adc
mov
in
ret
dec
cmp
mov
push
xchg
fucomi
out
jno
call
mov
scas
xlat
stos
and
lcall
or
aas
mov
mov
xor
clc
daa
inc
pop
sub
lcall
test
lock
out
lcall
xor
xchg
jmp
out
cmp
pop
pop
ljmp
iret
add
add
dec
and
mov
rolb
sti
push
lods
sub
icebp
xchg
enter
mull
push
rorb
sbb
push
xchg
mov
pop
sub
imul
ret
sub
dec
or
cmp
dec
fs
inc
add
je
or
push
jno
mull
lret
aaa
cmp
pop
push
jmp
test
movsb
fadd
stc
fbstp
or
add
fdivrp
adc
push
out
jo
jb
out
adcb
inc
cmpsb
popa
clc
xlat
in
insb
add
xchg
daa
lret
push
xchg
push
fimull
xchg
dec
mov
inc
sbb
hlt
push
insl
cmp
lret
cltd
movsl
cmp
dec
in
fwait
jns
ret
mov
faddl
icebp
enter
into
inc
mov
test
movsl
xor
push
out
cmp
jne
mov
cld
adc
popl
mov
lea
nop
pop
mov
sarb
out
lock
adc
fwait
lods
iret
inc
faddp
cmc
data16
push
pop
mov
cmpsb
jmp
ja
insb
mov
push
mov
fcoms
addb
mov
aad
pop
icebp
cmpsl
call
and
mov
fwait
add
in
mov
jne
lods
push
lods
push
cmp
fs
dec
push
sub
xchg
stos
ficompl
stos
shrb
in
jne
xchg
hlt
mov
scas
lahf
mov
and
rclb
jo
jo
outsl
push
jne
push
jmp
aaa
inc
bound
out
into
repnz
mov
pop
movsb
xchg
andb
adc
xchg
pop
orb
and
out
add
xor
es
xchg
pop
mov
out
push
lea
cltd
sbbl
mov
add
gs
dec
fistl
mov
insb
pop
adc
push
cmp
testb
dec
inc
adc
popf
xor
ret
pop
push
mov
scas
jmp
pop
aaa
iret
cmp
test
push
push
punpcklbw
pop
out
test
pop
or
repz
pcmpgtd
es
jo
and
test
xchg
cmpsb
mov
mov
shll
rolb
pop
mov
adc
enter
insb
test
dec
pushf
movsl
fsubs
mov
sub
fnstenv
mov
xchg
outsb
negl
mov
or
add
mov
and
or
cmpsl
loopne
push
out
cli
jecxz
cmp
mov
andb
mov
jno,pt
pop
icebp
mov
js
adc
jle
lahf
add
cmc
loope
mov
sahf
insb
popf
es
movsb
imul
mov
rorl
cmp
push
mov
jo
cs
lret
sti
mov
rep
fdiv
andb
lods
ret
lods
mov
push
inc
and
or
mov
sub
xchg
and
lcall
lock
std
mov
xlat
sub
push
cmpsb
mov
jmp
es
xor
mov
mov
push
sbb
insb
jle
push
shrb
mov
stos
mov
dec
mov
adc
add
mov
sbb
out
ffree
pop
js
ds
xor
pop
std
xchg
ds
add
pop
mov
sbb
fisttpl
sbb
fcompl
loope
add
stc
inc
dec
out
ds
push
std
shrl
aam
xlat
adc
or
decb
pop
das
hlt
sbbl
adc
mov
ljmp
mov
push
icebp
out
shl
jns
leave
inc
lret
cli
jmp
add
mov
pop
outsl
mov
xor
pop
pop
ds
pop
in
incb
adc
aad
add
push
jne
or
sbb
stos
add
jl
xor
mov
loopne
andb
sub
je
shll
cs
popf
pop
add
out
inc
arpl
mov
dec
aaa
push
pushf
fcoml
mov
in
mov
stc
test
lahf
leave
mov
movsl
xchg
xor
push
dec
pop
mov
jg
jp
stc
pop
jne
pusha
js
xchg
clc
adc
cmp
xlat
clc
lret
mov
mov
fnstsw
sbb
and
jmp
rcrl
es
pop
inc
bound
mov
test
add
nop
addl
mov
mov
pop
add
xor
and
jp
inc
sti
xchg
jae
add
lds
push
insl
dec
out
mov
ret
mov
gs
xchg
ljmp
out
xchg
aaa
adc
fistps
xor
jl
mov
fistps
add
ret
jae
pop
jmp
jl
das
ficompl
jp
pusha
icebp
dec
pop
push
clc
adc
cs
aad
sbb
lods
cmp
sub
fucomi
cltd
xor
sti
push
mov
pop
lret
lret
int
test
call
mov
add
pop
ja
xor
sbb
cli
mov
shlb
and
add
inc
dec
popa
xchg
test
insb
loope
sub
xor
mov
push
push
inc
fiadds
jecxz
pop
adc
mov
or
mov
decl
popf
pop
dec
stos
mov
andb
test
je
push
imul
dec
mov
addl
iret
cld
sahf
mov
bound
push
mov
or
xchg
js
sub
mov
sub
stc
or
push
cmp
js
dec
jo
fildll
adcb
mov
inc
jbe
pop
test
call
cmp
aas
push
adc
jo
jmp
inc
fnstsw
pop
adc
mov
ret
push
cwtl
mov
inc
jno
xchg
sti
jo
sarl
mov
mov
hlt
push
pop
xchg
cmp
stos
mov
lea
cmp
jno
subb
icebp
jg
jl
cltd
dec
push
fmul
insl
clc
cld
sbb
mov
cmc
or
jge
add
aam
and
lahf
std
popa
inc
gs
push
cmp
leave
mov
xchg
in
lret
xchg
mov
jno
into
push
cmp
jecxz
mov
and
push
in
arpl
jne
dec
sahf
scas
inc
mov
loop
clc
jnp
mov
and
inc
sti
mov
push
in
aad
mov
enter
fs
movsl
lahf
sub
clc
repnz
pop
mov
inc
clc
pusha
pop
pop
test
fdivl
adc
xor
lods
mov
bound
pop
pop
mov
mov
mov
lcall
sub
sub
mov
ret
outsb
andl
xor
jns
in
test
jl
shll
jle
fldt
dec
stc
jne
inc
in
pop
sbbl
lods
inc
int3
adc
mov
adc
std
rcrl
or
stc
sbb
mov
add
sarl
mulb
out
nop
mov
ret
out
enter
xor
dec
lret
dec
and
stos
push
aas
jecxz
movsb
push
sub
inc
shr
lods
subb
dec
ffree
popa
mov
popf
xchg
loopne
ret
ret
lods
jecxz
fistps
aas
mov
imul
icebp
jnp
shrl
fistl
orl
bound
jb
push
in
or
cld
jbe
cmp
lret
int
add
call
inc
push
xchg
and
adc
mov
xor
mov
mov
sbb
and
cs
sub
inc
push
shl
pop
push
xor
sub
movsl
cmp
xchg
jecxz
ds
sbb
lds
imulb
sbbb
repz
out
cli
imul
pop
mov
jb
mull
fwait
xor
pop
push
adc
mov
ja
inc
push
out
lods
jge
nop
push
stc
nop
xorb
xor
adc
jne
jle
mov
jle
js
lock
xchg
mov
add
adc
js
imul
dec
test
outsl
sbb
test
nop
sbb
leave
inc
mov
add
xchg
sub
scas
negl
xor
mov
pop
imul
addr16
sbb
loopne
mov
sarb
sub
test
stos
test
ss
imul
mov
nop
decl
jno
xchg
sub
pop
insl
xchg
mov
and
fldenv
inc
iret
ss
jae
jmp
jecxz
mov
bound
sbbb
dec
xchg
mov
je
fcmove
xor
std
jmp
dec
or
mull
push
jne
push
cs
cltd
insl
dec
out
pop
xor
daa
test
xlat
adc
sub
add
sub
and
iret
gs
add
cwtl
and
jp
test
cmp
xchg
jo
add
call
aad
int3
lret
or
dec
or
shll
aas
sub
out
dec
aam
std
xchg
out
daa
pushf
jo
sahf
xchg
add
out
pop
pushf
roll
jle
mov
mov
lret
cmp
lock
adc
xchg
mov
push
popf
cmp
stos
mov
movsl
inc
push
mov
into
cmc
xchg
mov
and
cmpb
fcomp
sahf
orl
inc
adc
and
leave
lds
or
jno
sahf
xor
or
cmpsl
mov
push
sti
rcrb
push
push
in
les
sub
loop
mov
adc
push
lahf
mov
xlat
movsb
sub
test
scas
sub
adc
and
push
jns
test
jns
push
out
mov
sahf
inc
fcoml
std
push
add
data16
xlat
pushf
aam
push
icebp
clc
mov
sub
jmp
mov
fs
mov
stc
cld
adc
fbld
xor
data16
outsl
pop
and
xchg
and
mov
mov
push
bound
xor
out
jmp
dec
lahf
icebp
dec
dec
arpl
stos
mov
popa
lcall
jp
fmulp
and
inc
push
lock
and
adcl
sub
mov
pop
push
cmp
movsl
jge
cs
in
pop
mov
inc
and
pop
jnp
test
mov
mov
enter
movsb
jle
lret
and
push
out
jle
call
jo
pop
cmc
add
sbb
sbb
pop
xor
lock
mov
add
push
std
test
fmul
dec
repnz
out
mov
data16
aad
daa
mov
dec
add
or
and
inc
push
inc
push
mov
sbbl
xchg
mov
xchg
adc
pop
xor
jbe
cmpsl
pop
mov
popa
dec
lods
inc
cmp
mov
cmp
shll
pop
xchg
test
cmc
pop
repz
fwait
mov
mov
inc
jg
jbe
cs
fidivrs
fwait
leave
shlb
loop
sub
sbb
in
ret
jl
xor
push
mov
or
or
and
pop
lock
daa
adc
jecxz
shlb
adc
notb
push
cltd
roll
mov
mov
sbb
nop
jmp
scas
lods
ljmp
pushf
xor
das
cmp
mov
enter
and
notl
mov
sahf
sti
notl
movsl
mov
bound
lahf
stos
dec
dec
push
out
xchg
rclb
cmp
fistl
mov
xchg
fnstsw
cmpsb
loopne
mov
sub
mov
jmpw
fisttps
jle
jl
leave
sti
cmp
cmpsb
ffreep
fimull
sbb
popa
mov
xlat
jge
xlat
repz
sahf
pop
in
test
ret
push
in
cmp
and
arpl
inc
add
fs
pop
loopne
and
or
push
in
inc
add
jmp
jmp
dec
xchg
xlat
xor
sub
out
jo
out
dec
jecxz
shl
mov
sub
aaa
shll
pop
imul
jl
js
es
jmp
or
mov
or
mov
sub
loope
push
adcb
jo
aam
dec
bound
pop
mov
inc
test
cwtl
xchg
scas
add
movsl
xor
jle
movsb
ds
jmp
add
iret
aam
jbe
lea
jnp
push
outsl
es
lods
cmp
xor
xchg
out
mov
aam
mov
movsl
jns
out
jp
cmp
fdiv
mov
inc
mov
pop
inc
lods
int
jmp
dec
lods
jmp
roll
or
dec
in
sahf
mov
sbb
shrl
outsl
jb
pusha
nop
jp
ret
adc
sub
xchg
fisubs
inc
push
rorl
jp
dec
xchg
dec
sbb
fidivl
cmp
imul
jns
and
fwait
cmp
xor
adc
std
xchg
lret
pop
cmp
aad
lret
pop
mov
cmp
addl
cmp
fs
fists
scas
mov
stos
cltd
or
pop
inc
jg
push
mov
loope
or
cmpsb
or
sub
aam
xchg
jae
dec
test
and
cmp
popa
mov
subl
mov
dec
xchg
adc
sbb
push
cld
enter
lahf
xor
jb
enter
add
sub
dec
mov
loop
inc
les
mov
daa
rclb
sbb
add
cmp
push
shrb
int
int
xchg
aas
movsb
add
push
out
jmp
jl
in
jns
daa
and
xchg
lods
mov
cmp
xor
sbb
aaa
iret
add
pop
xor
pop
xchg
sub
fdiv
iret
jle
mov
lock
jo
cmp
sbb
fwait
adc
pop
xchg
loope
sbb
stos
test
js
lret
inc
pop
popa
in
popf
mov
or
push
xor
fidivs
xchg
pop
bound
xor
in
xchg
ljmp
and
xor
pop
xchg
out
pushf
and
into
fiaddl
push
sub
mov
and
and
mov
xlat
outsl
jmp
into
imul
fdivl
push
sbb
loopne
loope
arpl
or
aam
mov
mov
enter
lods
outsb
pop
adc
xchg
sbb
or
hlt
push
adc
mov
jp
adc
orl
dec
dec
adc
mov
sti
sub
gs
adcl
adcl
xchg
mov
insl
and
pop
filds
arpl
leave
les
mov
or
subl
aam
insl
push
add
test
aad
enter
fildll
loope
xchg
std
or
xchg
sub
cld
lret
or
xchg
js
mov
fwait
inc
scas
mov
xor
sbb
into
jae
in
mov
sbb
loopne
mov
jl
push
cmpsl
adc
adc
std
movsb
rclb
xchg
mov
je
and
out
pop
out
fmull
jmp
imul
push
and
gs
jmp
xor
mov
ret
ret
loopne
loopne
adc
addr16
inc
nop
imull
std
xchg
test
mov
andl
push
cmpsl
test
stos
mov
repnz
sbb
repnz
or
call
mov
dec
in
push
mov
jg
pop
pop
push
js
sub
aaa
jns
mov
pop
mov
push
or
cmpsl
aad
test
xlat
lods
test
sahf
sarb
mov
or
mov
hlt
xor
jg
sti
dec
sub
lret
rclb
dec
sub
ds
xchg
data16
fimull
inc
stos
repnz
xchg
rcrb
fidivs
xor
cmp
push
test
fisubs
push
dec
shll
cmp
icebp
int
dec
dec
js
mov
notl
popa
sti
fsubrs
mov
cmp
test
lret
frstor
push
hlt
mov
and
xor
xchg
sub
lret
pop
jno
idivl
adc
jl
fcomip
pop
mov
mov
lea
loop
jb
fwait
cmp
xor
xchg
in
cwtl
fadds
mov
mov
negl
loopne
scas
mov
jae
data16
fcmove
int3
ret
add
loopne
pop
push
insb
rcll
xor
mov
pop
std
push
adc
iret
sub
or
rcrb
add
push
fstpl
inc
mov
sahf
xor
stos
leave
lret
movsb
fstpt
push
jl
lea
adcb
shr
aad
lcall
fwait
jnp
imul
int3
mov
ss
jns
sub
leave
dec
sub
iret
in
sub
inc
std
push
fwait
stos
mov
xor
xchg
adc
lret
cmp
imul
lock
jecxz
add
mov
cmp
pop
icebp
cmp
mov
mov
pop
fists
ljmp
dec
in
dec
test
sti
pop
stc
adc
and
ja
adc
inc
stc
fnsave
fst
push
js
das
movsb
adc
push
cmp
adc
or
xchg
cwtl
lahf
cmpsl
xchg
sub
mov
jle
bound
xchg
push
pop
jne
mov
dec
mov
testb
jnp
add
cmp
cmpsb
pop
fadds
adc
ljmp
mov
leave
cld
push
add
rol
in
adc
popf
aaa
xor
out
jecxz
dec
sbb
jns
inc
and
test
cmc
sub
jg
out
xchg
sub
inc
repz
push
cmp
mov
rclb
sbb
push
les
mov
fildl
cmp
pop
pop
sbb
aam
jno
inc
push
push
pop
add
inc
xlat
or
jae
push
mov
aas
cmpsl
ds
sbb
mov
xchg
sub
push
add
mov
jge
out
dec
or
pop
mov
mull
adc
pop
icebp
and
movsb
inc
push
cli
icebp
mov
jae
movsb
popa
xchg
cld
mov
out
mov
mov
in
push
jae
cltd
add
inc
mov
pop
sbbb
mov
cmp
sbb
lahf
push
xchg
xchg
sti
inc
out
adc
push
cmp
or
push
idivb
ret
mov
jmp
jb
jno
lods
out
push
out
sarb
fisubs
cs
mov
int
mov
sbb
add
icebp
adc
aad
push
cmc
mov
xchg
xchg
mov
sbb
les
and
outsl
pop
add
test
imul
fcoms
or
ss
or
sub
adc
mov
ret
mov
xor
loopne
xchg
lods
xor
mov
lock
mov
mov
inc
sbb
rorl
inc
int3
pop
sub
jnp
fwait
pop
in
add
out
jno
xor
out
pop
imull
insl
mov
jle
inc
mov
ja
or
jae
mulb
dec
icebp
mov
jb
mov
sbbb
jge
xlat
daa
test
loope
stc
jp
lods
scas
lods
ds
insl
sub
test
jp
sti
into
aas
fidivrl
lea
mov
or
adc
xchg
lea
sub
negb
dec
or
and
iret
rorl
cmpsb
cmp
testl
out
sub
xor
sub
ds
fs
adc
pushf
ds
mov
mov
les
loop
leave
add
pop
jecxz
dec
fwait
lods
sbb
cmc
cli
mov
enter
divl
pushf
test
mov
movsl
ss
inc
lahf
or
sub
adc
rcrb
cmp
dec
imul
push
push
shl
cwtl
pushf
adc
shrb
push
ret
pop
loope
add
push
lods
test
lcall
sbb
es
push
push
mov
pop
scas
test
int
jns
mov
mov
scas
leave
clc
movsl
xor
xchg
aas
push
movsl
mov
mov
ret
movsl
sbb
or
std
mov
out
aaa
or
push
dec
dec
out
push
int3
sti
pop
rclb
ds
pop
add
je
mov
xor
fidivrl
mov
xor
arpl
inc
fwait
test
sub
int3
cld
shrb
call
adc
pushf
mov
sbb
inc
out
je
pop
xor
push
cmp
es
mov
into
enter
in
fistpll
dec
stc
sarb
push
adc
imul
push
pop
pop
jge
xor
jns
pop
scas
sahf
inc
xlat
push
cmp
mul
adc
mov
orl
mov
fs
push
pop
mov
lock
mov
add
mov
fcomip
dec
sub
addr16
sub
shll
dec
mov
pop
mov
std
mov
clc
sahf
dec
popa
mov
outsl
and
das
cmp
fcomps
das
daa
pop
insl
pop
push
ret
jge
lock
xchg
mov
mov
cmp
sbb
enter
cmp
out
push
mov
mov
aam
mov
les
adc
add
sbb
push
dec
add
in
or
mov
push
sbb
xchg
iret
sub
in
lds
roll
out
jle
mov
pusha
mov
inc
test
leave
pop
sbb
sahf
repnz
dec
roll
mov
repnz
adc
lods
outsl
cmpsb
xchg
movsl
mov
sbb
xor
ja
mov
xlat
push
sub
sbb
arpl
shll
sub
subb
mov
or
xchg
shlb
or
gs
insl
add
xchg
mov
nop
daa
lds
fwait
ss
lahf
pop
xor
cmp
pop
fsubs
sbb
mov
jp
fwait
cmp
dec
les
inc
imulb
hlt
pushf
pop
fnsave
add
mov
into
popa
cmpsb
push
mov
xlat
hlt
scas
inc
es
sub
shlb
or
lods
jb
fisubs
xchg
mov
mov
das
mov
push
dec
sbb
add
daa
push
push
xor
out
std
stc
test
lahf
stc
inc
incb
or
cmp
pushf
push
inc
jge
push
cld
xor
mov
jnp
sti
ret
pop
and
jne
cld
movsl
dec
jecxz
clc
mov
mov
pushf
pop
enter
mov
cmpsb
cmp
int
les
cli
clc
or
mov
inc
cmpsl
cmp
push
loop
adc
xchg
test
adc
rclb
sub
xchg
sub
lock
stos
add
xchg
pop
mov
fcmovnbe
testb
shlb
fnstenv
sbb
lods
int
push
loopne
xchg
cmp
and
shrl
inc
lcall
and
mov
popf
xchg
icebp
sub
push
push
outsl
les
ds
lock
xlat
pop
mov
idiv
sub
sub
popa
pop
pushf
loop
adc
adc
xor
in
sub
sub
fists
pop
ret
or
pop
adc
shll
or
fwait
scas
mov
and
outsl
test
shrl
jnp
lds
push
jecxz
inc
scas
cmp
push
icebp
adc
push
iret
jb
xor
ljmp
stos
inc
push
pop
lods
icebp
das
test
out
fcmove
fistpl
mov
arpl
out
cmp
fucomp
inc
insl
add
aad
mov
dec
lods
mov
scas
mov
jp
fs
rol
lret
mov
stc
mov
xchg
mov
sahf
xchg
mov
push
dec
or
mov
push
lcall
pushf
jo
jp
xor
rcr
push
xchg
fnstcw
cld
push
cmpsb
cmp
loope
adc
sub
nop
xchg
div
test
out
xchg
xchg
out
test
or
lret
pushf
xchg
pop
ljmp
into
call
rcr
rorb
sbb
fcoml
adc
mov
lods
push
add
jp
xchg
dec
into
sbb
jne
out
iret
sbb
sub
out
repnz
xor
lea
dec
dec
loop
bound
test
jle
mov
xlat
cs
push
xchg
lods
fidivl
push
dec
adc
incb
ja
adc
push
sub
unpcklps
aam
add
xor
pop
mov
cmc
cmp
jae
mov
mov
push
jo
or
dec
inc
mov
push
push
repnz
jae
test
pusha
in
xchg
xchg
repnz
jo
daa
leave
rolb
int3
out
jbe
pop
outsb
ret
call
fmuls
dec
xchg
out
mov
xchg
scas
mov
int
fldenv
lahf
outsl
jle
mov
mov
mov
dec
pop
in
inc
loop
sbb
pop
nop
mov
insl
shlb
incb
cmp
pop
cmpsl
test
mov
sbbl
les
adc
and
js
push
in
bound
lahf
xor
jle
pop
xor
mov
daa
push
mov
cmp
mov
nop
rcr
pop
stc
nop
dec
loope
test
movsl
or
mov
ficompl
inc
sbb
inc
int3
xchg
js
cwtl
neg
adc
pop
cltd
and
imul
sti
pop
imul
fwait
xor
sbb
dec
xchg
fdivrs
rorl
mov
push
cmc
movsl
pop
repz
and
push
call
out
ret
test
pop
cs
xchg
icebp
jnp
imul
movsb
cmpsl
and
jo
fs
mov
push
ljmp
mov
pusha
inc
sbb
xor
cmp
xchg
dec
jge
cmpb
or
orl
mov
daa
fidivrs
mov
movsb
or
test
outsb
repz
insb
hlt
xchg
xor
add
sub
sub
add
lahf
ss
xchg
in
push
pop
mov
inc
cmp
loop
repz
ret
insb
and
rep
jae
xchg
adc
push
in
lea
data16
pop
or
sbb
ucomiss
dec
insb
add
sbb
out
xorl
cmp
xchg
and
dec
loopne
fisubs
ret
dec
out
int
ljmp
test
add
hlt
xchg
ja
js
dec
lret
insb
cmp
or
inc
mov
fsub
bound
mov
push
inc
push
mov
aad
aaa
fidivrs
and
into
iret
call
lea
out
push
cmp
stos
ret
fcoms
ja
sub
sub
jns
mulb
sbbl
pop
in
mov
fstpl
mov
fwait
or
adc
jno
lods
push
popl
jl
mov
push
pop
insl
addl
jnp
pop
stos
mov
ds
ja
lds
pop
js
or
push
int
sub
fnsave
test
shlb
dec
sub
mov
add
mov
push
xor
or
pop
nop
cld
sub
insl
inc
inc
sub
jbe
add
sbb
adc
aam
or
push
std
jnp
das
ds
outsl
pusha
xor
lret
gs
pop
and
aaa
xchg
cmpsb
pop
imul
pop
pop
into
mov
mov
push
push
repz
push
stos
clc
gs
inc
cltd
test
lret
jmp
mov
mov
mov
xchg
push
jge
and
cmp
cmc
mov
cs
pop
cmp
add
test
insb
jmp
outsb
sbb
add
pop
inc
ret
cmp
or
loope
movsb
roll
dec
mov
js
and
xor
pop
roll
fistps
das
cmp
fs
jle
adc
dec
es
jle
dec
xlat
int
mov
aad
cmpsl
push
cmp
loope
dec
hlt
jo
lret
sub
popf
jo
iret
pop
lcall
hlt
ljmp
popa
enter
pop
add
shlb
pop
cmpsl
pop
mov
pop
lahf
out
je
push
cmpsb
ret
lcall
outsl
mov
sub
jnp
or
dec
cwtl
cvttps2pi
mov
lret
rclb
xorl
bound
mov
lea
in
je
repnz
adc
or
jae
xchg
or
notb
fsubrp
incl
mov
fs
xchg
push
and
pop
ds
insl
push
repnz
sbb
in
jne
xor
push
xchg
adc
adc
lods
daa
ljmp
sub
push
push
push
ficoms
icebp
cmpb
adc
lret
jne
jle
popa
jo
iret
lahf
xor
lcall
dec
jae
push
xchg
and
jns
ss
pop
icebp
jb
add
mov
setge
sub
pop
mov
test
push
and
adc
fmul
out
mov
push
pop
out
int3
arpl
mov
outsl
xchg
xor
testl
add
cmpsb
or
jmp
push
adc
ljmp
and
pop
cmp
pop
out
mov
insb
cmc
cmp
add
sub
xlat
in
ret
lds
xchg
mov
shl
fisttpll
stos
push
ljmp
jno
rcrb
or
cli
pusha
xchg
push
jecxz
add
ljmp
xchg
cmpsl
dec
aad
stos
popf
cli
mov
movsb
mov
mov
jns
mov
mov
lret
jmp
fs
loopne
xor
lret
mov
or
dec
aaa
addr16
sahf
xor
inc
test
jno
sbb
or
lds
stos
add
or
mov
dec
loop
fistpll
xchg
xchg
jg
mov
and
nop
cmpb
and
fisttpl
adc
movsb
pop
arpl
shll
add
push
jmp
std
sbb
lret
dec
aaa
xchg
xchg
sbb
aad
sti
mov
mov
dec
aaa
call
fsub
call
gs
mov
add
loop
leave
xchg
pop
mov
or
pop
and
mov
xor
xchg
xor
xor
push
mov
mov
imul
push
icebp
mov
fsub
jnp
sahf
in
iret
ja
ret
xor
es
jl
xor
mov
stos
and
fs
xchg
mov
es
into
sbb
scas
imul
jb
mov
call
ds
pop
ss
popa
and
jns
cmp
mov
pushf
or
lea
test
jnp
rcr
pusha
mov
dec
jno
repnz
add
dec
cltd
outsl
mov
adc
and
mov
push
insb
xor
jge
push
idiv
sahf
inc
in
push
popf
add
lods
leave
xchg
push
fistpl
sub
and
int
sbb
popa
ljmp
cs
pop
or
mov
loop
clc
movsb
les
add
mov
movsl
out
daa
enter
mov
test
sub
fcomp
lcall
xchg
pop
in
call
iret
out
pcmpeqd
cmp
and
movsbl
cmpl
sub
inc
mov
cmp
in
inc
sbb
xor
enter
cli
adc
pop
jo
mov
jp
nop
jno
add
int3
daa
lcall
ljmp
lock
sti
xchg
mov
inc
inc
adc
aaa
lods
arpl
scas
adc
mov
ss
pusha
daa
in
add
rorl
add
pop
mov
dec
jle
cmp
push
insl
movsb
dec
pusha
idivl
pop
insb
or
sti
xchg
sub
imul
pushw
mov
insb
ss
sbb
pop
mov
lods
clc
out
add
mov
jmp
add
jno
insl
xchg
fwait
push
xchg
push
and
hlt
pop
jne
mov
pop
repnz
addl
add
lods
add
mov
loopne
mov
pop
insb
movb
jecxz
xor
adc
jbe
xor
mov
iret
ret
push
popf
push
cltd
cmovp
and
loop
jecxz
add
push
mov
pop
inc
cmpb
int3
jno
jo
shll
clc
fistl
aaa
push
fstpt
xchg
add
les
daa
mov
cltd
cmp
add
mov
mov
jp
jmp
cmp
mov
push
dec
bound
arpl
cs
mov
imul
push
insb
mov
jl
pop
data16
jg
jae
push
xchg
test
sub
ja
add
std
pop
adc
jle
xor
dec
dec
fsubrl
push
cli
inc
ficoml
out
sbb
xchg
int
xchg
inc
stc
vshufps
xchg
cmpb
in
outsl
mov
mov
sub
ds
dec
in
sub
push
rol
sub
es
int3
pop
pop
mov
in
fsubrl
subb
fcoml
bound
repz
fidivrs
loopne
insl
es
icebp
rclb
sbb
jno
clc
mov
dec
clc
dec
stc
adc
or
jecxz
adc
movsl
icebp
inc
or
imul
fs
cs
test
ljmp
jmp
inc
adc
inc
addr16
loop
ljmp
push
mov
nop
daa
and
add
or
gs
das
inc
nop
jmp
or
cmc
mov
fbld
pop
test
sbb
jne
add
mov
pop
rcrl
xor
orb
cltd
dec
xchg
fstl
sbb
fldcw
sub
movsl
pop
loop
adc
adc
add
leave
inc
and
int3
and
mov
mov
movsb
fiadds
pop
adc
cld
or
jmp
add
or
fsts
or
push
inc
in
nop
xor
push
add
es
fsubs
xchg
sbb
mov
jp
aam
fistl
nop
mov
in
or
cmp
or
pop
mov
mov
and
scas
mov
adc
jb
ja
into
fwait
mov
sub
testb
daa
sahf
jne
push
pop
popf
lods
lea
mov
icebp
xchg
jg
jp
mul
shlb
mulb
nop
sbb
in
movsb
mov
xor
jns
outsb
push
movsb
mov
in
pop
pop
out
or
aas
sbb
aas
cmp
lret
push
ret
out
and
divl
push
xor
shrl
mov
adc
push
inc
hlt
xor
mov
cwtl
fwait
sbb
outsl
gs
lds
or
cmp
pop
push
es
dec
add
push
andl
icebp
fisubrl
and
pop
sti
outsb
xchg
sub
stos
pop
pop
add
aad
pushf
daa
out
not
aam
inc
xor
and
mov
mov
add
xchg
cwtl
pop
mov
addr16
jae
outsl
jg
int
fldcw
movsl
mov
lds
ret
scas
cmpsb
mov
repnz
sbb
pop
xchg
mov
insb
inc
test
inc
or
fstpl
andb
call
xchg
fsts
es
int
mov
stc
lods
dec
leave
inc
js
cli
xor
test
pop
incb
adc
test
test
mov
movsl
loopne
cmp
adc
pusha
and
xor
mov
outsb
adc
push
add
mov
cltd
imul
leave
or
lret
stos
mov
dec
mov
pusha
loop
adc
dec
daa
and
insb
loope
out
es
fisubl
loopne
daa
popf
dec
ljmp
dec
js
xchg
not
pop
jmp
sbb
and
sbb
xchg
icebp
sub
push
inc
inc
xchg
push
js
popl
int3
cmpsb
mov
addr16
lods
cmp
lcall
test
fwait
mov
je
das
andl
popa
inc
mov
xlat
mov
sahf
cvtps2pd
push
xorl
fmull
adc
or
mov
ljmp
lret
jb
inc
or
sub
mov
jge
rorb
loope
cmpsb
repz
dec
push
in
pop
xchg
push
in
dec
arpl
jl
jae
sub
sub
adc
and
pop
daa
popf
shrb
nop
push
mov
in
imul
shr
bound
aam
shll
mov
adc
or
add
xchg
mov
xor
cld
insb
sbb
sahf
sbb
add
xchg
leave
fbld
cs
ret
out
lds
add
stos
leave
or
sbb
jbe
cmp
fwait
sub
mov
ret
jnp
mov
ja
gs
shll
inc
jmp
bound
into
ljmp
mov
dec
mov
jg
xor
shll
xchg
dec
dec
test
mov
out
cltd
pushf
lcall
jae
pop
aas
mov
xchg
mov
jne
mov
icebp
push
pop
leave
inc
gs
mov
mov
into
add
mov
and
test
repnz
mov
lock
xor
jmp
xchg
mov
daa
cmpsb
mov
inc
add
js
das
jp
aad
or
cmp
mov
bound
pop
push
mov
popa
pop
scas
inc
clc
pushf
scas
sbb
test
test
out
jo
sub
aas
sub
icebp
pop
test
cmp
fnstcw
dec
fldcw
insl
mov
int3
mov
clc
pop
pushf
jmp
xchg
in
cmp
scas
jno
mov
mov
cltd
or
sbb
mov
movsb
pop
pop
xor
js
out
sti
stos
test
lea
sbb
xchg
or
mov
aad
imul
mov
ret
xchg
fdivl
je
lds
mov
fptan
inc
xor
insb
pop
lock
xchg
andb
cld
mov
ror
mov
insl
loope
or
adc
imul
jnp
lret
in
cmpsl
lahf
callw
sarb
pop
jl
ja
mov
inc
mov
xor
in
inc
push
mov
mov
sbb
mov
pop
std
daa
cmpb
jo
outsb
sub
out
test
mov
or
jae
rolb
or
mov
dec
lcall
inc
adc
in
mov
or
je
jbe
shl
movsl
inc
inc
out
dec
push
jb
mov
mov
rcl
sbb
jp
lock
ja
fisubrl
leave
popa
clc
cli
sbb
sbb
cltd
mov
sti
fwait
dec
in
mov
mov
sarl
rolb
dec
adc
roll
jge
popa
xchg
pop
testb
roll
sbb
lret
loopne
shr
pop
mov
xchg
adc
mov
cwtl
das
sbb
imul
mov
loop
dec
xchg
fldcw
ljmp
xor
push
lret
mov
leave
push
jnp
xchg
jmp
cltd
xor
jecxz
mov
cmp
inc
stos
adc
adc
xchg
stos
adc
and
jnp
loope
test
fiadds
xchg
pop
cmp
movl
icebp
out
jnp
jecxz
pushl
cmpsl
shll
inc
adc
or
sub
sub
cmp
dec
loopne
lea
lea
inc
rcl
lcall
test
dec
jne
js
and
inc
xor
fidivl
les
xorl
or
cmpsb
loope
or
mov
xlat
push
sub
mov
cmc
mov
flds
scas
mov
push
je
shll
xchg
dec
pushf
push
jl
mov
xor
std
rcll
lock
sbb
xchg
mov
in
mov
int
add
lcall
test
and
mov
fdivrs
in
fwait
adc
mov
inc
fiaddl
mov
orb
in
sub
or
mov
inc
punpcklbw
mov
jp
dec
stc
mov
inc
imul
fidivs
jmp
aas
inc
lods
idivl
pop
sub
sub
pop
divl
xchg
leave
loop
adc
and
adc
inc
lretw
lcall
es
ret
dec
icebp
jae
std
leave
xchg
js
pcmpgtd
js
xor
rolb
pushf
mov
aam
mov
fdivs
push
lock
inc
pushl
jne
ret
ljmp
mov
int
dec
cmpb
pop
popa
call
xchg
repnz
pop
lret
jno
ja
adc
lret
push
xor
inc
mov
or
mov
les
in
xor
repnz
imul
out
jns
push
adc
jg
in
mov
insb
aaa
pop
test
ret
andb
scas
insb
add
std
sbb
and
pop
and
lods
fst
scas
bound
mov
sub
adc
mov
xor
xor
ds
add
sarl
dec
push
jmp
in
int3
and
xchg
fsubrl
arpl
rcll
aam
jno
loope
jae
dec
sub
imul
out
dec
in
in
rorl
xchg
daa
pop
in
mov
mov
lret
cmp
adc
nop
and
pop
or
or
mov
sahf
add
cmpsb
add
pop
jb
loopne
das
pop
push
inc
and
mov
js
gs
lods
imul
movsl
lds
cmpsb
pop
sahf
mov
add
xor
mov
xchg
repz
cmp
paddw
dec
movsb
mov
dec
mov
cmp
mov
dec
and
xchg
lcall
push
ds
add
sbb
ss
or
mov
cmpsb
loopne
mov
outsb
jne
ljmp
push
or
fmull
dec
in
inc
popa
push
sub
cmc
mov
loopne
pop
loopne
xchg
or
sbb
adc
ss
scas
repnz
adc
and
jo
adc
iret
or
mov
mov
lcall
adc
jecxz
and
scas
inc
inc
sbb
inc
int
jae
addb
dec
rcl
ja
mov
dec
ds
dec
dec
jmp
in
and
or
ret
mov
loop
push
movsl
mov
dec
jp
add
cwtl
das
bswap
out
daa
sti
xor
and
aam
mov
stc
dec
sub
adc
sbb
inc
sbb
test
into
mov
add
inc
in
je
pop
out
sub
pop
sub
pop
repnz
cld
inc
jg
xchg
jns
ja
fidivl
xlat
dec
push
push
add
mov
lcall
mov
pop
jl
pop
jae
xchg
mov
mov
aam
in
sahf
and
test
mov
dec
leave
test
out
adc
and
mov
in
xchg
cmpsb
insb
sbbl
lea
movsb
or
lret
mov
popf
and
dec
loope
in
in
mov
imul
in
adc
pushf
add
xchg
cmp
sbb
sbb
inc
sub
add
mov
std
mov
test
ljmp
inc
jbe
pop
out
pop
out
pop
out
pop
add
in
repnz
aas
stos
push
cmpb
inc
dec
pop
jae
mov
stos
repnz
push
adcl
mov
push
cs
addr16
mov
jg
push
out
notl
mov
xchg
iret
ljmp
cmp
orl
xor
mov
dec
xlat
rcrb
popf
cld
stos
mov
stos
push
movsl
out
mov
sub
rcll
inc
and
push
scas
xchg
jge
leave
mov
push
fcoms
jae
fsubs
gs
call
jb
mov
aaa
outsl
push
stc
sub
test
add
fbstp
movsl
adc
into
push
push
mov
je
inc
loope
aam
sub
dec
call
testb
nop
ljmp
lods
mov
sar
xchg
fdivp
ret
push
inc
icebp
movsl
lock
adcl
cmp
dec
jns
adc
lds
dec
loop
mov
std
jge
imul
fsubr
xchg
dec
dec
test
out
lret
mov
enter
mov
mov
test
into
and
xchg
jl
cli
insl
mov
call
sub
xor
push
inc
es
cmp
clc
outsl
lret
ret
leave
add
mov
sbb
lds
xchg
sbb
popf
sub
aam
leave
push
jbe
sbb
dec
loop
push
sub
aaa
cltd
arpl
and
sti
xchg
mul
ret
sbb
mov
clc
dec
mov
mov
mov
sub
into
movsl
xrelease
mov
out
dec
dec
mov
rcrb
or
movsl
mov
mov
adc
mov
lret
dec
mov
dec
mov
cwtl
insb
push
xchg
sub
into
mov
sub
fwait
mov
xchg
stos
cmpsb
xchg
or
or
pop
mov
jbe
xor
mov
jp
test
fnstsw
dec
jecxz
ret
inc
jmp
mov
and
into
mov
xor
jmp
mov
bound
sub
lret
jp
lret
xchg
inc
popa
enter
mov
sub
aas
hlt
and
adc
sti
imulb
loop
sbb
gs
addr16
int3
imul
push
fwait
nop
sbb
pop
xor
push
mov
sbb
idivl
mov
mov
hlt
daa
xchg
sbb
mov
aaa
cmp
xor
add
imul
cmp
shl
dec
mov
pop
xchg
sub
mov
imul
add
push
out
and
cmp
ds
or
dec
pop
sbb
sti
fwait
add
mov
scas
cli
movsl
cmp
push
jl
scas
inc
and
repnz
testl
test
sbb
stc
nop
sbb
pop
data16
jecxz
adcb
lcall
jecxz
hlt
cmp
dec
cmp
mov
int3
add
ss
xchg
clc
fisttpl
dec
shlb
lcall
xchg
testl
call
testb
cmp
dec
data16
outsl
lds
imul
push
ret
fcmovne
and
sub
lret
je
mov
in
sahf
push
jg
in
cmp
pushf
scas
mov
dec
std
pop
push
mov
push
aas
pop
push
mov
fwait
cmpsl
and
mov
inc
mul
cmp
movsl
cmp
push
das
pop
stos
adc
lds
test
jecxz
aad
pop
call
and
ja
mov
jno
jo
lea
adc
jp
cmc
out
test
stos
out
lock
inc
sub
sbb
mov
lret
mov
add
movsl
imul
dec
fucom
scas
mov
push
inc
in
pop
and
pop
repz
js
adc
mov
std
pop
adc
les
pushf
xor
inc
push
sbb
les
jns
adc
push
sub
outsl
inc
xor
rol
push
mov
dec
and
cli
stc
popf
push
jbe
dec
add
stc
push
cli
aam
cli
mov
xchg
hlt
jno
out
jp
dec
or
lds
lds
mov
fcomps
xor
pop
mov
push
pushf
insl
sarl
dec
cs
sbb
mov
push
orb
xchg
scas
dec
adc
sub
jae
jmp
xchg
mov
push
fldenv
jle
jbe
mov
pop
insb
pop
fnstcw
in
pop
das
aaa
jmp
not
js
scas
inc
and
pop
icebp
iret
int
mov
push
jmp
mov
or
inc
sti
sub
pusha
xchg
dec
stc
jle
out
jmp
or
mov
and
in
mov
jne
or
mov
jecxz
movsb
adc
or
inc
or
jle
loopne
mov
cs
jnp
repnz
mov
popa
or
xchg
push
out
loopne
or
lock
outsb
mov
fidivrs
add
jle
pop
dec
mov
mov
xchg
and
mov
xor
vpunpckhbw
mov
dec
out
dec
sub
clc
shl
xchg
mov
ja
inc
sub
leave
sub
cmp
sbb
ljmp
xchg
cmpsb
add
insl
dec
jg
ja
and
push
lods
push
cltd
adc
mov
fsubrp
sbb
sbb
repnz
push
scas
push
cld
jbe
ds
xor
xchg
mov
push
adc
test
sbb
cmp
clc
out
pop
and
mov
adc
sbb
sbb
pop
and
push
xorb
adcl
push
out
xor
scas
mov
ret
xor
adc
test
cmpsl
ds
insl
dec
pop
sbb
dec
xchg
cmp
dec
mov
pop
mov
cmp
mov
sub
pop
push
cli
sub
add
sbb
repz
das
iret
ss
dec
fucomi
test
rclb
mov
add
mov
mov
inc
xchg
dec
fdivl
loop
ds
add
scas
ret
sahf
mov
shl
ss
stos
test
pop
and
sub
inc
cmp
jno
cmp
stos
and
cmp
mov
mov
xor
lea
out
jecxz
fwait
clc
mov
je
mov
sti
test
stos
inc
ss
sahf
push
fmulp
xchg
test
push
fwait
mov
pop
call
sub
add
rcrl
inc
arpl
push
das
pop
lea
pop
pop
xchg
jl
adc
outsb
mov
or
adc
adcb
fmul
lret
pop
rol
push
dec
test
repnz
mov
inc
xchg
rcl
jbe
stc
orb
ja
out
push
mov
cmc
or
push
or
cmp
mov
rcl
mov
sti
jmp
pop
jle
or
sti
ret
loope,pt
sbb
dec
sti
call
dec
inc
fidivrs
pop
add
lds
fs
xchg
lock
cmp
mov
fwait
mov
and
addr16
lea
mov
call
lea
out
sbb
jnp
ret
sub
cwtl
js
adc
jmp
ja
outsl
outsb
xor
div
movsb
cmp
and
fwait
xchg
sub
jl
push
scas
in
sbb
ds
xlat
lods
into
sbb
repnz
jmp
in
add
pop
movq
inc
pop
insb
mov
loope
pop
stos
lcall
out
jno
xor
inc
int3
pop
xchg
stos
sub
dec
into
jecxz
dec
cltd
xor
les
sarl
mov
cmp
and
and
movl
mov
das
pop
lcall
subl
ss
jb
cmpsb
jmp
int3
mov
icebp
imul
push
add
ret
pop
rcl
push
aad
les
pop
mov
in
pop
aad
push
ret
negl
add
sbb
mov
les
inc
divl
std
bound
kandw
add
arpl
pop
xchg
xchg
xchg
imul
les
mov
jne
insl
out
frstor
out
scas
inc
xor
int
sahf
dec
dec
lahf
or
pop
jnp
and
repnz
dec
scas
pop
adc
loope
mov
lods
stos
jnp
mov
aam
mov
cltd
das
and
push
lret
mov
xchg
stos
mov
cmc
and
add
hlt
mov
jg
mov
stc
in
iret
daa
mov
scas
sbb
rol
lcall
sbb
imul
inc
ljmp
sar
dec
pop
shll
push
icebp
outsb
sbb
sti
or
nop
sbb
repnz
sbb
aas
cmp
xchg
gs
std
xchg
addb
testb
addl
pop
subb
jg
and
outsl
movd
cmpl
dec
pop
leave
popa
loop
sbb
nop
ss
push
dec
jecxz
dec
pop
xor
repnz
negl
in
jl
aam
stos
pop
rcrb
repnz
arpl
mov
sub
repnz
cmp
outsl
mov
pop
imul
dec
push
mov
xorl
mov
loopne
stos
and
inc
shlb
aaa
lcall
lea
mov
shl
cwtl
das
sbb
icebp
xchg
sub
or
cmpsl
negl
lret
aam
iret
nop
in
setnp
enter
sub
stos
lret
sbb
ret
push
popf
out
pop
push
and
xor
inc
mov
push
int3
stos
dec
jns
xor
fs
fwait
icebp
lret
push
rep
icebp
add
idiv
jmp
pop
rcrl
jcxz
hlt
repz
outsb
push
cltd
dec
stos
cmp
sub
mov
out
pop
popf
cmp
jmp
adc
scas
push
movsb
es
or
inc
pop
popf
mov
sub
inc
push
leave
push
push
rcl
fimull
xchg
mov
xor
sub
inc
imul
and
or
out
pop
and
cmc
adc
cmp
xchg
js
push
stos
mov
xchg
imul
jbe
push
inc
fsubrs
mov
mov
sbb
add
and
shlb
sub
cltd
cmp
mov
ss
jle
push
adc
subb
pop
fmuls
mov
lods
rcrl
mov
cmp
xor
jl
enter
cmp
mov
call
and
outsl
jmp
pop
and
or
into
rorb
xorl
mov
popf
es
mov
out
xor
je
js
sbb
test
jge
scas
inc
sbb
push
cmp
or
inc
std
insb
imul
into
mov
es
cmp
lcall
mov
push
mov
enter
jl
mov
movsb
aad
inc
xchg
lds
lret
fnstenv
and
inc
push
lret
push
push
test
mov
test
fadds
ret
jl
in
or
xor
repz
jge
jno
sbb
movsb
add
scas
inc
jecxz
fdivl
push
push
movb
jns
imul
xchg
pop
push
xchg
jl
test
lcall
cwtl
je
pop
test
jge
mov
and
add
outsb
add
cmp
rcll
inc
xchg
vpcomub
icebp
mov
aam
or
dec
ficomps
inc
jbe
ret
xor
xchg
stos
lds
ret
xchg
push
xchg
insl
fnsave
mov
jnp
jp
xor
sbb
icebp
outsl
mov
repnz
sbb
cld
jae
rorl
scas
shlb
popa
andl
or
cs
xchg
or
inc
cmp
mov
mov
jae
lcall
sub
stc
push
mov
out
fsubrl
pop
mov
cltd
fcoml
dec
stc
xchg
mov
popa
push
push
aad
or
dec
push
mov
pop
or
cmpsb
ret
add
rcll
or
sub
loop
neg
push
push
inc
jge
jge
add
mov
xchg
xchg
ret
ds
in
mov
outsb
pop
lahf
adc
inc
cld
xchg
cltd
jae
adc
test
in
leave
xlat
push
push
add
or
cmpsl
orb
or
cwtl
sub
xlat
sub
pop
hlt
dec
mov
jmp
mov
out
rcrl
mov
sub
scas
push
inc
scas
pop
leave
jle
sti
jge
int
cltd
lods
xchg
loopne
adc
sbb
addr16
cmp
dec
jne
xor
push
ficoml
sbb
mov
ret
adc
mov
ljmp
js
pop
cmp
jb
lahf
adc
inc
dec
dec
pop
shll
and
fcomps
add
sub
int3
mov
leave
stos
andb
bound
jp
repz
test
xor
xchg
fdiv
jnp
int3
addr16
mov
arpl
adcl
pusha
test
cmp
fnsave
mov
mov
adc
fwait
insl
pop
adc
sbb
nop
test
push
cs
sahf
cmc
pop
mov
or
outsl
enter
mov
aad
bound
pop
pop
pop
pop
cmp
add
jns
clc
rorl
les
dec
xchg
adc
jo
stos
clc
push
push
sub
mov
in
in
pop
cwtl
shll
cmp
enter
repz
popf
mov
leave
int
push
sbb
adc
sahf
stc
sub
repnz
xor
imull
les
out
adc
sahf
jg
dec
scas
mov
and
out
mov
pop
in
fists
jbe
out
cmp
insl
push
shlb
adc
xchg
in
pusha
shlb
push
out
xchg
shrl
mov
in
addl
mov
jge
lahf
rclb
sahf
out
pop
mov
inc
fucomip
mul
push
stos
push
push
mov
xchg
jb
jecxz
mov
lahf
mov
fimuls
pop
xchg
cs
cld
dec
dec
jmp
ds
ljmp
aaa
sub
rclb
fildll
les
mov
outsl
jns
pop
lds
xchg
cld
push
dec
pop
dec
pop
subl
addr16
sub
scas
insb
cs
inc
xchg
lods
inc
aas
int
out
iret
scas
inc
add
lock
push
imul
shr
cmp
shl
out
ljmp
or
mov
jmp
jno,pt
push
push
mov
push
dec
pop
cmp
fwait
call
scas
jmp
addl
or
fsincos
fwait
push
pusha
stc
jmp
push
jmp
fildl
ffreep
mov
mov
ficoms
loope
xchg
mov
add
cs
pop
sbb
cmp
push
jp
jo
mov
loopne
mov
jno
int3
cwtl
fldcw
notl
push
aaa
pop
dec
out
and
and
test
cmc
cmp
mov
hlt
hlt
es
repnz
sbb
mov
shll
mov
jb
push
mov
adc
xchg
add
fwait
mov
arpl
call
dec
and
stos
mov
out
cld
or
xchg
push
and
out
sbb
loopne
cmp
sub
xchg
lea
call
lea
insb
aas
ds
lea
add
pop
in
sarl
fidivs
xchg
jo
ret
mov
mov
fstpt
xlat
mov
stc
inc
jae
lea
lret
jbe
stos
rcll
call
andb
adc
repz
jnp
and
inc
xor
sub
cmp
push
lea
or
dec
sbb
mov
mov
push
dec
and
cwtl
test
pushf
pop
shl
repz
shl
cmp
xor
out
pop
jo
push
rcr
push
cs
xchg
mov
and
add
dec
cmp
loope
xor
push
dec
fisttpll
pushf
push
imul
add
ss
cmpsb
pop
adc
add
cmpsl
sti
cmp
push
out
and
pop
pop
mov
or
jns
or
push
insb
inc
adc
ds
jae
cmp
fdivp
lea
push
sahf
jmp
aad
dec
into
push
out
cmp
mov
ds
mov
outsl
iret
xchg
aas
inc
stos
icebp
in
push
xchg
inc
loope
mov
fcom
insb
icebp
mov
jg
clc
mov
jg
pop
sbb
jo
and
push
sub
int
es
in
and
rcrl
mov
and
jae
in
decb
es
add
sarl
add
xor
idivl
jo
ss
out
push
shll
dec
or
cmc
jle
aam
cwtl
and
dec
sbb
hlt
daa
mov
sub
repz
add
sub
or
xchg
mov
add
pop
fisttps
pop
pop
fldcw
mov
mov
inc
cwtl
in
mov
data16
mov
pusha
mov
scas
shrb
fimuls
pop
stc
stc
sbb
mov
push
jle
insl
in
mov
jmp
cmp
or
push
dec
lret
and
loop
xchg
push
push
fidivs
call
test
xor
sbb
clc
adc
dec
ss
clc
dec
test
dec
push
loope
test
sti
or
add
or
adc
mov
ret
jge
in
aad
xchg
mov
jge
xlat
mov
movsb
pop
loope
lahf
cltd
iret
adc
or
xchg
and
int
out
out
scas
ljmp
mov
cmpl
xor
rclb
stc
adc
ds
cmpsb
stc
or
das
adc
xlat
xchg
cltd
clc
add
cli
pushf
xor
fucomip
push
rclb
aam
lea
aaa
mov
cmp
push
shrl
std
jmp
push
inc
push
add
dec
sbb
shrl
inc
mov
sbb
iret
shrl
frndint
shrb
pop
sub
gs
mov
jmp
xor
sbb
sub
sub
add
cmpsl
cld
xchg
in
add
xor
aaa
mov
shl
jns
xlat
jp
test
stos
lods
aaa
and
int
ss
push
sbb
dec
lcall
xor
jg
cmp
hlt
mov
testb
xor
cmp
pusha
imul
push
pop
push
inc
fmul
notl
dec
test
jno
repz
je
cli
push
mov
mov
cli
popf
jg
push
push
mov
or
daa
movaps
add
ret
aaa
mov
jno
ficompl
adc
clc
aam
cmp
mov
arpl
sub
popf
fnstenv
or
stos
in
outsb
jmp
or
push
add
xor
insb
and
push
fmull
lea
leave
lods
icebp
ret
dec
jecxz
imul
sub
loopne
dec
jne
jno
mov
clc
loop
sub
shll
add
jns
sbb
pop
call
sub
and
xchg
pushf
aaa
test
repnz
xor
clc
xchg
jecxz,pt
cmp
lods
jne
adc
mov
in
test
sub
ret
hlt
inc
inc
clc
fsts
rolb
in
add
je
sbb
jbe
lods
dec
pop
xlat
addr16
pop
mov
push
fwait
adc
jns
xchg
stos
mov
imul
test
arpl
mov
xor
xlat
and
in
dec
ret
shll
mov
or
jae
out
push
xor
xchg
cmp
jb
gs
mov
mov
sub
daa
sbb
fnstcw
push
or
das
jne
popa
xor
adcb
icebp
adc
or
jmp
movsb
or
out
mov
mov
imul
jb
subb
jl
mov
inc
addb
test
bound
mov
insl
icebp
mov
and
xor
out
in
mov
or
fs
xchg
cmp
dec
in
dec
mov
stos
pop
or
enter
js
push
popf
imul
dec
cmp
xor
jp
push
jbe
stos
push
out
stos
xor
rcll
inc
daa
mov
sbbl
xchg
sub
test
sbb
xor
jo
adc
test
sub
fwait
sub
xor
dec
jns
mov
jns
mov
xor
inc
push
sub
in
xor
in
jo
xchg
dec
or
or
jae
mov
shlb
in
insb
push
nop
outsl
push
je
jbe
imul
test
das
jp
ljmp
mov
jns
sub
outsl
test
cltd
mov
mov
mov
enter
jmp
xchg
shl
subb
push
inc
movsl
sub
pop
ror
popf
sub
jp
inc
jnp
mov
test
or
dec
out
mov
ja
push
test
dec
not
inc
pop
insb
rorl
mov
dec
jo
scas
inc
xor
push
jbe
lea
cmp
xor
sbb
shlb
neg
pop
cmp
inc
fdivl
mov
ficoml
sbb
add
mov
out
mov
mov
rcrl
rcl
adc
xor
loop
sub
lds
mov
iret
sbb
push
xor
movsb
mov
test
add
pushf
mov
lcall
pop
inc
data16
icebp
outsl
sub
xor
sbb
xor
xor
aam
mov
or
mov
fsubl
and
lds
cmpsl
and
ret
inc
adcl
push
pop
imulb
clc
or
cmp
out
lods
xchg
insl
sub
xor
inc
fnstcw
fs
pop
mov
push
mov
fwait
jge
adc
mov
aam
push
into
and
repz
cmp
push
sub
push
jle
aam
and
xchg
sahf
pop
mov
add
dec
dec
inc
cmpl
popa
inc
outsl
push
cmp
and
adc
je
cmp
adc
sub
jne
into
mov
mov
xchg
mov
jnp
cmp
imulb
xor
inc
and
cld
aas
clc
test
fwait
movsb
add
outsb
or
movsl
stc
and
cmp
sbb
adc
fcomp
int
out
in
outsl
fcoms
das
repnz
daa
inc
stos
testl
negb
insb
mov
stc
arpl
mov
pop
nop
sub
cmp
orb
or
mov
ficomps
push
push
push
movsl
shl
lock
addr16
push
int3
arpl
lea
movsb
mov
fbld
int3
xchg
or
mov
adc
lret
arpl
bound
dec
xor
and
inc
cwtl
fbld
outsb
fsub
cmp
lods
jg
repz
push
movb
xor
sti
fistpll
inc
lcall
and
sub
and
enter
or
cwtl
jge
in
call
test
pop
es
xchg
sub
cmpsb
dec
jb
mov
in
xchg
jmp
pop
out
or
stos
inc
addr16
push
out
inc
fcoms
ja
outsb
add
adc
enter
push
das
cs
pop
pop
mov
insb
cs
xchg
out
cmp
inc
mov
fsubs
je
repnz
jg
xorb
push
pop
inc
dec
iret
lcall
push
mov
scas
jp
iret
outsl
inc
dec
dec
jge
pop
xlat
outsb
inc
dec
cwtl
adc
adc
add
movsb
jg
loop
cs
cmp
outsb
jl
into
mov
adc
push
movl
inc
out
es
outsl
in
pop
rolb
xchg
inc
jnp
push
or
lock
pop
test
repz
outsl
int
cld
pop
in
or
or
cmp
sti
notb
test
inc
jmp
inc
lret
icebp
jb
jnp
push
push
inc
pusha
xor
arpl
out
test
stc
mov
add
mov
pop
push
fwait
ds
stc
aaa
dec
mov
mov
mov
add
fsts
inc
inc
dec
pop
inc
flds
lock
test
pop
xor
call
cmc
or
fidivs
pusha
mov
xchg
stos
cltd
jns
xor
sbb
hlt
dec
adc
xchg
pop
sub
jge
jl
das
dec
fstpl
hlt
fnsave
jne
jmp
jns
scas
xor
sub
aad
insl
xor
out
sub
push
je
jb
jle
repz
inc
and
in
add
mov
aaa
movsb
sbb
xchg
and
or
ret
hlt
sbb
scas
dec
adc
mov
jge
call
loop
sbb
mov
push
add
loop
cwtl
out
dec
fdivl
aam
imul
mov
je
shl
data16
mov
ja
push
test
pop
out
push
adc
test
lcall
loop
cltd
sub
enter
subl
out
pop
pusha
sti
lods
adc
jl
outsb
xchg
or
ja
fisubrs
inc
xor
push
push
add
xlat
inc
fdivrp
popa
mov
lahf
stos
hlt
pop
scas
and
subl
gs
loopne
xchg
cmp
cmp
or
call
add
mov
mov
mov
scas
popa
shrl
iret
jne,pn
cmp
leave
gs
cwtl
pop
nop
xchg
or
mov
or
cmp
mov
addr16
popf
xor
rcr
mov
clc
sahf
adc
and
push
mov
adc
dec
rolb
jne
aad
cmp
mov
lds
insl
rcrl
dec
mov
pop
loopne
insl
lods
mov
sbb
notl
aad
mov
lcall
cwtl
incb
sahf
mov
or
shl
adc
fsubr
pop
in
or
int
jb
pop
push
rcrb
test
sub
adc
stos
add
scas
push
push
add
xchg
arpl
mov
ret
sti
sub
outsl
adc
adc
sbb
jecxz
add
sub
aad
xor
mov
test
fcoms
dec
inc
push
outsb
cmpsb
cmp
inc
sbb
cmp
or
push
add
mov
aad
jmp
xor
xchg
pushf
push
test
test
sub
mov
mov
xchg
mov
mov
fadd
aad
xchg
insl
dec
pop
loope
imul
jnp
cmp
cltd
cmc
jno
mov
sbb
cltd
mov
cld
lcall
testl
arpl
test
push
aam
inc
mov
jb
push
adc
push
int3
shrl
pop
loopne
mov
out
cmpsl
push
xchg
xsha1
cmpsb
or
mov
mov
popa
shlb
imul
arpl
push
je
dec
lea
mov
bound
arpl
repnz
sti
std
xchg
in
dec
dec
in
mov
sub
arpl
push
gs
push
call
cwtl
mov
dec
jb
cmp
pop
hlt
cmp
aad
xchg
sub
insb
pop
cmc
pop
sbbl
jg
sbb
dec
or
cmp
pop
sub
enter
xor
pop
out
mov
orl
jnp
dec
loope
pop
imul
popa
push
sbb
outsb
add
cwtl
sbbl
mov
inc
mov
mov
clc
sahf
into
addr16
pop
jae
xchg
fs
movsl
push
xchg
jnp
or
jns
test
clc
shr
jg
sbb
lahf
in
push
movsl
fbstp
movsl
add
push
hlt
dec
loop
mov
stc
loope
mov
sbb
sti
add
pop
adc
outsl
push
sbb
fbstp
cmp
xor
pushf
push
ljmp
jno
and
aas
sub
sti
xchg
sub
loope
sbb
mov
cmp
xchg
insb
movsb
popf
sbb
mov
lock
and
lock
adc
test
sub
xor
xchg
dec
clc
popl
mov
in
js
fldt
lret
cli
in
jl
or
scas
dec
pop
insl
ss
scas
jmp
loopne
xor
in
push
call
ss
push
stos
push
iret
mov
inc
fmuls
xchg
cmpb
pop
sahf
push
jl
bound
push
mov
mov
loopne
lret
mov
and
test
inc
cmpsl
cmpsl
js
mov
or
test
test
pop
cmpsb
je
aam
adc
mov
pop
sbb
ds
jo
rclb
push
lods
lds
sti
xchg
ds
dec
fistpll
sbb
int3
mov
enter
cmp
sub
xchg
pop
push
ret
jg
mov
test
push
fcmovu
pop
sahf
or
jmp
sub
mov
loope
lret
bound
jmp
push
lcall
je
jb
mov
bound
daa
scas
mov
sub
mov
jle
mov
mov
and
mov
jnp
stos
mov
adcb
xor
pop
arpl
popf
stos
mov
stc
mov
jns
ljmp
jb
sub
outsl
jp
ljmp
jno
jge
ds
fsubrl
xchg
out
add
outsb
jle
repz
mov
mov
test
xor
outsb
jb
adc
jnp
std
test
lret
add
ljmp
jge
leave
pop
icebp
jge
mov
push
lret
sub
add
mov
ret
idivl
cmp
iret
out
xchg
outsb
dec
loope
push
inc
fisttpl
push
negl
nop
fdivl
ljmp
mov
mov
test
pop
data16
mov
add
leave
testl
test
mov
insl
test
mov
jne
stc
cmpsl
cld
js
xor
sbb
jle
push
scas
add
sub
jl
xor
loopw
xchg
or
pop
inc
xorl
lds
push
lea
mov
add
adc
inc
nop
lock
sarb
out
pop
xchg
sub
or
or
push
mov
dec
jecxz
fcmovnb
pop
or
pop
xchg
and
ret
fidivl
ret
imul
jo
imul
iret
xchg
sub
add
mov
xor
pop
fs
jmp
decb
add
fwait
int
mov
lea
shrb
mov
int
push
add
orl
dec
jbe
mov
or
adc
jbe
cmc
mov
mov
push
popf
dec
dec
data16
jp
inc
fisttpll
dec
in
adc
push
mov
mov
or
push
sahf
xor
test
pop
mov
aad
pop
gs
inc
aaa
mov
or
xchg
push
ljmp
sbb
add
sahf
xor
hlt
adc
cmc
es
pop
push
and
in
test
dec
std
daa
xor
push
cs
movsl
pop
testl
pop
das
and
pop
into
iret
dec
fs
xor
fistpl
add
sbb
xor
arpl
movsb
cmp
push
xor
xchg
sbbb
mov
xchg
mov
jne
cmp
push
xor
mov
ja
test
jg
cmp
cltd
mov
mov
xchg
push
jmp
pop
dec
les
rorb
add
testb
data16
xchg
movsl
dec
in
mov
ftst
clc
jl
add
xor
dec
out
lahf
pop
cmc
int3
test
inc
jl
pop
cld
leave
loopne
inc
sbb
jae
outsl
xchg
mov
and
cmpb
push
mov
or
jnp
sub
stos
rclb
jb
dec
adc
leave
movsb
jge
fstps
mov
mov
ret
cmp
pusha
sbb
orb
push
iret
rcrl
sub
orl
push
push
stos
inc
mov
xchg
sub
pusha
pop
hlt
xchg
push
lea
mov
mov
fisubl
or
mov
insb
add
pop
sahf
vpsrld
out
mov
dec
or
jmp
add
inc
fstps
inc
fisttpll
jge
aaa
aad
imul
adc
fsubrs
fdivl
fisubrs
inc
fstpt
cmc
fnstenv
jecxz
pop
adc
pop
mulb
or
add
lods
inc
sub
arpl
or
lret
bound
xor
pop
lahf
shrl
jnp
adc
out
out
xchg
or
ja
push
call
ret
js
enter
pop
pop
rclb
add
sub
les
sti
xchg
add
sbb
pop
sbb
lods
inc
scas
jo
lea
les
sub
push
pop
rcr
jne
xor
sbb
stc
shlb
dec
sbb
dec
jo
lret
movsl
insl
push
sub
repz
sbbl
adc
and
mov
cld
call
or
mov
xchg
push
sub
mov
sbb
test
cmp
mov
mov
dec
test
aad
incb
mov
xchg
pop
jnp
dec
loope
mov
repnz
repz
dec
mov
jl
or
iret
neg
jno
in
push
jmp
inc
sbb
ja
mov
jno
cmp
int3
sarb
jb
cmpsb
cmp
int
sahf
xor
pop
dec
xor
jp
jg
xor
lret
in
cmc
mov
dec
mov
cmpsb
push
jmp
jle
loopne
jg
pop
cli
add
xor
adc
into
dec
xchg
fdivl
imul
xchg
sbb
dec
data16
jle
cld
das
pop
lahf
sbb
sub
in
test
cmp
or
sub
out
xchg
jno
push
cmp
iret
cmpsb
in
ja
inc
pop
movsb
nop
jp
pop
mov
addr16
push
stos
sub
pop
jb
mov
cmp
fiadds
lods
dec
mov
dec
mov
mov
cwtl
jg
movb
jno
mov
pop
push
adc
pop
mov
cwtl
inc
dec
cmpsb
outsw
dec
jno
push
das
mov
arpl
addb
jb
imul
xchg
insl
cwtl
add
xchg
fs
jmp
jl
ljmp
xor
dec
lea
in
cmp
push
stos
add
test
mov
jnp
nop
cwtl
das
push
andb
jae
stos
inc
xchg
sub
ljmp
push
sti
ficompl
jle
lahf
fsubl
push
cmp
sbb
lock
lock
and
cld
cmp
xor
out
and
lret
int
outsl
jne
jno
mov
mov
lea
cwtl
andb
jge
and
inc
pushf
nop
fs
js
sub
mov
sti
add
xchg
inc
sbbl
xchg
bound
inc
adc
xor
cmp
pop
imul
jle
add
setne
cmp
das
test
cwtl
das
xor
rorb
push
xor
and
and
js
enter
inc
mov
fsubs
inc
mov
xor
xchg
sbb
in
stc
and
int
pop
lock
loop
into
sbb
mov
hlt
pop
cmc
sub
mov
aas
cmp
mulb
xchg
aaa
cmpsl
sbb
bound
xchg
jmp
mov
push
or
fldcw
xchg
mov
shrl
push
inc
popf
xchg
ss
jbe
jo
andl
xchg
js
jle
xchg
push
insl
cltd
dec
mov
mov
push
sbbl
clc
subl
scas
inc
mov
add
mov
sahf
jne
jo
sbb
xchg
int3
lcall
rcrl
sbb
shll
jp
xor
ret
sahf
mov
jecxz
mov
mov
jne
ret
xor
pop
icebp
fnstcw
in
mov
pop
mov
add
mov
jmp
stos
outsl
pop
dec
out
pop
xchg
jp
cmpsl
ret
pop
adc
lcall
pop
push
movsb
push
pop
rcrb
out
xor
int3
aas
fs
cmp
mov
pop
fs
push
pop
data16
push
push
mov
outsb
pop
pop
notb
nop
sbb
daa
xchg
fcoml
mov
pop
inc
mov
std
push
orl
xor
jb
mov
call
push
test
popf
hlt
insb
pushf
mov
mov
mov
push
mov
pop
out
add
test
bndstx
test
add
xchg
fistpl
lret
xchg
fldl
cmp
notb
sbbb
in
pop
mov
push
jecxz
pusha
stos
cmp
push
leave
arpl
dec
pop
daa
push
add
xchg
sub
fmull
pop
push
or
test
sub
mov
fwait
xchg
pop
js
and
cs
jne
cmp
xchg
xor
push
inc
faddl
iret
inc
add
insb
mov
push
cmp
lahf
pusha
pusha
jle
sbb
xor
dec
leave
arpl
cmp
pop
rolb
adc
push
lcall
pop
xchg
jno
jmp
cmpsb
data16
sub
sub
nop
mov
or
orb
jne
mov
pop
mov
out
or
bound
xchg
mov
fs
mov
mov
mov
mov
idivb
push
movsb
fisttps
pop
xor
dec
mov
outsb
stc
dec
or
pushf
jbe
loop
push
iret
xchg
test
or
ficoms
xor
lret
xchg
and
cwtl
xchg
lret
mov
les
dec
popa
insb
movsb
xor
jno
int
dec
or
fldt
and
mov
divb
out
mov
cli
xchg
into
repnz
or
lock
rol
add
cs
int
mov
pop
pop
adc
mov
lock
mov
in
inc
fisttpl
cmpsl
gs
push
mov
mov
push
fildl
imul
mov
push
andb
pop
movsl
test
sbb
test
pushl
repnz
add
test
push
xor
aaa
in
jl
test
lahf
jg
cwtl
xchg
dec
sahf
inc
enter
stos
lcall
sahf
jbe
movsb
jo
stc
sub
ss
leave
mov
xor
into
adc
adc
xor
lock
mov
lcall
jns
mov
icebp
dec
mov
ret
test
int3
in
rol
fs
xlat
imul
stc
and
mov
in
inc
mov
outsb
rclb
sub
jb
fsubrs
ret
xor
sub
mov
clc
and
xor
into
and
insb
push
mov
add
sub
es
pusha
movsb
mov
fnstenv
cld
pop
rcr
or
adc
xor
loopne
adc
or
lahf
ljmp
imul
popf
cmc
fwait
mov
mov
cmpb
ss
dec
add
or
push
lcall
mov
push
scas
or
orl
xchg
mov
jmp
mov
ss
out
inc
mov
mov
std
push
mov
pop
add
adc
inc
cld
xchg
push
cwtl
nop
cmpl
sahf
nop
bnd
mov
sbbl
aam
fsub
add
pop
xor
and
sub
sbb
sub
push
arpl
rclb
in
sbb
std
xchg
rcll
sbb
leave
jge
jns
mov
cwtl
xchg
scas
cmovnp
xchg
in
stc
into
repnz
int
jmp
push
iret
fbld
pushf
test
lret
inc
fdivr
scas
cmpl
arpl
xor
aad
jp
pop
cmp
sub
adc
in
push
or
pop
xor
sub
repnz
push
cmp
stc
pop
filds
mov
mov
das
fldenv
fstpt
jle
mov
xchg
jge
aas
arpl
jbe
pop
mov
push
ljmp
loop
inc
lock
iret
sbb
imul
leave
arpl
push
mov
pusha
cmpl
cmpsb
test
das
jmp
lods
loopne
sub
jl
in
and
cmpsb
out
and
jae
dec
lcall
pop
iret
xor
or
push
cmp
push
gs
inc
or
popf
push
dec
jecxz
mov
sub
fidivs
sbb
hlt
and
js
sahf
test
lret
arpl
in
jb
mov
ljmp
adc
andb
ds
ja
pop
insb
inc
mov
jle
pop
lock
in
lods
stos
dec
iret
repz
fsubrl
inc
rclb
mov
insl
xchg
inc
mov
clc
or
mov
imull
jmp
fldenv
int3
jmp
fisttpl
imul
int3
inc
lret
jno
shlb
pop
jmp
daa
sarb
mov
into
mov
imul
xchg
sub
and
hlt
das
push
sub
andb
dec
mov
daa
adc
jbe
stos
xchg
xchg
mov
outsb
push
mov
ret
inc
push
out
push
fcomps
add
push
aam
cmp
inc
mov
push
out
ds
gs
fimull
cmpb
adc
xor
xchg
sbb
adc
sub
xor
inc
pop
cmp
mov
inc
gs
jmp
jle
test
sbb
jo
stc
adc
mov
mov
std
nop
mov
aaa
xchg
mov
rorl
loope
jecxz
leave
rcll
fmulp
into
inc
ror
jmp
mov
push
rcr
addr16
cmpsl
gs
loop
call
scas
xchg
std
push
movsl
mov
mov
mov
jl
inc
and
and
out
lahf
jge
push
dec
sbb
loop
pop
popf
xor
loop
add
cmp
cld
xor
in
xchg
and
push
mov
shrb
stos
or
mov
jp
cli
mov
test
insb
stos
int
addr16
pop
out
xor
int3
pop
xor
insb
shr
and
xchg
cmc
pop
enter
sbb
lret
xor
int3
arpl
ret
sbb
idivb
and
push
in
push
mov
out
xchg
mov
fistps
fnstsw
out
inc
shr
aaa
call
lods
loopne
hlt
sub
mov
xchg
cmp
cmpsl
jp
pop
sub
cmpsb
cmpsb
imul
into
jae
aam
jmp
daa
fldl
dec
pop
fdivl
testl
sbb
cmp
push
jne
imull
cmpl
ficoml
pop
cmp
stos
divb
aad
and
or
or
jb
imul
inc
push
out
mov
sub
fnstsw
paddd
adc
or
push
mov
outsl
push
xchg
bound
xchg
mov
icebp
cmpl
fcoml
dec
ds
mov
pop
or
sbb
cmp
sbb
sbb
add
pop
push
call
mov
lods
in
fnstenv
lret
ljmp
jecxz
outsl
movsl
jmp
fidivl
or
ficompl
adc
fldenv
out
lret
push
add
not
cmp
repnz
call
mov
cmpsl
push
jae
in
test
mov
mov
in
sbbl
sub
xchg
cmp
jg
mov
jmp
lods
mov
sti
push
mov
fidivrl
pop
add
xchg
push
aaa
jle
je
rcrl
dec
ret
cmpsb
jne
sbb
push
aas
push
cmpsb
jle
mov
rolb
loop
fists
int3
pop
out
xor
dec
lret
bound
repz
mov
sbb
mov
xchg
hlt
push
sbb
adc
mov
inc
sti
inc
enter
stc
nop
sbb
mov
lea
xchg
popl
dec
mov
fdivs
and
rorb
fxch
data16
dec
rol
fsubrl
mov
xchg
in
outsl
push
or
sub
and
pop
lret
dec
mov
dec
jecxz
lods
movsb
mov
out
fadd
mov
adc
or
adc
cmpsl
jbe
xor
jecxz
in
mov
add
xor
sub
into
data16
push
fisubrl
xor
jg
ljmp
mov
push
or
mov
inc
cvttps2pi
lea
push
out
adc
outsl
mov
outsl
add
xor
or
jnp
cmp
pushf
lods
stos
pop
repz
in
mov
dec
inc
popf
and
sub
mov
inc
dec
inc
mov
dec
mov
rcrl
sub
pop
and
negl
inc
inc
stos
bound
and
push
leave
mov
inc
pop
or
pop
mov
je
pop
lods
pop
inc
mov
lods
inc
gs
and
lds
and
cmp
sub
jno
jnp
testl
or
jp
out
inc
aas
sub
push
or
sarl
pusha
cltd
adcb
bound
cmpb
mov
push
push
jnp
inc
ja
ret
xor
pusha
mov
push
pop
pop
mov
je
push
mov
adc
push
mov
xor
flds
cmpsb
xor
adc
clc
xor
je
adc
mov
ret
xor
jmp
mov
loope
lods
test
cmpb
mov
cltd
sub
fdivrs
sbb
out
mov
sub
lahf
cmp
nop
sarb
xor
shrb
sbb
dec
sahf
pop
sub
lods
jne
inc
rcll
or
sti
mov
add
repz
mov
mov
mov
ss
sahf
test
stos
fcompl
or
negl
inc
orb
and
xor
add
xor
xchg
add
jo
xor
push
int
xchg
xchg
mov
xchg
stc
addr16
dec
adc
fldt
mov
cmp
loop
add
adc
xchg
adc
sbb
mov
in
sub
cmp
shlb
dec
lock
xchg
xor
dec
jb
xchg
nop
xchg
cmp
fcomi
pop
add
xchg
repz
mov
int3
push
lret
cmovne
mov
mov
repnz
xlat
stos
inc
in
mov
pop
stc
test
cmc
sbb
mov
mov
das
sub
fidivs
loopew
push
push
fcoml
pop
dec
imul
insb
jp
mov
test
popa
xor
push
jp
cwtl
xchg
cwtl
lcall
outsl
jg
pop
pop
lods
outsl
sahf
dec
pop
rcll
ret
inc
xchg
and
jg
mov
mov
addr16
jae
lds
mov
out
in
ret
ficomps
in
inc
aam
mov
daa
pop
lret
mov
test
lret
jo
jnp
ret
ret
pop
les
imul
gs
or
xchg
jle
lcall
xchg
mov
pop
adc
popa
lcall
cmpl
outsl
add
inc
mov
inc
test
imull
fs
insl
lahf
adc
popa
mov
jns
lods
jp
das
and
dec
sbb
mov
pop
inc
mov
and
push
lret
push
into
sbb
sub
jg
inc
mov
and
dec
shl
lods
pop
inc
cmpsl
or
clc
dec
mov
adc
and
mov
aad
ljmp
insl
xchg
je
and
movsl
cmp
dec
fldl
lcall
pop
lahf
push
mov
outsl
rclb
add
push
xor
xchg
stos
inc
leave
dec
jnp
dec
jmp
pop
icebp
inc
aam
push
sub
dec
enter
outsb
xchg
or
aas
sub
xor
push
loope
xor
xor
lods
jge
sbb
pop
mov
ss
xor
adc
push
mov
xchg
add
subb
or
lock
repnz
movsl
cmp
testl
scas
pop
jo
sbbl
stos
pop
fimull
ss
xchg
xchg
rorl
inc
mov
pop
shl
cli
mov
mov
mov
clc
jp
into
or
aaa
into
add
orl
icebp
int3
push
movsb
imulb
cld
movsb
rolb
loopne
repnz
test
inc
xchg
mov
jmp
lods
pushf
cmc
adc
mov
ljmp
enter
jge
sahf
imul
mov
pop
cmp
imull
lret
cmp
jae
jecxz
imul
test
jnp
fisttpll
xchg
push
pop
insl
xchg
cs
pop
scas
jp
inc
add
test
mov
loopne
inc
rorb
sbb
push
mov
ret
push
lahf
lahf
lea
xchg
daa
filds
mov
iret
lret
inc
addb
inc
test
rcrb
icebp
and
icebp
pushf
or
add
loop
cltd
loop
xchg
mov
add
lods
xchg
bound
addr16
out
out
mov
push
fsts
mov
mov
sahf
data16
mov
into
push
cs
sbb
jo
pusha
xor
jl
pop
xor
xlat
push
mov
cmc
rolb
into
gs
roll
mov
xchg
shlb
outsl
addr16
jb
aad
xchg
sub
dec
mov
and
ja
shlb
dec
push
push
in
shll
dec
push
fnsave
inc
xchg
mov
stos
inc
mov
pushl
in
aaa
enter
insl
rcll
sti
xor
in
sbb
sgdtl
cltd
imulb
sbb
ds
ds
jb
popa
xchg
enter
jns
sbbb
mov
insl
jbe
cmp
pop
and
insb
cmp
fidivs
loope
idivb
push
cmp
jle
negl
and
fdivl
sbb
std
das
stc
adc
stos
mov
aas
in
pmullw
or
jp
sti
and
pusha
js
ss
negb
lock
pop
and
cmp
xor
clc
lahf
lock
or
gs
pop
mov
push
mov
sbb
cli
sub
adc
mov
cmp
or
cmp
mov
mov
xlat
mov
test
adc
sarl
pop
adc
sbb
imul
out
scas
mov
cld
ficoms
sbb
sbbl
push
ret
push
mov
pop
cmp
pop
jge
mov
nop
sbb
dec
mov
xchg
cmpb
bound
mov
xchg
add
xor
push
roll
into
ds
popf
xor
repz
sbb
adcb
add
outsl
mov
adc
fisubrs
adc
ret
dec
repnz
in
and
movsb
cmp
xor
xor
repz
and
cli
jo
mov
lock
and
mov
sbbb
rorl
pop
jns
xchg
sbb
hlt
je
fsubrl
dec
sub
insl
in
lret
fs
sbb
lea
or
rclb
push
stos
inc
out
faddl
mov
or
addl
mov
xchg
xchg
jns
mov
mov
jl
inc
mov
pop
movsb
push
sub
out
scas
inc
test
xor
mov
in
hlt
call
mov
sub
or
orl
out
and
push
or
in
xor
bound
nop
mov
std
cmp
dec
loop
pop
pop
add
sub
xor
ja
loop
cmp
jno
xchg
jp
aas
shrl
jmp
cld
and
shlb
pop
and
jo
in
ljmp
shrl
fnsave
divb
pop
jmp
sbb
es
push
xchg
pop
xor
scas
sub
mov
mov
mov
loope
pop
mov
pop
leave
xlat
pop
or
and
hlt
push
out
divl
iret
mov
and
sbb
ret
mov
fisttpl
xlat
cmp
out
insl
lret
xchg
jae
lods
jne
daa
dec
les
xchg
sub
pop
xor
inc
sbb
pushf
inc
push
clc
cmp
sub
mov
std
sbb
in
movsb
add
sbb
out
xchg
nop
fmull
xor
cmp
les
mov
and
adc
push
mov
sub
fimuls
lods
pusha
mov
inc
into
in
in
jno
movsb
lds
clc
xor
cmp
int
in
sbb
hlt
cmpsb
lret
mov
jmp
shlb
cmc
sarl
cli
pop
mov
repnz
mov
sbb
push
mov
cmp
leave
scas
enter
sbb
loope,pn
sbb
lock
mov
ja
incl
bound
adc
imul
dec
xlat
push
jmp
push
test
sbbl
in
fdivs
fsin
and
mov
out
xchg
imul
cwtl
pop
repnz
or
subb
jns
push
jno
lods
xor
aaa
into
sub
mov
aam
jns
pop
shrl
sbb
lcall
dec
mov
jae
jge
je
cmp
push
xchg
imul
lock
scas
jae
add
and
std
xchg
xchg
and
lret
push
mov
fisubrs
xor
daa
in
or
xchg
loopne
xchg
sbb
and
lret
sbb
into
lret
fdivl
flds
adc
insl
aam
daa
cmc
dec
fadds
mov
daa
xchg
pop
imul
dec
addr16
shrl
xor
push
repnz
ljmp
hlt
leave
shrb
adc
mov
rcrb
mov
insb
mov
pop
popf
sub
and
outsl
jg
and
dec
pushf
or
and
inc
std
and
inc
fsts
add
pusha
and
pop
push
sub
sbb
xchg
inc
repz
add
loopne
jg
and
aad
push
stos
jno
inc
scas
bound
push
mov
xchg
arpl
fisttpll
mov
sahf
pop
jbe
outsb
inc
mov
mov
fbld
fsub
je
insb
inc
test
fdivrp
inc
fwait
mov
xor
add
cwtl
inc
mov
hlt
lret
fistpll
test
in
inc
dec
rolb
xlat
inc
mov
push
clc
push
enter
pop
push
loop
out
push
mov
test
cmpsl
dec
xor
jl
pop
cli
popf
dec
in
sbb
jl
out
insb
add
outsl
add
je
and
adc
inc
call
pop
cmc
xchg
cmp
jnp
mov
add
cmp
pop
mov
aad
mov
outsb
in
pop
repz
testb
pop
adc
mov
cwtl
das
fwait
jmp
push
lods
sub
call
orb
inc
call
es
sub
shll
dec
fistpll
fisubl
or
sbb
and
jo
jnp
jle
mov
mov
fimull
stc
nop
sub
adcb
jl
shlb
outsb
add
sub
arpl
sub
pop
jl
sub
or
pusha
cmp
mov
xchg
mov
pop
loop
pop
scas
lods
add
int3
pop
push
std
xchg
xchg
sbb
or
cmp
cld
adc
inc
sbb
outsb
lds
mov
adc
jns
cmp
sbbb
scas
in
mov
mov
shrb
in
rcrb
add
mov
inc
and
insb
pop
sbb
push
lea
fs
adc
mov
sbb
pop
adcl
js
es
cmpsb
addb
shll
dec
cmp
je
push
pop
xchg
insl
clc
ret
xchg
push
std
push
mov
mov
push
es
xchg
push
cmpsl
mov
push
scas
jne
movsb
mov
lcall
push
sti
mov
adc
loope
push
leave
adc
mov
pop
popa
mov
dec
fcompl
incb
sarl
xchg
daa
out
xor
es
leave
add
hlt
dec
xor
mov
push
and
mov
mov
xchg
cmp
scas
mov
fcmovu
jnp
test
mov
lods
fs
cmp
clc
rcrl
mov
dec
stos
cli
and
stc
xor
das
dec
mov
cmp
sbb
lret
mov
mov
adc
push
push
xor
mov
sarl
push
and
out
daa
divl
sub
inc
pop
shll
push
push
xchg
jmp
sbb
sbb
stc
fcomi
xlat
in
push
xchg
jae
pop
je
or
fnstsw
popf
imul
mov
stos
je
jg
imul
push
push
push
sbb
repz
sbb
jp
js
and
rolb
fldl
mov
jno
mov
faddl
shrb
into
dec
loopne
rcll
cmp
jecxz
pop
xchg
dec
jge
pop
xchg
repnz
loope
cltd
cmp
cld
mov
sbb
mov
dec
sbb
inc
pop
and
xchg
hlt
aam
int3
pop
xor
bound
inc
nop
int
xchg
push
pop
mov
movsl
push
mov
xor
fsqrt
xchg
push
jle
sub
imul
push
xor
dec
or
popa
jbe
or
mov
mov
mov
jecxz
cmpsb
lods
pop
popf
dec
dec
cmp
ds
inc
sti
jne
jb
dec
test
adcl
fimull
popf
sbb
xchg
adc
mull
xchg
movsb
xor
push
test
or
das
push
lods
pusha
cmp
pop
stc
nop
loop
out
xchg
jns
add
insl
add
xor
scas
mov
sti
scas
inc
in
mov
sbb
mov
xorb
xchg
sub
mov
fwait
and
mov
mov
pop
insb
add
int3
arpl
ds
jle
dec
jo
les
adc
orb
cmp
lock
fistpl
xor
stc
pop
inc
rcrl
les
push
push
mov
dec
add
jg
push
sub
pop
inc
or
ss
int
inc
sbb
jmp
cwtl
cmp
leave
fnsave
por
cltd
pop
adc
mov
xchg
inc
adc
add
ja
sub
jle
push
out
mov
imul
rolb
mov
iret
mov
out
popa
jne
and
mov
pop
dec
mov
shrb
xchg
mov
dec
cmp
jnp
xchg
ds
imul
mov
in
stc
mov
push
repz
push
mov
cmpsl
nop
mov
ret
cs
loop
rcrb
pushf
mov
mov
dec
adc
mov
push
std
nop
ss
mov
and
cmp
xor
sbb
stos
mov
mov
mov
cmp
push
arpl
stos
mov
push
cli
movsl
mov
push
sti
sub
xchg
cmp
sahf
add
jno
mov
and
int
lret
sbb
lods
xor
add
push
inc
das
mov
push
mov
cmp
and
or
mov
sub
xor
insb
cmc
frstor
sub
nop
adc
ror
ret
mov
xchg
mov
lods
scas
xor
ret
pop
shrl
jle
mov
mov
or
or
aas
sbb
xchg
dec
filds
in
jle
cmp
mov
pop
into
iret
or
fildl
mov
xchg
cmp
lds
adc
cmpb
int
lea
sbb
rclb
jmp
adc
test
mov
mov
mov
cmpl
lret
and
mov
add
pop
fldenv
push
mov
fcmovne
test
and
movsb
fwait
inc
sbb
cwtl
inc
outsl
push
jecxz
pop
jnp
sbb
xchg
jo
ds
jmp
sbb
notb
jmp
std
mov
and
nop
cmp
lret
fwait
nop
cmp
je
lock
arpl
push
sub
arpl
adc
push
or
sti
mov
jbe
xor
cmpsb
daa
push
and
xor
ja
daa
lea
mov
shl
lods
hlt
arpl
sti
inc
adc
stos
es
jmp
lahf
nop
sub
sub
push
aam
jl
scas
or
scas
cs
into
mov
or
sub
pop
shlb
in
pop
daa
adc
daa
fnsave
inc
adc
xchg
mov
xchg
xor
pusha
fistps
insb
jp
pop
shlb
movsb
sbb
stos
aas
mov
cmp
sbb
aad
jnp
out
faddp
cli
sahf
cmp
stos
ds
inc
cmpsb
ret
fwait
mov
pop
jge
pop
sti
pop
push
sahf
cmp
sbb
and
es
inc
sbb
inc
mov
xchg
inc
jmp
repz
sub
mov
lods
inc
ss
mov
xchg
test
es
mov
cwtl
jb
fistpll
push
outsb
mov
std
pop
lds
cld
push
nop
sbb
imul
xor
dec
or
je
xchg
in
addr16
jg
cmp
adcb
std
pop
adc
sbb
dec
cli
fnstcw
xchg
insl
out
cs
pop
cmp
adcb
std
push
cwtl
sbb
data16
ss
rcll
add
push
adcb
add
push
push
jbe
mov
orb
cmpsl
pop
out
dec
mov
ljmp
std
into
xchg
jns
pop
pop
notb
les
mull
aaa
mov
aad
je
loop
inc
adc
std
aam
imul
mov
les
cmc
popa
push
mov
and
hlt
fisttpll
cmpb
mov
xor
sub
pusha
fidivl
and
push
je
rorl
inc
paddsb
cmp
pop
lods
sub
cli
xchg
in
adc
xchg
push
xchg
cmp
ss
ucomiss
adc
and
dec
or
xor
add
fidivl
xchg
inc
jae
push
add
jmp
jle
mov
and
mov
test
outsl
xchg
inc
dec
ja
clc
lcall
xor
cmp
xchg
sbb
shll
mov
nopl
mov
movsl
and
pop
dec
pop
cld
sti
fwait
cmp
iret
push
mov
cmp
and
mov
out
ds
pop
iret
mov
repz
mov
in
or
push
icebp
dec
ud0
sarb
in
sbb
movsl
mov
das
mov
nop
hlt
pop
outsb
mov
fucom
jae
shl
cmc
nop
aaa
dec
icebp
mov
adc
das
cmpsl
sub
push
nop
cmp
jmp
leave
push
jp
pushf
aaa
pushf
test
daa
lahf
inc
in
xchg
data16
imul
loope
out
mov
mov
xor
xchg
cmp
pop
sbb
je
adc
insl
ja
out
dec
subb
pop
cmp
mov
mov
jge
xchg
loop
aam
push
icebp
lret
xchg
test
ret
shlb
adc
pop
inc
or
aam
int
inc
push
push
pop
mov
leave
cmp
xor
mov
stos
popa
jmp
xor
les
jae
ret
mov
pusha
jmp
xor
jmpw
pop
add
movsb
in
jo
popf
cli
gs
pop
jnp
hlt
cwtl
js
gs
xchg
jb
xor
in
jg
daa
and
mov
ja
xor
xchg
aad
lcall
push
cli
jge
jge
xchg
imul
ss
push
sti
stos
push
or
int
mov
ret
hlt
xor
insb
jecxz
imul
ficompl
sbbl
sub
call
outsb
loop
cmp
push
push
xchg
inc
test
sub
lods
push
add
mov
jnp
ljmp
lahf
out
and
mov
jbe
inc
mov
call
push
cs
pop
out
jle
pushf
mov
pop
mov
xor
xchg
stc
loop
pop
shrb
sete
jle
cli
iret
jb
insb
loope
pop
dec
ja
sub
xchg
cmpsb
xor
mov
lods
popl
mull
aad
aad
ffreep
nop
in
mov
jg
mov
test
jo
jb
ret
inc
mov
lret
mov
add
jne
push
imul
xor
stos
xchg
in
inc
adc
mov
cmp
push
jmp
movsb
xor
jmp
fs
pop
movsb
jnp
inc
std
mov
add
fsubrs
es
dec
insb
ljmp
adc
shlb
inc
adc
movsl
xor
cs
bound
mov
mov
outsl
neg
clc
xchg
or
add
repz
adc
addr16
xor
adcl
sbb
leave
jge
add
push
imul
loopne
push
push
jns
adc
lods
inc
test
cwtl
das
cmp
xchg
ds
cmpsb
and
je
add
cs
add
jne
enter
call
jnp
jp
loope
pop
xchg
inc
or
push
sbb
add
fnstenv
dec
in
cwtl
or
out
in
out
add
mov
inc
daa
lods
out
lds
scas
stos
pop
fidivrl
mov
sbb
mov
ja
and
jo
fistps
sbb
xchg
leave
sets
das
adc
std
js
add
cmp
pop
stc
add
pop
divb
dec
adc
pop
outsb
notb
dec
scas
xor
mov
mov
insb
inc
ret
xor
sub
cmp
inc
or
xor
test
add
pop
lock
xchg
popf
inc
stos
mov
ret
sbb
pop
add
dec
or
push
push
jmp
mov
push
test
jg
pop
lods
xor
adc
popa
and
rcll
pop
rcrb
lret
fiaddl
push
inc
or
fldl
pop
sub
sub
addl
xor
fistpl
and
std
ret
cmp
pop
sub
xchg
adc
push
or
mov
mov
or
pop
jmp
xchg
aas
lret
out
push
adc
iret
lret
inc
jl
xchg
inc
imul
inc
js
pop
mov
in
addr16
scas
sub
mov
mov
scas
sub
push
xchg
push
sub
push
pop
aam
shll
into
ret
std
cmc
push
test
jmp
popf
add
push
insl
fucom
jnp
iret
xlat
outsb
add
inc
or
mov
mov
sbb
pop
pop
add
dec
add
imul
movsb
mov
stos
sub
xchg
addr16
jge
aas
mov
test
mov
ljmp
cltd
lds
lock
lret
sbb
orb
icebp
pop
mov
lods
pop
shll
clc
fstpt
test
ret
nop
insl
dec
inc
adc
inc
pop
add
jb
loopne
imul
or
pop
and
mov
cmc
dec
stos
and
mov
std
adc
std
scas
fidivrs
loope
push
fistpl
rcll
mov
inc
movsb
push
jge
lods
mov
loope
out
sub
lea
test
in
je
ret
ds
movsl
lret
sub
sbb
sti
or
insb
lock
outsl
or
inc
pop
xlat
pop
push
add
add
sbb
inc
std
pop
jg
ret
sarb
pop
sub
lret
jecxz
adc
test
mov
mov
sbb
jg
mov
mov
cwtl
cmp
xchg
push
add
or
stc
dec
dec
pop
divl
ja
mov
push
fcoms
jge
inc
or
ret
repz
cs
xor
outsl
repz
loop
shll
out
je
mov
ret
or
mov
scas
inc
or
mov
sub
pop
jmp
sub
orb
fwait
lea
add
in
push
add
std
add
adc
sahf
cmp
pop
call
ds
jne
ret
jo
mov
and
push
dec
inc
mov
xchg
xor
and
sbb
lock
orl
das
and
cmp
mov
nop
cmp
fstpt
mov
in
lds
lahf
cmp
aad
leave
add
inc
dec
mov
lcall
mov
out
sbb
inc
adc
add
rclb
loopne
loopne
or
xchg
cmpsl
sub
cwtl
inc
dec
lea
mov
pushf
pop
rclb
lret
sbb
gs
push
inc
lret
mov
adcl
imul
pop
xor
shll
adc
rcr
js
data16
testb
pusha
roll
mov
mov
adc
movsl
out
mov
xlat
int
mov
lods
mov
and
push
mov
mov
imul
and
pop
stc
imul
cltd
pop
rcrb
icebp
xchg
xor
inc
or
out
jbe
jae
cmp
in
dec
mov
push
add
jnp
xchg
std
and
inc
inc
or
mov
in
mov
mov
add
push
sarb
sub
int
movsl
adc
pop
jle
xor
cld
lret
add
addl
pop
out
and
jns
cmc
outsl
in
ror
mov
mov
repz
neg
xchg
aas
push
jae
push
scas
xchg
mov
mov
cmp
dec
ljmp
out
jmp
jmp
data16
clc
or
lcall
ja
push
cld
pop
dec
js
mov
and
xor
ja
xlat
test
dec
or
test
lret
stc
pop
jmp
clc
inc
fsubrs
inc
in
jbe
aas
cmpsb
xchg
addr16
jno
es
pop
popa
call
fisttpl
dec
adc
and
out
cmp
loope
pop
xor
gs
mov
je
call
clc
push
inc
les
rcrl
mov
stos
sub
adc
mov
sbb
dec
xchg
cmp
les
mov
out
adcb
mov
cmp
int3
sbb
cltd
jge
clc
bound
jo
hlt
adc
jbe
and
test
cmpsl
in
adc
inc
scas
das
xorb
cmp
xchg
xor
ret
in
sbb
int3
ljmp
cltd
push
sbb
mov
test
pop
fistpll
inc
adc
rclb
js
ja
packsswb
xchg
push
push
popl
mov
mov
loopne
xchg
push
sbb
jle
int3
xchg
subb
jo
adc
xchg
pushf
aas
or
pop
add
mov
fstps
inc
pmaxsw
jl
negb
fadd
fidivs
movsb
sbb
nop
adc
xor
mov
test
jno
mov
adc
inc
clc
jbe
pop
add
adc
je
adc
hlt
pushf
pop
add
cmpsb
sub
ljmp
rcr
lcall
cmp
inc
fdivrl
sbb
fidivrl
push
addr16
mov
je
psraw
test
loope
xchg
or
pop
adc
inc
jne
ds
mov
sbb
cmp
sub
sub
shrb
mov
lret
mov
xchg
shl
adc
aad
dec
or
push
pop
shl
dec
cmpsl
xor
inc
mov
cmpsl
test
adc
xchg
push
add
jmp
push
sbb
dec
xchg
jecxz
scas
sbb
dec
or
cmpsb
in
test
pop
test
lods
xor
lret
outsl
icebp
in
sbb
jmp
in
test
lret
pop
mov
xor
and
and
fs
and
add
or
popf
pop
mov
imul
lds
sub
xor
fnstenv
stos
push
mov
xor
mov
stos
push
cld
pusha
inc
sbb
fdivs
pop
ja
mov
xchg
add
lahf
inc
mov
mov
xchg
fistps
pop
xchg
sbb
jl
enter
cld
das
mov
xchg
ret
mov
inc
imul
xchg
mov
jle
insl
mov
xchg
sbb
mov
dec
sbb
arpl
pushf
xor
out
ljmp
xor
dec
nop
fs
insl
cltd
adc
bound
and
xchg
lret
push
jmp
adc
pop
add
jp
xchg
aaa
bound
jns
jne
sbb
aam
and
mov
fs
icebp
xor
push
enter
lods
mov
out
pop
dec
xor
or
mov
xchg
adc
dec
test
lret
outsl
adc
xchg
cli
ja
jecxz
loope
adc
lret
push
inc
pop
adc
cld
in
pusha
mull
jle
or
xor
pop
pop
les
mov
andb
sbb
jno
mov
sbb
lcall
dec
insl
icebp
push
outsl
icebp
pusha
cwtl
subb
or
push
lret
test
xor
out
aam
je
stos
or
test
mov
orl
hlt
pusha
or
movsb
xor
push
popf
cmp
dec
adc
movsb
mov
std
data16
aam
mov
stc
arpl
xor
nop
jge
loop
jle
xchg
cmp
push
lods
jno
lods
sub
push
fmuls
mov
popf
cmp
fsubl
sub
xor
sbb
push
pop
repz
cmp
xchg
dec
pushf
cmp
xor
mov
enter
rcrl
test
lock
and
cmp
out
dec
sbb
lds
xchg
repnz
clc
jb
lea
int3
xchg
jmp
in
popf
mov
xlat
jns
pop
or
test
cs
mov
push
cld
js
push
stc
mov
fldl
jl
mov
data16
pop
jo
mov
or
push
push
add
call
rcr
xchg
adc
mov
mov
aad
adc
mov
loopne
fnstcw
cmpsb
jle
and
pusha
imul
sbb
or
adc
pop
or
add
push
push
loopne
pusha
nop
cmp
outsl
jns
jecxz
js
pop
cmpsl
jmp
and
mov
mov
pop
roll
mov
mov
jnp
mov
mov
or
pop
and
dec
sbb
lret
dec
cmp
fstpl
sbb
out
pop
add
cmc
jo
pop
sbb
lcall
mov
enter
ret
push
adc
test
mov
imul
int
roll
decl
dec
push
mov
cs
outsb
scas
and
xchg
cmpsb
adc
mov
shll
lret
xchg
xchg
ret
ret
imul
pop
add
xchg
pop
or
int3
enter
sbb
add
stos
outsb
lock
cmp
jns
push
mov
mov
movsl
mov
std
jge
jo
in
mov
sahf
cmp
jle
adc
in
xchg
shlb
dec
jp
bnd
daa
negl
imul
jmp
mov
hlt
cmp
pop
lods
in
push
dec
mov
and
push
mov
jge
fildl
fmuls
mov
mov
aas
arpl
push
jnp
testb
cld
int
dec
adc
and
test
notl
cmpsb
sub
out
push
cmp
dec
cmp
bound
xor
push
pop
out
imul
and
cltd
inc
imull
xlat
in
insl
add
mov
cmp
or
sbb
xchg
cmp
rorb
sbbl
push
xor
ret
mov
adc
ljmp
mov
loop
fldl
cmp
add
das
xor
leave
outsl
cmp
jnp
jmp
mov
adc
or
xor
jnp
push
pop
das
add
lea
cmp
push
sub
mov
xchg
pushf
fnsave
les
cs
cltd
je
lods
and
xor
xor
gs
nop
sbb
sahf
addl
jns
push
lret
mov
push
rcr
jp
push
xchg
inc
test
mov
dec
mov
push
or
jge
iret
mov
fnsave
test
jae
into
adc
sgdtl
aad
push
pop
incb
pop
rolb
mov
clc
add
cmp
push
add
and
mov
xchg
push
dec
xlat
mov
add
iret
dec
setg
jo
rorb
or
and
or
dec
bswap
pop
sub
add
sbb
fisubrs
jns
jne
jmp
add
mov
xor
insb
jbe
push
scas
push
fs
mov
imul
jmp
push
mov
scas
in
jecxz
fbstp
std
loope
xor
xlat
jge
lods
in
mov
scas
mov
mov
push
jnp
sbb
cmp
sub
or
sub
cmp
inc
pop
sbb
sub
and
fstpt
lahf
inc
cld
push
int3
xchg
sub
cmp
push
inc
repz
jp
cs
outsb
fldl
shlb
sbb
push
sarb
or
loop
shlb
lret
cs
scas
sbb
icebp
mov
and
or
cmp
pop
cli
pop
stos
xor
out
pop
add
mov
fwait
inc
fwait
xchg
lea
int
loope
mov
js
stos
xor
popf
inc
fidivrl
mov
pop
fwait
cmp
pop
cld
ljmp
mov
fnstsw
repnz
mull
test
or
in
fdivs
std
inc
adc
imul
add
stos
sub
pop
out
insl
and
pop
mov
pop
jb
popf
xchg
inc
outsl
in
into
bswap
dec
xlat
ja
or
xchg
sub
call
clc
popa
lret
fldl
push
xchg
lock
add
push
cld
fcom
ret
or
in
outsl
mov
mov
push
std
cld
mov
sub
pop
std
push
adcl
pop
mov
enter
mov
pop
cmpsl
in
outsb
mov
mov
mulb
aas
push
add
cmp
jl
cmp
adc
pop
sti
mov
xor
rclb
add
push
test
inc
or
inc
or
pusha
pushf
inc
and
in
jne
xor
mov
mov
ja
adc
jnp
mov
jb
pop
lcall
lcall
lcall
xchg
jle
sub
repz
mov
sub
rcl
cmp
xchg
loope
out
enter
jo
outsb
loope
xlat
jl
cmc
or
sub
leave
lods
cmp
dec
shlb
pushf
les
mov
add
mov
inc
pop
mov
xchg
cmpsb
stc
popa
jge
jo
cmc
outsl
sbb
test
mov
mov
sahf
mov
add
fcomp
jbe
jns
leave
xchg
fldcw
xchg
pop
shrd
push
fdivrl
loop
inc
ds
scas
subb
cmpsb
insb
xor
sbb
inc
or
dec
mov
into
cmp
pcmpgtd
cmc
insb
jno
inc
out
sub
ret
adc
nop
test
bound
int
cmpsl
mov
mov
and
dec
push
xor
push
cmp
push
mov
insl
shl
jo
js
mov
sub
fwait
ds
pop
insl
add
in
jne
fisubs
mull
sub
jns
iret
cmpsl
and
jl
stos
xor
loopne
mov
loope
in
jbe
repz
xchg
je
aaa
add
sub
dec
push
push
mov
sbb
dec
movsb
sub
ret
cld
push
ja
popf
in
ja
in
lret
sbb
in
cld
cs
sti
iret
jp
lahf
aas
cmp
sbb
jbe
cmc
imull
inc
pop
in
push
add
adcb
sbb
int
inc
adc
jnp
leave
mov
data16
adc
dec
int
jge
int
or
cs
xchg
repz
sub
mov
popa
icebp
and
xor
inc
push
adc
xchg
aam
lcall
aaa
push
stc
inc
mov
cmp
xor
ret
add
mov
mov
test
jg
push
nop
enter
sub
inc
xchg
fwait
cmp
mov
out
push
sub
jg
xchg
aaa
dec
or
lret
ljmp
jle
lahf
scas
popf
inc
or
rorb
pandn
xor
pop
add
sub
jne
outsb
repz
or
lcall
in
and
jge
pop
mov
mov
ds
lock
mov
out
adc
aam
jmp
add
jp
cwtl
inc
jbe
and
inc
mov
push
fxch
xor
rcl
mov
cmp
sub
push
push
pop
das
mov
mov
adcl
and
mov
scas
gs
imul
sbb
xchg
xorb
jns
es
in
je
cmp
icebp
ds
das
pop
loope
push
jne
sarb
push
aaa
cltd
mov
addr16
cmc
pop
sarl
jecxz
mov
leave
imul
mov
mov
int
sti
mov
mov
push
and
mov
mov
sti
dec
inc
adc
mov
movsl
mov
in
add
cmpsb
cmp
pushf
jo
xor
int
pop
clc
and
mov
jp
jle
in
push
inc
scas
ljmp
je
pop
lahf
inc
dec
stos
sarb
pushf
xchg
cmp
inc
cmpsb
sub
fcoml
adc
adc
mov
dec
push
test
scas
sub
mov
in
movsl
ljmp
les
fisubl
xchg
popa
clc
enter
imul
cltd
in
mov
adc
aad
pushf
inc
pop
add
mov
jmp
pushf
loope
idivb
stc
test
xchg
jmp
add
imul
xor
daa
pop
jne
adc
dec
mov
testb
add
icebp
jbe
cs
js
mov
test
dec
sub
les
inc
aas
and
and
mov
icebp
cld
cs
out
loop
pop
xor
xor
jae
pop
jno
in
andb
jmp
hlt
cwtl
cmc
mov
cld
daa
mov
loop
ss
imul
and
enter
insb
out
dec
shrl
out
inc
push
aas
hlt
mov
mov
data16
jb
in
mov
sub
ss
je
dec
or
aas
adc
in
push
add
fdivrs
pop
and
iret
aaa
cmp
pushaw
fsubrs
xchg
push
lods
les
shl
mov
add
fstp
repnz
push
dec
or
add
in
rclb
inc
mov
jmp
push
xor
pop
cmp
inc
mov
mov
push
mov
and
movsb
xchg
lock
mov
daa
mov
rclb
shlb
mov
cli
adc
pop
jmp
lahf
add
mov
pop
ds
lcall
stos
mov
mov
sbb
adc
pop
stc
push
xlat
xchg
nop
adc
sbb
inc
push
push
xchg
pushf
rcll
cli
inc
push
hlt
das
mov
xor
rcrl
cld
mov
lods
loope
ss
jbe
es
add
add
push
jge
fs
mov
lods
sahf
cmp
sbb
dec
or
mov
fidivl
imul
jns
or
mov
xchg
sbb
cltd
cmp
inc
push
lods
loope
mov
mov
sbb
add
gs
dec
pop
test
cwtl
cmp
mov
inc
and
popa
pop
ds
mov
mov
mov
adc
fsubrp
mov
icebp
hlt
nop
and
xchg
inc
mov
pop
iret
mov
mov
jno
in
repz
std
add
push
mov
scas
dec
adc
aaa
outsl
cmc
cmp
push
scas
sub
mov
dec
or
xchg
mov
jae
push
fxch
xchg
pop
cmpl
sub
scas
insb
cs
mov
xchg
cmp
stc
insl
add
and
mov
pop
mov
sbb
ret
movsb
pop
nop
cmp
mov
pop
xchg
out
jno
ljmpw
loopne
orl
cmpsl
mov
mov
enter
nop
cmp
sub
cmp
arpl
lret
mov
test
dec
sti
mov
cmpsl
ss
push
add
pop
ds
mov
test
mov
shll
mov
mov
repnz
scas
aaa
arpl
imul
mov
aaa
pop
cld
dec
push
add
push
nop
inc
xchg
sub
mov
inc
aad
xchg
aaa
addb
mov
aad
in
or
mov
loopne
push
jmp
cli
inc
adc
push
ret
mov
sbb
mov
push
xor
sub
movsl
pop
lock
sbb
data16
mov
jno
jmp
shlb
gs
lods
adc
das
sub
aas
repz
leave
das
lahf
inc
mov
scas
xor
fisttpll
ja
inc
or
adc
adc
mov
dec
loop
nop
dec
faddl
adc
mov
in
mov
push
mov
movsl
or
clc
clc
dec
adc
jmp
enter
pop
add
aam
sub
push
inc
xchg
sbb
int
mov
xchg
inc
mov
jle
inc
stos
jno
mov
outsb
jmp
int
inc
adc
adc
jmp
cmc
jns
int3
or
ljmp
pusha
sub
out
sub
lds
sub
push
stc
mov
flds
into
out
mov
sbb
mov
test
shlb
pop
add
enter
jns
mov
lds
mov
stos
addr16
add
jecxz
sbb
lret
mov
sbb
lock
fnstcw
imul
daa
cmp
sahf
repz
enter
dec
add
es
ret
addr16
repz
mov
ja
lds
xchg
loop
sbb
push
or
pop
add
pop
leave
xchg
div
and
push
leave
xchg
ds
notl
and
fwait
or
jo,pn
jb
push
push
mov
xor
repnz
imul
adcl
lahf
popa
clc
int
mov
fucomi
imul
or
add
xor
scas
push
jb
test
nop
daa
in
jmp
inc
push
sub
xchg
outsb
pop
push
fadd
mov
sbb
sub
pusha
out
leave
pop
sbbb
mov
scas
sub
scas
adc
idivl
ds
xor
and
popa
repnz
or
push
shll
scas
cmpl
roll
int
mov
mov
cltd
popa
bnd
lcall
lods
cs
pop
shrb
push
add
xor
jae
js
mov
adc
sub
xor
pop
or
push
mov
cs
stc
mov
movsl
lret
adc
adc
js
mov
push
inc
mov
nop
inc
lahf
dec
push
push
popf
test
iret
mov
mov
fistpl
xchg
cmp
cmp
cmpsb
mov
fdivl
or
mov
pop
mov
loopne
sti
and
mov
add
mov
sub
mov
sarl
test
inc
fsubs
cmpsl
sub
jle
inc
jno
imul
sbb
inc
daa
mov
aas
xor
jo
aaa
into
xor
add
dec
jb
jnp
mulb
out
jmp
cmc
pop
adc
mov
dec
sub
sbb
xor
jge
and
cmp
xor
mov
out
push
cli
sbb
std
and
ficoml
jne
pop
sub
mov
mov
lea
add
mov
cltd
inc
sbb
push
nop
mov
je
mov
insl
xchg
inc
sahf
aas
inc
lds
jae
add
outsb
mov
xchg
aaa
add
imul
adc
loope
adc
scas
das
movb
aam
jnp
adc
insb
ss
lahf
aas
xchg
out
xor
stos
inc
pop
inc
out
test
lods
xor
or
mov
mov
dec
push
pop
out
jae
push
scas
xor
cmpsb
sub
mov
xchg
ds
xlat
jnp
cs
cmp
sahf
jle
aaa
in
pushf
jne
jmp
addr16
cld
inc
pop
push
int3
xchg
mov
fmulp
xchg
cmp
or
xchg
notl
and
in
popf
push
add
xor
and
push
mov
mov
or
mov
adc
addb
mov
aam
push
push
cmc
adc
pop
inc
xor
js
testb
into
adc
jmp
add
mov
jo
push
call
ret
lds
mul
pop
push
sbb
jnp
insb
lods
inc
sahf
mov
cltd
mov
fsubl
mov
adc
addb
aad
popw
sahf
xchg
sbbb
and
adc
inc
fstpt
stc
mov
dec
stos
scas
adcb
lret
aam
std
add
mov
mov
test
test
jb
ret
das
hlt
sti
stc
nop
sub
dec
pop
scas
jg
insb
add
mov
push
ljmp
jno
jbe
pop
xchg
xchg
es
mov
jl
ljmp
cmp
and
ret
xlat
fsubp
pop
sahf
adc
pop
divb
xor
jge
test
fwait
xor
fldenv
or
mov
push
pop
dec
xlat
outsb
jle
popf
xor
lahf
cmc
mov
sarb
stos
and
fnstenv
inc
xor
jbe
testl
std
jmp
xor
push
cmp
and
push
jmp
rol
pop
cmc
loop
pop
adc
es
xor
lods
inc
pushf
mov
lcall
and
inc
sub
pop
or
scas
mov
mov
add
inc
fdivrl
and
cli
mov
dec
test
sbbl
sti
add
mov
mov
test
fadd
xor
repnz
cli
xchg
sub
out
dec
sbb
cwtl
sahf
ss
mov
push
jmp
or
jb
je
enter
nop
daa
mov
jge
call
add
arpl
and
shrb
lahf
adc
pop
imulb
xor
mov
addb
xor
fsubs
or
mov
pop
pop
dec
xlat
outsb
jl
sahf
xor
iret
sarl
and
xor
je
clc
out
lret
push
lods
cld
out
add
push
xor
and
ljmp
jno
hlt
loopne
pop
adc
nop
daa
dec
xor
jl
imul
arpl
fsubs
mov
inc
sub
pop
arpl
mov
lods
mov
mov
add
inc
fnstsw
and
sti
mov
cmpsb
lods
sbbb
aad
stc
jmp
mov
mov
test
xlat
shlb
icebp
clc
cli
xchg
sub
dec
out
dec
sbb
xchg
popf
ss
mov
push
jmp
or
inc
ds
jb
jae
enter
nop
daa
mov
jge
out
inc
sbb
add
arpl
mov
mov
loopne
lahf
adc
pop
imulb
xor
mov
addl
stc
or
mov
pop
pop
dec
xlat
outsb
jnp
sahf
xor
into
sarb
and
jno
inc
xor
jae
clc
out
lret
sti
out
add
sbb
mov
imul
mov
shll
ffreep
pop
adc
in
fs
add
in
xlat
and
inc
sub
pop
bound
mov
lods
mov
mov
incl
inc
fnsave
and
sti
mov
dec
movsl
stos
sbbb
insl
clc
std
mov
mov
push
subb
sahf
mov
xor
lock
xchg
sub
push
out
dec
sbb
xchg
fwait
ss
mov
and
in
push
jmp
or
or
leave
pusha
nop
xchg
nop
daa
les
scas
inc
pop
add
int3
arpl
and
mov
inc
fimuls
lahf
paddb
sub
dec
jle
addb
xor
aad
stc
push
cmc
mov
pop
pop
dec
fsubrs
jnp
xor
int
mov
stos
and
fidivl
inc
xor
jb
clc
cmpsl
xchg
push
out
enter
in
add
dec
cmp
sahf
mov
or
fmulp
pop
adc
nop
daa
inc
xor
jge
data16
inc
cwtl
test
mov
int3
arpl
and
aas
sub
pop
pusha
or
stos
mov
mov
incb
fnsave
push
fs
xchg
push
movsb
test
sbb
idiv
mov
lea
mov
stos
popf
mov
xor
out
hlt
cli
xchg
adc
inc
inc
sbb
xchg
cltd
ss
mov
and
jmp
jmp
or
outsl
pop
lret
nop
nop
daa
ret
jg
jecxz
inc
adc
ss
arpl
and
cmpl
sti
popa
clc
sub
es
jg
inc
shll
add
mov
pop
pop
inc
fnstenv
jns
xor
int3
int3
mov
lods
push
and
jb
aas
xor
jo
stc
nop
movsl
xchg
push
call
mul
outsl
push
adc
lea
imul
stos
inc
mov
fmul
pusha
push
adc
jle
fs
inc
xchg
addb
jmp
or
cmpl
or
test
lret
cld
add
xor
gs
test
push
mov
ret
fsubrs
stc
mov
mov
mov
lods
fwait
lahf
fnsave
xor
in
repnz
xchg
and
push
jmp
jbe
jo
xchg
xchg
aaa
into
enter
out
push
in
sbb
lods
inc
cmp
jae
insl
pop
lret
bound
scas
jmp
inc
adc
or
push
es
mov
fimull
mov
sub
adcb
jg
fdivl
shll
add
mov
sbb
fidivl
ja
ss
lret
cld
jmp
lods
sbb
fdivl
cmp
cli
xchg
mov
les
scas
cmc
loope
pop
adc
aaa
into
dec
xor
and
lcall
or
fcmove
popa
or
xchg
sub
call
inc
xchg
addb
mov
into
gs
and
add
in
test
and
fsts
or
cmpsl
scas
sub
jle
cli
add
xor
popf
xor
push
data16
subl
mov
rcr
repz
popl
rclb
push
lods
cltd
popf
fidivs
mov
cld
xchg
and
sbb
xchg
xchg
cmp
mov
es
push
in
sbb
scas
inc
cmp
je
imul
mov
sbb
add
mov
fs
daa
mov
mov
inc
fmuls
mov
sub
sub
jnp
inc
iret
fs
add
mov
sbb
jb
jne
aaa
cmpsl
xchg
stc
nop
enter
cli
jmp
fnsave
xor
xchg
mov
ret
repz
adc
es
in
cwtl
test
or
fmul
bound
or
jmp
dec
xchg
jle
sahf
scas
mov
in
and
test
and
push
pop
or
mov
movsl
lods
sub
ffree
jg
clc
decb
das
sbb
std
subl
sbb
rcr
repnz
mov
nop
inc
dec
rclb
pop
scas
cwtl
fidivs
mov
cld
xchg
and
jmp
inc
sbb
nop
xchg
cmp
les
push
in
push
add
je
imul
sub
mov
ud0
mov
arpl
mov
mov
inc
xlat
or
daa
sub
mov
jp
inc
into
fs
out
mov
sbb
je
cmp
mov
scas
sbb
fidivs
cmp
xchg
mov
rcrl
repnz
unpcklps
rolb
bound
out
xchg
subl
ljmp
sub
sub
sbbb
dec
xchg
jl
sahf
lods
mov
addr16
and
xchg
and
pop
or
stc
mov
les
loopne
sbb
jg
mov
sbb
mov
mov
xchg
inc
inc
rcrl
sbb
lret
mov
int
in
std
xchg
push
or
cmp
sbb
mov
xchg
sub
jecxz
out
adc
mov
xor
push
into
mov
in
sbb
mov
or
das
iret
popaw
dec
sub
mov
inc
fst
aad
mov
and
inc
sbbb
jp
fisubrs
int3
gs
std
in
mov
sbb
fdivl
jb
cmp
rclb
sbb
dec
aaa
ss
insb
std
xchg
sahf
mov
mov
jb
or
cs
daa
pusha
fs
out
xchg
subl
arpl
or
sbbl
or
loop
es
xor
push
push
movsl
xchg
cli
mov
ret
hlt
cli
dec
loope
push
mov
jge
mov
sbb
out
icebp
movsb
cmp
adc
xchg
inc
inc
ret
arpl
mov
xchg
loopne
leave
mov
into
out
xchg
sbb
push
in
cmp
je
mov
xchg
sub
loope
out
adc
mov
xor
jbe
gs
iret
data16
in
test
fnstenv
mov
pop
dec
sub
jle
out
test
rorl
add
gs
and
sub
push
inc
sbbl
js
fildll
lret
sti
ljmp
dec
cmp
mov
xchg
ret
pop
cmc
jecxz
mov
pop
loopne
dec
xor
xchg
pushf
xchg
mov
fnstenv
or
cmp
inc
sub
sub
pop
lock
jg
inc
mov
ja
out
int
add
xchg
sub
push
pop
mov
lea
mov
loopne
daa
mov
xor
fisttpll
montmul
cmpsb
test
sti
lahf
cmpsb
sub
sbb
clc
dec
loop
adc
cmp
imul
cltd
popf
xchg
iret
mov
movsl
cmp
push
cld
xchg
inc
inc
ret
pop
jne
sbb
enter
in
call
aaa
cmp
mov
pop
jne
mov
xchg
sub
loopne
lock
mov
xor
ja
gs
iret
data16
in
test
fnstenv
mov
pop
dec
sub
jl
out
xchg
rorl
cld
and
sub
push
inc
sbbl
js
loopne
xchg
mov
sti
call
xchg
insl
jo
cmp
ret
ret
loope
mov
pop
loope
dec
xor
into
fs
xchg
pushf
test
mov
sbb
or
adc
inc
sub
icebp
xchg
jge
inc
scas
mov
ror
add
xchg
cmp
jmp
push
pop
mov
lea
mov
loopne
daa
mov
xor
inc
fisttpll
adc
popf
cmpsb
cs
sbbb
clc
dec
jecxz
adc
add
push
xchg
popf
mov
iret
mov
cmpsb
cmp
ds
les
pop
sbb
enter
loop
add
xor
push
jne
mov
xchg
sub
fistps
adc
mov
das
xor
fs
iret
data16
test
fdivs
sub
imul
lock
rorb
movsl
add
gs
pop
and
sbbl
ja
loope
xchg
mov
cli
out
push
sbb
push
dec
cmp
je
outsl
movsl
cmp
mov
xchg
mov
fistps
mov
push
loop
dec
xor
into
bound
xchg
lcall
mov
aad
or
push
cmp
sub
pop
repnz
jnp
inc
lods
mov
adc
into
int
add
cwtl
das
cmp
jmp
push
pop
mov
mov
movsl
lods
aam
faddp
daa
mov
xor
inc
fisttpll
adc
pushf
movsb
cs
sbbb
testb
mov
add
mov
pop
int
fnsave
cmpsb
cmp
cmp
pop
sbb
mov
iret
loope
add
xor
push
mov
push
jne
xchg
xchg
sub
fstpl
push
cld
mov
xor
bound
addw
aam
mov
or
or
pop
dec
sub
jns
lock
rorb
movsl
add
gs
push
and
push
aas
sbbl
jne
loope
xchg
mov
clc
in
push
pop
sbb
je
insl
movsl
cmp
mov
xchg
mov
ficomps
mov
adc
jns
xor
into
popa
add
push
in
mov
push
mov
aam
or
or
aam
daa
xchg
sub
pop
repnz
jp
inc
lods
mov
adc
int
incl
cwtl
das
xor
push
mov
mov
mov
fcmovnb
sub
sbb
dec
dec
adc
fwait
mov
sbbl
repz
jecxz
adc
add
rclb
mov
lret
jne
jmp
cmp
cmp
les
pop
sbb
ret
scas
cmp
loopne
add
xor
push
mov
push
jbe
xchg
xchg
sub
ficompl
or
mov
sub
dec
shlb
adcb
rcl
mov
add
daa
shrb
inc
sub
js
lock
push
movsl
jmp
std
sbb
sub
sbb
dec
loop
nop
mov
add
jecxz
push
adc
fidivs
imul
mov
fcompl
mov
adc
jp
cs
pop
add
mov
pop
mov
shlb
or
aad
and
pop
repz
inc
stos
scas
jp
loopne
into
gs
add
test
mov
xchg
mov
fld
sub
hlt
cli
repz
dec
filds
adc
cltd
lahf
das
sarb
dec
in
push
mov
add
rcrl
mov
enter
out
cmpsl
sbb
xchg
cmp
mov
jecxz
shrl
cwtl
adc
pop
lock
mov
push
ja
test
xchg
sub
fcomps
or
mov
sub
jns
pop
dec
shrl
jle
cs
out
xchg
shll
movsb
and
shrl
inc
sub
jbe
icebp
mov
lret
cld
jmp
lds
test
mov
add
loope
pop
adc
mov
dec
xor
jbe
imul
pop
out
ficompl
mov
adc
jnp
sub
rcrb
add
scas
mov
mov
shlb
add
aas
cmp
xchg
sub
pop
hlt
mov
dec
test
jnp
fmulp
iret
data16
lcall
test
mov
test
mov
xlat
ret
repz
repz
adc
adc
cwtl
popf
das
into
mov
dec
in
or
imul
pusha
ret
xchg
mov
mov
ja
out
sbb
call
insb
pop
sbb
jp
lods
cmp
fucom
add
xor
pop
mov
push
ja
addl
sub
xlat
pop
repnz
mov
sub
jns
pop
dec
shrl
jge
cs
sahf
out
xchg
shlb
movsb
and
push
inc
sub
jne
icebp
mov
lret
sti
call
lds
test
outsl
dec
jecxz
lea
add
loopne
pop
adc
fbstp
push
std
xchg
mov
fstps
mov
pmulhuw
sub
rcrb
cltd
xchg
jge
out
scas
mov
mov
iret
jne
add
aas
cmp
xchg
sub
hlt
mov
dec
cmpsl
stos
jnp
iret
data16
cltd
xor
sbb
test
mov
subl
mov
shrl
repnz
mov
adc
loopne
dec
adc
xchg
pushf
das
int
test
out
dec
in
or
cmp
inc
imul
pop
ret
xchg
mov
lds
cmpsl
sbb
call
imul
mov
rcr
filds
cwtl
adc
pop
lock
xor
mov
push
ja
addb
aad
pop
repnz
divl
adc
shrl
jl
cs
popf
out
xchg
iret
mov
add
or
push
inc
sub
je
icebp
mov
leave
cli
out
sbb
lds
test
outsb
dec
jecxz
mov
add
ffreep
pop
adc
and
fbstp
cmpsl
ds
test
xchg
mov
lds
sbb
inc
sub
rcrb
add
lods
mov
mov
into
jne
add
aas
aaa
and
hlt
mov
cmpsb
stos
jnp
fadd
iret
data16
std
cltd
xor
sbb
test
mov
subb
lahf
mov
sub
icebp
div
mov
adc
inc
dec
adc
xchg
fwait
das
int3
mov
sbb
in
dec
in
or
jno
ret
xchg
mov
les
cmpsl
ds
add
lds
sbb
jp
stos
cmp
fcmovnu
add
xor
mov
dec
ja
dec
nop
inc
mov
daa
pop
imul
cmp
dec
stos
mov
cli
mov
adc
pop
dec
movsl
xchg
cmp
pop
in
inc
push
dec
fadds
xchg
xor
rcrb
mov
aaa
sub
in
sbb
inc
addr16
mov
mov
mov
and
sub
pop
xchg
daa
lcall
outsl
jge
imul
xchg
or
fcomps
dec
addr16
repnz
xor
mov
sbb
int
xchg
sub
imul
int
scas
iretw
rcll
test
mov
pop
xor
lret
sub
jge
andb
dec
sub
inc
in
mov
cmp
dec
sahf
test
dec
test
ja
mov
mov
or
inc
or
push
out
jmp
clc
dec
mov
icebp
pushf
fstl
inc
cld
push
mov
mov
xor
or
push
jle
jns
mov
jmp
jmp
hlt
into
adc
test
ds
pop
adc
les
pushf
stc
jns
xor
mov
mov
xor
aas
xchg
std
xlat
dec
test
cmc
out
mov
aaa
hlt
loopne
cwtl
sbb
leave
cmp
test
es
outsb
jp
mov
call
mov
cmp
adc
mov
mov
and
mov
pushf
sbbb
fwait
jle
les
pop
fdivrl
ljmp
repnz
sbb
ret
dec
add
stos
mov
imul
sub
adc
adc
inc
daa
push
xor
hlt
nop
mov
push
sub
adc
int
fs
adc
movsb
push
pop
mov
loope
push
inc
push
arpl
rcrb
sbb
lcall
in
sbb
daa
filds
add
add
add
xor
add
add
add
add
and
add
add
add
add
sbb
add
add
add
add
mov
scas
jl
or
scas
std
or
lds
jno
or
stc
movsb
sbb
scas
pop
add
js
out
popf
in
sbb
sarl
loope
cmp
jnp
add
cmp
lret
les
dec
xchg
cmp
or
pop
and
stos
std
addr16
pop
jmp
hlt
adc
je
and
xchg
sarl
fnstcw
ljmp
pop
cmp
xor
pushf
push
or
mov
adc
jmp
frstor
mov
aad
in
es
arpl
xor
pop
data16
into
cmpsb
idivl
sub
sbb
push
rorl
fwait
scas
out
fcompl
or
dec
enter
mov
xchg
fisttpl
outsb
jecxz
jnp
ds
je
adc
out
sbb
pushf
stos
sub
imul
mov
mov
iret
sub
rcrl
orb
inc
jne
adc
pop
cmp
lods
mov
stos
ss
loop
adc
in
sahf
movsl
test
xchg
lock
cltd
sahf
and
rclb
icebp
push
fs
xchg
cli
add
xchg
lret
pop
fidivl
enter
inc
fstpt
mov
sub
adc
movsb
sub
mov
mov
xor
and
mov
push
cmpsl
cmp
into
cmpsl
pop
xor
movsb
mov
mov
leave
dec
shlb
clc
jbe
dec
or
jmp
outsb
xchg
scas
popf
mov
inc
test
mov
and
sbb
sbb
pop
xchg
hlt
adc
dec
scas
dec
add
push
ljmp
or
outsl
or
mov
in
stos
pushl
or
add
ja
scas
std
or
push
shlb
aas
push
mov
push
cmp
pop
dec
jbe
mov
xor
jb
mov
cli
jbe
jle
jnp
imul
mov
in
cmpl
fcomps
jne
sub
push
pop
aad
jne
xchg
test
jne
mov
adc
sbb
add
lods
cli
fcoms
dec
jb
int3
xor
adc
out
ret
leave
fidivl
fisttpll
push
mov
ret
in
cltd
cld
pop
fnstenv
out
insb
stc
lea
fcom
jp
jb
leave
mov
jmp
xchg
pop
js
cmp
push
dec
push
incl
and
ret
insl
pop
or
inc
out
fwait
sti
jl
cmp
insl
dec
xor
outsl
shrb
mov
aam
sbb
xorl
cmpsl
scas
push
pop
hlt
lcall
rcrb
insl
mov
out
pop
cmp
test
addl
lods
incb
jbe
jo
test
dec
mov
stos
ss
pop
sbb
out
or
jns
mov
xor
fiadds
adc
dec
rcrl
or
xchg
nop
pop
inc
xor
mov
inc
loop
cmp
fidivl
hlt
icebp
adc
jmp
rclb
push
shr
in
inc
sub
shr
pop
xor
js
jno
jecxz
sub
sbb
inc
cmpsl
jno
into
adcl
sbb
adcl
sub
push
out
jecxz
adc
adc
add
fisubl
popf
into
mov
push
sbb
push
in
arpl
loope
loop
orb
push
cmp
hlt
icebp
adc
xor
stc
cmpsb
jns
cs
dec
pop
sub
ret
pushf
inc
xchg
out
jo
jbe
adc
xlat
sti
mov
cmp
loope
loop
repnz
push
testb
jns
rorl
push
xchg
push
xchg
mov
cwtl
sub
xlat
addr16
loope
xchg
push
aas
push
and
lcall
cli
push
mov
lods
add
mov
repnz
lret
icebp
adc
in
pushf
fsts
push
mov
jno
stos
aam
or
push
or
sub
add
mov
sub
aad
scas
sub
fdivrl
enter
ds
lret
mov
adc
bound
loop
jmp
mov
push
fistl
mov
sub
nop
cld
mov
push
push
fisubl
pushf
mov
cld
lods
bound
je
cld
mov
ss
imul
pop
mov
mov
jg
xchg
filds
shlb
adc
imul
xchg
ret
cwtl
lea
test
sbb
push
je
iret
pop
sub
mov
dec
pop
pop
sbb
jbe
outsb
test
add
xlat
dec
or
and
add
add
sbb
and
int
fistl
outsb
fwait
push
dec
mov
adc
aaa
lahf
out
inc
mov
or
fidivl
xor
mov
dec
les
jbe
sub
push
dec
gs
push
mov
lahf
mov
mov
xchg
aam
dec
or
mov
or
mov
enter
lahf
das
xor
sbb
es
in
sub
cld
sub
jg
sarl
ret
es
in
pop
and
decl
fildll
jae
mov
icebp
cwtl
lret
add
notb
loopne
jmp
popa
pusha
jne
inc
jecxz
out
bound
cmp
in
dec
sahf
arpl
inc
add
add
sbb
jg
call
lret
std
jne
xchg
sub
pop
out
scas
mov
cmp
idivb
in
pop
jb
and
je
loop
sub
insl
nop
xchg
xchg
lods
rcr
shlb
sub
cmp
mov
xchg
rorl
hlt
sub
dec
scas
cli
xlat
or
sub
stc
divl
xchg
testb
mov
js
out
mov
lcall
adc
cmp
sub
cwtl
fs
dec
call
add
arpl
pop
xchg
sbb
inc
gs
dec
push
or
rep
fbld
ljmp
jle
fdiv
leave
or
xlat
test
jnp
popf
icebp
jmp
xchg
insl
mov
lds
mov
mov
mov
xchg
mov
test
mov
andb
jecxz
test
inc
cmpl
sub
fdivrs
xchg
adc
xchg
lahf
daa
aam
cmc
or
xchg
movsb
or
and
out
sahf
mov
push
adc
