aas
rorb
or
jecxz
test
daa
xor
add
bnd
mov
lcall
jb
sub
pop
xlat
mov
mov
lahf
lds
lods
rcrb
xlat
cmpsl
push
jmp
jne
xchg
and
sbb
js
xchg
or
ljmp
sbb
add
sub
std
push
das
out
adc
mov
pop
aad
push
lods
out
into
aaa
sbb
pop
jbe
xor
pushl
xor
push
js
mov
cmp
iret
jnp
xchg
inc
mov
call
mov
xchg
cmp
into
fidivrl
lcall
out
rcll
in
lahf
ds
decl
sarl
mov
subb
push
insl
xchg
inc
out
mov
jle
fnstsw
ss
sub
test
imul
lret
pushf
cmp
cmp
call
jp
inc
cs
cmc
or
or
mov
popf
jbe
sub
addr16
jmp
cmpsb
popf
jl
loop
out
pop
clc
lea
jmp
xchg
xchg
nop
in
insb
jno
sub
push
sar
pushl
xor
fbstp
mov
cmpsb
sbb
fwait
and
xchg
movsl
mov
pusha
dec
mov
ljmp
loopne
jno
aam
sbb
insb
xor
sub
sbb
popf
cmc
inc
inc
xchg
dec
mov
call
cld
cs
xchg
sub
lods
mov
andl
jp
shrl
sub
aaa
test
negl
into
repnz
movsb
sub
pop
and
incl
push
mov
test
cmp
outsb
and
mov
data16
sti
mov
loopne
sbb
cli
jbe
fcmovnb
sbb
adc
mov
dec
loop
pushl
pop
jecxz
jno
test
je
lods
arpl
sbb
lods
and
testl
pusha
call
inc
stos
loop
inc
mov
xchg
leave
cmpsb
cmp
sbb
sub
leave
add
jo
push
arpl
mov
fld
lcall
jg
dec
dec
pop
pusha
call
cld
xchg
dec
roll
mov
idivl
lods
mov
sti
iretw
data16
lcall
xlat
or
ret
sub
xchg
insl
dec
pop
pop
ret
ljmp
push
mov
or
adc
shr
fdivrs
pop
shlb
fidivrs
and
decl
push
push
daa
mov
or
xchg
xor
ljmp
sbb
xchg
imul
ret
jmp
mov
fdivl
ds
insl
enter
lcall
mov
ss
mov
and
in
les
mov
add
arpl
decl
daa
adc
ret
addr16
dec
and
and
push
lahf
pop
loope
xlat
and
mov
repnz
decl
inc
mov
push
sbb
sub
pop
pop
push
int
jne
lcall
fimull
pushl
push
inc
roll
pop
pop
iret
xchg
outsl
fdivl
mov
mov
call
dec
dec
xchg
push
inc
sbb
jg
push
mov
sub
repz
or
pop
hlt
jg
jne
subb
push
jbe
movsl
push
bound
mov
cmp
ljmp
nop
push
inc
in
push
or
or
add
lret
pop
push
idiv
mov
push
mov
add
jg
lret
adc
adc
dec
mov
mov
fcomps
sbb
push
inc
divb
xor
cmp
lret
or
lcall
and
jnp
js
popa
xor
push
leave
inc
call
inc
jg
mov
sub
cs
sub
pop
push
fcomi
aad
cwtl
xchg
lret
ds
adc
pushl
and
dec
mov
mov
adc
mov
fmulp
bound
movsb
adc
sbb
or
test
jbe
jecxz
mov
push
cli
call
push
inc
mov
xchg
jmp
data16
xchg
push
jl
sub
lock
data16
shlb
in
and
cmp
dec
lds
mov
xor
inc
iret
insl
mov
mov
iret
loope
jg
jmp
pusha
in
xchg
int3
dec
mov
add
cmpsl
andl
ljmp
ljmp
jo
insb
movsb
into
int3
xor
or
lcall
out
decl
jge
or
out
cmc
cmp
xlat
xlat
sbb
adc
je
sbb
cmpsb
lcall
inc
inc
dec
push
lahf
inc
mov
negl
fidivrs
and
fs
sbb
lock
dec
inc
ljmp
call
dec
mov
adc
lds
fstpl
sub
call
xor
lcall
mov
into
pop
cwtl
int
mov
into
pop
mov
sbb
jae
mov
cmp
sbb
out
jbe
xchg
sahf
leave
dec
push
hlt
xchg
int3
jmp
dec
mov
lahf
arpl
add
stos
decl
movaps
jnp
add
fdivs
jb
jp
clc
subb
imul
dec
push
and
lock
sbb
mov
outsb
mov
and
xor
pushl
or
bound
jnp
xchg
pop
sbb
repz
jp
sahf
xor
or
decl
les
jge
push
jmp
dec
subb
data16
sbb
mov
sbb
cmp
sub
fdivl
into
addb
adc
sbb
and
jp
pusha
popa
mov
xchg
push
out
stos
imul
insb
jne
jmp
mov
jne,pt
ds
repnz
jnp
add
sarb
call
add
jmp
rolb
pop
add
fst
push
mov
xor
pusha
push
mov
jb,pn
jle
cmc
push
decl
jb
in
mov
sub
stos
push
sbb
adc
clc
aad
pop
pushf
or
jno
imul
es
aas
mov
add
add
pop
pop
stos
and
ljmp
adc
dec
sub
jmp
and
or
fnstcw
push
mov
daa
xchg
ret
xor
pop
mov
in
sub
and
dec
test
dec
stos
sub
dec
cmp
stos
ss
test
sub
call
or
cld
arpl
add
or
cmpsb
adc
pop
xor
out
jmp
mov
decl
sub
xchg
subl
jns
push
or
mov
pop
lock
rcrb
and
repz
sub
xchg
rol
add
pushl
jns
std
xorb
mov
sbb
pop
cmpsl
push
cmp
call
pop
mov
xchg
lret
xchg
std
adc
lahf
scas
xchg
cmp
incl
rcll
dec
sti
sbb
or
int
gs
iret
xor
jmp
dec
gs
push
dec
cmp
jg
push
stc
sahf
xor
les
lods
or
push
or
aam
inc
mov
call
sub
lcall
in
xchg
push
sub
imul
bound
mov
mov
frstor
into
cmc
ljmp
adc
add
lock
inc
push
xchg
cmpsb
data16
rolb
pushf
fs
xorl
sub
in
lcall
negl
mov
aas
test
shrb
inc
into
or
push
inc
stc
jne
fdivr
inc
popa
jmp
jge
and
jb
divl
aad
pushf
mov
mov
cmc
jnp
and
ja
ja
xor
scas
jle
xor
inc
cli
jecxz
and
lret
push
fld
jne
lods
js
sbb
xor
xchg
cmpsl
dec
pop
es
fsubs
push
cmp
popa
push
dec
cmc
lods
test
inc
in
ljmp
jge
mov
lahf
divb
mov
movsb
bound
sub
in
mov
pusha
jb
dec
pop
push
mov
sub
paddusw
push
mov
ljmp
lcall
out
lea
ljmp
movsl
pop
cmpsb
mov
xchg
ja
lcall
push
mov
fsub
rcrb
cmp
scas
test
cltd
nop
sbb
cmc
cmp
jbe
dec
mov
cs
inc
inc
pop
push
push
das
stos
xchg
dec
pop
fsubrl
or
lret
out
aam
iret
jg
push
sbb
fbstp
leave
mov
bound
shl
dec
cmpl
lcall
nop
mov
insl
in
cmp
adc
mov
pop
inc
pop
std
mov
mov
mov
or
std
stc
sbb
stc
adc
mov
das
sahf
mov
xor
sub
mov
mov
std
adc
and
add
mov
sub
mov
cmp
cltd
adc
mov
jg
and
sbb
ret
pop
dec
mov
repz
cmpsl
in
mwaitx
fs
ret
xchg
addr16
dec
gs
dec
dec
mov
cmp
insb
addr16
add
sub
inc
push
sub
insb
addr16
mov
sub
cmp
fistpll
adc
aas
xor
out
into
mov
xor
decb
test
mov
nop
rdpkru
popf
loopne
iret
mov
fstpl
xor
sti
inc
fidivrl
ret
mov
andl
xor
dec
mov
sahf
push
jne
xor
pusha
mov
mov
xorb
push
push
imul
mov
add
mov
andb
mov
push
and
xor
jae
fistps
adc
adc
ds
imul
and
imul
loopne
or
dec
out
mov
inc
add
inc
lahf
loopne
outsl
and
rorb
adc
out
or
sub
xchg
cmp
push
rcrb
enter
leave
jnp
mov
outsl
sub
ret
or
inc
push
xor
xor
or
add
fs
dec
add
xor
add
push
or
dec
std
mov
inc
adc
decl
cmp
lret
pop
out
in
mov
pop
ds
and
sub
jmp
popa
push
cmpsb
dec
xor
pop
mov
dec
je
fwait
and
test
repnz
mov
call
push
lea
lret
ljmp
mov
xchg
scas
xchg
ret
inc
sub
ljmp
mov
xchg
push
xor
sbb
sti
pop
xchg
arpl
mov
pop
mov
push
dec
mov
cltd
add
mov
mov
mov
cmp
in
out
xor
adc
and
scas
sub
dec
mov
test
or
ljmp
dec
in
out
std
inc
test
xchg
or
mov
add
xor
in
gs
or
incl
int3
lea
mov
jmp
loope
pop
mov
popf
and
pop
mov
mov
lock
ret
push
pop
add
call
ds
and
xor
call
add
inc
push
ret
daa
dec
imul
xchg
mov
xor
xlat
jne
int3
ss
mov
inc
mov
dec
push
mov
or
push
leave
call
jb
add
and
enter
inc
enter
adc
adc
add
and
sbb
inc
xchg
shlb
adc
add
adc
add
subl
in
andb
and
sahf
imul
leave
insb
mov
or
cmp
sub
outsb
js
iret
repz
xchg
test
out
cmp
repz
in
out
cmp
repz
push
es
ss
push
data16
repz
lcall
into
fsubrp
adc
and
inc
push
bound
sahf
out
xchg
jl
out
out
push
mov
iret
es
pop
push
cmp
repz
mov
mov
ss
repz
push
data16
repz
repz
stos
mov
cmp
repnz
cmp
cmp
repz
push
xchg
mov
mov
shl
repnz
cmp
mov
ss
push
iret
repz
push
mov
repz
loop
push
movsb
sbb
out
sub
dec
pop
push
jns
out
xchg
mov
jns
out
push
movsl
push
sub
repz
dec
pop
outsb
jle
cmp
repz
imul
cmpsb
adc
sahf
out
sahf
ss
pop
push
mov
out
sahf
scas
ret
sahf
out
div
cmpsb
out
cmpsl
push
es
jns
out
push
data16
xchg
out
sahf
out
mov
repz
cli
or
cmp
repz
outsb
adcb
mov
out
test
cmp
repz
test
pop
repz
rep
jle
sahf
mov
repz
ret
repnz
adc
xor
bound
out
jb
xchg
mov
out
shl
testb
iret
repz
push
cs
pop
outsb
cmp
repz
mov
iret
repz
out
or
sub
dec
pop
outsb
sahf
out
sahf
adcb
popf
idivl
cli
lods
out
lods
push
xor
push
data16
sahf
jns
out
scas
mov
cmp
repz
iret
repz
pop
outsb
adcb
cmp
out
or
sbb
cmp
out
sahf
out
jp
lcall
lret
ds
mov
iret
repz
pop
push
cmp
repz
sahf
scas
mov
shl
mov
mov
push
es
repz
pop
outsb
jle
repz
mov
sahf
cmpsl
stc
cmp
or
sahf
out
push
data16
xchg
out
sahf
out
mov
out
sahf
ja
testb
jbe
sub
dec
out
sahf
out
data16
xchg
lahf
out
sahf
stos
ret
testb
out
sahf
ja
push
sub
push
je
pushf
scas
ret
imul
in
cli
or
out
xor
pop
cmp
jnp
jbe
mov
cmpsb
mov
repz
push
mov
ss
out
sahf
out
jle
scas
iret
sarl
testb
es
cmp
repz
xchg
add
out
mov
and
adc
mov
incl
pop
xor
fdivl
scas
mov
stc
shlb
jno
xor
repnz
push
daa
and
in
ss
lcall
imul
add
xchg
sbbb
rcrl
in
cmp
test
gs
ljmp
ret
movsb
push
scas
and
ja
fs
call
push
arpl
imul
mov
fcomp
lcall
jae
roll
sub
xchg
enter
out
ss
mov
pop
xchg
decl
in
xchg
lods
shlb
mov
pusha
jbe
xchg
stos
mov
xchg
xchg
out
stos
incl
test
xor
mov
aaa
or
xor
or
mov
mov
aam
cltd
inc
stos
popf
xor
or
cmp
into
inc
scas
pushf
out
insl
adcl
xor
out
shrl
inc
or
jl
xor
ljmp
faddl
push
mov
inc
dec
cmpsl
fsubl
pop
adc
xchg
dec
xor
xorl
cmp
dec
sbb
jle
aad
in
mov
pushl
lret
movsb
or
or
inc
xchg
aam
out
mov
bound
test
pop
and
mov
fcomip
int
fnstcw
mov
inc
mov
movsl
mov
pusha
insl
jg
pop
mov
ljmp
ret
push
push
dec
xchg
xchg
mov
clc
mov
repz
iret
lcall
dec
mov
jmp
mov
push
and
xlat
mov
sbb
les
xor
push
pop
mov
stc
mov
nop
call
das
in
std
fnstsw
adc
sbb
sub
dec
lds
decl
cmp
repz
insb
ficomps
push
xor
cltd
and
icebp
push
xor
mov
ljmp
decl
and
in
dec
jb
pop
push
imul
in
or
mov
sub
cmp
loopne
mov
test
and
mov
sar
pop
xor
jne
inc
hlt
ljmp
scas
inc
dec
unpckhps
cmpb
imull
lret
pop
in
pop
jl
add
mov
lret
lcall
jmp
dec
bnd
cmpsl
cwtl
das
outsb
cmc
mov
jg
decl
or
mov
or
jmp
repnz
mov
outsl
cld
xchg
in
jmp
mov
cmp
repz
ss
leave
dec
lods
xlat
cmp
imul
push
and
add
enter
in
adc
adc
call
adc
or
xlat
jb
adc
incl
mov
lahf
pop
insb
cli
popa
inc
dec
mov
ss
jg
jmp
ret
cmp
dec
rorl
push
adc
push
mov
lea
push
push
jg
shlb
aas
xchg
das
lahf
sub
into
pusha
add
add
stos
or
add
adc
and
push
add
or
or
or
or
test
push
je
xchg
jmp
jo,pt
scas
stos
pusha
outsb
or
sbb
repnz
sub
or
xor
jecxz
mov
stc
js
and
jne
mov
add
pcmpgtw
frstor
arpl
sti
fcomi
xor
jecxz
cmp
add
add
iret
or
cmpb
sbb
xor
jmp
mov
sub
or
pop
fs
int
iret
add
cmpsb
or
add
add
divb
lods
sub
fistpll
sub
sbb
add
xchg
call
ss
adc
push
add
adc
aas
adc
xchg
inc
push
add
pop
and
add
push
add
adc
ret
lahf
out
incl
inc
or
xchg
orb
loop
sub
xor
add
ss
in
out
repz
cmpsl
stc
push
jns
push
loope
add
addl
jg
das
mov
ret
add
mov
pop
adc
push
sbb
and
cmp
mov
loopne
test
in
insb
js
insb
push
adc
idiv
mov
or
outsl
pop
sbb
add
cmp
jbe
adc
or
aas
clc
outsl
mov
insb
cmpsl
adcl
stc
push
dec
insl
or
mov
sbb
xchg
cwtl
or
mov
dec
push
add
add
insb
push
cld
or
adc
push
xchg
inc
scas
in
arpl
mov
sbb
jne
xor
js,pt
negb
into
xchg
or
in
and
xchg
rolb
aas
mov
sub
or
bound
lahf
push
fs
pop
cld
in
xchg
mov
pop
inc
in
imul
das
lahf
jg
repz
add
adc
in
xchg
mov
mov
arpl
sub
push
pop
pop
xor
subl
or
mov
jmp
in
cli
arpl
sbb
pop
add
cmc
lret
cmpb
in
dec
lahf
xchg
arpl
dec
fbstp
pusha
es
rcl
rcrb
xchg
aam
fwait
lods
stc
lahf
push
xchg
mov
xlat
add
push
js
fwait
in
add
jno
add
jbe
or
ss
shl
fstl
aad
loope
ds
test
ss
add
dec
loopne
insl
testb
nop
push
call
in
aaa
into
sub
jmp
ss
cmpsb
push
pusha
adc
push
call
adc
push
mov
in
insb
mov
xchg
loopne
cmp
hlt
fucomi
call
pop
xchg
adc
aad
xorl
out
fisttpll
xchg
cld
lahf
call
mov
arpl
push
pop
fwait
pop
add
xchg
jbe
push
loope
cmpsl
mov
std
sti
pop
push
jecxz
and
push
es
jno
push
mul
mov
ljmp
push
jle
xchg
cli
or
sbb
scas
neg
shrb
xchg
push
loope
out
mov
ds
push
loope
pop
dec
push
pusha
push
push
fwait
dec
add
jg
pop
call
add
sub
sarb
mov
or
adc
pop
jecxz
dec
cmp
mov
xchg
push
pop
mov
mov
adc
js
dec
sbb
icebp
or
mov
aam
pushf
push
pushf
add
enter
push
sub
aam
insb
push
lahf
jb
pop
sti
call
mov
fucomip
add
inc
popf
movl
ret
pop
xor
mov
jg
test
subb
addr16
pusha
imul
pop
pop
jle
pop
lock
jmp
movsb
rolb
jp
dec
pushf
dec
or
jecxz
outsl
jle
fdivrl
mov
sub
sub
cltd
lea
mov
js
stos
fdivr
pushl
int
inc
xchg
rol
dec
and
mov
in
mov
dec
es
andl
push
andl
loopne
ss
jno
push
jmp
fsubrl
or
sub
in
dec
pop
cltd
sub
ret
fcmove
sbb
mov
adc
idivb
sub
push
ss
call
shl
lahf
lea
lea
insl
popf
es
fbstp
sbb
mov
xchg
lods
inc
sub
or
cwtl
mov
ret
mov
insb
jnp
test
pop
ss
aam
sbb
lcall
add
xchg
jecxz
inc
cmp
lock
in
pop
push
xchg
rcr
pop
in
inc
push
push
and
push
loope
pop
jns
or
xchg
pop
adcl
push
decl
jle
jnp
cmc
and
dec
add
inc
aas
out
je
inc
sbb
lcall
sarl
sti
fisubl
mov
mov
mulb
es
fildl
sub
fisttpll
push
xchg
xchg
or
aas
in
cmpsb
ljmp
cmovae
out
add
lcall
es
mov
lcall
push
in
mov
jecxz
fs
clc
outsl
jmp
mov
sbb
jecxz
stos
pop
aaa
add
das
pop
lock
inc
aam
push
push
push
scas
adc
clc
sbb
fcomip
out
clc
sub
cmp
test
lahf
kmovw
sbb
fmuls
xchg
adc
jp
mov
cs
sub
lock
les
ss
or
iret
mov
ljmp
push
int
stos
lods
cmp
jle
jge
push
lock
repz
dec
dec
aaa
dec
pop
dec
dec
xor
dec
fs
decl
jne
js
pop
insl
push
jns
outsl
xor
cmp
jne
arpl
jb
inc
jns
dec
dec
jp
mov
popa
push
js
push
pop
inc
pop
inc
dec
jo
inc
inc
pop
jns
inc
insl
insl
jmp
push
cmp
push
push
cmp
outsl
je
inc
aaa
gs
imul
insb
push
outsl
dec
jg
decb
jno
pop
xor
outsl
aaa
jb
xor
outsb
inc
cmp
jae
outsl
popa
dec
push
pop
pushl
push
arpl
jb
cmp
push
jne
arpl
xor
push
je
push
pop
jp
fstpt
std
cmp
ja
jo
arpl
xor
jno
ja
outsl
inc
lret
pushl
ret
dec
ss
popa
dec
outsl
pop
jo
push
jb
popa
inc
xor
push
inc
gs
lock
jge
xor
pop
mov
gs
dec
pop
sub
push
paddd
inc
dec
dec
xor
push
ja
mov
ret
push
mov
push
inc
inc
push
dec
dec
insl
movsb
imul
inc
inc
dec
xor
jg
jp
xor
aaa
push
push
dec
arpl
js
xor
dec
jbe
xor
xor
incl
dec
insl
outsb
dec
xor
outsl
stos
push
xor
imul
decl
push
inc
dec
popa
inc
cmp
inc
push
gs
popa
jbe
dec
pop
shl
push
rolb
xor
inc
push
adc
add
pop
fs
adc
sbb
sbb
xchg
add
lcall
xor
add
sbb
dec
fcom
push
roll
pop
dec
repz
daa
lock
int3
xlat
inc
sahf
or
jbe
imul
or
adc
inc
sahf
or
sbb
test
fs
push
push
in
nop
out
fiadds
cs
iret
call
es
cmc
inc
mov
jo
mov
mov
imulb
sub
outsb
sbb
jbe
push
or
push
mov
adc
pusha
ss
int
pop
aaa
inc
push
adc
adc
idivb
or
sbb
xor
mov
sbb
jbe
dec
lahf
xor
inc
data16
mov
lods
aad
rorb
std
sarl
int
loop
loopne
inc
xor
std
jbe
shll
fcomi
xchg
dec
dec
mov
push
mov
orl
add
addr16
idivb
sti
lcall
or
push
std
adc
jp
daa
out
dec
fdivl
dec
push
out
mov
faddl
ds
ja
js
rolb
aas
sti
jbe
or
das
addr16
or
ss
adc
ja
rorl
in
cld
aas
lds
inc
fisttpll
inc
push
sbb
adc
add
dec
jo
lock
xchg
xor
cs
rorl
test
xchg
loop
ds
xlat
inc
aas
inc
add
loope
mov
pop
jbe
pop
test
sub
outsb
push
cmp
outsl
and
pop
fadds
es
jb
push
aas
cmp
loope
xor
cmp
aas
add
scas
leave
sti
mov
test
sub
mov
pop
push
insb
mov
data16
out
icebp
sarl
add
mov
fchs
dec
mov
jmp
int3
cmpsl
stc
pop
lds
jns
test
stc
or
pop
sti
fiaddl
das
jge
in
int
insb
les
out
or
dec
or
loope
adc
into
loope
ja
push
jae
loop
pop
mov
pop
inc
icebp
dec
push
scas
ds
imul
push
in
out
out
xorb
inc
aaa
or
imul
mov
xor
cs
insb
pop
inc
sbb
gs
jb
je
arpl
push
gs
stos
std
insl
push
outsl
outsb
cs
gs
jbe
add
pop
jb
insl
imull
dec
outsb
and
imul
push
imul
gs
outsl
arpl
mov
pop
dec
or
pop
xor
fcmovne
jbe
push
imul
push
jne
jns
ss
outsl
push
outsw
jb
popa
outsb
arpl
sbb
push
adc
std
mov
jne
mov
popa
fs
addb
add
mov
mov
cs
ds
adc
mov
jmp
loop
popa
jb
outsl
dec
insb
in
insb
shll
inc
jns
sub
sub
fwait
std
ret
insb
jae
movsb
mov
pop
arpl
das
adc
imul
inc
in
inc
addb
addr16
popa
divb
rolb
push
jb
jge
outsb
cmp
fs
jae
imul
hlt
gs
jbe
mov
push
or
inc
imul
or
ss
and
inc
ret
popa
xor
inc
mov
insl
mov
xor
sbb
popf
mov
sbb
fs
jb
scas
cmp
xchg
jae
mov
cld
fisubs
xor
call
push
outsb
push
cmp
jo
xor
shr
out
out
fwait
push
outsl
xchg
and
imul
add
insb
xorb
jo
push
cmp
popa
imul
or
pop
adc
pop
push
cmp
adc
push
jns
inc
shl
in
jbe
add
jb
loop
dec
sub
gs
pop
jb
jae
push
cwtl
lds
mov
jnp
mov
fsubl
gs
outsl
mov
dec
gs
push
pop
movzbl
inc
jbe
jo
jae
jg
pop
popa
mov
or
es
movsb
outsb
loopne
mov
adc
add
push
dec
mov
jg
jns
sbb
int3
dec
xchg
pop
pop
aas
and
mov
push
or
or
inc
or
push
mov
loopne
add
and
or
insb
sub
push
repz
clc
test
push
jo
cmpsb
sub
imul
leave
sbb
scas
mov
jbe
xlat
jbe
lcall
pushf
jge
pop
roll
adc
sub
and
inc
and
sbb
arpl
lds
lahf
test
enter
fnstsw
repz
aaa
and
xchg
scas
popl
insb
push
sbb
pop
push
push
pop
insl
dec
sahf
jae
mov
push
mov
daa
inc
rcrb
testl
sub
push
testl
sbb
ret
fstl
insb
aad
ljmp
in
or
rcll
xor
push
sub
fsubrs
les
inc
jo
loop
cwtl
jo
adc
sbb
dec
add
sub
push
sbbb
sti
push
jecxz
loopne
mov
push
movsb
add
es
add
inc
xor
pop
pusha
add
vhaddps
ret
jnp
push
ds
pushw
sbb
xor
ret
adc
mov
fld
jno
je
rcrb
inc
fdivs
movhps
arpl
cmp
add
insl
xorl
xchg
jno
mov
jo
popa
jo
pushf
push
add
lock
jecxz
pop
pop
sbb
outsl
pop
inc
inc
cmpsl
mov
xchg
adc
imul
mov
sub
je
sbb
imul
jae
ja
ret
repz
push
or
sahf
jmp
in
out
or
pop
sbb
fcoms
sbb
inc
decl
or
push
or
orb
sub
mov
call
and
or
inc
push
and
inc
push
mov
add
add
nop
inc
add
inc
push
add
add
add
inc
push
call
subl
inc
add
fs
add
nop
push
add
add
adcl
nop
add
push
and
add
sub
mov
xor
sub
jmp
mov
xorl
and
adc
incb
adc
and
test
xchg
incl
pop
add
add
adc
enter
nop
inc
add
add
or
inc
inc
inc
push
andl
inc
add
popa
adc
add
add
fs
add
nop
inc
inc
and
or
add
nop
push
add
add
xorl
or
push
subl
push
add
adc
leave
and
add
mov
push
inc
push
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
mov
push
aaa
jg
mov
add
add
xor
pop
xor
xor
inc
mov
add
add
fnstenv
pop
add
add
add
add
add
mov
mov
mov
adc
addb
addl
fidivs
addl
or
sbbl
sub
sbb
outsl
fcmovnu
cwtl
add
orl
addl
jnp
cwtl
ud0
jmp
mov
scas
push
xchg
sbb
je
gs
sbbb
imul
cmp
sub
pushl
nop
fs
je
rorb
and
ds
add
roll
mov
pop
roll
shll
insb
rclb
jns
jg
shrb
and
loop
or
push
incl
jg
pop
les
call
add
imul
mov
flds
mov
outsl
push
push
pop
add
cld
imul
pusha
ds
dec
subl
inc
das
adc
std
jbe
sti
fildl
push
add
push
aad
ret
stos
in
jnp
repz
test
xchg
xor
ss
cmp
fmul
fld
or
loope
ss
imul
loopne
stos
xor
dec
add
ja
pop
imul
push
mov
mul
jecxz
pop
push
fucomip
push
addr16
push
scas
mov
aad
pusha
add
rcrl
fstp
mov
add
aaa
addl
or
into
add
mov
cltd
cmpsb
test
arpl
aas
push
sub
scas
xor
test
fcmovne
add
dec
test
cltd
add
pop
stos
pop
push
out
sarl
dec
cmp
mov
shlb
dec
shll
mov
xchg
insl
pop
movsl
pusha
or
int3
mov
and
add
stc
rcrl
dec
jnp
inc
in
or
jg
fstpl
mov
or
loope
lcall
popf
idivl
sti
movsl
bound
add
ss
or
js
cmc
add
movsl
mov
and
pop
insl
popf
cmpsb
imul
leave
in
push
pop
lds
adc
fildl
xchg
test
mov
sub
sbb
mov
loope
lret
cld
aaa
insl
stos
push
shll
mov
out
pop
das
outsb
lock
add
push
jnp
addl
imul
imul
dec
push
shlb
cmp
loopne
loope
clc
and
stc
int
push
notl
testb
andb
inc
cmp
fnsave
cmp
loopne
icebp
push
jnp
cs
fidivrl
sbb
lcall
pop
sbb
cmp
push
jne
fidivs
xor
roll
xor
mov
sub
inc
ret
aam
pop
push
lgs
icebp
jge
imul
shl
out
mov
mov
and
sti
nop
add
wrmsr
dec
std
xlat
lods
mov
xor
stos
lret
push
mov
in
fwait
cmp
jnp
addr16
mov
or
or
xor
shrl
add
add
pop
cmp
cmp
dec
mov
xchg
mov
sbb
movsl
sbb
lahf
cmpsb
xor
and
shr
shrb
divl
sbb
loopne
dec
xor
xor
andl
cmp
loopne
jl
jo
stos
pop
shll
roll
aad
aas
dec
sarl
or
mov
shll
ja
iret
das
in
mov
sbb
lock
push
mov
pop
xor
pop
push
pmaxub
xor
mov
sbb
iret
pop
ja
xor
lock
sbb
xor
aas
or
lods
stos
add
mov
nop
and
imul
repnz
ljmp
in
lock
fsts
sti
and
mov
xor
jo
jmp
insl
push
ljmp
cld
push
in
sar
out
fcmovnu
ss
fwait
jo
jmp
xor
call
jle
pop
test
or
pop
push
sbb
cmp
push
lahf
jo
sub
xor
xor
imul
jge
jp
dec
pop
jg
add
xor
leave
jnp
add
dec
push
add
mov
ds
push
add
popl
cmc
scas
push
adc
add
rcll
jbe
jb
xchg
and
out
clc
cmp
fimuls
jno
cld
or
xorb
inc
add
inc
ljmp
mov
add
push
enter
cli
mov
adc
sub
pop
sbb
add
cmp
sbb
dec
pop
ja
das
adc
testl
add
xor
in
fiaddl
sbb
sbb
cmp
or
mov
insb
dec
inc
xchg
lahf
jbe
add
jle
mov
add
inc
imul
adc
pushf
aam
jg
pop
hlt
outsb
jbe
xchg
jo
and
in
je
lea
jo
mov
call
je
and
je
insl
lcall
arpl
nop
or
or
or
lock
push
fistpll
addb
mov
add
xchg
inc
mov
cld
test
test
add
push
or
sub
add
scas
push
adc
fisubs
xor
push
push
mov
and
adc
in
fbld
push
clc
js
cld
xor
jo
insl
push
sbb
bound
and
add
ret
fwait
add
or
add
pop
inc
add
add
fmuls
cmpsl
repnz
sti
in
adc
add
gs
add
insb
jg
adc
jb
xchg
add
jbe
insb
add
addr16
dec
add
mov
add
add
shlb
xor
or
add
inc
inc
jp
pusha
shll
jo
xor
xor
push
je
cs
adc
add
ficompl
add
adc
inc
inc
cs
cmpsb
xor
add
daa
push
mov
es
loopne
add
and
mov
jl
mov
pop
bound
pop
dec
cld
or
or
add
pop
or
lods
movsb
add
xor
insl
sti
push
pushl
mov
mov
incb
add
fsubrp
ret
cld
add
lret
add
jno
add
divb
sahf
add
les
xor
sti
add
in
pushl
add
add
inc
add
cld
add
xor
sbb
idivb
mov
cli
push
add
xlat
lock
pop
xor
fcomp
and
and
and
sub
sub
cld
sbb
pushl
xor
xor
cmp
mov
loop
addr16
imul
pushl
outsl
jno
jae
jne
jbe
xchg
mov
pop
pop
lahf
incl
testb
jge
pushl
mov
pop
aas
mov
aas
add
cmp
sbb
ljmp
aas
sbb
xor
add
add
xor
rorb
or
push
add
cmp
jne
add
add
mov
lock
sub
jbe
sub
mov
pop
xchg
jle
aaa
sarl
out
sub
loopne
sub
mov
lds
or
jl
mov
and
sbb
xor
add
inc
in
and
rcrb
lock
dec
cld
in
fcomip
jp
stos
cmp
lret
xchg
stos
gs
imul
in
call
mov
pop
js
push
mov
mov
add
mov
push
int
pop
inc
mov
nop
pop
sbb
dec
ss
mov
arpl
adc
lods
mov
in
scas
mov
or
out
lods
mov
out
clc
pushl
lock
out
lret
add
lret
or
push
cmpsb
jmp
jg
into
add
adc
pop
jl
mov
fld
pop
sbb
sub
pop
nop
mov
rolb
mov
aaa
std
pushl
jno
cltd
sti
repz
test
mov
inc
pop
int
mov
sbb
ljmp
arpl
ret
lds
mov
pop
xchg
xor
es
mov
neg
out
mov
jecxz
sub
std
sub
inc
shlb
std
xchg
outsl
clc
call
or
arpl
decb
mov
sbb
sub
mov
icebp
or
jge
loopne
mov
jg
adc
das
push
sub
addb
pop
jae
or
adc
imul
test
add
inc
sub
call
pop
fistpl
push
push
or
and
adc
rolb
int
outsl
mov
out
les
mov
rorl
add
adc
sti
cs
cmp
adc
outsb
push
int
add
repz
outsb
add
aaa
fsubrs
les
push
inc
scas
push
push
add
cmp
mov
insb
lcall
push
xor
jnp
jo
ficoms
inc
or
add
dec
lret
pop
inc
push
cmp
add
pop
shll
cmp
add
sbb
out
insl
adc
daa
push
add
mov
adc
stos
sub
shll
xor
pusha
neg
add
jle
inc
push
or
pop
and
faddl
jp
cld
or
jo
and
pushf
imul
and
enter
sub
mov
insb
jmp
xlat
test
dec
shrb
inc
dec
or
test
sqrtps
fadds
adc
inc
sbb
mov
add
push
mov
or
cs
outsl
cmp
in
jg
cwtl
pop
mov
dec
mov
in
xchg
lahf
pop
je
add
repz
cmp
sbb
sarb
in
mov
pop
add
sets
pop
sarl
daa
or
pop
aaa
add
jle
or
rolb
add
pushf
pusha
add
lahf
add
movl
outsl
scas
pop
push
mov
push
loopne
das
sbb
add
push
aaa
sbb
loopne
and
push
outsl
fwait
push
sahf
lock
adc
mov
add
stos
fwait
shrb
loopne
dec
mov
mov
mov
dec
pop
out
cmp
or
add
ret
sti
mov
jo
sub
ss
pop
jbe
loopne
lods
iret
add
mov
jnp
loopne
mov
dec
add
lods
shlb
sub
push
xor
and
rorl
mov
in
add
loopne
out
nop
sbb
aaa
xor
push
and
in
xor
push
push
dec
jnp
ja
mov
jg
mov
add
loopne
and
mov
inc
loopne
lcall
add
aaa
pop
mov
repz
xchg
test
cmp
loopne
in
icebp
imul
popa
xor
push
js
insb
lods
add
or
inc
and
jo
push
stos
loopne
xlat
push
pop
ret
pushf
jo
mov
fcmovnb
loope
roll
push
lock
push
outsb
add
loopne
or
jp
adc
insl
cmovp
stos
mov
gs
or
imul
sbb
push
push
ljmp
int3
loopne
clc
jns
loopne
stos
pop
loopne
xor
or
rorl
add
loopne
cmpsl
stc
xchg
mov
stos
mov
es
xor
loopne
stos
lret
cld
loopne
cmpsb
adc
adc
cmp
push
jmp
xor
pop
pusha
jp
pop
stos
repz
push
add
out
add
xchg
add
insb
dec
add
add
sbb
push
push
shll
sbb
clc
mov
jae
loopne
imulb
push
pop
mov
sbb
mov
sbb
xor
in
scas
adc
xchg
inc
add
cwtl
mov
sub
xlat
out
push
sbb
aaa
sbb
ficompl
jmp
jo
divb
or
mov
pop
dec
push
aam
push
add
loop
and
repz
sub
sub
js
adc
or
cmp
push
div
and
inc
sbb
and
dec
sbb
sub
mov
loop
scas
sbb
dec
lods
xorb
loope
fsub
pop
fmuls
ficompl
mov
int3
mov
int
or
ss
mov
sbb
sbb
loopne
or
adc
std
jno
jle
jecxz
adc
cmp
jns
call
stos
scas
loopne
mov
mov
hlt
pop
add
jo
lret
jo
lods
push
roll
or
subl
loope
mov
inc
pop
push
fwait
jno
and
ds
jle
in
jle
jo
jb
ja
push
push
lock
lahf
mov
fimuls
cmpsb
jo
sbb
xor
mov
lock
out
sbb
rcrl
adc
out
adc
jmp
lock
lock
mov
mov
jb
mov
dec
cmp
jo
inc
sbb
lock
imul
mov
cmpsb
xor
insb
jno
sbb
or
int
stos
and
mov
das
mov
jecxz
shl
inc
loopne
pop
inc
inc
shrb
imul
and
push
movsb
add
rclb
inc
imul
movsb
jo
lock
jo
mov
jns
adc
mov
jbe
lahf
mov
in
pusha
and
arpl
inc
inc
push
adc
fucomp
out
xchg
xor
sbb
jge
mov
cvtps2pd
add
rclb
adc
cmpsb
inc
stos
jecxz
lock
xor
cmp
jno
or
inc
add
jbe
iret
adc
sub
push
dec
cmpsb
shl
sbb
negb
pop
sbbl
mov
repz
add
sbb
lock
mov
insl
pop
xlat
dec
jne
add
adc
cs
pop
mov
das
or
jno
test
jns
ja
xchg
lock
add
xor
cmc
cwtl
adc
cmpsl
push
sahf
outsl
pop
mov
repz
std
adc
mov
jno
sbb
stos
push
mov
add
les
roll
stos
or
add
pop
or
fisttpl
int3
pop
add
add
cmp
fbstp
add
pop
add
add
add
jge
push
add
int
dec
add
add
dec
add
add
std
fwait
mov
movl
inc
add
inc
add
jp
add
insb
pushl
jle
push
jl
add
push
add
add
add
adc
adc
add
fs
xor
sti
mov
mov
adc
push
add
add
ss
add
fdivr
sbb
pop
add
add
and
pushf
and
bound
nop
or
push
insb
testb
add
sbb
pop
add
add
sbb
add
cmp
add
movb
add
nop
or
adc
push
mov
jno
arpl
add
add
add
pop
mov
mov
pop
fwait
push
add
add
dec
add
jo
or
jp
pop
js
xor
add
fsubr
add
sbb
and
daa
adc
and
insb
mov
rcrl
nop
adc
add
add
or
add
adc
add
add
add
add
int
fwait
or
cmp
mov
adc
fsubrl
and
push
add
dec
add
push
sub
cmp
ret
es
pop
add
add
add
mov
dec
adc
dec
push
add
xor
add
jbe
mov
push
add
add
sub
add
sbb
outsb
add
add
and
push
add
xor
add
adc
fsubrl
nop
add
or
aas
push
faddl
add
add
add
addl
xor
xchg
xor
xor
adc
aaa
jg
add
xor
repnz
add
xor
mov
push
add
xor
aaa
push
add
xor
jecxz
add
xor
out
repz
ret
dec
add
adc
mov
pop
repz
jg
cmpsb
xor
test
dec
add
xor
stos
dec
add
xor
scas
jg
aaa
jg
add
xor
mov
add
xor
mov
add
xor
mov
inc
add
xor
add
ds
xor
jg
push
repz
add
inc
lret
add
adc
add
xor
add
aaa
jg
aaa
ss
xor
shlb
xor
aaa
jg
xor
add
xor
xor
add
cs
xor
aaa
jg
add
xor
add
sub
xor
add
shrb
add
xor
int
cld
int
ljmp
in
and
in
xor
add
and
rcr
cld
add
xor
add
and
add
sbb
int
cld
in
inc
add
and
cmp
and
cmp
add
cmp
sub
add
sub
cld
int
xor
sub
xor
push
xor
fistps
push
das
add
xor
sub
xor
sub
fildll
add
sub
adc
cld
int
cld
add
cmp
add
inc
sbb
add
fistps
add
inc
sbb
inc
pop
add
int
dec
adc
add
push
adc
adc
lret
syscall
orb
push
mov
or
push
push
add
and
push
fsubrs
push
push
adc
into
pop
push
push
adc
fsubr
fsubrs
adc
push
push
push
pop
adc
imul
adc
add
pop
adc
mov
rcrl
mov
adc
add
add
dec
push
add
add
add
and
adc
or
stos
outsb
add
push
or
push
or
inc
push
or
sub
push
inc
sbb
movups
lcall
cmp
cmp
jbe
push
inc
adc
js
cmp
or
dec
cmp
xchg
push
call
xor
adc
xor
cmp
adc
xchg
push
xor
in
push
adcl
jp
push
dec
adc
mov
sub
inc
adc
mov
ret
or
sub
adc
adc
xchg
dec
ss
dec
adc
push
test
mov
adc
adc
and
dec
adc
ds
data16
push
sbb
adc
or
fwait
loope
add
mov
sbb
dec
sbb
adc
ss
notb
adc
aam
adc
add
sub
adc
adc
adc
adc
pcmpeqb
jb
mov
loopne
or
adc
push
mov
or
push
adc
add
push
sub
add
xchg
adc
xor
push
adc
fwait
jg
xor
pop
pop
xchg
pop
pop
mov
add
add
mov
mov
add
mov
mov
pop
popl
push
pop
jmp
stc
fwait
test
adc
dec
pop
lods
add
aas
dec
pop
scas
scas
fbstp
pop
lret
pop
nop
add
int3
add
int
mov
lret
addb
add
add
pop
xchg
add
xchg
or
mov
add
pop
xchg
add
pop
xchg
insb
pop
xchg
ljmp
rolb
add
pop
fwait
add
pop
pushf
add
pop
pusha
xlat
incl
popf
add
pop
sahf
add
pop
lahf
lret
sub
mov
jmp
pop
mov
pop
movsl
decl
mov
pop
cmpsb
rolb
cmpsl
add
pop
test
es
test
add
incl
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
pop
mov
movsb
pop
mov
add
mov
incl
adc
mov
add
pop
mov
add
pop
roll
pop
ret
add
ret
pop
decl
pop
lds
or
movb
pop
movl
pop
leave
add
mov
pop
or
decl
pop
or
and
and
pop
or
and
push
or
and
jmp
and
popf
and
sahf
and
mov
and
lods
and
and
jmp
inc
or
inc
or
and
or
or
and
shlb
aaa
or
pushl
or
xor
aam
xor
shlb
xor
popa
and
or
and
or
and
sti
jmp
or
and
or
and
or
and
mulb
or
xchg
add
nop
and
divb
add
and
or
pop
or
and
pushl
or
or
sbb
or
and
sbb
push
or
and
or
and
in
adc
or
adc
mov
and
xchg
add
or
or
and
xor
or
hlt
pop
lock
pop
or
pop
or
and
add
pop
fisubl
pop
or
xchg
and
and
and
or
push
or
mov
or
and
and
or
and
and
mov
push
and
push
mov
dec
or
dec
or
dec
or
dec
or
dec
or
inc
mov
inc
or
and
incl
inc
or
cmp
pop
and
or
or
cmp
jg
clc
or
ss
xor
shll
or
and
ljmp
and
or
and
or
and
or
and
or
and
mov
daa
and
lods
and
and
mov
and
iret
sbb
scas
and
lcall
or
and
sbb
ljmp
sbb
and
or
and
adc
es
or
adc
adc
gs
push
and
push
or
pop
daa
in
outsl
es
insl
or
inc
sbb
inc
cld
or
es
insl
mov
test
or
and
or
and
mov
cmp
mov
jle
push
or
or
aas
or
and
mov
nop
and
or
ljmp
call
xor
xchg
and
or
or
and
or
rolb
clc
pop
and
or
add
sbb
or
add
sbb
add
sbb
add
pop
or
add
adc
or
add
adc
add
adc
add
loopne
push
or
add
or
jecxz
pop
in
mov
insb
or
add
out
pop
hlt
pushl
or
push
jmp
pop
or
add
pop
or
pop
pop
or
pop
out
push
pop
jle
mov
jo
push
or
push
push
sub
push
or
pushl
or
push
push
or
adc
dec
or
adc
dec
or
adc
dec
or
adc
push
dec
or
sbb
inc
or
sbb
inc
or
sbb
inc
or
sbb
push
inc
or
and
ds
and
cmp
inc
inc
cmp
cmp
sbb
jg
or
sub
xor
or
sub
xor
cs
xor
decl
das
or
xor
sub
or
xor
sub
ss
sub
icebp
push
daa
or
push
lock
and
mov
or
inc
push
sbb
or
inc
push
sbb
inc
push
lcall
or
dec
push
push
or
dec
push
adc
dec
push
adc
dec
push
prefetchwt1
aaa
insb
or
or
mov
push
push
or
mov
or
push
or
push
push
or
roll
xor
pop
insl
fistl
push
pop
jp
sub
xor
aaa
xor
xor
cmp
push
xor
xor
xor
xor
xor
xor
inc
xor
mov
ljmp
inc
xor
inc
xor
inc
xor
dec
xor
xor
mov
rorl
dec
xor
xor
push
sub
dec
xor
xor
push
push
mov
lds
cmp
xor
push
sbb
insb
pop
repnz
xor
push
xor
push
xor
pop
xor
xchg
pop
xor
xor
pop
xor
pusha
push
ss
fdivs
pusha
xor
xor
xchg
loop
adc
test
mov
stos
adc
stos
adc
lods
adc
lods
adc
scas
adc
adc
adc
mov
lds
xchg
mov
mov
push
lods
mov
adc
mov
shlb
arpl
mov
repnz
adc
fsubs
mov
inc
mov
arpl
mov
rcll
ret
pop
shlb
jno
push
js
push
jg
rcrl
cmp
adcl
add
xor
mov
and
adc
lock
add
inc
stc
adc
cs
adc
adc
inc
adc
inc
adc
pop
and
mov
mov
and
and
and
push
and
orb
adc
add
cmp
repz
testb
hlt
repz
repz
in
in
out
lcall
scas
sahf
out
sahf
fisubrl
jns
out
xlat
stos
fisubrs
out
fcompl
shl
mov
pushf
rclb
sahf
rclb
idivl
outsb
push
insl
repz
repz
mov
mov
repz
push
imul
repz
fsubs
arpl
ret
repz
fisubs
sahf
ja
bound
shlb
out
sahf
out
xchg
push
xchg
push
sahf
out
sahf
xchg
push
xchg
push
xchg
push
jns
sarl
dec
lahf
dec
push
sahf
out
sahf
out
popf
dec
pushf
dec
sahf
out
sahf
fwait
dec
lcall
jns
inc
xchg
inc
xchg
cmp
mov
aas
ds
cmp
cmp
repz
mov
mov
xchg
cmp
repz
aaa
test
test
cmp
repz
iret
repz
xorl
cmp
repz
das
jge
jl
cmp
repz
iret
repz
jns
js
pop
sbb
pop
sbb
sbb
sahf
out
push
pop
adc
mov
mov
mov
aas
mul
pop
jae
push
inc
mov
ds
cmp
insl
jle
cmp
cld
jmp
and
push
cmp
sbb
xor
movsb
add
push
lahf
pop
jle
fs
imul
xchg
push
and
outsb
jp
pop
add
or
std
nop
inc
std
jmp
mov
in
inc
stos
je
fldl
adc
scas
aaa
imul
mov
cmp
lcall
lods
cmpsb
cmpsl
ficoms
push
xchg
mov
ret
and
sub
mov
jg
or
cmp
and
and
sub
orb
mov
aas
jmp
sbb
mov
test
or
mov
push
out
jns
sub
adc
lcall
leave
sub
push
dec
add
add
outsl
mov
stc
mov
incl
subb
mov
pop
adc
pop
outsl
dec
data16
jmp
xorb
outsb
lret
xchg
ss
and
xchg
mov
add
addr16
xor
jbe
xchg
dec
mov
cmp
mov
mov
cld
sbb
xor
xchg
add
and
fidivl
sub
in
pushl
imulb
sub
in
mov
test
lret
sahf
aas
sti
rorl
adc
mov
incl
gs
inc
jge
push
xchg
movsl
jg
xor
mov
sub
mov
incb
add
pop
mov
insb
xor
xor
pop
xor
push
push
fisubrs
imul
pop
fistpll
lds
pushl
xor
xor
xor
xor
xor
xor
xor
xor
imull
scas
dec
sarb
or
outsl
jmp
sub
push
int3
pop
or
int3
xor
xor
xor
xor
xor
xor
xor
xor
jne
pushl
insb
jno
fs
div
ret
outsl
out
pop
jb
movsl
inc
mov
mov
pushl
dec
xor
iret
jo
dec
jo
ljmp
mov
ds
fldt
dec
lcall
adc
lret
ss
mov
ss
ss
ss
inc
rcrb
jl
cmpsb
jg
jmp
or
mov
jp
lods
xor
clc
sub
shl
lcall
pop
xor
xor
ja
mov
xor
lcall
addb
sub
arpl
out
adc
cmp
fidivrl
push
cmp
cmp
cmp
cmp
cmp
cmp
rorl
mov
shrb
test
inc
cltd
lret
jo
dec
cmp
or
call
aas
aas
sarl
lcall
aas
in
mov
cld
pushl
hlt
pusha
mov
and
cmp
sar
or
pop
sub
icebp
xor
xor
xor
pop
xor
pushl
xor
jae
xor
xchg
xlat
xor
mov
dec
scas
inc
scas
pushl
jmp
and
lahf
xor
jl
jge
xchg
inc
push
sub
std
push
cmpsl
or
or
dec
ret
loop
add
ss
pop
shll
ljmp
inc
mov
mov
mov
mov
mov
inc
adc
ret
cmp
nop
aaa
push
aaa
mov
inc
aaa
shlb
cmp
outsb
cmp
cmp
pushl
lock
insb
push
sbb
clc
filds
adc
sbb
cmp
cmp
jg
adc
sbb
fdivs
movsl
cmp
mov
test
lds
ret
and
icebp
cli
add
add
call
sti
push
cmp
cmp
cmp
fidivrl
inc
mov
jge
cs
loop
inc
jb
mov
cltd
add
pusha
or
loope
test
jb,pt
xchg
ds
ds
ds
or
sub
lret
push
mov
add
call
js
nop
data16
call
xor
xor
xor
xor
xor
xor
jg
out
inc
cmp
push
sub
cmpsb
outsb
ja
or
into
push
jge
add
cmp
out
enter
icebp
cmp
cmp
cmp
mov
es
mov
std
pushw
sbb
arpl
cmp
cmp
cmp
cmp
cmp
decl
xor
jle
repz
lahf
les
pop
fs
fldcw
sahf
out
pop
adc
fdivrs
sub
inc
aas
lret
out
aaa
push
or
sub
lcall
bound
cmp
imul
je
lahf
xor
mov
fidivs
scas
or
push
mov
test
sub
loope
decl
adc
jmp
push
pop
out
sbb
jecxz
push
pop
cmp
sub
sub
ss
cmp
cmp
cmp
or
test
idivb
pop
mov
aas
jnp
cmp
addl
mov
mov
imul
lcall
sahf
lahf
pop
mov
cmpsb
cmpsl
push
test
scas
scas
dec
mov
mov
mov
mov
mov
mov
ret
cmp
mov
leave
lret
int
iret
das
rcl
shrl
aad
xlat
daa
fstp
fistps
loope
jecxz
in
out
jmp
out
out
psllw
repz
div
pop
lock
stc
cli
sti
add
mov
inc
lds
movl
lcall
inc
inc
inc
add
dec
dec
dec
add
push
push
push
add
sbb
adc
adc
adc
sbb
add
add
popa
sbb
pop
add
add
add
sbb
add
add
popa
sbb
das
add
je
xor
ds
mov
loop
sbb
incl
andl
adc
mov
std
fistpl
outsb
rolb
mov
sbb
orb
pop
incl
jg
test
add
addb
lea
sbbl
pusha
add
call
adc
add
push
rclb
rorl
addb
mov
add
add
or
in
adc
adc
jmp
add
bswap
sbb
daa
rcr
sbb
dec
out
add
dec
sarb
add
popa
add
imul
or
insb
sub
gs
je
lcall
lcall
xchg
gs
add
or
mov
inc
lcall
rclb
fldt
inc
add
orl
lret
push
xlat
inc
xchg
cld
mov
cmpsl
rolb
rclb
cmp
aas
clc
outsb
push
pushf
je
mov
push
push
shlb
cs
xor
aaa
lock
push
decl
mov
jae
jb
lret
add
dec
loope
fwait
adc
xchg
rorb
or
or
push
cmc
rolb
fisubl
dec
or
mov
lds
mov
pop
sahf
inc
loop
clc
add
sbb
sub
or
add
push
fidivl
rorl
rolb
fs
add
or
add
xchg
inc
fmull
lret
inc
inc
xor
incb
sub
add
add
aad
add
movups
adc
loop
dec
into
arpl
pop
push
outsl
loopne
je
push
add
adc
pop
and
mov
in
dec
nop
stos
add
add
jb
test
adc
add
xor
nop
push
add
add
pusha
push
std
ljmp
pusha
adc
pusha
and
insb
sub
xchg
inc
jl
pusha
xor
andb
loop
cmp
lds
das
ja
jo
std
jg
bound
pushf
sbb
das
loope
call
insb
lcall
fistl
push
adc
or
loop
hlt
mov
mov
push
imul
or
lcall
outsl
adc
jl
and
iret
das
js
in
xor
cs
xor
jl
add
loop
outsb
inc
add
arpl
popa
push
mov
lret
insb
aaa
cld
add
popa
xchg
add
xchg
xchg
jle
mov
lea
fmull
jnp
mov
xchg
mov
xor
pop
add
sbb
pop
jecxz
ljmp
jae
je
inc
push
pop
test
pop
addl
jecxz
call
sub
repnz
xor
adc
push
add
cs
pushl
in
notl
std
jmp
sti
xor
jmp
add
sub
add
in
call
sub
inc
hlt
popa
adc
and
enter
mov
mov
fidivl
and
cmp
cmp
sub
sbb
sub
pop
add
add
jmp
pop
sbb
pop
stos
cmpsb
call
es
std
push
out
and
jmp
ljmp
out
shrb
pop
movsb
xor
inc
stos
in
mov
movsl
add
popa
or
testb
add
pop
stos
cli
stos
mov
out
mov
in
hlt
jo
mov
ja
add
loopne
add
ds
sub
cmp
icebp
mov
fdivrs
test
outsl
test
sahf
jo
cmpsl
mov
jbe
decl
sbb
in
lds
pusha
push
addb
jp
test
inc
mov
push
dec
cmpsl
dec
and
push
pop
push
mov
sub
pop
loopne
jae
jo
arpl
mov
xorb
pop
xchg
sub
rcr
adc
rcr
add
sti
movsb
sub
in
mov
or
repnz
add
mov
call
add
gs
xchg
ja
ret
fwait
insl
cwtl
mov
fisubl
mov
outsl
jle
pushf
gs
arpl
jmp
into
and
js
sub
add
mov
outsb
cwtl
mov
popl
mov
lcall
sahf
xchg
jl
stos
mov
andl
mov
andb
idiv
scas
sub
dec
and
mov
popl
push
jno
add
ljmp
push
out
xor
push
pop
outsl
in
sbb
inc
add
stc
add
shrb
in
scas
clc
mov
fnsave
xchg
xorl
sarb
test
clc
mov
nop
jg
inc
mov
dec
sbb
call
pop
aad
inc
add
mov
pop
pop
pop
cmpsl
inc
adc
mov
adc
cli
push
xor
inc
or
or
scas
adc
sbb
push
test
mov
outsb
clc
scas
inc
movsl
or
push
push
ret
or
sbb
incb
push
sbb
pop
out
cs
out
adc
loope
sbb
hlt
in
stos
push
std
push
inc
or
mov
inc
mov
inc
jp
movsl
add
ljmp
mov
mov
inc
fdivl
dec
divl
jg
mov
leave
add
cmp
or
pop
add
clc
dec
push
jbe
fisttps
mov
dec
add
adc
pop
sbb
sbb
mov
push
lcall
or
shrb
insb
cld
pop
imul
or
inc
call
std
jmp
mull
loopne
div
mov
add
popf
and
xlat
int3
cs
call
fsubrs
ret
add
movsb
mov
mov
dec
stos
cli
in
or
push
dec
mov
mov
pop
mov
xor
cld
lock
in
icebp
add
dec
es
mov
cmpsl
pop
dec
fistpl
inc
dec
mov
inc
dec
mov
orb
arpl
mov
or
cmc
in
outsl
push
cs
fistpl
loop
add
testb
rolb
pop
xchg
xchg
mov
call
xchg
addr16
imul
inc
xchg
hlt
or
add
pop
mov
je
dec
dec
mov
aas
sbb
mov
push
add
mov
pop
add
aas
rol
adc
aaa
cld
cmpsl
call
add
ss
loopne
and
aam
scas
mov
mov
mov
mov
jo
mov
mov
dec
pop
ret
push
push
mov
call
inc
xchg
push
push
inc
mov
shr
ljmp
out
lock
sbb
add
cmpb
loopne
in
adc
push
pop
decl
or
bound
mov
jae
xchg
or
add
lcall
incl
adc
mov
popf
mov
lahf
jno
fwait
mov
test
xor
das
and
jge
mov
mov
call
in
add
call
andb
pop
ljmp
or
mov
das
out
and
rol
aad
add
fwait
hlt
fsubl
lret
jecxz
xor
roll
xor
add
js
imul
add
mov
add
out
lds
or
add
lock
sbb
jecxz
sub
or
add
mov
mov
and
jecxz
loope
fbld
out
cmc
add
and
and
add
adc
in
sub
sub
xor
xor
bound
js
repz
mov
data16
xchg
xor
ja
pop
push
add
inc
or
sbb
push
or
sub
mov
sub
or
jae
sahf
mov
xchg
mov
and
mov
jb
sbb
push
clc
xor
and
out
sbb
sbb
jmp
cltd
dec
pushl
cltd
mov
pop
movsb
mov
inc
nop
lods
mov
sbb
mov
loope
jmp
mov
xchg
xchg
cltd
mov
lahf
addb
std
sbb
adc
lock
btr
pop
out
push
fbstp
and
push
out
dec
mov
mov
je
mov
lcall
push
outsl
add
outsb
data16
xor
gs
push
push
add
cli
push
std
mov
pop
pop
cmpsl
push
test
mov
inc
pop
andb
xor
movsb
and
jno
leave
adc
xchg
xchg
or
ljmp
jb
or
pusha
pop
mov
dec
pop
inc
jb
test
aas
jo
push
std
scas
or
pop
inc
push
arpl
mov
push
mov
xor
jb
fcomip
jmp
xor
inc
pop
pop
mov
and
add
fldenv
lret
and
loop
in
insb
decl
add
in
jmp
or
lcall
insb
mov
imul
data16
xorb
mov
shl
jg
dec
dec
mov
dec
dec
add
rorb
sbb
add
aam
loopne
scas
sbb
in
es
pop
icebp
inc
das
cmp
push
shrb
ss
pop
jo
outsl
jle
mov
or
fidivs
add
std
adc
add
sbb
icebp
add
inc
push
inc
lock
push
je
mov
ljmp
mov
jns
lahf
and
jno
jg
add
xchg
js
mov
stos
push
mov
cld
dec
xor
inc
mov
jmp
push
and
lcall
push
mov
push
pop
lods
movsb
pop
dec
xchg
call
cld
jmp
jg
lcall
or
leave
sub
adc
pop
pushl
lahf
add
xchg
stos
mov
lods
mov
stos
mov
lcall
mov
add
mov
mov
mov
stos
xchg
lea
jg
mov
inc
test
add
pusha
inc
ds
jmp
shr
in
xor
bsr
movsl
mov
inc
mov
and
mov
sub
test
repz
mov
test
pop
or
dec
xchg
repnz
mov
repz
jg
lock
cld
call
xor
js
pusha
mov
call
fldl
and
xor
stc
sahf
adc
jg
mov
push
push
in
cld
out
adc
in
cli
adc
fadd
sarb
add
xor
fmuls
fcmovu
xor
cmpb
mov
xchg
xchg
je
insl
mov
arpl
or
roll
in
int3
cmc
mov
subb
pushf
cld
push
add
loope
mov
decl
fistl
or
jnp
ja
jle
rolb
or
data16
mov
add
ja
jnp
jmp
jns
jp
add
xor
sbb
lods
mov
test
push
test
pop
in
out
adc
bound
xchg
popf
popa
cmp
ljmp
adc
sub
les
sub
adc
or
or
adc
psrad
add
loopne
sbb
adc
adc
cwtl
cltd
sbbl
add
stos
movsb
dec
inc
adc
hlt
repnz
push
fsubl
incb
cltd
sub
ja
test
out
pop
pop
and
ret
cld
pop
loopne
sbb
adc
inc
lock
ror
les
mov
mov
push
mov
cmpsb
pop
add
inc
xor
mov
mov
mov
je
mov
dec
mov
sub
insl
add
jb
mov
test
and
int
fldl
adc
mov
pop
add
inc
push
add
call
scas
adc
ltr
ja,pt
add
jns
add
add
and
aaa
jle
in
cmp
xor
push
adc
cmp
ljmp
mov
push
add
scas
decb
push
shr
add
add
or
std
decl
cmp
ljmp
jmp
mov
aam
loope
xchg
fidivrs
mov
add
sub
inc
ret
imul
mov
mov
test
sub
fwait
incb
std
rol
in
dec
sub
iret
iret
add
out
loopne
icebp
leave
movl
ss
mulb
sbb
lock
in
adc
add
adc
cli
sub
sub
jecxz
testb
pop
cmc
mov
repnz
jmp
mov
scas
cli
adc
cmpsb
dec
jecxz
out
fwait
les
or
mov
jge
scas
lods
or
sar
in
incl
shll
rcr
outsb
mov
scas
push
aaa
adc
cmpsb
pop
sbb
ljmp
inc
pop
mov
add
or
push
dec
dec
mov
pushl
ror
int
add
cmc
clc
add
lret
aam
mul
hlt
add
arpl
ljmp
mov
dec
inc
cmpsl
inc
pop
jno
or
inc
add
xor
int
xor
ret
cmp
jo,pn
cltd
push
mov
fnop
mov
sub
mov
dec
dec
inc
push
push
push
add
incl
js
jmp
jmp
add
xor
clc
imul
add
pushf
in
shll
les
xor
movsb
das
jmp
into
or
clc
enter
fldl
loope
mov
sbb
rol
data16
lcall
jle
cmp
jbe
ss
push
dec
cmp
xor
xor
aaa
sbb
push
lcall
and
ret
add
es
int
xor
aas
fnstsw
and
jg
lock
lds
ds
shll
das
or
dec
lea
incl
xchg
fmull
addl
inc
add
pushf
mov
pop
push
push
mov
xchg
pop
adc
sub
clc
cmp
sti
dec
out
les
and
aaa
orl
cmp
ljmp
jmp
scas
cmpsl
pop
mov
mov
scas
shrl
cli
pop
adc
stos
mov
mov
lahf
inc
mov
mov
jg
pushf
mov
popf
mov
pop
addb
xchg
jnp
nop
add
leave
lcall
add
sub
data16
daa
and
jle
incl
cmp
mov
add
dec
pop
mov
dec
and
mov
insl
jb
xchg
movsl
add
pop
movsb
pop
inc
jne
mov
test
dec
push
pop
pop
or
std
push
mov
push
push
sbbl
arpl
add
xor
lret
ficoml
or
pop
push
push
scas
pop
call
push
dec
push
incl
inc
mov
mov
hlt
xor
loope
inc
mov
mov
clc
or
lea
jo
xchg
jb
sbbb
xchg
addl
jo
fistps
add
inc
stos
dec
lret
arpl
aaa
cltd
lret
daa
xor
jnp
data16
jg
int
inc
lcall
test
add
add
lcall
outsl
mov
stos
insb
xchg
pushf
xchg
cmc
push
push
cld
jle
test
sahf
mov
mov
pop
sbb
mov
sbb
lods
mov
mov
mov
mov
mov
or
mov
rcll
inc
dec
dec
pop
push
inc
push
add
adc
in
mov
enter
sbbb
imul
or
pushf
sahf
pop
mov
ljmp
lahf
popf
scas
xor
cmp
jae
xchg
push
pop
mov
lock
push
mov
dec
pop
xchg
jge
cmp
pop
inc
pop
mov
ds
clc
or
arpl
add
lahf
pop
push
dec
mov
push
cmp
lock
push
jle
xorb
fbstp
loope
in
mov
and
outsb
push
rol
push
xor
ljmp
into
daa
or
dec
pusha
hlt
sub
daa
rol
int3
or
jg
jmp
jmp
add
dec
pushf
dec
dec
pop
test
mov
clc
mov
and
pop
cmpsl
dec
pop
pop
stos
push
or
mov
push
loopne
std
mov
jg
iret
cmp
cmp
out
arpl
pop
mov
subl
mov
jne
decl
icebp
or
unpcklps
adc
push
pop
push
cmpsb
adc
cwtd
rclb
shrb
xchg
nop
xchg
inc
xorl
fadds
xchg
pusha
sahf
lcall
add
jns
scas
add
adc
out
add
push
repnz
lcall
add
inc
cmc
add
push
mov
mov
les
ret
std
pop
cld
inc
incl
and
into
les
add
and
es
xor
cld
fcmovnbe
or
scas
add
call
pusha
in
in
mov
incl
sti
out
mov
add
adc
jg
inc
icebp
push
cmp
add
mov
dec
or
adc
call
sbb
or
and
and
xor
cmp
add
testb
and
cmp
cmp
cld
xor
daa
ret
sub
pop
mov
icebp
add
add
inc
pop
dec
loop
cmp
cmp
jg
push
inc
popa
and
sahf
data16
xchg
nop
jnp
test
test
jle
push
fs
xchg
xchg
jbe
push
cmp
test
jp
xchg
xorb
add
jmp
dec
cltd
loop
fst
test
pop
cld
sub
shll
mov
push
test
mov
cmc
push
std
lcall
mov
mov
mov
inc
mov
aaa
loop
call
pushf
push
stos
lods
fstl
add
loope
jle
fisttps
std
je
mov
push
dec
pop
dec
loop
xchg
fwait
insb
adc
fildl
jl
sub
test
das
xchg
xchg
push
xchg
loope
pusha
sbb
sub
push
test
and
inc
mov
stos
pushl
loope
inc
mov
cltd
pusha
dec
sbb
popa
add
cmc
div
je
roll
fwait
hlt
mov
mov
outsb
arpl
mov
cmpsb
mov
sbb
or
mov
mov
call
rorb
mov
mov
movsl
xchg
decl
aad
subb
pop
push
cwtl
ja
jae
or
orl
mov
mov
mov
sbb
or
add
mov
add
sbb
pop
cli
inc
add
push
inc
test
int3
popa
add
mov
aad
mov
loopne
jge
mov
pop
loopne
mov
ljmp
jo
add
cmp
and
lret
jle
and
cmp
loope
cli
sub
xor
sub
sub
xchg
in
and
shll
gs
jb
call
mov
mov
mov
scas
pusha
or
les
inc
mov
dec
adc
add
aaa
and
lock
filds
add
xor
cmp
jnp
add
or
jg
xor
pusha
add
lcall
and
add
jg
dec
and
inc
xor
movl
jnp
leave
clc
add
aas
lret
gs
sub
fsubrs
inc
ljmp
rorb
push
dec
repnz
or
cli
bnd
das
sar
adc
call
out
loop
jmp
jmp
sbb
push
inc
fidivrs
clc
imul
jl
mov
shll
ja
lret
xor
push
outsl
push
dec
jg
arpl
cmp
mov
push
sbb
test
call
lcall
push
notb
pop
adc
sbb
addl
insb
xchg
xchg
add
jns
lcall
mov
imul
inc
xchg
mov
or
arpl
mov
inc
lcall
popa
xchg
popf
xchg
add
xchg
int
mov
mov
dec
mov
mov
in
sub
sbb
out
cli
add
jl
pop
pop
or
adc
out
out
in
mov
pop
inc
jmp
frstor
cmp
mov
or
fcom
iret
xor
mov
pop
push
add
test
push
adc
adc
or
pop
sub
in
lcall
or
nop
sbb
sbb
int3
pop
sbb
add
ss
subb
cmp
shlb
loope
in
fcmovnu
xor
ffreep
inc
xor
decb
decl
push
mov
call
xor
xchg
cmpb
in
cs
sarb
ljmp
mov
test
mov
xchg
bound
ljmp
push
scas
pop
outsl
pop
adc
addr16
mov
and
aaa
je
les
std
pop
loop
clts
out
sbb
inc
xlat
jecxz
test
sahf
mov
fbld
pop
dec
inc
hlt
push
dec
scas
stos
mov
cli
fistpll
insb
adcl
test
into
pusha
js
pop
mov
push
stos
push
imul
lock
mov
pop
fsubs
inc
inc
inc
mov
adc
pop
mov
mov
or
and
push
mov
adc
loopne
dec
pop
inc
cmp
jmp
jle
jno
add
cwtl
gs
outsl
xchg
jo
inc
cmpsl
add
sbb
mov
mov
dec
mov
mov
out
enter
ja
pop
stos
mov
test
lcall
inc
not
push
lret
sbb
sbb
cmp
add
add
inc
dec
in
dec
add
dec
push
scas
push
push
jg
or
pop
cmpsb
pop
out
bound
imul
outsb
nop
cwtl
adc
pushl
add
je
jbe
js
add
pusha
stos
adc
xor
mov
pop
lock
mov
js
outsb
and
add
add
rcr
push
inc
inc
add
loopne
je
or
or
pop
inc
pop
or
or
add
stc
insb
mov
push
pop
pop
pop
mov
arpl
pop
jnp
xchg
outsl
and
add
lods
inc
add
dec
aam
mov
push
inc
mov
shrl
mov
push
lock
and
lock
mov
subb
inc
enter
jo
mov
inc
lock
or
xchg
adc
mov
add
outsl
fmuls
mov
add
add
lock
jae
pop
insl
fcoms
jb
aaa
test
mov
jb
push
test
hlt
jbe
dec
pop
add
mov
adc
nop
adc
push
insb
mov
cmp
push
out
je
push
jo
incl
mov
es
popa
fs
bound
jb
jb
inc
mov
or
inc
jb
popa
je
stos
push
mov
hlt
xor
mov
pop
lcall
adc
inc
push
jne
lds
dec
xchg
outsw
jb
push
sbb
insb
xor
call
nop
arpl
lods
je
push
or
jp
pop
add
ss
push
je
lea
fimull
push
add
clc
inc
push
xchg
xor
out
lcall
jmp
cli
adc
fs
mov
or
pushl
jg
sti
add
sarb
push
in
and
mov
mov
incl
push
inc
push
adc
mov
push
ljmp
insl
bound
and
push
inc
dec
mov
mov
add
inc
mov
cli
incl
mov
or
push
xor
dec
inc
inc
stos
adc
dec
stos
xchg
lods
inc
push
out
clc
lods
or
dec
dec
dec
mov
push
xchg
scas
inc
push
or
jg
inc
mov
adc
xor
dec
push
inc
mov
inc
dec
mov
lock
icebp
jg
dec
inc
dec
icebp
add
stos
push
nop
jno
add
cmpb
dec
dec
mov
lret
or
mov
inc
xor
push
cmp
inc
pushf
outsl
outsb
outsb
lcall
cld
out
add
int3
sub
arpl
mov
and
push
bnd
outsb
je
and
lock
mov
shlb
outsb
arpl
cmp
addr16
jg
adc
sarb
push
ds
jg
xchg
add
jo
popa
insb
imul
xor
mov
decl
adc
mov
and
aaa
push
mov
add
sub
add
inc
mov
gs
mov
add
inc
add
das
sub
mov
cmp
push
pushf
jno
or
and
mov
scas
sub
xor
bound
push
jae
into
or
addr16
push
inc
xchg
jae
dec
xor
shr
jae
add
xor
dec
fcoml
sbb
push
mov
xchg
imul
fwait
jmp
xor
rcrb
dec
xor
cmp
or
mov
xchg
xor
mov
dec
adc
orb
mov
imul
xchg
jo
enter
imul
cwtl
es
dec
xchg
add
push
sub
popa
jb
push
jo
xor
in
jne
mov
adc
outsb
repnz
mov
jo
jge
decl
inc
dec
push
mov
push
add
nop
jae
loopne
ret
xchg
pop
pop
xor
icebp
add
xor
repnz
mov
clc
jg
jae
imul
add
lcall
outsl
xor
orb
sbb
pop
sbb
fwait
decb
mov
add
pop
dec
jp
loopne
jg
mov
pushf
imul
xchg
jne
out
pop
sub
add
xor
xor
lea
add
push
ljmp
repz
mov
sub
addr16
xchg
aas
or
dec
into
adc
adc
jle
aas
in
cli
das
dec
fcomps
and
inc
std
jnp
push
mov
jg
outsb
decl
and
test
jns
inc
jge
mov
sub
mov
xchg
or
xchg
rcll
test
lock
push
repz
cld
xchg
jo
xchg
mov
lea
push
jg
loopne
aas
xchg
sub
shlb
mov
xor
dec
xor
fldl
dec
and
and
add
call
adc
jb
xor
inc
outsb
mov
xchg
outsb
jp
xchg
insl
rorb
sbb
je
mov
xor
add
add
insb
xor
je
imul
fs
add
jle
insb
and
and
aad
inc
imul
out
and
and
cwtl
outsl
test
outsl
fbstp
daa
repnz
int3
imul
and
add
inc
lcall
mov
and
shlb
cs
sub
dec
cmpsb
fidivl
frstor
fdivr
outsl
pop
insl
mov
pushf
push
sbb
xchg
inc
repnz
add
mov
pop
jge
add
mov
call
inc
adc
call
lods
sahf
test
lock
test
mov
adc
adc
xor
sbb
seto
stos
xor
ljmp
ja,pt
or
push
pop
and
pushl
shll
cmp
mov
add
movsb
push
call
mov
pop
ret
push
nop
in
jle
test
add
add
add
inc
clc
mov
pop
stc
dec
fimull
jne
push
mov
fildll
stos
xchg
add
add
call
mov
pop
sti
and
cmp
fldt
scas
iret
std
ds
leave
call
mov
push
call
cmp
roll
dec
je
jo
adc
fistps
mov
lret
je
push
lea
jne
mov
mov
aad
add
cli
ds
imul
lret
inc
sahf
mov
cmp
push
dec
fwait
mov
lea
cmp
cld
lea
adc
fidivs
std
repnz
jo
test
lea
or
mov
sbb
add
outsb
je
add
jne
call
mov
pop
ljmp
test
cmp
cmpb
ljmp
pop
mov
add
cld
xor
bswap
add
jne
call
test
pop
ret
in
pop
je
pop
push
mov
xor
add
inc
cmp
sub
or
add
push
jo
rcrb
aas
and
and
jb
sarl
jmp
mov
rcll
dec
xor
pop
mov
sbb
rclb
inc
push
lock
aaa
cld
lods
or
scas
push
mov
add
out
inc
sub
outsb
dec
or
jne
das
lea
loopne
add
add
int
push
mov
inc
jg
test
and
pop
xor
inc
ds
ret
dec
add
imull
jg
push
lods
push
lea
push
sbbb
add
xchg
sbb
mov
notl
add
sahf
fbstp
and
xchg
sbb
cld
or
add
mov
ret
jp
cmpl
je
incl
or
mov
fcomi
out
mov
jmp
mov
jmp
mov
jmp
add
inc
cmpb
inc
adc
add
mov
decl
je
cmp
jbe
addl
call
jne
divb
adc
add
add
fbld
rcrb
push
enter
ret
and
stos
adc
sbbl
lea
push
cmp
or
rorb
adc
or
lea
cld
orb
xor
shlb
mov
pop
ret
clc
add
mov
andl
test
mov
or
adc
rcrb
jl
sbb
les
dec
push
add
and
rcll
adc
fs
sti
pop
adc
xor
out
jb
cld
mov
aaa
push
incl
push
add
push
rorb
addb
lods
push
ret
xchg
in
rolb
incl
mov
mov
inc
inc
add
adc
ret
pop
ss
adc
adcl
loopne
adc
xor
in
jbe
mov
lods
bound
mov
push
shll
sarb
mov
outsl
clc
mov
aas
cmpl
add
mov
call
fistps
sub
je
ds
rolb
add
pop
shlb
dec
mov
mov
jbe
add
cmp
adc
loop
aad
mov
ds
mov
fsubs
leave
add
push
push
in
mov
roll
je
data16
shll
imul
scas
push
mull
frstpm(287
fildl
movsb
clc
or
mov
push
fcoml
push
mov
jns
add
push
xchg
add
sbbb
dec
dec
je
push
add
cmp
mov
push
in
adc
and
je
aam
push
loopne
clc
pusha
mov
mov
test
mov
pusha
outsl
sbbb
test
sub
or
push
jne
and
and
inc
jl
movsb
inc
repz
cmp
or
arpl
jmp
mov
mov
or
std
mov
mov
sub
lods
add
pop
xor
pop
push
dec
sub
decl
pusha
jge
cmp
jmp
popa
inc
loope
clc
mov
pop
loopne
in
sbb
or
push
or
adc
loop
clc
fs
faddl
mov
loop
push
test
pusha
adc
jb
push
xchg
pusha
cmp
movsbl
cmp
jp
das
pusha
add
aaa
fmuls
xlat
call
and
loope
push
cld
adc
add
add
or
pop
out
sbb
pop
aaa
add
push
ds
push
lret
pusha
clc
mov
inc
pusha
daa
dec
lock
jl
and
pop
sub
xor
jle
jbe
mov
test
fildl
enter
pop
or
in
loopne
adcl
jl
dec
add
add
mov
or
jg
ret
add
jb
rclb
es
jmp
add
fstpt
pop
repz
call
xor
sarl
and
aas
addb
pop
dec
adc
testb
mov
add
push
xchg
add
add
sub
or
or
cwtl
sub
cmp
adc
aas
inc
push
loopne
and
push
and
push
push
popa
push
ljmp
addl
mov
call
pop
push
push
test
inc
movsb
jmp
xor
add
push
adc
loopne
loopne
pop
fwait
test
add
push
pusha
mov
sbb
mov
jl
je
in
aam
add
jg
push
push
mov
pop
mov
shl
or
call
sahf
or
cmp
push
jg
add
mov
into
pop
add
stos
jne
test
cli
jmp
movl
call
insl
ret
add
mov
call
pop
lock
xchg
add
ja
movb
push
or
jl
call
sub
mov
and
pusha
inc
add
nop
call
fcomip
mov
out
addb
pusha
dec
or
in
or
mov
lea
mov
mov
mov
addb
add
jbe
out
repnz
jl
je
inc
loop
aas
xor
xor
cmp
repz
pop
mov
jg
loopne
sbb
push
pusha
test
jo
lret
pusha
and
dec
mov
flds
push
call
add
mov
sar
je
test
je
add
mov
scas
stos
jle
push
test
call
shr
or
inc
ja
aam
adc
adc
add
icebp
in
mov
pop
ret
les
mov
je
cmp
movsb
adcb
pop
outsl
mov
sbb
mov
rolb
lds
xor
sahf
push
ds
mov
jle
add
mov
adcb
mov
dec
jne
jge
push
mov
in
pop
jle
mov
push
popa
add
inc
test
sarb
popa
add
dec
pusha
add
icebp
scas
clc
loopne
mov
mov
in
divl
data16
mov
nop
adc
jp
jno
call
adc
mov
jno
add
les
jecxz
push
pop
notb
push
push
mov
mov
sub
push
cmp
addb
push
je
int
jmp
push
hlt
add
inc
sub
incb
scas
adc
add
clc
das
sub
pop
mov
mov
push
pop
mov
mov
fmull
xchg
adcb
pop
add
inc
and
adcb
jl
adc
test
arpl
cs
xchg
push
mov
pop
lcall
mov
push
fdivs
jne
mov
lock
data16
pop
or
dec
les
dec
jmp
es
mov
inc
xor
mov
mov
sti
sbb
mov
data16
aam
repnz
jne
push
fcomip
call
cmpl
xor
or
xor
cmp
add
test
xor
push
test
add
cmp
cmp
inc
mov
clc
and
add
xor
scas
decl
shrb
mov
test
push
adc
in
mov
and
add
cmp
mov
sub
ret
and
mov
add
cmp
cmp
jg
ljmp
or
push
pop
inc
lock
pop
jno
cmp
and
jmp
inc
jo
in
call
cld
lock
add
pop
ret
push
enter
jno
lret
xchg
cli
cmp
shlb
or
dec
add
or
call
jnp
inc
sbb
push
push
mov
adcb
mov
xorb
or
mov
lea
add
out
cli
out
push
pop
adc
jb
inc
jo
push
push
loopne
sub
lock
aaa
cmp
jo
jg
dec
inc
mov
jle
or
leave
inc
push
mov
and
push
jb
xor
push
loop
sbbb
pop
sub
jno
mov
push
call
scas
push
or
fwait
xor
dec
arpl
or
arpl
push
pushf
dec
or
fistps
push
inc
fdivl
insb
dec
lea
push
fistpl
xchg
mov
xor
les
jbe
lock
adc
or
mov
cmpsb
mov
push
pop
ljmp
mov
jl
inc
ret
dec
in
dec
push
or
mov
mov
ljmp
xor
and
imul
bound
jo
jge
mov
mov
xor
call
sahf
jp
jge
sbb
cli
bndstx
inc
into
xor
pop
lret
fwait
xor
xchg
sub
cmc
test
shlb
inc
sub
in
cmp
enter
jb
aaa
or
mov
jo
call
push
sub
or
mov
jmp
cs
add
add
push
or
inc
mov
jo
test
fs
xor
call
adc
faddp
dec
jb
call
mov
adc
mov
push
push
lea
jno
lods
mov
pop
test
jb
add
or
mov
lea
filds
clc
xor
cmc
lock
cld
sar
add
mov
jo
jne
mov
push
icebp
adc
and
push
cmp
je
push
mov
jne
lods
loopne
or
icebp
adc
or
addl
or
inc
xor
push
add
nop
lock
add
call
pushl
jne
hlt
jbe
mov
sub
xchg
scas
push
idiv
dec
mov
adc
icebp
sbb
xor
adc
test
add
mov
mov
pop
leave
cmp
mov
add
ja
loopne
add
add
cmpl
jne
fbstp
enter
stc
add
sbb
dec
add
ret
shrb
add
xchg
adc
xor
push
and
jae
or
movsb
ret
mov
ret
push
sbb
rolb
dec
dec
je
andl
mov
adc
orl
cmp
mov
mov
xor
adc
nop
addb
mov
hlt
jns
pop
pop
jp
data16
andl
and
cs
mov
xor
fdivrl
ret
mov
loope
test
movsb
sbb
jge
push
loop
mov
mov
jp
je
xchg
mov
pop
push
hlt
lcall
lock
jg
ljmp
add
shr
jb
addb
cmp
jne
cli
jg
iret
mov
aam
je
mov
adc
adc
pop
cmp
lock
jecxz
cld
add
push
icebp
scas
add
ss
lahf
jne
bound
jmp
xor
jl
jg
lock
add
inc
jmp
je
xor
add
pop
pushl
mov
jmp
xor
add
loop
cs
xor
xchg
pshufw
cmp
lea
decb
dec
add
hlt
and
mov
jb
sti
ljmp
inc
adcl
jb
adc
sahf
jno
adc
ljmp
inc
jae
loope
mov
push
push
push
call
mov
add
or
xor
adc
aas
jmp
or
decb
push
inc
rorb
mov
mov
cmp
je
pop
icebp
xor
sbb
cmpsb
push
aam
or
or
add
xor
insb
mov
call
mov
adc
xchg
or
add
sarb
adc
mov
xor
or
cmp
add
jo
ret
push
push
je
and
or
test
loopne
aaa
xchg
les
jmp
jnp
cmp
test
sub
sbb
or
xlat
cli
fldt
jmp
push
imul
sub
repnz
mov
and
sub
fwait
in
mov
inc
jecxz
outsb
inc
je
jno
incl
je
imul
add
xor
icebp
add
mov
mov
mov
xor
push
add
mov
mov
pop
adc
pop
sbb
sub
push
add
lcall
xor
lock
xor
ljmp
cli
jo
movsb
xor
cmp
push
in
loopne
mov
out
pop
jmp
push
xor
adc
jbe
call
jbe
cwtl
test
pop
cmc
stos
add
or
inc
mov
incl
icebp
or
imul
lea
xchg
mov
inc
ds
sub
dec
jne
clc
je
jp
jne
ffree
inc
jb
call
idivl
adc
iret
adc
jae
stos
popa
data16
in
inc
fadd
das
jb
ret
unpcklps
mov
and
fidivs
je
or
movsb
js
pop
add
fimuls
out
inc
mov
je
jl
outsb
inc
mov
jl
sub
mov
push
push
mov
add
lret
or
or
insl
test
push
scas
jl
sbb
jmp
xchg
stos
jno
push
paddd
pop
test
call
jp
je
mov
or
and
shrb
repnz
xchg
mov
or
fisubl
adc
das
cli
inc
insl
xchg
ljmp
movsb
nop
addl
insl
out
call
jne
sbb
add
pop
push
pop
fcmovu
pushf
add
rclb
xor
cmp
cmp
xor
jmp
js
int3
cli
andb
mov
jg
loope
sub
stos
push
push
mov
lock
cld
mov
subl
int3
sarb
cmc
cs
add
adc
cmpsb
add
cmp
jo
mov
cmp
repz
adc
call
loopne
mov
and
pop
in
jno
mov
pop
adc
push
push
jp
fistps
sbb
cli
push
push
incl
cs
mov
and
add
orl
add
enter
cmp
clc
ja
or
push
stc
mov
mov
push
leave
insb
add
ljmp
cmp
ret
pop
push
add
add
inc
and
in
add
and
push
ja
pop
cli
jmp
push
xchg
add
in
dec
adc
adc
decl
mov
lock
and
push
jne
repnz
in
inc
aad
sbb
adc
push
inc
mov
js
sti
mov
pop
add
push
push
xchg
add
addb
cld
call
jp
je
adc
test
pop
test
jbe
push
and
ret
call
js
jge
cmpsl
ljmp
pop
mov
pop
loope
aaa
dec
lock
lea
je
fbstp
xchg
ljmp
call
adc
decb
ret
lcall
lods
cmp
addr16
push
notl
jl
or
incb
incb
add
jbe
mov
aaa
data16
je
push
fimull
push
pop
call
lea
push
sub
dec
adc
adc
mov
push
sbb
scas
push
mov
call
sbb
inc
les
add
std
testb
push
insb
add
adc
push
inc
or
outsb
out
push
flds
push
loop
xchg
data16
xor
inc
je
shlb
xor
push
sbbl
add
push
xorb
adc
cmp
jno
sbbl
push
push
mov
inc
pop
js
cmp
sbb
insb
jne
push
into
aam
cld
mov
pop
inc
sahf
mov
pop
lods
push
push
add
aam
test
je
adc
or
mov
lea
sbb
loopne
loopne
push
fsubrl
in
mov
aam
mov
jne
out
test
pusha
sbb
push
push
inc
mov
dec
sub
nop
mov
in
jg
pop
jo
or
rolb
inc
sbbb
rcrb
mov
call
adc
push
inc
hlt
pop
add
lods
std
fwait
push
add
jbe
inc
mov
mov
dec
insb
fwait
hlt
or
loopne
insb
mov
movsb
push
aam
cmc
pop
jb
add
call
cmpsb
mov
jle
push
out
pop
mov
and
and
mov
pusha
aaa
xorb
arpl
sbb
pushl
pop
insb
inc
push
test
push
call
add
add
mov
incl
pop
fiadds
mov
mov
pop
ret
loopne
mov
testl
std
or
in
pop
add
call
fsubl
popa
mov
xor
push
hlt
and
aaa
inc
test
je
call
jbe
jp
inc
lock
fstpl
cmp
call
sbb
add
divb
rol
sub
das
nop
pop
xor
jp
jne
inc
lea
lret
push
push
mov
fadds
add
adc
jno
xor
dec
add
or
or
and
mov
mov
lock
stos
add
adc
pop
sahf
add
loope
loopne
cmp
jbe
jge
lock
lcall
mov
jp
test
jg
cmp
cld
add
push
push
mov
lret
pop
or
bound
inc
lods
mov
dec
cmp
lea
mov
mov
jb
pop
jl
andb
movsl
mov
fiaddl
mov
sub
inc
inc
add
mov
into
mov
inc
or
pop
addl
sub
imul
arpl
outsb
es
mov
rol
or
in
clc
jmp
or
mov
mov
mov
clc
mov
outsb
jg
mov
mov
push
loopne
orl
lea
xchg
clc
mov
call
jp
call
jge
imulb
je
jb
dec
mov
call
or
ss
scas
or
mov
mov
mov
add
jb
xorb
jecxz
sbb
mov
mov
cld
inc
add
push
push
lock
or
pusha
add
int3
push
test
repnz
or
pop
mov
add
sbb
push
sub
pop
sar
adcb
loopne
and
adc
xor
loopne
pop
pop
hlt
pop
xchg
dec
lea
mov
inc
pusha
insb
mov
and
mov
inc
fistl
jb
add
push
sbb
aam
push
adc
add
jl
gs
iret
adc
dec
lea
outsl
add
push
loopne
mov
add
push
inc
in
jbe
shll
push
cmp
jnp
fs
call
push
call
pusha
add
push
pusha
or
pop
andb
sub
ret
mov
nop
out
js
scas
out
add
or
xsave
imul
and
cld
or
mov
mov
je
and
cmc
jmp
outsl
popa
xchg
je
pop
add
repz
in
lods
push
push
pop
cld
push
out
push
std
mov
push
adc
call
fcomps
push
fbstp
pop
or
loopne
dec
jb
hlt
push
jg
add
test
pusha
xchg
add
rcrl
pop
lret
out
xchg
jmp
adc
call
push
sub
fmull
xchg
add
ljmp
andl
daa
push
jle
mov
cwtl
mov
jbe
hlt
test
pop
pop
test
stos
bound
cmp
pop
push
jl
outsb
adc
movb
bound
jmp
mov
repz
inc
adc
stos
mov
adcb
in
push
sbb
decl
adc
out
lods
leave
dec
mov
aam
out
sbb
inc
adc
out
adc
jp
adc
in
and
cli
ja
sub
inc
jno
jmp
mov
inc
decl
cmpsb
scas
inc
sub
pop
gs
jo
das
fidivrl
mov
jge
or
pop
xor
scas
loopne
add
mov
cmp
in
fbstp
mov
jl
and
adc
sbb
push
push
stos
and
test
mov
add
clc
cli
ljmp
rolb
sub
jg
xor
xor
inc
cmp
lock
jo
fistpll
jmp
jne
je
push
cmp
and
mov
jmp
shll
mov
cmp
sbb
jg
pop
mov
adc
push
inc
add
inc
icebp
gs
lock
dec
popa
add
lock
mov
and
into
dec
pop
jne
push
jge
cmp
sub
aaa
es
es
mov
lock
push
add
aaa
jge
or
test
xchg
jo
or
mov
nop
jo
std
mov
add
lock
xchg
arpl
in
loopne
inc
sahf
je
push
inc
scas
call
pop
sub
mov
mov
push
adc
fisttpl
cmp
pop
sub
mov
ljmp
mov
daa
mov
sarb
and
add
pop
push
idivb
sti
je
add
pop
mov
or
xor
out
dec
movsl
aaa
pop
mov
or
dec
sub
aas
aad
cld
les
push
movb
mov
jecxz
add
add
dec
outsl
cmpb
push
sbb
lock
and
pop
scas
inc
jo
out
push
inc
pop
jge,pn
sbb
pusha
in
outsl
pop
aad
mov
lods
xor
testb
sbb
in
xor
push
dec
xor
and
sbb
inc
rolb
and
pop
push
outsb
inc
clc
call
insb
iret
mov
jo
xor
jbe
sbb
mov
or
mov
decl
orl
hlt
add
and
sbb
stos
ljmp
cmp
cmovb
cmp
adc
sbb
jno
call
hlt
sub
andl
cmp
jg
push
ds
cmp
mov
fs
dec
pop
jo
xorb
sbb
or
addl
les
pop
repnz
cmp
andl
jg
outsb
push
xchg
rorl
mov
jmp
xor
add
push
push
test
cs
hlt
mov
loopne
xchg
movl
jp
orb
push
loopne
sti
add
sbb
mov
shr
test
inc
lcall
adc
dec
repz
sbb
push
and
or
ret
adc
dec
repz
cmp
fbld
xchg
sub
push
jb
cmc
jo
push
jmp
test
lock
jecxz
andb
mov
mov
pop
push
in
push
adc
inc
cmp
rorb
xor
jg
or
cld
jo
jo
jl
inc
adc
outsl
fldt
jo
and
sti
jne
jle
sti
lods
mov
jle
jae
mov
push
dec
aaa
mov
jle
ljmp
or
cwtl
push
mov
or
push
icebp
push
sbb
mov
test
mov
mov
loop
push
pop
add
mov
ret
and
lock
pushl
push
iret
jmp
or
add
xor
mov
out
jmp
outsl
fisubrl
clc
jg
lock
or
and
add
sub
pop
cld
mov
scas
add
fyl2xp1
lock
pop
roll
pusha
sbbb
adc
fwait
xor
inc
cmpb
cmc
push
push
sub
xorl
iret
xor
rcrb
mov
mov
dec
mov
pop
and
push
insl
mov
pop
stos
pop
hlt
lcall
and
xor
imul
addb
icebp
cltd
das
add
xor
ljmp
adc
sbb
xor
test
mov
xorb
and
int3
add
inc
mov
push
add
jl
add
sub
sbb
out
jns
dec
inc
jo
or
stos
in
inc
jb
push
in
sub
xor
push
jp
jg
aaa
fldenv
push
sub
jb
movsb
repz
pop
mov
pusha
addr16
fs
movswl
adc
mov
sbb
sbb
cmpsl
call
push
cld
push
push
mov
loopne
pop
fadd
jo
pop
insl
rcrl
test
add
cmp
ljmp
pop
adcb
mov
and
cmpsb
pusha
pop
add
push
mov
push
inc
push
icebp
dec
lock
jno
push
sub
xorl
aam
cmp
pop
cmp
push
pop
dec
dec
cld
in
push
icebp
test
cmp
add
jg
pop
xor
mov
mov
es
jno
mov
adc
add
pop
je
and
xor
mov
jg
aad
add
repnz
push
adc
pop
mov
xor
mov
mov
mov
adc
stc
lock
test
inc
mov
jl
lds
mov
jo
adc
cmp
add
jmp
mov
imulb
add
test
mov
loopne
inc
fwait
dec
adc
dec
push
jl
adc
adc
push
in
or
rcl
jmp
or
call
dec
cmpsb
in
mov
pop
lock
imul
test
stc
sbb
das
ret
xor
push
repz
mov
adc
pop
fcos
divb
jbe
xor
or
icebp
js
add
arpl
incb
xor
outsl
mov
or
jne
out
pop
or
je
add
or
inc
cmp
orb
adc
aaa
orl
inc
and
xor
lods
test
add
scas
xchg
mov
incl
loope
pop
fisubl
aaa
add
adc
hlt
pop
or
add
fldt
testb
xchg
je
mov
test
mov
mov
repz
sub
push
xor
add
or
xchg
lock
push
test
mov
outsb
xor
mov
and
clc
add
xor
int3
add
shl
pushf
jne
push
add
stos
cmpsb
jmp
cmp
push
push
ss
mov
or
test
or
scas
call
je
adc
movb
mov
jae
mov
mov
sbb
push
mov
mov
jo
mov
push
sbb
nop
pop
imul
xor
sbb
mov
or
sahf
inc
sub
pushf
jmp
xor
add
mov
aam
and
test
add
mov
clc
sbb
imulb
fmulp
jne
divb
add
insb
mov
ljmp
or
or
pusha
test
dec
shlb
mov
xor
push
cmp
out
je
fdivrp
js
mov
add
fdivrp
shr
stos
pop
rolb
or
ret
pusha
jl
test
and
or
sub
sti
mov
xor
ret
mov
cld
xchg
adc
push
out
lcall
ljmp
or
inc
adc
xchg
add
call
sub
lods
mov
add
add
cli
call
push
sub
cmp
ret
out
loope
sub
add
sub
add
sarb
or
and
fisubs
loop
inc
adc
add
push
xchg
adc
mov
sub
cmp
test
or
call
andb
sbbl
sub
jne
repz
loopne
mov
or
mov
je
loopne
add
test
cmp
pop
push
test
adc
ret
jmp
cmpb
cmp
fdivrp
call
sbb
mov
aam
pusha
call
xor
mov
xorb
testb
push
pop
inc
push
inc
test
subb
push
add
add
lret
adcl
sbb
inc
into
push
addl
call
add
addb
fisttpl
mov
push
pop
mov
pop
sbb
ret
add
push
stos
inc
call
call
and
leave
add
mov
bound
cmpl
jne
repnz
mov
adc
fs
mov
cmpsb
test
stc
dec
aas
inc
ret
dec
test
fimull
lahf
ljmp
cmp
pop
or
je
mov
popa
add
sub
add
sbb
insb
pop
ret
jp
rolb
or
insl
outsb
push
adc
flds
push
popa
add
push
adcb
mov
push
push
xor
jo
inc
pop
insb
cld
dec
fdivr
xor
ret
jbe
cmpb
add
lock
xor
lret
adc
fsubr
test
mov
push
mov
lds
xor
pop
jo
ret
ret
int3
push
enter
ss
cld
jbe
add
test
or
dec
add
call
pusha
add
adc
pop
inc
rorb
or
mov
rorl
push
pop
pop
mulb
fadd
lods
or
or
or
jmp
pop
loopne
cld
mov
mov
and
push
shlb
add
adcl
fisttpl
popf
push
add
add
fidivl
imul
pandn
into
out
int3
scas
mov
mov
push
add
cld
aaa
add
push
mov
arpl
add
mov
and
add
push
cmpsb
repz
mov
sub
cmc
add
push
mov
inc
jl
add
fdivrs
push
cmovns
movzbl
inc
lds
add
jmp
les
push
xor
incl
cmp
aaa
jae
cmp
ja
or
pop
je
sub
dec
loope
out
dec
add
jg
jecxz
jle
in
xor
jmp
test
loopne
pop
lods
test
call
or
mov
xor
clc
stos
adc
dec
mov
or
test
cli
fisttpl
in
add
or
mov
loopne
mov
push
adc
push
push
lea
sar
outsb
or
sahf
inc
dec
mov
pop
cli
pusha
cld
inc
mov
pusha
inc
jl
mov
loopne
pop
inc
add
jg
adc
movb
movl
sbb
lock
test
loopne
dec
and
adc
mov
fs
loopne
mov
lods
mov
push
xchg
mov
lea
mov
xchg
pop
in
mov
test
fdivr
cs
jb
loope
xlat
int
mov
call
cmp
mov
push
push
popa
fwait
ror
pusha
xchg
add
loopne
mov
inc
and
and
or
stos
push
loopne
pusha
pop
push
scas
jne
mov
jae
insb
les
test
sub
shrb
dec
mov
clc
cmp
orb
call
je
or
cld
je
mov
sub
push
pusha
cmp
scas
cmp
mov
inc
clc
call
gs
mov
pusha
sub
sub
ds
push
fmuls
pop
les
lcall
les
inc
mov
cmp
int
loopne
mov
jl
inc
movsb
cmpsb
cld
xchg
xor
fcoms
loope
mov
ds
jge
and
testl
and
push
fsub
int3
mov
filds
cmp
stc
loopne
inc
mov
mov
push
mov
sbb
cmp
pop
add
loopne
gs
inc
jg
or
loop
or
pop
sub
arpl
out
rcr
sbb
sbb
push
shll
mov
test
sti
loopne
mov
pop
lock
pop
pop
adc
loop
inc
int3
cs
pop
push
loopne
push
cli
inc
ud2
mov
sti
ja
lea
addl
pusha
or
push
mov
pop
dec
subb
fdivrs
je
fimull
push
push
inc
inc
daa
adcb
add
mov
movsb
lock
leave
cmp
int3
test
jle
inc
iret
jne
push
andb
mov
insb
mul
es
add
loopne
or
jp
mov
pusha
es
testl
sbb
movsb
loopne
addb
pop
negl
sarb
je
mov
insb
pop
loopne
fsubrp
mov
decb
mov
push
and
cmp
aam
push
xlat
inc
sbb
jmp
push
add
popf
pop
jo
pusha
sub
pop
lea
loopne
mov
pop
loopne
rcrb
pop
leave
popa
orl
pop
pop
push
push
mov
mov
inc
imul
imul
add
and
and
aas
into
pusha
mov
fbstp
inc
fstpt
xchg
in
pop
int3
loopne
fcomps
je
data16
pop
and
push
lea
or
cli
sbb
mov
inc
lock
and
shl
cltd
or
data16
inc
mov
mov
cmp
je
add
imul
push
lods
aam
fildl
sbb
mov
pop
dec
mov
xor
data16
push
or
sarb
pop
mov
cmp
mov
mov
repz
pop
sbbb
mov
push
xor
push
mov
loopne
lock
xor
dec
es
pop
mov
adc
sbb
jne
mov
push
repz
in
mov
mov
ja
ljmp
cmp
inc
leave
xor
in
mov
incl
add
mov
pop
jecxz
inc
jle
mov
cs
lock
lock
cmp
mov
jg
mov
push
mov
jo
cmp
push
pop
clc
sbb
icebp
or
mov
jge
push
push
call
push
adc
ret
xor
inc
movl
or
andb
decl
pop
mov
pop
adc
jb
repz
mov
mov
nop
push
out
add
jae
decb
dec
jecxz
lret
jne
cs
jmp
pop
lea
pop
mov
rolb
or
mov
sub
es
xchg
call
cs
add
adc
mov
add
aas
std
pop
fildl
pop
and
repnz
push
ljmp
mov
mov
xor
push
nop
lock
lea
sub
xchg
repnz
clc
mov
push
push
sbb
adc
mov
mov
pop
inc
lock
pop
adc
sub
inc
jmp
mov
mov
sub
add
mov
inc
filds
push
es
rcrb
fs
inc
xchg
or
inc
mov
cmp
dec
cs
das
stos
mov
dec
in
out
out
or
add
pusha
xor
int3
jle
and
jle
ja
inc
inc
mov
mov
or
push
pop
and
push
push
je
pop
jbe
xchg
xchg
cmp
and
xor
pop
call
mov
add
pop
or
xor
pop
cmc
loop
pop
add
or
shlb
mov
sub
or
mov
je
add
add
call
nop
jo
jecxz
mov
int3
push
lea
fidivs
xor
rcrl
nop
sbb
arpl
cmp
or
jp
sub
jp
pop
div
jne
jbe
adc
jbe
je
jl
test
pushl
call
mov
rorb
ljmp
xor
call
rol
in
decl
jmp
adc
xor
dec
push
sbb
call
inc
mov
adc
mov
in
and
sub
and
sub
mov
adc
push
lock
sbb
adc
mov
or
push
fcoms
lock
xchg
mov
lods
call
push
sarb
test
push
mov
xor
call
mov
dec
add
sbb
xor
xor
adc
mov
cmp
mov
push
lods
jbe
adc
dec
lea
or
push
jmp
int3
test
mov
mov
xor
pop
dec
cmp
clc
cmp
loop,pn
test
add
push
push
loop
or
mov
jns
cld
cmp
inc
in
pop
enter
call
jne
or
push
pop
pushl
push
call
jne
lods
incl
insb
cwtl
call
xor
jmp
outsl
mov
in
pop
addb
or
aas
subb
addb
pop
pop
xorb
jne
mov
cmp
and
stos
add
xchg
fldt
aam
das
cmp
jne
outsl
test
push
and
add
orb
fiadds
std
scas
incl
adc
jge
cld
jge
cwtl
mov
mov
cmp
into
daa
mov
outsl
shrb
lea
mov
or
dec
aad
gs
xor
inc
clc
je
add
adc
inc
adc
cmp
outsl
pop
or
mov
jo
cmpl
inc
jb
mov
inc
fsubr
rorl
mov
and
cli
or
fcomps
push
fdivr
push
push
hlt
xchg
add
cmp
pop
sub
ret
or
call
add
push
mov
daa
cld
lods
call
lock
push
lock
je
call
sub
xor
mov
and
jl
mov
call
mov
mov
icebp
add
clc
mov
pushl
inc
mov
pop
push
add
js
jmp
xchg
cmp
adc
scas
mov
cmp
scas
shrb
mov
xor
mov
cwtl
cmp
jle
sbb
jbe
pop
add
and
cld
jge
je
call
jg
lock
arpl
je
jo
mov
notb
lea
call
mov
pop
es
jo
ret
xor
jp
jne
fcomip
add
rol
cmp
mov
push
xor
outsb
and
aas
fnstenv
sub
mov
loope
jle
int3
lods
mov
add
out
pop
je
xlat
mov
lock
or
jo
jb
mov
inc
ror
mov
ljmp
call
or
and
call
sub
or
or
ljmp
imul
lcall
adc
push
loopne
sbb
xchg
lock
gs
cmp
pop
enter
aam
adc
xor
and
cmp
jl
rol
cmp
inc
push
jae
mov
fwait
outsb
push
mov
mov
or
adc
push
jl
scas
jo
bndstx
sti
mov
mov
call
aad
mov
test
jg
inc
jne
jo
test
adc
psubsb
adc
adc
sub
shlb
lock
add
adc
adc
xor
pusha
lock
jnp
sbb
test
mov
call
pushf
das
mov
jb
mov
push
push
xor
divb
cmp
test
push
jo
mov
and
pusha
add
andb
push
fmuls
push
hlt
lock
mov
jmp
push
jl
lock
xorb
jle
and
mov
mov
ljmp
mov
adc
mov
pop
jbe
and
sbb
lods
loop
lock
push
add
xor
inc
mull
add
push
jl
mov
or
je
inc
xchg
jno
inc
out
mov
push
add
hlt
jb
je
js
js
xor
in
or
call
lock
aas
xchg
call
decb
pop
cld
in
jg
add
pop
repz
outsl
aaa
xchg
adc
cmp
add
ljmp
jl
adc
xchg
and
cmp
push
aaa
loopne
in
mov
cmpl
mov
mov
add
test
adc
inc
add
and
pop
and
je
leave
mov
clc
out
dec
jmp
clc
xor
hlt
sbb
sub
ret
addb
pop
ret
movsb
pushl
push
stos
push
je
sti
add
nop
cli
test
push
xor
cli
mov
cmp
sbb
xor
inc
test
cli
fisubrl
adc
cmp
sbb
test
pop
cli
cmp
push
push
adc
jb
test
jmp
mov
ret
push
sbb
inc
pop
jmp
mov
psllw
test
mov
je
xchg
jle
lock
and
dec
loopne
fisttps
mov
mov
push
call
jb
fsubrl
rorb
cmp
and
inc
enter
add
in
outsb
lcall
or
jge
mov
mov
mov
andl
je
push
clc
mov
jne
add
cmp
jp
pop
loopne
adc
adc
hlt
addl
jmp
clc
repz
xchg
cmp
xor
adc
dec
add
mov
test
or
lahf
ds
inc
cmp
cmp
bound
std
or
test
ds
inc
popf
inc
push
add
pop
mov
xlat
add
push
xor
fildl
cld
pop
pop
inc
out
mov
outsl
faddp
inc
or
test
fldcw
adc
adc
jmp
push
into
xor
jmp
fmulp
mov
loop
jmp
push
cs
shlb
mov
jnp
adc
add
ljmp
jmp
pop
je
inc
lods
mov
mov
jl
fs
test
sub
push
adc
clc
add
cld
jb
or
int3
call
pop
sbb
outsb
adc
je
insl
inc
or
or
lock
addl
dec
xchg
lock
push
mov
rol
or
xor
adc
push
mov
sbb
decb
shrb
int
jmp
xchg
xor
lods
cmp
pop
dec
cld
stos
fisubrs
jo
inc
xor
push
call
pop
dec
loopne
xorb
dec
ss
cmp
push
es
dec
pop
sbb
jle
aas
or
push
sub
xchg
and
loop
jp
loopne
mov
cld
ret
sub
std
mov
in
mov
xchg
cmpsl
fstpl
fstl
test
sbb
lea
fnstenv
pop
push
jb
add
pushf
xchg
iret
and
std
pop
add
data16
ja
push
inc
xor
add
ficomps
icebp
mov
mov
mov
jl
adc
add
addl
sti
xor
mov
js
daa
dec
add
pop
and
pop
sahf
mov
outsl
jns
cs
test
add
out
outsl
push
sti
sahf
div
dec
out
je
cmp
stc
pop
cmpsb
push
add
in
aas
jge
fwait
test
cli
jne
lea
outsb
dec
jbe
jb
sbb
mov
mov
push
cmpsl
paddd
cli
cld
push
jl
in
fs
sbb
jge
sbb
and
jb
inc
fiaddl
mov
jecxz
add
insl
cmpsb
scas
out
adc
orl
pop
pop
mov
lea
adc
decl
pop
inc
lds
subb
in
fiadds
stos
out
lea
push
push
das
gs
loope
test
sbb
dec
xor
and
popa
adc
jnp
cmp
mov
test
cmp
pop
out
aaa
or
dec
sarb
aaa
sahf
jmp
mov
and
pop
aaa
jne
jbe
daa
push
hlt
scas
subl
std
lock
loop
lea
aad
iret
fmull
leave
sahf
dec
out
jp
arpl
inc
jo
adc
jb
cmp
call
ja
testb
jne
sub
push
jae
adc
lea
inc
jb
cli
loopne
pop
gs
dec
sti
punpckhdq
mov
jmp
andl
inc
push
in
xor
sub
scas
cmpsb
and
test
mov
cmp
jne
cmp
ret
jne
jb
mov
loopne
pop
inc
cld
lret
or
mov
ja
call
in
mov
ret
mov
imul
add
mov
sbb
xchg
ss
pop
xchg
insl
pop
in
out
add
test
add
xchg
test
jl
mov
push
push
lock
call
xchg
std
add
pop
cmp
imul
notb
ss
fmull
pop
sbb
outsl
pop
cwtl
push
decl
cmpsb
or
ret
mov
in
push
cmp
sbb
mull
pop
scas
gs
clc
in
adc
stos
jp
push
fbstp
testb
adc
addl
cwtl
adc
test
push
cmpsb
call
push
pop
cmp
fsubl
fsub
sbb
inc
enter
int3
mov
test
lock
mov
add
pop
mov
and
sub
and
jg
add
inc
scas
fldz
test
pop
mov
mov
pop
in
cmpsb
shl
push
push
lods
repz
cmp
xchg
or
push
nop
js
ss
je
call
adc
lock
ss
mov
jmp
xchg
add
push
popa
adc
outsb
fcomi
sub
jecxz
inc
inc
loopne
sbb
cmpsb
cmp
shll
or
call
add
test
xlat
xor
cmp
mov
or
fs
clc
sbb
int3
adc
cmp
inc
pusha
xorl
xchg
push
bound
clc
test
data16
mov
pop
pop
add
int
andb
ss
mov
divl
push
je
inc
or
addb
jne
mov
in
sbb
mov
daa
lea
jl
test
add
aaa
cmp
je,pt
scas
cwtl
jecxz
push
popa
inc
push
mov
test
lods
cbtw
es
call
ds
push
mov
pop
mov
cmpb
insl
sti
adc
add
into
push
ds
neg
mov
add
jle
cmp
adc
hlt
shll
add
cwtl
add
sub
mov
jle
push
pop
pusha
xor
adc
mov
inc
sarb
adc
lock
pop
xlat
test
call
inc
adc
jecxz
hlt
jmp
dec
mov
mov
hlt
lcall
mov
dec
insb
in
push
imul
or
data16
data16
pop
call
adc
stos
inc
int
daa
call
xchg
xchg
jle
pop
sbb
gs
mov
cmpsb
add
xchg
adc
pop
scas
pop
mov
cmpsl
mov
shrl
xchg
cmp
aaa
sub
cmc
add
idivb
or
add
mov
outsb
push
dec
in
stos
lock
ss
add
jns
mov
sub
jbe
sub
ds
jae
push
xchg
jo
mov
pop
xchg
outsl
icebp
mov
jne
lea
pop
xchg
movsl
idivb
inc
or
push
in
cmpsb
sub
mov
mov
je
stos
fdivl
test
jmp
mov
or
aam
lret
dec
add
dec
pop
dec
or
in
cs
push
fadds
sub
lea
push
dec
sbb
into
testb
into
lods
data16
call
les
mov
jo
in
xorb
mov
js
or
sbb
push
cmp
je
cmp
je
cmp
je
xor
jmp
mov
rorb
cld
jmp
mov
jmp
mov
jmp
mov
inc
je
mov
divb
inc
jbe
push
mov
xor
in
cltd
ss
pop
pop
sub
mov
sbb
push
xor
test
jmp
add
add
mov
dec
into
pop
repz
pop
test
jns
cmpsb
and
mov
loop
jns
xchg
testb
pop
je
or
subl
call
add
incl
test
and
push
lea
popl
push
mov
mov
call
fcoms
cld
jp
jle
in
clc
out
hlt
push
sar
inc
sub
leave
mov
cmp
cs
fisubs
or
dec
mov
mov
inc
iret
daa
xchg
lea
int
cld
push
jb
in
mov
mov
jae
mov
push
sub
inc
mov
call
out
jmp
adc
daa
push
mov
push
or
mov
xchg
cs
push
jbe
xchg
push
int3
test
aas
fildl
clc
decb
test
clc
sahf
or
and
add
jns
pop
outsl
jecxz
pop
das
push
push
stos
adc
testb
push
mov
xor
mov
or
imul
xor
ror
pop
inc
mov
das
js
out
xorl
jb
popa
adc
es
scas
sub
pop
inc
pop
mov
mov
xor
inc
out
xor
jbe
dec
pop
mov
jl
and
div
mov
ret
es
lret
mov
mov
jmp
testb
cmp
push
cwtl
sbb
xchg
int3
xor
sub
hlt
out
adc
xchg
mov
mov
jmp
or
cmp
push
sub
fldt
cmpsl
cmovl
shr
xchg
test
jbe
cmc
mov
jl
or
es
movb
sub
pop
xchg
cmp
jne
std
and
jb,pt
adc
add
mov
mov
sbb
andb
sub
cmpsl
call
lahf
subb
sbbl
mov
pop
adc
sub
sbb
imull
cmpsb
and
push
xchg
jecxz
fldt
adc
sar
das
inc
test
je
cmpw
jae
xchg
and
adc
xlat
aaa
insl
dec
adc
cmp
push
and
mov
pusha
es
cmpsl
mov
pop
test
or
mov
jp
mov
jbe
sbb
mov
jne
push
lea
sbb
jg
push
lea
sahf
call
stos
stos
les
test
mov
inc
sbb
inc
rorb
add
roll
mov
sbb
push
push
clc
sbb
imulb
xchg
adc
addl
xchg
es
incl
call
imul
rcll
sub
and
lock
sbb
pop
adc
lcall
call
into
into
push
call
xchg
movsb
movl
sbb
jo
push
into
jne
out
cmpl
aad
push
push
iret
add
add
pusha
xchg
fmull
dec
lods
cmp
popa
xchg
xchg
dec
push
call
push
nop
outsb
mov
lea
mov
lock
mov
iret
jb
ja
sbb
xor
lea
cmp
aaa
jbe
outsl
sub
cmc
testb
cli
xor
mov
jmp
pop
ja
insl
pop
pop
icebp
cld
mov
outsb
clc
dec
jae
stos
cmpl
sbb
push
shrl
add
je
pop
sti
sub
add
and
in
mov
and
push
test
jle
push
in
push
pop
jb
mov
sahf
push
cmpsb
enter
xchg
lock
jne
jb
add
lahf
push
pop
and
jecxz
imul
ret
fcomp
add
nop
jne
outsb
add
pop
xchg
inc
sbb
sbb
ds
jbe
sahf
ja
divb
daa
jmp
call
clc
push
pop
or
cmp
sub
or
fidivl
or
in
mov
decl
rcll
enter
int3
mov
incl
xorb
or
jmp
incl
xor
push
ds
je
pop
mov
bnd
je
mov
pushl
cmp
lea
cmp
ja
data16
adc
jne
sub
inc
cmp
jae
dec
push
incb
sub
mov
fimuls
hlt
dec
push
add
insb
jae
push
mov
sahf
add
int
adc
clc
adc
add
mull
cld
test
sub
or
outsb
lock
sbb
clc
xchg
outsb
cmp
movsb
add
adc
pop
xchg
fiaddl
stc
jne
dec
or
xlat
inc
mov
add
cmp
or
cmp
mov
ja
add
add
lock
inc
inc
add
enter
add
sahf
test
das
xor
enter
add
shlb
or
enter
add
je
lods
clc
das
fadds
add
mov
add
enter
jnp
cmpsb
fdivs
mov
add
inc
xchg
jbe
adc
pop
adc
jmp
add
mov
jo
jle
mov
shlb
xor
cmp
push
mov
clc
and
xor
pop
sbb
mov
jl
cmp
call
sbb
cld
add
mov
repz
sar
mov
cmp
cmpb
pop
or
inc
mov
xor
mov
jge
cwtl
andb
inc
orb
push
call
cmp
lock
subb
pop
mov
cld
jge
xor
ja
je
inc
push
push
mov
call
xor
roll
ja
push
adc
inc
out
xorl
xorl
or
add
pop
cld
addl
psrlq
je
add
std
orl
cmpb
jg
jo
andb
adc
add
fdivp
mov
and
leave
addl
call
leave
ret
sub
fimuls
orb
jns
sar
mov
inc
jno
push
mov
imul
jge
jb
push
add
in
jne
pop
and
mov
mov
add
jp
test
cld
incl
inc
mov
push
test
xchg
je
add
jl
stos
mov
call
imul
ficoml
out
sbb
test
or
mov
xchg
rolb
add
add
push
arpl
sarb
jbe
or
and
jmp
and
or
out
dec
popl
rolb
push
push
mov
add
dec
ret
call
pop
adc
or
sbb
mov
push
push
push
mov
adc
aad
jmp
push
add
pop
cmp
mov
mov
test
add
test
mov
cmp
enter
pop
ja
ret
loopne
outsl
mov
roll
scas
call
or
add
adc
shlb
add
clc
outsl
jg
mov
add
daa
add
fwait
xchg
jo
or
push
mov
inc
call
or
clc
jge
or
push
mov
rcrb
jmp
jbe
dec
mov
fs
inc
pop
fs
sahf
and
add
or
or
xor
xor
add
mov
pop
jbe
test
or
inc
dec
bound
hlt
inc
je
sbb
fwait
ret
fiaddl
cmp
xor
pop
adc
sub
mov
xchg
loopne
test
repz
sbb
into
adc
insb
je
sbbb
pop
sub
pop
cmpsb
jge
adc
push
sbb
pushl
jb
incl
addb
hlt
add
loope
aad
add
mov
outsb
fwait
pop
outsl
push
mov
movsbl
push
or
outsl
xor
lods
push
push
shlb
call
mov
faddp
pop
and
sbb
mov
mov
adc
sbb
push
pusha
xchg
dec
push
push
inc
pusha
add
adc
adc
inc
pushf
push
call
aaa
jo
xchg
mov
add
pop
repnz
cmpb
push
data16
sbbl
cmp
loope
lock
push
lods
test
or
inc
mov
cwtl
mov
adc
mov
loopne
cld
push
inc
adc
ret
sub
pusha
bound
mov
decl
call
xchg
xor
pusha
mov
aaa
adc
pop
xchg
dec
cmpsl
call
add
loope
popf
rolb
add
jo
push
dec
push
bound
mov
mov
push
inc
repz
push
loopne
mov
sub
and
ret
lds
loop
jo
ret
ds
shlb
shrb
inc
and
push
je
xor
pop
stos
test
std
call
mov
cmp
sbb
push
mov
pop
roll
mov
stos
fmuls
push
pop
jp
jle
pop
sarb
mov
jo
xor
jg
sub
pusha
addr16
or
or
push
push
pusha
xor
loopne
clc
pusha
jge
jbe
pop
adc
or
dec
xchg
jb
loopne
add
mul
adc
loopne
pusha
push
sbb
inc
pop
jle
mov
and
subb
add
sbb
pop
fsubl
popa
aas
out
fdivrl
aas
pop
mov
or
add
add
sub
pop
sbb
lea
push
or
pop
jp
adc
outsl
push
sbb
pop
push
push
daa
sub
adc
call
loopne
and
pop
inc
sti
call
jp
js
xor
cmp
sub
mov
sti
mov
adc
jnp
jne
push
dec
dec
mov
and
inc
clc
jb
jl
pop
or
jnp
pavgb
fisttps
popa
sub
inc
or
push
test
pop
xchg
dec
adc
sti
jne
add
movsb
push
push
mov
int3
adc
idiv
jno
jo
sbb
decl
mov
push
test
push
rcrl
push
push
in
mov
inc
mov
add
fsubrl
adc
sbb
rclb
dec
add
xor
or
or
scas
or
lret
push
adc
into
pop
jae
in
mov
inc
pusha
add
mov
jne
dec
dec
add
push
xchg
mov
fdivr
out
incb
add
je
sub
test
clc
addl
inc
inc
das
pop
mov
cmp
jge
cmp
push
inc
mov
je
sub
add
std
cmp
xchg
rolb
jb
fcmovnu
jo
scas
inc
ret
je
gs
or
or
popa
enter
inc
push
lock
fldt
out
aam
and
xchg
pop
cld
mov
lahf
push
push
push
or
push
popa
jno
hlt
or
add
jno
add
fidivl
dec
ljmp
xchg
or
pop
daa
shlb
or
icebp
jns
repnz
mov
mov
fsubrl
ret
lods
pushf
cmpsb
mov
xor
pop
xor
mov
jo
push
orb
sbb
scas
jb
je
movsb
mov
xor
xor
mov
clc
test
ljmp
test
ljmp
mov
lock
jb
mov
mov
movl
roll
subb
lock
out
mov
jb
and
or
vmwrite
cmp
or
lcall
cmpsl
mov
sarb
clc
jbe
je
xor
repz
call
out
push
cld
js
jbe
mov
jb
cmp
sub
xor
dec
xor
jo
leave
ret
xor
dec
xor
aam
cs
test
mov
and
rcll
jecxz
push
sub
rcrl
or
lock
cmp
xor
jne
incl
aaa
mov
pop
subb
in
jne
scas
push
add
mov
js
inc
ficoml
jbe
in
inc
orb
dec
call
inc
lea
cmp
fucom
cli
sub
mov
xor
call
inc
in
mov
xchg
incl
xor
pop
dec
jb
sub
sti
add
push
call
stos
nop
ljmp
or
ss
adc
mov
loopne
xor
and
and
jo
aad
daa
stos
hlt
call
pop
add
stos
push
add
mov
mulb
pop
sbb
nop
mov
jne
cmpsb
xchg
xor
or
loopne
clc
pop
inc
add
cmc
lea
clc
mov
inc
xor
mov
scas
xor
pop
dec
pop
inc
jl
dec
clc
mov
and
cmp
out
cmp
push
inc
mov
or
dec
add
add
aaa
cld
mov
test
adc
push
outsb
or
push
call
divb
cltd
adc
add
sub
cmpb
mov
jmp
push
leave
jmp
lea
jnp
or
xchg
jne
mov
adc
pop
je
cmp
mov
dec
mov
hlt
push
shrb
je
xor
xchg
mov
int3
leave
or
jo
mov
loop
js
and
push
sar
decl
pop
ret
xchg
in
clc
adcl
mov
popa
std
jg
mov
cmovs
push
adc
mov
mov
je
ljmp
adc
ss
xchg
add
pop
data16
mov
mov
dec
xlat
lcall
inc
dec
cltd
sarl
or
mov
sbb
sbb
push
mov
addb
out
lcall
rolb
mov
mov
pop
sub
dec
sbb
scas
call
lock
imul
sub
jo
jne
subb
scas
xor
pop
aas
fs
or
incl
je
jl
lock
add
jno
and
push
mov
ror
adc
insb
add
mov
add
mov
jo
dec
add
stos
adc
pop
fistpl
outsl
clc
adc
call
xor
add
sbb
pop
scas
mov
call
adc
rorb
jle
and
sahf
mov
addb
add
adc
jl
and
jmp
cmc
adc
mov
insb
call
mov
and
jo
push
xchg
pop
dec
aaa
call
add
nop
mov
addl
add
lea
pop
jmp
and
push
or
push
popa
fisttps
xchg
xchg
rdpmc
fcmovnb
pop
lock
jg
mov
fldt
mov
call
mov
fisttps
inc
mov
push
lods
add
xor
jne
lea
mov
icebp
adc
cmp
jo
pop
in
jp
add
pop
test
stos
push
pop
dec
push
push
mov
es
sarl
ss
mov
mov
push
jbe
in
jg
and
sbb
mov
fldcw
xor
adc
dec
and
sbb
mov
icebp
inc
call
and
mov
fwait
pop
jb
sub
xchg
add
incl
xor
mov
fistpl
push
test
pop
decl
mov
cld
xor
arpl
sbb
and
dec
xchg
inc
mov
inc
sbb
inc
and
or
cwtl
jb
dec
lcall
hlt
push
push
icebp
add
pop
sub
paddb
adc
xchg
sbb
pop
lock
stos
mov
jnp
sbb
pop
add
call
aad
das
pop
mov
stos
fdivrp
or
repz
jl
sub
or
rclb
jecxz
mov
mov
adc
xorb
cmp
add
movaps
mov
sbb
ljmp
inc
out
addl
testb
scas
jb
jo
push
push
std
outsb
loopne
push
mov
lock
cmpsb
dec
jo
mov
xor
mov
xchg
clc
inc
cmp
popf
and
cwtl
cmp
ds
pop
imul
into
lods
shr
ja
mov
je
add
sahf
push
sub
pop
mov
sub
sbb
lock
sub
sub
and
pop
lock
in
cmp
jl
cmc
pushl
icebp
sub
pop
int
adc
sbb
sub
adc
sarb
mov
mov
or
or
lcall
push
lock
call
add
jb
inc
pop
and
adc
mov
adc
sub
cmp
movb
add
sub
js
xchg
fs
mov
or
xor
inc
push
cltd
cmp
aaa
push
jmp
mov
pop
stos
cltd
push
adc
sar
xor
pop
cmc
add
int3
adc
pusha
add
test
jbe
push
inc
xlat
add
clc
lcall
std
add
mov
sti
call
shlb
not
pusha
xor
popa
aad
jp
pusha
or
xor
nop
je
aas
lods
mov
mov
push
jle
add
or
push
add
cmp
cmpsb
or
loopne
pushl
xchg
ds
push
mov
push
call
divl
sub
xor
in
add
shrb
fsubrs
lea
cmpsl
mov
gs
adc
push
add
push
mov
jp
jo
mov
pushf
lea
test
xor
xor
ret
call
jb
dec
mov
pusha
mov
fdivrl
das
cmp
test
orb
movsb
mov
das
shlb
stos
cld
xor
mov
sub
pusha
iret
cli
call
add
shrb
xorl
jne
or
into
loopne
mov
idivl
or
adc
xchg
or
xchg
add
incl
pop
mov
add
inc
add
orb
push
add
push
mov
dec
ret
ret
jmp
add
push
inc
or
lock
data16
jg
add
push
je
inc
cmpb
pop
pusha
jl
sub
dec
push
sbb
xchg
sub
call
cli
push
sub
adc
rorb
sbb
loop
ret
cmp
jecxz
sbbb
add
out
ret
jp
push
push
sub
push
dec
cli
cmp
pop
xor
inc
sub
add
loopne
cmpsb
stc
inc
jmp
push
pushf
xorl
push
jb
call
fmull
ds
ficomps
add
fsubrs
xorb
pop
push
sbb
add
movsb
xchg
mov
loope
sub
lret
inc
aaa
int3
js
pop
int
fs
fnstsw
scas
xor
add
jne
dec
decb
std
pop
dec
cwtl
orl
xor
jne
mov
das
cmp
push
cmpsb
ret
fcmovnu
adc
sbb
cli
add
or
pusha
sbb
test
pop
testl
pop
rcrb
shrb
scas
mov
jmp
lret
fadds
fcmovnb
mov
sub
pushl
lea
aaa
or
fiadds
sbb
and
mov
lock
mov
pop
lods
ret
hlt
aam
outsb
test
lcall
sbb
aam
arpl
je
sbb
jg
scas
cmp
mov
lock
cmp
andb
push
orb
or
add
nop
cmp
add
lods
or
sbb
iret
popa
es
andl
jb
add
inc
adc
pop
add
insb
int3
shll
mov
enter
mov
adc
add
rclb
or
xor
outsl
rclb
roll
mov
lcall
cmp
mov
sar
out
add
imul
mov
gs
je
xor
adc
rclb
les
les
jne
loop
cld
pop
or
inc
std
cmp
je
adc
cmp
shrl
test
pop
mov
and
dec
and
dec
xor
enter
push
cwtl
adc
outsl
pop
or
dec
mov
paddb
lock
psubsw
push
rorb
loop
push
fcoms
arpl
mov
jp
or
addb
xor
rorb
xor
mov
adc
adc
adc
add
popa
roll
pop
xor
cmpsb
pop
push
push
clc
jg
mov
add
dec
adc
inc
rolb
shl
add
cmp
test
xor
xchg
sti
jmp
incl
mov
roll
lock
inc
adc
mov
test
inc
xor
add
sub
pushl
leave
xchg
or
add
add
mov
test
leave
mov
test
stc
sub
outsb
jecxz
ror
add
and
xchg
jmp
cmp
sbbb
cmc
out
mov
data16
icebp
call
inc
je
iret
jge
pop
subb
nop
movzwl
subb
pop
dec
adc
aaa
pusha
divps
int3
rclb
mov
ja
aam
cmp
lea
call
js
loopne
jo
mov
jo
or
loop
ret
sub
loopne
add
jg
mov
pusha
or
jb
mov
lea
cltd
aam
sar
fcmove
cld
mov
cwtl
xlat
jae
add
cli
loopne
mov
adc
add
into
sbb
mov
lea
test
es
pop
aas
lods
add
lcall
inc
repz
xchg
shlb
xor
mov
cmp
mov
xor
xor
insb
dec
add
aas
cmp
nop
fildl
lret
cmp
or
cmp
into
call
adc
inc
and
pop
push
inc
je
and
rcrl
or
add
ret
gs
aaa
inc
mov
testb
jne
adc
mov
dec
adc
loope,pt
data16
enter
sub
es
fs
push
aaa
test
lea
pusha
jb
mov
stos
orl
shr
sbb
adc
outsl
nop
adc
adc
fcomps
xor
fisubs
jmp
jg
mov
sub
into
inc
jbe
dec
shlb
insl
xchg
inc
sbb
cmpb
mov
cld
loopne
or
or
std
loope
arpl
shlb
testl
or
mov
push
add
incl
movb
mov
icebp
xorl
ret
pop
hlt
dec
insl
mov
push
add
call
jg
aas
push
mov
and
rcl
add
add
cli
incl
add
loopne
hlt
jmp
mov
lock
and
outsl
decl
inc
xchg
leave
sbb
add
shl
mov
inc
int3
dec
insb
mov
add
push
mov
pop
xchg
add
inc
divb
sub
xor
mov
movsb
sti
test
call
adc
mov
or
dec
ljmp
and
push
mov
movl
and
mov
pop
pusha
jle
mov
adc
sub
fiadds
shrb
xor
pop
mov
pop
test
jmp
xchg
ror
cmp
jne
inc
fstpl
pop
pop
leave
iret
lea
aaa
int3
add
mov
mov
sub
clc
imul
add
aam
mov
dec
mov
mov
cld
sub
mov
cmp
and
rclb
sbb
add
popa
mov
cli
mov
mov
movb
lods
jg
mov
or
out
mov
add
testb
int3
je
dec
sbb
mov
sub
outsl
push
push
push
mov
or
imul
or
add
fucomip
push
or
xlat
call
xchg
push
test
ljmp
push
std
ret
dec
cli
test
loope
add
cmp
pushl
mov
das
adc
call
ja
call
and
call
test
ss
mov
call
sub
mov
adc
jb
outsb
lock
hlt
jg
hlt
mov
nop
je
je
loope
mov
jecxz
adc
xchg
js
imul
or
jne
js
push
lock
je
test
and
pop
and
cmp
in
push
mov
imul
pop
call
push
jp
jno
loope
pop
movsb
ret
push
mov
add
lods
push
xchg
xor
cmpsl
call
ror
rcrb
decl
push
scas
push
loopne
mov
adc
dec
pusha
pop
add
jp
decl
mov
jb
fs
call
jb
mov
in
mov
jne
nop
xor
xor
stc
xor
ds
out
ljmp
jb
pop
out
xchg
test
ljmp
add
adc
jb
enter
mov
add
cmp
call
add
adc
pop
xchg
dec
inc
ret
inc
inc
jecxz
rolb
add
fsubr
jle
loope
ret
sbbb
mov
das
and
stos
lods
adc
mov
mov
push
decl
xchg
mov
push
insb
std
xor
or
or
stos
sbb
decl
incb
inc
iret
xor
push
pop
cs
data16
dec
insb
jo
je
and
call
jl
cmp
mov
pop
pop
rorb
aas
add
outsb
loop
cmp
mov
and
push
adc
dec
inc
rorl
jno
in
inc
xor
call
insl
mov
je
sbb
sub
or
into
push
gs
aad
cmp
jo
test
rclb
sarb
sub
and
jle
fbstp
add
push
fiadds
in
test
lcall
stos
hlt
mov
pop
add
add
add
ficomps
mov
rcrl
dec
inc
xorb
push
push
push
pop
nop
add
jg
mov
xor
xor
push
push
mov
inc
pop
int
call
jmp
xor
xor
and
push
mov
jb
test
mov
xor
jge
rolb
adc
and
lock
dec
add
jo
xchg
jl
add
push
test
adc
ljmp
push
jae
push
add
mov
dec
xor
ljmp
and
add
add
mov
xor
add
add
inc
add
mov
cmp
cltd
in
pop
ret
or
inc
cltd
mov
inc
adc
add
ljmp
aas
mov
insl
call
xor
inc
xor
cmp
jle
cmpl
js
sar
decl
in
mov
lea
scas
call
mov
push
xlat
ret
aad
pop
mov
push
mov
mov
lret
ja
mov
cmp
and
jle
and
add
push
dec
and
pop
hlt
add
and
shl
lahf
pop
dec
lock
call
and
xor
adc
call
xchg
call
int3
pop
f2xm1
or
hlt
sldt
mov
sub
jo
or
mov
dec
or
jbe
mov
xor
aam
mulb
loope
jbe
jp
int3
mov
movsb
loopne
push
mov
or
mov
mov
sbbb
call
inc
xor
call
cmp
ret
lret
adc
push
mov
jge
das
jno
push
and
nop
push
lret
xor
test
sub
dec
push
addl
data16
inc
ret
addr16
cli
pushl
inc
cmp
loopne
push
add
add
aad
push
es
mov
pop
fs
jnp
test
add
inc
sub
push
ja
adc
mov
add
aaa
ud0
push
pop
and
mov
lret
enter
sub
aad
mov
rorb
push
test
push
cltd
xor
and
icebp
jg
pop
xor
mov
roll
test
popf
pop
push
and
movb
loope
add
inc
aam
test
xor
cmp
dec
jo
jo
pushf
pop
mov
movsl
pop
add
mov
inc
push
and
stos
es
lock
test
stos
xor
sti
add
xor
push
mov
push
icebp
lcall
enter
data16
lods
xchg
rorl
lds
fs
lea
pop
mov
stos
call
mov
mov
or
clc
mov
sbb
adc
pop
cs
or
popa
pop
sbb
push
mov
mov
decl
test
icebp
xor
jge
cmp
movl
or
test
jle
jo
je
clc
lock
inc
adcb
mov
mov
mov
out
sbb
pop
inc
insb
js
insb
mov
fisubrl
mov
xchg
xchg
sub
dec
fsubrl
jb
call
jne
xchg
or
in
sub
add
jnp
cltd
lea
and
inc
cld
fildll
cli
call
inc
testl
dec
jecxz
push
dec
loopne
xor
sbb
rorb
push
jbe
lret
mov
incb
push
mov
cmpb
mov
inc
test
push
int3
pushf
sub
push
scas
cmp
or
mov
add
xor
jmp
add
push
cmp
mov
clc
out
push
pop
pop
fbld
pop
clc
lcall
and
mov
and
adc
mov
push
hlt
inc
call
jp
jae
inc
int3
mov
cmp
lds
repz
mov
mov
cmp
push
push
aaa
lds
icebp
imul
setbe
push
xor
std
push
sarb
in
shlb
dec
mov
test
jno
pusha
cwtl
lcall
ret
push
add
sbb
add
fbstp
cld
decl
addl
ja
mov
mov
xchg
mov
mov
sub
pop
mov
aaa
lock
push
pop
lock
sub
lock
sub
daa
mov
push
jbe
int3
inc
xor
scas
sub
adc
add
and
aas
adcb
and
sub
add
test
add
push
ja
inc
sti
jmp
and
xor
fistl
fsubrs
adc
cmp
je
sbb
int3
ret
mov
fs
pop
mov
jmp
mov
xor
cmc
or
jno
outsb
or
jo
add
popl
xchg
xor
push
mov
in
jo
adc
adc
repnz
cwtl
add
xor
clc
outsl
fcoms
aam
or
lock
cmp
incl
add
push
lea
cmp
faddp
lods
leave
push
pop
ret
loop
fisubrl
xchg
imulb
shrl
negb
clc
sbb
add
push
test
call
mov
jo
jno
or
sbb
dec
outsl
lock
adc
iret
movsb
sub
jle
out
jno
fidivl
adcl
mov
fcompl
push
inc
pop
cmpsb
xor
mov
je
loope
data16
and
inc
adc
adcl
xor
pop
test
add
sbb
inc
lods
mov
les
or
or
mov
xchg
cmpb
call
xchg
mov
inc
pop
push
inc
jg
sahf
lods
push
mov
or
movsb
add
call
push
mov
jp
xorb
cmp
das
adc
mov
add
xchg
xchg
push
add
jmp
inc
loope
jo
add
or
fadds
sub
sub
cmp
add
mov
dec
inc
pop
add
xchg
les
fwait
ret
js
xchg
testb
mov
push
cmpb
dec
fs
pop
sub
test
jl
adc
je
and
aam
orl
jmp
lea
ss
cmp
out
mov
or
dec
or
push
sbb
or
pop
int3
push
add
divb
dec
sbb
mov
add
sti
add
cmc
jne
ljmp
aad
push
clc
stos
adcl
mov
sbb
xchg
push
push
out
test
cs
cwtl
cmpb
ljmp
and
aam
lea
in
push
stos
sbb
push
and
nop
out
xor
or
mov
ja
sbb
adcl
fldt
lcall
insb
add
add
mov
xor
aam
push
jbe
xchg
testb
push
push
fbld
les
push
aam
mov
movsb
outsb
cmp
repz
push
out
adc
int3
mov
stc
outsl
test
test
jbe
call
and
inc
inc
loop
xor
jb
add
call
dec
ret
out
cmp
and
push
call
add
push
add
je
jb
pusha
pusha
scas
rcll
add
mov
aaa
add
call
loopne
sbb
xor
ret
pushf
ss
adc
int3
jp
xor
int3
add
jp
shll
inc
push
xchg
sub
sub
jo
inc
cmp
rcll
shll
pop
lea
add
repz
pusha
push
out
mov
mov
add
inc
insb
jp
push
sbb
push
aam
add
and
add
mov
cli
jg
orb
mov
add
inc
add
add
sarb
jbe
xchg
add
scas
push
subl
push
ds
rorl
aas
xchg
les
mov
or
cmp
sbb
mov
pop
push
jmp
push
push
sbb
shlb
outsl
loope
add
addl
shlb
cmpb
jne
jbe
mov
mov
lcall
dec
fdivl
add
mov
mov
inc
dec
mov
jno
out
push
pop
enter
cmp
push
call
aas
shrb
adc
push
jb
aam
xchg
jae
mov
incb
shl
ret
rorb
aam
lods
adc
pusha
insl
cmp
scas
cwtl
gs
sbb
push
outsb
push
sub
xor
cmp
das
pop
cmpsl
rcr
insb
and
test
adc
fs
add
pop
and
jne
jne
mov
loopne
jo
dec
xchg
mov
mov
push
sar
insl
clc
call
dec
cmp
aas
inc
pop
inc
lcall
fs
roll
add
add
xchg
dec
jo
fcmovu
mov
cmp
mov
add
or
filds
movb
jmp
add
inc
push
ljmp
jo
mov
test
test
push
push
fadd
add
mov
cld
push
test
add
icebp
test
or
lock
pop
xchg
adc
pop
push
xchg
dec
cld
pusha
sbb
jmp
call
ud0
lock
in
sti
jmp
or
loopne
mov
adc
mov
jg
xor
jo
cltd
movl
fdivs
sbb
into
mov
scas
lea
scas
pop
scas
mov
insl
movsl
adc
dec
or
push
add
or
popa
add
mov
push
ljmp
pop
loopne
sub
mov
inc
and
pushaw
cmp
ret
inc
add
loopne
push
js
push
or
cmpl
call
daa
filds
mov
js
xor
fs
sbb
xchg
icebp
push
and
pop
inc
cld
jp
push
scas
adc
loopne
jl
cs
push
in
in
mov
scas
sarl
fucomi
push
or
mov
pop
punpcklbw
ret
add
je
fdivs
mov
xchg
cmp
jg
bound
call
sbb
sbb
push
shr
jl
mov
jmp
fneni(8087
add
icebp
inc
adcb
sbb
loopne
or
mov
jmp
pop
ror
fcmovb
incl
push
push
je
jno
mov
jb
jg
sbb
cld
sbb
push
lea
push
or
mov
xchg
call
addb
cwtl
mov
push
mov
sbb
adc
add
xchg
hlt
idiv
subl
pop
pop
loopne
mov
inc
cmpl
and
mov
and
push
push
and
push
cmp
call
sub
dec
test
xchg
enter
outsb
inc
and
je
sbb
push
inc
lret
mov
enter
cmp
mov
fs
fwait
lea
mov
andb
shl
mov
mov
sbb
adc
cmp
mov
cli
xchg
mov
pusha
push
repnz
imul
shlb
mov
bound
or
dec
stc
popa
es
push
add
cmp
dec
cld
push
std
adc
xlat
call
inc
clc
loop
aad
and
xchg
sbb
mov
cwtl
mov
sub
adc
jo
dec
loop
xorb
lock
fbstp
fsub
lahf
pop
in
call
pop
lock
rolb
test
jbe
push
bnd
add
enter
je
pusha
jno
in
add
popa
adc
add
inc
mov
out
test
je
test
xor
mov
hlt
lods
jmp
inc
or
mov
inc
out
jecxz
fdivrs
test
dec
and
mov
std
call
bound
add
mov
jl,pn
andb
jmp
mov
imul
scas
ljmp
inc
mov
jmp
mov
inc
mov
out
js
mov
sbb
js
mov
outsl
mov
add
loopne
cld
mov
rolb
jge
or
add
pusha
mov
movsb
enter
popa
in
sbb
leave
xorb
cld
into
call
outsl
clc
popa
outsl
xchg
pusha
sbb
fldenv
mov
fs
jbe
push
loopne
lea
std
cmp
mov
pop
cltd
and
jge
mov
or
cwtl
cmpsl
hlt
push
insb
sub
in
mov
sbb
push
sbb
add
je
mov
and
jnp
add
pop
imul
mov
jle
or
mov
dec
iret
mov
icebp
aad
icebp
call
jb
sbbb
je
call
pop
dec
add
add
jecxz
jg
pop
push
je
jecxz
add
adc
mov
mov
test
fistpll
jno
xchg
sarb
xchg
lock
sbb
xor
push
lock
dec
sbb
jns
mov
nop
lock
out
add
arpl
mov
jne
sti
mov
imul
sub
in
mov
pop
jl
add
sub
hlt
jo
mov
mov
lds
in
cmp
bound
mov
inc
hlt
or
decl
add
xchg
push
cmp
and
and
lock
mov
lock
call
push
adc
jg
dec
xchg
lret
pop
shl
jne
cmp
sahf
gs
popa
push
xchg
xchg
adc
mov
adc
inc
push
rcrl
or
xchg
dec
cmpsb
inc
sti
xchg
add
js
jbe
sub
fadds
jo
adc
jo
jbe
js
adc
fnstcw
xor
packssdw
xor
mov
lock
sub
std
mov
clc
sbb
cld
dec
fcoms
xchg
mov
cmp
cmp
push
pushl
sub
mov
push
mov
es
sub
mov
sahf
and
xor
cltd
xor
push
ret
je
aad
add
cmpsl
push
cwtl
js
mov
cmpb
sub
xor
push
push
lock
sahf
push
mov
push
or
jecxz
pop
stos
mov
mov
leave
jmp
insl
push
clc
mov
sbb
sub
jg
fdivr
adc
cmpsb
pop
jmp
stc
cmp
int
insb
pop
fs
mov
les
pop
cwtl
mov
pusha
decl
fwait
test
fwait
xor
inc
jecxz
add
lahf
lock
rcrb
adc
insb
push
push
cmp
ja
cmp
adc
sub
fdivrs
add
ffreep
call
jmp
add
fwait
mov
cmp
add
mov
jmp
or
test
or
or
stc
or
pop
push
jg
mov
pop
ret
xor
mov
daa
aam
push
std
daa
push
cmp
adc
xor
dec
add
icebp
inc
mov
nop
mov
mov
sti
je
push
xor
cmp
repz
dec
push
adc
scas
pop
loope
incb
mov
adc
lock
sub
mov
jb
xor
pop
jbe
pop
pop
jbe
lock
cld
mov
push
add
mov
and
jbe
mov
jno
iret
dec
je
or
aas
popa
jo
mov
in
lock
add
mov
dec
das
add
test
xor
incb
cld
mov
mov
xlat
adc
mov
jae
shrb
hlt
push
daa
push
pop
cmp
inc
add
xchg
inc
data16
mov
xor
inc
and
test
je
pushf
dec
push
cld
mov
mov
mov
add
mulb
shr
test
add
mov
fsubrp
cmp
jmp
dec
fsubr
pop
mov
jl
je
dec
std
or
popl
inc
pop
icebp
es
add
mov
and
ja
pop
adc
clc
push
cld
js
aas
add
cmpsb
jl
in
inc
les
pop
repz
add
adc
xor
pop
aad
xchg
lock
mov
or
lret
mov
subb
loope
push
mov
or
or
mov
inc
loopne
incl
jbe
cld
add
iret
jbe
push
jo
in
add
dec
test
std
out
push
mov
out
push
xor
xor
sub
std
ja
mov
jbe
cmp
cmpb
outsb
add
add
adc
inc
repz
mov
push
inc
push
adc
pop
je
test
loopne
mov
pop
dec
incb
jo
mov
add
or
jecxz
fsubs
fists
cwtl
push
fmuls
pop
call
mov
pop
rolb
scas
push
pop
inc
add
mov
and
aaa
ljmp
xorb
inc
jo
jmp
call
add
and
mov
add
lock
mov
add
push
jl
ljmp
adc
jmp
jo
jl
sbb
or
fwait
sub
scas
adc
add
jno
add
push
imulb
mov
fcoml
sbb
repz
xor
push
xchg
dec
cmp
adc
lods
mov
adc
or
pop
repz
ja
push
sub
sub
mov
adc
and
dec
aad
push
cli
and
xchg
mov
es
sbb
pop
shrb
fs
repnz
pop
jbe
ret
aad
and
xor
loopne
std
xor
jge
push
mov
jo
add
jl
mov
stos
add
in
mov
mov
mov
jmp
imul
cltd
filds
call
xor
sub
or
inc
testb
fisttps
xor
pop
xchg
out
pusha
xchg
imul
jb
mov
call
lock
ss
pop
mov
out
xor
cli
testb
es
cmp
clc
inc
xor
cmp
insb
adc
push
jbe
pop
add
clc
push
inc
data16
sti
push
pop
jmp
test
cmpsl
lock
ljmp
sub
mov
add
adc
mov
jmp
jg
loopne
mov
testb
add
inc
jne
out
jbe
fwait
jmp
xorl
test
push
push
add
neg
jbe
pop
ret
xor
push
pop
ret
idivb
dec
cld
mov
stc
mov
push
pop
imul
aam
and
mov
pusha
jg
into
shl
xor
push
add
add
call
dec
jmp
inc
push
push
pop
sbb
and
mov
mov
adc
fnsave
je
into
dec
or
adc
vmaxss
mov
ficomps
jo
push
xchg
or
xor
add
inc
pop
negb
mov
push
push
adc
not
add
adc
adc
mov
test
push
inc
jnp
sub
fdivl
rolb
mov
mov
mov
inc
bound
faddl
or
add
inc
mov
shll
mov
scas
je
and
fdivrs
out
les
push
inc
out
xor
rolb
es
push
stos
inc
call
mov
cmpsl
sar
pop
sub
sub
mov
and
cmp
add
stos
mov
mov
lea
mov
push
call
pop
sub
jmp
call
out
push
pop
push
incb
ja
or
push
xor
pusha
sbb
mov
sub
mov
xor
add
lock
dec
adc
cmpb
andb
filds
out
mov
xchg
add
repz
in
cmp
push
dec
add
out
icebp
outsb
cmpsb
sbb
dec
add
call
ljmp
jo
and
xchg
ror
xchg
jno
cld
add
lock
mov
cmp
sub
fdivp
xchg
inc
cmp
xlat
mov
push
je
mov
call
ja
and
pop
add
sub
dec
inc
cmp
scas
xchg
jne
xor
inc
pop
push
rol
mov
mov
pop
enter
cmp
addb
dec
pushf
add
cmp
jne
xchg
and
or
mov
mov
adc
xchg
cmp
nop
roll
fwait
pop
dec
inc
sbb
jmp
call
cld
mov
rorl
loopne
cmp
adc
mov
dec
add
in
and
les
testb
out
les
add
movsb
mov
pop
lock
shrb
dec
xor
and
in
lret
pop
adc
lods
adc
loope
sub
mov
dec
mov
jge
or
jp
rol
jge
and
int
push
dec
mov
xor
lret
nop
roll
mov
aas
push
add
rclb
pop
cmpsb
repnz
test
fildll
jecxz
xchg
or
add
push
mov
cmp
cmp
loopne
push
pop
jg
or
imulb
adc
mov
lock
ret
daa
testb
cmpb
push
jp
sub
adc
aaa
or
lcall
jne
mov
mov
rclb
add
mov
pop
inc
lea
mov
lea
movb
add
loop
inc
sbb
add
hlt
add
cmp
add
filds
call
enter
pusha
sbb
addr16
out
push
sbb
sub
ret
xor
rorb
pusha
testl
mov
loopne
jbe
sbb
iret
ret
xchg
dec
outsb
inc
pop
pop
cmc
jns
inc
rol
push
int3
aas
push
aam
mov
mov
pop
in
dec
mov
push
outsl
aaa
mov
loopne
push
mov
mov
push
jne
out
fdivrs
call
je
adc
and
hlt
or
sub
push
and
leave
dec
sar
je
clc
daa
jb
std
rorb
stos
mov
pusha
push
mov
xor
jbe
xor
or
pop
and
mull
mov
pushf
mov
das
mov
sub
pop
pop
loopne
and
daa
pusha
pop
pop
and
adc
xor
outsb
in
jmp
gs
mov
inc
sub
pusha
cmp
int3
jp
in
les
loopne
or
bound
popf
xor
jae
dec
popa
dec
mov
jp
gs
xchg
daa
add
push
and
rolb
inc
popa
inc
insb
aaa
cld
add
cmp
lahf
loopne
xchg
mov
add
dec
jne
mov
pusha
cmp
jp
test
pop
aam
mov
in
and
jl
and
loopne
pop
fsubrl
mov
add
cmp
loopne
loope
mov
mov
pop
jbe
sbb
jmp
jl
mov
decl
loopne
pusha
add
flds
popa
push
out
push
lock
bound
push
or
pusha
sbb
or
popa
xchg
call
dec
mov
loopne
pusha
gs
pop
adc
push
fsub
pop
mov
cmp
mov
cmp
lock
stc
jb
push
je
sub
jae
jp
jle
push
pop
popa
add
decl
push
add
jne
mov
jp
xor
and
sbb
pop
adc
in
pop
xchg
loopne
fs
jle
jl
lret
sbb
or
jg
inc
mov
repnz
pusha
adc
add
mov
enter
loope
loopne
imul
push
sbb
loope
jbe
lods
cmpb
jo
jo
sub
adc
push
or
test
ss
scas
lods
jg
addb
arpl
push
inc
ret
pusha
mov
cld
fists
scas
or
hlt
inc
dec
xorb
js
addl
jmp
je
push
pop
fs
pusha
adc
outsl
cli
call
sub
adc
pusha
and
subb
add
pusha
push
push
in
sub
incb
mov
lea
hlt
ljmp
lea
loope
cli
out
xor
rcll
jnp
add
out
xchg
jle
cli
pop
int3
push
scas
push
xor
fs
testb
sub
xchg
ror
testb
cmp
push
push
in
popa
jb
data16
inc
pop
pusha
pop
add
mov
lock
sbb
mov
lods
daa
loop
popa
pop
loope
mov
xor
jg
shlb
shlb
jmp
addl
adc
add
jp
test
mov
inc
dec
mov
add
adc
mov
sbb
push
jp
pop
dec
or
inc
push
pop
add
std
orl
or
push
shrl
push
in
mov
push
inc
call
outsl
or
pusha
add
loopne
mov
loope
incl
mov
add
faddl
xchg
inc
push
or
add
and
fimuls
push
mov
std
xchg
aas
dec
and
movsb
or
sarb
adc
sar
mov
push
and
mov
cmp
movsb
sub
mov
xchg
adc
in
add
cwtl
addl
fdivrl
xchg
mov
inc
adc
cld
test
mov
shlb
push
ljmp
out
jp
scas
mov
add
mov
loop
repz
in
push
shl
adc
dec
mov
mov
dec
std
jo
add
add
push
roll
mov
cld
inc
mov
mov
pop
lret
jo
inc
adc
xor
jne
jo
lea
scas
mov
add
call
add
add
movsl
pushl
add
stos
mov
es
mov
mov
xor
mov
repnz
sbb
xor
and
leave
fbstp
xorl
lea
outsb
and
and
jp
mov
cli
int
jb
loopne
add
push
mov
mov
jmp
or
ljmp
push
add
jne
mov
add
call
push
jmp
or
pop
pop
push
add
xor
mov
jl
pop
inc
loop
bnd
mov
or
push
jo
adc
rcrb
cwtl
cmp
ss
push
xchg
mov
lock
inc
clc
push
push
inc
js
lock
and
cmc
dec
push
and
mov
push
pop
inc
jo
and
mov
scas
shlb
pop
sub
adc
xchg
push
lcall
add
dec
loopne
enter
lods
push
xor
lahf
and
add
or
insb
jno
loope
jg
adc
cs
pop
inc
sbb
mov
mov
call
mov
jo
repnz
call
icebp
dec
shrb
fcoms
fmuls
incb
cmp
or
add
pop
inc
data16
xchg
clc
add
jae
add
fwait
mov
add
call
inc
jmp
hlt
dec
mov
push
mov
loopne
scas
push
mov
mov
loopne
mov
or
push
icebp
add
xorb
or
xchg
subl
in
je
movsb
movsb
jo
jb
testb
add
or
lock
subl
inc
ret
fdivs
or
or
aas
insb
add
jmp
call
push
add
jo
out
push
call
dec
mov
lock
aam
cmc
push
or
int
lods
push
call
in
jo
lods
lret
mov
push
call
or
push
push
jb
push
je
sti
sar
pop
and
sbb
xor
push
cmpsb
lock
pop
pop
and
rclb
repz
pop
sti
mov
pusha
jne
jmp
mov
xor
mov
xor
adc
cmp
cld
inc
je
roll
loope,pt
add
and
jecxz,pt
cmc
jmp
or
cmp
cmp
test
add
mov
push
mov
scas
pop
call
pop
adc
idivb
xchg
jne
mov
jnp
int3
and
push
ret
inc
or
add
mov
push
push
jb
icebp
add
adcb
hlt
pop
jb
je
pop
mov
mov
jmp
addl
rolb
sbb
adc
mov
repnz
jg
mov
mov
pop
inc
mov
aas
repz
cmp
je
add
sbb
sub
pop
out
loopne
rclb
pop
jb
lcall
movsb
in
aam
mov
jl
das
movsb
jmp
call
jbe
inc
jp
fldt
je
mov
movsl
push
pop
fidivs
jb
mov
jne
les
inc
mov
lock
test
icebp
inc
inc
and
or
pop
popf
adc
arpl
and
adc
negl
sub
mov
cltd
xor
int3
test
fbstp
std
push
push
test
not
test
scas
jo
push
and
mov
mov
pop
mov
dec
lgs
aas
fdivs
or
lock
xor
or
icebp
idiv
xor
sbb
call
xlat
xor
fdiv
mov
add
stc
xor
out
inc
xchg
pop
jb
mov
pop
pop
jo
push
test
mov
mulb
inc
push
jnp
pushl
and
lock
jb
and
add
adc
pop
je
inc
jg
pop
mov
notl
jg
xor
jne
xchg
aas
jmp
jo
sub
mov
sbb
movups
lock
push
test
cltd
data16
cwtl
dec
clc
incl
xchg
pop
lea
add
jmp
loop
addb
xor
push
mov
out
das
push
shlb
nop
lcall
xor
cmp
adc
inc
sti
mov
sub
sbbb
mov
shll
pusha
xor
icebp
aaa
addb
lock
cltd
dec
or
lea
lock
outsl
incl
mov
cmp
or
push
decl
dec
lret
inc
ja
adc
inc
cwtl
fs
mov
pop
pusha
mov
cmpsb
movb
cmp
or
pop
mov
push
push
jg
add
movzbl
add
test
pop
test
push
lods
loopne
or
add
cmp
bound
ret
js
imulb
outsb
dec
mov
in
add
dec
add
sub
int3
rorb
or
lea
lock
gs
push
and
arpl
xor
insl
dec
cli
sti
xor
pop
adc
lea
ret
jno
jp
push
shr
cmp
js
add
je
inc
fildl
inc
pop
jae
jno
mov
ljmp
adc
xorb
loop
adc
stos
push
add
sbb
and
ret
ret
aad
and
insb
cmp
lret
push
inc
cld
sub
push
popa
scas
push
mov
pop
pop
mov
icebp
adc
je
incb
xor
imul
mov
or
adc
aam
call
push
add
add
or
notb
fldl
jl
pop
cli
mov
mov
xchg
push
xchg
sub
sarl
add
lahf
pop
add
notb
add
leave
or
lock
ljmp
push
mov
add
sbb
shrb
jg
rolb
pushl
inc
ret
push
or
fidivl
cmp
add
jmp
or
xor
in
fsubrp
xor
or
je
jmp
decl
pop
mov
jae
mov
dec
aaa
pop
movsb
scas
je
mov
scas
adc
int3
addl
xor
sbb
shlb
sbb
test
and
cmp
ja
loopne
jg
dec
mov
cli
or
push
add
testb
pop
pusha
mov
hlt
roll
decl
add
xchg
xor
add
adc
xor
insb
mov
adc
dec
insb
nop
pushf
pop
lods
push
jo
jb
xchg
sub
inc
mov
fwait
ljmp
movsb
jbe
lods
mov
enter
push
jnp
add
jle
mov
fldt
shll
sbb
mov
shl
mov
nop
les
out
cltd
sub
cs
sbb
dec
mov
add
cmp
mov
rcrb
ljmp
popf
add
hlt
ja
sub
shll
add
jb
add
dec
or
es
data16
push
xchg
cwtl
lret
xlat
push
loopne
add
fs
jl
hlt
inc
test
sub
or
adc
mov
add
pop
jmp
outsb
subb
inc
push
sbb
loope
mov
stos
inc
adc
mov
nop
add
mov
xor
pop
sbb
jae
or
sbb
jae
adc
adc
loop
add
lcall
cmp
negl
test
pop
lea
stos
in
or
inc
hlt
dec
xor
popa
pop
and
push
push
hlt
or
shlb
addr16
and
fildll
pop
ret
je
add
inc
mov
xor
jle
and
push
mov
or
bound
cmc
jnp
lock
jbe
mov
sub
fmuls
adc
jl
add
or
or
fs
sbb
pop
add
push
pop
lret
mov
add
jge
data16
mov
cmp
lock
notb
dec
xlat
ja
scas
cmpb
andb
hlt
jge
andl
inc
inc
cld
hlt
and
sub
sar
add
daa
arpl
ljmp
jbe
push
cmp
push
cld
dec
add
mov
and
add
jg
adc
xorl
pop
adc
cmp
fistpll
rorb
dec
add
or
mov
jne
clc
push
jmp
invd
jp
add
jb
call
push
adc
gs
ret
xlat
mov
out
mov
les
mov
movsb
or
imul
and
shlb
rcrb
lock
aam
adc
call
add
mov
shlb
hlt
ljmp
push
cmpb
insl
jmp
fsubs
jle
dec
or
add
subl
lret
clc
out
ds
insb
lods
inc
movsl
add
fcmovb
dec
leave
mov
aaa
in
shlb
adc
xor
or
push
in
jbe
lea
jbe
sub
mov
xor
mulb
negb
mulb
sbb
mov
testl
shrl
rolb
mov
jecxz
js
mov
jmp
loopne
cmp
inc
test
lcall
sbb
call
shll
int
inc
sti
data16
aas
inc
xchg
inc
gs
mov
and
xorl
pushf
inc
out
adc
adc
lret
loopne
or
ret
test
mov
cmp
mov
push
rclb
or
sbb
idivb
cmpsb
push
adc
rorb
outsb
roll
stos
adc
sarb
mov
cmpsl
cmp
rolb
cmpsb
in
jmp
imul
int3
leave
cmp
lock
jg
ljmp
test
loop
cmp
mov
mov
add
incl
jle
jbe
or
add
mov
jg
jbe
add
push
call
jle
push
xor
loop
incb
add
loope
inc
inc
mov
es
push
inc
loopne
jge
xchg
nop
mov
cmp
call
dec
adc
pusha
inc
je
call
pusha
mov
jmp
add
outsl
and
push
mov
orb
and
or
cmpsb
in
mov
aad
jo
mov
je
jg
sbb
add
adc
jmp
cltd
in
pusha
dec
mov
add
xor
lea
lret
fs
mov
mov
or
add
loope
test
pop
mov
sbb
sbb
or
insl
adc
lods
clc
adc
test
loopne
bound
add
pusha
push
jle
and
ljmp
and
out
push
movsb
ljmp
xchg
jb
mov
loopne
js
or
cmpl
inc
loope
push
insb
mov
mov
or
popl
inc
inc
mov
and
decl
mov
or
enter
call
lret
mov
adc
ds
mov
andb
push
shr
add
rcrl
dec
add
loop
sbb
xor
sbb
fistpl
pop
sar
faddl
sub
pusha
jns
lea
push
icebp
add
add
xchg
dec
test
dec
push
mov
mov
mov
incl
cmpb
add
loopne
movl
dec
jge
fldt
xor
test
ds
cltd
in
mov
push
mov
fnsave
add
je
xor
xchg
add
sub
lock
adc
xchg
and
pop
mov
pop
rcrb
cltd
loopne
cmp
pop
pcmpgtd
fbld
add
mov
mov
pusha
xor
xorl
loope
add
pusha
xchg
out
and
addb
push
je
mov
add
add
cmp
jecxz
sbb
adc
xchg
loopne
clc
mov
int
inc
call
aad
loop
inc
inc
mov
test
jl
sbb
popa
dec
adc
fcmovnu
and
adc
lret
inc
daa
xchg
lret
repz
loope
push
mov
mov
pop
dec
loopne
push
sbb
mov
lret
adc
push
fs
and
and
or
test
pop
rclb
popa
push
mov
testl
pop
pop
jno
jbe
or
sub
notb
dec
jl
dec
popa
aas
lret
std
jmp
lret
push
push
cmp
je
pusha
or
add
pop
push
cli
adc
adc
call
push
add
or
dec
sbb
add
scas
das
shlb
jg
stc
pop
adc
jo
cmp
mov
mov
mov
dec
mov
push
pop
adc
and
sub
dec
movsb
xor
mov
push
popf
ljmp
mov
orb
inc
add
icebp
dec
enter
stos
jmp
icebp
and
testb
mov
mov
add
call
test
aad
stos
or
jno
ret
aam
mov
int
fisubrl
add
cmp
sub
xor
pusha
sti
outsl
mov
je
cmp
cmp
jne
mov
xor
add
addr16
mov
test
add
sti
dec
mov
inc
movsb
orb
dec
mov
les
mov
or
stos
fsubrp
jbe
dec
sbb
mov
xor
gs
sbbl
mov
jo
insl
lds
sbb
adc
sbb
lcall
xchg
cmpb
dec
icebp
add
adc
and
xorl
les
mov
add
fs
dec
xchg
add
fnstenv
insb
lock
lock
inc
out
fildll
vmwrite
mov
jb
sbbb
mov
add
dec
push
out
sti
mov
sbb
enter
add
pop
xor
pop
cld
fwait
test
enter
lds
sub
jo
out
mov
or
inc
cmp
inc
sub
mov
popa
jo
mov
cli
les
jmp
outsb
mov
cmp
pop
cli
int
jg
pop
imul
jecxz
add
add
fnstenv
cmpsb
movsb
out
test
sbb
je
inc
hlt
inc
cwtl
outsb
mov
repnz
cmc
add
data16
pop
fsub
sub
and
pop
int3
hlt
cmp
push
sub
mov
addb
fdivrl
xor
in
test
inc
lock
mov
jle
sbb
pop
pop
and
jae
pop
mov
add
and
push
jge
popa
sub
xor
or
sub
add
mov
rcrl
je
jne
imulb
cmp
je
inc
insb
sub
dec
push
pop
addb
or
push
sbb
into
ret
call
cld
xorl
jae
mov
add
jp
mov
mov
sarl
pushf
jo
aas
xor
pop
mov
ja
mov
mov
sub
loopne
push
lds
lcall
ljmp
lock
adc
rcl
mov
push
fmull
push
loop
rorb
inc
ret
sub
test
xchg
add
data16
rorl
ss
push
into
add
decl
movsl
add
push
pop
dec
call
push
adc
add
scas
mov
add
call
fdiv
sbb
add
cmp
lcall
adcl
je
mov
cmp
repz
dec
xor
add
add
dec
ret
jle
push
inc
sbb
jmp
jns
inc
lock
stos
mov
jmp
cmc
or
es
push
adc
xor
jg
sti
icebp
mov
inc
les
and
adc
sbb
or
in
fildl
dec
pop
xor
add
int
mov
ja
clc
or
adc
or
sti
jle
ljmp
insb
and
je
adc
sbb
test
lock
pusha
add
rorb
testl
hlt
add
adc
lcall
fidivl
clc
dec
repnz
inc
testb
fwait
add
jmp
sbb
add
adc
pusha
mov
cs
mov
sbb
jl
or
mov
sub
or
and
and
jmp
test
pusha
and
daa
rclb
add
add
test
in
jo
cld
jg
das
xchg
inc
pusha
pcmpgtb
mov
fdivl
adc
aas
cmp
sbb
ja
lret
xor
inc
push
lds
or
mov
push
lock
inc
ja,pt
push
mov
andl
or
nop
stos
cli
xchg
cmp
pushf
xor
fcmovu
push
subb
aam
xorb
add
xchg
add
fisttps
jo
pop
and
push
or
mov
mov
js
adc
add
shl
shlb
or
jae
rorb
daa
sbb
sti
mov
lock
adc
push
sub
xor
add
repz
lock
adc
cmp
sub
adc
cmp
jle
pop
push
cmp
pop
mov
add
mov
cmp
mov
lock
pop
dec
jo
jb
and
call
cmp
xchg
popf
ret
add
jmp
test
insb
test
jo
outsl
mov
adc
push
or
jbe
jb
fs
insb
jle
or
add
jns
icebp
add
xchg
test
mov
pop
ret
std
jae
shl
ret
fcoml
mov
pushf
add
or
scas
add
leave
dec
loopne
rcll
push
dec
jne
push
stos
out
adc
push
inc
hlt
ret
inc
or
jmp
dec
jbe
ret
dec
ja
mov
add
pop
cmc
pop
hlt
dec
xorl
in
jo
adc
add
nop
ret
xor
jbe
cmp
jne
inc
lock
or
cmp
add
or
mov
mov
stos
xchg
add
inc
adcb
inc
mov
jg
xor
jo
xor
mov
iret
sub
aas
cmp
pop
lret
push
adc
cmp
ja
int
push
or
into
lret
pop
push
mov
mov
jnp
jo
add
data16
jle
mov
scas
mov
insb
inc
pop
cmp
sbb
movb
jo
insb
mov
das
pop
into
out
add
adc
sarb
out
std
cmp
mov
test
mov
cld
jbe
jmp
add
jmp
lock
add
mov
cmp
gs
xor
jmp
adc
lock
add
ret
imul
or
xor
add
push
mov
or
mov
add
mov
cltd
lret
aaa
add
xchg
or
invd
add
lock
sbb
jmp
mov
push
mov
jbe
sub
cmp
jl
or
lock
cmc
dec
clc
data16
add
mov
add
cld
mov
mov
mov
xor
sbb
cmpb
adc
add
jl
xchg
ss
rcl
in
jle
sbb
adc
fidivs
jbe
hlt
fwait
mov
and
ljmp
jae
adc
or
dec
or
jbe
add
xchg
xor
add
scas
mov
inc
sub
insb
xor
dec
add
add
into
push
jp
adc
ljmp
jl
dec
xor
add
pusha
and
inc
inc
xor
push
orl
adcl
jb
adc
dec
test
and
lds
movsl
push
and
lock
repnz
outsl
inc
jge
int3
adc
lock
jmp
add
add
fwait
std
or
ja
es
pop
push
addb
or
mov
pop
inc
notb
lea
pop
sbb
fiaddl
jne
xor
orb
mov
orb
mov
loopne
test
subb
jg
jge
push
adcb
inc
dec
lock
stc
mov
mov
scas
rorb
rorb
ficomps
add
jge
cwtl
adc
rclb
in
js
and
add
mov
sbb
sbb
cld
cmpsb
mov
adc
pop
divl
adcb
pop
jo
rclb
or
dec
cmp
cld
aam
or
adc
gs
pop
xlat
sub
inc
insb
dec
fcomps
call
negb
push
sar
stos
add
mov
jae
add
xchg
rorl
cmp
jl
sub
mov
repz
mov
inc
mov
ret
xor
test
or
xor
in
sbb
loopne
xlat
adc
fadds
xorb
fiaddl
pusha
shl
outsb
sub
addb
test
jl
pop
std
sbbb
cmpsl
mov
sbb
adc
adc
xchg
gs
adc
test
sbb
or
sub
xchg
sbb
movsb
addb
cmp
jl
aaa
or
ljmp
xchg
aas
jp
lahf
rorb
ret
clc
add
inc
out
sbb
outsl
sbb
repz
cmp
or
lock
pop
xchg
jmp
hlt
mov
cld
adc
rcr
jl
incl
rcr
rorb
xor
mov
int3
hlt
out
xor
in
add
fcmovb
cwtl
cmp
sbb
inc
adc
scas
shrb
divb
cmp
or
sbb
lds
les
cli
mov
rclb
adc
sbbl
popa
addb
push
scas
push
fwait
and
push
subb
jbe
dec
leave
jmp
adc
loopne
jg
addb
xor
call
mov
or
mov
mov
and
adc
hlt
cmp
lret
sub
and
in
inc
loop
cmp
in
or
int
jecxz
ret
push
mul
and
cld
test
cmpb
jmp
aad
jnp
push
cmp
addr16
cltd
xor
inc
mov
jb
cmp
jae
sbb
pop
or
jbe
push
push
cmpb
jl
ret
sbbl
aaa
mov
int
mov
adc
mull
lock
pop
test
stos
adc
pop
into
loopne
mov
adc
jo
adc
pop
xlat
push
adc
cld
jne
jge
xor
add
call
cld
mov
mov
mov
cld
mov
jmp
push
nop
mov
jmp
ret
xchg
mov
lret
sbb
test
jmp
mov
or
and
xor
adc
pop
loopne
or
adc
outsl
xor
imul
imul
fs
jp
xor
or
xor
mov
add
mov
aaa
mov
rcrl
push
mov
lahf
push
jmp
loope
lret
pop
ret
cmpb
pusha
cltd
mov
imul
push
pusha
mov
fs
int3
cli
scas
mov
sub
fwait
dec
loopne
xor
aas
lret
scas
es
dec
loop
mov
push
push
mov
fiadds
mov
insb
cmp
scas
dec
mov
add
subl
ret
cmpsb
lods
mov
mov
or
aaa
adc
dec
pusha
add
or
add
ret
cli
and
vmread
adc
and
pop
and
cld
loope
cmp
sbb
inc
cmp
int3
dec
in
imul
orl
and
add
nop
jbe
lea
jbe
aaa
sarl
xchg
es
jne
or
inc
fadds
and
mov
sub
dec
sub
lcall
mov
fcomi
ds
add
dec
sub
push
mov
cwtl
pusha
jmp
add
sarb
and
aas
add
pusha
add
pusha
mov
mov
mov
push
adc
inc
addl
mov
jg
push
repz
and
cli
bound
jle
pusha
jmp
loop
or
arpl
std
pusha
mov
pushaw
mov
inc
jmp
cmp
popa
jl
mov
iret
add
pushf
inc
add
inc
fsts
mov
movb
sbb
add
or
dec
push
bound
incl
mov
mov
or
in
jo
lock
add
mov
or
outsl
cld
cli
fbstp
hlt
add
fs
insb
jmp
add
sarb
testb
andl
mov
inc
repnz
test
mov
fisttpl
in
mov
add
xor
mov
inc
cmpsb
jle
mov
pushl
xor
xor
ret
mov
icebp
inc
ret
jo
aaa
inc
add
or
std
xchg
sbb
out
inc
and
je
or
add
jmp
add
jmp
push
testb
and
push
ja
shlb
pop
or
or
dec
xchg
jmp
popa
dec
push
mov
jo
xor
jl
aaa
jg
add
cmp
sub
mov
mov
push
pop
push
test
icebp
mov
lock
jle
adc
outsb
mov
jl
fs
pop
lock
add
add
add
pop
mov
pop
jg
pop
jnp
lock
mov
jle
mov
pushl
push
test
xor
xchg
or
or
test
test
bswap
xchg
dec
call
add
mov
dec
ljmp
fdivs
test
jle
sbb
pop
sbb
push
jecxz
add
xor
jno
loop
sbb
call
push
mov
add
add
bnd
jg
movsb
add
mov
cmp
mov
inc
xor
scas
jl
pusha
sar
cmp
sub
mov
aam
cmp
and
imul
cmp
loopne
mov
es
push
adc
xor
push
icebp
xor
outsb
adc
cwtl
jmp
mov
sti
mov
mov
stos
je
rcrb
daa
jae
jo
jo
or
adc
cli
in
ljmp
inc
xchg
xor
fucomi
and
jno
sbb
mov
mov
cmp
mov
cmp
add
jb
and
jmp
pusha
sbb
adc
dec
mov
mov
outsl
rcrl
adc
adc
std
pop
cwtl
sbb
fdiv
adc
sub
lock
bound
and
adc
adc
repz
add
fdivr
sub
jl,pt
call
lahf
mov
and
es
mov
push
or
lods
outsl
jp
icebp
lock
repz
xlat
add
test
or
mov
test
pop
mov
pop
imul
pop
push
sbb
inc
push
fdivrl
or
inc
repnz
xor
mov
mov
and
jl
jmp
fnstenv
jb
and
add
or
jp
inc
pop
test
pop
sahf
jne
fsubrp
mov
jbe
dec
into
mov
inc
xor
cmp
add
add
fistpll
adc
jmp
xor
adc
das
cld
ret
lock
jmp
xor
or
cmp
push
nop
adc
fbstp
filds
xor
xor
mov
fwait
dec
cmpb
loopne
sbb
inc
ss
jne
test
mov
xor
imul
xchg
aam
movsl
sub
repnz
add
popf
dec
inc
inc
loope
icebp
fwait
cmp
mov
cmpsb
adc
xor
mov
jmp
add
jae
jae
add
decl
add
les
adc
jae
xor
popa
orl
movl
push
inc
cld
sub
and
jmp
xor
push
add
mov
cmpl
sbb
add
lock
and
xlat
mov
mov
lea
loopne
jmp
push
xorb
xchg
addb
or
sub
cs
das
xorb
hlt
cmpsl
add
add
lods
pusha
in
dec
shlb
cmpsb
fdivp
or
lcall
adc
data16
mov
mov
sar
pop
sub
cmc
call
sbb
je
and
stos
adc
xchg
push
scas
hlt
xchg
pop
clc
xchg
xor
repz
add
xchg
xorb
js
or
stc
cmp
add
mov
cmp
jg
sub
jmp
push
jmp
dec
fildl
push
incb
decl
std
lock
inc
push
mov
icebp
pop
scas
mov
in
addb
inc
jo
mov
add
adc
shr
insb
pop
orl
adc
pusha
loope
loop
cli
xor
cli
outsl
pop
icebp
push
pop
xor
or
inc
jmp
mov
loopne
push
adc
or
xchg
mov
inc
jmp
mov
mov
push
into
nop
pushl
rolb
jno
jno
mov
push
and
lods
int3
xchg
add
mov
mov
rclb
cmp
cwtl
mov
jg
xchg
adc
lock
rclb
mov
xor
les
push
mov
in
fdivrl
stos
pop
add
loopne
inc
and
push
add
mov
jno
add
inc
jo
xor
jo
or
pop
sbb
add
incl
lock
outsb
or
and
out
and
and
adc
outsl
add
mov
ljmp
add
sbb
xor
sbb
push
and
out
add
je
add
push
loop
inc
xchg
inc
cmc
or
add
mov
and
in
add
rorb
scas
or
mov
mov
adc
insl
inc
fucomp
add
repz
js
pop
jp
or
mov
dec
push
shrb
mov
test
int
or
and
xor
cmp
loopne
std
mov
out
add
dec
mov
lret
add
nop
fiadds
push
push
mov
inc
push
add
cmp
xchg
out
xor
loope
je
jl
mov
push
test
lcall
mov
testb
mov
mov
pusha
dec
push
mov
stos
cmp
sbb
mov
fsubr
and
andl
xchg
inc
sbb
sub
orb
les
fbstp
andb
fldl
andl
push
out
push
decl
mov
es
and
out
sbb
stc
inc
cmp
ljmp
add
mov
addl
mov
or
hlt
ljmp
dec
or
mov
cmp
jbe
loopne
mov
pushf
scas
inc
rclb
mov
outsl
sbb
rcll
rorl
fldl
or
xor
icebp
call
callw
dec
add
pop
je
or
rclb
xchg
call
fdivr
out
mov
add
adc
or
sbb
add
cmpb
shlb
mov
xor
adc
stc
xchg
push
xor
test
add
add
add
and
shll
mov
lahf
add
add
enter
ja
decl
inc
inc
rorb
lock
mov
jge
add
push
jg
lea
ficoml
fsubr
sbb
enter
or
or
or
pop
push
push
add
icebp
add
test
sarl
adc
sub
mov
mov
adc
fcompl
je
mov
cmp
xor
fistps
xchg
inc
and
pop
rclb
pushl
and
mov
dec
adc
shll
outsl
nop
and
and
sbb
test
sub
dec
or
mov
dec
xchg
pop
ret
cmpsl
lock
pushf
fsub
xor
mov
scas
incl
pusha
adc
ror
inc
jg
jbe
xor
loopne
fwait
xor
mov
or
inc
cmp
es
mov
and
cmc
fisttps
lea
lock
fs
out
test
pinsrw
cmp
mov
out
dec
fadd
push
je
ret
add
xor
mov
pushf
adc
pextrw
or
fs
or
or
ret
push
jmp
ffreep
into
xor
add
rcr
adc
add
dec
loopne
inc
je
inc
add
xor
jb
scas
fisubrs
pop
push
sub
call
add
add
mov
jg
mov
cs
jmp
and
loopne
jecxz
push
xlat
loopne
cmc
pushl
xor
in
bound
adc
loopne
pop
cld
pusha
outsb
adc
enter
xchg
xor
dec
ja
pushf
fisubl
je
cld
push
and
test
pop
mov
jl
adc
mov
sub
faddl
jbe
mov
pop
pop
push
popl
jo
sbb
lret
cmp
jnp
out
and
loope
xor
xlat
jecxz
lret
loopne
call
loope
inc
sbb
adc
mov
xchg
pushf
mov
jae
fdivrp
in
add
pop
jp
addl
in
sub
mov
jbe
es
decb
enter
or
test
in
pop
adc
int3
loopne
out
adc
sarb
test
loop
or
call
shr
aaa
call
loopne
cmpsb
pusha
dec
push
xchg
and
imul
rcr
popa
adc
roll
enter
push
and
add
psraw
icebp
xchg
loope
and
stos
stos
shl
sub
mov
mov
cmp
jne
xorb
inc
pop
test
shlb
pusha
xchg
sbb
sbb
addr16
in
mov
lods
sbb
mov
movsb
loope
dec
sub
jecxz
pusha
add
call
dec
loopne
jae
dec
push
jecxz
pusha
mov
test
adc
ror
lock
push
push
stos
adc
cmp
repnz
cmp
add
jmp
loope
je
and
shll
shl
inc
xchg
popa
add
push
pop
or
xor
mov
add
mov
cli
mov
inc
lods
daa
popa
dec
loopne
cmp
add
cmp
adc
fs
mov
xchg
cmp
pushf
lea
cmp
test
xor
sbb
push
mov
push
fsubs
inc
jmp
decl
pop
ror
fistl
das
je
inc
arpl
jecxz
cmp
pusha
pop
popa
push
inc
jl
cmp
shl
cmp
add
pop
dec
ret
jecxz
popa
mov
xlat
je
push
call
popa
pop
lret
push
sub
test
idivb
or
and
in
and
loopne
ret
sbb
ficoml
je
sbb
pop
fs
xor
lock
ftst
repnz
xlat
bound
add
call
or
cld
mov
fildl
pop
add
pusha
loop
clc
add
lea
nop
sub
or
and
or
inc
push
inc
mov
sahf
pop
pop
loopne
sbb
call
data16
push
dec
cli
and
cmp
ja
mov
adc
sbb
inc
rol
inc
add
and
xor
mov
mov
add
jae
adc
and
ja
addb
stos
sbb
pop
xchg
fistl
shlb
call
pop
or
test
mov
push
add
xchg
jge
push
lods
or
or
adc
inc
test
xchg
lcall
pop
loop
add
movsb
push
jo
cmp
adc
pop
or
jp
jno
mov
pop
inc
test
mov
lea
fsubrs
add
push
dec
sbb
push
nop
or
pop
or
adc
test
mov
not
testl
mov
adc
sti
or
mov
mov
insl
jnp
add
adc
jmp
xor
or
jmp
or
loope
or
loope
ret
jb
dec
add
test
fs
add
pop
mov
or
pop
inc
mov
sub
adc
sbb
adc
push
js
dec
imul
add
stos
dec
cmc
sbb
je
pusha
imul
leave
sbb
push
sub
imul
dec
fistl
lds
xor
push
add
push
imul
insb
or
and
pop
int3
push
xor
cmpsb
cltd
jl
mov
int
mov
or
push
xor
lods
xor
dec
add
fcoml
lods
or
push
insb
test
fnstenv
xor
repz
add
sbb
xchg
lods
fisttpl
adc
cmp
add
add
popf
addb
pop
and
aaa
xor
hlt
push
sbb
mov
mov
mov
or
inc
inc
cli
xor
add
into
jecxz
jg
mov
dec
repnz
push
out
dec
push
xor
and
fimuls
in
sbb
loope
and
add
and
and
and
imulb
xchg
in
add
or
sub
sub
daa
adc
dec
mov
add
das
add
xor
add
arpl
sbb
cmp
mov
sbb
aas
mov
shrl
dec
nop
mov
sub
hlt
adc
push
insb
or
movsl
sub
fiaddl
lock
or
and
cld
inc
add
stos
push
test
repz
mov
cmp
jo
or
bound
jo
xor
cmp
xchg
xchg
loop
add
or
xchg
out
inc
jns
dec
ret
mov
push
pop
or
adc
cmp
insb
fildl
cmp
or
std
ljmp
add
ret
mov
push
or
cmpl
cmp
inc
andl
sbb
leave
cld
jg
add
add
mov
dec
fdivs
add
mov
xor
ss
cmp
pop
nopl
xor
mov
out
pop
pushf
stc
aam
xchg
dec
js
jno
shll
cmp
pushl
loop
dec
out
or
mov
sbb
dec
cmpsb
movb
sbb
clc
push
jmp
call
mov
sbb
mov
jbe
inc
fiaddl
fwait
add
movzwl
cmpsb
inc
inc
clc
add
adc
and
lea
add
mov
or
push
dec
pop
mov
inc
add
push
pop
fisttpl
pusha
inc
lock
mov
add
clc
jmp
push
and
pop
pusha
jp
ds
call
fadd
or
jp
fwait
movsb
data16
sbb
ret
lret
cmovs
lods
push
lahf
movsb
add
add
mov
scas
aaa
cld
out
bound
push
pop
rorb
push
stos
inc
ja
xorb
pop
cld
mov
repz
adc
adc
push
es
call
sbb
or
imul
cmp
pop
sbb
js
mov
push
testl
test
mov
sti
mov
mov
or
pusha
add
ret
lcall
add
cmp
xor
testb
ret
sub
add
vunpcklps
and
add
pushf
mov
sbb
scas
or
adc
xor
push
add
add
rorl
ja
ljmp
mov
sbb
lcall
and
cmp
sbb
inc
sbb
push
sbb
scas
mov
add
or
add
sbb
push
inc
jg
pusha
andb
or
or
jne
mov
jmp
je
push
rorl
cmpsb
mov
xor
cmp
push
cmp
or
dec
push
aad
sahf
cmp
pop
sbb
mov
movsb
or
ret
outsb
ret
mov
sarl
test
pop
inc
sti
mov
lea
mov
ja
lock
sbb
jbe
mov
push
or
mov
push
call
add
jp
xor
add
repz
xchg
repz
fisubrs
fisubs
ret
sbb
add
lock
pushw
push
xlat
incl
pop
test
stc
jo
adc
cli
mov
fisttpl
movsb
idiv
cmp
jl
and
mov
rcl
inc
test
sub
and
sbb
cmpsb
test
fcmovb
push
add
sbb
xchg
sub
add
mov
xor
shl
or
dec
movsb
shrb
mov
sbb
call
outsl
fisttps
jle
mov
jge
jl
mov
je
or
mov
repz
call
xor
rcl
add
mov
xchg
jmp
jl
xchg
pop
shrb
jb
mov
mov
cmpl
sub
or
add
enter
sti
mov
testl
and
test
pop
dec
mov
lret
push
ficoml
je
push
inc
push
xor
push
stos
dec
xchg
cs
mov
dec
push
scas
jl
cmp
aaa
and
jle
in
lock
inc
add
or
jbe
clc
incl
loop
push
xchg
stc
jae
sub
dec
add
jmp
inc
add
repz
ljmp
fs
pop
push
mov
jg
push
sti
mov
sbb
pop
pop
xor
or
aaa
pop
clc
lea
add
stos
jo
aas
mov
sub
sub
sub
jg
stos
pop
mov
cmp
jne
addl
scas
jo
jbe
jne
add
dec
je
inc
les
loop
adc
jb
mov
mov
jp
or
addl
je
jmp
fcmovb
or
movsb
cli
sti
cmp
add
cli
rcl
xor
inc
cld
inc
addr16
in
jmp
addr16
insb
imull
in
push
scas
popl
mov
push
mov
mov
pop
cmp
xchg
push
cmp
jae
rolb
adc
inc
mov
pusha
mov
cmp
lret
testl
xchg
pop
jbe
aaa
scas
add
pop
push
jle
cmpsb
xor
incb
fdivrl
enter
xchg
mov
shrl
sti
fiaddl
adc
les
dec
outsb
cmp
inc
or
dec
or
cmpb
jne
cmp
in
scas
jecxz
cmp
cmp
add
jb
sbb
or
stos
in
loopne
lock
push
pushf
jne
cmp
sbbl
call
jl
lods
inc
ss
popf
aas
add
or
jbe
inc
les
jl
fists
mov
aaa
je
cmp
pop
jbe
divl
jmp
aaa
dec
push
and
jmp
das
xor
int3
je
out
jp
add
adc
dec
sbb
imul
fsubs
mov
mov
jb
add
jbe
loopne
cs
mov
sbbb
mov
sahf
push
mov
or
sub
fcomps
jp
jb
stos
xchg
mov
mov
cmpsl
ret
xor
jle
out
mov
shr
nop
cmp
mov
lea
cmpsb
cmpsl
inc
das
je
mov
jp
jbe
mov
hlt
mov
cmp
jbe
jo
xchg
fmul
les
jae
test
sub
inc
mov
add
pushf
sbb
insl
mov
loopne
adc
ja
lcall
cmp
ja
mov
or
mov
cmpb
and
jne
out
mov
outsb
cmp
pop
std
dec
sarl
pop
dec
add
jbe
gs
test
cmp
xor
xor
pusha
ret
push
int
xor
repz
add
stos
lock
push
pop
pop
and
mov
shlb
pop
mov
push
and
jecxz
lock
jle
stos
sbb
adc
sub
dec
sti
jmp
or
xorb
jne
cmp
add
fisttpll
mov
mov
scas
test
lds
add
adc
rcrl
mov
xchg
mov
rcrl
idivb
add
adc
inc
pop
pop
jl
out
dec
cmp
jge
sbb
nop
sub
lods
jmp
ja
sbb
cmp
adc
jbe
add
cld
push
pop
shrb
lock
push
or
add
push
or
movsb
xor
mov
ljmp
mov
xchg
add
and
sbb
imul
test
xorb
add
cmpsb
xor
xor
popw
les
lea
xchg
int3
push
inc
lock
testl
int
push
sbb
movsb
jp
cmc
cmpsb
adc
fnstcw
mov
push
movl
jg
call
mov
fnstcw
divb
or
jle
xor
inc
lock
and
add
sbb
push
pop
rorb
cmp
add
xor
pop
mov
dec
aad
or
sub
idivb
xor
test
rolb
in
add
jbe
mov
shll
pmaddwd
in
daa
add
xchg
test
cmp
repnz
mov
clc
data16
int
call
mov
or
push
jp
fidivrl
push
cltd
push
mov
xor
cmpb
das
push
adc
movsb
std
mov
ds
xchg
shl
pop
lret
and
push
xor
aas
sub
nop
fisttpl
lea
or
in
add
mov
negb
jb
pop
daa
jle
mov
mov
xchg
in
mov
cmp
lret
push
inc
js
gs
sbb
test
add
pop
sub
push
jbe
mov
push
dec
mov
jl
inc
es
mov
sahf
push
loopne
jge
jge
imul
mov
add
loopne
pop
or
mov
dec
pop
push
inc
jge
fnstcw
mov
into
xchg
mov
push
xor
inc
mov
sbb
push
les
out
add
pop
sub
inc
sbb
dec
ret
mov
fidivrl
jne
jbe
in
loopne
pop
and
scas
jmp
xor
dec
lcall
mov
aas
xchg
dec
or
movsb
shrl
or
into
jg
pushl
cwtl
lcall
daa
xor
adc
and
adcb
mov
mov
call
sub
jmp
sbb
rolb
add
fsubrl
xor
movsl
dec
sahf
jbe
mov
jmp
sub
sbb
daa
jg
xchg
xchg
xchg
push
jecxz
mov
ljmp
aaa
sbb
jle
sbb
mov
push
jg
pop
sti
fisttpl
xlat
jge
ficoms
mov
pop
jle
dec
mov
fwait
aas
dec
shl
negb
mov
or
lea
fcomps
inc
pop
push
les
xchg
push
sbb
pop
pop
push
sbb
fstpt
hlt
or
mov
outsb
add
aad
xchg
add
bound
jnp
aas
sub
mov
push
xchg
adc
xor
or
ds
jo
and
xchg
push
mov
fisubs
call
inc
ret
lods
push
push
push
subb
cmp
jp
in
or
or
push
adc
je
push
lods
push
push
xchg
dec
ret
push
test
sbb
adc
sub
rclb
cld
cld
popa
mov
cli
sti
insb
sub
in
ret
pop
jmp
cmpsb
fdivrs
pop
or
add
fldl
test
aam
push
movsb
pop
in
aad
outsl
pop
hlt
addr16
jle
xchg
inc
push
fdiv
mov
inc
lods
fdivrl
sbb
and
jl
shrl
lock
xchg
pop
sbb
aas
push
or
cmp
push
lods
lea
jp
aad
xor
sub
adc
add
pop
loope
enter
inc
push
sbb
inc
add
int
add
adc
and
add
ficomps
clc
push
add
xor
cmp
jmp
xchg
mov
xchg
or
int3
rolb
call
add
divb
mov
notb
xchg
adc
ljmp
nop
add
icebp
jbe
mov
or
dec
and
repz
decl
test
faddl
je
mov
std
cmp
mov
call
add
das
inc
faddl
je
jb
push
sbb
pop
sub
or
push
jbe
pusha
outsl
shlb
lea
sti
daa
fisttpl
push
arpl
rcll
push
add
daa
dec
lret
xchg
lock
or
mov
scas
push
push
mov
pop
mov
je
daa
dec
call
inc
push
or
add
cmc
adc
mov
push
sbb
push
out
jle
push
lea
push
cmp
pusha
jnp
dec
mov
add
dec
mov
inc
dec
stos
cld
ret
pop
call
js
test
out
scas
sub
mov
outsb
jb
out
sub
jns
icebp
rcll
adc
xchg
fidivrs
mov
lea
mov
fdivrp
mov
or
sub
xor
lcall
push
je
das
push
jp
push
mov
cmp
popw
inc
pusha
xor
ss
shr
or
enter
loopne
and
push
mov
inc
data16
cs
lods
lea
pop
pop
xchg
xchg
pop
nop
xchg
pop
pop
lock
pop
sahf
cmp
je
lar
push
mov
cltd
cmp
je
pop
jl
sub
dec
std
cld
js
add
sar
out
inc
ss
add
lods
inc
jb
shlb
sti
or
add
inc
jnp
std
jg
shr
fisttps
sti
add
icebp
leave
adc
and
pushaw
data16
ja
add
lea
ret
pop
data16
lock
jl
add
divl
mov
push
mov
pop
test
mov
adc
or
aaa
inc
popa
sbb
sub
faddl
mov
mov
data16
push
je
fiadds
stos
or
stc
pop
test
andb
jl
xor
outsb
call
or
jge
jge
or
push
hlt
enter
cld
loopne
sub
in
inc
push
sbb
rclb
adc
xchg
mov
in
xor
in
out
ror
cmp
je
scas
dec
jmp
pop
jne
mov
mov
add
cmp
jmp
frstor
sbb
adc
in
fisubrs
ss
xchg
add
mov
nop
out
xchg
and
iret
test
mov
and
out
cmpsl
add
divb
mov
lret
add
outsl
add
jl
pushf
push
push
clc
add
jl
imul
add
mov
add
jmp
pop
cli
into
call
js
push
lahf
outsb
xor
scas
sub
push
rcll
mov
mov
js
cmp
adc
cmp
jle
popa
addb
ss
pop
mov
dec
call
sbb
pop
pushf
mov
nop
cmp
mov
cmova
xchg
mov
jne
push
add
ficomps
fs
pop
jo
cmpl
cmp
cmp
out
in
or
cmpb
xchg
cs
dec
fcoml
mov
loop
pop
dec
dec
and
hlt
sti
xorl
mov
cmc
jbe
cmp
js
jo
mov
xchg
outsb
cmovs
inc
dec
scas
invd
lods
outsl
dec
push
mov
mov
cmc
sub
faddp
call
cli
out
add
insl
mov
pushl
decl
mov
xor
cs
lock
cmc
push
mov
cmp
aas
pop
fwait
clc
je
lea
push
push
dec
jle
shrb
mov
or
jp
adc
pusha
orl
cld
out
icebp
insl
repz
add
sbb
mov
push
repnz
add
pop
aam
out
jg
push
sarb
push
jne
push
faddl
mov
inc
inc
dec
ljmp
stos
mov
jp
pop
jg
lock
addl
jbe
mov
lea
fsubrs
xchg
nop
int3
fildl
hlt
pop
push
and
orb
fcoms
lcall
test
roll
mov
rorb
fs
enter
mov
loopne
xorb
xchg
int
pop
icebp
sbb
mov
sbb
push
or
cs
in
push
subb
sti
testl
add
mov
lock
add
inc
das
xchg
jne
adc
mov
neg
in
and
lea
out
push
popw
cmpsb
lss
cmpsb
pop
and
or
lcall
ret
xchg
or
js
je
xchg
addr16
mov
cmpsb
xchg
adcl
fidivrl
in
test
mov
xchg
push
push
xchg
loope
loope
push
sahf
pop
iret
addb
cwtl
adc
cltd
mov
pop
pop
ja
js
fs
sbb
je
fcoml
push
test
add
or
push
leave
je
incb
ret
jmp
ljmp
sub
xor
pop
es
pop
or
jg
test
fsubrs
sbb
lods
movsl
mov
xchg
push
push
mov
into
mov
dec
cmp
out
scas
mov
adc
dec
adc
push
sub
scas
lcall
cli
ja
insl
push
mov
jmp
push
sti
push
repnz
cmp
add
inc
test
or
mov
call
mov
imull
push
testb
and
add
movsb
cli
jle
inc
mov
or
int3
ja
mov
push
adc
add
jle
sbb
xor
pop
pop
pusha
xor
add
or
adc
int3
xchg
mov
push
cmp
int3
es
test
test
shrb
pop
xchg
mov
mov
or
or
lcall
push
ret
in
stos
add
lods
pop
int
mov
push
addb
ds
pop
add
or
mov
lods
or
jle
xchg
jo
pop
scas
sub
into
inc
jne
inc
jo
mov
mov
push
addb
push
add
lcall
jbe
push
cmp
popa
push
add
add
rcr
jle
adc
push
lahf
and
inc
lock
mov
scas
loop
xorb
add
addb
or
movsl
cmpb
es
in
ret
or
lock
jp
lcall
adc
push
push
xchg
cmp
lea
inc
divb
inc
dec
add
add
sbb
or
xorb
sbb
mov
cli
enter
addr16
incb
std
add
subl
lea
pusha
or
jle
sarb
nop
insl
pop
or
mov
ljmp
pop
sub
addr16
mov
shlb
lar
rolb
and
sub
lock
pop
jne
int
lods
jmp
cmp
scas
int3
add
ds
jbe
add
cmc
out
push
data16
rcrb
dec
std
data16
dec
dec
mov
rol
sub
and
mov
cmp
ret
lods
xchg
shrb
xor
insb
cli
and
std
push
inc
add
adc
pop
and
les
stc
dec
rcrb
lds
adc
push
pusha
cld
lea
add
inc
mov
jo
out
scas
stos
test
inc
dec
jge
div
je
call
aas
add
ljmp
add
insl
adcb
jb
aam
or
fisttpl
add
xor
adc
insl
fists
push
add
es
outsb
push
push
insb
adc
imul
fadd
sub
and
pop
push
leave
mov
inc
call
add
or
dec
sbb
add
shr
jmp
mov
lods
loop
adc
test
out
dec
in
jg
icebp
rolb
rorl
adc
dec
push
roll
and
shlb
out
pop
mov
xchg
dec
out
insb
shlb
insb
jb
lret
push
push
pop
lahf
cs
push
adc
adc
push
or
xchg
ret
ret
loopne
and
and
sbb
mov
fildl
jbe
stos
xor
stos
sub
loopne
lock
hlt
mov
sbb
mov
pop
call
mov
mov
cltd
cwtl
push
xor
loopne
stc
or
idivb
inc
hlt
bound
test
pop
pcmpgtd
adcl
js
mov
popa
sub
pusha
sub
and
sti
cmp
mov
stos
aam
push
mov
inc
and
dec
call
sub
js
adc
lret
incl
in
or
push
push
je
imul
std
sbb
fwait
or
in
loopne
xor
mov
pushf
xor
pusha
gs
loopne
or
dec
push
out
je
lea
mov
call
jnp
sbb
aad
or
add
aaa
loopne
push
loopne
pop
pusha
arpl
sbb
cmp
inc
loop
xchg
fisubs
or
or
loop
pop
adc
loop
imul
loopne
loope
incl
call
add
mov
mov
lahf
push
dec
mov
incb
sbb
push
cmc
push
pusha
or
testb
mov
adc
std
loopne
or
lock
daa
divb
or
xor
cmp
les
pusha
test
pusha
adc
incl
shl
ja
pusha
and
xor
jne
in
mov
sbb
mov
adc
cmc
ret
testb
outsl
ja
sti
je
test
jbe
adcb
incl
or
loopne
or
inc
push
cmp
sbb
adc
mov
push
push
fsubl
jno
ljmp
fildll
add
xor
out
or
test
mov
inc
pusha
das
push
add
adc
xor
mov
push
cli
addb
fisttps
jb
and
pusha
scas
mov
aaa
sub
sub
aad
pop
bound
pop
loopne
icebp
push
push
mov
sub
xor
push
lahf
loopne
inc
std
and
pusha
jle
cwtl
sbb
mov
sar
decl
pop
jl
clc
nop
add
sbbb
outsb
inc
ret
mov
pusha
and
xlat
xor
mov
sbb
sub
push
nop
clc
lcall
aad
xchg
mov
testl
fs
cmp
and
clc
arpl
icebp
call
lret
push
jp
jle
mov
add
add
sbb
jp
mov
add
dec
add
mov
cld
enter
jge
je
push
dec
inc
pushf
or
scas
es
mov
dec
mov
jge
adc
mov
adc
adc
add
loopne
cmpsb
clc
adc
pop
ret
popa
outsb
aas
rorb
xchg
data16
dec
push
add
scas
mov
jp
add
or
sub
fnsave
mov
push
inc
pop
mov
push
jb
cmp
mov
dec
jbe
dec
cmpl
out
cmp
push
cld
jmp
jne
add
push
jmp
cmp
add
or
jp
add
ss
mov
push
pop
mov
pop
fisttps
jne
xchg
and
dec
lea
inc
rolb
aas
movl
incl
cld
jne
arpl
test
add
mov
push
call
icebp
jle
and
cld
push
pop
pop
lock
cmpl
and
popa
pop
xchg
mov
icebp
scas
inc
push
nop
push
pop
cld
pop
mov
cmp
xorb
adc
sbb
pushl
xor
fdivl
or
cmpl
xchg
mov
call
push
dec
sub
mov
cmp
or
call
ja
test
mov
test
xor
or
and
adc
push
je
push
cltd
mov
mov
add
mov
xchg
jo
cmc
and
and
mov
push
ljmp
shlb
mov
mov
or
push
xor
pushw
inc
adc
dec
xchg
std
hlt
and
push
push
jp
sarb
lods
push
cmpb
sub
fs
fwait
or
inc
sub
je
faddl
lock
push
lock
icebp
mov
xor
add
mov
cmp
in
and
shlb
sub
clc
aaa
sbb
jno
pop
mov
leave
mov
out
lcall
in
mov
es
ret
xlat
adc
add
test
stos
jne
add
push
jne
dec
inc
lods
bound
jle
call
xor
imul
jmp
je
and
xchg
stos
push
dec
hlt
popl
mov
das
ror
test
jl
ret
inc
add
jb
add
pop
lcall
push
das
add
or
lock
mov
adc
xchg
cld
push
imul
cmp
loopne
or
enter
pop
mov
mov
mov
je
xor
mov
aas
or
enter
lahf
xchg
add
adc
lods
fisttpll
or
stos
add
or
in
iret
repz
push
mov
sbb
call
cmp
pop
cmp
subb
or
mov
dec
xlat
mov
xorb
push
fmul
rcrb
adc
jmp
test
ret
xor
lods
jno
lret
mov
adc
std
lock
mov
idivb
jg
push
test
push
lea
jo
or
jmp
lea
add
mov
xor
mov
adc
inc
mov
lds
enter
adc
lock
adc
add
filds
push
orb
fiaddl
ret
out
icebp
dec
loop
push
shll
shll
mov
push
add
sub
push
movsl
cmpsl
pop
or
push
or
push
jle
jl
xchg
pop
mov
add
add
movsb
jmp
cmp
addl
fcoml
mov
pop
imull
pop
pusha
adc
pop
mov
mov
sub
jo
mov
pop
cmpsb
out
lcall
pusha
sbb
or
mov
lret
dec
iret
xor
adc
add
decb
lcall
mov
mov
xchg
adc
mov
add
call
mov
add
jbe
xor
push
out
pop
lock
mov
jle
bound
mov
mov
int3
or
mov
lock
sbb
sbb
sbb
add
adc
or
stc
lea
or
movsb
xor
clc
push
jmp
and
jbe
inc
and
lret
or
call
adc
jle
pop
pop
dec
xorl
xor
or
popf
and
jno
mov
aaa
adc
outsl
test
jmp
ss
mov
sbb
jno
cmpb
add
dec
fwait
mov
sbb
fisttpll
cmp
call
xor
inc
sub
cmp
adc
and
mov
add
mov
or
add
push
lock
add
and
add
xchg
sbb
add
mov
or
mov
in
push
xchg
mov
jecxz
pop
adc
lock
sbb
fs
fbld
push
jae
pop
pop
lock
mov
adc
adc
push
adc
dec
sahf
test
les
je
jo
sbb
out
out
lea
adcb
mov
pop
call
pop
loop
sbb
push
dec
je
ffreep
pop
subb
cmp
fbstp
das
orb
or
inc
call
sub
add
jnp
push
lcall
sbb
out
mov
xor
clc
xor
inc
les
add
sbb
mov
jg
dec
clc
mov
cmp
push
pop
lock
or
call
loope
add
cmp
jl
sti
mov
test
add
adc
clc
shrl
jl
hlt
jbe
clc
mov
dec
pop
pusha
jnp
or
xor
pop
lock
and
ss
mov
dec
xchg
cs
addb
das
add
fcomps
pop
es
mov
mov
leave
ret
rorb
sub
jmp
cmp
add
inc
adc
inc
pushf
in
add
decb
or
js
repz
dec
inc
adc
add
cmp
repnz
push
mov
mov
iret
add
sub
xor
pusha
movsl
and
out
insb
outsl
sub
lea
iret
mov
add
outsl
sbb
lret
test
jmp
mov
sub
jo
inc
xor
or
rcrl
pop
subl
outsb
lcall
mov
xor
stc
push
hlt
mov
push
mov
cwtl
push
mov
jae
lcall
cs
ss
pop
jo
hlt
mov
jo
sahf
cmp
pop
adc
jg
mov
xor
cwtl
or
add
pop
pop
lods
jb
lock
outsl
xchg
daa
push
sbb
and
push
push
jmp
mov
cwtl
push
mov
jo
je
jo
adc
dec
aad
or
das
pop
insb
xor
jno
push
or
push
js
test
clc
add
inc
sbb
shlb
shll
sub
mov
test
sbb
dec
cli
push
and
adc
out
lock
jb
pop
jle
xlat
cmp
pop
push
pop
addr16
adc
sub
adc
pop
jae
push
xchg
and
jne
mov
inc
mov
add
sub
jnp
sub
mov
pop
push
test
xor
ss
sub
loop
add
cltd
inc
mov
jno
mov
dec
sub
lcall
dec
loopne
push
xchg
call
adc
xor
mov
fwait
mov
add
pop
lods
or
xor
cmp
jl
mov
ja,pt
je
and
xchg
sub
add
push
rolb
cli
or
aad
pop
js
fimuls
hlt
and
je
ljmp
adc
mov
mov
inc
lea
inc
cmpsb
or
pusha
adc
cmp
sub
je
cwtl
pop
mov
ret
cwtl
div
mov
pop
mov
add
les
cs
sar
push
lock
movsb
xchg
push
jo
dec
roll
sbb
sub
sbb
fimull
cld
in
add
or
sarl
add
and
jae
movsl
add
or
loop
loopne
dec
mov
loop
ret
jbe
dec
hlt
mov
imul
dec
add
shl
jg
call
nop
xlat
jno
movsl
rol
fiadds
sbb
dec
pop
pop
pop
pop
xlat
std
loope
mov
adc
push
mov
sbb
pop
call
sti
call
or
ret
fdivrp
cwtl
cwtl
mov
aas
subb
mov
or
jg
icebp
out
and
cmpsb
pop
adc
sub
sbb
push
ljmp
sub
pop
lcall
nop
pop
jg
add
xchg
add
cmp
pop
push
jg
cmp
inc
sar
popa
dec
movsb
out
andb
sub
fcmovb
and
hlt
sbb
pusha
test
or
xlat
push
sbb
loop
call
sbb
pop
cld
in
push
add
mov
hlt
inc
into
adc
sbbb
adcl
stos
clc
test
mov
push
jecxz
sbb
lock
sbb
pop
sub
sbb
sti
or
cmp
cs
rolb
xchg
mov
clc
jg
dec
mov
and
mov
inc
add
sbb
stc
pop
ret
xor
jle
loopne
push
xchg
push
sub
push
movsl
push
xchg
insb
std
or
clc
dec
inc
addl
sbb
sbb
mov
fiadds
pop
pop
add
push
call
aad
es
pop
lea
test
pop
push
inc
adc
xchg
pusha
adc
cs
sbb
pop
lock
xor
ret
add
nop
jp
adc
fcmovnb
or
add
mov
dec
add
pop
in
mov
ficoms
pop
adc
lods
pushf
xchg
mov
mov
lcall
add
mov
xor
lahf
subl
int
pop
adc
gs
add
and
faddl
xchg
jecxz
into
add
pop
or
loop,pt
jp
not
cmp
lods
jg
mov
out
xchg
mov
xchg
mov
outsb
adc
out
mov
arpl
adc
mov
jmp
mov
fwait
pop
incl
and
xlat
mov
sbb
xchg
mov
call
jne
jmp
cs
sub
in
incl
push
rcrl
sarb
add
sbb
aaa
sbb
cs
sub
jl
sub
cmc
jbe
xor
push
and
mov
mov
adc
lods
mov
mov
out
js
fwait
add
cmp
mov
jae
add
mov
mov
jo
jl
add
sahf
jo
jg
mulb
sti
fwait
outsb
loope
xchg
dec
aad
je
addl
sar
pop
push
clc
ret
add
adc
int3
fistl
int3
mov
mov
adc
aaa
lods
shl
add
jne
outsl
mov
cmp
mov
push
mov
pop
ret
xor
inc
rcl
test
and
add
pop
pop
mov
push
lea
cmp
add
add
lds
rcll
pushf
out
push
add
mov
fidivs
icebp
mulb
movsb
and
loopne
ffree
mov
scas
mov
cmp
push
out
fwait
mov
cwtl
push
lea
add
ret
jle
mov
cmp
pop
addl
loopne
cmp
adc
fisubrs
jmp
pop
test
cs
call
mov
xchg
sbb
adc
push
push
sbb
js
push
mov
add
lock
loopne
adc
and
xchg
lahf
add
mov
sbb
outsl
adc
lock
or
fildll
push
push
pop
push
dec
mov
mov
or
jb
xor
and
ja
pop
jb
movsb
negb
insb
jecxz
decl
cld
lcall
xchg
insb
sbb
popf
loope
or
ds
mov
mov
mov
push
push
stos
imul
fsubrs
loop
push
filds
nop
adc
or
xchg
clc
sub
adc
jnp
add
js
outsl
dec
or
stc
loopne
pusha
sahf
pushl
cmp
add
cmp
push
daa
jl
out
sti
lea
out
lock
inc
incl
adc
sub
ljmp
in
hlt
es
clc
or
xor
out
pop
mov
add
jbe
cmpsb
jge
movsl
xor
cmp
push
in
push
sarb
dec
add
popa
pcmpeqw
or
movsl
addr16
add
adcl
aas
dec
in
cld
or
sarb
mov
aas
decl
sbb
ret
pop
xchg
jl
adc
push
sub
and
inc
sub
sbb
scas
jl
sbb
xchg
sub
rcrb
and
sbb
push
mov
fisubs
fsubl
cmovl
jle
mov
xchg
mov
jb
mulb
add
in
addb
sbb
cli
mov
jo
or
loop
bnd
push
jnp
and
jo
int3
js
mov
dec
shrl
out
add
pop
loopne
adc
clc
pushl
sub
mov
jge
mov
push
cmc
mov
jecxz
push
in
mov
adc
out
enter
sbb
dec
or
repnz
adc
add
jmp
jle
daa
hlt
xor
push
pop
lcall
mov
loopne
push
pusha
fimuls
das
cld
adc
sbb
cmp
xchg
mov
outsb
ret
test
ret
test
push
mov
push
inc
push
inc
push
adc
jb
add
or
jb
mov
or
addr16
mov
cmp
cltd
mov
or
push
and
push
push
push
test
cmp
je
stos
adc
mov
rolb
fsub
cwtl
sbb
dec
in
pop
cmp
add
cwtl
loopne
je
sub
dec
mov
mov
inc
hlt
jge
push
stos
mov
pusha
push
cwtl
pushl
adc
add
cld
and
gs
cld
or
filds
clc
dec
mov
pusha
pusha
jnp
push
data16
cmp
sub
xor
sub
call
fnstenv
sbb
pop
hlt
jmp
xchg
or
pop
xchg
ret
andb
sbb
xor
push
sbb
mov
es
lcall
shr
mov
add
hlt
dec
jne
jbe
inc
hlt
mov
lock
jb
jmp
jo
jmp
mov
push
jo
inc
ljmp
mov
call
jl
adc
cmp
std
jno
dec
cld
call
mov
push
rclb
mov
hlt
sub
push
xor
inc
pop
jo
adc
adc
bnd
mov
add
mov
pop
add
es
add
cs
xchg
add
je,pt
stos
push
out
mov
mov
sub
mov
sub
rcr
xor
fadd
and
out
or
push
adc
inc
jo
mov
adc
xor
add
mov
adc
xor
movsl
jbe
sbb
dec
add
icebp
push
xchg
lea
add
jl
fisttps
jne
mov
or
cmp
mov
loopew
stc
call
les
xchg
out
bswap
add
or
push
jns
pop
xor
jno
mov
insb
in
mov
pop
adc
adc
pop
outsb
and
xchg
mov
mov
xorb
pop
mov
sti
sbb
push
xchg
and
or
je
or
pop
jno
or
hlt
jne
pop
xor
sbb
nop
sbb
mov
les
jg
add
mov
adc
xor
cmp
xchg
call
or
inc
scas
push
push
movb
jno
sub
mov
loopne
lock
aaa
lret
cld
add
pshufw
pop
fmuls
pop
adc
pop
fbstp
add
loopne
add
cmp
call
add
jo
call
data16
adc
add
inc
pop
test
test
dec
sbb
shlb
and
xor
jo
mov
mov
pop
call
out
mov
loop
add
and
mov
lock
mov
cmp
pusha
mov
add
pop
ja
ljmp
hlt
add
cli
cmpb
mov
or
ja
and
mov
cmp
inc
pushl
inc
movsl
mov
jne
push
pop
jno
pop
orb
jg
mov
xor
push
call
mov
mov
loop
and
jne
push
mov
lock
add
jne
add
into
adc
and
clc
dec
mov
inc
mov
mov
mov
push
aas
ljmp
mov
pushl
sbb
les
out
loopne
push
jmp
cmp
movsl
inc
add
in
jg
mov
mov
aam
xchg
mov
icebp
pop
xor
sub
jo
jmp
cmp
pop
push
mov
testl
ja
sahf
mov
jns
or
inc
rcr
jle
fistl
and
push
rorb
jne
and
xor
mov
out
mov
add
jmp
inc
outsb
movsb
mov
push
dec
jg
and
xor
mov
data16
jg
lea
and
in
and
iret
inc
lock
je
jmp
mov
or
sbb
cli
into
or
clc
sub
lock
pushfw
inc
test
xor
pop
and
sbb
loopne
jl
pop
adc
fwait
dec
mov
dec
push
xor
lcall
je
aad
je
pusha
ljmp
sub
repz
call
jl
es
das
cld
test
adc
incl
outsl
jmp
mov
jg
push
mov
js
jne
jbe
out
xchg
incb
jge
jmp
push
xor
into
call
rcrl
rorb
fdivr
add
jno
mov
adc
xor
fidivrs
sub
add
push
dec
outsb
ret
ret
fistpll
push
mov
mov
xchg
inc
push
jo
cmp
stos
and
sti
insl
shll
add
and
sbb
and
add
outsl
add
push
decl
xorl
add
std
dec
sbb
cmpsb
call
xchg
lea
clc
mov
cmpl
cmpsb
adc
pop
pop
mov
mov
adc
dec
test
test
das
and
sarl
je,pn
sbb
loopne
xchg
lock
je
js
movsb
mov
sub
inc
je
les
hlt
je
push
cld
push
xorb
xchg
add
push
sbb
ljmp
lds
inc
mov
cmp
cmp
pop
jo
pusha
adcb
and
je
xchg
clc
push
mov
jmp
cmpl
mov
add
int3
fildl
push
lock
stos
add
sub
mov
inc
test
stos
mov
enter
jnp
xchg
mov
js
cmc
out
xor
repz
hlt
fdiv
popa
fisubs
test
shlb
jo
adc
pop
loopne
jle
shrl
jg
inc
aad
clc
and
inc
roll
jo
mov
adc
orb
pop
mov
push
dec
lods
push
push
icebp
push
adc
testl
push
scas
movsb
clc
icebp
pop
or
test
mov
or
mov
cmpsb
inc
pop
push
test
cmpsl
mov
push
mov
lock
push
mov
sbb
test
lock
jo
int
loope
jge
jle
push
xchg
movsb
mov
insl
xor
add
cld
and
xchg
mov
add
scas
ret
and
add
pushl
or
aaa
xor
clc
jb
or
jno
mov
xor
adc
imul
call
xchg
inc
call
push
shl
out
or
push
xchg
or
mov
sbb
fcompl
lock
add
and
outsl
add
lret
lahf
sbb
repnz
inc
insb
andl
or
mov
cmp
jmp
icebp
xchg
add
push
or
insl
jp
add
mov
shlb
faddl
pushl
push
mov
or
mov
jns
mov
sub
aaa
fldt
xor
pop
add
mwaitx
je
loope
jmp
insl
xor
adc
sti
faddl
pop
loope
dec
pusha
or
mov
das
add
call
adc
lock
add
xor
insl
pop
cmp
push
add
inc
es
idivb
fimuls
mov
movsl
dec
pop
maskmovq
idivl
scas
adc
push
push
mov
insl
add
cli
dec
push
aaa
jo
push
jmp
adc
mov
ror
inc
testl
fstpt
outsl
fwait
cmp
adc
sbb
or
insb
inc
or
enter
call
std
arpl
mov
add
loopne
adc
sahf
fcomps
xchg
insb
mov
insb
testb
mov
movb
es
or
sbb
push
adc
sub
add
push
push
outsl
daa
inc
pusha
pop
add
ret
mov
movb
push
rcr
test
loope
and
mov
je
aam
das
je
pop
cld
push
cmp
cmp
mov
andb
inc
adc
out
sbb
mov
push
ret
cmovge
pop
loopne
pop
idiv
mov
pushf
mov
cmpsb
es
mov
mov
je
push
sbb
push
ljmp
add
loop
and
inc
and
dec
cmp
adc
insl
add
xor
test
fmuls
inc
es
sbb
cmp
cmp
jo
pop
sbb
push
cs
sbb
jl
stos
fidivrs
mov
dec
adc
dec
add
or
mov
xchg
mov
mov
jae
mov
cld
repnz
pop
imulb
lret
or
and
adc
or
cmc
gs
sub
scas
ret
push
push
call
add
mov
je
mov
lock
pop
mov
or
inc
scas
icebp
enter
or
pusha
cmp
sub
adc
mov
fdivrp
ret
add
push
or
scas
mov
adc
sub
or
out
loopne
cmp
icebp
fcomip
push
mov
inc
mov
out
jbe
adc
in
in
xlat
mov
stos
push
or
outsl
cmpsb
mov
and
add
cld
sarl
push
push
push
jmp
pcmpeqd
das
ja
jp
cmp
jbe
add
ret
mov
inc
in
lds
pop
sti
jmp
xchg
or
pop
test
or
adc
cwtl
ret
dec
ret
out
sbb
cmc
ljmp
mov
cmp
jl
push
mov
push
push
inc
push
push
shrl
and
push
dec
testb
push
pop
sbb
dec
addl
fdivl
inc
fmuls
pop
fidivrl
cmpsb
in
js
pop
retw
lret
xor
mov
cs
out
adc
call
inc
inc
ret
call
mov
or
pop
adc
push
bound
push
push
push
pop
std
ja
jecxz
cmp
movl
add
adc
movsb
add
mov
xchg
or
mov
add
push
or
dec
push
mov
add
shll
popf
inc
add
fisubs
xchg
and
mov
cli
sub
push
jg
clc
es
mov
add
mov
out
neg
dec
jmp
aas
dec
add
sarl
or
push
repz
aas
out
jb
out
xchg
or
push
addl
mov
lea
jbe
fdivs
mov
lea
int3
int3
inc
fsubl
out
out
cmp
je
or
adc
or
adc
mov
sarb
enter
decl
push
call
mov
imul
call
fdivr
xorl
mov
negl
shrb
or
push
push
pop
adc
icebp
jmp
cmc
lods
push
sti
fstpt
adc
and
mov
shlb
call
ds
mov
sub
sub
lea
or
or
pop
aas
inc
cld
adc
fucomp
push
subb
push
es
mov
mov
dec
sbb
out
outsl
pop
cmp
outsl
pop
sti
aas
push
cmovs
mov
sbb
jbe
daa
push
lahf
aad
adc
mov
cmpl
sbb
cli
xor
repz
add
popa
ss
je
lret
pusha
xor
push
mov
lock
sbb
dec
sbb
or
adc
jp
mov
pop
shlb
xor
fiadds
add
scas
or
test
xchg
push
xchg
rorb
adc
inc
ljmp
scas
call
adc
push
cmp
adc
mov
push
shl
push
mov
mov
push
mov
push
icebp
jbe
adc
push
inc
or
xchg
ja
or
addb
pusha
das
mov
push
xchg
pop
ret
int3
adc
cmp
push
or
je
js
test
fnstsw
push
fcoml
push
or
and
dec
fcmovnb
clc
or
inc
inc
push
and
dec
std
aas
dec
mov
sub
or
jne
push
or
bound
adc
mov
imul
imul
loopne
js
rcrl
adc
out
test
js
call
pop
int3
lea
mov
push
pop
xorb
pushl
decb
pop
mov
sahf
xor
js
or
fs
dec
mov
call
stc
jne
add
pop
shlb
pop
into
mov
add
xchg
xor
mov
add
pop
sub
mov
call
enter
push
stc
push
call
push
jo
or
movsb
mov
cmp
cmp
jbe
mov
lahf
mov
xor
pop
movsb
inc
cmp
out
es
add
insb
sahf
cmp
stos
adc
out
xor
cmp
jbe
push
push
sti
mov
or
push
sarl
or
lretw
mov
add
pop
fildll
mov
inc
jmp
mov
ret
sub
pushl
cwtl
inc
mov
pop
mov
je
inc
adc
dec
ficoms
lret
push
mov
push
popa
pop
cmp
and
call
mov
jb
inc
scas
test
xor
cmp
imull
push
pop
shlb
je
push
inc
incl
push
or
push
add
inc
inc
mov
inc
sbb
sub
jl
inc
jb
push
pop
je
push
push
repz
cwtl
adc
or
cmp
jb
ds
jbe
scas
clc
inc
mov
je
addb
data16
leave
mov
jmp
push
enter
lret
and
xor
jae
mov
and
aaa
flds
notb
mov
popf
push
movzwl
push
mov
push
adc
adc
scas
enter
out
shlb
cltd
or
hlt
xchg
mov
repnz
loopne
movsb
jle
cmp
vmread
filds
mov
andl
dec
movsl
es
xchg
mov
mov
sbb
or
iret
insb
rcll
or
cmp
sbb
xchg
call
rorb
idiv
outsl
pop
jmp
jne
mov
mov
imul
sub
add
fsubrl
sbb
mov
push
enter
mov
mov
inc
mulb
add
or
xchg
jns,pn
call
push
or
iret
xor
or
mov
push
fdivrs
clc
mov
in
stos
adc
mov
or
adc
fcoml
adc
cmp
cli
mov
fmuls
ja
cmp
push
push
jb
xor
lock
jge
lods
in
xchg
hlt
es
decb
adc
cmp
les
jge
les
insl
int
sbb
stc
ss
jl
dec
fstpl
call
add
cmp
pop
add
clc
cld
inc
jmp
jl
loopne
sub
add
scas
push
jmp
lods
push
in
call
inc
sbb
vminss
sub
ss
flds
mov
cltd
pop
lods
sub
or
in
pop
shlb
jmp
push
aam
loopne
subb
outsb
add
add
pop
sbb
inc
lock
sar
inc
daa
cmpb
jle
push
xor
test
add
clc
aas
loope
or
jg
mov
rcrb
push
decl
xor
aaa
outsb
rolb
add
repnz
sar
jbe
sarb
cmp
inc
sahf
loopne
pop
add
push
aam
mov
ss
push
andl
or
jmp
sahf
mov
filds
sbb
inc
les
jl
sahf
add
outsb
or
xorb
rolb
pop
es
in
sahf
adc
mov
sbb
faddl
out
movsb
jo
mov
lods
mov
and
das
cmp
mov
outsb
leave
pop
xchg
fadds
dec
test
dec
sbb
push
rclb
jg
mov
out
add
add
popa
imul
cs
or
call
and
push
es
je
or
call
adc
sarb
mov
jp
inc
shrb
adc
pop
sahf
or
data16
xchg
add
int3
cmp
addb
and
call
pop
lock
jne
call
adc
mov
or
orb
loopne
lea
mov
jl
jne
mov
push
test
inc
dec
push
pop
aam
cld
incb
lds
fcoml
add
sbb
scas
push
and
adc
enter
ret
dec
mov
jo
pop
mov
pop
pop
mov
add
inc
fsubs
inc
pop
mov
mov
ss
add
imul
mov
std
jmp
jl
add
pushf
std
decb
mov
cld
ds
pusha
pop
jnp
lock
sub
mov
push
add
outsl
pop
outsl
pusha
stos
sti
je
repz
pop
ja
push
jle
mov
inc
jmp
or
popf
push
xchg
xchg
mov
mov
rol
mov
pop
nop
mov
sub
jle
call
pop
or
idivb
mov
ja
call
nop
mov
mov
fldt
lret
addl
mov
jl
rorl
rcl
adc
push
jnp
call
call
stos
pop
clc
sbb
leave
ret
jl
lods
xchg
pop
insb
xor
push
mov
pop
sub
push
jmp
cmpsl
or
dec
push
xchg
or
lock
cld
leave
aam
inc
fimuls
mov
cld
leave
xor
inc
or
data16
sub
dec
and
mov
lcall
lock
fmuls
jmp
cmp
dec
mov
inc
mov
push
fwait
pop
jne
mov
cwtl
adcb
icebp
mov
stc
mov
sub
imulb
hlt
outsb
push
xor
xor
mov
push
add
sti
das
into
divb
stos
pushf
jne
jl
xchg
call
aam
fwait
or
sub
fwait
int
mov
call
daa
repnz
je
or
push
lret
fcoms
pushf
dec
std
add
fsubrs
out
sarb
stos
fmull
call
fdivrl
mov
stos
orb
insb
aaa
incb
pop
mov
rcrb
enter
dec
aas
lods
int
lea
jo
sbb
mov
stos
mov
repnz
lods
cld
cld
push
rcl
stos
daa
xchg
clc
jecxz
adc
sub
test
je
pop
add
mov
xor
push
and
orb
inc
scas
clc
decb
clc
and
fidivs
mov
cld
cmp
mov
sar
aas
cmp
add
add
loopne
push
adc
adc
bound
aam
jb
mov
push
cmc
inc
scas
pop
sbbb
or
and
test
push
mov
jp
cli
int3
nop
push
add
xor
lods
mov
shl
xchg
or
mov
aaa
push
es
jmp
or
lret
scas
inc
js
shr
lea
xchg
xchg
inc
out
outsb
adc
cmp
cmpsb
inc
clc
rorb
sbb
loop
jg
es
xor
cmovs
into
push
adc
push
insb
xor
fmull
call
clc
xor
adc
mov
push
loopne
mov
int
cmp
les
test
add
pop
add
pop
push
pop
orb
inc
cmp
out
push
push
ret
fists
mov
jne
inc
call
add
mov
or
inc
and
dec
data16
sub
sarb
inc
rolb
insl
push
sti
or
add
das
in
cmp
push
adc
and
mov
or
lea
push
loopne
scas
jg
ljmp
stc
xchg
inc
sarb
call
stos
ja
andb
std
ljmp
das
xor
or
hlt
neg
cltd
mov
mov
mov
or
ja
fstpt
mov
push
xchg
mov
or
mov
rorb
sbb
fcomps
xor
add
add
push
mov
repnz
fmuls
dec
mov
shrl
sbbl
xor
add
stc
cli
mov
fistl
hlt
cmp
jmp
ljmp
mov
mov
enter
paddsb
sbb
sbbb
loope
mov
stos
stos
mov
mov
pop
lea
sub
inc
dec
sbbb
outsb
mov
or
cmp
jne
push
cld
je
pop
out
jge
lret
xor
cld
or
movsb
sbb
in
push
hlt
dec
ret
loop
incl
scas
rol
test
add
add
lcall
mov
fwait
in
stos
cld
and
inc
sub
fdiv
mov
call
js
stos
fwait
push
shl
lods
pshufw
icebp
cmp
inc
es
sub
or
dec
push
sub
cli
add
lret
add
xorl
call
in
inc
pop
lock
shl
jmp
sbb
add
jb
push
testl
loope
inc
cmp
adc
outsb
clc
ljmp
cmp
jb
lods
cwtl
pop
shlb
sbb
inc
cmpsb
test
adc
int3
lea
or
mov
pop
cmp
or
out
adc
movl
je
mov
push
push
data16
out
cltd
fldenv
adc
or
add
dec
push
insb
mov
jge
call
push
adc
sub
push
adc
add
pop
mov
push
pop
xchg
ret
cs
test
adc
fcom
cmpsb
pop
fdivrp
hlt
dec
enter
xor
adc
sbb
cmpsb
mov
push
pop
call
add
repnz
cmp
fisubl
add
and
xchg
enter
pop
lret
fldt
mov
sub
ror
adc
pop
test
loopne
mov
sahf
sub
add
ret
int
push
shlb
scas
mov
push
sbb
ret
aaa
ret
mov
jns
push
fmuls
movsl
out
push
orb
push
out
inc
je
jg
call
ljmp
add
mov
inc
loope
rcl
addb
add
sti
adc
aaa
add
dec
and
scas
hlt
mov
mov
je
push
insb
push
negb
adc
les
jmp
sub
add
push
push
xor
daa
xchg
push
jle
call
jb
push
pop
gs
pop
pop
daa
cmp
and
xchg
call
xchg
cli
and
loope
call
inc
mov
sbb
pop
mov
fldl
dec
outsl
imul
or
fstpt
pop
jmp
and
mov
dec
bound
push
mov
loop
or
xchg
mov
lods
test
xor
cmp
jb
mov
testb
sub
bnd
outsb
adc
xor
sbb
repnz
aaa
fwait
int
call
mov
inc
xor
sbb
push
mov
ja
lret
add
xchg
xchg
cvttps2pi
sub
int3
xor
cli
pusha
dec
dec
jmp
or
or
dec
push
add
mov
cmp
pop
ret
adc
sbb
test
cld
xchg
inc
add
das
and
aad
fidivrl
push
add
sbb
fsubrl
inc
aam
js
mov
in
enter
loopne
sbb
lahf
pop
lock
pusha
mov
cmovbe
adc
or
aaa
nop
jg
cmp
cli
stos
lock
mov
subl
testl
push
pop
cltd
pop
jae
xchg
adc
sti
jbe
push
push
ss
jne
lock
inc
push
aaa
mov
lods
cmp
pop
push
into
mov
jb
loope
or
push
rorl
mov
pop
clc
push
movb
xlat
pop
out
add
xchg
lcall
mov
cmp
mov
fcmovb
dec
mov
je
sbb
cld
jg
mov
cld
enter
out
dec
adc
enter
adc
cmp
mov
cld
add
pop
shlb
jb
repz
push
test
mov
inc
mov
xchg
outsl
sar
cmp
mov
push
and
je
outsb
mov
xor
jne
sbb
cmp
lret
mov
jmp
leave
dec
inc
ror
enter
testb
decl
mov
je
adc
lsl
mov
ds
mov
add
insl
jge
out
shr
idiv
inc
inc
imul
or
hlt
dec
push
or
sub
mov
and
or
xor
cli
mov
add
xor
pop
xchg
sbb
addr16
push
fmull
loopne
ds
fsubrp
sbb
sarw
lock
and
scas
mov
mov
add
pop
aas
fisubrl
scas
call
into
inc
mov
cmp
push
or
cmpsb
subb
pop
mov
adc
test
lcall
js
rorb
push
push
pop
jbe
cwtl
lods
stos
push
push
push
push
sub
inc
mov
call
add
add
inc
int3
stos
cmpsb
daa
sbb
fdivr
or
in
mov
xor
fildll
jmp
mov
cmp
repz
or
add
cmp
push
call
lahf
int
es
jle
sbb
mov
pop
lea
xor
xor
inc
adc
inc
lock
or
les
cli
add
jnp
pushl
leave
jmp
mov
ds
je
cmp
add
mov
ja
iret
in
or
add
addb
xchg
rorb
scas
mov
pop
cmp
xchg
cs
pop
inc
push
xchg
clc
jbe
mov
ret
ficoms
decb
push
scas
jmp
sub
cmp
push
or
pop
adc
out
dec
lock
xor
adc
daa
and
mov
push
dec
push
bound
aam
shrb
repz
je
and
outsb
pop
mov
out
fisttpl
inc
lea
ja
push
inc
and
inc
and
cltd
xor
orb
xchg
shlb
add
lret
mov
inc
push
cmp
pop
cmp
sbb
mov
pop
xorl
and
push
aaa
or
sysenter
fisubrl
scas
push
and
pop
aam
cld
cmp
dec
push
sub
clc
pop
les
out
sub
pop
mov
adc
mov
scas
daa
sub
incb
clc
add
inc
or
mov
testb
fidivl
jbe
push
add
sub
rolb
pop
cmp
outsl
adc
ret
out
push
adc
in
push
call
mov
push
or
das
mov
out
ljmp
stc
call
push
pop
jecxz
cltd
call
push
mov
cmc
shlb
mov
shr
hlt
rorl
loop,pt
or
jb
push
pop
xor
popl
aam
dec
inc
ss
push
or
pop
les
out
es
mov
inc
das
ret
mov
and
ret
les
bound
repz
or
nop
lcall
xchg
ja
mov
push
fs
call
dec
cld
fcmovnu
pop
push
jb
enter
pop
push
mov
pop
add
int
dec
inc
xor
icebp
sub
shll
inc
int3
call
enter
mov
mov
and
inc
mov
rcrl
mov
xor
jb
std
or
jle
into
data16
xchg
mov
call
inc
push
in
lock
loope
mov
enter
scas
out
adc
mov
mov
lcall
test
inc
dec
cmpsb
hlt
lret
add
mov
fcoms
sub
push
push
add
orb
mov
push
dec
add
fidivrs
outsb
dec
lret
push
adcl
or
scas
xor
test
or
cmp
daa
hlt
stc
das
rclb
sbb
divb
lahf
mov
add
push
xor
jb
sub
or
roll
push
outsl
pop
inc
in
cmpsl
inc
clc
and
dec
or
mov
test
push
or
xchg
pushf
cltd
sbb
add
mov
dec
or
cltd
and
xor
pop
testb
cmp
sub
ss
adc
sbb
dec
shlb
adc
xor
push
mov
lea
push
mov
mov
mov
cmpsb
xchg
inc
test
push
pushf
adc
xchg
sub
inc
aam
out
push
out
cs
pop
push
adc
popa
mov
push
aaa
push
dec
mov
adc
ja
add
pushf
cs
add
inc
xor
mov
ret
mov
push
add
ficomps
das
adc
dec
lahf
outsl
in
popa
pusha
jns
icebp
push
and
cld
pop
in
lret
mov
inc
js
dec
cmp
mov
cmp
cmp
ss
add
push
sbb
adc
sub
ljmp
sub
and
mov
fisttps
xor
cmpw
dec
cltd
or
mov
inc
cwtl
or
lahf
scas
bndstx
cmp
adc
jne
bound
jne
popa
adc
divb
lea
lods
cmpb
mov
dec
or
in
pop
es
out
divb
fdivs
add
adc
scas
ljmp
mov
push
stos
and
xchg
daa
xor
sti
rcrl
lahf
sbb
dec
push
ret
cmp
add
cs
mov
mov
mov
test
cld
jp
pop
push
sub
jp
xor
das
sti
pusha
add
vmovhps
mov
and
ljmp
scas
mov
or
sub
xchg
cli
inc
pop
sub
xchg
lock
add
add
cmp
jno
jmp
sub
push
or
scas
or
inc
cmpsb
cltd
adcb
roll
enter
add
inc
push
or
repz
push
xor
subb
decl
mov
cmp
mov
les
mov
outsl
movsb
repz
inc
add
inc
fdivs
lock
mov
loope
jg
add
xor
xor
cmp
push
adc
ret
loope
cmpl
jmp
int3
leave
fisttpl
movzbl
or
mov
rcl
int3
out
sti
and
leave
inc
cli
fildll
or
lock
mov
ds
or
ja
insl
cli
dec
pcmpgtb
fildl
cmp
xor
data16
dec
or
pop
add
hlt
lock
add
xchg
or
into
incl
mov
int
out
push
negb
add
aas
movsl
cmp
push
ljmp
xor
adc
rorb
rcl
add
pop
lret
jecxz
sbb
dec
add
xchg
adc
or
xchg
dec
jle
outsb
add
cs
mov
pop
lods
xchg
mov
aaa
ljmp
outsb
adc
jmp
xor
testl
add
pop
mov
rcl
testl
sbb
cmp
push
sbb
aas
push
adc
push
sub
fdiv
inc
lock
adc
aad
xorb
dec
mov
dec
imul
adc
mull
fnsave
fwait
add
enter
inc
lods
es
out
test
mov
jle
sub
xchg
xchg
add
das
dec
jo
mov
rcl
dec
add
dec
shl
sbb
cmp
xchg
rcl
push
mov
or
inc
dec
cltd
cld
sbb
dec
clc
ds
lea
mov
sbbl
jns
jne
aas
mov
pop
cmpsl
popa
mov
push
loope
xchg
mov
mov
sbb
mov
add
push
je
mov
ds
pop
and
or
outsl
cmpsl
out
mov
or
push
and
or
mov
mov
jne
pushf
pop
or
jne
mov
cli
sti
push
test
les
jb
jmp
scas
je
dec
fidivrs
je
and
hlt
into
sahf
out
jp
xchg
call
mov
into
or
out
sbb
jne
jl
sbb
or
sti
pop
add
push
mov
movsb
mov
addl
test
push
test
mov
push
sbb
fsqrt
pop
jo
push
out
shlb
andl
adc
arpl
mov
mov
dec
sub
icebp
mov
mov
push
push
idivb
repnz
inc
mov
cmpsb
out
jp
mov
mov
mov
call
add
jg
mov
pop
add
mov
decl
mov
pop
push
call
pop
pop
mull
ss
cmp
adc
call
ss
jmp
push
call
jge
popa
push
scas
dec
sub
mov
jb
push
cmp
addl
mov
inc
mov
xor
jl
lods
inc
adc
rcl
mov
aad
cs
xor
xorl
test
mov
inc
bnd
pop
cli
mov
xchg
push
cmp
jg
add
push
je
inc
divl
addl
je
jl
or
mov
cmpb
jne
or
dec
stos
fcmovnbe
jbe
cmp
out
push
bound
ss
adc
pusha
data16
sbb
xchg
push
fsubs
das
lods
aas
int
sbb
adcb
lcall
adc
and
mov
inc
dec
movsb
je
inc
mov
add
adc
clc
out
mov
bnd
std
sub
out
mov
cmp
addl
daa
and
and
jg
push
add
or
dec
aam
aas
aam
es
sbb
out
int
pusha
jbe
mov
xor
add
push
test
inc
pop
mov
mov
bound
call
fisubrs
pop
fistpl
mov
nop
inc
inc
jnp
pop
das
or
dec
jge
in
clc
cmp
es
adc
add
dec
lahf
test
mov
call
rcrb
cwtl
stos
pop
aad
push
aad
jmp
mov
ret
push
lea
in
aam
jne
test
mov
push
enter
loopne
rolb
hlt
mov
lea
xchg
and
inc
mov
xchg
or
pop
in
daa
mov
cmp
add
movsb
and
pushf
fists
adc
mov
das
sub
push
call
pop
add
lcall
aas
mov
pushaw
pop
cmpsb
inc
scas
pop
xor
mov
aad
int3
jp
mov
lock
ljmp
lea
pop
mov
pop
shlb
outsb
add
pop
sub
mov
add
or
call
ret
or
push
fdivrl
je
gs
lea
dec
mov
pop
push
rcrb
sbb
mov
xchg
jb
mov
ja
push
lea
and
and
sub
pop
clc
popa
sbb
or
or
icebp
add
popf
or
popl
movsb
int3
jne
lret
cli
andl
pop
mov
call
js
dec
call
jbe
mov
xor
add
add
mov
add
jl
dec
test
mov
lea
sub
push
cmpsl
jp
push
jle
aaa
enter
mov
push
sub
cld
aaa
sub
sub
dec
je
mov
dec
push
jbe
out
scas
lds
push
aam
jb
adc
call
test
repz
pop
sbb
push
icebp
push
enter
inc
loope
sbb
scas
xor
lock
sub
je
or
cmp
loopne
push
hlt
imull
jp
sti
sbb
push
jmp
mov
sub
mov
jns
mov
jmp
insb
xchg
jbe
mov
or
or
push
ret
pop
pusha
mov
sbbl
fidivs
push
pop
je
jbe
mov
adc
mov
inc
sti
mov
scas
addb
mov
xchg
inc
dec
mov
pop
decb
jo
gs
in
push
pop
adc
jne
test
add
pminsw
cmp
mov
pop
cmp
add
jecxz
push
je
mov
imul
cmpsb
call
xor
push
test
data16
in
inc
jl
scas
pop
jae
vmwrite
inc
push
into
lret
mov
sbb
push
orl
insb
push
call
fwait
mov
mov
incl
cli
jb
shl
mov
lea
mov
fimull
mov
cmovs
pop
jne
lea
adc
in
sub
jne
inc
lcall
cmp
sub
adc
iret
push
loope
cmc
xor
jmp
pushl
mov
ficompl
mov
mov
sub
sub
test
push
push
or
cmp
dec
inc
add
mov
push
push
call
mov
jle
in
cmp
cmp
inc
loop
icebp
cmp
push
daa
shll
mov
sub
nop
push
cmp
add
add
inc
add
dec
add
sbb
in
ljmp
add
aas
jbe
sub
out
jle
sahf
loope
and
jg
fisttpl
cmp
insb
ljmp
movb
insb
clc
pop
cmp
mov
jo
and
movsb
cmp
pop
out
xor
xchg
push
cmp
pop
or
testb
push
xchg
pop
jne
sbb
aaa
adc
test
push
cmpsb
lds
test
je
pop
mov
mov
jecxz
fdivrl
or
sub
mov
es
into
ds
adc
and
idivb
push
sub
xchg
adc
mov
sub
ds
aaa
dec
out
jecxz
or
cmp
mov
inc
add
push
jb
jmp
mov
aas
out
call
or
xchg
xchg
xchg
dec
aas
push
inc
cmp
cmp
mov
andl
ja
call
test
adc
pushf
outsb
dec
aam
std
pop
out
cmp
lea
lods
insb
ret
nop
mov
jbe
mov
cmp
jmp
test
mov
dec
shrb
imul
call
xchg
loope
mov
and
inc
add
ljmp
pop
mov
call
push
lods
fstps
lods
push
adc
sub
jbe
outsl
or
push
mov
xor
mov
adc
int
stos
pop
add
cmp
jl
popf
ret
xchg
xor
out
out
jl
push
add
mov
nop
or
push
cld
xchg
and
mov
pop
cs
mov
adc
clc
lea
mov
mov
decb
call
or
dec
jne
lock
cmp
lea
adcl
xor
pop
adc
inc
cmp
jb
lret
jle
and
es
decl
or
idivb
mov
lea
pop
test
pop
call
pop
inc
lahf
xchg
jl
mov
je
add
clc
jle
add
pop
movsb
dec
pop
mov
jbe
mov
dec
push
mov
jbe
jb
rolb
adc
and
add
add
push
cmp
iret
and
nop
hlt
pop
xchg
imul
pusha
pushl
lret
js
cmpl
neg
in
and
mov
imul
push
hlt
adc
mov
bound
scas
cld
mov
fnstcw
jbe
adc
scas
je
mov
inc
insb
push
shrl
xor
inc
xchg
repz
je
push
cmp
sbb
call
adc
enter
add
je
inc
cmp
push
or
rclb
std
sbb
jo
icebp
xchg
insb
or
or
cmp
mov
scas
or
or
xor
lods
mov
push
loop
ret
xchg
add
adc
es
xlat
mov
nop
push
dec
push
divb
enter
inc
mov
jbe
sub
xlat
cmp
inc
js
xchg
jmp
mov
sub
test
lock
or
fimull
cld
pop
pop
or
push
pop
pop
cmp
or
fisttps
push
outsb
sbb
sub
xchg
mov
add
gs
std
push
add
inc
mov
jne
ja
add
or
loopne
fcomps
loopne
mov
cmp
push
jb
arpl
test
ja
cmpsb
jb
inc
adc
mov
lock
stc
add
mov
adc
lds
out
daa
and
xchg
aaa
sti
call
js
mov
imul
cld
push
cmpb
mov
jg
jge
pop
push
push
call
adc
add
outsb
add
xchg
mov
aaa
fsubrs
mov
push
mov
fnsave
push
fiaddl
out
outsl
je
jl
add
andb
jge
push
sahf
mov
cmp
or
movsl
and
and
scas
lahf
clc
ss
pop
repz
add
mov
mov
pop
shll
add
ret
and
stc
push
test
lods
aam
jecxz
int3
adcb
add
and
repnz
push
nop
push
mov
xchg
mov
xchg
idivb
add
int3
dec
decl
push
push
jb
shr
js
or
adc
mov
xchg
movsb
sahf
pop
push
and
lock
popf
dec
ret
cld
clc
and
add
adc
subl
hlt
cli
jle
cld
cwtl
clc
nop
outsb
xor
xor
ret
cmp
push
add
mov
xlat
mov
fs
push
das
add
rcrl
or
pop
pop
or
dec
and
inc
lahf
jle
dec
out
pop
mov
xor
xchg
lea
xchg
popf
add
pop
jbe
push
idivb
lock
cli
push
mov
cmp
ret
or
push
dec
sbb
mov
mov
push
insl
hlt
jno
incl
push
and
subb
adc
andl
test
dec
test
mov
push
jmp
shrl
pop
dec
xor
lock
imul
scas
call
pop
loope
roll
loopne
sti
cmp
add
incb
flds
fsubr
xchg
hlt
aaa
loop
xor
pop
addb
cmp
stos
fcomip
inc
pusha
lock
dec
cmp
mul
push
fldenv
ss
pop
sub
incb
mov
sarb
or
dec
jmp
mov
xor
jne
hlt
adc
call
and
cwtl
mov
cli
mov
mov
addb
push
adc
sbb
add
test
lea
push
push
mov
fwait
or
push
cmc
push
rorb
rcrl
leave
bound
push
daa
je
loop
fucomp
fcoms
xlat
test
rorl
rorb
inc
xor
mov
adc
xor
mov
pop
popf
add
lret
adc
rcrl
adc
cmp
mov
sbbb
rclb
mov
pop
sbb
or
cwtl
jne
lret
rorl
cltd
inc
and
sbb
and
cwtl
jecxz
test
mov
jb
xor
xlat
decb
push
xchg
cmp
xchg
or
xor
ret
out
adc
add
jbe
push
add
jmp
int3
dec
xchg
cmp
sarl
mov
jg
les
enter
and
xchg
adc
sbb
pop
adc
xchg
inc
mov
xchg
and
mov
mov
xchg
pop
xchg
add
adc
adc
jb
jmp
push
dec
aas
nop
or
push
fs
adc
cmp
int3
data16
and
testb
fdivs
push
adcb
add
cmp
or
popa
jnp
push
cmp
cltd
incl
or
adc
jo
and
mov
rolb
inc
fcoms
insb
xchg
pusha
movsb
sbb
jbe
mov
cld
mov
and
lret
cli
add
xchg
inc
loopne
lcall
push
inc
rorb
push
add
adc
sub
and
push
add
popf
mov
adc
sub
call
pusha
sbb
jle
imul
or
push
call
or
idivb
sub
bound
cmpsl
dec
xchg
aas
cmp
cs
out
or
or
mov
pop
sahf
loope
and
stos
ss
test
loopne
push
ss
call
loope
sub
sub
lock
loopne
xchg
cmc
push
cld
jp
pusha
sub
jno
or
or
sub
call
sarl
push
cmp
mov
add
and
and
mov
icebp
sub
adcb
push
adc
loop
pop
out
dec
pusha
sbb
cmp
jbe
inc
popa
pusha
mov
sar
pusha
push
mov
sarb
ds
es
cs
cmp
and
jmp
dec
icebp
mov
inc
add
das
call
mov
fldt
inc
aaa
sar
fcoml
pop
or
sbb
inc
es
fs
add
and
jg
arpl
adc
inc
lds
enter
and
and
pop
mov
adc
test
clc
jne
push
pop
data16
push
jmp
push
cmp
jo
xor
leave
inc
aam
mov
scas
call
add
incl
cwtl
xor
adc
in
or
mov
cltd
add
cli
ja
lea
add
jecxz
add
jbe
loopne
shlb
cli
clc
mov
shr
loopne
lods
xor
push
lods
loopne
test
shl
adc
fwait
ret
pusha
adc
add
jg
call
sbb
pop
pop
add
repz
es
dec
test
call
fs
pop
push
loopne
jne
xor
and
lods
std
decl
pushf
pusha
imul
pop
pusha
xor
repz
push
nop
clc
xchg
mov
cmp
add
jmp
sub
and
dec
shl
adcb
dec
nop
adc
incl
ljmp
rorb
shrb
push
orl
push
xor
inc
pop
jecxz
repnz
pop
es
stos
addl
or
adc
xchg
js
mul
sbb
and
int
mov
jmp
pop
lods
andl
jp
add
aaa
sbb
push
xor
rolb
cld
push
push
js
icebp
jecxz
xor
andb
fidivrl
xchg
cld
jle
add
orl
ret
sbb
add
or
je
jl
ret
jbe
sbb
pusha
adc
lods
mov
lahf
adc
pop
js
sub
sub
jb
dec
push
roll
add
dec
push
cmp
sbb
popa
dec
ret
cmp
mov
testb
and
cmpl
cmp
sub
rorb
pop
pavgw
fildl
add
pop
adc
fdivrs
pusha
hlt
xor
add
in
and
mov
add
aas
ljmp
push
or
repnz
idivb
cmp
aad
xchg
dec
add
rclb
and
sbb
jl
pop
add
cmp
es
pushl
cltd
mov
ret
loope
or
push
adc
sbb
add
mov
call
xor
add
sub
jg
ds
or
add
adc
lcall
add
push
test
sbb
movb
lock
or
sbb
mov
push
lea
inc
outsb
lcall
call
mov
push
add
fcmovu
pop
dec
sub
dec
std
arpl
sbb
pcmpeqw
add
xor
or
push
cld
inc
push
push
in
lock
pop
or
push
call
stos
lods
pop
adc
sbb
mov
das
jl
addl
xchg
add
inc
pop
repz
xor
xchg
cmpsb
jo
xor
cs
push
mov
cs
dec
outsl
push
pop
or
or
and
inc
jno
imul
or
out
add
cmp
jo
js
jne
mov
dec
movsb
add
call
hlt
adc
add
sbb
sti
jo
xor
xchg
sub
and
jle
outsb
shrb
jle
cmp
cmpl
jo
push
or
sti
ja
inc
sti
sub
push
jl
sub
jmp
lods
dec
scas
cmpsb
mov
bound
push
mov
add
decl
jns
pop
adc
jbe
mov
or
xchg
push
lods
aam
std
ja
xor
ret
push
push
mov
fwait
enter
shlb
ja
sbb
loope
push
fcoms
hlt
jg
add
adc
jmp
pusha
push
lahf
repnz
and
add
test
js
incb
fstpt
shl
mov
mov
fs
data16
test
lock
mov
ret
sbb
add
or
lock
and
xchg
repz
cmp
push
xorl
and
cld
xor
mov
js
jmp
inc
clc
cmpl
inc
add
je
je
cmp
mov
mov
push
jb
ljmp
aam
cli
ja
adc
mov
jge
inc
inc
cld
aaa
mov
insb
pop
add
xor
inc
mov
add
test
cwtl
loope
mov
push
xor
sbb
add
cld
fbstp
or
add
xor
lea
pop
mov
loopne
inc
mov
les
xor
hlt
filds
test
jle
xor
jb
add
mov
aaa
add
mov
adcb
add
jo
inc
mov
sub
aaa
ret
lock
xor
js
mov
jg
pop
dec
sbb
je
sub
adc
and
cmp
nop
std
jbe
jo
testl
jb
mov
cmp
sti
jb
lock
add
in
adc
sub
pop
jg
dec
fisubrl
enter
xchg
in
sbbb
bnd
inc
loop
call
adc
mov
fbstp
jo
jne
xor
or
inc
out
loope
decl
add
add
sbb
jl,pt
xchg
pop
adc
xchg
add
jg
loopne
jne
jbe
lret
mov
cmpb
int
push
pcmpgtb
cli
addb
cmpsl
je
jb
fadds
cmp
jne
ret
or
mov
mov
push
mov
and
cli
jb
push
cs
jne
push
je
sub
mov
andb
adc
xchg
je
add
dec
adc
pop
pusha
and
xchg
adc
xor
cmpsb
cld
push
push
in
pop
or
and
add
adc
inc
push
cmp
aaa
mov
call
add
mov
mov
inc
xlat
call
adc
loope
add
sbb
and
cmp
sbb
test
adc
and
cmovs
mov
or
jb
mov
mov
pop
cmc
cmpsb
cmp
push
cmpb
cmp
in
add
add
clc
dec
xchg
shlb
fnsave
mov
sub
mov
clc
fnstsw
adc
or
jb
orb
pop
push
cmp
add
out
adc
dec
mov
outsl
adc
mov
sub
es
dec
inc
jo
push
divb
je
fisubrs
mov
cld
add
mov
xor
add
je
sar
cwtl
add
test
xchg
cmc
xor
pop
sbb
push
xchg
mov
inc
ret
addr16
psubq
push
repnz
clc
repnz
je
add
rcll
sahf
incl
add
sahf
jmp
clc
jmp
sub
mov
jo
je
add
es
push
ret
icebp
jns
jmp
and
sbb
fstl
andb
sub
cmp
mov
adc
mov
dec
mov
push
ljmp
inc
sbb
outsb
pusha
xchg
stos
push
stc
or
jbe
pusha
xlat
sub
and
jecxz
xor
je
roll
add
add
xor
pop
imul
pop
lret
and
enter
adc
icebp
xor
or
cmpsl
dec
repnz
adc
fsubs
inc
add
push
mov
inc
iret
dec
in
pop
inc
std
jb
xor
call
jge
repnz
inc
cltd
xor
insb
mov
bound
jno
repz
or
adcb
mov
insb
test
test
jo
in
mov
xchg
xor
pop
loopne
add
push
mov
stc
icebp
rcl
xchg
test
lock
lock
jo
and
arpl
das
adc
jl
jmp
outsl
sahf
int3
mov
jmp
mov
add
dec
mov
mov
inc
xor
add
test
iret
add
pop
push
inc
les
rcrl
sbb
inc
push
push
shll
sub
mulb
shll
je
mov
repz
test
inc
cmp
adc
ret
mov
loopne
repz
inc
inc
scas
lods
adc
leave
xchg
mov
lock
rorl
aas
pop
xor
and
mov
shll
xchg
dec
sbb
repnz
inc
sub
sbb
mov
dec
fisubl
push
rclb
jmp
cmp
push
adc
sbb
sbb
rolb
adc
sub
das
test
mov
push
lock
lret
sbb
mov
and
scas
xor
adc
or
sbb
or
test
xchg
or
mov
jo
sbb
jp
sarb
lock
dec
add
js
sub
inc
les
in
or
sub
xor
jo
mov
lea
xor
mov
cli
cmp
repnz
mov
jnp
sbb
xchg
addb
insb
mull
adc
sub
inc
or
sbb
adc
aas
mov
loopne
daa
test
jg
sub
push
xor
xor
call
cmp
in
pop
sahf
and
pop
repz
testb
cmpsl
cmp
hlt
repz
push
dec
adc
clc
lods
mov
mov
cltd
mov
mov
ret
dec
test
sbb
test
jle
pop
lahf
inc
fmul
push
mov
push
inc
stos
pop
or
dec
divl
es
ret
mov
or
imul
js
adc
clc
and
test
xchg
cmp
call
test
sub
pop
aas
ljmp
in
call
ss
sbb
sub
sub
call
dec
or
jns
jo
jo
jo
out
outsb
enter
or
push
add
out
cmp
xor
xchg
push
inc
jo
mov
aam
mov
or
xchg
xor
ror
sub
call
sarb
jb
ret
scas
add
sbb
mov
ja
or
pop
mov
push
pop
sub
mov
cld
pop
xor
cld
push
mov
mov
inc
pop
mov
inc
push
xchg
inc
and
cltd
in
push
loope
testb
pop
je
lods
out
pop
jno
mov
cmp
inc
and
inc
or
rolb
ret
xchg
aaa
fadds
or
or
or
jb
lcall
sub
xor
mov
cmp
jmp
outsl
jbe
add
jne
je
inc
mov
out
xor
scas
subb
inc
jecxz
mov
inc
xchg
mov
inc
push
ljmp
test
push
or
mov
in
pop
stos
push
movl
mov
ja
hlt
inc
mov
cmp
and
jb
jbe
adc
mov
cmp
jb
add
shrb
add
push
mov
mov
sbb
mov
add
clc
decl
add
sbb
cmp
jne
cmp
int
inc
add
jo
mov
ret
lods
lock
call
mov
adc
je
sbb
stos
pushl
pop
adc
je
notb
jb
mov
add
and
adc
out
add
push
push
add
push
push
pushf
and
mov
push
clc
sbb
jb
arpl
cmp
loope
mov
je
in
sbb
je
addb
js
es
or
adc
jl
cmpsl
test
and
dec
or
pop
cmp
into
inc
mov
inc
shrb
pop
ss
cs
in
loope
inc
or
pop
dec
sti
cmp
mov
jl
inc
hlt
inc
or
lods
or
jb
sbb
mov
sbb
das
jp
movsb
push
push
xlat
pop
or
sub
jae
cmp
test
bound
dec
jmp
dec
pop
jle
push
call
inc
aam
mov
enter
fstpl
aaa
or
jbe
jo
push
cli
xor
loopne
jbe
sbb
fwait
test
jl
inc
les
inc
jmp
pusha
sahf
out
sbb
sub
sub
pop
mov
rcll
aad
pop
call
sti
mov
adc
push
cmpl
xchg
addr16
and
std
push
scas
call
sub
lods
mov
test
ret
adc
cli
cli
inc
inc
jl
push
push
push
out
cwtl
or
cmp
stos
sub
loopne
jnp
imul
fucomip
enter
fwait
add
mov
call
shll
test
dec
sbb
push
sub
scas
inc
add
add
testb
fsubrp
sbb
xorl
pop
popa
add
rorb
std
sbb
lock
inc
fcmovb
filds
repz
int3
std
and
sub
inc
outsb
sub
and
pop
ret
and
mov
push
js
add
sub
psubsw
shrb
and
roll
fimuls
pop
test
sub
sub
daa
mov
xchg
stos
aam
movsl
nop
mov
pop
add
mov
sub
iret
push
sahf
add
jmp
xchg
pop
pushf
es
fstpt
jo
mov
jle
xor
lea
jecxz
scas
xor
ds
jle
into
add
push
pop
fcmovb
test
std
pop
or
mov
test
ds
jle
les
aaa
stc
xor
add
jg
sbb
jg
outsl
call
adc
dec
loope
mov
lock
or
pop
pop
inc
sub
sub
xchg
or
and
ret
jmp
pop
ds
mov
adc
inc
je
test
pop
and
xchg
sbb
push
test
int3
dec
cmp
sub
mov
nop
xor
das
or
ja
mov
adc
mov
xor
loop
pop
int3
lcall
mov
adc
ds
adc
sti
lds
push
pop
jg
das
inc
shlb
cmp
mov
cs
mov
xor
adc
sbb
mov
jmp
mov
jb
mov
movb
ret
decb
fnstenv
add
nop
dec
cltd
cmp
mov
push
ficompl
sbb
xor
pushl
xor
cli
stos
cmp
fsubrl
and
mov
mov
jb
pop
movsb
pop
jno
xorl
mov
mov
mov
pop
mov
cmp
mov
enter
iret
push
aad
cld
add
mov
lcall
stc
movsb
lock
in
add
testb
adc
sub
stc
push
sar
lret
loope
xlat
fistps
mov
add
or
mov
jle
sub
ds
cmp
mov
jne
mov
and
or
cmp
mov
inc
jns
add
test
sbb
cld
lock
clc
mov
aas
jbe
push
ud0
adc
adc
mov
rcr
cmp
cmp
or
fsubr
add
mov
stos
stc
and
mov
rcrl
push
push
lock
or
add
fldt
jl
ja
cmc
jbe
inc
dec
add
loop
rcll
bound
jne
outsl
dec
dec
cmp
xor
jl
aas
mov
sub
ret
adc
add
popa
pop
in
sub
jne
inc
jbe
add
bound
dec
push
pusha
jmp
dec
add
pop
or
mov
xor
cmpsl
xchg
add
cmp
lea
xchg
mov
pop
shll
test
mov
xor
fbstp
xor
test
jne
sbbb
hlt
je
cmp
jmp
lock
lea
ret
dec
ja
out
rorl
pop
icebp
or
repnz
jb
shrb
dec
mov
lds
addb
mov
inc
cmp
jl
sub
sbb
mov
mov
aas
fistpll
or
push
cli
mov
push
or
mov
cmc
ret
lea
call
jle
mov
jne
or
add
mov
cmp
push
mov
loopne
jmp
lock
adc
js
hlt
cmpsb
pop
cmp
mov
cmpsb
fdivrp
jbe
lea
inc
jb
ss
sbb
inc
mov
pop
cmp
adc
mov
lods
call
jne
push
xor
aaa
lods
iret
or
dec
mov
addb
push
push
test
ja
and
bound
pop
insl
mov
ficoms
test
rcll
fs
insb
into
add
cld
push
mov
push
mov
push
sbb
add
mov
add
mov
data16
ja
add
ret
das
push
add
mov
adc
incl
inc
pop
loop
mov
sbb
push
fildl
rcll
loop
pop
or
or
sbb
cld
push
push
push
push
xchg
jecxz
addl
mov
jne
je
call
idiv
sbb
push
push
push
jmp
and
jle
jecxz
mov
jl
jg
dec
sbb
in
dec
cmp
push
jb
add
icebp
shl
sbb
adc
testl
and
pusha
cld
test
sarl
jg
mov
push
fistl
popf
test
add
das
pop
div
or
push
jo
rcrb
call
add
jle
call
xor
je
add
push
add
pop
cwtl
mov
mov
fwait
add
adc
cmpsb
pop
test
mov
call
mov
push
mov
call
ds
scas
hlt
fisubrs
cli
iret
pop
ret
sti
xor
xchg
fwait
js
cld
dec
mov
rcll
push
mov
adc
je
ss
cmp
add
xor
femms
cltd
mov
jle
insb
adc
push
call
push
add
push
or
icebp
loop
cmp
lock
rorb
push
ret
sub
jbe
inc
push
push
cmp
add
pusha
scas
ja
enter
add
add
push
adc
fisttpl
adc
fisttps
hlt
pop
xor
rcrl
dec
es
push
dec
adc
rolb
dec
mov
inc
push
ret
push
or
in
xor
jbe
inc
push
add
jne
add
rorb
sub
enter
xchg
push
sub
push
in
jl
add
xchg
lret
or
push
fists
cmp
mov
sbb
rolb
cwtl
mov
fmuls
sub
cld
pop
add
test
movsb
loope
mov
orl
clc
call
mov
and
inc
sub
in
cld
jmp
pop
xor
mov
push
adc
cmp
mov
sbb
fxrstor
and
outsb
pop
xorl
adc
push
loope
and
pop
call
jp
cmp
inc
clc
sbb
adc
pop
sti
inc
nop
daa
mov
outsb
fs
adcl
insb
fdivl
jl
xchg
loopne
cli
cmp
mov
sti
mov
pop
add
add
adc
mov
outsb
xchg
and
shrl
sbb
enter
mov
jmp
and
adc
push
and
or
pop
jo
or
xchg
mov
mov
movsb
insl
nop
mov
xchg
in
aaa
fstpt
and
sub
push
pop
mov
xchg
xor
jmp
push
sbb
mov
fbld
cmp
lock
sub
jp
mov
in
inc
pop
test
cmp
imul
in
cmp
lods
add
pop
mov
es
scas
pushf
inc
mov
dec
sub
movsb
push
mov
ffreep
fwait
loopne
movl
mov
and
lods
out
fs
mov
pop
decb
adcb
nop
imul
pop
add
mov
push
bswap
mov
push
rolb
lea
pop
loop
inc
mov
mov
sub
ja
pushf
ljmp
cmp
mov
and
push
ret
scas
cwtl
dec
sub
out
fsubl
cld
inc
in
adc
into
test
insb
mov
add
testb
shlb
js
adc
push
cmp
xchg
adc
mov
dec
add
in
call
addb
push
sub
cltd
test
push
fstl
mov
adc
mov
loopne
je
or
push
dec
lock
sahf
daa
int
rorl
lldt
xlat
jne
fildl
push
xchg
jg
cwtl
adc
inc
pop
inc
in
mov
call
mov
xor
adc
testb
pop
inc
in
ret
movsb
stc
sub
mov
adc
xchg
inc
cmpb
fsts
in
jo
inc
adc
ficompl
sti
rclb
dec
or
ljmp
pop
sbb
cmp
add
sbb
pushf
push
xchg
add
pop
lods
push
leave
xchg
jnp
dec
insb
andb
sbb
or
adc
pop
les
sbb
dec
insl
inc
icebp
mov
mov
je
sub
es
mov
out
cmp
inc
xchg
outsb
shrl
jle
mov
sar
dec
les
add
xor
fwait
clc
adc
pop
add
test
add
les
fsubrl
mov
aaa
dec
adc
and
pop
jecxz
cltd
movsb
daa
movsb
pop
or
or
hlt
scas
mov
add
add
js,pn
pusha
cwtl
pop
hlt
fdivl
sahf
inc
mov
cmp
nop
xor
popf
mov
test
les
stos
stos
mov
mov
cld
lock
sbb
jle
rorl
test
adc
push
adc
adc
divb
inc
cld
add
add
scas
aam
sbb
mov
pop
add
fld1
mov
add
int
or
stos
adc
xor
inc
testl
rcrl
sub
add
mov
fldt
es
subb
lahf
xchg
mov
mov
insb
add
fisttps
movsb
mov
rcl
addb
pop
test
je
mov
sbbl
roll
les
jne
cli
and
shlb
mov
mov
pop
jg
rcpps
jb
or
outsl
call
push
leavew
push
ficompl
sbb
orb
adc
repz
sbb
adc
xchg
inc
mov
mov
inc
add
inc
jbe
add
repnz
push
sbb
clc
push
adc
fadd
lea
rcl
rclb
sbb
js
pop
stos
mov
mov
sub
int
sarb
push
jecxz
roll
add
push
cld
pop
jno
mov
sub
imul
push
addr16
push
sahf
inc
scas
lcall
adc
jge
sbb
jbe
xchg
mov
sub
mov
xchg
xchg
rcrb
cli
rcrb
pop
jmp
popf
into
pop
push
push
mov
sarb
adc
int
or
and
add
and
lock
pop
inc
addl
daa
inc
sub
rol
add
insb
mov
mov
add
add
arpl
jb
enter
xlat
xchg
or
or
call
dec
add
dec
int3
mov
jp
mov
sub
repz
mov
inc
pop
mov
leave
add
xchg
jo
js
cld
pushl
push
add
mov
cmp
test
pusha
add
push
add
and
xchg
push
xchg
jb
sbb
rcr
cli
test
dec
leave
adc
push
js
jl
sub
push
adc
push
sub
adc
jae
aas
xorb
movsl
adc
daa
lods
mov
call
scas
shlb
ja
xchg
jp
test
sbb
pushl
adc
cs
xor
mov
xchg
popa
add
mov
or
mov
add
push
cmpb
cmp
pop
pusha
jno
xor
mov
pusha
pusha
push
jge
jecxz
add
mov
lret
push
lock
sbb
mov
add
push
xlat
adc
mov
dec
insb
fstl
leave
or
sahf
fcoms
cli
jg
jl
popa
adc
popa
xchg
dec
xor
push
and
push
int
loop
pushf
mov
mov
or
loopne
stos
xor
cli
and
je
pop
dec
push
xor
and
pop
sbb
cmp
or
jb
add
call
or
or
pusha
xchg
push
addb
movsb
call
hlt
call
jmp
sbb
mov
adc
adc
mov
orl
jo
movmskps
sbb
jp
or
pop
jae
scas
or
sar
ljmp
push
call
mov
test
adc
outsl
cli
scas
mov
pop
ret
std
inc
mov
inc
push
add
sub
push
inc
scas
cwtl
jmp
cmp
rcr
mov
xchg
push
jae
orb
push
ljmp
xchg
xor
jg
add
sbb
jne
shll
pop
sahf
into
ja
cmpb
add
loopne
or
les
clc
add
pusha
push
push
xchg
call
add
adc
punpckhdq
imul
dec
add
xchg
jbe
mov
movsl
leave
jecxz
pop
add
fimuls
filds
inc
pop
mov
dec
adc
cmp
sbb
je
and
ds
push
je
lea
add
idivl
cwtl
mov
enter
push
clc
add
mov
xlat
insb
ret
xor
sub
clc
filds
dec
jl
arpl
lods
pusha
or
adc
es
push
xor
fidivl
push
scas
push
push
cmp
pop
ljmp
cltd
fcoml
and
aam
sbb
mov
pop
inc
mov
or
pop
jmp
and
inc
or
push
inc
push
and
loopne
adcl
sub
sub
movsl
mov
add
into
and
sub
idiv
or
sbb
call
cld
pusha
or
push
xchg
shll
scas
mov
and
fsqrt
bound
shll
into
subb
js
loop
sbb
gs
loopne
pop
pop
in
pop
clc
incl
push
pop
sub
fs
dec
xorb
repnz
inc
call
push
xor
xchg
cld
mov
decl
ja
call
test
adc
mov
les
inc
mov
notb
push
jno
xor
mov
adc
mov
test
lret
and
jl
mov
or
inc
mov
negb
out
ret
inc
loopne
ret
push
mov
add
incl
cwtl
pop
or
adc
xchg
das
add
push
push
xor
mov
mov
cmp
mov
pop
lock
push
shrb
sbb
push
xor
inc
dec
xor
adc
incl
cmp
sbb
xor
inc
clc
inc
mov
outsl
nop
push
mov
je
cmp
scas
mov
movsb
mov
movsl
lods
cli
sub
inc
inc
rcr
add
es
pusha
mov
sub
lock
lock
and
fildl
test
mov
shlb
jecxz
jnp
push
and
mov
pop
push
aaa
pop
hlt
add
cltd
jne
jg
inc
ja
cmp
adc
pusha
lcall
rsqrtps
push
lock
and
xor
shr
jg
scas
xor
mov
inc
xor
sbb
mov
mov
mov
add
push
jno
pop
cmp
outsb
jg
mov
jo
call
add
into
lock
ljmp
push
lock
lock
fcomip
call
mov
mov
out
call
pop
adc
sbb
ja
fcomps
pushl
lods
pushf
pusha
jo
lock
or
jo
jg
add
jg
xor
mov
or
xor
aas
push
dec
and
aam
jae
jl
jo
mov
data16
mov
mov
pop
call
incl
cmpsl
mov
inc
add
or
jne
xchg
pop
dec
aam
loope
adcb
sbbb
push
lock
add
sarl
or
mov
mov
repz
in
push
mov
ljmp
push
add
jo
bound
mov
xor
push
mov
push
push
hlt
add
xor
adc
mov
add
inc
pop
jp
xchg
or
mov
idivb
add
mov
fdiv
or
lahf
pop
or
add
xor
sti
jb
decl
je
in
push
subb
mov
test
pop
cmc
pushl
xchg
pop
and
jo
les
dec
xchg
mov
fbstp
cmp
dec
das
xor
mov
and
cmp
lea
idivb
mov
adc
mov
test
or
pop
jno
mov
test
push
push
test
fistpll
ja
adc
lret
and
mov
push
mov
cli
push
mov
mov
sbb
mov
or
mov
add
rcrl
scas
add
test
ss
push
add
out
or
and
adc
test
jecxz
xchg
add
stos
sub
fbstp
ljmp
mov
pop
lea
push
push
lea
inc
sar
xor
xchg
add
lods
lock
lock
cmp
inc
call
mov
add
sub
add
mov
pop
fcomip
or
and
pop
fidivl
and
push
adc
jne
popf
sti
add
add
add
call
sub
cli
sub
icebp
iret
add
add
stos
lods
out
xor
fisttpl
es
xlat
mov
je
sbb
and
outsl
sub
dec
lods
xchg
dec
mov
sbb
lods
sbb
add
adc
daa
out
rorb
mov
add
dec
mov
or
lock
mov
mov
xor
test
adc
jg
dec
dec
and
movsb
fs
or
pop
pop
fimull
loop
sub
scas
or
pop
inc
cli
scas
mov
adc
lcall
mov
mov
xor
push
pop
movsb
sbb
jo
xor
in
loope
add
sbb
mov
and
jp
jo
ljmp
fdiv
push
ja
cmp
jo
call
xchg
sbbb
dec
fistl
loope
dec
loopne
add
outsb
xor
mov
or
mov
jle
push
push
add
test
xchg
shl
push
test
movsb
outsl
outsl
sbb
inc
cmp
mov
mov
js
sti
mov
push
arpl
call
push
add
xor
fdivrs
mov
aaa
pop
xor
add
mov
adc
push
xor
mov
or
or
nop
icebp
outsl
mov
pop
add
jp
xor
xor
daa
add
add
xlat
jno
inc
shlb
xor
or
mov
jo
dec
mov
xchg
stos
mov
mov
mov
adc
nop
and
xchg
xchg
adc
ss
cmpl
xor
bound
push
inc
inc
inc
or
xor
add
shrb
jo,pt
dec
sub
mov
mov
inc
inc
xchg
push
shrb
mov
stos
call
pop
xchg
inc
pusha
sbb
ljmp
jg
inc
adc
pop
mov
xchg
and
mov
jmp
je
call
clc
push
xor
push
xchg
sub
sbb
repnz
cs
mov
mov
mov
jmp
pop
mov
in
or
mov
jp
leave
push
jne
je
call
orb
xor
push
pop
sub
and
lcall
fisttpl
test
jb
out
xor
xchg
or
les
push
call
jmp
adc
add
mov
ret
pop
out
xor
not
add
das
xor
adc
mov
sbb
cmp
mov
mov
int
mov
xor
pop
outsl
xor
cli
mov
decl
outsl
mov
sub
or
or
mov
or
mov
sbb
mov
daa
add
or
test
bound
inc
and
sbb
inc
pop
popf
in
mov
push
push
cmpsb
dec
movsb
xor
lahf
dec
mov
xchg
pop
add
je
fsubrp
testl
xor
add
mov
jo
fwait
mov
call
mov
pop
mov
add
das
nop
cmpsb
pop
sbb
dec
movsl
xor
xlat
add
mov
shrl
rorl
pop
adc
mov
and
or
adc
pop
xchg
add
inc
mov
xchg
dec
mov
stos
sti
ljmp
add
push
mov
push
frstor
and
jmp
and
xchg
xlat
xchg
add
push
test
mov
or
inc
adc
andb
jg
addb
fiadds
sbb
orb
and
hlt
mov
jno
mov
inc
outsl
fsubrp
add
push
sbb
xor
mov
sbb
mov
sbbb
or
pop
push
adc
sub
subb
imul
pop
add
mov
cmp
mov
fwait
inc
hlt
push
mov
cmp
xorb
or
inc
mov
pop
or
or
lods
arpl
cld
incl
adcl
xchg
je
add
addl
push
pop
arpl
clc
xchg
adc
fcoms
mov
cmp
mov
jmp
dec
push
rclb
inc
ret
jnp
pusha
mov
loopne
pop
or
mov
into
pop
ficoml
mov
sub
sbb
push
sub
in
stos
mov
mov
str
xor
mov
stos
rcr
inc
loopne
rcrl
push
or
mov
mov
ret
sub
cmpl
add
mov
push
jbe
push
loope
andb
and
mov
addb
adc
jg
and
icebp
push
xorb
cmp
call
sarb
es
xor
sub
pop
mov
add
inc
sub
adc
adc
imul
sub
faddl
sub
hlt
shll
add
add
movsb
xchg
decb
add
mov
add
test
xchg
movsl
iret
or
je
jb
dec
aam
rorb
rolb
xchg
ljmp
outsl
loop
add
sub
fcmovu
shlb
push
pusha
mov
jge
xor
lea
in
les
sarb
cmpsl
mov
hlt
pop
loopne
add
adc
or
xchg
or
sub
adc
insl
adc
hlt
push
movsl
ljmp
sarl
je
scas
or
test
lock
cmp
fistpll
sbb
inc
data16
sbb
addb
std
dec
xor
lds
add
pop
rclb
enter
rcrb
sbb
aaa
imul
and
hlt
push
jl
adc
lret
movsl
push
add
add
add
inc
loopne
or
adc
inc
push
int3
add
dec
and
xor
loopne
jg
xor
bound
push
pop
jecxz
cmp
push
mov
popa
sbb
movsb
add
ds
add
popa
jae
push
xor
sbb
push
adc
mov
je
xchg
inc
pop
sbb
inc
add
add
and
push
xchg
test
add
mov
fldenv
or
and
or
mov
dec
insb
pop
adc
sbb
pop
push
mov
cmp
clc
sub
or
pusha
pop
sub
scas
daa
inc
aad
inc
aam
or
fistl
or
push
push
int3
nop
or
pusha
inc
out
push
popa
addr16
mov
adc
pop
add
push
mov
sub
bound
adc
inc
data16
fistps
push
loopne
loope
dec
pop
pop
pop
insl
fldt
adc
ljmp
push
mov
sub
jle
lods
ret
add
add
and
stos
mov
loop
cmp
sub
adc
jecxz
or
imul
loopne
loopne
push
rcr
movsl
push
mov
lods
mov
lods
jo
add
mov
inc
insb
loopne
jmp
push
fisubrs
sarl
push
and
adc
stos
into
icebp
or
inc
and
lret
call
push
xchg
cmpsb
adc
dec
das
xchg
lcall
or
imul
inc
dec
mov
or
pop
or
push
aaa
test
aas
adc
pusha
or
ret
xchg
loop
push
or
dec
icebp
mov
nop
push
fbld
cld
adc
shl
pop
adc
push
pusha
mov
add
arpl
or
xchg
or
bound
mov
add
out
loopne
lock
sbb
sub
sbb
or
fcoms
lahf
es
loopne
fisttps
and
and
out
jae
pop
icebp
scas
cli
pop
jl
loope
mov
mov
mov
mov
cmpsb
mov
pop
loopne
js
aas
pop
ret
sbbb
insb
les
or
cmp
add
and
sbb
addl
xor
pop
xchg
out
mov
pusha
rorb
cmpsl
loopne
sti
jae
lock
imul
rolb
add
mov
or
pushf
loopne
mov
es
or
jg
hlt
add
into
loopne
fiadds
mov
and
mov
shr
jecxz
pusha
add
push
mov
add
jo
or
orb
jle
cmp
in
or
cmp
stc
test
mov
in
or
pusha
pushf
popa
popa
jg
lock
mov
insb
mov
inc
shl
lahf
pop
cmpsb
pusha
stos
stos
cmp
push
add
movsl
scas
test
inc
jecxz
jmp
nop
mov
mov
pop
das
add
popa
es
faddl
sbb
sub
ficompl
mov
lock
push
ljmp
sbb
pop
cmc
push
outsl
mov
bound
mov
mov
push
mov
push
gs
jne
add
loopne
dec
lods
popf
loope
pushf
jl
inc
outsl
xorb
push
dec
hlt
cmp
aas
add
xor
or
stos
jb
inc
es
jmp
bound
or
jg
sbb
pop
xor
loopne
xor
or
mov
loop
pop
lock
mov
adc
add
add
call
cmp
push
push
jmp
xorb
xchg
arpl
bound
mov
call
inc
divl
add
jp
dec
jbe
or
jb
mov
cmpsl
test
pop
ljmp
adc
lea
pop
sub
pushl
sub
cmp
subb
andl
mov
orb
in
xchg
fistpll
pop
pop
add
lock
inc
ret
lock
fst
lock
xor
jo
push
je
lock
lcall
push
test
pushw
orb
loop
into
mov
repnz
xor
push
push
inc
cld
push
sbb
mov
call
inc
push
add
dec
inc
ss
in
xor
cmp
sti
xor
clc
es
push
nop
jbe
inc
arpl
mov
and
pushl
fsubs
loop
in
or
xor
xor
pop
sbb
rcll
jmp
fidivrl
or
push
jg
mov
mov
cli
arpl
xor
rcr
push
shll
adc
shrb
call
push
inc
inc
mov
mov
cwtl
movsb
push
lock
xor
mov
sarl
sbb
js
mov
dec
mov
push
adcb
pop
stos
sbb
mov
out
jo
loopne
mov
insb
add
cli
mov
adc
mov
cli
ss
inc
push
sarl
lcall
dec
mov
mov
clc
mov
push
pop
rolb
icebp
sbb
pop
test
inc
or
es
jle
insb
or
dec
lock
adc
cs
sub
das
add
sub
xor
and
sub
sbb
clc
xor
jl
cwtl
adcb
insb
loopne
or
pop
mov
call
dec
push
inc
pushl
lock
lock
aaa
adc
dec
nop
adc
pusha
xorl
shl
pusha
mov
xchg
lret
lret
test
add
mov
jo
cmp
rcrb
sub
jmp
push
and
xor
push
dec
cld
incl
add
cltd
inc
je
add
fs
mov
call
jge
cli
mov
mov
xor
divb
push
sbb
aaa
push
cltd
mov
aad
pop
and
inc
mov
push
inc
loope
cmp
movb
test
lods
xor
stos
mov
sub
jp
pop
lea
jle
cmp
cmp
pop
lcall
inc
call
sbb
call
sub
lds
mov
andl
xchg
jl
lock
push
adc
adc
cld
pop
xor
ret
dec
and
add
sbb
adc
xor
adcl
sbbl
incb
add
test
scas
push
dec
sbb
lock
xor
push
jae
mov
xor
repz
insb
popa
mov
jb
icebp
dec
fimull
std
push
mov
aam
icebp
and
nop
mov
insb
add
add
sbb
or
and
stos
mov
mov
je
or
mov
adc
push
mov
lret
sbb
adc
es
ljmp
lds
mov
pop
inc
xor
mov
mov
inc
test
popa
in
test
xchg
jno
pop
adc
inc
fcomip
or
push
inc
xor
pop
mov
mov
mov
push
inc
dec
push
xor
lods
cmp
hlt
jg
jb
add
repnz
add
xor
mov
loope
xchg
mov
sub
scas
or
icebp
dec
jne
xchg
xor
mov
fsubr
imul
mov
cwtl
inc
int3
fidivrs
mov
xchg
push
std
das
or
sub
mov
or
aaa
mov
xor
cmp
mov
inc
inc
fwait
dec
adc
sub
push
ret
ret
cmp
add
sbb
fwait
lods
or
lock
rclb
out
pop
cmc
fbstp
out
inc
lock
or
stc
or
popa
xor
je
and
xor
sub
dec
jb
jo
rcrb
adc
add
mov
popf
sbb
adc
lods
mov
add
hlt
sub
cmp
sub
dec
nop
mov
lcall
jb
inc
mov
xor
aaa
add
jo
jg
add
mov
mov
pop
mov
div
add
add
jo
pushf
xor
fwait
and
out
adc
jne
mov
pop
push
and
jne
ljmp
inc
lock
in
xor
jo
mov
call
mov
or
mov
add
sbb
xchg
push
jb
push
mov
mov
lds
mov
mov
lea
inc
divl
test
shrl
clc
push
fadds
cmp
mov
add
and
gs
sub
adc
fildl
test
inc
andb
lcall
add
fwait
add
jne
cmp
call
sahf
rcll
fs
inc
lcall
mov
cld
ljmp
lds
je
jae
inc
or
xor
inc
test
mov
jg
push
adc
mov
mov
jo
push
pop
lock
iret
scas
and
negl
movsl
inc
push
loopne
inc
add
xor
call
addb
or
loope
decb
cmp
xor
and
xlat
inc
jo
vfmaddsub213ps
mov
in
js
leave
jo
fwait
ss
addb
rclb
lock
mov
andl
test
loopne
or
push
aam
adc
push
jmp
ss
data16
divl
dec
sbb
mov
cmp
call
sbbl
jo
call
add
mov
aam
adc
out
and
in
jle
je
push
cwtl
xor
add
xor
push
mov
das
mov
mov
cmp
mov
call
push
mov
std
movb
inc
add
clc
jb
dec
cld
sub
add
je
jge
adc
mov
sub
sbb
movsb
sbb
call
rcrb
ljmp
enter
or
stos
pop
adc
dec
clc
sub
add
cld
mov
rorl
lret
rclb
sti
ds
bound
xor
or
mov
adc
mov
test
ljmp
dec
mov
inc
or
inc
cmovs
adc
cmp
cmp
and
loopne
hlt
xchg
sbb
push
cmp
add
mov
adcl
pop
cmp
fistpl
sbb
mov
cmp
scas
sub
mov
mov
push
js
sbb
loop
sbb
mov
or
repnz
aas
cmpb
add
test
push
fwait
out
xor
mov
cwtl
cld
mov
dec
mov
push
sub
push
bound
insb
xor
cmp
sub
pop
dec
or
add
lea
sbb
xor
decb
push
data16
out
jp
sbbb
push
push
mov
insb
movsl
xchg
bound
or
push
mov
cmp
push
add
or
mov
lahf
ljmp
mov
bound
inc
and
sahf
pushf
or
cltd
adc
shrb
test
aas
pop
adc
mov
mov
adc
push
pop
xor
and
inc
and
adc
dec
mov
and
ds
enter
loop
sub
aam
add
rorb
sbb
mov
mov
pop
call
add
sbbb
jne
testb
andl
cs
mov
lea
mov
testl
in
mov
mov
jp
inc
shrb
dec
cmc
aas
movsl
inc
je
add
ret
mov
sub
cmp
dec
and
call
call
lret
sub
add
mov
xchg
addb
adc
into
rolb
add
pop
or
outsl
scas
mov
dec
ja
cld
xor
jo
inc
pop
ret
sub
pop
add
call
rolb
rolb
subb
pop
add
pop
or
add
adc
or
push
mov
inc
inc
pop
es
mov
push
mov
adc
call
adc
push
ds
inc
push
push
cmp
int
scas
cmpsb
es
lods
sti
adc
sarb
lcall
hlt
jne
mov
and
add
inc
push
push
cltd
outsb
clc
decl
add
lcall
xor
rol
mov
adc
adc
aaa
outsb
xor
lock
push
decl
sbb
scas
lea
subb
sub
jb
shrl
push
js
xchg
fimuls
test
clc
lock
xchg
jp,pn
push
and
rolb
outsb
mov
jle
fistl
test
pop
mov
add
push
push
movb
test
mov
outsb
push
sbb
dec
icebp
lds
jge
jbe
push
inc
mov
adc
jne
and
insb
scas
push
in
insb
cli
jge
inc
loope
adc
test
rorb
push
dec
mov
push
add
lods
cli
femms
out
call
outsl
cmp
or
mov
mov
loopne
jl
decl
rclb
xchg
ljmp
rolb
inc
xor
or
call
sbbl
dec
rcl
bound
jbe
mov
ss
cmpsb
or
clc
and
inc
mov
mov
jmp
loopne
call
inc
out
clc
fildll
push
movsb
call
fs
adc
pop
ja
cmpsb
or
adc
shrl
hlt
push
pusha
push
xchg
lcall
adc
add
jae
adc
test
out
xchg
loopne
adc
add
adc
leave
add
adc
ret
pop
xchg
insl
mov
loopne
cmpl
mov
ss
push
push
xchg
sub
xchg
movsl
dec
push
in
sbb
push
add
cmc
loopne
mov
jne
loopne
xor
push
and
and
adc
hlt
add
pop
push
pushl
and
pushl
call
mov
loopne
fs
cld
jmp
call
sub
aas
xor
xchg
ret
sbb
pop
xor
and
adc
pop
lcall
sub
lcall
je
push
ret
add
push
jmp
or
sti
add
loopne
popa
in
movsl
push
orb
aas
fsubl
sbb
jne
jbe
jg
scas
lods
add
scas
fisubrl
jb
dec
dec
xchg
cmc
inc
jnp
subb
add
or
loopne
xchg
cld
mov
push
or
cmp
fisubrl
add
jmp
and
pusha
pushf
icebp
js
mov
push
cmpb
cmpsb
clc
sub
hlt
je
jmp
or
jge
ret
jle
loopne,pn
stos
xor
jb
cli
cs
push
pusha
dec
push
xor
xor
mov
push
push
cmpsb
or
jmp
test
cld
cmpl
mov
lea
jg
test
xchg
sub
or
push
push
loop
lea
mov
push
jp
add
pusha
addl
cmp
and
dec
push
push
test
loopne
call
mov
xchg
inc
outsl
pop
or
mov
rcrb
decl
das
loopne
loope
push
nop
inc
sub
call
lds
mov
mov
push
loope
mov
loopne
lcall
dec
push
popa
inc
ret
add
into
sub
push
lock
fwait
je
push
sub
inc
sub
dec
icebp
pop
jp
call
jl
lods
pop
icebp
mov
sub
pop
ja
rolb
mov
addb
cli
sub
pusha
xchg
int3
xor
and
jl
push
cmpsb
loop
inc
test
adc
push
adc
pusha
dec
pop
xor
fcmovnu
fisubs
push
je
loope
adc
cmp
repz
pop
and
je
mov
fisubs
je
js
jne
add
and
das
or
je
adcl
mov
adc
add
and
pusha
mov
ss
je
loopne
mov
mov
js
push
or
mov
or
sbb
mov
ret
std
adc
jecxz
mov
subb
mov
add
fadds
sub
mov
and
mov
mov
ds
imulb
pushf
dec
add
sarl
scas
push
ret
scas
call
pusha
outsb
fdivrs
je
arpl
sbb
inc
enter
and
loope
js
ljmp
dec
xchg
adc
int3
je
or
ss
inc
xor
pusha
adc
push
pop
mov
lock
fidivl
xorl
sarb
add
bound
xor
adc
xor
ljmp
fs
lcall
jmp
mov
cmp
outsl
push
scas
mov
or
lock
outsb
xor
push
clc
scas
push
jo
pop
add
test
repnz
inc
clc
test
test
xor
cltd
and
add
inc
pop
add
decl
mov
pop
cmp
je
or
add
test
xor
add
push
mov
sub
add
test
mov
pusha
jmp
jne
inc
ja
and
adc
push
in
mov
js
scas
clc
stos
mov
ja
notb
lea
or
cmp
xchg
jne
sbb
xor
or
out
jno
sbb
pop
dec
test
sub
sub
stos
and
jp
je
je
call
adcb
in
add
mov
mov
and
call
test
mov
jl
mov
and
std
or
mov
gs
pop
ret
ficompl
jo
or
push
xor
sub
pop
ds
jo
sub
mov
xchg
lea
popw
push
adc
push
lcall
sub
lock
aaa
inc
ljmp
mov
add
jne
or
jmp
imul
or
cmp
dec
pusha
aas
jmp
mov
mov
jo
ret
xor
dec
jo
lret
rclb
mov
pop
lret
mov
xor
pop
mov
cmp
and
out
mov
push
mov
cmpsb
cld
mov
ss
or
dec
test
sub
jb
dec
cs
inc
ss
cmp
test
mov
fcoml
sbb
and
adc
call
push
stc
mov
outsb
add
aad
adc
dec
insl
and
jg
mov
sub
dec
sub
scas
xor
lock
add
sub
repnz
hlt
add
fildll
in
sbb
call
ja
add
pop
and
mov
mov
mov
pop
aam
mov
jl
push
data16
testb
mov
adc
cs
popf
les
mov
sub
divb
or
mov
adc
aas
cmp
cld
movsbl
pushw
pop
shll
cmpsb
cmovno
sub
lock
jl
stc
jg
xor
push
adc
xchg
mov
jle
mov
clc
insl
cmp
pop
fmull
push
jbe
jl
push
lret
or
lret
cmp
jbe
aaa
adc
dec
lcall
ja
cli
mov
cmp
pop
popa
jmp
ja
inc
repz
icebp
or
mov
pop
jg
push
stos
in
je
sub
iret
enter
sarb
rcl
fdivrl
inc
mov
insb
adc
pop
fimull
loop
cmp
stos
or
hlt
rorl
out
xchg
add
or
cmpb
cmp
jb
cmp
lret
inc
lea
fwait
loopne
cld
aam
cmp
jb
js
xor
decl
orb
ret
repnz
jo
je
push
add
jmp
sub
test
or
dec
andb
add
inc
jmp
inc
movsl
outsb
mov
out
rorb
outsl
mov
push
push
or
cld
inc
add
pusha
stos
xor
mov
jne
push
jecxz
mov
lods
mov
xor
cmp
lea
frstor
cmp
shr
pushl
inc
std
cs
shll
xor
adc
std
call
mov
jo
loope
push
xchg
xchg
shl
mov
mov
push
leave
clc
outsb
subb
int3
test
mov
adc
mov
jo
sarb
xchg
push
cli
lock
iret
cmp
lret
push
push
inc
loop
lods
inc
push
outsl
test
mov
mov
jae
lock
inc
and
or
fadds
cld
mov
mov
rorl
jl
inc
jbe
jo
push
ret
ss
scas
and
loope
or
rcll
xor
dec
in
out
shlb
inc
add
pop
xor
add
les
or
add
inc
aam
or
rep
mov
mov
xchg
dec
or
lahf
lock
adc
in
or
outsl
das
add
imull
and
rorb
mov
mov
mov
cld
mov
sarb
cmp
add
imul
or
or
sbb
or
sub
lods
out
out
in
in
and
pusha
sbb
add
rcrl
sbb
fisubrl
xchg
adc
pop
mov
or
decl
fbstp
mov
jbe
mov
call
ret
jb
sub
or
fnstsw
loop
mov
and
sub
or
lret
rorb
xor
pop
movl
outsl
push
push
push
call
outsb
divb
dec
xor
icebp
dec
hlt
pushl
push
clc
adc
sub
scas
fsubrs
lmsw
jge
cmpsb
cmp
sbb
pop
add
push
xchg
push
out
jl
pop
or
dec
or
fbld
cld
je
into
call
jg
mov
mov
sti
outsb
inc
push
lods
lret
mov
inc
xchg
movsl
cmp
hlt
sub
dec
enter
mov
xor
or
xor
mov
cmp
mov
call
pop
out
adc
test
jp
jns
or
jg
je
in
pop
es
test
mov
mov
and
push
xor
jl
adc
scas
push
lods
mov
movsb
div
jp
dec
pop
mov
jb
push
sbb
add
jne
cmp
std
cltd
fdivs
out
pop
cld
xor
scas
or
cmp
xorl
fcmovnb
sbb
jb,pn
ret
xor
stos
in
and
jbe
mov
or
xchg
ret
in
jle
push
or
aad
mov
mov
cli
pushf
aaa
ret
clc
add
icebp
lret
push
push
adc
lods
and
or
jle
mov
and
dec
loop
cmpl
sbb
xchg
jne
call
or
add
inc
add
cmp
pop
inc
shll
lods
das
xor
jo
mov
std
iret
jg
jno
lret
add
xorl
push
lcall
add
xor
add
xchg
scas
mov
scas
call
mov
jge
and
xchg
push
and
pop
mov
jp
add
lret
imul
or
sub
inc
push
mov
sti
cmp
es
add
jne
pop
ret
in
fldl
movsb
pop
inc
lcall
lods
je
xchg
iret
call
daa
or
popa
jnp
insb
dec
or
push
push
or
je
mull
rcrl
fcom
mov
out
clc
dec
in
adc
push
adc
js
push
sbb
inc
fidivrs
sub
scas
mov
jle
pop
pop
mov
neg
inc
movsl
lock
add
adc
mov
repnz
imul
pop
repz
into
addb
push
push
dec
pop
or
pop
push
shll
and
sub
cmp
xchg
xchg
add
cld
add
cmp
pop
popa
sbb
incb
inc
add
int3
xchg
push
testb
testb
icebp
sbb
je
add
add
cwtl
inc
lock
inc
mov
fnstcw
cmp
jne
cmpb
rcll
test
mov
dec
jne
loopne
imul
push
sub
push
dec
push
sub
push
or
ss
sub
xchg
add
ret
adc
push
pusha
sub
ss
fs
jmp
movsb
xchg
shlb
nop
out
dec
test
push
cmp
call
xchg
es
sub
std
incl
andb
mov
jmp
sub
xorb
sub
je
imul
add
orl
push
push
jbe
mov
ja
dec
add
dec
call
mov
add
or
mov
mov
call
cmovs
call
or
push
xchg
xchg
dec
cmpsb
decb
jmp
sub
int3
push
cmp
xchg
lea
pushf
sarb
push
or
rcrw
and
mov
inc
inc
push
pop
sahf
ja
mov
push
outsb
or
and
and
jnp
rorb
imul
adc
aas
aam
popf
sub
xor
jg
mov
test
shlb
rorb
pop
add
les
lret
and
loope
and
jge
xchg
add
mov
push
mov
roll
loope
inc
lods
ja
jb
and
add
test
inc
dec
mov
pop
xchg
sub
orb
pop
fcmovnb
xchg
add
mov
inc
and
pop
movsb
ja
and
ret
and
decb
mov
iret
out
je
or
lretw
xchg
mov
daa
dec
mov
push
aaa
movsb
icebp
cmp
or
inc
nop
sarl
rcll
hlt
lea
lods
add
icebp
adc
cmp
loopne
pusha
xchg
leave
adcb
pop
lods
cmpl
shlb
loope
pop
mov
cs
stos
aam
mov
push
loope
and
stos
in
call
mov
adcb
loop
scas
cli
ja
pop
sti
jl
xorl
lcall
mov
jmp
shlb
pop
jo
cli
adc
adc
push
push
add
adc
pop
out
mov
ret
adc
pop
gs
adc
divl
rol
insb
mov
lea
fdivrs
push
fbstp
data16
mov
xor
push
xor
jae
mov
mov
aad
test
mov
cwtl
jnp
mov
add
test
fsubrl
enter
and
shlb
adc
dec
mov
add
dec
inc
jle
rclb
push
jb
sbb
cmp
mov
jmp
test
lea
test
out
ss
add
pusha
xor
in
lret
push
push
cs
mov
cmp
pusha
fimuls
xor
fcmovu
lcall
push
loopne
movsb
ds
pusha
add
add
dec
pop
aaa
xchg
mov
out
inc
sbb
add
pop
inc
shr
insb
rcrb
test
sarb
mov
xor
pushf
loopne
push
add
mov
sub
pop
leave
test
or
jecxz
inc
sbb
je
pop
jecxz
lcall
mov
dec
pushf
inc
xor
jbe
pop
xchg
out
into
les
dec
mov
addb
jp
push
push
push
test
fimull
add
bound
push
xchg
mov
neg
test
imul
xorb
adc
and
and
jns
mov
add
jg
lock
push
scas
cli
mov
xorb
outsb
pusha
xchg
in
pop
cltd
out
cmp
mov
cmp
pusha
add
aad
rorl
dec
jecxz
loopne
or
mov
adc
jne
out
adc
fbstp
pop
add
testb
je
dec
outsl
out
and
or
je
loopne
mov
and
loopne
aam
test
inc
adc
pusha
pop
inc
and
ss
lea
les
inc
xor
pop
loope
clc
inc
mov
pop
cmp
push
xor
loope
pusha
inc
loopne
mov
inc
mov
mov
cmp
shll
loope
pusha
andw
jecxz
adc
lods
pusha
xor
mov
adc
or
mov
int3
sub
cltd
cmp
push
pop
mov
in
cltd
inc
xor
xor
fadds
jb
inc
pop
pusha
sbb
and
push
sub
test
xchg
dec
jl
sub
fadds
popa
adc
lock
ret
add
loope
mov
push
jb
rcrb
lods
sub
dec
mov
test
pushl
and
in
and
lcall
adc
adc
adc
push
loope
rcrl
dec
add
and
pusha
or
mov
mov
inc
loop
or
jmp
sub
and
add
push
loopne
sub
mov
or
pusha
add
decl
sarb
and
xor
test
mov
mov
or
sub
and
fcmovb
fs
push
stc
add
mov
out
xchg
pop
or
pop
loopne
jle
lcall
ljmp
shr
jp
std
inc
ret
test
orb
pusha
pop
adc
xchg
pop
in
pusha
add
je
inc
jmp
add
sbb
sub
or
or
sahf
sbb
add
or
ljmp
mov
js
cmpsb
sbb
sbb
and
xor
jl
adc
sbbl
add
dec
adc
data16
push
scas
push
xchg
sub
mov
mov
and
add
ja
cmpsl
dec
fisttpl
add
int
pusha
push
jo
adc
add
scas
aad
xchg
adc
jl
add
mov
adc
add
inc
dec
sub
lahf
dec
xor
into
add
jmp
adc
adc
stos
lods
add
orb
rolb
push
jmp
adcb
dec
jmp
add
loope
cld
lock
xor
push
scas
xor
inc
push
add
or
out
push
sbb
add
push
sub
xchg
test
jnp
xchg
mov
ror
lock
mov
mov
and
mov
add
jp
inc
or
nop
push
sub
mov
or
mov
stos
dec
lea
add
jg
xchg
add
jb
shlb
adc
add
nop
aam
add
ja
lock
data16
xor
adcb
or
mov
add
jne
xor
add
cmp
iret
jl
jle
cmp
lock
cltd
imul
or
cmpsb
cltd
add
shl
data16
xchg
jmp
lods
or
push
add
adc
aam
sub
or
data16
and
sti
neg
jmp
push
or
pop
setne
or
adc
pop
mov
mov
lea
ret
or
sbb
pop
fstps
or
cltd
orl
icebp
add
xor
and
or
mov
ljmp
jg
fwait
or
sbb
mov
aas
or
add
data16
iret
mov
jmp
or
add
je
insb
outsl
pop
aad
aam
jp
pusha
jp
mov
or
mov
lcall
mov
sub
xlat
jb
cwtl
aaa
mov
sub
cmp
mov
adc
lcall
push
jmp
xorb
incb
icebp
or
test
in
cmc
mov
cwtl
fptan
dec
idiv
push
mov
test
mov
or
aaa
jo
xchg
xor
push
or
lock
dec
jg
cmpsl
je
sarl
je
or
add
mov
test
aam
pop
add
je
mov
lea
add
mov
addr16
mov
push
xor
xchg
stos
or
jo
adc
jge,pt
add
rolb
adc
imul
mov
sub
push
mov
incl
fiaddl
sbb
adc
and
xor
push
jmp
mov
or
lock
sub
add
and
jp
leave
test
add
pushl
enter
inc
nop
mov
jb
testb
and
loop
mov
or
add
icebp
cmp
nop
mov
cmp
add
jb
add
jg
cwtl
adc
addl
sbb
mov
adc
cmp
adc
repz
jl
inc
jne
aam
add
pop
pop
inc
fildl
test
es
push
es
mov
jg
pop
adc
imul
out
cmp
mov
pusha
jno
xor
lods
xor
jmp
adc
fstpt
sti
mov
in
jmp
sti
sarb
jo
lock
insb
jmp
fdivs
push
rcrb
add
loop
fidivl
push
push
out
jmp
cs
lods
inc
and
inc
adc
and
outsb
loopne
jmp
and
idiv
popa
pop
push
ja
les
out
pusha
jmp
mov
jle
mov
jne
ret
push
mov
sub
lret
ljmp
jbe
movsb
out
nop
add
adc
ds
subb
mov
lcall
mov
mov
push
les
movsb
icebp
dec
call
popf
repz
or
imul
xor
cmp
sbb
cmp
jge
adc
dec
clc
xor
lret
fildll
aad
sbb
arpl
push
mov
adc
or
lock
mov
ret
xlat
filds
and
cmp
jp
mov
mov
lds
repnz
inc
pop
xor
add
ja
push
sub
outsb
push
jo
or
add
das
test
or
xor
push
scas
subb
rclb
cmc
jle
fistpll
or
xchg
jl
idivl
psllw
jno
add
orl
movzbl
hlt
mov
push
inc
inc
jle
jmp
repnz
sbb
ficoml
and
xchg
fcomip
scas
xor
and
jo
push
mov
icebp
or
mov
cmpsb
or
push
jnp
test
and
bound
inc
das
cmpb
inc
cmp
sbb
movswl
inc
adc
push
ret
cmpb
fildl
ficoml
xchg
fnstsw
add
rorb
adc
push
push
ret
xor
stos
in
pop
aas
mov
sbb
xor
pop
nop
xor
jnp
pop
xor
mov
decl
adc
lock
mov
inc
js
ss
test
fwait
inc
xor
js
jo
shlb
xchg
and
inc
mov
imul
fmull
loope
fs
stos
and
jno
jg
sar
div
dec
out
pop
test
push
mov
mov
je
adc
mov
push
or
jo
jno
dec
sbb
or
in
or
or
push
push
or
jae
outsb
enter
fs
loopne
pusha
push
leave
cmp
je
xor
cmpsl
xor
add
or
push
sbb
lods
mov
lcall
or
sbb
inc
sub
repz
add
push
pushf
jmp
mov
mov
fcomip
push
pop
mov
push
xor
stc
mov
cld
add
stc
mov
sub
jno
xchg
jo
shlb
mov
ror
inc
xchg
insb
pop
pusha
lock
xor
jne
and
sbb
inc
fldt
hlt
add
icebp
add
out
pusha
shrd
push
adc
sbb
inc
stos
ja
pop
or
add
mov
nop
or
or
adc
repz
icebp
pop
jge
test
xor
mov
push
scas
xchg
icebp
sbb
mov
fsubl
or
nop
adc
add
and
inc
call
and
fcmovnbe
sub
pop
mov
jb
push
or
or
scas
add
add
or
xchg
mov
or
outsl
repz
sbb
jmp
insl
mov
adc
roll
insb
mov
push
add
jmp
jbe
push
dec
pop
add
incb
or
dec
loopne
dec
popf
call
jle
sbb
js
mov
add
orl
add
hlt
int3
rclb
mov
loopne
adc
outsl
push
jg
imul
fildll
and
add
inc
outsb
in
pushl
call
add
and
pop
addb
outsb
je
stc
fiaddl
push
lahf
add
fwait
push
add
or
sub
andl
push
pop
adc
and
add
xor
or
and
mov
mov
and
sub
loop
adcl
loopne
mov
cli
dec
jno
andl
mov
dec
and
or
clc
adc
pop
xchg
andl
jbe
lods
test
adcb
jmp
test
push
lds
lods
movsb
or
hlt
sbb
cmp
mov
cmp
mov
cmpsb
jns
inc
outsb
sti
incl
popa
xchg
inc
ret
incb
mov
and
cmpsb
mov
pop
out
dec
and
sub
ret
xchg
sub
adc
lock
xchg
ljmp
pop
ret
add
xor
stc
rolb
movb
ret
dec
or
adc
sarb
push
dec
shlb
adc
jmp
jne
xor
lret
mov
sub
fistl
mov
fldl
push
push
sar
fwait
scas
adc
aas
fs
rclb
shrb
cli
aad
cmovle
rclb
sarb
xor
bound
sub
ret
mov
orb
mov
fisttpl
jle
adc
cmp
sbb
push
push
and
and
sbb
add
sbb
add
rorb
jnp
mov
incb
xor
mov
or
aad
sbb
and
shlb
adc
rolb
scas
test
data16
fisubrl
pop
mov
out
sub
lds
repnz
adcb
inc
or
enter
jbe
mov
inc
pop
sub
jne
decl
pop
pop
add
sub
adc
inc
je
dec
mov
dec
cmp
repnz
imul
orb
push
inc
arpl
das
adc
arpl
shl
add
mov
mov
cmp
add
jp
cmc
sub
mov
in
dec
add
nop
cmp
into
das
or
push
test
in
pop
shr
mov
js
shl
lock
adc
adc
pop
mov
jmp
lret
jg
mov
loope,pn
mov
dec
je
loop
lock
hlt
loop
sbb
sbb
push
mov
mov
movsb
jne
cs
sbb
cmp
inc
scas
leave
and
aas
mov
je
add
js
nop
inc
add
lods
add
test
push
cld
xchg
cmp
add
mov
je
stos
add
inc
ds
xchg
push
sub
mov
jbe
push
pop
gs
dec
push
rorb
sbb
mov
and
data16
push
sub
jbe
aas
dec
cld
xor
cmovl
jp
iret
jmp
mov
inc
call
mov
pusha
pushf
xchg
mov
pop
mov
mov
sbb
sti
mov
test
call
adcb
incl
cld
dec
loop
or
add
pusha
mov
add
mov
loope
ljmp
add
je
subl
orl
in
jle
inc
jmp
add
inc
dec
push
rcrb
test
scas
sub
mov
inc
and
push
cwtl
dec
ja
add
push
lret
xor
adc
add
cld
lods
roll
cld
add
xor
adc
xor
or
cli
inc
gs
insb
leave
add
sar
bound
mov
or
sub
filds
lcall
push
int3
pusha
xor
repz
and
xor
adc
loopne
or
shrb
inc
lock
mov
ret
push
adc
or
jmp
adc
or
lret
bnd
subb
add
je
lock
dec
out
fisubl
popa
jo
repnz
mov
hlt
add
jnp
mov
and
xchg
and
xor
std
cmp
ja
pusha
mov
ret
adc
sub
fldt
test
inc
sub
cmp
loopne
jle
add
and
add
mov
and
xchg
loopne
rolb
imul
mov
inc
pop
add
and
ss
add
popf
nop
je
adcl
add
pop
mov
or
or
ret
pop
andb
mov
push
mov
inc
push
dec
pusha
mov
ss
push
popa
or
orl
das
fdivrs
pop
les
sarl
jl
cltd
pop
and
mov
mov
das
movsb
push
add
stc
mov
rcrl
out
bound
sub
push
daa
and
cmp
adc
pop
adc
and
out
or
sub
mov
or
sbb
hlt
ds
loop
pusha
push
lods
or
pop
pusha
stos
and
pop
test
push
mov
movb
stos
in
cltd
lret
jl
inc
push
jae
pusha
add
sar
push
cld
test
push
mov
or
loopne
adc
push
xchg
out
xor
pusha
mov
add
add
pop
sbb
add
xchg
sbb
aaa
sbb
pop
xchg
repnz
or
add
pop
sbb
ret
mov
js
outsb
cmp
and
mov
outsl
call
das
jno
adc
mov
or
pop
and
sbb
movsb
xor
push
sti
mov
jbe
inc
cltd
divb
adc
mov
or
adc
and
loopne
xor
add
or
add
mov
test
mov
test
jmp
dec
sub
daa
lcall
or
sub
xchg
sub
cltd
les
rclb
cmp
inc
adc
rcr
je
mov
ljmp
mov
je
push
pop
ljmp
out
cmp
arpl
jo
clc
push
xor
fmuls
push
push
mov
xor
aam
sbb
xor
or
jmp
fs
mov
dec
adc
pop
jmp
mov
movaps
rolb
jb
xor
push
test
idiv
and
das
adc
ss
inc
shlb
into
jo
insb
xlat
lds
jo
pusha
aaa
lock
mov
mov
icebp
add
sahf
icebp
test
inc
ret
add
mov
mov
mov
in
das
sbb
inc
incb
jo
or
jne
aas
ja
inc
add
and
shrl
add
push
add
les
stos
ret
test
add
push
mov
xor
insl
or
mov
adc
or
cmp
popa
leave
cmpsb
fldl
add
dec
rcr
outsl
enter
call
jl
shrl
jo
sbb
inc
mov
filds
lret
sub
aaa
add
push
dec
mov
add
mov
add
dec
int3
xor
inc
sub
rclb
in
rcll
shl
aaa
int
adc
fadds
aam
sub
inc
push
jge
mov
subb
dec
aad
outsb
or
movsl
add
push
xlat
add
int
push
adc
push
into
orl
addb
add
or
jnp
and
cltd
push
adc
shlb
push
adc
xchg
ss
cmc
inc
add
or
mov
add
mov
dec
sub
and
adc
push
xor
icebp
push
sbb
pop
jb
adc
ja
ja
push
scas
push
sub
mov
push
push
and
sub
inc
and
pop
mov
push
call
mov
adc
dec
lcall
stos
sbb
adc
push
dec
and
push
movsb
decl
lea
jo
mov
mov
stos
pop
pop
jg
pop
push
dec
stos
in
adc
push
inc
pop
mov
mov
jne
movsl
loopne
les
mov
dec
enter
pusha
ljmp
add
add
xor
add
pop
add
pop
andb
pop
push
add
sbb
mov
push
das
sbb
pop
test
pop
orl
outsb
mov
testb
rorb
pop
mov
faddl
cmp
push
dec
mov
addl
or
hlt
cmpsl
call
divb
popa
popa
lock
sbb
shl
jge
and
jo
xorb
test
out
mov
mov
inc
inc
mov
add
cmp
add
je
jo
inc
or
aam
push
cmpb
subl
daa
in
dec
out
pop
jmp
nop
and
out
lock
xchg
add
add
push
pop
scas
mov
pop
jo
add
or
int3
mov
inc
mov
xchg
adc
mov
mov
xor
mov
pusha
cmp
xchg
ret
into
adcb
mov
jne
dec
cli
nop
or
fisttpl
je
or
dec
mov
sbb
dec
in
inc
xor
pop
outsl
adc
and
movsl
jg
div
inc
cmp
jb
scas
insl
cpuid
mov
sbb
loopne
jo
add
mov
mov
mov
subb
lock
jbe
adc
push
rcr
push
test
test
int3
repnz
ret
dec
inc
inc
rorb
ret
mov
scas
lea
pop
into
jb
movb
xchg
test
push
push
hlt
call
in
les
add
mov
pop
pusha
xor
or
jmp
cmpsl
in
push
clc
or
mov
pushl
insb
add
add
mov
or
outsb
int
jb
movsb
add
add
in
add
pushf
iret
adc
push
sbb
push
inc
dec
or
pop
mov
imul
jl
lea
movsb
xor
adc
add
in
jl
inc
cs
push
movsb
lock
cmp
push
cli
lods
push
cmc
add
sub
lods
push
mov
jnp
add
xor
dec
dec
leave
in
orb
testb
call
jne
mov
or
cmp
sbb
push
cmp
aam
pop
pusha
lds
rolb
addb
add
dec
inc
adc
sub
push
into
mov
cltd
xor
jle
sbb
add
mov
push
add
mov
movsb
outsb
mov
adc
inc
cmp
jb
addl
loopne
xor
push
shrb
lock
pushw
and
decl
decb
push
add
mov
mov
jne
mov
mov
inc
aam
lea
mov
pop
mov
dec
test
xor
lahf
call
push
lock
jo
inc
push
push
sbb
lods
jno
scas
and
aas
dec
sub
sbb
add
add
movsb
aad
add
adc
je
jb
ret
repz
fwait
mov
push
jo
out
clc
ja
sub
movl
xor
das
rcrb
mov
inc
mov
mov
leave
test
gs
mov
int3
mov
jle
push
push
fists
or
fistl
inc
nop
xor
pop
mov
clc
inc
push
or
dec
mov
jl
add
fdiv
adc
mov
lcall
add
mov
add
fs
pop
add
ds
hlt
enter
mov
pop
jmp
pushf
sarb
je
pusha
jbe
and
push
adc
sub
fsubrs
sti
or
rep
je
xor
inc
sbb
lea
ljmp
inc
ret
mov
mov
pop
hlt
inc
mov
pop
lcall
add
int3
repnz
insb
cld
icebp
mov
dec
pop
xchg
add
cmp
loope
or
mov
aam
inc
sub
and
inc
lahf
mov
inc
incb
lods
sti
faddl
xor
inc
mov
in
add
fcoms
and
xor
fdivrs
cmpsl
mov
mov
call
mov
testl
inc
in
xchg
outsb
mov
addl
jg
jle
xor
add
inc
add
cmp
jle
jl
nop
mov
mov
jl
inc
lods
add
call
rcr
cmp
imul
aam
mov
pop
pop
or
jae
rorl
aaa
rcll
ljmp
xchg
xor
mov
xchg
stos
in
sarb
ja
pop
aam
outsl
dec
add
pop
rcll
xor
je
and
sbb
sbb
inc
pop
pop
add
sub
insb
add
cwtl
push
or
jo
add
outsl
adc
jecxz
add
add
orb
add
lods
add
ss
pop
out
clts
mov
movsl
sbb
adc
push
ret
sbb
xorb
jb
jnp
jb
sbb
mov
test
jne
call
add
sbb
sub
mov
add
sbb
in
push
mov
mov
xlat
pop
movsb
inc
test
sub
mov
adc
mov
fadds
ja
call
push
xor
mov
cmp
sub
jmp
scas
push
and
ret
or
add
jbe
mov
jo
mov
cli
sbbb
pop
or
inc
cmp
sub
mov
sbb
ret
movsb
or
pop
add
sar
andb
adc
aam
int3
movl
pop
adc
test
icebp
adc
addl
int3
fildl
add
mov
xchg
hlt
add
adc
mov
incb
jne
pop
loope
xor
jle
add
in
rorl
mov
mov
das
rcll
lods
and
daa
ret
into
ja
je
sub
inc
popa
jg
mov
mov
test
mov
add
adc
repnz
fistpll
pop
rcrb
push
jne
push
xchg
out
adc
inc
inc
or
popa
add
mov
push
dec
outsb
inc
push
mov
push
push
pop
call
jmp
rcll
add
mov
or
ror
add
jmp
mov
adc
mov
loope
jge
add
sarl
push
dec
sub
in
cmpsb
icebp
add
cli
jo,pn
adc
add
outsb
clc
jne
adc
lods
and
or
xchg
fldt
hlt
adc
sub
push
mov
or
rorb
test
cs
popa
mov
rcrb
test
sarb
sar
mov
mov
push
adc
mov
ret
mov
cld
rcrl
jo
and
fbstp
loop
add
jmp
and
test
enter
adc
repnz
xchg
icebp
mov
movzwl
stc
popa
adc
jo
jp
or
push
fs
sbb
and
xchg
je
dec
js
jo
xor
test
dec
cmp
jae
push
test
jecxz
rorb
and
ss
rorb
add
jl
sbbl
jmp
add
push
in
addb
popa
add
push
mov
inc
push
inc
push
mov
pusha
movsl
cld
adc
mov
dec
xchg
loopne
push
andl
adc
arpl
lcall
les
fbstp
xor
mov
mov
inc
test
mov
dec
test
popa
adc
nop
add
ss
bound
ret
xchg
pusha
adc
pop
call
cmp
lea
and
fwait
dec
pop
dec
jbe
shlb
adc
pop
decl
mulb
scas
push
mov
mov
aaa
pusha
and
aaa
mov
dec
ror
sub
ret
cmpsl
lea
push
jo
and
push
push
xchg
xor
add
cld
push
xchg
cmp
dec
push
cmp
xor
pop
pop
int3
add
loopne
inc
push
decl
lea
loopne
push
jbe
add
adc
and
test
sbb
mov
fidivl
enter
dec
lock
sahf
nop
jl
jl
mov
and
jle
pop
sub
les
pop
stos
xor
lods
in
push
arpl
xor
repnz
insb
outsl
or
mov
fsubl
or
jp
mov
ds
push
mov
mov
loope
jle
push
ret
xchg
xor
or
sahf
sbb
adc
leave
ret
loop
cmp
pusha
jl
cmp
cmp
lahf
xor
pop
loopne
mov
fsts
sti
add
test
cld
aas
jb
and
push
in
sti
rorb
mov
add
ljmp
loope
xor
or
data16
add
adc
add
out
jne
popa
sbb
mov
lea
jne
mov
pop
add
jno
jmp
addl
adc
insl
xchg
push
cmc
mov
loopne
pop
inc
push
and
xchg
jmp
inc
mov
push
std
ret
inc
cwtl
das
push
pop
jnp
rorb
pop
je
sarb
addb
mov
adc
movsb
enter
xchg
icebp
add
pusha
add
pop
and
mov
bound
or
add
sbbb
dec
mov
mov
xorb
std
mov
cmp
aaa
pusha
adc
push
jecxz
sbb
mov
and
scas
ss
loope
push
test
or
mov
sub
lods
loope
pop
cld
jl
add
add
cmp
cmp
cmp
popl
and
cmp
add
sbb
sbb
and
popa
ss
push
lock
pop
pop
pop
cmp
ds
ret
scas
je
fdiv
call
loope
addb
ljmp
test
add
dec
insl
sbbb
fs
outsl
xor
enter
or
push
jmp
jo
add
add
mov
and
mov
inc
imul
and
sbb
fwait
pusha
adc
cmp
or
cmp
jp
add
xchg
sub
fildl
repz
xor
push
xor
ss
movl
add
sub
jbe
add
dec
xchg
mov
add
movsl
mov
add
inc
mov
fwait
xchg
out
push
xchg
mov
pop
add
adc
cmp
ret
or
add
jo
hlt
cmpl
aam
notb
es
sub
jl
call
cmp
outsb
inc
jmp
sub
push
or
adc
inc
dec
out
mov
cmp
aam
shll
inc
in
out
mov
sub
imul
loopne
mov
pushl
and
and
rcrl
jle
adc
or
pop
adc
rolb
aam
test
mov
pop
sti
xor
or
jle
jl
add
xor
je
cmpsb
push
mov
xor
add
test
mov
shlb
or
push
shrb
mov
repz
sbb
mov
sub
mov
mov
imul
call
or
jl
adc
leave
test
jbe
pusha
shlb
pusha
stc
mov
add
fdivl
add
mov
dec
mov
das
and
cmp
or
cld
mov
inc
cmpl
push
jb
mov
js
push
cmp
lds
cld
push
test
adc
jo
fnstenv
andb
push
jbe
inc
pop
mov
and
and
sbb
cs
loopne
add
fs
in
jmp
mov
loop
or
je
push
mov
outsl
es
shlb
xor
jmp
clc
insl
xchg
outsb
dec
adc
adc
mov
adc
out
xorl
xorl
mov
add
add
push
push
ds
lods
xor
xor
int
cltd
add
pushl
test
ret
sbb
dec
hlt
pusha
adc
lahf
mov
addb
icebp
xor
loope
enter
outsl
sub
inc
mov
mov
mov
and
cmpsl
call
gs
mov
add
inc
dec
mov
adc
cmp
xor
inc
or
ficoml
push
push
inc
clc
incl
sub
pusha
ljmp
mov
or
or
xchg
cwtl
add
pop
push
add
ret
mov
mov
xor
mov
jb
imul
push
inc
inc
cmpsb
push
mov
pop
inc
xchg
jno
add
cmp
cli
or
test
dec
popa
andb
xor
add
call
daa
add
sub
pop
cwtl
lea
ds
movsb
xorb
mov
add
ja
mov
out
adc
clc
je
icebp
jb
in
mov
xchg
add
cmp
sahf
xchg
add
dec
clc
pop
sub
jle
clc
add
mov
or
cmpsb
adc
test
and
lock
out
jno
call
pop
fsubs
push
push
add
jbe
rcl
pop
adc
repz
clc
xchg
mov
outsb
mov
push
loope
inc
lcall
stos
sub
cld
and
lods
mov
xor
cmp
pop
cld
xchg
mov
imul
mov
repz
shll
repz
pushf
decl
push
xchg
mov
push
ljmp
nop
add
fbld
loop
and
jb
out
xchg
dec
cli
scas
jne
lock
push
mov
push
pop
mov
or
test
mov
push
lret
fucomip
inc
push
sahf
call
ret
icebp
adc
in
pop
pop
adc
xor
jge
cmp
cmp
push
je
sbb
lods
push
jo
dec
daa
inc
movsl
outsl
add
jge
or
std
push
xor
out
loopne
xor
inc
ja
fistpl
add
mov
mull
jmp
jl
test
cmp
jmp
andl
fmull
cwtl
mov
push
test
and
adc
sub
or
add
std
je
inc
pop
cmpsb
scas
push
cmpsb
icebp
mov
xor
sbb
fs
jmp
or
or
lock
jmp
jg
fldt
xor
pusha
inc
or
jmp
mov
sbb
rclb
or
pop
and
sarb
add
das
jmp
and
pop
sahf
xchg
push
mov
push
add
mov
xchg
mov
std
in
sbb
call
cmp
data16
adc
adc
xlat
xor
jne
movsb
add
mov
rcll
lods
data16
sbb
lock
and
jg
push
jae
jo
mov
push
add
xor
gs
cltd
stos
push
in
enter
add
push
or
inc
loopne
sub
xchg
mov
push
add
lcall
sbb
andb
xchg
mov
add
push
test
jo
repz
add
add
push
add
pusha
in
loopne
ljmp
mov
cwtl
pop
pop
mov
pop
and
sbb
incb
je
dec
adc
xor
leave
lock
add
inc
mov
add
add
push
adc
push
jno
data16
hlt
imul
adc
decl
mov
test
pop
mov
or
jle
add
sbb
adc
xlat
xor
push
mov
lock
push
push
inc
lds
mov
mov
adc
ret
loope
push
jno
dec
or
cli
or
inc
movsb
fs
jmp
mov
jo
add
adc
cmp
js
fisubl
xor
sbb
jb
testb
adc
xor
sbb
push
inc
sar
lds
adc
icebp
add
jo
pusha
lret
inc
mov
adc
mov
dec
mov
dec
inc
push
add
cmp
adc
sub
mov
call
repnz
cmp
add
jo
mov
outsl
test
jge
mov
adc
movsl
mov
adc
sar
sub
and
hlt
lock
bound
mov
lock
push
dec
in
push
aad
jge
xchg
adc
push
cld
loopne
ficoms
sbb
pop
sub
in
jg
or
add
enter
mov
adc
loopne
cld
shlb
push
push
jo
jno
stos
fildll
out
sbb
sbb
jae
push
insb
std
pop
adc
and
addb
ja
icebp
fldl
jge
cmp
loope
popa
cmpsb
dec
mov
hlt
or
lods
jle
push
rolb
and
je
adc
inc
roll
push
call
adc
stos
loop
mov
xor
adc
clc
and
lea
cmp
icebp
push
jo
push
and
mov
jb
add
jge
icebp
inc
call
push
lea
movsb
inc
les
repnz
and
mov
jbe
stos
and
xchg
call
mov
testb
push
pop
cmp
or
inc
xor
mov
data16
push
mov
rclb
push
or
pop
sbb
adc
cmp
xchg
loop
mov
lret
rorb
and
push
dec
inc
mov
movups
test
xchg
es
push
cld
jae
sub
adc
rcrb
jmp
std
add
jne
lods
scas
lods
sub
mov
mov
xchg
mov
add
xor
xchg
cmp
jb
les
loop
jne
jb
inc
or
addl
cmp
test
add
add
ret
cmpsb
push
xchg
xor
pop
inc
cmp
push
xor
lods
andb
cmpsb
pushf
sbb
inc
jge
icebp
inc
test
mov
ror
adcb
or
repnz
mov
fisubrl
cmp
jbe
bound
dec
sti
shlb
add
or
in
rolb
add
subb
add
fiaddl
mov
sub
imul
push
cld
je
out
data16
filds
cmp
pusha
inc
mov
call
cmp
fwait
pusha
sbb
push
pop
in
pop
sub
xchg
sbb
sbb
mov
mov
into
rclb
loope
insb
adc
adc
push
test
cmp
sub
jnp
add
inc
xor
imul
lods
je
sbbb
cmp
loopne
sub
and
pop
pusha
jle
push
fsubrl
cmp
ret
add
shrb
orb
xchg
pop
mov
push
ret
adc
movsb
push
cld
add
add
rclb
jmp
jl
decl
shlb
rolb
push
jg
mov
sbb
ret
inc
je
xlat
fildll
sub
shlb
shlb
jecxz
decl
shrb
push
sub
adc
das
rclb
adc
push
pop
xchg
aas
sbb
add
add
and
mov
pop
and
mov
inc
or
lds
mov
outsl
lea
testb
add
inc
cld
aam
adc
popa
jl
arpl
adc
push
rol
adc
jmp
push
or
push
push
pop
inc
xor
inc
js
test
jb
and
cmp
mov
fsubrs
data16
test
clc
shll
push
mov
je
xor
pop
adc
push
add
movsb
jo
mov
mov
ljmp
pop
lock
pop
pop
xor
cmpps
cmp
mov
xor
popa
sub
sbb
and
sub
lahf
ficoml
pop
adc
push
rcr
cld
xchg
xor
and
xchg
pop
inc
rorb
inc
aaa
test
mov
sbb
lock
pop
inc
in
push
push
inc
push
adc
and
enter
daa
lds
push
lods
lods
notl
cmpb
jne
hlt
loop
add
mov
add
loopne
std
mov
sub
mov
test
cmp
fbld
push
lock
mul
sbb
push
xchg
mov
ss
adc
add
dec
cld
in
push
and
aam
nop
pusha
xor
push
mov
orl
aam
push
xchg
loopne
dec
addl
add
cmp
sub
mov
dec
inc
add
and
js
cmpsb
sub
test
stc
call
in
cs
fcmovb
aam
add
or
or
lea
and
dec
mov
sbb
adc
loop
in
jg
incl
cli
mov
and
push
loopne
movb
or
loopne
loopne
add
je
add
testb
call
inc
adc
aam
jbe
aad
jb
rorb
lret
aam
adc
loopne
pop
adc
fcompl
add
cmpb
sbbb
movb
bound
mov
or
out
mov
addr16
inc
add
sub
xchg
sbb
test
cmp
and
int3
jl
pop
inc
mov
lock
test
je
test
add
in
call
and
popa
push
ljmp
sbb
and
add
fmul
ret
add
mov
je
or
inc
or
shrl
add
divb
mov
inc
ret
cmp
loope
xchg
lea
js
jnp
cmp
or
pop
ret
popa
pusha
sub
jl
or
jne
mov
andl
lock
adc
ret
adc
cmp
add
ja
add
cmp
ja
or
orb
add
ss
xchg
add
inc
ss
nop
sub
mov
push
push
push
loope
loopne
or
add
push
sbb
adc
sarl
js
mov
loopne
test
ds
loopne
push
test
add
leave
mov
push
sub
scas
mov
mov
inc
add
test
out
fistps
call
mov
lret
pusha
pop
dec
imul
loope
cmp
dec
push
inc
fldenv
push
pop
mov
clc
pusha
pop
loopne
push
inc
add
xchg
or
gs
leave
call
mov
sbb
insb
cmpsb
icebp
in
and
mov
add
sahf
push
lods
or
in
ja
ds
or
movsl
fcomip
call
and
je
popa
inc
lock
loope
inc
sbb
push
inc
add
sub
and
mov
loope
bound
pusha
adc
loopne
push
ret
aad
fdivs
mov
jecxz
loope
movsb
xlat
loopne
add
loopne
cmp
inc
add
arpl
push
dec
mov
pushl
mov
pusha
push
in
loope
push
in
pop
cli
or
mov
loop
push
loopne
sub
loop
mov
sbb
and
addb
push
pusha
and
aam
and
cmp
aaa
mov
repz
inc
add
pusha
dec
or
sbb
out
std
addb
cmp
imul
xchg
mov
into
adc
lcall
call
sbb
sub
push
lock
sbb
dec
push
mov
call
rolb
jbe
and
xor
mov
add
call
mov
inc
add
hlt
jl
push
inc
adc
loop
and
pop
adc
xchg
loopne
adc
addb
xor
push
imul
dec
jle
sub
rclb
mov
ljmp
push
add
sub
xor
or
rorb
jg
test
fisttpl
repnz
or
mov
pop
jo
fiadds
or
mov
jnp
lret
cmpl
fdivr
rorb
shll
cmp
mov
add
dec
repz
adc
sahf
dec
std
jg
jae
mov
scas
daa
jb
sub
sub
push
les
push
mov
mov
or
add
cmp
push
inc
jo
and
xchg
outsb
data16
into
add
mov
lock
pop
ljmp
lea
incl
pop
and
repnz
add
cld
sbbl
notl
call
jne
dec
mov
push
lea
test
movsb
and
push
mov
mov
jo
add
add
sti
mov
inc
test
fwait
cli
mov
arpl
pop
lock
ja
and
add
mov
movb
push
or
and
sbb
pop
pop
insl
repnz
jmp
sub
adc
addb
add
jo
test
add
inc
ss
aam
pop
push
push
call
or
inc
call
es
sbb
mov
movsb
or
iret
addb
dec
nop
icebp
dec
arpl
test
jo
push
movsb
mov
dec
mov
pop
lock
push
push
inc
mov
mov
mov
xchg
inc
add
mov
cmpsb
data16
jg
xchg
jbe
push
call
push
pop
fsts
pop
shll
js
or
xchg
pop
inc
ret
aas
push
cli
cmpl
mov
shlb
xchg
bound
mov
ficoml
aad
dec
push
xor
repz
xor
sub
repz
xchg
add
or
loop
push
js
and
popa
in
add
and
xchg
and
add
push
jle
jb
fimull
sbb
sbbb
adc
mov
push
test
cwtl
mov
inc
ja
enter
and
add
adc
lret
mov
push
push
jp
or
lcall
dec
fdivrs
loope
add
inc
nop
aam
jg
ja
push
and
and
and
jo
mov
pop
push
inc
add
sbb
cmp
shr
pushf
cli
xor
repnz
js
push
xchg
pop
inc
xchg
cmc
pop
and
and
std
mov
shlb
nop
dec
js
test
inc
mov
pop
adc
dec
pop
lock
push
push
pop
or
jo
add
and
negb
je
jb
xor
call
or
jp
insb
push
xor
fsubs
das
enter
lock
xor
lock
push
inc
add
or
sahf
inc
inc
inc
push
idivb
jb
push
std
add
push
aas
pop
add
test
test
je
mov
adc
xchg
add
mov
sub
outsw
cli
pop
xor
add
ja
idivb
mov
push
bound
cmp
scas
xor
mov
lock
inc
ljmp
clc
mov
pop
jmp
cmp
add
inc
pop
incl
push
xor
mov
inc
adc
add
push
in
pop
push
pop
pop
adcb
incb
push
lock
ss
sbb
test
sbb
aaa
fs
mov
rolb
out
or
jo
ljmp
in
add
fdivs
inc
adc
loope
and
insl
jae
outsl
into
add
pop
sub
mov
xor
mov
imul
adc
pop
adc
testb
push
fwait
subb
add
push
std
lock
je
aaa
call
inc
addl
stos
xor
sbb
outsb
inc
int3
jge
adc
mov
xchg
mov
adc
das
and
std
lock
xchg
inc
incl
and
mov
add
fcoms
sbb
inc
sbb
int3
dec
es
ja
call
pop
jae
or
mov
lock
xor
cld
pusha
sbb
lods
jo
and
sar
or
mov
xor
add
scas
test
or
add
daa
test
sub
fldenv
jne
mov
add
push
adcl
outsb
adc
je
push
adc
pop
mov
jbe
test
mov
iret
lock
test
push
mov
dec
mov
mov
int
insb
push
ljmp
icebp
or
loop
jae
lret
push
jb
rclb
add
lock
mov
or
pop
jmp
pop
jge
push
xor
and
pop
adc
dec
cmp
test
mov
lods
adc
push
stos
inc
sahf
movsb
jne
adc
add
js
mov
movsb
push
add
or
hlt
data16
das
adc
aam
fsubp
mov
add
hlt
imul
fldl
push
add
andl
add
cmc
jo
test
pop
and
mov
pushl
insb
mov
or
or
pop
mov
call
push
rorl
or
aam
adc
ss
pusha
add
call
test
inc
jne
xor
fwait
mov
loope
mov
dec
call
cmc
sub
jmp
add
je
inc
rolb
or
mov
xor
jecxz
ds
lock
mov
push
dec
rcl
push
call
adc
jbe
adc
inc
mov
call
add
nop
bnd
jl
nop
pusha
jg
loopne
clc
push
cld
wrmsr
or
pop
push
icebp
ret
add
jb
sbb
mov
add
and
sbb
andb
or
mov
repz
push
or
inc
push
arpl
or
push
push
ret
ja
xor
rolb
jg
add
adc
mov
adc
pusha
inc
test
or
cwtl
aam
add
jl
mov
mov
xorb
dec
stos
lea
push
call
adc
outsb
sub
stc
add
ret
cli
push
mov
push
cwtl
xor
je
xor
jg
mov
js
dec
rclb
push
add
les
shlb
stc
stos
or
pop
sbb
inc
ret
sbb
loope
push
add
cli
or
adc
nop
fdivrl
push
jmp
push
add
pusha
enter
xor
fs
xor
das
add
add
incl
xchg
mov
outsl
sbb
sahf
pusha
cld
mov
xorb
push
jle
add
lods
les
ds
test
ret
cli
or
lea
mov
iret
adc
les
cld
ret
faddl
or
add
cmp
ljmp
adc
je
push
jmp
xchg
mov
push
xlat
mov
sti
add
in
sub
dec
mov
mov
addr16
ljmp
cld
push
or
xchg
andb
test
bound
stos
aam
call
test
add
cli
enter
dec
cmp
hlt
fbld
outsl
pop
push
pusha
add
cmc
cmp
ljmp
add
inc
push
cld
adc
dec
xor
mov
jg
lock
insb
xchg
dec
push
sbbb
mov
clc
cmpb
pop
inc
push
sub
adcl
inc
and
fwait
mov
pop
sub
sub
sar
or
cmp
das
pop
insl
stc
sub
add
sarb
sub
xchg
inc
andb
adc
adcb
ret
or
hlt
ret
and
outsb
mov
jl
rolb
cmpsl
push
leave
dec
pop
cmc
jg
dec
push
inc
pop
pusha
jne
aas
rolb
push
xchg
push
movsb
in
and
ljmp
icebp
lahf
lar
shlb
lcall
mov
xchg
aad
xor
js
pop
cmp
enter
ja
jmp
movsl
imul
clc
imul
mov
add
sub
mov
pop
and
mov
cmp
adc
or
ds
inc
ja
push
xchg
xchg
fimuls
stos
mov
pop
adc
pop
dec
lock
cwtl
call
inc
inc
inc
sub
je
sub
push
push
adc
add
dec
ja
xor
daa
outsb
adc
mov
jae
dec
lods
push
mov
aaa
cltd
sub
xchg
es
rorb
push
adc
cmpsb
xchg
cmpb
add
shlb
push
adc
shrb
incb
pop
push
add
push
pop
and
js
mov
cwtl
sarb
push
popf
repnz
fs
test
jae
pop
mov
jne
data16
mov
or
cmp
add
jae
loop
in
or
inc
mov
rol
rclb
loop
pop
xor
adc
arpl
inc
pop
pop
inc
sbb
fimuls
gs
orl
sub
xor
add
mov
incb
hlt
lock
adc
sub
scas
roll
clc
sbb
sub
lock
sbb
rclb
fistl
adc
mov
mov
ror
rolb
mov
outsb
mov
sub
lea
movb
insl
movsl
fdivl
cmp
dec
xchg
shl
sbb
jmp
imul
push
adc
call
in
sbb
and
lds
popa
push
shr
inc
negb
add
xor
push
sbb
in
idivl
sub
fucom
push
loope
xchg
loopne
dec
jecxz
shlb
push
mov
addr16
mov
jo
add
and
imul
push
and
data16
dec
aaa
movsl
mov
cli
and
ss
lock
std
sti
mov
jmp
into
or
loopne
mov
aam
push
xchg
jl
faddl
ret
and
mov
cld
mov
mov
pusha
sub
fsub
or
pop
fwait
mov
ss
jle
jle
jl
add
lret
test
je
fmull
lock
jle
call
add
jge
ja
push
shll
lcall
test
add
call
push
push
rolb
add
aas
fistpl
call
add
add
jg
dec
push
fisttpll
incb
adc
or
pop
cmp
dec
adc
or
lods
mov
mov
xorb
test
or
ficompl
insb
mov
call
pusha
xchg
push
sbb
push
sarb
inc
add
shl
sar
xchg
ret
loopne
inc
or
sub
lods
cmp
mov
mov
push
pusha
jp
pop
int3
sub
or
cmc
jecxz
popa
outsl
push
jmp
mov
adc
or
jl
lock
and
loope
sbb
fbld
test
mov
jo
xchg
push
cmp
aaa
add
movsb
mov
into
adc
add
cs
jg
fsubrs
pushf
bound
out
push
push
adc
or
sbb
add
push
xchg
pop
xchg
js
call
push
scas
clc
popa
push
outsb
adcb
xchg
lcall
add
loopne
push
leave
adc
jecxz
mov
loopne
mov
pusha
inc
fwait
fwait
inc
rcll
scas
loop
aas
pop
test
xchg
mov
lock
pusha
scas
xor
notb
outsl
jl
cmc
sub
pop
dec
fdiv
adc
jb
cmp
pusha
lret
fidivrl
xchg
push
push
and
dec
test
push
inc
lods
popa
dec
andl
add
add
dec
jge
in
dec
pusha
xchg
test
add
adc
outsl
shlb
scas
xor
dec
movsb
icebp
call
dec
cmp
pop
mov
adc
push
xchg
pop
xor
bound
jle
sti
cmp
jp
loopne
and
repz
clc
test
enter
inc
adc
loopne
jbe
in
fmul
add
jmp
or
sub
adc
xor
push
call
sbb
pop
je
loope
pop
xchg
add
mov
scas
mov
inc
fisttpl
shll
fstp
xchg
adc
mov
add
lods
clc
gs
pusha
dec
hlt
adc
push
pusha
add
inc
aam
loopne
xorb
or
dec
pusha
daa
clc
jg
out
and
adc
inc
ret
ja
or
std
inc
inc
lds
incb
pop
loopne
jecxz
stos
loopne
outsl
add
scas
outsl
lea
arpl
dec
call
mov
xchg
test
arpl
dec
xchg
add
lock
call
pushl
pop
aas
je
add
dec
std
jb
and
add
dec
shlb
mov
mov
and
inc
test
add
mov
xchg
xor
push
nop
lock
lea
add
adc
insl
jb
dec
cli
into
adc
fcmove
adc
clc
and
lock
cmp
fisttps
pop
inc
jo
pop
addb
inc
xor
inc
cmpb
sbb
lock
or
inc
add
sti
inc
add
mov
add
insb
roll
clc
shrb
loop
pushl
imulb
ja
or
mov
adcl
push
test
ss
add
mov
dec
add
cmp
mov
test
mov
outsb
js
and
mov
lods
adc
je
cmp
mov
pushf
ljmp
test
jbe
adc
addl
je
jl
in
add
ret
mov
ljmp
jmp
add
or
movsb
mov
add
andb
repnz
pop
sbb
mov
mov
adc
add
lock
dec
fcmovbe
fists
ficoml
xor
je
mov
mov
addl
push
add
insb
add
fisubrs
dec
clc
pop
push
adc
je
push
ret
orb
push
gs
push
inc
into
clc
mov
xor
mov
push
sub
mov
pop
cmp
push
cmp
mov
xor
test
and
and
mov
push
and
adcl
jle
insl
fwait
ret
inc
push
adc
test
rolb
xchg
outsb
mov
sub
shlb
cmp
sbb
test
mov
add
fst
lcall
xor
cmc
add
mov
sub
clc
jo
in
or
xor
cmp
add
jo
test
push
adc
fs
jmp
mov
xor
mov
add
mov
je
lock
int3
add
sub
sbb
add
and
dec
push
or
lea
add
push
and
adc
fsubr
mov
cld
fildl
adc
mov
pop
test
ja
adc
push
inc
insb
les
push
adc
or
lea
mov
test
cmp
add
or
jb
adc
push
mov
inc
shlb
shrb
mov
xor
push
ficompl
pop
and
sub
xor
imul
incb
pushf
mov
jo
jmp
jno
pop
add
pop
inc
je
jbe
stos
inc
dec
fcoml
inc
cld
das
adc
mov
sbb
mov
mov
ljmp
inc
mov
sbb
dec
jbe
jns
movsb
call
jmp
mov
and
inc
and
fstps
lea
xor
flds
jle
mov
pop
in
jp
orb
jbe
dec
cmp
fadds
inc
mov
adc
push
mov
jg
jmp
add
call
dec
call
or
or
shll
jne
mov
or
jo
push
fistpl
jmp
in
call
cmp
fisubs
jno
adcl
jle
pop
dec
test
mov
mov
mov
adc
mov
hlt
ljmp
add
mov
xor
xor
add
push
add
loopne
bound
or
rcrb
dec
insb
jp
addb
lea
hlt
jg
hlt
pusha
bound
test
cmp
fidivrs
clc
xchg
xor
jbe
jg
hlt
xchg
pushf
out
lock
or
mov
cmp
push
mov
lea
loop
xchg
sbb
addl
aaa
jmp
dec
icebp
lret
xor
mov
adc
inc
outsb
mov
xor
add
add
lods
mov
les
lock
mov
fwait
mov
push
mov
add
mov
add
pop
xchg
cld
loope
je
ljmp
push
pop
notb
inc
shlb
das
lock
jmp
jno
pushf
aam
stos
add
jnp
inc
scas
cli
daa
or
add
inc
mov
sarb
mov
and
inc
inc
mov
popf
adcb
frstor
mov
cld
fadds
clc
adc
je
xor
xor
xor
lret
push
add
mov
add
push
int3
data16
and
aam
mov
sbb
decl
or
xchg
mov
lock
adc
mov
jle
add
pop
pop
xor
sub
jno
xor
aad
enter
cmpsb
adc
xor
sbb
adc
jl
mov
cmp
jecxz
push
or
push
push
movsl
icebp
sub
fidivs
adc
decl
into
pop
cmp
or
pushf
and
add
or
mov
lock
push
add
cmp
repz
shlb
mov
xor
lock
mov
or
ror
jmp
add
add
incb
mov
je
push
push
adc
cli
aas
mov
jo
pop
push
adcb
or
xor
jo
mov
cmp
sbb
out
sub
pop
push
jo
adc
loope
dec
sbb
call
add
mov
xor
hlt
mov
lret
xor
jno
push
pop
imul
adc
and
add
in
xor
nop
sub
or
mov
sbb
cmp
push
movsb
or
mov
add
ret
push
xchg
or
inc
loopne
add
push
and
adc
sub
or
ljmp
test
repnz
inc
push
push
into
ficomps
inc
shlb
inc
outsb
push
mov
rorb
mov
xor
mov
fsubrs
stos
xor
push
mov
test
mov
mov
inc
mov
sbb
cbtw
push
xchg
add
test
lock
pusha
mov
loop
lcall
nop
and
clc
and
xchg
cli
fdivr
call
push
mov
push
push
push
pusha
es
push
cwtl
and
push
es
imulb
cmp
fistl
stos
add
pushf
mov
mov
xchg
adc
jmp
test
jne
adc
adcb
fucomi
test
add
in
loope
add
add
insb
add
add
pop
daa
out
add
inc
mov
adc
pop
cwtl
pusha
aad
dec
jbe
sub
xchg
adcl
js
add
call
adc
and
insl
inc
push
mov
fcom
fwait
fwait
xor
inc
push
aaa
lcall
fsubrs
leave
cli
mov
mov
jno
adc
cmp
add
outsl
sbb
les
mov
push
rolb
pop
or
add
jno
test
orl
add
add
add
lret
adc
push
dec
mov
mov
std
push
popf
hlt
push
adc
lret
lcall
fmuls
cmp
adc
pop
add
inc
out
movsb
add
push
pop
leave
cmp
outsb
add
sldt
sub
add
bound
mov
sbbb
mov
aaa
mov
ret
inc
pop
pop
jns
mov
jecxz
and
xchg
sbb
jbe
mov
inc
enter
xchg
mov
or
rcrb
cmp
scas
xchg
shlb
addl
mov
test
sbb
mov
push
outsl
jg
inc
xchg
lds
push
push
testb
mov
mov
mov
jg
cmp
shlb
shlb
or
xchg
sub
mov
pop
lea
push
add
add
add
rorb
dec
sub
or
adc
scas
repnz
pop
sbb
jge
lods
mov
add
clc
and
ret
push
rolb
ret
testb
push
inc
popf
roll
xchg
sahf
adc
fwait
dec
and
push
pop
rcr
call
xor
pop
mov
pop
mov
mov
adc
xor
and
cmp
aaa
push
inc
mov
insb
push
inc
push
jecxz
fisttpll
ret
push
rcrb
or
jecxz
pop
jbe
jo
or
test
mov
out
inc
adc
shlb
dec
xor
pop
outsb
int
sub
push
push
test
hlt
and
lea
mov
adc
push
pop
insl
mov
jl
add
cltd
es
sub
bswap
lea
mov
sbb
adc
inc
xchg
icebp
shlb
cmp
fadds
mov
shlb
and
loopne
or
incl
jmp
mov
dec
pop
rcl
call
shrb
add
shlb
jle
push
test
pop
and
or
shrb
lea
ds
cmpsb
xor
mov
repnz
dec
inc
mov
push
jbe
dec
lcall
and
sub
loopne
mov
movb
add
or
int3
mov
xor
add
loop
lret
fcomip
addr16
std
ljmp
inc
scas
loopne
je
cmc
jmp
or
nop
jne
pop
add
mov
and
ljmp
pop
cwtl
fdivl
jge
loop
push
cmp
or
xor
adc
pushf
fistl
lcall
lea
sub
call
sub
clc
jp
xchg
push
mov
shrb
pusha
es
enter
mov
pop
dec
jp
sbb
push
push
decb
idivl
clc
orb
lock
push
dec
xchg
loope
insb
outsl
ljmp
faddl
sub
in
add
and
pop
mov
pusha
sub
push
mov
jne
roll
bound
mov
xor
or
pop
pop
pop
fwait
sub
and
das
dec
outsb
push
inc
test
repnz
lret
pusha
pop
lods
pop
jmp
inc
jmp
rorb
sub
sbb
js
cltd
add
pop
push
rorb
cmp
dec
loopne
mov
pop
and
cld
pusha
bound
jo
adc
adc
dec
add
or
xorl
cs
adc
sbb
popf
and
ret
gs
mov
das
inc
mov
cmp
pushl
cli
adc
and
andb
pop
push
es
loopne
out
mov
jmp
dec
inc
fisttpl
cmp
pusha
pop
pop
xor
loopne
sub
int
push
inc
jle
das
and
add
inc
cld
into
cvttps2pi
add
push
add
aaa
out
bound
jge
mov
fwait
popa
cmp
jae
fistpl
cmp
mov
sub
enter
lcall
test
sub
lea
pop
loop
push
pusha
or
add
lods
pop
xor
lds
incl
xor
daa
jp
or
popa
inc
loope
push
ret
pushf
ss
jb
adc
hlt
sbb
ljmp
ss
lock
add
loopne
pushf
aam
call
push
jl
movsb
mov
loopne
or
pushf
or
mov
in
addr16
enter
sbb
or
and
loop
loopne
fadds
sbbb
mov
sub
push
and
xor
in
lds
inc
adc
jns
pusha
lahf
fsubl
loope
pop
mov
mov
mov
fmuls
loopne
mov
inc
arpl
push
mov
sbb
test
and
in
and
cmp
xchg
loopne
ret
xor
cwtl
rclb
in
push
push
or
mov
loopne
xchg
push
call
cmp
and
adc
cld
enter
or
push
mov
lds
mov
mov
mov
ret
add
adc
push
and
xchg
dec
enter
fs
or
int3
imulb
lret
or
lret
add
inc
scas
inc
sub
or
stc
cmp
jge
push
or
pop
sahf
test
sahf
or
push
mov
cmpb
loop
xor
test
loop
adc
mov
add
add
or
aas
adc
add
inc
inc
loopne
daa
idiv
pop
sub
add
ret
adc
pusha
sub
push
xor
aaa
or
shrl
xor
mov
mov
jo
insb
add
adc
push
test
ja
push
aas
or
add
lret
dec
cmc
dec
ja
fildl
jb
test
ljmp
push
push
mov
sub
sbb
dec
and
lods
call
arpl
inc
sti
aam
mov
add
inc
repz
add
jno
push
add
sarb
cmp
add
add
rolb
nop
push
xchg
pop
bound
mov
inc
add
int3
xor
int3
call
inc
mov
inc
mov
push
xor
ja
leave
dec
add
adc
jle
dec
mov
add
sub
call
push
arpl
and
addr16
sbb
fildl
inc
xor
sub
inc
sti
out
outsb
sub
and
mov
mov
js
jno
shrb
mov
sbb
and
rolb
fldl
adc
sbb
pop
mov
call
pop
cmpsl
lret
leave
jo
jno
in
insl
loopne
roll
pop
mov
sbb
dec
and
popa
shl
mov
clc
add
push
jo
add
dec
pop
mov
inc
inc
jo
rclb
dec
insb
std
ficoml
dec
adc
aaa
dec
adc
add
divb
or
jmp
mov
inc
inc
test
mov
inc
outsl
inc
test
mov
jl
btr
ljmp
je
inc
adcl
incl
jb
pop
mov
mov
les
repz
xor
adc
sbbb
add
sub
pop
mov
add
pop
fidivs
xor
lock
arpl
pop
divb
lock
add
pop
push
test
push
inc
and
sbb
pop
cld
fistpll
out
icebp
inc
sub
repz
icebp
jo
jmp
aaa
je
sub
sub
cmp
jl
and
inc
pop
and
jmp
fs
xor
mov
or
movsl
mov
jo
pushl
inc
jno
nop
add
and
jbe
les
add
das
pop
jecxz
adc
cmp
sarb
movsb
nop
push
repnz
orb
test
mov
jo
test
mov
jg
jo
adc
dec
inc
xor
movsb
cmc
and
idivb
je
xor
mov
cmp
lock
mov
lock
pop
decl
subb
inc
mov
orl
pop
add
fwait
xchg
cli
xchg
lock
test
dec
add
movsb
xor
lret
insb
sub
in
call
repz
test
push
mov
ret
dec
push
cwtl
mov
pusha
sub
add
push
fs
cmp
jo
mov
sbb
sbb
cmp
push
shlb
push
xor
xor
xchg
orb
rorb
push
cmpb
sub
aaa
inc
clc
std
lock
mov
xchg
or
pusha
aaa
divb
or
mov
aaa
fcmovnu
cmc
ja
adc
xor
lock
push
push
or
insl
mov
pop
es
movsb
xor
push
dec
out
outsl
push
jo
and
es
jo
cld
popf
shlb
add
lock
cmpb
stos
xchg
add
jle
add
std
mov
jg
push
lea
mov
xchg
insb
icebp
push
imul
ljmp
and
xor
xor
ljmp
adc
decl
inc
and
lock
call
or
test
ret
roll
incl
push
push
cwtl
mov
mov
or
xor
fwait
loope
aaa
xor
xor
sub
decl
decb
shl
lock
shl
daa
jo
sub
popa
jo
aad
jmp
sub
cmp
lock
cmp
mov
jl
cli
and
adc
les
push
mov
test
pop
push
js
mov
aad
sub
sub
fbstp
fcom
or
or
xchg
pop
adc
sub
and
xorb
clc
out
add
cmp
mov
and
inc
jns
ss
dec
or
int3
add
mov
pop
out
incl
aas
inc
or
mov
cmpsl
sub
adc
xchg
lea
pushf
lock
ljmp
dec
fildl
cmp
insb
mov
mov
xor
and
push
mov
push
cmp
sub
cld
cli
divb
pop
fucomip
push
push
gs
mov
enter
or
push
xor
and
push
stc
and
orb
call
das
mov
sahf
or
subb
adc
and
mov
test
mov
add
xchg
cmp
cmp
in
loopne
push
sub
xor
push
push
mov
sbb
fwait
mov
sub
mov
repz
loopne
or
push
std
call
jmp
lock
pop
sbb
pop
pmuludq
or
add
xor
pusha
mov
and
sub
sub
pop
inc
mov
xor
sbb
das
incb
ret
shl
pop
adcb
rolb
js
inc
mov
jbe
sbb
and
sub
mov
cmp
ljmp
jno
jnp
lock
in
adc
test
adc
xor
fs
je,pn
lods
lea
incl
mov
push
sub
mov
add
cwtl
adc
add
cmp
inc
mov
xchg
ljmp
mov
pop
lock
ss
jmp
jo
jecxz
je
in
jmp
lretw
cltd
stos
repnz
jg
fdivs
shll
scas
pop
ss
push
adc
insb
or
cmp
dec
clc
xorl
jo
lea
icebp
pop
push
icebp
jbe
pop
call
pop
and
and
testb
arpl
scas
lahf
in
inc
jo
cmp
adcb
movsb
xor
cmpsb
inc
dec
mov
sub
and
pop
clc
addr16
arpl
pop
push
xor
test
sbb
xor
add
sbb
ret
insb
call
bound
pop
sub
arpl
repnz
inc
xchg
push
ds
mov
enter
test
inc
imul
fbstp
mov
jecxz
and
lcall
push
pop
mov
mov
mov
push
add
push
add
inc
lods
mov
adc
or
mov
add
movsl
fadds
or
or
mov
mov
adc
es
ror
mov
icebp
movsb
je
sub
push
je
cmp
xor
and
loop
movsb
pop
add
push
jmp
push
push
add
push
add
enter
xchg
jbe
add
or
incb
mov
cwtl
in
pop
add
adcb
jne
add
mov
xor
mov
mov
nop
pushf
fadds
pusha
lret
in
or
add
add
xor
jmp
cmpl
mulb
push
ret
jnp
subb
mov
jo
js
push
int3
rorb
and
mov
jecxz
mov
repz
adc
or
popa
pop
data16
adc
add
add
inc
cmp
jb
lock
xor
fs
inc
ja
nop
dec
outsl
cmp
or
add
inc
fs
fidivrl
mov
cmp
sub
fwait
inc
sub
push
dec
jb
add
in
add
adc
push
call
pop
gs
int3
sbbl
je
mov
or
ret
leave
shl
jle
inc
push
add
cmp
add
pop
mov
movsb
inc
fiadds
inc
xchg
add
xchg
mov
xor
pop
and
loopne
xor
idiv
insl
mwaitx
jg
cs
mov
ja
and
push
and
mov
clc
test
pop
mov
in
mov
xchg
jne
jbe
add
rorl
adc
sbb
pop
sub
jg
add
pop
rorl
into
decb
inc
into
into
ret
or
pop
mov
mov
adc
inc
lret
sub
xchg
xchg
adc
test
pop
add
popa
push
dec
addl
mov
add
jno
add
mov
test
pop
add
xor
add
ds
es
lock
push
push
jle
ret
add
push
sbb
and
pop
addl
jne
adc
add
test
xchg
jg
inc
imul
pop
ret
pop
jp
cmp
xor
mov
es
inc
xchg
or
fs
aam
jno
out
js
cmp
faddl
adc
sbb
sub
mov
and
sub
sbb
xor
sub
mov
rol
fwait
push
rolb
ret
add
mov
or
stos
andb
cmp
xchg
push
ljmp
imul
push
jo
jne
rcl
or
sbbb
and
in
sub
fcompl
call
pop
mov
call
mov
jmp
lock
inc
repz
rorb
xor
and
pop
lret
rclb
pusha
jo
cmpsb
dec
push
pop
pop
add
js
sub
sar
inc
or
jbe
je
and
pop
outsl
mov
fmuls
push
xchg
in
add
fisubrs
dec
push
jecxz
movsb
mov
popa
std
cmp
lar
cltd
cmp
in
arpl
inc
cmpsb
les
mov
xorl
fbstp
and
and
cmp
add
in
decl
or
loop
mov
pop
loope
cmp
sbb
aad
sbb
and
sahf
lret
nop
fldcw
xchg
xchg
xchg
adc
popa
sub
mov
por
pop
adc
cmp
addl
sbb
ret
cs
push
cmp
loopne
add
sub
sub
lods
insb
inc
daa
cmp
add
sti
mov
push
sbb
mov
adc
and
sub
sub
loopne
or
push
adc
int
loopne
shrl
call
fdivrs
push
loop
xor
test
loopne
push
int3
mov
mov
or
movsb
sti
jmp
movsb
adc
and
mov
inc
inc
out
cwtl
fs
repz
std
jg
aam
test
adc
loope
es
or
shlb
xlat
js
lods
add
mov
add
vmwrite
sahf
pusha
dec
scas
fadd
mov
ljmp
imul
movsb
in
bound
jb
jl
loopne
inc
inc
jg
loopne
mov
popa
loopne
jge
clc
and
test
lcall
add
xchg
loop
mov
ret
insl
call
dec
loope
adc
xchg
scas
fcomps
fucomi
fs
adc
inc
pop
aaa
inc
pusha
push
pusha
pop
mov
inc
jmp
out
adc
sub
add
es
pusha
inc
add
adc
pop
mov
pusha
cmp
loop
ss
cmp
push
and
jbe
lcall
jle
inc
mov
cli
or
or
push
mov
xor
sbb
popa
pop
cmp
pushf
inc
dec
dec
add
inc
mov
movsl
pusha
inc
adc
xchg
lahf
mov
xchg
add
rcr
add
inc
inc
jbe
jp
push
setnp
loopne
test
test
test
outsb
call
ret
enter
cld
pop
stos
sbb
jecxz
addr16
pusha
xor
pop
das
mov
and
jg
pop
sti
pusha
daa
or
push
pusha
xor
push
push
ret
clc
mov
pop
es
aam
ret
cs
std
mov
shl
loopne
push
adc
in
inc
loopne
sub
cwtl
pop
xor
popa
add
sub
adc
mov
lea
inc
sar
and
scas
call
loopne
test
and
clc
fbld
cmpsl
inc
dec
ljmp
addb
mov
and
outsl
pop
in
add
sbb
xchg
inc
andb
cmc
nop
push
loopne
jg
lock
cmp
adc
or
movsb
and
mov
addl
in
inc
xor
xor
popf
add
adc
addb
fdivr
hlt
je
shrb
or
add
push
test
adc
jne
incl
push
je
jo
aam
jb
in
jo
jp
call
jo
mov
adc
cmp
cmp
push
inc
pop
inc
imul
mov
adc
sub
or
ljmp
mov
int3
mov
in
or
dec
lret
aam
mov
add
dec
mov
mov
ret
icebp
adc
cmpsb
and
mov
inc
fdiv
add
inc
or
add
sub
adc
add
insb
mulb
push
ret
sbb
pop
sub
mov
es
test
lods
adc
mov
pop
or
add
push
adc
icebp
jo
call
dec
adc
push
mov
lea
sub
inc
lods
jo
mov
mov
push
push
mov
movb
fadds
clc
mov
sub
or
pop
or
clc
lcall
je
scas
xchg
gs
dec
jl
pop
push
xor
pop
ja
clc
sbb
jl
inc
test
cs
jb
pop
add
mov
xor
sub
adc
add
add
adc
add
or
jmp
inc
add
add
lock
jmp
decb
jo
sub
hlt
sub
adc
pushf
push
popa
jo
or
lock
push
mov
push
int3
add
xor
adc
out
and
pop
or
mov
mov
fs
mov
add
sub
xor
faddl
pop
mov
andb
cmp
adc
lock
and
dec
cmpsl
rolb
inc
inc
stos
sub
xor
xchg
jle
lock
push
test
cmp
fwait
xor
mov
aam
ret
push
jl
add
lock
cld
push
and
inc
mov
icebp
pusha
nop
sbb
outsl
cmp
add
outsl
adc
push
and
cmp
jb
jo
icebp
or
cmp
jb
or
or
add
lods
daa
or
pop
ljmp
sbb
icebp
xor
mov
adc
in
push
leave
repz
push
scas
and
test
jae
push
mov
je
je
std
outsb
loope
jne
mov
divl
mov
fmul
pop
mov
cmp
imulb
push
in
mov
mov
push
mov
push
cmpb
inc
mov
out
xorb
clc
jp
jg
jne
xor
add
cmp
mov
dec
jg
ljmp
mov
je
add
dec
push
and
inc
ds
or
call
xor
mov
mov
mov
push
lret
or
jl
lcall
divl
rolb
mov
loopne
jle
or
jge
cmp
mov
add
xchg
int3
out
add
arpl
mov
inc
fsubr
sbb
pushl
jo
pop
aad
aas
mov
cmp
adc
orl
mov
sbb
mov
lock
hlt
hlt
jb
add
dec
push
xchg
mov
aas
mov
push
push
push
dec
add
sub
in
dec
cmp
sbb
lock
add
clc
push
jo
orb
jne
cld
je
mov
add
arpl
scas
rclb
ja
pop
fdiv
loopne
popf
inc
jecxz
adc
data16
push
inc
bound
fiaddl
mov
dec
dec
dec
push
pop
push
pop
push
outsb
push
add
mov
cmp
leave
clc
scas
nop
in
adc
ss
adc
xchg
or
lock
xor
add
fidivrl
or
add
mov
clc
dec
mov
cld
ja
cwtl
das
jne
jg
add
je
pop
or
addb
xchg
pop
mov
jg
repz
je
push
pusha
or
and
roll
cmp
xor
mov
imul
mov
pop
inc
or
sub
push
jo
jne
psubsb
adc
push
jo
cwtl
mov
sbb
cmp
clc
in
add
add
rolb
mov
loop
inc
adc
dec
loopne
add
mov
and
cltd
in
out
mov
jb
ret
or
je
add
inc
inc
clc
fisttps
pop
hlt
xchg
in
or
int3
leave
mov
add
aam
xorb
inc
xchg
movsb
mov
inc
push
repnz
es
push
jg
pop
ds
add
clc
adc
jmp
orb
test
pcmpgtb
lock
repnz
inc
aam
sub
pusha
inc
outsl
loopne
or
add
call
mov
shll
pop
push
adc
call
lds
inc
and
lock
inc
pushw
std
dec
lret
lcall
adc
inc
stos
mov
lods
pusha
inc
xchg
jmp
xchg
mov
xor
dec
inc
jo
mov
mov
pushl
push
add
inc
call
inc
clc
aas
xchg
inc
add
sbb
mov
or
shr
pop
andb
test
adc
insb
jmp
pop
jne
jle
fstl
mov
inc
cmp
test
cmp
jne
cmp
sub
jl
decb
mov
push
add
pop
add
jo
inc
in
mov
mov
subl
xchg
mov
pop
or
cs
inc
loop
mov
add
add
adc
adc
jge
add
lock
or
lock
jp
mov
je
rclb
sub
xchg
push
xchg
push
sar
xor
cmp
clc
in
cmp
and
jne
and
idiv
mov
ja
lea
cli
ja
push
add
jne
add
mov
mov
mov
add
loope
cs
sahf
ret
xor
pop
push
mov
jecxz
ret
xchg
and
sub
ret
and
push
xor
or
aam
add
push
pop
xor
mov
lret
cmpsb
rclb
fcmovu
inc
inc
adc
and
lret
pop
pop
dec
push
movsb
xorb
pop
jle
or
add
mov
pop
cmc
sbb
int3
inc
lods
xor
lahf
je
icebp
pop
xor
cmp
popf
push
mov
shlb
or
adcl
jbe
ds
inc
jge
icebp
cwtl
repnz
add
jo
add
dec
mulb
testl
cmp
jae
push
lea
cmpsb
jle
hlt
loop
jno
int3
mov
adc
loopne
pop
xchg
adc
jne
add
mov
rolb
add
fldl
hlt
jge
jbe
push
cld
adc
xor
add
push
call
cmp
lds
or
adc
mov
lods
mov
add
and
clc
pushf
adc
add
gs
dec
cld
add
fmuls
or
or
or
jg
pop
faddl
add
xchg
hlt
add
loopne
and
cli
or
jb
add
fs
and
inc
outsl
xchg
mov
mov
lea
add
mov
stos
jbe
pop
jb
pop
insl
loop
pop
rolb
mov
cmp
pop
stos
fdivs
cmp
push
cld
push
out
dec
pop
jp
sbb
data16
push
xor
xor
and
les
mov
add
fbstp
xor
cmp
jae
mov
call
inc
jg
fcmovbe
cmp
xor
jns
xchg
add
les
inc
mov
or
cld
xchg
fildl
push
add
sbb
aam
push
imulb
add
cwtl
test
cld
fidivs
pop
or
subl
cmp
inc
cmp
scas
mov
sub
es
or
movsb
and
fmuls
pusha
or
sbb
cmp
loop
mov
mov
rcr
and
movl
adc
pusha
daa
sbb
xchg
mov
cmp
jne
xchg
scas
lret
mov
add
sub
test
cmpsb
inc
call
scas
fs
jbe
push
jb
sbb
test
xor
mov
push
push
cld
ret
jb
mov
xchg
push
imul
lock
and
ss
clc
pop
bound
inc
inc
rorb
hlt
shll
xchg
mov
push
not
jge
or
repnz
lock
or
xchg
cltd
sub
inc
add
adc
popf
inc
shll
add
xorb
test
loop
xchg
xchg
mov
fisttps
pop
shlb
and
pop
jb
incl
inc
sub
out
add
sarb
cmp
push
sub
push
test
or
xor
outsb
jbe
ja
adc
lret
cmp
ljmp
rcrb
neg
in
and
std
or
mov
shl
mov
outsb
fdivr
jmp
dec
mov
mov
sub
scas
pusha
jl
jp
je
pop
insb
add
mov
mov
fldcw
mov
push
push
shlb
addr16
shll
test
dec
push
in
xor
add
mov
dec
pop
roll
mov
sub
shrb
push
rol
lock
and
movsb
add
pop
or
xchg
das
aaa
cmp
call
movsb
subb
mov
push
fs
sub
mov
jp
or
push
jl
cmp
testb
lds
adc
add
call
mov
movsb
in
add
jo
jle
in
adc
add
inc
data16
enter
into
cli
pop
rolb
or
bound
add
out
sbbl
insl
scas
push
sbb
and
adc
clc
push
ret
dec
ficoms
idivb
arpl
mov
cwtl
or
inc
stos
inc
jmp
icebp
pusha
sbbl
or
push
jge
push
mov
adcb
out
adc
jo
or
and
pop
fisttpl
outsl
into
and
shrl
dec
or
jge
inc
push
mov
xchg
pop
and
ret
aam
out
add
data16
fiaddl
lcall
stos
xor
or
jl
add
rcrl
add
mov
pusha
or
jno
outsl
cmp
or
or
jmp
fisubrl
scas
shlb
pusha
push
cwtl
add
loopne
rolb
pusha
and
cld
or
mov
cld
add
jecxz
cmp
cld
add
mov
add
sub
or
loop
sti
loopne
and
sbb
loopne
mov
pop
add
sti
sbb
push
or
cmp
xchg
in
neg
or
scas
insb
je
icebp
sub
mov
mov
jbe
and
sbb
mov
add
xor
push
or
and
loop
push
loope
cli
pusha
jne
and
cltd
loopne
mov
cmp
or
or
call
aas
pusha
jl
test
xor
lret
inc
ret
pop
inc
pop
test
push
adc
add
pop
inc
mov
shr
in
loopne
or
pop
psrld
scas
dec
loop
data16
xchg
and
in
xorb
add
cmpb
inc
in
es
dec
pop
ret
popf
cmpsb
ficomps
add
je
ret
jg
add
aam
ret
sbb
add
xchg
test
adc
ss
add
add
outsl
or
lea
nop
loopne
push
loopne
jo
push
mov
adc
popa
push
roll
jp
xchg
push
mov
ljmp
subb
adc
mov
add
sbb
sub
adcb
pusha
add
mov
dec
test
repnz
clc
or
cmp
mov
insl
xchg
sbbb
clc
loopne
jecxz
add
push
je
or
lcall
lods
push
clc
jl,pt
jmp
nop
pop
lea
cmp
jb
push
call
and
mov
call
pop
inc
data16
shlb
inc
inc
and
repnz
fdivp
int
in
add
mov
adcl
adc
inc
loopne
iret
adc
adc
mov
fs
and
pop
add
or
push
pop
mov
and
or
in
cwtl
in
pop
add
in
loopne
mov
dec
jl
or
shll
xorl
pushf
xchg
and
adc
add
add
dec
jb
xchg
out
adc
int
xchg
pop
dec
loopne
and
dec
mov
pop
or
inc
cli
mov
adc
inc
adc
jg
cmp
inc
adc
pop
dec
cmpsb
je
xor
stos
mov
push
inc
cld
fcoms
lods
xor
push
push
and
push
add
push
jecxz
orb
and
adc
push
cli
inc
mov
push
fnstsw
iret
push
push
inc
aam
push
ret
adc
xor
push
push
pusha
outsl
and
ret
call
std
or
pop
insb
push
adc
nop
call
loopne
dec
movb
pusha
lods
add
sub
arpl
dec
loope
lods
add
test
loop
dec
in
push
loope
or
loopne
cmc
sub
loop
out
orl
js
lods
or
aaa
jb
pop
cmp
xor
cmp
filds
incl
test
jo
jno
mov
pop
jo
xor
ljmp
adc
add
les
xchg
push
flds
bound
mov
sbb
jbe
nop
add
jle
push
fwait
dec
add
or
bound
ss
and
ljmp
subb
aaa
add
seta
push
daa
idiv
adc
insb
inc
inc
es
inc
enter
xchg
testb
test
add
bound
mov
adc
ja
aaa
pushf
fdivr
xchg
or
mov
inc
pop
add
adc
adc
push
sahf
add
repnz
imul
inc
adc
mov
cmp
xchg
jl
or
adc
cs
ljmp
add
cmp
sti
xor
lock
jl
cli
int3
mov
jno
sbb
pusha
add
pop
aaa
sbb
jg
inc
mov
daa
xor
pop
xor
push
call
push
pusha
mov
in
scas
push
or
test
es
push
sub
into
ss
popf
cld
adc
pop
xor
rcrb
or
and
and
add
rolb
jg
add
shrb
sub
and
lea
sub
leave
lock
jmp
inc
subb
cmpsb
lcall
lcall
test
call
mov
es
pusha
adc
and
pop
cmp
mov
sbb
mov
rcll
add
sub
jo
jp
lcall
pop
push
pop
add
sarl
movsb
popl
gs
inc
inc
bound
aam
inc
push
out
or
test
adc
xchg
push
push
fiadds
jmp
add
sbb
lock
dec
divl
add
xchg
fisubs
sbb
sbb
pushf
xor
push
add
cmpsb
push
out
loopne
inc
push
je
and
mov
add
xor
mov
jo
insl
lods
add
mov
sub
dec
adc
mov
sub
mov
pop
les
adc
mov
cmp
and
pop
xor
movsb
cmp
xor
add
hlt
cmp
nop
jp
dec
push
or
sub
fstl
pop
ljmp
inc
pop
push
pop
jo
add
sbb
xor
test
fmul
je
mov
sbb
adc
mov
nop
or
adc
add
push
inc
sbb
shlb
push
jg
inc
pop
inc
mov
insb
adc
or
dec
inc
dec
es
test
jo
loopne
mov
mov
jo
call
jo
aaa
or
mov
jle
xor
rol
mov
fiadds
push
push
pushf
fadds
mov
stos
test
push
and
shlb
mov
xchg
fcom
push
call
mov
lea
jb
mov
dec
inc
or
cld
jo
pop
add
dec
add
call
shrb
sub
mov
push
shlb
add
pop
xor
cld
cld
jbe
or
inc
pop
mov
dec
clc
mov
call
in
ss
stos
push
shrb
and
ljmp
call
xchg
repz
les
ficoms
xor
add
mov
cmp
cmp
adc
ljmp
hlt
outsl
push
sbb
mov
adc
test
sbb
xor
test
jp
sahf
cmp
sbb
inc
mov
clc
fidivrl
sti
push
sbbb
xor
add
add
dec
clc
xlat
call
lock
push
add
repnz
outsb
mov
and
push
inc
insb
lea
test
mov
cmp
xchg
stos
push
inc
inc
push
pop
in
add
fwait
clc
xchg
or
dec
fsubrs
jbe
shrb
pop
mov
lret
inc
add
inc
xor
push
ljmp
rolb
mov
pop
nop
inc
test
mov
lock
xchg
loop
mov
mov
lock
bound
ss
cmp
jae
inc
mov
add
inc
faddl
mov
jl
std
clc
cmp
pop
testl
pop
or
jae
sbb
jp
and
jo
adc
sbb
enter
mov
lock
incl
jno
js
lods
jo
mov
nop
inc
xor
mov
lock
pop
and
adc
hlt
jo
add
mov
and
pop
movb
data16
mov
addb
test
int3
jmp
call
insl
lods
push
loope
mov
inc
data16
add
hlt
add
cmp
and
ds
ljmp
imul
mov
jo
test
mov
cmpsb
dec
add
scas
pop
mov
in
dec
add
test
mov
sbb
and
inc
out
ja
mov
mov
mov
cmovnp
cld
add
hlt
mov
jo
adc
mov
mov
cmp
mov
sub
mov
rcll
mov
jo
add
xor
repz
or
dec
or
jne
in
inc
xchg
jb
fbld
outsl
push
mov
call
jge
inc
and
add
or
clc
ja
dec
or
dec
jne
mov
mov
xchg
jmp
mov
mov
add
mov
mov
sub
cld
lods
adc
shr
jg
add
hlt
cmpsb
testl
pop
sub
mov
es
jmp
andl
aaa
push
inc
orb
pop
add
inc
or
pusha
add
rcrb
jne
ljmp
test
push
sbb
jg
sbb
ret
sub
add
jl
out
je
jno
ds
rolb
insb
loope
xchg
add
hlt
xor
or
push
mov
fistps
or
mov
test
ds
mov
inc
popa
stos
add
xor
mov
add
mov
dec
cmp
loopne
and
pop
cmpsb
ret
push
sahf
jo
aaa
or
hlt
adc
cmpsb
call
mov
cwtl
and
or
jae
sub
jo
lods
idiv
cli
cmpsb
mov
jbe
xchg
ret
mov
movsb
aas
sub
decl
jb
inc
add
add
ss
xorl
xor
mov
es
scas
mov
add
cmpsl
and
jl
mov
adc
les
lcall
push
lock
add
xor
dec
data16
inc
jo
push
pusha
sbb
cld
push
or
xor
jmp
dec
inc
add
pusha
dec
push
xchg
or
push
mov
adc
mov
outsl
outsb
sbb
cld
mov
add
and
mov
sbb
jecxz
push
mov
or
or
ret
add
mov
mov
push
aad
test
add
sbb
mov
test
jmp
les
ss
test
icebp
adc
fsubs
mov
stos
mov
addr16
or
jnp
enter
sahf
dec
outsl
rorb
push
mov
push
add
addb
pop
push
jb
dec
sahf
pop
dec
or
leave
je
lods
push
test
mov
clc
or
push
sub
add
pop
lods
dec
js
mov
pop
mov
mov
xchg
not
fcoms
add
jnp
lcall
shlb
and
subb
push
push
mov
lods
call
inc
divb
movl
push
test
pop
in
mov
stos
mov
ja
or
call
or
mov
adc
push
and
fcomi
push
enter
cltd
jbe
aam
hlt
call
clc
add
hlt
lds
lret
pusha
xor
or
push
xor
jne
inc
lock
xchg
dec
test
mov
test
insb
test
xor
and
or
data16
cwtl
outsb
lcall
xorb
decl
lret
or
mov
add
adc
subb
jge
mov
bound
mov
add
push
push
and
xor
jo
xchg
push
mov
push
sbb
outsb
data16
dec
or
mov
andb
adc
jbe
fwait
cbtw
inc
adc
inc
jl
rorb
lods
adc
xor
dec
and
push
bound
lock
or
mov
popf
and
jg
aam
in
cmp
or
cmp
push
cmc
mov
shrb
iret
jmp
test
movsb
xor
sub
inc
xor
or
cmp
testl
lods
xchg
call
scas
inc
sub
cwtl
pop
mull
or
inc
sub
push
clc
in
addr16
cmp
inc
mov
je
add
sbb
and
inc
jecxz
pushf
out
cwtl
cmp
add
sub
rol
adc
dec
jmp
sub
rorb
scas
arpl
mov
sub
xchg
lcall
dec
rol
addl
shlb
inc
lds
push
mov
push
mov
js
or
in
out
shll
js
les
in
mov
mov
jle
lea
mov
movzbl
pop
dec
pop
pop
loopne
xchg
jp
loop
clc
push
and
ret
inc
mov
roll
rorb
add
jbe
pop
sub
add
test
add
sub
sbb
rcrl
inc
sahf
mov
enter
add
rcrb
add
scas
jb
xchg
and
leave
cmp
add
add
or
mov
xor
add
imul
ret
and
or
roll
addl
fmull
jb
inc
shrb
dec
sbb
popf
adcb
loop
incl
sbb
adc
mov
inc
mov
loope
sbb
out
push
imul
mov
push
xchg
push
sahf
push
push
add
sub
fwait
adc
jmp
cmpl
pop
clc
inc
pop
insb
jl
aas
mov
call
loopne
jp
adc
mov
or
cld
jl
push
push
data16
fs
loopne
adc
dec
push
push
inc
xor
call
add
mull
scas
adc
or
add
orl
push
cmpb
pop
outsb
ljmp
ljmp
pusha
add
pop
pusha
in
pop
imul
inc
dec
mov
push
push
sarl
sbb
push
jg
nop
pop
pop
sbb
sahf
cmpsb
imul
aad
pop
pop
adc
push
inc
dec
adc
jnp
pop
mov
adc
loopne
lock
filds
loope
jnp
out
sti
jp
pusha
push
dec
cwtl
fxtract
adc
and
cmp
outsl
out
pushf
push
test
pop
fsubl
popa
pop
stos
lock
loope
stos
mov
sti
sti
mov
adc
or
or
stos
hlt
loope
jnp
fcmovu
pop
mov
in
xlat
stos
in
pop
idivb
rcl
stos
mov
jnp
int3
int3
cmpsb
test
rcl
scas
std
cltd
ja
rcl
loop
test
sub
frstor
pop
fists
mov
shlb
imul
sbb
shlb
shl
cli
adc
push
push
ja
inc
and
clc
jp
and
clc
incl
pusha
stos
push
pusha
push
sub
add
and
lods
cmpsb
jmp
loopne
pop
push
pop
mov
pop
aaa
shrl
ss
xchg
mov
sbb
lcall
cmc
jbe
add
loopne
mov
or
add
jg
mov
fsubs
test
xor
inc
popa
or
addr16
add
jmp
jae
mov
mov
mov
sub
pop
mov
jne
jb
lea
lock
pop
xchg
call
lret
mov
adc
xor
pop
sub
or
inc
or
stos
inc
jp
sbb
in
aam
adc
fdivs
call
sub
cmp
fidivrs
icebp
jb
lea
lret
loopne
or
outsl
das
nop
mov
pop
sbb
sbb
xor
sbb
or
and
inc
and
add
add
orl
or
ret
cmp
imul
jmp
fs
repz
test
mov
inc
adc
inc
xchg
push
mov
leave
loopne
jbe
mov
add
add
loopne
sub
and
or
jmp
mov
sbb
sahf
pop
xchg
push
pusha
add
sub
mov
and
int3
clc
lods
fisttpll
divl
mov
js
pusha
ficoml
call
sub
jo
push
jbe
inc
fbld
or
jbe
mov
ficomps
cmp
adc
ja
pop
add
xor
add
push
push
cmp
xchg
add
sbb
mov
xor
insb
jg
add
mov
add
jl
pushf
push
add
cmp
out
jp
fisttps
or
dec
or
inc
pushl
enter
test
mov
xor
add
incl
cmp
xor
scas
data16
or
or
jmp
outsl
ljmp
cld
inc
add
push
and
and
dec
xchg
and
fcoml
add
xor
ret
testl
lret
xchg
jo
mov
fcomp
inc
faddl
cmp
push
and
push
adc
repz
xlat
fwait
or
sub
sti
mov
int
cltd
xchg
mov
loope
add
add
sub
dec
imul
popa
call
inc
fsubrl
or
fcomi
nopl
cmp
sbb
adc
cmp
loope
add
add
test
clc
stos
mov
sbb
xor
jae
in
sub
hlt
rcrl
xchg
mov
call
rorb
test
sahf
add
and
dec
incb
inc
cmp
cmp
mov
jne
adc
dec
add
inc
adc
jl
inc
cmpb
icebp
sub
enter
das
and
notb
mov
ja
cmp
mov
enter
mov
mov
aam
test
xchg
mov
dec
inc
xchg
inc
jnp
rol
ja
nop
andl
enter
ret
js
add
pop
jo
adc
shl
sub
inc
decl
pop
sbb
lods
or
mov
cmp
add
daa
xor
pop
add
cmp
decl
pop
and
dec
int3
call
andb
adc
scas
push
or
adc
outsl
inc
test
push
pop
cmp
jbe
xchg
lea
adc
and
into
jb
add
loop
es
push
and
cld
pop
pusha
and
cmp
data16
pop
push
push
inc
xor
mov
add
scas
insb
cmpl
adc
mov
xor
cmp
and
outsb
lcall
pop
add
gs
in
or
or
cld
adc
clc
fisttps
dec
and
push
push
sbb
xor
add
inc
inc
cwtl
shlb
outsb
aaa
outsb
mov
jo
adc
call
mov
jle
mov
subb
sub
push
inc
push
push
xchg
mov
sar
stos
add
jo
push
fsubl
xchg
xor
mov
out
lock
cwtl
mov
cld
adc
or
add
test
insb
jg
lea
scas
push
mov
or
das
js
rorb
stos
pop
cmp
push
pop
jo
lods
mov
xor
fs
in
mov
pop
dec
addb
cmpsb
test
andl
and
mov
mov
leave
lea
lea
incb
mov
push
adcl
or
or
inc
mov
jbe
call
je
add
in
in
bound
push
inc
lock
std
lock
test
or
mov
pop
stc
mov
mov
xor
sbb
push
push
xor
incl
jmp
icebp
add
add
call
pop
push
pusha
adc
cmp
call
inc
xor
lock
jmp
mov
or
lock
call
add
sbb
xor
inc
into
out
sub
cmpb
mov
sti
int
dec
mov
jns
or
add
test
add
fists
and
call
push
inc
test
je
loop
ljmp
push
mov
mov
push
pop
xchg
add
mov
repz
fs
sbbb
add
cmp
push
hlt
les
push
lock
pop
push
loopne
in
push
bound
add
jae
push
mov
add
mov
insl
push
inc
mov
xor
cmp
sbb
inc
stos
in
cld
push
push
cli
mov
add
dec
jne
mov
cmpl
test
push
lret
mov
xor
dec
ss
cmp
lea
cmp
inc
jno
mov
mov
dec
mov
loopne
xchg
fcomp
jne
pop
pop
mov
push
lods
push
mov
and
sti
fucomi
jb
inc
and
sub
add
sub
mov
pop
call
test
ljmp
call
sbb
lea
add
push
mov
xchg
cli
sub
add
jae
bound
and
mov
decb
mov
add
add
and
jg
rorl
mov
dec
scas
and
shl
fisubrl
sub
push
scas
mov
mov
and
sub
xor
jne
add
pop
or
lea
sbb
adc
add
xor
adc
mov
fsubs
sub
cmp
cmp
xor
adc
mov
mov
stos
shl
jecxz
mov
inc
mov
or
scas
sbb
pop
cmc
stos
hlt
xor
ds
add
scas
lds
js
mov
push
cmp
js
pop
sahf
add
scas
lahf
adc
imulb
jo
stos
or
xor
mov
mov
and
mov
and
push
xor
or
test
lret
dec
push
xor
mov
mov
ljmp
jp
jae
lea
cmpb
incb
mov
mov
inc
jo
mov
or
fisttpll
dec
xlat
mov
inc
ret
cs
jl
adc
xchg
les
ds
or
push
enter
aaa
add
jle
cmpb
imul
lret
and
outsb
adc
sbb
in
adc
pop
clc
jg
cltd
idiv
nop
xchg
rcrb
xor
test
cmpsl
sub
add
xchg
icebp
subb
sub
cmp
jl
sbb
and
jns
gs
or
sub
scas
je
mov
icebp
pmaxsw
xor
mov
outsl
adc
bound
test
xchg
add
push
inc
insb
inc
push
inc
dec
adc
lods
and
stos
lret
roll
mov
ss
add
mov
addl
addb
insl
adc
ja
adc
and
or
pop
call
lcall
dec
fistl
leave
mov
vcmpps
mov
loop
push
sub
sbbb
sbb
adc
fdiv
add
add
pop
xchg
ljmp
fwait
nop
add
lock
mov
je
xchg
xchg
push
add
stc
and
push
mov
mov
mov
fildll
pushf
shr
cmpsl
ds
dec
jnp
sbb
insb
xchg
push
add
or
dec
fdivl
mov
inc
loopne
loop
popf
sub
dec
cmp
xchg
mov
ss
insb
adc
push
adcl
daa
mov
mov
adc
mov
jb
add
add
xchg
fcomp
shl
or
int3
outsl
add
or
push
push
mov
push
push
int3
insb
push
dec
rcll
adc
std
xchg
push
or
push
xchg
or
dec
loop
mov
addb
addb
or
push
aam
add
shl
lcallw
adc
inc
test
and
jbe
andb
andb
adc
loopne
jle
jo
enter
mov
push
or
add
sub
mov
loopne
jo
sbb
inc
add
lret
jae
data16
jle
mov
jno
jl
push
std
cwtl
loopne
add
sbbb
sti
sbbb
imul
fsubrp
iret
add
es
dec
test
lret
in
pop
clc
sub
hlt
je
add
and
test
xor
sahf
mov
movsb
js
inc
pop
je
jb
add
bound
xchg
fildl
cli
cmpsb
cmp
mov
pop
sbbb
shrb
jb
lock
xor
adc
mov
inc
test
hlt
nop/reserved
or
aaa
and
mov
or
cmpsl
push
add
add
cmp
test
mov
xchg
je
xchg
or
jb
call
fs
xchg
push
pusha
sub
pop
jno
rolb
pop
data16
std
adc
and
sbb
xchg
jp
nop
xor
out
clc
xchg
pushf
xor
push
add
divb
jns
mov
aad
push
add
adc
or
in
sub
xadd
shlb
sbb
and
inc
out
add
ret
pop
pop
pop
mov
lahf
xor
mov
hlt
or
pop
add
repnz
push
dec
ss
jle
lcall
inc
je
or
rorb
lock
xor
push
js
orb
add
inc
sbb
cli
cmc
nop
dec
sub
inc
in
push
and
cltd
mov
cmpsl
push
xchg
adc
pop
sub
push
aas
rorl
add
xchg
and
clc
mov
cmpsb
dec
std
add
mov
adc
adc
data16
xchg
add
sub
aaa
pop
in
add
or
adc
std
fld
xchg
and
or
push
mov
mov
gs
incl
fsubs
fistps
mov
adc
pop
adc
cmpb
inc
movsb
dec
nop
in
add
shll
jg
rclb
dec
or
inc
fimuls
mov
es
stos
sar
adc
shr
nop
subb
cs
arpl
shl
aaa
movl
or
and
and
xor
sbb
mov
inc
fs
filds
adc
dec
inc
add
sahf
movsb
push
sbb
push
fs
cld
fld
mov
mov
call
push
sub
sbb
dec
clc
ljmp
lea
rolb
jne
dec
es
add
cmp
sub
jp
clc
in
push
mov
and
in
imul
pop
cmp
mov
add
mov
sub
xchg
xor
adc
jbe
hlt
cmp
sbb
inc
std
xor
lea
pusha
push
jb
xchg
inc
ret
sub
add
testb
rol
inc
movsb
jnp
rol
das
or
adc
fiaddl
adc
imulb
lea
out
mov
pushf
pusha
xor
int
pusha
xor
pop
xor
ret
adc
ffree
inc
and
lods
and
or
jmp
xor
add
cmp
push
and
jo
pop
lcall
jmp
sub
repnz
or
mov
pop
xorl
cmc
mov
sub
and
jmp
and
cmp
jne
pusha
enter
mov
pop
cs
or
jg
mov
add
lea
loope
inc
adc
test
add
sbb
mov
clc
aad
pop
add
mov
jbe
out
and
push
call
scas
inc
xchg
rorl
frstor
cmp
pop
es
mull
je
push
movsl
mov
pusha
jb
mov
and
enter
movsl
or
sub
popa
and
push
cmp
push
into
lea
sbb
xor
loopne
sbb
mov
adc
adc
shr
dec
add
loop
add
fdivrp
insb
pusha
sbb
push
std
outsl
cs
add
pusha
sub
cmp
loopne
aas
push
insb
mov
aam
add
int3
add
ds
adc
inc
loop
aaa
movsb
in
enter
and
adc
mov
test
fs
loopne
pusha
fwait
or
jb
popa
pop
lds
int
leave
ret
loope
adc
fcoml
push
xor
add
mov
hlt
je
push
addl
test
push
jl
push
loope
fstpl
sub
jmp
hlt
aaa
cmpsb
jno
test
xchg
loopnew
je
adc
add
testl
add
xor
bound
ja
add
cmp
cmp
int3
lods
add
es
add
ss
in
dec
loopne
aaa
push
ss
popw
pusha
lods
clc
loopne
aas
push
outsb
add
sub
pushl
mov
fcoml
xchg
inc
push
inc
shrb
nop
nop
push
and
mov
fcoms
ss
pop
jb
pop
dec
loope
push
add
loope
push
call
push
sub
or
cli
dec
loop
add
mov
sbb
push
push
sar
call
sbb
mov
loopne
nop
pop
sub
cmp
or
and
movb
cmpsb
mov
inc
add
insb
pop
push
fs
les
sbb
xchg
inc
sbb
dec
adc
cmp
adc
or
pusha
cmp
and
loope
add
pusha
adc
sub
loopne
sbb
xchg
lods
data16
in
push
shrb
and
push
add
dec
stos
or
rep
xor
fimull
or
mov
push
aam
shl
dec
xchg
lock
push
inc
in
mov
jo
or
xor
bound
adc
add
and
inc
add
mov
mov
movsl
inc
push
dec
sub
mov
out
adc
mov
mov
mov
cmp
hlt
mov
sbb
jp
sub
fnstsw
add
icebp
dec
idivb
mov
test
or
outsl
cmpsb
push
add
push
inc
enter
cmp
adc
ret
sbb
sbb
adc
daa
push
mov
test
cmpsl
mov
pop
dec
mov
jl
xor
xchg
jb
rcrl
xor
int3
mov
sbb
int
jmp
jb
mov
popa
loopne
jp
or
or
and
jo
add
fisttpl
adc
mov
stos
mov
add
adc
lock
push
icebp
dec
mov
mov
sbb
mov
sub
inc
push
adc
xchg
jb
faddl
lcall
stos
mov
mov
je
je
loopne
rolb
xor
je
adc
sbb
mov
push
clc
push
aaa
dec
aad
pushaw
jnp
add
stos
and
push
call
or
pushl
push
out
add
aas
jo
in
shrb
push
sarb
pop
dec
pop
adc
and
sbb
test
mov
mov
push
mov
cld
jno
lods
xchg
mov
jae
mov
and
fwait
test
xor
mov
call
pusha
mov
xchg
and
popa
ljmp
stos
sub
inc
std
jg
jno
orl
jo
decl
aaa
or
addb
jl
cli
pop
fs
call
repz
mov
inc
ret
adcb
fidivl
cmpsb
pop
add
cld
cs
jo
xchg
mov
and
xor
jmp
scas
xor
jo
hlt
jno
push
cmp
or
sbb
inc
mov
cmp
cmpsb
std
ljmp
mov
push
mov
adc
push
mov
add
mov
or
or
xor
pop
or
add
jmp
and
scas
call
sti
and
in
and
jno
lods
jno
sahf
ljmp
push
test
or
cmp
das
cmp
sti
xor
xor
xor
cmp
insb
enter
bound
dec
cmp
je
add
shlb
mov
sahf
push
xor
call
push
pop
adc
daa
add
dec
rcr
sbb
sbb
push
pop
add
add
inc
push
pop
cmc
rolb
popf
sub
inc
adcb
mov
adc
or
or
sahf
adc
in
lods
add
mov
call
divb
add
xchg
rclb
sub
ljmp
cld
adc
lsl
adc
in
push
je
adc
les
call
rcll
loop
or
je
sbb
and
aam
mov
mov
add
xor
sub
push
std
fbstp
aaa
cld
sub
mov
add
pop
nop
mov
nop
sbb
inc
adcb
inc
xor
hlt
shlb
add
mov
xor
inc
dec
lock
icebp
push
xor
or
fcomi
dec
ss
clc
xchg
int3
lock
push
stos
ds
jge
xchg
xor
xor
jno
jne
or
test
mov
mov
lea
xor
inc
ljmp
sarb
xor
add
loop
jl
xchg
add
lock
or
or
shlb
add
or
sub
fdiv
push
jp
test
fsubs
in
push
push
stos
adc
push
xchg
and
jo
xchg
mov
xor
push
inc
subb
sub
in
cltd
xor
dec
imul
pop
add
ljmp
pop
setne
and
cmpsb
es
xchg
sarl
hlt
pop
push
in
mov
ss
push
call
addb
add
out
js
cmp
je
xchg
pop
repnz
xlat
push
mov
lock
int
lock
or
and
mov
pop
push
pop
and
xchg
dec
popa
jo
or
cmp
ljmp
cmp
ja
and
jg
jle
mov
addl
dec
or
test
adc
add
popa
sub
rcll
adc
popa
inc
sub
push
mov
lock
dec
repnz
xor
xorb
jns
insl
fnsave
lods
adc
stos
add
pop
mov
add
mov
adc
add
test
pushf
pop
cmp
cmp
adc
or
icebp
inc
and
cmp
pusha
mov
fstl
mov
fcmove
lock
enter
sbb
in
push
ret
sub
inc
add
add
jbe
push
les
pop
mov
lds
jle
les
hlt
scas
daa
and
mov
js
popf
inc
xlat
mov
mov
lods
or
call
jo
sub
jb
jmp
mov
inc
sub
or
dec
xor
test
call
jb
or
mov
push
inc
mov
xor
sti
inc
mov
clc
adc
lret
xor
orb
movsb
sub
nop
dec
mov
sub
out
mov
hlt
hlt
lods
adc
inc
mov
xchg
bound
jb
mov
or
xchg
mov
push
pop
iret
sub
fisttps
and
mov
hlt
mov
push
std
in
lret
jp
pop
mov
push
xor
mov
ljmp
shl
inc
jb
fcoml
sbb
jo
xchg
pusha
jecxz
xchg
or
lcall
and
in
or
es
lock
sarb
call
daa
jo
mov
and
in
or
clc
sbb
mov
lock
cld
scas
test
xchg
lea
mov
lock
jne
inc
sahf
idivl
mov
add
adc
cmove
xor
cltd
pop
mov
or
add
add
push
shl
add
add
out
addb
xor
jne
ljmp
adc
sub
call
lock
add
into
and
addb
cmp
jg
mov
pop
sbb
call
xor
sti
push
push
lock
jno
test
dec
add
add
std
mov
push
jl
cld
es
ret
adc
ret
loop
cmp
and
add
dec
pop
hlt
ret
rcrb
push
test
push
lods
lods
ficompl
adc
add
je
or
push
push
xor
sub
sbb
movb
sub
sbb
xchg
nop
jo
je
dec
xor
or
add
inc
pop
loop
mov
sub
or
jo
stos
inc
mov
add
jl
add
es
pop
push
adc
cmp
push
ljmp
mov
mov
pop
std
add
dec
popa
sbb
push
stos
lcall
sub
popf
jo
mov
xlat
sub
mov
push
loopne
jo
pusha
mov
mov
xchg
adc
and
xor
jo
lret
lret
adcb
or
jbe
sti
add
cltd
test
mov
test
and
adc
sub
test
or
or
sahf
enter
adc
push
int
push
clc
cmpsb
insl
and
inc
sub
lea
xchg
les
das
inc
mov
imull
popa
mov
dec
and
sub
push
sub
subb
sub
sarl
mov
cmpb
outsl
pop
push
add
mov
inc
add
adc
xorb
add
addb
pop
inc
xor
fs
jne
rolb
sub
push
pushf
les
and
push
in
rcrb
mov
dec
fs
aad
jb
jle
cmp
cmp
adc
push
jne
test
test
fidivl
and
push
sar
filds
int3
push
mov
scas
roll
movl
rclb
push
or
jne
jp
cmpsl
push
subb
mov
addr16
loop
xchg
and
sub
adc
inc
push
push
push
cld
sbb
lds
loope
shll
push
enter
dec
dec
cmovb
and
push
andb
or
cmp
push
call
out
jo
inc
xor
into
sbb
pushf
in
fildll
mov
pop
sti
sldt
icebp
xchg
mov
add
push
jle
push
push
cld
xor
jne
clc
or
push
xchg
push
movsl
rcll
sbb
pop
imul
add
dec
inc
and
jo
xor
icebp
js
mov
rolb
ret
pop
adc
test
shrl
fs
in
test
imulb
lea
inc
cmp
or
jmp
mov
rclb
lahf
mov
test
adc
nop
mov
pushf
cmp
adcb
or
push
rcl
push
or
sub
fsubrl
lock
in
inc
cmp
decl
xchg
push
out
cmp
ret
dec
gs
or
dec
dec
sarb
mov
jno
mov
and
add
add
inc
mov
push
mov
mov
jbe
shlb
ret
jg
jecxz
leave
cmp
pop
and
jg
stos
xchg
mov
inc
stos
xor
rolb
or
roll
dec
add
call
push
mov
nop
add
and
imul
add
test
push
and
jne
sarl
and
cmp
pusha
daa
push
test
push
popf
bound
jg
loope
int
or
add
jle
shlb
jp
adc
ret
and
sub
sarb
adc
add
loope
rol
lock
push
dec
xor
mov
test
shr
ljmp
popa
or
mov
in
add
outsl
jbe
loopne
jno
xchg
or
xchg
rcll
or
xchg
or
push
clc
mov
jbe
pop
loopne
pusha
and
dec
jmp
mov
mull
inc
orb
sub
sub
adc
aam
mov
sbb
pop
addb
aas
adc
adc
xor
push
rcrb
pusha
jge
cli
call
lcall
push
test
mov
pushf
jp
imul
mov
cld
push
inc
or
add
xchg
or
in
clc
loop
out
inc
sbb
loopne
jecxz
sbb
sbb
loopne
cld
loopne
or
stos
add
xor
push
pusha
add
out
mov
cmp
cmpl
cmp
loopne
add
pop
xor
scas
js
xor
jne
pusha
add
add
jg
cwtl
test
call
orb
loopne
mov
jmp
xchg
pop
mov
psubsb
adc
inc
popa
lcall
xchg
and
subl
push
outsb
jae
addps
mov
sbb
mov
std
loopne
call
ljmp
loop
adc
mov
jge
test
dec
into
pusha
adc
or
add
mov
idivb
xorl
ret
jne
push
cmp
scas
js
xorb
jnp
mov
repnz
xchg
cmpsb
add
ret
dec
sub
enter
mov
fnstenv
rolb
pop
add
pop
adc
sub
das
sbb
lods
jno
pusha
sbb
outsb
cld
mov
xor
call
loop
push
js
loopne
jb
pop
lock
pusha
lods
loopne
lea
mov
scas
mov
fldenv
nop
xor
clc
adc
bound
call
add
jo
cmpsl
sbbl
cld
int
int
jnp
mov
lea
push
loopne
inc
sub
xor
inc
and
loopne
out
in
pop
idiv
decl
or
cmpsb
adc
mov
out
xchg
xorb
dec
jecxz
mov
int3
pop
and
xchg
adc
inc
loope
dec
xor
ret
clc
adc
stos
test
sub
loopne
loopne
loopne
push
inc
lcall
enter
mov
xor
test
iret
pushf
sub
mov
xor
pop
shlb
cmp
adc
fwait
adc
mov
adc
nop
push
rolb
cli
xor
inc
adc
and
add
mov
add
loope
mov
fbstp
fcom
sbb
dec
or
and
mov
adc
and
xchg
mov
adc
adc
lods
outsl
dec
cmpsl
inc
or
and
loope
jo
mov
je
mov
std
and
push
push
push
scas
jmp
pusha
sbb
test
mov
popa
pop
push
dec
mov
out
nop
jp
xor
pop
dec
cmp
pop
decl
lea
mov
orl
bound
inc
lock
pusha
lods
cs
xor
ja
clc
jo
cmpsb
xor
jle
xchg
jo
fisttpl
push
scas
adc
inc
es
and
popa
lods
xorb
push
rclb
dec
cmovo
jae
add
jmp
in
data16
dec
mov
ret
jmp
inc
and
or
call
or
lods
jmp
xor
dec
sbb
cmp
or
cmpsb
mov
sub
mov
xor
add
or
or
push
jnp
mov
xor
lock
je
gs
or
dec
shrb
int3
nop
test
push
xchg
jl
es
add
notl
loop
mov
add
pop
test
push
mov
lock
pop
stos
ljmp
or
cmp
ret
mov
push
lea
sti
mov
mov
adc
mov
sbb
stos
sbb
cld
jne
mov
rclb
lcall
sbb
negb
jo
pop
ss
repnz
add
testb
push
cli
or
cli
add
jne
mov
mov
adc
popf
jo
std
jno
hlt
sar
or
pop
mov
cld
jb
jo
jbe
and
add
imulb
sarb
rcrb
add
scas
add
cs
addl
xor
out
fisubrl
add
lods
sar
addl
jo
rorb
sbb
xor
inc
jl
add
push
idivb
inc
cmp
sbb
and
ljmp
add
add
sbb
push
inc
test
incb
push
js
jae
and
push
adc
aam
dec
cmp
ljmp
std
inc
shlb
sbbb
jg
aas
imul
push
add
adc
scas
push
mov
push
xchg
arpl
push
into
leave
add
clc
dec
or
das
xchg
inc
repnz
pushf
xor
subb
aas
cmp
int3
mov
push
push
add
int3
add
stos
je
mov
cld
mov
push
lock
dec
sbb
adc
bound
clc
dec
mov
sub
loope
and
pop
jg
shrb
push
cmp
cmpsb
aaa
jb
cmp
xorb
cvttps2pi
incl
stos
int3
sbb
mov
dec
cmp
mov
lea
mov
mov
xorb
dec
sbb
jl
sbb
sbb
test
jmp
mov
test
sbb
xor
mov
mov
aaa
bound
les
xchg
add
mov
push
stc
aaa
jp
orb
mov
mov
test
sbb
push
fistpl
lock
cli
lock
jno
dec
adc
mov
add
jbe
xor
xchg
cmpsb
mov
and
push
inc
pop
add
jno
mov
and
jo
jns
je
cmp
aad
cli
sbb
xor
xor
or
cmpsb
ss
clc
adc
inc
push
xor
pop
or
add
or
icebp
aaa
call
fwait
mov
repnz
xchg
ljmp
mov
es
lds
testb
mov
divl
pushf
sbb
dec
push
stos
inc
int3
cwtl
mov
loop
or
add
lock
mov
lea
outsb
mov
cmpl
mov
jns
and
add
cs
jno
test
cli
cmp
loopne
cmp
xor
xor
clc
outsb
pop
data16
aas
cmp
dec
inc
daa
popa
scas
outsb
adc
and
cwtl
jge
push
jl
outsb
and
push
les
inc
add
mov
mov
mov
pop
mov
shrb
adc
mov
jne
cltd
add
jno
rol
fwait
add
mov
insb
mov
inc
mov
inc
and
loopne
es
add
aam
aad
dec
mov
push
repnz
or
sar
mov
mov
adc
outsl
jmp
xchg
push
push
test
test
lret
aas
jl
and
jne
push
std
add
enter
loopne
xor
jno
test
xchg
and
je
add
mov
push
nop
xchg
aam
xchg
in
cs
sbb
add
jno
test
cmp
lea
pop
rclb
or
pop
add
icebp
or
xchg
or
sbb
roll
lea
jo
dec
mov
xor
add
or
lods
in
mov
and
je
xor
in
adc
pop
loopne
mov
hlt
adc
add
insb
xorl
movsl
mov
lret
lock
mov
sbb
cli
aaa
test
repnz
jae
sbb
in
mov
jp
lea
in
fs
es
sub
hlt
push
outsl
mov
jl
imul
xor
xor
jno
adc
or
xchg
jno
divl
mov
in
ja
xor
pop
xor
cwtl
jo
sbb
jbe
loopne
xor
inc
pusha
fisttpl
mov
cli
ljmp
xchg
lea
jb
or
pop
pop
inc
mov
std
lcall
jno
dec
call
inc
mov
inc
mov
ret
mov
lods
adc
push
sub
outsb
adc
push
cmpsb
pop
and
push
mov
pusha
rorb
loope
xchg
xor
push
cwtl
call
stc
push
jmp
fcomps
pop
sbb
cmp
jnp
mov
sub
or
and
push
rorb
adc
mov
cmp
stos
mov
sub
add
dec
ja
clc
cmpsb
mov
jle
aas
push
or
cmp
mov
add
je
or
loope
add
sub
or
cs
inc
mov
or
add
sbb
jae
mov
enter
gs
pop
pop
imul
enter
pop
adc
daa
pushf
inc
and
lret
mov
sub
enter
cmp
pop
adc
and
sarb
sub
lea
sbb
xchg
push
movsb
and
fsub
or
or
pop
sbb
add
pusha
dec
or
push
sub
repz
adc
xor
dec
mov
out
jae
fwait
notl
jl
loop
and
shll
mov
or
sbb
mov
push
mov
and
adc
sub
addb
fists
add
lock
mov
jge
adc
add
pop
xchg
decb
push
in
das
push
test
call
pop
loope
mov
adc
mov
gs
call
call
adc
cmpb
fsubr
or
add
pop
enter
or
fistl
xorl
xchg
or
leave
inc
or
push
mov
dec
in
cmp
fwait
test
inc
loop
jb
lcall
sub
dec
nop
jge
push
xchg
shlb
loop
jae
cli
add
add
shrl
addb
movsb
loope
loopne
loopne
andb
xchg
and
rcrl
and
in
mov
clc
xorb
outsl
add
cs
je
shrb
mov
adc
add
lea
mov
and
outsb
mov
mov
les
outsl
mov
inc
inc
mov
inc
xor
into
push
andl
push
lret
or
xor
test
je
ljmp
loop
and
adc
push
pop
jb
adc
inc
push
cli
nop
nop
rcrb
rcrb
push
and
ficoms
incb
andb
add
mov
jl
cwtl
rcrl
pushf
je
fistps
jle
sub
shrb
rorb
xchg
inc
adc
pop
enter
add
and
add
aam
sbb
mov
call
adc
ret
not
lods
push
aas
fstpt
cs
push
xor
lret
jl
pushf
jb
jecxz
fistpl
sbb
shrl
lcall
xorb
cmp
movaps
xchg
ret
push
sub
jo
shlb
sbb
call
sub
sub
sub
repnz
call
add
xor
xor
add
rcll
sub
gs
sub
and
jle
or
cmp
push
cmpsb
add
xor
frstor
cmp
je
mov
jecxz
mov
out
add
outsb
clc
stos
sbb
cmc
cmpl
dec
dec
mov
add
mov
fwait
sub
mov
adc
fcoml
adc
jmp
loopne
sbb
loopne
pop
mov
inc
or
bound
mov
enterw
inc
jle
decl
inc
xor
cmpsb
sti
loopne
fucomip
stos
add
and
insb
or
call
or
call
call
pop
sbb
loope
add
pusha
or
dec
adc
add
jbe
nop
inc
ljmp
pusha
or
out
ds
scas
mov
clc
push
xor
pop
pop
inc
cltd
mov
mov
cmp
dec
or
aas
data16
mov
adc
stos
fs
push
jecxz
fsubrl
push
add
icebp
addr16
in
loop
and
inc
pop
or
ljmp
mov
add
mov
ret
mov
add
push
and
loopne
and
pop
pop
pop
daa
outsb
jp
xchg
add
enter
sub
adc
je
jg
cmpsb
jbe
cmp
or
mov
sbb
add
or
and
sbbb
pop
mov
jmp
add
dec
push
and
and
mov
rclb
rclb
push
mov
int3
cmc
fistl
pop
sub
shlb
fdivs
cs
mov
cltd
and
inc
mov
push
jnp
jne
mov
inc
cwtl
inc
leave
adc
and
lret
sbb
and
mov
dec
mov
dec
inc
add
aaa
out
cmpb
cmp
js
lea
aaa
xchg
out
ficoml
sahf
push
call
loopne
sub
or
movsb
mov
cwtl
jp
add
xchg
add
ficompl
lcall
fsubrl
cwtl
mov
pop
enter
mov
push
mov
xchg
mov
push
movb
mov
pop
loope
mov
loopne
inc
scas
mov
hlt
or
push
sbb
jp
clc
pop
or
or
and
test
dec
in
popa
mov
mov
jbe
push
lods
inc
inc
pop
and
cld
loopne
mov
pop
in
lods
jmp
lods
lcall
popa
sub
inc
addr16
xchg
stos
loope
sub
ljmp
dec
fisubs
add
inc
jns
loopne
pop
call
frstor
push
aam
lock
cld
call
xchg
push
mov
xchg
cld
filds
xchg
push
ja
loopne
shr
fwait
out
aam
fisubrs
mov
les
add
or
lea
xor
cld
data16
push
scas
sub
adc
test
ret
in
test
adc
stos
push
pop
add
mov
jbe
mov
jge
pop
pusha
jno
daa
decb
inc
dec
jle
push
xor
dec
pop
call
test
inc
mov
xor
mov
pop
mov
push
cli
mov
or
out
pusha
add
gs
mov
dec
and
stc
sbbb
mov
sub
inc
pop
or
inc
ret
add
mov
inc
outsb
leave
ret
clc
add
pusha
sub
adc
int
cmp
es
fldenv
pop
rcr
rcl
xorl
jb
cmpsb
pop
mov
mov
rolb
fsubrl
jo
pushl
or
push
call
cld
aas
mov
sbb
jno
stos
pop
mov
add
push
mov
in
xor
lock
and
incb
je
add
sub
js
jo
test
decl
repnz
mov
mov
subb
icebp
sub
pop
inc
jp
ret
or
dec
or
add
pop
and
lret
adc
clc
cmp
ja
push
je
cmpb
imul
pop
notl
cmp
or
mov
push
inc
pop
das
jl
lock
mov
mov
stos
pop
pop
leave
mov
jecxz
xorl
and
dec
jmp
add
mov
jbe
sub
add
out
push
push
jg
inc
mov
movsl
xor
cld
bound
mov
jg
or
adcb
or
pushl
andb
xor
inc
cmpsl
icebp
add
test
fildl
bound
xor
xchg
mov
test
test
mov
faddl
or
test
icebp
xor
push
xor
pop
mov
xor
inc
push
or
bound
js
jae
jo
mov
shlb
cmp
out
aam
xor
iret
jo
out
lods
cmp
or
xchg
out
add
jne
xchg
bound
mov
adc
and
arpl
jge
jl
and
std
call
mov
pusha
adc
cmp
or
fwait
dec
add
mov
push
inc
stos
loopne
pop
fdivl
enter
insl
mov
adc
repnz
frstor
mov
pop
insl
mov
add
push
fimull
es
fmuls
call
aam
dec
rolb
adc
push
adc
mov
call
jecxz
lock
xor
mov
mov
fwait
or
add
adc
add
push
incb
dec
push
es
mov
or
out
je
push
in
andl
subb
jmp
in
sub
jmp
lret
mov
mov
ret
add
bound
inc
ljmp
mov
pop
mov
cmp
dec
inc
sub
adc
out
inc
pop
imul
imul
mov
xchg
push
add
add
mov
inc
decl
push
xor
jp
jo
notb
stc
adc
inc
jl
pop
hlt
inc
stos
adc
add
and
or
jb
or
mov
pushf
add
xor
pop
std
fisttpl
jmp
xchg
test
jo
push
xor
inc
pop
cli
mov
sub
inc
adc
xor
sub
js
push
or
jns
sbbb
add
sub
mov
repnz
ljmp
jp
sbb
mov
lock
jl
and
inc
lods
icebp
or
jl
jle
std
xor
adc
jl
call
xchg
mov
push
mov
scas
adc
jo
mov
push
sub
sub
rclb
enter
xor
ja
lock
ret
jle
movb
je
pusha
push
xor
add
or
inc
push
pop
lock
pop
sub
mov
push
andb
xor
and
adc
mov
sub
xchg
xor
cwtl
sub
shl
movsb
and
sbb
add
or
mov
cmp
mov
add
inc
and
sbb
add
xchg
imul
mov
test
push
xor
push
icebp
adc
add
mov
and
das
mov
stc
popa
std
mov
out
inc
add
js
jae
cmp
xor
ret
call
out
lea
rorb
or
rcr
decl
push
lods
xor
jno
or
xor
roll
xchg
cmp
adc
sbb
shrb
in
scas
in
data16
pushf
cmp
push
addb
mov
push
or
sbb
cmp
add
cmc
mov
inc
push
lock
mov
cmp
call
xor
aam
lods
xor
inc
ret
jg
aaa
ss
aas
dec
lods
jo
nop
cmp
mov
cmp
test
or
jo
xlat
cmp
out
dec
imul
jo
pop
and
out
xor
repz
lock
cmp
mov
je
icebp
mov
xchg
sar
xor
test
es
inc
push
pusha
add
push
pop
mov
add
icebp
mov
or
lock
test
js
push
sbb
and
lret
mov
idivb
icebp
fisttps
std
lock
xchg
xor
pop
mov
push
push
xor
test
mov
fbld
cltd
add
lea
inc
mov
pop
jae
sar
fdivrp
decl
cmp
mov
clc
mov
mov
daa
mov
call
or
and
sub
sub
mov
pop
sbb
add
add
out
push
lock
xor
cli
push
lock
adc
push
or
dec
in
mov
incl
add
in
dec
inc
repnz
icebp
pop
enter
or
fwait
xor
mov
scas
clc
icebp
pop
aam
mov
add
push
fsubl
or
aam
test
fisttps
or
add
or
cmp
dec
dec
cli
and
lock
inc
push
jmp
and
push
fdiv
push
add
inc
adc
lcall
hlt
add
lock
mov
add
xor
jne
aaa
shrb
inc
push
ftst
lock
fcmovnu
cmp
ficoms
mov
push
cltd
or
pushl
or
insl
xchg
push
add
cmp
std
push
pop
push
or
bound
dec
inc
insb
cmpl
sub
outsb
push
adc
lods
add
out
scas
and
mov
and
add
loop
xor
jb
xchg
adc
pop
pushl
push
pop
outsb
mov
mov
lods
push
and
mov
add
sub
add
xor
add
push
xchg
push
and
mov
xor
adc
or
cmp
add
imul
cmp
mov
and
aaa
and
out
mov
into
dec
push
inc
adc
xor
pop
add
roll
ljmp
add
movsb
mov
jbe
es
inc
mov
in
std
cmpsb
call
lock
add
je
jmp
mov
adc
mov
popa
dec
mov
fs
jge
xchg
inc
xchg
fistpl
pop
mov
fisttpl
and
in
in
fisttpl
or
or
inc
inc
loopne
adc
xchg
testb
mov
inc
push
xchg
mov
inc
or
or
mov
mov
push
and
push
mov
pop
or
or
mov
cmpsb
mov
test
sub
jge
out
in
lods
mov
cs
add
mov
rcrl
and
mov
les
out
cmpsb
push
mov
mov
ret
mov
jno
rorl
cmp
cmpsb
or
mov
mov
mov
mov
push
jl
divb
adc
mov
mov
inc
jg
lcall
aam
push
fcomps
or
and
cmpsb
jns
das
out
xadd
mov
loopne
xlat
outsl
sbb
cmp
in
std
mov
out
dec
mov
jl
out
pop
xchg
adc
mov
rolb
mov
fdivp
inc
popl
or
incl
idivb
call
add
jle
cld
mov
mov
dec
jnp
cmp
aam
mov
or
and
out
fwait
negb
dec
rcl
or
lock
mov
inc
loope
pop
icebp
xchg
ret
jge
push
mov
in
in
mov
mov
or
stos
sbb
dec
push
pop
sbb
mov
in
mov
or
mov
dec
and
push
dec
and
rol
fisubl
sar
fnstcw
mov
sub
outsb
inc
idivl
fildll
ret
or
sarl
xor
andb
das
sar
inc
inc
lock
sarl
ret
or
dec
or
xor
adc
call
mov
inc
shlb
mov
add
pop
loopne
sbb
mov
loope
or
inc
mov
pop
popa
or
adc
jmp
mov
push
push
inc
mov
lods
mov
or
or
lcall
adc
cmpsb
push
pop
inc
cmp
movsl
mov
or
mov
fbstp
pop
mov
inc
push
hlt
or
and
push
sbb
clc
bound
stc
push
shll
outsl
or
mov
stos
mov
outsb
mov
push
cmp
push
jbe
mov
clc
adc
jecxz
je
sub
movl
adc
enter
loopne
jbe
mov
mov
das
cli
incb
addl
jnp
dec
jb
mov
pop
pop
add
shlb
stos
lds
jle
adc
pop
scas
adc
das
add
mulb
and
mov
push
inc
jnp
mov
ret
add
sbb
ja
rcr
adc
add
call
and
push
jmp
dec
cmp
stos
inc
add
ret
mov
test
adc
imul
jle
xor
xor
inc
lock
xor
cmp
lahf
mov
or
dec
pop
adc
repnz
scas
xor
adc
addl
push
fdiv
lcall
inc
sbb
call
or
push
test
fnstenv
ret
fidivrs
xchg
sbb
fistl
pop
aam
and
push
mov
aaa
or
add
int3
loopne
jp
ljmp
stos
pusha
ret
cs
inc
sbbb
inc
inc
mov
or
sub
inc
mov
aaa
dec
dec
mov
lea
jecxz
in
incb
inc
test
mov
jo
pusha
aam
mov
push
mov
push
push
add
outsb
roll
adc
repnz
sbb
ljmp
cs
push
jne
mov
push
fcoms
push
pop
sarl
sbb
mov
or
jle
in
push
repz
and
test
lea
pop
mov
sub
mov
dec
rclb
xchg
aam
or
cmpsb
pusha
enter
pushf
nop
pop
addl
cmpsb
movsb
mov
jo
js
sub
ss
cmp
loop
loopne
cmp
cmp
xchg
sbb
out
insb
stc
mov
pop
jle
push
jb
xchg
cli
push
mov
xchg
pusha
jp
inc
addr16
addr16
shrl
cltd
test
xorb
pop
adc
push
or
jmp
ljmp
loopne
xor
das
in
add
sbb
xor
ret
add
pusha
sub
lock
cld
js
shll
push
call
outsl
and
lods
xor
pop
jo
lods
xchg
add
lods
mov
pop
call
mov
mov
inc
rolb
push
fwait
add
data16
fistps
pushl
xor
mov
test
mov
ret
dec
scas
jo
inc
andb
ja
xor
nop
push
xchg
lea
mov
and
or
push
sub
lock
popl
inc
and
mov
xor
jbe
and
enter
xor
xchg
and
lea
roll
push
scas
push
pop
inc
dec
fidivs
add
add
mov
jo
icebp
xchg
jne
lret
mov
xorb
clc
and
dec
js
fmull
xchg
mov
in
push
es
adc
push
xor
push
push
pop
and
insb
loopne
xchg
cld
jne
mov
mov
jge
jo
add
xchg
lret
dec
mov
jo
call
bound
push
sarb
or
xor
and
sub
in
push
outsb
mov
out
xchg
cli
insl
sti
pop
cmp
sahf
out
mov
jne
sbb
mov
adc
pop
dec
jecxz
fwait
cmp
dec
nop
and
sbb
loop
mov
mov
lock
and
inc
or
xchg
sbbl
mov
fildll
add
jmp
pop
sbb
jae
data16
add
inc
and
shlb
js
or
repz
repz
adc
je
out
mov
jbe
je
add
std
jle
fistl
sbb
pusha
cmp
cmp
mov
sbb
test
in
insb
add
inc
or
fisubrl
adc
flds
sbb
jp
inc
and
jp
clc
add
lcall
adc
enter
pop
xor
lods
out
add
inc
add
push
jle
mov
mov
mov
cmp
add
push
je
pop
ret
jl
fstl
cmc
adc
cmp
jl
bound
fimuls
cmp
ds
mov
lock
jmp
subl
push
add
ja
add
cmpsb
or
xor
add
add
call
inc
cmp
shlb
les
icebp
pop
test
clc
neg
jmp
mov
jp
lret
mov
jo
test
notb
jg
lcall
add
clc
cmp
push
nop
fcoml
pusha
pop
sbb
lock
push
sti
divb
mov
leave
or
add
mov
pop
inc
es
mov
push
add
jmp
sub
scas
ja
sub
cld
mulb
xor
sbb
push
test
incb
ss
mov
cld
jl
icebp
add
ljmp
nop
ds
jmp
mov
mov
lcall
shlb
sbb
sub
clc
sub
scas
repz
and
call
subl
jae
nop
xchg
mov
mov
pusha
and
add
push
or
inc
sbb
or
add
sbb
jmp
dec
or
cmp
cmpsb
pop
mov
lock
adc
cmp
mov
xor
lock
scas
push
add
pusha
insb
lds
int3
inc
or
add
imul
sbb
lock
jo
lock
imul
cmp
inc
pop
and
pop
dec
cmpb
inc
push
xor
sbb
loop
mov
aam
insb
adcl
adc
aad
sbb
es
and
mov
mov
push
push
aad
adc
mov
add
add
add
xor
lea
mov
and
in
sbb
dec
jo
stos
pushl
cld
ljmp
add
lock
add
adc
lock
sbb
imul
mov
inc
clc
jg
addb
xor
inc
adc
mov
mov
outsb
fdivs
dec
loop
mov
shrb
dec
mov
jo
or
je,pt
or
sbb
clc
mov
and
loop
aas
cltd
dec
movups
inc
inc
bound
push
mov
insl
add
jno
dec
jg
add
lock
adc
loopne
xor
scas
mov
sahf
add
sarb
inc
mov
cmc
push
scas
push
push
push
push
stos
js
mull
sub
filds
or
jno
push
je
icebp
adc
adc
xchg
rorb
push
xchg
idiv
xlat
and
jb
mov
or
push
or
jp
addr16
push
lahf
add
inc
adc
xor
lods
add
and
push
lock
inc
xchg
xor
sub
cmp
dec
in
ja
add
xchg
or
pop
cs
add
adc
cmp
mov
jo
jo
mov
jo
imul
lret
cmp
add
pusha
fmuls
add
push
jbe
pop
add
out
and
shl
std
inc
cmp
cli
test
mov
dec
or
xchg
adcl
add
or
inc
icebp
pop
lods
cld
rol
mov
lea
xor
jp
and
leave
ret
hlt
xorb
lcall
push
xor
ss
mov
lods
mov
sbb
mov
mov
scas
add
and
lea
sub
push
xor
push
adc
adc
or
xchg
int3
loopne
in
jg
jo
adc
mov
jo
aad
adc
xor
adc
dec
hlt
lock
pop
dec
sub
xor
adc
mov
mov
cmp
mov
add
mov
cld
js
mov
adcb
dec
or
scas
cmpsb
mov
jmp
cli
dec
rcr
or
pushf
pop
sub
hlt
es
fcom
jle
add
dec
jle
sbb
call
iret
popa
jbe
add
add
xor
adc
jl
push
xchg
inc
lods
testb
enter
pushf
adc
ret
shr
test
mov
mov
xor
inc
xor
push
xchg
jo
add
aaa
push
jg
bound
xorb
sub
inc
test
mov
roll
addb
mov
cmpsl
and
cwtl
push
sub
or
adc
jne
jbe
mov
jbe
movsb
xor
and
push
or
stc
pop
push
push
inc
lcall
sub
fcomip
xorl
push
test
mov
orb
or
sub
push
stos
mov
cmpsb
lret
je
inc
add
out
inc
in
mov
pushf
mov
bound
ret
add
aad
hlt
adc
data16
fnsave
add
cmp
pop
add
add
adc
xor
movsb
jl
lcall
cmp
imul
dec
loopne
repz
pop
mov
dec
mov
xor
add
adc
xor
push
add
stc
pop
add
aam
fadd
mov
add
lret
add
jg
cmpl
push
xchg
lea
mov
loope
jne
push
push
es
inc
insb
add
pop
cld
inc
push
add
xor
inc
faddl
jmp
pop
pop
and
lret
add
hlt
cs
or
or
xchg
add
add
or
mov
jle
add
dec
outsb
inc
mov
je
mov
cld
call
add
rorb
adc
or
adc
loopne
and
stos
cmp
inc
loopne
adc
jp
std
sbbb
adc
mov
out
hlt
movb
or
cld
addb
inc
dec
or
xor
pop
mov
mov
mov
mov
lcall
pop
sar
xchg
xor
adc
inc
test
cmpb
lcall
ja
and
sub
push
add
cmpsl
in
push
mov
mov
push
mov
add
aaa
jno
js
push
inc
enter
jle
inc
pop
sub
testl
adc
andb
add
sti
mov
int3
add
push
push
in
push
cwtl
inc
adc
xor
test
mov
inc
addb
push
orb
or
shlb
loope
lahf
pop
je
inc
add
ror
sub
negl
imul
add
or
mov
xor
fadd
push
sub
fnstcw
test
lret
clc
shlb
lcall
aam
movsb
jl
in
rclb
test
mov
sbb
and
sub
add
xor
add
bound
mov
add
push
mov
adc
adc
pusha
jmp
rclb
das
add
cmp
xor
incl
repnz
jne
mov
pop
lds
sar
lods
popf
je
leave
sbb
adc
mov
pop
push
xchg
push
push
inc
add
hlt
int
cmovo
daa
sub
aas
mov
add
pop
pusha
push
in
es
cmp
add
inc
mov
shl
rolb
and
push
dec
insb
cltd
rol
xor
fwait
mov
repnz
jge
pop
or
jecxz
pushf
loopne
or
sub
pusha
inc
inc
jmp
inc
ljmp
pop
add
jbe
dec
rclb
mov
and
cmp
dec
mov
add
jne
jl
sbb
add
lock
lds
sbb
testl
shrl
rcrb
push
ret
incb
pop
add
mov
push
mov
or
rcr
out
shrb
or
cmp
sbb
xor
xchg
scas
push
sbb
sub
loope
jne
dec
jns
mov
jle
sub
or
mov
or
rolb
jne
inc
hlt
aaa
andb
xchg
stc
hlt
jl
jl
or
loopne
loopne
andl
das
lea
cwtl
adc
xor
daa
hlt
gs
insb
cltd
and
jecxz
scas
out
insb
and
jle
loope
jecxz
nop
adc
pusha
or
aad
add
cmp
movsl
lock
jg
adc
push
add
mov
jmp
jp
insb
push
insl
adc
hlt
xor
add
push
push
loopne
loope
fimull
push
push
stos
and
lds
adc
push
and
ret
xchg
rcll
xor
cmp
loopne
jb
jp
jge
lods
jl
push
jbe
inc
js
lea
test
das
push
loop
add
bound
or
outsl
push
lock
test
repz
lods
mov
insb
sub
push
mov
adc
inc
mov
cmp
xor
add
call
push
push
sub
xor
cld
push
mov
imul
dec
clc
adc
cmp
add
idivb
pop
cli
add
cld
adc
out
std
inc
imul
loopne
sub
fsubrs
jmp
fs
sbb
sbb
sub
adc
dec
daa
xor
loopne
mov
out
rcll
outsl
or
mov
mov
adc
pusha
lea
cmp
stos
jle
testl
shrb
mov
aam
loopne
or
and
xchg
inc
ret
pop
sub
and
adc
inc
es
clc
repz
adc
pop
jmp
and
lret
xor
inc
testl
mov
aas
mov
mov
lret
push
xchg
adc
pop
jecxz
pop
cmpl
mov
ds
add
ja
push
lret
push
iret
cmpsb
inc
cmp
pop
cmc
add
sub
aas
add
test
pop
popa
mov
and
incl
stc
push
loopne
pusha
dec
cmc
push
lds
push
xchg
adc
jmp
dec
pop
lock
push
xorl
fsubrl
mov
or
rolb
push
or
inc
pusha
sub
push
add
popf
nop
addl
sbb
jne
out
test
jnp
sbb
ret
shl
pusha
ss
and
and
data16
or
and
lret
je
adc
fwait
cmp
and
les
shrl
loope
sbb
push
mov
pusha
push
cli
push
leave
nop
ret
test
push
call
je
subb
jl
cltd
push
out
mov
lods
pusha
flds
xor
call
add
sub
and
cmp
out
in
xchg
cmpsb
xor
cmp
sbb
sbb
pop
push
inc
loopne
or
pusha
add
test
cmpsb
daa
mov
sahf
es
out
mov
test
add
inc
mov
loop
push
push
je
nop
cmp
push
push
shrb
out
fs
adc
push
sbb
push
std
pop
mov
push
inc
int3
in
pop
or
cld
jp
loopne
jmp
mov
insb
pusha
inc
pop
daa
add
pusha
inc
bound
jne
jmp
xor
decb
dec
and
add
push
xorl
fisttps
pushf
rcl
jb
imul
sub
test
inc
or
fsubl
sbb
mov
pop
rclb
dec
in
dec
cli
iret
shl
fsubp
imulb
popa
and
xchg
xchg
shrl
stc
in
ret
loopne
add
jg
lret
sub
mov
adc
adc
xchg
mov
inc
push
nop
adc
push
mov
inc
in
mov
out
mov
ret
jl
push
add
daa
jle
push
and
adc
push
jo
push
add
add
mov
out
std
lock
test
xor
pop
aas
je
out
or
mov
jmp
mov
and
leave
jno
xor
mov
or
adc
push
bound
fldl
and
lock
sarl
fmull
test
mov
jo
sub
jl
shr
add
pop
dec
test
addl
jb
pop
add
and
adc
or
cmp
jo
hlt
and
mull
aas
sbb
add
leave
lods
mov
call
lods
lods
add
sarb
call
inc
subl
xchg
jo
vaesdeclast
clc
jmp
outsb
sub
inc
nop
xor
aad
jno
push
dec
test
or
das
pushf
jge
hlt
xor
shlb
orl
jle
adc
pop
xchg
fdivrs
imul
out
test
add
sub
mov
cmp
add
push
xor
movb
shll
jmp
cs
test
lea
cmp
dec
imul
adc
pop
mov
add
xor
in
dec
lcall
pop
cmp
ljmp
filds
dec
sbb
push
push
pop
mov
mov
and
lds
repnz
je
addb
adc
xchg
cmp
push
mov
push
sbb
mov
or
add
pop
inc
adc
sbbb
push
sbb
and
jbe
push
sbb
ret
popl
fstl
mov
cwtl
inc
jmp
sub
dec
mov
hlt
jo
loope
imul
and
adc
or
imul
sub
data16
push
xor
fwait
or
sti
push
enter
adc
jo
xchg
mov
call
or
xor
imul
adc
inc
cwtl
and
rcl
adc
pop
lret
xchg
in
out
outsl
ds
add
frstor
xchg
testb
or
mov
int
mov
add
xchg
cmpl
int
or
push
cmpsl
add
hlt
push
decl
ljmp
push
mov
and
test
lea
xor
adc
mov
inc
pop
mov
cmp
or
sub
movzbl
add
lock
push
add
or
shrl
mov
fimull
aaa
push
call
int
loop
jb
rol
adc
mov
pop
shlb
mov
dec
nop
aaa
bound
fnstsw
dec
lods
popf
icebp
jl
lock
loope
inc
xchg
push
xchg
mov
xor
sbb
pushf
push
pop
jo
icebp
dec
push
test
add
xchg
lods
jg
std
xchg
lods
pop
and
add
xor
je
out
andb
pop
aaa
ret
fiaddl
std
call
test
subl
mov
jo
lret
xchg
enter
pushf
jmp
adc
push
xchg
mov
and
mov
add
or
sahf
call
shl
jo
xor
adc
test
pusha
adc
rorb
xor
inc
clc
fisttps
add
mov
mov
and
dec
jbe
fdivs
mov
rorb
mov
pushl
and
mov
data16
or
xor
data16
movsl
rolb
mov
jp
and
cmpb
cwtl
inc
sti
movl
mov
mov
fcompl
faddp
mov
in
sub
call
dec
cld
int3
int
adc
jmp
mov
pop
jmp
xor
add
add
nop
push
les
xor
mov
loope
movsb
rorb
adcb
je
jo
ja
xor
in
push
mov
fidivs
dec
ljmp
and
mov
inc
pop
or
pop
mov
add
sub
and
push
cmp
jbe
aas
bound
movsl
xor
rclb
xor
inc
inc
inc
jb
test
divl
lea
and
sub
add
aaa
mov
aaa
mov
jle
inc
jbe
add
je
pusha
mov
mov
xlat
aaa
hlt
add
mov
sbb
sbb
mov
mov
aad
cmp
lock
pusha
xor
stc
out
movsb
mov
dec
aam
ret
jb
cli
or
xor
jecxz
add
ja
mov
jne
xor
cmp
adc
test
call
mov
call
pop
enter
shlb
or
frstor
xchg
aam
adc
push
add
dec
inc
hlt
mov
test
aam
push
or
dec
mov
orb
loope
in
mov
push
jb
dec
lock
incb
add
and
dec
jo
xor
jbe
adc
clc
pop
sub
idivb
cmp
mov
pop
jg
lock
push
push
push
shll
shr
push
mov
or
shr
xchg
add
push
mov
jp
lods
push
sbb
add
adc
xor
jge
and
sbb
outsl
outsl
add
mov
mov
add
jno
inc
jns
jmp
sbb
adc
and
pop
orb
dec
adcb
xchg
addb
mov
jmp
mov
sbb
pop
jmp
scas
add
sbb
negb
mov
sub
push
scas
add
lods
jmp
ja
mov
adc
pop
and
dec
mov
adc
mov
jmp
xor
adc
rorb
fs
or
incl
testl
repz
cld
xor
add
xchg
std
mov
push
mov
je
dec
push
pop
cmc
add
pop
sti
mov
push
aam
rclb
adc
aad
jne
fidivs
mov
sub
fs
not
lret
sub
scas
stos
movsb
les
jae
addb
loopne
lea
lods
bound
mov
fidivl
sti
sbb
fiadds
sbb
pop
cmp
and
add
pushf
inc
jb
or
int
xchg
lea
xchg
xor
fmulp
inc
xchg
cld
push
cli
jmp
jne
lcall
jp
call
mov
fcos
je
xchg
test
xchg
mov
lret
fsub
fisubl
int
sub
scas
or
test
push
js
jecxz
cld
shll
push
push
je
xchg
pushf
inc
jmp
movsb
nop
push
mov
mov
xchg
xor
push
or
push
mov
push
or
pop
imull
jp
cwtl
je
or
loope
xor
xchg
andb
jbe
jb
pop
lea
jno
jp
or
xchg
mov
in
inc
or
cmp
inc
xchg
mov
mov
cwtl
orb
repz
adc
fs
cli
mov
xchg
sbb
jle
push
dec
inc
and
inc
add
jnp
add
cli
mov
mov
and
enter
add
xor
nop
push
adc
or
adc
xchg
pop
ret
into
decl
inc
ljmp
dec
add
mov
adc
mov
pushl
add
or
pop
sahf
mov
sbb
xor
sub
pop
mov
and
shr
int3
shlb
push
xor
movsb
mov
pusha
leave
push
fwait
or
sahf
push
mov
or
xor
leave
orb
out
sbb
imul
push
push
call
pop
adcb
or
xor
notl
dec
imul
call
mov
rcrb
xor
stos
push
or
enter
push
shl
push
add
je
adc
iret
xor
mov
pusha
cmp
cmp
xorb
xchg
mov
push
xor
or
add
int3
or
xor
xor
push
mov
iret
xor
or
loop
data16
jne
stos
cwtl
adc
notb
inc
inc
dec
sbb
aad
push
sub
je
adc
dec
jp
scas
xor
mov
xchg
adc
movsb
xchg
add
cld
repnz
xchg
dec
int3
xorl
inc
mov
mov
push
lcall
inc
je
frstor
hlt
sub
in
rol
cli
adc
xchg
iret
mov
inc
into
int
subl
jae
loopne
sbb
adc
sub
push
test
fs
jecxz
movsl
push
lret
push
adc
dec
popa
mov
add
push
das
add
pop
repz
ja
adc
mov
pop
mov
in
loopne
adcb
push
and
add
imul
add
inc
movl
roll
cmc
or
loop
mov
adc
movsb
push
add
push
aad
sbb
pusha
nop
sbb
outsl
cwtl
lret
pop
adc
adc
sarb
pop
or
sbb
push
and
mov
rorb
clc
dec
inc
pop
cltd
add
or
mov
adc
sbb
cmp
outsl
test
mov
add
or
add
js
adc
push
add
and
rolb
pushf
pop
mov
or
inc
pop
xchg
ret
cwtl
xchg
push
dec
add
mov
test
adc
cli
loopne
insb
inc
add
mov
pushf
or
sub
movsb
add
movl
inc
cmp
push
shlb
mov
jp
push
mov
mov
push
sahf
push
add
push
lcall
rorl
jo
push
dec
outsb
test
pop
and
shl
js
lock
inc
jl
stos
fadd
testb
insb
push
push
and
pushf
mull
sub
sub
mov
mov
mov
jg
in
or
cld
pop
std
popa
add
push
rcr
loop
rcr
or
jne
inc
test
mov
ss
mul
add
push
add
divl
cmp
stos
mov
sub
popa
sti
inc
loopne
fcmovnbe
ljmp
pop
dec
mov
xor
roll
icebp
pushl
ret
outsb
popa
mov
push
mov
hlt
push
push
or
out
ret
add
call
mov
push
push
adcb
pop
pop
movsb
ret
or
ret
data16
or
xchg
mov
and
insl
jecxz
shrb
shll
mov
test
push
rorb
add
out
xor
push
or
movsl
clc
mov
sete
outsl
out
fidivrs
lcall
aaa
pushf
push
cmovs
push
push
sub
jle
sub
and
push
mov
je
or
es
cmc
inc
std
inc
call
and
sbb
xchg
stc
roll
push
cli
push
pop
sbb
inc
scas
push
mov
popa
loopne
pop
pusha
pop
cmp
cmp
outsl
mov
cmpsb
pop
out
rorl
or
call
add
adc
push
adc
lret
ja
clc
push
xor
test
sarb
test
adc
jl
xor
ja
loopne
pusha
and
hlt
or
lret
shrb
jne
in
pusha
cld
add
push
mul
je
pushf
sbb
add
add
sub
shll
xor
ljmpw
data16
jbe
insb
and
jb
add
sbb
rcl
ret
jo
fs
adc
jbe
call
hlt
mov
pusha
andl
dec
mov
cld
or
lock
mov
inc
fmull
add
add
adc
xor
jmp
rol
cmp
addr16
mov
push
loopne
mov
call
ret
nop
xchg
cwtl
loope
mov
jb
pop
call
add
ret
cld
loopne
hlt
outsl
int
data16
fdivr
fdivs
mov
sub
pop
loopne
popa
cld
mov
sub
adc
or
inc
sbb
dec
loope
or
rcll
cld
push
mov
fwait
mov
mov
cs
hlt
leave
add
or
lock
sbb
adc
cld
roll
pop
push
inc
mov
adc
aaa
stos
loop
jo
add
mov
js
or
xor
and
pusha
cmp
loope
xchg
mov
cwtl
orl
test
mov
sbb
add
inc
mov
xchg
insl
jle
mov
in
inc
or
xor
mov
push
mov
shrl
mov
addr16
xor
pusha
pop
xor
pop
pop
mov
out
mov
pusha
adc
add
mov
mov
adc
push
adc
pop
stos
push
add
push
push
fs
mov
insl
test
inc
add
sbb
xor
and
cmpsb
add
push
mov
mov
sbb
sbb
mov
in
in
icebp
add
and
add
or
jo
clc
and
insl
cs
lods
fstps
addb
fadds
add
pop
cmpsb
lock
in
push
mov
sbb
push
xchg
mov
push
or
movsb
data16
jne
cmpsb
xor
jl
js
mov
sub
pop
adc
cli
or
or
push
std
or
add
or
add
sbb
add
dec
shl
int
sub
and
insl
cmp
imulw
sbb
add
out
cld
sarl
adc
cs
scas
insl
insl
jnp
lock
aam
or
pop
cmp
mov
push
movsb
mov
int3
push
das
jo
adcb
mov
add
loopne
ljmp
nop
sbb
scas
xchg
subb
mov
icebp
add
movsb
imul
mul
daa
sbb
stc
mov
and
mov
ret
mov
add
dec
lock
cld
push
stos
lock
add
lods
loopne
pop
add
repz
enter
sarb
jg
aad
cwtl
jbe
fimull
std
add
ror
cmc
add
push
fs
pop
imul
sbb
mov
insb
insl
cmp
mov
call
std
bnd
mov
aad
jo
daa
fcmovnb
ja
mov
push
sbb
or
jge
push
or
push
xor
xor
or
loopne
call
fsubrs
pop
pusha
add
jno
mov
jae
push
add
sub
ss
push
sub
lock
icebp
xor
mov
lds
loop
lcall
mov
push
mov
jb
pop
xorl
sahf
add
mov
inc
pop
mov
or
add
adc
pop
ljmp
jns
cmpb
sub
adc
push
sbb
add
fiadds
std
in
add
rcrl
xor
adc
add
add
pop
sarb
fidivl
cmpsl
pusha
mov
arpl
add
jp
push
sbb
out
ja
push
ja
and
push
sti
adcl
repnz
imul
push
ss
sbb
jno
sbb
das
scas
sahf
int3
enter
push
add
sbb
repz
sbb
fs
adc
nop
lock
xchg
stos
out
sbb
lcall
push
pop
stos
mov
test
ret
sub
hlt
add
faddl
lock
mov
push
out
or
orl
push
addl
inc
rol
lods
andl
dec
lock
shll
cld
rclb
push
icebp
mov
sub
lods
stos
adc
sbb
jo
push
inc
adc
sbb
bound
dec
xor
imul
stos
out
lds
add
stc
loope
add
test
or
stos
in
stos
faddl
mov
lock
jo
loopne
push
and
sbb
ds
jge
lcall
fcomps
adc
stos
imul
mov
xor
mov
outsb
cmp
xor
sahf
or
lcall
xchg
push
xchg
add
dec
mov
stos
xchg
pusha
pushl
addb
and
add
sbb
xchg
pusha
insl
and
int
or
enter
mov
add
stc
xor
cmc
adc
add
jmp
mov
and
sbb
or
pop
pop
inc
hlt
stos
aad
roll
stos
sbb
adc
fwait
cmpsb
add
test
or
cltd
int
lcall
xchg
test
int
xor
jge
jne
add
mov
outsl
sahf
ret
addb
add
stos
scas
push
imul
cmpsl
imul
imul
cmpsl
imul
imul
imul
cmpsl
imul
cmpsl
imul
dec
repz
out
push
ljmp
loop
fcmovbe
shl
xor
repz
lret
mov
lcall
int
mov
cmpsb
mov
xor
rcll
int
xor
jle
jbe
outsb
push
int
xor
bound
push
shll
inc
inc
int
xor
cmp
xor
sub
push
sbb
shll
push
add
sahf
cmpsb
stc
inc
jb
div
out
push
ljmp
loop
fcmovbe
sarb
cmpsb
jns
lret
mov
lahf
mov
mov
mov
mov
sbb
loopne
mov
push
andl
stos
mov
xorl
lcall
push
sbb
or
and
sbb
xchg
imul
outsb
cmp
sarl
pop
push
mov
or
sbb
inc
loopne
ds
xor
xor
sbb
es
cmp
shll
push
sbb
adc
inc
jne
push
or
inc
add
push
cmp
shll
out
ljmp
loop
fiaddl
add
pop
add
mov
xchg
ret
orb
call
push
sbb
push
jo
xchg
xchg
movsb
add
sbb
jbe
dec
xor
sub
cmpsb
jns
mov
pop
add
add
add
dec
cmpsl
es
cmpsl
push
sbb
rcrl
loopne
mov
orb
stos
movsl
mov
cmpsb
imul
or
inc
mov
and
sbb
mov
pusha
jo
subl
out
sub
sbb
xchg
orl
inc
inc
pusha
sahf
add
aas
adc
cmpsl
lock
sbb
jno
stos
jno
sub
lcall
insl
test
push
jmp
repz
fstp
aad
int
push
icebp
int
sbb
mov
sbb
xchg
inc
clc
cmp
mov
add
pop
cmpsb
das
popl
movb
inc
sbb
lcall
stos
push
and
rorb
xorb
jne
sub
add
in
push
xor
add
add
aas
sub
rcrb
fdivr
mov
inc
das
pop
movsl
pop
adc
pop
pop
sbb
mov
and
adc
xor
notl
sti
ret
test
bound
sti
addl
push
pop
shl
add
in
mov
sqrtps
add
xchg
xchg
lcall
sbb
ret
add
fcom
mov
pop
loopne
add
xor
ret
ret
dec
mov
xorl
stos
push
add
mov
std
xor
push
data16
mov
inc
dec
test
sbb
jae
mov
call
aam
push
ret
call
mov
out
and
adc
jge
dec
add
jne
call
fistl
nop
add
dec
or
out
fld1
xor
and
pop
das
add
mov
and
pop
and
and
xchg
add
cmp
out
test
fidivrl
std
adc
fildl
fbstp
inc
mov
add
call
xchg
stos
inc
es
xchg
xor
pushl
jb
mov
mov
jmp
mov
add
bound
icebp
push
and
pop
mov
jbe
fisttpll
mov
cmpsl
add
cmp
push
add
jp
jg
add
push
ljmp
mov
syscall
and
add
lock
xchg
pop
cld
or
lock
mov
add
add
or
add
mov
call
inc
or
dec
or
or
jl
fdivr
add
xor
stc
adc
sub
xor
xor
push
cmp
push
add
push
nop
xor
cltd
mov
xor
cmp
call
addb
xor
fucomp
add
push
xchg
repnz
call
cmc
or
push
jae
pop
mov
and
sbb
je
pop
je
fildl
es
mov
add
and
push
inc
jo
lock
and
mov
add
xor
push
xchg
cmp
insb
call
out
or
jno
std
xchg
mov
sbb
add
sbb
cltd
mov
push
cmp
pop
mov
lods
jge
cmp
and
jo
and
jo
mov
push
orl
call
movsb
popa
pushf
shl
inc
fcompl
mov
das
jo
shrl
loop
mov
in
and
and
pop
std
pop
cld
or
adc
pop
jo
jbe
add
xchg
jle
icebp
sbb
add
sbb
push
sbb
cld
aam
std
pop
nop
call
jge
lret
lcall
imul
cmp
xor
outsb
or
xor
mov
push
cltd
xor
addl
ret
jbe
add
mov
sti
addb
mov
and
lock
sti
cmp
es
ja
jbe
loopne
xchg
andb
add
and
ss
add
mov
mov
ljmp
cmp
xor
addl
add
jno
mov
jg
pop
insl
adc
add
xor
sbbb
repz
inc
sti
call
cld
inc
jne
mov
movsl
call
test
jno
dec
adc
std
scas
jg
add
cli
jo
ret
mov
hlt
add
call
jne
repnz
fisubs
popa
ret
repnz
add
pop
call
xchg
add
jg
inc
shrl
int
sti
jb
add
call
adc
mov
xor
subl
add
mov
inc
mov
pop
sti
or
jno
imul
movsl
mov
jle
ja
mov
inc
pop
push
mov
adc
inc
xor
jne
mov
fdivrs
push
call
jo
add
ds
xchg
div
ds
es
push
jo
sbb
adc
out
call
stos
and
lods
add
xor
lock
push
shll
jb
xor
sub
aad
add
sbb
or
pop
aam
jno
inc
mov
int
jnp
and
movsb
or
pop
cmpsb
fwait
lock
xor
insb
mov
popl
adc
jl
xor
or
xchg
sub
jb
cmc
scas
mov
test
mov
and
dec
jl
lods
push
cs
mov
ljmp
ja
sub
xor
hlt
add
cmp
mov
out
push
xor
fimull
mov
mov
push
icebp
sbb
pop
bound
mov
cmp
push
stos
or
clc
jno
or
call
cmp
loope
push
pop
mov
jo
adc
or
clc
jbe
dec
add
add
mov
jno
pusha
or
pop
inc
add
xchg
push
xorl
sub
sub
jns
mov
scas
aaa
cmp
jmp
int
sarb
push
or
test
pop
mov
xchg
mov
js
jbe
cmp
sahf
shr
xchg
sub
test
cmp
mov
clc
dec
adc
and
add
call
xor
lods
call
inc
add
inc
add
add
ss
loop
cmpsb
jae
xor
sbbb
fsubrl
or
sbb
negl
test
add
or
pop
lahf
or
push
add
aad
andb
fsub
fxch
test
in
cmp
jae
or
iret
or
popa
sub
adc
mov
std
pop
mov
and
xor
call
cld
mov
xchg
subl
pop
andl
int3
ljmp
inc
fisubs
cmp
jl
addb
aam
fisttpll
add
and
add
or
add
xchg
and
add
shl
nop
xor
inc
and
and
add
addb
aaa
je
push
rcll
mov
je
mov
in
lea
add
sub
push
mov
xorl
and
andb
add
add
movsb
je
cmp
je
adc
mov
aaa
or
pcmpeqb
jb
in
mov
orb
xchg
mov
inc
sarb
cwtl
sti
notb
mov
clc
sarb
ret
nop
je
ret
movsb
push
cmp
movsl
je
ret
cmpsb
gs
jbe
adc
ret
xchg
cs
stos
adc
ret
stos
je
ret
lods
jg
insl
filds
je
ret
scas
adc
ret
mov
adc
insl
je
ret
outsb
add
hlt
ret
movups
and
add
int
shlb
sarb
cmp
fstl
and
mov
push
mov
mov
cmovae
fsubrs
sub
dec
inc
and
ret
inc
test
pop
les
lock
jmp
shrb
push
inc
xor
cmpsb
pop
les
mov
sbb
lahf
inc
add
inc
mov
data16
or
rol
or
ret
jle
aam
xchg
mov
or
mov
lds
outsb
inc
ret
sarb
call
push
call
mov
mov
add
cmp
test
test
pusha
jb
sub
add
outsl
xor
call
inc
push
jne
push
add
imul
sub
add
test
cmp
lcall
sti
mov
adc
inc
rolb
shll
roll
pop
sbb
mov
push
adc
shlb
push
inc
and
cmp
cld
stos
push
out
xor
xadd
add
jl
jbe
ljmp
sbbl
cli
js
addl
je
mov
in
shlb
mov
sbb
sbbl
loopne
add
es
loop
loopne
sbbb
fisttpl
loop
add
ljmp
addr16
inc
jg
daa
test
in
call
mov
xchg
or
inc
mov
and
add
orb
jo
cli
ud0
or
inc
loope
pop
cmp
inc
sbb
std
filds
sbb
hlt
xor
bound
and
outsl
clc
stos
inc
push
ret
test
ljmp
pop
outsb
mov
or
cmp
cmc
hlt
adc
add
insb
decb
sub
nop
pushf
mov
pusha
dec
ret
sub
mov
add
add
lock
jmp
jl
imul
popa
cmp
add
push
and
push
mov
push
mov
vmovlpd
in
inc
out
add
xor
push
cmp
lcall
jle
dec
pusha
punpcklbw
clc
jle
in
add
fs
imul
pop
sti
dec
mov
or
add
das
xor
mov
xchg
inc
mov
push
insb
clc
adc
pop
rolb
dec
movsb
call
inc
mov
mov
add
arpl
add
push
mov
adc
add
arpl
imul
sbb
ja
repz
mov
sub
adc
push
xlat
pusha
add
pop
imul
out
inc
or
lret
jbe
daa
movsl
jg
push
inc
dec
pusha
or
enter
js
mov
add
cs
inc
xor
loope
outsl
aaa
insl
stos
xor
inc
sahf
loope
adc
fwait
push
call
push
bound
lcall
sti
scas
push
sbb
call
out
adcb
and
mov
cmp
xor
add
fistpl
sbb
test
inc
add
in
inc
adc
mov
push
mov
add
jae
cld
jnp
push
xchg
xor
sbb
fnstenv
push
les
in
add
rdmsr
adc
loopne
ljmp
adc
aas
loopne
popa
add
push
jo
jmp
aad
inc
dec
push
or
jnp
into
adc
xchg
push
mov
shl
pop
xor
fistps
icebp
add
fcmovbe
jp
cmc
arpl
add
push
jo
popa
or
mov
mov
lods
push
arpl
xchg
fdivrs
push
pop
add
fildll
repz
sbb
dec
mov
xchg
insl
pop
movsl
mov
out
sub
mov
push
xlat
cli
mov
mov
insb
sbb
jg
push
inc
dec
repz
pushl
out
sarl
scas
mov
pop
mov
mov
stc
lods
and
stos
jmp
xchg
int
adc
cmp
dec
xor
mov
mov
ror
les
mov
dec
push
push
stos
xchg
sbb
xor
xor
mov
aaa
cs
pop
push
int3
out
shll
mov
out
into
mov
stc
cs
xor
xor
push
adc
dec
pop
imul
aad
mov
add
mov
stos
and
incl
and
and
jno
inc
adc
mov
add
mov
and
xor
mov
dec
and
mov
sbb
jecxz
xor
lahf
cmc
or
sbb
cmp
or
xor
fwait
push
mov
shll
bsr
sub
inc
pop
jmp
pop
aad
mov
popa
imul
imul
inc
test
and
idiv
in
xchg
xor
aam
lock
push
loop
sub
es
in
push
adc
pop
ljmp
divb
jno
dec
stos
shl
mov
push
add
popf
es
dec
incb
push
xor
cwtl
insb
gs
popf
push
ja
subb
and
inc
mov
add
mov
xchg
je
push
and
add
inc
popl
dec
add
pop
cli
je
jb
mov
std
xlat
mov
add
push
jb
nop
add
je
test
data16
js
and
mov
cmc
pop
push
push
jae
add
add
mov
push
sahf
mov
and
jb
add
dec
arpl
inc
mov
mov
fwait
test
stos
pop
push
outsl
inc
outsl
mov
inc
popa
je
push
sbb
bound
add
jo
adcb
pop
mov
mov
add
push
mov
bound
add
lcall
outsl
or
aaa
inc
stos
xchg
add
add
or
add
je
push
int
xchg
and
mov
shlb
or
mov
add
hlt
xchg
add
fadds
gs
std
sbb
pop
push
sahf
adc
push
imul
inc
jae
add
add
mov
std
popf
jb
jb
inc
and
gs
sahf
outsb
fs
jo
mov
mov
inc
pushf
popa
mov
lcall
mov
loope
sbb
dec
xchg
jb
popa
and
stos
imul
dec
jo
scas
inc
sbb
xchg
inc
dec
xor
or
add
jb
adc
mov
add
in
imul
inc
mov
imul
xchg
add
jo
loopne
jle
jbe
loopne
rcrl
adc
in
mov
add
pop
out
add
mov
add
add
lods
gs
mov
jbe
pop
lcall
sbb
or
mov
jb
push
cld
or
imul
mov
jb
adc
add
clc
or
sub
mov
mov
dec
or
lock
inc
or
add
sbb
add
pushf
xchg
jb
lea
pop
push
stos
inc
cmp
jne
add
inc
pop
adc
adc
cltd
gs
sub
icebp
outsl
fcomps
cs
inc
add
mov
js
add
shll
out
cmpsb
inc
push
inc
inc
cwtl
jno
nop
jne
rclb
cmp
insb
push
loop
or
jbe
out
mov
adc
aas
popl
test
ss
inc
mov
xor
and
fadds
dec
jo
pushl
mov
in
add
sbb
mov
push
gs
xchg
xchg
add
or
push
jae
int
mov
je
add
sub
xor
lcall
mov
nop
insb
push
subb
mov
orb
adcl
push
outsl
decl
inc
orl
jbe
andb
fnstcw
nop
fsts
ljmp
cmp
push
inc
add
mov
adc
inc
stos
push
and
subl
pusha
call
mov
push
jns
adc
mov
sbb
sbb
jo
int3
js
sbbb
outsl
insl
mov
mov
adcb
rolb
rorl
xor
dec
cltd
andl
push
fcos
push
xchg
push
imul
cmp
cs
jns
mov
aaa
mov
inc
jo
add
insb
stos
mov
jg
push
adc
adc
jne
xchg
pop
rcr
ljmp
pushf
insl
pop
mov
lret
push
cmp
ret
sbb
sbb
mov
les
inc
imul
rcrb
mov
shrl
bound
icebp
lds
xchg
or
push
mov
or
out
arpl
shlb
outsl
mov
gs
adc
lds
dec
sub
cmp
gs
xchg
popa
lds
pop
mov
rcll
xchg
jbe
push
xchg
jb
aaa
pop
movsb
dec
and
add
push
fwait
inc
jmp
outsb
hlt
test
jns
and
mov
rorb
nop
push
rorb
push
lods
inc
mov
xchg
dec
les
and
mov
push
rcrb
sahf
mov
imul
cmp
imul
jmp
ret
cmpsb
dec
adc
lods
cli
add
adc
add
call
sub
rorb
cmpsb
push
sbb
cmpsb
jmp
dec
ljmp
rol
shll
fmull
push
shll
ljmp
cmp
clc
pushf
imul
in
add
dec
xchg
enter
in
push
adc
or
dec
pop
es
cs
bound
ss
dec
mul
into
add
test
loop
negb
ds
lods
shrb
outsb
into
pop
addb
add
push
outsl
mov
lds
inc
jns
inc
sbb
and
mov
ss
xchg
jb
inc
loopne
mov
incb
bound
outsl
popa
dec
push
imul
addr16
sub
cmp
lcall
ljmp
aaa
lods
jge
or
xor
loopne
fwait
inc
bound
jg
loope
add
add
add
sbb
in
jg
mov
push
popa
xchg
jne
aaa
add
insb
mov
mov
stos
gs
and
jb
and
clc
dec
mov
cmp
push
dec
lds
popa
add
jno
loope
outsb
jb
jb
outsl
fwait
adc
imul
mov
aaa
jmp
sbb
mov
call
push
arpl
loope
out
push
add
es
push
jne
mov
xor
push
add
addb
aam
mov
in
dec
in
outsl
xorb
testb
pop
insl
sbb
inc
push
scas
mov
loope
cmp
int3
or
rclb
fs
or
dec
js,pn
outsl
imul
push
push
sub
data16
int3
add
pushf
loopne
mov
hlt
incl
sbb
loop
mov
pop
xchg
or
pop
fsubl
je
loopne
pusha
and
cmp
arpl
outsb
scas
repnz
push
mov
gs
cmp
push
loopne
ret
int3
loopne
dec
aaa
cld
jne
or
insb
mov
loope
fldt
pushf
pushw
popa
push
push
jae
adc
sahf
mov
cmp
adc
popa
xchg
cmpsb
cwtl
loopne
insl
loope
mov
mov
adc
arpl
sbb
ds
mov
sbb
sahf
and
dec
mov
shlb
outsb
sub
or
popa
bound
cwtl
outsl
xchg
jg
add
mov
int3
add
out
dec
gs
mov
adc
sub
je
fcomip
pop
adc
add
loopne
sahf
lock
sub
cld
or
loop
jb
stos
sub
js
addb
adc
shl
pop
dec
xchg
int3
lcall
mov
or
loopne
sub
dec
jae
lods
loopne
jo
or
movsb
popa
adc
stos
push
push
xor
mov
add
pusha
leave
pusha
push
push
adc
add
bound
mov
inc
addl
dec
push
dec
pusha
in
fcmovbe
mov
dec
fwait
add
cmp
popa
jae
inc
xor
stos
jg
add
gs
shlb
outsl
ja
xlat
sub
jnp
je
in
andl
inc
add
xor
cmp
mov
outsb
fwait
outsl
add
mov
push
gs
jmp
push
cld
mov
mov
mov
out
adc
ficoms
bound
in
negl
std
sub
add
jae
mov
push
test
xchg
push
cmp
mov
dec
and
mov
and
and
pop
lock
mov
xor
mov
push
mov
push
ja
pusha
loop
imul
stos
fs
insl
popa
imul
insl
sub
insb
add
bound
mov
mov
and
gs
and
fwait
push
add
frstor
fwait
add
sahf
outsb
jae
lock
ljmp
fs
dec
lcall
aam
push
mov
loope
mov
sbb
adc
mov
mov
je
xor
push
ljmp
jb
mov
aaa
sbb
xor
add
icebp
push
or
test
sub
mov
cmp
inc
add
xor
mov
push
fs
jb
push
les
das
push
imul
or
adcb
ja
xor
xor
dec
pop
hlt
sub
jno
or
push
xor
cmp
outsb
add
cli
push
sahf
sub
in
lcall
push
xchg
gs
data16
xchg
nop
ja
xor
or
jecxz
mov
test
cmovbe
andb
push
sub
adc
push
popa
cmc
add
jno
cmp
inc
xchg
sti
mov
outsb
mov
sbb
ud0
scas
xor
xor
ss
mov
push
mov
stos
add
ljmp
jne
sbb
xor
jns
dec
inc
rorb
fcomip
aaa
xor
and
inc
insb
addr16
push
mov
loope
xor
outsb
push
jo
add
call
and
mov
xor
fmuls
dec
inc
push
jg
xor
mov
fwait
jo
sbb
add
jno
xor
in
icebp
enter
or
mov
xchg
jo
adc
jae
scas
cs
sbb
add
jae
dec
outsb
cltd
outsl
sub
mov
idivb
push
arpl
jo
jo
test
into
icebp
dec
stos
mov
dec
mov
sbb
mov
dec
loopne
sbb
mov
adc
lock
dec
mov
into
xor
outsl
hlt
insl
push
subb
xlat
add
fildll
add
lcall
das
mov
adc
icebp
mov
adc
inc
add
add
add
call
xor
xor
in
inc
mov
ss
pushf
jbe
mov
int
push
pop
lock
cmp
add
nop
repz
mov
scas
add
ljmp
push
sbb
mov
jae
jg
loope
push
sahf
add
imul
cli
inc
bound
xor
dec
dec
pushf
mov
and
sbb
cs
sarb
repnz
or
pop
cwtl
xor
cwtl
inc
add
pusha
jb
xchg
negb
out
mov
mov
notb
cli
add
xor
repz
sahf
mov
add
ja
push
hlt
mov
stos
mov
jg
lock
mov
jb
int
mov
jo
cli
jg
ss
dec
les
or
add
in
add
pop
insl
add
inc
pop
out
add
xchg
loopne
pushl
or
pusha
jae
cwtl
mov
push
int3
cmp
or
shl
sbb
icebp
lcall
lret
lcall
sbb
jns
lea
pop
add
sub
add
xor
fwait
lcall
pop
add
in
ljmp
je
nop
repnz
or
imul
outsb
xor
mov
ljmp
gs
jbe
inc
fisubs
idivb
push
arpl
jo
mov
push
mov
mov
mov
pushf
jb
jbe
jb
sahf
arpl
push
mov
icebp
test
fdivs
rcrb
jns
repz
scas
jbe
mov
cld
call
arpl
stos
jns
es
arpl
jo
loopne
add
sbb
push
push
inc
jg
mov
mov
cmp
insb
ljmp
push
mov
jno
lock
xchg
push
fimull
add
xchg
gs
gs
mov
mov
pop
dec
push
push
xchg
mov
xor
cwtl
jns
adc
jbe
ljmp
dec
popf
cmp
lods
cwtl
je
push
xchg
lock
inc
and
lods
and
push
scas
cli
jg
and
add
jb
push
imul
gs
inc
insb
dec
outsb
dec
outsb
jb
sub
add
xor
les
cs
aad
cmp
jo
out
inc
add
clc
shr
lock
xor
test
mov
incl
mov
or
mov
and
sbb
push
push
jne
lock
cwtl
and
dec
repnz
xor
mov
add
shrl
cli
imul
or
jne
inc
mov
dec
or
arpl
mov
into
jno
rep
ds
jb
add
xlat
dec
and
ss
ds
push
sbb
push
jb
xlat
inc
jae
and
iret
inc
xchg
mov
outsl
mov
jo
xchg
jbe
addr16
add
lea
pop
adc
mov
mov
int3
js
push
jl
inc
push
outsl
sub
lods
test
and
sbb
lret
mov
nop
mov
popa
arpl
dec
push
dec
inc
gs
shr
and
fadds
lods
dec
adc
xchg
outsb
jb
ficompl
outsl
or
lret
mov
jecxz
dec
sub
mov
sub
jo
mov
fldl
push
inc
insl
jo
test
xchg
movsb
add
inc
movsb
out
fdivrs
add
add
imul
and
aaa
mov
add
push
sbb
adc
push
xorb
subb
mov
pop
xchg
and
sbb
fiadds
ja
fldt
aam
test
mov
sbb
jb
data16
andb
sub
daa
inc
popa
xchg
fisubrs
data16
push
mov
or
rolb
adc
xchg
subb
orb
fs
add
and
jae
adc
int
or
cmpb
arpl
add
xchg
cs
inc
mov
arpl
movsb
and
xchg
cld
add
adcb
or
inc
adc
push
xor
sbb
add
push
inc
push
mov
insb
xchg
pop
icebp
add
subb
inc
jl
sahf
outsb
push
sub
push
mov
jmp
xchg
mov
or
mov
daa
rclb
insb
inc
inc
xchg
jne
shlb
sbb
mov
bound
mov
add
add
gs
lcall
mov
int
sbb
pushf
dec
push
dec
mov
shll
or
test
shrl
sar
add
int
sbb
push
push
rcrb
add
or
mov
insb
rolb
imul
mov
outsl
mov
add
scas
mov
sarb
mov
sub
bound
sbb
les
mov
push
rorb
add
add
pushf
ret
xchg
lds
xchg
add
cmpsb
js
les
inc
inc
add
cmpsb
adc
mov
add
adc
lods
insl
pop
movl
add
adc
hlt
or
jne
mov
or
sub
jecxz
adc
rorl
mov
inc
std
pushl
jb
sub
shrl
into
adc
push
sti
cmp
add
inc
and
jg
and
inc
xchg
movsb
lret
add
sbb
adc
or
les
xchg
in
into
shl
fwait
mov
inc
insb
or
inc
mov
cmp
rcrb
mov
outsl
and
je
add
sbb
fs
or
call
inc
mov
sbb
lock
push
mov
and
cwtl
aaa
movsl
jle
cmp
inc
jbe
inc
mov
shrl
push
pusha
arpl
lods
daa
popa
cmp
xchg
jne
movsl
int
in
dec
lcall
je
popf
xor
add
jl
sbb
push
mov
inc
push
sahf
mov
xchg
push
int
fldl
inc
icebp
andl
and
mov
je
mov
loopne
arpl
add
ret
mov
jl
call
push
jns
mov
popa
xor
dec
in
add
add
mulb
cmc
lcall
scas
inc
pop
add
insb
cmp
pop
shl
add
mov
insl
call
loop
les
and
insb
loop
adc
add
pusha
fisubs
xor
sub
xchg
xor
add
inc
cmpsl
repnz
ss
lcall
add
inc
xor
mov
push
xchg
jo
and
mov
hlt
and
push
in
add
bound
mov
pop
aam
jno
lcall
fcomps
inc
rorl
push
push
pusha
jo
out
add
sbb
jb
lcall
add
mov
push
sahf
sub
outsl
push
mov
lcall
testb
inc
jbe
cmp
filds
pusha
es
popw
push
or
incl
lahf
pushw
lods
loopne
popa
movsb
mov
test
add
dec
jp
pusha
adc
bound
xchg
fs
ja
dec
loop
nop
mov
adc
insb
mov
shrb
les
das
inc
jo
dec
notl
jge
sbb
or
fwait
mov
imul
or
lcall
jle
mov
adc
jae
sbb
and
add
jg
out
fcomps
push
cld
out
mov
sub
and
outsb
cld
mov
pusha
sbb
pop
adc
bound
popa
dec
in
loopne
push
in
decl
and
add
xor
outsl
outsl
xchg
imul
loop
xlat
call
movsb
mov
adcb
dec
dec
inc
stos
loop
mov
mov
fcmove
dec
xor
add
cwtl
fsubrl
mov
inc
pop
sub
pusha
pusha
pop
push
std
popa
add
popa
push
adc
push
or
dec
gs
add
xchg
pusha
ja
add
xchg
or
shlb
mov
test
jae
arpl
jo
add
pop
adc
cld
inc
pop
jo
lcall
mov
insl
outsl
mov
add
ljmp
pop
ja
outsl
cmpsl
stos
sub
and
sub
jbe
data16
jbe
dec
jne
jne
sub
decl
jecxz
lock
push
xor
inc
xchg
ja
add
call
inc
je
add
cmp
and
test
rcrb
fistl
test
dec
jo
xorb
add
or
xor
fs
call
cmpsl
add
pop
gs
jo
add
add
lods
sbb
insl
mov
and
add
inc
ja
sub
inc
mov
or
xchg
sbb
mov
push
aaa
sbb
sbb
inc
xor
inc
mov
mov
in
arpl
pusha
add
fisttps
jmp
cs
insl
movsl
lods
enter
adc
scas
fucomi
fwait
test
jp
hlt
inc
adc
or
or
fcomip
inc
mov
leave
in
mov
add
add
lock
mov
sub
mov
pop
std
and
add
jmp
inc
mov
mov
push
add
xor
mov
pop
lock
mov
xor
dec
adc
xchg
shll
loopne
push
or
xchg
lcall
inc
test
add
cmp
inc
cwtl
fisttpll
jmp
subl
jbe
add
repnz
jnp
es
scas
pop
stos
pop
scas
add
pushl
cli
inc
adc
aam
add
jmp
dec
test
cmc
or
int3
xchg
icebp
cmpsb
scas
mov
repnz
mov
loope
enter
mov
dec
dec
loopne
in
insb
cmp
inc
mov
push
mov
or
lds
lcall
inc
push
sub
pop
and
push
add
jg
aaa
popa
cs
mov
je
and
add
clc
repz
fldl
mov
jle
add
les
int3
int
cli
dec
test
cld
sti
aas
mov
jg
mov
sub
fs
mov
xchg
outsb
in
add
sub
out
sar
add
pop
pop
dec
shl
aas
das
add
and
and
aas
mov
loope
cld
or
xchg
aas
int3
scas
mov
xchg
jmp
out
cmp
add
aas
rolb
dec
pop
loope
les
mov
insl
les
mov
aas
and
addr16
push
clc
decl
iret
xchg
aas
loop
add
jp
jl
pop
roll
ljmp
or
pop
aas
sub
das
stc
add
inc
dec
shlb
hlt
movsl
daa
ljmp
mov
inc
das
fstl
pushf
add
scas
mov
push
int3
fcoml
xchg
cmpl
cli
pop
std
incl
shrb
jge
xchg
mov
and
bound
dec
call
push
inc
push
outsl
clc
inc
clc
mov
jne
fldt
cmp
jno
rcr
adc
out
mov
pop
cmp
outsl
clc
outsl
incb
movsl
andb
adc
test
adc
ljmp
sub
push
add
imul
fisubs
hlt
push
std
ret
call
mov
xchg
cmp
mov
stos
das
push
and
mov
gs
stc
xchg
jge
add
icebp
lahf
xor
enter
or
sub
sbb
andb
cmp
jp
ljmp
test
inc
jl
add
mov
mov
push
push
adc
jge
add
test
fistps
xchg
daa
sti
or
push
add
sub
mov
lret
popa
movsl
adc
std
fwait
sti
add
std
mov
or
jno
sub
pushf
sti
add
or
les
les
scas
imul
push
scas
test
adc
sub
lods
mov
dec
scas
cmp
xor
js
cmp
add
add
sbb
add
xor
js
cmp
or
pop
or
push
fistpl
xor
lds
jle
pop
inc
or
jbe
mov
incl
mov
or
mov
ret
movl
flds
stos
sbb
aas
or
aaa
fistl
pop
addl
push
mov
iret
add
push
fidivl
dec
imul
add
out
sti
inc
push
pop
push
lods
jns
adcb
and
dec
aaa
fwait
cmpsb
imul
arpl
incl
mov
cltd
sti
pop
cmpl
add
jae
dec
shll
ja
jg
xchg
add
xchg
test
aas
mov
aaa
add
aaa
jmp
sbb
dec
cld
int
sub
lret
cmp
mov
cmp
insb
cmp
int
mov
imul
cmp
cmp
mov
jae
call
add
repz
fstpt
add
ret
ds
ds
push
and
push
mov
in
push
xchg
loopne
test
jae
xchg
arpl
movsb
ds
int
mov
inc
les
xor
and
in
adc
add
add
outsl
jg
aas
xrelease
jecxz
and
rcll
xor
ret
aas
fidivl
adc
aas
fs
xchg
jle
xchg
frstor
add
aas
adc
cld
lods
fcoml
mov
inc
aas
les
xor
xchg
fwait
int3
enter
or
aas
add
cmp
call
add
inc
pop
add
or
sbb
adc
xchg
shl
lret
mov
scas
cmpl
insb
xor
xor
cld
int
imul
xor
lods
jb
dec
xchg
test
data16
rorb
mov
fdivl
sbb
jb
cld
in
mov
sub
xor
mov
sbb
sub
lret
xor
mov
int
stos
xor
xor
jl
jnp
mov
pushf
xor
dec
sub
mov
cld
insl
int3
xor
xor
xor
cld
xor
xor
xor
xor
cmp
mov
pop
xor
fwait
insb
mov
jl
jnp
mov
pushf
xor
lods
dec
xor
xor
pop
xor
xor
xor
cld
stos
xor
xor
sbb
sub
mov
xor
mov
pop
xor
or
add
adc
mov
cld
dec
loop
sub
fdivl
sbb
in
or
cld
xor
pusha
xor
adc
popa
mov
inc
adc
outsl
add
mov
insb
adc
popa
repz
adc
pushf
xor
xor
dec
xor
adc
or
xor
adc
push
push
les
jnp
xor
xor
mov
adc
xor
dec
stos
xor
insb
or
adc
inc
add
inc
xchg
adc
xor
in
or
neg
aaa
ret
ss
mov
sbb
sub
add
add
add
jno
pop
ds
dec
cmp
jle
aas
pop
loopne
mov
inc
insb
add
sar
add
add
test
pop
je
dec
das
pop
push
cmp
lea
insb
cmp
push
push
les
std
pushl
lret
adc
cmp
pop
cmp
and
ds
push
stc
aas
adc
or
sbb
inc
adc
mov
inc
mov
and
lahf
mov
mov
xchg
adc
mov
push
inc
add
xor
xchg
sahf
xor
incl
sub
xor
inc
xor
xor
and
and
int3
xchg
xor
cwtl
std
in
lcall
and
dec
xor
leave
and
xor
icebp
adc
mov
mov
adc
divb
sub
fidivl
and
in
push
ss
ss
fdivs
les
push
add
push
movsl
adc
cmp
add
cmp
mov
out
cmp
cmp
cmp
sub
decl
mov
xchg
cmp
push
cmp
stos
jle
mov
sbb
lock
cmp
cmp
cmp
cmp
cmp
cmp
cmp
add
add
adc
cmp
cmp
push
shrb
cmp
icebp
lahf
andb
adc
xchg
and
pusha
ja
rcll
mov
incl
stos
push
add
xor
xor
mov
call
dec
mov
inc
shll
or
into
cmp
cmp
cmp
inc
adc
mov
ss
cmp
add
add
insl
add
cmp
out
repnz
cmp
aam
add
insl
cmp
cmp
jbe
iret
mov
sub
add
add
sbb
cwtl
ds
ds
xor
push
jg
xchg
inc
loopne
xor
aad
adc
les
add
ret
xlat
add
loopne
out
fildll
mov
xor
xchg
xor
xor
mov
adc
fnsave
fdivs
dec
xor
add
loopne
or
mov
pop
jb
cmp
adc
sub
insl
out
push
cmp
cmp
cmp
pop
cmp
lret
mov
nop
pusha
or
les
dec
xor
or
xor
cmp
mov
xor
push
aaa
test
lock
idivb
int
sub
fnstcw
sbb
cld
mov
cmp
mov
aaa
sbb
lods
cmp
sub
aas
fistpll
xor
je
mov
pop
aas
pushf
and
mov
movsl
sub
mov
cmpsl
xor
cmp
outsl
clc
or
lea
dec
push
fidivl
rdtsc
cli
data16
dec
das
cli
pushl
stos
xor
in
jecxz
adc
shlb
or
xor
xor
ss
inc
pushl
xor
xor
or
sub
and
pushl
cmp
or
das
sbbb
cmp
lret
pusha
dec
or
fnstsw
push
cmp
add
out
or
outsl
cmp
cmp
mov
je
nop
cmp
cmp
cmp
ds
mov
loope
jg
pop
mov
push
outsb
jo
sbb
out
mov
lcall
add
dec
rclb
xor
xor
rcr
mov
popf
xor
xor
xor
andb
das
xor
xor
adc
hlt
mov
insl
ss
push
divl
push
aaa
jmp
aaa
push
adc
aaa
cs
aaa
inc
scas
aaa
pop
aaa
xchg
aaa
jne
aaa
call
inc
aaa
push
aaa
mov
inc
nop
add
cmp
adc
divb
jg
cmp
cmp
cmp
cmp
cmp
cmp
adc
jae
lret
cmp
jecxz
pop
fs
cmc
cmp
ds
ds
loop
test
lock
ljmp
xor
push
inc
nop
push
cwtl
xor
jl
push
sti
jg
pop
enter
xor
inc
xor
fstl
adc
das
jp
push
cmp
cmpsl
adcl
mov
inc
mov
test
ss
testl
aaa
adcl
lcall
pushl
cli
adc
cmp
rclb
cmp
les
popf
cmp
lds
fstpt
call
sub
mov
adc
ljmp
adc
dec
aas
jb
sbb
call
es
inc
xor
xchg
xor
nop
sbb
xor
scas
divb
bound
pop
sbb
sbb
pushf
ss
jg
and
lock
gs
cmp
cmp
sub
cmp
push
aas
and
add
subb
enter
mov
les
cmp
cmp
ss
outsl
nop
jl
repz
adc
xorl
jo
add
ljmp
sub
cmp
sarl
imul
cwtl
jnp
inc
cmp
cmp
pop
cmp
mov
sbb
call
aad
repz
add
push
mov
or
xchg
lock
mov
pushl
xor
xor
nop
pop
xchg
xor
pusha
and
adc
mov
inc
xor
xor
xlat
xor
arpl
out
dec
filds
adc
dec
mov
ss
ss
ss
or
ss
rolb
rcrl
dec
pop
fsubrl
daa
ss
das
ss
push
inc
xchg
aas
ss
dec
lods
ss
movsb
ss
ss
inc
inc
repz
adc
ja
adc
mov
sbb
cld
aaa
pop
aaa
hlt
aaa
getsec
add
mov
in
in
pop
adc
aaa
daa
aaa
aam
das
int3
aaa
add
aaa
aas
aaa
add
push
mov
dec
aaa
lods
aaa
or
movsb
push
sbb
aaa
outsl
aaa
mov
ja
sbb
mov
jl
xchg
je
aaa
insb
aaa
xchg
aaa
ficomps
mov
clc
fistl
dec
dec
aaa
insl
cmp
or
sbb
notb
sar
adc
xor
aad
push
jge
incl
xor
xor
dec
add
push
in
jne
pushl
dec
xor
jnp
xor
xor
add
lods
push
in
fsts
ss
xor
xor
sub
fsubs
dec
mov
xlat
fcomip
outsl
adc
mov
pop
nop
or
imul
lods
push
xchg
es
cmp
xor
cmp
cld
in
aaa
leave
fidivrl
jne
lods
cmp
std
cmp
cmp
cmp
insl
cld
call
insl
cmp
cmp
cmp
cmp
mov
sub
aas
decl
cmp
xor
in
sub
rclb
loopne
xchg
jl
int
add
inc
shll
and
ja
js
divb
cmp
add
jmp
xor
adc
xor
xor
xor
ljmp
rorb
inc
jo
sbb
jle
or
xor
add
jo
enter
and
ss
adc
aaa
mov
push
mov
xorl
loop
cmp
add
cmp
mov
xchg
adc
cmp
jnp
outsl
imulb
xor
adc
cmp
cmp
or
push
cmp
cmp
cmp
push
cmp
cmp
imul
clc
pop
insb
add
daa
cmp
cmp
subl
cmp
add
pop
adc
ds
adc
add
loop
ljmp
les
add
std
xor
xor
jp
xor
jp
xor
ja
sub
mov
push
inc
xor
mov
dec
add
and
rcll
rcrb
add
jp
xor
pushl
or
jns
ja
sahf
adc
pop
rclb
xor
loope
jg
xchg
jle
test
xchg
cmp
or
mov
push
cmp
les
cmp
cmp
and
aad
push
std
cmp
cmp
cmp
into
ret
mov
mov
xor
cmp
cmp
and
cmp
cmp
cmp
inc
cmp
inc
cmp
push
sti
ja
cmp
dec
cmp
mov
stos
hlt
add
inc
aas
loop
mov
add
mov
movsb
xor
jbe
xor
filds
test
pop
xor
imul
jecxz
push
xor
xor
xor
xor
repz
int
push
cli
jge
outsl
xor
xor
loop
push
inc
pop
lods
jmp
pushl
xor
cmp
and
xor
xor
xor
imul
dec
xor
dec
push
es
lock
xchg
xor
ss
into
pop
hlt
aaa
adc
aaa
or
in
cmp
dec
cmp
cmp
cmp
jg
cmp
cmp
and
loope
pusha
add
add
inc
cmp
jbe
xor
shll
sbb
sbb
push
adc
sub
dec
jbe
lock
jo
pusha
test
cmp
out
clc
ljmp
mov
push
cmp
sti
cmp
jle
mov
jp
call
cmpsl
nop
cwtl
or
dec
mov
test
cmp
lock
outsb
aas
jmp
sub
mov
mov
xor
shlb
dec
dec
mov
inc
xor
fistpl
push
cld
xor
xor
xor
lcall
in
fisubl
cmp
out
clc
inc
cmp
cmp
cmp
cmp
cmp
insl
cmp
div
push
adc
cwtl
pop
mov
jecxz
xor
mov
sbb
mov
ret
mov
push
clc
pop
or
pop
xor
fidivs
sbb
push
fisubrl
jg
jg
xor
icebp
mov
sarb
adc
fnsave
adc
xchg
mov
test
cmp
cmp
cmp
sbb
fnstcw
cmp
outsl
aaa
addl
adc
cmp
loopne
cmp
or
cmp
cmp
test
pop
in
xchg
add
jne
cmp
cmp
cmp
jo
mov
inc
cmp
xchg
mov
sahf
repnz
cmp
cmp
cmp
cwtl
and
cmp
xlat
adc
ds
les
pushl
ds
ja,pt
jbe
mov
xor
add
jo
aas
test
xlat
scas
aas
fs
aad
nop
add
call
pop
push
xor
leave
xor
scas
xor
add
call
mov
xchg
xor
xor
and
and
out
jb
and
mov
lds
in
mov
rol
popa
xor
scas
insb
xor
shll
and
enter
jg
cmpsb
xor
mov
popf
xor
test
xor
cld
ljmp
jmp
fidivs
dec
ss
xchg
mov
add
insb
shl
mov
test
jle
aaa
shlb
or
pop
orl
int3
in
cli
adc
cmp
loope
clc
sbb
iret
cmp
cmp
cmp
sbb
sub
sarb
xor
cmp
adc
cmp
cmpsb
cmp
cmp
adc
lods
sbb
jl
cmp
cmp
pushf
cmp
outsb
dec
pop
std
cmp
cmp
cmp
fnstsw
lret
jle
mov
loop
adc
cmp
cmp
call
clc
cmp
xorb
cmp
mov
inc
mov
add
outsl
fdivs
pop
loop
js
repnz
aas
mov
movsb
xorl
jmp
jg
push
std
and
xor
or
xor
adc
xor
shr
xor
pop
adc
xor
lcall
xor
xor
sbb
mov
mov
nop
and
xlat
adc
xor
xor
xchg
adc
mov
adcb
dec
jl
lock
sbb
repnz
std
mov
add
xor
xor
xor
mov
xor
xor
adc
clc
fsubs
mov
push
dec
push
adc
decl
xor
xor
xor
xor
mov
add
sbb
ja
sbb
jl
add
adc
adc
divb
adc
fbld
fisubs
jbe,pt
pop
push
insb
aaa
nop
imul
pop
test
sub
addb
push
push
cld
adc
mov
mov
imul
aaa
sub
jg
cs
jp
cli
jb
sbb
cmp
cmp
mov
cmp
repz
cmp
push
sahf
pop
cmp
lret
cmp
popf
cmp
int
icebp
cmp
cmp
xor
pop
cmp
cmp
test
push
sub
adc
stos
cmp
pop
fisttps
adc
aas
mov
xchg
fisubrl
data16
sbb
cmc
aas
add
add
xchg
lret
clc
add
mov
jb
fidivl
pop
orb
lock
loope
xor
xor
xor
xor
xor
int3
fistpll
xor
xor
mov
mov
data16
outsb
mov
dec
xor
xchg
mov
jg
and
xor
push
mov
xor
add
pop
movsl
sub
cld
sub
add
ret
cmp
mov
ret
lcall
cmpsl
shlb
inc
fiadds
icebp
test
mov
shll
dec
or
inc
in
fildll
fistps
cli
xor
inc
jp
xchg
xor
ret
std
add
xor
xor
lahf
xor
pop
or
cmp
cmp
cmp
cmp
dec
mov
shr
inc
pop
cmp
into
aas
gs
fwait
or
outsl
ret
xchg
ljmp
or
ja
xor
cwtl
xor
arpl
ret
xor
decb
add
mov
xor
inc
xor
int
cmp
xor
sub
xor
decb
adc
xor
or
add
shr
push
cld
js
sbb
loop
and
rclb
xor
int
cld
ss
ss
mov
push
ss
ss
mov
pop
popa
inc
jle
xchg
ss
mov
jns
xorb
adc
stos
jbe
aam
ss
adc
bound
mov
cmp
rolb
outsb
mov
dec
cmp
cmp
or
and
mov
jae
jbe
or
xchg
cmp
cmp
adc
cmp
cmp
imul
int3
cmp
cmp
push
cmp
adc
nop
cmp
push
lods
loope
lods
add
dec
mov
loop
push
pop
and
and
cmp
fildll
dec
cmp
xchg
fdivp
aaa
adc
testl
pop
ds
sbb
aas
xchg
aas
leave
test
mov
loopne
push
xor
xor
std
push
aaa
push
pop
loopne
adc
cmc
xor
xor
pusha
imulb
stos
divb
mov
push
shlb
xor
loope
fidivl
lret
bound
ljmp
mov
cmp
std
cmp
cmp
and
mov
adc
cmp
cmp
cmp
cmp
mov
mov
or
es
fdivrs
mov
mov
ja
bound
mov
pusha
lea
cld
cmp
and
and
and
mov
pusha
sbb
mov
add
sbb
cmp
cmp
sbb
xchg
fiaddl
cmpb
pusha
cmp
fnstcw
jne
inc
std
lahf
out
aas
hlt
lock
mov
popa
xor
xchg
iret
cmp
xor
dec
mov
xor
clc
mov
xchg
jno
shr
xor
and
push
or
ss
cmp
ss
stos
inc
mov
cmp
cmp
loope
sub
cmp
loopne
mov
cmp
bound
ds
cmpb
mov
arpl
les
push
mov
push
jecxz
cmpsb
add
add
imul
sbb
xor
xor
adc
xor
mov
test
or
xor
mov
mov
dec
adc
fildl
mov
jg
pop
lret
aaa
xchg
aaa
pusha
aaa
mov
stos
cmp
mov
pushl
cmp
cmp
cmp
cmp
adc
cmp
cmp
cmp
loope
add
push
pusha
inc
adc
or
ret
add
test
hlt
cmp
cmp
fbld
cmp
push
fists
jl
mov
and
cmp
cmp
cmp
and
xor
ret
cmp
pusha
fwait
cmp
mov
fsubl
sub
loope
fiadds
mov
mov
dec
ds
adc
xchg
outsl
ds
stos
outsl
clc
mov
faddl
add
sub
xor
andl
int
lds
loopne
out
xor
xor
inc
inc
jp
jo
push
out
xchg
loopne
in
aad
cwtl
xor
pop
in
pushl
push
push
lea
pusha
mov
or
fsubs
iret
inc
mov
mov
cmp
cmp
cmp
push
cmpl
pusha
test
fsubp
push
ds
aas
cmpsl
aas
test
aas
pop
loope
and
addb
mov
test
push
or
int3
out
lret
xor
xor
xor
and
loopne
test
adc
xor
adc
xor
xor
xor
xor
loopne
cmpb
jle
ljmp
adc
in
cmc
mov
shlb
outsb
sarb
ss
ss
mov
add
and
add
stos
xchg
aaa
out
jb
and
insb
and
mov
movsb
mov
in
mov
cmp
cmp
stos
xor
push
loopne
mov
push
inc
and
clc
or
mov
xchg
xor
xor
xor
xchg
xor
test
lret
incb
jno
dec
xor
cmp
xor
xchg
mov
aaa
jge
test
les
sbb
jmp
das
stos
cmp
cmp
data16
and
mov
cmp
loop
or
inc
loopne
pusha
fwait
aad
xor
scas
xlat
cli
aas
xor
push
les
loopne
les
xor
jnp
fisubrs
faddl
lock
mov
mov
mov
inc
cmp
pop
lock
xor
stos
mov
sbb
push
adc
xrelease
mov
pop
xor
xor
xor
ja
fbstp
and
xor
xor
xor
mov
xor
push
incb
popa
xor
xor
lock
xor
and
xor
cmpsl
xor
or
stos
pop
pop
sub
mov
xor
sub
pop
gs
xor
xor
xor
xor
xor
xor
adc
ljmp
sub
or
xor
jo
cmp
xor
xor
divb
cld
xor
jl
jo
jnp
jbe
mov
imul
xor
adc
ret
adc
add
xor
xor
fwait
mov
xor
xor
shll
xor
rolb
aaa
fwait
cmpsb
outsb
xchg
insl
mov
das
xchg
cmpsb
aaa
add
add
cmp
adc
cmp
loop
flds
sbb
mov
push
dec
cmp
ds
ds
shl
push
stos
lock
add
loopne
add
cmp
or
mov
lcall
mov
push
push
nop
xor
inc
xor
xor
pusha
ja
cli
aaa
cwtl
aaa
sub
leave
aaa
pop
cmp
shll
sbb
incb
jo
push
cmp
aas
into
lock
decl
pop
add
add
fdivs
dec
rclb
or
xor
mov
xor
xor
xor
add
xchg
xor
out
mov
pop
mov
dec
aaa
lret
aaa
lds
loopne
lcall
cmp
outsl
cmpsb
mov
jbe
or
sbb
jl
pop
sarl
mov
xchg
ljmp
divb
and
int
xor
xor
popa
stos
fwait
mov
nop
push
xor
xor
xor
and
add
icebp
sbb
add
bound
ljmp
cmpl
or
add
cwtl
imul
adc
pop
xchg
inc
sti
fistpll
aaa
fs
mov
mov
stc
fstpt
nop
adc
mov
xor
pop
cmp
fidivrs
sub
dec
cmp
pop
push
cmp
cmp
loope
cmp
add
cmp
stos
shrb
cmp
cmp
cmp
jg
stos
fs
push
dec
das
out
cmp
cmp
cmp
ja
add
add
push
nop
sbb
inc
push
pop
fcomip
pop
loopne
cmp
cltd
ds
faddl
aas
icebp
aas
cmp
js
aas
loopne
sahf
add
or
pop
aam
adc
call
nop
subl
incl
add
xor
clc
push
shrl
xor
add
clc
xor
hlt
mov
push
jle
pop
popa
cli
cmp
jl
lock
xor
lock
in
lcall
cli
ds
mov
out
aas
pop
lock
push
test
dec
aas
scas
aas
pop
aas
sahf
adc
mov
jnp
jle
loopne
push
imul
aas
push
adc
sbb
mov
mov
xchg
mov
nop
cli
das
cli
das
cmp
push
rolb
cmpsl
xor
sti
call
sub
addr16
mov
scas
xor
insb
es
xor
cmpsl
mov
outsl
mov
mov
mov
jb
xor
lock
add
loopne
pusha
sub
insb
add
loop
fadds
leave
rolb
jo
cmpb
aam
hlt
lock
inc
loopne
adcb
lret
fwait
xor
shlb
adc
lea
insb
aam
add
or
pop
adc
and
mov
adc
fildll
and
xor
inc
sti
or
addr16
stos
push
lock
add
ss
mov
and
aam
pop
in
pop
in
lcall
mov
aaa
push
divl
jg
fwait
les
out
aaa
adc
out
sbb
fbstp
and
xlat
sub
iret
cli
incl
or
mov
pop
aaa
add
add
jo
mov
jecxz
loopne
aaa
fadds
cli
jg
ud0
in
mov
add
and
jne
pop
lock
sbb
lods
push
stos
cmp
data16
sbb
aam
adc
in
iret
xchg
insl
or
mov
xchg
dec
mov
unpckhps
adc
outsl
xchg
mov
adc
pop
ret
add
sub
sbb
rcrb
inc
cli
sbb
jnp
jae
mov
decl
icebp
int
ss
aas
or
nop
lcall
add
pop
sar
fiadds
loopne
scas
add
js
cmpb
pop
push
jmp
add
xor
test
dec
inc
in
and
and
incl
call
std
inc
jg
mov
daa
fcoml
pop
mov
outsl
out
fdiv
addr16
add
push
mov
pop
mov
call
shrl
xor
adc
jg
and
repnz
cmc
adc
mov
lcall
std
dec
mov
test
xchg
lock
sub
ljmp
into
loopne
pop
std
call
jl
ror
pop
sub
add
xchg
cmp
dec
add
and
into
mov
mov
stos
pop
dec
jl
mov
or
mov
sar
adc
dec
xchg
jg
push
cli
into
add
cmpsl
test
cs
call
push
mov
jecxz
push
xor
mov
and
arpl
cmc
andb
aaa
dec
es
outsb
fisubs
or
jp
bound
mov
int
pop
hlt
in
subl
sbb
mov
lahf
aaa
sub
mov
mov
cmpsl
mov
insb
out
add
push
cmp
jle
add
or
jmp
add
hlt
cwtl
adc
mov
mov
fbld
sub
leave
cmp
and
xchg
add
test
rcrb
std
mov
clc
or
test
add
rol
mov
or
xchg
cwtl
mov
mov
cmpsb
fldt
pop
ljmp
and
pop
push
in
movsb
mov
jg
movsb
sub
cmpl
aas
std
roll
inc
cmp
mov
mov
jnp
adc
adc
xchg
inc
mov
loope
pop
decl
fiaddl
sub
xor
xchg
ljmp
shrl
sbb
ljmp
sub
fsubl
ds
jecxz
test
daa
xor
add
repnz
inc
int3
pop
mov
push
jb
sub
pop
xlat
mov
mov
lahf
lds
lods
rcrb
decl
loop
mov
xor
sbb
js
xchg
or
ljmp
sbb
incl
dec
sub
adc
mov
pop
aad
push
lods
out
into
aaa
sbb
jg
lcall
xlat
xor
dec
mov
push
js
mov
cmp
iret
jnp
jmp
mov
mov
mov
in
ret
sub
xchg
cmp
into
fidivrl
lcall
incl
adc
lahf
ds
mov
cmpsl
pop
jmp
xchg
add
outsb
adc
incl
cmpl
dec
fnstsw
ss
nop
test
imul
mov
pop
xlat
lret
pushf
cmp
cmp
jp
inc
push
decl
test
jno
sub
pusha
sub
and
dec
loop
out
pop
clc
ljmp
jmp
xchg
xchg
nop
in
insb
jno
sub
push
shll
xor
ffreep
pushl
mov
cmpsb
sbb
fwait
and
xchg
movsl
mov
pusha
push
aaa
loop
jno
aam
sbb
insb
xor
sub
sbb
popf
cmc
inc
inc
jg
call
xchg
sub
lods
mov
andl
pop
jmp
imul
adc
test
negl
into
repnz
movsb
sub
pop
ljmp
clc
and
fdivl
test
cmp
outsb
and
mov
sti
or
jmp
jo
sbb
cli
jbe
fcmovnb
sbb
adc
mov
jg
loop
mov
mov
add
pop
jecxz
jno
test
je
lods
arpl
sbb
lods
and
testl
ljmp
out
pusha
nop
ja
inc
xchg
inc
stos
loop
inc
mov
xchg
leave
cmpsb
cmp
sbb
sub
fmulp
add
push
pop
jo
push
arpl
mov
fld
lcall
jg
jg
ljmp
dec
roll
mov
idivl
lods
mov
sti
iretw
sbb
add
hlt
ret
sub
xchg
insl
dec
pop
pop
ret
incl
or
adc
shr
fdivrs
pop
shlb
fidivrs
lock
and
xchg
mov
jno
adc
mov
push
sbb
xchg
rcrb
pushf
dec
jle
stos
out
xchg
imul
mov
mov
fdivl
ds
insl
enter
incl
or
shlb
push
mov
and
in
dec
ljmp
mov
add
arpl
cmp
adc
ret
addr16
call
sbb
aaa
push
lahf
pop
loope
xlat
and
mov
repnz
inc
mov
push
lcall
dec
push
sub
pop
pop
push
int
jne
lcall
fimull
roll
pop
pop
icebp
lcall
xchg
outsl
fdivl
mov
mov
dec
dec
xchg
push
inc
or
insl
pop
jg
push
mov
sub
repz
or
jne
subb
jo
call
push
bound
mov
cmp
ljmp
push
nop
push
inc
in
push
or
or
add
lret
call
std
lcall
mov
sub
push
inc
stos
jg
lret
adc
adc
dec
mov
jg
mov
or
fcomps
sbb
push
inc
divb
xor
loopne
decl
pop
or
or
pop
lret
and
ret
sub
xor
adcb
jg
mov
sub
cs
sub
pop
push
fcomi
incl
cld
aad
cwtl
xchg
lret
and
add
sub
in
mov
mov
call
push
mov
fmulp
bound
movsb
adc
mov
sub
jbe
jecxz
mov
push
mov
push
cli
adc
push
inc
mov
xchg
jmp
jmp
xchg
push
jl
sub
lock
data16
shlb
in
and
cmp
dec
lds
mov
xor
incl
inc
iret
insl
mov
mov
iret
loope
pusha
in
xchg
int3
dec
mov
mov
adc
andl
out
int
imul
out
insb
jmp
or
lcall
out
decb
jge
or
out
cmc
cmp
xlat
xlat
sbb
call
je
sbb
cmpsb
lcall
roll
lahf
inc
mov
negl
fidivrs
and
adc
fwait
clc
fs
sbb
jo
inc
mov
ss
notb
fcmovnb
adc
lds
mov
insb
sub
call
test
ljmp
into
lcall
int
mov
into
pop
mov
sbb
jae
mov
cmp
sbb
sbb
xchg
int3
jmp
dec
mov
lahf
arpl
add
stos
movaps
jnp
add
decl
fdivs
jb
jp
clc
subb
imul
lock
sbb
mov
rol
mov
outsb
mov
and
xor
or
bound
push
sub
xchg
pop
sbb
repz
jp
sahf
xor
das
dec
mov
les
lcall
jge
push
jmp
dec
subb
data16
mov
xlat
enter
decl
aaa
cmp
sub
fdivl
into
addb
and
ret
jmp
xchg
push
out
stos
imul
insb
jne
out
loopne
mov
ds
mov
inc
jnp
add
sarb
call
call
out
bound
and
inc
cmp
add
fst
push
mov
xor
pusha
push
mov
cs
pushl
jle
cmc
or
jb
in
mov
sub
stos
push
sbb
adc
clc
call
cld
pop
pushf
or
cmp
or
aas
mov
add
add
pop
pop
stos
jmp
inc
pushf
ljmp
xor
sbb
or
fnstcw
push
mov
daa
xchg
ret
jg
movsl
pushl
inc
cli
pop
mov
sub
and
dec
test
dec
ljmp
cmp
stos
ss
test
sub
push
dec
or
cld
arpl
add
or
call
jle
cmpsb
adc
pop
xor
out
jmp
mov
movsb
cmp
mov
lcall
mov
push
leave
jns
push
or
mov
rcrb
and
repz
sub
mov
movl
aaa
mov
mov
sbb
std
xorb
inc
mov
xlat
lods
xchg
and
nop
jmp
cmpsl
push
cmp
xchg
orl
mov
mov
jmp
cmp
leave
lahf
scas
xchg
cmp
adcl
sbb
or
dec
les
pop
sbb
inc
iret
xor
dec
gs
push
dec
cmp
jg
push
stc
sahf
pushl
inc
lods
or
push
or
aam
inc
mov
sub
lcall
in
xchg
outsl
inc
push
sub
imul
bound
test
cmc
mov
frstor
into
push
ljmp
adc
add
lock
xchg
cmpsb
data16
rolb
decl
pop
and
and
loopne
insb
sbb
negl
mov
aas
test
shrb
inc
pop
rol
decl
xor
lock
inc
mov
jge
cmp
idiv
sbb
aad
pushf
mov
mov
cmc
jnp
and
xor
scas
jle
xor
mov
cli
jecxz
and
lret
shll
js
sbb
xor
xchg
cmpsl
dec
jg
pop
es
fsubs
push
cmp
popa
push
dec
cmc
lods
test
inc
in
ljmp
test
mov
jge
mov
lahf
divb
loopne
or
test
lcall
xchg
in
mov
pusha
jb
dec
pop
push
mov
sub
paddusw
push
mov
ljmp
push
rcrb
loope
sti
lea
outsl
call
movsl
pop
cmpsb
mov
xchg
ja
lcall
push
mov
fsub
rcrb
cmp
incl
sbb
cmc
cmp
jbe
dec
mov
mov
arpl
loope
sub
cmpsb
clc
sbb
mov
imulb
repnz
js
inc
inc
jmp
in
adc
test
idiv
ljmp
inc
jge
adc
or
into
mov
stos
lret
jg
mov
outsl
hlt
aaa
cmp
sub
push
ss
cmpsb
out
push
mov
nop
test
cld
incl
repnz
cmpsl
xor
and
sub
fcomps
incl
js
outsb
popa
scas
cmp
fimull
push
loop
dec
fisttps
pop
aas
loopne
loope
cld
mov
xchg
pop
lcall
sbb
adc
mov
fucomi
push
outsl
popa
jg
in
mov
push
shlb
outsl
inc
jl
fcmovnb
int
mov
add
ljmp
pop
js
test
cltd
aam
and
scas
pushf
movsb
cwtl
jp
mov
mov
fs
sbb
mov
cmp
popf
mov
pushl
mov
jb
cmc
xchg
test
or
sub
adc
cmp
and
inc
dec
mov
pop
out
lods
adc
cmp
aas
repnz
enter
mov
ds
push
or
sti
iret
inc
lahf
xlat
xor
cwtl
and
test
or
jmp
lds
push
js
movsb
inc
push
dec
cmp
cmp
mov
xor
jge
pushl
cld
pushf
mov
ljmp
pop
bound
pop
inc
sbb
sub
lds
pushl
stos
xchg
jbe
sub
icebp
cmp
xchg
cmpsb
xor
mov
sub
ret
sub
mov
call
enter
fs
in
je
mov
or
mov
or
in
lahf
pushl
mov
jbe
fwait
mov
lcall
sub
xchg
xchg
adc
adc
pop
filds
movsb
jmp
pop
xchg
mov
lcall
mov
sbb
jle
ret
nop
mov
cmpxchg
push
out
clc
xchg
push
xchg
ret
out
pushf
outsl
mov
mov
int3
xchg
loop
push
pop
jnp
push
xchg
inc
sbb
fs
cmp
cltd
outsl
push
sbb
cmp
fsubp
mov
jmp
daa
das
add
mov
mov
adc
cmp
pushf
stos
pop
add
jae
fildll
adc
jle
idivb
jae
add
cmp
incl
mov
jbe
jle
inc
cmp
iret
stos
mov
jmp
xor
sub
push
xor
and
or
out
push
xor
jmp
jae
jne
pop
xchg
jmp
dec
stc
sub
in
xor
xor
insl
mov
aad
and
pop
imul
push
jg
xor
push
aad
or
mov
sub
mov
mov
xchg
roll
ljmp
clc
in
mov
xchg
out
fs
jmp
cld
or
pop
push
icebp
inc
addr16
incl
pop
push
mov
mov
push
pop
movsl
dec
adc
or
push
fadds
pushl
gs
push
adc
xlat
or
cmp
cmp
sub
mov
decl
in
test
fwait
push
es
inc
jne
xorb
clc
cs
or
sarb
pushl
mov
scas
mov
adc
adc
nop
cltd
das
lea
mov
cli
and
and
into
mov
mov
int3
es
push
aam
and
xchg
inc
xlat
or
mov
lret
fcomip
decl
roll
mov
pusha
sub
lret
mov
insb
pushl
mov
loop
lds
test
inc
gs
pop
aad
js
sahf
mov
sbb
pop
movsl
decl
mov
outsl
bound
adc
imul
add
rcll
inc
pop
decl
stos
adc
addr16
nop
stos
pop
push
mov
aaa
mov
adc
and
cli
call
push
rcll
or
fdivrs
mov
lea
jbe
jnp
pushl
faddl
xorb
xchg
enter
adc
sbb
cli
popa
ja
jg
or
pop
pop
in
pop
shll
adc
ljmp
sub
cmpsl
fabs
xchg
sbb
les
fwait
xchg
in
std
and
pop
cli
ds
jle
out
orl
incl
sub
test
sub
push
dec
pop
mov
mov
sbb
mov
pop
push
inc
mov
ds
ror
push
jae
movsl
jmp
push
dec
sbb
sub
xchg
add
test
imulb
ja
xor
and
ljmp
cmp
bound
adc
fwait
inc
jnp
xchg
sub
fst
pop
fisttps
stos
push
mull
adc
loop
xor
mov
dec
jge
xor
lds
sbb
mov
sbb
sbb
mov
ret
mov
jmp
loopne
movsl
xchg
jge
push
mov
sahf
mov
add
xor
imul
cld
and
call
out
call
movsl
ret
adc
adc
xchg
fistps
sub
cmp
incl
in
jae
mov
jne
bound
imul
pusha
gs
out
push
ss
outsl
test
ljmp
sbbl
sbb
sub
pop
lods
aad
in
hlt
fs
cmp
sar
lcall
mov
pop
pusha
mov
jge
scas
mov
mov
cmp
or
jg
cmp
mov
ds
ss
pop
arpl
jmp
scas
push
push
xchg
and
enter
sub
jl
sub
xchg
jne
decl
fldcw
pop
xchg
and
scas
mov
pop
add
dec
and
adc
push
incl
push
fwait
testl
adc
xor
adc
test
dec
pop
adc
xchg
mov
xchg
cs
cltd
xor
xchg
mov
push
add
movsb
or
call
and
sahf
arpl
sub
xchg
aaa
mov
adcb
jnp
push
adc
pop
dec
jmp
mov
out
adc
sub
js
sbb
sub
jg
cmp
and
imul
stos
and
pop
adc
scas
ret
lahf
pop
or
inc
andl
jl
hlt
xchg
dec
call
push
insl
cwtl
lock
dec
jg
cmp
pop
shll
mov
call
adc
and
adc
push
and
test
pop
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
push
fiaddl
or
add
and
mov
adc
inc
lods
fistps
mov
add
add
imul
insb
gs
sbb
jb
lods
mov
popa
jne
je
inc
dec
inc
es
fs
push
lcall
shlb
stos
fidivl
stos
mov
outsb
arpl
gs
mov
pop
test
lcall
push
pop
outsb
ja
lods
not
sbb
insb
jae
cmpsb
push
fstp
pop
imul
dec
shlb
imul
inc
data16
std
xchg
push
and
inc
inc
insb
insb
or
movzbl
mov
loope
aam
xor
pop
xor
jae
popa
popa
fs
mov
in
bound
mov
insl
insb
lock
xorb
je
pop
mov
mov
jno
pop
popa
mov
fidivrl
sbb
sub
dec
mov
lock
add
jae
sbb
xorl
lcall
outsb
add
addr16
push
cmp
loop
addr16
bound
dec
push
dec
es
inc
sub
pop
sti
push
pop
add
pop
gs
rcll
add
adc
aam
or
in
fstl
dec
shlb
adc
mov
minps
mov
jge
add
lret
lahf
dec
inc
nop
test
mov
cltd
and
xor
inc
pop
lods
jno
dec
push
push
xlat
nop
mov
push
pop
fildll
sbb
imul
push
jno
fwait
inc
addl
sbb
jno
mov
test
or
pop
and
inc
sub
adc
adc
dec
add
adc
sbbb
bound
sbb
or
nop
leave
mov
and
sub
in
dec
inc
add
and
pop
rclb
push
sub
scas
pop
sbb
add
stos
or
loopne
add
data16
or
and
test
mov
push
in
shrb
addb
popf
mov
and
cwtl
adc
xchg
push
xor
daa
or
add
scas
add
push
inc
adc
xor
pushl
sub
xchg
addr16
subl
ss
loope
sbb
xor
pop
orb
rcrl
inc
mov
add
cwtl
adc
add
test
dec
cmc
dec
mov
inc
mov
repz
adcb
xor
jle
add
add
test
dec
ds
lret
bound
push
gs
push
repnz
fistpl
cmp
outsb
inc
jb
jbe
rcrb
das
and
mov
dec
jecxz
rol
xor
insl
xor
dec
sub
lcall
cmpb
imul
jns
data16
adc
stos
adcb
les
insb
push
inc
in
add
add
cmp
idiv
xchg
lret
loopne
popl
add
sbb
pop
daa
int3
xchg
inc
pop
add
mov
jnp
push
cmp
add
jne
imul
add
cld
dec
shlb
add
pop
jns,pn
je
je
fcmovnb
and
lcall
scas
in
jb
mov
mov
jle
inc
outsb
push
insl
fisttpll
cmpsl
add
nop
dec
shrb
fiaddl
dec
xor
add
movntq
jae
arpl
outsl
insl
mov
pop
call
adc
dec
ret
add
orb
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
adc
add
and
add
loopne
add
add
add
add
add
add
or
add
add
js
add
mov
add
add
add
addb
add
add
addb
add
inc
add
addb
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
nop
add
add
cmp
add
add
add
add
add
add
add
add
mov
test
add
add
add
add
add
add
add
add
loopne
add
in
xchg
add
add
add
add
add
add
add
add
or
add
rorb
add
in
add
add
add
add
add
add
add
xor
add
mov
cmp
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
add
add
test
add
pusha
xchg
cmp
add
add
add
add
add
add
add
add
rolb
add
inc
cltd
cmp
add
add
add
add
add
add
arpl
add
clc
add
addb
add
add
add
add
add
add
add
add
add
adc
add
add
xor
pop
add
add
add
add
add
bound
jo
lods
push
stos
ret
cs
lods
pushf
sub
iret
xchg
xchg
fnsave
push
lock
outsl
xchg
pop
out
add
inc
aam
adc
sub
fimuls
test
mov
pop
aas
imul
fisubl
push
push
mov
inc
aam
add
cmpb
imul
or
out
subl
dec
inc
in
and
and
shlb
ss
std
inc
jg
mov
fcoml
adc
and
sbb
out
push
xor
gs
pop
imul
inc
stos
and
repnz
adc
mov
lcall
imul
mov
inc
test
cltd
imul
scas
or
into
push
enter
pop
lock
sub
int3
aad
sub
sub
cmp
and
xor
popa
mov
enter
cld
cmp
scas
cli
into
jecxz
test
cs
sub
out
jns
mov
and
cmp
mov
pop
xchg
fldenv
cmc
adc
stc
bound
mov
fisttps
in
aas
jle
xchg
pop
fwait
mov
lahf
enter
cmp
aaa
inc
lods
jbe
mov
xchg
out
shrb
add
or
int3
push
ss
mov
ds
insb
or
mov
ljmp
xlat
leave
cmp
and
call
rcrb
mov
inc
jmp
push
test
cmc
cmp
cmp
mov
stos
pop
fcomi
gs
cmp
imul
mov
mov
sub
in
test
iret
jl
aas
std
sarl
xor
xchg
mov
fadd
push
fstpl
xchg
loop
repz
lret
and
icebp
bound
mov
fsubr
cmp
loope
fstps
mov
out
mov
or
pop
fnstcw
push
and
or
jno
and
mov
outsb
jp
sbb
jle
xchg
push
cmc
cmpsl
cmc
sbb
push
jp
sub
lods
das
lds
pop
aam
mov
dec
adc
jb
inc
xchg
aas
or
push
movsl
pop
inc
ret
sarl
movsb
xchg
dec
xor
int3
dec
or
or
hlt
push
in
test
loope
insl
aam
dec
push
pop
xor
mov
insb
jg
movsb
pop
sbb
xchg
movsb
aad
or
test
and
mov
jge
push
xor
popf
mov
sub
gs
jo
lods
push
stos
ret
cs
lods
pushf
sub
iret
xchg
xchg
fnsave
push
lock
outsl
xchg
pop
out
add
inc
aam
adc
sub
fimuls
test
mov
pop
aas
imul
fisubl
push
push
mov
inc
aam
add
cmpb
imul
or
out
subl
dec
inc
in
and
and
shlb
ss
std
inc
jg
mov
fcoml
adc
and
sbb
out
push
xor
gs
pop
imul
inc
stos
and
repnz
adc
mov
lcall
imul
mov
inc
test
cltd
imul
scas
or
into
push
enter
pop
lock
sub
int3
aad
sub
sub
cmp
and
xor
popa
mov
enter
cld
cmp
scas
cli
into
jecxz
test
cs
sub
out
jns
mov
and
cmp
mov
pop
xchg
fldenv
cmc
adc
stc
bound
mov
fisttps
in
aas
jle
xchg
pop
fwait
mov
lahf
enter
cmp
aaa
inc
lods
jbe
mov
xchg
out
shrb
add
or
int3
push
ss
mov
ds
insb
or
mov
ljmp
xlat
leave
cmp
and
call
rcrb
mov
inc
jmp
push
test
cmc
cmp
cmp
mov
stos
pop
fcomi
gs
cmp
imul
mov
mov
sub
in
test
iret
jl
aas
std
sarl
xor
xchg
mov
fadd
push
fstpl
xchg
loop
repz
lret
and
icebp
bound
mov
fsubr
cmp
loope
fstps
mov
out
mov
or
pop
fnstcw
push
and
or
jno
and
mov
outsb
jp
sbb
jle
xchg
push
cmc
cmpsl
cmc
sbb
push
jp
sub
lods
das
lds
pop
aam
mov
dec
adc
jb
inc
xchg
aas
or
push
movsl
pop
inc
ret
sarl
movsb
xchg
dec
xor
int3
dec
or
or
hlt
push
in
test
loope
insl
aam
dec
push
pop
xor
mov
insb
jg
movsb
pop
sbb
xchg
movsb
aad
or
test
and
mov
jge
push
xor
popf
mov
sub
addr16
jo
lods
push
stos
ret
cs
lods
pushf
sub
iret
xchg
xchg
fnsave
push
lock
outsl
xchg
pop
out
add
inc
aam
adc
sub
fimuls
test
mov
pop
aas
imul
fisubl
push
push
mov
inc
aam
add
cmpb
imul
or
out
subl
dec
inc
in
and
and
shlb
ss
std
inc
jg
mov
fcoml
adc
and
sbb
out
push
xor
gs
pop
imul
inc
stos
and
repnz
adc
mov
lcall
imul
mov
inc
test
cltd
imul
scas
or
into
push
enter
pop
lock
sub
int3
aad
sub
sub
cmp
and
xor
popa
mov
enter
cld
cmp
scas
cli
into
jecxz
test
cs
sub
out
jns
mov
and
cmp
mov
pop
xchg
fldenv
cmc
adc
stc
bound
mov
fisttps
in
aas
jle
xchg
pop
fwait
mov
lahf
enter
cmp
aaa
inc
lods
jbe
mov
xchg
out
shrb
add
or
int3
push
ss
mov
ds
insb
or
mov
ljmp
xlat
leave
cmp
and
call
rcrb
mov
inc
jmp
push
test
cmc
cmp
cmp
mov
stos
pop
fcomi
gs
cmp
imul
mov
mov
sub
in
test
iret
jl
aas
std
sarl
xor
xchg
mov
fadd
push
fstpl
xchg
loop
repz
lret
and
icebp
bound
mov
fsubr
cmp
loope
fstps
mov
out
mov
or
pop
fnstcw
push
and
or
jno
and
mov
outsb
jp
sbb
jle
xchg
push
cmc
cmpsl
cmc
sbb
push
jp
sub
lods
das
lds
pop
aam
mov
dec
adc
jb
inc
xchg
aas
or
push
movsl
pop
inc
ret
sarl
movsb
xchg
dec
xor
int3
dec
or
or
hlt
push
in
test
loope
insl
aam
dec
push
pop
xor
mov
insb
jg
movsb
pop
sbb
xchg
movsb
aad
or
test
and
mov
jge
push
xor
popf
mov
sub
push
add
in
lock
lods
push
stos
ret
cs
lods
pushf
sub
iret
xchg
xchg
fnsave
push
lock
outsl
xchg
pop
out
add
inc
aam
adc
sub
fimuls
test
mov
pop
aas
imul
fisubl
push
push
mov
inc
aam
add
cmpb
imul
or
out
subl
dec
inc
in
and
and
shlb
ss
std
inc
jg
mov
fcoml
adc
and
sbb
out
push
xor
gs
pop
imul
inc
stos
and
repnz
adc
mov
lcall
imul
mov
inc
test
cltd
imul
scas
or
into
push
enter
pop
lock
sub
int3
aad
sub
sub
cmp
and
xor
popa
mov
enter
cld
cmp
scas
cli
into
jecxz
test
cs
sub
out
jns
mov
and
cmp
mov
pop
xchg
fldenv
cmc
adc
stc
bound
mov
fisttps
in
aas
jle
xchg
pop
fwait
mov
lahf
enter
cmp
aaa
inc
lods
jbe
mov
xchg
out
shrb
add
or
int3
push
ss
mov
ds
insb
or
mov
ljmp
xlat
leave
cmp
and
call
rcrb
mov
inc
jmp
push
test
cmc
cmp
cmp
mov
stos
pop
fcomi
gs
cmp
imul
mov
mov
sub
in
test
iret
jl
aas
std
sarl
xor
xchg
mov
fadd
push
fstpl
xchg
loop
repz
lret
and
icebp
bound
mov
fsubr
cmp
loope
fstps
mov
out
mov
or
pop
fnstcw
push
and
or
jno
and
mov
outsb
jp
sbb
jle
xchg
push
cmc
cmpsl
cmc
sbb
push
jp
sub
lods
das
lds
pop
aam
mov
dec
adc
jb
inc
xchg
aas
or
push
movsl
pop
inc
ret
sarl
movsb
xchg
dec
xor
int3
dec
or
or
hlt
push
in
test
loope
insl
aam
dec
push
pop
xor
mov
insb
jg
movsb
pop
sbb
xchg
movsb
aad
or
test
and
mov
jge
push
xor
popf
mov
sub
in
lock
lods
push
stos
ret
cs
lods
pushf
sub
iret
xchg
xchg
fnsave
push
lock
outsl
xchg
pop
out
add
inc
aam
adc
sub
fimuls
test
mov
pop
aas
imul
fisubl
push
push
mov
inc
aam
add
cmpb
imul
or
out
subl
dec
inc
in
and
and
shlb
ss
std
inc
jg
mov
fcoml
adc
and
sbb
out
push
xor
gs
pop
imul
inc
stos
and
repnz
adc
mov
lcall
imul
mov
inc
test
cltd
imul
scas
or
into
push
enter
pop
lock
sub
int3
aad
sub
sub
cmp
and
xor
popa
mov
enter
cld
cmp
scas
cli
into
jecxz
test
cs
sub
out
jns
mov
and
cmp
mov
pop
xchg
fldenv
cmc
adc
stc
bound
mov
fisttps
in
aas
jle
xchg
pop
fwait
mov
lahf
enter
cmp
aaa
inc
lods
jbe
mov
xchg
out
shrb
add
or
int3
push
ss
mov
ds
insb
or
mov
ljmp
xlat
leave
cmp
and
call
rcrb
mov
inc
jmp
push
test
cmc
cmp
cmp
mov
stos
pop
fcomi
gs
cmp
imul
mov
mov
sub
in
test
iret
jl
aas
std
sarl
xor
xchg
mov
fadd
push
fstpl
xchg
loop
repz
lret
and
icebp
bound
mov
fsubr
cmp
loope
fstps
mov
out
mov
or
pop
fnstcw
push
and
or
jno
and
mov
outsb
jp
sbb
jle
xchg
push
cmc
cmpsl
cmc
sbb
push
jp
sub
lods
das
lds
pop
aam
mov
dec
adc
jb
inc
xchg
aas
or
push
movsl
pop
inc
ret
sarl
movsb
xchg
dec
xor
int3
dec
or
or
hlt
push
in
test
loope
insl
aam
dec
push
pop
xor
mov
insb
jg
movsb
pop
sbb
xchg
movsb
aad
or
test
and
mov
jge
push
xor
popf
mov
sub
in
lock
lods
push
stos
ret
cs
lods
pushf
sub
iret
xchg
xchg
fnsave
push
lock
outsl
xchg
pop
out
add
inc
aam
adc
sub
fimuls
test
mov
pop
aas
imul
fisubl
push
push
mov
inc
aam
add
cmpb
imul
or
out
subl
dec
inc
in
and
and
shlb
ss
std
inc
jg
mov
fcoml
adc
and
sbb
out
push
xor
gs
pop
imul
inc
stos
and
repnz
adc
mov
lcall
imul
mov
inc
test
cltd
imul
scas
or
into
push
enter
pop
lock
sub
int3
aad
sub
sub
cmp
and
xor
popa
mov
enter
cld
cmp
scas
cli
into
jecxz
test
cs
sub
out
jns
mov
and
cmp
mov
pop
xchg
fldenv
cmc
adc
stc
bound
mov
fisttps
in
aas
jle
xchg
pop
fwait
mov
lahf
enter
cmp
aaa
inc
lods
jbe
mov
xchg
out
shrb
add
or
int3
push
ss
mov
ds
insb
or
mov
ljmp
xlat
leave
cmp
and
call
rcrb
mov
inc
jmp
push
test
cmc
cmp
cmp
mov
stos
pop
fcomi
gs
cmp
imul
mov
mov
sub
in
test
iret
jl
aas
std
sarl
xor
xchg
mov
fadd
push
fstpl
xchg
loop
repz
lret
and
icebp
bound
mov
fsubr
cmp
loope
fstps
mov
out
mov
or
pop
fnstcw
push
and
or
jno
and
mov
outsb
jp
sbb
jle
xchg
push
cmc
cmpsl
cmc
sbb
push
jp
sub
lods
das
lds
pop
aam
mov
dec
adc
jb
inc
xchg
aas
or
push
movsl
pop
inc
ret
sarl
movsb
xchg
dec
xor
int3
dec
or
or
hlt
push
in
test
loope
insl
aam
dec
push
pop
xor
mov
insb
jg
movsb
pop
sbb
xchg
movsb
aad
or
test
and
mov
jge
push
xor
popf
mov
sub
xor
jo
lods
push
stos
ret
cs
lods
pushf
sub
iret
xchg
xchg
fnsave
push
lock
outsl
xchg
pop
out
add
inc
aam
adc
sub
fimuls
test
mov
pop
aas
imul
fisubl
push
push
mov
inc
aam
add
cmpb
imul
or
out
subl
dec
inc
in
and
and
shlb
ss
std
inc
jg
mov
fcoml
adc
and
sbb
out
push
xor
gs
pop
imul
inc
stos
and
repnz
adc
mov
lcall
imul
mov
inc
test
cltd
imul
scas
or
into
push
enter
pop
lock
sub
int3
aad
sub
sub
cmp
and
xor
popa
mov
enter
cld
cmp
scas
cli
into
jecxz
test
cs
sub
out
jns
mov
and
cmp
mov
pop
xchg
fldenv
cmc
adc
stc
bound
mov
fisttps
in
aas
jle
xchg
pop
fwait
mov
lahf
enter
cmp
aaa
inc
lods
jbe
mov
xchg
out
shrb
add
or
int3
push
ss
mov
ds
insb
or
mov
ljmp
xlat
leave
cmp
and
call
rcrb
mov
inc
jmp
push
test
cmc
cmp
cmp
mov
stos
pop
fcomi
gs
cmp
imul
mov
mov
sub
in
test
iret
jl
aas
std
sarl
xor
xchg
mov
fadd
push
fstpl
xchg
loop
repz
lret
and
icebp
bound
mov
fsubr
cmp
loope
fstps
mov
out
mov
or
pop
fnstcw
push
and
or
jno
and
mov
outsb
jp
sbb
jle
xchg
push
cmc
cmpsl
cmc
sbb
push
jp
sub
lods
das
lds
pop
aam
mov
dec
adc
jb
inc
xchg
aas
or
push
movsl
pop
inc
ret
sarl
movsb
xchg
dec
xor
int3
dec
or
or
hlt
push
in
test
loope
insl
aam
dec
push
pop
xor
mov
insb
jg
movsb
pop
sbb
xchg
movsb
aad
or
test
and
mov
jge
push
xor
popf
mov
sub
xor
jo
lods
push
stos
ret
cs
lods
pushf
sub
iret
xchg
xchg
fnsave
push
lock
outsl
xchg
pop
out
add
inc
aam
adc
sub
fimuls
test
mov
pop
aas
imul
fisubl
push
push
mov
inc
aam
add
cmpb
imul
or
out
subl
dec
inc
in
and
and
shlb
ss
std
inc
jg
mov
fcoml
adc
and
sbb
out
push
xor
gs
pop
imul
inc
stos
and
repnz
adc
mov
lcall
imul
mov
inc
test
cltd
imul
scas
or
into
push
enter
pop
lock
sub
int3
aad
sub
sub
cmp
and
xor
popa
mov
enter
cld
cmp
scas
cli
into
jecxz
test
cs
sub
out
jns
mov
and
cmp
mov
pop
xchg
fldenv
cmc
adc
stc
bound
mov
fisttps
in
aas
jle
xchg
pop
fwait
mov
lahf
enter
cmp
aaa
inc
lods
jbe
mov
xchg
out
shrb
add
or
int3
push
ss
mov
ds
insb
or
mov
ljmp
xlat
leave
cmp
and
call
rcrb
mov
inc
jmp
push
test
cmc
cmp
cmp
mov
stos
pop
fcomi
gs
cmp
imul
mov
mov
sub
in
test
iret
jl
aas
std
sarl
xor
xchg
mov
fadd
push
fstpl
xchg
loop
repz
lret
and
icebp
bound
mov
fsubr
cmp
loope
fstps
mov
out
mov
or
pop
fnstcw
push
and
or
jno
and
mov
outsb
jp
sbb
jle
xchg
push
cmc
cmpsl
cmc
sbb
push
jp
sub
lods
das
lds
pop
aam
mov
dec
adc
jb
inc
xchg
aas
or
push
movsl
pop
inc
ret
sarl
movsb
xchg
dec
xor
int3
dec
or
or
hlt
push
in
test
loope
insl
aam
dec
push
pop
xor
mov
insb
jg
movsb
pop
sbb
xchg
movsb
aad
or
test
and
mov
jge
push
xor
popf
mov
sub
jns
add
in
lock
lods
push
stos
ret
cs
lods
pushf
sub
iret
xchg
xchg
fnsave
push
lock
outsl
xchg
pop
out
add
inc
aam
adc
sub
fimuls
test
mov
pop
aas
imul
fisubl
push
push
mov
inc
aam
add
cmpb
imul
or
out
subl
dec
inc
in
and
and
shlb
ss
std
inc
jg
mov
fcoml
adc
and
sbb
out
push
xor
gs
pop
imul
inc
stos
and
repnz
adc
mov
lcall
imul
mov
inc
test
cltd
imul
scas
or
into
push
enter
pop
lock
sub
int3
aad
sub
sub
cmp
and
xor
popa
mov
enter
cld
cmp
scas
cli
into
jecxz
test
cs
sub
out
jns
mov
and
cmp
mov
pop
xchg
fldenv
cmc
adc
stc
bound
mov
fisttps
in
aas
jle
xchg
pop
fwait
mov
lahf
enter
cmp
aaa
inc
lods
jbe
mov
xchg
out
shrb
add
or
int3
push
ss
mov
ds
insb
or
mov
ljmp
xlat
leave
cmp
and
call
rcrb
mov
inc
jmp
push
test
cmc
cmp
cmp
mov
stos
pop
fcomi
gs
cmp
imul
mov
mov
sub
in
test
iret
jl
aas
std
sarl
xor
xchg
mov
fadd
push
fstpl
xchg
loop
repz
lret
and
icebp
bound
mov
fsubr
cmp
loope
fstps
mov
out
mov
or
pop
fnstcw
push
and
or
jno
and
mov
outsb
jp
sbb
jle
xchg
push
cmc
cmpsl
cmc
sbb
push
jp
sub
lods
das
lds
pop
aam
mov
dec
adc
jb
inc
xchg
aas
or
push
movsl
pop
inc
ret
sarl
movsb
xchg
dec
xor
int3
dec
or
or
hlt
push
in
test
loope
insl
aam
dec
push
pop
xor
mov
insb
jg
movsb
pop
sbb
xchg
movsb
aad
or
test
and
mov
jge
push
xor
popf
mov
sub
add
add
cmp
add
pushf
cmp
add
pushf
cmp
add
pushf
cmp
add
pushf
cmp
add
popf
cmp
add
popf
cmp
add
add
add
add
dec
popf
cmp
add
cmp
add
push
dec
inc
dec
xor
cs
dec
dec
add
outsl
ja
gs
add
gs
cs
insb
add
arpl
xor
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
inc
insb
insb
inc
gs
gs
imul
outsl
popa
fs
inc
imul
dec
outsb
imul
je
dec
outsb
je
jb
popa
arpl
