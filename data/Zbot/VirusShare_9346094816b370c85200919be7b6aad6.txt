incl
call
inc
xlat
jmp
cmp
jns
or
pushl
pushf
jno
pop
orb
dec
cltd
cmp
out
mov
mov
xchg
lret
sbb
dec
scas
inc
inc
pop
push
enter
pop
ds
mov
ja
mov
inc
and
lcall
stc
inc
pushf
jle
outsl
addl
rolb
cmp
mov
mov
pop
lahf
fwait
in
dec
inc
cwtl
or
clc
and
sub
lods
std
ja
pushf
enter
imul
iret
add
test
lcall
dec
in
xlat
mov
hlt
dec
mov
mov
int
mov
es
jmp
mov
popf
data16
xchg
addr16
inc
mov
test
jae
fmuls
mov
cld
je
decl
jecxz
inc
cmp
mov
js
addr16
addr16
pop
adc
in
cmp
jg
inc
inc
push
cs
movsl
jge
fsubrs
movsl
aaa
xor
pop
stc
adc
call
jo
adc
jecxz
out
jno
rolb
sbb
or
and
call
leave
aas
aam
scas
loope
subl
gs
sti
hlt
adc
ds
cmpsb
inc
push
push
xor
mov
call
aad
jo
fcoms
pushf
popf
repz
dec
cmp
xchg
jo
out
out
add
sti
and
jecxz
sti
jg
add
and
sbb
mov
and
ja
cmp
loop
sbb
sbb
jbe
pop
or
xor
or
dec
jmp
add
lods
mov
ror
inc
inc
mov
insl
jo
shlb
sbb
or
stos
push
fistps
incl
pop
sub
movsb
leave
fdivl
shrb
xor
mov
bound
xor
enter
call
in
jle
fistl
mov
mov
pop
mov
dec
xchg
cld
add
xlat
push
inc
ja
cli
popa
imul
loopne
jp
jg
mov
lds
in
dec
insb
popa
pop
xchg
ret
mov
xor
jmp
and
dec
sub
xchg
pop
push
es
add
mov
jmp
push
xor
xor
dec
pop
adc
lret
adc
jo
rol
dec
cmp
jle
xchg
jmp
lock
fbstp
adc
mov
push
mulb
arpl
scas
cmp
clc
ss
mov
cwtl
xor
ss
mov
or
cmp
imul
or
stc
decl
and
test
cmp
jb
pop
pop
loop
mov
xor
pop
flds
add
sbb
push
xor
mov
push
or
nop
push
xorb
das
inc
xor
pop
xor
jnp
push
pushf
pusha
arpl
jne
push
arpl
sbb
fnstsw
loopne
xor
fbld
add
or
mov
ljmp
jge
sbb
mov
jo
pop
pushf
fdivrl
or
lret
imul
mov
cli
mov
mov
cmp
aad
out
loope
js
pusha
cmc
pop
push
iret
xchg
mov
or
incl
movsl
mov
mov
scas
sahf
jp
cmpsl
mov
mov
push
aam
add
les
fcomip
incl
jmp
mov
mov
fdivrs
aaa
lret
ret
jg
adc
pop
lods
data16
mov
leave
test
lcall
jle
push
loope
sub
les
push
cmpsb
js
jge
or
jmp
fdivs
fwait
and
push
jns
outsl
popf
stos
push
insb
cmp
dec
mov
add
add
pushl
ret
and
sub
sbb
test
dec
xchg
or
fisubrl
sti
nop
nop
aam
out
adc
lods
or
arpl
ljmp
hlt
std
fwait
dec
stc
cmpb
sbb
mov
inc
movsb
lret
cmp
ficompl
xor
leave
es
adc
ljmp
iret
out
mov
push
jmp
in
int3
sub
stc
jae
dec
sub
decl
cmp
out
cmp
pop
sbb
xchg
lcall
incl
orb
inc
aad
jge
aaa
sbbb
ret
mov
push
out
mov
gs
mov
ljmp
fwait
sub
aaa
dec
adc
sbb
lcall
lcall
ja
or
lcall
int
push
mov
adc
cmp
pop
call
mov
cmp
xchg
add
push
sub
imul
fdivl
inc
xchg
mov
les
data16
roll
in
call
in
pop
and
sarl
jae
add
imul
mov
aas
cmp
jb,pn
fwait
or
xor
gs
push
xchg
xchg
xor
push
iret
std
mov
jmp
pop
mov
data16
dec
out
lock
outsl
call
jmp
scas
fcomi
loope
sbb
shll
mov
mov
outsl
mov
mov
dec
mov
jo
sub
xchg
mov
pop
mov
jmp
and
push
or
fsts
dec
les
cli
cmp
xchg
int
dec
dec
cmp
mov
orb
xchg
lea
cmpsb
flds
jno
mov
or
jmp
ret
push
mov
xor
idivl
into
xchg
xchg
rcrl
pop
incl
jmp
adc
adc
jno
scas
xchg
cmp
incl
xchg
int3
push
cmp
inc
jle
fdivrl
aad
ret
jne
and
js
fldpi
cwtl
fwait
stos
adc
test
jo
imul
mov
ss
xchg
jecxz
aam
mov
incl
scas
mov
lahf
pushf
dec
mov
xchg
or
jne
cwtl
js
pop
test
lcall
pop
in
popa
data16
mov
mov
lock
xchg
out
lcall
mov
lds
sub
inc
ja
pop
sbb
or
faddl
fisttpl
jb
add
jp
jbe
or
xor
or
cmp
and
inc
xchg
addr16
leave
sbb
pop
pushl
mov
outsb
adc
add
fisttpl
cli
fnsave
addr16
insb
call
mov
movsb
es
inc
cs
mov
insl
push
adc
ljmp
push
sbb
sbb
adc
push
leave
in
sbb
cmc
pop
xchg
fldcw
cli
incl
ror
push
add
cmp
push
les
das
push
test
in
lcall
push
sbb
push
outsl
dec
xchg
mov
lods
xchg
pop
push
xor
jb
out
iret
test
mov
ja
gs
arpl
out
and
aam
int
cltd
jp
dec
add
adc
rclb
xor
scas
pop
imul
inc
pop
xor
xor
cs
cld
xchg
in
ljmp
stos
aam
cmp
idivb
call
fisubl
clc
not
shl
insb
call
mov
adc
insl
std
xchg
pop
push
and
pop
push
and
xor
adc
mov
sub
ljmp
jb
and
ret
push
xor
stos
mov
cmp
dec
sub
repnz
mov
addb
xor
gs
xchg
loop
cmp
imul
bound
lods
in
cmp
push
in
lahf
xchg
outsl
mov
fists
mov
mov
test
xchg
aaa
sbb
lea
lcall
jl
pop
jp
rcrl
sbb
sarb
and
xor
push
xor
dec
jnp
js
clc
mov
jne
daa
xor
sbb
dec
pushf
push
xlat
and
and
daa
leave
hlt
pushl
ja
iret
sub
jae
xor
mov
pop
mov
and
test
mov
sti
loope
fidivrs
lods
ds
or
jo
andb
adc
push
mov
push
imull
jno
fnsave
mov
mulb
ljmp
dec
xor
inc
cld
aam
pop
xchg
cmc
lock
and
jp
insl
leave
aas
and
xchg
cld
jb
push
sbb
fcomi
lea
test
call
sub
int3
mov
sbb
data16
incl
mov
les
mov
and
clc
cmp
rcrb
mov
dec
or
and
das
outsb
shl
addl
lods
sub
sub
ret
fisubs
leave
push
xor
sbb
loop
in
call
xchg
test
adc
enter
lcall
popa
test
call
mov
and
aas
mov
mov
adc
lock
call
and
push
in
lds
jg
or
sti
dec
mov
dec
mov
sti
adc
and
fstpt
xchg
jnp
sub
and
mov
or
les
fcompl
sti
loopne
cmp
cmp
std
sub
mov
add
pop
icebp
pop
ret
inc
stos
dec
ds
push
or
aam
xchg
repz
mov
jp
xor
mov
cmc
or
ljmp
idiv
hlt
ret
mov
sub
lods
loope
arpl
push
xor
inc
decl
dec
test
call
icebp
or
daa
les
jmp
ss
jmp
xchg
bound
mov
dec
adc
int
sub
push
es
xor
lcall
cmp
imul
and
lret
xchg
movsl
sub
inc
dec
xchg
nop
mov
in
lea
mov
mov
xchg
pushf
aaa
cwtl
or
and
mov
data16
pop
bound
cli
jmp
jmp
mov
jae
inc
repnz
das
fwait
clc
mov
cld
out
inc
sahf
iret
pop
jl
and
orb
dec
cmc
dec
sub
xor
clc
pushl
dec
xor
aad
dec
fbld
xchg
inc
mov
fmull
xor
pop
mov
ljmp
lea
sub
mov
or
mov
push
fistps
les
mov
mov
scas
jo
xor
adc
test
loopne
adc
out
mov
jmp
rcrl
insl
cmp
jb
in
push
inc
ret
push
enter
mov
decl
sbb
insl
js
push
mov
mov
je
inc
jmp
loop
loop
ljmp
push
adc
cmp
adc
jp
sub
sub
sub
xchg
incl
jg
jae
fistl
mov
addr16
outsl
add
imul
mov
sbb
lds
xor
adc
lods
lods
push
movsl
aaa
lods
stos
ret
cmp
mov
xchg
scas
fprem
xchg
or
enter
sub
subl
hlt
and
leave
sub
xchg
loope
or
mov
out
jg
stos
iret
cmp
pop
mov
jle
out
cli
incl
fnsave
or
xor
insl
xor
dec
std
push
call
jmp
jge
lds
mov
and
fistpl
lahf
loopne
emms
cltd
mov
cmp
stos
fs
xor
jne
cmp
sbb
or
inc
repnz
push
iret
xchg
loopne
mov
ljmp
jnp
sarb
or
push
int
jge
outsb
adc
xchg
xor
add
aas
mov
xor
dec
das
inc
movsl
scas
and
push
mov
sbb
jg
cmp
jg
gs
mov
cli
arpl
sbb
test
mov
jae
loop
xchg
mov
imul
cs
mov
inc
sbb
fdivr
orl
es
call
loopne
adc
gs
out
adc
cs
es
aam
int3
lret
loop
jecxz
and
testl
jmp
mov
add
fsubrs
ja
dec
mov
or
adc
scas
push
shl
dec
lea
daa
outsb
jmp
lds
pop
mov
sub
and
mov
mov
jle
icebp
stos
xor
jns
cs
fwait
sahf
push
mov
aaa
sbbl
pushf
movsb
addr16
cmp
jbe
test
pop
and
push
sahf
sbb
sti
push
in
aam
add
call
sub
insl
xor
aas
stos
test
mov
cmpl
in
xor
mov
ljmp
or
add
cwtl
xlat
and
mov
dec
and
pushf
and
in
cltd
mov
daa
mov
xlat
bound
into
cmp
cmp
and
or
outsl
or
jne
test
iret
daa
push
jae
or
jns
js
mov
mov
call
popf
mov
incl
push
jo
insb
dec
out
cmc
inc
stos
or
mov
push
cmc
dec
iret
out
push
mov
mov
stc
sarl
inc
cld
cli
jnp
push
xchg
imul
dec
lock
mov
std
mov
decl
sbb
push
es
sbb
mov
hlt
pusha
jge
sub
cmp
aad
aad
fbld
iret
loopne
mov
pop
inc
push
rcrl
in
outsl
or
stos
jg
aas
jmp
stc
jle
fldcw
mov
inc
inc
scas
mov
dec
das
int3
or
aaa
cld
jmp
pop
sub
roll
mov
cld
jg
sub
cmpsb
add
pushl
push
shrl
ficoms
dec
mov
mov
adc
sbb
movsl
sti
es
fistpl
shlb
xlat
loopne
jle
sahf
jecxz
hlt
fidivrl
xor
lcall
in
xchg
push
mulb
mov
inc
cmpsl
cmp
insb
and
sarb
mov
repz
inc
mov
xchg
decl
dec
fidivs
jecxz
cmpb
jnp
sub
mov
jb
jmp
imul
sbb
xchg
inc
inc
popf
sbb
or
mov
mov
shrb
out
xlat
jno
div
call
pop
aaa
pop
mov
scas
movsb
adc
sub
repnz
mov
dec
pop
ljmp
xchg
push
jle
xor
lds
mov
clc
inc
sub
mulps
mov
pushl
jl
mov
and
sbb
cmpsb
or
mov
pop
sub
sarl
fucom
sti
mov
jmp
push
loopne
cli
mov
incb
jno
inc
pop
loopne
decl
imul
in
adcb
cmp
es
cmpb
and
adc
ljmp
aam
jae
jl
dec
sub
test
sub
push
popf
jl
xchg
jae
loop
je
cmp
lcall
aaa
inc
push
cmpsb
sbb
nop
arpl
sbb
mov
lcall
inc
ss
dec
mov
mov
addb
movsl
out
outsb
push
sub
pop
incl
call
jl
sbb
push
mov
int
jo
cmp
repz
in
lahf
lds
testb
insl
adc
popa
dec
rorb
push
int3
pop
cld
call
sub
enter
cmpl
xchg
js
xor
lea
xor
mov
fcomip
pushl
dec
int
imull
test
lods
aam
and
add
cmp
lcall
xchg
sbb
das
sbb
pusha
cli
lods
dec
xchg
inc
enter
ljmp
sahf
dec
mov
inc
mov
lcall
dec
loopne
or
mov
push
add
or
push
call
fimuls
jmp
pop
pusha
pop
aas
xor
push
fadds
adc
mov
pop
xorl
clc
sti
inc
test
cmp
mov
mov
push
adcl
xchg
cmpsl
and
jo
mov
rclb
decl
lcall
pop
fdivrl
dec
mov
xor
or
fwait
mov
decl
sahf
inc
data16
test
pinsrw
imul
jns
lds
pusha
dec
mov
fdivrs
addr16
mov
lar
sub
push
pop
xor
pop
or
add
push
decb
pushl
pop
cmp
add
sub
js
mov
je
in
repz
sahf
fs
sar
add
sbb
push
add
mov
xor
push
stos
out
xor
lcall
cmp
iret
mov
and
mov
sub
cmp
sub
call
test
and
dec
xchg
adc
adc
pop
test
notl
movsl
shlb
xchg
cmp
xchg
lret
push
arpl
incl
lock
cmp
xor
mov
add
int
or
neg
out
int3
addr16
mov
mov
sub
loop
mov
mov
xchg
mov
sub
ljmp
mov
adc
pop
mov
daa
gs
sbb
inc
cmpsb
pop
sub
jmp
fcoms
in
inc
clc
addr16
cmp
sub
inc
aam
sub
ret
out
pop
mov
lds
leave
cld
and
ljmp
cmpsl
mov
push
mov
mov
or
out
fisttpll
fcomip
push
or
xchg
jecxz
xlat
daa
repz
loope
cmpsl
push
adc
lea
cmpsl
out
jmp
mov
andb
jae
bndldx
sub
repz
nop
fists
ds
mov
popa
and
mov
inc
fwait
lock
sub
stos
fnstenv
pop
loop
add
mov
ljmp
imul
xchg
pop
mov
sbb
out
aad
sbb
pushl
das
rclb
jnp
push
sub
push
je
shrl
aad
cmpsl
stos
decl
dec
sbb
sub
push
dec
cld
sub
jno
adc
js
hlt
gs
call
mov
adc
push
shrl
xchg
adc
push
xchg
dec
or
mov
out
xor
jbe
and
hlt
and
push
lods
dec
les
xlat
scas
clc
ljmp
daa
mov
cmp
mov
push
mov
inc
push
mov
mov
jo
dec
pop
sbb
lods
add
clc
sub
imul
mov
hlt
fcos
decl
mov
ss
xchg
push
fdivl
add
or
xorl
ljmp
mov
test
lea
xor
jge
push
enter
adc
sub
mov
cmp
in
insl
dec
stos
mov
leave
mov
xor
outsl
jbe
lods
loope
lock
pushl
cmp
aad
sbb
repz
pop
mov
ja
stos
movsl
sbbb
mov
fists
pusha
xchg
xchg
cld
mov
test
inc
cmp
idiv
mov
dec
aam
repnz
jge
fs
jmp
shl
lret
push
movsb
imul
shl
xor
imul
inc
ja
pushf
push
call
andb
outsl
aad
iret
mov
and
add
bound
pop
incl
call
mov
shl
push
cli
mov
jbe
ret
pushf
outsb
sti
es
mov
sub
das
pop
lods
mov
cs
and
ficoms
gs
out
and
xchg
call
dec
adc
gs
pop
mov
cmp
out
lock
and
mov
pusha
adc
ss
addr16
pushf
and
push
push
mov
dec
mov
sbb
lret
pop
arpl
jmp
mov
xchg
divb
icebp
cmp
mov
mov
mov
decl
fsubl
sahf
xchg
vsqrtpd
outsl
push
mov
shrl
pop
clc
clc
sbb
out
cli
decl
cli
pop
sub
jl
jns
bound
sub
aaa
cmp
cmpsb
jmp
cwtl
inc
sbb
and
xlat
inc
add
mov
mov
inc
xchg
and
xchg
decl
push
adc
sub
or
pushf
xchg
scas
decl
test
cli
or
movsb
inc
mov
mov
jge
push
ss
scas
sar
ja
decl
js
test
lock
fwait
inc
imul
cwtl
movsb
adc
jg
aas
fldenv
repnz
cmp
xor
lret
rcll
fsts
xchg
pop
mov
decl
or
stos
sbb
rcrl
sti
dec
xchg
nop
mov
bound
decl
jg
imul
xchg
pop
ret
nop
insl
jnp
pop
mov
pushl
test
popf
sub
into
icebp
push
push
jp
repnz
xor
jle
mov
dec
dec
mov
adc
jb
addb
mov
or
ljmp
pushl
out
leave
mov
pop
pop
mov
ret
aad
cmpsb
push
jae
mov
push
xor
xchg
lcall
jle
pushf
out
andb
pop
lea
pop
cmp
mov
ljmp
sub
lds
xorl
popf
or
xor
pop
ret
push
sbb
das
xchg
fidivl
fldcw
lret
adc
sbb
aaa
push
pop
lods
lea
fisttpl
cmp
call
or
das
add
cs
loopne
jae
and
ja
sbb
ljmp
sub
insl
mov
mov
ss
push
gs
imul
dec
push
mov
mov
sbb
aas
repz
cmc
sarb
sbb
xchg
sbb
sti
loop
lahf
xor
push
lret
xor
or
in
mov
pop
pop
fsubl
adc
roll
fcomip
fdivrl
loopne
inc
cmp
inc
sahf
mov
push
inc
divb
cs
jmp
shrb
mov
inc
repz
xor
or
jmp
repnz
cwtl
jmp
pop
inc
and
fcomi
enter
loope
bound
xlat
ja
decl
pop
test
adc
push
dec
xchg
dec
das
cmp
push
push
fistpl
mov
push
inc
adc
lcall
xor
fldenv
push
pushf
sbb
xor
lcall
mov
push
ljmp
aam
stos
dec
hlt
lock
jnp
lret
xor
jbe
popf
cmc
sub
cli
pop
hlt
incl
ds
ss
hlt
pushf
inc
or
push
or
outsb
jns
das
inc
inc
sub
add
add
mov
enter
icebp
cmp
das
cli
popa
addr16
test
movsl
les
pushf
mov
adc
fdiv
jmp
aad
adc
xchg
add
cld
mov
adc
push
ljmp
insb
outsb
pop
add
insb
loop
xchg
mov
repnz
fistpl
popf
aaa
pop
loope
incl
outsl
out
mov
mov
test
jo
mov
push
or
ret
push
decl
or
movsl
xor
mov
int3
in
ljmp
cmp
loope
mov
incl
push
pop
into
nop
or
leave
pop
dec
cmc
out
and
pop
adc
mov
es
dec
jno
jo
fsubrl
jb
pushf
push
test
adc
mov
xor
ljmp
aaa
inc
shl
shrb
mov
sub
jle
ss
mov
js
sti
loope
inc
sbb
ljmp
add
fstpl
iret
cmp
les
mov
mull
or
cmp
addl
rcrb
sbb
mov
and
or
pop
xor
jmp
in
mov
filds
mov
pop
test
ljmp
xchg
incl
mov
fimuls
sub
push
filds
addr16
lock
repz
jo
mov
sbb
mov
fwait
leave
adc
mov
mov
xchg
test
cmp
sbb
cmp
sarl
outsb
repnz
push
rol
movsb
lcall
sahf
mov
mov
popa
cmp
into
bound
fdivrl
insb
out
dec
mov
push
jp
cmp
pushl
stos
push
subl
lods
mov
imul
out
jne
or
mov
test
aad
incl
and
push
adc
and
shr
adc
and
pop
loopne
adc
inc
out
lret
aas
loope
or
lods
sub
decl
push
add
lea
sbb
cmovne
push
cmp
push
xchg
pop
sub
cmp
incl
add
inc
ficomps
jmp
sub
jl
pop
clc
dec
fmuls
lcall
xor
mov
mov
xor
push
jb
fisubrl
mov
fistpl
pop
test
mov
subb
mov
rorl
push
xchg
mov
sbb
fcomps
mov
jle
jp
leave
jge
dec
int3
fdivrp
mov
cltd
xor
pop
xlat
pop
fwait
sbb
mov
add
jns
lods
dec
popa
imul
call
fst
xor
mov
xor
sbbb
lock
leave
add
jns
xor
cmp
ret
jmp
xchg
add
xchg
mov
sub
or
loopne
jg
inc
pop
xchg
adc
mov
fcompl
push
add
xor
and
cmp
jecxz
lcall
scas
orl
xchg
cmp
pop
ret
loopne
mov
pop
sbb
mov
cmp
inc
cmpsl
xchg
jae
hlt
sahf
into
insl
sub
or
and
ljmp
mov
dec
pop
inc
fsubrl
decl
jmp
cmp
addr16
mov
or
xor
cmpb
mov
jmp
fisubs
jg
movsb
inc
xor
dec
pushf
adc
lds
inc
inc
add
sbb
lcall
fucomi
mov
insb
jl
dec
push
cld
jno
sub
sbb
gs
popa
sub
pop
leave
lahf
jno
jg
mov
jnp
stos
lds
mov
pusha
dec
pop
fdivr
decl
aam
pop
in
pushf
cmp
fs
sbbb
stos
or
xor
ret
ret
mov
iret
pop
enter
ljmp
sub
xchg
sbb
out
jp
repnz
or
sub
adcl
xlat
jg
call
jle
or
outsb
insl
test
ljmp
cmp
mov
add
pop
shl
rcrl
xor
pop
sbb
sub
mov
inc
xchg
movsb
imull
jnp
sarb
adc
mov
sbb
sahf
xchg
inc
mov
call
add
and
add
jne
xor
add
js
in
pop
adc
fcomip
or
xchg
cmpsb
jecxz
inc
je
jecxz
jb
inc
sar
jg
lods
pusha
outsl
jns
mov
mov
call
test
lock
mov
inc
stos
jbe
ss
dec
iret
ja
pop
lods
ljmp
and
sti
daa
adc
pop
cmp
rep
push
pop
in
jbe
ljmp
adcb
xor
jecxz
mov
repz
adc
insb
mov
das
xor
mov
call
negb
ss
cmc
orl
js
lock
mov
mov
dec
mov
arpl
adc
in
ret
xchg
rolb
cmp
adc
xor
mov
inc
and
and
mov
sub
ret
decl
dec
cmp
or
shrb
inc
movsb
cmp
fs
adc
xchg
mov
and
lods
add
adc
and
ds
scas
mov
and
adc
loope
test
das
daa
mull
dec
push
imul
lods
lcall
dec
test
sbb
push
mov
test
clc
lea
sub
addr16
dec
and
in
xchg
insb
mov
push
inc
hlt
shlb
xchg
cmp
lret
outsb
pop
mov
xor
jg
xchg
aad
mov
add
mov
xchg
sub
js
mov
mov
inc
in
xchg
adc
adc
mov
cli
pop
sbb
jo
adc
call
sti
aaa
adc
or
gs
mov
or
xlat
ficompl
movsb
das
jmp
test
in
out
cmp
jl
outsl
test
out
mov
out
and
rorb
jne
lcall
ljmp
push
sbb
jno
dec
add
test
adc
xchg
in
cmpsb
cli
incl
push
gs
loop
or
lods
mov
dec
pop
sbb
mov
ljmp
fstpl
jle
pop
mov
mov
aad
dec
divb
and
int
adc
incl
int
insb
loop
cltd
add
sbb
outsb
in
add
mov
pop
mov
lcall
or
stc
popa
or
ficomps
mov
jg
popf
push
xchg
xor
call
repnz
mov
in
and
mov
push
in
inc
imul
push
aam
out
gs
cs
mov
pop
movsb
push
loopne
sub
pop
lea
lea
std
scas
jmp
mov
add
sub
movsb
adc
jmp
jo
jno
pop
out
xor
or
incl
or
xchg
mov
cmpsl
cmp
je
fmuls
pop
and
jmp
ficompl
aad
lret
scas
push
mov
cmp
sbb
xchg
les
lret
jo
xor
dec
out
push
lcall
push
cltd
imul
mov
push
adc
lcall
fimull
push
lcall
cmp
or
add
mov
and
xor
popf
jp
ljmp
adc
cltd
mov
mov
outsl
jne
xchg
movsb
pushf
out
lahf
into
pop
dec
mov
cld
fidivrs
xor
pop
fdivr
jae
push
lret
mov
iret
mov
psubsw
push
pop
int
or
incl
and
xor
inc
sti
out
into
push
adc
jno
sbb
test
fcomip
pushl
xor
nop
imul
sub
ret
sub
call
jg
cmc
push
jne
jl
mov
dec
mulb
into
je
daa
add
clc
push
outsl
xchg
lods
jp
lods
sub
cld
mov
insb
mov
mov
stos
stc
sbb
xchg
inc
mov
in
dec
jmp
push
dec
aad
in
sub
inc
xor
mov
clc
cmp
jg
lret
stc
pop
fsubp
shr
cmp
outsl
push
insl
cmpsb
incl
popf
xor
mov
or
mov
sub
icebp
idiv
fbstp
add
cmp
xchg
arpl
aam
popf
jbe
fldcw
push
mov
adc
cmc
enter
call
in
sbb
inc
stos
pop
adc
mov
test
outsl
cltd
jg
pop
or
shl
incl
mov
xor
bound
sbb
sub
enter
mov
add
decl
inc
cmpsb
test
xchg
fucom
jl
add
divb
push
and
shlb
cmp
daa
movsb
sub
mov
cmp
and
jmp
inc
in
enter
jbe
decl
push
jmp
mov
cltd
pop
mov
sbb
divb
inc
ds
into
insb
mov
fs
into
pop
xchg
inc
add
adc
addr16
or
stos
mov
xchg
mov
call
loopne
lahf
add
mov
mov
pop
les
inc
mov
mov
jmp
cmp
adc
call
cld
stos
loop
pop
push
sbb
push
dec
jb
ds
stc
inc
test
insb
call
std
pushl
mov
add
jl
je
mov
aad
sbbl
lcall
adc
push
popf
dec
push
fistps
addb
mov
pop
adc
in
in
out
mov
push
movsb
js
addr16
pop
lret
lahf
in
lods
mov
add
mov
or
jmp
rcrb
jnp
rcrl
es
movsb
sub
test
xchg
scas
sbb
decl
xchg
scas
pop
mov
cmpsb
sub
xchg
js
aaa
pop
push
mov
ja
adc
ljmp
and
mov
add
or
ds
push
inc
mov
jb
sti
cmp
incl
xchg
and
xor
test
enter
sbb
adc
aam
lret
ret
xchg
mov
cmp
ljmp
ret
sub
jle
imul
sbb
shl
pop
pushl
push
xlat
or
insl
in
popa
imull
es
xchg
outsl
icebp
mov
inc
push
fs
cmp
inc
push
ja
dec
enter
in
ljmp
or
mov
stc
and
sub
fmull
mov
ret
shll
dec
jne
leave
stos
xor
adc
jg
or
push
inc
stc
imul
push
aaa
pop
ret
jmp
inc
and
sub
aas
pop
sbb
scas
test
inc
mov
repz
pop
stc
xchg
xchg
nop
mov
nop
pushf
fiaddl
out
cmp
je
mov
pushf
pusha
xchg
cs
jmp
fistpll
pop
cmp
jp
mov
and
stc
jno
jae
pushl
repnz
dec
out
xchg
jb
movsl
adc
push
aam
and
xor
jmp
ljmp
test
cmpsb
dec
push
pushf
or
repz
js
es
fs
ljmp
call
xchg
jns
xchg
mov
xchg
lds
ja
mov
jg
imul
in
cmpsl
outsl
add
cmp
push
mov
lcall
arpl
adc
fstpl
mul
mov
cmp
mov
out
dec
test
jmp
pop
xchg
push
cmpl
sti
inc
sub
and
cltd
xchg
mov
cmp
jmp
int3
jle
dec
dec
outsb
sub
dec
addb
pop
dec
jmp
pushl
sub
inc
inc
shrb
xchg
xchg
xchg
add
leave
sub
dec
xchg
fs
push
mov
pop
sti
aas
mov
and
inc
mov
test
lock
sub
pop
dec
xlat
pop
stc
lcall
in
xchg
dec
cmp
popf
repnz
pop
sti
pushf
mov
adc
jne
and
into
lods
jb
pushl
cld
ret
and
or
in
mov
repz
das
imul
sub
mov
pop
decl
xchg
stos
mov
daa
fadd
jecxz
or
dec
jo
repnz
imul
shrb
and
xor
movsb
sub
aas
nop
xor
daa
leave
outsb
xor
ljmp
push
mov
scas
ja
stos
lret
sub
data16
pop
and
imul
inc
cmp
mov
sahf
jae
xchg
stos
mov
cld
pop
out
ljmp
lods
scas
and
cs
fwait
decl
or
inc
xor
sbb
xchg
xor
and
jno
jbe
dec
inc
imul
flds
dec
mov
or
insl
subl
js
xchg
pop
iret
mov
pushl
movl
jg
popl
add
push
sub
cmp
hlt
mov
and
pop
add
mov
pop
test
out
ret
cli
jne
sbb
sahf
push
mov
pushl
sub
pushf
lret
fs
or
stos
push
sahf
scas
inc
jb
addb
daa
insl
pop
fisubrs
mov
jmp
mov
std
mov
sbb
push
div
imulb
movsl
xor
das
sbb
jo
aaa
cld
sahf
mov
pop
sbbl
jp
sbb
xlat
mov
mov
cmpsb
xor
sar
inc
bswap
enter
lcall
cmpsb
dec
cmp
and
mov
insl
xchg
and
ret
inc
cld
sahf
push
xor
pop
mov
decl
push
xor
dec
aam
nop
xlat
aas
xor
or
or
lea
xor
lcall
lds
jno
jl
incb
clc
mov
push
pop
sub
cmp
fidivrl
jp
lret
sbb
dec
dec
fwait
xchg
add
mov
pop
addb
and
pushl
cld
aas
sbb
xchg
in
lcall
pop
mov
call
stos
ja
adc
test
pusha
movsl
or
sbb
lods
sbb
sub
mov
lds
push
mov
dec
mov
aad
dec
cmp
mov
xor
mov
inc
add
sbb
lea
mov
xchg
mov
stc
mov
and
push
adc
dec
aas
xchg
pushl
std
jb
pop
or
mov
movsb
push
pushf
jno
insl
ljmp
decl
cld
je
sbb
stos
cmpsb
pop
imull
pop
or
dec
and
add
call
movb
scas
xchg
pushf
dec
ds
sahf
xchg
sbbl
and
jbe
mov
ljmp
inc
stos
and
out
push
insl
mov
cmp
aad
sarb
sbb
jnp
in
int
int
pop
cmp
leave
les
les
jne
or
aaa
mov
mov
iret
mov
lods
outsb
inc
pushf
daa
movsb
mov
or
push
mov
xlat
push
stc
pop
sub
loope
xchg
cmp
jmp
sarb
push
xor
mov
push
lret
or
mov
add
dec
cmpsb
inc
fists
lcall
dec
fnstcw
adc
and
jecxz
and
addl
push
ljmp
lods
cmp
pop
xchg
add
cmc
pop
test
add
fprem
add
lcall
das
xor
in
ja
les
arpl
or
jp
mov
out
out
xchg
arpl
xchg
jne
jge
jmp
mov
leave
add
jle
xor
mov
pop
cmc
rcll
jae
cmp
ret
rcr
pusha
pusha
pushf
cmc
mov
incl
in
imul
mov
pop
fs
cmp
cmp
mov
cli
stos
stos
adc
xchg
sbb
arpl
or
gs
loopne
pop
inc
cmp
lret
aam
add
pushl
mov
fists
and
movsl
push
sbb
sbb
sbb
lcall
jle
jecxz
sbb
mov
mov
jg
cmp
sub
dec
cmp
dec
cmp
adc
mov
loopne
clc
jo
icebp
pushl
and
mov
mov
decl
lock
pop
cld
popa
test
jo
push
mov
loop
insl
ds
mov
ljmp
push
or
aad
scas
adc
and
jns
movsl
addb
push
sub
fdivp
lret
cmp
mov
pop
add
ss
sahf
dec
in
cs
fs
mov
jo
js
test
jae
rcrb
clc
jmp
std
jle
jg
cltd
lods
pop
mov
incl
imull
pop
jne
mov
jmp
mov
push
stc
nop
dec
popa
fdivrs
pushl
xor
cmp
sub
lcall
int3
dec
xchg
imul
mov
mov
lcall
cmp
or
hlt
jp
std
in
sub
sub
cmp
jmp
sbb
imul
add
and
dec
gs
jp
inc
iret
add
rcrb
jg
dec
push
insb
ret
imul
fdivr
inc
lds
nop
lea
ds
push
push
lcall
arpl
pop
into
dec
sub
inc
mov
mov
pop
dec
fidivrl
jbe
cmc
adc
inc
cwtl
xor
popf
inc
andb
lcall
fxch
repnz
jbe
xor
out
cli
ljmp
sub
leave
cmp
mov
pop
mov
inc
push
jp
pop
jmp
ja
lcall
test
test
push
push
add
ljmp
addr16
cs
cwtl
hlt
movsl
fs
lea
inc
lods
pop
movsl
hlt
pushf
pop
loopne
test
es
decl
mov
inc
push
outsb
sbb
shrl
pop
xchg
and
popa
pusha
pop
rolb
pushl
daa
loop
stc
adc
inc
hlt
pop
xchg
les
push
mov
inc
mov
idiv
ljmp
jno
or
ja
fwait
loop
and
cwtl
stos
lcall
cli
lret
fldcw
mov
push
lods
cs
js
push
pushf
mov
mov
adc
lcall
ljmp
leave
jns
fcomp
inc
sbb
call
jae
je
addb
notl
mov
sbb
jne
push
inc
push
cmp
lcall
jo
xor
ja
dec
pop
and
adcl
jg
stc
pop
xor
fwait
scas
cmp
xor
outsb
push
fsubr
divl
sbb
xor
adc
cltd
mov
dec
repz
in
and
fwait
cmp
sti
xchg
hlt
movsb
cmp
jb
js
das
call
inc
popfw
mov
daa
adc
mov
pop
fdivr
inc
or
push
jl
int
inc
pop
fbstp
in
out
out
test
mov
sub
inc
call
mov
aam
mov
pusha
xlat
jp
popf
ljmp
dec
sbb
incl
push
fwait
gs
sub
xor
push
daa
push
fstpl
lcall
sbb
push
jb
js
fiadds
rclb
xlat
mov
sub
mov
xchg
sub
icebp
mov
call
lods
or
stc
rorb
ja
inc
das
repnz
flds
ljmp
cmp
inc
lds
mov
xor
icebp
mov
cmc
or
inc
inc
movsl
pushl
cld
ljmp
push
mov
xor
adc
pusha
xor
or
xor
add
int3
fmull
jne
loope
int3
push
loop
rcrb
movsb
cmp
ljmp
test
fcmovnbe
sahf
and
sub
lods
sub
cwtl
add
icebp
xor
in
shll
cmpsl
sub
stos
ljmp
sbb
test
cmp
or
lods
insl
cmp
in
inc
cmpsl
into
xchg
pushf
push
mov
ljmp
dec
jg
ljmp
and
add
out
lods
mov
jmp
insb
xor
inc
lods
cmp
cld
mov
imul
dec
mov
jno
inc
pushl
pushf
int
mov
in
adc
psllq
hlt
enter
dec
add
sbb
sub
cld
lcall
shrl
bound
ret
gs
sahf
fisubl
andl
sbb
jmp
shrb
fildl
and
aad
in
pmaxub
ss
sti
repnz
cmpsb
bound
push
mov
xchg
inc
ljmp
push
push
mov
mov
cmp
ljmp
imul
stc
push
cltd
sub
in
mov
dec
jns
popf
int
lret
push
ds
ljmp
mov
jge
dec
xor
test
sbb
js
ret
sbb
mov
decl
push
fcmove
inc
je
int
jno
mov
cli
pop
add
mov
inc
idivb
ss
dec
js
dec
mov
les
insl
push
adc
and
hlt
push
js
incl
mov
cmpsb
fldcw
xchg
and
movsb
sarl
push
xchg
sahf
xlat
and
pop
jae
pop
lahf
pusha
sbb
mov
es
sbb
aad
jg
lea
inc
in
pop
push
lcall
cli
sbb
fisttps
inc
jns
jnp
jnp
push
mov
outsl
stos
rcr
dec
cld
call
mov
decb
cmp
sbb
jne
int3
sub
sub
pushl
mov
orl
sub
ret
cmp
test
ljmp
cmp
mov
xor
ds
sbb
jg
decl
in
xor
push
mov
fcmovu
cwtl
jecxz
ss
arpl
pop
xchg
and
jg
sub
stc
shll
xchg
scas
mov
ja
les
idiv
incl
sbb
mov
cmp
push
jne
insb
lock
cld
mov
push
cmp
dec
out
jp
cwtl
push
mov
xchg
je
test
dec
subb
ljmp
cld
mov
xor
out
mov
ret
lcall
outsb
cs
imul
jmp
jl
test
lock
insb
jnp
push
or
cmpsb
dec
xchg
inc
inc
xor
xchg
mov
call
jle
push
mov
jecxz
mov
sbb
cmp
jae
sbb
mov
ljmp
pop
add
push
mov
loope
cmp
lcall
pop
dec
sbb
mov
jmp
mov
cwtl
mov
sbb
and
in
es
jbe
jg
lcall
aad
mov
sarl
cmp
xchg
iret
fldl
pop
and
lcall
xor
push
adc
xchg
mov
or
add
jns
incl
leave
aam
and
pop
push
pushf
add
xchg
mov
sub
js
lods
nop
dec
lods
insb
fldcw
ret
lcall
loope
and
stos
push
add
lret
loopne
cs
mov
mov
movsb
lcall
in
inc
xor
ret
xor
test
lcall
sti
dec
inc
push
jge
jg
lcall
inc
repz
push
lcall
sbb
sarb
int
scas
adc
orb
call
pop
pop
adc
fs
sbbl
out
aaa
nop
bound
popl
push
adc
les
lahf
shl
in
mov
xlat
in
xchg
decl
and
adc
scas
rcrl
xchg
rclb
mov
dec
sub
lock
push
cs
jle
leave
add
push
adc
adc
sub
ljmp
inc
inc
cmp
adc
adc
sub
movsb
imul
push
pop
call
scas
adc
outsb
jl
xor
pop
leave
jge
movsl
cs
or
pop
cli
mov
inc
fmull
inc
in
cmp
mov
xchg
push
sbb
sbb
cmpsl
jo
xor
xor
inc
inc
xor
jecxz
call
imul
pop
inc
ss
insl
inc
int3
inc
stos
and
pop
sarl
mov
fbld
xchg
fcomps
xchg
lods
mov
jbe
lret
mov
stos
imul
adc
mov
push
hlt
lret
mov
imul
push
icebp
xchg
movsb
dec
jmp
shrl
lret
into
leave
out
pop
jle
out
sub
inc
push
and
mov
mov
sub
call
cltd
bound
jo
scas
adc
rolb
push
mov
jmp
shl
ljmp
jmp
xchg
cld
or
adc
or
dec
push
sbb
ljmp
pushl
xor
xor
arpl
cmp
loopne
xchg
and
inc
shrb
test
lcall
int3
push
pop
mov
shll
ss
rcr
out
movsb
fs
insl
push
pop
decl
in
jg
jecxz
cmp
mov
ret
stc
mov
adc
mov
jecxz
lock
mov
push
lock
dec
imul
testl
mov
stc
inc
jle
jb
cmpsl
sub
outsb
push
mov
lods
cmc
shrl
dec
inc
filds
fwait
push
inc
pop
js
test
mov
lods
arpl
fisubl
inc
sbb
mov
jno
stos
mov
decl
adc
jge
repz
fcoms
aad
std
ret
rorl
shl
insl
pushl
shrl
dec
push
or
fcmovu
xor
adc
in
add
dec
daa
inc
dec
stos
mov
jmp
dec
xor
sbb
je
xor
pop
fiaddl
sti
ja
stc
incl
jmp
and
sbb
and
cmp
stos
jbe
lret
or
jmp
fnsave
inc
insb
stos
push
fmuls
jl
pop
loope
cli
mov
mov
sbb
mov
and
call
inc
fldenv
sub
cmpsl
nop
ja
add
jnp
ljmp
ljmp
sar
xchg
inc
add
loope
cmp
ds
jecxz
pop
in
and
pop
push
xlat
jecxz
lcall
call
pop
stos
es
sub
mov
cmc
jge
les
jge
dec
in
sbb
push
inc
ljmp
cmpsb
jl
sub
push
mov
pushf
sbb
and
incl
arpl
push
ja
pop
sub
push
jge
aad
dec
xchg
outsl
fiaddl
jp
jmp
stc
ds
decl
roll
mov
mov
add
inc
xadd
out
in
push
lods
call
sbb
fwait
aaa
roll
push
aad
mov
mov
gs
mov
mov
jns
push
jns
and
ljmp
outsl
sbb
test
in
push
mov
or
fs
mov
adc
hlt
adcb
jl
push
roll
mov
mov
xor
in
pop
xor
or
fisubrl
ljmp
push
and
or
sbb
or
loopne
jo
sbb
out
in
pushl
xor
cwtl
and
movsb
cmc
jae
mov
test
jg
adc
adc
pushl
pushf
test
mov
mov
cmp
jp
bound
push
std
incl
cmp
ret
inc
jecxz
jne
test
aaa
fistpl
fnsave
iret
push
xchg
das
adc
and
cmp
int
in
fimuls
aad
jmp
adc
jno
cmp
lods
jbe
decl
mov
cmp
and
xchg
into
xor
mov
lods
inc
push
mov
sbb
repnz
test
push
xor
add
mov
mov
pop
repz
insb
jno
sbb
adc
cld
jp
push
or
ds
incl
jb
sub
xchg
adc
arpl
xlat
pop
dec
mov
inc
add
daa
mov
push
out
mov
fs
in
mov
cltd
dec
popa
lock
js
inc
scas
and
pop
mov
decl
ds
into
sbb
js
addb
xchg
push
pop
adc
and
jg
pop
cmc
decl
lock
out
sbb
out
cli
jg
cmp
in
out
sbb
movsb
incl
sarb
scas
jne
aam
das
movsb
cld
out
outsb
mov
cld
ss
dec
movsb
jp
xchg
decl
lret
jecxz
notb
jne
inc
fisubrs
leave
pop
ffreep
ror
xchg
jmp
notb
xor
jp
stc
pop
fcmovne
test
das
les
xchg
or
andl
jnp
incl
in
mov
jl
movsl
rcll
cmpsl
popa
loopne
repz
arpl
imul
mov
sarl
inc
aad
cwtl
adc
mov
fsubr
sbb
push
cld
mov
ja
mov
jecxz
pop
andl
push
pop
lahf
mov
loop
ljmp
push
cmp
jo
sahf
xchg
pop
push
cmp
add
mov
sbb
jo
das
clc
in
das
inc
nop
mov
mov
jmp
or
les
sub
mov
nop
jne
dec
mov
jmp
push
out
add
adc
jmp
sbb
dec
int
xchg
fs
es
lods
mov
pop
lock
outsb
mov
mov
idivl
and
adc
cmpl
cmp
sub
add
ret
ljmp
push
mov
lret
icebp
jne
cmpsb
mov
pop
orl
std
ljmp
or
adc
push
push
icebp
shrl
dec
xchg
push
std
lcall
sbb
mov
sub
xor
or
loop
ss
rorl
outsb
das
clc
scas
decl
dec
mov
or
sbb
out
aad
sbb
addr16
mov
mov
xlat
mov
inc
or
push
bound
call
addb
out
cltd
insl
pop
test
icebp
dec
mov
es
lret
lret
js
adc
pop
xchg
jg
scas
mov
cmc
arpl
cmp
popa
repnz
hlt
test
movsb
sub
call
push
fdivrl
out
sbb
lret
test
cld
or
lea
cltd
and
aaa
std
call
dec
sbb
or
sbb
xor
scas
and
or
add
adc
fwait
mov
iret
fnstcw
pop
jl
sub
adc
pop
in
scas
aad
and
jmp
push
mov
in
or
push
and
shlb
mov
incl
ss
or
push
xchg
cmpsb
andl
jmp
push
test
aas
pop
in
xchg
mov
stos
push
sahf
mov
stc
hlt
mov
mov
fdivs
aam
mov
jo
jmp
rorb
mov
or
sbb
or
mov
lcall
je
fcomip
pop
icebp
jg
mov
scas
push
jp
movsl
cld
lret
ret
pusha
jg
test
xlat
sub
xchg
xor
mov
mov
sbb
cld
mov
cmpl
and
sahf
mov
leave
lods
xor
pop
xor
fldt
pop
shlb
push
stc
sub
lcall
jg
cli
decl
loop
sub
lods
add
mov
mov
rcrl
jbe
mov
jmp
loopne
adc
ss
dec
inc
aam
mov
jp
and
in
lcall
movsb
xchg
loopne
data16
and
jbe
out
pusha
mov
dec
and
call
int
xchg
xor
pop
mov
sbb
push
repnz
gs
scas
pop
cmp
mov
mov
jno
mov
xchg
or
mov
jmp
xchg
dec
and
mov
clc
push
pop
iret
xor
adc
out
push
inc
fisubrl
call
inc
adc
mov
pop
adc
movaps
xor
sbb
lret
pop
xor
std
jmp
xchg
popa
cmp
and
xchg
shr
dec
addr16
sbb
dec
call
mov
test
or
cli
fsubs
subps
inc
pop
fcmove
scas
mov
test
lcall
pushf
aas
mov
vcmppd
and
and
in
cli
test
dec
or
pop
mov
ljmp
push
mov
sub
loope
sbb
loop
xchg
sbb
out
and
cmp
xchg
outsl
loopne
in
lret
loope
mov
mov
push
mov
pushl
xchg
sar
push
mov
pop
js
stos
sub
mov
adc
xchg
je
mov
lcall
fidivrl
push
ret
lret
or
lods
je
lret
mov
cltd
bound
pop
push
incl
or
fnstsw
pop
cmp
xor
xor
fisttpl
inc
sub
adc
push
or
pushl
mov
in
testb
decb
nop
popf
dec
cmp
pusha
scas
ret
fcomip
mov
data16
push
div
mov
push
push
int
cli
cmp
ljmp
pusha
fdivl
jns
xor
or
or
dec
sbb
lcall
sub
stos
loope
or
dec
adc
add
pushf
cmp
lods
dec
push
rcl
mov
incl
sarb
out
push
pop
leave
jp
dec
inc
lahf
rcll
sahf
and
cli
xchg
xchg
mov
cmp
jmp
mov
fwait
cld
outsl
cmp
dec
pop
pop
or
ljmp
pushf
addb
jp
jnp
jb
xchg
mov
mov
push
inc
cmp
inc
idiv
mov
sti
pop
ret
aam
pop
jbe
pusha
clc
rorl
mov
mov
inc
das
aam
jae
mov
ds
dec
push
sbb
mov
scas
cmpsb
pop
adc
adc
jge
xor
add
pop
and
jmp
shr
mov
inc
or
mov
jbe
sbbl
add
adc
in
jmp
push
push
pusha
cmp
cmp
jl
mov
cmp
insb
fistps
stc
cwtl
lcall
or
inc
adc
movsb
jb
cmp
bound
dec
or
xchg
mov
pushl
push
je
jmp
lds
push
fmulp
fdivrs
push
loope
lret
fcmovb
in
scas
cmp
mov
pushl
inc
ljmp
stc
mov
mov
pop
dec
and
lcall
sarl
jg
dec
test
rcrb
movsl
sub
mov
jle
popa
cmp
out
ret
cmc
mov
loopne
fiaddl
push
mov
je
add
pushl
cmp
mov
or
fildll
lods
popf
stos
xchg
psrad
lds
inc
ljmp
inc
add
mov
rclb
loopne
lods
xor
in
call
add
mov
shrb
testl
loope
cmp
or
lcall
mov
sub
mov
xchg
xchg
cwtl
xchg
mov
push
jle
push
addb
sbb
adc
enter
lcall
lcall
pop
pop
pushl
fs
xchg
mov
push
dec
add
enter
shll
dec
movsl
adc
fcoms
or
cwtl
adcb
adc
jge
mov
or
push
icebp
mov
inc
icebp
mov
mov
pop
mov
xchg
push
gs
cmp
pop
test
aas
mov
pop
jo
lcall
aam
mov
cmp
cmp
testb
jg
cmpb
lea
mov
or
fsubp
pusha
xor
sbb
lcall
es
test
popa
cmp
mov
call
adc
cltd
sub
inc
mov
inc
cmp
or
cmc
jl
std
push
test
cmp
push
ja
aad
imul
or
into
repz
sub
or
add
jmp
push
mov
dec
push
ljmp
mov
cmc
or
sar
incl
loop
or
push
cli
mov
stc
cmp
jb
iret
jle
cmp
sub
mov
sub
ret
jo
les
xchg
xor
inc
push
push
fdivl
lock
lcall
nop
sub
pop
lahf
in
pop
mov
enter
jno
sub
daa
jmp
xor
out
insl
mov
shrb
popa
fistl
cwtl
fistl
insl
shrl
and
jmp
push
in
fucomip
fmul
pushf
aam
fs
dec
sti
cmpsl
jae
out
sahf
mov
aaa
lahf
sbb
pop
fwait
icebp
lcall
aas
fsubp
ljmp
shl
adc
mov
ret
push
aam
mov
in
aad
jle
sbb
movsb
sbb
xor
mov
jg
push
push
sbb
sahf
movsb
shll
pop
mov
daa
pushl
and
icebp
iret
movsl
or
xlat
ror
xchg
mov
mov
jae
cmp
lcall
xlat
je
push
xchg
ljmp
ror
shlb
mov
pop
cwtl
pop
leave
addl
mov
imul
jg
popf
or
mov
imul
mov
arpl
mov
pop
push
or
mov
shll
andb
fisubl
jbe
pushl
das
aas
pop
subb
add
enter
mov
sbb
jl
lahf
xor
mov
mulb
xor
xchg
sub
mov
cli
lods
movsl
xor
std
hlt
push
and
aad
push
dec
ret
adc
outsl
mov
in
out
daa
or
xchg
xchg
ja
lock
call
inc
pop
in
ret
inc
test
mov
int
xchg
iret
jne
mov
test
cld
decl
sub
mov
stos
inc
sub
sbb
cwtl
mov
int3
imul
cli
pop
xor
mov
jle
inc
jne
xor
mov
in
jnp
cmpsb
jge
or
call
fs
xchg
daa
inc
cmp
cs
push
dec
xchg
pop
lods
xchg
jb
daa
fnsave
or
sub
out
xor
xchg
or
and
call
call
pop
leave
sub
jmp
jle
jmp
popl
sub
xchg
ret
push
pop
and
mov
pusha
rcrb
aaa
inc
dec
mov
fidivrl
push
lods
push
inc
sub
les
rcr
add
ret
ljmp
and
mov
lahf
fdivr
call
push
ret
movsl
stos
ja
push
mov
push
xor
xor
test
adc
fldl
icebp
lret
lods
leave
out
in
dec
push
push
jp
add
rol
ljmp
mov
pushl
fbld
call
cmpsl
mov
push
push
clc
sbb
inc
mov
jns
das
sar
or
adc
call
jmp
mov
in
loope
fstps
ss
xchg
sar
aaa
cld
cmp
and
mov
mov
inc
xor
push
mov
shrl
or
cmp
cld
mov
mov
or
xchg
js
jg
sbb
aam
fwait
movsl
cltd
xchg
in
and
push
push
push
fwait
push
mov
call
popf
push
outsl
dec
clc
cmp
cli
sahf
xor
sbb
push
add
fidivl
mov
dec
sub
jb
ret
cmp
imul
in
shll
cltd
xlat
ss
cmc
incl
popa
or
push
fstl
pop
insl
sbbl
xchg
inc
and
add
fistpll
out
mov
cmc
xor
jae
xchg
aas
mov
push
pushf
cmc
jle
stc
pop
push
sbb
pushl
sub
sahf
push
hlt
jb
mov
jp
jge
and
leave
es
out
popl
jg
aaa
sub
jmp
int
add
xchg
lock
dec
pop
out
cli
mov
mov
cmp
pushf
inc
jno
xor
sub
push
mov
aaa
arpl
fistpl
cmc
es
rorl
xchg
popa
adcb
mov
ljmp
sahf
mov
push
shrb
in
jno
inc
cltd
mov
push
xchg
inc
inc
jo
mov
lcall
cmc
push
dec
rclb
daa
jecxz
cmp
push
incl
dec
sti
in
mov
mov
rclb
lods
mov
lods
or
pop
dec
push
mov
incl
sbb
jne
dec
aad
push
pop
pop
std
pop
push
pushf
fs
push
decl
int
mov
jbe
push
pop
mov
cltd
mov
jae
push
mov
inc
in
insb
xchg
mov
or
in
xchg
enter
cli
jmp
cld
mov
or
or
ss
call
xorl
cmc
sbb
pop
jg
mov
insl
stos
es
push
mov
sub
mov
push
int
mov
mov
mov
fsubl
mov
cwtl
inc
push
in
mov
test
push
fadds
xchg
xchg
dec
lods
and
loope
sahf
test
and
pop
decl
aaa
aad
inc
pop
std
xrelease
arpl
hlt
aad
pop
sub
push
test
push
lds
jp
pop
negl
sbbb
cmpsb
rcll
mov
mov
in
pushl
cld
xor
jae
or
jecxz
pop
cmpsb
je
sbb
fcomi
mov
mov
incl
adc
fcom
movsb
je
movsb
or
or
dec
js,pn
sub
push
mov
paddusw
xlat
jecxz
pop
mov
add
push
test
sbbl
pop
cmp
push
pop
repz
frndint
and
cli
hlt
pop
mov
push
test
inc
stc
xorl
cld
jmp
jo
stc
hlt
pushl
ljmp
leave
pusha
test
dec
out
pop
sbb
outsb
inc
aaa
inc
divl
mov
lcall
int
sub
mov
dec
in
cmp
out
push
cmp
jle
mov
jmp
cmp
xlat
xchg
test
mov
sub
cmp
pop
adc
dec
inc
loopne
fsubl
fists
pop
sub
jno
loope
add
cmp
stos
and
xchg
mov
out
mov
sar
fnsave
mov
gs
negl
and
fs
test
rclb
fcmovnbe
or
push
std
orb
mov
cmpsb
add
fdivs
inc
xor
push
mov
rcl
js
and
cmp
cmpsl
movsb
pop
jecxz
mov
or
xchg
jmp
leave
fildl
and
mov
cmp
and
call
mov
add
push
mov
jne
mov
daa
xchg
repz
ret
mov
test
ljmp
add
lcall
and
je
fidivrl
mov
pusha
adc
and
mov
out
js
es
mov
nop
loop
test
repz
pop
ds
jb
ljmp
sbb
or
jmp
push
enter
cmpsb
xor
popf
add
aas
iret
cmpsb
insb
adc
xor
decl
inc
movsl
out
xchg
sbb
or
inc
pop
mov
pop
in
lahf
or
cmp
call
sbb
xor
leave
jle
cwtl
xor
ret
daa
cmp
jmp
cli
inc
lcall
adc
pop
sub
sbb
movsb
sbb
jg
and
sub
xor
push
mov
loope
mov
rcr
cmc
pop
dec
js
inc
and
lds
mov
xchg
out
adc
jbe
roll
lcall
outsb
ja
cmpsb
jb
ss
iret
mov
adc
pop
adc
inc
pop
rcrl
fisubrs
ljmp
rorb
mov
jl
adc
sahf
mov
test
adc
in
mov
push
jp
stc
int
dec
push
push
jne
xor
out
inc
hlt
call
cli
adc
ret
sub
pop
mov
sahf
or
xlat
pop
adc
sub
clc
lcall
je
loope
mov
sub
fisubrl
xchg
sub
xor
pushl
xlat
push
lret
mov
fdivr
dec
mul
rorl
out
add
pop
jp
repz
mov
adc
mov
mov
loopne
push
pop
jmp
jbe
in
push
mulb
inc
icebp
ljmp
mov
push
xchg
pop
add
dec
clc
xorl
fidivrs
call
lods
scas
xchg
icebp
int3
cmc
mov
pop
mov
test
lret
and
jle
incl
sub
pushf
je
cmp
out
fdivrp
xchg
push
orb
mov
push
sti
jae
insl
sbb
aad
dec
push
mov
das
inc
ja
std
pop
iret
inc
leave
dec
enter
push
cltd
mov
movsl
xchg
mov
push
cli
jecxz
add
xchg
mov
data16
xlat
mov
or
jmp
inc
mov
icebp
fisubs
push
fsubl
lock
sbbb
mov
jmp
sbb
imul
insl
test
in
lahf
loope
jno
and
jmp
cltd
mov
lcall
lahf
jp
jns
aaa
mov
lds
iret
sbb
ja
loope
xchg
outsb
jl
cmp
push
inc
sbb
repnz
pushf
fcomip
call
sub
push
ja
ret
xchg
push
not
and
push
testl
adc
adc
jmp
cmp
push
ljmp
outsl
lock
ljmp
cli
and
insb
mov
andb
les
pop
xchg
dec
cmp
call
lock
out
xchg
adc
jecxz
aam
rorb
loope
in
cmp
mov
test
rcr
rorb
jmp
push
push
mov
mov
out
xchg
scas
lods
in
addr16
xor
ja
negb
je
dec
push
push
mov
push
std
jo
dec
mov
mov
push
aas
ja
mov
adc
push
push
jge
decl
cmp
shrb
adc
mov
and
sbb
lret
mov
pop
pusha
sub
dec
imul
cmp
roll
call
pop
movsb
movsb
shr
test
adc
or
mov
jl
out
mov
test
add
cmp
dec
mov
inc
es
lea
jmp
pushf
mov
dec
stos
daa
dec
hlt
push
ret
sub
mov
push
jge
decl
in
int3
lods
sbb
popa
gs
add
mov
sti
fmuls
icebp
pop
jl,pn
mov
decl
addr16
or
mov
mov
mov
cmp
inc
sub
pop
decl
cli
xchg
sahf
out
stc
sub
in
sbb
mov
mov
mov
ret
aaa
jae,pt
scas
cli
jnp
dec
jl
inc
mov
aad
sarb
jb
dec
xlat
xchg
int
lods
into
call
sarl
jbe
sarb
xchg
lods
adc
imul
stos
push
popf
mov
push
mov
jmp
dec
imul
orb
push
scas
sbb
incb
aaa
sbb
cmpsl
and
incl
pop
icebp
mov
je
sub
and
pop
insl
ficoms
rolb
nop
pop
inc
dec
inc
mov
sub
out
jnp
icebp
jecxz
mov
dec
out
lahf
test
jmp
repnz
xchg
lea
shl
pop
in
out
dec
cltd
add
xchg
mov
scas
lods
jne
pusha
lods
mov
ja
pushl
mov
arpl
lock
xchg
sbb
dec
or
scas
inc
mov
imul
xor
pushl
mov
jg
sub
xor
jns
pop
xchg
rclb
sub
stos
lods
fmull
addr16
lret
sti
cltd
sub
mov
stc
lods
mov
xor
mov
andl
outsb
jle
lcall
xor
push
sub
push
repnz
insl
cmp
decl
xchg
push
loope
adcb
and
cltd
and
mov
ljmp
mov
or
xlat
dec
lahf
xor
or
fcoml
addr16
sbb
repnz
mov
addl
cmp
or
cmp
lret
adc
insb
stos
cmp
pop
imul
jg
mov
dec
jo
fstp
and
clc
lret
jnp
push
sti
ljmp
lcall
mov
ret
mov
popa
dec
idivl
hlt
ret
shr
cmpsb
jbe
mov
decl
xchg
jg
push
xlat
sbb
iret
mov
jge
sti
lods
loopne
outsl
lods
aaa
popf
enter
cmp
jmp
xchg
ds
add
shll
int3
ja
mov
cli
test
nop
cmp
push
add
shlb
adc
mov
xlat
addl
incl
stos
and
push
jno
jnp
popf
fs
xchg
mov
jl
lock
mov
xchg
out
mov
insb
lea
sub
movsl
adc
in
lret
loopne
mov
cmpb
push
loopne
out
clc
outsl
leave
push
mov
repnz
adc
das
sub
out
cmp
lock
faddp
gs
add
sbb
daa
jno
shrl
inc
test
fsubp
push
xor
test
xchg
dec
xlat
iret
and
stos
cli
js
xor
mov
out
int3
push
lcall
xchg
xchg
movsl
and
xchg
inc
jge
popf
scas
iret
jo
cmpsl
dec
push
movsb
cmp
add
push
mov
push
xchg
les
sbb
dec
or
in
cld
pop
cmp
or
and
lcall
xor
mov
mov
xchg
pop
fnsave
call
push
call
cwtl
cld
xor
notl
jecxz
xlat
jge
mov
outsb
pop
imul
or
movq
jmp
cli
pop
and
xchg
cmp
mov
push
mov
icebp
fisttps
sub
shlb
idivl
inc
addr16
adc
fimuls
jp
insb
push
push
add
in
push
neg
sar
rcr
arpl
cmp
incl
pop
loop
dec
lods
push
clc
iret
ljmp
cmpl
jo
push
pause
pop
mov
xchg
lock
jmp
aad
ret
push
xlat
dec
mov
mull
decl
ficoml
mov
push
xor
mov
cmp
test
call
andb
imul
mov
sbb
push
jmp
dec
push
and
call
das
pop
sbb
add
bound
cmpsb
jns
sub
fwait
cwtl
mov
addr16
inc
sub
ja
decl
es
mov
pop
xor
pop
jge
popa
xor
mov
ljmp
shr
js
mov
inc
into
mov
or
addr16
ret
mov
adc
jp
in
sbb
std
bound
add
adcb
mov
lcall
enter
leave
cwtl
xchg
pop
sar
mov
sub
nop
jl
pushl
sbb
aaa
and
test
and
sub
mov
imul
pop
mov
out
adc
cmp
dec
dec
and
sbb
mov
ret
jbe
mov
mov
mov
sub
mov
xchg
add
pushl
std
out
out
cmp
and
lods
popa
ss
mov
or
xchg
jmp
sahf
outsb
sub
pminub
sbb
adc
jne
pop
mov
outsl
decl
adcl
xlat
push
xchg
test
lods
cmc
push
xor
mov
adc
xchg
stos
adc
mov
xchg
xlat
ret
or
test
ljmp
inc
rcrb
pop
cmp
inc
insl
dec
lahf
fisubs
lds
insb
repnz
imul
scas
mov
or
push
cmpsl
call
div
loop
xor
incl
lods
xchg
stos
inc
clc
bound
out
ret
int3
jl
andb
out
adc
scas
mov
add
pop
jp
xchg
or
std
mov
ja
in
pop
in
clc
ja
fstpt
not
adc
movb
mov
pushl
mov
push
mov
jns
sbb
std
and
jecxz
test
lcall
xchg
sub
mov
lods
imul
inc
inc
popa
push
movsb
mov
ljmp
int
ds
int3
sub
fwait
pop
sbbl
jb
fwait
push
daa
mov
out
or
stc
jmp
push
js
lret
mov
pop
int
cmpsl
jge
mov
lcall
or
adc
clc
xlat
gs
lock
movsb
lock
push
cltd
mov
xchg
es
mov
mov
fisubl
mov
clc
fs
xchg
fbstp
mov
stos
js
fdivrl
adc
jp
mov
adc
jp
cwtl
push
mov
inc
fwait
xchg
ret
sbb
fdivrs
mov
cmp
loope
cmpsl
dec
cmpsb
inc
gs
jo
call
rcrl
sub
adc
dec
push
stos
nop
pop
mov
incb
sub
dec
push
adc
push
inc
mov
rcrl
and
out
push
sub
clc
cli
jge
mov
sti
gs
inc
hlt
aad
xchg
inc
xor
xor
xor
ljmp
add
jbe
or
movsb
ds
rcrl
movsl
inc
ret
mov
shlb
loop
test
sub
jle
out
or
jb
stc
aad
lock
mov
cmp
fiadds
in
shl
shr
xor
cmpsl
pop
jmp
fmuls
mov
insb
jns
dec
xor
cmp
push
outsl
sub
dec
popa
inc
and
inc
sti
or
xor
xchg
ljmp
sysenter
jl
mov
insb
dec
push
adc
cmpl
fistps
or
push
mov
and
dec
les
ret
stos
push
and
decl
push
clc
data16
jb
icebp
movsb
mov
sbb
stos
addl
sar
pop
clc
call
test
adc
inc
ret
xchg
dec
sarb
sub
add
adc
pop
mov
add
pop
mov
fidivrl
jns,pt
cmp
jmp
mov
imul
es
outsb
inc
sub
inc
push
mov
icebp
inc
andb
lcall
xchg
lods
jecxz
inc
mov
push
filds
sbb
in
mov
call
inc
fucomp
es
inc
mov
jns
clc
sbb
mulb
pushl
shr
inc
fcoml
dec
pop
xchg
scas
push
in
js
lret
pusha
push
mov
lock
call
pushw
push
jmp
lret
aaa
mov
cmp
dec
mov
lods
xor
ss
stc
sbb
or
ljmp
or
test
mov
xor
les
mov
mov
incb
xor
dec
push
daa
xor
addr16
loope
aaa
int3
mov
fmul
int
push
jbe
xchg
scas
out
incl
aad
shr
xchg
xor
leave
ret
mov
mov
in
xor
sub
cld
loop
or
inc
mov
or
xchg
into
arpl
sub
cld
xchg
ljmp
cmp
xchg
sti
mov
lds
jbe
lret
fisttpl
push
outsl
and
std
out
ja
jmp
xchg
aam
sub
jp
bound
xorb
xchg
pop
sub
faddl
dec
in
cmpl
fcomps
je
mov
jae
ja
fistpll
adc
call
scas
mov
mov
loope
mov
lahf
mov
mov
sbb
out
push
mov
add
jg
fldl
sbb
or
or
dec
decl
and
sbb
dec
jo
cmp
push
push
and
xchg
incl
cli
mov
jecxz
xor
adc
out
lret
mov
inc
lret
sbb
addr16
dec
mov
pop
pop
push
imul
imul
mov
addr16
call
mov
ret
lcall
pop
adc
push
mull
or
xor
jnp
jmp
or
decl
shlb
and
test
ljmp
mov
call
das
in
sub
xor
dec
xchg
pop
pop
in
popf
jl
jecxz
adc
lcall
adc
std
dec
test
out
movsl
sbb
popf
in
aad
out
andb
pop
mov
sbb
pop
imul
xlat
mov
popf
ss
shll
ret
jg
mov
in
popa
or
mov
fstl
lret
popa
pop
jp
fisubs
repz
andl
cli
std
iret
jecxz
lret
mov
pusha
xor
in
inc
and
outsb
in
outsl
je
mov
xchg
pop
out
mov
rcr
add
xchg
out
out
xor
xor
cmp
daa
lds
nop
dec
out
pop
inc
outsl
test
ds
push
pop
pminsw
lcall
fidivrl
lock
mov
mov
mov
out
decl
in
mov
dec
push
cld
jecxz
pop
cmpsb
or
and
pop
or
pop
fidivl
or
sahf
fiadds
push
push
lret
adc
shrl
ror
ret
cmc
sub
mov
enter
mov
jge
std
or
shll
xor
cmp
sbb
mov
pop
pop
outsb
add
sub
and
faddp
sbb
repz
jle
sbb
fsubrl
cmpsl
mov
jns
lcall
mov
mov
icebp
fidivrl
sti
jecxz
push
push
xchg
xchg
dec
shlb
pop
in
jmp
adc
sahf
pop
mov
pop
hlt
adcb
mov
outsl
pushl
sub
xor
adc
jge
lcall
sub
insl
jb
add
decl
scas
sahf
lods
mov
mov
mov
gs
movsl
xorb
adc
mov
insl
or
pushl
dec
inc
iret
dec
mov
orb
jnp
ret
dec
leavew
test
lcall
sub
test
mov
aad
pop
sub
inc
mov
cwtl
aaa
call
fs
or
jns
stc
ss
daa
movsb
loopne
loop
aad
sub
stc
adc
fiaddl
push
loopne
jns
jmp
push
pop
in
out
xor
push
pop
cmp
imul
jg
into
inc
das
adc
add
jb
cltd
pop
or
push
sub
in
mov
sbb
rorl
cmpb
call
ds
sarb
loopne
aam
cli
mov
shrb
cli
mov
rorb
cmpl
jmp
mov
repnz
in
inc
iret
mov
daa
lahf
jb
nop
mov
mov
push
or
fcomip
gs
cmc
mov
adc
lret
cmpsb
pop
or
rcll
call
loopne
cmp
bound
jne
or
mov
xchg
lahf
dec
enter
sub
xchg
pop
mov
decl
loopne
inc
mov
pop
inc
sub
or
mov
or
sbb
fcomip
dec
push
insl
insl
mov
push
xchg
dec
loopne
push
int
loopne
in
es
bound
shlb
lcall
hlt
xor
or
loop
lock
call
adc
xlat
mov
imul
stos
or
add
jp
ja
jl
pop
sub
pushl
cmp
arpl
inc
inc
stos
mov
push
pushf
fistpl
pushf
sarb
cmp
shlb
sub
fs
dec
pushf
inc
or
les
pop
pop
cwtl
jge
fidivrs
or
lods
inc
cmp
fists
sub
ror
out
insl
ja
mov
inc
jbe
push
mov
inc
ljmp
add
icebp
and
inc
lods
push
fcoml
xlat
adc
aas
rcll
jb
out
dec
insb
xchg
iret
call
jle
and
sub
lcall
adc
testl
insl
push
jg
int
jbe
mov
mov
loopne
add
mov
loopne
xchg
lret
jg
add
std
aas
inc
sub
push
movsl
hlt
cmpsl
jnp
lods
mov
push
inc
fs
repnz
cld
push
or
xlat
mov
outsl
dec
xlat
rcrb
ljmp
ss
xor
decl
ss
pop
mov
jp
cmpsl
ds
fiaddl
cmp
into
in
mov
movsb
push
push
fdivrl
dec
cli
mov
xchg
add
cmp
and
ja
inc
ret
xor
lcall
mov
es
jne
inc
lret
adc
mov
cmpsb
jp
pushf
fsubrs
pop
lock
sub
xor
adc
ja
ret
not
pop
call
sbb
imul
sbb
cmp
pop
iret
out
pop
loope
adc
mov
pushf
pop
mov
clc
push
lea
rcl
pop
push
mov
lcall
arpl
or
jl
cwtl
ret
or
shll
nop
pop
insl
jbe
out
mov
popf
call
es
sarl
pop
mov
es
inc
xor
repz
out
popf
iret
jle
pop
incl
xor
xchg
xchg
or
sub
mov
daa
or
mov
inc
push
les
call
dec
out
jl
jns
pop
fwait
lea
rolb
push
aad
add
repnz
pushl
push
sti
or
jmp
pushf
jecxz
jbe
jo
jne
push
and
xchg
sar
incl
adc
pop
jge
dec
push
mov
mov
ja
push
cld
mov
pop
jle
sub
out
inc
xlat
pop
repz
jb
xchg
push
movsb
jne
out
scas
xchg
xlat
pop
ror
xchg
push
cld
pushl
adc
std
fldl
fs
push
ja
xchg
pop
fldt
dec
call
call
in
xchg
gs
jecxz
int
mov
jbe
insl
shl
call
xor
pop
les
push
in
jge
mov
cmp
mov
rep
xchg
hlt
ret
cwtl
mov
test
lock
sar
mov
sub
lret
sahf
jns
xchg
stos
xor
mov
or
in
and
lret
out
cmp
decl
pop
jb
int3
xor
int3
sub
cmp
js
jg
je
ljmp
push
vprotd
inc
lock
out
adcb
daa
cmp
or
mov
clc
decl
mov
outsb
arpl
ja
test
incl
dec
adc
movsl
inc
pop
lahf
lds
dec
or
pop
mov
aas
sbb
add
jmp
lcall
jg
jg
sti
adc
nop
adc
negb
fdiv
lcall
inc
test
in
rorl
jb
aam
loope
xchg
adc
sbb
lcall
or
add
xchg
cmp
loopne
sarb
add
pop
les
xor
js
loop
imul
sbb
std
mov
in
xchg
jecxz
inc
inc
or
xor
add
cwtl
cmp
dec
and
daa
push
call
pop
jmp
sahf
mov
push
dec
in
mov
pop
xor
xor
and
std
cld
push
call
mov
jae
jns
sub
push
inc
mov
or
in
mov
clc
jle
notb
lret
in
mov
cwtl
icebp
ljmp
decl
lock
sub
push
pop
push
pop
xchg
and
das
sarb
sbb
jge
rorl
xorb
call
xlat
ljmp
testb
cmp
xchg
jmp
push
stos
mov
outsl
fdivrs
scas
or
sbb
fidivrl
push
icebp
inc
addr16
xor
mov
lock
hlt
fildll
mov
xchg
adc
mov
setp
and
push
enter
push
andl
shrb
out
mov
xchg
jns
cld
mov
mov
mov
mov
das
std
add
jmp
add
mov
decl
test
stc
lock
adc
cltd
cltd
xor
enter
mov
jo
addr16
call
cld
decl
shr
dec
sub
mov
adc
add
stc
bound
das
loope
xchg
dec
out
ret
sub
xor
dec
stos
fstps
fstpl
kmovw
decl
lcall
xor
cmc
xor
jg
dec
out
jle
leave
jb
scas
and
popa
mov
mov
out
inc
in
imul
xchg
xlat
pushl
lahf
daa
test
ljmp
repnz
faddl
sub
out
or
mov
sbb
or
addr16
sar
decl
adc
stos
mov
cmp
add
xchg
add
cmpsl
xor
add
call
lods
rorl
xorb
jno
sub
lcall
mov
jge
inc
negl
test
or
fisttpl
sbb
test
das
lcall
sarl
sti
pop
aad
lea
nop
test
scas
cmc
clc
or
fnsave
jg
icebp
xchg
daa
mov
push
scas
xor
dec
push
sar
ss
lret
lods
idivl
shlb
arpl
push
fildll
stos
lcall
cmp
or
mov
repz
into
inc
jbe
adc
pop
mov
aas
sbb
incl
push
mov
jp
mov
adc
jns
adc
cli
enter
inc
aaa
inc
dec
and
inc
sub
push
jno
cmp
xchg
mov
mov
cmpsb
cmp
les
inc
mov
lds
sub
sar
dec
mov
imul
dec
mov
scas
jl
fistl
jmp
decl
push
push
fidivl
mov
jns
mov
cmpsb
adc
inc
sbb
inc
xor
cmp
lock
inc
cli
pop
jle
aas
cmp
int3
mov
push
mov
pop
aad
pop
aas
fisttps
and
mov
or
push
ret
movsl
sbb
incl
dec
inc
outsl
fucomp
dec
jnp
pop
dec
mov
dec
sti
cld
ljmp
lods
lret
dec
insb
leave
jle
sub
adc
or
push
scas
cltd
push
or
stc
mov
call
pop
popf
or
cmc
add
je
fnstcw
adc
xchg
movb
pushl
and
mov
aas
sub
inc
add
cmpsb
mov
push
shrb
pushl
ljmp
jo
rclb
es
adc
xchg
push
xor
decl
inc
nop
int
out
cmp
jnp
push
or
jno,pn
rcrl
lcall
jmp
ud2
in
frstor
xchg
hlt
in
sub
inc
addl
movsb
pop
loope
shl
mov
add
or
or
and
cmpxchg
mov
in
sbb
mov
rcrb
lahf
lret
add
push
inc
sbb
xor
push
xchg
and
js
xor
in
push
std
sbb
sub
xchg
rol
out
shl
push
out
arpl
aaa
dec
aaa
inc
jecxz
in
inc
call
add
cli
nop
xlat
test
popf
jnp
sub
mov
or
lcall
subl
jbe
cli
xchg
sub
adc
inc
iret
in
jg
neg
adc
aaa
movsb
push
icebp
mov
pushl
push
ljmp
jns
cmp
gs
push
jnp
psubusw
mov
inc
fdivs
call
jbe
and
out
lock
dec
mov
add
pop
xchg
jp
fs
dec
cld
and
xchg
and
xchg
lret
fstps
hlt
imul
adcb
addr16
dec
cmpb
je
jnp
stos
outsb
aaa
pop
pop
cmc
mov
daa
fidivrs
ja,pt
mov
xchg
jmp
shll
add
cmp
js
cmp
inc
orl
and
movsb
push
test
or
movl
cmp
in
out
lret
mov
inc
mov
incb
lock
scas
lret
mov
jns
lock
add
gs
jg
imul
and
pop
xor
pusha
decl
xchg
xchg
out
loopne
pop
push
jbe
sti
repnz
pop
mov
scas
xchg
dec
dec
sarl
dec
and
decl
xor
lock
mov
lock
fistpl
lea
sti
aaa
dec
call
sub
push
or
sbb
or
sub
jmp
and
lahf
inc
adc
fs
mov
test
mov
mov
sahf
xchg
fcmovnu
and
or
and
mov
push
out
fidivrl
pop
pop
sub
aas
pop
xor
es
lahf
mov
rcll
inc
push
mov
nop
je
outsl
adc
lahf
cwtl
xchg
insl
leave
clc
loope
call
outsb
and
lret
xchg
and
test
xchg
and
jecxz
loope
insb
je
push
sbb
lcall
push
dec
out
sbb
ret
mov
inc
movsb
ja
push
pop
or
xchg
stos
or
xor
mov
sahf
outsb
adc
push
cmp
repnz
sbb
scas
cli
ss
mov
cmp
out
hlt
or
pusha
or
hlt
pushl
mov
mov
das
or
imull
fisubl
js
in
mov
inc
jecxz
mov
push
iret
mov
lea
mov
push
xor
jecxz
ret
mov
sub
ds
ja
outsl
mov
fadds
mov
push
shll
pop
ss
xlat
lcall
ljmp
xchg
push
cmp
jg
call
jg
repz
les
push
dec
jb
mov
pop
mov
dec
out
pop
int3
daa
add
ljmp
xchg
in
call
xchg
sti
shlb
fiadds
sbb
push
call
loopne
sbb
repnz
jae
movsb
andb
mov
rcll
scas
loopne,pn
pushl
out
aad
ret
inc
sub
fisubrs
jecxz
ja
cmp
cli
jg
pop
lods
mov
or
sub
loop
mov
mov
lock
ljmp
outsb
fldenv
repz
dec
int3
mov
test
push
xor
cmp
es
int3
cli
lcall
lods
daa
testl
dec
jne
arpl
push
lret
std
imul
xchg
cmp
out
xlat
cld
xchg
jmp
jnp
lret
mov
outsb
outsl
dec
dec
int
fistl
and
sub
add
inc
loope
jg
push
movsl
scas
xor
jle
mov
fucomi
add
js
addr16
roll
call
dec
stc
scas
or
rol
stc
rcl
cmc
sbb
pause
push
lret
lcall
int
movb
pop
clc
and
sbb
leave
jo
push
cmpsb
adc
icebp
call
mov
popa
xor
imul
push
adc
out
dec
lcall
movsl
add
and
jno
pusha
mov
and
dec
lahf
orb
jge
xor
inc
pop
clc
loopne
jae
out
pushf
test
out
aam
push
xchg
and
pop
test
add
jno
fcomip
outsl
push
jecxz
outsl
mov
sub
mov
adc
mov
outsl
cli
jne
rcll
in
cltd
add
mov
xchg
punpcklbw
mov
mov
stc
ret
sbb
adc
sub
insb
dec
ret
dec
pushf
mov
pop
mov
push
lahf
vprotq
enter
jns
or
push
enter
and
mov
stc
cmp
aam
xor
pop
mov
and
cmp
add
in
pop
mov
dec
scas
lcall
xor
adc
mov
lds
mov
pop
lods
in
iret
popa
cli
mov
incl
out
dec
push
pop
dec
mov
adc
push
cmp
pop
inc
or
cmp
mov
loopne
xchg
push
xchg
in
cmp
ds
fiaddl
aas
filds
jg
pop
push
sub
lret
push
jmp
aam
pop
rolb
dec
cltd
mov
adc
push
pop
pop
pop
dec
fstpt
lret
mov
or
jmp
nop
push
lcall
add
cmpsb
popf
cmpsb
repnz
loope
pop
pop
mov
mov
xor
mov
es
outsb
shll
jle,pt
ja
mov
jmp
ljmp
dec
cwtl
cmp
mov
mov
jge
mov
mov
jmp
and
mov
mov
imul
es
and
cld
out
jne
mov
mov
call
ret
lcall
inc
insb
jns
xchg
fcompl
mov
push
scas
mov
les
sbb
loop
cmp
out
mov
shlb
pushl
repz
icebp
repz
pop
inc
or
xchg
jmp
jg
loope
cmpl
call
jo
adc
stos
shlb
nop
and
cmp
fistpl
ficoml
adc
stc
stos
ret
inc
mov
bound
sbbl
mov
add
decl
pop
jno
sbb
and
jmp
inc
outsb
push
bound
push
mov
add
std
decl
sub
push
test
mov
clc
ljmp
cld
mov
cmpsw
arpl
xor
lods
mov
sbbl
xchg
lds
in
mov
cmp
cmp
call
test
lcall
pop
daa
outsl
cmp
pop
pop
push
scas
add
xchg
jge
test
decl
dec
in
xchg
roll
cmp
cld
pop
jno
ret
mov
cmp
fmuls
test
lcall
scas
mov
jo
cli
jp
push
fldt
pushl
jnp
dec
xor
xor
lods
cmp
mov
shll
les
arpl
mov
aas
inc
jmp
jg
xchg
dec
cli
pop
inc
or
mov
cld
decl
lods
out
je
mov
sbb
jae
aam
push
clc
jmp
jns
adc
and
pop
and
nop
js
in
aas
addr16
int3
fnstenv
dec
in
imul
scas
ret
add
fists
popa
ret
xor
ljmp
ljmp
bound
dec
dec
or
stc
adc
ror
pop
and
call
ret
push
mov
pop
scas
shrb
jno
out
scas
cmp
std
ja
mov
incl
add
scas
std
xchg
loop
pop
sub
fcomp
or
hlt
inc
testl
decl
push
js
lods
lock
sarl
mov
loopne
xor
adc
clc
lahf
xchg
sub
daa
imul
and
fs
adc
jnp
in
popa
rolb
iret
xor
xor
fcomip
dec
jo
sub
ss
loope
jae
fimull
cmp
arpl
jmp
adc
std
les
dec
mov
sti
push
clc
sti
mov
pop
ret
add
or
jmp
lods
jne
sbb
cld
iret
data16
inc
daa
push
movsb
movsl
hlt
xchg
xchg
mov
adc
leave
mov
inc
mov
dec
iret
in
in
jno
mov
stos
jl
inc
inc
jg
out
cli
jo
jne
jp
lcall
mull
adc
inc
int
test
std
pop
and
push
push
mov
lods
imul
mov
jg
pop
ficompl
imul
mov
insb
jae
repnz
pop
stos
lods
js
mov
lock
sub
mov
and
mul
mov
push
decl
jno
cwtl
movsb
pusha
dec
mul
mov
shlb
jb
inc
popf
or
incl
sar
lods
in
into
inc
xlat
xchg
xor
insl
out
xor
iret
cmp
call
cltd
mov
xlat
mov
int
jnp
lods
cmpsl
lcall
cli
and
adc
sbbl
pop
and
mov
adc
pop
fs
inc
lcall
and
xor
out
ja
dec
hlt
sub
je
sub
inc
stos
mov
jg
dec
enter
addl
lret
sti
add
xchg
decb
lcall
mov
xchg
push
sub
dec
in
in
ds
cmpsl
adc
repnz
xor
sub
jo
cmpb
decl
xor
test
sbb
jb
outsl
jl
xor
sbb
fldcw
out
clc
pushl
in
push
ficompl
sub
mov
in
push
jl
seto
sub
incl
dec
xchg
repnz
out
aam
mull
mov
in
cwtl
ljmp
pop
daa
push
out
sub
test
xor
cmp
pushf
inc
sbb
and
leave
stos
movsl
xchg
xor
add
xorb
inc
dec
pop
mov
fwait
ror
das
xchg
scas
call
pop
cmpsb
sar
push
jns
popf
in
xchg
jo
out
dec
push
lret
fldcw
call
test
mov
inc
or
mov
movsl
inc
mov
mov
fbstp
stos
pop
movsb
enter
iret
int
jl
rorb
lcall
call
push
jno
das
dec
fistps
out
mov
lret
cmpsl
push
and
jg
mov
outsb
in
jbe
shll
adc
out
in
xor
mov
jmp
addb
cld
mov
je
or
repnz
xlat
ret
lcall
je
fbstp
out
jno
mov
pusha
xor
cld
sub
sarb
dec
xchg
adc
jg
mov
insl
jmp
repz
and
imul
pushl
sub
push
imul
dec
in
in
sub
mov
ljmp
push
adc
in
repnz
in
jne
sbb
leave
pushf
mov
jmp
sbb
insl
mov
int3
and
sub
cmp
scas
insb
add
jg
mov
cltd
adc
cmp
int3
add
push
sbb
aad
jl
jb
pushl
xchg
pop
or
mov
mov
ret
pop
or
push
and
aas
mov
jmp
popaw
or
mov
or
and
jb
fsubr
lods
and
push
incl
stos
sub
bound
push
pop
pop
scas
daa
pop
fwait
push
mov
add
push
inc
pop
push
subb
outsl
clc
mov
adc
add
shrl
inc
int3
jno
push
sbb
dec
ljmp
in
mov
cmpsl
dec
insl
push
jbe
out
lea
and
xor
ja
incl
mov
cmp
sub
mov
xchg
fwait
mov
loopne
ror
test
push
movsb
cli
loopne
mov
adc
inc
out
inc
lds
loop
add
fwait
cmpsb
jbe
jge
aas
call
loopne
add
mov
adc
test
adc
xor
push
decl
sub
clc
jmp
jmp
es
inc
sub
cld
dec
mull
sbb
ljmp
enter
jle
mov
inc
mov
loop
sbb
test
mov
jecxz
pop
scas
pushf
add
into
movsl
or
je
mov
inc
or
sbb
sub
mov
incl
sbb
lock
aaa
sub
push
xchg
cmp
jbe
push
fs
push
jb
fnstcw
filds
inc
xor
data16
ss
outsl
fldln2
ret
aam
and
sahf
call
jmp
sbb
adc
mov
lcall
add
ret
xlat
lret
sar
call
orb
add
cwtl
and
imul
sub
stos
jge
sbb
incl
inc
inc
or
fcoms
add
or
push
jb
cmp
xchg
sub
and
insl
lahf
imul
cwtl
mov
iret
and
decl
jno
mov
and
cmp
movb
cmp
lcall
test
mov
add
ljmp
inc
test
pop
sub
rcll
fcomip
lret
std
mov
rolb
out
sbb
dec
pop
adc
pop
in
stos
or
das
clc
call
jecxz
xchg
clc
out
inc
mov
mov
cmp
inc
mov
testl
fwait
ljmp
ret
in
mov
ss
xchg
call
fsubp
sahf
xchg
jp
or
xchg
std
mov
cld
mov
ds
bound
stc
arpl
pop
gs
push
movsb
cmp
sbb
mov
out
ss
sbb
cmp
incl
xor
or
xchg
sbb
jg
mov
cmp
mov
sysret
sub
mov
mov
fwait
outsl
or
int3
cs
mov
inc
dec
das
aaa
pop
mov
orl
adc
mov
bound
jmp
mov
cmc
aas
lods
cwtl
cmp
jg
push
leave
jg
in
push
addb
inc
lea
lods
scas
jno
mov
add
lcall
cwtl
repz
repz
push
mov
or
stos
enter
add
nop
push
push
add
mov
add
add
adc
or
xchg
jle
sbb
adc
add
nop
pop
add
xorl
sub
or
pop
add
add
adc
enter
mov
add
lcall
inc
xor
pop
rorl
cld
and
incl
fwait
pop
fwait
sub
sbb
xor
stos
dec
push
inc
push
pusha
into
sub
inc
ss
ljmp
in
pop
and
jmp
aam
mov
in
push
es
ds
inc
fabs
test
jnp
and
incl
addr16
enter
xchg
xorl
dec
cs
mov
push
out
out
mov
js
push
sbb
ficoml
std
push
mov
rcrb
mov
jg
mov
xor
push
push
and
jge
mov
or
lods
pop
add
add
call
popa
xor
sub
mov
mov
mov
add
sub
mov
in
adc
jmp
idiv
out
fs
xchg
sub
add
pop
mov
dec
mov
add
inc
mov
stc
ret
ljmp
mov
mov
mov
jmp
testl
decb
test
incl
mov
add
sub
jae
jge
adc
cmp
jne
mov
adc
hlt
push
adc
mov
insl
mov
add
nop
sub
incl
cmp
push
out
push
in
cltd
cmpl
in
call
das
cwtl
lds
sbb
mov
jle
xchg
sub
push
pop
push
ljmp
jbe
stc
jp
nop
test
lret
int3
pop
int
cmpsb
xchg
lods
mov
les
mov
inc
mov
mov
ljmp
cld
test
inc
out
jns
loopne
test
mov
imul
sbb
call
loop
dec
cmp
mov
test
sbb
inc
je
les
call
push
int
xor
repnz
mov
fs
enter
cmp
cli
pop
xchg
mov
call
sti
in
jno
mov
in
lods
jne
outsl
add
add
lcall
adc
stos
gs
loop
enter
sbb
inc
jb
mov
insl
scas
decl
pushf
inc
or
dec
fiadds
arpl
mov
cmp
lahf
pop
repz
decl
mov
mov
lea
popl
lret
jle
cli
add
ljmp
jmp
sbb
push
and
mov
sti
stos
sub
jns
rclb
loop
mov
gs
or
ljmp
dec
sbb
sub
scas
and
repnz
cld
sbb
incl
call
clc
inc
imul
jnp
test
or
call
pop
push
jg
test
jmp
mov
fwait
xor
sti
inc
dec
inc
inc
icebp
call
stos
cmpsl
mov
mov
mov
and
push
adc
add
mov
adc
dec
sub
adc
ja
add
inc
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
mov
pop
lcall
in
cld
mov
sub
add
lods
jecxz
sub
mov
cmp
xchg
fimull
call
push
or
inc
lcall
jle
aas
hlt
mov
fstpl
int3
imul
sub
pusha
in
arpl
push
pop
sbb
sahf
mov
insl
jp
mov
incl
int
das
jg
push
movsb
push
pop
push
test
outsb
sarb
pop
add
mov
pushl
xor
daa
adc
mov
fninit
or
jnp
adc
idivb
call
out
push
jno
ljmp
fisttpl
orl
jp
adc
push
shlb
ljmp
insb
out
orb
out
scas
scas
sub
imul
mov
fsin
lahf
mov
mov
mov
mov
rcl
push
rcr
mov
aad
dec
mov
mov
hlt
jg
shll
cmp
leave
sbb
sub
jge
aaa
cmpsl
cmpsl
inc
andl
fcom
adcb
addb
push
stos
andl
sub
dec
xor
aam
jmp
mov
inc
notl
push
or
aaa
cld
loop
ror
cmp
pushf
xor
pushl
sti
bound
pop
movsl
es
test
daa
mov
adc
jns
rolb
jb
incl
loopne
pop
icebp
adcl
ficomps
test
in
lahf
sbbl
das
add
push
call
icebp
test
pop
mov
pop
sub
cmp
xor
sbb
inc
sbb
push
shll
decl
add
mov
cli
push
fdivl
mov
in
sbbb
pop
mov
sbb
fisttpll
out
fmuls
sar
decl
dec
jnp
out
add
fldenv
scas
pop
pop
jmp
lods
loop
in
imulb
pushl
loope
cmp
fst
roll
push
daa
pop
in
aad
aas
pop
fdivs
imul
pushl
shrb
sbb
cs
inc
xlat
loope
dec
add
cwtl
fdivrs
jae
lcall
mov
xor
pusha
aam
repz
lahf
add
or
mov
lcall
xor
sub
dec
jns
mov
cmc
movsb
mov
lret
repz
inc
jne
sbb
into
add
sbb
jmp
je
lea
ds
push
xchg
mov
add
add
or
push
out
fistl
sbb
push
pop
decl
adc
push
sub
call
xor
dec
hlt
xor
lcall
movsl
pop
in
iret
jg
sbb
sbbl
sbb
addb
jbe
pushf
sbb
push
fcmovu
fsubs
or
sub
pop
hlt
and
in
fwait
jecxz
aad
stc
movsl
insb
pop
push
and
pushl
jg
pop
nop
cmp
pop
sbbb
jecxz
sub
fldl
ljmp
or
test
lds
jle
pop
call
xor
mov
je
in
push
sub
or
in
nop
rcr
jnp
xor
stc
sbb
cmp
int3
aaa
jge
aam
xchg
mov
cmpsl
or
lds
or
sub
js
repnz
pop
outsb
cmp
fcomi
aam
xchg
inc
mov
jbe
call
xor
adc
test
sub
das
rcrl
orb
jg
push
cwtl
or
nop
stc
jl
or
jae
sbb
adc
je
cmpsl
sub
lcall
jl
cwtl
adc
pop
sbb
adc
sub
or
jo
pop
push
jne
or
bound
push
jecxz
cld
pushf
or
cmp
cltd
es
mov
lock
xchg
or
out
sbb
sarl
xchg
rcrl
pop
pop
add
lcall
xor
mov
sbb
sub
dec
xchg
adc
push
push
aam
jg
pop
jns,pt
jg
outsl
xchg
or
je
or
cmp
pop
or
cmp
lods
loope
shll
mov
fstp
sbb
jg
mov
jg
mov
ss
or
xor
pop
aaa
outsb
scas
push
xor
adc
lock
or
sub
jp
mov
cmpsl
push
mov
dec
mov
add
addr16
ds
jg
fstpl
xor
xchg
xor
adc
out
jl
fbstp
fcompl
lcall
sub
xor
shl
dec
sub
jecxz
jae
cltd
aad
jecxz
inc
or
or
int
sub
dec
jns
adc
pop
lret
adc
testb
jecxz
sahf
addr16
addb
popf
inc
sbb
jmp
push
negb
dec
iret
push
cli
sub
imul
sti
sbb
pop
in
jae
sub
jg
push
and
mov
out
dec
sub
je
out
loop
pop
js
jns
neg
xcrypt-ctr
cmpsl
push
std
jle
push
femms
jge
jle
cmp
pop
es
subb
mov
repnz
xorb
adc
jbe
dec
or
lods
jle
pop
sti
outsb
in
sbb
pop
in
insb
lea
les
push
jle,pt
mov
test
push
in
hlt
pop
sbb
aas
pop
cmp
push
lret
cltd
addb
mov
rcrb
jg
sbb
clc
fbld
movsl
jl
lret
and
pop
lahf
mov
fsubs
pop
or
arpl
mov
rorb
hlt
lock
ret
test
mov
aas
sub
ds
jl
and
inc
add
mulb
rcrl
scas
loopne
xor
sbb
ficoms
adc
mov
push
fcoml
and
xchg
inc
notb
lods
jnp
fildl
sahf
sbb
movsb
sub
repz
cmp
test
scas
add
enter
mov
push
and
pop
push
sahf
in
jg
jle
pop
pop
push
jo
pop
aas
repnz
inc
fiaddl
xchg
popa
pushl
std
imul
inc
imul
ja
lret
dec
xchg
gs
popa
lds
out
xchg
and
imul
or
push
movsl
mov
ret
mov
or
sbb
lcall
sbb
aaa
mov
adc
enter
mov
sub
jecxz
jl
push
imul
mov
cmc
outsl
mov
push
or
lods
mov
pop
push
insb
jge
or
cld
lcall
mov
imull
sub
sbb
push
dec
jle
cld
and
mov
pop
ja
pop
add
sbb
xchg
or
pop
xchg
dec
jae
jg
sub
jl
sub
sahf
lcall
xchg
dec
arpl
xchg
pop
orl
inc
push
test
fbld
cltd
and
mov
ja
push
cltd
cmp
cmp
jo
pushf
xchg
repz
xchg
imul
adc
rcll
jg
dec
jg
dec
jecxz
sti
pop
jbe
sti
add
negl
or
sbb
insl
pushf
mov
adc
mov
jmp
sbb
sub
stos
mov
pushf
sbb
add
sbb
mov
fcomip
xchg
sarl
mov
jle
in
ja
push
add
push
and
xchg
lea
dec
insl
jno
test
jle
dec
mov
or
mov
sbb
xchg
fcomps
xchg
add
and
fcoms
jle
jecxz
pop
aas
clc
out
push
xlat
daa
stos
mov
cmpsw
outsb
pop
outsl
xlat
cmc
pop
aaa
mov
sub
lcall
test
loopne
leave
std
lahf
or
mov
cmp
orl
xchg
inc
push
pop
lock
or
cmp
sahf
cmp
sub
cmp
test
jg
cmp
or
cmc
cltd
jg
push
aaa
sti
into
pop
pop
dec
aad
pop
shrl
push
inc
outsb
jbe
add
mov
dec
orl
mov
adc
cmp
mov
lods
xchg
std
mov
inc
hlt
mov
adc
push
imulb
cli
decl
push
sbb
and
out
lret
stos
jle
pop
add
out
mov
mov
mov
movsb
mov
std
bnd
sub
dec
addl
out
add
lcall
std
pop
mov
push
test
inc
and
repnz
jp
fwait
enter
jae
sbb
mov
lcall
decb
pop
imul
xchg
xchg
das
jp
inc
jl
notb
arpl
jo
push
imul
inc
jb
adc
gs
imul
popa
je
jb
xchg
flds
push
popa
or
jbe
push
insb
aaa
pop
ljmp
cli
mov
cmp
inc
popa
outsb
imul
xor
jo
outsl
imul
inc
bound
jo
push
jbe
push
pop
dec
jns
shlb
jmp
jne
jbe
xor
push
jae
jae
inc
jp
inc
push
inc
xor
arpl
sbb
mov
pop
dec
inc
jo
imul
xor
inc
push
xor
dec
imul
cmp
pushl
gs
jns
aaa
jp
push
push
outsb
outsb
push
xor
dec
fs
pop
idivb
incl
jno
jo
push
jae
jb
push
xor
dec
cs
sti
arpl
jb
mov
dec
gs
push
gs
xor
fstpt
push
push
push
outsl
hlt
cmp
imul
xor
sahf
outsl
pop
ja
fcomip
dec
push
jae
adc
aaa
xor
push
push
dec
addr16
jae
jo
dec
outsl
xor
dec
sub
jo
push
pop
adc
inc
inc
jno
outsl
sub
xor
dec
dec
push
insb
push
jo
imul
call
cld
push
bound
xor
inc
outsb
inc
gs
gs
push
popa
xor
je
pop
xor
data16
mov
push
addr16
dec
fs
push
loopne
pop
addr16
push
je
push
push
inc
jbe
sar
ss
gs
dec
jb
push
jo
inc
dec
inc
je
xchg
xor
jo
incb
dec
dec
inc
cmp
jb
aaa
xor
dec
jp
fs
lock
inc
push
call
js
push
push
addb
jb
push
inc
and
stos
test
inc
add
stc
subl
push
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
inc
adc
jg
mov
add
aaa
call
xchg
add
popf
rcl
add
or
data16
add
pushl
add
rolb
fcmovbe
fildl
roll
add
fwait
orl
arpl
add
roll
and
add
add
cmpb
adcb
ljmp
xorl
jle
add
sbb
push
addb
sbb
add
mov
std
add
add
dec
push
lret
xchg
push
pop
or
xorb
jg
movsl
mov
repnz
push
orl
inc
or
mov
fs
add
sarl
cmp
or
add
incl
mov
aaa
sti
fwait
mov
cmpsb
repz
add
xor
or
xchg
sbb
fdivrs
add
adc
add
push
inc
add
out
dec
jae
sbb
and
lcall
jns
outsl
add
aas
aad
or
cs
in
test
divl
jns
sbb
fwait
xlat
jle
fisttps
popf
pusha
or
test
mov
lods
and
sbb
dec
sub
mov
fcmovu
fnstenv
inc
jecxz
jne
lds
das
psrlq
out
sub
test
add
pop
sti
or
sbb
pop
push
stos
cli
pop
xlat
xor
roll
pop
aaa
lcall
mov
mov
loope,pn
xchg
ss
pop
jge
pop
lret
pop
shrl
push
dec
out
cmp
mov
add
mov
mov
insl
sti
push
mov
repnz
xlat
rcrl
ret
inc
sti
roll
sbb
jns
push
mov
dec
imul
cmp
sarl
dec
rorl
xchg
xorl
cmp
pusha
xchg
xlat
pop
and
rcr
mov
pop
dec
pxor
js
das
sbb
lds
aas
in
mov
sbb
dec
sarl
js
out
std
xchg
pusha
sbb
stos
push
addr16
jns
push
push
sahf
dec
sub
sti
loopne
dec
imul
sbb
sbb
jnp
filds
mov
or
fidivs
push
pop
adc
popa
in
lcall
fnstenv
iret
fbld
sbb
or
sub
adc
lock
notb
loope
jp
fwait
jne
add
cmpsl
push
inc
rcrb
fists
and
add
sub
aaa
stos
cmp
cmp
dec
mov
gs
dec
sub
mov
jg
stos
mov
inc
jae
call
loopne
xor
adc
push
fbstp
or
push
in
push
aas
cld
mov
add
outsb
sub
cmpxchg
push
in
fldl
pop
sbb
mov
divl
iret
vpmaxub
mov
jne
shlb
addb
fisttpl
mov
push
roll
or
push
push
in
xchg
int
dec
imul
loope
xchg
repz
add
or
push
ss
xor
lahf
cmpsb
pop
popa
gs
mov
out
jnp
mov
jnp
sub
or
cmp
out
daa
ret
add
mov
and
jl
cltd
cmp
jne
lods
loope
rcr
popf
cmpsb
lahf
out
sbb
jl
xor
xor
jo
mov
cmp
jmp
rcr
sub
or
pop
insl
jns
shll
sbb
jnp
jns
mov
mov
and
ffreep
inc
repz
aad
stos
cltd
push
iret
sub
dec
stos
xor
insl
repz
inc
in
xchg
push
addl
fdiv
mov
add
mov
xor
pusha
adcl
mov
fistl
push
add
lock
negl
mov
fbstp
sar
pop
sti
sub
or
xor
sub
push
ret
aam
fcomi
pop
rolb
add
fwait
jo
sub
push
imul
push
jno
stos
xor
sbb
mov
jge
insl
add
aas
bound
inc
lock
stos
mov
cmpsb
add
add
clc
out
add
arpl
add
sahf
dec
out
add
inc
clc
das
cli
cld
add
pop
and
add
rcrb
sub
into
xor
dec
in
test
out
adc
fwait
xchg
pop
sub
jmpw
or
insb
xchg
cmp
bound
stc
pop
jp
mov
pop
add
xchg
push
sub
shll
shl
pop
cld
pushl
cltd
xor
add
cmpsb
nop
add
inc
es
pop
es
push
jecxz
jae
or
xor
lret
and
xchg
je
jl
out
fwait
outsb
inc
dec
cmpsl
shll
and
cmp
xchg
inc
jmp
ret
dec
add
cwtl
mov
mov
mov
movsl
mov
nop
add
movsl
mov
loopne
icebp
mov
mov
mov
mov
cs
es
pusha
add
xlat
in
mov
push
push
push
add
inc
rcl
push
push
push
aam
xchg
add
js
push
add
loope
push
cs
add
aad
data16
addl
addl
add
adcb
inc
test
mov
adc
add
sbb
mov
dec
jmp
pushf
dec
add
ljmp
aas
jge
sub
mov
add
push
rcr
dec
mov
add
mov
call
adcl
add
add
cld
outsl
outsl
sbb
cwtl
add
jg
jae
or
pop
dec
rcr
adcb
add
jb
imul
xchg
sub
add
shlw
pop
sbb
push
add
je
scas
mov
adc
add
xor
add
add
add
xchg
xchg
xchg
cs
cs
sbb
dec
roll
insb
sub
push
out
pop
xchg
cltd
xor
rcrl
pcmpgtw
xor
pop
fsubrs
dec
daa
rclb
adc
mov
sbb
sahf
dec
movsb
push
push
pop
add
add
jl
adcb
loope
jno
push
add
or
test
shl
push
rcl
xchg
stos
ret
js
add
sbb
jp
push
jl
aad
inc
add
lock
pop
outsb
neg
es
add
jmp
adc
rorb
das
pushl
add
lock
hlt
testl
add
incl
loope
jecxz
jle
sub
in
out
out
call
mov
mov
mov
clc
cmp
mov
movsl
inc
movsb
cmpsl
cmpsb
test
mov
sbb
lods
scas
inc
movsb
outsl
dec
add
pop
mov
bndstx
cs
nopl
cs
aad
in
call
xlat
inc
add
fstp
sbb
lods
add
add
decl
popa
fiaddl
mov
std
push
add
lock
and
add
add
fcomip
or
push
mov
enter
into
inc
add
pushf
xor
aaa
cld
idivl
cld
pushf
in
jbe
mov
insl
fists
cmpsb
mov
icebp
xchg
mov
sbb
dec
xchg
adc
fcomip
scas
clc
add
sub
and
pushf
inc
adc
xchg
mov
push
jg
push
js
push
divl
mov
lcall
test
outsb
mov
sbb
lea
int
cwtl
das
mov
pushf
pop
ljmp
lret
lret
add
jl
pop
insb
movsb
and
and
leave
sbb
fcmovnu
hlt
scas
clc
sahf
xchg
jo
jns
stos
ja
aam
into
call
aaa
mov
jg
incl
data16
in
jg
ss
int
pop
roll
test
xor
ja
mov
pop
xor
mov
js
rcl
cwtl
sub
xchg
mov
pop
addr16
loopne
sar
push
mov
jecxz
adc
int
add
sub
or
in
scas
push
int3
es
and
jb
aas
add
mov
sbb
sub
outsl
cli
stos
dec
add
roll
pop
dec
cmp
add
add
rolb
insb
adc
pcmpeqw
jae
mov
rcrl
dec
hlt
addb
addb
fiadds
fadds
test
and
and
and
sbbl
test
rclb
sub
fwait
call
add
rolb
leave
rcrb
or
testb
add
aad
inc
in
pop
mov
pop
test
add
push
jecxz
mov
insl
and
or
add
daa
in
mov
sub
fistpll
mov
lds
inc
pop
sbb
sbb
dec
adc
mov
inc
ret
gs
in
pusha
push
jno
push
pop
imul
sbb
adc
out
rorb
enter
mov
adc
push
cld
loope
sub
icebp
pop
mov
add
cmpsb
push
ret
add
add
add
repnz
push
and
cmpsb
cmp
jo
hlt
inc
add
loop
mov
cwtl
cmp
shrl
adcb
shrb
dec
ljmp
dec
andl
in
lcall
push
xchg
popa
jo
fucom
or
dec
ljmp
lods
pusha
fcompl
sub
pop
movsl
test
mov
mov
mov
push
les
xlat
add
rcrw
push
fwait
aaa
add
inc
xor
int
mov
repz
sarb
jno
dec
sub
and
filds
in
je
into
xor
adc
sbb
shrb
cmp
cmc
rolb
loopne
jns
loopne
add
shlb
insb
jbe
sub
push
mov
clc
data16
mov
loopne
ds
add
add
push
ret
inc
or
loopne
pop
inc
or
lcall
jmp
or
push
dec
pop
jnp
and
cmp
pop
shl
mov
iret
cmp
xor
cwtl
popa
cs
sub
jecxz
pop
sbb
or
cmp
xor
fcmovnu
es
push
push
push
sbb
adc
jnp
loopne
test
push
std
or
add
leave
push
loop
rorl
adc
mov
or
xor
sahf
adc
inc
mov
loopne
orb
loopne
into
add
xor
or
rclb
or
js
pop
inc
in
int
adc
das
jl
sub
xchg
cmp
clc
loopne
or
dec
loopne
adc
shlb
int3
mov
or
and
test
mov
fstl
pop
in
shlb
cmc
lods
loope
aam
xor
push
mov
shrd
and
cmp
aad
mov
test
jge
clc
mov
or
out
xchg
sbb
loopne
pop
je
fcmovb
adc
xchg
test
bound
stc
imul
push
loopne
popf
or
xchg
sahf
mov
sbb
dec
in
xor
repnz
clc
add
or
push
sub
or
add
cmpb
cwtl
pop
or
mov
ret
imul
pop
shll
jle
adc
testb
add
cmp
lea
xor
pop
fsubr
add
fwait
loopne
xor
test
inc
add
mov
mov
jle
pop
int
hlt
lds
loopne
adc
or
or
jnp
loopne
sub
nop
push
add
or
sbb
or
sbb
adc
pop
in
jns
es
jns
loopne
pop
loopne
lods
dec
xor
mov
adc
push
jl
sbb
in
addl
jo
mov
test
adc
and
sub
mov
cmp
sub
fdivl
sbb
imul
dec
out
loopne
dec
stos
pop
loopne
test
clc
mov
mov
out
sbb
adc
ds
jecxz
and
es
push
and
shlb
in
ds
mov
icebp
or
clc
or
jo
add
in
in
add
mov
jno
sbb
lock
or
jo
mov
push
sub
sub
test
mov
out
stos
orl
lock
mov
cmpsb
inc
jo
xor
adc
or
pop
lds
cmp
or
mov
mov
inc
add
jbe
lock
stos
adc
imul
fwait
imul
inc
fs
stos
push
es
cmpsb
insl
iret
rcrb
stos
mov
mov
stos
xchg
or
jo
loope
push
jo
stos
int
std
in
mov
pop
fucom
mov
dec
mov
bound
cld
mov
inc
jo
jno
mov
sbb
adc
and
fidivl
adc
xchg
jo
and
cmp
cmp
jo
insl
loop
gs
pmullw
dec
orps
cli
mov
cmpsb
inc
cmp
int
fdivp
or
and
add
xchg
incb
cmp
pop
xor
arpl
lods
sbb
sbb
insb
mov
pop
and
mov
loop
mov
mov
or
add
or
insb
lahf
xchg
push
stc
dec
sub
xchg
pop
rorl
ret
int3
push
jo
xor
sbb
testl
divl
test
add
mov
jle
push
or
and
insl
addl
in
dec
adc
jno
shl
jp
fwait
push
cld
scas
hlt
adc
mov
add
push
into
adc
pop
xchg
and
and
ss
adc
push
aad
jae
or
jb
nop
int
adc
shlb
mov
mov
jnp
jp
mov
jge
int
test
shrb
rcl
shlb
or
rclb
xor
sti
xchg
shlb
and
mov
data16
push
outsl
divb
mov
insl
shrb
shrl
scas
outsb
shrb
out
rolb
adc
call
sbb
out
sbb
leave
rcrb
add
rcl
xchg
rolb
rclb
add
xorl
mov
jg
aaa
jg
shlb
xor
rcl
xor
jmp
rcl
sarb
rcr
aaa
jg
aaa
cmp
enter
lret
and
shlb
xchg
repz
jg
shlb
rcrb
sub
mov
sarb
mov
cmpl
mov
lods
pop
shl
in
cmc
pusha
subl
in
cmpl
shl
scas
shl
shrb
loopne
ror
sarl
adc
fldt
fsts
shl
adc
int
rorl
fcmovbe
fcom
shl
insl
ret
out
enter
shrb
mov
jmp
popa
ret
rolb
ja
ljmp
shl
shlb
sar
lahf
int
ret
shr
js
ret
shlb
mov
outsb
rcrb
push
sar
or
ds
dec
sar
inc
rclb
rclb
fcoml
mov
mov
adc
mov
shlb
sar
adc
cli
or
xchg
outsb
sbb
rcrb
mov
add
mov
pushf
aad
jge
mov
pusha
jae
fucom
jb
fcoml
jne
shl
je
sub
and
jbe
aaa
jg
mov
loope
aad
jnp
jbe
jp
js
repz
jg
aad
loope
aad
jg
ss
aad
popa
aad
loope
aad
aaa
jg
aaa
arpl
jne
aad
gs
loope
aad
addr16
repz
jg
loope
aad
imul
pusha
imul
loope
aad
jg
aaa
jg
aad
loope
aad
outsl
aad
loope
aad
adc
outsb
loope
aad
aaa
jg
aaa
adc
adc
adc
aad
pop
aad
repz
jg
loope
aad
sbb
sbb
sbb
pop
sbb
push
loope
aad
jg
aaa
jg
aad
loope
aad
pop
aad
loope
aad
add
push
loope
aad
aaa
jg
aaa
add
xor
add
xor
aad
pop
aad
xorb
repz
aad
or
cmp
or
cmp
aad
loope
int
push
nop
cmp
or
aad
pmullw
push
aad
sbb
push
cmpsb
xlat
outsb
aam
xlat
adc
lock
aam
xlat
adc
int
repnz
aam
pop
aam
xlat
push
aam
sbb
int
cld
aam
xlat
sbb
clc
sbb
sti
xlat
sbb
cli
sbb
aam
int
pop
aam
xlat
push
aam
add
loope
rcl
loopne
aam
xlat
add
int
loop
aam
xlat
add
in
aam
xlat
push
aam
or
int
cld
aam
xlat
or
call
xor
xchg
xor
nop
xlat
xor
xchg
int
xor
xchg
xlat
xor
xchg
xlat
aaa
aam
ss
xlat
cmp
int
cltd
cmp
cwtl
xlat
cmp
fwait
cmp
lcall
int
cld
aam
xlat
aas
aam
ds
xlat
and
andl
aam
mov
sbbl
add
adc
xlat
test
adc
mov
xlat
out
xlat
mov
mov
adc
mov
jge
lea
aad
xlat
sub
ljmp
nop
xlat
mov
popa
xlat
movl
aad
xlat
cmp
jg
xchg
mov
aad
xlat
aam
xlat
xlat
data16
repz
jg
aad
xlat
fldcw
fcom
imul
push
fcmovbe
insl
xlat
fldl
xlat
inc
aad
xlat
fildll
adc
inc
loop
in
xor
aad
xlat
sub
xlat
xchg
repnz
in
fcoml
adc
in
xlat
xchg
adc
xlat
loop
xlat
xchg
in
xor
sbb
jmp
xlat
jmp
mov
ljmp
push
xlat
out
aad
xlat
out
out
cmp
xlat
sahf
and
xchg
adc
xlat
nop
aad
xlat
xchg
outsl
cmp
add
xchg
aad
xlat
out
xlat
jecxz
xlat
popf
adc
xlat
lcall
xlat
out
xlat
cltd
aad
xlat
pushf
or
cwtl
push
mov
xlat
shlb
stos
fldcw
rcl
rcl
notl
xlat
lds
xor
les
dec
loop
xchg
xlat
out
test
leave
mov
mov
xlat
enter
lret
adc
adc
int
aas
xlat
int3
mov
out
xlat
iret
aad
xlat
into
and
decb
fbstp
lock
xlat
repz
repnz
adc
xlat
ret
dec
aaa
jg
aad
xlat
std
sub
cli
aad
xlat
sub
stc
mov
pop
jne
mov
adc
clc
aad
xlat
imulb
xlat
sti
add
push
add
jae
fwait
mov
jb
pop
adc
pop
shlb
jbe
pop
sarb
pop
cli
mov
xchg
jp
pop
adc
push
sarb
les
icebp
pusha
out
xor
mov
loop
aas
jg
gs
jle
fs
sbb
mov
inc
shlb
test
sbb
push
popa
shrb
pop
rclb
incl
adc
inc
rclb
inc
rclb
inc
rclb
inc
rclb
inc
rcrb
dec
rcrb
decl
sbb
dec
rcrb
dec
rcrb
dec
rcrb
dec
rcrb
dec
rolb
jno
rcl
or
or
jo
add
les
int3
pop
mov
jbe
or
jns
or
js
xor
pusha
shlb
arpl
xor
mov
mov
shlb
fidivs
or
decl
fdivl
data16
imul
cmp
hlt
cmp
pop
pusha
mov
repnz
aas
outsl
jg
push
loopne
ds
clc
and
mulb
adc
and
adc
call
and
adc
and
adc
daa
pop
shlb
push
shrb
sbb
sub
sbb
jo
data16
pushl
bnd
jb
hlt
jne
icebp
bnd
lock
shl
jbe
jo
jns
pushl
js
jne
jnp
ja
jp
dec
bnd
dec
bnd
dec
bnd
jno
jle
jns
popa
fcos
jge
insl
fnstenv
rep
fnstenv
adc
in
adc
int3
repz
iret
repz
call
repz
in
repz
xchg
repz
add
lock
fnstenv
repz
push
repz
in
call
or
fsincos
repz
div
push
fyl2xp1
repz
daa
flds
sub
inc
lock
jg
sub
push
lock
flds
push
fdiv
cmc
xor
pop
hlt
xor
inc
hlt
xor
fdiv
xor
sti
in
xor
fcomp
cmc
cmp
cmp
leave
hlt
cmp
shl
ss
lock
jg
cmp
fsubr
hlt
fsubrs
and
push
and
mov
and
outsl
fsubrs
fmul
hlt
and
hlt
daa
fsub
hlt
es
hlt
sub
fidivs
fcomip
call
icebp
jae
shl
jb
aad
jne
aam
je
icebp
ja
and
fdiv
jns
fcmovnu
icebp
js
fcmovnb
icebp
jge
repnz
jg
div
jle
hlt
icebp
popa
fildl
jg
test
arpl
test
fildl
lock
lock
fcomip
jg
push
ret
icebp
insl
repnz
fstpt
outsl
repnz
mov
adc
push
fisttpl
sbb
repz
hlt
sbb
data16
pop
fistpl
hlt
push
fstpt
push
add
leave
icebp
rcr
enter
int
add
int3
icebp
add
fninit
icebp
push
fnclex
icebp
or
mov
jge
or
pand
hlt
push
fstpt
xor
aaa
ds
cli
jmp
jp
jl
xor
hlt
xor
fisttpl
aaa
jg
jg
fstpt
cmp
arpl
cmp
insl
hlt
cmp
cmp
fcmovnb
outsl
or
mov
aas
push
icebp
and
lock
and
jg
and
fstpt
mull
fistl
imull
fcmovnu
imull
fcmovnb
repnz
fdivrs
jmp
icebp
das
mov
in
add
sub
ja
out
add
jle
fimull
adc
je
adc
incl
pusha
pop
fimull
repz
fidivl
mov
jle
push
fcmovb
add
fptan
pop
or
push
push
out
clc
fimull
fidivl
ffree
icebp
xor
add
xor
rcl
xor
fldl
aam
fldl
aam
fldl
aam
fldl
aam
fldl
aam
fisttpll
aam
fisttpll
aam
fisttpll
aam
fisttpll
aam
fisttpll
aam
fisttpll
aam
fisttpll
aam
fnsave
aam
fnsave
aam
fnsave
aam
fnsave
aam
fnsave
aam
fnsave
aam
fnsave
aam
fnstsw
aam
fnstsw
aam
fnstsw
aam
fbstp
rcr
jb
rcr
jne
aad
je
aam
ja
xlat
fbstp
fistpll
incl
js
fcomp
jnp
lock
fcmovu
jge
fstp
jl
jg
jg
jle
popa
fadd
fbld
rcr
fadd
fbld
ret
fadd
fbld
fbld
inc
fbld
fildll
leave
fildll
enter
lret
fildll
lret
fmul
fildll
fildll
mov
dec
fildll
into
fists
fdiv
fists
fdiv
fists
fdiv
fists
fdiv
fists
fdiv
fists
fdiv
fists
fdiv
fistps
fdivr
fistps
fdivr
fistps
fdivr
fistps
fdivr
fistps
fdivr
fistps
fdivr
fistps
fdivr
filds
fsub
fsub
filds
fsub
filds
fsub
filds
fsub
filds
fsub
filds
fsub
fisttps
fsubr
fisttps
fsubr
fisttps
fsubr
fisttps
fsubr
fisttps
fsubr
fbstp
fcoml
fbstp
fcoml
fbstp
fcoml
fcoml
fcompl
fistpll
fcompl
fistpll
fcompl
and
sbb
faddl
fbld
faddl
faddl
fildll
fmull
fnstsw
loopne
loopne
loopne
loopne
loopne
loopne
loopne
fucomip
loopne
fucomip
loopne
fucomip
loopne
fucomip
loopne
fucomip
loopne
fucomip
loopne
fucomip
loopne
fucomip
loopne
fists
fists
loopne
fists
loopne
fists
data16
loopne
fistps
loopne
fistps
loopne
fistps
outsb
fistps
loopne
filds
loopne
filds
loopne
filds
push
filds
loopne
fisttps
loopne
fisttps
loopne
fisttps
push
fisttps
loopne
mov
icebp
fbstp
loopne
fbstp
add
pop
ss
int
rolb
or
or
or
or
fldcw
rorb
rorb
ss
int
xor
xor
xor
xor
xor
shlb
shlb
cmp
fldcw
cmp
cmp
cmp
cmp
jg
sarb
fistpll
and
test
loopne
fists
and
call
and
push
loopne
fistps
fistps
sub
shrb
rcrb
xchg
rol
cs
ret
mov
out
mov
adc
ret
outsl
ret
jno
add
iret
repz
jb
je
jbe
ds
repz
jnp
jge
cs
fmuls
fcomp
iret
repz
fstp
fadd
ret
out
cmp
cs
xor
xor
testl
lock
repz
mov
clc
out
jns
divl
mov
cld
js
out
mov
push
iret
loopne
cmp
pop
pop
aas
cs
repz
jns
mov
mov
inc
mov
cmp
repz
testl
repz
dec
repnz
push
lock
iret
repz
repz
dec
push
cld
out
sahf
out
jnp
jp
out
sahf
mov
jg
int
jns
jle
shlb
out
sahf
mull
mov
mov
sahf
out
sahf
mov
mov
mov
jns
out
mov
mov
mov
push
repz
adc
movsl
adc
repz
movsb
adc
cmp
repz
push
test
stos
repz
repz
repz
lods
sbb
cmp
repz
push
push
add
cmp
repz
push
add
repz
push
add
cmp
repz
xor
jae
sahf
out
xor
cmp
jnp
out
cmp
ljmp
pop
push
mov
mov
out
daa
ss
lahf
mov
imul
mov
adc
call
decl
fiadds
dec
out
aad
mov
call
pop
in
dec
mov
mov
inc
cltd
cs
xchg
xor
adcb
mov
insl
cmpsb
fsubs
sub
push
mulb
xor
xchg
test
or
push
or
out
mov
sub
dec
mov
sbb
jl
jbe
subb
jae
inc
lahf
call
or
call
adc
fnstenv
lea
and
shl
mov
mov
jmp
int3
in
lcall
jge
cmp
push
fld
dec
fstl
jne
pop
fistpll
test
stc
pushl
and
dec
les
inc
mov
adc
jmp
shll
mov
insl
aad
mov
call
test
scas
mov
pop
fmull
inc
cltd
mov
inc
popf
ljmp
nop
lods
push
pop
mov
hlt
ret
icebp
cmpsb
inc
mov
push
pop
mov
add
fistps
movsl
loope
aaa
xor
inc
fwait
gs
popa
int3
mov
loop
ficomps
lock
test
push
xchg
sbb
and
lcall
daa
cld
push
add
int
pushl
xchg
pushf
inc
mov
in
scas
dec
adc
add
ljmp
mov
push
xchg
lods
pop
inc
enter
inc
je
shl
in
push
dec
into
bound
add
adc
out
cli
test
in
movsb
test
in
mov
mov
loop
loop
loop
loop
jmp
jne
jge
mov
jno
pop
lret
outsl
rcrl
mov
test
in
scas
cli
jg
in
in
in
in
in
in
in
in
in
mov
stos
in
stos
outsb
lods
dec
jl
cmp
icebp
inc
in
sub
adc
sbb
in
in
in
in
in
call
in
in
cmp
adc
mov
test
fwait
mov
adc
repz
call
pop
in
in
in
in
in
in
in
in
push
xor
pop
lahf
jo
cmp
lcall
insl
lea
in
in
out
out
out
out
out
out
out
out
std
decl
mov
scas
test
popf
push
loop
movsl
cmc
adc
cli
add
adc
add
push
lds
loope
loope
loopne
loopne
std
aaa
jle
jnp
incl
xor
pop
fcoml
mov
enter
gs
in
nop
in
mov
mov
negl
loop
xor
cld
cli
fadds
or
push
hlt
mov
jg
jmp
test
lahf
out
out
dec
out
addr16
pop
out
or
lret
push
inc
fcomip
int
outsb
out
imul
and
dec
pop
add
and
call
loopne
loopne
loopne
jecxz
jecxz
inc
push
call
and
or
xchg
lret
jle
xchg
scas
push
in
in
in
in
in
in
in
in
xor
call
std
push
rcr
xchg
imul
std
sti
cltd
lock
sub
rcrb
test
ret
jmp
fsub
ret
out
out
sub
cmp
lcall
out
shll
xor
std
es
popa
out
out
out
jmp
test
inc
jmp
stc
aas
xchg
add
lea
rclb
repz
mov
mov
jmp
jmp
jmp
jmp
ljmp
mov
adc
dec
xor
push
add
jno
leave
pop
aas
or
loope
daa
and
in
adc
in
in
hlt
in
sti
in
jmp
inc
sub
adc
mov
jmp
dec
adc
cwtl
lret
call
out
iret
out
push
out
pop
out
inc
out
dec
out
je
jge
imul
jge
les
stos
outsb
lds
cli
sti
negl
cwtl
popf
test
in
in
jmp
je
cmp
sub
out
in
in
add
dec
xor
mov
lret
jp
aaa
fsubrl
xor
xor
cmp
and
jmp
jmp
jmp
jmp
jmp
repnz
fildl
adc
mov
mov
cwtl
pop
add
mov
cmp
in
loopne
scas
in
jle
pop
in
sbb
xor
cs
push
lock
sarb
enter
and
aam
negb
std
fidivrs
out
cld
out
jo
sbb
push
jmp
enter
mov
mov
mov
sti
cmpsb
movsb
insb
loope
pop
inc
aas
in
clc
sti
loop
loop
pmulhw
scas
and
cli
subb
jg
insb
and
fcmovnu
cmp
rol
lds
loope
mov
int
iret
into
inc
idiv
clc
sti
cli
std
cmp
ds
sbb
in
out
out
xchg
dec
inc
jg
cmp
test
testb
scas
push
call
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
mov
je
jbe
js
jp
jl
jle
pusha
arpl
imul
cmc
ljmp
outsl
outsb
adc
adc
adc
sbb
sbb
add
add
incl
or
or
or
xor
xor
cmp
cmp
and
and
cmp
sub
sub
sub
pusha
mov
or
add
add
jg
adc
xchg
xchg
add
pushf
lahf
sahf
add
test
ds
xchg
adc
adc
xchg
xchg
add
xchg
sbb
sbb
xchg
and
and
xchg
xchg
add
xchg
sub
sub
xchg
xor
out
cmp
sbb
scas
add
div
jmp
add
adc
rclb
pop
and
mov
sbb
and
ljmp
add
scas
xchg
xor
xchg
jo
sub
sbbl
clts
or
mov
ret
or
das
clc
ret
int
orb
adc
lret
add
ret
adc
in
lcall
rcr
mov
aas
add
adc
sahf
and
out
cwtl
rolb
or
mov
mov
lss
mov
mov
lcall
jo
xchg
cwtl
xchg
mov
mov
add
mov
xchg
mov
fists
mov
xchg
ret
or
or
mov
scas
add
insl
fneni(8087
inc
push
or
push
cmp
or
outsl
sub
xchg
inc
invd
inc
inc
add
sub
mov
adcl
add
sbbl
adc
icebp
mov
inc
outsl
notb
lods
nop
mov
inc
sbb
add
loope
add
adc
push
inc
jns
add
icebp
add
sbb
mov
add
ljmp
mov
icebp
inc
sbb
adc
rclb
rolb
add
add
movsl
lcall
hlt
fcomp
fisubs
ss
and
imul
inc
pop
in
inc
xchg
std
inc
or
xchg
or
xor
add
daa
push
mov
lret
mov
add
and
mov
add
lahf
and
dec
xchg
add
sbb
les
shrl
mov
andl
pusha
push
ss
mov
or
push
sti
arpl
stos
add
and
pusha
mov
jg
insb
movsl
movsl
mov
or
pushl
jg
mov
mov
mov
and
cmpsb
mov
mov
daa
loop
xchg
xchg
push
andb
mov
or
mov
bsr
popa
or
or
pusha
add
mov
add
in
aam
xchg
xchg
icebp
loope
loop
shl
inc
adc
xor
add
add
mov
ret
lock
pusha
rolb
mov
lock
pushl
arpl
add
inc
inc
push
inc
pop
jnp
pop
dec
pop
jp
pop
push
pop
push
std
decl
jne
inc
pop
pop
dec
add
inc
insl
add
rol
inc
ror
or
sbb
movsl
xchg
pop
mov
xchg
xchg
add
mov
pop
std
sti
out
faddl
lret
into
iret
rcr
add
call
add
xor
add
ds
sub
sub
inc
cmp
loopne
sar
aas
add
jge
outsb
or
add
jle
and
test
test
jg
jmp
jecxz
in
std
cld
iret
jmp
jmp
lock
in
dec
out
stc
xlat
lock
aad
or
lret
lds
popf
or
das
cmp
pop
cmp
add
ds
js
and
xchg
je
das
bound
bound
adc
push
mov
or
add
push
and
jo
jle
sub
cmp
jle
outsb
xor
jge
popa
arpl
data16
cli
in
clc
repnz
loopne
loop
push
pop
or
mov
decl
adc
jns
pop
push
sub
add
call
dec
pop
dec
jbe
pop
loope
push
cmp
and
jle
adc
sub
add
mov
stos
mov
sbbl
mov
nop
xchg
add
stos
mov
mov
mov
mov
mov
or
adcb
inc
movups
pop
add
cmp
jno
xor
xor
sub
sub
outsl
and
lds
mov
movsl
mov
mov
cld
cmpsb
mov
push
inc
push
cmp
dec
inc
or
dec
cmp
pushl
adc
mov
mov
loopne
jmp
in
out
outsb
lock
sar
pop
add
pop
dec
pop
imul
pop
dec
pop
jae
fcomip
or
push
push
dec
gs
push
push
inc
jae
imul
adc
in
dec
inc
or
jg
rcrb
repz
or
aad
enter
sar
loop
add
int3
mov
cmc
outsl
jg
mov
mov
lock
rep
div
lods
movsb
mov
fbld
movsl
loopne
add
cltd
popf
insb
pushf
lahf
fcmovnbe
fcoml
aad
or
addr16
gs
xchg
lea
and
mov
ffree
fnstcw
out
loope
enter
xchg
cwtl
cli
xchg
or
add
popa
push
jns
jg
je
outsl
mov
mov
fiaddl
mov
push
add
int
leave
ror
test
les
sarl
jg
in
nop
fstp
mov
pop
jg
jo
jle
cmp
jo
jbe
decl
outsb
arpl
add
arpl
fs
outsb
subb
push
sbb
decl
mov
cmpsb
rclb
aad
fcomps
inc
gs
ret
enter
int3
int
mov
cs
scas
pop
clc
add
daa
cmp
xor
or
and
ljmp
in
xor
daa
add
outsb
jno
and
sbb
push
sbb
rorl
inc
or
add
push
adc
or
pushf
xchg
cltd
test
rcrb
mov
addl
fstpt
and
and
cmpsb
and
mov
add
lea
jle
lcall
pushf
inc
xchg
rolb
mov
fld
lock
int3
xlat
sar
aam
sti
decl
dec
pop
dec
inc
inc
inc
inc
push
inc
inc
inc
adc
inc
dec
jo
sbb
sti
incl
inc
inc
imul
and
push
pop
or
lock
lcall
cmp
xchg
fwait
outsl
clc
sub
je
ja
sub
add
outsl
cmp
add
pop
incl
adc
add
adc
push
xor
or
push
push
imul
ja
outsb
insl
bound
jb
push
jb
fs
sahf
cmp
mov
test
mov
add
aas
fidivs
jmp
cmp
xor
add
cmp
in
add
push
in
jp
mov
mov
clc
movsb
popa
pushl
dec
xchg
ja
bound
inc
outsb
js
ja
outsb
jl
add
arpl
das
sar
dec
pop
pop
dec
pop
pop
push
or
push
insl
pop
pop
dec
pop
xor
mov
and
mov
loopne
outsl
lods
leave
enter
add
fsubs
add
or
jg
adc
add
or
or
add
adc
sbb
lods
mov
cmpsb
xchg
push
test
stos
mov
cmpsb
nop
sub
ficompl
push
sub
adc
and
cmp
lret
ljmp
or
xlat
fcmovnu
mov
pop
inc
outsl
inc
and
mov
mov
das
xor
sub
push
daa
add
and
div
hlt
cwtl
divl
adc
cli
cld
in
and
mov
aaa
std
scas
nop
lea
add
lcall
rclb
jl
decb
ret
test
clc
mov
enter
pop
inc
inc
inc
pop
adc
inc
pop
inc
inc
cmc
aaa
cmp
xlat
in
nop
insl
xor
adc
addb
stos
pop
jg
inc
dec
loop
dec
pop
dec
pop
jbe
loopne
fs
pop
mov
pop
jno
je
xor
shlb
dec
bound
pop
inc
mov
cld
mov
dec
dec
inc
dec
push
add
add
vpmaxub
repnz
xchg
enter
into
rorb
add
cwtl
pushf
mov
mov
subb
jg
mov
mov
mul
xchg
in
mov
add
loop
jne
subl
xchg
cmpsb
mov
cmp
shrb
add
ret
mov
pushl
addr16
mov
lcall
adcl
mov
pop
dec
cld
ljmp
call
xchg
test
jo
call
cld
pushl
xor
nop
xchg
mov
sbb
or
add
sbb
fcomip
and
xor
ds
cmp
es
mov
test
adc
lahf
xchg
test
fcomps
cwtl
xchg
lahf
add
pop
sbb
cld
aaa
std
or
and
mov
or
jg
mov
or
ljmp
out
in
cld
dec
pop
push
mov
out
loop
ret
rcl
sub
fbstp
add
add
test
pop
push
call
adc
dec
inc
sbbb
add
call
mov
push
push
inc
push
inc
push
cli
jnp
bound
jp
loope
incl
dec
insl
jb
jbe
jge
cmp
jle
addb
dec
dec
dec
pop
decb
or
mov
sbb
data16
sub
push
mov
add
lock
xor
sbb
sbb
sbb
add
std
mov
mov
xchg
xchg
mov
pop
inc
dec
sbb
pop
dec
pop
inc
cld
mov
xor
imul
jp
bound
add
arpl
aaa
std
add
push
inc
fs
dec
add
jnp
pop
push
test
pop
sub
inc
inc
bound
push
dec
dec
jo
icebp
ffreep
cmp
or
cmp
aas
ret
pusha
in
jg
or
je
pusha
outsl
andb
insl
jl
mov
adc
and
mov
hlt
notb
inc
pop
repnz
push
push
aas
sub
cli
fisttps
fisttpl
adc
push
push
or
push
or
fmuls
lds
incl
cld
dec
cld
daa
sub
sub
adc
adc
sar
andb
and
or
xor
add
rcr
adc
mov
cmpsb
mov
lods
add
adc
adc
jle
xchg
call
or
add
sub
and
push
add
and
and
cmp
mov
add
mov
stos
out
add
stos
test
xor
ret
inc
inc
jo
jae
jne
adc
xor
daa
call
fists
pop
sbbb
inc
inc
dec
dec
nop
xor
idiv
out
ljmp
fstpt
fcomip
fcmovnb
fcom
div
cld
fmulp
rorb
lret
rol
fbld
aam
mov
dec
pop
addb
jns
je
jne
inc
adc
and
fiadds
jg
data16
add
push
add
pop
dec
add
pop
add
icebp
fcmovne
lock
fstp
add
and
mov
add
and
push
jg
push
push
add
adc
iret
cli
insb
fs
arpl
mov
xor
movsl
mov
add
dec
test
icebp
add
addb
adc
jo
aam
cli
stos
in
cmp
xchg
mov
sahf
fwait
test
pop
and
inc
mov
mov
pusha
clc
stos
add
push
mov
dec
jecxz
hlt
cli
call
fucomip
or
icebp
mov
jg
loop
add
cmp
jb
popa
push
inc
shll
jg
and
mov
js
lahf
lea
outsl
clc
fucomip
fsubs
ja
push
cmp
aaa
add
pop
inc
cwtl
sub
insb
gs
incl
mov
rclb
cmp
cmp
add
push
add
lds
add
adc
xor
xor
fwait
mov
or
pop
sbb
push
jno
aaa
sbb
xor
insb
jg
add
jmp
ffree
aam
xor
in
mov
jmp
lret
cmc
add
add
add
pop
pop
sarl
add
and
cmp
addr16
clc
arpl
popa
mov
dec
out
mov
sub
cs
imul
sub
or
mov
outsl
decl
sbb
pop
add
insb
clc
adc
iret
int3
clc
stos
int
nop
mov
fildl
xchg
decl
data16
sbb
add
and
sub
add
sub
xchg
subb
mov
xchg
xor
fcomip
or
loop
and
in
shr
jecxz
add
pushl
inc
inc
dec
inc
pop
add
pop
in
or
sbb
dec
push
inc
add
dec
add
sub
jne
popf
cltd
xchg
xchg
xchg
inc
mov
jno
dec
cmp
or
daa
or
sbb
fdivl
pop
dec
cmp
unpckhps
das
sbb
and
es
adc
call
xor
popa
or
xor
adc
sbb
adc
data16
jg
icebp
pop
xor
lock
loope
idiv
loope
jecxz
out
les
mov
add
clc
icebp
mov
div
loopne
decl
jecxz
out
repz
cmpsb
cmp
out
out
sar
pop
sahf
out
add
add
gs
pop
inc
inc
inc
add
addr16
push
push
inc
push
fcomip
adc
nop
xchg
jp
fdivs
addl
popf
les
mov
mov
out
repz
cmpsb
les
loop
lods
fsubrp
in
clc
ljmp
loopne
push
jg
je
jle
data16
add
jle
imul
sbb
imul
jno
add
sbb
sub
inc
mov
inc
push
inc
or
sbb
rcr
sar
in
and
mov
xbegin
in
fcomi
hlt
out
std
fcomip
incb
in
orl
add
add
cli
mov
cmp
mov
add
mov
mov
decl
mov
xchg
add
xchg
test
scas
push
jl
mov
test
scas
mov
add
sbb
adc
add
das
push
sbb
lods
movb
orb
mov
pop
lahf
xchg
mov
and
nop
pop
xor
sbb
sub
xorb
pop
pop
pop
pop
push
inc
jb
push
dec
pop
dec
jle
clc
pushl
stos
pusha
pop
push
dec
dec
push
inc
add
push
dec
inc
inc
inc
inc
mov
sub
xor
or
in
jmp
mov
movsb
mul
stc
stos
fistps
mov
push
xchg
sbb
xchg
and
add
add
js
addl
mov
insb
push
pop
dec
mov
imul
inc
pop
inc
inc
aad
lcall
dec
pop
jno
inc
inc
dec
ljmp
lcall
cmpsb
push
jns
imul
jp
ja
jle
push
sub
popa
decl
pop
insl
outsl
adc
pop
or
adc
mov
nop
xor
mov
adc
pop
push
inc
push
add
pop
push
dec
decl
outsb
inc
dec
imul
ja
insl
rorl
dec
dec
and
dec
jg
cmpsb
xchg
lods
add
mov
ret
incl
add
mov
mov
call
xchg
mov
xchg
mov
mov
out
lods
sbb
cld
mov
mov
xor
ret
sub
and
sub
sub
add
sbb
mov
add
or
xor
or
incl
data16
cmp
pop
pop
cmp
cmp
sbb
pushf
inc
mov
mov
popf
stos
xchg
roll
sbb
popf
les
test
scas
cli
fistl
call
dec
loop
stc
enter
or
ds
mov
mov
loope
mov
fcmovu
add
xchg
xorb
stos
mov
inc
inc
push
pop
mov
push
pop
dec
dec
push
push
orb
mov
add
dec
dec
sub
inc
inc
dec
push
jno
ja
incl
pusha
aas
xor
aas
and
adc
bound
jno
imul
std
push
adc
popa
jge
push
or
adc
xor
rcrl
pop
lret
or
adc
push
push
invd
or
pop
lret
jg
dec
push
or
xor
jle
pop
pop
and
jo
cmp
and
shrb
cmp
cmp
adc
fcoml
in
ret
das
or
ficompl
enter
mov
add
fdiv
fcoms
sbb
repz
hlt
call
cli
fcmovnu
icebp
jmp
jecxz
jmp
and
in
in
movsl
stc
popf
fwait
sarl
das
mov
fists
mov
loope
outsl
jg
xchg
xchg
leave
cltd
mov
mov
stos
cld
stos
mov
mov
test
mov
pusha
scas
mov
scas
mov
jmp
ljmp
inc
push
and
cmp
pop
dec
data16
pop
inc
or
push
inc
loope
pop
in
add
pop
push
rcrl
pop
inc
dec
addr16
mov
addr16
je
insb
jnp
add
jg
ja
imul
imul
ljmp
dec
jl
cmp
ret
aad
rolb
rclb
xchg
mov
js
inc
inc
dec
inc
inc
dec
or
or
dec
in
add
inc
inc
inc
loope
sbb
and
cmpsb
mov
insl
jnp
imul
pop
dec
arpl
cli
ljmp
lret
add
into
popa
add
and
and
push
add
or
jo
jo
sub
add
sbb
loopne
cli
and
sub
mov
ja
inc
test
push
sbb
lods
enter
push
aam
push
cld
lods
in
movsb
jae
inc
je
dec
push
ljmp
mulb
mov
lcall
dec
inc
insl
mov
gs
imul
jp
insb
pusha
or
xlat
add
dec
aaa
std
xlat
lret
enter
inc
add
js
pop
add
popa
add
mov
je
jle
jle
pusha
addr16
add
in
gs
adc
mov
movb
jmp
scas
cmc
jmp
add
movsl
ljmp
mov
in
sar
repz
add
repnz
add
mov
adc
mov
xchg
xchg
adc
xchg
sahf
and
addb
sub
je
push
pop
pop
push
adcb
pop
push
dec
pusha
dec
out
iret
icebp
mov
loopne
out
cmpsl
fsubp
loope
adc
stos
sahf
cwtl
or
sbb
lock
decl
inc
pop
inc
pop
push
add
add
sbb
push
add
sbb
out
cld
mov
out
lock
add
out
cmp
loop
adc
loop
sbb
add
and
daa
sub
cmp
fildll
cmp
je
add
aas
xor
cmp
cmp
pusha
jns
xor
std
mov
add
test
cmpsl
jmp
into
and
std
test
inc
incl
xor
mov
cmc
repz
call
xchg
xchg
inc
xchg
mov
inc
push
jg
fistps
dec
inc
inc
push
adc
pop
push
add
int3
pop
push
pop
inc
pop
sbb
shll
push
pop
pop
addr16
stos
fidivs
ja
mov
pop
add
inc
fdivl
inc
sbb
lcall
pop
add
dec
adc
pop
push
push
inc
pop
push
inc
push
cmp
in
das
test
jg
add
int
mov
add
fmul
nop
mov
push
or
aaa
xor
ds
xchg
add
cmc
icebp
repz
addr16
clc
or
push
sbb
adc
repz
outsl
adc
int3
pusha
clc
mov
rol
xchg
fildl
cmpsb
test
mov
aad
add
in
stc
out
mov
ss
jg
fiadds
fsub
or
or
or
js
das
adc
mul
jecxz
pop
or
jg
push
pop
or
add
xchg
sub
ret
and
jle
or
push
mov
add
cmp
xor
das
addb
test
mov
fdivr
fbstp
dec
int
xor
int3
add
xlat
add
xor
inc
xor
dec
and
jmp
xchg
fisubl
xchg
jle
push
imul
cmp
inc
push
inc
pop
in
lcall
adc
or
std
add
out
sbb
mov
or
ljmp
dec
pop
pop
fs
jae
add
aam
rol
mov
mov
mov
flds
nop
xchg
cwtl
lret
ror
mov
ljmp
xchg
out
mov
mov
imul
loopne
clc
jo
cmp
sub
imul
imul
cmp
add
adc
jae
hlt
mov
push
repnz
or
jbe
inc
inc
dec
push
dec
or
push
lret
mov
adc
xlat
push
and
loopne
xlat
and
push
lock
mov
sbb
add
add
sbb
inc
loopne
and
or
add
add
add
stos
sar
or
adc
add
add
or
aas
add
and
push
jno
cld
add
push
add
int
imul
cmpsb
adc
mov
add
mov
cmp
add
mov
mov
mov
pop
and
xchg
adc
xchg
lock
pop
sti
dec
mov
add
add
add
pushl
sbb
add
add
nop
push
andb
add
jb
out
outsb
fwait
loop
std
add
popa
add
xor
cwtl
fimuls
mov
push
mov
lcall
aaa
ret
or
mov
xorl
mov
pusha
add
pushl
mov
mov
test
nop
inc
add
jg
hlt
shlb
mov
hlt
add
test
inc
add
lods
shll
adc
cwtl
mov
mov
add
adc
rcll
add
add
fucomi
adc
popf
mov
popa
push
xchg
mov
or
outsl
mov
or
nop
or
pop
movsl
out
shlb
xor
adc
test
lds
mov
jae
lahf
addb
hlt
and
cwtl
xchg
xchg
loopne
or
sahf
ss
jg
mov
adcb
nop
adcl
adcl
xchg
adc
sahf
test
nop
inc
xchg
dec
xchg
sbbl
sahf
xchg
lcall
nop
test
mov
mov
cwtl
es
nop
movsb
jo
sahf
xchg
sahf
popf
inc
std
pop
fcmovnb
add
dec
or
adcl
xchg
add
insl
sbb
sbb
lahf
lahf
lret
pop
cld
divb
nop
xor
inc
add
sbbl
add
sbb
outsl
outsl
jo
into
pop
mov
add
movsl
lock
inc
inc
ret
cmp
push
cld
and
or
movsb
mov
fdivrp
mov
mov
mov
mov
mov
jp
pop
xchg
push
daa
adc
nop
and
scas
pushl
cmp
xor
xor
xor
fcom
inc
mov
ljmp
mov
sti
sti
inc
xchg
mov
jmp
mov
fsubl
fistl
xchg
shr
movsb
or
inc
mov
sbb
and
nop
mov
mov
ficoml
jae
call
repnz
std
fists
aad
xor
cwtl
jo
adcl
jp
push
mov
in
push
push
mov
shlb
out
loopne
xchg
pop
daa
lods
subb
rcr
add
add
fcmovne
decl
call
mov
mov
mov
push
pop
xchg
mov
or
loopne
add
data16
mov
add
sbb
not
sub
movsl
mov
cmpsb
mov
adc
xchg
mov
mov
jg
cltd
xchg
cmpsb
pushf
test
mov
cwtl
xor
fdivp
xor
inc
sub
add
mov
mov
inc
mov
xor
xorb
mov
jecxz
icebp
pop
inc
fs
cld
cwtl
dec
or
bound
loope
clc
push
mov
xchg
addl
jno
mov
mov
jo
jbe
in
incl
mov
inc
roll
mov
xor
pop
inc
push
icebp
jmp
mov
lock
arpl
aad
pop
loopne
add
dec
imul
mov
push
test
in
ljmp
jle
rcr
or
add
scas
inc
push
andl
adc
lcall
stc
add
ss
fnsave
sub
rol
test
lock
and
jg
add
mov
or
jno
mov
jl
adc
out
inc
inc
repz
pusha
adc
mov
push
mov
mov
dec
pushf
cmpsl
jb
add
sbb
mov
nop
sub
testl
adc
mov
jmp
faddl
mov
icebp
lods
sub
mov
cs
mov
fstl
pop
inc
daa
adc
pop
xchg
test
sbb
ljmp
add
xchg
xchg
add
cs
or
mov
arpl
das
loopne
xchg
repnz
test
mov
aas
jge
dec
cmp
cmp
rolb
xchg
cmp
ret
push
pop
cmc
push
adc
int3
les
ret
xchg
cli
faddl
insb
pop
mov
cmp
in
loopne
pop
ret
jg
loop
add
xlat
xchg
mov
outsb
shll
cmp
fistpll
sbb
call
dec
inc
add
add
movsl
aas
mov
fcompl
loop
mov
fcomps
push
cmp
cmp
add
in
cmp
lcall
adc
or
ficomps
mov
fucomip
push
jmp
repnz
cmp
pop
mov
adc
mov
push
pop
insb
loope
sbb
sbb
push
push
shrb
test
addb
cmpl
or
ret
add
and
or
popf
rclb
movsb
dec
imul
add
fdivrs
push
add
mov
lahf
outsb
decl
mov
add
push
movsb
loop
outsb
pop
or
jle
mov
adc
push
add
dec
add
pop
xchg
orb
push
push
xor
cmp
ror
mov
add
cld
in
sub
mov
mov
pop
es
shll
fldt
add
sbb
cvtdq2ps
cmp
cmpb
cmp
pop
clc
or
jbe
add
adc
jp
ret
test
inc
add
add
cmpb
cld
movsb
dec
add
or
es
shll
add
adc
addl
and
or
jae
loop
jbe
add
andb
imulb
js
jo
or
add
ds
shl
jg
fildll
push
xchg
fildll
es
sub
mov
adc
cmp
add
jp
pushf
addb
add
mov
and
sbb
dec
ljmp
fld
sbb
popa
pop
or
aaa
sub
cs
es
daa
adc
movsb
mov
lods
orb
das
pop
shlb
movsb
mov
add
cmp
cs
push
in
in
push
sbb
xchg
call
movsb
cmpsl
dec
jle
fstl
shll
sti
orb
shrb
daa
cmpsb
fiadds
roll
xchg
xor
sbbl
nop
adcb
pop
lcall
adc
pusha
sub
add
sub
cs
sbb
push
xchg
fstpt
rcrb
adc
fcmovu
movsl
aad
and
clc
rolb
cmpb
add
push
or
mov
das
jle
inc
inc
cs
add
rclb
xchg
and
sbb
inc
add
adc
and
add
shll
cld
mov
add
outsb
addl
hlt
pusha
pop
aad
inc
leave
add
inc
rolb
or
lods
sbb
jb
inc
push
sbb
addb
adc
adc
sbb
cmp
cs
jb
push
inc
xorl
sub
mov
call
ljmp
pop
je
cmp
mov
jmp
add
and
add
add
pop
pushf
and
xchg
push
push
fs
lock
and
ss
cmp
lock
or
andl
ljmp
das
push
adc
enter
inc
bound
shrl
lcall
lds
movsl
test
inc
sub
add
add
addb
add
mov
push
pop
icebp
icebp
mov
cmp
ja
lock
sub
cmc
xchg
andb
and
jo
inc
or
bound
movsb
faddl
or
pop
jb
loopne
incl
frstor
pop
scas
aad
pop
and
aaa
mov
adc
gs
cmp
cmpsb
stc
fs
push
gs
out
jecxz
sub
lock
enter
cmp
rol
int
adc
xor
insb
push
fildl
roll
rolb
jno
addl
xor
and
push
sub
pop
and
fbld
sbbb
pop
ljmp
out
outsb
aad
lcall
adc
xchg
ds
je
mov
aad
fldenv
popa
sub
add
push
lods
cmc
push
movsl
push
push
hlt
inc
xor
add
and
pusha
pop
ret
xor
lods
dec
pushf
dec
xchg
int
ss
push
clc
and
jbe
cmp
ret
cmp
rcll
outsl
or
push
addb
jle
adc
push
adc
scas
stc
movsl
lock
ret
int3
in
rcrb
addb
mov
mov
push
xlat
sub
adc
mov
les
aam
fnstenv
push
dec
xchg
xor
adc
jb
push
mov
mov
data16
incl
adc
push
subb
decl
rorl
cli
sbbb
sub
and
inc
jne
add
push
push
add
sbb
cmp
push
loopne
cmp
ret
adc
repnz
cmp
cmp
das
fidivl
frstor
imul
and
xchg
sarb
in
incl
popa
fsts
out
inc
adc
leave
mov
pop
cmp
es
outsb
outsl
clc
add
pop
movsb
add
mov
cmp
xchg
add
fucomip
nop
out
pusha
or
xchg
and
aad
push
push
pop
rorb
fidivrl
inc
fs
subl
mov
and
add
or
cmp
repnz
aad
ltr
mov
pushf
cmp
stos
incl
aam
insb
cmp
shlb
add
inc
mov
add
and
sbb
and
cmp
cli
add
call
cmc
lcall
iret
cmpb
test
mov
sti
jg
pusha
and
add
push
inc
add
xchg
push
adc
jecxz
int
mov
into
into
rorb
ljmp
cmpsl
aad
xchg
shll
lahf
push
rorl
rorb
or
test
in
std
outsl
push
or
mov
or
and
mov
pop
pop
lock
cmp
rcrb
or
filds
add
call
rol
movsl
roll
movsb
sti
push
stos
jp
mov
data16
adcl
andl
sti
jmp
xor
pop
popl
int3
pusha
adc
add
lds
fdivs
or
loope
aaa
cmp
sbb
adc
adc
dec
loop
xchg
xor
mov
mov
add
inc
add
and
out
and
pop
inc
lods
hlt
cld
or
jle
sub
movsb
add
sub
add
cmp
jp
or
mov
arpl
mov
push
cmc
or
rorl
sbb
or
or
pusha
pop
adc
shrb
push
movsb
fnstcw
cmpsb
aad
or
fldt
mov
jle
lcall
dec
or
xchg
adc
loopne
jno
das
push
add
cmp
add
adc
std
das
clc
divb
outsl
in
sub
fsubl
xor
in
filds
cmp
push
xor
leave
testb
add
inc
add
adc
call
cld
jmp
sbb
inc
ficoms
ss
pop
jns
add
adc
push
ficoms
std
stos
mov
jge
xor
mov
lods
loop
pop
mov
in
add
add
stos
loope
lcall
xchg
or
inc
jb
div
lods
inc
pushf
adc
movsl
or
or
add
add
pop
cmp
xchg
insl
add
decl
xchg
push
pusha
inc
add
xchg
adc
aam
or
mov
mov
sbb
xor
add
out
mov
or
in
mov
or
aaa
jno
cwtl
mov
inc
push
insb
inc
push
and
subb
fldt
push
andl
insl
and
cwtl
and
push
add
inc
and
mov
pusha
add
nop
ficoms
push
jmp
add
lds
pop
sbb
nop
adc
jmp
stc
mov
push
add
push
pop
cmp
inc
and
mov
fwait
lods
push
inc
push
xor
lcall
push
nop
rorb
stos
fidivl
add
pop
push
mov
xchg
mov
loopne
or
adcb
inc
xor
in
hlt
cmpsb
push
jbe
cmp
fimull
scas
clc
mov
cmp
sbb
xor
ss
jo
push
scas
xchg
push
inc
lds
cs
add
in
pushl
pop
pop
xchg
and
or
pop
and
shlb
pop
movsb
cmp
cmp
les
ljmp
lret
pop
push
inc
shlb
dec
sarb
add
stos
fildl
rcrb
cmp
sub
add
and
mov
pop
sub
shlb
sarb
inc
or
jo
sbb
and
push
cs
loope
inc
inc
icebp
rcll
clc
stos
mov
movsl
adc
in
lcall
pop
ss
fld
jno
cmp
pop
inc
jno
sbbl
cmp
out
cli
inc
hlt
push
dec
pop
sub
pop
iret
pop
push
xchg
mov
sbb
and
adc
push
mov
mov
mov
mov
jbe
xchg
or
and
ljmp
sti
xchg
and
sub
cmpsl
xchg
das
lea
fstpt
push
adc
flds
enter
cmp
loopne
adc
rcrb
cmp
mov
pop
xor
mov
push
push
xchg
loope
push
push
sub
shl
mov
xor
pop
and
je
jo
mov
loopne
and
sbbb
mov
inc
fildll
rcrl
cmp
adc
jo
inc
call
pop
and
pop
je
or
push
out
insb
adc
sub
mov
aaa
inc
push
scas
loope
test
lock
jecxz
loopne
adc
outsb
cltd
cltd
mov
add
mov
push
fistps
add
inc
das
push
fcomip
outsb
mov
sbbb
shrb
xorb
cmpsb
jg
jo
hlt
cmc
pushf
in
pop
aam
add
cwtl
pop
cmp
or
incl
rcrb
and
or
jb
or
call
subb
jo
pop
shll
or
dec
mov
shr
data16
add
mov
into
scas
pop
scas
or
add
or
movsb
loope
cli
adc
push
stos
jg
xchg
sub
cmp
icebp
scas
sub
dec
mov
jns
pop
into
cmp
loopne
xor
jb
add
or
mov
pop
xlat
sbb
int3
call
jg
ljmp
sbb
addr16
add
xor
adc
cld
aad
add
adc
pushf
mov
mov
push
or
repnz
xor
pop
fwait
cs
xchg
add
fwait
jb
lds
xor
mov
out
xchg
aad
movsb
push
sub
sub
and
sbb
jg
std
rolb
rolb
movsl
shl
nop
pusha
or
mov
mov
jl
mov
or
pushl
shlb
pop
int3
xor
xor
jg
push
ret
push
aad
rclb
aad
ljmp
dec
rolb
mov
repnz
or
frstor
call
push
sbb
movsl
ret
pop
ljmp
mov
ljmp
addb
add
mov
cmp
shlb
ljmp
and
iret
js
fs
incl
shll
mov
pop
add
movsb
cli
nop
mov
jne
call
roll
nop
pop
in
dec
jno
call
mov
icebp
inc
stc
pusha
lods
sbbb
or
xchg
in
cli
fwait
test
xchg
vprotw
insb
decl
mov
push
leave
add
pop
mov
mov
pop
std
incl
xchg
cmpsl
flds
sub
cmc
scas
scas
mov
fadd
cmp
in
xor
jg
filds
push
int3
inc
cld
jo
xor
sub
mov
jle
loopne
pop
popf
rorb
call
ja
mov
stc
sahf
movsb
pop
sub
filds
cmpl
dec
sbb
in
add
cs
sub
xor
fiaddl
sub
mov
fldl
mov
test
adc
addb
in
adc
ljmp
or
movsb
outsb
push
adc
lods
mov
rcll
out
xchg
pop
push
fcomp
movsl
jecxz
add
mov
dec
jecxz
sub
cwtl
shll
orl
sbb
fs
addl
jne
sub
and
lret
push
adc
cmp
add
jecxz
ret
pop
jno
movsl
lret
mov
jb
movsl
and
std
cmc
pushl
and
adc
or
push
lods
shll
pop
and
add
fldl
rolb
dec
andb
add
adc
sbb
pushl
clc
mov
xorb
call
aaa
push
lret
test
subb
orl
sbb
std
sbb
sbb
lds
cmp
xor
stos
decb
and
jle
cmp
pop
xchg
push
clc
pop
jmp
mov
sbb
inc
orb
add
int
mov
js
or
sbb
repnz
int
cs
or
call
test
in
xor
pop
sub
sub
mov
and
and
cld
sbb
lods
ljmp
scas
pop
and
rclb
xchg
aam
push
or
mov
dec
in
adc
push
sub
and
andb
cmp
pushl
iret
xchg
sub
pop
add
jg
add
add
orl
mov
and
jbe
addb
xchg
clc
and
rorb
mov
push
add
mov
pop
shlb
cmp
jl
insb
shlb
push
into
ret
cwtl
inc
add
or
fstpl
xor
in
movl
adc
outsl
ljmp
pop
mov
push
cmp
sbb
inc
loop
mov
pop
add
mov
lods
xor
xorb
cs
jmp
hlt
sub
aad
inc
mov
stos
and
add
jp
adc
out
xor
sbb
pop
cmp
cmp
lds
in
pop
movsb
or
cli
in
rorb
mov
pop
rolw
sub
addl
out
dec
adc
add
adc
ret
nop
insb
inc
mov
adc
or
js
test
jge
mov
pop
inc
movsb
xchg
xchg
movsl
rol
jo
iret
cmpb
rcrb
loop
cs
xchg
lods
inc
and
add
ds
xor
add
or
xchg
add
cs
mov
in
sbb
rcll
popf
mov
out
pop
push
adcb
add
push
subl
inc
movsb
jge
mov
and
ret
mov
int
dec
add
add
pop
mov
mov
lods
fcomps
shlb
adc
icebp
rorl
xchg
adc
js
mov
ss
pop
movsl
adc
aam
sbb
and
sahf
mov
lods
pop
test
xor
mov
jo
dec
or
pop
into
dec
enter
subl
pop
cmp
ret
adc
mov
adc
and
mov
pop
lahf
movsb
sbb
and
mov
movsb
jno
aas
push
adc
loopne
add
mov
pusha
pop
mov
xorb
cmp
nop
orb
xor
adc
xchg
cmp
test
sarb
xor
add
ljmp
enter
fdivr
decl
and
push
add
push
sub
outsb
sub
push
cltd
adc
aas
inc
add
add
or
inc
add
fld1
push
leave
faddp
pop
add
pop
sahf
lods
inc
push
outsb
clc
fistpl
movsb
add
add
stos
push
out
js
stos
xorb
out
loopne
inc
or
lea
test
jl
ljmp
push
add
addl
call
outsl
loopne
adc
add
pusha
sbb
xor
inc
sub
fildl
mov
or
cmp
add
loopne
movsl
sahf
pop
rclb
cwtl
int3
and
push
scas
imul
inc
push
cli
inc
push
mov
push
fs
jo
jg
mov
push
sub
ljmp
xor
aaa
dec
cmpb
inc
pushf
adc
add
stos
aam
cli
mov
lods
or
mov
pusha
insl
test
add
add
push
add
or
xor
pop
inc
loop
pop
mov
cmp
mov
pusha
flds
cwtl
lods
outsl
das
mov
xchg
loopne
pop
les
inc
out
adc
adc
sub
addr16
sahf
adc
pop
cmpsb
das
jo
xchg
mov
pop
xlat
adc
xchg
flds
xchg
outsl
divb
rol
or
adc
nop
sbb
stos
cs
shrb
and
push
xor
push
add
sub
cmc
std
adc
lock
aaa
out
push
roll
shll
loopne
adc
in
mov
dec
imul
lods
inc
pop
hlt
mov
arpl
cmc
mov
pop
lahf
or
xchg
add
mov
or
test
popf
cmc
test
in
std
out
cmpsb
xchg
add
or
cmc
in
cmp
mov
es
pop
mov
add
mov
in
scas
js
leave
mov
pop
rolb
add
adc
pop
popa
xchg
pop
adc
adc
push
loopne
and
ss
or
mov
xor
sarb
and
in
jno
add
fiadds
fwait
and
movsb
scas
pop
in
push
pusha
xchg
rcrl
adc
aam
and
push
sbb
sbbb
sbb
mov
jbe
jmp
mov
add
call
fldcw
in
roll
dec
aad
out
push
xchg
mov
data16
xlat
and
insb
fisttpll
stc
mov
sub
sbb
sub
inc
shll
sbb
mov
outsl
add
push
lods
lds
mov
data16
icebp
outsl
push
xor
adc
les
jb
insb
js
shlb
fld
pusha
sub
leave
push
imul
notb
push
inc
fucomp
das
push
cwtl
je
xchg
mov
and
call
push
or
mov
repz
jo
loopne
outsb
fistl
fbld
rolb
loope,pn
jle
and
sub
add
and
clc
js
sub
test
mov
fdivp
or
int3
or
pusha
rcrl
add
cmp
cmp
add
mov
cs
lds
call
scas
mov
add
movsl
fistpl
xchg
cmc
pop
cmp
fisttpl
aad
into
pop
push
movsl
rcrl
inc
and
mov
call
push
mov
add
aad
outsl
icebp
gs
and
outsb
ja
je
push
psrad
and
push
in
xchg
adc
loopne
shrb
xchg
add
xchg
or
negb
and
inc
pop
nop
add
push
stos
mov
ret
mov
jmp
in
rorl
add
and
or
std
adcb
je
push
cmc
adc
mov
rcrb
pop
mov
or
or
in
call
and
fistl
divb
sbb
adc
cmp
push
lock
mov
subb
inc
enter
movsl
fbld
or
add
push
push
and
mov
icebp
xlat
sbb
push
sub
adc
sub
ljmp
pop
fcos
stos
push
lcall
and
xor
adc
add
cmp
push
adcl
push
movsl
lret
pop
xchg
cmp
sbb
mov
xorl
inc
daa
pusha
dec
xor
leave
cmp
mov
les
xor
mov
xchg
in
das
push
mov
xchg
int
dec
cmp
stos
cmp
movsl
jmp
ret
mov
cwtl
and
enter
call
sbb
lods
fstp
xchg
push
andb
icebp
adc
decb
lock
cmp
add
lock
pushl
or
bound
adc
push
lds
sarl
cmp
add
or
inc
pushf
mov
inc
sbb
daa
adc
testb
pop
xchg
push
mov
cmc
inc
mov
les
pop
outsl
out
cli
pushl
cmp
daa
cmp
xchg
xchg
rcll
hlt
fsts
xlat
rolb
push
jno
sbb
push
add
push
jb
fdivrl
incl
cmp
push
sub
cmpsl
lret
push
adc
mov
cmp
add
fiadds
fnstsw
add
sub
test
mov
movsb
sub
fistpl
mov
adc
cmpsl
xchg
xor
jb
adc
pop
xchg
lds
in
adcl
repnz
loope
cmp
cmpsb
push
cmp
repz
mov
add
mov
lods
and
cwtl
push
cmpsl
fisubrs
sub
sub
pop
or
sub
lock
fdivl
cli
add
fcomip
dec
cwtl
loopne
cltd
cs
sub
fdivr
daa
sub
xlat
add
stc
mov
enter
shll
mov
mov
push
add
aad
or
aam
push
in
fsubr
xchg
out
jo
fcos
pop
std
push
loope
jmp
add
rcll
into
ret
jg
add
cld
lock
inc
or
rclb
repnz
add
sub
cmp
add
sub
add
int
popa
add
pop
add
pop
in
cli
and
push
nop
push
sbb
pop
ret
loope
cmp
popa
ds
cmp
mov
shl
add
int
sub
dec
test
sbb
das
cli
and
jns
shrl
scas
push
push
scas
loop
xchg
inc
inc
lea
adc
fnstsw
fwait
pop
test
xchg
jo
mov
cmp
clc
bound
mov
rol
xor
mov
xchg
ljmp
les
and
push
mov
jg
rol
fdivl
lds
ficoms
mov
pop
xchg
pop
movsb
adc
mov
dec
sarb
arpl
push
test
movsb
push
jno
ljmp
jg
adc
add
xor
or
nop
add
mov
jge
pop
std
mov
mov
add
adc
into
lock
fisttps
lock
scas
pop
lock
and
movsb
xacquire
test
stos
subb
mov
dec
loope
mov
xchg
loope
cmp
or
inc
add
xlat
leave
or
mov
pushf
rolb
adc
jae
movsb
icebp
xchg
shlb
int
ret
adc
xlat
shrl
adc
mov
rorl
cmp
inc
jo
test
mov
aaa
and
pop
cs
cmp
ljmp
daa
rolb
dec
and
pop
aam
orb
or
or
mov
push
sbb
pop
push
lock
push
aad
pop
xchg
loop
decl
pop
xchg
mov
sbb
xchg
cmc
rolb
and
jg
cmp
call
xchg
xchg
xchg
daa
aam
shll
mov
bound
sbb
int
push
add
sub
fisttpll
xchg
lcall
cmp
pusha
dec
mov
ljmp
hlt
mov
push
add
add
or
lock
cs
add
jg
cld
inc
or
push
mov
ret
mov
adc
rcll
dec
and
stc
jo
cmp
subb
add
ja
movsl
inc
add
orb
sbb
iret
jecxz
movb
sbb
pop
push
adc
lret
fldt
outsb
cwtl
inc
add
or
xor
int
add
and
xchg
nop
cmp
icebp
mov
and
ljmp
add
bound
loopne
js
add
lock
sub
js
fstp
movsb
add
jge
popa
mov
shrb
pop
sub
fisttpll
adc
adc
aam
aam
add
pusha
ret
orb
add
fdivs
add
add
add
inc
int3
pop
ds
mov
shl
jbe
add
sub
sub
aam
test
fisttpll
inc
mov
pop
movsb
mov
lds
pusha
aam
cltd
ljmp
cmp
inc
and
push
movsl
fsubrs
add
or
adc
xchg
xor
adc
add
cmp
add
clc
mov
mov
lods
adc
adc
test
pop
cmp
addl
cmp
inc
mov
or
hlt
mov
xchg
mov
clc
or
pop
pop
out
xor
and
push
add
ret
pop
sbbb
shl
andb
mov
pop
bound
jp
add
flds
adc
mov
add
add
roll
sbb
in
xchg
mov
pop
add
xchg
xchg
iret
rcl
cmpsb
enter
pop
push
test
cltd
rcll
xlat
pop
xchg
cmc
jle
xchg
push
cmp
inc
adc
inc
push
mov
add
mov
fs
add
inc
add
orl
movsb
sar
mov
cmp
popa
fldcw
cmp
or
or
inc
mov
je
shrb
out
xchg
not
add
pop
sarb
dec
inc
xchg
mov
loop
xchg
add
pop
dec
data16
push
inc
cmp
push
je
or
pop
cs
push
add
test
shl
pop
inc
or
cmp
sub
bound
pop
or
xorb
sbb
cmc
ljmp
add
or
jecxz
adc
adc
or
adc
dec
pop
add
aaa
cwtl
mov
cmpsl
aad
scas
mov
mov
push
sbb
adc
and
lahf
or
dec
icebp
cs
cmp
xchg
jle
mov
and
adc
push
sub
loopne
call
jne
loopne
lcall
or
lods
fstps
cli
add
cltd
cwtl
pop
vmulsd
adc
add
addl
imul
push
daa
sbbb
add
mov
orl
inc
sbb
aaa
xchg
or
adc
shl
orb
ror
inc
cmpb
pop
jp
adc
pop
jl
cmc
frstor
pop
fst
pop
into
jmp
movsb
subb
ficoms
ds
shlb
fiadds
addr16
addr16
adc
cmp
and
fldenv
and
data16
flds
loopne
pushl
mov
add
sar
pop
loope
cmpsb
in
or
jecxz
jb
xchg
or
add
cwtl
push
decl
xor
fsubrp
mov
or
arpl
jl
mov
loop
add
pop
mov
fwait
cmpl
sbb
sub
add
add
or
inc
clc
sarl
push
pushf
sub
push
add
rol
pop
insb
add
nop
cli
push
ljmp
orb
or
inc
lods
ret
pop
movsb
xor
sbb
pop
xchg
fisubrl
icebp
mov
adc
lret
jecxz
adc
or
imul
pop
or
mov
pop
lock
jg
jle
xchg
xor
lds
shrl
movb
cltd
loopne
fidivrs
add
push
dec
inc
pop
and
inc
addl
mov
aam
cs
fcoms
loop
cmpb
jle
mov
add
mov
scas
push
das
pushf
enter
xor
movsb
and
aad
ljmp
push
lods
sub
mov
nop
loopne
ret
das
adc
cwtl
xchg
mov
fistpll
rclb
call
pop
mov
rolb
mov
add
or
sub
pop
dec
out
sub
hlt
mov
mov
fldt
pop
cmp
cs
fsubs
add
mov
es
sti
cmp
and
pop
test
push
notb
or
shlb
es
clc
aaa
cld
dec
or
inc
and
sub
mov
sub
sbb
out
xchg
jno
loopne
cmp
push
mov
shlb
sbbb
mov
loop
ficoml
inc
add
add
or
mov
and
inc
push
test
imul
mov
dec
cmpsb
add
call
push
nop
sub
ljmp
push
outsl
adc
das
add
cmpsb
mov
adc
mov
lret
mov
or
pop
mov
cmp
imul
fdivl
sbb
movsb
and
ljmp
or
push
movsb
lods
cld
mov
and
mov
dec
and
adc
dec
jb
pop
loope
push
lcall
aaa
std
repnz
call
movsl
and
xor
add
lods
and
mov
pop
mov
das
orb
add
mov
add
xor
outsb
das
push
and
movl
pop
aad
rolb
add
push
rclb
pusha
cmpsb
mov
adc
enter
loope
push
es
inc
pop
pusha
test
incl
cmp
mov
mov
icebp
xor
fdivrl
subb
inc
xor
test
sbbb
and
mov
mov
icebp
movsl
loope
rorl
push
andb
loopne
add
fdivs
call
jmp
mov
icebp
mov
xor
mov
add
and
std
or
call
xchg
add
xchg
mov
pop
add
push
add
and
and
jo
xchg
cmc
pushf
lea
sbbl
pop
mov
mov
sbbb
add
add
mov
fwait
test
sub
movsb
xlat
adc
lcall
mov
repz
inc
inc
inc
push
push
loopne
cmp
jo
sbb
ja
inc
cmp
push
in
push
xchg
xchg
mov
cmpsb
scas
mov
add
call
and
cs
cld
outsl
mov
adc
scas
mov
adc
jg
lock
call
inc
pop
xor
enter
adc
ljmp
push
xor
push
or
cmp
xor
dec
add
ljmp
rcrb
mov
pop
lds
loopne
fisttpll
pusha
sbb
fyl2x
incl
add
pop
adc
push
shll
push
or
sbbb
mov
adc
xchg
mov
nop
adc
or
or
adc
les
sbb
popa
xor
or
adc
sahf
xchg
lds
add
push
push
inc
jb
mov
lods
aaa
mov
mov
mov
xchg
orl
int
adc
add
or
cmp
loope
pop
mov
dec
movl
push
adc
mov
pop
shlb
sbb
leave
pusha
mov
fidivs
pop
push
push
and
pop
push
sbb
ror
add
out
adc
push
cmp
decl
int3
inc
in
lock
xchg
mov
cs
dec
call
xor
xchg
frstor
andb
loopne
add
jo
adc
lock
mov
xchg
mov
loope
call
cld
cwtl
cmp
and
inc
pop
fs
add
pusha
sahf
stc
and
adc
ret
mov
std
cmp
xchg
dec
frstor
loop
sbb
push
sti
fists
mov
mov
mov
out
shlb
and
ljmp
fiaddl
leave
mov
idivb
rolb
ljmp
pop
push
and
mov
adc
adc
push
push
cld
lahf
movsb
cmpb
push
fisubrs
decl
cmp
lock
adc
stos
fiadds
adc
vpmovsxwd
dec
xchg
push
inc
popa
cli
mov
mov
mov
adc
cmp
xchg
adc
inc
xor
lcall
adc
jg
mov
inc
add
or
cs
push
rcr
push
push
add
dec
ja
cmp
in
cmp
out
cli
call
pop
pop
xchg
gs
add
pop
add
test
outsb
jns
jge
mov
inc
xorl
or
pop
outsl
add
fcomi
add
and
mov
rol
pop
fs
call
add
pop
pop
pushf
and
push
rolb
cmp
or
mov
jns
loopne
push
add
loope
mov
adc
pop
shlb
xor
dec
loop
xor
and
sbb
mov
or
call
jmp
add
lods
call
cmp
mov
jg
ds
sbb
add
add
jmp
cmp
mov
sub
call
repnz
or
fnstsw
fistl
repz
mov
shrb
jge
mov
pop
or
lds
fld
movb
adc
add
xchg
sub
cmp
outsb
orb
fidivrs
push
adc
mov
cld
jo
ficoms
mov
pop
js
adc
xchg
iret
jecxz
add
push
or
decl
inc
xor
mov
pop
mov
add
test
jne
mov
andb
daa
add
sub
and
inc
xor
imul
add
pushf
and
loopne,pn
jecxz
xor
cmp
rclb
mov
imul
loopne
inc
adc
adcb
mov
loopne
xchg
pop
popa
pop
or
dec
add
add
mov
jl
add
add
xor
test
mov
dec
jmp
jg
out
xor
push
pop
xor
pusha
lods
jg
rcrl
dec
and
mov
lcall
and
mov
pop
mov
cmp
and
and
mov
movsb
loopne
inc
pop
sub
mov
dec
das
pop
mov
and
mov
and
push
hlt
mov
push
xchg
jo
sub
ficomps
cli
fmuls
lock
call
lods
mov
push
and
shll
imul
add
cmp
lock
fldenv
mov
push
nop
aad
lock
mov
clc
or
shll
nop
or
sbb
push
adc
cli
xor
std
and
mov
or
and
cmp
jmp
xchg
pusha
inc
lcall
jb
daa
stos
xchg
push
js
pop
or
aaa
shll
or
test
insl
sub
xorl
jle
out
mov
xchg
sarb
filds
xor
test
fldt
sbb
mov
nop
fsubl
jmp
jecxz
add
mov
jb
cmp
cmp
fimuls
scas
and
jne
roll
adc
mov
jnp
adc
scas
xor
aad
push
push
and
dec
push
and
movsb
adc
loope
xchg
es
pop
hlt
jbe
xchg
test
or
cmp
or
daa
and
les
mov
ljmp
inc
scas
inc
and
cmp
xchg
add
ret
jg
test
lds
rolb
push
and
xor
ja
jmp
xor
add
pop
xchg
fstps
push
jmp
lods
divl
or
ret
add
ret
les
decl
out
xchg
or
inc
fcmovbe
lock
mov
xchg
dec
push
mov
lret
das
xchg
bound
fs
push
and
dec
repnz
aad
xor
rolb
push
mov
adc
dec
cmp
adc
push
popf
push
push
sarb
mov
outsb
aaa
mov
add
in
ljmp
mov
mov
mov
add
mov
jmp
jo
or
cmp
pusha
rolb
jb
lods
ljmp
enter
mov
add
sub
in
jp
jne
incb
fdivl
cmp
add
sbbb
push
fistl
mov
or
les
data16
xchg
adc
add
push
roll
pop
sbb
cmp
push
or
mov
mov
jmp
and
les
dec
cmp
or
add
mov
cmpb
and
jl
and
fdivs
add
inc
add
adc
mov
cmc
pop
bound
sbbb
ret
add
or
shll
js
push
in
sbb
cwtl
insl
and
inc
push
xchg
or
and
adc
add
mov
sbb
adc
fnstcw
xchg
fldl
ret
outsb
mov
movsl
mov
fisttps
xchg
lock
in
loopne
movsl
fldcw
jle
jg
or
mov
fstp
add
js
or
sub
gs
add
pop
lahf
push
mov
pushf
nop
inc
push
add
or
adc
adc
jnp
inc
cwtl
mov
orb
sbb
and
or
push
xor
or
shlb
cltd
movsl
adc
push
in
dec
loopne
aad
cmc
or
mov
movb
pop
inc
or
inc
cmpb
adcb
jnp
movsb
scas
push
xchg
cmp
add
cmp
pop
out
sbb
or
pusha
loopne
xchg
cmc
data16
mov
clc
adc
inc
lock
xchg
leave
subb
inc
sbb
test
orl
in
rolb
xchg
shr
adc
out
inc
xor
mov
mov
push
push
adc
xor
lds
pop
fldl
xchg
lods
fldenv
test
aad
jo
sub
out
ret
and
and
sub
push
add
and
pop
jecxz
cmp
ret
scas
push
adc
lret
push
addb
mov
xchg
mov
loop
xlat
mov
mov
rolb
sub
imul
mov
ss
scas
mov
or
hlt
mov
rolb
push
sub
sbb
rolb
ljmp
cmpsb
loopne
adcb
sbbl
icebp
pop
pop
pop
push
ret
mov
xor
repz
pop
dec
jg
jbe
push
stos
cmp
fisttpll
clc
incl
inc
add
mov
mov
mov
addb
cmp
pop
ret
mov
out
nop
fmuls
imulb
pop
xchg
sub
das
inc
addb
or
clc
negb
xchg
roll
pop
and
fldl
repz
push
add
add
adc
mov
mov
sbb
or
pop
xchg
or
in
sbb
mov
clc
inc
and
das
lods
subb
stc
pop
fs
loopne
cmpsb
test
loopne
mov
lods
mov
ret
mov
cmpsb
inc
addb
test
push
stos
sub
out
rclb
push
icebp
cmp
pop
xchg
ret
sub
sbb
or
mov
ss
xchg
in
jne
pushf
xor
push
aaa
icebp
mov
shll
mov
mov
mov
or
nop
es
orl
outsl
dec
cmp
push
pop
lods
add
andb
mov
mov
popa
inc
pop
push
rorl
adc
movsb
sar
or
loopne
aad
add
push
loopne
or
add
lods
mov
pusha
js
int3
push
stos
into
test
das
pushf
into
mov
andb
rcrb
pop
inc
and
rclb
lds
ret
dec
jnp
mov
xchg
xlat
roll
cmpsb
xchg
mov
or
adc
js
push
sbb
jle
sbb
pusha
addl
inc
loop
push
les
cli
add
mov
lret
daa
add
cli
or
sbb
pop
cld
call
mov
pop
nop
xlat
pusha
add
xchg
sub
pushf
sub
addb
shrb
fs
inc
push
or
mov
movsl
or
adc
adc
rcrb
mov
adc
or
pop
movsb
jo
rorl
mov
inc
add
decl
jmp
shrl
flds
leave
rcl
nop
ds
in
mov
sti
jg
pop
es
fiadds
clc
xchg
cmp
xchg
and
stos
jle,pt
adc
push
movl
mov
or
movsb
inc
push
xchg
gs
mov
sbb
jbe
mov
jmp
cmp
repnz
orl
inc
sti
cmp
and
dec
and
inc
les
ja
add
loopne
cmpsb
aaa
xor
movsb
sbb
and
lret
or
call
ret
sahf
mov
jno
inc
push
cwtl
rcrb
stc
add
jmp
outsb
mov
mov
andb
je
mov
jl
inc
jg
ficoms
pop
pop
sbb
dec
add
sub
pop
mov
pushf
pop
push
jmp
notb
cs
jg
xchg
cmp
push
xor
test
cwtl
push
sbb
das
nop
lret
add
lcall
loope
mov
fwait
lods
das
fs
sarb
inc
in
adc
dec
loopne
subb
pushf
xchg
ljmp
lret
ret
fisubs
sub
ret
mov
mov
ret
stos
data16
cmc
sbb
cmp
dec
sbb
or
sbb
pop
fwait
pushl
push
pop
mov
add
adc
or
or
aam
fdivrl
cmp
loop,pn
mov
push
sar
rolb
loopne
ficoms
and
pusha
xor
and
dec
jle
pop
adc
push
rorb
add
cmp
pusha
add
fcoms
adc
in
movsb
and
xor
pop
aad
xchg
loopne
push
inc
aam
or
and
cmp
cmp
pop
int
xchg
sarb
push
jge
push
sbb
push
push
cmpsb
fidivl
gs
push
xchg
fwait
movsb
sarl
and
mov
dec
ljmp
xchg
ds
bound
lock
xchg
jo
sbb
in
and
incl
ret
gs
add
sbb
or
rorb
lcall
fwait
lock
mov
add
inc
push
stc
inc
cld
push
xor
cmp
lock
xor
inc
and
hlt
sbb
ss
andb
mov
popa
test
aam
aaa
dec
sub
and
pop
mov
fwait
js
inc
ds
jp
andb
cmp
inc
push
icebp
xchg
push
cmp
incl
loopne
lock
inc
xchg
es
push
jo
sarl
mov
pop
push
push
nop
insb
inc
mov
mov
adc
int
mov
roll
mov
inc
outsl
or
loop
cs
out
shl
or
push
fcomip
add
mov
mov
push
add
xchg
nop
pop
inc
in
push
xchg
popf
xor
sub
cmp
inc
test
add
sbbl
or
lock
jg
test
mov
and
add
and
push
das
cwtl
repz
aad
push
push
and
inc
pop
adc
aad
or
fldl
and
aas
xchg
pop
jbe
shrb
mov
or
xor
mov
sbb
leave
jo
lock
adc
aaa
push
sbbb
cmp
imul
lock
clc
outsb
and
mov
mov
push
add
in
lock
shl
mov
movsl
fstl
movsl
movsb
or
fisubs
add
bound
and
es
sarb
jl
pop
rcrb
shlb
push
xchg
push
cmp
fisubrs
push
imul
add
push
add
jo
push
cltd
jle
cltd
movsb
pusha
pushf
sub
add
rclb
shll
andb
cmp
daa
mov
xor
dec
or
cmp
mov
push
daa
xchg
sbb
je
cld
pop
clc
mov
nop
jb
push
and
inc
inc
push
das
adc
or
mov
jge
cmp
call
or
cmp
int
lock
stos
cs
add
lock
in
imul
in
ljmp
roll
ljmp
jnp
mov
jo
add
inc
icebp
jbe
in
xor
mov
pusha
pushf
add
shlb
outsl
clc
pop
xchg
loope
pop
cs
std
and
xor
xor
jo
adc
add
faddl
mov
add
mov
loopne
lods
jl
or
jo
frstor
lock
and
or
adc
inc
jns
loop
decl
jo
sub
push
push
lods
jns
fimuls
mov
jae
test
rorb
cmp
adc
add
add
and
pushf
in
mov
add
add
mov
sub
push
in
nop
or
inc
or
or
sub
or
rclb
jo
repnz
fbld
jmp
jle
mov
xchg
fld1
aam
mov
cmp
add
clc
aaa
je
data16
cmp
fadds
mov
adc
lds
leave
xchg
xlat
inc
insl
test
fbstp
add
nop
cmpsb
xchg
incb
sbb
adc
cmp
add
ret
pop
loope
popaw
lods
add
push
mov
cmp
lea
xchg
es
mov
cmp
mov
push
rclb
and
fiadds
vpsrlq
sub
xor
rcr
scas
pusha
jle
add
cli
movsb
rclb
xchg
sub
mov
sarb
pop
notb
add
mov
aam
fmuls
sahf
adc
xor
mov
add
pushl
push
xchg
add
roll
nop
pop
out
add
adc
mov
cld
orb
mov
les
and
mov
pop
sbb
cmp
icebp
mov
mov
pop
lds
sbb
rclb
sub
mov
mov
ljmp
fs
icebp
stos
pushl
xor
pop
adc
loope
pop
je
fs
push
mov
mov
push
ja
pop
movsb
imul
inc
sub
push
daa
fsubr
push
loopne
mov
cmp
xchg
and
or
rolb
or
aam
mov
and
add
mov
fsubs
xchg
sbb
push
arpl
sub
push
or
adc
dec
mov
shlb
ficoml
xchg
fdivrl
je
cmp
bnd
cmp
jo
mov
add
fiaddl
push
sbb
nop
push
fcoms
add
add
icebp
incl
inc
cmp
pop
shll
add
pusha
xchg
add
mov
ret
push
test
imull
add
cli
and
add
lock
pusha
dec
mov
gs
push
cmp
mov
loope
int
and
xlat
add
cmp
test
add
int
stos
xchg
sub
or
push
fnsave
mov
fisttps
xor
leave
pop
fdivs
add
mov
xchg
cltd
ljmp
shlb
hlt
add
add
adc
shrb
adc
out
cld
add
fstps
sub
decb
push
adc
ljmp
push
mov
aad
pop
fstps
cli
or
pushf
sbb
mov
jno
sub
insl
popa
sub
aas
inc
sbbb
mov
pop
int
ret
adc
call
and
pop
dec
testb
cli
pop
jl
cli
and
pop
mov
mov
push
adc
mov
sbb
or
aaa
mov
sbb
pop
roll
and
jg
cmp
fidivs
loop
mov
and
adc
xchg
add
sub
hlt
jbe
push
push
pop
jmp
iret
cs
cs
xchg
lcall
decb
aas
popa
push
shl
adc
mov
mov
lock
xor
clc
and
int3
xlat
pop
or
jg
adcb
and
ljmp
shll
add
pop
clc
and
call
call
mov
adc
sub
adcb
ficomps
sbb
push
xlat
mov
shrb
aad
dec
cs
inc
cmp
cmp
mov
clc
xor
fnstenv
into
inc
shrl
and
lret
and
inc
fidivl
out
inc
add
sbb
mov
mov
fstps
mov
or
dec
add
push
adc
es
or
fmuls
push
rcrb
test
xchg
and
pusha
jge
add
mov
mov
fiadds
out
jbe
dec
xchg
adc
decl
mov
cmp
pop
add
pop
sahf
aad
add
cli
roll
pushf
rcl
cmp
mov
sbbl
stos
sbb
xor
dec
and
mov
mov
mov
jo
cmpsb
movsb
negb
scas
jbe
lcall
lds
jmp
jle
ljmp
xor
jle
jno
mov
cld
jmp
js
movsl
enter
fbstp
xchg
inc
and
shr
sbb
pop
aad
fistl
pop
ljmp
jp
add
lds
out
subl
mov
call
push
sub
leave
shrb
cmpsb
xor
mov
xchg
ja
pushl
cmp
ds
adc
rcrl
test
jp
or
ktestw
popa
xchg
std
out
push
pop
rorl
add
mov
add
arpl
daa
and
lds
jmp
aad
sbb
sbb
xor
push
adc
leave
icebp
mov
add
add
js
cmpsl
add
mov
xchg
mov
test
add
xchg
pop
lods
or
addb
sbb
sbb
nop
sub
imul
inc
shrb
imul
xchg
push
xchg
aad
cld
aad
pop
cs
push
jbe
inc
dec
add
sar
jbe
addb
cmpsl
lds
adc
pop
cmpsb
pop
xor
xchg
inc
adc
jae
aam
inc
or
push
fadd
or
cwtl
sar
mov
or
xlat
scas
jmp
or
sbb
add
pushf
mov
cmp
inc
cmp
inc
xor
sbbb
sarb
popw
dec
inc
mov
adc
push
jne
loopne
mov
fidivs
add
cs
fstpl
mov
mov
mov
cli
or
fldl
mov
and
sub
ffreep
or
movsl
xchg
rolb
add
movsl
jmp
fcompl
push
or
lcall
add
cmpsb
orb
cmp
cli
adc
add
rolb
xchg
out
aam
xchg
js
adc
and
fbld
push
push
sub
mov
mov
fadds
xchg
cmp
ljmp
repnz
add
add
xor
xor
mov
dec
cmp
pop
or
cmp
lea
arpl
pop
add
lcall
fcoml
sbb
pushf
inc
add
xchg
in
aas
xorb
adc
mov
inc
adc
push
shrl
fstpt
cld
dec
adc
ds
scas
add
mov
sbb
add
lcall
inc
sub
mov
fsubs
and
add
mov
mov
push
mov
push
push
mov
orb
dec
loop
mov
inc
add
pop
lea
ret
add
inc
and
fisubrs
ss
fwait
mov
in
mov
sub
popa
pcmpeqd
or
rcrb
fiadds
pop
mov
adc
xchg
andl
push
inc
pop
xchg
pusha
add
inc
mov
push
add
jo
test
loopne
adc
add
push
shl
out
roll
mov
push
orb
cwtl
aad
adcb
fldcw
and
or
jmp
or
add
adc
ret
cmp
jp
ljmp
mov
fcoml
loope
cs
adc
and
and
fldenv
call
xchg
sbb
push
or
adcl
cmp
lret
les
mov
add
cmp
incl
mov
pusha
push
push
xchg
cmp
mov
or
mov
scas
fadd
add
add
pop
xlat
leave
movsb
or
aam
popa
or
in
clc
mov
and
add
aas
adc
adc
out
and
loopne
popf
pusha
pop
or
jecxz
icebp
pop
inc
jmp
or
or
cmpl
mov
or
stc
dec
lods
in
inc
fistl
loop
or
sbb
add
cltd
mov
push
std
pushl
add
mov
rcrl
out
adcb
push
pop
xchg
add
push
or
add
dec
loop
movsl
dec
mov
inc
mov
add
test
add
mov
call
mov
inc
push
xor
icebp
cmp
shlb
adc
or
ja
inc
decl
cmp
push
pusha
add
mov
movsl
jmp
sub
cmpsl
clc
add
aad
call
xor
rol
loope
inc
rolw
sbb
imul
jae
and
push
jo
mov
stos
add
and
stos
push
enter
js
inc
lcall
xchg
sub
xlat
movsb
pop
scas
fldcw
inc
and
rolb
pop
pusha
mov
fmull
xchg
cwtl
adc
cs
or
test
mov
roll
adc
cltd
fnsave
adc
adc
xchg
fldl
adc
test
xchg
and
jmp
mov
pusha
add
movsb
daa
jmp
add
outsb
std
pop
ss
add
aas
das
scas
and
push
shrl
add
dec
mov
andb
jmp
test
inc
and
cmpsb
pop
fcoms
sarl
xor
inc
cmp
xchg
cmp
or
pop
mov
loope
add
or
cmp
loopne
adc
jae
ss
fnstenv
std
jmp
bound
cs
aaa
loopne
pop
sbbb
mov
addb
mov
push
dec
cltd
cli
aam
or
xchg
mov
aam
jle
dec
out
andb
popf
mov
add
sbb
testb
and
cs
ljmp
push
shlb
mov
loope
xchg
aas
les
adc
push
shrl
fld
insb
jl
or
inc
pop
int3
incl
andb
pop
lods
sub
std
push
rol
aaa
jo
ret
cmp
jg
idiv
lock
pop
push
stos
imul
push
cld
std
add
jo
addb
cs
and
pop
or
adc
loopne
ficoms
aaa
xchg
test
fdivl
insb
popaw
nop
add
cwtl
cmpsl
ret
out
and
frstor
jl
std
pop
aam
aas
pop
loopne
shrb
dec
jp
pusha
mov
inc
pop
push
xor
rclb
xchg
xchg
jg
decb
nop
pop
mov
mov
and
xor
pusha
push
scas
clc
mov
movsb
lock
ljmp
test
test
std
fwait
or
andb
sub
and
pop
jle
nop
pop
pushf
sub
and
mov
movsb
and
add
adc
push
jp
add
sbb
mov
inc
or
xor
jmp
jno
nop
js
add
loopne
cmp
out
xlat
adc
in
incl
lret
xor
aaa
movsb
and
call
push
rolb
inc
vpunpcklwd
adc
xorb
fdivrs
lret
push
out
lcall
add
pop
or
call
imul
movsb
mov
or
add
das
add
mov
lods
outsl
and
adc
je
push
insb
test
pop
stos
mov
fists
dec
sbb
movsb
aam
das
adc
adc
add
movsl
lock
out
sti
movsb
fists
sar
pop
dec
or
mov
jmp
xchg
out
push
testb
fists
stc
push
sub
add
movsl
aam
mov
inc
add
lds
pop
pop
cmp
jo
pop
addl
flds
clc
out
shlb
sti
imulb
xor
cmp
test
mov
mov
jmp
lods
pop
mov
jo
cmp
inc
fcomps
pop
rcl
cltd
popf
xchg
imul
xchg
or
subb
jg
push
ss
fwait
push
add
pushf
adc
addr16
pushf
add
jmp
adc
fldcw
dec
leave
jno
lret
xor
and
hlt
pop
pop
add
cmp
ss
inc
xor
add
loopne
shrb
jp
mov
rorb
pop
cltd
leave
outsl
sbb
sbb
sub
shrl
xor
add
add
dec
shrl
daa
jb
stos
pushl
mov
adc
xorb
popa
sarb
xlat
sbb
xchg
inc
cli
in
jb
or
cmp
pop
movsl
mov
adc
push
push
test
mov
fbld
push
mov
rcrb
mov
movb
dec
cmp
int
fiadds
push
adc
hlt
xor
fsub
nop
movsb
fdivr
incl
loopne
adc
rclb
popf
cmc
rorl
cmp
add
call
push
dec
push
sub
pusha
sub
mov
clc
cmp
jo
adc
inc
nop
xor
sbb
jl
jb
pop
dec
inc
cmc
sub
mov
inc
push
add
ret
and
jl
in
fidivs
cmp
insl
stc
inc
imul
add
push
pop
adcl
cld
mov
add
addb
add
adc
jg
pushl
add
fldcw
mov
push
pusha
push
popf
xchg
hlt
call
lock
nop
popa
xchg
pop
leave
inc
push
popf
loop
push
jg
adc
cmp
xor
clc
pop
xor
adc
dec
int
in
inc
cs
lods
xchg
ss
sbb
or
scas
or
push
inc
andl
cwtl
inc
lahf
add
lds
call
push
cmc
mov
push
jbe
add
pop
loope
or
jno
int
and
nop
xor
in
pusha
aaa
jae
cmp
cltd
fmull
add
pop
push
loopne
xchg
icebp
dec
ljmp
adc
cmp
adc
lock
adc
mov
add
lock
cmpb
jo
push
mov
xchg
jno
push
ja
xor
or
add
mov
xchg
popf
mov
dec
rcrb
mov
leave
inc
add
xchg
xchg
fwait
cmp
data16
sub
test
push
rcl
mov
mov
jo
adc
xor
in
rol
pop
add
and
adc
pop
mov
or
xor
cmp
push
mov
adcl
pusha
pop
fsubp
dec
lcall
rol
inc
xor
adc
fisubs
insl
cli
or
lock
inc
inc
cli
push
movsl
add
mov
add
das
ficompl
adc
sbb
push
push
pop
sbb
loop
in
sbb
sub
vfrczps
ljmp
or
jl
decl
mov
dec
mov
orl
jo
pop
jo
mov
int3
mov
xor
xchg
rol
outsb
xchg
mov
add
push
leave
mov
push
test
push
sarb
adcl
fbstp
add
dec
and
pusha
mov
xor
sbb
add
test
xchg
pop
iret
loop
loopne
mov
add
roll
and
pop
xchg
dec
aad
add
lret
fs
add
and
jno
mov
nop
and
rorb
nop
adc
es
or
jmp
sti
scas
add
adc
push
mov
cmp
lock
mov
add
enter
jo
cmp
dec
nop
dec
pop
xchg
rcrl
add
std
jne
ficompl
add
push
orb
movsb
sub
fisubrs
pop
pusha
aad
lods
sub
cltd
outsl
fildl
leave
mov
loopne
add
cmp
sbbb
push
negb
push
mov
or
fiaddl
loopne
pusha
pop
js
cmpl
add
xor
add
outsl
and
movsl
xor
mov
mov
jle
aas
std
flds
mov
cmp
adcl
cmpb
cs
or
push
sbb
xchg
dec
pop
lods
mov
jp
sub
xchg
or
aaa
jnp
pop
add
xchg
push
dec
add
mov
inc
pop
orb
adc
mov
pop
scas
popf
mov
andl
leave
cmpsb
into
add
fwait
dec
leave
xchg
addl
les
or
andb
pop
xor
popf
mov
push
subb
iret
mov
loopne
rclb
mov
xor
pop
inc
sub
push
ficoml
cmp
push
add
aam
loop
sahf
and
mov
add
cmpb
add
test
sbb
add
setl
stc
push
mov
icebp
jp
mov
imul
lea
sbb
push
add
aad
movsb
stos
cs
mov
ljmp
movsb
mov
jecxz
pop
xlat
adc
ret
cmpsb
aad
add
cmp
pop
subl
cld
pop
loopne
cmp
lret
addl
in
filds
mov
adc
aad
shlb
xchg
pop
adcb
push
or
and
cmpb
cmpsb
fisttpll
imul
sub
and
mov
out
les
fnstsw
add
roll
or
aam
adc
push
jmp
pop
xchg
adc
cmpl
xchg
out
call
in
mov
in
addr16
rolb
sbbb
fiaddl
fbstp
xor
sahf
movsb
adc
sahf
js
sbb
movsb
cmp
cmpb
outsl
push
sub
stos
add
xchg
js
jno
mov
cmpsb
fbld
add
xchg
andb
mov
insl
inc
outsl
xchg
movsl
xchg
cmp
cs
lock
push
and
adc
inc
je
and
jge
and
inc
mov
test
pop
add
enter
rol
lea
jp
pop
test
outsl
nop
pop
cmpsb
mov
mov
inc
add
in
rclb
add
movsb
ret
fimuls
and
and
pusha
mov
mov
adc
mov
call
mov
loope
pushf
pop
or
add
mov
hlt
inc
dec
sub
mov
adc
and
cwtl
ret
xchg
fiadds
pop
pop
mov
cmp
outsb
cmp
xlat
fisubrl
cmp
inc
sub
xorb
sbb
push
push
lods
xchg
sbb
lods
xchg
loop
mov
es
sub
push
push
sub
rorl
sub
ljmp
out
fs
sbb
cmp
test
xor
push
cmp
cmp
add
mov
add
orb
hlt
arpl
in
push
shlb
or
shr
add
add
adc
pop
fldt
loop
push
and
movsb
aam
inc
aad
fadds
cmp
outsb
shrb
jge
xchg
cmp
push
call
fildl
fsubs
aas
loope
daa
xchg
push
or
std
aam
lods
add
jb
and
xchg
cmp
xlat
mov
fisubs
or
pop
test
adc
and
mov
push
cs
or
add
push
add
loopne
fucomip
mov
pop
push
adc
pusha
and
and
xorb
cmp
push
pop
aad
dec
cli
shrl
stos
fisttps
sbb
idivl
aam
adc
std
aam
pop
cltd
cs
nop
pop
aad
sbb
mov
xchg
cli
popf
fisubrl
jmp
cltd
orl
aad
mov
in
sbb
jecxz
xor
ret
shl
mov
data16
inc
loope
int
xchg
cmp
in
aaa
sbb
sub
dec
mov
notl
adc
xor
fmul
sub
xchg
dec
cld
mov
test
movsb
repnz
mov
fstl
inc
mov
std
rclb
push
or
jno
incl
pushf
frstor
adc
push
adc
add
pop
cmp
shlb
push
xchg
mov
mov
add
cmp
aad
or
push
adc
fstpt
adc
lahf
repnz
nop
mov
sub
jmp
mov
mov
and
pop
faddl
mov
adc
les
dec
data16
aaa
mov
sub
xchg
add
sub
mov
add
test
outsb
popa
add
fistpl
or
cld
add
into
push
jmp
inc
jmp
rolb
loopne
and
daa
and
and
inc
call
cs
in
lcall
mov
nop
movsl
xchg
pop
int3
mov
add
and
cmp
les
testl
cltd
or
in
mov
cmp
rclb
push
call
mov
mov
pop
lcall
decb
mov
rcl
movsb
and
adc
rclb
insb
fdivrs
xchg
adcb
xor
mov
fcmovnu
xor
adcl
xor
mov
mov
mov
mov
xchg
fstps
aad
shll
pop
test
shll
mov
lret
dec
test
pop
cwtl
mov
and
stos
cwtl
loopne
outsl
ja
aad
fdivl
or
addb
inc
or
les
pop
xlat
jns
sub
outsb
out
jns
call
sub
inc
push
add
cli
mov
cmpsl
fldl
xchg
cli
fstpt
pop
adc
mov
jne
cmp
jo
iret
or
add
mov
xor
cs
push
cld
jg
xlat
rorl
mov
mov
call
pop
cmp
mov
push
or
cmp
rolb
call
ret
mov
inc
rclb
mov
mov
data16
and
dec
mov
adcb
mov
xor
shrb
xchg
or
push
cmp
push
sahf
movsb
and
sub
xchg
jbe
adc
stos
pusha
pop
lock
cwtl
ljmp
dec
cmp
sbb
mov
pop
sbb
and
cmp
in
movsl
and
mov
ljmp
adc
in
and
mov
cmp
lods
addl
call
sar
ficoms
pop
test
dec
push
add
cmp
jb
rolb
out
pop
movsb
inc
outsb
and
xor
lea
xor
dec
je
cmp
or
push
jno
je
lock
mov
aam
push
and
adc
out
and
outsb
subb
fmull
jecxz
inc
sub
or
jp
outsl
fdiv
mov
sub
gs
add
popa
pop
pop
fs
or
xor
cwtl
push
push
xor
sub
add
imul
incl
lcall
add
sbb
call
adc
imulb
xchg
decb
mov
lea
call
jg
push
adc
cmc
enter
jecxz
les
sbb
test
pop
insb
outsb
xlat
fstl
or
leave
adc
shlb
das
ljmp
cs
push
cld
loopne
mov
ss
mov
out
xor
or
and
popa
adc
idiv
incl
arpl
mov
or
andl
lock
insb
push
fidivs
xchg
les
or
push
clc
mov
xor
fsubr
pop
insb
dec
mov
mov
or
cmp
dec
push
add
add
push
add
mov
xchg
mov
add
sub
pmulhw
mov
adc
call
mov
adc
xchg
add
rcrb
std
movsb
addl
addl
jecxz
add
dec
loopne
add
sub
fstl
insl
loopne
cmp
cld
popl
call
daa
push
cmp
jecxz
push
push
sbb
mov
push
inc
dec
pusha
or
and
stos
aad
fmull
cmp
mov
out
test
out
incb
shll
and
movsl
mov
push
sbbb
jmp
and
cmp
mov
pop
js
ljmp
cmpsb
and
add
movsl
xchg
mov
dec
sar
sbb
ljmp
xchg
test
push
add
adc
stos
sub
mov
xchg
enter
cmp
rclb
xor
cmp
dec
scas
inc
sbb
orl
loopne
sbb
or
and
gs
push
cmp
and
pop
icebp
call
push
les
or
or
jb
dec
xchg
fnsave
adc
shll
fnstsw
lds
inc
or
mov
addb
int3
in
faddl
scas
adc
mov
sbb
outsl
sub
cld
jge
rolb
pop
hlt
mov
cmp
sbb
mov
movsl
add
lods
add
jb
mov
ljmp
inc
int3
inc
icebp
fildl
cld
add
adc
add
enter
adc
pop
hlt
xlat
pop
xchg
int3
mov
jo
adc
int
mov
lods
xor
mov
stc
push
test
pop
pushf
lods
adc
add
fidivrl
repnz
int3
pushf
ret
rclb
sbb
sbb
push
std
adc
cwtl
bound
push
add
mov
stos
ss
xchg
add
pop
sar
jo
push
lods
cmp
je
cmp
add
adc
push
sbb
adc
adc
mov
in
add
xor
sub
xor
add
inc
icebp
cmpsb
sbb
xchg
push
ljmp
xor
mov
inc
dec
lock
sub
cmp
xlat
add
fsubrs
push
aam
outsl
push
fcmovnu
push
fiadds
jbe
or
jne
xchg
jecxz
je
push
cmp
in
dec
add
jns
dec
and
fiadds
pushf
call
mov
push
cmp
addb
js
mov
push
rolb
add
loopne
mov
push
ret
sub
xor
add
sbb
inc
aaa
hlt
mov
sbb
cld
int
sbb
or
test
shll
mov
std
jno
and
cmp
xor
xchg
fnop
sub
cmp
xchg
adc
jbe
mov
mov
pop
sub
faddl
lcall
cli
loop,pn
adc
pop
loopne
dec
rolb
rclb
call
inc
sub
fnsave
sbb
cs
add
jbe
negb
and
adc
adc
jmp
adc
mov
jno
pusha
inc
mov
mov
cmp
adc
adc
incl
lds
sbb
andl
xchg
leave
idiv
cmpsb
dec
call
sbbl
push
xchg
and
int3
add
negb
jne
sar
push
push
push
orl
add
int
mov
adc
nop
add
aam
lcall
push
xchg
stc
mov
into
add
sub
ljmp
sbbb
std
and
mov
sub
push
ffree
sub
cld
inc
push
in
stos
inc
movsb
pop
xchg
xchg
sarb
inc
mov
incl
add
push
xor
mov
cmc
das
mov
mov
sbb
lock
cmp
jge
sbb
pop
es
mov
andb
xchg
mov
sarl
loope
cmp
shl
adc
mov
sbb
cli
test
adcl
add
xchg
loopne
add
jecxz
bound
lods
shll
in
and
cli
or
or
out
mov
push
rcrb
sub
cltd
ret
subb
jo
shr
bound
adc
sbb
lds
fwait
adc
hlt
test
aas
roll
push
mov
push
fmuls
adcb
std
adc
xor
call
jb
cmc
outsb
fs
imul
shlb
add
sbb
sahf
xchg
rorb
mov
movsl
cld
movsb
push
sbb
insb
xor
fnstcw
inc
adc
outsl
add
pop
xchg
dec
fisubrl
pop
add
add
adc
movsl
adc
fucom
shrl
incb
dec
dec
mov
call
push
in
jmp
cmp
hlt
das
test
mov
ds
mov
sub
rcrb
nop
adc
adcb
insb
xor
test
in
pop
pop
cltd
mov
sub
test
sbb
pop
sarb
das
js
int
and
cltd
movsl
mov
fdivrl
pop
inc
adc
inc
cmp
push
lods
cs
pop
ja
adc
cmp
gs
gs
clc
dec
pusha
add
inc
mov
sbb
fistl
mov
sbb
add
data16
mov
shrl
rclb
std
inc
loope
sub
shrb
cltd
cmp
adc
cmc
or
add
jmp
xchg
flds
test
clc
pop
jo
push
js
or
inc
push
cmpsl
sbb
and
mov
cld
pcmpgtd
pop
loop
lods
test
add
mov
mov
pop
mov
stc
add
sbb
mov
inc
xchg
mov
cmc
nop
or
mov
mov
pop
push
out
push
daa
cmp
or
adc
sub
cmp
push
sbb
inc
sarb
jecxz
mov
mov
sbbb
jge
testl
cld
sub
scas
nop
and
push
mov
mov
jmp
or
mov
inc
jg
add
sbb
mov
movsl
adc
sbb
cmpb
or
idiv
aaa
icebp
les
sbb
lcall
cmp
lock
pop
mov
test
push
add
push
or
scas
or
pop
jecxz
push
inc
pop
aam
ljmp
jp
dec
lret
add
pop
push
pop
rolb
std
pop
popf
and
dec
dec
fs
cmp
sahf
dec
sahf
or
add
inc
sahf
les
and
js
push
rcl
or
mov
or
shr
pop
lods
fldt
stc
cmp
addl
pop
xchg
stc
insb
pop
adc
std
push
addb
rol
rcrb
loopne
or
clc
add
add
clc
je
push
subb
test
fsubs
ja
cmp
loope
push
mov
pop
and
adc
sub
aam
sbb
push
ljmp
mov
sub
add
adcb
sbb
inc
shlb
stos
pop
in
pusha
jb
xlat
push
stos
les
into
mov
pop
pop
push
ret
test
mov
xchg
subb
aam
xchg
mov
adc
cs
inc
pop
and
add
bnd
add
jg
dec
cmp
insl
inc
dec
inc
inc
dec
mov
fisubrl
cmp
fs
mov
movsb
sbbb
mov
add
ret
add
sahf
xchg
push
shll
sub
pop
add
cld
outsl
and
adc
fst
cmp
inc
sbb
pop
mov
out
loopne
mov
or
es
and
mov
les
xor
sbbb
addb
adc
js
jbe
andb
and
push
ffree
add
or
mov
mov
incl
pop
pop
and
or
push
xchg
aad
test
frstor
mov
mov
mov
loopne
or
sbb
inc
mov
inc
insl
loopne
aad
pop
and
dec
stos
dec
push
xor
pop
lcall
leave
jg
rclb
or
xchg
cs
ficompl
mov
pop
or
mov
pop
sub
idivb
sbb
js
add
xchg
add
cltd
test
or
and
aaa
cmp
xchg
sub
xor
push
sbb
mov
loop
xor
insb
fisubs
ret
sbb
and
add
inc
push
sbb
cmp
pusha
sbb
subb
rolb
push
shlb
pop
jo
dec
repnz
sbb
push
inc
decl
pop
adc
mov
add
sbb
sbb
in
sbb
or
shll
fxch
stos
mov
mov
jmp
or
add
sbb
adc
pop
mov
cmp
or
icebp
mov
test
xchg
or
gs
xor
push
push
mov
aam
push
pop
pop
mov
push
and
roll
popa
and
mov
add
hlt
scas
push
test
icebp
pusha
jb
xor
cmp
addl
cmp
or
mov
or
pusha
roll
xchg
inc
mov
add
mov
call
cli
mov
add
pop
scas
aad
pop
test
aaa
mov
cmp
cmp
shrb
mov
aaa
inc
mov
add
shll
mov
ss
mov
mov
push
add
sub
in
nop
int3
push
mov
sbb
aas
arpl
inc
sti
hlt
add
mov
aam
loope
int
ss
incl
xchg
cwtl
out
dec
cmp
rorl
loopne
and
pop
and
xor
dec
mov
mov
inc
pop
xchg
and
ror
daa
xchg
lock
pusha
jno
add
sub
pop
fs
push
rolb
bound
dec
push
add
repnz
mov
sbb
or
fcomip
fstpt
loope
xchg
and
int
jl
clc
inc
add
popa
insb
bound
jg
andb
push
add
jno
push
add
out
add
pop
pop
setns
ret
xorl
pop
xor
lods
call
sub
dec
in
inc
cmp
lcall
sub
sbb
add
add
push
and
in
and
in
call
and
push
mov
cmp
es
pusha
sbb
or
and
std
das
cmpsb
mov
jmp
lock
sub
cmpsb
inc
or
pop
mov
cmp
ret
je
jg
jo
push
movsl
push
sub
rcrb
mov
mov
ret
adc
mov
ljmp
pop
ret
icebp
pop
addb
adc
inc
rolb
push
push
mov
xor
jp
nop
sbb
push
and
sahf
scas
add
jno
test
add
sub
push
shrb
add
das
push
fdivrs
push
rorl
sub
and
and
aam
rcll
push
stc
inc
lcall
mov
std
mov
rolb
jo
xchg
or
pop
std
adc
stos
fiadds
xchg
nop
lods
xor
pop
test
add
mov
ficoms
rorb
sbb
sbbl
stos
or
test
mov
repnz
push
pusha
cmp
les
cmp
jo
clc
push
test
rorl
pop
sub
add
sarl
mov
enter
cmp
popa
add
dec
adc
sahf
lahf
mov
mov
std
cmpsl
in
rorb
scas
or
and
cli
fst
lcall
cmp
pop
mov
cwtl
pop
adc
jmp
mov
mov
push
xorb
push
sbb
ljmp
xchg
inc
mov
insb
shll
mov
xor
outsl
cli
add
popf
jno
sub
and
test
movsb
ret
pop
fimull
cs
push
add
jp
mov
fs
jp
mov
mov
xchg
dec
add
adc
cs
push
mov
or
xchg
mov
lock
add
push
add
lods
call
ljmp
jg
xchg
mov
push
enter
dec
mov
testb
cmpsl
cmp
inc
and
lock
dec
std
or
and
cmpsl
cmp
or
cmp
jno
or
mov
rorl
jecxz
inc
pushl
add
pop
shlb
andb
scas
sub
and
cmp
xor
lods
roll
scas
pop
mov
int3
mov
mov
sbb
xor
mov
mov
test
rcrl
les
or
cmp
mov
fistpll
movsl
mov
mov
lods
add
call
fdivp
inc
add
fwait
inc
aad
cmp
mov
mov
xor
sbb
cmp
xchg
insl
pusha
mov
mov
add
add
adc
push
outsb
inc
aam
push
std
xchg
rorl
mov
scas
cmp
mov
flds
push
xchg
jg
mov
sub
and
jns
fists
insb
cli
sahf
sbbl
mov
or
pop
push
pop
loopne
xorl
mov
mov
or
test
adc
adcl
cmc
sub
push
test
imul
mov
xor
or
das
xor
push
fucom
mov
mov
cs
and
lcall
fidivrs
scas
jne
lock
loope
daa
or
adc
xor
inc
outsl
pop
rclb
pop
sbb
call
js
fsts
rcr
push
pop
cltd
mov
int3
cmp
ljmp
mov
popa
adc
mov
shll
addb
add
nop
pop
sub
add
mov
sbb
xchg
and
mov
sarb
cmc
mov
push
shlb
mov
pop
push
mov
stos
test
mov
add
or
cld
push
ret
add
inc
cltd
inc
add
shlb
insb
xor
call
add
cld
pop
mov
sti
fsts
rolb
pop
mov
aad
push
int
incl
cld
sbb
adc
mov
jl
mov
sbb
int
inc
lds
add
adcb
aam
rolb
mov
aad
adc
lea
js
jle
cmp
xor
jp
pop
ljmp
negb
icebp
or
sbb
cmp
and
loopne
push
ss
adc
sbb
pop
lock
shll
cmp
lds
xchg
sahf
cld
pop
adc
lea
mov
cmp
jmp
add
xchg
add
es
jo
xor
cmp
inc
pop
jmp
jmp
inc
rorl
mov
test
xchg
xchg
aam
xor
xchg
scas
mov
fs
das
xor
mov
sub
in
and
mov
cmp
inc
movsl
ficompl
cmp
loop
out
sbb
pop
ss
aam
andb
outsl
adc
inc
aas
fwait
xchg
push
pusha
push
jns
sbb
xchg
or
mov
mov
mov
cmp
add
loop
in
orb
cmp
add
sub
loop
cmp
and
pop
ret
outsl
sbb
cmc
cld
add
cmp
add
shll
out
addb
cmp
and
pop
dec
cltd
add
sahf
movsl
jo
dec
sbb
mov
pop
dec
rcrl
test
adc
mov
incl
enter
mov
xor
sarl
or
adc
inc
dec
add
add
xor
lcall
and
or
mov
loop
mov
adc
add
pop
lods
mov
mov
aad
insb
mov
rorl
add
add
fildl
sbb
add
inc
adc
pop
mov
je
adc
call
push
pushf
mov
es
xchg
push
sbb
lds
add
sbb
pop
icebp
sub
push
add
xor
xchg
sbbl
sar
adc
outsb
loopne
lahf
sub
cmp
add
mov
lods
mov
push
lea
cmp
sbb
sarb
jp
clc
es
inc
lret
add
clc
sub
dec
pop
xchg
dec
arpl
fidivrl
xor
aad
cmpsb
or
and
xor
mov
shlb
jmp
fcmovu
xorb
orb
and
push
dec
aaa
add
xlat
stos
push
pop
xchg
mov
sub
adc
mov
fldl
int3
andb
push
mov
sbbb
or
dec
test
add
nop
aam
cs
rcll
xorb
adc
test
or
jle
cwtl
add
adcl
out
imul
xorb
xor
dec
push
sbb
push
xchg
pop
jmp
add
fstl
add
inc
sub
add
into
jmp
jg
test
cltd
jmp
or
fidivs
or
jo
pop
subb
mov
in
lcall
roll
add
xor
sarb
add
jg
mov
adc
pop
mov
cmp
enter
popa
inc
or
adc
ja
push
add
cmp
and
movb
mov
loop
shlb
rolb
add
in
outsb
push
add
inc
xchg
inc
pusha
push
pop
fs
add
or
push
inc
mov
add
outsl
adc
push
cmp
mov
call
bound
pop
or
mov
push
bound
flds
clc
mov
sub
adcb
push
daa
dec
call
rclb
sti
mov
inc
and
add
sub
movl
pop
dec
aam
push
inc
sbb
mov
add
pop
and
pop
and
aad
dec
inc
or
add
sbb
ret
push
push
inc
sbb
pop
imul
int3
pop
xchg
fisttps
and
sub
mov
xchg
add
imulb
mov
cld
popa
adc
inc
xor
fwait
dec
or
cmp
movsb
push
pop
mov
jge
fs
ret
jl
cmp
pop
pop
cwtl
mov
push
sahf
inc
roll
mov
sbb
rol
sub
dec
or
fcoms
adc
adc
cmp
incl
shl
mov
sbb
hlt
sub
fadds
xor
mov
adc
or
xchg
rcrl
ficoms
ret
pop
cs
and
add
jg
inc
push
cmp
es
add
je
mov
mov
std
inc
xor
dec
push
or
mov
outsl
sarb
jge
add
inc
push
or
jp
push
outsl
push
add
aaa
jge
inc
mov
pop
mov
add
loope
sbb
popa
add
push
cmc
mov
test
shlb
popa
inc
mov
fiaddl
and
insb
and
xor
mov
adc
inc
push
mov
pop
in
jne
jg
pushf
cmp
das
add
or
push
insl
sti
pop
jl
pop
fs
and
push
int
cmp
cmp
jne
bound
inc
insl
and
leave
cmpb
fists
and
inc
ficomps
inc
and
shll
and
and
push
addb
mov
xchg
gs
pop
cmp
loopne
clc
stos
lods
sub
add
orb
das
mov
and
push
sbbl
shlb
rcll
cltd
lea
sub
add
cmp
mov
xchg
movsb
lret
in
es
int
pop
jno
push
in
xor
das
notb
push
scas
ja
fisttps
int3
roll
call
pop
fs
call
jecxz
pop
inc
or
loopne
inc
sub
pop
cmpsl
jl
sub
pop
sub
lret
add
jge
dec
mov
dec
repnz
addb
push
orb
data16
dec
shlb
in
mov
and
jmp
pusha
inc
imul
aad
inc
mov
mov
inc
sbb
xchg
cmpsb
add
loope
andl
shll
adc
sub
xchg
aad
popa
mov
aam
pop
push
ljmp
mov
pop
mov
test
inc
jge
adcl
aam
add
sbb
lcall
ret
jb
sub
pop
mov
pusha
pop
jecxz
repnz
nop
push
ret
pop
movsb
gs
loopne
or
and
jae
std
mov
shlb
loopne
fs
dec
rcrl
js
pusha
fldt
rorl
mov
add
shll
lock
into
push
adc
cmp
adcb
inc
pop
test
sub
cltd
add
pop
push
roll
xorb
outsb
jl
cs
cmp
bound
subb
fs
pusha
sub
xor
add
hlt
jbe
jo
cmp
pop
movsb
add
out
mov
lcall
in
mov
cmp
adcb
outsl
inc
adc
pop
cmp
push
fwait
mov
and
pop
adc
imul
out
add
sub
neg
stos
and
frstor
call
dec
addb
gs
inc
add
das
sbb
adc
das
adc
or
movsb
mov
and
inc
and
pop
outsb
nop
jo
add
movsl
push
sbb
ret
xor
jl
roll
add
out
push
push
inc
clc
loop
decl
and
sbb
pop
addl
push
or
mov
cmp
enter
jp
out
repnz
adc
pop
pop
add
and
adc
insl
imul
addb
sarb
scas
push
mov
pop
fadd
and
dec
xor
lock
add
push
lea
xor
sub
addb
add
stos
xor
and
mov
and
out
inc
dec
sbb
pop
movsb
faddl
or
xor
cmpb
aad
dec
imul
mov
add
dec
push
ljmp
mov
add
add
pushf
add
cmp
push
shll
sarb
movsl
push
sub
inc
add
nop
sbb
sti
inc
adc
inc
cmp
mov
and
adc
inc
inc
jno
adc
jecxz
add
mov
das
cmpsb
incb
add
inc
fwait
pop
das
cmp
xor
outsl
jg
stos
lods
or
mov
xor
and
cmp
lock
decl
movsb
add
mov
xchg
add
push
cli
outsl
out
mov
ljmp
push
push
add
rcrb
call
add
push
ficoml
incl
push
mov
cmp
ljmp
push
adc
push
lahf
fcoml
lahf
cmp
stos
aam
mov
in
mov
xorb
aaa
cmp
and
mulb
push
daa
pop
xor
jo
push
and
adc
test
imul
inc
or
incb
xchg
daa
xchg
jmp
pop
subb
sbb
and
and
cmp
mov
es
sub
repz
or
sub
jle
push
pop
and
xchg
shl
inc
rcll
cmp
ficoml
pop
rorl
lcall
xor
and
fsts
xor
fiaddl
adc
or
jmp
mov
das
add
ficoms
push
popa
pop
mov
xchg
clc
jmp
adc
push
in
add
sub
fists
mov
scas
pop
cmp
loop
xchg
xchg
adc
mov
and
jno
mov
loop
ds
mov
scas
aam
cmp
ljmp
mov
ss
jno
addb
addb
jb
fcomi
dec
movsl
push
jo
mov
mov
adc
sti
sub
cmpsl
inc
push
inc
jb
adc
out
pop
mov
pop
cld
jle
cmp
xchg
adc
dec
sbb
push
and
xor
fisttps
xchg
sub
xchg
sar
rcr
and
dec
loop
movsb
fldl
adc
sub
sbb
pusha
mov
loop
sub
ljmp
xchg
pop
cmpb
icebp
push
adc
lea
add
stos
adc
or
lock
cli
mov
mov
xor
xor
cmp
mov
fbld
ret
xor
cld
outsl
jg
push
mov
mov
fxch
and
xor
xor
mov
cmp
movsb
dec
and
xchg
add
push
bound
inc
sub
loope
and
imul
loope
fcomps
rcr
jg
cld
mov
push
and
sbb
and
add
push
and
hlt
add
sbb
xor
sbb
loope
ss
adc
and
xor
mov
xor
inc
sub
sbb
mov
pop
dec
cld
push
add
fisubrs
mov
or
sub
scas
mov
pusha
push
fmull
mov
pop
xchg
clc
call
add
adc
jecxz
pop
test
push
sbb
andb
aad
das
inc
xchg
push
test
shlb
push
xor
jp
mov
testb
xlat
loop
js
add
and
rcrb
outsl
jbe
sbbb
shlb
sarl
popa
loopne
addl
repnz
fldcw
loopne
inc
loopne
mov
add
jno
mov
pop
push
adc
cmp
mov
mov
daa
movsb
mov
jo
fsubs
add
fisttps
jle
fs
mov
addl
xchg
jmp
mov
adc
andl
in
adc
inc
rorb
imul
and
sbb
lock
push
adcl
ret
pusha
flds
xchg
add
cs
inc
loopne
scas
cmpb
out
inc
out
adc
jg
and
je
xchg
and
pop
movsb
popa
lock
shrl
outsb
xor
into
pop
test
frstor
push
out
mov
sarb
test
mov
mov
dec
push
lods
mov
and
xchg
sbb
mulb
add
xchg
pop
call
mov
mov
cli
shr
add
scas
lcall
test
mov
push
add
scas
lret
pop
sub
mov
filds
shrb
xor
int
iret
push
cs
cmp
in
decl
mov
rcrb
xor
jo
sub
cmp
xor
jo
lcall
dec
lock
roll
cmp
xchg
scas
addb
adc
scas
mov
xchg
icebp
adc
aaa
loopne
pop
scas
lods
jle
fstpt
mov
sbb
filds
and
adc
mov
clc
das
clc
outsb
adc
inc
add
inc
xchg
pushf
inc
ret
aam
je
xchg
xor
ficoml
push
scas
xchg
xorb
sar
scas
push
inc
inc
xor
push
in
jno
xchg
loopne
push
push
push
mov
aad
lahf
mov
loopne
jl
inc
jno
or
outsl
in
xchg
aam
sbb
jae
sub
jge
or
mov
pusha
add
adc
cwtl
and
or
je
cmp
test
push
jo
lret
add
mov
or
or
gs
push
add
loopne
push
push
pop
cmp
dec
rolb
loop
add
dec
insl
cs
rolb
pop
dec
mov
xchg
stc
sbb
xlat
pop
xchg
push
sub
mov
xor
adc
or
xchg
mov
cmp
lock
enter
ja
sub
add
jle
push
inc
leave
inc
push
nop
adc
mov
fmuls
je
test
lahf
add
popf
push
push
ja
int3
je
iret
pop
add
mov
and
sahf
rcr
add
lods
lds
xchg
addl
sahf
cwtl
xchg
mov
mov
adc
sbb
fimuls
loop
add
roll
xor
cs
into
push
scas
icebp
and
icebp
mov
push
scas
repz
add
and
and
lahf
cmc
push
lds
pop
sbb
push
add
mov
lods
mov
movsb
ficomps
shrb
addb
cmpsl
push
shrb
xchg
cmc
addb
jle
add
orb
add
pop
rolb
pusha
movsb
std
or
roll
in
cmpsb
movsb
cmp
andb
daa
mov
inc
xorb
xchg
or
xor
push
test
pushl
cwtl
sbbb
lahf
cmpb
cmpl
lock
xor
pusha
aam
movsb
fcoms
and
test
push
shrb
ret
gs
int
ss
data16
test
xchg
sub
and
inc
add
fdivs
clc
push
inc
imul
inc
arpl
mov
inc
mov
ret
xchg
aad
filds
xchg
and
fbstp
inc
fs
arpl
arpl
xchg
adc
pop
ficompl
sub
mov
es
ret
lcall
lds
inc
nop
or
inc
clts
arpl
orb
and
and
dec
adc
sub
dec
rclb
divb
movsb
lods
shll
in
sbb
jae
or
mov
rclb
add
cli
nop
pop
sbb
xchg
pop
inc
std
stos
mov
and
mov
sub
test
xchg
pop
jg
jecxz
xchg
and
add
cmp
in
pop
mov
shll
dec
hlt
mov
add
mov
pop
popf
rcl
sub
adc
push
inc
cld
in
adc
pop
adc
movsb
and
outsl
add
mov
int3
add
sahf
hlt
outsl
mov
sbb
add
pop
xchg
add
push
bound
fldl
adc
adc
shr
cmpsb
cmp
mov
cmp
pusha
jno
shlb
aad
incb
push
mov
sarl
repz
inc
xchg
call
pusha
subb
adc
cmpb
in
inc
enter
hlt
push
out
popa
push
fisttpl
or
andl
movsl
pusha
cmp
xchg
push
and
xor
pop
pusha
icebp
outsb
cli
mov
adc
sub
add
push
xchg
sar
inc
push
rolb
sbb
adc
ret
adc
sti
call
jecxz
or
inc
inc
inc
add
mov
roll
sub
lret
or
insl
add
adc
xor
add
sbb
sar
adc
es
cli
or
mov
in
fneni(8087
add
test
or
pop
andb
and
mov
adcb
lock
add
data16
test
fnstcw
push
movsl
push
add
sub
xor
rolb
mov
inc
jecxz
decl
jae
pop
mov
pop
add
pop
mov
mov
rol
movsb
pop
mov
pop
cs
test
cmp
subl
inc
sub
jmp
ds
mov
jmp
or
dec
gs
test
and
data16
mov
fldln2
loopne
xor
lret
cmp
pop
and
std
add
ljmp
pop
xchg
sar
jmp
or
cli
pushf
leave
and
push
xor
inc
ja
dec
push
ds
xchg
fimuls
rorb
and
int
inc
add
pusha
push
loopne
add
out
sahf
adc
pop
pusha
int
and
sti
jnp
sub
mov
fadds
fadds
stos
fcomps
dec
xchg
and
sbb
repz
push
sbbb
xor
addr16
pop
push
mov
lahf
rorb
jmp
pop
lods
add
inc
test
int
mov
add
mov
addb
adc
push
rorb
inc
pusha
or
push
cli
rolb
add
ds
add
mov
cmp
out
mov
mov
sbb
adc
mov
jge
outsb
addb
or
or
ljmp
test
or
movsl
fdivrs
mov
xchg
push
dec
add
cltd
mov
xchg
aad
pop
shl
push
or
sbb
sbb
lock
or
cmp
and
pop
sbb
add
inc
sbb
dec
adc
cmp
xchg
jmp
mov
pop
pop
aad
mov
arpl
movsw
call
clc
fstpt
lahf
dec
xchg
dec
aad
xchg
dec
and
daa
jo
pop
push
stos
pop
xchg
pushf
cmp
pusha
cmp
add
mov
pop
clc
stos
sahf
push
xor
xchg
ljmp
adc
push
xchg
bound
cmpb
add
into
rclb
mov
push
lret
lock
repz
push
scas
in
or
cmpl
mov
push
xor
or
mov
mov
dec
in
xor
ficoms
cld
movsb
aam
adc
cmp
outsl
fcomi
sub
add
cld
dec
int
sbb
inc
add
subl
mov
pusha
xchg
cmp
xchg
movsl
add
pop
jecxz
ljmp
les
xchg
cmp
or
or
and
rclb
int
ljmp
adc
xor
xchg
mov
jmp
lds
incl
fildl
xchg
cmp
push
cli
roll
stos
add
pop
lahf
addb
sahf
xor
pop
adcl
clc
out
js
aam
mov
xchg
add
inc
mov
and
inc
add
mov
add
add
or
inc
push
mov
loopne
push
lret
lds
test
adc
xchg
add
mov
mov
jg
or
ljmp
dec
cmp
idivb
mov
sub
and
push
call
shlb
xchg
jo
mov
iret
loopne
outsb
rorl
pop
movsb
xor
pop
fsts
or
adc
cli
or
addr16
inc
mov
sbb
int
pop
cmpsb
xlat
pop
xchg
or
fcomps
xchg
pop
dec
jl
and
out
fsts
and
fimuls
cmp
xor
push
or
sbb
ljmp
flds
cmpsl
add
ljmp
push
add
cmp
pop
rcrb
jge
aad
enter
cmp
in
xchg
push
sub
out
xchg
dec
add
pop
sbb
cmp
sar
adc
adc
add
shlb
push
xchg
arpl
decl
xchg
jo
lret
in
xchg
or
and
repz
cmp
test
int
repz
lock
or
mov
sub
ljmp
sbb
inc
mov
lock
jmp
test
lahf
lea
sbbb
mov
xchg
or
call
mov
or
cmp
add
add
pop
in
and
push
ss
add
cmp
pop
les
pop
cmc
std
jmp
ficoms
adc
push
add
sbb
jae
push
add
cmp
and
fucom
add
or
fsubl
adcb
dec
in
div
lock
push
aam
add
adc
xor
adc
inc
mov
jmp
or
push
mov
aas
ljmp
cmp
lods
mov
fistpll
mov
cmpsb
cld
ret
aaa
sbb
pop
and
push
je
fcmovnu
outsl
push
in
jno
pop
lock
sub
sub
cmpsb
dec
rcr
push
pusha
imul
and
stos
inc
test
mov
jnp,pn
mov
loope
sub
push
add
mov
negb
in
loope
add
notb
test
ret
in
push
jne
outsl
lcall
lods
push
fstpl
and
cmp
or
aas
fistpl
add
adc
pusha
xchg
movb
call
adc
loope
adcl
jo
shrl
cli
inc
add
dec
add
push
push
mov
loope
inc
add
pushl
mov
mov
add
sbb
imul
adcb
std
ljmp
fs
data16
test
sarl
fdivrl
aaa
cmp
xchg
loop
xchg
pop
ljmp
in
xchg
aam
lock
lcall
push
scas
adc
or
stos
ret
rcr
test
mov
mov
add
imul
dec
call
movsb
imul
stos
es
aam
sbb
jp
cltd
imul
push
add
fwait
testl
hlt
incl
jle
mov
nop
fldl
jno
clc
and
pop
idivb
aas
test
ljmp
jb
pop
pop
pop
nop
std
decl
bound
jo
or
mov
scas
jg
int3
and
sbb
loopne
xor
lcall
adc
pusha
dec
xchg
pusha
or
cmc
sub
jmp
add
data16
xchg
rclb
adc
scas
shl
pop
notb
mov
mov
icebp
addr16
jo
lock
pop
xor
lods
and
adc
shlb
pop
add
add
aam
pop
imul
decl
pop
cs
movsl
add
and
pop
jo
jmp
bound
fnstenv
and
std
sub
add
js
pop
sub
mov
sbb
xchg
cmpsb
push
add
and
inc
add
push
add
mov
jp
fmuls
jle
fs
call
sbb
sub
or
in
xor
and
add
ret
stos
cmpsb
fistpl
or
ljmp
nop
ficomps
add
push
test
or
xchg
adc
ds
cmp
fistpll
add
pop
incl
add
pop
inc
adc
rolb
jg
clc
mov
sarb
mov
add
or
orl
sub
add
hlt
lcall
cmp
addl
jmp
dec
xor
lods
cmp
lcall
mov
push
add
and
inc
xor
test
mov
mov
push
daa
mov
orb
mov
pusha
ffree
lcall
cmp
cmp
cld
incl
addb
xchg
add
mov
mov
mov
inc
cmp
mov
mov
mov
lods
in
xor
rclb
lret
jo
sub
shr
add
add
cmp
pop
push
and
dec
or
cli
sbb
xorb
pop
pop
aaa
rclb
inc
cli
inc
out
add
shlb
gs
rolb
push
add
dec
mov
jae
or
add
fisttps
push
mov
sbb
pop
push
sub
lods
lock
xorb
loopne
fcmovb
xor
les
adcb
ljmp
push
push
ret
jecxz
adc
or
cmp
jnp
mov
add
cmpsb
cmpsl
rclb
xor
jl
inc
or
jg
push
xor
or
sub
inc
sbb
lret
xchg
pop
add
fdecstp
add
sbb
ror
push
push
cmp
aad
xchg
mov
mov
sahf
or
loop
incl
or
lahf
test
push
inc
or
mov
stos
ficoml
mov
jg
aaa
or
ret
push
dec
mov
jge
rolb
and
push
and
sti
ljmp
cmp
addr16
mov
lds
call
fisubl
mov
pop
push
lock
mov
push
ljmp
or
and
rolb
push
shll
xchg
mov
loopne
cmpl
rorb
add
int3
push
incb
into
and
iret
push
or
add
pop
sbb
sbb
mov
add
xchg
add
std
imul
loopne
add
fchs
push
popa
popf
mov
adc
sarl
pushf
inc
inc
decl
mov
dec
sahf
loopne
xchg
add
mov
xchg
ret
cltd
dec
xor
mov
pusha
mov
fs
stos
pusha
sti
or
and
stos
gs
add
clc
jg
dec
xchg
loop
adc
in
stos
sub
cli
xor
or
dec
push
add
push
dec
cmc
scas
rcr
push
pusha
add
adc
add
shrb
shlb
sub
mov
cmpl
mov
fdivs
cwtl
mov
mov
inc
test
rclb
mov
scas
jg
insl
pop
add
pusha
inc
cmpsl
leave
into
adc
push
ljmp
and
sub
ret
hlt
pop
sub
mov
bound
mov
int
sar
les
ja
jle
pop
lcall
add
call
scas
adc
psrlq
mov
or
pop
adcb
pusha
rorb
cmp
pusha
add
sub
outsb
imul
addb
stos
xchg
xchg
loopne,pn
orb
scas
rolb
sub
loopne
jecxz
jnp
add
scas
mov
test
hlt
adc
adc
movsb
orl
aas
push
sub
movsb
cmp
or
or
int
pop
test
inc
and
sub
mov
push
sub
cmp
lcall
sbb
test
sbb
cmp
cmp
or
in
sub
mov
mov
movsl
inc
push
sbb
loop
rorl
add
xor
and
cmp
add
imul
push
adc
idiv
jg
xor
and
inc
push
pop
aaa
add
cmp
add
lds
jg
add
sbb
scas
jo
arpl
xchg
cmp
xor
mov
jg
sti
pop
fwait
inc
test
or
jbe
sbb
inc
add
pop
in
mov
mov
xor
jnp
add
adc
mov
mov
and
invd
cmp
adc
in
pop
add
or
jnp
rolb
jo
inc
or
lcall
add
mov
pop
pop
inc
mov
fcomip
icebp
dec
add
adc
add
dec
inc
cmp
inc
pop
push
add
mov
jne
clc
inc
clc
addb
adc
aaa
xor
cmp
jg
inc
std
add
aaa
out
nop
dec
and
test
test
sub
xchg
ss
loop
pop
sbb
aaa
movsb
xchg
int3
push
test
dec
lds
and
xchg
lods
fadd
movsl
in
pop
hlt
sbb
in
ss
inc
add
bound
clc
cli
out
add
mov
sbb
mov
xchg
push
adc
call
or
pop
int3
xchg
test
in
test
lds
cmp
cmp
or
cld
ljmp
shlb
lock
repnz
mov
or
cmp
jno
int
mov
adc
fiaddl
ret
push
add
mov
cmp
mov
add
lcall
add
xchg
sbb
adcb
ja
lods
add
cli
mov
sub
fdivrl
fadds
arpl
mov
das
das
jo
inc
jbe
popa
sbb
sti
pop
and
fiadds
push
outsb
mov
or
nop
cmp
mov
add
data16
decl
and
mov
rorl
pop
fmull
and
add
pop
cmp
mov
pop
pop
movsb
dec
pop
jno
adc
inc
jno
lods
daa
aad
pusha
aaa
lea
push
adc
cmp
fwait
ds
sbb
scas
jnp
es
cs
pop
add
sub
sub
ret
xor
and
pop
mov
sub
cs
xor
pop
insl
ss
insl
fbstp
loopne
pop
das
imul
inc
out
pop
test
mov
incl
aad
js
mov
ficoml
pop
pusha
lods
sarb
fisubs
sub
cmc
out
rclb
or
inc
xor
jo
shr
aad
inc
add
jp
cmpb
sbb
pushf
sub
add
push
imulb
pop
mov
mov
mov
icebp
or
xor
adc
pushl
shlb
enter
leave
rolb
inc
mov
shll
lcall
pop
loop
mov
adc
test
loope
and
cmpsl
mov
in
shrb
or
push
push
out
jne
lods
mov
mov
mov
add
add
jmp
dec
mov
mov
fiadds
sub
inc
jb
ljmp
dec
nop
add
ljmp
lcall
les
sbb
add
test
mov
push
xlat
insb
push
push
mov
mov
add
cmp
pusha
mov
cmp
add
dec
ret
and
ficomps
mov
aam
movsl
pusha
or
or
movb
jg
das
cmp
enter
push
movsb
int3
cs
mov
rol
mov
pop
adc
mov
call
add
rcrb
ffree
mov
mov
cmp
inc
pop
mov
ljmp
shlb
lret
lret
lock
cmp
andb
fcos
out
adc
cmp
fcom
imul
add
push
dec
xchg
flds
ret
pop
ret
and
rolb
cld
pushl
push
and
push
lret
and
xor
daa
jl
jmp
outsb
and
mov
and
daa
adc
imul
cmp
and
sbb
pusha
mov
daa
push
cmpsb
mov
add
and
rolb
test
fisubl
inc
fists
mov
adcb
mov
mov
fs
or
push
add
pop
aam
mov
inc
arpl
push
imul
test
jp
or
inc
bound
sub
jno
mov
ja
rolb
sar
test
dec
aad
pop
cmp
add
or
add
push
bound
add
mov
adcb
outsb
or
pop
lock
mov
mov
orb
add
mov
aaa
or
mov
add
inc
or
cmpsb
mov
cmp
mov
lods
lods
xchg
or
loopne
jp
mov
jg
orb
rolb
lods
rcl
push
addb
vpand
or
pop
add
movsl
jo
jb
dec
add
mov
push
add
and
push
pop
gs
sbb
and
fsubrs
aaa
sbb
call
or
mov
adc
xchg
mov
clc
and
push
ret
fiadds
xchg
mov
pop
lds
sub
shlb
xchg
sbb
aaa
sti
cmp
aad
adc
jmp
ss
sbb
xor
add
add
cld
dec
cltd
and
mov
sbb
pushf
add
inc
push
push
cmpsb
xchg
clc
sbb
add
movsb
inc
rcrb
or
aad
aas
sbb
scas
fcmovb
and
jo
pop
sub
cmp
push
sbb
jno
daa
xchg
decl
loopne
scas
or
cmp
or
inc
out
cmpsl
inc
xchg
or
push
xchg
xchg
subb
cmc
pop
lret
push
data16
fnstsw
icebp
cld
in
mov
push
ss
inc
cmpsb
nop
sahf
adc
or
test
push
xchg
mov
mov
or
mov
test
push
subl
je
test
and
mov
mov
bound
movsb
jl
or
ljmp
jp
inc
inc
and
fadds
xor
or
into
cmp
jmp
addb
xor
inc
addb
or
push
movsl
xlat
cs
xchg
loop
cmp
adcb
shll
adc
lds
inc
sub
xchg
inc
add
adc
leave
mov
and
pop
xchg
ficomps
aaa
loopne
mov
inc
add
cmp
or
pop
ljmp
addl
andb
or
add
outsl
fcomip
add
or
imul
or
mov
add
orl
sbb
stos
lods
stos
into
pop
lods
incl
push
inc
scas
leave
cmp
ret
cmpsl
fbld
and
pop
mov
ficoms
rclb
jno
dec
add
fs
test
nop
ja
push
adcb
cli
out
pop
mov
xor
and
inc
add
rolb
aaa
add
xor
enter
fsubs
ret
and
xor
sbb
push
ret
movsb
sti
sbb
pushl
fcoms
loopne
cmp
add
bound
lcall
shlb
and
and
stc
xchg
or
or
roll
inc
dec
add
repz
dec
scas
mov
add
lret
push
and
lcall
and
inc
or
mov
loopne,pt
cs
add
pusha
lods
cmp
add
add
outsb
add
push
bound
cmp
push
mov
in
inc
sbb
add
dec
and
sbb
andb
jg
push
push
cmpsl
adc
or
and
in
in
scas
les
pop
stc
test
out
stos
out
orl
mov
xchg
test
pop
loopne
test
xor
mov
or
adc
imul
clc
and
push
inc
push
mov
imul
inc
push
jb
jo
fwait
imul
jb
jae
or
mov
or
call
sub
mov
add
push
int3
loopne
push
inc
xchg
rorb
jbe
movsb
xchg
lds
outsl
cli
add
inc
mov
jecxz
clc
sub
lcall
xabort
fs
lcall
adc
mov
add
add
and
ljmp
sbb
sbb
fwait
jno
jbe
push
sub
mov
add
jg
adc
push
and
add
push
mov
fdivl
sub
movsl
lret
outsb
add
out
rorb
push
push
jge
add
stos
mov
add
jo
push
jne
adc
rcll
fdivrs
pop
push
dec
mov
adcb
icebp
cmp
mov
in
fists
outsl
and
mov
mov
hlt
mov
pop
cmp
add
or
lock
nop
push
or
push
dec
lahf
lock
fildll
adc
repz
cmp
ljmp
or
add
jo
fidivrs
push
xor
outsl
dec
push
adc
jle
and
xor
ljmp
sub
mov
sub
inc
outsb
push
xor
cmp
lods
rcrl
cmp
xchg
push
shrl
sbb
sbb
mov
or
int3
adc
cmp
adc
cmp
std
scas
insl
push
sbb
sbb
inc
test
add
jo
adc
cmp
push
aaa
scas
ds
push
hlt
fadds
and
cmpsb
mov
pop
iret
inc
push
and
jae
add
shll
mov
rcr
and
loopne
adc
dec
gs
cltd
add
and
and
jl
subb
js
mov
xor
out
pop
cmpsl
xorb
add
fisubrs
sub
push
or
lock
ja
out
dec
scas
adc
sub
inc
nop
xor
sub
ds
jbe
xchg
and
cmp
mov
and
mov
popf
aam
aaa
aad
add
sub
fldl
cwtl
cwtl
notb
add
lret
add
jbe
adc
icebp
lock
lcall
adc
dec
adc
sub
fadds
pusha
insl
clc
sub
add
add
ja
and
ret
sbbb
shlb
add
and
push
and
mov
je
or
and
add
lcall
or
lock
push
or
imul
xor
movsl
or
push
sub
or
add
mov
or
jo
in
ljmp
cmc
add
adc
jmp
lock
bound
test
jns
pop
fstpt
mov
push
adc
cmp
add
rorl
dec
add
add
pop
in
cmpl
dec
jge
or
add
cs
xor
nop
jge
sbb
and
es
pusha
xchg
inc
imul
add
push
mov
pop
es
mov
push
and
shll
outsb
jo
leave
movsb
sbb
int
outsb
pop
adc
int
dec
and
jbe
mov
lea
and
xor
imul
xchg
add
pop
add
xchg
imul
popa
xor
stc
push
cld
xchg
icebp
fwait
mov
cli
add
or
imul
mov
xchg
andl
and
adc
arpl
test
jmp
pushf
xor
sub
das
mov
xchg
f2xm1
sahf
cmp
fiaddl
sbb
add
add
mov
faddl
repnz
mov
mov
cmp
cmp
sub
add
add
push
clc
outsl
pop
rcl
fcmovb
call
pop
add
mov
jo
pop
or
pop
pop
inc
xchg
fnsave
add
mov
adc
mov
mov
mov
add
loope
mov
roll
mov
mov
and
add
or
jg
or
adc
dec
fldenv
out
cmp
add
nop
add
loope
pop
incl
and
mov
push
inc
cld
repnz
lods
js
lods
insl
dec
insl
scas
outsl
add
movsl
inc
lret
in
push
fbld
sub
call
movsl
int3
mov
scas
and
push
cmp
rorb
mov
fcmovne
push
sbb
inc
mov
and
add
stos
sbb
loop
pop
adc
push
lea
out
mov
push
icebp
or
loope
bound
push
loop
ljmp
xor
js
push
jmp
cmp
imul
mov
in
adc
lock
fsts
inc
push
in
and
add
pop
popf
push
pop
or
ret
pop
push
cwtl
sarl
and
add
fnstsw
addl
movsl
fsubl
xchg
les
mov
and
mov
stos
push
sbb
xor
mov
cld
lcall
mov
inc
sub
mov
push
dec
lcall
add
sub
sbb
sarb
shll
std
push
xchg
mov
fists
add
fadd
xchg
or
mov
pop
and
or
mov
mov
pusha
or
in
inc
lcall
rcrl
xchg
cmp
xchg
int
rclb
cmp
add
jb
loopne,pn
cs
cli
adc
sub
hlt
lds
fcoms
add
roll
daa
pop
push
movsb
cld
rorb
shll
lds
adc
push
or
or
or
fistl
enter
rorl
movsl
test
mov
add
add
push
fstps
rorl
or
and
pop
mov
mov
or
sbb
pop
sti
xchg
bound
pop
test
and
inc
or
inc
add
push
or
rcll
and
jp
fsub
inc
inc
daa
mov
pop
dec
adc
mov
sbb
repz
mov
sti
jg
fs
pop
ret
loopne
cli
test
adc
adc
cmp
xor
cli
incl
sub
test
push
mov
dec
xor
pop
xchg
shr
push
add
inc
scas
insb
pop
add
fisttpll
daa
cmp
fcmovnb
sub
lods
xchg
push
les
jnp
jo
cmp
data16
addl
push
xor
adc
mov
lock
call
mov
push
cmpsb
add
push
sbb
or
push
int
cmp
mov
ret
popa
sti
mov
sub
inc
add
inc
pusha
mov
pop
xor
push
add
jmp
loopne
aam
cmpsl
pushf
cmpsb
mov
loopne
rolb
addl
or
rcr
push
push
add
or
rclb
ljmp
pushl
cmp
pop
adc
cli
push
jmp
dec
pushf
lds
sbb
and
xchg
orl
or
sbb
dec
rclb
fsubl
sar
dec
push
ljmp
mov
sahf
fnstsw
test
dec
movsb
add
add
mov
adc
fildl
adc
sbb
adc
xchg
aam
aaa
test
in
stos
sbb
add
mov
or
xlat
call
add
push
add
add
mov
push
loop
adc
ret
rorb
imul
push
pop
fimull
fwait
ljmp
adc
call
int
addl
in
mov
add
lret
push
sbb
push
dec
ficoms
addb
rol
xor
adc
pop
adc
jp
pop
stos
rolb
add
xchg
pop
outsb
jbe
or
lcall
popa
outsb
pop
jg
add
pop
fwait
adcl
cltd
ret
rolb
add
pop
andb
lods
mov
add
jl
mov
das
fdivs
push
scas
ret
add
sti
push
out
sub
push
xor
icebp
movsb
into
and
addr16
stos
scas
movsb
decb
rorb
mov
sub
inc
xor
cmp
mov
sub
ljmp
or
or
std
addb
sbb
out
lret
add
test
fldenv
pop
push
push
lea
ret
pusha
xorb
dec
icebp
cmp
add
ds
pushf
or
test
fstpt
inc
xor
incl
cmp
add
in
and
dec
int
mov
movsl
xchg
xchg
das
aad
repz
sub
inc
pusha
mov
push
rcrl
adc
pusha
nop
arpl
mov
cmpsl
mov
movsb
shlb
cli
mov
shlb
leave
lock
or
jb
loop
adc
andb
mov
cli
pop
inc
shll
sub
rcrl
add
mov
inc
add
ficompl
leave
and
add
clc
rorb
sub
nop
loop
cmp
mov
ficoml
lds
mov
inc
test
fs
push
jne
div
mov
adc
xor
imul
cmp
inc
pushf
cs
mov
dec
cli
dec
xchg
lods
sub
mov
add
xchg
and
fptan
pop
in
pusha
cmp
imul
sbb
adc
addl
xchg
and
mov
stos
shlb
rcr
adc
jmp
jle
and
rolb
sub
mov
mov
negb
popa
xchg
call
mov
jo
call
and
push
insb
cmpsb
pop
cmpsb
imulb
or
roll
jg
cmpl
or
add
or
and
add
mov
push
rclb
mov
pushf
add
test
cmpsl
aad
ljmp
xchg
adc
add
or
mov
sub
ror
imul
shl
sbb
pop
xchg
hlt
push
cmp
data16
and
dec
sub
adc
cmc
mov
mov
pop
inc
daa
hlt
pusha
sub
or
loop
lcall
incb
sub
sbb
mov
popa
sub
inc
add
xorb
xor
add
add
sub
popl
jle
enter
push
mov
mov
testb
in
mov
cmp
out
adc
loop
test
add
add
mov
pop
xchg
pop
lods
adc
imul
mov
mov
add
xchg
lret
mov
add
ss
add
movsl
lods
push
or
cs
ret
movsl
cmpsb
outsl
loope
xchg
fcoms
or
dec
ret
mov
adc
add
inc
insl
xchg
push
push
sbb
and
xchg
sbbb
or
add
rolb
pop
xchg
ss
jno
fmuls
and
mov
adc
rcrb
mov
lahf
stc
enter
movsl
xor
jae
add
sti
jo
in
decl
sbb
push
mov
and
sub
or
cld
in
decl
sub
add
addr16
insb
dec
or
lret
xchg
jg
mov
adc
scas
cltd
jl
add
and
lret
scas
clc
and
pop
pop
or
sub
xor
je
cmpsb
out
xchg
ss
lret
dec
mov
cmp
or
and
in
jg
inc
mov
aaa
mov
sub
xchg
push
xor
cmpsl
and
sarb
mov
mov
dec
fidivs
or
pop
std
pushl
outsb
push
mov
and
loop
lods
stos
ret
in
outsl
jmp
fisubs
int3
add
cmpsl
inc
pop
push
jbe
inc
push
rcll
sbb
push
inc
add
rol
outsl
push
je
lcall
fs
add
sub
imulb
pusha
pop
cmp
and
ljmp
loopne
rolb
mov
add
pop
movsl
fcomip
or
jp
xchg
jns
inc
push
and
gs
mov
or
frstor
test
repnz
outsl
lea
pusha
dec
outsb
andl
inc
orb
cmpb
add
mov
ret
cmp
jp
pop
popa
ljmp
jg
jo
mov
cmp
adc
lods
pop
shlb
push
addl
je
mov
orl
sbb
jmp
aam
mov
orl
mov
iret
mov
cmc
inc
loopne
and
cmpsb
pop
cld
sbb
adc
pop
xchg
xorb
movsl
ljmp
pop
push
sub
push
or
push
and
jp
dec
jp
mov
pop
lock
or
push
pusha
mov
push
cmc
jne
add
fldenv
or
mov
adc
or
cmp
jo
push
push
data16
lds
stos
inc
add
rorb
or
int
xor
xor
push
cmpb
aad
popa
lock
ret
mov
pop
xor
fnop
cmp
andl
adc
loope
hlt
sti
es
inc
adc
pop
fcos
data16
lcall
and
cmpsl
rcrl
mov
add
cltd
add
movsb
or
rorb
mov
jb
push
out
les
scas
fucomp
sub
adc
fadds
and
frstor
push
or
movsl
call
incl
cmpl
orb
xchg
test
mov
test
into
xor
cmc
pusha
push
xor
inc
mov
incb
xlat
mov
inc
sbb
lret
mov
and
addb
or
movsl
data16
addb
mov
or
pop
shlb
mov
lcall
and
mov
jo
leave
push
cmp
imul
jle
add
sub
subb
test
xchg
mov
out
dec
add
in
es
or
mov
push
dec
pop
push
subb
hlt
push
addr16
incl
sbb
pop
push
jno
subl
push
or
mov
mov
mov
and
pop
pop
add
push
adc
neg
push
dec
pop
adc
sbb
jo
lret
or
sbbl
insl
pop
in
jecxz
or
mov
popl
addb
add
mov
xor
push
pop
and
pop
xor
nop
adc
sub
adcb
pop
hlt
add
ljmp
pop
pop
movsl
mov
sub
testb
adc
rcll
or
or
or
mov
rolb
addb
mov
cmp
shlb
push
movsl
out
icebp
pop
mov
outsl
and
add
add
cmp
push
or
ficoml
add
inc
sbb
cmp
mov
rol
pop
aaa
sbb
mov
xor
adc
orb
xchg
push
les
and
xchg
rcrb
cmp
and
jecxz
test
jbe
out
ljmp
mov
fbld
adc
lea
inc
shrb
add
das
and
movsb
xor
loope
cmp
or
clc
mov
faddl
lcall
mov
shlb
pushf
shr
ss
jg
andb
aas
nop
bound
xchg
sbbl
loop
outsl
in
cmp
mov
jo
lds
mov
and
push
pop
adcb
fidivrs
ret
nop
add
aaa
int
lds
sbb
cmp
inc
cmp
ret
lock
call
aad
stos
lods
in
inc
add
cmp
icebp
add
push
jl
or
and
ljmp
mov
xchg
cmp
andb
push
test
jge
dec
add
or
nop
inc
pop
lods
cmp
xor
mov
sub
stc
add
cmc
push
ds
jmp
add
mov
pusha
or
dec
pusha
xor
pop
cld
psubd
andl
push
and
jno
add
mov
dec
out
inc
dec
shll
out
mov
leave
and
pop
push
xchg
subb
or
push
jg
cmp
cmp
mov
mov
or
nop
adcb
ja
mov
pop
call
rcl
inc
or
inc
jmp
inc
pop
movsb
movsl
or
mov
cmpb
sub
lods
lock
pusha
add
fdivrl
ficompl
push
js
test
loope
mov
aad
pushw
pusha
scas
out
jae
andb
popf
aad
movsb
push
ret
cmove
mov
adc
imul
shll
inc
lock
test
mov
xchg
lahf
mov
mov
push
inc
add
lods
addb
adc
xchg
mov
bsf
loope
das
inc
mov
xchg
cmovbe
test
dec
or
out
movsl
cltd
inc
test
mov
rol
or
and
jl
ljmp
cltd
flds
sbb
push
adc
mov
pop
mov
or
pushl
mov
push
adc
sbb
frstor
pop
and
mov
mov
xchg
cs
pop
push
cltd
mov
nop
xchg
sahf
movsb
cmp
cwtl
lcall
adc
pop
adc
cld
jg
rcrl
mov
xor
add
loopne
or
repnz
lods
sub
xor
dec
add
add
push
sbb
rcrl
inc
lock
lcall
or
add
mov
xor
cmp
imul
push
rcrb
xchg
inc
or
pop
pop
pusha
lcall
rcll
add
into
mov
push
xor
pop
push
cmp
lock
sub
subl
add
jp
vprotd
xor
jg
les
mov
cmpsb
outsb
adc
out
loope
mov
sbb
xlat
sub
add
js
push
sbb
adc
xchg
adcb
xchg
mov
rolb
rolb
dec
push
aas
adcl
inc
shll
bound
movsb
shrl
and
or
or
jno
sub
movsl
fstps
aaa
hlt
push
into
mov
mov
loopne
mov
pop
add
xchg
push
shlb
imul
lret
sub
inc
xor
mov
and
push
push
out
stos
and
fcoml
push
sub
mov
and
cld
rorb
js
dec
mov
inc
inc
xor
dec
aad
cmp
movsl
jg
out
cmp
mov
add
mov
shll
mov
add
out
xor
ret
add
pop
ret
daa
loopne
movsb
daa
xchg
push
fst
movsl
fldl
xor
add
push
mov
enter
ret
mov
or
insl
push
sbb
fwait
xor
xor
add
pop
xchg
test
adcb
dec
ds
add
dec
fists
sbb
adc
xor
daa
call
adc
fs
and
sbb
mov
and
inc
add
movsl
mov
sub
cmp
sbb
and
fbld
pop
pusha
rclb
addb
adcl
inc
cld
add
sub
test
pop
cmpl
add
push
cmp
movsb
stos
add
pop
rorl
call
cmpl
popa
orb
in
and
add
adc
add
pop
xor
nop
xchg
and
clc
adc
aad
add
adc
cmp
hlt
roll
iret
movsl
in
mov
sbb
mov
movsl
mov
mov
or
cwtl
adc
adcb
pushl
sbbb
ret
xchg
push
and
sbb
stos
stos
andb
adc
lahf
push
adcb
pop
sub
or
push
add
fldt
fldl
shlb
sub
sub
rcrw
inc
movsb
fiadds
push
das
mov
jle
mov
es
and
js
nop
shrb
cmp
leave
pop
cltd
pop
push
inc
fldt
fstl
sbb
fldt
mov
adc
ljmp
cmp
clc
inc
test
orl
push
icebp
jle
cmpl
adc
jmp
leave
lds
xchg
lock
or
inc
xchg
shll
inc
push
jle
xchg
sbbb
dec
inc
jo
adc
bnd
rclb
rolb
adc
mov
cli
pop
cld
subb
jg
inc
pop
ljmp
or
aam
mov
mov
roll
shrl
ljmp
scas
outsb
and
call
adc
test
pop
or
addl
jbe
adc
adc
outsl
clc
addr16
cs
movsb
shll
inc
inc
rclb
addb
sbb
adc
pusha
cmp
dec
add
cmpl
inc
and
cmp
decl
rcrb
adc
or
and
orb
nop
cmpb
or
cmp
mov
add
fistpl
fisttpl
movsl
aam
orb
std
pop
pop
add
fimull
dec
fcompl
jns
add
rorb
add
out
enter
test
popa
sub
sbbb
jg
gs
rclb
pusha
dec
or
add
dec
cld
and
and
cmp
shll
ja
decl
or
cmp
and
in
add
loopne
loopne
data16
jmp
push
in
pop
addb
addl
add
or
ficompl
dec
fnstcw
pop
dec
mov
fildl
mov
or
and
sbb
add
ljmp
push
pusha
aas
push
fs
xchg
pop
mov
add
xchg
or
pop
test
pop
pusha
std
adc
leave
cmp
and
int3
push
rcr
mov
mov
repnz
add
ja
cmp
movsl
jg
rorb
and
callw
les
outsl
push
jb
or
daa
add
in
rcrl
loopne
stos
mov
add
or
push
mov
fildl
jo
leave
cmp
xlat
subl
and
aad
out
subl
lds
cmpsl
dec
mov
add
ljmp
and
mov
cmc
adc
fs
test
movsl
push
push
enter
cs
mulb
rorb
fisttps
mov
xchg
lds
rorl
test
mov
sti
imulb
push
pop
loope
addb
pop
inc
sbb
jg
int
pop
cmc
mov
adc
test
inc
sub
or
les
or
aaa
adc
mov
and
iret
and
mov
int
fs
pop
add
xor
roll
pusha
sub
mov
or
add
pop
pushf
push
fldenv
imul
subb
mov
ljmp
lods
mov
cmp
ljmp
shlb
sti
or
fidivrl
mov
vmovsd
mov
cmpsb
xchg
or
adc
mov
pop
ljmp
xchg
jecxz
mov
lock
icebp
shlb
push
lods
movsl
fdivrs
pop
fbld
pop
insl
loope
inc
lcall
popa
outsb
add
or
icebp
pop
mov
pop
adc
push
jae
test
popa
add
add
adc
add
jo
aaa
add
push
mov
adc
in
mov
pushf
inc
cmpsl
movsb
fwait
jl
inc
push
cmp
scas
call
or
movsb
nop
pop
cmp
pop
popa
add
add
add
add
sub
add
lcall
out
jmp
pop
ljmp
xor
shlb
or
push
nop
cmp
add
aam
push
icebp
push
sarb
inc
test
jmp
push
add
xchg
xor
mov
xchg
pop
cmc
sbb
push
bound
mov
adc
push
sbb
add
push
add
pop
js
pushf
add
pop
xor
mov
pop
xchg
add
mov
cli
outsb
dec
insb
pop
add
repnz
add
shr
sti
outsb
mov
pop
test
aad
and
fcos
xlat
sbb
add
sbb
addb
inc
shlb
stc
nop
inc
hlt
add
push
call
stos
orb
test
jle
imul
test
clc
mov
stc
mov
adc
mov
adcb
ret
inc
and
ljmp
push
mov
rolb
mov
testb
faddl
add
adc
push
xor
pop
loopne
pop
push
add
ljmp
ret
fldcw
out
loope
mov
decl
addl
cmp
in
and
jl
negl
les
add
push
out
mov
xchg
fmull
fnsave
or
inc
xchg
xchg
out
add
jp
jl
add
rorb
pop
xchg
push
pop
clc
decl
mov
aam
add
rcl
or
aas
fstpl
xchg
pop
mov
loop
pop
jo
pop
jno
or
xchg
or
jecxz
adc
add
sbb
je
add
cmp
clc
outsl
cmpsb
push
imulb
push
sub
add
xchg
pop
jno
mov
or
lods
push
push
pshufw
mov
pop
add
push
mov
cwtl
xchg
sbb
rcll
adc
xor
sbb
sbb
mov
decb
stos
xorb
imul
and
mov
mov
fcomps
adc
dec
mov
mov
fadds
movsb
cmpsl
mov
pop
test
shlb
sub
outsl
or
rclb
push
adc
clc
xlat
dec
cmc
adc
shl
xchg
je
or
ret
mov
f2xm1
add
inc
loopne
rol
adc
sar
add
adc
or
movsb
xor
orb
mov
movsb
inc
lds
vpcomuw
testb
dec
cmp
mov
fildl
or
pop
loope
add
mov
add
adc
fwait
inc
mov
add
lods
in
or
xor
int3
loopne
mov
sub
xor
cmp
and
das
adc
lock
addr16
xchg
xchg
add
fnstsw
stos
es
fisttps
add
dec
int3
cmp
and
into
pop
xchg
ljmp
adc
fcoms
in
and
hlt
add
xchg
loope
movb
fwait
mov
add
cmp
cmc
test
call
sbb
add
aas
xor
shrb
or
lds
nop
lods
sub
inc
mov
xorl
decb
mov
lock
in
out
loopne
or
dec
std
andb
out
adc
clc
ljmp
lock
pop
aad
push
les
jg
scas
mov
sub
jl
or
cli
pop
test
pop
lods
movsb
push
insb
int
sub
pop
add
xchg
push
push
jmp
mov
hlt
cmp
push
into
pop
fildl
or
decl
xchg
or
add
mov
and
shrl
jmp
mov
xchg
xchg
add
lahf
xchg
or
jg
icebp
cs
or
lock
or
xor
inc
movsb
iret
xor
xchg
in
movsb
sbb
jg
add
adc
xor
push
mov
test
cmc
call
jmp
lock
push
insl
ljmp
iret
pop
aam
rolb
cs
and
js
jae
xor
mov
push
and
sbb
shll
lods
or
add
adc
mov
adc
movsb
sar
xlat
adc
into
in
dec
or
sbb
and
movsb
fisubrl
jmp
movsl
mov
and
shll
nop
add
mov
ret
jb
scas
add
fldenv
push
add
mov
add
rorb
dec
clc
cmpsb
incl
in
or
addb
xchg
roll
push
adc
int3
mov
or
dec
pop
shrb
enter
xchg
lock
rolb
cmp
ror
jno
cmp
pop
icebp
lods
jmp
or
nop
inc
push
push
and
ljmp
add
mov
add
dec
orb
aam
mov
addb
dec
jl
sbb
sbb
movsl
mov
jo
fldl
mov
mov
in
aam
mov
cmp
or
inc
xorb
pushf
stos
ljmp
mov
aad
movsl
fidivs
movsl
push
or
nop
aaa
cld
mov
test
inc
inc
lea
and
sub
pop
test
popf
inc
pop
xchg
test
pusha
jo
lds
ss
mov
add
shl
xchg
mov
les
mov
sbb
jo
loop
add
das
clc
sbb
mov
cmp
nop
or
push
jp
sarl
mov
or
pop
subb
les
xor
push
dec
mov
addb
pop
or
mov
imul
aas
mov
add
imul
mov
jmp
sub
movsb
and
xchg
call
mov
sub
add
leave
jle
push
lret
loopne
xor
push
inc
or
es
in
mov
and
xorl
fimull
sub
fst
or
flds
adc
mov
cltd
mov
add
ljmp
ds
push
pop
frstor
mov
rcl
jo
and
mov
or
pusha
mov
xchg
je
push
xor
js
fisubrs
cwtl
lock
lcall
jne
pop
and
stos
xchg
jb
push
sti
pop
fcoms
pusha
js
jl
pop
add
js
adc
fbld
fldt
fisttpl
xor
jmp
jb
popf
pop
add
mov
mov
mov
pop
or
in
jge
xor
mov
jmp
lcall
pop
mov
and
mov
pusha
sti
and
je
add
loopne
dec
fnstenv
jb
jg
call
popf
lea
xor
xor
mov
mov
xchg
inc
push
jne
lahf
aaa
add
fistpl
fnsave
add
mov
dec
aaa
shlb
jb
loopne
in
pop
test
and
lods
jg
jo
fs
stos
lods
scas
and
mov
and
addl
mov
loopne
lcall
subb
push
and
adc
sbbb
adcl
loop
inc
fiaddl
cmpl
into
decl
movsl
xor
jbe
lahf
lret
or
xorb
cmp
das
clc
add
xchg
fiadds
inc
roll
xor
loop
sub
jl
das
imul
xor
and
mov
jnp
adc
adc
add
push
pop
xor
add
add
mov
pop
xchg
lods
xor
or
pop
mov
cmp
xchg
icebp
inc
movsl
test
adc
testl
ret
sub
pop
lds
or
or
or
call
aam
pop
bound
cmp
add
jnp
add
push
sahf
clc
push
ljmp
loopne
jb
xor
test
clc
mov
push
add
cld
imul
xchg
and
pop
aad
add
pop
xlat
das
mov
mov
xor
adc
loop
stos
mov
mov
add
out
sub
outsl
cmp
aaa
lods
xchg
add
out
push
movsl
jnp
push
or
test
int3
idivl
add
push
mov
jbe
fbstp
push
stc
out
mov
inc
or
add
stc
test
subb
add
stc
mov
std
push
std
stos
into
inc
pushl
outsb
fwait
cmp
outsb
xor
jp
aad
adc
aaa
jle
rolb
mov
aaa
mov
add
movsb
lcall
outsb
pop
pop
fs
mov
jo
lret
pusha
mov
inc
xlat
sbb
pop
mov
test
mov
add
lods
jge
inc
dec
jl
hlt
jae
pushw
pop
gs
pop
add
lods
xor
and
xchg
push
or
inc
les
push
add
dec
sub
jbe
nop
inc
push
or
orb
push
lods
cmp
sub
add
pop
adc
test
out
mov
add
aad
and
xchg
bound
push
sbb
mov
adcb
cmp
add
popa
jns
js
ss
std
mov
inc
inc
cmp
pusha
mov
cmp
xor
dec
and
add
mov
shl
push
sub
loopne
or
mov
xorb
and
jp
add
jbe
pusha
and
xchg
clc
ljmp
add
inc
add
cmpsb
outsb
sub
mov
add
mov
nop
add
andl
adc
data16
push
sbb
aam
das
cli
sbb
sbb
push
cmp
and
mov
call
cmp
add
inc
sub
stos
and
lods
mov
jp
cwtl
sti
adc
add
lods
push
bound
xor
add
jg
or
sub
inc
pusha
or
and
inc
adc
push
mov
test
les
push
lods
out
sar
cmp
add
push
sub
cs
aas
data16
out
xor
in
incl
ja
push
and
cmp
cmp
test
cmovle
jg
pop
call
mov
add
cmp
decb
jae
inc
push
xor
in
rclb
or
sub
lock
pop
fsubs
xor
add
movb
push
fsubl
adc
shl
dec
lock
jo
and
mov
mov
outsb
or
pop
mov
push
insb
add
cwtl
sbb
out
or
fsubl
or
push
mov
icebp
adc
test
rcll
or
aaa
ljmp
rorb
loope
stos
mov
cmp
and
add
loop
addb
push
inc
mov
sbb
orl
ret
mov
push
cwtl
push
cltd
lds
and
mov
or
and
and
push
adc
mov
sbb
jg
xchg
popa
rorb
loopne
add
sbbl
mov
imul
pop
fstl
fucomip
mov
mov
arpl
add
and
loopne
bound
push
cmpsb
mov
out
pop
iret
add
mov
mov
dec
jg
fmuls
cmp
or
call
int3
and
int
adc
mov
orb
sub
dec
popa
add
push
and
sub
inc
adc
jmp
out
pusha
or
rorl
inc
and
ljmp
cmpsl
sar
outsl
js
cli
dec
popa
inc
shlb
or
idivb
rorb
mov
ret
add
movsl
les
rcrb
cmp
mov
loope
pop
lods
cmp
notl
int
insl
sbb
es
cltd
mov
lret
lods
adc
and
and
ret
adc
jo
aaa
inc
add
shlb
xor
movsb
lahf
mov
sarb
loopne
xchg
movsl
leave
inc
and
adc
xchg
addl
cld
push
stos
aam
mov
xorl
pop
fistpl
and
add
mov
shll
cmc
sub
ret
loop
jo
add
movsl
pushf
test
sub
icebp
mov
movsl
in
push
cld
mov
push
add
mov
ret
cmc
sar
adc
adc
sbb
mov
lods
jge
sub
cmp
sub
add
and
repnz
shll
cmp
or
movsb
bound
and
mov
js
scas
call
movsb
ljmp
mov
pop
push
cli
pop
mov
push
add
scas
jae
cld
push
rcr
push
aaa
adc
sbb
filds
movsl
enter
add
push
popa
or
nop
add
xor
cmp
inc
lock
aas
sbb
add
bound
mov
addb
pop
lods
mov
sub
jo
movsl
rorl
pop
or
add
movsb
test
inc
es
adc
out
adc
ljmp
or
out
push
pushf
roll
mov
push
inc
aaa
mov
rolb
add
mov
ja
into
roll
aam
mov
fiadds
test
int
add
mov
add
sub
ljmp
loope
in
icebp
adc
nop
and
shlb
push
jge
xchg
jle
inc
adc
adc
adc
rolb
dec
cmpl
mov
push
nop
and
lods
dec
push
sub
ficomps
xchg
pusha
sbb
add
lock
add
or
cmpsb
jmp
cmp
sub
movsl
test
push
and
shlb
movsl
lock
in
jae
loope
mov
jno
xor
in
mov
movsl
stc
in
je
adc
leave
mov
pop
or
clc
lock
push
lock
je
push
dec
ljmp
arpl
push
sub
sub
loopne
and
add
ja
stos
movsb
int3
pusha
fnstcw
xchg
jb
loope
mov
pop
hlt
aas
mov
mov
push
or
add
mov
or
push
inc
incb
faddl
xor
jo
mov
push
cmp
test
sbb
test
add
add
sbb
push
add
xor
cmp
out
lock
add
xchg
pop
dec
cmp
add
or
icebp
ds
das
fsubrs
push
mov
movsl
out
ficomps
rolb
lcall
fisubs
lds
out
add
imul
xchg
cmp
adc
push
clc
xchg
add
lock
and
cld
or
shlb
or
aam
call
push
cmp
add
lds
add
in
pop
sub
mov
adc
mov
addb
stos
cmp
inc
add
clc
sub
test
xor
clc
ja
mov
call
sti
ret
cs
inc
push
frstor
nop
or
cmp
add
shlb
xchg
mov
loopne
cmp
pop
push
push
popa
dec
rorl
xor
sbb
rorb
add
adc
sub
jl
popa
dec
loop
roll
ds
scas
push
movsl
orl
xor
push
mov
or
sbb
lock
mov
ss
xchg
adc
mov
popa
mov
outsl
insl
shll
and
fldenv
rcrl
push
cs
ss
mov
inc
push
and
push
xchg
pop
pusha
inc
mov
frstor
xchg
aas
xchg
adc
jp
mov
cmpsb
in
and
addr16
add
adc
add
sub
and
ljmp
pop
aad
sbb
insb
and
adc
xor
movsl
mov
cld
xchg
push
repnz
sub
mov
sub
pop
push
cmp
nop
xlat
push
mov
xor
push
or
negb
jo
or
repz
and
sbb
mov
jbe
decl
hlt
movsl
cmp
push
lods
fnstenv
xor
push
addb
and
sahf
loopne
nop
clc
scas
cli
jbe
addl
jo
xchg
push
in
add
inc
repnz
or
popa
subb
dec
insb
testb
or
adc
ret
mov
fiadds
data16
insl
adc
add
or
xchg
movsb
ss
fcmovnu
ljmp
mov
adc
es
xor
mov
push
les
sub
pop
push
pop
lock
andl
xchg
clc
xor
rclb
lret
add
in
idiv
pop
mov
mov
cmp
jne
or
dec
cmpsb
sar
mov
mov
add
add
shlb
add
inc
mov
or
add
cltd
add
mov
pop
add
cmc
jmp
sahf
add
push
mov
loopne
adcb
sub
lcall
push
add
inc
rorl
aam
mov
jg
push
cmp
mov
faddl
xchg
push
sub
popa
and
pop
jmp
inc
and
mov
adc
hlt
push
push
pop
adc
adc
pop
xchg
push
cmc
aad
and
xchg
mov
add
cltd
outsl
or
push
hlt
cmp
pop
inc
ffree
and
cmc
jmp
cmp
jo
pop
nop
xchg
and
xchg
cmc
xor
pop
mov
push
sbb
addb
add
or
and
lcall
mov
xchg
in
inc
dec
cli
mov
ljmp
outsl
sub
cld
fimuls
add
mov
xor
rcrl
outsb
xchg
rol
fwait
push
xchg
push
or
mov
adc
movsl
nop
cmp
inc
add
subl
call
enter
shrb
out
enter
xchg
scas
adc
into
pop
ret
push
out
add
xchg
clc
fwait
test
xchg
and
push
negl
pop
push
daa
inc
movsl
icebp
xchg
pop
cld
andb
push
adc
or
add
loop
sbbl
adc
lock
out
or
cld
push
mov
ljmp
mov
inc
test
mov
jo
pop
pop
shrl
push
out
or
test
cli
xchg
inc
andb
in
mov
push
and
lock
test
insl
cmpb
cmp
cli
fisttps
lods
addb
adc
adc
adc
push
andb
cld
mov
dec
mov
fstpl
subb
fwait
test
call
adc
lds
cmp
mov
lock
jg
clc
pop
xchg
in
rclb
push
leave
adc
xorl
mov
mov
shlb
add
mov
push
stc
inc
jge
pop
aam
js
add
dec
cmp
xchg
sbb
lods
cli
adcl
mov
inc
adc
mov
sbb
cwtl
insb
add
mov
rcrb
inc
in
push
insl
test
and
dec
out
fldt
lret
mov
pop
inc
outsb
inc
add
fst
or
shlb
adc
cli
subb
pop
push
test
js
push
add
push
decl
mov
sub
ds
add
outsb
insl
pop
jo
add
outsb
test
fcoms
fcomip
adc
mov
shrb
int
int
shrb
ljmp
jmp
jmp
add
pop
or
cs
stos
adcb
jne
shll
ja
int
xor
mov
inc
xor
or
fildll
add
mov
cmp
lods
loope
pop
mov
push
add
ss
clc
adc
or
std
rorb
add
movsl
mov
add
or
pushf
dec
xchg
test
cmp
or
push
fisttps
jno
lret
or
movsb
or
orb
add
fcompl
or
mov
rol
pop
rclb
and
cmc
or
xchg
inc
fidivl
into
loop
or
test
xor
jp
andb
fdivrs
scas
sub
inc
pop
xchg
sahf
push
push
cmp
push
push
add
loope
mov
cmpsb
cld
cmpsl
mov
es
add
jle
fldl
sahf
shlb
or
les
or
rorb
adc
xor
sbb
push
adc
fwait
out
add
test
hlt
clc
enter
scas
aam
push
or
pop
test
test
fdivp
add
pop
pushf
mov
in
push
decb
add
add
jbe
xchg
sub
mov
or
adc
or
adc
sub
pop
inc
jg
fildll
sbb
and
inc
lds
fildl
test
inc
sub
jmp
in
flds
cli
mov
leave
jbe
ljmp
add
rcll
pushl
fcoms
aam
sub
push
loopne
add
lds
xchg
or
cmp
push
pop
inc
xchg
insb
jmp
jnp
cmp
insb
inc
ljmp
pusha
cld
dec
jmp
xchg
inc
pop
push
rolb
cs
subb
sbb
push
hlt
insb
inc
lock
mov
jb
rol
cltd
ljmp
and
mov
or
int3
mov
add
push
cmpsl
lcall
inc
or
cmp
test
fdivl
cli
push
cli
sbb
ffree
mov
sbbl
sub
pusha
add
jle
push
add
loop
popa
mov
loopne
and
mov
cld
popa
push
cmp
loopne
cmp
in
loop
neg
incb
pop
faddl
add
add
insb
test
push
ret
adc
lahf
addl
sbb
aad
sbb
and
inc
in
mov
movsl
fdivr
mov
flds
ljmp
jb
add
push
mov
xor
movsl
pusha
es
cmpb
pop
dec
mov
add
xchg
and
jecxz
pop
add
sarb
add
nop
cli
inc
shlb
mov
aam
add
inc
ficoms
movsb
imul
cld
mov
add
inc
add
cmc
imul
cld
cmp
ss
jg
add
cmc
orl
cmp
js
hlt
fists
mov
mov
inc
adc
push
fcomi
xchg
orb
and
cmpsb
in
decl
xchg
pop
insl
cmc
pop
popa
adc
mov
icebp
add
inc
or
inc
adc
into
push
out
xor
mov
cs
adc
cmp
mov
lret
loop
mov
ret
or
jns
mov
or
xchg
sbb
sbb
adc
sub
mov
add
outsb
xchg
fcomip
pusha
adc
out
add
scas
cld
cmc
push
aas
lock
fsubl
or
movsb
add
mov
or
lock
icebp
mov
xchg
rol
push
ss
jo
mov
out
xor
push
and
pop
xor
xor
push
jge
and
mov
fdivr
mov
inc
sub
inc
sti
outsl
sub
cmp
daa
inc
das
push
mov
xlat
addr16
or
push
movsb
lods
adcb
jle
in
loopne
divl
clc
cltd
movsl
int3
add
mov
dec
nop
icebp
sbb
call
movaps
ds
sbb
movsl
cld
dec
and
xchg
or
pop
jb
xchg
cmp
push
pop
or
ljmp
shr
nop
test
dec
jmp
add
incl
out
cmpsl
rcrb
in
das
add
movsb
xchg
and
out
mov
or
add
add
test
loop
call
icebp
cmpsl
add
xchg
inc
data16
fldt
cli
loop
add
jo
movsb
ret
es
add
fildl
sub
pop
fisttpll
xchg
ljmp
xor
and
call
adc
dec
loopne
adc
fimuls
pop
mov
xor
jg
shlb
sbb
ljmp
pop
les
push
inc
push
sbb
push
aad
cs
xor
inc
mov
and
pop
pop
add
or
pop
addr16
fists
xchg
mov
add
pop
and
xor
orb
addb
cs
jle
ljmp
add
pop
cltd
add
xor
jbe
or
adc
pop
popf
sarb
rclb
pusha
cltd
hlt
sub
jmp
pop
xchg
nop
jmp
mov
jle
aas
fstps
or
adc
fisubs
pop
push
ss
adc
inc
pop
mov
xchg
movsb
shll
fadds
sbb
jle
add
adcb
sbb
pusha
cmp
mov
or
or
and
sbb
jle
scas
cmp
aam
sbb
and
ficoms
cmp
dec
jecxz
mov
push
inc
js
lds
rorb
sbb
cmpsl
test
imul
adc
lods
mov
andb
nop
rclb
lds
cmp
dec
sbb
sahf
leave
pop
rcrb
sub
sub
nop
jl
fcomps
or
pop
scas
xchg
mov
shrl
sub
push
in
jbe
aad
adc
fimull
mov
push
mov
loopne
nop
adc
loope
inc
loop
add
mov
test
add
sbb
sbb
and
pop
push
adc
call
in
and
sahf
sub
sbb
jo
jmp
push
pop
jo
pop
pushf
cs
leave
lock
sbb
mov
pop
push
xchg
add
fildll
mov
and
lods
mov
cmp
xchg
add
sub
pop
ljmp
push
xor
lods
fists
mov
shrb
aam
add
dec
or
add
pop
icebp
or
lods
shlb
xor
ss
jmp
push
rolb
sbbb
pop
add
inc
dec
cli
test
add
aam
and
sub
xor
es
sub
lock
add
scas
add
or
dec
hlt
push
xor
sbb
cli
rorb
clc
cmp
lods
outsb
rorl
or
sbbb
push
and
inc
roll
ljmp
mov
xchg
push
sub
outsl
fisttps
xor
sbb
js
fistpl
and
outsl
je
pop
popf
out
ret
or
push
ljmp
push
and
inc
xor
add
push
popf
push
les
or
ljmp
cmc
or
rcl
pop
int
fs
add
outsl
xchg
es
fldt
add
or
and
dec
xor
sub
cmp
push
scas
jbe
or
adc
jle
leave
xor
and
sbb
aas
inc
mov
bound
setl
pop
sub
cs
dec
pop
add
adc
imul
leave
repnz
imul
and
mov
testb
sub
sbbl
hlt
add
mov
and
push
pop
rcll
dec
mov
enter
inc
cmp
subb
inc
data16
test
clc
lcall
rcrb
fldl
push
mov
fists
insl
add
xchg
inc
test
sub
fbld
les
mov
scas
sbb
inc
aam
stos
mov
cs
inc
or
xchg
mov
rclb
or
ss
insl
sub
sub
sbb
cs
and
pusha
push
mov
xchg
data16
int
or
scas
adc
mov
xor
pop
inc
cmpsl
mov
jp
test
mov
icebp
fbstp
add
movsl
aam
adc
pop
aad
movsb
sar
adc
push
xchg
cmp
mov
jno
rcrb
fsts
and
movsl
into
adc
data16
sub
pop
in
mov
lds
add
bound
xchg
push
fldl
shll
add
pop
and
and
mov
js
orb
xor
adc
jo
add
or
adc
rclb
push
das
cmp
pusha
jge
lock
adc
rolb
shlb
push
xchg
cmp
data16
mov
outsl
xchg
test
stos
adc
sub
and
cmp
push
lods
es
pop
sahf
or
mov
rcrl
ror
test
cmp
xchg
sarl
sarb
jbe
int
rcrb
and
sub
add
ret
and
mov
lock
ss
add
ljmp
add
mov
or
popf
mov
push
jo
shrl
movsb
ret
cmp
les
cmp
jno
add
sarb
sbb
fwait
add
rol
add
and
and
cmp
push
xor
aad
inc
or
sub
and
test
mov
in
or
push
push
aas
call
cmp
test
add
add
add
push
cmp
inc
mov
nop
cmp
cmp
cmp
fwait
dec
sbb
inc
xchg
pusha
int
rclb
cld
hlt
outsl
adc
adc
cmp
pop
cmp
add
and
jmp
add
mov
test
and
cld
outsl
dec
lods
mov
rorb
pushf
sbbb
pop
cs
test
cmp
js
fadd
imul
add
push
xchg
xorb
dec
xchg
mov
push
and
and
cmp
cwtl
add
clc
add
adc
xor
add
les
add
add
sbbb
jp
add
mov
push
sbb
pop
mov
cmp
hlt
shll
inc
out
add
or
pusha
lret
test
into
js
sub
lcall
insb
cltd
in
add
cmp
sbb
sahf
adc
data16
push
mov
adc
dec
xor
andb
and
jo
adc
loopne
cmp
push
loopne
mov
pop
aam
adc
or
fwait
ret
orb
in
add
leave
lret
shrl
sbb
adc
inc
pop
popa
ja
mov
dec
andb
cmpsb
mulb
and
or
inc
mov
dec
movsl
add
sbb
push
cmp
lock
sub
inc
das
mov
and
test
sbb
test
dec
rolb
repz
inc
adc
das
adc
fcoml
dec
inc
test
movsl
or
lcall
add
mov
cs
add
push
shll
add
sub
or
inc
xchg
mov
push
or
and
inc
or
pop
push
sbb
or
or
cmp
ret
add
inc
cmc
outsb
add
enter
push
aaa
xchg
cmpsb
jb
and
sbb
mov
and
add
sbb
popa
mov
sub
dec
repz
lock
cmp
movsl
fwait
inc
orb
mov
sub
mov
ret
cmpb
dec
dec
clc
add
addl
loop
xchg
xor
sbb
fstp
out
loop
cmp
mov
ret
test
cmp
add
ljmp
pop
inc
call
lcall
loope
mov
movsb
addl
and
jg
orb
jl
and
jl
cld
sbb
adc
add
xchg
rorb
hlt
movsl
ret
add
adc
pop
std
add
js
inc
cmp
xor
ret
cmpl
mov
in
pusha
xlat
push
mov
roll
mov
xorb
inc
ja
cmp
sbb
inc
mov
inc
sub
add
push
push
out
sub
out
push
addl
dec
js
ljmp
cmp
add
lods
rol
adc
or
fildll
fdivl
lock
or
sub
gs
cmp
rolb
subb
cmpsb
pop
and
in
inc
nop
ljmp
aaa
rcrb
out
or
pop
push
cmp
jbe
and
es
outsl
ss
inc
orl
or
fstl
adc
and
shlb
xchg
ljmp
cld
subl
andl
loopne
cli
mov
cmp
push
or
ficompl
jle
and
push
mov
andl
xchg
add
test
sub
mov
mov
pop
sti
rcrl
xchg
or
ljmp
mov
cld
inc
inc
jge
or
subb
jg
aad
loope
scas
sbb
sbb
cmpsl
push
mov
aam
hlt
inc
xchg
push
or
aam
adc
pop
test
cmp
add
push
mov
shr
iret
add
loopne
sar
mov
push
xchg
loop
pusha
xorb
out
mov
movsl
in
jg
sbb
adc
jg
fistl
jne
nop
ss
loop
cmp
mov
ret
das
ret
or
add
or
loopne
and
lock
mov
jmp
inc
xorb
pop
and
mov
gs
and
pop
fucom
iret
cmpb
cld
loope
out
aaa
insb
ds
jle
loopne
mov
xor
icebp
mov
inc
ret
pusha
add
loope
outsb
push
inc
push
xor
cmp
pop
push
cwtl
push
jmp
fs
shl
ljmp
ljmp
loope
mov
ljmp
pop
mov
test
rolb
pop
pop
dec
clc
sub
mov
mov
nop
sbb
cmp
mov
addb
mov
inc
ret
movsb
fbld
add
mov
fldl
clc
push
jge
std
nop
mov
and
das
test
or
sub
xchg
stc
pop
push
push
cmpsl
subl
je
sub
sbb
sbb
enter
dec
fiaddl
rorb
ror
mov
or
scas
push
cld
inc
pop
and
push
cli
adcb
mov
sbbb
push
mov
add
inc
into
add
sbb
push
scas
add
add
mov
ficomps
dec
inc
mov
pop
jb
jp
sti
push
mov
xlat
inc
popa
xchg
movsb
xor
mov
test
and
adc
xchg
aam
aaa
jl
inc
or
and
xchg
das
push
andl
pop
lea
je
and
shlb
adcb
ss
mov
pop
movsb
add
or
fistpll
push
call
rcrb
push
sbb
loope
pop
icebp
or
test
imul
add
cmp
rclb
rcrb
cmp
mov
dec
fs
sbb
pop
pop
jmp
jno
jne
pop
loopne
lock
mov
fstl
cmpsl
or
push
cmp
push
nop
pop
jg
mov
add
xor
push
adc
shll
inc
shlb
sbb
xchg
adc
nop
jb
pushw
je
mov
sahf
decl
jmp
sbb
cmp
push
add
out
icebp
add
sub
or
lret
stos
add
fistl
inc
push
lds
jae,pt
cmp
lock
adc
xchg
xchg
add
mov
fcmovnbe
cld
call
lods
xchg
adc
cmp
xor
xchg
rclb
pop
mov
sub
insb
jo
mov
ret
imul
sbb
scas
cmp
xor
push
and
mov
adc
fwait
mov
aad
or
xlat
pop
mov
push
incl
fabs
push
pop
cltd
frstor
jne
mov
clc
mov
cmp
addl
cltd
movsl
jmp
pop
insl
mov
add
and
add
mov
inc
inc
sub
icebp
int
sbb
xor
cmp
pop
mov
or
les
push
adc
xor
jg
shrb
sbb
mov
cmp
sub
cmp
test
rcrb
mov
aaa
sbb
rorl
dec
js
pop
and
cld
das
insb
adc
and
mov
cmp
dec
jmp
adc
or
aam
add
daa
xchg
cmp
mov
stc
fimull
adc
xchg
mov
cmp
shll
das
adc
pop
sub
mov
aad
rcrl
add
xlat
inc
cmc
pop
fsts
mov
push
sub
clc
add
pusha
les
adc
jnp
mov
test
xor
jo
adc
xchg
loopne
lahf
fxch
cmp
lea
add
enter
pusha
add
mov
ret
insl
call
cmp
aaa
adc
jp
imul
nop
mov
lahf
pushf
add
pop
xchg
jb
ja
push
push
jle
inc
enter
sbb
sub
hlt
outsl
bound
fistps
pop
shl
inc
lock
xchg
push
mov
scas
fildll
adc
das
idivb
push
sub
movsb
push
adc
and
inc
xor
or
into
mov
cmp
rol
mov
inc
ja
insl
dec
or
and
and
out
xchg
sti
jo
fsubrl
int
bound
or
push
cli
int
lods
ret
movsb
testl
std
push
stc
and
cmp
mov
loopne
test
insl
cwtl
inc
add
or
loopne
clc
jle
adc
and
push
insb
pop
ret
call
jbe
cs
ljmp
cmp
cwtl
mov
xchg
clc
aad
add
mov
jecxz
jg
movsb
rclb
les
icebp
cmp
cli
adc
sbb
add
mov
addl
dec
cmp
notl
cmp
bound
gs
rolb
push
xor
jo
cmpb
dec
aam
dec
rcrb
add
add
cli
adc
roll
push
push
xor
scas
std
incl
adc
rcr
adc
rcr
adc
sub
xor
push
cmp
or
movsl
shll
sahf
adc
add
imul
sbb
mov
dec
subb
or
mov
adc
add
in
and
mov
or
pop
ja
shlb
cmp
je
inc
in
add
xor
mov
sbb
subb
mov
cs
push
pop
inc
jp
jno
pop
lods
sbb
sbb
fs
rorb
lret
ret
int3
dec
xor
pushf
cs
je
test
nop
movsb
push
loopne
aam
cmp
push
fmul
push
pop
inc
add
mov
mov
cmpsb
xchg
orl
mov
sbb
push
inc
sarl
adc
pop
add
or
and
adc
pop
sbb
fiaddl
add
fisttps
call
ss
mov
in
adc
movsb
aad
sarb
add
cmp
roll
fs
and
sbb
ret
mov
sbb
or
jno
aam
adc
outsl
rcr
dec
and
loop
fildl
mov
xor
fucom
push
sbb
mov
add
jge
loop
add
movsb
mov
aam
rclb
add
and
lcall
lock
pusha
les
testb
mov
test
xchg
loopne
mov
pop
push
mov
inc
xor
pop
push
lcall
mov
and
icebp
mov
jno
nop
cmp
cmc
jo,pn
mov
jne
add
add
push
add
jg
dec
inc
and
mov
stc
orb
mov
xchg
inc
repnz
add
pop
in
mov
adc
cmp
push
bound
mov
pop
and
mov
jle
push
push
sbb
push
add
fmull
inc
leave
and
push
nop
sbb
and
fiadds
jg
mov
lock
mov
and
pop
mov
pop
inc
xor
outsl
jb
pushl
les
add
pop
aam
bound
cmpsb
mov
add
add
and
rorb
and
adc
rorl
mov
fsubs
pop
add
addl
aam
cmpsl
lcall
push
add
es
mov
mov
ret
dec
mov
jp
mov
movsb
ret
out
fcomps
pop
mov
fcmovu
repnz
add
fdivl
mov
shll
fadds
cld
push
cld
dec
inc
push
sbb
or
cli
xor
bound
cmc
sub
pop
cmp
push
outsl
cmp
rclb
and
adc
adc
adc
rorb
in
and
adc
clc
pop
cwtd
cltd
xor
mov
or
cld
arpl
inc
mov
cltd
ret
outsb
faddl
xchg
add
xchg
call
xchg
loopne
insb
test
and
and
sub
add
mov
rclb
mov
inc
xchg
mov
out
xchg
popa
fisubrl
fcmovbe
add
adc
add
cmp
repz
and
lret
clc
out
add
push
adc
ficoml
je
jl
loop
sub
das
add
out
sahf
aam
cli
sub
repnz
add
or
js
xchg
test
cwtl
and
and
loop
outsl
add
xchg
les
sbb
inc
jl
ret
lret
fsubrs
add
and
and
or
or
in
adc
sbb
pushf
and
push
push
int3
ret
push
xor
jmp
data16
add
fadd
cmp
pushf
ret
filds
cwtl
push
xorb
push
fimuls
sub
inc
fstl
aad
and
aad
push
push
sbb
sbb
and
sbb
addb
cmc
shr
sbb
pusha
inc
xor
test
pop
mov
adc
fldcw
test
mov
outsl
mov
pop
add
mov
jo
clc
daa
test
les
adc
jbe
and
lods
std
or
leave
cmp
add
xchg
dec
inc
inc
add
loope
loopne
rcll
push
loopne
add
out
xor
sbb
aam
adc
mov
sub
xchg
outsl
jp
add
adcb
cmp
addb
jg
lds
push
mov
add
mov
push
push
sbbb
mov
push
and
add
adc
mov
sbb
call
fisubl
mov
call
ljmp
push
fcoms
xchg
aad
mov
adc
push
mov
icebp
xor
sahf
int3
add
mov
sbb
jae
push
cmp
add
aas
mov
fiadds
rcrb
add
add
pop
lds
or
xor
jp
or
jg
pushfw
xor
shrb
mov
dec
loopne
add
push
add
push
das
xor
sub
pop
mov
into
add
cli
mov
push
inc
sbb
adcb
push
inc
ds
add
loop
imul
jo
mov
mov
shll
enter
add
pop
shr
adc
in
add
jle
sub
bound
mov
push
add
adc
pop
jl
loop
mov
mov
fst
movsb
rcrb
popf
hlt
fistpll
stos
mov
ljmp
aam
aaa
sti
outsl
pop
xor
xchg
popf
inc
addr16
repnz
add
rclb
fsts
xchg
add
sahf
fidivl
incl
imul
add
cld
or
int
ret
xchg
fsubrl
fdivrl
xorl
incl
int
cmp
push
cmp
cmp
mov
xchg
nop
aaa
adc
cmp
mov
sarl
clc
scas
cli
in
push
push
loopne
sub
orb
sbb
cld
inc
pop
movsl
mov
movsl
es
lods
add
or
movsb
mov
callw
icebp
outsl
jo
jp
imul
addr16
ja
xor
orb
loope
pop
xchg
loopne
mov
data16
or
adc
push
jbe
xchg
nop
xchg
loopne
mov
movsl
add
test
outsb
inc
sti
inc
rcll
stos
mov
cli
sub
dec
addb
fldl
inc
push
cmp
popa
mov
mov
dec
arpl
insl
shll
out
xlat
xorb
inc
dec
loop
in
clc
jg
mov
aad
cli
movsb
add
xchg
pop
adc
loope
movb
push
cmp
adc
inc
loope
add
lods
cmp
scas
add
adc
movsl
or
mov
and
and
adc
push
sub
xor
xor
std
cld
in
outsl
mov
mov
mov
rcr
rorl
dec
push
adcb
jnp
shl
inc
adc
xchg
cmp
pusha
add
push
dec
cli
ja
cmp
inc
sub
or
int
clc
and
add
hlt
sbbb
ffree
es
mov
adc
sub
cltd
inc
psraw
lds
loop
adc
ud0
lock
or
jo
movsb
scas
call
mov
cmc
test
jg
in
or
int
decl
lret
push
cmp
ljmp
sbb
sbb
fmul
sbb
pop
add
add
bound
inc
mov
test
cmp
jne
xor
or
inc
les
pop
imul
in
sub
pop
ret
clc
sub
sbb
xchg
imul
movsl
pop
dec
gs
xchg
in
cmp
pop
ljmp
movhps
mov
and
loopne
mov
vsubps
xchg
test
push
cmp
and
inc
xor
cmp
loope
add
mov
in
mov
cmp
jnp
shrl
add
xor
mov
pop
loopne
dec
les
decl
mov
mov
xor
pusha
xor
dec
cld
loopne
inc
int3
add
mov
jmp
mov
out
xor
inc
add
pop
test
cmpsb
mov
mov
mov
add
mov
ret
insb
shl
aad
call
cmp
ja
mov
jp
adc
daa
mov
xor
sbbb
sub
loope
cli
lods
pop
inc
int3
ret
or
jp
mov
rclb
mov
or
scas
mov
movsb
pop
sbb
imul
ljmp
loope
add
add
push
fcomip
fiaddl
ljmp
adc
loopne
xor
movb
pusha
mov
stos
or
push
or
and
repnz
cli
ss
and
pop
mov
add
sti
loopne
cmp
xor
inc
mov
pop
shlb
fdivs
and
nop
mov
mov
xor
nop
repnz
stc
pusha
or
pusha
mov
xorb
xor
adc
add
adcb
mov
cltd
filds
mov
cmp
mov
mov
pop
mov
jp
rolb
mov
test
and
out
xchg
jmp
scas
hlt
xor
mov
ret
add
adc
mulb
jne
in
aam
lods
clc
and
das
adc
push
inc
fsin
incl
stos
xchg
cmp
or
xchg
add
pop
sbb
popf
orb
flds
and
jge
and
mov
xchg
xor
addl
scas
cli
pop
lcall
nop
add
pop
shlb
xor
cmc
pop
je
xchg
aad
bound
andb
xchg
lock
and
push
cmp
and
inc
aad
inc
call
aaa
ret
and
loope
mov
xchg
ret
push
add
mov
ret
push
mov
sub
outsb
inc
add
push
sbb
dec
jecxz
or
adc
and
cmp
and
add
ficoms
xchg
and
shlb
in
jecxz
sbbl
inc
pop
loopne
decb
shlb
sbb
xor
inc
mov
xchg
cmp
ja
push
std
subb
xor
in
aam
cmp
sbb
clc
aaa
xor
add
dec
frndint
fiadds
cltd
and
scas
test
inc
and
lahf
test
fbld
xchg
pop
ret
or
pop
lahf
xchg
add
and
addr16
outsb
inc
mov
xchg
and
xor
movsb
rorb
adc
test
lock
cs
jg
icebp
das
sarb
cmpsl
push
mov
add
nop
nop
sub
adc
test
sbbb
mov
jl
stos
adc
movsl
ljmp
pop
inc
aam
adc
js
lea
cwtl
mov
aam
mov
in
cld
add
lods
or
add
fidivrs
inc
xchg
or
in
orb
adcb
ror
inc
or
pusha
pcmpgtb
das
xchg
xor
mov
lods
shrb
nop
sbb
shr
adc
push
xchg
fucomp
inc
add
pop
pusha
cli
add
sti
inc
add
mov
js
loopne
repnz
adc
add
sarb
xor
fldl
xchg
in
outsl
mov
mov
movsl
sub
sti
sbb
add
push
repz
jmp
in
std
xchg
fimuls
and
daa
xchg
enter
call
pop
push
sub
sub
sbbl
sbb
mov
adc
xchg
jb
cld
cmp
int
push
pop
or
sbb
inc
mov
incl
cmp
lret
cmp
test
repnz
push
inc
push
adc
adc
xor
dec
mov
aas
and
fstps
mov
xchg
shlb
filds
dec
cmp
sbb
and
sbb
cli
ljmp
push
ficoml
fldl
pusha
add
mov
xor
mov
xor
jg
nop
in
rorb
and
rclb
movsb
and
fst
cmpsb
nop
lods
cmp
jle
xchg
add
cmp
pop
adc
adc
inc
pop
sbb
pop
mov
sub
in
inc
cmpb
shr
int
pop
js
mov
add
xchg
cmp
cld
or
outsl
dec
mov
pop
adc
ret
outsb
mov
or
add
adc
and
addb
in
sub
addb
sarb
mov
adc
xchg
add
inc
loopne
fisttpl
mov
inc
pop
or
sbb
xchg
mov
add
add
nop
jno
or
sub
push
cmp
fiaddl
lods
and
clc
sub
or
inc
add
mov
xchg
cli
aad
push
mov
ljmp
mov
mov
subb
push
add
push
add
pushf
movsb
add
jg
cmp
nop
sbb
aad
dec
push
jmp
loopne
mov
ljmp
test
jb
push
cs
xor
mov
rcrb
mov
mov
sarb
or
lea
gs
fwait
dec
cld
mov
shrb
xchg
add
add
sbb
sub
and
test
cmpsb
rclb
cmp
xor
dec
pusha
in
push
nop
adc
push
cmp
fsubr
inc
mov
jb
push
test
pop
fildll
adc
sbb
push
inc
sub
cs
sub
and
sbb
sub
andb
ret
lds
lret
repnz
nop
jns
add
nop
dec
and
mov
add
mov
xchg
call
cmpsl
ret
adc
add
inc
xor
and
adc
cmc
daa
inc
mov
push
ret
mov
push
or
push
dec
jo
shll
stos
mov
ljmp
adc
sub
bound
pop
inc
or
and
sbb
sbb
push
push
movsb
sub
mov
push
push
inc
push
addr16
push
xor
cmp
pusha
cmp
test
mov
adc
pop
or
inc
push
loop
stos
call
es
jle
loopne
add
xchg
and
or
add
mov
mov
fldt
and
shlb
cmp
push
loope
clc
outsl
cli
aas
xchg
sub
mov
cmp
or
mov
icebp
push
movsb
lahf
sub
andb
mov
test
movsl
pop
pop
mov
inc
mov
call
jp
and
jnp
in
mov
cs
xor
pop
ljmp
and
loopne
outsb
cmp
rorb
or
ja
push
incb
jg
and
jmp
xor
repnz
mov
mov
fsubr
ljmp
jg
call
iret
and
into
mov
inc
rcrb
aad
scas
mov
mov
loopne
sub
ficompl
inc
push
cmp
xchg
loopne
sub
pop
js
cmc
add
jne
stc
or
lods
repz
loop
push
sti
lahf
les
movsb
cmp
inc
pop
jp
popa
add
mov
call
mov
sub
mov
add
push
xor
or
xor
and
mov
lock
adc
sbb
mov
xor
and
push
cmp
dec
xchg
inc
jle
lea
adc
cmpb
adc
lret
addb
fldl
cmp
lea
jno
hlt
mov
nop
xchg
adc
test
cs
fsub
addl
add
add
data16
jmp
add
add
orl
adc
mov
outsb
add
or
call
icebp
push
loopne
add
shrb
push
call
ret
add
pop
add
xchg
xchg
and
incl
orb
movsl
mov
mov
jle
scas
mov
and
jp
popa
xchg
push
es
and
xor
mov
jbe
dec
sti
rolb
jp
lds
and
shlb
push
rolb
sbb
xchg
cmp
push
add
test
add
addb
lcall
aad
scas
loopne
mov
and
testl
dec
ret
or
mov
outsb
loop
xor
push
bound
cmpsb
add
xchg
call
inc
outsl
cwtl
mov
popa
push
pusha
cmc
in
test
adc
ret
bnd
adc
push
xor
inc
and
push
enter
subb
cmc
cmc
pusha
push
pop
sub
or
leave
cmp
int
or
adc
push
mov
cmpl
xchg
dec
lock
mov
fcoms
jmp
inc
pop
sbb
stos
addl
adc
push
in
sbbb
cmp
add
adcb
rolb
add
mov
mov
xchg
lods
inc
dec
and
jnp
mov
add
mov
hlt
push
add
aad
mov
mov
mov
repz
fimull
pushl
data16
pop
or
inc
adc
fimull
or
mov
sub
add
mov
in
cld
or
movsl
fsubrp
rol
xchg
dec
adc
push
pushf
sahf
and
add
mov
sbb
push
inc
sub
int
pop
sarl
dec
inc
add
dec
mov
mov
add
and
test
daa
rorb
pop
fmull
push
or
xchg
push
aad
xchg
lea
and
cld
shrl
add
pop
aad
xor
mov
movsl
pop
sbb
cmp
mov
sbbb
loopne
add
fldt
lea
rolb
add
orb
fiadds
ja
xorb
push
mov
or
ficoml
mov
inc
stc
ljmp
push
cmc
lds
pop
mov
inc
sbb
test
mov
fisubrl
mov
mov
cmp
cmpb
add
adc
inc
fcomps
pop
inc
lret
leave
lock
pusha
sbb
inc
add
or
add
clc
sub
shlb
add
js
and
sub
inc
jno
das
dec
ret
lods
mov
rolb
add
ret
enterw
fistpll
or
sbb
stos
adc
fdivr
adc
xchg
sub
fdivl
mov
loope
ss
lret
hlt
adc
insb
ficoms
and
das
dec
je
and
cmp
mov
std
mov
sbb
adc
dec
test
push
cmp
mov
outsb
rolb
loop
fucomi
insb
and
out
out
out
pusha
sub
adc
inc
push
add
pop
pop
gs
lods
mov
int
inc
movsl
cld
add
out
adc
loopne
mov
filds
push
lret
inc
arpl
adc
cmp
int3
loopne
or
mov
adc
jg
das
sbb
adc
leave
faddl
movsb
cmp
cmp
leave
dec
mov
orl
les
jnp
xchg
add
cmp
bound
inc
or
pop
addb
adc
outsb
test
dec
loopne
and
mov
ret
data16
mov
adc
jecxz
push
xchg
inc
popa
xor
loopne
adc
cmp
cmpsb
sub
icebp
fcoms
orb
rcrb
aam
and
xchg
xchg
rcrb
xor
outsb
push
pop
pushf
adc
loope
mov
mov
xchg
sub
xchg
xchg
xchg
popa
loopne
add
mov
dec
push
dec
and
scas
repz
ja
loope
jnp
mov
jbe
pop
adc
adc
and
mov
loopne
out
mov
mov
adcb
adcb
adc
add
outsl
loope
lock
out
faddl
and
lods
fmuls
and
xchg
xchg
adc
pop
xchg
adc
xchg
mov
push
pusha
aaa
int3
cmp
lock
movsb
push
add
and
sub
add
and
aam
ljmp
push
add
out
push
adc
loopne
or
xchg
cmpsb
cmpsb
push
incl
cmp
or
inc
push
xlat
rolb
test
mov
inc
outsl
jg
hlt
jbe
sbb
lods
adc
sahf
add
and
cld
inc
add
sbb
add
inc
mov
shlb
sub
loop
cs
cld
ja
jo
sub
jecxz
cmc
push
loopne
shll
notb
mov
roll
mov
pop
aad
shl
and
clc
or
cmp
mov
mov
mov
and
daa
push
add
imul
cli
loope
shlb
ret
sub
testb
lret
xor
adc
push
add
loopne
orb
adc
lahf
int3
mov
sub
adc
rcll
andl
aaa
jl
loopne
dec
add
add
and
fcom
jl
adc
xor
jbe,pn
push
add
or
pop
jb
xchg
and
lds
fistl
pop
fiaddl
sbb
shll
cmp
xor
clc
cmp
das
jo
xor
adc
pop
inc
xchg
sbb
clc
pop
and
add
add
and
mov
xchg
pop
int3
xor
push
xor
inc
mov
lods
mov
ffree
decl
cmp
fcoms
sbbl
cmpsb
popa
and
pop
mov
and
add
cmp
and
jmp
int
adc
call
inc
jno
fsts
sbb
push
or
into
mov
in
and
add
push
rcl
in
add
mov
push
push
xchg
dec
mov
lahf
add
movsb
jb
es
pop
andl
add
cli
adc
and
lock
cltd
mov
mov
cmp
ljmp
pop
xorl
sbbb
test
adc
fwait
jmp
jle
xlat
pop
les
adc
and
adc
iret
mov
aam
aam
inc
push
es
cmp
repnz
add
js
mov
sub
sahf
and
add
or
pop
out
imul
fsts
or
adcl
mov
cmp
push
mov
inc
xorb
fst
nop
push
icebp
dec
push
adc
mov
inc
shlb
push
sub
xor
xor
dec
aam
sbb
popa
sbb
mov
and
inc
xor
shr
lds
or
incb
sub
das
add
std
push
push
adc
mov
pop
sub
xor
jl
ds
aaa
add
xchg
lcall
in
das
mov
xorb
pop
sub
or
pop
and
inc
add
daa
jecxz
call
roll
pop
pop
pop
ss
ljmp
sbb
loope
pop
rcrl
adc
data16
jb
pop
fucom
loop
push
adc
push
cmp
xor
xchg
pop
dec
pop
popa
lock
cmp
fcomps
pop
pushf
push
add
fwait
test
adc
ljmp
into
test
scas
pushf
adc
jp
lahf
sti
pop
ret
call
cs
inc
sbb
and
add
ljmp
mov
or
cmp
add
adc
adc
and
testl
adcb
fimuls
enter
pop
mov
add
fmuls
fsubrl
mov
mov
in
test
pushl
push
or
movsb
pop
lods
pusha
sub
inc
add
mov
add
aam
add
mov
or
push
into
movsb
ret
dec
adc
dec
xchg
nop
cltd
push
jmp
or
jmp
adc
xor
cs
mov
mov
lds
dec
mov
xor
jp
mov
loopne
cmp
add
adc
mov
push
lods
pop
fistps
and
and
movsl
mov
inc
xchg
pusha
or
out
push
xchg
or
lock
call
out
cmp
dec
and
jl
push
test
add
sbb
or
add
or
and
adc
adc
push
cmp
xor
xor
stos
add
add
test
inc
loope
push
roll
adc
inc
stos
sbb
int
push
aam
add
cmpsl
imul
jmp
jg
sub
xor
mov
movsb
add
inc
adc
cmp
nop
push
cmp
add
data16
adc
jno
je
pinsrw
add
aad
mov
shrl
cmp
ret
movsl
les
mov
adc
sub
adc
rcll
mov
mov
in
add
gs
ljmp
or
ja,pn
loopne
clc
jmp
push
icebp
sub
or
lret
cmp
or
enter
mov
cmc
scas
xchg
lock
adc
cmp
mov
in
inc
cs
sahf
add
cmp
aad
or
sub
mov
mov
stos
xchg
dec
jp
dec
out
mov
mov
cs
xchg
add
dec
fs
cmp
sub
jg
inc
adc
and
add
add
pop
sub
insb
pusha
adc
fmuls
test
push
adc
and
pushf
push
jo
sbb
dec
fnstenv
popa
jle
mov
es
mov
int3
push
sbb
add
scas
inc
inc
add
push
dec
push
adcb
and
mov
cmp
add
subb
push
and
rclb
repz
fisubrs
add
cli
and
jmp
and
xchg
and
in
xor
movsl
aas
cmp
nop
andb
shl
add
xchg
sahf
inc
sbbl
ret
push
lock
popa
int3
jbe
sub
push
or
in
into
cli
sbb
nop
clc
and
lods
rcrb
and
mov
iret
jb
xor
cs
fwait
xchg
mov
or
fsubrs
cmp
or
or
rorb
pop
pop
pusha
outsl
aad
sti
or
addr16
rorb
lock
add
cli
and
movsb
lea
adc
movsl
test
add
push
and
icebp
idiv
xchg
iret
or
or
xchg
push
int3
ret
jp
sti
ljmp
jle
insl
and
addb
cmp
or
or
add
fcoml
and
data16
mov
sub
inc
ss
mov
or
jle
mov
xchg
ret
cmpsl
icebp
pop
dec
bound
or
cmp
adc
or
sub
clc
cmp
fldcw
push
pop
pusha
and
ret
mov
sbb
jge
sbb
push
push
xchg
das
shrb
or
jo
add
add
loopne
xor
jns
or
jp
dec
jmp
pop
xchg
out
add
not
incb
jp
and
cmp
or
add
data16
or
dec
add
cmp
push
pop
add
add
insb
clc
add
push
stos
jg
lods
add
push
adc
cmpsl
mov
mov
shrl
lock
ret
sub
cs
int
loopne
jbe
inc
push
mov
sub
sbb
adc
nop
push
daa
test
add
and
add
sub
mov
push
and
sarl
dec
adc
call
mov
adc
or
adc
jle
sub
push
and
mov
dec
add
testb
push
xchg
stos
and
loope
xor
sbbl
aam
adc
add
jmp
xchg
rep
and
cmp
movsl
fimull
lea
pusha
test
test
adc
and
push
rorl
mov
sbb
cmp
in
add
movsl
fsubr
cmp
ficomps
mov
xchg
add
fwait
sbb
ljmp
push
jmp
pop
insb
jecxz
dec
xor
nop
pop
inc
addb
mov
xchg
int
roll
icebp
add
xchg
into
xorb
add
jge,pn
cmpsb
push
cmpsl
sub
sbb
add
cli
push
sub
sub
xor
outsl
add
add
ljmp
pop
add
leave
dec
lea
or
mov
shll
push
cwtl
xchg
sbb
push
aaa
mov
sub
scas
xchg
decb
sub
int
jmp
movsb
ret
ss
addb
adc
rcrb
shlb
cwtl
movb
adc
pusha
int
xchg
add
adc
movsl
xchg
add
fldenv
loop
jg
inc
enter
adc
add
fwait
addb
push
adc
cmp
hlt
sbb
inc
mov
sub
mov
or
cmp
mov
and
jmp
movsl
sarb
lock
pop
push
sub
mov
lahf
pop
or
andb
call
inc
mov
hlt
imul
and
fistpl
mov
adc
fwait
and
xchg
roll
push
aad
test
add
pop
xchg
mov
pop
add
rolb
add
dec
mov
mov
cmpb
movsl
movsl
add
enter
mov
pop
add
aad
sub
jmp
addb
inc
pop
and
test
cmp
pop
cs
rclb
cli
sub
cmp
adc
clc
push
mov
incl
sbbb
adc
push
push
xchg
mov
movsb
inc
je
test
fst
leave
pop
shlb
cmc
ljmp
mov
nop
mov
ret
add
test
or
insl
sub
stos
bound
sti
mov
lahf
mov
andl
ficomps
push
jbe
sti
or
stos
icebp
push
cmp
mov
sbb
lods
and
leave
addl
call
insb
xor
movsl
lea
xor
cli
jg
mov
sbb
rolb
movsb
cltd
or
or
add
fildll
testb
xor
sbb
aam
jg
ljmp
cmpsb
xor
pushf
int
loop
popa
pusha
adc
add
hlt
mov
inc
jne
movsb
cmc
out
icebp
mov
push
xchg
jp
jb
orl
or
pop
xor
pop
pop
sbb
xor
or
add
stc
sub
and
or
or
fsubrl
std
adc
push
daa
decl
daa
xchg
cmc
loopne
mov
faddl
pusha
por
and
dec
les
cmp
push
subb
mov
sub
pop
push
jle
ficomps
fadds
and
add
cwtl
imul
push
sbb
adc
in
sbb
dec
sbb
stos
pusha
push
out
push
pop
and
push
ret
mov
or
mov
push
jg
ja
push
ljmp
gs
loop
xor
rolb
pop
push
pop
dec
jecxz
shl
pop
mov
ret
cmp
and
pop
pusha
adc
ret
sub
push
inc
xchg
xor
out
std
andl
add
es
pusha
or
add
loopne
push
cmc
stos
hlt
jg
sbbb
shrl
or
shrl
popf
xchg
add
movsl
xchg
xchg
or
outsl
loope
test
lock
mov
cltd
loop
xchg
incb
movsb
hlt
inc
pusha
sbb
orl
cmp
sub
sbb
inc
dec
push
faddl
add
push
pop
add
add
adc
clc
jg
or
push
pop
aad
loope
add
aad
xlat
mov
mov
sar
push
adc
jecxz
jecxz
add
cltd
xor
cmp
adc
adc
add
mov
or
clc
in
jg
mov
mov
add
fidivs
sub
loopne
mov
sub
and
and
mov
sbb
orb
sbb
and
pop
pop
inc
sbb
test
or
lcall
and
pop
push
imul
movsb
inc
lds
mov
test
mov
pop
rcrb
xlat
loopne
jge
sub
call
inc
sbb
fistps
xor
and
ss
jecxz
jmp
fdivp
mov
out
inc
pushf
fldenv
pop
and
outsb
scas
add
fistpl
or
sbb
or
push
push
cld
or
sahf
or
mov
insl
int3
test
test
and
rclb
fstl
pop
push
cmp
mov
lahf
movsb
add
or
push
jecxz
fdivl
adc
pop
test
xor
pop
and
pop
sub
pop
add
add
sub
pushf
and
adc
adc
xor
jo
cmp
cmp
xlat
ficompl
pop
sbb
roll
adc
shll
jmp
add
push
add
pop
lock
movsb
and
sti
sbb
loopne
and
jo
push
mov
push
push
xchg
fld
mov
pop
leave
pop
mov
add
push
pop
cltd
adc
je
cmc
mov
add
fstps
add
inc
dec
fucomp
insl
daa
cld
in
shrb
ljmp
mov
pop
call
mov
push
mov
sbb
movsb
ljmp
ret
adc
xchg
pop
pop
and
sahf
cmpsb
push
push
je
push
xor
push
add
cmc
xor
fiadds
and
mov
incl
pop
sub
xchg
sbb
popf
les
xchg
push
sub
add
addb
lods
jg
sub
sub
ret
stos
test
adc
xchg
sub
or
pushf
sub
xor
cs
fistl
ss
pop
push
sbb
aaa
push
call
add
jle
pop
or
add
in
call
dec
mov
lods
push
andb
mov
and
mov
flds
jo
pop
not
push
jo
inc
icebp
jg
push
nop
sar
or
pop
fwait
inc
and
or
xchg
cwtl
mov
les
mov
adc
cmpl
sub
push
lods
sar
sub
loope,pn
rcrl
xchg
mov
xor
daa
adc
cltd
add
add
add
and
jo
loopne
icebp
jg
cmp
and
and
mov
fists
pushl
pop
sub
enter
sbb
push
pushf
cmc
sub
cs
shll
iret
adc
pushf
nop
aad
and
xchg
sahf
dec
push
inc
sbb
pop
shll
shll
shl
rorb
int
lret
sti
and
fcompl
sbbb
or
fidivrs
shl
or
shlb
bound
loop
pop
dec
xor
fistps
aaa
ficoml
or
imul
mov
insb
nop
adcb
jmp
or
and
add
adc
ret
ficompl
dec
nop
bound
dec
add
pushf
jae
pop
inc
movsb
jbe
inc
ret
dec
push
jmp
or
jecxz
add
cld
sub
insb
cmp
xchg
inc
fbstp
cmp
add
mov
call
inc
stos
jb
sub
das
mov
add
lcall
cld
or
int3
pop
loopne
cmp
stos
sbb
or
or
or
add
lret
pop
pop
push
fcmovnbe
cli
or
xchg
inc
add
adc
add
adc
lock
adc
cmpsb
pop
adc
add
pop
fisubrl
icebp
movsb
rcl
cmp
pushf
mov
movsb
popf
adc
adc
dec
push
or
push
nop
scas
sbb
xor
add
xor
push
xor
andb
sub
cli
fidivrs
push
fiaddl
push
adc
jl
popa
mov
mulb
xor
pop
and
lock
cmpsb
leave
and
test
xlat
add
xchg
icebp
pop
mov
cli
and
les
add
adcb
mov
or
jl
cmpsb
xchg
inc
rolb
fstps
xchg
xchg
test
mov
mov
rorb
ljmp
cmp
stc
popa
add
pusha
add
sbb
push
cmp
adc
push
es
adc
nop
stc
div
mov
inc
mov
lret
fildl
add
stos
mov
nop
add
xchg
add
push
es
jno
dec
xchg
jge
nop
popa
cld
fildl
add
sub
cmp
inc
cmp
push
data16
xchg
fisttpl
call
sub
jns
shll
push
push
sbb
iret
and
cwtl
and
cmp
sbb
push
push
xor
and
mov
es
cmp
pop
lock
inc
pop
cmc
in
ror
add
mov
add
mov
jl
into
test
jmp
gs
adc
lret
lods
inc
sub
cli
adc
pop
ret
push
je
cmp
insl
movsl
popf
es
add
mov
push
pop
mov
push
cmp
add
inc
ret
jg
cmp
movsl
stc
inc
add
add
inc
add
push
push
and
pop
xorb
cmp
mov
fmul
ficoms
cmp
xor
sbb
add
jp
or
add
inc
sbb
and
lret
push
pop
jo
lret
cmc
sbb
or
int
shlb
or
xchg
or
adc
mov
mov
mov
mov
jnp
or
mov
popa
sbb
cli
pusha
xchg
pop
add
mov
les
lea
xchg
mov
test
xchg
add
jge
mov
xchg
inc
das
adc
rcrb
xchg
enter
adcl
add
adc
adc
push
adc
movsb
aam
or
dec
stos
push
hlt
movsl
fcomip
cwtl
cs
push
or
and
lret
nop
xor
clc
dec
lcall
es
cs
filds
test
movsb
jl
int3
mov
sahf
les
add
lock
and
and
xchg
inc
xchg
ret
inc
inc
loopne
mov
movsb
fnstenv
push
rclb
add
ret
adcl
push
decl
xchg
add
or
inc
loope
pusha
sti
mov
mov
xchg
xchg
push
popa
mov
add
sti
jg
into
mov
or
aad
or
add
test
shl
cmp
mov
clc
lcall
pop
or
adc
push
aad
jo
mov
xadd
sub
push
sbb
sbb
adc
xchg
shrl
je
loope
outsb
sar
daa
loop
movsl
push
inc
rol
loope
add
add
scas
fwait
ret
cld
or
or
ret
loopne
jb
mov
xor
push
or
jo
mov
jns
xchg
adc
dec
push
inc
or
pop
add
adc
push
push
nop
loopne
sbbb
fcomps
xor
xor
dec
adc
add
dec
insb
aas
shlb
sub
fstps
xor
int
mov
fldl
xlat
ljmp
add
and
sbb
xlat
rolb
sub
push
lods
or
mov
sub
cltd
mov
lret
push
test
ljmp
or
clc
add
dec
es
inc
popw
sub
out
movb
decl
push
jo
push
mov
ljmp
jb
add
mov
or
adc
jmp
xor
cmp
mov
idivl
push
outsb
lret
int3
or
faddl
dec
stos
ret
xchg
xor
idivb
dec
xor
insb
ds
aad
pop
add
pop
loop
nop
add
adc
mov
add
xchg
loop
jae
or
mov
movsl
mov
xor
jo
sahf
hlt
xchg
ficoms
add
push
cmp
and
or
pop
cmpsb
and
dec
push
or
or
add
sub
sbb
inc
pop
xchg
pop
mov
mov
pop
pop
xlat
cmp
pop
xor
add
idiv
xor
inc
add
andl
mov
and
imul
in
or
add
mov
inc
insb
imul
js
add
cli
xchg
clc
leave
and
push
push
repnz
cmp
xor
and
inc
and
hlt
rcrl
scas
insl
outsb
stos
aaa
pop
bound
mov
mov
add
cmp
ljmp
sarb
adc
adcl
cs
cs
std
inc
inc
add
cmp
leave
cmpb
push
jp
jns
scas
icebp
push
add
sub
or
jecxz
loopne
cli
sbb
lods
xor
xchg
inc
fildll
cmp
xchg
or
out
push
rorl
and
add
mov
ljmp
inc
push
loopne
rol
add
add
pushf
cmp
push
inc
inc
pop
push
sbb
test
das
and
xchg
xchg
sub
adc
inc
sbb
bnd
pusha
jp
aaa
sarb
in
and
cmp
xchg
and
mov
ljmp
in
addb
mov
pushl
push
add
mov
test
push
inc
in
xor
xor
or
cmc
mov
jb
stos
inc
xor
adc
inc
mov
push
mov
push
stos
pop
les
popa
adc
sub
push
and
inc
mov
xchg
fildl
shlb
dec
push
mov
mov
icebp
rcrl
mov
and
decl
pop
xchg
popf
pop
pop
test
ficompl
sub
dec
gs
fidivl
or
nop
or
insl
incl
cwtl
pusha
mov
and
pop
jl
fisttpll
sahf
fsts
xor
xchg
fcom
mov
jmp
push
mov
mov
push
popa
loopne
or
adc
pusha
mov
mov
pushl
cmp
int3
orb
pop
mov
pop
andl
jmp
pushl
pop
push
imul
mov
inc
push
mov
clc
mov
rcll
loopne
xchg
inc
sar
cwtl
add
addb
aaa
loopne
mov
outsl
cli
add
test
or
mov
or
in
into
rolb
mov
and
xor
ret
push
shrb
push
sub
push
push
push
and
hlt
outsl
lret
pop
cltd
cmc
add
cmp
sbb
pop
iret
push
adc
shll
pop
sar
in
sub
adcb
lds
aad
test
adc
push
ljmp
pop
sbbl
and
je
lods
push
add
cmp
xchg
jecxz
add
adcb
cmp
and
or
mov
mov
je
stc
mov
ret
or
add
loopne
mov
mov
mov
cmpsb
adcb
mov
and
push
mov
inc
inc
mov
inc
in
pop
scas
cli
mov
addr16
push
dec
movsb
add
add
jl
ss
and
cld
add
mov
das
cltd
inc
inc
jmp
movsb
mov
adc
mov
inc
out
inc
mov
addl
sarb
pop
loope
lret
pop
enter
cmc
scas
clc
loop
daa
cmpb
rorb
push
cmp
xor
and
dec
pusha
adc
xchg
add
push
inc
push
ret
add
cmp
in
add
sbb
stc
test
mov
pop
andb
add
stc
test
and
cld
outsl
in
mov
push
sbbb
jae
dec
cmp
inc
mov
sbb
rcrb
xchg
imul
ljmp
xor
mov
cs
leave
push
add
cltd
xor
jo
aam
xor
xchg
leave
inc
xor
mov
nop
sbb
adc
icebp
sub
inc
pop
mov
outsl
add
cmpb
xor
les
push
lcall
add
push
mov
fs
sub
mov
cmp
jo
roll
int
cmp
call
lock
add
add
fbstp
call
jmp
add
rclb
cltd
clc
push
pop
xor
cmp
cmp
sbb
pop
add
mov
pop
push
jecxz
lock
inc
add
cmp
push
inc
sarl
push
inc
cmp
ljmp
cmp
adc
inc
int3
inc
inc
mov
cmp
pusha
push
sbb
adc
lock
or
adc
dec
push
mov
sarb
mov
jo
lock
pop
jb
loope
sti
fists
es
push
or
pop
push
xchg
cmp
xchg
sbb
pusha
loope
add
lods
notb
mov
cmp
lcall
dec
rolb
adc
lock
sbbb
int3
xor
mov
mov
int3
imul
push
outsb
cmp
ds
pop
add
mov
fistpl
xor
add
add
fs
pop
ret
sub
jge
pop
push
mov
push
int3
fbstp
mov
adc
pop
push
orl
pop
loopne
test
inc
add
cmpsb
adc
psrlq
xchg
push
jno
or
mov
and
sti
jb
ret
and
mov
push
pop
test
ljmp
shlb
and
cmp
fadd
imul
and
or
xor
adc
repz
adc
mov
jo
out
adc
into
in
je
sahf
or
jne
add
fisttpll
je
lds
test
test
push
ret
cmp
and
jae
add
add
enter
jno
jo
pop
push
rclb
sub
lods
jne
aad
rorl
push
cli
int
mov
cmpb
jnp
rorb
nop
cmp
lfs
sub
push
aaa
pop
jmp
jo
nop
add
xchg
pushl
adc
adc
adc
popf
adc
inc
jecxz
cmp
cmp
push
inc
movsb
cld
or
decb
lock
adc
push
fcoml
mov
mov
sub
scas
and
sarb
push
rcrl
adc
cmp
addb
adc
stc
pop
xor
sbb
or
das
sub
jo
pop
adc
jge
sarl
andl
push
cmp
cli
cmp
testb
add
cs
pop
mov
mov
mov
or
sarb
cmp
cltd
add
mov
mov
pop
lods
fwait
repnz
addb
orb
add
and
fldl
mov
es
cmp
mov
add
push
add
loopne
sti
andl
dec
xorb
and
xchg
jne
cwtl
sub
mov
rclb
in
xchg
jo
ficoms
cwtl
and
push
stos
fcoml
mov
nop
shlb
push
inc
mov
inc
shl
outsl
call
and
cmc
xchg
add
fldt
popa
push
push
adc
cld
mov
lea
ljmp
mov
call
push
adc
push
lds
push
or
pop
inc
push
sub
xchg
add
add
add
sahf
nop
fs
add
mov
std
dec
dec
xor
xchg
add
adc
add
pusha
inc
push
xchg
mov
idivb
rorl
stc
jno
and
xor
mov
xor
mov
xor
adcb
adc
or
xor
cmc
mov
mov
fs
add
cmp
adc
arpl
push
shrl
adc
incl
gs
shll
dec
push
sbb
adc
push
roll
test
test
cmc
jl
loope
inc
aas
xor
fucomi
pop
mov
cs
lcall
lcall
int
adc
mov
cmp
dec
movsb
sub
sbb
cmpsl
movsb
shl
adc
mov
je
adc
sbb
jg
add
call
lcall
shll
mov
or
sub
mov
cmc
fisttpl
mov
leave
jle
dec
ljmp
dec
sahf
je
mov
scas
xor
movsb
rclb
jge
add
fdivrs
push
lea
ret
pop
add
add
mov
push
adc
or
lods
mov
or
and
or
lods
push
cs
xor
push
dec
and
add
adc
cmp
or
mov
add
pusha
add
push
and
add
jmp
push
bound
dec
aad
add
lea
dec
les
push
inc
mov
push
es
xor
and
adc
icebp
lds
push
nop
ror
cmpb
add
pop
jg
push
and
mov
or
call
inc
adc
add
or
adc
add
repz
lds
push
cmp
mov
and
add
mov
mov
ficoml
adc
clc
outsl
or
sbb
cld
xchg
sbb
add
and
dec
dec
addb
jg
mov
push
cli
add
add
scas
clc
imull
add
sarl
stc
xchg
and
inc
das
inc
and
addb
xor
andl
or
sub
addb
mov
cmp
xor
mov
or
push
or
pushl
sahf
push
fiadds
or
loope
es
loop
data16
sti
inc
testl
fldl
mov
loope
add
ljmp
add
xchg
xchg
dec
adc
push
adc
or
add
orl
jne
add
lcall
shld
cs
sub
add
imulb
xor
shrb
add
pop
roll
addr16
mov
xor
xchg
cmp
fmul
inc
inc
xchg
pop
cmc
subb
or
add
aaa
inc
push
inc
sub
add
aaa
jecxz
mov
je
inc
xchg
inc
adc
or
into
data16
or
outsl
test
ja
jb
fadds
pop
insl
mov
cmc
aad
jbe
lds
hlt
int
adc
pushl
inc
jp
rolb
orb
sbb
mov
movsb
sbb
bound
cmp
adc
adc
rcrb
push
pop
push
sub
adcb
mov
mov
pop
inc
xlat
popa
sbb
decb
aad
mov
mov
andl
test
xor
std
inc
shr
test
call
pop
aad
add
outsb
andb
pop
test
mov
pop
data16
cs
enter
mov
sbb
aam
or
or
loop
add
and
jmp
test
js
pop
add
pop
mov
xchg
and
in
inc
mov
aas
xchg
pop
pusha
inc
rcll
inc
andl
rclb
dec
int
sti
rol
xchg
jb
add
rcll
test
or
mov
add
jp
jecxz
adc
daa
push
clc
out
mov
adc
fstpl
lds
stc
jg
mov
xor
in
mov
pop
or
incl
sar
icebp
adc
sub
xor
fst
dec
inc
xchg
sub
movsb
or
jecxz
dec
mov
push
pusha
jb
and
cmp
dec
test
fiaddl
inc
cmp
pop
mov
mov
add
and
push
shrb
inc
cmp
push
roll
push
pop
in
loope
dec
subb
lock
faddl
pop
cmp
jmp
imul
mov
or
mov
fisubrl
or
jb
inc
dec
or
fadds
inc
incl
pusha
or
inc
cs
pop
mov
add
push
shrl
xchg
lds
add
fdivs
lods
mov
int
and
jae
js
inc
call
or
in
lods
imul
test
or
mov
movsl
fstps
and
shll
rorl
push
hlt
mov
push
xor
and
in
add
dec
and
and
loope
mov
xchg
aaa
add
in
or
push
addb
inc
shlb
and
inc
mov
jae
push
push
inc
rol
cmp
mov
outsl
push
out
pop
push
mov
rorb
cmpsb
sub
cmp
sub
jmp
jae
lea
and
lds
ljmp
pop
aad
mov
push
push
or
adc
cmp
xor
jb
fdiv
or
inc
inc
testb
loopne
jb
stos
and
loope
outsb
out
adc
ljmp
dec
bound
xor
or
cmp
and
addb
subb
lret
inc
cmp
add
dec
dec
std
incl
mov
add
pop
inc
push
subb
add
cli
cmp
mov
adcb
stos
in
fisttps
bound
mov
push
sbb
jle
lock
mov
jl
rcr
push
rolb
push
cwtl
fsincos
pop
jmp
int3
insb
fs
cwtl
push
repnz
popa
mov
inc
or
sarb
enter
jg
orl
adc
cli
fs
out
ljmp
scas
add
ret
in
jp
xor
mov
inc
outsb
fstl
jle
mov
cmpsb
pop
je
mov
loopne
fcoms
clc
cmp
daa
jb
xchg
mov
sbb
fisubs
cli
lock
or
sbb
xor
add
subl
adc
xor
shll
mov
mov
int
fldenv
add
lret
xor
sub
mov
xor
add
cmp
sub
or
mov
aaa
xor
mov
and
nop
fildll
mov
add
lock
test
sti
push
add
push
leave
or
xor
add
fisubl
mov
push
push
push
inc
dec
and
mov
out
inc
xchg
adcb
dec
jmp
into
push
inc
and
xlat
inc
inc
mov
inc
jne
pop
adc
test
loopne
add
push
ds
cmp
sub
add
addl
cmc
sbb
rcrb
pop
dec
pop
push
cmp
and
mov
pop
in
xor
sub
sahf
sarb
and
loop
mov
roll
mov
sub
mov
xor
xchg
mov
cmp
in
addb
xor
jne
lock
jg
lods
xor
rcrb
xlat
pusha
cwtl
xlat
push
shll
out
clc
and
fs
popf
xor
add
jb
adc
ljmp
and
ret
je
lds
mov
pushf
pop
aam
lods
xor
leave
lock
xor
mov
scas
fstps
jp
in
sbb
mov
adc
sbb
xorb
aam
shlb
mov
xor
sbb
and
pusha
cld
push
and
push
or
pop
dec
aaa
xor
les
add
add
xchg
push
mov
dec
xorl
xorb
and
outsb
push
mov
mov
sarb
add
adc
xchg
push
sbb
loope
int3
adc
and
add
fwait
mov
scas
pusha
adc
enter
xchg
and
add
xor
addb
movsl
add
push
inc
imul
push
int3
push
incl
pop
hlt
push
push
or
call
sbb
sub
fwait
mov
push
xchg
and
cmp
or
jmp
and
shlb
xor
mov
jno
test
stos
inc
fsubs
je
insb
push
cmp
outsl
push
std
fwait
or
push
roll
jl
inc
rolb
adc
dec
jae
jecxz
add
incl
cmpsl
cmp
pop
sub
rorb
pop
and
jo
or
test
loopne
adc
sbb
data16
inc
andl
ss
scas
adc
jg
loopne
sub
and
loopne
es
rcrb
xor
decl
lock
pop
loope
pop
mov
pusha
outsl
ret
outsb
xchg
addl
adc
or
inc
mov
xchg
sbb
lret
pop
and
xor
in
filds
filds
or
cmp
and
inc
loopne
addb
inc
xchg
mov
or
shlb
inc
xor
ficompl
cmp
adc
add
mov
rcr
aam
jnp
add
pop
aad
out
pusha
xchg
jo
sub
jg
fcoms
or
imul
aad
xchg
pusha
sub
add
jne
and
jle
shl
xor
cwtl
sbb
andl
repnz
cli
idivb
add
xchg
jle
mov
jne
sbb
imul
dec
jmp
fisttps
loope
xchg
mov
cmp
popa
loopne
xor
insl
fnstenv
test
add
and
movlps
add
xor
mov
add
push
push
dec
fdivl
jo
and
or
and
sub
das
pop
or
orl
and
rolb
shlb
sub
mov
xchg
rorb
and
inc
rcrl
popa
and
frstor
shrl
mov
call
je
xor
add
add
test
imul
in
push
pop
rorb
or
outsb
mov
xor
lea
jmp
add
icebp
jle
dec
leave
push
int
push
and
xor
mov
out
ficoms
cmpsb
jb
or
cs
jmp
adc
cmp
sbb
add
pushf
and
pop
add
jg
and
mov
shlb
mov
adc
mov
mov
or
xchg
push
jns
sbb
adc
xorl
lock
add
fisttps
lea
add
loop
mov
test
lods
push
adc
dec
push
in
mov
mov
fcmovnu
xor
adc
add
fsubrl
add
pushl
movsl
and
or
xchg
mov
mov
sub
call
lret
pop
add
shl
rcll
pushf
jecxz
inc
jbe
jg
or
imul
jo
fs
xor
xor
lock
mov
pushl
push
and
jo
adc
pusha
mov
push
lock
outsl
xchg
add
ficomps
adc
imul
cs
cwtl
sub
test
pop
in
dec
jp
pop
test
add
movsl
ljmp
inc
jae
add
pop
push
pop
incl
and
or
cmp
andb
adc
push
insb
mov
cli
push
sbbb
and
cmp
and
inc
aas
sbb
add
loop
push
add
mov
adcb
scas
repnz
and
pusha
psrld
insb
push
add
cld
insl
lea
insl
mov
and
jo
pop
rcrb
xchg
aas
sahf
rclb
dec
add
add
divb
xchg
clc
pusha
sbb
pop
sbb
repnz
mov
xor
dec
out
jp
mov
jo
es
mov
mov
movb
add
jo
xchg
pop
sarl
inc
jo
addl
lret
pop
inc
sub
test
addb
xchg
and
push
add
sbb
xchg
xor
cmc
jp
cmpl
mov
pusha
enter
sbb
add
clc
push
push
push
or
push
sbb
inc
sub
into
std
or
push
and
negb
aam
loope
in
sbb
xchg
xor
clc
fildl
dec
xchg
jbe
push
cmp
xor
fcom
shl
jbe
jmp
insb
push
mov
and
sub
sar
add
add
mov
shlb
cwtl
in
das
cmpsl
loope
push
fst
cli
das
fs
scas
sbbb
push
fcmovnu
push
inc
mov
pop
adc
ret
negb
fstpl
pushf
sbb
and
cmp
outsw
mov
push
add
xchg
and
test
test
mov
sbbb
hlt
push
shrl
add
inc
add
or
bound
lock
ljmp
orb
addb
js
fdivrp
dec
cmp
mov
sbb
push
mov
movsl
mov
aaa
sbb
cmp
cmpb
add
or
daa
aam
and
xchg
or
xchg
push
pop
cmp
cmp
cld
push
jbe
pop
adcl
dec
jno
lock
or
cmp
sbb
or
push
inc
push
or
jg
dec
inc
sbb
and
orl
shrb
ficoml
hlt
subb
and
cmc
lods
fildl
addl
jmp
xchg
mov
ret
sbb
push
mov
repnz
push
dec
inc
call
out
faddl
fwait
pop
hlt
shrl
and
or
jbe
shrb
pop
adc
jmp
mov
subb
xor
mov
dec
sub
push
mov
or
insl
mull
xor
sarl
push
lahf
movsb
fldcw
rolb
sar
inc
pop
sbb
xorb
push
xor
or
mov
ret
xchg
jle
mov
pop
in
add
pushf
out
push
mov
mov
add
popa
out
xor
stos
dec
hlt
push
mov
inc
push
fisubrl
adc
or
push
lret
or
xor
jmp
movsb
cmc
rolb
bound
shlb
inc
pusha
adc
xchg
mov
push
add
adc
add
dec
cmp
dec
subb
sub
mulb
pushw
hlt
inc
cmp
rcr
mov
clc
push
and
dec
mov
mov
scas
rorl
xchg
ljmp
loope
inc
pop
fldt
jmp
jb
jae
andb
movsb
xchg
sbb
lods
std
fisttps
in
xor
pop
int3
jne
add
cwtd
enter
movsb
fcoms
clc
sub
loopne
inc
cmp
ss
icebp
jecxz
lcall
insl
in
jle
sbbb
mov
or
push
aaa
sub
cmp
xor
das
fs
cmp
movsl
fsubl
ret
cmp
adc
adcb
sti
lds
jo
and
adc
fistpll
sbb
and
xchg
sarb
scas
xor
inc
and
rcrb
cmp
jbe
inc
mov
std
bswap
mov
cmp
js
sub
sbb
adc
push
jno
loopne
test
pop
xchg
mov
in
and
in
popa
fiadds
or
ret
inc
repnz
imul
pop
cwtl
add
or
push
mov
xor
test
out
pusha
mov
enter
ret
pop
mov
adc
mov
mov
add
lcall
popa
call
loopne
adcb
or
lock
add
mov
icebp
fildll
xor
ret
cmp
pusha
inc
out
inc
inc
mov
xchg
add
sub
jp
pop
pop
leave
add
mov
loope
shlb
or
movsb
mov
mov
decl
jmp
test
sub
pop
push
sbbb
and
xor
jmp
fnstsw
xor
fwait
jecxz
mov
cmp
pop
pushf
mov
push
inc
ss
repnz
add
outsl
fisubs
add
and
cmp
cmp
mov
adc
lcall
pop
pop
inc
mov
inc
pop
lock
cs
lcall
outsb
lods
mov
xor
or
loop
or
das
js
jmp
mov
ss
push
lods
subb
sub
pop
push
push
ret
icebp
xor
mov
inc
jbe
sub
sub
loop
lock
sub
mov
call
shlb
or
loope
popf
push
add
lods
mov
and
subb
or
and
mulb
xchg
push
adc
mov
or
pop
pop
loopne
cmpb
ret
imul
xchg
xchg
les
adc
int
adc
gs
ret
sub
pop
fsubrl
scas
lahf
pop
aad
or
stos
cld
movsb
ljmp
decb
jl
jecxz
out
hlt
or
movsl
rclb
inc
sarl
icebp
addl
shrb
pop
scas
or
loopne
mov
jb
cmp
rcrl
add
mov
lods
or
push
loope
arpl
or
adc
and
xor
imul
movsl
rcrb
pusha
cld
mov
pop
or
mov
adc
cmp
pop
and
add
cmc
cmp
cmp
rolb
fcomps
ljmp
jg
or
outsb
add
push
loope
jbe
fiadds
adc
cmc
sub
sbb
call
xorb
pop
cmp
mov
or
or
mov
add
pop
inc
ss
scas
fstpl
cmp
ret
jecxz
push
and
xchg
movsl
add
nop
lea
add
mov
lock
je
popa
pop
xor
adc
lcall
mov
jo
mov
imul
xor
rclb
sbb
jb
pop
or
mov
lock
ljmp
xchg
outsb
sbb
dec
and
xor
inc
pusha
add
mov
fnstsw
xchg
shlb
mov
test
add
pop
rcrb
sbbb
adc
xchg
or
xor
push
fnsave
inc
mov
mov
es
xchg
or
fldenv
add
adc
leave
pop
adc
xor
sbb
sbb
mov
add
stos
jns
xorb
push
mov
sub
xor
jo
add
aad
loopne
aaa
movsb
inc
rorb
pop
xor
and
fldcw
in
filds
cmp
push
cmc
adc
add
aaa
adc
mov
xchg
addl
rolb
fdivr
mov
mov
inc
loope
les
inc
cmp
push
popa
cld
mov
xchg
gs
inc
fwait
int
sub
movsb
xchg
movsl
mov
pop
cwtl
sub
inc
push
cmp
inc
adc
addr16
jno
cli
lcall
popa
xchg
fnstsw
cs
cwtl
jo
popa
aas
subl
jbe
loop
call
rcrb
pop
lea
or
movsb
repz
pop
sbbb
add
and
jbe
xchg
cs
scas
mov
push
hlt
sbb
or
add
cmp
sbb
ret
cltd
add
movsl
mov
lock
sbb
mov
and
pop
rclb
loope
cmp
orb
or
and
cs
repnz
xor
cmpsb
or
push
sbb
mov
xchg
pop
xchg
std
jo
inc
cmp
or
mov
cmpsb
lahf
mov
or
cld
pop
adc
dec
pop
aad
sar
loope
fsubs
popa
or
aam
les
dec
xor
pop
xchg
in
push
test
rcrb
adc
and
and
pop
orb
lods
push
xchg
hlt
sbb
cld
and
xor
or
mov
and
into
int
in
loop
in
in
shll
test
faddp
sarb
mov
jmp
in
loope
fsubr
call
cmpsl
and
xchg
mov
movsb
test
pop
push
or
push
cli
push
pusha
cwtl
mov
push
sbb
push
xlat
loopne
add
outsb
rol
daa
orb
sub
mov
fidivs
clc
mov
shrb
nop
xor
mov
mov
jo
add
jp
sub
lods
popf
add
je
dec
sbb
ret
scas
test
jmp
push
das
shll
cli
and
inc
sbb
xchg
add
hlt
imul
or
add
movsb
mov
and
in
pop
mov
shr
add
cmpsl
or
sbb
hlt
loopne
inc
sub
jo
fisubrl
xchg
xor
fisttpll
ljmp
cmp
mov
bound
pushf
inc
ljmp
sub
mov
sbb
std
cmp
inc
popa
add
inc
hlt
sub
lock
aaa
fisttpll
ficoms
addl
scas
ss
adc
and
pop
shlb
mov
mov
adc
les
add
push
sub
icebp
dec
sub
xchg
rorl
and
sub
mov
into
add
enter
or
xchg
push
pusha
mov
adc
inc
fiaddl
cmp
mov
xor
sbb
pop
pop
sahf
pop
fisttpl
je
lcall
jl
add
cmp
flds
dec
shl
mov
lods
ja
lcall
sarb
repnz
push
shlb
addb
fwait
sub
xor
out
ret
cmp
or
push
repz
imul
add
outsl
pop
lret
or
int
pop
mov
or
std
mov
inc
lock
push
jo
cmpsb
pop
hlt
mov
mov
jb
les
jo
lock
push
jb
mov
adc
cmp
rolb
fcomps
adc
cwtl
shlb
sbb
cmpb
les
lret
es
add
mov
inc
leave
sbb
xor
mov
aam
push
xor
and
cmp
dec
add
rcr
push
or
mov
ljmp
push
and
nop
mov
mov
das
mov
rorb
rclb
fiadds
pusha
and
andb
sahf
sub
cmp
add
sub
cmc
outsb
adc
push
lods
test
inc
sahf
rcrb
lods
adc
stos
xor
mov
sub
inc
aam
cli
or
adc
mov
push
mov
scas
out
testl
mov
adc
call
lock
and
inc
icebp
and
fisubrl
mov
jp
xor
push
mov
add
push
insl
leave
aam
inc
inc
add
cs
sub
jg
call
rolb
adc
pop
pusha
pushf
adc
adc
dec
sbb
adcb
fildl
sarb
sbb
nop
or
xchg
mov
and
orl
or
call
adc
push
icebp
cwtl
and
xchg
xor
movsl
xchg
adc
mov
jg
icebp
push
push
inc
jmp
or
pop
shl
addb
add
add
in
add
cmc
orl
add
or
push
add
call
pop
popa
cld
shrb
mov
inc
cwtl
and
push
add
rclb
adc
mov
fstpl
scas
rorb
adc
test
das
xchg
adc
outsl
dec
push
mov
inc
out
or
adc
outsl
lock
call
push
mov
out
xor
add
sti
sbb
add
cmp
push
test
insl
sbb
or
push
push
push
test
mov
xorl
and
ret
dec
inc
rcll
aad
rcrb
lods
mov
adc
adc
add
xor
push
cld
mov
adc
ret
fimuls
stos
sub
out
js
and
pop
xchg
rclb
sub
das
cli
pop
imul
aaa
add
adcb
subb
inc
mov
mov
cli
add
cmpb
bnd
add
nop
fs
or
lahf
cs
adcl
inc
shl
stos
xchg
mov
pop
dec
add
or
jb
push
movsb
inc
enter
lods
adc
je
mov
push
cmp
jg
and
jo
fnstcw
dec
adc
push
loope
enter
subb
aad
cld
add
das
cld
dec
nop
andl
addb
inc
xor
add
jb
xchg
out
xor
sbb
mov
and
pop
addb
inc
add
test
incl
jo
fdivl
shlb
outsb
mov
movsl
hlt
fucomi
xchg
imul
pop
cmpb
mov
dec
data16
icebp
mov
dec
mov
cmp
int
pop
xchg
or
dec
xchg
push
incb
cmp
les
xor
push
sbb
andb
or
adc
or
inc
dec
rclb
icebp
push
cmpsl
loope
push
sub
inc
out
sbb
lock
std
mov
in
sbb
cmc
adc
xchg
mov
or
add
stos
cmc
push
sbb
or
or
inc
hlt
pop
les
in
add
shlb
ficoml
pop
pop
pop
clc
jg
mov
adc
add
mov
xorl
pop
mov
cs
call
outsb
das
pushf
jb
inc
inc
inc
shlb
inc
jbe
push
les
cwtl
clc
scas
loop
mov
push
pop
les
inc
mov
test
dec
inc
push
or
push
lds
inc
and
mov
cmp
mov
fdivr
shlb
push
inc
push
mov
push
lds
movb
rolb
cltd
or
es
adc
or
push
jmp
mov
and
movsl
lret
xchg
jg
sub
lds
loopne
xlat
fldenv
pop
inc
dec
in
dec
or
test
and
mov
add
jecxz
pop
xchg
sahf
movsb
and
push
cmp
cmp
push
pop
fs
popa
and
lods
push
pop
add
test
jns
sub
out
int3
pop
push
push
icebp
jo
test
add
es
and
js
outsb
jno
inc
movsl
or
aaa
jl
xchg
dec
add
add
push
pusha
add
push
inc
add
or
inc
or
aam
cmp
lock
aad
sub
fld
insb
push
or
loopne
addl
mov
subl
adc
and
outsl
push
pusha
movsb
in
outsl
mov
movsl
add
cmp
adcb
or
adc
mov
popf
mov
pop
aam
dec
rol
icebp
fcomi
fildl
push
adc
inc
fldl
and
pop
xor
pop
or
adcl
rcrb
sarb
lcall
roll
add
fldl
test
les
mov
cmp
add
lods
test
inc
enter
or
icebp
loop
adc
add
mov
lret
movsl
rcrb
sub
push
add
add
cmp
or
test
cltd
addb
cmc
movsl
pop
and
add
adc
mov
add
pushf
mov
cld
mov
fs
pusha
pop
pushf
pop
xlat
adc
into
and
sbb
sub
jbe
loope
shrb
out
cmpb
jmp
mov
scas
adc
or
sbb
enter
movsl
pop
and
lret
add
add
mov
jecxz
sbb
pop
push
and
mov
mov
inc
ja
testb
dec
add
loope
lds
leave
add
lods
add
test
in
add
and
sub
and
cmp
movsb
xchg
and
pop
and
fs
rcrb
shrl
stos
add
inc
pop
std
sbb
repz
mov
push
jo
icebp
sub
shll
jno
out
and
incb
sar
aad
add
dec
mov
or
icebp
xor
inc
add
aad
cld
int
jl
enter
jo
mov
or
in
sbb
outsb
and
or
movsl
ret
jecxz
call
lds
loop
lcall
sbb
pop
cs
nop
adc
push
ret
andb
mov
xor
add
mov
outsl
inc
mov
data16
mov
mov
into
xchg
loope
ljmp
shl
lea
shr
inc
popa
mov
pop
lret
xorb
pop
fs
push
mov
ljmp
cmpsb
shrb
push
xchg
shlb
push
xchg
pop
push
mov
xchg
insb
adc
js
push
in
mov
jecxz
dec
out
jl,pt
add
andl
not
push
lahf
fldcw
add
mov
push
add
cs
xlat
sub
inc
mull
or
clc
push
cmc
sub
fistl
movsb
fildl
sub
test
push
mov
mov
test
adc
imull
cmp
hlt
push
add
adc
scas
xchg
rcll
add
push
add
decl
pop
push
inc
pop
or
add
cltd
bound
outsl
outsl
mov
dec
and
mov
push
jb
add
add
add
jg
ficompl
inc
sub
movsb
stos
adc
add
mov
adc
adc
push
add
fldenv
sub
push
push
mov
loope
xor
icebp
add
push
push
popf
adc
jmp
call
fdivl
fs
hlt
cmp
scas
test
mov
sub
jl
add
or
add
subb
rcll
les
dec
xchg
push
mov
cmp
fstl
fidivl
adc
mov
fsubl
push
cwtl
call
push
cmp
add
inc
add
sbb
sbb
xor
push
lods
movsb
rorl
dec
sub
sar
nop
jo
nop
sbb
lret
inc
aas
mov
nop
movsb
cmp
push
mov
ja
jl
or
adc
stc
mov
adc
mov
stc
addl
xor
sub
and
push
push
jnp
mov
nop
ficomps
andl
aad
pop
inc
and
sbb
and
lahf
scas
mov
pushf
sbb
out
adc
aaa
mov
adc
inc
movsl
hlt
cltd
jle
dec
pop
push
popf
pushf
push
aaa
add
mov
outsb
js
cmp
add
xlat
lods
mov
push
or
lods
adc
cmp
lds
mov
nop
xchg
inc
nop
inc
stc
mov
ljmp
int
loop
out
adc
add
cmp
dec
jbe
fucomip
les
out
fidivrs
call
cmp
cmp
inc
stos
jbe
leave
outsb
or
or
pop
in
lock
popf
adcb
or
daa
xchg
inc
loop
insb
or
bound
sbb
adc
mov
mov
cwtl
mov
aaa
decl
push
dec
or
movsb
inc
enter
ret
xorb
les
rolb
ss
mov
lods
adc
xor
push
adcl
push
add
outsl
mov
aaa
mov
jno
in
add
pushl
sahf
movsb
fcom
add
sbb
jnp
fidivrl
sbb
inc
add
cmp
or
pop
pusha
adc
add
mov
add
xchg
sbb
adc
fldt
ja
sarl
or
bound
sarb
rolb
dec
mov
movsb
xlat
adc
fnstsw
or
xchg
push
test
mov
sbb
popf
mov
add
iret
push
add
dec
in
fucomi
fistps
add
sbb
add
mov
insl
cmovp
insl
fwait
rclb
in
fstpl
mov
fsubs
aam
je
fdivr
ret
dec
fidivrl
dec
lods
xor
incb
push
inc
es
bound
adc
sti
adc
adc
icebp
xor
mov
enter
jle
xchg
mov
mov
lds
or
cmpsb
add
adc
icebp
sbb
and
stos
ficomps
lock
call
and
les
add
add
jg
fbstp
je
rolb
adc
mov
fidivl
xor
mov
mov
add
and
cmp
rolb
mov
xchg
cmp
sbbb
mov
adc
xchg
sarb
push
and
imul
or
mov
add
sub
jle
ret
add
or
add
rclb
test
call
mov
out
js
lcall
add
adc
repnz
loop
push
ljmp
mov
mov
jecxz
or
sbbb
mov
jbe
mov
movl
xchg
mov
lcall
pushl
js
mov
addl
pop
test
incl
inc
push
inc
bound
push
out
adc
addb
mov
repnz
adc
sbb
push
sti
add
add
mov
mov
add
dec
add
jg
rolb
sbb
add
or
sbb
push
insl
or
push
sbb
popa
and
push
add
sub
lods
rol
jmp
xor
add
cmp
jb
add
repnz
jmp
imul
adc
inc
orb
and
push
xchg
add
sbb
inc
dec
sbb
fisubrs
outsb
sub
fsub
sub
mov
sbb
or
sbb
loopne
out
add
jg
xchg
hlt
add
lock
adc
call
or
mov
dec
and
mov
dec
inc
sub
adc
mov
imul
ja
mov
sub
imull
in
aam
jno
lock
push
sbb
idiv
es
cmp
sub
xor
xor
or
push
or
pusha
sbb
stos
jb
rorb
pop
je
mov
test
push
cmpsb
je
cmp
rcrb
push
pop
nop
cmp
icebp
push
ss
gs
add
or
lret
jl
cmp
mov
add
pop
pop
cmp
lods
sar
push
dec
add
fwait
xlat
lods
add
add
nop
mov
rolb
lcall
and
dec
mov
jmp
insl
pop
mov
lea
push
fdivrs
adcl
ret
in
outsl
js
sub
add
add
mov
and
sbb
je
mov
push
mov
inc
andl
in
mov
addb
shrb
fidivrs
jnp
sbb
add
cmp
mov
lods
sbbb
sub
fisubrs
dec
aam
test
inc
mov
jbe
fcmovnu
push
mov
or
sahf
mov
addl
aas
in
sub
pop
subb
ja
sub
in
mov
push
and
pop
sub
sub
sbb
sub
dec
mov
mov
pop
push
mov
adc
adc
cmpsl
mov
sub
pop
roll
mov
pop
mov
xlat
pop
add
fldl
push
or
mov
std
ja
addb
push
adc
push
pop
test
add
pop
popf
add
sbb
push
daa
sarb
mov
sbbl
inc
or
inc
add
inc
mov
cmp
and
lock
xlat
inc
push
push
mov
inc
add
sub
mov
loope
mov
dec
jno
leave
test
sbb
icebp
sbb
icebp
div
push
lock
jp
jo
sub
xchg
pop
pop
and
fidivrs
orb
orb
fldl
jge
hlt
addb
or
scas
push
mov
and
sub
xchg
movsl
rcrb
mov
movsl
testb
adcb
mov
jg
fcoml
pop
add
mov
popf
adcb
adc
inc
and
addl
lods
fadds
push
out
or
cmp
bound
xorb
fnstsw
in
or
filds
subb
or
push
or
pop
add
push
sbb
popa
sbb
cmp
call
leave
inc
sub
loop
mov
add
and
leave
loopne
inc
sbb
push
dec
inc
pop
popa
incb
pop
loopne
pop
add
mov
push
push
nop
addl
push
pusha
jbe
cmp
cld
addl
fstpl
test
outsl
or
cmp
jbe
pop
add
fs
mov
lret
cmp
push
cli
incl
pusha
push
mov
and
lds
pop
scas
inc
orb
jg
ret
loopne
lods
or
pusha
or
pop
es
shl
add
pop
cmp
sub
movsl
mov
fisubs
sub
inc
add
dec
lock
popa
inc
dec
js
push
sti
add
popa
subl
in
outsl
sub
mov
push
fcoml
mov
add
inc
add
xor
movsl
loope
jae
sub
outsl
pop
dec
sbb
or
or
insl
sbbb
or
cld
push
faddp
or
inc
clc
loope
and
flds
es
push
jb
adc
jmp
xor
sub
ffreep
cmp
mov
data16
or
cmp
pusha
test
clc
add
incl
pop
ljmp
xchg
push
mov
and
popa
adc
rolb
push
xchg
and
test
jle
dec
xor
adc
shlb
cmp
sub
inc
cwtl
cld
pop
add
orb
lcall
shll
fistl
xchg
rorb
insb
sbb
loopne
add
inc
sbb
mov
pusha
sbb
sbb
pop
or
or
stos
loopne
adc
inc
aaa
mov
add
icebp
in
push
loopne
add
push
mov
add
adc
lcall
movntq
out
add
popa
or
or
scas
and
fmuls
std
or
ljmp
mov
or
sub
pop
sub
pop
dec
rclb
jmp
in
adc
xchg
mov
cmp
shrb
add
vcvtsi2ssl
pop
xchg
leave
loop
push
jecxz
and
fstp
dec
outsl
test
call
aam
sarl
test
push
pop
addl
stos
mov
rolb
pusha
add
rcll
add
subb
push
mov
das
andb
lods
pop
push
test
ljmp
mov
cld
pop
and
adcl
incl
push
daa
das
mov
jnp
and
and
lds
pop
movsb
inc
sbb
incl
jl
movsl
fadd
ss
and
cmp
add
pusha
clc
outsl
fidivs
aad
xor
xor
les
cmp
mov
xchg
mov
cmp
adc
cmp
es
ja
add
xcrypt-ctr
cmpsl
sbb
add
push
mov
cmp
mov
cmp
pop
xchg
lock
pop
jmp
push
mov
or
iret
iret
js
lock
and
movsb
aaa
aad
in
fucomp
sub
xor
loop
add
lock
fnstsw
rcrl
and
rclb
mov
add
cld
repnz
and
sarb
sbb
jecxz
shlb
cwtl
push
cmp
aad
mov
andb
xchg
sbb
adc
icebp
adc
cmp
inc
hlt
pop
icebp
jo
lods
fildll
pusha
sbb
add
gs
dec
icebp
add
outsl
stos
movsl
add
mov
pop
subl
or
or
pop
add
rclb
pop
loopne
push
stc
jl
mov
loopne
in
mov
adc
or
stos
mov
xor
imul
add
jno
sbb
adc
std
cs
add
jbe
adc
aam
sub
cltd
pop
sub
inc
das
sbb
ss
jl
jo
lret
pop
mov
jnp
push
inc
and
sbb
lock
sahf
and
add
adc
push
add
cltd
sbb
insl
mov
or
adc
xchg
mov
adc
push
add
jne
push
push
push
add
push
push
add
sbb
lahf
xorb
push
cs
nop
mov
outsb
push
les
mov
fs
test
ret
or
push
fadds
mov
or
cmp
js
rorl
mov
jecxz
mov
loope
sbbb
adc
mov
and
mov
fs
mov
inc
push
nop
clc
or
add
rcrl
loopne
addb
aad
fnstcw
frstor
mov
mov
add
mov
movsl
mov
hlt
cmp
andl
clc
push
fmull
sbb
jns
cmp
pop
jp
mov
and
scas
mov
loopne
jmp
inc
pop
xchg
push
cmp
mov
xor
pushf
lds
loope
leave
and
loope
lret
shlb
int
cmpsl
je
loop
lods
push
add
clc
pop
add
cmp
mov
dec
add
mov
test
pushf
movsl
add
loop
std
fidivl
and
nop
dec
shlb
aad
xchg
push
pop
fs
mov
mov
lar
cmpsl
and
cmp
sahf
bound
add
lock
mov
cld
cmc
inc
jg
or
xchg
lds
roll
and
movsb
call
pusha
gs
dec
andb
dec
mov
mov
jle
mov
fs
cli
add
addb
jle,pn
mov
bound
pop
adc
push
enter
add
arpl
add
xor
xorb
ljmp
ret
es
ret
or
ret
incl
lock
and
mov
jg
add
popa
dec
cmp
mov
jo
and
jb
cmp
ljmp
andb
or
jp
loopne
nop
adcb
andb
xor
pop
xchg
mov
shr
mov
xchg
cmp
mov
sbb
ljmp
dec
das
movsb
and
fidivrl
and
addl
and
adc
mov
push
mov
test
addb
adcl
sbb
lods
mov
adc
inc
add
movsb
mov
or
push
xchg
push
in
out
jb
out
clc
testb
or
rolb
sbb
out
mov
and
or
movsb
lret
add
lods
mov
addr16
and
lcall
icebp
adc
adc
inc
out
ret
loopne
add
add
stos
sbb
leave
lock
rorl
fstps
adc
cmpb
push
je
sbb
dec
mov
mov
jg
mov
adc
aam
mov
test
stos
adc
nop
xlat
rcrb
push
mov
jle
nop
sbb
sub
pushl
inc
or
lds
mov
lahf
movsb
int
cmp
adc
cmp
imul
xor
xchg
sub
scas
mov
add
or
inc
pushl
outsb
xchg
xor
sbb
add
cmpl
mov
les
and
mov
pop
int
xlat
popa
popl
jg
xor
int3
mov
adc
mov
push
add
outsb
lret
lcall
cmpsl
push
in
cmc
mov
mov
jecxz
push
or
popa
inc
cmp
lds
lds
ret
mov
pop
xor
aad
adc
leave
inc
jo
mov
andl
xchg
adc
cli
dec
sub
shr
orb
test
pop
insb
adc
sub
les
xchg
adc
sub
fsubrs
enter
call
or
push
xchg
repnz
xor
jb
xlat
or
imul
sub
mov
mov
mov
in
inc
xchg
loope
xor
xchg
sub
add
dec
xor
add
mov
pop
rolb
addr16
add
outsl
imul
sbb
jo
xlat
inc
pop
loop
in
scas
jg
or
add
add
pop
sub
dec
ss
insb
fbld
jmp
xchg
pop
add
incl
incl
xor
mov
adc
loop
fldl
js
mov
nop
and
and
add
add
into
push
mov
call
rol
add
orb
mov
add
xor
pop
add
loop
stos
mov
mov
cli
jo
jb
and
fisttpll
mov
ret
loop
push
hlt
cmpb
lock
or
pop
push
jb
fiadds
or
push
xchg
gs
adc
jo
fisubrs
sbb
mov
stos
adc
push
inc
and
sbb
mov
mov
adc
sub
adc
stc
aam
and
push
sbbb
mov
adc
bound
and
andb
sahf
rclb
std
add
testb
data16
outsl
add
xchg
push
sbb
stos
add
pushf
and
push
pusha
adc
and
or
push
cli
add
rclb
jo
inc
es
pop
or
xor
cs
inc
rcrb
lcall
cmpsl
icebp
jecxz
stos
cmpb
xchg
cmpb
fidivrl
mov
xchg
pop
ret
mov
into
shll
add
das
inc
push
pop
xor
push
push
std
adcb
sbb
add
add
mov
cmp
push
aas
adcl
and
add
ret
xor
xor
add
clc
add
shl
cmp
shlb
adc
out
popa
mov
lcall
add
cwtl
mov
aam
adc
sbb
inc
push
repnz
sbb
es
sbb
nop
hlt
jg
mov
cmp
lods
icebp
movsl
loop
or
xor
clc
cmp
test
xor
add
cmpl
push
shr
push
cld
loope
rol
pop
movsl
push
cmp
ss
mov
das
add
xor
inc
mov
mov
xor
dec
aam
insl
sbbl
adc
ret
sub
jmp
nop
or
nop
lods
mov
or
fsubp
fsts
leave
push
mov
flds
xor
pop
sub
loopne
rcl
shrb
xchg
cs
popf
test
and
adc
and
sub
sti
sbb
mov
icebp
ret
pop
outsb
and
rcrl
test
add
in
adc
mov
dec
loopne
mov
add
sub
add
sbb
subb
data16
mov
sub
sbb
sub
sub
bound
xlat
pop
mov
add
or
xchg
inc
inc
xchg
lods
add
stos
or
pop
out
cmp
dec
test
test
push
hlt
cmpsb
xchg
es
or
inc
xor
ret
jle
cmp
out
insl
cld
pop
pop
fstps
loopne
orb
arpl
mov
adc
ja
add
shll
imul
pusha
add
xchg
outsb
in
dec
or
data16
add
push
stos
adc
adc
pop
add
inc
add
rorb
inc
add
sbb
push
inc
sbb
loopne
jmp
popa
push
xor
sbb
sbb
pushl
jp
outsb
pusha
push
mov
mov
push
sbb
leave
mov
pop
xchg
push
xchg
cld
aam
bound
cli
std
dec
mov
push
adc
push
fsubrl
pop
mov
add
mov
mov
in
fisttpl
bound
inc
and
orl
and
add
shll
add
xor
add
shll
push
mov
loopne
xchg
adc
fsubl
add
or
mov
sub
sbb
out
ret
and
cmp
cmp
sarb
pop
movsl
sub
add
or
inc
data16
sbb
fldl
mov
push
lret
sub
fildll
les
aam
pop
mov
cmp
push
aam
inc
push
sub
sub
xchg
adc
and
sbb
das
js
pop
and
or
es
outsb
inc
iret
rorl
fs
loopne
mov
or
add
push
aam
adc
add
ss
mov
mov
mov
adc
sbb
push
adcb
in
xlat
add
add
shll
fildll
push
or
jmp
push
inc
sub
out
and
and
fldenv
jo
inc
or
pop
lods
pop
xor
mov
rorb
adc
cmp
mov
cmp
lods
xchg
cmp
pop
lods
mov
xor
mov
cmp
test
and
cmp
cmp
xor
cmpsl
std
jg
mov
cmp
addr16
sub
mov
lret
or
mov
cmpb
das
mov
xor
scas
movsb
stc
popf
dec
std
xor
subb
jge
adc
cmc
rcrb
cmpb
pushw
add
in
pusha
je
mov
scas
rcrl
mov
xchg
mov
mov
or
cmp
in
add
inc
mov
cmp
loope
and
and
or
add
sbbb
adcl
stos
lea
push
xchg
sbbl
dec
insb
mov
pop
or
and
inc
xorb
daa
pusha
xchg
aad
add
mov
pop
fs
jo
jne
mov
stos
and
cwtl
or
sbb
adc
movl
inc
sub
lods
adc
push
cld
pop
dec
adc
xor
lds
fdivrs
sbb
sub
pop
add
leave
add
add
push
mov
pop
inc
push
pushf
mov
out
rol
and
xchg
sub
clc
arpl
data16
fisttpl
aas
xor
xor
add
jbe
sub
fyl2x
add
add
adc
iret
mov
in
add
jle
jle
and
add
sub
lds
xchg
das
mov
or
xchg
add
fbld
scas
cmp
imul
mov
test
inc
xlat
pop
inc
sub
lcall
xor
adc
orb
mov
or
adc
ret
insl
aad
xor
test
push
push
pop
leave
hlt
cwtl
jg
div
js
and
in
leave
les
js,pn
or
push
dec
outsl
imul
xchg
push
add
das
adc
inc
add
or
dec
imul
mov
add
sub
nop
imulb
push
cmp
inc
or
cs
push
sbb
or
int3
es
xor
mov
sbb
cli
lock
and
fbld
sbb
push
movsb
call
fwait
clc
sbb
inc
popa
xchg
adc
dec
or
jle
movsl
adc
rolb
push
and
dec
bound
cli
push
jl
xchg
nop
and
incl
mov
flds
outsb
push
mov
lock
lds
shlb
add
ja
jg
push
adc
xorl
rorb
arpl
add
loope
adc
mov
or
outsb
sub
lock
fildl
aaa
pop
sub
lret
xor
lock
ret
hlt
push
scas
leave
pop
scas
nop
loop
push
or
bound
and
adc
pop
in
sub
xor
push
or
xchg
and
jle
inc
addr16
mov
pop
enter
xchg
add
add
repnz
push
ljmp
adc
adcb
movsl
pusha
cmp
out
cmp
add
add
test
rolb
loop
ss
iret
mov
sbbb
cmp
or
fmull
sub
or
lock
or
loop
adc
sbb
pusha
daa
xor
push
add
pusha
sbb
loopne
mov
in
cli
test
sbb
xor
clc
jg
test
mov
xchg
and
inc
mov
out
loopne
stos
sbb
pushf
frstor
test
pop
pop
test
fldcw
nop
sbb
push
push
cs
pushl
lods
xchg
jb
movsb
sub
popa
mov
add
aad
push
lret
xchg
inc
push
inc
or
fdivrs
xorb
or
adc
stos
insb
jmp
incl
add
cld
lods
add
inc
test
mov
push
and
fidivrl
mov
dec
das
cmp
nop
std
scas
stos
sub
loop
mov
andb
adc
ret
push
ret
cmp
sbb
adc
loopne
shrl
mov
mov
fbld
es
xchg
mov
and
call
clc
mov
cmp
outsb
int
add
sbb
cmp
push
adc
jmp
add
frstor
add
push
adc
or
push
aam
push
ss
mov
popa
cmp
or
xor
add
mov
fisubrl
xor
push
lods
cmp
add
jo
adc
add
call
fnsave
add
xchg
mov
push
cmp
and
xchg
ret
cli
cwtl
adcb
rol
in
xchg
je
ret
inc
das
adc
iret
movsb
and
outsb
xor
lds
data16
xchg
and
push
out
sub
into
mov
add
cs
shll
movsb
jo
add
jle
pop
sbb
xchg
add
sub
and
in
mov
add
add
mov
cmp
xor
pop
ja
xchg
xor
inc
cltd
nop
add
pop
push
push
mov
loope
inc
dec
loopne
lds
and
pop
lock
icebp
fwait
ss
mov
push
inc
add
ficompl
outsb
mov
push
movsl
aam
gs
icebp
popf
push
add
push
test
fsubrl
rcrb
shlb
orl
ss
jo
jo
and
nop
fwait
cli
mov
push
inc
jmp
push
mov
inc
flds
mov
push
nop
mov
andl
lods
shl
mov
fs
inc
push
sub
mov
xorb
jne,pn
orl
sbb
jg
mov
pop
mov
xor
jecxz
xor
bound
sbb
mov
fmull
movsb
push
push
pushl
inc
mov
flds
rcrb
mov
jo
push
jb
cmp
jne
cli
bound
pusha
or
xor
outsb
movsb
roll
movsb
mov
mov
aam
add
insb
les
add
push
cwtl
pusha
pop
add
inc
rolb
icebp
scas
xor
push
inc
cmpsb
add
and
push
push
jb
cmp
mov
sub
sarb
push
add
add
add
or
sbb
inc
addb
mov
ret
push
adc
add
aas
sarb
cmpsb
mov
mov
mov
aaa
mov
mov
adc
pop
out
rolb
sub
dec
inc
or
xchg
or
rclb
inc
dec
movsb
cmp
or
shll
or
test
pop
add
or
mov
push
fdivp
loope
shlb
outsb
sti
rcl
xorb
mov
cmp
clc
subb
xchg
pop
dec
cld
fists
cwtl
les
movsl
jb
sub
ret
add
push
fs
dec
popa
mov
test
jne
jbe
sub
mov
insl
loope
cmp
add
adc
in
lods
rorb
and
xor
lret
ljmp
loop
or
rcll
loopne
jp
lret
jg
or
cs
int
xchg
sub
dec
int3
xchg
mov
xlat
xchg
fs
push
pop
inc
push
adc
scas
ret
add
movsb
and
push
jmp
js
add
mov
bound
add
add
sbbb
inc
addb
pusha
jl
sbbb
add
cli
mov
ss
loope
inc
xor
das
mov
sar
shlb
sti
or
cmpsb
lock
cli
testb
push
insl
inc
str
fists
mov
in
nop
push
stos
fistl
out
jp
xor
sbbl
or
mov
mov
mov
int
xor
movsl
mov
mov
xchg
push
xorb
call
jmp
movsl
jecxz
iret
andb
add
shll
pop
or
loop
dec
lret
or
mov
or
add
mov
add
std
pop
sbb
popa
inc
sbb
inc
sbb
jmp
sbb
inc
sbb
fisttpl
add
movsl
inc
idivb
jnp
ret
xlat
push
lds
hlt
pop
std
add
js
sbb
xorb
jns
xor
jp
xor
lods
rcrb
or
adc
adc
and
fldcw
cmpl
testb
xchg
adc
cmp
inc
in
fwait
hlt
incl
movsl
jmp
addb
mov
imul
adc
inc
adc
adcl
aas
dec
nop
sbb
fs
cmp
inc
cmpb
sbbl
fldl
adc
mov
addb
in
lock
add
sub
lock
xor
and
std
lahf
add
inc
or
xchg
nop
sub
cmp
leave
movsb
or
add
inc
xchg
es
mov
jmp
mov
sbb
mov
insb
add
adcb
in
call
fisttpll
rorb
cmp
cmp
lods
es
xchg
ljmp
sbbb
or
cmp
mov
push
add
adc
push
adc
mov
pop
sub
shrb
push
cs
mov
adc
icebp
xor
notb
roll
jns
cmpsl
adc
jb
pop
mov
push
mov
push
sub
std
sub
shrb
inc
or
push
daa
loopne
andl
sbb
gs
add
mov
fs
xor
fmulp
push
and
xor
cmpsb
incl
add
and
pop
xor
dec
sub
xchg
push
add
mov
aam
cmp
adc
xchg
rclb
orb
rcrb
cmp
lock
pop
or
cmp
push
outsl
cmpsb
pop
scas
aam
add
pusha
mov
add
push
cmpl
loope
or
test
add
rolb
add
xor
push
outsb
fnsave
insl
push
aam
adc
insl
dec
dec
lock
incl
stos
mov
xor
addr16
sub
or
push
dec
call
cmp
das
shrb
add
ret
fwait
push
nop
pop
test
cltd
shll
xchg
daa
ljmp
add
or
xchg
jg
dec
add
inc
cmp
adc
pusha
pop
xlat
pusha
test
pop
push
jbe
scas
cli
test
repnz
push
icebp
pop
pop
fisubs
movsl
clc
ficoml
cmp
loopne
pop
int3
js
lods
sub
out
pop
jge
and
ret
cmp
mov
dec
push
std
add
pusha
jnp
subb
dec
rolb
push
and
push
mov
mov
and
lods
push
js
lods
enter
aam
sub
sti
arpl
cmc
cmpsb
lcall
xchg
push
shll
adc
and
dec
add
sub
sub
inc
pop
sti
add
adc
cmp
testb
ss
adc
pop
imul
pop
and
push
mov
loopne
xchg
es
mov
in
cmp
or
and
test
push
incl
fisubs
xchg
lret
roll
cmp
push
loop
pop
and
pop
jecxz
pusha
pop
loopne
loopne
pop
add
xor
outsb
inc
push
and
cs
or
insl
dec
mov
bnd
xor
inc
sbb
loopne
mov
mov
add
add
cmp
add
ds
cmp
loop
cmp
add
adc
inc
pop
or
into
pusha
loop
pushf
faddp
xchg
call
lods
inc
ja
add
stos
scas
xchg
sbb
add
sarb
mov
outsl
js
cmp
add
sarb
xlat
push
cmp
inc
js
sti
int
cmp
ljmp
add
arpl
lcall
push
loopne
cld
jmp
add
addb
rolb
add
add
ret
add
cmp
mov
pop
lock
xchg
es
mov
loop
rorb
sbb
mov
xor
xchg
inc
add
decl
jmp
sbbb
test
data16
sbbb
pop
sbb
dec
int
es
loope
dec
loop
bound
mov
inc
insb
pop
push
dec
xchg
hlt
add
sub
lcall
leave
jo
loop
cli
mov
pop
mov
adc
pop
and
cmp
cltd
ret
sbb
lock
popf
push
dec
xchg
jecxz
pusha
int
add
inc
pop
mov
add
and
int
repnz
add
jg
or
adc
insl
repnz
or
or
add
or
rolb
sbb
cmp
notl
fxch
add
aaa
testb
movsl
sbbb
xor
xchg
push
mov
add
add
outsb
add
push
add
int
add
jne
mov
rolb
cs
inc
lods
or
sub
mov
xorl
mov
jle
cs
cmp
push
mov
push
dec
lahf
sub
inc
push
inc
jo
xor
inc
in
cmpsb
fidivrl
pop
mov
add
sub
mov
test
push
jmp
push
rcrb
pop
test
pusha
loop
mov
pusha
mov
cld
push
sbb
push
mov
fisubs
lahf
rclb
rolb
cmp
push
cmp
in
clc
add
or
and
jo
jbe
movb
call
data16
or
cmp
nop
cmp
inc
dec
pop
adc
idivb
xchg
adc
out
loop
lods
ret
cmp
mulb
or
sarb
push
xor
mov
shll
inc
push
inc
clc
out
xchg
fcomps
cmc
and
push
decl
mov
cmp
cmpsb
outsl
or
push
mov
lock
loopne
add
and
adc
popa
movsb
das
sub
mov
test
jo
xor
jp
fwait
and
ljmp
cmp
lods
fidivs
inc
push
dec
add
stos
xor
jb
add
push
cmp
shrb
std
js
dec
add
scas
ljmp
inc
adc
jge
dec
sub
cmpl
add
mov
int
fcomps
adc
ret
dec
aam
cltd
cmpsb
fsubp
lret
mov
push
inc
adc
ljmp
icebp
idivb
outsb
adc
or
ljmp
inc
xor
or
shrb
lea
jns
xchg
sub
adc
clc
add
rolb
cmc
int
lcall
pop
pushf
mov
pop
insb
shl
stos
inc
cmp
movsl
or
adc
mov
mov
dec
and
inc
dec
lock
nop
pop
inc
cmpsl
mov
push
pop
or
scas
sbb
mov
lock
xchg
es
add
cltd
les
ret
mov
add
shll
adc
sub
pop
pushf
sub
adc
adc
add
arpl
and
lcall
in
addl
call
cs
pop
roll
cmp
adc
cmpsb
mov
gs
dec
inc
roll
rclb
adc
fcos
push
or
push
rclb
mov
jo
sar
jg
pop
cmp
xor
push
sub
ss
adc
adc
add
lcall
or
add
adc
cwtl
mov
xor
jg
lock
add
orb
inc
xchg
push
imul
pop
push
int
add
mov
inc
xchg
add
nop
stos
lods
fistps
nop
or
adc
mov
les
mov
rclb
cmp
decl
bound
into
loop
loopne
pop
xchg
xchg
add
iret
ljmp
push
mov
push
aad
add
jo
mov
data16
and
test
decl
into
jae
call
inc
and
and
fisubl
rolb
add
push
movsb
or
or
jge
lock
pop
out
in
dec
cmp
push
add
lods
outsb
add
adc
xchg
sub
or
mov
sti
jg
push
mov
test
loope
cmp
ss
mov
cmp
pop
dec
adc
les
sbb
pushf
mov
test
popa
add
shll
hlt
sbb
scas
stos
jle
cmp
mov
jge
mov
adc
and
sbb
xchg
xor
jbe
decl
cmpsb
aad
jne
or
cmp
subb
and
mov
jl
aad
or
pusha
xor
movsb
cli
gs
mov
aaa
pusha
dec
pop
rolb
fmuls
push
test
incl
repz
inc
mov
pop
roll
imul
add
add
stos
mov
movsl
imul
clc
pop
shlb
xchg
movsb
xlat
push
popa
adc
pop
mov
out
add
lods
push
and
mov
cmp
nop
xorb
pop
cmp
adc
add
mov
cld
fidivrl
or
lds
sbb
call
xor
push
outsb
lcall
sbb
cmp
mov
mov
int3
hlt
push
push
mov
aas
scas
cmpsl
les
sbb
mov
inc
push
add
mov
lock
cmp
lock
into
xor
fisubrl
adc
scas
call
push
sub
and
lock
dec
loop
xor
ljmp
fsts
pop
xchg
loop
adc
xlat
xchg
mov
adc
pusha
loopne
inc
jge
lock
fwait
sub
shlb
or
and
mov
rorb
jo
or
cld
fistl
cltd
inc
mov
loop
add
stc
sub
sbb
ljmp
pop
subl
mov
adc
loop
outsb
add
or
add
decl
pop
les
mov
iret
add
lcall
sbb
dec
lds
js
mov
push
lds
leave
mov
mov
or
clc
add
out
test
popa
xchg
mov
ss
pop
add
push
push
pop
roll
add
ret
arpl
xchg
push
add
popf
add
jb
dec
push
in
xchg
scas
adc
and
push
fistpl
pop
lods
jbe
add
ds
mov
add
addb
mov
mov
add
pop
pop
movsl
loope
sub
add
lds
cmp
adc
mov
mov
push
gs
and
add
mov
into
lret
insb
jmp
pop
sub
call
bound
adc
in
push
push
or
push
jle
add
inc
or
dec
sahf
jmp
lock
decl
push
cmp
sbbl
mov
subl
mov
sbbb
add
mov
add
scas
jmp
out
pop
or
js
pop
cmp
sub
mov
in
loop
or
push
xor
mov
lods
and
dec
and
pusha
jmp
sbb
sub
mov
mov
inc
add
cmp
je
sub
iret
inc
or
out
adc
test
in
inc
in
cmpb
andb
and
push
adc
movsl
inc
ss
or
xchg
mov
pop
sub
push
push
push
test
adc
adc
add
inc
dec
add
push
and
adc
push
movsl
lahf
add
add
adc
xor
pop
xchg
and
test
inc
adc
rorb
pop
outsl
push
sarl
pop
repnz
sbb
push
or
or
add
cmp
adc
rolb
cs
jmp
leave
and
add
cmpsb
mov
jmp
push
mov
push
adc
xchg
or
xchg
xor
push
shlb
inc
push
push
inc
stos
mov
inc
push
add
sub
mov
inc
xchg
data16
mov
mov
sbb
mov
add
inc
adc
bound
addb
jp
add
push
cmpsl
add
out
inc
add
sub
testb
arpl
push
pop
outsb
cmp
ss
xchg
scas
push
mov
fs
or
mov
and
aad
fnstsw
mov
data16
push
sub
pop
shlb
cmp
or
lret
mov
ret
ljmp
jb
pusha
sub
mov
fcompl
negl
xchg
fnstcw
add
sbb
lds
outsb
or
push
cmp
lock
mov
popa
push
and
les
roll
cltd
push
add
push
adc
clc
or
or
push
loope
add
sahf
sub
adc
cmp
sub
sbb
outsb
clc
aaa
or
add
mov
mov
aam
adc
adc
mov
rolb
daa
add
enter
lcall
mov
sub
or
aam
lret
pusha
xor
rol
daa
loopne
mov
cmp
and
jb
xor
add
rcl
ja
addb
add
push
jmp
sub
dec
jo
pop
cmp
adc
test
inc
and
pop
sub
movsb
fs
cmpsb
loopne
and
call
or
adc
ret
and
es
add
repz
xchg
sub
testb
lock
clc
data16
or
fadd
cmp
cmp
inc
xor
mov
xor
push
and
pop
or
add
lcall
pop
xor
push
sbb
jns
push
fwait
jb
cmc
lods
leave
inc
insl
outsl
pop
movsb
stos
pop
push
nop
add
les
add
nop
leave
cmp
dec
sub
pop
or
mov
xchg
add
push
pop
push
sub
js
inc
aas
add
scas
ja
ljmp
pop
outsb
or
add
mov
or
out
std
push
test
sub
add
add
add
nop
lods
mov
or
mov
scas
sbb
jno
inc
andb
pop
je
out
or
ljmp
adc
adc
shrb
mov
add
popf
nop
and
in
loopne
lds
jg
mov
loopne
mov
mov
mov
pusha
xchg
jmp
xor
and
pop
pusha
scas
data16
cmp
add
ds
lods
xchg
add
or
ljmp
arpl
dec
pop
mov
and
adc
add
inc
popa
das
add
andb
mov
subl
fwait
mov
subb
sub
add
xchg
sbb
pop
in
add
fisttpl
movsl
clc
insb
ret
add
mov
std
fucom
dec
mov
xor
mov
loopne
and
int3
push
mov
add
push
ret
outsb
rorl
fmull
mov
and
sub
and
jmp
dec
shlb
cld
add
sahf
orl
test
adc
mov
lock
je
das
jb
shlb
pop
adc
mov
dec
inc
inc
push
adc
lods
stos
sbbb
mulb
add
xchg
pusha
daa
jbe
xchg
or
jb
ficoms
sbb
pop
loopne
push
add
sub
fsubp
hlt
add
fsubrs
push
les
cmp
enter
jo
pop
inc
dec
adc
cmc
mov
pusha
jne
jg
movsl
push
pushf
adc
and
jecxz
push
add
addl
pop
shll
scas
add
out
orb
addl
xor
mov
xchg
aas
enter
loopne
inc
sbb
dec
mov
add
and
lcall
pop
sbbb
jnp
sbbb
cmp
sbb
loope
pusha
aad
sbb
sbb
push
push
rorb
add
cmp
and
insl
adc
in
adc
or
xchg
test
fstpl
rclb
mov
jbe
shrl
jle
and
fcomps
pop
and
test
sbb
push
movsb
mov
insl
push
cmp
mov
cmpl
and
aad
scas
mov
inc
aas
xor
sbbl
dec
nop
push
rol
arpl
xchg
xor
cmp
mov
or
sbb
notb
lock
rcll
pusha
rcl
pop
xchg
add
xorb
mov
dec
pusha
les
roll
ja
sub
xlat
pop
pop
sbb
pushf
cltd
mov
mov
sub
fimuls
insb
lock
cmpl
sbb
add
ss
mov
pop
loopne
out
pop
xchg
clc
or
pusha
sub
jle
cmp
sub
rcrb
nop
mov
add
pusha
lock
pusha
adc
out
cmp
xor
pop
add
xor
pop
decl
add
pusha
pop
lock
addb
xchg
fs
add
hlt
cs
push
add
addb
add
mov
arpl
pushl
adc
adc
fsubrs
and
mov
add
orl
pop
push
mov
jns
jp
flds
dec
roll
add
roll
and
jb
adc
loop
ret
dec
adc
adc
add
test
cld
cmpsb
test
repnz
jo
nop
stos
test
inc
pop
mov
stos
xor
jp
or
jecxz
in
sbb
rcrl
loope
mov
pop
and
pusha
mov
sbb
les
mov
cmp
add
pop
subb
rorl
cmc
cmpsb
nop
cmp
xor
subl
push
movsl
adc
push
nop
lods
inc
sbb
push
nop
or
fisttps
jp
mov
add
jmp
es
pusha
fnstcw
xor
or
cmpl
call
sub
mov
cs
loopne
ds
sub
push
cli
scas
or
xchg
and
cmpb
cli
ss
scas
shlb
sub
or
add
mov
sbb
mov
fistpll
lds
addb
ja
scas
sub
xor
push
mov
or
xchg
or
jmp
mov
push
shrb
inc
test
pop
mov
push
sar
pushl
push
movsl
mov
mov
cmpsl
mov
add
movsb
pusha
pop
ret
jns
adc
nop
scas
cli
call
add
nop
add
add
int
add
mov
in
xchg
cli
movsb
lock
xchg
lods
jno
cmpsl
nop
pushf
subb
add
insb
jnp
mov
adc
push
or
call
jg
jmp
cmp
xor
cmpsb
loopne,pn
pop
ja
sub
nop
or
ja
lock
lock
or
mov
jl
das
xchg
shlb
xchg
cwtl
loopne
cltd
loop
adc
rcrl
cmc
sub
loopne
loope
aad
pushl
pusha
add
xor
ret
or
jp
xchg
stos
adc
cld
sbbl
adc
push
add
sbb
outsl
add
and
mov
fbstp
push
add
sub
std
or
out
cmovno
movsb
in
fdiv
push
bound
sbb
cmp
test
int
push
shrl
imul
mov
sbb
mov
cmp
push
std
nop
cmp
shlb
or
add
xor
sti
xor
mov
pop
leave
xor
mov
xor
inc
dec
and
add
push
xchg
and
ljmp
and
jmp
adc
fldenv
lock
ljmp
push
and
adc
bound
and
adc
and
jecxz
rol
ja
sub
xchg
dec
xchg
inc
cmpsb
fldenv
stos
outsb
push
mov
jg
aad
js
rcrl
dec
push
out
xor
cli
jo
mov
cltd
mov
dec
in
jo
outsl
aad
add
pop
jmp
jbe
cld
push
shlb
pop
movsb
mul
dec
popf
pusha
jg
mov
dec
iret
bound
xor
les
and
dec
add
imul
rcll
mov
cli
scas
mov
shlb
mov
push
cmp
adc
frstor
in
add
test
andb
dec
nop
or
leave
cmp
pop
mov
sub
andb
cli
or
dec
mov
pop
push
cmp
pop
adc
inc
mov
or
or
xchg
jbe
in
outsl
mov
xor
mov
xor
add
push
mov
jnp
addb
add
enter
loope
dec
xchg
pop
dec
cmp
cwtl
popa
sub
pop
in
bound
add
in
mov
mov
cld
jl
arpl
sub
mov
mov
addb
cwtl
cwtl
or
call
adc
jmp
sbb
call
adc
cmp
add
aam
mov
repnz
xlat
adc
mov
add
dec
adc
or
jns
call
in
add
cmp
xchg
aam
pop
and
sub
pop
jle
iret
add
add
out
bound
outsl
push
cli
stos
std
cmp
mov
mov
mov
sbb
adc
xorb
jno
pop
sub
xorb
xchg
orb
jae
sub
add
bound
mov
dec
je
outsb
adc
xchg
add
fstps
add
dec
in
out
or
mov
and
lock
cmp
dec
rorb
fs
rolb
rcl
or
cmp
mov
mov
wrmsr
mov
pop
in
outsb
dec
add
fsubs
cli
inc
adcb
insl
jnp
rcrb
loop
sahf
test
movsb
movb
aad
or
add
repnz
cmp
popf
add
xchg
sbb
movsb
mov
mov
hlt
push
push
push
and
into
movsb
in
push
push
pop
mov
push
leave
inc
add
add
or
add
sub
aad
shl
xchg
js
jecxz
jae
lds
cmp
aaa
add
or
mov
cmp
decl
inc
inc
push
mov
lods
inc
adc
orb
jo
cli
add
inc
or
add
rorb
movsb
andb
clc
xor
push
ljmp
add
sbb
out
jg
aad
cmpsb
xchg
adcb
jl
push
call
int
jne
or
pop
in
inc
dec
out
test
add
sarb
lods
imul
shrl
loop
stc
pusha
add
lret
mov
adc
inc
jecxz
sbbl
mov
into
cs
xor
movsl
mov
movsb
hlt
ret
outsb
lds
and
lock
movsl
and
cmp
test
push
adc
roll
dec
xor
and
call
adcl
shlb
pop
rcll
pop
cmpsb
push
pop
loope
or
ret
adc
inc
add
add
addb
mov
rol
mov
aas
addb
scas
mov
push
and
add
ret
cmpsb
lods
push
adc
add
fwait
rolb
jo
loopne
ja
push
add
std
push
adc
jae
es
mov
jle
jmp
push
inc
add
clc
fs
xor
cld
push
or
cmp
andb
sub
call
add
call
aad
pop
mov
add
sub
cld
pop
or
notb
pop
dec
cmc
loope
mov
mov
push
lcall
pop
xchg
xchg
pusha
nop
or
add
xor
push
push
test
nop
sub
inc
add
or
cmp
lahf
cld
pop
inc
jmp
sub
xor
xor
pop
adc
add
fnsave
and
cmp
rclb
or
in
jle
fisubl
test
in
loopne
scas
mov
xchg
or
les
fisttpl
or
mov
mov
inc
cmp
lcall
cmp
cmpb
cmp
pop
push
inc
cwtl
insb
cmp
cld
xchg
jp
loopne
ljmp
and
lods
std
bound
mov
dec
push
mov
inc
add
lds
mov
cmp
and
aas
add
mov
pop
lea
xchg
adc
mov
dec
repnz
mov
mov
je
xchg
shrb
call
adc
cmpl
push
xchg
jnp
clc
push
popa
aaa
xchg
adcb
cmp
xchg
out
or
add
sbb
mov
std
and
push
add
stos
hlt
fwait
stos
inc
cltd
or
pop
lods
sbbb
inc
decl
xor
das
and
pop
ja
push
mov
or
sarb
xor
cmc
inc
jno
ret
js
or
repnz
adc
inc
pop
pop
jge
mov
sbb
inc
inc
push
jl
dec
cmp
lea
inc
pop
es
es
scas
mov
add
pop
or
pop
pop
clc
push
xchg
push
orb
or
nop
pop
ret
mov
adcl
inc
push
outsb
pop
aad
negb
sahf
sub
add
mov
rolb
mov
or
les
je
push
xchg
addl
mov
mov
mov
dec
and
jbe
icebp
lock
frstor
fwait
push
adc
xchg
or
push
mov
mov
xchg
inc
sub
xchg
sbb
movsl
int3
test
add
ljmp
inc
push
or
jo
lods
push
js
inc
das
push
pop
lods
xchg
call
jmp
push
cmpsl
popl
mov
cmp
add
add
cltd
sub
xor
dec
fidivrs
add
and
decl
xchg
loop
or
incb
lock
push
cmpsb
rclb
push
pop
cmp
icebp
ljmp
xor
adc
inc
push
cmp
clc
dec
mov
push
sub
and
add
and
outsl
push
sar
fucom
rol
pop
cmp
ljmp
xor
mov
sbb
aad
cs
fdivrs
and
and
in
ja
lret
insl
cmc
rorl
js
push
adc
or
icebp
jmp
pop
jo
inc
inc
xor
enter
icebp
jg
cmc
push
xchg
mov
push
adc
mov
lcall
mov
pop
xor
adcb
cwtl
jg
pop
or
push
xorb
scas
mov
and
pushf
mov
push
cmp
xchg
adc
lock
add
cwtl
and
aaa
fisubrs
adc
adc
sbb
aaa
pop
cmp
fnstenv
dec
adc
mov
neg
sub
adc
or
aaa
xchg
push
and
loopne
fdivr
mov
nop
cmpsl
pop
adc
mov
ja
adc
push
adc
outsb
push
sahf
sbb
cmp
add
adc
imul
inc
ljmp
mov
adc
mov
mov
sbb
mov
or
pop
adc
xchg
pop
inc
cwtl
cmp
sub
decl
enter
mov
and
add
arpl
mov
inc
rclb
cli
pop
xchg
jne
mov
test
inc
mov
push
mov
test
jne
sahf
push
add
popa
push
push
lds
xchg
dec
rcll
inc
dec
or
testb
fistpll
mov
jecxz
and
push
sarl
inc
mov
rolb
push
push
cs
ljmp
adc
or
inc
and
push
movsb
adc
or
gs
push
popf
or
push
test
jmp
adc
or
xor
xchg
fistps
ret
sbb
add
sbb
or
pop
movsb
lds
add
jo
int
icebp
lods
gs
hlt
movsb
xchg
mov
and
scas
je
fdiv
fbld
adcb
inc
jne
or
sbb
xchg
push
jno
lcall
cmp
and
shrb
xchg
mov
add
jg
and
cmp
push
lods
mov
push
movsb
fsub
push
icebp
cmp
add
sbb
pusha
cmp
cmp
xor
and
add
lret
xor
add
clc
xchg
add
add
lods
push
cmp
incl
jle
int
sub
addb
jg
es
cmp
jo
xchg
sub
or
aad
call
jae
inc
adc
mov
xorl
push
shld
pop
mov
sub
mov
sub
aam
jbe
les
jg
call
and
cmp
test
cmp
adc
mov
mov
shlb
mov
lods
insb
cmc
cmc
mov
push
or
push
or
fisubrs
push
inc
or
xchg
rolb
jb
aas
cmp
lock
adc
rorl
cmpsl
cmp
in
test
test
movsb
jb
mulb
dec
rclb
js
xchg
loop
add
mov
incl
push
lods
xchg
adc
ds
mov
push
fdiv
filds
aas
push
mov
jne
fidivs
sbbb
pop
add
mov
add
add
pop
aas
and
or
sbb
jp
lods
jg
xchg
jmp
sub
aaa
mov
stc
sarb
mov
call
pop
jbe
mov
jb
outsb
js
add
bound
outsb
add
sub
mov
adc
or
cli
pop
or
xchg
push
push
and
in
pop
adc
test
sbb
dec
cmp
mov
call
sub
ljmp
lcall
rclb
add
cli
decl
dec
adc
adc
adc
clc
mov
dec
sub
push
and
mov
sub
mov
ljmp
xchg
mov
xchg
inc
stos
mov
xchg
push
andb
das
movsb
push
fcompl
cmp
in
add
fnstenv
fsubrs
es
adc
or
shrb
cmp
or
scas
or
xor
or
loopne
add
push
movsb
adc
and
clc
rcl
lock
jge
xchg
imul
icebp
enter
mov
test
in
push
pop
sub
inc
inc
xor
push
add
pushl
add
mov
add
lldt
or
cld
add
or
outsl
cmp
sbb
addb
xchg
adc
test
pop
test
pop
fstpl
inc
scas
add
aad
fdivl
cmp
jmp
test
push
mov
les
mov
jle
mov
add
mov
cmp
cmpb
shl
ret
adc
mov
pop
adc
fadds
add
or
adc
mov
adc
push
add
leave
fsubs
or
dec
out
add
dec
mov
enter
imulb
add
lock
cmc
sbb
mov
dec
push
faddp
stos
mov
test
ljmp
or
push
xor
add
clc
dec
adc
stos
push
or
sub
xchg
out
pop
adc
and
in
xorb
int3
sbb
inc
mov
xor
or
cmp
fmuls
sbb
jmp
pop
pop
fs
es
add
fucomip
add
fsubs
or
xor
out
shr
dec
add
push
jp
in
add
popl
sbb
push
adc
ljmp
xor
icebp
stos
add
add
fs
pop
das
push
cmp
xlat
xchg
cmp
enter
cmc
add
out
pop
push
cmpsb
pop
sub
mov
xor
in
andl
aad
cmpsl
mov
call
jmp
repnz
xchg
loopne
test
mov
xorb
cmc
add
xor
mov
ss
mov
push
pop
popf
adc
sarb
cli
inc
or
std
filds
pmulhw
cs
aad
inc
push
ret
cmpsb
les
rolb
aad
test
mov
in
cs
lret
or
iret
inc
addb
add
mov
shlb
xchg
mov
pushl
adc
push
and
add
cltd
xor
dec
sbb
pop
aad
cli
sbb
sub
fisttps
jle
js
ret
sbb
or
sbb
rcrb
dec
xor
sbb
aam
daa
push
push
andb
push
mov
sbb
add
push
add
jp
in
push
lods
jle
jl
out
add
rolb
fldl
inc
mov
test
pop
ret
mov
rclb
add
or
mov
adc
inc
xlat
int
mov
incb
aas
addb
add
addb
incb
or
add
rorb
fbstp
mov
push
enter
clc
lds
insb
inc
pop
lods
mov
xor
mov
sbb
push
inc
mov
outsl
inc
incl
push
inc
in
daa
orb
and
mov
addl
inc
push
jbe
jo
pop
push
icebp
stos
mov
sbb
and
out
cmp
lcall
and
cmp
pop
xchg
hlt
mov
inc
pop
mov
cs
add
sarb
xor
ret
sar
sti
jnp
adc
or
setb
push
pop
adc
sub
cmc
and
cs
add
cli
mov
outsb
loopne
add
in
sub
and
sbb
add
popf
xchg
lret
cmp
and
mov
sbb
outsl
ret
push
jg
inc
push
popa
sub
jo
das
xchg
popa
cmpsb
push
sbb
adc
pop
xchg
pop
cwtl
xchg
and
shrl
xchg
mov
cld
jp
dec
inc
dec
xchg
mov
push
sub
jl
call
es
sbb
and
and
adc
add
or
sub
test
and
push
push
cmp
pusha
or
movsb
sub
movsb
les
xchg
or
es
mov
cmpsb
push
cld
movsb
ret
sbbb
call
loope
sub
cmc
ret
shlb
loopne
cmp
out
and
inc
and
addb
and
cmp
sub
and
jl
call
or
das
and
add
and
mov
jne
add
xchg
sub
add
and
std
das
nop
pop
add
xor
cmp
mov
xor
adc
fwait
pop
push
lds
ds
je
inc
pop
into
rorl
pushl
imul
sbb
fldt
or
addb
loop
mov
and
jg
dec
cmp
pusha
daa
insb
xor
sbb
test
adc
rol
and
ljmp
mov
cld
loopne
and
cmp
pop
mov
adc
push
fwait
and
lock
inc
add
mov
mov
cmp
inc
and
mov
or
pusha
fcompl
cmp
and
in
xchg
inc
xor
push
icebp
add
aam
shrb
mov
ret
adc
scas
adcb
outsl
sub
nop
icebp
movsb
popa
rclb
test
push
pusha
filds
rorb
les
xchg
sar
nop
and
dec
rolb
shlb
fildl
stos
movsb
sarb
or
pushl
push
cmp
sbb
pusha
inc
dec
test
jle
push
mov
rorb
mov
dec
mov
scas
add
xchg
hlt
gs
call
sub
cli
pushf
rolb
cli
inc
mov
push
jnp
cltd
sbb
xchg
imul
mov
lods
add
pop
fidivrs
ja
or
add
icebp
add
int3
in
les
outsb
lcall
add
pop
add
adc
inc
and
jb
mov
push
push
pop
or
sbb
adc
shrb
movsl
lahf
inc
mov
push
roll
mov
or
or
adc
dec
mov
cli
push
addb
mov
je
mov
xchg
add
jbe
jle
and
jle
push
mov
push
adc
push
sub
shl
or
incl
aad
jo
sbb
lods
out
movsl
lds
push
inc
sub
pop
shl
xchg
aam
and
push
stc
push
and
mov
mov
ret
lock
sarb
jo
and
inc
xorb
or
shlb
adc
cld
lahf
jg
or
aaa
and
add
mov
mov
roll
or
fs
rol
add
add
sub
mov
ss
jp
jle
adc
fwait
bound
and
bound
test
mov
in
imul
incl
leave
mov
mov
mov
xor
cltd
add
movsl
enter
inc
icebp
mov
mov
sub
dec
cmp
jo
icebp
or
push
mov
or
xchg
inc
xor
fcoml
and
clc
and
add
jmp
lea
movsb
loopne
bound
xchg
xor
iret
push
or
push
sbb
movsl
std
cli
es
mov
and
push
cwtl
lret
mov
push
ds
bound
mov
jbe
add
sbb
pop
enter
jbe
ret
filds
mov
in
movsb
addr16
add
movsb
jp
rcl
arpl
push
clc
inc
add
cmp
sub
fidivs
cli
pop
jmp
subb
pusha
inc
push
and
mov
sub
mov
or
fbld
cmp
pusha
xchg
rcrb
jo
cli
mov
nop
nop
or
pop
adc
push
in
xor
shll
pop
mov
sbb
js
popf
pusha
sub
sbb
cmp
andl
mov
nop
hlt
pop
and
and
cmpsb
cmp
or
pop
lods
fnop
decl
test
xor
rcrb
aad
add
pusha
xchg
pop
insb
mov
aaa
xchg
adc
jo
subb
pop
mov
push
jle
xor
inc
fnsave
jb
add
xor
int
shr
sbbb
xchg
push
cli
or
adc
in
push
adc
les
movsl
aam
fildll
insl
or
mov
lcall
sbb
lfs
shll
ret
xchg
xor
inc
pushf
sub
aad
dec
mov
xchg
mov
sub
rorl
cwtl
add
adc
and
and
xor
mov
scas
lcall
jmp
mov
sbb
cltd
loopne
loopne
sbb
sahf
pop
xchg
push
cwtl
push
and
pop
insb
std
adc
cmp
xor
or
xor
push
in
out
cli
add
sbb
or
xchg
xchg
ret
add
out
mov
pop
aad
pusha
repnz
icebp
movsl
shr
mov
cmpsl
lea
in
out
movsl
and
inc
shl
or
ss
inc
or
inc
jmp
push
pushf
cmp
ljmp
out
pop
xchg
sbb
and
jae
fucomi
into
cwtl
enter
cmp
jo
cmp
ficoms
add
ret
sbb
push
and
push
cld
fwait
inc
cmp
into
das
push
fmul
shlb
test
pop
add
dec
add
decl
mov
xchg
mov
jmp
cmp
aas
inc
sbb
mov
hlt
push
pop
call
cmp
adc
inc
movsl
mov
cmp
add
nop
cld
mov
xchg
lcall
adcl
sub
inc
inc
push
jb
mov
add
frstor
add
pop
push
jns
add
fwait
rorb
sub
mov
addb
fdivr
movsl
push
jle
les
ret
push
outsl
pop
or
loop
push
aam
insl
rolb
xchg
into
push
shlb
cs
clc
push
lret
push
inc
aam
leave
sbb
xlat
rcrb
pop
aad
mov
dec
je
or
in
sbb
ljmp
popl
and
xchg
push
loopne
and
pop
jo
int3
push
hlt
adcb
pop
fstpl
int3
mov
xchg
loope
cmp
mov
loope
fisttpl
add
shlb
mov
pop
int
nop
dec
or
cmpsb
ret
add
sub
cmpsb
shr
fidivs
stos
cmpsl
call
aad
xor
inc
jp
dec
jno
push
in
dec
mov
loope
or
adc
sbb
push
add
loope
add
lea
rcrb
jb
or
pop
pop
rcl
pop
fucom
jo
push
push
cmpl
arpl
dec
xor
mov
pusha
pop
pop
cld
jg
nop
fnstcw
movsl
mov
cmp
sub
loope
jns
sbb
or
rolb
inc
push
push
rolb
aad
fistps
push
sub
into
sarb
adc
pop
shrb
sbb
loopne
mov
sbb
lds
mov
xchg
add
mov
adc
cmp
xorb
inc
jmp
sub
movsb
dec
mov
movsl
pushf
inc
xchg
rcrb
mov
mov
sub
push
push
pushl
xchg
fsubrs
mov
shr
or
fldl
roll
shlb
and
xchg
leave
in
pushf
sbb
mov
and
mov
or
fsubrs
icebp
insb
fcmovnu
sub
andb
inc
pop
cld
xchg
xchg
ljmp
data16
or
add
fisttpll
mov
adc
xchg
cmp
fsubs
dec
add
rcr
add
rclb
pusha
daa
add
mov
rcl
mov
rcrl
push
inc
scas
js
shlb
in
add
sbb
cmp
add
orl
dec
cwtl
popa
loopne
or
jo
outsb
jb
sub
pop
push
bound
pop
loopne
scas
sub
call
cmp
les
sub
fldl
cmp
and
ljmp
incl
inc
xor
addb
xchg
rorb
sbb
mov
mov
xchg
add
jbe
jle
or
or
cmp
mov
push
stos
mov
adc
mov
xor
popf
and
aad
int3
fiaddl
cltd
or
push
call
add
pop
mov
dec
stos
add
ret
mov
inc
mov
aam
mov
sbb
and
or
aad
inc
mov
test
dec
cmpsl
fsubrl
or
andb
xchg
jle
orl
push
repnz
mov
test
mov
add
xchg
shrb
inc
push
shrb
outsb
and
add
cmc
or
shrb
ss
ret
push
mov
jnp
push
pop
pushf
adc
pop
xorl
repnz
popl
and
jg
inc
inc
adc
cmp
adcb
pop
push
fsubrp
roll
add
add
mov
bound
addb
clc
ljmp
call
jp
and
rcll
pop
xlat
rcrb
add
outsl
bound
cmp
xor
inc
add
pop
cld
or
sbb
inc
cwtl
jp
scas
or
mov
sarb
add
mov
mov
shll
and
pop
xor
or
dec
popf
and
sbb
dec
loopne
xor
push
push
cld
push
pusha
xchg
shll
adc
sub
arpl
push
jno
add
jle
and
mov
inc
mov
cld
xchg
rolb
loope
rclb
or
add
push
rolb
add
pop
adc
inc
sub
inc
xchg
xchg
aaa
nop
test
lcall
push
cmp
push
test
fs
and
lret
mov
cmc
lods
ja
mov
aas
into
scas
sbb
lret
inc
les
inc
mov
or
loop
adcb
sbb
sub
add
jbe
pop
pushf
loop
sbb
push
push
mov
cmp
cmp
mov
push
add
rcrb
xchg
in
lea
andb
pop
and
mov
or
pop
push
push
cmp
or
pop
sbb
push
jbe
dec
shl
into
mov
sub
loop
ret
adc
hlt
movsb
lock
pop
sbb
push
add
sbb
add
shrl
push
xchg
mov
pop
test
sbb
stos
es
pop
add
fs
out
and
push
jg
rcr
or
inc
adc
pop
int
nop
mov
mov
add
movl
loopne
lret
je
dec
mov
addb
add
add
adc
inc
push
test
sbb
push
cwtl
in
cmpb
cmpsb
callw
mov
and
cwtl
sbbb
shlb
hlt
fmuls
es
xor
inc
add
pusha
pusha
aam
mov
add
jmp
aad
fbld
shl
xchg
aad
add
add
fs
fsubr
xlat
rcl
push
nop
cmpb
cmpsb
aas
mov
cs
or
out
popa
mov
bound
mov
push
push
and
xchg
or
push
and
add
inc
pmuludq
jecxz
repz
adc
arpl
hlt
aam
jp
cmp
std
adc
fists
inc
mov
and
ficomps
pusha
add
add
jne
fisubrs
test
aaa
imul
mov
ret
shrb
mov
cmp
push
cmpsb
pop
cmp
test
movsl
addl
ljmp
popf
adc
and
ret
mov
cmp
cltd
push
test
inc
test
outsb
popa
mov
scas
lds
push
xchg
test
sub
push
xchg
pop
or
adc
cmc
in
adc
xchg
idivl
femms
mov
add
push
rorb
add
repnz
and
or
icebp
push
adc
xchg
movl
les
dec
dec
pop
sub
adc
orl
pushf
sub
mov
and
cmp
and
imul
mov
js
mov
push
xchg
or
shlb
xor
push
add
xchg
adc
cmc
ds
rorb
xor
loopne
push
ficoml
mov
int
hlt
mov
addb
hlt
and
dec
stc
add
cmc
add
jo
sbb
and
pop
pusha
xorl
and
pushf
mov
add
test
add
inc
loope
or
iret
loope
push
fs
mov
add
call
mov
data16
inc
cld
aaa
push
sti
adc
repz
bound
popa
or
jno
out
fisubrs
push
add
xor
mov
lcall
fwait
loopne
push
mov
mov
test
lock
inc
push
add
xor
movsb
or
mov
shlb
ficoml
xchg
mov
les
shlb
addb
inc
ds
add
mov
inc
push
add
pop
push
add
outsb
pop
aaa
or
cltd
xor
and
ljmp
aas
add
jmp
push
jmp
or
out
mov
mov
aam
aad
add
shrl
lods
aam
xchg
les
adc
je
aam
cmp
dec
popa
mov
mov
sub
data16
pop
pusha
mov
pusha
adc
adc
or
and
cmp
xor
xchg
inc
sub
push
mov
sub
and
xor
movsl
ficomps
rcr
mov
mov
popa
or
mov
ljmp
push
loop
andl
test
add
test
int3
fcomps
in
jg
cmp
add
js
jo
jge
ja
mov
and
ret
mov
add
test
and
mov
cmp
cmp
push
cmp
push
nop
es
or
or
adc
jle
das
test
data16
shll
sahf
pop
cmp
pop
jo
cld
mov
inc
dec
xor
in
std
pop
mov
mul
out
push
fsts
ja
pop
out
sub
cmp
popl
mov
into
push
cltd
call
cmp
push
int3
sbb
mov
inc
insl
lcall
aam
fnstenv
add
shlb
incb
scas
or
mov
mov
sbb
ljmp
stos
mov
xor
lods
xor
std
test
fdivs
mov
mov
mov
icebp
xchg
push
adc
dec
cmp
repnz
pop
shll
and
into
cmp
movsl
loopne
int3
popa
mov
fcmovnu
xor
push
and
fisubrs
or
xchg
lock
les
fnsave
cmp
inc
cltd
fidivrs
dec
int3
outsb
andl
lea
hlt
pop
cmp
das
loope
sarl
sbb
sbb
add
xor
sbb
pop
or
mov
lods
inc
cmp
fsubrs
jl
std
loopne
jl
loope
dec
push
adc
lcall
lahf
lock
les
ljmp
cmpsb
loopne
xchg
mov
push
aas
daa
movsl
loop
cmc
lret
sub
pop
lock
push
test
fbld
pusha
push
mov
lahf
dec
or
fcoml
es
fbstp
fistpll
cmp
int3
loopne
addb
mov
inc
std
stos
test
aam
mov
mov
cs
call
adc
inc
mov
xor
push
lret
mov
cli
call
mov
xchg
add
call
xor
mov
out
fs
push
xor
stos
xor
popa
test
aam
pusha
adc
aam
not
inc
push
pop
jecxz
std
mov
cs
insb
or
mov
lea
push
sub
pop
test
cmp
adc
mov
add
add
cmp
ja
pusha
cwtl
sbb
cmp
mov
sbbb
dec
loope
int
inc
mov
and
mov
adc
movsl
incl
adcl
mov
addb
xchg
or
cmp
inc
pop
rorl
adc
repnz
mov
mov
enter
les
data16
push
mov
fiaddl
add
push
cmp
sub
ljmp
jo
loopne
mov
mov
and
xor
and
stos
mov
cli
lods
bound
and
xor
pop
and
loopne
in
jg
push
and
xchg
push
orl
cmp
rolb
shlb
add
mov
ljmp
cli
incl
addb
sbb
mov
stos
mov
and
leave
nop
sub
out
out
and
cld
pop
mov
shlb
jbe
or
out
pop
sahf
scas
stos
and
push
add
mov
dec
xchg
lds
shll
in
call
pusha
andb
popa
mov
bound
cmp
shrb
fnstsw
adc
nop
je
adc
lods
sub
inc
cmp
cs
imul
popa
loopne
pop
sar
mov
dec
sahf
sahf
and
rol
pop
rclb
pop
add
add
sbb
jo
mov
and
and
mov
add
aad
xor
mov
push
loop
pusha
cmp
push
add
add
mov
sub
xchg
insb
push
push
cs
in
mov
les
int3
inc
stos
lcall
or
andb
inc
xor
fsts
cmp
push
inc
add
mov
xchg
adc
mov
jle
adc
and
xchg
std
js
mov
mov
add
xchg
rolb
loope
adc
jno
outsb
mov
jo
cs
mov
frstor
insb
sub
inc
cs
fadds
and
push
cld
aam
add
rcrb
or
fldl
ret
in
push
xchg
mov
lea
jo
xor
push
push
adcb
push
mov
mov
mov
repnz
pop
das
adc
adc
adc
pushf
adcb
sbb
test
inc
mov
jbe
sbb
push
shrl
pop
cmpb
or
cmp
pop
push
add
test
jo
notb
cmp
push
mov
rcl
add
pop
dec
loopne
lock
mov
pop
movsb
push
mov
jg
lds
sbb
ffree
in
adc
jo
push
mov
lds
xlat
loope
into
cwtl
mov
gs
pop
cltd
add
add
int
jb
inc
mov
push
out
mov
pop
sub
push
push
test
mov
or
inc
cmp
sbb
bound
add
xlat
rclb
pop
mov
sahf
aad
aad
or
or
push
pop
cltd
cld
daa
or
adcb
sahf
int
xchg
add
xchg
add
push
sbb
dec
jge
imul
or
out
daa
movsb
mov
xorl
ds
repnz
dec
jl
mov
push
push
das
dec
fwait
mov
mov
movsl
out
inc
push
and
test
add
lods
sbb
nop
lods
xchg
jp
cwtl
es
shll
jle
push
rcll
add
sbb
push
test
and
pop
adc
fs
xor
mov
popa
xlat
adc
sub
rcrl
mov
adc
push
repnz
jbe
sbb
lcall
sub
push
mov
adc
or
dec
shlb
push
dec
stos
stos
push
add
add
ja
adc
and
dec
and
sbb
cld
mov
or
lcall
cmc
cmp
sub
mov
mov
fmuls
fsubl
add
outsb
or
insb
xchg
lds
lcall
and
lahf
xor
cld
popf
jbe
lahf
jle
add
nop
test
mov
ret
fldl
ret
xor
sti
pop
push
lret
sarb
inc
cmp
adc
ss
or
test
push
rorb
add
inc
dec
and
out
fs
xor
pop
mov
sbb
jae
push
int3
push
scas
push
adc
outsb
xchg
adc
loopne
cld
cmp
or
orb
add
xchg
leave
mov
int
adc
cmp
rclb
add
xchg
or
push
sbb
outsb
pop
and
rclb
adc
rorb
add
inc
daa
push
lahf
rclb
lods
and
daa
jmp
sbb
andb
pop
cmp
orb
adcb
fld1
adc
mov
rcrb
xchg
mov
cmp
mov
shl
loop
nop
cwtl
iret
mov
mov
xchg
xor
push
pusha
and
jecxz
pop
test
add
andb
add
dec
ljmp
sbb
sub
or
pop
sarb
add
movsb
pop
rclb
inc
or
ljmp
lcall
inc
dec
mov
pusha
call
dec
xlat
pop
push
decl
push
mov
mov
mov
sub
dec
xor
ljmp
jecxz
call
jmp
sub
ror
insb
mov
mov
movsb
clc
gs
cmp
sub
sahf
gs
add
sub
or
jbe
repnz
out
push
xor
or
test
push
pop
out
shlb
les
rorl
cmp
fcmovbe
mov
mov
jbe
mov
jae
jp
loopne
jecxz
arpl
lds
adc
aam
and
jg
outsl
pushl
sbb
push
jb
and
and
in
add
mov
rcr
ficoml
and
adc
push
add
fidivs
sbb
sbb
push
inc
jno
lods
popa
mov
cmpsb
imul
xor
and
mov
mov
adc
add
and
mov
rclb
and
dec
mov
out
fildl
mov
xor
dec
stos
fsubrs
mov
cmp
pop
stos
fsubrs
sbbl
and
adc
push
jl
jge
and
rcrb
push
stos
cmp
shll
pop
push
popa
pop
xor
mov
push
movsl
push
data16
xor
inc
fdivs
flds
dec
xor
daa
shrb
filds
add
sarl
stos
gs
loope
iret
cs
add
lds
rorb
jge
add
pop
adc
dec
mov
jb
fistpl
mov
and
adc
mov
stos
mov
push
pop
mov
adc
or
or
add
popa
mov
push
pop
add
add
loope
add
add
add
pop
mov
and
or
push
push
ret
or
imulb
add
dec
mov
cs
add
mov
inc
shll
call
stos
sar
mov
sbb
loope
pushf
inc
add
rorb
fdivl
test
inc
xlat
movsl
jecxz
add
shlb
inc
dec
mov
pop
adc
rcr
inc
and
mov
adc
pusha
scas
inc
lock
mov
or
insb
ficompl
and
dec
ret
fimuls
fcom
dec
pop
mov
push
fcompl
decl
inc
insb
mov
inc
lret
ret
loopne
xchg
inc
repnz
subb
inc
push
and
cmp
popa
loopne
jle
inc
adc
je
notl
jbe
push
lret
or
aam
cltd
and
mov
mov
andb
add
sahf
and
add
in
xor
cmc
stc
sub
clc
outsl
fdivrs
into
mov
cmp
push
loope
jo
mov
and
addps
mov
shlb
icebp
add
xor
jbe
inc
and
and
add
jle
push
mov
or
rcrb
add
jmp
es
jmp
pop
sub
clc
test
rorb
lds
or
lcall
add
mov
xchg
call
sub
pusha
add
add
or
movsb
mov
pop
push
mov
outsl
jmp
addb
mov
in
shlb
xorl
cwtl
xchg
in
bound
cmp
inc
mov
call
pusha
or
pop
lea
push
cmc
clc
and
add
and
leave
cli
or
mov
lds
fwait
add
xchg
xor
pusha
add
xor
rolb
adc
loope
add
push
pushf
push
test
lods
jo
fmull
inc
inc
fstl
add
fsubl
add
xor
call
add
sbb
or
cmp
jl
stc
cmp
aam
dec
loope
add
push
mov
daa
jecxz
jno
xor
and
out
mov
aaa
add
pusha
push
lock
adc
mov
fbstp
xor
addl
adc
add
mov
aam
popf
adc
cld
and
rol
aad
pusha
push
data16
add
rorb
xor
data16
xor
inc
sbb
xchg
outsl
aad
leave
inc
adc
xchg
mov
movsb
cmpsb
add
lock
insl
fbstp
movsb
repnz
out
adc
and
outsl
adc
lcall
push
das
mov
hlt
mov
or
mov
shl
hlt
xchg
lock
cmp
aam
ss
fcomip
cmp
push
add
jns
nop
jns
iret
push
adc
xor
cmp
je
sbb
xor
push
movl
adcl
xchg
and
xorb
xchg
mov
dec
adc
inc
adc
xor
ss
fsubs
xchg
push
mov
xor
rcll
mov
jp
pop
mov
mov
jne
xchg
push
add
or
jg
lea
mov
adc
cmp
mov
inc
jecxz
xchg
into
les
dec
nop
push
in
inc
es
movsb
and
inc
pop
shll
add
sbb
mov
adc
rorb
push
rcr
and
or
jp
push
loopne
mov
add
cmp
adc
or
dec
mov
in
inc
pop
dec
js
dec
rolb
or
jl
mov
pop
jns
popa
inc
add
mov
enter
jno
add
cld
mov
ret
arpl
adc
icebp
lcall
addb
iret
add
cld
ljmp
push
xchg
and
insl
dec
mov
push
sub
pop
xchg
clc
dec
add
mov
pop
rorl
inc
rorb
pusha
push
push
mov
aaa
xchg
movb
adc
mov
nop
mov
and
jno
cli
fcomip
divb
adc
and
fnstcw
cmp
icebp
add
xchg
add
adc
pushf
les
cmp
fnsave
rolb
loopne
or
cmp
add
pusha
xchg
add
dec
and
leave
push
push
inc
cltd
mov
fsubs
rclb
cmp
xor
fiadds
or
cmp
cmp
adc
and
idivl
fiadds
clc
mov
cli
mov
mov
mov
popa
or
inc
or
and
mov
fwait
cli
aad
sbb
add
and
test
pop
mov
mov
mov
das
inc
outsb
cmp
jg
push
mov
loopne
pop
mov
and
decl
sub
lock
movsb
imul
sbb
stos
aad
dec
pop
insb
jno
or
and
nop
notl
mov
sbb
movsb
lock
xor
loope
and
adc
std
and
cmpb
mov
cmp
jb,pt
xchg
rcrb
sub
aad
adc
into
pop
push
push
add
or
push
pop
out
pop
shl
or
sbb
add
add
or
mov
sbb
lret
loopne
mov
stos
insb
je
mov
cltd
bound
lock
test
mov
pusha
nop
dec
in
pop
icebp
std
mov
movsb
adc
nop
sbb
adc
or
call
push
in
cmp
xor
phsubd
xchg
mov
mov
incl
stos
xor
add
sti
add
add
and
dec
add
lcall
inc
mov
cmp
cld
mov
cmp
xchg
or
add
jecxz
in
jle
in
push
mov
adcb
push
fcoms
mov
rclb
test
cs
cmpb
roll
es
daa
decl
lock
aad
addb
pop
test
fiadds
es
or
jg
jp
xchg
inc
push
in
into
cmc
das
rclb
push
stc
pop
adc
popa
cmp
cmp
push
stc
cli
sbb
inc
push
jmp
add
mov
shlb
leave
cli
fs
mov
sub
push
leave
adcl
mov
adc
or
push
and
and
xchg
push
mov
leave
lret
fdivr
mov
test
gs
lahf
mov
stc
xorl
sarb
xchg
movsb
loopne
push
jo
sub
mov
mov
adc
es
add
std
sbb
sbb
movsb
inc
add
in
fdivrs
arpl
pop
add
fucomip
clc
mov
push
stos
or
inc
nop
dec
inc
cs
xchg
mov
clc
test
sub
leave
jecxz
notb
sub
rcr
push
sbb
sti
add
add
inc
in
in
mov
inc
or
or
add
icebp
mov
imul
jne
or
shrl
mov
push
pop
push
dec
shl
sub
and
ficompl
xchg
dec
pop
jmp
jb
jle
movsb
push
stc
mov
add
and
mov
inc
repz
cs
mov
or
pushf
or
lcall
ja
loopne
adc
or
addb
sub
xchg
xor
test
mov
and
rorb
jno
xor
inc
jecxz
les
fs
or
ret
push
or
hlt
roll
incb
push
imul
pop
cmpsb
addb
push
adc
add
sbb
and
out
jp
push
ljmp
xchg
add
push
rcrb
andb
inc
adc
push
fidivl
mov
adc
test
jg
out
mov
cwtl
add
mov
cs
leave
pop
cltd
es
and
mov
jmp
dec
jp
call
adc
adcb
loop
in
cmp
or
lahf
ss
dec
xor
pop
pop
or
adcb
dec
add
add
push
adc
cmp
rolb
xchg
cmpsl
testb
cmp
lret
inc
test
cli
add
sbb
and
jb
pop
roll
pop
xor
cmp
mov
jb
cwtl
loopne
loopne
or
push
or
sbb
adc
or
mov
call
outsl
divb
aad
gs
push
or
sub
dec
rolb
cmp
cli
push
test
inc
sbb
cmp
sub
jmp
add
ljmp
sub
lds
loope
add
mov
jb
in
mov
push
andl
das
fsts
and
xchg
inc
mov
jl
lret
lds
fstp
rclb
lock
mov
or
decb
enter
ret
mov
or
int3
ss
testb
orb
cs
add
es
filds
out
aas
cmp
inc
shrl
faddl
test
sbb
sub
sbb
add
jb
jb
aas
adcb
lcall
outsl
pop
dec
mov
rorb
lods
inc
cmp
inc
sub
xchg
lret
inc
iret
cmpb
and
aad
adc
xchg
scas
rorb
pop
inc
add
aaa
fidivrl
into
cmp
gs
mov
xchg
push
inc
and
sub
mov
or
test
shrb
mov
and
inc
adc
rcll
sub
sbbb
mov
in
mov
adc
cmc
cltd
shlb
mov
inc
mov
imul
mov
rorb
jle
mov
fsubl
shlb
loope
mov
push
push
int
stc
mov
pop
and
and
push
mov
inc
sbb
cwtl
xchg
or
or
xchg
addl
or
ljmp
xchg
sar
dec
and
rcrb
cmp
call
jle
mov
loop
addr16
movsl
add
xchg
mov
add
lock
cmp
sbb
imul
in
pop
sub
or
out
fs
sbbb
icebp
inc
mov
pop
pop
or
inc
je
int
adc
push
mov
sbb
push
jno
push
inc
mov
mov
mov
loope
xchg
call
aam
sbb
shl
daa
adcl
sbb
cmp
and
mov
xor
sub
out
jp
shrb
add
lds
adc
movsb
ret
xchg
push
test
lret
cmp
rcll
sarl
xor
loopne
mov
pop
lock
sub
subb
mov
sbb
xchg
adc
movsl
fcomi
dec
mov
cs
sub
xchg
sub
xchg
add
and
pusha
sub
sbb
xchg
cmc
push
pusha
pop
repnz
xchg
cmp
daa
push
adc
movsb
mul
add
sub
add
or
pop
popf
loopne
add
adc
aaa
sbb
lds
xchg
mov
adc
ss
push
mov
in
loopne
icebp
cmp
sbb
in
adc
add
loopne
xlat
push
ret
orb
and
mov
mov
sbb
aam
xchg
sbb
loopne
test
add
and
sbb
pushf
jp
in
mov
and
faddl
fwait
cmpb
shlb
ret
adc
cmp
add
aam
mov
push
adc
mov
xchg
dec
add
scas
sahf
push
push
pusha
sub
mov
or
adc
and
pusha
sar
mov
mov
incb
add
jb
or
push
sbb
push
icebp
lcall
pusha
ficompl
ret
sbb
push
and
data16
movsl
lods
add
shlb
inc
or
addb
rolb
lcall
and
push
ja
outsb
mov
jmp
sbbl
and
fs
lods
xorb
fsubs
sbb
or
inc
lods
cmp
call
adc
ror
and
arpl
mov
sub
xchg
sub
push
insb
add
insb
xchg
add
cld
push
les
push
mov
xchg
rcr
inc
cltd
js
push
xor
mov
cwtl
repnz
jb
daa
lock
loope
and
mov
stc
ret
adcb
rcrl
mov
push
test
push
push
mov
fisubs
add
push
pusha
mov
mov
loopne
scas
mov
shlb
and
cld
orb
fcoml
or
and
push
add
inc
pusha
ret
or
adc
pop
or
ja
adc
insb
clc
push
dec
push
xor
xchg
mov
push
rolb
sbb
rcl
dec
xchg
mov
and
subb
or
bound
or
adc
icebp
dec
inc
test
call
push
add
sbb
or
rorb
jno
adc
mov
add
popa
adc
jecxz
and
sub
add
cmp
pop
mov
mov
movsb
popa
xchg
push
add
leave
and
js
and
pop
addl
add
lcall
adc
add
loopne
add
jbe
mov
pusha
xor
lods
loop
pop
push
outsb
mov
add
add
add
pop
inc
adc
add
dec
ret
or
sub
mov
cli
pop
cmpsb
xorl
and
in
movsb
jo
mov
loop
and
inc
test
pop
cmp
lock
inc
hlt
fwait
push
jp
push
jecxz
fdiv
int
movnti
jo
fldt
ret
add
push
pop
sub
jmp
dec
add
push
movsl
aad
adc
sub
push
mov
cmp
cld
and
fimull
ljmp
int
mov
pop
test
add
mov
dec
and
xchg
es
adc
negb
sbb
or
cld
fistps
bound
movsb
icebp
andl
xor
popf
push
shll
and
jbe
mov
cmp
mov
std
call
push
adc
cmp
clc
orb
xlat
call
or
xchg
cmp
pop
int
rcrl
push
xor
add
pop
and
mov
inc
fdivrl
push
or
pop
loop
or
add
or
nop
mov
sub
pop
ljmp
push
fwait
insb
cmp
into
push
xchg
jo
popa
push
cmp
cmpb
pop
xor
cmp
aam
inc
jns
xor
cmp
mov
sbb
loopne
cld
jg
aad
inc
outsl
loope
xchg
nop
or
mov
mov
mov
aam
ds
push
addb
push
lret
shlb
inc
adc
adc
add
lcall
pop
cmp
push
jo
add
push
in
hlt
lcall
sub
xor
ret
adc
lea
push
and
ljmp
imul
iret
movsl
aam
mov
sub
adc
fdivr
aas
xor
hlt
lock
adc
aad
jo
testb
cmp
xchg
mov
mov
add
js
shll
adc
imul
xor
jne
mov
or
rorb
mov
rorb
or
and
xchg
pop
cs
pop
or
push
sbb
push
ret
fldl
inc
scas
or
cli
dec
sti
xchg
lds
push
call
cld
dec
cmp
jl
lds
adc
push
xorb
jp
repz
sarl
lcall
push
cltd
sbbb
push
xor
dec
adc
sub
aaa
mov
adc
jge
and
popa
xor
push
nop/reserved
jns
jo
filds
add
and
mov
adc
cmp
sub
add
or
adc
stos
or
jg
popa
push
or
push
nop
push
inc
inc
jo
rolb
pop
inc
loopne
inc
inc
xchg
inc
inc
addr16
pop
mov
jo
mov
or
mov
pop
add
add
adc
pop
ficoms
adc
lock
mov
xor
adc
jl
inc
lods
xchg
pushf
adc
mov
xor
decb
adc
mov
fwait
jecxz
daa
mov
push
adc
pop
xor
outsb
pushf
jns
add
jo
mov
mov
mov
mov
test
roll
jno
insb
mov
bound
pop
or
add
jle
push
cwtl
in
inc
and
push
data16
xchg
out
push
cmpsb
ljmp
outsb
add
push
push
test
add
add
andb
icebp
nop
loope
cmp
adc
mov
test
pusha
cld
mov
mov
pop
and
mov
add
addb
mov
sbb
cmpsb
lret
shrb
add
in
sbb
in
roll
add
rolb
in
mov
icebp
lock
inc
nop
imul
cmp
mov
ret
movsl
mov
push
xor
xchg
call
push
fadd
cmp
sbb
push
inc
mov
mov
or
and
push
mov
loope
mov
cmp
cmp
pop
or
xchg
adc
loopne
sbb
jae
add
inc
pop
rcrb
cltd
xor
mov
mov
xchg
mov
mov
aaa
adc
aam
push
add
mov
ss
xchg
test
fimuls
inc
andb
sbb
add
inc
int
inc
pop
add
sarb
cmp
push
clc
and
pusha
nop
mov
push
mov
and
push
pusha
jne
call
mov
sub
in
insl
jb
adc
cmp
das
clc
add
mov
or
pop
test
fdivrl
or
or
es
rcr
loopne
dec
inc
mov
mov
push
push
or
add
push
fnstsw
and
push
or
pop
sub
ljmp
add
or
ljmp
adc
rorl
ljmp
xchg
push
dec
nop
pop
inc
addb
xor
clc
xchg
inc
push
add
xor
test
xor
scas
push
aam
dec
add
mov
or
sub
fs
roll
popa
cmp
add
sub
mov
add
mov
or
mov
mov
stos
cmp
pop
es
mov
test
in
adc
jo
mov
push
cwtl
cmp
mov
cmp
daa
or
outsl
adc
xchg
mov
fsts
mov
push
das
sbb
fsubr
adc
sar
add
mov
add
push
adc
loop
mov
xorb
aad
cwtl
sub
test
jp
and
shrl
fcomps
icebp
adc
sub
jae
or
lods
sbb
or
lock
or
add
cld
dec
lahf
and
push
cmp
and
pop
movsb
lods
lods
test
or
andl
or
or
andb
add
lods
add
repz
sbb
cs
into
fimull
loop
jno
xchg
shlb
aad
xchg
sbb
lock
add
dec
mov
dec
add
jg
push
mov
pop
addb
xchg
push
sbb
or
add
test
pop
and
push
cmp
mov
xorb
ljmp
aas
data16
fstpt
inc
pusha
adc
add
out
test
mov
cmc
pop
sbb
movsb
add
jge
add
imul
cmp
cld
xor
and
add
sub
shll
sbb
dec
xor
push
add
enter
shll
or
sbb
or
pusha
cli
lea
incb
adc
jp
sub
dec
xor
or
inc
jg
test
mov
orl
push
rolb
idiv
push
xchg
inc
add
sbb
push
popf
pushf
push
aaa
add
or
aaa
push
adc
inc
add
mov
shlb
movsl
test
inc
add
xchg
or
add
sbb
cli
callw
push
cmp
movsl
cmc
cwtl
movsb
and
pop
fwait
les
ljmp
xchg
sahf
je
cmp
inc
clc
scas
clc
dec
sarb
in
arpl
xchg
rolb
ret
pop
call
cwtl
push
cmp
push
subb
adc
or
add
in
pop
inc
pusha
or
mov
rorb
mov
mov
loopne
je
add
add
push
mov
push
roll
scas
cli
inc
sbb
in
test
adc
and
jmp
in
or
fdivr
aad
rol
or
aas
cmpb
add
clc
pop
or
push
add
xchg
gs
inc
add
cmpb
mov
shll
loope
sbb
add
adc
and
in
mov
or
inc
roll
pop
in
rcl
add
add
fidivrs
mov
inc
add
push
and
pop
and
loopne
fldl
xchg
ja
sbb
les
cmpsb
mov
add
add
xchg
adc
sbb
pop
adc
pop
je
hlt
lods
loope
inc
cmp
xor
cmp
popa
shl
rcrl
xor
loope
and
push
shlb
add
push
add
xchg
rolb
xchg
popa
or
add
xchg
adc
mov
subl
add
inc
add
fisubrs
pop
and
mov
test
cmpb
fldenv
stos
adc
push
cmp
xchg
pop
inc
jmp
push
insb
je
mov
and
movsl
scas
mov
add
adc
pop
or
pushf
fnstenv
loopne
or
push
jmp
mov
arpl
std
push
lcall
int
cmp
inc
pusha
add
add
inc
add
xor
jmp
popf
mov
and
jg
fwait
cmp
inc
sbb
adc
push
les
pop
adcl
aas
loopne
and
push
and
adc
aas
add
adc
insl
push
add
inc
aad
filds
hlt
cmp
addb
fisttpl
movsb
and
fbstp
pop
push
sarb
push
add
mov
aas
cmp
xchg
inc
mov
in
xchg
ficoml
loopne
jmp
cmp
int3
mov
mov
xchg
add
int
push
and
pop
xor
cmpsb
xchg
cmpb
sub
shrl
push
loope,pn
lods
dec
sub
imul
push
aaa
mov
rclb
pop
jne
jle
sub
sub
jecxz
or
jg
fsubrl
or
fadd
add
lods
cwtl
mov
push
mov
aad
nop
xchg
ljmp
or
pop
orb
push
push
cmp
movsl
or
icebp
rorb
jecxz
sbb
or
or
and
enter
stos
loopne
adc
inc
or
test
arpl
arpl
sbb
rorb
and
dec
lock
test
mov
push
and
pop
inc
sbb
xchg
std
mov
mov
mov
fwait
push
mov
mov
and
scas
call
and
mov
adc
jo
push
jp
or
int3
xchg
mov
dec
gs
cmc
lcall
pop
inc
push
orl
xchg
andl
mov
sub
loop
std
inc
scas
orb
loope
and
mov
and
outsb
xchg
sub
mov
jno
icebp
fnsave
lret
mov
push
mov
leave
les
cmpsb
dec
hlt
pop
lds
push
into
test
and
lcall
imul
stos
and
xchg
or
or
loope
push
ret
outsl
inc
cmp
push
push
sbb
xchg
orb
movb
enter
les
roll
stc
xor
pop
cltd
in
das
mov
outsl
fildl
jno
icebp
addb
js
movsl
mov
leave
rolb
mov
add
jl
shll
xor
xchg
jp
mov
or
icebp
jge
das
or
clc
andb
push
outsb
or
cmp
ljmp
ret
ds
inc
jmp
adc
mov
outsl
xor
cmc
cmp
pop
dec
mov
js
push
add
and
out
leave
hlt
repnz
loopne
outsl
inc
or
jb
xor
inc
xchg
mov
xor
push
add
addr16
jl
mov
mov
shll
mov
es
fisubrl
xchg
push
ljmp
sahf
pop
pusha
or
ja
sub
mov
adc
call
push
cmp
pop
scas
clc
adc
adc
add
adc
adc
mov
xor
pusha
mov
int3
cmp
mov
dec
lret
push
test
out
js
ja
jg
inc
andl
mov
pusha
es
rorl
stos
rcl
jno
push
pop
pushl
push
push
shlb
or
ret
and
rcrb
dec
inc
je
sar
stos
add
fldenv
cwtl
jecxz
enter
roll
es
ja
adc
inc
popa
aas
and
das
push
add
add
xchg
add
inc
fidivs
pop
xchg
push
aas
aad
push
cli
mov
xchg
ljmp
push
ficoms
mov
mov
cmp
sar
ja
cmpb
pop
or
cmp
push
jne
icebp
inc
scas
test
inc
mov
sub
addb
cmp
daa
pusha
adc
sub
pop
or
scas
sbb
stos
subl
imul
fstl
std
mov
cmp
cmp
push
sbb
dec
mov
cmp
inc
push
mov
cmp
insl
jg
fstpt
mov
nop
add
adc
and
inc
mov
sbb
shl
imul
outsb
push
ret
imul
lcall
je
lock
das
test
cmpsb
in
jmp
scas
ja
loopne
pop
sub
xor
sbb
and
in
outsl
adcl
mov
add
mov
popa
jp
adc
ljmp
mov
push
aas
movsl
jecxz
add
subb
cmp
inc
xor
ja
fcmovb
or
sub
les
nop
jge
push
xor
cmp
imul
mov
pop
fldl
cmp
cmp
scas
clc
in
push
and
sbb
push
cmp
loop
daa
mov
add
mov
fnop
ja
pop
testb
sbb
fs
into
and
cmp
and
shl
or
leave
shlb
cmp
mov
and
mov
outsb
fwait
mov
pusha
xor
pop
fs
jle
sub
clc
and
push
pusha
adc
jo
push
jo
and
push
fdiv
push
cmp
sub
and
call
cmp
push
and
adc
jo
pop
hlt
mov
cmp
movsb
adc
jo
pop
inc
dec
lods
loopne
dec
push
pushl
xchg
ficoms
add
andl
push
pop
pop
pusha
loop
fs
pop
ja
movsb
push
pop
dec
add
pop
jo
and
fwait
dec
mov
add
lds
or
mulb
push
sbb
xchg
inc
mov
pop
movsl
insb
or
cli
jg
sbb
xchg
loope
pop
xor
inc
out
ds
xchg
icebp
int
or
sub
push
lock
out
mov
xlat
mov
inc
jae
inc
jno
mov
lods
int
cltd
cmpb
pop
pop
inc
jne
xchg
movsb
mov
cmp
or
adc
lock
decb
or
or
adc
add
std
fisttps
jp
nop
adc
sahf
adc
adc
cmpsb
es
push
xchg
push
lds
test
cmp
add
push
lds
dec
add
pop
test
cmp
incl
jl
sub
mov
inc
js
mov
adc
push
add
scas
xor
push
jns
pop
and
addl
loopne
cmp
notl
pop
outsl
add
add
jge
sbb
addb
pusha
add
jb
inc
ljmp
jns
xorb
xchg
adc
fildll
imul
sub
icebp
imulb
cmp
adc
imul
lcall
ss
loopne
push
les
jp
push
sbb
xchg
or
cs
or
mov
cmp
stos
lea
test
notb
imul
add
js
add
jg
add
fmul
cltd
in
das
adc
push
inc
sub
dec
add
icebp
jp
or
lret
push
cmpb
cmp
add
add
cltd
mov
arpl
movsl
mov
mov
nop
mov
rolb
adc
xchg
fiadds
pop
jl
jmp
pop
mov
add
mov
mov
add
and
ret
fcmovu
and
dec
lds
lret
adc
jmp
fadds
and
cmp
mov
or
outsb
or
dec
flds
push
ret
jg
dec
leave
movsb
pop
add
jbe
les
nop
movsb
or
imulb
aam
add
pop
and
mov
pop
insb
and
imul
or
and
add
test
xor
xchg
sbb
aam
js
test
fcoms
or
inc
mov
add
mov
lret
addb
pop
xor
fcomip
add
and
add
add
cmpl
add
fistpl
scas
shlb
nop
mov
push
push
addb
add
dec
outsb
lock
in
cs
rorl
xor
and
sub
inc
mov
inc
adc
mov
ss
int3
mov
rorl
and
aam
rolb
or
pop
clc
cmp
dec
or
loopne
cli
xorb
inc
sahf
mulb
inc
jg
je
pop
mov
shrb
ljmp
imul
data16
xor
fstps
icebp
mov
aam
pop
add
adc
xor
push
mov
xadd
mov
add
xor
push
mov
stos
in
push
push
mov
or
dec
and
and
or
add
stos
stos
arpl
es
sbb
add
adcb
xchg
mov
add
mov
call
add
adc
loop
inc
sub
cmpl
add
loopne
stos
inc
pop
cmp
mov
add
mov
push
mov
and
lea
cmp
sbb
je
xor
addb
push
bound
jno
push
cmc
inc
mov
fsubl
sbb
inc
sbb
or
mov
fbstp
dec
adc
stc
dec
add
mov
sub
and
and
cld
mov
cwtl
add
mov
loope
pop
shlb
xor
sbb
mov
cmp
loop
movsl
scas
dec
movsl
stos
adc
movsl
xor
pop
imul
cmp
jp
inc
jl
xchg
shlb
pusha
jns
xor
loopne
fsts
leave
les
sub
in
mov
and
call
test
sub
mov
dec
add
sub
loopne
icebp
mov
jo
aad
cmpsb
jo
scas
jnp
inc
outsl
test
je
push
loop
xor
pop
add
mov
mov
xchg
pop
pusha
xor
sbb
cld
pop
mov
mov
and
add
test
jbe
add
insl
push
fcompl
imul
push
test
jecxz
inc
ljmp
shrb
cmp
inc
jnp
ljmp
rclb
addl
add
add
mov
imul
jo
jle
mov
add
int
test
sbb
and
aam
mov
cmpsb
sub
pop
ja
sarb
je
pop
pop
sub
add
xchg
rcll
call
sbb
movsl
enter
pop
call
incb
dec
xor
test
hlt
xchg
fildl
pusha
mov
popl
push
or
add
mov
fldl
andl
call
mov
and
xor
shrl
jg
mov
adc
fs
xor
xor
dec
xor
sub
push
loope
clc
sub
inc
jecxz
add
mov
add
push
add
add
cmpsb
push
xor
adc
add
sub
rcrb
sub
sub
in
add
fidivl
and
mov
clc
das
testb
push
test
sbbb
test
lret
test
int3
mov
xlat
jb
dec
shrb
cmp
clc
imul
dec
xchg
mov
inc
push
cmp
add
adc
pushl
sub
adc
add
inc
or
and
nop
fisubrl
loope
lods
and
mov
pop
faddp
ret
loopne
pop
push
add
clc
cmp
rorb
adc
push
pop
rcr
jbe
or
addr16
mov
xchg
dec
adc
sbb
xor
adc
shrb
xlat
sarb
flds
insl
dec
add
loope
rorb
fstl
and
add
test
inc
rorb
sub
cvtpi2ps
inc
shlb
fs
mov
clc
mov
and
push
add
mov
in
in
pushl
inc
sub
mov
adc
mov
push
sub
es
nop
jno,pt
jnp
rorb
cmp
insl
lods
ficomps
pop
or
add
mov
inc
mov
or
and
fcoml
aam
adc
lea
mov
cld
and
dec
mov
or
pop
and
icebp
xor
inc
add
xlat
loopne
xor
popa
push
sbb
fdivs
or
adc
or
inc
add
pop
cmpsb
jecxz
pop
lods
cld
rcr
ret
into
insb
xlat
rcrb
add
insb
call
in
enter
mov
inc
xchg
outsb
mov
nop
insb
sub
xor
jge
js
mov
jl
push
jg
sti
aaa
ds
add
add
xchg
and
adc
je
push
or
inc
xchg
pop
je
fildl
push
or
xor
push
cmp
fcoml
lret
mov
loopne
imul
add
adc
scas
test
cmpsb
mov
inc
je
xchg
add
das
mov
sub
icebp
xor
movsl
fidivs
xchg
nop
push
addr16
mov
jbe
fnsave
fwait
js
rorb
ss
nop
push
jg
add
push
shrl
std
in
int
xor
jno
cmpsb
add
push
mov
push
aam
adc
add
add
lods
add
add
shrb
add
shll
mov
add
mov
jbe
inc
es
movsl
mov
adc
xchg
ja
inc
mov
or
mov
and
lods
dec
shlb
or
movsb
xor
sbbb
fwait
aam
xor
xor
xor
mov
lahf
xor
popa
test
xor
or
push
pop
or
insl
fcmovnbe
sub
push
xor
test
or
andl
xchg
arpl
add
pop
mov
pop
cli
fistpll
outsb
pop
cltd
shr
jo
es
mov
inc
andb
addb
mov
jnp
inc
dec
push
xchg
xchg
imul
pusha
xchg
cld
mov
xchg
icebp
dec
xchg
loope
lea
push
gs
add
push
dec
cld
mov
popa
sbb
cmp
jb
add
mov
inc
xchg
add
js
lcall
cmp
das
das
rorl
lds
add
and
and
mov
addl
sub
xor
addb
inc
push
xor
push
imul
mov
sub
sub
cmp
icebp
fisubrs
inc
or
cmp
and
or
ficoms
inc
add
jmp
in
shrb
cs
and
hlt
add
push
test
stos
push
add
adc
ljmp
ret
mov
mov
call
lods
clc
lds
sbb
les
clc
cwtl
ret
lds
mov
ja
je
leave
xlat
push
adc
cmp
frstor
push
enter
sbbl
add
add
jo
add
into
push
add
pop
xlat
rorb
fdivp
clc
add
loope
leave
pop
xchg
shr
subb
mov
rcrl
test
cmp
rclb
and
cmp
xor
outsl
mov
sti
add
pop
in
jmp
inc
xchg
sarb
mov
pusha
mov
loopne
add
fmull
pop
shr
push
in
enter
jmp
and
dec
xchg
mov
inc
roll
cmc
sahf
rcl
pusha
sbb
loope
push
jae
les
jbe
push
push
sbb
shll
jle
shrl
add
insl
sbb
dec
stc
ljmp
fisttps
push
add
icebp
mov
jg
mov
popa
rorb
pop
pop
rcll
xchg
sbb
in
int
incl
pop
sbb
imul
adc
inc
pop
or
cli
push
cmp
out
aam
imul
mov
cmp
nop
adc
imul
pop
cmp
pop
mov
xor
test
loope
decl
movsb
fs
and
imul
mov
pop
aad
stos
sbb
adc
movsb
insl
inc
insl
imul
in
xor
push
sbb
pop
mov
jmp
pop
add
adc
cmpb
dec
sub
add
push
pop
rcrb
aad
and
adc
mov
insl
clc
push
mov
and
lock
push
jo
add
int3
push
inc
mov
xchg
add
add
xor
xor
daa
sub
mov
les
enter
push
mov
shll
sub
jb
push
inc
add
push
jb
into
pop
insl
push
je
in
movsb
pop
jb
xlat
es
add
and
xor
adc
adc
test
call
and
mov
outsl
popa
loope
cmp
inc
pusha
adc
add
popa
push
add
es
fimuls
outsb
lods
and
sub
data16
mov
cmp
adc
and
sbb
fsubrs
movsb
cmp
add
push
stc
outsb
negb
fldenv
adc
cmp
imul
adc
imul
or
addr16
mov
mov
pop
imul
test
inc
cmp
mov
xchg
xor
imul
xor
or
cld
jns
ds
dec
imul
xor
sub
cmpsb
stc
and
push
test
ja
imul
sti
out
imul
cmp
xor
aaa
jge
mov
jg
rcl
push
adc
fbstp
imul
lcall
adc
hlt
cmp
fldt
and
imul
pop
add
outsl
or
mov
sbb
or
xor
or
imul
cld
imul
sbb
push
sbb
imul
dec
jnp
in
imul
mov
imul
mov
or
sbb
or
frstor
or
rorl
lcall
xor
shl
jmpw
imul
cmp
fisubrs
cmp
outsl
cmp
aas
imul
lcall
pop
mov
and
imul
or
push
mov
or
fwait
xor
adc
pop
pop
aad
aas
test
xlat
imul
fistpl
jle
aam
push
fnstsw
xchg
fisttps
or
pushl
push
ret
imul
dec
push
imul
outsl
or
mov
es
imul
imul
add
push
and
ljmp
cmc
push
addb
push
adc
push
push
testb
arpl
or
rorl
shlb
lock
inc
add
xchg
in
push
jecxz
xchg
and
push
push
push
jp
in
mov
mov
push
aaa
pushf
pop
nop
adc
adc
xchg
imul
ss
xchg
imul
in
jg
rclb
or
imul
pop
bound
mov
imul
inc
imul
or
cmc
inc
mov
mov
jb
mov
pop
sub
xor
test
or
mov
jnp
inc
add
adc
add
nop
inc
adc
mov
xchg
dec
arpl
adc
outsb
push
mov
aaa
or
rcrb
cs
call
mov
inc
rorb
mov
rcrb
das
shl
popf
test
push
stos
stos
pop
pop
inc
pusha
xchg
outsl
clc
sbb
mov
mov
xor
es
pop
loopne
and
movsb
add
add
and
mov
xor
dec
cmp
stos
dec
xor
fwait
ljmp
cwtl
cmpsb
mov
xchg
push
adc
test
inc
add
incb
jbe
add
sbb
dec
or
popf
add
pop
xor
fimull
shrl
adc
into
add
stos
rcl
pop
sbb
xor
mov
clc
pop
push
mov
pusha
cmp
rolb
pop
inc
andl
xor
ja
jno
mov
jb
mov
mov
je
and
push
inc
lods
cmp
dec
and
jb
inc
push
add
pusha
insb
add
and
or
ljmp
inc
test
sarb
rclb
adc
pop
sub
and
push
jb
jp
loopne
stos
inc
int
push
popa
cmp
pop
cmp
inc
add
or
out
jb
mov
imul
jg
adc
sbb
mov
mov
push
inc
inc
add
fcompl
hlt
add
mov
and
rolb
add
adc
mov
addr16
or
push
sub
cmp
bound
mov
pop
push
inc
insl
out
xor
loope
fldcw
xor
mov
sub
add
dec
sbb
add
xorb
aam
sub
xlat
and
inc
add
adc
and
and
or
pop
ret
bound
std
rolb
call
inc
push
pop
inc
mov
movsl
test
mov
cmp
mov
scas
inc
insb
ds
call
mov
lods
inc
and
jmp
bound
xorb
push
adcb
jmp
mov
inc
lcall
lock
lcall
fisubl
sub
and
shrb
and
mov
cmc
sub
cmp
mov
or
ja
jo
jno
insb
jo
xchg
sbb
xchg
test
sbbb
xor
inc
mov
add
jg
loope
lcall
and
aam
xchg
andl
popa
add
and
ja
lock
cmp
das
nop
cs
cltd
push
stos
loop
pop
imul
mov
outsb
testb
adc
adcb
inc
and
test
in
inc
cmp
mov
loop
nop
sub
aad
and
cmp
adc
inc
in
in
mov
enter
lods
popf
clc
adc
and
cmp
hlt
fildll
add
pop
rolb
and
push
add
pop
fwait
les
push
data16
aas
xor
xchg
adc
mov
mov
xchg
or
xchg
daa
sub
xor
cmpsb
fimuls
sbb
add
int3
fmull
insb
pop
rcll
xchg
mov
lcall
lods
xchg
cmp
insl
dec
ds
add
mov
cmp
fwait
push
shlb
lret
and
cltd
add
cltd
sbb
add
adc
and
pop
dec
rcl
hlt
add
lds
ret
sbb
push
insl
repnz
sub
ljmp
adc
rorl
fnstsw
int
ja
inc
adc
in
sbb
shrl
out
add
adc
loopne
mov
movsb
outsb
test
xchg
mov
rcr
inc
rorb
int3
ret
addb
add
nop
add
sbb
xchg
js
movsb
jg
mov
adc
push
sub
mov
ljmp
sbb
test
mov
push
inc
inc
add
push
dec
push
xchg
add
sub
mov
push
mov
xchg
ficoms
pop
xchg
inc
push
sub
mov
adc
jne
mov
xchg
loopne
adc
add
fidivl
filds
mov
dec
sub
mov
rolb
mov
xchg
rclb
add
adc
push
sbb
mov
xchg
fdivrs
add
rolb
mov
or
pop
or
add
sbb
ljmp
rclb
mov
cwtl
dec
xchg
inc
cmc
push
pusha
ljmp
dec
rclb
loopne
mov
sbb
add
cmp
jo
sbb
push
into
sahf
icebp
icebp
or
pop
add
lds
ret
push
add
fcoms
sbb
shrl
cs
stos
inc
adc
jo
and
adc
aaa
adc
lods
inc
inc
add
and
lea
aas
dec
shrb
in
nop
inc
stos
aam
cld
adc
shlb
popa
or
ja
pushf
inc
fxch
xchg
add
or
sub
sbb
adcb
mov
dec
lea
add
pushf
pop
inc
push
icebp
pusha
add
movsb
mov
ss
inc
in
pusha
add
dec
std
add
jno
xor
nop
pop
pop
push
pop
fsubs
sbb
xor
negb
sbb
jo
lock
dec
es
xor
rcrl
mov
or
add
push
cwtl
out
mov
jo
fstps
mov
mov
fidivrl
nop
xor
notl
mov
frstor
inc
pop
add
hlt
xchg
adc
test
mov
inc
aaa
fdiv
adc
xchg
les
shlb
and
pop
orb
mov
lock
adc
add
lds
and
rclb
int3
jb
jbe
jg
loopne
adc
je
call
ret
and
icebp
cmp
nop
add
repz
mov
js
add
or
popf
pop
or
or
push
pop
sbb
jno
adcb
loop
cld
inc
inc
xlat
cmp
inc
add
push
xor
add
pop
mov
pop
adc
push
cld
bound
mov
aad
push
in
in
adc
ja
xchg
mov
adc
adc
add
jo
mov
pusha
push
dec
mov
loop
mov
loop
and
aam
out
pop
insb
shlb
fisubrs
push
add
sub
loopne
loopne
xchg
sub
sbb
cmpsl
stc
mov
push
arpl
movb
add
jns
push
cs
or
shrb
pushf
std
addb
or
pushf
mov
pop
ret
or
scas
jp
adc
jge
rcl
and
xor
aad
shlb
mov
jae
cmp
push
orl
mov
push
dec
jns
cwtl
fld
pusha
jo
adc
loope
adc
je
jno
mov
test
xchg
sbb
sbb
call
jo
push
xor
fisubrl
popa
and
sub
mov
jb
mov
das
push
insb
and
nop
xchg
bound
jnp
add
adc
js
inc
icebp
or
jno
cmp
and
fstpl
dec
repnz
push
rcrl
lret
aam
outsb
into
loopne
fnstsw
xor
add
and
ret
sub
adc
cmp
mov
mov
shll
pop
inc
jge
rcll
sar
and
mov
js
inc
and
jo
xor
nop
imul
rol
add
mov
inc
jecxz
dec
cmp
adc
adc
mov
addr16
mov
movsb
jno
icebp
dec
and
je
xchg
inc
jmp
dec
dec
jno
adc
outsl
xor
les
or
push
loop
fisttpll
bound
pop
mov
andb
pop
test
pop
adc
xchg
and
cmpsb
xlat
push
and
push
add
mov
push
daa
xchg
add
in
jne
add
push
xchg
xchg
mov
inc
mov
out
or
mov
mov
push
nop
pop
add
das
or
les
mov
cmp
sbb
test
or
fsubrl
push
cmp
movsl
jo
sub
ret
lods
hlt
add
mov
mov
sbb
cmp
das
js
pop
test
andb
test
and
jecxz
cmp
addl
inc
jle
push
pop
gs
mov
dec
push
scas
inc
das
inc
in
jg
clc
and
push
popa
add
pop
add
loopne
add
inc
fnstcw
mov
mov
roll
clc
sbb
imul
mov
pop
jbe
add
shrb
cmpb
ret
mov
push
aam
or
adc
popa
aas
cmp
mov
aad
or
add
xchg
or
push
shlb
mov
orb
xchg
js
xchg
insl
xchg
add
jbe
js
ret
push
xchg
mov
cli
adc
outsb
daa
test
dec
lret
push
subl
jg
inc
mov
jbe
sbb
filds
subb
enter
add
pop
jle
xchg
pop
imul
dec
test
mov
mov
mov
subb
fcoml
clc
mov
push
subb
add
add
cmp
and
sbb
test
insb
add
xchg
sbbl
ficomps
movsb
mov
push
inc
jae
ret
inc
inc
and
in
xor
jbe
xor
inc
out
sbb
sti
xchg
mov
les
addb
aas
sbb
sar
add
test
scas
pop
clc
es
cmpsb
add
test
rcl
push
cmp
add
cltd
pop
sahf
lcall
mov
and
in
mov
xor
stos
adc
or
popf
nop
movsb
pop
insl
bound
cs
mov
bound
rclb
outsl
out
adc
mov
push
sub
push
loopne
xor
out
ds
test
adc
adcl
popa
sub
pop
sarb
mov
push
pop
adc
popl
mov
cld
xchg
adc
inc
push
adc
lea
sub
mov
xor
arpl
xchg
je
sbb
js
inc
rorb
add
rol
out
adc
or
ret
cltd
add
fildll
add
sub
lea
adcb
push
jne
adc
inc
dec
scas
xor
test
pop
repnz
mov
cmp
or
enter
mov
fisubrl
roll
aaa
mov
add
rolb
sahf
rcl
popa
ret
jle
mov
inc
aas
push
aas
xchg
test
aas
sbb
sbb
pop
orb
movsl
enter
fcoml
and
mov
pop
inc
cmp
ret
sub
xchg
pop
add
shll
mov
mov
call
in
pop
jmp
call
pusha
add
push
bound
push
jle
mov
gs
mov
in
addb
int
or
cmpb
cli
test
inc
outsl
mov
mov
pusha
or
pop
and
mov
pop
fcoml
or
push
popa
add
push
jne
orl
fildll
or
pop
popa
add
sbb
test
push
ret
mov
sub
lahf
cmpsb
pop
nop
pusha
inc
sub
mov
add
decl
add
shlb
enter
adc
sub
aas
sar
fstl
mov
pop
and
and
rorl
or
outsb
imul
bound
shlb
cli
es
mov
loop
xchg
aaa
fdiv
adc
outsb
and
cs
subl
pusha
xchg
push
pop
or
aam
mov
bound
pop
aad
xor
loopne
loopne
cld
or
xchg
or
sti
inc
mov
jb
cmp
pop
fwait
mov
shll
mov
shll
push
ss
cmp
fstl
push
movsb
inc
sbb
xlat
test
push
inc
pusha
pop
in
xor
xchg
lcall
insb
ds
inc
movsl
inc
adc
mov
dec
adc
or
cwtl
mov
adc
sub
pushaw
mov
push
xlat
push
cmp
cli
test
pushf
mov
mov
adc
cmp
dec
push
loope
add
loope
push
add
sub
adc
lahf
mov
jbe
cld
in
jno
jmp
out
jmp
js
aad
ss
inc
and
repz
or
rcrb
add
dec
push
mov
jb
or
pusha
add
aaa
movsl
pusha
rcrb
xchg
mov
js
add
fabs
or
inc
in
cmp
lods
mov
xor
inc
adc
add
xchg
mov
sbb
lret
mov
ret
mov
outsl
in
and
adc
push
popf
cmc
test
push
and
adc
push
lret
and
loope
add
dec
jle
cs
adc
adc
push
cmp
inc
pop
cmpsb
xchg
add
outsl
and
mov
and
ret
loop
xlat
and
cmp
orl
fs
add
rclb
mov
sub
cmpsb
das
ss
sub
or
fs
sahf
cmp
rclb
cmp
movsb
mov
pop
adc
and
cmpl
ljmp
or
pop
add
scas
or
addr16
mov
push
jmp
mov
jno
ret
adc
or
daa
rolb
xor
shrb
add
xchg
shlb
test
loopne
fadds
or
lods
insb
mov
add
adc
add
ror
adc
xchg
in
les
xlat
sti
stos
adcb
rcll
xchg
mov
inc
repnz
xorb
rol
push
hlt
ja
cli
popa
dec
and
add
pop
out
pop
push
push
sub
dec
cmpb
sbb
or
push
mov
xor
addb
cmp
insb
and
sub
xchg
rcr
push
mov
sbbb
mov
insb
add
add
pop
sbb
aaa
jle
mov
hlt
sbbl
inc
scas
add
idiv
ljmp
add
jo
fimull
jl
add
repnz
movsl
gs
adc
xchg
out
inc
or
or
mov
and
insl
lret
xor
adc
outsb
push
pop
std
shlb
inc
mov
and
loop
sbb
xchg
rolb
mov
lret
stos
xor
dec
mov
call
rclb
out
movsb
sbb
inc
xchg
movsb
lcall
and
and
pop
shlb
movsl
call
pushf
and
jnp
sbb
push
rcrb
clc
rorb
xchg
mov
mov
push
loopne
outsb
adc
mov
es
and
cmp
loopne
xor
dec
pop
fwait
pop
sub
icebp
adc
stos
mov
mov
lahf
adc
hlt
rorb
pop
and
mov
add
jg
pop
movsb
out
sub
cmp
pop
xchg
add
xchg
or
fistl
aad
push
xchg
pop
daa
or
movsb
jl
and
repnz
pop
cmp
outsl
pop
xchg
loopne
pop
xchg
call
xor
call
mov
or
xor
adc
mov
add
xchg
icebp
cmp
inc
loope
fsubrl
push
or
cmp
adc
shrl
mov
outsl
int3
mov
inc
dec
add
push
ds
inc
sub
jo
fs
dec
add
push
les
pop
sbb
rcrl
popa
rcll
test
cmp
xor
mov
adc
inc
or
push
inc
mov
lret
push
push
enter
mov
add
add
lcall
lock
push
mov
dec
aad
movsb
icebp
scas
jnp
pop
out
cmc
push
push
or
sub
test
sbbb
inc
ret
dec
loopne
jecxz
or
out
mov
xor
aad
mov
cmp
dec
fidivrl
push
mov
sub
mov
inc
mov
roll
push
jecxz
pop
cmp
push
jbe
lock
xchg
mov
out
sub
cmpsb
lock
adc
sbb
incb
inc
add
pop
xchg
add
lret
xlat
dec
jmp
ja
ss
daa
mov
sahf
add
loopne
mov
add
inc
in
add
loope
out
and
adcl
outsb
mov
push
add
pusha
sbb
add
and
add
or
insb
sbb
inc
sub
mov
inc
push
in
or
cs
clc
push
adc
icebp
sbb
cs
add
push
jo
mov
pop
xchg
mov
xchg
or
loopne
and
notb
sub
sbb
cmp
mov
and
data16
cli
add
dec
push
or
lods
scas
add
fsub
or
jp
or
xlat
sbb
adc
pusha
lods
sbbb
mov
mov
ror
lahf
pop
outsl
and
jl
and
decb
add
movb
ljmp
adc
xchg
dec
add
aas
hlt
pop
add
ljmp
add
aam
outsb
or
in
loopne
rcr
pushf
xchg
mov
cmpsl
addb
mov
push
ret
push
jge
into
mov
lret
push
inc
in
leave
mov
pop
int
push
repnz
or
arpl
cli
add
add
scas
cmpsl
inc
and
lods
jmp
and
mov
shlb
icebp
aad
push
mov
cmp
xor
or
xchg
push
and
jbe
test
pusha
xor
jb
fisubrl
sbb
js
inc
cmpsl
sarl
jg
lods
lds
add
add
inc
inc
fs
sahf
fidivrs
shrb
cmp
xor
mov
dec
add
cli
adc
add
sbb
enter
test
leave
add
out
adc
mov
cmp
bound
cmp
xor
xchg
sarl
jl
lock
subl
mov
aam
pop
lds
and
sub
jbe
xor
add
jns
push
or
and
inc
pop
inc
jp
lret
sbb
ja
mov
add
int3
mov
loopne
add
add
clc
repnz
lods
rcrl
dec
xor
pusha
sbb
add
call
add
popa
sbb
mov
sbb
bound
adc
adc
mov
push
xchg
mov
and
fcomip
ficoms
cmp
cmp
add
add
mov
rolb
es
into
push
and
sub
adc
lock
andb
decl
and
lods
cli
ljmp
push
pop
test
test
insl
add
mov
ja
mov
mov
shll
or
add
inc
andl
xor
xor
cwtl
sbb
dec
dec
fisubs
adc
inc
push
imulb
dec
mov
and
sbb
pop
or
xchg
push
fdivp
push
sbb
add
inc
inc
rclb
roll
mov
addl
inc
dec
imul
cs
decl
loop
mov
fnstenv
inc
add
pop
popa
ljmp
add
push
das
das
add
jp
clc
push
jge
in
sub
jbe
ljmp
push
bound
adc
jb
adc
push
es
lock
push
cwtl
and
pop
mov
add
aam
add
adc
push
aad
nop
cmp
imul
imul
insb
cmpl
test
leave
cs
popa
lds
out
and
sbb
add
pusha
sbb
pop
inc
shrl
dec
inc
lods
push
cmp
add
and
stc
sub
sub
fdivrl
xor
mov
lock
push
inc
aam
dec
adc
decl
cmp
sub
xchg
andb
fildl
je
aam
pop
movsb
and
dec
mov
in
jg
mov
push
mov
addl
cmp
das
addl
shrb
out
loope
jmp
sub
stos
loope
insb
push
je
enter
hlt
add
incb
outsl
inc
sbb
ret
fisubrl
xchg
call
jmp
testb
lcall
push
xchg
shll
and
ret
add
loopne
mov
aam
lcall
cmp
sub
das
shr
js
inc
movsl
mov
xlat
mov
popf
inc
mov
xor
xchg
mov
leave
aad
sahf
push
or
clc
jg
mov
lods
add
scas
xchg
push
pop
movsb
add
movsb
pop
mov
icebp
sub
fdivrl
jle
add
xor
add
add
cmp
rcll
jmp
mov
push
in
and
add
mov
inc
mov
sar
jo
lds
or
dec
clc
adc
aas
test
mov
movsl
rcr
pop
stos
push
shlb
mov
lods
pop
and
add
adc
or
adc
pop
adc
aam
jp
xchg
push
fucomp
adc
hlt
fld
lods
movsb
popa
and
test
ja
inc
sub
jbe
pop
inc
add
pop
push
and
push
or
push
push
in
lods
and
pop
les
add
fmull
int3
test
adc
or
mov
xorb
jb
ret
sub
or
jb
rolb
jb
jne
add
or
aam
es
add
ja
push
add
mov
fdivs
adc
inc
inc
stos
jne
sar
addl
or
inc
fidivs
or
or
add
push
jg
cmc
sbb
int3
add
or
xor
and
ficomps
adc
rol
dec
inc
mov
lods
pusha
movl
ret
push
add
mov
cli
sbb
lods
outsb
and
and
push
add
popa
mov
or
cmp
rorl
ficompl
movsb
and
clc
push
and
es
fucomip
mov
ljmp
fadds
cli
add
lret
sahf
or
add
cmc
ja
frstor
or
inc
or
sbb
or
ljmp
xchg
push
pop
adc
mov
push
pusha
sbb
fiaddl
rolb
inc
dec
mov
jg
pop
mov
mov
and
add
data16
xor
and
add
imul
jne
in
dec
adc
dec
pop
lret
jb
movsb
ds
es
and
or
push
mov
loop
sub
jecxz
xchg
mov
add
clc
or
mov
adc
lret
mov
lock
or
dec
fimull
xchg
mov
mov
sub
pop
add
scas
add
xor
inc
loopne
pop
inc
lret
jp
outsl
add
cmp
mov
dec
lods
push
fdivr
mov
in
pusha
jnp
pop
xor
add
pop
dec
mov
into
add
xor
shl
cmp
lods
mov
sbb
and
cld
test
dec
in
outsl
push
jle
cmp
aaa
ficompl
mov
and
negb
hlt
add
xor
or
fs
cltd
mov
movsb
xor
add
push
mov
mov
add
pop
in
xchg
clc
mov
xchg
mov
adc
pop
sahf
sbb
dec
mov
push
pusha
subl
pop
jbe
mov
lret
pushf
sbb
dec
cmp
mov
mov
or
sub
sub
push
dec
addb
dec
mov
nop
int3
repnz
loope
or
xor
aam
dec
loope
lods
push
adcb
sub
pop
sub
js
pop
cld
pop
xorb
std
loopne
popa
shll
or
mov
leave
loopne
xor
push
pop
sbb
jle
and
cs
pop
adc
jbe
movsb
cmp
fildl
cli
pop
add
jg
adc
frstor
add
sub
add
or
adc
ljmp
mov
cmpsb
std
xchg
cwtl
shll
sub
in
lcall
lods
xor
add
add
out
fistpl
insl
push
into
andl
cltd
out
adc
lret
mov
inc
jb
dec
pop
sbb
pop
call
int
ret
xchg
fadd
shlb
lock
pusha
adc
popa
add
movsb
nop
stos
incb
or
mov
add
mov
scas
xor
xchg
push
in
add
mov
daa
push
xor
popl
lret
bound
int
subb
mov
add
and
jo
sub
mov
and
stc
inc
repz
enter
add
addr16
mov
ja
xor
inc
subb
testb
mov
jno,pn
pmaxub
cmpsb
dec
fiaddl
jne
sub
sub
push
rclb
xchg
shrl
jge
fldenv
push
std
or
add
or
add
jns
add
imul
hlt
push
fimull
adc
push
or
cmpsb
pop
aad
add
pop
fcmovnu
mov
lock
add
jnp
outsb
imul
rol
jne
fstps
outsl
push
jo
adc
imul
rcrl
jno
test
test
cmpsl
mov
add
xchg
test
and
inc
loope
mov
or
shll
stos
xchg
stos
test
incb
push
stc
mov
shrl
mov
add
xchg
mov
aad
shrl
xchg
mov
js
lret
lods
pop
add
sbb
in
addb
adc
addb
push
jge
jg
push
lar
notb
sbb
mov
push
mov
push
add
sbb
jecxz
add
mov
call
jb
mov
pushf
mov
cli
jo
testb
adcb
pop
fs
jle
push
sti
enter
std
or
and
cmp
xchg
mov
add
pop
loopne
add
jno
pop
add
sub
aaa
jo
adc
sub
lock
sub
icebp
push
loopne
adc
adc
xor
and
icebp
loopne
cmpsb
mov
outsl
lea
push
cmp
or
stos
mov
call
stos
inc
mov
stos
dec
adc
sbb
jae
sbb
or
sub
stos
jns
or
jo
sub
bnd
out
push
jecxz
xchg
out
sbb
out
pop
fcomi
jno
push
daa
pop
stos
and
jo
push
ficoml
cmp
or
pop
adc
js
test
jp
jecxz
sbb
stos
je
pusha
shll
std
jae
stc
pushf
jecxz
test
push
adc
or
shll
adc
movsb
add
jmp
pop
lock
mov
push
jno
inc
lock
cmp
out
aaa
mov
xor
mov
clc
and
or
inc
sti
shr
lock
lret
stc
add
add
mov
movsl
add
stos
xor
and
and
addb
outsl
clc
add
out
mov
jecxz
cwtl
mov
sbb
jb
lock
addr16
add
push
jo
push
popa
aas
fimuls
fiadds
mov
movsl
cwtl
mov
add
shlb
pop
or
stos
stos
xchg
add
addr16
xchg
stos
cmp
or
std
arpl
sbb
mov
push
lock
dec
push
cmpl
mov
xchg
scas
in
sbb
pop
fwait
push
mov
fwait
add
bound
cmp
insb
flds
mov
movsb
push
xchg
add
mov
and
dec
fisubrl
dec
add
inc
push
inc
add
jp
call
sbb
push
adc
clc
add
ds
cmpsl
add
fcmovnbe
mov
int3
add
mov
mov
mov
and
push
inc
imul
add
fcomps
stos
and
and
cmp
add
inc
dec
sub
les
add
roll
sbb
add
stos
lret
mov
push
js
fidivl
fldt
adc
add
shll
dec
inc
pop
stos
pop
sbb
out
xor
hlt
das
adc
outsl
pop
add
stos
jg
jnp
ja
lcall
inc
out
lcall
lcall
mov
out
mov
mov
out
fwait
xchg
xchg
out
lcall
sti
imull
out
repz
lret
mov
xlat
shrl
cmpb
daa
and
push
cmp
aaa
xor
pop
add
ret
cmp
rcrl
pop
adc
add
push
jle
add
sahf
push
jnp
lcall
dec
inc
inc
jns
cmpsb
jns
pop
push
push
scas
cmpsb
jns
cmpsb
stos
cmpsl
mov
jns
mov
mov
jns
fwait
xchg
xchg
out
cmpsb
jns
cmpsb
jmp
jecxz
sti
lcall
lret
mov
xlat
shrl
shlb
fcmovbe
xor
and
push
cmp
aaa
dec
shll
xor
or
add
xor
xor
pop
adc
and
sub
mov
push
cli
mov
movsb
pusha
mov
mov
stos
mov
pusha
jo
mov
mov
dec
mov
arpl
mov
pop
mov
stos
mov
mov
xchg
lcall
pusha
add
push
push
dec
sarl
ljmp
mov
data16
mov
sbb
sbb
xchg
loopne
out
or
imul
out
add
sbb
imull
iret
lret
mov
or
push
roll
xlat
add
cmp
shll
and
cmp
add
sub
cvtpi2ps
pop
sub
test
push
push
push
roll
cmpsl
movsb
sahf
cmpsb
imul
cmpsb
imul
xor
loopne
sbb
or
movsb
add
adc
push
shlb
xorb
dec
out
inc
jo
cmpsl
negl
cmpsl
sbb
insb
jo
cmpsl
xlat
sbb
nop
pusha
addb
lcall
pop
add
cwtl
adc
inc
xor
stos
mov
shl
mov
cmp
stos
inc
xchg
loopne
xor
sbbl
cmpsl
stos
in
add
aas
inc
dec
cmp
dec
and
enter
sbb
in
push
aam
or
or
pop
cmp
arpl
imul
cmp
xor
or
adc
clc
add
add
sbb
inc
xor
adc
insb
push
dec
js
jl
add
popl
pop
xchg
repnz
xchg
repz
jo
movsb
adc
xchg
add
popa
sub
jle
push
add
adc
inc
sub
bound
sar
mov
add
mov
cli
out
idiv
xchg
decb
adc
jo
mov
add
aam
cli
push
pop
xchg
fcmovnb
sbb
push
ds
shr
pop
xchg
mov
adc
adc
aam
and
jg
dec
incl
mov
les
push
xor
mov
push
push
push
add
lods
lock
mov
lods
jg
outsl
and
aam
loopne
or
add
or
cld
add
hlt
push
adc
mov
cld
nop
pop
data16
adc
and
or
pop
mov
sbb
add
cs
add
fdivrs
sbb
push
add
cld
insl
shl
add
push
mov
adc
popa
test
rolb
cli
icebp
add
mov
sbb
lret
xchg
add
adc
push
jg
adc
jb
sbb
les
mov
mov
je
ud0
ljmp
jbe
and
cmp
roll
rclb
add
add
movsl
add
inc
dec
scas
call
aad
mov
cmp
add
or
rolb
mov
ret
mov
filds
lock
mov
push
and
pop
fdiv
or
jns
mov
dec
ss
add
roll
cmp
cmp
fcoms
push
test
push
pop
mov
add
push
and
shrb
test
lods
rcl
add
jbe
cltd
lret
xchg
hlt
sbb
or
jne
add
test
dec
mov
and
and
ja
fwait
jbe
shll
movsl
ret
push
xlat
enter
xorl
rorb
add
xbegin
push
adc
add
add
les
dec
mov
add
ret
or
pop
test
mov
push
rcrb
cmp
je
sarb
lock
cmp
pop
loope
outsl
clc
sbb
icebp
adc
fs
mov
adc
jecxz
push
fnsave
sbb
bound
ja
xlat
rolb
add
mov
jl
mov
mov
das
clc
in
sbb
adc
rclb
js
or
ss
jmp
sbb
sub
aaa
cmp
test
decl
push
test
enter
add
rolb
lea
jle
es
xor
imul
movsl
or
jae
push
jae
pusha
push
shl
icebp
int
jmp
pop
repz
es
icebp
add
call
fbld
sub
repz
add
jo
adc
aad
clc
ljmp
cltd
cmp
es
aam
pop
shlb
inc
push
push
xlat
aam
sti
cmp
hlt
add
xor
iret
add
popa
aam
rolb
add
outsb
pop
or
cmp
aam
xlat
push
addl
sub
sbb
push
or
bound
xor
loope
xchg
lret
shlb
sbb
cli
mull
es
or
outsl
jle
ficoms
add
or
loopne
xchg
movsb
lock
flds
push
or
cmp
je
xor
cs
mov
cwtl
cld
cmp
cmpl
fs
imul
push
in
sub
and
and
pop
lret
and
and
andb
popa
es
sbb
push
mov
incb
and
inc
or
stc
or
sub
mov
mov
xchg
sub
or
mov
mov
inc
rorl
lods
enter
mov
pop
add
and
jb
mov
rorl
push
pop
lock
pop
and
cmp
inc
add
incl
and
fs
movsb
int3
adc
dec
dec
movl
ret
js
push
add
lcall
mov
or
sub
mov
cmp
movsb
adc
and
xchg
enter
mov
int3
test
mov
xor
adc
mov
push
lea
and
fucomi
mov
lods
cmp
test
mov
add
push
push
add
mov
ds
xor
mov
inc
xchg
push
movsb
cmpb
add
out
cli
ljmp
or
and
push
ljmp
or
adc
push
scas
cli
out
out
movsb
cmp
pushf
dec
test
or
or
mov
adc
push
pusha
mov
outsl
mov
je
inc
cmp
jmp
pushfw
rol
xorb
add
fwait
push
cmpl
or
sub
push
fwait
out
push
scas
dec
dec
fmulp
add
sub
sbb
incb
imul
pushl
pop
cmp
add
add
adc
add
lock
xlat
sarl
adc
mov
pop
or
shll
pop
and
sbb
push
sub
fidivrl
jne
ret
in
jbe
sub
movsl
fucomi
jle
xlat
in
fisubs
mov
or
push
sub
fucomip
dec
inc
sbb
inc
movsl
out
mov
in
je
out
ja
movsl
jecxz
adc
in
jnp
sti
fildll
movsl
imul
jge
repz
in
jl
iret
dec
lret
add
push
in
mov
int
mov
sbb
nop
mov
xchg
add
sbb
pop
adc
jmp
lock
fsts
scas
mov
xchg
lret
fbstp
ret
shr
outsb
push
scas
adc
xorb
pop
add
xor
push
xchg
mov
arpl
jb
or
add
add
inc
pop
jle
icebp
rorl
add
lods
xchg
adc
add
outsb
sbb
push
xor
stos
fdivl
sub
movsl
xchg
jp
or
fbld
sub
sub
push
addb
addl
or
push
icebp
cmpsb
insl
sbb
inc
scas
push
enter
or
es
add
mov
push
cmp
shrb
call
andl
mov
sbb
ds
cmp
stos
ret
inc
sbbl
or
and
shll
popa
or
cmpsb
clc
jecxz
in
or
icebp
jle
cmp
movsl
lret
sub
inc
in
mov
jo
xchg
mov
mov
fisttps
mov
add
punpcklbw
repz
mov
adc
daa
and
cmp
aaa
das
rcr
mov
or
inc
sbb
and
int
or
fldl
pusha
subb
incb
mov
lods
aas
or
and
mov
and
sbbl
pop
jne
fwait
jo
jecxz
or
hlt
fisttps
inc
cwtl
lds
out
sub
int
sti
ds
leave
or
cmp
and
and
mov
inc
push
outsb
pop
and
roll
adc
fisubs
add
cs
inc
add
and
xchg
xchg
adc
jbe
inc
add
nop
and
jmp
add
ret
sbb
ja
inc
xchg
add
add
call
jge
rcll
jmp
psrlq
add
adc
inc
sub
push
sbb
or
in
or
push
adc
std
dec
pop
cli
sbb
add
xor
push
out
pushf
lods
adc
rcr
mov
push
sti
push
jb
loopne
test
data16
adcl
cld
or
push
or
mov
inc
push
insl
pop
mov
inc
push
fisttpll
push
jne
addb
and
lods
mov
mov
and
and
stos
pusha
loope
push
int
add
int3
loopne
popa
add
aam
dec
loope
adc
and
jo
imul
adc
mov
mov
aam
rol
leave
cmp
add
ljmp
leave
cmc
lods
mov
jae
popf
roll
and
cmpsl
jge
loope,pn
inc
mov
std
pop
bound
mov
test
call
aam
jns
out
andl
add
mov
mov
subb
and
movsl
loopne
pop
enter
ds
lea
mov
cmp
or
inc
in
lods
data16
push
sub
push
sub
xor
xchg
xlat
imul
popf
mov
add
loopne
ljmp
gs
dec
mov
movsl
loopne
out
sbb
imul
ss
stos
addr16
xadd
sbbb
roll
mov
xor
jo
sub
cli
clc
sbb
imul
leave
mov
xlat
push
add
pop
push
sbb
push
adc
xchg
add
out
sti
sbb
jge
mov
shrd
pop
sbb
es
adc
push
jo
icebp
and
fdiv
adc
wbinvd
fdivrs
push
fsubs
nop
cmp
add
mov
lods
std
and
lods
lock
aaa
aaa
pop
adc
clc
sub
out
pop
mov
dec
and
dec
sti
pop
add
adc
jp
jg
cs
std
je
popf
pop
lock
testl
pushf
or
aaa
imul
stos
sbb
pop
dec
mov
icebp
faddl
aad
iret
outsl
scas
push
jo
sti
mov
pusha
and
sub
loopne
or
adcl
inc
mov
call
pop
dec
ret
lds
or
sti
addb
jl
ret
mov
pop
sub
cmp
or
and
cwtl
sbb
lds
pop
sahf
jbe
mov
lahf
out
sub
sbb
jl
cmp
rol
cmp
or
inc
sub
sbb
addb
jnp
rolb
imul
repz
lds
xor
sub
mov
add
cmpsl
imul
stos
lds
loopne
imul
push
add
push
lcall
fcompl
lock
rcl
xchg
ret
in
add
mov
sub
pop
push
pusha
popa
push
movsl
fwait
and
push
pop
sub
adc
insb
mov
or
addb
sub
lds
movsb
insb
dec
jge
mov
mov
push
repnz
loopne
lea
ret
inc
in
mov
movsl
xchg
mov
mov
mov
cmp
push
ret
xchg
mov
insl
sti
dec
clc
xchg
movsb
mov
test
std
and
addb
adc
mov
push
mov
mov
andl
dec
dec
fadds
lock
fdivrp
inc
mov
pop
rolb
add
add
test
rcrb
xchg
add
in
test
sahf
repnz
mov
xchg
pusha
pop
jbe
scas
mov
pushf
inc
push
mov
mov
mov
jo
mov
popf
sar
nop
test
incl
sbb
pop
inc
mov
xchg
add
add
mov
xchg
aam
adc
mov
add
jb
test
push
sbb
cmpsl
hlt
outsl
outsl
xor
orb
movb
mov
cld
push
add
add
xor
sbb
jg
fwait
inc
sub
mov
mov
or
std
subb
or
xchg
mov
adc
mov
xchg
push
mov
cmp
and
and
movsb
lds
test
fs
pushf
xor
subl
jl
roll
ss
das
fdivrl
mov
mov
push
inc
call
or
cmpsl
outsb
add
aas
add
pusha
fistpll
mov
xorl
adc
call
femms
ds
pop
test
pop
lock
dec
sbb
adc
mov
mov
add
jbe
add
push
pop
mov
push
push
sbb
fwait
push
xchg
jb
loopne
rcrb
call
enter
mov
inc
adc
imul
es
add
mov
mov
out
adc
adc
je
push
lahf
mov
add
cmpsb
ss
cltd
std
clc
mov
xor
roll
andb
mov
mov
xchg
and
flds
fs
fisubs
mov
cmpsb
jp
add
xor
mov
outsb
nop
test
movsb
add
xchg
call
cld
cli
and
rolb
loop
jno
mov
dec
pop
sti
ja
dec
mov
addr16
call
insb
add
cmpb
orb
push
pushf
mov
mov
inc
cld
cltd
mov
xorb
orl
push
mov
addl
adcb
icebp
add
movsb
movsl
mov
cwtl
and
sbb
les
or
scas
xchg
mov
mov
out
xchg
and
mov
nop
fiaddl
mov
or
test
lcall
mov
jns
test
cmp
pop
test
add
sbbb
subl
clc
xchg
sub
test
jl
movsb
aam
mov
mov
addl
xchg
movb
divb
insb
xorb
mov
pop
add
push
les
xchg
sbb
xchg
jle
inc
outsb
xchg
test
sbb
loope
sbb
mov
pop
shrl
or
sbbl
mov
leave
adc
lds
adc
inc
mov
xchg
mov
pop
lret
rcll
adc
cmp
pop
sbb
sub
add
cwtl
xchg
sub
dec
fsub
enter
repnz
std
popf
push
popf
call
inc
xor
or
xor
jo
jp
addb
xorb
inc
movsb
cltd
inc
inc
mov
inc
cmp
adc
sub
inc
movsl
inc
lods
inc
or
rolb
pop
mov
sarb
pushf
aam
add
push
cwtl
mov
lods
movsb
cmpl
movsl
mov
mov
inc
push
jmp
rol
test
pushf
sarb
rcll
and
fwait
incb
mov
es
add
rolb
add
sbb
insb
jg
loope
pop
aad
jbe
inc
push
xlat
add
sahf
mov
push
jne
lock
cmp
movsl
nop
loop
lods
jecxz
stos
cwtl
add
cmp
add
adc
cs
jle
sub
mov
ljmp
mov
push
and
mov
ja
movsl
pusha
jg
jg
mov
xor
inc
and
popf
loope
fs
or
cli
and
xchg
movsb
cmp
scas
out
mov
shl
inc
ret
outsb
and
outsl
push
sub
dec
adc
push
dec
in
pop
popa
add
addb
and
xchg
add
and
xor
and
test
pop
bound
mov
lahf
hlt
mov
cwtl
lds
adc
jge
sbb
xchg
jg
and
xorb
mov
inc
dec
mov
jmp
nop
xchg
cmpsl
add
sbb
or
inc
pop
sbb
addl
xchg
js
or
outsb
loope
aaa
addl
add
and
jbe
xchg
and
or
shrb
ret
loopne
sarb
sbb
and
dec
mov
pop
lock
push
mov
jmp
movsl
add
adc
push
orb
les
insb
or
xchg
andb
ret
test
fcomip
scas
pop
dec
mov
test
je
mov
jle
lods
loopne
push
jecxz
stos
inc
nop
clc
daa
sbbl
add
jp
pusha
ret
and
adc
mov
pop
cwtl
mov
lods
adc
inc
add
mov
adc
pop
lcall
lahf
xchg
popf
pop
push
ret
hlt
push
inc
push
pop
roll
ret
push
jb
adc
xor
rcll
lcall
jbe
pop
mov
add
mov
push
push
jbe
push
mov
and
xchg
or
movsl
sub
popa
ret
mov
inc
adc
add
push
add
fdivs
das
xor
cmc
arpl
rcll
mov
add
and
movsb
jg
xchg
mov
push
and
inc
push
orb
jo
adc
movsb
mov
icebp
mov
mov
fldt
shr
movsl
movsl
mov
pusha
ss
mov
insb
mov
sub
loope
nop
mov
add
inc
or
pop
cmp
and
pop
loope
call
out
pushl
or
mov
icebp
add
add
pusha
mov
dec
insb
add
add
or
cmovge
rcll
cmp
fadds
jp
shll
sarl
stos
pop
or
mov
add
sub
mov
xchg
imul
sub
pushf
inc
push
sbb
mov
mov
pushl
mov
jbe
lock
jmp
push
rclb
dec
nop
bound
push
sbb
shl
mov
into
and
in
xchg
mov
call
xchg
mov
sbb
xchg
add
icebp
push
in
loopne
insb
rolb
jl
andb
mov
lock
push
push
jnp
mov
jb
mov
mov
cmp
xchg
and
cmpsb
xchg
mov
xor
testb
inc
mov
roll
push
or
push
pop
mov
dec
addl
test
bound
lcall
mov
lock
mov
cmovbe
xchg
mov
iret
clc
add
or
add
add
adc
add
mov
and
pop
jo
arpl
fs
cmp
lahf
mov
adc
mov
sub
roll
pusha
mov
dec
roll
pushf
xchg
rcrb
sub
ljmp
loop
inc
xchg
mov
add
roll
mov
pop
mov
js
mov
mov
mov
add
push
dec
dec
arpl
in
je
xchg
add
and
dec
dec
call
pop
mov
pop
inc
scas
fcomip
adc
mov
js
and
and
mov
movsb
mov
add
or
push
cmp
sbb
push
out
inc
shll
test
add
pop
stc
shll
or
repnz
test
xor
sbb
adc
loopne
mov
adc
or
aad
mov
or
cwtl
xchg
add
inc
sub
push
mov
mov
adc
sub
mov
or
xor
adc
or
shrl
shll
xchg
add
rcrl
mov
xor
mov
sbb
xor
push
das
or
cld
fcomip
setae
adc
push
or
hlt
ret
mov
push
lcall
cli
add
mov
lahf
adc
add
add
push
jg
and
pop
int
or
pop
push
cmp
ljmp
fwait
inc
test
push
ds
mov
addr16
mov
adcl
mov
jg
fsubrp
push
pop
ret
int3
rcrb
and
adc
xor
mov
and
fildll
pushf
jae
fdivr
out
adc
sbb
fsts
pop
mov
xchg
cmpsb
nop
dec
jo
lods
test
mov
aam
test
push
nop
pop
icebp
mov
add
or
mov
lock
call
mov
repz
cmpsl
mov
imull
into
aas
add
adc
movsb
stos
jle
add
add
add
xchg
mov
jbe
jmp
mov
xor
stos
mov
movsb
xor
ret
aaa
cld
cmpsb
sbb
test
ret
push
add
xor
inc
add
ss
mov
add
ja
sub
pop
repnz
icebp
or
test
mov
mov
test
mov
cmp
push
pop
in
arpl
push
mov
xor
pop
lcall
pop
jae
les
mov
stos
mov
insl
rclb
jo
adc
cwtl
and
cmp
insl
push
loop
or
sbb
out
xorb
xor
push
popa
and
mov
addb
add
rolb
or
in
pop
push
andb
or
mov
jne
add
cmp
add
rcr
mov
dec
iret
xchg
test
lret
lods
cs
mov
jb
add
nop
mov
inc
lods
xchg
add
test
scas
inc
cmpsl
xchg
mov
xchg
jle
add
stos
movsb
into
cmp
ljmp
mov
push
xchg
fistpl
scas
adc
andb
ss
bound
fisubl
push
adc
add
cli
dec
data16
mov
lret
mov
mov
andb
pop
rcl
loop
xor
push
mov
test
xor
mov
mov
add
cmpb
outsl
or
dec
add
test
stos
orb
mov
and
test
inc
lock
cwtl
xor
lods
jmp
cmpsl
mov
mov
scas
sub
push
mov
jmp
mov
inc
les
lods
adcl
pop
out
cmpsb
mov
orb
or
or
xchg
test
pusha
add
mov
outsb
add
push
iret
pusha
pop
mov
cli
shrb
test
popf
subb
sbb
cwtl
adcb
xchg
test
push
sub
popf
push
inc
rcll
lods
and
sbb
cmp
add
daa
push
add
orb
adc
clc
push
jae
mov
push
cmpsl
cld
andb
push
or
adc
je
xor
mov
rclb
test
add
stos
repnz
imul
inc
pop
add
sbbb
inc
and
jecxz
add
test
and
add
test
mov
cs
inc
cwtl
cwtl
mov
or
aaa
mov
push
ret
out
inc
add
sbb
add
push
add
sahf
mov
add
test
add
fcoml
jge
incl
xor
lds
mov
loope
adc
push
xchg
xchg
inc
int3
inc
mov
sub
hlt
jg
cld
push
loope
adc
mov
mov
adc
and
ret
jl
ret
lret
sub
mov
xor
js
or
test
inc
std
sahf
mov
dec
adc
mov
rol
dec
xchg
cmp
loope
sub
jb
sub
lock
scas
pop
push
mov
jbe
loope
adc
xor
jecxz
add
icebp
out
fcmovnb
cld
orb
mov
add
cltd
xchg
mov
mov
movsb
mov
sub
lcall
sbb
add
xchg
inc
add
xor
pop
scas
mov
sbb
push
sti
add
bound
adc
mov
mov
dec
mulb
add
lahf
push
add
aaa
std
inc
test
loope
cwtl
data16
add
imul
repnz
aad
inc
movl
mov
je
xchg
mov
data16
mov
add
icebp
and
mov
add
add
dec
ret
loop
sub
fildl
movsb
rolb
shrb
in
adc
add
loop
xchg
inc
adc
or
hlt
mov
sbb
loop
dec
add
jl
mov
es
dec
aaa
or
sbb
loopne
andb
adcl
orl
and
test
add
cltd
movsl
movsl
xchg
sub
sbb
loope
adc
outsb
mov
dec
loop
data16
add
sbb
cwtl
push
and
xor
dec
jle
faddl
mov
xlat
decl
and
push
dec
cmpsb
add
or
mov
pop
adc
push
pop
and
and
loope
inc
cmovle
out
add
add
mov
adc
adc
cmpsb
jns
xchg
sbbb
ljmp
or
dec
lcall
inc
and
and
jg
jmp
add
es
add
mov
cltd
mov
cmpsb
add
pop
lock
mov
mov
mov
sub
mov
popa
dec
les
loopne
inc
arpl
add
and
insl
xlat
jg
out
and
jne
fisubrl
stos
dec
jb
push
sbb
idivb
test
adc
inc
test
inc
cld
inc
sahf
fs
mov
mov
js
testb
les
sub
add
push
push
aaa
mov
gs
mov
jg
mov
aad
mov
mov
icebp
lcall
and
bound
mov
rorb
mov
xor
mov
inc
add
imulb
hlt
add
mov
inc
repnz
jbe
sti
or
add
push
cmpsb
nop
mov
pop
sbbb
addl
push
ljmp
pusha
je
movsb
mov
jecxz
push
adc
aad
movsl
shlb
or
jbe
clc
pop
push
inc
dec
dec
add
inc
je
outsb
push
jl
outsb
aam
roll
xchg
and
push
push
push
add
adc
out
add
add
mov
stos
inc
loope
add
cmpsb
mov
call
and
lcall
add
xchg
push
enter
movsl
add
aam
enter
adc
pushf
shrb
inc
add
pop
inc
arpl
jle,pn
jo
jo
test
mov
push
es
fcomi
mov
adc
adcl
ret
mov
add
inc
or
mov
outsl
enter
sbb
pop
in
add
add
cli
incl
lahf
xchg
icebp
add
dec
mov
add
add
sahf
enter
sarb
push
push
inc
push
inc
xchg
pop
clc
add
xchg
sub
cld
push
ret
pop
push
push
push
add
push
cs
into
jp
cli
fldt
xchg
mov
rcrb
xchg
imul
insl
ss
mov
xlat
pop
mov
lods
xchg
insl
or
movaps
adcb
aaa
cmpsl
xor
mov
xchg
stc
rol
sub
jg
xor
jbe
incl
fwait
stos
add
mov
push
inc
filds
ja
jno
xor
fcompl
pushl
frstor
cltd
pushf
mov
call
cmp
pushf
cld
aad
mov
adc
cs
inc
mov
mov
jle
pop
dec
cmp
test
mov
movsb
pop
mov
hlt
mov
jg
mov
inc
sub
testb
jae
mov
mov
fisttps
roll
movsb
rcll
add
cmpsb
jg
adc
out
mov
add
ljmp
pop
inc
adc
and
add
cmp
std
add
and
add
bnd
lret
adc
aas
xor
ja
outsl
ljmp
add
push
cmp
loop
insl
xchg
add
pop
ss
sub
pop
or
jecxz
push
shl
jp
out
popf
inc
ljmp
outsl
inc
inc
aaa
sbb
adc
lds
outsl
dec
jle
movzbl
jge
test
jl
pusha
push
inc
xor
repnz
xor
or
or
mov
pop
stos
out
mov
mov
mov
subb
aas
pop
xlat
outsl
int
les
xchg
out
cmc
out
je
push
idivb
scas
jns
lods
jge
pushl
insl
mov
xchg
add
or
out
mov
xlat
sbb
push
cs
push
in
add
jmp
stos
mov
fcomip
jg
xchg
add
jge
lock
shr
add
inc
imul
pusha
and
lret
xor
push
ja
push
xchg
jg
mov
movsb
out
jmp
loop
int
repnz
pop
cwtl
inc
mov
ja
outsl
mov
or
jae
xor
push
sar
cwtl
xor
sahf
cmpb
hlt
decb
incl
pop
mov
jne
loop
pop
iret
dec
ss
mov
jg
fildll
in
outsb
adcl
mov
push
pop
jle
xlat
inc
lods
shlb
dec
add
or
or
xor
sub
ljmp
push
arpl
and
add
sti
mov
add
sub
lods
xchg
sti
add
data16
scas
adc
mov
fimull
push
in
add
idiv
or
movsl
sub
mov
lods
gs
lahf
dec
dec
insl
shrl
cmpsb
and
pop
add
xor
dec
sti
add
mov
sub
ljmp
add
out
popf
pop
lods
insb
sub
lods
add
dec
sarl
jp
ljmp
add
add
testl
in
nop
outsl
call
test
or
jno
push
adc
fistl
or
xchg
or
inc
or
aaa
es
or
dec
sbb
pop
cwtl
adc
incl
mov
mov
ljmp
push
out
push
stos
sub
lods
add
lcall
jmp
mov
imul
add
sub
lods
cmp
push
cmp
fadd
cmpsb
imul
add
popa
fldcw
cmp
add
inc
pop
repz
push
lods
add
ja
mov
movsl
cmp
insl
inc
xchg
dec
aam
shll
cmc
out
out
jmp
std
jmp
xchg
jmp
jg
aaa
jmp
movsl
lods
jmp
inc
dec
jmp
repz
jmp
add
cmp
and
cld
in
outsl
add
out
cmc
out
in
in
adc
out
lea
cmpsb
sar
int
lods
push
out
pop
out
inc
out
dec
jne
stc
fisttpl
gs
insl
adc
out
or
and
fwait
sub
add
mov
inc
repz
aam
out
test
mov
mov
mov
pop
mov
out
push
mov
jne
jge
gs
out
adc
lret
lcall
out
sub
ret
lods
add
outsl
ljmp
aad
fucom
loope
loope
loope
outsl
mov
loope
loope
mov
mov
out
push
loope
loope
loope
jne
jge
gs
adc
loope
mov
loope
loope
loope
aad
fucom
loopne
loopne
loopne
fwait
mov
xchg
loopne
loopne
loopne
mov
mov
push
stc
fwait
mov
inc
loopne
jne
jge
gs
adc
loopne
push
leave
mov
loopne
loopne
jecxz
jecxz
fwait
mov
cmc
jecxz
jecxz
jecxz
xchg
jecxz
jecxz
jecxz
mov
fwait
mov
movsl
jecxz
push
jecxz
jecxz
jecxz
jne
jge
gs
stc
fwait
mov
jecxz
jecxz
xor
jecxz
aad
fucom
lds
loop
loop
loop
loop
xchg
loop
loop
loop
push
cwtl
fsts
add
add
gs
jg
mov
mov
adc
loop
xor
loop
aad
outsb
ss
in
add
mov
adc
adc
in
pop
lcall
in
in
in
cmpsb
jo
jge
gs
adc
test
xchg
add
neg
xchg
in
in
in
in
in
xchg
in
lahf
cmpsb
lock
test
in
in
push
sub
insb
or
mov
adc
in
in
in
in
in
jp
aaa
in
out
out
out
cmc
out
mov
mov
ss
mov
adc
leave
push
sarb
andl
lock
inc
add
xor
xor
pop
or
incb
ret
pop
sub
dec
add
inc
fsubrl
ljmp
sub
in
or
jmp
cld
call
xchg
cwtl
in
mov
jbe
stc
inc
out
mov
out
adc
mov
inc
out
pop
mov
test
inc
mov
xchg
pusha
inc
sarb
inc
call
xchg
loope
loope
adc
dec
loope
loope
loope
push
xor
dec
lods
or
clc
outsl
scas
and
loopne
test
sub
dec
sarb
ss
in
in
in
in
test
out
insb
or
add
ja
jp
arpl
pop
sar
in
push
and
cmp
in
in
out
dec
stc
int
mov
out
mov
fwait
mov
add
add
or
push
out
out
aas
out
out
out
out
ja
int3
insb
or
mov
add
jmp
loop
in
call
mov
mov
mov
call
cmpsb
jo
lds
pop
icebp
mov
add
ljmp
and
leave
xor
in
in
in
je
test
in
dec
adc
pusha
iret
add
and
and
mov
in
pop
in
inc
and
in
jl
ret
in
sbb
and
in
shr
jle
sub
add
add
jg
or
inc
out
mov
repnz
inc
sub
lcall
sbb
jns
jg
push
loop
dec
test
dec
add
in
jg
fidivl
jnp
adc
sbb
jmp
call
pop
call
push
call
loope
filds
jecxz
jbe
loope
jne
ss
ljmp
fiadds
in
mov
outsb
in
add
push
jo
sub
js
add
int
jmp
jmp
js
add
out
outsl
loopne
push
fs
cmp
and
fcmovbe
dec
popa
push
out
xor
mov
call
push
fcomps
and
loopne
loopne
adc
xchg
jecxz
jecxz
jecxz
mul
sahf
cmpsb
fcmovu
adc
mov
pop
out
fildll
loopne
add
jmp
das
dec
jg
ljmp
in
shrl
pop
adc
in
sub
shr
cli
in
loope
in
or
sub
loope
decl
or
shl
sub
and
in
cmp
pop
and
nop
in
in
out
out
stos
out
out
loopne
add
jmp
lret
imul
sub
and
in
xor
enter
cld
mov
xor
out
add
fwait
out
mov
mov
push
jno
push
outsb
adc
loope
loope
loope
loope
mov
and
loopne
add
sub
jmp
mov
es
adc
test
outsb
pusha
cs
cmp
mov
in
push
pop
fs
in
xor
in
in
in
adc
mov
fsubp
enter
pusha
dec
lret
add
adc
lcall
or
jmp
int
cmc
adc
std
call
pop
call
call
and
sbb
ljmp
in
repnz
clc
mov
movsl
in
sbb
fdiv
push
sbb
in
imul
and
popa
xor
das
mov
lcall
jo
ss
loope
test
dec
loopne
push
andb
cmp
or
loopne
loop
mov
loop
cmp
dec
adc
push
in
in
in
sarl
in
out
out
push
lahf
mov
mov
or
out
jg
out
out
out
adc
out
out
out
and
out
out
loope
sub
out
and
js
cmpb
out
out
mov
adc
call
cmp
insb
in
les
in
pushl
ljmp
in
in
mov
pop
adc
shr
aad
fucomi
pushf
in
and
and
pop
pop
out
xor
add
sbb
loope
jg
loopne
out
and
jecxz
jecxz
add
lods
loop
loop
loop
inc
loop
in
in
lret
jo
ljmp
or
mov
push
out
out
out
mov
push
mov
data16
cmp
outsb
add
movntq
out
leave
add
repz
out
out
adc
push
dec
icebp
ljmp
out
jmp
nop
adc
jmp
xor
dec
jmp
jmp
jmp
inc
ljmp
jle
aaa
jg
ljmp
in
test
xor
test
pop
icebp
sbb
pop
jne
into
xchg
lock
loope
loope
loope
mov
fwait
fsub
pushf
loopne
jecxz
jecxz
fcoms
in
or
mov
mov
sarl
mov
xor
jae
js
sbb
xchg
ljmp
sbb
daa
out
xchg
or
int
add
mov
jmp
out
jecxz
in
xor
and
in
movsb
in
lods
in
cmp
lock
rolb
add
cli
ret
jecxz
jo
out
call
or
cld
jmp
jmp
jmp
std
ljmp
aaa
cld
push
sahf
stos
in
insl
in
xchg
in
or
or
mov
add
pop
test
out
mov
or
jg
push
or
in
in
mov
mov
cmpsb
dec
call
in
xor
mov
inc
in
in
dec
in
in
nop
dec
jle
pop
add
nop
data16
in
in
pusha
push
in
mov
add
push
in
in
in
in
mov
and
in
in
lock
cs
clc
fbld
shl
out
out
push
dec
or
out
jo
repnz
cs
nop
fbld
dec
sub
out
mov
mov
adc
mov
mov
push
mov
xorb
mov
out
out
es
mov
rclb
out
out
out
adc
out
out
out
mov
out
out
out
out
mov
fwait
mov
xchg
out
out
out
xchg
mov
mov
mov
cld
fwait
mov
mov
stos
out
out
adc
imulb
inc
out
and
out
out
out
mov
ret
pop
icebp
cmp
out
jmp
test
xor
daa
call
rcl
adc
adc
loope
mov
loope
loopne
loopne
lds
adc
loopne
dec
rcr
ret
jecxz
jecxz
dec
loopne
mov
pop
loop
jl
adc
cmp
loop
loop
in
in
in
inc
shll
loop
in
mov
in
lcall
in
jo
mov
shlb
xchg
mov
jmp
jg
call
aam
and
ljmp
sub
loop
in
adcl
in
in
hlt
mov
lret
lock
mov
add
shl
in
ret
stc
out
cld
xor
insl
and
mov
mov
sub
fsubrs
std
jmp
loope
loope
loope
mov
add
loope
loopne
hlt
pop
lock
sbb
loopne
xchg
adcl
inc
jecxz
loop
in
outsl
fbld
inc
in
in
jo
or
lock
or
in
in
push
nop
or
sbb
sbb
shl
out
decl
push
mov
push
out
gs
lock
jmp
hlt
notb
call
mov
mov
call
pop
call
jmp
outsl
xor
cmp
and
es
shr
jmp
jmp
jmp
xchg
sub
xor
repz
sbb
ljmp
in
xorl
mov
incl
in
fsubr
call
out
pop
mov
sub
dec
inc
out
dec
adc
mov
fnstsw
loope
sbb
add
nop
jp
loope
loope
adc
jp
loopne
loopne
adc
cli
lcall
call
sbb
add
incl
lock
push
loop
loop
adc
lret
js
cmp
and
test
push
nop
ret
in
in
adc
mov
pmulhuw
scas
sbb
xor
jle
mov
incb
push
int3
sub
ljmp
cmp
sbb
ljmp
call
dec
mov
mov
add
xor
in
jne
jl
bound
pusha
sbb
in
ljmp
add
xchg
in
mov
pop
in
data16
in
sub
loop
mov
sub
es
mov
inc
out
imul
lock
fbstp
lret
push
sub
loopne
loopne
xor
test
mov
xchg
loopne
cmpsb
loopne
les
add
loopne
in
out
clc
xor
cmp
daa
fsubrl
xlat
adc
jecxz
jecxz
jecxz
jecxz
call
jecxz
jecxz
jecxz
xor
loop
loop
rclb
in
sub
mul
or
rcrb
in
lahf
call
sbb
jecxz
in
out
lock
add
out
out
jmp
jmp
arpl
xor
shl
jo
xlat
ljmp
sub
or
xor
add
and
xor
ljmp
xchg
in
in
in
cld
mov
and
shl
out
cmpsl
lock
cmpsb
mov
jmp
cmp
cld
nop
xchg
call
lock
jmp
push
ljmp
in
mov
in
sahf
jo
ss
in
fstl
jns
out
inc
adc
push
or
movsl
loope
dec
add
dec
nop
mov
js
scas
xchg
loop
loop
mov
in
in
in
ds
and
iret
lock
or
call
cmp
in
xchg
nop
pop
push
in
mov
ss
sub
fyl2x
push
dec
lock
mov
outsb
inc
lock
rcll
scas
push
xchg
outsl
loopne
loopne
aaa
cmp
fcomip
fldl
cld
jecxz
push
jecxz
jecxz
nop
jle
repnz
jecxz
jecxz
jecxz
lcall
orb
loop
jo
mov
mov
in
cli
xor
call
sub
xor
jmp
jmp
add
mov
sub
dec
inc
inc
jmp
jmp
jmp
fcomip
ljmp
sub
ljmp
xor
shlb
in
jg
lcall
arpl
push
xchg
mov
shr
leave
add
iret
rclb
call
loop
inc
in
cmpsl
in
pop
in
dec
rorb
in
aas
in
and
out
loopne
fcomip
out
out
mov
cmpsb
out
pop
out
dec
out
jl
mov
out
cmp
adc
fcomi
iret
jecxz
xchg
jle
push
add
add
inc
scas
stos
mov
cmpsb
loope
loope
inc
sar
in
adc
xchg
loope
nop
insb
mov
shl
loopne
loope
loope
das
mov
nop
test
cmp
sti
dec
jmp
icebp
jecxz
adc
stos
jecxz
int3
loop
inc
loop
mov
scas
mov
sbb
jmp
add
lock
push
xorl
mov
pop
and
pop
enter
dec
and
jo
mov
push
mov
out
mov
mov
dec
scas
cmp
out
out
outsb
push
xor
sub
mov
call
xchg
hlt
test
mov
pop
call
sbb
lds
outsl
sbb
sbb
xchg
jo
jno
imul
out
jmp
ljmp
mov
add
outsb
cmp
sbb
jno
cli
add
in
jmp
in
jb
push
es
in
fists
cmp
es
fsubr
jecxz
call
in
push
adc
inc
in
dec
in
jae
js
popa
in
push
sbb
out
out
sub
out
add
push
inc
xchg
int3
and
pop
fsubr
lahf
out
mov
push
jmp
test
sbb
jno
mov
mov
pop
loope
loope
pop
sahf
fucomip
nop
adc
jl
push
adc
int
adc
push
add
add
loopne
jp
mov
jl
inc
das
outsl
jb
sbb
jecxz
jecxz
outsb
out
adc
jecxz
jecxz
jecxz
mov
jecxz
inc
jecxz
std
int
mov
jecxz
jecxz
jecxz
daa
jecxz
jecxz
loop
mov
fwait
loop
loop
loop
adc
loop
or
add
loop
add
add
mov
push
dec
dec
in
adc
in
add
in
in
in
add
push
leave
inc
stos
rclb
clc
in
xchg
mov
je
add
call
mov
fildll
outsb
daa
adc
in
out
out
out
out
test
fsubrl
outsb
out
adc
xor
dec
out
js
insl
out
out
out
cmp
icebp
adc
mov
out
call
nop
cli
out
out
jmp
cs
adc
adc
push
mov
or
aas
jmp
cld
cmpsb
loop
sub
sbbl
push
adc
loop
jmp
orb
dec
ljmp
cld
int
icebp
in
ja
test
push
in
inc
in
push
cmp
es
sub
cld
int
fsubr
out
sti
out
in
out
inc
out
or
icebp
mov
pop
cs
mov
pop
icebp
lea
push
cmc
loope
loope
sub
pop
loope
rcl
test
loope
adc
loope
mov
mov
fsubrl
rcll
or
loopne,pt
jecxz
lods
pop
movsl
aad
je
jecxz
mov
jecxz
pop
je
mov
loop
hlt
add
mov
cmp
fisttps
jecxz
sahf
in
in
adc
mov
push
stos
mov
in
mov
mov
scas
ljmp
ljmp
subl
inc
adc
or
dec
call
dec
add
adc
scas
dec
loope
aas
aam
incb
loope
dec
add
loope
loopne
cld
mov
and
loopne
loopne
inc
jg
pop
incb
fsub
mov
scas
adc
lock
aam
aam
jmp
jmp
cmc
or
add
cltd
push
push
in
add
adc
mov
add
clc
es
mov
xor
jle
fistpll
inc
mov
dec
loop
adc
js
xchg
in
fildl
jg
in
in
in
adc
in
adc
xchg
lcall
or
xor
xor
cmp
jg
in
in
sub
ja
inc
js
sarb
and
out
out
inc
jp
hlt
outsl
sbb
loopne
call
out
pop
mov
out
pushf
add
test
mov
mov
mov
jg
out
jg
mov
cmp
push
adc
out
out
inc
out
out
out
decb
je
test
popaw
out
jmp
mov
push
call
jge
and
pop
decb
inc
cs
jnp
xor
ljmp
in
daa
or
bound
ljmp
int3
in
imul
sti
push
jecxz
cmpsb
in
ljmp
in
pop
in
inc
in
je
incl
jg
in
arpl
push
adc
add
inc
inc
shr
fldl
hlt
in
std
in
in
out
decb
popf
in
in
mov
in
mov
lock
into
out
adcb
mov
sbb
out
mov
dec
or
xor
loope
xor
loopne
jecxz
cmp
inc
jmp
and
into
in
pusha
arpl
aam
je
sbb
inc
mov
in
pop
je
enter
scas
shr
mov
sbb
das
sar
add
call
ret
call
call
mov
call
call
fdivr
cmp
add
pop
call
jmp
jmp
jmp
adc
outsb
xor
and
mov
sbb
in
std
add
sub
pusha
sbb
push
in
fsubrp
les
call
push
in
inc
incl
push
mov
out
hlt
out
cld
scas
out
dec
out
adc
fucomi
mov
out
movsb
out
inc
xchg
cmpsb
imul
sbb
loope
adc
and
push
cld
aaa
jg
jecxz
loop
loop
pop
loop
loop
in
in
mov
mov
clc
out
pusha
cmp
push
in
pop
je
fcom
call
lcall
push
jmp
ljmp
lahf
in
jnp
push
fsubr
and
loopne
mov
pop
pusha
setae
jg
xchg
cltd
or
cltd
inc
cwtl
loope
cli
adc
insb
lock
pop
aad
mov
loop
ljmp
stc
shlb
pusha
in
adc
in
in
repnz
in
mov
in
and
pusha
dec
ret
adc
outsl
lcall
xchg
out
add
push
ss
inc
jmp
pop
push
lock
adc
out
call
add
adc
incl
call
jmp
jmp
jmp
pusha
inc
aas
add
inc
mov
mov
mov
xor
mov
fwait
adc
in
ret
enter
test
outsl
jmp
push
in
dec
adc
jae
sbb
pop
cmp
in
pop
ss
mov
mov
es
in
adc
paddsb
adc
and
imulb
sub
out
out
cwtl
out
sub
mov
insl
out
rcr
sub
shl
sub
inc
das
cli
pop
add
push
pusha
sub
loopne
lods
adc
aas
sub
jg
jecxz
addb
cmp
mul
cmpsb
ljmp
mov
out
add
mov
ja
loopne
out
movb
jmp
iret
push
mov
mov
jmp
ljmp
and
in
shl
push
pusha
test
out
sub
popf
out
mov
out
jns
sub
aam
add
loope
loope
add
or
xchg
add
loopne
adc
jecxz
outsl
decb
test
scas
loop
gs
loop
jp
ja
xchg
or
in
mov
jle
mov
sub
mov
mov
lret
in
cmc
in
mov
mov
add
in
aad
mov
rorb
imul
adc
sub
mov
adc
out
out
adc
cmc
inc
jg
call
hlt
adcb
jle
jle
stos
mov
sti
in
cmp
iret
in
mov
pusha
in
dec
test
add
inc
dec
adc
hlt
fbld
push
or
push
loopne
and
pusha
test
jecxz
call
jecxz
jecxz
mov
loop
mov
mov
push
in
push
cmp
call
out
jmp
cmp
mov
cmc
xor
cmp
in
jle
sub
mov
add
stos
pushf
out
hlt
add
out
pusha
lcall
sbb
loopne
pusha
fwait
sti
inc
fs
loope
cmpsl
cwtl
adc
loope
add
mov
ljmp
mov
and
loope
adc
je
loope
adc
jl
arpl
stos
lock
insl
loope
push
push
sbb
add
pop
push
adc
cmp
jo
js
loope
loope
sub
shl
xchg
add
add
loopne
loopne
loopne
adc
loopne
jg
mov
xchg
loopne
loopne
inc
loopne
loopne
loopne
push
bound
sbb
movsb
loopne
adc
add
pop
dec
loopne
pop
mov
loopne
xor
pusha
xor
sarl
enter
fwait
loopne
loopne
mov
setp
loopne
push
sbb
adc
sub
jecxz
jecxz
lcall
les
jecxz
aam
jecxz
jmp
loop
pop
in
out
add
jecxz
and
call
mov
mov
jl
out
clc
mov
adc
jecxz
jecxz
rorb
jcxz
dec
adc
push
add
shll
jecxz
xchg
mov
lret
in
in
jb
cmp
cld
xor
leave
out
out
ret
out
out
or
lea
stos
xchg
ja
sub
fidivrs
push
cmp
and
int3
call
sub
mov
iret
xchg
clc
in
pop
mov
hlt
incl
out
dec
out
out
icebp
adc
or
jmp
stc
shl
loopne
loopne
jo
push
xchg
loop
adc
inc
out
push
fidivrl
or
in
jo
std
pop
push
or
mov
call
and
pop
ljmp
jo
sub
add
out
pop
lock
cmp
sub
xor
inc
in
push
xchg
loop
jmp
adc
fsub
loop
orb
lcall
xchg
sub
inc
out
out
out
aaa
push
sub
sub
cmp
imul
xchg
call
ret
cmpsl
ljmp
jmp
push
lock
add
in
mov
inc
test
cltd
in
outsl
test
jecxz
xor
or
stos
dec
jecxz
loop
mov
outsb
add
fistps
in
adc
and
rclb
cmp
jmp
clc
das
sub
cs
adc
sarb
shr
push
ljmp
mov
push
mov
jg
jg
xorb
cmp
adc
dec
cmp
xchg
jmp
inc
adc
pusha
jmp
shl
out
add
lock
add
mov
dec
popa
call
jp
or
jmp
clc
mov
pop
jmp
std
in
jp
add
ljmp
ljmp
aaa
or
das
ljmp
mov
pop
in
ds
jmp
jecxz
rclb
nop
pop
mov
sub
out
sbb
xor
shr
filds
lods
xorb
mov
push
out
xor
or
pop
mov
sbb
loope
mul
xchg
aam
loope
and
adc
loope
nop
aaa
add
cmp
sub
push
mov
add
int3
fsub
mov
stos
inc
jmp
shr
push
jmp
adc
push
call
in
cltd
add
dec
mov
shr
mov
xlat
in
ret
decb
loopne
push
leave
out
into
lock
out
mov
cwtl
out
adcb
aad
adc
out
cmpsl
cmp
lock
out
arpl
imul
mov
jno
xor
loopne
lock
loopne
adc
push
add
test
mov
xchg
insb
mov
loop
fisttps
jl
add
loop
xor
loop
lea
mov
lock
int
add
or
inc
adc
loop
loop
test
inc
ret
add
adc
cmp
mov
inc
cwtl
add
jne
loopne
adc
loopne
push
dec
xor
rolb
pop
cmc
push
add
dec
mov
or
inc
nop
data16
sbb
and
push
add
in
and
mov
or
jne
and
xor
or
xor
mov
test
pop
pop
andb
out
gs
mov
idivb
out
out
cmp
mov
jmp
shl
out
out
int
icebp
out
shrb
std
and
out
mov
adc
out
out
out
nop
and
decl
cmpb
out
out
out
push
out
inc
sub
xchg
push
sbb
pop
sar
pop
adc
mov
add
mov
push
adc
add
xor
ret
jmp
mov
or
out
stc
pop
or
ja
xchg
pop
popa
mov
or
mov
ss
jmp
mov
and
sbb
ja
cmp
ss
sti
mov
mov
fidivrl
or
add
adc
push
pop
mov
enter
mov
incl
cli
fwait
pop
xchg
add
xor
mov
aas
add
inc
xchg
dec
popa
sbb
leave
add
scas
mov
sbb
cld
out
or
mov
sbb
jbe
out
lods
test
mov
push
mov
fs
adc
repnz
call
push
mov
loope
dec
add
cmpsb
bound
inc
call
or
out
mov
cmp
add
stc
or
out
cli
xlat
mov
lods
and
lahf
imul
ljmp
ljmp
sub
mov
hlt
and
jg
sub
test
xchg
adc
xor
inc
dec
popa
add
or
js
cld
add
bound
pop
lock
dec
add
pop
decl
loop
pop
negb
ja
outsl
cli
push
adc
adc
mov
jo
jge
dec
inc
add
hlt
movl
faddp
sbb
filds
incb
dec
repz
das
clc
mov
xor
ds
fldl
dec
pop
js
js
jae
jne
ficomps
mov
inc
mov
bound
jno
sbb
pop
xor
adc
pop
mov
mov
push
lds
adc
pop
inc
add
sbb
lods
sub
decl
mov
hlt
dec
and
rcr
mov
inc
mov
xchg
pushf
shlb
push
imul
pushl
sbb
dec
stc
ret
add
fdivrl
stc
lret
rcrl
lahf
aas
or
adc
dec
jmp
mov
push
cmp
sbb
add
test
mov
push
inc
jmp
roll
out
sub
aam
call
cld
mov
leave
push
jp
repz
xchg
pop
movl
stos
aaa
lahf
mov
outsl
adc
adc
adc
lret
ljmp
add
sbb
xor
add
mov
mov
jg
mov
or
add
out
mov
mov
or
addr16
scas
mov
mov
sarb
ret
jg
bound
das
or
or
out
fdivrl
pop
cld
jg
cmp
mov
in
loopne
and
xor
xlat
xlat
push
stos
and
sub
jno
filds
hlt
mov
jb
jne
insb
push
jb
je
arpl
in
in
je
js
inc
gs
jne
jb
outsb
je
push
fs
outsl
in
jne
inc
imul
jae
xor
push
gs
in
cmp
in
imul
push
gs
insb
insb
push
ret
negb
dec
sbb
and
pop
push
lret
push
adc
imul
bound
pop
push
je
inc
sahf
iret
mov
push
je
arpl
push
push
jb
xor
clc
dec
pusha
pop
and
push
inc
je
inc
gs
imul
imul
xchg
lahf
inc
jo
sbb
pop
adc
pusha
in
andb
popa
repnz
insl
jo
push
mov
adc
fisubrs
push
push
sub
popa
jae
test
out
push
insl
pusha
adc
mov
dec
mov
inc
jbe
inc
imul
inc
or
mov
mov
mov
fistpl
push
jne
jns
shrb
dec
imul
insl
push
imul
mov
adc
xor
xchg
adc
push
inc
cmp
jbe
pop
inc
inc
push
or
push
xchg
movsb
push
outsb
ja
faddl
sbb
adc
push
lods
dec
lock
jns
sub
sbb
inc
std
add
push
push
insb
enter
pusha
lea
int3
pop
sbb
jae
gs
inc
jno
xchg
jp
cmc
sub
adc
adcb
jo
cmp
jae,pt
mov
scas
and
push
jne
mov
lret
xor
mov
xor
mov
jne
int3
inc
ds
stos
cmp
push
imul
ret
push
outsl
jge
jns
shll
push
in
out
sub
mov
jae
jne
rorb
inc
sbb
push
sub
push
sub
addl
sbb
xor
popf
ficoml
and
sbb
mov
aad
icebp
cltd
add
xlat
gs
pop
add
fcomps
push
sub
scas
ja
bound
mov
inc
arpl
sub
movb
imul
dec
outsl
lcall
fidivl
lds
neg
jns
pop
sbb
insl
mov
loope
in
pop
cmpsl
or
dec
add
lods
mov
mov
or
xchg
cmp
aaa
adc
jae
or
adc
jo
aas
push
imul
push
push
inc
inc
and
shlb
testb
inc
pop
push
cmp
ja
stos
mov
push
push
lds
adc
mov
push
push
data16
insl
mov
cwtl
sbb
xchg
adc
jo
mov
or
roll
icebp
xor
lcall
mov
push
dec
mov
inc
mov
cmpsl
fwait
add
shrb
pop
sub
adc
xor
je
jnp
or
std
inc
movsl
jno
mov
cmpl
adc
and
incl
gs
lds
daa
movsb
push
push
int
popa
sbb
mov
xor
pushf
cmp
inc
mov
sbb
sbb
inc
jae,pn
or
std
test
mov
xchg
dec
dec
mull
inc
adc
jns
sub
fistl
std
push
or
popa
in
sub
int
loopne
scas
enter
jg
repz
subl
aam
mov
pop
test
add
dec
inc
add
out
sbb
pop
mov
add
lods
sub
pusha
lret
jmp
adc
sub
std
ret
sbb
stos
jne
and
mov
push
adc
out
xor
push
stos
add
movsl
fsubrs
add
push
adc
or
imul
pop
xor
jb
aad
adcb
dec
cs
xchg
mov
pop
add
adc
mov
dec
dec
movsb
outsb
dec
fisttps
add
add
sti
pop
adc
out
sbb
push
adc
outsb
fnsetpm(287
gs
and
nop/reserved
popa
add
jnp
jae
add
stc
int
push
sub
out
adc
pop
add
add
push
add
sub
loop
add
and
adc
pusha
jb,pn
pop
popa
sbb
push
out
test
add
outsb
dec
push
push
ret
imulb
sub
cld
dec
shrb
dec
push
bnd
xor
dec
sub
loop
jo
jae
adc
ss
mov
pcmpeqb
fidivs
pop
das
and
xchg
lock
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
