sbb
add
or
sbb
mov
pop
xchg
testl
or
jo
mov
xchg
insl
adc
outsb
and
mov
pusha
sbb
int3
add
nop
incl
std
test
into
pop
push
aas
lods
test
fistl
out
sbb
adc
adc
imul
add
dec
int3
pxor
stc
xchg
stos
notl
mov
and
mov
push
notb
into
xchg
mov
cli
mov
push
jo
mov
ret
std
xchg
sbb
mov
pop
mov
and
cmp
pop
fldcw
std
shlb
bound
pop
in
orl
sbb
fcoms
add
rolb
adc
cwtl
push
ds
daa
fildll
fwait
dec
jg
out
xchg
loop
bound
or
lcall
pusha
dec
push
jecxz
cltd
testb
push
test
jo
mov
xchg
mov
pop
jg
cmp
jle
adc
and
ja
cli
in
lahf
sarl
ret
movsl
and
or
pop
push
mov
psrld
jae
mov
bound
push
daa
dec
xchg
pop
pop
xor
jecxz
push
pop
push
inc
testl
iret
lds
mov
idivl
or
clc
ja
adc
ret
mov
hlt
ret
inc
ja
or
nop
hlt
clc
pop
lret
xchg
dec
add
rolb
jne
mov
cltd
dec
inc
movsl
and
sarl
mov
les
test
xor
mov
es
sti
push
fisttpll
subb
sbb
jg
aas
push
pop
xchg
inc
mov
mov
push
ja
mov
aam
ljmp
or
fstl
jns
pusha
adc
sub
daa
xor
into
out
push
imul
and
xchg
lds
xchg
sbb
push
adc
push
fcmovb
das
dec
jl
jno
pop
incl
ret
into
inc
push
orb
pop
insb
xor
mov
ss
sub
test
jecxz
cmpsl
or
xor
mov
and
jmp
xchg
sbb
adc
or
push
aas
inc
stc
cmp
movsl
add
loopne
xchg
xor
cmp
data16
pop
pushf
push
repz
mov
pop
sbb
dec
mov
cld
cli
stos
js
cmp
jle
outsl
jle
scas
jne
dec
pop
sub
rcrl
xor
sbb
je
fisubs
aas
push
adc
fidivs
inc
push
adc
mov
jle
jae
sbb
jmp
xor
int
fsubrl
xor
scas
mov
inc
inc
dec
mov
sarl
sbb
pop
pop
mov
ret
aad
testb
imul
fsave
pusha
ret
pop
jne
xor
push
dec
cmpsl
cltd
scas
push
cmp
dec
lret
popa
push
ds
fstpl
pop
dec
jnp
inc
fucomip
and
push
sbb
pusha
jb
push
jmp
scas
sub
xchg
sbb
in
nop
outsl
and
jp
or
loop
mov
xor
ret
push
insb
jmp
mov
lahf
mov
fiadds
imul
scas
out
or
sub
mov
and
clc
pop
rcll
fdivrp
ds
jne
ja
sub
jl
in
xor
cmpsb
lret
jo
jbe
inc
lcall
fwait
ss
pushf
pop
xor
pop
inc
pushf
cwtl
push
ss
mov
les
xchg
imul
push
stos
mov
movsl
daa
mov
or
sub
andl
jle
jb
ds
sub
mov
pop
rorl
jg
inc
cmp
and
adc
cltd
notl
mov
pop
mov
movsb
xlat
or
cli
icebp
add
xchg
sbb
sub
xchg
in
cli
into
jl
mov
test
cld
mov
jmp
xor
xchg
imull
das
xor
mov
inc
jnp
adc
push
aaa
lea
popf
in
or
push
sahf
loop
mov
pushf
cmp
lret
roll
stos
and
ret
pop
push
dec
scas
cmp
aas
ss
lret
ss
xchg
int3
cmpsl
pop
mov
xchg
xchg
int3
push
mov
jb
repnz
push
inc
lods
icebp
icebp
adc
imul
xchg
enter
ja
mull
call
or
sub
jle
xchg
fwait
arpl
push
xchg
sbb
lods
aam
testb
mov
fs
cmp
loopne
shr
js
adc
pop
mov
inc
mov
orl
xchg
sti
mov
mov
daa
test
push
jp
add
pushf
js
es
ds
jno
es
ret
enter
push
sub
xor
lcall
sub
int3
test
data16
jne
cwtl
and
add
in
scas
xor
popf
es
add
les
adc
pop
stos
lea
sbb
gs
cmp
divl
data16
cmp
clc
jb
test
arpl
lahf
xor
jle
sbbb
pop
dec
jmp
jecxz
xlat
adc
ss
mov
xor
adc
adc
adc
lret
test
xor
mov
pop
aam
fs
sbb
daa
inc
sub
xchg
fwait
cmpsb
std
ss
sub
inc
test
sbb
add
dec
mov
or
fdiv
push
arpl
sahf
push
mov
mov
mov
mov
in
pop
in
in
in
jmp
cltd
or
and
iret
imul
cmc
cmp
stos
scas
popa
cli
mov
out
sub
cld
dec
xchg
icebp
pop
jae
add
call
jbe
jp
push
ss
repz
cmpsl
scas
stos
add
clc
out
xor
jno
dec
adc
bound
adc
xchg
std
inc
repz
mov
dec
push
int
sub
cmp
dec
nopl
push
cld
xorb
push
jecxz
cmp
test
jl
sub
int3
and
xor
push
icebp
icebp
ds
dec
iret
mov
mov
jbe
jo
clc
out
mov
jle
cmp
xor
out
cmp
div
mov
adc
insl
bound
sub
ficomps
jae
add
push
movsb
inc
mov
mov
loopne
or
mov
insl
orps
jne
int3
mov
arpl
out
pop
aaa
sahf
sub
lock
push
dec
ds
cmp
pminub
jmp
mov
or
aad
bnd
imul
popf
sbb
nop
and
loopne
or
add
add
inc
sar
rclb
sahf
jbe
aam
insb
or
loop
ret
fiadds
into
rorl
test
cltd
aaa
mov
mov
lock
sti
mov
lods
xlat
notl
xor
mov
push
sub
cmp
movsb
xor
sti
adc
nopl
hlt
pop
pusha
test
icebp
movsl
inc
out
fistpll
dec
lahf
xlat
loop
and
push
sub
pop
jne
dec
cli
outsb
lods
sbb
aas
mov
shlb
movsb
cltd
mov
xchg
mov
into
xlat
pop
lods
cmp
sub
sub
or
insb
cmp
les
jge
pop
add
in
dec
mov
in
jl
ss
out
or
pop
test
scas
in
cmpl
or
jecxz
movsb
in
cmp
hlt
testb
mov
dec
sub
repz
fcmovnb
repnz
out
push
lret
scas
dec
pop
rolb
rcr
movsl
jmp
mov
in
inc
movsb
dec
mov
or
or
push
iret
imul
mov
jl
imul
loop
and
jmp
xlat
mov
pusha
arpl
je
fsts
sub
sub
jl
scas
dec
dec
sbb
stos
shll
xor
cmp
out
mov
inc
andl
add
sub
movsl
mov
push
add
cmp
gs
cmp
or
mov
imul
scas
push
push
test
je
insb
sahf
adc
mov
fdivl
hlt
mov
dec
adc
mov
leave
jno
jns
gs
movsl
mov
pop
xchg
gs
rcpps
sbb
xchg
imul
dec
cld
leave
push
push
shrb
cmpsb
lret
outsl
jg
pop
test
mov
call
jnp
cld
cltd
xchg
aaa
xor
outsl
cmp
pop
push
imul
mov
mov
adc
hlt
cmp
lret
in
or
xor
test
test
ja
inc
repnz
lret
scas
out
push
add
mov
or
je
leave
daa
sbb
jmp
mov
out
cmp
xchg
push
sbb
jno
pop
jne
mov
notl
mov
mov
into
sbb
sub
divb
adc
loope
jo
or
call
popa
sub
xchg
stc
push
add
stos
leave
sbbl
mov
shrl
sub
pop
insl
and
dec
and
pop
mov
add
dec
filds
and
mov
pop
les
or
movsb
in
or
out
mov
rorb
xor
and
mov
imul
dec
cmpsb
mov
in
pop
mov
or
daa
cmp
sbb
sub
xchg
mov
shlb
icebp
ret
add
xchg
aaa
push
jecxz
out
dec
or
pop
int
jg
sbb
jb
jno
dec
jecxz
and
clc
lods
sub
or
mov
xchg
dec
mov
mov
mov
mov
jp
inc
jge
shlb
add
ds
jle
pop
adc
xchg
fsubrs
pop
mov
mov
in
lret
jo
cwtl
jl
fcomps
xchg
das
adc
in
inc
pop
enter
xchg
cmp
shr
pop
cmp
hlt
jp
in
daa
jmp
sbb
cmp
mov
cli
or
cld
jno
inc
aaa
and
jge
cmpsb
imul
mov
push
xor
push
jp
mov
movsb
stos
rcll
fcoml
xor
cld
mov
jns
cmc
shrb
xchg
xlat
dec
mov
xchg
in
insl
aam
inc
pop
xor
rolb
ljmp
dec
cwtl
mov
outsb
pop
mov
outsb
ret
inc
movsb
jmp
add
fdivr
insl
dec
cmp
and
jg
cmp
push
jmp
push
imul
mov
xor
cmpsl
or
mov
cmp
pushf
insb
jge
push
pusha
imul
cmpsl
xchg
jns
in
out
sbb
mov
daa
ficompl
cmp
test
shlb
fidivrs
lret
sahf
jnp
cmp
lds
push
cmp
xor
sahf
mov
fsubp
repnz
or
movsl
xor
mov
dec
stos
imul
sbb
lret
cmp
cmp
cmpsb
mov
jle
gs
fnstenv
inc
mov
jg
int3
cwtl
bound
sub
cli
sbb
xchg
xor
mov
cmp
xchg
and
and
fstpl
shlb
in
cwtl
xor
scas
pop
shlb
ret
je
pop
das
xor
lret
mov
daa
aad
arpl
push
and
jnp
and
lods
mov
and
push
push
fdivl
inc
ret
sbb
fwait
loope
add
icebp
jns
sbb
jae
cmpsl
adc
cltd
test
dec
and
jl
mov
fs
add
mov
lcall
std
adc
rorl
int
mov
aaa
sbb
add
in
add
dec
mov
loope
xlat
fsincos
lea
sub
aam
dec
lea
cmc
arpl
jmp
sbb
setb
push
das
arpl
ja
nop
cmpsb
ds
and
popf
or
dec
xor
lret
add
mov
sub
pusha
sbb
push
les
or
daa
addb
push
or
push
dec
loop
add
xchg
in
fwait
loope
sub
test
xchg
lahf
pop
int3
jae
jnp
push
aad
fsubrs
inc
pop
ds
dec
aaa
pusha
ja
je
cmc
int3
scas
sbb
sbb
fdivs
jbe
mov
xchg
popa
mov
lods
mov
mov
dec
xor
adc
push
or
push
out
fadds
ret
movsl
ljmp
mov
lcall
xchg
and
mov
int3
aam
xor
out
idivb
inc
mov
pushf
test
fs
push
popa
repnz
push
cmpsb
xor
sbb
cmp
lahf
adc
icebp
sbb
lea
pushf
cmc
push
lods
imul
jbe
sbb
or
and
lods
test
loope
cmp
das
clc
jmp
inc
cmc
adc
outsl
inc
sahf
xchg
jo
test
fisttpll
jp
rorb
sahf
out
mov
xchg
data16
jno
inc
pusha
sbbl
mov
xchg
sbbl
scas
mov
mov
xchg
push
cwtl
dec
pushf
adc
sub
lods
or
popf
insl
leave
mov
or
cmc
insb
fldl
mov
rcll
pop
xchg
mov
add
mov
in
cmpsb
jmp
or
scas
repz
jnp
arpl
ds
imul
dec
testl
or
imul
int3
sub
mov
mov
ja
iret
call
loop
or
jle
xchg
pushf
mov
sbb
mov
mov
fimuls
sub
std
mov
push
jp
cmp
sub
cmp
imull
inc
les
push
pop
dec
out
movsb
cmpsl
stos
fildll
lds
mov
test
ja
lcall
mov
or
out
jp
xor
imul
mov
push
xchg
inc
sbb
mov
call
mov
mov
mov
lret
xchg
sahf
lds
mov
negb
rcll
fsub
fstpt
cld
mov
pop
scas
subb
ljmp
fs
ja
cwtl
push
clc
push
pop
out
dec
push
mov
pushf
lret
xchg
or
lahf
pop
and
pop
xchg
jb
cltd
and
mov
sub
bound
push
inc
rcrl
aam
adc
or
cmc
or
sub
sbb
jmp
fisubrs
and
or
pop
movsl
mov
sub
xor
xor
mov
xchg
les
pop
push
push
inc
clc
iret
adc
add
and
dec
dec
mov
fcom
mov
inc
mov
xor
and
xchg
adc
sub
lods
sbb
call
cmpsl
sar
push
fiadds
jnp
je
inc
lods
cs
ja
stos
xchg
xor
outsl
insb
outsl
adc
cmp
mov
out
gs
cmc
icebp
repz
and
insl
jl
std
repz
sub
sub
adc
mov
pusha
lret
cli
lahf
pop
pop
sbb
jae
aaa
scas
xchg
aaa
loopne
cmpsb
fsubrl
cld
notl
jmp
outsl
jp
and
testb
jnp
jnp
cmpsb
insb
add
out
stos
adc
and
int
mov
push
in
jae
mov
ljmp
pop
ret
js
dec
movsl
fsubs
cmc
inc
jb
aaa
cs
decb
mov
lods
dec
dec
fdivr
je
in
decb
sbb
xor
push
out
insb
xchg
or
jge
add
rorb
aad
inc
cmc
dec
subl
fnstsw
shlb
mov
push
cmp
aad
inc
sbb
rol
adc
hlt
push
mov
int
inc
mov
mov
mov
imul
and
mov
jg
fcmovb
inc
pop
outsb
ret
cwtl
mov
or
mov
frstor
pop
mov
movsb
dec
adc
cmp
enter
in
inc
xchg
orl
mov
mov
inc
adc
lahf
dec
outsl
or
mov
push
test
icebp
fldenv
jae
enter
in
pop
popf
sahf
adc
int3
sub
mov
mov
add
jae
jge
mov
fistps
pop
push
or
idivb
push
add
insb
fcoml
mov
fs
hlt
fmul
pop
lret
mov
imul
aaa
out
dec
sub
popa
test
imul
stc
inc
les
cmpsb
cmp
or
sub
pusha
adc
push
cltd
or
fistl
and
out
mov
adc
inc
push
nop
flds
fmuls
test
mov
pop
dec
jmp
test
mov
imul
xchg
mov
pop
pop
inc
jae
out
add
out
push
bnd
ja
sbb
mov
test
iret
xor
xor
les
push
inc
lods
sbbb
xor
cs
push
pop
scas
pushf
xor
cltd
xor
sahf
jb
cmp
lret
faddl
jne
ss
push
insb
and
mov
lds
lret
mov
xor
push
and
push
mov
add
cmp
scas
sub
push
scas
aas
stc
lret
stc
fnsave
arpl
mov
xchg
cli
les
mov
sbb
cld
inc
mov
insl
scas
sarl
xor
lods
in
sub
lret
jne
push
xchg
dec
ret
loopne
lods
push
rol
aad
hlt
mov
mov
ds
mov
call
sbbl
lods
fs
mov
adc
ljmp
xor
sbb
mov
in
roll
decl
push
loopne
mov
dec
xor
iret
pop
or
lods
pop
sub
xchg
ret
sbb
rcl
jnp
sbb
aas
enter
push
push
lock
mov
pop
jle
or
push
pop
popa
push
cld
xchg
fildl
test
cld
pop
mov
addr16
jne
loope
js
fdivrp
dec
cltd
faddl
cmp
rol
sub
fmuls
or
test
push
push
mov
adc
test
sub
test
cmp
enter
or
mov
rcrl
loop
inc
lcall
inc
sbb
fs
dec
cmp
dec
pop
cmp
andl
mov
aas
dec
mov
out
adc
mov
xor
orb
and
out
inc
jg
push
pusha
loopne
aad
lock
mov
adc
xchg
jne
test
int
lret
cwtl
dec
xlat
push
iret
push
sar
mov
js
je
mov
cmp
ret
adc
jo
mov
mov
xchg
jno,pt
inc
dec
in
insl
sahf
lds
loop
aad
loop
repz
stc
and
pusha
cmp
test
notl
sbb
aaa
add
rcrl
mov
aaa
es
cmp
repnz
out
int
inc
stos
ja
shrl
test
inc
sbb
rcrl
cld
movsl
and
xchg
cmp
sbb
aas
sbb
out
mov
scas
dec
push
sti
in
xor
jecxz
jmp
inc
mov
jo
mov
addr16
sub
pop
and
enter
mov
mov
sbb
daa
inc
sub
adcl
xchg
jno
mov
inc
lret
sbb
jo
push
pop
mov
bound
jne
pop
int3
sbb
les
inc
mov
jl
inc
xor
cld
and
call
inc
mov
loope
cld
mov
cli
loope
jo
inc
clc
ficompl
imul
lret
or
mov
pop
fldt
cs
add
sub
imul
adc
cld
in
dec
and
sarb
sti
adc
adc
xlat
dec
cltd
push
push
and
adc
dec
mov
mov
es
pop
rcr
popa
fcomps
ficompl
xchg
nop
mov
sub
cli
sub
lret
test
or
sbb
or
loop
gs
sub
das
jmp
stos
addr16
daa
jns
xor
mov
ficomps
xchg
js
lods
inc
int
mov
in
mov
in
and
push
in
inc
aaa
pop
or
aas
pusha
dec
or
adc
mov
addr16
xchg
call
mov
jb
cmp
mov
ljmp
or
sub
sub
fwait
add
pusha
mov
das
pop
out
inc
adc
push
or
and
mov
cwtl
pop
lock
lods
mov
fdivs
mov
paddusw
pop
cmp
adc
fisttps
mov
pop
lret
inc
mov
cmp
lock
sbb
lahf
adc
add
jl
std
cwtl
jp
mov
mov
dec
dec
lahf
rcrl
lea
popa
fdivl
loope
inc
andl
push
sbb
cs
popa
insb
xchg
ficoml
pop
sbb
mov
mov
ljmp
pop
cmp
mov
pop
aas
add
hlt
scas
lds
and
cmp
mov
dec
jo
leave
cmp
pop
xor
andl
sbb
pop
push
fidivs
shll
test
popf
jmp
mov
into
int
cmpsb
jecxz
jle
xchg
push
dec
xchg
push
inc
sbb
rol
notb
jecxz
push
into
arpl
jns
aad
popf
enter
icebp
fisubl
jbe
out
nop
sub
sub
jns
xlat
pop
add
mov
pop
mov
cli
lods
sbb
add
leave
insl
out
rcl
test
fwait
aad
pop
cli
pusha
icebp
aam
iret
jno
sbb
mov
fld
andb
or
xchg
loope
xor
mov
jecxz
out
cmp
fmulp
stos
scas
push
cmp
inc
mov
adc
fnsave
shrb
xor
aaa
push
loop
pushf
out
cmc
mov
and
test
dec
decb
stc
ljmp
push
mov
aad
mov
out
adc
inc
mov
movsl
adc
or
mov
lods
popa
xor
dec
dec
dec
jo
ss
sarl
sub
fidivrs
lea
mov
ret
jge
cwtl
mov
mov
or
mov
push
bnd
xchg
pop
inc
adc
or
xchg
fdivs
testb
pusha
sub
push
aam
popa
xchg
mov
mov
or
imul
out
fdivs
or
loope
clc
and
lret
cli
test
movsl
or
insb
std
cmp
pop
xor
cld
dec
and
test
inc
add
dec
inc
lret
lea
cmp
sub
or
lahf
mov
les
pop
add
ficoms
mov
xor
test
aam
pop
dec
mov
aam
push
mov
sbb
clc
dec
sarl
mov
mov
or
pop
test
jecxz
push
addr16
movsl
sti
inc
sub
int
pop
xorl
fwait
jle
pop
mov
cmp
rcl
clc
mov
lcall
ljmp
xchg
lods
lods
xlat
xchg
es
out
stos
shll
xchg
mov
jb
imul
shrb
pushl
and
hlt
stc
lock
bound
enter
fstpl
sub
dec
gs
xor
inc
fidivl
lahf
subl
fildl
popa
mov
popf
push
test
pop
into
cmpsb
cmp
das
daa
pop
dec
sarl
in
shl
push
dec
cld
dec
decb
mov
out
xchg
jmp
or
sbb
sbb
and
leave
lods
xor
repnz
das
mov
aas
jne
fdivl
insl
push
xlat
xchg
cmp
or
sbb
mov
push
ret
nop
sub
lods
fdivrl
add
inc
lea
dec
add
xchg
jg
lods
xchg
arpl
xor
inc
dec
mov
sbb
xchg
mov
dec
sbb
lock
sub
stos
or
lds
adc
sbbb
inc
or
mov
jp
cmp
jb
dec
in
pop
inc
call
jnp
sti
and
push
xor
mov
ds
mov
inc
sub
mov
inc
cmp
fisubrs
outsb
mov
test
or
mov
js
or
dec
dec
hlt
gs
inc
lods
xor
arpl
lret
pop
gs
cs
pushf
pop
xor
lods
in
jne
add
mov
lret
lods
dec
lcall
mov
inc
xor
ja
fmuls
sbbl
dec
fwait
jae
les
cmp
in
mov
mov
mov
jae
sti
jne
shll
add
add
pop
or
mov
xchg
mov
jmp
fisttpl
loopne
int3
in
cmp
jo
nop
mov
xor
popf
inc
sbb
adc
fnstcw
and
movsb
lea
shr
aad
fsts
adc
mov
mov
pop
adc
cli
scas
movntps
mov
push
data16
arpl
cmp
cs
icebp
out
add
lret
jb
jns
push
add
inc
stos
push
stos
dec
aam
icebp
out
iret
pop
cld
incl
inc
cmp
ja
lea
je
adc
cmc
mul
imulb
xchg
notl
ss
mov
daa
aam
cmc
aad
pop
pop
inc
cmp
aad
xchg
mov
xor
sbb
sub
cld
lret
cli
adc
sar
das
ljmp
movsb
and
mov
xchg
push
xchg
add
mov
mov
lods
ja
fstpt
xchg
bound
rclb
test
movb
xchg
out
adc
add
aaa
rolb
cmpsl
mov
xchg
imul
clc
jle
dec
addr16
sub
popa
test
add
repz
adc
stos
sarb
sbb
jl
xor
pop
mov
xor
sbbl
add
outsb
push
out
aam
jne
in
jmp
lods
pop
or
dec
fistl
clc
cmp
rcrb
shrb
mov
in
fistl
add
js
je
aam
dec
adc
les
jecxz
les
sbb
dec
inc
push
jmp
leave
fadd
test
ret
push
ljmp
inc
adc
dec
mov
pop
loop
nop
add
nop
inc
lahf
int3
movsb
sbb
push
adc
sbb
pop
ret
jb
inc
jb
push
sbb
es
push
adc
lret
jg
push
sbb
mov
ljmp
sbb
inc
inc
or
xlat
sbb
rclb
cs
xor
sbb
xchg
pop
lret
cltd
enter
dec
bound
xlat
loope
jnp
mov
and
pop
mov
test
enter
mov
lods
inc
cmpsb
mov
push
nop
imul
std
add
sub
jge
cmpsl
and
pop
sub
sbb
je
call
sbb
std
adc
scas
add
pop
mov
or
mov
push
lods
adc
cmp
ja
movhps
stos
xchg
popf
cwtl
fdivs
or
fwait
mov
sub
cltd
push
mov
xlat
xor
pusha
sbb
jbe
in
in
lahf
dec
jnp
rcrl
ja
mov
cmpsl
mov
es
fcoml
dec
mov
stos
cwtl
dec
test
mov
add
xor
imul
sub
push
icebp
in
xchg
adc
inc
outsb
or
sbb
xor
enter
mov
pushf
cld
lods
add
adc
std
sahf
fldl
ret
inc
jne
sub
cmpsl
icebp
mov
es
sbb
test
loopne
mov
rol
inc
pop
stos
add
inc
jb
pop
insb
xchg
dec
mov
sub
push
test
or
mov
mov
push
sti
popa
sbb
imulb
inc
cltd
sbb
inc
fidivrs
mov
cmp
mov
fnsave
mov
movsb
sub
ss
push
pop
repz
cmp
sbb
fsts
cmp
jnp
mov
sub
rcll
out
ljmp
add
mov
stos
divb
aas
lcall
inc
into
sbb
mov
inc
repnz
les
and
mov
cmpsl
push
outsl
ss
xchg
iret
enter
mov
dec
and
jbe
stos
and
pop
jmp
mov
jmp
xor
cld
mov
jae
data16
gs
mov
adc
mov
pop
push
lcall
and
add
mov
out
mov
cmpsl
push
jae
in
and
mov
jbe
inc
mov
and
push
dec
out
popf
sti
adc
add
xor
icebp
rcrb
xor
pushf
cli
jns
mov
fcomps
add
jo
cmp
xor
add
cld
pop
push
jg
mov
nop
push
adc
ret
sub
sbb
fwait
pop
add
imull
mov
orl
imul
cmp
push
les
and
sub
out
pushf
pop
stos
jb
repz
pop
xor
xor
jmp
cmp
mov
pop
inc
jo
xchg
xchg
dec
dec
pop
ret
repnz
pop
mov
or
aad
loope
push
clc
ljmp
xchg
jecxz
sbbb
out
inc
jle
loopne
pop
sub
and
cmp
mov
adc
and
mov
popf
rol
inc
ret
xor
std
pusha
pop
inc
pop
inc
or
insb
pushf
insb
mov
and
rclb
pop
xor
test
bound
sbb
aam
sub
icebp
hlt
dec
into
push
lea
aad
addps
cmpsb
mov
mov
inc
mov
filds
scas
adc
mov
mov
out
sbb
lahf
rorl
xchg
int3
xor
stos
pop
xchg
jge
addr16
or
fs
push
out
cwtl
aaa
sti
push
inc
inc
cltd
dec
div
sbb
sbb
sub
mov
and
out
ret
aaa
inc
mov
cmc
cltd
adc
int3
and
pop
test
and
pop
clc
and
jle
ja
xchg
jg
sbb
enter
ret
pop
mov
push
adc
and
repnz
mov
fwait
cltd
push
jle
fs
mov
stos
pop
inc
mov
jecxz
test
adc
testb
imul
mov
and
inc
jno
pusha
fcompl
hlt
shll
pop
lea
add
cli
push
cmpb
pop
or
repz
jbe
pop
mov
pop
pop
xchg
pop
data16
cli
scas
pop
xor
mov
testl
xchg
and
cltd
push
inc
push
cli
xchg
pop
push
addr16
movsl
push
es
or
clc
sbb
jo
pop
aaa
test
shrb
insb
sub
jno
sub
subl
int
shll
mov
and
stos
popf
adc
outsl
call
adc
push
shrb
mov
pushf
mov
inc
xor
jae
cld
icebp
inc
shll
jge
or
shl
cs
in
adc
sub
cmp
in
int3
roll
push
pop
add
sub
mov
mov
and
or
jle
imul
push
add
push
outsb
adc
imul
pop
test
in
lds
nop
outsl
pop
int
shll
pop
std
mov
lods
daa
cltd
mov
adc
jnp
push
or
mov
xor
mov
inc
js
xor
cmp
jae
out
cmp
pop
lods
imul
loope
xchg
xor
push
dec
mov
cmp
ss
rolb
mov
or
icebp
xor
popa
ret
lcall
add
stc
std
jl
adc
leave
pop
cld
fwait
xchg
xchg
adc
fwait
or
out
data16
aaa
mov
mov
and
or
insb
add
xchg
in
pop
aam
xchg
xchg
nop
push
outsl
cmp
cmp
mov
repnz
mov
stc
or
inc
inc
movsl
test
pop
movsl
xchg
or
or
jbe
outsl
mov
arpl
adc
add
stos
fildll
or
xchg
push
cmpsl
dec
push
sahf
stc
fbld
jnp
fdivl
push
jns
popf
mov
push
aam
fdivrs
in
leave
fisttpl
mov
enter
pop
pop
pop
mov
ds
test
cli
dec
push
mov
cld
or
das
js
js
mov
jns
mov
bound
mov
jg,pn
int3
push
dec
divb
mov
shrb
int3
xlat
leave
adc
push
clc
cmp
and
roll
inc
icebp
stos
lcall
push
movsb
sub
cmp
arpl
adc
loope
inc
mov
pop
scas
int
in
jno
sbb
es
std
js
mov
and
fisubl
test
ret
pusha
or
sub
cmpsl
dec
and
mov
push
push
jp
mov
jge
test
jp
dec
lret
jne
mov
mov
xchg
movsb
fidivrl
ljmp
pusha
push
cwtl
clc
loop
push
or
lahf
in
push
adc
inc
push
fsubl
xchg
shlb
dec
cmp
test
dec
mov
movsb
dec
pop
dec
xor
adc
fisubl
adc
faddl
setae
pop
pusha
or
jl
mov
imul
stos
xchg
ficompl
jbe
adc
add
fs
push
insl
inc
mov
stc
nop
lods
sub
cmp
cmpsl
addl
cmp
or
pop
jle
cmp
sbb
imul
or
loopne
pop
in
adc
xlat
jo
sub
xlat
ret
dec
test
xor
and
xor
mov
ja
push
jg
pop
dec
cmovbe
xlat
jne
test
in
mul
fwait
enter
add
icebp
icebp
push
mov
mov
jecxz
negb
mov
lahf
xchg
in
lret
push
fildl
push
push
dec
cltd
xor
cltd
mov
and
add
push
popf
daa
out
pop
jle
mov
ficompl
popf
xor
iret
mov
mov
sbb
fs
fwait
add
pop
xchg
rcrl
and
jns
cs
outsb
pop
mov
xor
loope
push
cld
jp
add
pop
call
mov
shlb
xor
xchg
outsl
mov
shll
popa
inc
cmp
fldt
push
or
in
sub
lea
std
mov
push
out
mov
mov
cmp
fisubrl
mov
cltd
pop
mov
int
xchg
fistl
outsl
pop
mov
je
pop
jns
fldt
and
ja
push
sub
xor
sub
in
add
in
dec
cmpsb
jno
mov
aam
out
mov
inc
sub
in
pop
ret
jne
jmp
and
lea
fldenv
aas
shrb
dec
cmp
popf
je
push
outsl
sub
dec
xrelease
xchg
sbb
mov
mov
lea
shrl
dec
pmulhw
mov
sbb
and
dec
popl
mov
sbb
lahf
stos
push
mov
mov
out
std
cmp
jle
das
and
jae
lret
xor
mov
pop
bnd
pop
mov
ret
loopne
mov
dec
jne
inc
push
jle
cmc
int
mov
insl
cmp
in
jne
pop
fstpt
dec
fs
cwtl
sbb
mov
dec
jne
andb
sbb
jb
int
mov
out
mov
jb
rorb
fiaddl
push
jecxz
dec
rorl
dec
rorl
cmp
inc
mov
movsb
loope
mov
pop
jnp
test
lcall
repnz
pop
ret
imul
xor
fiadds
out
shr
mov
inc
push
lea
adc
dec
cmp
push
in
jmp
sbb
xchg
or
rcr
add
sahf
mov
push
or
sub
sbb
pop
cmp
loope
fildll
mov
hlt
sbb
sbb
push
jecxz
js
adc
add
out
cmc
xchg
ja
rorb
dec
jmp
lock
sbb
pop
sbb
sub
lret
add
sub
lret
je
aaa
outsb
sti
cmc
outsl
mov
add
jg
mov
and
cmpsb
rorl
addr16
movsl
int
mov
out
ss
jge
enter
cmp
adc
pop
jnp
popf
ret
in
pop
mov
jne
xchg
mov
push
fnsave
inc
popa
cmpsl
jae
cmc
test
xchg
dec
adcl
xor
add
mov
imul
idivb
popa
sub
mov
mov
ds
mov
jnp
adc
cmpsb
sub
dec
lret
xor
lcall
into
ret
sbb
lcall
inc
test
mov
inc
dec
adc
popf
insb
push
mov
ret
inc
xchg
add
outsb
mov
lea
cmp
pop
fdiv
inc
call
mov
sbb
addr16
rcll
pop
pop
sti
mov
add
hlt
mov
mov
fcoms
add
xor
cmp
idivl
mov
daa
lret
push
xchg
ds
test
adc
adcl
mov
sub
cmpsb
ds
insl
cmpsb
pusha
inc
es
cmpsl
cld
push
xor
into
mov
mov
cmp
repnz
inc
and
lret
out
sub
ret
std
cltd
mov
bndldx
mov
xor
push
inc
mov
insb
or
hlt
sub
cmp
xlat
jnp
dec
adc
in
sub
jg
stc
xor
pop
repz
add
ljmp
pop
pushf
pop
mov
xchg
sbb
mov
ret
or
bound
add
idivl
jl
outsl
cmp
push
lahf
sub
dec
add
loope
insb
push
les
jns
cs
mov
xor
mov
sub
jmp
dec
sub
xchg
pop
jbe
add
pop
push
mov
cmp
mov
ror
or
repz
outsl
add
mov
inc
arpl
mov
sbb
aam
or
fsubrs
pop
bound
mov
or
sub
stos
dec
push
jnp
testb
movsb
push
dec
mov
leave
les
jbe
and
lcall
mov
lret
cmpsl
gs
inc
jae
rcll
pop
jl
iret
outsb
or
mov
xchg
push
insb
nop
xchg
and
lahf
jg
leave
outsl
cld
outsb
mov
cs
rcrb
gs
dec
push
imul
rorb
push
pushf
jb
mov
in
push
repnz
rorl
jne
mov
hlt
paddd
je
add
nop
test
pop
cmpsb
or
leave
sub
push
in
push
fmull
inc
daa
mov
or
inc
push
lods
push
ror
sbb
mov
fidivl
pushf
sbb
scas
cmc
mov
jg
or
arpl
cmc
sub
ljmp
add
js
cmp
mov
inc
mov
inc
movsb
lret
cli
sti
lret
ja
push
mov
aaa
pop
fs
mov
add
inc
jbe
faddp
je
fmuls
es
lods
push
shlb
nop
jl
outsb
mov
les
xor
cmpsb
out
xor
mov
add
dec
paddw
sub
test
push
idiv
inc
cmp
fwait
jns
dec
push
rclb
xchg
mov
ja
cmpsl
push
mov
add
sar
xlat
add
ret
rorb
inc
mov
mov
xchg
sbb
ror
sub
repnz
cmp
jno
jb
scas
adc
in
jge
mov
xchg
mov
repnz
dec
js
mov
mov
mov
aaa
dec
adc
imulb
dec
or
adc
movsb
fidivl
mov
mov
ds
iret
xchg
enter
mov
jmp
sbb
and
and
xor
pop
repnz
jp
ret
xchg
fnstcw
mov
push
cld
shlb
subb
cmp
dec
cmp
push
pushf
xchg
push
ja
add
mov
adc
mov
xchg
mov
in
sarl
movsl
addb
jmp
aaa
inc
jp
pop
stc
mov
insl
test
sbb
inc
gs
hlt
push
pop
dec
sarl
push
or
cmp
mov
lea
and
pop
sbb
xor
data16
jl
mov
sub
jl
rclb
cli
pop
pop
adc
dec
add
js
lods
stc
mov
and
jmp
xor
jo
xchg
orl
into
push
sbb
lahf
jle
cmpsb
cmp
and
rcl
jle
sbb
mov
ror
jg
xchg
sbb
stos
mov
mov
pusha
loopne
popa
jns
inc
js
mov
adc
int
notl
call
das
xchg
int
push
iret
pop
es
loop
xchg
sub
cmc
mov
bound
push
dec
cmp
or
mov
mov
fsub
aaa
mov
adc
and
cmp
and
mov
pop
iret
out
pusha
push
mov
xchg
push
fimuls
enter
pop
ret
lahf
xchg
fstpl
jae
ret
xchg
leave
sbb
pop
fisubrl
cwtl
loopne
mov
cltd
loopne
cmp
cltd
loopne
xor
movsb
mov
push
push
dec
pusha
daa
and
and
cmc
cld
dec
mov
gs
and
jo
cltd
inc
mov
xlat
hlt
cmp
insl
mov
jae
dec
scas
xchg
xchg
jns
fdivrs
pop
inc
and
stos
dec
cld
and
dec
mov
jp
cmp
bound
mov
inc
or
xor
out
test
xchg
sub
add
lcall
mov
fcmovb
mov
leave
mov
dec
jo
mov
pop
push
pusha
push
mov
or
inc
scas
imul
sub
xchg
push
daa
and
mov
out
incb
leave
ljmp
sbb
push
mov
sbb
je
sub
or
in
mov
mov
dec
cltd
xchg
and
mov
adc
inc
sub
mov
push
mov
data16
repz
mov
push
cmp
cmp
dec
jmp
or
aas
nop
jg
scas
xor
inc
popl
pusha
cmp
aad
es
and
or
adc
xchg
xchg
sbb
inc
cmp
ja
test
ror
out
cmpsl
mov
es
sub
ret
push
sub
imul
jno
arpl
inc
cmpsb
rcl
adc
mov
pop
sti
mov
push
lret
mov
lret
add
addr16
nop
and
mov
test
lods
leave
cmp
adc
dec
mov
andl
scas
dec
test
inc
es
fwait
loope
pop
rcrb
add
or
inc
jo
jle
movsb
cmpsl
adc
movsl
adc
push
stos
lcall
and
in
mov
insb
mov
jecxz
jae
cwtl
outsb
and
rcrl
push
lahf
xor
pop
pop
inc
fistpl
lods
sbb
inc
test
cltd
in
sbb
cmpsb
std
andl
mov
push
cltd
push
adc
or
cmp
outsl
loop
stos
pop
xchg
adc
inc
mov
icebp
mov
inc
das
ret
iret
add
mov
es
popf
mov
mov
popf
xor
mov
inc
cmp
or
cwtl
push
in
mov
es
adc
jmp
push
popa
xor
int
popa
mov
fs
push
xor
loop
sub
cltd
loopne
clc
jne
lcall
jp
loopne
js
rcrb
or
xor
scas
add
dec
cltd
sti
push
xor
push
repz
mov
adc
out
push
pop
je,pn
pop
mov
adc
inc
sti
xchg
dec
imul
inc
xorb
cli
xor
aaa
inc
push
mov
adc
fs
repnz
fcmovbe
iret
lret
stos
mov
leave
out
insb
jmp
jmp
jb,pn
pop
popf
ficoml
call
out
xor
int3
test
in
iret
mov
inc
jecxz
stc
insb
in
fwait
inc
cmp
adc
mov
fs
movsl
push
test
movsb
pop
push
sti
or
jg
pop
jecxz
mov
scas
xorl
xlat
repnz
cmp
pusha
jle
jmp
mov
cmp
pop
push
popa
adc
adc
lret
enter
outsl
shr
popa
stos
jmp
lods
and
fcoms
add
xchg
stos
xor
decl
push
xchg
add
lea
push
es
fld
out
stc
mov
cmp
xor
sbb
imul
pop
cli
std
mov
push
movsb
frstor
fmuls
xchg
jno
jne
and
xchg
sub
jp
pop
mov
jbe
cmp
das
lahf
mov
jno
sbb
sbb
fmull
inc
adc
in
testb
cltd
nop
ds
push
push
ficompl
add
jbe
lods
mov
adc
out
sub
int3
jmp
sub
outsl
add
stos
jp
pusha
inc
hlt
test
jns
inc
stc
xor
jbe
insl
rolb
fidivl
imul
scas
push
or
test
repz
xchg
inc
pop
scas
xor
cmp
emms
dec
jno
xor
loop
xchg
loopne
sti
jg
lcall
cmp
pop
jg
shr
jb
icebp
sbb
sar
test
sbb
scas
js
fcomps
cmp
inc
dec
pop
mov
bound
or
xchg
mov
mov
daa
sbb
pop
jg
dec
sarl
fbld
push
fisttps
scas
in
subb
sbb
add
ret
cmp
stos
inc
lock
xor
xchg
jo
xchg
ljmp
and
test
fcoms
cmp
xchg
pushf
mov
inc
aaa
and
pop
mov
call
adc
scas
add
std
cs
popa
xchg
repnz
mov
lahf
fidivrs
adc
push
aas
orl
push
jbe
xchg
cltd
hlt
pop
add
shl
lods
push
ljmp
cwtl
xchg
inc
xchg
jae
loope
push
sbb
jnp
jg
outsl
sahf
jg
xchg
mov
ds
daa
mov
ja
insl
mov
push
adc
pushf
dec
mov
xor
mov
imul
dec
xchg
call
xchg
xchg
mov
push
insb
mov
in
icebp
jge
inc
jns
ja
pop
xor
sub
adc
dec
adc
iret
lret
rcrb
xor
push
fwait
and
xor
popf
xor
or
rcrb
in
push
cmp
dec
sub
ret
or
jbe
jl
and
jp
cmp
push
dec
aam
into
es
dec
in
repnz
fmuls
mov
or
cmp
mov
mov
fnstsw
sti
or
mov
ljmp
fmull
lods
out
mov
icebp
nop
mul
pusha
and
lret
shl
lcall
outsb
pop
ror
pusha
arpl
lock
sub
jns
pop
dec
js
mov
adc
mov
and
out
iret
in
dec
loope
dec
clc
je
in
sti
jne
mov
dec
hlt
mov
aaa
mov
ja
enter
loop
xchg
popf
or
popa
push
pop
aas
pop
mov
iret
jne
cmp
leave
dec
js
and
mov
mov
mov
data16
mov
cmp
adc
jmp
fidivrs
idiv
jne
or
inc
pop
cltd
test
jne
sarb
cmp
pcmpgtw
shlb
loope
clc
imul
cwtl
mov
jae
hlt
loope
mov
push
lea
pop
push
and
push
dec
or
xchg
shll
dec
dec
mov
add
pushf
addr16
or
loop
push
sub
push
sarl
lcall
fildl
dec
rcrl
xchg
xchg
lret
cwtl
rcrl
inc
inc
sub
mov
sub
cmp
scas
sub
imul
je
rorl
push
js
movsl
stc
xor
call
scas
or
push
cmp
dec
and
je
out
push
gs
insb
test
xorl
xchg
aaa
adc
les
xchg
xchg
cltd
ret
jns
repz
push
cld
aad
sub
es
pop
clc
xchg
outsb
rclb
jle
aad
pop
clc
pop
bound
movsb
dec
fdiv
jb
mov
jge
subb
or
js
mov
xchg
sti
or
add
pushf
and
pop
imul
sub
dec
or
pop
mov
mov
xor
testl
in
pop
mov
cmp
test
push
xor
shl
lea
jne
lret
lret
and
inc
fnstenv
mov
iret
mov
jmp
dec
out
mov
sub
in
push
sub
sub
loope
fwait
jo
xor
mov
jg
push
mov
arpl
repz
pop
mov
ret
imul
fiadds
fbld
scas
xor
addr16
push
arpl
adc
cmp
or
nop
test
daa
pop
add
add
rcll
jge
leave
mov
fiaddl
into
aad
inc
sbb
pop
xchg
push
loopne
mov
data16
lods
mov
aad
sbb
in
sub
pop
dec
adc
sub
setb
jne
inc
jae
mov
test
jns
jo
cmp
shlb
add
scas
popf
into
out
mov
jns
jbe
fxch
mov
aad
sar
pop
pop
jmp
mov
sahf
test
jl
outsb
into
je
out
fdivrs
mov
inc
repz
mov
xchg
adc
outsl
sahf
decb
cmp
push
or
jecxz
push
xchg
inc
jge
movsl
das
and
jl
jae
jnp
daa
jno
pop
cs
sub
xchg
mov
push
mov
mov
int
into
movsb
pusha
add
sub
or
pop
cmpsl
out
cld
mov
pop
adc
and
cs
pop
mov
std
ja
iret
sub
xlat
fdivs
push
int3
pop
outsl
ss
mov
out
sbb
in
add
iret
and
ja
mov
shl
mov
xor
xor
sbb
das
stos
add
icebp
pop
inc
pusha
pop
test
pop
fnsave
sub
enter
rcl
cmp
inc
in
mov
and
cmp
insb
xchg
mov
adcb
push
and
cmp
cmp
sti
pusha
sub
lahf
clc
call
mov
mov
jae
mov
lcall
fs
mov
outsl
data16
add
iret
and
loopne
sub
push
in
push
cs
mov
sub
xor
sbb
sbb
ljmp
push
int3
imul
nop
pop
into
jbe
push
inc
insb
insb
adcb
repz
incl
cmp
adc
inc
popl
jnp
mov
jae
mov
icebp
jo
popf
pop
pop
pop
or
sbb
clc
push
shl
cwtl
and
fstp
aam
mov
add
xchg
cwtl
or
jo
sbb
push
push
pop
outsl
xchg
sbb
inc
call
rcrb
scas
cmpsw
jnp
mov
movsb
add
pop
xor
jecxz
es
adc
sub
sub
roll
jno
pop
daa
mov
jnp
mov
mov
sub
adc
and
cmp
jne
daa
stos
cmp
xor
addl
mov
fisubl
repnz
outsl
push
int
lahf
xchg
pop
fcomi
aam
adc
mov
sbb
shlb
jmp
mov
stos
sti
sbb
pop
push
imul
les
daa
icebp
jmp
sbb
int3
mov
dec
lcall
les
add
push
cmpsb
aaa
pop
jle
gs
dec
xorl
inc
mov
cmp
lcall
jmp
push
repz
inc
or
ja
sub
xchg
push
bound
shrl
xor
sub
jmp
sub
das
hlt
pop
xor
bound
sbb
andb
pop
aaa
xchg
jno
pop
pop
add
cmpl
and
pop
cmp
push
mov
les
aas
inc
pushf
movsbl
lods
movsb
xchg
into
xchg
and
add
repz
push
push
cwtl
mov
leave
dec
or
lret
jle
dec
xchg
jo
inc
es
mov
rep
fmull
movsb
mov
add
and
sub
sub
int
push
out
jb
jp
inc
mov
shl
outsl
and
push
mov
mov
xchg
call
ret
pop
dec
shrb
jle
addr16
cmp
lcall
pop
repz
scas
repnz
sub
out
in
pop
pop
jns
pop
or
orb
sbb
aas
nop
cs
pop
cmp
dec
fcoml
cltd
aas
nop
inc
dec
lret
cmc
adc
flds
and
decl
inc
sti
test
arpl
cmpsl
sbb
mov
xchg
vmwrite
inc
sbb
rcll
jae
rcrl
sbbl
cmpsb
and
jp
xor
imul
inc
data16
dec
push
or
popa
push
ja,pn
test
mov
stc
pop
mov
ds
negb
pop
sub
loopne
mov
outsb
mov
aas
pop
outsl
lahf
int3
adc
cmpsb
pop
xor
xchg
aad
js
pushf
ja
and
sbb
scas
rol
or
aad
sub
inc
jo
dec
cwtl
cmp
add
das
adc
or
mov
addr16
mov
stc
andl
mov
lock
jl
out
push
mov
cld
fisubs
adc
push
mov
pop
movsb
enter
ja
or
cmp
cs
pop
lret
lcall
dec
push
lea
adc
cwtl
or
call
bound
pop
or
pusha
mov
aas
inc
push
ljmp
out
jns
pop
fldl
sub
and
add
jle
lret
cmp
fs
popa
or
pop
in
arpl
test
adc
and
xchg
jge
cs
std
push
cwtl
pop
xchg
xchg
ficompl
add
pop
and
mov
int
fldcw
in
jp
ret
leave
push
push
and
jae
lahf
test
shrl
or
push
test
stos
inc
inc
mov
push
push
mov
loopne
pop
stc
xchg
xor
lret
sbbl
and
subl
jno
mov
cli
js
jno
pop
cltd
dec
into
dec
xor
adc
push
insb
cmpl
push
jae
add
iret
out
mov
jno
pushf
inc
or
mov
mov
inc
dec
js
in
jb
xchg
push
loope
pop
push
and
sub
pop
inc
jne
cmp
push
xlat
or
gs
sbb
push
lcall
cmc
jbe
out
mov
push
add
sub
mov
mov
sbb
or
or
dec
mov
xor
addl
ret
inc
cmc
push
jae
loop
fdiv
jnp
mov
add
adc
daa
js
adc
pop
and
pop
call
lea
notl
and
cmp
push
sub
mov
sti
or
mov
cmpsl
sahf
mov
xlat
push
imulb
pop
dec
ss
dec
mov
int
aaa
ret
loopne
jo
cmpsb
xchg
nop
jle,pn
dec
stc
int
sbb
mov
lahf
or
add
repz
cmp
icebp
mov
lcall
or
andl
mov
sbb
aaa
hlt
pusha
shlb
loop
mov
lcall
sbb
lret
sub
mov
mov
sti
push
sbbb
pop
sbb
jns
cmp
pusha
push
push
xchg
cmovs
ja
mov
mov
mov
shlb
adc
test
add
push
lds
push
das
dec
push
scas
or
jl
push
and
jge
scas
mov
cmpsb
add
outsb
mov
sub
push
out
xor
cmp
mov
jb
dec
add
pop
sub
or
fistl
jp
add
xor
lea
mov
inc
xor
jne
int3
jo
es
adc
cmp
mov
xchg
jmp
adc
cs
push
movsb
int
sub
inc
fnsave
cs
dec
dec
lahf
pop
nop
sbb
jge
sbb
icebp
add
out
inc
imulb
in
sbb
icebp
bound
lcall
les
insb
and
add
inc
add
jb
mov
inc
pop
or
aad
ret
mov
inc
rcll
nop
sub
mov
pop
addr16
stos
pop
jle
sbb
les
jmp
aas
jl
add
aaa
jo
push
sbb
pop
inc
and
mov
cmp
stos
push
mov
clc
outsb
lods
sub
mov
scas
loopne
stc
pop
das
add
cmp
inc
popa
add
cmp
xor
sbb
cmp
out
rcrb
pop
lahf
or
aad
jmp
iret
add
outsl
sbb
repz
add
add
xchg
or
add
insl
jnp
sub
addr16
ss
lock
je
xor
loope
ud2
rcrb
lret
sub
xlat
lock
xchg
sub
cmp
adc
insb
imul
inc
xchg
fiadds
cs
iret
rorb
add
insb
jg
insl
push
pop
xchg
ficoms
push
mov
dec
jmp
pop
sub
cmp
or
mov
rorl
pop
jl
js
pop
jmp
or
dec
mov
aad
adc
push
nop
add
and
testb
jmp
xchg
ja
mov
adc
cmp
out
xchg
and
push
icebp
sub
in
sbb
add
shlb
xor
adc
sub
lds
in
repz
cmp
mov
dec
cmp
and
sarb
out
icebp
out
sub
push
cwtl
mov
dec
cmpb
stos
je
comiss
mov
clc
rcrb
sub
jmp
xor
push
ds
add
ljmp
and
mov
les
sti
scas
pop
and
aas
inc
push
lcall
mov
pop
test
adc
lcall
in
jle
mov
jl
xor
push
push
inc
popa
mov
pop
mov
ret
ja
js
fcoms
iret
subl
imul
cmp
and
mov
gs
sub
clc
push
push
mov
inc
or
xchg
lock
jnp
fcomip
cmp
shr
push
icebp
shll
test
flds
xor
int3
and
les
sbb
faddl
mull
add
daa
cmc
insl
inc
jno
cld
cmp
out
xchg
and
loope
jbe
sub
sbbb
iret
inc
and
sbb
loope
fisttps
mov
aad
push
mov
std
bnd
push
mov
mov
sub
stos
ljmp
test
in
data16
aas
insb
adc
push
rorl
push
std
push
adc
loop
in
lods
inc
rcrl
cld
cmp
or
sbb
dec
dec
loop
push
cltd
and
aaa
loopne
scas
mov
dec
pushf
jl
mov
insl
xlat
out
or
stc
jbe
jo
mov
call
ljmp
daa
cltd
test
or
push
xor
in
ret
xor
fldt
sub
out
aas
xor
xchg
mov
cmpsb
call
cmp
add
cmc
add
sbb
icebp
sub
loopne
pop
fldl
sbb
cli
insl
inc
sub
mov
jbe
test
jbe
rcrl
push
rorb
lret
mov
push
stos
inc
into
ud0
or
add
push
jle
xor
ja
movsb
jmp
mov
pop
je
add
mov
jae
push
add
dec
xlat
fmuls
sub
mov
aas
rcrl
jne
and
pop
lock
notb
add
cltd
push
std
adc
sbb
sub
sbb
mov
xchg
dec
loope
xchg
dec
scas
pop
movsl
cmp
lock
aas
sub
cmp
scas
and
std
sti
cmpsl
xchg
push
outsb
stos
sbb
dec
jo
mov
add
mov
std
pop
adc
xchg
mov
fndisi(8087
push
cmpsb
fsub
jge
fisubl
mov
sbb
ljmp
mov
adc
fisubs
mov
imul
ja
adcl
rorl
iret
mov
ret
shll
push
jno
sbb
out
fisubrs
cltd
cmpb
or
mov
sub
or
jns
test
jecxz
inc
xchg
repnz
call
rcll
out
or
jno
cltd
and
daa
ss
add
es
inc
repz
sub
pop
push
notb
cmp
inc
inc
js
cwtl
ret
mov
sbb
or
or
and
in
sbb
mov
sub
ljmp
jg
das
sbb
cmpsb
decl
jae
sub
icebp
and
lahf
iret
ret
pop
xlat
mov
nop
in
adc
lahf
lcall
imul
test
sbb
xchg
test
jle
pop
dec
or
ret
inc
lea
and
ret
cmp
pushf
or
mov
or
imul
rcrb
mov
push
jl
fsubrp
xor
cli
enter
insl
inc
ja
leave
pop
stc
inc
lock
aaa
mov
or
call
mov
fwait
popa
jg
addr16
xchg
mov
inc
mov
jne
dec
int3
cmc
push
lret
ret
sub
and
lea
lret
mov
divb
sbb
jl
pop
pop
mov
jp,pt
pop
out
sub
mov
add
push
gs
in
add
dec
cmc
cmp
mov
shll
or
pop
cld
addr16
in
fcoms
pop
mov
dec
fildl
dec
lea
daa
subb
clc
or
and
les
adc
loopne
push
add
and
mov
fimull
in
out
hlt
ret
or
xchg
cmp
lret
add
mov
add
jg
in
test
jmp
push
and
roll
mov
in
call
mov
jmp
xchg
in
gs
cmpsl
lods
mov
cmp
mov
push
inc
les
mov
xchg
jbe
mov
adc
mov
lea
fcmovb
cwtl
inc
mov
stc
jnp
les
cmp
hlt
or
rcrl
push
lds
fnstsw
lock
dec
mov
and
mov
mov
cmpsl
mov
cmp
add
pop
add
dec
xor
dec
addr16
jecxz
sbb
adc
cld
cltd
fistps
into
outsb
cmpsl
repz
orl
pushf
xchg
push
lret
inc
pop
fidivrl
dec
inc
inc
shlb
stc
adc
cmp
outsl
pop
lods
out
push
xchg
add
jo
xchg
xor
in
jp
xchg
cmpl
sub
into
push
mov
jg
push
out
inc
and
cmp
out
sbb
adc
or
sar
mov
in
repnz
jae
repnz
imul
xchg
std
mov
cs
pop
lea
rol
and
sub
mov
sti
fsubs
gs
cs
jle
mov
mov
mulb
xchg
adc
movsl
sbb
test
pop
xor
mov
ficompl
fnstenv
and
cltd
ficompl
jne
sub
cmp
loope
and
ja
jl
pop
ret
mov
mov
nop
pop
cltd
mov
filds
cmp
fimuls
push
adc
popl
out
sub
xor
lods
push
loop
imul
mov
scas
jp
push
mov
mov
pop
lods
adc
jmp
in
sbb
shr
in
lock
cmp
xor
repnz
pop
push
cmp
je
dec
test
shlb
xor
xor
jno
and
sbb
jmp
test
insb
jns
cmpsl
dec
xchg
imul
jae
imul
clc
loopne
mov
mov
push
repz
adc
test
push
dec
sti
xor
mov
outsl
loopne
jns
jmp
dec
in
pushf
lahf
pop
push
mov
push
aam
xchg
xor
in
stc
out
in
repnz
cmpl
or
inc
cmc
sub
push
mov
cmpsb
sbb
js
pop
bt
adc
sarb
xor
push
notb
notb
out
leave
xor
jnp
xlat
mov
mov
ffreep
jmp
dec
mov
fnsave
mov
loopne
inc
mov
push
jl
xlat
xchg
std
push
and
add
xor
lds
or
js
testb
lods
fisubrs
cmp
cwtl
sub
dec
fninit
sub
mov
inc
mov
movsb
es
dec
sub
push
add
arpl
jge
mov
movsl
push
mov
imul
sbbl
push
mov
loop
jns
into
xor
pop
rclb
fnstcw
test
sub
push
xchg
movsb
outsb
std
or
cmp
xor
mov
outsb
xchg
fucomp
nop
mov
push
ret
mov
xor
adc
mov
jg
scas
cmpsb
and
mov
shrl
sbb
dec
sub
pop
pop
mov
cmpb
mov
test
pop
inc
cs
adc
orl
add
cmc
testl
enter
iret
xor
add
inc
adc
arpl
and
in
sbb
sub
imull
cmp
lock
pop
dec
push
mov
xor
cmp
in
sub
push
insl
push
dec
mov
jb
mov
nop
jg
mov
xor
dec
add
dec
push
loope
fdivrl
imul
loopne
aam
or
imul
cmp
mov
out
and
inc
xor
stc
gs
into
xor
jle
rolb
mov
jle
adc
incb
aas
cmp
icebp
mov
and
mov
popf
dec
inc
subb
push
js
addr16
cmp
subb
jb
cmc
xchg
lds
mov
push
push
inc
xchg
jle
leave
test
adc
mov
mov
add
stos
jns
in
lea
and
mov
repnz
test
sbb
out
add
cld
pop
jb
fwait
lcall
icebp
cli
js
sub
push
decb
clc
lds
xor
arpl
sarl
mov
in
xor
pusha
cmp
lods
adc
and
and
imul
pop
out
add
sub
push
dec
lock
sbb
pop
or
mov
xor
pop
popf
push
sbb
adc
shll
push
cmp
test
or
pop
fwait
jl
add
and
inc
out
and
ud0
push
hlt
fwait
int3
cs
and
sub
mov
stos
push
sub
pop
mov
xchg
add
das
xchg
dec
mov
pop
mov
mov
mov
pop
push
mov
icebp
adc
sbb
icebp
loop
mov
sbb
xor
push
into
test
stos
jg
es
aas
into
js
pop
clc
adc
pop
sbbl
inc
in
lds
divps
lret
or
jno
inc
imul
dec
sbb
test
or
sbbb
mov
xchg
and
jns
and
mov
push
xor
jl
jb
incb
jb
pop
shrb
shrb
and
sub
and
in
jg
cld
out
ja
adc
jmp
push
jnp
repz
cmp
or
inc
add
xor
pop
jbe
xchg
inc
sub
jg
js
fisttps
filds
stos
test
es
outsl
iret
addr16
mov
add
push
mov
out
xor
mov
jnp
adcb
mov
sbb
aad
imul
mov
jns
scas
iret
pushf
dec
rclb
movsl
mov
cs
mov
dec
sbb
xchg
cmpsl
in
mov
loope
xor
enter
loope
jae
leave
inc
aaa
jg
add
addr16
push
and
xchg
and
in
jmp
sub
jno
stos
out
mov
test
leave
jb
adc
pop
pop
outsl
daa
add
and
mov
hlt
xchg
data16
loopne
add
sub
or
jno
mov
dec
and
xchg
ljmp
xchg
repnz
pop
sbb
repz
cld
mov
adc
add
xlat
outsb
jne
test
push
aad
fnstcw
adc
jns
and
and
adc
sbb
stos
mov
or
lock
and
xchg
in
mov
ja
fxsave
rol
fprem1
sbb
add
cli
popf
mov
dec
fsqrt
push
pop
cld
sbb
test
and
dec
inc
fsubl
push
out
mov
mov
movsb
add
test
popf
xor
jle
js
fldl
dec
push
cmp
pop
hlt
mov
xor
push
dec
insb
mov
add
cs
cld
into
out
ljmp
out
sub
ljmp
mov
scas
push
dec
scas
dec
xor
popf
jnp
sub
js
push
outsl
cltd
push
inc
xchg
xchg
mov
gs
test
mov
mov
cmp
push
mov
xchg
push
dec
jg
rcrb
and
stc
in
es
mov
scas
repz
add
mulb
nop
jns
push
and
sbb
idiv
xchg
popa
push
lahf
and
pop
cmpsb
int3
ds
xlat
bswap
dec
inc
lcall
dec
jmp
leave
dec
scas
ret
imul
dec
test
in
lret
xor
arpl
repz
mov
jnp
or
rcr
and
fs
adc
push
lcall
jmp
jge
rorl
jo
js
pop
mulb
out
dec
mov
sub
test
lods
fwait
sub
add
add
jg
cmp
daa
and
xor
into
dec
jl
int
and
fsub
int3
out
push
mov
enter
outsl
mov
cwtl
int
push
adc
inc
shrb
mov
pop
and
pop
fsubs
lock
daa
loopne
dec
lods
out
fistl
js
jge
and
popf
pop
mov
mov
cmp
mov
dec
addl
rcl
in
mov
lds
pusha
scas
out
push
xchg
movsl
sbbb
ljmp
jl
in
push
std
sti
add
pop
jmp
inc
jbe
cld
sti
sub
es
cmp
flds
inc
adc
sbb
mov
js
xor
lahf
sbb
jnp
xchg
pop
js
cli
cmpsl
jo
in
inc
and
jl
jb
lock
or
scas
lret
enter
mov
fwait
add
mov
mov
test
and
daa
xor
das
lahf
call
pop
vminss
jl
jl
mov
sub
push
sarb
movb
fnstcw
push
push
loopne
adc
cmp
cwtl
test
add
xor
pop
cli
cwtl
inc
xchg
sti
jecxz
shlb
aad
test
leave
adc
in
push
scas
fs
mov
cmc
cmp
cs
jns
icebp
add
cmpsb
lock
ret
inc
mov
es
sub
jne
add
test
imul
lret
pshufw
iret
scas
dec
inc
mov
repz
shl
mov
mov
adcb
xchg
js
jb
out
mov
inc
test
dec
stos
jmp
push
pop
mov
cmp
clc
and
pop
mov
int
ja
mov
imul
xorb
lret
xchg
push
aad
jp
dec
test
or
subb
hlt
addr16
mov
inc
inc
push
loope
and
test
push
js
shl
les
test
dec
jbe
lods
jge
iret
ljmp
cmp
mov
aam
popa
pop
xor
inc
mov
shll
negl
lret
outsl
jle
movsb
push
lret
mov
xlat
jmp
push
or
dec
sub
ja
addr16
or
mov
js,pt
testl
xor
pop
add
dec
mov
negl
jmp
jo
loopne
adc
jo
insb
in
jmp
pop
lahf
xor
sti
testb
loope
mov
loopne
inc
mov
mov
idivb
mov
ret
xchg
and
jns
jnp
aad
xchg
cwtl
push
dec
outsb
pop
pop
cwtl
mov
loop
pop
loope
fstpt
fwait
inc
cmpl
pop
mov
inc
sbb
jns
mov
pushf
mov
ja
mov
mov
xchg
xor
cmpsb
popf
stc
outsb
pop
or
jge
jnp
jl
or
xor
sbb
fdivrs
jecxz
and
fldcw
fnsave
mov
enter
shlb
loopne
test
mov
in
fisttpl
jns
mov
popf
mov
test
add
pop
fcmovnb
xchg
and
jl
ret
xor
dec
inc
jb
fmull
xchg
mov
jnp
inc
shlb
jecxz
mov
imul
sbb
pop
pop
sbb
inc
xchg
jle
mov
repz
cmp
fsts
hlt
popa
outsl
nop
pop
adc
int3
mov
pusha
pop
or
push
repnz
mov
dec
and
xchg
dec
inc
dec
arpl
cmp
cmp
fnstenv
sub
push
loop
in
mov
mov
jo
and
xor
jns
shlb
repz
fdivl
cmp
bound
mov
cmp
pop
mov
dec
pushf
fisubs
lahf
mov
es
sub
mov
mov
rcr
cmp
xor
xchg
lods
dec
sbb
pop
sbb
mov
pop
inc
je
aas
push
adc
in
repnz
xchg
sbb
push
push
pop
jnp
stc
adc
sbb
mov
xor
mov
mov
and
lcall
cmp
scas
cmpb
pop
cmpsb
in
scas
dec
dec
aaa
sbb
xchg
mov
xchg
dec
sub
lods
jne
popf
mov
hlt
inc
dec
cmp
imul
or
icebp
imul
push
fwait
xor
or
int
roll
dec
jno
jbe
lahf
adc
xor
jnp
sub
sbb
or
sbb
dec
mov
loop
aas
xor
gs
push
jle
mov
in
cli
sub
mov
or
sub
xor
adc
adc
inc
cltd
sbbb
mov
mov
dec
insb
call
dec
add
repz
pop
ljmp
adc
insb
into
or
test
popf
outsl
push
bound
sbb
inc
jno
push
in
inc
lods
ret
cmp
adcl
dec
mov
mov
pop
inc
mov
cmpsl
jnp
dec
shr
xor
ljmp
sti
lea
pop
add
ljmp
nop
sub
mov
test
and
pop
push
sub
leave
or
das
jmp
add
test
in
dec
mov
lods
lds
rol
xchg
and
xor
or
pop
shrb
gs
sbb
inc
or
je
rolb
push
into
xchg
addl
cmp
subl
fcmovb
add
fwait
and
arpl
push
push
test
negb
mov
cs
and
enter
repz
sub
dec
fwait
test
xchg
cmpsb
call
int
mov
fnsave
xchg
cwtl
ljmp
sbb
rclb
neg
jle
adc
mov
xlat
mov
mov
xor
cmpsb
shl
test
test
imul
sub
push
fnstsw
out
sub
loop
imul
or
shrb
les
fsubs
pop
pop
cmc
sbb
std
leave
cmpsl
pusha
cmpsl
cmpsl
ss
mov
lret
mov
jmp
push
es
mov
loopne
and
cmpsl
ret
jge
sbb
in
lock
ljmp
cmc
push
mov
insl
insb
jns
adc
movsb
pop
xchg
lahf
lahf
cwtl
into
clc
lea
push
rorl
lcall
daa
or
popf
mov
loop
mov
repz
cld
lret
in
test
jg
mov
js
sbb
cmp
xchg
jns
cs
jb
dec
pop
fcmovnb
dec
lds
lock
popa
fistl
cwtl
in
orb
sti
or
sub
sub
lods
stos
lcall
out
adc
inc
shrl
imul
loopne
and
mov
xchg
and
jmp
negb
andb
jmp
pop
and
mov
mov
pop
mov
mov
les
ljmp
pop
jl
push
mov
jnp
insl
imul
mov
mov
shlb
cmp
hlt
jae
pusha
mov
xchg
cmp
pop
icebp
fwait
movsl
push
repnz
loope
jle
lods
add
sub
scas
and
lcall
push
std
mov
in
jle
xor
mov
xchg
inc
xchg
lret
shlb
ljmp
mov
pop
or
in
cmpsl
icebp
lahf
test
test
xchg
les
loop
test
data16
lods
hlt
pusha
push
mov
xor
pop
sbb
jp
daa
sti
or
jo
cmp
lds
cmpsb
cwtl
enter
push
repnz
mov
xchg
xor
icebp
rcll
movsl
mov
test
pop
test
jbe
push
stos
ss
sbb
dec
lods
push
lahf
and
cmp
push
jle
push
imul
sub
jbe
and
mov
leave
hlt
xchg
cltd
roll
adc
inc
out
xor
arpl
icebp
mov
push
dec
icebp
orb
and
popf
push
pusha
stos
mov
add
stc
popf
adc
sub
jecxz
out
leave
add
fildll
adc
pop
clc
hlt
ss
testl
repz
cltd
cmpsb
inc
mov
pop
xor
mov
sub
mov
daa
js
es
sbb
inc
push
jmp
mov
jae
mov
jp
ds
mov
and
lock
insb
jb
ds
add
push
dec
leave
jb
inc
rcrl
cmpsl
scas
add
mov
xor
or
push
arpl
negl
push
in
adc
dec
lcall
in
imul
lods
loopne
in
push
push
movsl
push
or
sbb
adcb
orl
xchg
jnp
cmp
iret
jp
rcrb
ss
adc
and
insl
adc
sub
test
or
push
mov
pusha
cs
xor
fcompl
cld
aam
ljmp
mov
test
mov
adc
pop
adc
cmp
sub
pusha
stc
ljmp
hlt
sbb
and
out
jecxz
adc
nop
push
push
int3
lea
fsubs
cmp
xor
xlat
mov
fistpl
lcall
fidivrl
leave
mov
jns
repnz
and
or
cmp
imul
ret
cltd
mov
and
pop
xor
dec
dec
add
mov
sub
ds
lret
add
push
mov
outsl
lods
lock
or
ret
mov
pop
inc
mov
pop
cmpsl
addb
mov
dec
mov
out
inc
mov
inc
cmpsb
in
popf
jns
jno
xor
jl
pop
sbb
inc
std
xlat
pop
adc
nop
inc
add
cmc
fldenv
jecxz
mov
sarl
pop
xchg
bnd
sub
test
js
aad
jecxz
cmp
jl
lds
inc
sub
pop
mov
adcl
jle
inc
neg
movsb
mov
and
aad
mov
mov
add
cmp
sbb
push
test
adc
and
fistl
pop
cmp
or
nop
sti
adc
add
loop
gs
nop
or
call
sbb
sti
cmp
stos
ret
cmp
or
sti
in
pop
xor
popl
loop
int
rcrb
dec
ja
cwtl
mov
mov
jne
sbb
jl
mov
jle
push
xchg
movl
jge
sub
insl
sbb
mov
mov
cmc
adc
std
xor
les
cmp
and
cwtl
sbb
jge
shlb
and
test
sub
mov
sbb
sbb
mov
lods
jmp
loope
loope
insb
xchg
sbb
into
sub
push
push
pop
xchg
push
movsb
inc
inc
xor
aam
inc
fimull
hlt
cmpsb
fmull
iret
adc
aam
sbb
cmpsb
jmp
fisttpl
pop
sbbl
pop
pop
add
or
subb
sub
cli
negb
insb
push
daa
sbb
stos
or
stos
inc
sub
icebp
pop
sbb
pop
aaa
movsl
inc
mov
pop
sub
aas
test
inc
cmpsl
xchg
fwait
lods
movsb
push
mov
int
outsb
mov
lods
into
xchg
iret
pop
ljmp
mov
mov
iret
icebp
test
movsb
stos
cmp
xlat
fs
pop
adcl
jno
or
dec
fmuls
daa
les
jg
imul
fcomps
rorb
inc
add
rcl
jge
sub
lret
insl
test
cmpsb
lret
bound
xchg
pusha
mov
add
xchg
lret
xorl
jns
push
and
sub
mov
in
dec
fwait
repz
adc
mov
sarb
add
call
jmp
xchg
jl
cmp
pop
jae
imul
test
mov
mov
dec
imulb
mov
pop
jp
arpl
shlw
pusha
pop
push
jge
cmpsb
mov
in
adc
jns
dec
pop
jle
add
jg
dec
mov
stc
mov
addr16
fisubrs
je
stos
cmp
jmp
dec
sub
imul
test
movsl
cmp
in
lock
mov
add
aad
scas
aam
mov
cld
mov
mov
cli
fcoml
cmpsb
addl
lds
jns
inc
dec
sub
sub
adc
test
sarb
in
cs
pop
std
nop
mov
adc
and
adc
xchg
mov
mov
sbb
sub
jb
sbb
cmpsl
lods
in
inc
movsl
xor
or
xchg
sbb
insl
or
dec
movsb
xor
dec
repz
fstps
into
mov
sub
sbb
xor
jecxz
xor
ret
cld
pop
lock
cmp
popa
popf
mov
scas
ficomps
aam
out
jmp
lcall
and
xor
cli
sbb
jp
cmp
mull
out
divl
cmpsl
and
lds
xchg
loop
dec
pop
jbe
xor
mov
cwtl
push
popa
test
adc
jecxz
push
sub
cmp
cmp
dec
aam
inc
cmpb
or
cltd
cli
inc
ret
pop
mov
lods
in
loope
push
stc
lods
negl
cmc
lods
daa
jns
test
hlt
loope
dec
dec
gs
imul
pop
xor
mov
adc
mov
xchg
out
mov
outsb
xor
mov
xchg
adc
inc
ds
cmpsb
mov
dec
mov
mov
xchg
je
rcll
mov
ss
out
mov
xor
mov
push
xchg
mov
out
mov
jo
or
call
ljmp
loope
decl
loope
cmp
loopne
out
les
pop
xor
and
stos
pop
fnstsw
inc
test
dec
jb
rorl
mov
dec
lahf
ret
pop
and
iret
pop
arpl
adc
jb
and
mov
sti
pop
adc
cmpsb
scas
sbb
leave
out
pop
push
push
into
sub
mov
pop
mov
mov
ss
mov
in
sub
repz
jl
call
rclb
cltd
mov
mov
adc
push
orb
lods
clc
jne
xchg
jp
data16
dec
push
scas
and
mov
push
in
inc
dec
cwtl
xor
and
or
cmp
loope
call
pop
fcomi
aam
xor
jmp
xchg
cmp
call
ja
lret
or
jle
add
add
xchg
jns
jmp
loopne
enter
in
mov
jne
mov
xor
popf
or
dec
ss
xchg
out
stos
fwait
sbb
push
jp
daa
mov
xor
int
icebp
jmp
sbb
adc
test
push
ss
test
cmp
test
call
mov
je
out
push
lcall
in
dec
jmp
cmpsl
mov
test
shlb
cmp
loopne
mov
sbb
outsb
inc
gs
lret
and
mov
adc
pop
jmp
in
push
xor
addb
push
fisubs
pop
stos
mov
push
pusha
jb
mov
out
jb
daa
cmp
fnsave
filds
lcall
adc
fwait
dec
imul
lret
jne
jno
pop
cmc
dec
jle
add
enter
jp
jae
mov
mov
add
push
xchg
test
pop
loop
mov
shlb
jmp
fdivr
les
or
xchg
fisttpl
cmc
roll
mov
mov
mov
movsb
imul
xchg
sub
adc
mov
cmpsl
jle
in
ficompl
pop
ljmp
mov
mov
enter
mov
xchg
dec
nop
das
dec
mov
inc
sub
sarb
fnstcw
lcall
mov
add
sbb
add
lods
xor
orb
pop
push
and
mov
test
outsb
mov
mov
xchg
jne
adc
xchg
xchg
rcll
and
push
or
loop
mov
inc
mov
mov
lret
scas
push
xchg
adc
lcall
stos
adc
aam
add
mov
in
cs
xor
xchg
adc
outsl
mov
pop
das
aas
scas
and
pop
out
or
sub
cs
ss
mov
inc
scas
test
or
jno
mov
ja
jmp
shlb
mov
inc
xor
jecxz
scas
and
shll
enter
ds
add
push
loopne
sbb
aam
jp
aaa
xor
lods
imul
pusha
and
loope
sub
adc
dec
sub
pop
mov
push
ret
add
or
push
mov
mov
popa
test
inc
lea
inc
sbb
lret
fdiv
xor
ret
fsubl
jno
push
sub
test
add
out
call
ja
add
lock
mov
pop
popa
mov
mov
adc
dec
fnstcw
es
or
xor
push
aad
rclb
mov
jl
mov
xchg
enter
pop
pop
aas
pop
xor
shl
lods
lea
inc
lahf
iret
notb
xor
iret
rolb
fwait
fwait
hlt
sysret
mov
in
pop
mov
jbe
clc
cwtl
loope
out
cmp
arpl
in
mov
loop
or
xor
sbb
or
cmpsb
cli
mov
xor
or
cmc
movsb
jmp
push
inc
lods
jl
push
pushl
pop
mov
data16
push
push
xchg
sub
fists
cmp
sub
rcrb
add
aam
leave
xchg
add
dec
sahf
inc
jb
xor
sti
stos
fwait
test
sub
in
test
test
mov
leave
push
jno
adc
fs
cld
in
mov
int
mov
mov
pop
mov
popf
xchg
pusha
cmp
dec
or
scas
pop
ljmp
aaa
and
pop
adc
mul
or
and
xchg
sti
scas
push
sbb
jae
std
lock
dec
mov
aas
in
push
cmpsb
fs
int3
cltd
in
jmp
cmpl
push
or
jb
loopne
sti
ret
cmp
jne
sbb
add
dec
xor
lahf
cmp
mov
mov
stc
test
lret
inc
bound
das
xchg
mov
outsb
out
xchg
in
clc
shlb
int
lret
lret
cmp
es
leave
rorb
dec
xchg
jae
lcall
mov
call
pop
mov
imul
repz
inc
faddl
sub
jb
or
xor
cmp
jge
sub
lret
loope
ret
dec
dec
inc
test
pop
incl
int3
push
setp
iret
int3
dec
bound
es
xchg
movsl
xor
std
addr16
and
sbb
pop
mov
mov
roll
pop
mov
jmp
pop
sbb
push
call
mov
add
xlat
fistl
lcall
jmp
test
dec
test
or
mov
arpl
pop
cmp
pop
inc
cmp
sub
xor
adc
jge
or
dec
push
imul
dec
push
push
pushf
imul
outsl
adc
mov
cmp
stos
fcoml
xchg
mov
adc
ror
fdivrp
push
imul
popf
adc
xor
mov
add
or
movsb
or
fidivl
sbb
sahf
cltd
inc
je
cmpsl
push
decl
cwtl
inc
mov
loop
add
jae
cmp
xorl
or
mov
jae
xchg
jp
call
in
xor
xorl
dec
std
pushf
mov
repz
sbb
inc
jmp
or
or
leave
out
xchg
test
sbb
pop
xchg
loop
jb
jae
fwait
std
fiaddl
and
mov
mov
loopne
push
or
mov
cwtl
outsb
dec
xchg
in
fcompl
mov
xor
inc
xor
lahf
daa
shr
ficomps
test
and
out
push
cmc
pop
xchg
addb
pushf
sub
mov
data16
enter
or
arpl
adc
subb
loop
scas
lret
sbb
xor
aam
call
mov
lods
outsb
repz
or
cmpsb
jge
jbe
pop
jae
push
pop
adc
sbbb
sahf
mov
iret
lods
sbb
int
in
adc
mov
jb
pop
addr16
inc
data16
cmp
add
mov
data16
jg
xorl
add
cmp
cli
cld
sti
push
pop
xchg
push
lods
pop
xor
push
mov
push
mov
cmpsl
mov
bound
add
stos
add
jp
xchg
xor
push
repz
lock
ret
sbbb
movsb
push
jl
lods
movsb
icebp
cmpsb
mov
xor
out
or
fs
sbb
push
je
lahf
xor
mov
dec
test
rorb
fs
adc
xchg
or
mov
add
or
xsaveopt
ret
out
jg
xor
dec
in
dec
and
mov
inc
in
jns
and
bound
inc
fbstp
fs
push
movsl
mov
testb
into
mov
push
aas
scas
icebp
movl
cmpsb
adc
ficompl
push
or
sub
lock
subl
adc
mov
cmp
cmp
iret
or
enter
pop
fs
out
xchg
sti
adc
and
mov
xlat
jne
cmpsl
xchg
dec
sbb
dec
cmp
jmp
add
fcoms
les
xor
addr16
das
pop
int3
lods
add
pusha
sub
mov
nop
and
push
int3
aad
mov
stos
sahf
stos
ret
clc
lea
jno
xchg
push
xchg
ja
inc
dec
sbb
push
cmpsl
cli
pop
cmp
push
xchg
das
movsb
dec
shlb
jne
shl
jecxz
pop
popa
or
inc
mov
mov
orb
lcall
out
or
jge
jmp
and
test
xchg
add
das
fsubp
pop
or
in
cs
incl
test
aaa
pop
hlt
roll
and
aaa
in
cmp
jno
enter
xchg
xchg
lret
in
dec
les
pop
fiaddl
loopne
mov
pusha
xchg
cmp
leave
test
cmp
lahf
or
jne
cwtl
mov
lret
icebp
jno
cmp
xchg
xlat
jp
loope
or
icebp
adc
int
sub
push
lock
hlt
fwait
and
aas
mov
jecxz
mov
adc
dec
mov
jbe
imul
dec
add
popf
jmp
mov
push
sbb
data16
aaa
lcall
xchg
dec
or
mov
loope
fbld
bound
js
mov
insb
jb
sti
stos
fs
aad
popf
lea
mov
jae
aas
xlat
test
mov
scas
mov
imul
mov
xor
sub
cltd
mov
and
jl
mov
lcall
iret
mov
push
lahf
push
aas
notb
fistl
les
lret
pop
cs
lea
in
add
out
fldcw
fcmovu
and
or
add
inc
jecxz
icebp
adc
out
add
jbe
or
sub
xor
xchg
bound
cmp
push
fimuls
inc
mov
push
in
incb
push
rcll
test
dec
aam
inc
dec
aas
mov
mov
push
add
aas
pop
cmp
mov
aad
jnp
mov
dec
flds
xor
xor
pop
std
add
lea
jmp
sub
jne
ljmp
pop
or
or
push
stos
sub
push
xor
ret
in
push
pop
or
sbb
pop
push
pop
sub
daa
mov
push
outsb
jmp
and
adc
insl
or
dec
sbb
ljmp
cmp
pop
push
pop
mov
in
sub
bound
out
rcl
sarb
ss
adc
xchg
or
fldt
rorb
or
lcall
es
push
dec
mov
fwait
test
nop
dec
rcll
xchg
inc
push
out
loope
pop
push
lahf
fcomps
push
aam
mov
ficompl
jmp
mov
xlat
xor
test
dec
ret
mov
imul
sahf
cmpl
xchg
enter
dec
pop
cmp
inc
mov
and
and
fstpt
sbb
fs
push
adc
sbb
push
sub
nop
lcall
gs
hlt
jl
popa
lahf
mov
sbb
xchg
or
test
daa
add
push
mov
bound
test
jmp
sub
mov
sub
mov
out
ficoml
ret
pop
mov
and
xchg
mov
pop
sbb
scas
add
inc
dec
lret
jns
mov
sbb
mov
std
mov
xlat
jnp
sbb
out
sub
aas
in
cmp
dec
push
mov
mov
add
stos
std
rclb
xor
jb
or
jo
repnz
iret
fstl
sbbl
jg
xor
mov
mov
test
cmp
pop
cmp
sub
pminsw
out
push
cli
xchg
xor
xchg
or
out
jl
fstpl
pop
lods
cmp
mov
xchg
jmp
stos
aaa
loopne
and
out
mov
cmc
adc
divl
pusha
cmp
ss
outsl
pop
mov
cwtl
inc
cmc
inc
and
mov
pop
sub
cmp
leave
rorb
dec
jo
mov
test
cmp
and
jbe
aas
fs
mov
push
mov
xchg
sub
sti
pop
jb
dec
add
add
cld
cmp
or
shrb
sub
inc
push
mov
iret
in
aad
push
mov
in
loopne
fsub
leave
jp
aam
sbb
push
je
shlb
xor
insl
sub
xchg
clc
or
cmp
jae
out
in
and
mov
xchg
aad
mov
ret
xchg
cmc
push
pop
xchg
adc
inc
mov
sarb
clc
adcb
cmpsb
and
add
and
add
popf
cmp
cmp
lret
jl
jecxz
pop
pop
or
sbb
xlat
jecxz
mov
mov
jbe
pushf
int3
cmp
ss
cmp
xchg
in
pushf
dec
scas
lret
cmp
out
inc
call
dec
pushf
mov
add
in
push
scas
mov
push
cli
ss
jns
xor
dec
imul
movzbl
mov
popf
mov
jp
jno
mov
bound
lods
xlat
jae
sbbl
add
ds
lret
and
jge
ret
inc
ljmp
lcall
add
test
cld
shlb
sub
imul
adc
pop
cmpsl
dec
lock
and
iret
pushf
mov
pop
fisubl
clc
adcl
add
mov
das
out
imul
mov
ja
fwait
js
hlt
jo
stos
dec
test
dec
or
addr16
or
daa
pop
insl
mov
cmp
cmp
bt
in
mov
rcll
lret
dec
scas
rcrl
dec
bound
aaa
stos
adc
adc
pop
bound
pop
jge
loop
jns
dec
mov
sub
pop
push
adc
lret
pushf
ds
dec
xchg
loop
add
and
push
pop
push
sub
outsb
out
out
cmp
mov
or
cli
cli
dec
into
mov
cltd
fmull
or
and
jno
test
cmc
nop
aad
xchg
sub
cmpsb
out
ret
jmp
rorl
std
xchg
mov
cli
dec
std
pop
fsubs
fsubs
xchg
jp
mov
fdivl
std
ret
jb
test
and
xor
bound
into
dec
sbb
imul
adc
mov
ror
sub
sbb
fdivrl
out
xor
ljmp
sahf
lret
or
fs
push
add
jle
repnz
les
loopne
sbb
out
cmp
pop
test
jns
call
mov
mov
std
pop
aam
std
test
xor
fs
push
xor
mov
mov
push
cmp
insl
or
jecxz
inc
jg
mov
xchg
mov
scas
in
xor
cmp
push
xchg
and
loopne
shl
flds
or
dec
and
mov
push
sbb
pushf
inc
mov
pop
and
mov
cltd
add
xchg
jmp
cltd
stc
fnstsw
fld
or
pusha
in
jo
sbb
xchg
sahf
jge
in
scas
adc
popa
xchg
je
icebp
rcll
mov
mov
add
nop
mov
cmp
mov
repz
test
mov
paddsw
jns
hlt
push
lahf
jmp
movsl
jl
jne
pop
mov
push
add
inc
inc
push
dec
sbb
mov
xchg
mov
cld
jae
push
lock
mov
adc
or
ss
outsb
fsubr
stos
fists
inc
xchg
data16
andb
dec
ret
mov
push
dec
cli
push
pushf
popf
mov
sub
xor
loop
lods
fistl
mov
or
jl
or
hlt
sbb
cmp
js
mov
out
push
stc
xchg
or
mov
in
imul
push
notb
xor
pop
xchg
inc
into
ss
mov
nop
sbb
and
ja
dec
xor
inc
push
xchg
mov
mov
xor
or
mov
aas
adc
fisubrl
pop
mov
sarb
movsb
cmp
lds
adc
mov
sub
loop
adc
adc
stc
or
mov
xor
push
cwtl
in
lock
jge
adc
adc
cli
leave
dec
testb
inc
adc
fnstsw
mov
sub
dec
xlat
mov
and
lds
imull
sbb
xor
ret
add
cli
xor
flds
pop
cmpsb
js
bound
pop
stos
popa
clc
repnz
jl
pushf
and
cld
lret
daa
fdivrs
sar
mov
cmpsb
loopne
mov
shrl
aaa
adc
lahf
xchg
mov
in
xorl
subl
push
adc
cmc
syscall
dec
in
inc
lds
sti
xchg
xchg
nop
insl
sub
fistpl
test
lods
fstpl
andl
or
pop
jae
cmp
xor
cmp
es
stos
jne
pop
movsb
mov
mov
adc
pop
mov
lock
ss
xchg
push
jp
xor
sbb
andl
aaa
sbb
push
push
push
popa
push
sti
cli
dec
jl
dec
xor
movsl
lea
pop
sbb
out
mov
loop
rclb
inc
mov
push
es
push
lcall
lret
pop
lahf
jnp
stos
movl
xor
fdivrs
cmpb
xchg
xor
or
inc
sbb
fldl
jmp
push
jle
cwtl
mov
das
jo
and
cmp
cwtl
dec
rol
arpl
mov
rcrb
movsb
int
jl
mov
mov
cmp
rcr
push
mov
sahf
int
mov
inc
outsb
fadd
mov
nop
call
repnz
int
or
push
pushf
fstps
sub
mov
aas
dec
outsl
mov
sahf
clc
in
repnz
push
mov
imul
cmpsl
xchg
mov
out
std
add
out
pop
int3
and
xchg
sbb
mov
sub
es
mov
cmp
cli
add
ret
jle
stos
int
jb
inc
mov
jmp
xor
ficoml
aad
inc
pop
inc
mov
cmpsb
retw
sahf
int
stc
insl
dec
xchg
and
test
aas
call
pop
add
popf
outsl
add
sub
aam
add
fnstenv
sahf
adc
dec
xchg
add
xlat
mov
test
jg
sbb
mov
push
xchg
jg
jne
push
daa
inc
mov
inc
jno
dec
pop
push
sbb
icebp
not
add
mov
xchg
fldcw
in
lock
dec
cmp
je
loop
xor
add
repz
sahf
sbb
mov
add
dec
ffree
cmpsb
insb
lea
xchg
cmp
sti
test
insw
xchg
popa
insl
xchg
adc
daa
dec
mov
orl
ficoms
outsb
shlb
fisttps
repnz
out
pop
jg
pop
mov
lahf
cmp
int
icebp
push
test
loope
mov
ja
push
lods
cmp
xchg
out
pop
jnp
pop
into
push
add
stc
mov
in
cmp
mov
pop
scas
in
xor
ss
outsb
xchg
pop
xor
push
jae
or
jae
sbb
adc
or
int3
cli
inc
inc
outsb
add
jno
xor
push
ss
pop
pop
pop
mov
insl
push
xor
cld
xchg
mov
dec
les
call
ss
and
scas
cmp
push
push
je
jne
subb
inc
pushf
mov
loop
push
and
pushf
sbb
or
push
aas
xchg
xchg
inc
push
jne
jne
push
jb
popa
sub
filds
fsubrl
mov
jmp
in
inc
jae
fldenv
push
push
jmp
je
mov
or
outsl
pop
mov
fsubrl
lret
in
pop
sbb
lret
sbb
sbb
adc
lahf
add
fcomip
andl
loopne
lea
cmpsb
fs
loop
mov
inc
jp
pop
add
sbb
add
popa
roll
das
dec
cmp
insb
xor
pop
xor
lods
cmc
jae
sbb
jmp
arpl
fstp
js
mov
cmpsb
mov
cmp
push
lock
ret
test
push
out
pop
mov
jb
lods
lods
rorb
push
gs
pop
sub
loop
fs
mov
add
adc
in
dec
or
push
leave
and
pop
daa
ds
ret
dec
pusha
ljmp
dec
mov
sbb
push
icebp
and
jecxz
jno
stos
jle
mov
lret
jnp
jnp
out
xorl
ljmp
xchg
mov
dec
jge
fcmovbe
mov
lods
xchg
mov
out
inc
in
cwtl
xchg
orb
stos
ret
dec
mov
fbstp
dec
cmp
cmc
andb
aas
mov
xchg
sbbl
test
xor
cmc
scas
xor
adc
mov
daa
sbb
and
rcrb
fs
xorb
add
sbb
jp
jb
fmuls
mov
cmpsl
adc
out
cmp
mov
ja
mov
dec
dec
aaa
pusha
mov
fstpt
sbb
pop
pop
jnp
xchg
or
or
ljmp
iret
xor
fistl
xchg
cmc
jecxz
fcmovb
mov
std
rolb
fldpi
rcr
aam
push
imulb
xchg
movsb
add
icebp
sub
xchg
cmp
adc
pushf
divb
in
cmp
dec
dec
jle
scas
cmc
mov
lret
xchg
inc
dec
std
add
ja
lods
aaa
lds
mov
jns
mov
mov
xor
xor
dec
leave
mov
jnp
mov
dec
and
cltd
imulb
jmp
mov
and
cmp
std
jbe
mov
cmp
ja
mov
cmpsb
or
fcomps
mov
or
jno
icebp
push
fmull
outsl
and
jecxz
sbb
add
or
enter
push
jmp
jp
out
fdivr
ret
rorb
sub
add
push
lret
mov
inc
xor
fmuls
pop
stos
pusha
lret
push
mov
mov
je
pop
or
lcall
fcomp
rorb
inc
cmp
out
scas
xor
mov
aad
push
jp
jae
cmp
ljmp
pop
add
add
xchg
fidivrl
sbb
mov
fidivrl
adc
mov
mov
hlt
hlt
enter
leave
loopne
lcall
add
mov
pop
mov
jmp
cmp
sbb
out
xor
cli
or
test
sbb
sbb
inc
xchg
jge
mov
cmp
push
clc
sti
jnp
lods
jecxz
xchg
std
cli
repnz
push
or
scas
fwait
xor
push
mov
popa
mov
pusha
mov
pushf
jns
pop
cmp
aaa
loop
ret
push
aam
and
jnp
mov
cli
sub
cmp
testl
dec
std
adcl
or
jo
and
pop
popa
mov
jecxz
add
lret
fdivrs
push
iret
rcl
adc
jae
fisttpl
pop
fimuls
xchg
mov
sbb
rolb
sub
adc
mov
lret
inc
fisttpll
test
pop
adc
pop
or
in
cmp
repnz
iret
test
sbb
imul
or
sbb
mov
movsb
stos
mov
pop
popa
test
ret
mov
push
filds
outsb
xlat
push
inc
leave
and
pop
lock
cwtl
jno
lcall
les
insb
mov
dec
mov
into
test
cmp
xor
and
or
ds
fsubs
adc
daa
sarl
sbb
xchg
cmp
ds
mov
adc
xor
pop
icebp
call
sub
bound
and
test
jg
jl
jle
dec
pop
mov
fstpl
mov
repz
mov
inc
sub
mov
mov
leave
cmp
mov
hlt
jae
rorb
mov
and
or
inc
adc
fabs
stos
es
xchg
inc
xor
mov
mov
shr
aam
sub
adc
rcll
test
push
and
dec
add
dec
pop
cs
add
pminub
push
movsb
into
mov
cli
idivb
pop
mov
and
jb
pop
xor
pop
mov
adc
adc
sbb
test
dec
outsl
out
sbb
inc
and
arpl
mov
jge
inc
std
jmp
jmp
cltd
sbb
jbe
imul
cltd
jg
icebp
sub
jge
xor
or
cmp
add
dec
and
and
call
loopne
stos
inc
inc
mov
jnp
psubb
pop
push
ret
adc
out
cmp
lds
inc
int
loopne
add
xchg
scas
push
pop
sbb
outsl
sbbb
fwait
lahf
inc
mov
push
jle
adc
in
jmp
dec
popf
lret
jp
rcl
mov
outsl
loopne
mov
jle
int3
mov
sti
mov
and
pushf
adc
int
jbe
sbb
sub
xor
mov
push
xor
faddl
pop
rcrb
imul
mov
adc
push
cs
stos
outsl
xchg
xchg
stc
in
dec
icebp
fwait
jae
adc
mov
test
enter
jnp
into
push
filds
push
fwait
dec
or
fists
test
movsl
mov
aad
mov
data16
insb
aaa
test
notl
es
out
mov
ss
xor
cmpb
xlat
cmp
mov
lods
adc
hlt
loop
stc
jmp
add
sub
popa
and
lret
mov
shr
imul
sbb
jbe
popl
xchg
and
in
mov
lcall
hlt
and
stc
adc
test
out
push
lcall
sub
mov
push
pop
fwait
sbb
in
pushf
mov
mov
cmp
xchg
and
adc
push
dec
fwait
and
das
aas
into
gs
bound
sbb
add
mov
xchg
mov
jo
adc
outsl
dec
fs
dec
adc
mov
xlat
push
das
aaa
bound
push
and
dec
cmp
daa
xchg
scas
mov
xchg
fnsave
mov
dec
mov
shl
push
pop
hlt
adc
insl
push
and
sub
mov
ss
mov
andb
dec
mov
or
inc
imul
notb
sbb
dec
push
mov
lret
ret
sbb
mov
sub
sub
gs
xor
and
pop
cmpsb
pop
sbb
inc
fcoms
adc
xorl
push
ficoml
mov
pop
adc
cmp
adc
aaa
ss
dec
into
movb
jns
add
jp
push
push
addl
in
xor
divb
sbb
inc
call
jecxz
shlb
in
movsl
push
lcall
jge
sbb
jge
jmp
mov
inc
dec
inc
shrl
mov
mov
push
or
pop
divb
rcrb
daa
les
adc
jno
cltd
xor
add
push
stos
fmull
xor
xor
jge
lods
mov
int
out
mov
jle
and
or
or
mov
outsl
test
popf
sbb
or
test
stos
sbb
add
push
enter
push
gs
mov
xor
mov
or
and
pop
clc
push
cmp
inc
jo
popf
stc
xchg
repnz
insl
stc
test
test
test
cmp
call
mov
sbb
pop
push
stos
push
mov
xchg
mov
cmpsl
cmpsb
fsubrl
push
dec
sbb
inc
lock
mov
hlt
mov
add
dec
testb
push
into
test
aad
mov
xchg
cmpsl
arpl
shr
add
cli
pop
adc
clc
pop
aam
sbb
test
mov
ret
pop
ret
jb
std
test
xor
adc
mov
mov
orl
sbb
repz
ret
std
xchg
daa
movsl
shll
xchg
cmp
iret
mov
inc
aaa
or
and
fwait
and
lods
clc
or
push
test
stos
lcall
lret
cmp
dec
dec
cwtl
loopne
sbb
xor
sahf
push
fwait
das
loope
fidivrl
push
add
xor
test
enter
mov
push
add
push
fidivrs
pop
rcrb
push
ja
xchg
roll
sbb
and
popf
icebp
push
adc
jno
scas
pop
je
mov
cmp
nop
mov
lcall
clc
jmp
mov
out
xorl
les
mov
or
xchg
imul
arpl
cmp
xor
push
enter
leave
push
mov
lret
fisttps
pop
das
cmp
fcoms
or
hlt
mov
aad
ret
push
int
jecxz
inc
jl
push
fcmovnbe
or
mov
xchg
bound
jg
leave
and
popa
enter
addr16
xchg
bound
cmpsb
push
add
add
fwait
pop
jno
loop
and
mov
xor
add
or
mov
jne
outsb
or
roll
mov
lcall
dec
inc
lret
push
and
pusha
shl
mov
rcll
xchg
hlt
jge
adc
mov
xor
arpl
xchg
mov
mov
dec
add
xchg
pop
imul
or
out
enter
shr
xor
sub
cmpsb
fsub
jmp
adc
or
and
xor
in
push
push
or
dec
xor
shlb
sbb
ret
leave
pop
mov
jecxz
pushf
out
pusha
inc
lock
mulb
popf
js
jb
mov
cmpb
fsubl
or
pop
loop
adcb
das
push
outsb
lcall
movsb
pop
movsl
je
mov
push
out
xchg
notb
jecxz
xor
std
inc
mov
add
dec
pushf
idivb
inc
enter
dec
adc
shl
daa
push
aaa
inc
sub
mov
dec
cwtl
mov
push
jnp
cmpl
mov
jle
ds
lea
adc
sbb
in
mov
and
jmp
push
andb
push
sbb
lea
inc
mov
mov
fwait
pop
dec
inc
add
cs
push
mov
sbb
and
les
popa
mov
push
jnp
fcomps
cmp
sbb
inc
sub
inc
stos
jg
das
jno
mov
push
sbb
jb
inc
inc
aas
add
jns
inc
pop
arpl
sarb
add
les
xacquire
add
aad
aaa
test
out
pop
cld
xlat
es
stos
outsl
popf
call
mov
and
shrb
xchg
add
scas
mov
mov
sbb
dec
enter
outsb
adc
js
lea
mov
jp
roll
jl
fnstenv
lods
arpl
or
out
sub
loopne
cmp
mov
test
pop
mov
jl
pop
out
shll
lds
lahf
in
mov
push
mov
daa
add
nop
add
and
cltd
sahf
loopne
xchg
fstl
xchg
inc
jns
pop
inc
pop
pop
dec
aas
jno,pn
mov
xor
shr
mov
sti
inc
lods
sub
cmp
cwtl
test
mov
sbb
mov
or
test
iret
cmp
data16
lea
lock
in
push
cmp
inc
test
jecxz
mov
gs
in
xor
ss
rcr
imul
aas
pop
repz
push
hlt
or
adc
dec
inc
xor
mov
push
sahf
jne
ret
test
gs
lret
mov
lds
lret
popa
or
mov
cmp
sub
jle
out
and
xchg
movsb
mov
stos
sbb
dec
outsl
shrb
jne
inc
pop
jae
push
jmp
scas
insb
xor
pop
pop
xor
jb
fsts
loop
jmp
sti
rclb
and
adcl
jns
pop
stc
insl
outsl
jne
push
push
je
jno
pop
jns
mov
xchg
jb
test
push
mov
push
pop
shr
mov
mov
adc
shrl
cmp
cs
das
mov
mov
addr16
sbb
jle
jg
mov
mov
mov
fidivrs
movsl
and
rcl
push
loop
pop
out
clc
mov
fwait
in
ljmp
mov
xchg
pop
shr
sub
mov
lds
enter
add
cmp
push
sbb
cmp
in
sub
cs
repnz
loop
outsl
cmpsl
and
in
add
inc
stos
pop
add
mov
lea
sbb
mov
push
mov
fistl
dec
mov
test
cmc
xlat
xor
imul
aam
cmp
or
out
aas
sbb
xchg
mov
roll
inc
mov
repz
mov
mov
fldenv
and
addr16
inc
pushf
sarb
stc
xor
pop
jmp
subl
out
lret
sbb
pop
pop
push
mov
filds
or
int
or
xchg
in
mov
arpl
mov
loop
cmp
adc
out
es
add
pushf
pop
add
rolb
sub
jns
scas
jo
inc
push
adc
cmp
fsubrs
xor
mov
push
and
lret
clc
into
mov
mov
in
sub
jb
jb
nop
sti
int3
mov
add
jg
mov
xchg
add
gs
in
or
je
repz
aam
add
push
pop
shrl
cmp
aad
jb
add
xor
mov
mov
popa
cmpsl
cli
add
daa
mov
pop
mov
call
mov
sbb
cwtl
add
ljmp
ja
mov
pop
fs
testl
and
rcrb
cli
mov
aas
test
lock
test
lcall
test
sti
cmp
jns
mov
sbb
repz
cwtl
cmp
inc
inc
ds
push
rcrb
lret
test
xchg
stos
je
jge
inc
shll
mov
mov
or
pop
test
push
subl
cwtl
lcall
and
cmp
cwtl
pop
jb
push
jno
pop
push
mov
in
fwait
ljmp
cmp
fimull
lock
adcb
imul
das
mov
mov
pop
nop
mov
dec
test
insl
int3
xchg
fcmovnu
or
call
das
out
inc
adc
test
inc
add
mov
push
push
iret
or
mov
mov
ja
push
push
ret
add
or
jo
inc
mov
push
add
insl
sbb
rcrb
mov
sbb
jle
sub
cli
daa
inc
fnstsw
repnz
mov
pop
dec
fsubs
divb
pop
add
push
cmp
mov
adc
add
arpl
inc
mov
jmp
das
daa
imul
sub
adc
dec
sbb
aam
aaa
insl
sbb
jl
iret
imul
sub
arpl
data16
aas
fidivs
or
fwait
cmp
aad
xor
lcall
incl
les
mov
fcmovbe
sahf
xchg
inc
stc
std
mov
stos
xor
stos
jge
lea
iret
mov
lds
ljmp
lcall
mov
xor
dec
sub
lods
fisubs
sub
std
dec
push
sbb
rol
xchg
sub
les
mov
or
xor
imul
pop
inc
movsl
hlt
sub
and
aad
rcrb
xchg
push
push
popa
shll
sahf
xor
jge
jno
loop
or
dec
imul
imul
mov
loope
jg
test
dec
adc
popf
dec
aas
cli
insl
push
je
push
adc
mov
jmp
fs
arpl
lret
push
push
and
scas
shrl
cmp
mov
mov
mov
inc
imul
pop
loope
jp
and
out
fmull
ret
sbb
push
jge
mov
xor
and
jnp
jmp
insl
lahf
repz
sub
repz
xor
loopne
mov
addb
mov
fdivrl
ljmp
xlat
cmp
lcall
insb
int
adc
sarb
sub
out
jae
loop
js
fsubr
xchg
xor
or
xor
add
or
rcrb
xor
jbe
dec
clc
data16
fcoml
js
es
xor
bound
pop
dec
cmp
mov
and
cli
movntq
test
or
sub
xchg
scas
mov
mov
fdivl
jl
test
jno
or
mov
pop
pop
fs
cmpsl
out
xlat
imul
xchg
hlt
sbb
insb
arpl
or
rorb
fwait
push
push
jle
jge
cmpsl
inc
cmpsb
pop
push
cmpsb
aam
push
int
out
xor
xchg
lods
in
in
xor
inc
movsb
xor
jecxz
loopne
pop
fldz
das
es
ljmp
cmp
lret
addb
mov
dec
hlt
cmp
es
xor
fldcw
lret
lock
lret
shrl
aas
mov
cmc
inc
jns
ss
test
jmp
cwtl
xchg
cld
sbb
aam
rcrl
imul
ljmp
adc
mov
push
mov
sub
inc
mov
or
jle
xor
inc
push
fdivrl
orl
jae
or
jle
jp
loop
lock
lds
push
shll
push
rorl
fnstcw
push
jl
jns
lcall
add
dec
jge
lret
pop
aam
scas
adc
outsl
jns
daa
jle
or
pop
test
addl
in
je
pop
lret
xchg
sub
xchg
je
mov
mov
loope
pushf
aas
inc
mov
scas
jecxz
adc
mov
notb
inc
and
js
ret
je
and
pushf
mov
jecxz
cmp
jle
add
jne
test
mov
ja
lea
inc
fs
mov
sbb
test
out
jmp
mov
shll
cli
mov
or
aas
test
mov
into
out
nop
lret
mov
push
jp
ret
or
mov
outsb
push
jl
sub
xor
int
mov
cmp
mov
sub
pop
stos
pushf
gs
jbe
mov
into
jecxz
cmp
negb
shrb
push
adc
adc
imul
in
sbb
roll
sbb
pop
imull
xor
inc
or
mov
shl
mov
inc
xor
pusha
jg
faddl
pop
ret
lret
cmp
cmpsl
jb
lods
pop
jnp
xchg
imul
pop
lcall
or
imul
add
xchg
mov
lds
jns
sbb
inc
out
jbe
out
or
ss
cmp
shr
aad
xchg
movsb
sub
jae
aaa
or
stos
and
jne
icebp
xor
mov
lahf
xchg
test
fildl
and
sbb
insb
hlt
sti
add
in
mov
fsubp
outsb
jae
mov
lods
into
in
std
mov
dec
shll
add
sbb
mov
or
pusha
mov
mov
pusha
lock
add
jo
dec
aaa
setl
outsb
cmpb
nop
ljmp
test
lds
js
push
lds
mov
adc
outsl
mov
vunpckhps
insl
cli
call
pop
enter
aad
mov
movsl
insb
lods
lahf
loop
mov
push
and
js
jecxz
scas
adc
jge
fwait
testl
mov
xor
xchg
add
hlt
inc
fildll
xchg
cmp
lret
out
mov
cmp
or
popf
push
mov
and
mov
xchg
and
subb
jp
xor
fdivs
pop
inc
test
dec
xchg
mov
leave
push
mov
cmp
outsb
xor
jns
in
jecxz
xchg
lods
leave
jne
adc
inc
fbld
lods
ret
and
adc
iret
cli
shld
inc
jg
fs
test
push
sbb
loopne
sub
pop
mov
adc
sub
call
mov
loopne
pop
int3
inc
pop
jg
repnz
repz
into
mov
pop
add
outsl
jns
dec
repnz
iret
inc
and
hlt
test
pushf
fprem
ret
in
sbb
mov
sbb
addr16
orb
stos
popf
loopne
inc
stos
ret
mov
mov
flds
jp
mov
add
out
sbb
xor
insl
testl
dec
push
xchg
rorb
lods
xchg
pushl
nop
mov
mov
pop
int3
cmp
std
cmp
rclb
pop
mov
mov
xor
fs
sub
mov
push
iret
cltd
dec
shlb
loope
dec
leave
jae
and
add
pop
stos
sbb
dec
jb
mov
xlat
sbb
xchg
mov
pusha
sti
mov
stc
icebp
sub
add
pop
imul
insl
into
add
mov
fisubl
mov
push
push
lret
xchg
push
mov
mov
dec
mov
pop
mov
inc
popa
std
imul
in
loope
stos
cmpsl
aad
ret
sub
repz
aad
sub
lock
popa
popa
dec
fsubl
adc
into
stos
mov
ja
xchg
push
pop
dec
mov
cmovle
adc
and
test
mov
test
sbb
cld
fucomip
cmpsl
aas
xor
fstpl
xorl
roll
scas
cmpl
shl
f2xm1
push
inc
mov
outsb
ljmp
in
notb
mov
xlat
cs
mov
ret
dec
cmpl
cmp
call
jo
testb
or
and
lock
jo
ljmp
in
jo
lahf
and
fwait
xchg
mov
mov
sub
cmp
xor
shl
mov
and
es
nop
pop
cltd
pop
mov
xor
jmp
sbbb
push
and
std
add
sub
mov
mov
sbb
outsb
fldenv
mov
icebp
mov
or
orl
push
inc
cli
push
out
jp
add
cmpsb
sbb
mov
sti
mull
lahf
xor
xchg
jae
test
aaa
cwtl
movsl
in
mov
jb
sub
das
sub
cmp
inc
ficoml
mov
inc
and
cltd
rcr
xor
and
lods
je
jnp
movnti
pushf
xor
mov
inc
test
gs
stos
rcl
movsl
jecxz
leave
adc
fisttpl
das
sarl
xchg
scas
pusha
jns
mov
xchg
sbb
adc
adc
adc
mov
jns
push
ret
lret
arpl
or
imul
sub
dec
adc
xor
int3
aas
lret
jbe
or
sub
dec
dec
out
mov
and
and
and
and
or
mov
in
rorl
and
sub
add
xchg
adc
mov
xchg
inc
add
or
out
iret
fmuls
stc
stc
push
movsl
push
lret
icebp
sub
and
inc
and
loope
f2xm1
in
and
ficoms
addr16
ret
cmp
jg,pn
pop
mov
rorb
mov
mov
ss
stos
pop
test
mov
sub
push
jnp
push
stc
lret
dec
sub
int
or
xchg
mov
sarl
test
lret
adc
loop,pt
pop
lods
lock
ret
jb
push
pusha
sti
nop
lds
pop
aas
cli
popa
push
loop
mov
fidivl
pop
sahf
ja
arpl
mov
or
outsb
das
mov
sub
and
leave
jae
loope
adcl
sarl
cmpsb
jl
pop
mov
jp
push
adc
pop
aam
arpl
sub
cmp
dec
pusha
fcomps
aaa
notb
je
pop
addb
scas
or
stc
mov
push
enter
dec
push
in
mov
pop
dec
fwait
and
mov
aad
xorl
sar
insl
aam
push
test
nop
xor
cwtl
push
inc
pop
lahf
jnp
arpl
addl
cwtl
add
imulb
rcll
xchg
loope
lods
mov
add
outsl
xor
ja
pop
jmp
idiv
mov
mov
cmp
cwtl
mov
aas
cmpsl
and
push
sub
cmp
cmp
lret
cli
push
mov
arpl
inc
add
mov
mov
cmp
pop
dec
add
push
adc
je
cmc
jbe
ret
or
incb
or
inc
add
es
popa
imul
adc
and
jge
cld
pop
loope
repnz
roll
out
loop
xchg
arpl
jno
xchg
stos
orl
pop
add
jmp
push
push
out
cmpsl
mov
cmc
inc
fldt
mov
dec
ret
adc
inc
mov
dec
mov
daa
sub
jle
xlat
shll
push
jmp
nop
leave
dec
push
mov
fsubrl
pop
out
add
push
rolb
int
mov
gs
xchg
ret
pop
inc
sti
sbb
mov
fcompl
sbb
daa
mov
sbb
repz
popa
aad
rolb
cmc
add
or
mov
mov
jle
insl
cmp
mov
cmpl
clc
popf
jnp
lret
shll
test
adc
mov
jmp
out
andl
jb
sub
fnsave
mov
push
test
xchg
pop
sbb
test
push
pop
xchg
mov
into
roll
xchg
sub
pop
jl
inc
lea
cld
sub
ret
lea
testb
mov
add
mov
mov
push
jecxz
push
jno
aaa
insl
ja
jp
call
inc
jmp
dec
adc
negl
xor
mov
pusha
sbb
in
push
lea
mov
adc
andl
iret
sub
ds
jmp
mov
je
add
popa
pusha
mov
inc
not
sbb
or
adc
outsb
rorl
imul
test
aaa
outsb
cmp
xor
adc
ss
jge
test
add
mov
lds
sti
test
xchg
jbe
mov
into
xchg
lods
andl
adc
mov
fldenv
decb
fucom
ret
cli
push
inc
mov
mov
ds
inc
cli
in
jb
and
push
dec
or
pop
insl
fidivrs
ret
xchg
inc
xchg
aad
mov
lret
mov
sbb
jge
mov
movsb
test
sub
pop
cmp
fmull
xor
cwtl
fadd
lret
std
popf
lods
adc
xchg
gs
cmp
inc
aaa
inc
sti
and
hlt
jmp
hlt
aas
mov
test
sub
pop
pop
jae
xchg
mov
jae,pn
adc
fadds
pusha
cmp
shll
xor
jne
inc
sbb
cmpsl
jo
lods
cwtl
dec
ret
xor
ret
sub
push
xchg
daa
int3
test
pop
lods
jg
and
test
lret
loop
inc
out
hlt
lock
pop
push
insl
dec
shrb
pop
add
mov
inc
push
or
popf
addr16
inc
popf
mov
js
iret
imul
lcall
and
ss
rcl
sub
call
fdivrl
cmpb
loope
jecxz
cmp
mov
cs
push
popa
int
outsl
push
out
lahf
js
in
mov
in
or
mov
lahf
xchg
hlt
sub
or
and
aaa
shrb
repz
and
leave
cmpsl
cmp
inc
aas
movsl
stos
outsb
sbb
lahf
lret
xchg
mov
mov
xchg
adc
pop
sahf
add
lods
dec
cmp
xlat
aam
fwait
shrl
outsl
fst
fmuls
and
stos
lret
dec
dec
stos
jle
imul
xor
inc
push
mov
loopne
sub
inc
push
enter
adc
jmp
sbb
add
test
inc
outsb
insb
xchg
aam
cmp
mov
dec
testb
arpl
adc
clc
fidivrl
inc
and
out
pop
hlt
push
std
adc
in
rclb
int3
call
int3
mov
leave
testl
out
gs
into
inc
cmp
data16
cld
jnp
xor
lods
dec
xchg
mov
ljmp
and
in
cwtl
pop
xor
xchg
mov
dec
mov
sar
add
les
ret
lret
cwtl
jnp
and
pop
pop
adc
adc
bound
mov
bound
in
je
in
pop
arpl
xor
ljmp
aad
mov
xchg
dec
repnz
sbbl
adc
pusha
jnp
mov
je
cmp
outsl
jmp
push
jb
add
lret
scas
or
or
fwait
xchg
into
cmp
nop
fs
pop
lds
jmp
mov
pusha
inc
mov
dec
and
and
scas
xchg
test
push
addr16
test
pop
dec
sbb
mov
adc
pop
fisubrl
test
into
add
mov
scas
pop
and
push
aas
movsl
mov
data16
andb
add
and
cmc
popf
inc
clc
enter
cli
mov
cltd
in
xchg
dec
dec
mov
andb
into
xchg
outsl
xchg
dec
or
jne
xchg
pop
jecxz
out
mov
andl
lods
enter
test
and
scas
fwait
cmpsb
mov
mov
sbb
insb
dec
hlt
out
jbe
sbb
fsubrs
inc
push
in
cmc
vcvtss2sd
inc
daa
aas
hlt
aaa
pop
fwait
sub
test
lock
mov
mov
inc
das
sbb
inc
pop
sbb
lahf
or
mov
in
sub
inc
ret
fstl
rorb
xchg
xor
cmpsl
out
gs
lods
xor
xor
pop
jbe
lahf
mov
pop
jge
fbld
fidivs
hlt
mov
and
movsb
and
pop
dec
lock
lods
adc
ds
xor
add
pop
jge
sub
orb
jp
das
fisttpl
jbe
testl
adc
jg
adc
mov
out
lea
jg
mov
push
push
inc
jecxz
cwtd
lcall
cli
jne
inc
push
push
je
inc
shlb
iret
cwtl
and
sub
or
inc
rcrb
test
cmpsl
loope
and
push
mov
sbb
loop
pop
xor
pop
mov
nop
loopne
pop
inc
ljmp
and
fisubrs
inc
subb
or
ja
inc
testb
push
push
mov
or
adc
int3
lahf
adc
mov
and
out
out
popf
pop
outsl
and
inc
or
aaa
jecxz
push
cmp
fs
push
push
adc
and
sbbl
mov
cs
and
jmp
cwtl
xor
ret
push
outsb
nop
pop
cmpsl
xor
lds
call
cmp
in
mov
sub
or
cmp
xor
pop
jge
fsubr
test
cmp
mov
mov
cmpl
pop
pop
push
mov
cltd
ljmp
jl
sti
test
iret
into
mov
loopne
aad
jo
dec
outsb
nop
pop
cmpsb
lods
out
push
ficoms
fwait
sub
int3
push
cmc
mov
mov
ss
rcrb
push
test
gs
in
ljmp
cld
add
or
inc
sbb
push
push
imul
xor
and
xor
stc
or
lret
jne
inc
mov
das
out
mov
sbb
jne
enter
movsl
insl
cmp
inc
das
and
jns
mov
rclb
xchg
cli
das
subl
pushf
fldl
subb
jne
adc
xor
out
jbe
and
ficoml
mov
push
dec
lods
sbb
push
lar
add
sbb
repnz
adcl
inc
dec
mov
dec
pop
sub
pop
inc
add
jb
dec
fisubrs
out
add
outsb
ret
cs
clc
add
pushf
mov
hlt
rcrl
cmp
adc
or
fcomps
sbb
push
aam
data16
sbb
mov
xor
adc
repz
scas
fwait
dec
fistps
xor
push
push
jbe
xor
enter
mov
pop
stc
and
inc
dec
lods
add
aam
pop
adc
inc
push
jbe
push
pop
addl
mov
push
pushw
outsb
inc
xor
cmpb
scas
dec
add
test
fldcw
lods
ljmp
sbb
adc
sub
cmp
push
test
sub
test
scas
out
mov
je
and
adc
imul
jno
lret
and
cmpsb
inc
cmp
push
add
jp
push
in
and
in
xchg
push
icebp
push
mov
pop
dec
addl
loopne
clc
mov
call
outsl
push
pop
sub
scas
push
out
inc
mov
adc
insl
cmp
jno
ds
ljmp
mov
jp
in
repz
notl
call
ss
lock
pop
data16
or
xchg
clc
imul
lcall
clc
pop
jle
ds
inc
leave
stos
xor
addr16
loope
aas
xchg
jl
inc
outsl
outsb
inc
outsl
adc
imul
jae
adcl
fnstenv
and
int
popf
inc
adc
out
jl
inc
cmpb
sub
jne
sub
pop
and
mov
dec
lahf
ds
test
mov
mov
popa
js
xchg
shl
mov
cmpsl
lea
jp
mov
hlt
xor
dec
xor
sub
popa
icebp
pop
dec
push
xchg
pop
cmp
pop
jbe
mov
xchg
xchg
sahf
bound
fcoml
xchg
sbb
xlat
xor
jmp
or
icebp
pop
push
clc
out
mov
adc
push
jae
mov
fisubrl
sbb
jns
dec
mov
lds
push
add
in
sti
sahf
sub
pushf
pop
cmp
pop
jl
and
mov
out
rcrl
dec
sbb
popf
sub
shll
lock
lret
outsl
xor
hlt
ja
push
test
and
out
cmp
dec
shlb
jo
mov
sbb
jp
mov
add
rcrb
mov
mov
jmp
aas
fmull
out
xor
aas
fst
xchg
ds
xor
pop
in
push
daa
mov
mov
ds
pop
push
jb
sub
mov
sbb
and
push
pushf
push
ss
sub
cwtl
sbb
adc
out
and
test
xor
dec
shll
cmp
dec
push
jl
jg
inc
push
jle
xlat
jbe
push
in
lods
lds
cmp
xchg
mov
ret
push
sub
movsb
xor
mov
inc
jl
idivb
loopne
shr
push
lret
pop
and
mov
cli
mov
fidivrl
andb
pop
loop
adc
cmp
popl
push
int3
daa
sbb
ds
sbb
sbb
movsb
sbb
push
jmp
push
mov
push
addr16
pop
push
xchg
mov
nop
sbb
dec
mov
cmp
and
jp
fildll
pop
inc
push
aaa
add
lret
jl
push
or
push
adc
cmpl
dec
ja
add
stc
icebp
out
xorb
xchg
push
jecxz
fldl
int
sub
mov
push
es
jg
jae
int3
in
dec
add
and
sub
popa
and
mov
sub
sub
push
pop
inc
dec
fbld
mov
mov
xor
jl
mov
rolb
mov
sbb
hlt
aad
js
push
add
mov
imul
rcrl
enter
mov
xchg
inc
lahf
mov
jo
jle
repz
int3
fistps
inc
mov
mov
mov
fisubrl
jle
cmp
cli
stos
xor
jbe
xor
mov
das
sbb
push
mov
loopne
mov
dec
mov
and
mov
dec
lret
repnz
imul
pop
fnstcw
jnp
xchg
lock
inc
xor
ret
fnsave
orl
push
pop
mov
and
jmp
xchg
pop
std
mov
lret
ret
out
add
std
insl
fistl
in
lret
lret
stos
popf
fisubrs
ret
push
int
pop
rorb
rcll
cmc
cmp
dec
xor
add
int
jl,pn
out
std
mov
dec
xchg
cmp
sbb
test
mov
lret
cwtl
inc
pop
mov
jae
mov
xchg
mov
mov
clc
push
mov
mov
fst
negl
cli
pop
ret
iret
add
out
fdivrs
pop
ss
pushf
mov
sahf
fnstsw
aaa
mov
arpl
or
jg
xchg
mov
popa
rclb
pop
je
sbb
enter
mov
shll
sbbb
and
cld
arpl
out
shlb
insl
push
mov
aaa
ficoms
xlat
mov
lahf
enter
mov
jns
jo
inc
out
adc
push
mov
mov
aaa
into
or
cmc
out
mov
or
mov
mov
aam
push
jo
adc
add
fldenv
fnstsw
xchg
imulb
jne
xchg
adc
repnz
jno
ret
mov
dec
jp
adc
mov
imul
push
xor
out
mov
in
inc
imul
jb
add
mov
lcall
xor
push
test
add
jae
mov
out
inc
pop
jo
dec
call
lret
orb
jmp
cld
divb
inc
mov
or
inc
mov
shll
push
std
daa
xor
out
out
sbb
dec
das
ds
bound
fnsave
or
mov
xor
push
or
ja
xorb
mov
fimuls
jl
sub
rclb
imul
jmp
xchg
cwtl
inc
mov
xchg
in
fiadds
jbe
stos
daa
xchg
cmp
xlat
or
stc
mov
hlt
in
inc
mov
mov
shrb
cmc
push
ds
sub
in
cmpl
sub
shlb
cld
jno
cwtl
cmp
add
in
jecxz
cmp
or
lea
cmpsb
rcrb
or
mov
or
jl
hlt
scas
xor
repz
arpl
int
adc
ja
xlat
imul
scas
movsb
imul
ja
xchg
add
je
xor
mov
adc
cmpsb
pop
push
out
xchg
push
sub
leave
xor
jne
lods
pop
test
push
shrl
and
clc
dec
rorb
and
inc
jno
call
adc
aad
rcrb
outsl
pop
xchg
xor
jp
jo
lcall
ds
pop
xchg
insb
arpl
int3
add
scas
push
inc
pop
imul
shlb
jns
push
pusha
pop
pop
insb
sbb
shrb
cmp
fs
int3
add
icebp
adc
jne
and
dec
gs
add
dec
sti
dec
mov
inc
jne
movl
jae
mov
cwtl
add
mov
dec
or
test
push
scas
add
enter
mov
sbb
push
mov
dec
loopne
ffreep
or
push
add
repz
jmp
lret
and
or
dec
insb
cs
lret
jl
and
aam
dec
cmp
pop
stos
inc
rcr
sbb
add
icebp
jnp
movsb
pop
sbb
xor
aas
test
jmp
movsb
pop
dec
adc
xor
xlat
in
cltd
test
sub
xor
iret
mov
por
in
inc
scas
test
inc
push
sbb
in
and
aaa
and
jns
and
loop
jb
dec
sub
sbb
fstpt
nop
call
popf
and
or
insb
xchg
fnstenv
pop
aam
or
push
in
push
ret
xor
dec
mov
loope
mov
inc
nop
lcall
mov
in
add
int
ret
and
aas
dec
int
jne
mov
pop
push
mov
fwait
push
lret
fnstenv
mov
xchg
sbb
std
in
jl
out
push
sbb
aad
test
xor
jge
fldcw
loop
add
and
into
sub
rorb
cmp
dec
or
fsubrs
faddl
inc
pop
jae
scas
into
lret
cld
xchg
addr16
push
or
sbbl
fucomp
js
inc
call
sub
aad
mov
mov
dec
add
mov
adc
in
dec
mov
xor
pop
mov
mov
aad
cs
aas
gs
push
sub
dec
mov
sahf
lea
push
popf
sbb
dec
sbb
lcall
xchg
inc
pop
xor
xor
add
inc
outsb
adc
ja
inc
or
mov
jmp
sbb
testb
leave
imul
cmpsl
test
and
cmc
sub
cmp
xchg
add
sub
roll
lcall
popf
push
data16
push
xor
mov
movl
in
into
pop
push
fs
mov
lahf
lret
mov
pop
dec
jo
outsl
xor
push
into
popl
fidivrs
jl
or
pop
addl
ljmp
les
sbb
icebp
sbb
inc
pop
xchg
loop
cmpsl
xchg
jnp
in
xchg
push
ss
out
cwtl
lds
aam
xchg
mov
push
insl
adc
sbb
mov
outsl
and
ljmp
pop
mov
push
mov
push
mov
es
pop
xchg
lahf
call
xrelease
addl
js
lock
mov
mov
push
jnp
test
mov
mov
fs
xor
cmp
iret
ficoms
ret
mov
and
mov
fsubs
loop
inc
cs
loope
jb
sbb
pop
push
sub
cmp
dec
sbb
adc
mov
movsl
sbb
inc
cmc
cmp
andb
out
xchg
mov
jb
jno
adc
leave
in
xchg
pop
imul
pop
sbb
xor
mov
cs
in
icebp
jecxz
aad
pop
jg
ds
inc
dec
cmp
add
mov
push
or
push
in
xor
xchg
dec
jle
adc
and
je
lds
push
and
hlt
sahf
jo
mov
enter
jb
ss
mov
outsl
sbbb
add
jne
mov
or
push
or
jecxz
xor
mov
popa
orb
cwtl
jg
out
out
pop
cwtl
das
bound
xor
aam
in
xlat
push
es
cwtl
movsb
mov
fisubrl
sbb
ss
pop
lods
fisubs
mov
in
jo
out
aas
fcmovb
cld
outsb
mov
xor
or
out
mov
hlt
je
leave
sbb
cmp
or
scas
repnz
icebp
inc
jl
xchg
and
cltd
enter
add
test
aas
and
mov
sbb
addr16
jnp
mov
roll
sbb
mov
inc
add
int3
push
mov
push
aam
mov
repnz
stc
adc
imul
stos
pop
jns
inc
gs
push
mov
lds
jle
lds
and
ss
shrl
xor
iret
sbb
sbb
cmp
es
push
insl
gs
mov
scas
mov
sarl
enter
adc
or
push
imul
jmp
gs
jl
push
fnsave
loope
vmovdqu
jno
daa
out
or
jne
clc
test
inc
pop
and
pop
or
bnd
inc
pop
popa
adc
fiaddl
sub
lods
cmp
xchg
add
sub
sbb
cmpsb
mov
dec
fs
lds
lea
adc
sub
mov
dec
adc
test
or
cmp
movsl
jbe
in
enter
call
fmull
cmp
loopne
pop
dec
jo
xor
xchg
insl
and
rcrl
movsl
sbb
andl
aad
mov
and
adc
sahf
push
adc
jmp
scas
mov
inc
adc
sub
addl
adc
jmp
js
ret
test
sub
push
rorl
mov
inc
lret
xor
dec
add
sub
mov
and
je
xorl
mov
sub
cmpsl
movsl
pop
sar
xchg
inc
or
pop
xchg
enter
adc
dec
push
inc
pop
sub
testl
sub
and
xor
out
mov
es
sbb
lahf
lcall
sub
mov
sbb
sub
inc
adc
push
xchg
sbb
cmp
push
mov
sub
imul
adc
popa
dec
jp
int3
popa
jae
mov
fisubrs
mov
sbb
cmpsb
push
adc
les
int3
das
sbb
push
out
and
mov
mov
data16
cmpsb
lock
add
mov
pop
cwtl
jnp
pop
es
data16
and
sbb
dec
stos
addr16
movsb
rcrb
adc
jmp
rcl
es
call
std
or
pop
mov
jbe
lock
rolb
mov
notl
inc
lock
or
xchg
add
and
sahf
push
pop
sbb
inc
push
jbe
cmp
in
stos
pop
mov
dec
cmc
lret
movsl
data16
xor
and
mov
fcoms
lock
lock
clc
pop
movsl
mov
loop
sub
xor
dec
dec
cmc
mov
fnstcw
lds
push
jl
mov
dec
fdivr
or
xchg
cmc
cmp
je
pop
cwtl
jns
cmp
mov
int
inc
jno
std
fwait
mov
lods
inc
and
iret
dec
push
lcall
lock
fldt
repz
les
cltd
or
loop
cwtl
dec
outsb
sub
rclb
dec
jno
cmp
add
aas
inc
sub
inc
mov
add
or
add
movsl
push
push
out
das
sahf
adc
push
push
mov
gs
es
imul
jle
insb
cmp
rcl
fs
ljmp
lds
iret
or
pop
in
push
imul
dec
shlb
mov
dec
lret
fisubrs
repnz
ret
push
push
sub
sub
xorb
clc
jno
sub
adc
mov
cmc
inc
idiv
push
and
jg
cmpsb
push
push
xchg
loopne
shl
jecxz
cmp
push
lods
pop
lcall
mov
xchg
lea
jp
scas
pop
daa
mov
iret
jge
push
cmc
mov
outsl
shl
test
rorl
test
adc
in
sbb
sbb
inc
das
inc
inc
jp
ljmp
xor
xlat
filds
fcomps
lods
int3
fwait
hlt
insl
pop
lods
pop
jo
in
ret
and
pop
scas
inc
repz
rcrl
cmp
cs
bnd
test
sbb
and
out
sbb
mov
subl
cld
inc
out
mov
out
fnstcw
sub
xchg
adc
daa
mov
es
loope
negl
mov
ljmp
stos
jmp
jp
sbb
repz
cmp
dec
ljmp
fadd
ljmp
mov
sti
scas
or
mov
sbb
mov
push
adc
cmp
sub
mov
pop
repnz
xor
mov
adc
repz
enter
xor
rcr
iret
lcall
ss
mov
inc
inc
xchg
sahf
cmpsl
mov
outsb
mov
jae
das
dec
out
jecxz
testb
shll
sbb
jnp
mov
push
bound
inc
cmp
dec
aam
insb
pop
dec
movsl
nop
loope
test
jmp
mov
adc
xchg
lea
jecxz
sbb
mov
or
adc
das
push
mov
pop
test
xor
xchg
enter
add
inc
cmc
mov
cmp
lea
cmpsb
daa
dec
ss
adcb
cs
insl
push
xor
arpl
fdivl
cmpsl
lret
adc
lods
and
ljmp
xor
stos
pusha
xchg
mov
push
or
das
sbb
popf
mov
push
mov
enter
arpl
mov
push
dec
lock
loopne
movsb
push
pop
add
gs
movsl
sbb
and
inc
add
ds
hlt
xchg
adc
push
and
mov
push
lahf
push
pop
sub
ret
jbe
jl
xchg
lea
hlt
mov
cmp
imul
out
inc
sub
lret
clc
inc
jge
jle
repnz
fxch
xchg
popf
cmp
add
fsubrl
fisubs
mov
out
out
lock
inc
cmp
cwtl
adc
les
add
mov
sbb
cli
negl
in
das
mov
sub
ret
dec
pop
mov
mov
fistpll
xchg
cmp
mov
rcll
push
or
fimull
add
rolb
imul
div
and
pushf
mov
ja
loope
stos
test
loop
fucom
xor
push
push
mov
dec
ror
leave
ret
test
js
xchg
aam
in
xor
push
pop
cmpsb
dec
mov
xor
push
in
fidivrl
shl
sub
sti
push
add
add
test
inc
push
add
or
mov
inc
enter
notb
aaa
rcrl
fwait
mov
adc
fcomp
test
cmp
adc
sti
jae
push
test
sub
sub
push
flds
cld
inc
jne
pushf
arpl
push
ret
or
pop
cmp
inc
in
cmp
gs
xchg
add
stos
xchg
inc
scas
push
push
in
das
ficomps
ror
xchg
sarl
loopne
inc
xchg
inc
jns
sarb
out
test
or
push
and
inc
lret
jge
mov
push
es
dec
mov
loope
jns
stos
mov
enter
movsl
dec
cmpsb
mov
out
sahf
jno
and
sti
xchg
insb
in
movsb
aam
push
enter
ficoml
les
mov
lock
inc
or
lock
jmp
aas
out
nop
mov
pushf
fcmove
add
notb
jne
jge
icebp
mov
stos
xchg
leave
sbb
mulb
inc
sbb
cli
cmp
lret
sbb
insb
les
xor
sbb
inc
hlt
cmp
test
test
sbb
popa
out
mov
lea
lret
test
mov
mov
mov
das
mov
mov
inc
push
jo
inc
inc
mov
add
cmp
cld
dec
lock
xchg
test
dec
stos
das
sbb
lahf
lcall
in
dec
push
mov
test
leave
push
rcrb
sub
fwait
ss
dec
or
lret
mov
nop
cmp
add
mov
sbb
push
jne
pop
adc
outsb
add
aam
scas
fisttps
pop
push
cmpsb
mov
mov
into
imul
daa
test
adc
or
fistpll
add
jo
data16
cld
subl
int
nop
inc
sbb
in
dec
jb
mov
stos
pop
mov
pop
xor
or
stos
enter
sahf
add
out
daa
add
jnp
dec
xchg
int
lcall
xor
and
out
push
fistl
ss
and
stc
dec
ja
rcrl
dec
sub
inc
sbb
mov
mov
xchg
or
sti
hlt
loope
cltd
jbe
shl
xlat
fbld
andb
rclb
daa
pop
pop
fdivp
ljmp
pop
rolb
inc
push
mov
mov
sbb
loop
out
ss
jb
out
inc
mov
mov
jg
dec
ljmp
sub
jmp
add
lcall
imul
cmp
fyl2xp1
jno
jno
sbb
jg
outsb
aam
test
xor
jmp
out
jne
xchg
aas
mov
sti
pusha
into
jl
call
repz
ja
bound
inc
je
and
fbld
stc
xchg
xor
push
add
fmuls
out
pop
xchg
ficoml
lcall
dec
sti
xor
pop
adc
mov
popa
mov
lock
xor
inc
jl
stos
popa
movsl
addr16
sarb
push
push
and
inc
dec
dec
lds
aas
fisubrl
xchg
adc
insb
outsb
out
daa
adc
lock
cmp
inc
cmp
mov
fwait
sbb
sub
into
into
aaa
repz
jb
insl
ss
cmpsl
and
sti
sbb
loope
test
das
jmp
mov
cli
push
aad
push
cs
lock
into
push
sbb
das
cmpsb
ds
es
push
in
out
lret
out
sbb
xchg
clc
das
jns
lcall
inc
call
rolb
jns
add
ljmp
pusha
sbb
shll
jmp
scas
call
sbb
cld
call
xchg
test
scas
ljmp
xor
adc
mov
inc
out
cmp
addr16
xchg
in
adc
and
dec
adc
adc
dec
xchg
inc
ret
adc
lods
or
ss
jg
mov
sbb
add
fdiv
je
or
mov
aaa
jp
stos
popa
adcb
adc
jp
mov
or
in
arpl
jns
fmuls
jmp
pop
jae
nop
bound
adc
out
inc
xchg
adc
mov
stos
mov
call
insb
popf
int3
add
mov
std
aaa
loope
subl
loop
cmp
lahf
lcall
push
xchg
dec
outsb
and
jl
push
push
add
jnp
shl
lods
sub
and
inc
cmp
repz
fdivs
loope
mov
and
lea
test
add
ds
push
mov
into
or
jne
movl
aad
hlt
inc
outsl
outsl
pop
xchg
mov
or
pop
push
iret
mov
or
jne
sub
mov
vmread
xchg
cmp
cld
test
push
inc
xchg
pop
add
das
xor
sar
imul
sbbb
xchg
sti
push
int
leave
lcall
add
pop
outsb
aam
mov
mov
inc
sbb
loop
aaa
inc
je
mov
pop
aam
mov
push
cmpsl
fistl
inc
test
aaa
and
sahf
mov
jns
pop
std
cmp
aaa
mov
cmc
jp
pop
test
cmp
mov
outsb
mov
fstpl
inc
dec
lret
repz
pop
into
addr16
xchg
or
fmull
shr
ss
orl
jecxz
add
cmpsb
int
xchg
cmp
mov
fdivr
cmpb
in
pop
out
mov
xchg
enter
das
dec
cli
loope
and
repnz
and
jmp
mov
stos
push
pop
scas
pop
sahf
mov
addr16
sub
hlt
pusha
inc
arpl
jbe
mov
xor
in
lret
idivb
mov
xor
lcall
push
push
xchg
xor
push
xor
test
lahf
cmp
or
int
dec
sub
or
cmc
repnz
cmp
pop
je
xchg
lods
insb
xchg
ret
push
daa
cltd
pop
cmp
aad
in
xchg
cmp
sub
and
jmp
adc
sub
or
jp
xlat
xlat
push
addr16
aam
test
sbb
mov
pop
repz
mov
pop
lock
push
adc
shll
cmpsb
scas
pop
cmp
push
push
imulb
inc
nop
mov
and
fldl
out
cld
sti
stos
sbb
in
pop
inc
bound
jns
mov
mov
xchg
mov
push
pop
fildll
sbb
push
pop
enter
jnp
inc
shl
fcoml
pop
jmp
hlt
jnp
sbb
jp
pop
pop
jle
inc
call
mov
mov
js
fdivp
mov
lods
dec
pushf
or
out
mov
cmp
pop
les
out
je
jae
pop
sub
push
lcall
and
leave
mov
adc
mov
insb
sub
pop
cmp
pusha
pop
jmp
push
xchg
xchg
mov
jo
lcall
aam
lock
push
scas
adc
mov
or
dec
mov
aad
jae
movsl
dec
cli
aam
pop
scas
shrl
aaa
cmpsb
aas
pop
add
sarl
mov
mov
adc
mov
cmp
daa
pop
add
xor
ljmp
repz
shlb
add
dec
jbe
movsl
fisttps
test
in
jmp
cmp
jae
icebp
dec
push
sub
pop
lds
or
cltd
adc
jns
or
sub
xor
fdivl
test
testb
cmove
shr
lahf
imul
cmp
xor
jg
and
mov
insb
pop
add
mov
xor
addr16
inc
lock
xchg
out
xchg
mov
xchg
adc
sub
ret
mov
and
adc
push
mov
lret
push
lahf
inc
mov
push
and
lds
loopne
lret
dec
ds
sub
jle
icebp
jge
aas
mull
scas
inc
movsl
sbb
pop
sti
mov
and
ficompl
jbe
aad
inc
rorb
in
loope
and
xchg
jmp
jbe
call
je
push
lret
test
in
adc
gs
mov
or
sti
mov
std
in
or
xchg
sub
scas
push
mov
vpunpcklqdq
cmc
or
loope
push
stos
jns
pop
push
xchg
testl
in
sti
cmpl
scas
sbb
mov
sbb
cltd
neg
repnz
cwtl
jl
jle
mov
mov
add
movl
insl
call
lods
dec
pop
and
mov
leave
test
adcb
xchg
loop
aas
fs
std
in
or
fcoml
cli
inc
aas
mov
lea
add
push
imul
les
push
test
nop
lcall
mov
das
dec
mul
push
test
xchg
jno
adc
les
mov
xor
xor
cltd
rolb
jmp
loope
clc
inc
leave
into
pop
scas
adc
pop
xor
dec
addr16
inc
dec
lea
es
das
dec
mov
cmp
lcall
mov
jge
or
fidivrl
jbe
nop
xor
mov
or
xchg
loop
mov
xor
jecxz
or
xchg
mov
and
push
and
in
inc
mov
fildll
dec
dec
inc
mov
sti
popf
push
rcrl
jb
push
sar
add
adc
mov
pop
inc
leave
imul
adc
inc
les
mov
mov
data16
adc
adc
adc
cmpb
xor
cmp
pop
dec
jne
push
fidivl
scas
lret
fs
xlat
xor
popf
sar
push
adc
fnstenv
mov
jnp
outsl
jg
sbb
mov
inc
mov
push
sbb
sbb
or
jle
test
out
sub
or
cmpsb
push
mov
jbe
pop
repnz
shl
or
std
scas
xchg
sbb
inc
inc
cs
or
sbb
aam
pop
push
mov
mov
pop
add
out
jo
popa
shlb
dec
push
lock
jecxz
leave
fdivr
jbe
enter
jnp
lret
sarl
cs
pop
adc
das
insb
lods
lock
cs
xchg
int3
push
dec
pop
cmp
test
cmp
rep
lock
push
cmp
ja
es
lcall
stos
xchg
mov
jns
leave
pop
xchg
cs
test
fcom
adc
shlb
into
xlat
or
and
xor
popa
js
cltd
and
rep
cli
mov
loope
xchg
inc
xchg
mov
out
add
xor
fsubs
add
fistpll
jb
lret
enter
push
xor
out
insb
inc
xchg
ret
dec
pop
clc
xchg
cmp
add
rcl
jmp
or
or
xor
sti
std
push
or
cld
add
pusha
and
push
cmp
loopne
dec
cmp
cld
rdtsc
sbb
dec
shll
push
cmp
xchg
subb
in
outsb
leave
into
pop
out
xchg
add
xor
pop
mov
pop
mov
dec
inc
add
icebp
jnp
lods
in
xlat
rclb
push
mov
cwtl
cmp
frstor
into
pop
pop
add
movsb
loopne
lds
jp
pop
cmp
and
add
daa
inc
ljmp
xor
xor
loopne
inc
inc
imul
xor
mov
mov
mov
sub
jl
sbb
jmp
int3
stos
imul
insb
andl
xor
enter
in
pop
jae
lea
mov
dec
fst
and
push
jp
js
test
mov
xchg
icebp
xchg
inc
push
stos
mov
loopne
jl
popf
pop
fmull
pushf
jg
jae
push
dec
add
mov
repz
inc
and
jae
jno
jbe
dec
adc
gs
or
pop
in
or
pusha
or
push
and
mov
push
es
cs
out
jo
dec
xchg
cltd
flds
les
fstl
or
lea
ja
int3
mov
enter
in
or
jle
pop
loopne
lret
lds
cltd
or
test
sub
and
jmp
or
mov
icebp
aas
rol
hlt
rorb
mov
or
dec
mov
jp
js
push
imul
mov
sti
stc
add
aad
fucom
pop
jne
inc
enter
popf
aam
incl
xor
js
and
jecxz
cmpsb
xchg
fiadds
or
cld
enter
in
lret
bnd
sub
clc
cmpsb
out
sbb
fisubs
imul
xlat
mov
orl
adc
mov
push
push
mov
and
aaa
jecxz
and
or
cmc
ror
sbb
popf
js
ret
lods
es
mov
push
mov
mov
ret
xchg
xbegin
and
ret
insb
cmp
push
out
push
mov
popf
rorb
sub
lods
adc
pop
or
lcall
ds
cmp
mov
push
sub
xchg
adc
inc
scas
test
fwait
sbb
jp
repnz
xchg
mov
arpl
adc
test
bound
daa
push
cmpsb
push
out
cmp
les
add
out
push
mov
push
test
xchg
das
lock
jb
iret
adc
sbb
lret
adc
stc
xchg
inc
mov
mov
inc
popf
ret
mov
mov
aas
psubusw
xor
add
sarb
adc
in
dec
or
mov
cld
adc
jne
clc
sbbl
cmp
pop
mov
cmp
in
orl
leave
mov
loope
js
gs
cmpsl
mov
pop
sub
aaa
pop
cmp
movsl
push
fcomps
or
lods
inc
mov
jl
mov
repnz
iret
cmpl
jecxz
or
aaa
mov
mov
mov
out
jo
jns
outsb
mov
aad
mov
insl
xchg
fisubl
shrb
mov
mov
cmpsl
hlt
sbb
xchg
loopne
das
out
sub
push
jg
and
jae
cmp
mov
fdivrp
jg
xchg
pop
dec
and
arpl
adcb
dec
mov
leave
or
dec
adc
inc
sbb
fistps
call
xchg
mov
pop
shlb
sub
jnp
sarb
inc
jge
mov
call
mov
cli
adc
push
or
push
sbb
fs
adc
rorl
push
mov
mov
sbb
test
pop
jne
mov
xchg
mov
std
rcrb
inc
xor
cld
dec
lods
test
cmc
push
adc
add
xor
adc
ret
xchg
inc
js
jge
mov
sti
inc
pop
out
es
imulb
aas
mov
stc
mov
xchg
jns
and
icebp
inc
dec
aaa
or
pop
pop
mov
arpl
cmp
jg
pop
mov
jecxz
nop
call
nop
and
ljmp
push
lock
jbe
and
rolb
or
xchg
fnstcw
stos
push
pop
bound
push
jmp
pop
popf
inc
jae
xchg
dec
add
test
push
pop
jmp
test
adc
xchg
addr16
ja
xor
rcrl
popf
clc
out
pop
fs
lret
mov
push
cmp
js
cld
icebp
in
cmp
pop
ret
arpl
adc
pop
aas
push
push
push
jp
test
and
cld
push
or
movsb
push
or
notb
popa
jne
leave
jo
xchg
dec
xchg
sub
test
testb
int
and
push
pop
jge
xchg
mov
lods
jl
je
outsb
push
and
mov
pop
std
sbb
or
mov
or
push
enter
or
lea
les
lds
cwtl
mov
mov
mov
and
xor
sbb
dec
pop
xor
jne
adc
mov
jb
pop
mov
sub
sbb
cltd
lret
lea
fsubrs
fnsave
mov
pop
sbb
adc
sub
subl
mov
repz
sbb
leave
xor
int
movsb
lcall
lahf
jns
cmp
dec
jle
dec
cmp
add
cmpsb
shr
xchg
pop
or
incl
lret
fwait
sub
movsl
call
sub
int3
mul
mov
pop
fs
fsubrs
fisubrl
je
sub
pushf
fidivrl
mov
sub
sub
bound
outsl
imul
ss
lret
loope
divl
pop
mov
notl
std
xor
or
loopne
inc
lea
mov
pusha
xchg
cs
push
sub
fwait
notl
push
gs
sub
stc
into
inc
push
movsl
xchg
xor
and
or
mov
lods
adc
fmul
sbb
cmp
imul
pop
adc
enter
xchg
xchg
hlt
inc
lret
mov
out
filds
and
in
sub
and
push
daa
fildl
int3
cmpsl
mov
xchg
push
jecxz
or
push
jnp
cmpsl
cmpsl
push
push
cld
xchg
aaa
mov
iret
xor
lret
pop
jl
xor
xor
adc
mov
push
xchg
jnp
xor
sar
jl
sbb
push
stos
bound
ret
and
out
ljmp
rorb
aad
mov
mov
cwtl
int3
push
pushf
jno
inc
push
invd
icebp
xor
push
or
dec
mov
xor
das
inc
mov
ret
or
sub
aaa
adc
mov
scas
sbb
xchg
dec
mov
psraw
daa
ret
fiadds
rclb
pop
bound
adc
in
fldenv
jns
lods
push
add
inc
sub
and
dec
adc
pop
mov
pop
cmp
mov
sbb
adc
pop
shrb
imul
push
or
mov
es
fwait
add
nop
jne
cmc
mov
nop
sub
es
stc
repnz
rcl
push
out
sub
out
shll
cli
mov
cmp
in
cld
xor
add
in
cmp
dec
adc
sbb
icebp
jmp
imul
mov
jge
and
sahf
push
dec
bound
pop
pop
mov
pop
and
inc
divb
insl
fnstsw
gs
fisubrs
dec
mov
cmp
out
inc
jnp
ret
stos
ret
fs
sbb
jnp
lea
pop
pop
js
subl
cwtl
jl
mov
jg
in
sarl
mov
sub
ss
push
idivb
inc
aaa
jns
adcb
aad
jmp
jae
test
add
pop
mov
push
push
cmp
imul
lea
mov
out
ret
ror
call
and
ret
movb
xchg
and
sbb
ljmp
add
repz
pop
out
lods
inc
sbb
ss
inc
sbb
mov
ss
sbb
inc
stos
sahf
repz
out
sar
sbb
ret
inc
mov
lret
sarb
pop
mov
in
cmp
jb
xor
cltd
add
movsb
cmp
jp
push
je
outsb
xchg
stc
stos
out
cmp
lret
and
ret
stos
and
bound
push
in
sar
sub
loop
aad
cld
inc
cmp
in
rol
dec
lret
pop
push
mov
sub
cmpsl
cltd
dec
xor
aaa
push
int
push
or
sub
sbb
daa
jne
fs
rcrl
lret
cmp
or
cwtl
xchg
push
jb
aaa
dec
out
hlt
imul
cmc
je
sbb
fbstp
imul
sti
push
nop
fucom
cli
inc
repz
test
ret
cmpb
pop
push
rolb
lret
push
or
adc
xor
lahf
je
add
push
stos
cs
jg
xchg
push
js
negl
push
fsubs
sbb
mov
jns
cmp
ljmp
gs
sbb
out
dec
insb
mov
out
js
and
pop
push
mov
pop
in
pop
xor
adc
cmp
sbb
aad
adc
pop
mov
jo
sbb
xchg
cmpsb
mov
adc
es
pop
lds
mov
outsb
sub
mov
dec
jmp
popa
outsb
stos
sub
sti
pop
jmp
mov
movsl
sub
jae
lods
enter
sub
pushf
sub
or
xchg
in
mov
test
adc
xor
sub
push
jno
pusha
jg
lret
sbb
xchg
jge
sbb
sbb
loop
iret
lds
sub
mov
cmp
movswl
ud0
cmp
adc
mov
cwtl
fs
jl
rcr
and
inc
fisubrs
and
vcvtpd2psx
fisubl
sahf
lahf
int
enter
fsts
mov
mov
inc
mov
mov
stos
fxch
lods
dec
pusha
je
jge
sbb
lods
call
movsl
xor
test
xlat
test
adc
pminub
loope
adc
xor
insl
popa
xor
push
mov
aad
or
cmpsb
inc
daa
jecxz
ja
nop
mov
cmp
ror
push
add
sub
fcmove
jmp
repnz
cmp
sar
test
lods
mov
outsb
mov
pop
lret
adc
aas
pushf
scas
scas
nop
and
xor
scas
push
mov
xor
rcll
or
adc
out
xchg
cltd
xchg
lcall
notb
jle
jne
jmp
pop
xor
mov
mov
cwtl
xchg
add
push
mov
in
and
je
cmp
jmp
fdivs
leave
lea
test
push
push
mov
and
xor
adc
xchg
inc
push
pop
mov
add
in
cmovg
and
or
cltd
xchg
pop
xchg
mov
adc
xor
nop
inc
jge
in
mov
andb
and
dec
dec
notl
and
movsl
rorb
fs
and
ficompl
or
icebp
ret
lret
jge
inc
xchg
sahf
fildl
sub
inc
fimuls
jmp
xor
test
fistps
test
adc
scas
sub
cmp
lret
cmp
push
push
aad
and
insb
into
sbb
jecxz
ret
xor
xor
lods
daa
scas
xchg
xchg
sub
dec
jg
push
fbstp
dec
insb
test
pop
add
rcll
or
mov
inc
je
xor
or
negl
mov
sbb
ret
and
lcall
int3
and
sub
clc
inc
stc
imul
mov
and
adc
cmp
cmp
imul
xor
out
or
push
dec
jnp
insb
imul
out
cwtl
sub
test
xchg
inc
shll
fyl2x
in
lock
cmpsb
xchg
mov
push
sub
stc
out
std
repnz
outsl
pop
xor
and
inc
shlb
imul
aam
pop
inc
jbe
cltd
xchg
xor
xorl
mov
movsb
ja
aam
in
lret
adc
xor
loop
mov
sbb
rcrb
cmp
pop
xor
in
ljmp
xchg
cmpsl
dec
bound
mov
mov
cmp
sti
and
pop
cmc
xchg
cmp
inc
scas
nop
jle
dec
mov
cwtl
mov
out
push
xor
inc
sbb
mov
negl
mov
lcall
loopne
popa
jno
imul
ss
push
out
and
jns
dec
scas
sahf
pop
mov
cmp
sbb
pushf
add
out
and
sub
les
cmp
call
push
enter
fsubrp
adcb
pop
stos
arpl
cwtl
faddl
inc
jle
pop
je
test
ret
test
mov
fcmovnu
jge
fstl
xchg
shrb
or
in
aas
test
cld
jae
sti
cwtl
in
xchg
cld
xchg
pushf
in
rcll
sbb
push
cwtl
jge
inc
ret
in
cmp
push
pop
inc
loopne
or
sub
cmp
outsb
mov
mov
jne
test
jl
push
shl
insb
movsl
push
and
mov
sarb
mov
and
lret
cmp
and
cmp
jecxz
flds
ds
cs
jl
movsl
out
inc
push
outsb
outsl
sbb
xchg
ss
sub
mov
loop
sub
icebp
fiaddl
sbb
leave
aas
mov
jo
and
xor
movsl
repz
dec
rorb
adc
xchg
test
dec
loopne
jbe
test
jle
mov
mov
mov
lret
inc
cmp
add
inc
cld
std
clc
or
aas
mov
cs
sbb
adc
mov
sub
sbb
xor
enter
mov
inc
and
mul
ja
rclb
insl
xchg
jle
in
sti
dec
push
addr16
pop
pop
in
dec
mov
dec
lahf
inc
mov
inc
out
cmpb
jb
push
add
cli
out
mov
sti
mov
arpl
lcall
arpl
xor
cwtl
out
mov
insb
lcall
adc
loopne
cmp
movsb
ret
outsb
out
xchg
pop
popf
enter
lret
lods
enter
repz
xor
dec
repz
in
push
cmp
enter
mov
pushf
mov
outsl
mov
lcall
pop
jmp
fbld
pop
push
aam
out
ljmp
mov
and
and
adc
movsb
ljmp
xchg
xchg
pop
stos
adc
sub
cmpb
lea
cmp
fldl
pushf
movsl
mov
dec
enter
arpl
lahf
test
adc
sub
push
xlat
inc
movsl
lds
push
push
int3
push
scas
out
mov
adc
push
push
aas
cld
int3
lahf
pop
pushf
enter
or
push
adc
cld
clc
mov
daa
pop
iret
mov
pop
les
test
inc
mov
sbb
push
push
and
inc
mov
xorb
clc
push
loop
xchg
pop
and
xor
mov
pusha
xor
fsubs
pop
and
lcall
icebp
or
cmp
mov
subl
mov
call
into
push
mull
xchg
test
pusha
cmp
fwait
int
aaa
sbb
dec
dec
adc
mov
jbe
in
shll
ja
xor
cmpsl
out
or
jl
or
pop
fs
sbbl
test
cmc
mov
lcall
push
sti
mov
fnstsw
push
mov
imull
call
dec
or
into
insl
push
push
cltd
and
and
aam
adc
xor
inc
imul
lds
sbb
sbb
icebp
es
insb
push
lret
idivb
js
clc
jns
jmp
loopne
push
and
xor
sbb
testb
jo
sbb
pusha
pop
or
outsl
stc
add
xchg
lcall
out
adc
arpl
ja
std
jbe
pop
inc
out
hlt
cli
cli
mov
pushf
cmp
enter
idiv
xchg
push
inc
clc
jle
pop
adc
aaa
push
mov
jge
sub
dec
inc
push
mov
into
mov
push
adc
adc
fsubrs
mov
stos
adcl
mov
cmp
jo
test
dec
inc
xchg
cmp
sti
scas
mov
jo
or
cmpsl
adc
loope
mov
insl
push
xor
gs
adc
xchg
movsb
inc
xor
fmuls
jno
das
add
cmp
inc
int3
scas
or
scas
ss
out
stos
mov
add
xor
mov
jge
stc
inc
mov
pop
adc
cmp
xor
mov
sbb
in
inc
jae
mov
aam
or
push
add
out
mov
and
push
pop
and
pop
xor
push
cmp
add
push
xchg
cli
push
cmpsb
mov
cmpsb
pop
jle
dec
adc
mov
xchg
mov
les
loope
xchg
icebp
mov
test
jp
sahf
xchg
sub
mov
push
into
dec
inc
divl
push
ficoml
inc
dec
dec
lcall
jl
insb
std
pop
or
shr
popf
sti
sub
leave
sbb
jle
add
lahf
repnz
shll
pop
clc
xlat
xchg
push
push
sub
insl
sbbb
jb
lahf
pop
push
mov
loopne
mov
xor
xor
xchg
stos
xchg
sub
out
test
ffree
gs
inc
cmpsb
jl
dec
fwait
jns
mov
pop
lock
jne
lock
mov
mov
jb
jecxz
sbb
add
mov
jle
in
cmp
mov
hlt
and
jp
mov
push
cs
stos
rclb
adc
jo
out
out
cmpsb
jecxz
inc
mov
cmp
lds
leave
je
lea
cmp
fldl
stc
mov
inc
sbb
push
mov
inc
loope
mov
jns
leave
inc
sti
mov
fidivs
jne
out
sbb
sub
mov
mov
call
push
add
repz
or
push
loope
cltd
mov
mov
aad
or
jg
jg
sarb
jb
jns
sbb
dec
in
sbb
es
mul
outsb
and
fldl
fiadds
xor
cmpsl
pop
lods
sub
lock
imul
cmc
add
lods
mov
insb
or
cmp
and
xchg
cmpsb
adc
dec
pop
lcall
mov
or
int
xchg
in
dec
cltd
int
movl
fcomps
adc
enterw
mov
adc
mov
dec
mov
or
or
arpl
std
xor
filds
repnz
cwtl
iret
mov
xchg
mov
into
mov
int3
rcrb
inc
inc
std
adc
aaa
stos
mov
data16
aas
fsubl
mov
mov
inc
jmp
movsl
dec
orb
lods
lcall
test
jne
pop
pop
out
pusha
mov
lea
add
pop
jle
in
repz
dec
pop
sarb
call
ret
and
ss
loop
cmpsl
push
pop
push
and
movsb
pop
lods
sub
mov
sub
pop
unpcklps
ja
jns
pop
or
fsubrs
mov
in
popf
fimuls
sub
ja
xchg
xor
fbld
dec
pop
dec
sbb
pushf
push
pop
xchg
idivb
pushf
cmpl
insb
leave
xor
movl
push
bound
lods
cmp
enter
fidivrl
sbb
and
or
insb
xchg
adc
push
aam
mov
iret
add
daa
xchg
pop
dec
mov
mov
dec
loope
sahf
pop
or
pop
fs
and
out
orb
pushf
jmp
outsl
jecxz
clc
push
shlb
dec
dec
test
into
add
xor
bound
nop
and
add
mov
mov
and
fisubs
push
jo
adc
and
sub
fistl
mov
cmp
jb
rcrl
mov
jne
mov
push
jnp
ret
xchg
mull
adc
sub
leave
mov
pop
out
ss
stos
jecxz
mov
sbb
mov
ret
sti
mov
sti
mov
movaps
xchg
push
jp
pushf
and
push
cmp
call
sahf
aaa
fs
sbbl
shrb
inc
test
mov
clc
push
mov
repnz
leave
jmp
push
test
dec
dec
lcall
aas
dec
daa
mov
call
lock
fistps
and
rcll
cli
lock
sub
or
add
pop
mov
adc
and
sahf
xchg
pop
ja
xor
loope
pop
idiv
leave
fbld
jns
icebp
jmp
or
test
sub
adc
stos
sbb
idiv
fisubs
and
ret
jb
mov
sahf
aas
fstpt
mov
mov
roll
mov
enter
gs
test
sub
mov
mov
push
pop
dec
insl
push
mov
movsl
pop
xor
sub
cmp
sbb
shrl
test
cld
pop
jg
aaa
cli
loop
jp
shl
ficoml
leave
add
cmp
dec
or
inc
pop
push
into
sub
pop
inc
movsb
test
sti
mov
jle
push
js
into
or
sub
or
mov
adc
enter
rclb
adc
lods
add
cli
pop
fnop
xchg
nop
jmp
das
jle
mov
pop
or
daa
xor
out
xor
sub
insb
scas
shll
movsb
mov
mov
jge
dec
rorb
sahf
popa
pop
adc
rclb
cmp
mov
arpl
stc
dec
mov
push
insb
std
lods
outsb
popa
xchg
jecxz
sbb
shlb
ss
daa
cmp
cwtl
lods
adc
push
mov
arpl
jae
xchg
add
mov
pop
outsl
pop
and
out
jbe
mov
jae
iret
loop
cld
js
imul
jae
inc
pop
loop
icebp
jbe
stos
clc
icebp
out
sti
mov
push
push
lret
fsubrl
orl
sahf
mov
push
xchg
push
mov
jg
xor
idiv
rorl
std
cmp
mov
out
jb
push
xchg
sahf
fisttpll
xor
lea
jl
sbbb
rcrb
cli
icebp
mov
loop
jmp
movb
or
sbb
int
and
sbb
jge
ficomps
or
jg
cmpsl
cltd
in
mov
stos
mov
lods
mov
movsb
into
pop
cmp
jmp
xchg
xor
fcomi
and
ds
or
divl
dec
popa
xchg
clc
xchg
sbb
lds
mov
push
jb
cmpsb
int
sub
sbb
push
loope
mov
je
sub
cmpsb
and
es
rcrb
mov
cld
and
sub
lods
scas
push
aam
icebp
clc
mov
mov
stc
and
xchg
movsl
jae
inc
pop
adcb
fwait
cmp
lds
and
add
push
cmp
sub
sub
push
adc
push
xchg
loope
jae
out
lret
arpl
push
shll
sub
icebp
or
xor
dec
rorl
aad
jns
loope
inc
dec
fisubs
mov
imul
mov
add
dec
jl
adc
outsl
addr16
pushf
in
mov
cmp
add
ret
out
in
sub
fdivs
pop
pop
add
das
idivl
pop
and
mov
bound
jmp
dec
outsl
clc
inc
cmpsl
shrl
pusha
sub
cmc
scas
cld
mov
in
sti
das
mov
mov
pop
jnp
cmp
mov
pop
xchg
ja
roll
sbb
fldcw
and
inc
mov
es
jmp
xor
fiadds
jno
xlat
cmp
cld
jo
sub
sbb
aad
stos
cld
inc
adc
add
and
xchg
xchg
mov
adc
mov
testl
loop
loopne
sub
jge
xor
std
mov
arpl
ja
int3
jl
cltd
add
xchg
cld
test
xchg
jno
or
adc
fucomip
cwtl
gs
fmull
and
es
or
mov
xor
xchg
dec
mov
jg
inc
sub
shll
insl
lret
pop
scas
cmp
xchg
fstl
and
pusha
aad
je
aad
and
adc
push
clc
push
or
add
jo
lock
fimuls
loopne
sbb
jo
adc
mov
mov
jne
adc
xchg
stc
or
cmp
push
push
ret
lds
decb
or
mov
xor
mov
imulb
sub
push
popa
inc
mov
jae
or
inc
sbb
sbb
cld
nop
cs
xor
rorl
lcall
push
nop
loop
test
sbb
rorl
jae
outsb
pop
xor
jno
shrl
xchg
cmp
pop
mov
mov
repnz
mov
adc
int3
inc
jg
jno
fisubs
pop
or
movsb
sub
and
lds
nop
sbb
popf
dec
mov
xor
push
mov
cmp
sbb
sarl
inc
cmp
push
ja
add
xor
or
int
mov
xchg
addr16
stos
cli
mov
out
arpl
jl
sub
fnsave
lcall
std
repz
mov
mov
inc
fnstenv
test
lret
inc
xchg
lods
outsb
enter
sbb
fmuls
pop
pop
out
mov
pop
int3
pop
xchg
shrb
adc
jb
push
imul
xor
scas
dec
mov
rorb
mov
push
gs
or
inc
cmp
push
fstp
pusha
xchg
shr
iret
add
nop
xchg
arpl
cwtl
and
inc
adc
mov
jns
mov
jecxz
or
and
cwtl
aad
and
es
std
mov
or
les
and
jmp
mov
sub
mov
mov
mov
mov
dec
roll
jge
mov
loopne
into
insl
mov
cld
push
test
sbbb
push
into
mov
mov
sub
sbb
mov
in
add
dec
pop
ds
fidivl
es
fmull
icebp
fcomps
in
adc
push
jns
lds
push
pop
mov
sub
add
les
jge
xchg
flds
cmp
or
subl
jo
adc
jl
dec
cmp
push
shrb
cmp
decb
imul
jns
loop
inc
jae
sub
cmp
mov
xchg
testb
lret
repnz
mov
idivl
mov
cmp
xor
cmp
mov
arpl
add
pop
pop
fstps
sbb
add
mov
jnp
push
xor
jge
out
dec
push
cmp
jl
inc
add
adc
ss
mov
mov
pop
aaa
jno
mov
xlat
push
hlt
fsubrl
imul
mov
push
push
jg
lods
mov
xchg
push
stos
jle
outsl
ret
mov
adc
mov
leave
jle
adc
mov
cmp
adc
mov
sub
push
sbbb
dec
push
lret
jae
jne
fs
pushf
in
sub
pop
movsb
add
and
push
mov
aad
pushf
in
push
jl
in
and
stc
push
mov
lods
xchg
pop
jo
popa
bound
mov
jl
mov
inc
jmp
pop
or
movsl
inc
aaa
mov
sub
jae
sbb
xor
push
push
xor
pop
dec
sbb
stos
push
adc
sub
mov
inc
push
cmp
je
push
and
imul
aas
pop
into
pop
into
imul
sbb
mov
sahf
fcmovnb
pop
loope
mov
outsl
and
xchg
xlat
test
mov
xlat
imul
xor
aad
rol
insl
pop
nop
mov
aaa
je
or
jmp
inc
pusha
cltd
add
test
mov
mov
lods
dec
sbb
mov
pop
mov
or
add
cmp
dec
inc
scas
mov
or
or
jle
les
imul
mov
movl
loope
xor
xchg
and
ss
mov
lock
lcall
test
xchg
push
outsb
sub
out
push
stos
clc
mov
leave
cmp
imul
jmp
arpl
outsb
jle
mov
test
aas
clc
sbb
imul
in
nop
xchg
xor
into
and
jecxz
inc
mov
pop
xchg
xchg
outsb
roll
pop
push
iret
loopne
sub
inc
fisubl
mov
test
mov
ret
cmp
push
jb
pop
testl
and
repnz
add
imul
jmp
and
fcoml
sahf
adc
loope
sub
mov
out
mov
cmc
in
dec
inc
pop
mov
dec
fisttps
mov
sar
jb
dec
lcall
adcb
sbb
mov
pop
call
icebp
sbb
push
or
test
insb
outsl
outsb
clc
cltd
lcall
add
arpl
mov
lods
cs
xor
je
cwtl
adc
in
std
outsb
loopne
add
es
test
imul
addl
aad
mov
push
push
lods
push
push
ja
inc
push
mov
dec
jbe
pop
xchg
mov
cmpsl
cmp
pop
dec
outsb
fcomip
push
sub
mov
das
xchg
addr16
add
roll
xchg
adc
xlat
hlt
mov
jecxz
mov
sub
sub
loope
add
jg
test
sti
leave
sub
aam
pop
xor
nop
loope
mov
pop
pop
imul
lock
xor
out
ljmp
loop
inc
dec
cmp
ja
shrl
aaa
xchg
xor
push
rcl
outsb
sub
inc
cltd
adc
je
push
push
sub
pop
shrb
frstor
xor
aam
dec
mov
dec
or
mov
and
shlb
sub
push
pop
fsubl
mov
shrb
push
pop
and
cmpsb
int3
andl
sub
imul
sub
mov
stc
das
imul
adc
mov
mov
xchg
sub
sbb
movsl
push
dec
mov
jns
ljmp
cmp
repz
or
sub
dec
adc
pop
mov
sti
xchg
dec
xorl
psraw
xorl
push
dec
in
in
add
iret
test
or
xor
jmp
fcomps
xchg
sar
dec
movsb
hlt
mov
fs
inc
jle
fsubs
fildl
jecxz
lods
mov
xlat
lahf
mov
dec
xor
xor
fisttpl
ja
jae
lret
add
loopne
inc
je
orl
sub
cmpsl
mov
fiaddl
adc
jb
je
mov
pop
outsl
stc
pop
ja
mov
aas
cs
and
fldl
and
movsb
aad
imul
dec
movsl
xor
add
mov
aas
mov
push
out
xlat
iret
sub
call
test
ss
jmp
mov
xor
scas
repz
xchg
xchg
icebp
ror
fwait
adc
adc
and
mulps
mov
add
xchg
push
mov
outsl
dec
out
daa
lods
xchg
outsb
addr16
fcomps
fstpl
cs
inc
mov
test
out
addr16
xor
repz
cmc
mov
xor
popf
xchg
lret
inc
insl
jge
cmpsl
mov
and
aad
cld
cmc
stos
xor
xchg
cld
or
and
mov
cld
adc
pop
mov
and
cs
bnd
fwait
imul
mov
daa
aas
mov
sbb
lods
rcrl
mov
xor
dec
cmpsb
xchg
in
dec
pop
outsb
cmpsb
sti
jl
mov
push
dec
mov
mov
push
scas
mov
imul
push
loopne
nop
std
les
cmp
sub
leave
mov
in
je
mov
jmp
or
lret
test
outsl
lods
xor
loopne
iretw
aaa
cmp
cld
and
or
dec
sub
add
cmp
mov
fxch
adc
rcrb
adc
ja
mov
jl
mov
ret
lahf
outsb
popa
data16
jg
inc
inc
or
cmp
rcll
cmp
sub
lcall
xchg
add
jno
faddl
sti
lods
and
filds
into
sub
mov
jns
jp
inc
xlat
mov
iret
rcr
or
insl
sub
movsl
xlat
int3
test
aam
stos
or
test
add
sbb
cld
lret
das
xchg
loop
mov
sub
pop
pusha
hlt
cmp
std
adcb
sub
outsb
push
cld
ret
fistps
inc
dec
ss
daa
pusha
stos
or
lock
fisttps
and
in
arpl
jmp
sub
cmc
fistpll
je
mul
dec
fwait
in
mov
mov
adc
ja
inc
add
lock
cli
mov
xchg
fisubrs
lahf
push
xchg
jbe
push
cmc
mov
cli
and
mov
or
in
push
pop
aas
movsl
lods
push
addr16
inc
das
adc
imul
les
lret
mov
popf
mov
scas
insl
adc
scas
mov
jle
inc
icebp
int
mov
adc
add
sahf
out
inc
xchg
jle
call
add
int
test
inc
sbb
sti
xchg
jnp
mov
dec
insb
clc
les
mov
pop
leave
fwait
xchg
push
adc
pop
xor
xchg
ljmp
jnp
test
pop
or
push
push
cmpb
cmp
arpl
fsub
push
mov
nop
or
mov
pop
pusha
addr16
std
mov
sbb
mov
mov
inc
insb
mov
popa
int
cmpsl
aaa
ret
mov
lods
push
insb
movsb
jle
push
and
sti
dec
jno
and
cmp
pop
add
sub
push
repz
jne
movsb
mov
cmp
add
scas
jle
jmp
subb
mov
sbb
fisubs
in
push
pop
scas
in
test
or
adc
ds
sbb
inc
ja
or
out
xchg
xchg
push
push
out
push
inc
pop
out
cmpsb
pop
enter
pusha
xchg
hlt
push
insb
push
or
fiaddl
fisttpl
lahf
stc
test
pop
xchg
int
arpl
dec
inc
ret
sahf
insl
adcl
test
sti
nop
repz
aad
push
rep
adc
mov
pop
scas
xor
adc
pop
pushl
test
int3
test
icebp
aam
jp
xorb
jno
sti
pop
inc
negl
jb
daa
fwait
popf
sbb
xor
dec
push
or
rcl
cmp
dec
jmp
test
xchg
ss
call
int
ficomps
mov
imul
inc
xor
stc
ljmp
enter
and
loope
lds
mov
jmp
loop
or
adc
shlb
hlt
divl
es
jns
inc
daa
cmp
fdivrl
int3
or
mov
sub
mov
int3
push
lcall
lods
sbb
jae
pop
xchg
sub
imul
movl
jle
xchg
dec
repnz
push
adc
pop
and
push
push
shrl
out
sbb
pop
lret
inc
pushf
cwtl
ss
cwtl
insl
jge
fisttps
fcomi
adc
enter
in
push
and
cmc
cmp
cmc
movsb
rclb
xorb
pop
inc
stos
jmp
call
xor
arpl
cmpsb
push
dec
insl
push
out
lret
stos
lds
jp
mov
push
add
sub
mov
xchg
inc
mov
mov
mov
sub
lods
jns
or
jns
ret
lods
adc
or
test
jbe
cmp
jmp
sbb
pop
fimuls
or
mov
pusha
mov
popf
in
cld
cmp
mov
loope
pop
xor
adc
pop
dec
or
in
iret
jne
scas
lret
and
or
aas
imull
push
jnp
jae
es
pop
xchg
jge
shll
mov
rclb
test
or
ljmp
xor
aam
sub
cs
mov
loop
xchg
push
mov
inc
mov
lods
pop
jnp
xor
push
jecxz
mov
ss
adc
mov
jge
inc
repz
mov
ds
popa
add
and
jbe
inc
inc
out
mov
mov
aaa
enter
cli
xchg
daa
pop
pop
cmp
or
push
scas
popa
push
scas
add
les
cmp
stc
inc
loopne
or
sbb
pop
jmp
mov
addr16
add
xchg
sbb
je
je
lds
dec
aaa
mov
xrelease
xchg
push
ficomps
lret
pop
mov
leave
xor
adc
int
mov
imul
insl
push
rcrl
jl
or
movsl
dec
mov
cmp
sti
daa
iret
push
enter
lds
mov
add
mov
out
scas
inc
je
fadd
mov
stos
dec
stos
jecxz
cmp
popa
inc
inc
push
inc
push
lret
dec
pop
stos
negb
cli
xchg
lcall
cmp
sti
sti
cmp
pusha
xor
sub
mov
pop
or
xlat
mov
leave
lock
idivb
rclb
push
into
adc
loope
pop
xchg
scas
pop
scas
icebp
jb
jne
pop
daa
iret
cmp
punpckhdq
pop
mov
ljmp
cmp
jg
inc
sti
mov
pop
shl
loopne
inc
jge
mov
xchg
inc
dec
outsl
les
mulb
and
and
xchg
inc
les
xor
mov
enter
push
xor
add
mov
aas
push
lcall
push
adc
in
arpl
jnp
and
xor
cli
enter
adcl
in
mov
nop
sbb
popa
xchg
std
cmp
stos
cld
cs
rol
int
jecxz
pop
and
inc
or
jno
out
in
stc
push
sbb
faddp
and
repnz
test
xor
push
jnp
sbb
shll
repnz
xchg
sub
sbb
jo
js
incl
pop
decl
adc
sbb
sbb
pop
mov
addr16
cmp
cltd
jns
int
iret
cmpsl
xor
sub
out
int
adc
adc
repz
clc
xchg
imul
sbb
cs
dec
sub
push
mov
xchg
addr16
mov
cmpsl
inc
or
dec
out
dec
jp
lahf
jp
sub
pop
jne
movsb
or
sbbb
fs
out
stos
jl
scas
ljmp
lcall
jns
cli
xchg
mov
aas
push
movsb
jecxz
mov
je
ret
jnp
testb
ret
js
dec
cmpb
pop
adc
lcall
into
aaa
mov
xchg
fwait
cmpsl
imul
adc
mov
or
cwtl
stos
mov
out
jl
mov
dec
inc
test
dec
inc
test
push
sub
hlt
cmc
mov
cs
loopne
sub
adc
or
adc
or
pop
aad
or
add
inc
cmpsl
mov
popf
stc
mov
mov
inc
push
int
fcompl
inc
mov
jns
es
jg
sub
sti
mov
ja
js
ficoml
enter
and
sub
sub
mov
pop
ret
mov
xchg
or
js
jno
pop
gs
faddl
dec
push
xchg
add
call
lock
jns
ds
in
inc
dec
shl
shl
sub
mov
sub
stos
test
mov
jno
jno
sub
dec
push
lret
stos
mov
adc
in
push
jb
enter
int3
fdiv
fdivs
enter
inc
outsl
test
push
mov
inc
cmpsl
aam
push
mov
arpl
cs
dec
sbb
in
out
mov
dec
int
js
movsb
cltd
mulb
sbb
mov
test
mov
cmp
mov
pop
jecxz
dec
lea
out
xor
stos
adc
mov
pop
lock
lcall
sbb
pop
nop
pop
dec
push
addr16
inc
fstp
sbb
enter
test
mov
cmp
adc
shll
pop
add
mov
xchg
aad
jmp
xchg
sbb
imul
test
jg
das
jp
dec
xchg
fistl
sbb
xor
push
ret
loop
imul
sbb
inc
add
pop
jge
in
cli
shlb
icebp
mov
insl
mov
pusha
test
mov
sub
sbb
int
adc
xor
push
pop
aaa
insb
push
and
repnz
cld
jae
dec
shrb
push
add
xchg
mov
jno
add
outsl
xor
js
pusha
sbb
scas
add
mov
pop
arpl
test
and
and
sbb
fcomps
shrb
and
mov
mov
fwait
testb
addl
scas
fsts
inc
pop
cmpsb
cmp
insb
pop
push
int3
movsl
hlt
leave
das
xchg
mov
xor
fwait
bound
inc
cmp
mov
fwait
call
pop
fstps
jecxz
pop
lcall
hlt
mov
bound
mov
nop
pop
push
xor
dec
mov
insl
or
cmp
call
mov
popl
inc
mov
in
das
stos
and
inc
pop
jbe
push
xlat
ret
lods
xor
push
dec
pop
inc
flds
cmp
and
shlb
data16
imulb
daa
add
and
aaa
dec
mov
dec
jl
scas
incb
mov
mov
test
push
pop
shl
cld
jns
pop
stos
int
rcrb
movsl
jge
jnp
ret
rcrb
gs
clc
hlt
jno
scas
sub
mov
inc
mov
mov
addr16
leave
xchg
les
test
fstps
jb
push
subb
push
pop
fnstenv
mov
cwtl
es
fidivs
repnz
mov
ret
dec
or
pop
jae
fldl
fidivl
add
push
movsl
cmp
mov
stos
pop
int3
or
orb
out
xchg
mov
jmp
xchg
jmp
int3
lret
push
xor
mov
pop
pop
jo
nop
hlt
jne
fists
aas
mov
mov
adc
cld
ret
xchg
lahf
movb
sarl
sub
sbb
jl
outsl
hlt
pop
push
sbb
shlb
push
sub
mov
pop
std
mov
pusha
push
inc
shrl
lahf
popa
rcl
and
add
fdivrs
rcrl
fwait
sbb
repz
mov
inc
ds
jl
jb
xor
mov
fs
mov
and
adc
das
roll
faddp
daa
mov
jp
arpl
add
sub
cwtl
xchg
jae
push
inc
mov
stos
out
or
mov
cli
push
add
and
mov
int3
fdivs
mov
inc
filds
mov
arpl
cmp
mov
imul
jne
mov
pop
mov
add
push
stc
push
inc
push
mov
fisttpl
adc
mov
into
push
insl
sbb
mov
adc
mov
loop
inc
test
push
add
xchg
xchg
xchg
jns
and
mov
daa
int
insb
jne
adc
ret
out
outsb
cld
push
adc
fcomp
insl
mov
sbb
stos
and
scas
enter
repnz
outsl
insl
jp
in
sbb
push
mov
push
loop
mov
mov
inc
test
das
jg
dec
jns
jbe
and
lcall
mov
sub
cmc
pusha
sub
addr16
out
add
fdivrs
xchg
cli
add
insb
mov
add
mov
les
test
sub
cmp
loope
push
dec
aaa
jle
aas
mov
repz
push
pusha
dec
or
pop
sbb
imul
and
sub
push
test
out
push
jmp
rclb
push
shl
pop
js
popf
xchg
fisubrs
subb
adc
jg
sub
mov
push
lret
jecxz
stos
xchg
adc
outsb
in
push
xor
loop
or
xor
out
test
xorl
insl
cmovp
inc
fsubrs
mov
lods
leave
push
jbe
cli
mov
inc
ret
inc
orl
inc
mov
test
push
sub
out
push
sub
pushf
addr16
add
mov
jecxz
mov
sbb
sbb
push
dec
mov
adc
out
jo
pop
cld
lret
mov
movsl
push
scas
or
cltd
call
and
xchg
jp
adcb
mov
int
pop
mov
fld
fistpl
and
insl
movsl
outsl
jle
fcoml
lret
mov
iret
adc
dec
adc
stos
inc
adc
dec
pusha
pshufw
fmulp
jnp
sub
and
pop
std
dec
dec
sti
js
daa
pushf
xor
mov
aaa
test
sub
jns
insb
addb
daa
mov
pop
pop
loopne
pop
shrl
out
mov
std
repnz
cmp
jge
dec
arpl
imul
sub
mov
xor
mov
mov
fsts
adc
addr16
cs
lahf
pusha
jecxz
mov
shll
popa
xchg
push
and
mov
cmp
sbb
push
mov
jnp
cmp
xrelease
adc
insb
insl
xchg
into
in
jae
fstpl
jns
movsb
jle
push
ret
call
inc
jle
stc
das
jecxz
enter
dec
lret
xchg
sbb
in
lods
loop
flds
dec
daa
in
or
js
sub
stos
xchg
cmp
push
aaa
loopne
loop
popa
lock
mov
lret
lret
sbb
adc
iret
nop
jl
ret
pop
mov
add
mov
ds
shl
sbb
sub
sub
je
lds
in
shlb
mov
cmc
shll
mov
mov
mov
int3
orb
pusha
scas
popa
or
sbb
sub
adc
jge
lock
test
pop
mov
arpl
inc
jmp
arpl
and
pop
inc
or
hlt
jnp
rclb
rcll
into
es
and
adc
ds
jmp
into
mov
sub
xor
ret
test
repnz
jp
xlat
mov
xchg
sbb
pop
gs
xor
xchg
fistps
cmpl
cmp
sub
mov
add
adc
xor
aad
cmp
cmp
jnp
mov
jecxz
sarl
das
shr
inc
ds
pop
sbb
xlat
aas
xchg
stos
mov
popa
lcall
hlt
pop
jl
mov
pop
imul
pop
pop
push
pop
adc
pop
cmp
orl
add
or
inc
mov
mov
or
stos
dec
push
inc
and
ds
popf
sbb
jg
dec
xchg
jp
adc
pop
mov
jnp
and
pop
inc
mov
pop
push
xchg
bound
cld
or
and
push
jb
mov
jmp
or
addr16
jo
push
out
idivl
stc
or
xchg
add
or
jno
push
inc
data16
adc
mov
jle
jno
sub
shr
or
and
mov
negb
pusha
les
push
push
fxch
jae
mov
int3
test
adc
clc
flds
lcall
cmpsb
add
out
jle
int3
dec
insb
cmp
daa
test
enter
shlb
add
ss
or
sbbl
std
pop
push
mov
popf
push
mov
or
mov
xchg
lds
xor
stc
outsl
ja
fyl2x
test
mov
sahf
dec
push
lods
loope
lock
aas
pop
add
into
push
out
jne
out
xorl
scas
mov
movsb
stos
test
decb
mov
mov
addr16
pop
and
sbb
mov
mov
inc
push
mov
dec
lret
pop
jmp
fstps
pop
aam
lret
into
shrl
mov
ret
xchg
inc
daa
sbb
out
mov
sub
dec
div
xor
fldt
xor
scas
add
sub
xchg
xchg
cmp
inc
cltd
cwtl
js
ljmp
ds
sub
jmp
mul
lods
inc
int
addr16
imul
or
dec
add
ja
xchg
daa
pop
sub
cmpsb
lcall
pop
mov
lcall
int3
jne
jecxz
mov
fwait
lea
push
int
pop
daa
pop
xor
insl
jge
es
cld
jbe
cmpb
sbb
fdiv
lret
outsb
fisttpl
outsl
ljmp
push
xor
xchg
inc
sub
fcomps
xor
cli
xor
pop
mov
push
pop
je
cmpsl
xchg
sbb
cmp
pop
stc
xchg
cmp
pop
loopne
cltd
add
or
lods
mov
mov
pusha
stos
adc
sahf
cltd
sbb
scas
cli
pop
adc
stc
xchg
aaa
jno
push
cmp
mov
popa
cmp
les
imul
out
lcall
push
xor
push
and
xchg
lds
dec
mov
and
xchg
cs
cltd
pop
lea
incl
popa
pop
push
jo
lret
ljmp
mov
faddl
sbb
frstor
xchg
mov
xchg
in
sbb
inc
shl
or
cmp
jb
add
jecxz
push
iret
inc
shlb
dec
es
stos
fxtract
pop
cwtl
lock
xor
imul
shll
xor
sub
xlat
enter
and
lea
arpl
fwait
add
push
cmp
inc
fninit
js
in
xlat
xchg
mov
int
cmp
cmp
sti
mov
mov
cmc
jmp
jo
aas
lahf
and
cmpsb
bound
adc
adc
in
lods
lock
dec
mov
xchg
ds
jle
shrl
jp
jns
mov
add
cltd
mov
xor
mov
inc
clc
scas
ret
in
jle
pop
lods
addr16
pop
idivb
les
popa
negb
sub
jge
fwait
decl
push
or
xlat
fisttpll
add
rorb
pop
mov
push
mov
xchg
pop
mov
inc
sub
test
mov
repz
inc
in
test
xchg
lret
xchg
addr16
jnp
adc
sahf
pop
shrb
fldenv
cmp
push
arpl
mov
dec
dec
jmp
cld
pusha
mov
mov
inc
sbb
dec
lds
loope
push
sbb
clc
mov
ds
bswap
fwait
mov
mov
mov
fnstenv
movzwl
aam
mull
out
add
sbb
rcrb
jne
shlb
sub
and
or
lods
insb
cmp
movsb
sbb
mov
cld
cmp
fdivl
es
and
out
pop
mov
data16
mov
xchg
scas
xlat
stos
push
sbb
fisubl
les
sahf
jb
or
mov
inc
push
sti
xor
mov
lds
lret
das
sub
outsb
mov
add
ret
out
sbb
or
push
inc
mov
data16
test
or
ja
mov
ret
lock
shl
mov
pop
out
stos
int
sub
dec
inc
movsb
cmp
in
data16
pop
cmpsb
sub
pop
cmp
jns
divl
popf
mov
sbb
movsl
insl
ffreep
and
xchg
and
inc
clc
mov
lock
and
mov
scas
popa
mov
mov
xor
test
inc
cltd
push
stc
or
pop
out
pop
add
rolb
fcoms
mov
in
outsl
lahf
mov
arpl
test
mov
orps
inc
test
test
aad
test
adc
pop
or
test
and
jmp
pop
test
test
lret
sarl
mov
mov
xchg
out
mov
jae
ljmp
mov
pop
xor
cmp
nop
sub
fdivp
movsl
std
jmp
inc
jbe
pusha
add
icebp
mov
add
mov
ficomps
cltd
fnstcw
xchg
popf
or
mul
mov
xchg
cmpsl
in
into
out
loopne
stc
cli
aas
cmpsl
fwait
xchg
push
mov
addl
lock
notb
aad
mov
and
cli
sbb
call
fadds
sbb
adc
ss
loop
loopne
test
stc
jnp
imull
sub
add
test
loope
jmp
mov
or
aam
out
mov
jb
mov
ficoml
hlt
jmp
andb
nop
adc
outsl
xor
sti
lods
add
insb
xor
mov
and
or
int3
or
arpl
mov
push
and
cli
imul
je
mov
jno
mov
jle
push
in
decb
inc
das
adc
fst
scas
sbbl
outsl
rolb
inc
push
stos
test
mov
std
jmp
mov
xor
out
push
adc
and
and
cmp
je
imul
and
xchg
push
sbb
stos
stos
outsb
lahf
sub
jmp
mov
out
cmp
lcall
mov
push
add
lahf
ret
cmova
int
clc
cld
mov
fiadds
into
clc
out
repz
arpl
test
fisttpll
xor
push
ret
xchg
mov
mov
and
sti
xchg
mov
add
mov
nop
imul
pusha
push
rol
xchg
add
ret
xlat
pop
jne
xor
push
sub
cmp
pop
jnp
and
mov
add
adc
adc
mov
fildll
adcl
xor
push
aas
jge
adc
mov
mov
andb
xchg
or
imul
mov
jns
in
cwtl
jmp
insl
mov
cmp
pushf
rorl
testb
adc
inc
adc
jbe
int3
movsbl
sbb
enter
mov
or
stc
sbbb
les
call
jmp
nop
jmp
inc
pop
insl
xlat
inc
shlb
xchg
xchg
nop
add
mov
xor
fs
xor
sbb
sbb
push
hlt
div
lcall
inc
outsb
mov
add
cmp
scas
pop
lods
into
inc
dec
cmp
or
lods
fcoms
std
xor
mov
loope
lahf
in
mov
std
add
or
xor
inc
xchg
pop
jb
gs
movsl
ret
outsb
xchg
fistl
jae
xor
or
push
shl
and
fildll
movsb
ret
lods
and
add
adc
mov
mov
mov
xchg
sbb
ret
adc
lea
mov
lcall
clc
xchg
push
pop
outsb
add
cmc
mov
and
fcomip
les
or
and
jnp
and
adc
dec
xchg
subl
cmp
adc
inc
pushf
pop
xchg
push
push
mov
aas
imul
int
notrack
mov
lock
pop
arpl
cmp
mov
mov
mov
cwtl
push
jnp
sub
mov
or
mov
scas
jl
insb
adc
cmp
push
ljmp
mov
ljmp
int3
dec
les
mov
push
fmuls
mov
inc
bts
test
sub
mov
mov
add
jg
mov
xchg
xchg
sahf
dec
shlb
ds
pop
scas
leave
pop
mov
dec
notl
aaa
adc
xchg
jne
mov
cmp
cwtl
lret
mov
call
jbe
push
faddl
pop
pushf
repz
and
mov
mov
or
xchg
sbb
fiadds
jge
int3
xlat
add
and
sbbb
das
mov
jns
sbb
mov
add
jnp
cltd
inc
mov
inc
ds
jae
lret
mov
les
pop
mov
mov
sbb
jmp
mov
lahf
fistpl
ret
or
jno
push
int3
jecxz
roll
or
push
in
push
cmp
pop
lret
adc
mov
cmpsl
jg
mov
xchg
mov
das
cmpsl
inc
jnp
ret
push
mov
iret
jbe
add
aaa
push
pop
lahf
ret
sbb
xchg
inc
jb
hlt
rsm
aaa
sbb
jl
adc
test
add
aas
cmp
sub
cmpsb
add
xchg
ret
mov
pop
rcrb
cli
inc
nop
cld
out
rcr
inc
or
cmpb
popa
es
or
inc
and
pop
dec
es
jle
outsl
cmpsb
iret
cmp
dec
lods
push
pop
jbe
xor
jo
repnz
mov
sbb
pusha
shlb
outsl
je
sub
pop
in
inc
xchg
lahf
iret
and
xor
lods
mov
sub
and
inc
add
push
xor
stos
test
mov
jle
les
insb
add
xchg
cmp
insb
adc
add
mov
repnz
ja
test
cmc
aaa
idivl
adc
movsb
ja
push
rclb
xchg
adc
iret
xor
xchg
pushf
enter
hlt
popf
jmp
imul
or
jbe
subw
jecxz
sahf
dec
mov
fisubrs
mov
mov
xchg
inc
jp
into
cmp
cmpsl
rcr
push
push
imul
les
movsb
or
lcall
mov
pop
insb
cmp
repz
jl
jno
lods
xor
xor
add
nop
arpl
out
sbb
jo
int
leave
mov
fs
or
sub
popa
jp
pop
pop
clc
call
jp
insb
and
or
fcompl
cli
xchg
dec
inc
xchg
je
lods
mov
inc
stc
adc
fwait
les
rolb
mov
clc
xorl
sub
movsl
addb
daa
jp
adc
aam
push
pop
mov
mov
in
jo
push
xor
xchg
xchg
cwtl
push
orb
xor
cmp
add
add
xorb
sub
cmc
mov
pop
leave
adcl
out
xchg
aam
xlat
clc
mov
bound
inc
and
scas
push
das
ret
jae
sub
aad
shrb
dec
jbe
pusha
mov
gs
push
pop
pop
inc
mov
jl
jne
jne
jbe
jle
add
cli
js
dec
and
jns
mov
pop
orb
outsl
int
inc
pop
lds
js
imul
outsb
lcall
mov
je
fs
sbb
or
stc
scas
mov
imul
xor
mov
xor
fisubl
xchg
shll
push
inc
mov
clc
dec
cmp
mov
packssdw
aam
pop
or
jmp
ret
test
lahf
lahf
push
inc
pusha
mov
push
out
lock
stos
jg
gs
push
lea
int
ret
mov
popa
dec
mov
jno
xchg
jbe
add
sbb
cld
dec
lahf
push
and
sub
cmp
sbb
xchg
ss
lds
movsl
sub
mov
shlb
push
lret
loop
pop
push
cmc
stos
push
or
mov
fsubrp
gs
mov
fwait
push
mov
sub
jb
test
arpl
and
out
or
outsb
jnp
lea
rcll
lds
stos
sbb
in
cmp
stc
imul
jp
sub
pop
pop
vpcmpgtd
add
fwait
mov
mov
jp
loop
jmp
insb
jl
pop
lcall
sahf
mov
jae
push
aaa
stos
adc
div
andl
pop
jae
repnz
orb
pop
lods
sub
fidivrl
cmp
hlt
mov
outsb
lods
mov
jbe
mov
xor
jecxz
lods
jns
push
adc
in
iret
mov
dec
stos
sub
outsl
cli
loope
mov
outsl
mov
outsl
add
add
dec
rcrl
cmp
popa
pop
xchg
add
push
dec
and
orb
jbe
xlat
loopne
or
fs
xchg
decl
inc
frstor
inc
mov
xchg
leave
pextrw
sahf
pop
cmp
jle
inc
push
loope
cmp
call
cli
sbb
popa
xchg
gs
aaa
jl
push
arpl
push
mov
push
sahf
xchg
test
jns
mov
into
faddl
jb
or
imull
lcall
addr16
ljmp
aad
scas
push
ret
or
dec
sahf
subps
mov
ljmp
adc
cmc
into
ss
and
xchg
inc
dec
addb
pop
cmpsb
dec
mov
and
in
adc
loopne
xlat
or
cld
loop
xchg
cmpsl
and
add
push
jle
cmp
or
push
aad
ucomiss
inc
mov
in
mov
push
or
jno
xor
cs
add
jns
outsb
incl
mov
leave
xor
imul
inc
mov
es
inc
jnp
outsl
or
je
jle
xchg
les
xor
xchg
lock
or
stos
pusha
mov
push
push
insb
mull
add
popa
jo,pt
adc
push
aad
inc
adc
dec
adc
in
jg
xchg
iret
insb
and
bound
sbb
mov
std
ret
jg
xchg
cmp
vmovq
pop
sbb
xor
add
add
mov
out
inc
mov
or
and
jno
or
push
js
aam
rcrl
cmpsb
or
push
call
lods
in
push
mov
and
incl
and
rcr
sub
push
xchg
mov
idivb
adc
gs
fwait
insl
cs
je
cmpsl
mov
adc
cmp
and
dec
sub
jno
and
cmovb
pop
stos
jbe
negl
ds
add
insb
cmpsl
mulb
or
cmp
inc
dec
jge
and
mov
sub
dec
inc
sbb
dec
scas
adc
lret
dec
cmp
add
lret
mov
or
mov
mov
push
push
int
sub
push
or
xor
sbb
movsl
sbb
aam
sti
mov
xchg
adc
jae
cmp
sti
xchg
arpl
mov
or
inc
arpl
adc
lds
sub
clc
jle
sbb
lock
rorl
jbe
or
aam
mov
pop
aas
xor
lods
push
loope
addr16
jbe
mov
out
test
and
shrl
icebp
adc
pop
adc
mov
add
scas
pushf
sub
mov
pusha
mov
gs
in
sbb
lods
loope
int
or
repz
add
jl
dec
xlat
cwtl
inc
out
mov
inc
sub
enter
jmp
mov
loopne
lret
test
sbb
cmp
ja
mov
mov
sub
pop
leave
inc
scas
jne
daa
mov
or
xor
jmp
into
rcrl
cmp
xlat
dec
or
inc
pop
add
ficoml
jecxz
loope,pn
mov
cmp
imul
movsl
scas
in
enter
popa
pusha
loope
lahf
es
sub
xchg
mov
sbb
sub
popa
add
ljmp
cmp
lret
pop
cmp
sbb
insb
outsb
outsb
sbb
mov
pop
out
rol
lods
xor
adc
push
fadd
enter
jge
jno
jns
cltd
in
adc
ret
push
ret
xlat
inc
insl
enter
into
lods
std
jb
jg
sbb
or
loope
leave
pop
les
or
xor
rcrb
or
fs
cs
sti
int3
shr
mov
inc
mov
test
rclb
xchg
jbe
inc
xor
out
xor
mov
pop
je
cmp
and
inc
sub
sti
mov
fwait
adc
cltd
push
adcl
xchg
lret
sub
call
xor
loopne
dec
sbb
xor
hlt
sbb
leave
lahf
enter
and
js
dec
dec
inc
shll
jmp
out
xchg
dec
and
ljmp
xchg
sub
lods
rcrl
dec
fisubrl
pusha
sbb
pop
cmp
push
add
cltd
and
push
stos
test
cmp
shlb
push
cltd
inc
sub
and
xlat
cltd
imul
pusha
sbb
cmpsb
mov
and
inc
inc
cmp
push
shlb
mov
add
daa
nop
mov
int3
xor
ljmp
inc
jnp
dec
mov
dec
mov
gs
jne
stos
scas
xchg
mov
aam
mov
mov
or
in
mov
mov
cmp
leave
push
mov
lahf
ret
or
ljmp
jge
mov
nop
cmc
pushl
mov
add
movsb
or
cwtl
sbb
cwtl
into
fsubrs
pop
cli
xchg
lret
cs
mov
sub
or
lret
adc
xlat
loop
lds
in
inc
jp
mov
pop
test
in
mov
bound
loopne
popf
cmpsl
dec
fwait
cmp
in
aam
push
sbb
mov
out
mov
in
push
sub
or
adc
sbb
out
movsb
push
fsubr
sbb
and
aaa
jmp
mov
and
lahf
hlt
xor
cmp
jns
outsb
fcoml
fmull
add
cwtl
mov
mov
push
mov
fstpt
lea
sbb
lods
inc
pop
add
ficompl
or
js
es
lock
enter
push
cmp
push
xlat
sub
pop
mov
sbb
stos
and
in
movd
add
dec
mov
arpl
mov
xor
sub
push
push
cmp
test
sbb
mov
or
cmpl
jecxz
pop
in
push
xchg
movsl
adc
jno
sub
cmp
cli
dec
cmp
and
shlb
loopne
push
scas
push
test
insl
popf
ljmp
push
insl
xchg
mov
js
or
mov
pushf
xlat
iret
jmp
or
sarb
pop
push
cmpsl
mov
jno
imul
call
push
arpl
adc
in
jmp
pop
imull
fdivrl
outsb
mov
fmuls
in
adc
jl
fildl
fstps
out
xor
test
sub
pop
or
int
std
mov
cmc
inc
mov
rorl
mov
mov
loopne
adc
xchg
scas
and
xor
sub
hlt
frstor
cmpsb
dec
fs
push
loope
gs
adc
adc
adc
cs
pop
mov
aam
clc
popa
xchg
cmp
mov
imul
mov
dec
mov
out
std
pop
int3
mov
fwait
push
jle
test
lahf
jg
adc
je
shll
cmpsb
and
gs
mov
sub
mov
mov
sub
mov
xchg
jae
lds
cmp
js
push
cli
stos
xor
or
xor
icebp
addr16
aam
mov
mov
stc
insb
enter
mov
xor
call
int3
out
mov
mov
sti
scas
movsb
test
add
in
icebp
sub
pop
jle
mov
xor
sbb
mov
leave
push
mov
mov
lcall
pop
stc
push
xor
jne
es
xchg
call
cmp
pop
fisubs
and
and
xlat
or
shlb
mov
clc
mov
mov
mov
pop
fadds
iret
repnz
adc
lods
pop
jmp
add
push
out
dec
mov
pop
jb
push
cmp
xor
jp
dec
sbb
call
push
jnp
ret
out
sbb
mov
mov
daa
dec
mov
mov
adc
scas
out
movl
clc
jne
inc
xor
das
add
sub
inc
loopne
cmp
pop
out
xchg
gs
jae
aaa
jmp
cmpsl
out
push
or
out
int3
sbb
enter
push
stc
sbb
daa
xchg
movsb
iret
ret
test
adc
push
pop
bound
push
and
cmc
pop
jg
sahf
adc
push
sahf
dec
sub
in
ss
pop
out
jecxz
cli
xchg
iret
add
jle
push
xchg
xchg
and
dec
jp
xchg
inc
fsubp
cmp
test
mov
jp
fildl
out
xor
shl
fs
mov
ljmp
idivb
sbb
cmp
mov
mov
dec
pop
test
hlt
cmp
mov
lods
das
outsb
mov
adc
outsb
and
mov
lret
mov
idiv
hlt
mov
cltd
ljmp
in
rorb
inc
cmp
pop
je
aaa
sub
stc
nop
jns
rcr
sbb
mov
jg
cs
mov
mov
mov
test
lea
out
roll
enter
notl
clc
mov
dec
nop
pop
enter
jb
lods
dec
jnp
sbb
in
sbb
pop
in
xchg
pop
inc
or
pusha
fstpt
dec
test
js
test
int
out
add
dec
ficoml
jae
outsb
in
aas
pop
sub
add
jle
inc
addr16
call
in
sub
aas
mov
xchg
jmp
and
sti
lret
jb
and
fs
mov
and
and
es
mov
sub
push
jl
pop
mov
into
pop
test
testb
dec
scas
jp
shr
hlt
jno
xchg
leave
test
je
js
inc
lret
mov
les
out
bound
cmc
ret
pop
divb
cli
inc
rolb
cmpsb
clc
sarb
cli
or
insb
repz
dec
jp
jle
mov
int3
mov
mulb
or
icebp
fidivrs
jle
inc
insl
mov
sub
jae
sbb
in
add
divb
pop
js
sub
arpl
push
aam
sbb
xchg
mov
xchg
mov
inc
xor
adc
mov
lock
jns
mov
push
daa
pusha
jl
shl
jge
mov
int
out
aaa
std
mov
push
test
imul
sbb
jb
or
lcall
cmp
repz
out
mov
movsb
xor
mov
mov
adc
mov
jo
inc
hlt
mov
or
and
cli
dec
mov
int
std
daa
shr
fdivrs
lret
shll
lret
add
std
jo
rol
mov
mov
mov
push
lock
and
jno
aas
push
popf
enter
sub
inc
push
sub
fwait
test
cmpsl
lods
jmp
shrl
movsl
push
test
and
jl
mov
pusha
sbb
loop
xor
inc
sbbb
jle
lahf
dec
cs
aaa
lahf
xchg
push
jl
das
lret
loopne
pop
cwtl
leave
cmpsl
fwait
popa
and
lcall
cmpsl
popf
sub
adc
sbb
xchg
xchg
leave
push
mov
out
push
fsts
cld
push
sbb
lret
and
inc
lock
jno
aas
in
fdiv
add
test
push
pop
and
mov
xchg
push
lret
in
stos
xchg
dec
cmp
sbb
mov
test
push
mov
test
push
mov
sahf
iret
arpl
push
push
andl
in
mov
das
jle
ffree
lcall
popa
lret
das
xchg
in
test
and
add
mov
and
in
xor
cmp
inc
push
orl
jno
stos
xchg
xor
xor
xor
push
mov
inc
sbb
jmp
daa
repz
mov
adc
pop
dec
lahf
lds
popa
mov
or
xorb
inc
xchg
or
dec
ret
inc
xchg
adc
lock
jmp
lods
stos
xor
insl
push
inc
pop
pushf
push
dec
lods
jmp
test
push
pop
jecxz
or
insb
test
jp
dec
popf
push
sbb
mov
xchg
out
or
mov
jne
pop
lods
movsl
popf
sub
je
mov
fs
jae
imul
jg
shl
pop
icebp
testb
xchg
test
enter
pop
adc
push
xchg
mov
or
lahf
loopne
test
fwait
int
dec
fistps
dec
cmc
mov
mov
mov
fwait
pop
jae
int
std
push
add
and
lods
in
push
ds
push
mov
pushf
xchg
xor
fsubs
nop
jg
cmp
inc
mov
in
pop
or
clc
xchg
fbstp
push
dec
adc
xor
sbb
sub
in
stc
jae
pop
nop
scas
and
jo
jnp
and
into
mov
pop
mov
cmp
jno
and
push
shlb
stos
fistpl
push
fists
pop
or
fsubrl
lea
outsl
leave
and
icebp
pop
cli
and
xor
aas
pop
jle
and
mov
sub
pop
lcall
ficoms
mov
mov
inc
in
sub
jne
call
inc
mov
stos
push
dec
xchg
lea
mov
sti
and
cli
inc
mov
int
add
imul
mov
inc
ja
fstl
lea
inc
pop
cld
xchg
pop
mov
push
lds
out
xchg
sbb
cmp
pusha
push
test
rcll
loopne
cmp
in
sti
inc
aad
mov
mov
cwtl
fisttpl
inc
ret
outsb
out
cld
lret
aas
or
sub
scas
nop
xor
call
stos
aas
cwtl
dec
pop
xor
int
jno
ja
and
insl
negb
sahf
stc
inc
mov
lods
leave
idivl
insb
scas
repz
out
das
int3
lods
lea
insb
sbb
mov
add
adc
out
lods
cmp
fwait
xchg
int3
sub
jns
mov
pop
mov
into
jae
out
and
pop
sbb
decb
adc
mov
jecxz
xlat
sub
je
xor
jae
xor
cli
loopne
adc
bound
arpl
pusha
adc
cmp
mov
fldl
mov
or
push
push
adc
mov
or
dec
pusha
mov
fistpl
cmp
lcall
push
outsl
inc
mov
daa
xor
sub
in
test
xchg
pop
xchg
stos
xchg
int3
cmpsl
sub
cmpsb
idiv
mov
xor
cmp
xor
daa
fwait
adc
lahf
sub
out
orl
and
mov
aad
pop
std
jbe
inc
leave
pop
mov
incb
fsubs
and
sahf
ds
insl
mov
adcl
ss
divl
adcb
fcomip
jne
and
mov
lds
mov
xchg
sbb
out
sub
not
sbb
pop
inc
mov
lret
stos
sub
lcall
fnstcw
notb
xchg
xor
popf
movsb
push
cmp
test
push
test
lret
adc
dec
ss
xchg
push
mov
cs
dec
popl
idivl
and
mov
jb
and
xchg
les
popa
jo
fiaddl
ret
ret
inc
jns
add
fnstcw
int3
lods
sub
fmuls
jl
dec
aam
inc
sub
mov
inc
stos
movb
call
sbb
sub
mov
sub
and
and
loopne
aas
aad
xor
dec
repnz
cmc
dec
lahf
ljmp
mov
or
or
mov
pop
xchg
popa
jmp
xchg
leave
sahf
mov
fbld
outsb
sub
cmpsb
in
cmpsl
fcompl
sbb
sub
mov
pusha
loope
sbb
insl
aad
push
stos
inc
xor
aas
mov
jb
test
arpl
push
movsl
mov
add
outsl
ja
ret
cmp
es
data16
call
sbb
repnz
ja
push
icebp
lret
jne
lcall
push
stos
mov
xchg
cltd
pushf
xor
inc
push
outsl
roll
add
mov
xlat
push
xchg
dec
add
pop
inc
js
mov
xor
pop
mov
push
mov
repz
jo
jle
mov
xchg
push
cmp
xor
in
and
pop
mov
or
xor
fnstcw
mov
pop
aad
push
push
pop
cmp
mov
in
hlt
test
loope
jmp
cwtl
xchg
cmp
gs
ss
sub
arpl
rclb
lods
in
sbb
rcrl
push
ja
jp
ja
xchg
inc
dec
xchg
lea
add
lock
cmp
push
inc
cmpl
xchg
push
pop
mov
xchg
add
lods
and
lret
cmp
divl
adc
pop
push
scas
mov
push
popf
mov
cmpsb
cwtl
aaa
out
lahf
cmp
xor
shrl
cmp
jmp
mov
outsl
pop
daa
bound
and
sti
pop
sbb
mov
pop
pop
mov
or
in
roll
jne
ret
push
scas
adc
mov
out
xacquire
sub
sub
ljmp
mov
cmp
jne
daa
dec
aaa
out
fsubp
mov
jnp
stos
rcrl
sbbb
imul
xor
sbb
sbb
cmp
jo
xchg
inc
clc
xchg
jle
dec
bound
inc
or
das
cmp
insl
mov
in
and
sub
insl
mov
pop
cmp
fsubr
pop
or
call
dec
lds
outsb
jae
add
clc
sbb
lods
ret
mov
push
adc
aad
or
out
vpmuludq
inc
std
jo
stc
scas
pop
xor
jo
and
xchg
xchg
ss
popf
aam
subb
into
pop
in
jecxz
push
movsb
aam
shr
or
ljmp
repz
cmp
in
lret
mov
aas
cmp
pusha
into
xor
stc
addb
cmpsl
fs
arpl
outsl
pop
pop
push
add
les
inc
push
icebp
ret
xchg
sbb
test
in
or
cmp
jge
push
out
out
pusha
es
out
jno
sub
ja
inc
sbb
js
xchg
stos
cmp
outsb
leave
and
pop
and
or
icebp
add
pop
jo
jp
outsb
mov
pop
cmp
imul
data16
lcall
lahf
data16
pop
in
cld
jo
dec
push
or
mov
lock
std
ficoms
mov
or
out
cmpsb
push
xchg
add
sahf
cmp
aaa
lahf
outsb
subb
into
dec
jecxz
pop
bound
das
fldenv
jo
jbe
pusha
call
loope
std
mov
sar
cltd
lods
rorl
arpl
cs
lret
int3
arpl
loop
out
stc
cmpsl
scas
adc
sub
xor
movsl
imul
dec
adc
jmp
popa
push
xor
push
pop
xchg
inc
dec
out
loope
clc
pushf
mov
test
repnz
loopne
bound
call
daa
dec
sub
pop
bound
and
fwait
cmpsl
shll
sbb
fsubl
push
mov
rcrl
push
cmp
out
mov
adc
pop
dec
cmp
icebp
cmpsl
xchg
popa
pop
dec
jp
mov
int
aad
mov
mov
inc
xchg
aaa
pop
and
loopne
lret
sahf
mov
fucomip
sub
push
or
dec
popa
mulps
mulb
push
addl
adc
mov
cs
fs
cmp
pop
and
sbb
cwtl
sbbl
pop
jge
pop
add
nop
into
inc
xchg
pop
push
dec
push
repz
mov
rorl
sbb
push
pop
cld
clc
shl
repnz
push
popa
mov
jae
push
inc
je
icebp
or
cmc
xor
lret
sbb
fcmove
shlb
xchg
adc
stos
scas
divl
popf
jb
cwtl
inc
repnz
rcll
fst
in
call
jns
and
and
and
and
les
add
imul
jbe
mov
push
lea
sub
in
push
adc
scas
push
add
push
and
lahf
and
inc
cmpb
aaa
fcmovb
jge
dec
sahf
inc
cmpsl
sub
lods
mov
ds
movsl
cmpl
loop
cmp
sub
mov
pop
or
xchg
shrl
add
inc
arpl
call
xor
push
jbe
daa
scas
popf
out
or
cmp
push
adc
out
mov
cwtl
and
xchg
jns
inc
imul
sub
sub
fimuls
cmp
movsb
mov
xor
jo
jb
mov
sub
push
or
mov
xchg
notb
out
xchg
sahf
dec
out
icebp
data16
inc
jne
les
ja
cwtl
mov
add
inc
iret
push
pop
insl
lea
ss
mov
notl
hlt
fmuls
lcall
xlat
fsubrl
and
or
rorb
push
sub
sbbl
outsb
jmp
lret
lods
dec
dec
shl
xchg
push
or
push
cs
push
mov
aam
daa
iret
pop
sbb
stc
mov
insb
or
lods
push
mov
cld
das
jp
sub
push
mov
inc
sub
cmp
or
fnstsw
std
aaa
pushw
push
mov
and
pop
and
jp
jp
stos
call
xchg
leave
nop
pop
cli
or
es
and
inc
dec
sub
dec
rcl
pop
mov
popf
sbb
int3
mov
rcr
in
call
push
cmp
jb
xor
test
or
movsl
outsb
mov
push
inc
inc
lea
fmull
xchg
pop
push
cli
loop
in
rolb
push
push
inc
fsub
and
and
or
test
lods
into
inc
mov
repnz
sbb
dec
xchg
mov
iret
ja
enter
sbb
mov
cmp
gs
and
or
sbb
mov
inc
rcll
or
dec
jp
fs
sbb
filds
or
pop
mov
pop
popa
sbb
mov
and
iret
pop
jnp
or
or
push
mov
adc
sub
insl
movsl
xchg
and
ret
fidivl
cwtl
pushf
cmp
cmp
mov
xorb
mov
xchg
and
pop
sbb
xor
xchg
pushf
sbb
cmc
call
cli
lahf
in
adc
and
adc
dec
push
sahf
inc
mov
pushf
je
ljmp
fcmovnu
push
movsl
mov
leave
mov
cs
sarl
fiadds
push
movsl
outsb
mov
xor
mov
pusha
push
push
jl
jmp
mov
sbb
outsl
push
rcrl
imul
sub
outsl
test
lret
cli
xlat
je
into
dec
test
mov
jmp
sbb
jo
sti
mov
mov
out
cmp
push
dec
bound
dec
cs
in
cs
cs
inc
jns
jmp
mov
jle
shll
aas
mov
test
sub
jle
fwait
shlb
call
out
outsb
sub
ss
dec
mov
cli
cmp
mov
sbb
into
pop
and
pop
mov
dec
mov
shlb
mov
sbb
dec
xor
aaa
inc
push
stos
push
add
int
mov
mov
psadbw
sbb
mov
xchg
imul
adc
cmp
stc
ss
lcall
xchg
pop
sbbl
or
jle
lock
sub
push
dec
mov
lret
mov
mov
mov
mov
scas
out
ja
xchg
aam
mov
sub
aas
jmp
xor
lret
arpl
jb
int
fisttpll
cs
sbb
ja
push
jo
inc
sahf
stc
iret
xor
mov
or
pmulhuw
aad
lahf
or
or
pop
ja
pop
xlat
ret
jae
ficompl
imul
xorb
jae
shrb
cmpsb
push
mov
hlt
pop
fisttpl
push
inc
call
push
addr16
push
incl
inc
mov
sbb
sub
inc
push
add
lods
mov
loop
movsb
pusha
jns
xchg
xchg
mov
imul
divb
pop
ljmp
jno
movsb
aam
mov
inc
cld
movntq
idivb
xchg
jae
cmc
push
hlt
sbb
jno
lret
hlt
jge
jno
mov
inc
into
pop
mov
xor
cmpsl
fcmovbe
sbbl
pop
dec
ret
and
orb
adc
inc
jbe
sti
imul
js
mov
and
flds
inc
ds
sbb
imul
pop
mov
sahf
adc
das
xchg
mov
xor
imul
push
movl
out
jno
or
fldl
mov
fsubrp
pop
adc
test
sbb
lds
out
xor
push
sarb
xor
cwtl
add
arpl
scas
dec
sbb
mov
rol
aad
test
mov
mov
inc
sub
push
ret
out
popf
insb
sub
xchg
sti
xor
mov
repnz
xchg
loopne
xor
ljmp
mov
xchg
sarb
aaa
fnstenv
sarl
fsubrl
test
jb
hlt
movsb
mov
xchg
xchg
adc
into
push
dec
jg
jb
cwtl
in
data16
mov
xor
push
test
out
movsl
and
mov
negl
xor
movsl
or
xor
push
sbb
inc
cmp
gs
cmp
test
inc
mov
ja
aaa
push
jno
jo
push
aam
fcomi
and
int3
sub
pop
aaa
dec
loop
bound
pushf
add
push
mov
sub
inc
push
jle
hlt
or
mov
push
jae
xchg
mov
push
adc
in
leave
imul
push
lahf
fwait
mulb
xor
sub
mov
or
loopne
loope
movaps
dec
call
sbb
lods
and
cs
stc
add
xchg
int
adc
jg
jbe
subl
into
pop
jae
jbe
and
outsb
push
orl
inc
adc
popl
rolb
into
mov
call
shl
inc
adc
lods
pop
mov
repz
push
ja
pop
inc
jo
xchg
daa
aam
sti
out
mov
shlb
pop
dec
ds
jmp
sbb
cld
cmp
push
out
sub
push
push
iret
out
mov
lahf
adc
aad
orl
xchg
dec
sbb
in
dec
jnp
and
clc
cmp
pop
adc
jno
pop
xor
sbb
push
push
jl
adc
repnz
push
mov
sbb
or
jno
in
mov
lock
in
lods
and
out
rolb
dec
movsb
rcll
cld
adc
sub
jo
adc
popf
xorl
adc
cmpsb
mov
dec
inc
mov
xchg
push
adc
inc
or
mov
jnp
xchg
xor
arpl
test
les
aaa
outsl
pop
xchg
lods
fmull
dec
movsb
lods
xchg
xchg
leave
test
mov
fwait
mov
ret
ja
and
int3
adc
mov
ljmp
fdivrl
cmp
and
test
and
add
int3
rcrl
mov
insb
add
insb
mov
jbe
adc
push
daa
cmp
mov
sub
jne
push
test
sbbb
jb
xchg
inc
xchg
inc
push
push
mov
inc
lock
xchg
cmpb
dec
adc
testb
cmc
fistpl
mov
pop
push
cltd
xor
test
xchg
inc
aas
add
loopne
ds
sub
dec
insl
repnz
lods
and
stos
bound
push
and
mov
in
fadd
push
daa
test
cld
rcrb
inc
sub
leave
ficoms
movsl
xchg
xor
cltd
inc
adcb
scas
push
sub
mov
loop
mov
mov
je
iret
mov
mov
imul
rclb
daa
ret
loopne
ss
test
xlat
fiaddl
leave
cwtl
sbb
inc
jmp
cmp
popf
jnp
inc
lahf
lock
cmpsl
je
iret
mov
sahf
sub
xchg
cli
jge
mov
push
jno
nop
pop
sbb
imul
mov
and
mov
jo
fidivl
xchg
xchg
and
data16
mov
mov
loope
jl
js
fstps
nop
xor
std
std
mov
push
vpcmpgtw
jge
cmp
mov
dec
inc
es
int
cmp
cwtl
jmp
add
xchg
mov
sbb
dec
xchg
in
jg
xor
mov
out
mov
jae
cld
jo
stos
jo
out
pushf
lcall
nop
sbb
bound
lcall
stos
and
loope
test
repnz
stos
les
imul
xor
xchg
imul
jecxz
aam
add
mov
and
xchg
fs
in
mov
mov
lahf
sbb
lret
ret
imul
rolb
mov
out
enter
mov
push
fldl2t
mov
mov
aad
xchg
je
sub
mov
lds
mov
jae
loop
and
inc
jb
jno
mov
cltd
push
insb
loop
aam
addb
jns
ljmp
sbb
cs
rcrl
rol
push
pop
xchg
sub
int
jno
mov
xor
xchg
js
cltd
or
ss
pop
outsb
scas
movsl
or
jecxz
cltd
bound
push
imul
aad
out
call
jbe
push
shll
sbb
lods
test
fld
insb
daa
adc
xchg
cmp
add
mov
scas
out
bound
into
pop
pop
cld
xchg
adc
push
aad
in
fwait
les
aad
jmp
andb
fbld
sub
pushf
jmp
stos
add
mov
sbbb
adc
push
mov
dec
mov
push
jle
inc
std
jge
push
xor
arpl
cmp
out
ret
or
xchg
or
xchg
sub
je
scas
lret
and
test
lcall
push
push
cltd
push
xor
xchg
loopne
mov
testb
mov
cmp
repz
call
or
mov
dec
pop
rclb
dec
mov
mov
cmp
dec
insb
pop
popa
dec
add
jo
ljmp
push
inc
add
or
enter
jle
lea
imul
mov
dec
stos
sub
scas
xlat
repnz
lds
rorl
popa
fstpl
and
sets
in
rorb
xor
push
inc
leave
inc
xchg
mov
into
jne
and
pop
mov
aaa
or
mov
icebp
mulb
in
mov
sub
test
nop
jmp
pop
xor
sbb
adc
and
jne
loop
dec
pushf
cmp
push
mov
jge
dec
adc
dec
xor
rcll
pop
jp
xor
jg
notl
xor
cmp
lods
xlat
mov
dec
scas
out
shr
or
jne
pop
test
imulb
or
aam
scas
xchg
and
sub
jp
mov
lock
js
bound
lret
scas
aas
push
pop
fadds
inc
cmpsb
xor
sahf
std
cltd
mov
mov
shl
mov
xor
stos
lods
lods
cmp
dec
cwtl
sbb
lods
cs
dec
pop
fwait
pusha
mov
dec
cmp
dec
out
mov
mov
outsb
dec
sbb
dec
fistpl
or
movsl
pop
scas
mov
negl
test
push
or
aaa
ficoml
fdivrs
jge
or
nop
fwait
sub
sbb
call
call
inc
inc
jle
and
mov
jecxz
xchg
ret
jno
divl
shlb
pop
cmp
push
and
mov
clc
mov
xchg
inc
mov
fcoml
lods
add
sahf
xchg
inc
or
sbb
scas
mov
push
loopne
scas
adc
je
cmp
in
loope
aaa
popf
cmp
aam
jge
add
sbbb
adc
nop
call
xor
repz
xchg
cld
cli
in
xchg
and
xor
daa
pop
ret
and
dec
mov
adc
xor
ja
pusha
xchg
clc
data16
popa
dec
dec
add
mov
rolb
and
and
sbb
lret
dec
mov
or
out
lahf
lcall
test
sub
daa
rorb
cmp
mov
mov
rorb
dec
enter
ja
adc
out
xor
and
mov
xchg
out
gs
out
or
sub
adc
insb
xchg
outsb
fwait
mov
jmp
push
mov
insl
sub
pop
add
cwtl
adc
frstor
ret
add
shrl
inc
mov
cmp
hlt
lahf
sarl
ret
xchg
fidivl
adc
xchg
rcrb
push
rcrl
aad
jbe
dec
repz
scas
ds
ja
testl
outsl
insl
mov
add
xor
shll
shl
movsb
add
sbb
aas
in
cmp
jl
shrb
js
xchg
jge
aaa
xchg
lahf
and
xchg
cld
pop
mov
add
xlat
sti
mov
mov
cli
ljmp
mov
out
pop
bound
lcall
push
out
addr16
push
fidivrs
cli
js
mov
sub
mov
push
or
xchg
clc
aad
push
add
or
shlb
fstpt
ss
ss
jg
mov
jno
jbe
jp
jl
jo
mov
dec
cmovs
iret
cmp
ficoms
insb
nop
dec
xor
cmp
adc
aas
test
jo
hlt
loop
test
xor
or
xor
mov
cmc
xchg
sub
ss
jbe
lret
sarb
ret
imul
fsubrl
cmpsb
sbb
or
iret
mov
mulb
push
dec
adc
test
inc
add
xor
mov
mov
mov
sbb
xchg
jbe
lods
mov
fbstp
push
add
arpl
arpl
xor
icebp
int
fs
int3
add
sti
adc
imul
pusha
fs
cld
inc
xchg
push
or
stc
cs
pop
insb
rcl
inc
sti
pop
iret
daa
pop
dec
hlt
fsubrl
xchg
negb
xchg
aam
add
mov
inc
mov
loope
xor
cmpsb
push
jp
pop
dec
imul
sub
divb
jae
in
sahf
inc
and
movsl
fmull
scas
xchg
negl
cmc
xor
sbb
shlb
or
xchg
xor
dec
fistl
negl
mov
push
out
cmp
xor
lea
scas
fdivrl
mov
adc
pop
rcr
mov
je
mov
cli
imul
pop
pop
jno
scas
subl
xchg
jle
or
int3
shlb
push
cmp
push
push
sbb
add
jae
cld
in
lock
cmp
lds
mov
daa
fildll
adc
pop
xor
mov
popf
js
xor
mov
sub
add
cmpsl
push
loop
fwait
cmp
outsl
pop
mov
xor
xchg
lcall
or
xchg
or
xlat
in
cli
pop
pusha
shr
data16
enter
lods
imul
xchg
out
hlt
inc
or
jl
aas
push
test
arpl
lds
sbb
test
cmpl
cltd
pop
mov
lea
xor
orl
cmovle
mov
xchg
cmp
roll
ret
cmp
stc
cmp
lret
lods
adc
mov
push
in
add
pushl
mov
mov
hlt
test
push
test
in
ret
enter
xchg
mov
jp
dec
fnstcw
mov
jmp
clc
xlat
mov
sub
inc
andl
jbe
xlat
shl
add
pushf
push
js
mov
or
sbb
mov
and
xor
es
ret
lret
std
mov
sbb
movsb
mov
mov
test
mov
lods
push
xchg
cmp
repnz
sbb
stos
jns
sbb
or
pop
stos
pop
fnstenv
jmp
cmp
aad
or
xchg
out
jge
test
test
pop
out
inc
pusha
sub
jl
jbe
sahf
sbb
int3
dec
aas
mov
inc
adc
cmpl
sbbb
dec
fstl
mov
ret
fisubrl
jno
jle
push
mov
lret
sbb
in
cli
xchg
mov
loopne
cltd
gs
popa
jnp
lods
nop
insb
test
loopne
jo
sbb
fisubl
aas
test
sub
add
hlt
test
jo
xorl
push
or
in
ret
and
inc
xlat
pop
push
or
scas
xchg
dec
outsl
and
xchg
out
bound
push
in
xor
mov
aam
mov
fdivl
loope
pop
out
sub
pop
mov
xchg
mov
and
sahf
jo
cmpsl
fbstp
sbb
cwtl
lds
push
rorb
test
ret
xlat
sbb
mov
test
fsubl
rolb
lea
imul
mov
stos
push
dec
hlt
lret
pop
cld
sub
sahf
call
push
stc
pop
xor
loopne
xchg
push
fwait
dec
push
loopne
sub
mov
imul
inc
into
jge
test
cmpsl
sti
or
cmpsl
lcall
xchg
jmp
sub
lret
shrb
inc
int3
fidivs
outsb
adc
push
adc
pusha
arpl
test
ret
adc
cmp
loope
xor
add
cmp
mov
or
mov
adc
js
xor
fwait
ret
lret
xchg
mov
sbb
xor
cwtl
push
sar
mov
flds
push
xor
push
cmp
aam
sub
cli
arpl
xor
popa
xor
mov
arpl
inc
cs
dec
jnp
das
sub
loop
es
bound
subb
lret
and
in
popa
xor
sub
aaa
insl
xchg
jl
pop
push
fwait
xchg
outsl
pop
outsl
sbb
les
cmp
xchg
insl
cmp
xchg
pop
insl
mov
stos
add
push
dec
cld
arpl
test
pop
popa
xchg
repnz
cli
aad
pmaxub
les
dec
mov
out
add
divl
xchg
stos
daa
xor
jno
add
xchg
movsb
push
lahf
cmp
add
push
adc
sub
adc
inc
jg
stos
call
sti
sbb
movsb
mov
dec
in
mov
loope
stos
inc
es
xchg
pop
aad
daa
js
cwtl
mov
dec
fisubrs
xor
push
cmp
stc
imul
stc
jno
sub
cmpsb
mov
and
pop
add
push
gs
and
scas
lea
ret
jmp
aaa
mov
movsb
outsl
cmpsb
pop
mov
xor
xor
pop
dec
cmp
popa
shrb
js
push
pop
xchg
push
mov
loop
add
iret
lahf
aaa
push
rorb
push
xchg
push
inc
adc
jl
mov
outsl
or
stc
add
add
mov
ds
pop
test
mov
jns
cmp
out
jp
sti
lock
sub
fmuls
jb
adc
std
mov
int
fcomip
sar
inc
mov
jmp
ficoml
inc
aad
sbb
pop
and
push
cmpsl
inc
sub
cwtl
and
inc
int3
xchg
lds
hlt
loopne
dec
mov
outsl
jmp
jno
roll
sahf
je
pop
imul
mov
test
scas
push
mov
and
test
mov
add
sti
inc
cmp
daa
mov
add
insb
jmp
bound
jge
xor
je
push
fidivrs
shlb
cld
xchg
in
xchg
bound
fscale
push
jl
ds
fsubs
imul
mov
ljmp
jg
pushf
push
inc
pushf
sub
scas
dec
mov
rorb
xor
outsb
cmp
rcrb
pop
fidivrs
movsl
imul
fisubrs
mov
popa
mov
mov
inc
mov
cmpsb
test
dec
fwait
sub
mov
aam
or
lret
sub
xorl
mov
aas
sti
fildll
jl
rorl
stos
inc
jo
lret
ret
jle
cltd
ret
push
sbb
push
insb
movq
cmp
xchg
lods
mov
cmp
xchg
adc
mov
mov
fisubrs
adc
mov
pusha
iret
cmp
add
ljmp
jo
cwtl
xor
test
inc
and
es
xchg
cltd
inc
js
sarb
arpl
out
push
push
es
dec
mov
pop
mov
xchg
or
icebp
mov
pop
dec
cs
xchg
fidivrl
dec
call
stc
daa
mov
orb
gs
push
xor
loopne
sbb
sbb
cmp
sahf
add
mov
cli
lret
addr16
pop
xor
ds
or
mov
and
cmp
out
or
test
adc
mov
cmpsb
inc
pop
sbbl
xchg
cmpsb
sahf
popf
stc
xchg
ret
cmpsl
cltd
adc
lcall
sarl
xchg
or
subl
outsb
and
movsb
in
jno
lock
mov
lds
fs
mov
dec
xchg
mov
adc
out
pop
out
pushf
inc
rorb
lea
les
mov
xchg
rolb
cmp
insb
ja
fsubl
pusha
cmpsb
scas
cs
stos
mov
push
or
popa
xor
cmp
lahf
xor
jle
out
int
pop
fisttpll
sbb
xor
push
jmp
fldl
sarb
cmp
les
push
sub
inc
dec
cmp
test
jnp
xchg
sti
dec
shlb
outsb
decb
and
lahf
mov
test
out
jl
je
pop
push
outsl
test
fs
stos
mov
cltd
sub
andb
sbb
adc
lahf
adc
mov
add
add
jge
jb
test
add
sahf
push
mov
sub
mov
inc
or
cmc
ja
decb
mov
arpl
pop
daa
mov
push
xor
sbb
push
ret
xor
xacquire
adc
or
loope
xlat
lods
pop
mov
push
int
stos
cmc
imul
out
push
pop
or
sub
xchg
js
cmp
xlat
loopne
mov
inc
adc
in
jge
inc
cs
xor
lcall
in
push
cmpsl
inc
mov
xorb
mov
testb
mov
and
lea
cmc
jno
scas
lea
adc
in
add
negl
fsubr
sbb
jnp
addr16
adc
or
out
jp
inc
cwtl
and
fs
int3
sbbb
test
rorb
push
out
xchg
ljmp
dec
adc
imul
mov
adc
pop
daa
repz
lcall
lahf
popa
pop
sbb
mov
mov
sbb
test
jmp
bound
mov
xor
and
adc
repnz
imul
imul
cld
push
pusha
test
jmp
testl
sub
mov
push
sbb
movsb
ret
sarl
xchg
mov
stos
ss
lods
loop
js
fsts
add
roll
mov
aad
jmp
adc
inc
sub
and
fst
add
ljmp
das
mov
lret
movsl
int
repz
lods
ret
popf
fistl
adc
fmuls
inc
cmp
push
cmp
in
xor
sbb
dec
mov
xor
sahf
in
jle
in
outsl
fmul
fiadds
dec
sbb
inc
and
gs
mov
pop
add
ficomps
mov
push
jl
outsb
or
push
lock
or
add
icebp
sub
xchg
daa
xchg
iret
push
sub
mov
sbb
add
dec
add
and
call
dec
cmp
es
daa
fbld
fnstcw
lret
pop
or
scas
es
add
and
add
pop
cli
push
popa
insb
das
lahf
test
stos
das
dec
sbb
push
lea
cmp
jo
jne
aas
ficoms
dec
cltd
and
lea
push
data16
mov
out
jne
cmp
or
mov
sbb
pop
sub
mov
add
sub
mov
fcomps
push
in
into
xchg
fldlg2
sub
andb
ja
mov
test
inc
add
test
pop
outsl
cltd
test
hlt
cmp
test
ret
adc
rclb
shlb
in
adc
push
inc
testb
out
and
shll
cltd
and
push
mulb
in
cld
out
dec
inc
shl
mov
inc
sub
subl
pop
outsl
rclb
jnp
hlt
dec
popa
rcll
lcall
out
xchg
bound
and
jnp
int
xor
fistpl
cmc
movsb
mov
daa
test
andl
jl
xor
cli
out
pop
cmpsb
aas
fsubrs
leave
adc
decl
filds
or
testb
mov
cmc
call
pop
int3
jg
pop
sbb
or
insl
outsl
mov
pop
shll
sbb
xor
test
outsb
mov
jnp
cmp
dec
push
and
push
cld
in
jns
push
cmpsb
scas
cmp
push
cld
add
negb
popa
rclb
adc
icebp
test
xchg
in
orb
lahf
lds
pop
mov
outsl
add
sbb
pop
push
fdivr
xor
cmpsl
or
push
repnz
jecxz
dec
ja
pusha
iret
xchg
mov
push
jns
sub
adc
mov
movsl
adc
xor
cmp
testl
push
nop
clc
xor
aaa
push
lods
sub
pop
repz
lea
xorl
inc
cmp
test
rclb
pop
and
mov
fsubrl
jns
xorb
pop
push
mov
jo
push
fiadds
ret
mov
test
dec
mov
jmp
jae
push
leave
mov
mov
leave
aam
outsb
xchg
sbb
out
push
scas
orb
lock
cmp
sub
aaa
push
in
repnz
cmp
test
jmp
stos
push
imull
leave
push
mov
pop
sbb
cmpsb
mov
mov
or
xchg
cmp
lods
jbe
les
and
popa
and
dec
adc
bound
push
sub
mov
push
imul
inc
xchg
iret
jnp
repnz
jne
or
jne
mov
xchg
into
sub
add
movsl
je
adc
popf
cwtl
and
adc
outsl
ljmp
cwtl
dec
sub
push
call
sahf
inc
mov
xchg
cmp
xchg
je
push
or
rolb
movsb
scas
add
and
stc
or
insb
xor
gs
push
push
daa
pop
jnp
rolb
in
divl
mov
incl
or
ds
dec
in
adc
cs
fcomip
push
cmp
test
inc
pushf
cmp
movsb
add
inc
cmp
mov
lods
pop
clc
cmp
jne
mov
lea
hlt
loopne
hlt
hlt
arpl
xchg
xor
or
scas
lcall
inc
mov
fcos
cmp
pop
inc
movsb
jmp
pusha
aaa
jae
cmp
pop
push
mov
fwait
dec
mov
xchg
mov
add
mov
lods
aas
sub
in
add
lahf
mov
and
mov
pop
sbb
fidivs
mov
cmp
test
daa
cmc
mov
xlat
sub
pop
or
xor
dec
pushf
lret
fisubl
in
mov
sbb
xchg
mov
sub
in
stc
adc
arpl
inc
rorl
mov
xchg
inc
xchg
adc
aam
jmp
inc
mov
sbb
lods
inc
jl
ss
sbb
mov
outsb
and
imulb
inc
outsl
mov
in
cmp
jae
rcrl
sbb
sub
pop
pop
adc
lock
push
shll
sub
testb
outsl
pop
push
push
ret
jecxz
inc
test
rcll
inc
aas
scas
inc
mov
pop
jo
outsl
imul
daa
sbb
call
lods
xchg
mov
adc
sbbb
push
push
jnp
mov
xor
cltd
or
fldenv
cmp
inc
mov
xchg
pop
cwtl
mov
mov
nop
es
and
jb
insb
cld
loope
ja
fs
cld
cld
pop
icebp
jle
cmp
adc
mov
lods
push
pop
mov
push
shll
sbb
mov
rcrb
fimuls
jge
out
xor
pop
dec
adc
enter
cmc
pop
lock
mov
jae
mov
in
push
xchg
mov
shll
mov
xor
loop
mov
mov
jecxz
mov
mov
mov
cwtl
jae
pop
stos
hlt
xchg
sbb
mov
mov
outsb
pop
sbb
push
call
xor
or
or
push
pusha
xchg
sbb
test
movsb
mov
xchg
inc
mov
pop
cltd
lea
cmp
fsubr
mov
cmpsl
int3
lods
mov
es
sbb
mov
jg
sub
rclb
clc
push
enter
fldcw
popf
mov
in
repz
lret
sti
mov
pop
add
das
fisubl
or
idivl
inc
add
lds
inc
inc
inc
dec
or
xor
es
sbb
dec
jo
pop
push
inc
cmc
mov
js
stos
gs
jns,pn
das
xchg
test
or
popa
data16
les
adc
push
pop
aaa
inc
adcb
call
push
or
fidivrs
xchg
mov
popa
pushf
push
cmp
jl
shlb
mov
fs
push
push
mov
lahf
cmpsb
push
mov
sub
dec
xchg
insl
out
in
shll
in
adc
or
mov
pop
shlb
int3
cli
mov
push
pusha
movsl
jo
jmp
xor
inc
xor
fbstp
xlat
mov
sbb
or
add
ljmp
sbb
testl
adc
push
enter
mov
pop
dec
xchg
lcall
rcrl
jge
and
and
mov
fidivs
dec
cld
dec
sub
into
push
shll
inc
pushf
int3
jp
fcom
xchg
sub
push
push
imul
fisttpll
stos
and
xchg
insb
in
mov
sbb
adcl
xor
cmp
stc
cmp
rolb
sbb
pop
ret
mov
lret
mov
out
sub
lret
dec
add
and
xor
cwtl
mov
mov
popf
mov
in
mov
sbb
mov
sub
in
lds
push
push
repnz
push
push
movsl
adc
repz
push
xchg
lcall
sbb
push
out
cmpsb
es
repz
out
jg
test
pop
jne
push
mov
push
rcr
push
push
cmpsl
mov
sbbl
into
jp
adc
xchg
xor
movb
or
mov
and
fiadds
cwtl
dec
enter
mov
push
notb
cmp
jbe
ss
das
or
in
and
call
jbe
repnz
out
mull
cmp
sbbl
outsb
jmp
adc
mov
mov
mov
xlat
lret
and
lds
pusha
xchg
loope
sbbb
aam
and
mov
push
std
add
subl
pmulhuw
call
jp
xor
shlb
cli
andb
and
sub
add
mov
loope
cmpsl
push
int
es
in
dec
fdivs
pop
jg
in
pop
xchg
lods
repnz
mov
dec
mov
push
inc
fstp
pop
mov
adc
xchg
insl
adc
pusha
fstpl
xchg
test
repz
add
adc
jg
cmp
mov
roll
stos
or
mov
push
mov
cli
test
fstp
add
cmp
inc
sbb
adc
xchg
xor
fdivrl
cmp
dec
inc
dec
leave
pop
cmpsl
and
fisttpll
mov
stos
aaa
lock
or
scas
lds
inc
or
sti
sub
dec
inc
ljmp
and
daa
jns
mov
jb
pavgb
adc
sti
add
inc
aam
int
fidivrs
and
sub
xor
loopne
pop
jecxz
int
fucom
mov
add
inc
sub
dec
pushf
clc
das
mov
push
jnp
leave
imul
sub
push
in
out
xor
popf
jecxz
sub
sub
ret
movswl
inc
mov
out
fiaddl
pop
rclb
and
add
pop
arpl
addr16
mov
xchg
adc
cmp
gs
test
cmp
push
aaa
pop
mov
scas
push
push
push
cmc
dec
test
add
fisttpl
push
movsl
dec
jb
add
fnsave
and
push
data16
and
cmc
sbb
divl
leave
pop
xchg
lahf
inc
mov
movsb
addr16
call
fdivr
sub
pushw
out
andl
add
mov
add
and
fisubrs
dec
lahf
lea
inc
mov
sti
shll
or
dec
push
sbb
test
jecxz
imul
cmp
pop
rcrl
and
sub
adc
in
filds
cmp
mov
in
xchg
pusha
sbb
xor
shll
iret
pop
jg
in
jge
jns
inc
aaa
push
jl
mov
lret
lds
stos
push
pop
sub
xlat
pop
xchg
mov
push
push
movsl
dec
xor
fwait
repnz
push
outsb
insl
and
fstl
mov
mov
adc
mov
push
jle
sub
cs
fistl
sbb
and
mov
jb
push
mov
mov
cli
xchg
push
lret
mov
mov
mov
addr16
or
jne
push
js
add
add
or
and
lcall
outsb
fisttpl
notb
mov
xlat
mov
pop
mov
sub
cmp
cmp
mov
lock
js
adc
and
fisttps
inc
addb
mov
sbbb
inc
mov
in
adc
in
stos
repnz
push
movsb
mov
std
xchg
sahf
arpl
xchg
xchg
sbb
leave
daa
out
xchg
xchg
mov
xchg
ror
repnz
mov
inc
aam
scas
in
enter
push
sub
and
ret
rolb
pop
ficoml
imul
xchg
test
hlt
test
mov
outsl
orl
nop
adc
in
ljmp
enter
out
int3
mov
sbb
xchg
add
test
or
out
jmp
subb
mov
scas
in
inc
mov
imul
mov
out
aas
popf
and
cmpb
aaa
out
mov
mov
scas
mov
pop
xchg
outsl
pop
push
xlat
cmpsl
mov
jno
jne
out
mov
cmp
inc
int3
rcll
out
movsb
and
les
ret
inc
mulb
or
cmp
aad
loopne
dec
jge
dec
adc
or
pop
outsl
filds
adc
pop
mov
ficoml
or
lods
pop
xor
push
clc
sbbl
fnsave
sub
sti
in
add
jb
sbb
ljmp
mov
or
pop
sub
adc
stos
aam
fbld
xchg
std
jmp
mov
xchg
sbb
pop
ja
out
pop
jo
push
int
cltd
sub
cmpsl
xchg
lds
ret
pop
fisttpll
xchg
call
or
jns
or
mov
jecxz
insl
jo
mov
inc
pop
mov
fs
addr16
mov
lock
int3
mov
push
sbb
xchg
xor
xor
pop
xchg
sbbb
ja
mull
ss
sarb
xor
xor
fsubrl
js
dec
cmp
pop
or
or
sub
add
aam
loop
or
fwait
mov
mov
gs
and
popa
les
adc
cld
movsb
jne
dec
mov
push
dec
jae
imul
addb
jo
dec
repnz
mov
subl
xchg
push
repnz
sub
fidivs
jnp
sbb
push
fiaddl
jl
lret
add
jb
and
inc
ja
das
js
mov
int
mov
leave
jge
pop
sahf
sub
hlt
jno
ficoml
add
lea
shrl
repz
pop
add
xchg
cmp
in
lret
adc
cmp
shll
pop
test
or
in
push
fdivs
into
push
mov
stc
mov
int3
add
pop
or
cwtl
or
adc
and
mov
dec
jmp
out
rcll
sub
and
or
jnp
aas
clc
adc
push
sbb
cmpsb
sbb
sbb
div
push
inc
mov
lods
xor
jmp
fcompl
mov
sub
outsl
add
and
adc
add
xor
xchg
outsb
mov
je
cmpsl
aaa
ds
push
mov
adc
in
add
aam
cwtl
mov
add
and
cs
in
fmull
pop
mul
adc
adc
and
sub
or
push
fiadds
int
push
inc
gs
ja
mov
lret
fxtract
push
inc
add
xchg
sub
orl
push
fstpt
lds
dec
hlt
add
ret
dec
aaa
stc
mov
cmpsl
mov
xchg
lods
push
js
test
mov
test
arpl
and
movsl
iret
mov
pop
mov
in
add
call
sbb
lods
in
and
pop
mov
sahf
xor
out
sbb
inc
fdivl
in
push
inc
test
mov
out
push
mov
rorb
in
jle
call
cmp
int3
adc
inc
outsb
popa
aad
mov
sub
adc
inc
aaa
fcmovu
pop
enter
fisubrs
inc
mov
insl
pop
sub
mov
adc
inc
and
xchg
sub
mov
add
mov
jnp
lock
pop
pop
push
cmp
pop
das
push
and
lds
cmp
mov
mov
lret
sub
push
cld
dec
inc
jge
inc
or
mov
adc
lcall
dec
inc
mov
dec
inc
aas
push
scas
pusha
imul
xor
repnz
in
mov
or
adc
out
cmp
test
add
sahf
push
xor
test
jp
hlt
sub
imul
imul
hlt
aam
mov
mov
push
push
xor
loopne
pop
fwait
int3
dec
mov
ret
mov
push
sbb
jb
insb
rolb
cmp
cmc
inc
jmp
sbb
ret
pop
jl
mov
arpl
movsl
mov
push
add
enter
lods
adc
mov
push
mov
sarb
lret
addr16
lods
inc
ffree
into
fadds
pop
mov
aaa
insb
ja
dec
cmpsb
bound
jmp
mov
mov
sahf
xor
inc
cmp
mov
cmp
push
and
mov
dec
xor
inc
lds
test
push
xor
mov
sti
add
jecxz
pop
lods
pop
jle
enter
xchg
jmp
xor
cmp
or
je
inc
fildll
pop
sti
loopne
mov
pop
in
xor
ret
jmp
fisubs
sbb
push
or
outsl
int
push
jg
xchg
jmp
adc
push
pop
push
jb
or
shrl
pop
jo
test
jns
push
xor
mov
nop
cs
sub
out
jnp
popa
imul
fnstcw
or
cld
mov
jne
xor
lods
pop
cmp
negl
sbb
inc
test
clc
xor
std
xor
lar
scas
bnd
scas
push
rclb
ds
test
mov
pop
cmp
gs
cmp
retw
loope
cwtl
sub
or
mov
aam
cld
ror
xchg
ljmp
in
xor
out
mov
xor
xchg
fsubl
or
movsl
pusha
stos
push
fcmovbe
mov
push
movsl
ds
imul
mov
push
sbb
adc
push
jne
cmp
jmp
loop
sbb
mov
mov
aam
mov
fisubs
dec
out
daa
lea
add
jo
call
dec
nop
pusha
in
push
ds
push
repz
pop
faddl
adc
mov
jle
mov
pop
sbb
and
sbb
aam
lcall
pop
negl
adc
pop
dec
adc
mov
pop
sahf
in
lcall
push
lea
add
mov
xbegin
insb
xchg
fs
jb
or
sarb
pusha
mov
add
fsubs
add
cwtl
jne
adcb
je
jp
jg
xor
push
sub
sbb
pop
xchg
pop
pop
fadds
inc
mov
sbb
aam
and
sbb
dec
je
xchg
pop
test
push
les
add
lahf
das
in
cs
insb
popf
andl
cmp
scas
pop
mov
cmp
cmp
mov
adc
jne
mov
and
xchg
roll
sub
jecxz
xor
fs
xchg
xchg
call
movsb
xor
sbb
lods
jg
jbe
cld
fiadds
aam
xchg
xchg
inc
and
notb
stos
push
dec
std
pop
mov
mov
fs
pop
ffreep
lcall
mov
clc
mov
add
loopne
lock
xchg
lret
scas
aas
lcall
pop
jb
jl
mov
dec
sbb
sub
data16
xchg
stos
out
dec
imul
push
mov
ja
out
gs
mov
and
or
or
inc
movsl
jmp
enter
mov
jmp
or
into
into
lcall
jge
mov
cli
xlat
call
pop
cmp
xchg
test
xchg
mov
and
outsb
je
jo
pop
dec
test
out
cmp
roll
adc
and
out
scas
int3
cmp
call
ftst
push
jmp
fistl
and
cwtl
repnz
mov
repz
or
fildl
xor
adcb
in
mov
dec
bound
push
sbb
sarb
test
dec
push
jmp
sbb
push
icebp
and
loop
jp
mov
dec
push
lret
loope
sahf
rcll
push
out
sahf
repz
das
ljmp
in
push
lahf
push
lods
es
js
loopne
cmp
lret
mov
or
dec
rorl
insb
fstpt
jb
or
mov
popf
jae
jle
xchg
rorb
icebp
cwtl
lock
jge
rcrb
ljmp
inc
ljmp
pop
test
imul
mov
mov
cli
loop
test
push
push
out
push
and
sbb
push
ja
das
sub
sti
in
inc
ja
mov
dec
mov
orb
cmp
push
aad
aam
mov
jo
add
out
dec
pop
pop
mov
xchg
jae
into
nop
adc
imul
stos
jae
adc
cli
das
cmp
dec
xchg
lret
aad
push
lds
sbb
xor
popa
lret
fildll
xor
fsubs
or
push
cmc
lds
imull
movsb
in
xchg
addr16
cmp
cmpsb
loopne
ret
xchg
test
paddb
jge
in
and
dec
mov
leave
push
dec
into
xchg
bound
jbe
fstpt
jnp
repz
fdivs
pusha
imul
mov
aaa
push
out
int
or
mov
pusha
inc
push
lods
inc
fcompl
faddl
fwait
in
vpsadbw
fcomps
pop
sub
scas
js
or
cmc
pusha
add
or
das
sbb
add
jmp
xlat
sbb
pop
outsl
imul
xor
xor
or
add
nop
add
enter
les
mov
pop
adc
sub
popf
xchg
mov
push
pop
xchg
pop
mov
mov
nop
mov
fdivl
or
sbb
mov
jne
add
iret
xor
and
add
movl
inc
fcomps
push
cmpsl
in
push
mov
pop
test
shl
sub
push
or
in
lds
and
cmpsb
data16
cmp
jmp
or
mov
adc
jae
movsl
xor
repnz
dec
fcomip
sbb
add
into
dec
pop
xchg
dec
js
inc
push
lock
cmp
sub
mov
and
enter
sahf
push
stos
or
scas
lds
hlt
popa
mov
hlt
lcall
jno
sbb
popf
ss
mov
sbb
rcrl
or
cmc
add
cmp
das
cmp
cltd
ds
add
adc
cmp
pop
outsl
mov
pop
add
lods
jo
xlat
dec
jge
int3
dec
mov
mov
push
fisttps
jl
repnz
adc
int3
sub
pusha
sub
enter
cmp
js
mov
jmp
inc
enter
jnp
imul
xor
dec
xlat
cmp
sbb
pop
sar
int3
leave
aaa
or
or
xacquire
pushf
xchg
sub
jg
pushf
clc
pop
movq
cmpsl
mov
loopne
cmpsb
out
mov
cltd
repnz
out
test
aam
outsb
icebp
or
fcompl
out
scas
cmpsl
dec
ret
and
mov
das
mov
lock
mov
mov
push
pop
ja
mov
addr16
ret
adc
lret
jno
sbb
scas
enter
filds
inc
sbb
pop
jo
in
in
subl
inc
push
call
popf
int3
adc
ja
mov
push
pusha
and
mov
dec
mov
mov
mov
or
and
dec
ret
pop
mov
jg
in
or
int
pusha
and
out
dec
mov
xlat
fninit
dec
outsl
sub
jns
out
fldcw
fistpl
push
aas
outsb
das
xchg
imul
jno
lock
sub
or
sbb
out
adc
xor
adc
add
test
cmp
sahf
xchg
mov
stos
push
lds
das
add
repz
fs
movsl
addr16
pop
bnd
xchg
pop
jp
xchg
inc
mov
or
in
fsubs
fsubs
idiv
loopne
out
enter
insl
dec
mov
cmc
pop
and
ss
mov
out
int3
pop
movsl
sarb
in
or
sbb
das
mov
xchg
test
scas
pop
sub
cltd
mov
icebp
pop
test
and
icebp
jmp
iret
and
mov
pop
data16
fldenv
lret
adc
xchg
mov
imul
xchg
adc
scas
imul
sar
ud1
mov
rdpmc
ret
fadd
mov
repnz
lret
sbb
sub
push
shrb
adc
cltd
lahf
sub
mov
ja
and
int3
enter
repnz
or
sbb
add
hlt
fmul
std
cmp
aas
pusha
addr16
mov
mov
adc
inc
leave
ret
mov
or
sub
outsl
clc
dec
xchg
pop
inc
cmp
inc
cmp
mov
lock
adc
in
inc
sub
mov
jbe
test
pop
push
cld
and
pop
cld
cmp
xor
out
adc
inc
lea
loopne
fidivrs
into
out
std
inc
dec
xchg
cmp
fstps
in
sub
cmp
fildll
test
mov
fxch
shlb
lret
jecxz
fwait
add
aam
jp
xchg
mov
lahf
cmp
cli
ret
sub
cmp
push
pop
insl
dec
ret
js
add
adc
cmc
repz
insl
rcl
cmp
push
aaa
test
xlat
adc
xor
push
mov
jl
rorl
test
fwait
out
push
ds
in
push
jo
js
cmp
adc
fisttpl
cmp
and
xchg
adc
jg
inc
xchg
push
inc
sbb
cmp
lret
cs
test
adc
out
xor
lock
mov
add
xor
xchg
push
adc
or
fwait
xor
push
popf
mov
push
lret
test
insb
les
mov
andl
mov
dec
idiv
xchg
xchg
sbb
push
jns
and
mov
pusha
cmpsb
xor
mov
pop
mov
test
aam
sub
ljmp
mov
in
into
aam
jle
lcall
sbb
adc
lret
inc
push
jge
xor
jp
out
inc
mov
fsubl
mov
repnz
rorb
sysret
into
dec
insb
fcoml
adc
out
sub
push
cmpsb
adc
push
cmp
jbe
int3
dec
jecxz
cmp
dec
jecxz
testb
sub
fisubrl
les
cwtl
scas
pusha
mov
inc
jge
aad
insb
test
out
lret
sub
pop
pop
insb
sbb
and
fs
jae
dec
je
cmpsl
push
mov
in
xchg
call
jns
or
mov
mov
or
lea
jle
or
mov
cmp
shl
dec
js
xchg
mov
xchg
jle
mov
lahf
jne
xor
cmp
sub
out
adc
shr
dec
and
cmp
pusha
es
rcll
fisubrl
fildl
mov
sbb
dec
repnz
xor
mov
sbb
add
cmp
rcrb
in
int
xor
mov
sti
test
les
stos
sbb
sub
push
inc
clc
or
cmp
mov
or
cmpsl
xchg
xor
inc
mov
cmpsl
mov
adc
and
and
cld
data16
cmp
cmpsb
adc
inc
jae
cmc
or
js
fnsave
xchg
push
test
sbb
jne
out
mov
test
lret
fwait
sub
mov
test
mov
cmp
fisubs
adcl
cmp
aas
jae
mov
adc
pop
xor
pop
and
inc
fisubrl
push
inc
and
gs
mov
inc
dec
inc
movsl
jecxz
lods
sbb
pop
push
hlt
test
popa
mov
loop
loop
xor
rcr
add
mov
mov
xor
pop
lret
add
cmc
inc
xor
fsubrs
ljmp
call
daa
imul
jo
adc
and
cld
jle
int3
pop
imul
outsl
push
cmp
jl
xchg
push
out
add
nop
adc
fyl2x
pop
mov
imul
pop
jle
mov
fwait
dec
sub
nop
adc
mov
pop
sahf
daa
aaa
pop
pop
inc
jp
outsl
or
fld1
jmp
mov
movsl
dec
popf
in
fisttps
fucomi
inc
mov
cmp
leave
es
dec
in
outsb
rcll
mov
out
in
mov
pop
shrl
lock
pop
xor
dec
mov
dec
mov
icebp
sarl
sbb
lret
or
dec
mov
xchg
sbb
std
leave
aaa
aaa
in
mov
mov
push
jbe
mov
lret
mov
sub
mov
hlt
add
and
sub
and
dec
mov
orps
or
push
dec
mov
and
subl
or
or
adc
inc
mov
jmp
pop
mov
popa
mov
add
jns
or
js
dec
movsb
nop
lret
out
push
pop
cltd
xchg
repz
sbb
mov
repnz
das
pop
mov
mov
pop
imul
pop
sub
xor
fstl
movsb
sbb
cmpl
cwtl
pushf
loopne
xor
sbb
test
out
add
and
out
int
loopne
sub
mov
inc
pop
dec
lock
and
xor
ljmp
inc
scas
inc
push
and
inc
cli
addr16
mov
push
adc
pop
stos
mov
jle
popf
les
sahf
insb
fisubs
adc
dec
adc
inc
push
inc
jae
test
test
cld
outsl
dec
or
xchg
lock
mov
outsb
ljmp
stos
lock
cmp
push
pushf
nop
scas
ret
cltd
data16
imul
icebp
add
mov
pop
icebp
jo
push
aam
repz
fstl
xchg
xor
rcrl
daa
sub
push
sbb
cld
pop
adc
loop
xchg
movsb
xchg
mov
mov
repz
and
das
pusha
and
cmpsb
leave
ret
inc
push
cmpsb
nop
push
mov
push
push
xchg
in
dec
repz
lahf
andb
xchg
test
imul
sub
stos
movsb
cmpsb
in
push
push
insb
lock
jmp
in
adcb
adc
mov
sbb
mov
fisubs
and
cmp
aad
mov
fisubrs
in
mov
mov
fwait
es
loop
mov
data16
mov
cmp
movsb
aad
cs
jns
jno
inc
in
popf
or
cmpsl
sbb
mov
push
ret
loope
or
sub
outsl
push
adc
insb
mov
dec
or
dec
aas
dec
dec
ss
stc
aam
mov
adc
xchg
lcall
sub
cmp
ret
sbb
cmp
enter
dec
imul
stc
or
push
sbb
sub
imul
sub
dec
iret
jge
mov
mov
loope
roll
sub
out
mov
mov
dec
sbb
lahf
pop
dec
inc
xlat
dec
xor
pop
call
aam
and
in
aaa
pop
mov
sbb
mov
repnz
addr16
scas
sbbl
dec
lea
lcall
push
mov
loopne
push
mov
dec
leave
or
into
add
xchg
jp
add
roll
inc
sub
fnsave
and
lea
xor
std
imul
xlat
rclb
and
xor
dec
jo
subl
push
pop
xchg
fidivrl
data16
scas
inc
mov
fnsave
scas
mov
mov
xlat
neg
jecxz
ret
adc
movsb
xor
mov
in
jp
xchg
sbb
hlt
fadds
adc
pop
pop
pop
fdivrl
dec
jne
and
sahf
and
ljmp
jp
cmpsl
shrb
dec
push
sti
insb
pusha
inc
mov
lods
xor
push
cld
sbb
or
and
inc
jno
xor
lds
jmp
sub
sbbb
cwtl
dec
push
inc
enter
repz
scas
dec
in
add
ljmp
loope
cmp
pop
into
lret
int3
jbe
or
or
pushf
sbb
dec
cli
sbb
pop
sub
movsb
sbb
es
mov
inc
packuswb
aad
cmp
test
mov
bound
dec
sar
popf
add
mov
xchg
push
bnd
sub
pop
inc
ljmp
xor
cmpsb
movsl
fsubl
or
imull
lock
jle
mov
add
pop
push
xchg
out
mov
and
and
push
call
js
repz
and
jp
cmp
mov
or
dec
jge
mov
test
lcall
ficomps
mov
mov
push
test
pop
fldt
es
les
lret
clc
pop
cmp
loopne
shrb
das
cld
shlb
add
movl
incl
xchg
push
sbb
dec
test
dec
mov
or
or
add
iret
cld
in
fxch
push
stos
mov
scas
pop
test
cli
cmp
cwtl
dec
ret
mov
call
push
mov
inc
jmp
push
lock
cwtl
xor
icebp
inc
xchg
insb
arpl
aas
popf
xchg
dec
push
jae
test
sti
int
jb
cli
shr
mov
jg
cwtl
insb
cmpsl
outsb
movsb
mov
sbbl
iret
dec
jmp
nop
daa
imul
sub
int
cmpsl
xlat
repz
int
enter
fnsave
inc
pusha
fsts
push
les
push
and
sar
lods
fwait
call
repz
arpl
popa
push
push
sub
int
jecxz
mov
iret
add
ljmp
in
shll
test
out
rcl
scas
fwait
push
xchg
lods
mov
mov
imul
inc
xor
ret
inc
push
daa
and
pop
jbe
push
pop
adc
or
dec
jae
lret
or
dec
out
xlat
cld
shl
ss
in
sbb
add
dec
or
cmp
pop
cmc
push
pusha
leave
inc
mov
ret
dec
in
test
int
nop
aam
loopne,pn
push
mov
lea
inc
enter
xchg
xchg
sbb
adc
inc
cmp
mov
pusha
popa
cwtl
sub
jg
popa
rcr
sarb
add
imul
std
add
in
or
inc
push
std
and
loope
mul
repnz
repz
jbe
adc
cmc
inc
inc
test
xchg
aas
cmp
aad
mov
rcr
movsb
add
sti
xchg
add
lods
push
shl
inc
jns
lods
mov
adc
pushl
aad
mov
sbb
xor
or
inc
push
mov
cmp
or
and
icebp
cmpsl
push
cmp
inc
push
roll
lret
cmp
xorl
push
push
inc
jmp
sub
cmp
test
dec
repz
hlt
sub
jle
jmp
out
inc
pop
sub
dec
insl
fwait
push
xor
dec
push
stc
jnp
fnstenv
enter
or
push
rcl
nop
pop
arpl
rcrl
das
jmp
push
or
adc
mov
push
adc
or
inc
fldenv
lret
xchg
mov
sbb
lret
jbe
mov
movsb
mov
dec
out
cmp
clc
inc
pop
xchg
lahf
xchg
mov
lods
or
sub
hlt
sti
fmull
cwtl
int3
mov
sub
sbb
or
inc
mov
sbb
adc
pusha
cs
dec
mov
test
jl
in
sbb
data16
jnp
mov
xor
mov
fstl
mov
dec
inc
shlb
xchg
fstl
lea
sub
mov
lcall
or
inc
imul
add
out
stc
dec
mov
sbb
mov
push
jae
scas
cmp
ds
shr
mov
push
adc
adcb
jae
aaa
sbb
lea
or
shrl
push
lret
scas
cs
mov
jmp
jle
jle
xchg
sub
cmpsl
jle
mov
or
xchg
leave
repz
clc
dec
rolb
in
push
pop
popf
loop
mov
vandps
mov
mov
loop
fidivrs
mov
inc
inc
push
inc
inc
aas
les
ja
fiadds
xchg
jae
daa
or
inc
pusha
mov
inc
neg
lret
jmp
call
enter
mov
xlat
dec
fs
cmc
je
cld
adc
mov
cmp
xlat
mov
aad
pop
in
pop
xlat
lock
insl
pop
push
hlt
jecxz
test
pop
hlt
test
je
inc
mov
dec
push
aaa
ja
out
daa
inc
nop
pop
insb
pop
lahf
pop
push
nop
cli
jle
xchg
cwtl
adc
and
je
sub
inc
mov
push
aas
out
or
sub
and
xchg
mov
fs
jnp
xor
jbe
into
jo
cltd
push
fbstp
push
add
or
lret
sub
cmp
imul
jge
out
dec
push
mov
push
push
mov
mov
xchg
int3
int3
incb
aas
loope
lcall
cmp
jbe
aad
sahf
orl
das
jle
adc
cmp
cmp
push
sbb
jg
aam
js
jle
mov
mov
stos
mov
dec
andb
out
mov
imul
add
sbb
mov
pop
fadds
add
add
push
cmp
xchg
sarl
mov
clc
es
cmp
roll
and
test
lea
jno
js
mov
xchg
push
push
or
loope
lret
mov
xlat
xlat
stos
gs
push
nop
xor
mov
jle
cmp
mov
js
popa
popa
lds
aas
pop
aad
sub
out
add
mov
push
nop
mov
mov
xchg
in
ficompl
call
xchg
xor
xlat
xchg
xchg
rcl
push
xor
cmp
subl
arpl
xor
aam
mov
dec
clc
sub
incb
cmpsl
xor
out
inc
mov
fwait
scas
adc
add
push
xor
bound
mov
cltd
add
inc
jbe
sbb
shr
aas
inc
mov
int
test
mov
mov
test
fstps
cli
int
and
push
and
add
inc
fnsave
sbb
ljmp
sbb
xor
add
mov
pop
cltd
jo
punpcklwd
ret
jno
es
add
lods
movsb
xchg
dec
cmpsb
mov
inc
adc
inc
mov
xchg
adc
add
scas
or
xor
mov
sbb
jo
xor
sub
sbb
shlb
mov
cwtl
and
test
xchg
mov
lcall
jle
mov
xchg
sbb
cmp
push
xchg
cmpsl
cltd
je
dec
es
fdivrs
and
mov
mov
fisttps
stos
ficomps
push
jge
fnstenv
repnz
and
xor
shll
xchg
inc
sbb
out
sahf
inc
loopne
ljmp
lods
mov
test
in
add
or
jns
add
inc
icebp
fildl
dec
mov
ljmp
dec
mov
call
cli
sti
mov
dec
fistl
sbb
pushf
ljmp
je,pn
mov
lds
push
mov
add
loopne
icebp
mov
inc
test
cmc
xchg
inc
outsb
ss
js
adc
cmpsb
jecxz
mov
inc
dec
pop
pushf
jo
pop
pop
sbb
mov
mov
scas
scas
cwtl
out
adc
xor
mov
sub
insb
lcall
push
int
xchg
testl
or
pushf
mov
push
pop
mov
dec
mov
push
das
mov
insb
scas
xor
dec
loope
xchg
mov
push
adc
mov
ret
mov
xchg
rcrl
inc
mov
in
in
imul
divl
xchg
stos
adc
sbb
inc
push
add
xlat
popl
aaa
cmp
and
leave
cmp
pop
mov
arpl
jg
adc
test
fcomps
gs
jno
arpl
lahf
mov
push
movsb
push
mov
xchg
cmpsb
pop
sbb
aaa
sub
sbb
dec
or
sub
jle
shlb
lea
shlb
shll
loopne
fcmove
and
adc
push
mov
xorb
mov
addl
mov
rol
pop
hlt
cmp
adc
insb
inc
sub
sub
xor
push
push
jb
ljmp
dec
iret
jno
pop
jb
xchg
aam
flds
jno
and
pop
push
jns
inc
in
xchg
push
sbb
xorps
rorb
push
mov
outsb
fs
popf
jl
out
negb
ret
cltd
iret
dec
movsb
clc
outsb
rsqrtps
cmp
pop
mov
cs
lea
das
xchg
sbb
fisttpll
sbb
mov
or
adc
es
dec
cmp
adc
cld
pop
pop
ret
fs
adcb
hlt
mov
sahf
aaa
cli
and
or
add
fadds
repnz
adc
mov
bound
jns
jge
ljmp
xor
cmp
in
pop
das
dec
mov
lea
and
jb
ja
loope
jae
dec
pop
dec
dec
mov
adc
and
pop
jbe
xchg
add
fsubrp
pop
int3
ds
jecxz
fbstp
leave
dec
sub
add
in
pusha
xorb
inc
test
pop
es
mov
sbb
mov
xor
les
mov
loop
xchg
cmp
add
das
fucom
popf
mov
push
xor
test
xchg
mov
out
sti
dec
add
mov
jl
dec
addl
push
pop
fadd
push
call
cmpsl
push
dec
movsb
cmp
test
push
test
in
mov
sti
pusha
adc
add
jecxz
lret
insb
nop
mov
cwtl
jo
scas
call
push
sub
mov
pop
mov
push
lods
js
jecxz
or
cmp
sbb
cmpsb
pushf
pop
iret
cmc
mov
int3
test
jecxz
pop
mov
cli
aaa
dec
bound
pop
inc
into
adc
test
out
das
fwait
test
loop
rcrb
adc
ret
outsl
add
lock
movsl
jnp
scas
std
pop
xor
movsb
stos
ja
and
pop
test
pop
mov
je
mov
push
cmp
movsb
dec
and
sarl
sti
mov
shlb
mov
jae
sub
loopne
mov
mov
mov
scas
das
imul
test
repnz
mov
or
jo
or
sbb
inc
std
lcall
fwait
push
sub
xchg
pusha
jl
int
inc
dec
insl
loope
mov
lds
aam
stc
mov
bound
gs
jns
dec
lock
and
adc
sbb
stos
or
aad
xor
lds
xor
jns
popf
jns
lcall
mov
and
cmpl
cs
sarb
inc
stos
mov
movsl
dec
add
cltd
scas
mov
mov
cmpsb
sub
ja
dec
fsubr
rcrl
sub
mov
repz
in
loopne
jp
pop
mov
dec
inc
mov
xor
lret
fnstenv
pop
in
xchg
xor
sbb
xchg
jbe
jnp
rcr
scas
mov
cwtl
cmp
xchg
jns
fiadds
push
fidivrl
pop
mov
popf
jae
fistl
cmc
or
pop
shl
in
mov
mov
jmp
inc
push
add
xchg
movsb
pop
pusha
inc
mov
in
xchg
inc
xlat
testl
lret
dec
push
jb
mov
dec
mov
dec
pop
jbe
cmpl
ss
inc
notl
cs
jmp
mov
adc
sbb
xor
push
loop
sub
je
pop
jae
sub
fnstcw
sbb
das
xlat
enter
mov
sti
in
in
arpl
inc
ja
js
jge
outsb
ret
mov
das
test
lahf
es
mull
nop
pop
ljmp
jnp
inc
jle
nop
in
fmuls
cmp
loopne
out
sti
xor
xor
mov
daa
jge
mov
dec
xchg
movsl
adc
adc
fs
in
adc
inc
fs
fimull
push
sti
ja
gs
faddl
int3
and
dec
mov
add
mov
popf
push
std
iret
inc
xchg
xchg
lahf
lea
sbb
pop
repz
in
jbe
inc
sub
lods
inc
int3
int3
cmp
pop
sub
sbb
daa
clc
pop
xor
es
je
mov
add
out
jecxz
xchg
subb
cmp
cwtl
cmpb
adc
hlt
jb,pt
sub
pop
jo
add
push
jecxz
adc
or
out
push
mov
pop
cmp
adc
and
sub
jl
aaa
fucomp
test
cltd
sbb
mov
nop
mov
imull
insb
cmpb
xlat
jmp
sub
enter
dec
aad
or
push
jge
fcompl
push
ljmp
jne
adc
xor
inc
gs
mov
jecxz
insl
add
cs
jo
rcrl
jge
pushl
rorl
into
test
adc
push
icebp
insl
xchg
mov
and
and
mov
fldl
mov
call
arpl
push
movsb
std
inc
inc
inc
addb
in
pop
sbb
xchg
loope
jl
or
cmp
push
mov
cwtl
movsl
jge
fmuls
sbb
outsb
loop
outsl
jl
push
mov
popa
inc
roll
or
jge
lds
orb
push
jg
pop
add
rcrl
cmpsl
jmp
inc
fcomps
push
sub
movsb
or
pop
add
repz
xchg
jge
inc
fwait
xor
pop
mov
mov
adc
cmpl
mov
dec
aas
push
popa
mov
andb
aad
jnp
dec
outsl
pop
pop
cmp
inc
mov
rorl
jns
jecxz
pop
xchg
rolb
xchg
insl
adc
fldcw
cmpb
stos
jns
jo
jne
mov
dec
mov
xor
pop
sbb
mov
rolb
xchg
daa
test
push
out
ret
cld
adc
movsb
shrl
pop
test
mov
pop
sub
in
jg
jl
jmp
cmp
mov
dec
cs
shrb
in
xor
adc
jg
std
and
roll
pushf
imul
dec
out
push
out
mov
insl
pop
xchg
jp
cmp
std
sub
mov
test
in
out
sbb
cmp
jecxz
aad
lods
push
outsl
jbe
orl
mov
rol
es
jg
repz
mov
add
cmp
rolb
pminub
sbb
outsl
mov
ftst
outsb
jle
lods
ficoms
push
in
std
xchg
lods
je
add
nop
xor
xor
cmc
in
lods
ja
cli
add
cld
popf
or
mov
outsb
fsubs
push
out
pop
adcl
xor
or
and
enter
inc
and
pop
push
std
stc
inc
pop
aas
jnp
mov
movsb
dec
loop
push
ret
push
and
imul
pop
xor
sahf
add
and
int
je
in
jns
std
xchg
test
loope
outsl
sbb
rcll
scas
jne
xchg
fsubl
or
and
nop
orb
neg
jae
jns
pxor
or
cmpsb
shll
mov
push
mov
out
inc
adc
out
jmp
sti
mov
push
mov
std
aam
fwait
or
mov
leave
jge
push
dec
push
std
jp
jnp
mov
jo
flds
jae
mov
es
jge
xorl
in
pop
mov
mov
push
jmp
cs
lods
int
xor
push
cmpsl
pop
dec
rorb
jg
out
mov
pusha
cs
icebp
andl
push
xchg
std
push
inc
aam
push
frstor
fildll
cmc
mov
push
mul
cmp
ret
daa
jb
cmp
imul
es
xor
dec
dec
rorl
cwtl
add
in
mov
cli
mov
xorb
out
fsubl
cli
sub
sbb
sahf
xchg
jno
outsl
sub
pop
imul
mov
inc
scas
xchg
mov
xchg
cmp
pusha
shr
loopne
dec
fstl
shl
jno
icebp
mov
xor
pop
shll
movsl
add
cld
mov
push
pop
adc
popa
mov
lahf
sbb
loope
stos
xor
mov
mov
xchg
in
xor
add
outsl
jne
outsl
inc
sbb
dec
sbb
orb
repnz
lock
orb
icebp
pop
shrl
scas
popf
mov
jg
sti
pop
test
mov
adc
fmull
stos
add
adc
mov
xchg
jae
mov
cmc
sub
xchg
dec
add
mov
xchg
in
out
stos
push
lods
xor
movsb
inc
xor
xchg
lret
sub
sub
mov
out
mov
inc
leave
fmuls
adc
pusha
js
in
jmp
in
neg
iret
sub
mov
int3
push
jns
dec
popf
mov
cwtl
cmp
movsl
fldl
push
push
out
icebp
adcl
mov
sbb
pusha
sbb
push
rcll
out
loope
mov
sub
push
mov
ret
sub
adc
adc
jo
arpl
imul
mov
jne
sti
stc
repz
sub
imul
jne
orl
mov
inc
int
xor
fs
push
cwtl
popa
das
mov
sbb
jecxz
sbb
out
pushf
or
jne
fsubrl
dec
sbb
or
fisubrs
xor
add
hlt
or
out
sbb
into
jp
xchg
out
insb
push
dec
xor
test
scas
ljmp
in
test
push
pop
pop
out
in
mov
jmp
sub
add
mov
mov
or
sub
popf
mov
dec
mov
sarl
pusha
jl
dec
test
pop
out
add
lock
orb
fcmovnbe
push
push
out
flds
inc
jle
xor
push
loop
adc
push
push
test
mov
stc
pop
jb
pop
xchg
js
aaa
std
or
imul
ljmp
fists
jns
xor
icebp
xlat
inc
cmp
out
push
sub
out
xlat
data16
cmp
inc
sub
pusha
cwtl
pop
dec
dec
js
in
test
push
jbe
movsl
sti
movsb
scas
push
or
iret
enter
cmp
inc
mov
xor
insb
pushf
cmpsb
or
aam
sbb
inc
push
hlt
push
out
jb
rclb
nop
outsb
fadd
ret
mov
addr16
jle
jl
cmp
sub
xor
cltd
popa
push
stc
shr
push
dec
inc
outsb
xchg
mov
lods
inc
xchg
add
mov
frstor
out
push
or
int
pop
ss
jg
sbb
adc
movsb
mov
or
mov
pop
sbb
xlat
js
pop
movd
sbb
cmp
ret
out
stc
dec
cltd
add
bound
daa
push
shll
lahf
or
mov
or
lds
test
aad
sahf
push
xchg
adc
push
call
mov
cmpsb
je
fadd
cmpsl
sbb
mov
and
or
ds
sub
mov
mov
adc
xor
adc
jb
and
or
lcall
mov
cmp
movsl
rcrb
sub
scas
push
xchg
cltd
pop
mov
popa
xchg
xlat
xchg
sbb
adc
jecxz
lahf
cmp
faddl
ss
dec
cmp
jmp
adcl
add
jns
pop
or
addr16
jl
push
lahf
ja
addr16
adc
imul
jecxz
cmp
daa
cltd
lods
add
pop
and
push
pushf
xor
cli
cmpsl
xchg
push
and
movsl
mulb
popa
mov
push
adc
shl
outsb
fsubs
shll
popa
test
cld
cmc
push
sbb
jnp
pushf
into
ret
ret
arpl
mov
mov
andb
leave
xchg
outsb
mov
movsb
insl
and
inc
sbb
dec
jecxz
iret
fs
jmp
add
pop
xorb
ret
jg
call
and
mov
mov
jb
insl
push
mov
stos
adc
mov
or
popf
and
and
xor
and
mov
push
inc
imul
sbb
jno
xchg
xchg
push
out
push
mov
icebp
enter
jmp
test
cmp
fwait
or
dec
scas
insl
add
dec
and
jb
stos
aas
out
mov
dec
leave
loop
lods
pop
outsb
pop
dec
bound
xchg
icebp
gs
gs
sbb
ljmp
aas
test
pop
and
shrb
loope
bound
call
add
subl
in
rcl
push
pop
or
or
dec
push
and
lds
rclb
mov
outsb
int3
ja
adc
add
sub
cwtl
lds
leave
xchg
jo
mov
sub
sbb
test
push
leave
mov
add
fs
xlat
aam
cmp
mov
stos
jmp
enter
dec
lret
out
arpl
stos
aaa
adc
dec
arpl
inc
dec
mov
xor
pop
movsl
dec
repnz
xchg
pusha
loope
call
sub
lcall
rcll
call
flds
or
rcl
divb
add
dec
ret
or
aaa
push
mov
pop
fs
and
adc
stos
xchg
stc
dec
adc
mov
sub
xor
xorl
jle
xchg
dec
sbb
pop
dec
popf
mov
xchg
inc
add
push
ror
ret
dec
loope
fstpt
mov
cmp
adc
sub
sub
inc
or
sahf
push
xor
sub
mov
or
aaa
test
dec
mulb
fstl
pushf
popa
lahf
js
in
and
ret
test
dec
fcmovnu
sub
imul
mov
mov
cmp
inc
xchg
mov
push
aas
fimull
mov
call
imul
adcb
sbb
test
mov
add
gs
lds
xor
mov
sbb
dec
jge
ds
xor
pop
push
pop
xchg
call
fsubrl
jge
dec
ds
mov
dec
jmp
add
sub
push
ret
iret
push
push
icebp
mov
jecxz
add
sahf
ljmp
loope
sub
test
out
add
dec
mov
aad
cmp
xchg
push
mov
push
aas
pop
cmpsb
dec
add
mov
and
scas
mov
fwait
push
scas
imull
pop
cmp
jo
sub
sub
leave
xchg
sbb
mov
dec
push
mov
dec
push
andb
bound
ja
adc
shr
in
pop
mov
mov
dec
or
movsl
mov
int
mov
outsl
add
mov
or
mov
es
adc
lret
lock
stos
sahf
daa
xchg
imul
es
sub
xor
repnz
mov
inc
mov
jno
add
stos
std
pop
shlb
lds
gs
ror
push
dec
pusha
mov
mov
jp
mov
cmc
rcl
arpl
out
out
mov
mov
mov
leave
dec
jecxz
xchg
movl
fcoml
jp
aas
nop
jnp
pop
int3
xor
xchg
das
add
test
test
or
xchg
arpl
jle
mov
mov
or
daa
cmp
iret
push
mov
movsb
pop
jge
pushl
inc
push
sub
fdivrp
frndint
lcall
in
push
and
pop
pushf
ret
and
ss
or
inc
add
and
pushf
cli
call
int3
int
in
jecxz
add
test
repz
adc
inc
xor
int
nop
mov
pop
mov
xchg
mov
lods
aas
in
xchg
adc
gs
sbbb
js
imul
xchg
xchg
cmpsb
jo
cs
push
xchg
mov
jb
dec
pop
je
fwait
mov
mov
incb
mov
inc
mov
sahf
loopne
dec
ja
bound
or
aaa
fisubrl
out
lahf
inc
in
mov
xchg
pop
test
jmp
fs
popf
sub
test
inc
cmp
call
in
add
jne
std
sub
push
clc
mov
mov
mov
jle
dec
das
xchg
jne
fcoms
adc
mov
addb
mov
add
mov
push
xor
mov
out
rorb
cmp
ja
rcll
and
fbstp
sahf
fstpl
xor
fcmovnbe
mov
xchg
sarb
adc
and
dec
sub
jp
sti
and
and
daa
jl
xor
les
xchg
lock
mov
mov
xchg
cwtl
sbb
xchg
jecxz
mov
into
add
pop
inc
testb
ljmp
aas
or
pop
sti
mull
rorl
pop
cmp
sub
jns
stos
pop
scas
adc
pop
jo
xor
hlt
or
push
mov
xor
movsb
xchg
sti
clc
lahf
add
xchg
mov
and
fadd
mov
gs
pop
shrl
lahf
push
mov
jno
loope
mov
cltd
mov
scas
test
add
xlat
jne
jb
pop
loop
fbstp
inc
mov
push
mov
and
pop
repnz
cmc
jle
pusha
add
xor
in
inc
jb
mov
mov
aaa
add
inc
adc
push
xchg
int
repz
or
pushf
movl
pushf
inc
fisubl
xor
mov
cld
or
jnp
sub
xor
mull
neg
sbb
jo
jnp
or
dec
int3
mov
sti
cltd
fnstenv
sub
xor
xchg
and
movsb
loop
sub
cmp
insl
ljmp
jnp
mov
mov
adc
fxch
xchg
lea
mov
xor
inc
pop
pop
ja
cs
dec
shll
sbb
lret
aaa
mov
mov
daa
jmp
shrl
add
xlat
jns
mov
ljmp
negb
sub
sbb
xor
and
jne
dec
jae
fcoms
cwtl
loop
sub
mov
popa
test
fsubl
sub
mov
fildl
popf
and
inc
or
mov
cmp
dec
push
adc
dec
scas
push
pop
mov
sti
xor
mov
sti
xor
xor
dec
fbld
xchg
and
cmpsl
add
dec
out
add
sbb
aam
rolb
in
icebp
add
push
adc
lods
mov
rcll
cli
dec
insl
jmp
pop
bound
outsl
mov
fsubrs
push
in
shlb
xorl
in
and
add
xchg
adc
icebp
jno
add
xchg
push
cmp
loope
xor
iret
negb
imul
inc
jg
rcrb
mov
dec
add
and
adc
pushl
xor
or
add
outsb
test
xor
js
sbb
jmp
mov
fiadds
fwait
outsb
cmp
add
int3
or
jno
push
mov
mov
xchg
xchg
sbb
mov
insl
sbb
fmull
sahf
insl
push
sub
pop
pop
daa
sar
filds
push
rcrl
jle
imul
ret
nop
imul
mov
loopne
and
push
gs
xchg
mov
lea
dec
stos
popf
xchg
insb
sub
lcall
clc
ret
push
pop
add
sbb
clc
call
lods
and
inc
mov
ret
test
repz
mov
jne
dec
mov
bound
jo
mov
sbb
jb
push
movsl
fucom
add
sub
enter
lock
cmpsb
pop
fs
sahf
rolb
cld
sub
mov
gs
dec
les
mov
outsb
pop
dec
cmp
out
push
push
out
fnstcw
mov
add
add
sub
daa
insb
daa
jne
das
jecxz
jb
ret
lret
push
repz
cmp
add
loop
mov
mov
scas
sbb
jbe
enter
push
shll
mov
mov
clc
xor
pop
sub
xchg
sbbl
les
out
dec
popa
inc
xchg
cmp
mov
push
ficompl
sub
lret
inc
daa
xor
pop
pusha
in
call
mov
pushf
push
mov
pusha
scas
pop
jbe
add
xor
sbb
data16
push
sbb
jmp
ret
push
mov
cmp
dec
js
loop
xrelease
movsb
or
inc
out
mov
and
test
sbb
ror
stc
inc
daa
sub
jg
mov
es
gs
jo
adc
ret
or
jbe
aas
movsl
cmpsl
mov
lret
ja
pop
dec
ret
in
cmp
adc
stos
or
mov
mov
inc
fnstsw
push
xor
aad
mov
cmpsl
rorl
add
push
rorb
dec
mov
out
es
inc
scas
xor
sahf
imulb
aam
and
and
fstl
xor
push
adcl
jns
je
inc
mov
jmp
xchg
int
jl
xor
arpl
push
gs
bswap
divb
mov
pop
sub
adc
bound
addl
pushf
lret
push
mov
out
xchg
pop
push
int
lods
pop
ja
and
cld
lock
pop
test
add
push
dec
out
mov
gs
rorb
xchg
popf
xchg
loopne
push
pop
and
insb
dec
test
scas
orb
xchg
jmp
sahf
cmp
jo
xchg
sbb
dec
imul
inc
cltd
cmp
lock
xor
and
lea
dec
jo
fisttpl
mov
pushf
repz
and
add
pop
sub
fnsave
jae
stos
sub
cld
sbb
shl
adc
data16
mov
push
sub
inc
push
and
arpl
pop
jle
dec
lods
pop
stc
xchg
mov
jmp
pushf
insb
mov
xlat
dec
pop
loop
mov
mov
out
xchg
mov
gs
roll
cmc
add
lods
repnz
jmp
mov
cs
aad
icebp
xor
fmuls
movsl
mov
push
jae
fcmovbe
les
jg
pop
mov
jne
dec
inc
push
pop
loopne
xlat
in
dec
inc
mov
sbb
pushf
cmp
enter
adc
sbb
fldt
fnstenv
stos
insl
popa
fsts
pop
shl
arpl
mov
ret
enter
fcmovnbe
adc
mov
call
out
dec
mov
mov
xor
jmp
movsb
lret
subb
inc
cmc
mov
mov
jb
dec
rorb
cmc
push
imulb
adc
pop
xchg
rolb
into
nop
mov
scas
sub
mov
push
cmp
pop
out
icebp
mov
das
nop
insb
mov
inc
out
pop
dec
xchg
or
fsubrl
jmp
xchg
stc
mov
outsb
cmp
aaa
popf
adc
loope
push
lock
arpl
cmp
xor
mull
jl
sbb
mov
out
divb
cmp
jl
inc
mov
and
xchg
je
leave
mov
mov
xchg
cwtl
adc
movsb
stos
aam
gs
shl
adc
stc
divb
imul
cmpsb
ret
inc
xchg
push
or
mov
push
mov
pop
lahf
mov
rcrl
inc
leave
iret
and
into
jge
inc
dec
outsb
loope
lods
aas
cli
mov
or
jg
pusha
and
mov
test
ja
fldl
int3
jle
pop
xchg
or
stos
xchg
xor
lods
mov
test
iret
or
push
in
pop
popf
cltd
adc
test
jne
lds
add
test
dec
cmp
cmp
shlb
xor
or
mov
xor
mov
cmp
nop
push
popa
repz
mov
addl
jecxz
shll
inc
cltd
add
je
jecxz
jle
filds
or
std
or
adc
add
jo
push
xchg
xchg
das
jp
mov
jmp
stc
mov
stos
or
pop
int
movsl
cmp
mov
repnz
rcpps
aad
test
test
js
inc
sub
adc
mov
mov
dec
into
sbb
sahf
add
dec
mov
ljmp
imul
add
pop
shlb
mov
insb
je
mov
push
or
sbbl
adc
jbe
in
fidivs
stos
jae
push
loopne
inc
arpl
jno
adc
cmc
cmpb
xchg
popa
je
cmp
jns
push
mov
test
pushf
icebp
roll
arpl
and
cwtl
cmpsb
cmp
sbb
outsl
mov
int3
add
cmp
mov
out
mov
adc
lret
in
mov
js
mov
jno
dec
inc
inc
jge
mov
jp
cld
out
fnstenv
sub
mov
add
les
shrb
cwtl
arpl
jb
sbb
xchg
movl
pop
jl
pop
jnp
xchg
mov
test
sbb
aam
out
daa
fiadds
lret
cmp
sub
pop
xor
out
dec
dec
std
xchg
add
dec
adc
js
pushf
fidivs
out
push
loopne
mov
cmp
xor
inc
sbb
dec
and
mov
in
xchg
mov
mov
sub
int
xor
cwtl
adc
cltd
call
pop
mov
aad
icebp
repnz
pop
xor
adc
jo
push
mov
dec
pop
inc
push
cltd
mov
aad
jnp
sahf
int3
adc
ret
sbb
jmp
jno
insl
outsb
push
xchg
inc
pusha
lcall
lods
and
lds
jl
fldcw
insl
push
mov
ds
pop
shlb
and
inc
inc
leave
or
pop
jl
sahf
sub
sub
ja
in
jns
scas
cmpsb
mov
dec
je
xor
mov
fs
and
push
inc
cltd
out
xor
gs
mov
mov
mov
pop
pushf
push
lock
ret
xchg
pop
inc
adc
in
out
xchg
mov
in
lret
dec
enter
and
cmp
int3
or
xlat
lcall
cmp
sarl
xchg
inc
adc
fsubrl
xor
gs
stc
jnp
adc
push
xlat
js
sbb
ret
sub
mov
mov
outsl
cmp
mov
push
dec
dec
test
test
adc
inc
pop
shrl
pop
rclb
pop
fidivrs
sbb
push
add
shr
daa
insl
pop
mov
ret
jecxz
cmp
lret
adcb
addr16
pop
add
mov
syscall
fldl
sub
adc
dec
sbb
push
enter
lds
push
pop
mov
cmpsl
pop
and
fld
jmp
jmp
lea
and
cmp
and
mov
mov
push
pop
inc
push
dec
push
sbb
mov
rclb
pop
pop
je
das
ret
mov
xlat
cmp
outsl
and
xchg
repnz
xchg
bnd
jmp
dec
nop
inc
dec
xor
cmp
sahf
sub
pop
int
fwait
cmp
lret
sub
rcll
xor
insl
fbstp
add
out
in
cmpsb
stos
popf
daa
sbbb
fcoml
outsl
dec
jns
mov
jmp
pop
mov
mov
sahf
xor
jns
push
shrl
adc
and
xor
mov
sti
adc
faddl
mov
aas
clc
add
xchg
insl
stos
sbb
jmp
ret
addb
daa
mov
jns
add
repnz
stos
xchg
rcll
clc
or
fsin
lds
js
xor
or
sbb
and
and
inc
in
mov
dec
out
pop
cltd
pop
sti
jo
xchg
dec
xor
loopne
add
xchg
popa
divl
or
xor
push
sbb
pop
sarl
cs
lret
jecxz
dec
repz
aas
jbe
mov
pop
jae
stc
and
jb
rorl
data16
fsubrs
les
dec
testb
fsubr
adc
cmpsb
push
push
gs
mulb
out
sbb
xor
push
scas
aam
or
lods
out
in
xchg
jge
sarb
push
cwtl
gs
mov
dec
xchg
push
mov
inc
xchg
xor
out
mov
pop
leave
adc
cli
jecxz
sbb
in
out
ror
in
dec
pop
es
xchg
es
adc
inc
pop
insl
lods
shrl
insb
pop
push
mov
sbb
pop
sbb
cmp
pop
adc
inc
dec
jno
popa
push
adc
imul
xchg
and
out
cmpsb
lds
xchg
pop
dec
and
pop
sub
pop
push
imul
pop
icebp
or
dec
subl
xor
iret
leave
fwait
movsb
or
sbb
jmp
cmpb
or
and
jle
xchg
xchg
xchg
lcall
cli
jmp
cltd
inc
clc
dec
sbb
cld
nop
das
pusha
test
push
movl
jne
sub
jae
lcall
mov
jmp
int
std
nop
test
pop
or
insl
push
aaa
negb
lret
xchg
fsubs
pop
add
mov
push
enter
push
shrd
andl
push
jbe
dec
fsubp
addr16
nop
cmp
adcl
dec
insl
stos
mov
or
loopne
jg
into
pop
in
gs
add
cmpsb
dec
push
ror
adc
sub
pop
stc
outsl
stc
dec
jg
out
dec
stos
fsubrl
inc
aaa
icebp
sub
mov
mov
sub
pop
jo
sub
jo
sbb
pop
movntps
push
pop
cmc
mov
adc
jns
ret
mov
in
sub
mov
push
adc
jmp
push
inc
jno
insl
cmp
push
pop
cmp
hlt
lods
rcll
xchg
in
cmp
and
xor
test
cmpsb
cli
daa
data16
clc
bswap
cmp
ret
lret
lcall
bnd
dec
loopne
leave
insb
xchg
push
sub
inc
shlb
ret
hlt
clc
or
and
and
lock
xor
pop
inc
push
rolb
mov
inc
dec
in
cltd
sbb
push
aam
aaa
leave
jns
adc
in
or
mov
arpl
xlat
mov
push
stc
mov
pop
hlt
sbb
mov
jle
jmp
lret
shlb
xchg
xchg
xor
mov
sahf
fs
mov
or
call
push
mov
cwtl
cwtl
mov
mov
andb
movsl
hlt
fists
cmpsb
pop
jnp
cmpsb
ds
xchg
mov
pop
dec
xchg
es
add
add
in
jns
mov
popf
imul
out
mov
cli
mov
pop
daa
cld
jb
stos
pop
adc
mov
xchg
jge
dec
pop
test
leave
ret
aaa
fisttpll
cli
inc
repnz
dec
iret
adc
leave
out
dec
and
dec
aaa
xchg
in
sahf
bound
aam
mov
mov
dec
push
sbb
push
adc
or
divl
and
cld
dec
test
jb
inc
lods
mov
test
test
sub
fldlg2
aam
mov
ja
sarl
aaa
push
dec
xchg
cmp
je
push
js
mov
orl
xor
mov
into
dec
into
xlat
cmc
or
add
pop
sti
or
aad
jle
pop
idivb
inc
jnp
test
imul
jl
and
popa
stc
pop
xor
or
mov
pop
enter
xchg
pop
loop
stc
div
mov
push
xchg
dec
sbb
push
lahf
cmp
xchg
mov
rol
cmpsb
ret
add
cltd
cltd
test
mov
pop
stc
ja
sub
mov
pop
pop
sbb
jbe
jae
xchg
fsubp
into
daa
xchg
inc
icebp
adc
lds
sub
dec
xchg
cmp
pop
fstp
sbb
rclb
jmp
test
pop
test
lcall
fcom
imul
jo
xor
scas
pop
jle
out
xor
add
or
iret
xchg
add
xor
into
mov
dec
push
cmp
imull
and
xchg
repnz
out
fldcw
sub
cld
cmp
mov
pop
iret
add
out
outsl
addb
push
mov
cmp
push
mov
adc
jne
imul
cmp
sub
mov
pushf
mov
leave
fcomp
stos
mov
clc
push
sub
bound
sarb
test
lock
mov
cwtl
push
xchg
repz
and
pop
jg
or
ficomps
dec
popa
mov
out
and
sub
cmp
clc
es
mov
divl
andl
push
fcoms
jmp
dec
cmpsl
loopne
int
add
and
sub
icebp
cmp
push
adc
pop
dec
fadds
fisttpll
pop
dec
inc
ja
pusha
loope
inc
cmp
aam
dec
repz
nop
adc
cmp
and
lea
sub
push
pop
test
fldenv
cmpsb
jp
sbb
fnstsw
in
sub
cmpsb
in
push
sti
aad
cmp
sahf
cmc
into
cmp
pop
xchg
xchg
xchg
sub
dec
imul
cmp
aam
or
loop
dec
sbb
sbb
inc
inc
sbb
jmp
mov
push
lea
rcll
push
inc
sbbb
add
incl
rorl
imul
repz
sbb
xchg
cltd
frstor
adc
arpl
in
dec
scas
mov
fistpl
pop
cmp
xor
stos
ret
in
adc
mov
jle
adc
mov
gs
pop
jne
hlt
sbb
adc
mov
pop
or
jg
pop
sub
dec
clc
xor
mov
insb
lahf
out
iret
rcrl
xor
test
pop
push
pop
ljmp
je
lahf
cmc
mov
sarl
pop
and
or
pop
or
out
add
mov
jne
cmp
fisttpl
or
loopw
sbb
jl
scas
movsb
fmuls
jmp
jg
es
les
mov
sub
es
adc
add
lahf
rclb
nop
sbb
mov
push
xor
pop
mov
adc
aas
pop
orl
jl
push
ljmp
mov
sbb
mov
inc
xor
or
cmp
mov
loopne
cltd
jbe
mov
outsb
jmp
sub
bound
xor
pushf
mov
xchg
stos
imul
lahf
lahf
and
jp
adc
or
adc
loopne
lret
lock
cmpsl
stc
leave
mov
fidivrl
dec
es
insl
mov
lea
mov
xor
mov
mov
rol
test
sub
sbb
sub
hlt
das
sbb
push
les
xchg
in
addr16
push
insb
sub
adc
inc
repnz
push
fwait
or
xchg
sbb
xchg
jge
lcall
jb
out
lcall
aaa
jl
hlt
mov
idivb
rcll
push
adc
aam
xchg
cmp
xor
cmp
test
cmp
cld
pop
cmp
inc
out
clflush
cld
mov
xor
inc
jo
xchg
push
pusha
adc
shll
mov
stos
push
fucomip
test
add
inc
mov
sub
in
or
mov
pop
and
push
push
lcall
rorl
sarl
push
add
dec
xor
xor
fadds
into
stc
aas
movsl
ffree
sub
pusha
lods
or
idiv
add
add
scas
pop
adc
movsl
test
inc
mov
pop
cmp
adc
call
cmp
orl
daa
push
jb
stos
into
je
adc
add
mov
pop
mov
mov
xchg
loopne
nop
mov
fistl
jb
ja
or
mov
ljmp
mov
cmp
out
add
out
jge
jge
jl
dec
jae
sub
push
arpl
pushf
pop
orl
out
imul
fstl
cmp
pop
aaa
dec
sub
and
int3
inc
and
scas
xchg
adc
adc
xor
das
sbb
scas
mov
int3
je
mov
dec
repnz
mov
add
xchg
insl
inc
fidivrs
push
xor
ss
dec
je
or
repz
aam
xor
out
test
push
inc
enter
cwtl
push
mov
stos
stos
jl
sub
lods
push
mov
add
cmp
mov
imul
das
addr16
loopne
jmp
addr16
fwait
cmpsb
into
and
into
push
addr16
dec
mov
and
mov
movsl
fs
sahf
jecxz
cmc
cmp
cmp
rcll
mov
pop
inc
sbb
or
mov
or
dec
dec
or
ja
loopne
out
inc
shll
cwtl
sub
cmp
inc
addr16
pop
jp
lds
insl
in
fisttps
js
outsb
or
and
mov
outsl
sahf
xchg
repz
adc
pop
pop
dec
adc
ds
cmp
aad
sub
sbb
mov
pop
fdivrs
in
pop
mov
scas
es
mov
inc
addl
xor
dec
sbb
sub
cs
jbe
bound
adc
mov
push
aam
lret
mov
sbb
in
add
pusha
bound
inc
push
xorb
xor
xchg
mov
loop
xchg
lahf
or
dec
lahf
cltd
push
int3
shl
dec
jbe
enter
in
lds
add
sub
sub
mov
jno
into
xor
xlat
sub
sti
inc
cmp
adc
outsb
sarb
mov
das
popf
add
pushf
aas
push
test
dec
mov
dec
stos
inc
sbb
xchg
adc
mov
in
mov
sbb
or
cltd
adcl
jbe
cmp
jno
cli
mov
lret
data16
sahf
push
hlt
xchg
mov
sbb
cmpl
imul
and
dec
push
rorb
dec
xchg
subl
mov
test
adc
gs
repnz
dec
mov
addr16
xor
xlat
push
inc
jbe
jb
and
shlb
mov
sub
movsb
mov
pop
mov
add
push
cmpb
mul
xor
out
push
sbb
out
and
insb
out
xor
xor
mov
dec
mov
mov
sti
or
pop
test
pop
jns
cmp
loopne
imul
icebp
mov
rcrb
add
and
decl
in
cwtl
jp
jbe
inc
and
add
cmc
adc
or
lret
stc
inc
subb
sbb
push
repz
pop
xlat
push
xor
notb
cmp
adc
cwtl
mov
inc
and
and
inc
push
lahf
mov
cmc
or
in
xchg
aam
ret
movsb
iret
xchg
scas
out
mov
inc
rcrl
lea
jns
or
pop
rorl
aam
pop
push
das
inc
and
out
push
pop
sbbb
sar
fbstp
add
inc
iret
dec
mov
or
lods
les
arpl
mov
clc
cwtl
outsb
xchg
sub
std
stos
subl
arpl
push
add
cmpb
testl
add
shlb
aam
mov
xchg
add
sub
mov
xor
ja
mov
mov
pusha
mov
fildl
mov
cmpsl
sbb
in
lcall
mov
lret
jp
iret
xlat
dec
stos
push
fdivs
cmpsb
cmpsb
mov
gs
in
out
mov
pop
push
dec
cld
pushf
stc
ja
mov
add
mov
stos
xchg
mov
pop
and
mov
into
fwait
test
cmpsl
jne
adc
sbb
sahf
and
incl
test
testl
inc
loope
daa
repnz
adc
add
iret
in
ret
or
rclb
adc
in
fidivrl
xlat
ficompl
rolb
idiv
push
fwait
jns
xchg
pushf
jbe
std
std
mov
stos
notl
insb
mov
jbe
imul
mov
xor
xor
cmc
in
push
jecxz
and
jns
adc
ret
adc
inc
mov
xchg
nop
jmp
jns
dec
dec
and
pop
lds
cmc
xchg
mov
xor
pop
mov
stc
push
cld
jg
inc
push
jb
sbb
cmp
lret
ds
lcall
push
popa
pop
pop
not
add
fdivl
ja
das
inc
push
dec
mov
out
inc
xchg
gs
ror
rorl
lcall
pop
push
sarb
xor
aaa
push
pop
pop
or
mov
leave
jns
inc
dec
lcall
cmpsl
inc
test
pop
rorb
xchg
push
inc
dec
ss
push
addr16
xchg
fisubrl
pop
mov
rcl
jb
cmp
scas
xchg
enter
and
cltd
cmpsb
test
mov
sub
inc
push
leave
in
iret
gs
inc
fisubs
and
aam
push
push
pushf
movsl
shlb
test
je
or
push
iret
push
and
rolb
inc
inc
loopne
loop
addr16
stc
imul
leave
outsl
xchg
add
in
xchg
loopne
cmpsb
iret
inc
lret
dec
add
es
test
pop
in
xor
sbb
ror
and
stc
not
mov
aad
shrb
outsb
repnz
test
outsb
addr16
rorb
push
sub
pop
mov
inc
leave
pop
sbb
jne
pop
mov
adc
jno
sbb
mov
pop
inc
add
nop
push
mov
out
mov
scas
and
add
mov
adc
fsubrp
test
dec
push
inc
fstp
push
popa
pop
jne
bswap
jne
in
lret
jns
sbb
mov
mov
sub
dec
data16
cmp
out
aaa
mov
xor
push
dec
js
push
les
jg
mov
fsub
icebp
idiv
imul
je
pushf
xor
loop
push
xor
mov
out
xor
movsb
cmp
dec
shrl
adc
idivl
jmp
aad
stos
mov
movsb
or
mov
insl
pop
sti
hlt
and
or
push
cwtl
addr16
lods
ret
lret
ret
movsl
fstps
jo
clc
dec
push
lock
cmc
lea
sub
mov
decb
fsts
ljmp
and
pop
add
test
enter
rcll
xlat
aas
shlb
xchg
jl
loop
pop
sahf
out
ret
clc
test
test
adc
stos
out
lock
and
sahf
push
push
mov
jge
and
dec
int3
push
push
loop
push
or
jo
xchg
sbb
push
inc
loopne
aaa
mov
scas
in
lock
insb
inc
sbb
rclb
mov
cmpsl
xchg
out
sti
ja
inc
aad
mov
cmp
adc
frstor
loope
das
push
mov
sub
add
inc
adc
pusha
clc
addl
cltd
jnp
lahf
sbb
xchg
and
test
in
inc
inc
push
daa
out
fcoms
push
ret
aas
cmp
aas
imul
incl
pop
or
jmp
lcall
xor
xchg
xchg
or
lods
cmpsl
pop
out
add
xor
or
fs
repnz
dec
fildl
mov
out
sbb
outsb
sahf
out
xchg
inc
mov
out
fwait
cmp
stc
and
mov
xchg
and
insb
cmp
cmp
idivl
js
and
inc
push
sbb
dec
shrl
dec
outsb
adc
cwtl
pop
subl
push
rolb
xor
mov
fsubl
lods
xor
sbb
insb
jnp
xchg
scas
mov
lret
adcl
or
mov
pop
out
inc
inc
xorl
aam
jo
mov
dec
pop
xor
cmpsb
cmp
add
xor
lods
adc
fs
iret
test
mov
adc
lcall
das
push
pop
sti
movsb
jp
inc
jp
inc
fdivrl
cli
loopne
js
shlb
out
jne
lahf
and
sbb
lods
mov
sub
xchg
inc
pusha
cli
mov
mov
mov
jmp
lret
pop
popf
mov
mov
cmp
mov
les
roll
aaa
or
sarb
pop
inc
dec
xor
sub
dec
push
arpl
pop
insb
xchg
mov
jmp
mov
inc
mov
mov
push
sub
xchg
mov
inc
cmp
aaa
icebp
aaa
aas
clc
aad
mov
popa
jp
ss
sarb
out
sub
push
jae
lcall
out
add
sbb
fsts
enter
mov
scas
and
fsts
and
mov
stos
jmp
pop
mov
sbb
jecxz
loop
mov
pop
add
xor
and
imul
loope
iret
cwtl
xchg
popa
cld
add
jne
fcmovne
js
daa
in
data16
cmpsb
and
dec
hlt
sub
sbb
adc
leave
out
dec
xchg
cltd
jo
out
test
and
fucomi
mov
xor
add
sub
lock
leave
dec
movsb
sbb
mov
jae
push
cmp
out
mov
add
lret
fidivrs
xchg
xchg
jg
ljmp
outsl
and
and
add
orl
out
in
pop
jns
pop
push
adc
push
aas
dec
pop
out
sbb
lock
loopne
cmp
fldl2e
mov
dec
lcall
cwtl
fsubr
xor
aas
sbb
pop
add
adc
mov
inc
jl
icebp
add
adc
sub
xor
jne
xor
pop
fistl
push
lea
shl
and
mov
cs
data16
popf
adc
add
pop
inc
add
ret
sub
lret
xchg
dec
stos
jl
or
jns
xchg
mov
insl
add
mov
bound
arpl
movsl
mov
mov
lds
and
insl
xchg
mov
mov
test
les
cwtl
das
push
test
and
xchg
ds
fiadds
lea
lea
inc
je
iret
mov
mov
pusha
ret
loope
mov
scas
mov
mov
push
mul
fildl
cli
test
pop
testl
mov
stc
add
mov
cld
jo
inc
sub
std
pop
adc
ret
movsb
jbe
insl
outsb
cmp
push
cmp
out
fwait
icebp
mov
std
add
aam
mov
sbb
mov
scas
xchg
nop
jecxz
test
mov
pop
mov
mov
cmp
push
int3
sbb
pop
push
jmp
add
sub
mov
jp
sub
movsb
inc
scas
mov
imul
test
sbbb
loope
or
sbb
fsubr
adc
mov
cld
xchg
out
andl
and
jle
jle
popa
mov
fnstsw
adc
mov
cmp
jbe
rcr
loop,pt
adc
pop
xor
jp
cmp
pop
mov
hlt
or
mov
aas
cmpsl
scas
in
insb
outsl
mov
mov
mov
cwtl
push
push
ror
movsb
lock
call
fldl
loop
test
dec
jmp
clc
pop
clc
arpl
jns
add
mov
dec
mov
leave
repnz
cmp
hlt
jp
popa
jmp
fs
mov
repnz
mov
mov
or
outsl
fisttpl
or
lods
cli
aam
ret
xorb
dec
jmp
or
lock
jge
and
sbb
fcomi
sbb
inc
mov
leave
cmc
mov
shrb
popf
inc
inc
in
fsubs
enter
das
jle
jae
mov
lret
pusha
icebp
and
scas
push
dec
mov
and
jmp
ljmp
subl
movnti
int3
test
cld
arpl
rcl
and
test
mov
insl
nop
pusha
pop
xchg
jo
dec
stos
test
jg
cli
dec
sarl
addb
inc
dec
in
or
cwtl
and
hlt
or
gs
cmp
or
mov
aad
decb
jp
fiaddl
movsb
jae
xor
xchg
jns
dec
test
arpl
and
push
xchg
inc
es
arpl
and
notl
shl
push
lcall
dec
rolb
stos
rol
fimull
dec
mov
shl
outsb
mov
adc
sub
mov
movsb
outsb
dec
add
mov
mov
cmp
adc
in
ret
xor
mov
cld
mov
rolb
jle
cmpsb
xor
inc
nop
jns
cmpl
mov
adc
cltd
mov
ja
jne
test
sub
jp
add
mov
das
sub
cld
pop
lods
xchg
cs
pop
sbb
ret
mov
sbb
adc
ds
push
das
cmp
pop
jb
jecxz
push
dec
roll
in
mov
cmpsl
das
imul
popfw
clc
dec
pop
pop
push
div
sahf
dec
push
mov
js
adc
movsl
jg
dec
out
sbb
out
jg
negl
testl
or
lods
jae
and
push
jg
adc
dec
mov
xchg
lods
mov
insl
jb
push
push
aam
std
daa
rolb
xor
mov
cmp
inc
xor
inc
mov
or
or
test
clc
xchg
push
jge
mov
lahf
lea
xlat
je
mov
negb
jle
mov
mov
mov
fwait
dec
test
dec
add
xor
stc
enter
mov
out
lock
inc
inc
cli
sahf
insb
int
popa
aam
aam
out
subl
mov
movsl
push
movsl
movsl
xchg
or
test
xchg
repnz
push
jae
jno
sub
cmp
add
pop
dec
fwait
leave
add
jno
movl
mov
mov
cwtl
shlb
jge
or
icebp
loope
push
jno
or
popa
jno
sub
ja
add
pop
movsl
idivl
mov
jae
jg
and
dec
jne
aad
push
ret
popa
push
jnp
mov
mov
ja
gs
aam
adc
gs
adcb
pop
xor
xchg
xor
jge
dec
cs
icebp
jae
data16
mov
arpl
add
mov
andb
fsubrl
or
xchg
aaa
aaa
jno
xor
in
add
and
jo
ds
hlt
push
repnz
push
xorl
ror
jp
dec
orb
mov
push
out
push
sub
push
pushf
dec
lods
push
mov
add
lock
sbb
pop
sub
mov
cmpsb
popf
and
call
cltd
xor
popa
push
js
ja
adc
aad
and
fildl
dec
adc
add
test
fs
adc
push
xchg
sbb
lea
out
mov
xor
sub
xchg
orb
aam
lods
int3
sbb
adc
aas
adc
mov
out
xchg
add
ljmp
test
adc
mov
loope
push
movb
mov
and
inc
jle
jo
jmp
mov
cmc
cmp
lock
xlat
jmp
mov
ret
icebp
sti
jnp
std
fstl
or
sbb
push
hlt
loope
pushf
rcll
js
jne
pop
inc
repnz
fstpt
into
sub
js
fcmovb
test
into
mov
cmp
adc
pop
add
shll
lods
add
cmc
push
notl
daa
jmp
adc
xchg
push
mov
or
bound
sub
stc
xchg
cli
fwait
lcall
xchg
fldenv
sbb
shrl
inc
cmp
jae
sti
sub
mov
adc
mov
mov
arpl
dec
dec
clc
pop
adc
dec
mov
mov
or
out
jns
push
pop
xorl
jnp
push
mov
sbb
aas
out
sub
insb
sti
push
add
out
sub
mov
add
mov
test
cltd
add
and
inc
mov
fisubrl
push
movsb
cmp
aad
lods
adc
aam
xchg
lret
fsubr
jmp
mov
ljmp
les
shll
icebp
and
mov
cmp
jp
ret
pop
movsb
gs
jecxz
or
aaa
test
test
test
out
scas
lahf
ret
and
mov
sub
pop
push
cwtl
add
and
jno
push
and
aam
push
sbb
push
adc
cmp
loop
push
loop
stc
int
ffree
insb
xchg
sub
shrl
icebp
outsb
out
ret
bound
dec
mov
dec
ja
fisttps
andl
mov
jo
aad
cld
in
jae
push
ret
add
out
push
xor
shl
sub
add
xchg
cs
and
dec
cmp
jns
fstps
lea
popa
inc
adc
hlt
cmp
movsb
add
stos
clc
fwait
jae
jg
in
pop
divl
xchg
and
jmp
adc
bound
add
add
jne
scas
filds
or
push
cld
dec
ss
lds
add
add
addr16
adc
mov
shrl
repz
jae
in
fstpl
aaa
sub
cmpl
repz
jle
aaa
inc
pop
ljmp
and
insb
jae
aaa
inc
test
jle
adc
dec
ja
addr16
push
pop
dec
ret
je
sub
repnz
fsubs
push
in
std
cmc
out
sub
dec
jne
jmp
icebp
iret
insl
decl
out
shrl
dec
jae
out
std
ss
fld1
pusha
and
lods
lret
sti
ljmp
out
fstl
push
pop
pop
pop
cwtl
out
and
adc
jnp
iret
dec
dec
or
shlb
mov
sub
pop
popl
xchg
pop
cli
xorb
ss
lods
pop
out
icebp
dec
jno
add
insb
push
repz
je
mov
adc
xor
mov
outsb
cmpsl
xchg
mov
push
and
dec
aad
stos
jbe
mov
mov
dec
bound
lods
popf
inc
sub
xchg
lods
cli
push
sub
xor
clc
test
arpl
or
inc
lret
xor
push
frstor
rcll
sbb
push
xor
mov
pusha
aas
mov
loopne
idivl
cmp
inc
adcb
or
out
dec
and
sbb
test
aaa
lds
xchg
and
fdivp
iret
dec
int3
or
incl
cmp
pop
and
jne
sbbw
iret
shrb
popa
rorb
and
imul
js
ret
jns
adc
rcrl
pusha
sahf
add
fwait
mov
jnp
and
lea
lcall
fdivrl
popa
loop
cmp
lcall
pusha
es
scas
add
popf
cmp
add
jno
in
out
pop
in
push
ljmp
sbbl
into
mov
dec
pop
scas
leave
mov
mov
data16
jp
fdivs
push
or
pushf
mov
cmp
sub
stc
mov
repz
mov
jae
loopne
mov
mov
and
mov
paddsb
pop
xchg
aaa
fstp
xor
mov
push
sahf
lahf
or
xor
cmp
push
popa
out
imul
in
test
jge
loopne
fmul
out
jo
or
push
xlat
out
jb
ja
fisttpl
and
and
out
and
outsb
mov
out
shll
stos
cmpps
aaa
add
lods
xor
in
add
mov
inc
cmp
das
ljmp
inc
arpl
ljmp
push
push
stc
neg
cmpsl
jl
sub
push
mul
push
out
cmpsl
enter
ret
bound
pop
es
jne
xor
dec
cmp
lcall
int
inc
mov
cltd
push
or
lods
add
jno
pop
out
fists
fmull
jbe
xchg
adc
cmp
adc
cmpl
int3
in
rcr
mov
or
push
jo
push
jns
or
push
sbb
ja
loop
lcall
cs
imul
jl
pop
fld
mov
jae
lods
call
dec
stos
test
xchg
mov
test
daa
iret
add
imul
xchg
pop
imul
stos
cli
lahf
lret
push
add
pop
in
insl
xchg
fsubrl
dec
dec
mov
jl
nop
dec
pop
data16
add
adc
je
push
sti
icebp
stos
fnsave
push
xor
mov
cmp
cmp
dec
inc
mov
ljmp
dec
adc
mov
fisttpl
cmpsl
icebp
test
out
xchg
xor
int
arpl
popf
jae
sahf
adcb
add
test
mov
sbb
mov
pop
iret
mov
in
lods
ss
nop
adc
scas
popf
cmp
cmp
adc
lods
sub
dec
test
bound
les
inc
adc
inc
pop
dec
shll
sahf
jae
lahf
jp
adc
xlat
xchg
mov
mov
imul
push
lods
xchg
sahf
jnp
and
adc
push
mov
sub
inc
jecxz
mov
push
les
rol
cmp
inc
mov
js
jge
dec
addr16
imul
mov
in
cmpsb
lods
xchg
jmp
out
test
into
pop
fcomps
jge
incb
test
jbe
out
sbb
adc
xor
pop
ret
minps
xor
xchg
pushf
pop
ljmp
mov
out
sbb
ja
mov
aad
push
icebp
pop
test
jp
mulb
mov
jo
aam
lods
repz
mov
add
test
pop
sub
aaa
fsubl
bound
xchg
out
imul
push
jle
lret
xor
loop
push
or
in
sub
sbb
sbbl
jp
jmp
jno
rcr
push
jmp
push
stc
mov
push
fcomi
xchg
sub
xor
popf
repz
cmp
ja
paddusw
dec
push
xor
mov
xor
mov
mov
mov
sbb
push
jns
dec
or
dec
adc
sar
mov
push
js
out
shll
xor
sub
xor
fadds
out
and
push
push
fnsave
pop
repnz
or
lock
lret
sbb
xchg
test
ja
xor
stos
xor
and
and
push
int3
dec
pop
shl
add
jbe
pop
pop
gs
pop
jle
and
mov
adc
and
jnp
test
and
gs
xchg
ljmp
lods
mov
out
pop
mov
cmp
inc
in
lret
sub
dec
popa
data16
jnp
pop
rcrl
mov
lret
pop
lcall
fstl
sub
cmp
movsl
or
lret
nop
lock
inc
and
imul
les
out
sbb
movsb
pop
push
int
pusha
in
push
dec
adc
das
test
shrl
fisttpll
shll
jnp
xor
or
push
jns
mov
pop
jb
stos
push
int3
arpl
jnp
into
cmc
insb
and
xchg
push
sub
rcl
dec
in
mov
insl
out
mov
jl
add
xchg
jg
and
int3
jg
dec
xchg
stos
pushf
xchg
jmp
push
shl
or
sti
inc
sbb
ret
inc
mov
mov
inc
xchg
lcall
lahf
sbb
mov
dec
and
sbb
mov
loopne
sub
test
pop
pop
mov
cli
addr16
cld
jl
in
test
jge
loopne
popa
daa
mov
neg
stos
push
addr16
or
mov
ficompl
add
ret
mov
push
insl
mov
mov
fistl
mov
jmp
xchg
outsl
aaa
sbb
jle
cmp
add
popa
adcb
bnd
dec
movsb
in
aad
mov
pop
sbb
inc
ljmp
push
fwait
push
mov
popf
movsb
xchg
sti
fiadds
les
aam
loopne
rclb
jno
mov
nop
mov
mov
rcrb
pop
rcll
adc
call
xchg
mov
xchg
gs
fsubr
imul
xchg
pop
cwtl
lret
dec
loop
cmp
scas
jge
xchg
ja
xchg
lcall
xchg
shlb
cltd
cmpsb
ja
outsl
pop
inc
adcb
sti
and
aam
push
mov
mov
fisubrs
fnstsw
mov
mov
or
push
mov
sahf
jnp
mov
mov
dec
insl
cmp
ds
xor
dec
sub
jg
es
in
mov
ds
push
roll
adc
mov
in
add
lcall
test
push
sbb
jle
mov
fbld
fidivl
add
sahf
out
int3
cmp
cli
dec
test
jmp
sbb
push
and
inc
pop
fldl
xchg
fstpl
cs
jle
add
xchg
pop
daa
inc
push
outsb
dec
aam
movsl
mov
add
mov
fcoms
xor
fldenv
xor
xor
das
repnz
lret
psubw
pop
pusha
sub
xor
ss
mov
into
or
stos
sbb
cs
sub
jne
sbb
divl
dec
inc
test
mov
push
push
jns
cmpsb
jg
vmread
pushf
clc
scas
aas
mulb
faddl
jp
in
push
sub
cmp
daa
test
pop
pop
pop
dec
sbb
imul
loopne
sub
or
and
gs
add
xchg
sub
xchg
xor
lret
mov
xor
or
bnd
scas
sub
dec
mov
sar
push
movsl
push
fiaddl
jl
test
repnz
gs
and
aam
push
add
lret
scas
xor
bound
inc
lcall
sbb
clc
stos
pushf
pop
stos
mov
into
movsl
mov
test
mov
xchg
jnp
jg
ret
push
xchg
adc
push
das
arpl
mov
pop
sarb
movsb
pusha
data16
and
xchg
jae
xchg
leave
int
pop
mov
cmpsl
adc
sbb
mov
outsl
add
imul
negl
inc
push
rolb
xor
mov
fyl2xp1
hlt
xor
jb
jns
add
mov
ds
or
loop
pop
mov
push
outsb
lods
cmp
push
ds
mov
scas
push
fsubrl
fsubs
les
mov
dec
ret
hlt
fyl2xp1
mov
fcomi
daa
jmp
lds
adc
xor
xor
xchg
aad
or
mov
int3
mov
andb
dec
decl
insb
lcall
popf
xor
sub
ds
out
aas
dec
adc
add
mov
aaa
idiv
test
clc
lock
in
inc
mov
iret
jle
mov
mov
test
xor
mov
cmp
fwait
jne
shll
jno
aad
test
mov
and
cmpsl
sbb
mov
jnp
pop
lea
inc
gs
sbb
mov
cmp
cmp
inc
push
mov
xchg
xchg
mov
cmc
sbb
jbe
sub
imul
xor
mull
loope
mov
rcll
jae
xchg
mov
lret
in
sbb
and
jne
int
pminsw
lret
popa
push
xor
add
mov
xor
ret
mov
sbb
lea
pusha
sub
mov
dec
hlt
or
psllw
imul
vmovntps
inc
or
xchg
ja
mov
adc
int
jne
ja
xlat
push
add
jl
fwait
aam
jp
mov
es
insb
pop
call
dec
arpl
les
lahf
pop
mov
lods
dec
jns
call
push
xchg
and
mov
nop
adc
mov
pop
adc
mov
inc
out
es
cmp
pop
mov
xor
lods
out
movsl
jns
das
pop
nop
shl
imul
sub
jae
or
add
lods
jo
pop
push
loop
push
lds
push
bound
jo
add
xlat
test
leave
sti
arpl
sbb
xchg
jo
inc
cli
inc
test
jbe
imul
mov
xor
jge
mov
int
in
cmp
cwtl
sbb
pop
push
add
jno
std
out
lret
and
xor
je
mov
or
mov
xchg
daa
adc
push
mov
push
xor
xor
xlat
enter
mov
fsubs
inc
cs
in
xor
push
enter
mov
pop
jp
imul
ret
lods
inc
repz
aad
mov
mov
loope
xor
out
movsb
pop
lret
pushf
pop
pop
adc
sub
mov
push
jl
ret
imul
xorb
sbb
xchg
in
sbb
mov
sub
mov
cmp
andb
pop
outsb
pop
lea
push
xlat
xor
loope
dec
int
leave
cli
lahf
xchg
rcr
outsb
data16
and
cmp
and
test
xlat
sub
jp
loop
jmp
movsb
cwtl
dec
imul
addr16
movsb
sbb
clc
or
xorb
pop
pop
mov
in
cmc
cmp
xchg
jge
push
lods
inc
mov
jae
mov
orb
popf
mov
ficoml
mov
jns
out
jo
rorb
adc
lock
jb
push
mov
mov
insb
lcall
sub
aaa
insb
xor
adc
push
mov
sbb
cli
inc
ds
xor
sub
mov
and
jecxz
push
andl
mov
popa
mov
xchg
jns
and
lods
mov
xor
adc
out
mov
xchg
psubsb
insb
mov
loopw
ffreep
sbb
movntps
jne
mov
xchg
pop
and
push
mov
mov
outsb
in
sub
cmp
arpl
ret
idivl
test
je
adc
mov
leave
sub
popf
sbb
insb
and
lcall
xchg
and
data16
sbb
daa
cld
cwtl
push
and
mov
push
xchg
xor
decb
cwtl
shl
lods
pushf
jmp
push
and
clc
nop
into
push
mov
push
mov
mov
cmpsb
xlat
mov
fwait
add
lods
popa
pop
adc
mov
pop
fsubs
jns
jl
inc
push
pop
cwtl
push
nop
sub
inc
fisubrs
loop
jo
lret
xor
pop
test
sub
clc
orl
and
xchg
push
mov
mov
push
inc
adc
loope
jp
jecxz
popf
and
inc
jl
jmp
les
movsb
cmp
xchg
mov
out
mov
sti
daa
dec
push
mov
pop
fiadds
inc
add
or
rol
lea
fwait
jp
add
xor
push
xchg
sbb
out
lret
mov
mov
or
in
into
adc
and
cld
xchg
std
out
mov
and
faddp
mov
imul
cmp
nop
adc
movsl
cmp
int
xlat
cwtl
add
imul
and
cmp
sub
fdivs
imul
popf
insb
out
sbb
shl
in
into
ljmp
mov
pop
out
mov
mov
shrb
xchg
xchg
sub
shll
into
mov
sbb
stos
and
icebp
xor
dec
cltd
push
into
enter
jg
adc
jae
les
cmpsl
xor
lret
xor
in
mov
test
dec
ss
cmp
push
xorb
bound
rcll
out
xchg
insb
bnd
inc
insl
fcmovnb
test
xor
jge
dec
and
jno
popf
aas
rolb
adc
cwtl
jo
cmp
scas
sub
jns
jp
loopne
cmp
mov
jbe
pminub
inc
fsubr
mov
movsl
les
dec
xchg
xchg
repnz
fwait
int3
xlat
and
push
inc
in
push
dec
out
sbb
fsub
xor
jmp
loop
imul
add
mov
cmc
call
testb
hlt
popf
ds
lock
sahf
adc
sub
jo
add
cmpsl
imul
cs
cmp
and
pop
aad
mov
ret
cmp
ds
rorb
bnd
jbe
adc
scas
cmp
pushw
mov
jno
popa
cltd
jae
jp
les
sbb
or
imul
scas
aad
adc
pushf
xor
push
lret
mov
lret
jne
or
jg
and
scas
add
sbb
addb
inc
popa
loopne
push
imull
cmp
jl
adc
dec
jno
fld
xchg
dec
stc
orl
jmp
cmpb
mov
shl
jo
ss
loop
int3
shlb
decb
sub
shl
xchg
add
out
jbe
or
stc
imul
and
subb
mov
out
outsb
cmp
dec
out
popa
sahf
jle
jns
xor
mov
sbb
loope
clc
jl
sub
xlat
subb
mov
xchg
mov
jecxz
dec
push
mov
in
add
sbb
xchg
push
cli
pop
add
insb
outsl
sbb
rorl
loopne
add
cmpl
push
push
arpl
ret
sub
inc
icebp
insb
and
mov
in
or
push
inc
xchg
sbb
mov
insb
xchg
adc
iret
push
adc
fsubrs
jbe
mov
ljmp
pushf
insl
push
int3
nop
mul
push
push
test
inc
jbe
lret
pop
jne
sbb
into
mov
push
adc
dec
out
add
mov
lret
mov
xor
or
mul
push
arpl
dec
mov
mov
jne
out
jge
sub
aad
out
imul
pop
dec
cmpl
jg
insb
sub
into
loope
fistpl
inc
add
and
pop
add
sbb
cmc
out
add
les
xchg
jo
sbb
jl
imul
loopne
inc
xor
xchg
scas
fildl
xor
xchg
mov
pusha
fsubrl
xlat
mov
dec
out
divl
sub
fisttpll
pop
je
fistl
push
mov
outsl
jmp
gs
xchg
jne
pushf
out
mov
gs
jns
sbb
mov
adc
mov
jle
ss
aam
dec
daa
cmp
popf
hlt
push
fucompp
jns,pn
xchg
fxch
call
adc
outsb
mov
pop
sub
pause
fsubrl
xor
adc
test
in
imul
push
sub
aaa
sbb
popa
outsb
sbb
mov
arpl
sbb
xchg
shrl
popf
sub
sub
das
push
push
scas
cmpsl
scas
push
xor
and
dec
in
imul
test
or
cmp
fiadds
mov
push
es
into
cltd
push
cmp
mov
pop
pusha
rep
push
testl
es
or
aas
jno
fistl
fsub
or
adc
pop
pop
mov
cltd
cs
sub
fiaddl
mov
bound
mov
stc
adc
cli
cmp
mov
stc
out
repz
xorb
pushf
mov
jne
xchg
xor
inc
xor
fimull
sahf
xchg
cs
jb
out
insb
fmuls
cwtl
sub
pusha
inc
cwtl
cld
mov
clc
sub
sub
or
push
out
mov
push
stos
cmpsb
inc
push
cmovle
mov
imul
cli
pop
jno
data16
add
fimull
sbb
xor
shrl
inc
pushf
lret
push
xor
inc
fidivs
cmpb
loopne
cltd
jne
mov
test
testb
mov
sub
sub
jnp
int3
les
mov
push
mov
add
ds
loopne
sbb
dec
xor
mov
mov
push
repnz
nop
mov
pop
movb
arpl
mov
test
jns
idivb
fisubrs
pop
add
outsb
cs
aas
jbe
add
push
add
call
outsb
mov
xchg
jle
inc
les
dec
outsl
or
push
or
mov
push
mov
jge
leave
shll
fsubrs
imul
bnd
sbb
rcll
or
outsl
jl
pop
push
mov
dec
jb
dec
repnz
mov
testb
nop
pop
jle
pop
popa
imul
lds
and
jle
fdivrs
push
les
cltd
fs
cs
sub
jb
pop
cld
addl
or
jl
add
int3
xlat
imul
out
pop
mov
push
mov
inc
pop
sarl
xor
xchg
adc
mov
adc
sbb
fildll
nop
add
stc
iret
lcall
shl
sbb
cmpsl
idivl
frstor
or
xchg
push
push
dec
jb
stos
loopne
out
adc
mov
cmp
sahf
in
mov
lret
or
out
sub
mov
daa
inc
sub
in
mov
push
iret
cwtl
js
ret
negb
arpl
mov
test
xor
ror
xchg
sbb
or
xlat
stc
cltd
popf
jne
xchg
add
dec
lods
aam
xor
in
fnstsw
push
push
cli
xlat
int
cli
in
push
fcoml
dec
inc
cmp
push
add
xchg
es
jns
push
add
xchg
mov
mov
repz
ljmp
mov
xor
fmuls
or
sar
add
jl
cmp
mov
rorl
mov
ret
push
leave
dec
push
das
into
push
test
push
jmp
shl
movl
out
and
push
adcl
mov
cmp
mov
add
push
scas
push
fistpl
sbb
ss
push
jle
jmp
xchg
cltd
popa
mov
mov
add
out
cmp
adc
out
fildll
inc
cwtl
subb
sub
cld
lods
xchg
or
push
sub
ret
into
mov
fnstenv
sbb
arpl
adc
in
mov
mov
imul
pop
xchg
test
pop
imul
in
jnp
mov
xor
mov
adc
popf
push
mov
repz
enter
adc
mov
xchg
and
cmp
mov
ficoms
dec
mov
sub
dec
add
mov
cmp
jne
adc
popa
cmp
rolb
ret
xor
cmp
cmp
data16
pop
inc
xchg
push
loope
mov
pop
cmp
fidivs
pop
and
or
lods
and
ds
cmp
sub
out
sub
inc
xchg
cltd
jae
addr16
sub
jb
insb
xchg
mov
ja
mov
or
loop
pop
ljmp
mov
insl
ret
push
dec
cmc
pop
jecxz
lcall
fs
lock
loope
xchg
das
xchg
fmull
cmpsl
push
inc
dec
push
shlb
jo
xor
test
mov
rcr
cmp
xorl
ret
into
cmpsl
adc
or
cmp
mov
aas
push
dec
insl
xchg
fidivs
out
push
xor
add
leave
jle
pop
push
push
pop
out
mov
xchg
xchg
repz
fneni(8087
push
and
mov
je
inc
xor
popf
loope
inc
icebp
lahf
cmp
mov
sub
icebp
scas
dec
mov
jecxz
in
xchg
mov
aam
jns
ret
inc
push
cmpsb
xor
dec
cmp
sbb
jae
cmc
pop
pusha
sbb
pusha
enter
notl
xor
cmpsb
mov
mov
mov
dec
lods
gs
scas
test
lods
add
gs
in
sbb
aaa
mov
bound
xchg
jo
mov
pop
cmp
int
push
aaa
fdivs
sahf
xchg
testl
cmc
jp
test
or
jecxz
pushf
ljmp
out
jge
cwtl
mov
and
mov
hlt
insl
xor
cmp
repz
cld
push
xchg
ret
sub
movsb
pusha
and
loope
jnp
mov
sbb
sbb
data16
imul
sbb
je
mov
pop
mov
jg
das
mov
lods
arpl
cmc
pushf
pop
mov
mov
jnp
int3
add
mov
jns
sbb
jle
cs
sbb
jp
scas
mov
outsb
jbe
or
in
inc
inc
dec
mov
sub
add
or
stos
lcall
pop
test
push
xchg
jge
pop
inc
jecxz
adc
daa
mov
mov
push
movsb
scas
adc
frstor
xabort
add
mov
xchg
loope
xor
and
sti
xchg
imul
jbe
pop
fidivrl
pop
sti
cld
mov
sti
insl
adc
pop
and
stc
jnp
in
sub
loopne
and
or
add
or
pop
test
adc
jo
push
mov
push
insb
int3
roll
add
cmp
sarl
vmovd
ja
jmp
push
dec
out
aas
push
adc
sti
add
testl
add
fidivs
add
add
in
xor
cmp
push
enter
cltd
add
add
jnp
aam
in
icebp
ficomps
push
stc
cmp
sarb
stc
ljmp
pop
sbb
rol
mov
cwtl
mov
fldt
xor
cmp
ljmp
pop
in
mov
daa
rcrl
movb
outsl
outsl
xchg
ljmp
addb
notl
xor
cmp
les
testb
loopne
inc
lcall
cmp
loop
subl
jmp
fsubs
xchg
sbbl
outsb
push
inc
rcll
int3
push
movsb
adc
cmp
sbb
stos
out
xor
mov
cli
iret
pop
inc
into
jb
syscall
std
or
jb
aas
fmull
push
pop
pop
out
insb
arpl
clc
test
jo
std
mov
ficomps
jb
imul
push
mov
sbb
ss
jns
stc
xchg
test
jb
jnp
loop
lock
stc
or
xchg
dec
cmp
das
aaa
sub
imul
scas
out
add
pop
pop
jmp
dec
popf
or
imul
adc
and
das
imul
cmp
fwait
out
and
cltd
sarl
pmulhuw
adc
push
fldcw
out
cmp
xchg
dec
jnp
dec
xor
pop
jbe
xor
shrl
rorb
mov
lahf
pop
inc
imul
jno
dec
imull
jno
dec
aaa
push
jle
out
subb
aam
je
adc
dec
arpl
add
mov
or
xor
dec
testb
pop
xor
jnp
test
andl
xchg
out
xor
mov
xchg
inc
cmp
ret
pop
mov
dec
sbb
jecxz
mov
adc
lret
mov
and
lock
cld
cmpsb
xchg
jbe
rol
js
inc
add
inc
xchg
dec
mov
insl
imul
xlat
xchg
mov
adc
daa
das
daa
shll
pop
loopne
xor
js
mov
out
call
or
mov
in
pusha
inc
addr16
or
in
repnz
imul
push
mov
into
lcall
jl
mov
das
or
mov
lcall
adc
dec
lds
sahf
filds
push
fildll
sbb
repz
lret
outsb
mov
inc
inc
scas
and
push
fsts
mov
mov
cmp
rolb
dec
inc
pop
stc
into
fucomip
add
imul
adc
sti
xchg
ss
lock
popa
mov
mov
data16
cltd
sahf
addr16
pop
icebp
or
mov
int
adc
repz
icebp
mov
xchg
xchg
jecxz
inc
mov
or
in
dec
aaa
jecxz
fs
test
cmp
dec
mov
lock
push
sub
inc
insl
mov
pushf
aas
cs
adc
mov
push
cmp
lcall
cmpsb
xor
jo
sbb
push
out
dec
xchg
pop
xor
mov
int3
push
les
fwait
adc
in
add
in
add
int
mov
das
push
and
aaa
mulb
lcall
sti
sbb
jmp
ljmp
shll
push
sub
pop
mov
jnp
pop
test
ret
mov
push
mov
rcr
js
rolb
and
es
nop
push
test
pop
rdtsc
int
pop
pop
dec
mov
pop
test
xlat
loop
std
xchg
fcoms
inc
inc
fisubs
cmp
jecxz
cmpsl
jge
pop
ja
shrb
add
sub
leave
aam
push
inc
sub
jmp
outsl
icebp
lea
mov
cli
add
out
fprem1
andb
clc
int
cld
imul
or
and
cmp
cld
mov
or
pop
sarb
inc
gs
loope
mov
jo
jmp
push
xor
stos
xor
pop
push
xchg
sub
or
xor
call
push
mov
pusha
sbb
mov
cmpsl
lret
mov
xor
cltd
cmpsl
xor
sbb
fmull
fs
cmpsb
mov
inc
loop
mov
sbb
out
icebp
jp
stc
xchg
lret
jl
mov
test
mov
push
jg
out
xor
popa
and
cmpsl
addr16
cli
leave
cmp
rcr
lret
std
mov
push
inc
test
andl
lock
lret
loopne
scas
imul
aam
sub
cmp
sub
js
sarb
mov
hlt
push
dec
fidivs
mov
aaa
sub
pop
loop
outsb
jbe
arpl
outsl
loopne
sbb
int
in
inc
adc
shlb
or
mov
add
aad
call
test
jle
jae
jne
mull
push
cmp
je
xchg
test
test
mov
popa
outsl
or
xor
insb
fucomip
fidivrs
div
aaa
adc
fwait
mov
fmuls
aam
inc
cmpl
jbe
cmp
mov
push
iret
sub
add
into
xor
loop
add
sbb
or
lret
in
sbb
paddusw
sub
push
popa
enter
movl
repz
inc
jmp
mov
jo
xor
sbb
std
sub
inc
pop
mov
push
fiadds
mov
or
sbb
inc
insl
cwtl
les
inc
dec
rcll
popf
movsb
jne
popf
loop
jnp
jmp
cmp
imul
cmpsb
xor
test
mov
mov
fildll
or
jo
mov
jle
xor
out
jmp
mull
xorb
push
mov
sbb
sarl
ss
std
push
jge
addl
cmp
ds
dec
jns
pop
xchg
sahf
pop
js
iret
add
pop
mov
aaa
xor
imul
mov
mov
cld
out
jns
popa
xor
cmp
enter
push
nop
cmp
std
mov
inc
xorl
xlat
jle
aaa
mov
loope
push
pop
push
jmp
jns
popa
jne
loop
cmpsl
mov
sbb
leave
add
jo
cmp
mov
or
mov
mov
ja
popf
add
jae
fcmove
adc
xor
mov
lock
jge
in
pop
or
fists
fwait
popa
leave
and
mov
andl
cmpsb
mov
imul
cs
cmpl
movsb
sub
test
je
mov
hlt
push
xor
sbb
pusha
out
push
into
cmpsb
xlat
pop
lahf
icebp
test
fsubrl
inc
add
jmp
cmpsb
pop
aas
cmp
lret
sub
movsb
mov
jp
mov
int
push
inc
sbb
stos
in
aaa
xchg
insl
dec
arpl
pop
iret
xchg
decl
sub
jg
es
out
rcll
jle
lods
push
and
imul
divl
cmc
fdivs
or
mov
lret
dec
xorb
push
inc
es
sti
add
mov
sub
fisttpl
sub
xchg
pop
insb
pop
or
repz
xlat
xlat
test
mov
mov
stos
push
jbe
mov
push
pop
std
cmc
lea
out
sub
adc
repz
sbb
add
and
jl
testl
leave
xchg
add
test
pop
sbb
xor
cmp
insl
arpl
and
outsl
sti
lds
repz
or
les
jbe
xchg
lret
fdivs
outsb
out
mov
cmpsl
mov
loopne
jg
gs
cmpsl
int
or
mov
imul
fbld
js
std
inc
pop
imul
cwtl
cmp
dec
ja
repnz
rolb
adc
out
pop
mov
dec
jmp
pop
pusha
xchg
popf
push
nop
fimull
bound
sbb
xchg
sahf
in
mov
popa
les
orl
xor
ja
roll
pop
addb
into
adc
jnp
fwait
rcll
imulb
pusha
mov
sub
push
je
out
loope
addr16
int3
lret
ret
and
vmwrite
testb
leave
jl
addr16
aam
shlb
out
stos
pop
mov
incb
sub
sti
and
xor
add
or
scas
lods
sub
cmp
jge
sbb
out
or
mov
add
dec
add
lret
push
inc
jmp
orb
push
ds
sarb
push
hlt
jne
fsubrs
bound
cwtl
lock
xor
shrb
movsb
add
dec
enter
stc
add
scas
dec
aas
lock
inc
shll
cli
xor
xor
inc
pop
test
cmpsl
movsb
dec
int3
push
and
xor
in
clc
popf
ret
aas
mov
cmc
mov
push
push
stc
repnz
popa
aaa
pop
mov
push
loope
out
inc
cmp
dec
movsl
add
mov
lea
mov
jp
fnstsw
les
movb
or
pop
adc
hlt
mov
int
jle
jg
movsl
xor
sbb
cwtl
ficoml
sbb
xor
stos
mov
aad
lahf
in
push
std
inc
mov
fs
scas
stc
sub
add
loop
sahf
in
mov
test
sbb
sbb
test
int3
cwtl
rolb
popa
dec
mov
jmp
mov
adc
lret
mov
jb
push
push
sbb
rorl
sub
int3
psrlw
sahf
testb
mov
push
icebp
add
xchg
je
std
lret
sub
pushf
jo
aad
bound
test
or
scas
inc
pop
gs
push
aam
pop
sarl
push
push
inc
cmc
mov
out
std
xlat
dec
dec
rcl
xor
inc
or
stos
adc
pop
aam
or
sbb
aam
mov
popf
std
aad
lahf
jns
loopne
sbb
push
pop
lea
or
decb
in
repz
test
add
cli
cmc
mov
xor
add
test
and
outsl
pslld
dec
cmp
leave
inc
jmp
jg
push
jmp
push
ja
data16
fisubs
scas
inc
imul
aad
lods
lret
adc
sbb
mov
ficomps
call
push
push
pop
mov
cmp
push
pushf
ja
rol
pop
push
mov
daa
inc
inc
jl
push
mov
loopne
lcall
lock
pusha
stc
inc
jne
in
leave
xor
mov
dec
mov
int3
mov
std
xchg
push
jle
fisubrs
loopne
dec
mov
in
add
mov
adcl
ret
scas
and
lock
jmp
lods
xor
cmp
fistpl
cmp
adc
ror
push
cltd
out
fbld
sub
aad
push
mov
mov
repnz
repz
lods
pop
lock
push
pop
add
pop
mov
ret
and
sub
int3
xchg
lds
cmpsl
mov
in
lds
add
cs
cmp
popa
into
imul
dec
add
push
imul
hlt
sub
daa
shrl
fs
scas
push
inc
ss
cmp
add
mov
cmp
push
daa
pushl
cmp
lret
sbb
bound
and
pop
adc
andl
xor
adc
add
ljmp
lahf
xor
fistpl
out
scas
in
sub
cmp
fbstp
out
scas
and
mov
mov
pop
testb
out
daa
jle
dec
jle
pop
into
test
sub
pop
cmp
xlat
lea
pop
outsb
xlat
or
inc
popf
push
es
dec
jbe
push
mov
testb
repz
mov
xchg
push
jl
outsl
int
push
add
and
dec
adc
out
pop
and
testb
mov
pushf
or
push
fstpl
call
xchg
pop
mov
iret
push
mov
loopne
aad
shlb
cmp
push
lret
iret
in
popa
and
ja
jl
loop
movsl
cmp
sahf
loope
xchg
in
stc
cmpl
incl
adc
adc
mov
or
mov
adc
pusha
rclb
addr16
ss
subl
ss
sarl
into
bound
and
lds
leave
out
daa
adc
gs
fcompl
pusha
lock
cmc
xlat
and
jmp
daa
rcrl
dec
mov
repnz
dec
out
cmp
xchg
std
push
jge
push
or
movsb
dec
test
in
fbld
mov
pop
mov
jb
jle
cmp
js
mov
test
stos
lds
fwait
lcall
adc
add
mov
fmuls
mov
int3
out
ret
fmuls
rolb
scas
fs
and
sbb
fdivl
cmpsl
fsubl
push
xor
mov
inc
xchg
mov
lahf
jnp
into
je
mull
jge
jmp
xor
sub
jo
push
imul
pop
repnz
movsb
adc
lods
pop
ja
int3
pop
push
sub
xchg
jle
jb
xlat
push
cmp
ror
lds
sub
mov
xchg
out
add
arpl
adc
jbe
pop
loop
push
jecxz
add
adc
adc
jbe
xor
imul
pop
je
sbb
pop
push
cmp
ret
cmp
adc
adcb
cltd
cmp
into
mov
mov
insl
mov
mov
jo
je
nop
mov
dec
xchg
lea
lret
leave
push
push
pop
sbb
in
dec
lods
aad
adc
lock
popa
xor
push
xchg
lods
jmp
cmp
es
add
jle
cmovo
int3
and
dec
cs
mov
or
jb
dec
bound
push
into
sbb
insl
gs
lock
add
push
outsb
scas
add
fdivp
movsb
and
cmp
cs
adc
add
leave
dec
xor
int3
loop
jle
popa
aad
sub
cs
dec
push
popf
xchg
pop
roll
sarl
out
pop
out
in
adc
lds
mov
lea
xchg
scas
nop
int
push
mov
push
orb
sbb
jge
adc
sub
mov
pop
repz
call
inc
sub
int
mov
lea
dec
add
mov
ficoms
pop
mov
movsb
lahf
jg
push
jne
ja
in
pop
test
sbb
and
add
testl
sub
push
fwait
mov
mov
cmp
pop
dec
push
mov
fisubs
cmp
xchg
lock
movb
cmp
mov
adc
adc
imul
ds
push
lods
cmp
sti
xchg
imul
mov
pop
pusha
daa
or
scas
xor
xor
xor
push
pop
aas
and
cmc
mov
imul
aas
ret
jbe
cmp
es
mov
adc
add
fstpt
adc
xor
movsl
mov
test
inc
xor
repnz
mov
mov
inc
fmuls
arpl
cltd
fwait
mov
xchg
pop
push
sub
cmp
dec
adc
dec
cmp
push
or
aad
pop
xchg
pop
ljmp
push
jge
cmp
and
popf
lcall
sti
out
fwait
and
cmp
shl
dec
std
cmp
or
data16
loop
pop
cmp
jge
inc
jge
sti
push
into
inc
push
cmp
int
push
in
fstpl
aas
lret
daa
pop
dec
push
pop
jg
xor
lods
popf
data16
dec
xor
jmp
sub
rorl
inc
mov
popf
in
push
jp
mov
addl
push
lds
cmp
and
mov
into
in
fistpll
testb
or
orb
int
xor
pop
movsl
dec
and
addb
call
cmp
outsl
jle
int3
bound
imul
mov
jmp
xchg
pop
jl
fwait
inc
pop
in
xchg
inc
push
xchg
add
add
inc
jge
sti
or
lret
mov
mov
mov
iret
enter
in
mov
mov
lock
mov
mov
mov
in
mov
inc
shlb
loope
in
xchg
test
xchg
cmpb
ret
mov
test
loope
loop
imul
and
jno
sub
mov
hlt
cs
enter
bound
sub
roll
xchg
fucomip
adc
mov
adc
test
scas
sub
notl
or
fmull
nop
mov
or
add
mov
les
fiadds
jge
les
test
or
out
push
xor
daa
popf
mov
pop
cltd
addr16
mov
dec
adc
das
xchg
adc
xor
out
lahf
cmp
lock
jb,pt
push
push
pop
add
jp
dec
rcll
imul
cmp
jmp
mov
xor
jns
jmp
out
cmp
mov
cmp
test
stc
popf
cld
lea
cld
dec
push
dec
sbb
stos
testl
enter
lret
adc
test
xchg
fcoml
in
pusha
mov
mov
rorb
xor
lcall
mov
mov
loopne
xchg
or
ss
das
insl
and
ja
fnclex
pause
dec
test
and
cltd
or
aam
imul
imul
mov
mov
inc
pop
xchg
cmc
loope
enter
gs
xor
dec
mov
dec
mov
lret
add
into
bound
sbb
jne
push
lret
mov
sbb
data16
js
out
jl
je
pop
inc
lcall
mov
push
iret
or
add
repz
into
shll
mov
scas
mov
mov
push
pop
xchg
mov
add
fcomps
push
popf
in
lods
and
cmpb
aam
dec
cmpsb
lret
xchg
lods
and
addl
push
dec
xchg
cld
and
inc
shl
ljmp
jnp
imul
sub
cmp
xor
xchg
push
xor
mov
mov
cmpsb
loop
sub
imul
mov
pop
int
das
push
mov
xchg
jns
paddusb
mov
dec
push
pop
add
aaa
push
daa
je
dec
outsb
cs
xchg
pop
cmc
outsl
sub
lcall
ljmp
push
mov
ficomps
or
cltd
ja
lods
std
icebp
cmpl
ret
jge
cltd
stos
test
popf
imul
xchg
aam
cmpsl
pusha
add
subb
insb
mov
xchg
inc
je
inc
xchg
xchg
mov
fwait
stc
xor
xchg
mov
pop
fstl
cmp
insl
frstor
es
aam
enter
out
outsb
jmp
movsb
inc
out
pusha
inc
add
mov
and
and
loop
out
jge
in
mov
jp
xor
jo
ja
ss
call
pop
fnstsw
movsl
pop
int3
loope
loop
cmp
add
call
push
incb
lea
jbe
and
scas
ret
pop
nop
mov
or
cwtl
push
inc
addr16
push
add
inc
rorl
mov
in
addr16
mov
pop
push
sbb
fmuls
push
mov
cmp
adc
out
pop
adc
pop
cmp
or
push
out
xor
push
shll
cmpsl
nop
pop
xor
lock
bound
xchg
outsl
pop
xchg
mov
fwait
mov
dec
js
mov
cmp
sbb
jae
les
jo
fstpt
mov
fwait
or
loope
sub
inc
or
mov
dec
pushf
pop
addr16
popa
add
loope
add
lods
xchg
incl
jmp
ljmp
enter
jge
popf
ret
mov
push
cmc
ss
cmpsl
or
sub
scas
lods
cmp
or
fsubrs
pushf
xor
push
stos
pop
fsubl
sbb
dec
lret
add
pop
daa
stos
mov
mov
leave
sbb
out
mov
jmp
sbb
jecxz
data16
pop
insb
add
daa
mov
mov
mov
cmp
out
push
div
and
adc
mov
cmpsb
into
vmovq
sbb
addr16
fs
int3
push
mov
pop
es
pop
lret
mov
lret
push
cli
add
rolb
fistpl
test
and
ret
fbstp
aam
push
pushf
stc
ss
lods
jg
mov
sbb
ret
xlat
subb
adcb
push
int3
mov
aad
xor
sub
xlat
inc
push
xchg
inc
fdivrl
bound
and
dec
dec
jmp
jb
pusha
shl
mov
fs
xor
mov
push
jbe
pop
je
fsubr
pop
sub
cmp
scas
popa
mov
pop
ljmp
mov
imul
mov
sahf
fwait
ret
push
mov
push
loop
sahf
shlb
in
roll
fildl
jmp
mov
sub
inc
mov
cmc
loopne
pop
bound
jmp
xor
movsb
pop
push
sub
sti
enter
test
jbe
cwtl
xor
pop
addr16
mov
out
stos
push
pop
pop
fnsave
push
jge
mov
iret
lea
add
jg
jnp
push
andl
dec
or
mov
bsf
shr
jecxz
lds
inc
dec
insb
je
in
sub
mov
outsl
dec
push
rclb
jle
push
mov
aas
cmp
out
das
inc
push
mov
rorb
mov
jp
dec
loope
xor
std
add
repz
cmpsb
jl
sub
push
das
jg
dec
mov
ret
loope
cmp
ret
inc
movsb
xor
sub
pop
xchg
pop
jmp
add
test
adc
rcll
jbe
in
or
xlat
cs
pop
popf
out
mov
pop
adc
cwtl
xor
adc
sub
test
icebp
push
arpl
mov
stc
dec
int
das
xchg
pusha
mov
mov
or
imul
sti
frstor
imul
lods
dec
mov
mov
arpl
mov
js
push
xchg
in
mov
sbb
movb
shlb
push
adc
jno
mov
stos
fs
sbb
mov
adc
jge
ret
and
or
jg
into
add
mov
sbb
icebp
incl
aam
aam
jnp
outsl
jmp
jnp
sarl
mov
or
call
or
or
mov
inc
add
dec
mov
pop
lods
xor
outsl
push
lea
fcomip
xlat
mov
sahf
aas
shl
mov
and
dec
and
pop
mov
je
sub
pushf
inc
outsb
fldl
add
push
xchg
cmp
or
lds
lock
mov
stc
inc
xchg
dec
pop
icebp
sub
sub
js
aam
xor
cmp
repz
lret
cmp
clc
pop
jbe
rcl
pop
cmpsl
lds
in
push
and
test
xor
cwtl
cmp
inc
data16
push
xchg
pop
je
hlt
adc
aam
mov
imul
test
mov
outsl
mov
or
repnz
push
in
mov
jnp
adc
sub
fsubs
aas
push
rol
sti
aaa
xor
or
push
icebp
call
adc
xor
fidivrl
xchg
outsl
or
inc
inc
insl
sbb
and
rcrb
je
rclb
pop
inc
imull
out
add
mov
adc
pop
push
daa
dec
arpl
clc
sbb
mov
mov
inc
jmp
xchg
jne
ds
ret
insb
out
jp
sbb
add
rep
fwait
lcall
mov
mov
mov
es
frstor
sub
ret
push
sub
data16
jge
out
jle
mov
jmp
sbb
push
jns
loopne
test
add
iret
scas
mov
mov
xchg
addr16
inc
out
cli
hlt
push
pushf
repz
jmp
clc
mov
out
cli
push
and
pop
test
adc
dec
std
mov
mov
and
test
and
jmp
add
imul
and
call
push
push
inc
outsl
xchg
cmp
pop
test
test
or
sbb
or
das
mov
movsbl
mov
adc
jg
mov
or
jno
sbb
pop
cwtl
lods
adc
or
inc
into
push
mov
dec
or
jns
arpl
call
add
sub
rorb
nop
xchg
inc
addl
mov
xchg
into
inc
cs
insb
mov
jecxz
iret
dec
roll
pop
outsb
adc
pusha
xor
push
jmp
mov
sbb
inc
leave
pop
test
push
je
mov
adc
push
push
and
add
popf
xor
add
arpl
xchg
add
and
jp
inc
pop
outsb
repz
pop
fwait
call
test
mov
adc
and
xchg
cmp
in
or
jp
arpl
mov
xor
push
mov
test
insl
idiv
sbb
cwtl
movsl
and
ljmp
rcll
out
out
mov
jle
fwait
xlat
stos
add
xchg
mov
cli
stos
ret
or
into
data16
xchg
call
xor
mov
jo
inc
mov
int
mov
addr16
loopne
or
xchg
cmp
loop
jmp
jecxz
scas
aas
xor
inc
jns
ret
fmull
sti
shlb
push
jl
xchg
arpl
pop
movl
xchg
lahf
push
inc
jo
sub
rcr
add
add
cmp
imul
imul
imul
mov
enter
sub
xor
fstpl
fcoml
pop
adc
or
stos
js
rorb
lea
add
dec
jp
jbe
fisubrs
jo
shlb
aaa
inc
in
mov
mov
adc
inc
loopne
orb
cmc
pushf
ljmp
push
jo
pop
cmp
ds
les
clc
loopne
jp
sub
xchg
lret
test
out
je
leave
or
loopne
sbbl
aam
gs
adcl
adc
lds
clc
movsb
sbb
aam
add
jmp
adcl
xchg
sbb
push
shrb
lret
shlb
mov
xchg
xchg
xor
scas
xchg
push
loop
loope
in
xchg
shl
aad
mov
mov
cmp
push
dec
add
xchg
lea
bound
scas
cmp
lods
push
mov
gs
mov
push
jge
jle
insb
ss
push
mov
jnp
out
mov
push
dec
inc
stos
arpl
mov
movsl
add
add
ret
sbb
fwait
ljmp
nop
pushf
or
shr
xor
arpl
jno
fiadds
inc
pop
movsb
aam
fxch
into
sarb
cwtl
jge
outsl
jno
cmc
dec
loop
adcl
mov
aam
in
lds
andl
stos
dec
out
or
cmp
push
cmpsl
or
sub
mov
fnstcw
ffreep
mov
push
push
aam
aas
cmp
sub
pop
xchg
nop
jae
leave
scas
sar
pop
cmp
clc
adc
add
push
sub
jge
hlt
out
push
push
cltd
ja
adc
in
jne
mov
dec
pop
pop
jl
sarl
mov
pushf
addr16
sbb
lea
decb
or
inc
repz
jne
test
clc
sub
hlt
std
into
mov
dec
and
xor
jbe
pop
daa
sti
scas
dec
sbb
inc
mov
sbb
push
jno
into
lret
inc
das
testb
gs
jecxz
lcall
arpl
xor
cmp
jno
xlat
rorb
imulb
fwait
xchg
and
cmp
xlat
xor
bound
push
sbb
fs
xor
dec
dec
jnp
cmp
lods
pop
mov
test
les
mov
dec
push
jecxz
push
adc
cmpsl
xchg
cmp
mov
cli
ljmp
enter
pop
mov
stos
dec
outsb
orb
inc
jge
xorl
and
fiaddl
jo
fs
push
jnp
in
cmp
idiv
xorb
jge
and
outsb
or
sub
fldcw
aas
ljmp
movntq
dec
pop
inc
pusha
inc
popa
outsb
cmc
sub
loop
or
xor
mov
repnz
cltd
sbb
xchg
mov
push
cltd
push
rcl
icebp
int
add
pushf
insb
lock
stc
add
dec
arpl
popf
popf
fwait
push
fdivp
ja
data16
push
shlb
push
ficompl
push
lds
fistpl
bound
pop
in
aas
lods
and
ds
xchg
inc
dec
cli
int
fildll
mov
fcoml
es
data16
inc
fstpl
cs
sub
add
hlt
leave
in
iret
push
bound
and
dec
insl
inc
sub
mov
shll
outsb
xchg
outsl
addr16
ja
jne
popl
ret
add
int
fcmovne
call
pop
pushf
leave
cli
sarb
pop
rcrl
or
bound
xchg
lcall
jl
movsb
addl
fs
pushf
cli
push
push
lret
out
fcomip
and
frstor
ficoms
popa
pushl
xchg
ret
mov
jmp
or
sub
cmpl
cmpsl
jp
mov
faddl
mov
std
push
loopne,pt
mov
or
leave
xchg
into
aad
jno
sti
mov
sbb
pop
cmpsl
add
jno
xchg
arpl
push
les
gs
push
mov
gs
adc
ret
xor
pusha
stc
stos
outsb
addb
push
les
mov
movsl
imul
out
or
sub
and
xchg
mov
push
rcr
loope
xor
fists
jno
loopne
negl
cmpsl
xor
bound
push
dec
or
adc
cwtl
popa
rcrb
push
xchg
xchg
adc
jg
mov
mov
mov
sub
sub
inc
movsl
or
ja
jl
mov
enter
scas
fldlg2
push
fsubrl
lds
cmc
hlt
push
cmp
outsl
lods
jge
mov
mov
jae
jge,pn
cli
subl
stos
std
push
je
mov
gs
hlt
mov
mov
outsl
or
adc
movsb
test
fadd
mov
adc
fldcw
jns
fstpl
jp
cmc
scas
cwtl
mov
inc
in
xor
ret
sub
test
adc
or
mov
pop
repz
xor
pop
and
and
icebp
mov
in
sbbb
jg
repnz
leave
push
sub
jbe
int
cmp
imul
jo
sbb
mov
cmp
mov
ds
inc
lods
or
and
pop
mov
iret
pop
jnp
gs
int3
hlt
mov
dec
shll
and
sub
fidivrl
or
cmp
jns
not
int3
cs
push
ljmp
fcoml
pushf
ror
inc
outsb
outsb
lock
cltd
inc
data16
outsl
in
xlat
push
push
pop
xchg
movsl
lret
mov
inc
sbb
in
inc
cmp
fbstp
scas
repz
movsb
push
test
mov
cmp
lds
adcl
add
pushf
cli
lock
out
fs
int
mov
pop
ljmp
daa
cmpsl
inc
mov
loopne
les
and
daa
sub
mov
js
mov
mov
sbb
in
test
sbb
ljmp
scas
popf
iret
push
xor
adc
pop
xor
xchg
rorl
pop
lea
cmpsb
xor
and
pop
popf
int
or
push
arpl
mov
and
and
in
rcrb
and
mov
repnz
sub
inc
mov
jg
xchg
or
mov
pop
faddp
stc
les
ljmp
sbb
nop
lods
aaa
cltd
imul
rcrl
fsubl
imul
mov
mov
outsl
scas
test
rcrl
or
movsl
adc
xor
mov
dec
aam
aaa
push
and
push
ljmp
cltd
lret
jne
ss
mov
jnp
std
enter
xor
or
mov
int
xor
orb
dec
lods
subb
push
sbb
mov
lret
mov
mov
fneni(8087
mov
xor
mov
arpl
sbb
jnp
imull
inc
push
jp
xchg
test
dec
fildll
xor
or
add
adc
pop
test
nop
xchg
pop
jg
dec
sbb
or
fimuls
mov
jae
je
scas
mov
xor
dec
push
adc
jg
fs
rcrl
rorb
bound
add
inc
scas
add
push
adcl
add
je
pushf
in
mov
and
cmc
sbb
push
std
cltd
push
sub
sub
mov
push
in
roll
adc
dec
loope
nop
adc
xor
mov
and
add
mov
outsb
ficoml
js
sti
pop
push
mov
cmp
dec
pop
xorl
notl
push
call
sub
dec
int
jns
or
and
dec
pop
dec
popf
cmpsb
mov
cmp
movsb
add
or
xchg
leave
and
std
filds
jl
sarl
sub
stos
in
lea
aas
das
imul
fucomp
xchg
mov
jle
add
sbb
dec
nop
mov
fistl
pushf
ret
or
xchg
xchg
and
addr16
xchg
inc
fnstsw
xchg
es
mov
and
int
jmp
daa
lea
arpl
and
sub
pop
sbbl
xchg
adc
mov
xor
ret
out
sbb
fisubs
outsl
outsl
jmp
in
int
add
mov
mov
inc
jo
fcoml
loope
adc
ret
push
loop
leave
in
ja
jg
mov
cmp
lods
iret
sbb
and
cmp
xchg
sub
dec
xchg
roll
pop
mov
lds
sahf
adc
nop
sub
add
jp
test
add
mov
xor
arpl
adc
data16
lea
sub
lcall
sub
jl
adc
mov
jae
mov
add
sti
sub
cwtl
sbb
push
mov
aam
test
js
adc
dec
std
out
push
sbb
push
test
add
mov
repnz
pop
cmp
mov
sub
pop
leave
subl
out
jne
outsl
andb
adcl
add
jmp
cmp
inc
jle
jnp
in
inc
and
fdiv
add
dec
xchg
decl
xchg
cmp
les
dec
inc
jns
push
loope
inc
lret
xlat
mov
xlat
call
hlt
jae
pop
ret
movsl
push
test
jge
imul
inc
fstl
pop
push
orb
xchg
cld
lret
xchg
lea
sub
mov
mull
sbb
xor
repnz
jecxz
lret
xchg
and
push
neg
dec
xchg
les
clc
cld
and
and
xor
es
or
int3
outsl
cmp
sub
pop
ja
pushf
test
shll
int3
andb
outsb
adc
adc
jb
jo
pop
add
out
je
mov
scas
ljmp
js
subb
cmpxchg
in
inc
xchg
ror
loopne
out
xchg
loopne
jnp
in
jle
into
jns
mov
rorb
sbb
xlat
cmc
inc
movl
push
add
push
inc
int
and
cs
and
aad
addb
xchg
sahf
and
iret
pop
push
orb
lods
sbb
iret
push
dec
add
dec
mov
mov
mov
add
in
call
xchg
cs
sti
cmc
roll
std
xchg
fsubrs
jle
sti
adc
cmc
ljmp
ficoml
lret
inc
pop
xchg
rolb
pushf
scas
mov
mov
and
mov
push
movsl
inc
int3
dec
int
jns
pop
dec
inc
mov
pop
stos
cmpsl
mov
sub
sbb
push
sahf
outsl
inc
fldl
or
push
dec
loopne
call
mov
notb
cmp
add
sbb
bound
insl
sbb
leave
movsl
jge
mov
xchg
mov
es
bound
mov
fadds
adc
fsubrs
pop
mov
push
test
mov
xchg
iret
push
outsb
stos
rcll
mov
cli
sbb
mov
inc
dec
fsubrl
fnsave
inc
test
jp,pn
aaa
imull
cmp
push
push
cwtl
testb
pop
ja
dec
dec
das
les
lahf
add
push
call
jnp
cmp
inc
lea
cltd
or
and
xchg
into
shrl
inc
out
pop
xlat
std
and
loope
lds
fwait
push
pop
pop
push
pop
cmpsl
insb
lea
add
mov
cmpb
push
or
push
or
ret
fcomps
sbb
shlb
jbe
pop
stos
int
sub
mov
decl
mov
loopne
jo
nop
in
mov
out
fistps
leave
jp
sbb
dec
pop
cmpsb
das
jmp
scas
je
aam
dec
mov
push
dec
pusha
cmc
test
sbb
pop
nop
xor
xchg
fsubl
jno
xorl
ljmp
aam
inc
push
sti
xor
mov
out
mov
ds
mov
or
jne
xlat
push
pop
mov
imul
xor
lds
xor
jmp
inc
nop
ja
stos
fs
sub
fsubs
lret
cmpl
and
push
loop
xchg
mov
dec
jmp
addr16
mov
and
mov
pop
xor
fst
mov
lea
pop
out
sub
push
or
jae
adc
or
jl
in
mov
ss
or
mov
push
xchg
pushf
cmp
imul
repz
ds
repz
mov
xchg
bound
push
call
sbb
int3
cmp
out
test
push
dec
das
pop
shrl
xchg
lock
mov
mov
shll
mov
jno
xchg
jg
sub
movsb
xor
repnz
xchg
lret
sbb
mov
jbe
jae
outsb
sti
outsl
push
inc
ret
aam
cli
incl
test
dec
test
insl
aam
addr16
sbb
gs
notl
popa
sub
inc
mov
push
dec
mov
or
mov
lcall
mov
test
js
stos
div
insb
sub
enter
dec
add
lods
repnz
jbe
cmc
xchg
sbb
jle
jmp
mov
popa
sbb
cmp
aas
cmpsl
movl
mov
push
shrl
or
out
push
mov
lahf
jb
sub
lcall
inc
adc
testl
pop
sub
stc
lea
es
xchg
aam
and
test
repz
repz
pop
inc
adc
loop
sahf
mov
mov
xor
jp
pcmpeqd
jmp
pop
fwait
ret
setb
dec
jns
mov
daa
adc
sbb
cltd
fcomps
sbb
aas
jp
subb
dec
pop
mov
pop
lea
orl
fnstcw
dec
pop
and
or
cli
inc
dec
leave
shl
cmp
dec
inc
xchg
xchg
xor
adc
xchg
xor
in
shrl
cmc
sbb
cltd
jmp
push
les
xlat
xchg
dec
psllq
xor
sbb
das
into
clc
add
data16
adc
lods
jge
adc
scas
cli
add
lods
div
ror
mov
aas
enter
repz
mov
scas
insb
call
movsb
pop
inc
jae
xchg
sbb
xor
int
cmp
mov
test
popa
rcrl
aaa
mov
enter
adc
loop
jb
cmc
mov
fdivl
mov
movsl
xor
sub
test
fs
nop
or
stc
xchg
outsl
aam
dec
and
loopne
inc
pop
out
xor
nop
iret
iret
js
aam
pusha
pop
into
push
aaa
mov
out
sub
pop
js
movsb
mov
mov
xor
jno
fcoms
hlt
mov
test
ja
sbb
mov
add
clc
inc
push
out
or
sbb
imul
or
sti
inc
mov
add
adc
mov
iret
fcoms
mov
fs
sub
mov
loopne
sahf
sub
sbb
std
testb
rep
jle
gs
shrb
push
adc
iret
or
je
sbb
push
btc
mov
dec
popf
ljmp
pop
jae
dec
pop
pop
test
mov
fstp
rorb
mov
lods
jmp
pop
xor
or
jle
es
movb
addr16
or
out
lods
cwtl
pop
lahf
push
pop
int
sarl
cld
pop
cmp
adc
xor
lcall
movsb
lahf
clc
fisubs
fwait
leave
dec
cmp
add
mov
imul
mov
xchg
mov
cltd
push
fwait
or
and
insl
push
jb
inc
lds
jmp
dec
and
push
rorb
jae
insl
mov
lods
and
inc
jbe
sahf
mov
sti
mov
mov
stos
arpl
sbb
daa
add
mov
sbb
gs
imulb
mov
pop
ret
push
das
hlt
jbe
cmp
or
clc
mov
jne
sahf
add
repz
out
cmp
stc
dec
aam
mov
sbb
out
in
mov
and
cmpsl
pusha
sub
mov
out
jb
pop
push
pop
dec
sahf
imul
fwait
push
push
in
xor
push
inc
aam
ljmp
pcmpeqb
push
icebp
iret
xlat
xchg
out
or
sbb
bound
pop
jecxz
es
xchg
push
adc
sub
stos
and
xchg
inc
daa
lret
movsb
sub
mov
lret
pop
mov
movsl
xor
hlt
xor
inc
add
and
mov
aaa
cmp
pop
pop
sbbl
sbb
mov
adc
outsb
lret
fldt
inc
aas
add
or
mov
lret
fisubl
into
ret
out
icebp
mov
stos
dec
aad
and
jne,pt
mov
sbb
inc
lods
or
jecxz
xchg
repz
jb
roll
bound
test
jne
dec
jecxz
pushf
xor
in
clc
dec
loop
or
lods
mov
push
mov
sbb
or
mov
stos
in
pop
sub
xchg
daa
inc
dec
xchg
mov
out
pop
into
stos
xchg
insb
outsb
push
mov
vunpckhpd
fldcw
pop
push
mov
mov
dec
mov
aad
mov
add
jbe
mov
add
dec
mov
pop
dec
test
mov
jle
rcrl
pop
or
aaa
inc
mov
add
xor
pop
addl
xchg
iret
pop
test
int3
pop
fstpt
or
push
jg
pop
sub
jl
sbb
adc
leave
sbbl
sbb
cld
mov
ja
add
add
pop
jp
and
aad
mov
add
jns
sub
push
and
aas
xor
jo
pop
dec
dec
mov
mov
push
push
icebp
adc
dec
adc
and
xchg
decb
mov
xchg
fs
fcomp
or
mov
sub
dec
popf
lods
fs
adc
movsl
andl
in
mov
mov
sub
sbb
cli
pop
cld
sbb
test
notb
jns
adc
and
orl
lods
sub
cmc
leave
ss
push
or
es
adc
push
popa
push
inc
pop
xchg
adc
xor
insl
stc
aam
xchg
jge
xor
push
xor
adc
or
push
cmpb
negl
add
int
pop
mov
js
shl
sbb
aas
lahf
loopne
lret
fstps
cli
lock
and
sahf
jns
cmp
aas
imul
pop
mov
les
mov
xor
cmpb
jmp
into
jmp
fsubr
add
test
lcall
insb
xor
je
fsubs
mov
pop
bnd
jae
mov
jg
sub
jge
out
imul
jae
lret
cmp
sbb
loope
mov
or
inc
mov
mov
test
repnz
lcall
popa
into
mov
test
iret
fnstsw
jne
ret
jle
mov
push
imul
xchg
aas
mov
testl
cld
bound
add
xor
xor
and
pop
jle
push
push
mov
out
repz
sbb
sbb
lea
int3
add
sbb
ja
xchg
outsl
out
add
xor
mov
mov
add
sbb
pop
bound
sti
into
sbb
movb
and
jge
and
loopne
shr
into
outsl
dec
mov
jb
adc
lret
cld
out
push
dec
add
dec
and
std
in
stos
dec
stc
pop
outsl
aad
mov
adc
mov
sub
or
into
mov
fwait
es
inc
cmp
mov
sbb
sbb
das
push
mov
xor
jg
and
sbb
xchg
mov
fidivrs
inc
or
inc
adc
je
cmp
aas
in
adc
mov
fstpt
xor
or
inc
pop
xor
int
addl
push
or
pop
popf
aam
outsl
cltd
leave
push
xor
dec
call
outsl
sbb
shrl
sti
fsts
mov
jp
xor
les
xor
jmp
push
jbe
pop
fnsave
jge
mov
mov
cs
int3
xchg
ss
or
cmp
adc
scas
out
xor
dec
push
xor
fld
sysenter
cmc
inc
daa
sub
enter
jns
push
cmp
and
ror
roll
ror
aad
dec
dec
cmpsl
out
push
ficomps
ja
bound
and
iret
mov
mov
cmp
inc
stos
loopne
lahf
fadds
mov
jmp
mov
jmp
xor
cltd
mov
lods
or
jp
rcrb
dec
xchg
ret
adc
aas
outsl
or
mov
mov
mov
cmp
inc
insb
mov
add
ret
aas
pop
cmp
push
adc
int
ret
lds
dec
or
mov
cltd
cmp
lahf
dec
push
sub
stos
in
outsl
mov
bnd
imul
dec
mov
es
dec
jnp
or
mov
xor
test
push
mov
push
sti
popf
fadds
ds
pop
js
movsb
push
loop
out
or
xor
dec
dec
leave
lcall
nop
pushf
xorb
cmpsb
je
ficoml
pop
out
stc
adc
jo
inc
adc
lds
xor
arpl
das
lret
add
sbb
sbb
inc
lea
mov
jmp
fisttpll
test
mov
iret
or
jmp
adc
rorl
pop
pop
inc
adc
lods
loop
inc
add
xorb
xlat
sbbb
dec
mov
inc
stos
inc
mov
adc
pusha
sbb
scas
jno
adc
jo
int3
adc
sbb
xor
test
mov
repnz
inc
test
sti
cs
mov
fsubrp
repnz
fbld
ds
das
inc
add
push
and
mov
pop
cmpb
push
shll
sbb
pop
bound
rcr
test
icebp
mov
push
or
adc
pop
mov
pop
mov
sub
dec
mov
cmpsl
xor
fidivrs
inc
lret
inc
cwtl
inc
cltd
dec
mov
and
dec
in
mov
aas
adc
mov
jmp
dec
in
ljmp
pop
cmp
mov
push
mov
in
aad
jmp
dec
jb
jns
comiss
mov
xchg
aad
aas
and
and
dec
adc
xor
adc
xchg
adc
loopne
sub
mov
subl
cmp
mov
pop
call
or
pop
cld
es
mov
mov
pop
imul
mov
test
leave
cmp
or
out
inc
out
fadds
cli
push
mov
fmull
xchg
testl
mov
or
idivl
outsb
inc
rcrb
call
mov
dec
xor
push
lock
push
sub
ret
sub
into
mov
outsb
cmp
int
out
xchg
addr16
mov
cmp
loope
ss
pop
shll
scas
insb
adc
mov
test
int3
push
out
pop
frstor
cmp
mov
sub
xchg
ds
cwtl
xchg
push
aaa
push
hlt
sbb
aam
icebp
fucomp
push
pushf
jle
lahf
inc
pop
pop
or
mov
mov
push
or
imul
xchg
cwtl
mov
setno
cmp
rcrb
push
jge
cmpsb
cmp
xor
in
imul
js
nop
push
push
mov
push
into
fstpt
jecxz
cmp
sbb
lahf
enter
in
sbb
leave
insl
je
imul
addr16
leave
inc
ds
and
mov
and
pop
and
insl
adc
inc
dec
aas
xor
imul
ss
cmp
jns
sbb
sarl
sahf
and
aas
nop
mov
shlb
into
lcall
cltd
jmp
mov
push
mov
sub
sbb
cli
movsl
inc
mov
xor
push
or
lcall
push
adc
cmpsl
fsub
inc
and
stos
inc
push
jno
pop
inc
xchg
ret
outsl
fisubl
push
pop
addb
mov
sbb
jae
jle
mov
push
repnz
sbb
incl
out
sbb
pop
test
lret
cmp
repnz
cltd
sbb
cmp
fildll
mov
and
icebp
mov
cltd
jo
cmp
sub
sub
clc
mov
pushw
lcall
xchg
fdivrl
out
jl
pop
out
daa
xor
in
cli
into
cmpsb
mov
pop
mov
push
std
push
in
mov
sti
mov
test
inc
clc
xchg
in
insb
mov
rcrl
xchg
mov
test
jne
xchg
and
inc
dec
sahf
and
and
push
push
pop
scas
test
jb
out
test
or
fsubrl
in
fiaddl
xchg
xchg
mov
inc
add
push
popa
push
mov
fcmovnu
testb
pusha
inc
aaa
ss
pop
pusha
dec
pop
xor
outsl
inc
mov
add
xor
js
jmp
in
popa
add
jns
clc
push
insb
movsb
or
mov
stos
aaa
bound
adc
cs
vpsubusb
sti
pushf
shll
sbb
insb
cld
fldenv
jmp
sbb
sti
pop
push
pop
add
in
in
xchg
shrb
testb
addr16
sub
adc
jecxz
addb
rclb
mov
add
rclb
cmp
int
adc
es
cmpsb
sub
lcall
sarb
stos
push
dec
push
mov
xchg
push
inc
jle
mov
cmp
je
push
js
std
ret
test
push
test
jge
jne
pushf
das
or
sbb
add
and
xlat
or
cmpsb
xchg
or
inc
jl
std
jg
int3
mov
cmp
add
sarb
xlat
push
stos
inc
fsubp
shrl
cld
push
sub
testl
lock
push
shr
shl
adcl
cmp
pop
xchg
add
insb
xchg
mov
mov
addr16
movsl
xchg
int3
test
cwtl
adc
std
gs
ret
jp
inc
xchg
jb
fcomp
adc
pop
mov
cmp
ljmp
mov
mov
rol
jmp
int
or
push
sub
ja
jle
repnz
lock
shll
jnp
js
adc
xor
dec
fbld
dec
cli
les
jbe
repnz
mov
pusha
sub
mov
mov
mov
pop
cmpsb
shlb
sbb
out
jg
adc
inc
dec
sbb
xchg
cmp
adc
leave
cmp
push
loopne
mov
pop
rorl
dec
mov
cmp
mov
jl
dec
sbb
notl
outsb
lods
out
inc
test
push
inc
pop
pushf
add
xlat
leave
out
sarl
xchg
into
adc
or
pop
icebp
sub
bnd
mov
incb
hlt
adc
out
inc
xor
ja
and
notb
addl
int3
jne
or
out
stos
scas
movsl
jmp
and
dec
add
cltd
ss
std
push
scas
sub
xlat
mov
jp
pusha
mov
stc
mov
jle
movsb
or
mov
fwait
mov
jge
xor
jo
enter
cmp
addl
xchg
into
inc
dec
daa
ljmp
subl
pop
sub
xchg
pusha
xor
bswap
insl
cmp
pushf
sbb
scas
mov
adc
imul
in
fsubrl
and
pop
ja
xlat
mov
test
push
jnp
push
icebp
lds
lds
and
fnstsw
mov
adc
or
xchg
push
ljmp
mov
mov
jle
sbb
sahf
and
cli
pop
add
inc
sub
mov
loop
lods
mov
pop
add
div
push
add
addr16
mov
das
add
mov
scas
sub
in
xor
fadd
mov
call
mov
and
add
int
sub
in
add
add
push
mov
mov
bound
and
lret
shr
call
ds
mov
jecxz
pop
in
sbb
xchg
sbb
mull
in
dec
cmp
xchg
movsb
js
push
cmpb
mov
cmc
sbb
lods
shrl
int3
adc
or
pop
repz
and
sbb
or
addr16
lcall
mov
pushf
insl
int
or
scas
lods
add
jp
icebp
jns
sub
in
aam
mov
push
lds
test
aam
sub
mov
out
notl
ret
addl
leave
mov
dec
pop
out
scas
mov
push
mov
and
push
sar
or
mov
pop
paddusw
mov
vpmulhuw
cltd
mov
mov
push
mov
fiaddl
cmp
pop
jb
adcl
imul
or
mov
mov
push
jb
lds
jecxz
arpl
mov
stc
xlat
jmp
jbe
je
jecxz
roll
stc
aam
nop
cmp
cmc
ss
jb
xchg
mov
addr16
stos
clc
es
jo
pop
jmp
xchg
fcmove
imul
fdiv
cmp
inc
mov
out
pop
clc
mov
dec
daa
dec
lret
shll
pop
les
sbb
ss
push
xchg
rep
and
xor
cmp
adc
das
or
xchg
test
push
inc
jg
rcll
or
xlat
xchg
xchg
jae
mov
jl
or
pushf
scas
mov
sarb
cwtl
jno
cmp
out
dec
jb
and
int
sub
sbb
adc
fldt
cmp
jbe
aad
out
jns
hlt
push
shl
xlat
stos
scas
cmc
add
out
sbb
pop
jmp
sbb
jecxz
mov
js
dec
lcall
add
cmp
mov
inc
mov
pushl
xor
push
xchg
jl
adc
je
mov
call
out
push
jecxz
mov
mov
je
dec
xor
cli
mov
mov
mov
sbb
lcall
cmp
add
sbb
and
push
loopne
xor
lods
push
hlt
pop
sarb
and
das
cmp
nop
adc
lods
xor
fsts
ret
jp
xchg
call
xorl
push
xor
mov
testb
sbb
mov
jbe
pop
enter
xchg
dec
imul
ds
clc
sti
push
enter
xor
mov
daa
xor
pop
out
dec
loop
sbb
add
jbe
sbb
pop
mov
or
cld
cltd
pushl
lods
sbb
int
cmp
inc
out
push
imul
data16
dec
dec
xor
sbb
adc
sub
push
push
cmc
cmp
push
jmp
xchg
inc
sbb
add
mov
mov
sub
lock
mov
test
jo
push
lret
sbb
sbb
dec
xorl
adc
ficompl
imul
or
lock
xor
pop
lret
in
fisubl
les
stc
int
xor
orl
cld
xchg
pop
push
lods
adc
jp
jmp
movsl
ljmp
jmp
test
jno
jo
sub
andb
arpl
stos
pop
mov
adc
pop
fisubrs
dec
movsb
adc
mov
mov
in
xchg
clc
popf
xchg
repnz
adc
pop
in
fwait
sbb
lret
data16
scas
ljmp
adc
adc
xor
pop
jnp
iret
inc
ljmp
adc
stos
pop
test
mov
jno
mov
xchg
sub
lcall
lret
movsl
push
dec
mov
cwtl
inc
iret
sub
imulb
cmpsb
or
dec
das
pop
fnstcw
sub
push
mov
push
jl
and
cmp
inc
jno
sbb
test
mov
loopne
cmp
mov
lret
inc
pop
cmpl
inc
inc
mov
jl
xor
pop
xchg
inc
test
push
cmp
dec
icebp
mov
lar
dec
dec
imull
popa
mov
cmc
inc
ljmp
xchg
cmp
pop
lcall
rcr
ret
cmpsb
sub
mov
aas
enter
aas
clc
cmp
inc
mov
ret
shrl
xlat
xchg
imul
or
mov
adc
pop
ret
loop
bound
mov
in
jl
movsb
scas
xchg
and
andb
dec
cmc
mov
int3
add
aas
cmp
fdivrl
jno
fcoml
sbb
push
into
mov
sbb
sbb
sbb
sbb
pop
lds
xchg
and
mov
pop
jg
dec
inc
cmpsb
movsb
js
sbb
sub
popa
push
out
sub
jp
jbe
xor
mov
mov
stos
mov
sbb
ss
and
mov
pushf
cmp
or
push
rcrb
and
shr
orl
mov
ljmp
fcmove
lcall
pop
add
test
popa
or
push
or
leave
insl
in
aad
cli
push
adc
inc
sub
outsl
in
jle
mov
dec
dec
cmp
gs
or
mov
pop
mov
inc
mov
mov
clc
adc
cmp
ds
push
inc
mov
rcll
push
sub
sub
jg
sbb
mov
pop
xchg
or
jle
inc
pop
test
fcomps
aam
jns
pop
adc
movsl
std
adc
cmp
jecxz
mov
push
sbb
push
pop
rorb
ret
cwtl
pop
icebp
imul
jl
fldl
lahf
imul
ljmp
xrelease
inc
xor
jns
inc
fidivrl
addr16
test
mov
out
xor
enter
cmc
inc
out
pop
sbb
xor
mov
jo
loope
int
xchg
jle
fbld
daa
adc
out
adc
mov
sahf
outsl
and
jge
sahf
dec
mov
inc
fidivs
mov
jmp
loope
movb
lea
cwtl
mov
push
outsb
or
stc
lea
outsl
test
add
lcall
mov
std
push
mov
xlat
std
cwtl
fistpl
loopne
jle
mov
scas
xlat
push
adc
notl
clc
fiaddl
fsubp
aam
lock
cmp
add
movsb
fwait
lret
add
xor
sbb
imul
mov
sub
mov
iret
testb
and
test
in
pop
add
sub
int
mov
adc
or
repnz
dec
stc
in
out
add
jae
data16
fdivl
xchg
push
mov
lods
popa
push
dec
sbb
mov
cli
mov
cld
pusha
and
xor
sti
hlt
out
les
adc
xchg
shll
int3
mov
pop
in
aad
out
loopne
scas
add
pop
arpl
mov
adc
mov
mov
cli
lahf
vpxor
ja
js
outsb
pop
add
sbb
fwait
pop
mov
pop
push
jae
mov
mov
xlat
sti
mov
daa
push
dec
mov
and
test
mov
outsl
push
mov
imul
inc
cmpb
pop
push
pop
out
jecxz
or
or
insb
ljmp
pop
mov
mov
sbb
out
and
nop
and
pusha
mov
xchg
lret
cmp
cltd
sbb
mov
mov
mov
sbb
loop
daa
les
outsb
ds
mov
hlt
stc
adc
adc
decb
add
cmpsl
pushf
les
rcrl
mov
cli
inc
ret
cmc
xor
push
dec
pop
lds
shrl
adc
jmp
scas
jge
or
xchg
and
les
shlb
movsb
or
popf
adc
rcrb
jbe
xor
test
cmp
sbb
mov
inc
xchg
inc
cmp
sbb
jg
mov
cmp
inc
mov
aam
cmpsl
stc
faddl
shll
andl
in
rcr
dec
rorb
xor
cmc
fimuls
inc
fstps
rcl
jb
or
lret
int
xor
or
pop
cli
mov
aas
mov
inc
jge
cmpsb
cmp
jbe
xor
lea
mov
cmp
bound
pop
insb
repz
out
dec
mov
or
fsubrp
mov
xchg
lret
out
stos
cmp
xchg
test
xchg
ja
repz
jb
fsin
lods
clc
sub
nop
inc
aad
rcrl
fsubs
repz
lock
faddl
sub
push
xor
js
xor
sbb
iret
loop
vmovsd
push
out
mov
xchg
inc
pop
xchg
dec
es
pop
fbld
or
and
push
popa
shll
adc
cld
enter
pop
call
movsb
stos
xor
test
lahf
out
enter
cmpsl
rcrb
scas
mov
push
nop
mov
mov
into
mov
out
jb
inc
dec
push
cmp
jno
test
addb
insb
loope
cli
mov
loopne
scas
and
push
cmp
icebp
add
stos
shrb
xor
dec
or
cmpsl
xchg
mov
nop
dec
jbe
sbb
in
movsw
rclb
filds
aad
xor
dec
std
bound
mov
and
nop
mov
cmp
pop
das
and
push
mov
pop
lods
cmp
push
fldt
setge
fldenv
pushf
mov
pop
syscall
push
ret
add
out
pop
adc
out
clc
mov
in
loopne
jecxz
xchg
lock
add
rorl
lret
dec
imul
into
inc
jmp
mov
test
fidivs
mov
or
movsb
ss
sar
pop
clc
aad
call
sub
xchg
fwait
pop
and
fdivl
frstor
shrl
inc
cmpsb
push
test
mov
jbe
xchg
test
loopne
scas
sbb
xor
xchg
pop
dec
or
int
fld
jae
and
fbld
loopne
adc
lcall
jecxz
aas
lods
jg
jnp
sub
mov
jo
or
push
inc
out
insb
cmp
adcb
stos
ss
out
pop
bound
push
imul
pop
push
xor
inc
test
dec
mov
ret
mov
inc
cmp
push
test
xchg
xor
add
gs
xchg
adc
fidivrl
mov
jle
xlat
fcmovnbe
mov
mov
shl
push
lret
out
push
adc
mov
les
testb
and
push
popa
add
cwtl
test
lock
xor
xchg
jle
cmpsb
inc
jge
and
mov
inc
mov
pusha
inc
dec
shl
test
popf
dec
mov
adc
jl
push
imul
iret
test
stc
mov
lea
mov
xlat
shlb
pusha
incb
xchg
xchg
dec
push
es
lods
pop
jb
mov
xchg
xchg
cmp
ret
mov
xor
or
int3
pop
int
int3
sbb
icebp
int3
fldl
in
push
and
mov
aam
ds
mov
loopne
imul
push
push
shl
out
mov
sti
dec
mov
xor
sub
mov
sub
out
mov
pushf
and
icebp
in
jg
aad
mov
fbstp
xchg
adc
scas
mov
dec
jns
mov
rol
or
jbe
scas
push
cmp
out
test
inc
sub
mov
jno
mov
inc
cld
fs
adc
repnz
gs
mov
bound
rcrl
scas
xchg
sub
xlat
xchg
sahf
shrb
xchg
mov
xchg
pop
das
lea
xor
xchg
loop
xchg
testb
mov
add
fildll
push
jbe
jp
jmp
pusha
dec
cli
pop
push
repz
sarl
psllw
fsubrp
cld
lods
sti
lock
ret
jne
movsl
mov
data16
pop
sub
inc
insl
es
xor
test
pop
clc
dec
cmc
and
adc
push
mov
lds
xlat
inc
pop
sahf
jmp
jns
and
movsb
lods
pop
sub
imul
xor
and
sbb
loop
inc
outsl
fs
aaa
pop
mov
pop
jmp
out
add
and
or
xchg
test
push
sub
xchg
adc
cltd
and
fiaddl
pop
lret
test
adc
notb
dec
enter
aas
push
filds
adc
and
cmp
mov
sbb
push
negb
push
fdiv
inc
pop
jno
sahf
pop
cmp
pushf
js
arpl
xchg
flds
dec
int
push
sti
rcrl
xchg
xor
and
stos
shrb
sbb
fs
pop
mov
or
cmpsb
xchg
dec
inc
ret
mov
jae
jmp
lods
test
orb
sub
je
stc
xor
test
in
xchg
or
pop
sbb
icebp
mov
mov
mov
mov
repnz
divb
fnstsw
js
and
sbb
pop
mov
and
int
sbb
mov
leave
js
mov
adc
dec
ja
clc
subl
mov
sub
pop
push
mov
jnp
std
push
cmp
js
xchg
popa
push
inc
inc
add
sub
jmp
lret
xor
addr16
pop
or
enter
andb
inc
sub
daa
xchg
test
and
add
jbe
ret
lods
outsl
dec
pop
jbe
adc
sub
loope
popf
das
in
dec
cs
sbb
sbb
ficoms
iret
int
stc
add
pop
clc
leave
mov
push
xchg
out
xchg
cmp
out
in
pmulhw
dec
ret
push
push
dec
and
push
cwtl
lahf
mov
leave
pxor
outsb
xor
push
and
mov
mov
adc
loop
gs
and
out
mov
or
aaa
pop
add
in
add
mov
imul
xchg
xchg
dec
std
and
mov
jne
sub
inc
xchg
mov
imulb
dec
ss
jmp
mov
mov
push
mov
jb
std
add
orl
bound
and
movsl
and
pushf
lcall
xchg
jle
scas
pop
fcoms
jge
repnz
sub
or
cld
sub
and
jnp
gs
cmp
mov
mov
pop
mov
sbb
add
mov
lds
xor
push
dec
inc
out
cmpsb
dec
btr
mov
jmp
sbb
xor
xchg
shlb
cwtl
and
sbb
push
mov
in
adc
and
sarl
stos
lret
sbb
sub
outsb
mov
insl
fdivs
out
or
stos
nop
xchg
daa
add
shll
imul
mov
add
jle
jg
add
inc
push
cmp
cmp
test
mov
mov
adc
jae
and
dec
adc
pop
mov
repnz
orl
adc
enter
dec
xor
iret
mov
arpl
cmp
aas
push
outsl
cmpsl
repz
cmpsb
jecxz
cli
sahf
sub
lods
fisttpl
test
jae
push
adc
xchg
aam
inc
pop
add
cli
pop
fwait
inc
clc
aas
nop
in
pop
loopne
xchg
sub
xchg
push
lret
or
push
dec
mov
cmp
inc
cmpsb
imul
jle
fisubrs
bound
xchg
cmpsb
add
ret
movb
leave
cltd
movsb
and
mov
outsb
inc
addr16
xchg
daa
and
in
fisubl
out
mov
push
fidivrs
cmpsl
pusha
call
push
ss
aaa
jl
test
mov
lret
cmp
sahf
or
mov
adc
add
push
mov
pusha
jecxz
movsb
adc
cmp
dec
in
or
bound
in
cmp
jl
mov
pop
cmpsb
in
pop
mov
push
fs
gs
gs
clc
hlt
xchg
stos
std
mov
xrelease
jo
mov
mov
das
stc
bnd
in
pop
outsl
out
push
sub
xor
push
sub
loope
lret
mov
sti
addr16
int3
fs
push
mov
bound
and
fimuls
dec
xchg
xchg
lahf
xlat
imull
loop
cmpsl
rcll
push
daa
add
idivb
mov
jl
mov
jo
mov
icebp
dec
cmp
es
outsb
test
sbb
push
adc
jns
push
out
hlt
test
xchg
cmp
cmc
cmpsl
or
int3
sbb
aam
cmc
rcll
loopne
stc
mov
cmp
pop
mov
pop
jle
jo
push
mov
lock
sahf
in
shrb
ja
dec
lahf
leave
cmpl
fwait
mov
dec
mov
int
push
lods
mov
mov
mov
sub
sub
xchg
addr16
mov
mov
cwtl
jp
mov
out
stos
cmpsb
ja
insl
data16
inc
push
cmp
jno
jb
out
pop
push
dec
push
roll
in
dec
int3
and
in
cmpsl
es
out
inc
jne
mov
out
inc
mov
jne
lcall
sub
xchg
inc
cmp
or
mov
enter
int
dec
mov
ret
lds
pop
sub
test
pop
pop
pop
std
inc
adc
sbb
pop
mov
nop
inc
cld
push
cltd
and
addl
enter
popfw
loopne
arpl
mov
fcmovne
lea
test
cld
pop
sbb
nop
mov
lds
fstp
arpl
roll
shrl
xchg
and
fcmovnbe
fs
out
outsl
int
inc
ss
sub
dec
jmp
lret
jp
int
fs
inc
inc
insl
sbb
mov
inc
mov
mov
in
test
sbb
dec
pop
es
sub
fsubrs
xchg
stos
das
lods
mov
shlb
in
xchg
enter
or
pushl
js
ds
pop
xchg
leave
test
insb
test
test
jns
lret
add
std
addr16
or
clc
icebp
jge
ja
mov
xor
mov
sti
jecxz
mov
stos
lea
mov
or
jle
lret
mov
andl
popf
xor
lea
push
mov
dec
roll
add
adc
ret
pusha
bound
mov
jae
push
pop
cli
jle
jg
mov
fsubl
xchg
scas
in
notl
dec
test
sub
add
nop
inc
mov
mov
push
shl
inc
or
imul
sub
cmpsl
cmc
dec
mov
roll
rcr
xchg
inc
xor
in
mov
arpl
scas
movsb
lcall
xchg
roll
int3
sub
sub
and
sarb
ret
pusha
or
mov
dec
aad
icebp
sbb
sti
movsl
repz
cmp
lea
lahf
sbb
pop
mov
mov
mov
je
and
dec
ret
mov
cli
stc
xor
inc
mov
and
test
loopne
push
fdivp
addl
adc
push
cmp
pop
sbb
hlt
stos
push
data16
out
lahf
cwtl
or
aaa
outsl
arpl
out
subl
inc
sbb
jp
mov
sbbl
adc
adc
mov
mov
or
test
sbb
lea
outsl
sti
ljmp
jo
xchg
mov
rcr
sarl
xor
or
pop
sbb
cmp
mov
fcmovnu
mov
lret
jne
push
ja
adc
xchg
and
xor
nop
sbb
test
sbbb
in
push
pop
push
lret
fsubl
jns
fadd
sarb
lret
inc
sub
inc
hlt
mov
loop
mov
dec
mov
aad
andb
push
lcall
es
shll
inc
es
pop
out
repnz
mov
jae
loop
fdivs
mov
in
jge
js
inc
and
int
push
dec
lods
jl
xor
push
fmull
lods
mov
and
push
int
push
pop
fistpl
lods
sub
test
pushf
jbe
les
nop
into
pushf
enter
xor
sub
jge
pop
pop
icebp
in
inc
fists
mov
repnz
movsl
jmp
xchg
out
ja
loop
je
data16
mov
lcall
mov
movsb
or
push
jp
jns
inc
cmp
loop
xor
ljmp
dec
pop
idivl
xor
pop
xor
in
adc
inc
push
cmp
fstpt
pop
repz
sbb
and
mov
addr16
cmpl
addr16
xchg
enter
icebp
insl
pop
out
outsb
inc
fimull
mov
and
push
xor
ss
jo
je
imul
mov
int
cmp
inc
test
sahf
fstpt
cmpsl
neg
int3
push
scas
add
dec
jns
jnp
outsl
pusha
popf
in
mov
ljmp
movsl
mov
mov
lock
mov
or
loope
rclb
mov
bound
add
in
fistps
mov
jnp
xlat
loop
cmpsl
inc
lcall
out
xor
cmpsb
mov
call
xor
or
cmc
cltd
mov
xchg
jae
adcb
mov
xor
sub
push
sbb
aas
adc
xor
push
push
push
lret
loop
mov
fwait
and
or
test
sub
mov
inc
dec
pop
jp
add
add
mov
or
insl
idivb
inc
ja
mov
jno
fldl
cmp
jns
lahf
mov
stos
lret
pop
push
add
jp
jge
jmp
mov
icebp
push
aas
pop
xchg
xchg
das
cmpsl
xchg
jge
jg
in
mov
push
imul
getsec
sub
pop
cmp
sub
cmp
test
loop
or
mov
cmpsb
sub
xor
inc
adc
cmpsb
fwait
jne
mov
dec
loopne
xor
mov
sahf
jne
adc
xor
iret
lcall
fistpl
mov
loop
clc
mov
fidivrl
fistpll
movsl
arpl
xchg
pop
test
fsts
pop
sarb
pop
push
adc
dec
lods
pop
add
dec
ret
inc
gs
gs
into
int
nop
pop
push
or
add
xor
mov
sub
loopne
addr16
cmp
inc
insl
xor
lahf
js
loopne
cld
sbb
pop
mov
mov
sub
pushf
cs
cmpsb
mov
ja
or
mov
mov
test
dec
out
jmp
pop
push
sti
arpl
mov
frstor
xor
aam
scas
lods
xchg
arpl
jns
out
push
xchg
lds
stos
test
mov
adc
cli
xchg
sub
in
popa
add
pop
shll
jnp
xchg
dec
sti
shl
ja
stc
enter
inc
fwait
sbb
xor
out
push
dec
fs
mov
pop
adc
dec
sti
mov
popf
jbe
mov
imul
push
movsl
add
fdivrl
mov
mov
je
mov
loopne
mov
movsb
inc
push
mov
lret
stos
cmp
fsubl
aad
je
popa
out
mov
mov
cli
std
xorb
repz
fcomps
inc
in
sub
std
inc
lods
testb
imul
scas
xor
loop
nop
cs
test
fmuls
sbb
push
dec
aam
subl
into
push
enter
mov
dec
jne
in
mov
cmc
and
xchg
jbe
mov
adc
pop
stc
sbb
in
add
cwtl
in
daa
jmp
inc
addr16
test
or
iret
jo
xchg
pop
cmp
push
lods
or
call
addr16
push
mov
sbb
scas
add
test
xchg
sub
and
sbb
popa
xchg
or
mov
xlat
jecxz
mov
loopne
sbb
mov
mov
popa
daa
out
lods
insb
push
xchg
into
repnz
icebp
int3
mov
add
test
cld
add
lock
add
int3
enter
shlb
inc
loop
inc
jne
mov
test
push
cmp
out
das
sbb
clc
adc
push
stos
xor
fxch
mov
fucomip
loopne
and
call
ja
jae
je
int3
cli
es
aam
out
je
rclb
inc
icebp
pop
mov
aas
cld
inc
xchg
loope
outsl
in
adc
imul
cmp
mov
movsb
iret
adc
mov
rorb
push
sbb
ja
int3
cmpsb
ja
add
cmp
or
lret
xchg
add
mov
movl
aaa
gs
insb
xor
pop
clc
aaa
adcb
pop
add
ljmp
hlt
xchg
fisttps
fisttps
or
dec
inc
mov
enter
or
push
xor
shr
ffree
int
adc
sbb
rcr
repnz
mov
addr16
test
inc
out
je
es
out
mov
scas
lds
xor
sbb
faddl
imul
xchg
lock
cmp
xor
rcrl
les
mov
outsb
clc
lret
dec
sub
xchg
add
cld
jge
sbb
sub
push
mov
xchg
insb
dec
push
lret
je
pop
and
test
mov
inc
das
daa
cmpsl
ret
gs
dec
mov
pop
jle
xor
popw
and
cmpsl
pop
mov
lret
push
xor
popf
push
imul
aas
adc
and
sbb
mov
and
std
cmp
imul
loopne
inc
mov
sbb
pop
cmp
cmp
vcvtss2sd
xor
je
clc
jmp
cld
xchg
push
push
sti
dec
ds
cmpsb
js
jge
mov
xchg
sub
mov
add
xchg
cmp
push
pop
andl
pop
xchg
push
xchg
cmpsl
dec
stos
lds
call
aaa
mov
cld
js
test
jmp
and
and
out
pop
xor
mov
andl
pop
add
bound
iret
push
mov
in
push
xor
push
leave
add
mov
pop
sub
add
imul
add
mov
test
aas
aam
notb
xor
adc
push
mov
jns
sti
xchg
std
push
popf
jmp
sti
adc
sbb
dec
int
mov
loop
lahf
xchg
in
and
adc
leave
lods
dec
pop
mov
jo
les
es
jmp
inc
or
xor
fs
cmp
ret
mov
sti
cmp
pop
push
vmovd
mov
insl
mov
jne
dec
sbb
push
nop
aad
std
pushf
xchg
cmpb
adcb
in
dec
jge
cmp
push
imul
mov
xor
stos
clc
or
gs
repz
jmp
pop
xor
mov
fnstsw
aas
pop
sarl
pop
shlb
pop
add
push
xchg
clc
mov
out
push
movsb
aam
rcll
icebp
test
in
mov
mov
das
cli
ja
xor
movsl
xor
icebp
rorb
push
mov
mov
sbb
out
mov
push
adc
cmpsl
ss
xchg
cmp
mov
push
les
int
adc
jae
lds
adc
mov
dec
mov
jecxz
xchg
inc
out
mov
pushf
scas
fiadds
idiv
sbb
xor
jmp
jo
arpl
call
int
mov
xor
and
xchg
push
sbb
pop
xor
dec
push
call
sub
call
imul
ss
add
aad
or
mov
sub
test
push
xchg
arpl
pop
aaa
shrl
in
jmp
ret
and
or
sub
ja
out
dec
out
cmpsb
dec
mov
fwait
cmpsb
test
mov
jl
das
in
push
hlt
aad
dec
adc
movsl
cmp
jnp
into
dec
cmpsb
fstpl
mov
xlat
jne
mov
insl
outsl
push
lds
and
push
lcall
and
push
loope,pn
movsl
jmp
sarl
and
add
out
xor
cmpsl
add
clc
pop
and
mov
mov
xchg
sti
mov
ds
iret
mov
cmpsl
inc
cmpsb
adc
pop
xor
js
roll
das
arpl
jns
adc
jge
insb
mov
pop
and
cmp
inc
popa
mov
pop
pop
mov
test
scas
cmp
fnsave
std
cmp
push
ret
loope
xor
lds
cmpsb
in
insl
imul
fdivrl
pop
adc
cmpsl
shl
sbbl
mull
xor
cltd
adc
out
or
lret
mov
add
fildll
fisubrl
dec
inc
and
roll
data16
adc
mov
jle
je
aam
adc
popa
mov
fwait
aaa
xor
inc
xor
jo
fistl
rcll
sub
icebp
or
mov
aas
rorb
stos
loop
inc
mov
andl
orl
sbbl
xor
xor
inc
xor
jecxz
sarb
test
repz
cmovns
push
outsl
mov
hlt
xchg
mov
mov
xchg
into
iret
jne
das
cld
cmpsl
inc
stc
push
hlt
and
push
adc
hlt
jmp
mov
jbe
mov
jmp
mov
test
inc
loopne
aaa
add
push
jns
jg
movsb
inc
mov
or
repnz
cs
test
pusha
push
dec
insb
inc
test
in
dec
sahf
call
inc
mov
mov
mov
jbe
xor
inc
or
xor
lahf
stos
push
fs
cmp
arpl
add
xor
lods
out
cmp
xlat
pop
adc
mov
in
mov
or
ret
fscale
adc
xor
mov
leave
or
jno
pop
mov
mov
test
cmpsl
bound
stos
mov
mov
mov
mov
pop
movsl
pop
rorb
jg
loope
jne
dec
stos
cmp
dec
adc
push
test
lahf
sbb
jns
shrb
jp
fdiv
imul
push
xor
mov
jno
das
hlt
mov
pusha
push
sbb
sbb
sbb
sbb
push
jo
popf
stos
xor
mov
mov
fisttps
inc
jp
mov
pop
hlt
in
stc
and
imul
pop
and
out
and
pop
fs
cld
mov
imul
mov
sub
jb
aam
cmp
insb
out
sarl
cmp
bound
adc
add
mov
and
fcompl
test
add
pop
cmc
iret
mov
jmp
xchg
sahf
inc
cmp
push
lcall
mov
mov
pop
cld
mov
into
sbb
std
inc
test
rol
das
push
or
mov
ljmp
scas
pop
dec
ret
cwtl
mov
inc
shlb
ret
jb
ja
adc
je
add
push
fbstp
fdivr
incb
ss
mov
das
orl
ja
jno
mov
and
jae
or
cs
sbb
iret
ds
clc
pop
adcb
inc
stos
push
cli
xlat
lret
xchg
sbb
clc
mov
ja
rolb
adc
test
mov
inc
aaa
pop
test
ret
insl
hlt
stos
push
fnstenv
ficomps
jmp
fsubl
imul
add
fisubrs
popa
ljmp
cmpsb
xlat
mov
push
mov
movsl
loopne
popa
fldcw
pushf
add
call
mov
adc
leave
xchg
lret
nop
jne
ss
jb
mov
fbld
lret
ret
sbb
ret
inc
int3
push
mov
push
repnz
mov
and
ja
push
arpl
lcall
fs
inc
and
cmpsl
call
imul
jl
adc
int3
sbb
insb
cmpl
push
adc
lret
xor
in
addr16
inc
shll
mov
xchg
movsl
mov
jbe
mov
dec
dec
lds
adc
push
mov
mov
pop
mov
mov
or
inc
sbbb
xor
xor
push
lods
ja
test
jge,pt
das
int
stc
mov
xchg
filds
xchg
dec
arpl
loop
and
repz
rcrl
stc
in
adc
aam
dec
sarl
push
push
adc
rorb
dec
mov
gs
rcl
data16
push
dec
adcb
pushf
xchg
dec
inc
idivl
aam
add
sbb
mov
and
clc
nop
pop
lods
aad
cwtl
test
lret
sarb
out
jo
int3
push
ds
fmul
mov
or
pop
inc
gs
jo
les
or
je
xchg
cmp
sahf
addr16
pop
sahf
addr16
imul
icebp
jl
sub
cmpsl
cmp
rcrb
out
test
rorl
push
in
adc
dec
scas
imul
sub
cmp
inc
adc
pop
sbb
or
aad
add
jecxz
clc
scas
xor
jno
hlt
push
call
push
andb
loop
jne
xor
mov
mov
adc
cs
xor
and
mov
enter
push
jno
push
mov
ljmp
lahf
mov
ss
arpl
je
insb
push
pop
stc
add
iret
leave
cli
leave
jbe
pop
pop
repz
inc
data16
ret
mov
stos
mov
jecxz
sahf
push
jbe
mov
or
ds
sahf
jl
mov
pop
int
sub
out
or
call
dec
stos
dec
xchg
sbb
and
push
pop
push
cs
lds
movb
add
mov
xor
mov
add
fmull
popf
in
sbb
dec
dec
mov
pusha
popa
mov
scas
stc
loope
aad
lahf
mov
sbb
jmp
movsb
cmp
xchg
xlat
mov
add
cmp
sbb
cli
fisubl
out
js
pop
sub
adc
add
jmp
inc
lds
pop
xor
in
xor
movb
jg
lret
sbb
std
cmp
mov
je
scas
xor
xlat
enter
cwtl
cmp
push
je
fdivrl
xchg
insb
mov
std
jmp
xchg
lahf
and
fmulp
imul
xchg
cli
inc
mov
jnp
iret
orb
xlat
shlb
add
les
sarb
roll
inc
xor
and
xor
jg
and
test
mov
pop
lret
mov
rclb
repnz
mov
fnstenv
pop
lahf
pop
jp
sbb
xchg
popa
xchg
and
xchg
test
iret
sti
ret
push
and
js
subb
lods
xchg
aam
cltd
xchg
or
sub
hlt
in
fcomp
add
cmp
in
xchg
fcoms
sbb
push
mov
inc
daa
xchg
lds
push
enter
stos
sbbb
push
ljmp
nop
mov
loop
inc
clc
mov
ds
mov
xor
arpl
inc
sub
imul
jae
xor
cmp
shl
sub
mov
and
arpl
ret
les
dec
stos
xchg
dec
inc
cli
pop
shrl
jg
ljmp
inc
loop
pop
std
mov
jo
sbb
cli
sahf
andb
icebp
test
cmp
jne
loopne
movsl
pushf
inc
sub
pop
xchg
jmp
das
push
push
repz
cmp
pop
and
aad
sar
mov
sarb
sub
popa
insb
rorb
jbe
push
stos
cs
lcall
add
loope
cmpsb
stos
fnstcw
test
jp
fs
and
push
push
dec
das
jae
push
ja
clc
fmull
imul
mov
xchg
lds
icebp
jecxz
jnp
fildll
xchg
stos
pop
mov
cmpsb
pop
inc
or
push
ret
and
bound
stc
out
xor
jge
lock
imul
mov
inc
mov
push
bound
or
sub
sti
adc
push
cmp
pop
or
jae
lret
stos
mov
pop
sbb
stc
mov
scas
hlt
jmp
pop
sbb
mov
pop
je
jge
ja
loope
jns
shrl
fwait
js
mov
xor
sbb
pop
push
pop
rorl
or
movsb
jge
cwtl
jg
cmp
push
arpl
enter
insl
mov
stc
push
mov
adc
cltd
subl
and
push
xor
inc
xchg
mov
jo
adc
xor
mov
int
out
xchg
inc
or
cmp
jmp
data16
andb
dec
push
xchg
jmp
xor
iret
out
sub
test
sub
dec
clc
push
jmp
js
int
sbb
and
sti
in
cmp
loopne
xor
test
sti
xor
add
cmp
ljmp
adc
into
dec
mov
mov
sub
test
aam
lcall
mov
popf
jbe
sbb
in
cltd
dec
xchg
dec
xor
mov
lods
and
xchg
inc
daa
sub
loopne
sub
mov
loopne
jmp
inc
push
mov
add
test
rcr
mov
add
sbb
inc
fwait
mov
cmp
aas
daa
fsts
add
fld
cld
stos
and
fstpl
inc
es
push
loop
jmp
jae
mov
sub
clc
adc
inc
push
or
push
cs
roll
sub
mov
add
sbb
jge
push
mov
icebp
mov
mov
pop
ds
pop
jg
fisttpll
jle
repnz
clc
push
insl
popf
and
mov
testb
and
mov
in
popa
mov
mov
pushl
insl
sbb
je
push
inc
sti
test
in
imul
sbb
push
or
fimuls
loope
cmp
pop
mov
dec
shl
sub
fs
mov
lds
mov
mov
mov
pop
cld
int3
shlb
test
mov
pop
xchg
cld
inc
jo
xor
jb
inc
cmp
addr16
sbb
and
cmp
lds
mov
sub
sub
mov
pop
sbb
xor
ljmp
icebp
mov
aaa
xchg
cmp
into
daa
cmp
xor
mov
mov
stos
and
movsl
xor
and
mov
xor
xchg
into
fiaddl
lock
jle
out
mov
mov
sar
mov
insb
cld
adc
sub
movsl
loope
jecxz
mov
or
add
in
test
mov
jmp
xchg
adc
loop
push
clc
cmp
adc
mov
out
mov
add
dec
push
mov
pop
jno
jmp
mov
inc
shr
ficomps
mov
icebp
testl
jl
and
add
fnstenv
into
push
sub
adc
cld
push
jno
aas
not
sub
pop
push
cmp
xchg
xchg
adc
cmp
rorl
ficompl
inc
outsb
ljmp
and
add
xchg
cmpsl
les
xor
lcall
and
push
popf
out
adc
jns
sbb
pushf
xchg
data16
jbe
fnstcw
dec
pop
xchg
lret
push
adc
pusha
push
mov
xchg
xor
lds
adc
cwtl
int
cmp
fcmovb
and
jge
mov
xchg
es
aaa
sti
pop
sub
or
sahf
push
inc
imul
imul
and
btl
pop
ror
mov
inc
push
inc
inc
sbb
or
xor
ljmp
sbb
cmp
test
les
jl
cltd
add
cmp
icebp
lcall
sbb
cmpsl
xor
lret
add
jge
xor
iret
aam
or
fxch
mov
cmpb
sti
mov
cmp
xchg
mov
jne
inc
push
mov
int3
loop
int
les
cmpsb
mov
dec
or
cltd
aas
andl
cmp
in
push
loope
pop
std
sub
mov
xorb
pusha
cmc
lret
xor
mov
inc
enter
push
push
mov
sbb
add
mov
mov
movsl
out
jecxz
cld
ret
in
test
jbe
out
cmp
mov
dec
jge
mov
or
and
xor
or
pop
lret
cmp
xchg
out
cmp
push
adc
fldl
mov
pop
mov
xchg
shrb
or
scas
or
add
add
lock
dec
pop
pusha
cmp
aas
jecxz
fs
mov
pop
mov
js
ds
sub
iret
pop
xor
ffreep
inc
and
xor
pop
in
xchg
icebp
cmpsb
aas
hlt
cmpsl
jns
inc
sahf
ret
inc
cmc
das
pop
inc
push
stc
jo
sub
and
fcom
jecxz
shrb
clc
push
popa
repnz
rcrb
pop
shlb
mov
pop
xlat
fmull
int3
jne
hlt
push
ret
xlat
in
add
int3
push
ss
sub
sbb
xchg
adc
lret
or
icebp
inc
mov
inc
iret
cs
push
hlt
or
dec
jbe
xchg
int3
cmc
test
push
xchg
push
push
xchg
ja
xchg
jmp
test
xlat
lods
push
and
cwtl
test
test
jno
xchg
jl
and
sarb
jge
in
aas
rclb
or
mov
push
pushf
mov
push
mull
cli
xchg
ret
mov
pop
and
pop
and
mov
push
sbb
xchg
scas
insl
rol
xor
cwtl
sub
inc
cmp
pop
stos
mov
cwtl
test
and
push
cmc
push
push
mov
arpl
imul
add
imul
or
inc
leave
sahf
scas
cmp
gs
or
pop
add
adc
gs
in
les
push
testb
push
lock
lods
add
scas
icebp
fadd
pop
out
inc
sub
mov
sbb
lahf
mov
fsub
add
dec
mov
jg
out
push
xor
mov
clc
mov
movswl
daa
mov
inc
daa
add
dec
lods
or
repz
sbb
hlt
jge
stc
adc
cld
mov
mov
or
insb
fiadds
or
cmpsb
dec
cmc
adc
sti
cs
scas
pop
ret
mov
cmpsb
popf
xchg
loope
and
repnz
subb
adc
out
sub
gs
jge
xchg
inc
iret
inc
pop
mov
mov
pop
arpl
fisttpll
addr16
bound
fcoml
sbb
lret
inc
inc
arpl
and
aam
inc
xchg
mov
gs
and
push
mov
adc
mov
push
repz
adc
jmp
push
mov
hlt
test
pushf
movsl
or
test
inc
popf
jecxz
repz
mov
mov
hlt
xor
inc
or
lods
ret
mov
inc
adc
daa
or
aas
out
aad
imul
dec
into
add
pop
cmp
pop
sbb
mov
es
jecxz
push
sbb
dec
fwait
test
stos
jmp
cmp
mov
dec
lock
pop
fwait
mov
cmpsl
mov
aas
aad
mov
jmp
out
enter
cli
jl
cmpsl
dec
cmp
or
pushf
repnz
pop
push
sbb
rcrb
repnz
pop
call
hlt
cmpsb
mov
sub
enter
call
out
ret
pop
jmp
push
cmc
and
mov
cmc
push
sub
aaa
pop
xlat
in
in
push
push
jmp
out
cs
scas
inc
ds
pop
ss
pop
sahf
bswap
les
mov
dec
adc
lods
xor
inc
sub
and
xor
lret
imul
adc
push
sub
mov
push
outsl
in
cld
sbb
xchg
rcrb
mov
mov
inc
notl
push
push
sti
fcmovnb
pusha
pop
out
adc
fbld
push
hlt
push
rorl
insb
mov
add
or
mov
cmc
dec
fsubr
mov
sbb
fisubrs
inc
outsl
mov
xor
xor
je
mov
sub
stos
arpl
or
ljmp
out
mov
call
xor
push
dec
inc
sbb
dec
or
rolb
mov
push
add
jge
fsubl
ret
mov
pop
add
int
popa
xchg
pop
pop
push
test
xchg
subl
jne
call
inc
adc
in
jno
mov
pop
cmpl
fimull
jnp
aad
pop
pop
arpl
ds
or
jp
xchg
inc
testl
pop
imul
adc
das
addr16
fwait
inc
add
mov
sti
out
xlat
mov
mov
jmp
push
lods
or
sbb
gs
lods
dec
inc
and
dec
dec
xchg
lods
lds
mov
fdivs
sub
add
test
lahf
stos
and
jp
nop
jb
addl
adc
repz
daa
add
add
cmpsl
addr16
mov
fnsetpm(287
insl
mov
les
stos
jb
cs
test
fsubrs
arpl
aaa
lret
cld
rol
fcomps
cmpsb
loop
bound
and
dec
jns
faddl
ret
jp
test
sbb
jecxz
mov
sbb
mov
cmpsl
hlt
xchg
mov
sub
movsb
fsubl
push
mov
lret
cs
sbb
dec
dec
push
xchg
mov
jmp
or
inc
or
jp
in
fstps
sbb
jge
dec
test
xor
xchg
cmp
sub
pop
int
adcb
or
leave
fwait
cmp
add
popa
lock
adc
mov
dec
sbb
and
stos
adc
aam
sub
enter
shr
pop
and
push
push
add
popf
ljmp
xchg
daa
ss
filds
mov
std
sbb
mov
jbe
insl
or
out
and
test
xor
add
or
add
xor
sbb
xor
or
add
cmp
lret
xor
pop
in
lds
out
jo
push
cmc
clc
jle
mov
inc
xor
xchg
shrb
jne
mov
mov
sbb
mov
jno
and
mov
push
inc
iret
pop
int3
push
mov
mov
stos
or
push
cmp
test
sbb
jp
and
dec
sub
daa
sahf
dec
push
xchg
mov
push
push
push
idivl
sahf
mov
sbb
cmp
xor
pop
push
lea
mov
cmp
repnz
es
adc
cmp
dec
push
or
sahf
or
mov
inc
xor
mov
mov
push
and
rcrb
cmp
aad
or
xlat
adcb
mov
int3
pop
call
push
shrb
pop
cmp
popf
outsl
aaa
xchg
mov
in
jp
push
xor
jae
mov
pop
or
sbb
dec
sahf
sub
dec
loope
and
mov
imul
int
popa
inc
ds
into
inc
ja
cmp
dec
push
jae
inc
add
push
mov
das
mov
xchg
ficoml
lahf
outsb
insl
es
in
ljmp
sub
dec
inc
cmc
jne
pop
adc
xor
cltd
das
push
add
adc
test
in
ret
push
sar
cld
mov
push
outsl
faddl
in
dec
push
pop
insb
std
sbb
adc
mov
adc
insb
popa
pop
xchg
pop
add
enter
sbb
mov
xor
dec
xchg
filds
lods
xor
insb
xchg
pop
inc
in
inc
enter
push
inc
xchg
jecxz
cmp
cmp
lods
aaa
dec
ficompl
movsb
sub
orl
es
xor
push
push
sbb
lds
popf
xor
cmpsb
and
scas
xchg
in
or
inc
push
popl
sbb
mov
mov
dec
add
enter
push
insl
ret
lods
and
push
xor
sbb
jmp
sbb
mov
adc
or
and
pop
push
loopne
scas
mov
lock
or
std
sub
icebp
and
pop
hlt
sub
outsb
cmpsb
adc
sbb
adc
in
lds
xchg
inc
ret
pop
pop
sbbl
arpl
xor
pop
pop
idivb
adc
nop
dec
insb
ret
mov
sbb
leave
loop
out
out
jmp
mov
bound
cld
cs
in
mov
pop
testb
mov
and
mov
in
cmpsb
ss
xlat
sub
iret
pop
int3
repnz
ss
lret
inc
repnz
add
data16
sahf
jae
subl
jmp
xor
loop
frstor
je
ds
mov
cmpb
and
or
fs
mov
adc
mov
push
std
shll
jg
repz
loopne
jo
lcall
xor
sub
add
xchg
dec
insb
jae
or
mov
jecxz
testl
cmp
bsr
jbe
ja
inc
xor
xor
pushf
test
xchg
clc
scas
pushf
and
xor
fisttpll
fwait
icebp
mov
fwait
mov
inc
xchg
cmp
sub
mov
push
or
mov
notl
insl
xchg
repz
popf
aas
dec
mov
inc
addr16
rorl
mov
xor
popf
jbe
jbe
and
adc
xchg
outsl
loopne
jo
xchg
cli
rcrl
dec
sarb
xchg
sahf
pop
pop
pushf
sub
sar
push
sbb
das
xchg
into
jge
lods
movsb
adc
push
ja
xor
addr16
push
dec
nop
or
movsl
clc
outsb
mov
mov
test
push
cmpsl
outsl
add
sbb
mov
jae
mov
gs
mov
jle
ret
jno
les
add
inc
outsb
jl
push
pop
fwait
daa
pop
pop
push
pop
jo
loop
dec
jo
insl
dec
lds
lret
sbb
aaa
aaa
lret
xchg
sub
pop
mov
adc
adc
xor
sub
cmc
pusha
fisubs
xlat
xchg
movsb
mov
adc
jl
mov
fcomps
divl
sahf
jae
mov
shll
iret
and
mov
cmp
jl
rcrl
cmpsb
mov
sub
or
rorl
gs
cmpsb
rcrb
add
jp
daa
sub
cmpsl
sahf
dec
test
mov
subb
add
inc
popf
std
cmp
jecxz
push
sbb
lods
ja
xchg
sub
scas
pop
mov
gs
jmp
push
inc
inc
data16
push
les
ds
sub
mov
lods
mov
int3
sub
inc
or
pop
jb
cmp
addr16
in
adc
jae
fadds
popf
xchg
sub
sub
add
jo
outsb
subl
out
or
sbb
pop
popa
int
lock
fnstcw
inc
sbb
lahf
loopne
jae
stc
loopne
push
push
mov
fldenv
jbe
push
loope
jle
adc
shlb
add
jge
cs
sarb
add
lods
adc
imul
xor
mov
push
icebp
sahf
add
ds
lahf
pop
je
rcrb
out
push
hlt
jmp
inc
js
push
push
pop
insl
fldlg2
xor
pop
incb
test
dec
mov
cltd
fs
add
or
push
mov
and
mov
sbb
push
lcall
adc
mov
std
add
push
or
jae
pushf
pop
push
aad
sti
fnstsw
jo
stc
popf
sti
or
jnp
pop
fwait
cmpsl
xchg
lds
or
dec
and
fs
daa
sub
xor
push
push
add
jg
aaa
jne
repz
lods
push
pusha
fs
dec
mov
mov
jge
std
in
lods
cmp
or
mov
scas
cs
and
cltd
or
pop
int
pop
sub
lret
mov
or
fsts
ficoml
int3
aaa
fwait
addr16
movsl
pop
inc
test
aaa
lock
inc
jns
adc
lods
sub
and
nop
cmpsb
lcall
jno
mov
push
jp
mov
and
movsb
jo
add
pop
mov
cmp
sub
or
popa
pop
repnz
xorl
add
lock
inc
sbb
push
dec
mov
cmp
and
pushf
inc
adc
das
cmpsl
inc
inc
dec
outsb
xchg
sbbl
push
mov
pop
xor
stc
pop
les
push
cmp
or
mov
je
lods
fbld
push
lods
pop
xor
aaa
add
cltd
add
popa
int
les
mov
fs
sub
test
dec
push
or
mov
mov
xchg
popf
mov
insl
pop
lea
ss
add
xchg
sbbl
or
xchg
and
add
roll
mov
pusha
cmp
fstl
loope
cmp
das
std
insb
testb
inc
mov
and
dec
insl
test
jge
in
cs
mov
fwait
or
out
in
cmpsb
mov
push
shlb
sahf
adc
ljmp
stos
sti
aas
sahf
add
hlt
cwtl
repnz
mov
dec
test
cltd
inc
adcl
mov
leave
loop
mov
dec
and
sub
movsl
xor
pop
and
ret
aam
vrsqrt14ps
sub
sbb
xor
fstl
add
pop
scas
inc
lea
push
mov
imul
movsb
dec
add
add
sbb
jle
dec
sub
and
jbe
pop
pop
mov
daa
cmp
fsqrt
or
outsl
xor
lahf
outsl
pop
int3
pusha
cmc
sahf
cmp
les
fsubs
clc
fcmovnb
ret
or
addl
out
out
imulb
jge
xchg
xchg
scas
orl
xor
push
adc
mov
stc
call
aas
fmulp
inc
xchg
das
ja
sbb
fs
sbb
and
ret
daa
in
mov
sti
xor
mov
loop
int3
jl
mov
es
cmpsb
outsl
jae
cmp
or
dec
sub
or
loopne
aam
mov
es
iret
adc
lret
loope
pop
enter
dec
xor
xchg
or
push
ss
mov
push
aad
mov
in
cmp
pop
lret
inc
add
cmpsb
out
xor
cmp
push
inc
mov
orl
lret
repz
cltd
lds
ja
fsts
sbb
xchg
popa
cmp
inc
loope
cmp
push
jae
dec
xchg
stos
adc
mov
pop
mov
roll
hlt
rclb
push
addr16
test
dec
test
sub
push
xor
jmp
adc
dec
jmp
sub
add
.byte
.byte
outsl
sbb
add
or
sbb
mov
pop
xchg
testl
or
jo
mov
xchg
insl
adc
outsb
and
mov
pusha
sbb
int3
add
nop
incl
std
test
into
pop
push
aas
lods
test
fistl
out
sbb
adc
adc
imul
add
dec
int3
pxor
stc
xchg
stos
notl
mov
and
mov
push
notb
into
xchg
mov
cli
mov
push
jo
mov
ret
std
xchg
sbb
mov
pop
mov
and
cmp
pop
fldcw
std
shlb
bound
pop
in
orl
sbb
fcoms
add
rolb
adc
cwtl
push
ds
daa
fildll
fwait
dec
jg
out
xchg
loop
bound
or
lcall
pusha
dec
push
jecxz
cltd
testb
push
test
jo
mov
xchg
mov
pop
jg
cmp
jle
adc
and
ja
cli
in
lahf
sarl
ret
movsl
and
or
pop
push
mov
psrld
jae
mov
bound
push
daa
dec
xchg
pop
pop
xor
jecxz
push
pop
push
inc
testl
iret
lds
mov
idivl
or
clc
ja
adc
ret
mov
hlt
ret
inc
ja
or
nop
hlt
clc
pop
lret
xchg
dec
add
rolb
jne
mov
cltd
dec
inc
movsl
and
sarl
mov
les
test
xor
mov
es
sti
push
fisttpll
subb
sbb
jg
aas
push
pop
xchg
inc
mov
mov
push
ja
mov
aam
ljmp
or
fstl
jns
pusha
adc
sub
daa
xor
into
out
push
imul
and
xchg
lds
xchg
sbb
push
adc
push
fcmovb
das
dec
jl
jno
pop
incl
ret
into
inc
push
orb
pop
insb
xor
mov
ss
sub
test
jecxz
cmpsl
or
xor
mov
and
jmp
xchg
sbb
adc
or
push
aas
inc
stc
cmp
movsl
add
loopne
xchg
xor
cmp
data16
pop
pushf
push
repz
mov
pop
sbb
dec
mov
cld
cli
stos
js
cmp
jle
outsl
jle
scas
jne
dec
pop
sub
rcrl
xor
sbb
je
fisubs
aas
push
adc
fidivs
inc
push
adc
mov
jle
jae
sbb
jmp
xor
int
fsubrl
xor
scas
mov
inc
inc
dec
mov
sarl
sbb
pop
pop
mov
ret
aad
testb
imul
fsave
pusha
ret
pop
jne
xor
push
dec
cmpsl
cltd
scas
push
cmp
dec
lret
popa
push
ds
fstpl
pop
dec
jnp
inc
fucomip
and
push
sbb
pusha
jb
push
jmp
scas
sub
xchg
sbb
in
nop
outsl
and
jp
or
loop
mov
xor
ret
push
insb
jmp
mov
lahf
mov
fiadds
imul
scas
out
or
sub
mov
and
clc
pop
rcll
fdivrp
ds
jne
ja
sub
jl
in
xor
cmpsb
lret
jo
jbe
inc
lcall
fwait
ss
pushf
pop
xor
pop
inc
pushf
cwtl
push
ss
mov
les
xchg
imul
push
stos
mov
movsl
daa
mov
or
sub
andl
jle
jb
ds
sub
mov
pop
rorl
jg
inc
cmp
and
adc
cltd
notl
mov
pop
mov
movsb
xlat
or
cli
icebp
add
xchg
sbb
sub
xchg
in
cli
into
jl
mov
test
cld
mov
jmp
xor
xchg
imull
das
xor
mov
inc
jnp
adc
push
aaa
lea
popf
in
or
push
sahf
loop
mov
pushf
cmp
lret
roll
stos
and
ret
pop
push
dec
scas
cmp
aas
ss
lret
ss
xchg
int3
cmpsl
pop
mov
xchg
xchg
int3
push
mov
jb
repnz
push
inc
lods
icebp
icebp
adc
imul
xchg
enter
ja
mull
call
or
sub
jle
xchg
fwait
arpl
push
xchg
sbb
lods
aam
testb
mov
fs
cmp
loopne
shr
js
adc
pop
mov
inc
mov
orl
xchg
sti
mov
mov
daa
test
push
jp
add
pushf
js
es
ds
jno
es
ret
enter
push
sub
xor
lcall
sub
int3
test
data16
jne
cwtl
and
add
in
scas
xor
popf
es
add
les
adc
pop
stos
lea
sbb
gs
cmp
divl
data16
cmp
clc
jb
test
arpl
lahf
xor
jle
sbbb
pop
dec
jmp
jecxz
xlat
adc
ss
mov
xor
adc
adc
adc
lret
test
xor
mov
pop
aam
fs
sbb
daa
inc
sub
xchg
fwait
cmpsb
std
ss
sub
inc
test
sbb
add
dec
mov
or
fdiv
push
arpl
sahf
push
mov
mov
mov
mov
in
pop
in
in
in
jmp
cltd
or
and
iret
imul
cmc
cmp
stos
scas
popa
cli
mov
out
sub
cld
dec
xchg
icebp
pop
jae
add
call
jbe
jp
push
ss
repz
cmpsl
scas
stos
add
clc
out
xor
jno
dec
adc
bound
adc
xchg
std
inc
repz
mov
dec
push
int
sub
cmp
dec
nopl
push
cld
xorb
push
jecxz
cmp
test
jl
sub
int3
and
xor
push
icebp
icebp
ds
dec
iret
mov
mov
jbe
jo
clc
out
mov
jle
cmp
xor
out
cmp
div
mov
adc
insl
bound
sub
ficomps
jae
add
push
movsb
inc
mov
mov
loopne
or
mov
insl
orps
jne
int3
mov
arpl
out
pop
aaa
sahf
sub
lock
push
dec
ds
cmp
pminub
jmp
mov
or
aad
bnd
imul
popf
sbb
nop
and
loopne
or
add
add
inc
sar
rclb
sahf
jbe
aam
insb
or
loop
ret
fiadds
into
rorl
test
cltd
aaa
mov
mov
lock
sti
mov
lods
xlat
notl
xor
mov
push
sub
cmp
movsb
xor
sti
adc
nopl
hlt
pop
pusha
test
icebp
movsl
inc
out
fistpll
dec
lahf
xlat
loop
and
push
sub
pop
jne
dec
cli
outsb
lods
sbb
aas
mov
shlb
movsb
cltd
mov
xchg
mov
into
xlat
pop
lods
cmp
sub
sub
or
insb
cmp
les
jge
pop
add
in
dec
mov
in
jl
ss
out
or
pop
test
scas
in
cmpl
or
jecxz
movsb
in
cmp
hlt
testb
mov
dec
sub
repz
fcmovnb
repnz
out
push
lret
scas
dec
pop
rolb
rcr
movsl
jmp
mov
in
inc
movsb
dec
mov
or
or
push
iret
imul
mov
jl
imul
loop
and
jmp
xlat
mov
pusha
arpl
je
fsts
sub
sub
jl
scas
dec
dec
sbb
stos
shll
xor
cmp
out
mov
inc
andl
add
sub
movsl
mov
push
add
cmp
gs
cmp
or
mov
imul
scas
push
push
test
je
insb
sahf
adc
mov
fdivl
hlt
mov
dec
adc
mov
leave
jno
jns
gs
movsl
mov
pop
xchg
gs
rcpps
sbb
xchg
imul
dec
cld
leave
push
push
shrb
cmpsb
lret
outsl
jg
pop
test
mov
call
jnp
cld
cltd
xchg
aaa
xor
outsl
cmp
pop
push
imul
mov
mov
adc
hlt
cmp
lret
in
or
xor
test
test
ja
inc
repnz
lret
scas
out
push
add
mov
or
je
leave
daa
sbb
jmp
mov
out
cmp
xchg
push
sbb
jno
pop
jne
mov
notl
mov
mov
into
sbb
sub
divb
adc
loope
jo
or
call
popa
sub
xchg
stc
push
add
stos
leave
sbbl
mov
shrl
sub
pop
insl
and
dec
and
pop
mov
add
dec
filds
and
mov
pop
les
or
movsb
in
or
out
mov
rorb
xor
and
mov
imul
dec
cmpsb
mov
in
pop
mov
or
daa
cmp
sbb
sub
xchg
mov
shlb
icebp
ret
add
xchg
aaa
push
jecxz
out
dec
or
pop
int
jg
sbb
jb
jno
dec
jecxz
and
clc
lods
sub
or
mov
xchg
dec
mov
mov
mov
mov
jp
inc
jge
shlb
add
ds
jle
pop
adc
xchg
fsubrs
pop
mov
mov
in
lret
jo
cwtl
jl
fcomps
xchg
das
adc
in
inc
pop
enter
xchg
cmp
shr
pop
cmp
hlt
jp
in
daa
jmp
sbb
cmp
mov
cli
or
cld
jno
inc
aaa
and
jge
cmpsb
imul
mov
push
xor
push
jp
mov
movsb
stos
rcll
fcoml
xor
cld
mov
jns
cmc
shrb
xchg
xlat
dec
mov
xchg
in
insl
aam
inc
pop
xor
rolb
ljmp
dec
cwtl
mov
outsb
pop
mov
outsb
ret
inc
movsb
jmp
add
fdivr
insl
dec
cmp
and
jg
cmp
push
jmp
push
imul
mov
xor
cmpsl
or
mov
cmp
pushf
insb
jge
push
pusha
imul
cmpsl
xchg
jns
in
out
sbb
mov
daa
ficompl
cmp
test
shlb
fidivrs
lret
sahf
jnp
cmp
lds
push
cmp
xor
sahf
mov
fsubp
repnz
or
movsl
xor
mov
dec
stos
imul
sbb
lret
cmp
cmp
cmpsb
mov
jle
gs
fnstenv
inc
mov
jg
int3
cwtl
bound
sub
cli
sbb
xchg
xor
mov
cmp
xchg
and
and
fstpl
shlb
in
cwtl
xor
scas
pop
shlb
ret
je
pop
das
xor
lret
mov
daa
aad
arpl
push
and
jnp
and
lods
mov
and
push
push
fdivl
inc
ret
sbb
fwait
loope
add
icebp
jns
sbb
jae
cmpsl
adc
cltd
test
dec
and
jl
mov
fs
add
mov
lcall
std
adc
rorl
int
mov
aaa
sbb
add
in
add
dec
mov
loope
xlat
fsincos
lea
sub
aam
dec
lea
cmc
arpl
jmp
sbb
setb
push
das
arpl
ja
nop
cmpsb
ds
and
popf
or
dec
xor
lret
add
mov
sub
pusha
sbb
push
les
or
daa
addb
push
or
push
dec
loop
add
xchg
in
fwait
loope
sub
test
xchg
lahf
pop
int3
jae
jnp
push
aad
fsubrs
inc
pop
ds
dec
aaa
pusha
ja
je
cmc
int3
scas
sbb
sbb
fdivs
jbe
mov
xchg
popa
mov
lods
mov
mov
dec
xor
adc
push
or
push
out
fadds
ret
movsl
ljmp
mov
lcall
xchg
and
mov
int3
aam
xor
out
idivb
inc
mov
pushf
test
fs
push
popa
repnz
push
cmpsb
xor
sbb
cmp
lahf
adc
icebp
sbb
lea
pushf
cmc
push
lods
imul
jbe
sbb
or
and
lods
test
loope
cmp
das
clc
jmp
inc
cmc
adc
outsl
inc
sahf
xchg
jo
test
fisttpll
jp
rorb
sahf
out
mov
xchg
data16
jno
inc
pusha
sbbl
mov
xchg
sbbl
scas
mov
mov
xchg
push
cwtl
dec
pushf
adc
sub
lods
or
popf
insl
leave
mov
or
cmc
insb
fldl
mov
rcll
pop
xchg
mov
add
mov
in
cmpsb
jmp
or
scas
repz
jnp
arpl
ds
imul
dec
testl
or
imul
int3
sub
mov
mov
ja
iret
call
loop
or
jle
xchg
pushf
mov
sbb
mov
mov
fimuls
sub
std
mov
push
jp
cmp
sub
cmp
imull
inc
les
push
pop
dec
out
movsb
cmpsl
stos
fildll
lds
mov
test
ja
lcall
mov
or
out
jp
xor
imul
mov
push
xchg
inc
sbb
mov
call
mov
mov
mov
lret
xchg
sahf
lds
mov
negb
rcll
fsub
fstpt
cld
mov
pop
scas
subb
ljmp
fs
ja
cwtl
push
clc
push
pop
out
dec
push
mov
pushf
lret
xchg
or
lahf
pop
and
pop
xchg
jb
cltd
and
mov
sub
bound
push
inc
rcrl
aam
adc
or
cmc
or
sub
sbb
jmp
fisubrs
and
or
pop
movsl
mov
sub
xor
xor
mov
xchg
les
pop
push
push
inc
clc
iret
adc
add
and
dec
dec
mov
fcom
mov
inc
mov
xor
and
xchg
adc
sub
lods
sbb
call
cmpsl
sar
push
fiadds
jnp
je
inc
lods
cs
ja
stos
xchg
xor
outsl
insb
outsl
adc
cmp
mov
out
gs
cmc
icebp
repz
and
insl
jl
std
repz
sub
sub
adc
mov
pusha
lret
cli
lahf
pop
pop
sbb
jae
aaa
scas
xchg
aaa
loopne
cmpsb
fsubrl
cld
notl
jmp
outsl
jp
and
testb
jnp
jnp
cmpsb
insb
add
out
stos
adc
and
int
mov
push
in
jae
mov
ljmp
pop
ret
js
dec
movsl
fsubs
cmc
inc
jb
aaa
cs
decb
mov
lods
dec
dec
fdivr
je
in
decb
sbb
xor
push
out
insb
xchg
or
jge
add
rorb
aad
inc
cmc
dec
subl
fnstsw
shlb
mov
push
cmp
aad
inc
sbb
rol
adc
hlt
push
mov
int
inc
mov
mov
mov
imul
and
mov
jg
fcmovb
inc
pop
outsb
ret
cwtl
mov
or
mov
frstor
pop
mov
movsb
dec
adc
cmp
enter
in
inc
xchg
orl
mov
mov
inc
adc
lahf
dec
outsl
or
mov
push
test
icebp
fldenv
jae
enter
in
pop
popf
sahf
adc
int3
sub
mov
mov
add
jae
jge
mov
fistps
pop
push
or
idivb
push
add
insb
fcoml
mov
fs
hlt
fmul
pop
lret
mov
imul
aaa
out
dec
sub
popa
test
imul
stc
inc
les
cmpsb
cmp
or
sub
pusha
adc
push
cltd
or
fistl
and
out
mov
adc
inc
push
nop
flds
fmuls
test
mov
pop
dec
jmp
test
mov
imul
xchg
mov
pop
pop
inc
jae
out
add
out
push
bnd
ja
sbb
mov
test
iret
xor
xor
les
push
inc
lods
sbbb
xor
cs
push
pop
scas
pushf
xor
cltd
xor
sahf
jb
cmp
lret
faddl
jne
ss
push
insb
and
mov
lds
lret
mov
xor
push
and
push
mov
add
cmp
scas
sub
push
scas
aas
stc
lret
stc
fnsave
arpl
mov
xchg
cli
les
mov
sbb
cld
inc
mov
insl
scas
sarl
xor
lods
in
sub
lret
jne
push
xchg
dec
ret
loopne
lods
push
rol
aad
hlt
mov
mov
ds
mov
call
sbbl
lods
fs
mov
adc
ljmp
xor
sbb
mov
in
roll
decl
push
loopne
mov
dec
xor
iret
pop
or
lods
pop
sub
xchg
ret
sbb
rcl
jnp
sbb
aas
enter
push
push
lock
mov
pop
jle
or
push
pop
popa
push
cld
xchg
fildl
test
cld
pop
mov
addr16
jne
loope
js
fdivrp
dec
cltd
faddl
cmp
rol
sub
fmuls
or
test
push
push
mov
adc
test
sub
test
cmp
enter
or
mov
rcrl
loop
inc
lcall
inc
sbb
fs
dec
cmp
dec
pop
cmp
andl
mov
aas
dec
mov
out
adc
mov
xor
orb
and
out
inc
jg
push
pusha
loopne
aad
lock
mov
adc
xchg
jne
test
int
lret
cwtl
dec
xlat
push
iret
push
sar
mov
js
je
mov
cmp
ret
adc
jo
mov
mov
xchg
jno,pt
inc
dec
in
insl
sahf
lds
loop
aad
loop
repz
stc
and
pusha
cmp
test
notl
sbb
aaa
add
rcrl
mov
aaa
es
cmp
repnz
out
int
inc
stos
ja
shrl
test
inc
sbb
rcrl
cld
movsl
and
xchg
cmp
sbb
aas
sbb
out
mov
scas
dec
push
sti
in
xor
jecxz
jmp
inc
mov
jo
mov
addr16
sub
pop
and
enter
mov
mov
sbb
daa
inc
sub
adcl
xchg
jno
mov
inc
lret
sbb
jo
push
pop
mov
bound
jne
pop
int3
sbb
les
inc
mov
jl
inc
xor
cld
and
call
inc
mov
loope
cld
mov
cli
loope
jo
inc
clc
ficompl
imul
lret
or
mov
pop
fldt
cs
add
sub
imul
adc
cld
in
dec
and
sarb
sti
adc
adc
xlat
dec
cltd
push
push
and
adc
dec
mov
mov
es
pop
rcr
popa
fcomps
ficompl
xchg
nop
mov
sub
cli
sub
lret
test
or
sbb
or
loop
gs
sub
das
jmp
stos
addr16
daa
jns
xor
mov
ficomps
xchg
js
lods
inc
int
mov
in
mov
in
and
push
in
inc
aaa
pop
or
aas
pusha
dec
or
adc
mov
addr16
xchg
call
mov
jb
cmp
mov
ljmp
or
sub
sub
fwait
add
pusha
mov
das
pop
out
inc
adc
push
or
and
mov
cwtl
pop
lock
lods
mov
fdivs
mov
paddusw
pop
cmp
adc
fisttps
mov
pop
lret
inc
mov
cmp
lock
sbb
lahf
adc
add
jl
std
cwtl
jp
mov
mov
dec
dec
lahf
rcrl
lea
popa
fdivl
loope
inc
andl
push
sbb
cs
popa
insb
xchg
ficoml
pop
sbb
mov
mov
ljmp
pop
cmp
mov
pop
aas
add
hlt
scas
lds
and
cmp
mov
dec
jo
leave
cmp
pop
xor
andl
sbb
pop
push
fidivs
shll
test
popf
jmp
mov
into
int
cmpsb
jecxz
jle
xchg
push
dec
xchg
push
inc
sbb
rol
notb
jecxz
push
into
arpl
jns
aad
popf
enter
icebp
fisubl
jbe
out
nop
sub
sub
jns
xlat
pop
add
mov
pop
mov
cli
lods
sbb
add
leave
insl
out
rcl
test
fwait
aad
pop
cli
pusha
icebp
aam
iret
jno
sbb
mov
fld
andb
or
xchg
loope
xor
mov
jecxz
out
cmp
fmulp
stos
scas
push
cmp
inc
mov
adc
fnsave
shrb
xor
aaa
push
loop
pushf
out
cmc
mov
and
test
dec
decb
stc
ljmp
push
mov
aad
mov
out
adc
inc
mov
movsl
adc
or
mov
lods
popa
xor
dec
dec
dec
jo
ss
sarl
sub
fidivrs
lea
mov
ret
jge
cwtl
mov
mov
or
mov
push
bnd
xchg
pop
inc
adc
or
xchg
fdivs
testb
pusha
sub
push
aam
popa
xchg
mov
mov
or
imul
out
fdivs
or
loope
clc
and
lret
cli
test
movsl
or
insb
std
cmp
pop
xor
cld
dec
and
test
inc
add
dec
inc
lret
lea
cmp
sub
or
lahf
mov
les
pop
add
ficoms
mov
xor
test
aam
pop
dec
mov
aam
push
mov
sbb
clc
dec
sarl
mov
mov
or
pop
test
jecxz
push
addr16
movsl
sti
inc
sub
int
pop
xorl
fwait
jle
pop
mov
cmp
rcl
clc
mov
lcall
ljmp
xchg
lods
lods
xlat
xchg
es
out
stos
shll
xchg
mov
jb
imul
shrb
pushl
and
hlt
stc
lock
bound
enter
fstpl
sub
dec
gs
xor
inc
fidivl
lahf
subl
fildl
popa
mov
popf
push
test
pop
into
cmpsb
cmp
das
daa
pop
dec
sarl
in
shl
push
dec
cld
dec
decb
mov
out
xchg
jmp
or
sbb
sbb
and
leave
lods
xor
repnz
das
mov
aas
jne
fdivl
insl
push
xlat
xchg
cmp
or
sbb
mov
push
ret
nop
sub
lods
fdivrl
add
inc
lea
dec
add
xchg
jg
lods
xchg
arpl
xor
inc
dec
mov
sbb
xchg
mov
dec
sbb
lock
sub
stos
or
lds
adc
sbbb
inc
or
mov
jp
cmp
jb
dec
in
pop
inc
call
jnp
sti
and
push
xor
mov
ds
mov
inc
sub
mov
inc
cmp
fisubrs
outsb
mov
test
or
mov
js
or
dec
dec
hlt
gs
inc
lods
xor
arpl
lret
pop
gs
cs
pushf
pop
xor
lods
in
jne
add
mov
lret
lods
dec
lcall
mov
inc
xor
ja
fmuls
sbbl
dec
fwait
jae
les
cmp
in
mov
mov
mov
jae
sti
jne
shll
add
add
pop
or
mov
xchg
mov
jmp
fisttpl
loopne
int3
in
cmp
jo
nop
mov
xor
popf
inc
sbb
adc
fnstcw
and
movsb
lea
shr
aad
fsts
adc
mov
mov
pop
adc
cli
scas
movntps
mov
push
data16
arpl
cmp
cs
icebp
out
add
lret
jb
jns
push
add
inc
stos
push
stos
dec
aam
icebp
out
iret
pop
cld
incl
inc
cmp
ja
lea
je
adc
cmc
mul
imulb
xchg
notl
ss
mov
daa
aam
cmc
aad
pop
pop
inc
cmp
aad
xchg
mov
xor
sbb
sub
cld
lret
cli
adc
sar
das
ljmp
movsb
and
mov
xchg
push
xchg
add
mov
mov
lods
ja
fstpt
xchg
bound
rclb
test
movb
xchg
out
adc
add
aaa
rolb
cmpsl
mov
xchg
imul
clc
jle
dec
addr16
sub
popa
test
add
repz
adc
stos
sarb
sbb
jl
xor
pop
mov
xor
sbbl
add
outsb
push
out
aam
jne
in
jmp
lods
pop
or
dec
fistl
clc
cmp
rcrb
shrb
mov
in
fistl
add
js
je
aam
dec
adc
les
jecxz
les
sbb
dec
inc
push
jmp
leave
fadd
test
ret
push
ljmp
inc
adc
dec
mov
pop
loop
nop
add
nop
inc
lahf
int3
movsb
sbb
push
adc
sbb
pop
ret
jb
inc
jb
push
sbb
es
push
adc
lret
jg
push
sbb
mov
ljmp
sbb
inc
inc
or
xlat
sbb
rclb
cs
xor
sbb
xchg
pop
lret
cltd
enter
dec
bound
xlat
loope
jnp
mov
and
pop
mov
test
enter
mov
lods
inc
cmpsb
mov
push
nop
imul
std
add
sub
jge
cmpsl
and
pop
sub
sbb
je
call
sbb
std
adc
scas
add
pop
mov
or
mov
push
lods
adc
cmp
ja
movhps
stos
xchg
popf
cwtl
fdivs
or
fwait
mov
sub
cltd
push
mov
xlat
xor
pusha
sbb
jbe
in
in
lahf
dec
jnp
rcrl
ja
mov
cmpsl
mov
es
fcoml
dec
mov
stos
cwtl
dec
test
mov
add
xor
imul
sub
push
icebp
in
xchg
adc
inc
outsb
or
sbb
xor
enter
mov
pushf
cld
lods
add
adc
std
sahf
fldl
ret
inc
jne
sub
cmpsl
icebp
mov
es
sbb
test
loopne
mov
rol
inc
pop
stos
add
inc
jb
pop
insb
xchg
dec
mov
sub
push
test
or
mov
mov
push
sti
popa
sbb
imulb
inc
cltd
sbb
inc
fidivrs
mov
cmp
mov
fnsave
mov
movsb
sub
ss
push
pop
repz
cmp
sbb
fsts
cmp
jnp
mov
sub
rcll
out
ljmp
add
mov
stos
divb
aas
lcall
inc
into
sbb
mov
inc
repnz
les
and
mov
cmpsl
push
outsl
ss
xchg
iret
enter
mov
dec
and
jbe
stos
and
pop
jmp
mov
jmp
xor
cld
mov
jae
data16
gs
mov
adc
mov
pop
push
lcall
and
add
mov
out
mov
cmpsl
push
jae
in
and
mov
jbe
inc
mov
and
push
dec
out
popf
sti
adc
add
xor
icebp
rcrb
xor
pushf
cli
jns
mov
fcomps
add
jo
cmp
xor
add
cld
pop
push
jg
mov
nop
push
adc
ret
sub
sbb
fwait
pop
add
imull
mov
orl
imul
cmp
push
les
and
sub
out
pushf
pop
stos
jb
repz
pop
xor
xor
jmp
cmp
mov
pop
inc
jo
xchg
xchg
dec
dec
pop
ret
repnz
pop
mov
or
aad
loope
push
clc
ljmp
xchg
jecxz
sbbb
out
inc
jle
loopne
pop
sub
and
cmp
mov
adc
and
mov
popf
rol
inc
ret
xor
std
pusha
pop
inc
pop
inc
or
insb
pushf
insb
mov
and
rclb
pop
xor
test
bound
sbb
aam
sub
icebp
hlt
dec
into
push
lea
aad
addps
cmpsb
mov
mov
inc
mov
filds
scas
adc
mov
mov
out
sbb
lahf
rorl
xchg
int3
xor
stos
pop
xchg
jge
addr16
or
fs
push
out
cwtl
aaa
sti
push
inc
inc
cltd
dec
div
sbb
sbb
sub
mov
and
out
ret
aaa
inc
mov
cmc
cltd
adc
int3
and
pop
test
and
pop
clc
and
jle
ja
xchg
jg
sbb
enter
ret
pop
mov
push
adc
and
repnz
mov
fwait
cltd
push
jle
fs
mov
stos
pop
inc
mov
jecxz
test
adc
testb
imul
mov
and
inc
jno
pusha
fcompl
hlt
shll
pop
lea
add
cli
push
cmpb
pop
or
repz
jbe
pop
mov
pop
pop
xchg
pop
data16
cli
scas
pop
xor
mov
testl
xchg
and
cltd
push
inc
push
cli
xchg
pop
push
addr16
movsl
push
es
or
clc
sbb
jo
pop
aaa
test
shrb
insb
sub
jno
sub
subl
int
shll
mov
and
stos
popf
adc
outsl
call
adc
push
shrb
mov
pushf
mov
inc
xor
jae
cld
icebp
inc
shll
jge
or
shl
cs
in
adc
sub
cmp
in
int3
roll
push
pop
add
sub
mov
mov
and
or
jle
imul
push
add
push
outsb
adc
imul
pop
test
in
lds
nop
outsl
pop
int
shll
pop
std
mov
lods
daa
cltd
mov
adc
jnp
push
or
mov
xor
mov
inc
js
xor
cmp
jae
out
cmp
pop
lods
imul
loope
xchg
xor
push
dec
mov
cmp
ss
rolb
mov
or
icebp
xor
popa
ret
lcall
add
stc
std
jl
adc
leave
pop
cld
fwait
xchg
xchg
adc
fwait
or
out
data16
aaa
mov
mov
and
or
insb
add
xchg
in
pop
aam
xchg
xchg
nop
push
outsl
cmp
cmp
mov
repnz
mov
stc
or
inc
inc
movsl
test
pop
movsl
xchg
or
or
jbe
outsl
mov
arpl
adc
add
stos
fildll
or
xchg
push
cmpsl
dec
push
sahf
stc
fbld
jnp
fdivl
push
jns
popf
mov
push
aam
fdivrs
in
leave
fisttpl
mov
enter
pop
pop
pop
mov
ds
test
cli
dec
push
mov
cld
or
das
js
js
mov
jns
mov
bound
mov
jg,pn
int3
push
dec
divb
mov
shrb
int3
xlat
leave
adc
push
clc
cmp
and
roll
inc
icebp
stos
lcall
push
movsb
sub
cmp
arpl
adc
loope
inc
mov
pop
scas
int
in
jno
sbb
es
std
js
mov
and
fisubl
test
ret
pusha
or
sub
cmpsl
dec
and
mov
push
push
jp
mov
jge
test
jp
dec
lret
jne
mov
mov
xchg
movsb
fidivrl
ljmp
pusha
push
cwtl
clc
loop
push
or
lahf
in
push
adc
inc
push
fsubl
xchg
shlb
dec
cmp
test
dec
mov
movsb
dec
pop
dec
xor
adc
fisubl
adc
faddl
setae
pop
pusha
or
jl
mov
imul
stos
xchg
ficompl
jbe
adc
add
fs
push
insl
inc
mov
stc
nop
lods
sub
cmp
cmpsl
addl
cmp
or
pop
jle
cmp
sbb
imul
or
loopne
pop
in
adc
xlat
jo
sub
xlat
ret
dec
test
xor
and
xor
mov
ja
push
jg
pop
dec
cmovbe
xlat
jne
test
in
mul
fwait
enter
add
icebp
icebp
push
mov
mov
jecxz
negb
mov
lahf
xchg
in
lret
push
fildl
push
push
dec
cltd
xor
cltd
mov
and
add
push
popf
daa
out
pop
jle
mov
ficompl
popf
xor
iret
mov
mov
sbb
fs
fwait
add
pop
xchg
rcrl
and
jns
cs
outsb
pop
mov
xor
loope
push
cld
jp
add
pop
call
mov
shlb
xor
xchg
outsl
mov
shll
popa
inc
cmp
fldt
push
or
in
sub
lea
std
mov
push
out
mov
mov
cmp
fisubrl
mov
cltd
pop
mov
int
xchg
fistl
outsl
pop
mov
je
pop
jns
fldt
and
ja
push
sub
xor
sub
in
add
in
dec
cmpsb
jno
mov
aam
out
mov
inc
sub
in
pop
ret
jne
jmp
and
lea
fldenv
aas
shrb
dec
cmp
popf
je
push
outsl
sub
dec
xrelease
xchg
sbb
mov
mov
lea
shrl
dec
pmulhw
mov
sbb
and
dec
popl
mov
sbb
lahf
stos
push
mov
mov
out
std
cmp
jle
das
and
jae
lret
xor
mov
pop
bnd
pop
mov
ret
loopne
mov
dec
jne
inc
push
jle
cmc
int
mov
insl
cmp
in
jne
pop
fstpt
dec
fs
cwtl
sbb
mov
dec
jne
andb
sbb
jb
int
mov
out
mov
jb
rorb
fiaddl
push
jecxz
dec
rorl
dec
rorl
cmp
inc
mov
movsb
loope
mov
pop
jnp
test
lcall
repnz
pop
ret
imul
xor
fiadds
out
shr
mov
inc
push
lea
adc
dec
cmp
push
in
jmp
sbb
xchg
or
rcr
add
sahf
mov
push
or
sub
sbb
pop
cmp
loope
fildll
mov
hlt
sbb
sbb
push
jecxz
js
adc
add
out
cmc
xchg
ja
rorb
dec
jmp
lock
sbb
pop
sbb
sub
lret
add
sub
lret
je
aaa
outsb
sti
cmc
outsl
mov
add
jg
mov
and
cmpsb
rorl
addr16
movsl
int
mov
out
ss
jge
enter
cmp
adc
pop
jnp
popf
ret
in
pop
mov
jne
xchg
mov
push
fnsave
inc
popa
cmpsl
jae
cmc
test
xchg
dec
adcl
xor
add
mov
imul
idivb
popa
sub
mov
mov
ds
mov
jnp
adc
cmpsb
sub
dec
lret
xor
lcall
into
ret
sbb
lcall
inc
test
mov
inc
dec
adc
popf
insb
push
mov
ret
inc
xchg
add
outsb
mov
lea
cmp
pop
fdiv
inc
call
mov
sbb
addr16
rcll
pop
pop
sti
mov
add
hlt
mov
mov
fcoms
add
xor
cmp
idivl
mov
daa
lret
push
xchg
ds
test
adc
adcl
mov
sub
cmpsb
ds
insl
cmpsb
pusha
inc
es
cmpsl
cld
push
xor
into
mov
mov
cmp
repnz
inc
and
lret
out
sub
ret
std
cltd
mov
bndldx
mov
xor
push
inc
mov
insb
or
hlt
sub
cmp
xlat
jnp
dec
adc
in
sub
jg
stc
xor
pop
repz
add
ljmp
pop
pushf
pop
mov
xchg
sbb
mov
ret
or
bound
add
idivl
jl
outsl
cmp
push
lahf
sub
dec
add
loope
insb
push
les
jns
cs
mov
xor
mov
sub
jmp
dec
sub
xchg
pop
jbe
add
pop
push
mov
cmp
mov
ror
or
repz
outsl
add
mov
inc
arpl
mov
sbb
aam
or
fsubrs
pop
bound
mov
or
sub
stos
dec
push
jnp
testb
movsb
push
dec
mov
leave
les
jbe
and
lcall
mov
lret
cmpsl
gs
inc
jae
rcll
pop
jl
iret
outsb
or
mov
xchg
push
insb
nop
xchg
and
lahf
jg
leave
outsl
cld
outsb
mov
cs
rcrb
gs
dec
push
imul
rorb
push
pushf
jb
mov
in
push
repnz
rorl
jne
mov
hlt
paddd
je
add
nop
test
pop
cmpsb
or
leave
sub
push
in
push
fmull
inc
daa
mov
or
inc
push
lods
push
ror
sbb
mov
fidivl
pushf
sbb
scas
cmc
mov
jg
or
arpl
cmc
sub
ljmp
add
js
cmp
mov
inc
mov
inc
movsb
lret
cli
sti
lret
ja
push
mov
aaa
pop
fs
mov
add
inc
jbe
faddp
je
fmuls
es
lods
push
shlb
nop
jl
outsb
mov
les
xor
cmpsb
out
xor
mov
add
dec
paddw
sub
test
push
idiv
inc
cmp
fwait
jns
dec
push
rclb
xchg
mov
ja
cmpsl
push
mov
add
sar
xlat
add
ret
rorb
inc
mov
mov
xchg
sbb
ror
sub
repnz
cmp
jno
jb
scas
adc
in
jge
mov
xchg
mov
repnz
dec
js
mov
mov
mov
aaa
dec
adc
imulb
dec
or
adc
movsb
fidivl
mov
mov
ds
iret
xchg
enter
mov
jmp
sbb
and
and
xor
pop
repnz
jp
ret
xchg
fnstcw
mov
push
cld
shlb
subb
cmp
dec
cmp
push
pushf
xchg
push
ja
add
mov
adc
mov
xchg
mov
in
sarl
movsl
addb
jmp
aaa
inc
jp
pop
stc
mov
insl
test
sbb
inc
gs
hlt
push
pop
dec
sarl
push
or
cmp
mov
lea
and
pop
sbb
xor
data16
jl
mov
sub
jl
rclb
cli
pop
pop
adc
dec
add
js
lods
stc
mov
and
jmp
xor
jo
xchg
orl
into
push
sbb
lahf
jle
cmpsb
cmp
and
rcl
jle
sbb
mov
ror
jg
xchg
sbb
stos
mov
mov
pusha
loopne
popa
jns
inc
js
mov
adc
int
notl
call
das
xchg
int
push
iret
pop
es
loop
xchg
sub
cmc
mov
bound
push
dec
cmp
or
mov
mov
fsub
aaa
mov
adc
and
cmp
and
mov
pop
iret
out
pusha
push
mov
xchg
push
fimuls
enter
pop
ret
lahf
xchg
fstpl
jae
ret
xchg
leave
sbb
pop
fisubrl
cwtl
loopne
mov
cltd
loopne
cmp
cltd
loopne
xor
movsb
mov
push
push
dec
pusha
daa
and
and
cmc
cld
dec
mov
gs
and
jo
cltd
inc
mov
xlat
hlt
cmp
insl
mov
jae
dec
scas
xchg
xchg
jns
fdivrs
pop
inc
and
stos
dec
cld
and
dec
mov
jp
cmp
bound
mov
inc
or
xor
out
test
xchg
sub
add
lcall
mov
fcmovb
mov
leave
mov
dec
jo
mov
pop
push
pusha
push
mov
or
inc
scas
imul
sub
xchg
push
daa
and
mov
out
incb
leave
ljmp
sbb
push
mov
sbb
je
sub
or
in
mov
mov
dec
cltd
xchg
and
mov
adc
inc
sub
mov
push
mov
data16
repz
mov
push
cmp
cmp
dec
jmp
or
aas
nop
jg
scas
xor
inc
popl
pusha
cmp
aad
es
and
or
adc
xchg
xchg
sbb
inc
cmp
ja
test
ror
out
cmpsl
mov
es
sub
ret
push
sub
imul
jno
arpl
inc
cmpsb
rcl
adc
mov
pop
sti
mov
push
lret
mov
lret
add
addr16
nop
and
mov
test
lods
leave
cmp
adc
dec
mov
andl
scas
dec
test
inc
es
fwait
loope
pop
rcrb
add
or
inc
jo
jle
movsb
cmpsl
adc
movsl
adc
push
stos
lcall
and
in
mov
insb
mov
jecxz
jae
cwtl
outsb
and
rcrl
push
lahf
xor
pop
pop
inc
fistpl
lods
sbb
inc
test
cltd
in
sbb
cmpsb
std
andl
mov
push
cltd
push
adc
or
cmp
outsl
loop
stos
pop
xchg
adc
inc
mov
icebp
mov
inc
das
ret
iret
add
mov
es
popf
mov
mov
popf
xor
mov
inc
cmp
or
cwtl
push
in
mov
es
adc
jmp
push
popa
xor
int
popa
mov
fs
push
xor
loop
sub
cltd
loopne
clc
jne
lcall
jp
loopne
js
rcrb
or
xor
scas
add
dec
cltd
sti
push
xor
push
repz
mov
adc
out
push
pop
je,pn
pop
mov
adc
inc
sti
xchg
dec
imul
inc
xorb
cli
xor
aaa
inc
push
mov
adc
fs
repnz
fcmovbe
iret
lret
stos
mov
leave
out
insb
jmp
jmp
jb,pn
pop
popf
ficoml
call
out
xor
int3
test
in
iret
mov
inc
jecxz
stc
insb
in
fwait
inc
cmp
adc
mov
fs
movsl
push
test
movsb
pop
push
sti
or
jg
pop
jecxz
mov
scas
xorl
xlat
repnz
cmp
pusha
jle
jmp
mov
cmp
pop
push
popa
adc
adc
lret
enter
outsl
shr
popa
stos
jmp
lods
and
fcoms
add
xchg
stos
xor
decl
push
xchg
add
lea
push
es
fld
out
stc
mov
cmp
xor
sbb
imul
pop
cli
std
mov
push
movsb
frstor
fmuls
xchg
jno
jne
and
xchg
sub
jp
pop
mov
jbe
cmp
das
lahf
mov
jno
sbb
sbb
fmull
inc
adc
in
testb
cltd
nop
ds
push
push
ficompl
add
jbe
lods
mov
adc
out
sub
int3
jmp
sub
outsl
add
stos
jp
pusha
inc
hlt
test
jns
inc
stc
xor
jbe
insl
rolb
fidivl
imul
scas
push
or
test
repz
xchg
inc
pop
scas
xor
cmp
emms
dec
jno
xor
loop
xchg
loopne
sti
jg
lcall
cmp
pop
jg
shr
jb
icebp
sbb
sar
test
sbb
scas
js
fcomps
cmp
inc
dec
pop
mov
bound
or
xchg
mov
mov
daa
sbb
pop
jg
dec
sarl
fbld
push
fisttps
scas
in
subb
sbb
add
ret
cmp
stos
inc
lock
xor
xchg
jo
xchg
ljmp
and
test
fcoms
cmp
xchg
pushf
mov
inc
aaa
and
pop
mov
call
adc
scas
add
std
cs
popa
xchg
repnz
mov
lahf
fidivrs
adc
push
aas
orl
push
jbe
xchg
cltd
hlt
pop
add
shl
lods
push
ljmp
cwtl
xchg
inc
xchg
jae
loope
push
sbb
jnp
jg
outsl
sahf
jg
xchg
mov
ds
daa
mov
ja
insl
mov
push
adc
pushf
dec
mov
xor
mov
imul
dec
xchg
call
xchg
xchg
mov
push
insb
mov
in
icebp
jge
inc
jns
ja
pop
xor
sub
adc
dec
adc
iret
lret
rcrb
xor
push
fwait
and
xor
popf
xor
or
rcrb
in
push
cmp
dec
sub
ret
or
jbe
jl
and
jp
cmp
push
dec
aam
into
es
dec
in
repnz
fmuls
mov
or
cmp
mov
mov
fnstsw
sti
or
mov
ljmp
fmull
lods
out
mov
icebp
nop
mul
pusha
and
lret
shl
lcall
outsb
pop
ror
pusha
arpl
lock
sub
jns
pop
dec
js
mov
adc
mov
and
out
iret
in
dec
loope
dec
clc
je
in
sti
jne
mov
dec
hlt
mov
aaa
mov
ja
enter
loop
xchg
popf
or
popa
push
pop
aas
pop
mov
iret
jne
cmp
leave
dec
js
and
mov
mov
mov
data16
mov
cmp
adc
jmp
fidivrs
idiv
jne
or
inc
pop
cltd
test
jne
sarb
cmp
pcmpgtw
shlb
loope
clc
imul
cwtl
mov
jae
hlt
loope
mov
push
lea
pop
push
and
push
dec
or
xchg
shll
dec
dec
mov
add
pushf
addr16
or
loop
push
sub
push
sarl
lcall
fildl
dec
rcrl
xchg
xchg
lret
cwtl
rcrl
inc
inc
sub
mov
sub
cmp
scas
sub
imul
je
rorl
push
js
movsl
stc
xor
call
scas
or
push
cmp
dec
and
je
out
push
gs
insb
test
xorl
xchg
aaa
adc
les
xchg
xchg
cltd
ret
jns
repz
push
cld
aad
sub
es
pop
clc
xchg
outsb
rclb
jle
aad
pop
clc
pop
bound
movsb
dec
fdiv
jb
mov
jge
subb
or
js
mov
xchg
sti
or
add
pushf
and
pop
imul
sub
dec
or
pop
mov
mov
xor
testl
in
pop
mov
cmp
test
push
xor
shl
lea
jne
lret
lret
and
inc
fnstenv
mov
iret
mov
jmp
dec
out
mov
sub
in
push
sub
sub
loope
fwait
jo
xor
mov
jg
push
mov
arpl
repz
pop
mov
ret
imul
fiadds
fbld
scas
xor
addr16
push
arpl
adc
cmp
or
nop
test
daa
pop
add
add
rcll
jge
leave
mov
fiaddl
into
aad
inc
sbb
pop
xchg
push
loopne
mov
data16
lods
mov
aad
sbb
in
sub
pop
dec
adc
sub
setb
jne
inc
jae
mov
test
jns
jo
cmp
shlb
add
scas
popf
into
out
mov
jns
jbe
fxch
mov
aad
sar
pop
pop
jmp
mov
sahf
test
jl
outsb
into
je
out
fdivrs
mov
inc
repz
mov
xchg
adc
outsl
sahf
decb
cmp
push
or
jecxz
push
xchg
inc
jge
movsl
das
and
jl
jae
jnp
daa
jno
pop
cs
sub
xchg
mov
push
mov
mov
int
into
movsb
pusha
add
sub
or
pop
cmpsl
out
cld
mov
pop
adc
and
cs
pop
mov
std
ja
iret
sub
xlat
fdivs
push
int3
pop
outsl
ss
mov
out
sbb
in
add
iret
and
ja
mov
shl
mov
xor
xor
sbb
das
stos
add
icebp
pop
inc
pusha
pop
test
pop
fnsave
sub
enter
rcl
cmp
inc
in
mov
and
cmp
insb
xchg
mov
adcb
push
and
cmp
cmp
sti
pusha
sub
lahf
clc
call
mov
mov
jae
mov
lcall
fs
mov
outsl
data16
add
iret
and
loopne
sub
push
in
push
cs
mov
sub
xor
sbb
sbb
ljmp
push
int3
imul
nop
pop
into
jbe
push
inc
insb
insb
adcb
repz
incl
cmp
adc
inc
popl
jnp
mov
jae
mov
icebp
jo
popf
pop
pop
pop
or
sbb
clc
push
shl
cwtl
and
fstp
aam
mov
add
xchg
cwtl
or
jo
sbb
push
push
pop
outsl
xchg
sbb
inc
call
rcrb
scas
cmpsw
jnp
mov
movsb
add
pop
xor
jecxz
es
adc
sub
sub
roll
jno
pop
daa
mov
jnp
mov
mov
sub
adc
and
cmp
jne
daa
stos
cmp
xor
addl
mov
fisubl
repnz
outsl
push
int
lahf
xchg
pop
fcomi
aam
adc
mov
sbb
shlb
jmp
mov
stos
sti
sbb
pop
push
imul
les
daa
icebp
jmp
sbb
int3
mov
dec
lcall
les
add
push
cmpsb
aaa
pop
jle
gs
dec
xorl
inc
mov
cmp
lcall
jmp
push
repz
inc
or
ja
sub
xchg
push
bound
shrl
xor
sub
jmp
sub
das
hlt
pop
xor
bound
sbb
andb
pop
aaa
xchg
jno
pop
pop
add
cmpl
and
pop
cmp
push
mov
les
aas
inc
pushf
movsbl
lods
movsb
xchg
into
xchg
and
add
repz
push
push
cwtl
mov
leave
dec
or
lret
jle
dec
xchg
jo
inc
es
mov
rep
fmull
movsb
mov
add
and
sub
sub
int
push
out
jb
jp
inc
mov
shl
outsl
and
push
mov
mov
xchg
call
ret
pop
dec
shrb
jle
addr16
cmp
lcall
pop
repz
scas
repnz
sub
out
in
pop
pop
jns
pop
or
orb
sbb
aas
nop
cs
pop
cmp
dec
fcoml
cltd
aas
nop
inc
dec
lret
cmc
adc
flds
and
decl
inc
sti
test
arpl
cmpsl
sbb
mov
xchg
vmwrite
inc
sbb
rcll
jae
rcrl
sbbl
cmpsb
and
jp
xor
imul
inc
data16
dec
push
or
popa
push
ja,pn
test
mov
stc
pop
mov
ds
negb
pop
sub
loopne
mov
outsb
mov
aas
pop
outsl
lahf
int3
adc
cmpsb
pop
xor
xchg
aad
js
pushf
ja
and
sbb
scas
rol
or
aad
sub
inc
jo
dec
cwtl
cmp
add
das
adc
or
mov
addr16
mov
stc
andl
mov
lock
jl
out
push
mov
cld
fisubs
adc
push
mov
pop
movsb
enter
ja
or
cmp
cs
pop
lret
lcall
dec
push
lea
adc
cwtl
or
call
bound
pop
or
pusha
mov
aas
inc
push
ljmp
out
jns
pop
fldl
sub
and
add
jle
lret
cmp
fs
popa
or
pop
in
arpl
test
adc
and
xchg
jge
cs
std
push
cwtl
pop
xchg
xchg
ficompl
add
pop
and
mov
int
fldcw
in
jp
ret
leave
push
push
and
jae
lahf
test
shrl
or
push
test
stos
inc
inc
mov
push
push
mov
loopne
pop
stc
xchg
xor
lret
sbbl
and
subl
jno
mov
cli
js
jno
pop
cltd
dec
into
dec
xor
adc
push
insb
cmpl
push
jae
add
iret
out
mov
jno
pushf
inc
or
mov
mov
inc
dec
js
in
jb
xchg
push
loope
pop
push
and
sub
pop
inc
jne
cmp
push
xlat
or
gs
sbb
push
lcall
cmc
jbe
out
mov
push
add
sub
mov
mov
sbb
or
or
dec
mov
xor
addl
ret
inc
cmc
push
jae
loop
fdiv
jnp
mov
add
adc
daa
js
adc
pop
and
pop
call
lea
notl
and
cmp
push
sub
mov
sti
or
mov
cmpsl
sahf
mov
xlat
push
imulb
pop
dec
ss
dec
mov
int
aaa
ret
loopne
jo
cmpsb
xchg
nop
jle,pn
dec
stc
int
sbb
mov
lahf
or
add
repz
cmp
icebp
mov
lcall
or
andl
mov
sbb
aaa
hlt
pusha
shlb
loop
mov
lcall
sbb
lret
sub
mov
mov
sti
push
sbbb
pop
sbb
jns
cmp
pusha
push
push
xchg
cmovs
ja
mov
mov
mov
shlb
adc
test
add
push
lds
push
das
dec
push
scas
or
jl
push
and
jge
scas
mov
cmpsb
add
outsb
mov
sub
push
out
xor
cmp
mov
jb
dec
add
pop
sub
or
fistl
jp
add
xor
lea
mov
inc
xor
jne
int3
jo
es
adc
cmp
mov
xchg
jmp
adc
cs
push
movsb
int
sub
inc
fnsave
cs
dec
dec
lahf
pop
nop
sbb
jge
sbb
icebp
add
out
inc
imulb
in
sbb
icebp
bound
lcall
les
insb
and
add
inc
add
jb
mov
inc
pop
or
aad
ret
mov
inc
rcll
nop
sub
mov
pop
addr16
stos
pop
jle
sbb
les
jmp
aas
jl
add
aaa
jo
push
sbb
pop
inc
and
mov
cmp
stos
push
mov
clc
outsb
lods
sub
mov
scas
loopne
stc
pop
das
add
cmp
inc
popa
add
cmp
xor
sbb
cmp
out
rcrb
pop
lahf
or
aad
jmp
iret
add
outsl
sbb
repz
add
add
xchg
or
add
insl
jnp
sub
addr16
ss
lock
je
xor
loope
ud2
rcrb
lret
sub
xlat
lock
xchg
sub
cmp
adc
insb
imul
inc
xchg
fiadds
cs
iret
rorb
add
insb
jg
insl
push
pop
xchg
ficoms
push
mov
dec
jmp
pop
sub
cmp
or
mov
rorl
pop
jl
js
pop
jmp
or
dec
mov
aad
adc
push
nop
add
and
testb
jmp
xchg
ja
mov
adc
cmp
out
xchg
and
push
icebp
sub
in
sbb
add
shlb
xor
adc
sub
lds
in
repz
cmp
mov
dec
cmp
and
sarb
out
icebp
out
sub
push
cwtl
mov
dec
cmpb
stos
je
comiss
mov
clc
rcrb
sub
jmp
xor
push
ds
add
ljmp
and
mov
les
sti
scas
pop
and
aas
inc
push
lcall
mov
pop
test
adc
lcall
in
jle
mov
jl
xor
push
push
inc
popa
mov
pop
mov
ret
ja
js
fcoms
iret
subl
imul
cmp
and
mov
gs
sub
clc
push
push
mov
inc
or
xchg
lock
jnp
fcomip
cmp
shr
push
icebp
shll
test
flds
xor
int3
and
les
sbb
faddl
mull
add
daa
cmc
insl
inc
jno
cld
cmp
out
xchg
and
loope
jbe
sub
sbbb
iret
inc
and
sbb
loope
fisttps
mov
aad
push
mov
std
bnd
push
mov
mov
sub
stos
ljmp
test
in
data16
aas
insb
adc
push
rorl
push
std
push
adc
loop
in
lods
inc
rcrl
cld
cmp
or
sbb
dec
dec
loop
push
cltd
and
aaa
loopne
scas
mov
dec
pushf
jl
mov
insl
xlat
out
or
stc
jbe
jo
mov
call
ljmp
daa
cltd
test
or
push
xor
in
ret
xor
fldt
sub
out
aas
xor
xchg
mov
cmpsb
call
cmp
add
cmc
add
sbb
icebp
sub
loopne
pop
fldl
sbb
cli
insl
inc
sub
mov
jbe
test
jbe
rcrl
push
rorb
lret
mov
push
stos
inc
into
ud0
or
add
push
jle
xor
ja
movsb
jmp
mov
pop
je
add
mov
jae
push
add
dec
xlat
fmuls
sub
mov
aas
rcrl
jne
and
pop
lock
notb
add
cltd
push
std
adc
sbb
sub
sbb
mov
xchg
dec
loope
xchg
dec
scas
pop
movsl
cmp
lock
aas
sub
cmp
scas
and
std
sti
cmpsl
xchg
push
outsb
stos
sbb
dec
jo
mov
add
mov
std
pop
adc
xchg
mov
fndisi(8087
push
cmpsb
fsub
jge
fisubl
mov
sbb
ljmp
mov
adc
fisubs
mov
imul
ja
adcl
rorl
iret
mov
ret
shll
push
jno
sbb
out
fisubrs
cltd
cmpb
or
mov
sub
or
jns
test
jecxz
inc
xchg
repnz
call
rcll
out
or
jno
cltd
and
daa
ss
add
es
inc
repz
sub
pop
push
notb
cmp
inc
inc
js
cwtl
ret
mov
sbb
or
or
and
in
sbb
mov
sub
ljmp
jg
das
sbb
cmpsb
decl
jae
sub
icebp
and
lahf
iret
ret
pop
xlat
mov
nop
in
adc
lahf
lcall
imul
test
sbb
xchg
test
jle
pop
dec
or
ret
inc
lea
and
ret
cmp
pushf
or
mov
or
imul
rcrb
mov
push
jl
fsubrp
xor
cli
enter
insl
inc
ja
leave
pop
stc
inc
lock
aaa
mov
or
call
mov
fwait
popa
jg
addr16
xchg
mov
inc
mov
jne
dec
int3
cmc
push
lret
ret
sub
and
lea
lret
mov
divb
sbb
jl
pop
pop
mov
jp,pt
pop
out
sub
mov
add
push
gs
in
add
dec
cmc
cmp
mov
shll
or
pop
cld
addr16
in
fcoms
pop
mov
dec
fildl
dec
lea
daa
subb
clc
or
and
les
adc
loopne
push
add
and
mov
fimull
in
out
hlt
ret
or
xchg
cmp
lret
add
mov
add
jg
in
test
jmp
push
and
roll
mov
in
call
mov
jmp
xchg
in
gs
cmpsl
lods
mov
cmp
mov
push
inc
les
mov
xchg
jbe
mov
adc
mov
lea
fcmovb
cwtl
inc
mov
stc
jnp
les
cmp
hlt
or
rcrl
push
lds
fnstsw
lock
dec
mov
and
mov
mov
cmpsl
mov
cmp
add
pop
add
dec
xor
dec
addr16
jecxz
sbb
adc
cld
cltd
fistps
into
outsb
cmpsl
repz
orl
pushf
xchg
push
lret
inc
pop
fidivrl
dec
inc
inc
shlb
stc
adc
cmp
outsl
pop
lods
out
push
xchg
add
jo
xchg
xor
in
jp
xchg
cmpl
sub
into
push
mov
jg
push
out
inc
and
cmp
out
sbb
adc
or
sar
mov
in
repnz
jae
repnz
imul
xchg
std
mov
cs
pop
lea
rol
and
sub
mov
sti
fsubs
gs
cs
jle
mov
mov
mulb
xchg
adc
movsl
sbb
test
pop
xor
mov
ficompl
fnstenv
and
cltd
ficompl
jne
sub
cmp
loope
and
ja
jl
pop
ret
mov
mov
nop
pop
cltd
mov
filds
cmp
fimuls
push
adc
popl
out
sub
xor
lods
push
loop
imul
mov
scas
jp
push
mov
mov
pop
lods
adc
jmp
in
sbb
shr
in
lock
cmp
xor
repnz
pop
push
cmp
je
dec
test
shlb
xor
xor
jno
and
sbb
jmp
test
insb
jns
cmpsl
dec
xchg
imul
jae
imul
clc
loopne
mov
mov
push
repz
adc
test
push
dec
sti
xor
mov
outsl
loopne
jns
jmp
dec
in
pushf
lahf
pop
push
mov
push
aam
xchg
xor
in
stc
out
in
repnz
cmpl
or
inc
cmc
sub
push
mov
cmpsb
sbb
js
pop
bt
adc
sarb
xor
push
notb
notb
out
leave
xor
jnp
xlat
mov
mov
ffreep
jmp
dec
mov
fnsave
mov
loopne
inc
mov
push
jl
xlat
xchg
std
push
and
add
xor
lds
or
js
testb
lods
fisubrs
cmp
cwtl
sub
dec
fninit
sub
mov
inc
mov
movsb
es
dec
sub
push
add
arpl
jge
mov
movsl
push
mov
imul
sbbl
push
mov
loop
jns
into
xor
pop
rclb
fnstcw
test
sub
push
xchg
movsb
outsb
std
or
cmp
xor
mov
outsb
xchg
fucomp
nop
mov
push
ret
mov
xor
adc
mov
jg
scas
cmpsb
and
mov
shrl
sbb
dec
sub
pop
pop
mov
cmpb
mov
test
pop
inc
cs
adc
orl
add
cmc
testl
enter
iret
xor
add
inc
adc
arpl
and
in
sbb
sub
imull
cmp
lock
pop
dec
push
mov
xor
cmp
in
sub
push
insl
push
dec
mov
jb
mov
nop
jg
mov
xor
dec
add
dec
push
loope
fdivrl
imul
loopne
aam
or
imul
cmp
mov
out
and
inc
xor
stc
gs
into
xor
jle
rolb
mov
jle
adc
incb
aas
cmp
icebp
mov
and
mov
popf
dec
inc
subb
push
js
addr16
cmp
subb
jb
cmc
xchg
lds
mov
push
push
inc
xchg
jle
leave
test
adc
mov
mov
add
stos
jns
in
lea
and
mov
repnz
test
sbb
out
add
cld
pop
jb
fwait
lcall
icebp
cli
js
sub
push
decb
clc
lds
xor
arpl
sarl
mov
in
xor
pusha
cmp
lods
adc
and
and
imul
pop
out
add
sub
push
dec
lock
sbb
pop
or
mov
xor
pop
popf
push
sbb
adc
shll
push
cmp
test
or
pop
fwait
jl
add
and
inc
out
and
ud0
push
hlt
fwait
int3
cs
and
sub
mov
stos
push
sub
pop
mov
xchg
add
das
xchg
dec
mov
pop
mov
mov
mov
pop
push
mov
icebp
adc
sbb
icebp
loop
mov
sbb
xor
push
into
test
stos
jg
es
aas
into
js
pop
clc
adc
pop
sbbl
inc
in
lds
divps
lret
or
jno
inc
imul
dec
sbb
test
or
sbbb
mov
xchg
and
jns
and
mov
push
xor
jl
jb
incb
jb
pop
shrb
shrb
and
sub
and
in
jg
cld
out
ja
adc
jmp
push
jnp
repz
cmp
or
inc
add
xor
pop
jbe
xchg
inc
sub
jg
js
fisttps
filds
stos
test
es
outsl
iret
addr16
mov
add
push
mov
out
xor
mov
jnp
adcb
mov
sbb
aad
imul
mov
jns
scas
iret
pushf
dec
rclb
movsl
mov
cs
mov
dec
sbb
xchg
cmpsl
in
mov
loope
xor
enter
loope
jae
leave
inc
aaa
jg
add
addr16
push
and
xchg
and
in
jmp
sub
jno
stos
out
mov
test
leave
jb
adc
pop
pop
outsl
daa
add
and
mov
hlt
xchg
data16
loopne
add
sub
or
jno
mov
dec
and
xchg
ljmp
xchg
repnz
pop
sbb
repz
cld
mov
adc
add
xlat
outsb
jne
test
push
aad
fnstcw
adc
jns
and
and
adc
sbb
stos
mov
or
lock
and
xchg
in
mov
ja
fxsave
rol
fprem1
sbb
add
cli
popf
mov
dec
fsqrt
push
pop
cld
sbb
test
and
dec
inc
fsubl
push
out
mov
mov
movsb
add
test
popf
xor
jle
js
fldl
dec
push
cmp
pop
hlt
mov
xor
push
dec
insb
mov
add
cs
cld
into
out
ljmp
out
sub
ljmp
mov
scas
push
dec
scas
dec
xor
popf
jnp
sub
js
push
outsl
cltd
push
inc
xchg
xchg
mov
gs
test
mov
mov
cmp
push
mov
xchg
push
dec
jg
rcrb
and
stc
in
es
mov
scas
repz
add
mulb
nop
jns
push
and
sbb
idiv
xchg
popa
push
lahf
and
pop
cmpsb
int3
ds
xlat
bswap
dec
inc
lcall
dec
jmp
leave
dec
scas
ret
imul
dec
test
in
lret
xor
arpl
repz
mov
jnp
or
rcr
and
fs
adc
push
lcall
jmp
jge
rorl
jo
js
pop
mulb
out
dec
mov
sub
test
lods
fwait
sub
add
add
jg
cmp
daa
and
xor
into
dec
jl
int
and
fsub
int3
out
push
mov
enter
outsl
mov
cwtl
int
push
adc
inc
shrb
mov
pop
and
pop
fsubs
lock
daa
loopne
dec
lods
out
fistl
js
jge
and
popf
pop
mov
mov
cmp
mov
dec
addl
rcl
in
mov
lds
pusha
scas
out
push
xchg
movsl
sbbb
ljmp
jl
in
push
std
sti
add
pop
jmp
inc
jbe
cld
sti
sub
es
cmp
flds
inc
adc
sbb
mov
js
xor
lahf
sbb
jnp
xchg
pop
js
cli
cmpsl
jo
in
inc
and
jl
jb
lock
or
scas
lret
enter
mov
fwait
add
mov
mov
test
and
daa
xor
das
lahf
call
pop
vminss
jl
jl
mov
sub
push
sarb
movb
fnstcw
push
push
loopne
adc
cmp
cwtl
test
add
xor
pop
cli
cwtl
inc
xchg
sti
jecxz
shlb
aad
test
leave
adc
in
push
scas
fs
mov
cmc
cmp
cs
jns
icebp
add
cmpsb
lock
ret
inc
mov
es
sub
jne
add
test
imul
lret
pshufw
iret
scas
dec
inc
mov
repz
shl
mov
mov
adcb
xchg
js
jb
out
mov
inc
test
dec
stos
jmp
push
pop
mov
cmp
clc
and
pop
mov
int
ja
mov
imul
xorb
lret
xchg
push
aad
jp
dec
test
or
subb
hlt
addr16
mov
inc
inc
push
loope
and
test
push
js
shl
les
test
dec
jbe
lods
jge
iret
ljmp
cmp
mov
aam
popa
pop
xor
inc
mov
shll
negl
lret
outsl
jle
movsb
push
lret
mov
xlat
jmp
push
or
dec
sub
ja
addr16
or
mov
js,pt
testl
xor
pop
add
dec
mov
negl
jmp
jo
loopne
adc
jo
insb
in
jmp
pop
lahf
xor
sti
testb
loope
mov
loopne
inc
mov
mov
idivb
mov
ret
xchg
and
jns
jnp
aad
xchg
cwtl
push
dec
outsb
pop
pop
cwtl
mov
loop
pop
loope
fstpt
fwait
inc
cmpl
pop
mov
inc
sbb
jns
mov
pushf
mov
ja
mov
mov
xchg
xor
cmpsb
popf
stc
outsb
pop
or
jge
jnp
jl
or
xor
sbb
fdivrs
jecxz
and
fldcw
fnsave
mov
enter
shlb
loopne
test
mov
in
fisttpl
jns
mov
popf
mov
test
add
pop
fcmovnb
xchg
and
jl
ret
xor
dec
inc
jb
fmull
xchg
mov
jnp
inc
shlb
jecxz
mov
imul
sbb
pop
pop
sbb
inc
xchg
jle
mov
repz
cmp
fsts
hlt
popa
outsl
nop
pop
adc
int3
mov
pusha
pop
or
push
repnz
mov
dec
and
xchg
dec
inc
dec
arpl
cmp
cmp
fnstenv
sub
push
loop
in
mov
mov
jo
and
xor
jns
shlb
repz
fdivl
cmp
bound
mov
cmp
pop
mov
dec
pushf
fisubs
lahf
mov
es
sub
mov
mov
rcr
cmp
xor
xchg
lods
dec
sbb
pop
sbb
mov
pop
inc
je
aas
push
adc
in
repnz
xchg
sbb
push
push
pop
jnp
stc
adc
sbb
mov
xor
mov
mov
and
lcall
cmp
scas
cmpb
pop
cmpsb
in
scas
dec
dec
aaa
sbb
xchg
mov
xchg
dec
sub
lods
jne
popf
mov
hlt
inc
dec
cmp
imul
or
icebp
imul
push
fwait
xor
or
int
roll
dec
jno
jbe
lahf
adc
xor
jnp
sub
sbb
or
sbb
dec
mov
loop
aas
xor
gs
push
jle
mov
in
cli
sub
mov
or
sub
xor
adc
adc
inc
cltd
sbbb
mov
mov
dec
insb
call
dec
add
repz
pop
ljmp
adc
insb
into
or
test
popf
outsl
push
bound
sbb
inc
jno
push
in
inc
lods
ret
cmp
adcl
dec
mov
mov
pop
inc
mov
cmpsl
jnp
dec
shr
xor
ljmp
sti
lea
pop
add
ljmp
nop
sub
mov
test
and
pop
push
sub
leave
or
das
jmp
add
test
in
dec
mov
lods
lds
rol
xchg
and
xor
or
pop
shrb
gs
sbb
inc
or
je
rolb
push
into
xchg
addl
cmp
subl
fcmovb
add
fwait
and
arpl
push
push
test
negb
mov
cs
and
enter
repz
sub
dec
fwait
test
xchg
cmpsb
call
int
mov
fnsave
xchg
cwtl
ljmp
sbb
rclb
neg
jle
adc
mov
xlat
mov
mov
xor
cmpsb
shl
test
test
imul
sub
push
fnstsw
out
sub
loop
imul
or
shrb
les
fsubs
pop
pop
cmc
sbb
std
leave
cmpsl
pusha
cmpsl
cmpsl
ss
mov
lret
mov
jmp
push
es
mov
loopne
and
cmpsl
ret
jge
sbb
in
lock
ljmp
cmc
push
mov
insl
insb
jns
adc
movsb
pop
xchg
lahf
lahf
cwtl
into
clc
lea
push
rorl
lcall
daa
or
popf
mov
loop
mov
repz
cld
lret
in
test
jg
mov
js
sbb
cmp
xchg
jns
cs
jb
dec
pop
fcmovnb
dec
lds
lock
popa
fistl
cwtl
in
orb
sti
or
sub
sub
lods
stos
lcall
out
adc
inc
shrl
imul
loopne
and
mov
xchg
and
jmp
negb
andb
jmp
pop
and
mov
mov
pop
mov
mov
les
ljmp
pop
jl
push
mov
jnp
insl
imul
mov
mov
shlb
cmp
hlt
jae
pusha
mov
xchg
cmp
pop
icebp
fwait
movsl
push
repnz
loope
jle
lods
add
sub
scas
and
lcall
push
std
mov
in
jle
xor
mov
xchg
inc
xchg
lret
shlb
ljmp
mov
pop
or
in
cmpsl
icebp
lahf
test
test
xchg
les
loop
test
data16
lods
hlt
pusha
push
mov
xor
pop
sbb
jp
daa
sti
or
jo
cmp
lds
cmpsb
cwtl
enter
push
repnz
mov
xchg
xor
icebp
rcll
movsl
mov
test
pop
test
jbe
push
stos
ss
sbb
dec
lods
push
lahf
and
cmp
push
jle
push
imul
sub
jbe
and
mov
leave
hlt
xchg
cltd
roll
adc
inc
out
xor
arpl
icebp
mov
push
dec
icebp
orb
and
popf
push
pusha
stos
mov
add
stc
popf
adc
sub
jecxz
out
leave
add
fildll
adc
pop
clc
hlt
ss
testl
repz
cltd
cmpsb
inc
mov
pop
xor
mov
sub
mov
daa
js
es
sbb
inc
push
jmp
mov
jae
mov
jp
ds
mov
and
lock
insb
jb
ds
add
push
dec
leave
jb
inc
rcrl
cmpsl
scas
add
mov
xor
or
push
arpl
negl
push
in
adc
dec
lcall
in
imul
lods
loopne
in
push
push
movsl
push
or
sbb
adcb
orl
xchg
jnp
cmp
iret
jp
rcrb
ss
adc
and
insl
adc
sub
test
or
push
mov
pusha
cs
xor
fcompl
cld
aam
ljmp
mov
test
mov
adc
pop
adc
cmp
sub
pusha
stc
ljmp
hlt
sbb
and
out
jecxz
adc
nop
push
push
int3
lea
fsubs
cmp
xor
xlat
mov
fistpl
lcall
fidivrl
leave
mov
jns
repnz
and
or
cmp
imul
ret
cltd
mov
and
pop
xor
dec
dec
add
mov
sub
ds
lret
add
push
mov
outsl
lods
lock
or
ret
mov
pop
inc
mov
pop
cmpsl
addb
mov
dec
mov
out
inc
mov
inc
cmpsb
in
popf
jns
jno
xor
jl
pop
sbb
inc
std
xlat
pop
adc
nop
inc
add
cmc
fldenv
jecxz
mov
sarl
pop
xchg
bnd
sub
test
js
aad
jecxz
cmp
jl
lds
inc
sub
pop
mov
adcl
jle
inc
neg
movsb
mov
and
aad
mov
mov
add
cmp
sbb
push
test
adc
and
fistl
pop
cmp
or
nop
sti
adc
add
loop
gs
nop
or
call
sbb
sti
cmp
stos
ret
cmp
or
sti
in
pop
xor
popl
loop
int
rcrb
dec
ja
cwtl
mov
mov
jne
sbb
jl
mov
jle
push
xchg
movl
jge
sub
insl
sbb
mov
mov
cmc
adc
std
xor
les
cmp
and
cwtl
sbb
jge
shlb
and
test
sub
mov
sbb
sbb
mov
lods
jmp
loope
loope
insb
xchg
sbb
into
sub
push
push
pop
xchg
push
movsb
inc
inc
xor
aam
inc
fimull
hlt
cmpsb
fmull
iret
adc
aam
sbb
cmpsb
jmp
fisttpl
pop
sbbl
pop
pop
add
or
subb
sub
cli
negb
insb
push
daa
sbb
stos
or
stos
inc
sub
icebp
pop
sbb
pop
aaa
movsl
inc
mov
pop
sub
aas
test
inc
cmpsl
xchg
fwait
lods
movsb
push
mov
int
outsb
mov
lods
into
xchg
iret
pop
ljmp
mov
mov
iret
icebp
test
movsb
stos
cmp
xlat
fs
pop
adcl
jno
or
dec
fmuls
daa
les
jg
imul
fcomps
rorb
inc
add
rcl
jge
sub
lret
insl
test
cmpsb
lret
bound
xchg
pusha
mov
add
xchg
lret
xorl
jns
push
and
sub
mov
in
dec
fwait
repz
adc
mov
sarb
add
call
jmp
xchg
jl
cmp
pop
jae
imul
test
mov
mov
dec
imulb
mov
pop
jp
arpl
shlw
pusha
pop
push
jge
cmpsb
mov
in
adc
jns
dec
pop
jle
add
jg
dec
mov
stc
mov
addr16
fisubrs
je
stos
cmp
jmp
dec
sub
imul
test
movsl
cmp
in
lock
mov
add
aad
scas
aam
mov
cld
mov
mov
cli
fcoml
cmpsb
addl
lds
jns
inc
dec
sub
sub
adc
test
sarb
in
cs
pop
std
nop
mov
adc
and
adc
xchg
mov
mov
sbb
sub
jb
sbb
cmpsl
lods
in
inc
movsl
xor
or
xchg
sbb
insl
or
dec
movsb
xor
dec
repz
fstps
into
mov
sub
sbb
xor
jecxz
xor
ret
cld
pop
lock
cmp
popa
popf
mov
scas
ficomps
aam
out
jmp
lcall
and
xor
cli
sbb
jp
cmp
mull
out
divl
cmpsl
and
lds
xchg
loop
dec
pop
jbe
xor
mov
cwtl
push
popa
test
adc
jecxz
push
sub
cmp
cmp
dec
aam
inc
cmpb
or
cltd
cli
inc
ret
pop
mov
lods
in
loope
push
stc
lods
negl
cmc
lods
daa
jns
test
hlt
loope
dec
dec
gs
imul
pop
xor
mov
adc
mov
xchg
out
mov
outsb
xor
mov
xchg
adc
inc
ds
cmpsb
mov
dec
mov
mov
xchg
je
rcll
mov
ss
out
mov
xor
mov
push
xchg
mov
out
mov
jo
or
call
ljmp
loope
decl
loope
cmp
loopne
out
les
pop
xor
and
stos
pop
fnstsw
inc
test
dec
jb
rorl
mov
dec
lahf
ret
pop
and
iret
pop
arpl
adc
jb
and
mov
sti
pop
adc
cmpsb
scas
sbb
leave
out
pop
push
push
into
sub
mov
pop
mov
mov
ss
mov
in
sub
repz
jl
call
rclb
cltd
mov
mov
adc
push
orb
lods
clc
jne
xchg
jp
data16
dec
push
scas
and
mov
push
in
inc
dec
cwtl
xor
and
or
cmp
loope
call
pop
fcomi
aam
xor
jmp
xchg
cmp
call
ja
lret
or
jle
add
add
xchg
jns
jmp
loopne
enter
in
mov
jne
mov
xor
popf
or
dec
ss
xchg
out
stos
fwait
sbb
push
jp
daa
mov
xor
int
icebp
jmp
sbb
adc
test
push
ss
test
cmp
test
call
mov
je
out
push
lcall
in
dec
jmp
cmpsl
mov
test
shlb
cmp
loopne
mov
sbb
outsb
inc
gs
lret
and
mov
adc
pop
jmp
in
push
xor
addb
push
fisubs
pop
stos
mov
push
pusha
jb
mov
out
jb
daa
cmp
fnsave
filds
lcall
adc
fwait
dec
imul
lret
jne
jno
pop
cmc
dec
jle
add
enter
jp
jae
mov
mov
add
push
xchg
test
pop
loop
mov
shlb
jmp
fdivr
les
or
xchg
fisttpl
cmc
roll
mov
mov
mov
movsb
imul
xchg
sub
adc
mov
cmpsl
jle
in
ficompl
pop
ljmp
mov
mov
enter
mov
xchg
dec
nop
das
dec
mov
inc
sub
sarb
fnstcw
lcall
mov
add
sbb
add
lods
xor
orb
pop
push
and
mov
test
outsb
mov
mov
xchg
jne
adc
xchg
xchg
rcll
and
push
or
loop
mov
inc
mov
mov
lret
scas
push
xchg
adc
lcall
stos
adc
aam
add
mov
in
cs
xor
xchg
adc
outsl
mov
pop
das
aas
scas
and
pop
out
or
sub
cs
ss
mov
inc
scas
test
or
jno
mov
ja
jmp
shlb
mov
inc
xor
jecxz
scas
and
shll
enter
ds
add
push
loopne
sbb
aam
jp
aaa
xor
lods
imul
pusha
and
loope
sub
adc
dec
sub
pop
mov
push
ret
add
or
push
mov
mov
popa
test
inc
lea
inc
sbb
lret
fdiv
xor
ret
fsubl
jno
push
sub
test
add
out
call
ja
add
lock
mov
pop
popa
mov
mov
adc
dec
fnstcw
es
or
xor
push
aad
rclb
mov
jl
mov
xchg
enter
pop
pop
aas
pop
xor
shl
lods
lea
inc
lahf
iret
notb
xor
iret
rolb
fwait
fwait
hlt
sysret
mov
in
pop
mov
jbe
clc
cwtl
loope
out
cmp
arpl
in
mov
loop
or
xor
sbb
or
cmpsb
cli
mov
xor
or
cmc
movsb
jmp
push
inc
lods
jl
push
pushl
pop
mov
data16
push
push
xchg
sub
fists
cmp
sub
rcrb
add
aam
leave
xchg
add
dec
sahf
inc
jb
xor
sti
stos
fwait
test
sub
in
test
test
mov
leave
push
jno
adc
fs
cld
in
mov
int
mov
mov
pop
mov
popf
xchg
pusha
cmp
dec
or
scas
pop
ljmp
aaa
and
pop
adc
mul
or
and
xchg
sti
scas
push
sbb
jae
std
lock
dec
mov
aas
in
push
cmpsb
fs
int3
cltd
in
jmp
cmpl
push
or
jb
loopne
sti
ret
cmp
jne
sbb
add
dec
xor
lahf
cmp
mov
mov
stc
test
lret
inc
bound
das
xchg
mov
outsb
out
xchg
in
clc
shlb
int
lret
lret
cmp
es
leave
rorb
dec
xchg
jae
lcall
mov
call
pop
mov
imul
repz
inc
faddl
sub
jb
or
xor
cmp
jge
sub
lret
loope
ret
dec
dec
inc
test
pop
incl
int3
push
setp
iret
int3
dec
bound
es
xchg
movsl
xor
std
addr16
and
sbb
pop
mov
mov
roll
pop
mov
jmp
pop
sbb
push
call
mov
add
xlat
fistl
lcall
jmp
test
dec
test
or
mov
arpl
pop
cmp
pop
inc
cmp
sub
xor
adc
jge
or
dec
push
imul
dec
push
push
pushf
imul
outsl
adc
mov
cmp
stos
fcoml
xchg
mov
adc
ror
fdivrp
push
imul
popf
adc
xor
mov
add
or
movsb
or
fidivl
sbb
sahf
cltd
inc
je
cmpsl
push
decl
cwtl
inc
mov
loop
add
jae
cmp
xorl
or
mov
jae
xchg
jp
call
in
xor
xorl
dec
std
pushf
mov
repz
sbb
inc
jmp
or
or
leave
out
xchg
test
sbb
pop
xchg
loop
jb
jae
fwait
std
fiaddl
and
mov
mov
loopne
push
or
mov
cwtl
outsb
dec
xchg
in
fcompl
mov
xor
inc
xor
lahf
daa
shr
ficomps
test
and
out
push
cmc
pop
xchg
addb
pushf
sub
mov
data16
enter
or
arpl
adc
subb
loop
scas
lret
sbb
xor
aam
call
mov
lods
outsb
repz
or
cmpsb
jge
jbe
pop
jae
push
pop
adc
sbbb
sahf
mov
iret
lods
sbb
int
in
adc
mov
jb
pop
addr16
inc
data16
cmp
add
mov
data16
jg
xorl
add
cmp
cli
cld
sti
push
pop
xchg
push
lods
pop
xor
push
mov
push
mov
cmpsl
mov
bound
add
stos
add
jp
xchg
xor
push
repz
lock
ret
sbbb
movsb
push
jl
lods
movsb
icebp
cmpsb
mov
xor
out
or
fs
sbb
push
je
lahf
xor
mov
dec
test
rorb
fs
adc
xchg
or
mov
add
or
xsaveopt
ret
out
jg
xor
dec
in
dec
and
mov
inc
in
jns
and
bound
inc
fbstp
fs
push
movsl
mov
testb
into
mov
push
aas
scas
icebp
movl
cmpsb
adc
ficompl
push
or
sub
lock
subl
adc
mov
cmp
cmp
iret
or
enter
pop
fs
out
xchg
sti
adc
and
mov
xlat
jne
cmpsl
xchg
dec
sbb
dec
cmp
jmp
add
fcoms
les
xor
addr16
das
pop
int3
lods
add
pusha
sub
mov
nop
and
push
int3
aad
mov
stos
sahf
stos
ret
clc
lea
jno
xchg
push
xchg
ja
inc
dec
sbb
push
cmpsl
cli
pop
cmp
push
xchg
das
movsb
dec
shlb
jne
shl
jecxz
pop
popa
or
inc
mov
mov
orb
lcall
out
or
jge
jmp
and
test
xchg
add
das
fsubp
pop
or
in
cs
incl
test
aaa
pop
hlt
roll
and
aaa
in
cmp
jno
enter
xchg
xchg
lret
in
dec
les
pop
fiaddl
loopne
mov
pusha
xchg
cmp
leave
test
cmp
lahf
or
jne
cwtl
mov
lret
icebp
jno
cmp
xchg
xlat
jp
loope
or
icebp
adc
int
sub
push
lock
hlt
fwait
and
aas
mov
jecxz
mov
adc
dec
mov
jbe
imul
dec
add
popf
jmp
mov
push
sbb
data16
aaa
lcall
xchg
dec
or
mov
loope
fbld
bound
js
mov
insb
jb
sti
stos
fs
aad
popf
lea
mov
jae
aas
xlat
test
mov
scas
mov
imul
mov
xor
sub
cltd
mov
and
jl
mov
lcall
iret
mov
push
lahf
push
aas
notb
fistl
les
lret
pop
cs
lea
in
add
out
fldcw
fcmovu
and
or
add
inc
jecxz
icebp
adc
out
add
jbe
or
sub
xor
xchg
bound
cmp
push
fimuls
inc
mov
push
in
incb
push
rcll
test
dec
aam
inc
dec
aas
mov
mov
push
add
aas
pop
cmp
mov
aad
jnp
mov
dec
flds
xor
xor
pop
std
add
lea
jmp
sub
jne
ljmp
pop
or
or
push
stos
sub
push
xor
ret
in
push
pop
or
sbb
pop
push
pop
sub
daa
mov
push
outsb
jmp
and
adc
insl
or
dec
sbb
ljmp
cmp
pop
push
pop
mov
in
sub
bound
out
rcl
sarb
ss
adc
xchg
or
fldt
rorb
or
lcall
es
push
dec
mov
fwait
test
nop
dec
rcll
xchg
inc
push
out
loope
pop
push
lahf
fcomps
push
aam
mov
ficompl
jmp
mov
xlat
xor
test
dec
ret
mov
imul
sahf
cmpl
xchg
enter
dec
pop
cmp
inc
mov
and
and
fstpt
sbb
fs
push
adc
sbb
push
sub
nop
lcall
gs
hlt
jl
popa
lahf
mov
sbb
xchg
or
test
daa
add
push
mov
bound
test
jmp
sub
mov
sub
mov
out
ficoml
ret
pop
mov
and
xchg
mov
pop
sbb
scas
add
inc
dec
lret
jns
mov
sbb
mov
std
mov
xlat
jnp
sbb
out
sub
aas
in
cmp
dec
push
mov
mov
add
stos
std
rclb
xor
jb
or
jo
repnz
iret
fstl
sbbl
jg
xor
mov
mov
test
cmp
pop
cmp
sub
pminsw
out
push
cli
xchg
xor
xchg
or
out
jl
fstpl
pop
lods
cmp
mov
xchg
jmp
stos
aaa
loopne
and
out
mov
cmc
adc
divl
pusha
cmp
ss
outsl
pop
mov
cwtl
inc
cmc
inc
and
mov
pop
sub
cmp
leave
rorb
dec
jo
mov
test
cmp
and
jbe
aas
fs
mov
push
mov
xchg
sub
sti
pop
jb
dec
add
add
cld
cmp
or
shrb
sub
inc
push
mov
iret
in
aad
push
mov
in
loopne
fsub
leave
jp
aam
sbb
push
je
shlb
xor
insl
sub
xchg
clc
or
cmp
jae
out
in
and
mov
xchg
aad
mov
ret
xchg
cmc
push
pop
xchg
adc
inc
mov
sarb
clc
adcb
cmpsb
and
add
and
add
popf
cmp
cmp
lret
jl
jecxz
pop
pop
or
sbb
xlat
jecxz
mov
mov
jbe
pushf
int3
cmp
ss
cmp
xchg
in
pushf
dec
scas
lret
cmp
out
inc
call
dec
pushf
mov
add
in
push
scas
mov
push
cli
ss
jns
xor
dec
imul
movzbl
mov
popf
mov
jp
jno
mov
bound
lods
xlat
jae
sbbl
add
ds
lret
and
jge
ret
inc
ljmp
lcall
add
test
cld
shlb
sub
imul
adc
pop
cmpsl
dec
lock
and
iret
pushf
mov
pop
fisubl
clc
adcl
add
mov
das
out
imul
mov
ja
fwait
js
hlt
jo
stos
dec
test
dec
or
addr16
or
daa
pop
insl
mov
cmp
cmp
bt
in
mov
rcll
lret
dec
scas
rcrl
dec
bound
aaa
stos
adc
adc
pop
bound
pop
jge
loop
jns
dec
mov
sub
pop
push
adc
lret
pushf
ds
dec
xchg
loop
add
and
push
pop
push
sub
outsb
out
out
cmp
mov
or
cli
cli
dec
into
mov
cltd
fmull
or
and
jno
test
cmc
nop
aad
xchg
sub
cmpsb
out
ret
jmp
rorl
std
xchg
mov
cli
dec
std
pop
fsubs
fsubs
xchg
jp
mov
fdivl
std
ret
jb
test
and
xor
bound
into
dec
sbb
imul
adc
mov
ror
sub
sbb
fdivrl
out
xor
ljmp
sahf
lret
or
fs
push
add
jle
repnz
les
loopne
sbb
out
cmp
pop
test
jns
call
mov
mov
std
pop
aam
std
test
xor
fs
push
xor
mov
mov
push
cmp
insl
or
jecxz
inc
jg
mov
xchg
mov
scas
in
xor
cmp
push
xchg
and
loopne
shl
flds
or
dec
and
mov
push
sbb
pushf
inc
mov
pop
and
mov
cltd
add
xchg
jmp
cltd
stc
fnstsw
fld
or
pusha
in
jo
sbb
xchg
sahf
jge
in
scas
adc
popa
xchg
je
icebp
rcll
mov
mov
add
nop
mov
cmp
mov
repz
test
mov
paddsw
jns
hlt
push
lahf
jmp
movsl
jl
jne
pop
mov
push
add
inc
inc
push
dec
sbb
mov
xchg
mov
cld
jae
push
lock
mov
adc
or
ss
outsb
fsubr
stos
fists
inc
xchg
data16
andb
dec
ret
mov
push
dec
cli
push
pushf
popf
mov
sub
xor
loop
lods
fistl
mov
or
jl
or
hlt
sbb
cmp
js
mov
out
push
stc
xchg
or
mov
in
imul
push
notb
xor
pop
xchg
inc
into
ss
mov
nop
sbb
and
ja
dec
xor
inc
push
xchg
mov
mov
xor
or
mov
aas
adc
fisubrl
pop
mov
sarb
movsb
cmp
lds
adc
mov
sub
loop
adc
adc
stc
or
mov
xor
push
cwtl
in
lock
jge
adc
adc
cli
leave
dec
testb
inc
adc
fnstsw
mov
sub
dec
xlat
mov
and
lds
imull
sbb
xor
ret
add
cli
xor
flds
pop
cmpsb
js
bound
pop
stos
popa
clc
repnz
jl
pushf
and
cld
lret
daa
fdivrs
sar
mov
cmpsb
loopne
mov
shrl
aaa
adc
lahf
xchg
mov
in
xorl
subl
push
adc
cmc
syscall
dec
in
inc
lds
sti
xchg
xchg
nop
insl
sub
fistpl
test
lods
fstpl
andl
or
pop
jae
cmp
xor
cmp
es
stos
jne
pop
movsb
mov
mov
adc
pop
mov
lock
ss
xchg
push
jp
xor
sbb
andl
aaa
sbb
push
push
push
popa
push
sti
cli
dec
jl
dec
xor
movsl
lea
pop
sbb
out
mov
loop
rclb
inc
mov
push
es
push
lcall
lret
pop
lahf
jnp
stos
movl
xor
fdivrs
cmpb
xchg
xor
or
inc
sbb
fldl
jmp
push
jle
cwtl
mov
das
jo
and
cmp
cwtl
dec
rol
arpl
mov
rcrb
movsb
int
jl
mov
mov
cmp
rcr
push
mov
sahf
int
mov
inc
outsb
fadd
mov
nop
call
repnz
int
or
push
pushf
fstps
sub
mov
aas
dec
outsl
mov
sahf
clc
in
repnz
push
mov
imul
cmpsl
xchg
mov
out
std
add
out
pop
int3
and
xchg
sbb
mov
sub
es
mov
cmp
cli
add
ret
jle
stos
int
jb
inc
mov
jmp
xor
ficoml
aad
inc
pop
inc
mov
cmpsb
retw
sahf
int
stc
insl
dec
xchg
and
test
aas
call
pop
add
popf
outsl
add
sub
aam
add
fnstenv
sahf
adc
dec
xchg
add
xlat
mov
test
jg
sbb
mov
push
xchg
jg
jne
push
daa
inc
mov
inc
jno
dec
pop
push
sbb
icebp
not
add
mov
xchg
fldcw
in
lock
dec
cmp
je
loop
xor
add
repz
sahf
sbb
mov
add
dec
ffree
cmpsb
insb
lea
xchg
cmp
sti
test
insw
xchg
popa
insl
xchg
adc
daa
dec
mov
orl
ficoms
outsb
shlb
fisttps
repnz
out
pop
jg
pop
mov
lahf
cmp
int
icebp
push
test
loope
mov
ja
push
lods
cmp
xchg
out
pop
jnp
pop
into
push
add
stc
mov
in
cmp
mov
pop
scas
in
xor
ss
outsb
xchg
pop
xor
push
jae
or
jae
sbb
adc
or
int3
cli
inc
inc
outsb
add
jno
xor
push
ss
pop
pop
pop
mov
insl
push
xor
cld
xchg
mov
dec
les
call
ss
and
scas
cmp
push
push
je
jne
subb
inc
pushf
mov
loop
push
and
pushf
sbb
or
push
aas
xchg
xchg
inc
push
jne
jne
push
jb
popa
sub
filds
fsubrl
mov
jmp
in
inc
jae
fldenv
push
push
jmp
je
mov
or
outsl
pop
mov
fsubrl
lret
in
pop
sbb
lret
sbb
sbb
adc
lahf
add
fcomip
andl
loopne
lea
cmpsb
fs
loop
mov
inc
jp
pop
add
sbb
add
popa
roll
das
dec
cmp
insb
xor
pop
xor
lods
cmc
jae
sbb
jmp
arpl
fstp
js
mov
cmpsb
mov
cmp
push
lock
ret
test
push
out
pop
mov
jb
lods
lods
rorb
push
gs
pop
sub
loop
fs
mov
add
adc
in
dec
or
push
leave
and
pop
daa
ds
ret
dec
pusha
ljmp
dec
mov
sbb
push
icebp
and
jecxz
jno
stos
jle
mov
lret
jnp
jnp
out
xorl
ljmp
xchg
mov
dec
jge
fcmovbe
mov
lods
xchg
mov
out
inc
in
cwtl
xchg
orb
stos
ret
dec
mov
fbstp
dec
cmp
cmc
andb
aas
mov
xchg
sbbl
test
xor
cmc
scas
xor
adc
mov
daa
sbb
and
rcrb
fs
xorb
add
sbb
jp
jb
fmuls
mov
cmpsl
adc
out
cmp
mov
ja
mov
dec
dec
aaa
pusha
mov
fstpt
sbb
pop
pop
jnp
xchg
or
or
ljmp
iret
xor
fistl
xchg
cmc
jecxz
fcmovb
mov
std
rolb
fldpi
rcr
aam
push
imulb
xchg
movsb
add
icebp
sub
xchg
cmp
adc
pushf
divb
in
cmp
dec
dec
jle
scas
cmc
mov
lret
xchg
inc
dec
std
add
ja
lods
aaa
lds
mov
jns
mov
mov
xor
xor
dec
leave
mov
jnp
mov
dec
and
cltd
imulb
jmp
mov
and
cmp
std
jbe
mov
cmp
ja
mov
cmpsb
or
fcomps
mov
or
jno
icebp
push
fmull
outsl
and
jecxz
sbb
add
or
enter
push
jmp
jp
out
fdivr
ret
rorb
sub
add
push
lret
mov
inc
xor
fmuls
pop
stos
pusha
lret
push
mov
mov
je
pop
or
lcall
fcomp
rorb
inc
cmp
out
scas
xor
mov
aad
push
jp
jae
cmp
ljmp
pop
add
add
xchg
fidivrl
sbb
mov
fidivrl
adc
mov
mov
hlt
hlt
enter
leave
loopne
lcall
add
mov
pop
mov
jmp
cmp
sbb
out
xor
cli
or
test
sbb
sbb
inc
xchg
jge
mov
cmp
push
clc
sti
jnp
lods
jecxz
xchg
std
cli
repnz
push
or
scas
fwait
xor
push
mov
popa
mov
pusha
mov
pushf
jns
pop
cmp
aaa
loop
ret
push
aam
and
jnp
mov
cli
sub
cmp
testl
dec
std
adcl
or
jo
and
pop
popa
mov
jecxz
add
lret
fdivrs
push
iret
rcl
adc
jae
fisttpl
pop
fimuls
xchg
mov
sbb
rolb
sub
adc
mov
lret
inc
fisttpll
test
pop
adc
pop
or
in
cmp
repnz
iret
test
sbb
imul
or
sbb
mov
movsb
stos
mov
pop
popa
test
ret
mov
push
filds
outsb
xlat
push
inc
leave
and
pop
lock
cwtl
jno
lcall
les
insb
mov
dec
mov
into
test
cmp
xor
and
or
ds
fsubs
adc
daa
sarl
sbb
xchg
cmp
ds
mov
adc
xor
pop
icebp
call
sub
bound
and
test
jg
jl
jle
dec
pop
mov
fstpl
mov
repz
mov
inc
sub
mov
mov
leave
cmp
mov
hlt
jae
rorb
mov
and
or
inc
adc
fabs
stos
es
xchg
inc
xor
mov
mov
shr
aam
sub
adc
rcll
test
push
and
dec
add
dec
pop
cs
add
pminub
push
movsb
into
mov
cli
idivb
pop
mov
and
jb
pop
xor
pop
mov
adc
adc
sbb
test
dec
outsl
out
sbb
inc
and
arpl
mov
jge
inc
std
jmp
jmp
cltd
sbb
jbe
imul
cltd
jg
icebp
sub
jge
xor
or
cmp
add
dec
and
and
call
loopne
stos
inc
inc
mov
jnp
psubb
pop
push
ret
adc
out
cmp
lds
inc
int
loopne
add
xchg
scas
push
pop
sbb
outsl
sbbb
fwait
lahf
inc
mov
push
jle
adc
in
jmp
dec
popf
lret
jp
rcl
mov
outsl
loopne
mov
jle
int3
mov
sti
mov
and
pushf
adc
int
jbe
sbb
sub
xor
mov
push
xor
faddl
pop
rcrb
imul
mov
adc
push
cs
stos
outsl
xchg
xchg
stc
in
dec
icebp
fwait
jae
adc
mov
test
enter
jnp
into
push
filds
push
fwait
dec
or
fists
test
movsl
mov
aad
mov
data16
insb
aaa
test
notl
es
out
mov
ss
xor
cmpb
xlat
cmp
mov
lods
adc
hlt
loop
stc
jmp
add
sub
popa
and
lret
mov
shr
imul
sbb
jbe
popl
xchg
and
in
mov
lcall
hlt
and
stc
adc
test
out
push
lcall
sub
mov
push
pop
fwait
sbb
in
pushf
mov
mov
cmp
xchg
and
adc
push
dec
fwait
and
das
aas
into
gs
bound
sbb
add
mov
xchg
mov
jo
adc
outsl
dec
fs
dec
adc
mov
xlat
push
das
aaa
bound
push
and
dec
cmp
daa
xchg
scas
mov
xchg
fnsave
mov
dec
mov
shl
push
pop
hlt
adc
insl
push
and
sub
mov
ss
mov
andb
dec
mov
or
inc
imul
notb
sbb
dec
push
mov
lret
ret
sbb
mov
sub
sub
gs
xor
and
pop
cmpsb
pop
sbb
inc
fcoms
adc
xorl
push
ficoml
mov
pop
adc
cmp
adc
aaa
ss
dec
into
movb
jns
add
jp
push
push
addl
in
xor
divb
sbb
inc
call
jecxz
shlb
in
movsl
push
lcall
jge
sbb
jge
jmp
mov
inc
dec
inc
shrl
mov
mov
push
or
pop
divb
rcrb
daa
les
adc
jno
cltd
xor
add
push
stos
fmull
xor
xor
jge
lods
mov
int
out
mov
jle
and
or
or
mov
outsl
test
popf
sbb
or
test
stos
sbb
add
push
enter
push
gs
mov
xor
mov
or
and
pop
clc
push
cmp
inc
jo
popf
stc
xchg
repnz
insl
stc
test
test
test
cmp
call
mov
sbb
pop
push
stos
push
mov
xchg
mov
cmpsl
cmpsb
fsubrl
push
dec
sbb
inc
lock
mov
hlt
mov
add
dec
testb
push
into
test
aad
mov
xchg
cmpsl
arpl
shr
add
cli
pop
adc
clc
pop
aam
sbb
test
mov
ret
pop
ret
jb
std
test
xor
adc
mov
mov
orl
sbb
repz
ret
std
xchg
daa
movsl
shll
xchg
cmp
iret
mov
inc
aaa
or
and
fwait
and
lods
clc
or
push
test
stos
lcall
lret
cmp
dec
dec
cwtl
loopne
sbb
xor
sahf
push
fwait
das
loope
fidivrl
push
add
xor
test
enter
mov
push
add
push
fidivrs
pop
rcrb
push
ja
xchg
roll
sbb
and
popf
icebp
push
adc
jno
scas
pop
je
mov
cmp
nop
mov
lcall
clc
jmp
mov
out
xorl
les
mov
or
xchg
imul
arpl
cmp
xor
push
enter
leave
push
mov
lret
fisttps
pop
das
cmp
fcoms
or
hlt
mov
aad
ret
push
int
jecxz
inc
jl
push
fcmovnbe
or
mov
xchg
bound
jg
leave
and
popa
enter
addr16
xchg
bound
cmpsb
push
add
add
fwait
pop
jno
loop
and
mov
xor
add
or
mov
jne
outsb
or
roll
mov
lcall
dec
inc
lret
push
and
pusha
shl
mov
rcll
xchg
hlt
jge
adc
mov
xor
arpl
xchg
mov
mov
dec
add
xchg
pop
imul
or
out
enter
shr
xor
sub
cmpsb
fsub
jmp
adc
or
and
xor
in
push
push
or
dec
xor
shlb
sbb
ret
leave
pop
mov
jecxz
pushf
out
pusha
inc
lock
mulb
popf
js
jb
mov
cmpb
fsubl
or
pop
loop
adcb
das
push
outsb
lcall
movsb
pop
movsl
je
mov
push
out
xchg
notb
jecxz
xor
std
inc
mov
add
dec
pushf
idivb
inc
enter
dec
adc
shl
daa
push
aaa
inc
sub
mov
dec
cwtl
mov
push
jnp
cmpl
mov
jle
ds
lea
adc
sbb
in
mov
and
jmp
push
andb
push
sbb
lea
inc
mov
mov
fwait
pop
dec
inc
add
cs
push
mov
sbb
and
les
popa
mov
push
jnp
fcomps
cmp
sbb
inc
sub
inc
stos
jg
das
jno
mov
push
sbb
jb
inc
inc
aas
add
jns
inc
pop
arpl
sarb
add
les
xacquire
add
aad
aaa
test
out
pop
cld
xlat
es
stos
outsl
popf
call
mov
and
shrb
xchg
add
scas
mov
mov
sbb
dec
enter
outsb
adc
js
lea
mov
jp
roll
jl
fnstenv
lods
arpl
or
out
sub
loopne
cmp
mov
test
pop
mov
jl
pop
out
shll
lds
lahf
in
mov
push
mov
daa
add
nop
add
and
cltd
sahf
loopne
xchg
fstl
xchg
inc
jns
pop
inc
pop
pop
dec
aas
jno,pn
mov
xor
shr
mov
sti
inc
lods
sub
cmp
cwtl
test
mov
sbb
mov
or
test
iret
cmp
data16
lea
lock
in
push
cmp
inc
test
jecxz
mov
gs
in
xor
ss
rcr
imul
aas
pop
repz
push
hlt
or
adc
dec
inc
xor
mov
push
sahf
jne
ret
test
gs
lret
mov
lds
lret
popa
or
mov
cmp
sub
jle
out
and
xchg
movsb
mov
stos
sbb
dec
outsl
shrb
jne
inc
pop
jae
push
jmp
scas
insb
xor
pop
pop
xor
jb
fsts
loop
jmp
sti
rclb
and
adcl
jns
pop
stc
insl
outsl
jne
push
push
je
jno
pop
jns
mov
xchg
jb
test
push
mov
push
pop
shr
mov
mov
adc
shrl
cmp
cs
das
mov
mov
addr16
sbb
jle
jg
mov
mov
mov
fidivrs
movsl
and
rcl
push
loop
pop
out
clc
mov
fwait
in
ljmp
mov
xchg
pop
shr
sub
mov
lds
enter
add
cmp
push
sbb
cmp
in
sub
cs
repnz
loop
outsl
cmpsl
and
in
add
inc
stos
pop
add
mov
lea
sbb
mov
push
mov
fistl
dec
mov
test
cmc
xlat
xor
imul
aam
cmp
or
out
aas
sbb
xchg
mov
roll
inc
mov
repz
mov
mov
fldenv
and
addr16
inc
pushf
sarb
stc
xor
pop
jmp
subl
out
lret
sbb
pop
pop
push
mov
filds
or
int
or
xchg
in
mov
arpl
mov
loop
cmp
adc
out
es
add
pushf
pop
add
rolb
sub
jns
scas
jo
inc
push
adc
cmp
fsubrs
xor
mov
push
and
lret
clc
into
mov
mov
in
sub
jb
jb
nop
sti
int3
mov
add
jg
mov
xchg
add
gs
in
or
je
repz
aam
add
push
pop
shrl
cmp
aad
jb
add
xor
mov
mov
popa
cmpsl
cli
add
daa
mov
pop
mov
call
mov
sbb
cwtl
add
ljmp
ja
mov
pop
fs
testl
and
rcrb
cli
mov
aas
test
lock
test
lcall
test
sti
cmp
jns
mov
sbb
repz
cwtl
cmp
inc
inc
ds
push
rcrb
lret
test
xchg
stos
je
jge
inc
shll
mov
mov
or
pop
test
push
subl
cwtl
lcall
and
cmp
cwtl
pop
jb
push
jno
pop
push
mov
in
fwait
ljmp
cmp
fimull
lock
adcb
imul
das
mov
mov
pop
nop
mov
dec
test
insl
int3
xchg
fcmovnu
or
call
das
out
inc
adc
test
inc
add
mov
push
push
iret
or
mov
mov
ja
push
push
ret
add
or
jo
inc
mov
push
add
insl
sbb
rcrb
mov
sbb
jle
sub
cli
daa
inc
fnstsw
repnz
mov
pop
dec
fsubs
divb
pop
add
push
cmp
mov
adc
add
arpl
inc
mov
jmp
das
daa
imul
sub
adc
dec
sbb
aam
aaa
insl
sbb
jl
iret
imul
sub
arpl
data16
aas
fidivs
or
fwait
cmp
aad
xor
lcall
incl
les
mov
fcmovbe
sahf
xchg
inc
stc
std
mov
stos
xor
stos
jge
lea
iret
mov
lds
ljmp
lcall
mov
xor
dec
sub
lods
fisubs
sub
std
dec
push
sbb
rol
xchg
sub
les
mov
or
xor
imul
pop
inc
movsl
hlt
sub
and
aad
rcrb
xchg
push
push
popa
shll
sahf
xor
jge
jno
loop
or
dec
imul
imul
mov
loope
jg
test
dec
adc
popf
dec
aas
cli
insl
push
je
push
adc
mov
jmp
fs
arpl
lret
push
push
and
scas
shrl
cmp
mov
mov
mov
inc
imul
pop
loope
jp
and
out
fmull
ret
sbb
push
jge
mov
xor
and
jnp
jmp
insl
lahf
repz
sub
repz
xor
loopne
mov
addb
mov
fdivrl
ljmp
xlat
cmp
lcall
insb
int
adc
sarb
sub
out
jae
loop
js
fsubr
xchg
xor
or
xor
add
or
rcrb
xor
jbe
dec
clc
data16
fcoml
js
es
xor
bound
pop
dec
cmp
mov
and
cli
movntq
test
or
sub
xchg
scas
mov
mov
fdivl
jl
test
jno
or
mov
pop
pop
fs
cmpsl
out
xlat
imul
xchg
hlt
sbb
insb
arpl
or
rorb
fwait
push
push
jle
jge
cmpsl
inc
cmpsb
pop
push
cmpsb
aam
push
int
out
xor
xchg
lods
in
in
xor
inc
movsb
xor
jecxz
loopne
pop
fldz
das
es
ljmp
cmp
lret
addb
mov
dec
hlt
cmp
es
xor
fldcw
lret
lock
lret
shrl
aas
mov
cmc
inc
jns
ss
test
jmp
cwtl
xchg
cld
sbb
aam
rcrl
imul
ljmp
adc
mov
push
mov
sub
inc
mov
or
jle
xor
inc
push
fdivrl
orl
jae
or
jle
jp
loop
lock
lds
push
shll
push
rorl
fnstcw
push
jl
jns
lcall
add
dec
jge
lret
pop
aam
scas
adc
outsl
jns
daa
jle
or
pop
test
addl
in
je
pop
lret
xchg
sub
xchg
je
mov
mov
loope
pushf
aas
inc
mov
scas
jecxz
adc
mov
notb
inc
and
js
ret
je
and
pushf
mov
jecxz
cmp
jle
add
jne
test
mov
ja
lea
inc
fs
mov
sbb
test
out
jmp
mov
shll
cli
mov
or
aas
test
mov
into
out
nop
lret
mov
push
jp
ret
or
mov
outsb
push
jl
sub
xor
int
mov
cmp
mov
sub
pop
stos
pushf
gs
jbe
mov
into
jecxz
cmp
negb
shrb
push
adc
adc
imul
in
sbb
roll
sbb
pop
imull
xor
inc
or
mov
shl
mov
inc
xor
pusha
jg
faddl
pop
ret
lret
cmp
cmpsl
jb
lods
pop
jnp
xchg
imul
pop
lcall
or
imul
add
xchg
mov
lds
jns
sbb
inc
out
jbe
out
or
ss
cmp
shr
aad
xchg
movsb
sub
jae
aaa
or
stos
and
jne
icebp
xor
mov
lahf
xchg
test
fildl
and
sbb
insb
hlt
sti
add
in
mov
fsubp
outsb
jae
mov
lods
into
in
std
mov
dec
shll
add
sbb
mov
or
pusha
mov
mov
pusha
lock
add
jo
dec
aaa
setl
outsb
cmpb
nop
ljmp
test
lds
js
push
lds
mov
adc
outsl
mov
vunpckhps
insl
cli
call
pop
enter
aad
mov
movsl
insb
lods
lahf
loop
mov
push
and
js
jecxz
scas
adc
jge
fwait
testl
mov
xor
xchg
add
hlt
inc
fildll
xchg
cmp
lret
out
mov
cmp
or
popf
push
mov
and
mov
xchg
and
subb
jp
xor
fdivs
pop
inc
test
dec
xchg
mov
leave
push
mov
cmp
outsb
xor
jns
in
jecxz
xchg
lods
leave
jne
adc
inc
fbld
lods
ret
and
adc
iret
cli
shld
inc
jg
fs
test
push
sbb
loopne
sub
pop
mov
adc
sub
call
mov
loopne
pop
int3
inc
pop
jg
repnz
repz
into
mov
pop
add
outsl
jns
dec
repnz
iret
inc
and
hlt
test
pushf
fprem
ret
in
sbb
mov
sbb
addr16
orb
stos
popf
loopne
inc
stos
ret
mov
mov
flds
jp
mov
add
out
sbb
xor
insl
testl
dec
push
xchg
rorb
lods
xchg
pushl
nop
mov
mov
pop
int3
cmp
std
cmp
rclb
pop
mov
mov
xor
fs
sub
mov
push
iret
cltd
dec
shlb
loope
dec
leave
jae
and
add
pop
stos
sbb
dec
jb
mov
xlat
sbb
xchg
mov
pusha
sti
mov
stc
icebp
sub
add
pop
imul
insl
into
add
mov
fisubl
mov
push
push
lret
xchg
push
mov
mov
dec
mov
pop
mov
inc
popa
std
imul
in
loope
stos
cmpsl
aad
ret
sub
repz
aad
sub
lock
popa
popa
dec
fsubl
adc
into
stos
mov
ja
xchg
push
pop
dec
mov
cmovle
adc
and
test
mov
test
sbb
cld
fucomip
cmpsl
aas
xor
fstpl
xorl
roll
scas
cmpl
shl
f2xm1
push
inc
mov
outsb
ljmp
in
notb
mov
xlat
cs
mov
ret
dec
cmpl
cmp
call
jo
testb
or
and
lock
jo
ljmp
in
jo
lahf
and
fwait
xchg
mov
mov
sub
cmp
xor
shl
mov
and
es
nop
pop
cltd
pop
mov
xor
jmp
sbbb
push
and
std
add
sub
mov
mov
sbb
outsb
fldenv
mov
icebp
mov
or
orl
push
inc
cli
push
out
jp
add
cmpsb
sbb
mov
sti
mull
lahf
xor
xchg
jae
test
aaa
cwtl
movsl
in
mov
jb
sub
das
sub
cmp
inc
ficoml
mov
inc
and
cltd
rcr
xor
and
lods
je
jnp
movnti
pushf
xor
mov
inc
test
gs
stos
rcl
movsl
jecxz
leave
adc
fisttpl
das
sarl
xchg
scas
pusha
jns
mov
xchg
sbb
adc
adc
adc
mov
jns
push
ret
lret
arpl
or
imul
sub
dec
adc
xor
int3
aas
lret
jbe
or
sub
dec
dec
out
mov
and
and
and
and
or
mov
in
rorl
and
sub
add
xchg
adc
mov
xchg
inc
add
or
out
iret
fmuls
stc
stc
push
movsl
push
lret
icebp
sub
and
inc
and
loope
f2xm1
in
and
ficoms
addr16
ret
cmp
jg,pn
pop
mov
rorb
mov
mov
ss
stos
pop
test
mov
sub
push
jnp
push
stc
lret
dec
sub
int
or
xchg
mov
sarl
test
lret
adc
loop,pt
pop
lods
lock
ret
jb
push
pusha
sti
nop
lds
pop
aas
cli
popa
push
loop
mov
fidivl
pop
sahf
ja
arpl
mov
or
outsb
das
mov
sub
and
leave
jae
loope
adcl
sarl
cmpsb
jl
pop
mov
jp
push
adc
pop
aam
arpl
sub
cmp
dec
pusha
fcomps
aaa
notb
je
pop
addb
scas
or
stc
mov
push
enter
dec
push
in
mov
pop
dec
fwait
and
mov
aad
xorl
sar
insl
aam
push
test
nop
xor
cwtl
push
inc
pop
lahf
jnp
arpl
addl
cwtl
add
imulb
rcll
xchg
loope
lods
mov
add
outsl
xor
ja
pop
jmp
idiv
mov
mov
cmp
cwtl
mov
aas
cmpsl
and
push
sub
cmp
cmp
lret
cli
push
mov
arpl
inc
add
mov
mov
cmp
pop
dec
add
push
adc
je
cmc
jbe
ret
or
incb
or
inc
add
es
popa
imul
adc
and
jge
cld
pop
loope
repnz
roll
out
loop
xchg
arpl
jno
xchg
stos
orl
pop
add
jmp
push
push
out
cmpsl
mov
cmc
inc
fldt
mov
dec
ret
adc
inc
mov
dec
mov
daa
sub
jle
xlat
shll
push
jmp
nop
leave
dec
push
mov
fsubrl
pop
out
add
push
rolb
int
mov
gs
xchg
ret
pop
inc
sti
sbb
mov
fcompl
sbb
daa
mov
sbb
repz
popa
aad
rolb
cmc
add
or
mov
mov
jle
insl
cmp
mov
cmpl
clc
popf
jnp
lret
shll
test
adc
mov
jmp
out
andl
jb
sub
fnsave
mov
push
test
xchg
pop
sbb
test
push
pop
xchg
mov
into
roll
xchg
sub
pop
jl
inc
lea
cld
sub
ret
lea
testb
mov
add
mov
mov
push
jecxz
push
jno
aaa
insl
ja
jp
call
inc
jmp
dec
adc
negl
xor
mov
pusha
sbb
in
push
lea
mov
adc
andl
iret
sub
ds
jmp
mov
je
add
popa
pusha
mov
inc
not
sbb
or
adc
outsb
rorl
imul
test
aaa
outsb
cmp
xor
adc
ss
jge
test
add
mov
lds
sti
test
xchg
jbe
mov
into
xchg
lods
andl
adc
mov
fldenv
decb
fucom
ret
cli
push
inc
mov
mov
ds
inc
cli
in
jb
and
push
dec
or
pop
insl
fidivrs
ret
xchg
inc
xchg
aad
mov
lret
mov
sbb
jge
mov
movsb
test
sub
pop
cmp
fmull
xor
cwtl
fadd
lret
std
popf
lods
adc
xchg
gs
cmp
inc
aaa
inc
sti
and
hlt
jmp
hlt
aas
mov
test
sub
pop
pop
jae
xchg
mov
jae,pn
adc
fadds
pusha
cmp
shll
xor
jne
inc
sbb
cmpsl
jo
lods
cwtl
dec
ret
xor
ret
sub
push
xchg
daa
int3
test
pop
lods
jg
and
test
lret
loop
inc
out
hlt
lock
pop
push
insl
dec
shrb
pop
add
mov
inc
push
or
popf
addr16
inc
popf
mov
js
iret
imul
lcall
and
ss
rcl
sub
call
fdivrl
cmpb
loope
jecxz
cmp
mov
cs
push
popa
int
outsl
push
out
lahf
js
in
mov
in
or
mov
lahf
xchg
hlt
sub
or
and
aaa
shrb
repz
and
leave
cmpsl
cmp
inc
aas
movsl
stos
outsb
sbb
lahf
lret
xchg
mov
mov
xchg
adc
pop
sahf
add
lods
dec
cmp
xlat
aam
fwait
shrl
outsl
fst
fmuls
and
stos
lret
dec
dec
stos
jle
imul
xor
inc
push
mov
loopne
sub
inc
push
enter
adc
jmp
sbb
add
test
inc
outsb
insb
xchg
aam
cmp
mov
dec
testb
arpl
adc
clc
fidivrl
inc
and
out
pop
hlt
push
std
adc
in
rclb
int3
call
int3
mov
leave
testl
out
gs
into
inc
cmp
data16
cld
jnp
xor
lods
dec
xchg
mov
ljmp
and
in
cwtl
pop
xor
xchg
mov
dec
mov
sar
add
les
ret
lret
cwtl
jnp
and
pop
pop
adc
adc
bound
mov
bound
in
je
in
pop
arpl
xor
ljmp
aad
mov
xchg
dec
repnz
sbbl
adc
pusha
jnp
mov
je
cmp
outsl
jmp
push
jb
add
lret
scas
or
or
fwait
xchg
into
cmp
nop
fs
pop
lds
jmp
mov
pusha
inc
mov
dec
and
and
scas
xchg
test
push
addr16
test
pop
dec
sbb
mov
adc
pop
fisubrl
test
into
add
mov
scas
pop
and
push
aas
movsl
mov
data16
andb
add
and
cmc
popf
inc
clc
enter
cli
mov
cltd
in
xchg
dec
dec
mov
andb
into
xchg
outsl
xchg
dec
or
jne
xchg
pop
jecxz
out
mov
andl
lods
enter
test
and
scas
fwait
cmpsb
mov
mov
sbb
insb
dec
hlt
out
jbe
sbb
fsubrs
inc
push
in
cmc
vcvtss2sd
inc
daa
aas
hlt
aaa
pop
fwait
sub
test
lock
mov
mov
inc
das
sbb
inc
pop
sbb
lahf
or
mov
in
sub
inc
ret
fstl
rorb
xchg
xor
cmpsl
out
gs
lods
xor
xor
pop
jbe
lahf
mov
pop
jge
fbld
fidivs
hlt
mov
and
movsb
and
pop
dec
lock
lods
adc
ds
xor
add
pop
jge
sub
orb
jp
das
fisttpl
jbe
testl
adc
jg
adc
mov
out
lea
jg
mov
push
push
inc
jecxz
cwtd
lcall
cli
jne
inc
push
push
je
inc
shlb
iret
cwtl
and
sub
or
inc
rcrb
test
cmpsl
loope
and
push
mov
sbb
loop
pop
xor
pop
mov
nop
loopne
pop
inc
ljmp
and
fisubrs
inc
subb
or
ja
inc
testb
push
push
mov
or
adc
int3
lahf
adc
mov
and
out
out
popf
pop
outsl
and
inc
or
aaa
jecxz
push
cmp
fs
push
push
adc
and
sbbl
mov
cs
and
jmp
cwtl
xor
ret
push
outsb
nop
pop
cmpsl
xor
lds
call
cmp
in
mov
sub
or
cmp
xor
pop
jge
fsubr
test
cmp
mov
mov
cmpl
pop
pop
push
mov
cltd
ljmp
jl
sti
test
iret
into
mov
loopne
aad
jo
dec
outsb
nop
pop
cmpsb
lods
out
push
ficoms
fwait
sub
int3
push
cmc
mov
mov
ss
rcrb
push
test
gs
in
ljmp
cld
add
or
inc
sbb
push
push
imul
xor
and
xor
stc
or
lret
jne
inc
mov
das
out
mov
sbb
jne
enter
movsl
insl
cmp
inc
das
and
jns
mov
rclb
xchg
cli
das
subl
pushf
fldl
subb
jne
adc
xor
out
jbe
and
ficoml
mov
push
dec
lods
sbb
push
lar
add
sbb
repnz
adcl
inc
dec
mov
dec
pop
sub
pop
inc
add
jb
dec
fisubrs
out
add
outsb
ret
cs
clc
add
pushf
mov
hlt
rcrl
cmp
adc
or
fcomps
sbb
push
aam
data16
sbb
mov
xor
adc
repz
scas
fwait
dec
fistps
xor
push
push
jbe
xor
enter
mov
pop
stc
and
inc
dec
lods
add
aam
pop
adc
inc
push
jbe
push
pop
addl
mov
push
pushw
outsb
inc
xor
cmpb
scas
dec
add
test
fldcw
lods
ljmp
sbb
adc
sub
cmp
push
test
sub
test
scas
out
mov
je
and
adc
imul
jno
lret
and
cmpsb
inc
cmp
push
add
jp
push
in
and
in
xchg
push
icebp
push
mov
pop
dec
addl
loopne
clc
mov
call
outsl
push
pop
sub
scas
push
out
inc
mov
adc
insl
cmp
jno
ds
ljmp
mov
jp
in
repz
notl
call
ss
lock
pop
data16
or
xchg
clc
imul
lcall
clc
pop
jle
ds
inc
leave
stos
xor
addr16
loope
aas
xchg
jl
inc
outsl
outsb
inc
outsl
adc
imul
jae
adcl
fnstenv
and
int
popf
inc
adc
out
jl
inc
cmpb
sub
jne
sub
pop
and
mov
dec
lahf
ds
test
mov
mov
popa
js
xchg
shl
mov
cmpsl
lea
jp
mov
hlt
xor
dec
xor
sub
popa
icebp
pop
dec
push
xchg
pop
cmp
pop
jbe
mov
xchg
xchg
sahf
bound
fcoml
xchg
sbb
xlat
xor
jmp
or
icebp
pop
push
clc
out
mov
adc
push
jae
mov
fisubrl
sbb
jns
dec
mov
lds
push
add
in
sti
sahf
sub
pushf
pop
cmp
pop
jl
and
mov
out
rcrl
dec
sbb
popf
sub
shll
lock
lret
outsl
xor
hlt
ja
push
test
and
out
cmp
dec
shlb
jo
mov
sbb
jp
mov
add
rcrb
mov
mov
jmp
aas
fmull
out
xor
aas
fst
xchg
ds
xor
pop
in
push
daa
mov
mov
ds
pop
push
jb
sub
mov
sbb
and
push
pushf
push
ss
sub
cwtl
sbb
adc
out
and
test
xor
dec
shll
cmp
dec
push
jl
jg
inc
push
jle
xlat
jbe
push
in
lods
lds
cmp
xchg
mov
ret
push
sub
movsb
xor
mov
inc
jl
idivb
loopne
shr
push
lret
pop
and
mov
cli
mov
fidivrl
andb
pop
loop
adc
cmp
popl
push
int3
daa
sbb
ds
sbb
sbb
movsb
sbb
push
jmp
push
mov
push
addr16
pop
push
xchg
mov
nop
sbb
dec
mov
cmp
and
jp
fildll
pop
inc
push
aaa
add
lret
jl
push
or
push
adc
cmpl
dec
ja
add
stc
icebp
out
xorb
xchg
push
jecxz
fldl
int
sub
mov
push
es
jg
jae
int3
in
dec
add
and
sub
popa
and
mov
sub
sub
push
pop
inc
dec
fbld
mov
mov
xor
jl
mov
rolb
mov
sbb
hlt
aad
js
push
add
mov
imul
rcrl
enter
mov
xchg
inc
lahf
mov
jo
jle
repz
int3
fistps
inc
mov
mov
mov
fisubrl
jle
cmp
cli
stos
xor
jbe
xor
mov
das
sbb
push
mov
loopne
mov
dec
mov
and
mov
dec
lret
repnz
imul
pop
fnstcw
jnp
xchg
lock
inc
xor
ret
fnsave
orl
push
pop
mov
and
jmp
xchg
pop
std
mov
lret
ret
out
add
std
insl
fistl
in
lret
lret
stos
popf
fisubrs
ret
push
int
pop
rorb
rcll
cmc
cmp
dec
xor
add
int
jl,pn
out
std
mov
dec
xchg
cmp
sbb
test
mov
lret
cwtl
inc
pop
mov
jae
mov
xchg
mov
mov
clc
push
mov
mov
fst
negl
cli
pop
ret
iret
add
out
fdivrs
pop
ss
pushf
mov
sahf
fnstsw
aaa
mov
arpl
or
jg
xchg
mov
popa
rclb
pop
je
sbb
enter
mov
shll
sbbb
and
cld
arpl
out
shlb
insl
push
mov
aaa
ficoms
xlat
mov
lahf
enter
mov
jns
jo
inc
out
adc
push
mov
mov
aaa
into
or
cmc
out
mov
or
mov
mov
aam
push
jo
adc
add
fldenv
fnstsw
xchg
imulb
jne
xchg
adc
repnz
jno
ret
mov
dec
jp
adc
mov
imul
push
xor
out
mov
in
inc
imul
jb
add
mov
lcall
xor
push
test
add
jae
mov
out
inc
pop
jo
dec
call
lret
orb
jmp
cld
divb
inc
mov
or
inc
mov
shll
push
std
daa
xor
out
out
sbb
dec
das
ds
bound
fnsave
or
mov
xor
push
or
ja
xorb
mov
fimuls
jl
sub
rclb
imul
jmp
xchg
cwtl
inc
mov
xchg
in
fiadds
jbe
stos
daa
xchg
cmp
xlat
or
stc
mov
hlt
in
inc
mov
mov
shrb
cmc
push
ds
sub
in
cmpl
sub
shlb
cld
jno
cwtl
cmp
add
in
jecxz
cmp
or
lea
cmpsb
rcrb
or
mov
or
jl
hlt
scas
xor
repz
arpl
int
adc
ja
xlat
imul
scas
movsb
imul
ja
xchg
add
je
xor
mov
adc
cmpsb
pop
push
out
xchg
push
sub
leave
xor
jne
lods
pop
test
push
shrl
and
clc
dec
rorb
and
inc
jno
call
adc
aad
rcrb
outsl
pop
xchg
xor
jp
jo
lcall
ds
pop
xchg
insb
arpl
int3
add
scas
push
inc
pop
imul
shlb
jns
push
pusha
pop
pop
insb
sbb
shrb
cmp
fs
int3
add
icebp
adc
jne
and
dec
gs
add
dec
sti
dec
mov
inc
jne
movl
jae
mov
cwtl
add
mov
dec
or
test
push
scas
add
enter
mov
sbb
push
mov
dec
loopne
ffreep
or
push
add
repz
jmp
lret
and
or
dec
insb
cs
lret
jl
and
aam
dec
cmp
pop
stos
inc
rcr
sbb
add
icebp
jnp
movsb
pop
sbb
xor
aas
test
jmp
movsb
pop
dec
adc
xor
xlat
in
cltd
test
sub
xor
iret
mov
por
in
inc
scas
test
inc
push
sbb
in
and
aaa
and
jns
and
loop
jb
dec
sub
sbb
fstpt
nop
call
popf
and
or
insb
xchg
fnstenv
pop
aam
or
push
in
push
ret
xor
dec
mov
loope
mov
inc
nop
lcall
mov
in
add
int
ret
and
aas
dec
int
jne
mov
pop
push
mov
fwait
push
lret
fnstenv
mov
xchg
sbb
std
in
jl
out
push
sbb
aad
test
xor
jge
fldcw
loop
add
and
into
sub
rorb
cmp
dec
or
fsubrs
faddl
inc
pop
jae
scas
into
lret
cld
xchg
addr16
push
or
sbbl
fucomp
js
inc
call
sub
aad
mov
mov
dec
add
mov
adc
in
dec
mov
xor
pop
mov
mov
aad
cs
aas
gs
push
sub
dec
mov
sahf
lea
push
popf
sbb
dec
sbb
lcall
xchg
inc
pop
xor
xor
add
inc
outsb
adc
ja
inc
or
mov
jmp
sbb
testb
leave
imul
cmpsl
test
and
cmc
sub
cmp
xchg
add
sub
roll
lcall
popf
push
data16
push
xor
mov
movl
in
into
pop
push
fs
mov
lahf
lret
mov
pop
dec
jo
outsl
xor
push
into
popl
fidivrs
jl
or
pop
addl
ljmp
les
sbb
icebp
sbb
inc
pop
xchg
loop
cmpsl
xchg
jnp
in
xchg
push
ss
out
cwtl
lds
aam
xchg
mov
push
insl
adc
sbb
mov
outsl
and
ljmp
pop
mov
push
mov
push
mov
es
pop
xchg
lahf
call
xrelease
addl
js
lock
mov
mov
push
jnp
test
mov
mov
fs
xor
cmp
iret
ficoms
ret
mov
and
mov
fsubs
loop
inc
cs
loope
jb
sbb
pop
push
sub
cmp
dec
sbb
adc
mov
movsl
sbb
inc
cmc
cmp
andb
out
xchg
mov
jb
jno
adc
leave
in
xchg
pop
imul
pop
sbb
xor
mov
cs
in
icebp
jecxz
aad
pop
jg
ds
inc
dec
cmp
add
mov
push
or
push
in
xor
xchg
dec
jle
adc
and
je
lds
push
and
hlt
sahf
jo
mov
enter
jb
ss
mov
outsl
sbbb
add
jne
mov
or
push
or
jecxz
xor
mov
popa
orb
cwtl
jg
out
out
pop
cwtl
das
bound
xor
aam
in
xlat
push
es
cwtl
movsb
mov
fisubrl
sbb
ss
pop
lods
fisubs
mov
in
jo
out
aas
fcmovb
cld
outsb
mov
xor
or
out
mov
hlt
je
leave
sbb
cmp
or
scas
repnz
icebp
inc
jl
xchg
and
cltd
enter
add
test
aas
and
mov
sbb
addr16
jnp
mov
roll
sbb
mov
inc
add
int3
push
mov
push
aam
mov
repnz
stc
adc
imul
stos
pop
jns
inc
gs
push
mov
lds
jle
lds
and
ss
shrl
xor
iret
sbb
sbb
cmp
es
push
insl
gs
mov
scas
mov
sarl
enter
adc
or
push
imul
jmp
gs
jl
push
fnsave
loope
vmovdqu
jno
daa
out
or
jne
clc
test
inc
pop
and
pop
or
bnd
inc
pop
popa
adc
fiaddl
sub
lods
cmp
xchg
add
sub
sbb
cmpsb
mov
dec
fs
lds
lea
adc
sub
mov
dec
adc
test
or
cmp
movsl
jbe
in
enter
call
fmull
cmp
loopne
pop
dec
jo
xor
xchg
insl
and
rcrl
movsl
sbb
andl
aad
mov
and
adc
sahf
push
adc
jmp
scas
mov
inc
adc
sub
addl
adc
jmp
js
ret
test
sub
push
rorl
mov
inc
lret
xor
dec
add
sub
mov
and
je
xorl
mov
sub
cmpsl
movsl
pop
sar
xchg
inc
or
pop
xchg
enter
adc
dec
push
inc
pop
sub
testl
sub
and
xor
out
mov
es
sbb
lahf
lcall
sub
mov
sbb
sub
inc
adc
push
xchg
sbb
cmp
push
mov
sub
imul
adc
popa
dec
jp
int3
popa
jae
mov
fisubrs
mov
sbb
cmpsb
push
adc
les
int3
das
sbb
push
out
and
mov
mov
data16
cmpsb
lock
add
mov
pop
cwtl
jnp
pop
es
data16
and
sbb
dec
stos
addr16
movsb
rcrb
adc
jmp
rcl
es
call
std
or
pop
mov
jbe
lock
rolb
mov
notl
inc
lock
or
xchg
add
and
sahf
push
pop
sbb
inc
push
jbe
cmp
in
stos
pop
mov
dec
cmc
lret
movsl
data16
xor
and
mov
fcoms
lock
lock
clc
pop
movsl
mov
loop
sub
xor
dec
dec
cmc
mov
fnstcw
lds
push
jl
mov
dec
fdivr
or
xchg
cmc
cmp
je
pop
cwtl
jns
cmp
mov
int
inc
jno
std
fwait
mov
lods
inc
and
iret
dec
push
lcall
lock
fldt
repz
les
cltd
or
loop
cwtl
dec
outsb
sub
rclb
dec
jno
cmp
add
aas
inc
sub
inc
mov
add
or
add
movsl
push
push
out
das
sahf
adc
push
push
mov
gs
es
imul
jle
insb
cmp
rcl
fs
ljmp
lds
iret
or
pop
in
push
imul
dec
shlb
mov
dec
lret
fisubrs
repnz
ret
push
push
sub
sub
xorb
clc
jno
sub
adc
mov
cmc
inc
idiv
push
and
jg
cmpsb
push
push
xchg
loopne
shl
jecxz
cmp
push
lods
pop
lcall
mov
xchg
lea
jp
scas
pop
daa
mov
iret
jge
push
cmc
mov
outsl
shl
test
rorl
test
adc
in
sbb
sbb
inc
das
inc
inc
jp
ljmp
xor
xlat
filds
fcomps
lods
int3
fwait
hlt
insl
pop
lods
pop
jo
in
ret
and
pop
scas
inc
repz
rcrl
cmp
cs
bnd
test
sbb
and
out
sbb
mov
subl
cld
inc
out
mov
out
fnstcw
sub
xchg
adc
daa
mov
es
loope
negl
mov
ljmp
stos
jmp
jp
sbb
repz
cmp
dec
ljmp
fadd
ljmp
mov
sti
scas
or
mov
sbb
mov
push
adc
cmp
sub
mov
pop
repnz
xor
mov
adc
repz
enter
xor
rcr
iret
lcall
ss
mov
inc
inc
xchg
sahf
cmpsl
mov
outsb
mov
jae
das
dec
out
jecxz
testb
shll
sbb
jnp
mov
push
bound
inc
cmp
dec
aam
insb
pop
dec
movsl
nop
loope
test
jmp
mov
adc
xchg
lea
jecxz
sbb
mov
or
adc
das
push
mov
pop
test
xor
xchg
enter
add
inc
cmc
mov
cmp
lea
cmpsb
daa
dec
ss
adcb
cs
insl
push
xor
arpl
fdivl
cmpsl
lret
adc
lods
and
ljmp
xor
stos
pusha
xchg
mov
push
or
das
sbb
popf
mov
push
mov
enter
arpl
mov
push
dec
lock
loopne
movsb
push
pop
add
gs
movsl
sbb
and
inc
add
ds
hlt
xchg
adc
push
and
mov
push
lahf
push
pop
sub
ret
jbe
jl
xchg
lea
hlt
mov
cmp
imul
out
inc
sub
lret
clc
inc
jge
jle
repnz
fxch
xchg
popf
cmp
add
fsubrl
fisubs
mov
out
out
lock
inc
cmp
cwtl
adc
les
add
mov
sbb
cli
negl
in
das
mov
sub
ret
dec
pop
mov
mov
fistpll
xchg
cmp
mov
rcll
push
or
fimull
add
rolb
imul
div
and
pushf
mov
ja
loope
stos
test
loop
fucom
xor
push
push
mov
dec
ror
leave
ret
test
js
xchg
aam
in
xor
push
pop
cmpsb
dec
mov
xor
push
in
fidivrl
shl
sub
sti
push
add
add
test
inc
push
add
or
mov
inc
enter
notb
aaa
rcrl
fwait
mov
adc
fcomp
test
cmp
adc
sti
jae
push
test
sub
sub
push
flds
cld
inc
jne
pushf
arpl
push
ret
or
pop
cmp
inc
in
cmp
gs
xchg
add
stos
xchg
inc
scas
push
push
in
das
ficomps
ror
xchg
sarl
loopne
inc
xchg
inc
jns
sarb
out
test
or
push
and
inc
lret
jge
mov
push
es
dec
mov
loope
jns
stos
mov
enter
movsl
dec
cmpsb
mov
out
sahf
jno
and
sti
xchg
insb
in
movsb
aam
push
enter
ficoml
les
mov
lock
inc
or
lock
jmp
aas
out
nop
mov
pushf
fcmove
add
notb
jne
jge
icebp
mov
stos
xchg
leave
sbb
mulb
inc
sbb
cli
cmp
lret
sbb
insb
les
xor
sbb
inc
hlt
cmp
test
test
sbb
popa
out
mov
lea
lret
test
mov
mov
mov
das
mov
mov
inc
push
jo
inc
inc
mov
add
cmp
cld
dec
lock
xchg
test
dec
stos
das
sbb
lahf
lcall
in
dec
push
mov
test
leave
push
rcrb
sub
fwait
ss
dec
or
lret
mov
nop
cmp
add
mov
sbb
push
jne
pop
adc
outsb
add
aam
scas
fisttps
pop
push
cmpsb
mov
mov
into
imul
daa
test
adc
or
fistpll
add
jo
data16
cld
subl
int
nop
inc
sbb
in
dec
jb
mov
stos
pop
mov
pop
xor
or
stos
enter
sahf
add
out
daa
add
jnp
dec
xchg
int
lcall
xor
and
out
push
fistl
ss
and
stc
dec
ja
rcrl
dec
sub
inc
sbb
mov
mov
xchg
or
sti
hlt
loope
cltd
jbe
shl
xlat
fbld
andb
rclb
daa
pop
pop
fdivp
ljmp
pop
rolb
inc
push
mov
mov
sbb
loop
out
ss
jb
out
inc
mov
mov
jg
dec
ljmp
sub
jmp
add
lcall
imul
cmp
fyl2xp1
jno
jno
sbb
jg
outsb
aam
test
xor
jmp
out
jne
xchg
aas
mov
sti
pusha
into
jl
call
repz
ja
bound
inc
je
and
fbld
stc
xchg
xor
push
add
fmuls
out
pop
xchg
ficoml
lcall
dec
sti
xor
pop
adc
mov
popa
mov
lock
xor
inc
jl
stos
popa
movsl
addr16
sarb
push
push
and
inc
dec
dec
lds
aas
fisubrl
xchg
adc
insb
outsb
out
daa
adc
lock
cmp
inc
cmp
mov
fwait
sbb
sub
into
into
aaa
repz
jb
insl
ss
cmpsl
and
sti
sbb
loope
test
das
jmp
mov
cli
push
aad
push
cs
lock
into
push
sbb
das
cmpsb
ds
es
push
in
out
lret
out
sbb
xchg
clc
das
jns
lcall
inc
call
rolb
jns
add
ljmp
pusha
sbb
shll
jmp
scas
call
sbb
cld
call
xchg
test
scas
ljmp
xor
adc
mov
inc
out
cmp
addr16
xchg
in
adc
and
dec
adc
adc
dec
xchg
inc
ret
adc
lods
or
ss
jg
mov
sbb
add
fdiv
je
or
mov
aaa
jp
stos
popa
adcb
adc
jp
mov
or
in
arpl
jns
fmuls
jmp
pop
jae
nop
bound
adc
out
inc
xchg
adc
mov
stos
mov
call
insb
popf
int3
add
mov
std
aaa
loope
subl
loop
cmp
lahf
lcall
push
xchg
dec
outsb
and
jl
push
push
add
jnp
shl
lods
sub
and
inc
cmp
repz
fdivs
loope
mov
and
lea
test
add
ds
push
mov
into
or
jne
movl
aad
hlt
inc
outsl
outsl
pop
xchg
mov
or
pop
push
iret
mov
or
jne
sub
mov
vmread
xchg
cmp
cld
test
push
inc
xchg
pop
add
das
xor
sar
imul
sbbb
xchg
sti
push
int
leave
lcall
add
pop
outsb
aam
mov
mov
inc
sbb
loop
aaa
inc
je
mov
pop
aam
mov
push
cmpsl
fistl
inc
test
aaa
and
sahf
mov
jns
pop
std
cmp
aaa
mov
cmc
jp
pop
test
cmp
mov
outsb
mov
fstpl
inc
dec
lret
repz
pop
into
addr16
xchg
or
fmull
shr
ss
orl
jecxz
add
cmpsb
int
xchg
cmp
mov
fdivr
cmpb
in
pop
out
mov
xchg
enter
das
dec
cli
loope
and
repnz
and
jmp
mov
stos
push
pop
scas
pop
sahf
mov
addr16
sub
hlt
pusha
inc
arpl
jbe
mov
xor
in
lret
idivb
mov
xor
lcall
push
push
xchg
xor
push
xor
test
lahf
cmp
or
int
dec
sub
or
cmc
repnz
cmp
pop
je
xchg
lods
insb
xchg
ret
push
daa
cltd
pop
cmp
aad
in
xchg
cmp
sub
and
jmp
adc
sub
or
jp
xlat
xlat
push
addr16
aam
test
sbb
mov
pop
repz
mov
pop
lock
push
adc
shll
cmpsb
scas
pop
cmp
push
push
imulb
inc
nop
mov
and
fldl
out
cld
sti
stos
sbb
in
pop
inc
bound
jns
mov
mov
xchg
mov
push
pop
fildll
sbb
push
pop
enter
jnp
inc
shl
fcoml
pop
jmp
hlt
jnp
sbb
jp
pop
pop
jle
inc
call
mov
mov
js
fdivp
mov
lods
dec
pushf
or
out
mov
cmp
pop
les
out
je
jae
pop
sub
push
lcall
and
leave
mov
adc
mov
insb
sub
pop
cmp
pusha
pop
jmp
push
xchg
xchg
mov
jo
lcall
aam
lock
push
scas
adc
mov
or
dec
mov
aad
jae
movsl
dec
cli
aam
pop
scas
shrl
aaa
cmpsb
aas
pop
add
sarl
mov
mov
adc
mov
cmp
daa
pop
add
xor
ljmp
repz
shlb
add
dec
jbe
movsl
fisttps
test
in
jmp
cmp
jae
icebp
dec
push
sub
pop
lds
or
cltd
adc
jns
or
sub
xor
fdivl
test
testb
cmove
shr
lahf
imul
cmp
xor
jg
and
mov
insb
pop
add
mov
xor
addr16
inc
lock
xchg
out
xchg
mov
xchg
adc
sub
ret
mov
and
adc
push
mov
lret
push
lahf
inc
mov
push
and
lds
loopne
lret
dec
ds
sub
jle
icebp
jge
aas
mull
scas
inc
movsl
sbb
pop
sti
mov
and
ficompl
jbe
aad
inc
rorb
in
loope
and
xchg
jmp
jbe
call
je
push
lret
test
in
adc
gs
mov
or
sti
mov
std
in
or
xchg
sub
scas
push
mov
vpunpcklqdq
cmc
or
loope
push
stos
jns
pop
push
xchg
testl
in
sti
cmpl
scas
sbb
mov
sbb
cltd
neg
repnz
cwtl
jl
jle
mov
mov
add
movl
insl
call
lods
dec
pop
and
mov
leave
test
adcb
xchg
loop
aas
fs
std
in
or
fcoml
cli
inc
aas
mov
lea
add
push
imul
les
push
test
nop
lcall
mov
das
dec
mul
push
test
xchg
jno
adc
les
mov
xor
xor
cltd
rolb
jmp
loope
clc
inc
leave
into
pop
scas
adc
pop
xor
dec
addr16
inc
dec
lea
es
das
dec
mov
cmp
lcall
mov
jge
or
fidivrl
jbe
nop
xor
mov
or
xchg
loop
mov
xor
jecxz
or
xchg
mov
and
push
and
in
inc
mov
fildll
dec
dec
inc
mov
sti
popf
push
rcrl
jb
push
sar
add
adc
mov
pop
inc
leave
imul
adc
inc
les
mov
mov
data16
adc
adc
adc
cmpb
xor
cmp
pop
dec
jne
push
fidivl
scas
lret
fs
xlat
xor
popf
sar
push
adc
fnstenv
mov
jnp
outsl
jg
sbb
mov
inc
mov
push
sbb
sbb
or
jle
test
out
sub
or
cmpsb
push
mov
jbe
pop
repnz
shl
or
std
scas
xchg
sbb
inc
inc
cs
or
sbb
aam
pop
push
mov
mov
pop
add
out
jo
popa
shlb
dec
push
lock
jecxz
leave
fdivr
jbe
enter
jnp
lret
sarl
cs
pop
adc
das
insb
lods
lock
cs
xchg
int3
push
dec
pop
cmp
test
cmp
rep
lock
push
cmp
ja
es
lcall
stos
xchg
mov
jns
leave
pop
xchg
cs
test
fcom
adc
shlb
into
xlat
or
and
xor
popa
js
cltd
and
rep
cli
mov
loope
xchg
inc
xchg
mov
out
add
xor
fsubs
add
fistpll
jb
lret
enter
push
xor
out
insb
inc
xchg
ret
dec
pop
clc
xchg
cmp
add
rcl
jmp
or
or
xor
sti
std
push
or
cld
add
pusha
and
push
cmp
loopne
dec
cmp
cld
rdtsc
sbb
dec
shll
push
cmp
xchg
subb
in
outsb
leave
into
pop
out
xchg
add
xor
pop
mov
pop
mov
dec
inc
add
icebp
jnp
lods
in
xlat
rclb
push
mov
cwtl
cmp
frstor
into
pop
pop
add
movsb
loopne
lds
jp
pop
cmp
and
add
daa
inc
ljmp
xor
xor
loopne
inc
inc
imul
xor
mov
mov
mov
sub
jl
sbb
jmp
int3
stos
imul
insb
andl
xor
enter
in
pop
jae
lea
mov
dec
fst
and
push
jp
js
test
mov
xchg
icebp
xchg
inc
push
stos
mov
loopne
jl
popf
pop
fmull
pushf
jg
jae
push
dec
add
mov
repz
inc
and
jae
jno
jbe
dec
adc
gs
or
pop
in
or
pusha
or
push
and
mov
push
es
cs
out
jo
dec
xchg
cltd
flds
les
fstl
or
lea
ja
int3
mov
enter
in
or
jle
pop
loopne
lret
lds
cltd
or
test
sub
and
jmp
or
mov
icebp
aas
rol
hlt
rorb
mov
or
dec
mov
jp
js
push
imul
mov
sti
stc
add
aad
fucom
pop
jne
inc
enter
popf
aam
incl
xor
js
and
jecxz
cmpsb
xchg
fiadds
or
cld
enter
in
lret
bnd
sub
clc
cmpsb
out
sbb
fisubs
imul
xlat
mov
orl
adc
mov
push
push
mov
and
aaa
jecxz
and
or
cmc
ror
sbb
popf
js
ret
lods
es
mov
push
mov
mov
ret
xchg
xbegin
and
ret
insb
cmp
push
out
push
mov
popf
rorb
sub
lods
adc
pop
or
lcall
ds
cmp
mov
push
sub
xchg
adc
inc
scas
test
fwait
sbb
jp
repnz
xchg
mov
arpl
adc
test
bound
daa
push
cmpsb
push
out
cmp
les
add
out
push
mov
push
test
xchg
das
lock
jb
iret
adc
sbb
lret
adc
stc
xchg
inc
mov
mov
inc
popf
ret
mov
mov
aas
psubusw
xor
add
sarb
adc
in
dec
or
mov
cld
adc
jne
clc
sbbl
cmp
pop
mov
cmp
in
orl
leave
mov
loope
js
gs
cmpsl
mov
pop
sub
aaa
pop
cmp
movsl
push
fcomps
or
lods
inc
mov
jl
mov
repnz
iret
cmpl
jecxz
or
aaa
mov
mov
mov
out
jo
jns
outsb
mov
aad
mov
insl
xchg
fisubl
shrb
mov
mov
cmpsl
hlt
sbb
xchg
loopne
das
out
sub
push
jg
and
jae
cmp
mov
fdivrp
jg
xchg
pop
dec
and
arpl
adcb
dec
mov
leave
or
dec
adc
inc
sbb
fistps
call
xchg
mov
pop
shlb
sub
jnp
sarb
inc
jge
mov
call
mov
cli
adc
push
or
push
sbb
fs
adc
rorl
push
mov
mov
sbb
test
pop
jne
mov
xchg
mov
std
rcrb
inc
xor
cld
dec
lods
test
cmc
push
adc
add
xor
adc
ret
xchg
inc
js
jge
mov
sti
inc
pop
out
es
imulb
aas
mov
stc
mov
xchg
jns
and
icebp
inc
dec
aaa
or
pop
pop
mov
arpl
cmp
jg
pop
mov
jecxz
nop
call
nop
and
ljmp
push
lock
jbe
and
rolb
or
xchg
fnstcw
stos
push
pop
bound
push
jmp
pop
popf
inc
jae
xchg
dec
add
test
push
pop
jmp
test
adc
xchg
addr16
ja
xor
rcrl
popf
clc
out
pop
fs
lret
mov
push
cmp
js
cld
icebp
in
cmp
pop
ret
arpl
adc
pop
aas
push
push
push
jp
test
and
cld
push
or
movsb
push
or
notb
popa
jne
leave
jo
xchg
dec
xchg
sub
test
testb
int
and
push
pop
jge
xchg
mov
lods
jl
je
outsb
push
and
mov
pop
std
sbb
or
mov
or
push
enter
or
lea
les
lds
cwtl
mov
mov
mov
and
xor
sbb
dec
pop
xor
jne
adc
mov
jb
pop
mov
sub
sbb
cltd
lret
lea
fsubrs
fnsave
mov
pop
sbb
adc
sub
subl
mov
repz
sbb
leave
xor
int
movsb
lcall
lahf
jns
cmp
dec
jle
dec
cmp
add
cmpsb
shr
xchg
pop
or
incl
lret
fwait
sub
movsl
call
sub
int3
mul
mov
pop
fs
fsubrs
fisubrl
je
sub
pushf
fidivrl
mov
sub
sub
bound
outsl
imul
ss
lret
loope
divl
pop
mov
notl
std
xor
or
loopne
inc
lea
mov
pusha
xchg
cs
push
sub
fwait
notl
push
gs
sub
stc
into
inc
push
movsl
xchg
xor
and
or
mov
lods
adc
fmul
sbb
cmp
imul
pop
adc
enter
xchg
xchg
hlt
inc
lret
mov
out
filds
and
in
sub
and
push
daa
fildl
int3
cmpsl
mov
xchg
push
jecxz
or
push
jnp
cmpsl
cmpsl
push
push
cld
xchg
aaa
mov
iret
xor
lret
pop
jl
xor
xor
adc
mov
push
xchg
jnp
xor
sar
jl
sbb
push
stos
bound
ret
and
out
ljmp
rorb
aad
mov
mov
cwtl
int3
push
pushf
jno
inc
push
invd
icebp
xor
push
or
dec
mov
xor
das
inc
mov
ret
or
sub
aaa
adc
mov
scas
sbb
xchg
dec
mov
psraw
daa
ret
fiadds
rclb
pop
bound
adc
in
fldenv
jns
lods
push
add
inc
sub
and
dec
adc
pop
mov
pop
cmp
mov
sbb
adc
pop
shrb
imul
push
or
mov
es
fwait
add
nop
jne
cmc
mov
nop
sub
es
stc
repnz
rcl
push
out
sub
out
shll
cli
mov
cmp
in
cld
xor
add
in
cmp
dec
adc
sbb
icebp
jmp
imul
mov
jge
and
sahf
push
dec
bound
pop
pop
mov
pop
and
inc
divb
insl
fnstsw
gs
fisubrs
dec
mov
cmp
out
inc
jnp
ret
stos
ret
fs
sbb
jnp
lea
pop
pop
js
subl
cwtl
jl
mov
jg
in
sarl
mov
sub
ss
push
idivb
inc
aaa
jns
adcb
aad
jmp
jae
test
add
pop
mov
push
push
cmp
imul
lea
mov
out
ret
ror
call
and
ret
movb
xchg
and
sbb
ljmp
add
repz
pop
out
lods
inc
sbb
ss
inc
sbb
mov
ss
sbb
inc
stos
sahf
repz
out
sar
sbb
ret
inc
mov
lret
sarb
pop
mov
in
cmp
jb
xor
cltd
add
movsb
cmp
jp
push
je
outsb
xchg
stc
stos
out
cmp
lret
and
ret
stos
and
bound
push
in
sar
sub
loop
aad
cld
inc
cmp
in
rol
dec
lret
pop
push
mov
sub
cmpsl
cltd
dec
xor
aaa
push
int
push
or
sub
sbb
daa
jne
fs
rcrl
lret
cmp
or
cwtl
xchg
push
jb
aaa
dec
out
hlt
imul
cmc
je
sbb
fbstp
imul
sti
push
nop
fucom
cli
inc
repz
test
ret
cmpb
pop
push
rolb
lret
push
or
adc
xor
lahf
je
add
push
stos
cs
jg
xchg
push
js
negl
push
fsubs
sbb
mov
jns
cmp
ljmp
gs
sbb
out
dec
insb
mov
out
js
and
pop
push
mov
pop
in
pop
xor
adc
cmp
sbb
aad
adc
pop
mov
jo
sbb
xchg
cmpsb
mov
adc
es
pop
lds
mov
outsb
sub
mov
dec
jmp
popa
outsb
stos
sub
sti
pop
jmp
mov
movsl
sub
jae
lods
enter
sub
pushf
sub
or
xchg
in
mov
test
adc
xor
sub
push
jno
pusha
jg
lret
sbb
xchg
jge
sbb
sbb
loop
iret
lds
sub
mov
cmp
movswl
ud0
cmp
adc
mov
cwtl
fs
jl
rcr
and
inc
fisubrs
and
vcvtpd2psx
fisubl
sahf
lahf
int
enter
fsts
mov
mov
inc
mov
mov
stos
fxch
lods
dec
pusha
je
jge
sbb
lods
call
movsl
xor
test
xlat
test
adc
pminub
loope
adc
xor
insl
popa
xor
push
mov
aad
or
cmpsb
inc
daa
jecxz
ja
nop
mov
cmp
ror
push
add
sub
fcmove
jmp
repnz
cmp
sar
test
lods
mov
outsb
mov
pop
lret
adc
aas
pushf
scas
scas
nop
and
xor
scas
push
mov
xor
rcll
or
adc
out
xchg
cltd
xchg
lcall
notb
jle
jne
jmp
pop
xor
mov
mov
cwtl
xchg
add
push
mov
in
and
je
cmp
jmp
fdivs
leave
lea
test
push
push
mov
and
xor
adc
xchg
inc
push
pop
mov
add
in
cmovg
and
or
cltd
xchg
pop
xchg
mov
adc
xor
nop
inc
jge
in
mov
andb
and
dec
dec
notl
and
movsl
rorb
fs
and
ficompl
or
icebp
ret
lret
jge
inc
xchg
sahf
fildl
sub
inc
fimuls
jmp
xor
test
fistps
test
adc
scas
sub
cmp
lret
cmp
push
push
aad
and
insb
into
sbb
jecxz
ret
xor
xor
lods
daa
scas
xchg
xchg
sub
dec
jg
push
fbstp
dec
insb
test
pop
add
rcll
or
mov
inc
je
xor
or
negl
mov
sbb
ret
and
lcall
int3
and
sub
clc
inc
stc
imul
mov
and
adc
cmp
cmp
imul
xor
out
or
push
dec
jnp
insb
imul
out
cwtl
sub
test
xchg
inc
shll
fyl2x
in
lock
cmpsb
xchg
mov
push
sub
stc
out
std
repnz
outsl
pop
xor
and
inc
shlb
imul
aam
pop
inc
jbe
cltd
xchg
xor
xorl
mov
movsb
ja
aam
in
lret
adc
xor
loop
mov
sbb
rcrb
cmp
pop
xor
in
ljmp
xchg
cmpsl
dec
bound
mov
mov
cmp
sti
and
pop
cmc
xchg
cmp
inc
scas
nop
jle
dec
mov
cwtl
mov
out
push
xor
inc
sbb
mov
negl
mov
lcall
loopne
popa
jno
imul
ss
push
out
and
jns
dec
scas
sahf
pop
mov
cmp
sbb
pushf
add
out
and
sub
les
cmp
call
push
enter
fsubrp
adcb
pop
stos
arpl
cwtl
faddl
inc
jle
pop
je
test
ret
test
mov
fcmovnu
jge
fstl
xchg
shrb
or
in
aas
test
cld
jae
sti
cwtl
in
xchg
cld
xchg
pushf
in
rcll
sbb
push
cwtl
jge
inc
ret
in
cmp
push
pop
inc
loopne
or
sub
cmp
outsb
mov
mov
jne
test
jl
push
shl
insb
movsl
push
and
mov
sarb
mov
and
lret
cmp
and
cmp
jecxz
flds
ds
cs
jl
movsl
out
inc
push
outsb
outsl
sbb
xchg
ss
sub
mov
loop
sub
icebp
fiaddl
sbb
leave
aas
mov
jo
and
xor
movsl
repz
dec
rorb
adc
xchg
test
dec
loopne
jbe
test
jle
mov
mov
mov
lret
inc
cmp
add
inc
cld
std
clc
or
aas
mov
cs
sbb
adc
mov
sub
sbb
xor
enter
mov
inc
and
mul
ja
rclb
insl
xchg
jle
in
sti
dec
push
addr16
pop
pop
in
dec
mov
dec
lahf
inc
mov
inc
out
cmpb
jb
push
add
cli
out
mov
sti
mov
arpl
lcall
arpl
xor
cwtl
out
mov
insb
lcall
adc
loopne
cmp
movsb
ret
outsb
out
xchg
pop
popf
enter
lret
lods
enter
repz
xor
dec
repz
in
push
cmp
enter
mov
pushf
mov
outsl
mov
lcall
pop
jmp
fbld
pop
push
aam
out
ljmp
mov
and
and
adc
movsb
ljmp
xchg
xchg
pop
stos
adc
sub
cmpb
lea
cmp
fldl
pushf
movsl
mov
dec
enter
arpl
lahf
test
adc
sub
push
xlat
inc
movsl
lds
push
push
int3
push
scas
out
mov
adc
push
push
aas
cld
int3
lahf
pop
pushf
enter
or
push
adc
cld
clc
mov
daa
pop
iret
mov
pop
les
test
inc
mov
sbb
push
push
and
inc
mov
xorb
clc
push
loop
xchg
pop
and
xor
mov
pusha
xor
fsubs
pop
and
lcall
icebp
or
cmp
mov
subl
mov
call
into
push
mull
xchg
test
pusha
cmp
fwait
int
aaa
sbb
dec
dec
adc
mov
jbe
in
shll
ja
xor
cmpsl
out
or
jl
or
pop
fs
sbbl
test
cmc
mov
lcall
push
sti
mov
fnstsw
push
mov
imull
call
dec
or
into
insl
push
push
cltd
and
and
aam
adc
xor
inc
imul
lds
sbb
sbb
icebp
es
insb
push
lret
idivb
js
clc
jns
jmp
loopne
push
and
xor
sbb
testb
jo
sbb
pusha
pop
or
outsl
stc
add
xchg
lcall
out
adc
arpl
ja
std
jbe
pop
inc
out
hlt
cli
cli
mov
pushf
cmp
enter
idiv
xchg
push
inc
clc
jle
pop
adc
aaa
push
mov
jge
sub
dec
inc
push
mov
into
mov
push
adc
adc
fsubrs
mov
stos
adcl
mov
cmp
jo
test
dec
inc
xchg
cmp
sti
scas
mov
jo
or
cmpsl
adc
loope
mov
insl
push
xor
gs
adc
xchg
movsb
inc
xor
fmuls
jno
das
add
cmp
inc
int3
scas
or
scas
ss
out
stos
mov
add
xor
mov
jge
stc
inc
mov
pop
adc
cmp
xor
mov
sbb
in
inc
jae
mov
aam
or
push
add
out
mov
and
push
pop
and
pop
xor
push
cmp
add
push
xchg
cli
push
cmpsb
mov
cmpsb
pop
jle
dec
adc
mov
xchg
mov
les
loope
xchg
icebp
mov
test
jp
sahf
xchg
sub
mov
push
into
dec
inc
divl
push
ficoml
inc
dec
dec
lcall
jl
insb
std
pop
or
shr
popf
sti
sub
leave
sbb
jle
add
lahf
repnz
shll
pop
clc
xlat
xchg
push
push
sub
insl
sbbb
jb
lahf
pop
push
mov
loopne
mov
xor
xor
xchg
stos
xchg
sub
out
test
ffree
gs
inc
cmpsb
jl
dec
fwait
jns
mov
pop
lock
jne
lock
mov
mov
jb
jecxz
sbb
add
mov
jle
in
cmp
mov
hlt
and
jp
mov
push
cs
stos
rclb
adc
jo
out
out
cmpsb
jecxz
inc
mov
cmp
lds
leave
je
lea
cmp
fldl
stc
mov
inc
sbb
push
mov
inc
loope
mov
jns
leave
inc
sti
mov
fidivs
jne
out
sbb
sub
mov
mov
call
push
add
repz
or
push
loope
cltd
mov
mov
aad
or
jg
jg
sarb
jb
jns
sbb
dec
in
sbb
es
mul
outsb
and
fldl
fiadds
xor
cmpsl
pop
lods
sub
lock
imul
cmc
add
lods
mov
insb
or
cmp
and
xchg
cmpsb
adc
dec
pop
lcall
mov
or
int
xchg
in
dec
cltd
int
movl
fcomps
adc
enterw
mov
adc
mov
dec
mov
or
or
arpl
std
xor
filds
repnz
cwtl
iret
mov
xchg
mov
into
mov
int3
rcrb
inc
inc
std
adc
aaa
stos
mov
data16
aas
fsubl
mov
mov
inc
jmp
movsl
dec
orb
lods
lcall
test
jne
pop
pop
out
pusha
mov
lea
add
pop
jle
in
repz
dec
pop
sarb
call
ret
and
ss
loop
cmpsl
push
pop
push
and
movsb
pop
lods
sub
mov
sub
pop
unpcklps
ja
jns
pop
or
fsubrs
mov
in
popf
fimuls
sub
ja
xchg
xor
fbld
dec
pop
dec
sbb
pushf
push
pop
xchg
idivb
pushf
cmpl
insb
leave
xor
movl
push
bound
lods
cmp
enter
fidivrl
sbb
and
or
insb
xchg
adc
push
aam
mov
iret
add
daa
xchg
pop
dec
mov
mov
dec
loope
sahf
pop
or
pop
fs
and
out
orb
pushf
jmp
outsl
jecxz
clc
push
shlb
dec
dec
test
into
add
xor
bound
nop
and
add
mov
mov
and
fisubs
push
jo
adc
and
sub
fistl
mov
cmp
jb
rcrl
mov
jne
mov
push
jnp
ret
xchg
mull
adc
sub
leave
mov
pop
out
ss
stos
jecxz
mov
sbb
mov
ret
sti
mov
sti
mov
movaps
xchg
push
jp
pushf
and
push
cmp
call
sahf
aaa
fs
sbbl
shrb
inc
test
mov
clc
push
mov
repnz
leave
jmp
push
test
dec
dec
lcall
aas
dec
daa
mov
call
lock
fistps
and
rcll
cli
lock
sub
or
add
pop
mov
adc
and
sahf
xchg
pop
ja
xor
loope
pop
idiv
leave
fbld
jns
icebp
jmp
or
test
sub
adc
stos
sbb
idiv
fisubs
and
ret
jb
mov
sahf
aas
fstpt
mov
mov
roll
mov
enter
gs
test
sub
mov
mov
push
pop
dec
insl
push
mov
movsl
pop
xor
sub
cmp
sbb
shrl
test
cld
pop
jg
aaa
cli
loop
jp
shl
ficoml
leave
add
cmp
dec
or
inc
pop
push
into
sub
pop
inc
movsb
test
sti
mov
jle
push
js
into
or
sub
or
mov
adc
enter
rclb
adc
lods
add
cli
pop
fnop
xchg
nop
jmp
das
jle
mov
pop
or
daa
xor
out
xor
sub
insb
scas
shll
movsb
mov
mov
jge
dec
rorb
sahf
popa
pop
adc
rclb
cmp
mov
arpl
stc
dec
mov
push
insb
std
lods
outsb
popa
xchg
jecxz
sbb
shlb
ss
daa
cmp
cwtl
lods
adc
push
mov
arpl
jae
xchg
add
mov
pop
outsl
pop
and
out
jbe
mov
jae
iret
loop
cld
js
imul
jae
inc
pop
loop
icebp
jbe
stos
clc
icebp
out
sti
mov
push
push
lret
fsubrl
orl
sahf
mov
push
xchg
push
mov
jg
xor
idiv
rorl
std
cmp
mov
out
jb
push
xchg
sahf
fisttpll
xor
lea
jl
sbbb
rcrb
cli
icebp
mov
loop
jmp
movb
or
sbb
int
and
sbb
jge
ficomps
or
jg
cmpsl
cltd
in
mov
stos
mov
lods
mov
movsb
into
pop
cmp
jmp
xchg
xor
fcomi
and
ds
or
divl
dec
popa
xchg
clc
xchg
sbb
lds
mov
push
jb
cmpsb
int
sub
sbb
push
loope
mov
je
sub
cmpsb
and
es
rcrb
mov
cld
and
sub
lods
scas
push
aam
icebp
clc
mov
mov
stc
and
xchg
movsl
jae
inc
pop
adcb
fwait
cmp
lds
and
add
push
cmp
sub
sub
push
adc
push
xchg
loope
jae
out
lret
arpl
push
shll
sub
icebp
or
xor
dec
rorl
aad
jns
loope
inc
dec
fisubs
mov
imul
mov
add
dec
jl
adc
outsl
addr16
pushf
in
mov
cmp
add
ret
out
in
sub
fdivs
pop
pop
add
das
idivl
pop
and
mov
bound
jmp
dec
outsl
clc
inc
cmpsl
shrl
pusha
sub
cmc
scas
cld
mov
in
sti
das
mov
mov
pop
jnp
cmp
mov
pop
xchg
ja
roll
sbb
fldcw
and
inc
mov
es
jmp
xor
fiadds
jno
xlat
cmp
cld
jo
sub
sbb
aad
stos
cld
inc
adc
add
and
xchg
xchg
mov
adc
mov
testl
loop
loopne
sub
jge
xor
std
mov
arpl
ja
int3
jl
cltd
add
xchg
cld
test
xchg
jno
or
adc
fucomip
cwtl
gs
fmull
and
es
or
mov
xor
xchg
dec
mov
jg
inc
sub
shll
insl
lret
pop
scas
cmp
xchg
fstl
and
pusha
aad
je
aad
and
adc
push
clc
push
or
add
jo
lock
fimuls
loopne
sbb
jo
adc
mov
mov
jne
adc
xchg
stc
or
cmp
push
push
ret
lds
decb
or
mov
xor
mov
imulb
sub
push
popa
inc
mov
jae
or
inc
sbb
sbb
cld
nop
cs
xor
rorl
lcall
push
nop
loop
test
sbb
rorl
jae
outsb
pop
xor
jno
shrl
xchg
cmp
pop
mov
mov
repnz
mov
adc
int3
inc
jg
jno
fisubs
pop
or
movsb
sub
and
lds
nop
sbb
popf
dec
mov
xor
push
mov
cmp
sbb
sarl
inc
cmp
push
ja
add
xor
or
int
mov
xchg
addr16
stos
cli
mov
out
arpl
jl
sub
fnsave
lcall
std
repz
mov
mov
inc
fnstenv
test
lret
inc
xchg
lods
outsb
enter
sbb
fmuls
pop
pop
out
mov
pop
int3
pop
xchg
shrb
adc
jb
push
imul
xor
scas
dec
mov
rorb
mov
push
gs
or
inc
cmp
push
fstp
pusha
xchg
shr
iret
add
nop
xchg
arpl
cwtl
and
inc
adc
mov
jns
mov
jecxz
or
and
cwtl
aad
and
es
std
mov
or
les
and
jmp
mov
sub
mov
mov
mov
mov
dec
roll
jge
mov
loopne
into
insl
mov
cld
push
test
sbbb
push
into
mov
mov
sub
sbb
mov
in
add
dec
pop
ds
fidivl
es
fmull
icebp
fcomps
in
adc
push
jns
lds
push
pop
mov
sub
add
les
jge
xchg
flds
cmp
or
subl
jo
adc
jl
dec
cmp
push
shrb
cmp
decb
imul
jns
loop
inc
jae
sub
cmp
mov
xchg
testb
lret
repnz
mov
idivl
mov
cmp
xor
cmp
mov
arpl
add
pop
pop
fstps
sbb
add
mov
jnp
push
xor
jge
out
dec
push
cmp
jl
inc
add
adc
ss
mov
mov
pop
aaa
jno
mov
xlat
push
hlt
fsubrl
imul
mov
push
push
jg
lods
mov
xchg
push
stos
jle
outsl
ret
mov
adc
mov
leave
jle
adc
mov
cmp
adc
mov
sub
push
sbbb
dec
push
lret
jae
jne
fs
pushf
in
sub
pop
movsb
add
and
push
mov
aad
pushf
in
push
jl
in
and
stc
push
mov
lods
xchg
pop
jo
popa
bound
mov
jl
mov
inc
jmp
pop
or
movsl
inc
aaa
mov
sub
jae
sbb
xor
push
push
xor
pop
dec
sbb
stos
push
adc
sub
mov
inc
push
cmp
je
push
and
imul
aas
pop
into
pop
into
imul
sbb
mov
sahf
fcmovnb
pop
loope
mov
outsl
and
xchg
xlat
test
mov
xlat
imul
xor
aad
rol
insl
pop
nop
mov
aaa
je
or
jmp
inc
pusha
cltd
add
test
mov
mov
lods
dec
sbb
mov
pop
mov
or
add
cmp
dec
inc
scas
mov
or
or
jle
les
imul
mov
movl
loope
xor
xchg
and
ss
mov
lock
lcall
test
xchg
push
outsb
sub
out
push
stos
clc
mov
leave
cmp
imul
jmp
arpl
outsb
jle
mov
test
aas
clc
sbb
imul
in
nop
xchg
xor
into
and
jecxz
inc
mov
pop
xchg
xchg
outsb
roll
pop
push
iret
loopne
sub
inc
fisubl
mov
test
mov
ret
cmp
push
jb
pop
testl
and
repnz
add
imul
jmp
and
fcoml
sahf
adc
loope
sub
mov
out
mov
cmc
in
dec
inc
pop
mov
dec
fisttps
mov
sar
jb
dec
lcall
adcb
sbb
mov
pop
call
icebp
sbb
push
or
test
insb
outsl
outsb
clc
cltd
lcall
add
arpl
mov
lods
cs
xor
je
cwtl
adc
in
std
outsb
loopne
add
es
test
imul
addl
aad
mov
push
push
lods
push
push
ja
inc
push
mov
dec
jbe
pop
xchg
mov
cmpsl
cmp
pop
dec
outsb
fcomip
push
sub
mov
das
xchg
addr16
add
roll
xchg
adc
xlat
hlt
mov
jecxz
mov
sub
sub
loope
add
jg
test
sti
leave
sub
aam
pop
xor
nop
loope
mov
pop
pop
imul
lock
xor
out
ljmp
loop
inc
dec
cmp
ja
shrl
aaa
xchg
xor
push
rcl
outsb
sub
inc
cltd
adc
je
push
push
sub
pop
shrb
frstor
xor
aam
dec
mov
dec
or
mov
and
shlb
sub
push
pop
fsubl
mov
shrb
push
pop
and
cmpsb
int3
andl
sub
imul
sub
mov
stc
das
imul
adc
mov
mov
xchg
sub
sbb
movsl
push
dec
mov
jns
ljmp
cmp
repz
or
sub
dec
adc
pop
mov
sti
xchg
dec
xorl
psraw
xorl
push
dec
in
in
add
iret
test
or
xor
jmp
fcomps
xchg
sar
dec
movsb
hlt
mov
fs
inc
jle
fsubs
fildl
jecxz
lods
mov
xlat
lahf
mov
dec
xor
xor
fisttpl
ja
jae
lret
add
loopne
inc
je
orl
sub
cmpsl
mov
fiaddl
adc
jb
je
mov
pop
outsl
stc
pop
ja
mov
aas
cs
and
fldl
and
movsb
aad
imul
dec
movsl
xor
add
mov
aas
mov
push
out
xlat
iret
sub
call
test
ss
jmp
mov
xor
scas
repz
xchg
xchg
icebp
ror
fwait
adc
adc
and
mulps
mov
add
xchg
push
mov
outsl
dec
out
daa
lods
xchg
outsb
addr16
fcomps
fstpl
cs
inc
mov
test
out
addr16
xor
repz
cmc
mov
xor
popf
xchg
lret
inc
insl
jge
cmpsl
mov
and
aad
cld
cmc
stos
xor
xchg
cld
or
and
mov
cld
adc
pop
mov
and
cs
bnd
fwait
imul
mov
daa
aas
mov
sbb
lods
rcrl
mov
xor
dec
cmpsb
xchg
in
dec
pop
outsb
cmpsb
sti
jl
mov
push
dec
mov
mov
push
scas
mov
imul
push
loopne
nop
std
les
cmp
sub
leave
mov
in
je
mov
jmp
or
lret
test
outsl
lods
xor
loopne
iretw
aaa
cmp
cld
and
or
dec
sub
add
cmp
mov
fxch
adc
rcrb
adc
ja
mov
jl
mov
ret
lahf
outsb
popa
data16
jg
inc
inc
or
cmp
rcll
cmp
sub
lcall
xchg
add
jno
faddl
sti
lods
and
filds
into
sub
mov
jns
jp
inc
xlat
mov
iret
rcr
or
insl
sub
movsl
xlat
int3
test
aam
stos
or
test
add
sbb
cld
lret
das
xchg
loop
mov
sub
pop
pusha
hlt
cmp
std
adcb
sub
outsb
push
cld
ret
fistps
inc
dec
ss
daa
pusha
stos
or
lock
fisttps
and
in
arpl
jmp
sub
cmc
fistpll
je
mul
dec
fwait
in
mov
mov
adc
ja
inc
add
lock
cli
mov
xchg
fisubrs
lahf
push
xchg
jbe
push
cmc
mov
cli
and
mov
or
in
push
pop
aas
movsl
lods
push
addr16
inc
das
adc
imul
les
lret
mov
popf
mov
scas
insl
adc
scas
mov
jle
inc
icebp
int
mov
adc
add
sahf
out
inc
xchg
jle
call
add
int
test
inc
sbb
sti
xchg
jnp
mov
dec
insb
clc
les
mov
pop
leave
fwait
xchg
push
adc
pop
xor
xchg
ljmp
jnp
test
pop
or
push
push
cmpb
cmp
arpl
fsub
push
mov
nop
or
mov
pop
pusha
addr16
std
mov
sbb
mov
mov
inc
insb
mov
popa
int
cmpsl
aaa
ret
mov
lods
push
insb
movsb
jle
push
and
sti
dec
jno
and
cmp
pop
add
sub
push
repz
jne
movsb
mov
cmp
add
scas
jle
jmp
subb
mov
sbb
fisubs
in
push
pop
scas
in
test
or
adc
ds
sbb
inc
ja
or
out
xchg
xchg
push
push
out
push
inc
pop
out
cmpsb
pop
enter
pusha
xchg
hlt
push
insb
push
or
fiaddl
fisttpl
lahf
stc
test
pop
xchg
int
arpl
dec
inc
ret
sahf
insl
adcl
test
sti
nop
repz
aad
push
rep
adc
mov
pop
scas
xor
adc
pop
pushl
test
int3
test
icebp
aam
jp
xorb
jno
sti
pop
inc
negl
jb
daa
fwait
popf
sbb
xor
dec
push
or
rcl
cmp
dec
jmp
test
xchg
ss
call
int
ficomps
mov
imul
inc
xor
stc
ljmp
enter
and
loope
lds
mov
jmp
loop
or
adc
shlb
hlt
divl
es
jns
inc
daa
cmp
fdivrl
int3
or
mov
sub
mov
int3
push
lcall
lods
sbb
jae
pop
xchg
sub
imul
movl
jle
xchg
dec
repnz
push
adc
pop
and
push
push
shrl
out
sbb
pop
lret
inc
pushf
cwtl
ss
cwtl
insl
jge
fisttps
fcomi
adc
enter
in
push
and
cmc
cmp
cmc
movsb
rclb
xorb
pop
inc
stos
jmp
call
xor
arpl
cmpsb
push
dec
insl
push
out
lret
stos
lds
jp
mov
push
add
sub
mov
xchg
inc
mov
mov
mov
sub
lods
jns
or
jns
ret
lods
adc
or
test
jbe
cmp
jmp
sbb
pop
fimuls
or
mov
pusha
mov
popf
in
cld
cmp
mov
loope
pop
xor
adc
pop
dec
or
in
iret
jne
scas
lret
and
or
aas
imull
push
jnp
jae
es
pop
xchg
jge
shll
mov
rclb
test
or
ljmp
xor
aam
sub
cs
mov
loop
xchg
push
mov
inc
mov
lods
pop
jnp
xor
push
jecxz
mov
ss
adc
mov
jge
inc
repz
mov
ds
popa
add
and
jbe
inc
inc
out
mov
mov
aaa
enter
cli
xchg
daa
pop
pop
cmp
or
push
scas
popa
push
scas
add
les
cmp
stc
inc
loopne
or
sbb
pop
jmp
mov
addr16
add
xchg
sbb
je
je
lds
dec
aaa
mov
xrelease
xchg
push
ficomps
lret
pop
mov
leave
xor
adc
int
mov
imul
insl
push
rcrl
jl
or
movsl
dec
mov
cmp
sti
daa
iret
push
enter
lds
mov
add
mov
out
scas
inc
je
fadd
mov
stos
dec
stos
jecxz
cmp
popa
inc
inc
push
inc
push
lret
dec
pop
stos
negb
cli
xchg
lcall
cmp
sti
sti
cmp
pusha
xor
sub
mov
pop
or
xlat
mov
leave
lock
idivb
rclb
push
into
adc
loope
pop
xchg
scas
pop
scas
icebp
jb
jne
pop
daa
iret
cmp
punpckhdq
pop
mov
ljmp
cmp
jg
inc
sti
mov
pop
shl
loopne
inc
jge
mov
xchg
inc
dec
outsl
les
mulb
and
and
xchg
inc
les
xor
mov
enter
push
xor
add
mov
aas
push
lcall
push
adc
in
arpl
jnp
and
xor
cli
enter
adcl
in
mov
nop
sbb
popa
xchg
std
cmp
stos
cld
cs
rol
int
jecxz
pop
and
inc
or
jno
out
in
stc
push
sbb
faddp
and
repnz
test
xor
push
jnp
sbb
shll
repnz
xchg
sub
sbb
jo
js
incl
pop
decl
adc
sbb
sbb
pop
mov
addr16
cmp
cltd
jns
int
iret
cmpsl
xor
sub
out
int
adc
adc
repz
clc
xchg
imul
sbb
cs
dec
sub
push
mov
xchg
addr16
mov
cmpsl
inc
or
dec
out
dec
jp
lahf
jp
sub
pop
jne
movsb
or
sbbb
fs
out
stos
jl
scas
ljmp
lcall
jns
cli
xchg
mov
aas
push
movsb
jecxz
mov
je
ret
jnp
testb
ret
js
dec
cmpb
pop
adc
lcall
into
aaa
mov
xchg
fwait
cmpsl
imul
adc
mov
or
cwtl
stos
mov
out
jl
mov
dec
inc
test
dec
inc
test
push
sub
hlt
cmc
mov
cs
loopne
sub
adc
or
adc
or
pop
aad
or
add
inc
cmpsl
mov
popf
stc
mov
mov
inc
push
int
fcompl
inc
mov
jns
es
jg
sub
sti
mov
ja
js
ficoml
enter
and
sub
sub
mov
pop
ret
mov
xchg
or
js
jno
pop
gs
faddl
dec
push
xchg
add
call
lock
jns
ds
in
inc
dec
shl
shl
sub
mov
sub
stos
test
mov
jno
jno
sub
dec
push
lret
stos
mov
adc
in
push
jb
enter
int3
fdiv
fdivs
enter
inc
outsl
test
push
mov
inc
cmpsl
aam
push
mov
arpl
cs
dec
sbb
in
out
mov
dec
int
js
movsb
cltd
mulb
sbb
mov
test
mov
cmp
mov
pop
jecxz
dec
lea
out
xor
stos
adc
mov
pop
lock
lcall
sbb
pop
nop
pop
dec
push
addr16
inc
fstp
sbb
enter
test
mov
cmp
adc
shll
pop
add
mov
xchg
aad
jmp
xchg
sbb
imul
test
jg
das
jp
dec
xchg
fistl
sbb
xor
push
ret
loop
imul
sbb
inc
add
pop
jge
in
cli
shlb
icebp
mov
insl
mov
pusha
test
mov
sub
sbb
int
adc
xor
push
pop
aaa
insb
push
and
repnz
cld
jae
dec
shrb
push
add
xchg
mov
jno
add
outsl
xor
js
pusha
sbb
scas
add
mov
pop
arpl
test
and
and
sbb
fcomps
shrb
and
mov
mov
fwait
testb
addl
scas
fsts
inc
pop
cmpsb
cmp
insb
pop
push
int3
movsl
hlt
leave
das
xchg
mov
xor
fwait
bound
inc
cmp
mov
fwait
call
pop
fstps
jecxz
pop
lcall
hlt
mov
bound
mov
nop
pop
push
xor
dec
mov
insl
or
cmp
call
mov
popl
inc
mov
in
das
stos
and
inc
pop
jbe
push
xlat
ret
lods
xor
push
dec
pop
inc
flds
cmp
and
shlb
data16
imulb
daa
add
and
aaa
dec
mov
dec
jl
scas
incb
mov
mov
test
push
pop
shl
cld
jns
pop
stos
int
rcrb
movsl
jge
jnp
ret
rcrb
gs
clc
hlt
jno
scas
sub
mov
inc
mov
mov
addr16
leave
xchg
les
test
fstps
jb
push
subb
push
pop
fnstenv
mov
cwtl
es
fidivs
repnz
mov
ret
dec
or
pop
jae
fldl
fidivl
add
push
movsl
cmp
mov
stos
pop
int3
or
orb
out
xchg
mov
jmp
xchg
jmp
int3
lret
push
xor
mov
pop
pop
jo
nop
hlt
jne
fists
aas
mov
mov
adc
cld
ret
xchg
lahf
movb
sarl
sub
sbb
jl
outsl
hlt
pop
push
sbb
shlb
push
sub
mov
pop
std
mov
pusha
push
inc
shrl
lahf
popa
rcl
and
add
fdivrs
rcrl
fwait
sbb
repz
mov
inc
ds
jl
jb
xor
mov
fs
mov
and
adc
das
roll
faddp
daa
mov
jp
arpl
add
sub
cwtl
xchg
jae
push
inc
mov
stos
out
or
mov
cli
push
add
and
mov
int3
fdivs
mov
inc
filds
mov
arpl
cmp
mov
imul
jne
mov
pop
mov
add
push
stc
push
inc
push
mov
fisttpl
adc
mov
into
push
insl
sbb
mov
adc
mov
loop
inc
test
push
add
xchg
xchg
xchg
jns
and
mov
daa
int
insb
jne
adc
ret
out
outsb
cld
push
adc
fcomp
insl
mov
sbb
stos
and
scas
enter
repnz
outsl
insl
jp
in
sbb
push
mov
push
loop
mov
mov
inc
test
das
jg
dec
jns
jbe
and
lcall
mov
sub
cmc
pusha
sub
addr16
out
add
fdivrs
xchg
cli
add
insb
mov
add
mov
les
test
sub
cmp
loope
push
dec
aaa
jle
aas
mov
repz
push
pusha
dec
or
pop
sbb
imul
and
sub
push
test
out
push
jmp
rclb
push
shl
pop
js
popf
xchg
fisubrs
subb
adc
jg
sub
mov
push
lret
jecxz
stos
xchg
adc
outsb
in
push
xor
loop
or
xor
out
test
xorl
insl
cmovp
inc
fsubrs
mov
lods
leave
push
jbe
cli
mov
inc
ret
inc
orl
inc
mov
test
push
sub
out
push
sub
pushf
addr16
add
mov
jecxz
mov
sbb
sbb
push
dec
mov
adc
out
jo
pop
cld
lret
mov
movsl
push
scas
or
cltd
call
and
xchg
jp
adcb
mov
int
pop
mov
fld
fistpl
and
insl
movsl
outsl
jle
fcoml
lret
mov
iret
adc
dec
adc
stos
inc
adc
dec
pusha
pshufw
fmulp
jnp
sub
and
pop
std
dec
dec
sti
js
daa
pushf
xor
mov
aaa
test
sub
jns
insb
addb
daa
mov
pop
pop
loopne
pop
shrl
out
mov
std
repnz
cmp
jge
dec
arpl
imul
sub
mov
xor
mov
mov
fsts
adc
addr16
cs
lahf
pusha
jecxz
mov
shll
popa
xchg
push
and
mov
cmp
sbb
push
mov
jnp
cmp
xrelease
adc
insb
insl
xchg
into
in
jae
fstpl
jns
movsb
jle
push
ret
call
inc
jle
stc
das
jecxz
enter
dec
lret
xchg
sbb
in
lods
loop
flds
dec
daa
in
or
js
sub
stos
xchg
cmp
push
aaa
loopne
loop
popa
lock
mov
lret
lret
sbb
adc
iret
nop
jl
ret
pop
mov
add
mov
ds
shl
sbb
sub
sub
je
lds
in
shlb
mov
cmc
shll
mov
mov
mov
int3
orb
pusha
scas
popa
or
sbb
sub
adc
jge
lock
test
pop
mov
arpl
inc
jmp
arpl
and
pop
inc
or
hlt
jnp
rclb
rcll
into
es
and
adc
ds
jmp
into
mov
sub
xor
ret
test
repnz
jp
xlat
mov
xchg
sbb
pop
gs
xor
xchg
fistps
cmpl
cmp
sub
mov
add
adc
xor
aad
cmp
cmp
jnp
mov
jecxz
sarl
das
shr
inc
ds
pop
sbb
xlat
aas
xchg
stos
mov
popa
lcall
hlt
pop
jl
mov
pop
imul
pop
pop
push
pop
adc
pop
cmp
orl
add
or
inc
mov
mov
or
stos
dec
push
inc
and
ds
popf
sbb
jg
dec
xchg
jp
adc
pop
mov
jnp
and
pop
inc
mov
pop
push
xchg
bound
cld
or
and
push
jb
mov
jmp
or
addr16
jo
push
out
idivl
stc
or
xchg
add
or
jno
push
inc
data16
adc
mov
jle
jno
sub
shr
or
and
mov
negb
pusha
les
push
push
fxch
jae
mov
int3
test
adc
clc
flds
lcall
cmpsb
add
out
jle
int3
dec
insb
cmp
daa
test
enter
shlb
add
ss
or
sbbl
std
pop
push
mov
popf
push
mov
or
mov
xchg
lds
xor
stc
outsl
ja
fyl2x
test
mov
sahf
dec
push
lods
loope
lock
aas
pop
add
into
push
out
jne
out
xorl
scas
mov
movsb
stos
test
decb
mov
mov
addr16
pop
and
sbb
mov
mov
inc
push
mov
dec
lret
pop
jmp
fstps
pop
aam
lret
into
shrl
mov
ret
xchg
inc
daa
sbb
out
mov
sub
dec
div
xor
fldt
xor
scas
add
sub
xchg
xchg
cmp
inc
cltd
cwtl
js
ljmp
ds
sub
jmp
mul
lods
inc
int
addr16
imul
or
dec
add
ja
xchg
daa
pop
sub
cmpsb
lcall
pop
mov
lcall
int3
jne
jecxz
mov
fwait
lea
push
int
pop
daa
pop
xor
insl
jge
es
cld
jbe
cmpb
sbb
fdiv
lret
outsb
fisttpl
outsl
ljmp
push
xor
xchg
inc
sub
fcomps
xor
cli
xor
pop
mov
push
pop
je
cmpsl
xchg
sbb
cmp
pop
stc
xchg
cmp
pop
loopne
cltd
add
or
lods
mov
mov
pusha
stos
adc
sahf
cltd
sbb
scas
cli
pop
adc
stc
xchg
aaa
jno
push
cmp
mov
popa
cmp
les
imul
out
lcall
push
xor
push
and
xchg
lds
dec
mov
and
xchg
cs
cltd
pop
lea
incl
popa
pop
push
jo
lret
ljmp
mov
faddl
sbb
frstor
xchg
mov
xchg
in
sbb
inc
shl
or
cmp
jb
add
jecxz
push
iret
inc
shlb
dec
es
stos
fxtract
pop
cwtl
lock
xor
imul
shll
xor
sub
xlat
enter
and
lea
arpl
fwait
add
push
cmp
inc
fninit
js
in
xlat
xchg
mov
int
cmp
cmp
sti
mov
mov
cmc
jmp
jo
aas
lahf
and
cmpsb
bound
adc
adc
in
lods
lock
dec
mov
xchg
ds
jle
shrl
jp
jns
mov
add
cltd
mov
xor
mov
inc
clc
scas
ret
in
jle
pop
lods
addr16
pop
idivb
les
popa
negb
sub
jge
fwait
decl
push
or
xlat
fisttpll
add
rorb
pop
mov
push
mov
xchg
pop
mov
inc
sub
test
mov
repz
inc
in
test
xchg
lret
xchg
addr16
jnp
adc
sahf
pop
shrb
fldenv
cmp
push
arpl
mov
dec
dec
jmp
cld
pusha
mov
mov
inc
sbb
dec
lds
loope
push
sbb
clc
mov
ds
bswap
fwait
mov
mov
mov
fnstenv
movzwl
aam
mull
out
add
sbb
rcrb
jne
shlb
sub
and
or
lods
insb
cmp
movsb
sbb
mov
cld
cmp
fdivl
es
and
out
pop
mov
data16
mov
xchg
scas
xlat
stos
push
sbb
fisubl
les
sahf
jb
or
mov
inc
push
sti
xor
mov
lds
lret
das
sub
outsb
mov
add
ret
out
sbb
or
push
inc
mov
data16
test
or
ja
mov
ret
lock
shl
mov
pop
out
stos
int
sub
dec
inc
movsb
cmp
in
data16
pop
cmpsb
sub
pop
cmp
jns
divl
popf
mov
sbb
movsl
insl
ffreep
and
xchg
and
inc
clc
mov
lock
and
mov
scas
popa
mov
mov
xor
test
inc
cltd
push
stc
or
pop
out
pop
add
rolb
fcoms
mov
in
outsl
lahf
mov
arpl
test
mov
orps
inc
test
test
aad
test
adc
pop
or
test
and
jmp
pop
test
test
lret
sarl
mov
mov
xchg
out
mov
jae
ljmp
mov
pop
xor
cmp
nop
sub
fdivp
movsl
std
jmp
inc
jbe
pusha
add
icebp
mov
add
mov
ficomps
cltd
fnstcw
xchg
popf
or
mul
mov
xchg
cmpsl
in
into
out
loopne
stc
cli
aas
cmpsl
fwait
xchg
push
mov
addl
lock
notb
aad
mov
and
cli
sbb
call
fadds
sbb
adc
ss
loop
loopne
test
stc
jnp
imull
sub
add
test
loope
jmp
mov
or
aam
out
mov
jb
mov
ficoml
hlt
jmp
andb
nop
adc
outsl
xor
sti
lods
add
insb
xor
mov
and
or
int3
or
arpl
mov
push
and
cli
imul
je
mov
jno
mov
jle
push
in
decb
inc
das
adc
fst
scas
sbbl
outsl
rolb
inc
push
stos
test
mov
std
jmp
mov
xor
out
push
adc
and
and
cmp
je
imul
and
xchg
push
sbb
stos
stos
outsb
lahf
sub
jmp
mov
out
cmp
lcall
mov
push
add
lahf
ret
cmova
int
clc
cld
mov
fiadds
into
clc
out
repz
arpl
test
fisttpll
xor
push
ret
xchg
mov
mov
and
sti
xchg
mov
add
mov
nop
imul
pusha
push
rol
xchg
add
ret
xlat
pop
jne
xor
push
sub
cmp
pop
jnp
and
mov
add
adc
adc
mov
fildll
adcl
xor
push
aas
jge
adc
mov
mov
andb
xchg
or
imul
mov
jns
in
cwtl
jmp
insl
mov
cmp
pushf
rorl
testb
adc
inc
adc
jbe
int3
movsbl
sbb
enter
mov
or
stc
sbbb
les
call
jmp
nop
jmp
inc
pop
insl
xlat
inc
shlb
xchg
xchg
nop
add
mov
xor
fs
xor
sbb
sbb
push
hlt
div
lcall
inc
outsb
mov
add
cmp
scas
pop
lods
into
inc
dec
cmp
or
lods
fcoms
std
xor
mov
loope
lahf
in
mov
std
add
or
xor
inc
xchg
pop
jb
gs
movsl
ret
outsb
xchg
fistl
jae
xor
or
push
shl
and
fildll
movsb
ret
lods
and
add
adc
mov
mov
mov
xchg
sbb
ret
adc
lea
mov
lcall
clc
xchg
push
pop
outsb
add
cmc
mov
and
fcomip
les
or
and
jnp
and
adc
dec
xchg
subl
cmp
adc
inc
pushf
pop
xchg
push
push
mov
aas
imul
int
notrack
mov
lock
pop
arpl
cmp
mov
mov
mov
cwtl
push
jnp
sub
mov
or
mov
scas
jl
insb
adc
cmp
push
ljmp
mov
ljmp
int3
dec
les
mov
push
fmuls
mov
inc
bts
test
sub
mov
mov
add
jg
mov
xchg
xchg
sahf
dec
shlb
ds
pop
scas
leave
pop
mov
dec
notl
aaa
adc
xchg
jne
mov
cmp
cwtl
lret
mov
call
jbe
push
faddl
pop
pushf
repz
and
mov
mov
or
xchg
sbb
fiadds
jge
int3
xlat
add
and
sbbb
das
mov
jns
sbb
mov
add
jnp
cltd
inc
mov
inc
ds
jae
lret
mov
les
pop
mov
mov
sbb
jmp
mov
lahf
fistpl
ret
or
jno
push
int3
jecxz
roll
or
push
in
push
cmp
pop
lret
adc
mov
cmpsl
jg
mov
xchg
mov
das
cmpsl
inc
jnp
ret
push
mov
iret
jbe
add
aaa
push
pop
lahf
ret
sbb
xchg
inc
jb
hlt
rsm
aaa
sbb
jl
adc
test
add
aas
cmp
sub
cmpsb
add
xchg
ret
mov
pop
rcrb
cli
inc
nop
cld
out
rcr
inc
or
cmpb
popa
es
or
inc
and
pop
dec
es
jle
outsl
cmpsb
iret
cmp
dec
lods
push
pop
jbe
xor
jo
repnz
mov
sbb
pusha
shlb
outsl
je
sub
pop
in
inc
xchg
lahf
iret
and
xor
lods
mov
sub
and
inc
add
push
xor
stos
test
mov
jle
les
insb
add
xchg
cmp
insb
adc
add
mov
repnz
ja
test
cmc
aaa
idivl
adc
movsb
ja
push
rclb
xchg
adc
iret
xor
xchg
pushf
enter
hlt
popf
jmp
imul
or
jbe
subw
jecxz
sahf
dec
mov
fisubrs
mov
mov
xchg
inc
jp
into
cmp
cmpsl
rcr
push
push
imul
les
movsb
or
lcall
mov
pop
insb
cmp
repz
jl
jno
lods
xor
xor
add
nop
arpl
out
sbb
jo
int
leave
mov
fs
or
sub
popa
jp
pop
pop
clc
call
jp
insb
and
or
fcompl
cli
xchg
dec
inc
xchg
je
lods
mov
inc
stc
adc
fwait
les
rolb
mov
clc
xorl
sub
movsl
addb
daa
jp
adc
aam
push
pop
mov
mov
in
jo
push
xor
xchg
xchg
cwtl
push
orb
xor
cmp
add
add
xorb
sub
cmc
mov
pop
leave
adcl
out
xchg
aam
xlat
clc
mov
bound
inc
and
scas
push
das
ret
jae
sub
aad
shrb
dec
jbe
pusha
mov
gs
push
pop
pop
inc
mov
jl
jne
jne
jbe
jle
add
cli
js
dec
and
jns
mov
pop
orb
outsl
int
inc
pop
lds
js
imul
outsb
lcall
mov
je
fs
sbb
or
stc
scas
mov
imul
xor
mov
xor
fisubl
xchg
shll
push
inc
mov
clc
dec
cmp
mov
packssdw
aam
pop
or
jmp
ret
test
lahf
lahf
push
inc
pusha
mov
push
out
lock
stos
jg
gs
push
lea
int
ret
mov
popa
dec
mov
jno
xchg
jbe
add
sbb
cld
dec
lahf
push
and
sub
cmp
sbb
xchg
ss
lds
movsl
sub
mov
shlb
push
lret
loop
pop
push
cmc
stos
push
or
mov
fsubrp
gs
mov
fwait
push
mov
sub
jb
test
arpl
and
out
or
outsb
jnp
lea
rcll
lds
stos
sbb
in
cmp
stc
imul
jp
sub
pop
pop
vpcmpgtd
add
fwait
mov
mov
jp
loop
jmp
insb
jl
pop
lcall
sahf
mov
jae
push
aaa
stos
adc
div
andl
pop
jae
repnz
orb
pop
lods
sub
fidivrl
cmp
hlt
mov
outsb
lods
mov
jbe
mov
xor
jecxz
lods
jns
push
adc
in
iret
mov
dec
stos
sub
outsl
cli
loope
mov
outsl
mov
outsl
add
add
dec
rcrl
cmp
popa
pop
xchg
add
push
dec
and
orb
jbe
xlat
loopne
or
fs
xchg
decl
inc
frstor
inc
mov
xchg
leave
pextrw
sahf
pop
cmp
jle
inc
push
loope
cmp
call
cli
sbb
popa
xchg
gs
aaa
jl
push
arpl
push
mov
push
sahf
xchg
test
jns
mov
into
faddl
jb
or
imull
lcall
addr16
ljmp
aad
scas
push
ret
or
dec
sahf
subps
mov
ljmp
adc
cmc
into
ss
and
xchg
inc
dec
addb
pop
cmpsb
dec
mov
and
in
adc
loopne
xlat
or
cld
loop
xchg
cmpsl
and
add
push
jle
cmp
or
push
aad
ucomiss
inc
mov
in
mov
push
or
jno
xor
cs
add
jns
outsb
incl
mov
leave
xor
imul
inc
mov
es
inc
jnp
outsl
or
je
jle
xchg
les
xor
xchg
lock
or
stos
pusha
mov
push
push
insb
mull
add
popa
jo,pt
adc
push
aad
inc
adc
dec
adc
in
jg
xchg
iret
insb
and
bound
sbb
mov
std
ret
jg
xchg
cmp
vmovq
pop
sbb
xor
add
add
mov
out
inc
mov
or
and
jno
or
push
js
aam
rcrl
cmpsb
or
push
call
lods
in
push
mov
and
incl
and
rcr
sub
push
xchg
mov
idivb
adc
gs
fwait
insl
cs
je
cmpsl
mov
adc
cmp
and
dec
sub
jno
and
cmovb
pop
stos
jbe
negl
ds
add
insb
cmpsl
mulb
or
cmp
inc
dec
jge
and
mov
sub
dec
inc
sbb
dec
scas
adc
lret
dec
cmp
add
lret
mov
or
mov
mov
push
push
int
sub
push
or
xor
sbb
movsl
sbb
aam
sti
mov
xchg
adc
jae
cmp
sti
xchg
arpl
mov
or
inc
arpl
adc
lds
sub
clc
jle
sbb
lock
rorl
jbe
or
aam
mov
pop
aas
xor
lods
push
loope
addr16
jbe
mov
out
test
and
shrl
icebp
adc
pop
adc
mov
add
scas
pushf
sub
mov
pusha
mov
gs
in
sbb
lods
loope
int
or
repz
add
jl
dec
xlat
cwtl
inc
out
mov
inc
sub
enter
jmp
mov
loopne
lret
test
sbb
cmp
ja
mov
mov
sub
pop
leave
inc
scas
jne
daa
mov
or
xor
jmp
into
rcrl
cmp
xlat
dec
or
inc
pop
add
ficoml
jecxz
loope,pn
mov
cmp
imul
movsl
scas
in
enter
popa
pusha
loope
lahf
es
sub
xchg
mov
sbb
sub
popa
add
ljmp
cmp
lret
pop
cmp
sbb
insb
outsb
outsb
sbb
mov
pop
out
rol
lods
xor
adc
push
fadd
enter
jge
jno
jns
cltd
in
adc
ret
push
ret
xlat
inc
insl
enter
into
lods
std
jb
jg
sbb
or
loope
leave
pop
les
or
xor
rcrb
or
fs
cs
sti
int3
shr
mov
inc
mov
test
rclb
xchg
jbe
inc
xor
out
xor
mov
pop
je
cmp
and
inc
sub
sti
mov
fwait
adc
cltd
push
adcl
xchg
lret
sub
call
xor
loopne
dec
sbb
xor
hlt
sbb
leave
lahf
enter
and
js
dec
dec
inc
shll
jmp
out
xchg
dec
and
ljmp
xchg
sub
lods
rcrl
dec
fisubrl
pusha
sbb
pop
cmp
push
add
cltd
and
push
stos
test
cmp
shlb
push
cltd
inc
sub
and
xlat
cltd
imul
pusha
sbb
cmpsb
mov
and
inc
inc
cmp
push
shlb
mov
add
daa
nop
mov
int3
xor
ljmp
inc
jnp
dec
mov
dec
mov
gs
jne
stos
scas
xchg
mov
aam
mov
mov
or
in
mov
mov
cmp
leave
push
mov
lahf
ret
or
ljmp
jge
mov
nop
cmc
pushl
mov
add
movsb
or
cwtl
sbb
cwtl
into
fsubrs
pop
cli
xchg
lret
cs
mov
sub
or
lret
adc
xlat
loop
lds
in
inc
jp
mov
pop
test
in
mov
bound
loopne
popf
cmpsl
dec
fwait
cmp
in
aam
push
sbb
mov
out
mov
in
push
sub
or
adc
sbb
out
movsb
push
fsubr
sbb
and
aaa
jmp
mov
and
lahf
hlt
xor
cmp
jns
outsb
fcoml
fmull
add
cwtl
mov
mov
push
mov
fstpt
lea
sbb
lods
inc
pop
add
ficompl
or
js
es
lock
enter
push
cmp
push
xlat
sub
pop
mov
sbb
stos
and
in
movd
add
dec
mov
arpl
mov
xor
sub
push
push
cmp
test
sbb
mov
or
cmpl
jecxz
pop
in
push
xchg
movsl
adc
jno
sub
cmp
cli
dec
cmp
and
shlb
loopne
push
scas
push
test
insl
popf
ljmp
push
insl
xchg
mov
js
or
mov
pushf
xlat
iret
jmp
or
sarb
pop
push
cmpsl
mov
jno
imul
call
push
arpl
adc
in
jmp
pop
imull
fdivrl
outsb
mov
fmuls
in
adc
jl
fildl
fstps
out
xor
test
sub
pop
or
int
std
mov
cmc
inc
mov
rorl
mov
mov
loopne
adc
xchg
scas
and
xor
sub
hlt
frstor
cmpsb
dec
fs
push
loope
gs
adc
adc
adc
cs
pop
mov
aam
clc
popa
xchg
cmp
mov
imul
mov
dec
mov
out
std
pop
int3
mov
fwait
push
jle
test
lahf
jg
adc
je
shll
cmpsb
and
gs
mov
sub
mov
mov
sub
mov
xchg
jae
lds
cmp
js
push
cli
stos
xor
or
xor
icebp
addr16
aam
mov
mov
stc
insb
enter
mov
xor
call
int3
out
mov
mov
sti
scas
movsb
test
add
in
icebp
sub
pop
jle
mov
xor
sbb
mov
leave
push
mov
mov
lcall
pop
stc
push
xor
jne
es
xchg
call
cmp
pop
fisubs
and
and
xlat
or
shlb
mov
clc
mov
mov
mov
pop
fadds
iret
repnz
adc
lods
pop
jmp
add
push
out
dec
mov
pop
jb
push
cmp
xor
jp
dec
sbb
call
push
jnp
ret
out
sbb
mov
mov
daa
dec
mov
mov
adc
scas
out
movl
clc
jne
inc
xor
das
add
sub
inc
loopne
cmp
pop
out
xchg
gs
jae
aaa
jmp
cmpsl
out
push
or
out
int3
sbb
enter
push
stc
sbb
daa
xchg
movsb
iret
ret
test
adc
push
pop
bound
push
and
cmc
pop
jg
sahf
adc
push
sahf
dec
sub
in
ss
pop
out
jecxz
cli
xchg
iret
add
jle
push
xchg
xchg
and
dec
jp
xchg
inc
fsubp
cmp
test
mov
jp
fildl
out
xor
shl
fs
mov
ljmp
idivb
sbb
cmp
mov
mov
dec
pop
test
hlt
cmp
mov
lods
das
outsb
mov
adc
outsb
and
mov
lret
mov
idiv
hlt
mov
cltd
ljmp
in
rorb
inc
cmp
pop
je
aaa
sub
stc
nop
jns
rcr
sbb
mov
jg
cs
mov
mov
mov
test
lea
out
roll
enter
notl
clc
mov
dec
nop
pop
enter
jb
lods
dec
jnp
sbb
in
sbb
pop
in
xchg
pop
inc
or
pusha
fstpt
dec
test
js
test
int
out
add
dec
ficoml
jae
outsb
in
aas
pop
sub
add
jle
inc
addr16
call
in
sub
aas
mov
xchg
jmp
and
sti
lret
jb
and
fs
mov
and
and
es
mov
sub
push
jl
pop
mov
into
pop
test
testb
dec
scas
jp
shr
hlt
jno
xchg
leave
test
je
js
inc
lret
mov
les
out
bound
cmc
ret
pop
divb
cli
inc
rolb
cmpsb
clc
sarb
cli
or
insb
repz
dec
jp
jle
mov
int3
mov
mulb
or
icebp
fidivrs
jle
inc
insl
mov
sub
jae
sbb
in
add
divb
pop
js
sub
arpl
push
aam
sbb
xchg
mov
xchg
mov
inc
xor
adc
mov
lock
jns
mov
push
daa
pusha
jl
shl
jge
mov
int
out
aaa
std
mov
push
test
imul
sbb
jb
or
lcall
cmp
repz
out
mov
movsb
xor
mov
mov
adc
mov
jo
inc
hlt
mov
or
and
cli
dec
mov
int
std
daa
shr
fdivrs
lret
shll
lret
add
std
jo
rol
mov
mov
mov
push
lock
and
jno
aas
push
popf
enter
sub
inc
push
sub
fwait
test
cmpsl
lods
jmp
shrl
movsl
push
test
and
jl
mov
pusha
sbb
loop
xor
inc
sbbb
jle
lahf
dec
cs
aaa
lahf
xchg
push
jl
das
lret
loopne
pop
cwtl
leave
cmpsl
fwait
popa
and
lcall
cmpsl
popf
sub
adc
sbb
xchg
xchg
leave
push
mov
out
push
fsts
cld
push
sbb
lret
and
inc
lock
jno
aas
in
fdiv
add
test
push
pop
and
mov
xchg
push
lret
in
stos
xchg
dec
cmp
sbb
mov
test
push
mov
test
push
mov
sahf
iret
arpl
push
push
andl
in
mov
das
jle
ffree
lcall
popa
lret
das
xchg
in
test
and
add
mov
and
in
xor
cmp
inc
push
orl
jno
stos
xchg
xor
xor
xor
push
mov
inc
sbb
jmp
daa
repz
mov
adc
pop
dec
lahf
lds
popa
mov
or
xorb
inc
xchg
or
dec
ret
inc
xchg
adc
lock
jmp
lods
stos
xor
insl
push
inc
pop
pushf
push
dec
lods
jmp
test
push
pop
jecxz
or
insb
test
jp
dec
popf
push
sbb
mov
xchg
out
or
mov
jne
pop
lods
movsl
popf
sub
je
mov
fs
jae
imul
jg
shl
pop
icebp
testb
xchg
test
enter
pop
adc
push
xchg
mov
or
lahf
loopne
test
fwait
int
dec
fistps
dec
cmc
mov
mov
mov
fwait
pop
jae
int
std
push
add
and
lods
in
push
ds
push
mov
pushf
xchg
xor
fsubs
nop
jg
cmp
inc
mov
in
pop
or
clc
xchg
fbstp
push
dec
adc
xor
sbb
sub
in
stc
jae
pop
nop
scas
and
jo
jnp
and
into
mov
pop
mov
cmp
jno
and
push
shlb
stos
fistpl
push
fists
pop
or
fsubrl
lea
outsl
leave
and
icebp
pop
cli
and
xor
aas
pop
jle
and
mov
sub
pop
lcall
ficoms
mov
mov
inc
in
sub
jne
call
inc
mov
stos
push
dec
xchg
lea
mov
sti
and
cli
inc
mov
int
add
imul
mov
inc
ja
fstl
lea
inc
pop
cld
xchg
pop
mov
push
lds
out
xchg
sbb
cmp
pusha
push
test
rcll
loopne
cmp
in
sti
inc
aad
mov
mov
cwtl
fisttpl
inc
ret
outsb
out
cld
lret
aas
or
sub
scas
nop
xor
call
stos
aas
cwtl
dec
pop
xor
int
jno
ja
and
insl
negb
sahf
stc
inc
mov
lods
leave
idivl
insb
scas
repz
out
das
int3
lods
lea
insb
sbb
mov
add
adc
out
lods
cmp
fwait
xchg
int3
sub
jns
mov
pop
mov
into
jae
out
and
pop
sbb
decb
adc
mov
jecxz
xlat
sub
je
xor
jae
xor
cli
loopne
adc
bound
arpl
pusha
adc
cmp
mov
fldl
mov
or
push
push
adc
mov
or
dec
pusha
mov
fistpl
cmp
lcall
push
outsl
inc
mov
daa
xor
sub
in
test
xchg
pop
xchg
stos
xchg
int3
cmpsl
sub
cmpsb
idiv
mov
xor
cmp
xor
daa
fwait
adc
lahf
sub
out
orl
and
mov
aad
pop
std
jbe
inc
leave
pop
mov
incb
fsubs
and
sahf
ds
insl
mov
adcl
ss
divl
adcb
fcomip
jne
and
mov
lds
mov
xchg
sbb
out
sub
not
sbb
pop
inc
mov
lret
stos
sub
lcall
fnstcw
notb
xchg
xor
popf
movsb
push
cmp
test
push
test
lret
adc
dec
ss
xchg
push
mov
cs
dec
popl
idivl
and
mov
jb
and
xchg
les
popa
jo
fiaddl
ret
ret
inc
jns
add
fnstcw
int3
lods
sub
fmuls
jl
dec
aam
inc
sub
mov
inc
stos
movb
call
sbb
sub
mov
sub
and
and
loopne
aas
aad
xor
dec
repnz
cmc
dec
lahf
ljmp
mov
or
or
mov
pop
xchg
popa
jmp
xchg
leave
sahf
mov
fbld
outsb
sub
cmpsb
in
cmpsl
fcompl
sbb
sub
mov
pusha
loope
sbb
insl
aad
push
stos
inc
xor
aas
mov
jb
test
arpl
push
movsl
mov
add
outsl
ja
ret
cmp
es
data16
call
sbb
repnz
ja
push
icebp
lret
jne
lcall
push
stos
mov
xchg
cltd
pushf
xor
inc
push
outsl
roll
add
mov
xlat
push
xchg
dec
add
pop
inc
js
mov
xor
pop
mov
push
mov
repz
jo
jle
mov
xchg
push
cmp
xor
in
and
pop
mov
or
xor
fnstcw
mov
pop
aad
push
push
pop
cmp
mov
in
hlt
test
loope
jmp
cwtl
xchg
cmp
gs
ss
sub
arpl
rclb
lods
in
sbb
rcrl
push
ja
jp
ja
xchg
inc
dec
xchg
lea
add
lock
cmp
push
inc
cmpl
xchg
push
pop
mov
xchg
add
lods
and
lret
cmp
divl
adc
pop
push
scas
mov
push
popf
mov
cmpsb
cwtl
aaa
out
lahf
cmp
xor
shrl
cmp
jmp
mov
outsl
pop
daa
bound
and
sti
pop
sbb
mov
pop
pop
mov
or
in
roll
jne
ret
push
scas
adc
mov
out
xacquire
sub
sub
ljmp
mov
cmp
jne
daa
dec
aaa
out
fsubp
mov
jnp
stos
rcrl
sbbb
imul
xor
sbb
sbb
cmp
jo
xchg
inc
clc
xchg
jle
dec
bound
inc
or
das
cmp
insl
mov
in
and
sub
insl
mov
pop
cmp
fsubr
pop
or
call
dec
lds
outsb
jae
add
clc
sbb
lods
ret
mov
push
adc
aad
or
out
vpmuludq
inc
std
jo
stc
scas
pop
xor
jo
and
xchg
xchg
ss
popf
aam
subb
into
pop
in
jecxz
push
movsb
aam
shr
or
ljmp
repz
cmp
in
lret
mov
aas
cmp
pusha
into
xor
stc
addb
cmpsl
fs
arpl
outsl
pop
pop
push
add
les
inc
push
icebp
ret
xchg
sbb
test
in
or
cmp
jge
push
out
out
pusha
es
out
jno
sub
ja
inc
sbb
js
xchg
stos
cmp
outsb
leave
and
pop
and
or
icebp
add
pop
jo
jp
outsb
mov
pop
cmp
imul
data16
lcall
lahf
data16
pop
in
cld
jo
dec
push
or
mov
lock
std
ficoms
mov
or
out
cmpsb
push
xchg
add
sahf
cmp
aaa
lahf
outsb
subb
into
dec
jecxz
pop
bound
das
fldenv
jo
jbe
pusha
call
loope
std
mov
sar
cltd
lods
rorl
arpl
cs
lret
int3
arpl
loop
out
stc
cmpsl
scas
adc
sub
xor
movsl
imul
dec
adc
jmp
popa
push
xor
push
pop
xchg
inc
dec
out
loope
clc
pushf
mov
test
repnz
loopne
bound
call
daa
dec
sub
pop
bound
and
fwait
cmpsl
shll
sbb
fsubl
push
mov
rcrl
push
cmp
out
mov
adc
pop
dec
cmp
icebp
cmpsl
xchg
popa
pop
dec
jp
mov
int
aad
mov
mov
inc
xchg
aaa
pop
and
loopne
lret
sahf
mov
fucomip
sub
push
or
dec
popa
mulps
mulb
push
addl
adc
mov
cs
fs
cmp
pop
and
sbb
cwtl
sbbl
pop
jge
pop
add
nop
into
inc
xchg
pop
push
dec
push
repz
mov
rorl
sbb
push
pop
cld
clc
shl
repnz
push
popa
mov
jae
push
inc
je
icebp
or
cmc
xor
lret
sbb
fcmove
shlb
xchg
adc
stos
scas
divl
popf
jb
cwtl
inc
repnz
rcll
fst
in
call
jns
and
and
and
and
les
add
imul
jbe
mov
push
lea
sub
in
push
adc
scas
push
add
push
and
lahf
and
inc
cmpb
aaa
fcmovb
jge
dec
sahf
inc
cmpsl
sub
lods
mov
ds
movsl
cmpl
loop
cmp
sub
mov
pop
or
xchg
shrl
add
inc
arpl
call
xor
push
jbe
daa
scas
popf
out
or
cmp
push
adc
out
mov
cwtl
and
xchg
jns
inc
imul
sub
sub
fimuls
cmp
movsb
mov
xor
jo
jb
mov
sub
push
or
mov
xchg
notb
out
xchg
sahf
dec
out
icebp
data16
inc
jne
les
ja
cwtl
mov
add
inc
iret
push
pop
insl
lea
ss
mov
notl
hlt
fmuls
lcall
xlat
fsubrl
and
or
rorb
push
sub
sbbl
outsb
jmp
lret
lods
dec
dec
shl
xchg
push
or
push
cs
push
mov
aam
daa
iret
pop
sbb
stc
mov
insb
or
lods
push
mov
cld
das
jp
sub
push
mov
inc
sub
cmp
or
fnstsw
std
aaa
pushw
push
mov
and
pop
and
jp
jp
stos
call
xchg
leave
nop
pop
cli
or
es
and
inc
dec
sub
dec
rcl
pop
mov
popf
sbb
int3
mov
rcr
in
call
push
cmp
jb
xor
test
or
movsl
outsb
mov
push
inc
inc
lea
fmull
xchg
pop
push
cli
loop
in
rolb
push
push
inc
fsub
and
and
or
test
lods
into
inc
mov
repnz
sbb
dec
xchg
mov
iret
ja
enter
sbb
mov
cmp
gs
and
or
sbb
mov
inc
rcll
or
dec
jp
fs
sbb
filds
or
pop
mov
pop
popa
sbb
mov
and
iret
pop
jnp
or
or
push
mov
adc
sub
insl
movsl
xchg
and
ret
fidivl
cwtl
pushf
cmp
cmp
mov
xorb
mov
xchg
and
pop
sbb
xor
xchg
pushf
sbb
cmc
call
cli
lahf
in
adc
and
adc
dec
push
sahf
inc
mov
pushf
je
ljmp
fcmovnu
push
movsl
mov
leave
mov
cs
sarl
fiadds
push
movsl
outsb
mov
xor
mov
pusha
push
push
jl
jmp
mov
sbb
outsl
push
rcrl
imul
sub
outsl
test
lret
cli
xlat
je
into
dec
test
mov
jmp
sbb
jo
sti
mov
mov
out
cmp
push
dec
bound
dec
cs
in
cs
cs
inc
jns
jmp
mov
jle
shll
aas
mov
test
sub
jle
fwait
shlb
call
out
outsb
sub
ss
dec
mov
cli
cmp
mov
sbb
into
pop
and
pop
mov
dec
mov
shlb
mov
sbb
dec
xor
aaa
inc
push
stos
push
add
int
mov
mov
psadbw
sbb
mov
xchg
imul
adc
cmp
stc
ss
lcall
xchg
pop
sbbl
or
jle
lock
sub
push
dec
mov
lret
mov
mov
mov
mov
scas
out
ja
xchg
aam
mov
sub
aas
jmp
xor
lret
arpl
jb
int
fisttpll
cs
sbb
ja
push
jo
inc
sahf
stc
iret
xor
mov
or
pmulhuw
aad
lahf
or
or
pop
ja
pop
xlat
ret
jae
ficompl
imul
xorb
jae
shrb
cmpsb
push
mov
hlt
pop
fisttpl
push
inc
call
push
addr16
push
incl
inc
mov
sbb
sub
inc
push
add
lods
mov
loop
movsb
pusha
jns
xchg
xchg
mov
imul
divb
pop
ljmp
jno
movsb
aam
mov
inc
cld
movntq
idivb
xchg
jae
cmc
push
hlt
sbb
jno
lret
hlt
jge
jno
mov
inc
into
pop
mov
xor
cmpsl
fcmovbe
sbbl
pop
dec
ret
and
orb
adc
inc
jbe
sti
imul
js
mov
and
flds
inc
ds
sbb
imul
pop
mov
sahf
adc
das
xchg
mov
xor
imul
push
movl
out
jno
or
fldl
mov
fsubrp
pop
adc
test
sbb
lds
out
xor
push
sarb
xor
cwtl
add
arpl
scas
dec
sbb
mov
rol
aad
test
mov
mov
inc
sub
push
ret
out
popf
insb
sub
xchg
sti
xor
mov
repnz
xchg
loopne
xor
ljmp
mov
xchg
sarb
aaa
fnstenv
sarl
fsubrl
test
jb
hlt
movsb
mov
xchg
xchg
adc
into
push
dec
jg
jb
cwtl
in
data16
mov
xor
push
test
out
movsl
and
mov
negl
xor
movsl
or
xor
push
sbb
inc
cmp
gs
cmp
test
inc
mov
ja
aaa
push
jno
jo
push
aam
fcomi
and
int3
sub
pop
aaa
dec
loop
bound
pushf
add
push
mov
sub
inc
push
jle
hlt
or
mov
push
jae
xchg
mov
push
adc
in
leave
imul
push
lahf
fwait
mulb
xor
sub
mov
or
loopne
loope
movaps
dec
call
sbb
lods
and
cs
stc
add
xchg
int
adc
jg
jbe
subl
into
pop
jae
jbe
and
outsb
push
orl
inc
adc
popl
rolb
into
mov
call
shl
inc
adc
lods
pop
mov
repz
push
ja
pop
inc
jo
xchg
daa
aam
sti
out
mov
shlb
pop
dec
ds
jmp
sbb
cld
cmp
push
out
sub
push
push
iret
out
mov
lahf
adc
aad
orl
xchg
dec
sbb
in
dec
jnp
and
clc
cmp
pop
adc
jno
pop
xor
sbb
push
push
jl
adc
repnz
push
mov
sbb
or
jno
in
mov
lock
in
lods
and
out
rolb
dec
movsb
rcll
cld
adc
sub
jo
adc
popf
xorl
adc
cmpsb
mov
dec
inc
mov
xchg
push
adc
inc
or
mov
jnp
xchg
xor
arpl
test
les
aaa
outsl
pop
xchg
lods
fmull
dec
movsb
lods
xchg
xchg
leave
test
mov
fwait
mov
ret
ja
and
int3
adc
mov
ljmp
fdivrl
cmp
and
test
and
add
int3
rcrl
mov
insb
add
insb
mov
jbe
adc
push
daa
cmp
mov
sub
jne
push
test
sbbb
jb
xchg
inc
xchg
inc
push
push
mov
inc
lock
xchg
cmpb
dec
adc
testb
cmc
fistpl
mov
pop
push
cltd
xor
test
xchg
inc
aas
add
loopne
ds
sub
dec
insl
repnz
lods
and
stos
bound
push
and
mov
in
fadd
push
daa
test
cld
rcrb
inc
sub
leave
ficoms
movsl
xchg
xor
cltd
inc
adcb
scas
push
sub
mov
loop
mov
mov
je
iret
mov
mov
imul
rclb
daa
ret
loopne
ss
test
xlat
fiaddl
leave
cwtl
sbb
inc
jmp
cmp
popf
jnp
inc
lahf
lock
cmpsl
je
iret
mov
sahf
sub
xchg
cli
jge
mov
push
jno
nop
pop
sbb
imul
mov
and
mov
jo
fidivl
xchg
xchg
and
data16
mov
mov
loope
jl
js
fstps
nop
xor
std
std
mov
push
vpcmpgtw
jge
cmp
mov
dec
inc
es
int
cmp
cwtl
jmp
add
xchg
mov
sbb
dec
xchg
in
jg
xor
mov
out
mov
jae
cld
jo
stos
jo
out
pushf
lcall
nop
sbb
bound
lcall
stos
and
loope
test
repnz
stos
les
imul
xor
xchg
imul
jecxz
aam
add
mov
and
xchg
fs
in
mov
mov
lahf
sbb
lret
ret
imul
rolb
mov
out
enter
mov
push
fldl2t
mov
mov
aad
xchg
je
sub
mov
lds
mov
jae
loop
and
inc
jb
jno
mov
cltd
push
insb
loop
aam
addb
jns
ljmp
sbb
cs
rcrl
rol
push
pop
xchg
sub
int
jno
mov
xor
xchg
js
cltd
or
ss
pop
outsb
scas
movsl
or
jecxz
cltd
bound
push
imul
aad
out
call
jbe
push
shll
sbb
lods
test
fld
insb
daa
adc
xchg
cmp
add
mov
scas
out
bound
into
pop
pop
cld
xchg
adc
push
aad
in
fwait
les
aad
jmp
andb
fbld
sub
pushf
jmp
stos
add
mov
sbbb
adc
push
mov
dec
mov
push
jle
inc
std
jge
push
xor
arpl
cmp
out
ret
or
xchg
or
xchg
sub
je
scas
lret
and
test
lcall
push
push
cltd
push
xor
xchg
loopne
mov
testb
mov
cmp
repz
call
or
mov
dec
pop
rclb
dec
mov
mov
cmp
dec
insb
pop
popa
dec
add
jo
ljmp
push
inc
add
or
enter
jle
lea
imul
mov
dec
stos
sub
scas
xlat
repnz
lds
rorl
popa
fstpl
and
sets
in
rorb
xor
push
inc
leave
inc
xchg
mov
into
jne
and
pop
mov
aaa
or
mov
icebp
mulb
in
mov
sub
test
nop
jmp
pop
xor
sbb
adc
and
jne
loop
dec
pushf
cmp
push
mov
jge
dec
adc
dec
xor
rcll
pop
jp
xor
jg
notl
xor
cmp
lods
xlat
mov
dec
scas
out
shr
or
jne
pop
test
imulb
or
aam
scas
xchg
and
sub
jp
mov
lock
js
bound
lret
scas
aas
push
pop
fadds
inc
cmpsb
xor
sahf
std
cltd
mov
mov
shl
mov
xor
stos
lods
lods
cmp
dec
cwtl
sbb
lods
cs
dec
pop
fwait
pusha
mov
dec
cmp
dec
out
mov
mov
outsb
dec
sbb
dec
fistpl
or
movsl
pop
scas
mov
negl
test
push
or
aaa
ficoml
fdivrs
jge
or
nop
fwait
sub
sbb
call
call
inc
inc
jle
and
mov
jecxz
xchg
ret
jno
divl
shlb
pop
cmp
push
and
mov
clc
mov
xchg
inc
mov
fcoml
lods
add
sahf
xchg
inc
or
sbb
scas
mov
push
loopne
scas
adc
je
cmp
in
loope
aaa
popf
cmp
aam
jge
add
sbbb
adc
nop
call
xor
repz
xchg
cld
cli
in
xchg
and
xor
daa
pop
ret
and
dec
mov
adc
xor
ja
pusha
xchg
clc
data16
popa
dec
dec
add
mov
rolb
and
and
sbb
lret
dec
mov
or
out
lahf
lcall
test
sub
daa
rorb
cmp
mov
mov
rorb
dec
enter
ja
adc
out
xor
and
mov
xchg
out
gs
out
or
sub
adc
insb
xchg
outsb
fwait
mov
jmp
push
mov
insl
sub
pop
add
cwtl
adc
frstor
ret
add
shrl
inc
mov
cmp
hlt
lahf
sarl
ret
xchg
fidivl
adc
xchg
rcrb
push
rcrl
aad
jbe
dec
repz
scas
ds
ja
testl
outsl
insl
mov
add
xor
shll
shl
movsb
add
sbb
aas
in
cmp
jl
shrb
js
xchg
jge
aaa
xchg
lahf
and
xchg
cld
pop
mov
add
xlat
sti
mov
mov
cli
ljmp
mov
out
pop
bound
lcall
push
out
addr16
push
fidivrs
cli
js
mov
sub
mov
push
or
xchg
clc
aad
push
add
or
shlb
fstpt
ss
ss
jg
mov
jno
jbe
jp
jl
jo
mov
dec
cmovs
iret
cmp
ficoms
insb
nop
dec
xor
cmp
adc
aas
test
jo
hlt
loop
test
xor
or
xor
mov
cmc
xchg
sub
ss
jbe
lret
sarb
ret
imul
fsubrl
cmpsb
sbb
or
iret
mov
mulb
push
dec
adc
test
inc
add
xor
mov
mov
mov
sbb
xchg
jbe
lods
mov
fbstp
push
add
arpl
arpl
xor
icebp
int
fs
int3
add
sti
adc
imul
pusha
fs
cld
inc
xchg
push
or
stc
cs
pop
insb
rcl
inc
sti
pop
iret
daa
pop
dec
hlt
fsubrl
xchg
negb
xchg
aam
add
mov
inc
mov
loope
xor
cmpsb
push
jp
pop
dec
imul
sub
divb
jae
in
sahf
inc
and
movsl
fmull
scas
xchg
negl
cmc
xor
sbb
shlb
or
xchg
xor
dec
fistl
negl
mov
push
out
cmp
xor
lea
scas
fdivrl
mov
adc
pop
rcr
mov
je
mov
cli
imul
pop
pop
jno
scas
subl
xchg
jle
or
int3
shlb
push
cmp
push
push
sbb
add
jae
cld
in
lock
cmp
lds
mov
daa
fildll
adc
pop
xor
mov
popf
js
xor
mov
sub
add
cmpsl
push
loop
fwait
cmp
outsl
pop
mov
xor
xchg
lcall
or
xchg
or
xlat
in
cli
pop
pusha
shr
data16
enter
lods
imul
xchg
out
hlt
inc
or
jl
aas
push
test
arpl
lds
sbb
test
cmpl
cltd
pop
mov
lea
xor
orl
cmovle
mov
xchg
cmp
roll
ret
cmp
stc
cmp
lret
lods
adc
mov
push
in
add
pushl
mov
mov
hlt
test
push
test
in
ret
enter
xchg
mov
jp
dec
fnstcw
mov
jmp
clc
xlat
mov
sub
inc
andl
jbe
xlat
shl
add
pushf
push
js
mov
or
sbb
mov
and
xor
es
ret
lret
std
mov
sbb
movsb
mov
mov
test
mov
lods
push
xchg
cmp
repnz
sbb
stos
jns
sbb
or
pop
stos
pop
fnstenv
jmp
cmp
aad
or
xchg
out
jge
test
test
pop
out
inc
pusha
sub
jl
jbe
sahf
sbb
int3
dec
aas
mov
inc
adc
cmpl
sbbb
dec
fstl
mov
ret
fisubrl
jno
jle
push
mov
lret
sbb
in
cli
xchg
mov
loopne
cltd
gs
popa
jnp
lods
nop
insb
test
loopne
jo
sbb
fisubl
aas
test
sub
add
hlt
test
jo
xorl
push
or
in
ret
and
inc
xlat
pop
push
or
scas
xchg
dec
outsl
and
xchg
out
bound
push
in
xor
mov
aam
mov
fdivl
loope
pop
out
sub
pop
mov
xchg
mov
and
sahf
jo
cmpsl
fbstp
sbb
cwtl
lds
push
rorb
test
ret
xlat
sbb
mov
test
fsubl
rolb
lea
imul
mov
stos
push
dec
hlt
lret
pop
cld
sub
sahf
call
push
stc
pop
xor
loopne
xchg
push
fwait
dec
push
loopne
sub
mov
imul
inc
into
jge
test
cmpsl
sti
or
cmpsl
lcall
xchg
jmp
sub
lret
shrb
inc
int3
fidivs
outsb
adc
push
adc
pusha
arpl
test
ret
adc
cmp
loope
xor
add
cmp
mov
or
mov
adc
js
xor
fwait
ret
lret
xchg
mov
sbb
xor
cwtl
push
sar
mov
flds
push
xor
push
cmp
aam
sub
cli
arpl
xor
popa
xor
mov
arpl
inc
cs
dec
jnp
das
sub
loop
es
bound
subb
lret
and
in
popa
xor
sub
aaa
insl
xchg
jl
pop
push
fwait
xchg
outsl
pop
outsl
sbb
les
cmp
xchg
insl
cmp
xchg
pop
insl
mov
stos
add
push
dec
cld
arpl
test
pop
popa
xchg
repnz
cli
aad
pmaxub
les
dec
mov
out
add
divl
xchg
stos
daa
xor
jno
add
xchg
movsb
push
lahf
cmp
add
push
adc
sub
adc
inc
jg
stos
call
sti
sbb
movsb
mov
dec
in
mov
loope
stos
inc
es
xchg
pop
aad
daa
js
cwtl
mov
dec
fisubrs
xor
push
cmp
stc
imul
stc
jno
sub
cmpsb
mov
and
pop
add
push
gs
and
scas
lea
ret
jmp
aaa
mov
movsb
outsl
cmpsb
pop
mov
xor
xor
pop
dec
cmp
popa
shrb
js
push
pop
xchg
push
mov
loop
add
iret
lahf
aaa
push
rorb
push
xchg
push
inc
adc
jl
mov
outsl
or
stc
add
add
mov
ds
pop
test
mov
jns
cmp
out
jp
sti
lock
sub
fmuls
jb
adc
std
mov
int
fcomip
sar
inc
mov
jmp
ficoml
inc
aad
sbb
pop
and
push
cmpsl
inc
sub
cwtl
and
inc
int3
xchg
lds
hlt
loopne
dec
mov
outsl
jmp
jno
roll
sahf
je
pop
imul
mov
test
scas
push
mov
and
test
mov
add
sti
inc
cmp
daa
mov
add
insb
jmp
bound
jge
xor
je
push
fidivrs
shlb
cld
xchg
in
xchg
bound
fscale
push
jl
ds
fsubs
imul
mov
ljmp
jg
pushf
push
inc
pushf
sub
scas
dec
mov
rorb
xor
outsb
cmp
rcrb
pop
fidivrs
movsl
imul
fisubrs
mov
popa
mov
mov
inc
mov
cmpsb
test
dec
fwait
sub
mov
aam
or
lret
sub
xorl
mov
aas
sti
fildll
jl
rorl
stos
inc
jo
lret
ret
jle
cltd
ret
push
sbb
push
insb
movq
cmp
xchg
lods
mov
cmp
xchg
adc
mov
mov
fisubrs
adc
mov
pusha
iret
cmp
add
ljmp
jo
cwtl
xor
test
inc
and
es
xchg
cltd
inc
js
sarb
arpl
out
push
push
es
dec
mov
pop
mov
xchg
or
icebp
mov
pop
dec
cs
xchg
fidivrl
dec
call
stc
daa
mov
orb
gs
push
xor
loopne
sbb
sbb
cmp
sahf
add
mov
cli
lret
addr16
pop
xor
ds
or
mov
and
cmp
out
or
test
adc
mov
cmpsb
inc
pop
sbbl
xchg
cmpsb
sahf
popf
stc
xchg
ret
cmpsl
cltd
adc
lcall
sarl
xchg
or
subl
outsb
and
movsb
in
jno
lock
mov
lds
fs
mov
dec
xchg
mov
adc
out
pop
out
pushf
inc
rorb
lea
les
mov
xchg
rolb
cmp
insb
ja
fsubl
pusha
cmpsb
scas
cs
stos
mov
push
or
popa
xor
cmp
lahf
xor
jle
out
int
pop
fisttpll
sbb
xor
push
jmp
fldl
sarb
cmp
les
push
sub
inc
dec
cmp
test
jnp
xchg
sti
dec
shlb
outsb
decb
and
lahf
mov
test
out
jl
je
pop
push
outsl
test
fs
stos
mov
cltd
sub
andb
sbb
adc
lahf
adc
mov
add
add
jge
jb
test
add
sahf
push
mov
sub
mov
inc
or
cmc
ja
decb
mov
arpl
pop
daa
mov
push
xor
sbb
push
ret
xor
xacquire
adc
or
loope
xlat
lods
pop
mov
push
int
stos
cmc
imul
out
push
pop
or
sub
xchg
js
cmp
xlat
loopne
mov
inc
adc
in
jge
inc
cs
xor
lcall
in
push
cmpsl
inc
mov
xorb
mov
testb
mov
and
lea
cmc
jno
scas
lea
adc
in
add
negl
fsubr
sbb
jnp
addr16
adc
or
out
jp
inc
cwtl
and
fs
int3
sbbb
test
rorb
push
out
xchg
ljmp
dec
adc
imul
mov
adc
pop
daa
repz
lcall
lahf
popa
pop
sbb
mov
mov
sbb
test
jmp
bound
mov
xor
and
adc
repnz
imul
imul
cld
push
pusha
test
jmp
testl
sub
mov
push
sbb
movsb
ret
sarl
xchg
mov
stos
ss
lods
loop
js
fsts
add
roll
mov
aad
jmp
adc
inc
sub
and
fst
add
ljmp
das
mov
lret
movsl
int
repz
lods
ret
popf
fistl
adc
fmuls
inc
cmp
push
cmp
in
xor
sbb
dec
mov
xor
sahf
in
jle
in
outsl
fmul
fiadds
dec
sbb
inc
and
gs
mov
pop
add
ficomps
mov
push
jl
outsb
or
push
lock
or
add
icebp
sub
xchg
daa
xchg
iret
push
sub
mov
sbb
add
dec
add
and
call
dec
cmp
es
daa
fbld
fnstcw
lret
pop
or
scas
es
add
and
add
pop
cli
push
popa
insb
das
lahf
test
stos
das
dec
sbb
push
lea
cmp
jo
jne
aas
ficoms
dec
cltd
and
lea
push
data16
mov
out
jne
cmp
or
mov
sbb
pop
sub
mov
add
sub
mov
fcomps
push
in
into
xchg
fldlg2
sub
andb
ja
mov
test
inc
add
test
pop
outsl
cltd
test
hlt
cmp
test
ret
adc
rclb
shlb
in
adc
push
inc
testb
out
and
shll
cltd
and
push
mulb
in
cld
out
dec
inc
shl
mov
inc
sub
subl
pop
outsl
rclb
jnp
hlt
dec
popa
rcll
lcall
out
xchg
bound
and
jnp
int
xor
fistpl
cmc
movsb
mov
daa
test
andl
jl
xor
cli
out
pop
cmpsb
aas
fsubrs
leave
adc
decl
filds
or
testb
mov
cmc
call
pop
int3
jg
pop
sbb
or
insl
outsl
mov
pop
shll
sbb
xor
test
outsb
mov
jnp
cmp
dec
push
and
push
cld
in
jns
push
cmpsb
scas
cmp
push
cld
add
negb
popa
rclb
adc
icebp
test
xchg
in
orb
lahf
lds
pop
mov
outsl
add
sbb
pop
push
fdivr
xor
cmpsl
or
push
repnz
jecxz
dec
ja
pusha
iret
xchg
mov
push
jns
sub
adc
mov
movsl
adc
xor
cmp
testl
push
nop
clc
xor
aaa
push
lods
sub
pop
repz
lea
xorl
inc
cmp
test
rclb
pop
and
mov
fsubrl
jns
xorb
pop
push
mov
jo
push
fiadds
ret
mov
test
dec
mov
jmp
jae
push
leave
mov
mov
leave
aam
outsb
xchg
sbb
out
push
scas
orb
lock
cmp
sub
aaa
push
in
repnz
cmp
test
jmp
stos
push
imull
leave
push
mov
pop
sbb
cmpsb
mov
mov
or
xchg
cmp
lods
jbe
les
and
popa
and
dec
adc
bound
push
sub
mov
push
imul
inc
xchg
iret
jnp
repnz
jne
or
jne
mov
xchg
into
sub
add
movsl
je
adc
popf
cwtl
and
adc
outsl
ljmp
cwtl
dec
sub
push
call
sahf
inc
mov
xchg
cmp
xchg
je
push
or
rolb
movsb
scas
add
and
stc
or
insb
xor
gs
push
push
daa
pop
jnp
rolb
in
divl
mov
incl
or
ds
dec
in
adc
cs
fcomip
push
cmp
test
inc
pushf
cmp
movsb
add
inc
cmp
mov
lods
pop
clc
cmp
jne
mov
lea
hlt
loopne
hlt
hlt
arpl
xchg
xor
or
scas
lcall
inc
mov
fcos
cmp
pop
inc
movsb
jmp
pusha
aaa
jae
cmp
pop
push
mov
fwait
dec
mov
xchg
mov
add
mov
lods
aas
sub
in
add
lahf
mov
and
mov
pop
sbb
fidivs
mov
cmp
test
daa
cmc
mov
xlat
sub
pop
or
xor
dec
pushf
lret
fisubl
in
mov
sbb
xchg
mov
sub
in
stc
adc
arpl
inc
rorl
mov
xchg
inc
xchg
adc
aam
jmp
inc
mov
sbb
lods
inc
jl
ss
sbb
mov
outsb
and
imulb
inc
outsl
mov
in
cmp
jae
rcrl
sbb
sub
pop
pop
adc
lock
push
shll
sub
testb
outsl
pop
push
push
ret
jecxz
inc
test
rcll
inc
aas
scas
inc
mov
pop
jo
outsl
imul
daa
sbb
call
lods
xchg
mov
adc
sbbb
push
push
jnp
mov
xor
cltd
or
fldenv
cmp
inc
mov
xchg
pop
cwtl
mov
mov
nop
es
and
jb
insb
cld
loope
ja
fs
cld
cld
pop
icebp
jle
cmp
adc
mov
lods
push
pop
mov
push
shll
sbb
mov
rcrb
fimuls
jge
out
xor
pop
dec
adc
enter
cmc
pop
lock
mov
jae
mov
in
push
xchg
mov
shll
mov
xor
loop
mov
mov
jecxz
mov
mov
mov
cwtl
jae
pop
stos
hlt
xchg
sbb
mov
mov
outsb
pop
sbb
push
call
xor
or
or
push
pusha
xchg
sbb
test
movsb
mov
xchg
inc
mov
pop
cltd
lea
cmp
fsubr
mov
cmpsl
int3
lods
mov
es
sbb
mov
jg
sub
rclb
clc
push
enter
fldcw
popf
mov
in
repz
lret
sti
mov
pop
add
das
fisubl
or
idivl
inc
add
lds
inc
inc
inc
dec
or
xor
es
sbb
dec
jo
pop
push
inc
cmc
mov
js
stos
gs
jns,pn
das
xchg
test
or
popa
data16
les
adc
push
pop
aaa
inc
adcb
call
push
or
fidivrs
xchg
mov
popa
pushf
push
cmp
jl
shlb
mov
fs
push
push
mov
lahf
cmpsb
push
mov
sub
dec
xchg
insl
out
in
shll
in
adc
or
mov
pop
shlb
int3
cli
mov
push
pusha
movsl
jo
jmp
xor
inc
xor
fbstp
xlat
mov
sbb
or
add
ljmp
sbb
testl
adc
push
enter
mov
pop
dec
xchg
lcall
rcrl
jge
and
and
mov
fidivs
dec
cld
dec
sub
into
push
shll
inc
pushf
int3
jp
fcom
xchg
sub
push
push
imul
fisttpll
stos
and
xchg
insb
in
mov
sbb
adcl
xor
cmp
stc
cmp
rolb
sbb
pop
ret
mov
lret
mov
out
sub
lret
dec
add
and
xor
cwtl
mov
mov
popf
mov
in
mov
sbb
mov
sub
in
lds
push
push
repnz
push
push
movsl
adc
repz
push
xchg
lcall
sbb
push
out
cmpsb
es
repz
out
jg
test
pop
jne
push
mov
push
rcr
push
push
cmpsl
mov
sbbl
into
jp
adc
xchg
xor
movb
or
mov
and
fiadds
cwtl
dec
enter
mov
push
notb
cmp
jbe
ss
das
or
in
and
call
jbe
repnz
out
mull
cmp
sbbl
outsb
jmp
adc
mov
mov
mov
xlat
lret
and
lds
pusha
xchg
loope
sbbb
aam
and
mov
push
std
add
subl
pmulhuw
call
jp
xor
shlb
cli
andb
and
sub
add
mov
loope
cmpsl
push
int
es
in
dec
fdivs
pop
jg
in
pop
xchg
lods
repnz
mov
dec
mov
push
inc
fstp
pop
mov
adc
xchg
insl
adc
pusha
fstpl
xchg
test
repz
add
adc
jg
cmp
mov
roll
stos
or
mov
push
mov
cli
test
fstp
add
cmp
inc
sbb
adc
xchg
xor
fdivrl
cmp
dec
inc
dec
leave
pop
cmpsl
and
fisttpll
mov
stos
aaa
lock
or
scas
lds
inc
or
sti
sub
dec
inc
ljmp
and
daa
jns
mov
jb
pavgb
adc
sti
add
inc
aam
int
fidivrs
and
sub
xor
loopne
pop
jecxz
int
fucom
mov
add
inc
sub
dec
pushf
clc
das
mov
push
jnp
leave
imul
sub
push
in
out
xor
popf
jecxz
sub
sub
ret
movswl
inc
mov
out
fiaddl
pop
rclb
and
add
pop
arpl
addr16
mov
xchg
adc
cmp
gs
test
cmp
push
aaa
pop
mov
scas
push
push
push
cmc
dec
test
add
fisttpl
push
movsl
dec
jb
add
fnsave
and
push
data16
and
cmc
sbb
divl
leave
pop
xchg
lahf
inc
mov
movsb
addr16
call
fdivr
sub
pushw
out
andl
add
mov
add
and
fisubrs
dec
lahf
lea
inc
mov
sti
shll
or
dec
push
sbb
test
jecxz
imul
cmp
pop
rcrl
and
sub
adc
in
filds
cmp
mov
in
xchg
pusha
sbb
xor
shll
iret
pop
jg
in
jge
jns
inc
aaa
push
jl
mov
lret
lds
stos
push
pop
sub
xlat
pop
xchg
mov
push
push
movsl
dec
xor
fwait
repnz
push
outsb
insl
and
fstl
mov
mov
adc
mov
push
jle
sub
cs
fistl
sbb
and
mov
jb
push
mov
mov
cli
xchg
push
lret
mov
mov
mov
addr16
or
jne
push
js
add
add
or
and
lcall
outsb
fisttpl
notb
mov
xlat
mov
pop
mov
sub
cmp
cmp
mov
lock
js
adc
and
fisttps
inc
addb
mov
sbbb
inc
mov
in
adc
in
stos
repnz
push
movsb
mov
std
xchg
sahf
arpl
xchg
xchg
sbb
leave
daa
out
xchg
xchg
mov
xchg
ror
repnz
mov
inc
aam
scas
in
enter
push
sub
and
ret
rolb
pop
ficoml
imul
xchg
test
hlt
test
mov
outsl
orl
nop
adc
in
ljmp
enter
out
int3
mov
sbb
xchg
add
test
or
out
jmp
subb
mov
scas
in
inc
mov
imul
mov
out
aas
popf
and
cmpb
aaa
out
mov
mov
scas
mov
pop
xchg
outsl
pop
push
xlat
cmpsl
mov
jno
jne
out
mov
cmp
inc
int3
rcll
out
movsb
and
les
ret
inc
mulb
or
cmp
aad
loopne
dec
jge
dec
adc
or
pop
outsl
filds
adc
pop
mov
ficoml
or
lods
pop
xor
push
clc
sbbl
fnsave
sub
sti
in
add
jb
sbb
ljmp
mov
or
pop
sub
adc
stos
aam
fbld
xchg
std
jmp
mov
xchg
sbb
pop
ja
out
pop
jo
push
int
cltd
sub
cmpsl
xchg
lds
ret
pop
fisttpll
xchg
call
or
jns
or
mov
jecxz
insl
jo
mov
inc
pop
mov
fs
addr16
mov
lock
int3
mov
push
sbb
xchg
xor
xor
pop
xchg
sbbb
ja
mull
ss
sarb
xor
xor
fsubrl
js
dec
cmp
pop
or
or
sub
add
aam
loop
or
fwait
mov
mov
gs
and
popa
les
adc
cld
movsb
jne
dec
mov
push
dec
jae
imul
addb
jo
dec
repnz
mov
subl
xchg
push
repnz
sub
fidivs
jnp
sbb
push
fiaddl
jl
lret
add
jb
and
inc
ja
das
js
mov
int
mov
leave
jge
pop
sahf
sub
hlt
jno
ficoml
add
lea
shrl
repz
pop
add
xchg
cmp
in
lret
adc
cmp
shll
pop
test
or
in
push
fdivs
into
push
mov
stc
mov
int3
add
pop
or
cwtl
or
adc
and
mov
dec
jmp
out
rcll
sub
and
or
jnp
aas
clc
adc
push
sbb
cmpsb
sbb
sbb
div
push
inc
mov
lods
xor
jmp
fcompl
mov
sub
outsl
add
and
adc
add
xor
xchg
outsb
mov
je
cmpsl
aaa
ds
push
mov
adc
in
add
aam
cwtl
mov
add
and
cs
in
fmull
pop
mul
adc
adc
and
sub
or
push
fiadds
int
push
inc
gs
ja
mov
lret
fxtract
push
inc
add
xchg
sub
orl
push
fstpt
lds
dec
hlt
add
ret
dec
aaa
stc
mov
cmpsl
mov
xchg
lods
push
js
test
mov
test
arpl
and
movsl
iret
mov
pop
mov
in
add
call
sbb
lods
in
and
pop
mov
sahf
xor
out
sbb
inc
fdivl
in
push
inc
test
mov
out
push
mov
rorb
in
jle
call
cmp
int3
adc
inc
outsb
popa
aad
mov
sub
adc
inc
aaa
fcmovu
pop
enter
fisubrs
inc
mov
insl
pop
sub
mov
adc
inc
and
xchg
sub
mov
add
mov
jnp
lock
pop
pop
push
cmp
pop
das
push
and
lds
cmp
mov
mov
lret
sub
push
cld
dec
inc
jge
inc
or
mov
adc
lcall
dec
inc
mov
dec
inc
aas
push
scas
pusha
imul
xor
repnz
in
mov
or
adc
out
cmp
test
add
sahf
push
xor
test
jp
hlt
sub
imul
imul
hlt
aam
mov
mov
push
push
xor
loopne
pop
fwait
int3
dec
mov
ret
mov
push
sbb
jb
insb
rolb
cmp
cmc
inc
jmp
sbb
ret
pop
jl
mov
arpl
movsl
mov
push
add
enter
lods
adc
mov
push
mov
sarb
lret
addr16
lods
inc
ffree
into
fadds
pop
mov
aaa
insb
ja
dec
cmpsb
bound
jmp
mov
mov
sahf
xor
inc
cmp
mov
cmp
push
and
mov
dec
xor
inc
lds
test
push
xor
mov
sti
add
jecxz
pop
lods
pop
jle
enter
xchg
jmp
xor
cmp
or
je
inc
fildll
pop
sti
loopne
mov
pop
in
xor
ret
jmp
fisubs
sbb
push
or
outsl
int
push
jg
xchg
jmp
adc
push
pop
push
jb
or
shrl
pop
jo
test
jns
push
xor
mov
nop
cs
sub
out
jnp
popa
imul
fnstcw
or
cld
mov
jne
xor
lods
pop
cmp
negl
sbb
inc
test
clc
xor
std
xor
lar
scas
bnd
scas
push
rclb
ds
test
mov
pop
cmp
gs
cmp
retw
loope
cwtl
sub
or
mov
aam
cld
ror
xchg
ljmp
in
xor
out
mov
xor
xchg
fsubl
or
movsl
pusha
stos
push
fcmovbe
mov
push
movsl
ds
imul
mov
push
sbb
adc
push
jne
cmp
jmp
loop
sbb
mov
mov
aam
mov
fisubs
dec
out
daa
lea
add
jo
call
dec
nop
pusha
in
push
ds
push
repz
pop
faddl
adc
mov
jle
mov
pop
sbb
and
sbb
aam
lcall
pop
negl
adc
pop
dec
adc
mov
pop
sahf
in
lcall
push
lea
add
mov
xbegin
insb
xchg
fs
jb
or
sarb
pusha
mov
add
fsubs
add
cwtl
jne
adcb
je
jp
jg
xor
push
sub
sbb
pop
xchg
pop
pop
fadds
inc
mov
sbb
aam
and
sbb
dec
je
xchg
pop
test
push
les
add
lahf
das
in
cs
insb
popf
andl
cmp
scas
pop
mov
cmp
cmp
mov
adc
jne
mov
and
xchg
roll
sub
jecxz
xor
fs
xchg
xchg
call
movsb
xor
sbb
lods
jg
jbe
cld
fiadds
aam
xchg
xchg
inc
and
notb
stos
push
dec
std
pop
mov
mov
fs
pop
ffreep
lcall
mov
clc
mov
add
loopne
lock
xchg
lret
scas
aas
lcall
pop
jb
jl
mov
dec
sbb
sub
data16
xchg
stos
out
dec
imul
push
mov
ja
out
gs
mov
and
or
or
inc
movsl
jmp
enter
mov
jmp
or
into
into
lcall
jge
mov
cli
xlat
call
pop
cmp
xchg
test
xchg
mov
and
outsb
je
jo
pop
dec
test
out
cmp
roll
adc
and
out
scas
int3
cmp
call
ftst
push
jmp
fistl
and
cwtl
repnz
mov
repz
or
fildl
xor
adcb
in
mov
dec
bound
push
sbb
sarb
test
dec
push
jmp
sbb
push
icebp
and
loop
jp
mov
dec
push
lret
loope
sahf
rcll
push
out
sahf
repz
das
ljmp
in
push
lahf
push
lods
es
js
loopne
cmp
lret
mov
or
dec
rorl
insb
fstpt
jb
or
mov
popf
jae
jle
xchg
rorb
icebp
cwtl
lock
jge
rcrb
ljmp
inc
ljmp
pop
test
imul
mov
mov
cli
loop
test
push
push
out
push
and
sbb
push
ja
das
sub
sti
in
inc
ja
mov
dec
mov
orb
cmp
push
aad
aam
mov
jo
add
out
dec
pop
pop
mov
xchg
jae
into
nop
adc
imul
stos
jae
adc
cli
das
cmp
dec
xchg
lret
aad
push
lds
sbb
xor
popa
lret
fildll
xor
fsubs
or
push
cmc
lds
imull
movsb
in
xchg
addr16
cmp
cmpsb
loopne
ret
xchg
test
paddb
jge
in
and
dec
mov
leave
push
dec
into
xchg
bound
jbe
fstpt
jnp
repz
fdivs
pusha
imul
mov
aaa
push
out
int
or
mov
pusha
inc
push
lods
inc
fcompl
faddl
fwait
in
vpsadbw
fcomps
pop
sub
scas
js
or
cmc
pusha
add
or
das
sbb
add
jmp
xlat
sbb
pop
outsl
imul
xor
xor
or
add
nop
add
enter
les
mov
pop
adc
sub
popf
xchg
mov
push
pop
xchg
pop
mov
mov
nop
mov
fdivl
or
sbb
mov
jne
add
iret
xor
and
add
movl
inc
fcomps
push
cmpsl
in
push
mov
pop
test
shl
sub
push
or
in
lds
and
cmpsb
data16
cmp
jmp
or
mov
adc
jae
movsl
xor
repnz
dec
fcomip
sbb
add
into
dec
pop
xchg
dec
js
inc
push
lock
cmp
sub
mov
and
enter
sahf
push
stos
or
scas
lds
hlt
popa
mov
hlt
lcall
jno
sbb
popf
ss
mov
sbb
rcrl
or
cmc
add
cmp
das
cmp
cltd
ds
add
adc
cmp
pop
outsl
mov
pop
add
lods
jo
xlat
dec
jge
int3
dec
mov
mov
push
fisttps
jl
repnz
adc
int3
sub
pusha
sub
enter
cmp
js
mov
jmp
inc
enter
jnp
imul
xor
dec
xlat
cmp
sbb
pop
sar
int3
leave
aaa
or
or
xacquire
pushf
xchg
sub
jg
pushf
clc
pop
movq
cmpsl
mov
loopne
cmpsb
out
mov
cltd
repnz
out
test
aam
outsb
icebp
or
fcompl
out
scas
cmpsl
dec
ret
and
mov
das
mov
lock
mov
mov
push
pop
ja
mov
addr16
ret
adc
lret
jno
sbb
scas
enter
filds
inc
sbb
pop
jo
in
in
subl
inc
push
call
popf
int3
adc
ja
mov
push
pusha
and
mov
dec
mov
mov
mov
or
and
dec
ret
pop
mov
jg
in
or
int
pusha
and
out
dec
mov
xlat
fninit
dec
outsl
sub
jns
out
fldcw
fistpl
push
aas
outsb
das
xchg
imul
jno
lock
sub
or
sbb
out
adc
xor
adc
add
test
cmp
sahf
xchg
mov
stos
push
lds
das
add
repz
fs
movsl
addr16
pop
bnd
xchg
pop
jp
xchg
inc
mov
or
in
fsubs
fsubs
idiv
loopne
out
enter
insl
dec
mov
cmc
pop
and
ss
mov
out
int3
pop
movsl
sarb
in
or
sbb
das
mov
xchg
test
scas
pop
sub
cltd
mov
icebp
pop
test
and
icebp
jmp
iret
and
mov
pop
data16
fldenv
lret
adc
xchg
mov
imul
xchg
adc
scas
imul
sar
ud1
mov
rdpmc
ret
fadd
mov
repnz
lret
sbb
sub
push
shrb
adc
cltd
lahf
sub
mov
ja
and
int3
enter
repnz
or
sbb
add
hlt
fmul
std
cmp
aas
pusha
addr16
mov
mov
adc
inc
leave
ret
mov
or
sub
outsl
clc
dec
xchg
pop
inc
cmp
inc
cmp
mov
lock
adc
in
inc
sub
mov
jbe
test
pop
push
cld
and
pop
cld
cmp
xor
out
adc
inc
lea
loopne
fidivrs
into
out
std
inc
dec
xchg
cmp
fstps
in
sub
cmp
fildll
test
mov
fxch
shlb
lret
jecxz
fwait
add
aam
jp
xchg
mov
lahf
cmp
cli
ret
sub
cmp
push
pop
insl
dec
ret
js
add
adc
cmc
repz
insl
rcl
cmp
push
aaa
test
xlat
adc
xor
push
mov
jl
rorl
test
fwait
out
push
ds
in
push
jo
js
cmp
adc
fisttpl
cmp
and
xchg
adc
jg
inc
xchg
push
inc
sbb
cmp
lret
cs
test
adc
out
xor
lock
mov
add
xor
xchg
push
adc
or
fwait
xor
push
popf
mov
push
lret
test
insb
les
mov
andl
mov
dec
idiv
xchg
xchg
sbb
push
jns
and
mov
pusha
cmpsb
xor
mov
pop
mov
test
aam
sub
ljmp
mov
in
into
aam
jle
lcall
sbb
adc
lret
inc
push
jge
xor
jp
out
inc
mov
fsubl
mov
repnz
rorb
sysret
into
dec
insb
fcoml
adc
out
sub
push
cmpsb
adc
push
cmp
jbe
int3
dec
jecxz
cmp
dec
jecxz
testb
sub
fisubrl
les
cwtl
scas
pusha
mov
inc
jge
aad
insb
test
out
lret
sub
pop
pop
insb
sbb
and
fs
jae
dec
je
cmpsl
push
mov
in
xchg
call
jns
or
mov
mov
or
lea
jle
or
mov
cmp
shl
dec
js
xchg
mov
xchg
jle
mov
lahf
jne
xor
cmp
sub
out
adc
shr
dec
and
cmp
pusha
es
rcll
fisubrl
fildl
mov
sbb
dec
repnz
xor
mov
sbb
add
cmp
rcrb
in
int
xor
mov
sti
test
les
stos
sbb
sub
push
inc
clc
or
cmp
mov
or
cmpsl
xchg
xor
inc
mov
cmpsl
mov
adc
and
and
cld
data16
cmp
cmpsb
adc
inc
jae
cmc
or
js
fnsave
xchg
push
test
sbb
jne
out
mov
test
lret
fwait
sub
mov
test
mov
cmp
fisubs
adcl
cmp
aas
jae
mov
adc
pop
xor
pop
and
inc
fisubrl
push
inc
and
gs
mov
inc
dec
inc
movsl
jecxz
lods
sbb
pop
push
hlt
test
popa
mov
loop
loop
xor
rcr
add
mov
mov
xor
pop
lret
add
cmc
inc
xor
fsubrs
ljmp
call
daa
imul
jo
adc
and
cld
jle
int3
pop
imul
outsl
push
cmp
jl
xchg
push
out
add
nop
adc
fyl2x
pop
mov
imul
pop
jle
mov
fwait
dec
sub
nop
adc
mov
pop
sahf
daa
aaa
pop
pop
inc
jp
outsl
or
fld1
jmp
mov
movsl
dec
popf
in
fisttps
fucomi
inc
mov
cmp
leave
es
dec
in
outsb
rcll
mov
out
in
mov
pop
shrl
lock
pop
xor
dec
mov
dec
mov
icebp
sarl
sbb
lret
or
dec
mov
xchg
sbb
std
leave
aaa
aaa
in
mov
mov
push
jbe
mov
lret
mov
sub
mov
hlt
add
and
sub
and
dec
mov
orps
or
push
dec
mov
and
subl
or
or
adc
inc
mov
jmp
pop
mov
popa
mov
add
jns
or
js
dec
movsb
nop
lret
out
push
pop
cltd
xchg
repz
sbb
mov
repnz
das
pop
mov
mov
pop
imul
pop
sub
xor
fstl
movsb
sbb
cmpl
cwtl
pushf
loopne
xor
sbb
test
out
add
and
out
int
loopne
sub
mov
inc
pop
dec
lock
and
xor
ljmp
inc
scas
inc
push
and
inc
cli
addr16
mov
push
adc
pop
stos
mov
jle
popf
les
sahf
insb
fisubs
adc
dec
adc
inc
push
inc
jae
test
test
cld
outsl
dec
or
xchg
lock
mov
outsb
ljmp
stos
lock
cmp
push
pushf
nop
scas
ret
cltd
data16
imul
icebp
add
mov
pop
icebp
jo
push
aam
repz
fstl
xchg
xor
rcrl
daa
sub
push
sbb
cld
pop
adc
loop
xchg
movsb
xchg
mov
mov
repz
and
das
pusha
and
cmpsb
leave
ret
inc
push
cmpsb
nop
push
mov
push
push
xchg
in
dec
repz
lahf
andb
xchg
test
imul
sub
stos
movsb
cmpsb
in
push
push
insb
lock
jmp
in
adcb
adc
mov
sbb
mov
fisubs
and
cmp
aad
mov
fisubrs
in
mov
mov
fwait
es
loop
mov
data16
mov
cmp
movsb
aad
cs
jns
jno
inc
in
popf
or
cmpsl
sbb
mov
push
ret
loope
or
sub
outsl
push
adc
insb
mov
dec
or
dec
aas
dec
dec
ss
stc
aam
mov
adc
xchg
lcall
sub
cmp
ret
sbb
cmp
enter
dec
imul
stc
or
push
sbb
sub
imul
sub
dec
iret
jge
mov
mov
loope
roll
sub
out
mov
mov
dec
sbb
lahf
pop
dec
inc
xlat
dec
xor
pop
call
aam
and
in
aaa
pop
mov
sbb
mov
repnz
addr16
scas
sbbl
dec
lea
lcall
push
mov
loopne
push
mov
dec
leave
or
into
add
xchg
jp
add
roll
inc
sub
fnsave
and
lea
xor
std
imul
xlat
rclb
and
xor
dec
jo
subl
push
pop
xchg
fidivrl
data16
scas
inc
mov
fnsave
scas
mov
mov
xlat
neg
jecxz
ret
adc
movsb
xor
mov
in
jp
xchg
sbb
hlt
fadds
adc
pop
pop
pop
fdivrl
dec
jne
and
sahf
and
ljmp
jp
cmpsl
shrb
dec
push
sti
insb
pusha
inc
mov
lods
xor
push
cld
sbb
or
and
inc
jno
xor
lds
jmp
sub
sbbb
cwtl
dec
push
inc
enter
repz
scas
dec
in
add
ljmp
loope
cmp
pop
into
lret
int3
jbe
or
or
pushf
sbb
dec
cli
sbb
pop
sub
movsb
sbb
es
mov
inc
packuswb
aad
cmp
test
mov
bound
dec
sar
popf
add
mov
xchg
push
bnd
sub
pop
inc
ljmp
xor
cmpsb
movsl
fsubl
or
imull
lock
jle
mov
add
pop
push
xchg
out
mov
and
and
push
call
js
repz
and
jp
cmp
mov
or
dec
jge
mov
test
lcall
ficomps
mov
mov
push
test
pop
fldt
es
les
lret
clc
pop
cmp
loopne
shrb
das
cld
shlb
add
movl
incl
xchg
push
sbb
dec
test
dec
mov
or
or
add
iret
cld
in
fxch
push
stos
mov
scas
pop
test
cli
cmp
cwtl
dec
ret
mov
call
push
mov
inc
jmp
push
lock
cwtl
xor
icebp
inc
xchg
insb
arpl
aas
popf
xchg
dec
push
jae
test
sti
int
jb
cli
shr
mov
jg
cwtl
insb
cmpsl
outsb
movsb
mov
sbbl
iret
dec
jmp
nop
daa
imul
sub
int
cmpsl
xlat
repz
int
enter
fnsave
inc
pusha
fsts
push
les
push
and
sar
lods
fwait
call
repz
arpl
popa
push
push
sub
int
jecxz
mov
iret
add
ljmp
in
shll
test
out
rcl
scas
fwait
push
xchg
lods
mov
mov
imul
inc
xor
ret
inc
push
daa
and
pop
jbe
push
pop
adc
or
dec
jae
lret
or
dec
out
xlat
cld
shl
ss
in
sbb
add
dec
or
cmp
pop
cmc
push
pusha
leave
inc
mov
ret
dec
in
test
int
nop
aam
loopne,pn
push
mov
lea
inc
enter
xchg
xchg
sbb
adc
inc
cmp
mov
pusha
popa
cwtl
sub
jg
popa
rcr
sarb
add
imul
std
add
in
or
inc
push
std
and
loope
mul
repnz
repz
jbe
adc
cmc
inc
inc
test
xchg
aas
cmp
aad
mov
rcr
movsb
add
sti
xchg
add
lods
push
shl
inc
jns
lods
mov
adc
pushl
aad
mov
sbb
xor
or
inc
push
mov
cmp
or
and
icebp
cmpsl
push
cmp
inc
push
roll
lret
cmp
xorl
push
push
inc
jmp
sub
cmp
test
dec
repz
hlt
sub
jle
jmp
out
inc
pop
sub
dec
insl
fwait
push
xor
dec
push
stc
jnp
fnstenv
enter
or
push
rcl
nop
pop
arpl
rcrl
das
jmp
push
or
adc
mov
push
adc
or
inc
fldenv
lret
xchg
mov
sbb
lret
jbe
mov
movsb
mov
dec
out
cmp
clc
inc
pop
xchg
lahf
xchg
mov
lods
or
sub
hlt
sti
fmull
cwtl
int3
mov
sub
sbb
or
inc
mov
sbb
adc
pusha
cs
dec
mov
test
jl
in
sbb
data16
jnp
mov
xor
mov
fstl
mov
dec
inc
shlb
xchg
fstl
lea
sub
mov
lcall
or
inc
imul
add
out
stc
dec
mov
sbb
mov
push
jae
scas
cmp
ds
shr
mov
push
adc
adcb
jae
aaa
sbb
lea
or
shrl
push
lret
scas
cs
mov
jmp
jle
jle
xchg
sub
cmpsl
jle
mov
or
xchg
leave
repz
clc
dec
rolb
in
push
pop
popf
loop
mov
vandps
mov
mov
loop
fidivrs
mov
inc
inc
push
inc
inc
aas
les
ja
fiadds
xchg
jae
daa
or
inc
pusha
mov
inc
neg
lret
jmp
call
enter
mov
xlat
dec
fs
cmc
je
cld
adc
mov
cmp
xlat
mov
aad
pop
in
pop
xlat
lock
insl
pop
push
hlt
jecxz
test
pop
hlt
test
je
inc
mov
dec
push
aaa
ja
out
daa
inc
nop
pop
insb
pop
lahf
pop
push
nop
cli
jle
xchg
cwtl
adc
and
je
sub
inc
mov
push
aas
out
or
sub
and
xchg
mov
fs
jnp
xor
jbe
into
jo
cltd
push
fbstp
push
add
or
lret
sub
cmp
imul
jge
out
dec
push
mov
push
push
mov
mov
xchg
int3
int3
incb
aas
loope
lcall
cmp
jbe
aad
sahf
orl
das
jle
adc
cmp
cmp
push
sbb
jg
aam
js
jle
mov
mov
stos
mov
dec
andb
out
mov
imul
add
sbb
mov
pop
fadds
add
add
push
cmp
xchg
sarl
mov
clc
es
cmp
roll
and
test
lea
jno
js
mov
xchg
push
push
or
loope
lret
mov
xlat
xlat
stos
gs
push
nop
xor
mov
jle
cmp
mov
js
popa
popa
lds
aas
pop
aad
sub
out
add
mov
push
nop
mov
mov
xchg
in
ficompl
call
xchg
xor
xlat
xchg
xchg
rcl
push
xor
cmp
subl
arpl
xor
aam
mov
dec
clc
sub
incb
cmpsl
xor
out
inc
mov
fwait
scas
adc
add
push
xor
bound
mov
cltd
add
inc
jbe
sbb
shr
aas
inc
mov
int
test
mov
mov
test
fstps
cli
int
and
push
and
add
inc
fnsave
sbb
ljmp
sbb
xor
add
mov
pop
cltd
jo
punpcklwd
ret
jno
es
add
lods
movsb
xchg
dec
cmpsb
mov
inc
adc
inc
mov
xchg
adc
add
scas
or
xor
mov
sbb
jo
xor
sub
sbb
shlb
mov
cwtl
and
test
xchg
mov
lcall
jle
mov
xchg
sbb
cmp
push
xchg
cmpsl
cltd
je
dec
es
fdivrs
and
mov
mov
fisttps
stos
ficomps
push
jge
fnstenv
repnz
and
xor
shll
xchg
inc
sbb
out
sahf
inc
loopne
ljmp
lods
mov
test
in
add
or
jns
add
inc
icebp
fildl
dec
mov
ljmp
dec
mov
call
cli
sti
mov
dec
fistl
sbb
pushf
ljmp
je,pn
mov
lds
push
mov
add
loopne
icebp
mov
inc
test
cmc
xchg
inc
outsb
ss
js
adc
cmpsb
jecxz
mov
inc
dec
pop
pushf
jo
pop
pop
sbb
mov
mov
scas
scas
cwtl
out
adc
xor
mov
sub
insb
lcall
push
int
xchg
testl
or
pushf
mov
push
pop
mov
dec
mov
push
das
mov
insb
scas
xor
dec
loope
xchg
mov
push
adc
mov
ret
mov
xchg
rcrl
inc
mov
in
in
imul
divl
xchg
stos
adc
sbb
inc
push
add
xlat
popl
aaa
cmp
and
leave
cmp
pop
mov
arpl
jg
adc
test
fcomps
gs
jno
arpl
lahf
mov
push
movsb
push
mov
xchg
cmpsb
pop
sbb
aaa
sub
sbb
dec
or
sub
jle
shlb
lea
shlb
shll
loopne
fcmove
and
adc
push
mov
xorb
mov
addl
mov
rol
pop
hlt
cmp
adc
insb
inc
sub
sub
xor
push
push
jb
ljmp
dec
iret
jno
pop
jb
xchg
aam
flds
jno
and
pop
push
jns
inc
in
xchg
push
sbb
xorps
rorb
push
mov
outsb
fs
popf
jl
out
negb
ret
cltd
iret
dec
movsb
clc
outsb
rsqrtps
cmp
pop
mov
cs
lea
das
xchg
sbb
fisttpll
sbb
mov
or
adc
es
dec
cmp
adc
cld
pop
pop
ret
fs
adcb
hlt
mov
sahf
aaa
cli
and
or
add
fadds
repnz
adc
mov
bound
jns
jge
ljmp
xor
cmp
in
pop
das
dec
mov
lea
and
jb
ja
loope
jae
dec
pop
dec
dec
mov
adc
and
pop
jbe
xchg
add
fsubrp
pop
int3
ds
jecxz
fbstp
leave
dec
sub
add
in
pusha
xorb
inc
test
pop
es
mov
sbb
mov
xor
les
mov
loop
xchg
cmp
add
das
fucom
popf
mov
push
xor
test
xchg
mov
out
sti
dec
add
mov
jl
dec
addl
push
pop
fadd
push
call
cmpsl
push
dec
movsb
cmp
test
push
test
in
mov
sti
pusha
adc
add
jecxz
lret
insb
nop
mov
cwtl
jo
scas
call
push
sub
mov
pop
mov
push
lods
js
jecxz
or
cmp
sbb
cmpsb
pushf
pop
iret
cmc
mov
int3
test
jecxz
pop
mov
cli
aaa
dec
bound
pop
inc
into
adc
test
out
das
fwait
test
loop
rcrb
adc
ret
outsl
add
lock
movsl
jnp
scas
std
pop
xor
movsb
stos
ja
and
pop
test
pop
mov
je
mov
push
cmp
movsb
dec
and
sarl
sti
mov
shlb
mov
jae
sub
loopne
mov
mov
mov
scas
das
imul
test
repnz
mov
or
jo
or
sbb
inc
std
lcall
fwait
push
sub
xchg
pusha
jl
int
inc
dec
insl
loope
mov
lds
aam
stc
mov
bound
gs
jns
dec
lock
and
adc
sbb
stos
or
aad
xor
lds
xor
jns
popf
jns
lcall
mov
and
cmpl
cs
sarb
inc
stos
mov
movsl
dec
add
cltd
scas
mov
mov
cmpsb
sub
ja
dec
fsubr
rcrl
sub
mov
repz
in
loopne
jp
pop
mov
dec
inc
mov
xor
lret
fnstenv
pop
in
xchg
xor
sbb
xchg
jbe
jnp
rcr
scas
mov
cwtl
cmp
xchg
jns
fiadds
push
fidivrl
pop
mov
popf
jae
fistl
cmc
or
pop
shl
in
mov
mov
jmp
inc
push
add
xchg
movsb
pop
pusha
inc
mov
in
xchg
inc
xlat
testl
lret
dec
push
jb
mov
dec
mov
dec
pop
jbe
cmpl
ss
inc
notl
cs
jmp
mov
adc
sbb
xor
push
loop
sub
je
pop
jae
sub
fnstcw
sbb
das
xlat
enter
mov
sti
in
in
arpl
inc
ja
js
jge
outsb
ret
mov
das
test
lahf
es
mull
nop
pop
ljmp
jnp
inc
jle
nop
in
fmuls
cmp
loopne
out
sti
xor
xor
mov
daa
jge
mov
dec
xchg
movsl
adc
adc
fs
in
adc
inc
fs
fimull
push
sti
ja
gs
faddl
int3
and
dec
mov
add
mov
popf
push
std
iret
inc
xchg
xchg
lahf
lea
sbb
pop
repz
in
jbe
inc
sub
lods
inc
int3
int3
cmp
pop
sub
sbb
daa
clc
pop
xor
es
je
mov
add
out
jecxz
xchg
subb
cmp
cwtl
cmpb
adc
hlt
jb,pt
sub
pop
jo
add
push
jecxz
adc
or
out
push
mov
pop
cmp
adc
and
sub
jl
aaa
fucomp
test
cltd
sbb
mov
nop
mov
imull
insb
cmpb
xlat
jmp
sub
enter
dec
aad
or
push
jge
fcompl
push
ljmp
jne
adc
xor
inc
gs
mov
jecxz
insl
add
cs
jo
rcrl
jge
pushl
rorl
into
test
adc
push
icebp
insl
xchg
mov
and
and
mov
fldl
mov
call
arpl
push
movsb
std
inc
inc
inc
addb
in
pop
sbb
xchg
loope
jl
or
cmp
push
mov
cwtl
movsl
jge
fmuls
sbb
outsb
loop
outsl
jl
push
mov
popa
inc
roll
or
jge
lds
orb
push
jg
pop
add
rcrl
cmpsl
jmp
inc
fcomps
push
sub
movsb
or
pop
add
repz
xchg
jge
inc
fwait
xor
pop
mov
mov
adc
cmpl
mov
dec
aas
push
popa
mov
andb
aad
jnp
dec
outsl
pop
pop
cmp
inc
mov
rorl
jns
jecxz
pop
xchg
rolb
xchg
insl
adc
fldcw
cmpb
stos
jns
jo
jne
mov
dec
mov
xor
pop
sbb
mov
rolb
xchg
daa
test
push
out
ret
cld
adc
movsb
shrl
pop
test
mov
pop
sub
in
jg
jl
jmp
cmp
mov
dec
cs
shrb
in
xor
adc
jg
std
and
roll
pushf
imul
dec
out
push
out
mov
insl
pop
xchg
jp
cmp
std
sub
mov
test
in
out
sbb
cmp
jecxz
aad
lods
push
outsl
jbe
orl
mov
rol
es
jg
repz
mov
add
cmp
rolb
pminub
sbb
outsl
mov
ftst
outsb
jle
lods
ficoms
push
in
std
xchg
lods
je
add
nop
xor
xor
cmc
in
lods
ja
cli
add
cld
popf
or
mov
outsb
fsubs
push
out
pop
adcl
xor
or
and
enter
inc
and
pop
push
std
stc
inc
pop
aas
jnp
mov
movsb
dec
loop
push
ret
push
and
imul
pop
xor
sahf
add
and
int
je
in
jns
std
xchg
test
loope
outsl
sbb
rcll
scas
jne
xchg
fsubl
or
and
nop
orb
neg
jae
jns
pxor
or
cmpsb
shll
mov
push
mov
out
inc
adc
out
jmp
sti
mov
push
mov
std
aam
fwait
or
mov
leave
jge
push
dec
push
std
jp
jnp
mov
jo
flds
jae
mov
es
jge
xorl
in
pop
mov
mov
push
jmp
cs
lods
int
xor
push
cmpsl
pop
dec
rorb
jg
out
mov
pusha
cs
icebp
andl
push
xchg
std
push
inc
aam
push
frstor
fildll
cmc
mov
push
mul
cmp
ret
daa
jb
cmp
imul
es
xor
dec
dec
rorl
cwtl
add
in
mov
cli
mov
xorb
out
fsubl
cli
sub
sbb
sahf
xchg
jno
outsl
sub
pop
imul
mov
inc
scas
xchg
mov
xchg
cmp
pusha
shr
loopne
dec
fstl
shl
jno
icebp
mov
xor
pop
shll
movsl
add
cld
mov
push
pop
adc
popa
mov
lahf
sbb
loope
stos
xor
mov
mov
xchg
in
xor
add
outsl
jne
outsl
inc
sbb
dec
sbb
orb
repnz
lock
orb
icebp
pop
shrl
scas
popf
mov
jg
sti
pop
test
mov
adc
fmull
stos
add
adc
mov
xchg
jae
mov
cmc
sub
xchg
dec
add
mov
xchg
in
out
stos
push
lods
xor
movsb
inc
xor
xchg
lret
sub
sub
mov
out
mov
inc
leave
fmuls
adc
pusha
js
in
jmp
in
neg
iret
sub
mov
int3
push
jns
dec
popf
mov
cwtl
cmp
movsl
fldl
push
push
out
icebp
adcl
mov
sbb
pusha
sbb
push
rcll
out
loope
mov
sub
push
mov
ret
sub
adc
adc
jo
arpl
imul
mov
jne
sti
stc
repz
sub
imul
jne
orl
mov
inc
int
xor
fs
push
cwtl
popa
das
mov
sbb
jecxz
sbb
out
pushf
or
jne
fsubrl
dec
sbb
or
fisubrs
xor
add
hlt
or
out
sbb
into
jp
xchg
out
insb
push
dec
xor
test
scas
ljmp
in
test
push
pop
pop
out
in
mov
jmp
sub
add
mov
mov
or
sub
popf
mov
dec
mov
sarl
pusha
jl
dec
test
pop
out
add
lock
orb
fcmovnbe
push
push
out
flds
inc
jle
xor
push
loop
adc
push
push
test
mov
stc
pop
jb
pop
xchg
js
aaa
std
or
imul
ljmp
fists
jns
xor
icebp
xlat
inc
cmp
out
push
sub
out
xlat
data16
cmp
inc
sub
pusha
cwtl
pop
dec
dec
js
in
test
push
jbe
movsl
sti
movsb
scas
push
or
iret
enter
cmp
inc
mov
xor
insb
pushf
cmpsb
or
aam
sbb
inc
push
hlt
push
out
jb
rclb
nop
outsb
fadd
ret
mov
addr16
jle
jl
cmp
sub
xor
cltd
popa
push
stc
shr
push
dec
inc
outsb
xchg
mov
lods
inc
xchg
add
mov
frstor
out
push
or
int
pop
ss
jg
sbb
adc
movsb
mov
or
mov
pop
sbb
xlat
js
pop
movd
sbb
cmp
ret
out
stc
dec
cltd
add
bound
daa
push
shll
lahf
or
mov
or
lds
test
aad
sahf
push
xchg
adc
push
call
mov
cmpsb
je
fadd
cmpsl
sbb
mov
and
or
ds
sub
mov
mov
adc
xor
adc
jb
and
or
lcall
mov
cmp
movsl
rcrb
sub
scas
push
xchg
cltd
pop
mov
popa
xchg
xlat
xchg
sbb
adc
jecxz
lahf
cmp
faddl
ss
dec
cmp
jmp
adcl
add
jns
pop
or
addr16
jl
push
lahf
ja
addr16
adc
imul
jecxz
cmp
daa
cltd
lods
add
pop
and
push
pushf
xor
cli
cmpsl
xchg
push
and
movsl
mulb
popa
mov
push
adc
shl
outsb
fsubs
shll
popa
test
cld
cmc
push
sbb
jnp
pushf
into
ret
ret
arpl
mov
mov
andb
leave
xchg
outsb
mov
movsb
insl
and
inc
sbb
dec
jecxz
iret
fs
jmp
add
pop
xorb
ret
jg
call
and
mov
mov
jb
insl
push
mov
stos
adc
mov
or
popf
and
and
xor
and
mov
push
inc
imul
sbb
jno
xchg
xchg
push
out
push
mov
icebp
enter
jmp
test
cmp
fwait
or
dec
scas
insl
add
dec
and
jb
stos
aas
out
mov
dec
leave
loop
lods
pop
outsb
pop
dec
bound
xchg
icebp
gs
gs
sbb
ljmp
aas
test
pop
and
shrb
loope
bound
call
add
subl
in
rcl
push
pop
or
or
dec
push
and
lds
rclb
mov
outsb
int3
ja
adc
add
sub
cwtl
lds
leave
xchg
jo
mov
sub
sbb
test
push
leave
mov
add
fs
xlat
aam
cmp
mov
stos
jmp
enter
dec
lret
out
arpl
stos
aaa
adc
dec
arpl
inc
dec
mov
xor
pop
movsl
dec
repnz
xchg
pusha
loope
call
sub
lcall
rcll
call
flds
or
rcl
divb
add
dec
ret
or
aaa
push
mov
pop
fs
and
adc
stos
xchg
stc
dec
adc
mov
sub
xor
xorl
jle
xchg
dec
sbb
pop
dec
popf
mov
xchg
inc
add
push
ror
ret
dec
loope
fstpt
mov
cmp
adc
sub
sub
inc
or
sahf
push
xor
sub
mov
or
aaa
test
dec
mulb
fstl
pushf
popa
lahf
js
in
and
ret
test
dec
fcmovnu
sub
imul
mov
mov
cmp
inc
xchg
mov
push
aas
fimull
mov
call
imul
adcb
sbb
test
mov
add
gs
lds
xor
mov
sbb
dec
jge
ds
xor
pop
push
pop
xchg
call
fsubrl
jge
dec
ds
mov
dec
jmp
add
sub
push
ret
iret
push
push
icebp
mov
jecxz
add
sahf
ljmp
loope
sub
test
out
add
dec
mov
aad
cmp
xchg
push
mov
push
aas
pop
cmpsb
dec
add
mov
and
scas
mov
fwait
push
scas
imull
pop
cmp
jo
sub
sub
leave
xchg
sbb
mov
dec
push
mov
dec
push
andb
bound
ja
adc
shr
in
pop
mov
mov
dec
or
movsl
mov
int
mov
outsl
add
mov
or
mov
es
adc
lret
lock
stos
sahf
daa
xchg
imul
es
sub
xor
repnz
mov
inc
mov
jno
add
stos
std
pop
shlb
lds
gs
ror
push
dec
pusha
mov
mov
jp
mov
cmc
rcl
arpl
out
out
mov
mov
mov
leave
dec
jecxz
xchg
movl
fcoml
jp
aas
nop
jnp
pop
int3
xor
xchg
das
add
test
test
or
xchg
arpl
jle
mov
mov
or
daa
cmp
iret
push
mov
movsb
pop
jge
pushl
inc
push
sub
fdivrp
frndint
lcall
in
push
and
pop
pushf
ret
and
ss
or
inc
add
and
pushf
cli
call
int3
int
in
jecxz
add
test
repz
adc
inc
xor
int
nop
mov
pop
mov
xchg
mov
lods
aas
in
xchg
adc
gs
sbbb
js
imul
xchg
xchg
cmpsb
jo
cs
push
xchg
mov
jb
dec
pop
je
fwait
mov
mov
incb
mov
inc
mov
sahf
loopne
dec
ja
bound
or
aaa
fisubrl
out
lahf
inc
in
mov
xchg
pop
test
jmp
fs
popf
sub
test
inc
cmp
call
in
add
jne
std
sub
push
clc
mov
mov
mov
jle
dec
das
xchg
jne
fcoms
adc
mov
addb
mov
add
mov
push
xor
mov
out
rorb
cmp
ja
rcll
and
fbstp
sahf
fstpl
xor
fcmovnbe
mov
xchg
sarb
adc
and
dec
sub
jp
sti
and
and
daa
jl
xor
les
xchg
lock
mov
mov
xchg
cwtl
sbb
xchg
jecxz
mov
into
add
pop
inc
testb
ljmp
aas
or
pop
sti
mull
rorl
pop
cmp
sub
jns
stos
pop
scas
adc
pop
jo
xor
hlt
or
push
mov
xor
movsb
xchg
sti
clc
lahf
add
xchg
mov
and
fadd
mov
gs
pop
shrl
lahf
push
mov
jno
loope
mov
cltd
mov
scas
test
add
xlat
jne
jb
pop
loop
fbstp
inc
mov
push
mov
and
pop
repnz
cmc
jle
pusha
add
xor
in
inc
jb
mov
mov
aaa
add
inc
adc
push
xchg
int
repz
or
pushf
movl
pushf
inc
fisubl
xor
mov
cld
or
jnp
sub
xor
mull
neg
sbb
jo
jnp
or
dec
int3
mov
sti
cltd
fnstenv
sub
xor
xchg
and
movsb
loop
sub
cmp
insl
ljmp
jnp
mov
mov
adc
fxch
xchg
lea
mov
xor
inc
pop
pop
ja
cs
dec
shll
sbb
lret
aaa
mov
mov
daa
jmp
shrl
add
xlat
jns
mov
ljmp
negb
sub
sbb
xor
and
jne
dec
jae
fcoms
cwtl
loop
sub
mov
popa
test
fsubl
sub
mov
fildl
popf
and
inc
or
mov
cmp
dec
push
adc
dec
scas
push
pop
mov
sti
xor
mov
sti
xor
xor
dec
fbld
xchg
and
cmpsl
add
dec
out
add
sbb
aam
rolb
in
icebp
add
push
adc
lods
mov
rcll
cli
dec
insl
jmp
pop
bound
outsl
mov
fsubrs
push
in
shlb
xorl
in
and
add
xchg
adc
icebp
jno
add
xchg
push
cmp
loope
xor
iret
negb
imul
inc
jg
rcrb
mov
dec
add
and
adc
pushl
xor
or
add
outsb
test
xor
js
sbb
jmp
mov
fiadds
fwait
outsb
cmp
add
int3
or
jno
push
mov
mov
xchg
xchg
sbb
mov
insl
sbb
fmull
sahf
insl
push
sub
pop
pop
daa
sar
filds
push
rcrl
jle
imul
ret
nop
imul
mov
loopne
and
push
gs
xchg
mov
lea
dec
stos
popf
xchg
insb
sub
lcall
clc
ret
push
pop
add
sbb
clc
call
lods
and
inc
mov
ret
test
repz
mov
jne
dec
mov
bound
jo
mov
sbb
jb
push
movsl
fucom
add
sub
enter
lock
cmpsb
pop
fs
sahf
rolb
cld
sub
mov
gs
dec
les
mov
outsb
pop
dec
cmp
out
push
push
out
fnstcw
mov
add
add
sub
daa
insb
daa
jne
das
jecxz
jb
ret
lret
push
repz
cmp
add
loop
mov
mov
scas
sbb
jbe
enter
push
shll
mov
mov
clc
xor
pop
sub
xchg
sbbl
les
out
dec
popa
inc
xchg
cmp
mov
push
ficompl
sub
lret
inc
daa
xor
pop
pusha
in
call
mov
pushf
push
mov
pusha
scas
pop
jbe
add
xor
sbb
data16
push
sbb
jmp
ret
push
mov
cmp
dec
js
loop
xrelease
movsb
or
inc
out
mov
and
test
sbb
ror
stc
inc
daa
sub
jg
mov
es
gs
jo
adc
ret
or
jbe
aas
movsl
cmpsl
mov
lret
ja
pop
dec
ret
in
cmp
adc
stos
or
mov
mov
inc
fnstsw
push
xor
aad
mov
cmpsl
rorl
add
push
rorb
dec
mov
out
es
inc
scas
xor
sahf
imulb
aam
and
and
fstl
xor
push
adcl
jns
je
inc
mov
jmp
xchg
int
jl
xor
arpl
push
gs
bswap
divb
mov
pop
sub
adc
bound
addl
pushf
lret
push
mov
out
xchg
pop
push
int
lods
pop
ja
and
cld
lock
pop
test
add
push
dec
out
mov
gs
rorb
xchg
popf
xchg
loopne
push
pop
and
insb
dec
test
scas
orb
xchg
jmp
sahf
cmp
jo
xchg
sbb
dec
imul
inc
cltd
cmp
lock
xor
and
lea
dec
jo
fisttpl
mov
pushf
repz
and
add
pop
sub
fnsave
jae
stos
sub
cld
sbb
shl
adc
data16
mov
push
sub
inc
push
and
arpl
pop
jle
dec
lods
pop
stc
xchg
mov
jmp
pushf
insb
mov
xlat
dec
pop
loop
mov
mov
out
xchg
mov
gs
roll
cmc
add
lods
repnz
jmp
mov
cs
aad
icebp
xor
fmuls
movsl
mov
push
jae
fcmovbe
les
jg
pop
mov
jne
dec
inc
push
pop
loopne
xlat
in
dec
inc
mov
sbb
pushf
cmp
enter
adc
sbb
fldt
fnstenv
stos
insl
popa
fsts
pop
shl
arpl
mov
ret
enter
fcmovnbe
adc
mov
call
out
dec
mov
mov
xor
jmp
movsb
lret
subb
inc
cmc
mov
mov
jb
dec
rorb
cmc
push
imulb
adc
pop
xchg
rolb
into
nop
mov
scas
sub
mov
push
cmp
pop
out
icebp
mov
das
nop
insb
mov
inc
out
pop
dec
xchg
or
fsubrl
jmp
xchg
stc
mov
outsb
cmp
aaa
popf
adc
loope
push
lock
arpl
cmp
xor
mull
jl
sbb
mov
out
divb
cmp
jl
inc
mov
and
xchg
je
leave
mov
mov
xchg
cwtl
adc
movsb
stos
aam
gs
shl
adc
stc
divb
imul
cmpsb
ret
inc
xchg
push
or
mov
push
mov
pop
lahf
mov
rcrl
inc
leave
iret
and
into
jge
inc
dec
outsb
loope
lods
aas
cli
mov
or
jg
pusha
and
mov
test
ja
fldl
int3
jle
pop
xchg
or
stos
xchg
xor
lods
mov
test
iret
or
push
in
pop
popf
cltd
adc
test
jne
lds
add
test
dec
cmp
cmp
shlb
xor
or
mov
xor
mov
cmp
nop
push
popa
repz
mov
addl
jecxz
shll
inc
cltd
add
je
jecxz
jle
filds
or
std
or
adc
add
jo
push
xchg
xchg
das
jp
mov
jmp
stc
mov
stos
or
pop
int
movsl
cmp
mov
repnz
rcpps
aad
test
test
js
inc
sub
adc
mov
mov
dec
into
sbb
sahf
add
dec
mov
ljmp
imul
add
pop
shlb
mov
insb
je
mov
push
or
sbbl
adc
jbe
in
fidivs
stos
jae
push
loopne
inc
arpl
jno
adc
cmc
cmpb
xchg
popa
je
cmp
jns
push
mov
test
pushf
icebp
roll
arpl
and
cwtl
cmpsb
cmp
sbb
outsl
mov
int3
add
cmp
mov
out
mov
adc
lret
in
mov
js
mov
jno
dec
inc
inc
jge
mov
jp
cld
out
fnstenv
sub
mov
add
les
shrb
cwtl
arpl
jb
sbb
xchg
movl
pop
jl
pop
jnp
xchg
mov
test
sbb
aam
out
daa
fiadds
lret
cmp
sub
pop
xor
out
dec
dec
std
xchg
add
dec
adc
js
pushf
fidivs
out
push
loopne
mov
cmp
xor
inc
sbb
dec
and
mov
in
xchg
mov
mov
sub
int
xor
cwtl
adc
cltd
call
pop
mov
aad
icebp
repnz
pop
xor
adc
jo
push
mov
dec
pop
inc
push
cltd
mov
aad
jnp
sahf
int3
adc
ret
sbb
jmp
jno
insl
outsb
push
xchg
inc
pusha
lcall
lods
and
lds
jl
fldcw
insl
push
mov
ds
pop
shlb
and
inc
inc
leave
or
pop
jl
sahf
sub
sub
ja
in
jns
scas
cmpsb
mov
dec
je
xor
mov
fs
and
push
inc
cltd
out
xor
gs
mov
mov
mov
pop
pushf
push
lock
ret
xchg
pop
inc
adc
in
out
xchg
mov
in
lret
dec
enter
and
cmp
int3
or
xlat
lcall
cmp
sarl
xchg
inc
adc
fsubrl
xor
gs
stc
jnp
adc
push
xlat
js
sbb
ret
sub
mov
mov
outsl
cmp
mov
push
dec
dec
test
test
adc
inc
pop
shrl
pop
rclb
pop
fidivrs
sbb
push
add
shr
daa
insl
pop
mov
ret
jecxz
cmp
lret
adcb
addr16
pop
add
mov
syscall
fldl
sub
adc
dec
sbb
push
enter
lds
push
pop
mov
cmpsl
pop
and
fld
jmp
jmp
lea
and
cmp
and
mov
mov
push
pop
inc
push
dec
push
sbb
mov
rclb
pop
pop
je
das
ret
mov
xlat
cmp
outsl
and
xchg
repnz
xchg
bnd
jmp
dec
nop
inc
dec
xor
cmp
sahf
sub
pop
int
fwait
cmp
lret
sub
rcll
xor
insl
fbstp
add
out
in
cmpsb
stos
popf
daa
sbbb
fcoml
outsl
dec
jns
mov
jmp
pop
mov
mov
sahf
xor
jns
push
shrl
adc
and
xor
mov
sti
adc
faddl
mov
aas
clc
add
xchg
insl
stos
sbb
jmp
ret
addb
daa
mov
jns
add
repnz
stos
xchg
rcll
clc
or
fsin
lds
js
xor
or
sbb
and
and
inc
in
mov
dec
out
pop
cltd
pop
sti
jo
xchg
dec
xor
loopne
add
xchg
popa
divl
or
xor
push
sbb
pop
sarl
cs
lret
jecxz
dec
repz
aas
jbe
mov
pop
jae
stc
and
jb
rorl
data16
fsubrs
les
dec
testb
fsubr
adc
cmpsb
push
push
gs
mulb
out
sbb
xor
push
scas
aam
or
lods
out
in
xchg
jge
sarb
push
cwtl
gs
mov
dec
xchg
push
mov
inc
xchg
xor
out
mov
pop
leave
adc
cli
jecxz
sbb
in
out
ror
in
dec
pop
es
xchg
es
adc
inc
pop
insl
lods
shrl
insb
pop
push
mov
sbb
pop
sbb
cmp
pop
adc
inc
dec
jno
popa
push
adc
imul
xchg
and
out
cmpsb
lds
xchg
pop
dec
and
pop
sub
pop
push
imul
pop
icebp
or
dec
subl
xor
iret
leave
fwait
movsb
or
sbb
jmp
cmpb
or
and
jle
xchg
xchg
xchg
lcall
cli
jmp
cltd
inc
clc
dec
sbb
cld
nop
das
pusha
test
push
movl
jne
sub
jae
lcall
mov
jmp
int
std
nop
test
pop
or
insl
push
aaa
negb
lret
xchg
fsubs
pop
add
mov
push
enter
push
shrd
andl
push
jbe
dec
fsubp
addr16
nop
cmp
adcl
dec
insl
stos
mov
or
loopne
jg
into
pop
in
gs
add
cmpsb
dec
push
ror
adc
sub
pop
stc
outsl
stc
dec
jg
out
dec
stos
fsubrl
inc
aaa
icebp
sub
mov
mov
sub
pop
jo
sub
jo
sbb
pop
movntps
push
pop
cmc
mov
adc
jns
ret
mov
in
sub
mov
push
adc
jmp
push
inc
jno
insl
cmp
push
pop
cmp
hlt
lods
rcll
xchg
in
cmp
and
xor
test
cmpsb
cli
daa
data16
clc
bswap
cmp
ret
lret
lcall
bnd
dec
loopne
leave
insb
xchg
push
sub
inc
shlb
ret
hlt
clc
or
and
and
lock
xor
pop
inc
push
rolb
mov
inc
dec
in
cltd
sbb
push
aam
aaa
leave
jns
adc
in
or
mov
arpl
xlat
mov
push
stc
mov
pop
hlt
sbb
mov
jle
jmp
lret
shlb
xchg
xchg
xor
mov
sahf
fs
mov
or
call
push
mov
cwtl
cwtl
mov
mov
andb
movsl
hlt
fists
cmpsb
pop
jnp
cmpsb
ds
xchg
mov
pop
dec
xchg
es
add
add
in
jns
mov
popf
imul
out
mov
cli
mov
pop
daa
cld
jb
stos
pop
adc
mov
xchg
jge
dec
pop
test
leave
ret
aaa
fisttpll
cli
inc
repnz
dec
iret
adc
leave
out
dec
and
dec
aaa
xchg
in
sahf
bound
aam
mov
mov
dec
push
sbb
push
adc
or
divl
and
cld
dec
test
jb
inc
lods
mov
test
test
sub
fldlg2
aam
mov
ja
sarl
aaa
push
dec
xchg
cmp
je
push
js
mov
orl
xor
mov
into
dec
into
xlat
cmc
or
add
pop
sti
or
aad
jle
pop
idivb
inc
jnp
test
imul
jl
and
popa
stc
pop
xor
or
mov
pop
enter
xchg
pop
loop
stc
div
mov
push
xchg
dec
sbb
push
lahf
cmp
xchg
mov
rol
cmpsb
ret
add
cltd
cltd
test
mov
pop
stc
ja
sub
mov
pop
pop
sbb
jbe
jae
xchg
fsubp
into
daa
xchg
inc
icebp
adc
lds
sub
dec
xchg
cmp
pop
fstp
sbb
rclb
jmp
test
pop
test
lcall
fcom
imul
jo
xor
scas
pop
jle
out
xor
add
or
iret
xchg
add
xor
into
mov
dec
push
cmp
imull
and
xchg
repnz
out
fldcw
sub
cld
cmp
mov
pop
iret
add
out
outsl
addb
push
mov
cmp
push
mov
adc
jne
imul
cmp
sub
mov
pushf
mov
leave
fcomp
stos
mov
clc
push
sub
bound
sarb
test
lock
mov
cwtl
push
xchg
repz
and
pop
jg
or
ficomps
dec
popa
mov
out
and
sub
cmp
clc
es
mov
divl
andl
push
fcoms
jmp
dec
cmpsl
loopne
int
add
and
sub
icebp
cmp
push
adc
pop
dec
fadds
fisttpll
pop
dec
inc
ja
pusha
loope
inc
cmp
aam
dec
repz
nop
adc
cmp
and
lea
sub
push
pop
test
fldenv
cmpsb
jp
sbb
fnstsw
in
sub
cmpsb
in
push
sti
aad
cmp
sahf
cmc
into
cmp
pop
xchg
xchg
xchg
sub
dec
imul
cmp
aam
or
loop
dec
sbb
sbb
inc
inc
sbb
jmp
mov
push
lea
rcll
push
inc
sbbb
add
incl
rorl
imul
repz
sbb
xchg
cltd
frstor
adc
arpl
in
dec
scas
mov
fistpl
pop
cmp
xor
stos
ret
in
adc
mov
jle
adc
mov
gs
pop
jne
hlt
sbb
adc
mov
pop
or
jg
pop
sub
dec
clc
xor
mov
insb
lahf
out
iret
rcrl
xor
test
pop
push
pop
ljmp
je
lahf
cmc
mov
sarl
pop
and
or
pop
or
out
add
mov
jne
cmp
fisttpl
or
loopw
sbb
jl
scas
movsb
fmuls
jmp
jg
es
les
mov
sub
es
adc
add
lahf
rclb
nop
sbb
mov
push
xor
pop
mov
adc
aas
pop
orl
jl
push
ljmp
mov
sbb
mov
inc
xor
or
cmp
mov
loopne
cltd
jbe
mov
outsb
jmp
sub
bound
xor
pushf
mov
xchg
stos
imul
lahf
lahf
and
jp
adc
or
adc
loopne
lret
lock
cmpsl
stc
leave
mov
fidivrl
dec
es
insl
mov
lea
mov
xor
mov
mov
rol
test
sub
sbb
sub
hlt
das
sbb
push
les
xchg
in
addr16
push
insb
sub
adc
inc
repnz
push
fwait
or
xchg
sbb
xchg
jge
lcall
jb
out
lcall
aaa
jl
hlt
mov
idivb
rcll
push
adc
aam
xchg
cmp
xor
cmp
test
cmp
cld
pop
cmp
inc
out
clflush
cld
mov
xor
inc
jo
xchg
push
pusha
adc
shll
mov
stos
push
fucomip
test
add
inc
mov
sub
in
or
mov
pop
and
push
push
lcall
rorl
sarl
push
add
dec
xor
xor
fadds
into
stc
aas
movsl
ffree
sub
pusha
lods
or
idiv
add
add
scas
pop
adc
movsl
test
inc
mov
pop
cmp
adc
call
cmp
orl
daa
push
jb
stos
into
je
adc
add
mov
pop
mov
mov
xchg
loopne
nop
mov
fistl
jb
ja
or
mov
ljmp
mov
cmp
out
add
out
jge
jge
jl
dec
jae
sub
push
arpl
pushf
pop
orl
out
imul
fstl
cmp
pop
aaa
dec
sub
and
int3
inc
and
scas
xchg
adc
adc
xor
das
sbb
scas
mov
int3
je
mov
dec
repnz
mov
add
xchg
insl
inc
fidivrs
push
xor
ss
dec
je
or
repz
aam
xor
out
test
push
inc
enter
cwtl
push
mov
stos
stos
jl
sub
lods
push
mov
add
cmp
mov
imul
das
addr16
loopne
jmp
addr16
fwait
cmpsb
into
and
into
push
addr16
dec
mov
and
mov
movsl
fs
sahf
jecxz
cmc
cmp
cmp
rcll
mov
pop
inc
sbb
or
mov
or
dec
dec
or
ja
loopne
out
inc
shll
cwtl
sub
cmp
inc
addr16
pop
jp
lds
insl
in
fisttps
js
outsb
or
and
mov
outsl
sahf
xchg
repz
adc
pop
pop
dec
adc
ds
cmp
aad
sub
sbb
mov
pop
fdivrs
in
pop
mov
scas
es
mov
inc
addl
xor
dec
sbb
sub
cs
jbe
bound
adc
mov
push
aam
lret
mov
sbb
in
add
pusha
bound
inc
push
xorb
xor
xchg
mov
loop
xchg
lahf
or
dec
lahf
cltd
push
int3
shl
dec
jbe
enter
in
lds
add
sub
sub
mov
jno
into
xor
xlat
sub
sti
inc
cmp
adc
outsb
sarb
mov
das
popf
add
pushf
aas
push
test
dec
mov
dec
stos
inc
sbb
xchg
adc
mov
in
mov
sbb
or
cltd
adcl
jbe
cmp
jno
cli
mov
lret
data16
sahf
push
hlt
xchg
mov
sbb
cmpl
imul
and
dec
push
rorb
dec
xchg
subl
mov
test
adc
gs
repnz
dec
mov
addr16
xor
xlat
push
inc
jbe
jb
and
shlb
mov
sub
movsb
mov
pop
mov
add
push
cmpb
mul
xor
out
push
sbb
out
and
insb
out
xor
xor
mov
dec
mov
mov
sti
or
pop
test
pop
jns
cmp
loopne
imul
icebp
mov
rcrb
add
and
decl
in
cwtl
jp
jbe
inc
and
add
cmc
adc
or
lret
stc
inc
subb
sbb
push
repz
pop
xlat
push
xor
notb
cmp
adc
cwtl
mov
inc
and
and
inc
push
lahf
mov
cmc
or
in
xchg
aam
ret
movsb
iret
xchg
scas
out
mov
inc
rcrl
lea
jns
or
pop
rorl
aam
pop
push
das
inc
and
out
push
pop
sbbb
sar
fbstp
add
inc
iret
dec
mov
or
lods
les
arpl
mov
clc
cwtl
outsb
xchg
sub
std
stos
subl
arpl
push
add
cmpb
testl
add
shlb
aam
mov
xchg
add
sub
mov
xor
ja
mov
mov
pusha
mov
fildl
mov
cmpsl
sbb
in
lcall
mov
lret
jp
iret
xlat
dec
stos
push
fdivs
cmpsb
cmpsb
mov
gs
in
out
mov
pop
push
dec
cld
pushf
stc
ja
mov
add
mov
stos
xchg
mov
pop
and
mov
into
fwait
test
cmpsl
jne
adc
sbb
sahf
and
incl
test
testl
inc
loope
daa
repnz
adc
add
iret
in
ret
or
rclb
adc
in
fidivrl
xlat
ficompl
rolb
idiv
push
fwait
jns
xchg
pushf
jbe
std
std
mov
stos
notl
insb
mov
jbe
imul
mov
xor
xor
cmc
in
push
jecxz
and
jns
adc
ret
adc
inc
mov
xchg
nop
jmp
jns
dec
dec
and
pop
lds
cmc
xchg
mov
xor
pop
mov
stc
push
cld
jg
inc
push
jb
sbb
cmp
lret
ds
lcall
push
popa
pop
pop
not
add
fdivl
ja
das
inc
push
dec
mov
out
inc
xchg
gs
ror
rorl
lcall
pop
push
sarb
xor
aaa
push
pop
pop
or
mov
leave
jns
inc
dec
lcall
cmpsl
inc
test
pop
rorb
xchg
push
inc
dec
ss
push
addr16
xchg
fisubrl
pop
mov
rcl
jb
cmp
scas
xchg
enter
and
cltd
cmpsb
test
mov
sub
inc
push
leave
in
iret
gs
inc
fisubs
and
aam
push
push
pushf
movsl
shlb
test
je
or
push
iret
push
and
rolb
inc
inc
loopne
loop
addr16
stc
imul
leave
outsl
xchg
add
in
xchg
loopne
cmpsb
iret
inc
lret
dec
add
es
test
pop
in
xor
sbb
ror
and
stc
not
mov
aad
shrb
outsb
repnz
test
outsb
addr16
rorb
push
sub
pop
mov
inc
leave
pop
sbb
jne
pop
mov
adc
jno
sbb
mov
pop
inc
add
nop
push
mov
out
mov
scas
and
add
mov
adc
fsubrp
test
dec
push
inc
fstp
push
popa
pop
jne
bswap
jne
in
lret
jns
sbb
mov
mov
sub
dec
data16
cmp
out
aaa
mov
xor
push
dec
js
push
les
jg
mov
fsub
icebp
idiv
imul
je
pushf
xor
loop
push
xor
mov
out
xor
movsb
cmp
dec
shrl
adc
idivl
jmp
aad
stos
mov
movsb
or
mov
insl
pop
sti
hlt
and
or
push
cwtl
addr16
lods
ret
lret
ret
movsl
fstps
jo
clc
dec
push
lock
cmc
lea
sub
mov
decb
fsts
ljmp
and
pop
add
test
enter
rcll
xlat
aas
shlb
xchg
jl
loop
pop
sahf
out
ret
clc
test
test
adc
stos
out
lock
and
sahf
push
push
mov
jge
and
dec
int3
push
push
loop
push
or
jo
xchg
sbb
push
inc
loopne
aaa
mov
scas
in
lock
insb
inc
sbb
rclb
mov
cmpsl
xchg
out
sti
ja
inc
aad
mov
cmp
adc
frstor
loope
das
push
mov
sub
add
inc
adc
pusha
clc
addl
cltd
jnp
lahf
sbb
xchg
and
test
in
inc
inc
push
daa
out
fcoms
push
ret
aas
cmp
aas
imul
incl
pop
or
jmp
lcall
xor
xchg
xchg
or
lods
cmpsl
pop
out
add
xor
or
fs
repnz
dec
fildl
mov
out
sbb
outsb
sahf
out
xchg
inc
mov
out
fwait
cmp
stc
and
mov
xchg
and
insb
cmp
cmp
idivl
js
and
inc
push
sbb
dec
shrl
dec
outsb
adc
cwtl
pop
subl
push
rolb
xor
mov
fsubl
lods
xor
sbb
insb
jnp
xchg
scas
mov
lret
adcl
or
mov
pop
out
inc
inc
xorl
aam
jo
mov
dec
pop
xor
cmpsb
cmp
add
xor
lods
adc
fs
iret
test
mov
adc
lcall
das
push
pop
sti
movsb
jp
inc
jp
inc
fdivrl
cli
loopne
js
shlb
out
jne
lahf
and
sbb
lods
mov
sub
xchg
inc
pusha
cli
mov
mov
mov
jmp
lret
pop
popf
mov
mov
cmp
mov
les
roll
aaa
or
sarb
pop
inc
dec
xor
sub
dec
push
arpl
pop
insb
xchg
mov
jmp
mov
inc
mov
mov
push
sub
xchg
mov
inc
cmp
aaa
icebp
aaa
aas
clc
aad
mov
popa
jp
ss
sarb
out
sub
push
jae
lcall
out
add
sbb
fsts
enter
mov
scas
and
fsts
and
mov
stos
jmp
pop
mov
sbb
jecxz
loop
mov
pop
add
xor
and
imul
loope
iret
cwtl
xchg
popa
cld
add
jne
fcmovne
js
daa
in
data16
cmpsb
and
dec
hlt
sub
sbb
adc
leave
out
dec
xchg
cltd
jo
out
test
and
fucomi
mov
xor
add
sub
lock
leave
dec
movsb
sbb
mov
jae
push
cmp
out
mov
add
lret
fidivrs
xchg
xchg
jg
ljmp
outsl
and
and
add
orl
out
in
pop
jns
pop
push
adc
push
aas
dec
pop
out
sbb
lock
loopne
cmp
fldl2e
mov
dec
lcall
cwtl
fsubr
xor
aas
sbb
pop
add
adc
mov
inc
jl
icebp
add
adc
sub
xor
jne
xor
pop
fistl
push
lea
shl
and
mov
cs
data16
popf
adc
add
pop
inc
add
ret
sub
lret
xchg
dec
stos
jl
or
jns
xchg
mov
insl
add
mov
bound
arpl
movsl
mov
mov
lds
and
insl
xchg
mov
mov
test
les
cwtl
das
push
test
and
xchg
ds
fiadds
lea
lea
inc
je
iret
mov
mov
pusha
ret
loope
mov
scas
mov
mov
push
mul
fildl
cli
test
pop
testl
mov
stc
add
mov
cld
jo
inc
sub
std
pop
adc
ret
movsb
jbe
insl
outsb
cmp
push
cmp
out
fwait
icebp
mov
std
add
aam
mov
sbb
mov
scas
xchg
nop
jecxz
test
mov
pop
mov
mov
cmp
push
int3
sbb
pop
push
jmp
add
sub
mov
jp
sub
movsb
inc
scas
mov
imul
test
sbbb
loope
or
sbb
fsubr
adc
mov
cld
xchg
out
andl
and
jle
jle
popa
mov
fnstsw
adc
mov
cmp
jbe
rcr
loop,pt
adc
pop
xor
jp
cmp
pop
mov
hlt
or
mov
aas
cmpsl
scas
in
insb
outsl
mov
mov
mov
cwtl
push
push
ror
movsb
lock
call
fldl
loop
test
dec
jmp
clc
pop
clc
arpl
jns
add
mov
dec
mov
leave
repnz
cmp
hlt
jp
popa
jmp
fs
mov
repnz
mov
mov
or
outsl
fisttpl
or
lods
cli
aam
ret
xorb
dec
jmp
or
lock
jge
and
sbb
fcomi
sbb
inc
mov
leave
cmc
mov
shrb
popf
inc
inc
in
fsubs
enter
das
jle
jae
mov
lret
pusha
icebp
and
scas
push
dec
mov
and
jmp
ljmp
subl
movnti
int3
test
cld
arpl
rcl
and
test
mov
insl
nop
pusha
pop
xchg
jo
dec
stos
test
jg
cli
dec
sarl
addb
inc
dec
in
or
cwtl
and
hlt
or
gs
cmp
or
mov
aad
decb
jp
fiaddl
movsb
jae
xor
xchg
jns
dec
test
arpl
and
push
xchg
inc
es
arpl
and
notl
shl
push
lcall
dec
rolb
stos
rol
fimull
dec
mov
shl
outsb
mov
adc
sub
mov
movsb
outsb
dec
add
mov
mov
cmp
adc
in
ret
xor
mov
cld
mov
rolb
jle
cmpsb
xor
inc
nop
jns
cmpl
mov
adc
cltd
mov
ja
jne
test
sub
jp
add
mov
das
sub
cld
pop
lods
xchg
cs
pop
sbb
ret
mov
sbb
adc
ds
push
das
cmp
pop
jb
jecxz
push
dec
roll
in
mov
cmpsl
das
imul
popfw
clc
dec
pop
pop
push
div
sahf
dec
push
mov
js
adc
movsl
jg
dec
out
sbb
out
jg
negl
testl
or
lods
jae
and
push
jg
adc
dec
mov
xchg
lods
mov
insl
jb
push
push
aam
std
daa
rolb
xor
mov
cmp
inc
xor
inc
mov
or
or
test
clc
xchg
push
jge
mov
lahf
lea
xlat
je
mov
negb
jle
mov
mov
mov
fwait
dec
test
dec
add
xor
stc
enter
mov
out
lock
inc
inc
cli
sahf
insb
int
popa
aam
aam
out
subl
mov
movsl
push
movsl
movsl
xchg
or
test
xchg
repnz
push
jae
jno
sub
cmp
add
pop
dec
fwait
leave
add
jno
movl
mov
mov
cwtl
shlb
jge
or
icebp
loope
push
jno
or
popa
jno
sub
ja
add
pop
movsl
idivl
mov
jae
jg
and
dec
jne
aad
push
ret
popa
push
jnp
mov
mov
ja
gs
aam
adc
gs
adcb
pop
xor
xchg
xor
jge
dec
cs
icebp
jae
data16
mov
arpl
add
mov
andb
fsubrl
or
xchg
aaa
aaa
jno
xor
in
add
and
jo
ds
hlt
push
repnz
push
xorl
ror
jp
dec
orb
mov
push
out
push
sub
push
pushf
dec
lods
push
mov
add
lock
sbb
pop
sub
mov
cmpsb
popf
and
call
cltd
xor
popa
push
js
ja
adc
aad
and
fildl
dec
adc
add
test
fs
adc
push
xchg
sbb
lea
out
mov
xor
sub
xchg
orb
aam
lods
int3
sbb
adc
aas
adc
mov
out
xchg
add
ljmp
test
adc
mov
loope
push
movb
mov
and
inc
jle
jo
jmp
mov
cmc
cmp
lock
xlat
jmp
mov
ret
icebp
sti
jnp
std
fstl
or
sbb
push
hlt
loope
pushf
rcll
js
jne
pop
inc
repnz
fstpt
into
sub
js
fcmovb
test
into
mov
cmp
adc
pop
add
shll
lods
add
cmc
push
notl
daa
jmp
adc
xchg
push
mov
or
bound
sub
stc
xchg
cli
fwait
lcall
xchg
fldenv
sbb
shrl
inc
cmp
jae
sti
sub
mov
adc
mov
mov
arpl
dec
dec
clc
pop
adc
dec
mov
mov
or
out
jns
push
pop
xorl
jnp
push
mov
sbb
aas
out
sub
insb
sti
push
add
out
sub
mov
add
mov
test
cltd
add
and
inc
mov
fisubrl
push
movsb
cmp
aad
lods
adc
aam
xchg
lret
fsubr
jmp
mov
ljmp
les
shll
icebp
and
mov
cmp
jp
ret
pop
movsb
gs
jecxz
or
aaa
test
test
test
out
scas
lahf
ret
and
mov
sub
pop
push
cwtl
add
and
jno
push
and
aam
push
sbb
push
adc
cmp
loop
push
loop
stc
int
ffree
insb
xchg
sub
shrl
icebp
outsb
out
ret
bound
dec
mov
dec
ja
fisttps
andl
mov
jo
aad
cld
in
jae
push
ret
add
out
push
xor
shl
sub
add
xchg
cs
and
dec
cmp
jns
fstps
lea
popa
inc
adc
hlt
cmp
movsb
add
stos
clc
fwait
jae
jg
in
pop
divl
xchg
and
jmp
adc
bound
add
add
jne
scas
filds
or
push
cld
dec
ss
lds
add
add
addr16
adc
mov
shrl
repz
jae
in
fstpl
aaa
sub
cmpl
repz
jle
aaa
inc
pop
ljmp
and
insb
jae
aaa
inc
test
jle
adc
dec
ja
addr16
push
pop
dec
ret
je
sub
repnz
fsubs
push
in
std
cmc
out
sub
dec
jne
jmp
icebp
iret
insl
decl
out
shrl
dec
jae
out
std
ss
fld1
pusha
and
lods
lret
sti
ljmp
out
fstl
push
pop
pop
pop
cwtl
out
and
adc
jnp
iret
dec
dec
or
shlb
mov
sub
pop
popl
xchg
pop
cli
xorb
ss
lods
pop
out
icebp
dec
jno
add
insb
push
repz
je
mov
adc
xor
mov
outsb
cmpsl
xchg
mov
push
and
dec
aad
stos
jbe
mov
mov
dec
bound
lods
popf
inc
sub
xchg
lods
cli
push
sub
xor
clc
test
arpl
or
inc
lret
xor
push
frstor
rcll
sbb
push
xor
mov
pusha
aas
mov
loopne
idivl
cmp
inc
adcb
or
out
dec
and
sbb
test
aaa
lds
xchg
and
fdivp
iret
dec
int3
or
incl
cmp
pop
and
jne
sbbw
iret
shrb
popa
rorb
and
imul
js
ret
jns
adc
rcrl
pusha
sahf
add
fwait
mov
jnp
and
lea
lcall
fdivrl
popa
loop
cmp
lcall
pusha
es
scas
add
popf
cmp
add
jno
in
out
pop
in
push
ljmp
sbbl
into
mov
dec
pop
scas
leave
mov
mov
data16
jp
fdivs
push
or
pushf
mov
cmp
sub
stc
mov
repz
mov
jae
loopne
mov
mov
and
mov
paddsb
pop
xchg
aaa
fstp
xor
mov
push
sahf
lahf
or
xor
cmp
push
popa
out
imul
in
test
jge
loopne
fmul
out
jo
or
push
xlat
out
jb
ja
fisttpl
and
and
out
and
outsb
mov
out
shll
stos
cmpps
aaa
add
lods
xor
in
add
mov
inc
cmp
das
ljmp
inc
arpl
ljmp
push
push
stc
neg
cmpsl
jl
sub
push
mul
push
out
cmpsl
enter
ret
bound
pop
es
jne
xor
dec
cmp
lcall
int
inc
mov
cltd
push
or
lods
add
jno
pop
out
fists
fmull
jbe
xchg
adc
cmp
adc
cmpl
int3
in
rcr
mov
or
push
jo
push
jns
or
push
sbb
ja
loop
lcall
cs
imul
jl
pop
fld
mov
jae
lods
call
dec
stos
test
xchg
mov
test
daa
iret
add
imul
xchg
pop
imul
stos
cli
lahf
lret
push
add
pop
in
insl
xchg
fsubrl
dec
dec
mov
jl
nop
dec
pop
data16
add
adc
je
push
sti
icebp
stos
fnsave
push
xor
mov
cmp
cmp
dec
inc
mov
ljmp
dec
adc
mov
fisttpl
cmpsl
icebp
test
out
xchg
xor
int
arpl
popf
jae
sahf
adcb
add
test
mov
sbb
mov
pop
iret
mov
in
lods
ss
nop
adc
scas
popf
cmp
cmp
adc
lods
sub
dec
test
bound
les
inc
adc
inc
pop
dec
shll
sahf
jae
lahf
jp
adc
xlat
xchg
mov
mov
imul
push
lods
xchg
sahf
jnp
and
adc
push
mov
sub
inc
jecxz
mov
push
les
rol
cmp
inc
mov
js
jge
dec
addr16
imul
mov
in
cmpsb
lods
xchg
jmp
out
test
into
pop
fcomps
jge
incb
test
jbe
out
sbb
adc
xor
pop
ret
minps
xor
xchg
pushf
pop
ljmp
mov
out
sbb
ja
mov
aad
push
icebp
pop
test
jp
mulb
mov
jo
aam
lods
repz
mov
add
test
pop
sub
aaa
fsubl
bound
xchg
out
imul
push
jle
lret
xor
loop
push
or
in
sub
sbb
sbbl
jp
jmp
jno
rcr
push
jmp
push
stc
mov
push
fcomi
xchg
sub
xor
popf
repz
cmp
ja
paddusw
dec
push
xor
mov
xor
mov
mov
mov
sbb
push
jns
dec
or
dec
adc
sar
mov
push
js
out
shll
xor
sub
xor
fadds
out
and
push
push
fnsave
pop
repnz
or
lock
lret
sbb
xchg
test
ja
xor
stos
xor
and
and
push
int3
dec
pop
shl
add
jbe
pop
pop
gs
pop
jle
and
mov
adc
and
jnp
test
and
gs
xchg
ljmp
lods
mov
out
pop
mov
cmp
inc
in
lret
sub
dec
popa
data16
jnp
pop
rcrl
mov
lret
pop
lcall
fstl
sub
cmp
movsl
or
lret
nop
lock
inc
and
imul
les
out
sbb
movsb
pop
push
int
pusha
in
push
dec
adc
das
test
shrl
fisttpll
shll
jnp
xor
or
push
jns
mov
pop
jb
stos
push
int3
arpl
jnp
into
cmc
insb
and
xchg
push
sub
rcl
dec
in
mov
insl
out
mov
jl
add
xchg
jg
and
int3
jg
dec
xchg
stos
pushf
xchg
jmp
push
shl
or
sti
inc
sbb
ret
inc
mov
mov
inc
xchg
lcall
lahf
sbb
mov
dec
and
sbb
mov
loopne
sub
test
pop
pop
mov
cli
addr16
cld
jl
in
test
jge
loopne
popa
daa
mov
neg
stos
push
addr16
or
mov
ficompl
add
ret
mov
push
insl
mov
mov
fistl
mov
jmp
xchg
outsl
aaa
sbb
jle
cmp
add
popa
adcb
bnd
dec
movsb
in
aad
mov
pop
sbb
inc
ljmp
push
fwait
push
mov
popf
movsb
xchg
sti
fiadds
les
aam
loopne
rclb
jno
mov
nop
mov
mov
rcrb
pop
rcll
adc
call
xchg
mov
xchg
gs
fsubr
imul
xchg
pop
cwtl
lret
dec
loop
cmp
scas
jge
xchg
ja
xchg
lcall
xchg
shlb
cltd
cmpsb
ja
outsl
pop
inc
adcb
sti
and
aam
push
mov
mov
fisubrs
fnstsw
mov
mov
or
push
mov
sahf
jnp
mov
mov
dec
insl
cmp
ds
xor
dec
sub
jg
es
in
mov
ds
push
roll
adc
mov
in
add
lcall
test
push
sbb
jle
mov
fbld
fidivl
add
sahf
out
int3
cmp
cli
dec
test
jmp
sbb
push
and
inc
pop
fldl
xchg
fstpl
cs
jle
add
xchg
pop
daa
inc
push
outsb
dec
aam
movsl
mov
add
mov
fcoms
xor
fldenv
xor
xor
das
repnz
lret
psubw
pop
pusha
sub
xor
ss
mov
into
or
stos
sbb
cs
sub
jne
sbb
divl
dec
inc
test
mov
push
push
jns
cmpsb
jg
vmread
pushf
clc
scas
aas
mulb
faddl
jp
in
push
sub
cmp
daa
test
pop
pop
pop
dec
sbb
imul
loopne
sub
or
and
gs
add
xchg
sub
xchg
xor
lret
mov
xor
or
bnd
scas
sub
dec
mov
sar
push
movsl
push
fiaddl
jl
test
repnz
gs
and
aam
push
add
lret
scas
xor
bound
inc
lcall
sbb
clc
stos
pushf
pop
stos
mov
into
movsl
mov
test
mov
xchg
jnp
jg
ret
push
xchg
adc
push
das
arpl
mov
pop
sarb
movsb
pusha
data16
and
xchg
jae
xchg
leave
int
pop
mov
cmpsl
adc
sbb
mov
outsl
add
imul
negl
inc
push
rolb
xor
mov
fyl2xp1
hlt
xor
jb
jns
add
mov
ds
or
loop
pop
mov
push
outsb
lods
cmp
push
ds
mov
scas
push
fsubrl
fsubs
les
mov
dec
ret
hlt
fyl2xp1
mov
fcomi
daa
jmp
lds
adc
xor
xor
xchg
aad
or
mov
int3
mov
andb
dec
decl
insb
lcall
popf
xor
sub
ds
out
aas
dec
adc
add
mov
aaa
idiv
test
clc
lock
in
inc
mov
iret
jle
mov
mov
test
xor
mov
cmp
fwait
jne
shll
jno
aad
test
mov
and
cmpsl
sbb
mov
jnp
pop
lea
inc
gs
sbb
mov
cmp
cmp
inc
push
mov
xchg
xchg
mov
cmc
sbb
jbe
sub
imul
xor
mull
loope
mov
rcll
jae
xchg
mov
lret
in
sbb
and
jne
int
pminsw
lret
popa
push
xor
add
mov
xor
ret
mov
sbb
lea
pusha
sub
mov
dec
hlt
or
psllw
imul
vmovntps
inc
or
xchg
ja
mov
adc
int
jne
ja
xlat
push
add
jl
fwait
aam
jp
mov
es
insb
pop
call
dec
arpl
les
lahf
pop
mov
lods
dec
jns
call
push
xchg
and
mov
nop
adc
mov
pop
adc
mov
inc
out
es
cmp
pop
mov
xor
lods
out
movsl
jns
das
pop
nop
shl
imul
sub
jae
or
add
lods
jo
pop
push
loop
push
lds
push
bound
jo
add
xlat
test
leave
sti
arpl
sbb
xchg
jo
inc
cli
inc
test
jbe
imul
mov
xor
jge
mov
int
in
cmp
cwtl
sbb
pop
push
add
jno
std
out
lret
and
xor
je
mov
or
mov
xchg
daa
adc
push
mov
push
xor
xor
xlat
enter
mov
fsubs
inc
cs
in
xor
push
enter
mov
pop
jp
imul
ret
lods
inc
repz
aad
mov
mov
loope
xor
out
movsb
pop
lret
pushf
pop
pop
adc
sub
mov
push
jl
ret
imul
xorb
sbb
xchg
in
sbb
mov
sub
mov
cmp
andb
pop
outsb
pop
lea
push
xlat
xor
loope
dec
int
leave
cli
lahf
xchg
rcr
outsb
data16
and
cmp
and
test
xlat
sub
jp
loop
jmp
movsb
cwtl
dec
imul
addr16
movsb
sbb
clc
or
xorb
pop
pop
mov
in
cmc
cmp
xchg
jge
push
lods
inc
mov
jae
mov
orb
popf
mov
ficoml
mov
jns
out
jo
rorb
adc
lock
jb
push
mov
mov
insb
lcall
sub
aaa
insb
xor
adc
push
mov
sbb
cli
inc
ds
xor
sub
mov
and
jecxz
push
andl
mov
popa
mov
xchg
jns
and
lods
mov
xor
adc
out
mov
xchg
psubsb
insb
mov
loopw
ffreep
sbb
movntps
jne
mov
xchg
pop
and
push
mov
mov
outsb
in
sub
cmp
arpl
ret
idivl
test
je
adc
mov
leave
sub
popf
sbb
insb
and
lcall
xchg
and
data16
sbb
daa
cld
cwtl
push
and
mov
push
xchg
xor
decb
cwtl
shl
lods
pushf
jmp
push
and
clc
nop
into
push
mov
push
mov
mov
cmpsb
xlat
mov
fwait
add
lods
popa
pop
adc
mov
pop
fsubs
jns
jl
inc
push
pop
cwtl
push
nop
sub
inc
fisubrs
loop
jo
lret
xor
pop
test
sub
clc
orl
and
xchg
push
mov
mov
push
inc
adc
loope
jp
jecxz
popf
and
inc
jl
jmp
les
movsb
cmp
xchg
mov
out
mov
sti
daa
dec
push
mov
pop
fiadds
inc
add
or
rol
lea
fwait
jp
add
xor
push
xchg
sbb
out
lret
mov
mov
or
in
into
adc
and
cld
xchg
std
out
mov
and
faddp
mov
imul
cmp
nop
adc
movsl
cmp
int
xlat
cwtl
add
imul
and
cmp
sub
fdivs
imul
popf
insb
out
sbb
shl
in
into
ljmp
mov
pop
out
mov
mov
shrb
xchg
xchg
sub
shll
into
mov
sbb
stos
and
icebp
xor
dec
cltd
push
into
enter
jg
adc
jae
les
cmpsl
xor
lret
xor
in
mov
test
dec
ss
cmp
push
xorb
bound
rcll
out
xchg
insb
bnd
inc
insl
fcmovnb
test
xor
jge
dec
and
jno
popf
aas
rolb
adc
cwtl
jo
cmp
scas
sub
jns
jp
loopne
cmp
mov
jbe
pminub
inc
fsubr
mov
movsl
les
dec
xchg
xchg
repnz
fwait
int3
xlat
and
push
inc
in
push
dec
out
sbb
fsub
xor
jmp
loop
imul
add
mov
cmc
call
testb
hlt
popf
ds
lock
sahf
adc
sub
jo
add
cmpsl
imul
cs
cmp
and
pop
aad
mov
ret
cmp
ds
rorb
bnd
jbe
adc
scas
cmp
pushw
mov
jno
popa
cltd
jae
jp
les
sbb
or
imul
scas
aad
adc
pushf
xor
push
lret
mov
lret
jne
or
jg
and
scas
add
sbb
addb
inc
popa
loopne
push
imull
cmp
jl
adc
dec
jno
fld
xchg
dec
stc
orl
jmp
cmpb
mov
shl
jo
ss
loop
int3
shlb
decb
sub
shl
xchg
add
out
jbe
or
stc
imul
and
subb
mov
out
outsb
cmp
dec
out
popa
sahf
jle
jns
xor
mov
sbb
loope
clc
jl
sub
xlat
subb
mov
xchg
mov
jecxz
dec
push
mov
in
add
sbb
xchg
push
cli
pop
add
insb
outsl
sbb
rorl
loopne
add
cmpl
push
push
arpl
ret
sub
inc
icebp
insb
and
mov
in
or
push
inc
xchg
sbb
mov
insb
xchg
adc
iret
push
adc
fsubrs
jbe
mov
ljmp
pushf
insl
push
int3
nop
mul
push
push
test
inc
jbe
lret
pop
jne
sbb
into
mov
push
adc
dec
out
add
mov
lret
mov
xor
or
mul
push
arpl
dec
mov
mov
jne
out
jge
sub
aad
out
imul
pop
dec
cmpl
jg
insb
sub
into
loope
fistpl
inc
add
and
pop
add
sbb
cmc
out
add
les
xchg
jo
sbb
jl
imul
loopne
inc
xor
xchg
scas
fildl
xor
xchg
mov
pusha
fsubrl
xlat
mov
dec
out
divl
sub
fisttpll
pop
je
fistl
push
mov
outsl
jmp
gs
xchg
jne
pushf
out
mov
gs
jns
sbb
mov
adc
mov
jle
ss
aam
dec
daa
cmp
popf
hlt
push
fucompp
jns,pn
xchg
fxch
call
adc
outsb
mov
pop
sub
pause
fsubrl
xor
adc
test
in
imul
push
sub
aaa
sbb
popa
outsb
sbb
mov
arpl
sbb
xchg
shrl
popf
sub
sub
das
push
push
scas
cmpsl
scas
push
xor
and
dec
in
imul
test
or
cmp
fiadds
mov
push
es
into
cltd
push
cmp
mov
pop
pusha
rep
push
testl
es
or
aas
jno
fistl
fsub
or
adc
pop
pop
mov
cltd
cs
sub
fiaddl
mov
bound
mov
stc
adc
cli
cmp
mov
stc
out
repz
xorb
pushf
mov
jne
xchg
xor
inc
xor
fimull
sahf
xchg
cs
jb
out
insb
fmuls
cwtl
sub
pusha
inc
cwtl
cld
mov
clc
sub
sub
or
push
out
mov
push
stos
cmpsb
inc
push
cmovle
mov
imul
cli
pop
jno
data16
add
fimull
sbb
xor
shrl
inc
pushf
lret
push
xor
inc
fidivs
cmpb
loopne
cltd
jne
mov
test
testb
mov
sub
sub
jnp
int3
les
mov
push
mov
add
ds
loopne
sbb
dec
xor
mov
mov
push
repnz
nop
mov
pop
movb
arpl
mov
test
jns
idivb
fisubrs
pop
add
outsb
cs
aas
jbe
add
push
add
call
outsb
mov
xchg
jle
inc
les
dec
outsl
or
push
or
mov
push
mov
jge
leave
shll
fsubrs
imul
bnd
sbb
rcll
or
outsl
jl
pop
push
mov
dec
jb
dec
repnz
mov
testb
nop
pop
jle
pop
popa
imul
lds
and
jle
fdivrs
push
les
cltd
fs
cs
sub
jb
pop
cld
addl
or
jl
add
int3
xlat
imul
out
pop
mov
push
mov
inc
pop
sarl
xor
xchg
adc
mov
adc
sbb
fildll
nop
add
stc
iret
lcall
shl
sbb
cmpsl
idivl
frstor
or
xchg
push
push
dec
jb
stos
loopne
out
adc
mov
cmp
sahf
in
mov
lret
or
out
sub
mov
daa
inc
sub
in
mov
push
iret
cwtl
js
ret
negb
arpl
mov
test
xor
ror
xchg
sbb
or
xlat
stc
cltd
popf
jne
xchg
add
dec
lods
aam
xor
in
fnstsw
push
push
cli
xlat
int
cli
in
push
fcoml
dec
inc
cmp
push
add
xchg
es
jns
push
add
xchg
mov
mov
repz
ljmp
mov
xor
fmuls
or
sar
add
jl
cmp
mov
rorl
mov
ret
push
leave
dec
push
das
into
push
test
push
jmp
shl
movl
out
and
push
adcl
mov
cmp
mov
add
push
scas
push
fistpl
sbb
ss
push
jle
jmp
xchg
cltd
popa
mov
mov
add
out
cmp
adc
out
fildll
inc
cwtl
subb
sub
cld
lods
xchg
or
push
sub
ret
into
mov
fnstenv
sbb
arpl
adc
in
mov
mov
imul
pop
xchg
test
pop
imul
in
jnp
mov
xor
mov
adc
popf
push
mov
repz
enter
adc
mov
xchg
and
cmp
mov
ficoms
dec
mov
sub
dec
add
mov
cmp
jne
adc
popa
cmp
rolb
ret
xor
cmp
cmp
data16
pop
inc
xchg
push
loope
mov
pop
cmp
fidivs
pop
and
or
lods
and
ds
cmp
sub
out
sub
inc
xchg
cltd
jae
addr16
sub
jb
insb
xchg
mov
ja
mov
or
loop
pop
ljmp
mov
insl
ret
push
dec
cmc
pop
jecxz
lcall
fs
lock
loope
xchg
das
xchg
fmull
cmpsl
push
inc
dec
push
shlb
jo
xor
test
mov
rcr
cmp
xorl
ret
into
cmpsl
adc
or
cmp
mov
aas
push
dec
insl
xchg
fidivs
out
push
xor
add
leave
jle
pop
push
push
pop
out
mov
xchg
xchg
repz
fneni(8087
push
and
mov
je
inc
xor
popf
loope
inc
icebp
lahf
cmp
mov
sub
icebp
scas
dec
mov
jecxz
in
xchg
mov
aam
jns
ret
inc
push
cmpsb
xor
dec
cmp
sbb
jae
cmc
pop
pusha
sbb
pusha
enter
notl
xor
cmpsb
mov
mov
mov
dec
lods
gs
scas
test
lods
add
gs
in
sbb
aaa
mov
bound
xchg
jo
mov
pop
cmp
int
push
aaa
fdivs
sahf
xchg
testl
cmc
jp
test
or
jecxz
pushf
ljmp
out
jge
cwtl
mov
and
mov
hlt
insl
xor
cmp
repz
cld
push
xchg
ret
sub
movsb
pusha
and
loope
jnp
mov
sbb
sbb
data16
imul
sbb
je
mov
pop
mov
jg
das
mov
lods
arpl
cmc
pushf
pop
mov
mov
jnp
int3
add
mov
jns
sbb
jle
cs
sbb
jp
scas
mov
outsb
jbe
or
in
inc
inc
dec
mov
sub
add
or
stos
lcall
pop
test
push
xchg
jge
pop
inc
jecxz
adc
daa
mov
mov
push
movsb
scas
adc
frstor
xabort
add
mov
xchg
loope
xor
and
sti
xchg
imul
jbe
pop
fidivrl
pop
sti
cld
mov
sti
insl
adc
pop
and
stc
jnp
in
sub
loopne
and
or
add
or
pop
test
adc
jo
push
mov
push
insb
int3
roll
add
cmp
sarl
vmovd
ja
jmp
push
dec
out
aas
push
adc
sti
add
testl
add
fidivs
add
add
in
xor
cmp
push
enter
cltd
add
add
jnp
aam
in
icebp
ficomps
push
stc
cmp
sarb
stc
ljmp
pop
sbb
rol
mov
cwtl
mov
fldt
xor
cmp
ljmp
pop
in
mov
daa
rcrl
movb
outsl
outsl
xchg
ljmp
addb
notl
xor
cmp
les
testb
loopne
inc
lcall
cmp
loop
subl
jmp
fsubs
xchg
sbbl
outsb
push
inc
rcll
int3
push
movsb
adc
cmp
sbb
stos
out
xor
mov
cli
iret
pop
inc
into
jb
syscall
std
or
jb
aas
fmull
push
pop
pop
out
insb
arpl
clc
test
jo
std
mov
ficomps
jb
imul
push
mov
sbb
ss
jns
stc
xchg
test
jb
jnp
loop
lock
stc
or
xchg
dec
cmp
das
aaa
sub
imul
scas
out
add
pop
pop
jmp
dec
popf
or
imul
adc
and
das
imul
cmp
fwait
out
and
cltd
sarl
pmulhuw
adc
push
fldcw
out
cmp
xchg
dec
jnp
dec
xor
pop
jbe
xor
shrl
rorb
mov
lahf
pop
inc
imul
jno
dec
imull
jno
dec
aaa
push
jle
out
subb
aam
je
adc
dec
arpl
add
mov
or
xor
dec
testb
pop
xor
jnp
test
andl
xchg
out
xor
mov
xchg
inc
cmp
ret
pop
mov
dec
sbb
jecxz
mov
adc
lret
mov
and
lock
cld
cmpsb
xchg
jbe
rol
js
inc
add
inc
xchg
dec
mov
insl
imul
xlat
xchg
mov
adc
daa
das
daa
shll
pop
loopne
xor
js
mov
out
call
or
mov
in
pusha
inc
addr16
or
in
repnz
imul
push
mov
into
lcall
jl
mov
das
or
mov
lcall
adc
dec
lds
sahf
filds
push
fildll
sbb
repz
lret
outsb
mov
inc
inc
scas
and
push
fsts
mov
mov
cmp
rolb
dec
inc
pop
stc
into
fucomip
add
imul
adc
sti
xchg
ss
lock
popa
mov
mov
data16
cltd
sahf
addr16
pop
icebp
or
mov
int
adc
repz
icebp
mov
xchg
xchg
jecxz
inc
mov
or
in
dec
aaa
jecxz
fs
test
cmp
dec
mov
lock
push
sub
inc
insl
mov
pushf
aas
cs
adc
mov
push
cmp
lcall
cmpsb
xor
jo
sbb
push
out
dec
xchg
pop
xor
mov
int3
push
les
fwait
adc
in
add
in
add
int
mov
das
push
and
aaa
mulb
lcall
sti
sbb
jmp
ljmp
shll
push
sub
pop
mov
jnp
pop
test
ret
mov
push
mov
rcr
js
rolb
and
es
nop
push
test
pop
rdtsc
int
pop
pop
dec
mov
pop
test
xlat
loop
std
xchg
fcoms
inc
inc
fisubs
cmp
jecxz
cmpsl
jge
pop
ja
shrb
add
sub
leave
aam
push
inc
sub
jmp
outsl
icebp
lea
mov
cli
add
out
fprem1
andb
clc
int
cld
imul
or
and
cmp
cld
mov
or
pop
sarb
inc
gs
loope
mov
jo
jmp
push
xor
stos
xor
pop
push
xchg
sub
or
xor
call
push
mov
pusha
sbb
mov
cmpsl
lret
mov
xor
cltd
cmpsl
xor
sbb
fmull
fs
cmpsb
mov
inc
loop
mov
sbb
out
icebp
jp
stc
xchg
lret
jl
mov
test
mov
push
jg
out
xor
popa
and
cmpsl
addr16
cli
leave
cmp
rcr
lret
std
mov
push
inc
test
andl
lock
lret
loopne
scas
imul
aam
sub
cmp
sub
js
sarb
mov
hlt
push
dec
fidivs
mov
aaa
sub
pop
loop
outsb
jbe
arpl
outsl
loopne
sbb
int
in
inc
adc
shlb
or
mov
add
aad
call
test
jle
jae
jne
mull
push
cmp
je
xchg
test
test
mov
popa
outsl
or
xor
insb
fucomip
fidivrs
div
aaa
adc
fwait
mov
fmuls
aam
inc
cmpl
jbe
cmp
mov
push
iret
sub
add
into
xor
loop
add
sbb
or
lret
in
sbb
paddusw
sub
push
popa
enter
movl
repz
inc
jmp
mov
jo
xor
sbb
std
sub
inc
pop
mov
push
fiadds
mov
or
sbb
inc
insl
cwtl
les
inc
dec
rcll
popf
movsb
jne
popf
loop
jnp
jmp
cmp
imul
cmpsb
xor
test
mov
mov
fildll
or
jo
mov
jle
xor
out
jmp
mull
xorb
push
mov
sbb
sarl
ss
std
push
jge
addl
cmp
ds
dec
jns
pop
xchg
sahf
pop
js
iret
add
pop
mov
aaa
xor
imul
mov
mov
cld
out
jns
popa
xor
cmp
enter
push
nop
cmp
std
mov
inc
xorl
xlat
jle
aaa
mov
loope
push
pop
push
jmp
jns
popa
jne
loop
cmpsl
mov
sbb
leave
add
jo
cmp
mov
or
mov
mov
ja
popf
add
jae
fcmove
adc
xor
mov
lock
jge
in
pop
or
fists
fwait
popa
leave
and
mov
andl
cmpsb
mov
imul
cs
cmpl
movsb
sub
test
je
mov
hlt
push
xor
sbb
pusha
out
push
into
cmpsb
xlat
pop
lahf
icebp
test
fsubrl
inc
add
jmp
cmpsb
pop
aas
cmp
lret
sub
movsb
mov
jp
mov
int
push
inc
sbb
stos
in
aaa
xchg
insl
dec
arpl
pop
iret
xchg
decl
sub
jg
es
out
rcll
jle
lods
push
and
imul
divl
cmc
fdivs
or
mov
lret
dec
xorb
push
inc
es
sti
add
mov
sub
fisttpl
sub
xchg
pop
insb
pop
or
repz
xlat
xlat
test
mov
mov
stos
push
jbe
mov
push
pop
std
cmc
lea
out
sub
adc
repz
sbb
add
and
jl
testl
leave
xchg
add
test
pop
sbb
xor
cmp
insl
arpl
and
outsl
sti
lds
repz
or
les
jbe
xchg
lret
fdivs
outsb
out
mov
cmpsl
mov
loopne
jg
gs
cmpsl
int
or
mov
imul
fbld
js
std
inc
pop
imul
cwtl
cmp
dec
ja
repnz
rolb
adc
out
pop
mov
dec
jmp
pop
pusha
xchg
popf
push
nop
fimull
bound
sbb
xchg
sahf
in
mov
popa
les
orl
xor
ja
roll
pop
addb
into
adc
jnp
fwait
rcll
imulb
pusha
mov
sub
push
je
out
loope
addr16
int3
lret
ret
and
vmwrite
testb
leave
jl
addr16
aam
shlb
out
stos
pop
mov
incb
sub
sti
and
xor
add
or
scas
lods
sub
cmp
jge
sbb
out
or
mov
add
dec
add
lret
push
inc
jmp
orb
push
ds
sarb
push
hlt
jne
fsubrs
bound
cwtl
lock
xor
shrb
movsb
add
dec
enter
stc
add
scas
dec
aas
lock
inc
shll
cli
xor
xor
inc
pop
test
cmpsl
movsb
dec
int3
push
and
xor
in
clc
popf
ret
aas
mov
cmc
mov
push
push
stc
repnz
popa
aaa
pop
mov
push
loope
out
inc
cmp
dec
movsl
add
mov
lea
mov
jp
fnstsw
les
movb
or
pop
adc
hlt
mov
int
jle
jg
movsl
xor
sbb
cwtl
ficoml
sbb
xor
stos
mov
aad
lahf
in
push
std
inc
mov
fs
scas
stc
sub
add
loop
sahf
in
mov
test
sbb
sbb
test
int3
cwtl
rolb
popa
dec
mov
jmp
mov
adc
lret
mov
jb
push
push
sbb
rorl
sub
int3
psrlw
sahf
testb
mov
push
icebp
add
xchg
je
std
lret
sub
pushf
jo
aad
bound
test
or
scas
inc
pop
gs
push
aam
pop
sarl
push
push
inc
cmc
mov
out
std
xlat
dec
dec
rcl
xor
inc
or
stos
adc
pop
aam
or
sbb
aam
mov
popf
std
aad
lahf
jns
loopne
sbb
push
pop
lea
or
decb
in
repz
test
add
cli
cmc
mov
xor
add
test
and
outsl
pslld
dec
cmp
leave
inc
jmp
jg
push
jmp
push
ja
data16
fisubs
scas
inc
imul
aad
lods
lret
adc
sbb
mov
ficomps
call
push
push
pop
mov
cmp
push
pushf
ja
rol
pop
push
mov
daa
inc
inc
jl
push
mov
loopne
lcall
lock
pusha
stc
inc
jne
in
leave
xor
mov
dec
mov
int3
mov
std
xchg
push
jle
fisubrs
loopne
dec
mov
in
add
mov
adcl
ret
scas
and
lock
jmp
lods
xor
cmp
fistpl
cmp
adc
ror
push
cltd
out
fbld
sub
aad
push
mov
mov
repnz
repz
lods
pop
lock
push
pop
add
pop
mov
ret
and
sub
int3
xchg
lds
cmpsl
mov
in
lds
add
cs
cmp
popa
into
imul
dec
add
push
imul
hlt
sub
daa
shrl
fs
scas
push
inc
ss
cmp
add
mov
cmp
push
daa
pushl
cmp
lret
sbb
bound
and
pop
adc
andl
xor
adc
add
ljmp
lahf
xor
fistpl
out
scas
in
sub
cmp
fbstp
out
scas
and
mov
mov
pop
testb
out
daa
jle
dec
jle
pop
into
test
sub
pop
cmp
xlat
lea
pop
outsb
xlat
or
inc
popf
push
es
dec
jbe
push
mov
testb
repz
mov
xchg
push
jl
outsl
int
push
add
and
dec
adc
out
pop
and
testb
mov
pushf
or
push
fstpl
call
xchg
pop
mov
iret
push
mov
loopne
aad
shlb
cmp
push
lret
iret
in
popa
and
ja
jl
loop
movsl
cmp
sahf
loope
xchg
in
stc
cmpl
incl
adc
adc
mov
or
mov
adc
pusha
rclb
addr16
ss
subl
ss
sarl
into
bound
and
lds
leave
out
daa
adc
gs
fcompl
pusha
lock
cmc
xlat
and
jmp
daa
rcrl
dec
mov
repnz
dec
out
cmp
xchg
std
push
jge
push
or
movsb
dec
test
in
fbld
mov
pop
mov
jb
jle
cmp
js
mov
test
stos
lds
fwait
lcall
adc
add
mov
fmuls
mov
int3
out
ret
fmuls
rolb
scas
fs
and
sbb
fdivl
cmpsl
fsubl
push
xor
mov
inc
xchg
mov
lahf
jnp
into
je
mull
jge
jmp
xor
sub
jo
push
imul
pop
repnz
movsb
adc
lods
pop
ja
int3
pop
push
sub
xchg
jle
jb
xlat
push
cmp
ror
lds
sub
mov
xchg
out
add
arpl
adc
jbe
pop
loop
push
jecxz
add
adc
adc
jbe
xor
imul
pop
je
sbb
pop
push
cmp
ret
cmp
adc
adcb
cltd
cmp
into
mov
mov
insl
mov
mov
jo
je
nop
mov
dec
xchg
lea
lret
leave
push
push
pop
sbb
in
dec
lods
aad
adc
lock
popa
xor
push
xchg
lods
jmp
cmp
es
add
jle
cmovo
int3
and
dec
cs
mov
or
jb
dec
bound
push
into
sbb
insl
gs
lock
add
push
outsb
scas
add
fdivp
movsb
and
cmp
cs
adc
add
leave
dec
xor
int3
loop
jle
popa
aad
sub
cs
dec
push
popf
xchg
pop
roll
sarl
out
pop
out
in
adc
lds
mov
lea
xchg
scas
nop
int
push
mov
push
orb
sbb
jge
adc
sub
mov
pop
repz
call
inc
sub
int
mov
lea
dec
add
mov
ficoms
pop
mov
movsb
lahf
jg
push
jne
ja
in
pop
test
sbb
and
add
testl
sub
push
fwait
mov
mov
cmp
pop
dec
push
mov
fisubs
cmp
xchg
lock
movb
cmp
mov
adc
adc
imul
ds
push
lods
cmp
sti
xchg
imul
mov
pop
pusha
daa
or
scas
xor
xor
xor
push
pop
aas
and
cmc
mov
imul
aas
ret
jbe
cmp
es
mov
adc
add
fstpt
adc
xor
movsl
mov
test
inc
xor
repnz
mov
mov
inc
fmuls
arpl
cltd
fwait
mov
xchg
pop
push
sub
cmp
dec
adc
dec
cmp
push
or
aad
pop
xchg
pop
ljmp
push
jge
cmp
and
popf
lcall
sti
out
fwait
and
cmp
shl
dec
std
cmp
or
data16
loop
pop
cmp
jge
inc
jge
sti
push
into
inc
push
cmp
int
push
in
fstpl
aas
lret
daa
pop
dec
push
pop
jg
xor
lods
popf
data16
dec
xor
jmp
sub
rorl
inc
mov
popf
in
push
jp
mov
addl
push
lds
cmp
and
mov
into
in
fistpll
testb
or
orb
int
xor
pop
movsl
dec
and
addb
call
cmp
outsl
jle
int3
bound
imul
mov
jmp
xchg
pop
jl
fwait
inc
pop
in
xchg
inc
push
xchg
add
add
inc
jge
sti
or
lret
mov
mov
mov
iret
enter
in
mov
mov
lock
mov
mov
mov
in
mov
inc
shlb
loope
in
xchg
test
xchg
cmpb
ret
mov
test
loope
loop
imul
and
jno
sub
mov
hlt
cs
enter
bound
sub
roll
xchg
fucomip
adc
mov
adc
test
scas
sub
notl
or
fmull
nop
mov
or
add
mov
les
fiadds
jge
les
test
or
out
push
xor
daa
popf
mov
pop
cltd
addr16
mov
dec
adc
das
xchg
adc
xor
out
lahf
cmp
lock
jb,pt
push
push
pop
add
jp
dec
rcll
imul
cmp
jmp
mov
xor
jns
jmp
out
cmp
mov
cmp
test
stc
popf
cld
lea
cld
dec
push
dec
sbb
stos
testl
enter
lret
adc
test
xchg
fcoml
in
pusha
mov
mov
rorb
xor
lcall
mov
mov
loopne
xchg
or
ss
das
insl
and
ja
fnclex
pause
dec
test
and
cltd
or
aam
imul
imul
mov
mov
inc
pop
xchg
cmc
loope
enter
gs
xor
dec
mov
dec
mov
lret
add
into
bound
sbb
jne
push
lret
mov
sbb
data16
js
out
jl
je
pop
inc
lcall
mov
push
iret
or
add
repz
into
shll
mov
scas
mov
mov
push
pop
xchg
mov
add
fcomps
push
popf
in
lods
and
cmpb
aam
dec
cmpsb
lret
xchg
lods
and
addl
push
dec
xchg
cld
and
inc
shl
ljmp
jnp
imul
sub
cmp
xor
xchg
push
xor
mov
mov
cmpsb
loop
sub
imul
mov
pop
int
das
push
mov
xchg
jns
paddusb
mov
dec
push
pop
add
aaa
push
daa
je
dec
outsb
cs
xchg
pop
cmc
outsl
sub
lcall
ljmp
push
mov
ficomps
or
cltd
ja
lods
std
icebp
cmpl
ret
jge
cltd
stos
test
popf
imul
xchg
aam
cmpsl
pusha
add
subb
insb
mov
xchg
inc
je
inc
xchg
xchg
mov
fwait
stc
xor
xchg
mov
pop
fstl
cmp
insl
frstor
es
aam
enter
out
outsb
jmp
movsb
inc
out
pusha
inc
add
mov
and
and
loop
out
jge
in
mov
jp
xor
jo
ja
ss
call
pop
fnstsw
movsl
pop
int3
loope
loop
cmp
add
call
push
incb
lea
jbe
and
scas
ret
pop
nop
mov
or
cwtl
push
inc
addr16
push
add
inc
rorl
mov
in
addr16
mov
pop
push
sbb
fmuls
push
mov
cmp
adc
out
pop
adc
pop
cmp
or
push
out
xor
push
shll
cmpsl
nop
pop
xor
lock
bound
xchg
outsl
pop
xchg
mov
fwait
mov
dec
js
mov
cmp
sbb
jae
les
jo
fstpt
mov
fwait
or
loope
sub
inc
or
mov
dec
pushf
pop
addr16
popa
add
loope
add
lods
xchg
incl
jmp
ljmp
enter
jge
popf
ret
mov
push
cmc
ss
cmpsl
or
sub
scas
lods
cmp
or
fsubrs
pushf
xor
push
stos
pop
fsubl
sbb
dec
lret
add
pop
daa
stos
mov
mov
leave
sbb
out
mov
jmp
sbb
jecxz
data16
pop
insb
add
daa
mov
mov
mov
cmp
out
push
div
and
adc
mov
cmpsb
into
vmovq
sbb
addr16
fs
int3
push
mov
pop
es
pop
lret
mov
lret
push
cli
add
rolb
fistpl
test
and
ret
fbstp
aam
push
pushf
stc
ss
lods
jg
mov
sbb
ret
xlat
subb
adcb
push
int3
mov
aad
xor
sub
xlat
inc
push
xchg
inc
fdivrl
bound
and
dec
dec
jmp
jb
pusha
shl
mov
fs
xor
mov
push
jbe
pop
je
fsubr
pop
sub
cmp
scas
popa
mov
pop
ljmp
mov
imul
mov
sahf
fwait
ret
push
mov
push
loop
sahf
shlb
in
roll
fildl
jmp
mov
sub
inc
mov
cmc
loopne
pop
bound
jmp
xor
movsb
pop
push
sub
sti
enter
test
jbe
cwtl
xor
pop
addr16
mov
out
stos
push
pop
pop
fnsave
push
jge
mov
iret
lea
add
jg
jnp
push
andl
dec
or
mov
bsf
shr
jecxz
lds
inc
dec
insb
je
in
sub
mov
outsl
dec
push
rclb
jle
push
mov
aas
cmp
out
das
inc
push
mov
rorb
mov
jp
dec
loope
xor
std
add
repz
cmpsb
jl
sub
push
das
jg
dec
mov
ret
loope
cmp
ret
inc
movsb
xor
sub
pop
xchg
pop
jmp
add
test
adc
rcll
jbe
in
or
xlat
cs
pop
popf
out
mov
pop
adc
cwtl
xor
adc
sub
test
icebp
push
arpl
mov
stc
dec
int
das
xchg
pusha
mov
mov
or
imul
sti
frstor
imul
lods
dec
mov
mov
arpl
mov
js
push
xchg
in
mov
sbb
movb
shlb
push
adc
jno
mov
stos
fs
sbb
mov
adc
jge
ret
and
or
jg
into
add
mov
sbb
icebp
incl
aam
aam
jnp
outsl
jmp
jnp
sarl
mov
or
call
or
or
mov
inc
add
dec
mov
pop
lods
xor
outsl
push
lea
fcomip
xlat
mov
sahf
aas
shl
mov
and
dec
and
pop
mov
je
sub
pushf
inc
outsb
fldl
add
push
xchg
cmp
or
lds
lock
mov
stc
inc
xchg
dec
pop
icebp
sub
sub
js
aam
xor
cmp
repz
lret
cmp
clc
pop
jbe
rcl
pop
cmpsl
lds
in
push
and
test
xor
cwtl
cmp
inc
data16
push
xchg
pop
je
hlt
adc
aam
mov
imul
test
mov
outsl
mov
or
repnz
push
in
mov
jnp
adc
sub
fsubs
aas
push
rol
sti
aaa
xor
or
push
icebp
call
adc
xor
fidivrl
xchg
outsl
or
inc
inc
insl
sbb
and
rcrb
je
rclb
pop
inc
imull
out
add
mov
adc
pop
push
daa
dec
arpl
clc
sbb
mov
mov
inc
jmp
xchg
jne
ds
ret
insb
out
jp
sbb
add
rep
fwait
lcall
mov
mov
mov
es
frstor
sub
ret
push
sub
data16
jge
out
jle
mov
jmp
sbb
push
jns
loopne
test
add
iret
scas
mov
mov
xchg
addr16
inc
out
cli
hlt
push
pushf
repz
jmp
clc
mov
out
cli
push
and
pop
test
adc
dec
std
mov
mov
and
test
and
jmp
add
imul
and
call
push
push
inc
outsl
xchg
cmp
pop
test
test
or
sbb
or
das
mov
movsbl
mov
adc
jg
mov
or
jno
sbb
pop
cwtl
lods
adc
or
inc
into
push
mov
dec
or
jns
arpl
call
add
sub
rorb
nop
xchg
inc
addl
mov
xchg
into
inc
cs
insb
mov
jecxz
iret
dec
roll
pop
outsb
adc
pusha
xor
push
jmp
mov
sbb
inc
leave
pop
test
push
je
mov
adc
push
push
and
add
popf
xor
add
arpl
xchg
add
and
jp
inc
pop
outsb
repz
pop
fwait
call
test
mov
adc
and
xchg
cmp
in
or
jp
arpl
mov
xor
push
mov
test
insl
idiv
sbb
cwtl
movsl
and
ljmp
rcll
out
out
mov
jle
fwait
xlat
stos
add
xchg
mov
cli
stos
ret
or
into
data16
xchg
call
xor
mov
jo
inc
mov
int
mov
addr16
loopne
or
xchg
cmp
loop
jmp
jecxz
scas
aas
xor
inc
jns
ret
fmull
sti
shlb
push
jl
xchg
arpl
pop
movl
xchg
lahf
push
inc
jo
sub
rcr
add
add
cmp
imul
imul
imul
mov
enter
sub
xor
fstpl
fcoml
pop
adc
or
stos
js
rorb
lea
add
dec
jp
jbe
fisubrs
jo
shlb
aaa
inc
in
mov
mov
adc
inc
loopne
orb
cmc
pushf
ljmp
push
jo
pop
cmp
ds
les
clc
loopne
jp
sub
xchg
lret
test
out
je
leave
or
loopne
sbbl
aam
gs
adcl
adc
lds
clc
movsb
sbb
aam
add
jmp
adcl
xchg
sbb
push
shrb
lret
shlb
mov
xchg
xchg
xor
scas
xchg
push
loop
loope
in
xchg
shl
aad
mov
mov
cmp
push
dec
add
xchg
lea
bound
scas
cmp
lods
push
mov
gs
mov
push
jge
jle
insb
ss
push
mov
jnp
out
mov
push
dec
inc
stos
arpl
mov
movsl
add
add
ret
sbb
fwait
ljmp
nop
pushf
or
shr
xor
arpl
jno
fiadds
inc
pop
movsb
aam
fxch
into
sarb
cwtl
jge
outsl
jno
cmc
dec
loop
adcl
mov
aam
in
lds
andl
stos
dec
out
or
cmp
push
cmpsl
or
sub
mov
fnstcw
ffreep
mov
push
push
aam
aas
cmp
sub
pop
xchg
nop
jae
leave
scas
sar
pop
cmp
clc
adc
add
push
sub
jge
hlt
out
push
push
cltd
ja
adc
in
jne
mov
dec
pop
pop
jl
sarl
mov
pushf
addr16
sbb
lea
decb
or
inc
repz
jne
test
clc
sub
hlt
std
into
mov
dec
and
xor
jbe
pop
daa
sti
scas
dec
sbb
inc
mov
sbb
push
jno
into
lret
inc
das
testb
gs
jecxz
lcall
arpl
xor
cmp
jno
xlat
rorb
imulb
fwait
xchg
and
cmp
xlat
xor
bound
push
sbb
fs
xor
dec
dec
jnp
cmp
lods
pop
mov
test
les
mov
dec
push
jecxz
push
adc
cmpsl
xchg
cmp
mov
cli
ljmp
enter
pop
mov
stos
dec
outsb
orb
inc
jge
xorl
and
fiaddl
jo
fs
push
jnp
in
cmp
idiv
xorb
jge
and
outsb
or
sub
fldcw
aas
ljmp
movntq
dec
pop
inc
pusha
inc
popa
outsb
cmc
sub
loop
or
xor
mov
repnz
cltd
sbb
xchg
mov
push
cltd
push
rcl
icebp
int
add
pushf
insb
lock
stc
add
dec
arpl
popf
popf
fwait
push
fdivp
ja
data16
push
shlb
push
ficompl
push
lds
fistpl
bound
pop
in
aas
lods
and
ds
xchg
inc
dec
cli
int
fildll
mov
fcoml
es
data16
inc
fstpl
cs
sub
add
hlt
leave
in
iret
push
bound
and
dec
insl
inc
sub
mov
shll
outsb
xchg
outsl
addr16
ja
jne
popl
ret
add
int
fcmovne
call
pop
pushf
leave
cli
sarb
pop
rcrl
or
bound
xchg
lcall
jl
movsb
addl
fs
pushf
cli
push
push
lret
out
fcomip
and
frstor
ficoms
popa
pushl
xchg
ret
mov
jmp
or
sub
cmpl
cmpsl
jp
mov
faddl
mov
std
push
loopne,pt
mov
or
leave
xchg
into
aad
jno
sti
mov
sbb
pop
cmpsl
add
jno
xchg
arpl
push
les
gs
push
mov
gs
adc
ret
xor
pusha
stc
stos
outsb
addb
push
les
mov
movsl
imul
out
or
sub
and
xchg
mov
push
rcr
loope
xor
fists
jno
loopne
negl
cmpsl
xor
bound
push
dec
or
adc
cwtl
popa
rcrb
push
xchg
xchg
adc
jg
mov
mov
mov
sub
sub
inc
movsl
or
ja
jl
mov
enter
scas
fldlg2
push
fsubrl
lds
cmc
hlt
push
cmp
outsl
lods
jge
mov
mov
jae
jge,pn
cli
subl
stos
std
push
je
mov
gs
hlt
mov
mov
outsl
or
adc
movsb
test
fadd
mov
adc
fldcw
jns
fstpl
jp
cmc
scas
cwtl
mov
inc
in
xor
ret
sub
test
adc
or
mov
pop
repz
xor
pop
and
and
icebp
mov
in
sbbb
jg
repnz
leave
push
sub
jbe
int
cmp
imul
jo
sbb
mov
cmp
mov
ds
inc
lods
or
and
pop
mov
iret
pop
jnp
gs
int3
hlt
mov
dec
shll
and
sub
fidivrl
or
cmp
jns
not
int3
cs
push
ljmp
fcoml
pushf
ror
inc
outsb
outsb
lock
cltd
inc
data16
outsl
in
xlat
push
push
pop
xchg
movsl
lret
mov
inc
sbb
in
inc
cmp
fbstp
scas
repz
movsb
push
test
mov
cmp
lds
adcl
add
pushf
cli
lock
out
fs
int
mov
pop
ljmp
daa
cmpsl
inc
mov
loopne
les
and
daa
sub
mov
js
mov
mov
sbb
in
test
sbb
ljmp
scas
popf
iret
push
xor
adc
pop
xor
xchg
rorl
pop
lea
cmpsb
xor
and
pop
popf
int
or
push
arpl
mov
and
and
in
rcrb
and
mov
repnz
sub
inc
mov
jg
xchg
or
mov
pop
faddp
stc
les
ljmp
sbb
nop
lods
aaa
cltd
imul
rcrl
fsubl
imul
mov
mov
outsl
scas
test
rcrl
or
movsl
adc
xor
mov
dec
aam
aaa
push
and
push
ljmp
cltd
lret
jne
ss
mov
jnp
std
enter
xor
or
mov
int
xor
orb
dec
lods
subb
push
sbb
mov
lret
mov
mov
fneni(8087
mov
xor
mov
arpl
sbb
jnp
imull
inc
push
jp
xchg
test
dec
fildll
xor
or
add
adc
pop
test
nop
xchg
pop
jg
dec
sbb
or
fimuls
mov
jae
je
scas
mov
xor
dec
push
adc
jg
fs
rcrl
rorb
bound
add
inc
scas
add
push
adcl
add
je
pushf
in
mov
and
cmc
sbb
push
std
cltd
push
sub
sub
mov
push
in
roll
adc
dec
loope
nop
adc
xor
mov
and
add
mov
outsb
ficoml
js
sti
pop
push
mov
cmp
dec
pop
xorl
notl
push
call
sub
dec
int
jns
or
and
dec
pop
dec
popf
cmpsb
mov
cmp
movsb
add
or
xchg
leave
and
std
filds
jl
sarl
sub
stos
in
lea
aas
das
imul
fucomp
xchg
mov
jle
add
sbb
dec
nop
mov
fistl
pushf
ret
or
xchg
xchg
and
addr16
xchg
inc
fnstsw
xchg
es
mov
and
int
jmp
daa
lea
arpl
and
sub
pop
sbbl
xchg
adc
mov
xor
ret
out
sbb
fisubs
outsl
outsl
jmp
in
int
add
mov
mov
inc
jo
fcoml
loope
adc
ret
push
loop
leave
in
ja
jg
mov
cmp
lods
iret
sbb
and
cmp
xchg
sub
dec
xchg
roll
pop
mov
lds
sahf
adc
nop
sub
add
jp
test
add
mov
xor
arpl
adc
data16
lea
sub
lcall
sub
jl
adc
mov
jae
mov
add
sti
sub
cwtl
sbb
push
mov
aam
test
js
adc
dec
std
out
push
sbb
push
test
add
mov
repnz
pop
cmp
mov
sub
pop
leave
subl
out
jne
outsl
andb
adcl
add
jmp
cmp
inc
jle
jnp
in
inc
and
fdiv
add
dec
xchg
decl
xchg
cmp
les
dec
inc
jns
push
loope
inc
lret
xlat
mov
xlat
call
hlt
jae
pop
ret
movsl
push
test
jge
imul
inc
fstl
pop
push
orb
xchg
cld
lret
xchg
lea
sub
mov
mull
sbb
xor
repnz
jecxz
lret
xchg
and
push
neg
dec
xchg
les
clc
cld
and
and
xor
es
or
int3
outsl
cmp
sub
pop
ja
pushf
test
shll
int3
andb
outsb
adc
adc
jb
jo
pop
add
out
je
mov
scas
ljmp
js
subb
cmpxchg
in
inc
xchg
ror
loopne
out
xchg
loopne
jnp
in
jle
into
jns
mov
rorb
sbb
xlat
cmc
inc
movl
push
add
push
inc
int
and
cs
and
aad
addb
xchg
sahf
and
iret
pop
push
orb
lods
sbb
iret
push
dec
add
dec
mov
mov
mov
add
in
call
xchg
cs
sti
cmc
roll
std
xchg
fsubrs
jle
sti
adc
cmc
ljmp
ficoml
lret
inc
pop
xchg
rolb
pushf
scas
mov
mov
and
mov
push
movsl
inc
int3
dec
int
jns
pop
dec
inc
mov
pop
stos
cmpsl
mov
sub
sbb
push
sahf
outsl
inc
fldl
or
push
dec
loopne
call
mov
notb
cmp
add
sbb
bound
insl
sbb
leave
movsl
jge
mov
xchg
mov
es
bound
mov
fadds
adc
fsubrs
pop
mov
push
test
mov
xchg
iret
push
outsb
stos
rcll
mov
cli
sbb
mov
inc
dec
fsubrl
fnsave
inc
test
jp,pn
aaa
imull
cmp
push
push
cwtl
testb
pop
ja
dec
dec
das
les
lahf
add
push
call
jnp
cmp
inc
lea
cltd
or
and
xchg
into
shrl
inc
out
pop
xlat
std
and
loope
lds
fwait
push
pop
pop
push
pop
cmpsl
insb
lea
add
mov
cmpb
push
or
push
or
ret
fcomps
sbb
shlb
jbe
pop
stos
int
sub
mov
decl
mov
loopne
jo
nop
in
mov
out
fistps
leave
jp
sbb
dec
pop
cmpsb
das
jmp
scas
je
aam
dec
mov
push
dec
pusha
cmc
test
sbb
pop
nop
xor
xchg
fsubl
jno
xorl
ljmp
aam
inc
push
sti
xor
mov
out
mov
ds
mov
or
jne
xlat
push
pop
mov
imul
xor
lds
xor
jmp
inc
nop
ja
stos
fs
sub
fsubs
lret
cmpl
and
push
loop
xchg
mov
dec
jmp
addr16
mov
and
mov
pop
xor
fst
mov
lea
pop
out
sub
push
or
jae
adc
or
jl
in
mov
ss
or
mov
push
xchg
pushf
cmp
imul
repz
ds
repz
mov
xchg
bound
push
call
sbb
int3
cmp
out
test
push
dec
das
pop
shrl
xchg
lock
mov
mov
shll
mov
jno
xchg
jg
sub
movsb
xor
repnz
xchg
lret
sbb
mov
jbe
jae
outsb
sti
outsl
push
inc
ret
aam
cli
incl
test
dec
test
insl
aam
addr16
sbb
gs
notl
popa
sub
inc
mov
push
dec
mov
or
mov
lcall
mov
test
js
stos
div
insb
sub
enter
dec
add
lods
repnz
jbe
cmc
xchg
sbb
jle
jmp
mov
popa
sbb
cmp
aas
cmpsl
movl
mov
push
shrl
or
out
push
mov
lahf
jb
sub
lcall
inc
adc
testl
pop
sub
stc
lea
es
xchg
aam
and
test
repz
repz
pop
inc
adc
loop
sahf
mov
mov
xor
jp
pcmpeqd
jmp
pop
fwait
ret
setb
dec
jns
mov
daa
adc
sbb
cltd
fcomps
sbb
aas
jp
subb
dec
pop
mov
pop
lea
orl
fnstcw
dec
pop
and
or
cli
inc
dec
leave
shl
cmp
dec
inc
xchg
xchg
xor
adc
xchg
xor
in
shrl
cmc
sbb
cltd
jmp
push
les
xlat
xchg
dec
psllq
xor
sbb
das
into
clc
add
data16
adc
lods
jge
adc
scas
cli
add
lods
div
ror
mov
aas
enter
repz
mov
scas
insb
call
movsb
pop
inc
jae
xchg
sbb
xor
int
cmp
mov
test
popa
rcrl
aaa
mov
enter
adc
loop
jb
cmc
mov
fdivl
mov
movsl
xor
sub
test
fs
nop
or
stc
xchg
outsl
aam
dec
and
loopne
inc
pop
out
xor
nop
iret
iret
js
aam
pusha
pop
into
push
aaa
mov
out
sub
pop
js
movsb
mov
mov
xor
jno
fcoms
hlt
mov
test
ja
sbb
mov
add
clc
inc
push
out
or
sbb
imul
or
sti
inc
mov
add
adc
mov
iret
fcoms
mov
fs
sub
mov
loopne
sahf
sub
sbb
std
testb
rep
jle
gs
shrb
push
adc
iret
or
je
sbb
push
btc
mov
dec
popf
ljmp
pop
jae
dec
pop
pop
test
mov
fstp
rorb
mov
lods
jmp
pop
xor
or
jle
es
movb
addr16
or
out
lods
cwtl
pop
lahf
push
pop
int
sarl
cld
pop
cmp
adc
xor
lcall
movsb
lahf
clc
fisubs
fwait
leave
dec
cmp
add
mov
imul
mov
xchg
mov
cltd
push
fwait
or
and
insl
push
jb
inc
lds
jmp
dec
and
push
rorb
jae
insl
mov
lods
and
inc
jbe
sahf
mov
sti
mov
mov
stos
arpl
sbb
daa
add
mov
sbb
gs
imulb
mov
pop
ret
push
das
hlt
jbe
cmp
or
clc
mov
jne
sahf
add
repz
out
cmp
stc
dec
aam
mov
sbb
out
in
mov
and
cmpsl
pusha
sub
mov
out
jb
pop
push
pop
dec
sahf
imul
fwait
push
push
in
xor
push
inc
aam
ljmp
pcmpeqb
push
icebp
iret
xlat
xchg
out
or
sbb
bound
pop
jecxz
es
xchg
push
adc
sub
stos
and
xchg
inc
daa
lret
movsb
sub
mov
lret
pop
mov
movsl
xor
hlt
xor
inc
add
and
mov
aaa
cmp
pop
pop
sbbl
sbb
mov
adc
outsb
lret
fldt
inc
aas
add
or
mov
lret
fisubl
into
ret
out
icebp
mov
stos
dec
aad
and
jne,pt
mov
sbb
inc
lods
or
jecxz
xchg
repz
jb
roll
bound
test
jne
dec
jecxz
pushf
xor
in
clc
dec
loop
or
lods
mov
push
mov
sbb
or
mov
stos
in
pop
sub
xchg
daa
inc
dec
xchg
mov
out
pop
into
stos
xchg
insb
outsb
push
mov
vunpckhpd
fldcw
pop
push
mov
mov
dec
mov
aad
mov
add
jbe
mov
add
dec
mov
pop
dec
test
mov
jle
rcrl
pop
or
aaa
inc
mov
add
xor
pop
addl
xchg
iret
pop
test
int3
pop
fstpt
or
push
jg
pop
sub
jl
sbb
adc
leave
sbbl
sbb
cld
mov
ja
add
add
pop
jp
and
aad
mov
add
jns
sub
push
and
aas
xor
jo
pop
dec
dec
mov
mov
push
push
icebp
adc
dec
adc
and
xchg
decb
mov
xchg
fs
fcomp
or
mov
sub
dec
popf
lods
fs
adc
movsl
andl
in
mov
mov
sub
sbb
cli
pop
cld
sbb
test
notb
jns
adc
and
orl
lods
sub
cmc
leave
ss
push
or
es
adc
push
popa
push
inc
pop
xchg
adc
xor
insl
stc
aam
xchg
jge
xor
push
xor
adc
or
push
cmpb
negl
add
int
pop
mov
js
shl
sbb
aas
lahf
loopne
lret
fstps
cli
lock
and
sahf
jns
cmp
aas
imul
pop
mov
les
mov
xor
cmpb
jmp
into
jmp
fsubr
add
test
lcall
insb
xor
je
fsubs
mov
pop
bnd
jae
mov
jg
sub
jge
out
imul
jae
lret
cmp
sbb
loope
mov
or
inc
mov
mov
test
repnz
lcall
popa
into
mov
test
iret
fnstsw
jne
ret
jle
mov
push
imul
xchg
aas
mov
testl
cld
bound
add
xor
xor
and
pop
jle
push
push
mov
out
repz
sbb
sbb
lea
int3
add
sbb
ja
xchg
outsl
out
add
xor
mov
mov
add
sbb
pop
bound
sti
into
sbb
movb
and
jge
and
loopne
shr
into
outsl
dec
mov
jb
adc
lret
cld
out
push
dec
add
dec
and
std
in
stos
dec
stc
pop
outsl
aad
mov
adc
mov
sub
or
into
mov
fwait
es
inc
cmp
mov
sbb
sbb
das
push
mov
xor
jg
and
sbb
xchg
mov
fidivrs
inc
or
inc
adc
je
cmp
aas
in
adc
mov
fstpt
xor
or
inc
pop
xor
int
addl
push
or
pop
popf
aam
outsl
cltd
leave
push
xor
dec
call
outsl
sbb
shrl
sti
fsts
mov
jp
xor
les
xor
jmp
push
jbe
pop
fnsave
jge
mov
mov
cs
int3
xchg
ss
or
cmp
adc
scas
out
xor
dec
push
xor
fld
sysenter
cmc
inc
daa
sub
enter
jns
push
cmp
and
ror
roll
ror
aad
dec
dec
cmpsl
out
push
ficomps
ja
bound
and
iret
mov
mov
cmp
inc
stos
loopne
lahf
fadds
mov
jmp
mov
jmp
xor
cltd
mov
lods
or
jp
rcrb
dec
xchg
ret
adc
aas
outsl
or
mov
mov
mov
cmp
inc
insb
mov
add
ret
aas
pop
cmp
push
adc
int
ret
lds
dec
or
mov
cltd
cmp
lahf
dec
push
sub
stos
in
outsl
mov
bnd
imul
dec
mov
es
dec
jnp
or
mov
xor
test
push
mov
push
sti
popf
fadds
ds
pop
js
movsb
push
loop
out
or
xor
dec
dec
leave
lcall
nop
pushf
xorb
cmpsb
je
ficoml
pop
out
stc
adc
jo
inc
adc
lds
xor
arpl
das
lret
add
sbb
sbb
inc
lea
mov
jmp
fisttpll
test
mov
iret
or
jmp
adc
rorl
pop
pop
inc
adc
lods
loop
inc
add
xorb
xlat
sbbb
dec
mov
inc
stos
inc
mov
adc
pusha
sbb
scas
jno
adc
jo
int3
adc
sbb
xor
test
mov
repnz
inc
test
sti
cs
mov
fsubrp
repnz
fbld
ds
das
inc
add
push
and
mov
pop
cmpb
push
shll
sbb
pop
bound
rcr
test
icebp
mov
push
or
adc
pop
mov
pop
mov
sub
dec
mov
cmpsl
xor
fidivrs
inc
lret
inc
cwtl
inc
cltd
dec
mov
and
dec
in
mov
aas
adc
mov
jmp
dec
in
ljmp
pop
cmp
mov
push
mov
in
aad
jmp
dec
jb
jns
comiss
mov
xchg
aad
aas
and
and
dec
adc
xor
adc
xchg
adc
loopne
sub
mov
subl
cmp
mov
pop
call
or
pop
cld
es
mov
mov
pop
imul
mov
test
leave
cmp
or
out
inc
out
fadds
cli
push
mov
fmull
xchg
testl
mov
or
idivl
outsb
inc
rcrb
call
mov
dec
xor
push
lock
push
sub
ret
sub
into
mov
outsb
cmp
int
out
xchg
addr16
mov
cmp
loope
ss
pop
shll
scas
insb
adc
mov
test
int3
push
out
pop
frstor
cmp
mov
sub
xchg
ds
cwtl
xchg
push
aaa
push
hlt
sbb
aam
icebp
fucomp
push
pushf
jle
lahf
inc
pop
pop
or
mov
mov
push
or
imul
xchg
cwtl
mov
setno
cmp
rcrb
push
jge
cmpsb
cmp
xor
in
imul
js
nop
push
push
mov
push
into
fstpt
jecxz
cmp
sbb
lahf
enter
in
sbb
leave
insl
je
imul
addr16
leave
inc
ds
and
mov
and
pop
and
insl
adc
inc
dec
aas
xor
imul
ss
cmp
jns
sbb
sarl
sahf
and
aas
nop
mov
shlb
into
lcall
cltd
jmp
mov
push
mov
sub
sbb
cli
movsl
inc
mov
xor
push
or
lcall
push
adc
cmpsl
fsub
inc
and
stos
inc
push
jno
pop
inc
xchg
ret
outsl
fisubl
push
pop
addb
mov
sbb
jae
jle
mov
push
repnz
sbb
incl
out
sbb
pop
test
lret
cmp
repnz
cltd
sbb
cmp
fildll
mov
and
icebp
mov
cltd
jo
cmp
sub
sub
clc
mov
pushw
lcall
xchg
fdivrl
out
jl
pop
out
daa
xor
in
cli
into
cmpsb
mov
pop
mov
push
std
push
in
mov
sti
mov
test
inc
clc
xchg
in
insb
mov
rcrl
xchg
mov
test
jne
xchg
and
inc
dec
sahf
and
and
push
push
pop
scas
test
jb
out
test
or
fsubrl
in
fiaddl
xchg
xchg
mov
inc
add
push
popa
push
mov
fcmovnu
testb
pusha
inc
aaa
ss
pop
pusha
dec
pop
xor
outsl
inc
mov
add
xor
js
jmp
in
popa
add
jns
clc
push
insb
movsb
or
mov
stos
aaa
bound
adc
cs
vpsubusb
sti
pushf
shll
sbb
insb
cld
fldenv
jmp
sbb
sti
pop
push
pop
add
in
in
xchg
shrb
testb
addr16
sub
adc
jecxz
addb
rclb
mov
add
rclb
cmp
int
adc
es
cmpsb
sub
lcall
sarb
stos
push
dec
push
mov
xchg
push
inc
jle
mov
cmp
je
push
js
std
ret
test
push
test
jge
jne
pushf
das
or
sbb
add
and
xlat
or
cmpsb
xchg
or
inc
jl
std
jg
int3
mov
cmp
add
sarb
xlat
push
stos
inc
fsubp
shrl
cld
push
sub
testl
lock
push
shr
shl
adcl
cmp
pop
xchg
add
insb
xchg
mov
mov
addr16
movsl
xchg
int3
test
cwtl
adc
std
gs
ret
jp
inc
xchg
jb
fcomp
adc
pop
mov
cmp
ljmp
mov
mov
rol
jmp
int
or
push
sub
ja
jle
repnz
lock
shll
jnp
js
adc
xor
dec
fbld
dec
cli
les
jbe
repnz
mov
pusha
sub
mov
mov
mov
pop
cmpsb
shlb
sbb
out
jg
adc
inc
dec
sbb
xchg
cmp
adc
leave
cmp
push
loopne
mov
pop
rorl
dec
mov
cmp
mov
jl
dec
sbb
notl
outsb
lods
out
inc
test
push
inc
pop
pushf
add
xlat
leave
out
sarl
xchg
into
adc
or
pop
icebp
sub
bnd
mov
incb
hlt
adc
out
inc
xor
ja
and
notb
addl
int3
jne
or
out
stos
scas
movsl
jmp
and
dec
add
cltd
ss
std
push
scas
sub
xlat
mov
jp
pusha
mov
stc
mov
jle
movsb
or
mov
fwait
mov
jge
xor
jo
enter
cmp
addl
xchg
into
inc
dec
daa
ljmp
subl
pop
sub
xchg
pusha
xor
bswap
insl
cmp
pushf
sbb
scas
mov
adc
imul
in
fsubrl
and
pop
ja
xlat
mov
test
push
jnp
push
icebp
lds
lds
and
fnstsw
mov
adc
or
xchg
push
ljmp
mov
mov
jle
sbb
sahf
and
cli
pop
add
inc
sub
mov
loop
lods
mov
pop
add
div
push
add
addr16
mov
das
add
mov
scas
sub
in
xor
fadd
mov
call
mov
and
add
int
sub
in
add
add
push
mov
mov
bound
and
lret
shr
call
ds
mov
jecxz
pop
in
sbb
xchg
sbb
mull
in
dec
cmp
xchg
movsb
js
push
cmpb
mov
cmc
sbb
lods
shrl
int3
adc
or
pop
repz
and
sbb
or
addr16
lcall
mov
pushf
insl
int
or
scas
lods
add
jp
icebp
jns
sub
in
aam
mov
push
lds
test
aam
sub
mov
out
notl
ret
addl
leave
mov
dec
pop
out
scas
mov
push
mov
and
push
sar
or
mov
pop
paddusw
mov
vpmulhuw
cltd
mov
mov
push
mov
fiaddl
cmp
pop
jb
adcl
imul
or
mov
mov
push
jb
lds
jecxz
arpl
mov
stc
xlat
jmp
jbe
je
jecxz
roll
stc
aam
nop
cmp
cmc
ss
jb
xchg
mov
addr16
stos
clc
es
jo
pop
jmp
xchg
fcmove
imul
fdiv
cmp
inc
mov
out
pop
clc
mov
dec
daa
dec
lret
shll
pop
les
sbb
ss
push
xchg
rep
and
xor
cmp
adc
das
or
xchg
test
push
inc
jg
rcll
or
xlat
xchg
xchg
jae
mov
jl
or
pushf
scas
mov
sarb
cwtl
jno
cmp
out
dec
jb
and
int
sub
sbb
adc
fldt
cmp
jbe
aad
out
jns
hlt
push
shl
xlat
stos
scas
cmc
add
out
sbb
pop
jmp
sbb
jecxz
mov
js
dec
lcall
add
cmp
mov
inc
mov
pushl
xor
push
xchg
jl
adc
je
mov
call
out
push
jecxz
mov
mov
je
dec
xor
cli
mov
mov
mov
sbb
lcall
cmp
add
sbb
and
push
loopne
xor
lods
push
hlt
pop
sarb
and
das
cmp
nop
adc
lods
xor
fsts
ret
jp
xchg
call
xorl
push
xor
mov
testb
sbb
mov
jbe
pop
enter
xchg
dec
imul
ds
clc
sti
push
enter
xor
mov
daa
xor
pop
out
dec
loop
sbb
add
jbe
sbb
pop
mov
or
cld
cltd
pushl
lods
sbb
int
cmp
inc
out
push
imul
data16
dec
dec
xor
sbb
adc
sub
push
push
cmc
cmp
push
jmp
xchg
inc
sbb
add
mov
mov
sub
lock
mov
test
jo
push
lret
sbb
sbb
dec
xorl
adc
ficompl
imul
or
lock
xor
pop
lret
in
fisubl
les
stc
int
xor
orl
cld
xchg
pop
push
lods
adc
jp
jmp
movsl
ljmp
jmp
test
jno
jo
sub
andb
arpl
stos
pop
mov
adc
pop
fisubrs
dec
movsb
adc
mov
mov
in
xchg
clc
popf
xchg
repnz
adc
pop
in
fwait
sbb
lret
data16
scas
ljmp
adc
adc
xor
pop
jnp
iret
inc
ljmp
adc
stos
pop
test
mov
jno
mov
xchg
sub
lcall
lret
movsl
push
dec
mov
cwtl
inc
iret
sub
imulb
cmpsb
or
dec
das
pop
fnstcw
sub
push
mov
push
jl
and
cmp
inc
jno
sbb
test
mov
loopne
cmp
mov
lret
inc
pop
cmpl
inc
inc
mov
jl
xor
pop
xchg
inc
test
push
cmp
dec
icebp
mov
lar
dec
dec
imull
popa
mov
cmc
inc
ljmp
xchg
cmp
pop
lcall
rcr
ret
cmpsb
sub
mov
aas
enter
aas
clc
cmp
inc
mov
ret
shrl
xlat
xchg
imul
or
mov
adc
pop
ret
loop
bound
mov
in
jl
movsb
scas
xchg
and
andb
dec
cmc
mov
int3
add
aas
cmp
fdivrl
jno
fcoml
sbb
push
into
mov
sbb
sbb
sbb
sbb
pop
lds
xchg
and
mov
pop
jg
dec
inc
cmpsb
movsb
js
sbb
sub
popa
push
out
sub
jp
jbe
xor
mov
mov
stos
mov
sbb
ss
and
mov
pushf
cmp
or
push
rcrb
and
shr
orl
mov
ljmp
fcmove
lcall
pop
add
test
popa
or
push
or
leave
insl
in
aad
cli
push
adc
inc
sub
outsl
in
jle
mov
dec
dec
cmp
gs
or
mov
pop
mov
inc
mov
mov
clc
adc
cmp
ds
push
inc
mov
rcll
push
sub
sub
jg
sbb
mov
pop
xchg
or
jle
inc
pop
test
fcomps
aam
jns
pop
adc
movsl
std
adc
cmp
jecxz
mov
push
sbb
push
pop
rorb
ret
cwtl
pop
icebp
imul
jl
fldl
lahf
imul
ljmp
xrelease
inc
xor
jns
inc
fidivrl
addr16
test
mov
out
xor
enter
cmc
inc
out
pop
sbb
xor
mov
jo
loope
int
xchg
jle
fbld
daa
adc
out
adc
mov
sahf
outsl
and
jge
sahf
dec
mov
inc
fidivs
mov
jmp
loope
movb
lea
cwtl
mov
push
outsb
or
stc
lea
outsl
test
add
lcall
mov
std
push
mov
xlat
std
cwtl
fistpl
loopne
jle
mov
scas
xlat
push
adc
notl
clc
fiaddl
fsubp
aam
lock
cmp
add
movsb
fwait
lret
add
xor
sbb
imul
mov
sub
mov
iret
testb
and
test
in
pop
add
sub
int
mov
adc
or
repnz
dec
stc
in
out
add
jae
data16
fdivl
xchg
push
mov
lods
popa
push
dec
sbb
mov
cli
mov
cld
pusha
and
xor
sti
hlt
out
les
adc
xchg
shll
int3
mov
pop
in
aad
out
loopne
scas
add
pop
arpl
mov
adc
mov
mov
cli
lahf
vpxor
ja
js
outsb
pop
add
sbb
fwait
pop
mov
pop
push
jae
mov
mov
xlat
sti
mov
daa
push
dec
mov
and
test
mov
outsl
push
mov
imul
inc
cmpb
pop
push
pop
out
jecxz
or
or
insb
ljmp
pop
mov
mov
sbb
out
and
nop
and
pusha
mov
xchg
lret
cmp
cltd
sbb
mov
mov
mov
sbb
loop
daa
les
outsb
ds
mov
hlt
stc
adc
adc
decb
add
cmpsl
pushf
les
rcrl
mov
cli
inc
ret
cmc
xor
push
dec
pop
lds
shrl
adc
jmp
scas
jge
or
xchg
and
les
shlb
movsb
or
popf
adc
rcrb
jbe
xor
test
cmp
sbb
mov
inc
xchg
inc
cmp
sbb
jg
mov
cmp
inc
mov
aam
cmpsl
stc
faddl
shll
andl
in
rcr
dec
rorb
xor
cmc
fimuls
inc
fstps
rcl
jb
or
lret
int
xor
or
pop
cli
mov
aas
mov
inc
jge
cmpsb
cmp
jbe
xor
lea
mov
cmp
bound
pop
insb
repz
out
dec
mov
or
fsubrp
mov
xchg
lret
out
stos
cmp
xchg
test
xchg
ja
repz
jb
fsin
lods
clc
sub
nop
inc
aad
rcrl
fsubs
repz
lock
faddl
sub
push
xor
js
xor
sbb
iret
loop
vmovsd
push
out
mov
xchg
inc
pop
xchg
dec
es
pop
fbld
or
and
push
popa
shll
adc
cld
enter
pop
call
movsb
stos
xor
test
lahf
out
enter
cmpsl
rcrb
scas
mov
push
nop
mov
mov
into
mov
out
jb
inc
dec
push
cmp
jno
test
addb
insb
loope
cli
mov
loopne
scas
and
push
cmp
icebp
add
stos
shrb
xor
dec
or
cmpsl
xchg
mov
nop
dec
jbe
sbb
in
movsw
rclb
filds
aad
xor
dec
std
bound
mov
and
nop
mov
cmp
pop
das
and
push
mov
pop
lods
cmp
push
fldt
setge
fldenv
pushf
mov
pop
syscall
push
ret
add
out
pop
adc
out
clc
mov
in
loopne
jecxz
xchg
lock
add
rorl
lret
dec
imul
into
inc
jmp
mov
test
fidivs
mov
or
movsb
ss
sar
pop
clc
aad
call
sub
xchg
fwait
pop
and
fdivl
frstor
shrl
inc
cmpsb
push
test
mov
jbe
xchg
test
loopne
scas
sbb
xor
xchg
pop
dec
or
int
fld
jae
and
fbld
loopne
adc
lcall
jecxz
aas
lods
jg
jnp
sub
mov
jo
or
push
inc
out
insb
cmp
adcb
stos
ss
out
pop
bound
push
imul
pop
push
xor
inc
test
dec
mov
ret
mov
inc
cmp
push
test
xchg
xor
add
gs
xchg
adc
fidivrl
mov
jle
xlat
fcmovnbe
mov
mov
shl
push
lret
out
push
adc
mov
les
testb
and
push
popa
add
cwtl
test
lock
xor
xchg
jle
cmpsb
inc
jge
and
mov
inc
mov
pusha
inc
dec
shl
test
popf
dec
mov
adc
jl
push
imul
iret
test
stc
mov
lea
mov
xlat
shlb
pusha
incb
xchg
xchg
dec
push
es
lods
pop
jb
mov
xchg
xchg
cmp
ret
mov
xor
or
int3
pop
int
int3
sbb
icebp
int3
fldl
in
push
and
mov
aam
ds
mov
loopne
imul
push
push
shl
out
mov
sti
dec
mov
xor
sub
mov
sub
out
mov
pushf
and
icebp
in
jg
aad
mov
fbstp
xchg
adc
scas
mov
dec
jns
mov
rol
or
jbe
scas
push
cmp
out
test
inc
sub
mov
jno
mov
inc
cld
fs
adc
repnz
gs
mov
bound
rcrl
scas
xchg
sub
xlat
xchg
sahf
shrb
xchg
mov
xchg
pop
das
lea
xor
xchg
loop
xchg
testb
mov
add
fildll
push
jbe
jp
jmp
pusha
dec
cli
pop
push
repz
sarl
psllw
fsubrp
cld
lods
sti
lock
ret
jne
movsl
mov
data16
pop
sub
inc
insl
es
xor
test
pop
clc
dec
cmc
and
adc
push
mov
lds
xlat
inc
pop
sahf
jmp
jns
and
movsb
lods
pop
sub
imul
xor
and
sbb
loop
inc
outsl
fs
aaa
pop
mov
pop
jmp
out
add
and
or
xchg
test
push
sub
xchg
adc
cltd
and
fiaddl
pop
lret
test
adc
notb
dec
enter
aas
push
filds
adc
and
cmp
mov
sbb
push
negb
push
fdiv
inc
pop
jno
sahf
pop
cmp
pushf
js
arpl
xchg
flds
dec
int
push
sti
rcrl
xchg
xor
and
stos
shrb
sbb
fs
pop
mov
or
cmpsb
xchg
dec
inc
ret
mov
jae
jmp
lods
test
orb
sub
je
stc
xor
test
in
xchg
or
pop
sbb
icebp
mov
mov
mov
mov
repnz
divb
fnstsw
js
and
sbb
pop
mov
and
int
sbb
mov
leave
js
mov
adc
dec
ja
clc
subl
mov
sub
pop
push
mov
jnp
std
push
cmp
js
xchg
popa
push
inc
inc
add
sub
jmp
lret
xor
addr16
pop
or
enter
andb
inc
sub
daa
xchg
test
and
add
jbe
ret
lods
outsl
dec
pop
jbe
adc
sub
loope
popf
das
in
dec
cs
sbb
sbb
ficoms
iret
int
stc
add
pop
clc
leave
mov
push
xchg
out
xchg
cmp
out
in
pmulhw
dec
ret
push
push
dec
and
push
cwtl
lahf
mov
leave
pxor
outsb
xor
push
and
mov
mov
adc
loop
gs
and
out
mov
or
aaa
pop
add
in
add
mov
imul
xchg
xchg
dec
std
and
mov
jne
sub
inc
xchg
mov
imulb
dec
ss
jmp
mov
mov
push
mov
jb
std
add
orl
bound
and
movsl
and
pushf
lcall
xchg
jle
scas
pop
fcoms
jge
repnz
sub
or
cld
sub
and
jnp
gs
cmp
mov
mov
pop
mov
sbb
add
mov
lds
xor
push
dec
inc
out
cmpsb
dec
btr
mov
jmp
sbb
xor
xchg
shlb
cwtl
and
sbb
push
mov
in
adc
and
sarl
stos
lret
sbb
sub
outsb
mov
insl
fdivs
out
or
stos
nop
xchg
daa
add
shll
imul
mov
add
jle
jg
add
inc
push
cmp
cmp
test
mov
mov
adc
jae
and
dec
adc
pop
mov
repnz
orl
adc
enter
dec
xor
iret
mov
arpl
cmp
aas
push
outsl
cmpsl
repz
cmpsb
jecxz
cli
sahf
sub
lods
fisttpl
test
jae
push
adc
xchg
aam
inc
pop
add
cli
pop
fwait
inc
clc
aas
nop
in
pop
loopne
xchg
sub
xchg
push
lret
or
push
dec
mov
cmp
inc
cmpsb
imul
jle
fisubrs
bound
xchg
cmpsb
add
ret
movb
leave
cltd
movsb
and
mov
outsb
inc
addr16
xchg
daa
and
in
fisubl
out
mov
push
fidivrs
cmpsl
pusha
call
push
ss
aaa
jl
test
mov
lret
cmp
sahf
or
mov
adc
add
push
mov
pusha
jecxz
movsb
adc
cmp
dec
in
or
bound
in
cmp
jl
mov
pop
cmpsb
in
pop
mov
push
fs
gs
gs
clc
hlt
xchg
stos
std
mov
xrelease
jo
mov
mov
das
stc
bnd
in
pop
outsl
out
push
sub
xor
push
sub
loope
lret
mov
sti
addr16
int3
fs
push
mov
bound
and
fimuls
dec
xchg
xchg
lahf
xlat
imull
loop
cmpsl
rcll
push
daa
add
idivb
mov
jl
mov
jo
mov
icebp
dec
cmp
es
outsb
test
sbb
push
adc
jns
push
out
hlt
test
xchg
cmp
cmc
cmpsl
or
int3
sbb
aam
cmc
rcll
loopne
stc
mov
cmp
pop
mov
pop
jle
jo
push
mov
lock
sahf
in
shrb
ja
dec
lahf
leave
cmpl
fwait
mov
dec
mov
int
push
lods
mov
mov
mov
sub
sub
xchg
addr16
mov
mov
cwtl
jp
mov
out
stos
cmpsb
ja
insl
data16
inc
push
cmp
jno
jb
out
pop
push
dec
push
roll
in
dec
int3
and
in
cmpsl
es
out
inc
jne
mov
out
inc
mov
jne
lcall
sub
xchg
inc
cmp
or
mov
enter
int
dec
mov
ret
lds
pop
sub
test
pop
pop
pop
std
inc
adc
sbb
pop
mov
nop
inc
cld
push
cltd
and
addl
enter
popfw
loopne
arpl
mov
fcmovne
lea
test
cld
pop
sbb
nop
mov
lds
fstp
arpl
roll
shrl
xchg
and
fcmovnbe
fs
out
outsl
int
inc
ss
sub
dec
jmp
lret
jp
int
fs
inc
inc
insl
sbb
mov
inc
mov
mov
in
test
sbb
dec
pop
es
sub
fsubrs
xchg
stos
das
lods
mov
shlb
in
xchg
enter
or
pushl
js
ds
pop
xchg
leave
test
insb
test
test
jns
lret
add
std
addr16
or
clc
icebp
jge
ja
mov
xor
mov
sti
jecxz
mov
stos
lea
mov
or
jle
lret
mov
andl
popf
xor
lea
push
mov
dec
roll
add
adc
ret
pusha
bound
mov
jae
push
pop
cli
jle
jg
mov
fsubl
xchg
scas
in
notl
dec
test
sub
add
nop
inc
mov
mov
push
shl
inc
or
imul
sub
cmpsl
cmc
dec
mov
roll
rcr
xchg
inc
xor
in
mov
arpl
scas
movsb
lcall
xchg
roll
int3
sub
sub
and
sarb
ret
pusha
or
mov
dec
aad
icebp
sbb
sti
movsl
repz
cmp
lea
lahf
sbb
pop
mov
mov
mov
je
and
dec
ret
mov
cli
stc
xor
inc
mov
and
test
loopne
push
fdivp
addl
adc
push
cmp
pop
sbb
hlt
stos
push
data16
out
lahf
cwtl
or
aaa
outsl
arpl
out
subl
inc
sbb
jp
mov
sbbl
adc
adc
mov
mov
or
test
sbb
lea
outsl
sti
ljmp
jo
xchg
mov
rcr
sarl
xor
or
pop
sbb
cmp
mov
fcmovnu
mov
lret
jne
push
ja
adc
xchg
and
xor
nop
sbb
test
sbbb
in
push
pop
push
lret
fsubl
jns
fadd
sarb
lret
inc
sub
inc
hlt
mov
loop
mov
dec
mov
aad
andb
push
lcall
es
shll
inc
es
pop
out
repnz
mov
jae
loop
fdivs
mov
in
jge
js
inc
and
int
push
dec
lods
jl
xor
push
fmull
lods
mov
and
push
int
push
pop
fistpl
lods
sub
test
pushf
jbe
les
nop
into
pushf
enter
xor
sub
jge
pop
pop
icebp
in
inc
fists
mov
repnz
movsl
jmp
xchg
out
ja
loop
je
data16
mov
lcall
mov
movsb
or
push
jp
jns
inc
cmp
loop
xor
ljmp
dec
pop
idivl
xor
pop
xor
in
adc
inc
push
cmp
fstpt
pop
repz
sbb
and
mov
addr16
cmpl
addr16
xchg
enter
icebp
insl
pop
out
outsb
inc
fimull
mov
and
push
xor
ss
jo
je
imul
mov
int
cmp
inc
test
sahf
fstpt
cmpsl
neg
int3
push
scas
add
dec
jns
jnp
outsl
pusha
popf
in
mov
ljmp
movsl
mov
mov
lock
mov
or
loope
rclb
mov
bound
add
in
fistps
mov
jnp
xlat
loop
cmpsl
inc
lcall
out
xor
cmpsb
mov
call
xor
or
cmc
cltd
mov
xchg
jae
adcb
mov
xor
sub
push
sbb
aas
adc
xor
push
push
push
lret
loop
mov
fwait
and
or
test
sub
mov
inc
dec
pop
jp
add
add
mov
or
insl
idivb
inc
ja
mov
jno
fldl
cmp
jns
lahf
mov
stos
lret
pop
push
add
jp
jge
jmp
mov
icebp
push
aas
pop
xchg
xchg
das
cmpsl
xchg
jge
jg
in
mov
push
imul
getsec
sub
pop
cmp
sub
cmp
test
loop
or
mov
cmpsb
sub
xor
inc
adc
cmpsb
fwait
jne
mov
dec
loopne
xor
mov
sahf
jne
adc
xor
iret
lcall
fistpl
mov
loop
clc
mov
fidivrl
fistpll
movsl
arpl
xchg
pop
test
fsts
pop
sarb
pop
push
adc
dec
lods
pop
add
dec
ret
inc
gs
gs
into
int
nop
pop
push
or
add
xor
mov
sub
loopne
addr16
cmp
inc
insl
xor
lahf
js
loopne
cld
sbb
pop
mov
mov
sub
pushf
cs
cmpsb
mov
ja
or
mov
mov
test
dec
out
jmp
pop
push
sti
arpl
mov
frstor
xor
aam
scas
lods
xchg
arpl
jns
out
push
xchg
lds
stos
test
mov
adc
cli
xchg
sub
in
popa
add
pop
shll
jnp
xchg
dec
sti
shl
ja
stc
enter
inc
fwait
sbb
xor
out
push
dec
fs
mov
pop
adc
dec
sti
mov
popf
jbe
mov
imul
push
movsl
add
fdivrl
mov
mov
je
mov
loopne
mov
movsb
inc
push
mov
lret
stos
cmp
fsubl
aad
je
popa
out
mov
mov
cli
std
xorb
repz
fcomps
inc
in
sub
std
inc
lods
testb
imul
scas
xor
loop
nop
cs
test
fmuls
sbb
push
dec
aam
subl
into
push
enter
mov
dec
jne
in
mov
cmc
and
xchg
jbe
mov
adc
pop
stc
sbb
in
add
cwtl
in
daa
jmp
inc
addr16
test
or
iret
jo
xchg
pop
cmp
push
lods
or
call
addr16
push
mov
sbb
scas
add
test
xchg
sub
and
sbb
popa
xchg
or
mov
xlat
jecxz
mov
loopne
sbb
mov
mov
popa
daa
out
lods
insb
push
xchg
into
repnz
icebp
int3
mov
add
test
cld
add
lock
add
int3
enter
shlb
inc
loop
inc
jne
mov
test
push
cmp
out
das
sbb
clc
adc
push
stos
xor
fxch
mov
fucomip
loopne
and
call
ja
jae
je
int3
cli
es
aam
out
je
rclb
inc
icebp
pop
mov
aas
cld
inc
xchg
loope
outsl
in
adc
imul
cmp
mov
movsb
iret
adc
mov
rorb
push
sbb
ja
int3
cmpsb
ja
add
cmp
or
lret
xchg
add
mov
movl
aaa
gs
insb
xor
pop
clc
aaa
adcb
pop
add
ljmp
hlt
xchg
fisttps
fisttps
or
dec
inc
mov
enter
or
push
xor
shr
ffree
int
adc
sbb
rcr
repnz
mov
addr16
test
inc
out
je
es
out
mov
scas
lds
xor
sbb
faddl
imul
xchg
lock
cmp
xor
rcrl
les
mov
outsb
clc
lret
dec
sub
xchg
add
cld
jge
sbb
sub
push
mov
xchg
insb
dec
push
lret
je
pop
and
test
mov
inc
das
daa
cmpsl
ret
gs
dec
mov
pop
jle
xor
popw
and
cmpsl
pop
mov
lret
push
xor
popf
push
imul
aas
adc
and
sbb
mov
and
std
cmp
imul
loopne
inc
mov
sbb
pop
cmp
cmp
vcvtss2sd
xor
je
clc
jmp
cld
xchg
push
push
sti
dec
ds
cmpsb
js
jge
mov
xchg
sub
mov
add
xchg
cmp
push
pop
andl
pop
xchg
push
xchg
cmpsl
dec
stos
lds
call
aaa
mov
cld
js
test
jmp
and
and
out
pop
xor
mov
andl
pop
add
bound
iret
push
mov
in
push
xor
push
leave
add
mov
pop
sub
add
imul
add
mov
test
aas
aam
notb
xor
adc
push
mov
jns
sti
xchg
std
push
popf
jmp
sti
adc
sbb
dec
int
mov
loop
lahf
xchg
in
and
adc
leave
lods
dec
pop
mov
jo
les
es
jmp
inc
or
xor
fs
cmp
ret
mov
sti
cmp
pop
push
vmovd
mov
insl
mov
jne
dec
sbb
push
nop
aad
std
pushf
xchg
cmpb
adcb
in
dec
jge
cmp
push
imul
mov
xor
stos
clc
or
gs
repz
jmp
pop
xor
mov
fnstsw
aas
pop
sarl
pop
shlb
pop
add
push
xchg
clc
mov
out
push
movsb
aam
rcll
icebp
test
in
mov
mov
das
cli
ja
xor
movsl
xor
icebp
rorb
push
mov
mov
sbb
out
mov
push
adc
cmpsl
ss
xchg
cmp
mov
push
les
int
adc
jae
lds
adc
mov
dec
mov
jecxz
xchg
inc
out
mov
pushf
scas
fiadds
idiv
sbb
xor
jmp
jo
arpl
call
int
mov
xor
and
xchg
push
sbb
pop
xor
dec
push
call
sub
call
imul
ss
add
aad
or
mov
sub
test
push
xchg
arpl
pop
aaa
shrl
in
jmp
ret
and
or
sub
ja
out
dec
out
cmpsb
dec
mov
fwait
cmpsb
test
mov
jl
das
in
push
hlt
aad
dec
adc
movsl
cmp
jnp
into
dec
cmpsb
fstpl
mov
xlat
jne
mov
insl
outsl
push
lds
and
push
lcall
and
push
loope,pn
movsl
jmp
sarl
and
add
out
xor
cmpsl
add
clc
pop
and
mov
mov
xchg
sti
mov
ds
iret
mov
cmpsl
inc
cmpsb
adc
pop
xor
js
roll
das
arpl
jns
adc
jge
insb
mov
pop
and
cmp
inc
popa
mov
pop
pop
mov
test
scas
cmp
fnsave
std
cmp
push
ret
loope
xor
lds
cmpsb
in
insl
imul
fdivrl
pop
adc
cmpsl
shl
sbbl
mull
xor
cltd
adc
out
or
lret
mov
add
fildll
fisubrl
dec
inc
and
roll
data16
adc
mov
jle
je
aam
adc
popa
mov
fwait
aaa
xor
inc
xor
jo
fistl
rcll
sub
icebp
or
mov
aas
rorb
stos
loop
inc
mov
andl
orl
sbbl
xor
xor
inc
xor
jecxz
sarb
test
repz
cmovns
push
outsl
mov
hlt
xchg
mov
mov
xchg
into
iret
jne
das
cld
cmpsl
inc
stc
push
hlt
and
push
adc
hlt
jmp
mov
jbe
mov
jmp
mov
test
inc
loopne
aaa
add
push
jns
jg
movsb
inc
mov
or
repnz
cs
test
pusha
push
dec
insb
inc
test
in
dec
sahf
call
inc
mov
mov
mov
jbe
xor
inc
or
xor
lahf
stos
push
fs
cmp
arpl
add
xor
lods
out
cmp
xlat
pop
adc
mov
in
mov
or
ret
fscale
adc
xor
mov
leave
or
jno
pop
mov
mov
test
cmpsl
bound
stos
mov
mov
mov
mov
pop
movsl
pop
rorb
jg
loope
jne
dec
stos
cmp
dec
adc
push
test
lahf
sbb
jns
shrb
jp
fdiv
imul
push
xor
mov
jno
das
hlt
mov
pusha
push
sbb
sbb
sbb
sbb
push
jo
popf
stos
xor
mov
mov
fisttps
inc
jp
mov
pop
hlt
in
stc
and
imul
pop
and
out
and
pop
fs
cld
mov
imul
mov
sub
jb
aam
cmp
insb
out
sarl
cmp
bound
adc
add
mov
and
fcompl
test
add
pop
cmc
iret
mov
jmp
xchg
sahf
inc
cmp
push
lcall
mov
mov
pop
cld
mov
into
sbb
std
inc
test
rol
das
push
or
mov
ljmp
scas
pop
dec
ret
cwtl
mov
inc
shlb
ret
jb
ja
adc
je
add
push
fbstp
fdivr
incb
ss
mov
das
orl
ja
jno
mov
and
jae
or
cs
sbb
iret
ds
clc
pop
adcb
inc
stos
push
cli
xlat
lret
xchg
sbb
clc
mov
ja
rolb
adc
test
mov
inc
aaa
pop
test
ret
insl
hlt
stos
push
fnstenv
ficomps
jmp
fsubl
imul
add
fisubrs
popa
ljmp
cmpsb
xlat
mov
push
mov
movsl
loopne
popa
fldcw
pushf
add
call
mov
adc
leave
xchg
lret
nop
jne
ss
jb
mov
fbld
lret
ret
sbb
ret
inc
int3
push
mov
push
repnz
mov
and
ja
push
arpl
lcall
fs
inc
and
cmpsl
call
imul
jl
adc
int3
sbb
insb
cmpl
push
adc
lret
xor
in
addr16
inc
shll
mov
xchg
movsl
mov
jbe
mov
dec
dec
lds
adc
push
mov
mov
pop
mov
mov
or
inc
sbbb
xor
xor
push
lods
ja
test
jge,pt
das
int
stc
mov
xchg
filds
xchg
dec
arpl
loop
and
repz
rcrl
stc
in
adc
aam
dec
sarl
push
push
adc
rorb
dec
mov
gs
rcl
data16
push
dec
adcb
pushf
xchg
dec
inc
idivl
aam
add
sbb
mov
and
clc
nop
pop
lods
aad
cwtl
test
lret
sarb
out
jo
int3
push
ds
fmul
mov
or
pop
inc
gs
jo
les
or
je
xchg
cmp
sahf
addr16
pop
sahf
addr16
imul
icebp
jl
sub
cmpsl
cmp
rcrb
out
test
rorl
push
in
adc
dec
scas
imul
sub
cmp
inc
adc
pop
sbb
or
aad
add
jecxz
clc
scas
xor
jno
hlt
push
call
push
andb
loop
jne
xor
mov
mov
adc
cs
xor
and
mov
enter
push
jno
push
mov
ljmp
lahf
mov
ss
arpl
je
insb
push
pop
stc
add
iret
leave
cli
leave
jbe
pop
pop
repz
inc
data16
ret
mov
stos
mov
jecxz
sahf
push
jbe
mov
or
ds
sahf
jl
mov
pop
int
sub
out
or
call
dec
stos
dec
xchg
sbb
and
push
pop
push
cs
lds
movb
add
mov
xor
mov
add
fmull
popf
in
sbb
dec
dec
mov
pusha
popa
mov
scas
stc
loope
aad
lahf
mov
sbb
jmp
movsb
cmp
xchg
xlat
mov
add
cmp
sbb
cli
fisubl
out
js
pop
sub
adc
add
jmp
inc
lds
pop
xor
in
xor
movb
jg
lret
sbb
std
cmp
mov
je
scas
xor
xlat
enter
cwtl
cmp
push
je
fdivrl
xchg
insb
mov
std
jmp
xchg
lahf
and
fmulp
imul
xchg
cli
inc
mov
jnp
iret
orb
xlat
shlb
add
les
sarb
roll
inc
xor
and
xor
jg
and
test
mov
pop
lret
mov
rclb
repnz
mov
fnstenv
pop
lahf
pop
jp
sbb
xchg
popa
xchg
and
xchg
test
iret
sti
ret
push
and
js
subb
lods
xchg
aam
cltd
xchg
or
sub
hlt
in
fcomp
add
cmp
in
xchg
fcoms
sbb
push
mov
inc
daa
xchg
lds
push
enter
stos
sbbb
push
ljmp
nop
mov
loop
inc
clc
mov
ds
mov
xor
arpl
inc
sub
imul
jae
xor
cmp
shl
sub
mov
and
arpl
ret
les
dec
stos
xchg
dec
inc
cli
pop
shrl
jg
ljmp
inc
loop
pop
std
mov
jo
sbb
cli
sahf
andb
icebp
test
cmp
jne
loopne
movsl
pushf
inc
sub
pop
xchg
jmp
das
push
push
repz
cmp
pop
and
aad
sar
mov
sarb
sub
popa
insb
rorb
jbe
push
stos
cs
lcall
add
loope
cmpsb
stos
fnstcw
test
jp
fs
and
push
push
dec
das
jae
push
ja
clc
fmull
imul
mov
xchg
lds
icebp
jecxz
jnp
fildll
xchg
stos
pop
mov
cmpsb
pop
inc
or
push
ret
and
bound
stc
out
xor
jge
lock
imul
mov
inc
mov
push
bound
or
sub
sti
adc
push
cmp
pop
or
jae
lret
stos
mov
pop
sbb
stc
mov
scas
hlt
jmp
pop
sbb
mov
pop
je
jge
ja
loope
jns
shrl
fwait
js
mov
xor
sbb
pop
push
pop
rorl
or
movsb
jge
cwtl
jg
cmp
push
arpl
enter
insl
mov
stc
push
mov
adc
cltd
subl
and
push
xor
inc
xchg
mov
jo
adc
xor
mov
int
out
xchg
inc
or
cmp
jmp
data16
andb
dec
push
xchg
jmp
xor
iret
out
sub
test
sub
dec
clc
push
jmp
js
int
sbb
and
sti
in
cmp
loopne
xor
test
sti
xor
add
cmp
ljmp
adc
into
dec
mov
mov
sub
test
aam
lcall
mov
popf
jbe
sbb
in
cltd
dec
xchg
dec
xor
mov
lods
and
xchg
inc
daa
sub
loopne
sub
mov
loopne
jmp
inc
push
mov
add
test
rcr
mov
add
sbb
inc
fwait
mov
cmp
aas
daa
fsts
add
fld
cld
stos
and
fstpl
inc
es
push
loop
jmp
jae
mov
sub
clc
adc
inc
push
or
push
cs
roll
sub
mov
add
sbb
jge
push
mov
icebp
mov
mov
pop
ds
pop
jg
fisttpll
jle
repnz
clc
push
insl
popf
and
mov
testb
and
mov
in
popa
mov
mov
pushl
insl
sbb
je
push
inc
sti
test
in
imul
sbb
push
or
fimuls
loope
cmp
pop
mov
dec
shl
sub
fs
mov
lds
mov
mov
mov
pop
cld
int3
shlb
test
mov
pop
xchg
cld
inc
jo
xor
jb
inc
cmp
addr16
sbb
and
cmp
lds
mov
sub
sub
mov
pop
sbb
xor
ljmp
icebp
mov
aaa
xchg
cmp
into
daa
cmp
xor
mov
mov
stos
and
movsl
xor
and
mov
xor
xchg
into
fiaddl
lock
jle
out
mov
mov
sar
mov
insb
cld
adc
sub
movsl
loope
jecxz
mov
or
add
in
test
mov
jmp
xchg
adc
loop
push
clc
cmp
adc
mov
out
mov
add
dec
push
mov
pop
jno
jmp
mov
inc
shr
ficomps
mov
icebp
testl
jl
and
add
fnstenv
into
push
sub
adc
cld
push
jno
aas
not
sub
pop
push
cmp
xchg
xchg
adc
cmp
rorl
ficompl
inc
outsb
ljmp
and
add
xchg
cmpsl
les
xor
lcall
and
push
popf
out
adc
jns
sbb
pushf
xchg
data16
jbe
fnstcw
dec
pop
xchg
lret
push
adc
pusha
push
mov
xchg
xor
lds
adc
cwtl
int
cmp
fcmovb
and
jge
mov
xchg
es
aaa
sti
pop
sub
or
sahf
push
inc
imul
imul
and
btl
pop
ror
mov
inc
push
inc
inc
sbb
or
xor
ljmp
sbb
cmp
test
les
jl
cltd
add
cmp
icebp
lcall
sbb
cmpsl
xor
lret
add
jge
xor
iret
aam
or
fxch
mov
cmpb
sti
mov
cmp
xchg
mov
jne
inc
push
mov
int3
loop
int
les
cmpsb
mov
dec
or
cltd
aas
andl
cmp
in
push
loope
pop
std
sub
mov
xorb
pusha
cmc
lret
xor
mov
inc
enter
push
push
mov
sbb
add
mov
mov
movsl
out
jecxz
cld
ret
in
test
jbe
out
cmp
mov
dec
jge
mov
or
and
xor
or
pop
lret
cmp
xchg
out
cmp
push
adc
fldl
mov
pop
mov
xchg
shrb
or
scas
or
add
add
lock
dec
pop
pusha
cmp
aas
jecxz
fs
mov
pop
mov
js
ds
sub
iret
pop
xor
ffreep
inc
and
xor
pop
in
xchg
icebp
cmpsb
aas
hlt
cmpsl
jns
inc
sahf
ret
inc
cmc
das
pop
inc
push
stc
jo
sub
and
fcom
jecxz
shrb
clc
push
popa
repnz
rcrb
pop
shlb
mov
pop
xlat
fmull
int3
jne
hlt
push
ret
xlat
in
add
int3
push
ss
sub
sbb
xchg
adc
lret
or
icebp
inc
mov
inc
iret
cs
push
hlt
or
dec
jbe
xchg
int3
cmc
test
push
xchg
push
push
xchg
ja
xchg
jmp
test
xlat
lods
push
and
cwtl
test
test
jno
xchg
jl
and
sarb
jge
in
aas
rclb
or
mov
push
pushf
mov
push
mull
cli
xchg
ret
mov
pop
and
pop
and
mov
push
sbb
xchg
scas
insl
rol
xor
cwtl
sub
inc
cmp
pop
stos
mov
cwtl
test
and
push
cmc
push
push
mov
arpl
imul
add
imul
or
inc
leave
sahf
scas
cmp
gs
or
pop
add
adc
gs
in
les
push
testb
push
lock
lods
add
scas
icebp
fadd
pop
out
inc
sub
mov
sbb
lahf
mov
fsub
add
dec
mov
jg
out
push
xor
mov
clc
mov
movswl
daa
mov
inc
daa
add
dec
lods
or
repz
sbb
hlt
jge
stc
adc
cld
mov
mov
or
insb
fiadds
or
cmpsb
dec
cmc
adc
sti
cs
scas
pop
ret
mov
cmpsb
popf
xchg
loope
and
repnz
subb
adc
out
sub
gs
jge
xchg
inc
iret
inc
pop
mov
mov
pop
arpl
fisttpll
addr16
bound
fcoml
sbb
lret
inc
inc
arpl
and
aam
inc
xchg
mov
gs
and
push
mov
adc
mov
push
repz
adc
jmp
push
mov
hlt
test
pushf
movsl
or
test
inc
popf
jecxz
repz
mov
mov
hlt
xor
inc
or
lods
ret
mov
inc
adc
daa
or
aas
out
aad
imul
dec
into
add
pop
cmp
pop
sbb
mov
es
jecxz
push
sbb
dec
fwait
test
stos
jmp
cmp
mov
dec
lock
pop
fwait
mov
cmpsl
mov
aas
aad
mov
jmp
out
enter
cli
jl
cmpsl
dec
cmp
or
pushf
repnz
pop
push
sbb
rcrb
repnz
pop
call
hlt
cmpsb
mov
sub
enter
call
out
ret
pop
jmp
push
cmc
and
mov
cmc
push
sub
aaa
pop
xlat
in
in
push
push
jmp
out
cs
scas
inc
ds
pop
ss
pop
sahf
bswap
les
mov
dec
adc
lods
xor
inc
sub
and
xor
lret
imul
adc
push
sub
mov
push
outsl
in
cld
sbb
xchg
rcrb
mov
mov
inc
notl
push
push
sti
fcmovnb
pusha
pop
out
adc
fbld
push
hlt
push
rorl
insb
mov
add
or
mov
cmc
dec
fsubr
mov
sbb
fisubrs
inc
outsl
mov
xor
xor
je
mov
sub
stos
arpl
or
ljmp
out
mov
call
xor
push
dec
inc
sbb
dec
or
rolb
mov
push
add
jge
fsubl
ret
mov
pop
add
int
popa
xchg
pop
pop
push
test
xchg
subl
jne
call
inc
adc
in
jno
mov
pop
cmpl
fimull
jnp
aad
pop
pop
arpl
ds
or
jp
xchg
inc
testl
pop
imul
adc
das
addr16
fwait
inc
add
mov
sti
out
xlat
mov
mov
jmp
push
lods
or
sbb
gs
lods
dec
inc
and
dec
dec
xchg
lods
lds
mov
fdivs
sub
add
test
lahf
stos
and
jp
nop
jb
addl
adc
repz
daa
add
add
cmpsl
addr16
mov
fnsetpm(287
insl
mov
les
stos
jb
cs
test
fsubrs
arpl
aaa
lret
cld
rol
fcomps
cmpsb
loop
bound
and
dec
jns
faddl
ret
jp
test
sbb
jecxz
mov
sbb
mov
cmpsl
hlt
xchg
mov
sub
movsb
fsubl
push
mov
lret
cs
sbb
dec
dec
push
xchg
mov
jmp
or
inc
or
jp
in
fstps
sbb
jge
dec
test
xor
xchg
cmp
sub
pop
int
adcb
or
leave
fwait
cmp
add
popa
lock
adc
mov
dec
sbb
and
stos
adc
aam
sub
enter
shr
pop
and
push
push
add
popf
ljmp
xchg
daa
ss
filds
mov
std
sbb
mov
jbe
insl
or
out
and
test
xor
add
or
add
xor
sbb
xor
or
add
cmp
lret
xor
pop
in
lds
out
jo
push
cmc
clc
jle
mov
inc
xor
xchg
shrb
jne
mov
mov
sbb
mov
jno
and
mov
push
inc
iret
pop
int3
push
mov
mov
stos
or
push
cmp
test
sbb
jp
and
dec
sub
daa
sahf
dec
push
xchg
mov
push
push
push
idivl
sahf
mov
sbb
cmp
xor
pop
push
lea
mov
cmp
repnz
es
adc
cmp
dec
push
or
sahf
or
mov
inc
xor
mov
mov
push
and
rcrb
cmp
aad
or
xlat
adcb
mov
int3
pop
call
push
shrb
pop
cmp
popf
outsl
aaa
xchg
mov
in
jp
push
xor
jae
mov
pop
or
sbb
dec
sahf
sub
dec
loope
and
mov
imul
int
popa
inc
ds
into
inc
ja
cmp
dec
push
jae
inc
add
push
mov
das
mov
xchg
ficoml
lahf
outsb
insl
es
in
ljmp
sub
dec
inc
cmc
jne
pop
adc
xor
cltd
das
push
add
adc
test
in
ret
push
sar
cld
mov
push
outsl
faddl
in
dec
push
pop
insb
std
sbb
adc
mov
adc
insb
popa
pop
xchg
pop
add
enter
sbb
mov
xor
dec
xchg
filds
lods
xor
insb
xchg
pop
inc
in
inc
enter
push
inc
xchg
jecxz
cmp
cmp
lods
aaa
dec
ficompl
movsb
sub
orl
es
xor
push
push
sbb
lds
popf
xor
cmpsb
and
scas
xchg
in
or
inc
push
popl
sbb
mov
mov
dec
add
enter
push
insl
ret
lods
and
push
xor
sbb
jmp
sbb
mov
adc
or
and
pop
push
loopne
scas
mov
lock
or
std
sub
icebp
and
pop
hlt
sub
outsb
cmpsb
adc
sbb
adc
in
lds
xchg
inc
ret
pop
pop
sbbl
arpl
xor
pop
pop
idivb
adc
nop
dec
insb
ret
mov
sbb
leave
loop
out
out
jmp
mov
bound
cld
cs
in
mov
pop
testb
mov
and
mov
in
cmpsb
ss
xlat
sub
iret
pop
int3
repnz
ss
lret
inc
repnz
add
data16
sahf
jae
subl
jmp
xor
loop
frstor
je
ds
mov
cmpb
and
or
fs
mov
adc
mov
push
std
shll
jg
repz
loopne
jo
lcall
xor
sub
add
xchg
dec
insb
jae
or
mov
jecxz
testl
cmp
bsr
jbe
ja
inc
xor
xor
pushf
test
xchg
clc
scas
pushf
and
xor
fisttpll
fwait
icebp
mov
fwait
mov
inc
xchg
cmp
sub
mov
push
or
mov
notl
insl
xchg
repz
popf
aas
dec
mov
inc
addr16
rorl
mov
xor
popf
jbe
jbe
and
adc
xchg
outsl
loopne
jo
xchg
cli
rcrl
dec
sarb
xchg
sahf
pop
pop
pushf
sub
sar
push
sbb
das
xchg
into
jge
lods
movsb
adc
push
ja
xor
addr16
push
dec
nop
or
movsl
clc
outsb
mov
mov
test
push
cmpsl
outsl
add
sbb
mov
jae
mov
gs
mov
jle
ret
jno
les
add
inc
outsb
jl
push
pop
fwait
daa
pop
pop
push
pop
jo
loop
dec
jo
insl
dec
lds
lret
sbb
aaa
aaa
lret
xchg
sub
pop
mov
adc
adc
xor
sub
cmc
pusha
fisubs
xlat
xchg
movsb
mov
adc
jl
mov
fcomps
divl
sahf
jae
mov
shll
iret
and
mov
cmp
jl
rcrl
cmpsb
mov
sub
or
rorl
gs
cmpsb
rcrb
add
jp
daa
sub
cmpsl
sahf
dec
test
mov
subb
add
inc
popf
std
cmp
jecxz
push
sbb
lods
ja
xchg
sub
scas
pop
mov
gs
jmp
push
inc
inc
data16
push
les
ds
sub
mov
lods
mov
int3
sub
inc
or
pop
jb
cmp
addr16
in
adc
jae
fadds
popf
xchg
sub
sub
add
jo
outsb
subl
out
or
sbb
pop
popa
int
lock
fnstcw
inc
sbb
lahf
loopne
jae
stc
loopne
push
push
mov
fldenv
jbe
push
loope
jle
adc
shlb
add
jge
cs
sarb
add
lods
adc
imul
xor
mov
push
icebp
sahf
add
ds
lahf
pop
je
rcrb
out
push
hlt
jmp
inc
js
push
push
pop
insl
fldlg2
xor
pop
incb
test
dec
mov
cltd
fs
add
or
push
mov
and
mov
sbb
push
lcall
adc
mov
std
add
push
or
jae
pushf
pop
push
aad
sti
fnstsw
jo
stc
popf
sti
or
jnp
pop
fwait
cmpsl
xchg
lds
or
dec
and
fs
daa
sub
xor
push
push
add
jg
aaa
jne
repz
lods
push
pusha
fs
dec
mov
mov
jge
std
in
lods
cmp
or
mov
scas
cs
and
cltd
or
pop
int
pop
sub
lret
mov
or
fsts
ficoml
int3
aaa
fwait
addr16
movsl
pop
inc
test
aaa
lock
inc
jns
adc
lods
sub
and
nop
cmpsb
lcall
jno
mov
push
jp
mov
and
movsb
jo
add
pop
mov
cmp
sub
or
popa
pop
repnz
xorl
add
lock
inc
sbb
push
dec
mov
cmp
and
pushf
inc
adc
das
cmpsl
inc
inc
dec
outsb
xchg
sbbl
push
mov
pop
xor
stc
pop
les
push
cmp
or
mov
je
lods
fbld
push
lods
pop
xor
aaa
add
cltd
add
popa
int
les
mov
fs
sub
test
dec
push
or
mov
mov
xchg
popf
mov
insl
pop
lea
ss
add
xchg
sbbl
or
xchg
and
add
roll
mov
pusha
cmp
fstl
loope
cmp
das
std
insb
testb
inc
mov
and
dec
insl
test
jge
in
cs
mov
fwait
or
out
in
cmpsb
mov
push
shlb
sahf
adc
ljmp
stos
sti
aas
sahf
add
hlt
cwtl
repnz
mov
dec
test
cltd
inc
adcl
mov
leave
loop
mov
dec
and
sub
movsl
xor
pop
and
ret
aam
vrsqrt14ps
sub
sbb
xor
fstl
add
pop
scas
inc
lea
push
mov
imul
movsb
dec
add
add
sbb
jle
dec
sub
and
jbe
pop
pop
mov
daa
cmp
fsqrt
or
outsl
xor
lahf
outsl
pop
int3
pusha
cmc
sahf
cmp
les
fsubs
clc
fcmovnb
ret
or
addl
out
out
imulb
jge
xchg
xchg
scas
orl
xor
push
adc
mov
stc
call
aas
fmulp
inc
xchg
das
ja
sbb
fs
sbb
and
ret
daa
in
mov
sti
xor
mov
loop
int3
jl
mov
es
cmpsb
outsl
jae
cmp
or
dec
sub
or
loopne
aam
mov
es
iret
adc
lret
loope
pop
enter
dec
xor
xchg
or
push
ss
mov
push
aad
mov
in
cmp
pop
lret
inc
add
cmpsb
out
xor
cmp
push
inc
mov
orl
lret
repz
cltd
lds
ja
fsts
sbb
xchg
popa
cmp
inc
loope
cmp
push
jae
dec
xchg
stos
adc
mov
pop
mov
roll
hlt
rclb
push
addr16
test
dec
test
sub
push
xor
jmp
adc
dec
jmp
sub
add
cmp
jg
jo
jnp
mov
mov
jns
pop
cmpsl
jmp
sbb
shl
and
mov
jmp
jo
clc
divl
repz
pop
rcrb
cmp
xor
pop
dec
and
scas
sbb
jno
sbb
pop
ret
push
push
ds
les
push
test
jne
push
cmp
clc
adc
repnz
out
xlat
add
sarb
mov
lcall
or
ja
mov
mov
cli
cmp
cmp
or
sbb
mov
mov
xchg
pop
ret
jne
pop
jmp
shlb
push
loopne
inc
js
hlt
jbe
push
cmpsl
sbb
insb
dec
sbb
and
bound
inc
gs
mov
fnsave
xor
addr16
lods
inc
movsb
or
jbe
mov
pop
pop
mov
movsl
sbb
xor
das
mov
xchg
inc
dec
fldl
xchg
mov
ja
cmp
jg
jnp
leave
arpl
add
push
ficoms
outsb
test
jge
add
inc
fildll
mov
add
iret
push
aad
test
das
xor
scas
push
lret
push
lods
ljmp
inc
outsb
lods
addb
fcomps
cmp
mov
mov
test
pop
popf
decb
add
jl
mov
xchg
pop
jmp
lock
shrb
jg
fdivs
pop
into
ds
sub
jns
pop
mov
gs
pop
inc
repz
and
scas
loop
enter
arpl
or
add
subb
test
add
cmc
inc
dec
jae
call
sti
ja
shl
insl
lcall
xchg
je
jmp
and
cmp
xor
jg
and
fwait
add
push
shr
pop
push
in
cmpsb
xchg
data16
lds
dec
pop
ljmp
ret
iret
push
fsubl
dec
xchg
jnp
loopne
inc
cltd
jbe
jle
out
and
dec
ficomps
sar
ret
out
scas
jns
ss
fcomps
xchg
mov
mov
testl
js
or
insl
scas
push
cmpsb
mov
push
pop
fistpl
roll
pop
arpl
mov
adcb
mov
mov
cmpl
outsb
dec
mov
push
leave
sbb
out
mov
std
out
out
jne
pushf
aas
enter
cld
cmp
clc
aas
call
push
or
in
popa
pusha
mov
lahf
mov
nop
add
mov
jmp
and
fsubs
int
mov
cmp
mov
and
lret
xchg
mov
and
xchg
sarb
scas
adc
xor
enter
es
dec
mov
rorl
pop
outsb
jp
cmpsl
pop
lret
jge
xor
cmp
pop
in
mov
enter
cs
jns
std
or
cld
fbstp
mov
push
jp
pop
lret
cmp
movsb
stos
cmp
cli
stos
jg
sbb
adc
fildl
jmp
movsb
mov
cmpsb
in
dec
add
testl
lret
dec
jne
and
dec
popf
out
clc
xchg
iret
jecxz
xor
std
test
jl
lods
xor
jge
xchg
xorl
test
sbb
fstpt
jb,pn
xchg
mov
push
lret
cmpsl
aaa
push
ss
add
es
xchg
push
sbbb
fildl
xchg
std
rcll
sub
dec
repz
pop
repnz
mov
jmp
repz
sbb
xchg
adc
add
dec
and
mov
lcall
iret
add
or
push
lds
imul
int3
adc
and
add
loop
ljmp
jge
addr16
jl
jle
mov
in
cmpsb
les
adcb
and
jae
icebp
lods
leave
stos
and
loope
push
rcrl
xchg
push
push
lods
out
push
lret
out
pop
fmull
sub
xchg
fsubrl
sbb
mov
cmp
sbb
int3
frstor
shlb
jnp
xchg
sub
clc
insb
ljmp
jne
add
dec
pop
shrb
pop
pop
fsubrl
lret
mov
ss
aad
pop
xchg
xlat
jns
pop
popf
stos
mov
in
daa
in
test
sbb
lahf
mov
jge
push
loopne
push
filds
push
sub
add
inc
pop
or
fcomi
adc
pop
cmp
movsb
insb
jo
or
rcl
mov
jmp
mov
pop
push
and
repz
push
imull
test
mov
aad
enter
mov
mov
ljmp
mov
xor
out
cli
test
imull
push
cmp
scas
loop
fdivp
push
mov
xchg
adc
dec
clc
in
xchg
push
sub
stos
jae
scas
test
push
loope
insb
bound
hlt
add
repz
popa
ljmp
xorb
into
test
int
cmp
mov
jnp
push
into
dec
add
push
jle
nop
push
sbb
stc
insl
xchg
imul
fisttpll
inc
or
and
push
in
enter
test
push
xchg
fistpll
and
sbb
cmp
cmp
xchg
mov
sub
or
and
mov
jecxz
ror
xchg
sbb
push
mov
cs
xchg
mov
ljmp
push
dec
nop
xor
mov
push
push
or
xchg
mov
jmp
inc
mov
xlat
or
data16
repnz
push
scas
out
push
imul
lods
mov
call
aad
cmp
jg
sub
sbb
or
mov
jl
xor
mov
popf
inc
pop
loopne
sbb
pop
xchg
shl
pop
lock
xor
mov
cmpsb
inc
mov
repnz
xchg
and
sti
lods
nop
arpl
xor
jmp
xlat
int3
pop
xchg
xchg
stc
repnz
addr16
cmp
js
xchg
addr16
adcb
cmc
mov
and
int3
fidivs
rorb
repz
dec
frstor
mov
mov
mov
out
mov
sbb
rclb
loopne
insb
pop
popf
aas
mov
mov
les
stos
jae
loopne
lret
sbb
or
sahf
cmp
xor
jnp
pop
mov
push
push
mov
leave
adc
xchg
cmp
inc
jnp
movsl
inc
fcoms
lods
mov
pop
xor
add
out
cwtl
jo
inc
xorl
cmc
fstp
xor
cwtl
jae
leave
sub
pop
cmp
imul
outsl
pop
push
lock
ret
cltd
ret
sarb
data16
or
ja
lods
mov
jle
or
les
mov
cltd
or
mov
mov
dec
mov
imulb
xor
inc
cmp
lods
cmp
mov
lahf
or
adc
nop
divl
jmp
add
xchg
enter
lock
jg
nop
sub
inc
xchg
push
xchg
fisubrs
xchg
ja
push
inc
cmpb
xchg
cmp
pop
mov
test
test
dec
in
sbb
mov
jo
scas
test
aaa
mov
adc
ficompl
mov
int
fistpll
je
ja
dec
stc
stos
pop
mov
hlt
cmpsb
adc
adc
ja
xchg
jbe
mov
xchg
stc
xor
outsl
cltd
push
insl
repz
add
mov
sbb
ja
sub
push
fiaddl
dec
pop
shll
push
js
sub
cmpsb
dec
xchg
sbb
mov
sub
movsl
sti
outsl
fstpt
inc
in
jle
sbb
cmc
inc
test
or
or
xchg
xlat
xchg
pushf
mov
mov
and
xchg
pop
stc
sub
fdivrs
add
cmp
pop
sti
dec
fcoml
and
inc
push
cmp
fcmove
cmp
xor
push
cmpsb
aam
cmp
test
imul
sbb
fs
inc
lods
pop
and
push
ja
aas
lods
aaa
jge
mov
xchg
and
insl
cltd
fs
push
aas
nop
fcompl
pop
jmp
stc
cmovp
fsubrp
pop
movsl
xchg
push
inc
and
jae
adc
cmp
test
jnp
jo
or
jnp
insl
push
and
ficoml
std
nop
sub
mov
enter
sbb
sbb
stc
adc
and
mov
pop
scas
mov
add
or
xor
or
stos
xchg
add
push
out
mov
pusha
mov
cmp
xor
lods
pop
or
cmp
xlat
addl
lods
xlat
fwait
mov
mov
movsl
sub
inc
ret
test
ljmp
cmp
popf
xor
lea
jo
outsl
push
lea
add
add
sbb
add
jle
jns
repnz
and
push
adcb
add
pop
pop
cmp
or
cld
sub
adc
arpl
aam
sub
pop
int3
adc
cld
stos
lea
movsl
jns
mov
mov
inc
into
or
jmp
in
pop
lods
dec
jae
leave
les
pushf
or
mov
mov
ss
and
popa
pop
jmp
sbb
pushf
mov
fcomi
mov
js
daa
imul
lods
cmp
jmp
sbb
ds
lds
ss
mov
dec
mov
sub
hlt
divl
push
jmp
sub
cmp
sbb
add
inc
xchg
xor
mov
in
xchg
push
jg
das
inc
lds
jg
cltd
mov
xchg
xor
cmp
add
mov
xchg
ficomps
pop
arpl
idivl
jns
inc
add
lahf
leave
sub
xor
dec
in
mov
nop
cmp
movsl
dec
push
inc
jecxz
inc
sub
jg
xor
sub
mov
sbb
sbb
sub
scas
sbb
adc
jecxz
jbe
lds
jno
cmpsl
pop
es
xor
dec
mov
jae
xlat
outsl
xchg
xchg
cmpsb
mov
or
aaa
dec
mov
pop
mov
lea
jmp
mov
xchg
mov
xchg
dec
add
ds
mov
repnz
imul
dec
test
loop
jg
and
mov
jle
dec
in
jmp
push
xor
mov
mov
fnstsw
jge
xchg
mov
jae
mov
cmpsl
lock
dec
shr
stc
fsts
movsb
sbbl
pmaxsw
test
loope
stos
or
inc
xchg
or
and
movsl
and
xchg
ficompl
addr16
or
imul
pop
cs
sub
mov
lea
pop
lea
add
imull
orl
mov
xchg
cld
aad
imul
out
xchg
data16
jecxz
mov
lea
xchg
sub
adc
add
psubusw
pop
inc
jg
outsb
ret
dec
mov
loopne
add
jp
int3
int3
pusha
mov
xor
and
jb
mov
adc
inc
sbb
and
jmp
popa
insl
mov
hlt
lods
ja
nop
orl
cmp
sbb
pushf
mov
dec
push
push
mov
xchg
jo
pushf
test
mov
push
cltd
sub
xor
lods
or
jge
inc
imul
lods
loope
sub
loopne
fisttpl
mov
aad
push
jecxz
repnz
xor
js
ljmp
sahf
int
outsl
jle
pop
dec
ljmp
push
jns
out
jp
mov
movl
jl
xor
push
add
mov
pop
cmc
mov
mov
sub
xor
lcall
iret
dec
ja
jno
cmpsl
insl
jno
out
mov
cmp
loopne
mov
mov
push
out
nop
xchg
sbb
lcall
or
pop
imul
cmp
aad
sahf
push
push
fisubl
jo
out
and
jb
nop
adc
clc
sbb
out
les
adc
dec
inc
js
les
sbb
jle
and
jae
add
lea
cld
mov
inc
jecxz
adc
fmulp
fdivs
arpl
mov
hlt
pop
inc
jns
xchg
loopne
sub
dec
jge
inc
in
inc
sarb
mov
or
xchg
arpl
pop
or
pop
sti
scas
jp
inc
push
enter
js
arpl
int
scas
test
dec
or
test
add
jmp
inc
lds
inc
sub
addb
clc
inc
scas
loop
dec
lds
mov
lds
std
gs
xchg
subb
insb
and
jns
mov
cwtd
mov
rcrb
xchg
rclb
ds
and
aas
push
sub
adc
adc
lahf
enter
dec
icebp
test
add
leave
in
test
mov
lret
mov
cmp
dec
int
bound
jl
push
popf
shr
std
test
push
pop
scas
mov
ja
decl
pusha
push
push
in
jmp
fstps
dec
jg
jp
mov
sbb
out
lea
sti
jb
inc
and
icebp
lds
gs
xchg
jns
push
xorl
test
jecxz
cmp
pop
das
scas
ja
push
filds
sahf
test
xchg
push
lods
pop
push
adc
jae
mov
test
inc
rorb
pop
movsb
lock
mov
dec
xor
cmp
fs
pop
xchg
jae
leave
xchg
popf
dec
xchg
outsl
xchg
inc
inc
push
rclb
popa
jnp
cmpsb
jo
fidivs
rcr
fisubl
mov
jae
mov
add
in
lea
pop
cmpsl
ljmp
lea
cli
arpl
shlb
fstpl
sub
mov
jp
mulb
dec
push
add
bound
mov
xchg
inc
xor
into
enter
xor
mov
jae
mov
mulb
pusha
repz
das
push
fldl2e
push
mov
add
clc
push
sbb
add
lea
or
cltd
rcrb
xchg
jg
sbb
cwtl
sbb
inc
scas
movsl
pop
scas
sbb
movsl
cmp
xchg
jo
movsl
imul
mov
sbb
xchg
mov
sub
lods
pop
insl
add
push
mov
popa
rcrl
and
ds
sbb
cmp
into
js
scas
cmp
movsl
dec
int
in
add
repnz
pop
or
fs
inc
outsl
out
pusha
scas
push
jnp
xchg
lock
push
or
popw
fwait
je
xor
mov
stos
add
dec
fbld
sbb
xchg
repnz
aam
add
jno
dec
sahf
lds
cmp
test
insl
popa
sub
and
sti
dec
mov
ret
pmaxub
repz
out
in
cmpl
inc
dec
sub
sub
mov
mov
mov
jnp
pop
cmpsl
pop
adc
inc
sbb
std
aas
call
std
xchg
in
lcall
jae
jecxz
inc
mov
outsb
cmp
clc
or
jp
dec
mov
lock
sub
lods
incb
je
adc
adc
movsb
or
js
scas
int3
ret
jecxz
in
adc
mov
les
in
and
inc
sub
and
or
or
imul
sbb
xor
add
mov
cmp
adc
mov
out
mov
add
std
cltd
xchg
pop
es
hlt
fcmovbe
sub
les
test
out
dec
cmpsl
push
sbb
fwait
mov
jecxz
shrl
bound
xor
cwtl
movsb
andl
js
jl
push
leave
cmp
cmp
das
or
dec
xlat
jge
or
adcl
cmp
xchg
fistps
aaa
mov
pusha
outsl
xchg
and
mov
jmp
sbb
push
dec
outsl
xchg
mov
mov
outsl
inc
icebp
outsl
push
sub
ljmp
inc
xor
jle
and
mov
scas
push
and
sub
cmp
ret
jecxz
sub
leave
sbb
iret
xchg
ja
pop
movsl
mov
rep
inc
xlat
ja
add
stos
lods
pop
outsb
and
sub
in
jno
je
cli
sub
cmc
xchg
inc
aaa
cmpb
sbb
je
daa
xlat
icebp
xchg
out
push
inc
pusha
cmp
cmpsb
sub
push
loope
mov
mov
pusha
test
clc
int3
xor
rcl
and
mov
mov
int
mov
xor
in
addb
dec
and
xchg
iret
nop
cmp
movl
xchg
punpckhdq
in
fwait
lea
lods
fsubl
jb
add
or
ret
iret
mov
jno
mov
jbe
in
jb
arpl
lods
shr
repz
ja
fmull
or
mov
and
or
push
pop
aam
nop
jbe
cmc
call
push
adc
insl
fdivrs
aas
orl
jae
dec
and
pop
push
push
stc
jl
cmc
sbb
imul
sub
movsl
bswap
ljmp
sub
aam
add
and
pop
jmp
xor
push
mov
cmp
adcb
push
orl
mov
fidivrs
loope
sbb
leave
outsb
sbb
fmull
jno
xchg
pop
out
sub
loopne
movsl
dec
je
pop
bound
imulb
cmp
fs
xor
ret
cmp
pop
mov
addr16
out
imul
data16
mov
push
repnz
repnz
sti
sub
mov
add
cmp
inc
or
hlt
mov
mov
jge
or
ljmp
push
insl
cmpl
inc
movsb
fdiv
mov
inc
and
roll
daa
xchg
scas
push
adc
shrb
out
xor
dec
cld
or
add
cli
cmpsb
gs
aam
es
stc
ret
mov
cs
xchg
jo
mov
xchg
sbb
jl
sub
bound
sub
enter
xchg
pop
mov
dec
rcl
or
mov
pop
sub
cmpsl
jns
ds
cwtl
out
aam
mov
mov
aad
ja
add
scas
xor
cld
pop
out
in
adc
loop
pop
sbb
into
hlt
xchg
xlat
and
fldt
bnd
lock
divl
dec
or
xchg
call
and
inc
jmp
cmp
add
test
sub
adcl
cmp
mov
std
cmpb
in
orl
insb
sbb
mov
pop
dec
pop
ds
outsl
and
jmp
jno
push
dec
or
and
lods
addl
in
mov
jge
jns
push
arpl
add
or
scas
pop
sbb
mov
pop
dec
sbb
jecxz
xchg
or
dec
and
in
test
addr16
pusha
loopne
jbe
inc
out
mov
cs
stos
xor
mov
mov
xchg
add
sahf
xchg
enter
inc
test
stos
jmp
sbb
jl
in
mov
imul
out
push
js
xchg
repz
mov
pop
dec
imul
test
repnz
and
sarl
cmp
adc
jp
movsb
sbb
ret
mov
dec
test
mov
fs
sub
dec
nop
js
aaa
sbb
jno
mov
loop
ss
pop
jnp
mov
mov
xchg
or
push
subb
das
arpl
lcall
pop
jl
dec
lahf
pop
pop
push
lods
loopne
pop
fildl
cmpsl
mov
pop
icebp
jb
in
adc
xchg
jns
out
mov
filds
mov
rorb
lret
cmp
cmp
enter
adc
push
lock
inc
jno
outsl
loop
pop
out
mov
cld
jns
jg
pop
insb
jle
bound
fwait
push
ret
add
and
jl
or
das
cmpsb
scas
dec
movsl
pop
idivl
movswl
jne
and
shlb
xchg
lcall
out
mov
jae
sets
rolb
and
or
lret
inc
fadds
sub
jmp
pop
mov
lahf
out
test
aaa
out
mov
xchg
add
mov
xchg
pop
push
ja
jmp
sub
repnz
xor
fisubs
inc
shrb
push
in
and
jae
cmc
xchg
jno
mov
or
divl
jge
dec
out
stos
push
xchg
pop
jb
gs
repnz
push
loope
pusha
sub
mov
aas
mov
xor
hlt
fdivs
xchg
cmp
mov
test
push
lods
xor
mov
pusha
sbb
aad
mov
adc
iret
cmp
lods
inc
mov
xor
je
pop
dec
lea
sbb
popf
inc
cmpsb
inc
popa
out
stos
hlt
push
lods
stos
cmp
add
pop
xchg
mov
arpl
je
xchg
push
mov
push
push
push
shrl
mov
int
push
push
les
cli
mov
loopne
xchg
push
sbb
mov
dec
mov
push
das
add
jae
mov
sub
sbb
add
mov
in
push
adc
call
int3
imul
mov
xchg
aam
push
sbb
push
pop
hlt
mov
inc
push
pop
lods
sbb
test
sub
push
inc
hlt
fs
push
fmulp
fisubrl
mov
enter
jo
out
ficompl
adcl
jo
jge
dec
mov
dec
jecxz
scas
mov
es
push
int
cs
scas
out
push
dec
stos
adc
call
lahf
push
add
mov
repz
out
addr16
mov
lds
gs
xchg
scas
ret
jo
lock
stos
in
sbb
dec
push
fwait
add
jno
aad
ja
addr16
xchg
inc
push
mov
xor
or
or
enter
push
test
fs
mov
jno
mov
adc
arpl
mov
shrb
lret
sbb
ret
cwtl
mov
ljmp
iret
test
dec
mov
sahf
xor
call
dec
faddl
adc
jmp
mov
test
pop
ds
in
add
les
pop
gs
pop
lret
cmc
push
push
xlat
jge
call
dec
mov
add
sahf
stos
inc
xor
jp
push
xor
mov
test
test
enter
push
es
shrl
and
sub
arpl
in
xchg
fdivl
fwait
repz
mov
fwait
mov
mov
xor
fucomi
fwait
add
fwait
lds
repnz
mov
sub
addb
rcr
ds
cli
pop
or
dec
repz
jle
ret
call
jmp
cmp
enter
insb
mov
add
cmp
sub
in
stc
xchg
jge
stos
lahf
lret
cltd
xchg
or
xchg
flds
int3
cmp
mov
mov
adc
mov
call
lods
cmc
adc
rol
add
mov
pop
xchg
pop
icebp
ret
shl
and
sub
mov
mov
mov
rorl
fimuls
mov
lcall
mov
rorl
jnp,pt
imul
mov
mov
subb
sub
in
movsl
scas
imul
andb
loope
popa
xchg
out
jno
test
out
mov
sub
push
xchg
mov
jnp
into
or
pop
add
add
in
insl
enter
and
sub
mov
loop
sbb
mov
stos
hlt
inc
jle
push
add
or
mov
add
cmp
or
mov
or
dec
mov
and
mov
popa
jbe
dec
dec
call
fstps
dec
mov
dec
push
jmp
ljmp
mov
sub
mov
repz
mov
add
aam
int
and
pop
out
add
xchg
adc
lcall
pop
xor
loop
jge
mov
mov
mov
aad
cmp
adc
or
rorl
cmp
mov
shl
dec
inc
xor
cmp
lret
mov
pop
test
lds
and
jno
jnp
add
xchg
movl
aas
and
mov
lcall
loop
or
cld
ret
scas
les
push
stos
push
mov
inc
mov
in
call
or
sub
sub
out
or
or
adc
int3
mov
or
lods
outsb
xorl
mov
inc
dec
push
mov
jmp
push
push
push
add
in
cmp
das
idiv
adc
lahf
mov
fnstsw
dec
sahf
pop
push
adc
icebp
xor
popa
xor
xor
mov
imulb
jge
push
mov
dec
dec
or
cwtl
or
jns
int3
popa
fadd
cmpsl
inc
int
xlat
mov
rep
jp
push
pop
insl
call
dec
lret
dec
jne,pt
xor
hlt
hlt
inc
jge
xchg
mov
push
mov
lea
je
imul
mov
and
les
xchg
fisubrs
and
mov
jg
sub
aad
or
stos
inc
sbbb
fldenv
cs
dec
inc
js
aas
iret
jo
stc
sbb
jae
push
add
add
addl
pop
pushf
daa
cs
iret
jp
adc
repnz
enter
push
clc
or
mov
insb
pop
iret
ret
lea
sti
lds
or
cmovp
sub
clc
ja
pop
shrb
xor
jmp
sub
ja
mov
push
int
int3
into
mov
mov
sbb
push
push
ja
pop
sahf
jecxz
int3
pop
mov
arpl
inc
daa
xlat
and
lods
aam
mov
cmp
nop
xlat
push
jne
jno
mov
and
cwtl
rcrl
add
out
adcl
das
loopne
rclb
ja
in
mov
xor
cmp
mov
pop
enter
xchg
insb
sbb
xchg
fwait
rcll
in
xchg
push
lock
jp
adc
js
add
shlb
pop
dec
xor
adc
jle
mov
mov
std
mov
pop
insl
mov
les
movsb
pop
dec
add
push
push
jle
pop
popl
sub
mov
push
dec
stos
mov
test
mov
mov
pop
ss
stc
adc
aad
jmp
pop
jae
inc
stos
mov
inc
jmp
mov
sti
or
out
pusha
cmp
mov
push
in
addb
adc
xlat
das
arpl
es
nop
pop
add
or
or
bound
ja
dec
out
mov
sbb
test
adc
adc
jnp
sub
adc
dec
mov
sti
push
loop
xchg
leave
test
jecxz
andl
mov
sub
xchg
add
cmp
push
es
pusha
iret
shll
adc
outsb
xor
stos
movsl
mov
insl
rclb
cli
push
mov
int3
sarl
add
sti
sub
push
mov
call
jb
jge
daa
and
mov
xchg
xchg
icebp
fnstenv
dec
cmp
mov
cmp
loop
jns
bound
pop
sbb
jge
adc
iret
pop
inc
jns
cli
outsl
jnp
repz
lock
out
scas
mov
jmp
sbb
ss
inc
jnp
std
xor
mov
ja
inc
jno
adc
jne
ds
push
jne
rorl
xor
xor
popa
outsl
pop
push
cmp
mov
and
push
add
xchg
inc
mov
in
adc
insl
inc
ljmp
mov
sbb
lock
sbb
inc
loop
xchg
jge
jecxz
das
push
pop
push
inc
faddp
push
and
les
int
insb
mov
enter
scas
add
cmpl
inc
cmp
dec
jp
mov
push
mov
loop
fdivs
ds
idivb
pop
call
call
mov
seta
mov
jae
dec
jmp
insl
arpl
ds
cmpsb
rolb
pop
inc
cld
daa
sub
enter
repz
fcoms
cmpsb
dec
xchg
xor
push
and
popf
daa
sbb
adc
or
xor
mov
outsl
inc
xchg
jo
bnd
push
pop
hlt
divl
jecxz
xchg
cmpsl
mov
or
cmp
adc
dec
xchg
cwtl
mov
decb
sub
mov
adc
sbb
push
test
mov
daa
cltd
test
stc
jmp
inc
call
shll
rol
dec
in
adc
cld
popa
loop
mov
dec
fnstsw
add
cmp
pop
in
adc
pop
sti
jbe
push
sub
cltd
icebp
add
and
pop
scas
pop
pop
out
std
xchg
mov
jno
push
std
mov
popf
insl
cmp
sbb
lcall
pop
xchg
mov
mov
push
lea
out
adc
lods
popa
and
cli
pop
icebp
or
sub
pop
xor
sbb
into
push
sarb
xor
inc
bound
cwtl
pop
jnp
xchg
loope
adc
and
aaa
xor
pop
iret
daa
mov
fs
mov
jbe
mov
mov
jge
adc
add
dec
xor
lock
ljmp
push
int3
shl
mov
xlat
sbbl
fnstcw
xor
jo
lret
std
jg
dec
repz
mov
pop
sti
dec
icebp
in
int
pop
pop
je
or
add
or
lahf
adc
repz
call
mov
inc
fisttpl
data16
daa
lock
nop
mov
js
push
sti
popa
dec
push
popa
add
call
add
jmp
xlat
aaa
xlat
stc
sub
inc
ljmp
mov
cltd
addr16
xchg
add
cmp
decl
xor
xor
inc
pusha
xchg
xchg
iret
mov
fdivrs
mov
ret
push
stos
add
xor
stos
sub
or
aam
cmp
dec
inc
lea
adc
mov
adc
ret
or
aad
rcll
adc
cvtps2pi
xor
dec
mov
cmp
in
mov
in
lret
iret
rcrb
dec
cmpb
jno
loopne
inc
xchg
and
mov
sbb
or
hlt
mov
lcall
out
fisttpl
test
inc
or
cmp
pop
lahf
movsb
fsubs
push
jecxz
ljmp
sbb
add
mov
ftst
orb
inc
cwtl
lods
xchg
cmp
push
inc
inc
cli
pop
xchg
test
sub
lock
mov
sbb
mov
push
iret
cmp
xchg
fldenv
mov
decb
mov
or
adc
push
pop
int3
and
cltd
out
lods
das
sbb
out
incl
pushf
test
sbb
or
cmc
call
cltd
inc
icebp
aas
push
and
hlt
subl
das
mov
xchg
pusha
push
push
add
aas
fsubl
push
imul
cli
dec
adc
mov
push
xor
add
and
mov
mov
cmpsl
xchg
push
hlt
mov
xor
lods
fsubrs
data16
fcoml
nop
stos
pop
or
js
or
xor
push
in
lret
xor
sbb
leave
mov
jae
ret
notl
cmp
popf
jp
stos
out
jle
dec
sbb
cs
jae
pushf
inc
out
jmp
add
das
dec
nop
xlat
pop
flds
addr16
add
push
sub
add
test
inc
vpaddsw
aam
sbb
fwait
cli
adc
test
xchg
mov
and
cmp
jge
mov
adc
rdpmc
lods
add
push
xchg
cmp
mov
xchg
dec
cmp
fwait
mov
sub
push
xchg
mov
insb
mov
cmp
shll
enter
imul
lds
ja
xor
in
lds
es
xchg
inc
ficompl
mov
pop
push
xor
and
out
mov
dec
pop
out
gs
mov
xchg
sub
vmovlps
repnz
push
imul
inc
cltd
fldt
test
popf
sti
jle
push
lret
ljmp
insl
push
sub
jae
xchg
js
push
and
sub
aaa
stos
insb
cmp
sbb
fwait
loope
test
and
rolb
dec
or
adc
mov
lahf
xor
mov
xchg
and
fstpt
jp
or
es
mov
out
repnz
fistpl
test
nop
cmp
ljmp
bound
imul
sub
dec
mov
lods
adc
inc
out
mov
sbb
enter
addl
loopne
pop
jae
cmpsl
jno
clc
sub
mov
inc
or
jne
sbb
sub
loop
xchg
ss
xchg
mov
pop
dec
push
cmp
shl
frstor
xchg
bnd
daa
into
xlat
add
outsl
and
in
jne
push
push
sbb
shrl
mov
mov
ds
add
fcomp
push
dec
jp
mov
cmp
in
and
mov
fnstsw
popf
cltd
cmc
ret
or
jb
stc
lret
hlt
and
std
push
sbb
lea
adc
push
and
repz
das
mov
jns
rclb
push
movl
scas
sahf
lock
imul
and
mov
aam
xor
sbb
test
push
xchg
xor
mov
cli
push
lret
add
dec
cmpl
les
and
add
in
pop
aad
rcrb
inc
jne
cmpsb
ss
or
mov
push
in
aas
orb
jl
push
xchg
mov
adc
faddl
sarl
add
das
pop
jg
je
fstpt
cli
dec
jno
rolb
outsb
jne
cltd
and
sbb
mov
sub
jno
mov
hlt
dec
xor
xor
test
rorb
mov
cmc
or
fiaddl
leave
out
jp
aas
stos
jae
scas
roll
faddl
movsb
in
inc
mov
mov
pop
ror
addr16
mov
xor
dec
rorl
jno
inc
stos
dec
daa
arpl
cmp
psraw
dec
int
sbb
or
and
mov
mov
sahf
xor
insb
les
sbb
loop
add
out
out
mov
fs
dec
repnz
cmp
roll
repnz
adc
aad
scas
pop
out
imulb
mov
or
push
and
stos
shlb
xor
sbb
cld
ret
pop
cmp
test
mov
inc
shrl
dec
lret
adc
stc
or
mov
rclb
push
inc
fiaddl
push
ficompl
into
jbe
ret
pop
outsb
rcl
cmpsb
mov
inc
pop
mov
mov
mov
es
inc
popa
mov
sub
in
jge
or
mov
insb
stos
popf
stc
cmp
cmpl
pushf
leave
gs
push
jnp
cmp
cmp
outsl
mov
jns
pushf
popa
popa
jae
sahf
pop
rorb
sub
mov
inc
cmpl
leave
cld
mov
rcll
fdivs
decl
loope
iret
push
shrb
scas
mov
jno
push
stos
lock
sub
xor
fcompl
insl
addr16
loopne
cltd
test
mov
ss
cmp
sub
inc
dec
lods
popa
les
stos
jle
scas
pop
aam
push
out
xor
xchg
sbb
inc
sub
aas
mov
out
mov
dec
dec
pusha
lods
out
push
aad
fxch
mov
out
push
cwtl
dec
inc
pop
mov
xchg
movsl
lea
shl
mov
cs
pop
hlt
scas
lds
nop
add
icebp
dec
nop
xchg
sbb
mov
shl
pop
dec
pop
mov
test
lcall
loop
in
nop
push
or
pop
scas
add
sub
out
add
out
adc
add
mov
dec
mov
int3
inc
cmp
sub
dec
cmp
push
adc
mov
lock
aad
mov
je
nop
hlt
daa
jb
sbb
push
jmp
pusha
scas
sub
popa
popf
in
rorb
movsb
dec
imulb
lahf
gs
pandn
sub
call
pop
loope
mov
push
mov
adc
call
mov
stc
in
jg
lods
mov
add
mov
sbb
or
inc
out
fwait
int
imul
inc
fsubl
push
sbb
mov
orb
inc
xchg
mov
arpl
cmp
fisubl
fnstenv
dec
icebp
pop
in
push
xchg
xchg
push
mov
ss
and
mov
jns
inc
mov
sub
pop
pop
outsl
sahf
pop
cmc
les
rolb
int3
mov
sbb
mov
lds
scas
fucomp
scas
sbb
cld
or
pop
fiaddl
fdivl
jle
jmp
cmpsb
add
data16
push
pop
cmp
into
insb
test
test
dec
cmp
sbb
out
fs
lock
xchg
or
aas
mov
sbb
or
fidivrs
pop
out
pop
in
pop
lock
cmpsl
aam
xchg
sbb
lods
xor
insl
inc
sti
push
pusha
push
add
stos
add
xchg
pop
mov
xchg
and
add
fidivl
lcall
mov
test
arpl
xlat
xchg
xchg
mov
ds
les
lods
push
out
push
popa
sti
daa
enter
push
mov
popa
aaa
cmp
arpl
adc
divb
jb
stos
pop
or
fsubl
push
or
xchg
repnz
ds
mov
cmc
addr16
pop
cmpsl
sar
test
mov
fstpl
lret
popf
push
lock
or
pusha
jae
adc
lods
sbb
dec
jb
cmp
and
lods
xchg
pushf
pop
test
push
mov
xchg
iret
jecxz
mov
movsl
or
out
xorb
inc
je
mov
fistpl
or
add
xchg
sbb
mov
movsl
pop
dec
scas
outsb
mov
imul
xchg
lds
mov
comiss
das
jge
sbb
test
xchg
mov
pop
pop
das
daa
dec
fsubrs
inc
aas
adc
mov
fs
mov
pop
int3
lods
sbb
mov
inc
mov
add
jle
mov
jno
in
out
stos
sarl
dec
das
mov
jmp
add
int3
mov
dec
lods
dec
inc
and
mov
push
mov
jb
push
addr16
xchg
adc
jae
call
repnz
add
shl
fcomps
popf
out
mov
pop
ljmp
and
daa
stc
push
jge
mov
or
mov
shll
add
fdivp
pop
imul
loopne
call
shlb
or
arpl
repz
icebp
and
cmpl
mov
ret
mov
mov
scas
shl
jbe
jmp
add
jg
movsl
adc
xor
mov
lahf
fs
insl
jp
inc
mov
mov
sbb
out
repz
pop
daa
xor
mov
scas
cmp
xchg
aad
fwait
xchg
out
aad
out
jmp
js
or
sub
and
add
dec
inc
xchg
push
lods
sub
xchg
jg
aam
nop
scas
das
mov
pusha
xchg
ficomps
pop
mov
ja
shlb
fs
imul
dec
mov
adc
mov
xor
inc
cmp
int
lret
jmp
push
cmp
jno
mov
lea
push
sub
ret
mov
out
push
enter
fisubl
imul
push
and
fwait
mov
mov
jp
loopne
cltd
sbb
sahf
mov
cmc
mov
popf
repnz
and
mov
iret
fisttpl
rcl
hlt
or
dec
mov
mov
push
mov
push
jge
cli
push
pop
stos
xor
and
das
fisttpll
dec
sub
jmp
xor
pop
pop
call
pop
dec
ss
mov
outsb
aas
pop
fdivr
sbb
sbb
pop
or
shrb
push
outsl
jno
ficoml
addr16
push
shll
inc
cld
testl
sbb
and
inc
push
mov
test
sbb
iret
or
fdivrs
and
cmp
or
and
loopne
lcall
sahf
push
dec
sbbl
sbb
dec
cs
not
adc
push
push
outsb
testb
test
jmp
pop
mov
fwait
inc
nop
hlt
cmp
out
sbb
pop
jnp
push
int
shr
ja
fstpl
mov
pop
out
jl
jne
or
and
and
or
jb
test
test
test
xlat
adc
std
xchg
insb
es
mov
lret
cmp
push
jbe
xchg
sub
push
sbb
insl
and
or
cmp
push
inc
es
stc
sub
scas
rolb
xlat
xor
xchg
sbb
mov
and
aam
shrl
popf
in
clc
xor
fldt
stc
cmp
inc
jo
push
divl
jbe
mov
xchg
add
dec
and
les
lods
sub
cs
jb
mov
cmp
dec
mov
movsl
xchg
stos
mov
pop
inc
push
push
xchg
decb
and
cmpsl
dec
rolb
aaa
or
je
or
sbb
lods
cwtl
ja
mov
arpl
fmuls
data16
push
push
fcom
dec
cmp
sarl
sub
jecxz
mov
pop
sub
in
push
ficoms
xchg
cli
pop
and
lods
and
mov
inc
pop
aas
jne
jg
and
mov
xor
pop
mov
push
pop
ds
adc
dec
push
imul
sbb
add
imul
inc
icebp
jnp
jbe
jne
in
mov
sbb
mov
jl
dec
stos
jns
fwait
cmpsl
lret
xchg
outsl
fcomps
push
outsl
mov
lret
mov
loop
data16
sti
call
cwtl
push
pop
das
fimuls
or
xchg
push
outsb
dec
cmpsw
mov
call
iret
or
rcrl
xchg
stos
cltd
jl
cmp
inc
lds
push
ds
push
lds
mov
aaa
int3
sub
aas
cltd
push
call
pop
dec
in
lods
push
jbe
gs
sub
xor
inc
mov
test
out
pop
mov
or
fwait
setb
xchg
cmp
sbb
mov
jns
add
scas
aas
adc
test
lahf
std
mov
pop
push
lcall
pop
mov
popa
scas
scas
push
push
or
outsl
xor
or
sub
sub
mov
xor
stc
lea
insl
nop
clc
ret
cltd
and
ds
cli
xlat
dec
xchg
fs
mov
mov
jbe
jl
sbb
insb
cmp
iret
jmp
ficompl
sub
xchg
cmpb
bound
dec
inc
cwtl
cmpsb
mov
adc
dec
fwait
mov
test
mov
sub
mov
aaa
pop
and
inc
mov
push
xchg
and
in
mov
fs
jl
rcr
jge
rorb
push
in
mov
xchg
sahf
mov
loopne
and
imul
fdivs
xchg
mov
xchg
pop
daa
sahf
aad
sbb
and
push
pop
rclb
push
xchg
or
cmp
xchg
jne
mov
pop
mov
add
loope
ja
mov
ja
dec
icebp
xchg
test
mov
sahf
in
rcrb
add
push
cmp
in
pop
cmp
xchg
jecxz
sahf
test
dec
in
jl
adc
push
xchg
dec
imul
dec
nop
notb
mov
popl
lcall
shll
xchg
inc
inc
clc
fimuls
sub
pop
add
leave
push
mov
aaa
insb
pushf
add
pop
in
push
mov
lea
loop
cmp
cmpsl
jl
rcll
test
sub
lods
gs
xor
mov
sti
into
fnstcw
stos
mov
cmpsb
int3
pop
inc
pop
pop
mov
add
mov
es
shll
popf
popa
jno
stos
add
xor
pop
aas
push
pop
and
add
inc
add
xor
mov
sbb
aam
sahf
mov
dec
and
ficomps
add
ds
mov
inc
stc
xchg
imul
aas
jg
push
lahf
xor
xchg
in
cmp
cmpsb
fucomi
and
mov
push
jae
roll
cmp
push
stos
and
jnp
xor
and
fcomp
mov
bound
pop
inc
jns
sbb
into
cmpsb
popa
js
gs
jmp
aam
subl
mov
push
mov
fs
shlb
or
xor
stos
mov
push
iret
mov
cwtl
cmp
aam
js
push
lods
jle
cmp
mov
loop
add
push
push
push
insl
xor
inc
jge
loopne
mov
popf
gs
and
or
imul
int3
xchg
push
push
or
sub
lcall
lret
adc
psubw
movsb
inc
xlat
subb
rclb
enter
mov
push
aad
dec
or
mov
test
ret
push
jno
daa
icebp
mov
and
cs
dec
shll
pop
iret
gs
cmp
sbb
popa
mov
sbb
sub
jmp
xchg
loop
mov
xchg
xor
jecxz
push
cmp
dec
pop
xor
or
cltd
mov
pop
bound
cmpsb
mov
xchg
outsb
ds
mov
je
pop
mov
and
cmpb
loopne
push
aas
mov
dec
sub
aam
arpl
js
add
inc
fstps
daa
mov
pop
mov
inc
mov
sbb
imul
mov
fsincos
rclb
aad
mov
popa
inc
lret
xchg
ret
addr16
push
or
mov
mov
stos
and
mov
inc
adc
xor
jno
sar
and
mov
xchg
push
scas
lds
adc
and
lea
jp
xchg
jns
adc
aam
cltd
pop
int
pop
mov
xchg
xchg
movsb
cwtl
rorl
jns
std
loope
push
mov
dec
enter
jno
xchg
movsb
mov
dec
mov
lock
mull
inc
cmp
xchg
dec
ss
jae
add
mov
std
sbb
ljmp
in
adc
mov
sete
test
stc
pusha
iret
push
jae
add
scas
fs
sub
inc
push
cmp
pop
mov
dec
sarb
dec
pusha
cmpsb
sbbl
bound
outsb
push
and
rcll
mov
xchg
inc
xchg
push
mov
imul
out
dec
in
call
jmp
cmpsb
adc
mov
dec
fldl
fucompp
add
jp
mov
pop
sti
loop
mov
test
into
xchg
call
dec
push
inc
dec
pushf
lret
ja
cmp
jl
fs
arpl
xor
aaa
popl
and
loope
inc
rcl
jl
aam
enter
cld
mov
xor
mov
pop
push
ljmp
pop
iret
pop
pusha
cmp
shll
pop
pop
cltd
lret
pop
sti
test
push
adc
jne
nop
iret
lahf
add
sbb
filds
sahf
test
xchg
xchg
or
sub
jmp
fcoml
xorl
xchg
lods
mov
filds
mov
lods
jl
loop
pop
gs
cmc
mov
adc
pop
mov
ret
ficoms
hlt
add
int
inc
cmp
sbb
sub
or
push
scas
sahf
mov
add
es
push
sahf
test
stc
fcmovnbe
mov
scas
loope
test
sbb
mov
ret
add
xchg
je
stos
and
out
roll
mov
and
ljmp
dec
arpl
shrb
sub
ret
jp
stos
das
sub
add
dec
mov
mov
fsubl
negb
shrl
inc
push
mov
mov
cmc
lods
in
mov
hlt
nop
aaa
mov
push
int3
xlat
fidivrl
cwtl
push
lret
pop
pop
int
outsl
add
cld
and
push
cmpsl
ds
sub
aas
mov
in
in
scas
mov
dec
pop
xchg
or
xchg
jge
lea
jecxz
js
jg
lock
fistl
scas
xor
inc
jb
incb
jmp
xchg
outsb
test
call
push
pop
dec
adc
push
fisttpl
ficomps
mov
jns
mov
xchg
cmp
cli
insb
jnp
mov
gs
iret
popf
jns
ret
neg
rcll
push
cmp
add
fidivl
out
or
dec
pop
push
movlps
push
adc
push
jle
sahf
inc
adc
sub
xor
mov
inc
aas
and
lret
mov
pop
arpl
add
mov
sub
pop
out
inc
sub
stos
incl
cmp
and
or
lds
cmpsb
ljmp
sub
bound
pop
push
lcall
mov
pushf
je
lret
or
mov
testl
ja
popf
jl
inc
out
int3
out
sar
mov
add
push
sub
cmp
out
inc
hlt
cld
push
aam
mov
inc
inc
mov
cmp
xlat
nop
sar
and
add
sti
xchg
frstor
jne
outsl
or
ljmp
loopne
jns
inc
fmul
pop
in
xor
cmp
jl
push
xlat
mov
arpl
cmpsb
stos
sub
jle
xchg
lcall
pop
mov
stos
loopne
pop
xchg
nop
fwait
or
or
fs
icebp
aaa
mov
cmp
sbb
movsb
lods
xchg
mov
js
loop
xor
mov
aad
mov
adc
jge
or
adc
ds
testb
inc
scas
add
push
fdivs
cmp
push
adc
cmpsb
xor
out
pop
adc
inc
push
push
add
test
stc
popf
sbbl
xchg
push
aaa
dec
ffree
and
jmp
sub
pusha
adcb
rcrb
mov
jmp
dec
xchg
fldt
mov
dec
int
int
ss
adc
mov
rcl
xchg
xor
dec
test
dec
hlt
xchg
push
sbb
fisttpl
push
ja
sub
push
jp
mov
dec
cmp
push
sub
ficoml
add
mov
out
push
adc
mov
mov
imul
xor
or
cmp
sbb
sarl
pop
cmp
push
lds
lods
pop
les
and
jbe
insb
je
xor
shlb
and
sbbl
je
push
das
xchg
jp
and
jb
add
inc
dec
cwtl
cmp
aam
xchg
adc
cmp
in
ret
loopne
mov
dec
sub
insb
inc
loopne
xlat
clc
mov
mov
je
shr
adc
arpl
cmp
lods
mov
inc
std
jp
sub
mov
cmp
push
sub
divb
shr
sub
pop
scas
xchg
add
jno
pusha
and
push
xor
fildll
cltd
cwtl
mov
and
lcall
cmc
stc
bound
call
dec
mov
mov
mov
lret
adc
jns
and
mov
jno
jb
gs
cltd
icebp
fs
mov
arpl
xor
cmc
jp
adc
add
repz
mov
xchg
jae
arpl
xorb
mov
push
orl
adc
pop
clc
cmp
push
xchg
dec
movsl
sub
xchg
mov
xchg
daa
pop
sub
push
fldcw
les
add
sbb
subl
adc
sub
stos
xchg
mulb
cmpsb
mov
pop
in
ret
jbe
bound
push
fwait
pop
clc
pop
and
fdivs
or
mov
popa
mov
pop
clc
or
lahf
les
lds
xchg
xor
stos
mov
pop
xchg
insb
inc
jne
and
in
add
sbb
je
mov
sbb
mov
mov
pusha
inc
inc
scas
call
pop
inc
mov
fstpl
int
repz
or
sbbb
sahf
inc
rcll
lds
lock
xchg
mov
test
mov
lds
aaa
jmp
into
fwait
in
adc
jle
sub
loop
jg
dec
lds
popa
jbe
shlb
test
in
adc
shl
push
cwtl
fadds
or
jmp
sbb
outsb
sbb
mov
inc
xor
sub
inc
cmp
mov
inc
mov
adc
dec
fdivrs
movsb
add
cmpsl
cmp
fsubrs
cmp
rorb
or
in
pop
inc
ljmp
xchg
inc
xchg
xor
pop
xlat
shll
xor
cwtl
cld
pop
sahf
xchg
les
test
xchg
lds
in
cmpsl
adc
js
int3
mov
push
sbb
stos
shll
outsl
mov
mov
mov
push
fwait
add
movl
mov
inc
jp
lahf
ret
cmp
mov
mov
push
pop
das
divb
inc
and
mov
ljmp
pop
push
or
into
bound
stos
sbb
jmp
and
xchg
pop
inc
ljmp
adc
das
and
add
outsl
add
ljmp
or
sub
adc
popa
sti
xor
in
mov
adc
cld
inc
pop
adc
and
mov
mov
loop
jmp
xchg
push
nop
or
inc
pop
ja
pop
and
out
xor
idivb
jns
dec
das
adc
jb
fs
xor
push
ja
and
ja
stos
movsb
cmp
mov
mov
push
and
cmp
xor
jns
addb
jp
lea
sbb
cli
cmp
dec
add
jle
mov
lret
fdivrs
repz
movsb
loopne
rorl
dec
mov
aam
lahf
jge
cltd
sbb
cltd
sub
testl
pop
out
and
xor
push
stc
popf
ja
pop
jne
sub
mov
pop
popa
je
xor
mov
inc
ja
jns
mov
mov
and
icebp
add
lahf
pushf
add
cmc
xchg
loope
repz
ljmp
push
push
push
dec
mov
in
and
outsb
sbb
pop
cmp
push
popf
popf
sbb
pusha
and
int
jecxz
dec
pop
xchg
adc
repz
aad
sbb
pop
jge
data16
es
aas
sbb
lods
out
xchg
pushf
sub
lods
les
pop
scas
cmp
iret
xlat
rorb
mov
push
or
icebp
jp
sbb
and
sbb
sbb
jecxz
sub
sbb
add
inc
xor
or
stc
frstor
popf
mov
jge
jns
add
or
add
add
inc
bound
std
xchg
js
jle
popa
pop
std
xor
jmp
cmpsl
aad
push
inc
rcrl
push
mov
pop
jns
outsl
stc
xchg
imull
fisubl
aas
pop
leave
cmpb
test
xchg
add
xchg
pop
add
out
rcl
rcrl
sbb
sbb
cltd
nop
dec
dec
sub
sarl
jae
xchg
cmp
fbstp
ljmp
adc
adc
sahf
cwtl
and
rorb
ret
jae
pop
push
cmp
mov
ja
ficomps
inc
mov
xchg
push
mov
push
jl
test
mov
mov
xchg
jbe
pop
filds
mov
jae
cli
xchg
mov
popa
xrelease
loop
mov
xor
ja
movsl
sbb
push
subb
ret
cltd
leave
or
bound
inc
xchg
inc
pop
enter
out
jle
pop
sbb
jno
pop
xchg
or
nop
cmp
das
cwtl
dec
jecxz
mov
in
sti
sub
sub
add
jp
arpl
mov
xchg
jb
ret
dec
pushw
imul
push
cltd
stc
inc
cmp
test
xchg
and
inc
pop
scas
stc
std
mov
pop
pushf
lds
push
inc
into
jbe
push
pop
xor
cwtl
jo
lcall
add
pop
sub
mov
dec
pop
adc
into
cmp
in
popa
insb
cmp
sbb
outsb
add
scas
xlat
insb
push
call
or
addr16
xor
mov
pushf
outsb
jp
inc
xor
int3
cli
ret
jecxz
pop
inc
das
andb
add
xor
sbb
mov
jge
mov
sub
clc
scas
mov
pslld
sub
jmp
xor
stos
std
lock
add
pop
cmp
jbe
xorl
sub
lcall
insb
xchg
lahf
fs
in
push
cmp
stc
cwtl
adc
into
jge
mov
test
pop
lea
or
mov
dec
cmpb
mov
sarl
jg
cmp
mov
or
xchg
cld
sbb
inc
rcll
insl
mov
jno
jp
bound
jne
fdivr
sti
and
cmp
lea
mov
lret
or
adc
mov
or
cli
dec
lcall
rorl
lret
rclb
test
inc
mov
sbb
fwait
sbb
xlat
sbbl
jb
icebp
call
ror
rorb
dec
push
xchg
cmp
mov
jge
sbb
ret
adc
and
idivl
les
fstpt
jno
add
inc
xor
cmpsl
mov
push
pop
mov
test
sahf
arpl
xchg
push
ljmp
rcll
aad
push
and
push
les
push
aas
push
hlt
mov
fwait
xchg
cmpsb
dec
mov
push
xchg
inc
xor
jge
bound
scas
shrb
and
sarl
cmp
stos
push
call
add
push
movlps
jp
xchg
mov
es
pusha
or
or
pop
mov
jb
mov
aaa
push
orl
out
lea
fnstenv
icebp
fadd
js
mov
movsl
test
sbb
dec
mov
in
add
nop
mov
inc
or
std
dec
in
scas
xchg
dec
and
adc
in
les
clc
inc
aad
pusha
add
das
loopne
adc
inc
neg
and
jp
push
mov
clc
test
or
pop
push
ret
cmp
push
loope
pop
outsb
and
pop
sbb
cmpsb
das
in
mov
add
mov
push
nop
aam
cltd
add
pop
lock
bnd
jae
ljmp
and
inc
gs
fcomip
outsb
hlt
jg
das
inc
clc
push
loop
sti
adc
fistpl
ljmp
fists
and
inc
xchg
arpl
xchg
test
ss
test
adc
fdivrs
mov
repz
aad
cmp
es
inc
call
xor
std
je
push
outsb
stos
jbe
jo
xor
pop
jne
fs
lret
push
jle
mov
movsb
xlat
xor
jae
nop
and
shlb
das
sub
dec
arpl
out
mov
sarb
js
adc
repz
mov
data16
push
xor
push
test
inc
sbb
in
mov
or
ret
add
lds
mov
push
adcb
mov
es
or
jnp
int3
dec
dec
ret
arpl
idiv
es
lcall
popf
cmp
mov
into
mul
jb
daa
hlt
stos
xchg
std
daa
aad
mov
popf
adc
sbb
data16
push
daa
pop
lcall
dec
add
jg
and
cmpl
sub
ja
push
rorb
inc
jmp
js
xchg
nop
add
ljmp
and
int3
push
mov
pop
add
mov
popa
xchg
pop
pop
outsl
sub
mov
xchg
xor
test
mov
out
inc
add
and
pop
lret
xchg
push
push
lods
lods
test
xchg
shrb
movsb
ds
push
fstps
xchg
jecxz
imul
adc
loope
push
cmpsb
icebp
out
pop
orb
inc
fildll
popa
cmpb
mov
pop
or
subl
jl
icebp
xchg
pusha
jae
sub
and
and
sub
stos
in
insl
cs
mov
xlat
cs
cmp
into
xchg
push
fbld
daa
jne
dec
push
mov
lods
pop
jmp
icebp
or
call
and
in
push
jno
or
pop
aam
mov
repz
adc
orl
arpl
xchg
shll
add
jmp
push
xchg
stos
xorb
imul
cmp
pop
mov
daa
or
dec
inc
and
stc
mov
loop
iret
xor
lods
sub
shlb
ja
xlat
inc
dec
in
dec
push
push
fadds
in
daa
ret
je
mov
sub
and
push
mov
fsubl
out
arpl
inc
aam
add
scas
hlt
mov
push
imul
jne
jne
jle
push
stos
mov
divb
push
or
pop
mov
in
shlb
mov
and
xchg
sbb
ljmp
dec
inc
dec
cmpb
aam
mov
push
int
cltd
imul
sbb
mov
aas
das
pusha
loopne
or
imul
ret
mov
or
jp
mov
fsubrl
mov
adc
sub
fistpl
inc
or
lret
add
pop
sub
add
cmc
pusha
and
mov
xor
in
into
imul
and
pop
popa
out
xchg
stc
rol
icebp
rclb
and
cmp
jecxz
mov
dec
xorb
test
stc
cmc
js
add
mov
scas
imul
mov
lcall
cmp
shll
xor
push
lds
paddusb
ljmp
aaa
mov
js
gs
adc
dec
fnstenv
loop
add
or
jno
addr16
jecxz
mov
stos
xchg
mov
mov
imul
pop
or
into
enter
movsl
inc
dec
xor
mov
orb
aaa
imul
dec
js
mov
mov
ljmp
test
mov
mov
jl
xchg
push
sahf
cmpsl
jl
add
pop
pop
rclb
xchg
mov
inc
loope
cmc
xchg
mov
stos
xor
jo
stos
adc
push
jns
mov
neg
cmp
fadds
jge
jmp
xor
sbb
jbe
dec
jp
ds
fstpl
nop
xchg
ss
dec
shrb
xor
sbb
sbb
in
push
sbb
jns
rcrl
cmp
cld
movsl
xchg
adc
fcoms
adc
into
inc
sbb
aas
mov
sbb
mov
aad
ss
push
fs
int3
fadds
filds
imul
mov
pop
ret
pusha
xchg
andl
fisttpl
test
scas
lret
push
cmp
xor
into
scas
xor
sbb
aas
mov
mov
lret
scas
cli
les
mov
add
lds
sbb
cmp
mov
xchg
mov
lods
dec
adc
inc
sbb
call
xlat
xor
or
clc
adc
jb
dec
adc
and
lock
aas
mov
sbb
xor
rcll
adcl
rorb
mov
jne
or
xchg
in
js
add
nop
cs
xor
mov
mov
cmp
test
mov
pop
cmp
lods
jge
push
mov
add
sub
xchg
sbb
bound
sub
pop
mov
ret
decl
div
pop
inc
insb
ljmp
inc
clc
mov
into
in
test
xchg
or
push
divb
pop
push
cwtl
stos
jmp
jp
daa
xchg
je
dec
mov
inc
std
outsl
jo
fidivrs
insl
out
dec
lret
clc
inc
fsubrl
fisubrs
int3
jbe
or
shrb
dec
or
mov
nop
lods
mov
jne
loopne
xchg
mov
mov
adc
mov
stc
cs
int3
xchg
mov
push
stos
imul
mov
dec
jp
aas
sbb
cltd
sarl
nop
xor
std
sbbl
add
mov
jmp
cmp
jnp
xor
or
cmp
mov
push
int3
pop
ret
aad
adc
fistpl
lea
mov
ss
icebp
or
sbb
and
clc
jo
lods
dec
inc
jl
push
movsl
stos
lahf
mov
dec
inc
fdiv
mov
fdivs
xor
xchg
and
cmp
mov
sarl
mov
mov
mov
test
jmp
or
adc
adc
pushf
push
mov
mov
mov
pop
fdiv
rorb
pushf
addb
and
loope
jge
inc
std
les
jmp
daa
sbb
cld
mov
ret
ss
fistpl
mov
pushf
imul
daa
movl
int
pop
inc
sub
xchg
in
jne
mov
fcomps
adc
sbbl
adcl
call
mov
ljmp
add
hlt
jmp
sbb
fsubl
pop
in
xchg
nop
push
shrl
fstpt
in
cmp
int
mov
enter
xor
cs
sub
out
adc
in
iret
das
out
jmp
mov
outsl
dec
cmpsl
add
sahf
pushf
movsb
sti
je
cltd
cs
adc
and
xchg
push
pop
es
inc
sti
dec
fsts
pop
hlt
cmp
xchg
sbb
testb
call
ja
xor
mov
sbb
jne
sarb
xchg
mov
xchg
repnz
push
push
fists
jno
call
mov
cmp
fildll
movsb
pop
cld
dec
mov
lea
xor
addr16
int
inc
outsl
out
orl
in
push
xchg
popf
cmc
movsl
fwait
scas
xabort
cmpsl
ror
sti
js
in
sub
bound
out
push
sbb
pop
xor
sub
xor
dec
dec
cmp
mov
mov
repz
dec
cmp
jno
leave
insl
cmp
pusha
sbb
dec
call
cld
mov
out
stc
aad
cmp
int
pop
stos
inc
mov
adc
ffreep
mov
adc
mov
cmp
aaa
lods
enter
xor
mov
dec
lds
imul
js
pop
in
xlat
out
push
cmpsb
mov
pop
loope
add
popf
pop
divb
mov
cmp
push
pop
insl
and
mov
dec
dec
out
push
pop
add
inc
subb
sbb
mov
adcl
inc
mov
xchg
push
ss
mov
dec
mov
outsl
pop
sbb
fcompl
jo
jae
add
arpl
push
adc
push
cld
lods
loop
or
push
mov
mov
aad
mov
repz
call
pushf
lods
mov
mov
out
icebp
xchg
jbe
leave
or
pop
inc
or
cld
fstpt
nop
jg
cwtl
push
rolb
sbb
sbb
jle
add
pop
jne
lahf
jb
movsb
insl
test
imull
fwait
mulb
pop
imul
push
pop
fistl
sub
xchg
leave
out
xor
call
cmp
out
lods
test
xchg
mov
out
push
inc
iret
and
xor
pusha
cli
cmc
dec
notb
hlt
aas
mov
or
push
ret
add
ds
xchg
and
xchg
movl
call
mov
jge
jmp
out
xor
dec
sub
add
sbb
ds
addb
dec
cli
inc
lahf
push
neg
or
jnp
fdivrl
sub
movsl
fldenv
mov
aad
leave
iret
fldl
or
das
mov
sbb
icebp
mov
rcrl
sub
cmp
mov
in
cmp
or
sarb
jmp
jl
xchg
aad
inc
sahf
mov
sahf
mov
stos
lea
mov
sbb
jl
ja
xchg
dec
cli
pop
jbe
cli
aaa
dec
xor
call
fsubr
bt
mov
cmp
xchg
cmp
in
data16
mov
add
sti
jb
jle
jmp
mov
add
outsl
jns
mov
adc
push
fisttps
out
or
ret
adc
les
and
xor
sahf
dec
inc
and
inc
xor
cmp
xor
xor
pop
popa
movsb
fldenv
ss
sbb
sbb
jb
cmc
xor
dec
rclb
push
cmp
push
lret
mov
addr16
out
pusha
jns
push
incb
mov
rcrl
mov
movsb
test
inc
inc
add
jmpw
push
add
xlat
push
sbb
and
or
adc
adcl
pop
popf
jne
popa
inc
popa
lret
xchg
pop
pop
push
fsts
imul
data16
add
test
jno
push
sti
dec
loope
in
out
sbbb
dec
push
push
out
mov
push
add
daa
ret
in
add
ds
pop
cmovb
loopne
push
jecxz
popf
add
lds
adc
sbbb
jl
lods
xchg
stos
mov
notl
cmpl
fcomps
and
cld
mov
out
testb
or
lods
ja
adc
inc
leave
test
in
xchg
push
sbb
inc
inc
enter
jae
inc
xchg
mov
and
sahf
mov
fldcw
mov
sarb
pop
add
ja
xlat
cmp
sub
push
mov
mov
mov
lods
orb
js
rorl
int
outsl
clc
and
repnz
movsl
or
xchg
lods
into
mov
outsl
ret
mov
movsb
std
outsl
push
shrb
xlat
mov
out
cltd
jns
adc
out
pusha
push
dec
sub
out
out
fbld
movsb
adcl
adc
mov
arpl
inc
ss
mov
int
es
and
mov
loop
pop
adc
push
cmpb
xchg
inc
fldt
scas
in
mov
sbb
xchg
jmp
mov
push
adc
sbb
push
inc
sub
fidivrs
mov
and
jb
lods
mov
dec
loope
jno
or
movsb
or
ss
fists
or
fcoml
hlt
daa
les
and
fwait
jnp
add
arpl
dec
adcl
cmpsb
mov
or
enter
and
js
incb
mov
jg
js
btc
pop
mov
ret
add
mov
es
enter
xchg
sbb
mov
rcr
sarb
cmp
push
push
lahf
mov
orl
mov
or
loopne
daa
cli
sti
cmc
and
loopne
lea
insl
inc
mov
cmc
cmp
pop
cmpsb
pop
lret
push
ljmp
lds
movsl
int3
test
dec
dec
test
inc
into
push
addr16
adc
repnz
mov
or
cmp
imul
cli
adc
lods
mov
push
ljmp
outsb
pusha
dec
adc
mov
xor
jle
mov
dec
add
xor
inc
hlt
pop
call
mov
aam
and
ficompl
lds
popf
test
fisubrl
hlt
push
mov
fwait
scas
sub
cltd
aaa
mov
lea
xor
xor
clc
mov
loopne
add
xor
pop
inc
mov
jbe
inc
sbb
adc
movsb
in
mov
jae
fstl
jge
jge
add
data16
mov
push
arpl
add
xchg
stos
ret
jnp
pop
mov
test
mov
jle
icebp
jmp
cltd
rorl
pop
sub
sub
mov
xchg
rep
dec
sub
jmp
inc
lret
dec
and
or
xor
mov
rorb
cmp
nop
sub
fucomi
mov
test
or
cmp
pop
jno
pusha
pop
stos
xor
lret
xlat
lahf
dec
cmp
lock
adc
cld
shll
mov
sahf
xchg
fdivrs
std
aaa
jecxz
or
jmp
ret
enter
flds
orl
push
inc
push
push
in
imul
cmp
inc
dec
jl
in
sub
mov
ss
push
int3
mov
repnz
xorb
nop
hlt
gs
lds
fdiv
cmpsl
sub
push
lds
or
jle
movsb
icebp
xor
jle
out
rolb
push
subb
mov
jl
fmuls
xor
lock
rorl
cmp
jbe,pn
ja
lods
cmp
jb
mov
cli
aam
push
jg
adc
xchg
stos
imul
adc
iret
outsl
mov
sahf
mov
inc
jno
dec
push
mov
push
fsubr
lcall
and
dec
sub
fisubrl
mov
out
fwait
aam
push
push
adc
std
repz
cmpsb
js
mov
andb
jmp
popf
jg
sbb
rolb
and
mov
xchg
mov
or
sbbb
fistps
jns
xor
push
lds
imul
cmp
fs
or
aam
add
xchg
rcrb
loope
fistps
push
or
mov
and
push
ret
xor
adc
mov
mov
and
add
add
fbstp
push
pop
sbb
jecxz
popf
jle
pop
or
fsubs
pop
in
enter
mov
mov
cli
int3
cmpsl
cltd
sub
aad
je
loopne
cli
das
cmp
mov
daa
jp
sub
xchg
or
jne
hlt
pop
jns
xchg
jnp
cmp
stos
dec
scas
cmpsb
jb
in
jb
faddp
xchg
addr16
add
push
in
fdivl
outsb
sub
cmpsl
jne
inc
fwait
mov
in
movlps
movsb
sub
test
xor
pop
dec
xor
aaa
inc
adc
movq
add
addl
add
test
xlat
scas
rorl
sbb
sbb
dec
popf
sbb
dec
mov
in
out
call
call
or
jl
pop
push
hlt
stc
sbb
sbb
mov
fcom
insb
imul
push
subb
fidivrl
push
and
pop
dec
mov
cmpsb
inc
xor
dec
jns
test
sub
call
adc
mov
and
sbb
fsts
movsb
leave
pop
push
or
adc
sub
negl
inc
xor
jecxz
repz
mov
mov
loopne
in
js
mov
lret
pop
lea
adc
lret
mov
jmp
mov
outsb
out
jle
lcall
pop
gs
or
cld
popf
imul
or
ficoms
and
stc
inc
shlb
cmp
iret
add
ja
dec
jle
aaa
test
sti
shlb
xor
frstor
inc
bound
cmc
ret
leave
call
push
sub
int
xchg
ret
scas
mov
addr16
pop
dec
xchg
jno
jnp
and
add
pop
mov
or
cmp
or
and
mov
push
test
push
mov
mov
cs
push
insl
lret
xor
cmp
mov
inc
popf
imul
lret
dec
and
push
sbb
das
push
icebp
in
push
test
cwtl
aas
fsubrs
cmc
lods
fs
or
pop
jno
les
sbb
test
mov
mov
sub
inc
or
rolb
push
addl
lret
imul
mov
call
jnp
mov
int
rorb
aas
mov
lea
jle
pop
aad
js
je
stc
cs
mov
mov
add
pop
lock
je
sbb
call
cmp
or
inc
push
dec
lods
add
cmpsl
idiv
loopne
ja
mov
pop
out
insl
dec
push
test
jle
pop
jl
test
fdivp
dec
jp
mov
ret
outsb
imull
andb
mov
inc
sbb
out
repnz
into
loop
mov
mov
fcompl
and
adcb
test
xor
scas
sbb
fsts
mov
lret
pop
push
aas
nop
push
or
or
mov
push
das
mov
dec
mov
sbb
sbb
mov
outsl
pop
sbb
icebp
subb
sbb
mov
pop
orb
in
sbb
loop
sub
addb
hlt
sub
sbb
xchg
add
mov
sbb
or
add
pop
aam
and
lret
outsl
jns
nop
adc
decb
mov
nop
in
sub
cmp
or
in
inc
hlt
sub
push
movsl
int3
push
sub
in
inc
in
or
mov
adc
ret
mov
pop
or
cld
outsb
ljmp
sbb
stc
xorl
loop
aam
ljmp
mov
lods
sub
cmp
testl
inc
icebp
sbb
xlat
mov
adc
into
cmpsl
inc
rol
movl
std
insl
jge
clc
repz
xchg
sbb
and
sbb
cmp
push
xor
push
stos
shld
in
pop
and
xor
or
adc
ja
or
das
pop
jp
mov
ss
jne
sbb
inc
xchg
arpl
mov
push
stc
cmpsl
js
and
mov
push
lret
or
fimull
inc
subb
xchg
adc
push
cmp
outsl
xchg
cld
jb
fwait
mov
sbb
mov
mov
test
dec
xor
mulb
or
or
call
mov
mov
push
add
inc
dec
sarb
roll
xchg
jl
test
pushf
pop
fdivrl
mov
xchg
ja
inc
aad
add
cmp
jle
stos
shr
dec
insb
dec
mov
and
pop
sbb
fcompl
out
dec
cmc
mov
sub
jne
xor
mov
std
adc
out
push
in
cmp
outsl
addr16
push
jne
mov
dec
imul
sbb
test
shll
inc
jbe
lret
jne
pop
pop
mov
add
enter
cmpsl
or
cmp
es
ljmp
add
sbb
pmullw
cmpsl
mov
add
xor
xchg
dec
out
push
xor
cwtl
jbe
call
jno
cmc
test
sub
push
popf
scas
push
jecxz
lahf
les
stos
repz
test
imul
push
gs
sbb
mov
jmp
sub
cmp
je
adc
fists
lret
adcb
dec
cld
mov
xor
insl
test
inc
lods
mov
pop
add
in
hlt
push
cmp
xchg
mov
xchg
mov
pusha
popa
in
rclb
ss
bound
call
pop
push
jmp
and
mov
dec
jmp
or
xor
jge
loope
push
inc
and
ljmp
enter
inc
push
pop
dec
jl
fistl
dec
sahf
mov
mov
sub
cmp
and
xor
int
lahf
pop
jae
mov
mov
jle
aad
jb
mov
testb
push
cmp
call
outsl
mov
js
mov
in
xchg
hlt
fsubrl
int3
call
fstps
sbb
mov
cmp
imul
xchg
loop
mov
sub
pop
xchg
inc
dec
and
iret
jo
stos
dec
push
sub
pop
ret
sahf
xor
loopne
push
pop
sub
xchg
push
cmpsb
shlb
ljmp
push
jno
jo
push
mov
xchg
arpl
inc
int
sub
outsb
rcl
jne
out
fadds
mov
inc
push
mov
add
push
mov
mov
push
addb
xchg
push
or
cmp
or
mov
incl
xchg
inc
insl
and
leave
xchg
test
mov
xor
mov
cmp
dec
mov
and
roll
cltd
test
adc
xchg
pusha
ds
inc
sub
leave
lahf
inc
add
int3
insb
das
add
dec
mov
cmpsb
enter
clc
pop
inc
aaa
mul
dec
pop
scas
or
cmpsb
jb
stc
push
xor
mov
fstl
lret
dec
adc
and
push
adc
ret
push
repz
das
mov
mov
insb
imul
and
push
out
add
sub
mov
xchg
insl
jmp
outsl
call
lock
jo
pop
das
pop
gs
les
cwtl
daa
and
pop
cmp
cltd
test
jge
xor
sub
xchg
sub
enter
rolb
std
jge
and
mov
mulb
fstp
mov
ljmp
dec
lods
ljmp
sbb
or
mulb
imul
push
mov
nop
jge
xchg
mov
cs
incb
enter
frstor
mov
fldcw
mov
dec
mul
push
xor
popf
test
das
jmp
sub
mov
and
sbb
ss
outsl
std
xchg
or
pop
fwait
mov
mov
cli
std
ja
push
cltd
adc
pop
outsb
icebp
mov
std
int3
dec
pop
insl
xchg
insl
sbb
test
imul
pop
push
in
mov
lret
lahf
sub
push
dec
sbb
jne
shl
adc
test
lcall
mov
pusha
shlb
ja
add
gs
pop
xchg
cmp
inc
iret
push
dec
inc
and
popa
icebp
mov
pop
and
lret
lret
fidivrs
cmp
js
sbb
mov
pusha
in
out
dec
inc
pop
fmuls
adc
lahf
pop
fistps
mov
xchg
into
pop
pop
push
mov
push
push
pop
insl
xchg
lret
lret
push
ret
lret
xchg
fstpt
add
and
leave
lods
pusha
mov
jne
jae
pop
mov
nop
sub
pop
push
ss
in
arpl
mov
popf
xchg
ret
mov
fucomi
jae
shll
aaa
mov
and
and
xchg
mov
xor
sub
dec
dec
jo
fildl
xor
sub
loopne
imul
dec
push
ret
cmp
pop
adc
mov
xor
and
xorb
add
pop
mov
sbb
mov
push
aaa
lods
hlt
cli
rolb
sub
pop
jg
xchg
insb
or
icebp
jl
mov
xchg
into
lret
adc
pop
loop
or
cmp
inc
mov
subb
dec
fmulp
dec
push
add
mov
pop
fists
dec
popa
loope
xchg
popf
dec
cmp
outsb
sub
xor
push
xor
loop
add
dec
sub
jno
inc
mov
push
mov
cwtl
int
or
xor
jge
push
pusha
fnstenv
int
jne
cmp
int3
push
mov
adc
loope
fildll
outsb
push
push
mov
leavew
data16
lea
or
mov
xchg
lret
mov
sti
lahf
inc
dec
mov
cli
add
adc
ljmp
mov
aaa
lods
adc
push
push
and
lods
mov
push
xlat
or
ljmp
ret
pop
cwtl
ss
sti
push
jne
cwtl
arpl
daa
je
fisubs
mov
sarl
hlt
inc
push
lahf
dec
mov
out
movsb
fldl
scas
xchg
lock
sbb
inc
mov
stc
insl
push
in
ja
mov
arpl
or
mov
lahf
xchg
int
iret
jg
sti
fstpl
add
int
cmp
pop
hlt
and
jg
fldcw
sbb
xor
lods
sbb
ror
push
dec
or
pushf
out
sub
outsb
dec
test
cmp
cltd
fwait
lods
push
mov
fmuls
push
hlt
xchg
jno
xor
insb
pushf
push
test
scas
cli
mov
xchg
ja
stc
aaa
mov
lods
clc
mov
mov
pop
sub
and
mov
pop
repnz
mov
fdivrs
addl
inc
gs
insb
test
popl
cmp
adc
jbe
out
xor
xor
mov
insl
and
aad
pshufw
out
adcl
dec
ret
mov
or
adc
add
cwtl
inc
push
add
lock
loop
lahf
fsubrl
add
cli
movsb
fildll
call
andb
loop
mov
adc
movsl
adc
stc
mov
mov
push
fimull
fsts
adcl
call
mov
fsubr
es
in
popa
mov
shll
rcr
jno
ja
jecxz
mov
data16
call
popa
mov
sti
sete
and
aad
push
pusha
jp
jae
jae
or
adc
or
or
cmp
lods
jne
into
inc
leave
xor
inc
xchg
aas
call
or
sbb
idiv
enter
lahf
movsl
daa
jmp
dec
sti
movsb
cmp
mov
xchg
subb
cmp
dec
rcll
shll
movsl
jo
add
mov
adc
push
push
cli
mov
or
mov
mov
push
add
icebp
jl
ficoms
out
test
jle
xlat
xor
inc
inc
js
push
aam
dec
std
mov
mov
outsl
and
cmp
ret
gs
mov
insb
cmp
jg
add
push
out
nop
lret
loop
inc
cmp
or
adc
dec
adc
adc
pop
hlt
mov
cmc
fistps
cmpsl
adc
in
movsl
and
loope
out
cmp
sbb
lcall
push
cmp
xchg
xor
cmc
aas
outsl
ja
push
popf
aaa
sbb
add
push
dec
pusha
xorl
cmp
out
mov
lea
dec
lahf
and
repnz
sbb
push
cmp
fadd
add
add
out
leave
insl
pop
or
loope
and
push
adc
mov
mov
xchg
jg
jp
push
mov
cmpsb
lcall
outsb
je
jg
pop
mov
aam
push
fldl
test
inc
jb
push
dec
pop
pop
add
sti
mov
pop
cmpsl
cltd
movl
dec
loop
dec
fcom
stos
pushf
ja
pop
notl
sub
icebp
and
and
pop
ds
pop
cmc
lahf
dec
orl
push
and
sahf
mov
gs
fwait
jmp
push
adc
out
inc
addr16
sbb
pop
jno
sub
jnp
mov
adcb
repnz
data16
les
test
mov
orl
xor
dec
dec
lcall
arpl
adcb
loop
stos
mov
cmpsl
or
inc
aad
dec
push
sbb
push
lret
lcall
jo
insb
aas
sub
xchg
adc
jbe
ret
mov
mov
sahf
jge
pusha
mov
fiaddl
mov
faddl
insl
add
stos
call
sub
in
push
mov
lds
sahf
inc
xor
inc
dec
mov
fsubs
cmpsb
xchg
scas
outsb
stc
xor
push
xchg
cs
idiv
loopne
aas
rcrl
push
ljmp
jmp
dec
sub
cld
push
cmp
mov
mov
jg
mov
cmp
cmc
mov
mov
or
imul
cwtl
mov
xchg
jns
aam
cwtl
xor
scas
int
cli
flds
adc
inc
jb
cmp
add
sahf
outsl
pop
dec
fnstenv
lahf
rdpmc
js
scas
mov
and
insb
mov
in
in
idivb
testl
mov
sbb
sbbl
adc
mov
mov
cmp
xchg
ret
jae
and
and
add
repnz
jmp
pop
sbb
cwtl
pop
xchg
arpl
mov
lock
inc
and
std
jo
test
ljmp
fistpl
add
fs
leave
jo
aad
cmp
mov
adc
dec
js
mov
test
add
push
xchg
stos
lret
xchg
cmp
insl
cmc
mov
shll
add
mov
fdivp
pusha
and
addr16
jp
push
cmpsb
movsl
push
rclb
cmp
mov
and
inc
sbb
shll
fdivr
fistps
add
fyl2xp1
nop
inc
popf
push
std
pop
scas
xchg
inc
dec
icebp
jl
mov
les
mov
mov
xor
push
je
push
mov
cmp
dec
jbe
pop
pop
loop
mov
ret
arpl
xor
adc
mov
mov
lds
orb
or
fsubrl
push
nop
je
inc
sbb
ljmp
fadds
and
mov
jnp
leave
icebp
fwait
adc
and
sti
xor
test
test
push
rclb
clc
lock
imul
pusha
fcmove
rol
inc
negb
mov
popf
arpl
lcall
push
sub
in
je
xchg
inc
andb
mov
lcall
je
xchg
or
cmp
mov
vsubpd
pop
push
ds
add
mov
jg
loop
add
call
dec
add
std
roll
imul
xor
mov
push
rol
aas
popa
add
loop
cwtl
or
arpl
push
xor
xor
cli
and
lcall
leave
fisubl
mov
inc
mov
pop
rcll
jmp
inc
subl
repnz
or
repz
add
je
in
out
inc
das
dec
xchg
aam
lcall
fwait
daa
dec
xor
sub
adc
push
bound
jecxz
js
inc
add
push
jge
jo
cltd
pop
sub
jb
adc
mov
mov
adc
and
mov
add
les
xchg
push
je
mov
aam
cmpsb
in
movsb
sub
test
cmc
jne
mov
mov
mov
cmp
jo
jp
inc
push
hlt
xchg
shll
push
shrl
in
jae
xor
shll
push
adc
mov
jno
inc
mov
sub
stc
lea
xchg
mov
add
insl
or
ret
cmp
jp
xchg
jne
adc
or
xor
sahf
in
sti
dec
xchg
hlt
pop
push
inc
test
in
iret
mov
jae
jno,pt
div
or
into
sbb
xchg
andl
mov
icebp
les
cmpsl
inc
ljmp
mov
push
mov
int
add
sarb
mov
mov
loope
push
sub
mov
dec
mov
mov
mov
and
push
das
xchg
fcmovnu
test
scas
rcrb
std
xchg
dec
outsl
mov
cmp
int
jno
inc
inc
xchg
out
and
addr16
les
nop
jge
jg
stos
xor
push
ljmp
orb
sbb
cld
incb
ss
xchg
sub
aad
out
or
or
fdivl
xor
xor
mov
je
add
pop
xchg
dec
mov
fmull
inc
decb
inc
dec
xchg
add
push
or
js
cld
out
sbb
call
push
les
iret
pop
sarl
add
rcrb
mov
and
sbb
adcl
bnd
addr16
cltd
sbb
push
dec
mov
xchg
into
out
mov
add
push
aad
and
das
lcall
fsub
popa
in
imul
adc
rcll
mov
push
dec
imul
push
jno
pop
and
sti
adc
mov
je
mov
fistl
or
inc
fs
stos
push
pushf
cmp
cmpsb
mov
sti
es
cli
pop
mov
jge
or
test
xor
notl
test
call
mov
or
mov
bound
add
stos
mov
sbb
push
fucom
xor
cmpb
dec
dec
fs
sub
in
mov
add
ljmp
xchg
andl
dec
idiv
ja
cmpsl
sub
mov
pop
clc
enter
addl
mov
and
lahf
inc
add
or
xchg
push
pop
jbe
cmpsl
mov
daa
xchg
xor
add
sbb
cmp
scas
stos
shll
orb
stos
push
push
sbb
jo
js
outsl
addr16
pop
sbb
sbb
insb
aaa
add
outsl
popf
sub
or
repz
test
mov
or
cmpsb
xchg
hlt
pop
aad
cmp
push
jecxz
add
jg
adcl
cmp
xor
cmovp
push
mov
lcall
mov
or
push
mov
cmovl
cmp
in
inc
lock
mov
outsl
sub
mov
daa
test
xor
add
scas
imull
inc
push
aaa
xor
sbb
jo
inc
fnstsw
mov
xchg
adc
fcomps
push
xor
xchg
inc
lds
mov
jecxz
adc
cli
in
movl
xor
mov
sub
xor
ja
xlat
test
xor
popf
adc
fsubrl
sbb
clc
or
out
adc
push
cmp
mov
sub
cmp
push
mov
jmp
mov
bound
mov
imul
sub
dec
rolb
mov
enter
cmpsb
hlt
shr
add
jo
lret
sub
mov
jle
addb
sbbb
stos
xor
sub
push
mov
movsl
and
cld
mov
lret
fadds
xorb
sub
test
mov
insl
xor
daa
add
mov
jbe
je
cmpsl
push
cmp
xchg
rol
cmp
or
mov
jne
stos
push
dec
into
mov
mov
xor
xchg
inc
dec
shrb
sbb
sbb
pop
pop
mov
mov
adcb
testb
push
push
jno
stos
or
inc
mov
mov
negb
icebp
ficoms
xor
pop
cmp
icebp
push
lcall
sbb
enter
mov
sti
popf
pcmpeqw
stos
in
sbb
popa
stos
lahf
xor
push
push
ljmp
loope
rcl
inc
test
lea
and
add
test
mov
push
pop
pop
scas
dec
clc
int3
lods
xchg
and
dec
into
xor
mov
xchg
jge
out
scas
hlt
cmp
fsts
cmp
outsl
addb
xchg
jne
jmp
cs
add
ds
cmp
lcall
das
pop
mov
pop
jp
fmull
mov
sub
fcmovne
loop
dec
inc
pop
js
data16
or
fstps
pop
pop
jb
incb
pop
sbb
cmp
jle
rclb
cs
inc
jg
enter
sub
into
in
bound
int3
leave
xor
aas
jge
jns
jp
data16
adc
or
aam
aaa
cmp
cmc
aaa
popf
outsl
add
and
and
sbb
repz
sbb
lret
cmpsb
imul
adc
test
pop
ljmp
cmp
inc
dec
pop
fistl
mov
push
rclb
inc
dec
ja
fs
in
data16
loopne
mov
call
roll
test
into
sarb
enter
ret
inc
dec
xlat
out
dec
jp
ds
cmp
inc
dec
in
leave
in
in
jmp
test
push
xor
add
cli
je
std
mov
mov
mov
sbb
or
dec
call
add
xchg
clc
mov
ja
dec
xor
lcall
xchg
xlat
xchg
inc
xchg
push
cld
test
sub
iret
xor
push
inc
xchg
inc
jl
inc
push
jo
sbb
stos
shrb
mov
outsl
hlt
mov
sub
and
push
pop
insl
pop
jne
lock
clc
cmc
sub
js
or
js
adc
aaa
push
push
inc
sahf
imul
js
out
dec
cmp
xor
mov
dec
jmp
mov
fwait
and
sbb
xchg
sub
jne
jle
stos
push
scas
jae
mov
lods
sub
mov
mov
stc
jg
out
adc
sub
push
adc
in
sub
mov
mov
push
mov
mov
popf
sub
fld
dec
insl
jbe
scas
cli
or
and
pop
adc
push
xorb
pop
test
xor
in
in
mov
jmp
push
imul
sti
sbb
orb
fisttps
jne
dec
cli
cmc
xchg
cltd
or
dec
pop
cld
cwtl
notl
jnp
mov
test
cld
sarl
jge
mov
out
jb
mov
in
das
in
mov
and
in
push
inc
xor
mov
repz
in
aam
mov
pop
aas
jp
aam
lcall
jg
sub
inc
ja
xor
insb
flds
and
ja
xor
xchg
fldenv
mov
mov
mov
push
sbb
sbb
inc
adc
mov
iret
mov
out
hlt
mov
mov
outsb
and
jo
sbb
xlat
xchg
loope
div
lret
mov
pop
sub
clc
scas
mov
add
or
adc
ret
js
pop
test
push
dec
cld
mov
and
inc
in
enter
sbb
xor
ljmp
or
or
xchg
add
or
mov
lret
and
shll
pop
testb
jo
inc
pop
ds
dec
int3
inc
aas
add
sub
mov
push
push
cld
mov
xchg
and
pop
push
mov
inc
movsl
sbb
ljmp
xchg
mov
pop
aam
clc
mov
popa
popf
movsb
dec
je
sub
xchg
adc
xchg
sti
push
iretw
fucomp
mov
cmpsl
push
mov
shrb
ficompl
je
in
insb
pop
jno
loope
jl
push
ret
cld
xor
dec
dec
lods
push
test
mov
dec
mov
add
jle
shr
rorb
cwtl
stc
mov
lock
pop
adc
loop
pop
pop
adc
sub
inc
imul
mov
orl
rcl
js
stos
repnz
rcll
es
mov
pop
jo
scas
test
pop
sbb
xchg
pop
xor
sbbb
jns
mov
outsb
or
jp
std
xchg
mov
in
pop
inc
add
mov
mov
cmp
push
idivb
into
repz
xchg
sub
pop
adc
in
sub
inc
dec
sbb
jo
xchg
pop
movsl
fcompl
notb
mov
stc
xchg
sbbl
test
ljmp
ret
adcb
mov
pop
or
ret
jns
icebp
sbb
cld
or
movsl
aad
mov
mov
clc
data16
push
mov
add
filds
std
hlt
add
cmp
out
mov
push
in
inc
inc
js
test
or
mov
and
jecxz
jns
sub
out
sbbb
pop
stos
gs
addr16
int3
push
pop
jnp
mov
mov
imull
adc
and
jnp
push
call
mov
pop
pop
xor
adc
push
push
jne
inc
movl
addr16
adc
cltd
sub
dec
arpl
cs
or
dec
jo
adc
mov
inc
mov
xchg
std
aad
es
cmp
stos
fldenv
das
in
lret
dec
loop
sbb
sub
lods
cmp
cmp
lods
das
test
leave
adc
nop
cs
insb
mov
pop
pop
lret
sti
and
inc
addr16
shr
mov
popa
cmp
inc
add
pop
pop
add
aas
inc
test
xchg
fmulp
jae
mov
mov
pop
mov
mov
iret
jae
xlat
std
pop
push
mov
xchg
mov
notb
je
inc
inc
jmp
ja
shrl
mov
xchg
cli
fs
andps
fmull
mov
xchg
dec
fsts
pusha
in
push
mov
mov
pop
pop
sbb
addr16
nop
nop
mov
inc
mov
push
adc
push
inc
push
dec
ficoms
sub
fildll
std
sub
cmpsb
add
outsl
mov
jmp
cltd
and
cmpsb
fsub
sub
call
sub
cmpsb
idivb
mov
push
outsb
fxch
sti
jae
inc
push
repz
or
push
inc
das
mov
ljmp
mov
jl
mov
stos
mov
push
test
aaa
mov
push
jne
mulb
stos
gs
jae
mov
ret
sbb
jb
sbb
cmp
stos
popf
push
cmpsl
jbe
mov
or
and
iret
mov
aam
xor
inc
loop
out
and
cld
push
std
sarl
push
xchg
adc
pop
inc
lods
scas
lret
es
jns
and
gs
popf
xchg
aam
mov
push
out
add
lock
fsubl
jnp
push
push
fisubs
mov
adcl
xor
bound
sbb
jnp
push
mov
out
cltd
mov
scas
adc
mov
xchg
mov
push
or
movl
lods
mov
pop
add
jne
pop
mov
loope
add
cmp
stos
idiv
pop
fdivrs
pop
push
lret
addr16
push
outsl
or
imul
cmp
clc
pop
dec
cmp
xchg
lds
int
loop
nop
inc
inc
adcl
push
or
cltd
jmp
insl
mov
ds
in
repz
mov
outsl
stos
mov
and
repz
xor
movsb
mov
in
ret
fucomip
cmp
push
test
les
jecxz
fstpt
push
dec
aam
addb
mov
xchg
push
cmp
into
mov
jno
and
popa
fildll
sub
imul
push
add
dec
imul
nop
jle
aam
scas
pushf
mov
cltd
xorb
or
fwait
sbb
shrl
xchg
cltd
loope
gs
and
jns
xor
dec
jle
repz
mov
fdivs
sub
jl
add
add
mov
lods
js
dec
xchg
push
pop
pop
push
rol
or
xor
jbe
dec
or
jecxz
popf
mov
shrb
mov
cs
ds
xor
cltd
fcompl
and
xor
sub
dec
test
pop
mov
inc
fdivs
dec
mov
xor
mov
test
cmpsb
and
stos
es
pop
jg
enter
scas
xor
repnz
js
xor
mov
or
repz
sbb
imul
fbld
cmp
mulb
iret
or
dec
mov
mov
fcompl
dec
or
push
cmpsb
mov
loope
xchg
inc
sarl
out
add
dec
xlat
sub
cmp
jp
mov
mov
clc
mov
stc
or
push
cli
sbb
jle
push
rclb
lret
daa
or
stos
mov
lds
ja
xchg
aam
inc
outsl
or
inc
shrl
jge
xlat
fxch
xor
xchg
notb
cwtl
fmull
sub
inc
or
mov
xchg
cs
addr16
pop
push
loope
arpl
push
das
mov
add
sub
push
cmp
pop
mov
or
arpl
into
iret
out
scas
jge
add
mov
or
dec
mov
mov
outsb
push
mov
aaa
filds
call
inc
frstor
xchg
orl
das
ret
rcll
inc
daa
add
jno
iret
shll
mov
test
push
dec
clc
lods
sub
adc
fldt
out
cwtl
sbbl
or
pop
dec
push
leave
pop
cmpsl
inc
and
test
arpl
fsubl
push
adc
push
idiv
fsubrs
in
sbb
cmp
test
push
stos
fists
mov
mov
push
pushf
mov
xorb
inc
or
and
and
push
sub
mov
test
mov
cwtl
xchg
shl
ret
rclb
push
pop
mov
cmpsl
outsb
stc
pop
stc
pusha
dec
xchg
call
insl
addr16
mov
sub
ret
inc
shrl
call
das
mov
inc
jo
xchg
rcr
popf
mov
adc
xlat
mov
xor
pop
imul
not
mov
insl
sub
xor
ja
add
or
loope
jge
pop
stos
in
aas
sbb
add
insb
or
call
jmp
ljmp
clc
mov
nop
xchg
and
sub
repnz
push
xlat
dec
sbb
push
mov
scas
mov
jg
inc
pop
xchg
mov
adc
jae
stos
add
mov
out
js
mov
repz
int
aas
push
push
add
cmpsb
out
pop
insb
les
in
iret
cmp
jle
int
add
in
daa
icebp
ret
lods
popf
pop
mov
xor
ret
out
outsl
aaa
icebp
adc
dec
imul
push
shl
aas
clc
sbb
mov
out
mov
mov
mov
inc
popf
xor
sbb
fildl
xor
push
in
jne
push
add
xor
andl
jp
jns
outsw
das
add
pop
cmp
shll
lods
xor
cmpsb
les
int3
cld
jl
and
outsb
lea
adc
push
js
lds
cld
dec
xchg
mov
pop
test
ret
inc
fisttps
dec
cli
popa
dec
ret
mov
cmp
je
or
shr
ss
pop
sbbb
jmp
jmp
fcmovnu
fsubs
sbb
sbb
pop
lds
jae
and
pop
fisubrl
xorb
mov
shll
pop
inc
inc
repz
xchg
push
popf
popf
push
test
add
or
sti
xor
popa
mov
fidivrs
aam
nop
sarl
aad
enter
in
es
push
rcrl
pop
lds
popf
stos
xor
scas
lods
repnz
mov
push
mov
push
arpl
adc
fcoms
xchg
insl
mov
call
aam
fiadds
and
popf
aam
push
jbe
push
or
das
jle
jp
add
xor
and
jb
shrb
cmp
sbbb
sub
push
scas
outsl
sub
std
push
rcpps
inc
out
mov
lea
mov
mov
adc
or
push
mov
inc
adc
in
popa
in
sbb
iret
ficoms
pusha
scas
jns
add
in
inc
ja
inc
sahf
push
jno
arpl
and
mov
xchg
mov
scas
push
out
ja
pusha
push
jp
mov
xor
xchg
stos
dec
cmovae
enter
sub
inc
or
stc
pop
das
lock
push
popf
aas
cmp
pop
xchg
push
aas
mov
mov
push
in
pop
and
pop
int3
xchg
mov
sbb
sub
scas
loope
pop
or
cmp
test
dec
int
shrb
pop
cmp
cmp
jecxz
fdivr
lret
sbb
lea
lahf
iret
push
movsb
sbb
out
out
int3
pop
and
push
mov
mov
fimull
out
ret
dec
pop
push
sbb
ret
and
fdivrl
cltd
mov
adcl
js
sbb
int3
mov
test
dec
rcrb
subl
push
push
add
sarb
sub
sub
out
sbb
icebp
stos
lret
dec
mov
add
dec
test
mov
out
lds
lods
loope
cmp
mov
lahf
dec
fdivp
movsl
mov
loopne
xlat
dec
shll
mov
dec
test
mov
mov
imul
imul
in
out
cmp
gs
in
lret
push
cmc
ss
and
cmc
popf
inc
push
pushf
or
inc
add
adc
pop
mov
mov
xor
arpl
es
je
xor
adc
lea
jns
test
or
push
adc
enter
mov
jns
notb
mov
lods
pop
imul
fidivrl
incb
inc
and
cmpsl
inc
inc
popa
lcall
insb
iret
and
dec
dec
sbb
test
cs
xlat
jo
push
pop
addb
jns
rdmsr
pusha
std
cmpsb
mov
daa
shlb
jb
sub
push
xchg
xor
outsl
repz
test
shrl
out
sbb
dec
ja
cld
dec
imul
decl
std
out
mov
jb
dec
call
lods
dec
and
lock
dec
sbb
fs
imul
imul
cmpsl
sbb
xchg
pop
loopne
inc
call
adc
insl
pop
sub
negb
jl
inc
and
shr
jno
or
repz
mov
daa
jb
lods
mov
pop
xsha256
cmpsb
push
mov
sub
je
scas
xor
add
outsl
push
mov
data16
aaa
and
push
push
movsl
js
cmc
aaa
xor
int3
ljmp
outsl
scas
icebp
jmp
push
fwait
ja
mov
pop
cltd
dec
scas
lret
mov
shrb
ret
hlt
out
dec
pop
jle
dec
xchg
popa
sti
cld
nop
jmp
fiaddl
ds
ljmp
mov
jecxz
dec
xchg
sub
sub
add
mov
add
jle
jl
leave
pusha
mov
xor
mov
cmpb
lods
icebp
lods
addb
xchg
std
inc
jo
loope
mov
lea
lods
adc
les
shl
out
pushf
inc
pop
jmp
sbb
sub
aam
insl
test
inc
pushf
sub
loop
jns
cmp
adc
hlt
mov
lahf
mov
adc
mov
or
stos
mov
test
cmp
clc
dec
mov
cs
pusha
in
xlat
xchg
xor
iret
cmpsl
pop
adc
pop
adc
push
lods
scas
xchg
pop
and
push
pop
and
mov
push
stos
dec
aad
jnp
outsl
mov
push
push
jmp
xchg
sbb
sti
leave
lret
push
xorb
xchg
dec
sub
mov
jae
or
and
movb
lret
or
push
or
inc
xchg
sbb
call
and
repnz
lcall
mov
adcb
in
adc
sbb
in
and
or
stc
fildll
lock
push
cs
push
push
ret
into
mov
adc
shrb
and
stos
movb
cmpsl
pop
cmp
cmpsl
xchg
mov
cmpl
scas
pusha
out
mov
repnz
pop
sub
lret
sbb
xchg
cmpb
push
push
out
in
pop
in
sarb
pushf
adc
loop
xor
bound
xor
xlat
leave
mov
mov
daa
mov
int
shll
add
xlat
je
jb
rclb
push
jns
cmp
das
pop
and
mov
cld
fwait
cli
push
mov
arpl
push
cwtl
dec
rol
sbb
pop
scas
arpl
dec
out
mov
adc
xlat
lock
nop
xchg
sub
sbb
jge
jl
push
adc
sub
sbb
jb
das
xchg
cmpsl
adc
push
cmp
ret
dec
xor
xchg
std
add
iret
out
inc
sbb
aad
xor
adc
fdivs
or
leave
in
push
dec
popf
movsl
mov
das
sarl
dec
mov
shlb
inc
movl
ljmp
mov
mov
pushf
cld
mov
stc
lahf
stos
jecxz
add
out
mov
xchg
imul
lock
mov
jns
ljmp
and
fisubrl
or
scas
jbe
mov
push
imul
cmp
lods
out
push
mov
mov
movsl
or
or
leave
ljmp
test
in
xchg
adc
sbb
push
jge
cmp
inc
addb
iret
mov
pop
cs
pop
adc
cmpsl
pop
dec
les
arpl
and
pop
push
sub
mov
sbb
lods
ror
jp
inc
sbb
jns
aam
fucomip
loopne
xorb
inc
les
mov
push
aaa
pop
jmp
in
cmpsb
ret
and
not
or
orl
adc
push
movsl
jge
add
xchg
push
sbb
mov
in
es
sbb
inc
insb
in
fs
lea
enter
les
test
or
out
jns
mov
add
hlt
xchg
add
lcall
ljmp
sub
dec
cmp
jg
or
iret
decb
jge
fxtract
sbb
inc
push
mov
sarb
in
out
idiv
scas
pop
popf
out
loope
pop
fs
cli
cmp
out
push
jae
xorl
bound
dec
cmp
loopne
push
and
fwait
mov
gs
add
sbb
mov
xchg
jg
subb
mov
test
test
pop
sarb
jge
testb
xchg
xor
dec
rcrb
lret
xchg
rdmsr
jecxz
mov
jmp
test
mov
movsb
test
rcll
nop
xor
add
mov
imulb
lea
jnp
and
sbb
pop
pusha
mov
loopne
pop
push
lahf
jno
add
jge
inc
daa
ds
jmp
mov
jb
mov
mov
mov
mov
pushf
pop
fdivs
jge
call
test
inc
rolb
mov
xor
push
mov
mov
notl
int3
enter
adc
fs
out
cmp
adc
ret
xchg
adc
out
fwait
icebp
xchg
incl
mov
movntq
int
mov
stos
cmp
jnp
pushf
call
and
mul
rcll
push
into
mov
xchg
push
dec
adcb
mov
inc
out
push
push
mov
mov
movlps
add
scas
cld
mov
mov
xchg
in
sti
mov
cld
or
sbb
mov
stos
cli
outsl
popf
push
jge
mov
lcall
dec
mov
or
ljmp
in
pop
test
add
push
xor
or
mov
addr16
xchg
jp
inc
jnp
jecxz
stos
sbb
lahf
dec
mov
loope
and
mov
and
pop
pop
inc
les
hlt
sub
fnsave
jmp
nop
inc
testb
xlat
fisubs
int3
insl
mov
arpl
inc
push
pop
xchg
fimuls
jmp
dec
ljmp
inc
fnsetpm(287
push
repnz
bound
insb
dec
lods
cmpsb
or
mov
or
into
imul
orb
packssdw
in
sbb
into
clc
xchg
push
dec
test
xor
cmp
push
fincstp
xorl
jno
and
add
sub
cmp
push
xor
adcl
hlt
push
sub
push
add
or
inc
xchg
or
cli
adc
fimuls
leave
es
fnstcw
and
fiaddl
call
into
lcall
and
push
inc
outsl
pop
adc
sub
mov
roll
mov
cmp
das
xor
cs
push
mov
mov
mov
sti
fwait
sub
je
je
xor
scas
or
push
popa
movsb
jmp
aas
push
mov
and
jns
mov
jns
and
nop
pop
arpl
sbb
inc
mov
insb
and
push
or
out
repnz
xchg
lret
push
and
lea
xchg
or
cmc
bndldx
push
fldt
jae
outsl
jle
adc
inc
mov
shrl
or
mov
mov
jmp
mov
push
jmp
stc
ret
scas
incb
push
xor
ret
sbb
ret
xlat
imul
aas
push
mov
add
fldenv
inc
or
repnz
mov
fstps
dec
push
xor
sub
int
pusha
test
push
jp
jl
lea
popf
mov
pop
insl
add
popf
mov
mov
xchg
aas
and
in
push
ljmp
jne
pop
dec
inc
and
mov
mov
gs
ficoms
sub
outsb
adc
ss
outsb
dec
fstps
repnz
pop
out
inc
scas
push
pop
jnp
rolb
jp
or
int
pop
mov
stos
cmp
mov
pusha
dec
inc
lahf
test
insb
decb
inc
inc
ja
push
repz
sbb
jb
scas
adc
mov
xchg
es
jnp
outsb
popf
out
loop
pop
mov
jb
arpl
pop
fcmove
cmpsl
sbb
jge
dec
roll
adc
xor
bound
or
lds
loopne
inc
push
fs
fists
sbb
lret
int3
and
pusha
jg
in
nop
dec
push
cmp
loopne
shrl
nop
cmp
and
xor
aaa
mov
insb
adc
icebp
fcomps
jae
mov
sub
icebp
xor
push
add
jnp
push
stos
sub
dec
shlb
aam
jns
jl
mov
aam
pusha
icebp
out
in
testb
sub
mov
ret
inc
pop
sarl
repz
jbe
xchg
iret
ret
dec
rorl
cmp
jo
inc
push
push
sahf
jg
int
les
cltd
bound
insb
and
mov
adc
cmp
push
fisubl
ret
movsb
sbbb
into
sub
sub
les
jecxz
mov
jnp
movsb
arpl
cmpsl
push
mov
aaa
pop
in
insb
inc
dec
popf
cmpsb
sbb
pop
jnp
out
push
inc
xchg
push
lahf
insb
and
ljmp
dec
cltd
cmp
xor
pushf
in
insb
mov
add
movsb
xor
shlb
ficoms
add
insb
es
leave
dec
jo
clc
mov
cmc
mov
inc
arpl
aaa
sahf
les
or
and
outsl
pop
mov
int
xchg
les
out
stc
push
dec
mov
out
xor
ljmp
clc
mov
push
pop
das
mov
jecxz
das
lea
jmp
gs
mov
cmpsb
sub
fcompl
cltd
xchg
jge
add
push
repnz
mov
mov
push
lret
adc
lahf
pop
cmpb
or
adc
adc
out
jns
mov
and
cmp
cmpb
push
inc
mov
sahf
inc
jl
lds
in
ret
cmpsl
sbb
push
and
repz
ret
xor
dec
das
leave
mov
scas
gs
insl
cmovo
jo
scas
sarl
adc
scas
fwait
push
ds
push
call
aaa
mov
push
lahf
into
int
stc
sub
test
jl
mov
faddl
cmp
test
cmp
in
imul
outsl
mov
lods
fiaddl
cltd
shll
xchg
push
outsl
mov
xor
dec
cmp
sbb
scas
xchg
movsb
arpl
inc
pop
repnz
shll
nop
pop
push
inc
mov
fcoml
add
repnz
inc
std
in
sbb
cmp
push
xlat
adc
xor
gs
iret
mov
mov
movsl
mov
push
ret
stos
cmp
mov
movsb
mov
pop
fmul
xchg
jns
imul
fcoml
icebp
lods
outsl
je
test
add
sub
mov
jo
add
mov
mov
sbb
dec
stos
cmp
adc
lret
jmp
cmp
jno
pusha
insb
xchg
pop
mov
sar
sbb
xchg
mov
enter
or
mov
fs
mov
sbb
cmc
add
test
out
je
xchg
pop
mov
cmp
push
daa
xor
popf
rclb
mov
jnp
in
jg
cmc
inc
adc
sahf
jg
and
adc
push
or
or
mov
adc
cmp
les
mov
loope
loop
xchg
cld
jge
sbb
sti
cmpsl
jl
test
decb
js
fadds
out
hlt
cmpb
inc
aam
lock
std
mov
inc
mov
pushf
std
cltd
int
add
les
test
movsb
sbb
mov
ficomps
push
scas
lock
sti
inc
in
aad
xchg
movsl
jbe
jle
pop
call
popa
in
inc
cmp
xlat
fcmovb
and
xchg
inc
dec
out
enter
sub
push
cli
das
daa
add
xchg
stos
xorl
lret
aad
notb
push
aad
and
xor
fcomip
pop
movsl
cmp
pop
jnp
mov
mov
jns
xor
prefetch
and
xor
divb
jb
mov
dec
movsl
pop
mov
mov
sbb
mov
jmp
in
and
dec
movb
or
or
ret
push
test
movsl
mov
in
fs
fcoms
neg
les
lret
inc
xlat
and
pop
fbld
sub
push
addl
incl
rcrl
inc
adc
or
outsl
out
xchg
scas
inc
ljmp
sub
adcl
or
add
shlb
int
and
mov
pushf
int
cmp
adc
inc
jns
cmp
daa
jmp
mov
adc
ficoml
mov
sarl
sbb
cmp
dec
daa
pusha
lods
adc
gs
fnstsw
imul
inc
cmp
mov
lret
cwtl
sub
sub
mov
mov
adc
jb
shl
ret
push
addr16
popa
stos
les
sbb
add
cld
xor
sbb
fcomps
enter
sarl
mov
xchg
xor
aad
mov
mov
cltd
iret
add
adc
ss
je
push
and
push
bound
inc
repz
adc
sbb
jne
popf
loopne
xabort
sbb
xchg
xlat
fcompl
sbb
and
xor
insb
rclb
std
pop
scas
jnp
adc
out
ja
fwait
jle
xchg
rcrl
enter
jecxz
daa
mov
aad
orb
xor
sub
sub
arpl
cmpsb
iret
jns
jne
mov
and
fsubrl
cmpsb
or
inc
fdivrl
pop
pusha
imul
in
sti
jns
mov
insl
sub
rolb
jnp
and
mov
jge
adc
pop
call
repz
xor
out
in
out
add
add
dec
xchg
mov
pop
mov
aam
in
jmp
cli
mov
cmp
stc
lea
inc
sbbl
stc
xor
xchg
xchg
mov
add
push
lahf
push
je
jnp
daa
aad
dec
dec
jle
push
insb
xlat
js
mov
and
bound
xlat
sahf
sbb
inc
xchg
jb
push
es
mov
icebp
out
int3
ficomps
iret
cli
sbb
mov
in
out
scas
fcoms
xchg
mov
sbb
lcall
test
xchg
lods
fidivl
adc
iret
cmp
mov
adc
aaa
mov
je
popa
inc
dec
test
pusha
shlb
js
cmpsb
inc
pop
cmpsb
in
inc
nop
hlt
xor
pusha
ss
jg
cmp
ss
pushf
mov
orb
gs
mov
and
inc
popf
sbb
in
inc
dec
dec
pop
push
arpl
cwtl
pop
adc
int
icebp
pop
scas
call
dec
add
adc
lods
push
or
xlat
cltd
adc
popa
and
xor
dec
repz
jle
pop
fdivr
ds
add
push
stos
mov
add
jo
cltd
mov
sti
enter
pop
ret
hlt
add
loopne
mov
in
test
jge
jl
mov
push
imul
mov
ficomps
push
sbbl
in
in
roll
imull
lahf
and
ds
push
mov
mov
xorb
rcr
fidivrs
mov
insb
psubd
stos
inc
pop
sub
insl
push
add
add
and
addr16
xorb
jecxz
xchg
and
or
adc
clc
adcl
mov
mov
lods
scas
mov
jo
not
push
test
lret
clc
cld
mov
cli
js
xchg
jne
arpl
pop
dec
xchg
mov
arpl
int
mov
dec
loopne
gs
sbb
faddl
ret
or
std
adc
testb
mov
popa
repnz
ret
mov
pop
lahf
mov
out
aam
xchg
cwtl
xchg
xor
pop
inc
jle
add
into
pop
bound
lret
xchg
int
push
int
sub
ds
inc
xchg
das
or
cmpsb
hlt
icebp
iret
filds
pop
sti
xchg
stos
lret
or
sbb
sub
lods
mov
ds
cmpsl
cmpsl
lds
pop
imul
mov
insb
je
sahf
les
test
sti
stc
jp
cmp
loop
subl
pop
or
adc
mov
pusha
xor
xchg
inc
mov
and
mov
rcll
rorb
xchg
dec
mov
jl
popf
mov
imull
lock
xor
idivb
fisttpl
sar
in
addb
ss
out
xchg
inc
pop
cmp
xchg
xchg
mov
loop
jmp
int
mov
lods
ss
jno
mov
pop
js,pn
cmp
movsl
lds
sbbl
push
jne
inc
loopne
addb
cmp
cmc
ret
out
out
push
je
aaa
loop
add
int3
cmpsl
xor
push
pop
pop
outsb
and
lds
mov
or
sbb
push
cmc
push
mov
adcl
mov
movsl
xchg
jno
jo
out
int
xchg
sub
data16
cs
add
add
add
add
call
in
pushf
and
sar
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
push
nop
nop
push
nop
push
nop
push
nop
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
sub
add
pop
pop
add
cwtl
pop
add
add
add
add
add
add
nop
add
orb
add
add
add
add
orb
add
or
add
xor
add
pop
add
addb
add
addb
addb
add
test
add
rolb
add
clc
add
addb
add
and
add
dec
add
addb
add
jo
add
cwtl
add
cmp
add
rolb
cmp
add
call
add
add
add
cmp
add
cmp
cmp
add
pusha
add
cmp
add
mov
cmp
add
mov
add
fadds
xor
add
add
add
sub
add
push
add
add
js
add
mov
add
add
add
add
lock
add
sbb
add
inc
push
add
push
add
add
add
add
add
add
push
add
or
add
xor
add
add
add
or
add
xchg
add
mov
add
or
add
cltd
add
call
add
add
add
add
add
add
add
mov
add
or
add
add
add
movsl
add
rolb
add
or
add
add
add
or
add
add
add
add
add
add
mov
add
or
add
add
jo
add
call
add
add
add
add
movl
add
add
add
add
add
add
add
incb
add
or
add
add
add
add
add
add
add
or
rolb
add
or
add
add
add
or
call
add
add
add
add
add
add
or
add
add
add
add
add
add
nop
pop
add
call
add
add
add
add
sub
call
add
add
add
add
xor
add
or
add
add
add
ss
call
add
add
add
add
add
add
inc
add
call
add
add
add
add
add
add
or
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
sub
add
add
add
add
add
pop
add
mov
add
or
add
add
add
pop
add
call
add
add
add
add
add
add
addr16
mov
add
or
add
add
add
call
add
add
add
add
add
nop
jae
add
add
add
add
add
add
sbb
add
add
add
add
add
stos
add
call
add
add
add
add
mov
add
add
add
add
add
add
add
mov
add
or
add
push
add
sarb
add
add
add
add
add
push
add
test
add
mov
add
or
add
add
xor
add
mov
add
or
add
movl
add
add
or
add
rolb
call
add
add
add
add
push
add
mov
add
call
add
add
add
add
push
add
jo
add
mov
add
or
add
pop
add
clc
jmp
add
or
add
add
loopne
add
call
add
add
add
add
add
add
add
or
add
aaa
add
add
add
add
add
add
add
add
add
add
pop
add
mov
add
add
incl
rolb
add
add
push
add
push
add
push
add
dec
add
dec
add
dec
add
inc
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
cld
add
add
add
add
xor
cmp
xor
xor
inc
add
add
add
add
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
dec
add
bound
and
dec
add
je
ja
outsl
add
imul
add
add
add
adc
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
dec
add
outsb
add
jns
and
push
add
popa
add
jae
and
push
add
jb
jns
add
add
sub
add
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
cmp
add
add
add
adc
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
imul
jo
and
push
add
outsb
add
and
push
add
imul
add
add
pop
add
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
push
add
jne
jb
jb
jns
and
push
add
outsl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
inc
add
push
add
add
add
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
inc
add
add
jae
je
add
add
sub
add
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
cmp
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
sarb
add
add
cmp
add
push
dec
inc
dec
xor
cs
dec
dec
add
gs
xor
fs
insb
add
jb
imul
add
outsb
je
jne
je
fs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
push
outsb
fs
gs
popa
addr16
imul
add
add
jb
imul
inc
add
push
push
push
inc
jae
xor
arpl
addr16
outsb
outsw
inc
arpl
add
add
add
