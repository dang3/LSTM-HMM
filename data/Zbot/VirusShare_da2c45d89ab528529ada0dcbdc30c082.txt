lods
xchg
add
xchg
xchg
add
rclb
movsb
xchg
add
les
add
in
xchg
add
or
add
xor
add
pop
xchg
add
insb
xchg
add
jl
add
jl
add
xchg
xchg
add
pusha
xchg
add
push
xchg
add
dec
xchg
add
cmp
add
adc
add
clc
xchg
add
ljmp
add
xchg
add
scas
xchg
add
xchg
xchg
add
mov
add
insb
xchg
add
pusha
xchg
add
adcb
add
add
xchg
add
sbb
add
mov
add
call
xchg
add
inc
xchg
add
dec
xchg
add
pusha
xchg
add
jb
add
test
add
mov
xchg
add
rclb
add
add
add
add
ficoml
add
cld
xchg
add
or
add
and
add
add
sahf
xchg
add
mov
xchg
add
insb
xchg
add
push
xchg
add
xchg
add
add
add
add
add
and
add
pop
add
addb
add
add
add
add
add
loopne
add
and
dec
lea
add
cli
andl
dec
out
xor
out
movsl
push
int3
int3
int3
int3
int3
lock
dec
adc
jno
cmp
lods
jmp
add
add
dec
cmpsl
sahf
lahf
adc
xchg
pop
adc
push
pop
xchg
xor
mov
aam
push
mov
xchg
sbb
leave
mov
in
jnp
test
inc
flds
jns
sbb
leave
test
roll
mov
mov
insl
mov
clc
bound
add
add
mov
ret
loop
cmpsl
mov
repnz
icebp
mov
push
inc
add
push
mov
pop
mov
add
hlt
push
mov
or
jnp
jge
rorl
stos
dec
mov
mov
in
add
shll
dec
or
fs
pop
pusha
xorps
int3
int3
int3
push
jp
mov
add
sbb
pop
add
mov
adcl
and
inc
outsb
stc
xchg
pop
stos
fnstenv
mov
adc
sub
push
repnz
or
xchg
insb
arpl
mov
xor
in
inc
fld
aad
nop
inc
jg
cmp
add
jl
js
sti
push
xor
mov
stos
jge
xor
sbb
push
xor
mov
stos
ja
in
in
jno
hlt
movsl
pushf
mov
sbb
cmp
pop
cmp
lahf
sub
dec
into
sub
cmc
ljmp
add
mov
sub
arpl
rolb
jl
dec
add
add
fidivrl
lahf
or
adc
nop
stos
popl
xchg
push
decb
enter
jmp
mov
jg,pn
jge
into
dec
lds
fldt
aam
data16
stos
jnp
pop
jo
shlb
push
loope
inc
pusha
add
add
imulb
mov
or
test
fnstenv
push
mov
add
and
mov
fisubl
arpl
insl
mov
jmp
xor
add
add
or
scas
cmpsl
xorl
lret
push
out
inc
adc
aam
lods
into
push
jle
les
stos
rolb
add
add
sbbl
enter
aaa
mull
outsb
mov
mov
jo
jg
fs
and
out
scas
add
jmp
and
xor
xor
fwait
addr16
xchg
cmc
and
cmpl
add
cmpsl
and
inc
test
aam
into
repz
mov
sbb
fisttps
xor
cli
sbbb
push
call
cmp
sahf
jnp
lods
xor
lock
add
mov
gs
add
add
push
faddp
rol
addr16
and
push
loope
xchg
sbb
ret
rcrb
outsl
enter
stos
fdivs
loopne
rorb
mov
add
test
ss
inc
push
mov
jns
aam
jnp
jecxz
mov
jmp
aaa
addr16
sub
dec
mov
pop
sti
inc
push
ret
sahf
sbb
outsb
je
in
inc
xorl
add
add
mov
cmpl
dec
jno
push
mov
sbb
mul
mov
sarl
mov
pop
add
ret
ret
pop
xor
int
aas
mov
rcll
sub
shl
fnsave
sub
sbb
inc
pop
inc
add
add
neg
and
mov
xchg
lods
daa
insl
push
outsl
scas
xchg
shr
mov
mov
pusha
adc
mov
jb
push
imul
frstor
pop
into
stos
pop
mov
testl
mov
addr16
jl
ret
fiaddl
inc
xchg
mov
cmp
pop
sbb
cmc
aad
js
push
push
jno
lds
push
ffree
leave
out
into
push
push
cmpsb
adc
pop
sarb
lods
stc
mov
adc
nop
jnp
jge
mov
popf
dec
enter
mov
test
mov
cmp
push
mov
jp
mov
test
xor
adc
add
add
mov
cmpl
jecxz
outsb
mov
sub
addr16
lods
push
xchg
sbb
add
sub
sbb
daa
add
pop
jg
xchg
inc
xor
sarl
int3
int3
int3
mov
pop
inc
jmp
arpl
and
js
mov
inc
push
xchg
xchg
ds
adc
popl
xchg
ja
inc
imul
xchg
add
add
pusha
or
dec
lock
fs
pusha
xchg
jb
xor
push
mov
popa
jge
push
cltd
mov
xor
pop
test
xchg
pop
das
adc
mov
mulb
cmpsb
dec
push
inc
mov
in
add
pop
das
loope
jecxz
jb
arpl
clc
jmp
les
cmp
popa
inc
xchg
test
and
xchg
mov
ljmp
sub
pop
cmp
loopne
movsb
cmp
outsl
cmp
inc
and
pop
nop
cwtl
mov
dec
movsb
jmp
into
test
sti
in
xor
add
add
push
push
out
daa
icebp
xor
movsb
sbb
fstl
mov
lea
int
test
jp
xor
mov
add
push
scas
test
push
mov
inc
add
mov
fwait
popf
jmp
and
cmpsl
std
lds
add
lock
mov
jecxz
int3
test
jge
scas
pop
addb
neg
push
inc
xchg
pop
jl
ja
jae
je
mov
mov
add
sbb
sub
test
inc
add
mov
andb
xor
xor
roll
xor
add
add
mov
mov
rcl
jne
xchg
dec
ds
add
add
push
xor
jl
sub
insl
pop
xor
cmpsl
fwait
cmpb
or
jge
cmc
out
movsb
or
mov
add
add
sub
push
push
scas
jmp
mov
pop
sahf
xchg
add
add
mov
sahf
mov
xchg
cmp
push
dec
clc
jno
cmpsb
and
inc
push
dec
push
addr16
outsl
mov
jmp
push
imul
add
in
lock
cmp
cmp
push
jns
add
push
lcall
push
inc
sbbl
or
test
psrlw
jge
in
cld
je
mov
pop
ljmp
lcall
xor
add
add
stc
lahf
rol
cld
sti
inc
std
mov
xchg
adc
push
shrl
dec
or
xor
sbb
addr16
movsb
xchg
icebp
sbb
and
nop
push
dec
xchg
add
add
add
jno
cmc
fidivl
mov
pop
push
or
or
and
or
mov
cmove
add
loop
mov
jbe
insb
test
xchg
addr16
cli
adc
sahf
scas
std
out
je
mov
in
mov
leave
mov
sti
pop
loope
rcl
push
ljmp
dec
push
mov
mov
leave
or
rcll
cmc
or
xchg
adc
mov
and
lahf
fdecstp
mov
xchg
pop
fldt
add
jb
movsb
in
divl
jmp
int3
mov
xor
es
cwtl
ja
push
stos
add
jmp
gs
lret
and
jb
cmp
jnp
hlt
add
add
data16
sbb
cld
jmp
mov
xchg
clc
daa
out
push
inc
mov
jno
stos
lret
iret
in
adc
inc
jp
lds
and
sub
xchg
sbb
in
xor
push
nop
sub
push
lcall
in
jne
adcb
mov
cmpsb
mov
mov
fs
rclb
add
xchg
daa
pi2fd
and
ja
fsts
xchg
cld
add
add
xchg
xchg
pop
xchg
sub
into
outsl
push
ficompl
adc
add
add
add
push
es
sub
xchg
ja
imulb
add
add
mov
xchg
xor
ljmp
inc
ja
imul
fsqrt
cmp
inc
psadbw
dec
pop
shrb
dec
je
inc
mov
mov
mov
add
push
int3
jge
sbb
dec
or
push
test
shlb
sahf
pop
dec
mov
les
cmp
xor
push
sub
push
pop
stos
or
add
fisttpll
xor
insl
cmp
cmp
insb
loopne
movsb
dec
stos
movsb
xor
lods
stos
inc
pop
xchg
mov
push
add
add
or
jmp
enter
shrl
ficompl
leave
mov
imul
push
pop
mov
adc
push
inc
push
add
int3
int3
int3
int3
add
add
mov
inc
in
mov
hlt
dec
jno
orl
push
cmpsl
xchg
jmp
imul
xchg
push
aaa
loopne
adc
out
push
adc
xor
fwait
mov
xlat
push
incb
or
and
mov
fsubrp
push
leave
es
pop
adc
xor
mov
add
sub
jno
cmp
clc
dec
inc
dec
adc
popa
dec
movsb
mov
imul
scas
popa
enter
test
push
push
loopne
call
pop
lret
mov
sub
fisubl
xchg
and
inc
das
add
add
dec
movsl
pop
mov
imul
in
xchg
sarb
int3
int3
int3
int3
int3
add
mov
add
out
dec
mov
ror
out
in
enter
stos
dec
shrl
fwait
lods
adc
ret
lret
mov
add
dec
pop
sbb
stos
in
add
cmc
xor
ljmp
mov
stc
push
push
aam
mov
js
pushf
inc
adc
mov
add
push
int
imul
pop
into
pop
clc
divb
xlat
into
dec
adc
stos
mov
dec
lds
pop
pushf
jns
xor
bsr
es
outsl
xchg
add
add
mov
cmp
xchg
sarb
clc
xor
xchg
loop
inc
test
jb
jp
mov
xchg
sahf
push
in
xor
inc
inc
xor
ficoml
data16
sbb
cmpsl
aas
mov
aaa
ret
mov
lret
mov
adc
lcall
jbe
add
add
jl
into
pop
jg
and
mov
dec
sarl
leave
stos
data16
cltd
push
lds
add
shl
push
xor
mov
out
daa
pop
test
and
xor
pop
push
xchg
xor
jno
inc
mov
movsl
shll
mov
roll
add
test
add
push
out
movsb
rcrb
cli
sbbl
fldenv
cwtl
loop
cmp
mov
mov
push
mov
mov
hlt
mov
add
add
and
jge
pusha
stos
dec
inc
popf
jg
xor
insb
sub
ret
outsb
cld
inc
jp
inc
jne
inc
cmp
cmpsb
jmp
xchg
popf
sahf
mov
fidivs
movsl
in
push
je
stos
cmp
js
scas
pop
inc
mov
mov
add
add
push
or
add
js
xchg
xchg
xchg
in
out
mov
pop
xor
stc
nop
xlat
fwait
repz
mov
push
pop
mov
mov
pop
add
add
adc
mov
das
xchg
and
inc
cmp
add
cmp
xor
and
leave
sub
sbb
loope
add
add
inc
or
or
dec
lahf
dec
andl
and
mov
subl
add
shlb
enter
jbe
in
ss
add
sbb
out
or
hlt
xor
mov
xchg
fsub
mov
adc
push
add
test
sub
mov
pusha
xchg
cmp
add
add
push
jecxz
jecxz
xor
lods
ret
pop
jg
jo
pop
add
jns
loop
aam
inc
push
ss
into
ficoml
hlt
sub
test
jecxz
data16
ret
and
inc
inc
add
add
iret
jns
insw
out
shll
stos
push
fadd
test
pop
jmp
push
ljmp
movl
mov
imul
das
imul
movsb
dec
jns
add
dec
mov
xor
fsubs
or
test
out
sub
cltd
mov
mov
scas
mov
fiaddl
xlat
inc
cmp
jae
sbb
inc
lods
and
in
fwait
or
sbb
fmul
cmp
add
jb
add
scas
and
in
pop
test
test
mov
cwtl
scas
add
inc
fsubs
cmp
adc
sbb
mov
stos
cmp
cmp
xor
push
cmp
mov
pop
fs
pop
leave
stos
ret
pushf
pusha
gs
adc
enter
call
add
or
mov
lods
negl
pop
mov
test
fimuls
add
jae
cmp
dec
pop
mov
icebp
insl
jnp
icebp
inc
inc
xor
sbb
add
jge
pop
adc
add
add
int3
jb
shrl
rcrl
inc
lock
test
jp
add
add
mulb
xchg
inc
lea
xchg
clc
lcall
lds
mov
sbb
iret
xor
shll
test
mov
and
test
push
je
sbb
addr16
ss
shr
dec
popf
pop
push
xlat
popa
insb
lahf
mov
fmuls
add
add
call
inc
lret
insl
scas
lcall
cli
xchg
mov
inc
jge
jle
mov
fnsave
push
add
lcall
sub
pop
cmpsb
sbb
vmovups
xor
mov
add
add
lods
negb
mov
ja
rorb
fidivrs
jmp
insl
in
aam
pop
xor
cmp
lods
mov
sub
add
add
cmp
lret
arpl
pop
push
filds
push
push
nop/reserved
stos
pop
sti
fidivrl
dec
sarl
mov
out
push
lret
push
sub
add
add
add
cld
and
sub
mov
ds
lret
cmpsl
fs
sub
in
loopne
pushf
pusha
sti
aad
mov
add
jb
movsl
nop
insl
pop
jg
sbb
xchg
loope
jo
push
cmp
mov
outsb
push
inc
movsl
adc
repnz
jle
add
mov
rcr
mov
lock
mov
leave
mov
fldenv
insl
pop
or
mov
outsb
shrl
adc
std
je
cmc
jbe
loop
mov
int3
ja
cmp
aam
mov
ret
adc
add
add
addr16
xor
add
push
cwtl
into
aas
adc
jp
push
hlt
cmp
xor
jp
cwtl
push
cmp
bound
aad
push
cmp
sbb
out
pushf
xor
int3
int3
adc
in
data16
push
mov
adc
and
add
add
cmp
adcl
inc
mov
jmp
clc
xchg
mov
test
insb
nop
mov
cli
mov
idivb
imul
cs
adc
add
add
into
test
repnz
xor
testb
cmp
inc
sbb
mov
cmpsl
aaa
mov
hlt
jecxz
xchg
sti
sub
adc
sbb
cwtl
sub
cmpsl
movsb
pop
arpl
repz
xchg
insl
add
cmp
push
std
adc
add
add
jae
mov
adc
addr16
pop
mov
cli
and
sbb
mov
sbb
shrl
dec
lret
fninit
aam
xchg
rclb
xchg
icebp
shll
inc
leave
data16
dec
les
out
pop
cwtl
lods
sub
cmp
sbb
xchg
and
add
ret
pop
cwtl
or
scas
rolb
rcl
adc
ljmp
mov
imul
push
insl
pop
loope
dec
adc
icebp
jne
inc
cmp
in
mov
mov
adc
xor
repnz
sbb
mov
mov
jmp
sahf
push
add
add
cmp
imul
and
in
jle
shlb
shlb
addl
int3
loop
and
cmp
je
fsts
and
pop
mov
fsin
xlat
out
sub
vaddsubpd
jb
mov
add
mov
xchg
jae
lds
xor
dec
adc
in
cmpsb
lcall
scas
xchg
loope
ret
mov
and
and
daa
std
push
call
loope
inc
adc
jns
push
add
nop
mov
aas
mov
mov
popa
outsl
cltd
pushl
push
xchg
push
cs
add
sahf
cwtl
lock
nop
scas
test
addl
pop
es
pushf
add
insl
jge
lcall
mov
push
push
jae
dec
add
or
jecxz
data16
mov
psubusb
mov
mov
leave
cmp
jbe
add
add
push
fiaddl
cmpl
mov
pushf
addr16
mov
cmp
dec
jbe
inc
adc
add
mov
repnz
div
fistl
gs
rcr
jno
mov
xchg
int
jecxz
bound
das
mov
bound
orl
test
out
loopne
sub
jb
lock
es
mov
sbb
add
jge
icebp
clc
loop
adc
test
rolb
mov
adc
and
mov
loope
int
fidivrl
sbb
jle
dec
fcmovnb
pop
sub
add
cmp
xlat
hlt
test
test
sbb
dec
fisttps
daa
ret
aaa
out
mulb
pop
fiadds
xor
lods
enter
incl
add
lods
dec
popa
jb
aaa
imul
test
sbb
aas
and
leave
sti
into
pop
mov
in
or
fwait
int
enter
in
setns
jmp
push
cwtl
add
add
sbb
or
sub
lock
push
adc
int3
int3
int3
mov
imul
stc
xor
or
in
daa
jbe
movsb
jne
and
cmp
cmp
dec
pop
aam
jle
inc
cs
test
xor
push
cli
push
pop
add
add
and
sbb
aaa
push
add
jl
sbb
jb
xchg
outsb
add
sbb
mov
sub
dec
nop
xchg
lods
sarb
xor
test
inc
cmp
cmp
inc
mov
loopne
ret
cmp
or
xchg
and
add
add
lods
push
push
repnz
add
lock
adc
sbb
add
xchg
fwait
xchg
leave
dec
dec
mov
inc
js
test
xchg
fistpl
adc
adc
mov
push
xchg
gs
sbb
imul
jle
std
aad
add
add
pop
mov
dec
in
jb
jno
pop
data16
rolb
jno
stos
adc
ret
push
mov
add
add
test
les
test
aaa
xlat
cltd
jmp
adc
int3
int3
int3
cmpsl
cld
loope
cmpsl
scas
mov
cmp
push
cltd
repnz
sbbl
scas
inc
jp
adc
lock
cmp
notb
add
repnz
mov
jo
mov
adc
dec
stos
push
push
mov
or
movsb
adc
lods
jno
dec
mov
push
jge
and
mov
sub
adc
cmp
out
dec
cmp
lret
jg
add
imul
adc
fbstp
add
mov
add
add
scas
cld
sbb
icebp
cmp
cwtl
sti
repnz
jg
add
push
aas
imul
std
push
push
in
push
shlb
push
shlb
out
out
mov
and
repz
test
push
loop
mov
mov
add
jle
add
outsl
int
pushf
push
mov
push
daa
mull
xor
and
xor
and
add
xchg
jecxz
ss
test
mov
push
ret
sbb
sub
push
push
add
sahf
jl
lea
ret
lcall
int
add
lods
fwait
ret
xor
and
mov
bnd
pop
out
mov
mov
ret
sub
pop
in
popa
cmpsb
stos
cmp
outsl
movsl
fwait
mov
add
xor
mov
mov
out
push
out
nop
jo
mov
std
sub
dec
pop
add
add
jns
movsb
cmp
sahf
or
dec
cwtl
lcall
or
dec
pop
adc
loopne
mov
xchg
or
out
cmp
mov
movb
xchg
mov
mov
sbb
xor
push
mov
jae
roll
add
or
xor
dec
mov
mov
addl
sub
and
pop
push
nop
aaa
test
popa
and
push
lds
mov
pop
js
push
lds
rcll
sub
mov
dec
xor
roll
add
lods
jbe
dec
cmp
jg
loopne
push
gs
shlb
or
lods
mov
or
jecxz
cmp
daa
and
into
xchg
sti
cli
mov
or
inc
std
push
lahf
aaa
cs
mov
and
mov
jnp
add
mov
sbb
aaa
push
sbb
fmull
test
add
dec
cmp
add
stos
out
mov
cli
aaa
pushf
scas
das
add
add
and
xor
push
xchg
out
xchg
mov
pop
mov
mov
outsl
or
mov
insl
xchg
testb
mov
jecxz
xchg
test
int
mov
je
outsb
cld
aas
fidivrl
adc
cmp
pushf
out
mov
add
aaa
sldt
add
xor
dec
lea
idiv
mov
cmp
int3
int3
int3
test
daa
jmp
mov
mov
adc
cltd
pushw
dec
sbb
mov
inc
adc
inc
xchg
cmp
jne
pop
mov
adc
and
jo
mov
adc
add
push
hlt
inc
xlat
hlt
and
xchg
jo
imul
add
cld
fwait
push
int
gs
rorl
rcrb
lea
jno
jge
test
popa
and
mov
div
sbb
imul
pop
rorb
mov
sbb
mov
in
push
sbbl
ljmp
mov
jle
push
in
ljmp
daa
popa
cwtl
sbb
cmp
or
loop
int
add
add
mov
shl
adc
push
lds
push
mov
arpl
mov
dec
hlt
inc
lahf
lcall
adc
add
jmp
xor
insl
ss
jmp
js
cmp
inc
push
jg
cld
sbb
add
push
clc
xchg
in
cs
addr16
mov
sbb
incb
adc
leave
outsl
and
clc
or
adc
enter
pop
movsb
lret
mov
popf
xorl
sub
aaa
cmp
or
inc
push
adc
addr16
sub
xor
dec
inc
jne
mov
cld
xchg
xchg
mov
adc
add
pop
inc
cmp
push
lods
pushf
lret
cli
mov
mov
cli
mov
call
cwtl
call
jp
sub
mov
and
sar
outsb
mov
add
fs
repz
pop
and
push
stc
pop
mov
add
stos
jecxz
push
jp
mov
movsb
test
stos
cmpsl
adc
adc
xchg
stos
add
xor
push
lods
pop
leave
jno
add
add
das
sbb
add
jne
mov
mov
jl
fs
pop
and
push
lcall
mov
mov
pop
dec
xor
add
hlt
test
adc
add
add
pop
mov
adc
xchg
cmp
jmp
add
jnp
sub
push
cli
out
addr16
push
jne
je
pop
call
jne
cwtl
es
add
pop
pop
push
fistl
mov
add
add
push
or
and
jle
mov
mov
loope
mov
mov
sbb
call
stos
add
mov
add
fildll
test
je
xor
push
adc
push
sbb
or
int3
sbb
cmc
test
xchg
and
push
inc
inc
pushf
xchg
pushf
aaa
lods
push
addb
xor
test
das
es
outsl
imul
aam
or
loopne
das
gs
add
add
add
pop
fsubp
mov
shlb
fists
out
mov
xchg
lahf
jle
test
es
mov
nop
jge
pop
imul
pop
mov
sbb
add
add
movsb
sub
mov
scas
dec
adc
out
daa
push
jne
add
mov
in
mov
adc
fidivrl
dec
push
push
lret
sar
xor
mov
mov
add
push
out
add
leave
dec
out
icebp
cmp
and
push
jne
dec
js
push
paddq
int3
int3
int3
int3
and
clc
loopne
xchg
js
xchg
popa
inc
pop
ljmp
ja
sub
sbb
jmp
dec
dec
inc
stc
mov
dec
mov
nop
xor
shl
mov
pusha
mov
cmp
testb
push
or
or
mov
push
jo
fldl
push
loop
add
add
adc
pop
push
jo
loop
jp
xchg
dec
fwait
cli
aas
mov
mov
xor
int3
loope
sbb
mov
lea
addr16
loop
inc
outsl
inc
aaa
stos
hlt
push
or
add
add
mov
adcl
or
mov
add
call
mov
push
mov
cmp
icebp
movsl
add
add
adc
shll
aaa
jb
dec
mov
out
aas
push
movsb
cmpsb
add
add
mov
popa
jle
ds
in
pop
add
jb
mov
adc
loope
out
jnp
adc
adc
test
or
lock
add
inc
and
mov
in
popa
and
out
orb
stos
das
loope
int3
int3
int3
jge
lods
jne
pushf
jns
leave
orb
mov
lds
add
aas
nop
ss
sbb
insl
add
or
insb
nop
outsl
xchg
dec
or
movsl
sbb
pop
adc
cld
mov
mov
lock
mov
pop
arpl
cmp
and
or
mulps
mov
mov
jns
push
mov
sbb
push
mov
jp
pop
push
pop
sbb
jnp
mov
xchg
mov
xchg
loope
lock
add
push
movsb
outsl
into
fisttpll
dec
xor
je
aam
jmp
add
adc
lcall
out
mov
scas
loope
lret
inc
lcall
mov
push
shlb
push
xchg
cmp
movsb
in
cmp
jge
stos
jp
mov
add
cmc
ljmp
rcrb
dec
mov
test
xor
lea
popa
push
inc
bnd
jns
inc
add
mov
fisttpl
xchg
jmp
rorl
push
sarb
jb
sub
mov
movsl
outsl
pop
sbb
int
jp
mov
rolb
out
out
mov
insb
stos
lcall
stos
push
pop
or
xchg
mov
push
js
sub
xor
out
xor
mov
sbb
scas
xor
outsl
fildll
ljmp
add
fwait
test
punpckhbw
dec
call
fwait
pop
rcr
jge
aam
adc
fidivrs
call
cmp
mov
ret
xchg
cmpsl
sti
repnz
pop
jmp
xor
mov
xchg
lds
outsl
popl
add
add
mov
cmp
repz
pop
jb
cwtl
and
testb
mov
jge
test
lcall
addr16
mov
mov
jb
inc
mov
mov
loop
imul
mov
jecxz
rcr
shll
aaa
mov
hlt
mov
add
add
add
in
add
fucomp
out
rclb
mov
inc
add
pop
pop
mov
fidivl
push
inc
je
loope
and
xchg
xor
jbe
out
cld
aaa
loop
mov
das
sub
mov
or
push
mov
and
and
std
dec
in
test
scas
mov
pop
add
lock
jae
inc
sbb
inc
xor
mov
aaa
subl
sbb
mov
loop
push
lock
xchg
jg
stos
adc
stc
cmc
in
test
mov
movsb
bound
cmp
lret
xchg
pop
pop
roll
sub
add
cld
cmp
gs
arpl
cmp
clc
inc
xchg
scas
lock
inc
jmp
dec
jle
lock
xor
ret
call
ror
in
sti
fadds
add
add
and
adc
or
aam
leave
in
push
mov
xor
add
mov
stc
int3
je
es
call
jecxz
je
fwait
mov
push
jp
pop
outsb
jbe
or
sub
push
xchg
ljmp
shlb
jne
fsubp
int
mov
mov
jae
loope
lcall
loop
scas
sub
add
add
sub
jb
out
test
mov
cs
leave
loope
int3
int3
int3
cmp
mov
ds
fs
cmp
iret
sub
xor
xchg
xor
pop
jle
fsubrl
inc
mov
pop
xor
add
add
mov
mov
jae
add
jmp
pop
dec
add
int3
dec
mov
inc
mov
lods
sbb
cli
gs
cmp
icebp
mov
punpckhdq
aad
pop
push
fisttpl
fisubrl
ret
out
jnp
mov
mov
add
add
iret
cmp
sbb
mov
or
addr16
outsl
mov
inc
ret
rcpps
daa
push
fists
xchg
inc
pop
mov
lea
arpl
fs
pop
mov
dec
jns
imulb
add
jns
imul
add
mov
xor
imul
icebp
xchg
mov
aam
add
gs
addr16
and
ds
sbb
mov
ror
dec
int3
leave
ss
push
dec
iret
cmp
icebp
pop
inc
add
add
jl
fldenv
sbb
push
repnz
xchg
adc
aam
sbb
outsb
jmp
sub
repnz
xchg
repz
inc
mov
xor
jo
clc
sbb
mov
and
adc
adc
mov
fsts
mov
outsl
cmc
aad
in
dec
fst
movsb
add
add
repz
and
jno
mov
add
rcr
add
shrl
add
add
arpl
das
lds
cmp
movsl
sbb
jmp
nop
mov
push
shl
add
rol
push
stos
sbb
pusha
cltd
lret
or
das
ljmp
inc
dec
push
lods
into
inc
movsl
add
add
lods
sub
int3
int3
icebp
mov
jle
xlat
or
add
add
bound
rclb
sti
or
dec
in
imul
movsb
mov
mov
inc
out
or
dec
or
add
add
andb
ret
sub
and
stos
mov
cmp
xor
sbb
mov
or
mov
gs
out
jecxz
xchg
sarl
movsl
shrl
push
and
lds
outsl
dec
repnz
and
imul
in
jo
cmpsl
xor
mov
add
sbb
xchg
test
or
vpunpcklwd
sub
inc
hlt
add
add
push
inc
rclb
xlat
sub
ljmp
jo
push
add
add
and
xchg
sub
mov
into
xor
push
gs
pop
fs
push
fwait
std
ss
sahf
lea
add
add
mov
imul
shrb
push
insl
icebp
lods
pop
sbb
lret
out
fwait
jno
jecxz
and
ds
sarb
iret
and
test
or
push
icebp
cmp
fwait
cmp
and
dec
pushl
mov
mov
bound
push
add
add
mov
dec
push
ret
mov
rorl
mov
xchg
hlt
mov
int3
or
call
lods
aam
in
fidivrs
and
cmpsb
jb
ds
push
add
add
jmp
mov
pop
aas
lahf
lahf
push
mov
test
xchg
ja
jb
jne
push
test
xchg
ja
pusha
pushf
stos
jo
loope
or
icebp
inc
nop
add
mov
fs
or
scas
and
lock
icebp
pop
cs
xchg
add
add
ror
daa
in
bswap
out
test
jb
lcall
sbb
je
and
cmp
mov
xor
pop
cs
iret
insb
sbb
cmp
mov
mov
sahf
test
pusha
testl
cmpsb
clc
jae
insb
aad
mov
test
sbb
sti
mov
fsts
pop
stos
outsb
jo
inc
mov
in
add
add
cld
aas
mov
inc
int3
fdivrs
pop
call
mov
push
sbb
add
add
shlb
jl
aad
pop
fistpll
je
loope
sbb
jno
dec
fcmovb
cmp
loope
rcll
std
into
adc
adc
add
xchg
and
add
ret
sub
jle
scas
je
cwtl
hlt
in
movsl
aaa
mov
pop
push
lahf
lret
je
mov
ds
shlb
sub
adc
and
mov
push
add
add
dec
pushf
adc
imul
clc
outsl
mov
cmp
les
push
in
out
pop
pop
mov
imul
mov
movsl
sbb
jge,pn
imull
les
or
mov
push
cmpsl
insl
aad
ljmp
jecxz
out
jle
jl
add
add
icebp
lods
es
fildl
mov
imull
int3
mov
hlt
pop
sbb
loop
call
ficoml
sbb
cli
pop
mov
fwait
jbe
scas
xor
xor
ret
adc
mov
out
push
cmpsb
ss
sub
lret
or
out
add
scas
call
adc
les
xchg
dec
jmp
fisttps
loopne
std
jg
jl
jno
out
mov
fwait
pop
push
inc
repnz
inc
icebp
add
add
or
mov
lea
xchg
adc
pop
sahf
jo
outsl
jl
movsl
pop
mov
enter
jmp
int
cmp
out
push
lcall
lods
adc
loopne
xor
pop
inc
sbb
pop
xchg
fistps
add
add
add
andb
ret
sub
enter
test
popl
cmpsb
sub
mov
mov
out
and
or
xchg
arpl
mov
adc
mov
scas
add
add
shlb
call
pop
fcomp
iret
add
add
push
or
xor
mov
test
inc
je
fdivrl
int3
int3
int3
fimuls
pop
mov
into
jo
out
sbb
push
add
fwait
mov
aad
imul
sbbb
inc
repz
iret
notb
and
icebp
xor
lods
cmp
dec
int3
add
add
cmpsl
mov
loopne
jp
jecxz
insb
aaa
fwait
test
push
adc
mul
push
sbb
imul
je
sbbl
cmc
int
adc
addl
push
gs
push
popa
sub
test
push
test
mov
sub
loop
add
movsl
je
mov
imul
adc
test
and
in
aam
xchg
int3
mov
in
stos
and
int
pusha
inc
jns
push
sti
xchg
cltd
mov
push
fs
mov
mov
add
pop
jno
mov
jbe
mov
and
ljmp
cmpsl
sub
mov
iret
pop
or
fs
sti
rorl
icebp
sbb
gs
adc
mov
movsb
and
lods
js
push
call
mov
and
std
mov
adc
lcall
inc
dec
test
test
loop
pop
test
pop
pop
fadd
add
add
jle
movsl
inc
and
ja
mov
xchg
call
loop
pop
xlat
inc
push
sbb
sbb
repnz
sub
sbb
insb
dec
fcompl
loope
pop
push
add
push
add
add
cmp
aaa
mov
add
sbb
int3
int3
sub
fidivl
das
call
mov
mov
push
inc
fstp
dec
lcall
mov
gs
pop
dec
and
pop
popa
test
arpl
cwtl
rcrl
shlb
and
into
add
cmpl
inc
add
add
jb
jp
sarb
testb
jmp
in
ret
dec
push
ljmp
sbb
and
dec
sbb
arpl
mov
pop
inc
lea
dec
mov
gs
xchg
adc
scas
mov
fimuls
sbb
cmc
not
shl
shr
dec
aas
icebp
or
xchg
or
jo
add
jecxz
push
adc
mov
xchg
lds
or
loope
fcomps
scas
aad
dec
fistl
add
add
mov
sub
add
out
dec
test
out
cmp
loope
inc
mov
sbb
add
xchg
xchg
sub
xchg
adc
int
cmc
arpl
pop
lds
shlb
adc
scas
mov
or
dec
ret
jecxz
fstpl
data16
test
add
add
add
sub
jg
repnz
xor
dec
dec
and
sbb
icebp
dec
call
dec
jae
out
popf
xorl
cmc
xchg
pop
loopne
mov
xchg
movsl
mov
inc
lcall
or
fstpl
push
mov
pop
out
daa
jecxz
movsb
iret
lret
addb
add
outsb
sub
cwtl
xchg
test
push
addr16
cld
lock
leave
loopne
and
sbb
inc
mov
dec
rolb
fidivrl
imul
lock
ss
das
add
jg
push
jne
lods
mov
xchg
and
xorl
nop
and
add
sti
ret
ja
adc
mov
lds
mov
adc
add
add
adc
inc
incl
sbb
xchg
into
fcmovb
pop
mov
mov
repz
scas
cmc
into
fisubrs
arpl
inc
pop
sarl
adc
add
add
in
mov
lcall
nop
int3
ss
shlb
cmp
cmc
aam
lds
xchg
cld
mov
fwait
movsl
das
jnp
pop
in
movsl
divb
out
sbb
mov
sub
add
xchg
aad
insl
loopne
data16
enter
inc
bound
out
iret
daa
mov
add
sbb
cs
inc
sbb
xor
cmp
lods
jle
cmpsb
das
mov
int
pushf
aas
loope
pop
push
push
pop
jg
dec
sbb
cmc
add
out
pop
dec
gs
add
add
mov
loop
cli
sbb
inc
outsb
dec
jb
mov
jae
push
adcl
mov
xlat
sbb
adc
aaa
incl
add
add
push
xchg
inc
insl
in
jns
stos
push
cwtl
push
mov
mov
xchg
rclb
adc
push
rol
sub
out
fistpl
test
inc
ffreep
rolb
movb
cli
mov
dec
push
pop
mov
decl
jecxz
in
mov
mov
add
add
scas
xor
xor
sbb
test
cmp
in
js
idiv
int
aam
fiaddl
div
test
dec
dec
mov
or
dec
add
add
mov
int3
int3
arpl
lods
push
jl
icebp
fmul
adc
aam
cltd
fidivl
mov
cld
inc
movsb
cmp
leave
aas
lahf
sub
adc
cmp
jle
adc
cmp
das
fxtract
mov
frstor
pop
cmc
sub
pop
sub
pop
jo
imul
jmp
add
add
adc
sarl
das
fcmovb
push
jge
aam
rolb
and
add
add
sbb
aad
and
insl
leave
xchg
into
fldenv
jno
add
add
mov
rolb
cmp
out
mov
cmp
add
add
pop
dec
lret
jmp
pop
mov
negl
pop
jnp
out
add
ror
mov
fwait
dec
scas
incb
adc
stos
mov
aas
js
bound
and
fidivrl
add
push
outsb
and
fwait
jne
icebp
inc
xchg
and
inc
call
ret
mov
movsl
push
loopne
and
add
add
jns
fimuls
push
pop
mov
add
add
subb
inc
jns
push
mov
aaa
mov
sub
mov
shlb
sub
mov
sbb
rcl
and
cmp
mov
jo
jle
hlt
sub
pop
enter
add
pop
dec
and
mov
inc
out
pop
mov
insb
in
jle
inc
sub
jle
repnz
leave
sbb
or
aad
aaa
cli
jmp
rorl
ss
test
push
xchg
mov
cmp
xchg
sbb
shr
ret
add
movsb
ja
add
add
lret
xchg
hlt
mov
mov
nop
ret
js
sbb
data16
lods
insl
jg
imul
mov
mov
gs
lcall
push
xorl
movl
add
push
push
cli
xor
loope
scas
inc
sub
in
test
notl
cli
jp
sahf
push
stos
push
cltd
sbbl
mov
cmp
fs
pop
lahf
movb
add
sbb
pop
lcall
movsl
lcall
cmp
imul
cwtl
sbb
fistps
mov
xchg
jp
push
pop
jg
jbe
add
xchg
dec
repnz
jp
mov
add
add
arpl
add
mov
and
mov
insl
out
inc
test
mov
push
jmp
jne
sub
pop
div
in
sahf
rorb
and
repz
notl
addr16
sub
mov
loopne
addr16
jl
pop
mov
int
int3
int3
int3
int3
insb
shlb
inc
sarb
or
sub
mov
xor
xchg
iret
sbb
out
fldcw
shl
xchg
cli
loope
iret
insb
xlat
or
imul
mov
fsqrt
sub
pop
or
mov
mov
add
mov
out
and
sti
jp
in
pusha
popa
stos
inc
loopne
in
in
movsb
mov
xchg
push
dec
cmp
out
jne
sahf
dec
mov
xchg
pop
adc
push
add
add
lret
xchg
xchg
repnz
sbb
dec
mov
xchg
adc
adc
cmc
in
add
add
jle
xor
daa
mov
hlt
xchg
mov
and
jne
inc
scas
adc
int3
sub
add
xchg
loopne
dec
and
jb
jl
or
pop
mov
adc
aas
pusha
sub
add
and
movsl
xor
cmp
icebp
out
dec
daa
sub
add
add
popa
dec
sbb
icebp
and
ja
adc
sar
mov
dec
mov
inc
mov
inc
aad
repz
pusha
push
or
iret
fmuls
mov
dec
and
incb
sub
addl
add
cmp
adc
sbb
arpl
jne
stc
xor
add
outsb
hlt
push
cmp
xlat
ret
les
leave
loope
movb
xor
jp
sar
bnd
lahf
mov
ret
out
adc
lds
pop
je
mov
bnd
sbb
add
add
cmpsb
cmp
push
jnp
ret
mov
add
add
sbb
and
mov
or
inc
pushf
xor
shrl
in
xor
into
clc
es
add
aam
out
or
mov
xchg
and
add
sbb
cmp
sub
dec
push
test
cs
sub
push
jns
add
add
adc
jecxz
mov
out
test
cmc
adc
inc
push
dec
add
mov
add
push
arpl
adc
or
mov
add
ret
loop
mov
sub
sub
repz
dec
pop
les
pushf
movsl
in
cmp
cmpsl
inc
test
movsl
mov
into
jecxz
orl
add
repnz
xchg
arpl
inc
mov
outsb
aad
push
and
js
mov
push
add
mov
cmc
pop
mov
lret
notl
sbb
stos
std
cmp
add
add
add
int3
int3
cli
outsl
inc
notb
pop
mov
mov
repz
aaa
adc
xchg
dec
push
andl
sbb
enter
push
xor
stc
pop
sub
sbb
cli
and
add
add
rorl
xchg
mov
push
mov
ja
enter
sbb
shll
adc
or
scas
jle
aas
cli
inc
imulb
lcall
maxps
mov
rcll
mov
jecxz
mov
push
add
add
push
dec
adc
out
and
mov
into
sbb
out
lahf
jle
fistpl
out
push
mov
fdivrl
ret
push
add
mov
push
add
jns
inc
ret
pop
sbb
and
inc
add
es
add
add
std
jecxz
lds
inc
jmp
jmp
sbb
lret
xchg
mov
insb
and
fildl
imul
pop
xor
push
ret
add
adc
xchg
add
add
outsb
jne
mov
repnz
inc
fiaddl
add
shlb
adc
sub
cmc
insb
add
add
stos
lahf
loope
cmp
popa
cld
leave
and
cli
mov
sub
xchg
nop
fcoml
mov
and
jnp
or
test
dec
daa
pop
hlt
call
inc
sub
push
push
pop
rorl
xchg
je
std
sub
and
mov
pop
and
aaa
dec
mov
push
aas
out
in
add
jae
add
mov
lret
insl
dec
jmp
fisttpl
sbb
test
rcrl
inc
cwtl
call
stos
mov
jmp
icebp
loopne
push
repz
and
jecxz
or
inc
repnz
or
adc
add
add
sub
mov
mov
lahf
xchg
leave
ss
insb
push
insl
xchg
sub
pop
mov
fdivrs
and
jge
nop
pop
int3
int3
int3
int3
movsb
out
repnz
daa
aam
pop
add
adc
add
add
clc
xchg
clc
mov
scas
or
ljmp
lock
push
push
sbb
movsl
sar
jo
inc
adc
sahf
sbb
icebp
mov
clc
or
jecxz
iret
loope
add
add
mov
jecxz
loope
xor
dec
frstor
mov
cli
mov
or
add
jmp
sbbb
dec
pop
inc
inc
dec
int3
pushl
daa
mov
mov
stos
leave
es
push
add
out
push
add
sbb
adc
add
ficomps
popf
xor
cmpsb
cmc
add
add
test
jno
je
xchg
ficoml
push
pop
bound
pushf
insb
dec
cmp
test
mov
test
out
testb
into
mov
dec
loope
sub
add
add
jo
mov
add
nop
push
adc
imul
popf
jp
std
aad
mov
les
mov
popa
ficomps
dec
inc
stc
or
xor
sub
movsl
lods
pop
fdivrs
adc
mov
add
add
stos
push
sub
add
push
clc
jp
fidivrl
xchg
pop
and
pop
adc
cltd
pop
inc
mov
lods
push
out
xor
push
sub
mov
add
add
jb
imul
mov
rcll
bound
inc
inc
cmp
xor
mov
subl
test
lcall
cmp
scas
inc
pop
cli
popa
idivb
pop
int3
into
pop
dec
in
pop
push
jecxz
jl
lcall
push
sub
gs
mov
sub
inc
aad
in
xchg
mov
add
add
push
cli
aas
rorb
mov
jae
imul
mov
pushf
dec
pop
and
pop
and
enter
jno
mov
xor
and
jne
fsubrl
jle
out
test
iret
imul
pop
mov
add
add
lahf
mov
out
dec
fwait
mov
rcll
fbld
repz
loopne
or
add
rcrb
xor
outsl
test
aaa
mov
popa
add
lret
les
xor
test
xchg
lahf
sti
sar
push
divb
psllw
cwtl
sbb
push
daa
and
mov
mov
xchg
pop
and
and
add
add
loope
sub
int3
int3
int3
aaa
adc
xchg
rorb
pop
add
jae
ret
insb
test
mov
insb
shll
mov
mov
int3
jnp
push
in
cmc
ds
aam
add
ja
inc
cmp
shrl
loope
int
mov
push
push
mov
movsl
pop
push
mov
ret
jmp
fwait
das
cmp
lahf
sbb
lods
adc
loope
jp
outsb
cmp
xchg
shlb
nop
out
hlt
rcrl
testl
orl
push
sbb
jecxz
cmp
rcll
ret
add
mov
in
scas
and
ret
push
sub
xchg
mov
testl
mov
mov
loope
cs
mov
jle
cmp
or
fwait
testb
add
fsubr
clc
and
mov
xchg
cmpsl
jnp
das
lcall
mov
mov
adc
add
inc
cmp
mov
jmp
aas
sbb
dec
scas
repz
in
ljmp
cmp
pop
nop
or
aam
cld
add
pop
and
testl
push
xchg
xlat
lcall
dec
in
shll
add
cwtl
popa
mov
adc
inc
lret
add
inc
inc
in
inc
stos
jb
mov
lods
mov
test
sub
pop
out
in
push
test
mov
fiadds
loop
int
add
dec
stos
xlat
lods
sbb
inc
addr16
inc
mov
pop
std
dec
dec
pop
mov
roll
insl
add
add
pop
adc
xor
cmp
jle
loope
mov
add
lahf
imul
es
mov
xchg
int
rclb
mov
add
adc
adc
outsb
and
fcomp
jae
enter
xchg
pop
jno
movsb
test
sub
sbb
add
add
lcall
das
js
dec
mov
xor
dec
mov
sbbb
cmc
das
lcall
inc
push
or
or
dec
data16
addb
iret
pop
int
cmp
lods
sub
cs
repnz
lret
rcll
xor
outsb
dec
inc
fistpll
mov
mov
push
xor
sahf
mov
jmp
add
add
sub
insb
sbb
outsl
test
mov
fs
add
aad
loope
bound
loope
and
lret
scas
movhps
or
and
stos
hlt
sub
and
repnz
pop
jp
xchg
push
cmpsb
popa
adc
add
add
mov
cmpsl
rorl
pop
out
dec
xchg
frstor
lods
dec
pop
jo
add
add
ror
roll
dec
pop
cmp
popf
movsb
xchg
jg
sub
add
add
loope
jle
jnp
xchg
pop
pop
stc
xchg
mov
jnp
nop
mov
movsb
xchg
faddl
sub
xchg
push
jns
push
ds
mov
stos
xor
add
test
sub
mov
push
pop
fistps
mov
add
or
in
lods
and
in
fsubr
addr16
pop
xor
jno
mov
fs
outsb
cmpsb
stos
mov
add
clc
xchg
push
sahf
jb
out
cltd
and
sub
adc
loopne
outsb
pop
jp
sub
adc
mov
rcrl
jns
dec
pushf
loope
dec
xor
out
jg
push
fwait
cmp
push
fisubl
add
add
inc
push
mov
es
or
push
out
xchg
mov
push
shl
push
aad
movsl
fiaddl
icebp
mov
add
add
jmp
jl
int3
scas
xor
ljmp
icebp
mov
add
add
jno
mov
cmpsl
add
movsb
into
inc
sbb
inc
xchg
mov
mov
out
push
mov
or
mov
push
push
cmp
lcall
cmp
daa
jg
adc
idivb
adc
sub
add
add
cmp
mov
in
rep
jne
add
imul
and
xor
xchg
out
cli
cmp
test
mov
aam
xchg
js
loope
addr16
insb
in
cld
rcll
stos
add
into
mov
add
ret
fwait
push
jbe
push
mov
jns
mov
les
js
cmp
jno
mov
lock
rcrl
xchg
loop
xchg
int3
or
xor
xchg
adc
repnz
arpl
andl
jp
dec
xchg
inc
jmp
stos
adc
add
sub
enter
das
pop
adc
data16
int3
int3
int3
sarl
pop
arpl
xchg
mov
nop
pop
out
cmp
testl
hlt
mov
lock
aam
mov
mov
ficomps
and
outsb
data16
inc
xor
or
and
or
jbe
add
and
inc
sbb
popa
js
popa
dec
dec
mov
lods
das
cmpsb
pushf
sbb
pop
push
lock
sbb
mov
xlat
jbe
lods
push
mov
jl
cwtl
sub
cmp
js
jo
cmpsl
add
add
jl
mov
subb
sub
push
loopne
xor
stos
pop
ror
sbb
push
xchg
push
sub
js
out
mov
fisubl
adc
aaa
add
mov
stos
pop
and
dec
xchg
xor
adc
push
cmc
sub
adc
add
insb
cmp
add
xorb
pop
push
shlb
std
rorl
es
mov
mov
rol
fdiv
iret
out
adc
dec
pop
cmpsl
adc
aad
xor
xor
lds
push
or
push
mov
xchg
or
jae
sbb
test
xor
cmp
add
add
loopne
hlt
ja
jno
fiadds
lock
xchg
mov
adcb
testb
repz
xchg
add
je
imulb
sub
add
add
lret
inc
test
cli
jp
fsubp
int3
ficompl
arpl
arpl
dec
loopne
push
add
cld
jl
insb
push
mov
cmp
retw
in
stos
daa
or
push
lea
xor
repz
leave
ja
in
shl
mov
icebp
hlt
add
add
jno
mov
add
add
xchg
les
push
adc
sub
rorl
add
add
mov
into
fistpll
loopne
cmpsl
enter
push
cmp
adc
cmp
mov
out
or
hlt
dec
lock
pop
or
add
sbb
outsb
mov
xor
test
jp
cmpl
aad
repnz
rolb
pusha
hlt
mov
mov
sub
or
push
push
dec
in
int3
int3
int3
mov
pushf
xchg
jo
dec
xchg
mov
xchg
xchg
pop
insb
aam
aas
leave
push
pop
lea
jp
ss
ss
loope
adc
pop
ret
add
and
fsubp
dec
mov
add
jmp
pop
and
mov
pop
sub
int3
shll
xlat
push
and
sub
jae
testl
mov
scas
les
filds
push
shlb
in
sub
mov
lock
sbb
add
add
lahf
call
push
push
mov
pop
ja
mov
cmpb
enter
pop
mov
add
in
and
aaa
loope
dec
sub
jo
call
insl
mov
xor
adc
and
lret
sub
or
xor
lcall
xor
add
add
sbb
mov
stc
ret
vpshlb
dec
sahf
sahf
cs
mov
push
cmp
in
cmpps
add
add
push
dec
ret
add
leave
outsl
imul
inc
loop
mov
pop
add
add
ds
xchg
push
popa
and
cmp
or
push
pop
push
lahf
stos
mov
jno
insl
cli
or
repz
dec
mov
jae
filds
mov
in
mov
popf
stc
clc
cld
adc
je
mov
imul
xlat
lods
and
test
push
cmp
mov
out
in
and
add
add
fsts
int
cmp
repz
into
sub
in
gs
jmp
add
push
sti
mov
insb
ret
inc
adc
lods
outsb
mov
sti
sub
sub
lods
mov
test
jg
ret
out
pop
mov
push
ss
add
add
xchg
cs
inc
jo
dec
insl
lods
mov
filds
outsb
or
xchg
fstps
je
movsl
xchg
lock
movsb
cltd
imul
push
fst
imull
sub
mov
int
dec
jne
push
jno
cwtl
mov
push
repz
mov
data16
lock
xchg
mov
test
pop
test
mov
sbb
inc
outsb
mov
filds
xchg
cmp
cmp
out
lea
pop
stc
arpl
daa
mov
std
cmp
pop
cmp
mov
jp
ss
jb
gs
mov
pop
mov
fadds
add
add
xchg
inc
test
inc
inc
xor
cltd
push
jp
xchg
repz
bound
mov
iret
sti
sarb
stos
mov
int3
int3
int3
mov
nop
out
pop
int
cwtl
push
dec
sbb
pop
add
add
cld
jnp
push
mov
and
popa
sub
out
adc
jo
ficompl
xor
stos
cmp
shlb
rolb
out
movsl
stc
sarb
lea
gs
cmp
test
adc
xchg
push
pop
shr
fistl
and
and
dec
cmpl
jno
insb
imulb
adc
xchg
lcall
in
sub
xor
mov
loop
in
pop
popa
lds
adc
cmp
mov
dec
jns
mov
pop
add
add
lret
sub
push
xchg
dec
jbe
mov
adc
mov
xchg
js
jl
xchg
cmc
ficomps
and
inc
ds
xchg
test
outsb
mov
add
xor
in
fs
xchg
jecxz
scas
adc
push
mov
mov
mov
jge
mov
movntps
mov
dec
push
loope
cmp
mov
mov
add
sub
adc
push
imul
sub
rcll
ss
add
or
sbb
ja
mov
jb
int
inc
xchg
sbb
shll
push
int
pop
jmp
orl
cs
loop
out
inc
sti
push
adc
xchg
jb
mov
add
add
mov
mov
push
aad
sub
icebp
jle
mov
pusha
sbb
cltd
mov
cwtl
in
push
add
faddl
enter
xor
rolb
add
add
cs
lahf
aam
jp
test
cwtl
adc
mov
sahf
adc
movsl
sub
or
mov
add
std
xchg
and
add
out
add
add
jp
popf
push
xchg
inc
xchg
icebp
daa
jmp
jl
cmc
mov
push
stos
negb
jae
pop
xor
mov
dec
mov
push
and
mov
inc
in
nop
test
add
add
repz
cmp
xlat
hlt
pop
or
cmpsb
fsubs
lock
mov
or
int
pop
xor
inc
je
in
aam
jecxz
add
add
dec
jae
add
push
sub
inc
push
sbbl
dec
ja
mov
mov
notl
mov
xchg
ss
sarl
loopne
ss
mov
test
fstl
in
cmp
add
je
repz
xor
xor
cmp
fcoml
add
add
lods
flds
xchg
dec
pop
xchg
pop
add
adc
ds
push
mov
jge
iret
dec
in
testb
jle
int
sbb
shll
cmp
add
add
xchg
jp
mov
data16
inc
cmpsl
xor
xchg
mov
lret
add
add
jg
adc
movsl
mov
xchg
dec
repnz
push
adcl
adc
cwtl
jle
stc
mov
jmp
pop
imul
adc
sahf
and
jno
hlt
mov
pop
in
gs
adc
imul
int3
int3
int3
add
add
add
dec
xor
cmp
sub
add
sub
shrb
push
dec
or
adcb
lret
add
mov
push
je
sbb
aad
leave
add
add
jl
mov
inc
dec
mov
div
outsb
add
dec
stos
push
add
pushf
and
and
add
add
mov
and
andl
test
dec
push
pop
out
arpl
popf
int3
adc
adc
xchg
das
cmp
stos
out
jp
add
add
scas
jnp
push
sub
andl
jne
or
xor
popa
outsl
outsl
test
xor
shrb
xor
fwait
add
mov
add
add
xor
mov
je
je
xchg
outsb
stos
push
testb
ljmp
add
popf
stos
pop
mov
and
and
xchg
repz
add
add
orl
sub
jle
and
dec
xchg
mov
movsl
pop
stos
rcrb
int
add
add
xorb
daa
xchg
insl
fdivs
or
sub
out
pop
push
mov
pop
pop
popf
popa
xor
ret
or
cmpsl
stc
push
sbb
cmp
lea
pop
sbb
mov
loope
xchg
mov
scas
mov
dec
lahf
iret
test
lea
cltd
movsl
dec
jg
cli
rcr
xor
nopl
insb
or
add
cmpsl
repnz
mov
lods
lea
mov
rolb
popa
out
and
call
add
lock
lds
push
mov
bound
mov
sub
mov
lock
push
lods
mov
negl
std
mov
lret
cli
mov
jnp
and
add
add
loop
imul
adc
scas
ss
xor
fptan
and
cltd
bound
cli
rolb
add
ret
sbb
test
pop
pop
mov
xor
es
xor
adc
int3
int3
jl
lret
sti
pop
jecxz
mov
scas
cmp
test
repnz
and
sbb
cmp
js
outsb
bound
enter
pop
inc
xchg
lods
test
dec
bound
pop
jae
dec
movsl
xchg
scas
je
add
add
outsl
cmpsb
jnp
push
sbb
aaa
lret
adc
pop
out
in
fwait
imul
ljmp
inc
sub
xor
test
sub
cwtl
mov
dec
in
mov
aaa
cmp
mov
mov
mov
mov
sub
mov
fwait
in
lea
cltd
ret
dec
push
dec
and
add
add
push
adc
jns
sbb
in
cwtl
cmpsl
adc
dec
add
lahf
into
int
sbb
xor
out
movsb
lcall
lods
xchg
xchg
mov
sar
scas
xchg
cmc
fisubs
mov
or
popf
insb
test
inc
pushf
outsl
cmp
rorl
add
add
pop
mov
pop
jnp
arpl
or
in
ficompl
loope
sub
pop
pop
pusha
sti
xchg
iret
lcall
test
jb
jae
pop
inc
pop
push
mov
notl
jmpw
push
fsin
sub
pop
stos
enter
sbbb
aaa
daa
lds
cmp
jg
pop
aas
cmp
add
jmp
jns
inc
sbb
add
cmp
jge
in
in
jnp
mov
push
dec
imul
sbb
add
daa
mov
push
adc
lret
aad
xorb
addb
add
mov
mov
shrb
loope
shrd
jne
cli
and
xlat
aaa
push
push
xchg
cli
add
add
add
jge
fadd
enter
sub
mov
and
cmp
lock
cld
lods
lcall
xor
ljmp
aam
push
add
ret
inc
sbb
pop
sbb
inc
cmc
lret
bound
sbb
push
fldl
add
pop
mov
add
ss
sbb
push
insl
iret
gs
aad
das
mov
add
add
cmc
dec
or
clc
je
push
dec
fsubrl
xchg
push
cltd
fsub
xorb
out
or
popf
mov
iret
insb
bnd
mov
add
add
pop
fwait
xchg
insb
les
inc
outsl
insl
xorl
mov
mov
test
push
jo
mov
or
or
lods
mov
push
mov
sarb
cmp
add
add
xchg
ror
int3
int3
sbb
test
shll
xor
decl
negl
pop
mov
negl
add
add
es
adc
insb
repnz
fildl
add
mov
inc
mov
push
mov
cltd
and
int
lock
or
xor
and
adcl
std
loope
inc
or
jo
cmp
cmp
bnd
add
jmp
stos
push
add
insl
leave
aaa
in
or
push
adc
push
add
add
dec
xchg
scas
aas
mov
jne
cmpsb
adc
and
sub
and
into
cmpsl
mov
add
add
jecxz
push
pop
mov
xor
pop
ss
jno
les
lods
sbb
jg
out
mov
aam
push
iret
dec
mov
inc
mov
and
cmp
in
jb
mov
dec
call
lods
pop
addb
stos
push
aaa
dec
roll
add
mov
xchg
rcll
in
movsl
or
test
jmp
cmp
insb
push
xchg
es
ja
shlb
lret
xchg
push
jo
jmp
cmp
mov
arpl
add
add
cmpsl
test
lret
addr16
adc
xchg
or
ss
pop
and
or
neg
mov
insl
lcall
jle
adc
lock
push
insl
addr16
mov
or
gs
lcall
add
sti
cmpsl
testl
fisubs
xchg
call
icebp
mov
lret
loope
pop
cs
idivb
call
mov
sub
mov
cld
aad
fldcw
pop
aas
push
jnp
test
fwait
xor
rcl
jo
fdivl
add
add
cmovs
add
push
mov
imul
or
je
dec
scas
push
jl
add
jbe
mov
out
jne
fcmove
out
scas
lods
sub
ss
rcrb
aad
int
add
add
sbb
pop
mov
and
mov
or
jmp
cmpsb
jecxz
in
jno
dec
cmp
mov
pop
cli
pop
xchg
sbb
stos
adc
push
stc
mov
daa
in
mov
cmpsb
jge
add
ja
jge
pop
jo
rolb
add
aas
ljmp
lea
fbld
pop
mov
jl
inc
lcall
es
cli
sbb
fcomp
mov
jle
xor
mov
add
add
pushf
sub
loop
test
or
pop
push
mov
adc
inc
sub
das
int3
daa
jmp
daa
imul
pop
enter
xor
stos
scas
mov
jns
bnd
or
add
xor
pop
lret
and
add
add
push
push
push
dec
je
xchg
and
iret
adc
in
je
rorb
jo
out
pop
int3
int3
int3
int3
clc
xchg
hlt
bound
xor
or
and
shl
pop
mov
lea
add
add
pop
add
adc
dec
loope
jns
sar
mov
addl
imul
xor
and
mov
mov
lods
cmp
adc
mov
call
insb
cmc
imul
stc
jl
pop
lahf
jns
push
pusha
rolb
leave
mov
add
add
pop
insb
dec
pop
inc
lea
mov
cwtl
lock
scas
ss
out
mov
mov
add
add
xor
mov
mov
into
inc
scas
ja
mov
loope
mov
aam
pop
jecxz
mov
dec
notl
cld
pop
dec
sub
pushf
decl
into
push
aam
cs
sub
mov
mov
xchg
add
add
aad
out
inc
jbe
push
adc
adc
shrb
xor
loope
ss
test
and
add
push
adc
scas
push
cmpl
xchg
and
sbb
xor
cmp
push
pop
xchg
push
and
add
add
sub
add
push
clc
aas
sub
andps
add
inc
cwtl
cmc
idivb
repnz
xor
jb
jbe
add
pop
sbb
jbe
sub
mov
xchg
inc
jns
push
ret
lods
adc
loopne
arpl
sbb
xor
sti
xor
pop
or
pop
int3
xor
mov
popf
adc
testl
movsl
or
mov
addr16
fdivl
add
hlt
xchg
outsb
dec
mov
push
xor
cwtl
ret
out
cmpsl
push
popf
stos
sarl
xchg
pop
cmpsl
add
imul
jmp
mov
imul
adc
sub
mov
pop
in
mov
int3
sbb
cmp
mov
ljmp
fs
mov
push
mov
imul
or
push
decl
fistl
sbb
mov
cmpsl
sub
nop
pushf
xor
xchg
mov
popf
sub
jne
xor
into
dec
fdivr
jl
int3
int3
int3
mov
jl
jp
add
add
mov
enter
inc
inc
nop
pop
cmp
mulb
dec
xchg
dec
push
insb
enter
xor
cmp
sub
arpl
pop
push
pop
movsb
cmp
mov
adc
in
xchg
pop
sub
add
imul
aas
inc
adc
cwtl
xor
and
iret
cli
pandn
loopne
fsts
add
lcall
dec
iret
adc
xor
std
aas
push
decb
xor
and
jge
or
mov
push
jb
movsb
xorl
jmp
xchg
cli
sbb
inc
sub
jne
test
push
std
lea
add
dec
xor
ss
int3
add
dec
mov
outsb
popf
ja
pop
daa
or
adc
or
sbb
cmpsl
cmp
add
pop
mov
adc
sti
inc
mov
mov
cmp
mov
scas
xor
jno
xchg
decb
pop
ret
inc
mov
fmuls
jmp
testl
icebp
imul
rorb
or
lret
mov
and
push
dec
xor
lea
sub
add
add
dec
dec
mov
dec
mov
mov
jmp
push
xchg
enter
add
and
dec
jl
scas
sarl
pushw
cltd
fs
pop
mov
fs
rorl
sub
cmp
push
dec
pop
pop
andb
filds
add
mov
gs
int3
mov
int3
int3
int3
int3
sbb
rorb
or
lahf
adc
pop
push
inc
xchg
hlt
mov
arpl
push
add
push
dec
mov
fsubr
push
fisubl
mov
in
aad
je
add
add
loopne
ljmp
nop
test
test
inc
out
adc
subb
pusha
adc
sbb
pop
mov
ljmp
cwtl
sub
pop
jecxz
inc
cmc
push
mov
pop
pop
mov
xchg
lods
mov
iret
adcb
dec
movzbl
and
jg
add
jmp
adc
repz
xchg
test
mov
das
iret
jae
sub
jne
xchg
leave
jne
daa
add
dec
xor
cmp
dec
rcrw
jmp
mov
add
idivb
add
pop
fwait
icebp
jbe
xchg
lahf
fisubs
out
faddl
and
add
add
scas
inc
mov
outsb
adc
mov
xchg
fstps
lahf
popa
mov
cs
mov
mov
push
imul
pop
sub
rclb
push
inc
ret
pushl
mov
cmp
sti
cwtl
push
test
add
add
ret
jae
push
aas
sbb
pop
scas
cmc
jo
add
or
mov
cmp
xchg
jne
xlat
jge
inc
int
fisttpl
and
out
cld
add
add
jbe
sarb
cld
pop
inc
pop
cwtl
test
sahf
lret
jae
icebp
adcl
xor
xchg
inc
cmp
mov
mov
add
add
xchg
sub
pop
arpl
nop
mov
mov
add
shll
mov
cld
out
daa
mov
push
push
outsl
mov
rep
lcall
loop
sub
std
int
out
add
add
cmp
dec
mov
add
mov
sbb
loop
adc
mov
add
add
jecxz
es
xlat
xchg
jg
mov
xor
cmc
dec
add
add
mov
adc
insb
xchg
add
dec
dec
repnz
outsl
push
stc
jne
adc
jecxz
lahf
insl
jno
pusha
push
push
push
xor
mov
add
sahf
fldl
xor
fsubs
xor
fs
leave
or
arpl
xor
push
xor
add
cmc
jbe
mov
push
test
nop
and
mov
sbb
push
lret
sub
and
jg
add
add
scas
int3
fldl2t
dec
pop
imul
stos
bnd
test
and
jae
add
enter
fs
leave
cmp
sbb
xchg
outsb
cwtl
inc
dec
aas
add
add
push
cmp
jg
xchg
jecxz
test
lret
xchg
out
fimull
xor
sahf
and
inc
icebp
mov
cmp
cld
and
mov
add
add
arpl
rcll
aaa
push
push
arpl
int3
cmp
push
lea
cwtl
loopne
cmpsl
pusha
jge
pop
pop
aam
xor
cmp
and
mov
lds
lahf
or
dec
fildl
add
add
pop
add
cmpsl
mov
sbb
push
dec
inc
xor
mov
xlat
lret
aad
jl
aaa
jno
daa
adc
out
dec
scas
insb
bound
mov
push
out
add
add
pop
xchg
add
ret
fs
sub
int3
int3
addr16
pop
mov
pop
sarl
jecxz
aad
cmp
shlb
mov
pop
pop
push
in
adc
mov
in
dec
mov
add
das
loope
push
adc
dec
rcrl
into
sub
ja
insb
add
test
and
sub
xor
add
pop
lcall
xchg
lock
inc
sbb
stc
inc
push
sub
cmp
mov
test
sbb
std
and
push
inc
add
mov
mov
sti
sub
sbb
test
mov
fidivrl
mov
xchg
xchg
fcmovu
mov
mov
dec
ds
aad
add
in
dec
andb
call
imul
mov
and
cmp
dec
push
lea
mov
push
pop
push
sub
movsl
xor
fstps
mov
ss
xchg
and
repnz
add
add
fdivrl
test
push
dec
out
nop
test
mov
xchg
jle
push
mov
cmpsl
xchg
jbe
xor
popf
lret
mov
ret
and
mulb
add
xchg
test
imul
adc
xchg
push
xchg
or
or
popa
lret
icebp
imul
push
push
add
add
rclb
js
mov
mov
xchg
inc
and
in
pop
ds
inc
add
addr16
adc
iret
pop
outsb
aad
insb
push
cmc
and
out
xchg
lods
pop
jmp
add
lahf
aaa
push
in
les
popa
jbe
mov
roll
adcb
jb
and
je
mov
sub
and
add
add
mov
adc
xchg
ljmp
clc
dec
cwtl
dec
jg
pop
xchg
xchg
and
jmp
and
mov
sbb
push
jae
dec
sbb
test
repnz
imul
xor
cmc
or
dec
mov
int3
rorl
or
pop
adc
push
cmp
inc
scas
add
add
push
shrl
xchg
and
test
pusha
fidivl
in
sub
adc
repz
lcall
mov
bound
pop
and
lds
mov
leave
inc
mov
dec
pushf
jnp
outsb
dec
cmp
add
or
jg
call
push
add
and
cmp
add
add
repz
sbb
jp
or
lods
adc
jge
xchg
dec
insl
out
mov
pop
loopne
jne
xchg
sub
inc
xor
add
add
cmp
jp
fnstenv
std
test
cmp
clc
pop
aam
sbb
popa
es
push
mov
repz
mov
xor
sbb
xchg
out
cli
repz
dec
adc
ret
cmp
int3
int3
int3
push
add
mov
fists
ljmp
loop
sbb
loope
loop
xor
add
add
repz
fs
lock
int3
xor
xchg
adc
leave
aaa
ja
adcb
scas
mov
xchg
jae
in
mov
nop
add
add
jecxz
int3
lcall
fcompl
test
movsl
lret
add
test
dec
into
in
lods
cmp
loopne
in
mov
cmp
add
add
add
fsubs
mov
mov
xchg
shl
andl
icebp
sbb
les
adc
aas
dec
test
sti
sub
xor
inc
addb
sbb
sbb
insl
and
stc
jp
inc
adc
push
jl
stos
notl
add
add
out
or
dec
comiss
mov
and
and
sub
ret
xor
in
add
ja
xchg
cmp
repz
fimuls
inc
loope
add
jl
sbb
leave
frstor
pop
add
dec
stos
rcrb
push
mov
aam
xchg
popl
add
mov
mov
cmpsb
std
sbb
arpl
cltd
mov
dec
inc
scas
cmpsb
jae
mulb
cmp
mov
rep
xchg
pop
sbb
cwtl
sti
std
cmpsb
int3
push
pop
lret
movsb
mov
ss
cmp
mov
pop
or
mov
add
cmc
mul
out
push
add
sub
mov
scas
fchs
arpl
cli
fs
out
jne
and
lret
jo
push
iret
jg
in
test
push
xor
clc
arpl
add
xchg
popa
cmp
imul
mov
sbb
add
add
mov
test
xchg
cltd
or
rclb
mov
int3
inc
mov
sbbb
dec
add
outsl
adc
lock
shl
ljmp
test
or
or
pop
pop
pop
xchg
aam
int
fcomps
xorb
mov
add
in
sub
add
push
mov
xchg
daa
je
add
add
negb
ja
mov
notb
lret
lret
lods
mov
int
and
out
out
xchg
gs
jecxz
mov
and
mov
push
mov
or
lods
add
or
mov
cmpsb
mov
bound
add
add
xor
xchg
mov
lret
cltd
xchg
jg
movsl
insl
rorb
sti
daa
fisubl
iret
adc
je
mov
mov
movsb
iret
pop
mov
je
sbb
aas
lock
int3
int3
int3
test
call
sbb
out
add
icebp
leave
push
dec
roll
jecxz
cli
mov
pop
inc
inc
cld
in
movsb
adc
outsl
in
cs
test
xchg
in
stos
test
xchg
cmp
mov
div
add
add
ljmp
mov
fimull
stos
xchg
cmpsl
pop
ret
mov
inc
mov
sarl
dec
add
add
mov
rolb
aaa
sub
insl
test
lods
mov
pop
inc
shlb
inc
jmp
sub
adcb
add
cld
sbb
imul
enter
fldenv
insb
mov
ds
ljmp
and
add
lock
divb
mov
dec
fst
or
mov
xchg
shlb
mov
aad
sub
and
jle,pn
xchg
int3
push
movsl
enter
mov
rolb
adc
gs
mov
add
add
repz
dec
inc
fiadds
push
xor
addr16
or
movsl
insb
fistps
xor
jns
and
aad
aaa
sub
movsl
dec
fiaddl
add
and
pop
pop
jno
imul
mov
mov
cli
faddl
push
add
ja
popa
dec
js
inc
add
and
sbb
sarb
addr16
mov
das
idiv
das
pop
cmp
mov
or
mov
stc
lock
fbld
rcl
mov
xchg
mov
mov
mov
lret
jns
cmp
or
and
cwtl
pop
dec
add
mov
mov
xchg
shrb
mov
jmp
mov
test
add
add
in
xor
push
rcl
repz
mov
add
and
movsb
jo
data16
mov
and
and
xchg
mov
xchg
xchg
cmpsb
jl
sub
fmuls
sub
in
imul
jb
and
movsb
sti
jno
mov
loop
mov
sbb
fs
hlt
out
fnstsw
jp
push
sti
stos
add
cmp
push
sar
and
loop
movsb
mov
inc
ss
push
xor
cmp
test
out
call
arpl
test
lock
add
add
test
or
xchg
jb
sbb
pop
jb
sahf
test
fdiv
dec
xchg
inc
cltd
mov
adc
cltd
test
push
divl
xchg
jae
jns
adc
lea
and
setne
push
mov
ret
fisubrs
popa
jne
xchg
stos
out
dec
aad
cmp
push
cltd
dec
shlb
xchg
sub
arpl
ljmp
inc
mov
cmpsl
push
ror
imull
sub
add
jo
or
jno
lea
les
mov
mov
mov
je
mov
cmc
outsb
pusha
fs
mov
add
or
ljmp
adc
sarl
mov
mov
in
pop
and
test
xlat
and
and
xor
int3
xor
add
xchg
push
mov
movsl
divb
into
data16
mov
test
stos
movsb
ds
lret
loopne
mov
add
dec
xchg
daa
shr
fstpt
stc
rcll
mov
shl
lret
adc
adc
adc
pop
insb
imul
sti
pop
out
int3
int3
int3
int3
xchg
mov
aaa
fnstenv
fbld
mov
das
inc
cmp
dec
add
pusha
or
and
and
or
adc
je
dec
into
mov
outsl
cmpsb
orb
and
pusha
iret
arpl
sti
or
mov
loope
jp
push
aaa
loop
les
add
add
xor
ror
lahf
add
stc
das
paddq
xchg
and
shll
and
int3
adc
jge
pop
add
xchg
mov
add
pushf
xor
push
lahf
cmc
mov
jbe
leave
movsb
jl
push
negb
push
daa
jmp
test
idivb
and
push
inc
inc
mov
add
add
jbe
jge
sbb
ja
sti
imul
mov
orl
add
add
push
xchg
push
js
jae
lods
lahf
loope
pusha
jl
pushw
lods
fisubl
cli
mov
mov
or
mov
iret
and
lds
fsts
add
es
lods
popl
iret
in
fsubl
outsl
popf
cmp
js
movsl
mov
adc
xorl
test
lret
mov
push
xor
add
sbb
fwait
addb
push
jae
pop
enter
mov
push
push
outsb
lods
hlt
fwait
dec
cmpsl
adc
hlt
inc
rorl
mov
pop
in
pushw
mov
test
push
adc
fs
fiadds
ror
jno
cli
and
mov
cmp
jne
aam
add
add
jno
loope
popa
dec
rolb
xor
push
push
data16
pop
jb
das
push
fisttpl
div
push
das
insl
test
aas
cmpsb
clc
in
add
add
das
lahf
dec
or
xchg
add
in
cmpsb
pop
pop
sub
and
inc
into
push
cmp
mov
out
add
cld
mov
or
shlb
cmp
cmp
inc
shr
shll
testb
lcall
data16
add
cld
outsb
in
cli
test
jae
cmpsl
test
out
jo
mov
inc
stos
stos
mov
dec
mov
fstpt
test
jecxz
int
mov
idiv
mov
insb
mov
dec
inc
cmpsb
xor
ljmp
fs
inc
mov
inc
add
add
nop
mov
sub
mov
jle
not
add
inc
sbb
ja
je
mov
xchg
shlb
jecxz
and
popf
dec
das
mov
inc
xchg
test
and
mov
push
xchg
add
add
int3
int3
int3
mov
insb
jmp
lret
je
leave
in
pop
stos
les
dec
pxor
and
xor
push
cmp
sbb
stos
jo
aaa
mov
daa
mov
insl
fiaddl
add
add
mov
stos
inc
cmpsb
cltd
cmpl
stos
and
cmp
lahf
mov
push
pusha
loop
mov
xor
add
movsb
jmp
or
cltd
sub
xchg
mov
insl
lds
bound
lea
or
jns
add
add
cmp
sub
ficoml
and
jl
mov
adc
jg
aad
xlat
sub
mov
ss
xchg
mov
sbb
and
dec
data16
andl
add
jne
stos
ss
pop
push
mov
sbb
fisttpll
xor
pop
enter
sub
frstor
cmp
divl
jb
push
jle
jp
cmpsl
insl
pop
push
add
add
sub
dec
std
and
cmc
out
fistpl
push
cmpsl
call
arpl
mov
add
sbbl
adc
sub
decl
subl
and
bound
sti
dec
aas
addr16
push
add
add
out
repnz
inc
icebp
into
idiv
sub
mov
mov
pushf
push
dec
cmpsb
mov
jecxz
jb
pop
mov
ret
sarb
xchg
jno
in
stos
or
jmp
icebp
ret
inc
int3
int3
int3
mov
xchg
mov
test
and
add
add
mov
mov
ja
test
xorb
popf
pop
rorb
mov
dec
nop
out
add
jmp
sub
leave
and
jge
push
lea
add
jae
cmp
test
push
dec
ret
xor
stos
pop
add
cmp
add
push
enter
xchg
inc
adc
jae
pop
adc
adc
stos
xor
xor
call
cmp
sti
and
roll
add
add
popa
mov
mov
jg
clc
mov
cmp
pop
push
push
mov
xor
hlt
and
mov
ds
mov
mov
ds
push
and
push
adc
add
xchg
loopne
decb
sub
mov
push
add
jl
imul
addr16
stos
aam
sbb
xchg
lret
mov
sub
lret
sbb
cmc
adc
cmp
pusha
movsl
push
push
sbb
call
xchg
cmp
adc
fidivs
dec
outsb
and
add
add
or
jne
in
add
xchg
daa
aad
addr16
ret
and
mov
ds
dec
es
mov
fistpll
test
add
add
int3
int3
int3
int3
int3
sub
jg
inc
mov
loope
testb
dec
mov
or
iret
mov
cmp
push
faddl
icebp
pop
mov
lods
adcl
fbld
adc
cmp
test
cmpl
add
add
inc
pop
leave
mov
jno
or
mov
sub
rorl
notl
xchg
and
loopew
mov
mov
ds
cmp
jl
mov
pop
insl
inc
xchg
loope
aam
incb
push
popf
mov
mov
test
push
mov
or
jl
aad
das
sub
ljmp
ret
int
mov
int3
inc
jle
andl
add
mov
adc
adc
scas
sahf
inc
jns
pop
push
cwtl
mov
mov
or
push
mov
mov
lret
insb
incl
add
add
and
mov
ss
adc
push
xlat
mov
sarb
sti
out
movsl
test
add
pop
fdivrl
push
sub
add
add
movsb
xchg
mov
jae
fcoml
jo
inc
push
popf
xchg
stos
lahf
stos
fdivs
adc
mov
call
rol
test
sbb
mov
adc
mov
fsts
jmp
fwait
push
cmpsl
aam
mov
cmpsb
addr16
sbb
jmp
int3
int3
int3
ss
lods
insl
sahf
iret
nop
mov
rorb
or
adc
mov
and
lods
dec
out
cltd
stos
ljmp
push
add
fiaddl
fyl2x
rcrb
add
pop
push
jne
mov
mov
fsubrs
and
lods
fisttpl
loope
das
ljmp
dec
mov
lds
mov
lret
repnz
lcall
jae
cmc
divl
lret
mov
ja
jb
aaa
cmp
rolb
adc
sbb
movsb
iret
xor
arpl
pop
pop
clc
push
repz
sarb
lahf
add
arpl
les
push
aas
xchg
repnz
xchg
or
pop
add
add
call
rorl
sub
popa
cs
mov
ss
in
push
rol
and
pop
add
stos
inc
mov
inc
ret
xor
lcall
lods
xchg
xor
movsb
cli
mov
lcall
mov
sbb
add
add
movsb
push
add
add
pop
iret
repnz
and
sbb
add
add
test
fnsave
ret
add
push
adc
call
jle
int3
int3
int3
int3
adc
testb
sti
shrl
cmpsb
xchg
pop
mov
mov
adc
xchg
stos
mov
sbb
xchg
cltd
je
stc
add
repnz
ss
push
movl
mov
push
movsb
icebp
ret
add
add
adc
dec
outsl
pop
xorl
int3
imul
orl
adc
loopne
fidivs
lock
lds
push
add
inc
rolb
pop
xchg
xor
sbb
movsl
out
cmp
popa
into
loopne
push
insl
outsl
dec
push
push
aas
inc
adc
inc
repz
add
xchg
mov
jmp
dec
lret
add
add
xchg
out
sti
pop
or
jle
lret
mov
in
xchg
sub
and
cwtl
popa
sub
mov
js
xchg
mov
pop
dec
pop
addr16
adc
idivl
sarb
cltd
jbe
lods
mov
jp
jmp
cmp
dec
icebp
mov
jmp
sarb
inc
fldt
add
add
mov
adc
fildll
cltd
adc
sarl
add
add
xor
fwait
inc
mov
add
dec
cmp
add
dec
js
into
adc
push
lods
dec
arpl
push
mov
std
dec
sub
pushf
cmp
sbb
dec
adc
xor
stos
insl
lea
out
sbb
insl
leave
push
sub
pop
lds
mov
popa
jb
popa
push
and
push
das
sub
xchg
add
adc
xor
sbb
and
dec
out
inc
pusha
jg
push
mov
fnstsw
mov
add
add
das
sub
lahf
mov
call
add
dec
orl
jge
cmp
cmpsb
shlb
mov
add
add
cld
cmp
sub
out
adc
das
push
dec
nop
in
lods
fs
mov
or
popa
pushf
dec
adc
aam
xchg
xchg
xor
fs
inc
adc
movsb
into
fimull
push
mov
int3
out
test
sbb
out
rcr
mov
sub
add
cmpsl
jb
subb
xlat
add
ret
or
cmp
sub
fdivrp
add
jne
inc
dec
inc
push
repz
jmp
test
sub
fsubrs
scas
push
scas
test
add
add
aam
jns
mov
test
shrl
pop
stos
mov
incl
jb
add
sub
js
popa
out
xchg
cmp
add
mov
add
add
add
mov
fistps
mov
fidivrl
mov
int3
faddl
mov
sbb
movsl
push
incl
add
outsl
mov
push
test
mov
lcall
sbbb
ljmp
push
jle
cmpsl
stos
rcrl
adc
add
inc
jns
xor
fwait
push
fsubs
div
pop
fsubr
sub
insl
in
inc
insb
mov
or
cmp
inc
rolb
adc
dec
xlat
xor
cmp
add
add
leave
movsl
pop
sub
cmp
dec
ds
adc
cmc
psrlw
push
mov
mov
inc
inc
inc
add
and
and
mov
adc
cmpsl
mov
inc
repnz
mov
inc
ret
pop
and
leave
loopne
fstps
add
add
mov
inc
sbb
int3
int3
int3
adc
mov
cwtl
mov
add
lret
and
rorl
jb
je
cltd
cmpsl
iret
or
sbb
iret
jb
mov
add
add
pusha
xor
mov
ret
outsb
rcl
sbb
es
inc
mov
test
scas
icebp
add
loopne
mov
mov
fstpt
pop
adc
jnp
dec
les
add
fwait
lock
lods
into
mov
xor
cltd
or
divl
cmpsl
movsl
lock
push
ret
cmp
lock
lahf
addl
cmp
int3
in
fcmovnb
pop
out
jns
lahf
into
cs
sbb
cmp
cmpsl
stc
adc
loopne
add
fsub
adc
push
push
push
insb
imull
rcl
sub
xor
bound
sub
mov
mov
add
data16
jg
es
or
idiv
cmp
add
test
and
adc
aaa
pop
rcrb
addr16
push
jo
xor
cmpb
je
mov
add
add
jmp
cmp
movsb
fs
clc
mov
je
sahf
fistl
push
adc
lods
jg
mov
pushf
cmpsb
add
add
sub
pushw
stos
add
push
xchg
fcmovnbe
jne
ret
movsl
pop
in
test
aaa
hlt
jnp
ror
xor
xchg
mov
int
mov
add
vprotw
push
test
sahf
out
lret
scas
push
js
mov
sbb
mov
add
add
sahf
out
fadds
push
ljmp
pop
xor
mov
sub
js
sbb
data16
inc
xor
add
pop
mov
fsubs
jnp
test
cmp
and
dec
rcrl
cmpb
add
test
aad
insb
inc
repnz
dec
out
add
add
push
or
fistpl
push
push
dec
mov
lcall
clc
xchg
mov
imul
sub
jbe
cmpsl
add
xor
incl
push
sbb
and
fwait
mov
cwtl
mov
stos
cmp
stos
mov
xor
movsb
out
arpl
add
add
sbb
pop
or
xchg
sub
ds
gs
cmc
cmpsl
xor
and
dec
xchg
arpl
dec
icebp
nop
pop
add
inc
pop
sub
xchg
mov
fwait
int
call
add
xor
ror
and
movsb
xchg
cli
call
xchg
std
dec
xchg
dec
adc
xbegin
adc
push
inc
mov
loope
mov
add
add
mov
nop
pop
push
xor
inc
js
fmul
mov
push
shrb
popf
mov
dec
sub
mov
pusha
lret
bnd
add
dec
sbb
int3
int3
int3
test
aad
leave
jae
xchg
inc
jns
mov
add
add
jns
push
int
jg
fcomps
insl
mov
mov
sub
loope
dec
leave
sbb
add
lds
inc
jbe
ss
xor
pop
push
push
arpl
and
xchg
outsb
ss
and
outsb
mov
mov
add
push
mov
mov
push
dec
insl
dec
mov
jmp
shlb
dec
xor
dec
cmp
in
mov
dec
cltd
fmull
cwtl
mov
stos
inc
in
repnz
or
outsl
and
repz
mov
add
add
ret
xchg
xor
cltd
mov
sahf
push
inc
xlat
mov
insl
xchg
pusha
sbb
ja
orb
push
mov
decb
add
pop
xor
inc
push
les
mov
lea
xor
mov
mov
lods
into
cmpsb
cmpsb
std
mov
cmp
insl
inc
stos
dec
mov
stc
add
add
das
xchg
adc
pusha
addl
mov
andl
cmc
xchg
lock
fstl
add
add
aas
pop
jl
push
cmp
and
clc
adc
icebp
xor
sub
or
pop
cmp
and
sub
cmp
lds
daa
mov
nop
add
add
cld
aad
mov
jns
xor
xor
mov
add
add
dec
adc
xor
mov
fadd
int3
int3
int3
int3
int3
push
aaa
les
cmpsb
pusha
mov
add
dec
jnp
push
and
shl
test
popa
add
test
pop
jl
mov
ja
hlt
loopne
mov
in
fnstcw
inc
cmp
cmp
cmp
in
nop
xchg
ljmp
xchg
mov
cmp
add
scas
xlat
add
pop
ja
cmp
push
mov
push
add
add
sahf
int3
int
xchg
sub
inc
cmp
mov
push
add
add
xchg
nop
jne
ja
mov
hlt
mov
mov
pop
dec
mov
fsubl
les
push
mov
dec
icebp
ljmp
dec
add
add
cs
clc
push
int3
aad
sub
lods
jmp
or
dec
xchg
sbb
out
cmpsl
push
fidivrl
ja
nop
push
lds
push
sbb
mov
adc
add
movsl
stos
or
xchg
or
fcmove
daa
cmpsl
sahf
pop
in
sti
jp
or
repz
int3
int3
int3
and
jmp
mov
nop
jae
or
cmp
pop
xchg
push
or
xchg
dec
stc
mov
add
jmp
popa
xchg
daa
or
in
ss
add
loopne
cmpb
xchg
and
push
cmpsb
and
add
dec
fdivrl
xchg
es
hlt
dec
jmp
mov
call
adc
pop
das
xchg
cmp
lea
adc
enter
pop
js
insl
std
clc
cltd
push
inc
dec
mov
ljmp
jne
out
and
movsl
rol
or
and
sub
sbb
fstl
mov
std
cmpsl
xchg
sbb
add
dec
mov
sbb
lahf
add
in
inc
aad
les
jae
arpl
jnp
dec
inc
es
xor
jmp
int
xor
fisubs
orb
mov
out
mov
mov
and
xor
leave
push
xchg
lahf
add
inc
sbb
lret
sbb
add
add
add
xor
pop
xor
jp
daa
int3
enter
add
add
sahf
add
mov
and
cmp
xlat
ss
push
fbld
daa
add
add
mov
inc
shlb
xchg
inc
mov
add
pop
mov
stc
xchg
cld
lahf
xor
cmpsb
add
add
mov
add
push
test
or
mov
xor
adc
add
incl
popf
inc
int
decb
jbe
cmp
aas
icebp
add
add
sbb
adc
push
psubusb
or
sbb
add
add
pop
lret
leave
icebp
filds
add
lea
dec
out
dec
divl
xor
aam
add
scas
imul
ja
cmp
add
dec
mov
out
ljmp
in
mov
pushf
jle
mov
add
stos
jg
or
adcl
test
pop
add
movsb
es
fstpt
xchg
adc
or
jmp
adc
push
lret
cmc
inc
mov
rcpps
xchg
stc
inc
mov
gs
push
xor
mov
mov
test
add
aas
mov
cs
fcomp
les
fisttpl
sub
ja
ds
stc
push
lcall
jne
xchg
mov
mov
xchg
fistpll
stc
incl
nop
fs
sub
insb
dec
rorl
lea
and
jno
jp
add
add
pop
and
mov
mov
movsl
jo
mov
ret
fidivrl
xchg
movsb
in
cwtl
cmpsb
ljmp
out
adc
jns,pn
js
test
ss
mov
lods
xchg
xorb
and
fcomi
dec
pop
dec
test
adc
inc
aam
test
bound
inc
loope
repz
out
push
fildl
add
add
mov
inc
mov
in
inc
jmp
cmpb
adc
sbb
jno
insl
out
mov
push
dec
stc
xor
or
stos
shl
je
jno
xchg
mov
imul
andl
dec
pop
lea
icebp
mov
bound
cmp
jbe
fs
or
add
add
mov
mov
push
pop
ret
scas
xchg
stos
jno
push
add
add
jmp
fstps
jge
dec
jae
scas
mov
aaa
add
mov
inc
aad
aas
add
add
test
add
dec
adc
inc
inc
icebp
loopne
outsl
xchg
mov
or
fs
js
addb
add
in
dec
ret
push
sbb
nop
aas
icebp
sti
out
cmp
loope
sbb
mov
push
es
stos
cmpsb
jmp
cmp
sub
mov
jno
sarl
outsb
fst
xchg
push
jg
mov
cmpsl
fbstp
incb
add
mov
cmp
pop
sbb
jno
lods
movsl
push
and
push
loop
add
orb
mov
add
aaa
dec
inc
rep
shrb
lea
insb
movsb
dec
mov
test
and
cmc
rolb
adc
cs
xchg
add
shrb
add
mov
repz
jne
sub
adc
movsb
xor
pusha
pop
inc
pop
sbb
fildl
add
add
dec
es
adc
fnstcw
sbb
repnz
pop
stos
mov
sub
popa
xor
mov
mov
sbb
ds
cmpsb
push
lods
mov
and
add
dec
shlb
push
cmp
test
or
loope
cmp
movb
and
lods
int3
int3
int3
int3
int3
out
fimull
nop
or
add
add
mov
dec
push
dec
or
xor
cld
xchg
mov
dec
fs
dec
lock
ret
xchg
imul
inc
xchg
push
add
add
push
inc
scas
inc
aad
outsb
mov
test
add
in
loop
pop
outsb
bound
cmc
negb
mov
mov
sbb
or
fdivrl
sub
cmp
popf
test
adc
mov
ret
lcall
scas
cs
cmp
add
pop
adc
add
jp
leave
adc
idivl
dec
adc
push
mov
ret
jo
pop
test
insb
arpl
add
mov
out
xchg
rcrl
push
pop
or
xor
int3
mov
lea
xchg
insb
or
inc
je
jo
push
daa
lahf
xchg
dec
mov
sub
leave
cli
loope
pop
jno
lahf
jae
jle
xchg
in
fildll
mov
pop
stos
xchg
pop
repz
xlat
mov
dec
pop
inc
fs
sarb
or
imul
pop
pop
mov
dec
xor
nop
and
loop
mov
fadds
inc
jl
movsl
daa
inc
into
insb
xchg
scas
mov
cs
test
es
sub
pop
cmp
pop
sbb
lods
adc
sub
pop
jno
arpl
mov
push
push
or
add
add
mov
and
mov
xorl
cmp
fstpl
cmp
sbb
add
add
xchg
mov
fidivl
add
add
add
inc
sbb
xor
aad
flds
cs
inc
and
adc
add
sub
int3
and
add
mov
xor
push
cs
push
out
mov
jno
push
sar
and
mov
jnp
push
fiaddl
add
test
push
cld
jge
dec
out
cwtl
xchg
loope
add
add
mov
ljmp
jne
scas
xchg
fidivrl
push
das
xor
ljmp
int3
and
jg
hlt
cmp
movswl
iret
ds
add
add
nop
or
js
xor
loope
addl
add
lcall
mov
es
imul
shll
dec
ljmp
dec
sbb
xor
aaa
std
pop
and
cmp
movsl
insb
roll
ss
cmc
ljmp
jecxz
adc
mov
or
imul
das
add
xchg
inc
adc
adc
jecxz
ds
and
test
pop
pop
mov
gs
cmp
test
push
outsb
lods
jno
lahf
add
add
jno
dec
xchg
add
mov
lods
ret
pop
inc
dec
scas
repnz
add
add
loopne
cltd
cmp
cmpsb
jnp
mov
ret
inc
ss
inc
es
or
jo
sti
insb
adc
sbb
jge
jp
imulb
test
mov
mov
retw
and
fxch
xlat
pop
mov
mov
lret
xorb
insl
out
and
jo
mov
shll
sti
cmc
mov
add
add
fcomi
mov
mov
das
pop
dec
cltd
hlt
stos
js
out
xchg
std
cmp
out
cld
mov
add
inc
ljmp
divl
adc
aad
lds
dec
cmpb
jmp
adcb
stos
out
add
in
xchg
and
pop
movsb
fcmove
int3
int3
int3
out
dec
arpl
sub
out
fisubrl
ret
add
sbb
mov
and
addr16
add
add
and
cs
es
or
mov
cmp
hlt
jo
sti
xor
ud0
mov
bound
push
dec
leave
mov
shrb
test
push
dec
lret
lea
jne
jne
out
bound
cmc
dec
lock
ss
repnz
add
add
pushf
or
add
sub
dec
dec
dec
pushf
and
push
jne
pop
inc
stos
dec
ret
fnstcw
push
or
adc
sbb
dec
inc
js
sbb
gs
add
test
cmp
lds
arpl
and
in
out
aas
mov
subb
jo
test
cmp
test
fmuls
sub
mov
insb
jmp
cmpsb
pop
sbb
andb
mov
js
daa
add
add
push
mov
xchg
icebp
stc
std
push
mov
lahf
mov
cmp
dec
ror
and
mov
ret
psllw
repz
add
add
fistps
ljmp
xchg
lds
lcall
pop
push
pop
and
dec
dec
jmp
sub
jle
rcrl
popa
inc
and
fistpll
pop
test
js
mov
xlat
ljmp
mov
fists
sbb
cli
pop
sub
push
and
aas
add
add
sbb
in
xchg
fwait
test
push
loope
or
lock
xchg
dec
fnstenv
int
pushf
shlb
inc
adc
xor
xor
sbb
pop
movsb
pop
rcrb
loopne
popa
lret
leave
ss
mov
jmp
or
mov
mov
insb
ja
pop
adc
insb
fldcw
adc
fst
inc
mov
push
xchg
arpl
push
cmpsl
pop
add
in
mov
xor
mov
idiv
add
mov
mov
pop
mov
loop
mov
dec
lods
add
sub
out
pop
out
inc
cmpsl
or
push
and
sbb
pushf
das
jnp
cmp
xlat
xchg
arpl
cs
int3
dec
dec
scas
aaa
cmp
stc
push
movsl
lods
adc
add
adc
cmp
lock
nop
add
add
stos
int3
int3
int3
int3
int3
add
out
dec
outsb
repnz
lahf
movsl
dec
mov
inc
xor
cmp
daa
lret
or
xchg
sub
or
cmc
jno
pop
icebp
dec
test
lds
push
mov
int3
mov
pop
mov
call
hlt
mov
repz
and
clc
loop
cmp
addr16
and
and
iret
push
cmp
and
add
add
aaa
xor
or
ret
push
fstpl
loop
push
pop
add
fsts
je
push
sub
jae
add
add
lock
rcl
subl
sbbb
decl
and
mov
sbb
mov
add
push
mov
or
rcl
cmpsb
adcl
lahf
push
stos
add
adc
add
mov
push
add
imul
xor
dec
push
cmpl
xchg
das
mov
xor
or
cmp
mov
inc
addl
addr16
daa
dec
and
add
mov
cs
cli
mov
pop
mov
add
jmp
add
jecxz
fnsave
dec
lods
pop
inc
push
ffreep
pusha
push
inc
or
mov
adc
xor
xor
dec
inc
sahf
data16
push
cmc
fnstcw
fidivs
adc
ret
push
adc
pushl
ss
adc
xchg
xor
add
add
push
fs
fwait
int3
int3
int3
icebp
repz
jl
pmulhw
sub
jns
jle
loop
iret
xchg
jno
cmc
iret
push
cmp
loopne,pt
or
add
pop
pop
arpl
out
or
out
cmp
pop
dec
imul
stos
sti
add
xchg
movsb
andb
xchg
test
gs
add
fisttpl
or
push
or
sti
push
add
add
xor
in
push
popf
loope,pn
gs
imul
fcmovu
outsl
add
push
mov
dec
je
pop
in
add
lods
test
imul
add
xchg
lahf
and
mov
mov
test
push
sbb
adc
je
call
mov
mov
imul
int3
sbb
out
mov
adc
out
sahf
xchg
cmc
stc
inc
cmpsb
jb
aam
mov
xor
cmc
xor
mov
mov
sbb
add
sub
add
mov
fsubrs
lahf
push
mov
sub
mov
das
scas
test
mov
add
sub
test
lret
mov
sbb
lret
xchg
aaa
mov
pop
pop
call
jmp
add
loope
push
inc
mov
jl
imull
loope
das
aas
cmp
inc
push
clc
add
add
test
fdivr
movups
jb
insl
mov
or
xchg
mov
xor
int
popf
jb
rcr
adc
and
test
add
fst
mov
sub
add
add
push
clc
sti
fprem1
frstor
sbb
std
sub
xchg
stos
xor
movb
xor
iret
or
mov
add
mov
add
sbb
pop
lcall
js
lock
int3
pop
jno
rolb
in
mov
and
sub
iret
vpunpckhwd
sbb
fsts
shl
sub
push
xor
sub
in
dec
outsb
sbb
add
xor
rol
and
inc
adc
mov
cltd
add
loop
jae
insb
fs
rcrl
cmp
pushf
pop
lds
pushf
adc
add
jle
mov
pop
jo
lret
roll
xchg
xor
filds
push
or
push
jnp
imul
adc
add
stc
jnp
roll
jle
inc
mov
jns
outsl
popa
push
push
iret
rol
iret
fdivrl
ds
cltd
jne
push
jns
or
das
pop
loopne
push
jg
ret
imul
int3
sub
or
jae
dec
mov
jo
aas
or
adc
push
mov
jae
pop
push
xchg
icebp
push
insb
jle
mov
lods
add
nop
adcb
push
sub
sti
ss
lock
lret
jge
or
fwait
cmp
add
or
xchg
rolb
aas
adc
jmp
test
rcll
ljmp
ljmp
ja
jae
jbe
mov
push
pop
sbb
push
mov
orl
rolb
add
add
xor
mov
icebp
insb
hlt
cmp
arpl
sub
pop
das
cld
sahf
jge
jns
xlat
xchg
add
add
int
inc
outsl
mov
mov
pop
push
out
outsl
and
cmp
daa
scas
cmp
adc
inc
add
fdivr
mov
cmp
pop
pop
mov
mov
test
sarb
and
mov
enter
sub
scas
out
add
inc
popf
enter
shlb
add
add
insl
das
xchg
xor
shll
fmuls
xor
test
add
adc
jl
inc
orl
and
andb
sub
sub
inc
jp
jb
dec
test
outsl
xor
mul
xchg
cmp
xlat
mov
add
outsb
fstpt
add
add
mov
sbb
negl
mov
repnz
aaa
push
inc
mov
ss
jno
ljmp
je
push
xor
inc
adc
cmp
xchg
mov
inc
sub
mov
mov
add
add
test
imul
gs
dec
sub
jle
cmp
push
adc
ljmp
jmp
jge
dec
or
push
std
cmc
testl
inc
mov
clc
fwait
push
jns
add
add
ret
jle
rorb
jg
out
jne
fisubs
mov
xor
ret
mov
into
cmp
push
sbb
cmp
xor
mov
pop
dec
and
xor
mov
mov
fidivs
mov
or
iret
fstpt
lds
stos
imul
aaa
push
sahf
pop
sbb
lock
fstps
and
xor
sarb
dec
in
test
mov
xchg
jl
dec
cmp
std
inc
fs
icebp
sbb
and
pop
cmp
dec
jns
push
inc
out
mov
add
adc
in
cmpsl
mov
xor
mov
addb
hlt
pop
jmp
cmp
or
add
insb
jae
aas
inc
ss
addr16
xor
adc
mov
sub
adc
add
add
xor
imul
dec
sti
push
in
cmp
mov
testl
cli
outsl
jl
dec
and
mov
mov
nop
adc
dec
int3
int3
int3
adcl
or
add
jecxz
enter
xchg
mov
mov
push
inc
ret
out
es
fcmovu
dec
xchg
add
add
dec
das
out
arpl
call
test
adc
mov
rolb
add
add
xorb
pop
out
call
ja
mov
pop
outsl
div
fisttps
outsb
jnp
push
sub
fcmovbe
push
or
mov
mov
jns
and
add
add
sbb
outsb
dec
addl
cwtl
repnz
mov
push
or
clc
cmp
fdivrs
lahf
xlat
add
add
push
inc
or
aam
negb
int
adc
mov
icebp
std
shlb
inc
sub
adc
adc
or
adc
jns
movd
int3
add
add
imul
shrb
lods
adc
loope
sub
push
fstpl
xor
fldt
and
adc
int
lcall
adc
pop
add
add
nop
clc
scas
out
bound
mov
xor
pop
or
rorb
gs
jnp
cmp
subb
insb
into
add
add
aaa
add
shlb
lahf
jl
popf
icebp
add
add
lds
mov
sahf
sub
out
adc
add
test
pop
out
mov
add
xchg
inc
pop
test
cld
xchg
mov
cmpsl
jle
out
inc
fs
add
add
ds
jno
and
int3
fsts
lock
add
scas
mov
add
mov
repnz
push
xor
push
fld
shl
jb
fisttps
imul
push
mov
cmp
dec
mov
enter
out
sbb
rorb
pusha
push
cmpsb
mov
adc
push
pop
popa
fcomp
pop
inc
out
or
or
jmp
mov
and
add
push
neg
ljmp
rcr
lods
js
rol
mov
hlt
jno
push
xlat
and
xlat
movsb
jb
add
sub
xchg
mov
je
dec
mov
js
pop
or
add
imul
movsl
int
pop
pop
xchg
jb
add
add
push
out
mov
andb
add
mov
int3
int3
int3
int3
int3
mov
add
in
and
insb
fs
lcall
mov
stos
ja
rdpmc
movsb
mov
ja
sub
faddl
jecxz
mov
add
add
mov
cmp
insb
out
pop
scas
mov
mov
mov
push
add
add
loop
sub
mov
outsl
mov
pop
and
jbe
add
add
jb
jmp
cmp
mov
mov
scas
nop
loopne
pop
adc
movq
lods
xor
cmp
test
jle
andl
arpl
inc
add
andl
and
mov
xchg
lea
pop
or
jns
in
int
adc
pop
mov
hlt
movsb
mov
sbb
imulb
idivb
and
push
loopne
in
add
add
hlt
cmp
sub
or
shll
outsb
jo
jno
arpl
xor
xor
cmp
cmp
ret
mov
ds
mov
cmc
xor
mov
xchg
add
lret
repnz
gs
inc
adc
out
adc
or
mov
or
pop
pop
aam
test
dec
stc
jmp
sbb
adc
pop
mov
std
dec
insb
repnz
adcb
add
add
lods
insl
jns
or
outsb
mov
sbb
jbe
cmp
mov
or
popf
and
sbb
sbb
sti
cmpsl
dec
sbb
stc
movsl
mov
xchg
adc
repnz
or
outsb
lods
insb
mov
pusha
dec
mov
rcll
and
add
add
jbe
dec
in
and
xchg
jmp
sub
cwtl
jle
sub
or
sbb
inc
cs
mov
push
fs
push
mov
icebp
fsubs
in
sti
loope
and
jecxz
xor
cmp
lods
pushf
push
cld
xor
fists
adc
sub
add
incl
push
inc
add
push
inc
add
add
aas
add
add
jle
push
inc
add
add
dec
jae
jb
arpl
jae
jb
gs
je
jb
push
jb
jae
outsb
je
add
dec
inc
push
dec
inc
dec
xor
sub
xor
add
add
outsb
je
insl
and
jb
jb
add
or
dec
dec
push
push
and
jb
jb
or
add
push
dec
dec
inc
and
jb
jb
or
add
add
inc
dec
dec
and
jb
jb
or
add
xor
cmp
outsb
popa
bound
je
and
imul
and
popa
jo
or
add
add
xor
aaa
or
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
insb
outsl
ja
outsl
and
imul
je
outsl
outsb
or
add
xor
ss
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
jae
imul
imul
imul
add
push
xor
xor
jo
jb
and
jb
jne
insb
and
outsb
arpl
outsb
and
insb
insb
or
push
xor
xor
or
and
outsl
jne
push
arpl
outsw
jb
pop
outsl
outsb
gs
je
popa
je
js
je
je
bound
or
add
add
xor
cmp
outsb
popa
bound
je
and
outsb
and
outsb
jae
insb
and
imul
add
push
xor
cmp
outsb
gs
arpl
and
popa
jo
gs
outsl
jb
or
add
add
xor
aaa
or
outsb
gs
arpl
and
insb
je
je
jb
popa
and
imul
jb
outsl
jb
or
add
add
xor
ss
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
je
jb
popa
and
popa
or
popa
bound
jb
popa
insb
and
outsl
addr16
insl
and
insl
imul
or
add
xor
cmp
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
outsb
jbe
jb
outsb
insl
outsb
je
or
push
xor
cmp
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
popa
jb
jne
outsb
je
or
push
xor
xor
insb
outsl
popa
je
outsb
and
imul
and
fs
add
arpl
jae
data16
push
imul
sub
and
outsb
je
insl
and
jb
jb
add
add
or
add
push
jne
je
insl
and
jb
jb
or
push
jb
addr16
insl
cmp
add
add
cs
jb
addr16
insl
and
insl
and
imul
outsb
add
decl
jns
add
je
popa
jae
inc
arpl
gs
outsl
jo
jo
add
je
arpl
gs
imul
gs
popa
addr16
outsl
js
add
gs
xor
fs
insb
add
jle
inc
add
pushl
test
test
xor
push
dec
inc
dec
add
xor
dec
dec
inc
add
add
and
inc
add
add
and
inc
dec
add
push
mov
push
push
push
int3
int3
int3
int3
rcrl
or
and
icebp
int3
xchg
loopne
stos
lds
sarl
jge
add
xchg
insl
push
lret
testl
and
dec
adc
push
out
stos
scas
sub
repnz
mov
pop
in
add
sbb
xor
repnz
sub
cmpsb
out
mov
mov
cmp
mov
insl
mov
xchg
fwait
nop
fcoml
ds
stos
fldcw
and
in
xchg
add
out
pop
xchg
shlb
rcr
mov
in
xchg
add
add
popf
scas
rcrl
int3
int3
int3
int3
mov
push
xor
xor
arpl
push
sbb
repz
popa
add
add
xor
aam
pop
out
adc
sub
mul
sub
stc
and
jne
fnsave
or
push
add
add
and
xor
mov
pop
mov
aam
mov
jae
data16
lret
and
hlt
pusha
xor
rcl
test
repz
mov
mov
cmpsb
xchg
lcall
test
jle
repz
jecxz
out
pop
lods
and
inc
arpl
add
add
subl
loop
xchg
xor
pop
and
imulb
lock
ret
add
jo
les
jb
mov
add
add
push
dec
es
inc
mov
push
call
stos
mov
les
and
shlb
add
ror
add
repnz
ret
pop
dec
and
cmp
add
add
sub
mov
xchg
xor
rcrl
add
push
adc
mov
add
inc
es
adc
push
les
test
js
jbe
loope
repz
stos
loope
decl
jbe
rclb
xchg
add
or
jnp
xor
repz
int
push
rcrb
movsb
jo
add
insb
adc
add
add
or
xchg
xor
xor
add
add
lods
xchg
sahf
mov
arpl
ss
popa
in
frstor
and
push
sbb
int
lret
add
xchg
test
sub
sbb
adc
and
ret
jmp
lds
add
add
jb
jo
repnz
jbe
and
add
add
push
loopne
aam
push
loopne
data16
xorl
and
cmc
mov
repnz
and
fmul
push
shlb
adc
add
dec
pusha
inc
inc
or
push
pop
out
nop
jo
orl
pop
shll
add
add
pusha
mov
jne
movsb
or
adc
xchg
leave
outsb
sbb
push
mov
cmpsl
or
mov
push
jmp
fwait
mov
rcrb
mov
icebp
xchg
mov
fcmovbe
and
outsl
add
add
and
popf
shlb
repz
inc
mov
xchg
add
add
mov
xlat
and
xchg
outsl
test
push
xor
push
out
adc
mov
xchg
sub
sahf
add
add
mov
pop
div
movl
mov
push
adc
push
lcall
and
popf
jno
movsb
stos
rclb
shlb
add
add
push
push
add
push
adc
or
js
ja
and
push
push
mov
call
xchg
repz
data16
movsb
add
stos
adcl
out
mov
or
jo
add
add
sub
addl
push
aam
ret
mov
fucom
data16
adc
hlt
ljmp
ret
mov
jae
mov
jb
push
les
test
sahf
inc
push
dec
mov
fs
cld
jb
rorb
pusha
std
adc
add
add
pop
fs
xlat
cmp
sarl
xor
xchg
xor
loop
cwtl
cmp
and
cmc
mov
cmp
loope
jnp
and
int3
jbe
js
scas
jp
add
shll
les
push
addl
repnz
add
add
dec
and
xchg
push
lods
in
mov
pop
mov
adc
and
adc
test
call
mov
outsb
xchg
push
aas
sbb
shrl
pop
int3
mov
lea
pusha
push
adc
xor
adc
or
add
add
and
shrl
cmp
push
std
inc
pop
in
sub
cltd
ret
lds
mov
pop
andl
jecxz
push
sub
andb
data16
add
adc
xor
lods
aam
ja
inc
ret
add
sbbl
sbb
out
inc
dec
shlb
mov
mov
fistl
outsb
movb
popa
mov
xchg
cwtl
lahf
adc
leave
in
adc
push
stos
shrl
xor
mov
mov
push
popa
jle
addr16
mov
xchg
cmpsb
fidivs
add
sub
push
es
lcall
sbb
movsl
jge
jp
xchg
dec
mov
dec
xchg
push
xchg
inc
and
sbb
movsb
mov
adc
repnz
test
ss
jmp
push
rolb
daa
sbbl
xlat
aas
pop
xor
add
div
jae
aaa
lcall
movsl
mov
push
mov
add
add
repz
add
scas
xchg
outsb
mov
pop
sahf
sub
les
mov
loopne
xchg
leave
inc
lds
jo
sbb
xor
jb
movb
add
mov
sarl
xor
out
cmpsb
mov
movsb
int
mov
enter
add
inc
xchg
xchg
out
jp
mov
mov
jl
xchg
cmp
add
add
add
nop
aaa
pop
mov
gs
insl
adc
lcall
bound
cltd
inc
add
push
pop
push
or
andl
adc
sub
add
sbb
xchg
mov
add
jmp
or
lret
gs
jp
xor
lret
hlt
repnz
out
and
inc
cli
stos
sbb
rol
add
add
addb
xor
addl
gs
mov
ret
inc
lcall
mov
rclb
and
pop
fwait
sbbw
mov
pop
sub
mov
lcall
add
add
adcl
movsb
rorb
gs
std
stos
xor
adc
idivb
xor
test
test
add
pop
daa
mov
inc
sbb
es
xchg
roll
or
mov
adc
loope
cvtpi2ps
add
add
jmp
aad
jmp
push
ljmp
ret
xor
dec
xchg
cmpsl
dec
mov
add
add
scas
cmp
ret
or
pop
xchg
shr
mov
push
lret
nop
shrl
orb
mov
scas
movsl
sub
data16
jp
movsl
outsb
push
test
adc
sti
jle
bound
xchg
inc
mov
add
xacquire
loop
mov
jle
adc
mov
dec
mov
addb
jecxz
ja
inc
add
xorl
and
rclb
rcll
int3
int3
add
jb
lock
sub
xor
leave
loopne
in
ja
out
cmp
xchg
lahf
xchg
shll
mov
cmp
rclb
test
je
push
adc
or
movsb
add
add
or
mov
lea
data16
add
enter
ret
nop
scas
add
ss
or
sysret
push
or
adc
adc
cmp
addr16
and
sub
rol
adc
arpl
pop
popa
ficoml
cltd
inc
repnz
jae
add
add
mov
push
xchg
xchg
nop
adc
mov
mov
sub
xor
lods
push
bound
mov
loop
xor
fldz
adc
and
inc
sbb
jl
adc
and
xchg
xor
stos
add
add
adcb
or
adc
mov
rcrl
into
xor
movl
inc
xlat
mov
in
jb
movsl
jecxz
xchg
jo
add
icebp
push
cmc
inc
idiv
inc
inc
dec
movsl
push
mov
mov
adc
repz
xor
popa
in
bnd
and
cmp
dec
mov
call
sub
xor
ja
pusha
stos
loope
jne
test
out
outsl
cmpsl
xor
movsl
mov
lock
fwait
add
dec
add
add
movsl
insb
aam
and
daa
sar
adc
fldenv
repz
sarb
or
add
sub
add
add
aad
push
pop
je
xchg
loop
dec
push
inc
push
lds
mov
cmp
mov
out
jne
or
xchg
lea
fs
push
or
repnz
push
xchg
mov
data16
or
lret
sbb
add
inc
pop
mov
jmp
enter
push
loopne
add
and
dec
push
cmpsb
in
pop
mov
fnstenv
hlt
bound
es
mov
or
mov
dec
add
push
aam
adc
int
mov
imul
jo
cli
mov
inc
insl
inc
test
test
pop
gs
jp
sbb
jb
mov
dec
adc
rcrb
dec
adc
adc
sbb
movb
adc
push
fwait
jo
push
lret
add
repnz
push
fsts
je
icebp
stos
sub
daa
xor
ljmp
dec
sbb
xor
add
mov
push
int3
int3
int3
int3
int3
insb
add
push
je
pusha
leave
push
add
add
add
icebp
pop
xor
sub
push
inc
and
inc
addr16
lock
mov
cmp
add
jb
lock
or
mov
mov
loope
inc
movsl
push
and
or
mov
dec
add
add
aaa
inc
jo
in
dec
jbe
call
sti
push
inc
pop
xor
iret
and
mov
push
dec
movsl
fiaddl
out
call
xor
loopne
adc
in
cmp
cmc
xlat
jle
mov
or
jne
adc
xor
loope
add
lahf
loopne
add
add
into
and
jle
test
stos
xor
xchg
dec
sbb
lods
fldcw
lods
mov
lods
sbb
aas
pop
sbb
jl
mov
ret
mov
and
mov
das
int3
int3
int3
int3
jo
stos
mov
mov
clc
add
add
sbb
inc
mov
inc
sbb
xchg
int3
std
mov
pop
sub
je
pop
mov
popf
jne
loopne
stos
push
movsb
mov
push
lds
xchg
sub
into
push
popf
imul
adc
dec
push
in
push
add
add
leave
push
add
jnp
pop
cwtl
nop
pusha
add
or
insl
popf
leave
nop
mov
inc
lds
stos
enter
jmp
mov
cli
lcall
daa
js
test
rcrb
cmp
subb
jne
xchg
mov
adc
add
add
js
add
xor
int3
out
or
test
inc
xchg
cli
jno
cld
std
xchg
mov
xchg
and
lock
cs
int3
int3
int3
int3
lcall
push
pop
in
add
add
jl
or
lds
mov
add
in
in
dec
inc
mov
add
roll
shll
jne
push
dec
out
je
test
and
fdivrl
fldl
push
add
mov
add
repnz
repnz
and
je
adc
dec
hlt
jae
mov
pop
iret
jge
jne
pop
mov
test
add
add
pop
in
scas
arpl
addr16
iret
adc
jmp
rorl
sbb
add
int
rcrb
adc
shrl
ret
sub
push
jmp
add
add
nop
aas
sbbl
jb
bound
add
add
xchg
test
sub
xor
idivl
mov
inc
xchg
js
addb
inc
xor
inc
out
push
nop
fs
nop
pop
ds
ret
cmp
sub
mov
xchg
sbb
andl
mov
xchg
xor
out
pop
in
aas
shr
or
xchg
sbb
jmp
push
ret
inc
das
test
add
lods
test
mov
in
loopne
arpl
mov
ja
repz
pop
dec
jnp
test
cmp
mov
push
dec
inc
xchg
dec
loop
add
add
sub
adc
dec
test
aaa
lret
sarl
push
arpl
loop
mov
shll
mov
jecxz
adc
jl
push
int
inc
dec
push
jnp
imul
pop
in
pop
les
pop
inc
push
ljmp
push
or
cmc
mov
cmpb
incl
add
add
stc
jg
shr
notl
and
mov
int3
les
mov
stos
lock
mov
and
mov
add
add
pop
push
jae
nop
cmp
stos
and
divl
in
repnz
adc
out
or
dec
ja
lock
es
jo
test
pusha
pop
xchg
mov
loope
test
cmp
or
adc
fildll
loop
cmc
mov
adc
xchg
int3
jne
xor
push
popf
cmp
aas
clc
push
add
add
fisubrs
mov
outsl
jae
mov
mov
cmpsb
mov
sbbb
adc
sub
fidivrs
aaa
add
add
nop
in
ds
iret
mov
aam
les
sbb
cmp
xlat
mov
shll
fcomp
pop
add
add
mov
inc
xor
repnz
pusha
mov
sub
out
rcll
xor
divb
add
ficoml
sti
add
add
mov
sbb
pop
jp
sbbb
mov
adc
cmp
mov
push
repz
pop
incl
mov
add
xor
and
cmpsb
push
xlat
insl
scas
jnp
loop
xlat
aaa
das
shlb
cmp
pop
lock
clc
stos
and
test
push
mov
xchg
sbb
cltd
inc
cmc
add
add
add
out
roll
in
sub
adc
add
mov
daa
inc
mov
add
add
cmc
push
mov
loop
daa
cmp
inc
shl
int3
xor
push
jl
scas
xchg
inc
dec
stos
scas
adc
mov
scas
xor
xor
fld
dec
pop
add
add
int3
int3
int3
int3
int3
stos
rcr
or
nop
loop
jl
dec
dec
sub
int3
cs
test
cmpsl
and
pop
xchg
jl
orb
addr16
jb
shl
xchg
adc
inc
add
add
sub
dec
xor
and
lock
nop
pop
add
add
ret
dec
mov
bound
scas
xor
xchg
jg
sub
in
sub
xor
pop
or
cwtl
mov
fs
pop
jo
jl
out
jno
je
icebp
rorl
push
sub
les
add
sbb
bnd
mov
add
in
pusha
add
and
mov
fists
fldl
or
mov
cmpb
test
or
hlt
xchg
lahf
pop
es
mov
rorb
inc
bsr
out
mov
adc
mov
inc
add
icebp
rol
xor
add
loopne
orb
ds
mov
push
lret
loopne
sbbl
mov
adc
add
add
sarl
insb
ss
lret
mov
in
imull
addl
repnz
add
cltd
and
jo
shlb
sbb
repz
in
xor
lret
in
push
jp
mov
xor
adc
lret
outsb
push
inc
adc
add
ret
and
sarl
icebp
push
xchg
fdiv
mov
mov
stos
adcl
mov
les
mov
lret
cwtl
cmpsl
in
xchg
xor
loope
add
add
cmp
push
cwtd
lds
aad
iret
jmp
xorl
push
mov
add
fdiv
cmp
cmp
jbe
xchg
stos
lahf
es
mov
push
push
mov
jno
stos
into
jbe
shlb
adc
xchg
sbbl
repnz
push
ret
push
inc
and
add
lcall
push
inc
cmp
aad
sub
xor
ret
loop
je
push
sub
add
imul
gs
mov
andl
scas
add
push
arpl
addr16
pop
or
add
add
lock
lcall
adc
rcl
aas
testb
icebp
adc
mov
push
xchg
mov
push
mov
mov
jo
mov
jbe
iret
loope
clc
xor
sbb
test
xchg
rorl
push
xchg
pop
mov
ss
ss
idivb
add
add
sahf
fmul
je
movsl
std
mov
dec
push
jg
mov
mov
push
sub
push
mov
and
xchg
xorl
les
xor
mov
outsl
sub
pop
imul
cs
sbb
and
out
xor
adc
mov
mov
ret
xchg
addr16
int3
int3
int3
es
add
add
hlt
hlt
popa
mov
mov
jecxz
mov
xchg
jno
jb
aam
mov
lret
sbb
and
inc
push
jbe
add
repnz
jae
test
jg
xchg
mov
sbb
add
add
push
aaa
dec
cmc
push
test
push
roll
adc
pop
aaa
jp
or
out
cmpsl
fcoml
adc
lret
dec
inc
dec
jle
xchg
pusha
into
clc
xor
testl
push
add
mov
push
pusha
pusha
jmp
dec
push
sbb
stc
ja
cmp
adc
scas
sbb
dec
hlt
cmpxchg
orb
or
sub
mov
and
cltd
dec
mov
add
mov
cwtl
push
punpcklbw
ds
cvttps2pi
aaa
ficomps
int3
xchg
int
pop
inc
sub
in
or
sbb
pop
adc
mov
notb
push
sbb
pop
insl
dec
mov
out
shll
fmulp
in
cltd
jbe
or
and
add
xchg
and
push
xchg
push
pop
test
lret
sahf
rol
imul
pop
cld
jb
add
add
inc
mov
mov
push
mov
sbb
rcrb
jg
int
cld
lds
xchg
sub
sahf
bound
sub
addr16
push
lds
push
imul
data16
add
in
cs
jl
push
sahf
rorb
dec
sub
lcall
mov
xchg
push
cli
pop
aaa
cmpsl
call
jae
rorb
dec
mov
aam
dec
jmp
lret
cmp
pop
decb
add
add
in
imul
fs
pop
xchg
shl
jns
mov
sbb
dec
dec
js
std
jle
pop
mov
fstpl
adc
andl
shlb
add
jb
jp
ja
int3
scas
push
add
sbb
aaa
fwait
adc
adc
and
xor
int3
int3
mov
repz
add
adc
mov
fwait
pusha
dec
fiaddl
jnp
ror
mov
subl
mov
mov
add
add
add
fs
mov
jmp
stc
aad
aam
test
popa
push
add
cmp
mov
push
movsl
fxch
xor
dec
jno
imul
cmp
repz
add
out
mov
in
sbb
rcr
xor
es
mov
pop
out
jmp
add
sub
idivb
movsb
xchg
sarb
mov
shlb
test
xchg
in
test
jle
push
xchg
jnp
addr16
dec
cmpsb
inc
add
add
jle
mov
nop
mov
mov
iret
movsl
int3
pop
push
mov
add
adc
cmp
and
mov
rclb
lods
pop
or
mov
xchg
jecxz
ret
movsb
repnz
call
inc
adc
dec
jp
pop
lea
add
add
xchg
fsts
cmpsb
xor
cwtl
jo
add
fmulp
cmp
in
ret
int3
int3
int3
mov
pop
push
nop
hlt
xor
icebp
addr16
xchg
and
and
pop
jp
je
xchg
push
pop
cmc
sbb
bound
call
lds
and
add
inc
jne
sub
out
lea
movsb
sub
or
hlt
xchg
adc
push
aaa
das
sbbb
fs
gs
lock
xchg
push
inc
adc
aad
in
inc
sub
mov
xchg
rcrl
out
arpl
adcl
sub
xchg
daa
out
sti
inc
xor
out
test
inc
push
bound
mov
xchg
mov
hlt
xor
jecxz
xor
jle
inc
ficomps
inc
jp
int3
int3
int3
int3
mov
push
dec
mov
xchg
xchg
cmp
jne
xor
and
dec
dec
push
sbbb
add
pop
xor
aas
repnz
ljmp
call
pusha
mov
and
adc
pop
enter
sbb
or
lock
ret
dec
enter
test
add
add
rorb
loop
and
cld
and
add
mov
in
pop
push
add
add
cli
and
xor
lods
inc
js
jmp
scas
lret
popa
add
add
adc
shrl
pushf
jecxz
mov
movsl
psraw
adc
or
rorl
sub
cmp
out
mov
and
or
pop
dec
xor
out
repnz
dec
jbe
sbb
or
in
rcrl
lods
mov
les
movsl
jne
orl
arpl
inc
dec
imul
mov
xor
data16
xchg
jl
xchg
push
cwtl
or
aas
scas
adc
popa
xchg
fldcw
mov
and
mov
aam
jecxz
out
repnz
jb
xor
ret
inc
cmp
jo
loop
ljmp
je
sbb
orb
inc
hlt
pop
jle
ss
cmpsl
and
and
sahf
or
mov
leave
push
inc
jmp
inc
cmp
mov
sbb
add
add
mov
cmp
sbb
push
dec
cltd
xchg
push
sahf
cmpsb
jne
xchg
pop
rol
inc
enter
pop
inc
jne
cmp
adc
sbb
adc
stc
mov
test
aam
sbb
repz
int3
movb
inc
rolb
add
add
push
mov
aam
jle
mov
add
scas
mov
mov
andl
add
add
mov
repnz
mov
or
dec
xor
sbb
fs
inc
jne
jnp
and
mov
test
mov
jo
lea
cmp
mov
and
rclb
notl
dec
push
pop
cmpsl
in
stos
xchg
mov
add
add
sub
mov
xchg
mov
stc
xchg
nop
je
lea
xor
push
in
mov
sbb
in
adc
add
out
mov
push
or
sti
dec
xchg
pop
cmc
adc
dec
data16
mov
mov
inc
fildll
inc
push
xor
add
push
pusha
cmp
dec
and
sbb
add
mov
cli
scas
popa
sub
imul
fs
addr16
and
popa
sub
imul
sbb
ret
nop
mov
mov
movsl
add
and
aad
repnz
jae
sub
lds
adcl
sub
dec
xlat
xor
xor
insl
mov
xor
push
add
xchg
aaa
mov
adc
mov
inc
stos
daa
mov
sti
adc
sbb
scas
in
adc
add
add
and
mov
add
andb
adc
mov
xchg
inc
pop
outsl
pop
data16
lods
jge
sarb
push
xor
int
mov
inc
add
mov
pop
and
scas
jb
arpl
mov
movsb
sbb
jle
adc
xchg
jmp
mov
stos
ret
add
imul
fs
das
and
aad
pop
mov
mov
scas
pusha
movsb
jo
adc
mov
mov
push
test
inc
gs
pop
push
mov
push
add
inc
outsl
popf
scas
mov
mov
sbb
add
add
xor
aad
aas
outsb
and
cmp
mov
icebp
subl
into
cmpsl
in
mov
pop
jne
mov
mov
mov
shrd
inc
push
outsb
pop
out
es
jecxz
inc
add
add
pop
test
aas
mov
dec
lods
movsb
and
repz
add
imul
insl
fisttpll
xchg
xchg
push
and
stos
push
xchg
mov
aad
cmpsl
incl
sbb
push
mov
popl
xchg
jbe
jmp
mov
out
mov
xchg
ds
in
cmpl
dec
dec
or
xor
jecxz
aam
arpl
xor
pop
aaa
std
fisubrs
fidivrs
rcll
pop
push
adc
imul
xchg
dec
outsl
push
sub
or
cltd
add
add
fldt
bound
leave
xchg
add
fistps
lods
mov
inc
sub
mov
add
fs
mov
pop
scas
out
data16
shr
inc
out
arpl
fsubs
dec
cmp
repnz
xchg
push
mov
push
adc
mov
push
repnz
xchg
test
add
sbb
mov
fiadds
add
popf
mov
lahf
int3
and
es
mov
mov
loop
inc
in
inc
es
push
lcall
push
pop
in
hlt
rol
push
xorb
mov
dec
loopne
dec
adc
int3
int3
int3
int3
int3
adc
xchg
mov
in
push
xchg
dec
mov
inc
ret
es
out
fstl
insb
enter
in
loope
xor
add
call
int
imul
xchg
icebp
inc
xor
cmp
aad
repz
mov
add
add
js
test
daa
stos
ss
in
add
add
dec
out
cmp
mov
mov
loope
ss
mov
inc
cmc
add
inc
push
push
lods
sub
shlb
cmp
add
jns
int
push
inc
lods
adc
add
jno
jmp
add
out
pop
jo
inc
shl
add
cmpsb
ret
daa
push
faddl
xchg
int3
int3
int3
jle
lods
loopne
push
addl
push
xor
add
or
add
add
add
pop
rorb
xor
jg
cltd
and
inc
xchg
push
movsl
adc
aas
cmpsl
leave
ljmp
aad
rcll
pop
dec
add
and
pop
inc
testb
imul
adc
popf
inc
add
add
add
and
add
jp
mov
and
jo
push
adcl
and
in
popa
adc
jmp
lret
sbb
subb
addb
or
lret
notl
jp
add
aaa
ljmp
mov
add
add
push
xchg
sub
divl
and
cmpsb
loop
dec
inc
vmovdqu
push
scas
fdivrs
popa
pop
insl
and
xchg
dec
sbb
gs
test
fmull
cwtl
in
dec
jo
push
ret
xor
arpl
pop
stos
adc
add
add
cmp
in
jbe
dec
pop
add
sbb
stos
scas
pop
rcrb
or
add
xchg
push
hlt
mov
pop
sahf
mov
in
push
aam
movsl
jmp
adc
xlat
popa
add
add
in
insb
mov
inc
xchg
ljmp
push
loop
int
lods
nop
add
jne
xchg
pop
inc
cld
xor
rcl
push
push
inc
and
inc
mov
add
add
add
rorb
mov
and
push
arpl
inc
cwtl
popa
add
mov
or
int3
fsts
push
sub
inc
jae
je
add
push
xchg
pop
xchg
pusha
xorb
adc
xor
or
movsb
stos
loopne
inc
push
xchg
stos
cmp
mov
imul
popl
xchg
bound
ss
xchg
jg
jne
fs
sub
xchg
cmp
xor
lcall
and
xor
add
pop
cmp
and
fistpll
int
xchg
push
push
cltd
out
pop
cmc
pusha
jp
dec
jbe
xchg
imul
add
jge
shll
daa
cmp
lret
mov
cmc
adc
mov
fcomi
imul
dec
add
add
aaa
fsts
ss
mov
mov
loopne
add
add
inc
es
ss
in
out
cmp
js
adc
mov
js
mov
ss
or
xor
mov
in
scas
jnp
mov
pop
pop
mov
std
cmpsb
rclb
lcall
cmp
cmp
add
inc
stos
mov
jecxz
loop
xor
inc
adc
pop
outsb
jae
adc
cmp
pop
sarl
imul
shl
inc
mov
push
mov
inc
adc
stc
pop
add
das
movsb
or
xchg
ljmp
mov
adc
bound
add
add
fsubp
xchg
mov
daa
int3
jmp
xor
inc
adc
insb
push
sti
xlat
fisubl
add
add
jae
jno
imul
cs
popf
push
in
mov
add
and
fidivrl
loopne
and
cmpsb
adc
mov
ret
aam
push
jmp
notl
push
loop
loopne
mov
jle
jo
ret
dec
or
mov
inc
shll
sbb
mov
add
add
mov
mov
dec
add
push
sub
cmc
div
fdivrl
sbb
add
sub
xchg
xchg
shl
pop
add
add
mov
out
movsl
fwait
or
fldl
push
or
loope
outsl
sub
jo
add
and
lds
test
mov
adcl
jecxz
add
mov
push
cltd
inc
out
xor
int3
int3
into
icebp
loope
imulb
cld
jae
movsb
rcll
ds
ljmp
jecxz
repz
jae
xchg
xor
iret
fdivl
data16
stos
mov
sub
pop
hlt
lret
add
adc
leave
mov
add
scas
pop
dec
aad
xor
out
hlt
pusha
xor
and
inc
test
sub
cwtl
add
cwtl
add
bound
inc
adc
adc
mov
or
test
dec
repz
enter
mov
xor
cmp
or
push
cmp
popf
xor
hlt
jae
and
lods
pop
das
push
lds
push
mov
add
add
gs
mov
mov
fdivr
nop
mov
fwait
sub
stos
cwtl
inc
inc
js
gs
ljmp
aas
cmp
clc
sub
cmc
sub
iret
jo
mov
mov
xchg
inc
push
roll
out
dec
in
mov
out
pop
fwait
and
hlt
cmp
xchg
loop
xor
mov
jl
adc
xchg
add
cmp
mov
clc
add
add
cmpsb
xor
xor
jb
mov
imul
dec
xor
jo
ret
in
pop
add
flds
outsl
sub
fidivrs
cmc
jae
repnz
add
inc
fisubs
shrl
insb
cmp
mov
mov
inc
adc
xor
jbe
ljmp
add
add
adc
lahf
inc
cmpsl
imul
inc
daa
lea
mov
inc
call
cmpsb
mov
mov
int3
scas
lahf
clc
rcl
in
jmp
or
push
mov
add
mov
adcl
push
or
add
add
xor
xor
cli
inc
push
movsl
inc
push
push
pop
mov
pop
dec
dec
push
xchg
sub
shlb
call
cli
add
ja
or
les
xor
mov
pop
ds
addb
adc
int3
mov
iret
out
mov
imul
lds
imul
imul
mov
mov
mov
movsb
cpuid
jmp
fs
sub
data16
pop
shrb
cli
and
pop
dec
mov
rol
cmp
test
popf
cld
push
dec
cmpsb
sbb
pop
rcrl
jbe
addl
in
pushl
int3
int3
int3
int3
xor
test
jecxz
jae
out
sbb
pop
stos
add
out
je
jmp
mov
movsl
sbb
dec
outsl
scas
rcll
pushf
test
cli
jns
add
add
cmpsl
cmp
fwait
xor
das
jbe
add
and
mov
jb
scas
lods
dec
cmpsb
mov
cltd
lea
sub
inc
inc
sub
xor
adc
add
add
xchg
add
call
add
and
cmpsb
push
daa
add
mov
or
out
mov
fs
pop
mov
mov
std
add
add
cltd
scas
sub
cltd
fisttpll
into
insl
sub
mov
add
mov
test
push
sbb
add
push
movsb
add
lods
movsl
fsubl
inc
cld
test
dec
dec
cltd
outsb
rolb
sub
and
pop
inc
movnti
insl
out
dec
cmp
sti
stos
rcll
repz
add
add
inc
nop
push
out
imul
mov
and
mov
movb
xlat
xor
xor
adc
add
pop
xor
push
adc
add
dec
test
push
pop
pusha
loopne
sub
xor
xchg
jo
add
cmp
add
addb
inc
fstpl
cmp
out
add
add
loope
adc
jl
xchg
lahf
and
cmp
fnsave
push
cmpsl
js
jns
jmp
out
add
pusha
push
xlat
movsl
or
inc
sub
ja
xchg
sarb
adc
add
push
leave
cmp
fadds
add
add
push
aaa
jne
test
pop
mov
ret
cli
mov
cmpsl
jmp
mov
mov
test
lods
pop
shr
or
add
add
add
push
inc
mov
icebp
xchg
sub
dec
js
mov
lcall
andl
je
inc
fsubs
sub
and
jb
das
loope
add
mov
repnz
push
add
add
hlt
xchg
add
inc
popf
cmpsb
mov
cld
shlb
inc
aad
scas
jno
cmpsl
cli
sbb
xor
mov
sbb
ss
mov
sbb
pop
shrl
inc
jle
popa
test
add
testl
dec
xchg
fistpl
add
inc
pop
jb
fcoml
sub
bound
jl
dec
fwait
jmp
jo
js
addr16
add
addr16
bound
cmp
je
std
fnstenv
leave
es
add
lds
hlt
add
and
addr16
add
xchg
pop
inc
add
xchg
adc
or
xchg
cmp
loopne
daa
jg
clc
out
sbb
add
add
mov
bound
icebp
int
push
pushf
test
cmp
ret
fisubs
outsb
and
loope
xor
int3
int3
int3
int3
pop
iret
int
cmp
pop
xchg
sub
shrb
clc
gs
ss
data16
mov
sbb
movsb
ret
sub
dec
cmovne
ret
test
pop
mov
adc
xchg
mov
lret
testl
add
xchg
push
mov
movsl
mov
aas
pushf
sub
sbb
das
xor
mov
mul
xor
xor
cmpsl
shlb
daa
xorl
and
rcr
test
arpl
sbb
or
xchg
mov
cld
xor
add
loop
fsubs
pop
xchg
mov
jno
xchg
int3
mov
mov
inc
add
sub
inc
shlb
jl
sbb
jbe
inc
lods
test
rorb
xor
jae
out
xchg
push
cmp
hlt
mov
jno
rcrb
add
dec
and
rorb
shrb
lcall
add
lods
dec
adc
cmpsb
xchg
inc
cltd
imul
mov
inc
inc
inc
jecxz
mov
sahf
cmpsl
in
fbstp
stos
xchg
xchg
in
rolb
cltd
xor
pop
leave
mov
or
outsb
sub
aas
add
add
repz
cwtl
push
xchg
mov
mov
dec
sub
pop
gs
in
les
sbb
rcrl
pop
adc
jmp
inc
add
add
push
jbe
inc
orb
jae
ret
jl
test
inc
dec
rolb
and
int3
int3
int3
pop
xor
pop
cmpsl
mov
add
arpl
xchg
and
inc
mov
roll
sub
rep
lods
lods
mov
xor
push
mov
add
aam
or
sbb
add
sbb
inc
dec
xor
aaa
push
dec
pop
ret
gs
test
xor
jle
jns
roll
stc
notl
inc
out
jae
push
or
or
int
idivb
or
pop
add
and
imul
cmp
idivl
in
dec
test
xor
ret
roll
maskmovq
notl
add
add
inc
cs
pop
cmpsl
int
rcrb
loopne
adc
aam
daa
jns
notb
rclb
aaa
pop
stos
inc
xchg
inc
dec
xchg
xchg
call
js
arpl
cltd
adc
add
add
rcl
jb
adc
jo
sete
and
insl
push
mov
shlb
pop
out
fsubp
jne
outsb
repz
mov
jbe
into
and
pop
adc
aaa
inc
xchg
inc
leave
push
movsb
or
mov
jae
mov
and
aad
dec
adc
push
fcoms
and
fiaddl
out
rcl
push
add
add
push
fcoml
out
xchg
adc
cmpsl
fists
push
xchg
hlt
loope
jmp
adc
aam
jae
in
pop
mov
fdiv
mov
mov
jmp
push
in
mov
add
dec
cmp
das
pop
dec
mov
ss
cmpsl
xchg
xchg
hlt
push
add
add
cmp
or
or
test
adc
shl
push
push
mov
call
movsl
pop
xchg
add
add
lret
outsb
lcall
mov
in
jne
mov
sbb
jge
pop
push
pop
loop
and
mov
cmp
into
aaa
mov
add
shll
loopne
and
or
or
sahf
aam
in
lahf
arpl
push
mov
sti
push
dec
aad
cmpsl
andl
add
add
sahf
xchg
fwait
cmp
jg
push
inc
add
jo
add
inc
pop
xor
push
pop
xchg
jns
imul
dec
idivb
comiss
add
adc
cld
call
xor
mov
gs
dec
scas
in
je
fidivl
loope
pop
fs
mov
leave
fsubrs
ret
aaa
int
push
fstp
and
xor
add
add
cmpsl
movsl
push
sti
cli
ljmp
popf
fnstcw
das
mov
or
movl
and
xchg
mov
int3
int3
int3
int3
xlat
je
movsb
dec
inc
xchg
lret
xor
mov
adc
test
and
and
add
or
and
mov
dec
repz
mov
adc
add
out
jecxz
aas
xchg
push
or
push
stos
jnp
inc
add
fwait
mov
inc
mov
mov
dec
jmp
and
add
popa
fnstsw
add
dec
aad
xchg
out
sbbl
shl
and
and
out
mov
in
inc
pop
mov
sbb
pop
and
dec
jp
cs
add
adcb
push
enter
mov
fs
xchg
push
je
jno
add
add
and
fdivs
xchg
loope
and
pushf
stos
arpl
divb
dec
xchg
mov
insb
popa
stos
out
cmp
push
cmp
jecxz
jno
mov
aad
sbb
add
add
xor
adc
xor
fsubl
in
out
stos
dec
jb
mov
call
aaa
int3
scas
xchg
push
sub
adc
add
push
test
arpl
xor
and
adc
dec
clc
mov
jnp
add
add
cmpsl
cld
imulb
movsl
add
mov
aam
xor
and
jno
aam
std
notb
stos
add
add
xor
dec
int3
movsb
jg
mov
mov
add
add
test
int3
int3
int3
int3
int3
xor
inc
mov
movsb
mov
pop
jbe
lret
sbb
mov
mov
push
movsl
jnp
adc
in
pop
sbb
jno
mov
adc
and
out
mov
sub
testl
movsl
add
add
add
sub
cmpsb
adc
push
adc
push
push
cmovne
mov
sbb
nop
and
xor
mov
mov
int
icebp
mov
inc
out
cmp
mov
imul
xor
jns
xchg
int
out
arpl
jo
xor
repnz
lods
stc
sbb
pop
or
xchg
xchg
xchg
jo
mov
or
in
xchg
and
add
sub
xor
aad
lock
lret
xchg
gs
or
sub
xchg
and
bound
nop
or
inc
mov
repz
sub
daa
add
repnz
mov
ds
loopne
inc
xor
add
rolb
jge
mov
adc
pop
into
jae
sub
sahf
add
add
cmp
inc
pop
es
lahf
xchg
lcall
fucom
fbld
clc
clc
cmp
das
das
add
add
or
xor
xlat
test
insb
lahf
in
stos
stos
xchg
mov
jle
mov
push
testl
xchg
push
sahf
lds
inc
pop
clc
push
outsl
xlat
out
and
pop
std
test
sbb
popa
mov
jp
js
add
dec
push
and
sub
sti
cmp
inc
mov
sbb
stc
add
enter
inc
clc
sub
daa
xor
je
push
test
insb
fistpl
enter
jge
ret
or
loopne
mov
inc
cmpsb
icebp
add
add
shlb
jbe
push
mov
call
adc
in
stos
mov
mov
faddl
xor
in
sub
mov
movsb
pop
dec
mov
ds
xchg
movsl
xor
stos
push
in
es
bound
add
add
mov
sub
adc
out
in
push
or
movsb
add
add
pop
push
lcall
sti
pop
scas
mov
add
sbb
adc
int3
inc
or
mov
shld
loopne
dec
xorl
leave
repz
dec
inc
xchg
sub
inc
int
int3
or
add
inc
out
out
mov
test
push
dec
add
and
jmp
lock
fnstsw
sub
and
aad
add
imul
fildll
stos
pop
outsb
ret
subb
stos
dec
mov
xchg
jno
mov
mov
push
pop
lea
sbb
dec
test
lds
add
xchg
mov
push
fbstp
xchg
push
shrl
and
add
shrb
inc
sbb
addb
lret
adc
pop
out
xchg
mov
cmc
out
add
add
inc
dec
int3
int3
int3
int3
add
push
sbbb
out
sti
xchg
pop
jp
ja
sub
sbb
testb
das
cmpsl
and
jnp
mov
dec
test
push
les
rcrl
test
add
call
andl
add
add
lds
jge
sbb
push
push
add
leave
jle
adc
sbb
xor
mov
lcall
fs
stos
arpl
mov
push
and
pop
aam
mov
mov
loopne
addr16
mov
and
add
add
cmpb
xchg
or
lcall
repz
mov
sbb
pop
dec
xchg
pop
ljmp
sbb
test
or
sbb
cld
iret
sbb
add
mov
push
shrb
pcmpgtd
push
push
lock
orb
es
lds
mov
arpl
add
and
fdivrl
inc
inc
xchg
ja
push
pop
mov
sbb
sub
add
xor
popf
lahf
into
int3
int3
int3
int3
push
mov
sti
iret
fstpl
jnp
outsl
mov
ret
mov
adc
sbb
ljmp
in
shll
test
std
hlt
add
add
leave
rcll
cmp
fildll
insb
mov
test
push
xchg
sahf
and
movsl
push
rcl
enter
add
dec
cmpsl
int3
xchg
lds
das
add
sahf
xchg
inc
or
sbb
cli
xchg
test
add
push
jg
scas
inc
xor
mov
pop
daa
pop
xor
xor
fcompl
fs
cs
ja
xchg
mov
sub
into
mov
inc
dec
inc
adcl
mov
out
adc
lcall
add
test
aas
pop
repnz
test
outsl
push
or
test
inc
test
ret
subl
adc
jne
inc
inc
lcall
add
mov
mov
outsl
call
jle
lcall
mov
cli
fwait
or
mov
cmc
ficompl
out
sub
ja
ror
pop
mov
inc
mov
js
mov
mov
cs
and
cmp
mov
das
cmp
add
add
mov
outsl
push
push
xchg
and
popf
mov
mov
das
push
movsl
mov
sub
dec
sub
mov
stc
pop
dec
push
cltd
sub
push
fiadds
cwtl
xor
loopne
jle
mov
push
dec
lds
mov
ja
add
fistl
mov
xor
push
pop
loopne,pt
adc
jle
ret
add
or
push
jnp
ficoms
int3
int3
int3
int3
int3
add
outsb
jae
adc
cli
push
test
adc
cltd
jno
push
xchg
add
aad
cmpsl
push
xchg
inc
xor
mov
sbb
adc
lods
mov
cmp
pop
sub
jge
jno
and
add
add
lock
bound
or
sub
pop
push
dec
and
pop
adc
pop
and
add
xchg
out
in
push
push
xor
adc
or
add
jbe
mov
lret
mov
fadd
xchg
in
in
fidivl
xor
cmp
add
fiadds
stos
fiadds
xchg
push
ljmp
jecxz
jo
or
add
add
and
sub
pop
pop
dec
xchg
cmpsl
xor
add
test
test
shl
stos
pusha
pop
test
in
and
xor
das
jo
fstp
sub
adc
and
stc
cmpsl
hlt
fidivrl
xchg
aam
jo
push
pop
aas
cmp
add
mov
iret
jbe
adc
cli
pop
pop
out
and
xchg
pop
xor
insl
hlt
mov
cli
lret
xchg
adc
lcall
add
mov
rolb
shl
cmp
push
jmp
pusha
out
jmp
loop
inc
xor
add
add
insl
insl
dec
mov
stc
js
jge
mov
test
xchg
mov
push
add
add
inc
adc
xorb
scas
adc
hlt
push
xor
dec
inc
hlt
adc
mov
idivb
add
pop
xchg
add
add
aas
iret
fwait
mov
push
shll
ja
mov
insb
mov
sub
lahf
mov
xchg
xor
int3
int3
int3
in
or
rolb
mov
cwtl
xor
imul
test
pop
out
cmp
das
sbb
add
add
loop
stc
xchg
ja
pop
push
mov
push
enter
push
aas
xchg
sbb
mov
mov
test
daa
add
add
mov
mov
xchg
and
ret
lods
orb
and
sbb
jbe
inc
lds
mov
mov
mov
pop
push
cmpsl
fcomp
pop
or
xor
push
or
inc
out
repz
add
or
std
cmp
and
cmp
je
jmp
ret
mov
xchg
js
adcb
pop
push
aam
insb
add
cmp
inc
cmpsl
data16
cmp
je
into
add
add
pop
push
and
xchg
cmpsl
shll
aaa
popa
cmp
adc
add
add
insl
pop
das
inc
daa
aad
adc
enter
mov
ljmp
bound
int
mov
imul
xchg
es
and
sbb
ja
fs
xchg
push
test
mov
insl
loop
adc
push
lods
ret
pop
xchg
add
sbb
out
sbb
jo
add
add
add
mov
idivb
loope
and
movsb
data16
xchg
xchg
in
xchg
jne
clc
mov
inc
pop
push
mov
data16
add
add
jmp
adc
cmp
xchg
push
dec
xor
bound
in
nop
inc
scas
mov
sbb
fnstcw
shlb
ss
lret
ret
addr16
dec
add
jp
mov
ljmp
sbb
std
aad
out
xor
in
shlb
loopne
popa
repz
sahf
andb
and
gs
subb
add
add
ficompl
push
sub
jp
xor
leave
popa
sbb
psraw
add
add
inc
push
push
pop
xor
or
fwait
and
and
cmp
adc
pop
jle
mov
or
add
stc
cmp
fisttpl
add
test
daa
jmp
jl
ret
cmpsb
cmp
jae
addb
jbe
mov
rolb
add
xchg
fmull
mov
cmpsb
xchg
aas
mov
cmpsl
fs
inc
add
sub
outsb
je
pop
repz
stc
lahf
sub
or
pop
push
flds
mov
add
inc
mov
adc
mov
pop
pop
arpl
xor
outsl
inc
addb
xor
jo
aaa
lds
movsb
mov
loop
pop
fldenv
sub
stos
addl
inc
add
add
xchg
cs
jbe
or
jo
sub
addr16
xchg
enter
leave
cmp
mov
dec
xor
in
xor
adc
jp
imul
fnsave
cmp
add
add
xchg
mov
lret
cmp
push
xchg
jecxz
shr
fs
add
test
jecxz
adc
mov
jmp
pop
mov
sti
in
lret
data16
add
add
shll
outsb
add
int3
push
push
sbbl
xchg
mov
out
lret
fistpll
inc
xor
lret
mov
or
xchg
imul
movl
sbb
dec
cli
popf
xchg
inc
cmp
pop
and
cmp
movsb
and
rclb
shr
add
add
add
cli
cmp
mov
xchg
pushf
mov
add
add
xor
xchg
aad
pop
jp
std
xor
aam
xchg
mov
repnz
mov
nop
leave
cmp
pop
jmp
mov
add
add
or
or
push
jo
sub
ret
jo
sbb
and
lret
add
jge
jbe
dec
and
sbb
pop
jle
aam
or
ret
mov
cwtl
popa
mov
sub
add
add
add
lds
pushf
inc
lock
cmpsl
xor
je
and
test
addr16
sub
or
xchg
inc
xchg
xchg
push
inc
jno
repz
ret
xor
xchg
adc
sub
lock
sub
dec
push
push
call
push
fwait
es
xchg
cmp
mov
cltd
test
add
add
mov
xor
sbb
cltd
push
dec
das
dec
mov
dec
jge
mov
nop
dec
sub
sub
imul
add
add
icebp
cltd
jle
ficomps
adc
push
jnp
and
jle
pop
push
or
mov
aaa
mov
mov
lahf
mov
leave
shlb
nop
pop
xor
add
nop
add
add
and
jge
bnd
cmp
jl
pop
lret
cmp
int
xlat
fwait
dec
jecxz
dec
adc
add
mov
pusha
loop
cmp
stc
ljmpw
popf
decl
jbe
jno
pop
pop
roll
dec
or
dec
dec
ljmp
shl
push
add
rolb
xlat
inc
add
mov
and
sub
add
add
call
fs
cmp
xchg
add
and
loopne
and
mov
es
add
shrb
into
dec
jo
xor
gs
xor
mov
dec
aad
dec
pop
fwait
xlat
fildl
pop
test
mov
cmpsl
es
jnp
add
add
icebp
push
mov
fsubrp
repnz
adc
pusha
fistps
push
lods
lods
bswap
aad
inc
insb
xchg
push
inc
and
lods
mov
sbb
rcr
outsl
and
xchg
mov
popf
fidivrl
ret
stos
inc
mov
or
sar
cli
and
roll
inc
xchg
push
pop
stos
sbb
mov
lods
lods
cwtl
out
movsl
jge
dec
imul
adcb
test
dec
adc
and
inc
jns
cmp
ljmp
nop
stos
or
sbb
jge
gs
push
nop
popf
int
repz
adc
pop
in
mov
add
mov
or
mov
repnz
stos
addr16
out
scas
jne
lcall
arpl
scas
mov
pop
jbe
add
add
mov
lcall
fidivrs
daa
mov
xchg
sub
xor
and
cmpsb
sub
jae
mov
stos
lock
in
cmp
inc
mov
push
sub
insb
aam
scas
sti
cli
or
xchg
repnz
lods
popf
movsb
dec
cli
jp,pn
or
adc
loop
popa
lea
add
add
aam
or
aam
push
mov
ja
sbb
loope
ficoml
adc
cwtl
mov
add
add
xchg
sub
adc
in
fs
mov
in
xchg
std
jae
mov
shl
mov
sti
dec
pop
out
cli
push
imul
sub
into
cltd
fbld
and
add
mov
fwait
adc
jmp
ficomps
mov
jp
mov
inc
mov
adc
or
dec
push
xchg
adc
roll
sub
push
dec
or
mov
sbb
cmp
pop
pop
push
fimuls
xor
push
push
out
mov
xor
leave
shll
rclb
push
je
pusha
add
add
inc
dec
xchg
pop
xchg
push
mov
jno
cs
inc
pop
jmp
incb
mov
decl
push
test
icebp
mov
out
je
mov
adc
movsl
stos
sarl
jae
xchg
pop
arpl
dec
inc
pusha
push
emms
scas
xor
mov
and
add
add
push
jge
outsl
iret
test
sbb
pop
repnz
mov
sub
das
fwait
jbe
adc
insb
push
jle
jno
add
pop
in
outsb
sub
fcmovbe
mov
push
mov
je
movsb
push
and
lret
call
movsb
pop
adc
or
jnp
cmp
ficoms
adc
dec
inc
inc
mul
arpl
add
mov
loopne
mov
aad
sub
mov
mov
rorl
cmp
sbb
cmp
xor
lret
aas
or
mov
xchg
pop
and
clc
insl
cltd
ret
lods
or
add
push
dec
and
inc
sbb
push
xor
stos
mov
push
or
je
test
arpl
fiaddl
ds
add
add
js
out
adc
mov
inc
test
mov
jbe
pop
daa
outsb
jecxz
arpl
mov
popf
add
test
pop
flds
pcmpgtw
jno
leave
fnclex
loope
add
add
sub
mov
aad
or
test
frstor
bound
fbstp
pop
add
out
add
add
push
and
sbb
or
and
mov
std
ret
fwait
nop
mov
in
adc
jno
push
enter
out
pop
out
pop
or
jp
js
add
add
leave
add
cltd
aaa
subl
sub
imul
lock
xchg
xchg
in
jo
lock
inc
subb
out
jne
add
dec
pop
add
lock
outsl
insb
add
inc
imul
inc
rorl
add
jnp
lock
add
add
cmp
js
mov
stc
sbb
imul
in
push
repnz
std
xchg
add
lods
aad
pop
imul
lret
iret
mov
mov
mov
inc
cmp
xchg
mov
jnp
aas
dec
inc
mov
lret
pop
pop
dec
mov
popf
dec
sbb
adcl
inc
mov
test
ror
mov
cwtl
ja
aam
sbb
and
xchg
and
pop
cmp
fistpll
es
cmp
adc
add
fwait
pop
pop
mov
xor
adc
push
push
jne
cmpsb
push
push
push
jmp
cs
xchg
jl
les
clc
pop
addr16
iret
adcl
push
inc
push
push
icebp
inc
scas
pusha
int3
int3
int3
int3
int3
ljmp
fcomp
data16
add
add
push
in
mov
out
dec
and
add
and
jae
test
rorl
fildl
jl
filds
and
arpl
mov
and
and
pop
out
fldenv
add
inc
push
scas
and
mov
add
jecxz
jmp
push
xchg
jg
mov
ss
daa
push
adc
add
add
ret
movb
and
cmpsl
incl
mov
rcll
sub
jo
push
rcll
push
in
and
cmpsl
outsl
jae
movsl
adc
iret
jb
mov
call
adc
add
add
cmp
js
into
pop
mov
jb
lea
pop
add
add
or
adc
fmull
addl
inc
pop
mov
ss
loop
or
test
push
out
std
rcl
pop
mov
pop
lock
xor
add
add
arpl
fbstp
loope
imul
or
movsl
push
sub
inc
imul
dec
xor
dec
cmpsb
mov
push
out
dec
sub
xchg
fidivrl
xor
pop
mov
negb
out
sbb
push
pop
cmp
xchg
add
add
jl
push
nop
shl
inc
push
xchg
xorb
sub
push
imul
lock
mov
test
in
fidivrl
adc
popf
sub
and
xchg
std
shll
sbb
adc
js
shll
add
add
xorb
xor
add
stos
shlb
ds
inc
cli
fsubr
js
sub
dec
add
and
test
test
fildl
pop
push
lahf
jbe
inc
hlt
xor
cli
sbb
sbb
xchg
idivl
adc
add
add
and
cmc
adc
fistpl
subb
mov
push
jg
mov
rcl
lods
lock
mov
addl
sub
add
out
jp
xor
jbe
sarl
pusha
mov
mov
clc
push
xchg
outsl
jo,pt
jg
js
sub
push
cmp
adc
add
daa
sbb
and
and
and
jb
or
jo
mov
jg
push
sbb
shll
inc
push
adc
outsl
xchg
stos
enter
stc
test
inc
ja
and
pop
or
push
fldt
add
add
lock
xchg
lds
rorb
mov
mov
fstpt
xor
popf
add
add
mov
jge
iret
sub
mov
pop
shll
dec
dec
bound
or
adc
and
xchg
mov
and
nop
jne
insb
jecxz
test
add
cmpsl
test
lds
lods
add
jmp
adc
adc
mov
cltd
add
add
popa
out
sbb
sbb
fldt
cmpsb
aaa
jbe
clc
inc
and
popa
inc
out
aad
int3
pushf
sahf
aas
test
ja
mov
inc
in
stos
mov
push
data16
sbb
mov
lods
inc
sub
cs
pause
ss
mov
add
xchg
add
inc
push
testl
xchg
push
ret
mov
xor
push
not
xchg
int3
int3
int3
int3
int3
xchg
sahf
daa
sbb
jg
fisttps
inc
xchg
fwait
mov
jb
sbb
sbb
push
mov
jge
jbe
fstpl
leave
push
mov
add
add
hlt
lret
lods
jl
cmp
addr16
aam
push
fnsave
imul
xchg
data16
insb
pop
dec
repz
add
add
inc
mov
mov
neg
or
and
cmp
adc
xchg
jl
addb
mov
out
cmp
and
sub
in
xchg
sbb
or
jge
dec
add
push
cld
scas
int3
aam
push
aad
add
add
jo
and
mov
xchg
pop
xchg
adc
sbb
jg
pop
shlb
or
add
inc
mov
xor
jo
jecxz
xlat
test
xchg
jne
add
add
int3
rorb
sti
shl
pop
adc
ja
pop
mulb
js
push
shll
cmpsl
or
cmp
jp
outsl
add
les
int3
bound
ret
shll
add
add
fstpt
pushf
and
mov
mov
push
outsl
incl
push
les
jp
pop
mov
pop
aam
and
mov
leave
fwait
lret
xor
cli
mov
stos
and
arpl
mov
push
out
add
add
loopne
or
adc
mov
mov
bound
out
shrl
daa
pop
sbb
pop
add
add
ret
ds
add
lcall
test
sbb
out
sbb
arpl
mov
mov
int3
xor
repz
or
mov
inc
or
xor
or
xor
push
iret
pop
push
jnp
sbb
add
imul
outsl
push
sub
jp
pop
add
add
add
sub
push
xor
mov
movsl
push
test
adcl
fisubrs
push
or
imul
int
imulb
into
or
scas
sbb
pop
call
jne
arpl
cmp
sbb
adc
sbb
pop
jne
sti
addr16
test
mov
adc
xchg
mov
and
nop
sbb
xchg
or
add
add
push
and
push
xchg
nop
add
xchg
mov
inc
dec
adc
ljmp
sbb
mov
lock
or
je
or
pop
es
movb
add
sbb
mov
cmp
mov
and
push
cmpsl
jge
mov
fsubl
test
fdivs
add
add
cmp
pop
sbb
mov
dec
sub
mov
dec
mov
jno
fsubrs
pop
bswap
hlt
jnp
mov
call
jns
js
xchg
frstor
aaa
adc
test
test
mov
add
add
mov
mov
sub
bound
adc
xchg
lahf
sbb
enter
test
mov
pop
pop
pushf
jne
das
inc
in
movsb
xchg
sub
push
jecxz
lds
int
sbb
out
dec
inc
mov
add
call
enter
and
sbb
or
ret
inc
pusha
mov
push
xchg
pop
add
repnz
pop
jo
xchg
dec
into
mov
pushf
jmp
pop
mov
cltd
or
cmp
pop
push
push
out
cmp
sbb
orl
mov
dec
aam
stos
imul
add
jns
rorb
jl
dec
pop
mov
lahf
lds
lods
clc
xor
icebp
icebp
test
mov
pusha
je
pop
jnp
push
mov
fsubs
mov
in
int3
pushf
call
xchg
push
inc
jecxz
gs
ja
add
add
in
pop
push
in
cmp
or
dec
mov
insl
repnz
mov
loopne
int3
mov
fdivrl
pop
push
int3
mov
xor
pop
es
xor
inc
pop
imul
adc
fsubs
mov
roll
rorl
inc
dec
addl
jbe
loope
ja
mov
ffreep
daa
jecxz
test
aam
or
mov
or
divb
pop
mov
add
mov
ljmp
cltd
aam
add
pusha
test
jecxz
lods
stc
add
push
push
fadd
lret
mov
daa
fidivrl
xchg
arpl
mov
xchg
std
pop
and
ss
into
aad
inc
mov
mov
gs
push
xor
lcall
add
in
mov
dec
xchg
add
mov
or
jge
lret
out
sti
hlt
mov
jnp
gs
out
mov
xchg
test
or
mov
push
adc
loop
aas
xchg
dec
popf
add
add
enter
jb
and
imul
das
mov
xor
jb
test
mov
pop
jle
pusha
iret
xchg
adc
out
jo
lret
jge
dec
xor
xchg
mov
dec
es
jb
add
add
scas
lret
lods
rclb
je
insl
add
dec
pop
or
movsb
loopne
fwait
aas
cmp
js
or
add
ret
cmpsl
jno
popf
pop
mov
outsb
js
int
sbb
push
aaa
inc
lods
mov
mov
gs
sti
xchg
sub
or
sub
sbb
push
in
sbb
inc
inc
mov
add
pushf
imul
in
cld
add
add
jns
pop
gs
fidivrl
sbb
jecxz
in
xchg
mov
adc
cmc
fcompl
dec
ds
fnsave
cmp
mov
test
mov
stos
or
push
sbb
pop
add
add
mov
dec
xchg
outsb
dec
inc
lret
xor
inc
daa
movsl
loopne
xchg
mov
lods
cld
adc
mov
fwait
jns
mov
sub
push
ss
dec
mov
in
mov
in
cli
fldl2e
or
jbe
xchg
add
add
push
in
jmp
jl
loope
shlb
inc
les
sub
inc
in
or
add
fistl
cwtl
jae
sub
cltd
xchg
mov
and
push
xchg
aas
aam
add
add
and
cmp
cmpb
xchg
fcompl
xchg
fsubs
daa
inc
mov
fisubl
dec
je
shlb
xor
and
pop
add
push
add
add
icebp
in
scas
push
les
mov
adc
fsubrp
jl
inc
add
add
xchg
stc
adc
popf
loopne
mov
lcall
insl
xchg
out
fadd
push
push
cmp
or
jmp
movsl
fsubl
mov
xchg
cmp
add
add
add
push
pop
sbb
aam
inc
leave
mov
jle
adc
dec
rcr
cltd
jb
push
movsl
pop
jmp
sub
mov
xor
and
add
add
mov
stos
mov
adcl
std
xchg
push
inc
jmp
sbb
sbb
mov
adc
cwtl
imul
out
fisubrl
lahf
xchg
jbe
xchg
add
add
fwait
jl
xchg
bound
insb
jo
sbb
inc
out
push
je
inc
mov
add
jb
sbb
jp
popa
push
cwtl
fimuls
out
int3
int3
scas
daa
and
mov
push
scas
int
out
pop
je
jno
or
lahf
cltd
pop
xor
add
add
mov
jecxz
adc
jle
jb
clc
cmp
sbb
fcomps
xchg
out
jne
arpl
mov
stc
shlb
adc
mov
aaa
ljmp
clc
push
xchg
xchg
mov
jb
mov
xchg
pop
add
add
sub
ss
add
gs
or
pushf
cwtl
mov
inc
andb
dec
ds
out
adc
out
fsts
add
add
xchg
add
push
mov
sbb
jp
pop
stos
adc
clc
dec
xchg
jmp
inc
and
cmp
jb
aam
cmpsb
js
push
jp
mov
idivb
bound
mov
movsl
lods
and
jns
and
scas
hlt
das
insb
repnz
out
add
add
iret
repz
stos
sub
data16
adc
cmp
xor
fwait
xchg
or
mov
mov
or
aas
add
stos
pop
mov
movsl
fbstp
add
add
pop
mov
fisubrs
cmp
mov
mov
movsl
fs
jl
lock
and
mov
out
decl
stos
mov
xrelease
or
iret
call
cmpb
int3
daa
cmpsl
repz
sub
js
jecxz
cmp
leave
cmp
xor
add
add
dec
mov
ret
pop
cli
mov
out
mov
pop
jle
add
add
mov
jg
ss
push
cmp
push
jns
movsb
out
adc
imul
pop
sar
sub
sbb
mov
or
ljmp
pop
mov
inc
mov
xchg
pop
hlt
lock
cmpsl
fsubs
cmp
add
daa
sbb
je
add
add
sahf
xchg
jo
stos
je
push
dec
test
mov
sbb
mov
mull
leave
ja
cli
out
and
cmp
ficoms
xor
lahf
stos
scas
jb
repz
fistl
add
add
dec
loopne
shlb
sub
aam
cmp
xor
into
xor
jnp
bound
mov
popf
repz
repz
out
mov
push
pop
scas
and
ret
mov
ror
push
push
add
add
int3
int3
int3
int3
push
loop
ja
lods
cmpsl
sbb
jbe
loope
cmp
or
xchg
mov
mov
pop
mov
add
movsl
push
lds
aaa
cmp
add
add
jns
pop
cltd
xor
jne
idivl
insb
lcall
outsb
aam
sbb
sarb
adc
add
xlat
jecxz
pop
mov
pushf
outsb
enter
xchg
xchg
pop
jmp
nop
xorb
mov
clc
rclb
lods
call
insl
or
add
inc
xor
cmp
add
add
and
jno
aad
mov
movsl
xchg
sarl
mov
pop
add
mov
xchg
pop
pop
sub
sub
daa
mov
adc
push
xor
daa
mov
in
add
dec
in
add
add
push
xchg
loope
xchg
orb
fstpl
pop
ss
mov
jmp
insb
push
lret
push
std
cmp
xchg
jno
faddl
sti
pop
lahf
ljmp
push
mov
xor
xor
lahf
repnz
aad
lahf
pop
mov
xchg
hlt
inc
mov
mov
dec
inc
sti
or
std
add
add
sub
add
cmpsb
inc
test
sub
outsb
and
xor
adc
cmp
scas
or
add
add
rorl
inc
popf
imul
jne
aaa
stos
stc
fnstenv
inc
addb
inc
push
data16
jle
and
and
stos
sbb
mov
mov
xchg
cli
call
daa
lcall
jl
cmpsb
cmpsb
mov
pop
and
xor
or
push
inc
lods
imul
jne
dec
xchg
lock
inc
addl
lret
jecxz
jmp
ret
lret
loop
adc
pushl
data16
pop
and
fsubrs
lods
stos
imul
pusha
mov
je
cmc
adc
adc
mov
add
add
ds
and
inc
div
imul
and
popf
sub
cmpsb
and
out
out
ss
ljmp
pop
and
mov
loope
mov
jecxz
xchg
cmp
and
aad
popf
mov
add
add
lret
ret
adc
icebp
cmp
sbb
cltd
fldcw
test
adc
enter
cld
or
ss
ret
pop
push
pop
dec
pushf
push
fildll
repz
outsb
mov
les
ss
inc
mov
push
bound
mov
add
sub
fwait
lock
sbb
pop
jb
mov
test
or
adc
lea
pop
outsl
mov
pop
shrl
adc
sbb
push
mov
ds
test
sarl
test
and
add
add
dec
dec
faddl
xor
push
pop
frstor
les
call
repz
subl
and
loop
mov
adc
out
mov
mov
xor
pop
pushf
sub
rorb
inc
push
in
rolb
cmp
jnp
cltd
fldl
aaa
aam
popa
loop
add
add
loopne
pop
shlb
leave
and
bound
pop
hlt
fcmove
jne
loop
jp
sub
jae
fcompl
inc
out
test
sub
xor
rolb
add
movsl
lock
add
clc
outsl
rcrb
cmp
fisttps
mov
stos
xchg
imul
and
add
add
divl
iret
mov
das
shll
or
insl
adc
push
sub
test
mov
dec
jae
mov
add
test
std
inc
push
jge
mov
lods
inc
dec
fnsave
call
std
loop
outsb
rcr
add
add
shlb
or
sbb
xchg
sbbl
ss
inc
fdivs
in
inc
xchg
in
out
sub
jge
aas
nop
bound
setle
rcll
xchg
jecxz
jo
scas
loop
dec
mov
or
sti
push
insb
lods
je
add
xor
btc
mov
fnstenv
add
add
mov
sub
popf
mov
test
sbb
pop
add
add
pop
pop
jp
and
gs
test
addl
add
adc
mov
cld
pop
mov
outsl
rorl
inc
pop
sbb
jno
test
arpl
sub
int
stos
add
mov
add
add
mov
xchg
sbb
jl
dec
out
shrb
test
ret
out
xor
push
jae
push
leave
cmp
dec
mov
ss
and
jmp
jnp
inc
mov
lcall
xor
push
mov
pop
pop
stc
jnp
je
add
add
stc
push
or
loopne
lods
scas
add
mov
add
xchg
mov
and
sub
dec
cmpsl
dec
or
dec
test
or
push
addr16
pop
sbb
mov
mov
inc
adc
and
add
mov
mov
add
add
cltd
xchg
dec
cmp
push
nop
nop
sbb
add
in
outsl
fistps
pop
xor
jg
xchg
adc
add
stc
push
fisttpl
and
sbb
xor
push
aaa
sub
rolb
jbe
inc
dec
inc
jne
into
test
pushf
ja
mov
imul
or
add
addl
jg
sahf
aas
pop
cmpl
cmc
out
mov
add
mov
mov
push
sub
xchg
dec
leave
popa
jne
fdivr
mov
adc
cmc
add
push
jg
enter
dec
aad
ret
dec
ds
ret
std
out
dec
clc
sbb
jecxz
cmp
pusha
adc
aad
adc
repnz
or
xor
add
add
mov
jle
test
test
dec
and
mov
add
add
sub
pop
and
sub
daa
gs
dec
jns
push
adc
scas
scas
in
repz
rcrl
ret
in
test
imul
or
shll
shll
dec
jo
sahf
sbb
lret
add
xor
fsub
add
neg
mov
mov
mov
push
mov
insl
clc
inc
pop
mov
cmp
add
mov
adc
push
cmp
jbe
ds
xchg
add
or
jo
add
add
adc
ss
cmp
data16
inc
jmp
xchg
push
cmp
stc
ret
cmp
mov
bound
add
jne
pop
shll
call
fcomi
sbb
jecxz
or
scas
lcall
pushw
jl
add
mov
push
es
cmp
fimuls
fwait
jbe
inc
stos
loopne
jle
jmp
cwtl
js
loopne
int3
int3
int3
int3
sub
push
pop
sarb
add
add
xor
pop
shrl
div
lods
adc
pop
subb
hlt
fnsave
xor
inc
iret
sar
cmp
mov
andl
mov
mov
mov
out
sbb
roll
add
add
aaa
sub
cli
out
cmp
push
inc
mov
sahf
ret
xor
and
add
add
sti
aaa
leave
mov
dec
adc
in
add
add
clc
leave
sub
push
or
out
inc
xchg
popa
xor
gs
dec
or
cmp
jl
inc
mov
sub
dec
lret
dec
cmc
add
sbb
mov
bnd
sbb
sbb
add
add
sahf
popf
jo
flds
lock
dec
sbb
fmuls
push
pop
xchg
ret
out
shr
cmc
lods
sti
or
jbe
jmp
mov
and
push
mov
or
cli
int
popf
icebp
stc
decl
mov
mov
movsl
add
imul
jo
fmull
or
pusha
cltd
mov
stos
mov
jecxz
cmpsl
rorl
stos
call
xchg
arpl
pop
mov
jbe
aad
divl
addb
inc
jne
cmp
les
mov
inc
out
cmp
add
pop
mov
inc
mov
sahf
mov
adc
scas
pop
out
ret
add
add
cmp
loopne
sahf
sub
push
into
fmul
rorb
mov
cli
push
mov
mov
adc
lea
mov
mov
adc
jl
psadbw
add
add
aas
push
fst
sbb
aad
cmpsl
xchg
mov
test
push
mov
shrb
daa
mov
leave
pop
jnp
clc
mov
int3
int3
int3
or
or
xor
rcrl
xacquire
add
mov
hlt
jmp
ja
xchg
jecxz
inc
lret
movsl
fs
xrelease
add
jns
xor
loopne
push
pop
rcl
jbe
lds
outsl
ficompl
push
stos
cs
js
clc
sub
jno
stos
addr16
lret
or
cwtl
mulb
cld
dec
mov
jge
stos
repnz
pop
fs
xchg
pop
push
and
push
popf
out
mov
pop
leave
cld
insb
push
jb
int
cmp
add
add
push
cmp
jge
pop
leave
jo
lods
in
in
pop
push
lahf
and
imul
and
push
cmp
mov
fnsave
out
aam
jns
jae
cmp
int
cmp
stos
aaa
pop
jmp
xchg
pop
jl
push
fimull
mov
les
cli
dec
pop
and
mov
mov
add
add
add
mov
rcrb
sahf
in
outsb
hlt
into
fnstenv
add
cltd
xchg
test
mov
inc
or
inc
or
or
cmp
fnstenv
call
pop
sbb
pusha
bswap
aas
movsb
push
lcall
add
add
mov
sbb
enter
sbb
mov
mov
sub
inc
inc
into
fcomp
jmp
dec
jae
fnstcw
scas
sub
lods
repz
scas
push
jle
add
out
mov
jmp
dec
add
add
add
into
mov
fdivs
mov
cmp
neg
add
sbb
popa
push
movsb
pop
aas
ret
xchg
inc
das
movsb
push
iret
and
or
dec
lret
ss
stos
push
xchg
mov
mov
pusha
dec
xlat
add
rolb
add
insb
push
xor
bound
inc
mov
arpl
fcmovnb
sti
fwait
and
push
or
out
test
je
add
add
call
lods
xor
bswap
loop
mov
sub
outsl
inc
jg
mov
loopne
xchg
scas
xchg
xchg
lods
imul
push
in
sbb
cwtl
jo
scas
mov
xor
dec
lcall
outsb
int
test
lret
sbb
and
xchg
imul
mov
jns
add
add
xchg
in
daa
mov
mov
daa
cltd
mov
in
pop
ret
jg
ja
test
push
bnd
jp
movsb
addl
push
cmp
ljmp
ds
int
add
test
movsl
inc
xchg
lock
cmp
adc
inc
pop
sub
je
xor
xchg
call
dec
fs
jecxz
incl
imul
dec
ljmp
movsb
pop
cmp
or
call
scas
ret
or
pop
out
ss
or
leave
rol
xor
out
xchg
mov
outsl
orl
out
fimull
inc
mov
in
testb
or
fmulp
add
adc
cmp
int3
int3
icebp
push
mov
cltd
inc
add
add
sub
pop
dec
push
aas
add
push
adc
xchg
aad
adc
add
subl
push
and
mov
add
daa
add
add
ss
xchg
xorb
shll
repz
push
cmp
mov
lahf
jno
jb
add
add
rcrl
repnz
daa
test
push
in
xorl
mov
mov
je
pop
aaa
daa
cmpsb
rolb
push
fdivrp
dec
into
lret
add
shll
xchg
and
push
lods
mov
pop
push
loop
push
lods
sub
mov
mov
add
add
xchg
lock
je
xlat
movsl
add
add
imul
xchg
stos
inc
xchg
repnz
and
xor
add
xchg
call
enter
adc
movsl
imul
mov
mov
popa
jge
pop
rorl
push
leave
ret
ljmp
sti
jbe
xchg
inc
jae
out
or
ja
dec
xchg
or
icebp
or
mov
pop
frstor
xchg
fdivrl
pop
add
add
mov
sub
add
scas
or
add
add
in
lcall
push
jl
jb
lods
shlb
dec
aad
and
jnp
rorl
add
xchg
or
lret
jecxz
or
dec
adc
adc
int
mov
sub
or
mov
add
lds
pop
jb
and
in
or
out
xchg
int3
int3
int3
mov
sub
shlb
mov
or
mov
inc
ss
rcll
push
bound
lock
mov
push
and
inc
or
inc
dec
or
lahf
inc
gs
inc
pop
xchg
mov
bound
clc
push
int3
outsb
push
and
pop
cmpsl
repz
add
add
xchg
jnp
inc
jae
dec
test
repz
hlt
sahf
ficoms
add
add
ret
movsb
sbb
add
mov
cmp
icebp
cwtl
dec
in
in
mov
mov
mov
int3
sub
add
add
movsl
jmp
lea
jmp
insb
pushl
fistpll
mov
outsl
add
add
jns
mov
mov
jbe
push
ret
jp
cmp
insb
add
jae
xchg
mov
push
xchg
int
and
nop
and
pop
lds
gs
subl
aas
aaa
outsl
pop
int
outsb
clc
inc
pop
push
dec
mov
orb
rclb
inc
mov
js
pop
jecxz
sub
mov
gs
xor
stos
clc
imul
out
cwtl
jno
fdivl
int
jns
icebp
cli
xchg
insl
imul
xor
bound
cli
add
add
addb
mov
sbb
fimull
sbb
push
movsl
add
add
mov
sub
frstor
and
mov
leave
and
jge
cltd
fcompl
xor
cmpsl
loope
out
pop
lahf
pop
and
es
pop
in
mov
sbb
xchg
mov
push
sub
bound
mov
insl
mov
std
pop
rclb
out
mov
add
pop
mov
mov
xor
out
sub
jge
pop
repz
dec
add
add
movsb
sbb
add
je
cld
incl
fwait
lret
out
inc
sub
rcll
xor
mov
fldt
sbb
and
cmp
push
inc
inc
adc
mov
jno
jmp
add
xchg
pop
stc
jmp
jg
data16
and
xchg
dec
inc
jle
imul
adc
xor
arpl
pop
fmul
ja
add
add
int3
int3
int3
int3
xor
sub
xchg
jg
pop
imul
mov
xor
ss
xlat
ss
push
hlt
je
clc
in
inc
pop
inc
mov
mov
lahf
out
add
or
lods
loop
xchg
fcomip
add
lea
jg
shrb
add
fdivrs
shll
or
xor
lret
cmp
fists
sbb
xor
out
sbb
pusha
mov
push
nop
in
dec
pop
or
add
add
push
inc
add
ror
mov
jge
mov
pusha
flds
mov
sub
lds
int
mov
mov
push
adc
push
movsb
je
incb
xchg
fs
loop
sbb
rcl
jo
fstpl
add
pop
push
jns
add
add
pop
push
push
repnz
mov
repz
iret
cld
les
sti
xor
push
inc
inc
mov
dec
push
insb
inc
stos
xchg
sbb
sahf
pop
rcl
add
xor
or
icebp
mov
xor
sbb
test
fwait
in
and
or
adc
int3
int3
int3
pop
aad
in
ret
inc
addr16
in
fdivl
add
add
add
arpl
xor
enter
rol
jmp
cltd
dec
hlt
icebp
or
mov
sub
lea
rolb
loope
in
lcall
or
dec
mov
cbtw
lret
scas
arpl
ret
or
jne
adc
std
xlat
add
sbb
add
add
insl
jnp
push
dec
inc
cltd
or
pop
sahf
jmp
fisubl
mov
lods
pop
lods
cmp
outsl
aas
and
movsl
leave
xor
lods
mov
add
aam
mov
adc
shrl
jo
outsw
push
lret
add
pushf
xchg
jno
int
enter
and
addr16
cmp
or
mov
cmc
pop
inc
sbb
jno
icebp
dec
push
je
sbb
cmpl
int
push
leave
scas
sarl
mov
pop
imul
and
push
loopne
fidivrs
jmp
pop
ret
adc
add
add
pushl
repz
test
test
loope
ds
not
movnti
xor
orb
mov
xchg
js
jnp
add
pop
mov
xchg
nop
sbb
pusha
push
adc
out
loopne
in
xor
subb
sbb
fs
in
aaa
or
outsl
push
cmpsl
in
mov
add
add
jmp
mov
call
test
cmp
bound
dec
fs
pop
mov
aaa
out
cmp
cld
add
add
adc
in
mov
or
mov
outsl
inc
out
loop
ja
sub
ss
scas
sub
or
or
add
mov
jne
fmuls
fcomps
cwtl
into
aam
je
idivl
add
jle
sbb
push
xlat
dec
nop
adc
or
add
add
dec
mov
push
or
rcrb
and
testb
insl
push
adc
xor
test
fcoml
fbld
add
xchg
lock
ljmp
fs
mov
test
xor
loope
dec
pop
div
xchg
filds
push
mov
sti
sbb
dec
adc
push
jno
lods
cmp
xor
movsb
cmp
sbb
int3
int3
int3
mov
push
mov
mov
and
loope
sarb
std
lods
sbb
cmp
lahf
xor
add
and
lret
jbe
mov
push
dec
and
adc
xchg
pop
adc
add
add
adc
cltd
dec
ret
movsb
enter
repz
mov
sbb
lock
jl
cwtl
push
push
das
imul
inc
frstor
jae
pop
popa
popa
jmp
mov
addr16
stc
inc
add
add
test
sub
lods
sbb
repz
insb
mov
iret
lcall
sub
inc
scas
fdivl
add
add
sub
repnz
xchg
and
out
jmp
or
cmp
js
int3
repz
ljmp
xchg
add
add
shlb
mov
mov
test
sub
lret
loop
aad
mov
popf
xchg
in
ljmp
xlat
pop
and
xlat
cwtl
mov
addl
add
insl
jp
incb
ficoml
jl
js
sti
pop
cltd
cwtl
sbb
cmpsl
movsl
out
sub
mov
add
xor
pop
iret
push
andl
adc
lock
shlb
cmp
pop
aad
dec
in
jbe
outsl
addb
insb
and
pop
push
mov
leave
fdivs
nop
out
sbb
bound
sti
int3
scas
push
xor
into
js
xchg
xor
sbb
stc
and
jg,pn
inc
add
lret
movsl
or
adc
cmpsl
leave
adc
int
nop
outsb
xlat
mov
add
pop
and
iret
jno
xchg
insl
and
roll
aas
mov
xor
enter
je
dec
add
sbb
sub
mov
mov
mulb
push
xor
in
in
dec
out
out
xor
mov
add
add
pushl
stc
fs
sbb
push
pop
cmp
xchg
movsl
push
in
sub
push
imul
enter
popa
aad
jne
add
dec
mov
jne
or
stos
jle
sbb
scas
dec
fucomp
lods
mov
fwait
add
add
mov
into
push
sub
xchg
jmp
movsb
jns
adc
mov
cs
push
add
call
push
popf
cmp
lds
in
sub
lcall
je
push
sub
arpl
pop
cmpxchg
movsl
pusha
ficompl
sbb
insl
mov
sbb
aam
mov
add
inc
notl
push
loope,pn
adc
insl
cmpsb
jns
add
add
xchg
ret
xchg
xchg
pusha
repnz
xchg
lret
sahf
imul
pusha
es
pusha
in
or
xor
or
cmpsb
sahf
lods
adc
loopne
mov
cmp
iret
addl
into
aam
sub
jbe
mov
mov
jnp
push
mov
mov
pop
dec
cmp
sub
mov
movsl
loop
mov
sbb
xchg
ljmp
cmovnp
sbb
inc
push
add
aam
shlb
mov
jnp
or
xor
aad
sti
fs
jmp
rorb
xor
dec
mov
ljmp
dec
sbb
aam
mov
repnz
stos
cwtl
cs
jno
add
add
push
mov
mov
sarb
call
in
jmp
inc
mov
xor
std
cmp
cmp
lds
fxam
push
filds
arpl
movsb
mov
imul
add
filds
jo
cmpsl
les
ja
inc
pop
in
popa
cmpsb
mov
inc
pushf
xchg
and
mov
ret
or
add
fmulp
dec
xchg
jmp
xchg
jle
push
out
dec
loope
adc
mov
xor
mov
stos
xchg
push
sbb
mov
repz
jns
push
ds
cmp
dec
xlat
sub
stos
push
insb
test
aam
fcoml
sti
leave
cmp
add
add
inc
adc
out
mov
div
jge
or
inc
scas
sti
ds
push
adc
js
icebp
jge
adc
mov
push
add
add
mov
pop
adc
pop
arpl
and
out
iret
bound
iret
cli
sub
pop
ss
movsl
xor
pop
lods
insl
inc
jmp
dec
popf
daa
in
push
dec
insb
cmp
test
sbb
push
dec
popl
outsb
push
mov
push
push
add
add
adc
cli
adc
rorl
filds
add
push
je
jae
xchg
xor
lcall
xor
stc
aas
sti
rolb
test
cmp
cmpsl
sarl
ss
mov
int
mov
add
add
loope
adc
push
inc
pushf
or
in
sbb
in
pop
popf
inc
xchg
and
add
add
jp
xchg
std
add
and
outsb
mov
das
neg
aad
mov
sbb
dec
or
mov
lret
jecxz
cmp
lds
jecxz
or
fdivl
mov
add
push
inc
or
outsl
mov
xchg
adc
fldcw
pop
test
mov
mov
jl
pop
jnp
pop
jb
arpl
jmp
vmovups
repz
xchg
lret
dec
adc
lock
add
xor
add
jmp
lods
jp
fimull
jns
push
sbb
mov
sarb
sub
in
icebp
jp
arpl
mov
loopne
or
inc
mov
mov
jae
mov
sub
int3
int3
int3
repz
pop
push
jl
add
jg
adc
pop
mov
or
fsubp
add
sahf
cmpsl
ja
cmp
in
xor
inc
mov
imul
in
rcll
inc
enter
inc
ffreep
xchg
loope
jl
lret
sahf
movswl
add
add
push
cmp
or
ret
or
sbb
lea
cmpl
cmp
jnp
jbe
xchg
dec
pop
xlat
jnp
in
mov
out
jmp
sbb
popf
imul
ret
aam
aaa
xor
add
add
loopne
mov
cli
add
add
cmp
jp
leave
in
mov
inc
cmc
test
push
sbb
in
je
lcall
pop
js
xchg
xchg
rorl
jge
into
jmp
mov
int
xor
and
scas
sbb
push
rorl
ret
bound
rorl
in
push
inc
xor
add
add
cmp
pop
das
sub
lods
mov
les
add
add
rol
jl
add
and
mov
mov
or
add
push
pop
sarb
stos
xchg
ret
cli
or
repz
out
cmpsb
xorl
inc
jle
divb
adc
jns
dec
inc
pop
xor
cmp
mov
xchg
push
test
int3
int3
int3
push
dec
data16
add
xchg
insb
cli
aad
pushf
xchg
mov
and
icebp
sar
pushf
dec
dec
mov
add
jle
movsb
sub
loop
mov
pop
ret
stos
and
test
lret
jns,pt
cmp
sub
cld
aam
mov
popa
add
add
inc
mov
shlb
fbstp
mov
xchg
loope,pn
mov
add
jnp
lock
sub
dec
adc
ret
add
add
mov
inc
and
cwtl
inc
test
lock
xor
test
mov
xchg
dec
outsl
movsb
xchg
divl
addr16
cmpsl
les
inc
cmp
cmp
cli
in
fld
cwtl
shrb
jmp
in
dec
es
mov
out
pop
add
add
mov
test
push
fsubr
sub
push
orb
into
jnp
das
sbb
fidivrs
lcall
fidivl
test
add
add
sub
popa
imul
xchg
cmp
sub
sub
fs
clc
cmp
hlt
cs
adc
xlat
add
ss
ljmp
pop
mov
mov
les
and
inc
cli
add
add
in
add
mov
jle
adc
popa
clc
xchg
pop
sbb
fmul
aas
subl
aas
push
sbb
jns
pushf
mov
gs
or
dec
sub
and
or
pop
mov
addr16
cmpsl
jle
imul
mov
xor
sub
push
sbb
mov
imul
invd
jo
add
add
adcb
push
add
mov
mov
int3
int3
int3
int3
shll
sbb
mov
cltd
or
fsubrl
jb
cwtl
out
push
or
nop
xor
sbb
jmp
repz
inc
jne
cmp
shll
pop
mov
cmp
add
adc
daa
popl
dec
adc
jg
sub
xor
xchg
aas
push
jne
jne
jge
flds
jmp
inc
push
mov
adc
jno
js
out
test
inc
imul
les
mov
xor
test
lret
pop
dec
pop
add
sub
add
insl
hlt
fcompl
xchg
xor
or
sub
push
lret
js
xchg
imul
mov
xchg
lcall
add
add
add
add
xchg
call
out
mov
repz
iret
mov
call
iret
sbb
sub
cmp
test
sub
xchg
jle
push
add
data16
popa
lret
add
add
into
cmp
out
das
add
jns
stos
popa
stos
dec
add
fldt
mov
and
pop
aam
sti
out
icebp
xor
out
push
leave
cmp
jbe
pop
mov
add
add
adc
cmp
xchg
mov
arpl
jecxz
dec
cmp
into
jmp
mov
fs
sbb
jb
dec
outsb
jns
or
sub
mov
sbb
inc
or
add
add
xchg
push
jno
pop
push
sub
in
push
ljmp
sub
cmpsb
jbe
sbb
inc
out
jge
inc
shrl
or
bound
lock
add
add
add
test
es
cwtl
imul
xchg
mov
add
add
vhaddps
gs
pop
cli
cmpsl
mov
cmp
mov
cmp
stc
xor
imul
sub
add
mov
push
popa
dec
add
test
test
mov
mov
and
adc
push
jb
mov
test
add
add
das
inc
jle
push
mov
sbb
ss
int3
int3
mov
out
shll
jnp
xor
out
es
cmp
in
cmp
sub
mov
movsl
xchg
gs
out
je
outsb
pop
ja
in
add
push
loopne
hlt
xlat
shl
and
adc
subb
xchg
aas
add
add
repz
fstl
fs
and
fbld
inc
sub
adcb
cmp
cwtl
sbb
and
loopne
push
in
fldt
daa
dec
mov
das
out
add
add
roll
insl
cmp
xchg
jno
shrl
jae
push
push
loop
sahf
imul
into
sub
mov
sub
adc
push
pop
push
adc
and
in
sarb
scas
lahf
mov
add
add
jb
hlt
fdivs
inc
and
xchg
cmc
mov
pop
mov
jnp
push
sbb
gs
out
inc
jmp
cwtl
add
shll
leave
jge
add
out
or
loopne
lret
imul
repz
add
add
fucomi
loop
gs
fisubl
ret
enter
mov
add
fisttpl
nop
sbb
pop
divb
jg
repz
mov
pop
xor
mov
cmp
imul
pop
andb
jns
lods
in
adc
dec
ja
cmp
pop
aas
pop
mov
pop
into
mov
jno
movsb
outsb
pop
jl
mov
jno
repnz
sbb
add
add
pop
in
imul
arpl
mov
insb
divl
lret
out
cwtl
and
pop
std
imul
adc
pop
push
imul
outsb
jns
xchg
ss
inc
xor
add
repnz
add
sub
inc
jae
push
inc
out
test
mov
push
sti
xor
mov
mov
flds
xorb
xor
mov
sti
les
mov
shl
or
call
jbe
popa
sub
push
testl
insl
divb
cmc
lods
cs
nop
cmc
jno
movsl
lods
sub
enter
push
stc
xor
mov
jo
inc
out
js
add
pop
push
lock
sub
test
sti
jle
ss
fwait
sbb
sbb
mov
in
imul
into
xor
std
mov
adc
xlat
mov
and
test
js
out
repnz
add
sub
sti
sbb
test
add
add
push
and
xor
ficoms
fstl
test
jb
adc
nop
add
in
scas
mov
lret
add
cmpsl
mov
mov
cltd
pop
test
movsb
mov
pop
mov
out
or
pop
push
pop
mov
sbb
sub
test
inc
cld
outsl
rorl
mov
pop
dec
pop
dec
xchg
xchg
std
je
popf
or
mov
xor
mov
pop
lahf
sbb
and
dec
and
and
sbb
add
add
mov
cmc
mov
sub
cmpsl
sbb
in
pushf
inc
cmp
add
ret
push
pop
pop
incb
movsb
lock
test
maxps
pusha
jge
das
aad
pop
ret
mov
inc
jmp
ja
sti
push
mov
mov
push
xchg
test
add
loopne
nop
push
mov
lret
bound
jo
fwait
add
add
push
cmp
jbe
stos
inc
shlb
adc
add
ss
jbe
out
jl
je
jecxz
jno
push
xchg
inc
popa
insl
inc
xchg
jo
mov
or
stc
outsl
imul
mov
jl
orl
adc
sbb
jnp
add
and
movl
lret
mov
les
gs
sbb
add
add
cmp
lahf
mov
adc
popa
xchg
jp
in
lret
lahf
cli
or
push
adc
xchg
test
add
add
and
test
add
xchg
lret
fs
sub
cwtl
push
fistpll
repnz
sub
jns
or
in
xor
or
sub
push
and
xchg
addr16
stos
es
loop
out
ret
push
nop
mov
add
add
out
inc
cwtl
imul
in
and
add
add
test
or
std
out
jo
mov
aad
sti
into
mov
lock
cltd
dec
nop
cmp
mov
ljmp
jl
sbb
xor
jne
inc
dec
shlb
inc
push
mov
adc
xor
andb
lcall
insl
mov
add
stos
out
jg
into
jae
push
add
int3
movsl
insl
gs
out
push
aam
add
in
dec
rorb
inc
roll
add
xor
xchg
outsb
jne
cmp
repz
outsl
arpl
bnd
sbb
cmc
push
aad
iret
push
sbb
mov
or
add
shrl
jae
mov
pop
testb
inc
push
addr16
add
inc
pop
add
mov
out
jecxz
fs
lods
add
add
add
jno
add
loope
push
cwtl
jp
rcll
sub
ret
adc
scas
mov
or
xchg
push
aas
cmp
fldt
adc
mov
loop
xor
ja
sbb
popf
adc
mov
lock
and
mov
lcall
pop
and
or
push
xchg
mov
pusha
or
push
xchg
mov
and
out
cmp
popf
cld
out
mov
sub
mov
bound
add
add
sti
hlt
cwtl
xor
popa
xchg
add
add
pop
mov
inc
cmp
xor
mov
mov
xor
icebp
ret
push
mov
mov
or
pop
stos
or
lds
sbb
or
push
jp
cld
or
in
orb
adc
inc
adc
cltd
fisubl
es
movsb
pop
lcall
lea
pop
shll
push
rol
inc
push
rclb
push
and
sub
jae
andb
mov
sub
popa
and
add
add
imul
and
loop
mov
subl
mov
sub
and
xchg
push
out
mov
movsb
int
sbb
aad
mov
hlt
mov
shll
push
addr16
sti
leave
push
add
mov
outsb
jne
fsub
pop
add
mov
add
add
cs
pusha
mov
int3
int3
cmp
push
jns
sub
pop
aam
imul
fwait
in
add
add
jbe
out
es
cmp
and
add
xchg
sar
cld
sbb
test
add
mov
adc
outsb
lods
xor
insl
sahf
pop
xchg
orb
loopne
push
out
cmpsb
sbb
mov
mov
movsb
test
jmp
ret
cwtl
add
add
arpl
out
int3
and
adc
bound
inc
pop
sub
sbb
gs
cmp
cmp
dec
mov
je
test
add
scas
mov
js
in
push
sti
mov
xor
add
sbb
xor
mov
jle
inc
es
add
movsb
int
or
inc
lds
js
sub
add
int3
xor
outsb
xorb
lods
xlat
dec
cmpb
add
test
test
call
add
add
add
int3
test
stc
test
loope
sbb
add
inc
add
add
add
add
adc
iret
mov
decb
push
movsb
loope
mov
outsb
and
imul
mov
jge
mov
mov
and
jle
mov
xchg
jp
call
pop
inc
mov
lahf
sbb
mov
or
pop
or
mov
mov
pop
sub
int3
inc
sub
mov
add
add
ret
inc
out
rorb
jae
sbb
data16
push
int3
int3
int3
int3
int3
pop
dec
inc
cmpsl
fsub
imul
mov
fcmovnbe
push
fwait
jne
pusha
dec
in
jg
fnstenv
sbb
lcall
or
inc
or
sbb
dec
aaa
dec
sbb
mov
stos
add
std
aaa
xor
in
daa
mov
add
add
lcall
jmp
sti
mov
fbstp
push
call
mov
fists
cmp
nop
jecxz
dec
or
xor
test
add
rclb
stos
dec
inc
pop
sbb
pop
loope
out
clc
jecxz
in
ja,pt
mov
adc
xchg
jecxz
pop
mov
lods
or
popf
push
cli
sub
imul
sti
pop
inc
imul
sti
jmp
sbb
add
add
push
iret
sbb
rclb
ror
int
aam
push
jbe
mov
sahf
xor
lock
test
pop
cwtl
jns
and
dec
cmp
scas
fisubrs
repnz
pop
xchg
add
add
stc
fildl
lods
inc
pop
xlat
pushf
iret
bound
ja
add
shll
or
sbb
repnz
pusha
jl
insb
push
cli
test
fisubl
sbb
xchg
add
add
test
mov
rol
sbb
mov
outsb
in
out
mov
inc
mov
sarl
cmpsb
and
daa
ja
add
add
jmp
xchg
cli
xor
or
loope
ljmp
in
mov
xor
in
jae
loope
mov
xorl
das
mov
jnp
insb
and
jmp
ljmp
adc
mov
xchg
js
pop
imul
cmp
add
add
sub
cmp
js
push
insb
pop
rol
out
cmpsl
fwait
jle
pop
xchg
or
add
add
std
adc
jg
mov
lock
mov
das
dec
add
add
jp
fistpll
push
lock
cltd
lcall
aas
pop
shlb
test
mov
inc
and
add
add
xor
jmp
pop
cmp
pop
faddp
loop
mov
in
adc
sarl
jo
es
push
sahf
cltd
jge
jo
es
int3
int3
cmpsl
mov
or
nop
gs
add
cmc
nop
sarb
push
pushf
pop
int3
inc
cwtl
cmc
pusha
cmpsl
pop
and
push
iret
divl
pushf
sbb
inc
add
add
cmp
testl
sbb
xchg
outsb
sbb
jle
xchg
es
mov
popa
int
adc
or
frstor
inc
call
stc
cli
inc
jp
push
nop
jl
cltd
ja
imul
xchg
mov
ds
jo
fs
add
add
inc
enter
mov
sub
xchg
dec
aad
xchg
dec
cmc
outsl
jno
pop
mov
mov
mov
pop
add
add
test
into
insb
sahf
mov
es
scas
or
aaa
scas
sbb
in
cmp
imul
mov
repz
jo
xor
std
icebp
dec
adc
mov
add
ja
test
loope
jno
push
mov
dec
into
dec
mov
in
mov
sbb
sbb
xor
jns
add
and
jg
or
mov
aam
mov
mov
stc
xchg
pop
adcl
adc
lods
in
push
cmc
movsb
push
jnp
pop
pusha
inc
adc
test
sbb
dec
mov
mov
cld
int
xchg
test
or
pop
push
hlt
pop
pop
icebp
in
sbb
adc
mov
addl
mov
pop
or
add
add
lret
pop
outsb
mov
dec
nop
and
jbe
adc
das
dec
pop
lahf
loopne
jnp
out
cltd
idivb
mov
bound
add
add
fwait
into
pop
hlt
and
push
loope
xchg
popa
scas
repz
enter
adc
mov
fsubrp
ja
add
add
mov
jnp
or
lahf
aad
data16
pop
int
lods
cmc
jmp
cld
lea
adc
and
out
jae
sbb
out
ljmp
roll
cmp
cmpsl
push
dec
jl
ror
mov
xor
test
cmpsb
add
add
mov
and
popa
imul
jae
adc
adc
insl
push
js
mov
xor
in
mov
es
pop
add
add
fcmovbe
aad
ja
out
jae
rcll
negl
inc
les
ret
xchg
imul
xchg
fldcw
and
jb
sub
inc
lcall
sbb
test
add
add
leave
shll
bound
rcrb
mov
aas
inc
movsl
or
mov
lret
dec
fs
bound
and
cmp
cmp
hlt
adc
add
call
mov
dec
dec
and
std
xchg
out
pop
xor
mov
lea
test
cmp
int3
int3
and
mov
js
mov
repz
shl
lock
dec
add
add
mov
jge
sbb
aam
int
es
cmp
xchg
aaa
arpl
ret
fstpt
xchg
mov
sbb
jecxz
and
or
add
add
add
xor
push
sbb
cmpsb
mov
mov
test
mov
dec
jo
inc
mov
out
adc
mov
inc
mov
mov
push
mov
fwait
sub
sbb
aad
je
add
add
mov
add
rorb
out
stc
inc
arpl
add
push
and
or
icebp
fistps
data16
scas
aam
mov
inc
or
addr16
mov
and
push
mov
lods
pop
pop
xor
imul
daa
xchg
fisubrl
adc
jge
iret
sub
mov
das
out
shll
xor
adc
popa
pop
mov
push
add
add
inc
add
pop
leave
cmp
hlt
bound
add
add
lods
test
dec
fbstp
mov
jbe
repz
jge
in
enter
mov
cmp
movl
loope
out
push
pusha
sti
xchg
sub
adc
in
jl
cmp
aas
outsb
mov
nop
mov
lock
mov
mov
add
add
ja
xchg
outsb
mov
jo
sbb
stc
testl
mov
or
addr16
shl
popf
roll
sub
aad
scas
push
imul
xor
imul
fldt
push
lods
jmp
call
xchg
outsl
inc
movsl
add
popa
daa
sbb
popa
jmp
cld
lods
aam
xchg
sbb
xlat
test
add
add
in
push
lret
jge
imul
pop
outsl
aas
jno
adcl
add
sbb
xchg
dec
xchg
cmp
jb
sub
cmc
lods
jbe
mov
inc
into
test
gs
push
pusha
add
adc
pop
add
add
cmpsb
inc
add
adc
cltd
xchg
cli
sti
jae
push
cs
shr
add
xchg
pop
dec
shlb
cltd
sarb
jp
flds
cli
dec
ret
sti
punpcklwd
insb
das
add
add
inc
ret
stos
out
push
jns
mov
mov
subl
ss
dec
lds
aas
inc
jmp
int
fsubr
mov
fucomip
sub
sub
out
add
adc
pop
xchg
test
push
sbb
push
repz
loopne
add
add
mov
fldl2t
jo
or
bound
mov
inc
mov
jmp
shrb
pop
pop
rcll
outsb
into
mov
sbb
adc
test
out
sarb
dec
fwait
lock
and
std
push
mov
inc
mov
jo
pop
inc
jmp
lcall
and
dec
push
ds
out
sbb
mov
dec
leave
jg
lret
xchg
xor
aad
int3
int3
int3
int3
ret
data16
sahf
repz
rcr
cmp
lods
orl
cmp
adc
and
pushf
out
cmp
push
add
pop
jae
pop
aas
mov
add
mov
fnsave
or
inc
lret
lahf
push
je
addr16
and
mov
sub
ds
pop
inc
mov
cs
enter
in
movsb
sbbl
fistl
sub
push
insl
arpl
mov
add
add
in
fs
stc
in
pop
incb
stos
dec
inc
jno
push
fnstenv
stos
mov
lret
imul
sti
out
jle
push
pop
jmp
mov
mov
fldenv
xchg
outsl
les
test
lcall
xor
jbe
add
cmp
cmpsb
icebp
pusha
push
adc
out
add
add
mov
stos
leave
aad
mov
xchg
sahf
dec
dec
pop
sub
jnp
xchg
stos
insb
sbb
or
arpl
xchg
lcall
loop
popa
add
add
push
addr16
xlat
shrb
mov
sbb
pop
and
xor
add
add
les
cmp
out
mov
pusha
lea
xchg
enter
aad
pop
in
les
adc
in
mov
lahf
fistpll
loopne
xor
lds
test
ret
enter
daa
pusha
and
push
or
pop
test
jecxz
dec
in
push
out
test
cmp
enter
aaa
pop
add
add
add
shlb
and
dec
dec
inc
mov
movsl
arpl
ljmp
add
cmp
leave
dec
mov
jns
loopne
cmp
sar
test
ficoms
dec
enter
add
ret
loope
xor
ljmp
or
rcr
repnz
add
or
cwtl
jmp
xor
cld
add
add
add
jns
fmuls
lock
xlat
and
jge
in
adc
nop
jmp
xor
sbb
xor
add
insl
mov
lods
jge
fmul
push
push
in
mov
push
inc
ds
cmp
add
and
in
sahf
les
add
je,pn
mov
lret
test
xor
test
push
fisubrs
and
cmp
sub
mov
pop
fdivp
mov
dec
add
add
in
pop
out
ja
push
orb
pop
dec
sbb
cmp
mov
iret
cwtl
xchg
popa
repz
and
outsb
pop
mov
sub
push
gs
inc
push
cli
arpl
lahf
pop
jmp
pop
inc
out
xchg
and
and
xchg
lods
leave
xchg
lret
fdivs
mov
iret
xchg
scas
inc
out
ja
add
add
sub
fists
test
mov
lret
scas
cli
fwait
add
add
stos
push
icebp
jle
movsb
out
ret
xor
jbe
adc
sub
inc
or
daa
push
xchg
cmpsb
cmpsl
xchg
iret
sub
cmc
adc
pop
rcrb
add
add
add
dec
pop
icebp
sbb
dec
add
inc
jb
mov
mov
xchg
insb
pop
into
mov
jnp
push
or
jp
rol
xor
xchg
xor
adc
mul
or
lods
imul
jb
movsl
xor
int3
int3
int3
lret
dec
int
stos
jnp
inc
mov
insl
adc
add
add
shll
pop
jmp
mov
das
mov
xlat
jne
add
mov
inc
lock
mov
cs
std
mov
shlb
into
sub
bound
xchg
stos
sbb
ljmp
mov
sbb
aaa
shlb
test
fistpll
lods
pop
cmpsb
push
pop
imul
nop
cltd
dec
movsl
stc
and
in
mov
js
inc
xor
fbstp
and
out
and
fldl2t
out
call
xor
jp
and
cmp
push
cmp
xchg
scas
mov
std
xor
out
sub
add
add
jo
sub
pop
clc
bound
bound
add
add
mov
mov
int
adc
js
jge
ficomps
les
pop
cmp
add
add
test
int3
lahf
stos
mov
or
xchg
rorl
jp
ds
jge
jg
cmp
xchg
das
loope
push
leave
fs
adcl
or
mov
mov
repz
dec
jo,pn
mov
sbb
insb
sbbl
out
dec
movsb
xor
pop
aaa
push
sub
in
adc
push
push
call
ss
xchg
xlat
adc
cmp
dec
cwtl
add
in
ret
bound
and
dec
and
lock
inc
mov
mov
xchg
sbb
sub
adc
adcl
add
add
fwait
decl
rclb
cmpsb
push
sub
arpl
adc
push
dec
addr16
jns
sbb
adc
xchg
jae
xchg
icebp
pop
and
add
ljmp
sub
shrb
sub
mov
inc
test
sub
add
add
dec
dec
sti
or
mov
add
adc
mov
sub
adc
adcb
inc
call
mov
jno
sahf
adc
int3
int3
int3
int3
int3
sub
repnz
dec
insl
andb
outsb
sahf
push
scas
arpl
popa
xchg
out
add
add
scas
adc
dec
enter
cmp
jae
pop
mov
mov
jle
inc
mov
push
mov
lods
leave
xchg
push
stos
cmp
jge
mov
bound
jns
cmp
sbb
add
cs
fmull
mov
jl
repnz
xchg
push
popf
sub
fidivs
xchg
cli
movsb
cmp
xchg
cmc
mov
sub
add
cs
cltd
aam
and
mov
lock
jb
and
cmp
in
xchg
xchg
outsb
adc
add
add
adcl
sti
icebp
stos
roll
sub
mov
sarl
xchg
xchg
lcall
test
push
mov
xchg
test
lea
cmp
pop
fldl
inc
sbb
fsubrp
int3
out
mov
add
add
cmpsb
insb
mov
jbe
inc
movsl
mov
fsubl
andb
xor
movsl
int3
pusha
add
add
cmpsb
rcrb
sub
bound
cmp
pop
jge
pop
inc
xchg
inc
push
divb
xor
push
push
aad
mov
jmp
les
jno
fsub
fdivrs
add
add
cmc
dec
mov
push
cmp
inc
cmp
xchg
test
out
or
xor
and
inc
dec
add
add
and
es
int3
int3
int3
adc
xchg
insb
xchg
push
insl
add
add
or
and
xlat
add
add
clc
lahf
jb
xchg
or
ret
xor
push
aaa
xchg
imul
es
dec
inc
jbe
popa
hlt
sub
add
incl
dec
push
addb
add
icebp
push
xchg
andl
pop
add
add
add
loopne
xchg
outsb
aad
call
out
subl
arpl
xor
jo
pop
call
sbb
push
adc
enter
xor
xor
jecxz
leave
push
testb
loopne
dec
push
cmpsl
cmpsl
cwtl
mov
add
add
jl
insb
dec
sbb
xor
frstor
mov
xchg
push
aam
add
pop
in
xchg
inc
outsl
in
cmpsb
out
lods
cmp
add
add
in
xor
sbb
cwtl
cmc
mov
jnp
insl
mov
push
std
cmp
dec
mov
out
fucom
je
or
add
mov
in
lret
lods
cmp
mov
or
add
push
mov
mov
fstpt
sarl
xchg
jecxz
lods
pop
xor
je
popa
cltd
out
push
xchg
pushf
ret
xor
jb
xor
leave
jmp
out
mov
push
nop
por
jae
sub
iret
mov
pop
and
movb
shll
pop
push
jge
sbb
pop
xlat
pop
add
mov
mov
xchg
sbb
xor
add
add
push
nop
dec
xor
xor
mov
jle
cmp
xchg
mov
rorb
sbb
stc
adc
mov
addb
cwtl
ss
add
add
cli
or
inc
in
hlt
pop
sub
jne
loope
sub
mov
loop
or
daa
add
mov
daa
dec
repz
fwait
push
out
push
int3
jl
inc
adc
mov
out
je
push
das
imul
push
cmpsl
pop
sbb
sbb
push
or
cmp
dec
fisubrl
in
add
pushf
lock
bound
cmp
adc
repz
pop
roll
add
add
push
shrb
xor
leave
adc
mov
leave
cmp
mov
clc
icebp
sbb
outsb
jne
mov
pop
movsl
or
int3
int3
mov
mov
test
into
dec
addb
dec
xchg
pushf
outsl
lods
xchg
xchg
cltd
add
add
jmp
add
popa
jb
in
push
xchg
push
add
lock
adc
add
add
jmp
fs
bound
sbb
sbb
imul
jle
test
xchg
xchg
and
or
xchg
mov
fcompl
mov
icebp
rcrl
push
jle
sbb
out
jo
pop
mov
sti
mov
mov
sbb
add
add
xor
jl
clc
push
and
dec
notl
pop
shlb
lcall
test
pop
xchg
mov
lret
sbb
push
xor
mov
jns
jmp
dec
add
add
pop
mov
test
rcl
sahf
jle
popf
push
std
adc
pop
pop
jae
mov
xchg
aas
xor
add
into
jmp
leave
int
push
or
jne
ljmp
jb
popf
push
xchg
mov
cmp
cmc
lea
dec
addl
sub
push
push
scas
mov
test
adc
repnz
mov
adc
loopne
fwait
loopne
xor
shrb
stc
add
add
push
xchg
adc
and
sahf
cmc
cld
ds
jle
mov
dec
jae
xchg
pop
in
mov
sti
mov
enter
push
call
and
add
out
aas
scas
pop
sbb
add
add
arpl
insl
push
call
out
inc
fwait
push
cmp
outsl
movsl
push
cli
and
adc
mov
or
insl
jle
insl
fwait
add
std
inc
sbb
mov
and
out
mov
jb
pop
sub
cli
lcall
dec
mov
add
lea
add
sub
add
push
cmpsl
xchg
xchg
out
xchg
jb
add
mov
gs
add
add
popf
lea
stc
lods
into
sbb
cmp
popf
push
add
push
jg
test
add
add
ss
fcomp
aas
aam
mov
lret
xchg
enter
pop
or
jle
xchg
inc
rorb
mov
cli
loope
ss
cld
lds
shrl
loope
dec
mov
cmpb
cmp
add
add
mov
in
sti
nop
add
mov
outsb
dec
test
or
xchg
adc
adc
int3
int3
int3
int3
sbb
in
repz
lock
lds
and
lds
push
mov
pop
jbe
ja
or
gs
js
pop
pop
push
imul
aam
push
sub
xchg
mov
popa
add
add
int
add
cltd
adc
mov
fmull
pop
push
stos
xor
fildl
pop
imul
bound
aas
xchg
addb
jnp
xchg
cltd
inc
mov
icebp
jmp
mov
dec
mov
cmpsb
xchg
popa
fstpt
iret
pop
xchg
cmpsl
cwtl
pop
sbb
fcoms
xchg
mov
cmp
xor
and
or
in
mov
sbb
fistps
shlb
imul
dec
movsl
mov
or
sbb
mov
mov
mov
add
lods
pop
jno
jge
sub
pop
ss
fs
xchg
push
mov
lcall
scas
fs
mov
out
jb
dec
jbe
mov
jbe
add
add
scas
add
test
test
es
mov
out
or
pop
stos
rcll
xor
mov
add
add
adc
test
adc
shr
mov
orb
jne
inc
ja
jl
add
add
cli
test
pop
sahf
pushf
mov
xor
movsb
inc
inc
jns
sarl
xchg
pop
add
hlt
dec
adc
mov
sbb
cwtl
xor
test
sub
iret
mov
mov
add
aam
push
dec
adc
rcl
fldl
aad
adc
daa
or
xor
or
add
hlt
and
jae
leave
jl
test
cltd
fdivrp
and
add
les
addb
rolb
cmc
fyl2xp1
xchg
movsl
add
add
fldl
mov
adc
ret
jge
push
mov
add
sub
sbb
fwait
enter
cmp
push
mov
push
inc
pop
rcl
dec
xlat
insl
dec
mov
and
push
xchg
dec
cmp
aas
add
add
jns
out
rorb
cmp
shrl
out
mov
mov
cmp
fsubs
sub
xchg
pop
ffreep
fstpt
ret
push
mov
nop
add
xlat
xlat
add
add
fistps
add
mov
cmc
add
add
cmp
mov
jae
sbb
movsb
jmp
cmpl
daa
pop
call
inc
jp
cmp
data16
jne
mov
inc
test
xchg
and
leave
notl
shll
add
or
pop
aam
repz
mov
jge
lds
xchg
popa
arpl
xor
mov
mov
xchg
jb
gs
xor
adc
jmp
mov
mov
adc
xor
mov
adc
ret
add
add
loopne
mov
out
pop
jno
std
mov
scas
into
dec
test
cmp
jl
push
insl
push
out
pop
dec
pop
data16
jle
mov
inc
or
int
xor
push
jecxz
jbe
inc
sub
add
jno
test
shr
mov
cmc
in
sub
int3
mov
and
mov
sahf
dec
mov
fwait
mov
mov
cld
pop
in
sbb
push
and
sub
dec
add
push
jo
xor
or
sbb
pop
int3
int3
int3
jmp
xlat
mov
cmp
mov
ja
in
dec
daa
push
and
adc
adc
inc
icebp
pop
clc
cmp
lds
mov
fadds
add
add
testl
push
cmc
roll
sahf
dec
add
xchg
inc
out
outsb
jg
ret
les
xchg
sbb
or
test
lret
lds
imul
in
or
mov
mov
push
insl
cmpl
pop
dec
sbb
xchg
out
and
in
daa
data16
add
add
add
cwtl
and
rcl
mov
mov
popl
cmp
cmp
jp
add
lds
fidivl
int3
jmp
loope
cmpsl
push
inc
and
les
inc
test
push
sbbl
jae
push
jle
jl
add
add
jle
aad
add
cmc
pop
mov
mov
jle
adc
inc
sub
es
out
add
add
xchg
push
daa
cmp
mov
bound
lods
test
sub
or
mov
adc
push
pop
xchg
shll
dec
inc
cmpb
sarb
pop
ffreep
dec
popf
fnstcw
iret
xchg
fwait
mov
ss
test
xchg
daa
and
xor
and
aaa
push
xchg
lahf
insl
push
pop
xlat
jp
or
add
add
test
pop
add
aad
mov
loopne
in
lret
nop
aam
ds
ljmp
cld
pop
in
ret
mov
mov
inc
xchg
pop
popa
incl
or
add
add
hlt
cmp
loop
in
sub
divb
inc
jecxz
loope
test
subl
inc
xor
loopne
fidivrl
xor
or
fs
or
mov
cmpsl
cmpsb
ret
push
pushw
into
test
hlt
add
xchg
mov
add
jl
pop
movsb
inc
mov
cld
pushf
inc
shlb
adc
cmp
out
adc
lods
pop
mov
and
mov
movb
jg
andl
add
imul
sti
dec
and
mov
shll
lds
mov
jge
out
and
xchg
sbb
cmp
gs
movsb
push
aam
mov
inc
sub
call
inc
movsb
movsb
repz
sbb
repz
in
pop
neg
jmp
cmp
add
add
adc
cmp
cld
jecxz
inc
inc
mov
dec
daa
mov
idivb
xchg
dec
inc
adc
xchg
fdivrs
icebp
test
add
add
jbe
out
or
aad
xor
mov
popf
cmpsb
sbb
fists
stc
cmp
mov
sub
mov
cs
lea
pop
sbb
leave
sbb
jle
cld
push
mov
jle
inc
sti
add
add
mov
mov
or
int3
inc
aaa
pop
imul
add
or
test
push
push
sub
and
test
shll
or
aas
push
hlt
inc
cmp
add
jne
lea
loop
call
xchg
push
xchg
daa
cmp
add
add
lret
loop
sub
mov
xor
jnp
pop
or
cmp
fnstenv
pop
lahf
or
test
sahf
inc
add
add
shll
stos
adc
push
xor
popa
cmpsb
sub
mov
in
cli
outsb
mov
inc
test
inc
das
inc
repnz
sti
out
mov
sbb
add
cwtl
lods
dec
inc
iret
pop
cwtl
jno
mov
adc
in
push
ret
mov
mov
sub
inc
xor
add
add
pop
adc
jmp
cmp
loope
lods
paddd
add
sbb
fisubrl
stos
inc
scas
dec
sbb
incl
sub
lret
test
xchg
cmc
adc
shl
xorb
xor
test
adc
mov
cmp
xor
add
xchg
adc
fnsave
mov
push
xchg
je
xchg
inc
aas
add
add
pop
outsb
mov
inc
push
mov
inc
popa
in
sub
daa
out
add
cld
cmpsb
sub
push
insl
mov
dec
cmc
sbb
aam
sbb
adc
es
subps
stc
xor
mov
xor
ja
mov
jmp
mov
addb
add
lahf
and
sbb
lods
stos
mov
fistps
aad
es
adc
ret
sbb
fsub
jno
in
out
rcll
inc
out
pop
jle
or
push
push
aam
lds
cli
cld
cli
pop
mov
inc
jl
imul
fadds
add
push
arpl
pop
xchg
int
push
pop
scas
cmp
adc
or
pop
mov
sbb
sbb
add
add
xor
outsb
cld
ljmp
cmpsl
fs
or
das
test
daa
xchg
push
test
xor
push
mov
add
add
cs
mov
outsl
mov
lds
xchg
loope
mov
lods
bound
icebp
aam
cmp
call
mov
mov
mov
subb
arpl
inc
push
jecxz
cmc
lock
inc
aad
popf
out
cli
cmc
add
add
inc
std
pop
jl
xor
add
shr
pop
outsb
dec
mov
mov
scas
xlat
jmp
test
pop
mov
sbb
mov
nop
ss
bound
add
add
sbb
ljmp
pop
push
mov
dec
jae
sbb
adc
adc
sub
out
cmp
lods
stos
or
add
add
stc
mov
sahf
xchg
outsb
xor
popa
cli
jae
int
jge
repz
add
out
and
push
js
test
mov
mov
add
and
mov
inc
sbb
add
add
add
dec
jle
push
mov
xchg
inc
insl
pop
call
pusha
loopne
add
outsl
add
jno
sub
fnstsw
nop
lcall
sar
popa
mov
enter
push
enter
xor
lds
or
add
notl
sub
pop
mul
sub
lret
pop
dec
daa
xchg
or
and
inc
iret
jns
arpl
lret
xchg
jne
pop
repnz
int
jne
mov
push
jne
dec
push
cmp
inc
fnsave
and
xlat
cmp
mov
imull
cmp
xchg
outsb
pop
xor
mov
mov
xor
sub
enter
sbb
int3
int3
int3
int3
int3
arpl
jp
jle
xlat
add
js
out
add
add
lret
imul
push
and
add
inc
xlat
add
addr16
lret
out
daa
mov
mov
add
add
push
lret
jl
fnstsw
lea
lahf
out
daa
inc
inc
add
add
inc
fisubrs
int3
sub
mov
pop
lock
mov
xor
jo
cli
mov
lret
push
aam
sub
insl
das
lret
mov
inc
add
and
mull
mov
subb
call
add
push
ror
push
sarb
subl
add
add
jo
popa
insb
out
pop
adc
mov
dec
push
xchg
paddusw
popf
cmp
imul
and
xchg
movb
cltd
mov
mov
scas
xor
mov
pop
push
mov
add
add
testb
nop
in
cwtl
mov
repz
inc
sub
inc
lods
fs
mov
add
xlat
ja
xlat
inc
push
in
call
add
add
and
notl
in
loope
cmp
push
mov
stos
and
pushl
andl
fiaddl
lcall
das
push
int3
pop
ret
adc
dec
mov
lods
arpl
inc
mov
add
add
xchg
push
int3
clc
aas
insb
shl
loopne
push
jmp
into
add
fiadds
leave
and
mov
addr16
insl
push
xchg
inc
pop
mov
into
cmp
mov
insb
or
aad
stos
lcall
cmp
xchg
movsb
addl
data16
cwtl
jp
add
add
fstps
add
and
std
mov
mov
inc
sbb
cmp
pop
repz
dec
cmp
aam
pusha
and
xchg
insl
adc
jnp
jecxz
xchg
dec
scas
in
aad
sti
insl
jmp
mov
mov
in
imul
ja
mov
stos
cmp
adc
cs
out
cwtl
addr16
aas
je
add
shll
outsl
jle
mov
adc
shrb
fildl
add
add
and
push
daa
or
scas
mov
or
test
shrb
mov
faddp
xor
stos
clc
jmp
dec
ffree
dec
adc
mov
fldt
loop
sub
push
cs
or
ss
push
sbb
cmp
xchg
sbb
push
or
rclb
adc
iret
inc
add
add
hlt
cmp
lret
sahf
inc
orb
cltd
adc
je
arpl
push
scas
je
dec
cmpsb
xlat
fstpl
std
dec
insl
xor
popa
sbb
jmp
pop
enter
adc
mov
negl
mov
pop
lods
scas
cmp
inc
insl
mov
sbb
in
push
mov
add
add
das
adc
push
mov
add
pop
pusha
adc
add
call
js
add
bound
popa
pop
inc
ficoms
jbe
cltd
subb
sub
rorb
xchg
jo
push
xchg
mov
mov
mov
jle
add
add
mov
or
dec
adc
jb
mov
dec
push
push
andl
fstpt
push
xor
add
add
xor
inc
add
add
outsb
inc
push
add
add
add
add
dec
add
add
jg
add
add
add
add
data16
add
add
pop
add
add
add
add
pop
dec
xor
and
add
and
jno
add
jge
dec
cmp
add
jb
add
add
add
add
sub
sbb
add
and
add
outsl
jo
mov
pop
add
bound
add
add
add
jno
and
add
add
add
dec
sub
add
add
add
add
add
add
arpl
add
add
jnp
add
sbb
add
push
ds
add
add
add
xor
dec
add
outsb
ja
add
inc
addb
sbb
add
add
add
add
push
outsb
inc
add
add
jnp
add
in
sub
movl
mov
mov
mov
mov
movl
jmp
mov
sub
mov
cmpl
jle
mov
sub
mov
mov
add
mov
mov
sub
cmp
jae
mov
not
mov
mov
or
mov
jmp
movl
lea
push
mov
push
call
test
jne
mov
add
mov
movl
jmp
movl
mov
add
mov
lea
mov
xor
test
je
movl
mov
mov
pop
ret
push
mov
sub
movl
mov
or
mov
mov
mov
movl
fildll
fmull
mov
mov
movl
fildll
fmulp
fstpl
call
mov
mov
shr
mov
mov
imul
mov
movl
fildll
faddl
fsubrl
fstl
call
mov
mov
mov
pop
ret
push
mov
sub
movl
lea
push
call
movl
mov
and
mov
add
mov
mov
mov
pop
ret
push
mov
sub
push
push
push
movl
movl
mov
add
add
push
push
push
call
sub
mov
lea
sub
sub
add
mov
inc
mov
mov
mov
mov
mov
mov
movl
cmpl
je
mov
or
mov
mov
or
mov
mov
sub
mov
mov
shr
mov
jmp
movl
jmp
mov
add
mov
cmpl
jge
mov
shl
mov
mov
sub
cmp
jbe
mov
shr
mov
mov
cmp
je
mov
cmp
je
mov
sub
mov
mov
shr
mov
jmp
mov
sub
mov
call
movl
jmp
mov
add
mov
cmpl
jge
mov
shl
mov
mov
sub
cmp
jbe
mov
shr
mov
mov
cmp
je
mov
cmp
je
mov
sub
mov
mov
shr
mov
jmp
pop
pop
pop
mov
pop
ret
push
mov
sub
movl
movl
movl
jmp
mov
add
mov
cmpl
jge
mov
shl
mov
mov
sub
cmp
jbe
mov
shr
mov
mov
cmp
je
mov
cmp
je
mov
sub
mov
mov
shr
mov
jmp
movl
jmp
mov
add
mov
cmpl
jae
mov
shl
mov
mov
add
xor
mov
add
mov
add
mov
mov
shl
mov
mov
add
xor
mov
add
mov
add
mov
mov
not
mov
jmp
mov
pop
ret
push
mov
sub
movl
mov
add
cmp
jne
mov
not
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
call
mov
add
mov
movl
mov
mov
mov
mov
mov
mov
mov
push
call
add
mov
mov
add
cmp
jne
mov
not
mov
mov
push
push
mov
push
call
add
mov
sub
cmp
jb
mov
imul
mov
mov
add
mov
movl
jmp
mov
add
mov
mov
cmp
jae
mov
push
push
call
mov
push
call
add
mov
add
mov
mov
push
mov
push
call
mov
sub
mov
jmp
movl
jmp
mov
add
mov
cmpl
jge
mov
shl
mov
mov
sub
cmp
jbe
mov
shr
mov
mov
cmp
je
mov
cmp
je
mov
sub
mov
mov
shr
mov
jmp
mov
sub
cmp
jb
mov
imul
mov
mov
add
mov
push
mov
push
call
mov
pop
ret
push
mov
sub
movl
movl
movl
jmp
mov
add
mov
cmpl
jge
mov
shl
mov
mov
sub
cmp
jbe
mov
shr
mov
mov
cmp
je
mov
cmp
je
mov
sub
mov
mov
shr
mov
jmp
mov
not
mov
movl
jmp
mov
add
mov
cmpl
jge
mov
shl
mov
mov
sub
cmp
jbe
mov
shr
mov
mov
cmp
je
mov
cmp
je
mov
sub
mov
mov
shr
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
sub
mov
mov
sub
mov
mov
not
mov
mov
mov
cmpl
je
cmpl
je
cmpl
je
jmp
mov
imul
mov
mov
add
mov
jmp
mov
imul
mov
mov
add
mov
jmp
mov
sub
mov
movl
jmp
mov
add
mov
cmpl
jge
mov
shl
mov
mov
sub
cmp
jbe
mov
shr
mov
mov
cmp
je
mov
cmp
je
mov
sub
mov
mov
shr
mov
jmp
mov
sub
mov
movl
jmp
mov
add
mov
cmpl
jge
mov
shl
mov
mov
sub
cmp
jbe
mov
shr
mov
mov
cmp
je
mov
cmp
je
mov
sub
mov
mov
shr
mov
jmp
mov
shr
mov
movl
jmp
mov
add
mov
cmpl
jge
mov
shl
mov
mov
sub
cmp
jbe
mov
shr
mov
mov
cmp
je
mov
cmp
je
mov
sub
mov
mov
shr
mov
jmp
mov
shl
mov
mov
add
cmp
je
mov
imul
mov
mov
add
mov
jmp
mov
and
mov
mov
sub
mov
movl
jmp
mov
sub
mov
cmpl
jle
mov
sub
mov
mov
add
mov
mov
sub
cmp
jae
mov
not
mov
mov
or
mov
jmp
mov
or
mov
movl
cmpl
je
mov
or
mov
mov
or
mov
mov
sub
mov
mov
shr
mov
jmp
call
and
mov
add
mov
mov
imul
cmp
ja
mov
not
mov
push
push
call
mov
movl
mov
shl
mov
call
and
mov
add
mov
mov
imul
cmp
ja
mov
not
mov
mov
mov
mov
mov
cmpl
je
cmpl
je
cmpl
je
jmp
mov
imul
mov
mov
add
mov
jmp
mov
imul
mov
mov
add
mov
jmp
mov
sub
mov
push
push
push
call
mov
add
mov
movl
jmp
mov
sub
mov
cmpl
jle
mov
sub
mov
mov
add
mov
mov
sub
cmp
jae
mov
not
mov
mov
or
mov
jmp
push
push
mov
push
call
movl
jmp
mov
sub
mov
cmpl
jle
mov
sub
mov
mov
add
mov
mov
sub
cmp
jae
mov
not
mov
mov
or
mov
jmp
push
push
call
mov
mov
add
cmp
je
mov
imul
mov
mov
add
mov
jmp
mov
and
mov
mov
add
cmp
je
mov
imul
mov
mov
add
mov
jmp
mov
and
mov
mov
mov
cmpl
je
cmpl
je
cmpl
je
jmp
mov
imul
mov
mov
add
mov
jmp
mov
imul
mov
mov
add
mov
jmp
mov
sub
mov
mov
mov
cmpl
je
cmpl
je
cmpl
je
jmp
mov
imul
mov
mov
add
mov
jmp
mov
imul
mov
mov
add
mov
jmp
mov
sub
mov
xor
mov
pop
ret
call
call
mov
call
fnclex
ret
ret
mov
movl
mov
movl
movl
movl
mov
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
push
push
push
push
mov
cmpl
jle
movzbl
push
push
call
pop
pop
jmp
movzbl
mov
mov
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmpl
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
je
lea
lea
movzbl
inc
jmp
cmp
mov
jne
neg
pop
pop
pop
pop
ret
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
push
push
call
pop
pop
ret
push
mov
sub
fldl
fstpl
fldl
fstpl
fldl
fdivl
fmull
fsubrl
fstpl
fldl
fcompl
fnstsw
sahf
jbe
push
pop
leave
ret
xor
leave
ret
push
call
test
je
push
push
call
test
je
push
call
ret
jmp
push
mov
movsbl
push
call
cmp
pop
je
inc
cmpl
jle
movsbl
push
push
call
pop
pop
jmp
movsbl
mov
mov
and
test
jne
mov
mov
mov
inc
mov
mov
mov
mov
inc
test
jne
pop
ret
mov
mov
mov
test
je
cmp
je
mov
inc
test
jne
mov
inc
test
je
mov
test
je
cmp
je
cmp
je
inc
jmp
mov
dec
cmpb
je
cmp
jne
dec
mov
inc
inc
test
mov
jne
ret
mov
fldl
fcompl
fnstsw
sahf
jb
push
pop
ret
xor
ret
push
mov
push
push
cmpl
pushl
je
lea
push
call
mov
pop
pop
mov
mov
mov
mov
leave
ret
lea
push
call
mov
pop
pop
mov
mov
leave
ret
push
mov
cmpb
push
push
je
mov
mov
xor
mov
test
setg
push
xor
cmpl
sete
add
push
call
pop
pop
jmp
mov
push
push
fldl
fstpl
call
mov
mov
push
mov
lea
push
xor
cmpl
sete
xor
test
setg
add
add
push
call
add
cmpl
mov
jne
movb
inc
test
jle
mov
push
lea
mov
mov
mov
pop
mov
xor
push
cmp
sete
add
add
push
call
cmpl
pop
pop
mov
je
movb
mov
inc
cmpb
je
mov
dec
jns
neg
movb
inc
cmp
jl
mov
push
cltd
pop
idiv
add
mov
cltd
idiv
mov
inc
cmp
jl
mov
push
cltd
pop
idiv
add
mov
cltd
idiv
mov
add
mov
pop
pop
pop
ret
cmpb
push
push
mov
push
push
je
mov
mov
mov
cmp
jne
xor
cmpl
sete
add
add
mov
movb
andb
jmp
mov
push
push
fldl
fstpl
call
mov
mov
push
mov
add
push
xor
cmpl
sete
add
push
call
add
cmpl
mov
jne
movb
lea
mov
test
jg
push
push
call
pop
movb
pop
inc
jmp
add
test
jle
push
push
call
mov
pop
mov
mov
inc
pop
test
jge
cmpb
je
neg
jmp
neg
cmp
jl
mov
push
push
call
push
push
push
call
add
pop
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
push
fldl
fstpl
call
mov
mov
dec
mov
mov
xor
cmpl
push
push
sete
add
mov
push
call
mov
add
mov
dec
cmp
setl
mov
mov
dec
cmp
mov
jl
cmp
jge
test
je
mov
inc
test
jne
and
push
pushl
push
call
add
jmp
pushl
push
pushl
push
call
add
pop
pop
pop
pop
ret
pushl
movb
pushl
pushl
pushl
call
andb
add
ret
pushl
movb
pushl
pushl
call
andb
add
ret
push
mov
cmpl
je
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
add
pop
ret
pushl
pushl
pushl
pushl
call
jmp
pushl
pushl
pushl
pushl
call
add
pop
ret
push
mov
test
je
push
mov
push
call
inc
push
push
add
push
call
add
pop
pop
ret
push
mov
push
mov
lea
cmp
ja
mov
movzwl
jmp
mov
push
mov
sar
movzbl
testb
pop
je
andb
mov
mov
push
jmp
andb
mov
push
pop
lea
push
push
push
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
mov
push
push
fstcw
pushl
call
mov
mov
not
and
mov
and
or
push
call
pop
mov
pop
fldcw
mov
pop
leave
ret
mov
and
push
pushl
call
pop
pop
ret
push
mov
xor
push
test
push
je
push
pop
test
je
or
test
je
or
test
je
or
test
je
or
test
je
or
movzwl
push
mov
mov
mov
and
mov
je
cmp
je
cmp
je
cmp
jne
or
jmp
or
jmp
or
and
pop
je
cmp
jne
or
jmp
or
pop
pop
test
pop
je
or
ret
push
mov
xor
push
test
je
push
pop
test
je
or
test
je
or
test
je
or
test
je
or
test
je
or
mov
mov
and
mov
je
cmp
je
cmp
je
cmp
jne
or
jmp
or
jmp
or
mov
and
je
cmp
jne
or
jmp
or
pop
test
pop
je
or
ret
push
mov
push
cmpl
push
push
push
jne
mov
cmp
jl
cmp
jg
add
jmp
mov
mov
push
cmp
pop
jge
cmp
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
jne
mov
jmp
mov
mov
sar
movzbl
testb
je
andb
push
mov
mov
pop
jmp
andb
mov
mov
push
push
lea
push
push
push
lea
push
push
pushl
call
add
test
je
cmp
jne
movzbl
jmp
movzbl
movzbl
shl
or
pop
pop
pop
leave
ret
mov
push
push
cltd
pop
idiv
push
mov
mov
cltd
idiv
pop
mov
sub
or
shl
not
test
jne
inc
cmp
jge
lea
cmpl
jne
inc
add
cmp
jl
push
pop
pop
ret
xor
pop
ret
mov
push
push
push
push
mov
cltd
pop
idiv
mov
mov
cltd
idiv
lea
push
push
pop
push
pop
sub
shl
push
pushl
call
add
dec
js
lea
test
je
push
push
pushl
call
add
dec
sub
test
jge
pop
pop
pop
ret
push
mov
push
push
mov
push
push
push
lea
push
pop
andl
lea
push
mov
pop
cltd
idiv
push
mov
mov
cltd
idiv
mov
pop
push
mov
lea
mov
sub
pop
mov
shl
test
je
inc
push
pushl
call
pop
test
pop
jne
push
pushl
call
pop
mov
pop
mov
or
mov
shl
push
pop
and
mov
inc
cmp
jge
mov
sub
lea
xor
rep
mov
pop
pop
pop
leave
ret
mov
mov
push
push
sub
pop
mov
mov
add
dec
jne
pop
ret
push
mov
xor
stos
stos
stos
pop
ret
mov
xor
cmpl
jne
inc
add
cmp
jl
push
pop
ret
xor
ret
push
mov
sub
mov
push
push
push
push
mov
pop
or
cltd
mov
movl
idiv
mov
mov
cltd
idiv
andl
mov
shl
sub
not
mov
mov
and
mov
mov
shr
or
mov
mov
mov
add
shl
decl
mov
jne
mov
push
pop
mov
push
pop
shl
cmp
jl
mov
mov
sub
mov
mov
jmp
mov
andl
dec
sub
jns
pop
pop
pop
leave
ret
push
mov
sub
mov
push
push
push
movzwl
mov
and
mov
mov
mov
mov
movzwl
mov
and
sub
mov
shl
cmp
mov
jne
lea
xor
push
call
test
pop
jne
lea
push
call
pop
push
pop
jmp
lea
push
lea
push
call
pushl
lea
push
call
add
test
je
inc
mov
mov
sub
cmp
jge
lea
push
call
pop
jmp
cmp
jg
sub
mov
lea
push
lea
push
call
lea
push
push
call
pushl
lea
push
call
mov
inc
push
lea
push
call
add
xor
jmp
cmp
jl
lea
push
call
pushl
orb
lea
push
call
mov
add
add
push
jmp
pushl
mov
andb
lea
push
add
call
pop
pop
xor
push
pop
sub
mov
shl
mov
neg
sbb
and
or
or
cmp
jne
mov
mov
mov
mov
jmp
cmp
jne
mov
mov
pop
pop
pop
leave
ret
push
pushl
pushl
call
add
ret
push
pushl
pushl
call
add
ret
push
mov
sub
xor
push
push
push
push
pushl
lea
push
lea
push
call
pushl
lea
push
call
add
leave
ret
push
mov
sub
xor
push
push
push
push
pushl
lea
push
lea
push
call
pushl
lea
push
call
add
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
push
mov
mov
push
mov
push
mov
mov
push
lea
movb
test
mov
jle
mov
xor
mov
test
je
movsbl
inc
jmp
push
pop
mov
inc
decl
jne
mov
andb
test
jl
cmpb
jl
dec
cmpb
jne
movb
jmp
incb
cmpb
jne
incl
jmp
push
call
inc
push
push
push
call
add
pop
pop
pop
pop
ret
push
mov
sub
push
lea
push
push
lea
push
call
pop
lea
pop
push
push
push
sub
mov
movsl
movsl
movsw
call
mov
add
movsbl
mov
pop
movswl
mov
movl
mov
pop
leave
ret
push
mov
push
mov
push
push
push
mov
mov
mov
and
shr
and
mov
mov
mov
movzwl
mov
and
test
mov
je
cmp
je
lea
jmp
mov
jmp
xor
cmp
jne
cmp
jne
mov
mov
mov
mov
jmp
lea
mov
mov
shr
shl
or
mov
or
shl
mov
mov
test
jne
mov
add
mov
shr
or
lea
mov
mov
add
mov
jmp
mov
or
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shlb
je
add
jne
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
jne
add
add
add
add
add
add
add
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
inc
add
jne
add
jne
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
jbe
add
inc
add
inc
add
rorl
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
inc
add
jbe
add
jbe
add
jbe
add
inc
add
inc
add
inc
add
ja
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
ja
add
inc
add
inc
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
call
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
jle
add
jle
add
jle
add
jle
add
jle
add
inc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
jg
add
inc
add
jg
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
inc
add
jg
add
jg
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
addb
addb
addb
addb
addb
addb
addb
addb
inc
mov
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
addb
addb
addb
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
mov
push
mov
xor
lea
cmp
jb
cmp
jae
push
pop
mov
pop
mov
ret
push
mov
push
mov
push
pushl
pushl
call
add
test
je
lea
push
push
pushl
call
add
test
je
incl
lea
push
pushl
pushl
call
add
test
je
incl
lea
push
pushl
pushl
call
add
pop
pop
ret
mov
push
push
mov
mov
mov
add
mov
lea
shr
or
mov
mov
mov
shr
shl
or
pop
mov
pop
ret
mov
push
push
mov
mov
mov
mov
shl
shr
or
mov
mov
shl
shr
shr
or
pop
mov
mov
pop
ret
push
mov
sub
mov
push
mov
xor
cmp
push
movl
mov
mov
mov
jbe
push
mov
mov
lea
movsl
movsl
push
movsl
call
push
call
lea
push
push
call
push
call
mov
andl
andl
movsbl
mov
lea
push
push
call
add
incl
decl
jne
xor
pop
cmp
jne
mov
mov
shr
mov
mov
mov
shr
shl
or
shl
addl
mov
mov
jmp
mov
test
jne
push
call
addl
pop
jmp
mov
pop
mov
pop
leave
ret
push
mov
sub
push
push
push
mov
lea
push
mov
xor
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
cmp
je
cmp
je
cmp
jne
inc
jmp
push
pop
mov
inc
cmp
ja
jmp
cmp
jl
cmp
jg
push
jmp
cmp
jne
push
jmp
movsbl
sub
je
dec
dec
je
sub
jne
jmp
push
movl
pop
jmp
andl
push
pop
jmp
cmp
mov
jl
cmp
jle
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jle
cmp
jle
cmp
jle
cmp
jg
push
jmp
dec
push
jmp
cmp
jl
cmp
jle
cmp
je
cmp
jne
mov
jmp
mov
cmp
jle
movzbl
push
push
call
pop
pop
push
pop
jmp
mov
movzbl
mov
and
test
je
cmpl
jae
mov
incl
sub
incl
mov
jmp
incl
mov
inc
jmp
cmp
jne
mov
jmp
cmpl
mov
mov
jne
cmp
jne
decl
mov
inc
jmp
cmp
jle
movzbl
push
push
call
pop
pop
push
pop
jmp
mov
movzbl
mov
and
test
je
cmpl
jae
mov
incl
sub
incl
decl
mov
mov
inc
jmp
cmp
je
cmp
je
jmp
cmp
mov
jle
movzbl
push
push
call
pop
pop
push
pop
jmp
mov
movzbl
mov
and
test
je
mov
jmp
lea
cmp
mov
jl
cmp
jle
movsbl
sub
je
dec
dec
je
sub
jne
push
jmp
mov
cmp
jne
mov
inc
jmp
cmp
jl
cmp
jg
jmp
cmp
jl
cmp
jg
push
pop
dec
jmp
cmp
jne
jmp
cmpl
je
movsbl
lea
sub
mov
je
dec
dec
jne
orl
push
pop
jmp
push
pop
jmp
push
dec
pop
cmp
je
jmp
mov
jmp
movl
xor
cmpl
jle
movzbl
push
push
call
pop
pop
jmp
mov
movzbl
mov
and
test
je
movsbl
lea
lea
cmp
jg
mov
inc
jmp
mov
mov
cmpl
jle
movzbl
push
push
call
pop
pop
jmp
mov
movzbl
mov
and
test
je
mov
inc
jmp
dec
jmp
mov
mov
cmpl
mov
je
push
pop
cmp
jbe
cmpb
jl
incb
mov
mov
dec
incl
jmp
mov
cmpl
jbe
dec
cmpb
jne
decl
incl
jmp
lea
push
lea
pushl
push
call
mov
xor
add
cmp
jge
neg
add
cmp
jne
add
cmp
jne
sub
cmp
jle
movl
mov
mov
mov
mov
cmpl
je
xor
mov
mov
xor
movl
jmp
cmp
jge
movl
jmp
pushl
push
lea
push
call
mov
mov
mov
mov
add
jmp
xor
xor
xor
xor
jmp
xor
xor
xor
xor
movl
jmp
cmpl
je
xor
xor
xor
xor
movl
mov
or
pop
mov
mov
mov
mov
pop
mov
pop
leave
ret
enter
pop
xchg
outsb
xchg
cwtl
xchg
xrelease
push
inc
add
mov
leave
mov
dec
mov
cmp
inc
add
in
sub
mov
push
mov
push
mov
mov
and
and
test
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movl
mov
je
movb
jmp
movb
mov
test
jne
test
jne
cmp
jne
andw
movb
movb
movb
jmp
cmp
jne
mov
movw
cmp
jne
cmpl
je
test
jne
push
jmp
test
je
cmp
jne
cmpl
jne
push
jmp
cmp
jne
cmpl
jne
push
lea
push
call
pop
movb
pop
andl
jmp
push
lea
push
call
pop
movb
pop
jmp
movzwl
mov
mov
shr
imul
shr
andw
push
lea
mov
imul
mov
lea
mov
sar
mov
movswl
neg
push
lea
push
call
add
cmpw
jb
lea
inc
push
lea
push
call
pop
pop
testb
mov
je
mov
movswl
add
test
jg
jmp
mov
cmp
jle
push
pop
movzwl
sub
andw
movl
lea
push
call
decl
pop
jne
test
jge
neg
and
jle
lea
push
call
dec
pop
jne
lea
lea
test
mov
jle
mov
lea
lea
movsl
movsl
lea
push
movsl
call
lea
push
call
lea
push
lea
push
call
lea
push
call
mov
mov
andb
add
add
incl
decl
mov
jne
mov
mov
dec
dec
cmp
lea
jl
cmp
jb
cmpb
jne
movb
dec
jmp
cmp
jae
inc
incw
incb
sub
sub
mov
movsbl
andb
mov
pop
pop
pop
leave
ret
cmp
jb
cmpb
jne
dec
jmp
cmp
jae
andw
movb
movb
movb
andb
push
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
mov
sub
push
mov
push
mov
mov
xor
push
mov
mov
mov
mov
mov
mov
mov
xor
and
and
and
cmp
lea
mov
jae
cmp
jae
cmp
ja
cmp
ja
xor
jmp
test
mov
jne
incl
test
jne
xor
cmp
jne
cmp
jne
jmp
xor
cmp
jne
incl
test
jne
cmp
jne
cmp
jne
mov
mov
mov
jmp
mov
lea
mov
movl
mov
add
cmpl
jle
add
lea
mov
mov
mov
mov
mov
mov
movzwl
movzwl
imul
mov
add
push
push
pushl
call
add
test
je
mov
incw
addl
subl
decl
jne
addl
incl
decl
cmpl
jg
addl
cmpw
jle
testb
jne
lea
push
call
addl
pop
cmpw
jg
cmpw
jg
addl
cmpw
jge
movswl
neg
add
mov
testb
je
incl
lea
push
call
dec
pop
jne
cmpl
je
orb
cmpw
ja
mov
and
cmp
jne
cmpl
jne
andl
cmpl
jne
andl
cmpw
jne
incl
movw
jmp
incw
jmp
incl
jmp
incl
mov
cmp
jae
mov
or
mov
mov
mov
mov
mov
mov
jmp
neg
sbb
andl
and
add
andl
mov
pop
pop
pop
leave
ret
push
mov
sub
push
mov
xor
sub
cmp
je
jge
mov
mov
neg
mov
sub
cmp
jne
mov
mov
cmp
je
push
push
mov
add
sarl
and
cmp
je
lea
cmpw
lea
jb
lea
movsl
movsl
movsl
decl
lea
push
pushl
call
pop
pop
xor
cmp
jne
pop
pop
pop
leave
ret
int3
jmp
int3
int3
sub
add
nop
xchg
add
adc
add
clc
xchg
add
mov
add
add
xchg
add
add
add
pop
xchg
add
notb
add
add
xor
add
sbb
add
lods
xchg
add
xchg
xchg
add
rclb
movsb
xchg
add
les
add
in
xchg
add
or
add
xor
add
pop
xchg
add
insb
xchg
add
jl
add
jl
add
xchg
xchg
add
pusha
xchg
add
push
xchg
add
dec
xchg
add
cmp
add
adc
add
clc
xchg
add
ljmp
add
xchg
add
scas
xchg
add
xchg
xchg
add
mov
add
insb
xchg
add
pusha
xchg
add
adcb
add
add
xchg
add
sbb
add
mov
add
call
xchg
add
inc
xchg
add
dec
xchg
add
pusha
xchg
add
jb
add
test
add
mov
xchg
add
rclb
add
add
add
add
ficoml
add
cld
xchg
add
or
add
and
add
add
sahf
xchg
add
mov
xchg
add
insb
xchg
add
push
xchg
add
xchg
add
add
add
add
add
and
add
pop
add
addb
add
add
add
add
add
loopne
add
add
add
pop
add
je
imul
bound
gs
add
roll
inc
gs
gs
jo
imul
add
inc
add
jo
inc
imul
gs
je
jbe
outsb
je
add
add
outsb
fs
imul
outsb
addr16
outsl
je
imul
outsl
outsb
inc
add
addl
gs
gs
inc
imul
popa
imul
je
jo
gs
bound
arpl
add
add
je
jb
outsl
arpl
fs
outsl
insl
jo
jb
inc
js
push
add
sub
dec
outsb
je
jb
outsl
arpl
fs
arpl
insl
outsb
je
add
inc
jb
popa
je
inc
jbe
outsb
je
add
les
inc
imul
outsl
dec
outsl
arpl
inc
imul
rolb
jae
jb
insl
jo
add
inc
add
je
jne
jb
outsb
je
jb
arpl
jae
jae
inc
gs
outsl
arpl
push
imul
inc
gs
jb
imul
imul
push
dec
inc
dec
xor
cs
insb
add
sub
push
imul
outsb
outsl
ja
gs
popa
addr16
add
mov
fs
jne
jae
jb
add
imul
je
gs
add
inc
jb
popa
je
dec
outsb
jne
add
add
fs
gs
imul
jae
loope
inc
js
je
imul
js
or
inc
imul
push
imul
jae
aam
push
imul
outsl
insl
push
outsl
imul
outsl
popa
fs
insl
popa
addr16
add
sub
push
gs
gs
jae
inc
popa
jo
jne
add
mov
fs
arpl
push
add
ja
arpl
add
cmp
inc
gs
gs
popa
addr16
add
add
popa
jb
outsl
dec
gs
inc
add
push
push
inc
push
xor
cs
insb
add
dec
add
gs
je
push
arpl
outsb
dec
outsb
imul
add
gs
je
push
outsl
insb
imul
add
inc
jb
popa
je
push
popa
je
gs
inc
jb
jae
add
inc
inc
dec
xor
cs
insb
add
outsl
push
gs
imul
popa
jae
dec
bound
arpl
insb
xor
cs
insb
add
add
inc
inc
fs
jae
push
outsl
push
je
imul
push
push
inc
inc
outsl
outsb
outsb
arpl
adc
push
push
inc
inc
insb
outsl
jae
inc
jbe
outsb
je
push
push
xor
xor
fs
insb
add
adc
dec
gs
jo
insb
insb
outsl
arpl
jg
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
mov
inc
gs
je
jb
jne
dec
outsb
outsw
inc
add
add
je
outsl
insl
insl
popa
outsb
fs
imul
inc
gs
gs
imul
inc
js
je
jb
arpl
jae
mov
push
jb
arpl
fs
jae
add
adc
dec
gs
jo
gs
jb
jns
adc
dec
gs
jo
jb
popa
je
add
addl
imul
jb
add
add
popa
jo
jb
add
addl
jne
insb
inc
insb
insb
outsl
arpl
add
add
popa
jo
gs
insb
insb
outsl
arpl
pop
add
insl
imul
outsl
arpl
jae
add
push
outsb
push
gs
js
gs
imul
gs
add
inc
gs
outsl
fs
gs
imul
add
testb
jb
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
fs
push
dec
jne
je
inc
jns
add
inc
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
inc
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
and
push
gs
popa
outsb
fs
gs
outsl
jne
je
add
push
je
dec
popa
outsb
fs
add
add
je
imul
xlat
add
insb
push
outsb
ja
outsb
add
gs
imul
insb
je
inc
jns
gs
outsl
push
imul
mov
push
je
imul
inc
add
mov
push
je
imul
push
add
add
inc
gs
push
dec
outsb
outsw
add
add
je
inc
push
add
xchg
add
je
inc
dec
inc
push
add
push
add
fs
imul
add
inc
add
popa
jo
je
imul
add
popa
jo
je
.byte
outsb
addr16
arpl
add
sbb
add
sbb
add
dec
adc
add
lahf
in
icebp
or
cs
pop
cmp
nop
mov
movsb
jmp
add
movsb
rol
jl
add
test
xchg
or
loop
outsl
aad
negb
stos
popa
mov
sub
jg
cli
inc
mov
movsb
adcl
addl
push
addb
dec
lahf
jb
mov
sbb
adc
neg
outsl
adc
scas
mov
outsl
xor
iret
sbb
push
xor
sarb
push
dec
jg
adc
or
std
add
cmp
gs
dec
mov
add
xchg
cs
pop
or
dec
xchg
jbe
idivl
jb
jl
std
adc
outsb
mov
sub
mov
lret
mov
and
jle
xchg
sbb
cmp
imull
sahf
das
iret
lcall
je
subb
mov
je
subb
xchg
mov
insl
in
sbbl
in
cmp
or
push
stos
or
mov
cli
lds
mov
fs
int3
pop
scas
push
xor
repnz
fidivrs
jge
fidivl
xchg
or
sub
pop
push
clc
push
push
mov
idivw
or
lea
pop
je
or
mov
ret
or
sbb
pop
jbe
mov
les
mov
ret
cmp
jmp
cmp
xor
xorl
and
sub
mov
jbe
notb
movl
jns
sub
insb
clc
jno
fwait
aas
js
mov
xlat
dec
aas
mov
cmp
inc
cmp
cmc
jae
mulb
cmp
mov
cmp
pop
ljmp
adc
idiv
inc
imul
std
sbb
stos
xorb
cmp
cmp
aad
lret
jge
shl
cmp
andl
call
fmuls
outsb
sbb
jle
test
gs
jns
outsb
fidivs
push
cmp
not
jns
sub
je
in
out
inc
sub
jp
cmp
sarb
cld
scas
mov
dec
fisttps
jl
lods
push
sti
lock
fdivl
xor
mov
mov
jbe
scas
cmp
cmc
mov
push
call
popa
cmp
dec
sub
loop
out
push
adc
insb
push
outsb
ret
inc
fisubs
imul
push
pushf
or
cmp
and
xor
cmp
aas
sub
lea
pop
les
push
ja
jl
pop
jmp
decb
orb
sbbb
cltd
cmp
fsubrl
ret
inc
imul
sti
pop
aas
clc
add
pop
xorb
or
aaa
mov
sbb
cmp
cmp
aad
or
xor
cmp
cmp
std
movsb
pop
fbstp
cmp
cld
subb
mov
scas
adc
mov
std
mov
jno
cld
imul
jl
pop
xchg
cld
inc
sub
je
out
dec
mov
sti
pop
xlat
incl
cli
rcrl
xor
or
dec
jnp,pt
jbe
pop
jae
btr
pusha
mov
adc
mov
fbstp
mov
int3
add
int
ds
frstor
cmp
sti
inc
adc
sub
cmp
xor
cmc
std
mov
push
cmp
sub
outsl
out
mov
pop
inc
ljmp
xor
adc
aas
arpl
imul
mov
divl
cmp
xor
mov
inc
push
inc
add
adc
dec
adc
push
rclb
insb
movsb
inc
add
adc
add
sbb
int
push
cmp
and
add
in
testb
clc
call
int
jb
rcl
das
aaa
lock
std
lds
dec
mov
add
jp
scas
out
stos
out
mov
clc
addl
xor
scas
shll
add
dec
xchg
popa
cmp
jne
dec
xchg
sub
fsubrl
mov
mov
cmp
sub
sub
movb
call
add
ret
fildl
dec
repnz
pop
outsl
sub
xchg
rorb
pop
jnp
shlb
mov
fisubs
and
and
ljmp
orb
cmp
cmp
add
add
setle
jp
fildll
sti
sbb
cmpsb
mov
scas
pop
lea
sti
mov
mov
fstpt
sub
mov
pushf
jecxz
rcrl
sbb
icebp
xchg
les
mov
mov
cld
mov
into
cld
xor
int3
int3
xchg
mov
icebp
rcr
imul
lea
add
add
cmpsb
adc
lods
in
repnz
dec
sbbl
inc
pusha
pushf
out
stos
or
mov
scas
stos
daa
or
js
push
testb
ret
xor
or
add
add
sub
dec
iret
cmpb
xchg
outsb
gs
mov
mov
outsl
lret
lret
and
fdivs
leave
or
sub
in
inc
xchg
lret
add
xchg
jge
sar
in
jne
and
cltd
mov
dec
outsb
mov
jecxz
mov
int
cmp
and
add
pop
sub
push
out
rolb
and
mov
jmp
inc
out
scas
dec
add
js
xchg
push
leave
pop
imul
push
mov
sbbb
int3
int3
int3
bound
ja
push
fidivrl
in
inc
sbbl
arpl
lcall
adc
xchg
dec
aam
pushf
pop
jae
push
xor
cwtl
lods
lahf
das
jbe
mov
das
and
add
out
lcall
jae
pop
and
pop
mov
mov
imul
out
cmp
les
ljmp
or
sbb
xchg
and
je
adc
add
inc
cmp
cmp
cmc
icebp
ds
add
add
add
jmp
cmp
loope
jg
pop
rorb
cmpsl
int
jge
sbb
out
sahf
inc
sub
lea
xchg
mov
iret
jno
add
sahf
xchg
sbb
jg
cltd
lods
mov
mov
mov
int3
aaa
imul
add
mov
jle
lcall
jmp
or
dec
dec
orb
jecxz
and
lret
sti
ss
hlt
jmp
fiaddl
sbb
dec
hlt
xor
in
or
cli
push
aaa
popa
mov
or
push
jg
pushf
add
mov
pop
hlt
push
pop
scas
pop
js
data16
sbb
add
add
fbld
les
filds
sub
imul
lahf
incb
enter
addr16
in
mov
sbb
loopne
push
popa
jns
sbbl
mov
inc
sub
xchg
mov
idivb
stc
and
pop
pusha
movsb
sub
sbb
adc
dec
add
add
xor
pop
push
xchg
push
ja
andl
popa
fs
pop
movsl
into
mov
cmp
add
add
jne
cltd
or
movsb
or
loop
cmp
ja
arpl
or
xor
sub
repz
pop
pop
test
icebp
add
outsl
lahf
jo
inc
mov
ljmp
in
icebp
mov
push
es
mov
cmp
pop
dec
sbb
inc
je
fs
push
jg
add
ljmp
mov
inc
ret
lods
jae
inc
push
xchg
push
mov
xor
jge
enter
add
ja
jns
push
xchg
add
add
fildl
xor
js
and
sbb
je
fisubrl
popf
aad
or
add
adc
imul
or
gs
jnp
cli
or
mov
sbb
ljmp
scas
data16
lea
push
mov
push
pop
xchg
outsb
sbbl
hlt
mov
roll
aad
jg
shll
add
shl
add
add
and
dec
clc
inc
sub
xchg
mov
push
sub
cmp
aad
mov
loopne
stos
into
cmc
mull
push
mov
lock
iret
pushf
xlat
in
cmp
cmpsl
xchg
jnp
aas
lods
xor
add
dec
jg
add
les
and
or
scas
xor
js
ret
add
loop
mov
add
ret
aam
pop
inc
outsb
or
push
sarl
adc
pop
loopne
mov
cmp
mov
ret
aam
scas
mov
dec
cmp
mov
in
ret
mov
xlat
mov
sbb
je
in
pop
mov
add
cmp
orb
mov
nop
mov
lcall
xchg
mov
daa
into
sub
lock
popa
popa
mov
add
fisttps
xchg
dec
scas
cmp
mov
mov
push
add
inc
and
int3
int3
xor
cwtl
and
or
add
add
xchg
and
jns
cwtl
pop
sub
cmc
mov
push
adc
pop
and
cwtl
push
lods
inc
std
xchg
sbb
lret
inc
xchg
xor
ret
popf
cmpsl
gs
add
push
mov
cmp
out
jnp
cltd
imul
popa
xchg
pop
push
sbb
mov
inc
xchg
hlt
sub
add
add
inc
pop
cmc
lods
pusha
insb
mov
pop
pop
mov
sti
loopne
cmp
decb
xor
inc
mov
mov
aam
sbb
cld
nop
xchg
mov
add
mov
inc
inc
dec
pop
mov
add
cmp
decb
mov
xor
dec
mov
stos
addl
add
lret
int3
test
jmp
out
xor
enter
add
add
jbe
clc
or
mov
xor
lds
data16
jno
arpl
test
aad
pop
out
inc
pop
in
sub
std
lods
aad
or
shll
cli
mov
xor
xchg
jecxz
je
or
out
xchg
cmp
mov
orb
add
xchg
fstps
sbb
mov
stos
add
add
loope
andb
add
pop
adc
test
rcpps
outsb
mov
test
mov
and
aad
mov
push
cltd
sti
adc
push
pusha
dec
xchg
in
sti
inc
pop
mov
and
ljmp
sub
in
mov
and
clc
mov
inc
xor
leave
add
add
sub
rcr
mov
es
sub
or
pop
pop
aad
add
inc
jnp
out
adc
sbbb
js
out
lret
divb
pusha
lods
pop
popl
add
mov
cmp
cltd
imul
xchg
int3
int3
int3
int3
int3
push
aas
sarl
aas
test
test
jle
jle
xchg
js
and
xchg
push
lea
push
insb
shlb
mov
outsl
jno
lret
pusha
inc
cmp
shl
xchg
mov
sub
sbbl
repz
ficoms
inc
leave
add
add
hlt
out
adc
xlat
outsb
and
stos
inc
test
add
pop
push
sub
daa
mov
loop
push
push
push
pop
sub
data16
add
add
stos
imul
repnz
add
add
stos
add
xchg
fwait
aas
cmp
jl
out
loope
pushf
shr
sbb
dec
or
jns
xor
xlat
jo
jle
add
add
pop
movsb
cmc
iret
xchg
mov
pop
mov
mov
lea
pop
sub
mov
outsb
add
mov
mov
rol
xor
jmp
aaa
bswap
mov
adcl
xchg
pop
or
adc
pop
jecxz
push
pop
cmp
xchg
add
or
sbb
mov
sarb
leave
add
add
or
loopne
les
dec
lock
mov
or
divb
fstpt
aad
mov
lahf
sub
pop
inc
jns
cli
pop
push
mov
inc
sub
xor
cli
cli
xchg
mov
pusha
fwait
dec
repnz
add
add
adc
or
cmp
frstor
jle
fcmovb
cmc
dec
sub
fcmovne
dec
jmp
lock
add
xchg
test
dec
sbb
popa
sbb
test
cld
in
xor
icebp
icebp
dec
rclb
xchg
loop
mov
mov
push
xchg
inc
adc
rcrb
ss
mov
dec
rclb
dec
push
jmp
mov
sub
fsubrl
mov
add
or
add
sti
call
fnstcw
lret
mov
cs
inc
rcr
sahf
fistpll
pop
shlb
xchg
sub
and
push
mov
add
adc
fistl
xchg
out
mov
mov
jne
imul
ljmp
xor
jmp
jge
cmpsl
xor
stos
mov
pop
or
cmpl
push
add
add
and
cmp
jo
xor
add
add
mov
stos
std
int3
stos
pushf
jne
sub
push
imul
jno
add
add
mov
push
sub
int3
int3
int3
int3
enter
imul
cltd
mov
out
cs
and
repz
ja
or
movsl
pop
js
adc
xchg
add
outsb
jb
addl
stos
jnp
sahf
cwtl
jne
int3
gs
add
add
pop
mov
lcall
push
or
cs
stos
in
pop
ficoml
jmp
pop
insl
leave
sub
iret
dec
les
inc
mov
xor
mov
mov
xor
verw
imul
mov
pop
cld
inc
or
add
in
jp
movb
add
gs
aam
dec
ja
fldcw
cmp
jecxz
int
jge
jae
xchg
popf
fcoml
push
inc
inc
or
xchg
insl
out
mov
fsts
int
iret
lock
lods
jns
sbb
adc
adc
xchg
rcr
pushf
lock
jmp
lods
xchg
jo
pop
notb
sbb
xor
jmp
add
mov
and
sti
cwtl
cmpl
addb
clc
push
mov
adc
mov
fidivrs
xchg
pop
mov
mov
lret
mov
sti
adc
inc
stos
and
pop
js
movsb
push
sub
mov
adc
jne
test
adc
inc
add
add
xchg
loopne
int3
jbe
bound
dec
outsb
pop
mov
mov
push
sbb
out
adc
adc
outsl
ja
push
outsl
xor
mov
fldenv
jbe
lret
xorl
into
mov
icebp
pop
ljmp
fadds
add
add
cmpsl
jb
mov
push
jbe
in
int3
cli
cmc
xor
sub
lods
gs
add
add
sub
mov
mov
pop
mov
mov
or
jbe
inc
cmp
insl
mov
jg
js
cmp
mov
addr16
push
les
sti
jnp
mov
jecxz
loope
fwait
pop
outsb
imul
add
mov
mov
test
int
adc
mov
inc
imul
lods
jl
out
lret
xchg
aam
add
add
pop
out
lahf
rol
push
stos
hlt
les
dec
mov
es
dec
add
cwtl
aaa
dec
gs
frstor
add
add
out
jmp
insl
out
xchg
dec
cmc
jge
mov
mov
push
mov
add
xor
pop
arpl
decl
add
cmp
or
pop
adc
xchg
sti
outsl
push
pop
add
test
sbb
cli
out
lods
mov
add
outsl
mov
cltd
les
shlb
aas
mov
in
cmc
call
jo
fldl
dec
mov
out
inc
pop
and
je
pop
mov
lea
jl
roll
outsl
imul
lret
adc
add
test
stc
jmp
or
cmp
inc
or
add
add
mov
xchg
movsl
adc
shll
mov
les
pop
in
rorl
lods
stos
add
add
add
fsubrs
dec
dec
inc
inc
or
cltd
adc
xor
push
xchg
add
add
lds
sbb
shlb
lahf
lahf
rcrb
or
inc
mov
mov
mov
ffreep
xchg
movsb
mov
inc
aam
pop
lods
mov
inc
sub
xor
je
add
add
add
xor
call
sbb
in
jle
adc
test
ss
flds
add
push
cmp
sbb
mov
mov
xor
mov
lcall
mov
dec
xchg
fmuls
sbb
pop
jno
shll
insb
mov
mov
scas
out
inc
icebp
popa
cwtl
push
fsts
add
mov
outsb
popf
dec
and
int3
jae
fdivs
movsl
das
mov
and
mov
sbb
or
cli
iret
add
xchg
inc
cmp
fstpt
sub
inc
fdivr
mov
shlb
adc
insb
je
xchg
shll
mov
sbb
loope
push
mov
jecxz
inc
into
movl
jge
ja
mov
gs
rclb
shll
repnz
in
insl
out
inc
adc
lret
test
add
out
jns
in
jge
pop
adc
scas
push
inc
pop
out
mov
in
pushf
rcrl
pop
fcoml
sub
enter
arpl
xchg
cmp
push
pusha
std
push
or
push
insl
and
fwait
loop
mov
clc
add
add
add
jnp
cs
rcrl
lahf
shrb
inc
jae
jmp
mov
push
mov
enter
add
iret
jge
inc
int3
dec
and
mov
push
test
add
add
in
mov
scas
sub
and
jo
sub
xchg
sub
mov
arpl
mov
add
add
insb
ficomps
pop
mov
nop
jbe
mov
in
inc
orb
push
lret
jle
push
loope
nopl
dec
mov
jnp
or
int
cmc
jnp
mov
loopne
cmc
and
fs
insl
in
std
sbb
addb
fmul
jno
add
add
mov
mov
cwtl
add
dec
enter
test
mov
sbb
xorb
js
dec
mov
stos
cs
je
push
ds
fcmovnbe
xor
adcb
in
sar
adc
insb
add
add
push
push
xchg
xchg
test
xchg
scas
and
push
pop
lock
inc
cmp
sti
inc
mov
push
cmp
and
cs
xor
popa
pand
add
add
dec
jp
xor
xchg
sub
xchg
inc
lods
sarb
ret
xchg
shrb
add
in
push
push
dec
int3
int3
int3
mov
cmp
add
cmp
pusha
jmp
outsb
pop
jbe
ficomps
addb
movsb
push
or
jmp
pop
push
dec
adc
lods
xchg
test
cwtl
adc
add
add
fs
mov
pop
loop
shll
pop
aam
mov
std
or
sti
adc
adc
mov
pop
dec
imul
insl
addl
cmp
push
pop
and
jle
test
mov
sub
stos
test
adc
enter
or
mov
loopne
xchg
xlat
cmp
inc
add
js
int
mov
mov
insl
push
mov
adc
inc
shlb
cltd
mov
test
outsl
ret
cmp
push
xor
ret
xchg
sbb
mov
add
popa
xchg
inc
mov
jae
out
cmpsb
fdivrl
repz
xor
xchg
push
push
mov
pavgw
inc
xchg
mov
pop
sub
dec
dec
fs
repz
push
inc
enter
ss
mov
lods
pop
lods
jb
repnz
lcall
es
and
xor
fwait
mov
xchg
cs
jmp
mov
data16
cmp
test
xor
cmp
adcb
mov
enter
xchg
add
nop
popf
cmc
out
pop
sbb
repnz
push
mov
cs
fs
sysenter
std
cmc
add
add
cld
repz
add
and
mov
insl
or
add
in
ds
ret
sub
std
stos
paddq
cmpsb
insb
in
xchg
push
push
jbe
lds
sub
add
and
in
gs
ja
cmpsb
fucomp
xchg
out
stc
jmp
mov
mov
loopne
test
test
testb
jb
insb
xchg
push
aad
push
ret
mov
lods
ss
jns
clc
ja
loopne
stos
outsl
pop
scas
mov
pusha
add
add
test
inc
int3
mov
cld
sub
lcall
sbb
dec
mov
and
mov
sub
push
lahf
xchg
ret
aad
cmpsb
push
mov
je
or
ret
data16
std
dec
mov
mov
in
aas
mov
in
movsb
sub
out
add
add
mov
sti
shrb
sti
mov
mov
push
jle
aam
in
lcall
loope
jae
out
hlt
testb
mov
fimuls
inc
cmpsb
xchg
jge
test
in
enter
into
hlt
cli
mov
inc
das
inc
or
add
or
inc
out
mov
jp
cmc
shl
push
jecxz
sbb
or
add
add
mov
inc
repnz
or
aam
lds
mov
scas
dec
das
ljmp
xchg
inc
and
test
nop
push
fimuls
int3
mov
mov
fidivrs
mov
sub
adc
arpl
mov
dec
fidivs
inc
sub
jle
lcall
cwtl
sti
test
test
jecxz
inc
dec
sarb
mov
loopnew
cmp
negb
int3
or
fmuls
adc
inc
dec
mov
cwtl
add
add
arpl
xor
fstp
sub
out
ja
jecxz
js
lods
mov
push
ret
out
dec
mov
rol
xchg
addr16
lea
mov
lret
pop
mov
sub
ja
xor
scas
es
aam
rcrb
popa
xchg
mov
int
mov
xor
lcall
adc
fisttpll
jmp
in
sbb
je
add
aaa
rcrb
xor
mov
out
jecxz
mov
into
cmc
push
and
sbb
jmp
mov
add
add
dec
mov
ljmp
jb
call
or
imul
mov
push
add
add
or
add
add
mov
jg
out
jnp
mov
mov
fidivl
stos
cwtl
hlt
pop
push
jge
inc
jmp
fidivrs
adc
add
add
rorb
xchg
subb
mov
stos
sbb
pop
mov
cmp
add
push
pop
jnp
sub
inc
int3
sub
enter
scas
sbb
leave
dec
ljmp
add
mov
movsb
ret
cmp
add
daa
cmp
movsb
cmpsb
cmp
mov
mov
out
lcall
cs
or
xchg
inc
add
xchg
call
daa
clc
mov
inc
jbe
jns
lcall
add
add
mov
cs
jno,pt
stos
data16
cmc
dec
addr16
and
pop
in
jb
loope
mov
in
scas
movsb
pop
insb
mov
mov
fsubl
mov
add
dec
dec
and
cld
sub
sbb
sub
shll
aas
fwait
sub
pop
xchg
xor
or
and
sarb
adc
push
jbe
arpl
int
repz
shrb
or
add
add
jmp
cmp
mov
inc
push
add
add
xor
xor
in
mov
inc
imul
std
lret
fidivrs
inc
ds
stc
xchg
iret
cmp
pop
xchg
leave
repz
stc
mov
lock
stos
pop
int3
xchg
mov
scas
mov
lahf
lret
dec
inc
mov
cmpsb
nop
and
mov
push
cmc
out
rcrl
shrl
out
adc
add
stc
inc
pusha
inc
ret
mov
in
sub
iret
outsb
xchg
flds
add
sbb
cmpsl
mul
or
out
flds
int3
int3
int3
int3
int3
sub
xchg
sahf
lea
ficoms
outsb
sub
sbb
rclb
lods
mov
ljmp
data16
inc
into
scas
outsb
mov
adc
fwait
and
punpckhwd
add
mov
jns
xchg
outsl
in
pop
sti
leave
pushl
adc
adc
pusha
outsl
dec
push
mov
add
add
mov
je
jbe
push
je
pop
sbb
add
add
shlb
in
or
mov
push
shll
fst
je
adc
cmp
jmp
jge
push
xor
movsl
sub
and
das
jecxz
movsl
in
dec
cmp
rolb
add
add
aaa
out
inc
add
pop
jmp
sub
fisttps
shlb
sbb
dec
out
push
imul
insb
pop
dec
and
mov
add
addr16
or
push
ret
add
nop
push
push
jnp
test
xchg
inc
add
add
push
mov
sahf
mov
lea
add
add
daa
dec
in
cs
mov
stc
or
fisubrs
loop
mov
imulb
imul
mov
xor
mov
add
jo
mov
clc
clc
xor
xor
iret
adc
jnp
fsubrl
jno
es
sub
jg
sbb
outsb
dec
push
jbe
pop
ret
sub
jle
dec
cmpsb
inc
xor
dec
int3
pop
ficompl
cmpb
les
push
add
add
add
mov
adc
jnp
jno
and
dec
movsb
aas
and
dec
cmp
scas
mov
dec
and
mov
lods
sub
inc
mov
mov
jns
sub
add
xchg
lret
fidivs
scas
adc
pusha
jns
sub
push
ficompl
add
push
sbb
add
add
push
fsubrs
cli
sbb
int3
mov
gs
xchg
inc
cli
out
out
mov
cli
into
mov
dec
and
xor
clc
dec
add
call
cwtl
xchg
xchg
dec
cmp
sbb
push
dec
jle
pop
outsb
out
dec
xchg
hlt
icebp
test
mov
add
add
or
mov
addr16
mov
mov
xchg
adc
cwtl
or
dec
addr16
add
in
into
xchg
sub
lock
in
pop
xor
dec
repnz
loopne
les
das
mov
mov
adcl
add
mov
add
add
in
pusha
inc
cmpsb
stos
and
je
std
inc
xorl
stos
movsl
inc
dec
push
stc
mov
out
pop
mov
lds
cwtl
jp
nop
sahf
hlt
xchg
mov
add
out
jg
fldenv
push
adc
pop
lods
and
pop
inc
push
je
icebp
mov
xchg
jo
cmp
xchg
sahf
lods
aaa
mov
or
adcb
jae
ret
and
mov
test
cmc
cmp
into
add
add
loope
jge
es
int3
int3
int3
dec
xchg
movsl
cltd
imul
or
popf
roll
fsts
push
out
cmpsl
and
scas
mov
bnd
in
aaa
and
mov
add
sbb
pop
and
add
sahf
mov
mov
pop
jb
in
cmpsl
out
or
jb
jae
inc
or
sbb
mov
add
add
push
nop
inc
xor
nop
jo
push
scas
push
mov
mov
cmp
add
xchg
mov
pusha
xchg
pop
mov
clc
cltd
data16
and
lret
dec
xor
lret
jmp
sarl
cmp
int3
mov
idivl
pusha
jg
add
add
xor
repnz
and
pusha
call
call
dec
cltd
jmp
sbb
insb
inc
and
out
dec
push
in
fs
btr
xor
jae
shl
rorb
into
outsl
loopne
sti
jne
fs
sub
popl
add
negl
lods
gs
push
xchg
in
dec
or
int3
int3
dec
pop
xchg
mov
jecxz
ja
push
iret
les
sub
sbb
dec
mov
cwtl
lcall
adc
int3
sub
testb
icebp
lahf
test
mov
push
jle
cmp
mov
fdivl
mov
add
mov
mov
push
pop
cmp
insb
or
js
cwtl
mov
fildl
add
add
jp
push
in
out
dec
enter
test
popa
cmp
and
pop
test
pushf
adc
or
cmp
xchg
ret
xchg
mov
scas
pushf
xchg
inc
dec
xor
or
fsubrl
inc
jge
add
iret
jge
mov
push
push
stos
imul
lock
cmp
dec
mov
enter
xor
mov
xchg
adc
xchg
jae
out
jo
idivb
sarl
lahf
in
fsubl
cmp
pop
or
test
pop
testl
frstor
aas
jae
lcall
aaa
sbb
add
test
jp
cmp
mov
jne
les
fiadds
dec
xor
push
outsb
xchg
std
scas
jecxz
fistps
sub
xor
sbb
nop
mov
push
int3
pop
inc
std
push
andl
lret
aaa
sbb
mov
jns
add
add
aas
aaa
cmp
dec
lea
mov
clc
sub
shll
mov
fisubl
cmpl
pop
pop
rcll
fadds
daa
pushf
ror
mov
add
add
xor
cmp
scas
add
mov
test
andb
fmull
sahf
pop
movsb
cmp
jae
mov
int
sub
enter
in
enter
mov
or
test
mov
mov
add
and
add
add
adc
roll
pop
push
ds
int3
mov
fs
jl
sti
add
fdivs
rcrb
and
push
pop
jae
and
js
cmp
pop
xor
int3
idiv
sub
imul
xor
enter
xchg
addb
add
rclb
mov
add
das
divl
add
movsb
loope
or
dec
filds
in
push
dec
into
fabs
aas
das
mov
xchg
and
int3
mov
cli
push
xor
ror
int3
int3
outsl
sarb
add
mov
orb
shll
in
mov
mov
jne
test
jmp
pop
repnz
popa
aad
rcr
or
scas
lods
shll
pop
ljmp
add
stos
xor
shr
loope
insb
and
out
ret
test
xchg
aad
cmc
lss
add
mov
in
insl
xchg
enter
fmulp
arpl
test
adc
mov
dec
filds
add
sbb
jno
push
mov
or
inc
movsb
cwtl
jnp
das
xlat
testb
inc
shlb
int3
dec
orb
add
inc
jp
push
xlat
cmp
lret
push
jge
icebp
int
in
mov
cmp
pop
push
mov
sbb
add
add
add
loopne
nop
ret
xchg
rclb
pop
pop
pushf
leave
repnz
xchg
mov
filds
mov
and
repnz
ss
xor
fwait
loope
dec
sbb
mov
cld
dec
lods
inc
cmp
lahf
std
es
adc
xchg
dec
xor
or
xchg
add
add
mov
cmpsb
or
nop
jns
inc
or
movsb
pop
in
push
add
sub
or
ret
arpl
cmc
dec
sub
cmpl
xor
xor
mov
jae
add
fildll
xor
lahf
push
mov
fwait
mov
mov
cmp
inc
ss
mov
push
cwtl
mov
xchg
inc
jle
inc
xor
mov
push
js
cli
or
mov
add
push
xchg
push
and
popf
sahf
std
fistpl
lahf
xchg
mov
push
fmulp
int3
int3
out
insl
mov
mov
add
add
xor
jmp
mov
or
inc
mov
hlt
repz
popf
mov
jmp
and
ficoms
iret
orl
and
jge
mov
lea
lahf
les
iret
cmpsb
jge
add
add
push
std
jnp
or
sbb
leave
xlat
sub
addr16
cmp
jno
sbb
je
mov
adc
mov
movsb
int
aaa
js
or
cmpsl
into
push
lds
js
mov
pushf
xor
sbb
xor
fstp
stos
xor
push
sbb
in
add
lret
dec
jns
jno
jmp
push
add
insb
pop
cltd
add
lods
loope
inc
lcall
cmp
pop
int3
clc
xor
testb
push
jl
idiv
or
negl
add
add
inc
filds
push
hlt
loope
add
orb
adc
fsubrp
fs
cs
pop
mov
and
divl
dec
cltd
adc
inc
inc
pop
dec
imul
pop
es
cmpsl
out
aad
pop
arpl
sahf
jmp
add
std
jecxz
lods
sbb
pop
ret
outsb
leave
mov
and
inc
das
out
mov
mov
test
mov
aam
xchg
cmp
mov
popf
inc
insl
dec
xchg
icebp
cmp
adc
dec
mov
mov
mov
call
repz
popa
fnsetpm(287
push
mov
imul
pushl
pushf
sbb
add
daa
inc
lods
adc
sahf
stc
mov
xchg
mov
data16
mov
movsl
fcmovnb
sbb
pushf
jp
jge
inc
popl
nop
popf
lret
cld
into
jp
mov
loop
add
testb
add
xchg
add
add
aam
mov
xchg
inc
inc
cmp
xchg
inc
cli
mov
add
add
popf
dec
jno
mov
inc
inc
and
mov
jecxz
cmc
add
add
sub
ret
lret
xor
dec
xchg
add
lret
dec
arpl
push
sbbl
inc
push
call
lods
xor
cld
cli
cmp
push
adcl
fdivrl
xchg
in
repnz
fstps
aad
or
outsl
add
add
sub
xor
lods
out
mov
jns
clc
xchg
or
jns
int
add
fistps
popf
or
xor
mov
pop
or
pushf
scas
xchg
xchg
pop
adc
test
aas
mov
add
outsl
insb
xor
pusha
cmp
mov
in
push
andl
insl
push
mov
pop
and
adc
sar
sub
sbb
push
xchg
popf
js
xchg
out
mov
inc
or
daa
xor
fimull
mov
cltd
push
out
aad
fisttps
gs
pop
add
add
arpl
mov
mov
lds
xchg
jecxz
mov
add
add
dec
mov
rcl
add
pop
loop
xchg
cmpl
aas
out
rcrl
cmp
mov
xor
mov
sub
femms
movsl
jns
add
add
inc
imul
inc
add
and
jmp
lret
push
xor
dec
popa
push
ret
mov
cmc
cmp
nop
sti
ds
lcall
scas
mov
add
add
ror
sti
jb
sahf
insl
int3
push
inc
mov
sbb
lret
push
push
pop
outsl
and
test
cmp
adc
or
dec
ljmp
add
add
lds
cmpsb
lahf
js
mov
sub
inc
inc
sub
bound
in
outsl
xor
iret
or
jg
pop
into
scas
arpl
mov
pop
outsb
pushf
test
mov
mov
fldl
add
enter
ss
lret
add
dec
and
mov
sub
test
sub
sbb
pop
mov
insl
and
test
sub
outsb
das
loopne
lods
mov
jo
add
or
sti
incb
les
add
int3
cwtl
fucomip
js
sahf
jle
sbb
push
push
push
insl
jmp
cwtl
dec
push
jg
add
xor
test
mov
mov
mov
inc
mov
add
sahf
or
xchg
mov
mov
cmp
dec
cmp
int3
int3
int3
int3
aas
jle
mov
jmp
jle
push
jp
sarb
pop
xor
rcll
push
ss
les
stc
jmp
xchg
rcrb
add
add
outsl
mov
xchg
lds
push
fnstcw
cmp
mov
cmpsl
inc
cmp
push
push
push
test
add
sub
sub
out
dec
repz
mov
mov
shll
dec
shlb
mov
cmp
push
fdivrs
cwtl
lock
mov
dec
adcl
add
or
shrl
dec
inc
gs
xchg
sti
sbb
add
mov
sahf
cld
insl
inc
adc
shll
add
add
inc
mov
ja
mov
movb
mov
xor
push
aas
out
sarl
jne
mov
add
add
fcomps
insb
and
je
adc
cmp
jo
add
or
inc
adc
test
outsb
or
rcrl
inc
iret
jae
and
xchg
pop
jns
or
jo
sbb
mov
fstpl
or
aad
dec
in
stos
sub
adc
lods
add
roll
add
push
push
out
jbe
jb
nop
dec
xchg
jne
mov
add
xor
cvtps2pi
lret
mov
das
ret
insl
sub
inc
pushf
dec
stc
jns,pt
out
movsb
inc
sahf
das
cmpsb
cmp
and
adc
mov
ljmp
pop
lods
sti
cli
mull
add
add
and
pop
pop
repz
add
dec
les
add
sub
je
mov
popf
mov
shr
xchg
dec
lcall
ja
stos
cmpsb
gs
pusha
je
adc
fucomip
dec
loope
aam
jns
cmp
push
mov
jne
jmp
enter
pop
rcll
enter
sub
pop
sti
mov
aam
aaa
mov
mov
inc
xor
sub
and
ss
fs
decl
repnz
inc
addr16
mov
add
int
xor
jns
jo
dec
jne
das
add
add
pop
rcrl
pusha
cli
movsb
nop
movsb
fwait
fwait
or
cmpsb
jae
add
mov
jne
pop
xchg
out
arpl
push
mov
add
aas
sarl
add
iret
ja
outsb
loopne
faddl
add
add
mov
int3
adc
and
scas
jecxz
push
mov
xchg
jb
adc
lock
pop
jb
adc
inc
xor
pop
xchg
adc
mov
out
xchg
je
xchg
adc
pusha
dec
aaa
loop
aad
jne
and
insb
mov
sub
mov
loope
popa
lret
std
test
sub
in
push
add
xchg
shlb
pop
dec
inc
mov
mov
jmp
pop
add
add
popa
sub
fwait
shrb
call
jg
sbb
inc
add
or
lret
loopne
popa
xchg
push
xchg
or
pop
pusha
xor
sub
or
outsl
aas
mov
push
repz
mov
cmp
xor
enter
add
or
sbb
dec
ffreep
cmc
sub
push
divb
fdivr
cmp
cmp
xor
std
and
pop
icebp
mov
fs
pop
add
add
rclb
inc
mov
sbbl
push
lcall
lods
mov
das
and
outsb
push
mov
adcl
bound
leave
ficoml
push
inc
or
pop
add
add
jns
pusha
xchg
mov
pop
nop
jg
in
or
push
shll
lret
cmc
jno
inc
outsb
and
call
roll
jl
mov
dec
rorb
je
dec
xor
cmp
xchg
aas
lods
mov
push
mov
mov
mulb
test
add
dec
jp
sub
pop
cmp
xchg
data16
icebp
stos
sar
rolb
xchg
scas
jns
cmpsb
and
dec
cmpsl
outsb
lahf
push
enter
add
data16
leave
sbb
aam
into
mov
xor
divb
aad
fstpl
sbb
lock
daa
cli
mov
push
push
add
addb
loope
pop
adc
add
add
mov
push
push
ljmp
xchg
int
in
rclb
jo
pushw
jmp
adc
add
add
lods
outsb
inc
mov
ret
in
lods
push
sbb
daa
lret
sub
mov
enter
and
add
andb
sbb
cmp
popa
icebp
pop
dec
notb
outsl
arpl
jno
loope
inc
aad
call
ss
inc
repnz
add
xor
jns
mov
push
inc
lcall
push
lret
cli
outsb
test
aas
and
adc
idiv
xor
mov
movsb
lods
test
mov
mov
xor
xchg
add
add
mov
decl
shrb
imul
cmc
or
stos
inc
add
adc
stos
pop
mov
dec
addr16
or
aad
mov
fiaddl
push
cmp
aam
mov
jl
add
add
fs
adc
mov
fldl
lods
mov
pop
sti
add
add
gs
xor
sub
mov
int
dec
lcall
add
add
aaa
ljmp
push
push
leave
ret
push
mov
cmp
icebp
mov
lahf
cs
rcr
lods
ret
jp
rol
enter
in
and
cli
cmp
adc
addl
mov
add
add
daa
loop
popa
cmpsl
movsb
mov
cmp
aaa
pop
fwait
add
in
addr16
xor
mov
push
inc
adc
insl
ss
mov
mov
ljmp
push
mov
jecxz
out
cmp
jg
push
int3
xor
lret
and
cmpb
pop
push
add
add
xor
loopne
fstpl
lret
xlat
leave
add
add
add
sbb
and
les
cwtl
in
pop
inc
push
adc
ss
psubw
das
aad
scas
jle
dec
in
xorb
mov
mov
inc
cmp
jnp
sbb
dec
in
outsb
ss
test
adc
jecxz
lds
add
add
shll
jle
aas
sbb
pushf
sub
outsb
lahf
dec
fisubrl
jb
ljmp
sbb
mov
out
shl
sub
sbb
mov
add
cmp
dec
daa
sbb
repnz
sub
bound
stc
add
add
outsb
dec
pop
nop
ret
push
xor
in
nop
adcb
xchg
ljmp
imul
bnd
fdivrl
movsb
test
cli
fstps
xlat
mov
mov
xchg
popf
jno
mov
xor
jp
scas
lds
iret
push
and
add
pop
rorb
imul
ror
fwait
dec
dec
fcoms
aad
xchg
ja
xlat
int3
int3
int3
int3
lcall
repz
push
adc
std
movsb
movsb
dec
and
mov
hlt
into
imul
pop
into
sbb
rcll
icebp
sbb
xchg
insl
push
loopne
cmp
jmp
pusha
cmp
sub
mov
hlt
xchg
sbb
leave
pop
fs
inc
xchg
daa
aam
cmp
dec
mov
mov
mov
fistpl
cltd
jp
in
mov
js
cmp
sbb
jle
outsb
fstp
xchg
jb
test
mov
lods
xor
cwtl
andb
outsb
mov
sbb
call
fdiv
in
test
add
add
js
lret
push
xchg
pushf
in
mov
dec
mov
add
in
mov
sbb
test
fcoms
rcll
push
or
push
mov
lahf
add
cmpsb
stos
movsb
test
push
push
fidivrs
jno
dec
popa
das
hlt
andb
xchg
cmp
xchg
int3
js
pop
push
popa
cltd
and
xor
sbb
add
adc
push
push
shl
popa
ss
sub
fucomip
lods
push
fwait
dec
insl
in
sub
add
popf
add
cld
pusha
jbe
add
jmp
mov
mov
mov
cwtl
lahf
adc
imul
aas
out
push
int3
cmc
fwait
jno
into
stos
shrb
push
sbb
add
add
xchg
jno
push
fnstcw
jnp
lret
push
cmc
ss
test
lea
pop
fcomps
xchg
int3
sub
push
add
add
lods
orl
test
aas
imul
and
add
add
mov
shlb
mov
xchg
hlt
aaa
dec
loope
pop
xor
dec
dec
mov
sahf
shl
into
test
add
loop
fisubl
adc
loop
sbb
lods
loopne
je
mulb
cmpsl
pusha
mov
in
pop
testl
inc
cmp
or
or
ret
adc
fdivrs
xchg
lret
pop
or
addr16
pop
sbb
mov
pop
dec
fsts
add
add
cmp
les
std
fwait
jl
rclb
jp
cmc
pushf
test
pop
ret
fidivrl
dec
xlat
repz
mov
add
add
xchg
xchg
popa
cmp
mov
jb
xchg
in
ja
int
int3
nop
push
ret
mov
cmp
xorb
mov
outsb
jecxz
jo
mov
mov
das
cmpsb
mov
cmp
jae
xchg
gs
dec
add
add
pop
out
and
xchg
push
in
cmp
andb
mov
pusha
std
mov
into
imul
mov
cltd
add
push
adcl
test
shrl
inc
iret
dec
push
clc
fists
imul
sbb
aam
dec
in
xor
sbb
xor
bswap
sti
stos
mov
fsub
fiadds
fcmovu
push
add
push
sbb
xor
lea
loopne
push
jns
xor
xchg
jbe
pop
mov
popf
repz
add
add
testb
nop
inc
cld
mov
clc
out
test
aaa
lret
sbb
ficoms
imul
icebp
in
mov
push
cld
inc
stos
adc
add
push
aam
xlat
jg
add
rcll
push
aad
ja
add
sbb
mov
mov
mov
add
add
ficompl
lret
cltd
lods
cmp
fistps
inc
insb
mov
xor
add
add
out
fwait
dec
dec
cmp
push
ljmp
mov
outsl
scas
popa
or
rclb
xchg
adc
shlb
out
mov
mov
jb
sbb
hlt
and
add
and
mov
cwtl
mov
loop
add
add
sbb
bound
cmpsb
lret
cmp
mov
jnp
xchg
adcb
cmc
clc
stos
jmp
add
jecxz
pop
test
and
fadds
sbb
push
mov
out
xchg
gs
pusha
rcll
fwait
stos
sbb
jp
lea
cmpsb
xor
inc
enter
inc
or
insb
adc
mov
enter
in
aaa
loopne
jge
iret
lahf
push
cwtl
pop
push
sbb
push
int3
jbe
loop
inc
pop
mov
or
mov
mov
cli
ljmp
mov
or
sbb
adc
es
sub
stos
icebp
int3
int3
int3
subb
ret
aas
stc
lods
imull
in
jl
mov
shlb
iret
or
cmp
in
jo
sti
stos
cltd
xchg
arpl
xchg
repnz
cltd
pop
add
add
icebp
sub
lcall
je
dec
pop
std
mov
data16
push
cld
mov
es
sub
adc
add
add
hlt
and
cmpsb
mov
add
add
mov
or
add
mov
cmp
repz
mov
in
cld
icebp
add
add
mov
ret
xchg
push
movsb
mov
int3
enter
loopne
or
sbbb
mov
mov
sub
mov
lods
jnp
add
add
repnz
jb
cmp
scas
bswap
leave
fst
mov
xchg
and
dec
loop
repz
adc
cmp
fidivrs
lcall
jp
fnstenv
push
mov
add
xor
ja
daa
pop
jge
subw
sbb
dec
mov
aaa
out
jns
pop
arpl
ror
out
add
pop
scas
hlt
adcl
nop
xchg
cmp
push
mov
pop
int3
fidivl
pop
adc
in
xchg
adc
add
and
mov
stc
add
xor
loop
inc
push
cli
cwtl
xor
xchg
or
mov
addb
lods
pop
add
leave
push
add
sbb
enter
sbb
pop
repz
push
and
cmp
or
push
nop
sub
xchg
sub
int
jge
fldcw
adc
test
pop
lret
cmpsb
hlt
push
das
add
add
je
fwait
jmp
mov
repz
movb
add
in
xor
fwait
and
pop
pusha
cmp
mov
sbbb
or
in
dec
shl
loop
inc
scas
mov
loop
sbb
js
inc
add
add
clc
cmc
jge
ljmp
mov
lret
out
push
in
or
sbbb
pop
xchg
imul
xor
test
pop
mov
mov
add
ja
add
mov
mov
push
adc
push
cmpsl
popfw
leave
nop
int
add
outsl
pop
push
movsb
lods
repnz
imulb
sbb
jp
icebp
pcmpeqd
fisubl
jmp
sbb
fs
lret
mov
or
fcmovbe
pop
lret
sbb
or
fstps
movsl
mov
int
and
add
sbb
out
pop
cmc
lods
mov
push
dec
aad
xchg
xor
fists
fimuls
pop
xchg
ds
sbb
xor
shr
arpl
out
roll
add
lds
adc
outsl
sub
add
rcl
clc
add
mov
or
insl
aad
js
xchg
popf
pop
gs
mov
xchg
push
nop
in
imul
into
sarl
fscale
push
sub
out
ja
add
int3
lock
push
jns
shlb
pop
repz
and
pushf
push
xchg
pop
push
dec
es
add
add
add
ja
iret
cltd
in
repnz
in
test
sbb
sarl
xor
test
mov
xor
sahf
jno
sbb
inc
insl
push
aas
leave
addr16
mov
or
mov
sub
mov
aas
inc
fidivs
call
push
fildll
push
enter
add
add
cmpsl
pop
dec
cmovge
in
out
jle
pop
add
inc
inc
sub
xor
xchg
test
mov
pop
xchg
fstpt
push
sti
cmpsl
out
xor
adc
ljmp
dec
loope
sub
pop
xchg
dec
jno
popf
lahf
mov
mov
adc
mov
icebp
add
add
adc
in
shll
negl
mov
insl
test
mov
cmpsl
mov
xchg
add
test
pop
sti
and
cld
inc
ds
stos
xchg
mov
sbb
sbb
fwait
inc
add
mov
sbb
popf
mov
or
sub
movsl
mov
in
add
cmp
mov
xchg
mov
xchg
fidivrs
xchg
in
add
popa
mov
outsl
cwtl
lods
adcl
loope
or
inc
sub
call
add
xchg
lea
cmp
mov
mov
fildll
xchg
push
cmp
sbb
cmovp
stos
add
rcrb
rclb
cmc
pop
or
sbb
add
mov
ror
int3
int3
int3
int3
pop
sbb
inc
add
mov
adc
mov
mov
repnz
test
add
and
mov
int3
mov
lcall
jmp
enter
add
jle
in
icebp
imul
nop
push
mov
xchg
testb
das
sbb
call
cmp
dec
mov
fadds
mov
jno
adcb
mov
icebp
pop
mul
add
add
repnz
fstpt
add
hlt
jmp
inc
lock
push
mov
shl
mov
jmp
xlat
fadd
push
dec
or
test
add
mov
incb
fdivl
fmull
adcl
dec
adc
leave
pop
cmc
mov
pop
xchg
cltd
sub
mov
add
sub
mov
xor
pop
mov
test
gs
jno
jne
or
repz
jno
mov
les
jb
adcb
add
add
or
xor
and
dec
test
jle
sbb
add
fwait
mov
scas
and
shlb
mov
lock
rolb
aam
movb
mov
xchg
lods
or
add
popf
mov
mov
jne
or
test
aad
les
popf
pop
jnp
and
popa
mov
cwtl
mov
nop
test
and
jmp
add
addr16
pop
test
push
nop
arpl
inc
mov
add
add
in
scas
or
insl
stos
cld
sbb
xchg
repnz
pop
aas
pop
addr16
aad
mov
subl
testb
sti
and
mov
inc
nop
xchg
pop
call
sub
push
xor
push
xchg
ret
add
add
inc
into
into
scas
cmpl
rclb
pop
pop
popa
add
add
cmc
and
and
pop
cld
outsb
and
pop
xchg
lcall
add
jp
add
add
inc
sbb
pop
bound
lods
cmp
out
mov
xor
inc
fnsave
add
add
sub
leave
in
or
pop
xor
mov
fs
mov
or
out
imul
andb
xor
and
test
push
cmpsb
enter
pop
pop
push
jg
and
fldenv
andb
xchg
in
xchg
add
add
and
mov
jo
sub
mov
jno
adcb
add
push
lock
lods
mov
dec
jne
cmpl
pop
aaa
inc
add
add
aad
mov
and
addr16
mov
or
cmpsb
mov
decl
push
sbb
mov
aam
mov
addr16
push
aam
add
imul
daa
adc
adc
sub
xor
pop
ljmp
int
andb
fldt
out
jg
add
add
mov
fstps
ja
movsb
testb
mov
add
in
adcb
dec
es
add
inc
testb
andl
sti
add
dec
dec
and
add
mov
mov
into
pop
bound
cli
test
stos
fwait
lret
pop
std
pop
cmpsb
mov
lahf
je
pop
push
push
ss
repz
add
add
jnp
dec
mov
rol
icebp
mov
mov
mov
sbb
xlat
inc
pop
aam
pop
outsb
sub
mov
lret
push
out
push
push
adc
pop
dec
aas
add
mov
incw
add
add
cmpl
xchg
xchg
stc
cltd
mov
clc
push
inc
insb
mov
add
mov
mov
sub
mov
cwtl
add
xlat
sbb
pop
adc
pop
sahf
test
push
scas
rcrb
out
add
add
push
rcl
rcll
lods
fisubrl
pop
mov
movsl
rcrl
repnz
ds
add
sbb
pop
pop
or
xor
adc
aaa
xchg
mov
jmp
and
fistpll
cmp
push
inc
mov
cmpsl
push
add
int3
int3
lods
shrb
jl
pop
lods
out
pop
jge
mov
in
loope
pop
add
xor
dec
inc
insb
ljmp
cltd
dec
ljmp
mov
push
jne
push
jno
mov
jmp
add
add
lret
sub
dec
lahf
push
cmp
pop
movsb
lret
shl
xchg
pop
cld
sub
pop
jmp
scas
pusha
inc
lret
cli
push
jmp
adc
ljmp
out
test
mov
xlat
mov
out
or
cli
testb
aam
inc
fwait
jae
xchg
mov
lods
add
add
mov
jg
pop
xor
push
inc
das
in
addr16
into
sbb
pop
xchg
xor
popf
xchg
pop
fnstsw
lret
dec
aam
cmpsb
jns
lea
xchg
out
pop
mov
mov
test
arpl
add
add
pusha
cmpsl
sub
mov
inc
cmpsl
jne
cmp
cmp
pusha
lret
fisttpll
aam
std
inc
xor
cmp
or
xchg
push
popl
test
imul
mov
inc
jg
negb
xor
in
inc
in
stos
rorl
test
xor
call
in
lcall
push
jbe
fstpt
adc
out
mov
roll
setae
add
add
aaa
xchg
dec
cmpsb
movsl
stc
movsl
push
and
push
cltd
push
pushf
sbb
pop
cmc
pop
pop
sbb
xor
jae
mov
fsubs
mov
cli
jmp
out
jb
cmp
gs
mov
cltd
adc
add
add
inc
sti
in
rcrl
fs
or
imul
jecxz
push
pushfw
cli
fadds
hlt
fyl2x
in
or
add
add
ds
mov
pop
vpshlq
push
add
int
mov
lods
fildl
jo
rcr
add
add
das
mov
dec
jp
cs
fcomip
jbe
mov
mov
xor
pop
ret
sbb
push
cmp
add
or
pop
jb
add
inc
mov
jmp
imul
jbe
cwtl
mov
stc
mov
pop
pop
les
arpl
lods
inc
or
mov
lds
daa
cld
repz
jae
notl
fidivrl
pop
cmp
cpuid
push
cmp
into
test
jno
mov
push
inc
imul
jmp
xchg
mov
sbb
mov
add
add
sub
stos
out
cmp
push
mov
es
repnz
aaa
dec
xor
sbb
into
mov
bound
ret
jmp
lahf
push
adc
inc
aam
xor
add
std
cmp
xlat
roll
imul
cmp
fnstsw
cwtl
jge
jl
inc
mov
xchg
cmp
add
in
fiadds
mov
int3
int3
pop
fcompl
or
jb
stos
sbb
addr16
jg
arpl
rcrl
imul
test
cmp
mov
push
sahf
repz
jnp
push
push
rolb
das
sbb
sub
mov
shr
pop
ljmp
add
fwait
sbb
add
mov
out
insb
fdivrl
data16
roll
repz
mov
cmpsl
aas
ja
pop
mov
adc
fwait
out
jle
gs
test
rolb
add
add
ret
xchg
jo
arpl
and
cwtl
shll
andb
xchg
dec
jo
jecxz
daa
add
add
shlb
inc
mov
jmp
cmpsb
popf
insb
adc
lock
add
sbb
in
dec
pop
and
adc
shrl
jecxz
fiaddl
outsb
movsb
jp
lods
sarb
dec
pop
adc
popf
push
out
add
add
jmp
sti
sub
push
jecxz
mov
xchg
mov
mov
inc
inc
int3
cmp
jle
cmp
pushf
shlb
sub
iret
aad
sahf
aas
or
je
lcall
imul
jae
bound
xchg
xchg
xchg
add
add
or
dec
push
dec
fwait
sub
fscale
jl
or
shl
mov
dec
arpl
cld
mov
or
push
dec
xor
and
jmp
xchg
mov
movsl
bound
add
lcall
lcall
xor
outsl
jno
adc
out
push
daa
add
add
adc
jno
sub
mov
pop
pop
jg
jle
jle
mov
mov
insb
xor
adc
lea
push
lret
jmp
dec
cld
cmc
or
fadds
leave
jae
sub
cmc
data16
xchg
xor
popf
leave
and
add
add
xchg
rcl
stc
and
ss
and
dec
out
faddl
test
adc
int
pop
pop
mov
dec
and
xchg
add
cmp
pop
ds
sub
xchg
mov
jg
ficomps
mov
push
ja
int3
int3
int3
int3
int3
push
or
sti
mov
pop
dec
lahf
mulb
mov
sub
or
das
repz
es
and
sbb
add
outsb
or
popf
les
jl
popf
dec
aam
sub
daa
xchg
jnp
add
add
cli
sbb
cmp
sahf
lret
jle
das
push
icebp
cmpl
aas
xchg
push
leave
push
sbb
pop
adc
out
call
add
add
push
icebp
mov
es
mulb
adc
idiv
fdivs
je
or
add
push
or
imul
rcr
lahf
push
xchg
pushf
sbb
mov
in
inc
push
int
add
push
add
mov
adc
mov
mov
mov
add
scas
mov
cmp
mov
mov
cltd
enter
sbb
add
dec
adc
jb
inc
aas
jb
sti
movsb
xor
pushf
mov
jmp
dec
jecxz
jo
je
jl
xchg
mov
int3
orl
into
lods
xchg
push
test
mov
out
iret
cmp
adc
add
add
int3
jl
dec
jae
xchg
xor
rclb
iret
or
mov
dec
pop
adc
pop
add
mov
sub
push
or
mov
mov
xchg
lock
fstp
jne
inc
ret
lock
test
add
fwait
push
mov
pop
mov
cwtl
test
sub
das
stos
xchg
xor
mov
add
js
xchg
orl
pusha
mov
icebp
insb
test
mov
leave
sbbl
jle
pusha
scas
dec
jmp
sbb
pop
jle
jo
rcl
and
jne
ds
add
add
mov
cmp
imul
xor
jmp
sbb
or
out
pop
add
lods
ret
jo,pn
mov
addl
mov
jl
mov
xor
push
inc
addl
add
sub
add
stos
ljmp
jp
push
push
inc
bts
pop
jg
jae
lcall
push
jb
dec
mov
xchg
addr16
popf
sub
sub
fcmovu
jns
push
lret
pop
mov
rcrb
enter
and
push
pop
insb
mov
lret
fs
fildl
loop
add
add
test
xchg
sub
sub
push
cmpsb
insl
ret
icebp
loopne
lret
or
mov
inc
mov
jp
std
push
ud2
xor
mov
mov
inc
xlat
ss
xchg
add
push
ss
adc
push
mov
xchg
inc
jo
dec
pop
xor
add
in
xchg
test
sbb
imul
sti
fs
addr16
pushf
and
push
lock
addr16
shrb
jmp
ss
ja
lock
push
add
loope
add
mov
inc
xor
push
testb
add
adc
call
mov
ljmp
jmp
and
int3
int3
mov
or
inc
daa
inc
cmpsb
out
fcoml
jg
fnstsw
mov
xor
std
int
repz
icebp
or
mov
add
iret
mov
xchg
mov
rcl
pusha
aam
icebp
sub
int
or
nop
mov
xchg
xor
sbb
add
add
inc
xchg
rcrl
xor
dec
bnd
cltd
ret
pop
rcrb
pop
cwtl
loop
mov
xadd
mov
jge
je
inc
insb
je
mov
cmpsb
adc
add
add
pop
int3
cmp
add
out
not
mov
push
aad
mov
cltd
mov
add
add
adc
jge
hlt
cli
stc
jo
cs
stos
jmp
add
xchg
mov
jge
fbld
adc
jp
xchg
xor
test
add
ss
nop
aad
jo
and
dec
cltd
adc
inc
notb
add
add
xor
xor
xor
icebp
icebp
out
push
mov
and
addr16
test
fdivrp
dec
jnp
add
xchg
adc
push
lret
addr16
mov
mov
lock
inc
sbb
dec
test
mov
lock
sbb
inc
xchg
cltd
movsb
scas
imul
add
pop
xor
cmp
xor
stos
fwait
pop
ja
daa
fdiv
cmp
ret
push
in
shl
mov
test
jbe
shlb
fbstp
sbb
subl
stc
add
mov
inc
sbb
dec
cmpsl
jns
mov
aad
mov
add
jge
fadds
fistps
push
lock
add
xchg
cmp
sar
sar
push
adc
or
ja
imul
shlb
in
xor
and
jg
push
aas
xchg
mov
mov
enter
pop
push
and
add
add
shrl
outsb
mov
mov
lods
mov
adc
pop
mov
out
loop
push
int3
int3
int3
int3
inc
popa
push
xchg
and
lret
push
mov
add
mov
push
pushf
ja
pop
pop
jp
xchg
stos
mov
pop
testb
fistps
rcrl
shrl
push
jge
outsb
fbld
and
mov
inc
sti
in
lea
mov
insl
or
add
xor
add
add
push
mov
inc
clc
push
push
jg
stos
xchg
int
mov
pusha
sub
xchg
mov
ret
cmp
xchg
fsubs
and
out
cmove
dec
repnz
add
or
jg
lahf
outsl
leave
sbb
testb
js
outsl
fwait
in
jle
sub
mov
mov
sub
cwtl
cmp
js
daa
inc
dec
jns
inc
push
mov
mov
sub
imul
out
nop
mov
jle
mov
jmp
imull
mov
add
add
sub
dec
ljmp
push
jo
ja
ss
mov
or
pop
mov
push
les
cmp
add
add
pop
and
inc
and
pop
dec
rcrl
jge
adc
xor
cmpsl
jbe
into
in
shll
cmpsl
jae
adc
xchg
jg
xchg
dec
and
mov
add
adc
pop
shlb
xchg
cmp
add
lret
aad
jl
xor
mov
jecxz
scas
mov
push
push
dec
push
or
mov
mov
out
and
lods
xchg
lcall
pusha
loopne
mov
inc
std
dec
test
add
xchg
and
test
adc
add
add
pop
mov
dec
inc
flds
jecxz
loop
mov
lret
adc
enter
and
mov
xchg
fmuls
pushf
mov
pop
repz
add
mov
mov
aad
xor
mov
lahf
xor
jo
movsb
fsubl
das
add
add
jp
jecxz,pn
test
inc
mov
out
sti
daa
and
sbb
jmp
jg
push
cs
fldt
pop
jecxz
or
and
add
pop
xchg
and
js
mov
fldcw
add
add
lcall
lds
and
ja
es
jge
stc
mull
inc
ss
inc
add
inc
fucomip
pop
imul
lods
pop
cmp
push
int
mov
mov
repz
inc
add
mov
jl
stc
mov
movsl
mov
push
fildl
pusha
xlat
sahf
cmp
add
add
ds
jnp
mov
push
in
inc
mov
leave
xor
rclb
and
sbb
cli
push
gs
repz
imul
int3
ljmp
or
jg
imul
push
pop
sbb
xor
xchg
sub
mov
es
add
add
jmp
dec
daa
addr16
je
mov
shlb
xchg
ds
xchg
pop
jl
insb
outsl
mov
test
and
insl
pop
leave
loop
loopne
call
test
dec
xchg
sub
call
aam
mov
cmp
xorb
or
mov
push
jge
imul
lds
popf
hlt
or
xor
and
insl
fldl
add
add
pop
pop
cmc
shl
subl
sub
pop
dec
xchg
fistps
mov
add
imul
fwait
lret
outsl
jmp
imul
scas
sbb
mov
sub
xorps
mov
adc
push
push
orb
dec
fcomp
les
in
mov
push
inc
mov
popa
add
addb
add
sbb
gs
bound
test
test
loope
sub
xor
jbe
xchg
test
rcrl
mov
push
sahf
add
lds
into
lock
mov
add
add
loop
cmp
mov
inc
inc
pop
cli
and
dec
mov
push
fistpll
jp
insl
imul
add
add
xchg
stc
push
shl
inc
negl
stos
or
pop
pop
push
leave
inc
loopne
jle
dec
sub
stos
outsb
cmp
mov
and
rolb
adc
dec
xlat
cmp
or
jmp
test
mov
xlat
paddsw
add
orl
push
add
add
cmp
cmpsb
push
ja
jae
pop
mov
test
mov
cmp
jmp
push
xchg
xor
mov
adc
adc
sub
xchg
loopne
ja
nop
sub
sbb
das
mov
rcrl
xor
push
ret
pusha
repz
hlt
inc
test
outsl
push
or
jae
cmc
cmpsb
jge
jg
sbb
mulb
xor
loope
add
xchg
out
call
gs
in
pop
push
jb
mov
es
sbb
enter
pop
stc
stos
inc
cmp
mov
xchg
int
dec
dec
mov
fidivl
add
ret
enter
xor
inc
je
add
inc
dec
popf
pop
pop
arpl
stos
mov
xor
xchg
rcrl
add
mov
bound
std
sub
jl
xor
pop
prefetchnta
mov
cmp
fiaddl
add
add
dec
je
push
jbe
cltd
stos
xchg
pushf
push
pop
mov
out
cmpsl
stos
adc
in
or
ljmp
pop
sbb
ja
push
sahf
mov
sbb
fwait
jbe
int
mov
sbb
cmova
lret
stc
arpl
pop
xchg
mov
push
lock
inc
enter
popa
das
xchg
jle
mull
add
mov
or
jmp
xchg
adc
adc
fdivrs
out
ret
nop
jecxz
popf
out
sbb
pop
out
xor
jg
cmc
rol
call
fldlg2
jg
cld
test
push
cmpsb
imul
mov
sub
cs
sub
in
adc
inc
mov
add
add
insb
in
cwtl
mov
jb
sbb
andb
or
jge
ret
test
mov
pop
cli
and
lcall
pop
inc
xchg
fwait
add
add
dec
into
mov
les
lret
inc
stos
inc
pop
data16
xor
daa
jae,pn
xor
mov
mov
stos
cmp
roll
adc
cmp
nop
jecxz
sbb
std
repz
out
mov
outsl
push
inc
jae
jecxz
jle
xchg
mov
pusha
outsb
add
add
mov
mov
dec
and
fisubl
pop
push
fisttps
add
add
adc
in
or
fwait
jns
or
jmp
int3
loop
ds
xchg
sub
bound
mov
roll
scas
push
jle
les
mov
outsl
hlt
imul
pushf
clc
push
mov
data16
das
adc
pushl
add
jmp
add
mov
xorb
shrl
and
rcll
nop
shrl
mov
pushf
call
mov
movsl
or
pop
xchg
outsl
cmpsb
mov
cwtl
add
andb
cli
loopne
dec
stc
jns
pop
jg
cmp
add
jns
pop
adc
mov
cmp
fstp
push
div
fcomps
add
add
loopne
insb
fbstp
sub
pop
cmp
dec
mov
push
adcb
inc
lcall
mov
xchg
ljmp
pop
jecxz
sbb
dec
inc
int
repnz
scas
add
add
mov
cmpsb
cmp
dec
or
loop
jo
mov
cwtl
addr16
push
push
and
mov
inc
inc
mov
mov
xchg
add
add
adcl
test
int3
ss
lahf
loop
and
ret
add
add
sbb
xchg
jmp
fldt
xor
faddl
sbb
push
test
pop
movsb
adc
sbb
add
jge
in
dec
std
jmp
dec
inc
imul
mov
add
ss
inc
pushf
fimull
dec
mov
inc
cmp
setbe
test
sub
pop
mov
mov
roll
test
out
ss
mov
cmpsl
outsl
jp
enter
leave
jno
jb
add
mov
add
add
jp
sbb
das
int
push
in
sbb
jne
stc
add
add
add
sbb
push
inc
pop
pop
jp
pop
mov
inc
mov
mov
cmpb
mov
ljmp
das
lds
mov
popa
lock
xchg
sbb
repz
sub
mov
add
add
sbbl
inc
icebp
sbb
mov
jmp
in
dec
sub
add
cmpsl
push
int3
popa
or
lea
das
lds
decb
shlb
mov
push
pop
sbb
sarb
ret
jmp
push
popa
mov
inc
imul
add
lret
clc
stos
test
cmpsl
loope
fcoml
cwtl
ret
cmp
shlb
add
sbb
push
mov
mov
aad
mov
popa
outsb
dec
out
jae
or
or
lcall
push
push
fldenv
xchg
adc
add
out
cmp
int3
int3
int3
test
inc
lahf
pop
outsl
cmc
inc
nop
data16
sub
loope
add
add
xchg
decb
inc
cmp
xor
mov
dec
xor
push
data16
push
cmp
add
fcomps
fisubs
stos
test
bound
inc
sub
mov
in
outsl
dec
mov
repz
xchg
mov
push
aam
add
lcall
arpl
paddd
jne
pop
add
add
in
mov
xor
xchg
xchg
mov
test
xor
cltd
or
jbe
les
mov
stos
popf
in
sub
mov
sbb
xchg
divb
and
xchg
push
mov
cmp
push
lcall
add
cmp
lds
test
dec
icebp
add
add
pop
sub
scas
push
enter
fnstcw
add
adc
in
xchg
jb
xlat
fstpt
fcom
insl
sbb
jo
inc
and
into
jne
and
scas
rorl
fs
aad
imul
cld
out
cmp
fs
and
add
add
shlb
pop
jl
sub
push
das
idivl
or
and
pop
mov
aaa
xor
and
outsl
ds
pop
mov
lret
sarl
adc
mov
mov
and
loopne
in
stos
jae
push
imul
add
add
aas
aaa
push
int3
int
jle
pusha
dec
imul
lods
repnz
and
ds
lret
arpl
add
imul
cmp
mov
es
mov
orl
out
aad
fistpl
inc
insb
test
add
add
ret
push
pop
cwtl
dec
push
xor
push
add
mov
push
shll
inc
call
push
push
jns
or
or
loop
aas
xchg
push
or
mov
ret
gs
mov
rol
sub
adc
sahf
and
xchg
xor
add
add
cmpsb
orl
call
out
adc
inc
pop
jns
or
and
add
jae
mov
adc
aas
adc
push
pop
xchg
loopne
mov
and
push
add
add
push
fbld
xchg
sbb
sbb
inc
aas
nop
mov
jne
sub
add
xchg
adc
inc
repz
mov
adc
cmp
out
push
xlat
xlat
mov
std
pop
jns
and
or
adc
adc
push
push
add
adc
mov
jbe
sub
in
in
cli
inc
inc
xchg
xor
pushf
out
int3
int3
int3
int3
cmp
dec
mov
dec
testb
movsb
scas
pop
mov
add
push
jp
add
add
push
js
dec
add
hlt
fisttpl
pop
xchg
and
mov
cld
push
lock
popf
psadbw
push
mov
inc
ret
sbb
mov
shll
mov
add
mov
fstps
dec
sub
divl
sbb
arpl
xor
or
add
sbbl
adc
mov
bts
les
aaa
jbe
loopne
dec
sbb
in
repz
cmpl
aam
mov
push
jnp
sahf
xchg
inc
pushf
add
ja
jmp
and
mov
add
xchg
lea
out
out
push
sub
cld
cmc
mov
dec
sti
push
xchg
out
pop
mov
fisubl
add
inc
mov
mov
jle
and
rcrb
inc
gs
imul
sbb
int3
int3
int3
xchg
cwtl
lret
int
mov
test
push
and
and
test
aaa
inc
test
orb
testl
aaa
adc
or
aam
andl
fs
jge
push
mov
sarl
mov
dec
xlat
enter
es
ds
icebp
adc
insl
repz
add
inc
mov
push
mov
pop
inc
sar
fwait
sahf
push
jmp
add
add
outsl
idivl
imul
lock
or
or
xchg
add
cli
adc
movsl
sbb
inc
bound
pop
pop
jb
jo
sbb
cmp
test
loope
and
and
add
add
lock
jnp
and
cmp
jb
addr16
mov
adc
inc
les
fwait
idivb
cmp
mov
inc
mov
mov
mov
test
jb
adc
cmpsl
add
sarb
or
cmp
pop
hlt
inc
aaa
jns
add
add
out
aam
bound
mov
pop
icebp
aad
sub
add
add
scas
push
adc
push
call
sbb
movsb
sahf
loope
xchg
adc
or
movsl
jae
fsubl
movsl
and
pop
xchg
das
add
add
insl
inc
scas
mov
fldl
fistpl
xor
test
add
add
inc
jl
add
dec
mov
cmp
aas
sahf
sub
push
inc
loopne
adc
mov
das
add
jge
add
les
lods
mov
push
push
inc
cmpsb
xor
mov
push
cmp
add
das
lods
lret
test
push
add
add
js
xchg
mov
mull
pushf
xchg
stos
mov
mov
mov
push
aam
mov
jp
ret
cmc
je
sarb
dec
xchg
pop
jl
sub
xchg
jg
add
xchg
sub
ret
jg
add
repnz
pop
sbb
icebp
scas
xor
cli
sub
cs
pop
or
stos
in
pop
add
add
and
mov
lds
add
popf
adc
pop
roll
adc
clc
jbe
sbb
les
add
lret
mov
test
xlat
inc
addb
loope
je
mov
add
loope
xor
mov
aam
sub
pop
out
inc
sub
sbbl
repnz
ret
sub
cmp
data16
int3
int3
ljmp
pop
cmpsl
inc
inc
mov
jb
in
enter
inc
pop
lods
ret
cltd
clc
int3
andl
enter
out
dec
add
add
outsb
mov
cltd
in
neg
pop
mov
inc
mov
pushf
mov
xchg
add
push
cwtl
lahf
sbb
mov
cmpsb
dec
xor
pop
xchg
xchg
or
add
add
and
push
aaa
pop
jmp
mov
dec
stos
jp
mov
xchg
inc
push
xor
test
xchg
rcrb
aas
inc
mov
bound
adc
fcmovnu
cmpb
cs
mov
push
int3
fstpl
jns
insl
sub
cli
ret
xchg
mov
add
cmp
add
add
dec
in
pop
sahf
mov
imul
pop
jle,pt
adc
mov
imul
mov
test
sub
inc
sub
jno
out
rcll
lds
add
pop
inc
add
mov
push
push
leave
inc
xchg
je
popf
and
imul
xor
pop
negb
add
add
cmp
ja
push
and
enter
stc
dec
popa
mull
mov
call
add
add
xchg
dec
mov
xchg
cli
jmp
add
mov
loope
lock
jae
adc
loopne
mov
loop
dec
scas
mov
add
jae
int3
ds
pop
mov
sub
add
daa
and
es
shrb
dec
pop
push
xor
mov
jo
jg
testl
and
pop
cmp
lret
rcrl
mov
or
add
push
pop
icebp
imul
shl
mov
xor
push
add
aad
xor
movsl
xchg
popa
lret
add
add
inc
das
sti
test
pop
lods
sub
outsl
and
je
icebp
xor
add
rcrb
mov
adc
loopne
pop
xchg
mov
addl
loopne
dec
inc
stc
cmp
iret
and
movsb
popf
or
adc
hlt
shlb
xorl
outsb
sub
gs
jno
divb
inc
mov
int3
int3
int3
scas
lock
insl
sub
dec
cmp
mov
fildl
add
jecxz
sub
and
arpl
mov
xor
scas
add
add
clc
ret
rorl
lea
push
iret
mov
sbb
das
and
inc
lret
aad
jno
cmpsb
lods
sti
out
dec
jecxz
fcomi
jb
xchg
adc
add
sbb
add
iret
mov
sbb
hlt
imul
cmp
or
mov
adc
int
nop
shlb
pop
out
cld
jno
add
add
xorb
and
lock
mov
rcr
jp
xor
ret
data16
mov
clc
mov
sahf
xchg
jnp
insb
aaa
adc
mov
pop
inc
stos
in
aaa
cwtl
mov
jecxz
sbb
jno
das
inc
stos
notl
faddl
dec
mov
xor
mov
pop
pop
mov
insb
pop
fildl
leave
enter
inc
les
aam
xor
aad
pop
imul
addr16
mov
xor
mov
int
cs
inc
roll
leave
mov
pop
and
mov
cmp
mov
cli
popf
mov
xchg
loop
pusha
rcr
addr16
cld
insl
inc
push
mov
hlt
inc
rclb
add
add
add
adc
jecxz
xor
cmpsl
fwait
jl
inc
cmp
cmp
sahf
inc
or
rclb
popf
pop
dec
std
add
add
dec
mov
xor
push
fwait
or
and
pop
ficoms
and
pop
mov
mov
push
cmp
cmpb
push
add
add
jns
loopne
cmp
sub
inc
cmp
push
lahf
mov
inc
ss
add
add
fimull
movntq
xchg
add
add
sahf
add
les
mov
dec
imul
pop
rclb
popf
add
mov
cld
add
ja
xor
movsl
lret
add
sub
sahf
and
pop
test
jmp
in
mov
imul
add
mov
add
add
add
sub
pop
testl
add
adc
jb
aad
jle
inc
mov
pop
mov
push
lahf
sbb
aaa
and
xchg
xchg
insb
iret
or
add
addb
inc
add
push
in
icebp
clc
js
or
sahf
pushf
inc
xlat
fcomip
and
xchg
dec
xchg
inc
mov
enter
rcrl
push
inc
in
ljmp
popf
push
xchg
mov
cmp
inc
into
adc
imul
int
push
jge
sahf
xor
int3
int3
out
sub
into
or
fldz
shrb
xor
and
fs
jl
sbb
jecxz,pt
mov
xchg
fidivs
adc
jno
out
fmull
pop
dec
sbb
dec
inc
mov
sahf
ds
lods
rolb
add
add
pop
icebp
inc
and
push
and
cwtl
jnp
scas
sti
cmp
cmp
lcall
repnz
out
xchg
ljmp
pop
ss
inc
loope
movl
jp
out
mov
xchg
and
sbbl
add
add
ss
adc
shr
mov
xchg
mov
sbb
jg
dec
push
xchg
add
add
pop
xchg
mov
mov
or
lcall
add
jmp
sub
pop
data16
ds
dec
cmp
rolb
outsl
sarb
lahf
ror
dec
fimull
loopne
in
xor
popa
shlb
mov
call
add
add
subb
cmp
call
femms
fsts
imul
mov
call
aam
fldenv
loop
mov
push
xchg
out
push
mov
outsb
inc
or
cld
add
stc
insb
push
aas
aas
lret
dec
jle
add
add
cli
xchg
scas
jl
icebp
inc
sahf
fsubrs
in
popa
and
cmc
ljmp
push
aaa
inc
or
outsl
inc
enter
hlt
rclb
jb
sahf
inc
push
xor
xchg
jg
fiadds
mov
push
cmp
lcall
xor
xchg
adc
mov
push
or
sbbl
mov
insl
add
add
add
rcll
jae
mov
and
dec
out
mov
cmp
xor
aad
ja
and
xchg
xlat
aam
dec
mov
dec
rcl
leave
jle
das
jp
pushf
negb
and
mov
sbb
insb
pop
hlt
frstor
push
gs
mov
add
add
push
ss
and
add
ret
pop
lds
push
pcmpgtw
sar
iret
add
popa
mov
mov
or
adc
fucomi
and
inc
mov
add
add
and
xchg
jae
rcl
cmovp
js
js
sub
add
fnsave
outsl
outsb
pop
dec
pop
repz
adc
int3
int3
int3
mov
adc
sub
out
pop
xchg
aam
dec
sbb
add
add
mov
pop
sub
or
mov
push
movsb
mov
push
pop
jns
mov
loop
fstl
jl
xchg
xchg
stc
js
mov
movsw
add
aas
outsb
in
push
mov
adc
jp
mov
dec
sar
push
mov
insl
dec
scas
dec
sahf
cmc
or
aam
data16
dec
sbb
pop
pusha
in
lock
mov
lds
sub
mov
push
adc
mov
stos
mov
popf
dec
add
add
add
sbb
mov
pop
sub
hlt
jne
out
cltd
or
shrb
leave
notl
into
inc
lea
xor
fsub
lcall
add
add
dec
push
orb
cs
pop
iret
sub
xchg
inc
sub
cmp
cmc
out
pop
inc
push
or
out
push
arpl
inc
iret
pop
inc
sub
inc
out
xchg
popf
xchg
push
lock
add
xor
mov
test
fisttps
adcl
mov
addb
xchg
sar
push
inc
cli
xor
cmp
or
sub
dec
mov
nop
lcall
push
insl
out
pop
push
stos
push
pop
out
pop
movsb
adc
sub
ja
jecxz
enter
daa
jecxz
repz
sbb
push
lods
mov
mov
lcall
add
arpl
adc
dec
into
rorb
dec
pop
or
mov
push
movsl
loope
and
inc
loop
xlat
out
inc
push
adc
gs
fwait
mov
outsb
lret
mov
fistps
sub
and
add
add
add
xor
or
and
push
or
xchg
arpl
data16
call
sbb
and
test
and
dec
shl
icebp
aad
sti
loop
cmp
cli
sbb
inc
cmp
arpl
inc
or
enter
jl
sbb
push
fnsave
pop
imul
lea
js
jno
pop
dec
adc
or
scas
jl
jle
pop
xor
inc
in
inc
roll
stc
sub
insb
xor
mov
sub
sbb
int3
push
call
out
jae
jmp
addr16
jl
xor
add
loopne
jne
mov
aaa
mov
mov
loope
mov
sti
or
popf
and
mov
loop
loop,pt
pop
pushf
push
sbb
add
add
loope
xchg
jae
movsl
inc
imul
shll
push
push
push
cs
inc
in
pop
roll
jmp
sar
scas
aaa
push
in
sbb
mov
iret
aam
ljmp
dec
lods
sbb
jg
in
jg
mov
pop
repz
mov
incb
add
stos
jns
xor
mov
mov
dec
mov
fcmovbe
xor
adc
cmp
jno
push
clc
stos
fnstsw
push
jnp
mov
shrl
xchg
out
roll
cmpb
dec
js
pusha
out
inc
cmp
fs
addl
jns
loopne
loop
or
mov
or
push
xchg
ljmp
fstpl
int3
pop
cmp
sarl
int3
int3
int3
int3
int3
xchg
adc
test
jl
add
or
gs
or
jp
stc
gs
cmp
rolb
mov
push
orl
push
cwtl
jg
jno
mov
mov
and
xchg
xchg
and
dec
js
shl
pop
ret
sahf
idivb
add
add
testb
inc
rol
mov
add
in
les
add
sbb
popf
jo
fcmovnb
push
xor
add
or
rclb
shlb
xchg
dec
sbb
push
add
inc
leave
sub
add
add
inc
imul
mov
sahf
js
mov
mov
into
shl
fsubl
lods
lret
movsl
int3
push
test
mov
orb
in
inc
mov
faddl
test
adc
cmpsb
push
add
add
add
out
push
mov
cmp
loop
rolb
mov
xchg
adcb
jb
mov
imul
int
sub
stc
jbe
push
push
loope
rclb
cmp
cwtl
fsubrl
xchg
into
and
icebp
cld
push
mov
add
add
mov
std
mov
movsl
dec
sbb
addr16
jecxz
sub
mov
outsb
dec
mov
or
dec
lcall
ds
xor
mov
xchg
jno
sub
add
add
sbb
sbb
mov
int
or
xor
pusha
ss
loopne
sub
cmovge
mov
es
push
cmp
sbb
sub
mov
cwtl
mov
ret
hlt
adc
shlb
andb
jns
dec
adc
add
test
ss
in
and
jecxz
out
jo
push
test
lods
imul
add
enter
pop
lea
add
mov
adc
jmp
lock
cmc
sub
add
out
in
sub
or
js
icebp
addr16
push
pop
mov
add
add
xchg
xchg
pop
jo
jecxz
das
and
outsl
test
ret
xor
and
push
dec
mov
or
sbb
add
add
inc
icebp
push
stc
jecxz
orb
adc
pusha
in
in
and
pop
xor
cmpsb
push
stos
popa
lahf
inc
push
or
repnz
add
add
cld
inc
push
jle
scas
xor
insl
jmp
movsb
jno
xor
sldt
mov
divl
fstpt
enter
lds
test
push
push
inc
mov
add
add
aaa
and
push
mov
outsb
lock
out
xor
mov
add
out
dec
out
fdivrl
mov
xchg
stos
test
jnp
icebp
stos
mov
jns
jns
mov
cmp
into
int3
popf
xchg
mov
pop
adc
addr16
in
mov
jg
xor
rclb
jne
iret
lret
out
adc
and
add
add
mov
pop
call
push
jnp
sbb
loope
incl
out
leave
fsubs
sbb
sti
scas
icebp
and
int3
aaa
std
xor
divl
mov
jmp
add
out
xlat
push
jne
sbb
mov
std
lret
repz
sbb
pop
test
mov
repz
loop
inc
jno
dec
mov
add
add
mov
mov
aam
adcl
mov
jecxz
lds
mov
lcall
or
outsl
dec
jp
jo
mov
add
pop
mov
daa
cmp
and
xchg
sub
pop
pushl
dec
into
pop
pop
xlat
ds
mov
popa
lcall
xor
push
and
jecxz
outsl
lret
pop
loop
add
add
sub
sub
push
dec
cmp
ljmp
jl
push
out
testl
daa
push
mov
cmpsb
or
sarb
xchg
lea
pop
dec
jmp
and
xchg
outsl
aad
popf
cwtl
scas
cli
pop
adc
add
cli
dec
ljmp
mov
or
int3
int3
int3
int3
mov
jb
lea
ret
sub
mov
cmp
mov
xchg
mov
pusha
hlt
fisubrl
fwait
add
add
or
icebp
pop
dec
add
xor
sarb
xchg
mov
loopne
and
and
stos
cli
sub
jmp
add
and
jle
add
cltd
sbb
movsl
jmp
mov
mov
inc
fcomp
xchg
fs
insl
inc
mov
insb
ds
in
popf
pop
ret
add
add
or
subl
and
outsb
test
aaa
inc
push
rcr
mov
mov
push
add
or
aad
mov
test
data16
mov
push
or
jno
in
push
aaa
mov
or
jae
pushf
cmpsb
in
into
out
mov
pop
mov
mov
ret
add
add
add
shrl
cli
dec
inc
xchg
xor
int3
hlt
call
stc
sub
xchg
sar
jg
aas
loop
push
pop
pop
out
test
data16
repnz
test
mov
inc
call
outsl
sbb
push
fwait
ljmp
cmpsb
enter
and
xchg
shrl
lock
mov
jno
mov
add
out
push
push
lret
jo
lcall
lock
xchg
add
add
adc
jo
sbb
cmp
jle
pop
mov
dec
pop
push
sbb
inc
sub
idivl
or
les
inc
dec
sub
jge
push
mov
cs
push
js
and
aad
les
incl
xchg
adc
xor
mov
and
mov
ret
push
sahf
cmpsb
adc
jge
push
ljmp
in
loope
push
rcl
fistpll
clc
adcl
add
add
das
jne
mov
lcall
pop
sbb
jnp
and
jns
or
push
negb
jb
insb
lds
std
jp
adc
add
add
fsin
pop
incl
dec
inc
enter
loopne
sti
push
cmpsl
xor
inc
out
mov
imul
dec
je
sahf
out
cmp
pop
pop
pop
add
add
pop
fwait
push
or
test
push
add
es
and
aaa
xchg
push
scas
dec
mov
inc
out
enter
sub
inc
add
add
xchg
out
mov
movsb
mov
and
inc
jnp
loopne
jns
mov
mov
jb
insl
js
jb
arpl
sub
jl,pn
adc
mov
mov
insl
push
xchg
and
pop
jne
test
push
dec
std
and
mov
adc
test
sub
add
add
pop
jge
int3
int3
int3
xor
into
push
xchg
nop
jns
out
popa
sbb
ds
out
inc
pop
mov
loopne
mov
in
xchg
add
add
push
fldt
mov
subl
in
out
scas
cmp
aaa
pop
scas
aaa
sub
in
mov
mov
add
cmp
xchg
xchg
xor
mov
push
add
shll
xchg
bound
shlb
sub
faddl
fisttpl
das
and
mov
lock
or
jmp
das
inc
mov
mov
inc
add
add
daa
rclb
call
in
dec
dec
aaa
imul
push
int
pop
out
pop
nop
and
rorb
mov
lds
sub
add
add
ret
sub
pushf
xchg
dec
scas
popf
mov
jno
test
add
push
push
xor
mov
lret
ret
jp
adc
pop
in
aas
mov
jno
push
nop
sbb
cli
mov
inc
ficomps
jecxz
sub
test
mov
pop
mov
inc
mov
add
std
sarb
mov
xchg
dec
sahf
aad
add
xchg
outsl
or
fsubrl
or
or
stos
or
xor
int3
int3
inc
fldt
insb
sub
add
add
xor
mov
sbbl
mov
mov
dec
mov
ret
xor
pop
add
push
in
mov
lret
pushf
sub
sub
cmp
inc
lds
mov
dec
cs
fidivs
pop
dec
repnz
addr16
jecxz
leave
pop
sahf
add
add
insw
dec
sub
dec
push
push
push
mull
lds
inc
inc
cmp
mov
jmp
lods
push
pop
sbb
xlat
and
aas
das
pushf
repz
sbbl
mov
loopne
sub
or
sbb
jmp
stc
add
add
mov
outsl
inc
pop
add
leave
stos
cmpsb
test
out
stc
scas
xchg
popf
sub
fistps
insb
lret
add
les
push
add
sub
cwtl
cld
int3
or
jl
adc
add
and
or
add
add
dec
sub
push
fildl
push
add
fwait
or
mov
push
std
lds
in
xchg
imul
fdivp
mov
sbb
mov
push
jnp
inc
out
xchg
dec
ljmp
cmp
dec
fstl
loope
push
jecxz
adc
or
sahf
lods
xor
loop
jecxz
jl
addl
call
imul
lods
xor
mov
xor
stc
jo
leave
aad
nop
sbb
cld
fnsave
icebp
push
add
add
xor
lods
ljmp
fisttpll
adc
and
les
pushf
pop
mov
fs
xchg
xchg
aad
stos
add
and
mov
cmc
in
stc
in
movsl
adc
or
les
add
lahf
gs
or
adc
add
add
je
pusha
jecxz
or
sub
mov
lea
add
inc
fs
inc
flds
mov
adc
mov
add
add
push
aas
insl
jae
xorl
inc
movntq
out
mov
add
sbb
dec
cmp
pop
or
aam
inc
in
les
testl
imul
sub
loopne
xorb
pop
inc
jnp
dec
dec
inc
mov
inc
insb
bound
mov
mov
insl
jecxz
dec
mov
and
lea
mov
mov
jle
cwtl
add
mov
mov
aam
push
or
pop
adc
loopne
int3
int3
cmpsb
mov
add
inc
data16
mov
loop
cmpsb
jmp
les
movsl
and
pop
imul
das
push
jge
ficoms
out
mov
cmp
mov
dec
cmp
pushw
cwtl
mov
notb
daa
adc
jge
mov
dec
or
add
xchg
pop
adc
test
jl
divl
mov
out
stc
out
push
popa
push
or
xchg
jae
mov
enter
std
jmp
add
add
pop
cmp
pop
cmpsl
or
loope
sahf
fbstp
push
sub
push
xchg
repnz
lods
je
and
sub
adc
xchg
popl
jge
cltd
inc
mov
mov
xchg
mov
adc
mov
push
jmp
jnp
test
lea
lret
stc
fsts
xlat
adc
xchg
dec
lret
add
add
jbe,pt
mov
stos
adc
decl
push
jb
mov
xchg
xchg
cmp
iret
in
mov
add
adc
jg
lahf
fwait
into
mov
lahf
push
sbb
lret
icebp
and
ljmp
dec
shlb
lds
add
add
mov
mov
mov
int3
int3
int3
jle
js
push
sub
imul
add
mov
pop
test
pop
dec
aaa
gs
inc
mov
add
add
xchg
push
and
dec
jb
vcvtsd2ss
cmp
inc
sti
xchg
sub
sbb
adc
jnp
call
or
loopne
fwait
inc
jno
jl
cmp
stos
loope
add
addr16
and
add
pop
pop
mov
repnz
jle
jecxz
flds
filds
add
add
rorb
jecxz
xchg
and
adc
sub
loopne
out
xor
ret
scas
xor
adc
fisttpl
xchg
ja
and
jp
mov
insl
pop
in
add
add
pop
fwait
outsb
into
jge
arpl
pop
dec
xorl
fs
in
pusha
out
lret
outsb
into
stc
mov
dec
inc
ljmp
js
xchg
cli
insl
push
frstor
sub
fs
ror
adc
dec
pop
lret
add
jo
dec
xor
addb
pop
fwait
cmp
add
fcompl
cmp
ljmp
test
adc
jb
insb
dec
or
add
add
loop
sbbb
movsb
jg
jl
lock
sub
mov
addr16
cmp
xor
jge
cmp
cmpsb
cld
js
aam
insl
out
push
pop
xchg
cmp
add
add
pop
adc
sbb
mov
test
mov
cmp
sbb
add
xlat
mov
mov
int
inc
add
add
xchg
push
adc
icebp
sub
pushf
jns
out
addl
xorb
and
in
sbb
in
in
cmp
pop
leave
or
lds
int3
xor
push
jge
jne
idivl
test
adc
div
orl
call
imul
mov
lock
mov
xlat
add
add
addr16
gs
or
jmp
sub
test
subb
jl
sahf
leave
mov
dec
fstpt
mov
fnstenv
xor
shrb
push
cs
pop
push
shll
ret
xchg
test
movsb
push
out
mov
stc
int
mov
xchg
mov
add
add
xchg
pop
lret
sub
cmp
es
aam
or
pop
add
std
mov
leave
jle
in
xchg
xchg
add
pusha
repnz
lods
orb
mov
pop
xor
xor
ss
into
push
in
mov
divb
fwait
sub
add
add
popa
or
sbb
cltd
pop
in
lock
frstor
sub
xchg
mov
cmc
pop
add
add
mov
sub
mov
shl
or
mov
test
mov
push
ja
test
jno
xchg
cmp
push
or
xchg
andl
mov
mov
sarb
out
out
xorl
jmp
fidivs
daa
frndint
mov
pop
pop
loope
or
mov
ret
lret
mov
outsl
in
inc
cmp
out
add
add
jge
jmpw
sti
jmp
and
sub
xor
dec
dec
mov
add
mov
decl
inc
adc
iret
imul
add
add
lahf
push
dec
aas
daa
pop
js
out
push
push
testl
add
lea
sbb
rorb
lahf
add
fsub
jecxz
jns
pop
push
inc
and
aam
add
push
pop
push
movsb
inc
dec
sub
add
push
aaa
sub
jno
loope
inc
popa
leave
stos
cmc
dec
lds
mov
add
add
iret
ret
or
pop
mov
adc
imul
rcrl
shll
in
movsl
mov
cmp
cli
stos
xchg
cltd
xor
addb
sub
xor
hlt
push
mov
nop
push
jge
in
loopne
mov
xchg
push
add
add
jecxz
mov
imul
scas
pop
sub
cmp
in
add
add
xchg
xlat
cli
mov
fsubp
repnz
fs
lds
enter
dec
les
cwtl
call
gs
das
pushf
cli
and
jg
sbb
add
dec
out
icebp
ret
popa
iret
jae
adc
ficoms
outsl
popf
or
lds
pop
and
ss
mov
xchg
lahf
sub
xor
mov
flds
cltd
dec
or
leave
add
and
lret
xchg
or
les
add
lret
lcall
mov
or
and
imul
aam
mov
mov
iret
mov
mov
add
pusha
xchg
fistl
mov
int
das
dec
add
add
pop
imul
cmp
imul
xchg
mov
testl
mov
in
adc
lods
sub
test
int3
int3
int3
loope
add
or
sub
push
mov
pop
cltd
jb
rcrb
mov
jns
inc
popf
fs
addl
mov
ja
cmpsl
out
not
mov
xchg
and
sbb
xchg
cltd
ret
out
xchg
add
add
das
test
cmp
rcrb
push
fstpl
imul
insl
cmp
push
push
sub
mov
and
mov
inc
pusha
out
jl
outsb
xchg
inc
ficomps
xor
icebp
or
std
fadds
imul
cmp
jne
add
add
push
xchg
push
in
push
adc
stos
shll
fs
rolb
je
pushf
faddl
sbb
popa
inc
ljmp
add
jge
xchg
ret
ljmp
or
jg
daa
aam
aaa
or
in
pop
sub
add
lret
sbbb
mov
dec
jp
out
jbe
lcall
fimull
xchg
aaa
adc
orb
add
xchg
mov
mov
lock
xlat
mov
push
and
or
mov
mov
add
mov
jo
or
xchg
mov
fdivrp
mov
xor
fldt
sbbl
mov
xchg
add
add
add
add
mov
pop
mov
ja
push
and
add
add
xchg
dec
movsb
push
xchg
movsb
loopne
push
add
sub
stos
fsub
push
int3
data16
add
hlt
jp
add
add
cld
push
sbb
dec
xor
add
test
sbb
shrl
int
mov
mov
popa
xor
aad
mov
inc
mov
daa
sub
icebp
cmp
push
leave
lcall
test
loopne
push
int3
aad
add
add
push
or
push
fimull
and
dec
mov
mov
int
lock
cmpsb
adc
push
adc
xchg
push
add
add
cmp
stos
push
mov
std
jmp
mov
call
repz
call
mov
shr
xor
add
add
dec
lret
pushl
push
ds
sub
loopne
pop
mov
lods
mov
insb
push
mov
int3
int3
int3
int3
xchg
sub
jp
and
inc
or
lea
add
and
cs
out
out
bound
mov
pop
pop
add
and
dec
imul
sbb
push
jno
jno
push
xlat
xor
icebp
mov
insb
mov
out
dec
jge
pushf
mov
outsb
add
mov
add
pop
xchg
clc
add
push
sarb
pop
mov
call
std
or
lock
sbb
mov
adc
fstpt
sbb
add
stos
inc
cld
inc
imul
fsubp
add
add
mov
adc
push
mov
pop
mov
stc
in
mov
popfw
jg
ljmp
into
ds
adc
xchg
xchg
jecxz
xchg
add
ret
stos
in
imul
std
test
mulb
sub
adc
or
ljmp
inc
insl
add
add
imul
out
dec
add
dec
imul
jns
sbb
or
inc
add
mov
mov
out
dec
lcall
mov
negb
mov
stos
push
sub
lds
movsb
lahf
pop
test
inc
lds
ja
hlt
dec
add
add
push
dec
fwait
das
pop
imul
add
iret
sub
idivb
ja
dec
enter
lret
mov
mov
ljmp
adc
or
roll
mov
js
or
adc
or
popf
adc
stos
or
pop
add
and
jo
adc
add
add
dec
pop
mov
flds
int3
int3
int3
testl
iret
add
mov
inc
xchg
push
xchg
lods
rcll
fs
mov
bound
lock
or
xlat
sbbb
inc
push
sbb
mov
sbb
pop
pop
pushf
add
add
or
jno
xchg
add
mov
xor
xorl
and
xchg
push
rol
push
push
out
enter
mov
and
sub
sti
les
add
in
in
inc
pop
scas
pop
add
add
je
xchg
rol
add
aas
fst
movsb
mov
dec
shr
cmp
push
inc
xor
ja
movsl
call
add
sub
adc
movsb
fisttpll
negl
out
add
add
pusha
test
or
lock
add
xor
imul
push
test
loopne
pop
jmp
fisubrl
mov
xor
loop
mov
aam
lcall
and
mov
ficoms
bswap
push
adc
mov
push
cmp
mov
adc
cmpsl
test
pop
testl
xor
sbb
dec
xchg
jle
mov
pop
cwtl
push
lahf
das
push
mov
mov
push
ret
mov
jns
out
adc
addr16
and
pop
shl
test
cmp
xchg
or
mov
xorb
push
sub
add
add
push
xor
insb
nop
inc
xchg
sub
mov
sahf
adc
je
adc
add
add
test
inc
mov
mov
dec
xchg
xchg
rcl
or
movsb
hlt
xlat
inc
add
add
ds
cmp
adc
sbb
clc
adc
lods
adc
in
add
seto
mov
cmp
mov
sub
mov
adc
outsl
jmp
cmpb
shl
and
dec
sub
add
add
add
lret
push
cmc
test
lret
add
add
mov
cwtl
jae
loope
stos
dec
in
les
aam
jb
pop
pop
jmp
pop
rcl
in
addr16
sub
pop
ret
xorl
not
adc
sub
and
mov
and
add
add
rorl
mov
mov
xor
xchg
ror
das
mov
sub
or
add
and
mov
pop
test
add
cmpsb
aad
xchg
fistps
repz
lahf
mov
jp
add
sub
lahf
mov
mov
adc
xchg
in
cs
int3
int3
int3
add
add
pop
jmp
icebp
fiadds
pop
xor
roll
mov
mov
sbb
cmpsb
mov
cmp
aad
out
ss
jnp
push
ljmp
sbb
jle
shlb
mov
test
add
jnp
add
add
sbb
incl
xor
lods
xor
or
loope
sub
mov
daa
xor
cltd
push
push
xor
sbb
test
push
fimuls
ret
sbb
int3
int3
int3
xchg
fwait
outsb
add
add
jno
adcb
imul
int
clc
dec
mov
or
mov
push
jo
jo
xor
gs
lea
xchg
mov
arpl
call
jecxz,pn
cmp
push
mov
pop
push
sub
rcr
enter
xchg
and
jg
popf
pushf
data16
adc
imul
mov
sub
test
pop
mov
scas
scas
xor
push
sub
push
mov
rcrl
sub
dec
cmp
sbb
xchg
mov
push
mov
out
jae
mov
push
cmp
mov
add
add
push
inc
jg
push
dec
imul
lcall
cltd
sub
clc
scas
pop
insl
inc
dec
mov
mov
adc
sub
mov
push
into
loopne
jge
add
jbe
sub
and
jl
pop
pop
adcl
cs
aaa
xchg
sub
aad
fstpl
mov
xchg
outsl
sub
mov
test
imull
lock
add
rorb
dec
dec
scas
in
out
loope
pop
scas
lret
loopne
rorb
xchg
enter
pop
inc
push
jae
negb
aaa
fwait
cli
iret
rcr
stc
mov
lods
loope
pop
fisubl
cmp
bound
add
add
or
adc
mov
fwait
mov
pop
mov
inc
dec
sarl
push
add
add
fnstcw
mov
xchg
mov
add
pop
cmp
xor
ret
scas
out
inc
dec
or
cmc
out
rcl
add
add
test
fxch
jecxz
sti
ljmp
ja
add
push
aam
mov
or
push
mov
js
inc
aam
mov
fcomps
dec
cmp
add
inc
fmull
jle
mov
rcrb
sub
sub
lods
pop
scas
imul
push
mov
pusha
outsl
icebp
rorb
push
pop
repz
leave
fstps
mov
pop
pop
dec
mov
popf
pusha
cmp
call
cmpsl
xor
pop
daa
clc
out
cli
lcall
insl
lahf
data16
inc
jne
gs
lahf
sbb
jle
mov
sub
push
and
add
adc
int3
xchg
fnstenv
mov
in
inc
fisttpl
enter
and
pop
ljmp
pop
push
jns
pop
shrl
adc
mov
pushf
sub
imul
cld
push
mov
add
cmp
mov
pop
lods
shr
addr16
pop
add
pop
xor
and
sub
mov
lock
dec
jmp
insl
nop
sbb
jnp
pop
aad
movb
je
mov
repz
add
add
cmp
jb
push
andb
jle
sbb
xchg
into
mov
add
outsb
fmull
outsl
pop
push
or
je
pop
jp
pop
mov
in
repnz
dec
adc
enter
mov
stos
inc
xchg
pop
push
ja
xor
inc
jns
rclb
in
in
sub
mov
add
add
cltd
lret
mov
xlat
push
mov
sub
xor
rep
mov
mov
into
jl
aad
mov
adc
inc
mov
add
add
push
sarl
cld
dec
add
cmp
push
cmp
adc
push
inc
mov
test
jle
jecxz
mov
add
mov
pop
pop
or
ret
jmp
mov
cltd
push
push
int3
mov
jb
add
add
dec
loopne
xchg
push
mov
orb
xchg
imul
je
sbb
mov
cmp
jmp
xor
int3
int3
int3
int3
int3
mov
pop
fmull
jb
jp
loopne
mov
mov
inc
or
lret
cmp
mov
add
enter
mov
pop
cs
lods
or
inc
icebp
into
mov
lea
mov
add
add
ror
ljmp
jbe
out
popf
xchg
inc
fld
cmp
pop
std
pop
sub
push
or
xor
add
add
or
ret
jbe
push
loop
pop
mov
or
pop
or
mov
lds
popf
fnsave
cmpsl
out
out
in
mov
mov
sti
loop
and
lock
ficoms
xor
stos
movsl
mov
add
add
push
mov
call
and
pop
or
sysexit
mov
aad
mov
push
jmp
scas
test
or
sbb
add
loopne
es
outsl
inc
xor
lahf
testb
outsl
mov
add
mov
xchg
dec
clc
addl
pushf
mov
push
and
fidivrl
adc
mov
dec
pop
xor
xchg
inc
push
cs
sub
dec
cmp
int3
adc
jmp
fdivs
lea
xorb
add
imull
jg
cmp
inc
out
cmp
or
std
xor
or
pusha
imul
testl
and
fnstsw
push
push
stos
clc
push
xchg
lret
stos
inc
leave
add
add
ljmp
into
mov
inc
pop
cmp
push
jp
ficoms
xchg
movsb
xor
add
add
jl
aaa
outsl
cmp
and
icebp
leave
call
outsb
jo
dec
in
add
ret
dec
cmp
out
and
add
xlat
inc
or
test
sub
mov
add
imul
aas
cmpl
add
xor
ja
lcall
jne
and
push
shrb
data16
and
movsl
pop
ss
push
lret
inc
int
xor
sub
cli
jmp
mov
mov
push
int3
int3
and
jmp
sbb
rorl
daa
nop
mov
mov
push
dec
sub
mov
and
mov
dec
cld
pop
mov
inc
adc
jmp
jnp
cmpsb
out
dec
xor
jns
les
mov
mov
adc
ljmp
mov
xor
mov
cmp
ja
test
loop
dec
mov
add
repnz
xor
sub
sahf
add
out
push
ror
repz
in
das
sar
jo
add
add
cmpsl
stos
arpl
arpl
pop
xchg
sub
jae
test
addr16
cltd
add
xchg
add
xchg
jmp
dec
inc
ss
movsb
pop
cld
pop
xchg
xor
push
mov
and
xor
testb
iret
ss
or
mov
mov
add
add
push
xor
push
mov
out
int
mov
push
pop
pusha
outsl
sub
jle
sub
movsb
roll
fimull
mov
mov
mov
fdiv
xchg
add
jg
pop
jmp
rolb
fs
fdivl
jecxz
into
movsl
pop
into
add
add
add
je
lds
addl
adc
add
add
icebp
adc
inc
fisubl
mov
imul
mov
daa
jno
movsl
scas
cmpsb
cmpsl
movsl
aaa
movsb
in
xchg
int3
add
in
pop
sbb
fidivl
or
loope
dec
add
add
adc
lds
cmp
nop
movsl
loope
sbb
add
add
jp
cld
pop
xor
mov
std
xchg
insl
ret
lods
lret
jg
add
add
imul
adc
int
lcall
loope
add
xchg
jnp
xchg
cs
xor
repz
cwtl
xchg
pop
orb
jno
ret
ljmp
mov
xchg
shl
fwait
sahf
xlat
daa
add
add
stos
jge
out
jmp
mov
mov
pop
mov
xchg
sub
push
pop
xchg
pop
cmp
cld
icebp
and
arpl
das
outsb
das
cld
adc
icebp
das
add
add
xor
call
pop
in
xchg
test
pushl
icebp
cli
xor
inc
push
pop
mov
cmp
pop
in
fmulp
xor
add
mov
xchg
jae
xchg
pxor
fimull
scas
out
in
fstl
lds
loop
xlat
call
sbb
xchg
lds
loope
loopne
int3
int3
int3
add
adc
lods
xchg
pop
aaa
mov
add
push
push
cmpsl
xchg
in
mov
scas
dec
mov
cmpsl
sbb
xor
js
or
xchg
mov
pop
in
insb
jns
fsub
ljmp
cmp
sti
imul
mov
add
add
mov
mov
inc
inc
xchg
push
sahf
stc
dec
adc
sbb
movsl
test
roll
das
outsl
mov
idivb
add
add
mov
xorb
test
movsl
insb
xor
clc
pop
mov
shll
inc
add
mov
inc
and
mov
push
int
sbb
sahf
mov
add
add
js
cmc
arpl
xchg
fnstsw
dec
mov
shlb
sub
add
cmp
cmp
les
mov
or
xor
sbb
cld
jl
pop
or
add
mov
add
add
roll
flds
or
jecxz
push
jge
lock
xor
mov
es
enter
pop
outsb
push
out
or
in
pop
sbb
nop
cmp
xchg
xorb
dec
bound
out
inc
test
outsl
lock
add
ds
lds
lcall
daa
stos
or
in
pop
sahf
add
inc
movsl
adc
in
sbbl
pop
test
add
and
fdivrl
push
mov
rorb
add
ljmp
sub
fwait
int
sbb
cmp
ret
addr16
jle
pop
mov
push
pop
gs
add
fsubl
popa
mov
dec
sbb
fs
test
cwtl
pop
add
add
cmp
xchg
std
sbb
testb
fmulp
mov
fildl
add
add
mov
jmp
mov
xchg
call
pop
test
les
adc
movsb
dec
call
shll
jmp
fdiv
adc
imul
movsb
in
sub
std
mov
lock
add
add
dec
ds
jle
xchg
add
inc
sti
outsl
jo
aam
dec
out
lret
daa
xchg
cli
jae
movsl
fwait
leave
les
xor
test
sbb
enter
leave
pop
push
inc
aam
aad
jae
das
ret
jne
add
add
rdpmc
pushf
stos
test
or
push
mov
lods
and
test
sub
ret
pushf
divl
add
loopne
jge
xchg
push
xor
push
inc
inc
cmpsl
icebp
rcll
push
rol
rolb
xorb
inc
insb
aas
aad
mov
jmp
subb
lods
inc
enter
and
mov
sub
rorl
ss
ficoms
in
add
adc
adc
test
sar
push
pop
leave
push
icebp
popf
ret
dec
push
ljmp
jns
lods
popa
data16
sbb
das
inc
enter
jle
push
mov
push
push
and
pop
jg
lret
adc
aam
xor
mov
fisubrl
addl
out
and
add
add
jle
jmp
sub
xor
jge
jg
lea
sub
call
jmp
pop
mov
fiaddl
addr16
sub
add
adc
and
stos
sbb
imul
or
inc
test
mov
das
dec
mov
stc
xchg
pop
add
add
pop
insb
xchg
pop
scas
jnp
or
jp
out
inc
and
cmpsb
in
xlat
sbb
push
push
icebp
dec
call
das
xor
lods
cmp
sub
jecxz,pn
cmp
add
add
mov
aas
aaa
cmpsb
cmp
inc
cmp
pop
fcompl
pop
adc
or
push
call
pusha
scas
pop
xor
stos
ljmp
mov
ret
lock
in
sahf
xchg
jne
cmc
or
xchg
cmp
daa
ljmp
add
cld
add
jnp
cltd
and
sbb
sub
cmc
xchg
xchg
jae
bound
enter
mov
cmp
add
add
cmp
inc
mov
mov
xchg
cs
sti
mov
mov
add
mov
call
nop
mov
lret
jo
cmp
into
mov
mov
or
adc
inc
in
adc
out
dec
rorl
or
inc
jb
mov
pusha
insb
ljmp
lds
scas
pop
out
mov
add
add
sbb
adc
rorl
cld
xchg
push
sbb
int3
xchg
ds
fs
and
cmp
lahf
incl
sbb
int
loope
cli
cmc
mov
sub
cmp
mov
fsubrs
cmp
repnz
lcall
add
arpl
xchg
bound
cld
dec
imul
xchg
std
xor
sbb
add
cli
sti
jge
ror
cwtl
out
inc
mov
aas
nop
pop
jmp
ja
and
les
sbb
outsb
xor
xor
xor
add
add
jl
xchg
into
rcrb
sub
push
pop
fiaddl
add
mov
fcomi
ret
sahf
imul
jle
inc
repz
or
xchg
mov
xchg
stc
popf
addr16
or
add
xor
ret
mov
ficompl
fs
sub
mov
mov
jno
push
add
jns
push
ret
push
sbb
xchg
sub
mov
out
lcall
mov
sbb
imul
pop
jb
push
outsb
dec
icebp
cmc
int3
int3
int3
int3
int3
ret
inc
dec
cwtl
mov
dec
fadd
stos
fucomip
ljmp
sarl
mov
sbb
add
int3
adc
and
push
ret
shlb
cwtl
repnz
fldcw
jecxz
ds
xor
int3
sbb
arpl
sub
mov
jmp
jmp
cwtl
pushf
mov
sbb
add
dec
imul
push
addr16
orb
mov
sbbb
cmp
jnp
lds
add
iret
enter
sbb
pushf
pushf
lds
iret
cmpsl
dec
sahf
mov
or
jo
lods
and
mov
dec
add
add
mov
push
or
xchg
stos
jmp
mov
cwtl
and
add
add
les
jp
mov
ja
add
add
arpl
mov
sbb
lods
aas
les
sub
add
and
sbb
inc
lods
mov
fmuls
loop
ss
xchg
nop
cmp
aas
cld
sbb
add
call
addr16
iret
pop
sub
or
xchg
and
add
add
daa
mov
lret
hlt
inc
sub
mov
jb
aam
add
add
jns
dec
jne
test
in
pop
into
dec
pusha
jne
sub
lea
mov
dec
dec
cmp
in
sbb
ljmp
inc
sbb
int
and
repz
test
cmp
ja
loope
enter
add
add
insb
push
or
aad
xor
out
pusha
movsb
or
jno
jmp
pop
dec
sbbb
arpl
xchg
lea
mov
inc
fisubrl
or
data16
das
push
push
add
ds
cli
sbb
jae
add
add
dec
push
mov
xlat
dec
jb
pop
aaa
jecxz
cmp
or
nop
jne
mov
cmp
sar
sbb
loopew
mov
idivb
push
fisttpl
mov
pushf
mov
pop
cmpsb
ja
jp
sti
jb
pusha
xchg
cs
inc
adc
test
fildll
push
cmp
xor
add
add
or
shl
add
sbb
sarl
xchg
mov
shl
in
jecxz
mov
and
sahf
sub
std
jnp
ljmp
les
fistpl
sub
adc
mov
xor
out
sbb
mov
push
push
dec
pop
and
and
outsb
xchg
std
dec
fistpl
out
mov
lret
fnop
divb
mov
sub
rorb
cmpsb
adc
push
inc
xchg
add
add
imul
xor
mov
in
add
add
mov
cmpsl
fbstp
outsl
pusha
xor
push
push
mov
xchg
lcall
lahf
ret
lea
iret
jl
clc
add
push
sub
movsb
cli
call
jo
jb
mov
or
xchg
xor
and
loop
sbb
call
enter
or
lret
out
or
mov
sbb
pop
ljmp
jmp
cmc
or
push
pop
cmp
mov
jmp
pop
clc
and
sbb
push
mov
dec
lea
mov
mov
cmp
xlat
xchg
dec
inc
pop
je
test
mov
negb
ret
add
add
daa
jg
outsl
ljmp
inc
add
add
adc
imul
faddl
or
cmp
adc
pop
and
inc
int3
jo
or
mov
es
add
add
cld
pop
mov
mov
inc
lock
pop
lea
repz
ret
inc
int
and
clc
pop
roll
stos
inc
jno
cmp
xor
add
stos
loope
push
mov
dec
inc
scas
lods
bnd
int3
add
add
in
pop
adc
aam
xchg
xor
movsl
inc
jb
sbb
popa
repz
movsl
sbb
jmp
fisttpl
movsl
sbb
cmpsl
jbe
add
jle
dec
out
clc
lea
mov
pop
movsl
out
out
stc
bound
jnp
mov
push
mov
or
push
xlat
leave
dec
jnp
cmpsl
out
lcall
lods
mov
jg
push
dec
mov
cmp
dec
cmpsb
inc
xor
mov
jge
and
testl
jl
push
and
xchg
xor
ret
or
push
dec
xor
pop
push
test
inc
and
sub
cmp
fsub
pop
imul
add
bound
xchg
imul
mov
loope
cmp
push
or
xchg
adc
dec
aad
movsl
fdivr
sub
insl
pop
pop
pop
xchg
int3
int3
ret
lcall
xchg
mov
leave
stos
add
add
flds
xchg
mov
lret
jne
fisubl
gs
fwait
in
adc
movb
and
scas
dec
push
mov
roll
add
adc
imul
xchg
mov
cmpsb
mov
fsts
pop
push
jp,pt
add
mov
mov
sbb
jne
sub
lahf
jb
int3
imul
lahf
sbb
insb
pop
aaa
jp
sbb
arpl
sub
add
add
lahf
in
cs
mov
iret
out
cwtl
div
pop
out
inc
or
jbe
popa
mov
xchg
iret
pop
int3
sbb
xor
fistpl
lea
ljmp
mov
test
ja
lds
jg
mov
mov
mov
add
sbb
pop
fidivrs
movsb
add
inc
pushf
sub
push
mov
rclb
jl
sbb
lret
jnp
mov
mov
jb
call
out
and
data16
jns
xchg
sbb
fwait
dec
icebp
ds
or
ret
mov
sbb
jo
add
add
sbb
and
pusha
dec
mov
stc
adc
ljmp
ss
cmc
je
push
jge
popf
pop
js
mov
arpl
pop
lea
cmpsl
arpl
cltd
roll
stos
in
arpl
push
push
std
add
add
mov
adc
in
sub
or
xchg
add
adc
xor
stos
xchg
mov
into
outsl
pop
pop
pop
gs
pop
fwait
push
mov
out
in
push
add
orb
add
add
push
popa
xor
and
mov
mov
rorb
ds
push
pop
in
sbb
xchg
not
ds
imul
test
cld
ror
cmp
pushf
movsl
leave
aaa
mov
test
pop
dec
add
add
lcall
aad
sub
pop
inc
fidivrl
daa
sbb
push
popa
mov
cmp
test
rcr
mov
jmp
lret
ljmp
cmp
jnp
out
mov
push
jmp
jle
pop
and
mov
sub
sub
ret
outsl
xor
jecxz
or
pop
into
dec
ljmp
mov
lods
add
fwait
sub
fistpll
push
aas
and
jo
xor
les
lock
int
dec
add
pop
or
ss
jecxz
int3
jno
scas
mov
enter
add
add
jns
mov
adc
xor
xor
sub
shll
dec
cmc
mov
loopne
mov
and
shl
mov
pop
add
aas
jne
add
add
pop
push
cs
jmp
mov
jo
xchg
mov
arpl
push
dec
xchg
pop
repz
rcrl
sbb
dec
mov
pop
insl
sub
pop
movsb
jg
add
in
andl
or
insb
mov
xchg
test
add
int3
lock
sbb
inc
or
sbb
add
mov
imul
mov
int3
lds
lock
scas
inc
cmp
or
jbe
xor
je
div
xor
dec
sub
gs
mov
pop
xchg
sub
lahf
dec
lock
ds
mov
flds
mov
pop
push
aas
xor
out
jns
add
add
or
xor
sbb
mov
cwtl
popa
fmull
repz
pop
shlb
ret
jae
jb
icebp
mov
xchg
pop
fwait
aam
shlb
cmp
nop
jbe
ss
loopne
dec
pop
push
pop
std
cwtl
fstpt
bound
add
add
lahf
mov
int3
int3
aam
fmul
jmp
sbb
lahf
enter
cs
je
sbb
add
sub
arpl
aad
negl
sbb
test
add
jmp
adc
xchg
push
mov
out
inc
add
add
or
popa
pop
mov
sbb
je
sub
sub
jmp
pop
inc
pop
xchg
inc
add
add
fildl
cwtl
pop
pop
ss
iret
add
sbb
inc
pop
cmp
jmp
loope
or
in
sub
add
add
add
mov
dec
jle
xlat
movsl
adc
xor
mov
jbe
sbb
cmp
imul
fstpl
add
add
cwtl
dec
dec
enter
stc
pop
mov
mov
or
sbbl
add
andb
mov
aaa
mov
int3
xchg
dec
bound
dec
femms
fbstp
sbb
cmp
mov
clc
fs
add
add
sub
pop
adc
lds
sub
fsubrl
jmp
or
cmpsl
dec
pop
in
fcomip
lods
pop
xchg
push
sub
outsb
pop
adc
adc
xor
mov
fs
push
mov
mov
int3
jb
mov
ljmp
jbe
lock
jne
add
add
mov
push
scas
mov
mov
in
jne
clc
xchg
push
gs
mov
in
pop
cmpsb
nop
jae
fldt
push
sysret
cmpsl
jae
stos
pop
fnstenv
add
mov
mov
mov
xor
mov
inc
xchg
lret
inc
gs
or
ljmp
add
ret
fwait
jge
addr16
mov
jno
xchg
push
sbbb
xchg
push
in
popf
push
jne
into
cmovbe
test
movsl
jae
pop
push
sub
mov
jle
add
add
pop
ja
ret
add
jl
mov
or
add
and
jp
jecxz
jne
outsl
mov
cli
sub
int3
mov
out
push
xchg
xchg
mov
push
sub
arpl
mov
lret
pop
lret
movsl
sbb
xlat
mov
fxch
lds
fstl
adc
cli
jnp
sbb
js
cmc
addb
jmp
imul
add
add
mov
sbb
mov
mov
outsb
scas
movsl
lock
jbe
adc
ds
jmp
aaa
xor
loope
fistl
insb
sbb
add
pop
imul
daa
mov
mov
pop
jb
sahf
das
std
mov
or
sub
inc
lcall
mov
mov
jb
int3
int3
int3
icebp
mov
cmpsb
insl
mov
push
dec
pop
push
pop
scas
push
sub
inc
sti
cwtl
push
das
fistpl
repnz
sbb
pop
push
jecxz
mov
popf
jb
fsubrs
xor
mov
push
and
add
add
outsb
imul
out
movsl
fisubrs
rcrl
xor
mov
cwtl
pop
push
pop
inc
sbb
xchg
movl
cmp
bound
ss
mov
test
fdivrl
pop
lds
das
xchg
mov
mov
jge
add
xor
aaa
cmp
mov
jg
mov
cld
call
add
adc
xchg
test
add
enter
cmp
add
xchg
aam
ja
out
cmp
add
or
dec
cmp
icebp
aad
push
jle
xor
or
fdivrs
inc
mov
push
lahf
cld
xchg
adc
adc
cmp
movsl
xchg
fcmovbe
sbb
mov
xor
xlat
mov
into
push
pusha
pop
jle
add
add
sbb
gs
cmpsb
sbb
fisubl
out
ss
rcll
hlt
dec
cmpsb
xchg
pop
add
fcoml
sub
adc
inc
push
fdivrl
icebp
sbb
daa
jg
fildl
loope
lock
pop
cmp
pop
cmp
push
pop
xorb
mov
cmp
or
pop
ss
pusha
push
push
jo
jno
sbb
sahf
out
in
stc
add
add
inc
stos
adc
loope
ja
lahf
cmpsb
ds
dec
jmp
daa
sub
and
gs
push
scas
jns
sbb
add
sub
test
fisubrl
pop
lods
adc
jbe
ds
and
aas
inc
mov
push
insl
shrl
sub
daa
aad
or
add
add
pop
ret
enter
mov
jne
add
add
or
dec
imul
push
jno
mov
adc
mov
fidivs
das
fstpl
add
mov
add
mov
jecxz
inc
int
enter
add
inc
das
iret
adcb
fprem1
shlb
ljmp
mov
cmp
and
dec
mov
sbb
add
jo
pop
jle
cli
insb
xchg
mov
adc
mov
mov
mov
iret
sub
cmpsb
or
iret
mov
fwait
les
add
add
push
aaa
or
mov
jmp
xchg
mov
dec
jmp
adc
add
inc
or
sar
sbb
sub
mov
ret
daa
test
imul
stc
jae
push
into
sub
lea
gs
push
add
lret
je
test
inc
sub
add
add
call
push
sti
mov
dec
lea
imul
add
add
je
jae
xchg
jmp
das
sub
or
cld
cmp
test
push
push
add
add
pushf
jecxz,pt
aam
pusha
int3
int3
int3
int3
mov
mov
test
mov
mov
out
out
pop
lds
adc
movsb
inc
inc
cs
jg
test
scas
add
enter
sbb
fidivrl
iret
stc
popf
jnp
jp
bound
fidivl
and
adc
add
pop
sub
dec
xchg
sub
sub
fldcw
push
jg
xor
aad
mov
add
ds
inc
sti
and
xor
lahf
std
scas
stc
inc
into
aaa
pushf
daa
movsb
jne
jo
sub
mov
push
rolb
sbb
and
add
add
mov
adc
xchg
adc
clc
stos
jle
adc
add
mov
mov
xor
insb
xor
jne
inc
scas
sub
dec
dec
cmp
std
and
aad
jp
fstpt
movzbl
hlt
pop
repnz
jle
cmp
loopne
popa
fcomi
xlat
pushf
or
jle
push
das
adc
pop
pop
addr16
cs
add
rcrl
ja
sub
dec
rcl
pop
xchg
mov
mov
mov
dec
push
cmpsl
fidivrl
dec
pop
push
pop
loop
mov
and
imul
neg
fs
inc
in
and
je
aas
test
add
rcrl
movsb
mov
xchg
dec
fldl
dec
jecxz
je
lcall
insl
push
inc
dec
loopne
js
cltd
cmp
mov
fisttps
pop
ljmp
in
mov
mov
cmp
add
out
lods
call
sub
adc
jl
pop
fmulp
jge
adc
dec
jg
or
fcoms
clc
lret
shrb
inc
adc
out
loope
push
jne
loop
mov
adc
jp
jb
shr
or
add
xor
mov
fmull
into
xchg
sub
push
imul
cmp
and
sbb
jno
sub
enter
dec
ret
mov
add
add
aam
adc
cld
scas
loopne
xchg
pop
cmc
add
add
int3
inc
fs
sub
jmp
mov
jno
lods
push
hlt
xchg
lret
pop
xor
into
iret
mov
lret
and
jnp
cmp
push
lcall
add
imull
cmp
xor
stc
sarl
imul
or
push
call
push
jo
insb
sub
pop
mov
and
mov
adc
lds
fisubrl
ss
lds
push
test
insb
add
out
sub
mov
inc
adc
or
xchg
mov
lahf
add
add
mov
lds
push
arpl
cld
dec
fidivrs
xor
fsubrs
outsb
shl
mov
out
and
js
add
add
adc
mov
popa
mov
sub
arpl
xchg
loope
add
add
cltd
or
cmpsl
mov
push
dec
jb
call
ror
lfs
repz
jb
cmp
subl
fwait
sub
js
aaa
xchg
fwait
lods
jns
cmp
mov
call
add
sbb
psubusw
imul
cmp
jae
cmp
repz
adc
mov
mov
dec
add
add
insb
xchg
stos
out
int
jmp
movsb
je
into
lods
and
insl
push
iret
xlat
pusha
aad
sahf
mov
add
dec
jle
loop
andb
add
scas
jo
xchg
lods
jl
shll
aad
xchg
decb
rol
add
add
ret
inc
call
xor
mov
cwtl
pop
and
gs
outsl
sbbl
fnstcw
mov
adc
fmull
add
dec
sbb
jge
imul
rorl
dec
xchg
rcrl
hlt
add
cs
and
pop
into
xchg
add
das
jo
jp
dec
mov
jns
dec
imul
cltd
sub
xchg
fmull
cmc
cmp
pop
fldenv
test
jmp
jae
push
mov
push
repz
mov
fnstsw
mov
mov
dec
dec
nop
mov
ds
mov
add
and
or
xor
add
xchg
xor
dec
pushf
pop
pop
fists
pop
or
adc
test
lahf
test
lods
add
add
jge
sar
stos
sub
push
mov
cmp
inc
ret
push
lea
pop
stc
push
fucomi
mov
neg
add
add
cmp
pop
test
jb
pushf
inc
sbb
popf
loop
add
cmpb
inc
sbb
mov
mov
in
loope
mov
xchg
and
sub
dec
pushf
cvtps2pd
add
test
push
push
jle
mov
jne
push
jle
hlt
repz
mov
adc
fwait
pop
and
jae
outsl
xchg
adc
jecxz
ret
jecxz
add
add
add
or
or
push
xor
fwait
clc
stos
jne
cmp
and
mov
xor
fisubrs
xor
fwait
push
or
addr16
push
cmpsl
leave
inc
inc
mov
adc
mov
sbb
xchg
repnz
and
push
sub
jne
out
out
lret
loop
int3
int3
int3
int3
int3
inc
sbb
mov
add
es
adc
outsl
cmp
jmp
xor
inc
and
jnp
adc
out
mov
mov
data16
and
push
mov
push
dec
pop
sub
xor
xchg
xor
cmpsb
lcall
mov
adc
xchg
sbb
outsw
loopne
add
add
loopne
and
inc
fildll
cmpsl
pop
mov
add
ja
dec
inc
add
xchg
fs
add
sub
mov
and
dec
jge
js
adc
in
adc
sub
stos
jbe
test
dec
cmp
add
or
xchg
pop
xchg
or
sbb
sbb
out
mov
xchg
insb
aam
push
leave
and
mov
gs
xor
leave
sub
test
mov
in
push
icebp
and
sub
jmp
mov
sbb
and
lods
lcall
push
cs
mov
mov
xchg
pop
test
call
filds
xor
ljmp
imul
data16
dec
outsl
sarw
adc
jmp
jge
xorl
push
add
add
add
push
xchg
sbb
mov
nop
mov
sbb
pop
test
xor
fucomi
ja
add
jo
out
std
add
mov
sahf
in
mov
stc
ljmp
rcr
pop
dec
mov
sub
mov
jno
adc
sbb
fiadds
inc
cmpsb
ret
sub
outsb
jl
mov
sbb
int3
int3
dec
les
cvtpi2ps
cwtl
shr
rcrb
movsl
ds
test
jecxz
aas
add
add
adc
mov
jb
rolb
inc
mov
inc
jecxz
rorb
inc
insb
rolb
pop
sub
mov
add
insl
lahf
cmp
testl
add
scas
ret
test
mov
or
mov
xchg
ljmp
popa
loopne
or
popa
shr
out
fs
out
and
enter
push
dec
test
test
loope
inc
mov
insb
dec
pop
or
pop
pcmpeqw
mov
push
push
pop
cmp
push
out
or
add
add
pop
in
add
es
in
hlt
enter
or
pop
or
and
nop
or
cld
dec
sub
dec
sbb
mov
mov
mov
pop
xchg
add
add
scas
lods
popf
pop
lds
lcall
sub
fldenv
in
push
jns
enter
int3
int3
int3
sub
cmpsb
and
scas
mov
sbb
sub
lods
add
add
outsb
andb
pop
push
dec
add
lcall
roll
incb
cmc
imul
leave
insl
sar
pop
xchg
dec
movsl
leave
sbb
jnp
jae
test
hlt
aad
xorl
fdivs
mov
jle
ficoms
add
add
adc
shrl
mov
mov
cwtl
push
jmp
lahf
call
add
ret
out
in
frstor
bound
int
fidivs
daa
add
add
xchg
and
sbb
add
pop
insl
sahf
daa
xor
ret
fwait
into
arpl
ffreep
xchg
jmp
inc
testl
cmpsl
jns
out
xor
test
push
push
outsl
and
icebp
add
add
rolb
pop
sub
cmpsb
movsb
jmp
dec
testb
data16
fisubrl
in
sbb
sbb
or
test
pop
xor
movb
dec
rcl
testb
add
xchg
imul
leave
and
add
pop
sub
jbe
lock
in
fadd
ds
push
stos
mov
test
gs
push
lock
fdivrl
mov
add
inc
sub
jmp
mov
xor
xorl
test
mov
fstps
rclb
leave
sbb
add
enter
insb
sub
inc
cmp
and
pop
call
popa
test
xchg
mov
out
pusha
pop
mov
cld
mov
iret
mov
mov
das
out
sub
xchg
mov
mov
fwait
bound
test
loope
jg
lods
pop
xorl
sbb
xchg
dec
sub
jmp
add
add
pop
pop
ds
dec
push
mov
sub
testb
mov
jle
leave
jmp
mov
sbb
pusha
ret
dec
sbbb
repnz
ja
int3
mov
in
and
movb
sbb
out
cltd
add
add
arpl
int
cmpsb
add
repnz
and
mov
add
jno
cmpsb
movsb
div
xor
jmp
in
jle
int
mov
dec
push
dec
or
out
mov
mov
jg
mov
rolb
xor
pop
aaa
and
das
nop
push
fiaddl
in
pop
cltd
les
xchg
mov
or
push
aaa
xlat
sarl
jge
into
ret
pop
out
and
imul
push
inc
ds
adc
mov
stc
push
jge
push
xchg
sub
add
add
test
movsb
bound
mov
mov
inc
jl
mov
in
push
cmp
fiadds
aad
out
push
inc
sahf
lret
sbb
xorl
fucomi
sbb
adc
insb
xchg
daa
inc
dec
jo
cmc
pop
and
insl
call
xchg
mov
out
add
mov
int3
int3
int3
inc
add
add
or
sbb
dec
inc
arpl
xchg
sbb
mov
out
popf
imul
enter
adc
arpl
xchg
fistpll
mov
xor
adc
inc
popa
push
cmp
clc
les
imul
jno
mov
add
xlat
inc
test
xchg
xor
mov
stc
daa
and
hlt
push
cmp
mov
xor
incl
dec
jns
cmp
bound
xchg
add
in
nop
and
fsubr
pop
pop
add
mov
fbld
mov
add
rol
fmull
ljmp
test
outsl
mov
push
or
pop
dec
pushw
push
adc
pop
xor
jnp
pop
xchg
xor
in
es
xchg
pop
ret
jp
mov
sub
mov
fiadds
xor
mov
xchg
inc
ss
in
mov
icebp
sub
pop
adc
mov
mov
icebp
push
mov
mov
inc
rorb
push
bound
stos
cmpsb
test
das
aad
add
add
loopne
push
fidivrl
test
cmp
add
jne
fisubrl
pop
iret
mov
sub
das
mov
sbb
fldl
xor
into
js
lcall
cmpb
std
ss
sbb
scas
inc
lcall
frstpm(287
push
add
add
or
add
xchg
pushf
and
jle
iret
jns
ud0
add
add
cmp
out
push
arpl
or
daa
add
xor
jp
outsb
mov
mov
and
out
call
movl
faddp
pusha
ret
inc
subl
es
or
and
add
jae
cmp
out
dec
hlt
push
aad
imul
into
add
add
loope
inc
pop
sub
sub
inc
fcoms
lret
cs
push
mov
int3
int3
int3
in
xor
mov
int
sub
add
loop
loopne
movsb
ss
js
das
call
push
add
cmp
ja
stos
xchg
imul
pop
push
dec
addr16
imul
cwtl
mov
xchg
notl
and
add
imul
test
cmpb
push
add
jmp
inc
push
lock
sarb
fwait
cli
cmp
loope
loopne
inc
cld
pop
popf
mov
testb
add
stc
inc
cmpsl
cmp
sub
mov
inc
mov
fstpt
jo
scas
adc
mov
mov
mov
push
lock
and
cs
cmp
mov
and
pop
push
add
fldt
dec
inc
xlat
adc
nop
jns
mov
ja
add
addl
aam
mov
repnz
cmp
jg
mov
movsl
popa
fwait
add
add
rorb
sub
sub
leave
lock
push
inc
cwtl
pusha
enter
xchg
xor
jnp
xchg
jbe
cmp
or
pop
aad
xchg
inc
cmp
sbb
movb
cltd
push
test
push
adc
fldenv
je
jmp
add
aad
and
cmp
mov
add
add
addr16
jge
sbb
mov
cmp
mov
jb
call
leave
inc
jb
add
and
add
add
inc
imul
out
push
adc
incl
add
imul
outsb
mov
add
add
xor
push
jns
bound
jp
xor
push
mov
popa
sti
icebp
popf
outsl
into
push
mov
mov
add
add
adc
sti
outsb
rolb
sub
in
or
add
add
movsl
adc
sub
add
es
lods
mov
sbb
cltd
or
push
sti
lds
xor
cmp
out
test
mov
les
stos
ss
rorl
push
xchg
sub
shrb
mov
push
mov
and
mulb
add
add
xchg
sub
inc
repz
popa
arpl
inc
cmpsb
inc
jge
jmp
xchg
pusha
shll
loop
aad
pusha
jnp
dec
mov
daa
jnp
xor
cld
xchg
repnz
test
rol
mov
jno
and
dec
aas
mov
add
out
or
dec
clc
in
jno
in
das
xlat
mov
push
jo
push
dec
mov
aaa
pop
call
es
mov
sub
add
add
nop
rcrb
aaa
or
xor
in
loop
cmc
testl
pop
push
pop
test
or
jae
push
inc
lret
bound
mov
data16
loopne
fnstsw
mov
gs
gs
pop
in
add
mov
add
test
insb
icebp
scas
add
aaa
inc
pop
sbb
mov
dec
push
dec
adc
mov
pushf
imul
shlb
push
das
hlt
and
adc
sub
test
add
push
repz
repnz
push
test
and
adc
xchg
std
lahf
stc
out
mov
sub
loop
inc
and
push
push
push
gs
sub
iret
ja
fsubrs
or
scas
sbb
mov
push
sub
add
stc
add
add
iret
das
wbinvd
cmpsb
imul
call
cwtl
sub
fldenv
xor
push
pop
sbb
pop
std
lret
sbb
mov
sub
negb
sbb
inc
sub
and
bound
add
cmpsl
add
pop
cli
and
push
sahf
cmc
sti
in
mov
cmpsl
push
es
push
sahf
idiv
push
sub
dec
aaa
cmp
dec
xchg
push
ret
out
xchg
mov
aam
ja
push
test
out
sub
jl
pop
mov
in
into
xlat
jle
mov
fwait
adc
pop
sbb
fs
mov
mov
add
add
sbb
rorl
xchg
inc
fsincos
pushf
jb
sub
push
jbe
push
popa
jecxz
test
push
mov
ja
sub
mov
pop
mov
cmp
out
mov
data16
jge
repnz
icebp
push
mov
sahf
push
lods
call
xchg
fists
mov
outsl
jo
sahf
jp
mov
mov
les
xchg
out
testl
sub
pop
push
int3
int3
int3
int3
inc
inc
or
add
sbb
ljmp
sub
arpl
jl
mov
jae
cwtl
aam
cmp
pop
or
in
call
dec
mov
add
add
cmpsb
sar
cmp
loop
sbb
xor
mov
xchg
in
pop
out
adc
sbb
lods
ljmp
in
hlt
inc
adc
dec
pop
daa
add
add
stos
or
repz
and
push
pushf
stos
sbb
sub
jns
add
add
aaa
xchg
aam
cmpsb
cmpsb
lds
push
mov
pop
jae
iret
ss
loopne
cmp
popf
orb
push
cld
push
sub
aas
mov
out
js
cmp
std
ss
and
pop
in
xchg
sahf
and
push
addr16
add
out
mov
sub
stc
pop
sbb
xor
test
js
faddl
add
add
scas
mov
add
push
insl
cmp
out
jno
aad
sbb
sbb
cltd
andb
mov
mov
and
sbb
into
cld
ds
mov
jns
adcl
roll
cmpb
mov
cmpsb
or
xor
xabort
sub
adc
int3
int3
int3
int3
ret
push
mov
sbb
int
lea
mov
aad
addr16
and
popa
or
sarb
mov
popf
inc
cs
pop
push
xchg
lret
mov
mov
rcll
sbb
and
icebp
mov
mov
test
jmp
movsl
push
adc
cli
aad
sub
into
in
stos
and
dec
out
add
add
add
mov
jmp
addr16
jae
sbb
andb
jp
popa
pusha
pop
push
daa
outsl
int3
dec
outsl
jae
cmp
sub
repz
pop
push
push
mov
push
es
add
xchg
mov
insl
mov
hlt
xchg
fs
mov
out
or
lret
xorb
jnp
sti
push
dec
push
mov
sub
xchg
or
imul
rcrb
inc
jg
xchg
xor
imulb
or
mov
mov
add
add
mov
sbb
out
xchg
push
xchg
lds
mov
lcall
xor
loopne
pop
das
xor
loop
mov
xor
testb
xor
popa
add
add
jmp
dec
xchg
mov
mov
dec
push
mov
mov
sbb
add
or
and
add
je
imul
iret
add
mov
add
cmc
xchg
mov
pop
imul
shll
lcall
in
in
repz
mov
addr16
jl
jb
dec
andb
stc
insl
push
sbb
dec
mov
aas
mov
and
je
sub
cmp
cmp
out
out
add
add
icebp
cmp
xor
dec
or
out
adc
add
pop
hlt
enter
lret
push
nop
pop
ss
jne
pop
std
popa
adc
mov
jge
sub
int
sbb
insb
repnz
sub
adc
popf
das
les
jl
push
mov
data16
dec
pusha
outsb
cmp
push
adc
add
sbb
xchg
test
xchg
lods
loopne
xchg
cmp
outsb
int3
int3
int3
pop
addr16
and
dec
mov
int
push
or
dec
jmp
xchg
pop
adc
sbb
sti
dec
jl
inc
loopne
or
jb
jnp
dec
hlt
sbb
cmp
movsl
pop
adc
or
fisubrs
lea
add
xchg
popf
repz
rol
sub
inc
xor
cmp
add
and
pop
jnp
sub
mov
fistl
imul
cltd
iret
movsb
push
into
mov
adc
aad
sbb
xchg
xchg
dec
in
mov
cs
adc
add
pop
inc
test
cmp
mov
xlat
cmp
inc
pushf
sbb
pop
filds
cmpb
push
dec
push
stos
out
sbb
imul
lock
fldt
jns
mov
pop
insb
cmpsl
or
cmc
cli
cmpsb
push
movsl
imul
mov
add
dec
push
call
notl
jle
sub
jns
repnz
and
negb
mov
xlat
decb
lret
dec
xlat
int3
shlb
pop
and
ror
int3
int3
inc
pop
push
mov
mov
add
sbb
mov
and
push
sub
xchg
cmp
pop
in
sub
jae
cmp
xor
fsubr
in
int
mov
pop
xor
rclb
inc
xor
orb
sub
adc
xor
add
push
movsl
xor
jl
int
xchg
mov
fs
incl
mov
leave
mov
or
push
js
mov
mov
out
mov
dec
add
add
imul
jo
lret
repz
scas
cmp
gs
nop
add
sbb
andb
dec
cmp
call
stos
mov
xorl
ja
je
fnstenv
inc
test
loop
cmp
add
es
mov
nop
insl
insb
out
aas
fwait
rolb
fisubrl
mov
movb
sub
bound
add
push
cltd
push
cli
jecxz
mov
push
inc
xchg
push
ja
aas
enter
dec
push
int
add
sti
sub
enter
fs
inc
xchg
and
in
xor
and
pusha
sub
jl
leave
repz
cli
cmp
out
lahf
sub
add
sbb
lds
repnz
repz
gs
in
fidivs
dec
mov
add
add
jo
outsl
xor
int3
int3
int3
int3
push
dec
sbb
sub
inc
cs
mov
and
js
test
lock
call
xchg
mov
inc
inc
jmp
mov
xorb
sahf
mov
jle
inc
mov
xor
sarl
movsl
sub
imul
mov
add
add
fcom
ficompl
jae
in
sti
testl
dec
mov
ja
in
mov
xor
mov
add
add
and
lods
rclb
jns
sub
scas
or
stc
push
stos
shl
test
dec
jmp
mov
out
cmp
jne
jae
mov
stos
cli
inc
dec
sti
xchg
mov
push
je
xchg
push
cmp
add
mov
outsb
aam
imul
insl
cwtl
and
xor
leave
add
insb
notb
popa
add
xor
aad
scas
jnp
cmpsl
adc
jo
cmpsl
movsl
mov
push
subl
and
dec
popl
into
adc
pop
es
hlt
add
dec
insb
addr16
movb
add
jge
cmp
ljmp
dec
push
divl
jnp
cmp
in
rcr
add
mov
aas
ss
sbb
lahf
inc
out
jmp
aaa
setl
dec
mov
inc
push
bound
add
add
or
and
into
cld
clc
and
mov
adc
shl
addr16
mov
cmpsb
aam
xor
test
mov
cmp
xlat
into
mov
pop
call
iret
mov
test
test
add
lods
mov
rcll
cmp
mov
cld
xor
scas
mov
in
das
enter
orb
enter
add
add
stos
and
movsb
xchg
in
mov
mov
sldt
add
pop
fcmovnbe
aad
shrb
and
mov
data16
arpl
int
push
adc
and
divl
pop
imul
lds
and
add
mov
sub
repnz
insl
add
add
push
repz
cmpsb
jo
add
stos
in
lds
call
es
cmp
xchg
mov
lahf
daa
cmpsb
movsl
frstor
or
mov
adc
push
fists
insl
jmp
push
popa
jne
rclb
jecxz
aas
out
in
nop
sti
sbb
sub
leave
add
add
shlb
mov
xchg
xchg
adc
xorb
sub
aaa
std
jns
movsl
roll
popa
lods
xchg
cmp
fisttps
int3
int3
int3
int3
in
jl
xor
pop
jle
addl
add
pop
repnz
pop
pcmpgtd
mov
dec
mov
insb
stos
add
mov
pop
add
dec
push
adc
add
add
xor
insb
or
js
cmpsl
adc
xchg
ds
loope
sahf
sbb
pop
jmp
mov
xchg
lret
mov
pop
clc
lret
cmp
push
adc
push
js
jne
leave
sbb
add
add
test
mov
stos
adc
fsubs
loopne
or
push
xchg
push
pop
xlat
xchg
adc
lcall
mov
pop
cmp
mov
pop
scas
loop
in
dec
jge
pop
cltd
mov
imul
jne
sbb
push
insl
in
mov
add
push
out
lret
mov
loope
popf
hlt
jp
test
and
add
mov
sbb
xchg
shll
pop
das
cmp
addr16
jle
push
inc
popl
rcrl
adc
xlat
mov
dec
cmp
ss
inc
mov
out
jmp
add
and
xchg
add
cmp
sub
adc
fwait
jne
fcoml
inc
and
faddl
std
stos
faddl
cltd
pop
ret
jle
mov
lret
or
jno
xchg
fs
mov
fs
nop
xor
dec
arpl
sbb
cs
mov
divb
and
push
add
cmp
cmpsl
mov
dec
jne
add
add
and
pusha
push
iret
ja,pt
jns
sbb
outsb
push
jbe
mov
inc
lds
cmp
xor
out
sbb
int
mov
add
add
shlb
push
ret
jge
sahf
out
addb
jl
cli
add
outsl
rolb
add
adc
xrelease
cmp
and
mov
jne
cltd
sub
sysenter
pop
outsl
sbb
mov
js
cmp
imul
and
pop
cmpsb
adc
notb
adc
inc
aad
jo
xor
cmpsb
add
cwtl
push
aas
ficomps
add
cld
rcll
int3
dec
roll
sbb
int3
int3
int3
int3
stos
jns
sti
ja
test
ds
sub
jmp
aad
sub
sbb
fmuls
add
add
jae
call
ds
inc
and
jo
add
xchg
cmp
add
push
or
out
and
inc
mov
shlb
add
mov
imul
xlat
decl
ret
pusha
out
xchg
test
or
out
decl
jnp
xor
pop
jle
cmpsl
jmp
aad
fucomip
xor
mov
fmulp
sbb
mov
pop
xor
pop
adc
iret
stos
adc
add
xchg
pushf
mull
arpl
cltd
jp
pop
adc
mov
lods
xchg
sbbl
les
pop
movsb
out
add
add
jecxz
inc
test
jecxz
adc
icebp
stos
add
sbbb
mov
icebp
push
push
and
call
add
add
add
loop
stc
loope
push
data16
aam
into
mov
outsb
xor
xchg
mov
rcll
scas
xor
or
or
sub
add
mov
in
add
xchg
popa
loop,pt
jns
add
add
pop
mov
sbb
out
cmp
or
jge
aas
nop
imul
mov
mov
mov
roll
lods
movsl
fstps
push
cmpsl
mov
xchg
lods
jl
dec
xchg
loop
inc
ja
fwait
adc
test
xchg
xlat
sti
sldt
add
stc
jb
mov
movsb
ss
leavew
sub
sahf
in
dec
stc
xor
mov
daa
int
fs
orb
ss
jae
lret
je
cld
mov
pop
outsl
in
lds
dec
es
stos
xchg
jb
fcompl
sbb
rolb
add
dec
shlb
movsl
sbb
push
imul
adc
mov
rcrb
add
add
add
xor
and
push
push
stos
movb
and
sbb
pop
jl
push
xor
mov
xor
xchg
mov
adc
xchg
inc
leave
scas
jl
push
stc
sti
repnz
sub
pop
pop
dec
or
mov
adc
pop
dec
rclb
mov
shrb
push
add
mov
push
stc
movsl
movsl
push
out
xchg
shlb
jge
add
add
in
inc
pop
xlat
jno
dec
xor
mov
jno
ficoms
xchg
xor
add
ret
add
repnz
les
int3
int3
int3
int3
lret
mov
ret
fiaddl
add
cli
lcall
mov
xor
adc
or
push
sbb
add
inc
jns
xor
add
in
in
mov
cmp
fistpll
jnp
std
rcrb
cs
xchg
jg
arpl
inc
or
mov
cwtl
test
and
add
dec
addl
xchg
je
xchg
sub
add
mov
lahf
rep
cmp
jae
xor
jmp
outsb
push
mov
in
xchg
and
cmp
mov
push
mov
pop
jae
cmp
add
jp
movb
add
push
push
leave
xchg
cld
jg
stos
mov
scas
ret
rcrl
lock
sub
cld
pop
data16
push
or
call
call
mov
mov
sti
jbe
mov
add
add
adc
arpl
enter
mov
cld
cmc
or
and
xchg
pushaw
sub
or
jle
fists
cli
pop
xchg
cs
mov
gs
ficoml
push
sbb
cmpsb
pop
pop
jp
mov
aas
jmp
ret
aas
aad
aam
lahf
sahf
pop
jecxz
stos
hlt
dec
mov
cs
and
mov
add
add
add
out
dec
dec
inc
test
sbb
in
aam
push
sbb
jge
sbb
add
add
sbb
pop
call
in
leave
add
pop
fdivl
push
sub
mov
cmp
pop
lret
loope
inc
enter
setl
mov
cmp
inc
lcall
lock
pop
push
mov
add
xor
outsl
insb
idivb
test
jo
inc
push
dec
adc
loope
jmp
xor
cmp
lds
mov
sysret
out
dec
std
and
faddl
xchg
in
cmp
dec
sbb
add
inc
jp
or
push
cli
insb
ljmp
dec
mov
pop
stos
ss
leave
cmp
add
out
pop
icebp
mov
popf
pop
pop
outsb
enter
pop
cltd
les
cmp
inc
dec
dec
add
add
xchg
jo
lea
adc
push
sbb
mov
push
aaa
xor
repz
ds
sbb
add
add
adc
push
xchg
fsubl
lods
jle
mov
enter
inc
xchg
fisttpll
loope
add
and
ja
mov
cmpl
or
fisttps
jne
push
sub
repz
push
ja
mov
int3
int3
int3
int3
mov
out
push
scas
add
divb
arpl
mov
lahf
les
es
mov
imul
sahf
jl
pop
mov
xor
xor
add
xor
mov
shll
xchg
fisttpll
arpl
arpl
mov
adcb
outsb
lret
adc
xrelease
cmpsl
pop
mov
mov
or
aad
push
movsl
add
add
xor
pusha
pop
repnz
lea
out
icebp
pop
xchg
loopne
shll
add
adcb
mov
push
pop
xchg
cmc
outsb
cli
imul
adc
inc
sahf
jae
jp
lock
loope
rol
add
lock
arpl
call
and
pop
cmp
cmp
push
inc
imul
add
aas
xchg
cltd
out
cld
mov
mov
frstor
mov
xchg
cltd
add
inc
stos
add
out
sub
loope
sub
push
fbstp
jmp
imul
imul
stc
xorl
mov
add
out
cmp
or
repnz
and
add
add
lods
shrl
repnz
dec
mov
dec
mov
sub
movsl
adc
pop
push
sub
enter
sbb
rcrl
int3
fmuls
cltd
les
jge
clc
xor
mov
mov
pop
add
add
pop
aas
mov
dec
jmp
sbb
push
add
add
stos
lcall
pop
js
shlb
shr
xchg
adc
inc
and
xchg
dec
shl
or
mov
adc
test
inc
push
sub
lahf
jge
and
mov
and
push
lds
aam
cld
inc
cmp
pop
mov
add
add
or
std
push
iret
sbb
ret
or
jmp
clc
jge
sub
std
xchg
mov
loope
lret
cmp
int3
loope
dec
std
cmp
fstps
or
leave
inc
push
aas
in
xlat
cmp
test
dec
arpl
add
add
lcall
aad
sahf
cmp
cmp
mov
rorb
bts
dec
or
or
pop
xor
adc
ret
mov
cmp
jl
mov
mov
std
loope
add
sub
mov
addr16
aas
mov
lret
mov
mov
or
jle
into
arpl
enter
push
pushf
test
sbb
adc
dec
sub
adc
add
add
and
cmp
out
inc
frstor
fwait
push
mov
lret
and
loop
popa
lahf
fildll
sub
pop
sbb
xchg
sar
je,pt
cmp
imul
arpl
add
int3
int3
int3
iret
nop
popf
aaa
pop
jge
cwtl
or
iret
lahf
lahf
aas
dec
mov
pop
mov
push
roll
shl
jmp
imul
mov
pop
push
and
add
add
cmc
cmp
repnz
mov
cltd
xor
mov
pop
jl
sub
inc
pop
int3
ret
xchg
cmc
setae
jmp
lods
lret
xchg
jl
imul
int
and
pop
pop
stos
or
mov
out
pusha
ljmp
mov
ret
in
jmp
add
cs
les
jb
repz
jmp
pop
xchg
aas
jnp
fsubrl
mov
push
jp
dec
sub
add
add
inc
test
cmp
adc
scas
loope
xor
dec
dec
mov
pop
int3
imul
leave
dec
in
mov
fistps
push
aas
dec
dec
xor
into
fidivs
outsb
push
aam
mov
fmuls
pop
jo
popf
rorl
pop
pusha
ljmp
sub
jge
stc
push
xchg
leave
inc
pop
pop
ret
mov
hlt
int
add
ficomps
mov
adc
cmpsb
lods
dec
fnstsw
sub
shll
xor
jge
xor
sbb
cmc
xor
fdivrs
jmp
insl
or
xchg
jbe
lahf
int3
cmp
inc
sub
in
lcall
sub
adc
shll
push
sub
add
sbb
add
repz
jp
inc
sbb
movsb
movsb
add
add
fsubrs
jnp
popf
and
mov
xor
cmp
outsl
aas
push
or
pop
jg
test
add
sbb
fdivs
push
mov
lret
es
cmp
scas
sbb
push
xchg
mov
pop
in
jbe
int3
int3
int3
int3
jl
loope
into
into
sbb
xchg
push
push
sbb
push
mov
cwtl
mov
out
push
mov
insl
sbb
test
cmp
mov
mov
add
roll
add
add
stos
push
inc
outsb
cwtl
outsl
sub
outsb
stos
decl
cmp
mov
pop
aas
or
imul
int
addl
cmp
inc
dec
cmp
mov
sti
xor
sub
into
inc
cmp
stos
sahf
insl
sbb
add
add
mov
outsl
js
jae
sub
jg
shll
pop
ror
loopne
mov
fisubs
leave
or
iret
insl
arpl
loope
jne
push
sbb
jp
stos
and
dec
mov
lock
mov
std
cmp
push
lcall
or
mov
xor
sub
orl
int
ficompl
cmp
rorl
adc
jp
movsl
addr16
or
mov
cld
add
add
sub
mov
mov
loope
add
inc
imul
push
mov
pop
mov
jns
dec
lcall
lock
pop
mov
or
aad
inc
sbb
popf
sti
adc
jl
mov
sub
jb
add
push
xor
out
jg
xchg
dec
mov
pushf
insb
jg
mov
lods
les
push
sarl
popf
leave
pop
daa
rcrb
shlb
fwait
repnz
out
jp
add
jmp
scas
add
fldenv
jecxz
mov
and
pop
add
add
scas
sub
adc
lock
pop
cs
mov
xor
in
adc
mov
mov
sub
data16
leave
inc
sahf
sbb
xor
insl
add
add
dec
int3
int3
int3
int3
int3
test
insl
xchg
fsubl
mov
out
mov
mov
jnp
push
cmp
push
add
add
movsl
fbld
stos
cmp
movsb
outsl
xor
mov
and
movsb
push
dec
call
add
dec
add
mov
nop
testl
mov
or
lret
xchg
dec
push
aam
iret
inc
sbb
mov
out
sbb
in
clc
push
mov
fldt
cli
push
sbb
mov
enter
mov
push
aam
add
add
dec
mov
mov
lock
scas
test
pop
int3
int3
int3
int3
int3
mov
add
add
mov
sub
int3
fwait
push
xor
js
sbb
or
cmc
jg
fbld
cmpsb
ds
ljmp
sub
and
lret
cwtl
mov
clc
push
or
loopne
push
imul
dec
imul
push
aas
orb
mov
cmp
dec
or
xchg
jmp
mov
cmp
pop
std
add
add
aam
cmpsl
xor
pop
or
iret
insl
mov
adc
mov
aam
sub
cld
add
add
cmp
mov
sbb
push
jnp
stos
test
out
jns
inc
in
mov
outsl
pop
push
mov
outsb
jns
pop
add
enter
ljmp
insl
int
cltd
sub
lods
adc
fisubs
sbb
or
or
or
push
enter
sbb
mov
pop
pop
out
stc
loop
sbb
mov
add
lahf
xchg
sahf
lcall
out
enter
pop
mov
sub
add
sub
sbb
add
test
sbb
lods
lahf
cmp
jp
int3
and
push
mov
pusha
jb
stos
mov
ret
or
hlt
iret
mov
sub
dec
rcrb
sub
outsl
cmp
xor
fidivrl
and
test
insb
push
or
adc
mov
dec
sub
dec
and
sbb
sbb
add
adc
push
jecxz
stos
jae
mov
and
jg
enter
mov
fisttpll
pop
mov
jl
pop
mov
jae
jbe
fildll
inc
xor
fisttps
out
out
mov
cs
mov
lret
jmp
nop
out
mov
jmp
jmp
pslld
lcall
mov
arpl
jb
out
sahf
sbb
dec
jecxz
loope
mov
int
or
rcll
dec
add
sub
add
jmp
pop
sub
cmp
imul
cld
pop
xor
jle
push
fisubrl
fadd
movsl
mov
xchg
jl
imul
inc
stc
mov
push
mov
push
mov
cwtl
lods
aam
dec
mov
adc
dec
cmp
add
add
stc
test
sub
add
add
mov
pop
std
mov
pop
fists
sub
mov
lahf
mov
stos
dec
cmp
or
pop
or
add
add
or
cmp
outsb
js
outsb
xchg
add
adcl
nop
inc
js
adc
fists
dec
pusha
and
mov
into
or
add
push
sbb
test
clc
insl
push
in
adc
cwtl
aam
in
nop
mov
jb
inc
into
mov
add
add
lods
arpl
incb
loopne
sbb
es
cmp
xor
sbb
xchg
pushf
cwtl
outsl
add
mov
mov
popf
sub
mov
mov
ja
xchg
dec
mov
jl
add
fisubl
sub
cltd
jg
sbb
jo
pop
add
pushl
jmp
mov
inc
out
fld
dec
dec
cmp
sbb
sbb
dec
lahf
repnz
pop
mov
cmp
sub
xor
add
sub
inc
xchg
adc
stos
hlt
push
scas
aaa
cmpb
lods
cmpsl
lods
mov
push
stos
mov
sub
fisubs
gs
and
sub
adc
cmp
jge
js
mov
inc
jg
jge
lock
inc
xchg
or
jbe
add
add
pop
pop
and
scas
out
mov
enter
loop
pop
lea
add
add
push
sahf
pop
test
and
int3
mov
xor
cmp
mov
sub
mov
lret
cmp
cmpsl
or
add
jo
and
cmp
pop
js
clc
jg
test
inc
sarl
push
adc
lock
inc
ret
jnp
test
add
add
add
inc
out
mov
scas
aam
pop
add
xchg
dec
xchg
ljmp
pushf
adc
int3
and
xchg
icebp
test
mov
rorb
in
add
add
pop
ret
roll
mull
loope
xchg
jp
sahf
sbb
in
sbb
mov
lods
test
adc
push
repz
mov
daa
fidivs
ds
iret
adc
int3
int3
int3
jbe
xor
shrl
add
add
add
xor
testb
in
adc
stos
arpl
cwtl
movsb
dec
stc
and
popa
out
sahf
push
mov
adc
lods
xor
inc
aaa
sbb
in
mov
fwait
xchg
xchg
mov
sbb
pop
mov
sub
adc
mov
cmp
mov
add
scas
mov
push
les
inc
inc
sti
add
enter
and
add
add
loop
shrl
mov
xchg
subl
dec
fwait
jae
bnd
cltd
pop
inc
push
or
cld
idivb
fdivrl
adc
jle
fs
mov
scas
aam
stos
sbb
fdivrs
into
or
and
inc
and
add
add
stos
xor
push
popa
cmc
push
cmp
int3
int3
int3
int3
mov
cmc
stos
cmpsl
adc
andl
add
add
popw
inc
cmp
xor
iret
ljmp
mov
add
mov
shl
outsb
sarb
push
adc
add
add
push
push
inc
or
or
inc
push
cmp
out
call
push
cmp
add
add
cmpsl
shlb
add
in
pop
lods
mov
adc
add
add
mov
lds
mov
addr16
loopne
fs
movsb
mov
push
movb
adc
movsb
out
addr16
mov
ljmp
mov
movsl
or
out
ret
inc
dec
rcr
pop
f2xm1
push
fs
cli
notb
inc
xor
xchg
loopne
pusha
and
jno
leave
and
add
mov
mov
shlb
push
test
nop
icebp
mov
and
push
xchg
or
mov
mov
cmp
xor
xchg
mov
dec
in
mov
int
fs
and
testb
inc
test
arpl
pop
in
pop
test
dec
push
mov
add
add
addl
sti
adcl
or
cmpsb
scas
mov
push
xchg
mov
mov
in
mov
aas
xchg
jns
xchg
pop
mov
int
gs
add
sarl
pop
aaa
and
pop
ss
xchg
test
lock
loop
and
gs
lods
adc
leave
movhps
push
cmp
lcall
pop
movl
jl
add
pop
mov
jno
in
ret
rolb
push
cmpsl
imul
jae
in
negl
test
jb
aaa
cmc
divl
insl
inc
push
pop
jge
xchg
loopew,pn
daa
inc
loope
mov
mov
push
mov
lds
movsl
daa
push
mov
push
and
jne
je
and
cmpsb
sub
in
pop
addl
addr16
adc
or
out
gs
push
popf
andb
fsub
int
cmc
icebp
subl
inc
rclb
ret
jne
je
xorl
stos
inc
out
or
add
add
xor
fs
aam
mov
nop
leave
insl
inc
cmp
push
rclb
dec
mov
add
add
mov
movsl
ret
mov
dec
mov
mov
arpl
mov
xchg
jecxz
mov
scas
sub
sub
inc
mov
out
xlat
aam
ss
pop
dec
mov
lahf
or
sbb
and
xchg
sub
cmpsb
shlb
push
add
rolb
add
add
daa
out
shll
add
lds
inc
and
out
xchg
adc
add
add
shr
add
stos
adc
in
inc
xorl
in
cmc
inc
dec
repz
stc
fnsave
shrl
xchg
push
outsb
in
xchg
push
sbb
insl
jno
sub
out
pushf
xor
dec
js
ret
incb
add
add
ds
std
and
arpl
and
rorl
loop
jmp
dec
push
push
scas
mov
int3
push
sbb
inc
jnp
xor
pop
mov
out
pushl
popl
pop
xor
out
add
aas
outsb
sub
movsl
or
testl
and
inc
and
xor
mov
jo
movsl
je
in
add
js
dec
insl
shll
shrl
imul
mulb
add
pop
sub
sbb
mov
mov
jb
cmpsl
adc
imul
dec
ds
pop
cwtl
roll
ja
stos
sbbl
add
add
pop
ja
loope
push
rcll
jecxz
gs
jne
dec
es
out
or
insb
daa
dec
mov
cmpb
cmpsb
push
loope
add
jno
dec
movsl
mov
loope
jae
add
add
insl
xor
rcr
insl
lods
adc
mov
out
jle
loop
mov
pop
xchg
out
lds
inc
sbb
test
push
mov
adc
mov
push
int3
inc
rcrb
mov
jecxz
jmp
push
jbe
add
fsts
pop
push
add
mov
out
push
or
pushf
xlat
xor
mov
in
pop
nop
add
lea
inc
sub
in
add
arpl
out
jle
in
inc
out
lret
sti
jno
lret
loop
out
xor
out
adc
out
sarb
int3
int3
int3
int3
movl
xchg
scas
jp
add
inc
aaa
outsb
adc
cltd
outsb
dec
lods
mov
pushf
xor
xor
and
mov
xor
add
fisttpl
cld
sbb
push
cmpsl
das
jle
stos
movsb
jbe
jp
out
enter
nop
xchg
gs
xorb
sbb
xor
adc
inc
imul
pop
adc
test
idivl
push
loope
mov
ret
add
add
add
inc
mov
adc
adc
add
xor
imul
pop
int
cld
mov
mov
push
cltd
and
pop
fisttpl
add
sub
sti
lods
ret
jne
or
mov
sbb
iret
add
add
mov
lret
out
sbb
adc
xor
sub
shlb
insl
xchg
sub
push
loop
sub
cld
mov
popf
inc
cltd
cmpsb
push
or
cs
fisubl
sub
xchg
mov
add
add
pop
add
cmp
push
scas
mov
mov
aam
xor
fwait
mov
and
pop
and
jne
push
or
clc
std
insl
notb
adc
jmp
or
sbb
cwtl
jl
ret
adc
cmp
mov
out
cmc
out
add
add
mov
mov
cmp
push
aaa
pusha
mov
stos
fldcw
add
jmp
mov
add
add
test
add
repnz
jl
inc
or
cmp
lods
enter
mov
lock
out
fldl
sbb
les
add
leave
arpl
add
mov
rclb
repnz
add
int3
int3
int3
inc
insl
cli
fs
cld
jae
adc
cmpsl
adcb
pop
push
bound
mov
cmpb
add
add
and
lcall
test
and
fs
push
inc
loopne
into
imul
xchg
daa
add
add
mov
gs
and
inc
add
pop
jne
pusha
bound
rorl
mov
sbb
mov
js
push
jle
dec
lds
push
and
lahf
in
icebp
pop
hlt
jbe
or
mov
out
leave
loop
rorb
mov
jns
pusha
cmpsb
xchg
je
inc
and
jne
sbb
testl
shrl
ds
repz
and
push
cmp
test
sbb
push
jno
mov
test
gs
sub
xor
add
add
out
pop
xchg
jo
inc
aad
cmpsb
pop
iret
push
lods
cld
lret
inc
into
or
or
outsl
mov
dec
adc
add
aas
adc
pop
push
add
add
decb
push
xchg
cwtl
icebp
dec
pop
aas
lret
call
jl
fmull
push
add
push
mov
cmp
sbb
mov
test
out
loopne
insb
or
dec
or
notb
sub
out
dec
cld
cmp
and
les
sbb
gs
and
add
loopne
mov
add
add
jecxz
add
and
divl
mov
mov
or
pop
xor
push
addr16
js
sbb
push
xor
sbb
and
sub
stc
lret
mov
and
mov
xchg
mov
les
add
add
mov
repz
lods
ret
mov
xchg
mov
pop
inc
mov
mov
int
insl
fdivrs
enter
mov
mov
data16
push
sbb
pop
outsl
push
pop
inc
jns
adc
enter
ljmp
and
add
add
stos
dec
mov
or
enter
loopne
jnp
lcall
out
das
int3
int3
int3
int3
int3
dec
fistps
frstor
bound
pop
mov
test
js
out
and
dec
scas
xchg
xlat
imul
or
sbb
out
cmpsb
xor
add
add
repnz
add
lods
sbbl
add
add
ljmp
jns
add
or
mov
int3
mov
mov
xchg
ja
jmp
add
sub
std
and
jp
sbb
sbb
sub
loopne
mov
iret
arpl
push
fwait
les
aaa
pop
mov
add
add
xchg
pop
dec
test
push
mov
pop
movsl
enter
lahf
cmp
ficoml
mov
adc
push
adc
adc
shlb
mov
jne
sub
and
add
or
gs
pop
or
rcrl
lods
dec
mov
sbb
add
data16
jg
inc
mov
adc
add
or
add
stos
mov
or
sbb
fdivl
cld
adc
mov
xor
cmp
sbb
insb
sti
adc
push
xchg
out
push
jno,pt
imul
scas
ret
mov
add
add
aad
rorb
dec
add
imul
aas
add
add
rolb
mov
lret
push
iret
jmp
xor
nop
push
lcall
jne
inc
sub
popl
popa
lret
bound
fsubrs
jl
out
sub
aam
jae
fisttpl
mov
xchg
pop
rorb
cmp
push
dec
shlb
fsubl
fdiv
lea
mov
cmp
rcll
mov
jns
jb
pop
mov
repz
inc
inc
fnstcw
inc
notb
mov
pop
cmp
cmp
cmp
cltd
mov
mov
and
lea
add
add
lret
sub
call
mov
and
pop
loopne
jb
sub
aaa
or
cwtl
mov
nopl
gs
or
cmp
gs
test
fnsave
mov
mov
pop
shrb
mov
add
add
mov
xchg
dec
xor
addl
jbe
inc
loopne
pop
lods
cmc
and
pushf
mov
cmpsl
imul
jecxz
jno
or
add
stos
pop
sti
push
and
aad
stos
scas
fisttpl
sbbb
mov
adc
enter
cmp
xor
aam
jmp
xchg
pop
or
test
ja
fwait
jne
sbb
ret
repnz
mov
mov
or
xchg
mov
daa
and
add
jno
add
push
ds
aaa
mov
loop
lock
mov
push
cli
push
test
and
movsb
pop
das
sbb
in
pushf
int3
dec
insb
add
add
add
fimuls
push
cmp
aad
fisttps
pop
mov
in
xor
xchg
sub
pop
mov
call
mov
cmp
bswap
int3
int3
int3
ds
filds
add
add
lret
and
pop
popf
xor
cmpsb
aad
xor
mov
in
xchg
stos
inc
adc
sbb
clc
push
insb
je
lea
int
inc
lcall
xchg
fiadds
add
fisttps
add
jmp
jmp
add
add
push
es
cld
jmp
into
mov
xchg
lret
xor
and
mov
add
add
hlt
push
lahf
fs
aaa
pop
test
decl
cmpsl
lea
notb
dec
fs
out
iret
xchg
cmpsl
and
insb
mov
sbbl
insb
jb
out
inc
xlat
mov
test
testb
mov
js
jecxz
ja
loop
cmp
add
mov
aam
xchg
call
sub
add
orb
dec
pop
dec
push
cmp
dec
dec
adc
repz
add
add
nop
mov
scas
out
pop
pop
push
out
xchg
sub
push
rcrl
jmp
dec
pop
xchg
outsl
in
testl
cld
subl
or
adc
fcoml
shrb
mov
or
or
add
add
add
xchg
jo
or
push
and
mov
add
add
call
mov
je
popa
cmp
data16
int3
xor
shll
mov
out
or
mov
dec
pop
and
int
addr16
dec
fildll
mov
add
push
mov
and
pushf
cwtl
mov
enter
mov
fisttpl
sub
dec
push
mov
sbb
aad
call
adc
popf
cwtl
outsb
je
pop
add
add
mov
mov
mov
shr
pop
mov
stc
idivb
mov
xchg
rolb
bound
loop
test
adc
xlat
adc
add
add
mov
mov
xor
lods
mov
cld
mov
sbb
mov
push
inc
push
pop
outsb
dec
sub
dec
sti
mov
cmp
mov
repnz
icebp
xchg
fdivrl
push
loopne
insb
jbe
or
fidivrl
mov
add
add
dec
insb
mov
and
jle
lea
xor
or
loopne
repz
es
scas
and
dec
pusha
push
inc
cmp
add
add
das
cmpsb
inc
xor
in
sbb
mov
scas
push
loopne
add
add
outsl
je
movsb
shlb
mov
jno
xchg
iret
cmc
jmp
in
xchg
cmp
imul
or
inc
jns
xor
mov
dec
ret
mov
xchg
pop
cmp
push
scas
and
int3
int3
int3
int3
int3
fnclex
aad
roll
mov
add
ds
cli
fdivp
mov
jne
jg
test
lds
adc
ljmp
push
cmpsl
sub
mov
les
aad
push
inc
ret
xor
add
add
std
jmp
push
xchg
hlt
mov
add
aas
imul
aam
sbb
push
pop
dec
test
icebp
lret
rorb
mov
add
iret
stos
push
inc
and
xchg
ss
bound
addr16
mov
inc
xor
psubusb
pop
sbb
mov
and
popf
popa
mov
int
lret
out
push
xlat
popl
mov
fldl
std
aas
dec
adc
mov
mov
sub
push
add
add
repnz
jae
mov
out
andl
xchg
ret
movsl
es
lret
mov
add
cmp
mov
scas
lea
repz
dec
ffreep
idivb
add
jne
xor
and
xchg
sub
add
add
lods
test
sahf
sahf
out
sbb
icebp
mov
xchg
mov
sub
push
xchg
jp
jo
lcall
iret
inc
add
jge
sbb
jb
ret
outsb
shl
push
jbe
dec
sti
push
loopne
pop
pop
arpl
mov
pop
mov
dec
ja
pop
add
add
dec
xor
and
adc
stos
dec
jnp
loopne
jnp
sub
clc
rclb
repz
and
movsl
rcrb
push
push
xor
adc
stc
loop
enter
nop
and
sti
roll
mov
icebp
or
add
add
arpl
pop
test
out
adc
nop
iret
pop
mov
cmp
out
add
add
mov
dec
cmp
push
faddl
pcmpeqd
out
les
add
add
pop
xor
xlat
pop
lahf
adc
out
jl
out
mov
sar
movsl
mov
push
pop
rol
fwait
push
jae
roll
xlat
mov
lcall
cmp
dec
cmp
testb
add
add
insb
test
nop
fwait
nop
xchg
jae
or
xor
cmpsb
mov
cmp
sub
shrb
pop
dec
lea
inc
call
ret
cmp
push
mov
adc
mov
add
or
nop
inc
mov
dec
adc
popa
mov
inc
cmp
inc
insl
push
and
orl
xchg
sbb
sub
add
add
int3
adc
repnz
je
loope
mov
mov
lods
cmpsl
mov
mov
adc
loope
mov
in
sarb
insl
add
loopne
mov
fbld
cmc
fdivs
inc
mov
add
push
dec
mov
mov
and
push
or
std
push
pop
xor
nop
sub
test
xchg
jae
pop
lock
mov
cmp
add
add
nop
inc
lock
push
push
sbb
cwtl
add
inc
or
dec
inc
int3
int3
int3
int3
andl
mov
ja
out
push
int3
pop
int3
daa
mov
add
xchg
pop
and
rorl
cmp
pop
mov
fidivl
adc
cwtl
cmpsl
mov
add
add
lahf
cmpsl
add
cmpxchg
sbb
and
sbb
jb
add
fdivrl
dec
mov
aas
xchg
stos
daa
add
cmp
jne
push
adc
lret
xor
in
hlt
mov
in
mov
ror
add
add
xor
js
xchg
push
call
nop
add
pop
stos
xchg
and
movsl
jne
mov
lret
ret
mov
adc
xlat
in
loope
popa
sub
and
jle
push
cmpsb
and
adc
sarl
cmpsl
rol
out
pop
jb
addl
repnz
out
xor
cmpsl
dec
mov
mov
mov
and
push
mov
sarb
push
xchg
xchg
addb
gs
int3
int3
int3
mov
and
xchg
add
adc
daa
dec
pop
test
std
adc
in
inc
jbe
xor
add
dec
pop
push
mov
and
subb
aaa
push
add
xor
cwtl
daa
or
sti
inc
or
shrl
add
add
add
xor
scas
pop
mov
sub
aaa
add
or
leave
or
out
cli
mov
add
add
icebp
lahf
jne
mov
lret
sarb
popa
sbb
adc
mov
and
jne
mov
add
vsqrtss
leave
test
or
mov
or
sub
or
push
shrl
push
lret
shll
xor
cli
loopne
xchg
xor
inc
xor
xchg
add
add
rorb
lods
cltd
push
loope
mov
xor
xor
jne
outsl
das
shl
rcrl
add
lcall
fmull
jns
in
sbb
adc
ret
and
cmpsb
in
add
add
add
aaa
idivl
sub
sbbl
push
jmp
enter
std
cmp
cmpl
xor
aas
ljmp
add
jne
mov
rorb
jae
jae
jb
shlb
pop
push
popa
fdivs
adc
lahf
inc
out
leave
and
imul
mov
jle
and
sbb
cwtl
pop
dec
lock
xchg
or
jne
dec
pop
xor
leave
and
sub
shll
inc
sub
jmp
loop
dec
aas
aad
and
push
cwtl
inc
fiadds
xchg
or
jb
push
mov
mov
xchg
lcall
jl
psadbw
cwtl
adc
add
in
test
lahf
adc
out
adc
rdtsc
jns
imul
add
or
mov
pop
sub
loop
xchg
popf
xor
sub
ja
push
aam
adc
sti
mov
add
and
incl
fucomp
cmpsl
hlt
push
lods
out
ret
inc
push
aaa
adcl
fidivrs
pop
mov
cmp
dec
aaa
popa
add
add
sub
cwtl
jne
xchg
add
test
test
jecxz
mov
xchg
mov
push
out
negb
add
add
pop
bound
adc
arpl
and
xor
xchg
in
add
insb
je
mov
adc
inc
cld
add
and
lret
mov
push
sbb
xchg
orb
addb
push
sbb
aas
cmpsl
mov
scas
xchg
dec
mov
movl
test
ret
add
es
or
add
add
daa
icebp
sub
adc
add
xor
add
xor
int3
int3
and
movzbl
dec
adc
and
outsb
clc
shrl
pusha
pop
loopne
inc
or
int3
jp
js
cltd
add
xchg
insb
rolb
add
cld
arpl
andb
xor
mov
sbb
add
xchg
gs
mov
push
xor
cmpsb
idiv
outsb
xor
xorb
xchg
add
in
subb
and
or
in
and
lds
jge
push
in
mov
addb
ja
xorl
add
les
xchg
adc
test
adc
and
adc
dec
xchg
adc
movsb
adc
mov
xchg
movsb
mov
add
fmull
xchg
shrl
outsl
or
mov
add
jno
add
jb
mov
adc
sbb
adc
pop
stos
jecxz
rclb
xor
ret
xor
xchg
ss
xor
and
movsb
sbb
lds
int
in
js
mov
dec
and
sub
add
or
dec
adc
pushf
inc
jle
and
push
xchg
adc
fisubrs
xchg
out
jmp
gs
mull
aad
call
add
loop
xchg
adc
xchg
inc
push
or
orb
arpl
add
add
or
sbb
adc
nop
sti
mov
jnp
orb
xchg
popf
stos
jecxz
bound
seto
addl
outsb
sarb
xor
sahf
mov
inc
inc
xor
xor
mov
sbb
imul
sarl
fistpll
jae
add
add
sbb
inc
pop
cmp
mov
sti
and
cld
add
adc
mov
add
cmc
test
or
sbb
outsl
loopne
arpl
sarl
xor
sahf
mov
pop
inc
lods
dec
mov
sub
mov
xchg
and
test
arpl
xchg
packssdw
cli
mov
es
push
and
add
xor
sub
add
add
in
ljmpw
mov
sub
adc
mov
sub
cwtl
addr16
add
add
mov
bts
sub
jb
mov
dec
cwtl
xchg
mov
hlt
xchg
jo
icebp
push
fidivrs
pop
fcompl
aaa
mov
je
sbb
dec
outsb
sahf
enter
lods
daa
pop
pop
xor
mov
inc
subb
jne
cwtl
dec
addr16
sub
das
pushf
lret
fisubs
sar
mov
mov
add
mov
scas
mov
rcrb
push
and
inc
sbb
mull
mov
mov
mov
xor
xchg
adc
xor
mov
test
rcrl
add
add
cwtl
mov
insl
adcb
and
inc
je
and
fsts
add
and
pop
mov
fistpll
pop
xor
xchg
fstps
mov
push
xchg
jge
dec
test
lock
and
sub
jp
mul
ds
push
xor
push
daa
mov
or
daa
mov
push
xlat
int3
push
mov
out
je
lahf
mov
inc
sbb
shlb
xlat
das
jl
in
data16
in
popa
int3
int3
int3
int3
in
pop
incl
add
add
mov
mov
jb
sbb
lahf
xchg
and
dec
push
push
xor
jb
xor
xchg
cmpsl
mov
inc
xchg
test
cwtl
cmp
icebp
out
mov
jmp
add
jge
inc
inc
jno
aaa
add
jmp
lcall
or
add
xor
dec
add
jecxz
xor
bound
xor
jmp
pop
jl
scas
iret
push
int3
push
loope
sarb
jmp
xor
jae
inc
dec
cs
fistps
test
adc
add
rcrb
mov
or
adcl
in
jb
data16
adc
rcl
loope
leave
je
into
ljmp
shrl
test
aad
fwait
icebp
push
out
enter
add
mov
mov
rorb
xchg
int
testl
rclb
xor
jecxz
test
addl
push
cmc
gs
les
lea
rcll
lret
add
fs
mov
push
out
es
xchg
inc
xlat
cmpsl
or
int
pushf
in
mov
lock
jne
push
xchg
in
add
lahf
jmp
jge
cwtl
pop
xor
es
scas
leave
pop
add
add
mov
mov
test
push
fiaddl
pop
and
cli
sbbl
xchg
sbb
xor
sbb
fstl
daa
pusha
sub
add
add
cld
jg
dec
into
rorb
insb
dec
cmc
out
push
mov
dec
add
add
mov
mov
movsl
mov
int3
int3
and
xor
inc
push
mov
lods
mov
add
xor
xchg
jo
push
cltd
push
cmpsl
popf
les
mov
dec
jbe
popa
enter
clc
push
daa
pushf
loope
out
out
loopne
jp
inc
clc
inc
adc
fcomp
cmp
push
xchg
jno
push
pushf
fbld
or
fildl
sub
mov
mov
xor
add
add
xlat
xchg
xor
push
movsb
pop
push
adc
adc
mov
dec
lods
and
pusha
icebp
stos
dec
xor
inc
pop
repz
inc
jb
loope
out
nop
lock
jae
pop
and
cli
xchg
adc
mov
pop
sub
jae
imull
add
inc
cld
rol
cli
push
inc
add
add
add
pop
adc
js
xchg
jne
fsubs
add
add
pop
push
xlat
shl
xchg
xchg
es
cld
filds
mov
add
lret
imul
or
inc
dec
sbb
das
out
lea
fst
es
cltd
addr16
and
or
dec
fwait
pop
data16
faddl
sbb
or
mov
shll
wrmsr
adc
inc
or
rcrl
and
lret
bswap
int3
int3
and
ret
fs
jb
push
mov
xchg
int
call
cmp
add
out
add
push
nop
rcrb
jae
mov
mov
inc
loopne
scas
xchg
jae
mov
inc
sub
in
mov
sbb
xor
mov
push
xor
dec
mov
adc
xchg
pop
aaa
xchg
repz
int
xchg
sbb
inc
xchg
or
push
rclb
movsl
jecxz
bound
ljmp
push
inc
push
aad
aas
loopne
loopne
add
add
int3
int3
leave
addr16
or
pop
jmp
mov
cmp
addr16
push
mov
je
xchg
lcall
xchg
insb
rorl
inc
enter
pop
das
sub
fstps
mov
add
add
movsb
push
push
jne
lahf
mov
pop
cld
rorl
subb
add
push
mov
jno
pop
xchg
movsl
in
iret
subl
movsb
mov
sbb
mov
jge
in
add
je
xorb
dec
aad
hlt
repnz
ret
fidivrl
fcmovne
and
pop
xorl
sub
fwait
pop
xor
and
movb
sbbb
fnstsw
jmp
out
test
add
add
hlt
mov
pop
rolb
aas
cmp
mov
fcompl
mov
and
push
push
or
mov
jge
sbb
mov
mov
mov
or
mov
pop
ja
add
je
push
cmc
mov
out
mov
or
inc
lock
push
and
cmc
test
mov
mov
mov
mov
into
lods
in
in
jbe
mov
xchg
pop
shrl
repnz
rolb
inc
and
or
push
jns
jbe
add
xor
outsl
dec
cmp
jo
pop
fwait
add
pop
arpl
icebp
test
mov
sbb
sbb
or
pop
lds
addl
add
test
enter
and
cs
cmpsl
test
sbb
xor
adc
push
decb
push
push
push
push
dec
sub
sub
xchg
mov
xchg
xor
into
mov
sub
lods
or
mov
out
add
add
xor
jle
and
out
repz
dec
mov
pop
mov
ss
push
cld
cmp
int
rcr
daa
les
add
adc
hlt
fs
xorb
mov
jmp
or
out
outsl
aas
fs
sub
cmp
psubq
inc
inc
hlt
out
mov
clc
xchg
inc
cli
inc
dec
xorl
shll
popa
sub
ficoms
jmp
push
and
add
add
or
lods
and
cmpsl
adc
ficoms
lea
aad
sub
aaa
add
xchg
jl
in
mov
cmc
xchg
xor
mov
pop
stc
mov
mov
sbbl
and
sub
inc
sbb
repz
jge
repnz
xchg
jle
lock
in
icebp
push
repz
sbb
popa
out
dec
jnp
addr16
int3
int3
int3
int3
adc
push
in
push
xchg
xor
in
cmp
mov
repz
imul
adc
push
xchg
es
test
pop
mov
dec
xor
add
add
negl
in
adc
in
and
fldcw
lods
sbbl
sbb
cmc
cmpsl
and
xor
je
push
push
cli
repz
movsl
mov
xor
add
add
push
xor
inc
filds
clc
sub
loop
sti
fmuls
or
out
hlt
es
pusha
inc
incl
add
jns
stc
out
and
sub
imull
push
inc
and
mov
fadd
ljmp
dec
push
loope
scas
daa
cltd
dec
ret
mov
adc
inc
sbb
jmp
adc
add
mov
bound
insb
imul
loopne
fbstp
mov
mov
stos
pop
inc
lods
mov
jp
jg
and
test
dec
cmp
add
sbb
push
in
daa
push
xchg
outsb
add
pop
pop
add
enter
push
add
add
inc
add
shll
jae
into
jbe
sbb
or
sbb
xchg
ljmp
add
inc
shrl
push
icebp
xor
cmp
and
aas
xlat
fcompl
add
add
ljmp
cltd
jno
pop
mov
xor
mov
dec
mov
add
xlat
test
xchg
mov
cmp
aaa
loopne
fs
ret
mov
adc
xchg
fists
shlb
cmc
imul
sbb
mov
add
or
sub
adc
pop
inc
pop
test
mov
add
add
add
jnp
jno
movsb
adc
mov
fucomip
adc
pop
cltd
jnp
mov
cwtl
jnp
mov
mov
cmpsl
loop
fnsave
frstor
cmp
and
jns
push
add
imulb
or
popa
cmpsl
je
dec
jb
jbe
mov
pop
xchg
loope
sbb
cmpsb
cs
rcll
xchg
addr16
cmp
ja
stc
pop
adc
xor
popf
or
fcom
shr
xlat
repz
orl
mov
imul
rcr
mov
xchg
test
loop
out
je
pop
repnz
in
lret
cmp
push
out
out
add
jmp
xor
push
jl
hlt
sar
push
cmp
rclb
fdivrs
dec
mov
in
jl
outsl
insb
mov
xchg
add
add
aam
faddl
xor
adc
je
and
xchg
ret
stc
inc
int
stc
sbb
shlb
add
add
out
add
aad
sbb
shl
imul
in
loop
push
add
add
inc
out
push
testl
jg
mov
or
test
push
sbb
movsl
je
adc
insl
popa
mov
add
add
ljmp
inc
mov
arpl
xlat
pop
xchg
xor
add
jl
repz
aam
push
addr16
xor
stc
inc
cmp
and
test
xchg
leave
imul
xchg
sbb
lret
jge
test
mov
lods
xor
ret
add
test
leave
stc
mov
fcomps
xor
dec
pop
mov
mov
das
xchg
clc
aad
insl
add
add
clc
lock
and
and
or
adc
sub
rol
inc
lock
push
push
add
add
add
and
sbb
cli
dec
dec
mov
movsl
or
push
sbb
push
int3
pop
dec
jle
cltd
popf
cmp
int3
or
imul
ljmpw
and
add
test
adc
sub
dec
div
lea
in
xor
imulb
xchg
ret
jne
add
jbe
inc
sti
inc
add
lods
rolb
add
add
in
mov
mov
iret
adc
aaa
xchg
mov
jb
pop
xchg
or
out
jae
lock
jp
aaa
dec
mov
jae
inc
mov
adc
pop
jns
test
mov
jb
adc
add
push
js
lods
ret
pop
jl
or
or
xlat
dec
mov
out
ljmp
add
mov
xchg
fsubrs
repnz
fs
dec
and
mov
xor
inc
fisubs
jmp
outsb
push
pop
call
clc
movsb
test
out
int3
mov
add
fwait
pop
pusha
xchg
aad
int
push
mov
mov
incl
add
jg
pop
movsl
stc
cld
cwtl
hlt
stos
roll
mov
lock
cmp
sbb
out
cmpsb
mov
fdivl
xor
icebp
cmpsl
les
dec
lock
es
or
mov
push
push
jns
push
int3
popf
add
adc
mov
out
mov
add
push
daa
pop
or
repz
fsubp
add
add
outsl
mov
pop
xor
jnp
mov
rcl
mov
divb
push
movsl
sahf
enter
ret
pop
lods
int3
int3
int3
int3
pop
push
ds
add
add
out
data16
jne
inc
mov
pop
adc
std
mov
stc
xor
add
add
jno
adc
sbb
call
subb
imul
scas
es
cmpl
mov
mov
ret
movsl
in
fs
mov
jl
mov
int
jg
xchg
ds
jmp
push
xchg
sub
sub
ljmp
add
add
jb
imul
ss
and
scas
lret
mov
icebp
xchg
popf
inc
jne
popa
xor
jmp
push
sub
add
add
sbb
int3
push
adc
rclb
xchg
ret
das
hlt
cmp
jno
push
hlt
outsb
loopne
adc
xchg
ret
addr16
scas
inc
sub
push
iret
mov
cmp
sub
mov
addr16
repz
negl
add
xor
xchg
aad
lcall
or
or
ja
imul
xor
mov
jno
out
xchg
xor
mov
inc
sub
xchg
xor
in
das
cli
inc
iret
fldcw
aam
adc
in
ja
cmp
jae
nop
xorl
ret
lds
jb
rclb
loope
fnsave
fsub
repnz
gs
mov
or
shlb
scas
aas
push
loop
add
add
push
or
xchg
lret
jnp
fsub
and
int3
push
pop
and
je
add
add
xchg
outsl
les
adc
sbb
lds
gs
add
mov
inc
mov
push
add
mov
inc
movsl
adc
adc
loop
les
out
add
add
dec
fadds
xchg
daa
mov
fldt
inc
ret
sarb
gs
dec
ret
sbb
mov
inc
addr16
sbb
pop
push
arpl
adc
loop
add
mov
mov
jb
idivl
out
test
jl
dec
mov
aad
mov
in
cmc
pop
mov
les
sbb
insb
add
add
insb
sub
sbb
mov
add
int
test
push
lods
cli
mov
cmc
cmp
fiadds
jo
aas
out
xlat
xor
jmp
pop
sbb
lods
aaa
and
jae
das
push
fdivrl
aas
jno
mov
add
shlb
add
add
lcall
inc
xchg
in
or
mov
sbb
adc
mov
js
lahf
dec
fiaddl
stos
dec
adc
xor
cmc
mov
push
cs
push
inc
inc
cltd
and
daa
sbb
sti
inc
aaa
movsl
movsl
and
add
add
jo
adc
or
jg
ret
sbb
xlat
xchg
mov
fsubs
mov
jmp
ret
mov
jnp
orl
in
test
mov
cmp
add
add
pop
adc
mov
cmp
and
mov
frstor
mov
daa
xchg
xchg
call
fiadds
adc
adc
ret
push
pop
cmp
dec
sbb
mov
pushf
call
add
add
sbb
jb
cmc
inc
fistps
icebp
in
inc
adc
fsts
inc
pop
mov
sbb
fwait
lea
xor
in
and
or
add
fsubp
pusha
cmp
nop
dec
ljmp
fidivs
push
lods
push
inc
aaa
mov
xlat
repnz
xchg
xor
adc
js
mov
and
mov
xor
andb
lds
test
rclb
jmp
adc
push
pusha
push
sbb
mov
idiv
sub
xchg
into
dec
jb
xor
imul
aas
pop
in
mov
add
add
lcall
or
inc
jmp
int3
int3
int3
pop
or
add
add
sbb
fnstcw
aaa
cwtl
inc
sub
daa
sar
movsb
ret
bnd
cmp
xchg
addr16
subb
add
add
inc
jmp
xchg
scas
inc
jle
push
pop
xchg
push
daa
add
add
test
dec
mov
cmpsl
sbb
or
insl
jne
pop
in
xchg
int
not
mov
add
add
icebp
xor
adc
xchg
dec
push
cmpsb
fldenv
je
jb
mov
add
idivb
jecxz
dec
shlb
push
out
popa
dec
and
pusha
inc
mov
loopne
push
mulb
jo
or
hlt
inc
fiadds
mov
dec
dec
repz
fs
movsl
outsb
inc
cmp
aad
jmp
shrl
dec
sahf
jae
pushf
fldl
add
add
add
xchg
inc
fdivl
sub
adc
mov
sbbb
add
shll
push
in
frstor
imul
xor
push
sbb
push
sub
xor
xorl
pop
sub
incb
loopne
pop
lods
mov
clc
mov
loope
out
int3
int3
int3
int3
les
cli
mov
add
add
fwait
push
mov
pop
data16
popa
xchg
add
je
dec
pop
pop
adc
add
ficomps
js
jo
push
sbb
mov
sti
mov
imul
dec
aaa
inc
nop
leave
cmp
ljmp
adc
lods
repnz
adc
add
add
out
push
lcall
and
arpl
movsl
enter
inc
ret
add
add
pusha
stos
pop
mov
lret
or
gs
movsb
movsb
add
insb
gs
cmpsb
hlt
imul
xor
sbb
testl
outsl
aas
pusha
rcl
push
imul
cwtl
inc
dec
xlat
sbb
add
in
stc
push
std
pushf
enter
in
les
sbb
add
sub
add
inc
pop
jge
popf
xchg
inc
cwtl
jo
xor
popf
ffreep
popf
lret
xchg
dec
in
rcrb
push
jne
mul
mov
daa
and
frstor
cmp
mov
push
lock
sub
jo
test
int3
jl
mov
call
xchg
adc
test
sub
out
jns
dec
daa
jns
or
divb
sbb
add
add
adc
fsubrs
sar
mov
add
push
mov
jg
rorl
xchg
mov
dec
std
mov
int3
test
add
lret
js
outsl
mov
xor
dec
adc
sbb
jno
pop
cmp
xchg
add
out
add
jne
clc
lea
xlat
ret
fsubrp
sarb
insl
repz
lret
std
add
add
mov
or
mov
jmp
mov
ljmp
add
pop
sahf
fcoml
orb
xchg
add
dec
inc
adc
xor
jg
jl
insb
mov
lods
popa
jae
addb
pop
add
add
add
inc
daa
mov
in
iret
imul
rcrl
add
add
push
and
mov
daa
std
xchg
pop
test
add
mov
add
stc
jg
into
scas
fiadds
jge
outsb
in
dec
jp
push
push
fcomi
fsubl
pop
push
push
xor
mov
ja
push
xchg
rclb
fisttpll
mov
sub
test
jb
dec
ficoml
add
aad
mov
inc
popf
sbb
jno
sbb
mov
inc
pop
sub
divl
mov
clc
ss
ja
fistps
hlt
inc
psrad
mull
jo
mov
mov
je
cmpsl
push
fnsave
adc
data16
mov
inc
pop
xchg
movlps
mov
push
scas
pusha
sbb
add
pop
imul
push
jno
movsl
ffree
inc
adc
sub
push
cmpb
fcmovbe
imul
adc
roll
lods
push
cmpsb
arpl
roll
mov
sub
inc
cli
sbb
int3
int3
int3
movl
push
cltd
adc
jge
push
mov
add
imul
xor
faddl
jb
scas
rcr
mov
and
fidivrs
dec
es
jcxz
test
fisubl
pop
shlb
mov
mov
dec
popa
add
xchg
inc
loop
dec
addb
inc
xor
mov
dec
mov
icebp
std
mov
std
stos
les
jbe
nop
jl
das
or
cmp
aaa
pop
les
push
xchg
mov
clc
imul
push
mov
lods
pop
add
add
push
xor
inc
xor
roll
add
add
and
xchg
insb
push
imul
test
pop
mov
sub
dec
into
ljmp
cli
pop
ficompl
bound
add
add
hlt
mov
aas
jp
xchg
cmp
jmp
repnz
add
ret
out
les
test
lods
pop
and
inc
xchg
cmpsb
cltd
stc
shl
jmp
add
add
mov
arpl
adc
jnp
mov
lods
add
dec
adc
shrl
popa
in
lcall
mov
jns
aaa
in
inc
adc
sub
lods
pop
dec
xchg
sarl
inc
into
jo
mov
push
movsl
add
add
dec
cmpsl
inc
fs
push
test
outsl
ljmp
ja
lods
rorb
mov
mov
mov
pop
dec
lret
xor
roll
add
add
lds
stc
jb
lock
and
dec
xchg
add
add
inc
pop
repnz
push
inc
aam
out
lcall
add
rolb
outsl
in
adc
jecxz
lret
pop
xchg
mov
sub
sub
shr
pop
negl
mov
jle
adc
dec
outsb
jbe
dec
pop
or
mov
fwait
ss
lock
jne
and
add
outsl
cltd
aad
dec
adc
pop
out
xchg
mov
dec
loopne
cmp
adc
push
loopne
sarl
add
add
ja
test
xchg
call
in
adc
icebp
loope
cmpsb
outsb
lret
lahf
fisttpll
sbb
loope
xchg
push
mov
inc
mov
mov
inc
xchg
jp
push
cwtl
aas
add
int3
leave
ret
fmul
int3
int3
int3
int3
jmp
loope
outsl
int
aas
or
ljmp
inc
scas
add
add
sub
xchg
cmc
pusha
sub
loopne
dec
and
fs
lahf
cmc
cmp
sahf
cwtl
dec
scas
add
add
cld
sbb
add
and
sarb
js
ja
psubsb
lds
sub
inc
ret
mov
pop
push
inc
sbb
sub
daa
hlt
xor
flds
outsb
sub
pop
and
mov
add
add
cmp
mov
enter
adcb
mov
shrb
pop
add
add
inc
jmp
lods
fwait
push
mov
mov
xchg
out
sahf
and
xchg
aam
or
adc
lret
sub
add
mov
addl
dec
icebp
pop
adc
stos
enter
sub
stc
arpl
push
dec
shll
fnstenv
mov
mov
inc
mov
pop
xchg
and
pop
add
movsb
out
or
dec
add
add
xchg
xor
dec
jne
insb
jmp
push
add
jb
pop
icebp
mov
mov
and
adc
and
leave
adc
mov
shll
pop
test
xlat
push
adc
mov
dec
add
add
imul
stc
repz
lea
sub
push
pop
add
dec
mov
add
jle
dec
out
mov
xlat
mov
and
cmp
shl
stos
lds
in
jg
cmc
jbe
add
mov
mov
push
sub
call
mov
les
ljmp
aas
sarb
inc
popf
sbb
adc
jp
icebp
lret
es
out
lahf
jecxz
jmp
add
arpl
inc
dec
xor
mov
push
and
ljmp
and
add
bound
loop
push
add
mov
cmp
repnz
shlb
in
push
adcl
bound
mov
xchg
or
in
push
jns
and
dec
jecxz
aas
push
mov
push
add
add
incl
lock
push
add
adc
ret
fs
inc
sub
push
fmull
pop
add
test
add
add
adc
fildll
xor
fs
sub
push
aas
adc
or
dec
and
xor
cmpsb
mov
add
add
mov
loopne
mov
add
fldcw
sti
dec
adc
add
xchg
cmc
outsl
cmpsb
push
sub
shlb
or
add
or
mov
lods
test
xchg
jnp
dec
xor
xchg
insl
divl
jl
xchg
adc
in
roll
xor
icebp
out
sub
inc
aam
add
pop
xorl
daa
adc
add
add
loope
in
lds
push
sbb
cli
inc
xchg
popf
mov
je
sbb
ret
pop
add
xchg
ss
and
aam
mov
inc
jmp
pop
push
neg
cwtl
xor
pop
insl
push
push
dec
inc
pusha
xor
add
into
or
inc
mov
push
int3
int3
int3
int3
dec
outsl
xchg
jecxz
cwtl
push
in
cmp
loope
add
add
cmc
add
sti
cmpsw
lea
mov
mov
subl
pop
loop
dec
dec
pushf
pop
out
lds
cmc
cmpsl
cltd
hlt
lds
and
orl
daa
xchg
mov
outsb
popa
and
popa
cli
enter
xchg
sbb
push
cmp
adc
jp
add
add
imul
sbb
ja
push
in
pop
pusha
fnstsw
add
pop
cmp
xchg
sbb
xchg
inc
mov
sti
inc
add
add
mul
cmp
stos
adc
add
xchg
fldenv
xchg
mov
lds
push
and
lahf
jg
add
add
mov
mov
fdivrp
test
out
rclb
rcll
push
std
lcall
lahf
cmpsb
pushf
pop
lcall
adc
inc
mov
add
add
dec
jbe
xor
jae
ss
sub
in
xor
in
fiadds
xchg
add
div
popa
sub
out
out
aad
les
adc
dec
mov
and
add
add
add
int3
int3
int3
int3
cmp
mov
stc
mov
nop
cltd
add
add
push
fldt
push
adc
inc
add
insb
inc
mov
fs
sbb
adc
ret
mov
call
dec
out
and
xchg
popf
push
xor
ljmp
add
mov
inc
mov
es
jge
adc
and
add
add
mov
push
lahf
and
cmp
xchg
mov
mov
test
mov
insl
push
adc
pusha
es
xchg
arpl
jecxz
shl
in
sahf
mov
pop
pop
pop
xchg
ss
int
out
int3
xchg
mov
mov
int3
testl
add
pop
clc
dec
lock
inc
sub
movsb
in
bound
xchg
and
repz
js
add
mov
xor
push
pop
sbb
adc
pushw
inc
stos
mov
push
les
out
mov
adc
dec
rcll
jae
add
add
add
fiadds
sub
js
push
aad
xor
pusha
pushf
movsl
jecxz
nop
rclb
rorb
push
push
inc
pusha
jae
inc
xchg
addr16
jg
jo
movsb
add
add
std
pop
jne
movsl
xchg
adc
shrl
in
lret
dec
iret
xchg
nop
and
icebp
inc
mov
inc
dec
cs
fnstcw
sbb
adc
add
dec
adc
pop
cmpsb
punpckhwd
jge
or
scas
add
add
test
or
int3
int3
int3
lret
pusha
outsl
rcrl
xchg
jo
dec
mov
or
outsb
sbb
mov
into
xchg
jl
mov
filds
xlat
sarb
fimull
cwtl
jo
lret
mov
or
or
lods
filds
add
add
loop
mov
or
mov
stos
gs
test
xor
mov
mov
jne
sub
fisttpll
mov
enter
xchg
cmp
add
leave
into
jle
sub
rcrl
jns
jmp
mov
test
adc
xchg
data16
push
and
cld
pop
mov
or
repz
or
and
fwait
mov
jnp
sti
pop
cmp
add
std
into
pop
cmpsl
and
push
mov
dec
bound
rcr
or
arpl
ljmp
scas
sbb
imul
ret
and
cmp
sub
cmp
sbb
enter
add
add
sub
lea
mov
insb
dec
xorl
cmp
pusha
sub
pushf
fisttpl
and
or
pop
nop
or
pop
ja
xchg
cmp
out
add
out
std
add
push
cmp
int
testl
add
jae
cld
pushf
cmp
dec
sbb
fwait
stos
adc
fwait
inc
mov
fnstcw
mov
hlt
jp
sbb
or
add
add
sub
rcrl
divb
outsb
xlat
ljmp
movsb
in
cld
xchg
in
ljmp
rcr
int3
add
add
jno
fistpl
xorl
stc
pop
imul
test
mov
sub
aam
out
add
ret
in
dec
pop
or
cmp
mov
ret
in
sub
sub
inc
cs
scas
fdivl
fcmovnu
shr
inc
xchg
xchg
and
cld
dec
add
stos
addr16
insl
aam
pop
jae
add
nop
ficoms
add
add
les
gs
dec
jecxz
xchg
push
movsl
ljmp
rorb
lods
xchg
and
mov
add
xor
mov
inc
add
add
add
es
std
mov
push
or
out
add
cmp
fsub
mov
dec
out
rcrl
aad
mov
int3
int3
roll
test
mov
sbb
sbb
sub
sti
push
jl
jnp
sub
aas
add
mov
fwait
dec
mov
mov
add
add
jle
mov
subl
push
cmp
cmp
pop
push
mov
std
lahf
ss
mov
dec
test
int
push
dec
fwait
jbe
js
xor
scas
outsl
mov
shrb
add
add
mov
lahf
insl
dec
jl
outsl
xor
pop
adc
sbb
scas
jo
xchg
in
ret
in
xor
push
addb
addr16
xor
scas
inc
push
adc
test
and
add
xor
add
outsb
out
xchg
or
and
sub
out
mov
or
mov
jg
loopne
mov
movsl
repz
mov
loop
inc
mov
cmpsb
sti
scas
loop
xchg
test
in
les
pusha
shll
xlat
cmp
jno
nop
data16
adc
bnd
cmc
scas
fiadds
jecxz
jmp
adc
scas
pusha
and
sub
sub
cs
rcr
cmp
add
add
fisubl
cmp
dec
or
push
jb
sbb
push
ds
stos
add
insb
mov
popa
imul
or
xchg
aas
in
lret
icebp
push
mov
lock
push
add
arpl
imul
add
add
fldcw
mov
jae
mov
movsl
add
cmpsl
lea
and
std
scas
into
xor
dec
sbb
pop
mov
arpl
aas
mov
jne
sbb
popa
cli
div
adc
cmpl
aas
imull
jo
jl
loopne
aas
mov
cmpsb
xor
out
fists
sub
push
inc
aad
addb
cmc
mov
mov
sub
and
test
shll
mov
cmp
cmp
sbb
std
scas
lods
add
add
pop
in
sub
loope
aam
popa
xor
stos
nop
adc
in
ss
int3
int3
int3
push
add
add
jb
int
cwtl
lods
mov
jle
ret
mov
ffreep
add
add
xchg
add
add
and
add
pop
imul
xchg
fwait
ret
mov
cmc
int
lock
lret
cld
xor
inc
faddl
add
inc
lret
dec
mov
push
lret
mov
fwait
cmp
jbe
or
mov
add
mov
jmp
xor
in
flds
jp
mov
add
test
lods
dec
cmp
bound
ss
push
insl
repnz
adc
in
fs
test
add
das
testl
fidivs
lret
and
add
add
pushf
repz
iret
stos
loope
jge
imul
mov
and
mov
jle
icebp
dec
imul
sti
inc
mov
clc
xor
add
ljmp
enter
test
add
leave
je
notl
dec
mov
sbbb
aam
dec
std
popa
and
loop
pop
js
jl
cmc
arpl
pop
pusha
fsubrl
scas
sahf
or
add
push
out
call
add
lods
cmp
sbb
cwtl
cmp
cmp
add
into
sub
in
pop
push
cwtl
inc
push
adc
in
sub
dec
lret
add
out
das
andb
mov
jecxz
xor
xchg
inc
movsb
inc
adc
xor
das
adc
xlat
adc
jne
repz
add
sub
inc
rclb
push
in
out
adc
add
jp
outsb
or
inc
sub
xor
out
bnd
mov
or
xchg
clts
ja
shll
and
es
dec
sbb
imul
mov
lret
xor
sbbb
lock
ret
test
sub
add
add
cmp
jge
sbb
dec
incl
std
add
popf
xor
pushf
xor
jae
adc
mov
push
xchg
call
inc
mov
in
jmp
inc
scas
xchg
cmp
pop
filds
into
cld
cmp
mov
into
mov
cmp
push
pop
daa
mov
int3
int3
sub
in
add
add
mov
and
sbb
ret
pop
lahf
shrb
jecxz
roll
push
aad
pop
cmp
out
xchg
sbb
cmpsb
pop
mov
add
bound
sub
jge
hlt
aaa
lret
lock
fbstp
movsb
mov
inc
sarb
ljmp
add
push
fcoml
std
mov
adc
ret
incl
or
push
jns
push
dec
xor
add
add
aad
aad
lret
pop
in
shr
and
mov
add
add
test
loope
aaa
mov
mov
data16
mov
mov
mov
in
aaa
test
lods
cli
add
gs
imul
pop
lods
xchg
mov
in
pushf
mov
aam
es
shll
dec
call
mov
add
testl
and
sub
int
stos
xor
add
add
xchg
sarl
out
iret
push
loope
or
adc
add
jns
mov
and
hlt
popa
mov
jmp
les
cmc
imul
loopne
mov
inc
out
add
add
hlt
jge
ret
jo
leave
push
in
popa
jp
mov
or
sub
adc
mov
insl
lret
and
cltd
imul
rorb
pop
out
inc
add
add
jmp
loopne
push
iret
cmp
test
sbb
xchg
or
adc
aam
pusha
daa
aam
mov
xchg
fmuls
addb
mov
insl
js
xchg
mov
adc
cmpsb
cwtl
adc
pop
roll
add
or
movsb
arpl
push
loope
push
cmc
mov
inc
fimuls
sbb
adcl
push
push
repz
xor
inc
and
cmpl
pop
orb
dec
rol
and
push
cmc
pop
xor
aad
pusha
add
add
sahf
or
sub
sbb
loopne
stos
mov
cli
pop
jp
sub
ds
jp
mov
arpl
add
fmull
fwait
push
inc
or
aas
jae
mov
jo
sbb
push
jo
data16
stos
lods
out
jle
mov
jl
arpl
push
add
add
mov
pop
out
ss
xchg
lods
mov
in
cmp
addr16
xchg
mov
ror
cmpsl
test
sbb
and
push
sub
clc
rorl
mov
divl
into
xchg
cmp
xchg
rcrl
xor
add
add
rclb
inc
movsl
cmpsb
jg
fdiv
and
add
mov
hlt
pop
sub
add
add
or
mov
jl
imul
pop
pop
adc
mov
xorb
xchg
xchg
adc
mov
lods
pop
jecxz
sbb
lcall
cmp
or
jmp
push
in
mov
cvttps2pi
ja
adc
sub
add
add
add
shll
pushf
mov
push
out
add
cmp
xor
push
mov
mov
xchg
aam
xor
in
pop
popf
arpl
fdivrp
push
imul
mov
fdivrl
pushf
pop
cmovle
cli
out
dec
pop
jp
or
int3
arpl
push
cwtl
fildll
test
stc
ljmp
mov
pushf
bound
sahf
stos
and
mov
testb
cmp
lret
cmp
push
mov
stos
push
mov
sub
in
mov
mov
mov
jnp
sub
pushf
cmp
push
jns
les
add
add
mov
mov
dec
jbe
and
ror
mov
pop
xor
cmpsl
mov
xchg
data16
mov
leave
jle
xor
dec
loop
xor
add
xor
data16
jge
adc
sti
xor
xchg
or
xchg
or
insl
movsb
sbb
fistps
movsb
sub
push
inc
test
push
push
mov
ss
sub
add
sbb
pushf
add
add
rorb
mov
add
mov
add
xchg
and
add
add
add
add
xchg
xchg
xor
mov
in
clc
jno
daa
jecxz
aaa
inc
jmp
stos
xchg
bswap
pop
mov
mov
or
fidivrl
hlt
lock
lahf
pop
call
movsb
cli
call
lock
pop
push
mov
imul
test
sub
inc
jbe
add
add
cmpsb
cmp
xor
popf
and
fs
sahf
mov
xchg
lret
ficomps
int3
int3
int3
fwait
inc
pushf
lods
sahf
push
xchg
subl
out
ret
negl
xor
shlb
dec
inc
mov
cs
out
shl
in
xchg
and
jb
sbbb
add
add
mov
adc
dec
inc
lret
outsb
xchg
inc
dec
fistl
in
fnstsw
push
or
add
add
cmp
mov
mov
adc
shld
add
push
in
mov
xchg
adc
pop
fs
xchg
xor
cltd
addr16
fxch
ja
loopne
add
add
repz
xorl
push
push
add
jnp
enter
repz
jmp
les
add
cltd
xor
lcall
add
lods
inc
jp
sarl
pop
push
mov
popf
dec
push
mov
cmp
pop
out
orb
jmp
fnstenv
gs
repz
push
sub
cmc
cmp
fidivrs
orb
adc
jo
in
jmp
xchg
in
testl
add
loopne
in
fwait
dec
xorb
and
ret
push
int3
xor
inc
pop
adc
imul
scas
repnz
mov
add
add
fcmovnbe
clc
and
int
mov
or
aad
insb
dec
jbe
in
test
adc
adc
loopne
int3
aaa
pop
out
add
pop
dec
inc
jl
push
add
add
jbe
clts
push
fdivrs
imul
inc
add
pop
push
js
fcomp
or
aaa
adc
add
jl
popf
popa
mov
sbb
outsl
cmp
xor
mov
jae
add
xchg
mov
enter
add
das
imul
adc
out
adc
mov
inc
stc
pop
mov
imul
repz
in
in
clc
push
aas
iret
jge
int3
int3
int3
or
ljmp
xchg
xor
xchg
xchg
outsl
mov
movsb
fisubs
fildll
rclb
push
fwait
add
cmp
pop
jo
add
andl
out
pusha
sub
test
das
push
leave
test
mov
and
leave
sbb
fisttpl
leave
lcall
xchg
fisubrl
pop
scas
ficoms
mov
and
mov
nop
jae
lcall
addr16
mov
or
add
add
shll
test
outsl
mov
imul
or
cmpsl
mov
and
add
sub
ss
add
ret
jne
in
xchg
inc
andb
sbb
ret
repnz
cmp
adc
or
testb
add
shlb
pop
pop
push
push
inc
or
inc
out
arpl
add
out
push
cli
xchg
decb
mov
xlat
mov
rolb
add
xor
in
xchg
data16
and
or
jl
ret
ja
repz
mov
xchg
repz
xor
push
addr16
xor
dec
mov
aas
insl
xor
stc
pushf
mov
hlt
lret
addl
cmp
add
or
jnp
cmp
scas
jge
mov
sbb
adc
mov
fiaddl
mov
add
mov
idiv
or
sbbb
mov
adc
or
mov
outsl
pop
insl
dec
daa
sbb
xchg
cmp
sub
sub
xchg
dec
mov
jl
lods
gs
daa
jmp
jge
jnp
sub
imul
xlat
pop
into
or
pop
adc
mov
dec
notl
mov
lods
adc
jecxz
add
jo
mov
jmp
cltd
fs
gs
loop
add
add
or
rcll
test
mov
dec
pop
xor
cld
sbb
inc
lds
lods
cmp
xchg
pop
loope
fsub
push
push
and
push
hlt
bnd
mov
jg
jno
dec
lock
pop
shl
shrl
add
loopne
add
leave
adc
add
add
mov
add
xchg
stc
push
xor
push
adc
popa
push
push
mov
into
addb
or
adc
dec
jae
int3
int3
int3
stc
pop
and
in
sbb
ja
lcall
cmp
mov
or
add
add
addr16
orb
shll
pop
xchg
push
test
add
mov
push
lret
mov
push
jae
jg
out
addr16
add
adcb
push
jb
xchg
out
fwait
mov
daa
pop
xor
lods
orl
addr16
test
mov
insb
add
mul
inc
adc
std
add
add
mov
sti
xchg
cmp
filds
jp
insl
ret
cmp
and
xor
inc
push
and
fcomps
loop
jns
pop
xor
vandps
lret
sbb
aas
les
js
je
pop
in
aas
jg
ja
js
xor
add
aad
xchg
adc
mov
test
mov
rcrl
filds
add
add
lds
jp
out
ja
icebp
stos
mov
cmc
push
cli
mov
add
fs
and
test
dec
push
mov
pop
jb
aas
mov
inc
mov
and
mov
xchg
and
jbe
push
out
loopne
in
outsb
mov
addr16
add
test
int3
int3
pusha
add
add
mov
add
inc
outsb
outsl
sbb
inc
jae
gs
jns
mov
mov
push
mov
sbb
inc
hlt
cmp
jp
sbb
jnp
es
lock
sar
adc
rcrl
mov
push
fildll
cmp
inc
popf
sub
add
add
or
jnp
orl
mov
dec
rcr
movsb
jg
mov
xor
add
and
mov
in
inc
fimuls
mov
pop
arpl
pop
and
pop
sbb
aas
lcall
jg
mov
xor
mov
xorb
add
loopne
cmp
fst
or
xchg
repz
aad
jg
mov
xor
test
add
outsl
or
repz
divl
cmpsl
addl
mov
mov
adc
inc
loope
in
lods
out
dec
mov
xchg
xor
movsl
adc
pop
ror
jecxz
mov
cmc
fwait
loopne
mov
xor
loope
add
add
not
mov
mov
xchg
mov
mov
popf
adc
out
xor
pop
scas
hlt
adc
mov
es
cmpsb
arpl
enter
jb
and
add
add
jnp
jmp
imul
ret
dec
sub
ss
sub
xchg
loope
sti
gs
jp
xchg
or
xor
xor
adc
push
mov
int3
incl
icebp
pop
inc
lds
xchg
out
rcrb
inc
fwait
mov
cli
xchg
inc
mov
adc
and
and
push
dec
addl
flds
cmp
scas
sahf
sub
aaa
aaa
stos
aas
mov
clc
std
mov
mov
mov
bound
lds
mov
inc
mov
add
inc
xor
pop
jmp
div
and
aaa
push
sub
mov
pop
xchg
int3
inc
sbb
dec
xchg
or
mov
out
pop
mov
adc
call
and
push
pop
push
xchg
xlat
ja
xor
xor
fs
pusha
jmp
arpl
push
add
add
shll
adc
mov
mov
imul
mov
outsb
and
xchg
push
imul
jno
fisubl
mov
call
xchg
movsb
lods
clc
insl
addr16
mov
popa
mov
pop
shrl
dec
push
push
sbb
xchg
orl
add
add
pusha
iret
gs
aaa
xchg
pop
ss
pop
std
mov
lret
fcomip
jecxz
xchg
jbe
loop
jae
mov
ret
xor
icebp
pusha
add
add
add
cmp
pop
pop
test
cmpl
pop
loopne
jo
outsb
xchg
xor
mov
mov
mov
sbb
out
adc
mov
loop
dec
xor
mov
jecxz
add
add
and
or
ja
sahf
aas
xchg
cli
int
xor
adc
sub
sbb
sbb
mov
or
mov
stos
stc
xchg
and
inc
subl
add
add
out
loop
sbb
fnsave
jmp
mov
push
sub
int3
int3
int3
inc
push
sub
outsl
cltd
inc
sub
xchg
push
cwtl
push
fistl
pop
outsb
pop
mov
pushfw
lahf
popf
jno
lret
and
xor
sarb
ret
shl
pop
fisubl
dec
ja
sarl
xchg
fildl
add
add
pushf
or
mov
xorl
jo
loop
ljmp
ret
loop
and
lods
arpl
push
shll
lahf
ret
ret
inc
add
aaa
ss
mov
add
aam
xchg
loope
in
pop
gs
movl
xchg
pop
jbe
cmc
jecxz
pop
mov
mov
fwait
xchg
jle
mov
pusha
fldl
add
add
shlb
sbb
mov
xor
popa
sub
adc
cltd
or
push
and
lods
divl
cmp
push
lods
movb
repnz
ljmp
mov
mov
test
inc
mov
cmp
add
pusha
xchg
pop
cltd
push
mov
out
cmpsl
in
mov
add
cmp
xchg
pop
popf
xchg
sbb
cmpsb
jne
pushf
pop
ret
aad
dec
mov
xchg
sbb
adc
jmp
and
dec
xor
xchg
jmp
push
jae
popf
iret
add
add
ret
inc
ret
ss
push
sbb
pop
lock
sub
add
in
fs
fstpl
movsl
cmpsb
xchg
inc
leave
shlb
add
add
mov
inc
sahf
mov
inc
mov
pop
div
pop
sbb
inc
sub
into
cli
dec
push
adc
jmp
mov
inc
xchg
fcoml
lods
cs
inc
push
dec
outsb
movb
mov
ja
mov
rcll
mov
dec
leave
mov
stos
mov
add
add
clc
in
and
or
dec
push
jnp
out
nop
lods
mov
pop
cmpsl
loop
nop
mov
mov
jb
sbbl
int3
int3
int3
int3
cmp
hlt
loopne
jecxz
ds
and
pusha
inc
enter
push
loop
inc
xor
add
jl
sti
lods
push
adc
out
cmpsb
xchg
xchg
lahf
adc
cld
out
push
push
imul
imul
inc
js
arpl
gs
add
fadds
add
dec
popa
jbe
add
add
dec
gs
insb
outsl
fs
jne
gs
add
add
push
jae
imul
push
jno
jae
imul
add
dec
jne
jne
jne
add
push
gs
cwtl
add
jae
add
pop
dec
inc
add
inc
add
inc
add
add
add
js
add
js
add
js
add
js
add
js
add
js
add
inc
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
test
test
test
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
addl
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
or
add
add
add
add
add
dec
sahf
inc
add
add
add
sahf
inc
add
add
add
popf
inc
add
add
add
popf
inc
add
add
add
add
je
inc
add
add
add
inc
add
add
add
add
in
pushf
inc
add
add
add
pushf
inc
add
add
add
add
push
pushf
inc
add
add
sub
inc
add
add
sbb
inc
add
add
or
inc
add
add
cld
fwait
inc
add
add
add
fwait
inc
add
add
add
fwait
inc
add
add
add
cld
pushl
add
add
add
incl
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
movsb
add
add
jns
and
add
add
add
cmpsb
filds
add
add
add
add
add
add
add
cmp
add
add
mov
add
cmp
add
inc
incb
add
add
add
mov
add
cmp
add
inc
incb
add
add
add
mov
in
call
add
add
add
add
mov
add
add
push
ficompl
and
pop
fisubrl
xor
adc
add
xor
incb
mov
add
add
add
add
add
add
add
add
cli
or
add
add
add
add
or
push
ret
cmovo
add
add
add
add
adc
add
add
add
adcb
add
add
add
mov
add
add
add
leave
sbb
add
ret
inc
and
sahf
mov
sub
inc
rcrb
and
sbb
addl
xlat
xchg
inc
push
add
inc
stc
mov
adc
mov
decl
js
roll
loopne
jmp
xchg
test
mov
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
addl
cmpsl
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
mov
popa
sar
mov
fsubs
stos
xchg
clc
repz
mov
subb
fwait
xchg
and
and
add
int3
int
int3
int3
int3
int3
int3
int3
sti
aas
jno
or
mov
mov
cmp
dec
lea
aas
ret
shrl
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
aas
xor
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
int
mov
addr16
push
mov
xchg
aas
and
loop
mov
jp
popa
push
pop
sarl
jl
mov
das
lea
mov
inc
aas
and
movsl
jmp
jg
sub
jge
mov
inc
rcr
push
arpl
int3
and
call
cmp
jp
and
cmp
mov
cmp
std
xlat
cmp
mov
sbb
add
movb
aaa
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
xor
push
lahf
inc
pop
mov
sub
dec
in
ss
push
scas
into
imul
faddp
jge
call
mov
xchg
cmp
push
andl
dec
dec
gs
std
orl
in
ficomps
frstor
add
add
dec
add
subb
add
inc
add
adcb
add
push
add
add
add
add
add
add
add
data16
add
add
add
add
add
add
addb
add
add
add
loopne
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
or
add
jbe
add
subb
add
add
add
add
add
sub
push
add
add
add
xchg
add
add
add
dec
add
or
inc
add
inc
add
dec
add
inc
add
dec
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
repnz
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
into
add
add
add
add
xor
cmp
xor
xor
inc
add
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
jb
and
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
pop
add
jns
push
add
ja
jne
jno
imul
and
push
add
js
add
add
add
and
aaa
add
add
and
xor
xor
add
and
xor
xor
aaa
add
add
add
add
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
sub
and
aaa
add
add
and
xor
xor
add
and
xor
xor
aaa
add
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
jne
outsb
add
push
add
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
test
add
add
add
add
add
add
add
add
add
add
add
outsl
add
je
ja
popa
add
add
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
inc
add
outsb
add
push
add
js
add
add
add
adc
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
pop
add
jns
push
add
ja
jne
jno
imul
and
push
add
js
add
add
add
adc
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
sub
and
aaa
add
add
and
xor
xor
add
and
xor
xor
aaa
add
add
add
add
add
add
jae
jae
add
bound
insb
add
and
push
add
jb
jae
imul
add
xor
sub
and
aaa
add
add
and
xor
xor
add
and
xor
xor
aaa
add
add
add
add
add
add
add
imul
add
add
add
jne
outsb
add
add
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
jmp
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
push
test
xchg
fs
mov
sbbb
loop
push
outsb
jmp
pop
out
fld
pop
je
testl
xor
sbb
pop
gs
ds
mov
and
push
stos
push
scas
popa
mov
inc
adc
divb
in
dec
cmp
cmp
mov
lock
sub
leave
dec
xchg
lahf
sub
in
cmp
add
rolb
mov
add
mov
aad
daa
daa
sub
test
xchg
sahf
pop
cmp
push
mov
iret
push
stc
stos
push
cmp
or
inc
sarl
fstps
push
cmc
fisubrl
jnp
mov
ret
mov
rclb
lods
lret
or
xor
les
pop
aam
pop
mov
mov
mov
adc
mov
mov
and
add
xchg
and
add
push
sbbl
test
stos
in
aaa
adc
dec
xorl
lcall
callw
sbb
push
dec
xor
cld
jmp
mov
fmulp
xchg
mov
push
adc
pop
mov
mov
push
lret
inc
mov
test
adc
adc
and
pop
aaa
arpl
cmp
mov
inc
sti
adcl
xor
clc
clc
dec
push
cmp
movsl
adc
adc
pop
pop
and
jmp
daa
jbe
into
ss
mov
dec
or
mov
mov
js
popf
and
cli
outsb
int3
mov
dec
push
push
pusha
xlat
lret
inc
xchg
mov
stos
xor
sub
pop
das
mov
inc
jecxz
push
push
push
in
mov
scas
jb
push
aas
lret
setns
dec
out
aad
enter
dec
insb
mov
mulb
out
repz
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
add
add
incl
add
add
add
add
lret
add
add
add
add
add
add
add
imul
add
add
dec
add
and
push
add
add
add
add
add
add
add
add
add
add
add
incl
add
jbe
jns
add
add
add
add
incl
add
add
add
add
add
addb
add
add
and
add
add
jns
jo
outsl
add
add
imul
or
add
add
dec
add
and
push
add
add
add
add
add
add
add
add
xor
or
add
incl
add
je
outsl
add
popa
add
add
add
incl
add
add
add
add
add
addb
add
add
adc
popf
add
add
add
jne
insl
add
insb
add
insl
add
push
add
or
add
add
dec
add
and
push
add
add
add
add
add
add
add
mov
nop
cmp
ds
aas
cmp
cmp
add
add
sub
add
ja
cmpb
aas
xchg
aas
lcall
aas
mov
aas
xlat
aas
fistpll
call
aas
add
add
add
add
or
adc
sbb
and
xor
xor
push
xor
popa
xor
jae
jnp
test
lea
xchg
xor
xor
xor
xor
daa
xor
xor
pop
xor
jae
jl
stos
xor
xor
xor
xor
xor
inc
xor
pop
xor
imul
loop
xor
xor
xor
xor
xor
and
pop
xor
in
fbstp
in
icebp
ss
add
push
aaa
adc
sbb
and
sub
xor
aas
aaa
pusha
aaa
imul
mov
popf
aaa
movsl
aaa
mov
mov
aaa
aad
fnsave
divb
std
aaa
add
sub
cmp
cmp
cmp
pop
cmp
cmpl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jns
cmpb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
bound
outsb
cmp
mov
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
and
cmp
inc
cmp
pop
cmp
insb
cmp
jns
jg
test
movsb
cmp
ret
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
aaa
cmp
dec
cmp
fs
jp
lcall
cmp
cmp
loope
out
push
ds
adc
ds
ds
ds
ds
js
jl
cmpl
xchg
ds
ds
ds
movsb
fnstsw
clc
and
xor
aas
add
add
add
add
add
xor
xor
xor
xor
xor
xor
mov
xor
xor
xor
inc
xor
xor
xor
shlb
sti
xor
xor
xor
xor
xor
xor
jbe
jl
call
xor
xor
xor
xor
xor
xor
and
mov
inc
ss
add
or
sbb
and
xor
cmp
inc
aaa
dec
aaa
push
aaa
pop
aaa
pop
aaa
push
jb
sarl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
pop
cmp
jb
cmp
cmp
cmp
cmp
cmp
cmp
iret
cmp
repnz
pop
ds
ds
ds
ds
ds
int3
jne,pt
cmpb
aas
aas
xchg
aas
leave
aas
aad
fdivrl
in
aas
repnz
stc
aas
add
add
add
add
xor
and
sub
xor
xor
mov
mov
xor
xor
xor
xor
xor
xor
jns
xorl
xor
xor
xor
xor
xor
xor
xor
xor
data16
xor
xor
xor
xor
xor
xor
xor
arpl
cltd
xor
cmp
jns
lods
ss
shlb
in
push
aaa
sbb
aaa
push
mov
mov
aaa
repnz
and
sub
inc
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
jbe
mov
mov
mov
cmp
cmp
cmp
jo
xchg
lea
add
pop
cmp
add
add
add
sub
inc
xor
pop
xor
push
xor
jg
test
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
cmp
inc
xor
xchg
xor
mov
ss
ss
inc
ss
ss
mov
mov
ss
shlb
aam
fdivs
fdivl
loopne
sub
xor
xor
cmp
cmp
sbb
pop
cmp
cmp
push
cmp
outsl
cmp
nop
cmp
cmp
cmp
jns
mov
mov
iret
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
cmpb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
imul
mov
cmp
cmp
cmp
cmp
cmp
imul
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
jbe
mov
cmp
adc
sbb
sbb
inc
imul
mov
nop
ds
ds
ds
mov
ds
ds
add
add
push
jne
nop
aas
xchg
aas
pushf
aas
mov
aas
jmp
add
add
sbb
xor
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
fdivl
cli
xor
xor
xor
cmpsl
xor
xor
xor
es
jle
popf
aaa
mov
out
push
cmp
cmp
cmp
jno
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
nop
add
adc
add
daa
xor
xor
mov
add
or
add
add
add
inc
add
add
sbb
sbb
and
sub
sub
xor
xor
cmp
cmp
inc
ss
ss
adc
sbb
and
sub
xor
cmp
inc
cmp
cmp
cmp
cmp
cmp
