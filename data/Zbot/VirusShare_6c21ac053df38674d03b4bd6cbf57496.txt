sbb
add
dec
jecxz
sub
je
test
push
and
repnz
xor
adc
ret
aad
xchg
sbb
fcoml
popa
inc
imul
ss
pop
int3
imul
gs
sub
cmpsl
xchg
jge
dec
fcomp
shll
jmp
movsw
pop
lret
shll
fmuls
dec
sbbb
ret
lcall
sbb
mov
jae
mov
mov
aas
xchg
test
push
loop
push
outsl
inc
inc
add
mov
lret
aam
testl
xchg
jnp
mov
in
outsb
stos
pop
or
cmp
dec
and
movsb
cmp
pop
ret
and
inc
dec
std
ljmp
xchg
mov
inc
imul
sub
mov
imul
ret
jno
dec
stos
aad
arpl
daa
mov
imul
das
sbb
jecxz
rclb
pop
andb
mov
aaa
shrl
sub
mov
dec
imull
jle
mov
pushf
pop
sahf
adc
xor
imul
lock
and
pusha
aaa
mov
jl
push
out
dec
test
mov
xchg
js
sbb
ss
and
cmp
xor
push
sbb
mov
fisubs
jnp
sub
push
jnp
lods
jl
push
add
pop
flds
xor
mov
test
prefetchwt1
repz
test
sbb
fcomip
jg
clc
mov
js
testb
mov
idivl
mov
add
outsb
movsb
sub
pop
ljmp
add
sbb
leave
mov
xchg
std
scas
std
adc
push
mov
push
mov
xor
xchg
cmp
add
sub
xchg
or
es
int3
jg
pop
sub
outsb
cmpsb
in
mov
pop
aaa
adc
imul
jno
mov
lret
cmpl
jae
xchg
pop
repz
pusha
hlt
orb
ss
and
aas
pop
or
jg
clc
outsb
jnp
push
xchg
fstl
mov
or
push
sbb
faddl
clc
sub
push
add
xchg
mov
cli
jp
je
add
xorb
lock
lock
sub
sbb
xor
adc
enter
test
shlb
test
pop
nop
lret
test
aam
xchg
add
fisubrl
int
cmp
mov
mov
inc
das
pop
inc
inc
stos
dec
out
scas
lea
cmc
inc
sub
jnp
xchg
mov
js
xor
jge
cmp
mov
jno
pop
js
lcall
mov
inc
push
push
xchg
call
jae
jecxz
into
nop
cmp
mov
in
int
arpl
pop
jbe
xchg
iret
cmp
sub
mov
xor
aad
insl
ljmp
dec
pop
push
push
mov
faddl
cltd
mov
sub
mov
inc
lcall
ss
sti
xor
outsl
dec
int3
scas
pop
nop
xchg
iret
pop
xchg
lret
or
gs
xchg
das
imul
movsb
push
loopne
push
popa
cmp
xchg
sbb
cltd
lret
jns
push
mov
iret
mov
fwait
or
lock
lods
push
pop
adc
add
lret
xchg
iret
fsubrl
add
lods
pop
cli
mov
cmp
test
sarb
mov
push
jae
test
mov
jne
lock
mov
int
mov
test
std
dec
movntq
mov
aad
sub
push
into
aaa
sub
nop
pop
imul
or
dec
in
mov
pop
inc
jmp
into
push
outsb
push
fucomi
and
sub
stos
lret
mov
mov
lahf
pusha
xor
sub
loope
lock
sub
rorb
inc
dec
xor
jbe
test
jmp
xchg
jg
push
or
in
and
mov
xchg
inc
push
and
in
dec
push
sub
dec
pop
push
ljmp
leave
imul
pop
dec
clc
xchg
or
mov
or
mov
jno
insl
arpl
aam
insb
out
sti
xchg
inc
jmp
adc
shlb
pop
mov
inc
fwait
cmp
decl
scas
jb
sbb
push
test
popf
lods
sahf
sub
sbb
push
mov
test
adc
ljmp
repnz
inc
cli
xchg
sub
pop
imul
inc
push
mov
arpl
push
xchg
or
aaa
leave
cmpsb
pop
mov
cmp
mov
dec
xchg
mov
jne
pop
cmp
xchg
loopne
jecxz
movsb
outsl
aam
and
rcll
sub
pop
inc
xor
mov
and
inc
dec
mov
in
push
sub
pop
jnp
mov
xchg
rol
or
mov
fadd
lock
pusha
jne
jo
dec
nop
mov
mov
mov
fisubl
push
adc
insl
sti
push
adc
stos
js
add
xor
mov
add
gs
jg
in
mov
fcmovnb
std
fs
stc
mov
les
addr16
test
xor
sub
lds
or
add
xchg
add
loope
pop
sbb
loope
and
mov
pop
ljmp
pop
push
js
fdivp
out
inc
sbb
setnp
pop
mov
dec
xchg
fisubl
les
inc
or
push
sub
jbe
mov
xchg
push
xchg
mov
popa
daa
and
cmpsb
xchg
sbbb
sbb
stos
icebp
add
daa
negb
jmp
xchg
outsb
and
dec
mov
adc
ficoms
arpl
popa
pusha
nop
inc
cmp
jns,pt
imulb
mov
xchg
dec
mov
jae
pop
dec
test
aam
inc
mov
andb
jg
outsb
sbb
hlt
or
jmp
cs
cmpsb
adc
pop
mov
hlt
rcrl
in
sub
adc
mov
pop
xchg
insl
dec
push
mov
sbb
nop
clc
popf
push
addl
jns
xchg
inc
cltd
mov
lea
pop
jae
jnp
popa
mov
cmp
addr16
movl
cmp
push
or
mov
flds
lret
and
push
in
in
ss
push
inc
es
lds
adc
xchg
dec
mov
jecxz
jno
aad
rol
cmp
mov
and
mov
fldenv
mov
mov
fadds
std
test
test
push
mov
add
add
addr16
push
sbb
outsb
mov
frstor
fnstcw
repz
pop
add
add
xor
push
repz
dec
adc
outsb
out
repz
dec
popf
lahf
pop
sbb
setns
push
jge
iretw
or
push
les
mov
shlb
pop
cltd
scas
scas
mov
mov
hlt
stc
lcall
les
pop
repz
arpl
xchg
add
or
aaa
lods
pop
mov
or
mov
and
es
inc
call
mov
cmp
repnz
clc
pop
mov
jne
push
jae
xor
and
lcall
lahf
ret
xchg
dec
aas
dec
and
cmpsb
push
addr16
pop
dec
outsl
jp
push
mov
shll
ds
lret
cmp
add
pop
insl
sbb
xor
sti
jmp
inc
mov
shll
jbe
call
push
in
and
movswl
insb
mov
adcl
fcmovne
inc
test
ljmp
mov
sbb
pop
hlt
jbe
call
pop
and
dec
adcb
jge
nop
jmp
sub
rclb
ja
hlt
cmp
enter
sti
js
insl
xchg
dec
ss
xchg
xor
das
sub
sahf
daa
sub
test
and
scas
loopne
mov
dec
xchg
cmp
push
aas
pop
cltd
dec
jnp
sbb
fwait
xchg
dec
out
in
and
sbb
xor
add
add
dec
lret
nop
cmp
loop
lcall
clc
sbb
mov
xchg
adc
hlt
data16
jne
fisubs
inc
enter
mov
repnz
xor
cltd
cmp
ss
adc
ljmp
dec
mov
push
rol
imul
popa
mov
cli
xchg
fdivs
icebp
mov
fs
push
jle
cs
ret
mov
sub
out
mov
add
and
lcall
leave
xor
pushf
inc
test
loope
mov
cmpsb
orl
cmp
in
daa
jge
mov
inc
shrb
cld
aam
cmc
or
and
inc
dec
add
popf
dec
pop
inc
icebp
adc
xchg
xor
outsl
dec
insl
ret
xor
adc
aas
mov
add
enter
je
add
cmpsb
sbb
and
cmc
push
scas
cmp
xchg
xor
fnstcw
xlat
cmp
pushf
jecxz
inc
das
mov
sbb
fstpt
popf
int3
movb
test
imul
sbb
pop
int3
lcall
xchg
leave
lret
popf
pop
dec
movsb
mov
xchg
js
loopne
jnp
scas
fs
or
mov
scas
mov
mov
jno
push
or
int3
push
or
jnp
mov
ret
xchg
push
inc
adc
sub
cmp
mov
scas
inc
outsb
fistpll
pop
sahf
xchg
ja
fisubl
cmpsb
mov
and
scas
fstps
fcmove
outsl
jge
ljmp
enter
sub
and
or
lcall
pusha
je
enter
jnp
mov
gs
addr16
dec
aas
lods
repz
push
nop
mov
lds
lcall
into
rcll
mov
push
icebp
sbb
clc
int3
jmp
inc
ss
lret
adc
dec
sbb
cmp
inc
dec
mov
insb
lock
movsl
dec
inc
xchg
test
call
xchg
adc
sub
ficompl
js
mov
jmp
xor
pusha
shrb
test
mov
mov
xor
lahf
mov
cmp
mov
fwait
or
sbb
xchg
data16
imul
shrl
push
lock
gs
add
popa
retw
test
inc
loope
insl
int3
imul
dec
movsb
mov
or
cmpsb
sub
push
test
imul
rolb
lahf
and
add
cmp
or
push
xor
jge
cmpb
out
pop
fadds
ljmp
push
inc
and
std
dec
pop
xor
push
notl
lods
add
decl
clc
movsb
fimuls
adc
in
rcrb
sub
enter
jl
lods
test
aaa
dec
scas
pop
pop
and
jmp
sbb
ds
jns
mov
sbb
jge
mov
scas
inc
pop
cmc
mov
jg
inc
jmp
out
jmp
mov
cmp
ret
xor
jbe
cli
cmp
stos
push
stos
lahf
test
lds
jle
adc
lcall
inc
jne
mov
jge
xchg
mov
out
mov
fs
in
pop
lods
into
add
aas
jecxz
inc
cwtl
data16
out
mov
sub
jae
mov
ret
add
aad
outsb
stos
aas
and
add
fs
inc
daa
add
mov
jp
out
or
inc
mov
fldenv
cmp
push
fcompl
add
pusha
and
jecxz
inc
xor
icebp
out
dec
repz
adc
cmp
dec
rcr
inc
sub
push
inc
pop
jns
mov
mov
and
mov
jne
gs
adc
daa
lock
iret
pop
das
ljmp
and
out
or
mov
push
adc
fdivr
rclb
push
arpl
call
mov
lock
add
f2xm1
push
out
mov
adcb
ret
aad
pop
scas
push
das
loop
test
out
mov
lock
pop
and
mov
mov
outsb
enter
xchg
inc
aam
jmp
ja
push
pop
xor
adc
std
mov
xlat
enter
imul
and
jae
jno
pop
call
cmpsl
mov
ljmp
cltd
adc
stos
jns
test
sbb
xchg
cmpsb
or
dec
adc
sub
jecxz
mov
hlt
add
in
rorb
adc
jp
and
jno
push
adcb
mov
xchg
mull
movsb
mov
and
mov
pop
add
notb
add
stc
outsb
outsb
xchg
inc
push
aam
adc
scas
rcrl
jne
in
andl
pop
sahf
xor
lea
sbbb
out
pop
cmp
jmp
push
lahf
cli
pop
ljmp
movsb
xchg
xchg
lock
mov
xchg
adc
cld
out
cmp
ror
mov
inc
jecxz
scas
scas
mov
scas
fsubrl
out
sub
inc
xchg
fdivrs
inc
push
outsb
jp
call
push
js
into
mov
or
sbb
sub
sub
jno
pusha
mov
push
jg
jbe
pop
jo
and
imul
mulb
sub
mov
outsl
in
push
mov
test
inc
xchg
cwtl
push
sub
jno
in
jg
cmp
lods
sbb
popa
out
sahf
add
shrl
cmp
xchg
cmp
ret
xorl
ja
in
jo
jne
dec
fwait
mov
cmc
arpl
mov
sbb
and
es
jp
adc
xchg
repnz
call
jno
rolb
sub
mov
iret
xchg
cmpsb
scas
mov
scas
sbb
jno
mov
cltd
sti
orb
in
jne
cmpl
fwait
pop
dec
sbb
out
push
inc
daa
push
repnz
cmp
shl
add
cltd
mov
inc
movsl
pop
movsl
int3
out
jg
or
mov
push
or
popa
int
pusha
loopne
mov
sti
xor
jmp
adc
ret
mov
andl
pop
aas
push
leave
mov
mov
js
data16
enter
je
out
arpl
dec
ljmp
and
xchg
frstor
std
test
pushf
inc
xchg
dec
dec
cmp
aaa
jo
xor
rolb
push
aaa
xor
mov
push
xchg
out
ror
iret
lea
stos
push
and
mov
sub
cmp
gs
inc
mov
imul
sub
imul
fadds
xorl
mov
sbb
aad
cmp
push
mov
mov
outsb
sbb
dec
pop
pushf
ljmp
xorl
ljmp
inc
pop
lock
push
cmp
jg
inc
jns
mov
int
fwait
repnz
sbb
jl
daa
push
xchg
popf
idiv
in
jbe
aaa
cmp
outsl
or
lds
js
ds
idivl
and
push
cwtl
loopne
and
inc
sub
lock
mov
out
mov
insl
dec
dec
jmp
jp
sbbb
int
mov
adc
push
ret
aas
ja
xor
mov
int3
mov
sbb
leave
rsm
addr16
adc
adc
inc
inc
mov
insl
mov
mov
ret
mov
outsb
mov
adc
mov
fldenv
mov
adc
call
or
imul
xchg
aam
insl
testb
sbb
pop
mov
popa
fisttps
movsl
jbe
and
cld
mov
pop
pop
jo
lods
add
shll
mov
inc
daa
mov
pop
rcrb
popf
test
jb
push
mov
fadd
arpl
lret
dec
fisubs
mov
ljmp
hlt
inc
dec
into
imul
jg
fldl
dec
jecxz,pt
mov
in
mov
pop
cmp
insl
outsb
int3
fs
in
loope
xor
jno
test
movsb
or
push
outsb
xor
leave
adc
dec
jno
loopne
mov
jmp
das
loope
int
adc
mov
enter
cmpsl
and
cli
mov
ljmp
dec
dec
mov
xor
xchg
inc
lret
lods
aam
aam
cmp
adc
xchg
jle
insb
push
cmp
incb
cmp
scas
aam
arpl
aad
push
xchg
nop
jmp
dec
fdivrp
lret
xlat
ja
icebp
repnz
dec
xchg
sbbb
nop
loopne
and
or
loop
sbbl
rorl
jnp
mov
sbb
jl
cmp
insl
xor
fdivs
inc
cltd
sti
xchg
popa
dec
or
or
addr16
mov
push
repnz
out
mov
add
push
jmp
xchg
ret
mov
lret
das
adc
outsb
push
and
push
fcompl
mov
repz
idivl
repz
jns
test
cltd
dec
outsl
cmpb
inc
or
lea
dec
in
add
adc
dec
call
pusha
ret
pop
push
jp
sbb
push
ljmp
rorl
dec
loope
cmpb
jnp
lock
test
add
jle
div
jge
sarl
pop
loope
leave
cmp
push
pop
and
scas
sbb
popf
ret
sti
and
ret
data16
mov
test
add
xchg
roll
lret
jg
xor
adc
sub
daa
dec
push
mov
ds
xorb
pushf
push
ds
push
xchg
jbe
stos
pusha
or
fcmovne
subb
loopne
in
les
aas
or
pop
jmp
pop
mov
out
mov
inc
fs
dec
out
xor
push
nop
cmp
test
mov
imul
inc
inc
outsb
outsb
scas
mov
xchg
adc
add
std
or
inc
cwtl
or
shl
shlb
in
and
aas
icebp
leave
pop
jo
pop
arpl
stc
mov
imul
push
dec
call
test
es
or
dec
hlt
mov
mov
push
push
mov
lock
xchg
inc
dec
repnz
or
icebp
outsb
insb
and
scas
and
pop
mov
lods
ss
jge
mov
int3
dec
scas
mov
push
movsb
mov
push
dec
add
shrb
enter
icebp
pmullw
imul
cmp
icebp
xor
gs
mov
jne
and
jg
and
mov
jbe
repz
push
cmp
push
es
or
mov
insb
fiaddl
dec
sarb
aad
or
out
inc
sbb
fwait
or
adc
insb
rcr
pusha
stc
fldt
push
roll
push
pop
dec
hlt
add
int
icebp
dec
shl
stos
cmpsl
imul
shlb
pusha
add
ds
fbstp
std
dec
push
and
rcrb
cli
imul
inc
dec
xor
rcr
movb
das
fcmove
pop
cmp
cmp
imul
mov
es
and
mov
xchg
int3
shrl
int3
popa
mov
lods
call
ljmp
pop
aad
xor
in
inc
test
adc
es
sahf
lret
jge
ror
xchg
jmp
fstpl
dec
adc
rclb
pushfw
sub
jecxz
js
add
repz
movl
ja
cmp
push
adc
add
jp
aaa
xor
pop
in
lahf
pop
test
out
cmp
dec
jmp
pop
or
cwtl
sarb
shll
pop
add
xchg
rclb
or
push
addr16
xor
dec
enter
scas
stos
nop
scas
jo
adc
xlat
xchg
adc
adc
inc
cld
adc
mov
push
and
fistpl
mov
mov
cmp
lods
dec
mov
enter
xor
imul
popa
mov
in
xchg
and
sbb
mov
jmp
pop
test
cmp
fwait
inc
fld
sbb
jecxz
jmp
outsb
jmp
or
mov
movl
aam
jp
and
jo
stos
adc
xchg
stc
orl
out
dec
stc
cmp
pop
sbb
stc
and
jbe
clc
loopne
add
sarl
ret
stos
xlat
aam
cmp
push
das
jb
push
add
mov
xchg
jne
xchg
imul
jbe
sub
jle
fistps
daa
pop
inc
push
push
iret
les
cli
jge
sub
pusha
clc
movsl
pop
pop
pop
cmp
dec
cmpl
xchg
insb
fmuls
dec
icebp
jl
mov
ja
fs
enter
and
in
aaa
mov
ficomps
out
push
fisttpl
adc
ror
cmp
add
in
inc
dec
out
mov
inc
cmp
sub
jge
je
and
push
sti
inc
and
sub
dec
xchg
xchg
cmp
js
data16
orb
arpl
mov
cmpb
pop
and
cmp
xor
repnz
bound
lahf
push
lcall
enter
fstpt
jo
fnstenv
sub
clc
fldcw
fwait
andl
ret
jmp
xchg
into
mov
mov
and
enter
add
pop
icebp
gs
or
adc
cmpsb
incl
adc
fcmovnu
decb
mov
pop
sbb
cmp
outsl
dec
sub
and
add
or
xchg
mov
xchg
addr16
push
lock
and
xchg
das
push
jmp
stos
pop
or
addb
ss
lods
in
inc
imul
mov
xchg
jo
lret
outsl
pop
loopne
data16
neg
fcmovnbe
popa
inc
rclb
ret
enter
shrl
pop
in
mov
fstp
pop
or
bswap
std
pop
and
sbb
jae
or
test
test
sahf
arpl
inc
cmp
add
cltd
xchg
mov
pop
mov
int
jge
push
out
jno
sub
mov
mov
sbb
sarl
std
or
jnp
dec
pop
shll
adc
xor
sbb
lods
sbb
mov
cwtl
insl
and
or
cmp
out
sub
movsl
xchg
out
jp
andl
into
loopne
or
scas
jmp
aaa
mov
ficoml
cmc
fstl
or
sub
arpl
mov
jge
jnp
jno
sahf
push
cmpsb
add
or
out
fistl
push
daa
inc
xor
lds
cmp
jmp
and
popa
jg
jns
jbe
rclb
jecxz
mov
int3
xlat
cmpsl
int3
cltd
push
sbb
stc
dec
pushf
movsb
lods
mov
jmp
pushf
add
mov
pop
or
sbb
movsb
cmp
jns
dec
fstpt
cmp
and
dec
psadbw
mov
dec
movsl
push
shrb
xchg
test
jp
mov
jmp
mull
sbb
rcll
sub
sti
xor
push
daa
and
imul
pusha
cs
dec
push
pop
mov
addb
stos
mov
xchg
mov
rcll
pop
xor
pop
push
mov
and
jecxz
add
xchg
sub
jae
inc
dec
aam
pop
mov
jecxz
aam
adc
test
in
push
dec
movsb
and
and
mov
mov
push
loope
insl
xchg
pusha
jae
mov
ret
out
pop
nop
je
cmpsb
sti
mov
mov
test
xor
call
adc
mov
movsb
mov
cli
pop
dec
dec
in
xrelease
cli
imul
xor
xor
in
je
jle
das
pop
pushf
hlt
pop
popf
lahf
dec
push
add
call
cmpsb
iret
rolb
mov
sahf
sub
mov
dec
std
dec
or
cmp
mov
mov
jle
push
stos
add
cmp
add
xchg
pop
fwait
dec
arpl
mov
adc
daa
stos
xchg
mov
lods
enter
lea
ret
sub
fidivl
cmpsb
mov
xor
xor
add
push
mov
xor
adc
into
sbb
jp
repz
data16
jae
xchg
xor
jne
mov
jb
push
inc
notb
test
cwtl
ja
xchg
jae
sbb
rcrb
add
ret
leave
add
mov
push
or
jb
inc
sub
mov
in
xchg
cmp
movsb
or
stos
jecxz
sbb
fstps
fxch
and
call
xor
jmp
aad
sub
xor
or
mov
repz
mov
inc
adc
test
xchg
mov
adc
adc
mov
xchg
jo
es
das
jg
cli
mov
xchg
mov
addr16
popf
arpl
sarl
ss
xlat
addb
cmc
das
out
mov
out
jo
mov
loopne
es
std
push
dec
mov
jl
stc
mov
imul
xor
inc
add
pop
loopne
dec
aad
and
sbb
addr16
sti
fwait
bound
lret
xchg
cwtl
pop
test
loopne
nop
jecxz
fiadds
add
bound
lock
movsb
push
adc
gs
lods
push
es
into
addr16
sar
bound
mov
repz
in
xlat
xlat
repnz
adc
jmp
xchg
pop
xchg
adc
les
and
adc
jae
insl
inc
fsubl
push
or
dec
xchg
or
mov
lcall
gs
cli
mov
xor
xor
dec
movsl
mov
mov
mov
stc
pop
mov
ss
in
rorb
or
cmp
add
or
mov
dec
mov
mov
lods
outsl
outsl
or
fwait
repnz
xchg
and
icebp
aad
or
xchg
jg
cwtl
xlat
int
mov
sub
push
mov
es
std
shlb
rep
cs
jg
nop
push
imul
jo
pop
and
iret
out
add
iret
in
ja
lcall
and
int
sbb
cmp
lea
imul
cld
pop
out
out
sar
test
dec
jnp
pop
movsl
mov
xchg
adc
xlat
lahf
cmp
fcomps
ljmp
loope
sub
inc
sbb
andb
insb
jl
jbe
orl
and
and
scas
sbb
push
lret
pop
dec
js
call
pop
or
gs
out
xchg
cmpsb
arpl
les
jns
sub
mov
das
push
cmp
repz
xor
aam
std
repnz
xlat
mov
jmp
fidivrl
lods
push
mov
sbb
pop
and
sbb
mov
insb
repz
push
sahf
add
sti
adc
dec
dec
lods
cmp
divb
sub
adc
leave
lahf
sbb
lock
fistps
into
fs
mov
sbb
push
xchg
adc
negb
lret
pop
cmpsb
dec
jecxz
cs
test
jns
cld
dec
shrl
stos
cmpsl
pop
push
inc
aam
daa
jae
cmc
stos
mov
jecxz
mov
cmp
xchg
loop
dec
fs
dec
adc
mov
mov
ljmp
imul
test
stc
jle
shrb
or
dec
pop
pop
mov
fwait
jle
add
jne
add
sbb
testb
nop
popl
cmpsl
ss
cltd
pop
scas
adc
mov
pop
jmp
rcrb
cli
std
clc
adc
sbb
pop
fistl
aad
mov
add
or
in
test
call
enter
leave
push
xchg
iret
or
sub
jl
inc
fldl
scas
lods
adc
aas
divb
faddl
jnp
inc
fwait
icebp
pop
mov
int
int3
inc
sbb
inc
push
pop
mov
mov
xor
or
out
xchg
inc
repnz
mov
xchg
mov
aam
fucomp
arpl
mov
push
adc
sti
mov
mov
mov
mov
mov
test
stc
int
je
pop
loop
or
hlt
lret
ret
repnz
sbb
jae
xchg
movsb
ja
cwtl
pop
xchg
cltd
iret
cs
mov
inc
insb
adc
sub
daa
push
dec
push
xor
mov
clc
popf
adc
xor
arpl
cli
xchg
add
mov
aad
mov
fdivrl
cmc
push
ret
leave
adc
xlat
nop
lock
sar
push
in
sub
dec
pop
js
movsb
arpl
dec
mov
xchg
outsb
xor
jno
mov
stos
out
adc
lods
repnz
pushf
cmp
sub
fstpl
xchg
lcall
dec
cltd
xlat
je
inc
iret
mov
out
push
dec
shrb
add
sbbl
or
dec
and
sub
fs
and
xchg
sub
adc
add
cwtl
cmp
mov
popf
sti
cwtl
ret
mov
or
scas
sub
cmpsl
jecxz
xchg
lea
jo
aas
lods
pushf
mov
bound
sarl
in
int3
and
test
cmpb
mov
dec
adc
cmp
xor
cs
push
ds
in
mov
pop
inc
sarl
inc
pop
mov
test
mov
lcall
mov
enter
daa
inc
and
sbb
cmp
dec
dec
popf
lods
mov
xchg
stos
jns
loope
mov
test
push
rcrl
fisubs
pop
fs
sarb
dec
loope
cwtl
push
lods
add
ljmp
ds
push
pop
cmp
jg
and
nop
stos
dec
fisubs
mov
aas
in
cwtl
sub
jns
jno
ljmp
mov
sub
loop
pop
inc
jl
add
fs
add
inc
mov
mov
mov
sar
jecxz
es
mov
jp
test
mov
rclb
roll
mov
fisubl
mov
cld
jge
movsb
jmp
mov
dec
pusha
fs
outsl
jo
aad
sbbb
sbb
cmp
popf
rcrb
mov
sbb
fistps
andl
in
mulb
fcompl
add
cli
mov
or
pop
xor
mov
in
bound
mov
dec
or
push
pop
mov
sbb
xchg
into
lds
push
mov
in
inc
daa
sub
pop
jbe
ljmp
lret
and
jge
ljmp
jmp
jecxz
jns
sub
call
pushf
mov
dec
inc
dec
sbb
mov
cwtl
outsb
lea
adc
push
jne
rclb
ljmp
fwait
jl
call
push
movd
jecxz
fcoms
roll
ffreep
fisubrs
ret
insl
push
cmpsl
popa
xchg
xor
aas
enter
pop
and
xor
cltd
mov
aas
mov
xchg
push
adc
insl
cmp
je
ja
rcrl
ret
rcrb
sbb
xchg
imull
aas
mov
outsl
dec
popf
push
rcrl
sahf
cmp
ret
sahf
rorl
jnp
push
stos
shr
mov
shll
lret
test
ss
idivb
enter
mov
stc
dec
in
ret
mov
sbb
adc
xchg
cmc
add
adc
aas
mov
in
mov
add
std
add
dec
mov
pop
cwtl
fucomi
sub
xor
clc
aas
out
xchg
fstpl
mov
test
sarb
push
in
or
shr
es
addr16
insl
and
push
inc
sbb
sahf
es
bound
clc
sub
dec
jmp
mov
push
mov
xchg
mov
push
sti
cltd
or
aas
fcomps
popf
roll
outsb
clc
pop
outsb
jg
or
jo
add
loope
push
hlt
push
pop
mov
pop
jae
lods
rorb
push
mov
movsl
test
push
and
test
aam
push
fwait
or
and
dec
ret
dec
pop
fmull
mov
insl
mov
jo
mov
bound
shll
pop
pop
sub
roll
jno
inc
ja
lds
enter
dec
fisubrs
mov
jle
lods
xchg
mov
dec
adc
pop
xchg
inc
stos
pop
jecxz
mov
aam
mov
sub
mov
sub
vpxor
add
xor
loopne
test
js
arpl
sub
push
mov
stos
test
xlat
xor
fistl
lahf
shl
fcomip
ret
lret
stc
pop
jge
jo
lods
push
int3
daa
loopne
cmp
jb
notl
push
mov
jbe
add
jmp
aaa
or
xor
test
dec
xchg
adc
fbld
imul
lahf
xchg
jbe
sbb
fisttpll
mov
fs
pop
gs
int3
fstpt
ljmp
repz
or
das
arpl
sbb
xchg
mov
addb
fwait
inc
pop
bound
push
push
jb
push
int3
dec
pop
pop
sti
enter
loop
inc
aaa
sbb
dec
fidivrs
pop
insl
xlat
js
dec
pop
sub
mov
mov
and
sub
aaa
push
loope
mov
ret
jne
jae
xchg
test
lods
xchg
aaa
sti
ret
imul
xchg
and
adc
fnstenv
push
sub
xchg
pop
lods
inc
adc
pop
push
xchg
mov
sub
or
stos
enter
out
sahf
pushf
pop
add
out
and
pop
clc
cmp
enter
adc
xchg
ljmp
add
imulb
imul
popf
mov
mov
push
lahf
stos
cwtl
pop
rorb
getsec
stc
cld
lods
mov
les
mov
push
sti
lods
ret
xchg
hlt
popa
clc
jo
dec
fsub
mov
lret
sbb
imul
and
sarb
pop
xchg
icebp
fiaddl
icebp
and
xrelease
push
ret
sub
add
rorl
pop
inc
mov
or
pusha
popf
jbe
mov
icebp
mov
sub
push
enter
mov
sub
mov
inc
cmp
adc
scas
mov
mov
sbb
aam
jbe
sbb
jmp
jmp
cli
sub
sbb
dec
mov
ret
loopne
scas
inc
mov
and
push
and
imul
ljmp
adc
sbb
push
aad
insb
loop
int3
sub
push
addr16
adc
xchg
sub
add
scas
popf
sub
jp
and
in
sbb
repnz
leave
lods
les
cs
aas
add
lcall
inc
jle
in
cmp
sahf
or
mov
lods
push
dec
jecxz
push
fiaddl
cmc
mov
ror
repnz
push
jle
das
inc
mov
mov
cmp
push
mov
lahf
stos
cli
repnz
shlb
mov
add
lret
out
pop
test
cli
lret
xor
enter
sbb
mov
in
orb
cs
outsb
mov
ss
sbb
dec
pop
nop
ficompl
cltd
add
std
push
jmp
out
pop
mov
sub
sbb
adc
sar
inc
dec
out
fwait
stc
aaa
mov
shrl
imull
cmp
das
dec
dec
insb
mov
fnstcw
hlt
in
jle
mov
testl
xor
push
pop
push
mov
fistpll
xor
ficomps
jmp
aam
shll
sbb
insb
iret
hlt
xchg
jl
out
or
jno
cmovo
cmp
lahf
popf
mov
jb
xor
je
cmc
and
test
fucomp
add
inc
xchg
icebp
test
push
lret
flds
mov
lret
sub
mov
loopne
imul
and
mov
int
pop
jecxz
test
jb
xor
cmp
mov
fs
add
push
cs
add
and
push
popa
test
mov
push
test
gs
lds
iret
jnp
add
out
loop
repz
xchg
sub
and
getsec
inc
inc
ret
outsb
outsb
xlat
xor
test
sub
mov
mov
cmpb
iret
add
xchg
mov
pop
inc
cmp
mov
popl
mov
jnp
mov
pop
stc
ljmp
mov
jecxz
cs
int3
mov
mov
sbb
xchg
pop
inc
movsb
push
js
arpl
and
mov
mov
lea
test
js
popf
test
jmp
jle
lret
dec
adc
push
sti
and
jl
add
movsl
adc
lods
pop
xor
inc
mov
into
out
inc
lods
sub
or
push
decl
aad
sti
xchg
nop
insl
iret
and
daa
mov
sbb
test
sub
jle
dec
je
fcomi
sub
in
nop
mov
and
xor
aam
sahf
jnp
push
aas
push
sub
fsts
jecxz
cwtl
ljmp
negb
adc
mov
lea
dec
xor
and
xor
dec
xchg
test
lret
bnd
cltd
jp
dec
and
sahf
daa
add
add
hlt
repz
xchg
sahf
pop
mov
push
sub
scas
cmpsl
stos
mov
jl
inc
sub
test
and
inc
push
dec
add
cmp
and
mov
sahf
notb
shrb
and
pop
ficoms
dec
clc
dec
aad
mov
jno
enter
xor
lock
outsl
mov
repz
or
shll
sub
popa
cmp
mov
je
and
and
mov
lds
dec
in
mov
mov
out
cmp
in
lcall
adc
iret
flds
cmp
lret
mov
add
push
ror
lods
sub
push
sbb
dec
pop
sbb
push
or
jne
int3
arpl
je
idivl
movsl
or
push
cltd
mov
lods
repnz
xor
cmp
roll
bound
in
mov
clc
push
or
jmpw
mov
sbb
dec
call
test
inc
es
stc
lds
mov
icebp
rcll
inc
sub
aam
std
stos
xor
scas
into
jl
rcrl
mov
lahf
jns
sub
pop
gs
insl
in
mov
or
in
sbb
insl
imul
out
jbe
idivb
icebp
and
insl
xor
outsl
lods
aam
fstp
add
out
sbb
push
loop
adc
inc
or
nop
loope
mov
jg
arpl
ja
xchg
mov
addr16
mov
mov
pop
stos
push
xchg
dec
xchg
lahf
jno
sbbl
imul
mov
inc
mov
dec
jecxz
and
pusha
repz
adc
sbb
in
lcall
pusha
sub
jecxz
mov
fisubrl
mov
fldt
push
stos
mov
push
loope
or
jae
cmc
ljmp
jo
cltd
leave
adc
std
mov
jle
int
js
fdivrl
xor
or
mov
movsl
outsl
push
rolb
push
xchg
test
push
mov
fisubl
fs
scas
lret
jne
mov
xchg
ss
ficompl
xor
push
mov
clc
fwait
orl
scas
mov
push
pop
fwait
mov
hlt
std
xchg
mov
mov
testb
pop
js
cltd
xor
pop
inc
add
cpuid
mov
and
inc
fisttpl
mov
jne
fwait
subl
roll
lods
sub
imul
pop
aad
jmp
dec
pop
movb
bound
loope
int3
insb
lds
sbb
inc
pop
insb
sahf
stos
out
inc
rcl
inc
sub
sbb
sar
pop
mov
or
cwtl
mov
push
scas
repz
push
xlat
xor
mov
jno
adc
cmp
cwtl
inc
xor
leave
mov
shll
xor
push
out
sete
js
sbb
pop
mov
cmp
and
jmp
cmp
out
xor
jle
sub
inc
inc
and
addl
mov
pushf
stc
cmc
inc
lret
push
faddp
adc
fisubrl
add
xlat
xor
mov
jne
jecxz
pop
jmp
cltd
ljmp
mov
lods
aam
mov
jecxz
das
les
ds
lret
xchg
mov
lods
stc
das
movsl
je
sarb
into
add
fidivrl
or
add
cli
sbb
hlt
mov
sbb
jecxz
arpl
lds
sbb
sub
add
fldl
inc
movsl
sub
cwtl
mov
dec
mov
ja
aaa
test
mov
je
dec
imul
add
insb
enter
dec
jg
pop
addl
lods
lea
add
je
push
mov
test
cld
xor
xor
adc
xchg
mov
xchg
inc
mov
or
sub
lods
xor
sbb
iret
or
inc
nop
pusha
or
in
and
les
cmp
inc
inc
push
or
jns
popa
rcrb
add
push
mov
sbb
push
movl
dec
test
fdivs
lret
or
push
jno
add
out
dec
lock
iret
lea
lcall
mov
movsl
aas
jns
add
or
sub
jb
test
lret
fstpt
jne
jl
mov
dec
in
loop
dec
add
inc
and
xchg
sar
inc
jae
rclb
pop
mov
int
jge
leave
popa
cmp
adc
jo
dec
fisubrl
stos
mov
pop
jae
push
add
ror
pop
mov
sbb
sbb
xchg
xchg
lods
lret
loope
dec
adc
out
fwait
mov
sbb
xor
lds
xchg
stos
popf
mov
inc
pop
xchg
imul
mov
mov
cmp
lds
ja
out
lods
and
mov
js,pn
fwait
dec
test
out
aas
mov
pop
jge
loope
out
adc
push
or
loop
outsl
xchg
dec
loop
push
sahf
add
mov
push
movsl
clc
lahf
cmp
leave
push
lcall
and
fsubl
inc
mov
fwait
xor
fadds
testb
pusha
xchg
pushf
adc
mov
data16
test
push
movlps
lock
mov
mov
and
aam
add
out
arpl
cmp
mov
lahf
scas
gs
ret
cltd
and
pop
pop
push
movsl
add
bound
push
icebp
xorb
xor
lea
rcll
test
fcomps
ljmp
repnz
add
sti
pop
je
sti
adc
sahf
out
imul
cli
mov
or
test
in
out
push
mov
jmp
jle
adc
daa
dec
pop
sbb
mov
push
cwtl
sub
daa
into
arpl
sub
outsl
inc
out
dec
lods
pop
aas
icebp
das
push
loope
cmp
call
cmp
and
ljmp
in
test
xchg
fldenv
mov
or
mov
inc
inc
ret
mov
popa
fucomip
sub
cmp
add
push
dec
in
and
ja
insl
pusha
jno
jg
cmp
xchg
rol
cmp
pop
mov
shlb
adc
sbb
jne
arpl
movsl
xchg
push
xchg
jnp
ja
dec
pop
jns
fdivrl
scas
call
dec
xor
les
rorb
mov
ret
icebp
inc
dec
test
jge
cmp
lock
andb
test
xchg
jl
adc
add
jo
xlat
inc
sub
outsb
or
lahf
fsubp
xchg
sub
add
push
sbb
mov
cmp
jno
ja
cmp
push
ds
mov
push
in
hlt
js
jmp
dec
cmp
lock
popf
mov
ss
aam
js
sub
or
push
jae
or
jbe
lods
and
and
into
cmpl
mov
pop
dec
jae
out
push
in
push
push
push
loop
inc
mov
cmp
jecxz
push
add
rorb
cmp
dec
rcrb
and
sub
hlt
lea
pop
insb
in
sbb
xlat
mov
bound
idivb
cmp
lcall
ja
mov
xchg
inc
pop
push
xor
adc
imul
adc
lods
or
or
push
scas
pop
lds
lock
xchg
mov
push
mov
ja
call
es
repnz
pop
cmc
and
bndldx
fldt
pop
pushf
jecxz
jns
in
cmp
in
inc
rorl
push
mov
lahf
jge
mov
aaa
int3
inc
ficompl
lea
adc
andl
mov
add
hlt
mov
mov
xor
shl
insl
mov
dec
and
nop
jmp
jp
pop
push
xor
push
or
ljmp
test
shrb
in
gs
repnz
jp
inc
cmp
nop
and
and
pop
lahf
xor
push
xchg
lds
div
scas
cmp
adc
pop
ss
mov
repnz
cld
pop
cmp
pop
mov
mul
mov
pop
mov
pushf
xor
lahf
data16
inc
mov
sbb
sub
arpl
inc
insl
mov
push
rcrl
cmpsb
jp
mov
sbb
sub
les
ret
pushl
outsl
repz
push
pop
add
dec
lahf
loope
pop
push
hlt
adc
xchg
pop
adc
sbb
test
repnz
push
jbe
pushf
lret
sahf
imul
inc
push
arpl
out
mov
movsb
sbb
leave
jae
push
push
ds
test
or
sarb
inc
push
lcall
and
push
adcl
shll
jb
dec
insl
and
div
inc
scas
push
lcall
sub
shlb
sbbb
dec
xor
out
movsb
or
ja
mov
data16
lret
xor
and
fisttps
shlb
add
mov
inc
xor
xor
or
into
rorl
cmp
fstps
cmp
mov
sbb
ret
mov
inc
test
xor
insl
in
sub
rcl
push
repz
push
sub
xchg
shl
mov
cmpsb
mov
movsb
mov
aam
loopne
ja
mov
addr16
ja
rclb
daa
adc
push
es
mov
out
cmp
shrl
xchg
xlat
push
dec
push
dec
shrl
lock
test
sub
ds
jbe
insb
mov
ljmp
sub
dec
insl
xchg
inc
adcl
jae
into
mov
xor
lds
jnp
rcrl
jmp
cld
xor
pop
jge
sbb
fidivs
lret
inc
xor
es
inc
dec
out
cmp
inc
xchg
jbe
and
ss
movsl
ljmp
pop
out
shll
cmpsb
outsl
sub
lcall
mov
jle
jecxz
push
rorb
std
pop
push
rep
xchg
sub
xor
jmp
xchg
xlat
add
adc
push
cmc
out
pop
or
mov
rcrl
xor
gs
inc
push
or
aad
xchg
mov
or
pop
jmp
dec
loope
call
or
bound
ret
dec
pop
add
mov
sbbl
enter
loope
popa
hlt
xor
sbb
test
loope
add
inc
pusha
stos
in
imul
xchg
gs
addr16
dec
or
sarb
push
shll
adc
cmp
xor
mov
cmp
fs
in
movsb
pushf
mov
or
jnp
in
xchg
test
daa
dec
cltd
jecxz
out
inc
dec
mov
cmp
xchg
inc
stos
sub
ret
js
jle
add
or
scas
lcall
gs
cmpsl
sub
or
movsb
rclb
dec
ret
pop
add
test
test
iret
pop
or
ljmp
mov
mov
int3
xchg
xchg
push
rorb
std
inc
jae
lahf
xor
sbb
xchg
mov
or
mov
mov
repnz
mov
sti
sar
adc
xchg
and
push
stc
push
les
pusha
mov
xchg
cmp
movsb
adc
add
dec
sub
aaa
jle
jmp
popf
mov
dec
cmpsb
sbb
pusha
sti
jbe
jmp
lods
les
daa
jp
jmp
xor
fsts
int3
xor
rcll
inc
sbb
lcall
mov
and
or
adc
scas
xor
cmpsl
rorb
aaa
pop
push
lea
in
in
lods
ds
cmp
fisubrs
inc
sahf
inc
stos
push
imul
cltd
push
sbb
popf
sbb
cmpsl
push
sahf
repnz
push
dec
cmp
je
adc
xchg
fwait
xchg
mov
cmc
jo
adc
mov
sbb
outsl
dec
sub
jbe
roll
pop
fnstcw
out
sub
jg
rorl
jmp
mov
adc
mov
sub
sar
lea
inc
add
insl
aad
adc
and
mov
sub
vpacksswb
jmp
int3
test
ds
and
jl
add
inc
lods
arpl
outsb
mov
xchg
sbb
add
xchg
pop
push
cli
les
mov
push
sti
dec
in
inc
je
stc
jns
push
stc
push
adc
jle
ret
cmp
out
pushf
mov
aam
jl
jns
fwait
lods
sbb
outsl
cmp
scas
mov
xchg
cld
dec
imul
cmp
out
or
jb
pop
jge
stos
inc
fadd
hlt
xchg
xchg
pop
fwait
push
add
cmp
pop
add
cmp
lret
cmp
or
pop
inc
in
iret
sub
adc
or
pop
xchg
aam
lret
fcmovne
push
cmpsl
lcall
aam
pop
or
test
add
stc
adc
ds
adc
ucomiss
sbb
out
lea
push
icebp
adc
sub
cmpsb
mov
jp
insl
call
mov
xchg
add
in
mov
leave
mov
testb
fsub
lea
lcall
fistl
push
cmp
xchg
jle
div
mov
sub
dec
enter
fnstcw
mov
mov
push
adc
adc
fists
push
fwait
sbb
add
mov
ljmp
push
fldt
or
push
scas
fists
mov
cmpsb
dec
loope
mov
pushw
jle
imul
lock
data16
add
dec
push
cmpsl
inc
xor
and
les
jl
subb
jne
dec
fs
lret
pop
scas
pop
int
sbb
adc
or
jl
cmp
movsl
mov
out
dec
or
sbb
mov
add
mov
adc
ret
outsl
pop
mov
les
dec
rcll
ret
sbb
pop
jmp
jecxz
inc
jg
xchg
xor
or
xchg
mull
sbb
xor
xchg
mov
fcmovnb
cmp
push
and
push
bound
dec
cs
sub
xor
outsl
push
cmp
mov
rorl
call
rolb
loopne
js
ja
fisubl
mov
mov
xchg
repz
push
jnp
add
inc
jl
push
fwait
test
mov
jne
arpl
dec
pop
cmp
arpl
sub
dec
lahf
aad
mov
mov
mov
add
adc
loope
mov
test
xchg
mov
jecxz
and
pop
fwait
mov
or
hlt
or
xor
in
lods
sahf
pusha
dec
sbbl
div
jne
or
sar
loop
lret
mov
cmpsb
xchg
nop
sub
or
mov
lock
jb
rcrl
les
cmc
mov
mov
hlt
push
inc
pop
sub
mov
daa
gs
lods
jmp
lret
gs
xchg
sbb
out
out
inc
daa
adc
jmp
mov
inc
adc
clc
mov
cmp
mov
sub
jle
shlb
scas
call
cmp
add
aad
push
lods
dec
cmpsl
jns
add
xchg
jo
xlat
and
loop
inc
or
inc
out
nopl
rcr
add
shl
mov
fsubrs
movsb
mov
xor
int
jl
fsts
cmc
arpl
imul
mov
aaa
out
daa
push
or
adc
iret
rep
idiv
ss
mov
mov
lea
inc
jmp
lret
jecxz
imulb
imul
jmp
lods
pop
mov
sub
pop
mov
dec
es
jne
cwtl
mov
jo
ljmp
jl
out
stc
rorb
adc
xchg
rorl
stc
sub
cmp
jno
imul
lds
repnz
dec
movsb
and
in
loopne
out
aaa
push
hlt
jno
and
daa
lret
into
xchg
mov
jae
repz
ret
add
in
rolb
push
into
into
fldenv
push
fsubrs
adc
xchg
orl
add
adc
mov
add
dec
mov
dec
inc
and
or
ss
js
stc
adc
pop
jns
sbb
lahf
xor
jnp
mov
adc
lcall
push
inc
rcr
adc
jg
push
add
into
test
and
insl
mov
adcl
jle
xchg
pop
out
out
xor
cmc
inc
insl
faddp
js
cwtl
call
daa
fildll
repnz
or
out
cmp
scas
pop
sbb
xchg
pop
pop
jmp
fstpt
pop
gs
data16
lods
push
ret
pop
fmul
inc
rcll
pop
pop
or
hlt
test
dec
cmp
and
and
lock
outsl
into
cld
pop
jle
jmp
cmp
jae
add
in
in
or
mov
jns
sbb
movsb
push
aaa
pop
push
xor
int
cmc
pushl
mov
xchg
idivb
insb
and
loopne
aaa
jl
test
int
cmp
rorb
or
iret
ss
loop
add
cmc
mov
lods
or
inc
fbld
mov
decb
and
das
cmp
nop
sbb
pusha
mov
jmp
insb
and
add
les
stc
sbb
jl
test
movsl
adc
adc
pop
mov
adc
popl
mov
adc
xchg
pop
adc
or
test
mov
cmp
scas
push
adc
adc
shrl
cmp
popf
pop
shrb
pushf
ja
arpl
ja
mov
pop
mov
jne
fdivrs
mov
imul
push
push
rolb
inc
xor
cmp
movb
mov
cmpl
and
aas
popf
neg
jg
movsl
out
mov
xor
pop
xorb
or
loope
cmc
fisubl
xor
add
in
je
lcall
pop
cmp
fmulp
lods
movsb
addr16
inc
shrl
pop
mov
xchg
roll
icebp
out
ja
inc
loopne
sbb
loope
lahf
inc
nop
out
push
cli
stos
push
mov
mov
dec
aam
cmp
xchg
lahf
fwait
adc
in
push
jl
test
and
or
cltd
push
fs
xchg
arpl
jae
pop
and
and
xor
popa
cs
mov
out
mov
dec
sub
and
xchg
xor
inc
mov
or
js
test
and
mov
mov
scas
push
sarl
and
scas
scas
into
rcrb
add
mov
push
orl
daa
add
adc
mov
pop
xchg
cltd
orl
dec
jae
ficoms
and
aas
ret
jns
pop
and
ret
sti
xchg
imull
mov
mov
mov
xchg
sbb
mov
fs
add
mov
leave
shrl
mov
or
xor
and
add
pop
inc
push
push
mov
push
cmp
test
cli
call
loope
das
xchg
sbb
enter
cmc
in
in
pushf
in
dec
nop
jp
mov
adc
xchg
push
ja
je
test
inc
jo
mov
inc
jno
add
out
js
mov
into
dec
ljmp
imul
insl
xchg
loopne
adc
cmc
inc
push
loope
push
ljmpw
outsb
lahf
mov
dec
dec
sbbl
fisttps
dec
test
roll
mov
pop
stos
fimuls
xor
mov
lods
popf
scas
xor
push
cwtl
add
cmp
pop
dec
mov
mov
lods
sub
push
cwtl
xlat
cmc
ja
push
add
test
and
add
ss
dec
pop
sarl
xchg
or
mov
arpl
mov
xor
leave
jle
or
cmp
test
cwtl
mov
cmp
rcrb
in
adc
mov
das
sbb
inc
push
xchg
aas
cwtl
mov
sub
dec
repz
or
add
enter
add
fwait
in
lock
addr16
test
adc
cld
repnz
push
add
filds
inc
shrb
jmp
imul
xchg
jbe
pusha
fmul
and
cmpsl
adcl
sbb
mov
sahf
lcall
addr16
jno
stc
sub
mov
mov
int
loop
lret
inc
je
insb
movsb
xchg
popf
andl
adc
xor
decl
cmp
mov
adc
ja
test
aam
mov
and
aam
push
aas
or
iret
jge
shl
ja
dec
sti
shlb
aas
cmpsb
aas
loope
iret
sub
jnp
adc
cmpsb
cmpsb
jmp
sbb
xor
rorl
leave
sarl
push
mov
int3
movsl
aas
movsl
test
push
and
pop
mov
jg
cmp
adc
xchg
and
mov
add
addl
into
dec
pusha
mov
in
dec
mov
iret
push
xor
add
and
shll
sahf
or
fidivs
cmp
hlt
inc
mov
push
and
lods
jp
sub
mov
mov
or
cmp
out
pop
daa
iret
lea
push
inc
aas
inc
loop
sbb
fnstsw
and
jg
mov
add
fs
mov
jo
xor
call
arpl
xchg
add
andl
adcl
jle
and
int
sub
cmpsl
loop
cmpsb
fucomi
or
imul
xchg
test
jo
dec
faddl
flds
loopne
sbb
jecxz
js
inc
mov
fucom
insl
mov
and
popf
jp
add
mov
icebp
or
pop
inc
push
icebp
pop
or
out
sbb
or
sbb
fdivrs
inc
adc
das
mov
and
dec
icebp
push
inc
loopne
inc
mov
mov
cmpsb
adc
cmp
cmp
adc
fdivp
adc
mov
in
sub
roll
iret
lock
xchg
cmp
and
scas
sbb
cmpl
mov
enter
push
rclb
mov
adc
daa
fstps
and
pop
cltd
push
pop
mov
loope
inc
pop
in
jmp
push
jg
mov
push
shrb
push
mov
test
mov
mov
in
in
lods
adc
sahf
addb
cmp
adc
mov
mov
lret
xor
add
and
cs
jp
fwait
les
sbb
push
int
push
mov
and
mov
sub
aad
lcall
ficompl
jno
sysret
filds
in
test
ds
inc
mov
mov
sbb
add
xor
pop
loope
pop
sbb
flds
bound
inc
out
or
in
insb
pop
jbe
cmp
cmpsl
shrl
push
mov
push
mov
push
mov
jno
xchg
imul
stos
sub
mov
add
clc
les
aad
pop
add
cmp
pop
scas
adc
daa
add
pop
jo
mov
push
lahf
mov
dec
lahf
mov
imulb
mov
xchg
mov
rclb
fs
xchg
ds
and
sub
xchg
inc
mov
xchg
jle
int
pusha
lds
dec
cli
jge
lea
and
es
and
imul
push
dec
mov
jae
mov
jne
repz
push
incl
pushf
push
pop
fisttps
ret
cmp
andl
jo
jnp
decl
add
out
sub
mov
push
jb
sub
fwait
mov
test
mov
lret
inc
cmp
adc
or
push
data16
dec
push
ljmp
aas
push
nop
lcall
push
pop
aaa
inc
lcall
out
out
xchg
enter
cs
movsl
jae
pop
push
inc
pop
add
das
adc
lea
bt
push
dec
dec
movsb
subl
cltd
mov
cmp
lret
and
cmpsl
inc
mov
jae
pop
dec
movsl
test
clc
pop
ljmp
outsl
ret
mov
dec
pop
pop
jle
mov
push
adc
adc
fmull
add
push
cmpsb
add
test
or
push
aam
cmp
add
xchg
or
mov
js
test
adc
rcrl
mov
mov
mov
sub
inc
add
lock
js
lahf
stc
dec
cmp
inc
iret
bound
mov
or
jg
xchg
adc
cmp
inc
not
cmpsl
mov
or
mov
in
aad
mov
sbb
inc
jo
jp
sub
sub
sbb
jle
sub
jbe
sahf
andb
jbe
jne
ss
mov
ljmp
or
add
xorl
push
sub
mov
xchg
push
aaa
cmpb
pop
dec
xlat
xor
jp
lcall
mov
push
jmp
lcall
fidivs
sbb
mov
lods
push
sbb
cmp
xchg
pop
xor
decl
repnz
ljmp
jl
orl
or
pop
hlt
cli
cmp
or
add
push
scas
xchg
les
sub
jl
cmp
or
cltd
ljmp
lea
loope
pop
movsl
xor
fnstcw
lret
or
lret
repnz
jle
inc
or
imul
out
xor
divl
insl
sbb
or
not
push
std
test
mov
cmp
dec
adc
xchg
mov
mov
mov
ret
pop
pop
inc
movsl
or
cmp
bound
add
leave
repz
nop
xchg
or
jcxz
clc
mov
mov
out
or
mov
dec
mov
cmpsl
push
or
xlat
outsb
insb
dec
sti
sub
xor
lea
movsb
sbb
sub
loopne
std
outsb
xor
mov
bound
jmp
cmp
mov
add
inc
xchg
and
icebp
fdivrl
or
imul
xchg
imul
imull
push
hlt
stc
push
push
sbb
cwtl
adc
out
xlat
fbstp
int
popf
mov
cmp
push
icebp
fidivs
test
jne
sti
or
jno
shr
adc
jo
test
mov
arpl
fisubl
dec
cmp
dec
scas
add
sub
inc
stc
mov
popl
jne
add
sbb
xor
test
out
or
xchg
mov
adc
popf
pop
push
icebp
outsb
dec
cmpb
xchg
test
adc
in
fidivrl
cmpsl
pop
xchg
sbb
cmp
push
mov
in
into
mov
cs
aad
loope
stos
loop
cmp
jns
pop
in
mov
lds
mov
and
ficomps
mov
gs
cmpb
mov
jb
dec
push
ljmp
and
xchg
idivl
jb
inc
addr16
sbb
push
mov
clc
lret
mov
nop
in
push
sub
outsl
aam
xor
addr16
insl
decb
sub
jbe
into
jne
jg
push
mov
pop
negb
into
xchg
cmpb
mov
and
cmp
jnp
sub
mov
add
insb
ror
mov
repnz
push
or
mov
mov
sub
cmp
mov
and
mov
or
cs
test
xor
pop
xor
pop
push
mov
lods
mov
cld
fists
sarb
je
xor
xor
jns
dec
xchg
mov
popa
xchg
add
jno
jmp
rol
mov
insb
fidivl
nop
push
adc
sub
mov
rcll
nop
sbb
ret
movsb
int3
lret
ja
gs
pop
push
push
mov
call
gs
adc
gs
loopne
push
sbbl
push
popa
pop
cmp
add
hlt
mov
dec
daa
xor
int3
push
js
or
test
iret
xor
cmp
and
inc
stc
pop
adc
xchg
or
ficoms
sub
xor
stos
mov
xlat
push
aad
imul
mov
pushf
push
pop
aaa
mov
ror
jns
xor
fs
add
push
xchg
or
aam
xlat
insb
push
xor
inc
fisttpl
sbb
push
imul
add
fwait
incl
add
add
and
inc
sub
call
push
test
dec
xchg
jo
mov
pop
in
jecxz
mov
and
lahf
dec
inc
lcall
mov
push
ficoml
xor
testb
gs
test
dec
mov
or
xchg
jbe
push
leave
popf
mov
jbe
iret
inc
push
inc
cmp
xchg
xchg
mov
mov
and
mov
scas
test
fldt
xor
int
and
jg
jge
scas
pop
data16
and
insb
fsubl
and
ds
lret
call
int
inc
call
stc
arpl
cwtl
or
mov
imul
sbbb
cmc
add
cmpsb
dec
sub
fs
sbb
mov
add
addl
data16
jmp
xchg
mov
loop
imul
repz
loopne
jle
les
popa
rol
adc
cltd
in
outsl
js
sbb
mov
jo
mov
pop
repz
push
fidivrl
pushl
add
iret
test
add
mov
and
adc
pop
inc
inc
or
sarb
mov
jnp
xchg
loop
popa
enter
cltd
xor
mov
je
jnp
and
mov
jmp
shlb
mov
and
jmp
loopne
mov
sbb
xchg
pop
jge
cmp
cmp
mov
mov
pusha
mov
push
sub
and
adc
sbb
mov
call
add
inc
sbb
sub
jle
pop
sub
in
stc
sub
and
addr16
pop
sub
shrb
sub
dec
cmp
xchg
aaa
sub
popa
outsb
mov
lcall
aad
and
xor
jno
xchg
fcmovu
dec
pushf
adc
sti
mov
stos
fsubr
xchg
pop
fsubl
jmp
scas
lds
mov
xor
iret
std
repz
bound
cld
icebp
push
test
sbb
mov
lea
xchg
pushf
sahf
ret
dec
push
sbb
jns
mov
cmpl
fsubp
jb
cmp
push
or
pop
movsb
jge
add
push
mov
inc
adc
call
movsb
sub
sti
mov
fildll
jns
movsl
aad
into
gs
je
test
dec
adc
popa
ds
xor
push
xchg
lods
lods
cmp
cld
push
mov
jo
insl
lea
jne
ss
mov
or
xor
lock
inc
cmp
mov
lock
sbbb
stos
mov
pop
jl
dec
dec
hlt
mov
test
push
leave
insb
sub
ss
jecxz
leave
inc
push
cmp
or
jnp
movsb
sub
jo
test
xlat
dec
jnp
cmp
int
test
mov
inc
lock
clc
pusha
int3
or
hlt
dec
decl
xor
dec
cmp
sti
cwtl
pop
fdivp
push
adc
inc
fucom
jb
jecxz
out
or
out
scas
out
inc
cmp
sbb
insl
clc
pop
push
adc
cltd
in
into
enter
pop
jge
notb
int
repnz
adc
jp
inc
cmp
lahf
pop
cld
or
shll
call
icebp
shrb
jl
xchg
jae
inc
cmp
pxor
fidivs
pop
nop
jns
add
mov
ljmp
lcall
and
out
je
call
nop
push
dec
je
outsb
mov
inc
sub
push
pop
jns
enter
scas
fadd
cwtl
xor
add
cltd
xor
add
add
pop
mov
pop
test
sahf
lods
xchg
jle
jmp
sbb
bound
cmp
mov
sub
xor
pop
push
inc
cs
imul
pop
dec
aaa
jge
mov
mov
jo
stos
dec
cs
and
cmp
or
fcompl
mov
jmp
movsb
scas
mov
fidivrl
femms
mov
inc
test
or
inc
lcall
daa
clc
popf
xor
jle
mov
addr16
testb
pop
outsl
fisubs
arpl
xor
xorb
xor
mov
xchg
xor
pop
adc
lods
jns
add
cmpsb
xlat
mov
ljmp
pop
ret
xlat
shlb
and
ja
cmpsl
inc
mov
imul
add
xchg
call
mov
sbb
and
sbb
mov
inc
insl
jns
bound
xchg
jle
mov
sub
out
bound
icebp
hlt
push
leave
push
notb
sbb
add
dec
lds
xorl
cmpsl
daa
jg
je
enter
mov
test
fistl
bsr
mov
ja
sbb
mov
mov
inc
push
sbb
sub
jle
test
scas
ficompl
cmp
call
jns
pop
or
jae
mov
ds
dec
in
addr16
adc
outsl
inc
pop
scas
popa
das
dec
jl
fiadds
sub
popf
mov
scas
mov
inc
in
jo
xchg
or
aaa
cmp
movl
rcrb
jg
lea
movsb
int
sbb
outsb
pop
fisubrs
push
outsl
xchg
and
sahf
and
repz
lods
sbb
out
dec
or
pushf
movsb
xchg
cld
lahf
xor
ds
in
stc
dec
shr
cmp
scas
cwtl
push
int3
inc
fwait
out
sbb
mov
lock
xor
or
shl
push
sbb
out
stos
stc
pop
jae
xchg
pop
sbb
jp
fs
cwtl
cltd
movsl
dec
cld
or
mov
stos
mov
mov
and
sbb
sub
loop
cmc
inc
xchg
int3
loopne
stc
call
mov
push
loopne
faddp
test
pop
inc
ss
movsl
fcmovnu
jmp
shrl
fstl
xor
into
pusha
xor
cmp
std
pop
dec
btcl
int
stos
sbb
xchg
jb
cmc
out
push
cmpsl
psadbw
jecxz
sbb
or
push
adc
cmp
xchg
mov
sub
repz
dec
dec
sti
idivl
fucompp
pusha
cmp
sub
mov
sbb
cli
dec
xchg
mov
add
mov
push
dec
jmp
xchg
dec
dec
pop
ret
shl
or
pusha
add
aas
dec
xlat
sub
inc
ret
push
clc
outsl
lret
pop
push
xchg
rorl
xchg
test
mov
popf
push
xlat
xor
lods
aas
aad
dec
rcrl
dec
sbb
shlb
cli
pop
or
cmp
mov
enter
test
outsb
shlb
mov
fs
fistl
das
out
dec
mov
add
popf
mull
fistpll
ss
add
pop
or
sub
push
iret
lea
pop
xor
xchg
pop
jb
inc
call
pop
adc
adc
pop
mov
andl
mov
sub
dec
and
xchg
sbb
inc
stos
pop
dec
xor
js
leave
push
lahf
fnsave
fcomps
inc
cli
add
outsb
loopne
mov
xchg
inc
adc
lcall
scas
out
pop
mov
and
pop
and
or
adc
rclb
gs
mov
outsb
pop
jno
sbb
xor
jecxz
xchg
or
bound
cli
fcomp
push
ja
adc
and
dec
stc
shlb
cmp
iret
pop
inc
out
push
test
inc
pop
mov
xor
fnstcw
add
test
fadds
push
pop
sub
pop
add
sbb
adc
stos
cmp
inc
imul
sub
cwtl
mov
dec
loope
pop
popa
and
aaa
sub
jl
in
vpmacssdd
movsl
pop
out
inc
dec
popa
jbe
push
xor
add
out
imull
sti
mov
and
mov
mov
mov
aad
cmpsl
aam
jb
sub
jmp
push
add
mov
jecxz
cs
inc
jnp
and
dec
idiv
cmpb
mov
nop
andl
mov
push
xchg
mov
jle
sbb
xchg
lods
cltd
pop
flds
mov
inc
mov
popa
jae
add
int
add
push
xchg
popf
inc
movsb
mov
adc
outsb
fidivrl
imul
adc
xor
out
aam
pop
out
dec
sbbb
jge
mov
leave
pop
clc
mov
sub
fwait
sbbb
aas
shr
xchg
adc
sahf
mov
dec
xchg
test
xchg
or
inc
pop
clc
push
rcll
xchg
cwtl
add
push
cmp
cmc
jns
sbb
mov
sub
aad
push
ja
mov
popa
pop
js
xor
jne
jne
lea
jbe
pop
lea
mov
xchg
sbb
in
cs
pusha
mov
bound
jmp
and
into
push
pop
pop
repz
scas
fwait
repnz
xchg
test
push
jecxz
ret
mov
scas
or
leavew
test
imul
dec
mulb
mov
xor
cmp
xor
test
inc
push
and
and
lcall
out
mov
icebp
mov
pop
sbb
inc
ds
rcll
bound
mov
dec
push
adc
jno
sub
inc
daa
and
mov
inc
jl
je
pop
mov
mov
pop
fildll
sbb
sbb
pop
ss
and
sbb
pushf
fidivs
in
mov
scas
loope
aas
in
mov
cmc
mov
ljmp
pop
xchg
clc
dec
in
into
cmp
xchg
and
dec
xchg
icebp
test
cmp
inc
mov
fdivs
lock
int3
cld
push
cs
adc
jbe
and
outsl
mov
into
and
ja,pn
or
out
rcrb
jg
addr16
nop
xchg
push
cltd
and
mov
test
jmp
adc
outsb
xchg
aam
loope
idiv
out
faddl
lret
sbb
push
cmp
push
imul
leave
dec
addr16
sub
mov
std
movsl
xor
pop
xlat
pusha
jecxz,pt
in
stos
adc
dec
pop
adc
push
mov
mov
cmpsl
sub
je
jmp
adc
push
and
jp
rol
lock
cmp
test
call
add
mov
adc
add
mov
mov
mov
ret
push
xbegin
aam
sbb
pop
call
dec
je
icebp
clc
xchg
sbb
push
bound
fisubrs
push
aam
push
sub
pusha
dec
aaa
or
adc
into
lea
xor
ss
icebp
jae
rolb
in
cmpsl
push
xor
sbb
cmc
es
add
cli
and
add
sbb
xchg
stos
leave
hlt
enter
mov
aaa
aam
into
lds
sti
shl
jnp
mov
jno
push
push
mov
mov
in
lock
mov
lods
test
jecxz
rcrb
mov
jl
daa
add
cmpsl
lock
lock
cmpsb
cmp
lahf
inc
mov
inc
sub
es
ret
cmp
call
push
jbe
sahf
mov
or
adc
inc
jbe
xor
int3
pop
test
cli
cltd
pop
ljmp
fwait
dec
cmp
arpl
hlt
lock
loope
adc
data16
lcall
es
pop
stos
cmp
or
sub
sbb
fstpt
pminsw
pushf
inc
inc
jg
movl
pop
test
in
add
sub
movsl
ss
jmp
or
les
inc
pop
popa
add
inc
ss
push
mov
aaa
std
out
pop
mov
mov
mov
fdivl
and
xor
jmp
popa
popl
push
js
mov
inc
lcall
push
repz
cmp
fidivrs
aam
ljmp
add
push
pop
sti
int
and
ficompl
movsb
add
imul
sbb
test
sub
cmp
xchg
dec
mov
push
pop
pop
fistl
mov
mov
repz
testb
nop
cmc
add
inc
iret
lcall
mov
add
cmp
js
pop
js
scas
repz
pop
in
and
inc
adc
sub
and
mov
ljmp
gs
jno
sub
mov
and
sbb
sbb
in
pop
sub
dec
inc
sub
int3
dec
test
shlb
cltd
out
popf
sarl
cwtl
repz
call
loop
dec
jo
jle
mov
into
js
fildl
dec
stc
mov
xor
jne
stc
into
push
cmc
sahf
inc
fwait
subl
rorl
and
fistps
rcrl
xor
scas
call
fdivrs
jle
jmp
xor
push
jns
and
sub
cmp
pop
sub
mov
inc
dec
fdivr
or
and
cli
inc
pop
and
insb
shlb
scas
jns,pn
in
out
dec
dec
repnz
das
add
or
mov
cmp
add
fwait
inc
inc
roll
mov
popf
leave
sahf
enter
movsb
gs
push
ja
lock
mov
add
xchg
outsl
or
push
push
cmpsl
mov
cmp
mov
sbb
push
fwait
test
xchg
out
sbb
fcoms
call
xchg
and
int3
repz
jo
int3
mov
jmp
adc
imul
mov
cmp
repz
sar
leave
sahf
ja
or
out
es
loop
dec
pop
dec
sub
outsb
dec
in
inc
in
add
jmp
hlt
sbb
mov
add
cwtl
jmp
cmp
int
hlt
push
cmpsb
cmp
aaa
sti
sahf
out
enter
jl
outsb
push
add
cmp
pop
pop
mov
adc
jae
testl
call
inc
stos
mov
fwait
or
pusha
cli
pop
jecxz
jle
daa
shrb
mov
pop
test
out
div
add
sbb
int3
das
pop
jae
cmp
adc
fwait
cwtl
adc
fnstsw
xchg
mov
mov
loopne
inc
das
jo
push
subl
mov
and
xor
cmp
fcomip
sbb
inc
mov
mov
addr16
fildl
lret
adcl
aam
xor
jg
lret
push
inc
xchg
push
popf
mov
cs
xlat
add
pop
push
repnz
adc
pop
insl
xchg
jb
std
icebp
push
xor
fcom
inc
pushf
inc
pusha
jo
inc
jp
xorl
cli
sti
sub
clc
stc
sub
or
cmp
out
add
dec
push
mov
mov
loope
adc
mov
pop
ljmp
pop
enter
or
cmp
push
cmp
adc
fsubr
hlt
xlat
stos
jno
in
xor
pop
lahf
dec
dec
jb
lds
jne
cmc
push
lock
xor
cmp
inc
adc
outsl
dec
sub
aad
mov
xchg
out
int
mov
in
ret
pop
idivb
xchg
and
xchg
jns
gs
cmp
inc
fistpll
xchg
mov
lret
cmc
sub
jnp
imul
mov
ja
adc
and
inc
ret
stc
shll
push
test
mov
xchg
xchg
jp
push
pop
add
imul
mov
imul
push
xor
lcall
xchg
mov
ret
shll
hlt
push
aad
movsb
or
xchg
lahf
jecxz
mov
aad
jl
loop
loop
mov
xor
shlb
repnz
inc
jbe
sbb
addr16
movsb
imul
lret
push
mov
imul
mov
shrb
icebp
je
mov
inc
add
push
xchg
les
cmc
leave
call
insl
mov
aaa
pushf
xchg
pop
daa
inc
jg
sarl
outsl
xor
inc
dec
adc
out
mov
sub
dec
lret
js
xor
test
jbe
push
mov
mov
mov
std
fdivrs
cmp
rorb
cwtl
stc
imul
cs
out
jo
insb
std
scas
mov
into
cmp
insl
jle
mov
loopne
or
adc
sbb
mov
xor
pusha
xchg
clc
push
push
cmp
add
jb
aaa
outsb
lods
push
popf
xchg
push
cmc
inc
sahf
sbb
inc
nop
push
dec
cmp
xor
outsb
mov
add
gs
mov
test
cmp
cwtl
mov
les
fstpl
jmp
orl
cli
sbb
jge
cmp
push
and
pop
jo
outsb
adc
cmc
add
rcrb
pop
dec
adc
pushf
ljmp
fimuls
sub
mov
mov
xor
out
jle
pop
xchg
nop
dec
xchg
cmpsb
ja
cmp
push
test
fs
js
mov
pop
jae
mov
sub
pop
repz
sbb
sbb
cmpsl
or
cltd
in
inc
push
leave
mov
mov
xchg
or
inc
cmp
inc
xor
adc
rcl
aas
test
flds
dec
mov
iret
mov
fildll
xchg
push
sub
or
fiaddl
pusha
jmp
jg
mov
cmc
lods
or
rorb
scas
mov
mov
inc
lahf
lahf
fmull
les
jae
mov
popa
pusha
lods
test
stc
xor
sub
push
shll
sbb
pop
icebp
cs
push
js
pop
pop
mov
mov
fcom
pop
ret
mov
fistpll
int3
aad
lret
add
push
or
sti
aam
jp
cmp
cmp
add
or
in
mov
sub
jl
push
adc
inc
cmp
mov
adc
cltd
jne
inc
insb
inc
lahf
sti
fs
add
out
inc
cld
pushf
lea
jge
fmuls
pop
add
repnz
xchg
push
les
outsl
test
pop
mov
in
div
ficoms
test
mov
movsl
loope
cmp
insl
xchg
inc
ljmp
push
and
outsl
adc
pop
pop
stos
cmpsb
call
enter
jne
sahf
and
hlt
addr16
mov
and
sub
clc
ds
sub
xor
jae
dec
mov
out
jp
sub
mov
add
clc
mov
inc
xor
shlb
inc
cmp
mov
push
jle
outsw
add
mov
icebp
push
xchg
sbb
insb
arpl
fdiv
pop
pop
cmp
es
test
cmpsl
mov
test
addr16
add
arpl
sbb
sub
sbb
xchg
lahf
aad
dec
cmpsl
aas
and
add
and
push
loopne
in
lock
xor
ja
inc
cmp
xchg
or
adc
jb
xchg
dec
cmp
add
pop
fiaddl
or
xchg
mov
xlat
loopne
mov
add
stos
jl
push
inc
add
sub
pop
nop
adc
adc
cmc
js
les
adcb
mov
push
enter
mov
pusha
lds
adc
ljmp
mov
sbb
xchg
ja
ja
add
ds
cmpsl
push
xor
mov
adc
xchg
scas
mov
adc
sbb
scas
push
mov
add
jb
mov
add
mov
pop
and
popa
inc
inc
pop
or
jle
jns
sbb
ss
fwait
xchg
insb
mov
dec
mov
nop
call
mov
in
pop
mov
stc
sub
inc
addr16
imul
dec
cmc
sub
pop
xchg
aas
or
xor
cs
fs
pop
shlb
gs
push
hlt
imulb
nop
fwait
addb
cmpsl
nop
jge
shrl
pop
jge
pop
xchg
adc
out
jbe
mov
mov
mov
dec
popa
imul
mov
adc
subb
cli
mov
push
inc
jns
fldl
imul
pop
lret
setnp
nop
adc
lret
ja
ljmp
ss
push
add
js
ret
stos
imul
ja
test
mov
fdivs
add
cmp
jno
inc
xchg
iret
cli
iret
mov
out
in
lock
test
scas
cmp
jmp
cwtl
mov
mov
cvtpi2ps
adc
xchg
and
inc
sbb
das
test
mov
cmp
pop
xchg
jbe
xor
mov
adc
sbb
cmp
fwait
nop
rolb
popf
into
lret
sub
pop
mov
jge
out
test
push
push
gs
scas
push
insl
adc
push
stos
and
inc
add
scas
sbb
je
sub
je
sub
cli
mov
or
push
test
mov
adc
inc
fwait
ret
or
hlt
ljmp
or
out
adc
fbstp
push
lret
inc
xchg
smsw
daa
cld
mov
dec
stos
popa
dec
repnz
out
jb
dec
lods
mov
ffreep
notl
adc
pop
sbb
push
push
and
adc
push
or
call
mov
push
fildl
popa
insb
test
add
dec
push
mov
pop
and
cmp
fyl2x
into
pop
cld
mov
repnz
out
pop
mov
dec
test
pop
test
jnp
rorl
mov
dec
in
add
out
aaa
loopne
jae
ja
or
in
dec
enter
mov
inc
shrl
and
aad
sub
sbb
in
jbe
movsl
movsl
rcrb
popa
jmp
jnp
fs
mov
movsb
mov
mov
xor
aas
pop
dec
insl
in
cmp
popf
mov
pop
cmp
pop
adc
sbb
push
scas
and
xchg
pusha
xchg
jae
test
add
and
roll
mov
or
pushf
xchg
js
push
outsb
inc
loop
imul
and
xchg
dec
les
push
stos
fst
pop
sub
enter
rorb
fildll
cmp
rorl
mov
mov
push
test
push
jle
pop
lcall
add
movsb
sbb
shlb
xchg
jmp
xorl
mov
add
mov
cmp
mov
loopne
es
fsts
push
xchg
push
sarl
fsubs
and
aam
dec
cli
jecxz
inc
push
enter
dec
aaa
arpl
adc
shll
lods
dec
aaa
stc
mov
pusha
shlb
xchg
add
xorl
jmp
lret
ss
xchg
roll
hlt
pusha
jns
fcoml
xor
push
inc
inc
jno
ret
pop
pusha
popa
mov
ja
aad
push
xchg
rcr
push
jo
jmp
push
popa
jo
push
and
outsl
loope
mov
lods
mov
mov
jno
mov
loopne
fstps
dec
and
arpl
rol
mov
jae
jmp
and
adcl
inc
or
jae
ret
xchg
aad
mov
inc
repnz
ja
xchg
sub
sub
cmp
push
popa
sahf
mov
sbb
lea
daa
ret
pop
pusha
lods
out
jg
push
inc
add
cmp
data16
hlt
ss
cmp
pop
push
sbbb
xor
int
pop
mov
jbe
xlat
pop
cmc
jp
lock
add
test
mov
mov
cmp
and
shr
mov
xchg
inc
cmp
mov
es
jne
sub
mov
lock
shld
xchg
ss
imul
ret
scas
mov
iret
xlat
inc
fwait
cli
mov
fwait
mov
adc
ds
subl
sbb
mov
dec
push
push
test
mov
mov
xor
dec
pop
pop
add
mov
ud2
das
pushl
roll
mov
xor
xchg
lahf
aam
mov
cmp
jp
addr16
fistps
inc
mov
xchg
mov
sbb
repz
cmpsl
fcoml
push
mov
mov
ds
xchg
jecxz
mov
jb
jno
inc
sarb
jp
add
loopne
repnz
push
fwait
into
mov
rcr
pop
jo
leave
adc
sub
xor
dec
jo
push
je
ret
push
cmpsl
mov
push
or
sub
call
pusha
pop
popa
in
mov
in
in
sbb
dec
push
adc
insb
push
mov
xchg
out
scas
cli
cwtl
out
add
popa
shlb
sbb
jae
sti
insb
mov
in
hlt
iret
xchg
pushf
sbb
xor
addr16
shll
iret
pusha
pop
idivb
lds
jns
lret
push
add
test
jae
sbb
sti
push
xchg
stc
push
adc
sarl
js
out
loopne
cmp
sub
push
or
test
push
cmp
mov
sbb
jl
rorb
rorl
adc
addr16
add
jle
movsl
jns
data16
sbb
loop
push
addr16
pop
les
rorl
das
in
cltd
test
test
fcmovne
in
cmp
cmpsb
xchg
jecxz
ret
out
loop
scas
roll
cmpsb
pop
test
and
into
icebp
push
ds
jb
mov
jnp
imul
dec
js
mov
lahf
pusha
cltd
outsl
cmp
addl
das
fsubs
push
loopne
pop
lret
les
jae
lcall
int3
neg
pushf
loop
pop
iret
mov
dec
pop
in
xor
cmp
jg
jmp
cmpl
mov
subb
cmp
mov
cvtdq2ps
and
push
dec
out
ss
mov
jg
aad
pop
sub
rorl
xor
pop
or
push
out
jae
lahf
sti
adc
fldt
jg
out
xlat
inc
sub
dec
aad
push
and
pop
jmp
daa
sbb
cld
push
outsl
fidivrs
movsb
xlat
pop
rcrb
ss
inc
enter
mov
xchg
mov
xor
jns
jmp
cmp
and
inc
mov
mov
gs
and
fldenv
fisubrl
loop
sub
jle
cmp
lock
addr16
mov
push
cmp
dec
call
xor
in
jae
mov
cli
mov
pusha
lods
subb
inc
mov
mov
aam
mov
mov
dec
aaa
xchg
cmc
loop
data16
fnstsw
jle
pop
adc
cmp
sub
or
dec
loopne
enter
fbld
cmc
xorl
aas
mov
push
loopne
push
push
ljmp
or
iret
loop
sub
pop
push
sbb
ret
fisubs
jmp
and
add
clc
pop
xor
sub
in
sbb
popa
mov
push
fyl2x
out
mov
mov
cmp
xor
aas
stos
scas
cwtl
mov
out
jnp
xchg
or
notb
notrack
popf
add
movsl
addb
outsb
addr16
sbb
pop
int
xchg
dec
lahf
mov
dec
scas
js
shlb
outsl
xchg
push
push
pop
addr16
iret
popf
adc
and
push
call
in
popf
dec
add
add
mov
movsl
gs
call
les
jp
push
inc
loop
int
movsl
mov
popf
sahf
fucomip
insl
out
mov
mov
fwait
jo
arpl
pushf
es
sarl
push
sbb
test
add
loope
pop
pop
or
push
enter
adc
adc
sbb
mov
xchg
and
and
cmp
addr16
icebp
adc
cmpsb
xor
xchg
mov
push
es
data16
pop
mov
pop
hlt
out
sub
ja
cmp
mov
aaa
test
jmp
and
sbb
aam
xor
cmpsl
out
xor
enter
repz
jo
push
jo
ret
cmp
inc
sub
push
pop
cmp
mov
jne
and
mov
movsl
push
test
mov
xor
movsb
cmpsb
insl
add
jle
shrb
dec
xchg
je
and
js
in
addr16
pusha
mov
push
mov
mov
sub
icebp
popf
push
pop
mov
cmpsb
aas
hlt
test
mov
push
dec
push
scas
sub
cltd
push
dec
cmp
ret
mov
mov
xor
xchg
dec
js
mov
lock
xchg
pop
push
out
in
jb
cld
mov
inc
andl
push
outsl
xchg
push
lea
push
add
out
xchg
xchg
adc
add
push
leave
test
lret
or
dec
dec
mov
test
adc
and
popa
in
and
push
xchg
jne
fsubr
fldcw
jnp
adc
stc
aas
jmp
jge
rorl
sub
aam
pop
jae
lret
lds
pop
stos
gs
inc
gs
test
aam
sub
sti
and
mov
aam
movsl
shrl
stos
add
aas
sarb
xchg
sub
nop
imul
sahf
mov
mov
and
jmp
mov
mov
shll
fldenv
xor
mov
stc
outsl
sbb
cwtl
loopne
mov
jb
cltd
sbb
imul
mov
jge
ja
sbb
push
outsb
and
pop
js
or
enter
and
js
inc
nop
mov
sub
bound
dec
adc
dec
rorl
mov
imul
icebp
imul
in
lret
shr
jge
insl
xlat
es
out
jl
sub
inc
jae
or
cmp
add
clc
in
mov
test
je
aad
hlt
cmpsb
daa
test
mov
imull
arpl
or
dec
icebp
sbb
adc
int3
sti
push
jmp
fidivl
mov
xor
sahf
sub
xchg
xchg
adcl
inc
lret
xor
cmp
dec
pop
cltd
pop
enter
fsubrp
lods
mov
les
mov
je
sar
pop
pop
mov
jns
xchg
push
and
pop
movsb
push
or
or
jmp
stos
repz
scas
ds
jns
frstor
cwtl
ja
mov
jl
mov
and
js
xchg
jge
xchg
mov
clc
pop
mov
mov
xchg
imul
xchg
shlb
inc
jecxz
dec
push
xor
lods
push
testl
adc
insb
lret
cld
add
fisttpl
rorb
out
jo
adc
mov
add
add
into
scas
mov
dec
test
xor
sti
or
fcompl
mov
jge
push
mov
push
dec
pop
and
jnp
test
sub
and
imull
loope
cmp
jle
iret
cmp
lret
idivb
mov
inc
mov
fisubl
or
adc
mov
ficoms
cmp
iret
je
fimuls
push
insb
mov
ja
in
scas
jo
aad
jg
scas
xchg
lcall
add
sbb
std
pop
cmp
lret
adc
sbb
je
adc
push
and
xor
xor
fwait
cmp
rcrl
and
inc
push
adc
mov
inc
cmp
mov
mov
lods
mov
adc
mov
xlat
sbb
divb
xor
sbb
aad
xchg
sbb
ret
pushw
add
nop
sbb
outsb
iret
lods
test
push
dec
cmp
add
in
addr16
or
sub
jbe
fistpl
addl
sub
icebp
xchg
lahf
xor
fstpt
mov
fwait
xor
dec
fnstsw
arpl
cmp
fwait
mov
inc
push
sti
movsl
xor
dec
andl
inc
mov
mov
cmpsb
add
xchg
shl
rol
inc
es
adc
in
add
jmp
lret
xor
test
mov
xchg
inc
inc
adc
mov
mulb
mov
jo
pop
pop
add
cmp
xchg
push
xor
fs
jae
in
stc
jno
and
mov
or
jno
lock
cmp
and
gs
mov
arpl
mov
mov
and
ds
rep
cli
enter
jl
or
pop
mov
mov
pop
adc
inc
jmp
mov
addr16
mov
sub
imull
dec
std
xchg
cmp
enter
faddp
inc
ret
xchg
inc
scas
data16
xlat
and
inc
insb
hlt
push
out
js
jg
pop
mov
or
or
movsl
push
fdivr
idiv
je
popa
xlat
push
in
jmp
add
fsubp
orb
repz
mov
push
cs
stc
daa
jmp
adc
scas
sub
addr16
shl
jnp
scas
jb
pop
xchg
or
movsb
enter
mov
lahf
pop
in
push
pop
sub
test
mov
push
mov
mov
out
inc
rcrb
mov
sub
sub
adc
fsubs
ja
aad
xor
das
add
jns
push
push
pop
ljmp
js
ljmp
mov
jae
dec
sbb
imul
push
xchg
mov
pop
push
cmp
add
pusha
popf
xchg
push
stos
add
scas
icebp
mov
icebp
sub
inc
arpl
sub
add
aas
xchg
push
icebp
aas
out
dec
mov
dec
inc
shrl
sti
jmp
adc
cmp
daa
js
mov
push
lcall
clc
enter
mov
clc
push
mov
add
jb
rclb
pop
xlat
xor
popf
dec
push
jbe
fistpll
inc
mov
jb
xor
je
jp
nop
push
jno
xchg
sbb
lods
cmp
xchg
push
xadd
mov
aad
sbb
or
and
cmp
lret
push
lret
filds
push
mov
loope
adc
pop
pop
jg
adc
pop
push
lahf
sbb
movsb
mov
cli
mov
xchg
nop
sbb
test
dec
shll
test
xor
or
scas
cli
div
int3
sbb
sub
pop
lock
lds
sub
sub
shll
xchg
orl
cmp
xlat
cwtl
repnz
repz
ret
and
add
ss
jle
pop
sti
add
push
aam
call
dec
mov
icebp
lret
jge
adc
sbb
jne
cmp
xorl
adc
push
cmp
mov
pop
leave
test
pop
rol
pushf
xor
fsubp
aaa
mov
les
cli
test
test
mov
in
loope
adc
inc
or
jmp
pop
test
xchg
bound
mov
sbb
mov
pusha
lea
outsb
loopne
sbb
je
ret
jle
ja
daa
mov
flds
lret
sahf
push
pop
jl
hlt
inc
movsb
loope
cmp
dec
inc
jg
test
popf
mov
mov
mov
ss
into
push
mov
and
arpl
or
cmpsl
push
mov
or
jae
push
cmp
and
test
arpl
jb
aad
push
xor
sbb
xchg
jmp
push
shrb
call
test
negb
sbb
sbb
or
test
lods
sub
jnp
mov
jbe
imul
xchg
sti
xor
lock
add
adc
mov
dec
pop
jb
push
xor
pop
outsl
test
shll
retw
cmp
movsb
cmpsl
je
int
stos
dec
aam
add
into
xchg
nop
orl
dec
sub
push
mov
xchg
and
pop
cmp
pop
dec
pop
mov
push
xor
or
pop
cli
bound
mov
jne
sbb
adc
in
pop
inc
pop
in
xchg
sbb
scas
ja
sub
leave
and
mov
or
mov
mov
orb
adc
loopne
adc
push
or
jno
dec
ljmp
pminsw
rorl
xor
sbb
loope
fwait
dec
push
push
inc
dec
mov
pop
fstl
stos
sub
push
and
inc
leave
cmp
or
mov
movsb
sbb
pop
popf
test
nop
inc
pushf
jbe
jb
andb
jne
lahf
sub
dec
test
jge
pop
and
fstps
jle
sbbb
leave
jge
mov
sub
and
lcall
popf
aaa
pop
out
sbb
lahf
repnz
rolb
lea
adc
sahf
dec
repz
add
ret
imul
out
lcall
push
push
push
jg
adc
shr
sub
leave
adcb
addr16
stos
xchg
mov
inc
sti
mov
lods
mov
xchg
mov
and
rcl
mov
mov
and
inc
cmc
mov
int3
ja
imul
and
adc
or
jno
push
aaa
cmp
out
test
fisubl
mov
imul
push
push
dec
sbb
cld
or
adc
adc
push
nop
sbb
inc
pop
xchg
movsl
jge
xor
sub
inc
repz
mov
std
mov
arpl
in
sub
sbbl
mov
das
push
add
cmpsl
ljmp
repnz
out
pop
mov
or
jo
xchg
out
xor
adc
shufps
and
fldenv
cmp
imul
popf
test
lea
inc
gs
push
scas
or
aas
insl
push
testb
jmp
add
sbb
popf
mov
daa
xor
jo
ljmp
ret
cmpsb
sahf
or
push
mov
sarb
jns
movsb
sub
les
sub
pop
stos
cmp
inc
inc
ljmp
test
insb
mov
adc
shrb
pop
lock
xchg
add
and
fmull
addr16
inc
imul
dec
repnz
xchg
dec
in
dec
ljmp
pop
sbb
nop
gs
out
ja
scas
cmp
mov
sub
add
jmp
stos
fisttpl
xchg
mov
inc
push
pusha
fdivs
repz
push
xor
push
mov
pop
mov
pop
mov
shll
movsb
mov
mov
cmp
xchg
lret
push
mov
jmp
fs
pop
and
fucom
mov
lahf
push
xor
xchg
iret
mov
popa
mov
dec
bound
iret
xchg
lret
adc
jge
dec
and
jp
lock
adc
pop
mov
pushf
popf
mov
sbb
cmp
mov
or
in
and
lcall
out
and
into
fisttpl
sbb
fisttps
push
push
cmpsl
sbb
les
jl
inc
inc
movsb
fsubrl
inc
in
test
sub
les
xlat
lods
add
das
jbe
inc
and
in
pop
sbb
add
push
pop
sub
pop
xor
loope
add
dec
jge
ljmp
add
lea
mov
lret
imul
dec
push
fs
xor
cmc
sbb
fxch
and
jg
sub
aas
icebp
decl
ret
and
xor
sbb
push
les
arpl
rolb
xchg
add
adc
movsb
std
cmc
mov
in
adc
test
inc
aas
mov
or
sub
iret
xchg
or
cld
dec
jp
mov
adc
dec
out
add
mov
ret
nop
and
mov
lahf
in
leave
fcoms
insb
and
dec
mov
in
inc
dec
out
pop
mov
cmp
out
inc
fldl
jp
xchg
dec
push
mov
arpl
sahf
lea
mov
mov
mov
mov
mov
sahf
out
mov
xor
mov
dec
cmc
icebp
or
sbb
sub
shr
mov
add
shrb
push
add
cli
inc
leave
in
push
jecxz
pop
stc
mov
fs
ja
mov
loope
push
jno
loope
adc
cld
jmp
and
mov
insl
jg
xchg
stos
addb
mov
imul
mov
push
inc
ficompl
dec
add
inc
push
pop
mov
mov
push
jnp
mov
dec
mov
pop
in
dec
fldenv
into
jne
and
sub
lret
cmp
mov
fwait
jp
adc
adc
adc
dec
lods
mov
push
lcall
sub
mov
into
lahf
mov
inc
cmpsl
mov
adc
mov
push
fsin
int
push
andnps
lret
mov
pop
rorb
mov
int
test
cli
icebp
xor
bound
cmp
int
movsb
or
add
push
inc
or
data16
jg
and
pop
lods
or
in
in
mov
int3
sbb
lods
in
xchg
aaa
xlat
adc
mov
jg
mov
and
cwtl
sub
mull
push
mov
popa
xor
mov
jne
test
pop
addr16
push
add
pop
loope
sub
mov
push
cltd
sbbl
inc
aas
aaa
jnp
push
mov
fs
fbld
jmp
mov
mov
call
cli
int
push
jno
repnz
repz
hlt
rcrb
jmp
xchg
out
shll
jge
sub
mov
xchg
movsl
xchg
pop
push
leave
paddusw
push
xor
inc
jle
pushf
aad
dec
and
add
int3
andl
pushf
and
mov
mov
addb
jnp
je
xchg
addr16
divb
popa
and
std
mov
gs
or
lret
mov
das
jmp
adc
fs
adc
dec
nop
jp
mov
and
fsubrl
xchg
dec
xchg
je
push
inc
stos
cmc
test
call
xchg
stos
sti
mov
dec
xor
jmp
outsb
jg
arpl
hlt
adcb
pop
mov
mov
cmpsl
jp
iret
insb
je,pn
mov
mov
xor
cs
pop
or
xor
stos
mov
jecxz
fiadds
jae
mov
nop
cmp
scas
scas
cmp
adc
insb
aam
sbb
out
negb
dec
cmp
pushf
adc
nop
cs
sbb
js
out
sbb
mov
test
push
add
mov
mov
loopne
fsubrl
cmp
push
pop
sbb
sbb
lcall
sbb
out
mov
mov
push
stos
popf
cmp
jmp
push
jb
add
js
cmp
mov
addr16
jnp
cmp
rcl
jae
in
popf
pop
pop
int3
pop
push
mov
arpl
dec
repz
mov
adc
fwait
outsb
leave
xor
xchg
out
cli
cmpsl
or
push
pushw
outsb
push
push
notb
lea
mov
cmp
cltd
xchg
int3
cmpsb
jae
mov
orb
je
sbb
xchg
mov
or
icebp
sub
cmpsl
add
filds
dec
rolb
jge
cwtl
in
or
cmp
push
int
insl
jns
push
push
or
jo
mov
jne
cmp
dec
push
lret
pushf
push
stc
loopne
sarb
mov
pushf
xor
movsb
loop
jns
mov
xor
fldl
pusha
push
repz
push
xor
push
cltd
mov
ljmp
and
cmpsl
aam
push
out
mov
lret
sub
cmp
sub
cmpl
inc
jg
or
outsb
xchg
scas
or
mov
data16
shrb
addb
push
jbe
mov
jne
adc
sub
aam
lea
and
inc
add
fs
imul
cmpl
lea
xor
mov
fsubl
sbb
out
mov
int
lock
lods
push
shlb
cli
mov
mov
repnz
jmp
mov
cmpsb
push
shrb
ds
addr16
jnp
xor
cld
pop
and
jg
pop
adc
cmp
push
imul
clc
dec
call
arpl
outsb
loop
xchg
jae
fwait
rclb
lds
mov
std
adc
mov
js
jecxz
jmp
adc
lret
inc
mov
lods
dec
dec
nop
aaa
push
das
cmp
cmc
add
fmuls
xchg
pop
fldcw
lods
repz
pop
xchg
es
xchg
sub
mov
dec
mov
mov
jp
jnp
inc
pushf
xorl
pop
sbb
imul
pusha
add
getsec
mov
lret
jge
dec
push
nop
add
ss
imul
jbe
pop
loope
jae
lock
mov
fdivl
sbb
imul
push
loop
xchg
std
cli
out
jnp
cmpsl
sub
or
pop
outsl
add
bound
into
sbb
and
xchg
jge
fisubrl
add
mov
push
push
fs
repz
jne
push
inc
out
subl
mov
loop
ret
loop
rclb
inc
lods
or
shl
mov
outsl
push
inc
push
fisttps
adc
mov
jg
mov
leave
sub
mov
std
dec
or
sbb
and
pop
or
xchg
push
push
push
adc
lds
repz
push
int
and
xchg
add
faddl
push
stc
jbe
lock
clc
je
dec
fs
or
or
fsts
test
jp
fbstp
mov
sbb
mov
xor
jno
ret
fbstp
adc
pop
and
dec
aad
loop
lret
mov
push
lret
movsl
in
ljmp
js
loopne
int3
movsl
inc
lcall
cli
negb
xchg
adc
adc
lock
shl
imul
loopne
xor
jg
mov
daa
add
mov
shl
neg
insb
fildll
loope
push
xor
mov
lcall
pop
ss
cmpsb
push
stc
mov
iret
clc
popl
mov
outsl
xor
das
repnz
pop
xchg
loop
inc
popa
loope
ss
dec
cmpsl
xor
dec
imul
mov
and
jge
jno
or
outsl
and
bnd
fimuls
ret
daa
xor
or
repz
add
mov
sub
jns
je
daa
mov
sbb
cli
xchg
movb
fsubl
and
xchg
fcomip
dec
xchg
mov
or
mov
aaa
je
out
outsb
mov
pushf
ret
jmp
ret
fwait
adc
cmp
js
js
fwait
push
mov
icebp
inc
pop
jg
adc
cli
sub
xchg
scas
dec
xor
cs
scas
cmp
in
shrl
mov
push
sbb
push
mov
inc
push
mov
mov
fildll
cmpsl
and
mov
lret
stos
lds
hlt
popa
jecxz
push
dec
popa
pop
dec
ret
dec
popa
pop
bswap
add
and
lret
push
lods
jge
mov
pop
lcall
pusha
xlat
sbb
mov
rol
loope
gs
cmp
loope
xorb
xor
push
ja
and
dec
mov
hlt
push
mov
cmp
sub
ficompl
cwtl
jl
jle
inc
ret
add
jmp
ja
cmp
out
jle
aas
and
jno
push
push
sbb
dec
js
inc
sub
stos
push
mov
xchg
push
fs
imul
insb
push
idivb
ljmp
lcall
mov
lock
and
push
cs
or
and
lcall
jne
imul
and
sbbb
lret
cmpsb
mov
cmp
pop
andps
pop
sub
cld
add
arpl
clc
jae
js
out
shlb
adc
ja
cltd
push
jl
rcl
das
mov
xor
imul
dec
mov
bound
inc
jne
push
movsl
add
cwtl
es
push
bound
sbb
lret
xor
sub
pop
cld
icebp
sbb
and
cmp
push
push
dec
loop
sub
jne
fistpl
mov
test
add
xchg
add
mov
scas
daa
cs
sub
mov
cs
sbb
aam
hlt
sub
negl
push
sbb
popa
add
pusha
fbld
stos
push
fistpll
mov
mov
data16
shlb
push
mov
adc
shll
mov
sbb
cmpsb
sahf
xchg
insb
jo
xchg
mov
movsl
add
out
sbb
pusha
jb
adc
jne
jecxz
shrb
iret
mov
movsl
out
stos
sbb
sub
call
call
bound
imull
insb
cmpsl
push
cmp
nop
test
mov
jmp
xor
mov
adc
nop
into
in
push
in
xorb
mov
cmc
outsl
icebp
adc
test
loop
or
and
push
bound
loop
das
cmp
mov
or
mov
sub
scas
out
cmp
cmc
sub
jbe
sbb
out
int
mov
mov
sbb
mov
pop
xchg
pop
xlat
rcrl
mov
test
stos
dec
movsl
mov
inc
xchg
and
or
aam
out
testl
xchg
push
rcrl
shlb
xlat
cmp
ds
fidivrs
pop
fstps
not
xor
nop
imul
and
inc
dec
push
ljmp
xor
stos
and
int3
lahf
cmp
or
adc
inc
stc
outsl
push
lea
cmpsb
loop
dec
cs
adc
cmp
xlat
xor
ljmp
jge
mull
cmp
jp
popa
and
cmp
lret
cmp
mov
mov
int3
inc
scas
mull
movsl
push
mov
mov
fstpt
ret
mov
loope
or
adc
pshufw
dec
push
jnp
jbe
int
sarl
sub
repnz
or
je
jo
xor
mov
jmp
push
dec
fisttpl
movb
xor
js
cltd
mov
push
sbb
loop
pushf
lods
fcmovnu
mov
pusha
jl
mov
cwtl
lcall
dec
les
subl
sbbb
and
pop
loope
out
test
mov
add
mov
pop
repnz
push
jmp
cltd
call
jmp
inc
mov
das
cmp
dec
add
mov
sbb
cwtl
push
test
dec
jp
leave
jg
pop
mov
jnp
das
jecxz
mov
mov
into
mov
push
test
jecxz
hlt
or
shlb
imul
testl
nop
enter
out
mov
lods
sub
push
dec
push
popf
xchg
rcrl
data16
cwtl
insb
mov
pop
sub
lahf
jge
mov
or
jb
push
cmp
push
mov
icebp
mov
jle
xchg
cwtl
sbb
inc
pushf
sbb
arpl
cli
test
pop
mov
scas
or
xchg
xchg
pop
leave
aad
add
pop
and
stos
lods
arpl
sub
mov
or
sti
jnp
xor
mov
dec
cmp
pop
into
lcall
out
into
cmpsl
pop
adc
test
fwait
out
bsr
mov
shlb
jns
fcompl
sub
fs
adc
xchg
or
xchg
mov
fsubrs
enter
push
sbb
dec
xchg
out
dec
inc
xchg
xchg
movsl
pop
xor
mov
fbstp
xchg
mov
gs
scas
test
cmp
inc
sbb
ja
pop
test
nop
or
mov
imul
inc
stos
insl
inc
addl
stos
jge
pop
int
mov
push
scas
or
xchg
out
je
jl
xorb
testb
into
xor
movsl
push
mov
movb
sub
mov
std
sar
insl
and
jb
dec
mov
lea
loopne
add
xchg
ffreep
cli
xchg
mov
inc
lods
lea
insl
push
push
outsl
ljmp
fldenv
cmpsb
xchg
jmp
pop
nop
pop
mov
cld
scas
inc
lahf
mov
imul
cmp
sbb
shrl
adc
js
cld
mov
test
fwait
in
xor
jnp
inc
adc
mov
stos
jge
imul
movsb
pop
lahf
scas
sub
outsl
dec
out
arpl
flds
or
inc
jmp
jle
cmpsl
mov
push
insb
dec
notl
das
xchg
jns
xor
popf
nop
push
pop
je
jb
ja
test
mov
sbb
call
pop
push
push
fiadds
jmp
cmovnp
in
sub
cwtl
or
cld
dec
stos
jb
aas
push
xor
mov
pop
bound
fiaddl
lret
xlat
int3
sbb
mov
inc
inc
and
cld
mov
js
push
jle
leave
push
sti
or
or
aad
cli
sbb
sub
xorb
cld
pushf
sbb
push
mov
dec
repz
sub
sbb
push
mulb
push
cmpsl
mov
mov
jmp
cmp
mov
stos
pop
pop
xor
enter
xchg
push
pop
adc
leave
ret
aad
fs
dec
push
add
mov
or
mov
decb
mov
mov
mov
pop
adc
in
shll
test
push
xchg
jp
pop
mov
cwtl
pop
in
push
mov
jns
or
icebp
nop
add
addr16
push
bswap
fisubl
jl
dec
sbb
xchg
jbe
sti
pop
shrb
jnp
call
out
sbbl
sahf
and
fcomps
into
divl
in
sti
cmpsl
add
aam
sbb
enter
and
jnp
xor
mov
dec
push
insb
call
outsl
sbb
test
fmuls
sub
pushf
dec
ss
cmpsb
imul
bound
mov
jo
cmp
xchg
dec
xor
push
jnp
leave
xchg
sbb
stc
loopne
mov
insl
testb
xchg
notl
je
clc
in
test
les
repz
int
or
jp
mov
push
dec
cmp
mov
ss
inc
test
test
enter
in
mov
arpl
mov
cwtl
cli
daa
test
fnsave
fdivrs
les
mov
mov
repz
pop
push
mov
cmpsl
pop
push
cltd
mov
ss
outsl
inc
inc
pusha
mov
iret
add
xchg
lret
test
das
shll
push
add
sub
push
and
faddl
pop
mov
stos
xchg
cli
jnp
adc
xchg
and
scas
pop
clc
xchg
sbb
mov
and
and
mov
cmp
xor
adc
adc
int3
sub
fsubl
shr
dec
jg
xchg
insl
les
add
fbstp
cmp
and
dec
jb
pushf
xchg
lds
jae
cmp
jne
xchg
jns
rorl
push
adc
fidivl
xchg
pop
out
xchg
es
adc
adc
mov
aad
push
js
das
cli
aas
xchg
dec
bound
bound
sbb
cmpsl
push
jne
fwait
cltd
and
jno
mov
xor
fwait
xchg
inc
aam
bound
in
popf
push
lahf
out
xor
cwtl
jns
jg
adc
xor
pop
shr
hlt
fdivp
and
mov
inc
test
ret
mov
mov
pop
pop
mov
and
add
mov
cmp
sbb
ret
xor
sahf
mov
jbe
iret
xchg
push
xor
pop
mov
xchg
sub
popf
call
cli
stos
or
cmc
outsl
rcrb
push
gs
xchg
xchg
cmpsb
sti
or
lret
mov
into
divl
jl
ret
xor
jbe
mov
jp
dec
cmp
aad
jl
lds
mov
mov
les
jns
push
pop
add
adc
push
test
adc
outsb
pop
pop
mov
mov
xchg
cmp
rorl
jno
cltd
sbbl
mov
int3
fldenv
xchg
fwait
xadd
push
out
popf
in
pop
xor
imul
adc
mov
xor
into
das
fisttpll
sub
push
loop
test
punpckhbw
int
ds
sbb
inc
xchg
jb
nop/reserved
andl
cmp
inc
mull
add
dec
add
push
fdiv
jae
imul
mov
enter
lahf
dec
xchg
mov
call
pmaddwd
dec
fwait
js
scas
leave
iret
sti
rcrb
imul
loopne
jp
cld
pop
pop
ret
pushf
fnstsw
jbe
adcb
lds
xchg
inc
inc
call
faddl
inc
mov
push
inc
rcl
ret
xor
or
lret
ret
mov
dec
fmulp
lock
pop
sbb
out
sbb
add
mov
xor
add
pushf
imul
xchg
in
sarb
jecxz
cmp
and
mov
lret
stos
adc
addr16
aas
lret
adc
jecxz
sub
in
dec
jmp
call
xor
out
xor
push
sti
scas
xrstors
in
das
iret
data16
pop
es
out
push
fldenv
ljmp
mov
sarl
jbe
sbb
in
sbb
sbb
jg
jecxz
test
mov
push
scas
mov
lret
or
sbb
xor
and
std
inc
sub
ljmp
xchg
sti
and
pop
imul
sub
sub
dec
sbbl
xchg
sbb
jl
pushf
jns
aas
pop
sbb
out
xchg
lock
ljmp
gs
stc
aaa
out
dec
jb
mov
jne
xor
inc
ljmp
jae
in
mov
mov
lret
int
adc
push
test
sahf
mov
push
dec
mov
xchg
cmp
cmp
adc
jno
std
ljmp
cli
mov
aam
mov
or
das
test
addr16
dec
pop
js
add
and
mov
adc
sarl
cmp
sbb
faddl
fmuls
repz
adc
xchg
jmp
fldt
jns
mov
mov
or
sbb
pop
pop
stc
inc
xchg
pop
out
xchg
clc
repz
mov
lods
ss
pop
push
mov
add
xchg
test
mov
fs
ss
imul
add
ds
pop
cmp
xor
mov
outsb
popa
std
shlb
or
jecxz
xor
adc
outsb
dec
add
int
xchg
fucomi
in
test
test
aad
xor
xchg
repnz
dec
add
mov
daa
add
cmp
in
mov
mov
xchg
xor
insl
mov
pop
mov
mov
jge
push
dec
push
test
out
mov
add
jecxz
pop
push
jp
fbld
mov
jns
pop
sbb
add
mov
shlb
mov
into
je
loope
out
mov
nop
je
xchg
xor
jl
and
and
ss
inc
adc
jbe
pop
int3
pop
mov
test
add
ja
jmp
add
lsl
lea
comiss
les
ds
xorl
mov
xor
xor
mov
inc
add
scas
outsl
cli
scas
leave
push
push
and
ret
scas
sarl
inc
hlt
outsl
lcall
jb
add
ret
xor
sbb
mov
mov
movsl
cmpxchg
repnz
sti
inc
aad
adc
aad
js
inc
pushf
sbb
xchg
or
ja
test
iret
xchg
shrl
push
and
pop
imulb
movsl
jae
sbb
call
cmpl
jge
je
jp
and
push
sbb
shlb
jnp
mov
iret
inc
mov
popf
scas
add
mov
mov
sbb
into
outsb
push
imul
cli
jmp
jae
mov
sub
or
es
jecxz
cmp
cltd
mov
movb
shll
xor
aam
dec
pushf
shl
mov
repnz
lods
and
mov
push
aas
sub
jno
jb
das
pop
gs
jae
push
xchg
movsl
adc
sbb
mov
mov
int
cmp
in
mov
fildl
lds
scas
idiv
push
xchg
jmp
xchg
xchg
add
insl
insl
mov
or
aad
js
add
les
cmpsb
push
or
iret
fadd
test
sub
cmpsb
aad
sbb
fidivs
lods
pushf
mov
movsb
or
icebp
cmpsl
cmc
shll
jo
mov
iret
outsl
adc
sub
fsts
mov
in
pop
test
pop
mov
cmpsl
lds
imul
aas
jb
sub
cltd
orl
sbbb
faddp
dec
das
out
pop
ds
mov
pop
adc
lret
and
jecxz
div
adc
or
mull
mov
mov
je
xchg
movsb
std
sub
jge
xchg
push
in
xor
nop
dec
lcall
jne
mov
int3
cs
add
insl
mov
ss
fisttpll
xchg
fdivrl
jmp
aas
jmp
mov
pop
outsl
sarb
inc
stc
jbe
xchg
test
aaa
mov
pop
rclb
dec
icebp
mov
fstl
cwtl
pop
ljmp
push
cmp
mov
js
pop
cmp
rolb
mov
jl
idivb
pop
and
fisttpl
lods
ja
inc
cmp
test
sbb
push
fwait
xchg
out
add
icebp
push
xor
das
leave
jnp
pop
lcall
xchg
sarl
jb
cld
test
jbe
mov
jnp
sbb
or
or
int
insb
xlat
in
push
xor
lcall
fcoml
sub
dec
jns
imul
mov
std
sbb
pop
jne
stc
popa
sub
std
repnz
loopne
or
ds
inc
push
in
jle
dec
sub
dec
fnstsw
stc
inc
popa
inc
bound
pushl
sub
jb
add
mov
pusha
ficompl
mov
sub
loop
movsb
dec
and
push
gs
adc
jp
and
enter
clc
jecxz
repnz
popa
inc
popf
stos
and
testb
popf
test
shrl
push
inc
stos
push
or
aaa
clc
fildll
cld
jmp
lahf
inc
test
imul
adc
orl
push
sub
pusha
jl
das
popf
inc
jmp
xchg
xor
repz
and
push
pop
lret
stc
inc
inc
xchg
stos
lods
xchg
sub
cmp
out
jno
imul
shll
push
es
push
insl
aas
xor
or
sub
push
xchg
out
mov
jg
out
pop
fistps
add
inc
into
cmpl
lods
jmp
cs
jmp
xchg
mov
mov
lea
cmp
out
sti
fsubp
mov
lock
in
mov
xchg
jmp
sub
push
aas
imul
pop
push
pop
mov
adc
aad
dec
mov
out
scas
sbb
ficoms
dec
adc
sub
mov
lea
sbb
push
pop
sbb
cmp
sti
xchg
xor
sbb
dec
leave
xchg
xchg
arpl
inc
xor
lock
loope
or
sbb
mov
jle
sarl
adc
scas
inc
cltd
pop
pop
jp
jae
mov
ss
sbb
mov
add
pop
or
out
lock
ljmp
mov
pushf
mov
push
mov
inc
rcl
dec
and
inc
test
aam
sub
pop
inc
pop
xchg
int3
and
je
addr16
adc
pop
loope
dec
insl
test
cmp
rorl
lods
pop
push
xchg
inc
int
lea
scas
dec
mov
mov
testl
adc
mov
or
jb
dec
insb
daa
and
out
cmpsl
movsl
add
cmp
clc
inc
jae
xlat
ss
std
dec
mov
pop
std
nop
cmpsb
mov
sbb
inc
pop
das
cmp
push
pop
jae
adc
fnstcw
inc
xchg
fstpt
pop
pop
xchg
pusha
pop
pusha
addr16
enter
cmp
sub
cltd
push
aam
pop
or
leave
mov
lcall
adc
pop
xor
or
lret
lcall
sub
fcom
out
pop
jecxz
cmp
ror
pop
jns
and
cmpb
jecxz
or
lea
add
daa
xor
and
sub
inc
out
push
xchg
adc
mov
jo
xchg
jl
pop
push
push
adc
jae
adc
jp
pusha
out
ljmp
pusha
sti
cld
or
shl
ljmp
loope
mov
jle
cmp
insb
addl
adc
dec
cmp
lahf
je
jae
aas
out
sbb
push
popa
ret
daa
enter
pop
or
xor
movb
add
sbb
aas
in
movsl
int3
and
jmp
sub
jb
into
mov
lock
fistpll
mov
je
jle
ljmp
cmp
mov
inc
ljmp
popf
push
cmp
imul
cmp
cmpsl
popa
rolb
mov
scas
mov
in
mov
and
pop
mov
jno
xor
js
mov
mov
jbe
lret
and
imul
fcomps
lret
std
cli
push
jne
inc
popa
xchg
push
sub
fs
insl
in
outsl
arpl
std
push
loope
fcoml
shll
lods
fs
dec
stos
sarl
mov
sub
ja
cmc
mov
cmp
repz
mov
out
dec
pop
aaa
andl
in
add
push
sub
stc
lahf
enter
stos
push
adc
mov
dec
sbb
inc
scas
js
ss
ljmp
aam
sub
lahf
arpl
in
addr16
in
inc
add
cld
xchg
cmp
stos
mov
shlb
push
add
mov
dec
push
cmp
imul
fidivl
in
into
mov
xor
jb
push
insl
loop
push
push
add
addb
pop
inc
movsb
ficoms
and
sbb
inc
sbb
inc
dec
mov
fdivr
jbe
mov
loop
mov
jae
adc
pop
fadd
jmp
cmp
repnz
clc
cwtl
js
in
repz
sub
outsb
mov
or
and
loopne
and
nop
pop
cmpsl
test
out
push
lret
test
lret
fcoml
dec
out
and
divb
ret
push
mov
and
cmp
pusha
mov
cmc
rcll
mov
test
push
xchg
and
lret
or
push
int3
mov
bound
xor
sbb
in
nop
scas
sarb
sbb
fbstp
adc
pop
in
xor
mov
aad
adc
cmp
out
rcrl
loope
mov
xchg
outsl
cltd
in
fsubs
adc
inc
xchg
xor
cli
imul
mov
pop
jecxz
sbb
mov
fbld
aad
push
addb
push
dec
mov
adc
xchg
jecxz
hlt
cs
rcll
mov
xchg
mov
pop
pop
push
push
push
cmp
aam
jbe
and
pop
mov
enter
leave
repnz
imul
jb
jl
mov
enter
xchg
sahf
push
jp
mov
xor
ret
std
sub
imul
and
pop
mov
ret
or
add
lret
inc
jmp
cmc
jg
testb
inc
dec
icebp
sbb
mov
xlat
imul
mov
dec
out
fsubl
and
jno
xchg
test
imul
bnd
or
add
jns
mov
mov
xor
stos
fwait
add
and
icebp
xchg
mov
jb
test
icebp
in
jp
xor
mov
clc
inc
out
shl
and
movsb
bnd
int
jns
dec
and
dec
out
fcomps
pop
xor
gs
and
sahf
pushw
push
inc
adc
pop
mov
cmp
int3
out
fmuls
and
or
shll
fstpt
xor
test
push
adc
sub
das
cmpsb
lahf
out
jp
pop
push
push
test
pop
cld
aaa
scas
movsl
data16
pop
out
pop
lds
sbb
in
cltd
pop
cmp
lods
int3
ret
sub
or
testb
xor
mov
arpl
fcmove
insl
jge
in
dec
int3
imul
pop
insl
out
outsl
jecxz,pt
pusha
stos
adc
testl
mov
clc
adc
lods
dec
lock
mov
ljmp
cwtl
pop
call
cmp
popf
shrl
jg
xlat
test
pop
repz
popa
jp
gs
ds
or
xchg
clc
imul
mov
jp
xchg
jo
sub
shl
mov
aas
icebp
jge
mov
push
loop
gs
xchg
les
push
cmp
loope
outsb
mov
jp
inc
mov
jl
dec
fwait
shl
loope
ja
in
nop
stos
push
push
inc
divb
out
mov
jp
sub
push
stos
jae
cs
push
rorb
pop
bound
mov
lock
test
push
inc
xlat
sbb
cmp
andl
inc
dec
sbb
dec
faddl
sti
arpl
mov
or
mov
lret
jmp
mov
ljmp
dec
mov
pop
mov
lret
andb
stos
add
mov
out
jecxz
cmp
vhaddps
subl
jbe
push
ss
test
cwtl
loopne
scas
inc
repnz
pop
jle
xor
ret
pop
mov
adc
lods
test
adc
repz
mov
mov
push
cltd
push
subl
and
in
xchg
and
xchg
andb
inc
test
cmc
movsl
add
or
fs
and
dec
adcl
or
dec
fstpl
add
call
leave
mov
icebp
rol
daa
imul
icebp
cmp
xchg
adc
inc
pop
or
mov
sbb
test
cld
xchg
test
xor
fstpt
int
sub
push
call
lock
outsl
movsb
jmp
xor
mov
mov
lret
shlb
dec
jae
jp
pop
mov
push
mov
jmp
sbb
lods
sub
sahf
pop
std
in
sti
push
xchg
sub
push
inc
lahf
andb
pop
jecxz
xchg
add
push
push
adc
lea
inc
psllq
mov
and
loop
shld
imul
loop
or
inc
in
subl
push
loopne,pt
sbb
push
jbe
adcl
and
adc
arpl
jns
ret
jns
loop
xchg
jae
stos
xchg
cmc
pop
mov
inc
addr16
dec
je
test
pop
loop
dec
dec
out
stos
adc
shll
jmp
lock
pop
rorl
dec
fs
andl
adc
or
xor
sub
pop
add
pushf
xor
inc
es
jp
lret
sarl
mov
pop
gs
bound
test
jnp
sub
add
stos
mov
cmpsl
cmp
pop
xchg
call
cwtl
out
jo
adc
sbb
fadds
daa
sarl
jne
pop
inc
mov
lds
add
in
push
mov
pushf
loope
fnsave
outsl
in
inc
addb
cmp
popa
pushf
sub
mov
push
pop
inc
in
mov
xor
movsb
cmp
pop
mov
add
lods
insb
sbb
push
and
dec
mov
insb
jge
xchg
ss
lret
loopne
xchg
lock
mov
dec
inc
jmp
inc
cmp
xchg
mov
lods
mov
mov
mov
pop
call
out
cmpl
ss
mov
push
repz
and
push
out
cld
adc
call
cmp
dec
cltd
jmp
lods
rcll
int
dec
jns
sbb
std
push
dec
or
iret
mov
mov
sub
fmuls
imul
aas
pop
aas
cmp
in
adc
movsl
in
mov
ja
bound
ja
mov
loope
cltd
mov
sbb
inc
pop
add
xchg
cmp
sbb
jp
enter
and
xor
insl
push
rorb
cmp
and
pop
fisttpl
or
and
xchg
popa
fldenv
rcll
mov
add
int3
insl
mov
ss
mov
ret
fisubs
nop
adcl
das
fbstp
xlat
jnp
adc
and
sti
push
movsl
mov
lods
and
inc
js
fdivl
addb
add
and
push
push
pop
cmpl
or
sarl
int3
push
arpl
sti
mov
sub
push
sbb
loopne
xchg
stos
mov
pop
idiv
std
loop
cmp
and
andl
imul
addb
inc
lods
in
leave
jbe
mov
repnz
lret
lds
addb
push
xchg
and
jecxz
rcll
cld
les
fwait
pop
and
jg
or
lea
pop
lahf
jmp
pop
insb
push
movsl
ja
rcr
call
rcl
mov
push
hlt
lcall
outsb
in
mov
jne
pushf
jg
cmc
test
mov
pop
fidivl
and
pop
sub
xor
adc
shl
aas
stos
xchg
sbb
nop
mov
icebp
out
sub
lret
mov
cmc
or
lahf
push
sahf
cmp
pop
iret
sub
add
in
xorl
push
int3
fwait
cmp
insb
in
push
repnz
inc
cwtl
dec
push
mov
mov
aaa
xchg
lcall
sbb
lret
xor
ljmp
rcrb
cmp
sbb
and
insb
outsb
push
sub
nop
fisubl
mov
jns
mov
xor
push
add
sbb
test
add
fcoms
stos
dec
lea
iret
popa
cmovno
sbb
sbb
aas
mov
pop
sub
mov
lret
sub
cmp
cmpsb
push
jmp
sbb
xchg
dec
inc
scas
mulb
push
les
or
ss
xchg
mov
mov
push
pop
jmp
inc
leave
dec
sbb
mov
pop
outsl
jb
mov
or
sqrtps
push
repnz
pop
adc
mov
jle
enter
mov
in
frstor
mov
movl
popa
jp
push
std
or
push
mov
test
testb
and
mov
sti
adc
inc
in
sub
or
push
sub
sub
xchg
dec
test
push
sub
daa
add
mov
repz
dec
inc
arpl
enter
out
int
inc
nop
loope
jne
cmpsl
outsb
int3
or
and
or
ss
leave
xor
xlat
xchg
cld
xor
sti
jbe
xor
iret
in
inc
dec
lahf
mov
daa
int
retw
add
repz
push
inc
and
lds
in
in
sbb
test
ljmp
mov
adc
lock
fstps
popf
inc
inc
push
sbbb
cmp
pop
or
popf
lret
cmp
pop
into
cltd
push
pop
aad
mov
inc
push
mov
add
sub
mov
ja
cmp
test
scas
test
xchg
add
jo
xchg
mov
adc
jle
jle
mov
mov
lods
das
aad
ret
add
dec
sti
movsl
ds
jno
stos
sub
push
andb
xor
mov
mov
push
mov
and
pop
shrb
ljmp
lea
mov
outsl
aas
add
out
pop
cmp
jmp
daa
mov
outsb
pusha
sub
jo
std
sub
jns
repz
int
lds
shll
add
adc
sbb
xor
leave
jne
adc
out
cs
int
inc
stos
les
daa
sbb
cmp
mov
clc
cmp
sub
adc
jo
inc
loop
or
xchg
push
je
push
pop
add
imul
imul
lods
hlt
negb
scas
cmp
mov
xchg
repz
jecxz
mov
out
dec
ret
insl
sbb
ljmp
add
mov
fcompl
inc
add
sub
lret
lods
jns
repz
sub
xor
popa
fstp
test
mov
jmp
add
mov
push
ds
je
lret
mov
pop
push
ss
call
xchg
mov
mov
xchg
lods
cwtl
xchg
mov
pushf
out
cld
or
mov
push
xor
int3
adc
xchg
lret
outsb
shr
or
push
rcrl
pop
add
xor
sub
sahf
enter
pop
cmp
test
mov
loope
mov
pop
mov
into
lret
ja
ret
or
popf
jb
mov
xchg
jge
pop
inc
icebp
mov
xchg
pop
outsl
sbb
cmp
insb
hlt
pop
pop
mov
cltd
lock
aaa
jmp
xor
cmp
lret
aad
jmp
cmpsb
loope
add
loop
and
jae
hlt
sub
mov
mov
pop
xor
dec
push
aam
mov
inc
icebp
fdivrs
sti
data16
jae
adc
mov
call
mov
in
push
jle
les
pop
int
adc
xor
push
adc
mov
lret
shll
add
pop
push
mov
aaa
aam
scas
cltd
mov
xor
test
mov
xchg
lcall
pop
mov
sbbl
rcl
sub
movsb
cmp
outsb
jecxz
mov
mov
sub
aam
wrmsr
push
ja
movsl
dec
jp
dec
in
jb
mov
in
ret
getsec
rolb
pop
xchg
jno
push
cs
ljmp
add
dec
add
and
hlt
sti
xchg
imul
add
pop
sbb
or
ds
add
scas
cmp
shlb
rcll
xchg
jae
jl
lods
add
rcll
jmp
inc
inc
cli
call
and
add
mov
or
cld
add
fsubl
xor
xorl
test
mov
and
inc
rclb
imul
mov
sub
mov
mov
subl
out
ss
dec
dec
jno
or
push
movsl
call
pop
jge
aas
and
in
adc
cmp
cld
or
mov
dec
stc
jp
or
mov
xor
popa
xchg
mov
clc
mov
mov
shlb
pop
dec
clc
cmp
inc
mov
out
in
push
enter
imul
sub
xchg
popa
cmovno
ja
xchg
test
and
pop
mov
push
xlat
mov
mov
dec
frstor
call
pop
ror
call
sti
xor
sbb
sbb
dec
or
dec
cmp
adc
sarl
pop
ljmp
xchg
pop
arpl
mov
sbb
add
outsb
push
push
stc
aad
arpl
mov
push
dec
pop
adc
into
sbb
ss
sub
dec
cmp
or
out
cmp
in
cmpsb
out
xor
dec
cmp
lock
addr16
or
aaa
imul
rcl
das
js
jns
int
push
mov
les
inc
fsubl
mov
add
dec
jmp
popf
clc
mov
cmp
jb
sbb
ljmp
insb
jb
dec
add
sarl
mov
adc
push
sub
add
arpl
rolb
mov
inc
pushf
nop
cmp
iret
pop
dec
add
dec
ljmp
jle
lcall
and
arpl
daa
bound
dec
and
fistl
and
jbe
fs
dec
mov
lret
or
rcrb
xchg
lea
mov
nop
push
rcr
pop
inc
inc
lea
outsb
pushf
adc
dec
pop
dec
jle
jne
push
inc
gs
jbe
es
or
mov
cmp
nop
inc
outsb
test
xor
je
add
push
mov
imul
mov
into
adc
addb
lock
int3
and
pusha
or
mov
jbe
int3
hlt
call
sub
and
out
out
add
std
cmc
nop
cmp
and
mov
enter
pop
jecxz
or
jb
std
or
enter
or
in
mov
pushf
pop
sbb
filds
aad
and
stos
push
cmc
xchg
outsb
sbb
or
jmp
push
cmp
imul
inc
int
gs
inc
sahf
sahf
ja
ret
and
mov
fs
mov
mov
int
pop
mov
jg
insl
test
pop
mov
scas
jb
jl
mov
sub
jecxz
xchg
aaa
mov
daa
ljmp
push
fwait
xchg
mov
sub
popa
cmp
push
sti
mov
mov
adc
ret
cmp
outsl
xor
test
jle
xlat
mov
fimull
and
mov
inc
addr16
test
pop
loopne
and
push
dec
and
add
add
call
shlb
add
mov
lcall
pop
data16
xchg
mov
loope
or
sbbl
sub
mov
insb
mov
insb
mov
and
mov
sbbb
loop
loope
lods
pop
dec
sbb
jne
sbb
rcll
lods
stos
lods
pop
ffreep
pop
mov
or
push
out
mulb
push
mov
xor
pop
test
xchg
jne
mov
mov
pusha
dec
and
sahf
movsl
sbb
cld
dec
inc
mov
arpl
and
or
outsb
dec
push
ret
in
pusha
dec
movl
mov
dec
xor
jmp
inc
inc
js
xchg
cmp
push
jo
dec
sub
xchg
cld
push
adc
dec
or
cmpsl
fimuls
xor
xchg
sbb
push
testl
mov
xchg
adc
push
xor
mov
cmpl
inc
loope
jl
xchg
push
mov
xor
dec
test
shl
pop
xchg
sbb
adc
add
pop
popf
mov
jmp
cmpsl
cltd
push
push
jl
or
mov
push
stos
sbb
and
sti
cmp
and
jo
call
xor
adc
ljmp
jns
adcl
data16
add
sbb
cmp
inc
push
cmp
aam
fdivrs
jae
popa
repz
std
adc
ss
jge
sbb
test
xlat
fdivrs
ficomps
cmp
lcall
out
or
negb
mov
daa
xchg
jb
loope
testb
ljmp
pop
hlt
mov
into
mov
pop
jb
mov
sahf
jl
adc
rcll
xchg
lds
out
cli
and
xor
andb
shrl
sti
mov
std
mov
jne
int
pop
jle
lds
xor
push
mov
xchg
or
fisubs
stos
sub
mov
fisubrs
repz
cmp
inc
enter
aam
scas
cwtl
cmpsl
inc
cmp
xchg
xorl
mov
xchg
push
aaa
mov
mov
repnz
pop
iret
xor
xchg
hlt
rcll
les
jns
cmpsb
xchg
dec
gs
mov
ret
pop
out
mov
push
stc
jg
mov
inc
xor
inc
and
loopne
movsl
pop
sbb
mov
lret
push
faddp
enter
out
int
int
pusha
fs
adc
mov
push
popa
fcompl
ja
cmp
pushf
and
stos
int
mov
shl
pop
push
add
inc
pop
xor
outsl
ja
xchg
inc
stc
and
inc
add
push
jns
loopne
sub
das
pushf
jl
in
jnp
hlt
lret
testb
gs
cmp
imul
jns
mov
mov
and
aad
scas
lds
jb
inc
pop
scas
sbb
bound
pop
jmp
mov
inc
pop
mov
sbb
mov
xchg
lock
movsl
mov
rcrl
inc
jno
and
bound
mov
movsl
sub
push
jge
in
or
test
shll
jg
mov
aam
sbb
sbb
addr16
loope
xlat
int
ficoml
in
movsb
cmc
dec
and
cmp
add
pushl
cmp
cmp
mov
xchg
scas
sahf
sub
rolb
xchg
in
add
inc
loope
fdivp
jp
scas
adc
popf
outsb
and
adc
clc
es
inc
pop
lods
fdivs
or
in
ss
fdiv
add
mov
mov
movsl
js
mov
dec
lcall
jmp
xor
fbstp
iret
lcall
std
add
lds
ret
inc
add
adc
jp
sub
adc
bnd
ja
jecxz
ja
cmp
xchg
inc
pop
jae
int3
ljmp
xor
cmp
iret
adc
lods
cmpsb
mov
stos
jbe
push
out
fsubrl
into
sub
in
or
xchg
js
and
xchg
xlat
cmp
adc
ret
ljmp
jnp
int
int
mov
xchg
test
cwtl
adc
inc
out
popa
pop
adc
imul
lock
xchg
gs
sbb
push
fldl
and
mov
pop
imul
je
push
imul
lret
mov
add
mov
iret
outsl
or
loop
mov
pop
lods
add
mov
js
fldl
sbb
dec
xchg
dec
jmp
lret
js
xchg
lret
push
lods
add
xchg
outsl
movsl
pop
xlat
insb
inc
enter
and
lret
lret
sbb
cwtl
addr16
dec
xchg
fwait
pop
adc
nop
xchg
adcl
jp
xbegin
cmp
andl
ljmp
es
nop
scas
outsb
jae
popf
adc
dec
cmp
es
cmp
stos
sbb
adc
mov
jp
mov
movsl
std
outsb
adc
push
pop
mov
sbb
xchg
pop
push
inc
iret
add
enter
pop
push
ljmp
jns
adc
mov
add
stos
adc
xchg
insb
in
mov
cmpsb
push
pop
mov
lods
daa
daa
cmp
ds
or
cmpb
sub
push
in
or
clc
mov
insb
jae
pop
daa
je
push
dec
or
jbe
aam
insl
adc
cmpsl
cltd
sbb
jnp
movsl
push
dec
ffreep
pop
push
lods
xchg
sbb
sub
adc
jns
js
mov
test
in
xchg
mov
add
out
gs
xchg
test
mov
movsl
repnz
out
push
fists
inc
shll
adc
jmp
xlat
inc
rolb
test
dec
insl
jmp
pop
mov
sbbl
rcll
in
rclb
mov
xchg
bound
mov
cmc
cmp
in
inc
sbb
stos
or
jns
push
dec
insl
sarl
repz
sbbb
loopne
pop
adc
xchg
sub
mov
aam
pop
jl
in
xchg
mov
arpl
popa
mov
bound
cmp
adc
icebp
int
jg
adc
scas
cmc
or
inc
fsub
out
mov
mov
sub
mov
lahf
dec
mov
or
mov
adc
xor
add
notb
fildl
or
arpl
ret
lods
fistpl
fadd
sub
mov
cmpb
add
xor
into
sub
ljmp
mov
jle
mov
jg
mov
pop
xchg
pop
aas
jg
xchg
in
divb
cmp
hlt
and
call
fnstsw
shll
clc
mov
jecxz
pop
add
mov
test
mov
call
or
jle
add
and
sarl
popf
adc
pop
mov
add
pop
inc
arpl
jp
out
scas
pushf
shlb
jg
mov
pop
inc
pop
into
sub
ret
mov
je
inc
or
addr16
dec
mov
mov
jp
adc
pushf
test
data16
dec
inc
cmp
xchg
and
mov
add
or
or
mov
mov
jg
push
int3
mov
sti
cmc
aas
adc
mov
cmp
sub
mov
push
adc
fsubrp
or
sbb
sahf
ds
inc
mov
mov
lret
adcl
out
xor
iret
jg
rol
loop
cmp
inc
rorl
addb
test
xor
mov
outsl
mov
xchg
lret
inc
daa
or
jae
mov
bound
xor
lods
xchg
int
xabort
pop
ret
cmpsb
mov
fcmovnbe
outsb
push
lock
jno
mov
pop
sti
mov
mov
lods
mov
mov
fistpl
ret
hlt
sti
outsb
cmc
imulb
mov
repz
mov
xchg
jle
and
xchg
imul
pushf
mov
mov
add
sbb
xor
enter
into
sahf
cld
fstl
loop
inc
xchg
adc
or
dec
lock
jno
mov
sbb
divb
pop
cmp
movsb
jle
bound
and
mov
ficoml
xchg
add
daa
gs
hlt
popa
pop
stos
push
mov
imul
movsb
adc
fsts
out
fimull
mov
fnstcw
cli
popa
jbe
imul
loope
pop
sbb
mov
add
pop
sbb
fwait
aad
iret
sbb
cmp
xchg
ret
aad
lods
cmc
xchg
loop
ja
lods
cmp
out
into
in
pop
call
rolb
push
ljmp
ss
aas
push
loope
jmp
cmpsl
movsl
rcll
fcmove
xchg
subl
test
jg
sub
or
call
mov
pop
inc
out
push
outsl
mov
test
aas
sbb
rolb
push
cmc
jbe
fists
adc
pop
mov
adc
and
jp
mov
dec
or
iret
cmp
cs
inc
insb
rolb
test
jno
cmp
fs
dec
dec
inc
push
add
hlt
xchg
jnp
add
mov
lock
ud1
insl
add
and
cltd
or
push
pusha
loopne
add
inc
mov
ja
xor
mov
jg
mov
and
or
jmp
movl
movsb
xchg
loope
arpl
rolb
js
cmp
out
scas
cmp
shufps
pop
rcrb
lahf
mov
push
pusha
add
mov
mov
je
xchg
mov
xchg
fcmovu
aas
mov
sbb
adc
aam
mov
mov
cli
jnp
sbb
test
into
into
scas
mov
pop
push
jp
js
sbb
sbb
and
dec
cmp
adc
sbb
iret
sarl
sbb
int3
subl
mov
roll
sbb
add
push
rcll
pop
imul
xor
push
mov
loope
mov
cmp
divb
inc
xchg
loopne
inc
jle
add
js
dec
add
cmc
sbbl
add
dec
fstl
inc
mov
lods
push
ss
test
or
inc
mov
add
sahf
or
into
sbb
pushf
jmp
push
push
popa
xor
fstl
fstpl
aam
jmp
in
ret
mov
push
dec
cli
add
cmp
push
sub
nop
cmp
mov
dec
pushf
int3
mov
movsb
push
pop
inc
mov
out
call
pushl
jecxz
mov
or
pop
fidivs
mov
inc
shlb
inc
lahf
mov
jp
insl
or
inc
cmp
adc
mov
pop
mov
out
out
sbb
loope
sub
pop
sbb
sbb
outsl
inc
frstor
out
or
pop
sbb
sbb
aas
jno
mov
mov
xor
or
popa
imul
cmpsl
jg
cmpsb
lret
lcall
jle
mov
out
leave
enter
dec
inc
loop
ret
cmp
cmp
jnp
push
mov
fisubl
xchg
push
add
fs
push
xchg
outsb
pushf
add
dec
dec
stos
and
mov
aaa
push
outsl
enter
inc
mov
xor
inc
fcoms
idivb
mov
ljmp
mov
add
mov
pop
out
or
sub
out
dec
sbb
sub
jns
loop
rcrl
add
add
in
sbb
arpl
inc
xor
jle
inc
out
or
add
ret
inc
push
mov
int
inc
inc
lods
int
popf
xor
loope
mov
mov
notb
out
pop
lods
sbb
fwait
dec
mov
sbb
loop
adc
fists
stos
jbe
lret
aam
inc
movb
dec
test
stos
js
pop
mov
fsubs
pop
cmpsb
sbb
cld
sbb
arpl
or
pusha
mov
hlt
clc
iret
sahf
and
dec
shrl
insl
or
pushl
out
frndint
ljmp
cwtl
xor
es
adc
jb
ljmp
ret
xor
mov
mov
mov
sub
sub
jno,pn
movsb
mov
bound
insb
lret
xchg
fsubp
sbb
mov
dec
loop
ja
mov
out
rolb
nop
and
jl
stos
and
test
in
leave
dec
sarl
lea
sub
or
fldl
or
mov
add
movsb
in
out
addr16
add
sub
jo
std
pop
gs
cld
rolb
rclb
mov
scas
add
inc
sbb
xchg
outsl
add
xchg
sar
lea
movsl
add
stc
sbb
inc
jge
xchg
shl
mov
int3
add
or
jno
xlat
leave
call
test
mov
loope
sbb
movsl
ret
push
iret
mov
push
sbb
mov
fistps
push
adc
ds
sahf
cmp
popa
dec
out
push
ljmp
stos
adc
push
push
sub
or
aam
lahf
shll
sbb
dec
inc
jb
pushf
add
loop
jle
sub
dec
sarl
mov
push
jo
xor
push
push
pop
ss
push
out
cli
and
fisubl
xchg
dec
icebp
add
mov
hlt
sbb
cmc
shll
sbb
insl
jle
out
out
pop
enter
fnstsw
or
push
inc
out
clc
inc
iret
xchg
and
mov
int3
dec
enter
es
enter
shl
adc
fsubrs
xor
and
push
into
aaa
sub
push
xchg
xor
jg
xorb
pop
loop
js
repnz
jo
lock
mov
dec
test
push
pop
je
dec
imul
ja
push
testl
adc
pop
dec
popf
dec
dec
scas
pop
sub
fcmovu
rcll
cli
jge
pop
cmp
fidivs
popa
lret
sub
or
test
test
pop
add
into
cmpsl
lods
ja
mov
rorb
pop
xchg
add
xchg
pop
leave
adcb
test
ss
hlt
cmpsl
xchg
jecxz
sbb
cli
cld
fnstenv
lret
fs
sbb
sahf
push
mov
mov
ficomps
or
fs
mov
add
fs
pop
in
outsb
sahf
sub
cmc
sub
pushf
mulb
adc
dec
add
imul
dec
sub
iret
push
scas
add
out
je
pop
add
repnz
mov
mov
fmull
mov
push
int
mov
cltd
cmpsb
lret
sbb
shll
out
sahf
rclb
stos
xchg
shrb
and
loop
pop
push
jns
outsb
adc
sbb
icebp
out
cs
mov
pop
jnp
and
cmpsl
mov
xor
call
cmp
and
inc
arpl
dec
clc
mov
add
cmp
ret
ret
cld
out
cmp
inc
cld
jo
mov
push
pop
jo
shlb
cld
or
push
add
scas
flds
repnz
xor
and
out
imul
lahf
cmp
and
outsl
cmp
jp
push
mov
cmc
js
ds
adc
xchg
scas
repnz
or
sbb
dec
mov
shlb
mov
fmul
mov
or
jecxz
adc
sub
into
push
mov
pop
mov
mov
dec
into
jnp
sbb
push
outsb
rcrl
mov
sbb
or
jmp
jecxz
ljmp
add
insl
aam
out
dec
cld
add
dec
out
icebp
sbb
mov
add
shlb
dec
inc
cmp
in
inc
xchg
push
ret
mov
enter
imul
mov
int
repz
mov
je
ljmp
cmp
jge
mov
ret
cmpsl
fcomp
mov
xlat
addr16
insl
xor
out
mov
xchg
sbb
add
sbb
or
xchg
jne
out
das
stc
rcll
pop
mov
push
das
mov
adc
call
loop
push
insl
xchg
scas
cmp
sbb
cmpsl
fidivrs
jo
leave
push
inc
mov
pop
repnz
iret
int3
mov
js
xor
stc
clc
or
and
lcall
fidivl
data16
inc
rcrb
jno
lret
es
gs
fsubr
jle
rorl
adc
dec
inc
scas
ds
inc
popf
or
jg
stos
add
popa
push
pop
mov
imul
addl
icebp
insl
scas
mov
jecxz
push
lahf
loopne
imul
xchg
push
dec
shlb
mov
test
lea
sbb
sub
scas
outsb
pusha
jnp
cs
arpl
repz
clc
dec
jne
mov
leave
xchg
out
out
test
lret
incl
scas
jmp
rcrl
stos
adc
mov
rol
in
cmp
loopne
sbb
inc
jo
sub
shlb
mov
filds
inc
jp
dec
fildll
ss
sub
popa
mov
adc
outsb
dec
jbe
fchs
jmp
lods
fstpl
call
inc
rcrb
loop
gs
inc
int
xchg
pushl
cwtl
and
mov
cld
inc
add
sbb
loopne
out
jbe
hlt
xorb
sti
jecxz
pop
sar
lock
inc
sub
xchg
mov
add
jne
lahf
mov
repnz
fdiv
cmp
sbb
xchg
out
fadd
add
xor
sub
addl
negb
mov
xchg
test
notb
fwait
push
rep
push
sub
xlat
mov
add
and
scas
aam
cmp
adc
nop
dec
add
mov
mov
push
cmp
imul
xor
mov
dec
or
leave
lods
jbe
scas
hlt
xor
test
dec
jne
imul
inc
mov
add
sti
adc
xchg
cmp
mov
jo
in
arpl
mov
mov
xchg
xchg
jne
xchg
js
es
iret
jl
xchg
adc
sbb
dec
repz
adc
repnz
adc
loop
mov
adc
cmp
inc
ror
fcoml
adc
shl
mov
pop
outsb
or
mov
popa
enter
add
mov
mov
iret
sub
andb
mov
push
jp
enter
ret
imul
sub
js
sub
shll
leave
cmp
outsb
iret
xor
cmp
test
pop
push
dec
mov
lods
cmp
les
imul
mov
or
xor
psraw
test
ret
mov
mov
imul
jp
das
mov
daa
ficoml
jle
fwait
popf
das
stc
jmp
into
mov
out
and
adc
ret
cmc
and
pop
xchg
loopne
lock
inc
lods
xor
mov
hlt
mov
adc
mov
and
xor
xor
cmp
int
shlb
inc
pop
inc
sub
outsb
mov
repnz
xchg
repz
add
les
pop
and
mov
pop
sub
inc
pop
xchg
xor
pop
cmp
arpl
lods
mov
fcomps
les
mov
lahf
inc
stos
mov
push
mov
xchg
loope
enter
push
js
push
in
and
imull
in
out
sub
mov
mov
cltd
es
cld
int
jmp
es
mov
mov
mov
jmp
pop
imul
loopne
push
dec
aam
repz
pop
cmp
xchg
mov
sahf
out
inc
adc
push
push
cmc
aaa
imul
shlb
push
fildll
dec
jmp
sub
cli
sbb
push
fcoml
inc
sub
push
sti
xor
and
or
pop
dec
stc
jns
push
int3
dec
mov
push
push
mov
xchg
cmpsb
fidivs
inc
pop
cli
test
adc
and
dec
inc
hlt
in
sbb
lock
ficompl
stc
mov
and
in
jmp
sbb
stos
mov
xchg
mov
xor
lds
mov
mov
cld
jbe
ret
out
fsubr
enter
inc
push
push
jg
call
call
sbb
dec
frstor
lock
cmp
lret
mov
stc
faddl
scas
mov
sbb
pop
inc
testl
mov
divb
sahf
add
movsl
pop
pop
lds
pop
ret
and
lahf
push
mov
imul
ret
popf
and
inc
fstpl
mov
push
mov
lahf
out
push
enter
or
or
lahf
and
ret
in
sub
jno
sub
cmp
scas
xor
and
xor
push
or
or
pop
icebp
jnp
lret
mov
mov
xor
xchg
pop
mov
scas
xlat
int
push
pop
shlb
lcall
or
rcl
stc
pusha
inc
dec
xor
mov
jl
repnz
js
nop
cwtl
or
push
sub
push
mov
push
pop
daa
sarb
push
call
sub
sub
aad
cmp
push
adc
test
fmuls
aas
ret
in
rcll
js
movsb
rorb
lahf
outsb
mov
icebp
sbb
mov
fcompp
hlt
sub
subl
cmp
insl
inc
rcll
ja
mov
push
loop
pop
call
stos
inc
out
out
adc
sbb
xor
push
out
ja
or
inc
dec
pop
int3
adc
cs
icebp
int
push
jmp
and
repnz
cmp
in
test
mov
ja
fstpl
or
dec
jmp
adc
sub
mov
loopne
push
push
cmpsl
out
jns
mov
call
cmpsb
lcall
xchg
jae
mov
jmp
dec
pop
rcrb
lahf
aad
push
cwtl
add
and
mov
mov
loope
sub
sti
femms
cmp
inc
loop
xor
jb
jb
xchg
pusha
dec
xchg
add
dec
loope
imul
mov
or
call
pop
aas
xchg
aaa
mov
aam
mov
sbbb
mov
adc
mov
or
jl
xchg
pop
les
cmp
dec
bound
mov
fs
insl
pop
insl
mov
mov
jecxz
adcb
addr16
pop
jno
punpckhwd
sub
bound
lds
out
mov
std
scas
mov
jp
clc
sub
roll
test
push
sbb
in
test
cmpsb
pop
jecxz
xor
sbb
mov
rol
mov
adc
test
jecxz
push
lods
fistl
test
mov
jae
int3
jno
and
fsubrs
lret
mov
inc
xor
push
xchg
out
iret
sbb
adc
inc
sbb
pop
daa
mov
xchg
inc
gs
push
push
mov
rcr
xchg
sti
bnd
and
fnsave
jle
push
test
and
mov
andl
in
lea
pop
push
mov
or
andl
mov
xchg
push
out
cmpsl
shlb
jmp
in
push
movsl
repnz
mov
inc
mov
into
in
xlat
push
mov
ljmp
loopne
loopne
scas
sub
addr16
adcl
stos
hlt
and
out
imul
lret
mov
push
adc
inc
repz
adcl
jge
mov
jmp
jecxz
add
jg
adc
ja
jmp
mov
jmp
push
idivl
jns
mov
cli
ss
push
loop
movsb
outsl
lret
cltd
cmp
or
add
lcall
lea
inc
mov
leave
in
out
pop
out
xor
insl
ds
shll
stc
xor
add
cwtl
push
push
fldt
cltd
push
sbb
add
mov
mov
ret
ret
enter
push
push
jle
push
mov
jecxz
aaa
pop
arpl
out
insl
or
add
bound
paddsw
nop
imul
or
mov
jae
pop
dec
push
inc
gs
movsb
mov
pop
lret
sbb
lea
sbb
fisubs
stos
xor
add
jecxz
dec
je
jp
ret
addr16
cmp
imulb
push
cmpsl
adc
xchg
ret
fnstenv
mov
dec
sub
nop
test
ror
sbb
insb
xor
xor
les
sub
pop
and
in
ja
ret
or
mov
fnsave
lahf
lock
mov
mov
pop
ss
sub
mov
cwtl
inc
cltd
add
add
imul
jne
xor
dec
adc
sub
rolb
movb
push
cmp
xlat
adc
and
repnz
je
and
sbb
faddl
dec
fxch
dec
xlat
mov
insl
cmc
lret
xor
mov
imul
fdivrl
add
fsts
cmpb
push
ljmp
fldl
dec
test
xor
int
fs
push
fildll
and
inc
jo
xorb
pop
repz
push
or
ljmp
scas
add
or
sbb
jbe
out
fnstenv
mov
fwait
cld
cli
mov
scas
cmc
mov
pop
faddl
repz
jbe
mov
mov
mov
arpl
faddp
dec
loope
sbb
aas
add
inc
sarl
popa
sbb
enter
add
test
fsts
imulb
mov
icebp
jns
dec
bound
xchg
test
call
in
stos
cmp
roll
push
cmp
xor
mov
and
out
addr16
pop
jmp
cmp
dec
data16
or
fstps
inc
aam
xchg
push
adc
ret
sahf
lock
mov
add
jle
jno
movsb
call
and
pop
adcb
push
ss
push
adc
push
fisubrl
addr16
ret
in
outsb
push
lods
cmp
push
mov
and
adc
jg
repnz
stc
mov
leave
adc
adc
test
sub
xchg
jne
sarl
jo
mov
inc
sbb
popf
imul
mov
jne
test
mov
sbb
add
ja
add
dec
fildll
xchg
adc
add
out
rcll
fs
popf
das
cmp
mov
or
sub
adc
pop
or
xor
jbe
xchg
or
fistl
mov
dec
and
mov
jg
xchg
es
jbe
and
arpl
shll
clc
fcompl
into
mov
cmp
shr
inc
aam
les
shl
mov
aas
mov
adc
cmpsb
mov
and
sbb
pop
jbe
mov
pop
dec
rcl
pop
ret
dec
dec
xchg
jmp
test
mov
add
xchg
jo
insl
push
inc
mov
mov
sub
andnps
xchg
lods
add
shl
cmp
xchg
shlb
test
push
into
push
dec
jp
dec
and
je,pn
aas
leave
adc
cmp
push
loopne
pop
pop
les
sbb
push
cmp
sub
aam
jge
mov
stc
cmpsb
stos
xchg
inc
aad
mov
es
dec
cltd
cmp
fsubrl
fcomps
movsl
and
clc
push
aaa
push
icebp
aad
pop
push
inc
xchg
cmp
jle
hlt
pop
cmpsl
adc
add
aam
cmp
insl
or
push
cmp
or
jne
dec
arpl
lods
inc
xchg
push
sub
scas
test
adc
xchg
pop
sbb
stos
or
jae
mov
sub
clc
test
dec
push
mov
xor
xor
ds
cmc
xor
xor
pop
in
dec
outsl
adc
ja
xor
nopl
ds
jno
sub
sbb
test
repnz
mov
jge
mov
cwtl
or
dec
inc
push
push
dec
mov
daa
movsb
push
mov
inc
out
and
rorb
decl
dec
pop
xchg
lcall
stos
dec
insb
push
dec
jg
and
jne
fsubrl
adcl
fwait
outsb
jmp
int
cs
add
sbb
adc
add
decb
pop
xchg
stos
or
out
sbb
or
imul
mov
rcrb
mov
pop
adc
sbb
popf
out
sarb
lods
push
movsb
and
cmp
xor
mov
gs
pusha
sbb
fcomps
scas
std
lcall
add
cmpl
xchg
push
jo
lock
daa
push
out
in
divl
pop
lret
xlat
mov
push
mov
pop
sub
test
dec
jge
or
mov
inc
imul
add
cmp
pusha
sbb
xchg
shrb
lret
xchg
jno
pop
inc
lds
aaa
outsl
pop
scas
aad
rcrb
xchg
xor
cs
nop
jo
jb
sub
xor
ret
scas
jne
xor
mov
xchg
mov
cmp
insl
setg
pushf
clc
jmp
loope
jle
mov
inc
cmc
rorb
xor
push
js
xcrypt-cfb
cmpsl
mov
shlb
pop
outsl
mov
pop
mov
xlat
arpl
fidivs
mov
out
jge
adc
mov
sub
int3
push
or
dec
push
dec
push
imul
jae
mov
adc
cld
pop
mov
icebp
push
test
xor
movsb
out
insl
nop
push
pushf
adc
sub
pop
jo
in
xchg
jge
mov
push
jg
ffree
mov
lock
cmpsb
mov
add
into
sbb
enter
dec
insl
ljmp
push
and
xor
insl
or
int
and
xchg
out
mov
mov
popf
push
push
or
xor
test
mov
cmp
insl
push
add
call
ljmp
xchg
arpl
call
xor
jns
push
cmc
push
pop
out
pop
sbb
test
daa
fwait
dec
out
shll
mov
outsb
ljmp
dec
cmp
and
cmp
xchg
dec
stos
fstl
sbb
or
gs
sbbl
fstl
push
or
jg
nop
xor
loopne
loop
or
adc
mov
jno
jmp
pushf
mov
sahf
jp
call
jno
sahf
mov
in
fs
sbb
mov
adc
sbb
shll
insl
leave
cmp
mov
mov
cmpsb
xor
push
lock
add
mov
jno
pop
test
idiv
les
dec
jle
push
clc
mov
sbb
xchg
sarb
loopne
adc
imull
push
stos
sub
xchg
inc
dec
sbb
out
enter
stc
and
shll
les
sti
lret
cmp
or
dec
xchg
nop
mov
mov
stc
cmp
and
in
or
pop
popa
mov
out
xchg
cmpsl
data16
mov
jmp
jge
cld
jmp
leave
sbb
xor
add
cltd
or
xor
lahf
mov
pusha
arpl
in
mov
clc
mov
repnz
pushf
inc
rorl
cld
hlt
aam
pop
addb
or
fistpl
xchg
addr16
outsb
cmp
dec
sbb
jp
flds
test
rclb
js
popl
ror
in
push
rcrl
and
imul
outsl
shl
add
out
call
ljmp
pop
stos
mov
xor
dec
cs
loopne
inc
sub
loopne
xor
std
add
insl
pop
dec
cmc
icebp
cmp
ja
xor
sub
xor
cmp
movsb
pop
jmp
jo
les
mov
xorb
std
ljmp
hlt
jae
out
xchg
sbb
or
int3
sub
sbb
ljmp
clc
pop
aas
aas
mov
inc
adc
int3
lret
nop
mov
cmp
les
andl
int3
mov
cmp
cmpsb
dec
hlt
mov
lock
lea
mov
or
sub
sahf
arpl
push
jge
and
addr16
imul
jecxz
repnz
and
out
sti
ret
leave
mov
pop
xchg
dec
and
lret
aaa
dec
ror
push
movsl
cmp
cmpsl
iret
pop
mov
mov
push
mov
lret
inc
jle
fisubrl
and
lods
clc
imul
push
push
push
lret
leave
push
scas
lods
dec
cmc
or
xchg
mov
jecxz
sub
mov
inc
sbb
and
pop
mov
adc
inc
pop
je
clc
orb
xchg
and
jmp
cmpsb
push
mov
dec
jmp
inc
and
mov
or
and
test
push
add
rorb
or
mov
cli
pop
jl
in
daa
mov
sbb
lock
jbe
mov
imulb
fldenv
notb
xchg
push
neg
xchg
outsb
enter
rol
sbbl
pop
pushl
pop
mov
mov
mov
cmp
pushf
repz
or
push
test
orl
pop
das
fs
push
adc
or
loopne
repnz
push
bound
mov
bound
data16
jle
in
sub
test
jo
inc
adc
mov
sbb
les
popf
and
mov
mov
sti
push
xor
gs
dec
push
daa
xor
sbb
sub
sti
xor
dec
pop
mov
int3
add
aaa
mov
add
jo
icebp
mov
jbe
ja
test
push
mov
and
fwait
mov
add
jb
sarl
test
and
mov
cmp
testl
pusha
cmp
and
pop
xchg
lods
out
jl
imul
sub
sbb
stos
and
ss
leave
or
and
scas
test
fwait
lcall
jb
ret
daa
lret
mov
mov
cmp
out
mov
call
int
in
popa
repz
data16
mov
arpl
cmpsb
sbbl
add
or
jmp
inc
adc
imul
or
sbb
sub
out
jbe
jl
stos
leave
sbb
push
inc
push
out
outsb
adc
lods
outsb
sub
cld
lahf
sbb
cli
test
jl
push
shll
push
cmpsl
xorl
add
and
jb
fucomp
dec
add
cmp
jo
test
in
lock
sahf
es
adc
adc
add
nop
shll
or
or
andb
mov
movsl
loopne
sarl
test
xor
and
jno
jmp
mov
ja
out
jle
cmp
sarl
xchg
or
sbb
push
rolb
popl
lret
sbb
mull
pop
dec
ja
mov
pop
loop
push
stos
loopne
xchg
adc
adc
test
xchg
mov
fwait
int3
xor
or
pop
cmp
pop
cmpb
imul
jb
fmuls
nop
push
or
and
sbb
cmp
add
mov
mov
jl
cmpsl
shr
and
nop
cmpb
inc
adc
test
mov
cltd
jnp
lods
addl
dec
push
cmp
push
daa
dec
inc
fimull
scas
mov
in
jno
sarl
rcrb
adc
aad
in
loopne
subb
add
sbb
mov
cmp
shlb
sbb
movsb
test
pandn
cltd
xlat
loop
mov
jl,pt
xor
imull
int
jl
cmp
inc
pop
mov
adc
decl
dec
lods
fidivrs
pop
movaps
pop
sub
adc
pop
dec
out
cltd
inc
jb
out
add
xchg
imul
dec
jge
add
add
xor
cmp
insl
adc
push
mov
insl
inc
and
in
aas
in
in
fs
sbb
xor
and
enter
jo
out
mov
outsb
fisubs
outsl
pushf
addr16
sub
lea
std
sub
divb
mov
jno
mov
inc
sbb
stc
shlb
int
cmp
inc
mov
insb
ds
push
or
mov
mov
mov
cmp
or
pusha
mov
jmp
push
mov
xor
aad
imul
lea
mov
mov
std
xor
and
push
pop
sub
xchg
sbb
lret
popf
repz
mov
mov
int3
ja
shlb
clc
add
shll
mov
jno
push
jg
insl
loop
xchg
cmc
clc
dec
xchg
fidivrl
out
push
cmc
add
xchg
and
or
popf
and
mov
rorl
in
mov
mov
imul
fs
ja
sub
je
inc
jg
ja
out
mov
mov
sbb
sbb
imul
inc
fcom
jno
inc
inc
insb
repnz
je
mov
inc
jecxz
aaa
lock
pop
adc
insb
popa
fiaddl
cmp
pushl
xor
push
dec
sar
cltd
mov
dec
mov
loope
mov
jbe
mov
inc
xchg
mov
ret
loopne
pop
or
xor
push
push
jge
js
scas
jle
adc
aas
pop
cmp
je
in
dec
adc
ret
cmpsb
jmp
sbb
aad
mov
mov
cmp
mov
arpl
push
and
add
fcmovne
cmpl
push
xor
imul
ds
sub
in
jns
rcrl
aaa
dec
sbb
aam
nop
js
or
cld
icebp
inc
or
int3
pop
ljmp
mov
sti
cmp
jns
stc
xchg
cli
push
pop
dec
pop
pop
test
dec
insb
push
ret
into
notb
jbe
jo
push
mov
or
fcompl
outsb
add
push
cmp
cli
in
test
into
popf
dec
add
sbb
mov
ret
cmp
push
int3
xchg
outsl
push
push
stos
or
orl
and
sti
pop
rcrl
and
sub
rolb
dec
les
fistpll
psrld
mov
xchg
fsubp
ret
fstpt
movsb
icebp
fwait
push
imul
cmp
sub
insl
mov
push
pusha
rorl
lds
add
pop
jg
pop
push
sbb
xchg
popf
data16
mov
aad
scas
jne
test
pop
lcall
pop
ja
mov
inc
jnp
inc
loop
sbb
xchg
ds
push
cmpsb
xor
xor
mov
mov
out
loopne
add
pusha
mov
out
shlb
cmc
insb
aas
add
pop
out
das
mov
mov
imul
mov
and
insb
xor
or
jae
push
bswap
popf
call
cmp
out
dec
inc
push
or
fimuls
and
ss
popa
push
cwtl
loopne
mov
mov
xor
push
nop
sahf
add
fstpt
loop
in
les
and
nop
xor
add
test
mov
mov
fidivs
loope
mov
sbb
ja
cmpsb
mov
dec
mov
or
pop
out
mov
sbb
outsl
imul
mov
mov
nop
mov
fstps
cmpsb
sub
enter
and
stc
ja
insl
and
add
and
incl
jmp
cmpsb
sub
jae
sub
jns
insl
pop
or
int3
xlat
lret
sub
sbb
repz
jg
xchg
pop
and
dec
and
xchg
popf
jecxz
xchg
and
add
xor
test
jb
inc
push
or
pop
xchg
out
scas
jmp
dec
ja
popf
and
orps
rorl
jae
xchg
scas
shll
enter
movb
mov
cwtl
rorb
data16
lds
popa
flds
div
ljmp
insb
fisttpl
bnd
and
sbbb
xchg
cmp
lret
dec
mov
mov
xchg
test
int
add
mov
xor
xchg
das
add
subl
jb
mov
outsb
daa
scas
mov
mov
arpl
notb
cmp
xchg
lahf
lods
stos
jg
sbb
push
addr16
jns
mov
aam
cltd
test
and
mov
stos
pop
stos
jnp
jmp
dec
mulb
xchg
push
mov
pop
jle
call
into
popa
lret
fisubrl
or
lcall
xor
xchg
rolb
jnp
jl
jle
mov
jb
fmull
imul
ds
ja
inc
adc
inc
in
orl
sub
mov
mov
shll
loopne
or
lock
pop
call
mov
imul
sub
ljmp
mov
cmp
jnp
sub
sti
mov
dec
ud2
jp
ja
gs
mov
enter
or
repnz
leave
adc
std
mov
xor
popl
sub
add
scas
jnp
lret
or
outsl
sbbl
test
insl
mov
mov
enter
adc
push
out
out
adc
stos
lods
pop
push
icebp
fimull
push
dec
mov
cs
cwtl
lcall
pushf
lea
in
repnz
and
jle
bound
xor
sbb
cmp
icebp
pop
dec
jae
sbb
in
js
xor
neg
adc
addr16
out
iret
call
scas
sbb
or
scas
insb
push
dec
insb
cmp
in
in
jle
and
sub
and
in
rorl
aad
jge
push
jb
imull
rcll
xorl
xor
push
mov
inc
movsl
icebp
xchg
es
mov
pop
dec
hlt
mov
push
xor
jne
mov
lods
and
or
add
cld
test
out
das
popa
pop
ret
inc
push
hlt
roll
aas
pop
jbe
in
fmull
and
mov
imul
arpl
int3
mov
sahf
test
stc
add
inc
stos
aaa
adc
jp
inc
sbbl
clc
push
sub
cmp
aas
mov
mov
mov
bound
and
mov
fdivrl
stos
fs
shlb
movsb
les
aam
mov
dec
jmp
mov
mov
add
rcl
mov
jnp
jl
push
add
pinsrw
shl
clc
movsl
sub
arpl
push
cmp
pop
fdivrs
sbbb
add
bnd
mov
push
cli
adc
jge
out
inc
mov
xor
mov
nop
ret
loop
mov
or
ret
xchg
arpl
inc
mov
push
push
mov
mov
xchg
jmp
fistpll
sbb
sbb
lret
movsb
daa
testb
fistpll
mov
pop
jno
imul
sub
and
lock
mov
addr16
dec
push
mov
inc
sbb
push
sbb
in
mov
lds
push
aas
fwait
pop
aam
lods
das
sub
lahf
fisttpl
out
sbb
data16
dec
dec
adc
mov
test
inc
fyl2x
movb
xchg
jae
xchg
idivl
push
test
lods
sbb
mov
out
movsb
stc
pop
mov
hlt
sbb
rcl
add
out
mov
lea
xchg
inc
mov
in
fnop
nop
cmp
sarl
lret
push
pop
adc
pusha
dec
mov
push
xchg
pop
dec
xchg
mov
aaa
mov
adc
loop
lcall
incl
fdivrs
fdivrl
in
pop
mov
sbb
dec
test
sahf
lods
aad
push
pop
add
rcrb
leave
jae
add
mov
adc
mov
cmpsb
test
rorb
sti
je
leave
imul
add
and
add
mov
scas
xor
or
aad
pushf
push
jmp
inc
xchg
lret
mov
jne
dec
xchg
fcoml
mov
pop
mov
jnp
mov
cmc
mov
sarb
data16
dec
dec
enter
pop
int
insl
aaa
mov
scas
testl
and
jb
push
aaa
pop
push
push
lods
arpl
enter
lret
inc
ret
out
enter
repnz
scas
lret
pop
push
loop
mov
into
adc
mov
stos
jns
pop
aam
dec
repnz
add
call
xchg
sbb
or
adc
sub
sbb
cmpb
adc
in
int3
dec
std
fldenv
or
cmpb
mov
cmpsl
xchg
or
aas
neg
mov
mov
jle
fldl
xor
cmpsb
nop
mov
lods
mov
sub
test
inc
sbb
mov
cltd
inc
xor
mov
sub
xchg
and
js
mov
mov
stos
lret
and
xor
jbe
imul
mov
push
sbb
cmp
add
loop
and
lds
mov
movsb
or
out
mov
out
das
fucomip
push
movsl
dec
iret
jns
aaa
dec
xor
fwait
subl
cmp
insl
aam
xor
adc
das
cmp
cmpsl
jl
in
lds
mov
ds
push
outsb
push
test
add
sbb
xor
lds
cltd
push
mov
js
push
bound
call
clc
lods
out
xchg
icebp
incb
mov
ret
push
rcrb
out
cs
ret
sahf
call
sbb
add
ret
dec
inc
adc
pop
mov
or
ret
cmp
jl
sbb
int
pop
jl
push
cmp
adc
test
mov
lods
sarl
add
lahf
inc
and
push
div
cld
push
ljmp
push
pop
xchg
mov
pop
outsl
jb
test
jg
cmp
lcall
push
fneni(8087
repnz
pop
xchg
jmp
nop
mov
adc
mov
push
adc
mov
cltd
sbb
ret
clc
push
into
gs
outsb
adc
and
mov
cmp
arpl
xchg
inc
sahf
adc
ret
mov
or
or
in
push
loope
nop
insb
cwtl
ljmp
test
rcrb
dec
out
stc
cmpb
pushf
add
cwtl
mov
and
cmp
loop,pt
clc
das
mov
das
pop
loope
js
frstor
mov
call
adc
insl
nop
adc
cmpsb
jne
add
jne
push
jb
mov
and
xor
pop
lcall
or
sti
loop
mov
lcall
addr16
shll
or
jg
lret
adc
push
sub
rcr
clc
in
lea
xchg
push
loopne
jae
pop
in
daa
sub
jb
or
shlb
cltd
jge
insl
pop
jle
in
xor
outsb
clc
sahf
orb
mov
in
dec
mov
mov
or
mov
xchg
pop
mov
add
mov
es
inc
xor
mov
movzbl
xlat
inc
insb
jno
push
cmp
in
push
mov
pop
inc
dec
aaa
add
cld
adc
bnd
sbb
mov
inc
mov
adc
add
or
pop
fidivs
outsb
mov
inc
push
adc
ljmp
mov
mov
and
inc
scas
ret
mov
sti
sbb
mul
and
aas
cli
test
inc
mov
mov
outsb
pop
lret
jo
pop
pop
pop
adc
push
js
jno
bound
sahf
push
dec
dec
frstor
pop
cmpl
mull
inc
dec
mov
pushf
sbb
cmpsb
ss
gs
jae
jl
push
lock
sar
rorl
cmpsl
stc
mov
jnp
sbb
push
xchg
mov
adc
lods
pop
popl
pop
ja
pop
push
mov
xor
mov
rolb
xor
jg
sbb
ret
stos
repz
sub
mov
jl
inc
and
adc
js
ja
mov
repnz
sahf
adc
jp
sub
sub
mov
dec
test
cmp
lds
mov
push
push
and
les
sti
xor
ljmp
in
hlt
inc
decl
sarb
fndisi(8087
jnp
popf
mov
outsb
popa
ss
icebp
fs
inc
cmp
call
xchg
xor
in
xor
inc
add
gs
cmp
push
jnp
movsl
or
and
pop
jge
cmpl
mov
mov
insl
or
xchg
fwait
das
push
insl
fsubl
and
mov
outsb
or
fidivl
and
dec
bound
loopne
fistps
out
cli
add
adc
pop
sbb
push
in
cmp
aas
daa
or
and
lahf
popw
dec
idivl
jne
cmp
arpl
fstps
dec
dec
movsl
xchg
nop
pushl
cmpsb
rorb
push
push
pop
and
mov
mov
ret
push
push
repnz
int
stos
out
push
xchg
int
dec
add
or
lahf
lret
and
rcrl
cwtl
cmp
cli
xor
xchg
repnz
mov
lret
inc
mov
jnp
push
jle
out
addr16
pop
cmp
lret
loopne
stos
ret
lea
mov
xchg
mov
outsl
mov
out
arpl
sqrtps
cwtl
dec
subb
fnstcw
in
pusha
fcomps
sbb
popf
clc
and
aaa
popf
test
sub
cmpsb
or
test
pop
cmp
push
mov
cld
sbb
mov
pop
iret
mov
shlb
pop
push
jl
in
mov
pushf
pusha
mov
dec
aad
pop
mov
cs
stc
rcl
mov
addb
jle
ljmp
lahf
inc
ljmp
icebp
pop
testl
lds
add
minps
mov
test
addb
psubsw
jne
mov
aas
into
xor
jns
mov
repz
dec
clc
sub
mov
dec
loop
bound
add
das
mov
ljmp
ja
int3
gs
in
fsubs
inc
push
inc
popf
popa
push
pop
mov
and
rclb
xchg
std
inc
out
aad
jae
xor
pop
mov
je
pushf
and
inc
insb
or
test
push
imul
add
popf
nop
lods
inc
dec
add
jecxz
adc
mov
push
in
pop
lds
jl
fistpl
jg
sbb
sub
cmpsl
les
dec
mov
dec
pop
rcll
dec
xor
pop
subl
in
in
ja
icebp
dec
xor
pop
mov
lcall
mov
lahf
push
xchg
xlat
cmpl
dec
xor
fsub
int
mov
sbb
mov
or
xor
jnp
or
test
kandnw
mov
jg
and
mov
pop
jp
mov
jmp
stos
xchg
loop
sar
mov
mov
ja
adc
xor
mov
jmp
hlt
xchg
mov
and
and
mov
in
mov
adc
mov
pop
mov
in
in
jne
fdivr
xor
scas
in
mov
dec
add
imul
add
jp
sysexit
popa
xchg
push
fidivl
int
les
fcmovne
ljmp
dec
rcll
pusha
sub
mov
jns
ds
rol
jnp
in
imul
popf
mov
arpl
xlat
lcall
das
negl
addl
ljmp
repnz
fisttps
pop
leave
pop
ja
dec
cmp
jge
roll
popf
leave
xchg
in
iret
cmp
fwait
ror
jno
mov
or
xchg
xor
les
pop
fs
jle
fildl
mov
add
pop
ljmp
cmpsl
xor
cmpsl
cld
cmc
sahf
sub
pop
pop
jmp
xor
jl
jp
mov
or
gs
push
call
mov
outsb
pop
cmp
add
lods
mov
pop
roll
loopne
in
scas
inc
jnp
jmp
outsb
loop
dec
dec
shrl
add
adc
scas
stc
mov
pop
mov
mov
lods
push
sub
lret
push
adc
nop
xor
je
es
scas
test
adc
loop
mov
xchg
pop
pop
inc
cmp
jle
or
or
addr16
in
cld
jns
add
cmp
add
xor
jo
pop
aas
loop,pn
mov
xor
in
scas
divb
and
jmp
push
pop
arpl
mov
mov
inc
lods
inc
jmp
push
insw
jae
or
test
lea
dec
loope
fnsave
je
divb
out
sub
pop
push
mov
adc
inc
cmc
bound
add
jmp
pusha
dec
std
push
lcall
mov
out
mov
cltd
pop
fcmovb
dec
sub
in
ds
andb
xchg
sbb
xor
inc
clc
mov
or
xor
js
fnsave
pop
mov
sub
xor
xor
mov
daa
sbb
lds
mov
and
mov
into
les
mov
push
ret
cltd
icebp
sbb
cmpsb
jbe
into
mov
push
dec
rorl
xchg
inc
aad
sbb
cmpsl
cs
jnp
push
sbb
inc
adc
jne
mov
loop
mov
pop
ja
adc
icebp
jns
dec
ficoms
adc
xor
loopne
or
ja
daa
or
xchg
lods
jl
imul
fimull
mov
cmp
test
cmpsb
add
sub
sbb
test
cmpsb
in
lea
aas
or
pop
inc
scas
sub
or
xlat
or
push
xchg
test
pop
out
icebp
jmp
lds
sub
adc
out
popa
cmp
xchg
imul
mov
sar
dec
add
xchg
adc
fmull
andb
stos
inc
aad
aam
mov
sbb
mov
leave
lret
or
xchg
pop
clc
aaa
mov
in
jnp
xlat
xor
das
outsl
aas
pop
loopne
fadds
fists
push
pop
ljmp
inc
xchg
xor
mov
push
dec
mov
push
xchg
je
ffree
cwtl
or
cmp
sbb
das
pusha
mov
jge
or
push
xor
nop
push
or
je
dec
adc
fdivs
test
leave
test
push
pop
cmp
mov
popf
cmpsb
cmp
sbb
xor
sub
das
jle
jge
jns
inc
jb
and
fisttpl
subb
push
xor
leave
fwait
psubb
ss
inc
mov
cmc
cld
sub
mov
mov
push
icebp
ret
and
bound
leave
pop
clc
adc
dec
lret
arpl
pop
pop
call
mov
aaa
sbb
sub
div
cmp
mov
jle
notl
xor
iret
repz
pop
addr16
and
mov
mov
outsl
add
xor
movsb
or
leave
xorb
lock
jno
lret
test
add
scas
lds
adc
and
xor
test
shlb
add
add
jnp
xor
jecxz
pop
push
jl
lret
inc
cmpl
scas
mov
and
dec
mov
pop
cwtl
test
lcall
adc
ret
push
leave
xchg
adc
fcmovb
fsubr
test
cmp
in
jo
cwtl
lahf
sarb
adc
jne
mov
add
adc
pusha
xor
dec
and
cmpsl
pop
fwait
mov
inc
shlb
pop
sahf
fdivl
mov
rorl
sarb
hlt
ret
dec
insl
cmp
mov
out
push
fiadds
adc
in
scas
cltd
add
shrl
ret
pop
shrl
dec
movsl
sub
dec
hlt
andb
jecxz
cmpsl
jae
fchs
repz
in
cld
or
xlat
sbb
dec
adc
jae
outsb
leave
movsl
pop
sbbl
cmp
mov
sub
jmp
std
inc
loopne
xor
xchg
clc
push
add
push
out
jge
xchg
mov
leave
xor
scas
sti
sbb
inc
jp
fwait
scas
faddp
jmp
mov
sbb
add
in
in
pop
jb
xor
popa
jo
mov
out
loop
icebp
lcall
or
mov
mov
out
iret
cmp
sub
xchg
sarl
and
ret
out
inc
add
pop
mov
adc
sbb
pop
insb
xor
inc
mov
shr
sti
lods
lret
mov
sbb
cmp
test
lcall
cmp
mov
ret
push
stos
fmull
pop
mov
or
pop
scas
test
daa
or
adc
sub
jbe
add
cld
insb
add
push
or
push
xchg
popa
adc
js
jle
inc
mov
aaa
cli
mov
fldenv
push
insb
jne
jg
scas
sti
jl
out
rolb
xor
mov
mov
int
push
out
mov
fsubp
dec
mov
iret
mov
or
mov
push
and
inc
cmp
std
sub
js
sub
imul
xorl
fucomi
pop
adc
adc
test
cmpsl
bnd
xor
cwtl
xchg
or
xchg
sub
in
jp
testb
mov
mov
mov
sar
repnz
push
mov
cmp
jne
lock
mov
enter
fisttpl
js
xor
sbb
mov
jg
cmp
scas
cmp
pop
lret
inc
es
fisttpl
xchg
lock
pop
test
sahf
ficompl
add
leave
and
mov
add
lret
js
mov
mov
push
aad
or
sbb
clc
mov
into
mov
cld
or
out
in
popa
aad
out
mov
fsts
inc
sti
sbb
je
add
fsubr
into
loopne
fcom
dec
sub
sbbb
push
pop
push
mov
in
mov
cmpsl
rcrb
cmp
jecxz
stos
iret
cs
pusha
push
and
std
sbb
call
imulb
sbb
mov
mov
cmpl
xchg
sbb
adc
test
loope
lcall
out
sub
sub
push
shl
ret
leave
ss
cmp
loope
into
mov
out
test
jle
dec
xor
push
inc
mov
jmp
push
into
mov
adc
test
jo
push
jmp
and
push
and
notb
es
add
das
lret
xor
dec
and
lcall
push
or
xchg
add
lahf
cmp
lods
loopne
arpl
sub
inc
incl
mov
mov
jg
bound
testl
fists
mov
popa
stc
xlat
mov
imul
jno
pushf
fucom
ja
out
xor
mov
fildll
imul
dec
xor
out
into
push
pop
jl
lods
repnz
pop
imul
adc
imull
rcll
inc
xchg
ret
rclb
mov
lods
shrb
lret
rclb
ja
lcall
rolb
decb
mov
enter
in
insb
jmp
xchg
loop
shll
insb
mov
adc
xor
mov
adc
std
mov
sub
cltd
in
je
ljmp
mov
test
jae
mov
xor
inc
into
imul
inc
jae
sbb
and
pop
push
or
popf
lock
repz
dec
mov
aam
lret
outsl
clc
idivl
pusha
xchg
mov
add
adc
int3
mov
xlat
jno
lahf
je
xor
aaa
nop
add
das
and
aas
icebp
adc
in
pop
xor
xchg
vpcmpeqd
sub
and
sub
loopne
mov
mov
mov
call
and
dec
repnz
xlat
sarb
pop
pop
or
fwait
mov
rcll
or
lret
adc
jne
ret
ret
or
stc
rclb
lahf
xchg
mov
mov
aas
and
jo
and
icebp
les
xchg
xor
pop
cwtl
aad
jge
cmpsl
jb
mov
or
test
and
imul
pop
subl
mov
dec
movsb
mov
lret
inc
xchg
cmp
adc
daa
std
push
outsb
xchg
push
out
call
lods
std
out
sub
movsl
insb
imul
testl
pop
sbb
addr16
push
into
lock
and
lods
fsts
adc
mov
fcompl
add
cli
fsubs
stc
nop
xor
inc
mov
xor
dec
mov
mov
jno
sahf
jb
mov
mov
mov
cmovs
fnstsw
test
mov
stc
out
sbb
inc
jo
inc
rorb
lods
mov
dec
inc
or
mov
push
pop
xchg
outsb
xchg
push
cltd
inc
adc
insl
movsb
pop
and
aaa
cli
mov
pusha
les
pop
sbb
jnp
ljmp
shl
dec
mov
and
adc
fwait
pop
adc
xor
inc
test
push
sub
sahf
sub
add
jp
inc
pop
jecxz
inc
imul
dec
lock
inc
push
mov
add
xchg
dec
pushf
or
sbb
out
ret
mov
call
es
out
add
mov
cmp
mov
lret
adc
fdivrs
dec
push
pushl
mov
add
sarb
push
movsb
mov
xchg
insb
test
xchg
icebp
sub
out
pop
hlt
jb
sub
cmc
pop
fsts
std
push
pop
push
mov
sbb
push
insl
mov
xorb
es
fidivrl
cld
jmp
sbb
xor
cmp
lret
lods
sub
push
cmpsl
jmp
lea
scas
ss
aaa
insl
clc
pop
ljmp
stc
sub
push
add
adc
and
cmpsb
lea
jns
xchg
xchg
cmova
data16
jo
mov
daa
push
mov
std
pop
xchg
inc
mov
inc
or
scas
jo
leave
pop
bnd
cmpl
mov
lds
sbb
xchg
mov
iret
mov
xlat
inc
lcall
dec
dec
cmp
mov
add
add
and
mov
adc
and
icebp
mov
pop
cmpsl
mov
dec
notb
jmp
loopne
sub
sahf
test
movsb
and
das
pusha
iret
jp
lcall
sbb
je
fisubrl
fists
sti
adc
dec
or
add
xlat
repz
lret
pop
adc
out
or
adcl
leave
test
sbb
enter
enter
in
xlat
out
mov
cmc
addl
stos
testl
push
icebp
xor
movsl
mov
push
jnp
stos
lods
adc
dec
aas
movsb
lret
cmp
lcall
fwait
out
scas
add
add
ret
orl
push
fwait
sub
mov
jmp
add
mov
test
lea
js
cmp
dec
or
aas
test
and
ret
aas
stos
inc
int3
xchg
xchg
xchg
loopne
inc
cmc
cwtl
repnz
jg
outsb
shrl
test
sarl
mov
scas
inc
xor
push
mov
or
xor
fisttpl
xchg
testl
or
adc
movb
repz
xor
jle
cmpsb
in
cs
adc
dec
decl
pop
andb
and
sub
xorb
ja
loop
jecxz
sbb
shrl
pop
push
iret
je
mov
pop
loopne
and
jecxz
aad
aaa
push
fidivl
pop
or
push
dec
popl
dec
jle
js
mov
cld
adc
mov
pop
lods
movsb
movsl
and
rcrb
sub
xor
inc
int3
push
sub
imul
hlt
push
push
jne
cs
in
mov
addl
pop
movsl
fists
faddl
push
add
jp
clts
sub
xlat
cld
jp
or
adc
push
pop
insl
dec
cs
add
movsb
leave
in
cs
insb
jp
push
or
ljmp
mov
lea
aas
push
mov
loop
inc
jns
or
inc
lcall
xor
inc
fnsave
jbe
adc
push
shll
ds
in
adc
icebp
and
inc
mov
arpl
shrb
bnd
pusha
adc
test
and
outsl
js
outsb
adc
push
ja
sub
cmp
imul
or
mov
dec
xchg
or
jle
ret
xor
into
dec
fwait
push
pop
pop
adc
enter
aaa
or
mov
pop
dec
mov
jp
cwtl
add
xchg
add
xor
sbb
or
bound
adc
add
paddsb
ljmp
inc
xchg
xlat
sub
mov
jge
outsb
inc
dec
mov
sahf
xchg
ja
mov
lret
bound
sbb
mov
xchg
sub
mov
in
aam
fnstenv
sub
ljmp
rcl
jl
add
cltd
mov
push
xchg
xor
cmp
xor
push
sti
pop
fcoms
jno
push
cli
jmp
js
mov
cmc
adcb
mov
repnz
ret
scas
adc
enter
stc
xor
mov
ret
out
xchg
mov
fisubrl
jbe
pop
jae
mov
xchg
in
stos
addr16
jmp
ss
xchg
out
das
cli
jns
sub
pop
testb
lock
xchg
ss
pop
xlat
out
shlb
ljmp
add
mov
and
orl
push
test
mov
movsl
movsl
dec
xor
sbb
dec
stc
fdivr
inc
inc
imul
add
sti
insb
push
popa
stos
hlt
mov
pop
jle
mov
stc
gs
cmp
aam
xchg
pop
and
xor
dec
sbb
xchg
test
push
and
and
push
movsb
or
arpl
clc
cs
ja
sbb
jge
fisubrl
mov
cmc
cmp
jb
repnz
lea
cmp
and
jge
add
divb
fdivrs
dec
test
das
aaa
hlt
mov
pop
loopne
sub
jge
xchg
inc
cmpsb
jp
dec
mov
cmc
push
sbb
loope
xchg
cwtl
cmc
std
mov
stos
xor
push
pop
hlt
mov
stos
pop
sbb
cmpsb
and
lcall
jnp
mov
dec
mov
add
ficoml
aaa
and
mov
and
aaa
mov
and
sub
aaa
mov
shr
mov
mov
stos
jmp
sbb
mov
lds
test
push
lret
ljmp
mov
adc
inc
or
cmp
dec
cltd
lds
adc
adc
fwait
andb
out
lea
dec
pusha
sub
xchg
push
test
and
mov
scas
addr16
jmp
adc
mov
sti
cmp
inc
pop
imul
imul
pop
cmp
cmpsl
jne
cld
xor
scas
mov
jne
push
popa
jg
sbb
mov
or
fildll
icebp
int3
ja
bound
js
sub
mov
push
pop
addl
inc
fnstcw
mulb
jno
addr16
into
fcmovne
bnd
lods
shlb
mov
sbb
jp,pt
loopne
lods
xor
cmovo
and
push
xchg
mov
testl
push
mov
dec
xlat
add
fisubrs
popa
dec
mov
and
arpl
popf
movsl
or
push
mov
push
leave
cmpb
iret
mov
daa
push
popf
or
cli
mov
and
mov
add
enter
mov
mulb
clc
mov
je
les
xchg
lcall
jp
push
sarb
sysexit
fdivr
adc
cltd
mov
in
subl
pop
jno
xchg
push
dec
aad
jns
push
insl
mov
in
lret
push
shl
clc
out
cld
mov
mov
lcall
cwtl
int3
jbe,pn
out
sub
adc
addr16
jmp
test
out
aad
sbb
inc
mov
push
sahf
pushf
je
ss
adc
sub
cmpsl
gs
push
or
and
mov
repnz
gs
add
clc
dec
inc
xchg
stc
bound
cwtl
std
pop
lahf
xor
sarb
ror
jge
xor
in
in
cmc
mov
cmc
add
repnz
lret
aam
mulb
and
xor
imul
push
es
mov
cwtl
or
or
fwait
and
jmp
imul
out
outsl
cmpsl
sbb
jns
xchg
dec
cli
push
popf
lods
aaa
adc
cmp
les
fiaddl
mov
addr16
mov
inc
adcl
je
and
mov
xor
add
adc
ds
filds
cld
cmp
jl
adc
out
stc
iret
mov
fcomps
orl
movsl
fsub
imul
pushf
and
and
adc
data16
xor
push
aaa
jnp
adcl
dec
out
xchg
iret
dec
jge
in
mov
lahf
adc
movsb
inc
mov
in
inc
test
test
ret
push
insb
and
xchg
sbb
cli
popf
je
stos
push
jne
adc
cwtl
push
insl
mov
jb
pop
icebp
inc
andl
cs
aaa
cmpsb
jb
push
xor
test
gs
push
jg
cmc
cmp
adc
fwait
pop
mov
pop
loop
loopne
int
repz
pop
ret
or
mov
inc
lret
push
pop
and
jle
outsb
sub
pop
cltd
add
jnp
insl
scas
push
xor
dec
adc
mov
roll
cmp
cli
and
dec
inc
sahf
enter
cmp
fs
xlat
stos
sbb
mov
sub
cwtl
je
mov
sub
xor
mov
jmp
icebp
push
sub
sub
mov
lea
inc
fsubrp
mov
xchg
ja
add
int3
pop
jb
daa
lods
push
xchg
stc
dec
mov
xchg
mov
in
js
pusha
inc
sub
mov
clc
jno
cld
lgs
scas
lret
cwtl
mov
and
jae
ror
ljmp
ljmp
lcall
mov
xchg
aas
push
jne
mov
rorb
jl
shll
out
rclb
outsb
or
test
mov
movsl
repz
jns
push
xor
test
testb
jo
sub
fnstenv
xchg
or
repnz
fbld
jmp
push
cltd
push
pop
jg
or
imul
nop
sarb
out
and
or
jb
cmpsb
ds
add
mov
push
pop
cmp
inc
cmp
sbb
cli
test
mov
dec
insb
arpl
in
cmpsb
in
jnp
in
mov
mov
add
cmc
xchg
sti
or
and
push
lahf
dec
sub
jmp
xchg
dec
daa
xchg
mov
sbb
mov
mov
daa
clc
add
sub
sbb
int3
repz
jmp
fadd
pop
cmpsl
xlat
pop
fs
pop
jge
loopne
or
pop
ljmp
sbb
jnp
and
or
pop
pop
daa
push
shlb
ljmp
loope
test
fidivs
and
jns
ficomps
sub
xor
call
cli
into
xchg
inc
fisubrl
call
mov
mov
lock
inc
mov
jb
sbb
and
fildl
lcall
and
in
jne
popl
jne
jno
nop
cmpsb
js
push
aam
mov
cmp
jns
stos
fdivrl
jmp
in
les
sbb
and
jmp
cmp
xor
mov
shl
mov
and
dec
cmp
pop
dec
bound
mov
mov
lret
pop
rcr
add
fstpt
inc
xor
mov
jge
xchg
dec
mov
or
sbb
add
rorb
jmp
lods
xorb
mov
inc
push
sbb
addb
int
iret
inc
data16
dec
mov
xchg
add
mov
dec
push
test
iret
imul
in
cmp
je
leave
je
xchg
test
sub
jl
movl
popf
repnz
add
les
jae
push
add
xchg
xchg
icebp
dec
mov
mov
pushf
cwtl
call
jne
pop
add
clc
cld
daa
rclb
jne
adc
inc
mov
inc
cmp
dec
mov
dec
pop
std
fistps
hlt
or
mov
sub
popf
push
adc
arpl
inc
sub
scas
push
nop
inc
cmc
rcrl
test
jl
jnp
ljmp
fsubrl
push
push
add
icebp
pop
sbb
mov
stos
xchg
insb
xchg
scas
xor
fsubrp
imul
arpl
sbb
loopne
sbb
cs
xor
inc
xor
clc
push
mov
xlat
lds
adc
mov
and
pop
je
push
in
push
insl
pusha
test
mov
jae
xor
inc
out
jle
lahf
sahf
cmp
sub
sbb
jmp
inc
ja
lcall
rcl
dec
cmp
sub
ret
mov
fwait
push
in
into
mov
xor
faddl
stos
roll
cmp
lcall
imul
dec
or
add
imul
jno
lret
shrl
cwtl
aas
fisttps
pop
mov
mov
dec
xchg
andl
cmp
js
pop
insl
mov
rcll
mov
shl
pusha
ret
push
jne
sahf
and
sub
imul
add
mov
loope
repz
xchg
sbb
sar
mov
adcb
flds
sub
mov
add
adc
andb
sbb
shr
filds
mov
iret
in
adc
cltd
jnp
in
jb
ficoml
cld
pop
mov
mov
cmp
daa
int
jo
pop
fisttpll
push
jnp
gs
mov
popa
jecxz
fnsave
cmp
xchg
mov
lock
popf
jb
stos
scas
mov
sbb
xchg
shrb
xchg
jns
dec
mov
xchg
cwtl
ss
fldt
cmp
jo
outsb
addr16
lahf
jns
lret
lods
jle
test
dec
and
jmp
jg
xor
dec
inc
shr
dec
dec
aaa
rorl
sahf
dec
test
inc
aaa
fisttpl
mov
je
repnz
dec
xor
xchg
jp
cmc
xchg
mov
push
fiaddl
push
xchg
cltd
and
addl
ljmp
push
jmp
into
daa
shrb
mov
hlt
loop
adc
cltd
inc
or
mov
jle
inc
mov
iret
aas
and
cmpsl
sub
push
and
pushf
fst
cmp
inc
push
xor
sbb
mov
fnstsw
fistps
in
sub
jnp
or
pusha
stos
xor
cwtl
and
dec
xchg
cwtl
cld
cmpsl
sub
mov
mov
jns
out
popa
ljmp
sub
mov
in
mov
or
or
add
bound
push
test
dec
push
sub
lods
int
jae
fs
mov
or
icebp
inc
and
dec
fisubrs
add
ja
popf
aam
jg
jecxz
movhps
cmp
movsb
jg
daa
mov
test
pop
mov
notl
jmp
inc
repnz
jno
clc
daa
test
fs
ret
lcall
xlat
push
inc
fidivl
add
lock
test
int
inc
mov
rorb
mov
cli
rorb
fxch
fldenv
repnz
sub
xchg
orb
fstpt
sub
mov
stos
and
sbb
stos
arpl
lds
pop
sbb
ficompl
push
pop
shl
pushf
pop
mov
mov
leave
testl
enter
test
mov
add
fs
ss
outsl
je
mov
inc
jbe,pn
in
repz
mov
or
cmpsb
bound
js
mov
jo
cmp
pop
stos
mov
scas
lret
cltd
push
enter
pushf
out
xor
les
xor
mov
lret
test
xchg
les
jle
inc
stos
adc
push
pop
std
jo
adc
movsb
dec
jmp
ss
xchg
jge
adc
lea
dec
xchg
add
int
mov
test
push
and
dec
fistpll
jp
jmp
popa
mov
rol
xchg
xchg
pop
push
add
add
inc
push
scas
ds
es
dec
add
mov
and
inc
lea
sub
lods
stos
nop
dec
jp
jnp
fldt
rcrb
jae
inc
lret
rcrl
mov
insb
pop
loopne
add
mov
pop
test
pop
dec
js
lcall
xchg
lcall
push
sub
stos
clc
jae
jno
sbb
mov
inc
xchg
push
loopne
inc
push
int3
jecxz
or
ljmp
dec
test
dec
fldt
sbb
xor
jl
fsts
jmp
lods
jae
push
out
push
or
lahf
ljmp
call
mov
xchg
jo
ret
clc
ja
cltd
ja
cmp
imul
ret
mov
dec
cmp
pop
and
pusha
fcomp
pop
add
push
mov
dec
test
or
cmp
pop
daa
xor
xchg
in
mov
ret
push
xchg
jbe
xchg
or
push
lds
lret
cmp
mov
sub
adc
mov
idivl
sub
pop
sub
sbb
xchg
into
xchg
jbe
sbb
pop
mov
packuswb
fistpl
ja
jns
sbbb
jnp
popf
cli
shll
xchg
inc
cmp
insl
cld
jmp
xchg
in
cmp
xchg
xchg
dec
stc
mov
xchg
jno
es
out
sbb
add
dec
mov
or
aaa
insb
mov
aam
js
mov
sub
mov
add
sub
fwait
mov
sub
jl
jp
bound
mov
dec
insl
jae
dec
jno
mov
test
lods
jecxz
cmp
inc
xor
in
enter
outsb
xor
das
mov
sarb
outsb
mov
icebp
jge
cs
xor
addl
iret
std
test
out
icebp
sub
and
jmp
bound
repz
std
push
xchg
push
mov
bound
or
xor
ljmp
sbb
ljmp
pop
push
test
or
pop
push
jg
pop
cli
ret
aam
cwtl
mov
add
or
mov
lock
das
mov
dec
test
add
jnp
jno
xor
out
sub
aad
ds
pusha
mov
aam
sarl
fs
stos
mov
in
add
fsubrs
fisubs
dec
dec
fistps
mov
in
mov
pop
mov
mov
add
add
cmp
imul
outsb
fstl
lock
sbb
fs
insl
and
ret
and
aas
xchg
mov
lods
sub
loopne
inc
pop
dec
mov
push
movsb
sub
into
sbb
sub
daa
ficomps
notb
repz
xchg
arpl
jmp
neg
imul
add
iret
mov
loop
rcrl
or
or
aaa
push
movsl
sbb
pop
xchg
inc
mov
pop
jns
inc
ds
pop
imul
and
outsb
rorb
lcall
mov
dec
fucomip
jae
pushf
jmp
jb
xor
aas
sub
dec
outsl
mov
cwtl
int3
sub
mov
insb
test
out
out
stos
and
cmp
push
xchg
sub
sbb
push
mov
or
jnp
test
loopne
sbb
cli
jg
add
addr16
inc
inc
mov
pop
inc
push
movsl
scas
push
mov
cmp
rorb
mov
pop
das
mov
sub
cmp
xchg
sbb
sub
popa
scas
mov
adc
lods
dec
sbb
bnd
dec
dec
loop
rolb
mov
push
cld
push
data16
cmpl
cli
cmc
lods
xchg
xchg
mulb
sbb
push
repnz
cmpsl
adc
out
jbe
stos
daa
stos
dec
jns
cltd
or
adc
pop
adc
inc
jns
dec
cmp
sbb
fldt
mov
out
int
movsl
mov
sbb
adc
test
mov
stc
cbtw
popf
push
cltd
pop
jl
sub
cmpsl
mov
dec
sbb
push
or
inc
loop
lret
jmp
test
and
fists
fisubrs
push
dec
aas
rcll
jp
stos
jb
adc
push
sub
dec
in
daa
fisubs
repz
push
roll
add
xor
jg
iret
cltd
inc
mov
ret
push
gs
lea
sub
mov
mov
xlat
cmp
scas
ja
ficoms
xor
cmpsb
and
addr16
mov
test
cli
outsl
ror
call
out
push
popa
pushf
iret
or
adc
jns
mov
adc
sbb
or
ds
xchg
and
jp
jge
fidivl
pushf
repnz
mov
xor
and
aaa
sub
ds
enter
xor
adc
cmp
test
adc
jp
adc
andl
fcmovnu
lods
stc
ret
stc
push
xchg
xor
mov
hlt
in
in
ret
in
cmpsb
sub
adc
ljmp
inc
sub
out
inc
pop
inc
test
cmp
dec
sbb
inc
hlt
and
cmp
es
add
addr16
je
jle
cwtl
mov
callw
xor
clc
test
adc
xor
sbb
sub
push
enter
xor
rcrl
outsb
insb
ret
cs
mov
push
mov
sbb
jbe
adc
daa
pop
rorb
sub
cmp
jns
stos
mov
test
or
jbe
jecxz
dec
cmp
dec
xor
jbe
push
pop
clc
jge
or
push
outsl
push
xchg
sub
cmp
out
jae
aad
adc
jmp
inc
pop
inc
mov
rcll
cmp
mov
movsl
lahf
mov
dec
lds
push
les
jg
hlt
sub
int
in
outsb
and
adc
pop
lea
lret
pop
xchg
and
xchg
bswap
pop
loop
and
stc
jge
insb
mov
mov
push
adc
idivl
fs
or
dec
push
add
cwtl
mov
and
rolb
jge
insb
push
aad
xchg
push
cmp
mov
xor
inc
orl
lcall
jmp
cmp
rclb
mov
movb
mov
jnp
add
push
lods
mov
out
adc
dec
xchg
xor
int3
xor
xchg
or
xor
push
clc
cwtl
ljmp
xor
mov
add
mulb
jmp
mov
cli
ljmp
scas
out
dec
add
inc
incb
mov
jae
lcall
mov
scas
jo
repnz
xor
imul
shl
dec
shlb
inc
notl
test
rcl
jne
outsl
xor
scas
inc
std
mov
in
dec
filds
dec
xlat
fimuls
jmp
cmp
cs
movsb
lock
lods
data16
stos
popf
or
jns
js,pn
insb
scas
das
inc
add
dec
push
adc
xchg
fiaddl
xchg
stc
bound
inc
cmc
pop
xchg
repz
sbb
out
push
mov
out
mov
add
push
subb
pop
dec
test
push
leave
adc
jns
push
mov
clc
lock
sarl
push
sub
jg
les
jge
jnp
jb
inc
inc
adc
push
xor
cmpsb
ljmp
scas
stos
pop
xchg
mov
movsl
orl
leave
dec
mov
xchg
ret
repnz
scas
in
filds
add
adc
adc
leave
xorl
mov
frstor
sbb
into
and
inc
mov
shl
xor
leave
sbb
mov
cmp
or
movsl
ljmp
mov
pop
dec
mov
inc
jbe
xchg
or
lret
out
or
inc
ret
dec
push
dec
inc
cmp
mov
sahf
and
adc
or
iret
push
pop
mov
mov
daa
movzbl
fisttps
outsb
testl
jmp
imul
repz
loopne
in
scas
lahf
scas
xchg
and
mov
jnp
js
sub
lret
in
mov
out
je
lret
paddusb
bnd
lock
pop
push
cmp
int
pop
fimull
fwait
scas
dec
int3
dec
popf
mov
cs
lds
and
outsb
aam
scas
enter
cld
push
dec
int3
pop
into
mov
xorb
dec
jne
adc
mov
rolb
push
ljmp
fidivrl
nop
scas
mov
cmp
repz
mov
pop
adc
cmpsb
push
xchg
or
sbb
cli
fcoms
in
out
mov
lock
fwait
pushf
fmuls
stc
iret
aas
lgs
rclb
cmc
push
imul
je
sbb
pop
leave
imul
das
shl
mov
in
inc
pop
mov
ficoms
sbb
mov
mov
in
pusha
adc
add
mov
or
lret
and
mov
pop
test
shrl
mov
sti
xchg
stc
paddsb
lahf
cmc
outsb
movsl
mov
in
sub
xor
daa
in
xlat
cltd
jl
das
jmp
imul
cmp
int3
jns
and
test
fsts
hlt
rcr
dec
punpckhdq
jno
sub
aad
adc
mov
das
and
fmul
mov
sbb
test
pop
inc
dec
popa
and
rcr
outsl
pusha
xchg
ret
lea
pop
push
hlt
xor
sahf
mov
xor
dec
dec
fidivs
adcl
mov
ror
push
xchg
cltd
xchg
clc
pop
mov
into
pushl
xchg
lahf
add
xchg
in
push
ficoml
dec
pop
mov
pop
cmc
cmpsb
sbb
cs
pop
jge
pop
repnz
jecxz
dec
sub
cld
rcll
imul
sub
sbb
jae
fimull
or
jbe
imul
lret
cmp
test
or
pop
loop
loope
pop
testb
out
push
mov
cmp
add
cmc
ss
jp
jno
xchg
or
pop
rol
dec
jecxz
dec
jp
xor
mov
xor
test
rorb
dec
pop
add
stc
or
jg
xorb
test
dec
add
in
pop
sbbb
mov
sub
das
adc
inc
inc
dec
es
jne
fdivrl
notl
mov
dec
cmp
push
dec
lods
xor
lock
bound
or
mov
adcb
mov
popf
fisttps
pop
arpl
sub
imul
icebp
aaa
jg
push
mov
cmp
test
sub
imul
mov
arpl
pop
dec
push
jecxz
xchg
stc
adc
leave
add
pop
in
popa
sub
das
pop
lods
sub
inc
ss
scas
sbb
stc
adc
stos
mov
add
dec
lcall
lods
mov
jge
sbb
push
ds
xchg
pop
out
push
imulb
lahf
mov
push
aaa
loop
mov
iret
jnp
cmp
repnz
inc
xor
or
iret
mov
jle
scas
lret
dec
mov
movsl
jns
js
test
mov
out
dec
pop
jne
cmp
lret
pop
fwait
xchg
stos
or
daa
loop
xor
popa
push
cmp
aas
pop
je
cmpsl
fwait
mov
xchg
jge
and
movq
sbb
mov
pop
fnsave
fisttps
lcall
icebp
jle
adc
lahf
cmp
xchg
push
or
xchg
and
enter
iret
fs
gs
mov
ljmp
and
lds
sahf
test
ds
es
xor
sbb
dec
push
inc
xchg
outsb
pushf
pop
adc
fsub
roll
lods
or
add
in
mov
mov
push
loope
and
fiaddl
or
push
in
xchg
xor
inc
xchg
jno
push
xchg
fmull
mov
xor
dec
xchg
inc
repnz
xchg
lods
popf
push
lock
dec
pop
sar
pop
unpcklps
andl
fisttps
and
dec
mov
sub
xor
mov
push
movsb
sub
test
push
jbe
sub
stc
jo
pop
cltd
or
and
xor
scas
cmp
sub
mov
gs
mov
mov
jg
or
or
pop
clc
jge
idivl
inc
lret
aad
pop
pop
dec
das
jnp
pop
and
and
fwait
dec
cmp
cmp
push
sub
popa
pop
cmc
or
push
cmp
push
pop
shll
rclb
outsb
popa
idiv
ficomps
cli
sbb
cmc
mov
js
lret
push
add
in
leave
mov
test
pushf
popf
in
in
fdivrl
shlb
xchg
push
mov
scas
inc
aad
cmp
es
or
addr16
adc
lds
test
push
dec
bound
xchg
sbb
inc
cmpsb
cmp
jae
mov
xchg
gs
icebp
stos
loopne
cs
xor
push
xchg
stos
sbb
mov
subl
into
adc
fcmove
in
rcll
sbb
push
sahf
mov
xor
xchg
and
xchg
lods
xor
js
ljmp
lcall
mov
subl
in
arpl
jmp
mov
push
stos
xchg
andb
dec
popa
jmp
pop
fiaddl
sti
out
pop
imul
int3
std
adc
mov
das
cmp
adcl
add
negl
cmp
cmp
mov
mov
in
inc
xlat
xchg
mov
faddl
cmp
inc
stos
push
adc
dec
cwtl
testl
sub
inc
iret
jb
cs
jle
pop
inc
cmp
sbb
dec
cmpsb
jmp
les
jecxz
and
dec
leave
push
fcomps
cli
adc
push
inc
pop
cld
add
and
xchg
out
cs
enter
clc
inc
jbe
pop
or
dec
pushf
loopne
xorl
pop
add
xor
add
insl
test
push
jp
aam
add
and
fwait
jp
xlat
movsb
jo
subl
jg
mov
stc
and
mov
xchg
pop
out
aam
in
cltd
inc
add
scas
sarb
mov
jae
enter
mov
loop,pt
or
xchg
mov
add
fisubrl
inc
sbb
push
lcall
leave
push
xor
rol
fwait
inc
xchg
mov
ja
xchg
add
push
add
and
outsl
cmp
lock
cld
mov
divb
fwait
sub
jl
sbb
push
loope
sbb
sbb
sbb
jecxz
pop
mov
stos
aas
and
movsl
mov
ss
fisubrs
or
ljmp
addr16
mov
pusha
cmc
dec
push
add
inc
outsb
hlt
adc
push
push
jecxz
push
lcall
out
addl
pop
fwait
push
ror
jne
cmp
inc
fstl
xor
stos
adc
shrb
add
pop
dec
icebp
loop
or
je
mov
mov
push
jae
cs
or
pop
fisttpll
dec
add
out
dec
call
jne
pop
cli
out
sub
loopne
daa
mov
sbb
inc
stc
mov
lds
push
sahf
mov
cmpsb
add
sub
sahf
push
pop
push
push
lahf
out
jbe
gs
enter
mov
mov
mov
jecxz
sub
cli
das
cmp
pop
sarb
test
rolb
or
dec
sti
fisubrs
xor
sbb
decl
es
ljmp
iret
xor
gs
out
cli
sbb
movsb
adc
out
call
das
xchg
and
jl
mov
mov
xor
xor
push
jns
popf
lret
add
or
jbe
mov
push
loopne
lea
inc
adc
notb
sub
outsl
lahf
or
pop
in
cmpsl
mov
xchg
mov
nop
jp
inc
icebp
mov
mov
insb
lea
push
dec
pop
stc
pop
jns
pop
sbb
or
fwait
and
ficompl
xchg
mov
scas
pop
inc
sbb
sbb
lret
test
mov
fisttpl
lods
pop
fadds
jne
jg
shlb
mov
mov
sub
sub
jge
fists
xor
rorl
je
and
mov
inc
or
insb
testb
stc
sbb
sbb
mov
ss
cmp
push
lods
rclb
sub
cmp
in
fcoml
das
sti
mov
cmc
dec
out
mov
push
insb
test
inc
mov
pop
xor
int3
aas
jbe
aam
jb
mov
lods
mov
ret
and
shll
call
mov
fmuls
mov
data16
and
iret
and
dec
and
pop
lds
lret
mov
jo
scas
sub
push
pop
test
lds
enter
bound
rorb
cli
push
repz
cltd
repz
xor
fsubl
dec
push
lcall
into
cbtw
mov
or
cmp
sarb
testb
adc
mov
nop
jge
into
bound
xchg
or
not
push
fwait
rcrb
cwtl
and
aam
inc
adc
jp
or
pusha
inc
jmp
data16
imul
clc
inc
push
xchg
into
movsl
in
mov
movsl
jo
mov
xor
jmp
jb
mov
fisubl
aad
lea
movl
dec
inc
cmp
add
test
cmc
sub
jmp
out
add
repnz
imul
mov
add
imul
sbb
stos
lods
fisubrs
push
push
and
cmpb
inc
and
xor
sbb
pop
sub
push
jo
jmp
mov
dec
push
jmp
testb
cmpsl
ljmp
leave
popa
inc
pusha
xchg
add
in
xor
push
push
lods
jno
cmp
js
xchg
loop
ljmp
out
in
dec
add
loopne
rol
es
add
mov
lahf
daa
mov
lahf
and
popf
add
mov
sub
lcall
mov
jnp
call
adc
idivb
lods
fisubs
das
add
loope
mov
leave
loop
push
out
or
cmc
dec
out
xor
cmp
add
into
ret
inc
push
lods
sbb
adc
aad
sub
out
jo
in
sbb
fdivrl
roll
inc
and
popf
jae
test
push
cmp
scas
shr
dec
loope
das
add
jne
inc
ljmp
push
push
push
fisttpl
outsb
sti
xchg
loope
adc
mov
ret
add
js
xchg
test
cld
mov
push
adc
xor
cld
aaa
xchg
add
inc
sti
movsb
mov
cmpsl
testb
sub
xchg
mov
ret
negb
popf
inc
lcall
mov
sub
xor
mov
cmp
push
repz
pop
or
jns
pop
cmp
jmp
xchg
cmc
dec
daa
jbe
mov
push
enter
xchg
test
mov
out
dec
mov
insl
imulb
push
bts
insb
mov
das
and
sbb
stos
gs
or
inc
jno
dec
cli
out
push
jmp
sbb
fstpl
ss
fistl
aas
shlb
loopne
enter
xor
mov
test
or
movl
xor
test
nop
addl
fisubrl
rcrl
xchg
and
dec
ja
lock
daa
aad
cltd
mov
jae
fxch
or
jb
lods
dec
xlat
xor
shl
dec
xor
pop
mov
jnp
inc
bound
pop
pop
and
leave
in
push
dec
dec
jl
jg
je
bound
push
out
or
lods
lahf
cmp
push
mov
adc
sub
fsts
pop
sarb
push
or
mov
aas
cltd
sub
ret
std
or
xor
adc
ja
xchg
sub
das
cmpsl
lods
pop
js
int3
dec
enter
jno
xchg
es
enter
or
fsubl
sub
addr16
or
adc
loope
dec
jae
aas
stc
jmp
leave
imul
pop
es
jl
cmpsb
pop
js
jne
xchg
clc
mov
dec
loopne
fwait
mov
into
push
mov
call
mov
inc
lret
ss
sub
shrb
inc
cmp
pop
rcll
or
pusha
fcoms
aaa
cmp
mov
jp
jle
inc
imul
fs
lods
push
and
add
lods
adc
aad
fildll
in
dec
movsl
mov
jb
test
in
arpl
inc
mov
add
repz
push
mulb
ret
push
and
testb
cmpsb
or
scas
icebp
movsl
mov
out
arpl
pop
or
push
inc
outsb
out
movsl
loope
out
pushf
jno
inc
ss
cltd
adc
cmp
es
loop
add
cmpsl
pop
xlat
pushf
inc
jns
in
repz
mov
adc
outsl
jge
imul
sub
int3
push
test
and
xchg
lds
cltd
adc
xlat
and
loopne
jb
push
push
sbb
test
popf
and
js
and
pusha
mov
stc
imul
and
repz
cmp
or
xchg
pop
pop
xor
cmp
mov
pop
lahf
jns
xchg
data16
jnp
data16
popa
push
and
and
cmp
cmc
or
stos
and
inc
sub
jg
sti
stos
sbb
push
out
add
out
cli
cmpsl
dec
xor
test
loope
pop
xchg
lds
dec
xchg
push
loop
push
xor
stos
dec
inc
add
xchg
shrb
sub
xlat
mov
xchg
mov
push
inc
loopne
shlb
mov
or
test
mov
and
mov
scas
jb
push
push
mov
xor
dec
ret
in
inc
sub
loopne
ror
sbb
xor
out
loopne
mov
adc
leave
imul
jge
incb
jle
jae
aad
aad
adc
pop
mov
inc
cltd
or
dec
sub
sub
or
cvtdq2ps
icebp
in
lret
aaa
popl
fsubrs
fisubrl
jp
jns
adc
in
sub
and
pushl
nop
hlt
mov
inc
jl
sbb
sbb
inc
fildll
pop
imul
jg
out
cmp
sub
dec
test
mov
jne
dec
sbb
lret
adc
out
test
repnz
test
jecxz
fld
jmp
loop
jae
inc
stos
add
adc
ja
and
lahf
xchg
fnstenv
dec
mov
stos
filds
cli
in
pop
pop
shlb
shll
ds
mov
pop
loope
xor
inc
mov
jecxz
mov
xchg
pop
gs
inc
fcmovb
fwait
or
inc
sbb
xchg
pop
adc
mov
icebp
inc
or
cmpsl
out
xchg
lahf
xorl
fbstp
in
es
jne
test
xchg
xorb
ficompl
bound
repz
mov
bound
orb
cs
inc
sub
icebp
gs
lock
call
dec
sub
jp
insb
mov
sub
movups
push
mov
clc
or
xchg
jge
jg
mov
pop
sbb
xlat
jne
test
mov
xchg
sbb
cmp
pop
std
sub
ljmp
xor
mov
ficomps
jecxz
jg
es
pop
addl
fidivl
push
hlt
lea
dec
and
cmp
inc
jp
cli
xchg
dec
jmp
imul
insl
cmp
std
int3
insb
xor
cmpsl
int
test
test
repnz
inc
lds
and
mov
push
sub
pusha
inc
pop
repnz
rcll
mov
clc
mov
xchg
dec
add
adc
xchg
out
xchg
stc
nop
sbb
jmp
ss
jns
imul
cld
mov
mov
scas
cmp
repnz
icebp
sbb
pop
pop
xchg
jge
sbb
xor
test
out
pop
cmp
cmp
es
mov
inc
cmc
fisttpll
es
bound
inc
push
xor
mov
hlt
sahf
pop
cmpsb
lds
insb
daa
jno
icebp
sahf
jae
pop
xchg
repz
cmp
sub
pop
aas
add
into
addb
sahf
sbb
xor
je
dec
int
test
lock
test
ss
out
cld
pop
pop
js
fisttpll
arpl
sti
sbb
sbb
add
pop
cmp
popl
mov
inc
in
mov
or
shrl
mov
movsb
jl
shrb
jns
inc
cmpsb
sbb
mov
sub
xlat
aas
jae
mov
enter
jns
movsb
add
mov
and
fwait
push
js
or
xchg
cld
sub
add
jns
scas
push
push
cmp
aaa
mov
xchg
mov
lahf
cli
pushf
jbe
movsl
jecxz
fdivrp
fld
sbb
mov
cmp
cmpl
test
cli
pusha
lods
mov
cmp
test
inc
sub
arpl
add
cmp
pop
mov
dec
icebp
jae
cmp
lods
or
sbb
jne
leave
stc
cli
pop
pop
mov
sbb
hlt
xchg
pop
int3
xchg
clc
pusha
int3
adc
xor
or
add
loop
dec
push
xor
xchg
in
inc
push
ja
in
out
divl
xchg
fucomip
mov
pushf
ds
fsubl
bound
cli
and
popa
add
insl
adc
xchg
xor
jge
pop
add
sbb
scas
and
aaa
rcrl
xchg
popl
pop
hlt
jmp
pop
mov
js
andl
lock
pop
cld
and
mov
dec
inc
ret
out
cmp
mov
idivb
movsl
pop
adc
jecxz
push
mov
inc
and
ss
jb
dec
or
fdivl
in
aaa
mov
dec
int
jb
inc
movsl
subl
mov
into
dec
mov
aad
sbb
ljmp
movsb
cli
sub
fnstsw
addr16
add
mov
lods
xor
call
aam
test
xor
dec
sbb
insl
cmp
aam
mov
incb
ljmp
dec
cmpps
or
add
cmc
inc
xor
jp
push
sbb
pop
pushf
gs
mov
fildll
scas
mov
push
les
mov
xor
xchg
stos
mov
cld
mov
mov
rcrb
adc
mov
mov
repnz
sti
xchg
dec
xor
lock
sub
and
lcall
cld
ret
data16
das
sbb
xchg
inc
sub
lret
inc
faddl
lods
mov
add
and
xchg
xor
lods
cmp
fistl
fistpll
xchg
mov
cmpsb
pop
or
loope
shlb
inc
fldcw
outsl
and
dec
cmp
shlb
iret
test
cli
je
and
sbb
cmp
sbb
push
xor
dec
js
sbb
pop
push
inc
shll
addr16
push
leave
rcr
je
test
inc
aas
pop
xchg
fisttps
push
adc
aaa
nop
adc
jnp
xor
ljmp
cmp
adc
cmpsb
sbb
and
jns
pop
out
and
inc
mov
sub
lea
xchg
lock
in
xchg
and
mov
lcall
rol
les
xchg
aam
test
pop
mov
jae
daa
jns
out
adc
mov
or
pop
sbb
cs
aaa
imul
inc
int
insl
repz
ror
jecxz
mov
lret
in
addl
divl
push
or
or
fisubl
xchg
inc
or
mov
repz
lods
gs
dec
sbb
pop
or
ljmp
push
jl
rol
pop
mov
dec
and
pop
lahf
push
sbb
cltd
xlat
out
out
and
ja
cmp
adc
data16
mov
aaa
cmp
mov
sahf
ljmp
sbb
or
mov
fnstenv
fwait
in
fisubrs
inc
cli
aas
dec
dec
stc
push
imul
insl
or
jp
sub
and
xchg
jnp
aaa
push
inc
scas
aas
aad
pop
xchg
xchg
test
jmp
js
imul
cmp
cs
ja
scas
daa
mov
popf
pop
jbe
ljmp
sub
pop
or
mov
sbb
sub
sub
add
je
adc
pop
cltd
jnp
scas
add
in
add
imul
mov
push
adc
push
daa
sbb
pop
and
and
cmpsb
cmp
ljmp
pop
inc
test
sub
daa
or
inc
nop
arpl
shll
and
flds
pop
mov
loope
push
test
lods
jle
add
in
add
shll
pop
pusha
push
or
decb
inc
jns
outsl
clc
sbb
or
xchg
xchg
cmp
dec
inc
or
mov
pop
mov
push
es
jle
out
aaa
popa
mov
test
fs
outsl
pop
rclb
loopne
aad
inc
or
mov
leave
adc
stos
sbb
popa
cmp
inc
fidivrl
out
mov
sbb
pop
stos
cmc
dec
cli
testb
ficompl
mov
push
push
xor
int3
push
lcall
out
push
out
aad
push
jmp
jge
inc
mov
enter
xor
mov
mov
mov
and
xchg
in
push
mov
jg
jno
pop
sub
jl
jmp
aaa
dec
mov
nop
lcall
dec
lahf
jne
arpl
ret
mov
push
lods
sti
leave
cmp
or
gs
jg
outsb
ja
inc
mov
jmp
cmpsl
mov
jo
stc
std
jbe
pop
or
inc
pushf
ror
adc
inc
inc
je
pop
or
ss
test
sbb
push
push
sbb
mov
rcll
push
xchg
cmp
cmp
sub
xorl
adc
out
sub
mov
cwtl
lods
dec
out
fimull
xchg
mov
enter
xor
add
sahf
repnz
mov
sbbl
hlt
xlat
inc
movsl
and
mov
and
movsl
imull
shufps
mov
xlat
sub
jnp
inc
or
xorl
mov
dec
dec
mov
xchg
xor
mov
mov
aad
pop
cmp
bound
ds
in
dec
dec
sbb
subb
idivb
mov
cmpsb
xchg
cwtl
mov
cltd
inc
add
out
shlb
jmp
mov
js
adc
shll
out
fnstcw
lret
lock
inc
repz
or
mov
ja
cmc
sub
aam
mov
loopne
pusha
repz
inc
js
jecxz
inc
ljmp
sbb
repz
roll
cmc
or
adc
frstor
dec
adcb
push
xor
in
sarb
cmp
sub
cmp
xor
jnp
clc
jl
or
mov
movsl
push
movsl
mov
ficoms
inc
cmpsb
mov
icebp
pop
sub
xor
adc
fs
mov
rcrl
call
iret
fsubrs
ret
arpl
push
aad
aad
push
pushf
xchg
dec
out
mov
enter
cli
inc
int
or
pop
adc
cmp
notl
mov
xor
cmc
push
inc
sti
jb
or
inc
testl
or
lods
ret
addl
pop
jl
insb
jno
fldenv
loope
decb
int
and
dec
lds
stc
shr
mov
sub
aaa
pop
pop
mov
fs
ljmp
jmp
sbbl
in
int
inc
in
jb
mov
dec
adc
adc
aam
xchg
out
in
psrad
sub
push
fldcw
and
push
pop
xchg
adc
push
mov
cltd
das
clc
sub
xchg
aam
fs
add
mov
imul
xor
test
pushl
mul
jge
sti
ret
and
xchg
daa
push
xor
lcall
addr16
ffreep
and
inc
adc
jp
mov
push
in
imulb
je
movsl
or
stos
mov
pop
sbb
mov
jno
mov
jmp
aas
shr
icebp
xor
shrb
int
mov
inc
or
mov
pop
popa
xchg
sbb
sahf
jnp
inc
stc
cwtl
add
rolb
std
mov
adc
pushl
mov
nop
mov
repz
fildll
mov
inc
mov
call
push
in
jb
data16
std
shll
inc
adc
and
fistl
fadd
pop
sarl
dec
addr16
mov
cs
adc
mov
pop
push
insl
sbb
jae
ret
xor
out
push
add
xor
ss
jno
cmpb
out
dec
cmc
movsl
std
aad
add
mov
dec
dec
xchg
cmp
insb
push
add
sbb
xchg
inc
xchg
jecxz
test
mov
mov
sub
add
dec
push
ljmp
xchg
inc
imul
scas
mov
pop
ljmp
mov
and
pop
add
mov
sub
and
inc
xchg
popf
inc
out
mov
nop
and
loop
mov
or
cmpsb
xchg
les
sbb
pop
fbld
mov
imull
hlt
stos
sarl
loop
sbb
negb
je
mov
pop
lret
aam
fsubrs
sbb
cmp
mov
dec
sub
xchg
adc
and
retw
add
in
lahf
jae
push
pop
stos
sti
xchg
lcall
lret
sub
and
js
out
dec
cmp
jge
adc
iret
outsl
pop
mov
jp
adc
movsl
mov
jo
jl
inc
xchg
adc
push
mov
repz
xchg
mov
shll
mov
mov
aam
mov
add
push
ds
cmpb
insb
adc
and
or
jb
ss
add
movsb
ss
and
dec
fwait
inc
jne
xor
add
jl
push
adc
subb
sbb
inc
jecxz
insb
jns
cmp
das
ret
repnz
jb
pop
pop
lods
dec
jb
mov
mov
icebp
int
rcrl
sti
xchg
aam
repnz
xor
cmp
jp
sarl
xor
pop
sub
sarl
sub
adcb
cli
jg
and
mov
enter
inc
pop
ret
push
inc
add
jp
jle
jae
scas
jb
mov
jle
ds
int
xlat
fcomps
pusha
adc
movsl
sub
jmp
scas
loopne
out
out
arpl
mov
addb
add
push
push
fnstcw
ja
mov
imul
repnz
xchg
and
push
shlb
sarl
and
imul
in
lcall
mov
cmp
mov
xor
sbb
mov
adc
sbb
inc
popf
hlt
pop
mov
popa
dec
sbb
push
in
mov
fiadds
inc
or
mov
mov
add
aad
pop
call
mov
jno
cmpsb
pop
outsl
xchg
xchg
lret
jno
sub
fiaddl
lock
pop
lret
or
sarb
mov
jbe
repnz
jns
mov
dec
std
lret
pop
dec
out
inc
lock
mov
or
sub
inc
into
inc
dec
sbb
push
push
stos
push
push
pop
subb
jbe
es
ja
cmpsb
pop
mull
xchg
xor
aas
pop
ret
daa
sub
adc
mov
rcr
push
dec
jno
filds
pop
lds
push
dec
jns
push
xchg
add
arpl
mov
jl
mov
int3
push
fld
pop
sbb
xorl
cmp
movsb
jno
lcall
in
shlb
mov
mov
aaa
add
pop
in
loope
mov
addr16
std
pop
pop
mov
cmp
and
iret
dec
popa
mulb
sub
mov
iret
sub
push
mov
ss
loopne
enter
loop
adc
and
sti
mov
sub
inc
inc
cli
mov
imul
rorb
and
out
pop
mov
sub
movsl
inc
adc
xlat
cmp
lret
out
adc
mov
xor
shrl
adc
sarl
cmp
xchg
cmp
dec
repnz
inc
lret
in
aas
sub
xchg
adc
mov
push
adc
adc
aad
not
insb
enter
lret
daa
jb
fdivl
and
xchg
shrl
lea
jmp
stc
add
scas
adc
int
dec
test
dec
push
pop
jno
int
loop
arpl
mov
jns
xor
inc
cmp
aam
mov
cmpsb
dec
xor
mov
les
and
arpl
push
xchg
sar
test
mov
xor
xor
or
dec
xchg
aam
lret
ret
repz
jno
add
xor
mov
call
jl
mov
mov
dec
mov
test
in
rclb
adc
xlat
fs
push
popf
pop
imul
pushf
add
push
mov
loope
sbb
ja
cmpsb
das
imul
leave
mov
xor
test
fldt
pop
sahf
or
mov
out
fdivrs
out
in
add
dec
xor
fisubrs
pusha
rcll
popa
shrl
mov
stc
addl
xchg
imul
arpl
sbb
test
sbb
push
mov
pop
inc
adc
adc
fwait
push
mov
fisubl
sbb
push
pop
pop
or
xor
ljmp
xchg
jnp
xchg
jo
mov
cmp
pop
cmp
loop
xchg
pop
mov
jnp
mov
and
fucomp
xchg
mov
es
push
sbb
xor
lcall
mov
rol
push
rcrl
addr16
xchg
insb
dec
ds
and
xchg
dec
aas
pop
push
mov
and
pop
jns
addb
test
nop
mov
in
movsl
lock
lahf
sbb
imul
add
jmp
iret
insl
js
add
sub
sbb
lea
xchg
jp
mov
popa
xchg
adc
push
mov
push
je
cmp
sahf
stos
clc
sti
fwait
imul
scas
in
vpmacsww
xchg
cmpsb
sar
lods
jns
mov
dec
mov
loope
inc
icebp
push
test
jbe
sub
divl
std
and
xchg
xchg
xchg
js
sub
icebp
adc
nop
nop
cmp
sbb
lcall
mov
mov
cli
jecxz
inc
adc
mov
outsl
jecxz
out
es
into
scas
xor
lahf
cmpsl
popa
push
into
test
in
popa
cmc
lds
sub
andl
in
lods
aad
pop
fs
ret
movb
inc
cmp
mov
jmp
cmc
fmulp
loopne
pusha
cld
pop
test
jge
push
loope
pushf
push
mov
testl
xor
fstpl
ret
mov
xchg
std
fidivrs
sbb
js
out
repz
out
sub
aaa
imul
and
test
cmp
adc
xor
je
add
xchg
scas
push
push
xchg
and
cmp
push
fmull
push
ds
pop
outsl
scas
mov
xor
daa
test
sbb
push
js
adcb
imulb
push
jle
and
imul
andb
cli
jne
rorl
or
fistl
push
jb
jbe
insl
cmp
cmp
out
mov
pop
xor
aaa
testl
dec
leave
lret
pusha
aam
repz
xor
mov
das
adc
dec
mov
mov
ds
pop
add
fisttpl
cltd
popf
and
in
ljmp
sbb
xchg
iret
sub
call
test
xchg
hlt
jle
pop
pop
mov
cmpb
iret
add
sub
xchg
mov
jb
mov
jg,pt
or
mov
arpl
add
outsl
jbe
frstor
int
inc
pop
dec
andb
mov
adc
std
xor
inc
ja
das
push
mov
les
xor
push
sbb
push
test
nop
mov
flds
in
xor
and
ret
dec
aad
and
push
and
jge
andl
sarb
mov
sbb
movsb
dec
rolb
mov
xor
sub
pop
hlt
mov
das
jmp
jmp
shrb
loopne
inc
jb
icebp
sbb
mov
sub
test
dec
pop
loop
push
test
push
mov
test
mov
call
pop
insl
jnp
dec
cmpsb
outsl
pusha
pop
inc
mov
rorl
stos
adc
add
sbb
dec
addr16
mov
push
sbb
mov
mov
clc
jno
dec
xchg
mulb
outsl
lret
and
pop
lds
inc
ss
and
or
adc
jnp
inc
sbbb
scas
mov
or
fstpt
mov
mov
sub
adc
call
mov
sub
scas
into
xchg
push
mov
xlat
pop
pop
xchg
pop
subl
out
dec
push
mov
ljmp
out
rcl
mov
int3
ret
sub
arpl
popa
in
lahf
arpl
adc
pop
jg
idivb
dec
mov
add
das
lock
xor
popf
popf
inc
stos
nop
inc
jne
test
xadd
fisubl
ret
les
cs
pop
mov
mov
jno
faddl
mov
jns
xor
dec
ret
sbb
sub
jb
cli
out
xlat
xor
or
repz
push
es
dec
mov
addr16
insb
mov
subl
fisubl
bnd
mov
cld
cld
mov
roll
jo
aaa
test
lret
mov
out
mov
push
mov
ss
add
mov
mov
mov
jne,pn
cmp
test
ror
xor
cmp
sub
fisubrl
fildll
dec
cmpsb
add
mov
mov
popf
and
inc
mov
and
jge
adc
xor
jb
imul
and
pop
cmpl
mov
pop
scas
ds
arpl
fs
inc
dec
daa
fst
jns
xchg
mov
and
dec
and
icebp
cld
test
into
in
fs
xchg
sbb
adc
std
push
sub
scas
out
push
push
cmpsl
fsubp
xchg
sub
jo
arpl
pop
leave
inc
xchg
sbb
in
mov
sub
mov
xchg
nop
sub
mov
sbb
out
sahf
into
inc
add
adc
mov
movsb
dec
xchg
push
xchg
std
adc
xor
jl
rorb
gs
dec
movsb
xchg
arpl
subb
out
movsl
notl
pop
mov
fildll
mov
mov
ds
or
sub
adc
loop
xor
ja
stos
and
scas
fwait
mov
cld
xor
dec
inc
in
xchg
sbb
jne
mov
adc
lcall
inc
sti
pop
sub
and
ror
adc
fiaddl
inc
or
add
jo
mov
add
icebp
jg
sahf
pop
and
int
mov
pop
jae
loopne
out
mov
arpl
mov
clc
xchg
mov
xchg
movsb
push
adc
dec
push
sub
pop
stc
push
jmp
sub
gs
stos
cmp
pop
stos
sub
add
test
cmpsb
jp
push
add
pop
mov
xchg
mov
mov
xor
xor
jnp
aad
mov
push
incb
shrl
and
jmp
fs
pop
mov
jmp
xor
pop
lahf
or
push
mov
lcall
mov
dec
pop
ds
and
push
sahf
fimuls
push
scas
ljmp
pop
into
popf
jne
mov
sbb
ret
sub
mov
pusha
stc
adc
jmp
fdivrl
dec
inc
lea
pop
roll
cmp
push
ds
aad
adc
stos
adc
lods
dec
sbb
and
dec
xchg
lret
add
std
mov
mov
popa
adc
and
jae
cmp
jnp
loop
pushl
movl
mov
mov
insl
inc
clc
outsb
sub
scas
xorl
outsl
pushf
mov
jae
cmp
dec
mov
pop
shrl
cmpsb
aas
mov
dec
push
aaa
fbstp
fld
aaa
mov
dec
xchg
push
mov
sub
mov
scas
imul
mov
leave
cmp
inc
test
pop
sahf
mov
loopne
pop
jo
push
add
add
andl
mov
add
or
push
and
shlb
gs
jge
pop
sub
je
sbb
push
jne
pop
in
lds
andps
lds
jae
mov
mov
cmovl
inc
xor
push
push
popa
loope
movl
mov
out
sarb
jnp
push
out
std
xor
cmpsl
fdivr
and
add
xor
fbstp
or
mov
fiaddl
sarb
in
call
sub
sbb
insb
cmp
bound
out
mov
in
movsl
jmp
ja
in
mov
div
sbb
jle
push
or
xchg
xor
cmc
mov
cmp
lock
sbb
movsl
xchg
insl
jge
or
outsb
jg
daa
xchg
dec
lock
outsl
mov
fimuls
xchg
dec
rcrb
daa
mov
mov
lds
movsl
movsl
or
int
fnstsw
mov
aaa
cmp
call
ds
aas
push
outsl
int3
loop
mov
mov
xor
clc
cmp
jo
dec
xor
xchg
les
cmp
mov
hlt
fildl
cltd
in
jmp
jns
pusha
add
ret
test
clc
out
fcomp
push
mov
scas
scas
or
inc
stos
xor
popa
dec
ljmp
rorb
add
movsb
fildll
pop
mov
mov
iret
rclb
cmpsl
add
sub
mov
fs
ret
std
xchg
orl
repnz
jg
or
enter
add
aas
mov
out
pop
sbb
lock
bnd
inc
xchg
popa
pcmpgtw
iret
call
xchg
fidivl
add
enter
movsl
sub
mov
push
scas
pop
sbb
cwtl
pushl
mov
mov
daa
js
xchg
and
cmpsl
sbb
scas
scas
imul
and
fxtract
lret
and
adc
jp
or
das
xchg
mov
mov
xor
and
mov
mov
mov
scas
stos
enter
jp
int
mov
add
pop
mov
iret
sahf
cltd
ret
enter
arpl
popa
sarl
or
jmp
pushf
stc
pop
pop
xchg
test
and
mov
and
cmp
mov
ds
movsb
pusha
shr
in
lock
scas
xlat
xor
test
aam
movsl
pushf
xlat
jo
jp
xor
mov
mov
and
sub
inc
lret
ja
pop
mov
cli
dec
push
aam
and
lahf
daa
cs
mov
cmp
inc
xor
pop
jnp
scas
lret
lock
mov
xchg
xor
dec
pushf
push
ret
dec
scas
call
mov
lcall
loopne
jb
dec
cmp
jg
xchg
js
lret
jae
push
cmp
and
sbb
out
push
lods
pop
xchg
add
aaa
pop
lret
dec
leave
rclb
enter
xchg
fisttpll
sub
sbb
repz
ss
and
and
mov
jle
push
aad
xchg
pop
mov
scas
test
adc
daa
dec
loopne
repz
xor
xchg
cmpsl
xchg
adc
icebp
imul
mov
sub
outsb
pop
das
or
pop
inc
clc
push
jno
xchg
jb
fstl
push
rcrl
pop
leave
inc
and
mov
aas
sbb
jge
adc
adc
ret
push
mov
imul
decb
pop
sub
stc
cmp
lods
dec
icebp
push
push
out
flds
dec
pop
mov
push
mov
pop
xlat
aam
sub
movsb
push
lret
sbb
fs
cmp
mov
jle
or
fldt
dec
stos
push
mov
add
orl
ja
shrl
sbb
mov
pop
in
pop
leave
dec
sub
lods
dec
loopne
lods
xchg
adc
movsl
or
inc
mov
js
test
inc
lcall
in
clc
repz
sti
pop
aam
mov
aam
cmp
int3
jae
cmp
jbe
push
testb
or
pop
mov
dec
pop
cmp
push
jno
negb
loope
inc
sbb
arpl
xor
cmp
ss
aam
mov
xor
cmp
add
fisttpl
mov
xchg
sbb
adc
add
ljmp
push
lcall
fmul
shr
pop
inc
jno
push
cli
daa
xlat
js
jae
ds
jno
fmul
out
into
adc
ss
nop
lcall
sub
sarb
add
aaa
and
outsb
in
test
test
adc
dec
shrl
in
inc
test
add
das
insl
fists
add
mov
repnz
xor
je
loopne
sbb
popa
std
mov
mov
xchg
and
pop
nop
movsl
movsl
pop
add
xor
push
mov
inc
fldl
jle
push
mov
inc
push
lret
sbb
inc
ss
or
mov
jb
shrl
popf
test
sbb
test
rcl
or
outsl
rcll
das
mov
jns
mov
insb
orl
lret
adc
movsl
imull
dec
arpl
jle
push
and
cmp
ja
das
mov
and
and
aad
imull
push
mov
inc
push
inc
negb
mov
andl
stc
lcall
add
sub
pop
cmp
pop
jbe
fistpl
sub
popf
or
lds
dec
fs
lahf
mov
scas
jp
cltd
les
sti
cmp
cmp
cmp
popa
adc
mov
inc
push
addr16
clc
mov
and
push
sbb
rcr
pop
mov
fcmovnu
lods
sahf
aam
ljmp
xlat
adc
cmpsl
scas
inc
adc
sub
clc
sub
ss
sub
add
push
sbb
sub
push
xor
cli
lods
jp
mov
mov
jb
dec
add
push
sbb
add
mov
cmpsl
loopne
or
xchg
mov
hlt
jmp
pop
dec
ret
bound
aas
mov
sub
out
xchg
in
add
dec
and
mov
ss
sbb
mov
push
or
mov
sub
std
clc
aas
sarb
fidivs
dec
cmp
add
pop
mov
aas
lds
sub
lods
xchg
sub
sbb
jle
in
js
loop
lret
xchg
clc
push
in
sahf
imul
mov
in
fidivs
or
test
adc
addr16
stc
cmp
stos
cmp
adc
cmp
mov
push
xchg
dec
aaa
sbb
pusha
adc
inc
cmp
insb
loope
rcrb
out
pop
cmpsb
dec
test
popf
jge
jg
mov
push
push
or
cmpsb
jg
aaa
loope
test
adc
sbb
mov
out
xor
stos
mull
cmp
popf
mov
shl
push
jo
into
repnz
jecxz
mov
jmp
pop
inc
rcll
push
xor
rcrl
pop
jmp
pop
mov
insb
ret
call
in
jnp
ja
ja
cmp
out
dec
in
cmp
insl
dec
scas
repnz
cltd
negl
icebp
ljmp
push
int
aaa
lock
mov
add
dec
sbbb
lcall
push
and
push
mov
inc
jbe
mov
push
and
jb
andb
sahf
jecxz
lods
mov
sub
inc
inc
sub
fs
push
ja
dec
icebp
or
leave
lahf
adc
mov
cli
les
addr16
push
adc
mov
dec
mov
mov
aad
ud0
sti
fisubl
xchg
mov
pop
jecxz
repnz
scas
mov
subb
adc
add
and
jl
sbbl
lods
ss
lcall
sbb
or
cmp
add
cmpsl
and
xchg
sahf
mov
inc
mov
movl
jno
mov
dec
out
mov
ret
iret
imul
sti
mov
rcll
rcrl
in
pop
out
cmp
inc
stc
pop
xchg
pop
popa
jne
inc
call
rol
adc
test
cld
push
lea
cs
rolb
rcr
jge
push
lds
arpl
mov
xchg
inc
mov
xchg
and
pop
lahf
fwait
push
ret
and
shlb
popf
add
lock
push
pop
leave
hlt
jmp
jl
inc
test
fstpt
pop
adc
cmp
cmp
popf
data16
mov
adc
fdivs
inc
xchg
scas
out
pop
pop
cmp
sbb
icebp
fs
ja
stos
cmc
in
std
and
adc
jns
cmp
dec
dec
dec
mov
repz
inc
jge
inc
lcall
inc
push
dec
push
jno
mov
data16
pop
sbb
sarl
clc
add
or
aad
outsb
stos
imul
jge
mov
xchg
stos
mov
leave
add
push
mov
pop
inc
cmp
fidivl
cli
inc
add
adc
or
push
cmp
xchg
or
cmpb
ss
fcom
pop
cmp
lock
xor
loop
cs
cld
push
out
pop
and
mov
movsl
cmpsl
or
sub
xlat
cmovae
iret
push
mov
ja
rorl
fwait
dec
fwait
insb
pop
dec
mov
js
cmp
mov
xchg
push
repz
mov
inc
insl
and
xchg
jg
loope
mov
xchg
xor
cmpsb
jno
rorb
out
int
or
cmc
cvtps2pd
mov
pop
mov
cmp
shrl
mov
push
and
mov
inc
sahf
ss
sbb
setg
insb
pop
sub
push
pop
pushf
xchg
nop
cltd
sbb
sub
sub
dec
or
sti
or
mov
add
shll
or
push
shlb
je
xlat
daa
cmp
hlt
fstpt
idivl
xor
popa
push
cmp
pop
jmp
fcoms
repnz
mov
inc
mov
mov
aaa
mov
fcoml
jmp
dec
pop
pop
insl
aam
mov
ret
and
xchg
ffree
rcrb
faddl
sahf
pop
jp
ljmp
sbb
mov
push
jns
add
out
stos
pop
dec
push
xchg
movsl
and
mov
notl
ljmp
loop
mov
fisttpll
push
xor
pop
insl
fwait
popa
popa
shr
stc
mov
jp
ss
sbb
popa
xorb
sbb
fidivrl
faddl
xchg
push
or
iret
pusha
insl
nop
mov
stc
jbe
scas
std
jbe
dec
orb
sbb
in
mov
pop
mov
popa
repnz
xor
lret
inc
loopne
inc
std
je
jne
mov
cmpsl
call
std
xchg
test
add
mov
dec
and
pop
add
mov
sbb
test
xor
push
jp
inc
cmpsl
ja
dec
fidivs
stc
mov
mov
sub
enter
repnz
std
je
cmc
and
jmp
jp
jne
lret
roll
pop
out
orb
add
jmp
roll
cmp
rcll
divl
and
jne
test
lods
sbb
fisttpll
call
adc
xor
sub
push
out
adc
aaa
iret
cmp
cmpsb
aad
or
add
mov
arpl
xor
rcrl
aas
imul
out
sti
jnp
mov
daa
mov
sarb
xor
hlt
add
imul
mov
call
push
sub
or
stos
scas
mov
xchg
ret
pushf
inc
lret
inc
imul
loope
pop
in
jecxz
push
cmpsl
fidivl
dec
jae
fsubrs
pop
mov
and
mov
mov
addr16
movl
out
bound
cmp
scas
sbb
mov
jecxz
mov
and
cltd
lret
xchg
lods
notl
cmc
into
add
pop
data16
sbb
pop
lahf
inc
sub
add
pop
cltd
int
adc
icebp
push
sbb
dec
and
je
cmp
rol
dec
and
mov
stos
les
ret
add
popa
inc
pop
or
lcall
test
dec
dec
cmp
add
push
mov
sti
in
arpl
xlat
insb
sub
and
mov
mov
push
adc
and
and
sub
pusha
mov
cmp
lcall
lods
mov
pop
push
inc
movsb
adc
sbb
testl
lods
adc
jo
mov
and
inc
loopne
in
inc
out
addr16
mov
mov
jo
in
fld
jmp
inc
cmp
test
cmp
mov
arpl
push
sbbb
mov
push
xchg
sbb
xor
sub
sti
not
jns
imul
dec
or
pop
rclb
pop
outsl
lods
bound
mov
jg
push
repnz
jbe
adc
fwait
jg
adc
sarb
loopne
je
into
add
jns
jp
addr16
push
sahf
jbe
fs
cmp
daa
in
mov
outsb
mov
jle
dec
int3
fnstcw
xchg
dec
and
sbb
mov
mov
popa
mov
iret
pop
push
inc
and
push
inc
mov
xchg
xor
gs
out
loopne
push
push
int
jge
pop
dec
repz
add
inc
ss
mov
jg
push
mov
bnd
sbb
mov
jbe
cmpsb
loopne
clc
push
cmp
icebp
lcall
sti
dec
fisttpl
cmpsb
jb
pop
arpl
xor
ss
add
and
aad
adc
and
jle
js
movsb
jb
inc
aam
test
xor
imul
popf
xor
das
pop
push
rolb
shl
repnz
lret
lret
std
test
inc
dec
mov
inc
mov
bound
mov
xorl
inc
pop
fstps
mov
inc
mov
xor
andb
and
cli
in
lret
add
xchg
and
cmpsb
out
jp
xor
clc
xor
je
or
stos
fsubrl
out
push
fcoms
bndldx
add
std
cli
leave
out
push
rcll
dec
call
push
xchg
jmp
push
xor
add
adc
notb
or
sbb
mov
cs
or
mov
dec
adc
in
les
insl
and
push
xchg
mov
pushf
mov
jmp
push
ret
xchg
mov
push
pushf
ret
cmc
cltd
mov
mov
arpl
rcrb
lcall
dec
inc
sar
pop
call
sahf
jmp
inc
pop
xor
push
push
fmull
sti
adc
jo
fdivr
fwait
inc
jl
xchg
xor
jmp
jns
dec
mov
int
cmp
or
fcmovnbe
sahf
sbb
jmp
and
or
notb
push
shll
pop
push
aam
cld
push
inc
in
inc
rcr
movd
pop
addr16
push
sbb
pop
stos
out
add
mov
cmpsb
test
pop
lret
cli
and
stc
int
in
loop
sub
and
outsl
dec
fwait
ljmp
mov
ja
test
shrb
xchg
push
mov
in
dec
mov
fnsave
sbb
and
push
shl
jns
xor
aad
jns
aaa
push
or
orb
mov
dec
in
push
sbb
dec
pop
push
pop
rol
movb
adcb
xchg
das
inc
movsl
cmp
mov
fdivs
call
notb
rcrl
lock
or
pushf
and
pop
insb
sti
xor
pushw
or
int
adc
lea
test
xchg
mov
xlat
mov
loope
int
out
lods
in
add
in
cmp
or
mov
xchg
loopne
jl
mov
xlat
loop
ret
imulb
shrl
push
or
and
mov
and
add
jnp
jge
and
jle
cmpsl
mov
bound
xchg
mov
fistl
sbb
out
aam
in
xorl
test
lret
mov
pop
movq
mov
cmp
add
shl
ret
jle
test
repnz
ss
push
mov
dec
inc
imul
push
push
xor
jp
mov
cld
inc
cmpsb
xchg
jmp
jno
cmp
jl
daa
or
jge
pop
lret
or
sar
icebp
popa
shlb
and
add
gs
jle
fstp
add
push
mov
sti
pop
test
data16
pop
mov
enter
lahf
dec
cli
mov
arpl
ja
in
subl
adc
insb
dec
push
enter
xor
popa
sub
dec
data16
push
outsl
int3
cmc
push
int
add
xchg
mov
lods
aam
fistps
lods
in
ret
pop
mov
xchg
aas
jnp
xor
lods
push
xchg
fmulp
push
sarb
jg
cli
adc
loope
rol
pop
xor
shr
ja
mov
xchg
xchg
test
shrl
ret
and
nop
stos
call
mov
call
fadd
jnp
pusha
or
enter
jmp
popf
test
lret
adc
and
dec
jg
mov
mov
sub
push
idiv
inc
xchg
sbbl
es
cmpsl
pop
inc
icebp
pop
adc
jbe
push
aaa
lret
add
xchg
cmpsb
cmp
xchg
sbb
adcl
lock
pop
pmullw
ffree
orb
gs
and
ffreep
mov
adc
sbb
mov
int
popf
cli
push
loopne
push
stos
mov
cli
push
jae
push
mov
call
push
xchg
cmp
cltd
inc
fwait
add
pop
push
jnp
cs
mov
sahf
repz
or
xor
int
mov
xor
or
xor
sbb
jbe
and
pop
and
mov
loop
dec
bound
jbe
mov
imulb
dec
xchg
aas
js
mov
lods
mov
inc
sub
test
aad
cmc
scas
inc
dec
repnz
mov
push
xorl
or
inc
mov
lret
jmp
loopne
xchg
mov
fstpl
cmp
inc
seta
adc
popa
and
test
negl
cmp
in
sbb
and
loopne
jl
cmp
inc
jb
in
jecxz,pn
xchg
inc
adc
fs
push
push
add
push
aas
leave
or
movsl
jnp
mov
mov
pop
sub
cmp
pop
out
js
std
mov
movsl
push
xor
jg
add
test
fidivrl
mov
mov
jns
cmpsl
push
sarb
mov
test
jnp
sub
sub
and
call
rcr
sti
mov
push
fmull
push
lods
mov
xchg
ja
adc
fnstenv
mov
ss
aas
mov
and
pop
test
les
ret
xchg
shrl
mov
mov
pop
adc
mov
xor
sbbb
xchg
lret
mov
pop
mov
in
dec
push
adc
addr16
and
and
sub
hlt
fadd
xchg
sarb
aaa
cmp
xchg
or
bts
adc
xchg
xchg
cmp
repz
sub
scas
xorl
mov
cwtl
cmp
data16
loop
inc
push
imul
outsl
cmpsl
mov
outsl
mov
addr16
add
lea
cmp
subb
lahf
jbe
jnp
push
scas
mov
xlat
cwtl
xor
push
push
jbe
adc
sbb
pop
outsb
add
in
sarl
fwait
cli
dec
mul
cmp
clc
mov
rclb
xchg
mov
jno
fs
mov
mov
or
jle
scas
inc
scas
scas
add
jns
imul
insb
loopne
xchg
out
mov
dec
push
imul
aad
rcr
inc
into
push
sub
stos
aaa
mov
test
fcoml
mov
mov
jno
inc
aas
mov
popa
lret
xchg
xchg
adc
jmp
cmp
out
lret
arpl
iret
pop
mov
xchg
inc
xlat
jo
dec
rcr
jo
in
pop
xchg
pushf
imul
or
lods
popf
inc
add
stos
mov
stc
daa
xchg
int
mov
imul
fbld
outsb
xor
sbb
adc
shrl
mov
and
cli
scas
pop
ja
add
sbb
pop
xchg
mov
out
xchg
xor
sbb
shr
and
jl
push
dec
sbb
call
dec
aam
mov
mov
and
aas
dec
fisttpll
das
jb
inc
stos
andl
jg
clc
rcrb
adc
cmp
add
jne
pop
aad
rol
insl
notl
push
xor
aad
mov
mov
je,pt
scas
pop
xchg
sub
xchg
push
sub
mov
sub
ja
add
iret
xor
dec
mov
mov
cmpsl
adc
fs
pop
sahf
jne
xor
ret
inc
mov
cmpsb
dec
pop
mov
sahf
enter
dec
or
jecxz
mov
fisubrl
aas
xchg
icebp
stc
adc
mov
jmp
movsb
mov
xchg
fstl
pop
dec
rclb
push
iret
mov
jmp
stos
out
es
fistl
ret
mov
ja
xorb
icebp
je
lock
jg
pop
iret
and
push
fsubp
inc
inc
push
sahf
sbb
adc
lret
in
test
cli
outsl
lcall
dec
test
jle
mov
cmp
or
mov
andb
popf
mov
xor
lea
sbb
cmp
iret
shl
dec
loopne
sub
shlb
imul
orb
int
push
fdivrl
data16
scas
test
xchg
loope
xchg
pop
arpl
jg
mov
push
hlt
sbb
insl
jb
xor
or
and
icebp
loope
out
jns
xor
pop
aam
sub
push
out
clc
sub
enter
cli
pushf
pop
mov
rclb
pop
insb
data16
fildll
jmp
jbe
iret
inc
add
sub
push
push
xor
test
pop
cmp
cmp
ret
jbe
and
das
push
sub
xor
popf
push
xchg
push
daa
scas
dec
fmul
mov
adc
imul
mov
fcoms
adc
add
xor
loopne
bound
out
inc
arpl
popf
lcall
out
ljmp
lock
jp
mov
jo
cwtl
push
and
lods
jae
pusha
inc
ret
push
shrl
incl
push
or
jno
jnp
push
daa
and
xor
insl
test
mov
data16
repz
inc
lea
ret
pop
lahf
or
imul
stc
xor
fs
repz
imul
flds
cmpsl
ret
scas
inc
arpl
imul
dec
das
lods
mov
mov
in
insl
mov
jne
in
sbb
push
mov
xchg
mov
ljmp
aam
imul
cwtl
pop
adc
wrmsr
rclb
and
jge
lahf
loopne
lret
sbb
fistl
or
mov
jo
in
sbb
fdivr
or
xchg
xchg
or
movsb
add
outsb
fstps
jl
rorl
movsl
ljmp
mov
sti
lcall
pop
out
push
pop
add
ror
jl,pn
out
lahf
shll
inc
cmp
push
or
xchg
lea
jp
jo
movb
fucomip
in
cli
push
adc
mov
hlt
mov
out
shr
jno
jnp
push
or
jb
push
pop
call
fyl2x
push
dec
in
lds
adc
movsl
int3
jb
pushf
jb
lods
stc
jecxz
shll
cmp
fmul
decl
xchg
repnz
cld
mov
mov
sahf
fwait
sbb
dec
mov
xchg
ss
lahf
xor
cmp
mov
xor
in
repnz
sbb
or
scas
xor
fbstp
int
lock
lea
xlat
call
int3
xor
enter
into
daa
xchg
cmpl
mov
mov
int
and
cmpsb
leave
adc
out
push
xor
repnz
inc
sub
lock
sub
or
shlb
jbe
mov
mov
fidivl
lcall
pcmpgtd
das
pop
adc
push
push
mov
xlat
scas
lret
lods
xor
std
roll
xor
add
aas
les
fldt
ficompl
xchg
xor
pslld
gs
movsl
ficompl
dec
sub
bound
jo
jg
out
mov
lock
push
lods
jp
fsubrp
mov
ret
mov
mov
cltd
push
xlat
mov
out
pop
pushf
dec
in
push
cld
imul
inc
dec
mov
je
mov
pusha
sbb
fprem1
cmp
or
or
add
inc
out
mov
scas
int3
jo
ss
sbb
or
pop
sbbb
shl
mov
sbb
subb
out
mov
rclb
ret
pop
cmc
imul
incb
and
dec
pop
jno
sar
mov
mov
push
mov
sub
lds
clc
out
in
aad
mov
xorl
pusha
or
adcl
dec
mov
popa
dec
sbbb
push
negb
icebp
loope
out
push
out
hlt
mov
aam
test
out
xchg
rorb
mov
faddl
ficompl
mov
and
test
xchg
xor
in
loope
js
add
jnp
mov
insb
xor
mov
mov
mov
sbb
mov
addr16
mov
rorl
or
pop
dec
stc
into
xor
pop
mov
fistps
push
cmp
aas
stc
ret
inc
dec
push
loope
mov
lret
adc
push
add
sub
xchg
mov
inc
out
mov
jne
pop
cli
and
xor
adc
clts
mov
adcb
cli
jl
mov
push
andb
repz
push
icebp
mov
mov
subl
adc
divb
pop
xor
pop
sub
js
ss
and
jp
fstpl
pop
cmp
sbb
inc
lret
mov
pushf
mov
fnstcw
subb
cmpsl
adc
cwtl
cmpsl
dec
imul
mov
cld
xchg
mov
lock
test
ret
mov
jno
repz
jnp
sub
or
sbb
xchg
data16
addr16
jne
imul
push
inc
jbe
insl
pushf
aas
pop
enter
idivb
push
xor
jno
mov
xchg
into
mov
pop
inc
mov
sbb
sub
pop
cmp
mov
xchg
push
aad
mov
lds
or
jns
int
rolb
mov
inc
push
ds
pop
fs
push
addr16
mov
fists
lret
ss
testb
pop
rcrb
aaa
scas
addl
imul
xor
add
jo
xor
jp
jae
test
adc
inc
fiaddl
arpl
out
and
mov
jle
aaa
push
sbb
dec
repz
push
cmpsb
push
xchg
js
divb
adc
or
inc
mov
xchg
pop
or
lret
sbb
bound
sbb
jge
fadd
das
ret
cmp
lahf
outsb
imul
mov
aaa
dec
cli
popf
push
jne
dec
arpl
addb
mov
adc
xchg
mov
stos
sti
adc
shl
aad
mov
cmp
cmc
out
adc
cltd
loopne
push
push
ja
sbb
xorl
stos
int3
adc
in
sarl
jl
ja
decl
jo
push
dec
or
pop
scas
test
jne
sti
sub
inc
mull
or
cmpb
cmp
mov
cmovb
loop
arpl
mov
scas
repnz
or
cld
dec
aas
and
sub
push
xor
xchg
icebp
add
dec
push
data16
add
mov
pop
jne
sbb
push
jg
push
xchg
repnz
xchg
scas
test
dec
mov
xchg
add
inc
cli
pop
loope
outsb
push
push
add
int3
mov
and
loop
xor
jl
test
popa
mov
or
sub
cli
adc
cmp
testb
cmp
inc
faddl
fimull
jg
cwtl
ja
aam
push
dec
lret
and
in
sub
fldcw
lock
add
xchg
fistpl
mov
leave
inc
das
int
inc
mov
cli
rcl
shlb
mov
inc
push
jo
or
sahf
loopne
aas
hlt
cmp
xor
mov
lcall
cmpsl
lds
add
pusha
es
ret
loope
push
mov
push
test
pop
outsl
cltd
jl
sbb
daa
ljmp
push
jle
add
int
fiaddl
pop
fcmovb
fidivrs
jbe
dec
mov
and
lahf
lds
sbb
or
mov
cmpsl
jne
adc
push
aaa
fwait
push
push
jns
cmp
jecxz
insb
lahf
jne
dec
pop
sbb
push
jnp
imul
lds
je
sbb
jno
fcompl
pusha
aam
or
jg
mov
add
cmp
std
es
aam
loopne
jb
mov
test
dec
push
lea
and
daa
jo
inc
fsubr
gs
lret
repnz
dec
xchg
cs
adc
xchg
jl
test
xor
aam
nop
fwait
xor
lods
dec
loopne
jo
imul
inc
aaa
sub
decb
cmp
daa
pop
aaa
push
and
pusha
movsb
adc
out
pop
fidivs
push
cltd
jmp
adc
mov
dec
cs
js
insl
call
adc
and
ds
and
sub
adc
adc
insl
in
push
and
dec
shll
movd
push
jecxz
add
arpl
or
fwait
push
jp
push
enter
xor
shll
jnp
sti
add
mov
adc
aas
pusha
push
pop
jmp
inc
leave
mov
ds
sbb
sbb
cmpsb
stos
xchg
leave
test
cmp
lds
in
in
addr16
and
push
lock
sbbl
ss
stc
adc
pop
fwait
mov
mov
hlt
mov
mov
imul
jbe
imul
push
jle
xchg
push
jle
mov
mov
inc
mov
iret
int
mov
jnp
adc
pop
dec
mov
divl
and
inc
mov
test
outsb
sbb
push
fistpll
pop
xchg
lods
pop
hlt
int
jne
mov
aam
rcll
lret
aas
mov
jmp
lods
inc
cmpsb
cltd
adc
xchg
adc
shrl
frstor
fldt
js
rcrl
outsb
cwtl
pop
fidivl
dec
xchg
fwait
mov
repz
aas
decb
push
mov
repnz
pushf
sbb
jmp
add
jae
repz
loopne
test
in
clc
pop
fsubs
sub
push
int3
inc
orl
mov
faddl
pop
inc
hlt
cwtl
stos
inc
cwtl
mov
jle
pop
insb
aas
fsubp
mov
jb
mov
mov
mov
subb
ret
adc
loop
mov
cmp
mov
addr16
xchg
push
jno
mov
fs
dec
filds
adcb
das
mov
cmp
and
cmp
and
adc
dec
int
lods
lods
test
pushf
sub
xor
testl
pushf
aaa
sbb
int3
push
pushf
in
icebp
dec
in
icebp
xchg
lcall
mov
int
enter
pusha
xchg
mov
mov
sub
movl
subb
pop
imulb
out
push
pop
adc
das
js
fsubrs
dec
push
addr16
pop
fmul
push
cmp
inc
sti
inc
lds
addr16
stc
out
dec
sub
cs
daa
xor
and
cltd
xchg
imul
lcall
or
ljmp
inc
xlat
mov
fsubrp
xor
mov
sbb
jbe
inc
out
sub
push
add
push
ljmp
push
lret
daa
inc
icebp
sbb
pusha
cmovs
stc
iret
inc
lods
sbb
mov
inc
sbb
jge
lret
cmp
popa
sub
cmp
stc
xchg
pop
mov
xor
push
ret
out
lahf
xchg
push
and
mov
stos
popf
inc
push
pop
cmp
movsb
out
push
call
lret
fbld
dec
cmp
sub
cld
mov
adc
mov
out
xchg
pusha
or
pop
popa
das
cmp
shll
mov
test
push
dec
mov
pextrw
jp
inc
xchg
jecxz
mov
rcll
sbb
lret
jmp
out
in
dec
lods
hlt
scas
stc
lret
shl
hlt
out
int3
or
xchg
pop
arpl
jns
fwait
xor
push
push
mulb
mov
bound
adc
sub
lock
inc
popf
sbb
out
jg
push
aas
les
movsl
scas
inc
rorb
fwait
lret
fwait
test
mov
pop
mov
scas
xor
icebp
jne
in
arpl
add
in
fistps
fcoms
das
sbb
imul
xchg
imul
stos
popa
sti
mov
push
filds
pop
repnz
mov
lock
xor
das
fnstcw
jbe
lret
fst
loopne
cmc
pop
jge
addr16
inc
lcall
mov
shl
nop
inc
sbb
insb
mov
out
xchg
sub
fwait
or
mov
mov
fisttpll
sbb
xor
lahf
fsubrs
mov
and
jne
call
xor
xor
arpl
push
pop
or
orb
cmp
shr
sbb
or
cmpsl
fnstsw
dec
or
in
pop
das
inc
adc
add
pop
out
icebp
jg
mov
mov
xchg
push
mov
jge
sbb
inc
idivb
aas
test
mov
test
cmp
inc
push
adc
jb
into
jmp
add
sbb
fcmovnb
pop
fiadds
or
mov
adc
sub
shll
inc
push
ljmp
pop
sbb
adc
push
mov
sbb
sub
mov
insb
and
lret
jl
or
jbe
aas
jno
adc
test
sub
xor
mov
push
mov
sbb
or
filds
cmpsb
jns
mov
mov
xor
dec
xchg
cmc
xchg
sbb
dec
pop
cs
lock
xchg
or
mov
outsb
leave
rcll
jns
cs
scas
scas
insl
dec
lods
cmp
jne
mov
or
out
pop
mov
pop
pop
fwait
mov
push
sahf
aad
iret
jmp
testl
out
rorb
adc
negl
cmp
cli
out
out
subb
scas
jae
inc
cmpsl
mov
inc
sbb
push
cmpl
inc
pusha
dec
sub
or
pop
mov
bound
mov
ret
js
clc
push
and
das
jmp
icebp
pop
mov
and
jecxz
push
mov
insl
test
inc
ds
xor
in
imul
movsb
push
xor
mov
cmp
push
mov
mov
pop
push
roll
lahf
mov
loopne
sti
je
outsb
xchg
xor
inc
jns
pop
pop
adc
lock
dec
lahf
lret
fisubrl
in
mov
out
lcall
out
mov
sbb
stos
or
imul
push
sbb
jo
sub
push
fldl
sub
dec
iret
je
pop
cmc
and
rcl
push
xor
cmpsb
rclb
das
pop
adc
xchg
sub
xor
adc
xor
xor
dec
dec
push
dec
mov
loopne
ss
inc
dec
mov
xchg
jo
mov
jae
adc
sub
sub
jno
inc
sub
add
add
mov
push
xchg
mov
pop
dec
inc
add
xor
ret
xchg
push
nop
inc
sub
out
inc
lret
sub
mov
inc
into
lret
cmp
gs
pushl
aaa
mov
adc
mov
mov
push
mov
ss
icebp
sbb
loopne
fstpt
and
ja
dec
sub
icebp
test
mov
movsb
xor
add
xor
out
mov
push
stos
fcmove
mov
loopne
mov
imul
popa
jge
xchg
data16
int3
pop
and
scas
pop
in
clc
leave
xchg
outsb
test
mov
push
gs
loope
mov
je
dec
lods
add
mov
sbb
push
and
jns
pop
inc
xchg
pusha
insl
inc
mov
add
dec
sbb
mov
outsb
movsl
pusha
popf
xchg
pushf
pop
imul
and
xchg
aad
sub
int3
mov
jo
ljmp
mov
xor
xor
xchg
sbb
mov
sarb
rclb
xchg
decb
ljmp
pop
inc
imul
data16
jg
and
mov
popf
mov
jne
pop
stos
cli
shll
ficompl
ficompl
push
call
sbb
mov
jbe
or
xlat
push
mov
cmp
sbb
jl
lds
negl
jns
jno
fmuls
jb
sbb
add
xor
arpl
inc
adc
je
dec
xor
or
mov
imul
pop
xor
das
and
mov
out
sbb
jl
into
out
es
pop
ja
sub
repnz
jo
bnd
loope
push
sar
dec
sbb
jmp
je
in
add
mov
sbb
or
dec
lods
lods
std
mov
and
stos
cwtl
sahf
aas
or
shlb
mov
lods
jecxz
pop
int3
dec
add
add
filds
stos
hlt
or
pop
test
adcl
push
imul
in
sbb
je
gs
sbb
adc
pop
push
jle
dec
xlat
add
cltd
cmp
pop
add
fisttpll
xchg
mov
insl
mov
rolb
sbb
xorb
movsl
std
je
xor
or
movsb
in
mov
fs
jo
bound
mov
mov
scas
sub
jmp
cmp
or
loopne
icebp
mov
pushf
jbe
into
mov
push
cmp
cmc
call
ljmp
mov
inc
push
je
into
inc
mov
mov
cmp
enter
and
cmp
in
scas
shr
ds
sbb
lods
cmp
push
bound
call
sahf
nop
mov
or
mov
jb
sahf
adc
aas
adc
sbb
ret
scas
cmp
sub
icebp
loope
imulb
movl
jge
cmp
pop
ss
into
gs
ret
adcb
enter
pushf
fiaddl
jo
js
out
inc
mov
scas
fisubrl
jbe
or
idivl
cmp
sbb
andb
es
pushf
push
rol
inc
adc
jne
dec
loope
dec
xchg
cmp
std
cmp
popa
idiv
mov
js
int
adc
fldenv
test
icebp
lret
arpl
rolb
mov
pop
push
in
adcb
jns
xchg
cmc
or
popa
fiaddl
cmp
in
xor
sarl
push
xor
pop
orl
jp
test
scas
lcall
pusha
inc
mov
lret
dec
cs
icebp
mov
push
push
push
icebp
mov
lret
sub
shlb
inc
ficoms
lock
in
dec
mov
pop
dec
or
pop
aam
test
popa
mov
cmp
js
lods
loopne
subb
pop
pusha
insl
mov
adc
rclb
cmc
sub
stos
fnsave
lods
mov
mov
sbb
add
jl
icebp
jbe
lods
xorb
jno
mov
negb
mov
or
dec
mov
lock
xchg
or
inc
mov
jno
mov
orb
push
inc
cli
out
push
dec
push
mov
insl
push
dec
pop
cmp
test
sub
add
mov
scas
xchg
aaa
outsl
sahf
xlat
mov
dec
iret
roll
pop
or
cmp
ljmp
jnp
mov
inc
mov
aam
faddp
mov
push
aad
jle
sbb
lods
insl
dec
sub
dec
mov
pushf
rclb
add
repnz
imul
xor
int3
sbbl
sbb
fdivrp
xor
cmp
cmpsl
mov
enter
jg
xor
xchg
in
sub
add
sbb
inc
or
jno
cmp
iret
sbb
test
xor
in
aam
mov
sub
xor
hlt
cmc
in
ret
popw
jne
repnz
test
xlat
call
cmp
mov
mov
ficoml
pushl
aaa
pop
cmpsl
xchg
pop
in
inc
jmp
xchg
mov
or
push
enter
fistpll
sbb
mov
mov
adc
test
xchg
xor
mov
dec
lods
xchg
push
sbbl
imul
rcr
xchg
xor
outsl
mov
ja
ljmp
and
mov
add
cmp
mov
adc
jno
int3
push
adc
jb
inc
push
jns
pop
imul
nop
sub
add
and
or
inc
pop
test
daa
or
mov
xlat
cmp
movsb
int
xor
pusha
inc
jp
fnstcw
jo
and
in
dec
xchg
stos
jle
shl
mov
dec
test
insl
scas
pop
jbe
push
loopne
loopne
scas
shrb
mov
rcrl
jp
and
rcrb
adc
out
fwait
pop
outsb
das
in
mov
mov
cmp
adc
or
and
inc
sbb
cmp
mov
xor
sbb
inc
and
jo
subl
jae
scas
xor
out
imul
mov
in
cmpl
mov
mov
stc
push
mov
adc
xor
mov
push
sti
mov
sbb
test
fsubp
push
xor
xor
pop
shrl
jne
imul
xchg
cmpb
sub
lahf
xchg
repnz
adc
jns
mov
mov
dec
test
and
xor
ljmp
sub
mov
push
sbb
push
mov
icebp
popa
pop
repnz
lahf
pop
loope
test
jecxz
mov
pop
popl
scas
mov
std
add
adc
xor
mov
or
ret
pop
dec
js
shrl
in
insl
jae
cs
notb
loopne
xchg
insb
imul
mov
mov
lock
loopne,pt
decb
sbb
inc
inc
adc
sbb
std
mov
xchg
adc
push
xchg
out
xor
loope
mov
push
inc
sub
in
ss
lds
push
cmp
and
add
cmp
mov
jecxz
fistpll
out
sbb
stos
xchg
rorl
out
out
pop
cli
mov
pop
pop
loopne
jno
pop
shr
out
popa
lret
bnd
jle
mov
pop
jns
mov
mov
clc
hlt
cmc
movsl
hlt
jns
jns
aad
adcb
lret
insl
mov
mov
loope
mov
push
scas
std
cs
mov
andl
pushf
fst
push
push
xchg
mov
ljmp
xchg
addr16
repnz
xchg
js
xchg
adc
jno
pushf
fcoml
and
flds
das
mov
and
test
and
mov
dec
test
push
sub
mov
dec
jnp
test
xchg
lret
mov
rclb
mov
xchg
and
addl
imul
push
loopne
xor
fdivp
aas
stos
fdiv
pop
dec
cmp
add
or
inc
push
cs
cs
jb
lock
sbb
push
xlat
add
int
loope
imul
ret
xchg
dec
mov
or
lahf
js
sub
ds
dec
ret
sub
mov
mov
inc
pop
and
add
imul
mov
rcr
jbe
cmpl
mov
jge
sti
sbb
out
cmp
or
lds
or
mov
pop
mov
jge
mov
sahf
dec
pop
fdivrp
xor
cld
jo
and
orb
out
int3
or
inc
cmovo
aad
fildl
sub
pop
insb
jmp
mov
idiv
xor
xchg
mov
mov
mov
add
mov
jo
dec
cmp
fists
pop
imul
mov
fldt
call
inc
mov
xchg
cmp
addr16
stos
jecxz
and
push
mov
dec
mov
dec
dec
movsb
lods
jge
pop
xlat
ljmp
xor
dec
lock
aam
scas
popa
and
mov
mov
sbb
ret
sbb
mov
nop
push
int
test
repz
cmc
mov
sub
fs
mov
out
out
fisttpl
cmc
fdivp
mov
rcrb
movsl
subl
outsl
mov
loop
fnsave
mov
aad
mov
pop
inc
push
outsb
out
mov
dec
out
mov
pop
push
cmpsb
addr16
and
push
data16
sbb
mov
push
xchg
mov
xor
repnz
jo
pop
lea
stc
push
mov
push
xchg
out
or
jmp
outsl
outsb
call
adc
data16
ret
push
cs
sub
mov
dec
adc
and
icebp
mov
sahf
xlat
mov
inc
push
imul
imul
sub
ljmp
xor
or
push
jmp
test
lret
jne
rcrl
pusha
shlb
out
dec
mov
repnz
xchg
js
jae
lcall
cmpsb
jne
mov
shll
cmp
popa
mov
cmp
ja
insb
cmovnp
sub
xchg
lods
jne
sub
iret
pop
mov
xchg
push
mov
sub
call
dec
mov
xor
push
clc
je
pop
jo
gs
mov
cltd
mov
mov
sbb
hlt
xor
sbb
mov
adc
fs
sbb
mov
cmp
mov
jecxz
popa
test
fimull
mov
sbbb
jp
cmp
mov
cmc
fucomi
stc
stos
in
lret
in
gs
ja
andl
fldenv
iret
je
mov
push
aad
inc
popa
icebp
dec
or
push
and
aaa
or
jecxz
cmpsb
xchg
test
xchg
xchg
push
and
inc
out
imul
out
stos
sti
pcmpeqb
dec
stos
push
fstpl
sub
sahf
insb
in
rcrl
lret
out
popa
int
push
inc
lods
cmpsl
xchg
sbb
cld
mov
cmp
es
pop
cld
push
or
mov
add
fs
cmp
nop
aam
test
fwait
xchg
int3
push
cmp
fs
or
loope
ljmp
pushf
inc
insb
dec
jo
cmpsb
cmp
movsb
fadds
movsb
addr16
push
cmp
aaa
movsl
pusha
xchg
loopne
jp
mov
aam
jp
inc
je
scas
xor
xor
fidivrl
cmp
sbb
pop
or
sub
stc
cmp
pop
cli
mov
mov
icebp
push
dec
les
jle
inc
push
jns
lea
stos
or
imul
adc
xchg
mov
icebp
nop
mov
mov
imul
cmp
sub
or
enter
jne
cmp
inc
fdivs
cli
and
aaa
push
les
arpl
and
pop
out
jmp
mov
push
rol
cmp
dec
lea
ret
jecxz
push
sbbl
mov
jnp
aad
sbb
jbe
cmp
xchg
cltd
jg
push
dec
aas
lret
js
jp
daa
sbb
adc
sahf
mov
out
imul
xchg
xor
std
push
inc
cli
in
mov
push
mov
mov
push
aaa
sbb
add
hlt
cwtl
jno
or
cs
test
and
test
dec
jg
outsb
or
loope
inc
mov
bound
sub
and
add
test
and
lods
fadd
stos
sub
xor
jp
mov
popf
ret
mov
cmp
pop
sbb
int
test
js
jge
clc
dec
and
aaa
xor
jmp
fmuls
sub
fsubrl
arpl
pushf
xor
es
clc
push
sub
sti
jae
cmp
dec
cmp
push
aad
iret
nop
inc
pop
inc
jecxz
jle
add
outsb
cmp
sub
pushf
dec
mov
ja
pushf
mov
lret
in
inc
adc
dec
inc
jp
mov
pusha
shlb
mov
pushl
and
clc
js
push
lds
and
mov
bnd
test
sub
pushf
je
scas
pushl
pop
xor
lcall
scas
test
hlt
or
push
add
mulb
call
cwtl
push
jbe
divb
imul
xchg
inc
movsl
loopne
lret
mov
sub
daa
adc
popa
jmp
addr16
add
mulb
loop
or
loop
lods
mov
xchg
gs
inc
sub
jnp
cmpsl
jge
cmp
jp
nop
sti
cmc
fs
xchg
mov
push
push
pop
sub
sub
sub
cmc
aam
arpl
mov
mov
inc
mov
aam
xor
jg
cmc
xchg
movsl
pop
add
sbb
pcmpgtd
loope
adc
inc
jp
in
add
addl
adc
fadds
push
add
stos
stos
fs
lock
in
xchg
adc
jbe
nop
shrl
jo
sub
pop
mov
push
popa
stc
xchg
pushl
jnp
lock
neg
mov
scas
sar
mov
shrl
js
sahf
popf
dec
cmp
fldcw
inc
xor
cmp
cmp
push
cmp
inc
xchg
and
lods
aaa
pop
rcrl
ss
std
inc
filds
mov
sub
mov
and
aam
test
sbb
loopne
pop
pop
enter
jno
pop
sbb
pop
sub
xchg
dec
jge
jo
out
jg
repz
xlat
cmpsb
pop
and
adc
das
icebp
pushf
jo
out
push
and
adc
in
sbb
sbb
adc
outsl
push
jnp
push
mov
shlb
xchg
dec
jg
cmp
imul
add
movsb
jp
pusha
mov
mov
cmpsl
dec
xlat
aam
add
jno
subl
cmp
pop
add
push
rclb
sub
iret
or
jnp
pop
jno
sub
cmpsb
pop
xchg
xchg
bound
addr16
cmp
shr
rorl
std
or
outsl
xchg
mov
cmc
lahf
dec
inc
inc
dec
aas
sub
sbb
daa
and
sub
cmp
adc
pop
sbb
adc
or
push
int
popa
xor
fstps
mov
xlat
and
call
filds
mov
adc
sub
addr16
xchg
int
push
xlat
adc
mov
repnz
mov
mov
flds
sti
lock
enter
outsb
pop
inc
in
jge
rcrb
es
mov
mov
cmp
jp
inc
mov
test
icebp
lock
orl
out
inc
fdivs
ds
adc
std
lds
xlat
xor
mov
addb
stos
fnsave
push
rcl
jae
push
jae
loop
popa
int3
cmp
stos
in
mov
imul
pusha
lret
jle
push
icebp
fisttpl
pop
xor
adc
xchg
loop
movsl
lret
into
mov
xor
pusha
xor
or
and
xchg
mov
outsb
pop
data16
fistl
xchg
dec
push
mov
xchg
lock
mov
cltd
lods
repnz
dec
jp
shlb
aam
pop
pop
rorb
dec
in
or
mov
mov
xchg
xor
mov
mov
call
push
es
xor
mov
lcall
or
xchg
lea
xor
push
cmc
xor
dec
les
stos
in
mov
imul
test
in
iret
cmp
xor
loopne
adc
mov
cld
in
mov
movsb
inc
int3
pushf
cli
fdivrp
int
sbb
sbb
xchg
jle
adc
aad
jnp
rcrb
push
fcomps
push
test
mov
and
in
mov
mov
into
jp
push
mov
mov
es
jbe
mov
push
mov
mov
xor
sbb
xchg
out
add
adc
stos
pop
int3
lea
out
jbe
ja
xor
xchg
pop
xchg
shll
shrl
mov
fs
jb
mov
pop
adc
call
mov
and
pop
dec
jne
xor
loopne
rorb
lret
xor
mov
dec
cs
sbb
jbe
fimull
mov
je
xor
aam
dec
int
call
lds
mov
stc
test
int
mov
repnz
ret
in
dec
mov
dec
stc
mov
movsl
cmp
pop
and
jp
mov
mov
pop
push
movsb
and
dec
jg
and
jmp
stos
test
dec
dec
mov
lock
imul
aad
repnz
jno
pop
mov
sbb
mov
and
mov
sahf
sub
xchg
imul
sbb
inc
push
push
cmpsl
or
in
aas
fidivrs
imul
or
push
test
pop
adc
push
mov
dec
cmp
pop
jecxz
xchg
sbbb
xchg
add
cmp
add
lahf
dec
ja
aaa
mov
mov
leave
pop
das
mov
xor
lock
push
sub
out
stos
jle
dec
mov
sbb
lret
dec
xchg
aad
fsubrl
ret
jmp
jmp
dec
fwait
inc
jle
cmpsb
mov
fidivl
nop
testl
and
movsl
xchg
stos
add
adc
pusha
jmp
enter
call
aas
insb
fimull
xchg
push
fistps
pop
adc
add
dec
sbb
sbb
loopne
mov
add
jp
mov
punpckldq
or
jne
sub
fs
shlb
mov
rorb
pop
xlat
adc
jge
out
leave
jp
cmpsb
add
cmp
sbb
bound
or
popl
in
mov
push
test
pop
mov
add
lea
inc
pop
jns
pop
arpl
pusha
cmp
push
shrl
push
adc
scas
cmc
pop
in
add
out
sbb
fs
xchg
leave
mov
repnz
ljmp
repz
mov
jnp
scas
cmpb
loop
or
or
fsubs
inc
xor
dec
adc
push
jp
pop
jecxz
fistl
xchg
clc
sub
ljmp
lret
das
xchg
or
ror
fldt
xchg
js
xor
addr16
fs
dec
dec
outsb
fmuls
sti
xorb
imul
fs
pop
and
out
in
cmpsb
dec
scas
cltd
push
mov
idivb
es
or
call
into
adc
dec
testl
aad
in
ficoml
mov
pop
das
xchg
sub
daa
fsubrs
jecxz
adc
or
test
sub
jno
or
adc
xor
ss
pop
and
fstpl
icebp
dec
pushl
cmp
dec
xor
inc
shll
das
andl
xorl
pop
scas
and
js
xchg
inc
sub
sub
dec
stos
jb
jmp
pop
stos
aam
sub
push
divl
mov
jmp
sbb
xchg
je
dec
jp
lock
push
jge
in
push
dec
xchg
leave
bnd
cmp
or
insl
icebp
push
das
in
pop
lahf
mov
or
ja
push
rcl
or
xor
and
iret
push
adc
icebp
jl,pt
dec
jl
jae
mov
jo
call
mov
fld
sahf
addr16
and
repz
lahf
xor
mov
dec
pushf
fld
xor
int
pop
mov
pop
inc
dec
js
push
mov
and
push
push
out
sub
das
push
jnp
imul
xlat
repnz
ficomps
xor
jle
sti
mov
mov
mov
ss
cmp
into
popa
mov
loopne
fadds
or
cmp
or
sub
fcomps
daa
lcall
fdivrs
lahf
cmp
mov
cs
xor
fs
pop
ja
sub
add
mov
push
mov
mov
xchg
or
scas
xor
fnstsw
jg
test
dec
hlt
in
dec
inc
jmp
leave
push
inc
dec
aaa
out
iret
sub
mov
out
enter
repz
pop
mov
dec
cltd
inc
mov
ja
nop
loop
lods
adc
jle
or
aas
ret
mov
mov
aas
push
jo
cmp
dec
pop
mov
mov
push
mov
test
sbb
mov
pop
loope
mov
std
cltd
jp
push
nop
divw
xor
sarl
icebp
xchg
jae
sbb
and
roll
push
stos
and
jns
xlat
mov
xchg
mov
push
aas
pop
pop
and
pop
sarl
outsb
fdivl
mov
xor
sub
ja
mov
mov
subb
fcmovu
lret
xor
repz
icebp
fisubrl
nop
rorb
dec
je
in
jbe
push
insl
or
mov
mov
pop
jmp
das
stc
fbstp
fldcw
mov
push
inc
fcompl
insl
xchg
inc
test
testb
push
mov
mov
mov
xchg
in
push
xor
adcb
test
cmpsl
xchg
pop
adc
imul
xorb
jbe
xchg
inc
cmpsb
in
call
push
jnp
pop
mov
inc
fsin
sti
test
fmuls
add
push
xchg
xchg
jp
int
push
int3
mov
sahf
lds
cmp
jne
stos
mov
cs
loopne
mov
popf
cmpsb
cli
mov
ret
daa
push
mov
add
pop
cmp
ja
push
aad
imul
cmp
cld
jmp
xchg
incb
aam
mov
xchg
out
loope
and
ds
push
rcll
cwtl
sbb
leave
arpl
inc
sarb
sub
adc
jle
mov
xchg
jl
std
pop
es
jno
fsub
or
xchg
and
stc
jns
inc
lods
ja
add
aaa
repz
nop
cwtl
adc
dec
mov
dec
mov
pushf
nop
mov
xor
ret
jmp
aam
jbe
shrl
lret
dec
ljmp
mov
inc
cmp
fcmove
mov
in
leave
cmp
ret
cmc
mov
jns
in
jno
in
loope
and
sub
pop
jl
fwait
popf
mov
int
std
jbe
in
shr
lock
adc
pop
mov
cmpsl
jle
test
or
fistpl
test
sub
jl
bswap
push
dec
xorb
loop
jnp
imulb
lods
add
pushl
sub
mov
sub
stos
daa
int3
xchg
fldcw
lahf
lret
xor
jle
fwait
sbb
xor
dec
sti
lret
xchg
addr16
mov
xchg
sbb
lret
adc
mov
ret
mov
lock
xor
out
fucomip
mov
inc
pop
inc
int3
in
imul
mov
push
inc
jecxz
imul
mov
mov
nop
ss
aad
dec
lock
sar
adc
mov
fnstsw
pop
add
or
xor
or
mov
stos
test
pop
lock
add
mov
insl
jg
push
xor
jp
jb
pop
inc
mov
lods
push
aam
sti
sahf
mov
test
shll
stos
cmp
test
bnd
mov
insb
mov
data16
bound
push
aad
insl
addr16
icebp
push
daa
stos
rolb
aaa
pop
ljmp
lods
cwtl
lock
or
pop
stos
loope
and
xchg
nop
xor
pop
out
push
inc
repz
jb
inc
repnz
jne
xchg
push
adc
lds
adc
push
xchg
aad
xchg
or
imul
int
mov
repz
int3
dec
add
in
lods
xchg
xor
sbb
mov
mov
subl
mov
inc
xchg
jne
aaa
es
add
dec
dec
fisubrs
mov
addr16
test
pushf
ror
jecxz
orl
fstpt
or
scas
lcall
pop
fidivrl
mov
les
pop
or
stc
push
mov
jecxz
dec
xchg
sub
sub
push
mov
xchg
in
ret
js
leave
divl
mov
das
mov
loope
push
movsb
aaa
dec
xchg
enter
mov
leave
lods
push
pusha
add
mov
mov
dec
cmpsb
int3
test
mov
push
mov
gs
cli
fwait
jns
sbb
cld
inc
repnz
cs
add
adcl
add
lret
cmc
push
out
mov
add
mov
lea
test
xor
rorl
loopne
pop
pop
pop
and
imul
aas
pop
xor
pop
add
inc
push
addb
cwtl
and
scas
fistpl
fisubs
flds
mov
and
lret
or
sbb
dec
movsb
add
pop
jb
and
repnz
cmp
into
mov
jo
insb
inc
jns
outsb
fneni(8087
and
or
test
data16
popa
jl
daa
shll
mov
sahf
icebp
mov
xchg
push
test
iret
nop
jmp
icebp
lcall
shlb
and
pop
fsubs
sbb
aad
xchg
loop
xchg
pop
outsl
clc
jl
insl
lcall
loope
adc
lds
sbb
push
xor
je
or
push
jno
out
pop
clc
inc
and
dec
sbbl
cmc
push
aas
inc
jno
cltd
ljmp
xchg
adcl
ljmp
test
pop
es
adc
cmc
in
lret
test
pop
scas
cmp
add
ficompl
cmp
mov
cltd
xchg
insb
cwtl
push
mov
mov
mov
push
push
fmuls
mov
fdivs
xchg
adc
cwtl
adcb
js
mov
push
mov
das
inc
push
xchg
add
and
es
mov
mov
out
add
mov
sub
aam
xchg
je
cs
popa
fildll
hlt
cmp
add
rclb
lods
mov
in
orl
cwtl
popa
ret
shl
enter
xchg
sbb
sahf
or
xchg
xchg
mov
or
ja
shll
iret
pop
lcall
cwtl
xchg
inc
les
dec
sub
cmpl
xchg
pusha
nop
stos
in
jg
push
push
push
xchg
loopne
cmc
rorl
inc
cmp
dec
xchg
jno
xor
cmp
adc
test
mov
and
mov
add
mov
dec
movsb
into
lcall
lret
mov
lret
bnd
out
scas
into
mov
movsb
inc
dec
lret
mov
shl
sub
xor
jbe
sbb
lret
lret
mov
sahf
pop
adc
imul
gs
xor
jno
movsb
notb
mov
adc
imul
push
insb
push
fs
notb
push
stos
mov
sti
fwait
adc
sbb
push
push
push
adc
dec
add
mov
xor
inc
scas
je
bound
inc
aam
fsubrs
hlt
repz
and
outsl
rorl
in
fnstcw
xorl
outsl
dec
add
stc
jo
rcll
ja
test
sub
pop
jge
xchg
bnd
clc
jno
push
cmp
movsb
cmp
add
ja
sub
fs
cs
add
add
xchg
in
and
or
outsl
out
lret
imul
movsb
mov
cmp
mov
jle
cmc
test
adc
sbb
and
cmc
jmp
xorb
or
cmp
ja
dec
xlat
cmp
mov
test
lods
adc
and
dec
ljmp
mov
jl
mov
inc
aam
push
ds
in
sbb
or
sahf
xor
into
dec
adc
xor
dec
lahf
popf
xchg
inc
push
aam
shlb
mov
cs
insl
stos
pop
sbb
sbb
fwait
sub
mov
ljmp
jb
pusha
icebp
pop
lods
lcall
add
xchg
mov
adc
in
dec
loopne
mov
xchg
mov
fidivrl
cwtl
out
mov
dec
popa
inc
pop
ret
dec
fidivs
iret
pop
jo
shl
fmull
xchg
aaa
mov
jp
mov
jnp
cld
sbb
dec
cli
lret
cs
ds
dec
cmp
push
pop
push
push
jbe
lcall
cmp
xchg
xchg
int
add
xor
dec
add
mov
or
test
pusha
jle
pop
aaa
pushf
daa
pop
push
dec
notl
jecxz
xchg
movl
adc
daa
sti
test
loopne
sar
pcmpeqd
test
jne
xlat
xchg
jl
es
dec
cli
xchg
lock
add
sbb
cmp
adc
add
test
mov
sahf
push
add
mov
sbb
jg
pop
ds
les
pop
sbb
mov
push
lret
cmpsb
and
mov
pop
pop
call
lods
inc
push
divb
cmp
fstpl
add
cli
inc
pusha
aas
loopne
mov
sti
xchg
mov
mov
pushf
push
cmp
sbb
std
add
xchg
addr16
mov
add
ss
leave
mov
out
mov
leave
jnp
fimuls
mov
loopne
repz
mov
mov
movsl
mov
or
adc
in
mov
and
inc
dec
sub
insb
fsubrl
sahf
and
mov
and
subl
pop
cmp
inc
and
rcrl
mov
ret
mov
mov
push
icebp
ret
fcomps
adc
mov
mov
mov
sub
lods
call
jmp
xchg
sbbb
cmc
jnp
lret
pop
xor
push
stc
ficompl
add
mov
push
and
or
adc
sbb
cld
ret
push
nop
adcl
xor
adc
lret
movsl
dec
bound
xchg
dec
add
jb
pop
jae
adc
xor
iret
cmovns
orl
roll
or
loopne
sbb
stos
xor
xchg
ficoms
xor
mov
lea
push
add
sub
inc
jb
std
lret
push
adcb
in
or
mov
jnp
mov
xchg
pusha
into
or
dec
sub
subb
or
push
inc
loopne,pn
into
and
fs
out
sbb
stos
push
add
inc
pop
fdivrs
pushl
mov
push
jno
adc
or
mov
into
mov
xor
push
outsl
add
loope
pop
int
shl
aam
test
shlb
cld
xchg
mov
mov
sbb
push
movsb
outsl
cs
dec
mov
xchg
js
mov
es
sub
je
pop
sbb
adc
imul
addr16
out
xchg
subb
adc
mov
sbb
iret
rol
insl
cli
ret
push
sub
loop
sub
dec
sub
push
out
push
xchg
cmp
cmp
fsubrl
cmp
sbb
and
mov
add
and
pop
dec
xchg
adc
dec
shrl
into
or
jnp
das
pop
sahf
mov
adc
jecxz
std
std
xchg
mov
sahf
pop
rcll
fwait
sahf
cmp
hlt
aas
adc
dec
pusha
lret
xlat
data16
add
test
add
mov
mov
mov
jne
stc
popf
out
xor
je
ljmp
adc
add
add
mov
insb
inc
pusha
lods
mov
jo
jbe
loopne
mov
es
gs
sub
add
xor
lods
push
push
test
mov
xchg
mov
sbb
insl
out
pop
jae
imul
cmp
cmp
cmp
adc
jno
rclb
in
call
adc
jecxz
or
aaa
jle
jmp
mov
enter
sub
pop
dec
mov
cmpsb
test
lods
add
pop
int
fstl
jbe
push
push
dec
pop
lahf
adc
int3
jecxz
sub
cmpsb
jge
repz
std
dec
xor
pusha
scas
sahf
xchg
add
jb
sub
into
mov
iret
mov
mov
jb
xchg
ljmp
nop
xorb
repz
mov
add
fstpl
arpl
push
sub
jno
jmp
add
jp
xchg
xorb
ret
xchg
insb
test
pop
and
push
mov
push
inc
jg
clc
mov
xor
jbe
fsubl
jno
add
push
ficompl
movl
or
mov
loop
fstl
dec
jmp
popf
test
dec
add
inc
jle
xlat
fisubs
popf
scas
pop
les
iret
pop
mov
mov
and
and
xchg
sub
addr16
imul
adc
data16
shll
ljmp
ror
addl
cmpb
dec
push
or
rolb
ret
inc
mov
jno
add
jo
add
lds
push
arpl
jecxz
out
lods
mov
jae
test
or
cmp
xchg
test
sbb
adc
pop
sub
mov
sub
jg
add
pop
adc
ss
outsl
add
icebp
movsl
adc
loope
test
mov
orl
pop
mov
lods
in
popa
inc
adc
mov
sbb
in
test
xchg
rcll
lods
inc
sbb
mov
mov
xchg
xchg
pop
mov
mov
aas
insl
push
pushf
fcoms
xlat
fisubrs
roll
outsl
xchg
cltd
push
xorl
test
mov
cltd
push
xchg
subb
mov
cltd
dec
jb
lock
jb
dec
inc
jecxz
cmp
pop
and
cld
out
fimuls
xor
outsb
addr16
aam
mov
test
pop
and
data16
dec
jl
sbb
push
loopne
mov
jne
int
cs
sub
in
lock
add
sub
rorb
fs
outsl
pop
dec
rorb
fsubr
push
push
bound
push
push
dec
mov
adc
mov
jge
sbb
test
jge
and
mov
sar
lea
push
mov
inc
xchg
mov
xchg
arpl
push
cld
out
aam
inc
xchg
add
mov
leave
mov
pop
popf
scas
call
shll
ror
cld
push
rolb
roll
xchg
ret
mov
sub
inc
adc
stos
mov
int3
pop
pop
push
jle
jne
cltd
lahf
sarl
jl
rclb
push
xor
int3
hlt
inc
mov
aad
jne
sti
lret
shll
jnp
or
test
mov
enter
inc
inc
inc
mov
xchg
imul
popa
sarl
add
push
xor
popf
insl
dec
and
loopne
jns
mov
pop
addb
jp
mov
sti
nop
arpl
jg
sub
clc
mov
std
fmull
mov
repnz
and
mov
xor
jecxz
lcall
out
and
pushf
dec
out
imul
inc
jecxz
mov
pop
xor
out
xor
fwait
mov
jle
movsl
stos
mov
mov
in
out
ljmp
push
repnz
stos
xchg
adc
mov
aad
out
shrl
fldenv
dec
push
lods
gs
and
hlt
stos
and
loop,pn
icebp
ja
shl
dec
sarl
aam
cmpl
insl
sub
enter
mov
imul
test
push
sub
call
jnp
mov
sbbl
jge
add
pop
mov
das
fs
fs
insb
add
cmpsb
jp,pn
mov
imul
push
ljmp
pop
leave
mov
insb
sub
movsb
dec
xchg
shrb
call
inc
daa
sub
mulb
jle
out
mov
callw
mov
stc
stc
and
and
sbb
mov
repz
out
mov
inc
jecxz
lods
and
pop
adcl
mov
aam
adc
popa
adc
callw
push
push
aad
imul
add
iret
scas
add
inc
jp
fs
xor
arpl
pop
pop
add
mov
cmp
sbb
out
into
add
add
sbb
cwtl
fucomi
jg
lcall
sbb
cmp
jg
sub
out
je
push
push
fidivrl
xor
outsl
jno
pushl
pop
xor
in
mov
xchg
lcall
pop
in
adc
in
xchg
xchg
mov
xlat
add
pushf
mov
sub
adc
jno
fnstcw
sbb
int
bound
repz
sbb
add
bnd
int3
jp
adc
std
mov
arpl
out
mov
divl
pop
sahf
jge
pop
adc
notb
pop
repnz
jbe
dec
dec
lds
shll
jg
adc
lock
repz
mov
movsl
in
mov
cmc
data16
add
js
and
popl
call
or
and
and
andl
add
out
jae
es
out
leave
ds
adc
push
pop
fs
movsl
movsl
shrl
jno
or
push
or
mov
xor
leave
inc
incl
rclb
cmp
mov
sub
dec
pop
iret
int
repnz
xor
adc
cli
gs
aaa
out
insb
fdivr
jb
dec
xchg
xor
nop
pop
pop
pop
ficomps
sub
xor
adc
lret
sbb
lods
xlat
lcall
dec
out
shll
icebp
dec
es
outsb
mov
fs
es
into
jae
pop
push
jb
mov
lds
js
add
sbb
mov
fisttps
fildll
inc
or
lcall
test
out
ja
cmp
xchg
cmpsl
leave
arpl
inc
mov
jo
stos
sarl
ljmp
imul
pop
cld
pop
inc
and
ljmp
or
cmp
mov
sbbl
xchg
xor
inc
rol
jge
xlat
mov
xchg
adc
aaa
fxch
push
or
sbb
xchg
adc
testb
ret
pop
cmp
jbe
cs
pushf
pop
mov
sub
pop
add
sti
cmc
inc
inc
jbe
cli
pop
roll
add
sub
mov
mov
mov
mov
mov
les
gs
cltd
adc
cwtl
shlb
dec
cmp
ret
xor
mov
nop
stos
and
popf
inc
push
lods
jo
js
scas
inc
fs
ss
add
mov
mov
mov
in
xor
dec
sub
cmp
pop
iret
adc
xchg
sub
xchg
sub
xchg
movsl
mov
inc
lods
add
sbb
int
mov
icebp
sbb
pop
add
test
not
movsl
imul
push
enter
and
sahf
aad
sbb
jae
lret
icebp
cltd
scas
je
aam
les
es
mov
add
les
lret
adc
sub
loopne
subb
fwait
mov
sbb
push
das
or
out
lods
cmpl
mov
cmp
orl
arpl
out
and
rol
int3
repnz
push
icebp
mov
cmc
in
dec
jbe
pop
mov
mov
mov
shrb
mov
sti
mov
cmp
std
dec
sti
ret
mov
push
lcall
mov
push
sarb
jg
out
jb
push
xor
push
andb
fstp
pop
push
ljmp
ja
imul
pop
push
scas
jnp
and
inc
or
inc
push
cmp
ds
lea
cmpsb
xchg
dec
ds
test
push
call
pop
test
shl
push
stos
mov
cmp
sbb
movsb
daa
stc
jl
push
jne
cwtl
dec
insl
je
stos
js
jo
mov
push
inc
cmp
pandn
and
gs
insl
sbb
rcrb
jbe
aam
mov
icebp
and
sbb
idivb
mov
loope
lahf
mov
popf
or
jb
addr16
fcoml
shlb
jl
dec
ret
cmp
adc
sbb
je
push
cmc
data16
shll
cmp
movl
nop
pop
sub
sahf
jb
and
shlb
rcl
cmc
jns
pop
pop
mov
dec
add
xchg
push
outsb
fiadds
loop
cmp
pop
add
pop
idivl
and
inc
jge
or
daa
mov
push
into
and
and
add
orb
repnz
cltd
jae
cmp
dec
add
mov
into
and
xchg
mov
xchg
xor
sbbb
cmp
rorl
stc
pop
ss
fs
adc
push
addb
je
push
imul
inc
xchg
std
pop
ljmp
cmp
xor
lds
sbb
inc
lcall
mov
gs
or
daa
insb
mov
iret
enter
cmpb
ljmp
movsb
xor
std
imul
jne
dec
mov
outsb
sbb
std
scas
lods
das
in
insb
repnz
jle
mov
pop
fwait
stos
imul
inc
clc
adcb
and
xchg
loope
rorl
mov
dec
xchg
jnp
fsubs
push
cld
mov
xor
jmp
mov
mov
loop
push
stos
cs
cwtl
cli
push
or
je
fistl
stos
dec
outsl
sub
xor
sahf
mov
xchg
loopne
push
inc
mov
stos
dec
mov
arpl
cmpsb
stc
mov
sbb
mov
inc
test
xlat
bound
push
roll
insb
add
int3
sub
scas
mov
cmp
test
xor
arpl
lret
sub
aad
xor
int3
std
pop
cmpsb
loop
mov
jmp
imul
sub
mov
fcoml
dec
insl
mov
ds
ja
hlt
int
mov
imul
jo
inc
adc
sti
lahf
jp
test
adc
nop
push
mov
int3
loopne
sbb
imul
or
jb
test
pushf
arpl
and
sub
pushf
mov
dec
sti
lock
imul
xor
cld
add
test
jmp
xlat
inc
or
clc
pop
cmp
mov
push
ja
jae
xchg
jne
mov
cmp
xor
call
cmp
mov
pusha
ljmp
xchg
repnz
enter
sbb
daa
setno
test
es
scas
negl
inc
call
das
cmp
mov
and
ret
rcll
aam
popa
sub
add
iret
les
pop
jmp
adc
sub
les
push
pop
adc
mov
cwtl
leave
loopne
push
lret
cmp
pop
and
pop
push
mov
or
cltd
add
mov
and
xor
enter
xchg
call
out
or
js
ficomps
aam
jnp
mov
jecxz
inc
ret
test
inc
aad
lret
nop
xchg
jno
pop
mov
outsl
lods
push
or
mov
mov
xchg
frstor
sbb
test
mov
dec
mov
hlt
dec
ret
movsl
push
or
xor
xchg
leave
lock
and
mov
adc
sub
enter
lahf
out
cmpsb
jle
pop
shlb
cmpsl
mov
imul
push
mov
mov
mov
or
shr
shrb
jne
dec
jne
mov
push
mov
repnz
inc
out
adc
lock
ja
cmp
aam
outsl
imul
insl
push
pop
popf
cmp
test
stc
bound
sub
or
jp
aam
pop
and
int
mov
ds
sarb
imul
out
testb
add
sbb
mov
rorb
andb
stos
dec
and
jle,pn
cmpsl
fwait
inc
clc
jo
cmp
xlat
fprem
pop
lods
std
js
into
adc
cmpsb
sub
repz
and
xchg
and
popf
pusha
push
inc
clc
int
fdivl
in
sbb
and
push
xchg
data16
dec
pop
imul
ja
lcall
movsb
sub
imul
sti
push
lds
cwtl
adc
js
inc
call
and
xchg
mov
push
jg
add
call
shl
daa
arpl
xor
dec
das
inc
mov
fistps
rorl
xor
push
sub
push
js
jbe
fiaddl
xchg
cmp
pop
icebp
fidivl
push
dec
inc
push
stos
dec
mov
or
and
je
shrb
aad
jl
sbb
adc
cmp
jge,pn
mov
nop
pop
rcll
or
xorl
push
pop
sbb
or
sbb
dec
xor
cmp
jnp
imul
mov
xor
adc
in
rcrb
insl
and
fnstenv
iret
repz
loopne
and
or
jb
mov
mov
test
or
dec
mov
cmp
js
or
sbb
cmp
arpl
test
test
aas
add
rol
mov
jb
add
adc
xchg
and
push
mov
mov
mov
jmp
cmp
pusha
aad
jp
push
pop
cmc
xor
cmp
loope
gs
jne
lret
stos
sbb
ja
sbb
std
addr16
mov
outsb
cmp
andl
push
xlat
ret
mov
fldz
into
xor
xchg
aad
jnp
cmpsb
add
out
mov
dec
jp
add
add
jmp
dec
and
add
setp
arpl
xlat
outsb
dec
movsb
pop
mov
in
into
sbbb
pop
xor
xchg
xchg
incb
sub
aad
mov
std
jno
rclb
adc
xchg
lcall
cwtl
sub
movsb
and
ds
mov
hlt
mov
adc
fiaddl
dec
int3
addr16
jl
js
xchg
sbb
xchg
popf
shrl
push
subb
pop
ja
outsb
pop
sub
mov
jecxz
jne
push
jmp
mov
jge
fcompl
push
dec
insb
jle
mov
cmpl
dec
mov
pop
leave
shrb
data16
test
les
cmp
dec
xor
cmp
stos
sbb
in
xor
outsb
mov
pop
cwtl
in
repz
insb
mov
mov
dec
pop
lea
sub
cmpsb
stos
jl
pop
push
adc
jo
pusha
cwtl
pop
int3
into
pop
popf
jne
mov
out
in
movsl
stos
shr
mov
roll
adcl
push
rcll
and
and
adc
xchg
sbb
popa
rcrb
aam
jmp
add
js
pop
inc
push
or
mov
push
in
dec
fcmovnb
xlat
sar
es
xlat
sub
add
lods
inc
stc
int3
mov
xchg
jbe
dec
ret
mov
pop
roll
insl
das
fs
xchg
lret
push
xchg
or
cs
mov
jmp
dec
ja
outsl
out
arpl
push
rorb
jns
or
xchg
mov
aaa
movsb
sbb
rcll
cwtl
xor
xchg
cmp
and
and
aaa
inc
or
dec
sub
arpl
cmpsb
add
jo
or
xor
ljmp
and
test
mov
out
mov
lods
imul
test
ret
or
clc
inc
dec
sti
and
in
fwait
lahf
push
add
out
sub
mov
and
add
dec
cmp
pop
repz
out
dec
popf
outsb
stc
ret
pop
pcmpgtb
scas
mov
icebp
fxch
adcl
dec
jae
dec
lret
fdivrl
sbb
xchg
outsl
iret
pushl
push
cmc
dec
call
fisttpl
imul
push
pop
jbe
stos
mov
xor
mov
fsubrl
push
xor
jno
adc
repnz
and
pop
pop
add
imul
inc
arpl
sbb
cltd
mov
mov
scas
mull
pop
and
inc
pop
jbe
jno
ret
xchg
inc
int
arpl
pop
pop
xor
cs
out
mulps
lock
or
outsb
pop
add
cwtl
lock
sbbb
adc
jbe
xor
js
sbb
or
xor
push
mov
sub
or
cmp
int
inc
hlt
in
add
lahf
insb
dec
dec
fwait
pop
cmp
xor
sbb
jno
aaa
mov
cmp
pop
and
in
lods
outsb
clc
inc
xchg
inc
mov
out
xchg
push
inc
xlat
mov
xchg
stc
lods
push
test
jg
bound
movsl
mov
jbe
mov
cltd
lock
ss
roll
add
cmpsl
call
jle
mov
lahf
jbe
test
inc
out
cli
enter
sti
mov
addb
push
cmpsl
xchg
jle
xchg
sbb
jl
lds
adc
xchg
sub
xchg
xor
cmp
or
call
inc
mov
xchg
filds
into
lret
and
inc
lock
sub
xlat
jns
enter
push
inc
xchg
lahf
mov
leave
mov
mov
cmpsl
and
jno
arpl
cs
xchg
testl
jge
inc
ret
rcll
push
lahf
out
and
mov
pop
add
hlt
ret
stos
mov
jno
cmp
popf
out
sub
push
xchg
imulb
insb
daa
or
cmpsb
fisubrl
inc
imul
popf
imul
dec
shrb
outsb
aas
xchg
pop
push
fdivrs
scas
mov
inc
ret
mov
cmpsb
dec
ss
mov
out
ret
aad
ret
inc
dec
cld
gs
fs
push
sbb
inc
xlat
cmp
pop
xor
mov
in
adc
sbb
mov
call
add
add
stos
mov
mov
jne
sub
cli
loop
cmp
xlat
shlb
inc
out
adc
jp
test
and
mov
aas
pop
or
aas
mov
add
out
insl
add
inc
lcall
jmp
jge
mov
push
lods
sti
lods
mov
test
clc
jge
inc
push
dec
popa
stos
pop
pop
or
push
iret
sbb
test
fwait
inc
and
imul
stos
mov
xchg
sub
andl
ljmp
push
aam
push
testb
enter
roll
xor
mov
cmp
lods
fisubl
popa
or
mov
mov
mov
mov
inc
in
mov
in
xchg
rclb
jnp
sahf
rcrl
push
sbbb
and
fcomps
lods
jae
repnz
outsb
in
incb
push
cmp
je
or
or
sub
lods
cmp
out
add
cltd
call
mov
lret
jo
cs
mov
cltd
cmp
repnz
cmpsl
adc
cmp
lods
pop
xchg
pop
fistpll
push
in
sbb
push
sbb
add
push
sbb
mov
shlb
sub
aaa
jl
ljmp
bound
les
mov
jb
xor
adc
jb
sub
scas
or
pusha
fldenv
call
pop
in
imul
cmp
fmuls
repz
or
aam
sbb
jp
xor
mov
jle
cmp
shl
fwait
into
or
xchg
mov
push
inc
leave
lea
in
dec
push
and
sbb
mov
pop
xchg
jmp
sbb
mov
push
aam
jns
mov
hlt
xor
lock
pop
mov
ss
stos
fwait
lds
imul
andl
sbb
call
xchg
pop
or
js
stos
fwait
jns
or
mov
push
xlat
in
int3
leave
push
rorl
xor
xchg
sbb
sub
dec
or
xor
lret
cld
movsl
popf
dec
jns
xchg
arpl
popf
jl
pop
addl
dec
cli
in
and
mov
jae
adc
pushf
add
sub
jno
mov
inc
pushf
test
mov
int
sub
jne
push
inc
fistpl
stos
rorb
push
push
repz
sub
xor
mov
jge
adc
fildl
add
cmp
aad
jmp
sub
aad
fnstsw
lret
or
out
and
loopne
int3
mov
stc
fwait
cli
xchg
insl
mov
in
imul
pop
sbb
dec
mov
mov
mov
xor
lahf
push
mov
xchg
xchg
imul
lods
loopne
pop
pop
ret
mov
xchg
dec
adc
in
ret
push
lock
arpl
mov
test
movsl
adc
pop
or
pop
mov
jmp
and
std
or
adc
jle
testl
jmp
mov
sbb
adc
mov
inc
xor
inc
aam
popw
imul
pop
out
add
sbb
and
loopne
push
xor
push
rcll
push
shrl
cwtl
or
fucom
mov
xchg
push
cmp
bswap
out
call
dec
push
add
sub
bound
outsl
mov
jecxz
jp
xchg
adc
mov
jno
loope
push
and
in
inc
xchg
jg
pop
cmp
xor
insb
sbb
out
jle
lock
cltd
push
inc
mov
shr
push
xor
das
add
mov
mov
out
sbb
and
inc
jb
jns
and
fmuls
popa
subb
push
movsb
push
es
in
inc
cmpsl
rorl
shr
stos
fwait
scas
out
push
jge
push
out
mov
ss
dec
scas
mov
pop
nop
test
xchg
popa
or
into
lret
out
jge
inc
sti
sub
cmp
call
dec
ds
mov
mov
lea
sbb
lret
or
ret
adc
fs
cmp
xchg
xor
in
cs
push
pop
mov
std
in
sbb
mov
mov
in
outsl
inc
orb
push
mov
fwait
add
jecxz
into
cld
out
sbb
outsl
test
jne
mov
shll
fcomi
xlat
cmc
mov
xor
pop
aaa
cli
je
mov
adc
bound
sub
jno
pop
test
fiadds
stos
ljmp
icebp
mov
sub
outsb
cli
cmc
jp
jbe
pusha
lds
pop
cmp
aad
pop
cmc
push
xchg
jmp
fcmovb
sub
int
or
pop
lcall
or
pop
jp
popa
sub
adc
shll
push
orb
sbb
daa
add
je
lds
fsubrs
dec
stc
cs
pop
xchg
adc
xchg
andl
nop
xor
test
dec
leave
adcl
mov
jecxz
jne
xchg
push
cmp
and
cmpsl
pop
inc
lret
insb
cmp
pusha
pop
out
popa
loope
rorl
sub
or
and
mov
cwtl
or
imul
mov
mov
pop
mov
xchg
gs
dec
ds
adc
nop
jmp
sub
imul
dec
push
out
andb
pushf
or
and
lods
mov
test
inc
pusha
xor
cli
dec
or
cmc
clc
add
pusha
or
sti
sub
ffreep
cmpsb
adc
ret
jne
outsb
pop
pop
insb
mov
mov
jecxz
cmp
cwtl
dec
xor
xchg
pop
mov
sti
enter
mov
ds
loope
lcall
fs
mov
fwait
xor
jge
inc
inc
xlat
ljmp
and
das
call
in
cmp
adcb
sbb
outsl
or
addr16
sub
mov
mov
ret
mov
sbb
jb
xlat
pop
popf
call
sub
insb
mov
leave
xchg
inc
xor
dec
jle
sub
aad
push
add
bound
cs
add
rcl
lock
rcrl
push
mov
jg
pop
xor
push
or
sti
into
dec
or
xor
mov
rclb
ljmp
cmpl
mov
loop
adc
outsb
mov
daa
xor
sub
sbb
sub
sub
stc
adc
imul
movsb
sub
cmc
jns
jno
pop
or
es
mov
add
xchg
imul
xchg
imul
sub
mov
movsl
loope
add
stos
mov
xor
jno
stos
mov
jle
mov
and
sbb
cwtl
dec
out
mov
jecxz
fwait
js
imul
pop
cs
rcrl
adc
mov
test
loope
pushl
pop
adc
pop
cmp
mov
sti
sbb
cmp
into
xlat
mov
adc
cmp
bound
or
and
daa
sahf
in
mov
clc
push
js
arpl
add
sbb
sbb
push
pusha
mov
ljmp
outsl
mov
xchg
jne
stos
and
pop
push
mov
cs
jns
mov
jnp
sbb
lea
jns
aad
insb
stc
fwait
in
mov
mov
mov
jp
je
jmp
pop
push
aad
push
or
gs
pop
icebp
sub
pop
arpl
dec
cmp
or
int
dec
mov
loop
addr16
and
dec
mov
scas
lcall
and
lds
sbb
insl
aam
fdivl
sbb
call
loopne
mov
push
lea
pop
mov
push
push
in
xchg
xor
pop
shll
scas
mov
pop
ret
mov
add
inc
fsubp
aaa
inc
mov
pop
inc
push
ret
inc
clc
adc
jecxz
mov
arpl
add
lea
popf
ret
sbb
pop
add
sbb
into
dec
fimull
insb
cmp
lcall
pop
rorb
adc
cmp
pop
jnp
lods
pop
cmc
inc
xor
jnp
or
repnz
test
push
mov
push
mov
add
and
mov
jecxz
les
mov
dec
aas
insb
test
sbbb
pop
mov
inc
xchg
std
shll
dec
mov
lcall
scas
mov
loopne
push
or
adc
outsl
dec
adc
jno
outsb
mov
fwait
jne
mov
pop
adc
pop
push
lods
jecxz
push
rorb
mov
mov
in
pusha
dec
je
insb
gs
in
mov
call
pop
addb
add
jmp
movl
jmp
pop
inc
ret
xchg
push
jno
leave
inc
xor
lahf
or
icebp
xchg
inc
addr16
pop
fst
sbb
xchg
adc
sahf
jnp
mov
outsl
sbb
shl
cmp
sub
jg
lods
dec
mov
js
in
push
imul
push
js
test
jp
adc
mov
mov
les
mov
enter
cmp
popl
pop
push
mov
imul
and
xchg
cmc
leave
dec
dec
add
sahf
out
lret
xchg
pop
pop
imul
xchg
adc
out
fsubrs
dec
cmc
mov
mov
es
test
cmpsb
xchg
sbb
xor
jmp
mov
lcall
or
inc
jo
inc
jno
lods
jb
in
fistpl
inc
aas
clc
stos
jae
cmc
jns
sub
push
lret
sbb
lds
sub
or
cmpsb
inc
xchg
adc
icebp
popf
xchg
cmp
push
push
jle
mov
mov
add
adc
inc
push
cmpsb
imul
outsl
push
rcrb
je
aam
insb
lods
jp
dec
jp
dec
or
stos
movsl
jns
enter
test
pop
outsb
mov
ss
adcb
add
mov
stos
add
jno
nop
cmp
xchg
xchg
mov
insl
mov
mov
pop
movsl
jnp
fimuls
dec
mov
aad
into
aaa
pop
or
and
add
mov
cs
jbe
iret
or
mov
movsb
pop
stos
out
loopne
push
pop
dec
sti
jbe
clc
mov
add
orl
imul
mov
fistpll
inc
xorb
js
lret
sub
out
push
movsl
arpl
pop
cmovo
test
inc
inc
sub
daa
sbb
lahf
das
fsubrp
jnp
push
mov
shr
pop
mov
test
scas
and
cmp
fnsave
ljmp
lock
sbb
bound
xor
stos
addr16
mov
ffree
pop
and
push
fwait
outsl
popf
push
ret
mov
mov
movsb
dec
dec
mov
add
mov
inc
push
lock
mov
and
repnz
mov
cltd
jns
aad
add
adc
fsubr
pop
mov
and
sub
xlat
out
push
push
data16
clc
outsl
push
xchg
adc
xor
rcl
mov
adc
dec
pop
frstpm(287
rorl
inc
push
xchg
lea
es
sub
loopne
push
dec
jae
cld
hlt
das
ds
pop
and
shll
jle
adc
loop
iret
jo
sub
cli
popf
cmpsb
aaa
adc
jle
stos
or
aam
js
jns
lods
adc
cld
mov
insl
mov
add
jnp
daa
rcrb
scas
ret
mov
imul
cmpsl
inc
and
mov
sub
out
loop
cwtl
in
aam
mov
out
sarb
cmpsl
dec
in
in
sbb
out
pop
mov
lcall
clc
sub
push
jbe
push
mov
lcall
cmpsl
lcall
pop
shlb
fcomps
xchg
xor
clc
or
popa
popa
xchg
int3
push
sub
adc
icebp
fnsave
cmc
cmpsl
and
add
je
sub
mov
shlb
add
andl
mov
test
test
pop
mov
ret
cmp
push
inc
jne
xchg
mov
enter
xor
ss
or
add
xchg
xchg
inc
test
cmpsl
incb
jecxz
iret
jmp
cli
and
dec
test
cmp
push
adc
or
sbb
scas
jbe
sub
test
fidivs
and
in
cmp
int
mov
ret
jl
adc
or
mov
mov
bound
stos
pop
aad
mov
add
fidivrl
into
cs
inc
push
mov
fstpl
in
and
push
rcrl
daa
lock
repz
popf
jae
xchg
cmp
loope
xchg
sub
nop
mov
imul
test
insl
xor
fisubrs
jmp
xchg
lcall
shl
das
push
cmp
out
and
cmp
jb
lods
das
call
std
dec
sbb
or
fcomi
mov
out
lahf
mov
lret
and
lret
xor
mov
repz
mov
push
ljmp
adcb
push
push
sahf
adc
push
aam
sub
stos
repnz
cwtl
fsubrl
jmp
xor
pop
test
mov
sahf
addr16
jle
scas
or
mov
sbb
or
cmpb
inc
repnz
lods
dec
fstl
pop
lcall
dec
ror
lds
push
jb
sub
push
dec
lods
movsb
out
rolb
cmp
sbb
in
lahf
movsl
mov
in
push
or
outsl
iret
rolb
enter
and
mov
pop
cltd
mov
mul
out
sahf
mov
icebp
add
loopne
repz
arpl
int
leave
in
ja
fidivrs
mov
repz
clc
and
push
add
js
stos
xchg
jge
xor
test
cmp
pushf
cmp
pop
dec
sub
rol
into
mov
sahf
fwait
out
in
in
fnstenv
sbb
push
jno
std
jge
addr16
test
dec
lock
jb
setae
pop
lcall
cmp
jg
bound
and
sbb
add
add
sbb
shll
jge
push
push
jmp
into
push
jl
repz
pusha
sub
out
dec
push
push
dec
cmp
cli
dec
orb
aaa
jge
pushf
push
ja
ret
or
scas
movsl
jmp
je
mov
mov
std
or
dec
mov
daa
push
out
jmp
jge
jp
pop
dec
xlat
sbb
fildll
pusha
ret
sbb
push
loop
xor
rcrl
add
xchg
idivb
dec
mov
dec
cmc
lds
cs
push
dec
es
pop
movsl
outsb
pop
mov
jnp
das
repz
jle
aas
jnp
dec
sub
hlt
add
sbbl
xor
daa
stos
inc
adc
xchg
sbb
or
rorl
gs
push
or
sbb
add
mov
sub
push
mov
sti
xchg
enter
mov
cmpsb
cmc
xor
push
inc
lret
push
add
lods
and
daa
sbb
xchg
pop
stos
imulb
xor
mov
mov
mov
dec
testb
add
nop
loop
inc
fcoms
jl
adc
and
mov
xchg
xor
xor
pop
mov
mov
test
aam
insl
jle
shrl
pop
test
insl
pushf
daa
arpl
xorl
imul
xor
inc
and
les
dec
es
mov
ret
std
shlb
icebp
aas
or
stos
pop
or
sub
loope
mov
fstl
inc
jns
and
daa
push
fdivs
shll
or
cmp
loop
jno
sbb
pop
inc
jo
outsb
and
ljmp
mov
pop
mov
pop
sub
negl
outsl
insl
popa
fstps
push
fwait
rcrb
pop
in
es
mov
jle
dec
or
pop
pop
jecxz
cmc
fldenv
xchg
lret
xor
cs
jge
leave
jnp
push
inc
fs
out
aas
push
mul
aam
cmp
leave
cmpsb
clc
jo
adc
jmp
cvtps2pd
push
mov
lret
pop
inc
loope
pushf
xor
rcrl
add
push
test
arpl
in
add
test
push
popa
xchg
mov
lahf
out
mov
push
adcl
push
repz
jp
dec
lds
xorl
dec
dec
mov
les
icebp
fimull
orb
out
push
push
dec
add
adc
lahf
dec
mov
cld
outsb
lods
arpl
enter
insl
popa
or
addb
out
aam
push
in
adc
aam
shll
divl
xchg
adc
roll
hlt
jle
push
jmp
cs
stc
test
lret
fsubrp
lea
dec
adc
sub
insb
cs
inc
nop
std
nop
jmp
loope
pop
adc
stc
in
jecxz
scas
pusha
ret
insl
xchg
pusha
dec
and
add
jmp
or
loop
mov
and
stos
sub
rorb
imul
shlb
add
scas
shl
mov
mov
int3
and
and
or
rcrb
dec
mov
mov
xchg
jnp
das
xchg
push
or
sbb
jne
imul
cli
cli
mov
pushf
push
std
loop
add
lea
sbb
dec
adc
ret
mov
ja
pop
sbb
scas
or
lret
xor
inc
sub
jg
push
fcmovu
inc
lret
lods
arpl
xchg
sub
fnstenv
mov
and
mov
mov
into
xorl
inc
daa
arpl
xor
mov
pcmpeqd
and
fcmovne
clc
mov
es
or
jne
push
repz
movsl
fucomi
out
jmp
mov
gs
mov
in
loope
js
jg
addr16
clc
xchg
movsb
dec
sub
sub
sbbb
mov
adc
jle
adc
repnz
sahf
pop
movb
sbb
aas
cmp
mov
insl
sti
xor
pop
xor
aad
jne
jecxz
js
mov
fidivrs
sub
jbe
imul
jne
xorb
les
or
mov
cwtl
arpl
scas
sahf
jp
test
fdivl
ret
add
push
xor
xorl
sbb
pop
test
pop
pop
inc
lret
ret
xorb
sub
lods
sub
cli
or
xor
loope
inc
loope
icebp
xor
pop
jb
and
or
repnz
cld
add
add
pop
pop
dec
andb
dec
das
imul
mov
daa
lret
sub
pusha
test
loope
jl
out
loope
stc
shrb
jnp
dec
mov
xor
jns
xor
or
mov
movl
nop
shlb
pop
cmp
popa
sbb
jne
push
mov
cwtl
push
mov
fmull
rolb
jb
aaa
mov
cmp
ljmp
jb
mov
push
fsubrl
insl
in
pop
push
or
cmpb
nop
std
in
imul
push
mov
iret
xchg
adc
aaa
or
lret
add
and
push
or
pop
push
push
xchg
fists
xor
bnd
aaa
je
fists
sub
jb
lret
imul
xchg
jae
cmp
or
inc
mov
jge
jmp
ljmp
jg
cmpsb
fs
jmp
dec
aam
sbb
outsb
lahf
leave
inc
sar
test
push
imul
loop
popf
cltd
popf
xor
pop
jb
int3
xchg
loopne
popf
cmp
or
and
cmpsb
fisubl
xchg
xor
cli
mov
je
push
mov
movsl
in
es
mov
push
cltd
inc
inc
mov
pop
es
jle
or
jo
push
mov
mov
sub
imul
insl
inc
pop
xor
or
adc
push
out
mov
sarl
test
dec
jle
add
js
jo
mov
and
mov
int
into
xor
and
stos
leave
test
call
jl
add
pop
das
inc
and
mov
in
cltd
xchg
dec
shr
sub
inc
cmpsb
or
fisubl
out
push
adc
pop
repnz
lock
test
cmc
in
jle
out
stos
mov
stos
adc
fcom
popa
enter
shll
mov
enter
and
jl
imul
dec
shlb
lock
stos
lea
inc
imul
pop
mov
pop
push
dec
iret
and
test
push
sub
mov
popf
jnp
mov
es
or
test
testb
ljmp
fcmovb
incl
or
push
add
cmp
loope
lea
movsl
lahf
xlat
and
dec
das
outsb
lcall
mov
gs
mov
scas
xor
imul
mov
int
shlb
sub
mov
or
cmp
mov
outsb
fxam
inc
cltd
push
imul
or
nopl
or
mov
outsl
rcl
rol
xchg
test
sti
mov
sti
cmp
cmp
ja
xchg
mov
dec
outsl
arpl
inc
stos
je
sub
mov
add
sbb
inc
lods
jecxz
stc
and
adc
pop
test
sahf
dec
push
and
je
lahf
ret
jp
jmp
inc
int3
push
sahf
sbb
dec
aam
add
pop
xchg
adc
push
xchg
je
js
mov
mov
and
inc
in
push
push
push
mov
jnp
cmp
lret
scas
inc
test
sbb
jns
lea
popf
ret
in
scas
and
jo
ret
pop
cmpb
mov
add
sub
cmp
hlt
fidivrs
mov
inc
jbe
inc
shll
cmp
add
subb
sub
outsl
movb
pop
xor
call
adc
add
mov
mov
rsm
cmp
imul
fadd
loop
int
mov
push
cs
sub
inc
add
inc
or
or
lea
push
pusha
mov
fs
fdivrs
and
mov
xor
xchg
sub
loop
or
jbe
jp
inc
daa
xor
loopne
mov
mov
sbb
stos
int3
mov
add
test
pop
xchg
inc
cltd
adc
jle
adc
jno
fiadds
sub
xor
notb
arpl
jecxz
sti
out
stos
mov
push
call
xchg
xlat
out
scas
and
rol
js
mov
lea
jl
testl
push
popa
mov
pushf
icebp
inc
fistpl
call
aad
sub
iret
mov
add
loop
out
jns
cld
lock
lcall
lea
dec
mov
jg
or
rcll
repnz
or
push
sub
iret
push
push
jmp
fs
lea
stc
push
pop
popa
or
mov
flds
jno
scas
bound
imul
mov
aas
jecxz
dec
or
xor
push
mov
and
mov
je
mov
fnclex
mov
mov
mov
cld
inc
imul
and
adcb
mov
mov
stos
inc
cltd
rolb
cmpsb
loope
mov
das
in
add
push
fadds
mov
fldt
out
aad
pop
leave
add
lods
movsl
popa
js
pop
test
int
xor
mov
xchg
stos
mov
ja
sar
pop
ds
fnstcw
nop
rol
dec
mov
or
mov
out
out
pop
mov
pop
roll
sub
push
inc
cmpsl
xchg
call
mov
mov
jl
iret
call
ret
lock
enter
test
sbb
sahf
cmp
imul
jle
outsb
enter
ss
dec
jecxz
sub
cmpsl
add
addr16
pop
lret
xchg
pushl
scas
lret
jle
lds
rorl
or
test
out
ret
push
dec
into
sarb
xchg
mov
in
jbe
fldcw
in
add
cld
insb
xlat
rcrb
push
cmpsb
push
lret
mov
in
mov
mov
into
jb
xchg
xchg
mov
pop
popa
mov
setp
loop
push
out
daa
mov
clc
in
xchg
sbb
cmp
sbb
pop
mov
dec
push
cmp
gs
adc
lea
test
mov
mov
hlt
jge
lds
test
mov
pop
in
insl
std
mov
pop
mov
mov
sbb
jge
push
sbb
fbld
xorl
outsb
in
add
or
sub
cmp
pushl
adc
cli
pusha
rclb
add
ja
sbb
push
mov
inc
add
hlt
out
pop
insb
inc
mov
ja
out
cs
mov
push
lahf
jns
sbb
xlat
jo
sub
jne
inc
addb
arpl
test
rolb
inc
add
cmpl
cmpsb
mov
lock
add
mov
push
icebp
add
js
push
dec
scas
lods
cwtl
dec
data16
push
std
sarl
fcomps
mov
sub
cld
repnz
jecxz
dec
mov
and
stc
call
cmp
mov
lcall
cmp
mov
pop
jo
clc
pop
jg
jnp
xchg
lret
xchg
mov
sub
ljmp
mov
inc
pop
in
stos
ljmp
jmp
mov
xchg
out
adc
int
jecxz
push
call
imulb
cmp
ret
xchg
dec
pusha
mov
mov
jbe
xchg
push
pusha
mov
sub
nop
cmp
mov
lds
loopne
es
sahf
daa
in
fdivp
mov
jl
mov
cmp
push
iret
ds
pop
push
pop
mov
ret
cmp
mov
xchg
push
cmp
jle
xor
xor
add
adc
out
stc
sbb
pop
jge
les
xchg
jecxz
shll
or
ds
daa
mov
rol
push
ret
negl
jecxz
lcall
jns
cs
xor
add
pop
iret
jne
sub
lahf
iret
gs
dec
adc
push
pop
push
pop
sbb
mov
sub
mov
inc
mov
cmp
addr16
cltd
fsub
jge
mov
sbb
jnp
out
test
sub
mov
fnsaves
adc
out
push
test
dec
cmp
and
jne
mov
andl
pop
cmp
pop
xchg
sub
arpl
xchg
stos
rorb
addr16
shr
sbb
push
pop
jl
pop
push
outsl
sub
out
aad
push
adcb
fs
cltd
jne
sahf
les
mov
aaa
imul
fidivl
push
js
repnz
push
push
cmp
pop
push
adc
xchg
pop
and
sbb
and
inc
imul
int3
jge
shr
push
add
call
outsb
push
dec
sub
sahf
out
xchg
cmp
enter
roll
cwtl
xchg
jg,pt
push
addl
add
adc
push
or
int3
pop
fwait
inc
lds
movsb
lea
adc
xor
xchg
dec
stos
or
inc
cmp
pop
push
inc
mov
sahf
xchg
popa
call
cld
jae
or
or
xchg
push
lods
inc
adc
push
pop
cli
pop
add
test
fwait
jno
lock
mov
cmc
pop
cmpsl
test
jg
sub
repnz
mov
xchg
test
std
pop
sarl
jp
lock
je
sbb
adc
adc
adc
cmp
fisttps
xlat
mov
jl
push
jp
push
fcmovu
rcrl
dec
sbb
dec
test
or
lret
inc
sbb
mov
arpl
imul
ret
cli
ss
cli
insl
out
mov
outsl
adc
sub
negb
bound
xor
stc
xchg
and
sbb
xlat
adc
ds
cmp
test
and
xchg
mov
arpl
push
dec
mov
rcrl
inc
ret
imul
xchg
or
adc
cmc
jb
lcall
sbb
mov
cmc
push
sti
das
mov
xchg
push
add
jmp
pop
add
out
shlb
pop
adc
aad
scas
or
mov
xchg
mov
mov
les
dec
rcl
xchg
jbe
lock
or
in
aam
add
div
imul
jae
popf
pop
sbb
mov
fsubl
pop
sub
insl
push
fwait
mov
mov
addl
outsl
xchg
cmp
push
addr16
aaa
dec
adc
sub
int
int3
xor
faddp
data16
lahf
push
leave
testl
test
js
sbb
mov
fld
cmp
imul
mov
cmpsl
scas
movsl
movsb
mov
out
dec
mov
adc
pop
sbb
jnp
shl
in
stos
pop
aas
das
mov
repnz
stos
adc
xchg
xor
cmp
arpl
rolb
xor
cmp
lahf
cs
mov
xchg
jmp
rcll
xchg
cmpsb
xor
xlat
cmp
push
aad
lock
cld
mov
loop
jo
fidivs
call
sub
fisttpl
int3
xlat
inc
fsubr
adc
shl
mov
mov
xchg
imul
loop
jnp
repnz
loopne
fisubl
sahf
cmc
scas
xchg
pop
inc
inc
frstor
out
test
ja
sub
sub
cmp
in
mov
mov
cs
lcall
push
inc
jge
sbb
aad
xchg
or
sbb
popf
movsb
test
xchg
pop
sub
push
mov
sahf
sahf
mov
mov
pop
data16
xchg
imul
push
mov
popa
xor
cli
loope
push
ss
lret
jns
stc
and
or
dec
adc
nop
push
pop
xor
cltd
or
push
mov
and
cmp
adc
stos
dec
pop
cmp
popa
test
fwait
imul
imul
xor
inc
adc
fisubs
dec
sbb
pop
out
cmp
cmpsb
sub
pushf
imul
flds
sbb
fninit
push
je
sbb
mov
push
pop
les
out
and
xchg
rcr
lods
aam
cmp
iret
mov
and
rcr
lahf
mov
add
repz
leave
jb
enter
mov
in
das
outsl
in
ret
lret
imul
pop
lea
insb
lea
fdiv
sub
xor
inc
cli
sbb
frstor
push
sbbb
out
push
pushf
lds
cwtl
pop
xor
pop
push
inc
jno
rcl
stc
jbe
subb
or
clc
ds
icebp
cmp
loope
cmp
jge
arpl
imul
lods
rolb
in
nop
adc
stos
test
mov
add
pop
mov
cli
dec
dec
inc
mov
xor
shl
std
cmpsb
imul
lods
addr16
ljmp
subb
inc
pop
adc
mov
pop
and
fxam
test
pop
loope
aad
adc
add
pand
mov
scas
mov
mov
scas
negl
jo,pt
and
dec
or
call
stos
mov
mov
pop
repnz
lods
cmp
cwtl
pop
stc
outsb
xchg
stc
in
hlt
dec
sub
ret
xchg
xchg
ja
xor
fimuls
xor
dec
jbe
fwait
mov
mov
in
in
jecxz
mov
pop
or
pop
aaa
cld
inc
pop
adc
and
push
test
bound
nop
push
jp
jge
mov
adc
inc
jp
out
pop
dec
cld
rclb
or
addl
imul
adc
sahf
mov
daa
jbe
xor
cli
shlb
imul
das
cwtl
cmc
or
cs
mov
lock
xchg
mov
sub
dec
inc
sbb
outsl
jnp
xor
in
and
mov
inc
idivb
popf
and
in
push
add
and
mov
leave
imul
jbe
fsubl
sub
inc
adc
xor
cmp
dec
add
push
fcoml
bound
push
mov
and
xchg
push
jl
ror
adcb
push
pushl
popa
shlb
xor
lods
xor
mov
mov
ret
call
jp
mov
xchg
jns
dec
inc
ret
sti
mov
lret
rorb
out
lret
test
ret
mov
in
sub
fwait
push
jae
lcall
jg
xchg
inc
shl
or
lret
inc
jns
or
call
insl
aad
hlt
or
xor
xchg
and
loop
aad
rol
pop
or
test
cmp
movsb
lods
mov
test
lds
inc
hlt
fsubrl
adc
adc
int3
imul
js
lea
fldenv
xor
negl
pop
loope
mov
or
aas
push
inc
jns
or
or
cmpsl
ss
insl
jns
add
xchg
mov
sbb
xor
ljmp
shr
mov
lods
jns
movsb
mov
pop
sbb
leave
adcb
inc
xor
xor
pusha
xor
out
popa
shll
les
sahf
mov
jl
repnz
test
out
shrb
inc
adc
scas
aam
push
pop
cmc
jecxz
pop
cs
xchg
inc
mov
jl
pop
in
shr
dec
push
inc
push
xchg
clc
outsl
fpatan
stc
mov
push
adc
jnp
in
pop
mov
fcoml
lret
stos
cli
testb
adc
out
add
mov
sub
mov
cs
dec
mov
sub
stos
loopne
cmp
jae
inc
outsl
pmuludq
das
jg
mov
mov
and
push
adc
inc
movsl
add
test
mov
loope
sahf
xor
jge
lods
dec
add
inc
ds
icebp
clc
mov
ret
loopne
inc
xor
arpl
xor
or
movsb
movsb
lret
ret
adc
adc
dec
and
int
dec
call
cwtl
dec
mov
mov
push
and
nop
lods
adc
mov
dec
shrl
rep
push
pushf
mov
pop
sub
jmp
in
dec
mov
das
dec
inc
and
pop
ja
or
xchg
fistpll
pop
scas
daa
cs
fidivs
sub
mov
stos
out
add
enter
movlhps
mov
popa
in
add
leave
nop
pop
pop
pusha
bound
jne
stos
adc
push
je
and
and
leave
inc
and
dec
sbb
leave
add
pop
lods
outsl
inc
gs
fiaddl
jp
cmpsl
and
stc
jo
faddl
push
stos
mov
cmp
lds
imul
mov
arpl
fnstcw
inc
mov
push
in
aaa
mov
mov
insl
adc
jmp
add
repnz
cs
mov
fcmovnu
arpl
fldl
pushl
and
fildll
sbb
test
out
push
out
sti
insl
loop
dec
in
pop
mov
rol
fwait
jae
xor
inc
lods
sti
lock
jmp
ds
pop
adc
hlt
adc
loopne
inc
outsl
fcomi
vshufps
dec
lcall
cmc
jp
fldenv
incb
pop
fwait
xor
shlb
push
bound
dec
xor
sbb
cld
mov
je
iret
enter
dec
test
sbb
mov
xlat
pushf
stc
movl
repz
jecxz
icebp
mov
push
mov
cmc
jnp
or
call
shll
push
iret
pop
push
jle
rcr
pop
or
es
adc
lcall
loop
test
cmp
push
call
call
add
adc
nop
jge
push
inc
jecxz
jno
and
movsb
in
daa
jbe
loop
fistpl
sub
mov
imul
in
fs
sarb
movsl
adc
or
and
fidivl
je
fdivs
xor
repz
js
rorl
clc
andb
dec
dec
mov
mov
ss
pop
pop
int
lret
ret
nop
mov
lret
movsl
out
add
adc
enter
mov
popf
test
aaa
fistps
scas
mull
mov
xor
xchg
repz
inc
xorb
dec
sbb
mov
xchg
in
addr16
mov
xchg
mov
mov
adc
sbb
std
pop
int3
and
lods
cmp
fists
lea
mov
outsb
dec
movsb
bound
dec
loopne
sub
dec
push
sub
je
xchg
jbe
into
pusha
pusha
or
in
push
sahf
adc
icebp
pop
ror
rcll
xchg
xchg
loope
cmp
or
mov
xchg
adc
shlb
xchg
or
daa
push
ret
mov
loop
xchg
mov
stos
ret
sub
imul
dec
jmp
popa
rol
mov
cwtl
sbb
add
jmp
pusha
mov
mov
aam
cmpsb
sub
mov
fmuls
or
cmpb
shrb
mov
dec
jmp
dec
xor
mov
sbb
cltd
stc
sub
stos
mov
mov
out
bound
xchg
out
sbb
outsb
inc
out
divb
dec
insl
sbb
or
xchg
jp
add
int3
out
fidivrs
pop
fdivrs
fidivrs
mov
cmpb
addl
jge
add
pop
or
test
dec
sahf
mov
xchg
inc
cli
stos
inc
test
aad
sbb
aas
stos
add
adc
dec
and
roll
jmp
mov
mov
push
cmpsl
cmc
stos
push
fstpt
or
xchg
rorl
dec
call
clc
mov
testb
sub
popa
in
je
cwtl
cmp
aaa
adc
pop
pop
and
pop
and
addl
je
add
adc
jbe
xchg
repz
push
incl
jl
rcr
sbb
jb
mov
insl
dec
data16
mov
sub
inc
xor
and
cmp
roll
nop
inc
test
push
cmc
movsl
sahf
ds
pushf
fstl
xchg
adc
ror
into
or
fldl
dec
loopne
shlb
push
popf
out
mov
imul
sbb
leave
repnz
mov
in
mov
shlb
and
add
jg
inc
sahf
push
test
popa
lds
arpl
push
lock
jae
adcl
push
fiadds
fxch
psraw
sbb
mov
fwait
sbb
xor
push
js
dec
push
stos
xor
scas
or
fnsave
sub
scas
hlt
add
xchg
ds
fmulp
std
rclb
stc
dec
int
jnp
inc
jmp
fs
jae
sbb
test
lea
ljmp
jmp
pushf
inc
sub
jecxz
daa
andl
xchg
add
ja
xchg
jns
jl
addr16
mov
mov
xlat
pop
cmp
movb
dec
ret
movq
mov
xchg
jmp
xchg
cltd
mov
sti
pushf
stc
jae
daa
add
not
stc
stc
aas
adc
pop
pop
std
and
ljmp
jne
mov
push
lods
pop
lds
call
or
into
shrb
or
xchg
loope
add
and
mov
in
xchg
sbb
pop
inc
mov
movsl
ficompl
rcrl
push
push
cmp
xchg
adc
fiaddl
sub
lret
xor
push
push
sub
sub
aaa
jecxz
add
dec
sbb
add
mov
mov
and
test
rcr
or
mov
ret
push
mov
and
mov
jbe
xor
mov
adc
inc
mov
jnp
or
xchg
jmp
cmp
out
jecxz
mov
lcall
adc
aaa
lods
cltd
mov
div
xor
jg
or
sub
dec
sub
and
jns
mov
int3
sub
mov
cmp
sub
imul
jnp
or
popf
lret
insl
ds
xchg
jle
push
add
sub
bound
jnp
filds
sub
mov
add
or
lret
or
xchg
add
cwtl
or
mov
pop
lock
notb
and
and
mov
dec
ds
xchg
cwtl
and
adc
daa
mov
cwtl
mov
and
xchg
inc
outsl
imul
arpl
jbe
mov
or
test
out
mov
add
mov
fs
cmp
push
cs
cwtl
jo
lahf
push
fists
or
fs
and
mov
and
insb
call
push
and
cmp
mov
or
push
pop
js
mov
add
pop
jb
push
cmpsb
div
cmp
aas
sbb
sbb
mov
push
je
cmpsl
inc
repz
rcr
inc
in
stc
ja
mov
cmp
dec
sbb
scas
mov
and
and
xchg
mov
jnp
cltd
ss
fists
jp
add
test
fcmovbe
jae
lock
add
negb
sbb
add
adc
pop
scas
mov
jns
fs
adc
sahf
jne
adcb
cmpsb
jmp
mov
adc
jbe
mov
xor
jno
add
mov
les
insb
insb
mov
mov
dec
lcall
arpl
xor
xchg
push
jne
js
mov
jge
popl
aaa
jno
fmull
test
ljmp
scas
out
jecxz
pop
les
inc
in
loop
loop
inc
fcompl
mov
in
hlt
into
stc
out
outsl
leave
sub
cmp
sub
cwtl
test
xorb
xchg
test
out
push
mov
push
test
push
jge
jnp
mov
movsl
mov
sbb
pop
push
add
mov
test
cmpsb
push
xchg
std
and
adc
leave
repnz
lret
mov
mov
sbb
cmp
cwtl
ror
sub
xorl
ljmp
push
adc
imul
out
daa
sub
or
jl
xor
call
loope
out
repnz
dec
and
nop
jmp
fidivs
adc
xor
shlb
cmp
jno
fadd
mov
push
ljmp
mov
inc
aas
mov
lahf
dec
aam
xchg
rol
add
lock
inc
sub
cld
dec
jmp
pusha
out
adc
in
cmp
pop
cli
aas
sahf
add
inc
outsb
push
pushf
popa
in
in
push
or
and
arpl
push
inc
sti
mov
xor
ss
test
pop
repz
mov
shrb
into
mov
in
and
ret
mov
clc
dec
cmovns
or
cmp
and
push
cmpsl
add
adc
or
adc
mov
add
and
cmc
aam
dec
dec
adc
pop
fdivrl
je
lcall
lret
xlat
and
xchg
xor
out
jecxz,pt
add
fs
xchg
mov
enter
sbb
loopne
imul
fwait
and
mov
int
cld
mov
repnz
or
jbe
xchg
mov
in
jmp
repnz
popa
fs
out
std
cmp
adc
jb
push
inc
xchg
dec
insb
mov
sbb
push
mov
ja
fimuls
mov
aad
movsb
mov
punpcklbw
add
ljmp
adcb
push
add
adc
rcrb
jl
ret
or
in
mov
out
mov
ds
mov
and
jmp
sbbl
or
out
imul
daa
xchg
les
inc
insl
pop
pop
insl
cwtl
push
add
jbe
or
cs
lahf
dec
inc
hlt
fldt
rolb
sahf
xor
mov
aaa
aas
sub
stc
cs
cld
sahf
pushf
repz
mov
jge
fs
adc
mov
pop
dec
and
pushl
rcl
je
push
pop
les
mov
and
arpl
or
aam
mov
insb
inc
dec
mov
dec
sahf
push
test
arpl
sbb
dec
sub
lds
aaa
out
cmp
inc
shrb
push
cmp
scas
arpl
jne
rorb
fstpt
cld
sbb
mov
adcl
inc
je
jmp
sahf
inc
sbb
and
sbb
cmpsl
loopne
and
testb
inc
sub
adc
xchg
add
aad
rol
pop
pop
nop
mov
ss
and
ljmp
adc
xchg
xchg
push
loope
and
mov
mov
out
cmp
sub
mov
movd
mov
in
daa
ret
dec
fadd
xchg
ret
jno
sahf
inc
pop
out
jo
stc
clc
pop
pushf
imul
mov
mov
cmpl
popa
test
adc
dec
mov
push
adc
fucomp
outsl
shrb
clc
adc
ss
imul
pusha
xor
push
and
bound
sub
andl
enter
push
mov
popf
negb
lods
mov
scas
popf
loop
test
add
outsl
sub
cmp
popa
es
dec
aas
pusha
fisttps
test
out
popl
pop
jae
sbb
inc
sbb
dec
bound
push
xor
movsb
dec
loope
bound
sbb
jno
dec
inc
testl
hlt
lret
jns
ja
xchg
add
push
jnp
daa
inc
stos
pop
jo
imul
push
test
jp
ror
push
les
icebp
mov
ljmp
add
pop
or
mov
push
into
inc
cmpsl
fdivl
xor
mov
inc
sbb
jg
xorb
sbb
fcmovne
lods
mov
jne
ds
out
inc
fiadds
xor
add
sub
inc
sahf
fdivrp
arpl
lods
push
ret
add
xchg
jle
push
std
xorl
mov
adc
in
xchg
sbb
sub
xchg
shl
xchg
pop
jo
add
mov
sub
pop
xchg
int
outsl
cld
inc
push
inc
outsb
mov
inc
adc
xchg
pop
ds
dec
dec
mov
lret
out
cmp
pop
cmp
inc
pushf
mov
push
hlt
sub
inc
outsl
push
push
clc
jle
fistpll
sbb
lcall
call
roll
sub
jo
lds
adc
cmp
lea
arpl
push
int3
mov
push
dec
sbb
ret
pop
push
mov
push
fadds
pop
in
jnp
or
sub
dec
sahf
jns
stc
shl
mov
dec
outsb
mov
push
push
arpl
mov
pop
xchg
sub
stos
xchg
mov
daa
enter
jo
xchg
jecxz
sub
add
out
popa
sub
push
xchg
cmpsb
popf
mov
jl
push
pop
lahf
lods
ret
int3
and
mov
mov
cmp
push
sbb
xchg
sbb
mov
shll
jg
and
enter
smsw
xchg
or
mov
test
aaa
mov
mov
sub
sub
movd
sbb
iret
push
das
clc
je
in
test
dec
loopne
xor
and
add
shrl
jne
xor
jge
movsb
xchg
in
inc
movsl
mov
adc
cmp
or
mov
imul
mov
jl
mov
in
js
mov
es
jecxz
addl
pushf
hlt
adc
pop
arpl
scas
ljmp
dec
data16
lds
mov
aaa
rcr
mov
sbb
push
xlat
fsubrl
mov
jg
pop
push
fadds
lea
cmove
dec
int3
mov
mov
mov
add
ficoml
inc
stc
fst
insb
in
in
lcall
out
subps
in
rcll
pop
and
negl
repnz
outsb
xchg
shlb
inc
insb
add
shlb
incl
roll
dec
test
xchg
js
sti
lock
sub
jno
insl
imul
mov
movb
mov
mov
jno
push
in
fcomp
scas
dec
push
insb
and
cld
ret
dec
pop
js
inc
daa
add
xchg
mov
popa
cmp
xor
inc
xchg
pop
xchg
mov
xchg
outsl
aas
shll
push
aas
add
cld
sub
rorl
mov
xor
andb
xchg
mov
cmp
mov
data16
and
xchg
pop
sahf
in
cld
lret
cli
sbb
dec
sbb
jg
pop
and
mov
loopne
aam
add
pop
arpl
sbb
insl
es
mov
push
dec
fcoml
xchg
aad
rcl
pop
jb
jae
arpl
xchg
adc
test
ds
mov
lret
dec
mov
daa
scas
js
push
enter
mov
push
test
hlt
fistl
xlat
xchg
aas
inc
jne
popa
ret
dec
loop
pusha
jbe
xchg
pop
cmp
xorl
inc
sbb
adc
sbb
mov
and
popa
mov
jl
inc
sub
and
movsl
adc
push
sbb
dec
add
fdivrl
pop
sbb
data16
mov
and
push
cmpsb
push
pop
mov
outsb
out
mov
and
pop
pop
dec
xor
es
adc
pop
nop
sbb
rorl
rcll
mov
mov
adc
cmpl
stos
jmp
push
add
xor
jno
mov
xchg
inc
mov
push
dec
mov
sub
or
gs
xor
pop
inc
cmp
jl
int3
mov
inc
int
mov
jmp
cs
dec
aas
add
add
pop
mov
repz
cmp
or
insl
push
sbb
lret
test
je
xorl
add
mov
outsb
cmp
xchg
jbe
sub
sti
sti
and
adc
dec
fcomps
xor
dec
cmc
sbb
sub
adc
nop
jg
in
fbld
sbb
das
test
lods
sub
fsub
negb
aas
xchg
cmp
pop
fisubrs
out
fsubr
sti
push
sbb
fwait
add
pop
cs
jg
in
scas
roll
push
push
adc
xor
mov
cld
movsl
out
ss
ret
in
xlat
cmp
push
shrl
xchg
inc
das
push
jnp
insl
adc
mov
add
iret
add
loop
and
mov
aaa
jecxz
dec
dec
sbb
pop
repnz
dec
mov
sbb
ljmp
dec
push
cwtl
into
cltd
xor
cwtl
test
cmpl
cmp
sub
inc
jb
pop
arpl
xchg
fisubrl
xor
sbb
cs
rcll
in
icebp
addr16
lea
or
sbb
loop
faddl
xchg
out
in
fists
imul
inc
pop
bound
dec
push
mov
stos
inc
jo
jnp
mov
xchg
mov
cmpb
das
imul
cltd
mull
inc
jg
leave
push
test
ret
xchg
das
sti
in
icebp
mov
or
cli
mov
sub
pushf
and
test
mov
xor
cmp
mov
fldcw
enter
cmp
jb
fisttpll
xchg
scas
inc
mov
cwtl
insb
jne
in
fnstenv
xchg
shlb
dec
lcall
xlat
repnz
cltd
xchg
repnz
xor
cmpsb
fisttps
inc
mov
stc
out
push
pop
sbb
pop
add
jg
inc
add
cmp
bswap
xchg
mov
es
or
sahf
lock
or
dec
dec
pop
pop
pop
jle
dec
inc
in
pop
add
mov
adc
aas
insl
testl
xlat
jne
lock
jle
mov
js
pop
xchg
mov
or
cmp
stc
or
cli
js
iret
sarb
ja
or
lcall
dec
out
shrl
jne
mov
mov
test
and
jns
pop
jb
adc
push
dec
jae
lods
and
dec
outsb
fdiv
inc
movsl
int3
js
loope
cwtl
jg
dec
mov
cmp
jmpw
out
dec
sub
jg
iret
or
pop
pop
jbe
push
dec
sub
daa
jecxz
xchg
mov
shl
int
mov
cmp
lods
loopne
xchg
pop
test
mov
cld
fscale
es
push
or
cmp
shrb
mov
push
dec
or
xor
callw
push
mov
in
xchg
sbb
and
pop
out
add
push
mov
outsl
outsl
pop
dec
clc
les
sbb
xor
mov
lock
xchg
pop
test
push
pop
push
rolb
loopne
movsl
fsts
test
shrb
jle
out
das
jne
push
inc
push
jge
xchg
data16
lahf
add
dec
sbb
ret
ds
jmp
in
mov
sahf
xchg
out
xchg
pop
push
pop
mov
fisubs
scas
jo
bound
xchg
or
inc
mov
or
dec
dec
pop
insb
inc
cli
and
mov
and
dec
jle
or
jmp
imul
push
push
dec
aam
push
in
pop
sahf
pop
dec
xor
mov
std
and
cmp
pop
aaa
pop
fchs
xor
les
mov
fadd
flds
cltd
sub
aad
jle
fldenv
sbb
loope
add
jg
cmp
in
adc
mov
lcall
lcall
ja
test
test
xor
loopne
cld
push
mov
adc
mull
xchg
jne
loope
lahf
mov
cltd
repz
sbb
add
bnd
mov
sbb
adc
popf
stos
pop
mov
int3
fnsave
xchg
or
sbb
addr16
xor
and
mov
int
gs
mov
leave
mov
jbe
enter
clc
add
enter
fistl
outsb
fcoml
out
loopne
lea
insl
jns
jo
cmp
mov
pop
lea
push
in
pop
ret
int3
stos
outsl
ljmp
cmp
sarl
sub
inc
cmp
ficompl
dec
cmp
inc
sbbl
aad
mov
je
imul
subb
or
sbb
les
or
movsl
add
pop
jb
fcmovbe
lds
sbb
sbb
mov
leave
fcompl
loope
add
dec
fcompl
in
lods
call
sahf
and
xor
pop
or
insl
shlb
sub
push
add
lcall
mov
cwtl
mov
adc
test
sub
dec
push
xor
xchg
jg
pop
mov
add
mov
mov
rcll
in
enter
jp
leave
fisubrs
mov
pop
and
lods
xchg
mov
dec
stos
in
dec
sahf
int3
adc
mov
sub
xchg
jmp
dec
add
in
mov
xorl
es
lock
xor
ss
adc
mov
sarb
sub
faddl
out
cwtl
scas
or
cmp
xor
outsl
cmpsb
jb
es
jmp
cltd
popa
xor
add
mov
adc
jb
pushf
pop
mov
lds
pusha
aaa
dec
outsb
out
jbe
xchg
sti
rcrb
jmp
inc
stos
jmp
push
push
pop
aas
shll
cmc
cmpsb
lcall
sbb
fwait
push
jmp
ljmp
fmul
mov
adc
lods
lret
out
mov
cmp
push
sub
xor
adc
nop
and
mov
cmpsl
mov
cmp
sbb
and
cli
daa
out
out
rcll
dec
xor
and
add
data16
out
cli
adc
mov
xchg
mov
ret
xor
inc
fcomp
out
in
and
mov
pushf
in
sahf
push
mov
les
inc
lods
lret
mov
shrl
andb
out
xchg
xor
pop
mov
roll
out
lds
flds
jl
push
in
mov
lods
xchg
pop
mov
jnp
sub
dec
jl
xlat
cmp
scas
and
gs
mov
pop
fcomps
out
jle
dec
push
cmpsl
das
shlb
pop
lcall
add
and
fs
mov
imul
push
xor
or
loopne
scas
push
outsb
dec
and
movsl
cmp
lcall
jp
ficoms
add
inc
addb
xchg
pop
loopne
xchg
adc
push
fiadds
imul
fs
or
jnp
mov
and
pextrw
fistpll
mov
push
fcmovnbe
test
leave
mov
arpl
call
mov
daa
and
pop
dec
adc
jmp
push
jno
rcll
ljmp
jo
iret
and
or
jecxz
inc
ret
fs
and
ja
xchg
sub
push
push
pop
jl
test
mov
clc
pop
or
push
lahf
pop
sar
jne
aad
inc
sar
xchg
inc
out
test
xor
adc
mov
cmp
mov
mov
imul
iret
or
mov
sub
cli
ret
sbb
mov
mov
mov
push
push
push
fs
into
adcb
mov
ja
adc
test
push
out
ret
xchg
pop
aad
movl
call
xchg
jnp
xor
mov
gs
lcall
movsl
faddl
in
negl
jmp
xor
mov
xchg
xor
movl
pop
cmp
addr16
cmp
pop
scas
pop
pop
xchg
push
sti
int
outsb
lret
les
pop
mov
pushf
lds
dec
or
lods
rcll
cld
or
push
in
fstpt
insl
sahf
dec
add
adc
ljmp
cltd
stos
js
cltd
sub
push
dec
mov
fidivrl
and
push
es
mov
stc
xor
clc
les
hlt
fwait
or
es
xchg
sarl
test
dec
pop
dec
rol
mov
xchg
into
popa
sub
mov
mov
iret
or
nop
lcallw
mov
rcll
add
out
repz
adc
hlt
mov
ss
hlt
cwtl
and
rep
cmpsb
fisubrl
push
jmp
adc
add
dec
mov
push
data16
mov
lret
dec
cs
mov
dec
mov
ljmp
cmpsb
mov
inc
dec
fisttpll
popf
rcr
push
jnp
mov
mov
or
sti
sub
xor
cmp
in
jle
mov
mov
xchg
xchg
pop
arpl
pop
fs
jle
xchg
mull
jae
in
jne
dec
stos
out
fidivrs
je
and
pop
jle
xchg
daa
in
imul
imul
push
xorb
xlat
movsb
orb
and
addr16
shll
push
add
push
xchg
inc
cmp
push
es
mov
in
or
mov
cmp
into
movsl
mov
lret
movsl
dec
push
or
movsl
out
pop
outsb
repz
jo
lahf
fs
lods
sub
pop
fsubrs
cld
mov
in
dec
push
adc
scas
in
pop
mov
dec
cltd
shlb
mov
cmp
std
mov
mov
test
rclb
inc
test
out
outsb
mov
pop
daa
dec
dec
adc
adc
push
outsb
jno
xchg
leave
push
std
mov
popl
xchg
aam
movsl
cmp
icebp
in
add
push
mov
out
dec
cltd
and
fidivl
iret
sub
push
jno
daa
push
pop
lsl
stos
sub
xchg
jge
cmovae
and
ja
fldenv
shll
fisttpll
mov
repz
das
mov
or
mov
shl
jno
add
ja
or
adc
sbb
movsl
in
sub
mov
or
pop
enter
fiaddl
lahf
jo
xchg
or
ljmp
mov
out
jmp
fcomps
stos
std
push
mov
push
ljmp
pop
imul
fsts
jo
bound
ja
pop
stc
mov
pop
stc
inc
mov
push
cmp
addr16
inc
inc
add
lock
cmp
mov
ret
ds
cwtl
jmp
dec
sbb
loopne
sub
cmpsl
jo
push
movsl
loopne
xlat
mov
pop
adc
cli
test
jae
div
mov
push
push
inc
or
sub
mov
sahf
adc
add
in
outsl
aad
xchg
inc
mov
adc
pop
les
mov
cmp
push
popa
lock
cmp
pushf
pop
push
add
dec
jbe
arpl
mov
xchg
cmp
outsl
pop
scas
xchg
dec
jle
xchg
movsb
lahf
pop
xor
clc
popa
in
test
pop
jne
adc
bnd
add
mov
std
test
dec
repnz
xchg
ja
in
loope
pop
gs
fucomi
inc
insl
mov
adc
mov
insb
mov
movsl
lods
add
inc
adc
jnp
lret
cmp
jle
or
mov
rcl
sti
scas
pop
mov
roll
add
sti
loopne
popa
sar
and
sti
xor
mov
dec
mov
lea
jl
mov
mov
ds
push
test
adc
xchg
sbb
jmp
ss
xor
js
clc
cmp
in
sti
js
stos
sbb
xchg
ret
adc
in
push
and
sahf
mov
dec
mov
dec
enter
jecxz
popa
or
cs
subb
mov
sub
fcompl
cmp
add
cltd
stos
sbb
jnp
int
mov
popa
cwtl
repz
ret
sbb
fistpll
out
lods
ds
idiv
out
gs
popf
adc
adc
mov
mulb
imul
out
pop
mov
inc
sbb
or
and
loop
mov
mov
int
push
mov
faddl
jg
cmpsl
inc
add
or
and
lods
push
loop
aad
fldt
sbb
xor
inc
sbb
pusha
fmul
and
lock
xchg
xor
enter
imul
ja
mov
test
test
mov
xchg
lds
movl
and
push
pop
push
rclb
sbb
mov
pop
scas
cmpsb
mov
jns
mul
add
inc
cmc
ret
pop
test
xchg
cs
xor
cli
je
popa
cmpsb
jmp
ss
mov
ja
cwtl
or
repz
cmp
in
aaa
aad
pop
fcomp
and
in
scas
shrl
or
jae
sahf
pop
popa
mov
sahf
mov
sti
mov
inc
shlb
inc
xor
in
add
sbb
rcll
cli
hlt
dec
push
imul
out
inc
insl
and
adc
pushf
mov
sub
pop
faddl
dec
roll
sbb
aad
xor
mov
pop
mov
fcompl
fistpl
or
test
push
jo
adc
btr
mov
jl
lds
mov
and
aaa
pop
adc
lret
or
sub
scas
xor
int3
xor
testl
dec
xchg
jmp
notl
mov
jle
xor
adc
add
imul
pop
inc
jmp
out
imull
cmp
int
and
mov
das
repnz
jp
push
nop
outsl
ds
mov
sbb
jg
out
dec
inc
or
mov
adc
pop
sub
clc
mov
sbb
xor
stos
rcll
sbbl
mov
sbb
xor
push
dec
in
xchg
cmpsb
dec
jp
adc
cli
ss
mov
push
jl
mov
and
sub
mov
adc
btr
or
outsl
and
addr16
sub
cmp
pop
cmp
mov
leave
aas
pusha
leave
jne
pop
hlt
and
inc
fmull
pushw
mov
mov
int
push
hlt
jg
loope
dec
les
mov
sub
imul
jnp
sbb
sub
push
fnstenv
pop
cmp
or
pop
sub
mov
or
clc
pop
or
mov
test
pop
cmp
sbb
subl
inc
repnz
scas
mov
dec
sub
subb
mov
sti
mov
js
xchg
sbb
stc
and
sub
in
addr16
and
or
xor
out
adc
movsl
add
lret
sbb
pop
xchg
bound
call
mov
pushf
popa
push
test
js
push
pop
addr16
addl
xchg
xor
scas
test
nop
enter
setns
mov
sbb
jp
shl
mov
xor
loop
in
or
nop
lods
mov
subb
jmp
into
pushf
enter
adc
pusha
push
or
add
mov
in
jge
pop
ret
sub
lods
mov
scas
insb
cmp
test
rclb
out
adc
push
cmp
rol
inc
jg
in
xchg
or
outsl
ror
and
sub
ja
sbb
lds
js
insl
je
jae
xor
aas
stc
pop
adc
popa
sbb
push
in
cmp
out
cmp
call
adc
or
and
sub
and
xchg
stos
popf
add
imul
mov
out
cmp
mov
insb
sbbb
ja
pop
jp
mov
pusha
ds
arpl
xchg
adc
and
pop
dec
mov
es
or
inc
enter
cmp
pop
ror
and
mov
jecxz
and
daa
add
sub
cmp
pop
inc
pop
aas
xchg
jge
pop
jecxz
adc
xchg
push
fadds
cmp
xlat
sub
bnd
test
pusha
cmpsl
pop
xor
pop
scas
stos
lahf
pop
cmp
jmp
and
mov
icebp
jle
jmp
dec
dec
stc
inc
mov
pusha
mov
rcrw
xor
mov
jne
inc
scas
jno
stos
adc
mov
inc
ror
jl
repz
add
push
sub
fisttpll
push
xchg
sahf
or
lcall
daa
loopne
bound
enter
pop
adcb
jbe
dec
fucomi
call
or
jl
inc
pop
mov
add
xor
rolb
jle
xchg
inc
and
pop
stc
xor
addl
push
fsubl
divl
xchg
push
in
push
vpunpckhbw
jle
shrb
fisubrs
sbb
mov
dec
push
rorl
daa
popa
add
imul
cmp
xchg
into
std
cmp
leave
imul
push
ljmp
int
mov
fldz
xor
jle
mov
movsb
jb
mov
mov
push
clc
cmc
pop
push
dec
xchg
jecxz
jae
inc
sar
rclb
cli
daa
push
adc
xor
enter
xor
adc
ficoml
and
rorl
pop
lds
fbstp
stos
cmp
inc
add
movsb
or
dec
std
xchg
dec
fdivl
cmp
jno
out
aad
loope
jg
push
push
xchg
jge
ficompl
xchg
push
xchg
stos
pop
cs
scas
lods
inc
sub
xor
dec
push
mov
decb
fcmove
jbe
lods
lcall
mov
sbb
mov
ds
mov
dec
stos
clc
push
loopne
dec
and
aas
xchg
test
adc
fadd
cmp
xor
xor
int
mov
jne
xor
ss
or
stos
push
rcrl
inc
dec
mov
sub
mov
jnp
push
rcl
rcrl
push
dec
testb
test
sbb
sbb
int
jb
pop
insb
loopne
insl
lea
inc
enter
enter
lret
sbb
stos
js
dec
xor
in
push
cli
sahf
fnstenv
dec
nop
mov
lods
fimuls
mov
pop
stos
jp
xchg
in
push
push
daa
inc
icebp
push
mov
and
sub
mov
int3
inc
push
mov
cld
dec
in
out
pop
arpl
push
pop
popf
cs
jecxz
cltd
sub
gs
jae
stos
xor
jnp
add
adc
mov
ljmp
ja
sti
pop
imul
push
loopne
lock
imul
sbb
sbb
dec
lret
lods
mov
test
mov
leave
mov
jmp
mov
ljmp
push
les
adc
push
scas
dec
xchg
repz
pop
and
lahf
popf
mov
jg
js
out
push
cmp
add
jge
ljmp
movsb
xchg
pop
dec
cmp
loop
sbb
xor
cmp
adc
mov
jbe
inc
pop
dec
mov
or
xor
sbb
xor
insl
mov
jge
xchg
mov
lock
pop
lods
lret
jecxz
imul
aam
jnp
clc
and
filds
inc
mov
pop
repz
pmulhuw
pop
ja
xchg
mov
into
sahf
xchg
sarb
push
push
fs
mov
js,pt
cmp
lds
mov
inc
ficoml
mov
iret
pop
dec
jae
mov
imul
pop
mov
adc
xor
xchg
in
mov
test
or
lds
jge
outsl
mov
je
sub
dec
pop
ficomps
dec
sub
cli
adc
dec
addr16
mov
js
adc
cld
and
xchg
cwtl
lods
out
test
sbb
xlat
jg
jno
ja
push
jl
add
enter
test
in
cs
in
and
in
imul
adc
addr16
roll
add
adc
movsb
scas
dec
sbb
rorl
xchg
cmp
dec
gs
push
lcall
dec
or
inc
mov
cmc
clc
std
jle
rcrb
mov
repnz
dec
bound
mov
ds
xchg
jge
cmpsb
in
int
out
mov
int3
ret
mov
test
fcoml
xchg
adc
popf
jecxz
aas
mov
in
js
sti
andb
jg
in
rolb
jae
rcl
xor
outsl
aam
cmp
and
andl
jae
mov
leave
mov
xchg
mov
lods
test
jle
data16
or
test
fs
push
push
sub
ret
jne
dec
ja
cmpsl
push
rorw
dec
mov
sbb
cmp
aas
pop
lds
mov
lea
dec
int3
ret
sub
ret
sbb
cmpsb
sbb
outsb
clc
jmp
push
jle
sbb
cmc
imul
rcr
and
std
popf
jno
rorb
stc
push
fidivl
insb
outsb
push
ficoms
or
pop
push
repz
cmp
cmp
sub
es
or
cwtl
jg
fwait
into
inc
cmp
sub
mov
cmp
sub
dec
mov
xor
dec
sbb
inc
repnz
sub
dec
mov
xchg
mov
rclb
inc
adc
adc
in
daa
in
mov
fstl
adc
clc
inc
inc
ret
and
fnstcw
repnz
or
jb
jle
cs
outsb
mov
mov
std
mov
push
or
cmpsl
cmp
mov
push
dec
loope
jo
movsl
orl
out
xor
sub
sub
outsb
push
mov
clc
icebp
repz
and
mov
test
and
sbb
and
push
xchg
mov
add
inc
push
ljmp
lahf
sahf
and
push
mov
xlat
push
clc
lret
inc
xor
inc
pop
loope
sbb
xchg
jmp
je
cmp
mov
shll
jge
pop
pusha
mov
jp
imul
dec
push
jb
fwait
std
stc
rsm
inc
xor
mov
mov
mov
and
stc
mov
icebp
insb
sbbl
pop
scas
mov
mov
sbbl
and
cmp
aam
dec
cmp
jb
cs
aas
mov
test
jae
lea
mov
mov
sbb
inc
data16
mov
inc
aas
mov
jae
rolb
push
rolb
cmpsb
adc
in
mov
and
fcmovbe
jle
jae
sbb
pop
fstl
shll
aad
xchg
sub
mov
xchg
adc
shrl
repz
xchg
addb
sahf
imul
popa
adc
test
dec
xchg
xchg
loop
sub
xor
or
jno
out
push
pop
popa
fcoml
push
inc
add
cmovo
popa
mov
mov
out
dec
dec
xchg
sub
enter
mov
xchg
popa
adc
sbb
pop
mov
aad
push
push
idiv
xchg
xchg
fsubrs
ss
test
pop
addl
popaw
or
lea
dec
xor
or
fildl
sbb
mov
xchg
test
test
mov
or
sub
inc
and
xor
lods
sub
and
loopne
fsubrl
xabort
mov
xchg
mov
push
ret
jg
sbb
mov
push
sub
cmpb
mov
add
xchg
mov
xlat
jmp
xor
in
jno
jo,pn
in
shlb
jns
ret
inc
imul
iret
ror
mov
or
dec
gs
mov
shll
cmpsb
push
arpl
inc
adc
mov
jb
arpl
div
mov
sbb
pop
addr16
mov
int
or
add
icebp
push
mov
rolb
cmp
rorl
arpl
cmp
pushf
dec
pop
int
xchg
insl
inc
dec
sbb
adc
push
sub
mov
test
or
in
sbb
dec
or
les
into
popa
das
cvtps2pd
popf
jb
xor
addb
and
push
dec
dec
pushf
sarl
test
xor
mov
mov
mov
and
loope
dec
icebp
ret
pop
and
bound
scas
fwait
mov
ja
or
push
mov
pop
sbb
adc
xchg
jbe
cmpsl
mov
add
sub
enter
mov
sub
inc
mov
out
rcll
cmc
pushf
jmp
pop
std
ror
sbb
fimuls
outsb
loop
sbb
inc
in
in
sub
push
xor
jne
add
xchg
daa
cs
pop
call
push
fstpl
jns
mov
xchg
fmull
das
xor
sarl
imul
mov
sbb
rolb
scas
test
lret
pop
cltd
test
in
cmp
mov
movsb
xchg
repnz
cmp
popa
mov
mov
not
cmpsb
sbb
pusha
cltd
fsts
dec
notl
jmp
repnz
adc
out
add
ds
std
or
mov
mov
sbb
and
loop
xchg
pop
sub
fsubrp
and
pusha
fsts
or
cmc
or
popa
sub
je
or
pop
dec
iret
fidivs
lret
adcl
movsb
pushf
gs
inc
xor
jl
and
cmp
adc
insb
and
subb
ficoml
fsubrp
mov
aad
dec
jp
jg
imul
sbb
mov
mov
js
push
adc
fwait
add
scas
mov
ja
icebp
loope
in
cmc
inc
in
mov
xor
leave
repz
inc
jp
adc
cmp
cmp
pushf
hlt
sti
xor
idiv
jnp
and
sbb
push
pop
ds
out
daa
cvtps2pi
xchg
xchg
les
ljmp
mov
ret
or
xor
lret
cwtl
adc
rolb
imul
enter
dec
xchg
lock
sbb
xor
outsl
out
cwtl
xchg
sbbl
pushf
sub
clc
shl
push
insb
cwtl
scas
mov
inc
mov
jp
imul
adcl
lods
mov
push
cmp
mov
pop
loope
push
fmuls
xchg
outsl
nop
xchg
pop
test
push
jg
mov
and
jle
xlat
ficomps
xor
movsl
sbb
jge
icebp
subl
add
popf
dec
mov
xchg
gs
mov
inc
cmp
or
mov
out
xor
xchg
je
push
imul
sti
cmc
loop
stos
test
mov
repnz
push
mov
mov
ss
pop
inc
or
mov
pop
int3
push
sbb
mov
int
jmp
ljmp
mov
in
xchg
and
jno
aam
mov
rclb
stos
test
jp
and
adc
mov
mov
jbe
push
xor
xor
mov
hlt
ret
inc
mov
xchg
fdivl
cmp
inc
out
fstl
xchg
mov
in
mov
mov
add
adc
out
sub
out
sti
movsb
ljmp
lds
mov
cmp
enter
xor
mov
xchg
mov
imul
dec
xchg
push
je
cs
ret
inc
gs
mov
insb
mov
and
add
push
push
imul
ljmp
cli
ds
dec
jb
inc
ljmp
lahf
imul
push
jbe
sbb
or
scas
jb
test
xlat
movsb
add
shlb
ja
scas
dec
insl
repnz
jo
adc
daa
cmp
loopne
mov
pop
push
ss
jge
pop
jl
mov
push
repz
sub
out
xchg
shll
test
inc
push
loopne
or
cmp
dec
jge
or
stc
cld
outsl
mov
mov
addb
ret
mov
scas
push
mov
fidivrs
out
fs
pop
jg
or
mov
push
icebp
push
in
sti
mov
mov
jle
pushf
lahf
shlb
mov
push
adc
shrl
cmp
orb
movsl
out
out
movsb
sti
cmp
and
pop
mov
scas
ljmp
test
dec
lcall
push
pop
fsubr
sub
or
mov
lahf
cmpsl
or
add
rolb
cwtl
fidivl
rorb
add
sub
mov
idivb
adc
das
pop
ficomps
scas
cltd
add
sub
cmc
icebp
dec
mov
xchg
mov
and
xchg
ds
icebp
int3
mov
push
lods
push
and
mov
mov
xchg
jecxz
fsubs
cmp
jp
jae
pop
and
aaa
pop
loopne
pop
dec
roll
mov
je
mov
repnz
filds
daa
mov
sbb
test
cwtl
fiaddl
push
cmp
addr16
adc
dec
arpl
repnz
pop
jl
test
push
sbb
push
mov
aad
fdivl
rcr
fimull
into
xchg
dec
popa
in
xor
pop
cmp
shr
sbb
or
movsb
repz
cli
mov
mov
pop
mov
xchg
fbld
xchg
sahf
iret
mov
mov
sub
out
stos
pop
adcb
mov
call
dec
sub
nop
xchg
pop
jnp
xchg
sti
or
iret
pusha
test
add
incl
leave
or
adc
push
vpandn
inc
lods
data16
xchg
and
sbb
or
and
xorl
aas
mov
insl
mov
rcll
das
push
sub
bound
lods
inc
mov
outsl
xchg
movsl
pop
push
cmp
int
andb
mov
or
add
out
lahf
mov
jge
cmp
pop
fimuls
ljmp
fiadds
lds
add
stc
clc
jmp
sbb
inc
sbb
mov
adc
mov
test
sub
inc
adc
insb
fcoms
sbb
lret
shlb
das
lea
shll
mov
in
sarb
mov
mov
jo
adcb
fdivrl
mov
cltd
or
cmpsl
push
or
mov
ljmp
xor
sbb
add
mov
jne
cmp
xlat
xchg
lret
mov
inc
sub
mov
lock
pop
shrd
jo
fisubrs
pop
jmp
or
mov
mov
or
mov
ret
cld
xor
ss
stos
lcall
inc
scas
js
xchg
mov
adc
push
adc
lret
pop
mov
int
loopne
push
js
ss
push
and
outsb
imul
mov
jg
addr16
sub
pop
popa
mov
jnp
jp
les
mov
loopne
sub
in
dec
gs
out
out
or
mov
or
xor
or
mov
icebp
cmc
lock
push
dec
mov
popl
pop
add
jne
cld
scas
fisubl
mov
or
push
jnp
stos
sub
or
les
xchg
push
mov
scas
repz
push
xchg
sbb
outsb
jnp
lds
loop
icebp
xchg
ss
pusha
into
insl
stos
mov
movsl
lea
or
data16
cmp
pop
sub
or
mov
xlat
cs
out
xchg
ljmp
out
sub
mov
div
mov
mov
lock
out
lock
cld
loop
xor
cmpsb
inc
or
jp
js
sbb
push
ja
jmp
fidivs
int3
adc
add
sub
scas
sbb
xor
icebp
loop
popf
fldenv
sti
cmp
xor
and
adc
mov
mov
cmpsl
jl
imul
pop
add
dec
popf
int
pop
insb
cltd
cmp
jbe
aam
mov
decl
sti
in
hlt
push
idivl
arpl
icebp
jnp
and
cmp
push
dec
mov
mov
loop
jl
jae
mov
adc
xor
push
mov
xchg
insl
add
cmp
push
lret
xchg
push
lret
lret
xlat
push
pushf
sub
mov
cmp
sbb
adc
mov
cmp
xor
stos
pushf
push
nop
or
cld
push
and
loop
adc
xchg
add
and
sbb
hlt
enter
xor
xchg
das
arpl
or
mov
cmp
inc
jb
push
cmpsb
jle
push
jns
andl
mov
mov
sub
mov
jnp
jo
inc
ja
shl
cwtl
push
gs
cmp
inc
pop
dec
or
std
push
inc
inc
sub
cwtl
push
out
stc
xchg
mov
push
push
pop
cmp
mov
roll
mov
ljmp
loopne
jb
sub
lock
ret
xor
aaa
jle
adc
scas
jnp
mov
dec
cmp
out
ljmp
mov
repz
cld
lods
std
jb
cmp
jne
sti
inc
xlat
scas
andb
call
mov
scas
pop
add
pop
adc
pop
inc
pushl
xchg
inc
inc
orb
add
bound
add
and
add
mov
into
xor
cmp
sbb
iret
orl
mov
sbb
add
sub
cmpsl
mov
out
out
mov
mov
clc
clc
cld
test
sub
jle
cltd
gs
daa
test
cmp
loopne
sbb
mov
js
nop
inc
sbb
xchg
or
pop
sar
sub
fmul
fidivrs
dec
jmp
cmp
int
pop
push
fidivrl
in
jno
scas
mov
push
sbb
icebp
out
cs
negl
je
add
inc
pop
sub
dec
add
pop
jl
bound
iret
cs
push
pop
add
cwtl
pop
ss
jne
mov
inc
repz
sahf
cmp
mov
mov
dec
sahf
or
lret
nop
jbe
aad
sbb
addr16
out
mov
test
xchg
dec
ficompl
mov
std
loop
jno
jecxz
sbb
test
bound
mov
push
and
cmp
or
xchg
push
in
loop
sbb
fs
hlt
adc
adc
maxps
or
insb
in
and
pop
or
call
push
fcmovnu
xlat
loop
dec
loop,pt
je
and
mov
sub
mov
xor
pop
pushl
push
lret
mov
iret
lret
and
imul
sbb
sbb
int
cmp
in
faddl
iret
gs
mov
add
aam
scas
ret
into
loope
mov
xchg
or
inc
mov
mov
dec
enter
rcll
add
pop
les
inc
xchg
fsubp
xchg
mov
push
cmpsl
insl
idivl
ds
xorb
add
clc
dec
callw
lea
ja
jp
insl
mov
pushf
adc
enter
aad
fdivl
add
lock
dec
mov
outsb
dec
addr16
lods
xor
ret
outsb
lock
xchg
push
test
pop
out
test
jmp
jle
push
int
insb
mov
dec
dec
insl
mov
call
jb
ds
add
shlb
jmp
sbb
sub
mov
rcr
sub
mov
mov
cmp
decl
xchg
sbb
repz
xchg
pop
cli
jecxz
add
int
jmp
mov
and
outsl
cmp
lods
mov
push
push
sqrtps
push
dec
sbb
adc
dec
leave
ja
ret
mov
jle
fimuls
in
xchg
sub
mov
cmpsl
movsl
mov
xor
xchg
cmpsb
xchg
jl
add
mov
dec
or
incb
and
dec
sub
data16
push
mov
mov
jae
jno
testb
xchg
icebp
fimuls
sti
insl
xor
or
imul
and
mov
out
jns
data16
and
ds
je
rcrb
lock
mov
push
adc
or
in
dec
sbb
adc
mov
mov
mov
inc
iret
pop
popa
enter
jno
mov
cmp
movsb
jnp
lret
jge
jo
subl
movsl
cmp
data16
mov
cld
sbb
enter
mov
sarb
aam
inc
ret
gs
mov
jg
adc
out
dec
pop
sbb
pop
and
ja
push
jl
sub
pushf
sub
mov
adc
jb
jns
cmc
cltd
pop
ja
inc
jno
stc
setae
or
xchg
popl
push
sub
es
and
mov
xchg
inc
movb
bound
test
jmp
dec
and
aas
shl
lret
cmpsb
and
aam
rorb
movsl
scas
in
std
sub
cld
xchg
cmpsb
inc
das
adc
sbb
idivb
and
sarb
iret
xor
and
aas
jo
test
in
push
xchg
push
lds
pop
cwtl
cmp
and
push
push
mov
xor
mov
daa
pushf
add
addr16
jo
cmp
push
aam
sahf
gs
jmp
sub
insb
test
jne
popa
or
dec
test
js
test
aaa
push
jge
lcall
fstp
pop
mov
lock
jne
jnp
in
jg
cltd
stos
pop
sbb
xchg
sbb
and
scas
ds
jl
sbb
push
orl
add
push
cmovge
mov
fnsave
xor
sbb
insb
enter
adc
sbb
sub
jge
insl
popa
dec
pop
repz
inc
cmpsb
jecxz,pt
or
xchg
mov
ret
sbb
and
je
fdivs
add
cs
fsqrt
dec
mov
sarb
jle
push
jo
push
push
lcall
xchg
pop
xchg
shlb
movsb
js
insb
and
adc
dec
es
lods
outsl
in
cmpsl
lret
cltd
sub
add
pop
insb
jae
aaa
dec
push
sahf
mov
iret
mov
icebp
or
fists
in
idivl
push
or
fnstcw
inc
loope
pusha
push
stos
cltd
repnz
cmp
imul
xchg
repnz
sub
loope
push
inc
and
cmp
mov
ficompl
lea
ja
mov
insl
and
cltd
pop
push
enter
ss
imul
ljmp
sti
or
iret
sub
cmp
jns
jnp
dec
jae
inc
arpl
jae
pop
jbe
arpl
pop
scas
fptan
ljmp
push
jb
insb
orb
pop
mov
xlat
dec
sub
mov
clc
xchg
lcall
xchg
mov
add
out
xchg
push
fildll
sti
dec
ss
lds
adc
lret
push
addr16
add
repz
cli
xorb
insb
inc
xor
push
arpl
jp
sbbb
les
mov
out
jnp
pop
popl
dec
popf
mov
clc
xchg
scas
cmp
daa
xchg
popf
shlb
sbb
inc
sbb
gs
jle
test
in
repz
cmp
arpl
mov
xchg
dec
adc
mov
mov
add
push
xchg
push
popf
dec
outsl
imul
mov
pop
fwait
mov
cmc
stos
lret
es
adc
cmc
xor
mov
pop
int3
adc
fisttps
loope
xchg
roll
cltd
imul
iret
outsl
xor
add
lock
leave
fnstenv
pop
pop
js
and
inc
lods
cli
xor
jne
push
out
icebp
push
xchg
movsl
jae
mov
repz
dec
push
sbb
and
lds
mov
xor
shrb
inc
pusha
shr
cmp
in
ja
repnz
xchg
pop
insl
add
test
jle
out
xor
aam
jb
adc
or
or
pop
pushf
or
arpl
fdivrs
pop
xlat
in
and
gs
sbb
push
pop
add
dec
in
int
jmp
shl
lahf
jp
pop
inc
int
ret
dec
or
sub
xchg
and
add
push
mov
xor
lds
jl
je
cmp
dec
fsts
les
fnstenv
pusha
sbb
add
mov
adc
push
mov
sub
dec
inc
popf
jge
sbb
scas
jecxz
xchg
movsl
push
mov
inc
idivb
xchg
sub
aas
mov
inc
in
aad
addr16
leave
add
push
or
filds
roll
xor
mov
push
repnz
jnp
adc
lea
xor
adc
popf
jg
mov
mov
or
xor
jmp
inc
test
outsb
std
or
mov
data16
les
sub
adc
mov
lock
or
lock
into
mov
push
cmp
sub
out
add
dec
pop
loope
pop
cmp
repnz
cmp
fidivs
es
into
pop
pusha
push
pushf
iret
dec
jns
push
push
rcll
adc
leave
ds
ss
mov
lds
fwait
mov
jne
inc
ret
push
pop
or
jmp
pushf
sub
test
mov
insl
int
cld
int
loope
add
cltd
sub
test
sti
aad
and
test
jmp
test
push
add
sahf
push
shll
lcall
out
lcall
ret
cmpsl
add
push
arpl
test
cmp
fcompl
fwait
cltd
inc
je
fstps
and
daa
adc
xlat
add
jmp
dec
aam
sbb
xchg
lret
cmp
xchg
pop
jge
mov
dec
scas
scas
xchg
out
repnz
bound
ss
adc
addl
divl
pop
jmp
inc
sub
and
fsubrl
fists
or
xor
sarl
and
movsb
jg
shlb
or
js
movsl
mov
mov
shlb
sti
fsubrl
xorps
sub
fwait
pop
popf
dec
inc
arpl
jmp
xor
popf
lods
or
idivl
lods
pop
frstor
xor
hlt
xchg
fsubr
aaa
es
mov
adc
push
sti
int
mov
sbb
clc
and
push
rorb
call
mov
out
addr16
aaa
xchg
arpl
mov
invd
stos
test
or
mov
jae
cmp
mov
pop
mov
push
aas
js
and
inc
push
cli
mov
xor
enter
push
dec
mov
xchg
cmp
xor
fyl2xp1
adc
pop
scas
imul
push
in
test
iret
mov
xchg
outsl
loop
lods
sbb
adc
aaa
sub
xorl
insl
xor
arpl
test
in
mov
loopne
shll
dec
aas
dec
hlt
sbb
xor
adc
ljmp
fsubrs
icebp
and
xchg
xorl
int3
lcall
mov
mov
stos
push
or
mov
jp
mov
lods
cmp
xor
lods
sbb
cmp
repnz
pop
ret
pop
dec
scas
cmc
mov
xchg
add
mov
movl
daa
arpl
ret
mov
int
pusha
popa
je
sbb
mov
push
mov
sbb
das
outsl
je
mov
test
movsl
ficoml
xchg
push
out
xor
rcr
cwtl
stc
movsl
xchg
xor
cmp
icebp
pop
in
jnp
jg
mov
mov
repnz
fcompl
loopne
sub
xchg
and
lcall
mov
push
andb
cwtl
shll
or
leave
pop
pop
jns
dec
jns
movb
inc
pop
pop
sbb
push
sbb
addr16
dec
jno
sbbl
repz
and
mov
jmp
push
aaa
pop
repz
push
loop
push
ljmp
mov
inc
pop
and
fstpl
jno
and
jae
pop
jbe
sbb
int
iret
loope
xchg
mov
push
out
cmpsb
fidivl
inc
sbb
shrd
shrb
adc
stos
xchg
jo
mov
jg
lret
mov
arpl
ret
popa
jae
xchg
inc
sub
pushl
subl
xlat
inc
nop
sarb
pop
or
out
push
stos
xchg
out
dec
mov
mov
leave
movsl
fistpll
dec
mov
xor
jp
mov
sub
into
mov
cmp
push
aad
mov
mov
out
cmpsb
push
push
jg
in
adc
xor
ljmp
incl
jl
xor
movsb
sbb
stos
fcmovnu
out
fnstsw
and
mov
imul
pop
rorb
jl
pmuludq
cli
mov
sbb
arpl
iret
fisttpl
push
inc
out
mov
or
scas
xor
adc
cmc
rorb
xchg
ficompl
test
xchg
mov
mov
sub
jbe
mov
cmc
outsl
sbb
icebp
mov
es
fiadds
mov
inc
and
testl
fisttpll
mov
movsl
add
and
stc
repnz
cs
dec
sbb
out
lods
out
sub
sbb
lcall
ljmp
ljmp
cld
and
dec
daa
fildll
dec
idiv
sub
jnp
mov
and
jns
adc
push
shl
mov
in
fwait
cmp
insb
pushf
repz
out
rcl
mov
pusha
pushf
cmpsb
mov
adc
lods
and
or
and
xor
pop
dec
notb
filds
imul
sub
in
sbb
cmc
and
in
int3
xchg
xor
cmp
into
dec
mov
adc
inc
aas
mov
add
rorl
or
imul
int
stos
or
aaa
mov
stc
inc
mov
push
push
or
xor
cmp
mov
stos
sbb
sahf
mov
in
sbb
mov
loop
cmp
sarl
fnstcw
mov
pop
ja
mov
add
jp
push
call
pop
and
mov
lcall
mov
mov
pusha
nop
jecxz
aam
pop
sbb
shlb
repz
mov
sbb
push
sub
push
sub
adc
mov
or
mov
adc
pop
data16
fdivrl
sbb
jbe
jle
lea
fucomi
dec
lret
divl
sub
pop
and
pop
into
xor
add
lock
fwait
xor
jg
pop
pop
adc
popf
mov
or
adc
adc
test
and
jp
push
adcl
pop
bound
scas
or
in
xchg
adc
sub
addr16
cld
into
inc
fiadds
adc
orb
cmp
push
into
mov
outsb
addr16
pop
cmpsl
out
cli
je
leave
jo
shll
out
lcall
test
jne
test
mov
test
push
cmp
ror
cmp
pop
cmpsl
lret
adc
cmp
aaa
gs
mov
sbb
loopne
ds
or
popf
sbb
loop
les
sete
pop
cmp
repnz
aam
sub
andb
cmpsl
testl
mov
push
and
popfw
nop
and
orl
lock
popa
xor
or
repz
jb
inc
jnp
sub
sub
dec
adc
jg
mov
lods
loop
inc
add
bnd
lret
mov
jnp
aam
jmp
int
jne
pop
sbb
sub
mov
lahf
lcall
xor
add
sbb
and
out
dec
pop
jb
sbb
popa
clc
es
aam
mov
inc
scas
iret
imul
addr16
mov
mov
push
cmp
sub
sbb
shlb
mov
rcll
pop
pop
jecxz
or
dec
mov
mov
lcall
inc
ficompl
cmp
jbe
repz
shl
test
cltd
sub
mov
ds
mov
js
pop
outsl
cmp
add
ljmp
pop
mov
push
leave
sbb
inc
sbb
sbb
test
pop
jp
test
data16
add
gs
mov
xchg
mov
out
pop
or
xchg
dec
fdivp
pop
mov
rol
lods
jg
push
xchg
daa
adcl
sub
into
in
jae
ljmp
push
pop
outsb
ret
lods
jmp
cmp
cmpsb
mov
jmp
les
mov
rcr
sub
sbb
add
add
cmc
imul
clc
popf
jecxz
pop
push
or
mov
pusha
test
cmp
outsb
movsb
and
inc
mov
repz
addl
adc
dec
and
push
call
imull
mov
out
pop
xorl
cmp
lods
into
das
dec
movsb
xlat
xchg
bound
xchg
stos
adc
push
arpl
jecxz
dec
mov
jecxz
lret
or
outsl
test
jl
or
jno
stc
adc
add
lea
dec
jl
fists
notl
cltd
mov
or
xchg
jnp
and
dec
leave
and
mov
int
dec
lods
add
xchg
pop
int3
fnstcw
sub
aas
popf
xor
and
aad
mov
sub
test
lods
leave
fs
aam
cmp
ljmp
das
inc
mov
mov
cli
decl
pop
or
xchg
xor
int
jns
and
mov
daa
inc
pushf
cltd
add
bsr
roll
inc
mov
fmull
jno
nop
test
movsb
addr16
pop
mov
mov
jne
cmp
aas
sahf
jae
sbb
jmp
sbb
and
daa
stos
fldl
rep
cmp
mov
push
bnd
stc
fs
jle
mov
mov
pop
push
lcall
das
test
pop
and
mov
filds
fldl
xor
mov
leave
ss
pop
fwait
or
je
out
pop
mov
and
pusha
sub
inc
push
arpl
sub
addr16
stc
and
mov
mov
mov
pusha
pop
xor
andl
pop
imul
ljmp
pop
popf
xchg
loop
cmpl
mov
cld
test
sub
sbb
xchg
dec
inc
and
dec
and
movsb
xchg
and
lds
sbb
stos
adc
cld
jecxz
movsb
pop
inc
cmpsb
jl
mov
sbb
jnp
pusha
sub
xor
xchg
pop
outsl
push
cmp
dec
sub
and
in
pusha
cld
fcomps
push
or
aaa
sti
pop
fstpl
xchg
xchg
sbb
lret
fdivrs
fcomi
lock
js
jp
mov
pop
mov
imul
pushf
adc
add
mov
adc
adc
fs
xchg
mov
mov
call
xor
jge
fmull
sahf
fmull
xchg
cld
mov
xchg
mov
xor
test
add
jbe
add
fwait
mov
dec
iret
push
.byte
sbb
add
dec
jecxz
sub
je
test
push
and
repnz
xor
adc
ret
aad
xchg
sbb
fcoml
popa
inc
imul
ss
pop
int3
imul
gs
sub
cmpsl
xchg
jge
dec
fcomp
shll
jmp
movsw
pop
lret
shll
fmuls
dec
sbbb
ret
lcall
sbb
mov
jae
mov
mov
aas
xchg
test
push
loop
push
outsl
inc
inc
add
mov
lret
aam
testl
xchg
jnp
mov
in
outsb
stos
pop
or
cmp
dec
and
movsb
cmp
pop
ret
and
inc
dec
std
ljmp
xchg
mov
inc
imul
sub
mov
imul
ret
jno
dec
stos
aad
arpl
daa
mov
imul
das
sbb
jecxz
rclb
pop
andb
mov
aaa
shrl
sub
mov
dec
imull
jle
mov
pushf
pop
sahf
adc
xor
imul
lock
and
pusha
aaa
mov
jl
push
out
dec
test
mov
xchg
js
sbb
ss
and
cmp
xor
push
sbb
mov
fisubs
jnp
sub
push
jnp
lods
jl
push
add
pop
flds
xor
mov
test
prefetchwt1
repz
test
sbb
fcomip
jg
clc
mov
js
testb
mov
idivl
mov
add
outsb
movsb
sub
pop
ljmp
add
sbb
leave
mov
xchg
std
scas
std
adc
push
mov
push
mov
xor
xchg
cmp
add
sub
xchg
or
es
int3
jg
pop
sub
outsb
cmpsb
in
mov
pop
aaa
adc
imul
jno
mov
lret
cmpl
jae
xchg
pop
repz
pusha
hlt
orb
ss
and
aas
pop
or
jg
clc
outsb
jnp
push
xchg
fstl
mov
or
push
sbb
faddl
clc
sub
push
add
xchg
mov
cli
jp
je
add
xorb
lock
lock
sub
sbb
xor
adc
enter
test
shlb
test
pop
nop
lret
test
aam
xchg
add
fisubrl
int
cmp
mov
mov
inc
das
pop
inc
inc
stos
dec
out
scas
lea
cmc
inc
sub
jnp
xchg
mov
js
xor
jge
cmp
mov
jno
pop
js
lcall
mov
inc
push
push
xchg
call
jae
jecxz
into
nop
cmp
mov
in
int
arpl
pop
jbe
xchg
iret
cmp
sub
mov
xor
aad
insl
ljmp
dec
pop
push
push
mov
faddl
cltd
mov
sub
mov
inc
lcall
ss
sti
xor
outsl
dec
int3
scas
pop
nop
xchg
iret
pop
xchg
lret
or
gs
xchg
das
imul
movsb
push
loopne
push
popa
cmp
xchg
sbb
cltd
lret
jns
push
mov
iret
mov
fwait
or
lock
lods
push
pop
adc
add
lret
xchg
iret
fsubrl
add
lods
pop
cli
mov
cmp
test
sarb
mov
push
jae
test
mov
jne
lock
mov
int
mov
test
std
dec
movntq
mov
aad
sub
push
into
aaa
sub
nop
pop
imul
or
dec
in
mov
pop
inc
jmp
into
push
outsb
push
fucomi
and
sub
stos
lret
mov
mov
lahf
pusha
xor
sub
loope
lock
sub
rorb
inc
dec
xor
jbe
test
jmp
xchg
jg
push
or
in
and
mov
xchg
inc
push
and
in
dec
push
sub
dec
pop
push
ljmp
leave
imul
pop
dec
clc
xchg
or
mov
or
mov
jno
insl
arpl
aam
insb
out
sti
xchg
inc
jmp
adc
shlb
pop
mov
inc
fwait
cmp
decl
scas
jb
sbb
push
test
popf
lods
sahf
sub
sbb
push
mov
test
adc
ljmp
repnz
inc
cli
xchg
sub
pop
imul
inc
push
mov
arpl
push
xchg
or
aaa
leave
cmpsb
pop
mov
cmp
mov
dec
xchg
mov
jne
pop
cmp
xchg
loopne
jecxz
movsb
outsl
aam
and
rcll
sub
pop
inc
xor
mov
and
inc
dec
mov
in
push
sub
pop
jnp
mov
xchg
rol
or
mov
fadd
lock
pusha
jne
jo
dec
nop
mov
mov
mov
fisubl
push
adc
insl
sti
push
adc
stos
js
add
xor
mov
add
gs
jg
in
mov
fcmovnb
std
fs
stc
mov
les
addr16
test
xor
sub
lds
or
add
xchg
add
loope
pop
sbb
loope
and
mov
pop
ljmp
pop
push
js
fdivp
out
inc
sbb
setnp
pop
mov
dec
xchg
fisubl
les
inc
or
push
sub
jbe
mov
xchg
push
xchg
mov
popa
daa
and
cmpsb
xchg
sbbb
sbb
stos
icebp
add
daa
negb
jmp
xchg
outsb
and
dec
mov
adc
ficoms
arpl
popa
pusha
nop
inc
cmp
jns,pt
imulb
mov
xchg
dec
mov
jae
pop
dec
test
aam
inc
mov
andb
jg
outsb
sbb
hlt
or
jmp
cs
cmpsb
adc
pop
mov
hlt
rcrl
in
sub
adc
mov
pop
xchg
insl
dec
push
mov
sbb
nop
clc
popf
push
addl
jns
xchg
inc
cltd
mov
lea
pop
jae
jnp
popa
mov
cmp
addr16
movl
cmp
push
or
mov
flds
lret
and
push
in
in
ss
push
inc
es
lds
adc
xchg
dec
mov
jecxz
jno
aad
rol
cmp
mov
and
mov
fldenv
mov
mov
fadds
std
test
test
push
mov
add
add
addr16
push
sbb
outsb
mov
frstor
fnstcw
repz
pop
add
add
xor
push
repz
dec
adc
outsb
out
repz
dec
popf
lahf
pop
sbb
setns
push
jge
iretw
or
push
les
mov
shlb
pop
cltd
scas
scas
mov
mov
hlt
stc
lcall
les
pop
repz
arpl
xchg
add
or
aaa
lods
pop
mov
or
mov
and
es
inc
call
mov
cmp
repnz
clc
pop
mov
jne
push
jae
xor
and
lcall
lahf
ret
xchg
dec
aas
dec
and
cmpsb
push
addr16
pop
dec
outsl
jp
push
mov
shll
ds
lret
cmp
add
pop
insl
sbb
xor
sti
jmp
inc
mov
shll
jbe
call
push
in
and
movswl
insb
mov
adcl
fcmovne
inc
test
ljmp
mov
sbb
pop
hlt
jbe
call
pop
and
dec
adcb
jge
nop
jmp
sub
rclb
ja
hlt
cmp
enter
sti
js
insl
xchg
dec
ss
xchg
xor
das
sub
sahf
daa
sub
test
and
scas
loopne
mov
dec
xchg
cmp
push
aas
pop
cltd
dec
jnp
sbb
fwait
xchg
dec
out
in
and
sbb
xor
add
add
dec
lret
nop
cmp
loop
lcall
clc
sbb
mov
xchg
adc
hlt
data16
jne
fisubs
inc
enter
mov
repnz
xor
cltd
cmp
ss
adc
ljmp
dec
mov
push
rol
imul
popa
mov
cli
xchg
fdivs
icebp
mov
fs
push
jle
cs
ret
mov
sub
out
mov
add
and
lcall
leave
xor
pushf
inc
test
loope
mov
cmpsb
orl
cmp
in
daa
jge
mov
inc
shrb
cld
aam
cmc
or
and
inc
dec
add
popf
dec
pop
inc
icebp
adc
xchg
xor
outsl
dec
insl
ret
xor
adc
aas
mov
add
enter
je
add
cmpsb
sbb
and
cmc
push
scas
cmp
xchg
xor
fnstcw
xlat
cmp
pushf
jecxz
inc
das
mov
sbb
fstpt
popf
int3
movb
test
imul
sbb
pop
int3
lcall
xchg
leave
lret
popf
pop
dec
movsb
mov
xchg
js
loopne
jnp
scas
fs
or
mov
scas
mov
mov
jno
push
or
int3
push
or
jnp
mov
ret
xchg
push
inc
adc
sub
cmp
mov
scas
inc
outsb
fistpll
pop
sahf
xchg
ja
fisubl
cmpsb
mov
and
scas
fstps
fcmove
outsl
jge
ljmp
enter
sub
and
or
lcall
pusha
je
enter
jnp
mov
gs
addr16
dec
aas
lods
repz
push
nop
mov
lds
lcall
into
rcll
mov
push
icebp
sbb
clc
int3
jmp
inc
ss
lret
adc
dec
sbb
cmp
inc
dec
mov
insb
lock
movsl
dec
inc
xchg
test
call
xchg
adc
sub
ficompl
js
mov
jmp
xor
pusha
shrb
test
mov
mov
xor
lahf
mov
cmp
mov
fwait
or
sbb
xchg
data16
imul
shrl
push
lock
gs
add
popa
retw
test
inc
loope
insl
int3
imul
dec
movsb
mov
or
cmpsb
sub
push
test
imul
rolb
lahf
and
add
cmp
or
push
xor
jge
cmpb
out
pop
fadds
ljmp
push
inc
and
std
dec
pop
xor
push
notl
lods
add
decl
clc
movsb
fimuls
adc
in
rcrb
sub
enter
jl
lods
test
aaa
dec
scas
pop
pop
and
jmp
sbb
ds
jns
mov
sbb
jge
mov
scas
inc
pop
cmc
mov
jg
inc
jmp
out
jmp
mov
cmp
ret
xor
jbe
cli
cmp
stos
push
stos
lahf
test
lds
jle
adc
lcall
inc
jne
mov
jge
xchg
mov
out
mov
fs
in
pop
lods
into
add
aas
jecxz
inc
cwtl
data16
out
mov
sub
jae
mov
ret
add
aad
outsb
stos
aas
and
add
fs
inc
daa
add
mov
jp
out
or
inc
mov
fldenv
cmp
push
fcompl
add
pusha
and
jecxz
inc
xor
icebp
out
dec
repz
adc
cmp
dec
rcr
inc
sub
push
inc
pop
jns
mov
mov
and
mov
jne
gs
adc
daa
lock
iret
pop
das
ljmp
and
out
or
mov
push
adc
fdivr
rclb
push
arpl
call
mov
lock
add
f2xm1
push
out
mov
adcb
ret
aad
pop
scas
push
das
loop
test
out
mov
lock
pop
and
mov
mov
outsb
enter
xchg
inc
aam
jmp
ja
push
pop
xor
adc
std
mov
xlat
enter
imul
and
jae
jno
pop
call
cmpsl
mov
ljmp
cltd
adc
stos
jns
test
sbb
xchg
cmpsb
or
dec
adc
sub
jecxz
mov
hlt
add
in
rorb
adc
jp
and
jno
push
adcb
mov
xchg
mull
movsb
mov
and
mov
pop
add
notb
add
stc
outsb
outsb
xchg
inc
push
aam
adc
scas
rcrl
jne
in
andl
pop
sahf
xor
lea
sbbb
out
pop
cmp
jmp
push
lahf
cli
pop
ljmp
movsb
xchg
xchg
lock
mov
xchg
adc
cld
out
cmp
ror
mov
inc
jecxz
scas
scas
mov
scas
fsubrl
out
sub
inc
xchg
fdivrs
inc
push
outsb
jp
call
push
js
into
mov
or
sbb
sub
sub
jno
pusha
mov
push
jg
jbe
pop
jo
and
imul
mulb
sub
mov
outsl
in
push
mov
test
inc
xchg
cwtl
push
sub
jno
in
jg
cmp
lods
sbb
popa
out
sahf
add
shrl
cmp
xchg
cmp
ret
xorl
ja
in
jo
jne
dec
fwait
mov
cmc
arpl
mov
sbb
and
es
jp
adc
xchg
repnz
call
jno
rolb
sub
mov
iret
xchg
cmpsb
scas
mov
scas
sbb
jno
mov
cltd
sti
orb
in
jne
cmpl
fwait
pop
dec
sbb
out
push
inc
daa
push
repnz
cmp
shl
add
cltd
mov
inc
movsl
pop
movsl
int3
out
jg
or
mov
push
or
popa
int
pusha
loopne
mov
sti
xor
jmp
adc
ret
mov
andl
pop
aas
push
leave
mov
mov
js
data16
enter
je
out
arpl
dec
ljmp
and
xchg
frstor
std
test
pushf
inc
xchg
dec
dec
cmp
aaa
jo
xor
rolb
push
aaa
xor
mov
push
xchg
out
ror
iret
lea
stos
push
and
mov
sub
cmp
gs
inc
mov
imul
sub
imul
fadds
xorl
mov
sbb
aad
cmp
push
mov
mov
outsb
sbb
dec
pop
pushf
ljmp
xorl
ljmp
inc
pop
lock
push
cmp
jg
inc
jns
mov
int
fwait
repnz
sbb
jl
daa
push
xchg
popf
idiv
in
jbe
aaa
cmp
outsl
or
lds
js
ds
idivl
and
push
cwtl
loopne
and
inc
sub
lock
mov
out
mov
insl
dec
dec
jmp
jp
sbbb
int
mov
adc
push
ret
aas
ja
xor
mov
int3
mov
sbb
leave
rsm
addr16
adc
adc
inc
inc
mov
insl
mov
mov
ret
mov
outsb
mov
adc
mov
fldenv
mov
adc
call
or
imul
xchg
aam
insl
testb
sbb
pop
mov
popa
fisttps
movsl
jbe
and
cld
mov
pop
pop
jo
lods
add
shll
mov
inc
daa
mov
pop
rcrb
popf
test
jb
push
mov
fadd
arpl
lret
dec
fisubs
mov
ljmp
hlt
inc
dec
into
imul
jg
fldl
dec
jecxz,pt
mov
in
mov
pop
cmp
insl
outsb
int3
fs
in
loope
xor
jno
test
movsb
or
push
outsb
xor
leave
adc
dec
jno
loopne
mov
jmp
das
loope
int
adc
mov
enter
cmpsl
and
cli
mov
ljmp
dec
dec
mov
xor
xchg
inc
lret
lods
aam
aam
cmp
adc
xchg
jle
insb
push
cmp
incb
cmp
scas
aam
arpl
aad
push
xchg
nop
jmp
dec
fdivrp
lret
xlat
ja
icebp
repnz
dec
xchg
sbbb
nop
loopne
and
or
loop
sbbl
rorl
jnp
mov
sbb
jl
cmp
insl
xor
fdivs
inc
cltd
sti
xchg
popa
dec
or
or
addr16
mov
push
repnz
out
mov
add
push
jmp
xchg
ret
mov
lret
das
adc
outsb
push
and
push
fcompl
mov
repz
idivl
repz
jns
test
cltd
dec
outsl
cmpb
inc
or
lea
dec
in
add
adc
dec
call
pusha
ret
pop
push
jp
sbb
push
ljmp
rorl
dec
loope
cmpb
jnp
lock
test
add
jle
div
jge
sarl
pop
loope
leave
cmp
push
pop
and
scas
sbb
popf
ret
sti
and
ret
data16
mov
test
add
xchg
roll
lret
jg
xor
adc
sub
daa
dec
push
mov
ds
xorb
pushf
push
ds
push
xchg
jbe
stos
pusha
or
fcmovne
subb
loopne
in
les
aas
or
pop
jmp
pop
mov
out
mov
inc
fs
dec
out
xor
push
nop
cmp
test
mov
imul
inc
inc
outsb
outsb
scas
mov
xchg
adc
add
std
or
inc
cwtl
or
shl
shlb
in
and
aas
icebp
leave
pop
jo
pop
arpl
stc
mov
imul
push
dec
call
test
es
or
dec
hlt
mov
mov
push
push
mov
lock
xchg
inc
dec
repnz
or
icebp
outsb
insb
and
scas
and
pop
mov
lods
ss
jge
mov
int3
dec
scas
mov
push
movsb
mov
push
dec
add
shrb
enter
icebp
pmullw
imul
cmp
icebp
xor
gs
mov
jne
and
jg
and
mov
jbe
repz
push
cmp
push
es
or
mov
insb
fiaddl
dec
sarb
aad
or
out
inc
sbb
fwait
or
adc
insb
rcr
pusha
stc
fldt
push
roll
push
pop
dec
hlt
add
int
icebp
dec
shl
stos
cmpsl
imul
shlb
pusha
add
ds
fbstp
std
dec
push
and
rcrb
cli
imul
inc
dec
xor
rcr
movb
das
fcmove
pop
cmp
cmp
imul
mov
es
and
mov
xchg
int3
shrl
int3
popa
mov
lods
call
ljmp
pop
aad
xor
in
inc
test
adc
es
sahf
lret
jge
ror
xchg
jmp
fstpl
dec
adc
rclb
pushfw
sub
jecxz
js
add
repz
movl
ja
cmp
push
adc
add
jp
aaa
xor
pop
in
lahf
pop
test
out
cmp
dec
jmp
pop
or
cwtl
sarb
shll
pop
add
xchg
rclb
or
push
addr16
xor
dec
enter
scas
stos
nop
scas
jo
adc
xlat
xchg
adc
adc
inc
cld
adc
mov
push
and
fistpl
mov
mov
cmp
lods
dec
mov
enter
xor
imul
popa
mov
in
xchg
and
sbb
mov
jmp
pop
test
cmp
fwait
inc
fld
sbb
jecxz
jmp
outsb
jmp
or
mov
movl
aam
jp
and
jo
stos
adc
xchg
stc
orl
out
dec
stc
cmp
pop
sbb
stc
and
jbe
clc
loopne
add
sarl
ret
stos
xlat
aam
cmp
push
das
jb
push
add
mov
xchg
jne
xchg
imul
jbe
sub
jle
fistps
daa
pop
inc
push
push
iret
les
cli
jge
sub
pusha
clc
movsl
pop
pop
pop
cmp
dec
cmpl
xchg
insb
fmuls
dec
icebp
jl
mov
ja
fs
enter
and
in
aaa
mov
ficomps
out
push
fisttpl
adc
ror
cmp
add
in
inc
dec
out
mov
inc
cmp
sub
jge
je
and
push
sti
inc
and
sub
dec
xchg
xchg
cmp
js
data16
orb
arpl
mov
cmpb
pop
and
cmp
xor
repnz
bound
lahf
push
lcall
enter
fstpt
jo
fnstenv
sub
clc
fldcw
fwait
andl
ret
jmp
xchg
into
mov
mov
and
enter
add
pop
icebp
gs
or
adc
cmpsb
incl
adc
fcmovnu
decb
mov
pop
sbb
cmp
outsl
dec
sub
and
add
or
xchg
mov
xchg
addr16
push
lock
and
xchg
das
push
jmp
stos
pop
or
addb
ss
lods
in
inc
imul
mov
xchg
jo
lret
outsl
pop
loopne
data16
neg
fcmovnbe
popa
inc
rclb
ret
enter
shrl
pop
in
mov
fstp
pop
or
bswap
std
pop
and
sbb
jae
or
test
test
sahf
arpl
inc
cmp
add
cltd
xchg
mov
pop
mov
int
jge
push
out
jno
sub
mov
mov
sbb
sarl
std
or
jnp
dec
pop
shll
adc
xor
sbb
lods
sbb
mov
cwtl
insl
and
or
cmp
out
sub
movsl
xchg
out
jp
andl
into
loopne
or
scas
jmp
aaa
mov
ficoml
cmc
fstl
or
sub
arpl
mov
jge
jnp
jno
sahf
push
cmpsb
add
or
out
fistl
push
daa
inc
xor
lds
cmp
jmp
and
popa
jg
jns
jbe
rclb
jecxz
mov
int3
xlat
cmpsl
int3
cltd
push
sbb
stc
dec
pushf
movsb
lods
mov
jmp
pushf
add
mov
pop
or
sbb
movsb
cmp
jns
dec
fstpt
cmp
and
dec
psadbw
mov
dec
movsl
push
shrb
xchg
test
jp
mov
jmp
mull
sbb
rcll
sub
sti
xor
push
daa
and
imul
pusha
cs
dec
push
pop
mov
addb
stos
mov
xchg
mov
rcll
pop
xor
pop
push
mov
and
jecxz
add
xchg
sub
jae
inc
dec
aam
pop
mov
jecxz
aam
adc
test
in
push
dec
movsb
and
and
mov
mov
push
loope
insl
xchg
pusha
jae
mov
ret
out
pop
nop
je
cmpsb
sti
mov
mov
test
xor
call
adc
mov
movsb
mov
cli
pop
dec
dec
in
xrelease
cli
imul
xor
xor
in
je
jle
das
pop
pushf
hlt
pop
popf
lahf
dec
push
add
call
cmpsb
iret
rolb
mov
sahf
sub
mov
dec
std
dec
or
cmp
mov
mov
jle
push
stos
add
cmp
add
xchg
pop
fwait
dec
arpl
mov
adc
daa
stos
xchg
mov
lods
enter
lea
ret
sub
fidivl
cmpsb
mov
xor
xor
add
push
mov
xor
adc
into
sbb
jp
repz
data16
jae
xchg
xor
jne
mov
jb
push
inc
notb
test
cwtl
ja
xchg
jae
sbb
rcrb
add
ret
leave
add
mov
push
or
jb
inc
sub
mov
in
xchg
cmp
movsb
or
stos
jecxz
sbb
fstps
fxch
and
call
xor
jmp
aad
sub
xor
or
mov
repz
mov
inc
adc
test
xchg
mov
adc
adc
mov
xchg
jo
es
das
jg
cli
mov
xchg
mov
addr16
popf
arpl
sarl
ss
xlat
addb
cmc
das
out
mov
out
jo
mov
loopne
es
std
push
dec
mov
jl
stc
mov
imul
xor
inc
add
pop
loopne
dec
aad
and
sbb
addr16
sti
fwait
bound
lret
xchg
cwtl
pop
test
loopne
nop
jecxz
fiadds
add
bound
lock
movsb
push
adc
gs
lods
push
es
into
addr16
sar
bound
mov
repz
in
xlat
xlat
repnz
adc
jmp
xchg
pop
xchg
adc
les
and
adc
jae
insl
inc
fsubl
push
or
dec
xchg
or
mov
lcall
gs
cli
mov
xor
xor
dec
movsl
mov
mov
mov
stc
pop
mov
ss
in
rorb
or
cmp
add
or
mov
dec
mov
mov
lods
outsl
outsl
or
fwait
repnz
xchg
and
icebp
aad
or
xchg
jg
cwtl
xlat
int
mov
sub
push
mov
es
std
shlb
rep
cs
jg
nop
push
imul
jo
pop
and
iret
out
add
iret
in
ja
lcall
and
int
sbb
cmp
lea
imul
cld
pop
out
out
sar
test
dec
jnp
pop
movsl
mov
xchg
adc
xlat
lahf
cmp
fcomps
ljmp
loope
sub
inc
sbb
andb
insb
jl
jbe
orl
and
and
scas
sbb
push
lret
pop
dec
js
call
pop
or
gs
out
xchg
cmpsb
arpl
les
jns
sub
mov
das
push
cmp
repz
xor
aam
std
repnz
xlat
mov
jmp
fidivrl
lods
push
mov
sbb
pop
and
sbb
mov
insb
repz
push
sahf
add
sti
adc
dec
dec
lods
cmp
divb
sub
adc
leave
lahf
sbb
lock
fistps
into
fs
mov
sbb
push
xchg
adc
negb
lret
pop
cmpsb
dec
jecxz
cs
test
jns
cld
dec
shrl
stos
cmpsl
pop
push
inc
aam
daa
jae
cmc
stos
mov
jecxz
mov
cmp
xchg
loop
dec
fs
dec
adc
mov
mov
ljmp
imul
test
stc
jle
shrb
or
dec
pop
pop
mov
fwait
jle
add
jne
add
sbb
testb
nop
popl
cmpsl
ss
cltd
pop
scas
adc
mov
pop
jmp
rcrb
cli
std
clc
adc
sbb
pop
fistl
aad
mov
add
or
in
test
call
enter
leave
push
xchg
iret
or
sub
jl
inc
fldl
scas
lods
adc
aas
divb
faddl
jnp
inc
fwait
icebp
pop
mov
int
int3
inc
sbb
inc
push
pop
mov
mov
xor
or
out
xchg
inc
repnz
mov
xchg
mov
aam
fucomp
arpl
mov
push
adc
sti
mov
mov
mov
mov
mov
test
stc
int
je
pop
loop
or
hlt
lret
ret
repnz
sbb
jae
xchg
movsb
ja
cwtl
pop
xchg
cltd
iret
cs
mov
inc
insb
adc
sub
daa
push
dec
push
xor
mov
clc
popf
adc
xor
arpl
cli
xchg
add
mov
aad
mov
fdivrl
cmc
push
ret
leave
adc
xlat
nop
lock
sar
push
in
sub
dec
pop
js
movsb
arpl
dec
mov
xchg
outsb
xor
jno
mov
stos
out
adc
lods
repnz
pushf
cmp
sub
fstpl
xchg
lcall
dec
cltd
xlat
je
inc
iret
mov
out
push
dec
shrb
add
sbbl
or
dec
and
sub
fs
and
xchg
sub
adc
add
cwtl
cmp
mov
popf
sti
cwtl
ret
mov
or
scas
sub
cmpsl
jecxz
xchg
lea
jo
aas
lods
pushf
mov
bound
sarl
in
int3
and
test
cmpb
mov
dec
adc
cmp
xor
cs
push
ds
in
mov
pop
inc
sarl
inc
pop
mov
test
mov
lcall
mov
enter
daa
inc
and
sbb
cmp
dec
dec
popf
lods
mov
xchg
stos
jns
loope
mov
test
push
rcrl
fisubs
pop
fs
sarb
dec
loope
cwtl
push
lods
add
ljmp
ds
push
pop
cmp
jg
and
nop
stos
dec
fisubs
mov
aas
in
cwtl
sub
jns
jno
ljmp
mov
sub
loop
pop
inc
jl
add
fs
add
inc
mov
mov
mov
sar
jecxz
es
mov
jp
test
mov
rclb
roll
mov
fisubl
mov
cld
jge
movsb
jmp
mov
dec
pusha
fs
outsl
jo
aad
sbbb
sbb
cmp
popf
rcrb
mov
sbb
fistps
andl
in
mulb
fcompl
add
cli
mov
or
pop
xor
mov
in
bound
mov
dec
or
push
pop
mov
sbb
xchg
into
lds
push
mov
in
inc
daa
sub
pop
jbe
ljmp
lret
and
jge
ljmp
jmp
jecxz
jns
sub
call
pushf
mov
dec
inc
dec
sbb
mov
cwtl
outsb
lea
adc
push
jne
rclb
ljmp
fwait
jl
call
push
movd
jecxz
fcoms
roll
ffreep
fisubrs
ret
insl
push
cmpsl
popa
xchg
xor
aas
enter
pop
and
xor
cltd
mov
aas
mov
xchg
push
adc
insl
cmp
je
ja
rcrl
ret
rcrb
sbb
xchg
imull
aas
mov
outsl
dec
popf
push
rcrl
sahf
cmp
ret
sahf
rorl
jnp
push
stos
shr
mov
shll
lret
test
ss
idivb
enter
mov
stc
dec
in
ret
mov
sbb
adc
xchg
cmc
add
adc
aas
mov
in
mov
add
std
add
dec
mov
pop
cwtl
fucomi
sub
xor
clc
aas
out
xchg
fstpl
mov
test
sarb
push
in
or
shr
es
addr16
insl
and
push
inc
sbb
sahf
es
bound
clc
sub
dec
jmp
mov
push
mov
xchg
mov
push
sti
cltd
or
aas
fcomps
popf
roll
outsb
clc
pop
outsb
jg
or
jo
add
loope
push
hlt
push
pop
mov
pop
jae
lods
rorb
push
mov
movsl
test
push
and
test
aam
push
fwait
or
and
dec
ret
dec
pop
fmull
mov
insl
mov
jo
mov
bound
shll
pop
pop
sub
roll
jno
inc
ja
lds
enter
dec
fisubrs
mov
jle
lods
xchg
mov
dec
adc
pop
xchg
inc
stos
pop
jecxz
mov
aam
mov
sub
mov
sub
vpxor
add
xor
loopne
test
js
arpl
sub
push
mov
stos
test
xlat
xor
fistl
lahf
shl
fcomip
ret
lret
stc
pop
jge
jo
lods
push
int3
daa
loopne
cmp
jb
notl
push
mov
jbe
add
jmp
aaa
or
xor
test
dec
xchg
adc
fbld
imul
lahf
xchg
jbe
sbb
fisttpll
mov
fs
pop
gs
int3
fstpt
ljmp
repz
or
das
arpl
sbb
xchg
mov
addb
fwait
inc
pop
bound
push
push
jb
push
int3
dec
pop
pop
sti
enter
loop
inc
aaa
sbb
dec
fidivrs
pop
insl
xlat
js
dec
pop
sub
mov
mov
and
sub
aaa
push
loope
mov
ret
jne
jae
xchg
test
lods
xchg
aaa
sti
ret
imul
xchg
and
adc
fnstenv
push
sub
xchg
pop
lods
inc
adc
pop
push
xchg
mov
sub
or
stos
enter
out
sahf
pushf
pop
add
out
and
pop
clc
cmp
enter
adc
xchg
ljmp
add
imulb
imul
popf
mov
mov
push
lahf
stos
cwtl
pop
rorb
getsec
stc
cld
lods
mov
les
mov
push
sti
lods
ret
xchg
hlt
popa
clc
jo
dec
fsub
mov
lret
sbb
imul
and
sarb
pop
xchg
icebp
fiaddl
icebp
and
xrelease
push
ret
sub
add
rorl
pop
inc
mov
or
pusha
popf
jbe
mov
icebp
mov
sub
push
enter
mov
sub
mov
inc
cmp
adc
scas
mov
mov
sbb
aam
jbe
sbb
jmp
jmp
cli
sub
sbb
dec
mov
ret
loopne
scas
inc
mov
and
push
and
imul
ljmp
adc
sbb
push
aad
insb
loop
int3
sub
push
addr16
adc
xchg
sub
add
scas
popf
sub
jp
and
in
sbb
repnz
leave
lods
les
cs
aas
add
lcall
inc
jle
in
cmp
sahf
or
mov
lods
push
dec
jecxz
push
fiaddl
cmc
mov
ror
repnz
push
jle
das
inc
mov
mov
cmp
push
mov
lahf
stos
cli
repnz
shlb
mov
add
lret
out
pop
test
cli
lret
xor
enter
sbb
mov
in
orb
cs
outsb
mov
ss
sbb
dec
pop
nop
ficompl
cltd
add
std
push
jmp
out
pop
mov
sub
sbb
adc
sar
inc
dec
out
fwait
stc
aaa
mov
shrl
imull
cmp
das
dec
dec
insb
mov
fnstcw
hlt
in
jle
mov
testl
xor
push
pop
push
mov
fistpll
xor
ficomps
jmp
aam
shll
sbb
insb
iret
hlt
xchg
jl
out
or
jno
cmovo
cmp
lahf
popf
mov
jb
xor
je
cmc
and
test
fucomp
add
inc
xchg
icebp
test
push
lret
flds
mov
lret
sub
mov
loopne
imul
and
mov
int
pop
jecxz
test
jb
xor
cmp
mov
fs
add
push
cs
add
and
push
popa
test
mov
push
test
gs
lds
iret
jnp
add
out
loop
repz
xchg
sub
and
getsec
inc
inc
ret
outsb
outsb
xlat
xor
test
sub
mov
mov
cmpb
iret
add
xchg
mov
pop
inc
cmp
mov
popl
mov
jnp
mov
pop
stc
ljmp
mov
jecxz
cs
int3
mov
mov
sbb
xchg
pop
inc
movsb
push
js
arpl
and
mov
mov
lea
test
js
popf
test
jmp
jle
lret
dec
adc
push
sti
and
jl
add
movsl
adc
lods
pop
xor
inc
mov
into
out
inc
lods
sub
or
push
decl
aad
sti
xchg
nop
insl
iret
and
daa
mov
sbb
test
sub
jle
dec
je
fcomi
sub
in
nop
mov
and
xor
aam
sahf
jnp
push
aas
push
sub
fsts
jecxz
cwtl
ljmp
negb
adc
mov
lea
dec
xor
and
xor
dec
xchg
test
lret
bnd
cltd
jp
dec
and
sahf
daa
add
add
hlt
repz
xchg
sahf
pop
mov
push
sub
scas
cmpsl
stos
mov
jl
inc
sub
test
and
inc
push
dec
add
cmp
and
mov
sahf
notb
shrb
and
pop
ficoms
dec
clc
dec
aad
mov
jno
enter
xor
lock
outsl
mov
repz
or
shll
sub
popa
cmp
mov
je
and
and
mov
lds
dec
in
mov
mov
out
cmp
in
lcall
adc
iret
flds
cmp
lret
mov
add
push
ror
lods
sub
push
sbb
dec
pop
sbb
push
or
jne
int3
arpl
je
idivl
movsl
or
push
cltd
mov
lods
repnz
xor
cmp
roll
bound
in
mov
clc
push
or
jmpw
mov
sbb
dec
call
test
inc
es
stc
lds
mov
icebp
rcll
inc
sub
aam
std
stos
xor
scas
into
jl
rcrl
mov
lahf
jns
sub
pop
gs
insl
in
mov
or
in
sbb
insl
imul
out
jbe
idivb
icebp
and
insl
xor
outsl
lods
aam
fstp
add
out
sbb
push
loop
adc
inc
or
nop
loope
mov
jg
arpl
ja
xchg
mov
addr16
mov
mov
pop
stos
push
xchg
dec
xchg
lahf
jno
sbbl
imul
mov
inc
mov
dec
jecxz
and
pusha
repz
adc
sbb
in
lcall
pusha
sub
jecxz
mov
fisubrl
mov
fldt
push
stos
mov
push
loope
or
jae
cmc
ljmp
jo
cltd
leave
adc
std
mov
jle
int
js
fdivrl
xor
or
mov
movsl
outsl
push
rolb
push
xchg
test
push
mov
fisubl
fs
scas
lret
jne
mov
xchg
ss
ficompl
xor
push
mov
clc
fwait
orl
scas
mov
push
pop
fwait
mov
hlt
std
xchg
mov
mov
testb
pop
js
cltd
xor
pop
inc
add
cpuid
mov
and
inc
fisttpl
mov
jne
fwait
subl
roll
lods
sub
imul
pop
aad
jmp
dec
pop
movb
bound
loope
int3
insb
lds
sbb
inc
pop
insb
sahf
stos
out
inc
rcl
inc
sub
sbb
sar
pop
mov
or
cwtl
mov
push
scas
repz
push
xlat
xor
mov
jno
adc
cmp
cwtl
inc
xor
leave
mov
shll
xor
push
out
sete
js
sbb
pop
mov
cmp
and
jmp
cmp
out
xor
jle
sub
inc
inc
and
addl
mov
pushf
stc
cmc
inc
lret
push
faddp
adc
fisubrl
add
xlat
xor
mov
jne
jecxz
pop
jmp
cltd
ljmp
mov
lods
aam
mov
jecxz
das
les
ds
lret
xchg
mov
lods
stc
das
movsl
je
sarb
into
add
fidivrl
or
add
cli
sbb
hlt
mov
sbb
jecxz
arpl
lds
sbb
sub
add
fldl
inc
movsl
sub
cwtl
mov
dec
mov
ja
aaa
test
mov
je
dec
imul
add
insb
enter
dec
jg
pop
addl
lods
lea
add
je
push
mov
test
cld
xor
xor
adc
xchg
mov
xchg
inc
mov
or
sub
lods
xor
sbb
iret
or
inc
nop
pusha
or
in
and
les
cmp
inc
inc
push
or
jns
popa
rcrb
add
push
mov
sbb
push
movl
dec
test
fdivs
lret
or
push
jno
add
out
dec
lock
iret
lea
lcall
mov
movsl
aas
jns
add
or
sub
jb
test
lret
fstpt
jne
jl
mov
dec
in
loop
dec
add
inc
and
xchg
sar
inc
jae
rclb
pop
mov
int
jge
leave
popa
cmp
adc
jo
dec
fisubrl
stos
mov
pop
jae
push
add
ror
pop
mov
sbb
sbb
xchg
xchg
lods
lret
loope
dec
adc
out
fwait
mov
sbb
xor
lds
xchg
stos
popf
mov
inc
pop
xchg
imul
mov
mov
cmp
lds
ja
out
lods
and
mov
js,pn
fwait
dec
test
out
aas
mov
pop
jge
loope
out
adc
push
or
loop
outsl
xchg
dec
loop
push
sahf
add
mov
push
movsl
clc
lahf
cmp
leave
push
lcall
and
fsubl
inc
mov
fwait
xor
fadds
testb
pusha
xchg
pushf
adc
mov
data16
test
push
movlps
lock
mov
mov
and
aam
add
out
arpl
cmp
mov
lahf
scas
gs
ret
cltd
and
pop
pop
push
movsl
add
bound
push
icebp
xorb
xor
lea
rcll
test
fcomps
ljmp
repnz
add
sti
pop
je
sti
adc
sahf
out
imul
cli
mov
or
test
in
out
push
mov
jmp
jle
adc
daa
dec
pop
sbb
mov
push
cwtl
sub
daa
into
arpl
sub
outsl
inc
out
dec
lods
pop
aas
icebp
das
push
loope
cmp
call
cmp
and
ljmp
in
test
xchg
fldenv
mov
or
mov
inc
inc
ret
mov
popa
fucomip
sub
cmp
add
push
dec
in
and
ja
insl
pusha
jno
jg
cmp
xchg
rol
cmp
pop
mov
shlb
adc
sbb
jne
arpl
movsl
xchg
push
xchg
jnp
ja
dec
pop
jns
fdivrl
scas
call
dec
xor
les
rorb
mov
ret
icebp
inc
dec
test
jge
cmp
lock
andb
test
xchg
jl
adc
add
jo
xlat
inc
sub
outsb
or
lahf
fsubp
xchg
sub
add
push
sbb
mov
cmp
jno
ja
cmp
push
ds
mov
push
in
hlt
js
jmp
dec
cmp
lock
popf
mov
ss
aam
js
sub
or
push
jae
or
jbe
lods
and
and
into
cmpl
mov
pop
dec
jae
out
push
in
push
push
push
loop
inc
mov
cmp
jecxz
push
add
rorb
cmp
dec
rcrb
and
sub
hlt
lea
pop
insb
in
sbb
xlat
mov
bound
idivb
cmp
lcall
ja
mov
xchg
inc
pop
push
xor
adc
imul
adc
lods
or
or
push
scas
pop
lds
lock
xchg
mov
push
mov
ja
call
es
repnz
pop
cmc
and
bndldx
fldt
pop
pushf
jecxz
jns
in
cmp
in
inc
rorl
push
mov
lahf
jge
mov
aaa
int3
inc
ficompl
lea
adc
andl
mov
add
hlt
mov
mov
xor
shl
insl
mov
dec
and
nop
jmp
jp
pop
push
xor
push
or
ljmp
test
shrb
in
gs
repnz
jp
inc
cmp
nop
and
and
pop
lahf
xor
push
xchg
lds
div
scas
cmp
adc
pop
ss
mov
repnz
cld
pop
cmp
pop
mov
mul
mov
pop
mov
pushf
xor
lahf
data16
inc
mov
sbb
sub
arpl
inc
insl
mov
push
rcrl
cmpsb
jp
mov
sbb
sub
les
ret
pushl
outsl
repz
push
pop
add
dec
lahf
loope
pop
push
hlt
adc
xchg
pop
adc
sbb
test
repnz
push
jbe
pushf
lret
sahf
imul
inc
push
arpl
out
mov
movsb
sbb
leave
jae
push
push
ds
test
or
sarb
inc
push
lcall
and
push
adcl
shll
jb
dec
insl
and
div
inc
scas
push
lcall
sub
shlb
sbbb
dec
xor
out
movsb
or
ja
mov
data16
lret
xor
and
fisttps
shlb
add
mov
inc
xor
xor
or
into
rorl
cmp
fstps
cmp
mov
sbb
ret
mov
inc
test
xor
insl
in
sub
rcl
push
repz
push
sub
xchg
shl
mov
cmpsb
mov
movsb
mov
aam
loopne
ja
mov
addr16
ja
rclb
daa
adc
push
es
mov
out
cmp
shrl
xchg
xlat
push
dec
push
dec
shrl
lock
test
sub
ds
jbe
insb
mov
ljmp
sub
dec
insl
xchg
inc
adcl
jae
into
mov
xor
lds
jnp
rcrl
jmp
cld
xor
pop
jge
sbb
fidivs
lret
inc
xor
es
inc
dec
out
cmp
inc
xchg
jbe
and
ss
movsl
ljmp
pop
out
shll
cmpsb
outsl
sub
lcall
mov
jle
jecxz
push
rorb
std
pop
push
rep
xchg
sub
xor
jmp
xchg
xlat
add
adc
push
cmc
out
pop
or
mov
rcrl
xor
gs
inc
push
or
aad
xchg
mov
or
pop
jmp
dec
loope
call
or
bound
ret
dec
pop
add
mov
sbbl
enter
loope
popa
hlt
xor
sbb
test
loope
add
inc
pusha
stos
in
imul
xchg
gs
addr16
dec
or
sarb
push
shll
adc
cmp
xor
mov
cmp
fs
in
movsb
pushf
mov
or
jnp
in
xchg
test
daa
dec
cltd
jecxz
out
inc
dec
mov
cmp
xchg
inc
stos
sub
ret
js
jle
add
or
scas
lcall
gs
cmpsl
sub
or
movsb
rclb
dec
ret
pop
add
test
test
iret
pop
or
ljmp
mov
mov
int3
xchg
xchg
push
rorb
std
inc
jae
lahf
xor
sbb
xchg
mov
or
mov
mov
repnz
mov
sti
sar
adc
xchg
and
push
stc
push
les
pusha
mov
xchg
cmp
movsb
adc
add
dec
sub
aaa
jle
jmp
popf
mov
dec
cmpsb
sbb
pusha
sti
jbe
jmp
lods
les
daa
jp
jmp
xor
fsts
int3
xor
rcll
inc
sbb
lcall
mov
and
or
adc
scas
xor
cmpsl
rorb
aaa
pop
push
lea
in
in
lods
ds
cmp
fisubrs
inc
sahf
inc
stos
push
imul
cltd
push
sbb
popf
sbb
cmpsl
push
sahf
repnz
push
dec
cmp
je
adc
xchg
fwait
xchg
mov
cmc
jo
adc
mov
sbb
outsl
dec
sub
jbe
roll
pop
fnstcw
out
sub
jg
rorl
jmp
mov
adc
mov
sub
sar
lea
inc
add
insl
aad
adc
and
mov
sub
vpacksswb
jmp
int3
test
ds
and
jl
add
inc
lods
arpl
outsb
mov
xchg
sbb
add
xchg
pop
push
cli
les
mov
push
sti
dec
in
inc
je
stc
jns
push
stc
push
adc
jle
ret
cmp
out
pushf
mov
aam
jl
jns
fwait
lods
sbb
outsl
cmp
scas
mov
xchg
cld
dec
imul
cmp
out
or
jb
pop
jge
stos
inc
fadd
hlt
xchg
xchg
pop
fwait
push
add
cmp
pop
add
cmp
lret
cmp
or
pop
inc
in
iret
sub
adc
or
pop
xchg
aam
lret
fcmovne
push
cmpsl
lcall
aam
pop
or
test
add
stc
adc
ds
adc
ucomiss
sbb
out
lea
push
icebp
adc
sub
cmpsb
mov
jp
insl
call
mov
xchg
add
in
mov
leave
mov
testb
fsub
lea
lcall
fistl
push
cmp
xchg
jle
div
mov
sub
dec
enter
fnstcw
mov
mov
push
adc
adc
fists
push
fwait
sbb
add
mov
ljmp
push
fldt
or
push
scas
fists
mov
cmpsb
dec
loope
mov
pushw
jle
imul
lock
data16
add
dec
push
cmpsl
inc
xor
and
les
jl
subb
jne
dec
fs
lret
pop
scas
pop
int
sbb
adc
or
jl
cmp
movsl
mov
out
dec
or
sbb
mov
add
mov
adc
ret
outsl
pop
mov
les
dec
rcll
ret
sbb
pop
jmp
jecxz
inc
jg
xchg
xor
or
xchg
mull
sbb
xor
xchg
mov
fcmovnb
cmp
push
and
push
bound
dec
cs
sub
xor
outsl
push
cmp
mov
rorl
call
rolb
loopne
js
ja
fisubl
mov
mov
xchg
repz
push
jnp
add
inc
jl
push
fwait
test
mov
jne
arpl
dec
pop
cmp
arpl
sub
dec
lahf
aad
mov
mov
mov
add
adc
loope
mov
test
xchg
mov
jecxz
and
pop
fwait
mov
or
hlt
or
xor
in
lods
sahf
pusha
dec
sbbl
div
jne
or
sar
loop
lret
mov
cmpsb
xchg
nop
sub
or
mov
lock
jb
rcrl
les
cmc
mov
mov
hlt
push
inc
pop
sub
mov
daa
gs
lods
jmp
lret
gs
xchg
sbb
out
out
inc
daa
adc
jmp
mov
inc
adc
clc
mov
cmp
mov
sub
jle
shlb
scas
call
cmp
add
aad
push
lods
dec
cmpsl
jns
add
xchg
jo
xlat
and
loop
inc
or
inc
out
nopl
rcr
add
shl
mov
fsubrs
movsb
mov
xor
int
jl
fsts
cmc
arpl
imul
mov
aaa
out
daa
push
or
adc
iret
rep
idiv
ss
mov
mov
lea
inc
jmp
lret
jecxz
imulb
imul
jmp
lods
pop
mov
sub
pop
mov
dec
es
jne
cwtl
mov
jo
ljmp
jl
out
stc
rorb
adc
xchg
rorl
stc
sub
cmp
jno
imul
lds
repnz
dec
movsb
and
in
loopne
out
aaa
push
hlt
jno
and
daa
lret
into
xchg
mov
jae
repz
ret
add
in
rolb
push
into
into
fldenv
push
fsubrs
adc
xchg
orl
add
adc
mov
add
dec
mov
dec
inc
and
or
ss
js
stc
adc
pop
jns
sbb
lahf
xor
jnp
mov
adc
lcall
push
inc
rcr
adc
jg
push
add
into
test
and
insl
mov
adcl
jle
xchg
pop
out
out
xor
cmc
inc
insl
faddp
js
cwtl
call
daa
fildll
repnz
or
out
cmp
scas
pop
sbb
xchg
pop
pop
jmp
fstpt
pop
gs
data16
lods
push
ret
pop
fmul
inc
rcll
pop
pop
or
hlt
test
dec
cmp
and
and
lock
outsl
into
cld
pop
jle
jmp
cmp
jae
add
in
in
or
mov
jns
sbb
movsb
push
aaa
pop
push
xor
int
cmc
pushl
mov
xchg
idivb
insb
and
loopne
aaa
jl
test
int
cmp
rorb
or
iret
ss
loop
add
cmc
mov
lods
or
inc
fbld
mov
decb
and
das
cmp
nop
sbb
pusha
mov
jmp
insb
and
add
les
stc
sbb
jl
test
movsl
adc
adc
pop
mov
adc
popl
mov
adc
xchg
pop
adc
or
test
mov
cmp
scas
push
adc
adc
shrl
cmp
popf
pop
shrb
pushf
ja
arpl
ja
mov
pop
mov
jne
fdivrs
mov
imul
push
push
rolb
inc
xor
cmp
movb
mov
cmpl
and
aas
popf
neg
jg
movsl
out
mov
xor
pop
xorb
or
loope
cmc
fisubl
xor
add
in
je
lcall
pop
cmp
fmulp
lods
movsb
addr16
inc
shrl
pop
mov
xchg
roll
icebp
out
ja
inc
loopne
sbb
loope
lahf
inc
nop
out
push
cli
stos
push
mov
mov
dec
aam
cmp
xchg
lahf
fwait
adc
in
push
jl
test
and
or
cltd
push
fs
xchg
arpl
jae
pop
and
and
xor
popa
cs
mov
out
mov
dec
sub
and
xchg
xor
inc
mov
or
js
test
and
mov
mov
scas
push
sarl
and
scas
scas
into
rcrb
add
mov
push
orl
daa
add
adc
mov
pop
xchg
cltd
orl
dec
jae
ficoms
and
aas
ret
jns
pop
and
ret
sti
xchg
imull
mov
mov
mov
xchg
sbb
mov
fs
add
mov
leave
shrl
mov
or
xor
and
add
pop
inc
push
push
mov
push
cmp
test
cli
call
loope
das
xchg
sbb
enter
cmc
in
in
pushf
in
dec
nop
jp
mov
adc
xchg
push
ja
je
test
inc
jo
mov
inc
jno
add
out
js
mov
into
dec
ljmp
imul
insl
xchg
loopne
adc
cmc
inc
push
loope
push
ljmpw
outsb
lahf
mov
dec
dec
sbbl
fisttps
dec
test
roll
mov
pop
stos
fimuls
xor
mov
lods
popf
scas
xor
push
cwtl
add
cmp
pop
dec
mov
mov
lods
sub
push
cwtl
xlat
cmc
ja
push
add
test
and
add
ss
dec
pop
sarl
xchg
or
mov
arpl
mov
xor
leave
jle
or
cmp
test
cwtl
mov
cmp
rcrb
in
adc
mov
das
sbb
inc
push
xchg
aas
cwtl
mov
sub
dec
repz
or
add
enter
add
fwait
in
lock
addr16
test
adc
cld
repnz
push
add
filds
inc
shrb
jmp
imul
xchg
jbe
pusha
fmul
and
cmpsl
adcl
sbb
mov
sahf
lcall
addr16
jno
stc
sub
mov
mov
int
loop
lret
inc
je
insb
movsb
xchg
popf
andl
adc
xor
decl
cmp
mov
adc
ja
test
aam
mov
and
aam
push
aas
or
iret
jge
shl
ja
dec
sti
shlb
aas
cmpsb
aas
loope
iret
sub
jnp
adc
cmpsb
cmpsb
jmp
sbb
xor
rorl
leave
sarl
push
mov
int3
movsl
aas
movsl
test
push
and
pop
mov
jg
cmp
adc
xchg
and
mov
add
addl
into
dec
pusha
mov
in
dec
mov
iret
push
xor
add
and
shll
sahf
or
fidivs
cmp
hlt
inc
mov
push
and
lods
jp
sub
mov
mov
or
cmp
out
pop
daa
iret
lea
push
inc
aas
inc
loop
sbb
fnstsw
and
jg
mov
add
fs
mov
jo
xor
call
arpl
xchg
add
andl
adcl
jle
and
int
sub
cmpsl
loop
cmpsb
fucomi
or
imul
xchg
test
jo
dec
faddl
flds
loopne
sbb
jecxz
js
inc
mov
fucom
insl
mov
and
popf
jp
add
mov
icebp
or
pop
inc
push
icebp
pop
or
out
sbb
or
sbb
fdivrs
inc
adc
das
mov
and
dec
icebp
push
inc
loopne
inc
mov
mov
cmpsb
adc
cmp
cmp
adc
fdivp
adc
mov
in
sub
roll
iret
lock
xchg
cmp
and
scas
sbb
cmpl
mov
enter
push
rclb
mov
adc
daa
fstps
and
pop
cltd
push
pop
mov
loope
inc
pop
in
jmp
push
jg
mov
push
shrb
push
mov
test
mov
mov
in
in
lods
adc
sahf
addb
cmp
adc
mov
mov
lret
xor
add
and
cs
jp
fwait
les
sbb
push
int
push
mov
and
mov
sub
aad
lcall
ficompl
jno
sysret
filds
in
test
ds
inc
mov
mov
sbb
add
xor
pop
loope
pop
sbb
flds
bound
inc
out
or
in
insb
pop
jbe
cmp
cmpsl
shrl
push
mov
push
mov
push
mov
jno
xchg
imul
stos
sub
mov
add
clc
les
aad
pop
add
cmp
pop
scas
adc
daa
add
pop
jo
mov
push
lahf
mov
dec
lahf
mov
imulb
mov
xchg
mov
rclb
fs
xchg
ds
and
sub
xchg
inc
mov
xchg
jle
int
pusha
lds
dec
cli
jge
lea
and
es
and
imul
push
dec
mov
jae
mov
jne
repz
push
incl
pushf
push
pop
fisttps
ret
cmp
andl
jo
jnp
decl
add
out
sub
mov
push
jb
sub
fwait
mov
test
mov
lret
inc
cmp
adc
or
push
data16
dec
push
ljmp
aas
push
nop
lcall
push
pop
aaa
inc
lcall
out
out
xchg
enter
cs
movsl
jae
pop
push
inc
pop
add
das
adc
lea
bt
push
dec
dec
movsb
subl
cltd
mov
cmp
lret
and
cmpsl
inc
mov
jae
pop
dec
movsl
test
clc
pop
ljmp
outsl
ret
mov
dec
pop
pop
jle
mov
push
adc
adc
fmull
add
push
cmpsb
add
test
or
push
aam
cmp
add
xchg
or
mov
js
test
adc
rcrl
mov
mov
mov
sub
inc
add
lock
js
lahf
stc
dec
cmp
inc
iret
bound
mov
or
jg
xchg
adc
cmp
inc
not
cmpsl
mov
or
mov
in
aad
mov
sbb
inc
jo
jp
sub
sub
sbb
jle
sub
jbe
sahf
andb
jbe
jne
ss
mov
ljmp
or
add
xorl
push
sub
mov
xchg
push
aaa
cmpb
pop
dec
xlat
xor
jp
lcall
mov
push
jmp
lcall
fidivs
sbb
mov
lods
push
sbb
cmp
xchg
pop
xor
decl
repnz
ljmp
jl
orl
or
pop
hlt
cli
cmp
or
add
push
scas
xchg
les
sub
jl
cmp
or
cltd
ljmp
lea
loope
pop
movsl
xor
fnstcw
lret
or
lret
repnz
jle
inc
or
imul
out
xor
divl
insl
sbb
or
not
push
std
test
mov
cmp
dec
adc
xchg
mov
mov
mov
ret
pop
pop
inc
movsl
or
cmp
bound
add
leave
repz
nop
xchg
or
jcxz
clc
mov
mov
out
or
mov
dec
mov
cmpsl
push
or
xlat
outsb
insb
dec
sti
sub
xor
lea
movsb
sbb
sub
loopne
std
outsb
xor
mov
bound
jmp
cmp
mov
add
inc
xchg
and
icebp
fdivrl
or
imul
xchg
imul
imull
push
hlt
stc
push
push
sbb
cwtl
adc
out
xlat
fbstp
int
popf
mov
cmp
push
icebp
fidivs
test
jne
sti
or
jno
shr
adc
jo
test
mov
arpl
fisubl
dec
cmp
dec
scas
add
sub
inc
stc
mov
popl
jne
add
sbb
xor
test
out
or
xchg
mov
adc
popf
pop
push
icebp
outsb
dec
cmpb
xchg
test
adc
in
fidivrl
cmpsl
pop
xchg
sbb
cmp
push
mov
in
into
mov
cs
aad
loope
stos
loop
cmp
jns
pop
in
mov
lds
mov
and
ficomps
mov
gs
cmpb
mov
jb
dec
push
ljmp
and
xchg
idivl
jb
inc
addr16
sbb
push
mov
clc
lret
mov
nop
in
push
sub
outsl
aam
xor
addr16
insl
decb
sub
jbe
into
jne
jg
push
mov
pop
negb
into
xchg
cmpb
mov
and
cmp
jnp
sub
mov
add
insb
ror
mov
repnz
push
or
mov
mov
sub
cmp
mov
and
mov
or
cs
test
xor
pop
xor
pop
push
mov
lods
mov
cld
fists
sarb
je
xor
xor
jns
dec
xchg
mov
popa
xchg
add
jno
jmp
rol
mov
insb
fidivl
nop
push
adc
sub
mov
rcll
nop
sbb
ret
movsb
int3
lret
ja
gs
pop
push
push
mov
call
gs
adc
gs
loopne
push
sbbl
push
popa
pop
cmp
add
hlt
mov
dec
daa
xor
int3
push
js
or
test
iret
xor
cmp
and
inc
stc
pop
adc
xchg
or
ficoms
sub
xor
stos
mov
xlat
push
aad
imul
mov
pushf
push
pop
aaa
mov
ror
jns
xor
fs
add
push
xchg
or
aam
xlat
insb
push
xor
inc
fisttpl
sbb
push
imul
add
fwait
incl
add
add
and
inc
sub
call
push
test
dec
xchg
jo
mov
pop
in
jecxz
mov
and
lahf
dec
inc
lcall
mov
push
ficoml
xor
testb
gs
test
dec
mov
or
xchg
jbe
push
leave
popf
mov
jbe
iret
inc
push
inc
cmp
xchg
xchg
mov
mov
and
mov
scas
test
fldt
xor
int
and
jg
jge
scas
pop
data16
and
insb
fsubl
and
ds
lret
call
int
inc
call
stc
arpl
cwtl
or
mov
imul
sbbb
cmc
add
cmpsb
dec
sub
fs
sbb
mov
add
addl
data16
jmp
xchg
mov
loop
imul
repz
loopne
jle
les
popa
rol
adc
cltd
in
outsl
js
sbb
mov
jo
mov
pop
repz
push
fidivrl
pushl
add
iret
test
add
mov
and
adc
pop
inc
inc
or
sarb
mov
jnp
xchg
loop
popa
enter
cltd
xor
mov
je
jnp
and
mov
jmp
shlb
mov
and
jmp
loopne
mov
sbb
xchg
pop
jge
cmp
cmp
mov
mov
pusha
mov
push
sub
and
adc
sbb
mov
call
add
inc
sbb
sub
jle
pop
sub
in
stc
sub
and
addr16
pop
sub
shrb
sub
dec
cmp
xchg
aaa
sub
popa
outsb
mov
lcall
aad
and
xor
jno
xchg
fcmovu
dec
pushf
adc
sti
mov
stos
fsubr
xchg
pop
fsubl
jmp
scas
lds
mov
xor
iret
std
repz
bound
cld
icebp
push
test
sbb
mov
lea
xchg
pushf
sahf
ret
dec
push
sbb
jns
mov
cmpl
fsubp
jb
cmp
push
or
pop
movsb
jge
add
push
mov
inc
adc
call
movsb
sub
sti
mov
fildll
jns
movsl
aad
into
gs
je
test
dec
adc
popa
ds
xor
push
xchg
lods
lods
cmp
cld
push
mov
jo
insl
lea
jne
ss
mov
or
xor
lock
inc
cmp
mov
lock
sbbb
stos
mov
pop
jl
dec
dec
hlt
mov
test
push
leave
insb
sub
ss
jecxz
leave
inc
push
cmp
or
jnp
movsb
sub
jo
test
xlat
dec
jnp
cmp
int
test
mov
inc
lock
clc
pusha
int3
or
hlt
dec
decl
xor
dec
cmp
sti
cwtl
pop
fdivp
push
adc
inc
fucom
jb
jecxz
out
or
out
scas
out
inc
cmp
sbb
insl
clc
pop
push
adc
cltd
in
into
enter
pop
jge
notb
int
repnz
adc
jp
inc
cmp
lahf
pop
cld
or
shll
call
icebp
shrb
jl
xchg
jae
inc
cmp
pxor
fidivs
pop
nop
jns
add
mov
ljmp
lcall
and
out
je
call
nop
push
dec
je
outsb
mov
inc
sub
push
pop
jns
enter
scas
fadd
cwtl
xor
add
cltd
xor
add
add
pop
mov
pop
test
sahf
lods
xchg
jle
jmp
sbb
bound
cmp
mov
sub
xor
pop
push
inc
cs
imul
pop
dec
aaa
jge
mov
mov
jo
stos
dec
cs
and
cmp
or
fcompl
mov
jmp
movsb
scas
mov
fidivrl
femms
mov
inc
test
or
inc
lcall
daa
clc
popf
xor
jle
mov
addr16
testb
pop
outsl
fisubs
arpl
xor
xorb
xor
mov
xchg
xor
pop
adc
lods
jns
add
cmpsb
xlat
mov
ljmp
pop
ret
xlat
shlb
and
ja
cmpsl
inc
mov
imul
add
xchg
call
mov
sbb
and
sbb
mov
inc
insl
jns
bound
xchg
jle
mov
sub
out
bound
icebp
hlt
push
leave
push
notb
sbb
add
dec
lds
xorl
cmpsl
daa
jg
je
enter
mov
test
fistl
bsr
mov
ja
sbb
mov
mov
inc
push
sbb
sub
jle
test
scas
ficompl
cmp
call
jns
pop
or
jae
mov
ds
dec
in
addr16
adc
outsl
inc
pop
scas
popa
das
dec
jl
fiadds
sub
popf
mov
scas
mov
inc
in
jo
xchg
or
aaa
cmp
movl
rcrb
jg
lea
movsb
int
sbb
outsb
pop
fisubrs
push
outsl
xchg
and
sahf
and
repz
lods
sbb
out
dec
or
pushf
movsb
xchg
cld
lahf
xor
ds
in
stc
dec
shr
cmp
scas
cwtl
push
int3
inc
fwait
out
sbb
mov
lock
xor
or
shl
push
sbb
out
stos
stc
pop
jae
xchg
pop
sbb
jp
fs
cwtl
cltd
movsl
dec
cld
or
mov
stos
mov
mov
and
sbb
sub
loop
cmc
inc
xchg
int3
loopne
stc
call
mov
push
loopne
faddp
test
pop
inc
ss
movsl
fcmovnu
jmp
shrl
fstl
xor
into
pusha
xor
cmp
std
pop
dec
btcl
int
stos
sbb
xchg
jb
cmc
out
push
cmpsl
psadbw
jecxz
sbb
or
push
adc
cmp
xchg
mov
sub
repz
dec
dec
sti
idivl
fucompp
pusha
cmp
sub
mov
sbb
cli
dec
xchg
mov
add
mov
push
dec
jmp
xchg
dec
dec
pop
ret
shl
or
pusha
add
aas
dec
xlat
sub
inc
ret
push
clc
outsl
lret
pop
push
xchg
rorl
xchg
test
mov
popf
push
xlat
xor
lods
aas
aad
dec
rcrl
dec
sbb
shlb
cli
pop
or
cmp
mov
enter
test
outsb
shlb
mov
fs
fistl
das
out
dec
mov
add
popf
mull
fistpll
ss
add
pop
or
sub
push
iret
lea
pop
xor
xchg
pop
jb
inc
call
pop
adc
adc
pop
mov
andl
mov
sub
dec
and
xchg
sbb
inc
stos
pop
dec
xor
js
leave
push
lahf
fnsave
fcomps
inc
cli
add
outsb
loopne
mov
xchg
inc
adc
lcall
scas
out
pop
mov
and
pop
and
or
adc
rclb
gs
mov
outsb
pop
jno
sbb
xor
jecxz
xchg
or
bound
cli
fcomp
push
ja
adc
and
dec
stc
shlb
cmp
iret
pop
inc
out
push
test
inc
pop
mov
xor
fnstcw
add
test
fadds
push
pop
sub
pop
add
sbb
adc
stos
cmp
inc
imul
sub
cwtl
mov
dec
loope
pop
popa
and
aaa
sub
jl
in
vpmacssdd
movsl
pop
out
inc
dec
popa
jbe
push
xor
add
out
imull
sti
mov
and
mov
mov
mov
aad
cmpsl
aam
jb
sub
jmp
push
add
mov
jecxz
cs
inc
jnp
and
dec
idiv
cmpb
mov
nop
andl
mov
push
xchg
mov
jle
sbb
xchg
lods
cltd
pop
flds
mov
inc
mov
popa
jae
add
int
add
push
xchg
popf
inc
movsb
mov
adc
outsb
fidivrl
imul
adc
xor
out
aam
pop
out
dec
sbbb
jge
mov
leave
pop
clc
mov
sub
fwait
sbbb
aas
shr
xchg
adc
sahf
mov
dec
xchg
test
xchg
or
inc
pop
clc
push
rcll
xchg
cwtl
add
push
cmp
cmc
jns
sbb
mov
sub
aad
push
ja
mov
popa
pop
js
xor
jne
jne
lea
jbe
pop
lea
mov
xchg
sbb
in
cs
pusha
mov
bound
jmp
and
into
push
pop
pop
repz
scas
fwait
repnz
xchg
test
push
jecxz
ret
mov
scas
or
leavew
test
imul
dec
mulb
mov
xor
cmp
xor
test
inc
push
and
and
lcall
out
mov
icebp
mov
pop
sbb
inc
ds
rcll
bound
mov
dec
push
adc
jno
sub
inc
daa
and
mov
inc
jl
je
pop
mov
mov
pop
fildll
sbb
sbb
pop
ss
and
sbb
pushf
fidivs
in
mov
scas
loope
aas
in
mov
cmc
mov
ljmp
pop
xchg
clc
dec
in
into
cmp
xchg
and
dec
xchg
icebp
test
cmp
inc
mov
fdivs
lock
int3
cld
push
cs
adc
jbe
and
outsl
mov
into
and
ja,pn
or
out
rcrb
jg
addr16
nop
xchg
push
cltd
and
mov
test
jmp
adc
outsb
xchg
aam
loope
idiv
out
faddl
lret
sbb
push
cmp
push
imul
leave
dec
addr16
sub
mov
std
movsl
xor
pop
xlat
pusha
jecxz,pt
in
stos
adc
dec
pop
adc
push
mov
mov
cmpsl
sub
je
jmp
adc
push
and
jp
rol
lock
cmp
test
call
add
mov
adc
add
mov
mov
mov
ret
push
xbegin
aam
sbb
pop
call
dec
je
icebp
clc
xchg
sbb
push
bound
fisubrs
push
aam
push
sub
pusha
dec
aaa
or
adc
into
lea
xor
ss
icebp
jae
rolb
in
cmpsl
push
xor
sbb
cmc
es
add
cli
and
add
sbb
xchg
stos
leave
hlt
enter
mov
aaa
aam
into
lds
sti
shl
jnp
mov
jno
push
push
mov
mov
in
lock
mov
lods
test
jecxz
rcrb
mov
jl
daa
add
cmpsl
lock
lock
cmpsb
cmp
lahf
inc
mov
inc
sub
es
ret
cmp
call
push
jbe
sahf
mov
or
adc
inc
jbe
xor
int3
pop
test
cli
cltd
pop
ljmp
fwait
dec
cmp
arpl
hlt
lock
loope
adc
data16
lcall
es
pop
stos
cmp
or
sub
sbb
fstpt
pminsw
pushf
inc
inc
jg
movl
pop
test
in
add
sub
movsl
ss
jmp
or
les
inc
pop
popa
add
inc
ss
push
mov
aaa
std
out
pop
mov
mov
mov
fdivl
and
xor
jmp
popa
popl
push
js
mov
inc
lcall
push
repz
cmp
fidivrs
aam
ljmp
add
push
pop
sti
int
and
ficompl
movsb
add
imul
sbb
test
sub
cmp
xchg
dec
mov
push
pop
pop
fistl
mov
mov
repz
testb
nop
cmc
add
inc
iret
lcall
mov
add
cmp
js
pop
js
scas
repz
pop
in
and
inc
adc
sub
and
mov
ljmp
gs
jno
sub
mov
and
sbb
sbb
in
pop
sub
dec
inc
sub
int3
dec
test
shlb
cltd
out
popf
sarl
cwtl
repz
call
loop
dec
jo
jle
mov
into
js
fildl
dec
stc
mov
xor
jne
stc
into
push
cmc
sahf
inc
fwait
subl
rorl
and
fistps
rcrl
xor
scas
call
fdivrs
jle
jmp
xor
push
jns
and
sub
cmp
pop
sub
mov
inc
dec
fdivr
or
and
cli
inc
pop
and
insb
shlb
scas
jns,pn
in
out
dec
dec
repnz
das
add
or
mov
cmp
add
fwait
inc
inc
roll
mov
popf
leave
sahf
enter
movsb
gs
push
ja
lock
mov
add
xchg
outsl
or
push
push
cmpsl
mov
cmp
mov
sbb
push
fwait
test
xchg
out
sbb
fcoms
call
xchg
and
int3
repz
jo
int3
mov
jmp
adc
imul
mov
cmp
repz
sar
leave
sahf
ja
or
out
es
loop
dec
pop
dec
sub
outsb
dec
in
inc
in
add
jmp
hlt
sbb
mov
add
cwtl
jmp
cmp
int
hlt
push
cmpsb
cmp
aaa
sti
sahf
out
enter
jl
outsb
push
add
cmp
pop
pop
mov
adc
jae
testl
call
inc
stos
mov
fwait
or
pusha
cli
pop
jecxz
jle
daa
shrb
mov
pop
test
out
div
add
sbb
int3
das
pop
jae
cmp
adc
fwait
cwtl
adc
fnstsw
xchg
mov
mov
loopne
inc
das
jo
push
subl
mov
and
xor
cmp
fcomip
sbb
inc
mov
mov
addr16
fildl
lret
adcl
aam
xor
jg
lret
push
inc
xchg
push
popf
mov
cs
xlat
add
pop
push
repnz
adc
pop
insl
xchg
jb
std
icebp
push
xor
fcom
inc
pushf
inc
pusha
jo
inc
jp
xorl
cli
sti
sub
clc
stc
sub
or
cmp
out
add
dec
push
mov
mov
loope
adc
mov
pop
ljmp
pop
enter
or
cmp
push
cmp
adc
fsubr
hlt
xlat
stos
jno
in
xor
pop
lahf
dec
dec
jb
lds
jne
cmc
push
lock
xor
cmp
inc
adc
outsl
dec
sub
aad
mov
xchg
out
int
mov
in
ret
pop
idivb
xchg
and
xchg
jns
gs
cmp
inc
fistpll
xchg
mov
lret
cmc
sub
jnp
imul
mov
ja
adc
and
inc
ret
stc
shll
push
test
mov
xchg
xchg
jp
push
pop
add
imul
mov
imul
push
xor
lcall
xchg
mov
ret
shll
hlt
push
aad
movsb
or
xchg
lahf
jecxz
mov
aad
jl
loop
loop
mov
xor
shlb
repnz
inc
jbe
sbb
addr16
movsb
imul
lret
push
mov
imul
mov
shrb
icebp
je
mov
inc
add
push
xchg
les
cmc
leave
call
insl
mov
aaa
pushf
xchg
pop
daa
inc
jg
sarl
outsl
xor
inc
dec
adc
out
mov
sub
dec
lret
js
xor
test
jbe
push
mov
mov
mov
std
fdivrs
cmp
rorb
cwtl
stc
imul
cs
out
jo
insb
std
scas
mov
into
cmp
insl
jle
mov
loopne
or
adc
sbb
mov
xor
pusha
xchg
clc
push
push
cmp
add
jb
aaa
outsb
lods
push
popf
xchg
push
cmc
inc
sahf
sbb
inc
nop
push
dec
cmp
xor
outsb
mov
add
gs
mov
test
cmp
cwtl
mov
les
fstpl
jmp
orl
cli
sbb
jge
cmp
push
and
pop
jo
outsb
adc
cmc
add
rcrb
pop
dec
adc
pushf
ljmp
fimuls
sub
mov
mov
xor
out
jle
pop
xchg
nop
dec
xchg
cmpsb
ja
cmp
push
test
fs
js
mov
pop
jae
mov
sub
pop
repz
sbb
sbb
cmpsl
or
cltd
in
inc
push
leave
mov
mov
xchg
or
inc
cmp
inc
xor
adc
rcl
aas
test
flds
dec
mov
iret
mov
fildll
xchg
push
sub
or
fiaddl
pusha
jmp
jg
mov
cmc
lods
or
rorb
scas
mov
mov
inc
lahf
lahf
fmull
les
jae
mov
popa
pusha
lods
test
stc
xor
sub
push
shll
sbb
pop
icebp
cs
push
js
pop
pop
mov
mov
fcom
pop
ret
mov
fistpll
int3
aad
lret
add
push
or
sti
aam
jp
cmp
cmp
add
or
in
mov
sub
jl
push
adc
inc
cmp
mov
adc
cltd
jne
inc
insb
inc
lahf
sti
fs
add
out
inc
cld
pushf
lea
jge
fmuls
pop
add
repnz
xchg
push
les
outsl
test
pop
mov
in
div
ficoms
test
mov
movsl
loope
cmp
insl
xchg
inc
ljmp
push
and
outsl
adc
pop
pop
stos
cmpsb
call
enter
jne
sahf
and
hlt
addr16
mov
and
sub
clc
ds
sub
xor
jae
dec
mov
out
jp
sub
mov
add
clc
mov
inc
xor
shlb
inc
cmp
mov
push
jle
outsw
add
mov
icebp
push
xchg
sbb
insb
arpl
fdiv
pop
pop
cmp
es
test
cmpsl
mov
test
addr16
add
arpl
sbb
sub
sbb
xchg
lahf
aad
dec
cmpsl
aas
and
add
and
push
loopne
in
lock
xor
ja
inc
cmp
xchg
or
adc
jb
xchg
dec
cmp
add
pop
fiaddl
or
xchg
mov
xlat
loopne
mov
add
stos
jl
push
inc
add
sub
pop
nop
adc
adc
cmc
js
les
adcb
mov
push
enter
mov
pusha
lds
adc
ljmp
mov
sbb
xchg
ja
ja
add
ds
cmpsl
push
xor
mov
adc
xchg
scas
mov
adc
sbb
scas
push
mov
add
jb
mov
add
mov
pop
and
popa
inc
inc
pop
or
jle
jns
sbb
ss
fwait
xchg
insb
mov
dec
mov
nop
call
mov
in
pop
mov
stc
sub
inc
addr16
imul
dec
cmc
sub
pop
xchg
aas
or
xor
cs
fs
pop
shlb
gs
push
hlt
imulb
nop
fwait
addb
cmpsl
nop
jge
shrl
pop
jge
pop
xchg
adc
out
jbe
mov
mov
mov
dec
popa
imul
mov
adc
subb
cli
mov
push
inc
jns
fldl
imul
pop
lret
setnp
nop
adc
lret
ja
ljmp
ss
push
add
js
ret
stos
imul
ja
test
mov
fdivs
add
cmp
jno
inc
xchg
iret
cli
iret
mov
out
in
lock
test
scas
cmp
jmp
cwtl
mov
mov
cvtpi2ps
adc
xchg
and
inc
sbb
das
test
mov
cmp
pop
xchg
jbe
xor
mov
adc
sbb
cmp
fwait
nop
rolb
popf
into
lret
sub
pop
mov
jge
out
test
push
push
gs
scas
push
insl
adc
push
stos
and
inc
add
scas
sbb
je
sub
je
sub
cli
mov
or
push
test
mov
adc
inc
fwait
ret
or
hlt
ljmp
or
out
adc
fbstp
push
lret
inc
xchg
smsw
daa
cld
mov
dec
stos
popa
dec
repnz
out
jb
dec
lods
mov
ffreep
notl
adc
pop
sbb
push
push
and
adc
push
or
call
mov
push
fildl
popa
insb
test
add
dec
push
mov
pop
and
cmp
fyl2x
into
pop
cld
mov
repnz
out
pop
mov
dec
test
pop
test
jnp
rorl
mov
dec
in
add
out
aaa
loopne
jae
ja
or
in
dec
enter
mov
inc
shrl
and
aad
sub
sbb
in
jbe
movsl
movsl
rcrb
popa
jmp
jnp
fs
mov
movsb
mov
mov
xor
aas
pop
dec
insl
in
cmp
popf
mov
pop
cmp
pop
adc
sbb
push
scas
and
xchg
pusha
xchg
jae
test
add
and
roll
mov
or
pushf
xchg
js
push
outsb
inc
loop
imul
and
xchg
dec
les
push
stos
fst
pop
sub
enter
rorb
fildll
cmp
rorl
mov
mov
push
test
push
jle
pop
lcall
add
movsb
sbb
shlb
xchg
jmp
xorl
mov
add
mov
cmp
mov
loopne
es
fsts
push
xchg
push
sarl
fsubs
and
aam
dec
cli
jecxz
inc
push
enter
dec
aaa
arpl
adc
shll
lods
dec
aaa
stc
mov
pusha
shlb
xchg
add
xorl
jmp
lret
ss
xchg
roll
hlt
pusha
jns
fcoml
xor
push
inc
inc
jno
ret
pop
pusha
popa
mov
ja
aad
push
xchg
rcr
push
jo
jmp
push
popa
jo
push
and
outsl
loope
mov
lods
mov
mov
jno
mov
loopne
fstps
dec
and
arpl
rol
mov
jae
jmp
and
adcl
inc
or
jae
ret
xchg
aad
mov
inc
repnz
ja
xchg
sub
sub
cmp
push
popa
sahf
mov
sbb
lea
daa
ret
pop
pusha
lods
out
jg
push
inc
add
cmp
data16
hlt
ss
cmp
pop
push
sbbb
xor
int
pop
mov
jbe
xlat
pop
cmc
jp
lock
add
test
mov
mov
cmp
and
shr
mov
xchg
inc
cmp
mov
es
jne
sub
mov
lock
shld
xchg
ss
imul
ret
scas
mov
iret
xlat
inc
fwait
cli
mov
fwait
mov
adc
ds
subl
sbb
mov
dec
push
push
test
mov
mov
xor
dec
pop
pop
add
mov
ud2
das
pushl
roll
mov
xor
xchg
lahf
aam
mov
cmp
jp
addr16
fistps
inc
mov
xchg
mov
sbb
repz
cmpsl
fcoml
push
mov
mov
ds
xchg
jecxz
mov
jb
jno
inc
sarb
jp
add
loopne
repnz
push
fwait
into
mov
rcr
pop
jo
leave
adc
sub
xor
dec
jo
push
je
ret
push
cmpsl
mov
push
or
sub
call
pusha
pop
popa
in
mov
in
in
sbb
dec
push
adc
insb
push
mov
xchg
out
scas
cli
cwtl
out
add
popa
shlb
sbb
jae
sti
insb
mov
in
hlt
iret
xchg
pushf
sbb
xor
addr16
shll
iret
pusha
pop
idivb
lds
jns
lret
push
add
test
jae
sbb
sti
push
xchg
stc
push
adc
sarl
js
out
loopne
cmp
sub
push
or
test
push
cmp
mov
sbb
jl
rorb
rorl
adc
addr16
add
jle
movsl
jns
data16
sbb
loop
push
addr16
pop
les
rorl
das
in
cltd
test
test
fcmovne
in
cmp
cmpsb
xchg
jecxz
ret
out
loop
scas
roll
cmpsb
pop
test
and
into
icebp
push
ds
jb
mov
jnp
imul
dec
js
mov
lahf
pusha
cltd
outsl
cmp
addl
das
fsubs
push
loopne
pop
lret
les
jae
lcall
int3
neg
pushf
loop
pop
iret
mov
dec
pop
in
xor
cmp
jg
jmp
cmpl
mov
subb
cmp
mov
cvtdq2ps
and
push
dec
out
ss
mov
jg
aad
pop
sub
rorl
xor
pop
or
push
out
jae
lahf
sti
adc
fldt
jg
out
xlat
inc
sub
dec
aad
push
and
pop
jmp
daa
sbb
cld
push
outsl
fidivrs
movsb
xlat
pop
rcrb
ss
inc
enter
mov
xchg
mov
xor
jns
jmp
cmp
and
inc
mov
mov
gs
and
fldenv
fisubrl
loop
sub
jle
cmp
lock
addr16
mov
push
cmp
dec
call
xor
in
jae
mov
cli
mov
pusha
lods
subb
inc
mov
mov
aam
mov
mov
dec
aaa
xchg
cmc
loop
data16
fnstsw
jle
pop
adc
cmp
sub
or
dec
loopne
enter
fbld
cmc
xorl
aas
mov
push
loopne
push
push
ljmp
or
iret
loop
sub
pop
push
sbb
ret
fisubs
jmp
and
add
clc
pop
xor
sub
in
sbb
popa
mov
push
fyl2x
out
mov
mov
cmp
xor
aas
stos
scas
cwtl
mov
out
jnp
xchg
or
notb
notrack
popf
add
movsl
addb
outsb
addr16
sbb
pop
int
xchg
dec
lahf
mov
dec
scas
js
shlb
outsl
xchg
push
push
pop
addr16
iret
popf
adc
and
push
call
in
popf
dec
add
add
mov
movsl
gs
call
les
jp
push
inc
loop
int
movsl
mov
popf
sahf
fucomip
insl
out
mov
mov
fwait
jo
arpl
pushf
es
sarl
push
sbb
test
add
loope
pop
pop
or
push
enter
adc
adc
sbb
mov
xchg
and
and
cmp
addr16
icebp
adc
cmpsb
xor
xchg
mov
push
es
data16
pop
mov
pop
hlt
out
sub
ja
cmp
mov
aaa
test
jmp
and
sbb
aam
xor
cmpsl
out
xor
enter
repz
jo
push
jo
ret
cmp
inc
sub
push
pop
cmp
mov
jne
and
mov
movsl
push
test
mov
xor
movsb
cmpsb
insl
add
jle
shrb
dec
xchg
je
and
js
in
addr16
pusha
mov
push
mov
mov
sub
icebp
popf
push
pop
mov
cmpsb
aas
hlt
test
mov
push
dec
push
scas
sub
cltd
push
dec
cmp
ret
mov
mov
xor
xchg
dec
js
mov
lock
xchg
pop
push
out
in
jb
cld
mov
inc
andl
push
outsl
xchg
push
lea
push
add
out
xchg
xchg
adc
add
push
leave
test
lret
or
dec
dec
mov
test
adc
and
popa
in
and
push
xchg
jne
fsubr
fldcw
jnp
adc
stc
aas
jmp
jge
rorl
sub
aam
pop
jae
lret
lds
pop
stos
gs
inc
gs
test
aam
sub
sti
and
mov
aam
movsl
shrl
stos
add
aas
sarb
xchg
sub
nop
imul
sahf
mov
mov
and
jmp
mov
mov
shll
fldenv
xor
mov
stc
outsl
sbb
cwtl
loopne
mov
jb
cltd
sbb
imul
mov
jge
ja
sbb
push
outsb
and
pop
js
or
enter
and
js
inc
nop
mov
sub
bound
dec
adc
dec
rorl
mov
imul
icebp
imul
in
lret
shr
jge
insl
xlat
es
out
jl
sub
inc
jae
or
cmp
add
clc
in
mov
test
je
aad
hlt
cmpsb
daa
test
mov
imull
arpl
or
dec
icebp
sbb
adc
int3
sti
push
jmp
fidivl
mov
xor
sahf
sub
xchg
xchg
adcl
inc
lret
xor
cmp
dec
pop
cltd
pop
enter
fsubrp
lods
mov
les
mov
je
sar
pop
pop
mov
jns
xchg
push
and
pop
movsb
push
or
or
jmp
stos
repz
scas
ds
jns
frstor
cwtl
ja
mov
jl
mov
and
js
xchg
jge
xchg
mov
clc
pop
mov
mov
xchg
imul
xchg
shlb
inc
jecxz
dec
push
xor
lods
push
testl
adc
insb
lret
cld
add
fisttpl
rorb
out
jo
adc
mov
add
add
into
scas
mov
dec
test
xor
sti
or
fcompl
mov
jge
push
mov
push
dec
pop
and
jnp
test
sub
and
imull
loope
cmp
jle
iret
cmp
lret
idivb
mov
inc
mov
fisubl
or
adc
mov
ficoms
cmp
iret
je
fimuls
push
insb
mov
ja
in
scas
jo
aad
jg
scas
xchg
lcall
add
sbb
std
pop
cmp
lret
adc
sbb
je
adc
push
and
xor
xor
fwait
cmp
rcrl
and
inc
push
adc
mov
inc
cmp
mov
mov
lods
mov
adc
mov
xlat
sbb
divb
xor
sbb
aad
xchg
sbb
ret
pushw
add
nop
sbb
outsb
iret
lods
test
push
dec
cmp
add
in
addr16
or
sub
jbe
fistpl
addl
sub
icebp
xchg
lahf
xor
fstpt
mov
fwait
xor
dec
fnstsw
arpl
cmp
fwait
mov
inc
push
sti
movsl
xor
dec
andl
inc
mov
mov
cmpsb
add
xchg
shl
rol
inc
es
adc
in
add
jmp
lret
xor
test
mov
xchg
inc
inc
adc
mov
mulb
mov
jo
pop
pop
add
cmp
xchg
push
xor
fs
jae
in
stc
jno
and
mov
or
jno
lock
cmp
and
gs
mov
arpl
mov
mov
and
ds
rep
cli
enter
jl
or
pop
mov
mov
pop
adc
inc
jmp
mov
addr16
mov
sub
imull
dec
std
xchg
cmp
enter
faddp
inc
ret
xchg
inc
scas
data16
xlat
and
inc
insb
hlt
push
out
js
jg
pop
mov
or
or
movsl
push
fdivr
idiv
je
popa
xlat
push
in
jmp
add
fsubp
orb
repz
mov
push
cs
stc
daa
jmp
adc
scas
sub
addr16
shl
jnp
scas
jb
pop
xchg
or
movsb
enter
mov
lahf
pop
in
push
pop
sub
test
mov
push
mov
mov
out
inc
rcrb
mov
sub
sub
adc
fsubs
ja
aad
xor
das
add
jns
push
push
pop
ljmp
js
ljmp
mov
jae
dec
sbb
imul
push
xchg
mov
pop
push
cmp
add
pusha
popf
xchg
push
stos
add
scas
icebp
mov
icebp
sub
inc
arpl
sub
add
aas
xchg
push
icebp
aas
out
dec
mov
dec
inc
shrl
sti
jmp
adc
cmp
daa
js
mov
push
lcall
clc
enter
mov
clc
push
mov
add
jb
rclb
pop
xlat
xor
popf
dec
push
jbe
fistpll
inc
mov
jb
xor
je
jp
nop
push
jno
xchg
sbb
lods
cmp
xchg
push
xadd
mov
aad
sbb
or
and
cmp
lret
push
lret
filds
push
mov
loope
adc
pop
pop
jg
adc
pop
push
lahf
sbb
movsb
mov
cli
mov
xchg
nop
sbb
test
dec
shll
test
xor
or
scas
cli
div
int3
sbb
sub
pop
lock
lds
sub
sub
shll
xchg
orl
cmp
xlat
cwtl
repnz
repz
ret
and
add
ss
jle
pop
sti
add
push
aam
call
dec
mov
icebp
lret
jge
adc
sbb
jne
cmp
xorl
adc
push
cmp
mov
pop
leave
test
pop
rol
pushf
xor
fsubp
aaa
mov
les
cli
test
test
mov
in
loope
adc
inc
or
jmp
pop
test
xchg
bound
mov
sbb
mov
pusha
lea
outsb
loopne
sbb
je
ret
jle
ja
daa
mov
flds
lret
sahf
push
pop
jl
hlt
inc
movsb
loope
cmp
dec
inc
jg
test
popf
mov
mov
mov
ss
into
push
mov
and
arpl
or
cmpsl
push
mov
or
jae
push
cmp
and
test
arpl
jb
aad
push
xor
sbb
xchg
jmp
push
shrb
call
test
negb
sbb
sbb
or
test
lods
sub
jnp
mov
jbe
imul
xchg
sti
xor
lock
add
adc
mov
dec
pop
jb
push
xor
pop
outsl
test
shll
retw
cmp
movsb
cmpsl
je
int
stos
dec
aam
add
into
xchg
nop
orl
dec
sub
push
mov
xchg
and
pop
cmp
pop
dec
pop
mov
push
xor
or
pop
cli
bound
mov
jne
sbb
adc
in
pop
inc
pop
in
xchg
sbb
scas
ja
sub
leave
and
mov
or
mov
mov
orb
adc
loopne
adc
push
or
jno
dec
ljmp
pminsw
rorl
xor
sbb
loope
fwait
dec
push
push
inc
dec
mov
pop
fstl
stos
sub
push
and
inc
leave
cmp
or
mov
movsb
sbb
pop
popf
test
nop
inc
pushf
jbe
jb
andb
jne
lahf
sub
dec
test
jge
pop
and
fstps
jle
sbbb
leave
jge
mov
sub
and
lcall
popf
aaa
pop
out
sbb
lahf
repnz
rolb
lea
adc
sahf
dec
repz
add
ret
imul
out
lcall
push
push
push
jg
adc
shr
sub
leave
adcb
addr16
stos
xchg
mov
inc
sti
mov
lods
mov
xchg
mov
and
rcl
mov
mov
and
inc
cmc
mov
int3
ja
imul
and
adc
or
jno
push
aaa
cmp
out
test
fisubl
mov
imul
push
push
dec
sbb
cld
or
adc
adc
push
nop
sbb
inc
pop
xchg
movsl
jge
xor
sub
inc
repz
mov
std
mov
arpl
in
sub
sbbl
mov
das
push
add
cmpsl
ljmp
repnz
out
pop
mov
or
jo
xchg
out
xor
adc
shufps
and
fldenv
cmp
imul
popf
test
lea
inc
gs
push
scas
or
aas
insl
push
testb
jmp
add
sbb
popf
mov
daa
xor
jo
ljmp
ret
cmpsb
sahf
or
push
mov
sarb
jns
movsb
sub
les
sub
pop
stos
cmp
inc
inc
ljmp
test
insb
mov
adc
shrb
pop
lock
xchg
add
and
fmull
addr16
inc
imul
dec
repnz
xchg
dec
in
dec
ljmp
pop
sbb
nop
gs
out
ja
scas
cmp
mov
sub
add
jmp
stos
fisttpl
xchg
mov
inc
push
pusha
fdivs
repz
push
xor
push
mov
pop
mov
pop
mov
shll
movsb
mov
mov
cmp
xchg
lret
push
mov
jmp
fs
pop
and
fucom
mov
lahf
push
xor
xchg
iret
mov
popa
mov
dec
bound
iret
xchg
lret
adc
jge
dec
and
jp
lock
adc
pop
mov
pushf
popf
mov
sbb
cmp
mov
or
in
and
lcall
out
and
into
fisttpl
sbb
fisttps
push
push
cmpsl
sbb
les
jl
inc
inc
movsb
fsubrl
inc
in
test
sub
les
xlat
lods
add
das
jbe
inc
and
in
pop
sbb
add
push
pop
sub
pop
xor
loope
add
dec
jge
ljmp
add
lea
mov
lret
imul
dec
push
fs
xor
cmc
sbb
fxch
and
jg
sub
aas
icebp
decl
ret
and
xor
sbb
push
les
arpl
rolb
xchg
add
adc
movsb
std
cmc
mov
in
adc
test
inc
aas
mov
or
sub
iret
xchg
or
cld
dec
jp
mov
adc
dec
out
add
mov
ret
nop
and
mov
lahf
in
leave
fcoms
insb
and
dec
mov
in
inc
dec
out
pop
mov
cmp
out
inc
fldl
jp
xchg
dec
push
mov
arpl
sahf
lea
mov
mov
mov
mov
mov
sahf
out
mov
xor
mov
dec
cmc
icebp
or
sbb
sub
shr
mov
add
shrb
push
add
cli
inc
leave
in
push
jecxz
pop
stc
mov
fs
ja
mov
loope
push
jno
loope
adc
cld
jmp
and
mov
insl
jg
xchg
stos
addb
mov
imul
mov
push
inc
ficompl
dec
add
inc
push
pop
mov
mov
push
jnp
mov
dec
mov
pop
in
dec
fldenv
into
jne
and
sub
lret
cmp
mov
fwait
jp
adc
adc
adc
dec
lods
mov
push
lcall
sub
mov
into
lahf
mov
inc
cmpsl
mov
adc
mov
push
fsin
int
push
andnps
lret
mov
pop
rorb
mov
int
test
cli
icebp
xor
bound
cmp
int
movsb
or
add
push
inc
or
data16
jg
and
pop
lods
or
in
in
mov
int3
sbb
lods
in
xchg
aaa
xlat
adc
mov
jg
mov
and
cwtl
sub
mull
push
mov
popa
xor
mov
jne
test
pop
addr16
push
add
pop
loope
sub
mov
push
cltd
sbbl
inc
aas
aaa
jnp
push
mov
fs
fbld
jmp
mov
mov
call
cli
int
push
jno
repnz
repz
hlt
rcrb
jmp
xchg
out
shll
jge
sub
mov
xchg
movsl
xchg
pop
push
leave
paddusw
push
xor
inc
jle
pushf
aad
dec
and
add
int3
andl
pushf
and
mov
mov
addb
jnp
je
xchg
addr16
divb
popa
and
std
mov
gs
or
lret
mov
das
jmp
adc
fs
adc
dec
nop
jp
mov
and
fsubrl
xchg
dec
xchg
je
push
inc
stos
cmc
test
call
xchg
stos
sti
mov
dec
xor
jmp
outsb
jg
arpl
hlt
adcb
pop
mov
mov
cmpsl
jp
iret
insb
je,pn
mov
mov
xor
cs
pop
or
xor
stos
mov
jecxz
fiadds
jae
mov
nop
cmp
scas
scas
cmp
adc
insb
aam
sbb
out
negb
dec
cmp
pushf
adc
nop
cs
sbb
js
out
sbb
mov
test
push
add
mov
mov
loopne
fsubrl
cmp
push
pop
sbb
sbb
lcall
sbb
out
mov
mov
push
stos
popf
cmp
jmp
push
jb
add
js
cmp
mov
addr16
jnp
cmp
rcl
jae
in
popf
pop
pop
int3
pop
push
mov
arpl
dec
repz
mov
adc
fwait
outsb
leave
xor
xchg
out
cli
cmpsl
or
push
pushw
outsb
push
push
notb
lea
mov
cmp
cltd
xchg
int3
cmpsb
jae
mov
orb
je
sbb
xchg
mov
or
icebp
sub
cmpsl
add
filds
dec
rolb
jge
cwtl
in
or
cmp
push
int
insl
jns
push
push
or
jo
mov
jne
cmp
dec
push
lret
pushf
push
stc
loopne
sarb
mov
pushf
xor
movsb
loop
jns
mov
xor
fldl
pusha
push
repz
push
xor
push
cltd
mov
ljmp
and
cmpsl
aam
push
out
mov
lret
sub
cmp
sub
cmpl
inc
jg
or
outsb
xchg
scas
or
mov
data16
shrb
addb
push
jbe
mov
jne
adc
sub
aam
lea
and
inc
add
fs
imul
cmpl
lea
xor
mov
fsubl
sbb
out
mov
int
lock
lods
push
shlb
cli
mov
mov
repnz
jmp
mov
cmpsb
push
shrb
ds
addr16
jnp
xor
cld
pop
and
jg
pop
adc
cmp
push
imul
clc
dec
call
arpl
outsb
loop
xchg
jae
fwait
rclb
lds
mov
std
adc
mov
js
jecxz
jmp
adc
lret
inc
mov
lods
dec
dec
nop
aaa
push
das
cmp
cmc
add
fmuls
xchg
pop
fldcw
lods
repz
pop
xchg
es
xchg
sub
mov
dec
mov
mov
jp
jnp
inc
pushf
xorl
pop
sbb
imul
pusha
add
getsec
mov
lret
jge
dec
push
nop
add
ss
imul
jbe
pop
loope
jae
lock
mov
fdivl
sbb
imul
push
loop
xchg
std
cli
out
jnp
cmpsl
sub
or
pop
outsl
add
bound
into
sbb
and
xchg
jge
fisubrl
add
mov
push
push
fs
repz
jne
push
inc
out
subl
mov
loop
ret
loop
rclb
inc
lods
or
shl
mov
outsl
push
inc
push
fisttps
adc
mov
jg
mov
leave
sub
mov
std
dec
or
sbb
and
pop
or
xchg
push
push
push
adc
lds
repz
push
int
and
xchg
add
faddl
push
stc
jbe
lock
clc
je
dec
fs
or
or
fsts
test
jp
fbstp
mov
sbb
mov
xor
jno
ret
fbstp
adc
pop
and
dec
aad
loop
lret
mov
push
lret
movsl
in
ljmp
js
loopne
int3
movsl
inc
lcall
cli
negb
xchg
adc
adc
lock
shl
imul
loopne
xor
jg
mov
daa
add
mov
shl
neg
insb
fildll
loope
push
xor
mov
lcall
pop
ss
cmpsb
push
stc
mov
iret
clc
popl
mov
outsl
xor
das
repnz
pop
xchg
loop
inc
popa
loope
ss
dec
cmpsl
xor
dec
imul
mov
and
jge
jno
or
outsl
and
bnd
fimuls
ret
daa
xor
or
repz
add
mov
sub
jns
je
daa
mov
sbb
cli
xchg
movb
fsubl
and
xchg
fcomip
dec
xchg
mov
or
mov
aaa
je
out
outsb
mov
pushf
ret
jmp
ret
fwait
adc
cmp
js
js
fwait
push
mov
icebp
inc
pop
jg
adc
cli
sub
xchg
scas
dec
xor
cs
scas
cmp
in
shrl
mov
push
sbb
push
mov
inc
push
mov
mov
fildll
cmpsl
and
mov
lret
stos
lds
hlt
popa
jecxz
push
dec
popa
pop
dec
ret
dec
popa
pop
bswap
add
and
lret
push
lods
jge
mov
pop
lcall
pusha
xlat
sbb
mov
rol
loope
gs
cmp
loope
xorb
xor
push
ja
and
dec
mov
hlt
push
mov
cmp
sub
ficompl
cwtl
jl
jle
inc
ret
add
jmp
ja
cmp
out
jle
aas
and
jno
push
push
sbb
dec
js
inc
sub
stos
push
mov
xchg
push
fs
imul
insb
push
idivb
ljmp
lcall
mov
lock
and
push
cs
or
and
lcall
jne
imul
and
sbbb
lret
cmpsb
mov
cmp
pop
andps
pop
sub
cld
add
arpl
clc
jae
js
out
shlb
adc
ja
cltd
push
jl
rcl
das
mov
xor
imul
dec
mov
bound
inc
jne
push
movsl
add
cwtl
es
push
bound
sbb
lret
xor
sub
pop
cld
icebp
sbb
and
cmp
push
push
dec
loop
sub
jne
fistpl
mov
test
add
xchg
add
mov
scas
daa
cs
sub
mov
cs
sbb
aam
hlt
sub
negl
push
sbb
popa
add
pusha
fbld
stos
push
fistpll
mov
mov
data16
shlb
push
mov
adc
shll
mov
sbb
cmpsb
sahf
xchg
insb
jo
xchg
mov
movsl
add
out
sbb
pusha
jb
adc
jne
jecxz
shrb
iret
mov
movsl
out
stos
sbb
sub
call
call
bound
imull
insb
cmpsl
push
cmp
nop
test
mov
jmp
xor
mov
adc
nop
into
in
push
in
xorb
mov
cmc
outsl
icebp
adc
test
loop
or
and
push
bound
loop
das
cmp
mov
or
mov
sub
scas
out
cmp
cmc
sub
jbe
sbb
out
int
mov
mov
sbb
mov
pop
xchg
pop
xlat
rcrl
mov
test
stos
dec
movsl
mov
inc
xchg
and
or
aam
out
testl
xchg
push
rcrl
shlb
xlat
cmp
ds
fidivrs
pop
fstps
not
xor
nop
imul
and
inc
dec
push
ljmp
xor
stos
and
int3
lahf
cmp
or
adc
inc
stc
outsl
push
lea
cmpsb
loop
dec
cs
adc
cmp
xlat
xor
ljmp
jge
mull
cmp
jp
popa
and
cmp
lret
cmp
mov
mov
int3
inc
scas
mull
movsl
push
mov
mov
fstpt
ret
mov
loope
or
adc
pshufw
dec
push
jnp
jbe
int
sarl
sub
repnz
or
je
jo
xor
mov
jmp
push
dec
fisttpl
movb
xor
js
cltd
mov
push
sbb
loop
pushf
lods
fcmovnu
mov
pusha
jl
mov
cwtl
lcall
dec
les
subl
sbbb
and
pop
loope
out
test
mov
add
mov
pop
repnz
push
jmp
cltd
call
jmp
inc
mov
das
cmp
dec
add
mov
sbb
cwtl
push
test
dec
jp
leave
jg
pop
mov
jnp
das
jecxz
mov
mov
into
mov
push
test
jecxz
hlt
or
shlb
imul
testl
nop
enter
out
mov
lods
sub
push
dec
push
popf
xchg
rcrl
data16
cwtl
insb
mov
pop
sub
lahf
jge
mov
or
jb
push
cmp
push
mov
icebp
mov
jle
xchg
cwtl
sbb
inc
pushf
sbb
arpl
cli
test
pop
mov
scas
or
xchg
xchg
pop
leave
aad
add
pop
and
stos
lods
arpl
sub
mov
or
sti
jnp
xor
mov
dec
cmp
pop
into
lcall
out
into
cmpsl
pop
adc
test
fwait
out
bsr
mov
shlb
jns
fcompl
sub
fs
adc
xchg
or
xchg
mov
fsubrs
enter
push
sbb
dec
xchg
out
dec
inc
xchg
xchg
movsl
pop
xor
mov
fbstp
xchg
mov
gs
scas
test
cmp
inc
sbb
ja
pop
test
nop
or
mov
imul
inc
stos
insl
inc
addl
stos
jge
pop
int
mov
push
scas
or
xchg
out
je
jl
xorb
testb
into
xor
movsl
push
mov
movb
sub
mov
std
sar
insl
and
jb
dec
mov
lea
loopne
add
xchg
ffreep
cli
xchg
mov
inc
lods
lea
insl
push
push
outsl
ljmp
fldenv
cmpsb
xchg
jmp
pop
nop
pop
mov
cld
scas
inc
lahf
mov
imul
cmp
sbb
shrl
adc
js
cld
mov
test
fwait
in
xor
jnp
inc
adc
mov
stos
jge
imul
movsb
pop
lahf
scas
sub
outsl
dec
out
arpl
flds
or
inc
jmp
jle
cmpsl
mov
push
insb
dec
notl
das
xchg
jns
xor
popf
nop
push
pop
je
jb
ja
test
mov
sbb
call
pop
push
push
fiadds
jmp
cmovnp
in
sub
cwtl
or
cld
dec
stos
jb
aas
push
xor
mov
pop
bound
fiaddl
lret
xlat
int3
sbb
mov
inc
inc
and
cld
mov
js
push
jle
leave
push
sti
or
or
aad
cli
sbb
sub
xorb
cld
pushf
sbb
push
mov
dec
repz
sub
sbb
push
mulb
push
cmpsl
mov
mov
jmp
cmp
mov
stos
pop
pop
xor
enter
xchg
push
pop
adc
leave
ret
aad
fs
dec
push
add
mov
or
mov
decb
mov
mov
mov
pop
adc
in
shll
test
push
xchg
jp
pop
mov
cwtl
pop
in
push
mov
jns
or
icebp
nop
add
addr16
push
bswap
fisubl
jl
dec
sbb
xchg
jbe
sti
pop
shrb
jnp
call
out
sbbl
sahf
and
fcomps
into
divl
in
sti
cmpsl
add
aam
sbb
enter
and
jnp
xor
mov
dec
push
insb
call
outsl
sbb
test
fmuls
sub
pushf
dec
ss
cmpsb
imul
bound
mov
jo
cmp
xchg
dec
xor
push
jnp
leave
xchg
sbb
stc
loopne
mov
insl
testb
xchg
notl
je
clc
in
test
les
repz
int
or
jp
mov
push
dec
cmp
mov
ss
inc
test
test
enter
in
mov
arpl
mov
cwtl
cli
daa
test
fnsave
fdivrs
les
mov
mov
repz
pop
push
mov
cmpsl
pop
push
cltd
mov
ss
outsl
inc
inc
pusha
mov
iret
add
xchg
lret
test
das
shll
push
add
sub
push
and
faddl
pop
mov
stos
xchg
cli
jnp
adc
xchg
and
scas
pop
clc
xchg
sbb
mov
and
and
mov
cmp
xor
adc
adc
int3
sub
fsubl
shr
dec
jg
xchg
insl
les
add
fbstp
cmp
and
dec
jb
pushf
xchg
lds
jae
cmp
jne
xchg
jns
rorl
push
adc
fidivl
xchg
pop
out
xchg
es
adc
adc
mov
aad
push
js
das
cli
aas
xchg
dec
bound
bound
sbb
cmpsl
push
jne
fwait
cltd
and
jno
mov
xor
fwait
xchg
inc
aam
bound
in
popf
push
lahf
out
xor
cwtl
jns
jg
adc
xor
pop
shr
hlt
fdivp
and
mov
inc
test
ret
mov
mov
pop
pop
mov
and
add
mov
cmp
sbb
ret
xor
sahf
mov
jbe
iret
xchg
push
xor
pop
mov
xchg
sub
popf
call
cli
stos
or
cmc
outsl
rcrb
push
gs
xchg
xchg
cmpsb
sti
or
lret
mov
into
divl
jl
ret
xor
jbe
mov
jp
dec
cmp
aad
jl
lds
mov
mov
les
jns
push
pop
add
adc
push
test
adc
outsb
pop
pop
mov
mov
xchg
cmp
rorl
jno
cltd
sbbl
mov
int3
fldenv
xchg
fwait
xadd
push
out
popf
in
pop
xor
imul
adc
mov
xor
into
das
fisttpll
sub
push
loop
test
punpckhbw
int
ds
sbb
inc
xchg
jb
nop/reserved
andl
cmp
inc
mull
add
dec
add
push
fdiv
jae
imul
mov
enter
lahf
dec
xchg
mov
call
pmaddwd
dec
fwait
js
scas
leave
iret
sti
rcrb
imul
loopne
jp
cld
pop
pop
ret
pushf
fnstsw
jbe
adcb
lds
xchg
inc
inc
call
faddl
inc
mov
push
inc
rcl
ret
xor
or
lret
ret
mov
dec
fmulp
lock
pop
sbb
out
sbb
add
mov
xor
add
pushf
imul
xchg
in
sarb
jecxz
cmp
and
mov
lret
stos
adc
addr16
aas
lret
adc
jecxz
sub
in
dec
jmp
call
xor
out
xor
push
sti
scas
xrstors
in
das
iret
data16
pop
es
out
push
fldenv
ljmp
mov
sarl
jbe
sbb
in
sbb
sbb
jg
jecxz
test
mov
push
scas
mov
lret
or
sbb
xor
and
std
inc
sub
ljmp
xchg
sti
and
pop
imul
sub
sub
dec
sbbl
xchg
sbb
jl
pushf
jns
aas
pop
sbb
out
xchg
lock
ljmp
gs
stc
aaa
out
dec
jb
mov
jne
xor
inc
ljmp
jae
in
mov
mov
lret
int
adc
push
test
sahf
mov
push
dec
mov
xchg
cmp
cmp
adc
jno
std
ljmp
cli
mov
aam
mov
or
das
test
addr16
dec
pop
js
add
and
mov
adc
sarl
cmp
sbb
faddl
fmuls
repz
adc
xchg
jmp
fldt
jns
mov
mov
or
sbb
pop
pop
stc
inc
xchg
pop
out
xchg
clc
repz
mov
lods
ss
pop
push
mov
add
xchg
test
mov
fs
ss
imul
add
ds
pop
cmp
xor
mov
outsb
popa
std
shlb
or
jecxz
xor
adc
outsb
dec
add
int
xchg
fucomi
in
test
test
aad
xor
xchg
repnz
dec
add
mov
daa
add
cmp
in
mov
mov
xchg
xor
insl
mov
pop
mov
mov
jge
push
dec
push
test
out
mov
add
jecxz
pop
push
jp
fbld
mov
jns
pop
sbb
add
mov
shlb
mov
into
je
loope
out
mov
nop
je
xchg
xor
jl
and
and
ss
inc
adc
jbe
pop
int3
pop
mov
test
add
ja
jmp
add
lsl
lea
comiss
les
ds
xorl
mov
xor
xor
mov
inc
add
scas
outsl
cli
scas
leave
push
push
and
ret
scas
sarl
inc
hlt
outsl
lcall
jb
add
ret
xor
sbb
mov
mov
movsl
cmpxchg
repnz
sti
inc
aad
adc
aad
js
inc
pushf
sbb
xchg
or
ja
test
iret
xchg
shrl
push
and
pop
imulb
movsl
jae
sbb
call
cmpl
jge
je
jp
and
push
sbb
shlb
jnp
mov
iret
inc
mov
popf
scas
add
mov
mov
sbb
into
outsb
push
imul
cli
jmp
jae
mov
sub
or
es
jecxz
cmp
cltd
mov
movb
shll
xor
aam
dec
pushf
shl
mov
repnz
lods
and
mov
push
aas
sub
jno
jb
das
pop
gs
jae
push
xchg
movsl
adc
sbb
mov
mov
int
cmp
in
mov
fildl
lds
scas
idiv
push
xchg
jmp
xchg
xchg
add
insl
insl
mov
or
aad
js
add
les
cmpsb
push
or
iret
fadd
test
sub
cmpsb
aad
sbb
fidivs
lods
pushf
mov
movsb
or
icebp
cmpsl
cmc
shll
jo
mov
iret
outsl
adc
sub
fsts
mov
in
pop
test
pop
mov
cmpsl
lds
imul
aas
jb
sub
cltd
orl
sbbb
faddp
dec
das
out
pop
ds
mov
pop
adc
lret
and
jecxz
div
adc
or
mull
mov
mov
je
xchg
movsb
std
sub
jge
xchg
push
in
xor
nop
dec
lcall
jne
mov
int3
cs
add
insl
mov
ss
fisttpll
xchg
fdivrl
jmp
aas
jmp
mov
pop
outsl
sarb
inc
stc
jbe
xchg
test
aaa
mov
pop
rclb
dec
icebp
mov
fstl
cwtl
pop
ljmp
push
cmp
mov
js
pop
cmp
rolb
mov
jl
idivb
pop
and
fisttpl
lods
ja
inc
cmp
test
sbb
push
fwait
xchg
out
add
icebp
push
xor
das
leave
jnp
pop
lcall
xchg
sarl
jb
cld
test
jbe
mov
jnp
sbb
or
or
int
insb
xlat
in
push
xor
lcall
fcoml
sub
dec
jns
imul
mov
std
sbb
pop
jne
stc
popa
sub
std
repnz
loopne
or
ds
inc
push
in
jle
dec
sub
dec
fnstsw
stc
inc
popa
inc
bound
pushl
sub
jb
add
mov
pusha
ficompl
mov
sub
loop
movsb
dec
and
push
gs
adc
jp
and
enter
clc
jecxz
repnz
popa
inc
popf
stos
and
testb
popf
test
shrl
push
inc
stos
push
or
aaa
clc
fildll
cld
jmp
lahf
inc
test
imul
adc
orl
push
sub
pusha
jl
das
popf
inc
jmp
xchg
xor
repz
and
push
pop
lret
stc
inc
inc
xchg
stos
lods
xchg
sub
cmp
out
jno
imul
shll
push
es
push
insl
aas
xor
or
sub
push
xchg
out
mov
jg
out
pop
fistps
add
inc
into
cmpl
lods
jmp
cs
jmp
xchg
mov
mov
lea
cmp
out
sti
fsubp
mov
lock
in
mov
xchg
jmp
sub
push
aas
imul
pop
push
pop
mov
adc
aad
dec
mov
out
scas
sbb
ficoms
dec
adc
sub
mov
lea
sbb
push
pop
sbb
cmp
sti
xchg
xor
sbb
dec
leave
xchg
xchg
arpl
inc
xor
lock
loope
or
sbb
mov
jle
sarl
adc
scas
inc
cltd
pop
pop
jp
jae
mov
ss
sbb
mov
add
pop
or
out
lock
ljmp
mov
pushf
mov
push
mov
inc
rcl
dec
and
inc
test
aam
sub
pop
inc
pop
xchg
int3
and
je
addr16
adc
pop
loope
dec
insl
test
cmp
rorl
lods
pop
push
xchg
inc
int
lea
scas
dec
mov
mov
testl
adc
mov
or
jb
dec
insb
daa
and
out
cmpsl
movsl
add
cmp
clc
inc
jae
xlat
ss
std
dec
mov
pop
std
nop
cmpsb
mov
sbb
inc
pop
das
cmp
push
pop
jae
adc
fnstcw
inc
xchg
fstpt
pop
pop
xchg
pusha
pop
pusha
addr16
enter
cmp
sub
cltd
push
aam
pop
or
leave
mov
lcall
adc
pop
xor
or
lret
lcall
sub
fcom
out
pop
jecxz
cmp
ror
pop
jns
and
cmpb
jecxz
or
lea
add
daa
xor
and
sub
inc
out
push
xchg
adc
mov
jo
xchg
jl
pop
push
push
adc
jae
adc
jp
pusha
out
ljmp
pusha
sti
cld
or
shl
ljmp
loope
mov
jle
cmp
insb
addl
adc
dec
cmp
lahf
je
jae
aas
out
sbb
push
popa
ret
daa
enter
pop
or
xor
movb
add
sbb
aas
in
movsl
int3
and
jmp
sub
jb
into
mov
lock
fistpll
mov
je
jle
ljmp
cmp
mov
inc
ljmp
popf
push
cmp
imul
cmp
cmpsl
popa
rolb
mov
scas
mov
in
mov
and
pop
mov
jno
xor
js
mov
mov
jbe
lret
and
imul
fcomps
lret
std
cli
push
jne
inc
popa
xchg
push
sub
fs
insl
in
outsl
arpl
std
push
loope
fcoml
shll
lods
fs
dec
stos
sarl
mov
sub
ja
cmc
mov
cmp
repz
mov
out
dec
pop
aaa
andl
in
add
push
sub
stc
lahf
enter
stos
push
adc
mov
dec
sbb
inc
scas
js
ss
ljmp
aam
sub
lahf
arpl
in
addr16
in
inc
add
cld
xchg
cmp
stos
mov
shlb
push
add
mov
dec
push
cmp
imul
fidivl
in
into
mov
xor
jb
push
insl
loop
push
push
add
addb
pop
inc
movsb
ficoms
and
sbb
inc
sbb
inc
dec
mov
fdivr
jbe
mov
loop
mov
jae
adc
pop
fadd
jmp
cmp
repnz
clc
cwtl
js
in
repz
sub
outsb
mov
or
and
loopne
and
nop
pop
cmpsl
test
out
push
lret
test
lret
fcoml
dec
out
and
divb
ret
push
mov
and
cmp
pusha
mov
cmc
rcll
mov
test
push
xchg
and
lret
or
push
int3
mov
bound
xor
sbb
in
nop
scas
sarb
sbb
fbstp
adc
pop
in
xor
mov
aad
adc
cmp
out
rcrl
loope
mov
xchg
outsl
cltd
in
fsubs
adc
inc
xchg
xor
cli
imul
mov
pop
jecxz
sbb
mov
fbld
aad
push
addb
push
dec
mov
adc
xchg
jecxz
hlt
cs
rcll
mov
xchg
mov
pop
pop
push
push
push
cmp
aam
jbe
and
pop
mov
enter
leave
repnz
imul
jb
jl
mov
enter
xchg
sahf
push
jp
mov
xor
ret
std
sub
imul
and
pop
mov
ret
or
add
lret
inc
jmp
cmc
jg
testb
inc
dec
icebp
sbb
mov
xlat
imul
mov
dec
out
fsubl
and
jno
xchg
test
imul
bnd
or
add
jns
mov
mov
xor
stos
fwait
add
and
icebp
xchg
mov
jb
test
icebp
in
jp
xor
mov
clc
inc
out
shl
and
movsb
bnd
int
jns
dec
and
dec
out
fcomps
pop
xor
gs
and
sahf
pushw
push
inc
adc
pop
mov
cmp
int3
out
fmuls
and
or
shll
fstpt
xor
test
push
adc
sub
das
cmpsb
lahf
out
jp
pop
push
push
test
pop
cld
aaa
scas
movsl
data16
pop
out
pop
lds
sbb
in
cltd
pop
cmp
lods
int3
ret
sub
or
testb
xor
mov
arpl
fcmove
insl
jge
in
dec
int3
imul
pop
insl
out
outsl
jecxz,pt
pusha
stos
adc
testl
mov
clc
adc
lods
dec
lock
mov
ljmp
cwtl
pop
call
cmp
popf
shrl
jg
xlat
test
pop
repz
popa
jp
gs
ds
or
xchg
clc
imul
mov
jp
xchg
jo
sub
shl
mov
aas
icebp
jge
mov
push
loop
gs
xchg
les
push
cmp
loope
outsb
mov
jp
inc
mov
jl
dec
fwait
shl
loope
ja
in
nop
stos
push
push
inc
divb
out
mov
jp
sub
push
stos
jae
cs
push
rorb
pop
bound
mov
lock
test
push
inc
xlat
sbb
cmp
andl
inc
dec
sbb
dec
faddl
sti
arpl
mov
or
mov
lret
jmp
mov
ljmp
dec
mov
pop
mov
lret
andb
stos
add
mov
out
jecxz
cmp
vhaddps
subl
jbe
push
ss
test
cwtl
loopne
scas
inc
repnz
pop
jle
xor
ret
pop
mov
adc
lods
test
adc
repz
mov
mov
push
cltd
push
subl
and
in
xchg
and
xchg
andb
inc
test
cmc
movsl
add
or
fs
and
dec
adcl
or
dec
fstpl
add
call
leave
mov
icebp
rol
daa
imul
icebp
cmp
xchg
adc
inc
pop
or
mov
sbb
test
cld
xchg
test
xor
fstpt
int
sub
push
call
lock
outsl
movsb
jmp
xor
mov
mov
lret
shlb
dec
jae
jp
pop
mov
push
mov
jmp
sbb
lods
sub
sahf
pop
std
in
sti
push
xchg
sub
push
inc
lahf
andb
pop
jecxz
xchg
add
push
push
adc
lea
inc
psllq
mov
and
loop
shld
imul
loop
or
inc
in
subl
push
loopne,pt
sbb
push
jbe
adcl
and
adc
arpl
jns
ret
jns
loop
xchg
jae
stos
xchg
cmc
pop
mov
inc
addr16
dec
je
test
pop
loop
dec
dec
out
stos
adc
shll
jmp
lock
pop
rorl
dec
fs
andl
adc
or
xor
sub
pop
add
pushf
xor
inc
es
jp
lret
sarl
mov
pop
gs
bound
test
jnp
sub
add
stos
mov
cmpsl
cmp
pop
xchg
call
cwtl
out
jo
adc
sbb
fadds
daa
sarl
jne
pop
inc
mov
lds
add
in
push
mov
pushf
loope
fnsave
outsl
in
inc
addb
cmp
popa
pushf
sub
mov
push
pop
inc
in
mov
xor
movsb
cmp
pop
mov
add
lods
insb
sbb
push
and
dec
mov
insb
jge
xchg
ss
lret
loopne
xchg
lock
mov
dec
inc
jmp
inc
cmp
xchg
mov
lods
mov
mov
mov
pop
call
out
cmpl
ss
mov
push
repz
and
push
out
cld
adc
call
cmp
dec
cltd
jmp
lods
rcll
int
dec
jns
sbb
std
push
dec
or
iret
mov
mov
sub
fmuls
imul
aas
pop
aas
cmp
in
adc
movsl
in
mov
ja
bound
ja
mov
loope
cltd
mov
sbb
inc
pop
add
xchg
cmp
sbb
jp
enter
and
xor
insl
push
rorb
cmp
and
pop
fisttpl
or
and
xchg
popa
fldenv
rcll
mov
add
int3
insl
mov
ss
mov
ret
fisubs
nop
adcl
das
fbstp
xlat
jnp
adc
and
sti
push
movsl
mov
lods
and
inc
js
fdivl
addb
add
and
push
push
pop
cmpl
or
sarl
int3
push
arpl
sti
mov
sub
push
sbb
loopne
xchg
stos
mov
pop
idiv
std
loop
cmp
and
andl
imul
addb
inc
lods
in
leave
jbe
mov
repnz
lret
lds
addb
push
xchg
and
jecxz
rcll
cld
les
fwait
pop
and
jg
or
lea
pop
lahf
jmp
pop
insb
push
movsl
ja
rcr
call
rcl
mov
push
hlt
lcall
outsb
in
mov
jne
pushf
jg
cmc
test
mov
pop
fidivl
and
pop
sub
xor
adc
shl
aas
stos
xchg
sbb
nop
mov
icebp
out
sub
lret
mov
cmc
or
lahf
push
sahf
cmp
pop
iret
sub
add
in
xorl
push
int3
fwait
cmp
insb
in
push
repnz
inc
cwtl
dec
push
mov
mov
aaa
xchg
lcall
sbb
lret
xor
ljmp
rcrb
cmp
sbb
and
insb
outsb
push
sub
nop
fisubl
mov
jns
mov
xor
push
add
sbb
test
add
fcoms
stos
dec
lea
iret
popa
cmovno
sbb
sbb
aas
mov
pop
sub
mov
lret
sub
cmp
cmpsb
push
jmp
sbb
xchg
dec
inc
scas
mulb
push
les
or
ss
xchg
mov
mov
push
pop
jmp
inc
leave
dec
sbb
mov
pop
outsl
jb
mov
or
sqrtps
push
repnz
pop
adc
mov
jle
enter
mov
in
frstor
mov
movl
popa
jp
push
std
or
push
mov
test
testb
and
mov
sti
adc
inc
in
sub
or
push
sub
sub
xchg
dec
test
push
sub
daa
add
mov
repz
dec
inc
arpl
enter
out
int
inc
nop
loope
jne
cmpsl
outsb
int3
or
and
or
ss
leave
xor
xlat
xchg
cld
xor
sti
jbe
xor
iret
in
inc
dec
lahf
mov
daa
int
retw
add
repz
push
inc
and
lds
in
in
sbb
test
ljmp
mov
adc
lock
fstps
popf
inc
inc
push
sbbb
cmp
pop
or
popf
lret
cmp
pop
into
cltd
push
pop
aad
mov
inc
push
mov
add
sub
mov
ja
cmp
test
scas
test
xchg
add
jo
xchg
mov
adc
jle
jle
mov
mov
lods
das
aad
ret
add
dec
sti
movsl
ds
jno
stos
sub
push
andb
xor
mov
mov
push
mov
and
pop
shrb
ljmp
lea
mov
outsl
aas
add
out
pop
cmp
jmp
daa
mov
outsb
pusha
sub
jo
std
sub
jns
repz
int
lds
shll
add
adc
sbb
xor
leave
jne
adc
out
cs
int
inc
stos
les
daa
sbb
cmp
mov
clc
cmp
sub
adc
jo
inc
loop
or
xchg
push
je
push
pop
add
imul
imul
lods
hlt
negb
scas
cmp
mov
xchg
repz
jecxz
mov
out
dec
ret
insl
sbb
ljmp
add
mov
fcompl
inc
add
sub
lret
lods
jns
repz
sub
xor
popa
fstp
test
mov
jmp
add
mov
push
ds
je
lret
mov
pop
push
ss
call
xchg
mov
mov
xchg
lods
cwtl
xchg
mov
pushf
out
cld
or
mov
push
xor
int3
adc
xchg
lret
outsb
shr
or
push
rcrl
pop
add
xor
sub
sahf
enter
pop
cmp
test
mov
loope
mov
pop
mov
into
lret
ja
ret
or
popf
jb
mov
xchg
jge
pop
inc
icebp
mov
xchg
pop
outsl
sbb
cmp
insb
hlt
pop
pop
mov
cltd
lock
aaa
jmp
xor
cmp
lret
aad
jmp
cmpsb
loope
add
loop
and
jae
hlt
sub
mov
mov
pop
xor
dec
push
aam
mov
inc
icebp
fdivrs
sti
data16
jae
adc
mov
call
mov
in
push
jle
les
pop
int
adc
xor
push
adc
mov
lret
shll
add
pop
push
mov
aaa
aam
scas
cltd
mov
xor
test
mov
xchg
lcall
pop
mov
sbbl
rcl
sub
movsb
cmp
outsb
jecxz
mov
mov
sub
aam
wrmsr
push
ja
movsl
dec
jp
dec
in
jb
mov
in
ret
getsec
rolb
pop
xchg
jno
push
cs
ljmp
add
dec
add
and
hlt
sti
xchg
imul
add
pop
sbb
or
ds
add
scas
cmp
shlb
rcll
xchg
jae
jl
lods
add
rcll
jmp
inc
inc
cli
call
and
add
mov
or
cld
add
fsubl
xor
xorl
test
mov
and
inc
rclb
imul
mov
sub
mov
mov
subl
out
ss
dec
dec
jno
or
push
movsl
call
pop
jge
aas
and
in
adc
cmp
cld
or
mov
dec
stc
jp
or
mov
xor
popa
xchg
mov
clc
mov
mov
shlb
pop
dec
clc
cmp
inc
mov
out
in
push
enter
imul
sub
xchg
popa
cmovno
ja
xchg
test
and
pop
mov
push
xlat
mov
mov
dec
frstor
call
pop
ror
call
sti
xor
sbb
sbb
dec
or
dec
cmp
adc
sarl
pop
ljmp
xchg
pop
arpl
mov
sbb
add
outsb
push
push
stc
aad
arpl
mov
push
dec
pop
adc
into
sbb
ss
sub
dec
cmp
or
out
cmp
in
cmpsb
out
xor
dec
cmp
lock
addr16
or
aaa
imul
rcl
das
js
jns
int
push
mov
les
inc
fsubl
mov
add
dec
jmp
popf
clc
mov
cmp
jb
sbb
ljmp
insb
jb
dec
add
sarl
mov
adc
push
sub
add
arpl
rolb
mov
inc
pushf
nop
cmp
iret
pop
dec
add
dec
ljmp
jle
lcall
and
arpl
daa
bound
dec
and
fistl
and
jbe
fs
dec
mov
lret
or
rcrb
xchg
lea
mov
nop
push
rcr
pop
inc
inc
lea
outsb
pushf
adc
dec
pop
dec
jle
jne
push
inc
gs
jbe
es
or
mov
cmp
nop
inc
outsb
test
xor
je
add
push
mov
imul
mov
into
adc
addb
lock
int3
and
pusha
or
mov
jbe
int3
hlt
call
sub
and
out
out
add
std
cmc
nop
cmp
and
mov
enter
pop
jecxz
or
jb
std
or
enter
or
in
mov
pushf
pop
sbb
filds
aad
and
stos
push
cmc
xchg
outsb
sbb
or
jmp
push
cmp
imul
inc
int
gs
inc
sahf
sahf
ja
ret
and
mov
fs
mov
mov
int
pop
mov
jg
insl
test
pop
mov
scas
jb
jl
mov
sub
jecxz
xchg
aaa
mov
daa
ljmp
push
fwait
xchg
mov
sub
popa
cmp
push
sti
mov
mov
adc
ret
cmp
outsl
xor
test
jle
xlat
mov
fimull
and
mov
inc
addr16
test
pop
loopne
and
push
dec
and
add
add
call
shlb
add
mov
lcall
pop
data16
xchg
mov
loope
or
sbbl
sub
mov
insb
mov
insb
mov
and
mov
sbbb
loop
loope
lods
pop
dec
sbb
jne
sbb
rcll
lods
stos
lods
pop
ffreep
pop
mov
or
push
out
mulb
push
mov
xor
pop
test
xchg
jne
mov
mov
pusha
dec
and
sahf
movsl
sbb
cld
dec
inc
mov
arpl
and
or
outsb
dec
push
ret
in
pusha
dec
movl
mov
dec
xor
jmp
inc
inc
js
xchg
cmp
push
jo
dec
sub
xchg
cld
push
adc
dec
or
cmpsl
fimuls
xor
xchg
sbb
push
testl
mov
xchg
adc
push
xor
mov
cmpl
inc
loope
jl
xchg
push
mov
xor
dec
test
shl
pop
xchg
sbb
adc
add
pop
popf
mov
jmp
cmpsl
cltd
push
push
jl
or
mov
push
stos
sbb
and
sti
cmp
and
jo
call
xor
adc
ljmp
jns
adcl
data16
add
sbb
cmp
inc
push
cmp
aam
fdivrs
jae
popa
repz
std
adc
ss
jge
sbb
test
xlat
fdivrs
ficomps
cmp
lcall
out
or
negb
mov
daa
xchg
jb
loope
testb
ljmp
pop
hlt
mov
into
mov
pop
jb
mov
sahf
jl
adc
rcll
xchg
lds
out
cli
and
xor
andb
shrl
sti
mov
std
mov
jne
int
pop
jle
lds
xor
push
mov
xchg
or
fisubs
stos
sub
mov
fisubrs
repz
cmp
inc
enter
aam
scas
cwtl
cmpsl
inc
cmp
xchg
xorl
mov
xchg
push
aaa
mov
mov
repnz
pop
iret
xor
xchg
hlt
rcll
les
jns
cmpsb
xchg
dec
gs
mov
ret
pop
out
mov
push
stc
jg
mov
inc
xor
inc
and
loopne
movsl
pop
sbb
mov
lret
push
faddp
enter
out
int
int
pusha
fs
adc
mov
push
popa
fcompl
ja
cmp
pushf
and
stos
int
mov
shl
pop
push
add
inc
pop
xor
outsl
ja
xchg
inc
stc
and
inc
add
push
jns
loopne
sub
das
pushf
jl
in
jnp
hlt
lret
testb
gs
cmp
imul
jns
mov
mov
and
aad
scas
lds
jb
inc
pop
scas
sbb
bound
pop
jmp
mov
inc
pop
mov
sbb
mov
xchg
lock
movsl
mov
rcrl
inc
jno
and
bound
mov
movsl
sub
push
jge
in
or
test
shll
jg
mov
aam
sbb
sbb
addr16
loope
xlat
int
ficoml
in
movsb
cmc
dec
and
cmp
add
pushl
cmp
cmp
mov
xchg
scas
sahf
sub
rolb
xchg
in
add
inc
loope
fdivp
jp
scas
adc
popf
outsb
and
adc
clc
es
inc
pop
lods
fdivs
or
in
ss
fdiv
add
mov
mov
movsl
js
mov
dec
lcall
jmp
xor
fbstp
iret
lcall
std
add
lds
ret
inc
add
adc
jp
sub
adc
bnd
ja
jecxz
ja
cmp
xchg
inc
pop
jae
int3
ljmp
xor
cmp
iret
adc
lods
cmpsb
mov
stos
jbe
push
out
fsubrl
into
sub
in
or
xchg
js
and
xchg
xlat
cmp
adc
ret
ljmp
jnp
int
int
mov
xchg
test
cwtl
adc
inc
out
popa
pop
adc
imul
lock
xchg
gs
sbb
push
fldl
and
mov
pop
imul
je
push
imul
lret
mov
add
mov
iret
outsl
or
loop
mov
pop
lods
add
mov
js
fldl
sbb
dec
xchg
dec
jmp
lret
js
xchg
lret
push
lods
add
xchg
outsl
movsl
pop
xlat
insb
inc
enter
and
lret
lret
sbb
cwtl
addr16
dec
xchg
fwait
pop
adc
nop
xchg
adcl
jp
xbegin
cmp
andl
ljmp
es
nop
scas
outsb
jae
popf
adc
dec
cmp
es
cmp
stos
sbb
adc
mov
jp
mov
movsl
std
outsb
adc
push
pop
mov
sbb
xchg
pop
push
inc
iret
add
enter
pop
push
ljmp
jns
adc
mov
add
stos
adc
xchg
insb
in
mov
cmpsb
push
pop
mov
lods
daa
daa
cmp
ds
or
cmpb
sub
push
in
or
clc
mov
insb
jae
pop
daa
je
push
dec
or
jbe
aam
insl
adc
cmpsl
cltd
sbb
jnp
movsl
push
dec
ffreep
pop
push
lods
xchg
sbb
sub
adc
jns
js
mov
test
in
xchg
mov
add
out
gs
xchg
test
mov
movsl
repnz
out
push
fists
inc
shll
adc
jmp
xlat
inc
rolb
test
dec
insl
jmp
pop
mov
sbbl
rcll
in
rclb
mov
xchg
bound
mov
cmc
cmp
in
inc
sbb
stos
or
jns
push
dec
insl
sarl
repz
sbbb
loopne
pop
adc
xchg
sub
mov
aam
pop
jl
in
xchg
mov
arpl
popa
mov
bound
cmp
adc
icebp
int
jg
adc
scas
cmc
or
inc
fsub
out
mov
mov
sub
mov
lahf
dec
mov
or
mov
adc
xor
add
notb
fildl
or
arpl
ret
lods
fistpl
fadd
sub
mov
cmpb
add
xor
into
sub
ljmp
mov
jle
mov
jg
mov
pop
xchg
pop
aas
jg
xchg
in
divb
cmp
hlt
and
call
fnstsw
shll
clc
mov
jecxz
pop
add
mov
test
mov
call
or
jle
add
and
sarl
popf
adc
pop
mov
add
pop
inc
arpl
jp
out
scas
pushf
shlb
jg
mov
pop
inc
pop
into
sub
ret
mov
je
inc
or
addr16
dec
mov
mov
jp
adc
pushf
test
data16
dec
inc
cmp
xchg
and
mov
add
or
or
mov
mov
jg
push
int3
mov
sti
cmc
aas
adc
mov
cmp
sub
mov
push
adc
fsubrp
or
sbb
sahf
ds
inc
mov
mov
lret
adcl
out
xor
iret
jg
rol
loop
cmp
inc
rorl
addb
test
xor
mov
outsl
mov
xchg
lret
inc
daa
or
jae
mov
bound
xor
lods
xchg
int
xabort
pop
ret
cmpsb
mov
fcmovnbe
outsb
push
lock
jno
mov
pop
sti
mov
mov
lods
mov
mov
fistpl
ret
hlt
sti
outsb
cmc
imulb
mov
repz
mov
xchg
jle
and
xchg
imul
pushf
mov
mov
add
sbb
xor
enter
into
sahf
cld
fstl
loop
inc
xchg
adc
or
dec
lock
jno
mov
sbb
divb
pop
cmp
movsb
jle
bound
and
mov
ficoml
xchg
add
daa
gs
hlt
popa
pop
stos
push
mov
imul
movsb
adc
fsts
out
fimull
mov
fnstcw
cli
popa
jbe
imul
loope
pop
sbb
mov
add
pop
sbb
fwait
aad
iret
sbb
cmp
xchg
ret
aad
lods
cmc
xchg
loop
ja
lods
cmp
out
into
in
pop
call
rolb
push
ljmp
ss
aas
push
loope
jmp
cmpsl
movsl
rcll
fcmove
xchg
subl
test
jg
sub
or
call
mov
pop
inc
out
push
outsl
mov
test
aas
sbb
rolb
push
cmc
jbe
fists
adc
pop
mov
adc
and
jp
mov
dec
or
iret
cmp
cs
inc
insb
rolb
test
jno
cmp
fs
dec
dec
inc
push
add
hlt
xchg
jnp
add
mov
lock
ud1
insl
add
and
cltd
or
push
pusha
loopne
add
inc
mov
ja
xor
mov
jg
mov
and
or
jmp
movl
movsb
xchg
loope
arpl
rolb
js
cmp
out
scas
cmp
shufps
pop
rcrb
lahf
mov
push
pusha
add
mov
mov
je
xchg
mov
xchg
fcmovu
aas
mov
sbb
adc
aam
mov
mov
cli
jnp
sbb
test
into
into
scas
mov
pop
push
jp
js
sbb
sbb
and
dec
cmp
adc
sbb
iret
sarl
sbb
int3
subl
mov
roll
sbb
add
push
rcll
pop
imul
xor
push
mov
loope
mov
cmp
divb
inc
xchg
loopne
inc
jle
add
js
dec
add
cmc
sbbl
add
dec
fstl
inc
mov
lods
push
ss
test
or
inc
mov
add
sahf
or
into
sbb
pushf
jmp
push
push
popa
xor
fstl
fstpl
aam
jmp
in
ret
mov
push
dec
cli
add
cmp
push
sub
nop
cmp
mov
dec
pushf
int3
mov
movsb
push
pop
inc
mov
out
call
pushl
jecxz
mov
or
pop
fidivs
mov
inc
shlb
inc
lahf
mov
jp
insl
or
inc
cmp
adc
mov
pop
mov
out
out
sbb
loope
sub
pop
sbb
sbb
outsl
inc
frstor
out
or
pop
sbb
sbb
aas
jno
mov
mov
xor
or
popa
imul
cmpsl
jg
cmpsb
lret
lcall
jle
mov
out
leave
enter
dec
inc
loop
ret
cmp
cmp
jnp
push
mov
fisubl
xchg
push
add
fs
push
xchg
outsb
pushf
add
dec
dec
stos
and
mov
aaa
push
outsl
enter
inc
mov
xor
inc
fcoms
idivb
mov
ljmp
mov
add
mov
pop
out
or
sub
out
dec
sbb
sub
jns
loop
rcrl
add
add
in
sbb
arpl
inc
xor
jle
inc
out
or
add
ret
inc
push
mov
int
inc
inc
lods
int
popf
xor
loope
mov
mov
notb
out
pop
lods
sbb
fwait
dec
mov
sbb
loop
adc
fists
stos
jbe
lret
aam
inc
movb
dec
test
stos
js
pop
mov
fsubs
pop
cmpsb
sbb
cld
sbb
arpl
or
pusha
mov
hlt
clc
iret
sahf
and
dec
shrl
insl
or
pushl
out
frndint
ljmp
cwtl
xor
es
adc
jb
ljmp
ret
xor
mov
mov
mov
sub
sub
jno,pn
movsb
mov
bound
insb
lret
xchg
fsubp
sbb
mov
dec
loop
ja
mov
out
rolb
nop
and
jl
stos
and
test
in
leave
dec
sarl
lea
sub
or
fldl
or
mov
add
movsb
in
out
addr16
add
sub
jo
std
pop
gs
cld
rolb
rclb
mov
scas
add
inc
sbb
xchg
outsl
add
xchg
sar
lea
movsl
add
stc
sbb
inc
jge
xchg
shl
mov
int3
add
or
jno
xlat
leave
call
test
mov
loope
sbb
movsl
ret
push
iret
mov
push
sbb
mov
fistps
push
adc
ds
sahf
cmp
popa
dec
out
push
ljmp
stos
adc
push
push
sub
or
aam
lahf
shll
sbb
dec
inc
jb
pushf
add
loop
jle
sub
dec
sarl
mov
push
jo
xor
push
push
pop
ss
push
out
cli
and
fisubl
xchg
dec
icebp
add
mov
hlt
sbb
cmc
shll
sbb
insl
jle
out
out
pop
enter
fnstsw
or
push
inc
out
clc
inc
iret
xchg
and
mov
int3
dec
enter
es
enter
shl
adc
fsubrs
xor
and
push
into
aaa
sub
push
xchg
xor
jg
xorb
pop
loop
js
repnz
jo
lock
mov
dec
test
push
pop
je
dec
imul
ja
push
testl
adc
pop
dec
popf
dec
dec
scas
pop
sub
fcmovu
rcll
cli
jge
pop
cmp
fidivs
popa
lret
sub
or
test
test
pop
add
into
cmpsl
lods
ja
mov
rorb
pop
xchg
add
xchg
pop
leave
adcb
test
ss
hlt
cmpsl
xchg
jecxz
sbb
cli
cld
fnstenv
lret
fs
sbb
sahf
push
mov
mov
ficomps
or
fs
mov
add
fs
pop
in
outsb
sahf
sub
cmc
sub
pushf
mulb
adc
dec
add
imul
dec
sub
iret
push
scas
add
out
je
pop
add
repnz
mov
mov
fmull
mov
push
int
mov
cltd
cmpsb
lret
sbb
shll
out
sahf
rclb
stos
xchg
shrb
and
loop
pop
push
jns
outsb
adc
sbb
icebp
out
cs
mov
pop
jnp
and
cmpsl
mov
xor
call
cmp
and
inc
arpl
dec
clc
mov
add
cmp
ret
ret
cld
out
cmp
inc
cld
jo
mov
push
pop
jo
shlb
cld
or
push
add
scas
flds
repnz
xor
and
out
imul
lahf
cmp
and
outsl
cmp
jp
push
mov
cmc
js
ds
adc
xchg
scas
repnz
or
sbb
dec
mov
shlb
mov
fmul
mov
or
jecxz
adc
sub
into
push
mov
pop
mov
mov
dec
into
jnp
sbb
push
outsb
rcrl
mov
sbb
or
jmp
jecxz
ljmp
add
insl
aam
out
dec
cld
add
dec
out
icebp
sbb
mov
add
shlb
dec
inc
cmp
in
inc
xchg
push
ret
mov
enter
imul
mov
int
repz
mov
je
ljmp
cmp
jge
mov
ret
cmpsl
fcomp
mov
xlat
addr16
insl
xor
out
mov
xchg
sbb
add
sbb
or
xchg
jne
out
das
stc
rcll
pop
mov
push
das
mov
adc
call
loop
push
insl
xchg
scas
cmp
sbb
cmpsl
fidivrs
jo
leave
push
inc
mov
pop
repnz
iret
int3
mov
js
xor
stc
clc
or
and
lcall
fidivl
data16
inc
rcrb
jno
lret
es
gs
fsubr
jle
rorl
adc
dec
inc
scas
ds
inc
popf
or
jg
stos
add
popa
push
pop
mov
imul
addl
icebp
insl
scas
mov
jecxz
push
lahf
loopne
imul
xchg
push
dec
shlb
mov
test
lea
sbb
sub
scas
outsb
pusha
jnp
cs
arpl
repz
clc
dec
jne
mov
leave
xchg
out
out
test
lret
incl
scas
jmp
rcrl
stos
adc
mov
rol
in
cmp
loopne
sbb
inc
jo
sub
shlb
mov
filds
inc
jp
dec
fildll
ss
sub
popa
mov
adc
outsb
dec
jbe
fchs
jmp
lods
fstpl
call
inc
rcrb
loop
gs
inc
int
xchg
pushl
cwtl
and
mov
cld
inc
add
sbb
loopne
out
jbe
hlt
xorb
sti
jecxz
pop
sar
lock
inc
sub
xchg
mov
add
jne
lahf
mov
repnz
fdiv
cmp
sbb
xchg
out
fadd
add
xor
sub
addl
negb
mov
xchg
test
notb
fwait
push
rep
push
sub
xlat
mov
add
and
scas
aam
cmp
adc
nop
dec
add
mov
mov
push
cmp
imul
xor
mov
dec
or
leave
lods
jbe
scas
hlt
xor
test
dec
jne
imul
inc
mov
add
sti
adc
xchg
cmp
mov
jo
in
arpl
mov
mov
xchg
xchg
jne
xchg
js
es
iret
jl
xchg
adc
sbb
dec
repz
adc
repnz
adc
loop
mov
adc
cmp
inc
ror
fcoml
adc
shl
mov
pop
outsb
or
mov
popa
enter
add
mov
mov
iret
sub
andb
mov
push
jp
enter
ret
imul
sub
js
sub
shll
leave
cmp
outsb
iret
xor
cmp
test
pop
push
dec
mov
lods
cmp
les
imul
mov
or
xor
psraw
test
ret
mov
mov
imul
jp
das
mov
daa
ficoml
jle
fwait
popf
das
stc
jmp
into
mov
out
and
adc
ret
cmc
and
pop
xchg
loopne
lock
inc
lods
xor
mov
hlt
mov
adc
mov
and
xor
xor
cmp
int
shlb
inc
pop
inc
sub
outsb
mov
repnz
xchg
repz
add
les
pop
and
mov
pop
sub
inc
pop
xchg
xor
pop
cmp
arpl
lods
mov
fcomps
les
mov
lahf
inc
stos
mov
push
mov
xchg
loope
enter
push
js
push
in
and
imull
in
out
sub
mov
mov
cltd
es
cld
int
jmp
es
mov
mov
mov
jmp
pop
imul
loopne
push
dec
aam
repz
pop
cmp
xchg
mov
sahf
out
inc
adc
push
push
cmc
aaa
imul
shlb
push
fildll
dec
jmp
sub
cli
sbb
push
fcoml
inc
sub
push
sti
xor
and
or
pop
dec
stc
jns
push
int3
dec
mov
push
push
mov
xchg
cmpsb
fidivs
inc
pop
cli
test
adc
and
dec
inc
hlt
in
sbb
lock
ficompl
stc
mov
and
in
jmp
sbb
stos
mov
xchg
mov
xor
lds
mov
mov
cld
jbe
ret
out
fsubr
enter
inc
push
push
jg
call
call
sbb
dec
frstor
lock
cmp
lret
mov
stc
faddl
scas
mov
sbb
pop
inc
testl
mov
divb
sahf
add
movsl
pop
pop
lds
pop
ret
and
lahf
push
mov
imul
ret
popf
and
inc
fstpl
mov
push
mov
lahf
out
push
enter
or
or
lahf
and
ret
in
sub
jno
sub
cmp
scas
xor
and
xor
push
or
or
pop
icebp
jnp
lret
mov
mov
xor
xchg
pop
mov
scas
xlat
int
push
pop
shlb
lcall
or
rcl
stc
pusha
inc
dec
xor
mov
jl
repnz
js
nop
cwtl
or
push
sub
push
mov
push
pop
daa
sarb
push
call
sub
sub
aad
cmp
push
adc
test
fmuls
aas
ret
in
rcll
js
movsb
rorb
lahf
outsb
mov
icebp
sbb
mov
fcompp
hlt
sub
subl
cmp
insl
inc
rcll
ja
mov
push
loop
pop
call
stos
inc
out
out
adc
sbb
xor
push
out
ja
or
inc
dec
pop
int3
adc
cs
icebp
int
push
jmp
and
repnz
cmp
in
test
mov
ja
fstpl
or
dec
jmp
adc
sub
mov
loopne
push
push
cmpsl
out
jns
mov
call
cmpsb
lcall
xchg
jae
mov
jmp
dec
pop
rcrb
lahf
aad
push
cwtl
add
and
mov
mov
loope
sub
sti
femms
cmp
inc
loop
xor
jb
jb
xchg
pusha
dec
xchg
add
dec
loope
imul
mov
or
call
pop
aas
xchg
aaa
mov
aam
mov
sbbb
mov
adc
mov
or
jl
xchg
pop
les
cmp
dec
bound
mov
fs
insl
pop
insl
mov
mov
jecxz
adcb
addr16
pop
jno
punpckhwd
sub
bound
lds
out
mov
std
scas
mov
jp
clc
sub
roll
test
push
sbb
in
test
cmpsb
pop
jecxz
xor
sbb
mov
rol
mov
adc
test
jecxz
push
lods
fistl
test
mov
jae
int3
jno
and
fsubrs
lret
mov
inc
xor
push
xchg
out
iret
sbb
adc
inc
sbb
pop
daa
mov
xchg
inc
gs
push
push
mov
rcr
xchg
sti
bnd
and
fnsave
jle
push
test
and
mov
andl
in
lea
pop
push
mov
or
andl
mov
xchg
push
out
cmpsl
shlb
jmp
in
push
movsl
repnz
mov
inc
mov
into
in
xlat
push
mov
ljmp
loopne
loopne
scas
sub
addr16
adcl
stos
hlt
and
out
imul
lret
mov
push
adc
inc
repz
adcl
jge
mov
jmp
jecxz
add
jg
adc
ja
jmp
mov
jmp
push
idivl
jns
mov
cli
ss
push
loop
movsb
outsl
lret
cltd
cmp
or
add
lcall
lea
inc
mov
leave
in
out
pop
out
xor
insl
ds
shll
stc
xor
add
cwtl
push
push
fldt
cltd
push
sbb
add
mov
mov
ret
ret
enter
push
push
jle
push
mov
jecxz
aaa
pop
arpl
out
insl
or
add
bound
paddsw
nop
imul
or
mov
jae
pop
dec
push
inc
gs
movsb
mov
pop
lret
sbb
lea
sbb
fisubs
stos
xor
add
jecxz
dec
je
jp
ret
addr16
cmp
imulb
push
cmpsl
adc
xchg
ret
fnstenv
mov
dec
sub
nop
test
ror
sbb
insb
xor
xor
les
sub
pop
and
in
ja
ret
or
mov
fnsave
lahf
lock
mov
mov
pop
ss
sub
mov
cwtl
inc
cltd
add
add
imul
jne
xor
dec
adc
sub
rolb
movb
push
cmp
xlat
adc
and
repnz
je
and
sbb
faddl
dec
fxch
dec
xlat
mov
insl
cmc
lret
xor
mov
imul
fdivrl
add
fsts
cmpb
push
ljmp
fldl
dec
test
xor
int
fs
push
fildll
and
inc
jo
xorb
pop
repz
push
or
ljmp
scas
add
or
sbb
jbe
out
fnstenv
mov
fwait
cld
cli
mov
scas
cmc
mov
pop
faddl
repz
jbe
mov
mov
mov
arpl
faddp
dec
loope
sbb
aas
add
inc
sarl
popa
sbb
enter
add
test
fsts
imulb
mov
icebp
jns
dec
bound
xchg
test
call
in
stos
cmp
roll
push
cmp
xor
mov
and
out
addr16
pop
jmp
cmp
dec
data16
or
fstps
inc
aam
xchg
push
adc
ret
sahf
lock
mov
add
jle
jno
movsb
call
and
pop
adcb
push
ss
push
adc
push
fisubrl
addr16
ret
in
outsb
push
lods
cmp
push
mov
and
adc
jg
repnz
stc
mov
leave
adc
adc
test
sub
xchg
jne
sarl
jo
mov
inc
sbb
popf
imul
mov
jne
test
mov
sbb
add
ja
add
dec
fildll
xchg
adc
add
out
rcll
fs
popf
das
cmp
mov
or
sub
adc
pop
or
xor
jbe
xchg
or
fistl
mov
dec
and
mov
jg
xchg
es
jbe
and
arpl
shll
clc
fcompl
into
mov
cmp
shr
inc
aam
les
shl
mov
aas
mov
adc
cmpsb
mov
and
sbb
pop
jbe
mov
pop
dec
rcl
pop
ret
dec
dec
xchg
jmp
test
mov
add
xchg
jo
insl
push
inc
mov
mov
sub
andnps
xchg
lods
add
shl
cmp
xchg
shlb
test
push
into
push
dec
jp
dec
and
je,pn
aas
leave
adc
cmp
push
loopne
pop
pop
les
sbb
push
cmp
sub
aam
jge
mov
stc
cmpsb
stos
xchg
inc
aad
mov
es
dec
cltd
cmp
fsubrl
fcomps
movsl
and
clc
push
aaa
push
icebp
aad
pop
push
inc
xchg
cmp
jle
hlt
pop
cmpsl
adc
add
aam
cmp
insl
or
push
cmp
or
jne
dec
arpl
lods
inc
xchg
push
sub
scas
test
adc
xchg
pop
sbb
stos
or
jae
mov
sub
clc
test
dec
push
mov
xor
xor
ds
cmc
xor
xor
pop
in
dec
outsl
adc
ja
xor
nopl
ds
jno
sub
sbb
test
repnz
mov
jge
mov
cwtl
or
dec
inc
push
push
dec
mov
daa
movsb
push
mov
inc
out
and
rorb
decl
dec
pop
xchg
lcall
stos
dec
insb
push
dec
jg
and
jne
fsubrl
adcl
fwait
outsb
jmp
int
cs
add
sbb
adc
add
decb
pop
xchg
stos
or
out
sbb
or
imul
mov
rcrb
mov
pop
adc
sbb
popf
out
sarb
lods
push
movsb
and
cmp
xor
mov
gs
pusha
sbb
fcomps
scas
std
lcall
add
cmpl
xchg
push
jo
lock
daa
push
out
in
divl
pop
lret
xlat
mov
push
mov
pop
sub
test
dec
jge
or
mov
inc
imul
add
cmp
pusha
sbb
xchg
shrb
lret
xchg
jno
pop
inc
lds
aaa
outsl
pop
scas
aad
rcrb
xchg
xor
cs
nop
jo
jb
sub
xor
ret
scas
jne
xor
mov
xchg
mov
cmp
insl
setg
pushf
clc
jmp
loope
jle
mov
inc
cmc
rorb
xor
push
js
xcrypt-cfb
cmpsl
mov
shlb
pop
outsl
mov
pop
mov
xlat
arpl
fidivs
mov
out
jge
adc
mov
sub
int3
push
or
dec
push
dec
push
imul
jae
mov
adc
cld
pop
mov
icebp
push
test
xor
movsb
out
insl
nop
push
pushf
adc
sub
pop
jo
in
xchg
jge
mov
push
jg
ffree
mov
lock
cmpsb
mov
add
into
sbb
enter
dec
insl
ljmp
push
and
xor
insl
or
int
and
xchg
out
mov
mov
popf
push
push
or
xor
test
mov
cmp
insl
push
add
call
ljmp
xchg
arpl
call
xor
jns
push
cmc
push
pop
out
pop
sbb
test
daa
fwait
dec
out
shll
mov
outsb
ljmp
dec
cmp
and
cmp
xchg
dec
stos
fstl
sbb
or
gs
sbbl
fstl
push
or
jg
nop
xor
loopne
loop
or
adc
mov
jno
jmp
pushf
mov
sahf
jp
call
jno
sahf
mov
in
fs
sbb
mov
adc
sbb
shll
insl
leave
cmp
mov
mov
cmpsb
xor
push
lock
add
mov
jno
pop
test
idiv
les
dec
jle
push
clc
mov
sbb
xchg
sarb
loopne
adc
imull
push
stos
sub
xchg
inc
dec
sbb
out
enter
stc
and
shll
les
sti
lret
cmp
or
dec
xchg
nop
mov
mov
stc
cmp
and
in
or
pop
popa
mov
out
xchg
cmpsl
data16
mov
jmp
jge
cld
jmp
leave
sbb
xor
add
cltd
or
xor
lahf
mov
pusha
arpl
in
mov
clc
mov
repnz
pushf
inc
rorl
cld
hlt
aam
pop
addb
or
fistpl
xchg
addr16
outsb
cmp
dec
sbb
jp
flds
test
rclb
js
popl
ror
in
push
rcrl
and
imul
outsl
shl
add
out
call
ljmp
pop
stos
mov
xor
dec
cs
loopne
inc
sub
loopne
xor
std
add
insl
pop
dec
cmc
icebp
cmp
ja
xor
sub
xor
cmp
movsb
pop
jmp
jo
les
mov
xorb
std
ljmp
hlt
jae
out
xchg
sbb
or
int3
sub
sbb
ljmp
clc
pop
aas
aas
mov
inc
adc
int3
lret
nop
mov
cmp
les
andl
int3
mov
cmp
cmpsb
dec
hlt
mov
lock
lea
mov
or
sub
sahf
arpl
push
jge
and
addr16
imul
jecxz
repnz
and
out
sti
ret
leave
mov
pop
xchg
dec
and
lret
aaa
dec
ror
push
movsl
cmp
cmpsl
iret
pop
mov
mov
push
mov
lret
inc
jle
fisubrl
and
lods
clc
imul
push
push
push
lret
leave
push
scas
lods
dec
cmc
or
xchg
mov
jecxz
sub
mov
inc
sbb
and
pop
mov
adc
inc
pop
je
clc
orb
xchg
and
jmp
cmpsb
push
mov
dec
jmp
inc
and
mov
or
and
test
push
add
rorb
or
mov
cli
pop
jl
in
daa
mov
sbb
lock
jbe
mov
imulb
fldenv
notb
xchg
push
neg
xchg
outsb
enter
rol
sbbl
pop
pushl
pop
mov
mov
mov
cmp
pushf
repz
or
push
test
orl
pop
das
fs
push
adc
or
loopne
repnz
push
bound
mov
bound
data16
jle
in
sub
test
jo
inc
adc
mov
sbb
les
popf
and
mov
mov
sti
push
xor
gs
dec
push
daa
xor
sbb
sub
sti
xor
dec
pop
mov
int3
add
aaa
mov
add
jo
icebp
mov
jbe
ja
test
push
mov
and
fwait
mov
add
jb
sarl
test
and
mov
cmp
testl
pusha
cmp
and
pop
xchg
lods
out
jl
imul
sub
sbb
stos
and
ss
leave
or
and
scas
test
fwait
lcall
jb
ret
daa
lret
mov
mov
cmp
out
mov
call
int
in
popa
repz
data16
mov
arpl
cmpsb
sbbl
add
or
jmp
inc
adc
imul
or
sbb
sub
out
jbe
jl
stos
leave
sbb
push
inc
push
out
outsb
adc
lods
outsb
sub
cld
lahf
sbb
cli
test
jl
push
shll
push
cmpsl
xorl
add
and
jb
fucomp
dec
add
cmp
jo
test
in
lock
sahf
es
adc
adc
add
nop
shll
or
or
andb
mov
movsl
loopne
sarl
test
xor
and
jno
jmp
mov
ja
out
jle
cmp
sarl
xchg
or
sbb
push
rolb
popl
lret
sbb
mull
pop
dec
ja
mov
pop
loop
push
stos
loopne
xchg
adc
adc
test
xchg
mov
fwait
int3
xor
or
pop
cmp
pop
cmpb
imul
jb
fmuls
nop
push
or
and
sbb
cmp
add
mov
mov
jl
cmpsl
shr
and
nop
cmpb
inc
adc
test
mov
cltd
jnp
lods
addl
dec
push
cmp
push
daa
dec
inc
fimull
scas
mov
in
jno
sarl
rcrb
adc
aad
in
loopne
subb
add
sbb
mov
cmp
shlb
sbb
movsb
test
pandn
cltd
xlat
loop
mov
jl,pt
xor
imull
int
jl
cmp
inc
pop
mov
adc
decl
dec
lods
fidivrs
pop
movaps
pop
sub
adc
pop
dec
out
cltd
inc
jb
out
add
xchg
imul
dec
jge
add
add
xor
cmp
insl
adc
push
mov
insl
inc
and
in
aas
in
in
fs
sbb
xor
and
enter
jo
out
mov
outsb
fisubs
outsl
pushf
addr16
sub
lea
std
sub
divb
mov
jno
mov
inc
sbb
stc
shlb
int
cmp
inc
mov
insb
ds
push
or
mov
mov
mov
cmp
or
pusha
mov
jmp
push
mov
xor
aad
imul
lea
mov
mov
std
xor
and
push
pop
sub
xchg
sbb
lret
popf
repz
mov
mov
int3
ja
shlb
clc
add
shll
mov
jno
push
jg
insl
loop
xchg
cmc
clc
dec
xchg
fidivrl
out
push
cmc
add
xchg
and
or
popf
and
mov
rorl
in
mov
mov
imul
fs
ja
sub
je
inc
jg
ja
out
mov
mov
sbb
sbb
imul
inc
fcom
jno
inc
inc
insb
repnz
je
mov
inc
jecxz
aaa
lock
pop
adc
insb
popa
fiaddl
cmp
pushl
xor
push
dec
sar
cltd
mov
dec
mov
loope
mov
jbe
mov
inc
xchg
mov
ret
loopne
pop
or
xor
push
push
jge
js
scas
jle
adc
aas
pop
cmp
je
in
dec
adc
ret
cmpsb
jmp
sbb
aad
mov
mov
cmp
mov
arpl
push
and
add
fcmovne
cmpl
push
xor
imul
ds
sub
in
jns
rcrl
aaa
dec
sbb
aam
nop
js
or
cld
icebp
inc
or
int3
pop
ljmp
mov
sti
cmp
jns
stc
xchg
cli
push
pop
dec
pop
pop
test
dec
insb
push
ret
into
notb
jbe
jo
push
mov
or
fcompl
outsb
add
push
cmp
cli
in
test
into
popf
dec
add
sbb
mov
ret
cmp
push
int3
xchg
outsl
push
push
stos
or
orl
and
sti
pop
rcrl
and
sub
rolb
dec
les
fistpll
psrld
mov
xchg
fsubp
ret
fstpt
movsb
icebp
fwait
push
imul
cmp
sub
insl
mov
push
pusha
rorl
lds
add
pop
jg
pop
push
sbb
xchg
popf
data16
mov
aad
scas
jne
test
pop
lcall
pop
ja
mov
inc
jnp
inc
loop
sbb
xchg
ds
push
cmpsb
xor
xor
mov
mov
out
loopne
add
pusha
mov
out
shlb
cmc
insb
aas
add
pop
out
das
mov
mov
imul
mov
and
insb
xor
or
jae
push
bswap
popf
call
cmp
out
dec
inc
push
or
fimuls
and
ss
popa
push
cwtl
loopne
mov
mov
xor
push
nop
sahf
add
fstpt
loop
in
les
and
nop
xor
add
test
mov
mov
fidivs
loope
mov
sbb
ja
cmpsb
mov
dec
mov
or
pop
out
mov
sbb
outsl
imul
mov
mov
nop
mov
fstps
cmpsb
sub
enter
and
stc
ja
insl
and
add
and
incl
jmp
cmpsb
sub
jae
sub
jns
insl
pop
or
int3
xlat
lret
sub
sbb
repz
jg
xchg
pop
and
dec
and
xchg
popf
jecxz
xchg
and
add
xor
test
jb
inc
push
or
pop
xchg
out
scas
jmp
dec
ja
popf
and
orps
rorl
jae
xchg
scas
shll
enter
movb
mov
cwtl
rorb
data16
lds
popa
flds
div
ljmp
insb
fisttpl
bnd
and
sbbb
xchg
cmp
lret
dec
mov
mov
xchg
test
int
add
mov
xor
xchg
das
add
subl
jb
mov
outsb
daa
scas
mov
mov
arpl
notb
cmp
xchg
lahf
lods
stos
jg
sbb
push
addr16
jns
mov
aam
cltd
test
and
mov
stos
pop
stos
jnp
jmp
dec
mulb
xchg
push
mov
pop
jle
call
into
popa
lret
fisubrl
or
lcall
xor
xchg
rolb
jnp
jl
jle
mov
jb
fmull
imul
ds
ja
inc
adc
inc
in
orl
sub
mov
mov
shll
loopne
or
lock
pop
call
mov
imul
sub
ljmp
mov
cmp
jnp
sub
sti
mov
dec
ud2
jp
ja
gs
mov
enter
or
repnz
leave
adc
std
mov
xor
popl
sub
add
scas
jnp
lret
or
outsl
sbbl
test
insl
mov
mov
enter
adc
push
out
out
adc
stos
lods
pop
push
icebp
fimull
push
dec
mov
cs
cwtl
lcall
pushf
lea
in
repnz
and
jle
bound
xor
sbb
cmp
icebp
pop
dec
jae
sbb
in
js
xor
neg
adc
addr16
out
iret
call
scas
sbb
or
scas
insb
push
dec
insb
cmp
in
in
jle
and
sub
and
in
rorl
aad
jge
push
jb
imull
rcll
xorl
xor
push
mov
inc
movsl
icebp
xchg
es
mov
pop
dec
hlt
mov
push
xor
jne
mov
lods
and
or
add
cld
test
out
das
popa
pop
ret
inc
push
hlt
roll
aas
pop
jbe
in
fmull
and
mov
imul
arpl
int3
mov
sahf
test
stc
add
inc
stos
aaa
adc
jp
inc
sbbl
clc
push
sub
cmp
aas
mov
mov
mov
bound
and
mov
fdivrl
stos
fs
shlb
movsb
les
aam
mov
dec
jmp
mov
mov
add
rcl
mov
jnp
jl
push
add
pinsrw
shl
clc
movsl
sub
arpl
push
cmp
pop
fdivrs
sbbb
add
bnd
mov
push
cli
adc
jge
out
inc
mov
xor
mov
nop
ret
loop
mov
or
ret
xchg
arpl
inc
mov
push
push
mov
mov
xchg
jmp
fistpll
sbb
sbb
lret
movsb
daa
testb
fistpll
mov
pop
jno
imul
sub
and
lock
mov
addr16
dec
push
mov
inc
sbb
push
sbb
in
mov
lds
push
aas
fwait
pop
aam
lods
das
sub
lahf
fisttpl
out
sbb
data16
dec
dec
adc
mov
test
inc
fyl2x
movb
xchg
jae
xchg
idivl
push
test
lods
sbb
mov
out
movsb
stc
pop
mov
hlt
sbb
rcl
add
out
mov
lea
xchg
inc
mov
in
fnop
nop
cmp
sarl
lret
push
pop
adc
pusha
dec
mov
push
xchg
pop
dec
xchg
mov
aaa
mov
adc
loop
lcall
incl
fdivrs
fdivrl
in
pop
mov
sbb
dec
test
sahf
lods
aad
push
pop
add
rcrb
leave
jae
add
mov
adc
mov
cmpsb
test
rorb
sti
je
leave
imul
add
and
add
mov
scas
xor
or
aad
pushf
push
jmp
inc
xchg
lret
mov
jne
dec
xchg
fcoml
mov
pop
mov
jnp
mov
cmc
mov
sarb
data16
dec
dec
enter
pop
int
insl
aaa
mov
scas
testl
and
jb
push
aaa
pop
push
push
lods
arpl
enter
lret
inc
ret
out
enter
repnz
scas
lret
pop
push
loop
mov
into
adc
mov
stos
jns
pop
aam
dec
repnz
add
call
xchg
sbb
or
adc
sub
sbb
cmpb
adc
in
int3
dec
std
fldenv
or
cmpb
mov
cmpsl
xchg
or
aas
neg
mov
mov
jle
fldl
xor
cmpsb
nop
mov
lods
mov
sub
test
inc
sbb
mov
cltd
inc
xor
mov
sub
xchg
and
js
mov
mov
stos
lret
and
xor
jbe
imul
mov
push
sbb
cmp
add
loop
and
lds
mov
movsb
or
out
mov
out
das
fucomip
push
movsl
dec
iret
jns
aaa
dec
xor
fwait
subl
cmp
insl
aam
xor
adc
das
cmp
cmpsl
jl
in
lds
mov
ds
push
outsb
push
test
add
sbb
xor
lds
cltd
push
mov
js
push
bound
call
clc
lods
out
xchg
icebp
incb
mov
ret
push
rcrb
out
cs
ret
sahf
call
sbb
add
ret
dec
inc
adc
pop
mov
or
ret
cmp
jl
sbb
int
pop
jl
push
cmp
adc
test
mov
lods
sarl
add
lahf
inc
and
push
div
cld
push
ljmp
push
pop
xchg
mov
pop
outsl
jb
test
jg
cmp
lcall
push
fneni(8087
repnz
pop
xchg
jmp
nop
mov
adc
mov
push
adc
mov
cltd
sbb
ret
clc
push
into
gs
outsb
adc
and
mov
cmp
arpl
xchg
inc
sahf
adc
ret
mov
or
or
in
push
loope
nop
insb
cwtl
ljmp
test
rcrb
dec
out
stc
cmpb
pushf
add
cwtl
mov
and
cmp
loop,pt
clc
das
mov
das
pop
loope
js
frstor
mov
call
adc
insl
nop
adc
cmpsb
jne
add
jne
push
jb
mov
and
xor
pop
lcall
or
sti
loop
mov
lcall
addr16
shll
or
jg
lret
adc
push
sub
rcr
clc
in
lea
xchg
push
loopne
jae
pop
in
daa
sub
jb
or
shlb
cltd
jge
insl
pop
jle
in
xor
outsb
clc
sahf
orb
mov
in
dec
mov
mov
or
mov
xchg
pop
mov
add
mov
es
inc
xor
mov
movzbl
xlat
inc
insb
jno
push
cmp
in
push
mov
pop
inc
dec
aaa
add
cld
adc
bnd
sbb
mov
inc
mov
adc
add
or
pop
fidivs
outsb
mov
inc
push
adc
ljmp
mov
mov
and
inc
scas
ret
mov
sti
sbb
mul
and
aas
cli
test
inc
mov
mov
outsb
pop
lret
jo
pop
pop
pop
adc
push
js
jno
bound
sahf
push
dec
dec
frstor
pop
cmpl
mull
inc
dec
mov
pushf
sbb
cmpsb
ss
gs
jae
jl
push
lock
sar
rorl
cmpsl
stc
mov
jnp
sbb
push
xchg
mov
adc
lods
pop
popl
pop
ja
pop
push
mov
xor
mov
rolb
xor
jg
sbb
ret
stos
repz
sub
mov
jl
inc
and
adc
js
ja
mov
repnz
sahf
adc
jp
sub
sub
mov
dec
test
cmp
lds
mov
push
push
and
les
sti
xor
ljmp
in
hlt
inc
decl
sarb
fndisi(8087
jnp
popf
mov
outsb
popa
ss
icebp
fs
inc
cmp
call
xchg
xor
in
xor
inc
add
gs
cmp
push
jnp
movsl
or
and
pop
jge
cmpl
mov
mov
insl
or
xchg
fwait
das
push
insl
fsubl
and
mov
outsb
or
fidivl
and
dec
bound
loopne
fistps
out
cli
add
adc
pop
sbb
push
in
cmp
aas
daa
or
and
lahf
popw
dec
idivl
jne
cmp
arpl
fstps
dec
dec
movsl
xchg
nop
pushl
cmpsb
rorb
push
push
pop
and
mov
mov
ret
push
push
repnz
int
stos
out
push
xchg
int
dec
add
or
lahf
lret
and
rcrl
cwtl
cmp
cli
xor
xchg
repnz
mov
lret
inc
mov
jnp
push
jle
out
addr16
pop
cmp
lret
loopne
stos
ret
lea
mov
xchg
mov
outsl
mov
out
arpl
sqrtps
cwtl
dec
subb
fnstcw
in
pusha
fcomps
sbb
popf
clc
and
aaa
popf
test
sub
cmpsb
or
test
pop
cmp
push
mov
cld
sbb
mov
pop
iret
mov
shlb
pop
push
jl
in
mov
pushf
pusha
mov
dec
aad
pop
mov
cs
stc
rcl
mov
addb
jle
ljmp
lahf
inc
ljmp
icebp
pop
testl
lds
add
minps
mov
test
addb
psubsw
jne
mov
aas
into
xor
jns
mov
repz
dec
clc
sub
mov
dec
loop
bound
add
das
mov
ljmp
ja
int3
gs
in
fsubs
inc
push
inc
popf
popa
push
pop
mov
and
rclb
xchg
std
inc
out
aad
jae
xor
pop
mov
je
pushf
and
inc
insb
or
test
push
imul
add
popf
nop
lods
inc
dec
add
jecxz
adc
mov
push
in
pop
lds
jl
fistpl
jg
sbb
sub
cmpsl
les
dec
mov
dec
pop
rcll
dec
xor
pop
subl
in
in
ja
icebp
dec
xor
pop
mov
lcall
mov
lahf
push
xchg
xlat
cmpl
dec
xor
fsub
int
mov
sbb
mov
or
xor
jnp
or
test
kandnw
mov
jg
and
mov
pop
jp
mov
jmp
stos
xchg
loop
sar
mov
mov
ja
adc
xor
mov
jmp
hlt
xchg
mov
and
and
mov
in
mov
adc
mov
pop
mov
in
in
jne
fdivr
xor
scas
in
mov
dec
add
imul
add
jp
sysexit
popa
xchg
push
fidivl
int
les
fcmovne
ljmp
dec
rcll
pusha
sub
mov
jns
ds
rol
jnp
in
imul
popf
mov
arpl
xlat
lcall
das
negl
addl
ljmp
repnz
fisttps
pop
leave
pop
ja
dec
cmp
jge
roll
popf
leave
xchg
in
iret
cmp
fwait
ror
jno
mov
or
xchg
xor
les
pop
fs
jle
fildl
mov
add
pop
ljmp
cmpsl
xor
cmpsl
cld
cmc
sahf
sub
pop
pop
jmp
xor
jl
jp
mov
or
gs
push
call
mov
outsb
pop
cmp
add
lods
mov
pop
roll
loopne
in
scas
inc
jnp
jmp
outsb
loop
dec
dec
shrl
add
adc
scas
stc
mov
pop
mov
mov
lods
push
sub
lret
push
adc
nop
xor
je
es
scas
test
adc
loop
mov
xchg
pop
pop
inc
cmp
jle
or
or
addr16
in
cld
jns
add
cmp
add
xor
jo
pop
aas
loop,pn
mov
xor
in
scas
divb
and
jmp
push
pop
arpl
mov
mov
inc
lods
inc
jmp
push
insw
jae
or
test
lea
dec
loope
fnsave
je
divb
out
sub
pop
push
mov
adc
inc
cmc
bound
add
jmp
pusha
dec
std
push
lcall
mov
out
mov
cltd
pop
fcmovb
dec
sub
in
ds
andb
xchg
sbb
xor
inc
clc
mov
or
xor
js
fnsave
pop
mov
sub
xor
xor
mov
daa
sbb
lds
mov
and
mov
into
les
mov
push
ret
cltd
icebp
sbb
cmpsb
jbe
into
mov
push
dec
rorl
xchg
inc
aad
sbb
cmpsl
cs
jnp
push
sbb
inc
adc
jne
mov
loop
mov
pop
ja
adc
icebp
jns
dec
ficoms
adc
xor
loopne
or
ja
daa
or
xchg
lods
jl
imul
fimull
mov
cmp
test
cmpsb
add
sub
sbb
test
cmpsb
in
lea
aas
or
pop
inc
scas
sub
or
xlat
or
push
xchg
test
pop
out
icebp
jmp
lds
sub
adc
out
popa
cmp
xchg
imul
mov
sar
dec
add
xchg
adc
fmull
andb
stos
inc
aad
aam
mov
sbb
mov
leave
lret
or
xchg
pop
clc
aaa
mov
in
jnp
xlat
xor
das
outsl
aas
pop
loopne
fadds
fists
push
pop
ljmp
inc
xchg
xor
mov
push
dec
mov
push
xchg
je
ffree
cwtl
or
cmp
sbb
das
pusha
mov
jge
or
push
xor
nop
push
or
je
dec
adc
fdivs
test
leave
test
push
pop
cmp
mov
popf
cmpsb
cmp
sbb
xor
sub
das
jle
jge
jns
inc
jb
and
fisttpl
subb
push
xor
leave
fwait
psubb
ss
inc
mov
cmc
cld
sub
mov
mov
push
icebp
ret
and
bound
leave
pop
clc
adc
dec
lret
arpl
pop
pop
call
mov
aaa
sbb
sub
div
cmp
mov
jle
notl
xor
iret
repz
pop
addr16
and
mov
mov
outsl
add
xor
movsb
or
leave
xorb
lock
jno
lret
test
add
scas
lds
adc
and
xor
test
shlb
add
add
jnp
xor
jecxz
pop
push
jl
lret
inc
cmpl
scas
mov
and
dec
mov
pop
cwtl
test
lcall
adc
ret
push
leave
xchg
adc
fcmovb
fsubr
test
cmp
in
jo
cwtl
lahf
sarb
adc
jne
mov
add
adc
pusha
xor
dec
and
cmpsl
pop
fwait
mov
inc
shlb
pop
sahf
fdivl
mov
rorl
sarb
hlt
ret
dec
insl
cmp
mov
out
push
fiadds
adc
in
scas
cltd
add
shrl
ret
pop
shrl
dec
movsl
sub
dec
hlt
andb
jecxz
cmpsl
jae
fchs
repz
in
cld
or
xlat
sbb
dec
adc
jae
outsb
leave
movsl
pop
sbbl
cmp
mov
sub
jmp
std
inc
loopne
xor
xchg
clc
push
add
push
out
jge
xchg
mov
leave
xor
scas
sti
sbb
inc
jp
fwait
scas
faddp
jmp
mov
sbb
add
in
in
pop
jb
xor
popa
jo
mov
out
loop
icebp
lcall
or
mov
mov
out
iret
cmp
sub
xchg
sarl
and
ret
out
inc
add
pop
mov
adc
sbb
pop
insb
xor
inc
mov
shr
sti
lods
lret
mov
sbb
cmp
test
lcall
cmp
mov
ret
push
stos
fmull
pop
mov
or
pop
scas
test
daa
or
adc
sub
jbe
add
cld
insb
add
push
or
push
xchg
popa
adc
js
jle
inc
mov
aaa
cli
mov
fldenv
push
insb
jne
jg
scas
sti
jl
out
rolb
xor
mov
mov
int
push
out
mov
fsubp
dec
mov
iret
mov
or
mov
push
and
inc
cmp
std
sub
js
sub
imul
xorl
fucomi
pop
adc
adc
test
cmpsl
bnd
xor
cwtl
xchg
or
xchg
sub
in
jp
testb
mov
mov
mov
sar
repnz
push
mov
cmp
jne
lock
mov
enter
fisttpl
js
xor
sbb
mov
jg
cmp
scas
cmp
pop
lret
inc
es
fisttpl
xchg
lock
pop
test
sahf
ficompl
add
leave
and
mov
add
lret
js
mov
mov
push
aad
or
sbb
clc
mov
into
mov
cld
or
out
in
popa
aad
out
mov
fsts
inc
sti
sbb
je
add
fsubr
into
loopne
fcom
dec
sub
sbbb
push
pop
push
mov
in
mov
cmpsl
rcrb
cmp
jecxz
stos
iret
cs
pusha
push
and
std
sbb
call
imulb
sbb
mov
mov
cmpl
xchg
sbb
adc
test
loope
lcall
out
sub
sub
push
shl
ret
leave
ss
cmp
loope
into
mov
out
test
jle
dec
xor
push
inc
mov
jmp
push
into
mov
adc
test
jo
push
jmp
and
push
and
notb
es
add
das
lret
xor
dec
and
lcall
push
or
xchg
add
lahf
cmp
lods
loopne
arpl
sub
inc
incl
mov
mov
jg
bound
testl
fists
mov
popa
stc
xlat
mov
imul
jno
pushf
fucom
ja
out
xor
mov
fildll
imul
dec
xor
out
into
push
pop
jl
lods
repnz
pop
imul
adc
imull
rcll
inc
xchg
ret
rclb
mov
lods
shrb
lret
rclb
ja
lcall
rolb
decb
mov
enter
in
insb
jmp
xchg
loop
shll
insb
mov
adc
xor
mov
adc
std
mov
sub
cltd
in
je
ljmp
mov
test
jae
mov
xor
inc
into
imul
inc
jae
sbb
and
pop
push
or
popf
lock
repz
dec
mov
aam
lret
outsl
clc
idivl
pusha
xchg
mov
add
adc
int3
mov
xlat
jno
lahf
je
xor
aaa
nop
add
das
and
aas
icebp
adc
in
pop
xor
xchg
vpcmpeqd
sub
and
sub
loopne
mov
mov
mov
call
and
dec
repnz
xlat
sarb
pop
pop
or
fwait
mov
rcll
or
lret
adc
jne
ret
ret
or
stc
rclb
lahf
xchg
mov
mov
aas
and
jo
and
icebp
les
xchg
xor
pop
cwtl
aad
jge
cmpsl
jb
mov
or
test
and
imul
pop
subl
mov
dec
movsb
mov
lret
inc
xchg
cmp
adc
daa
std
push
outsb
xchg
push
out
call
lods
std
out
sub
movsl
insb
imul
testl
pop
sbb
addr16
push
into
lock
and
lods
fsts
adc
mov
fcompl
add
cli
fsubs
stc
nop
xor
inc
mov
xor
dec
mov
mov
jno
sahf
jb
mov
mov
mov
cmovs
fnstsw
test
mov
stc
out
sbb
inc
jo
inc
rorb
lods
mov
dec
inc
or
mov
push
pop
xchg
outsb
xchg
push
cltd
inc
adc
insl
movsb
pop
and
aaa
cli
mov
pusha
les
pop
sbb
jnp
ljmp
shl
dec
mov
and
adc
fwait
pop
adc
xor
inc
test
push
sub
sahf
sub
add
jp
inc
pop
jecxz
inc
imul
dec
lock
inc
push
mov
add
xchg
dec
pushf
or
sbb
out
ret
mov
call
es
out
add
mov
cmp
mov
lret
adc
fdivrs
dec
push
pushl
mov
add
sarb
push
movsb
mov
xchg
insb
test
xchg
icebp
sub
out
pop
hlt
jb
sub
cmc
pop
fsts
std
push
pop
push
mov
sbb
push
insl
mov
xorb
es
fidivrl
cld
jmp
sbb
xor
cmp
lret
lods
sub
push
cmpsl
jmp
lea
scas
ss
aaa
insl
clc
pop
ljmp
stc
sub
push
add
adc
and
cmpsb
lea
jns
xchg
xchg
cmova
data16
jo
mov
daa
push
mov
std
pop
xchg
inc
mov
inc
or
scas
jo
leave
pop
bnd
cmpl
mov
lds
sbb
xchg
mov
iret
mov
xlat
inc
lcall
dec
dec
cmp
mov
add
add
and
mov
adc
and
icebp
mov
pop
cmpsl
mov
dec
notb
jmp
loopne
sub
sahf
test
movsb
and
das
pusha
iret
jp
lcall
sbb
je
fisubrl
fists
sti
adc
dec
or
add
xlat
repz
lret
pop
adc
out
or
adcl
leave
test
sbb
enter
enter
in
xlat
out
mov
cmc
addl
stos
testl
push
icebp
xor
movsl
mov
push
jnp
stos
lods
adc
dec
aas
movsb
lret
cmp
lcall
fwait
out
scas
add
add
ret
orl
push
fwait
sub
mov
jmp
add
mov
test
lea
js
cmp
dec
or
aas
test
and
ret
aas
stos
inc
int3
xchg
xchg
xchg
loopne
inc
cmc
cwtl
repnz
jg
outsb
shrl
test
sarl
mov
scas
inc
xor
push
mov
or
xor
fisttpl
xchg
testl
or
adc
movb
repz
xor
jle
cmpsb
in
cs
adc
dec
decl
pop
andb
and
sub
xorb
ja
loop
jecxz
sbb
shrl
pop
push
iret
je
mov
pop
loopne
and
jecxz
aad
aaa
push
fidivl
pop
or
push
dec
popl
dec
jle
js
mov
cld
adc
mov
pop
lods
movsb
movsl
and
rcrb
sub
xor
inc
int3
push
sub
imul
hlt
push
push
jne
cs
in
mov
addl
pop
movsl
fists
faddl
push
add
jp
clts
sub
xlat
cld
jp
or
adc
push
pop
insl
dec
cs
add
movsb
leave
in
cs
insb
jp
push
or
ljmp
mov
lea
aas
push
mov
loop
inc
jns
or
inc
lcall
xor
inc
fnsave
jbe
adc
push
shll
ds
in
adc
icebp
and
inc
mov
arpl
shrb
bnd
pusha
adc
test
and
outsl
js
outsb
adc
push
ja
sub
cmp
imul
or
mov
dec
xchg
or
jle
ret
xor
into
dec
fwait
push
pop
pop
adc
enter
aaa
or
mov
pop
dec
mov
jp
cwtl
add
xchg
add
xor
sbb
or
bound
adc
add
paddsb
ljmp
inc
xchg
xlat
sub
mov
jge
outsb
inc
dec
mov
sahf
xchg
ja
mov
lret
bound
sbb
mov
xchg
sub
mov
in
aam
fnstenv
sub
ljmp
rcl
jl
add
cltd
mov
push
xchg
xor
cmp
xor
push
sti
pop
fcoms
jno
push
cli
jmp
js
mov
cmc
adcb
mov
repnz
ret
scas
adc
enter
stc
xor
mov
ret
out
xchg
mov
fisubrl
jbe
pop
jae
mov
xchg
in
stos
addr16
jmp
ss
xchg
out
das
cli
jns
sub
pop
testb
lock
xchg
ss
pop
xlat
out
shlb
ljmp
add
mov
and
orl
push
test
mov
movsl
movsl
dec
xor
sbb
dec
stc
fdivr
inc
inc
imul
add
sti
insb
push
popa
stos
hlt
mov
pop
jle
mov
stc
gs
cmp
aam
xchg
pop
and
xor
dec
sbb
xchg
test
push
and
and
push
movsb
or
arpl
clc
cs
ja
sbb
jge
fisubrl
mov
cmc
cmp
jb
repnz
lea
cmp
and
jge
add
divb
fdivrs
dec
test
das
aaa
hlt
mov
pop
loopne
sub
jge
xchg
inc
cmpsb
jp
dec
mov
cmc
push
sbb
loope
xchg
cwtl
cmc
std
mov
stos
xor
push
pop
hlt
mov
stos
pop
sbb
cmpsb
and
lcall
jnp
mov
dec
mov
add
ficoml
aaa
and
mov
and
aaa
mov
and
sub
aaa
mov
shr
mov
mov
stos
jmp
sbb
mov
lds
test
push
lret
ljmp
mov
adc
inc
or
cmp
dec
cltd
lds
adc
adc
fwait
andb
out
lea
dec
pusha
sub
xchg
push
test
and
mov
scas
addr16
jmp
adc
mov
sti
cmp
inc
pop
imul
imul
pop
cmp
cmpsl
jne
cld
xor
scas
mov
jne
push
popa
jg
sbb
mov
or
fildll
icebp
int3
ja
bound
js
sub
mov
push
pop
addl
inc
fnstcw
mulb
jno
addr16
into
fcmovne
bnd
lods
shlb
mov
sbb
jp,pt
loopne
lods
xor
cmovo
and
push
xchg
mov
testl
push
mov
dec
xlat
add
fisubrs
popa
dec
mov
and
arpl
popf
movsl
or
push
mov
push
leave
cmpb
iret
mov
daa
push
popf
or
cli
mov
and
mov
add
enter
mov
mulb
clc
mov
je
les
xchg
lcall
jp
push
sarb
sysexit
fdivr
adc
cltd
mov
in
subl
pop
jno
xchg
push
dec
aad
jns
push
insl
mov
in
lret
push
shl
clc
out
cld
mov
mov
lcall
cwtl
int3
jbe,pn
out
sub
adc
addr16
jmp
test
out
aad
sbb
inc
mov
push
sahf
pushf
je
ss
adc
sub
cmpsl
gs
push
or
and
mov
repnz
gs
add
clc
dec
inc
xchg
stc
bound
cwtl
std
pop
lahf
xor
sarb
ror
jge
xor
in
in
cmc
mov
cmc
add
repnz
lret
aam
mulb
and
xor
imul
push
es
mov
cwtl
or
or
fwait
and
jmp
imul
out
outsl
cmpsl
sbb
jns
xchg
dec
cli
push
popf
lods
aaa
adc
cmp
les
fiaddl
mov
addr16
mov
inc
adcl
je
and
mov
xor
add
adc
ds
filds
cld
cmp
jl
adc
out
stc
iret
mov
fcomps
orl
movsl
fsub
imul
pushf
and
and
adc
data16
xor
push
aaa
jnp
adcl
dec
out
xchg
iret
dec
jge
in
mov
lahf
adc
movsb
inc
mov
in
inc
test
test
ret
push
insb
and
xchg
sbb
cli
popf
je
stos
push
jne
adc
cwtl
push
insl
mov
jb
pop
icebp
inc
andl
cs
aaa
cmpsb
jb
push
xor
test
gs
push
jg
cmc
cmp
adc
fwait
pop
mov
pop
loop
loopne
int
repz
pop
ret
or
mov
inc
lret
push
pop
and
jle
outsb
sub
pop
cltd
add
jnp
insl
scas
push
xor
dec
adc
mov
roll
cmp
cli
and
dec
inc
sahf
enter
cmp
fs
xlat
stos
sbb
mov
sub
cwtl
je
mov
sub
xor
mov
jmp
icebp
push
sub
sub
mov
lea
inc
fsubrp
mov
xchg
ja
add
int3
pop
jb
daa
lods
push
xchg
stc
dec
mov
xchg
mov
in
js
pusha
inc
sub
mov
clc
jno
cld
lgs
scas
lret
cwtl
mov
and
jae
ror
ljmp
ljmp
lcall
mov
xchg
aas
push
jne
mov
rorb
jl
shll
out
rclb
outsb
or
test
mov
movsl
repz
jns
push
xor
test
testb
jo
sub
fnstenv
xchg
or
repnz
fbld
jmp
push
cltd
push
pop
jg
or
imul
nop
sarb
out
and
or
jb
cmpsb
ds
add
mov
push
pop
cmp
inc
cmp
sbb
cli
test
mov
dec
insb
arpl
in
cmpsb
in
jnp
in
mov
mov
add
cmc
xchg
sti
or
and
push
lahf
dec
sub
jmp
xchg
dec
daa
xchg
mov
sbb
mov
mov
daa
clc
add
sub
sbb
int3
repz
jmp
fadd
pop
cmpsl
xlat
pop
fs
pop
jge
loopne
or
pop
ljmp
sbb
jnp
and
or
pop
pop
daa
push
shlb
ljmp
loope
test
fidivs
and
jns
ficomps
sub
xor
call
cli
into
xchg
inc
fisubrl
call
mov
mov
lock
inc
mov
jb
sbb
and
fildl
lcall
and
in
jne
popl
jne
jno
nop
cmpsb
js
push
aam
mov
cmp
jns
stos
fdivrl
jmp
in
les
sbb
and
jmp
cmp
xor
mov
shl
mov
and
dec
cmp
pop
dec
bound
mov
mov
lret
pop
rcr
add
fstpt
inc
xor
mov
jge
xchg
dec
mov
or
sbb
add
rorb
jmp
lods
xorb
mov
inc
push
sbb
addb
int
iret
inc
data16
dec
mov
xchg
add
mov
dec
push
test
iret
imul
in
cmp
je
leave
je
xchg
test
sub
jl
movl
popf
repnz
add
les
jae
push
add
xchg
xchg
icebp
dec
mov
mov
pushf
cwtl
call
jne
pop
add
clc
cld
daa
rclb
jne
adc
inc
mov
inc
cmp
dec
mov
dec
pop
std
fistps
hlt
or
mov
sub
popf
push
adc
arpl
inc
sub
scas
push
nop
inc
cmc
rcrl
test
jl
jnp
ljmp
fsubrl
push
push
add
icebp
pop
sbb
mov
stos
xchg
insb
xchg
scas
xor
fsubrp
imul
arpl
sbb
loopne
sbb
cs
xor
inc
xor
clc
push
mov
xlat
lds
adc
mov
and
pop
je
push
in
push
insl
pusha
test
mov
jae
xor
inc
out
jle
lahf
sahf
cmp
sub
sbb
jmp
inc
ja
lcall
rcl
dec
cmp
sub
ret
mov
fwait
push
in
into
mov
xor
faddl
stos
roll
cmp
lcall
imul
dec
or
add
imul
jno
lret
shrl
cwtl
aas
fisttps
pop
mov
mov
dec
xchg
andl
cmp
js
pop
insl
mov
rcll
mov
shl
pusha
ret
push
jne
sahf
and
sub
imul
add
mov
loope
repz
xchg
sbb
sar
mov
adcb
flds
sub
mov
add
adc
andb
sbb
shr
filds
mov
iret
in
adc
cltd
jnp
in
jb
ficoml
cld
pop
mov
mov
cmp
daa
int
jo
pop
fisttpll
push
jnp
gs
mov
popa
jecxz
fnsave
cmp
xchg
mov
lock
popf
jb
stos
scas
mov
sbb
xchg
shrb
xchg
jns
dec
mov
xchg
cwtl
ss
fldt
cmp
jo
outsb
addr16
lahf
jns
lret
lods
jle
test
dec
and
jmp
jg
xor
dec
inc
shr
dec
dec
aaa
rorl
sahf
dec
test
inc
aaa
fisttpl
mov
je
repnz
dec
xor
xchg
jp
cmc
xchg
mov
push
fiaddl
push
xchg
cltd
and
addl
ljmp
push
jmp
into
daa
shrb
mov
hlt
loop
adc
cltd
inc
or
mov
jle
inc
mov
iret
aas
and
cmpsl
sub
push
and
pushf
fst
cmp
inc
push
xor
sbb
mov
fnstsw
fistps
in
sub
jnp
or
pusha
stos
xor
cwtl
and
dec
xchg
cwtl
cld
cmpsl
sub
mov
mov
jns
out
popa
ljmp
sub
mov
in
mov
or
or
add
bound
push
test
dec
push
sub
lods
int
jae
fs
mov
or
icebp
inc
and
dec
fisubrs
add
ja
popf
aam
jg
jecxz
movhps
cmp
movsb
jg
daa
mov
test
pop
mov
notl
jmp
inc
repnz
jno
clc
daa
test
fs
ret
lcall
xlat
push
inc
fidivl
add
lock
test
int
inc
mov
rorb
mov
cli
rorb
fxch
fldenv
repnz
sub
xchg
orb
fstpt
sub
mov
stos
and
sbb
stos
arpl
lds
pop
sbb
ficompl
push
pop
shl
pushf
pop
mov
mov
leave
testl
enter
test
mov
add
fs
ss
outsl
je
mov
inc
jbe,pn
in
repz
mov
or
cmpsb
bound
js
mov
jo
cmp
pop
stos
mov
scas
lret
cltd
push
enter
pushf
out
xor
les
xor
mov
lret
test
xchg
les
jle
inc
stos
adc
push
pop
std
jo
adc
movsb
dec
jmp
ss
xchg
jge
adc
lea
dec
xchg
add
int
mov
test
push
and
dec
fistpll
jp
jmp
popa
mov
rol
xchg
xchg
pop
push
add
add
inc
push
scas
ds
es
dec
add
mov
and
inc
lea
sub
lods
stos
nop
dec
jp
jnp
fldt
rcrb
jae
inc
lret
rcrl
mov
insb
pop
loopne
add
mov
pop
test
pop
dec
js
lcall
xchg
lcall
push
sub
stos
clc
jae
jno
sbb
mov
inc
xchg
push
loopne
inc
push
int3
jecxz
or
ljmp
dec
test
dec
fldt
sbb
xor
jl
fsts
jmp
lods
jae
push
out
push
or
lahf
ljmp
call
mov
xchg
jo
ret
clc
ja
cltd
ja
cmp
imul
ret
mov
dec
cmp
pop
and
pusha
fcomp
pop
add
push
mov
dec
test
or
cmp
pop
daa
xor
xchg
in
mov
ret
push
xchg
jbe
xchg
or
push
lds
lret
cmp
mov
sub
adc
mov
idivl
sub
pop
sub
sbb
xchg
into
xchg
jbe
sbb
pop
mov
packuswb
fistpl
ja
jns
sbbb
jnp
popf
cli
shll
xchg
inc
cmp
insl
cld
jmp
xchg
in
cmp
xchg
xchg
dec
stc
mov
xchg
jno
es
out
sbb
add
dec
mov
or
aaa
insb
mov
aam
js
mov
sub
mov
add
sub
fwait
mov
sub
jl
jp
bound
mov
dec
insl
jae
dec
jno
mov
test
lods
jecxz
cmp
inc
xor
in
enter
outsb
xor
das
mov
sarb
outsb
mov
icebp
jge
cs
xor
addl
iret
std
test
out
icebp
sub
and
jmp
bound
repz
std
push
xchg
push
mov
bound
or
xor
ljmp
sbb
ljmp
pop
push
test
or
pop
push
jg
pop
cli
ret
aam
cwtl
mov
add
or
mov
lock
das
mov
dec
test
add
jnp
jno
xor
out
sub
aad
ds
pusha
mov
aam
sarl
fs
stos
mov
in
add
fsubrs
fisubs
dec
dec
fistps
mov
in
mov
pop
mov
mov
add
add
cmp
imul
outsb
fstl
lock
sbb
fs
insl
and
ret
and
aas
xchg
mov
lods
sub
loopne
inc
pop
dec
mov
push
movsb
sub
into
sbb
sub
daa
ficomps
notb
repz
xchg
arpl
jmp
neg
imul
add
iret
mov
loop
rcrl
or
or
aaa
push
movsl
sbb
pop
xchg
inc
mov
pop
jns
inc
ds
pop
imul
and
outsb
rorb
lcall
mov
dec
fucomip
jae
pushf
jmp
jb
xor
aas
sub
dec
outsl
mov
cwtl
int3
sub
mov
insb
test
out
out
stos
and
cmp
push
xchg
sub
sbb
push
mov
or
jnp
test
loopne
sbb
cli
jg
add
addr16
inc
inc
mov
pop
inc
push
movsl
scas
push
mov
cmp
rorb
mov
pop
das
mov
sub
cmp
xchg
sbb
sub
popa
scas
mov
adc
lods
dec
sbb
bnd
dec
dec
loop
rolb
mov
push
cld
push
data16
cmpl
cli
cmc
lods
xchg
xchg
mulb
sbb
push
repnz
cmpsl
adc
out
jbe
stos
daa
stos
dec
jns
cltd
or
adc
pop
adc
inc
jns
dec
cmp
sbb
fldt
mov
out
int
movsl
mov
sbb
adc
test
mov
stc
cbtw
popf
push
cltd
pop
jl
sub
cmpsl
mov
dec
sbb
push
or
inc
loop
lret
jmp
test
and
fists
fisubrs
push
dec
aas
rcll
jp
stos
jb
adc
push
sub
dec
in
daa
fisubs
repz
push
roll
add
xor
jg
iret
cltd
inc
mov
ret
push
gs
lea
sub
mov
mov
xlat
cmp
scas
ja
ficoms
xor
cmpsb
and
addr16
mov
test
cli
outsl
ror
call
out
push
popa
pushf
iret
or
adc
jns
mov
adc
sbb
or
ds
xchg
and
jp
jge
fidivl
pushf
repnz
mov
xor
and
aaa
sub
ds
enter
xor
adc
cmp
test
adc
jp
adc
andl
fcmovnu
lods
stc
ret
stc
push
xchg
xor
mov
hlt
in
in
ret
in
cmpsb
sub
adc
ljmp
inc
sub
out
inc
pop
inc
test
cmp
dec
sbb
inc
hlt
and
cmp
es
add
addr16
je
jle
cwtl
mov
callw
xor
clc
test
adc
xor
sbb
sub
push
enter
xor
rcrl
outsb
insb
ret
cs
mov
push
mov
sbb
jbe
adc
daa
pop
rorb
sub
cmp
jns
stos
mov
test
or
jbe
jecxz
dec
cmp
dec
xor
jbe
push
pop
clc
jge
or
push
outsl
push
xchg
sub
cmp
out
jae
aad
adc
jmp
inc
pop
inc
mov
rcll
cmp
mov
movsl
lahf
mov
dec
lds
push
les
jg
hlt
sub
int
in
outsb
and
adc
pop
lea
lret
pop
xchg
and
xchg
bswap
pop
loop
and
stc
jge
insb
mov
mov
push
adc
idivl
fs
or
dec
push
add
cwtl
mov
and
rolb
jge
insb
push
aad
xchg
push
cmp
mov
xor
inc
orl
lcall
jmp
cmp
rclb
mov
movb
mov
jnp
add
push
lods
mov
out
adc
dec
xchg
xor
int3
xor
xchg
or
xor
push
clc
cwtl
ljmp
xor
mov
add
mulb
jmp
mov
cli
ljmp
scas
out
dec
add
inc
incb
mov
jae
lcall
mov
scas
jo
repnz
xor
imul
shl
dec
shlb
inc
notl
test
rcl
jne
outsl
xor
scas
inc
std
mov
in
dec
filds
dec
xlat
fimuls
jmp
cmp
cs
movsb
lock
lods
data16
stos
popf
or
jns
js,pn
insb
scas
das
inc
add
dec
push
adc
xchg
fiaddl
xchg
stc
bound
inc
cmc
pop
xchg
repz
sbb
out
push
mov
out
mov
add
push
subb
pop
dec
test
push
leave
adc
jns
push
mov
clc
lock
sarl
push
sub
jg
les
jge
jnp
jb
inc
inc
adc
push
xor
cmpsb
ljmp
scas
stos
pop
xchg
mov
movsl
orl
leave
dec
mov
xchg
ret
repnz
scas
in
filds
add
adc
adc
leave
xorl
mov
frstor
sbb
into
and
inc
mov
shl
xor
leave
sbb
mov
cmp
or
movsl
ljmp
mov
pop
dec
mov
inc
jbe
xchg
or
lret
out
or
inc
ret
dec
push
dec
inc
cmp
mov
sahf
and
adc
or
iret
push
pop
mov
mov
daa
movzbl
fisttps
outsb
testl
jmp
imul
repz
loopne
in
scas
lahf
scas
xchg
and
mov
jnp
js
sub
lret
in
mov
out
je
lret
paddusb
bnd
lock
pop
push
cmp
int
pop
fimull
fwait
scas
dec
int3
dec
popf
mov
cs
lds
and
outsb
aam
scas
enter
cld
push
dec
int3
pop
into
mov
xorb
dec
jne
adc
mov
rolb
push
ljmp
fidivrl
nop
scas
mov
cmp
repz
mov
pop
adc
cmpsb
push
xchg
or
sbb
cli
fcoms
in
out
mov
lock
fwait
pushf
fmuls
stc
iret
aas
lgs
rclb
cmc
push
imul
je
sbb
pop
leave
imul
das
shl
mov
in
inc
pop
mov
ficoms
sbb
mov
mov
in
pusha
adc
add
mov
or
lret
and
mov
pop
test
shrl
mov
sti
xchg
stc
paddsb
lahf
cmc
outsb
movsl
mov
in
sub
xor
daa
in
xlat
cltd
jl
das
jmp
imul
cmp
int3
jns
and
test
fsts
hlt
rcr
dec
punpckhdq
jno
sub
aad
adc
mov
das
and
fmul
mov
sbb
test
pop
inc
dec
popa
and
rcr
outsl
pusha
xchg
ret
lea
pop
push
hlt
xor
sahf
mov
xor
dec
dec
fidivs
adcl
mov
ror
push
xchg
cltd
xchg
clc
pop
mov
into
pushl
xchg
lahf
add
xchg
in
push
ficoml
dec
pop
mov
pop
cmc
cmpsb
sbb
cs
pop
jge
pop
repnz
jecxz
dec
sub
cld
rcll
imul
sub
sbb
jae
fimull
or
jbe
imul
lret
cmp
test
or
pop
loop
loope
pop
testb
out
push
mov
cmp
add
cmc
ss
jp
jno
xchg
or
pop
rol
dec
jecxz
dec
jp
xor
mov
xor
test
rorb
dec
pop
add
stc
or
jg
xorb
test
dec
add
in
pop
sbbb
mov
sub
das
adc
inc
inc
dec
es
jne
fdivrl
notl
mov
dec
cmp
push
dec
lods
xor
lock
bound
or
mov
adcb
mov
popf
fisttps
pop
arpl
sub
imul
icebp
aaa
jg
push
mov
cmp
test
sub
imul
mov
arpl
pop
dec
push
jecxz
xchg
stc
adc
leave
add
pop
in
popa
sub
das
pop
lods
sub
inc
ss
scas
sbb
stc
adc
stos
mov
add
dec
lcall
lods
mov
jge
sbb
push
ds
xchg
pop
out
push
imulb
lahf
mov
push
aaa
loop
mov
iret
jnp
cmp
repnz
inc
xor
or
iret
mov
jle
scas
lret
dec
mov
movsl
jns
js
test
mov
out
dec
pop
jne
cmp
lret
pop
fwait
xchg
stos
or
daa
loop
xor
popa
push
cmp
aas
pop
je
cmpsl
fwait
mov
xchg
jge
and
movq
sbb
mov
pop
fnsave
fisttps
lcall
icebp
jle
adc
lahf
cmp
xchg
push
or
xchg
and
enter
iret
fs
gs
mov
ljmp
and
lds
sahf
test
ds
es
xor
sbb
dec
push
inc
xchg
outsb
pushf
pop
adc
fsub
roll
lods
or
add
in
mov
mov
push
loope
and
fiaddl
or
push
in
xchg
xor
inc
xchg
jno
push
xchg
fmull
mov
xor
dec
xchg
inc
repnz
xchg
lods
popf
push
lock
dec
pop
sar
pop
unpcklps
andl
fisttps
and
dec
mov
sub
xor
mov
push
movsb
sub
test
push
jbe
sub
stc
jo
pop
cltd
or
and
xor
scas
cmp
sub
mov
gs
mov
mov
jg
or
or
pop
clc
jge
idivl
inc
lret
aad
pop
pop
dec
das
jnp
pop
and
and
fwait
dec
cmp
cmp
push
sub
popa
pop
cmc
or
push
cmp
push
pop
shll
rclb
outsb
popa
idiv
ficomps
cli
sbb
cmc
mov
js
lret
push
add
in
leave
mov
test
pushf
popf
in
in
fdivrl
shlb
xchg
push
mov
scas
inc
aad
cmp
es
or
addr16
adc
lds
test
push
dec
bound
xchg
sbb
inc
cmpsb
cmp
jae
mov
xchg
gs
icebp
stos
loopne
cs
xor
push
xchg
stos
sbb
mov
subl
into
adc
fcmove
in
rcll
sbb
push
sahf
mov
xor
xchg
and
xchg
lods
xor
js
ljmp
lcall
mov
subl
in
arpl
jmp
mov
push
stos
xchg
andb
dec
popa
jmp
pop
fiaddl
sti
out
pop
imul
int3
std
adc
mov
das
cmp
adcl
add
negl
cmp
cmp
mov
mov
in
inc
xlat
xchg
mov
faddl
cmp
inc
stos
push
adc
dec
cwtl
testl
sub
inc
iret
jb
cs
jle
pop
inc
cmp
sbb
dec
cmpsb
jmp
les
jecxz
and
dec
leave
push
fcomps
cli
adc
push
inc
pop
cld
add
and
xchg
out
cs
enter
clc
inc
jbe
pop
or
dec
pushf
loopne
xorl
pop
add
xor
add
insl
test
push
jp
aam
add
and
fwait
jp
xlat
movsb
jo
subl
jg
mov
stc
and
mov
xchg
pop
out
aam
in
cltd
inc
add
scas
sarb
mov
jae
enter
mov
loop,pt
or
xchg
mov
add
fisubrl
inc
sbb
push
lcall
leave
push
xor
rol
fwait
inc
xchg
mov
ja
xchg
add
push
add
and
outsl
cmp
lock
cld
mov
divb
fwait
sub
jl
sbb
push
loope
sbb
sbb
sbb
jecxz
pop
mov
stos
aas
and
movsl
mov
ss
fisubrs
or
ljmp
addr16
mov
pusha
cmc
dec
push
add
inc
outsb
hlt
adc
push
push
jecxz
push
lcall
out
addl
pop
fwait
push
ror
jne
cmp
inc
fstl
xor
stos
adc
shrb
add
pop
dec
icebp
loop
or
je
mov
mov
push
jae
cs
or
pop
fisttpll
dec
add
out
dec
call
jne
pop
cli
out
sub
loopne
daa
mov
sbb
inc
stc
mov
lds
push
sahf
mov
cmpsb
add
sub
sahf
push
pop
push
push
lahf
out
jbe
gs
enter
mov
mov
mov
jecxz
sub
cli
das
cmp
pop
sarb
test
rolb
or
dec
sti
fisubrs
xor
sbb
decl
es
ljmp
iret
xor
gs
out
cli
sbb
movsb
adc
out
call
das
xchg
and
jl
mov
mov
xor
xor
push
jns
popf
lret
add
or
jbe
mov
push
loopne
lea
inc
adc
notb
sub
outsl
lahf
or
pop
in
cmpsl
mov
xchg
mov
nop
jp
inc
icebp
mov
mov
insb
lea
push
dec
pop
stc
pop
jns
pop
sbb
or
fwait
and
ficompl
xchg
mov
scas
pop
inc
sbb
sbb
lret
test
mov
fisttpl
lods
pop
fadds
jne
jg
shlb
mov
mov
sub
sub
jge
fists
xor
rorl
je
and
mov
inc
or
insb
testb
stc
sbb
sbb
mov
ss
cmp
push
lods
rclb
sub
cmp
in
fcoml
das
sti
mov
cmc
dec
out
mov
push
insb
test
inc
mov
pop
xor
int3
aas
jbe
aam
jb
mov
lods
mov
ret
and
shll
call
mov
fmuls
mov
data16
and
iret
and
dec
and
pop
lds
lret
mov
jo
scas
sub
push
pop
test
lds
enter
bound
rorb
cli
push
repz
cltd
repz
xor
fsubl
dec
push
lcall
into
cbtw
mov
or
cmp
sarb
testb
adc
mov
nop
jge
into
bound
xchg
or
not
push
fwait
rcrb
cwtl
and
aam
inc
adc
jp
or
pusha
inc
jmp
data16
imul
clc
inc
push
xchg
into
movsl
in
mov
movsl
jo
mov
xor
jmp
jb
mov
fisubl
aad
lea
movl
dec
inc
cmp
add
test
cmc
sub
jmp
out
add
repnz
imul
mov
add
imul
sbb
stos
lods
fisubrs
push
push
and
cmpb
inc
and
xor
sbb
pop
sub
push
jo
jmp
mov
dec
push
jmp
testb
cmpsl
ljmp
leave
popa
inc
pusha
xchg
add
in
xor
push
push
lods
jno
cmp
js
xchg
loop
ljmp
out
in
dec
add
loopne
rol
es
add
mov
lahf
daa
mov
lahf
and
popf
add
mov
sub
lcall
mov
jnp
call
adc
idivb
lods
fisubs
das
add
loope
mov
leave
loop
push
out
or
cmc
dec
out
xor
cmp
add
into
ret
inc
push
lods
sbb
adc
aad
sub
out
jo
in
sbb
fdivrl
roll
inc
and
popf
jae
test
push
cmp
scas
shr
dec
loope
das
add
jne
inc
ljmp
push
push
push
fisttpl
outsb
sti
xchg
loope
adc
mov
ret
add
js
xchg
test
cld
mov
push
adc
xor
cld
aaa
xchg
add
inc
sti
movsb
mov
cmpsl
testb
sub
xchg
mov
ret
negb
popf
inc
lcall
mov
sub
xor
mov
cmp
push
repz
pop
or
jns
pop
cmp
jmp
xchg
cmc
dec
daa
jbe
mov
push
enter
xchg
test
mov
out
dec
mov
insl
imulb
push
bts
insb
mov
das
and
sbb
stos
gs
or
inc
jno
dec
cli
out
push
jmp
sbb
fstpl
ss
fistl
aas
shlb
loopne
enter
xor
mov
test
or
movl
xor
test
nop
addl
fisubrl
rcrl
xchg
and
dec
ja
lock
daa
aad
cltd
mov
jae
fxch
or
jb
lods
dec
xlat
xor
shl
dec
xor
pop
mov
jnp
inc
bound
pop
pop
and
leave
in
push
dec
dec
jl
jg
je
bound
push
out
or
lods
lahf
cmp
push
mov
adc
sub
fsts
pop
sarb
push
or
mov
aas
cltd
sub
ret
std
or
xor
adc
ja
xchg
sub
das
cmpsl
lods
pop
js
int3
dec
enter
jno
xchg
es
enter
or
fsubl
sub
addr16
or
adc
loope
dec
jae
aas
stc
jmp
leave
imul
pop
es
jl
cmpsb
pop
js
jne
xchg
clc
mov
dec
loopne
fwait
mov
into
push
mov
call
mov
inc
lret
ss
sub
shrb
inc
cmp
pop
rcll
or
pusha
fcoms
aaa
cmp
mov
jp
jle
inc
imul
fs
lods
push
and
add
lods
adc
aad
fildll
in
dec
movsl
mov
jb
test
in
arpl
inc
mov
add
repz
push
mulb
ret
push
and
testb
cmpsb
or
scas
icebp
movsl
mov
out
arpl
pop
or
push
inc
outsb
out
movsl
loope
out
pushf
jno
inc
ss
cltd
adc
cmp
es
loop
add
cmpsl
pop
xlat
pushf
inc
jns
in
repz
mov
adc
outsl
jge
imul
sub
int3
push
test
and
xchg
lds
cltd
adc
xlat
and
loopne
jb
push
push
sbb
test
popf
and
js
and
pusha
mov
stc
imul
and
repz
cmp
or
xchg
pop
pop
xor
cmp
mov
pop
lahf
jns
xchg
data16
jnp
data16
popa
push
and
and
cmp
cmc
or
stos
and
inc
sub
jg
sti
stos
sbb
push
out
add
out
cli
cmpsl
dec
xor
test
loope
pop
xchg
lds
dec
xchg
push
loop
push
xor
stos
dec
inc
add
xchg
shrb
sub
xlat
mov
xchg
mov
push
inc
loopne
shlb
mov
or
test
mov
and
mov
scas
jb
push
push
mov
xor
dec
ret
in
inc
sub
loopne
ror
sbb
xor
out
loopne
mov
adc
leave
imul
jge
incb
jle
jae
aad
aad
adc
pop
mov
inc
cltd
or
dec
sub
sub
or
cvtdq2ps
icebp
in
lret
aaa
popl
fsubrs
fisubrl
jp
jns
adc
in
sub
and
pushl
nop
hlt
mov
inc
jl
sbb
sbb
inc
fildll
pop
imul
jg
out
cmp
sub
dec
test
mov
jne
dec
sbb
lret
adc
out
test
repnz
test
jecxz
fld
jmp
loop
jae
inc
stos
add
adc
ja
and
lahf
xchg
fnstenv
dec
mov
stos
filds
cli
in
pop
pop
shlb
shll
ds
mov
pop
loope
xor
inc
mov
jecxz
mov
xchg
pop
gs
inc
fcmovb
fwait
or
inc
sbb
xchg
pop
adc
mov
icebp
inc
or
cmpsl
out
xchg
lahf
xorl
fbstp
in
es
jne
test
xchg
xorb
ficompl
bound
repz
mov
bound
orb
cs
inc
sub
icebp
gs
lock
call
dec
sub
jp
insb
mov
sub
movups
push
mov
clc
or
xchg
jge
jg
mov
pop
sbb
xlat
jne
test
mov
xchg
sbb
cmp
pop
std
sub
ljmp
xor
mov
ficomps
jecxz
jg
es
pop
addl
fidivl
push
hlt
lea
dec
and
cmp
inc
jp
cli
xchg
dec
jmp
imul
insl
cmp
std
int3
insb
xor
cmpsl
int
test
test
repnz
inc
lds
and
mov
push
sub
pusha
inc
pop
repnz
rcll
mov
clc
mov
xchg
dec
add
adc
xchg
out
xchg
stc
nop
sbb
jmp
ss
jns
imul
cld
mov
mov
scas
cmp
repnz
icebp
sbb
pop
pop
xchg
jge
sbb
xor
test
out
pop
cmp
cmp
es
mov
inc
cmc
fisttpll
es
bound
inc
push
xor
mov
hlt
sahf
pop
cmpsb
lds
insb
daa
jno
icebp
sahf
jae
pop
xchg
repz
cmp
sub
pop
aas
add
into
addb
sahf
sbb
xor
je
dec
int
test
lock
test
ss
out
cld
pop
pop
js
fisttpll
arpl
sti
sbb
sbb
add
pop
cmp
popl
mov
inc
in
mov
or
shrl
mov
movsb
jl
shrb
jns
inc
cmpsb
sbb
mov
sub
xlat
aas
jae
mov
enter
jns
movsb
add
mov
and
fwait
push
js
or
xchg
cld
sub
add
jns
scas
push
push
cmp
aaa
mov
xchg
mov
lahf
cli
pushf
jbe
movsl
jecxz
fdivrp
fld
sbb
mov
cmp
cmpl
test
cli
pusha
lods
mov
cmp
test
inc
sub
arpl
add
cmp
pop
mov
dec
icebp
jae
cmp
lods
or
sbb
jne
leave
stc
cli
pop
pop
mov
sbb
hlt
xchg
pop
int3
xchg
clc
pusha
int3
adc
xor
or
add
loop
dec
push
xor
xchg
in
inc
push
ja
in
out
divl
xchg
fucomip
mov
pushf
ds
fsubl
bound
cli
and
popa
add
insl
adc
xchg
xor
jge
pop
add
sbb
scas
and
aaa
rcrl
xchg
popl
pop
hlt
jmp
pop
mov
js
andl
lock
pop
cld
and
mov
dec
inc
ret
out
cmp
mov
idivb
movsl
pop
adc
jecxz
push
mov
inc
and
ss
jb
dec
or
fdivl
in
aaa
mov
dec
int
jb
inc
movsl
subl
mov
into
dec
mov
aad
sbb
ljmp
movsb
cli
sub
fnstsw
addr16
add
mov
lods
xor
call
aam
test
xor
dec
sbb
insl
cmp
aam
mov
incb
ljmp
dec
cmpps
or
add
cmc
inc
xor
jp
push
sbb
pop
pushf
gs
mov
fildll
scas
mov
push
les
mov
xor
xchg
stos
mov
cld
mov
mov
rcrb
adc
mov
mov
repnz
sti
xchg
dec
xor
lock
sub
and
lcall
cld
ret
data16
das
sbb
xchg
inc
sub
lret
inc
faddl
lods
mov
add
and
xchg
xor
lods
cmp
fistl
fistpll
xchg
mov
cmpsb
pop
or
loope
shlb
inc
fldcw
outsl
and
dec
cmp
shlb
iret
test
cli
je
and
sbb
cmp
sbb
push
xor
dec
js
sbb
pop
push
inc
shll
addr16
push
leave
rcr
je
test
inc
aas
pop
xchg
fisttps
push
adc
aaa
nop
adc
jnp
xor
ljmp
cmp
adc
cmpsb
sbb
and
jns
pop
out
and
inc
mov
sub
lea
xchg
lock
in
xchg
and
mov
lcall
rol
les
xchg
aam
test
pop
mov
jae
daa
jns
out
adc
mov
or
pop
sbb
cs
aaa
imul
inc
int
insl
repz
ror
jecxz
mov
lret
in
addl
divl
push
or
or
fisubl
xchg
inc
or
mov
repz
lods
gs
dec
sbb
pop
or
ljmp
push
jl
rol
pop
mov
dec
and
pop
lahf
push
sbb
cltd
xlat
out
out
and
ja
cmp
adc
data16
mov
aaa
cmp
mov
sahf
ljmp
sbb
or
mov
fnstenv
fwait
in
fisubrs
inc
cli
aas
dec
dec
stc
push
imul
insl
or
jp
sub
and
xchg
jnp
aaa
push
inc
scas
aas
aad
pop
xchg
xchg
test
jmp
js
imul
cmp
cs
ja
scas
daa
mov
popf
pop
jbe
ljmp
sub
pop
or
mov
sbb
sub
sub
add
je
adc
pop
cltd
jnp
scas
add
in
add
imul
mov
push
adc
push
daa
sbb
pop
and
and
cmpsb
cmp
ljmp
pop
inc
test
sub
daa
or
inc
nop
arpl
shll
and
flds
pop
mov
loope
push
test
lods
jle
add
in
add
shll
pop
pusha
push
or
decb
inc
jns
outsl
clc
sbb
or
xchg
xchg
cmp
dec
inc
or
mov
pop
mov
push
es
jle
out
aaa
popa
mov
test
fs
outsl
pop
rclb
loopne
aad
inc
or
mov
leave
adc
stos
sbb
popa
cmp
inc
fidivrl
out
mov
sbb
pop
stos
cmc
dec
cli
testb
ficompl
mov
push
push
xor
int3
push
lcall
out
push
out
aad
push
jmp
jge
inc
mov
enter
xor
mov
mov
mov
and
xchg
in
push
mov
jg
jno
pop
sub
jl
jmp
aaa
dec
mov
nop
lcall
dec
lahf
jne
arpl
ret
mov
push
lods
sti
leave
cmp
or
gs
jg
outsb
ja
inc
mov
jmp
cmpsl
mov
jo
stc
std
jbe
pop
or
inc
pushf
ror
adc
inc
inc
je
pop
or
ss
test
sbb
push
push
sbb
mov
rcll
push
xchg
cmp
cmp
sub
xorl
adc
out
sub
mov
cwtl
lods
dec
out
fimull
xchg
mov
enter
xor
add
sahf
repnz
mov
sbbl
hlt
xlat
inc
movsl
and
mov
and
movsl
imull
shufps
mov
xlat
sub
jnp
inc
or
xorl
mov
dec
dec
mov
xchg
xor
mov
mov
aad
pop
cmp
bound
ds
in
dec
dec
sbb
subb
idivb
mov
cmpsb
xchg
cwtl
mov
cltd
inc
add
out
shlb
jmp
mov
js
adc
shll
out
fnstcw
lret
lock
inc
repz
or
mov
ja
cmc
sub
aam
mov
loopne
pusha
repz
inc
js
jecxz
inc
ljmp
sbb
repz
roll
cmc
or
adc
frstor
dec
adcb
push
xor
in
sarb
cmp
sub
cmp
xor
jnp
clc
jl
or
mov
movsl
push
movsl
mov
ficoms
inc
cmpsb
mov
icebp
pop
sub
xor
adc
fs
mov
rcrl
call
iret
fsubrs
ret
arpl
push
aad
aad
push
pushf
xchg
dec
out
mov
enter
cli
inc
int
or
pop
adc
cmp
notl
mov
xor
cmc
push
inc
sti
jb
or
inc
testl
or
lods
ret
addl
pop
jl
insb
jno
fldenv
loope
decb
int
and
dec
lds
stc
shr
mov
sub
aaa
pop
pop
mov
fs
ljmp
jmp
sbbl
in
int
inc
in
jb
mov
dec
adc
adc
aam
xchg
out
in
psrad
sub
push
fldcw
and
push
pop
xchg
adc
push
mov
cltd
das
clc
sub
xchg
aam
fs
add
mov
imul
xor
test
pushl
mul
jge
sti
ret
and
xchg
daa
push
xor
lcall
addr16
ffreep
and
inc
adc
jp
mov
push
in
imulb
je
movsl
or
stos
mov
pop
sbb
mov
jno
mov
jmp
aas
shr
icebp
xor
shrb
int
mov
inc
or
mov
pop
popa
xchg
sbb
sahf
jnp
inc
stc
cwtl
add
rolb
std
mov
adc
pushl
mov
nop
mov
repz
fildll
mov
inc
mov
call
push
in
jb
data16
std
shll
inc
adc
and
fistl
fadd
pop
sarl
dec
addr16
mov
cs
adc
mov
pop
push
insl
sbb
jae
ret
xor
out
push
add
xor
ss
jno
cmpb
out
dec
cmc
movsl
std
aad
add
mov
dec
dec
xchg
cmp
insb
push
add
sbb
xchg
inc
xchg
jecxz
test
mov
mov
sub
add
dec
push
ljmp
xchg
inc
imul
scas
mov
pop
ljmp
mov
and
pop
add
mov
sub
and
inc
xchg
popf
inc
out
mov
nop
and
loop
mov
or
cmpsb
xchg
les
sbb
pop
fbld
mov
imull
hlt
stos
sarl
loop
sbb
negb
je
mov
pop
lret
aam
fsubrs
sbb
cmp
mov
dec
sub
xchg
adc
and
retw
add
in
lahf
jae
push
pop
stos
sti
xchg
lcall
lret
sub
and
js
out
dec
cmp
jge
adc
iret
outsl
pop
mov
jp
adc
movsl
mov
jo
jl
inc
xchg
adc
push
mov
repz
xchg
mov
shll
mov
mov
aam
mov
add
push
ds
cmpb
insb
adc
and
or
jb
ss
add
movsb
ss
and
dec
fwait
inc
jne
xor
add
jl
push
adc
subb
sbb
inc
jecxz
insb
jns
cmp
das
ret
repnz
jb
pop
pop
lods
dec
jb
mov
mov
icebp
int
rcrl
sti
xchg
aam
repnz
xor
cmp
jp
sarl
xor
pop
sub
sarl
sub
adcb
cli
jg
and
mov
enter
inc
pop
ret
push
inc
add
jp
jle
jae
scas
jb
mov
jle
ds
int
xlat
fcomps
pusha
adc
movsl
sub
jmp
scas
loopne
out
out
arpl
mov
addb
add
push
push
fnstcw
ja
mov
imul
repnz
xchg
and
push
shlb
sarl
and
imul
in
lcall
mov
cmp
mov
xor
sbb
mov
adc
sbb
inc
popf
hlt
pop
mov
popa
dec
sbb
push
in
mov
fiadds
inc
or
mov
mov
add
aad
pop
call
mov
jno
cmpsb
pop
outsl
xchg
xchg
lret
jno
sub
fiaddl
lock
pop
lret
or
sarb
mov
jbe
repnz
jns
mov
dec
std
lret
pop
dec
out
inc
lock
mov
or
sub
inc
into
inc
dec
sbb
push
push
stos
push
push
pop
subb
jbe
es
ja
cmpsb
pop
mull
xchg
xor
aas
pop
ret
daa
sub
adc
mov
rcr
push
dec
jno
filds
pop
lds
push
dec
jns
push
xchg
add
arpl
mov
jl
mov
int3
push
fld
pop
sbb
xorl
cmp
movsb
jno
lcall
in
shlb
mov
mov
aaa
add
pop
in
loope
mov
addr16
std
pop
pop
mov
cmp
and
iret
dec
popa
mulb
sub
mov
iret
sub
push
mov
ss
loopne
enter
loop
adc
and
sti
mov
sub
inc
inc
cli
mov
imul
rorb
and
out
pop
mov
sub
movsl
inc
adc
xlat
cmp
lret
out
adc
mov
xor
shrl
adc
sarl
cmp
xchg
cmp
dec
repnz
inc
lret
in
aas
sub
xchg
adc
mov
push
adc
adc
aad
not
insb
enter
lret
daa
jb
fdivl
and
xchg
shrl
lea
jmp
stc
add
scas
adc
int
dec
test
dec
push
pop
jno
int
loop
arpl
mov
jns
xor
inc
cmp
aam
mov
cmpsb
dec
xor
mov
les
and
arpl
push
xchg
sar
test
mov
xor
xor
or
dec
xchg
aam
lret
ret
repz
jno
add
xor
mov
call
jl
mov
mov
dec
mov
test
in
rclb
adc
xlat
fs
push
popf
pop
imul
pushf
add
push
mov
loope
sbb
ja
cmpsb
das
imul
leave
mov
xor
test
fldt
pop
sahf
or
mov
out
fdivrs
out
in
add
dec
xor
fisubrs
pusha
rcll
popa
shrl
mov
stc
addl
xchg
imul
arpl
sbb
test
sbb
push
mov
pop
inc
adc
adc
fwait
push
mov
fisubl
sbb
push
pop
pop
or
xor
ljmp
xchg
jnp
xchg
jo
mov
cmp
pop
cmp
loop
xchg
pop
mov
jnp
mov
and
fucomp
xchg
mov
es
push
sbb
xor
lcall
mov
rol
push
rcrl
addr16
xchg
insb
dec
ds
and
xchg
dec
aas
pop
push
mov
and
pop
jns
addb
test
nop
mov
in
movsl
lock
lahf
sbb
imul
add
jmp
iret
insl
js
add
sub
sbb
lea
xchg
jp
mov
popa
xchg
adc
push
mov
push
je
cmp
sahf
stos
clc
sti
fwait
imul
scas
in
vpmacsww
xchg
cmpsb
sar
lods
jns
mov
dec
mov
loope
inc
icebp
push
test
jbe
sub
divl
std
and
xchg
xchg
xchg
js
sub
icebp
adc
nop
nop
cmp
sbb
lcall
mov
mov
cli
jecxz
inc
adc
mov
outsl
jecxz
out
es
into
scas
xor
lahf
cmpsl
popa
push
into
test
in
popa
cmc
lds
sub
andl
in
lods
aad
pop
fs
ret
movb
inc
cmp
mov
jmp
cmc
fmulp
loopne
pusha
cld
pop
test
jge
push
loope
pushf
push
mov
testl
xor
fstpl
ret
mov
xchg
std
fidivrs
sbb
js
out
repz
out
sub
aaa
imul
and
test
cmp
adc
xor
je
add
xchg
scas
push
push
xchg
and
cmp
push
fmull
push
ds
pop
outsl
scas
mov
xor
daa
test
sbb
push
js
adcb
imulb
push
jle
and
imul
andb
cli
jne
rorl
or
fistl
push
jb
jbe
insl
cmp
cmp
out
mov
pop
xor
aaa
testl
dec
leave
lret
pusha
aam
repz
xor
mov
das
adc
dec
mov
mov
ds
pop
add
fisttpl
cltd
popf
and
in
ljmp
sbb
xchg
iret
sub
call
test
xchg
hlt
jle
pop
pop
mov
cmpb
iret
add
sub
xchg
mov
jb
mov
jg,pt
or
mov
arpl
add
outsl
jbe
frstor
int
inc
pop
dec
andb
mov
adc
std
xor
inc
ja
das
push
mov
les
xor
push
sbb
push
test
nop
mov
flds
in
xor
and
ret
dec
aad
and
push
and
jge
andl
sarb
mov
sbb
movsb
dec
rolb
mov
xor
sub
pop
hlt
mov
das
jmp
jmp
shrb
loopne
inc
jb
icebp
sbb
mov
sub
test
dec
pop
loop
push
test
push
mov
test
mov
call
pop
insl
jnp
dec
cmpsb
outsl
pusha
pop
inc
mov
rorl
stos
adc
add
sbb
dec
addr16
mov
push
sbb
mov
mov
clc
jno
dec
xchg
mulb
outsl
lret
and
pop
lds
inc
ss
and
or
adc
jnp
inc
sbbb
scas
mov
or
fstpt
mov
mov
sub
adc
call
mov
sub
scas
into
xchg
push
mov
xlat
pop
pop
xchg
pop
subl
out
dec
push
mov
ljmp
out
rcl
mov
int3
ret
sub
arpl
popa
in
lahf
arpl
adc
pop
jg
idivb
dec
mov
add
das
lock
xor
popf
popf
inc
stos
nop
inc
jne
test
xadd
fisubl
ret
les
cs
pop
mov
mov
jno
faddl
mov
jns
xor
dec
ret
sbb
sub
jb
cli
out
xlat
xor
or
repz
push
es
dec
mov
addr16
insb
mov
subl
fisubl
bnd
mov
cld
cld
mov
roll
jo
aaa
test
lret
mov
out
mov
push
mov
ss
add
mov
mov
mov
jne,pn
cmp
test
ror
xor
cmp
sub
fisubrl
fildll
dec
cmpsb
add
mov
mov
popf
and
inc
mov
and
jge
adc
xor
jb
imul
and
pop
cmpl
mov
pop
scas
ds
arpl
fs
inc
dec
daa
fst
jns
xchg
mov
and
dec
and
icebp
cld
test
into
in
fs
xchg
sbb
adc
std
push
sub
scas
out
push
push
cmpsl
fsubp
xchg
sub
jo
arpl
pop
leave
inc
xchg
sbb
in
mov
sub
mov
xchg
nop
sub
mov
sbb
out
sahf
into
inc
add
adc
mov
movsb
dec
xchg
push
xchg
std
adc
xor
jl
rorb
gs
dec
movsb
xchg
arpl
subb
out
movsl
notl
pop
mov
fildll
mov
mov
ds
or
sub
adc
loop
xor
ja
stos
and
scas
fwait
mov
cld
xor
dec
inc
in
xchg
sbb
jne
mov
adc
lcall
inc
sti
pop
sub
and
ror
adc
fiaddl
inc
or
add
jo
mov
add
icebp
jg
sahf
pop
and
int
mov
pop
jae
loopne
out
mov
arpl
mov
clc
xchg
mov
xchg
movsb
push
adc
dec
push
sub
pop
stc
push
jmp
sub
gs
stos
cmp
pop
stos
sub
add
test
cmpsb
jp
push
add
pop
mov
xchg
mov
mov
xor
xor
jnp
aad
mov
push
incb
shrl
and
jmp
fs
pop
mov
jmp
xor
pop
lahf
or
push
mov
lcall
mov
dec
pop
ds
and
push
sahf
fimuls
push
scas
ljmp
pop
into
popf
jne
mov
sbb
ret
sub
mov
pusha
stc
adc
jmp
fdivrl
dec
inc
lea
pop
roll
cmp
push
ds
aad
adc
stos
adc
lods
dec
sbb
and
dec
xchg
lret
add
std
mov
mov
popa
adc
and
jae
cmp
jnp
loop
pushl
movl
mov
mov
insl
inc
clc
outsb
sub
scas
xorl
outsl
pushf
mov
jae
cmp
dec
mov
pop
shrl
cmpsb
aas
mov
dec
push
aaa
fbstp
fld
aaa
mov
dec
xchg
push
mov
sub
mov
scas
imul
mov
leave
cmp
inc
test
pop
sahf
mov
loopne
pop
jo
push
add
add
andl
mov
add
or
push
and
shlb
gs
jge
pop
sub
je
sbb
push
jne
pop
in
lds
andps
lds
jae
mov
mov
cmovl
inc
xor
push
push
popa
loope
movl
mov
out
sarb
jnp
push
out
std
xor
cmpsl
fdivr
and
add
xor
fbstp
or
mov
fiaddl
sarb
in
call
sub
sbb
insb
cmp
bound
out
mov
in
movsl
jmp
ja
in
mov
div
sbb
jle
push
or
xchg
xor
cmc
mov
cmp
lock
sbb
movsl
xchg
insl
jge
or
outsb
jg
daa
xchg
dec
lock
outsl
mov
fimuls
xchg
dec
rcrb
daa
mov
mov
lds
movsl
movsl
or
int
fnstsw
mov
aaa
cmp
call
ds
aas
push
outsl
int3
loop
mov
mov
xor
clc
cmp
jo
dec
xor
xchg
les
cmp
mov
hlt
fildl
cltd
in
jmp
jns
pusha
add
ret
test
clc
out
fcomp
push
mov
scas
scas
or
inc
stos
xor
popa
dec
ljmp
rorb
add
movsb
fildll
pop
mov
mov
iret
rclb
cmpsl
add
sub
mov
fs
ret
std
xchg
orl
repnz
jg
or
enter
add
aas
mov
out
pop
sbb
lock
bnd
inc
xchg
popa
pcmpgtw
iret
call
xchg
fidivl
add
enter
movsl
sub
mov
push
scas
pop
sbb
cwtl
pushl
mov
mov
daa
js
xchg
and
cmpsl
sbb
scas
scas
imul
and
fxtract
lret
and
adc
jp
or
das
xchg
mov
mov
xor
and
mov
mov
mov
scas
stos
enter
jp
int
mov
add
pop
mov
iret
sahf
cltd
ret
enter
arpl
popa
sarl
or
jmp
pushf
stc
pop
pop
xchg
test
and
mov
and
cmp
mov
ds
movsb
pusha
shr
in
lock
scas
xlat
xor
test
aam
movsl
pushf
xlat
jo
jp
xor
mov
mov
and
sub
inc
lret
ja
pop
mov
cli
dec
push
aam
and
lahf
daa
cs
mov
cmp
inc
xor
pop
jnp
scas
lret
lock
mov
xchg
xor
dec
pushf
push
ret
dec
scas
call
mov
lcall
loopne
jb
dec
cmp
jg
xchg
js
lret
jae
push
cmp
and
sbb
out
push
lods
pop
xchg
add
aaa
pop
lret
dec
leave
rclb
enter
xchg
fisttpll
sub
sbb
repz
ss
and
and
mov
jle
push
aad
xchg
pop
mov
scas
test
adc
daa
dec
loopne
repz
xor
xchg
cmpsl
xchg
adc
icebp
imul
mov
sub
outsb
pop
das
or
pop
inc
clc
push
jno
xchg
jb
fstl
push
rcrl
pop
leave
inc
and
mov
aas
sbb
jge
adc
adc
ret
push
mov
imul
decb
pop
sub
stc
cmp
lods
dec
icebp
push
push
out
flds
dec
pop
mov
push
mov
pop
xlat
aam
sub
movsb
push
lret
sbb
fs
cmp
mov
jle
or
fldt
dec
stos
push
mov
add
orl
ja
shrl
sbb
mov
pop
in
pop
leave
dec
sub
lods
dec
loopne
lods
xchg
adc
movsl
or
inc
mov
js
test
inc
lcall
in
clc
repz
sti
pop
aam
mov
aam
cmp
int3
jae
cmp
jbe
push
testb
or
pop
mov
dec
pop
cmp
push
jno
negb
loope
inc
sbb
arpl
xor
cmp
ss
aam
mov
xor
cmp
add
fisttpl
mov
xchg
sbb
adc
add
ljmp
push
lcall
fmul
shr
pop
inc
jno
push
cli
daa
xlat
js
jae
ds
jno
fmul
out
into
adc
ss
nop
lcall
sub
sarb
add
aaa
and
outsb
in
test
test
adc
dec
shrl
in
inc
test
add
das
insl
fists
add
mov
repnz
xor
je
loopne
sbb
popa
std
mov
mov
xchg
and
pop
nop
movsl
movsl
pop
add
xor
push
mov
inc
fldl
jle
push
mov
inc
push
lret
sbb
inc
ss
or
mov
jb
shrl
popf
test
sbb
test
rcl
or
outsl
rcll
das
mov
jns
mov
insb
orl
lret
adc
movsl
imull
dec
arpl
jle
push
and
cmp
ja
das
mov
and
and
aad
imull
push
mov
inc
push
inc
negb
mov
andl
stc
lcall
add
sub
pop
cmp
pop
jbe
fistpl
sub
popf
or
lds
dec
fs
lahf
mov
scas
jp
cltd
les
sti
cmp
cmp
cmp
popa
adc
mov
inc
push
addr16
clc
mov
and
push
sbb
rcr
pop
mov
fcmovnu
lods
sahf
aam
ljmp
xlat
adc
cmpsl
scas
inc
adc
sub
clc
sub
ss
sub
add
push
sbb
sub
push
xor
cli
lods
jp
mov
mov
jb
dec
add
push
sbb
add
mov
cmpsl
loopne
or
xchg
mov
hlt
jmp
pop
dec
ret
bound
aas
mov
sub
out
xchg
in
add
dec
and
mov
ss
sbb
mov
push
or
mov
sub
std
clc
aas
sarb
fidivs
dec
cmp
add
pop
mov
aas
lds
sub
lods
xchg
sub
sbb
jle
in
js
loop
lret
xchg
clc
push
in
sahf
imul
mov
in
fidivs
or
test
adc
addr16
stc
cmp
stos
cmp
adc
cmp
mov
push
xchg
dec
aaa
sbb
pusha
adc
inc
cmp
insb
loope
rcrb
out
pop
cmpsb
dec
test
popf
jge
jg
mov
push
push
or
cmpsb
jg
aaa
loope
test
adc
sbb
mov
out
xor
stos
mull
cmp
popf
mov
shl
push
jo
into
repnz
jecxz
mov
jmp
pop
inc
rcll
push
xor
rcrl
pop
jmp
pop
mov
insb
ret
call
in
jnp
ja
ja
cmp
out
dec
in
cmp
insl
dec
scas
repnz
cltd
negl
icebp
ljmp
push
int
aaa
lock
mov
add
dec
sbbb
lcall
push
and
push
mov
inc
jbe
mov
push
and
jb
andb
sahf
jecxz
lods
mov
sub
inc
inc
sub
fs
push
ja
dec
icebp
or
leave
lahf
adc
mov
cli
les
addr16
push
adc
mov
dec
mov
mov
aad
ud0
sti
fisubl
xchg
mov
pop
jecxz
repnz
scas
mov
subb
adc
add
and
jl
sbbl
lods
ss
lcall
sbb
or
cmp
add
cmpsl
and
xchg
sahf
mov
inc
mov
movl
jno
mov
dec
out
mov
ret
iret
imul
sti
mov
rcll
rcrl
in
pop
out
cmp
inc
stc
pop
xchg
pop
popa
jne
inc
call
rol
adc
test
cld
push
lea
cs
rolb
rcr
jge
push
lds
arpl
mov
xchg
inc
mov
xchg
and
pop
lahf
fwait
push
ret
and
shlb
popf
add
lock
push
pop
leave
hlt
jmp
jl
inc
test
fstpt
pop
adc
cmp
cmp
popf
data16
mov
adc
fdivs
inc
xchg
scas
out
pop
pop
cmp
sbb
icebp
fs
ja
stos
cmc
in
std
and
adc
jns
cmp
dec
dec
dec
mov
repz
inc
jge
inc
lcall
inc
push
dec
push
jno
mov
data16
pop
sbb
sarl
clc
add
or
aad
outsb
stos
imul
jge
mov
xchg
stos
mov
leave
add
push
mov
pop
inc
cmp
fidivl
cli
inc
add
adc
or
push
cmp
xchg
or
cmpb
ss
fcom
pop
cmp
lock
xor
loop
cs
cld
push
out
pop
and
mov
movsl
cmpsl
or
sub
xlat
cmovae
iret
push
mov
ja
rorl
fwait
dec
fwait
insb
pop
dec
mov
js
cmp
mov
xchg
push
repz
mov
inc
insl
and
xchg
jg
loope
mov
xchg
xor
cmpsb
jno
rorb
out
int
or
cmc
cvtps2pd
mov
pop
mov
cmp
shrl
mov
push
and
mov
inc
sahf
ss
sbb
setg
insb
pop
sub
push
pop
pushf
xchg
nop
cltd
sbb
sub
sub
dec
or
sti
or
mov
add
shll
or
push
shlb
je
xlat
daa
cmp
hlt
fstpt
idivl
xor
popa
push
cmp
pop
jmp
fcoms
repnz
mov
inc
mov
mov
aaa
mov
fcoml
jmp
dec
pop
pop
insl
aam
mov
ret
and
xchg
ffree
rcrb
faddl
sahf
pop
jp
ljmp
sbb
mov
push
jns
add
out
stos
pop
dec
push
xchg
movsl
and
mov
notl
ljmp
loop
mov
fisttpll
push
xor
pop
insl
fwait
popa
popa
shr
stc
mov
jp
ss
sbb
popa
xorb
sbb
fidivrl
faddl
xchg
push
or
iret
pusha
insl
nop
mov
stc
jbe
scas
std
jbe
dec
orb
sbb
in
mov
pop
mov
popa
repnz
xor
lret
inc
loopne
inc
std
je
jne
mov
cmpsl
call
std
xchg
test
add
mov
dec
and
pop
add
mov
sbb
test
xor
push
jp
inc
cmpsl
ja
dec
fidivs
stc
mov
mov
sub
enter
repnz
std
je
cmc
and
jmp
jp
jne
lret
roll
pop
out
orb
add
jmp
roll
cmp
rcll
divl
and
jne
test
lods
sbb
fisttpll
call
adc
xor
sub
push
out
adc
aaa
iret
cmp
cmpsb
aad
or
add
mov
arpl
xor
rcrl
aas
imul
out
sti
jnp
mov
daa
mov
sarb
xor
hlt
add
imul
mov
call
push
sub
or
stos
scas
mov
xchg
ret
pushf
inc
lret
inc
imul
loope
pop
in
jecxz
push
cmpsl
fidivl
dec
jae
fsubrs
pop
mov
and
mov
mov
addr16
movl
out
bound
cmp
scas
sbb
mov
jecxz
mov
and
cltd
lret
xchg
lods
notl
cmc
into
add
pop
data16
sbb
pop
lahf
inc
sub
add
pop
cltd
int
adc
icebp
push
sbb
dec
and
je
cmp
rol
dec
and
mov
stos
les
ret
add
popa
inc
pop
or
lcall
test
dec
dec
cmp
add
push
mov
sti
in
arpl
xlat
insb
sub
and
mov
mov
push
adc
and
and
sub
pusha
mov
cmp
lcall
lods
mov
pop
push
inc
movsb
adc
sbb
testl
lods
adc
jo
mov
and
inc
loopne
in
inc
out
addr16
mov
mov
jo
in
fld
jmp
inc
cmp
test
cmp
mov
arpl
push
sbbb
mov
push
xchg
sbb
xor
sub
sti
not
jns
imul
dec
or
pop
rclb
pop
outsl
lods
bound
mov
jg
push
repnz
jbe
adc
fwait
jg
adc
sarb
loopne
je
into
add
jns
jp
addr16
push
sahf
jbe
fs
cmp
daa
in
mov
outsb
mov
jle
dec
int3
fnstcw
xchg
dec
and
sbb
mov
mov
popa
mov
iret
pop
push
inc
and
push
inc
mov
xchg
xor
gs
out
loopne
push
push
int
jge
pop
dec
repz
add
inc
ss
mov
jg
push
mov
bnd
sbb
mov
jbe
cmpsb
loopne
clc
push
cmp
icebp
lcall
sti
dec
fisttpl
cmpsb
jb
pop
arpl
xor
ss
add
and
aad
adc
and
jle
js
movsb
jb
inc
aam
test
xor
imul
popf
xor
das
pop
push
rolb
shl
repnz
lret
lret
std
test
inc
dec
mov
inc
mov
bound
mov
xorl
inc
pop
fstps
mov
inc
mov
xor
andb
and
cli
in
lret
add
xchg
and
cmpsb
out
jp
xor
clc
xor
je
or
stos
fsubrl
out
push
fcoms
bndldx
add
std
cli
leave
out
push
rcll
dec
call
push
xchg
jmp
push
xor
add
adc
notb
or
sbb
mov
cs
or
mov
dec
adc
in
les
insl
and
push
xchg
mov
pushf
mov
jmp
push
ret
xchg
mov
push
pushf
ret
cmc
cltd
mov
mov
arpl
rcrb
lcall
dec
inc
sar
pop
call
sahf
jmp
inc
pop
xor
push
push
fmull
sti
adc
jo
fdivr
fwait
inc
jl
xchg
xor
jmp
jns
dec
mov
int
cmp
or
fcmovnbe
sahf
sbb
jmp
and
or
notb
push
shll
pop
push
aam
cld
push
inc
in
inc
rcr
movd
pop
addr16
push
sbb
pop
stos
out
add
mov
cmpsb
test
pop
lret
cli
and
stc
int
in
loop
sub
and
outsl
dec
fwait
ljmp
mov
ja
test
shrb
xchg
push
mov
in
dec
mov
fnsave
sbb
and
push
shl
jns
xor
aad
jns
aaa
push
or
orb
mov
dec
in
push
sbb
dec
pop
push
pop
rol
movb
adcb
xchg
das
inc
movsl
cmp
mov
fdivs
call
notb
rcrl
lock
or
pushf
and
pop
insb
sti
xor
pushw
or
int
adc
lea
test
xchg
mov
xlat
mov
loope
int
out
lods
in
add
in
cmp
or
mov
xchg
loopne
jl
mov
xlat
loop
ret
imulb
shrl
push
or
and
mov
and
add
jnp
jge
and
jle
cmpsl
mov
bound
xchg
mov
fistl
sbb
out
aam
in
xorl
test
lret
mov
pop
movq
mov
cmp
add
shl
ret
jle
test
repnz
ss
push
mov
dec
inc
imul
push
push
xor
jp
mov
cld
inc
cmpsb
xchg
jmp
jno
cmp
jl
daa
or
jge
pop
lret
or
sar
icebp
popa
shlb
and
add
gs
jle
fstp
add
push
mov
sti
pop
test
data16
pop
mov
enter
lahf
dec
cli
mov
arpl
ja
in
subl
adc
insb
dec
push
enter
xor
popa
sub
dec
data16
push
outsl
int3
cmc
push
int
add
xchg
mov
lods
aam
fistps
lods
in
ret
pop
mov
xchg
aas
jnp
xor
lods
push
xchg
fmulp
push
sarb
jg
cli
adc
loope
rol
pop
xor
shr
ja
mov
xchg
xchg
test
shrl
ret
and
nop
stos
call
mov
call
fadd
jnp
pusha
or
enter
jmp
popf
test
lret
adc
and
dec
jg
mov
mov
sub
push
idiv
inc
xchg
sbbl
es
cmpsl
pop
inc
icebp
pop
adc
jbe
push
aaa
lret
add
xchg
cmpsb
cmp
xchg
sbb
adcl
lock
pop
pmullw
ffree
orb
gs
and
ffreep
mov
adc
sbb
mov
int
popf
cli
push
loopne
push
stos
mov
cli
push
jae
push
mov
call
push
xchg
cmp
cltd
inc
fwait
add
pop
push
jnp
cs
mov
sahf
repz
or
xor
int
mov
xor
or
xor
sbb
jbe
and
pop
and
mov
loop
dec
bound
jbe
mov
imulb
dec
xchg
aas
js
mov
lods
mov
inc
sub
test
aad
cmc
scas
inc
dec
repnz
mov
push
xorl
or
inc
mov
lret
jmp
loopne
xchg
mov
fstpl
cmp
inc
seta
adc
popa
and
test
negl
cmp
in
sbb
and
loopne
jl
cmp
inc
jb
in
jecxz,pn
xchg
inc
adc
fs
push
push
add
push
aas
leave
or
movsl
jnp
mov
mov
pop
sub
cmp
pop
out
js
std
mov
movsl
push
xor
jg
add
test
fidivrl
mov
mov
jns
cmpsl
push
sarb
mov
test
jnp
sub
sub
and
call
rcr
sti
mov
push
fmull
push
lods
mov
xchg
ja
adc
fnstenv
mov
ss
aas
mov
and
pop
test
les
ret
xchg
shrl
mov
mov
pop
adc
mov
xor
sbbb
xchg
lret
mov
pop
mov
in
dec
push
adc
addr16
and
and
sub
hlt
fadd
xchg
sarb
aaa
cmp
xchg
or
bts
adc
xchg
xchg
cmp
repz
sub
scas
xorl
mov
cwtl
cmp
data16
loop
inc
push
imul
outsl
cmpsl
mov
outsl
mov
addr16
add
lea
cmp
subb
lahf
jbe
jnp
push
scas
mov
xlat
cwtl
xor
push
push
jbe
adc
sbb
pop
outsb
add
in
sarl
fwait
cli
dec
mul
cmp
clc
mov
rclb
xchg
mov
jno
fs
mov
mov
or
jle
scas
inc
scas
scas
add
jns
imul
insb
loopne
xchg
out
mov
dec
push
imul
aad
rcr
inc
into
push
sub
stos
aaa
mov
test
fcoml
mov
mov
jno
inc
aas
mov
popa
lret
xchg
xchg
adc
jmp
cmp
out
lret
arpl
iret
pop
mov
xchg
inc
xlat
jo
dec
rcr
jo
in
pop
xchg
pushf
imul
or
lods
popf
inc
add
stos
mov
stc
daa
xchg
int
mov
imul
fbld
outsb
xor
sbb
adc
shrl
mov
and
cli
scas
pop
ja
add
sbb
pop
xchg
mov
out
xchg
xor
sbb
shr
and
jl
push
dec
sbb
call
dec
aam
mov
mov
and
aas
dec
fisttpll
das
jb
inc
stos
andl
jg
clc
rcrb
adc
cmp
add
jne
pop
aad
rol
insl
notl
push
xor
aad
mov
mov
je,pt
scas
pop
xchg
sub
xchg
push
sub
mov
sub
ja
add
iret
xor
dec
mov
mov
cmpsl
adc
fs
pop
sahf
jne
xor
ret
inc
mov
cmpsb
dec
pop
mov
sahf
enter
dec
or
jecxz
mov
fisubrl
aas
xchg
icebp
stc
adc
mov
jmp
movsb
mov
xchg
fstl
pop
dec
rclb
push
iret
mov
jmp
stos
out
es
fistl
ret
mov
ja
xorb
icebp
je
lock
jg
pop
iret
and
push
fsubp
inc
inc
push
sahf
sbb
adc
lret
in
test
cli
outsl
lcall
dec
test
jle
mov
cmp
or
mov
andb
popf
mov
xor
lea
sbb
cmp
iret
shl
dec
loopne
sub
shlb
imul
orb
int
push
fdivrl
data16
scas
test
xchg
loope
xchg
pop
arpl
jg
mov
push
hlt
sbb
insl
jb
xor
or
and
icebp
loope
out
jns
xor
pop
aam
sub
push
out
clc
sub
enter
cli
pushf
pop
mov
rclb
pop
insb
data16
fildll
jmp
jbe
iret
inc
add
sub
push
push
xor
test
pop
cmp
cmp
ret
jbe
and
das
push
sub
xor
popf
push
xchg
push
daa
scas
dec
fmul
mov
adc
imul
mov
fcoms
adc
add
xor
loopne
bound
out
inc
arpl
popf
lcall
out
ljmp
lock
jp
mov
jo
cwtl
push
and
lods
jae
pusha
inc
ret
push
shrl
incl
push
or
jno
jnp
push
daa
and
xor
insl
test
mov
data16
repz
inc
lea
ret
pop
lahf
or
imul
stc
xor
fs
repz
imul
flds
cmpsl
ret
scas
inc
arpl
imul
dec
das
lods
mov
mov
in
insl
mov
jne
in
sbb
push
mov
xchg
mov
ljmp
aam
imul
cwtl
pop
adc
wrmsr
rclb
and
jge
lahf
loopne
lret
sbb
fistl
or
mov
jo
in
sbb
fdivr
or
xchg
xchg
or
movsb
add
outsb
fstps
jl
rorl
movsl
ljmp
mov
sti
lcall
pop
out
push
pop
add
ror
jl,pn
out
lahf
shll
inc
cmp
push
or
xchg
lea
jp
jo
movb
fucomip
in
cli
push
adc
mov
hlt
mov
out
shr
jno
jnp
push
or
jb
push
pop
call
fyl2x
push
dec
in
lds
adc
movsl
int3
jb
pushf
jb
lods
stc
jecxz
shll
cmp
fmul
decl
xchg
repnz
cld
mov
mov
sahf
fwait
sbb
dec
mov
xchg
ss
lahf
xor
cmp
mov
xor
in
repnz
sbb
or
scas
xor
fbstp
int
lock
lea
xlat
call
int3
xor
enter
into
daa
xchg
cmpl
mov
mov
int
and
cmpsb
leave
adc
out
push
xor
repnz
inc
sub
lock
sub
or
shlb
jbe
mov
mov
fidivl
lcall
pcmpgtd
das
pop
adc
push
push
mov
xlat
scas
lret
lods
xor
std
roll
xor
add
aas
les
fldt
ficompl
xchg
xor
pslld
gs
movsl
ficompl
dec
sub
bound
jo
jg
out
mov
lock
push
lods
jp
fsubrp
mov
ret
mov
mov
cltd
push
xlat
mov
out
pop
pushf
dec
in
push
cld
imul
inc
dec
mov
je
mov
pusha
sbb
fprem1
cmp
or
or
add
inc
out
mov
scas
int3
jo
ss
sbb
or
pop
sbbb
shl
mov
sbb
subb
out
mov
rclb
ret
pop
cmc
imul
incb
and
dec
pop
jno
sar
mov
mov
push
mov
sub
lds
clc
out
in
aad
mov
xorl
pusha
or
adcl
dec
mov
popa
dec
sbbb
push
negb
icebp
loope
out
push
out
hlt
mov
aam
test
out
xchg
rorb
mov
faddl
ficompl
mov
and
test
xchg
xor
in
loope
js
add
jnp
mov
insb
xor
mov
mov
mov
sbb
mov
addr16
mov
rorl
or
pop
dec
stc
into
xor
pop
mov
fistps
push
cmp
aas
stc
ret
inc
dec
push
loope
mov
lret
adc
push
add
sub
xchg
mov
inc
out
mov
jne
pop
cli
and
xor
adc
clts
mov
adcb
cli
jl
mov
push
andb
repz
push
icebp
mov
mov
subl
adc
divb
pop
xor
pop
sub
js
ss
and
jp
fstpl
pop
cmp
sbb
inc
lret
mov
pushf
mov
fnstcw
subb
cmpsl
adc
cwtl
cmpsl
dec
imul
mov
cld
xchg
mov
lock
test
ret
mov
jno
repz
jnp
sub
or
sbb
xchg
data16
addr16
jne
imul
push
inc
jbe
insl
pushf
aas
pop
enter
idivb
push
xor
jno
mov
xchg
into
mov
pop
inc
mov
sbb
sub
pop
cmp
mov
xchg
push
aad
mov
lds
or
jns
int
rolb
mov
inc
push
ds
pop
fs
push
addr16
mov
fists
lret
ss
testb
pop
rcrb
aaa
scas
addl
imul
xor
add
jo
xor
jp
jae
test
adc
inc
fiaddl
arpl
out
and
mov
jle
aaa
push
sbb
dec
repz
push
cmpsb
push
xchg
js
divb
adc
or
inc
mov
xchg
pop
or
lret
sbb
bound
sbb
jge
fadd
das
ret
cmp
lahf
outsb
imul
mov
aaa
dec
cli
popf
push
jne
dec
arpl
addb
mov
adc
xchg
mov
stos
sti
adc
shl
aad
mov
cmp
cmc
out
adc
cltd
loopne
push
push
ja
sbb
xorl
stos
int3
adc
in
sarl
jl
ja
decl
jo
push
dec
or
pop
scas
test
jne
sti
sub
inc
mull
or
cmpb
cmp
mov
cmovb
loop
arpl
mov
scas
repnz
or
cld
dec
aas
and
sub
push
xor
xchg
icebp
add
dec
push
data16
add
mov
pop
jne
sbb
push
jg
push
xchg
repnz
xchg
scas
test
dec
mov
xchg
add
inc
cli
pop
loope
outsb
push
push
add
int3
mov
and
loop
xor
jl
test
popa
mov
or
sub
cli
adc
cmp
testb
cmp
inc
faddl
fimull
jg
cwtl
ja
aam
push
dec
lret
and
in
sub
fldcw
lock
add
xchg
fistpl
mov
leave
inc
das
int
inc
mov
cli
rcl
shlb
mov
inc
push
jo
or
sahf
loopne
aas
hlt
cmp
xor
mov
lcall
cmpsl
lds
add
pusha
es
ret
loope
push
mov
push
test
pop
outsl
cltd
jl
sbb
daa
ljmp
push
jle
add
int
fiaddl
pop
fcmovb
fidivrs
jbe
dec
mov
and
lahf
lds
sbb
or
mov
cmpsl
jne
adc
push
aaa
fwait
push
push
jns
cmp
jecxz
insb
lahf
jne
dec
pop
sbb
push
jnp
imul
lds
je
sbb
jno
fcompl
pusha
aam
or
jg
mov
add
cmp
std
es
aam
loopne
jb
mov
test
dec
push
lea
and
daa
jo
inc
fsubr
gs
lret
repnz
dec
xchg
cs
adc
xchg
jl
test
xor
aam
nop
fwait
xor
lods
dec
loopne
jo
imul
inc
aaa
sub
decb
cmp
daa
pop
aaa
push
and
pusha
movsb
adc
out
pop
fidivs
push
cltd
jmp
adc
mov
dec
cs
js
insl
call
adc
and
ds
and
sub
adc
adc
insl
in
push
and
dec
shll
movd
push
jecxz
add
arpl
or
fwait
push
jp
push
enter
xor
shll
jnp
sti
add
mov
adc
aas
pusha
push
pop
jmp
inc
leave
mov
ds
sbb
sbb
cmpsb
stos
xchg
leave
test
cmp
lds
in
in
addr16
and
push
lock
sbbl
ss
stc
adc
pop
fwait
mov
mov
hlt
mov
mov
imul
jbe
imul
push
jle
xchg
push
jle
mov
mov
inc
mov
iret
int
mov
jnp
adc
pop
dec
mov
divl
and
inc
mov
test
outsb
sbb
push
fistpll
pop
xchg
lods
pop
hlt
int
jne
mov
aam
rcll
lret
aas
mov
jmp
lods
inc
cmpsb
cltd
adc
xchg
adc
shrl
frstor
fldt
js
rcrl
outsb
cwtl
pop
fidivl
dec
xchg
fwait
mov
repz
aas
decb
push
mov
repnz
pushf
sbb
jmp
add
jae
repz
loopne
test
in
clc
pop
fsubs
sub
push
int3
inc
orl
mov
faddl
pop
inc
hlt
cwtl
stos
inc
cwtl
mov
jle
pop
insb
aas
fsubp
mov
jb
mov
mov
mov
subb
ret
adc
loop
mov
cmp
mov
addr16
xchg
push
jno
mov
fs
dec
filds
adcb
das
mov
cmp
and
cmp
and
adc
dec
int
lods
lods
test
pushf
sub
xor
testl
pushf
aaa
sbb
int3
push
pushf
in
icebp
dec
in
icebp
xchg
lcall
mov
int
enter
pusha
xchg
mov
mov
sub
movl
subb
pop
imulb
out
push
pop
adc
das
js
fsubrs
dec
push
addr16
pop
fmul
push
cmp
inc
sti
inc
lds
addr16
stc
out
dec
sub
cs
daa
xor
and
cltd
xchg
imul
lcall
or
ljmp
inc
xlat
mov
fsubrp
xor
mov
sbb
jbe
inc
out
sub
push
add
push
ljmp
push
lret
daa
inc
icebp
sbb
pusha
cmovs
stc
iret
inc
lods
sbb
mov
inc
sbb
jge
lret
cmp
popa
sub
cmp
stc
xchg
pop
mov
xor
push
ret
out
lahf
xchg
push
and
mov
stos
popf
inc
push
pop
cmp
movsb
out
push
call
lret
fbld
dec
cmp
sub
cld
mov
adc
mov
out
xchg
pusha
or
pop
popa
das
cmp
shll
mov
test
push
dec
mov
pextrw
jp
inc
xchg
jecxz
mov
rcll
sbb
lret
jmp
out
in
dec
lods
hlt
scas
stc
lret
shl
hlt
out
int3
or
xchg
pop
arpl
jns
fwait
xor
push
push
mulb
mov
bound
adc
sub
lock
inc
popf
sbb
out
jg
push
aas
les
movsl
scas
inc
rorb
fwait
lret
fwait
test
mov
pop
mov
scas
xor
icebp
jne
in
arpl
add
in
fistps
fcoms
das
sbb
imul
xchg
imul
stos
popa
sti
mov
push
filds
pop
repnz
mov
lock
xor
das
fnstcw
jbe
lret
fst
loopne
cmc
pop
jge
addr16
inc
lcall
mov
shl
nop
inc
sbb
insb
mov
out
xchg
sub
fwait
or
mov
mov
fisttpll
sbb
xor
lahf
fsubrs
mov
and
jne
call
xor
xor
arpl
push
pop
or
orb
cmp
shr
sbb
or
cmpsl
fnstsw
dec
or
in
pop
das
inc
adc
add
pop
out
icebp
jg
mov
mov
xchg
push
mov
jge
sbb
inc
idivb
aas
test
mov
test
cmp
inc
push
adc
jb
into
jmp
add
sbb
fcmovnb
pop
fiadds
or
mov
adc
sub
shll
inc
push
ljmp
pop
sbb
adc
push
mov
sbb
sub
mov
insb
and
lret
jl
or
jbe
aas
jno
adc
test
sub
xor
mov
push
mov
sbb
or
filds
cmpsb
jns
mov
mov
xor
dec
xchg
cmc
xchg
sbb
dec
pop
cs
lock
xchg
or
mov
outsb
leave
rcll
jns
cs
scas
scas
insl
dec
lods
cmp
jne
mov
or
out
pop
mov
pop
pop
fwait
mov
push
sahf
aad
iret
jmp
testl
out
rorb
adc
negl
cmp
cli
out
out
subb
scas
jae
inc
cmpsl
mov
inc
sbb
push
cmpl
inc
pusha
dec
sub
or
pop
mov
bound
mov
ret
js
clc
push
and
das
jmp
icebp
pop
mov
and
jecxz
push
mov
insl
test
inc
ds
xor
in
imul
movsb
push
xor
mov
cmp
push
mov
mov
pop
push
roll
lahf
mov
loopne
sti
je
outsb
xchg
xor
inc
jns
pop
pop
adc
lock
dec
lahf
lret
fisubrl
in
mov
out
lcall
out
mov
sbb
stos
or
imul
push
sbb
jo
sub
push
fldl
sub
dec
iret
je
pop
cmc
and
rcl
push
xor
cmpsb
rclb
das
pop
adc
xchg
sub
xor
adc
xor
xor
dec
dec
push
dec
mov
loopne
ss
inc
dec
mov
xchg
jo
mov
jae
adc
sub
sub
jno
inc
sub
add
add
mov
push
xchg
mov
pop
dec
inc
add
xor
ret
xchg
push
nop
inc
sub
out
inc
lret
sub
mov
inc
into
lret
cmp
gs
pushl
aaa
mov
adc
mov
mov
push
mov
ss
icebp
sbb
loopne
fstpt
and
ja
dec
sub
icebp
test
mov
movsb
xor
add
xor
out
mov
push
stos
fcmove
mov
loopne
mov
imul
popa
jge
xchg
data16
int3
pop
and
scas
pop
in
clc
leave
xchg
outsb
test
mov
push
gs
loope
mov
je
dec
lods
add
mov
sbb
push
and
jns
pop
inc
xchg
pusha
insl
inc
mov
add
dec
sbb
mov
outsb
movsl
pusha
popf
xchg
pushf
pop
imul
and
xchg
aad
sub
int3
mov
jo
ljmp
mov
xor
xor
xchg
sbb
mov
sarb
rclb
xchg
decb
ljmp
pop
inc
imul
data16
jg
and
mov
popf
mov
jne
pop
stos
cli
shll
ficompl
ficompl
push
call
sbb
mov
jbe
or
xlat
push
mov
cmp
sbb
jl
lds
negl
jns
jno
fmuls
jb
sbb
add
xor
arpl
inc
adc
je
dec
xor
or
mov
imul
pop
xor
das
and
mov
out
sbb
jl
into
out
es
pop
ja
sub
repnz
jo
bnd
loope
push
sar
dec
sbb
jmp
je
in
add
mov
sbb
or
dec
lods
lods
std
mov
and
stos
cwtl
sahf
aas
or
shlb
mov
lods
jecxz
pop
int3
dec
add
add
filds
stos
hlt
or
pop
test
adcl
push
imul
in
sbb
je
gs
sbb
adc
pop
push
jle
dec
xlat
add
cltd
cmp
pop
add
fisttpll
xchg
mov
insl
mov
rolb
sbb
xorb
movsl
std
je
xor
or
movsb
in
mov
fs
jo
bound
mov
mov
scas
sub
jmp
cmp
or
loopne
icebp
mov
pushf
jbe
into
mov
push
cmp
cmc
call
ljmp
mov
inc
push
je
into
inc
mov
mov
cmp
enter
and
cmp
in
scas
shr
ds
sbb
lods
cmp
push
bound
call
sahf
nop
mov
or
mov
jb
sahf
adc
aas
adc
sbb
ret
scas
cmp
sub
icebp
loope
imulb
movl
jge
cmp
pop
ss
into
gs
ret
adcb
enter
pushf
fiaddl
jo
js
out
inc
mov
scas
fisubrl
jbe
or
idivl
cmp
sbb
andb
es
pushf
push
rol
inc
adc
jne
dec
loope
dec
xchg
cmp
std
cmp
popa
idiv
mov
js
int
adc
fldenv
test
icebp
lret
arpl
rolb
mov
pop
push
in
adcb
jns
xchg
cmc
or
popa
fiaddl
cmp
in
xor
sarl
push
xor
pop
orl
jp
test
scas
lcall
pusha
inc
mov
lret
dec
cs
icebp
mov
push
push
push
icebp
mov
lret
sub
shlb
inc
ficoms
lock
in
dec
mov
pop
dec
or
pop
aam
test
popa
mov
cmp
js
lods
loopne
subb
pop
pusha
insl
mov
adc
rclb
cmc
sub
stos
fnsave
lods
mov
mov
sbb
add
jl
icebp
jbe
lods
xorb
jno
mov
negb
mov
or
dec
mov
lock
xchg
or
inc
mov
jno
mov
orb
push
inc
cli
out
push
dec
push
mov
insl
push
dec
pop
cmp
test
sub
add
mov
scas
xchg
aaa
outsl
sahf
xlat
mov
dec
iret
roll
pop
or
cmp
ljmp
jnp
mov
inc
mov
aam
faddp
mov
push
aad
jle
sbb
lods
insl
dec
sub
dec
mov
pushf
rclb
add
repnz
imul
xor
int3
sbbl
sbb
fdivrp
xor
cmp
cmpsl
mov
enter
jg
xor
xchg
in
sub
add
sbb
inc
or
jno
cmp
iret
sbb
test
xor
in
aam
mov
sub
xor
hlt
cmc
in
ret
popw
jne
repnz
test
xlat
call
cmp
mov
mov
ficoml
pushl
aaa
pop
cmpsl
xchg
pop
in
inc
jmp
xchg
mov
or
push
enter
fistpll
sbb
mov
mov
adc
test
xchg
xor
mov
dec
lods
xchg
push
sbbl
imul
rcr
xchg
xor
outsl
mov
ja
ljmp
and
mov
add
cmp
mov
adc
jno
int3
push
adc
jb
inc
push
jns
pop
imul
nop
sub
add
and
or
inc
pop
test
daa
or
mov
xlat
cmp
movsb
int
xor
pusha
inc
jp
fnstcw
jo
and
in
dec
xchg
stos
jle
shl
mov
dec
test
insl
scas
pop
jbe
push
loopne
loopne
scas
shrb
mov
rcrl
jp
and
rcrb
adc
out
fwait
pop
outsb
das
in
mov
mov
cmp
adc
or
and
inc
sbb
cmp
mov
xor
sbb
inc
and
jo
subl
jae
scas
xor
out
imul
mov
in
cmpl
mov
mov
stc
push
mov
adc
xor
mov
push
sti
mov
sbb
test
fsubp
push
xor
xor
pop
shrl
jne
imul
xchg
cmpb
sub
lahf
xchg
repnz
adc
jns
mov
mov
dec
test
and
xor
ljmp
sub
mov
push
sbb
push
mov
icebp
popa
pop
repnz
lahf
pop
loope
test
jecxz
mov
pop
popl
scas
mov
std
add
adc
xor
mov
or
ret
pop
dec
js
shrl
in
insl
jae
cs
notb
loopne
xchg
insb
imul
mov
mov
lock
loopne,pt
decb
sbb
inc
inc
adc
sbb
std
mov
xchg
adc
push
xchg
out
xor
loope
mov
push
inc
sub
in
ss
lds
push
cmp
and
add
cmp
mov
jecxz
fistpll
out
sbb
stos
xchg
rorl
out
out
pop
cli
mov
pop
pop
loopne
jno
pop
shr
out
popa
lret
bnd
jle
mov
pop
jns
mov
mov
clc
hlt
cmc
movsl
hlt
jns
jns
aad
adcb
lret
insl
mov
mov
loope
mov
push
scas
std
cs
mov
andl
pushf
fst
push
push
xchg
mov
ljmp
xchg
addr16
repnz
xchg
js
xchg
adc
jno
pushf
fcoml
and
flds
das
mov
and
test
and
mov
dec
test
push
sub
mov
dec
jnp
test
xchg
lret
mov
rclb
mov
xchg
and
addl
imul
push
loopne
xor
fdivp
aas
stos
fdiv
pop
dec
cmp
add
or
inc
push
cs
cs
jb
lock
sbb
push
xlat
add
int
loope
imul
ret
xchg
dec
mov
or
lahf
js
sub
ds
dec
ret
sub
mov
mov
inc
pop
and
add
imul
mov
rcr
jbe
cmpl
mov
jge
sti
sbb
out
cmp
or
lds
or
mov
pop
mov
jge
mov
sahf
dec
pop
fdivrp
xor
cld
jo
and
orb
out
int3
or
inc
cmovo
aad
fildl
sub
pop
insb
jmp
mov
idiv
xor
xchg
mov
mov
mov
add
mov
jo
dec
cmp
fists
pop
imul
mov
fldt
call
inc
mov
xchg
cmp
addr16
stos
jecxz
and
push
mov
dec
mov
dec
dec
movsb
lods
jge
pop
xlat
ljmp
xor
dec
lock
aam
scas
popa
and
mov
mov
sbb
ret
sbb
mov
nop
push
int
test
repz
cmc
mov
sub
fs
mov
out
out
fisttpl
cmc
fdivp
mov
rcrb
movsl
subl
outsl
mov
loop
fnsave
mov
aad
mov
pop
inc
push
outsb
out
mov
dec
out
mov
pop
push
cmpsb
addr16
and
push
data16
sbb
mov
push
xchg
mov
xor
repnz
jo
pop
lea
stc
push
mov
push
xchg
out
or
jmp
outsl
outsb
call
adc
data16
ret
push
cs
sub
mov
dec
adc
and
icebp
mov
sahf
xlat
mov
inc
push
imul
imul
sub
ljmp
xor
or
push
jmp
test
lret
jne
rcrl
pusha
shlb
out
dec
mov
repnz
xchg
js
jae
lcall
cmpsb
jne
mov
shll
cmp
popa
mov
cmp
ja
insb
cmovnp
sub
xchg
lods
jne
sub
iret
pop
mov
xchg
push
mov
sub
call
dec
mov
xor
push
clc
je
pop
jo
gs
mov
cltd
mov
mov
sbb
hlt
xor
sbb
mov
adc
fs
sbb
mov
cmp
mov
jecxz
popa
test
fimull
mov
sbbb
jp
cmp
mov
cmc
fucomi
stc
stos
in
lret
in
gs
ja
andl
fldenv
iret
je
mov
push
aad
inc
popa
icebp
dec
or
push
and
aaa
or
jecxz
cmpsb
xchg
test
xchg
xchg
push
and
inc
out
imul
out
stos
sti
pcmpeqb
dec
stos
push
fstpl
sub
sahf
insb
in
rcrl
lret
out
popa
int
push
inc
lods
cmpsl
xchg
sbb
cld
mov
cmp
es
pop
cld
push
or
mov
add
fs
cmp
nop
aam
test
fwait
xchg
int3
push
cmp
fs
or
loope
ljmp
pushf
inc
insb
dec
jo
cmpsb
cmp
movsb
fadds
movsb
addr16
push
cmp
aaa
movsl
pusha
xchg
loopne
jp
mov
aam
jp
inc
je
scas
xor
xor
fidivrl
cmp
sbb
pop
or
sub
stc
cmp
pop
cli
mov
mov
icebp
push
dec
les
jle
inc
push
jns
lea
stos
or
imul
adc
xchg
mov
icebp
nop
mov
mov
imul
cmp
sub
or
enter
jne
cmp
inc
fdivs
cli
and
aaa
push
les
arpl
and
pop
out
jmp
mov
push
rol
cmp
dec
lea
ret
jecxz
push
sbbl
mov
jnp
aad
sbb
jbe
cmp
xchg
cltd
jg
push
dec
aas
lret
js
jp
daa
sbb
adc
sahf
mov
out
imul
xchg
xor
std
push
inc
cli
in
mov
push
mov
mov
push
aaa
sbb
add
hlt
cwtl
jno
or
cs
test
and
test
dec
jg
outsb
or
loope
inc
mov
bound
sub
and
add
test
and
lods
fadd
stos
sub
xor
jp
mov
popf
ret
mov
cmp
pop
sbb
int
test
js
jge
clc
dec
and
aaa
xor
jmp
fmuls
sub
fsubrl
arpl
pushf
xor
es
clc
push
sub
sti
jae
cmp
dec
cmp
push
aad
iret
nop
inc
pop
inc
jecxz
jle
add
outsb
cmp
sub
pushf
dec
mov
ja
pushf
mov
lret
in
inc
adc
dec
inc
jp
mov
pusha
shlb
mov
pushl
and
clc
js
push
lds
and
mov
bnd
test
sub
pushf
je
scas
pushl
pop
xor
lcall
scas
test
hlt
or
push
add
mulb
call
cwtl
push
jbe
divb
imul
xchg
inc
movsl
loopne
lret
mov
sub
daa
adc
popa
jmp
addr16
add
mulb
loop
or
loop
lods
mov
xchg
gs
inc
sub
jnp
cmpsl
jge
cmp
jp
nop
sti
cmc
fs
xchg
mov
push
push
pop
sub
sub
sub
cmc
aam
arpl
mov
mov
inc
mov
aam
xor
jg
cmc
xchg
movsl
pop
add
sbb
pcmpgtd
loope
adc
inc
jp
in
add
addl
adc
fadds
push
add
stos
stos
fs
lock
in
xchg
adc
jbe
nop
shrl
jo
sub
pop
mov
push
popa
stc
xchg
pushl
jnp
lock
neg
mov
scas
sar
mov
shrl
js
sahf
popf
dec
cmp
fldcw
inc
xor
cmp
cmp
push
cmp
inc
xchg
and
lods
aaa
pop
rcrl
ss
std
inc
filds
mov
sub
mov
and
aam
test
sbb
loopne
pop
pop
enter
jno
pop
sbb
pop
sub
xchg
dec
jge
jo
out
jg
repz
xlat
cmpsb
pop
and
adc
das
icebp
pushf
jo
out
push
and
adc
in
sbb
sbb
adc
outsl
push
jnp
push
mov
shlb
xchg
dec
jg
cmp
imul
add
movsb
jp
pusha
mov
mov
cmpsl
dec
xlat
aam
add
jno
subl
cmp
pop
add
push
rclb
sub
iret
or
jnp
pop
jno
sub
cmpsb
pop
xchg
xchg
bound
addr16
cmp
shr
rorl
std
or
outsl
xchg
mov
cmc
lahf
dec
inc
inc
dec
aas
sub
sbb
daa
and
sub
cmp
adc
pop
sbb
adc
or
push
int
popa
xor
fstps
mov
xlat
and
call
filds
mov
adc
sub
addr16
xchg
int
push
xlat
adc
mov
repnz
mov
mov
flds
sti
lock
enter
outsb
pop
inc
in
jge
rcrb
es
mov
mov
cmp
jp
inc
mov
test
icebp
lock
orl
out
inc
fdivs
ds
adc
std
lds
xlat
xor
mov
addb
stos
fnsave
push
rcl
jae
push
jae
loop
popa
int3
cmp
stos
in
mov
imul
pusha
lret
jle
push
icebp
fisttpl
pop
xor
adc
xchg
loop
movsl
lret
into
mov
xor
pusha
xor
or
and
xchg
mov
outsb
pop
data16
fistl
xchg
dec
push
mov
xchg
lock
mov
cltd
lods
repnz
dec
jp
shlb
aam
pop
pop
rorb
dec
in
or
mov
mov
xchg
xor
mov
mov
call
push
es
xor
mov
lcall
or
xchg
lea
xor
push
cmc
xor
dec
les
stos
in
mov
imul
test
in
iret
cmp
xor
loopne
adc
mov
cld
in
mov
movsb
inc
int3
pushf
cli
fdivrp
int
sbb
sbb
xchg
jle
adc
aad
jnp
rcrb
push
fcomps
push
test
mov
and
in
mov
mov
into
jp
push
mov
mov
es
jbe
mov
push
mov
mov
xor
sbb
xchg
out
add
adc
stos
pop
int3
lea
out
jbe
ja
xor
xchg
pop
xchg
shll
shrl
mov
fs
jb
mov
pop
adc
call
mov
and
pop
dec
jne
xor
loopne
rorb
lret
xor
mov
dec
cs
sbb
jbe
fimull
mov
je
xor
aam
dec
int
call
lds
mov
stc
test
int
mov
repnz
ret
in
dec
mov
dec
stc
mov
movsl
cmp
pop
and
jp
mov
mov
pop
push
movsb
and
dec
jg
and
jmp
stos
test
dec
dec
mov
lock
imul
aad
repnz
jno
pop
mov
sbb
mov
and
mov
sahf
sub
xchg
imul
sbb
inc
push
push
cmpsl
or
in
aas
fidivrs
imul
or
push
test
pop
adc
push
mov
dec
cmp
pop
jecxz
xchg
sbbb
xchg
add
cmp
add
lahf
dec
ja
aaa
mov
mov
leave
pop
das
mov
xor
lock
push
sub
out
stos
jle
dec
mov
sbb
lret
dec
xchg
aad
fsubrl
ret
jmp
jmp
dec
fwait
inc
jle
cmpsb
mov
fidivl
nop
testl
and
movsl
xchg
stos
add
adc
pusha
jmp
enter
call
aas
insb
fimull
xchg
push
fistps
pop
adc
add
dec
sbb
sbb
loopne
mov
add
jp
mov
punpckldq
or
jne
sub
fs
shlb
mov
rorb
pop
xlat
adc
jge
out
leave
jp
cmpsb
add
cmp
sbb
bound
or
popl
in
mov
push
test
pop
mov
add
lea
inc
pop
jns
pop
arpl
pusha
cmp
push
shrl
push
adc
scas
cmc
pop
in
add
out
sbb
fs
xchg
leave
mov
repnz
ljmp
repz
mov
jnp
scas
cmpb
loop
or
or
fsubs
inc
xor
dec
adc
push
jp
pop
jecxz
fistl
xchg
clc
sub
ljmp
lret
das
xchg
or
ror
fldt
xchg
js
xor
addr16
fs
dec
dec
outsb
fmuls
sti
xorb
imul
fs
pop
and
out
in
cmpsb
dec
scas
cltd
push
mov
idivb
es
or
call
into
adc
dec
testl
aad
in
ficoml
mov
pop
das
xchg
sub
daa
fsubrs
jecxz
adc
or
test
sub
jno
or
adc
xor
ss
pop
and
fstpl
icebp
dec
pushl
cmp
dec
xor
inc
shll
das
andl
xorl
pop
scas
and
js
xchg
inc
sub
sub
dec
stos
jb
jmp
pop
stos
aam
sub
push
divl
mov
jmp
sbb
xchg
je
dec
jp
lock
push
jge
in
push
dec
xchg
leave
bnd
cmp
or
insl
icebp
push
das
in
pop
lahf
mov
or
ja
push
rcl
or
xor
and
iret
push
adc
icebp
jl,pt
dec
jl
jae
mov
jo
call
mov
fld
sahf
addr16
and
repz
lahf
xor
mov
dec
pushf
fld
xor
int
pop
mov
pop
inc
dec
js
push
mov
and
push
push
out
sub
das
push
jnp
imul
xlat
repnz
ficomps
xor
jle
sti
mov
mov
mov
ss
cmp
into
popa
mov
loopne
fadds
or
cmp
or
sub
fcomps
daa
lcall
fdivrs
lahf
cmp
mov
cs
xor
fs
pop
ja
sub
add
mov
push
mov
mov
xchg
or
scas
xor
fnstsw
jg
test
dec
hlt
in
dec
inc
jmp
leave
push
inc
dec
aaa
out
iret
sub
mov
out
enter
repz
pop
mov
dec
cltd
inc
mov
ja
nop
loop
lods
adc
jle
or
aas
ret
mov
mov
aas
push
jo
cmp
dec
pop
mov
mov
push
mov
test
sbb
mov
pop
loope
mov
std
cltd
jp
push
nop
divw
xor
sarl
icebp
xchg
jae
sbb
and
roll
push
stos
and
jns
xlat
mov
xchg
mov
push
aas
pop
pop
and
pop
sarl
outsb
fdivl
mov
xor
sub
ja
mov
mov
subb
fcmovu
lret
xor
repz
icebp
fisubrl
nop
rorb
dec
je
in
jbe
push
insl
or
mov
mov
pop
jmp
das
stc
fbstp
fldcw
mov
push
inc
fcompl
insl
xchg
inc
test
testb
push
mov
mov
mov
xchg
in
push
xor
adcb
test
cmpsl
xchg
pop
adc
imul
xorb
jbe
xchg
inc
cmpsb
in
call
push
jnp
pop
mov
inc
fsin
sti
test
fmuls
add
push
xchg
xchg
jp
int
push
int3
mov
sahf
lds
cmp
jne
stos
mov
cs
loopne
mov
popf
cmpsb
cli
mov
ret
daa
push
mov
add
pop
cmp
ja
push
aad
imul
cmp
cld
jmp
xchg
incb
aam
mov
xchg
out
loope
and
ds
push
rcll
cwtl
sbb
leave
arpl
inc
sarb
sub
adc
jle
mov
xchg
jl
std
pop
es
jno
fsub
or
xchg
and
stc
jns
inc
lods
ja
add
aaa
repz
nop
cwtl
adc
dec
mov
dec
mov
pushf
nop
mov
xor
ret
jmp
aam
jbe
shrl
lret
dec
ljmp
mov
inc
cmp
fcmove
mov
in
leave
cmp
ret
cmc
mov
jns
in
jno
in
loope
and
sub
pop
jl
fwait
popf
mov
int
std
jbe
in
shr
lock
adc
pop
mov
cmpsl
jle
test
or
fistpl
test
sub
jl
bswap
push
dec
xorb
loop
jnp
imulb
lods
add
pushl
sub
mov
sub
stos
daa
int3
xchg
fldcw
lahf
lret
xor
jle
fwait
sbb
xor
dec
sti
lret
xchg
addr16
mov
xchg
sbb
lret
adc
mov
ret
mov
lock
xor
out
fucomip
mov
inc
pop
inc
int3
in
imul
mov
push
inc
jecxz
imul
mov
mov
nop
ss
aad
dec
lock
sar
adc
mov
fnstsw
pop
add
or
xor
or
mov
stos
test
pop
lock
add
mov
insl
jg
push
xor
jp
jb
pop
inc
mov
lods
push
aam
sti
sahf
mov
test
shll
stos
cmp
test
bnd
mov
insb
mov
data16
bound
push
aad
insl
addr16
icebp
push
daa
stos
rolb
aaa
pop
ljmp
lods
cwtl
lock
or
pop
stos
loope
and
xchg
nop
xor
pop
out
push
inc
repz
jb
inc
repnz
jne
xchg
push
adc
lds
adc
push
xchg
aad
xchg
or
imul
int
mov
repz
int3
dec
add
in
lods
xchg
xor
sbb
mov
mov
subl
mov
inc
xchg
jne
aaa
es
add
dec
dec
fisubrs
mov
addr16
test
pushf
ror
jecxz
orl
fstpt
or
scas
lcall
pop
fidivrl
mov
les
pop
or
stc
push
mov
jecxz
dec
xchg
sub
sub
push
mov
xchg
in
ret
js
leave
divl
mov
das
mov
loope
push
movsb
aaa
dec
xchg
enter
mov
leave
lods
push
pusha
add
mov
mov
dec
cmpsb
int3
test
mov
push
mov
gs
cli
fwait
jns
sbb
cld
inc
repnz
cs
add
adcl
add
lret
cmc
push
out
mov
add
mov
lea
test
xor
rorl
loopne
pop
pop
pop
and
imul
aas
pop
xor
pop
add
inc
push
addb
cwtl
and
scas
fistpl
fisubs
flds
mov
and
lret
or
sbb
dec
movsb
add
pop
jb
and
repnz
cmp
into
mov
jo
insb
inc
jns
outsb
fneni(8087
and
or
test
data16
popa
jl
daa
shll
mov
sahf
icebp
mov
xchg
push
test
iret
nop
jmp
icebp
lcall
shlb
and
pop
fsubs
sbb
aad
xchg
loop
xchg
pop
outsl
clc
jl
insl
lcall
loope
adc
lds
sbb
push
xor
je
or
push
jno
out
pop
clc
inc
and
dec
sbbl
cmc
push
aas
inc
jno
cltd
ljmp
xchg
adcl
ljmp
test
pop
es
adc
cmc
in
lret
test
pop
scas
cmp
add
ficompl
cmp
mov
cltd
xchg
insb
cwtl
push
mov
mov
mov
push
push
fmuls
mov
fdivs
xchg
adc
cwtl
adcb
js
mov
push
mov
das
inc
push
xchg
add
and
es
mov
mov
out
add
mov
sub
aam
xchg
je
cs
popa
fildll
hlt
cmp
add
rclb
lods
mov
in
orl
cwtl
popa
ret
shl
enter
xchg
sbb
sahf
or
xchg
xchg
mov
or
ja
shll
iret
pop
lcall
cwtl
xchg
inc
les
dec
sub
cmpl
xchg
pusha
nop
stos
in
jg
push
push
push
xchg
loopne
cmc
rorl
inc
cmp
dec
xchg
jno
xor
cmp
adc
test
mov
and
mov
add
mov
dec
movsb
into
lcall
lret
mov
lret
bnd
out
scas
into
mov
movsb
inc
dec
lret
mov
shl
sub
xor
jbe
sbb
lret
lret
mov
sahf
pop
adc
imul
gs
xor
jno
movsb
notb
mov
adc
imul
push
insb
push
fs
notb
push
stos
mov
sti
fwait
adc
sbb
push
push
push
adc
dec
add
mov
xor
inc
scas
je
bound
inc
aam
fsubrs
hlt
repz
and
outsl
rorl
in
fnstcw
xorl
outsl
dec
add
stc
jo
rcll
ja
test
sub
pop
jge
xchg
bnd
clc
jno
push
cmp
movsb
cmp
add
ja
sub
fs
cs
add
add
xchg
in
and
or
outsl
out
lret
imul
movsb
mov
cmp
mov
jle
cmc
test
adc
sbb
and
cmc
jmp
xorb
or
cmp
ja
dec
xlat
cmp
mov
test
lods
adc
and
dec
ljmp
mov
jl
mov
inc
aam
push
ds
in
sbb
or
sahf
xor
into
dec
adc
xor
dec
lahf
popf
xchg
inc
push
aam
shlb
mov
cs
insl
stos
pop
sbb
sbb
fwait
sub
mov
ljmp
jb
pusha
icebp
pop
lods
lcall
add
xchg
mov
adc
in
dec
loopne
mov
xchg
mov
fidivrl
cwtl
out
mov
dec
popa
inc
pop
ret
dec
fidivs
iret
pop
jo
shl
fmull
xchg
aaa
mov
jp
mov
jnp
cld
sbb
dec
cli
lret
cs
ds
dec
cmp
push
pop
push
push
jbe
lcall
cmp
xchg
xchg
int
add
xor
dec
add
mov
or
test
pusha
jle
pop
aaa
pushf
daa
pop
push
dec
notl
jecxz
xchg
movl
adc
daa
sti
test
loopne
sar
pcmpeqd
test
jne
xlat
xchg
jl
es
dec
cli
xchg
lock
add
sbb
cmp
adc
add
test
mov
sahf
push
add
mov
sbb
jg
pop
ds
les
pop
sbb
mov
push
lret
cmpsb
and
mov
pop
pop
call
lods
inc
push
divb
cmp
fstpl
add
cli
inc
pusha
aas
loopne
mov
sti
xchg
mov
mov
pushf
push
cmp
sbb
std
add
xchg
addr16
mov
add
ss
leave
mov
out
mov
leave
jnp
fimuls
mov
loopne
repz
mov
mov
movsl
mov
or
adc
in
mov
and
inc
dec
sub
insb
fsubrl
sahf
and
mov
and
subl
pop
cmp
inc
and
rcrl
mov
ret
mov
mov
push
icebp
ret
fcomps
adc
mov
mov
mov
sub
lods
call
jmp
xchg
sbbb
cmc
jnp
lret
pop
xor
push
stc
ficompl
add
mov
push
and
or
adc
sbb
cld
ret
push
nop
adcl
xor
adc
lret
movsl
dec
bound
xchg
dec
add
jb
pop
jae
adc
xor
iret
cmovns
orl
roll
or
loopne
sbb
stos
xor
xchg
ficoms
xor
mov
lea
push
add
sub
inc
jb
std
lret
push
adcb
in
or
mov
jnp
mov
xchg
pusha
into
or
dec
sub
subb
or
push
inc
loopne,pn
into
and
fs
out
sbb
stos
push
add
inc
pop
fdivrs
pushl
mov
push
jno
adc
or
mov
into
mov
xor
push
outsl
add
loope
pop
int
shl
aam
test
shlb
cld
xchg
mov
mov
sbb
push
movsb
outsl
cs
dec
mov
xchg
js
mov
es
sub
je
pop
sbb
adc
imul
addr16
out
xchg
subb
adc
mov
sbb
iret
rol
insl
cli
ret
push
sub
loop
sub
dec
sub
push
out
push
xchg
cmp
cmp
fsubrl
cmp
sbb
and
mov
add
and
pop
dec
xchg
adc
dec
shrl
into
or
jnp
das
pop
sahf
mov
adc
jecxz
std
std
xchg
mov
sahf
pop
rcll
fwait
sahf
cmp
hlt
aas
adc
dec
pusha
lret
xlat
data16
add
test
add
mov
mov
mov
jne
stc
popf
out
xor
je
ljmp
adc
add
add
mov
insb
inc
pusha
lods
mov
jo
jbe
loopne
mov
es
gs
sub
add
xor
lods
push
push
test
mov
xchg
mov
sbb
insl
out
pop
jae
imul
cmp
cmp
cmp
adc
jno
rclb
in
call
adc
jecxz
or
aaa
jle
jmp
mov
enter
sub
pop
dec
mov
cmpsb
test
lods
add
pop
int
fstl
jbe
push
push
dec
pop
lahf
adc
int3
jecxz
sub
cmpsb
jge
repz
std
dec
xor
pusha
scas
sahf
xchg
add
jb
sub
into
mov
iret
mov
mov
jb
xchg
ljmp
nop
xorb
repz
mov
add
fstpl
arpl
push
sub
jno
jmp
add
jp
xchg
xorb
ret
xchg
insb
test
pop
and
push
mov
push
inc
jg
clc
mov
xor
jbe
fsubl
jno
add
push
ficompl
movl
or
mov
loop
fstl
dec
jmp
popf
test
dec
add
inc
jle
xlat
fisubs
popf
scas
pop
les
iret
pop
mov
mov
and
and
xchg
sub
addr16
imul
adc
data16
shll
ljmp
ror
addl
cmpb
dec
push
or
rolb
ret
inc
mov
jno
add
jo
add
lds
push
arpl
jecxz
out
lods
mov
jae
test
or
cmp
xchg
test
sbb
adc
pop
sub
mov
sub
jg
add
pop
adc
ss
outsl
add
icebp
movsl
adc
loope
test
mov
orl
pop
mov
lods
in
popa
inc
adc
mov
sbb
in
test
xchg
rcll
lods
inc
sbb
mov
mov
xchg
xchg
pop
mov
mov
aas
insl
push
pushf
fcoms
xlat
fisubrs
roll
outsl
xchg
cltd
push
xorl
test
mov
cltd
push
xchg
subb
mov
cltd
dec
jb
lock
jb
dec
inc
jecxz
cmp
pop
and
cld
out
fimuls
xor
outsb
addr16
aam
mov
test
pop
and
data16
dec
jl
sbb
push
loopne
mov
jne
int
cs
sub
in
lock
add
sub
rorb
fs
outsl
pop
dec
rorb
fsubr
push
push
bound
push
push
dec
mov
adc
mov
jge
sbb
test
jge
and
mov
sar
lea
push
mov
inc
xchg
mov
xchg
arpl
push
cld
out
aam
inc
xchg
add
mov
leave
mov
pop
popf
scas
call
shll
ror
cld
push
rolb
roll
xchg
ret
mov
sub
inc
adc
stos
mov
int3
pop
pop
push
jle
jne
cltd
lahf
sarl
jl
rclb
push
xor
int3
hlt
inc
mov
aad
jne
sti
lret
shll
jnp
or
test
mov
enter
inc
inc
inc
mov
xchg
imul
popa
sarl
add
push
xor
popf
insl
dec
and
loopne
jns
mov
pop
addb
jp
mov
sti
nop
arpl
jg
sub
clc
mov
std
fmull
mov
repnz
and
mov
xor
jecxz
lcall
out
and
pushf
dec
out
imul
inc
jecxz
mov
pop
xor
out
xor
fwait
mov
jle
movsl
stos
mov
mov
in
out
ljmp
push
repnz
stos
xchg
adc
mov
aad
out
shrl
fldenv
dec
push
lods
gs
and
hlt
stos
and
loop,pn
icebp
ja
shl
dec
sarl
aam
cmpl
insl
sub
enter
mov
imul
test
push
sub
call
jnp
mov
sbbl
jge
add
pop
mov
das
fs
fs
insb
add
cmpsb
jp,pn
mov
imul
push
ljmp
pop
leave
mov
insb
sub
movsb
dec
xchg
shrb
call
inc
daa
sub
mulb
jle
out
mov
callw
mov
stc
stc
and
and
sbb
mov
repz
out
mov
inc
jecxz
lods
and
pop
adcl
mov
aam
adc
popa
adc
callw
push
push
aad
imul
add
iret
scas
add
inc
jp
fs
xor
arpl
pop
pop
add
mov
cmp
sbb
out
into
add
add
sbb
cwtl
fucomi
jg
lcall
sbb
cmp
jg
sub
out
je
push
push
fidivrl
xor
outsl
jno
pushl
pop
xor
in
mov
xchg
lcall
pop
in
adc
in
xchg
xchg
mov
xlat
add
pushf
mov
sub
adc
jno
fnstcw
sbb
int
bound
repz
sbb
add
bnd
int3
jp
adc
std
mov
arpl
out
mov
divl
pop
sahf
jge
pop
adc
notb
pop
repnz
jbe
dec
dec
lds
shll
jg
adc
lock
repz
mov
movsl
in
mov
cmc
data16
add
js
and
popl
call
or
and
and
andl
add
out
jae
es
out
leave
ds
adc
push
pop
fs
movsl
movsl
shrl
jno
or
push
or
mov
xor
leave
inc
incl
rclb
cmp
mov
sub
dec
pop
iret
int
repnz
xor
adc
cli
gs
aaa
out
insb
fdivr
jb
dec
xchg
xor
nop
pop
pop
pop
ficomps
sub
xor
adc
lret
sbb
lods
xlat
lcall
dec
out
shll
icebp
dec
es
outsb
mov
fs
es
into
jae
pop
push
jb
mov
lds
js
add
sbb
mov
fisttps
fildll
inc
or
lcall
test
out
ja
cmp
xchg
cmpsl
leave
arpl
inc
mov
jo
stos
sarl
ljmp
imul
pop
cld
pop
inc
and
ljmp
or
cmp
mov
sbbl
xchg
xor
inc
rol
jge
xlat
mov
xchg
adc
aaa
fxch
push
or
sbb
xchg
adc
testb
ret
pop
cmp
jbe
cs
pushf
pop
mov
sub
pop
add
sti
cmc
inc
inc
jbe
cli
pop
roll
add
sub
mov
mov
mov
mov
mov
les
gs
cltd
adc
cwtl
shlb
dec
cmp
ret
xor
mov
nop
stos
and
popf
inc
push
lods
jo
js
scas
inc
fs
ss
add
mov
mov
mov
in
xor
dec
sub
cmp
pop
iret
adc
xchg
sub
xchg
sub
xchg
movsl
mov
inc
lods
add
sbb
int
mov
icebp
sbb
pop
add
test
not
movsl
imul
push
enter
and
sahf
aad
sbb
jae
lret
icebp
cltd
scas
je
aam
les
es
mov
add
les
lret
adc
sub
loopne
subb
fwait
mov
sbb
push
das
or
out
lods
cmpl
mov
cmp
orl
arpl
out
and
rol
int3
repnz
push
icebp
mov
cmc
in
dec
jbe
pop
mov
mov
mov
shrb
mov
sti
mov
cmp
std
dec
sti
ret
mov
push
lcall
mov
push
sarb
jg
out
jb
push
xor
push
andb
fstp
pop
push
ljmp
ja
imul
pop
push
scas
jnp
and
inc
or
inc
push
cmp
ds
lea
cmpsb
xchg
dec
ds
test
push
call
pop
test
shl
push
stos
mov
cmp
sbb
movsb
daa
stc
jl
push
jne
cwtl
dec
insl
je
stos
js
jo
mov
push
inc
cmp
pandn
and
gs
insl
sbb
rcrb
jbe
aam
mov
icebp
and
sbb
idivb
mov
loope
lahf
mov
popf
or
jb
addr16
fcoml
shlb
jl
dec
ret
cmp
adc
sbb
je
push
cmc
data16
shll
cmp
movl
nop
pop
sub
sahf
jb
and
shlb
rcl
cmc
jns
pop
pop
mov
dec
add
xchg
push
outsb
fiadds
loop
cmp
pop
add
pop
idivl
and
inc
jge
or
daa
mov
push
into
and
and
add
orb
repnz
cltd
jae
cmp
dec
add
mov
into
and
xchg
mov
xchg
xor
sbbb
cmp
rorl
stc
pop
ss
fs
adc
push
addb
je
push
imul
inc
xchg
std
pop
ljmp
cmp
xor
lds
sbb
inc
lcall
mov
gs
or
daa
insb
mov
iret
enter
cmpb
ljmp
movsb
xor
std
imul
jne
dec
mov
outsb
sbb
std
scas
lods
das
in
insb
repnz
jle
mov
pop
fwait
stos
imul
inc
clc
adcb
and
xchg
loope
rorl
mov
dec
xchg
jnp
fsubs
push
cld
mov
xor
jmp
mov
mov
loop
push
stos
cs
cwtl
cli
push
or
je
fistl
stos
dec
outsl
sub
xor
sahf
mov
xchg
loopne
push
inc
mov
stos
dec
mov
arpl
cmpsb
stc
mov
sbb
mov
inc
test
xlat
bound
push
roll
insb
add
int3
sub
scas
mov
cmp
test
xor
arpl
lret
sub
aad
xor
int3
std
pop
cmpsb
loop
mov
jmp
imul
sub
mov
fcoml
dec
insl
mov
ds
ja
hlt
int
mov
imul
jo
inc
adc
sti
lahf
jp
test
adc
nop
push
mov
int3
loopne
sbb
imul
or
jb
test
pushf
arpl
and
sub
pushf
mov
dec
sti
lock
imul
xor
cld
add
test
jmp
xlat
inc
or
clc
pop
cmp
mov
push
ja
jae
xchg
jne
mov
cmp
xor
call
cmp
mov
pusha
ljmp
xchg
repnz
enter
sbb
daa
setno
test
es
scas
negl
inc
call
das
cmp
mov
and
ret
rcll
aam
popa
sub
add
iret
les
pop
jmp
adc
sub
les
push
pop
adc
mov
cwtl
leave
loopne
push
lret
cmp
pop
and
pop
push
mov
or
cltd
add
mov
and
xor
enter
xchg
call
out
or
js
ficomps
aam
jnp
mov
jecxz
inc
ret
test
inc
aad
lret
nop
xchg
jno
pop
mov
outsl
lods
push
or
mov
mov
xchg
frstor
sbb
test
mov
dec
mov
hlt
dec
ret
movsl
push
or
xor
xchg
leave
lock
and
mov
adc
sub
enter
lahf
out
cmpsb
jle
pop
shlb
cmpsl
mov
imul
push
mov
mov
mov
or
shr
shrb
jne
dec
jne
mov
push
mov
repnz
inc
out
adc
lock
ja
cmp
aam
outsl
imul
insl
push
pop
popf
cmp
test
stc
bound
sub
or
jp
aam
pop
and
int
mov
ds
sarb
imul
out
testb
add
sbb
mov
rorb
andb
stos
dec
and
jle,pn
cmpsl
fwait
inc
clc
jo
cmp
xlat
fprem
pop
lods
std
js
into
adc
cmpsb
sub
repz
and
xchg
and
popf
pusha
push
inc
clc
int
fdivl
in
sbb
and
push
xchg
data16
dec
pop
imul
ja
lcall
movsb
sub
imul
sti
push
lds
cwtl
adc
js
inc
call
and
xchg
mov
push
jg
add
call
shl
daa
arpl
xor
dec
das
inc
mov
fistps
rorl
xor
push
sub
push
js
jbe
fiaddl
xchg
cmp
pop
icebp
fidivl
push
dec
inc
push
stos
dec
mov
or
and
je
shrb
aad
jl
sbb
adc
cmp
jge,pn
mov
nop
pop
rcll
or
xorl
push
pop
sbb
or
sbb
dec
xor
cmp
jnp
imul
mov
xor
adc
in
rcrb
insl
and
fnstenv
iret
repz
loopne
and
or
jb
mov
mov
test
or
dec
mov
cmp
js
or
sbb
cmp
arpl
test
test
aas
add
rol
mov
jb
add
adc
xchg
and
push
mov
mov
mov
jmp
cmp
pusha
aad
jp
push
pop
cmc
xor
cmp
loope
gs
jne
lret
stos
sbb
ja
sbb
std
addr16
mov
outsb
cmp
andl
push
xlat
ret
mov
fldz
into
xor
xchg
aad
jnp
cmpsb
add
out
mov
dec
jp
add
add
jmp
dec
and
add
setp
arpl
xlat
outsb
dec
movsb
pop
mov
in
into
sbbb
pop
xor
xchg
xchg
incb
sub
aad
mov
std
jno
rclb
adc
xchg
lcall
cwtl
sub
movsb
and
ds
mov
hlt
mov
adc
fiaddl
dec
int3
addr16
jl
js
xchg
sbb
xchg
popf
shrl
push
subb
pop
ja
outsb
pop
sub
mov
jecxz
jne
push
jmp
mov
jge
fcompl
push
dec
insb
jle
mov
cmpl
dec
mov
pop
leave
shrb
data16
test
les
cmp
dec
xor
cmp
stos
sbb
in
xor
outsb
mov
pop
cwtl
in
repz
insb
mov
mov
dec
pop
lea
sub
cmpsb
stos
jl
pop
push
adc
jo
pusha
cwtl
pop
int3
into
pop
popf
jne
mov
out
in
movsl
stos
shr
mov
roll
adcl
push
rcll
and
and
adc
xchg
sbb
popa
rcrb
aam
jmp
add
js
pop
inc
push
or
mov
push
in
dec
fcmovnb
xlat
sar
es
xlat
sub
add
lods
inc
stc
int3
mov
xchg
jbe
dec
ret
mov
pop
roll
insl
das
fs
xchg
lret
push
xchg
or
cs
mov
jmp
dec
ja
outsl
out
arpl
push
rorb
jns
or
xchg
mov
aaa
movsb
sbb
rcll
cwtl
xor
xchg
cmp
and
and
aaa
inc
or
dec
sub
arpl
cmpsb
add
jo
or
xor
ljmp
and
test
mov
out
mov
lods
imul
test
ret
or
clc
inc
dec
sti
and
in
fwait
lahf
push
add
out
sub
mov
and
add
dec
cmp
pop
repz
out
dec
popf
outsb
stc
ret
pop
pcmpgtb
scas
mov
icebp
fxch
adcl
dec
jae
dec
lret
fdivrl
sbb
xchg
outsl
iret
pushl
push
cmc
dec
call
fisttpl
imul
push
pop
jbe
stos
mov
xor
mov
fsubrl
push
xor
jno
adc
repnz
and
pop
pop
add
imul
inc
arpl
sbb
cltd
mov
mov
scas
mull
pop
and
inc
pop
jbe
jno
ret
xchg
inc
int
arpl
pop
pop
xor
cs
out
mulps
lock
or
outsb
pop
add
cwtl
lock
sbbb
adc
jbe
xor
js
sbb
or
xor
push
mov
sub
or
cmp
int
inc
hlt
in
add
lahf
insb
dec
dec
fwait
pop
cmp
xor
sbb
jno
aaa
mov
cmp
pop
and
in
lods
outsb
clc
inc
xchg
inc
mov
out
xchg
push
inc
xlat
mov
xchg
stc
lods
push
test
jg
bound
movsl
mov
jbe
mov
cltd
lock
ss
roll
add
cmpsl
call
jle
mov
lahf
jbe
test
inc
out
cli
enter
sti
mov
addb
push
cmpsl
xchg
jle
xchg
sbb
jl
lds
adc
xchg
sub
xchg
xor
cmp
or
call
inc
mov
xchg
filds
into
lret
and
inc
lock
sub
xlat
jns
enter
push
inc
xchg
lahf
mov
leave
mov
mov
cmpsl
and
jno
arpl
cs
xchg
testl
jge
inc
ret
rcll
push
lahf
out
and
mov
pop
add
hlt
ret
stos
mov
jno
cmp
popf
out
sub
push
xchg
imulb
insb
daa
or
cmpsb
fisubrl
inc
imul
popf
imul
dec
shrb
outsb
aas
xchg
pop
push
fdivrs
scas
mov
inc
ret
mov
cmpsb
dec
ss
mov
out
ret
aad
ret
inc
dec
cld
gs
fs
push
sbb
inc
xlat
cmp
pop
xor
mov
in
adc
sbb
mov
call
add
add
stos
mov
mov
jne
sub
cli
loop
cmp
xlat
shlb
inc
out
adc
jp
test
and
mov
aas
pop
or
aas
mov
add
out
insl
add
inc
lcall
jmp
jge
mov
push
lods
sti
lods
mov
test
clc
jge
inc
push
dec
popa
stos
pop
pop
or
push
iret
sbb
test
fwait
inc
and
imul
stos
mov
xchg
sub
andl
ljmp
push
aam
push
testb
enter
roll
xor
mov
cmp
lods
fisubl
popa
or
mov
mov
mov
mov
inc
in
mov
in
xchg
rclb
jnp
sahf
rcrl
push
sbbb
and
fcomps
lods
jae
repnz
outsb
in
incb
push
cmp
je
or
or
sub
lods
cmp
out
add
cltd
call
mov
lret
jo
cs
mov
cltd
cmp
repnz
cmpsl
adc
cmp
lods
pop
xchg
pop
fistpll
push
in
sbb
push
sbb
add
push
sbb
mov
shlb
sub
aaa
jl
ljmp
bound
les
mov
jb
xor
adc
jb
sub
scas
or
pusha
fldenv
call
pop
in
imul
cmp
fmuls
repz
or
aam
sbb
jp
xor
mov
jle
cmp
shl
fwait
into
or
xchg
mov
push
inc
leave
lea
in
dec
push
and
sbb
mov
pop
xchg
jmp
sbb
mov
push
aam
jns
mov
hlt
xor
lock
pop
mov
ss
stos
fwait
lds
imul
andl
sbb
call
xchg
pop
or
js
stos
fwait
jns
or
mov
push
xlat
in
int3
leave
push
rorl
xor
xchg
sbb
sub
dec
or
xor
lret
cld
movsl
popf
dec
jns
xchg
arpl
popf
jl
pop
addl
dec
cli
in
and
mov
jae
adc
pushf
add
sub
jno
mov
inc
pushf
test
mov
int
sub
jne
push
inc
fistpl
stos
rorb
push
push
repz
sub
xor
mov
jge
adc
fildl
add
cmp
aad
jmp
sub
aad
fnstsw
lret
or
out
and
loopne
int3
mov
stc
fwait
cli
xchg
insl
mov
in
imul
pop
sbb
dec
mov
mov
mov
xor
lahf
push
mov
xchg
xchg
imul
lods
loopne
pop
pop
ret
mov
xchg
dec
adc
in
ret
push
lock
arpl
mov
test
movsl
adc
pop
or
pop
mov
jmp
and
std
or
adc
jle
testl
jmp
mov
sbb
adc
mov
inc
xor
inc
aam
popw
imul
pop
out
add
sbb
and
loopne
push
xor
push
rcll
push
shrl
cwtl
or
fucom
mov
xchg
push
cmp
bswap
out
call
dec
push
add
sub
bound
outsl
mov
jecxz
jp
xchg
adc
mov
jno
loope
push
and
in
inc
xchg
jg
pop
cmp
xor
insb
sbb
out
jle
lock
cltd
push
inc
mov
shr
push
xor
das
add
mov
mov
out
sbb
and
inc
jb
jns
and
fmuls
popa
subb
push
movsb
push
es
in
inc
cmpsl
rorl
shr
stos
fwait
scas
out
push
jge
push
out
mov
ss
dec
scas
mov
pop
nop
test
xchg
popa
or
into
lret
out
jge
inc
sti
sub
cmp
call
dec
ds
mov
mov
lea
sbb
lret
or
ret
adc
fs
cmp
xchg
xor
in
cs
push
pop
mov
std
in
sbb
mov
mov
in
outsl
inc
orb
push
mov
fwait
add
jecxz
into
cld
out
sbb
outsl
test
jne
mov
shll
fcomi
xlat
cmc
mov
xor
pop
aaa
cli
je
mov
adc
bound
sub
jno
pop
test
fiadds
stos
ljmp
icebp
mov
sub
outsb
cli
cmc
jp
jbe
pusha
lds
pop
cmp
aad
pop
cmc
push
xchg
jmp
fcmovb
sub
int
or
pop
lcall
or
pop
jp
popa
sub
adc
shll
push
orb
sbb
daa
add
je
lds
fsubrs
dec
stc
cs
pop
xchg
adc
xchg
andl
nop
xor
test
dec
leave
adcl
mov
jecxz
jne
xchg
push
cmp
and
cmpsl
pop
inc
lret
insb
cmp
pusha
pop
out
popa
loope
rorl
sub
or
and
mov
cwtl
or
imul
mov
mov
pop
mov
xchg
gs
dec
ds
adc
nop
jmp
sub
imul
dec
push
out
andb
pushf
or
and
lods
mov
test
inc
pusha
xor
cli
dec
or
cmc
clc
add
pusha
or
sti
sub
ffreep
cmpsb
adc
ret
jne
outsb
pop
pop
insb
mov
mov
jecxz
cmp
cwtl
dec
xor
xchg
pop
mov
sti
enter
mov
ds
loope
lcall
fs
mov
fwait
xor
jge
inc
inc
xlat
ljmp
and
das
call
in
cmp
adcb
sbb
outsl
or
addr16
sub
mov
mov
ret
mov
sbb
jb
xlat
pop
popf
call
sub
insb
mov
leave
xchg
inc
xor
dec
jle
sub
aad
push
add
bound
cs
add
rcl
lock
rcrl
push
mov
jg
pop
xor
push
or
sti
into
dec
or
xor
mov
rclb
ljmp
cmpl
mov
loop
adc
outsb
mov
daa
xor
sub
sbb
sub
sub
stc
adc
imul
movsb
sub
cmc
jns
jno
pop
or
es
mov
add
xchg
imul
xchg
imul
sub
mov
movsl
loope
add
stos
mov
xor
jno
stos
mov
jle
mov
and
sbb
cwtl
dec
out
mov
jecxz
fwait
js
imul
pop
cs
rcrl
adc
mov
test
loope
pushl
pop
adc
pop
cmp
mov
sti
sbb
cmp
into
xlat
mov
adc
cmp
bound
or
and
daa
sahf
in
mov
clc
push
js
arpl
add
sbb
sbb
push
pusha
mov
ljmp
outsl
mov
xchg
jne
stos
and
pop
push
mov
cs
jns
mov
jnp
sbb
lea
jns
aad
insb
stc
fwait
in
mov
mov
mov
jp
je
jmp
pop
push
aad
push
or
gs
pop
icebp
sub
pop
arpl
dec
cmp
or
int
dec
mov
loop
addr16
and
dec
mov
scas
lcall
and
lds
sbb
insl
aam
fdivl
sbb
call
loopne
mov
push
lea
pop
mov
push
push
in
xchg
xor
pop
shll
scas
mov
pop
ret
mov
add
inc
fsubp
aaa
inc
mov
pop
inc
push
ret
inc
clc
adc
jecxz
mov
arpl
add
lea
popf
ret
sbb
pop
add
sbb
into
dec
fimull
insb
cmp
lcall
pop
rorb
adc
cmp
pop
jnp
lods
pop
cmc
inc
xor
jnp
or
repnz
test
push
mov
push
mov
add
and
mov
jecxz
les
mov
dec
aas
insb
test
sbbb
pop
mov
inc
xchg
std
shll
dec
mov
lcall
scas
mov
loopne
push
or
adc
outsl
dec
adc
jno
outsb
mov
fwait
jne
mov
pop
adc
pop
push
lods
jecxz
push
rorb
mov
mov
in
pusha
dec
je
insb
gs
in
mov
call
pop
addb
add
jmp
movl
jmp
pop
inc
ret
xchg
push
jno
leave
inc
xor
lahf
or
icebp
xchg
inc
addr16
pop
fst
sbb
xchg
adc
sahf
jnp
mov
outsl
sbb
shl
cmp
sub
jg
lods
dec
mov
js
in
push
imul
push
js
test
jp
adc
mov
mov
les
mov
enter
cmp
popl
pop
push
mov
imul
and
xchg
cmc
leave
dec
dec
add
sahf
out
lret
xchg
pop
pop
imul
xchg
adc
out
fsubrs
dec
cmc
mov
mov
es
test
cmpsb
xchg
sbb
xor
jmp
mov
lcall
or
inc
jo
inc
jno
lods
jb
in
fistpl
inc
aas
clc
stos
jae
cmc
jns
sub
push
lret
sbb
lds
sub
or
cmpsb
inc
xchg
adc
icebp
popf
xchg
cmp
push
push
jle
mov
mov
add
adc
inc
push
cmpsb
imul
outsl
push
rcrb
je
aam
insb
lods
jp
dec
jp
dec
or
stos
movsl
jns
enter
test
pop
outsb
mov
ss
adcb
add
mov
stos
add
jno
nop
cmp
xchg
xchg
mov
insl
mov
mov
pop
movsl
jnp
fimuls
dec
mov
aad
into
aaa
pop
or
and
add
mov
cs
jbe
iret
or
mov
movsb
pop
stos
out
loopne
push
pop
dec
sti
jbe
clc
mov
add
orl
imul
mov
fistpll
inc
xorb
js
lret
sub
out
push
movsl
arpl
pop
cmovo
test
inc
inc
sub
daa
sbb
lahf
das
fsubrp
jnp
push
mov
shr
pop
mov
test
scas
and
cmp
fnsave
ljmp
lock
sbb
bound
xor
stos
addr16
mov
ffree
pop
and
push
fwait
outsl
popf
push
ret
mov
mov
movsb
dec
dec
mov
add
mov
inc
push
lock
mov
and
repnz
mov
cltd
jns
aad
add
adc
fsubr
pop
mov
and
sub
xlat
out
push
push
data16
clc
outsl
push
xchg
adc
xor
rcl
mov
adc
dec
pop
frstpm(287
rorl
inc
push
xchg
lea
es
sub
loopne
push
dec
jae
cld
hlt
das
ds
pop
and
shll
jle
adc
loop
iret
jo
sub
cli
popf
cmpsb
aaa
adc
jle
stos
or
aam
js
jns
lods
adc
cld
mov
insl
mov
add
jnp
daa
rcrb
scas
ret
mov
imul
cmpsl
inc
and
mov
sub
out
loop
cwtl
in
aam
mov
out
sarb
cmpsl
dec
in
in
sbb
out
pop
mov
lcall
clc
sub
push
jbe
push
mov
lcall
cmpsl
lcall
pop
shlb
fcomps
xchg
xor
clc
or
popa
popa
xchg
int3
push
sub
adc
icebp
fnsave
cmc
cmpsl
and
add
je
sub
mov
shlb
add
andl
mov
test
test
pop
mov
ret
cmp
push
inc
jne
xchg
mov
enter
xor
ss
or
add
xchg
xchg
inc
test
cmpsl
incb
jecxz
iret
jmp
cli
and
dec
test
cmp
push
adc
or
sbb
scas
jbe
sub
test
fidivs
and
in
cmp
int
mov
ret
jl
adc
or
mov
mov
bound
stos
pop
aad
mov
add
fidivrl
into
cs
inc
push
mov
fstpl
in
and
push
rcrl
daa
lock
repz
popf
jae
xchg
cmp
loope
xchg
sub
nop
mov
imul
test
insl
xor
fisubrs
jmp
xchg
lcall
shl
das
push
cmp
out
and
cmp
jb
lods
das
call
std
dec
sbb
or
fcomi
mov
out
lahf
mov
lret
and
lret
xor
mov
repz
mov
push
ljmp
adcb
push
push
sahf
adc
push
aam
sub
stos
repnz
cwtl
fsubrl
jmp
xor
pop
test
mov
sahf
addr16
jle
scas
or
mov
sbb
or
cmpb
inc
repnz
lods
dec
fstl
pop
lcall
dec
ror
lds
push
jb
sub
push
dec
lods
movsb
out
rolb
cmp
sbb
in
lahf
movsl
mov
in
push
or
outsl
iret
rolb
enter
and
mov
pop
cltd
mov
mul
out
sahf
mov
icebp
add
loopne
repz
arpl
int
leave
in
ja
fidivrs
mov
repz
clc
and
push
add
js
stos
xchg
jge
xor
test
cmp
pushf
cmp
pop
dec
sub
rol
into
mov
sahf
fwait
out
in
in
fnstenv
sbb
push
jno
std
jge
addr16
test
dec
lock
jb
setae
pop
lcall
cmp
jg
bound
and
sbb
add
add
sbb
shll
jge
push
push
jmp
into
push
jl
repz
pusha
sub
out
dec
push
push
dec
cmp
cli
dec
orb
aaa
jge
pushf
push
ja
ret
or
scas
movsl
jmp
je
mov
mov
std
or
dec
mov
daa
push
out
jmp
jge
jp
pop
dec
xlat
sbb
fildll
pusha
ret
sbb
push
loop
xor
rcrl
add
xchg
idivb
dec
mov
dec
cmc
lds
cs
push
dec
es
pop
movsl
outsb
pop
mov
jnp
das
repz
jle
aas
jnp
dec
sub
hlt
add
sbbl
xor
daa
stos
inc
adc
xchg
sbb
or
rorl
gs
push
or
sbb
add
mov
sub
push
mov
sti
xchg
enter
mov
cmpsb
cmc
xor
push
inc
lret
push
add
lods
and
daa
sbb
xchg
pop
stos
imulb
xor
mov
mov
mov
dec
testb
add
nop
loop
inc
fcoms
jl
adc
and
mov
xchg
xor
xor
pop
mov
mov
test
aam
insl
jle
shrl
pop
test
insl
pushf
daa
arpl
xorl
imul
xor
inc
and
les
dec
es
mov
ret
std
shlb
icebp
aas
or
stos
pop
or
sub
loope
mov
fstl
inc
jns
and
daa
push
fdivs
shll
or
cmp
loop
jno
sbb
pop
inc
jo
outsb
and
ljmp
mov
pop
mov
pop
sub
negl
outsl
insl
popa
fstps
push
fwait
rcrb
pop
in
es
mov
jle
dec
or
pop
pop
jecxz
cmc
fldenv
xchg
lret
xor
cs
jge
leave
jnp
push
inc
fs
out
aas
push
mul
aam
cmp
leave
cmpsb
clc
jo
adc
jmp
cvtps2pd
push
mov
lret
pop
inc
loope
pushf
xor
rcrl
add
push
test
arpl
in
add
test
push
popa
xchg
mov
lahf
out
mov
push
adcl
push
repz
jp
dec
lds
xorl
dec
dec
mov
les
icebp
fimull
orb
out
push
push
dec
add
adc
lahf
dec
mov
cld
outsb
lods
arpl
enter
insl
popa
or
addb
out
aam
push
in
adc
aam
shll
divl
xchg
adc
roll
hlt
jle
push
jmp
cs
stc
test
lret
fsubrp
lea
dec
adc
sub
insb
cs
inc
nop
std
nop
jmp
loope
pop
adc
stc
in
jecxz
scas
pusha
ret
insl
xchg
pusha
dec
and
add
jmp
or
loop
mov
and
stos
sub
rorb
imul
shlb
add
scas
shl
mov
mov
int3
and
and
or
rcrb
dec
mov
mov
xchg
jnp
das
xchg
push
or
sbb
jne
imul
cli
cli
mov
pushf
push
std
loop
add
lea
sbb
dec
adc
ret
mov
ja
pop
sbb
scas
or
lret
xor
inc
sub
jg
push
fcmovu
inc
lret
lods
arpl
xchg
sub
fnstenv
mov
and
mov
mov
into
xorl
inc
daa
arpl
xor
mov
pcmpeqd
and
fcmovne
clc
mov
es
or
jne
push
repz
movsl
fucomi
out
jmp
mov
gs
mov
in
loope
js
jg
addr16
clc
xchg
movsb
dec
sub
sub
sbbb
mov
adc
jle
adc
repnz
sahf
pop
movb
sbb
aas
cmp
mov
insl
sti
xor
pop
xor
aad
jne
jecxz
js
mov
fidivrs
sub
jbe
imul
jne
xorb
les
or
mov
cwtl
arpl
scas
sahf
jp
test
fdivl
ret
add
push
xor
xorl
sbb
pop
test
pop
pop
inc
lret
ret
xorb
sub
lods
sub
cli
or
xor
loope
inc
loope
icebp
xor
pop
jb
and
or
repnz
cld
add
add
pop
pop
dec
andb
dec
das
imul
mov
daa
lret
sub
pusha
test
loope
jl
out
loope
stc
shrb
jnp
dec
mov
xor
jns
xor
or
mov
movl
nop
shlb
pop
cmp
popa
sbb
jne
push
mov
cwtl
push
mov
fmull
rolb
jb
aaa
mov
cmp
ljmp
jb
mov
push
fsubrl
insl
in
pop
push
or
cmpb
nop
std
in
imul
push
mov
iret
xchg
adc
aaa
or
lret
add
and
push
or
pop
push
push
xchg
fists
xor
bnd
aaa
je
fists
sub
jb
lret
imul
xchg
jae
cmp
or
inc
mov
jge
jmp
ljmp
jg
cmpsb
fs
jmp
dec
aam
sbb
outsb
lahf
leave
inc
sar
test
push
imul
loop
popf
cltd
popf
xor
pop
jb
int3
xchg
loopne
popf
cmp
or
and
cmpsb
fisubl
xchg
xor
cli
mov
je
push
mov
movsl
in
es
mov
push
cltd
inc
inc
mov
pop
es
jle
or
jo
push
mov
mov
sub
imul
insl
inc
pop
xor
or
adc
push
out
mov
sarl
test
dec
jle
add
js
jo
mov
and
mov
int
into
xor
and
stos
leave
test
call
jl
add
pop
das
inc
and
mov
in
cltd
xchg
dec
shr
sub
inc
cmpsb
or
fisubl
out
push
adc
pop
repnz
lock
test
cmc
in
jle
out
stos
mov
stos
adc
fcom
popa
enter
shll
mov
enter
and
jl
imul
dec
shlb
lock
stos
lea
inc
imul
pop
mov
pop
push
dec
iret
and
test
push
sub
mov
popf
jnp
mov
es
or
test
testb
ljmp
fcmovb
incl
or
push
add
cmp
loope
lea
movsl
lahf
xlat
and
dec
das
outsb
lcall
mov
gs
mov
scas
xor
imul
mov
int
shlb
sub
mov
or
cmp
mov
outsb
fxam
inc
cltd
push
imul
or
nopl
or
mov
outsl
rcl
rol
xchg
test
sti
mov
sti
cmp
cmp
ja
xchg
mov
dec
outsl
arpl
inc
stos
je
sub
mov
add
sbb
inc
lods
jecxz
stc
and
adc
pop
test
sahf
dec
push
and
je
lahf
ret
jp
jmp
inc
int3
push
sahf
sbb
dec
aam
add
pop
xchg
adc
push
xchg
je
js
mov
mov
and
inc
in
push
push
push
mov
jnp
cmp
lret
scas
inc
test
sbb
jns
lea
popf
ret
in
scas
and
jo
ret
pop
cmpb
mov
add
sub
cmp
hlt
fidivrs
mov
inc
jbe
inc
shll
cmp
add
subb
sub
outsl
movb
pop
xor
call
adc
add
mov
mov
rsm
cmp
imul
fadd
loop
int
mov
push
cs
sub
inc
add
inc
or
or
lea
push
pusha
mov
fs
fdivrs
and
mov
xor
xchg
sub
loop
or
jbe
jp
inc
daa
xor
loopne
mov
mov
sbb
stos
int3
mov
add
test
pop
xchg
inc
cltd
adc
jle
adc
jno
fiadds
sub
xor
notb
arpl
jecxz
sti
out
stos
mov
push
call
xchg
xlat
out
scas
and
rol
js
mov
lea
jl
testl
push
popa
mov
pushf
icebp
inc
fistpl
call
aad
sub
iret
mov
add
loop
out
jns
cld
lock
lcall
lea
dec
mov
jg
or
rcll
repnz
or
push
sub
iret
push
push
jmp
fs
lea
stc
push
pop
popa
or
mov
flds
jno
scas
bound
imul
mov
aas
jecxz
dec
or
xor
push
mov
and
mov
je
mov
fnclex
mov
mov
mov
cld
inc
imul
and
adcb
mov
mov
stos
inc
cltd
rolb
cmpsb
loope
mov
das
in
add
push
fadds
mov
fldt
out
aad
pop
leave
add
lods
movsl
popa
js
pop
test
int
xor
mov
xchg
stos
mov
ja
sar
pop
ds
fnstcw
nop
rol
dec
mov
or
mov
out
out
pop
mov
pop
roll
sub
push
inc
cmpsl
xchg
call
mov
mov
jl
iret
call
ret
lock
enter
test
sbb
sahf
cmp
imul
jle
outsb
enter
ss
dec
jecxz
sub
cmpsl
add
addr16
pop
lret
xchg
pushl
scas
lret
jle
lds
rorl
or
test
out
ret
push
dec
into
sarb
xchg
mov
in
jbe
fldcw
in
add
cld
insb
xlat
rcrb
push
cmpsb
push
lret
mov
in
mov
mov
into
jb
xchg
xchg
mov
pop
popa
mov
setp
loop
push
out
daa
mov
clc
in
xchg
sbb
cmp
sbb
pop
mov
dec
push
cmp
gs
adc
lea
test
mov
mov
hlt
jge
lds
test
mov
pop
in
insl
std
mov
pop
mov
mov
sbb
jge
push
sbb
fbld
xorl
outsb
in
add
or
sub
cmp
pushl
adc
cli
pusha
rclb
add
ja
sbb
push
mov
inc
add
hlt
out
pop
insb
inc
mov
ja
out
cs
mov
push
lahf
jns
sbb
xlat
jo
sub
jne
inc
addb
arpl
test
rolb
inc
add
cmpl
cmpsb
mov
lock
add
mov
push
icebp
add
js
push
dec
scas
lods
cwtl
dec
data16
push
std
sarl
fcomps
mov
sub
cld
repnz
jecxz
dec
mov
and
stc
call
cmp
mov
lcall
cmp
mov
pop
jo
clc
pop
jg
jnp
xchg
lret
xchg
mov
sub
ljmp
mov
inc
pop
in
stos
ljmp
jmp
mov
xchg
out
adc
int
jecxz
push
call
imulb
cmp
ret
xchg
dec
pusha
mov
mov
jbe
xchg
push
pusha
mov
sub
nop
cmp
mov
lds
loopne
es
sahf
daa
in
fdivp
mov
jl
mov
cmp
push
iret
ds
pop
push
pop
mov
ret
cmp
mov
xchg
push
cmp
jle
xor
xor
add
adc
out
stc
sbb
pop
jge
les
xchg
jecxz
shll
or
ds
daa
mov
rol
push
ret
negl
jecxz
lcall
jns
cs
xor
add
pop
iret
jne
sub
lahf
iret
gs
dec
adc
push
pop
push
pop
sbb
mov
sub
mov
inc
mov
cmp
addr16
cltd
fsub
jge
mov
sbb
jnp
out
test
sub
mov
fnsaves
adc
out
push
test
dec
cmp
and
jne
mov
andl
pop
cmp
pop
xchg
sub
arpl
xchg
stos
rorb
addr16
shr
sbb
push
pop
jl
pop
push
outsl
sub
out
aad
push
adcb
fs
cltd
jne
sahf
les
mov
aaa
imul
fidivl
push
js
repnz
push
push
cmp
pop
push
adc
xchg
pop
and
sbb
and
inc
imul
int3
jge
shr
push
add
call
outsb
push
dec
sub
sahf
out
xchg
cmp
enter
roll
cwtl
xchg
jg,pt
push
addl
add
adc
push
or
int3
pop
fwait
inc
lds
movsb
lea
adc
xor
xchg
dec
stos
or
inc
cmp
pop
push
inc
mov
sahf
xchg
popa
call
cld
jae
or
or
xchg
push
lods
inc
adc
push
pop
cli
pop
add
test
fwait
jno
lock
mov
cmc
pop
cmpsl
test
jg
sub
repnz
mov
xchg
test
std
pop
sarl
jp
lock
je
sbb
adc
adc
adc
cmp
fisttps
xlat
mov
jl
push
jp
push
fcmovu
rcrl
dec
sbb
dec
test
or
lret
inc
sbb
mov
arpl
imul
ret
cli
ss
cli
insl
out
mov
outsl
adc
sub
negb
bound
xor
stc
xchg
and
sbb
xlat
adc
ds
cmp
test
and
xchg
mov
arpl
push
dec
mov
rcrl
inc
ret
imul
xchg
or
adc
cmc
jb
lcall
sbb
mov
cmc
push
sti
das
mov
xchg
push
add
jmp
pop
add
out
shlb
pop
adc
aad
scas
or
mov
xchg
mov
mov
les
dec
rcl
xchg
jbe
lock
or
in
aam
add
div
imul
jae
popf
pop
sbb
mov
fsubl
pop
sub
insl
push
fwait
mov
mov
addl
outsl
xchg
cmp
push
addr16
aaa
dec
adc
sub
int
int3
xor
faddp
data16
lahf
push
leave
testl
test
js
sbb
mov
fld
cmp
imul
mov
cmpsl
scas
movsl
movsb
mov
out
dec
mov
adc
pop
sbb
jnp
shl
in
stos
pop
aas
das
mov
repnz
stos
adc
xchg
xor
cmp
arpl
rolb
xor
cmp
lahf
cs
mov
xchg
jmp
rcll
xchg
cmpsb
xor
xlat
cmp
push
aad
lock
cld
mov
loop
jo
fidivs
call
sub
fisttpl
int3
xlat
inc
fsubr
adc
shl
mov
mov
xchg
imul
loop
jnp
repnz
loopne
fisubl
sahf
cmc
scas
xchg
pop
inc
inc
frstor
out
test
ja
sub
sub
cmp
in
mov
mov
cs
lcall
push
inc
jge
sbb
aad
xchg
or
sbb
popf
movsb
test
xchg
pop
sub
push
mov
sahf
sahf
mov
mov
pop
data16
xchg
imul
push
mov
popa
xor
cli
loope
push
ss
lret
jns
stc
and
or
dec
adc
nop
push
pop
xor
cltd
or
push
mov
and
cmp
adc
stos
dec
pop
cmp
popa
test
fwait
imul
imul
xor
inc
adc
fisubs
dec
sbb
pop
out
cmp
cmpsb
sub
pushf
imul
flds
sbb
fninit
push
je
sbb
mov
push
pop
les
out
and
xchg
rcr
lods
aam
cmp
iret
mov
and
rcr
lahf
mov
add
repz
leave
jb
enter
mov
in
das
outsl
in
ret
lret
imul
pop
lea
insb
lea
fdiv
sub
xor
inc
cli
sbb
frstor
push
sbbb
out
push
pushf
lds
cwtl
pop
xor
pop
push
inc
jno
rcl
stc
jbe
subb
or
clc
ds
icebp
cmp
loope
cmp
jge
arpl
imul
lods
rolb
in
nop
adc
stos
test
mov
add
pop
mov
cli
dec
dec
inc
mov
xor
shl
std
cmpsb
imul
lods
addr16
ljmp
subb
inc
pop
adc
mov
pop
and
fxam
test
pop
loope
aad
adc
add
pand
mov
scas
mov
mov
scas
negl
jo,pt
and
dec
or
call
stos
mov
mov
pop
repnz
lods
cmp
cwtl
pop
stc
outsb
xchg
stc
in
hlt
dec
sub
ret
xchg
xchg
ja
xor
fimuls
xor
dec
jbe
fwait
mov
mov
in
in
jecxz
mov
pop
or
pop
aaa
cld
inc
pop
adc
and
push
test
bound
nop
push
jp
jge
mov
adc
inc
jp
out
pop
dec
cld
rclb
or
addl
imul
adc
sahf
mov
daa
jbe
xor
cli
shlb
imul
das
cwtl
cmc
or
cs
mov
lock
xchg
mov
sub
dec
inc
sbb
outsl
jnp
xor
in
and
mov
inc
idivb
popf
and
in
push
add
and
mov
leave
imul
jbe
fsubl
sub
inc
adc
xor
cmp
dec
add
push
fcoml
bound
push
mov
and
xchg
push
jl
ror
adcb
push
pushl
popa
shlb
xor
lods
xor
mov
mov
ret
call
jp
mov
xchg
jns
dec
inc
ret
sti
mov
lret
rorb
out
lret
test
ret
mov
in
sub
fwait
push
jae
lcall
jg
xchg
inc
shl
or
lret
inc
jns
or
call
insl
aad
hlt
or
xor
xchg
and
loop
aad
rol
pop
or
test
cmp
movsb
lods
mov
test
lds
inc
hlt
fsubrl
adc
adc
int3
imul
js
lea
fldenv
xor
negl
pop
loope
mov
or
aas
push
inc
jns
or
or
cmpsl
ss
insl
jns
add
xchg
mov
sbb
xor
ljmp
shr
mov
lods
jns
movsb
mov
pop
sbb
leave
adcb
inc
xor
xor
pusha
xor
out
popa
shll
les
sahf
mov
jl
repnz
test
out
shrb
inc
adc
scas
aam
push
pop
cmc
jecxz
pop
cs
xchg
inc
mov
jl
pop
in
shr
dec
push
inc
push
xchg
clc
outsl
fpatan
stc
mov
push
adc
jnp
in
pop
mov
fcoml
lret
stos
cli
testb
adc
out
add
mov
sub
mov
cs
dec
mov
sub
stos
loopne
cmp
jae
inc
outsl
pmuludq
das
jg
mov
mov
and
push
adc
inc
movsl
add
test
mov
loope
sahf
xor
jge
lods
dec
add
inc
ds
icebp
clc
mov
ret
loopne
inc
xor
arpl
xor
or
movsb
movsb
lret
ret
adc
adc
dec
and
int
dec
call
cwtl
dec
mov
mov
push
and
nop
lods
adc
mov
dec
shrl
rep
push
pushf
mov
pop
sub
jmp
in
dec
mov
das
dec
inc
and
pop
ja
or
xchg
fistpll
pop
scas
daa
cs
fidivs
sub
mov
stos
out
add
enter
movlhps
mov
popa
in
add
leave
nop
pop
pop
pusha
bound
jne
stos
adc
push
je
and
and
leave
inc
and
dec
sbb
leave
add
pop
lods
outsl
inc
gs
fiaddl
jp
cmpsl
and
stc
jo
faddl
push
stos
mov
cmp
lds
imul
mov
arpl
fnstcw
inc
mov
push
in
aaa
mov
mov
insl
adc
jmp
add
repnz
cs
mov
fcmovnu
arpl
fldl
pushl
and
fildll
sbb
test
out
push
out
sti
insl
loop
dec
in
pop
mov
rol
fwait
jae
xor
inc
lods
sti
lock
jmp
ds
pop
adc
hlt
adc
loopne
inc
outsl
fcomi
vshufps
dec
lcall
cmc
jp
fldenv
incb
pop
fwait
xor
shlb
push
bound
dec
xor
sbb
cld
mov
je
iret
enter
dec
test
sbb
mov
xlat
pushf
stc
movl
repz
jecxz
icebp
mov
push
mov
cmc
jnp
or
call
shll
push
iret
pop
push
jle
rcr
pop
or
es
adc
lcall
loop
test
cmp
push
call
call
add
adc
nop
jge
push
inc
jecxz
jno
and
movsb
in
daa
jbe
loop
fistpl
sub
mov
imul
in
fs
sarb
movsl
adc
or
and
fidivl
je
fdivs
xor
repz
js
rorl
clc
andb
dec
dec
mov
mov
ss
pop
pop
int
lret
ret
nop
mov
lret
movsl
out
add
adc
enter
mov
popf
test
aaa
fistps
scas
mull
mov
xor
xchg
repz
inc
xorb
dec
sbb
mov
xchg
in
addr16
mov
xchg
mov
mov
adc
sbb
std
pop
int3
and
lods
cmp
fists
lea
mov
outsb
dec
movsb
bound
dec
loopne
sub
dec
push
sub
je
xchg
jbe
into
pusha
pusha
or
in
push
sahf
adc
icebp
pop
ror
rcll
xchg
xchg
loope
cmp
or
mov
xchg
adc
shlb
xchg
or
daa
push
ret
mov
loop
xchg
mov
stos
ret
sub
imul
dec
jmp
popa
rol
mov
cwtl
sbb
add
jmp
pusha
mov
mov
aam
cmpsb
sub
mov
fmuls
or
cmpb
shrb
mov
dec
jmp
dec
xor
mov
sbb
cltd
stc
sub
stos
mov
mov
out
bound
xchg
out
sbb
outsb
inc
out
divb
dec
insl
sbb
or
xchg
jp
add
int3
out
fidivrs
pop
fdivrs
fidivrs
mov
cmpb
addl
jge
add
pop
or
test
dec
sahf
mov
xchg
inc
cli
stos
inc
test
aad
sbb
aas
stos
add
adc
dec
and
roll
jmp
mov
mov
push
cmpsl
cmc
stos
push
fstpt
or
xchg
rorl
dec
call
clc
mov
testb
sub
popa
in
je
cwtl
cmp
aaa
adc
pop
pop
and
pop
and
addl
je
add
adc
jbe
xchg
repz
push
incl
jl
rcr
sbb
jb
mov
insl
dec
data16
mov
sub
inc
xor
and
cmp
roll
nop
inc
test
push
cmc
movsl
sahf
ds
pushf
fstl
xchg
adc
ror
into
or
fldl
dec
loopne
shlb
push
popf
out
mov
imul
sbb
leave
repnz
mov
in
mov
shlb
and
add
jg
inc
sahf
push
test
popa
lds
arpl
push
lock
jae
adcl
push
fiadds
fxch
psraw
sbb
mov
fwait
sbb
xor
push
js
dec
push
stos
xor
scas
or
fnsave
sub
scas
hlt
add
xchg
ds
fmulp
std
rclb
stc
dec
int
jnp
inc
jmp
fs
jae
sbb
test
lea
ljmp
jmp
pushf
inc
sub
jecxz
daa
andl
xchg
add
ja
xchg
jns
jl
addr16
mov
mov
xlat
pop
cmp
movb
dec
ret
movq
mov
xchg
jmp
xchg
cltd
mov
sti
pushf
stc
jae
daa
add
not
stc
stc
aas
adc
pop
pop
std
and
ljmp
jne
mov
push
lods
pop
lds
call
or
into
shrb
or
xchg
loope
add
and
mov
in
xchg
sbb
pop
inc
mov
movsl
ficompl
rcrl
push
push
cmp
xchg
adc
fiaddl
sub
lret
xor
push
push
sub
sub
aaa
jecxz
add
dec
sbb
add
mov
mov
and
test
rcr
or
mov
ret
push
mov
and
mov
jbe
xor
mov
adc
inc
mov
jnp
or
xchg
jmp
cmp
out
jecxz
mov
lcall
adc
aaa
lods
cltd
mov
div
xor
jg
or
sub
dec
sub
and
jns
mov
int3
sub
mov
cmp
sub
imul
jnp
or
popf
lret
insl
ds
xchg
jle
push
add
sub
bound
jnp
filds
sub
mov
add
or
lret
or
xchg
add
cwtl
or
mov
pop
lock
notb
and
and
mov
dec
ds
xchg
cwtl
and
adc
daa
mov
cwtl
mov
and
xchg
inc
outsl
imul
arpl
jbe
mov
or
test
out
mov
add
mov
fs
cmp
push
cs
cwtl
jo
lahf
push
fists
or
fs
and
mov
and
insb
call
push
and
cmp
mov
or
push
pop
js
mov
add
pop
jb
push
cmpsb
div
cmp
aas
sbb
sbb
mov
push
je
cmpsl
inc
repz
rcr
inc
in
stc
ja
mov
cmp
dec
sbb
scas
mov
and
and
xchg
mov
jnp
cltd
ss
fists
jp
add
test
fcmovbe
jae
lock
add
negb
sbb
add
adc
pop
scas
mov
jns
fs
adc
sahf
jne
adcb
cmpsb
jmp
mov
adc
jbe
mov
xor
jno
add
mov
les
insb
insb
mov
mov
dec
lcall
arpl
xor
xchg
push
jne
js
mov
jge
popl
aaa
jno
fmull
test
ljmp
scas
out
jecxz
pop
les
inc
in
loop
loop
inc
fcompl
mov
in
hlt
into
stc
out
outsl
leave
sub
cmp
sub
cwtl
test
xorb
xchg
test
out
push
mov
push
test
push
jge
jnp
mov
movsl
mov
sbb
pop
push
add
mov
test
cmpsb
push
xchg
std
and
adc
leave
repnz
lret
mov
mov
sbb
cmp
cwtl
ror
sub
xorl
ljmp
push
adc
imul
out
daa
sub
or
jl
xor
call
loope
out
repnz
dec
and
nop
jmp
fidivs
adc
xor
shlb
cmp
jno
fadd
mov
push
ljmp
mov
inc
aas
mov
lahf
dec
aam
xchg
rol
add
lock
inc
sub
cld
dec
jmp
pusha
out
adc
in
cmp
pop
cli
aas
sahf
add
inc
outsb
push
pushf
popa
in
in
push
or
and
arpl
push
inc
sti
mov
xor
ss
test
pop
repz
mov
shrb
into
mov
in
and
ret
mov
clc
dec
cmovns
or
cmp
and
push
cmpsl
add
adc
or
adc
mov
add
and
cmc
aam
dec
dec
adc
pop
fdivrl
je
lcall
lret
xlat
and
xchg
xor
out
jecxz,pt
add
fs
xchg
mov
enter
sbb
loopne
imul
fwait
and
mov
int
cld
mov
repnz
or
jbe
xchg
mov
in
jmp
repnz
popa
fs
out
std
cmp
adc
jb
push
inc
xchg
dec
insb
mov
sbb
push
mov
ja
fimuls
mov
aad
movsb
mov
punpcklbw
add
ljmp
adcb
push
add
adc
rcrb
jl
ret
or
in
mov
out
mov
ds
mov
and
jmp
sbbl
or
out
imul
daa
xchg
les
inc
insl
pop
pop
insl
cwtl
push
add
jbe
or
cs
lahf
dec
inc
hlt
fldt
rolb
sahf
xor
mov
aaa
aas
sub
stc
cs
cld
sahf
pushf
repz
mov
jge
fs
adc
mov
pop
dec
and
pushl
rcl
je
push
pop
les
mov
and
arpl
or
aam
mov
insb
inc
dec
mov
dec
sahf
push
test
arpl
sbb
dec
sub
lds
aaa
out
cmp
inc
shrb
push
cmp
scas
arpl
jne
rorb
fstpt
cld
sbb
mov
adcl
inc
je
jmp
sahf
inc
sbb
and
sbb
cmpsl
loopne
and
testb
inc
sub
adc
xchg
add
aad
rol
pop
pop
nop
mov
ss
and
ljmp
adc
xchg
xchg
push
loope
and
mov
mov
out
cmp
sub
mov
movd
mov
in
daa
ret
dec
fadd
xchg
ret
jno
sahf
inc
pop
out
jo
stc
clc
pop
pushf
imul
mov
mov
cmpl
popa
test
adc
dec
mov
push
adc
fucomp
outsl
shrb
clc
adc
ss
imul
pusha
xor
push
and
bound
sub
andl
enter
push
mov
popf
negb
lods
mov
scas
popf
loop
test
add
outsl
sub
cmp
popa
es
dec
aas
pusha
fisttps
test
out
popl
pop
jae
sbb
inc
sbb
dec
bound
push
xor
movsb
dec
loope
bound
sbb
jno
dec
inc
testl
hlt
lret
jns
ja
xchg
add
push
jnp
daa
inc
stos
pop
jo
imul
push
test
jp
ror
push
les
icebp
mov
ljmp
add
pop
or
mov
push
into
inc
cmpsl
fdivl
xor
mov
inc
sbb
jg
xorb
sbb
fcmovne
lods
mov
jne
ds
out
inc
fiadds
xor
add
sub
inc
sahf
fdivrp
arpl
lods
push
ret
add
xchg
jle
push
std
xorl
mov
adc
in
xchg
sbb
sub
xchg
shl
xchg
pop
jo
add
mov
sub
pop
xchg
int
outsl
cld
inc
push
inc
outsb
mov
inc
adc
xchg
pop
ds
dec
dec
mov
lret
out
cmp
pop
cmp
inc
pushf
mov
push
hlt
sub
inc
outsl
push
push
clc
jle
fistpll
sbb
lcall
call
roll
sub
jo
lds
adc
cmp
lea
arpl
push
int3
mov
push
dec
sbb
ret
pop
push
mov
push
fadds
pop
in
jnp
or
sub
dec
sahf
jns
stc
shl
mov
dec
outsb
mov
push
push
arpl
mov
pop
xchg
sub
stos
xchg
mov
daa
enter
jo
xchg
jecxz
sub
add
out
popa
sub
push
xchg
cmpsb
popf
mov
jl
push
pop
lahf
lods
ret
int3
and
mov
mov
cmp
push
sbb
xchg
sbb
mov
shll
jg
and
enter
smsw
xchg
or
mov
test
aaa
mov
mov
sub
sub
movd
sbb
iret
push
das
clc
je
in
test
dec
loopne
xor
and
add
shrl
jne
xor
jge
movsb
xchg
in
inc
movsl
mov
adc
cmp
or
mov
imul
mov
jl
mov
in
js
mov
es
jecxz
addl
pushf
hlt
adc
pop
arpl
scas
ljmp
dec
data16
lds
mov
aaa
rcr
mov
sbb
push
xlat
fsubrl
mov
jg
pop
push
fadds
lea
cmove
dec
int3
mov
mov
mov
add
ficoml
inc
stc
fst
insb
in
in
lcall
out
subps
in
rcll
pop
and
negl
repnz
outsb
xchg
shlb
inc
insb
add
shlb
incl
roll
dec
test
xchg
js
sti
lock
sub
jno
insl
imul
mov
movb
mov
mov
jno
push
in
fcomp
scas
dec
push
insb
and
cld
ret
dec
pop
js
inc
daa
add
xchg
mov
popa
cmp
xor
inc
xchg
pop
xchg
mov
xchg
outsl
aas
shll
push
aas
add
cld
sub
rorl
mov
xor
andb
xchg
mov
cmp
mov
data16
and
xchg
pop
sahf
in
cld
lret
cli
sbb
dec
sbb
jg
pop
and
mov
loopne
aam
add
pop
arpl
sbb
insl
es
mov
push
dec
fcoml
xchg
aad
rcl
pop
jb
jae
arpl
xchg
adc
test
ds
mov
lret
dec
mov
daa
scas
js
push
enter
mov
push
test
hlt
fistl
xlat
xchg
aas
inc
jne
popa
ret
dec
loop
pusha
jbe
xchg
pop
cmp
xorl
inc
sbb
adc
sbb
mov
and
popa
mov
jl
inc
sub
and
movsl
adc
push
sbb
dec
add
fdivrl
pop
sbb
data16
mov
and
push
cmpsb
push
pop
mov
outsb
out
mov
and
pop
pop
dec
xor
es
adc
pop
nop
sbb
rorl
rcll
mov
mov
adc
cmpl
stos
jmp
push
add
xor
jno
mov
xchg
inc
mov
push
dec
mov
sub
or
gs
xor
pop
inc
cmp
jl
int3
mov
inc
int
mov
jmp
cs
dec
aas
add
add
pop
mov
repz
cmp
or
insl
push
sbb
lret
test
je
xorl
add
mov
outsb
cmp
xchg
jbe
sub
sti
sti
and
adc
dec
fcomps
xor
dec
cmc
sbb
sub
adc
nop
jg
in
fbld
sbb
das
test
lods
sub
fsub
negb
aas
xchg
cmp
pop
fisubrs
out
fsubr
sti
push
sbb
fwait
add
pop
cs
jg
in
scas
roll
push
push
adc
xor
mov
cld
movsl
out
ss
ret
in
xlat
cmp
push
shrl
xchg
inc
das
push
jnp
insl
adc
mov
add
iret
add
loop
and
mov
aaa
jecxz
dec
dec
sbb
pop
repnz
dec
mov
sbb
ljmp
dec
push
cwtl
into
cltd
xor
cwtl
test
cmpl
cmp
sub
inc
jb
pop
arpl
xchg
fisubrl
xor
sbb
cs
rcll
in
icebp
addr16
lea
or
sbb
loop
faddl
xchg
out
in
fists
imul
inc
pop
bound
dec
push
mov
stos
inc
jo
jnp
mov
xchg
mov
cmpb
das
imul
cltd
mull
inc
jg
leave
push
test
ret
xchg
das
sti
in
icebp
mov
or
cli
mov
sub
pushf
and
test
mov
xor
cmp
mov
fldcw
enter
cmp
jb
fisttpll
xchg
scas
inc
mov
cwtl
insb
jne
in
fnstenv
xchg
shlb
dec
lcall
xlat
repnz
cltd
xchg
repnz
xor
cmpsb
fisttps
inc
mov
stc
out
push
pop
sbb
pop
add
jg
inc
add
cmp
bswap
xchg
mov
es
or
sahf
lock
or
dec
dec
pop
pop
pop
jle
dec
inc
in
pop
add
mov
adc
aas
insl
testl
xlat
jne
lock
jle
mov
js
pop
xchg
mov
or
cmp
stc
or
cli
js
iret
sarb
ja
or
lcall
dec
out
shrl
jne
mov
mov
test
and
jns
pop
jb
adc
push
dec
jae
lods
and
dec
outsb
fdiv
inc
movsl
int3
js
loope
cwtl
jg
dec
mov
cmp
jmpw
out
dec
sub
jg
iret
or
pop
pop
jbe
push
dec
sub
daa
jecxz
xchg
mov
shl
int
mov
cmp
lods
loopne
xchg
pop
test
mov
cld
fscale
es
push
or
cmp
shrb
mov
push
dec
or
xor
callw
push
mov
in
xchg
sbb
and
pop
out
add
push
mov
outsl
outsl
pop
dec
clc
les
sbb
xor
mov
lock
xchg
pop
test
push
pop
push
rolb
loopne
movsl
fsts
test
shrb
jle
out
das
jne
push
inc
push
jge
xchg
data16
lahf
add
dec
sbb
ret
ds
jmp
in
mov
sahf
xchg
out
xchg
pop
push
pop
mov
fisubs
scas
jo
bound
xchg
or
inc
mov
or
dec
dec
pop
insb
inc
cli
and
mov
and
dec
jle
or
jmp
imul
push
push
dec
aam
push
in
pop
sahf
pop
dec
xor
mov
std
and
cmp
pop
aaa
pop
fchs
xor
les
mov
fadd
flds
cltd
sub
aad
jle
fldenv
sbb
loope
add
jg
cmp
in
adc
mov
lcall
lcall
ja
test
test
xor
loopne
cld
push
mov
adc
mull
xchg
jne
loope
lahf
mov
cltd
repz
sbb
add
bnd
mov
sbb
adc
popf
stos
pop
mov
int3
fnsave
xchg
or
sbb
addr16
xor
and
mov
int
gs
mov
leave
mov
jbe
enter
clc
add
enter
fistl
outsb
fcoml
out
loopne
lea
insl
jns
jo
cmp
mov
pop
lea
push
in
pop
ret
int3
stos
outsl
ljmp
cmp
sarl
sub
inc
cmp
ficompl
dec
cmp
inc
sbbl
aad
mov
je
imul
subb
or
sbb
les
or
movsl
add
pop
jb
fcmovbe
lds
sbb
sbb
mov
leave
fcompl
loope
add
dec
fcompl
in
lods
call
sahf
and
xor
pop
or
insl
shlb
sub
push
add
lcall
mov
cwtl
mov
adc
test
sub
dec
push
xor
xchg
jg
pop
mov
add
mov
mov
rcll
in
enter
jp
leave
fisubrs
mov
pop
and
lods
xchg
mov
dec
stos
in
dec
sahf
int3
adc
mov
sub
xchg
jmp
dec
add
in
mov
xorl
es
lock
xor
ss
adc
mov
sarb
sub
faddl
out
cwtl
scas
or
cmp
xor
outsl
cmpsb
jb
es
jmp
cltd
popa
xor
add
mov
adc
jb
pushf
pop
mov
lds
pusha
aaa
dec
outsb
out
jbe
xchg
sti
rcrb
jmp
inc
stos
jmp
push
push
pop
aas
shll
cmc
cmpsb
lcall
sbb
fwait
push
jmp
ljmp
fmul
mov
adc
lods
lret
out
mov
cmp
push
sub
xor
adc
nop
and
mov
cmpsl
mov
cmp
sbb
and
cli
daa
out
out
rcll
dec
xor
and
add
data16
out
cli
adc
mov
xchg
mov
ret
xor
inc
fcomp
out
in
and
mov
pushf
in
sahf
push
mov
les
inc
lods
lret
mov
shrl
andb
out
xchg
xor
pop
mov
roll
out
lds
flds
jl
push
in
mov
lods
xchg
pop
mov
jnp
sub
dec
jl
xlat
cmp
scas
and
gs
mov
pop
fcomps
out
jle
dec
push
cmpsl
das
shlb
pop
lcall
add
and
fs
mov
imul
push
xor
or
loopne
scas
push
outsb
dec
and
movsl
cmp
lcall
jp
ficoms
add
inc
addb
xchg
pop
loopne
xchg
adc
push
fiadds
imul
fs
or
jnp
mov
and
pextrw
fistpll
mov
push
fcmovnbe
test
leave
mov
arpl
call
mov
daa
and
pop
dec
adc
jmp
push
jno
rcll
ljmp
jo
iret
and
or
jecxz
inc
ret
fs
and
ja
xchg
sub
push
push
pop
jl
test
mov
clc
pop
or
push
lahf
pop
sar
jne
aad
inc
sar
xchg
inc
out
test
xor
adc
mov
cmp
mov
mov
imul
iret
or
mov
sub
cli
ret
sbb
mov
mov
mov
push
push
push
fs
into
adcb
mov
ja
adc
test
push
out
ret
xchg
pop
aad
movl
call
xchg
jnp
xor
mov
gs
lcall
movsl
faddl
in
negl
jmp
xor
mov
xchg
xor
movl
pop
cmp
addr16
cmp
pop
scas
pop
pop
xchg
push
sti
int
outsb
lret
les
pop
mov
pushf
lds
dec
or
lods
rcll
cld
or
push
in
fstpt
insl
sahf
dec
add
adc
ljmp
cltd
stos
js
cltd
sub
push
dec
mov
fidivrl
and
push
es
mov
stc
xor
clc
les
hlt
fwait
or
es
xchg
sarl
test
dec
pop
dec
rol
mov
xchg
into
popa
sub
mov
mov
iret
or
nop
lcallw
mov
rcll
add
out
repz
adc
hlt
mov
ss
hlt
cwtl
and
rep
cmpsb
fisubrl
push
jmp
adc
add
dec
mov
push
data16
mov
lret
dec
cs
mov
dec
mov
ljmp
cmpsb
mov
inc
dec
fisttpll
popf
rcr
push
jnp
mov
mov
or
sti
sub
xor
cmp
in
jle
mov
mov
xchg
xchg
pop
arpl
pop
fs
jle
xchg
mull
jae
in
jne
dec
stos
out
fidivrs
je
and
pop
jle
xchg
daa
in
imul
imul
push
xorb
xlat
movsb
orb
and
addr16
shll
push
add
push
xchg
inc
cmp
push
es
mov
in
or
mov
cmp
into
movsl
mov
lret
movsl
dec
push
or
movsl
out
pop
outsb
repz
jo
lahf
fs
lods
sub
pop
fsubrs
cld
mov
in
dec
push
adc
scas
in
pop
mov
dec
cltd
shlb
mov
cmp
std
mov
mov
test
rclb
inc
test
out
outsb
mov
pop
daa
dec
dec
adc
adc
push
outsb
jno
xchg
leave
push
std
mov
popl
xchg
aam
movsl
cmp
icebp
in
add
push
mov
out
dec
cltd
and
fidivl
iret
sub
push
jno
daa
push
pop
lsl
stos
sub
xchg
jge
cmovae
and
ja
fldenv
shll
fisttpll
mov
repz
das
mov
or
mov
shl
jno
add
ja
or
adc
sbb
movsl
in
sub
mov
or
pop
enter
fiaddl
lahf
jo
xchg
or
ljmp
mov
out
jmp
fcomps
stos
std
push
mov
push
ljmp
pop
imul
fsts
jo
bound
ja
pop
stc
mov
pop
stc
inc
mov
push
cmp
addr16
inc
inc
add
lock
cmp
mov
ret
ds
cwtl
jmp
dec
sbb
loopne
sub
cmpsl
jo
push
movsl
loopne
xlat
mov
pop
adc
cli
test
jae
div
mov
push
push
inc
or
sub
mov
sahf
adc
add
in
outsl
aad
xchg
inc
mov
adc
pop
les
mov
cmp
push
popa
lock
cmp
pushf
pop
push
add
dec
jbe
arpl
mov
xchg
cmp
outsl
pop
scas
xchg
dec
jle
xchg
movsb
lahf
pop
xor
clc
popa
in
test
pop
jne
adc
bnd
add
mov
std
test
dec
repnz
xchg
ja
in
loope
pop
gs
fucomi
inc
insl
mov
adc
mov
insb
mov
movsl
lods
add
inc
adc
jnp
lret
cmp
jle
or
mov
rcl
sti
scas
pop
mov
roll
add
sti
loopne
popa
sar
and
sti
xor
mov
dec
mov
lea
jl
mov
mov
ds
push
test
adc
xchg
sbb
jmp
ss
xor
js
clc
cmp
in
sti
js
stos
sbb
xchg
ret
adc
in
push
and
sahf
mov
dec
mov
dec
enter
jecxz
popa
or
cs
subb
mov
sub
fcompl
cmp
add
cltd
stos
sbb
jnp
int
mov
popa
cwtl
repz
ret
sbb
fistpll
out
lods
ds
idiv
out
gs
popf
adc
adc
mov
mulb
imul
out
pop
mov
inc
sbb
or
and
loop
mov
mov
int
push
mov
faddl
jg
cmpsl
inc
add
or
and
lods
push
loop
aad
fldt
sbb
xor
inc
sbb
pusha
fmul
and
lock
xchg
xor
enter
imul
ja
mov
test
test
mov
xchg
lds
movl
and
push
pop
push
rclb
sbb
mov
pop
scas
cmpsb
mov
jns
mul
add
inc
cmc
ret
pop
test
xchg
cs
xor
cli
je
popa
cmpsb
jmp
ss
mov
ja
cwtl
or
repz
cmp
in
aaa
aad
pop
fcomp
and
in
scas
shrl
or
jae
sahf
pop
popa
mov
sahf
mov
sti
mov
inc
shlb
inc
xor
in
add
sbb
rcll
cli
hlt
dec
push
imul
out
inc
insl
and
adc
pushf
mov
sub
pop
faddl
dec
roll
sbb
aad
xor
mov
pop
mov
fcompl
fistpl
or
test
push
jo
adc
btr
mov
jl
lds
mov
and
aaa
pop
adc
lret
or
sub
scas
xor
int3
xor
testl
dec
xchg
jmp
notl
mov
jle
xor
adc
add
imul
pop
inc
jmp
out
imull
cmp
int
and
mov
das
repnz
jp
push
nop
outsl
ds
mov
sbb
jg
out
dec
inc
or
mov
adc
pop
sub
clc
mov
sbb
xor
stos
rcll
sbbl
mov
sbb
xor
push
dec
in
xchg
cmpsb
dec
jp
adc
cli
ss
mov
push
jl
mov
and
sub
mov
adc
btr
or
outsl
and
addr16
sub
cmp
pop
cmp
mov
leave
aas
pusha
leave
jne
pop
hlt
and
inc
fmull
pushw
mov
mov
int
push
hlt
jg
loope
dec
les
mov
sub
imul
jnp
sbb
sub
push
fnstenv
pop
cmp
or
pop
sub
mov
or
clc
pop
or
mov
test
pop
cmp
sbb
subl
inc
repnz
scas
mov
dec
sub
subb
mov
sti
mov
js
xchg
sbb
stc
and
sub
in
addr16
and
or
xor
out
adc
movsl
add
lret
sbb
pop
xchg
bound
call
mov
pushf
popa
push
test
js
push
pop
addr16
addl
xchg
xor
scas
test
nop
enter
setns
mov
sbb
jp
shl
mov
xor
loop
in
or
nop
lods
mov
subb
jmp
into
pushf
enter
adc
pusha
push
or
add
mov
in
jge
pop
ret
sub
lods
mov
scas
insb
cmp
test
rclb
out
adc
push
cmp
rol
inc
jg
in
xchg
or
outsl
ror
and
sub
ja
sbb
lds
js
insl
je
jae
xor
aas
stc
pop
adc
popa
sbb
push
in
cmp
out
cmp
call
adc
or
and
sub
and
xchg
stos
popf
add
imul
mov
out
cmp
mov
insb
sbbb
ja
pop
jp
mov
pusha
ds
arpl
xchg
adc
and
pop
dec
mov
es
or
inc
enter
cmp
pop
ror
and
mov
jecxz
and
daa
add
sub
cmp
pop
inc
pop
aas
xchg
jge
pop
jecxz
adc
xchg
push
fadds
cmp
xlat
sub
bnd
test
pusha
cmpsl
pop
xor
pop
scas
stos
lahf
pop
cmp
jmp
and
mov
icebp
jle
jmp
dec
dec
stc
inc
mov
pusha
mov
rcrw
xor
mov
jne
inc
scas
jno
stos
adc
mov
inc
ror
jl
repz
add
push
sub
fisttpll
push
xchg
sahf
or
lcall
daa
loopne
bound
enter
pop
adcb
jbe
dec
fucomi
call
or
jl
inc
pop
mov
add
xor
rolb
jle
xchg
inc
and
pop
stc
xor
addl
push
fsubl
divl
xchg
push
in
push
vpunpckhbw
jle
shrb
fisubrs
sbb
mov
dec
push
rorl
daa
popa
add
imul
cmp
xchg
into
std
cmp
leave
imul
push
ljmp
int
mov
fldz
xor
jle
mov
movsb
jb
mov
mov
push
clc
cmc
pop
push
dec
xchg
jecxz
jae
inc
sar
rclb
cli
daa
push
adc
xor
enter
xor
adc
ficoml
and
rorl
pop
lds
fbstp
stos
cmp
inc
add
movsb
or
dec
std
xchg
dec
fdivl
cmp
jno
out
aad
loope
jg
push
push
xchg
jge
ficompl
xchg
push
xchg
stos
pop
cs
scas
lods
inc
sub
xor
dec
push
mov
decb
fcmove
jbe
lods
lcall
mov
sbb
mov
ds
mov
dec
stos
clc
push
loopne
dec
and
aas
xchg
test
adc
fadd
cmp
xor
xor
int
mov
jne
xor
ss
or
stos
push
rcrl
inc
dec
mov
sub
mov
jnp
push
rcl
rcrl
push
dec
testb
test
sbb
sbb
int
jb
pop
insb
loopne
insl
lea
inc
enter
enter
lret
sbb
stos
js
dec
xor
in
push
cli
sahf
fnstenv
dec
nop
mov
lods
fimuls
mov
pop
stos
jp
xchg
in
push
push
daa
inc
icebp
push
mov
and
sub
mov
int3
inc
push
mov
cld
dec
in
out
pop
arpl
push
pop
popf
cs
jecxz
cltd
sub
gs
jae
stos
xor
jnp
add
adc
mov
ljmp
ja
sti
pop
imul
push
loopne
lock
imul
sbb
sbb
dec
lret
lods
mov
test
mov
leave
mov
jmp
mov
ljmp
push
les
adc
push
scas
dec
xchg
repz
pop
and
lahf
popf
mov
jg
js
out
push
cmp
add
jge
ljmp
movsb
xchg
pop
dec
cmp
loop
sbb
xor
cmp
adc
mov
jbe
inc
pop
dec
mov
or
xor
sbb
xor
insl
mov
jge
xchg
mov
lock
pop
lods
lret
jecxz
imul
aam
jnp
clc
and
filds
inc
mov
pop
repz
pmulhuw
pop
ja
xchg
mov
into
sahf
xchg
sarb
push
push
fs
mov
js,pt
cmp
lds
mov
inc
ficoml
mov
iret
pop
dec
jae
mov
imul
pop
mov
adc
xor
xchg
in
mov
test
or
lds
jge
outsl
mov
je
sub
dec
pop
ficomps
dec
sub
cli
adc
dec
addr16
mov
js
adc
cld
and
xchg
cwtl
lods
out
test
sbb
xlat
jg
jno
ja
push
jl
add
enter
test
in
cs
in
and
in
imul
adc
addr16
roll
add
adc
movsb
scas
dec
sbb
rorl
xchg
cmp
dec
gs
push
lcall
dec
or
inc
mov
cmc
clc
std
jle
rcrb
mov
repnz
dec
bound
mov
ds
xchg
jge
cmpsb
in
int
out
mov
int3
ret
mov
test
fcoml
xchg
adc
popf
jecxz
aas
mov
in
js
sti
andb
jg
in
rolb
jae
rcl
xor
outsl
aam
cmp
and
andl
jae
mov
leave
mov
xchg
mov
lods
test
jle
data16
or
test
fs
push
push
sub
ret
jne
dec
ja
cmpsl
push
rorw
dec
mov
sbb
cmp
aas
pop
lds
mov
lea
dec
int3
ret
sub
ret
sbb
cmpsb
sbb
outsb
clc
jmp
push
jle
sbb
cmc
imul
rcr
and
std
popf
jno
rorb
stc
push
fidivl
insb
outsb
push
ficoms
or
pop
push
repz
cmp
cmp
sub
es
or
cwtl
jg
fwait
into
inc
cmp
sub
mov
cmp
sub
dec
mov
xor
dec
sbb
inc
repnz
sub
dec
mov
xchg
mov
rclb
inc
adc
adc
in
daa
in
mov
fstl
adc
clc
inc
inc
ret
and
fnstcw
repnz
or
jb
jle
cs
outsb
mov
mov
std
mov
push
or
cmpsl
cmp
mov
push
dec
loope
jo
movsl
orl
out
xor
sub
sub
outsb
push
mov
clc
icebp
repz
and
mov
test
and
sbb
and
push
xchg
mov
add
inc
push
ljmp
lahf
sahf
and
push
mov
xlat
push
clc
lret
inc
xor
inc
pop
loope
sbb
xchg
jmp
je
cmp
mov
shll
jge
pop
pusha
mov
jp
imul
dec
push
jb
fwait
std
stc
rsm
inc
xor
mov
mov
mov
and
stc
mov
icebp
insb
sbbl
pop
scas
mov
mov
sbbl
and
cmp
aam
dec
cmp
jb
cs
aas
mov
test
jae
lea
mov
mov
sbb
inc
data16
mov
inc
aas
mov
jae
rolb
push
rolb
cmpsb
adc
in
mov
and
fcmovbe
jle
jae
sbb
pop
fstl
shll
aad
xchg
sub
mov
xchg
adc
shrl
repz
xchg
addb
sahf
imul
popa
adc
test
dec
xchg
xchg
loop
sub
xor
or
jno
out
push
pop
popa
fcoml
push
inc
add
cmovo
popa
mov
mov
out
dec
dec
xchg
sub
enter
mov
xchg
popa
adc
sbb
pop
mov
aad
push
push
idiv
xchg
xchg
fsubrs
ss
test
pop
addl
popaw
or
lea
dec
xor
or
fildl
sbb
mov
xchg
test
test
mov
or
sub
inc
and
xor
lods
sub
and
loopne
fsubrl
xabort
mov
xchg
mov
push
ret
jg
sbb
mov
push
sub
cmpb
mov
add
xchg
mov
xlat
jmp
xor
in
jno
jo,pn
in
shlb
jns
ret
inc
imul
iret
ror
mov
or
dec
gs
mov
shll
cmpsb
push
arpl
inc
adc
mov
jb
arpl
div
mov
sbb
pop
addr16
mov
int
or
add
icebp
push
mov
rolb
cmp
rorl
arpl
cmp
pushf
dec
pop
int
xchg
insl
inc
dec
sbb
adc
push
sub
mov
test
or
in
sbb
dec
or
les
into
popa
das
cvtps2pd
popf
jb
xor
addb
and
push
dec
dec
pushf
sarl
test
xor
mov
mov
mov
and
loope
dec
icebp
ret
pop
and
bound
scas
fwait
mov
ja
or
push
mov
pop
sbb
adc
xchg
jbe
cmpsl
mov
add
sub
enter
mov
sub
inc
mov
out
rcll
cmc
pushf
jmp
pop
std
ror
sbb
fimuls
outsb
loop
sbb
inc
in
in
sub
push
xor
jne
add
xchg
daa
cs
pop
call
push
fstpl
jns
mov
xchg
fmull
das
xor
sarl
imul
mov
sbb
rolb
scas
test
lret
pop
cltd
test
in
cmp
mov
movsb
xchg
repnz
cmp
popa
mov
mov
not
cmpsb
sbb
pusha
cltd
fsts
dec
notl
jmp
repnz
adc
out
add
ds
std
or
mov
mov
sbb
and
loop
xchg
pop
sub
fsubrp
and
pusha
fsts
or
cmc
or
popa
sub
je
or
pop
dec
iret
fidivs
lret
adcl
movsb
pushf
gs
inc
xor
jl
and
cmp
adc
insb
and
subb
ficoml
fsubrp
mov
aad
dec
jp
jg
imul
sbb
mov
mov
js
push
adc
fwait
add
scas
mov
ja
icebp
loope
in
cmc
inc
in
mov
xor
leave
repz
inc
jp
adc
cmp
cmp
pushf
hlt
sti
xor
idiv
jnp
and
sbb
push
pop
ds
out
daa
cvtps2pi
xchg
xchg
les
ljmp
mov
ret
or
xor
lret
cwtl
adc
rolb
imul
enter
dec
xchg
lock
sbb
xor
outsl
out
cwtl
xchg
sbbl
pushf
sub
clc
shl
push
insb
cwtl
scas
mov
inc
mov
jp
imul
adcl
lods
mov
push
cmp
mov
pop
loope
push
fmuls
xchg
outsl
nop
xchg
pop
test
push
jg
mov
and
jle
xlat
ficomps
xor
movsl
sbb
jge
icebp
subl
add
popf
dec
mov
xchg
gs
mov
inc
cmp
or
mov
out
xor
xchg
je
push
imul
sti
cmc
loop
stos
test
mov
repnz
push
mov
mov
ss
pop
inc
or
mov
pop
int3
push
sbb
mov
int
jmp
ljmp
mov
in
xchg
and
jno
aam
mov
rclb
stos
test
jp
and
adc
mov
mov
jbe
push
xor
xor
mov
hlt
ret
inc
mov
xchg
fdivl
cmp
inc
out
fstl
xchg
mov
in
mov
mov
add
adc
out
sub
out
sti
movsb
ljmp
lds
mov
cmp
enter
xor
mov
xchg
mov
imul
dec
xchg
push
je
cs
ret
inc
gs
mov
insb
mov
and
add
push
push
imul
ljmp
cli
ds
dec
jb
inc
ljmp
lahf
imul
push
jbe
sbb
or
scas
jb
test
xlat
movsb
add
shlb
ja
scas
dec
insl
repnz
jo
adc
daa
cmp
loopne
mov
pop
push
ss
jge
pop
jl
mov
push
repz
sub
out
xchg
shll
test
inc
push
loopne
or
cmp
dec
jge
or
stc
cld
outsl
mov
mov
addb
ret
mov
scas
push
mov
fidivrs
out
fs
pop
jg
or
mov
push
icebp
push
in
sti
mov
mov
jle
pushf
lahf
shlb
mov
push
adc
shrl
cmp
orb
movsl
out
out
movsb
sti
cmp
and
pop
mov
scas
ljmp
test
dec
lcall
push
pop
fsubr
sub
or
mov
lahf
cmpsl
or
add
rolb
cwtl
fidivl
rorb
add
sub
mov
idivb
adc
das
pop
ficomps
scas
cltd
add
sub
cmc
icebp
dec
mov
xchg
mov
and
xchg
ds
icebp
int3
mov
push
lods
push
and
mov
mov
xchg
jecxz
fsubs
cmp
jp
jae
pop
and
aaa
pop
loopne
pop
dec
roll
mov
je
mov
repnz
filds
daa
mov
sbb
test
cwtl
fiaddl
push
cmp
addr16
adc
dec
arpl
repnz
pop
jl
test
push
sbb
push
mov
aad
fdivl
rcr
fimull
into
xchg
dec
popa
in
xor
pop
cmp
shr
sbb
or
movsb
repz
cli
mov
mov
pop
mov
xchg
fbld
xchg
sahf
iret
mov
mov
sub
out
stos
pop
adcb
mov
call
dec
sub
nop
xchg
pop
jnp
xchg
sti
or
iret
pusha
test
add
incl
leave
or
adc
push
vpandn
inc
lods
data16
xchg
and
sbb
or
and
xorl
aas
mov
insl
mov
rcll
das
push
sub
bound
lods
inc
mov
outsl
xchg
movsl
pop
push
cmp
int
andb
mov
or
add
out
lahf
mov
jge
cmp
pop
fimuls
ljmp
fiadds
lds
add
stc
clc
jmp
sbb
inc
sbb
mov
adc
mov
test
sub
inc
adc
insb
fcoms
sbb
lret
shlb
das
lea
shll
mov
in
sarb
mov
mov
jo
adcb
fdivrl
mov
cltd
or
cmpsl
push
or
mov
ljmp
xor
sbb
add
mov
jne
cmp
xlat
xchg
lret
mov
inc
sub
mov
lock
pop
shrd
jo
fisubrs
pop
jmp
or
mov
mov
or
mov
ret
cld
xor
ss
stos
lcall
inc
scas
js
xchg
mov
adc
push
adc
lret
pop
mov
int
loopne
push
js
ss
push
and
outsb
imul
mov
jg
addr16
sub
pop
popa
mov
jnp
jp
les
mov
loopne
sub
in
dec
gs
out
out
or
mov
or
xor
or
mov
icebp
cmc
lock
push
dec
mov
popl
pop
add
jne
cld
scas
fisubl
mov
or
push
jnp
stos
sub
or
les
xchg
push
mov
scas
repz
push
xchg
sbb
outsb
jnp
lds
loop
icebp
xchg
ss
pusha
into
insl
stos
mov
movsl
lea
or
data16
cmp
pop
sub
or
mov
xlat
cs
out
xchg
ljmp
out
sub
mov
div
mov
mov
lock
out
lock
cld
loop
xor
cmpsb
inc
or
jp
js
sbb
push
ja
jmp
fidivs
int3
adc
add
sub
scas
sbb
xor
icebp
loop
popf
fldenv
sti
cmp
xor
and
adc
mov
mov
cmpsl
jl
imul
pop
add
dec
popf
int
pop
insb
cltd
cmp
jbe
aam
mov
decl
sti
in
hlt
push
idivl
arpl
icebp
jnp
and
cmp
push
dec
mov
mov
loop
jl
jae
mov
adc
xor
push
mov
xchg
insl
add
cmp
push
lret
xchg
push
lret
lret
xlat
push
pushf
sub
mov
cmp
sbb
adc
mov
cmp
xor
stos
pushf
push
nop
or
cld
push
and
loop
adc
xchg
add
and
sbb
hlt
enter
xor
xchg
das
arpl
or
mov
cmp
inc
jb
push
cmpsb
jle
push
jns
andl
mov
mov
sub
mov
jnp
jo
inc
ja
shl
cwtl
push
gs
cmp
inc
pop
dec
or
std
push
inc
inc
sub
cwtl
push
out
stc
xchg
mov
push
push
pop
cmp
mov
roll
mov
ljmp
loopne
jb
sub
lock
ret
xor
aaa
jle
adc
scas
jnp
mov
dec
cmp
out
ljmp
mov
repz
cld
lods
std
jb
cmp
jne
sti
inc
xlat
scas
andb
call
mov
scas
pop
add
pop
adc
pop
inc
pushl
xchg
inc
inc
orb
add
bound
add
and
add
mov
into
xor
cmp
sbb
iret
orl
mov
sbb
add
sub
cmpsl
mov
out
out
mov
mov
clc
clc
cld
test
sub
jle
cltd
gs
daa
test
cmp
loopne
sbb
mov
js
nop
inc
sbb
xchg
or
pop
sar
sub
fmul
fidivrs
dec
jmp
cmp
int
pop
push
fidivrl
in
jno
scas
mov
push
sbb
icebp
out
cs
negl
je
add
inc
pop
sub
dec
add
pop
jl
bound
iret
cs
push
pop
add
cwtl
pop
ss
jne
mov
inc
repz
sahf
cmp
mov
mov
dec
sahf
or
lret
nop
jbe
aad
sbb
addr16
out
mov
test
xchg
dec
ficompl
mov
std
loop
jno
jecxz
sbb
test
bound
mov
push
and
cmp
or
xchg
push
in
loop
sbb
fs
hlt
adc
adc
maxps
or
insb
in
and
pop
or
call
push
fcmovnu
xlat
loop
dec
loop,pt
je
and
mov
sub
mov
xor
pop
pushl
push
lret
mov
iret
lret
and
imul
sbb
sbb
int
cmp
in
faddl
iret
gs
mov
add
aam
scas
ret
into
loope
mov
xchg
or
inc
mov
mov
dec
enter
rcll
add
pop
les
inc
xchg
fsubp
xchg
mov
push
cmpsl
insl
idivl
ds
xorb
add
clc
dec
callw
lea
ja
jp
insl
mov
pushf
adc
enter
aad
fdivl
add
lock
dec
mov
outsb
dec
addr16
lods
xor
ret
outsb
lock
xchg
push
test
pop
out
test
jmp
jle
push
int
insb
mov
dec
dec
insl
mov
call
jb
ds
add
shlb
jmp
sbb
sub
mov
rcr
sub
mov
mov
cmp
decl
xchg
sbb
repz
xchg
pop
cli
jecxz
add
int
jmp
mov
and
outsl
cmp
lods
mov
push
push
sqrtps
push
dec
sbb
adc
dec
leave
ja
ret
mov
jle
fimuls
in
xchg
sub
mov
cmpsl
movsl
mov
xor
xchg
cmpsb
xchg
jl
add
mov
dec
or
incb
and
dec
sub
data16
push
mov
mov
jae
jno
testb
xchg
icebp
fimuls
sti
insl
xor
or
imul
and
mov
out
jns
data16
and
ds
je
rcrb
lock
mov
push
adc
or
in
dec
sbb
adc
mov
mov
mov
inc
iret
pop
popa
enter
jno
mov
cmp
movsb
jnp
lret
jge
jo
subl
movsl
cmp
data16
mov
cld
sbb
enter
mov
sarb
aam
inc
ret
gs
mov
jg
adc
out
dec
pop
sbb
pop
and
ja
push
jl
sub
pushf
sub
mov
adc
jb
jns
cmc
cltd
pop
ja
inc
jno
stc
setae
or
xchg
popl
push
sub
es
and
mov
xchg
inc
movb
bound
test
jmp
dec
and
aas
shl
lret
cmpsb
and
aam
rorb
movsl
scas
in
std
sub
cld
xchg
cmpsb
inc
das
adc
sbb
idivb
and
sarb
iret
xor
and
aas
jo
test
in
push
xchg
push
lds
pop
cwtl
cmp
and
push
push
mov
xor
mov
daa
pushf
add
addr16
jo
cmp
push
aam
sahf
gs
jmp
sub
insb
test
jne
popa
or
dec
test
js
test
aaa
push
jge
lcall
fstp
pop
mov
lock
jne
jnp
in
jg
cltd
stos
pop
sbb
xchg
sbb
and
scas
ds
jl
sbb
push
orl
add
push
cmovge
mov
fnsave
xor
sbb
insb
enter
adc
sbb
sub
jge
insl
popa
dec
pop
repz
inc
cmpsb
jecxz,pt
or
xchg
mov
ret
sbb
and
je
fdivs
add
cs
fsqrt
dec
mov
sarb
jle
push
jo
push
push
lcall
xchg
pop
xchg
shlb
movsb
js
insb
and
adc
dec
es
lods
outsl
in
cmpsl
lret
cltd
sub
add
pop
insb
jae
aaa
dec
push
sahf
mov
iret
mov
icebp
or
fists
in
idivl
push
or
fnstcw
inc
loope
pusha
push
stos
cltd
repnz
cmp
imul
xchg
repnz
sub
loope
push
inc
and
cmp
mov
ficompl
lea
ja
mov
insl
and
cltd
pop
push
enter
ss
imul
ljmp
sti
or
iret
sub
cmp
jns
jnp
dec
jae
inc
arpl
jae
pop
jbe
arpl
pop
scas
fptan
ljmp
push
jb
insb
orb
pop
mov
xlat
dec
sub
mov
clc
xchg
lcall
xchg
mov
add
out
xchg
push
fildll
sti
dec
ss
lds
adc
lret
push
addr16
add
repz
cli
xorb
insb
inc
xor
push
arpl
jp
sbbb
les
mov
out
jnp
pop
popl
dec
popf
mov
clc
xchg
scas
cmp
daa
xchg
popf
shlb
sbb
inc
sbb
gs
jle
test
in
repz
cmp
arpl
mov
xchg
dec
adc
mov
mov
add
push
xchg
push
popf
dec
outsl
imul
mov
pop
fwait
mov
cmc
stos
lret
es
adc
cmc
xor
mov
pop
int3
adc
fisttps
loope
xchg
roll
cltd
imul
iret
outsl
xor
add
lock
leave
fnstenv
pop
pop
js
and
inc
lods
cli
xor
jne
push
out
icebp
push
xchg
movsl
jae
mov
repz
dec
push
sbb
and
lds
mov
xor
shrb
inc
pusha
shr
cmp
in
ja
repnz
xchg
pop
insl
add
test
jle
out
xor
aam
jb
adc
or
or
pop
pushf
or
arpl
fdivrs
pop
xlat
in
and
gs
sbb
push
pop
add
dec
in
int
jmp
shl
lahf
jp
pop
inc
int
ret
dec
or
sub
xchg
and
add
push
mov
xor
lds
jl
je
cmp
dec
fsts
les
fnstenv
pusha
sbb
add
mov
adc
push
mov
sub
dec
inc
popf
jge
sbb
scas
jecxz
xchg
movsl
push
mov
inc
idivb
xchg
sub
aas
mov
inc
in
aad
addr16
leave
add
push
or
filds
roll
xor
mov
push
repnz
jnp
adc
lea
xor
adc
popf
jg
mov
mov
or
xor
jmp
inc
test
outsb
std
or
mov
data16
les
sub
adc
mov
lock
or
lock
into
mov
push
cmp
sub
out
add
dec
pop
loope
pop
cmp
repnz
cmp
fidivs
es
into
pop
pusha
push
pushf
iret
dec
jns
push
push
rcll
adc
leave
ds
ss
mov
lds
fwait
mov
jne
inc
ret
push
pop
or
jmp
pushf
sub
test
mov
insl
int
cld
int
loope
add
cltd
sub
test
sti
aad
and
test
jmp
test
push
add
sahf
push
shll
lcall
out
lcall
ret
cmpsl
add
push
arpl
test
cmp
fcompl
fwait
cltd
inc
je
fstps
and
daa
adc
xlat
add
jmp
dec
aam
sbb
xchg
lret
cmp
xchg
pop
jge
mov
dec
scas
scas
xchg
out
repnz
bound
ss
adc
addl
divl
pop
jmp
inc
sub
and
fsubrl
fists
or
xor
sarl
and
movsb
jg
shlb
or
js
movsl
mov
mov
shlb
sti
fsubrl
xorps
sub
fwait
pop
popf
dec
inc
arpl
jmp
xor
popf
lods
or
idivl
lods
pop
frstor
xor
hlt
xchg
fsubr
aaa
es
mov
adc
push
sti
int
mov
sbb
clc
and
push
rorb
call
mov
out
addr16
aaa
xchg
arpl
mov
invd
stos
test
or
mov
jae
cmp
mov
pop
mov
push
aas
js
and
inc
push
cli
mov
xor
enter
push
dec
mov
xchg
cmp
xor
fyl2xp1
adc
pop
scas
imul
push
in
test
iret
mov
xchg
outsl
loop
lods
sbb
adc
aaa
sub
xorl
insl
xor
arpl
test
in
mov
loopne
shll
dec
aas
dec
hlt
sbb
xor
adc
ljmp
fsubrs
icebp
and
xchg
xorl
int3
lcall
mov
mov
stos
push
or
mov
jp
mov
lods
cmp
xor
lods
sbb
cmp
repnz
pop
ret
pop
dec
scas
cmc
mov
xchg
add
mov
movl
daa
arpl
ret
mov
int
pusha
popa
je
sbb
mov
push
mov
sbb
das
outsl
je
mov
test
movsl
ficoml
xchg
push
out
xor
rcr
cwtl
stc
movsl
xchg
xor
cmp
icebp
pop
in
jnp
jg
mov
mov
repnz
fcompl
loopne
sub
xchg
and
lcall
mov
push
andb
cwtl
shll
or
leave
pop
pop
jns
dec
jns
movb
inc
pop
pop
sbb
push
sbb
addr16
dec
jno
sbbl
repz
and
mov
jmp
push
aaa
pop
repz
push
loop
push
ljmp
mov
inc
pop
and
fstpl
jno
and
jae
pop
jbe
sbb
int
iret
loope
xchg
mov
push
out
cmpsb
fidivl
inc
sbb
shrd
shrb
adc
stos
xchg
jo
mov
jg
lret
mov
arpl
ret
popa
jae
xchg
inc
sub
pushl
subl
xlat
inc
nop
sarb
pop
or
out
push
stos
xchg
out
dec
mov
mov
leave
movsl
fistpll
dec
mov
xor
jp
mov
sub
into
mov
cmp
push
aad
mov
mov
out
cmpsb
push
push
jg
in
adc
xor
ljmp
incl
jl
xor
movsb
sbb
stos
fcmovnu
out
fnstsw
and
mov
imul
pop
rorb
jl
pmuludq
cli
mov
sbb
arpl
iret
fisttpl
push
inc
out
mov
or
scas
xor
adc
cmc
rorb
xchg
ficompl
test
xchg
mov
mov
sub
jbe
mov
cmc
outsl
sbb
icebp
mov
es
fiadds
mov
inc
and
testl
fisttpll
mov
movsl
add
and
stc
repnz
cs
dec
sbb
out
lods
out
sub
sbb
lcall
ljmp
ljmp
cld
and
dec
daa
fildll
dec
idiv
sub
jnp
mov
and
jns
adc
push
shl
mov
in
fwait
cmp
insb
pushf
repz
out
rcl
mov
pusha
pushf
cmpsb
mov
adc
lods
and
or
and
xor
pop
dec
notb
filds
imul
sub
in
sbb
cmc
and
in
int3
xchg
xor
cmp
into
dec
mov
adc
inc
aas
mov
add
rorl
or
imul
int
stos
or
aaa
mov
stc
inc
mov
push
push
or
xor
cmp
mov
stos
sbb
sahf
mov
in
sbb
mov
loop
cmp
sarl
fnstcw
mov
pop
ja
mov
add
jp
push
call
pop
and
mov
lcall
mov
mov
pusha
nop
jecxz
aam
pop
sbb
shlb
repz
mov
sbb
push
sub
push
sub
adc
mov
or
mov
adc
pop
data16
fdivrl
sbb
jbe
jle
lea
fucomi
dec
lret
divl
sub
pop
and
pop
into
xor
add
lock
fwait
xor
jg
pop
pop
adc
popf
mov
or
adc
adc
test
and
jp
push
adcl
pop
bound
scas
or
in
xchg
adc
sub
addr16
cld
into
inc
fiadds
adc
orb
cmp
push
into
mov
outsb
addr16
pop
cmpsl
out
cli
je
leave
jo
shll
out
lcall
test
jne
test
mov
test
push
cmp
ror
cmp
pop
cmpsl
lret
adc
cmp
aaa
gs
mov
sbb
loopne
ds
or
popf
sbb
loop
les
sete
pop
cmp
repnz
aam
sub
andb
cmpsl
testl
mov
push
and
popfw
nop
and
orl
lock
popa
xor
or
repz
jb
inc
jnp
sub
sub
dec
adc
jg
mov
lods
loop
inc
add
bnd
lret
mov
jnp
aam
jmp
int
jne
pop
sbb
sub
mov
lahf
lcall
xor
add
sbb
and
out
dec
pop
jb
sbb
popa
clc
es
aam
mov
inc
scas
iret
imul
addr16
mov
mov
push
cmp
sub
sbb
shlb
mov
rcll
pop
pop
jecxz
or
dec
mov
mov
lcall
inc
ficompl
cmp
jbe
repz
shl
test
cltd
sub
mov
ds
mov
js
pop
outsl
cmp
add
ljmp
pop
mov
push
leave
sbb
inc
sbb
sbb
test
pop
jp
test
data16
add
gs
mov
xchg
mov
out
pop
or
xchg
dec
fdivp
pop
mov
rol
lods
jg
push
xchg
daa
adcl
sub
into
in
jae
ljmp
push
pop
outsb
ret
lods
jmp
cmp
cmpsb
mov
jmp
les
mov
rcr
sub
sbb
add
add
cmc
imul
clc
popf
jecxz
pop
push
or
mov
pusha
test
cmp
outsb
movsb
and
inc
mov
repz
addl
adc
dec
and
push
call
imull
mov
out
pop
xorl
cmp
lods
into
das
dec
movsb
xlat
xchg
bound
xchg
stos
adc
push
arpl
jecxz
dec
mov
jecxz
lret
or
outsl
test
jl
or
jno
stc
adc
add
lea
dec
jl
fists
notl
cltd
mov
or
xchg
jnp
and
dec
leave
and
mov
int
dec
lods
add
xchg
pop
int3
fnstcw
sub
aas
popf
xor
and
aad
mov
sub
test
lods
leave
fs
aam
cmp
ljmp
das
inc
mov
mov
cli
decl
pop
or
xchg
xor
int
jns
and
mov
daa
inc
pushf
cltd
add
bsr
roll
inc
mov
fmull
jno
nop
test
movsb
addr16
pop
mov
mov
jne
cmp
aas
sahf
jae
sbb
jmp
sbb
and
daa
stos
fldl
rep
cmp
mov
push
bnd
stc
fs
jle
mov
mov
pop
push
lcall
das
test
pop
and
mov
filds
fldl
xor
mov
leave
ss
pop
fwait
or
je
out
pop
mov
and
pusha
sub
inc
push
arpl
sub
addr16
stc
and
mov
mov
mov
pusha
pop
xor
andl
pop
imul
ljmp
pop
popf
xchg
loop
cmpl
mov
cld
test
sub
sbb
xchg
dec
inc
and
dec
and
movsb
xchg
and
lds
sbb
stos
adc
cld
jecxz
movsb
pop
inc
cmpsb
jl
mov
sbb
jnp
pusha
sub
xor
xchg
pop
outsl
push
cmp
dec
sub
and
in
pusha
cld
fcomps
push
or
aaa
sti
pop
fstpl
xchg
xchg
sbb
lret
fdivrs
fcomi
lock
js
jp
mov
pop
mov
imul
pushf
adc
add
mov
adc
adc
fs
xchg
mov
mov
call
xor
jge
fmull
sahf
fmull
xchg
cld
mov
xchg
mov
xor
test
add
jbe
add
fwait
mov
dec
iret
push
sbb
pop
mov
in
xlat
iret
xchg
les
cmpsb
jg
and
sarb
pop
sbb
stos
gs
mov
dec
mov
das
mov
out
push
xchg
les
inc
cmp
mov
xchg
test
jge
or
call
add
call
push
adc
and
cwtl
sub
das
ss
loope
jae
scas
sub
movl
popf
mov
lods
sbb
mov
popa
lcall
pop
sbbl
lock
dec
adc
or
loop
push
add
inc
dec
clc
ljmp
idivl
mov
add
fsub
je
jns
push
dec
adc
adc
dec
jns
imul
lods
inc
dec
xchg
loopne
aaa
push
insl
mov
sub
cmp
inc
sti
xrelease
push
rcll
jae
jne
push
inc
and
push
data16
mov
sub
stos
cmpsl
fndisi(8087
dec
dec
dec
es
lods
mov
mov
cld
or
sbb
adc
js
mov
lcall
stos
adc
iret
jp
cmp
test
arpl
inc
sbb
shll
fiaddl
fsubp
add
icebp
movsb
or
lea
lds
xlat
sbbb
sbb
rdpmc
insl
js
cmpsl
xor
add
jb
pop
mov
hlt
outsl
mov
aad
lock
sbb
loope
imul
outsb
mov
xor
scas
mov
les
mov
movl
call
xor
aad
stos
cmpsl
in
das
add
xchg
test
das
idivl
mov
mov
add
js
add
mov
lret
push
sbb
cwtl
fwait
dec
clc
adc
jno
jecxz
push
sti
sar
jns
mov
in
movsl
push
xchg
sti
js
mov
call
dec
loope
and
lods
sub
insl
add
test
and
jecxz
add
daa
pop
gs
add
idivb
pop
popf
cmp
or
pop
or
js
js
and
insb
outsb
lods
mov
out
jae
call
daa
add
jne
popf
sbb
or
pop
xor
into
inc
cli
and
inc
shrd
cmp
mov
push
and
test
js
punpckhbw
jns
movsb
sub
imul
cmp
inc
mov
ljmp
ds
lods
fdivs
cmp
icebp
inc
fsts
and
mov
push
xchg
popf
inc
mov
je
adc
adc
dec
lcall
in
es
or
ret
mov
out
insb
mov
cmpsb
inc
sbb
lock
pop
lret
dec
loop
js
lret
cld
push
pop
sub
imul
push
push
mov
sbb
cld
xor
icebp
mov
fimull
xor
adc
jl
fsubrp
loop
and
and
daa
cmp
ret
lahf
mov
inc
mov
jns
xor
insb
mov
sbb
mov
xor
movsl
cltd
mov
test
push
add
dec
adc
lret
add
jle
cmp
cmp
pop
mov
iret
int
add
lods
or
push
stos
jl
pop
mov
cmp
and
xorl
and
jbe
mov
std
mov
stc
and
js
es
out
mov
sub
in
inc
mov
pusha
sar
imul
and
out
in
pop
mov
rorb
fsub
push
popa
jmp
ja
jl
dec
rcr
cltd
imul
nop
push
and
mov
push
push
flds
push
clc
stos
fcmovnb
mov
idivl
sbb
push
call
hlt
ret
aaa
jmp
fistps
fidivl
jl
subb
ret
and
addr16
inc
jb
sub
cld
dec
push
popf
testl
add
mov
int3
outsb
adc
mov
repnz
rcl
inc
or
cmc
push
call
xchg
test
js
xchg
loope
sbb
aam
sti
adc
stc
aam
imul
imul
inc
inc
addr16
xchg
data16
inc
mov
hlt
mov
mov
jbe
mulb
jmp
in
cli
ljmp
cmp
sbb
das
xchg
gs
jno
jmp
dec
pop
pop
roll
sbb
mov
ss
std
or
movsl
iret
fimuls
insb
mov
dec
clc
lret
rcll
roll
mov
clc
movsl
mov
pusha
xor
push
fisubl
and
scas
cli
pop
sbb
lock
test
gs
mov
sbb
ljmp
fnstcw
negl
jns
adc
pop
xor
es
mov
in
push
scas
lods
cmp
add
inc
cld
daa
bound
data16
mov
test
les
xor
fcomip
pop
es
sbb
lahf
pop
push
out
sub
shlb
int3
jmp
stos
jle
decb
mov
mov
jnp
sbb
rorb
roll
add
mov
xor
jo
jge
icebp
daa
sbb
mov
inc
das
sbb
pop
icebp
mov
xlat
icebp
inc
imul
push
xor
sbb
outsl
sbb
aaa
mov
cmp
sub
inc
add
dec
or
call
jnp
cmp
dec
in
pop
mov
push
jne
pop
aad
jmp
or
sbb
mov
mov
add
mov
cmpsl
push
pop
mov
adc
push
out
and
adc
jg
bound
fcmovnbe
xlat
jg
mov
movsb
movsl
xor
or
pop
fbstp
xchg
sub
pop
mov
pop
mov
mov
test
test
je
adc
mulb
fs
adc
pop
es
and
adc
adc
andl
andl
je
mov
cs
push
mov
jg
in
dec
pushf
movsb
loop
mov
pop
pop
sub
pop
fs
nop
push
jo
mov
mov
insl
pop
daa
imul
in
mov
pop
jle
mov
out
ficompl
fstl
repnz
mov
outsb
inc
ret
xchg
and
popa
leave
data16
pop
cli
jo
dec
in
inc
adc
sbb
inc
cmp
clc
mov
mov
in
and
cmp
lret
stos
adc
xchg
ss
pop
sub
addr16
xchg
push
sbb
mov
popa
xor
jne
fimuls
mulb
hlt
in
addb
or
add
mov
mov
cmp
cld
sahf
loope
sub
mov
ret
daa
lret
inc
xchg
adc
in
and
and
mov
das
push
pop
or
loope
and
jg
jns
hlt
mov
scas
je
not
mov
fbld
pop
enter
insl
and
cli
mov
addr16
and
fisttpll
push
mov
fldl
add
xor
pop
pop
sub
sub
mov
push
sub
in
iret
pop
xchg
sbb
cld
fstpl
push
insl
inc
dec
jecxz
dec
pop
jbe
mov
scas
sbb
decb
add
shll
andb
outsb
and
jb
push
andl
pop
mov
xchg
test
ljmp
cmp
clc
and
outsb
push
jno
cmp
cmpb
mov
popf
dec
testl
scas
xchg
adc
mov
xchg
sbb
mov
or
cmpsl
xchg
aas
shr
and
or
sub
out
adc
test
push
in
mov
and
lods
loope
adc
jbe
dec
or
arpl
pushf
lcall
jne
sub
add
mov
outsb
bound
push
pop
sub
lods
mov
sbb
cmp
bound
xor
cmp
mov
outsb
rcrb
mov
arpl
sub
test
pop
dec
cmp
fwait
insb
stos
and
shrb
insb
test
fcomi
inc
cmc
pop
jl
fs
xor
mov
cmpsl
addr16
jecxz
ret
or
jle
dec
lahf
adc
test
les
adc
lea
in
mov
push
ret
fdivs
lock
or
ret
test
incl
loop
imul
enter
mov
mov
sub
add
roll
mov
imul
jmp
mov
outsb
aam
lahf
inc
or
adc
push
repnz
fcom
jl
and
mov
mov
xchg
scas
insl
adc
stos
loopne
lods
adc
push
and
inc
xchg
xorl
add
and
fstl
xchg
lahf
sub
sub
mov
mov
push
std
xlat
or
inc
cld
fsubrl
mov
adc
jecxz
iret
xor
sarl
fcmovnb
repz
or
push
in
mov
xor
jne
cmpsb
jecxz
xor
fisubrs
pop
xlat
jl
sub
rcll
iret
pop
jbe
pop
and
xrelease
mov
sub
lods
pop
jge
cmc
xchg
inc
inc
jno
mov
mov
into
push
xchg
lea
and
idivl
jl
mov
cwtl
jnp
in
inc
sti
jmp
jbe
in
sbb
xchg
pushf
inc
pop
mov
test
xor
push
pop
jo
mov
jb
stos
xor
jnp
movsb
call
insl
pop
aas
stos
mov
xchg
pop
mov
inc
test
ljmp
data16
push
orb
mov
cltd
cmp
addr16
mov
ss
add
fs
pop
pop
repnz
xor
adc
fcoms
cmp
sbb
roll
fisttps
sbb
mov
mov
mov
xchg
xor
adc
sbb
cmovl
popf
mov
aaa
sahf
add
stos
in
pop
cmp
clc
or
add
pop
std
push
pop
cmpsb
stos
daa
inc
or
out
dec
cmp
icebp
mov
daa
popa
or
mov
mov
mov
and
insb
push
lods
lock
mov
mov
in
adc
sbb
pop
bound
cld
test
xor
sub
add
adc
fildll
xor
xor
sbb
sub
push
inc
pop
mov
in
repz
test
jge
lock
das
in
ds
adc
push
pusha
leave
stc
fs
mov
fs
insl
cmp
mov
ja
and
lcall
push
enter
cli
jmp
mov
or
call
clc
in
and
push
pop
sub
bnd
xchg
inc
jecxz
jp
aam
mov
lahf
lea
mov
cmp
jp
out
sahf
pop
sub
call
cmpsl
movsl
pop
dec
inc
movsb
xor
mov
or
or
jle
loopne
repz
in
mov
push
lret
pop
call
fcoml
add
ret
dec
dec
add
mov
cmpl
pop
and
inc
pop
dec
add
jno
js
sbb
push
jbe
and
inc
xor
out
push
clc
xor
jecxz
add
push
leave
and
lods
jbe
inc
dec
inc
mov
sbb
sub
mov
adc
jno
test
repz
or
hlt
dec
xchg
mov
dec
imulb
jno
xchg
inc
mov
xor
bound
inc
fcomps
cld
sbb
add
aad
mov
andl
pop
cmp
jo
repz
ja
jg
scas
jle
test
jge
fwait
cwtl
pop
adc
mov
and
divb
mov
lods
lds
sbb
push
jle
stos
in
xor
ja
test
outsb
pop
adc
jg
pop
iret
out
xchg
movsb
or
add
push
and
push
test
arpl
xor
lret
imul
leave
xchg
in
call
adc
sbb
mov
jbe
add
sub
dec
gs
popf
add
jno
cltd
cmp
je
sub
jne
pop
adc
stos
xchg
test
stos
cmp
push
sbb
loope
shrb
jae
mov
add
sub
call
gs
add
addr16
mov
inc
inc
cmc
pop
shl
mov
out
rorb
push
fldcw
mov
pop
jo
paddb
andb
imull
push
ljmp
rcrb
in
pop
fildll
gs
xchg
cmp
mov
pop
daa
aas
jno
pusha
arpl
test
inc
cltd
inc
mov
fwait
fs
ss
xchg
adc
cmp
jle
push
repnz
jae
xor
jg
icebp
leave
jo
les
test
cmc
cmpl
jns
ret
repnz
pop
adc
pushf
adc
mov
rcll
push
icebp
nop
pop
cltd
and
sub
cmp
loop
stos
jbe
sub
lods
jmp
mov
outsl
shlb
testb
lds
add
es
lods
jne
or
xor
jl
push
and
inc
daa
test
and
fisttpll
mov
xchg
jp
dec
and
and
addr16
or
jp
fdivrl
popf
outsl
fmuls
out
push
fs
in
mov
std
call
pop
into
lahf
imul
pop
inc
xchg
jb
jb
cld
scas
je
insl
jl
cwtl
flds
nop
mov
cwtl
lahf
mov
mov
pop
inc
sub
pop
sub
ret
popa
dec
testl
addr16
or
cld
jns
test
cltd
sub
jno
or
xchg
repz
stos
ja
sbb
add
dec
jl
push
jge
arpl
fcmovne
xchg
jmp
int
mov
rcr
push
cmp
cmp
pop
push
push
sbb
sub
or
add
loope
xchg
dec
jg
xchg
cwtl
inc
add
add
popf
xchg
pop
inc
xor
xor
mov
imul
rcrl
test
sub
xchg
or
pushf
test
clc
cmp
pop
scas
mov
xor
inc
ja
push
inc
arpl
push
pop
adc
add
imul
push
loopne
test
push
movsl
xchg
cmp
out
movsb
push
mov
cmpsb
dec
mov
sub
xchg
seta
dec
mov
mov
in
adc
cmpsl
fmul
jl
shlb
sub
pushl
inc
lods
mov
sbb
sbb
fbld
pop
or
push
mov
push
pop
dec
std
jno
jnp
inc
xchg
sub
in
lods
push
orb
subl
int
ud1
mov
add
lret
mov
dec
pop
mov
cltd
jb
sub
aad
outsb
mov
nop
pop
and
pop
adc
xchg
repz
cmpsb
int
enter
jmp
pop
mov
rorb
mov
pop
lods
sub
cld
jo
mov
repz
cmpsb
jmp
fwait
dec
adc
jno
test
sbb
out
cmpsb
sub
or
and
mov
fstpt
mov
bsf
pop
push
adc
mov
push
xchg
hlt
mov
xorb
xchg
sbb
idivb
je
cld
jae
lods
sbb
das
inc
xchg
int
mov
icebp
xorl
mov
or
enter
mov
xchg
scas
cmp
test
orl
and
inc
push
or
cmp
inc
or
mov
lds
cld
scas
push
or
sub
jne
inc
pop
add
or
jmp
inc
xchg
push
pop
adc
imulb
in
mov
cs
push
popa
inc
lds
aad
push
imul
mov
dec
fdiv
or
cli
in
pop
repz
loope
cmpsl
sbb
or
xor
xchg
mov
aaa
scas
mov
arpl
js
and
inc
pusha
lods
cmpsl
cli
push
in
inc
or
fnstcw
ja
enter
call
test
pop
fldenv
fwait
mov
pop
aam
sbb
dec
xor
sbb
ja
roll
or
insb
mov
out
outsl
or
imul
mov
fbstp
sbbb
dec
push
rolb
and
out
inc
in
std
shlb
jl
repnz
lods
das
es
mov
push
or
jmp
inc
int
je
es
jge
adc
pop
in
cmp
mov
scas
or
aaa
int
mov
hlt
dec
mov
cmp
mov
lea
mov
xlat
loopne
mov
arpl
adc
ja
popf
std
mov
mov
fbstp
sbbb
mov
aas
xlat
test
jge
addr16
shrl
inc
insl
movb
cmc
add
or
jl
iret
xchg
xor
pushf
pop
shrl
add
sbb
sbb
add
cltd
scas
or
xchg
cltd
sub
sub
shll
daa
dec
xor
jg
addl
xchg
lods
shlb
fdivr
fistl
and
mov
xor
nop
subb
les
imul
pop
and
sub
loop
pusha
mov
xchg
jnp
test
cmp
loopne
push
add
movsl
xchg
mov
ss
push
rcrb
jg
lods
sbb
pusha
fs
cmp
mov
mov
dec
jle
scas
rolb
repnz
sti
or
pushf
lea
jle
sbb
pop
js
insl
test
sarb
mov
and
adc
add
imul
xor
adc
or
mov
fnstcw
nop
jg
or
cmp
ja
and
pop
push
movsb
psrad
pop
mov
scas
add
insl
sbb
or
arpl
jp
xlat
add
inc
cmpsl
cmp
sub
out
repz
fistpl
push
push
ret
push
adc
test
mov
xchg
shlb
cld
sbb
cmpsb
icebp
push
ret
lds
stos
dec
adc
xorb
pop
in
push
insb
pop
lea
into
xchg
pop
je
pop
and
mov
insb
repnz
mov
adc
test
cmc
cld
mov
jp
popf
mov
pop
sub
jnp
loop
jb
dec
into
rcll
lret
andb
push
jo
cmc
and
push
add
dec
aas
or
or
rcl
ljmp
push
enter
add
push
fisttps
pop
popa
out
adcb
xchg
sub
popa
xchg
popa
loope
bound
add
popa
sub
enter
xchg
sub
push
loopne
cli
push
int3
sub
cmp
sub
jmp
inc
fcmovnbe
rcl
sub
leave
push
insl
push
imul
jns
shlw
ja
jg
push
cmpb
mov
mov
push
cld
pop
or
push
test
mov
sub
out
clc
aam
or
dec
out
add
mov
clc
and
sbb
movb
imul
add
pop
dec
xchg
in
loope
mov
enter
adc
xchg
mov
in
jle
aaa
pop
dec
add
lahf
pop
push
das
ljmp
cld
jbe
xor
xorb
mov
push
aam
sbbl
movsl
lock
divb
push
push
mov
aam
jno
sbb
outsl
scas
push
jb
in
sbb
rcrl
ret
lret
ds
xchg
fistpll
pop
inc
and
jne
and
lahf
pop
xchg
int
add
popa
roll
mov
cmp
xor
imul
mov
jg
dec
jno
movsl
movsl
cmpsb
pop
andl
loop
call
mov
push
push
jecxz
dec
fsubrl
stc
pop
inc
pop
loop
inc
jnp
cld
inc
aam
mov
mov
jl
std
fs
jmp
in
fistl
pop
insl
jbe
mov
xchg
cltd
mov
in
or
shrb
cltd
popa
dec
xchg
pop
inc
out
lcall
loop
repnz
or
pop
mov
jge
adc
imul
fisttps
cmp
lahf
mov
inc
ficoml
push
push
jnp
push
xchg
jne
arpl
in
testb
out
lret
rcrl
iret
add
mov
sarl
adc
mov
jo
imul
les
pushf
fwait
in
adcl
gs
mov
pop
das
insb
jnp
loop
mov
jg
out
shll
or
inc
mov
out
xor
xor
inc
jne
pop
xor
mov
loopne
jne
in
and
inc
sub
cmp
test
fmuls
dec
testl
dec
rorb
daa
sub
sbb
xchg
cmc
movntq
insb
adc
sbb
or
push
inc
dec
and
and
mov
add
in
fimull
iret
icebp
mov
pop
jb
fiadds
nop
xor
pushf
sbb
in
out
xchg
adc
aam
inc
inc
dec
push
add
imul
and
divb
inc
push
mov
jne
xchg
data16
add
ret
dec
mov
and
add
nop
outsb
add
xchg
in
std
sbb
or
inc
add
lcall
push
sbb
dec
call
mov
aad
bound
xchg
xchg
arpl
inc
fnsave
mov
pop
aad
in
push
roll
mov
mov
pop
sbb
jo
fwait
pop
addr16
in
inc
xchg
aad
adc
cmp
and
fstp
mov
mov
pop
scas
adc
and
fs
lea
popa
fldcw
inc
cli
add
fcoms
js
das
jo
lahf
mov
inc
dec
imul
sub
mov
cwtl
fwait
sbb
imul
fdivs
pop
stos
sahf
xchg
sbb
sbb
dec
cmpsl
sbb
ret
xlat
movsl
std
dec
iret
mov
dec
les
into
das
or
outsb
into
mov
sti
xchg
and
sahf
cmpsl
enter
mov
jg
sti
jmp
lcall
data16
addb
jmp
in
sti
dec
out
lods
aam
inc
mov
daa
push
inc
call
les
sbb
std
xchg
pop
imul
mov
movsb
and
pop
add
add
pushf
mov
inc
addr16
js
mov
pop
shr
roll
lea
and
movsl
ja
push
and
sbb
adc
clc
in
adc
imul
lcall
xchg
inc
std
xor
out
stc
rclb
add
stos
orb
mov
mov
lahf
leave
pop
sub
push
lea
mov
inc
dec
dec
inc
sbb
jge
arpl
mov
aas
adc
cs
lods
pop
inc
mov
ja
xchg
andb
mov
jecxz
in
les
scas
dec
aas
add
jne
pop
in
pop
outsl
xchg
shrb
sbb
arpl
pop
or
pop
imul
inc
sub
ret
testl
mov
rcrb
test
sub
fwait
or
and
arpl
cmp
stc
sub
inc
mov
sar
jns
and
imul
pusha
addr16
xchg
ds
enterw
and
stos
ja
and
inc
cmp
imul
ret
clc
sbb
add
mov
adc
push
push
arpl
out
rcll
xor
call
and
lods
and
jge
sub
mov
dec
sub
xor
bound
cwtl
cmp
sub
push
push
gs
pop
sub
xchg
jno
cld
jle
lret
arpl
repnz
lcall
adc
mov
adc
cwtl
and
cli
xor
mov
push
shlb
pop
mov
mov
dec
loop
adc
mov
jmp
test
sub
les
mov
out
sub
cmp
dec
inc
daa
adc
leave
mov
addl
xor
dec
sbb
add
pop
and
daa
subl
std
jg
xor
repnz
stos
xor
mov
mov
adc
movsb
pop
sub
pop
ret
adc
mov
sbbb
lahf
mov
inc
lahf
out
int
push
fmulp
sub
call
xchg
mov
mov
pop
sub
mov
insl
push
jb
pushf
ret
mov
adc
jmp
push
mov
xor
push
cs
insb
fnstenv
ja
ficoms
cltd
or
inc
stos
push
mov
push
push
adc
sbb
lea
cmpsb
leave
push
fsubl
lock
mov
sarb
xchg
insl
pop
mov
imul
scas
xor
jge
lods
sbb
ficompl
out
cmp
sub
mov
mov
jle
mov
cltd
sbb
test
mov
pop
subb
xchg
ret
push
sub
jle
fidivs
mov
icebp
fwait
ljmp
cld
dec
fisttpl
imul
cmpsl
rolb
mov
dec
sbb
xor
jmp
pop
mov
lcall
aad
ljmp
add
insb
mov
jno
loop
mov
add
in
idivl
xorb
movsb
insl
jl
ret
mov
out
or
jnp
pop
repnz
adc
mov
pop
shlb
fneni(8087
adc
mov
and
sbb
jbe
repz
cmp
cld
dec
mov
jge
mov
icebp
into
filds
and
outsl
xor
pop
clc
fiadds
sub
lock
xorl
jno
mov
mov
mov
rcrb
mov
cwtl
lahf
jo
cmpsb
mov
mov
jno
ja
int
xor
xchg
rcr
clc
xchg
xchg
cmp
xlat
or
xorb
xchg
outsb
mov
cmp
cli
das
jnp
fistps
out
pop
mov
insb
ret
and
shrb
lock
mov
cmp
fistpl
mov
loope
cli
or
clc
jmp
shl
hlt
cwtl
mov
std
pop
das
sbbb
cwtl
testl
lds
jle
and
mov
and
pusha
cld
stos
lret
jb
jl
pop
jecxz
inc
jno
jbe
scas
sbb
repz
mov
xchg
jbe
ljmp
popf
sbb
int3
fbstp
sub
js
pop
push
push
mov
xchg
xchg
add
mov
dec
add
adc
mov
pushf
lcall
mov
xor
out
jb
ljmp
pushf
aaa
movsl
jbe
xchg
lahf
xor
ja
adc
xor
mov
in
rcrl
adc
ret
cli
cmp
lods
sub
mov
inc
stos
jae
mov
aaa
fwait
cmc
sbb
and
add
fs
xor
fs
or
les
jg
sub
push
test
imulb
cmp
push
out
gs
dec
mov
mov
stos
ror
ss
mov
es
clc
loop
movsb
insl
inc
ljmp
movl
test
pop
sub
scas
mov
dec
xchg
repnz
inc
mov
test
ds
scas
test
inc
sub
mov
push
or
sbbb
add
lahf
sbb
sahf
fbstp
pop
outsl
sub
push
popf
cmp
xchg
add
cmc
add
aad
dec
popf
scas
push
shlb
outsb
rcll
repnz
cltd
dec
xchg
stos
pop
out
add
ja
xchg
cmp
mov
pop
lods
dec
lds
push
pop
sub
fdiv
ret
rcll
dec
mov
mov
push
std
sti
dec
jno
fistl
jmp
adc
fisttps
js
clc
inc
lcall
in
clc
mov
mov
imul
push
mov
ss
xchg
ret
and
insb
push
xchg
sahf
xchg
fldenv
ljmp
cmp
fnstcw
mov
inc
mov
dec
mov
test
mov
pushf
fiaddl
mov
push
add
fs
cmp
jmp
lods
hlt
sub
sti
insl
pop
out
mov
xchg
lds
sub
jbe
push
test
push
ret
je
push
xor
mov
insl
insb
les
ja
or
adc
mov
addr16
cmc
enter
mov
sub
or
and
fiadds
cmp
jmp
pusha
add
inc
loope
push
mov
jmp
cmp
lahf
cmp
mov
and
je,pt
sub
sbb
mov
test
pop
ljmp
add
stc
ss
cmp
rcll
rcrb
and
sbb
faddl
xor
mov
ds
pop
push
sbb
loope
in
jae
mov
jl
arpl
dec
mov
lods
adc
mov
call
mov
adc
cmpsb
aam
push
jbe
aad
mov
in
cmp
fisttpl
out
divb
imul
loope
outsl
addr16
iret
call
sahf
pop
das
and
pop
dec
fs
jp
or
cmp
and
jno
cmpb
mov
or
xchg
sub
int
enter
and
in
es
stc
scas
sub
or
inc
cmp
les
mov
jecxz
ds
arpl
mov
sub
stc
aad
and
ss
sbb
cmp
adc
cmp
mov
sub
mov
push
stc
cld
lods
adc
inc
or
push
lods
lret
jb
out
cmp
cmp
add
lret
inc
sbb
movsl
sub
in
pop
jge
jns
iret
adc
ret
lea
adc
sbb
cmp
sahf
icebp
sbb
in
fisttps
arpl
sbb
push
pop
lock
movsl
jle
nop
push
es
and
in
xchg
fistps
add
ds
loopne
xor
test
inc
sti
mul
nop
je
dec
mov
cmp
cli
sbb
cmpsb
mov
pop
dec
pusha
and
xorl
xor
xchg
sub
sbb
mov
push
jae
dec
mov
mov
inc
shlb
orl
mov
out
inc
adc
fistl
xor
jl
inc
push
jo
lahf
fs
mov
ja
jno
inc
and
jle
pop
cmp
mov
push
pop
fidivs
cmp
divb
in
jo
and
negb
hlt
fists
mov
int3
mov
mov
inc
mul
out
xchg
push
xor
in
cmp
sti
and
insb
inc
pop
push
decb
push
nop
push
hlt
sbb
or
mov
cmpb
out
arpl
push
push
test
dec
out
push
rol
loope
popf
pop
xor
in
cmp
stos
mov
mov
test
xchg
test
es
jp
ror
fdivl
xchg
jl
and
jae
add
sub
add
mov
ret
aam
pop
fs
ljmp
sbb
pop
cmc
jecxz
jl
fcompl
aas
aas
sub
popa
ret
pop
cwtl
es
aam
xor
add
rclb
inc
sbb
cmp
daa
fimull
push
push
js
dec
lea
inc
xor
dec
test
cltd
sub
mov
insb
mov
dec
btc
dec
pop
mov
sbb
in
in
mov
xchg
mov
push
cs
inc
sti
stos
adc
and
inc
jne
adc
js
jnp
pusha
adc
add
sahf
lock
mov
pop
dec
std
pop
fcomps
inc
mov
inc
scas
scas
out
popa
adc
repnz
mov
xor
mov
dec
xor
lods
rcr
or
sahf
aaa
jns
jle
call
or
adc
data16
movsl
ja
push
mov
les
mov
xlat
pop
lock
aam
xchg
nop
jmp
cmp
mov
loopne
cs
jmp
ds
xchg
cmp
add
xchg
lods
push
pusha
lock
ret
pop
notl
ljmp
cli
sbb
push
test
and
adc
data16
rcl
jge
pushf
cmpsl
stc
scas
xor
sub
scas
xchg
imul
inc
jae
sarb
and
dec
cmp
call
xchg
ret
push
and
mov
mov
cmpsl
mov
add
inc
jo
fisubs
mov
xchg
pop
fstpt
insl
mov
mov
or
adc
pop
pop
fs
xchg
outsb
push
pop
sbb
out
sbb
push
mov
lret
xchg
xor
lods
mov
pop
sub
out
jle
je
stos
and
cld
bound
sbb
fwait
xor
jb
sbb
sahf
ret
jnp
jne
fdivl
and
mov
jmp
rclb
pop
mov
sub
mov
xchg
mov
and
sub
xchg
xchg
out
mov
addr16
jge
pop
pop
push
xor
mov
test
in
cltd
jg
mov
and
and
pop
sti
mov
shr
mov
push
rol
xchg
out
mov
test
bound
cld
loop
mov
push
ret
sbb
adc
pushf
outsb
insb
xor
or
push
jb
test
mov
imul
ficoms
std
cmpsl
push
sti
cltd
and
aaa
add
and
outsl
pop
cmp
popa
lock
fs
fwait
out
inc
xor
xor
fxch
mov
push
and
dec
pop
cmp
fmull
add
mov
je
mov
sub
or
mov
stos
inc
scas
mov
xchg
pop
xchg
cmp
jbe
sbb
mov
and
xchg
int
mov
pop
test
dec
mov
insl
push
jg
gs
push
dec
push
push
into
jo
ret
push
jmp
xchg
addr16
ds
out
jle
push
mov
or
jbe
aad
pop
lods
mov
and
jl
test
les
out
cld
adc
pop
pop
or
jae
lds
mov
cmp
cmp
mov
jo
xchg
xchg
jae
mov
sahf
inc
xor
loopne
and
dec
xchg
cld
sahf
dec
rorb
lds
pop
call
ret
mov
adc
push
jmp
pop
sbb
pop
lahf
outsl
and
sbb
addl
nop
push
rclb
rcl
push
jb
or
fdivp
ret
jmp
jl
jnp
mov
cmp
insl
in
out
jecxz
sbb
mov
adc
mov
pop
subl
cmpsl
iret
dec
notb
cmp
iret
mov
fcompl
push
aam
xor
jge
jne
test
call
pushf
sbb
inc
cmp
xor
mov
mov
aaa
and
dec
cmpsb
push
clc
lret
sbb
popa
cmpsb
fsubrs
mov
outsl
sub
sub
add
je
jns
dec
nop
sbb
repnz
pop
mov
mov
sub
jge
or
pop
add
push
pop
nop
test
rclb
imul
jb
mov
cli
xchg
cmp
inc
push
or
push
inc
pop
inc
sbb
xchg
into
sub
shlb
adc
in
jbe
xor
push
jnp
jo
or
dec
jne
insb
insb
pop
inc
rol
jae
jb
test
in
mov
ror
push
loope
and
mov
pusha
adc
lcall
cmp
lds
movsb
jle
mov
mov
jmp
mov
adc
addr16
pop
icebp
cwtl
test
mov
push
clc
leave
es
ret
call
xor
fbld
inc
dec
inc
stos
ja
push
pop
xchg
sub
in
push
and
dec
iret
dec
xchg
or
sbb
bound
inc
insb
mov
es
mov
mov
lock
and
push
push
mov
out
dec
ret
push
jnp
scas
jcxz
add
popf
and
push
dec
adc
sub
mov
inc
int3
jge
push
mov
aad
push
inc
xor
mov
sahf
adc
xchg
adc
inc
js
cmpsl
sbb
xor
cmp
insb
mov
dec
in
xor
arpl
xlat
or
mov
ja
push
cmpsl
jg
gs
mov
and
es
repz
mov
test
addr16
pop
jl
negl
adc
cmpl
mov
jmp
stos
sbb
jae
adc
outsl
mov
cli
iret
cld
mov
test
sbb
jle
neg
dec
xchg
int
outsl
mov
push
cmp
jmp
gs
mov
ljmp
jl
sahf
inc
loope
das
cmpsl
inc
adc
or
push
mov
sarl
divb
das
mov
pop
fsubrs
jbe
and
mov
idivl
sti
repnz
loop
adc
inc
xchg
hlt
adc
inc
mov
mov
cmp
sbb
out
jae
pop
js
mov
dec
adc
ja
sub
push
add
pop
stc
inc
add
adc
jp
in
mov
mov
xlat
inc
inc
fstpl
inc
adc
add
jbe
js
addl
and
mov
xorb
push
stc
pop
arpl
cld
inc
std
xchg
or
fnsave
f2xm1
cmp
icebp
icebp
das
fisttpll
jle
aaa
xor
lahf
mov
mov
pop
sub
mov
fcompl
roll
xchg
sub
inc
ret
leave
lock
push
pop
inc
xchg
and
pop
push
clc
stc
dec
and
mov
mov
int
dec
xor
cld
outsb
cs
push
adc
and
mov
jp
dec
sete
mov
in
int
dec
std
fs
lods
addb
mov
lods
adc
outsb
mov
shll
jbe
sbb
mov
shrb
push
fmull
jmp
xchg
out
sub
pop
cwtl
loope
xchg
jmp
dec
sbb
frstor
in
dec
in
aas
and
lret
mov
nop
sbb
lds
pop
stc
popf
inc
fisubrl
pop
jb
sub
cmpsl
mov
mov
pop
leave
hlt
cmpsl
jg
bound
sbb
push
es
cltd
lahf
stos
pop
sub
js
adc
or
mov
jl
clc
test
fildl
orl
cmp
push
inc
or
ds
fsubl
mov
insl
jg
out
xlat
lods
fcos
push
push
popa
ljmp
addl
leave
mov
repnz
pop
push
loope
fsts
cltd
iret
insl
inc
sbb
pop
jnp
sub
push
or
repnz
ljmp
mov
mov
in
insl
scas
add
mov
adc
ffreep
xor
cmpsb
outsl
imul
ja
sub
mov
addr16
pop
inc
aam
adc
xor
xchg
out
mov
mov
dec
fwait
xchg
lock
and
dec
pop
xchg
aam
sbb
ja
inc
jecxz
mov
idivb
insl
xor
mov
cmpsb
jl
repnz
adc
movhps
aaa
loopne
or
mov
pushw
push
push
outsl
cmp
outsl
out
and
mov
sbbl
add
sbb
mov
paddsb
add
mov
lret
cmp
pop
insb
or
pusha
jp
imul
lock
int
fdivrl
cld
sbb
sbb
sbb
ret
lods
fwait
push
rcrl
aad
int
mov
push
cmp
cld
fsubrl
adc
cli
xor
jno
cmc
add
rcrb
xor
mov
ficompl
sub
shlb
add
lahf
push
jo
dec
and
out
rorl
frstor
sub
mov
in
and
xlat
adc
adc
xchg
hlt
xor
fistps
sub
fisubs
jae
popa
pop
clc
inc
lahf
jo
fdivr
jl
stc
addr16
pop
adcb
je
gs
fildll
jb
push
jecxz
addr16
pop
ds
repz
test
fisubrs
and
pop
or
cs
mov
add
gs
or
jne
inc
mov
push
in
xlat
out
out
aad
mov
aaa
ljmp
movd
adc
dec
loopne
mov
outsb
rolb
mov
addb
xchg
movb
bound
ja
int
push
test
stos
pop
and
js
jp
or
shlb
roll
push
sbb
fptan
sti
jg
mov
sub
inc
jne
fimuls
ds
mov
add
add
jbe
scas
adc
sahf
in
xlat
sbb
sbb
mov
cld
out
sub
fidivs
leave
stc
cmc
test
mov
hlt
outsl
xor
sahf
sub
or
dec
or
bound
xchg
push
insb
jnp
fisubrs
fnstsw
sub
fdivrs
pop
cmpsb
sbb
cmp
add
scas
add
lock
add
fiadds
adc
aad
pusha
mov
insl
js
arpl
out
mov
or
lret
pop
xor
mov
clc
and
dec
and
sub
sub
xchg
sbb
pusha
cmp
addr16
push
mov
call
jg
cltd
jbe
mov
cmpsb
mov
insb
jg
pop
inc
gs
aam
xor
mov
mov
dec
dec
stos
in
je
pop
mov
cmp
in
push
xchg
data16
mov
cli
and
xlat
imul
filds
mov
dec
jo
lds
mov
mov
outsb
int
mov
inc
mov
cmp
and
cmp
mov
adcb
mov
in
fwait
push
and
jecxz
xchg
pop
lea
sbb
mov
iret
pop
pop
nop
nop
mov
pop
nop
fcoms
cmp
dec
mov
inc
sarl
fs
xchg
mov
subb
movb
and
lcall
jae
jp
jmp
and
or
add
xchg
mov
push
loopne
into
enter
pop
dec
or
loopne
inc
push
and
test
rcl
mov
js
test
aas
push
cmpsl
push
cmc
jecxz
dec
stc
inc
test
sbb
frstor
ds
pop
mov
xor
mov
xchg
adc
push
xorl
mov
sahf
jb
add
insb
ja
inc
or
cmp
in
sbb
js
dec
mulb
std
lahf
movsb
sbb
aad
fnstsw
xor
pop
enter
add
pusha
and
cmp
imul
add
xchg
mov
pop
fwait
cmp
push
ja
fwait
mov
sahf
mov
stc
dec
push
in
ficompl
xchg
sub
jl
arpl
ljmp
xor
cmpsl
or
testl
mov
fldl
ret
out
push
cmp
mov
fsubrs
mov
rol
and
idivl
loop
xorl
sbb
push
ss
jo
xchg
imul
andb
xchg
xor
pop
inc
push
lret
fisttps
mov
iret
add
cmpsl
es
hlt
sbb
fs
xchg
nop
pop
adcl
mov
mov
add
sbb
mov
push
or
call
mov
jl
mov
repz
movsb
fiadds
gs
gs
lds
test
adc
incb
jge
fcomip
adcl
test
std
ljmp
dec
test
cmp
test
pop
fldl
sub
popa
xor
mov
cmpsl
gs
mov
mov
or
push
or
xor
cli
data16
and
rcll
cmp
pop
sbb
js
sub
faddp
push
mov
lahf
push
push
aas
jo
cmp
pushf
push
mov
cmp
js
dec
xchg
cmp
or
mov
data16
daa
xchg
aas
mov
out
push
arpl
or
out
or
sub
jmp
movl
in
adc
loope
ljmp
jnp
std
dec
or
js
mov
es
mov
repnz
mov
cmpsl
rorb
pop
pop
cmp
dec
push
xlat
scas
in
push
push
gs
pusha
mov
jle
addb
dec
pop
and
pop
xchg
jb
ret
jne
jmp
sbb
xchg
lret
xchg
xchg
cmp
pop
xchg
test
rolb
aad
pop
cld
push
les
cmp
and
pop
mov
roll
mov
push
shlb
jmp
adc
dec
js
lcall
inc
inc
test
dec
rcrb
inc
lods
add
imul
mov
out
stos
rol
ss
adc
test
sub
cmp
cwtl
adc
cwtl
neg
push
mov
lret
or
mov
iret
add
xor
in
ss
inc
in
loop
movsb
sbb
shll
mov
push
lahf
push
dec
and
enter
push
xchg
test
dec
lret
jp
negl
lahf
push
xorb
xchg
dec
mov
scas
dec
push
paddusb
or
mov
mov
popa
adc
adc
cltd
pop
xchg
inc
fcoml
or
xor
add
std
xchg
sbbb
fsubrs
push
or
in
in
sub
push
shll
lods
cmc
aam
dec
mov
cmp
std
sub
push
dec
test
push
sub
mov
inc
dec
movsl
xchg
sub
loope
add
pop
arpl
pop
out
cmpsb
rorl
sbb
enter
xchg
push
adc
or
nop
or
mov
mov
mov
mov
out
lock
add
scas
or
mov
addr16
jle
aam
outsb
adc
ret
xor
push
mov
add
sub
icebp
dec
sub
insl
out
cmp
aad
inc
xchg
cmp
mov
adc
js
mov
in
mov
and
cmpsb
mov
mov
mov
out
out
add
push
jb
test
add
stos
lret
xchg
xchg
jl
int3
and
jne
pop
mov
insl
jl
sub
cmp
xor
cs
or
cmpl
sti
mov
cmpl
rorb
insl
xlat
imul
xchg
inc
subb
or
js
push
dec
or
jecxz
xchg
pop
loope
mov
pop
mov
inc
sti
jg
in
jl
cmp
ror
popa
es
sub
mov
add
cmp
mov
sub
push
pusha
mov
outsb
inc
and
outsb
xchg
xchg
adc
aas
pop
test
jmp
xor
adc
xor
imul
cmp
aas
push
and
dec
rorl
push
dec
push
jbe
in
ficoms
lcall
xlat
mov
mov
rcll
fisttpll
aaa
pusha
fstps
clc
pop
imul
insb
xorl
cmp
cltd
aas
mov
xlat
loopne
sub
fidivl
imul
test
mov
fisttpl
cmp
daa
add
jbe
arpl
jmp
insl
test
mov
test
fdivp
mov
fcmove
pop
in
int
insl
aam
lahf
insl
pusha
add
mov
bswap
xor
das
idiv
fwait
in
outsl
and
mov
pop
lret
imul
mov
es
lea
jmp
xchg
adc
inc
fidivs
lea
fwait
rorl
in
push
cmpsl
fucomi
out
adc
inc
fsubl
inc
sbb
movsb
pusha
mov
add
dec
les
jo
scas
add
dec
popa
push
fnsave
xor
ja
icebp
or
mov
inc
out
and
test
adc
pop
xchg
push
pop
inc
insl
lock
push
popf
push
xchg
outsl
lret
mov
aaa
popl
jb
rclb
stc
xor
iret
xor
jle
mov
push
mov
push
hlt
or
pop
xor
jp
add
movsl
and
push
dec
fwait
ljmp
dec
dec
icebp
xchg
cmpsb
dec
stos
or
jecxz
cld
mov
outsb
mov
mov
xor
cmpxchg
cmovno
sbb
sub
or
hlt
fwait
aad
xchg
add
push
out
pop
or
movsb
loopne
sbb
pop
addl
add
lods
insl
xor
vsqrtsd
repnz
imul
add
icebp
leave
adc
call
xor
and
rorl
cmp
mov
mov
push
and
sbb
jmp
pop
mov
rcll
jae
scas
mov
mov
stos
gs
mov
rorb
jge
dec
in
jl
fldl
iret
imul
add
aaa
frstor
lret
scas
out
add
xlat
adc
mov
arpl
jae
add
push
je
mov
pop
adc
mov
push
fsubrl
jb
jns
lret
imul
dec
pushf
in
sbb
lahf
gs
jge
cli
idivl
subb
out
leave
jnp
inc
sub
pop
mov
xchg
mov
mov
jecxz
sub
jmp
aad
and
bnd
subb
sub
mov
jne
pop
les
adc
and
xchg
pop
lock
push
jmp
mov
inc
dec
leave
add
js
cmp
lds
movsb
add
cwtl
push
nop
push
rorl
loop
ret
mov
pushf
xor
mov
pop
push
sub
fdivs
pop
lods
jno
fiaddl
fdivrl
mov
aam
inc
pop
imul
push
pop
xor
test
scas
xchg
adc
cld
mov
jb
test
adc
pop
push
and
sbb
inc
es
cmp
adc
std
dec
ss
dec
add
push
lahf
xor
xchg
mov
jmp
mov
push
clc
cmp
in
fbstp
pop
xchg
icebp
test
flds
xchg
cmc
inc
push
nop
ret
ror
mov
and
negl
sbbl
cs
mov
or
push
stc
sarb
mov
pop
aad
sbb
jno
negb
int
xchg
xlat
mov
push
mov
xor
aam
push
inc
int3
aaa
rorb
aaa
mov
sbb
sbb
xor
repz
cmp
cmpsb
adc
jmp
dec
adc
mov
pusha
mov
jle
stc
push
out
mov
rcl
push
jns
mov
int
jge
imul
push
adc
stc
rorb
cltd
rcrb
ficoml
repz
mov
data16
iret
ljmp
mov
flds
cld
fwait
sub
ficoml
mov
dec
into
xor
pusha
adc
sbb
pop
and
test
stc
fisubrl
cmp
popa
mov
or
lea
jno
push
adc
or
inc
and
imul
in
es
adc
sbb
or
sbb
jg
cmp
jns
dec
aam
dec
lds
stc
or
out
jne
inc
clc
inc
push
jno
cmp
mov
popa
cmpsb
inc
and
push
cs
fsubrl
cli
popa
inc
stos
dec
shl
xor
add
jl
dec
ja
adc
push
xchg
bound
inc
mov
addr16
test
rol
je
test
xchg
pushf
add
jmp
imul
ss
xchg
loope
jge
test
mov
filds
sahf
push
add
add
jne
cmp
int
or
stos
aam
lods
cmp
div
sbb
inc
push
dec
and
inc
xor
add
jb
xor
push
dec
loop
popa
pop
push
xchg
cmp
xchg
ret
js
xchg
adc
mov
js
ret
pushf
shlb
rcrb
addb
mov
imul
fbstp
inc
movsl
sbbl
and
pop
adc
dec
mov
or
lret
inc
pop
jle
xchg
cmp
xor
sbb
aad
lahf
mov
sbb
and
or
addl
jle
push
imul
and
out
adc
add
pushf
add
and
outsl
pop
out
inc
add
pop
cmc
xchg
repnz
cld
lcall
or
aas
or
data16
fbstp
mov
and
setge
mov
mov
into
outsl
clc
icebp
outsb
xchg
scas
in
cltd
mov
push
xchg
int
mov
cmpsl
and
test
xlat
mov
cwtl
test
stos
dec
mov
sbb
mov
inc
jp
out
scas
repnz
dec
mov
cwtl
call
repz
mov
xor
cmp
cmpsb
xchg
or
push
dec
leave
dec
arpl
popa
inc
stos
mull
cwtl
ret
aaa
sbb
outsl
lret
in
mov
ljmp
xor
mov
shlb
fwait
xor
dec
sub
adc
insl
mov
rorb
push
repnz
adc
lea
pop
cld
push
xchg
test
or
xchg
jbe
inc
outsb
or
xor
cmp
in
decl
addr16
mov
sbb
xchg
push
and
stos
mov
sub
jge
jecxz
data16
cmp
add
push
aam
js
push
adc
fiadds
push
dec
psubd
mov
outsb
mov
mov
jns
jb
in
inc
in
sub
and
dec
loop
xchg
cwtl
cmpsb
int3
bnd
icebp
pop
add
int3
xchg
lock
xor
call
fnstenv
je
and
leave
adc
hlt
pop
jno
push
sbb
sub
rolb
mov
push
push
std
mov
dec
mov
in
adc
mov
or
jp
add
jae
insb
xchg
lods
xor
mov
mov
cmp
repz
jp
pop
xchg
sub
mov
sub
daa
stos
cs
test
sti
push
cmp
loope
adc
dec
scas
out
cwtl
cltd
xchg
xor
movsl
push
lods
scas
and
loopne
fptan
incl
mov
daa
into
iret
mov
mov
cmp
dec
add
out
push
movsb
cmp
cwtl
test
ror
inc
jo
cmp
jnp
insl
cmp
dec
lods
sbb
adc
in
loopne
nop
xor
mov
arpl
idivb
or
fsubrp
pop
xor
xor
pop
push
js
je
jno
or
je
mov
test
mov
bound
mov
jo
xchg
enter
rolb
loopne
add
orl
insl
scas
adc
and
mov
xorl
or
push
lret
sub
jmp
pop
fiaddl
push
dec
loopne
aam
ret
push
inc
pop
insl
push
xchg
stos
add
or
std
sbb
add
jo
leave
jns
int3
dec
pusha
in
shlb
jp
in
test
fidivs
push
inc
add
aas
mov
dec
test
into
sbb
sub
xor
pop
pop
popw
jmp
movsl
xchg
jnp
push
xchg
jno
sub
lret
add
or
fmul
inc
loop
jp
aad
scas
adc
jge
sub
lods
pop
mov
fldl2e
mov
lret
adc
aad
pop
in
in
xchg
movsl
push
nop
icebp
test
xor
enterw
cmpsl
lds
enter
fidivl
sub
xchg
adc
jecxz
jmp
subps
mov
sub
mov
mov
jle
jno
xor
movsb
shl
test
push
jns
mov
cmc
jg
in
loope
andb
sbb
test
xor
cli
cmp
mov
xchg
cld
jbe
fldenv
mov
fcmovnbe
mov
push
jno
mov
dec
push
frstor
clc
sub
call
out
mov
je
inc
adc
loopne
add
fsubrl
lea
dec
mul
repnz
mov
dec
dec
jno
jge
or
fs
push
mov
sti
push
movsb
sub
fidivl
add
cmc
pop
xchg
daa
push
mov
sahf
pop
repnz
pop
ja
jb
dec
jo
and
out
and
sbbl
js
sub
mov
push
fcmovb
cmp
enter
adc
add
int3
jo
push
adc
pushl
adc
int
jmp
arpl
and
xor
dec
xchg
mov
jno
pushf
cmpsl
pushf
sbbb
push
cmp
add
and
jne
sbb
ret
sub
std
lea
inc
and
mov
xor
mov
xor
leave
xor
hlt
adc
jecxz
sub
dec
stos
push
xorl
inc
adc
and
in
cmp
mov
mov
cmp
js
aam
lahf
sahf
fs
sub
or
xchg
in
and
pop
hlt
pop
cld
sarl
and
and
aaa
mov
cld
test
mov
inc
mov
mov
add
pop
imul
lds
push
das
cmp
adc
cmp
push
icebp
sub
mov
test
out
cwtl
test
dec
daa
mov
or
loop
or
sub
pop
cwtl
sub
pop
sub
sbbb
sub
out
loopne
outsb
or
pop
dec
in
push
dec
mov
imul
testb
mov
lds
lret
aaa
dec
xorb
mov
or
lods
cmpl
inc
in
ficompl
adc
cmp
or
lret
in
add
insb
call
pop
jl
ja
pop
push
stos
sbbl
xor
pop
stos
mov
ss
fcompl
inc
and
or
mov
mov
mov
aam
jp
insb
push
into
push
adc
out
jg
adc
outsb
xor
ljmp
dec
dec
rcrl
les
lods
lds
movsl
jbe
mov
addr16
aas
inc
cmp
mov
push
out
inc
cwtl
cmp
cmp
xchg
jns
mov
stc
inc
movsl
imul
jge
and
mov
int3
lds
cmpsb
push
xchg
add
js
pop
sbb
pop
cmp
and
pop
movsb
fisttpll
cmp
lock
push
mov
test
pop
sub
mov
and
xchg
mov
and
mov
cmpsb
out
aad
jge
jecxz
adc
push
out
aaa
lret
jne
icebp
aaa
popf
xor
dec
fwait
mov
and
push
and
in
daa
enter
lds
in
push
pop
sbb
add
iret
and
testb
je
outsb
lds
pop
pushf
int3
cmp
sbb
incl
sbb
jle
mov
push
or
jle
sub
negb
pop
in
mov
jo
sbb
jl
pop
jno
sti
sbb
out
adc
sub
mov
daa
in
inc
mov
jnp
xor
das
sahf
push
pop
les
mov
mov
dec
insb
inc
stos
cltd
rcll
cmpsb
nop
scas
jnp
mov
jo
cwtl
xchg
jno
dec
orl
mov
dec
adc
inc
cbtw
shrb
mov
mov
iret
or
add
shrl
leave
andb
nop
cmpsb
cmp
push
sbb
insl
pop
pop
adc
js
test
and
test
push
das
cmp
ljmp
outsl
hlt
js
jl
insb
sbb
fmull
jp
sahf
pop
or
sbb
add
js
dec
dec
mov
adc
pop
jg
call
popf
pinsrw
cli
ds
push
mov
dec
pop
mov
pop
repz
adc
les
jo
rol
xlat
lret
sbb
ret
adc
fistpll
add
stos
pop
mov
xchg
test
in
or
leavew
lods
jg
ljmp
stos
jecxz
call
jo
subb
xor
loopne
xor
lods
fwait
ljmp
or
arpl
cmp
nop
inc
sar
inc
mov
lret
cmp
push
je
inc
sbb
cmp
fisttpll
xchg
mov
sarl
sbb
sbb
lods
jl
lds
dec
outsl
cs
jno
sti
test
adc
mov
iret
test
push
mov
add
push
adc
aad
mov
test
jmp
or
pop
and
and
in
pop
mov
mov
icebp
sbb
dec
jge
pusha
jne
mov
dec
mov
add
dec
fs
push
aam
mov
lods
and
stc
mov
daa
repnz
add
xor
lcall
cmp
icebp
fsubl
jecxz
cld
lret
push
loope
cld
jmp
xor
cmpsl
outsl
les
das
aam
pop
ficompl
add
push
insb
jns
fisttpll
xchg
sub
and
psrlw
add
stc
aad
add
xchg
test
aaa
adc
ret
int3
cmp
fistl
push
cmp
insl
sbb
jo
xor
inc
sahf
daa
xchg
cltd
adc
add
call
pop
and
nop
insl
cwtl
test
or
cmpsl
xchg
pusha
scas
jo
inc
lea
scas
cmp
add
cmp
or
ljmp
add
aam
divb
inc
lret
mov
test
je
loopne
not
add
or
call
gs
ds
cltd
ds
mov
pusha
fs
fs
sbb
inc
inc
mov
mov
sub
in
adc
jl
mov
gs
fisubrl
push
pop
ret
sub
test
jno
test
into
loope
ffreep
in
fwait
dec
stc
out
lret
cs
les
test
lret
ficomps
stc
cmp
stos
dec
adc
clc
stos
jb
lret
sbb
mov
frstor
into
dec
or
xchg
and
mov
sahf
ror
jnp
cld
pop
outsb
ficomps
xchg
out
int3
je
int3
jo
push
add
or
add
std
or
cmpsl
scas
fs
inc
or
inc
popl
enter
adc
mov
jmp
test
js
out
aas
lods
int3
insb
adc
xor
adc
mov
lcall
dec
mov
add
add
imul
inc
into
xor
stos
or
cmp
jns
add
testb
jmp
jle
adc
fsts
cmpsb
adc
sbb
xor
push
mov
sti
sbb
mov
repz
sub
loope
adc
dec
ret
jnp
out
cmp
inc
and
cltd
test
int
in
test
fldenv
lds
std
push
mov
xor
enter
sub
mov
push
sbb
inc
dec
aad
pop
ret
jnp
adc
xchg
imul
adc
push
enter
movb
and
js
push
out
bnd
lock
jmp
test
push
out
sti
jl
and
jecxz
ds
push
int3
ds
push
or
stos
dec
sbb
xchg
push
pop
daa
test
mov
xchg
ret
orb
push
mov
sarl
pop
ss
scas
push
add
mov
ljmp
gs
out
std
jb
adc
xchg
jno
adc
cmp
mov
imul
jnp
xchg
mov
jle
mov
dec
das
gs
jne
flds
movsl
rcrb
lcall
jl
xor
ja
mov
ds
sub
mov
add
inc
xor
push
pop
rcll
loopne
add
icebp
or
and
lea
jl
and
dec
jecxz
cmpl
shll
jge
cs
xor
pop
int3
xlat
ds
push
aam
jg
sbb
lock
out
inc
pop
mov
xor
and
and
and
inc
jle
push
push
insl
and
addr16
negb
pop
mov
sub
or
lahf
sbb
xchg
aas
mov
and
jmp
cs
add
and
mov
ds
ret
xor
ficomps
add
dec
cld
xchg
adc
test
mov
jge
mul
jns
push
int3
xchg
aam
shl
add
fdivl
imul
pop
test
outsl
xchg
push
cmpl
jge
jnp
xchg
mov
scas
sbb
and
insl
lods
test
adc
jno
mov
ds
aam
jns
js
cld
sti
cwtl
fmull
hlt
inc
sub
test
loope
mov
scas
jno
nop
xor
and
xchg
insl
div
xor
and
dec
cld
dec
imul
pusha
cld
mov
icebp
inc
fsubrl
or
cwtl
pop
filds
cmpsb
loop
cmc
mov
scas
arpl
or
loopne
inc
add
jae
aaa
pop
fxch
in
or
int
mov
inc
shlb
imul
inc
jle
in
cmpsb
xchg
pop
sub
fistpl
dec
lcall
das
mov
pop
and
cmp
mov
mov
sub
pop
inc
movsl
cmp
cld
inc
out
lock
pop
xchg
inc
in
add
sbbb
leave
jne
sbb
or
pop
mov
adc
aas
pop
jle
sub
pop
shrl
adc
aad
int3
push
aas
dec
jg
int
inc
sub
inc
or
adc
pop
cli
cmp
fnstcw
xchg
and
sbb
mov
loop
lods
push
cmp
adc
adc
fsts
and
scas
push
lds
cs
adc
aad
mov
xchg
nop
or
xor
je
cld
adc
pop
les
mov
mov
andl
and
mov
neg
icebp
rcl
xor
iret
subb
xlat
aaa
xor
test
sub
fsubrs
jae
xor
mov
sbb
add
mov
cmp
push
imulb
jg
jmp
lea
shlb
sub
push
outsb
fdiv
nop
push
test
sub
cmp
xorl
xchg
jb
xchg
jne
out
sbb
je
je
cmp
iret
repz
insb
lods
out
into
push
xor
fwait
cmpsb
dec
xor
pusha
roll
jns
xor
lea
push
test
inc
repz
or
push
pusha
jp
adc
dec
std
clc
call
pop
test
pop
sbb
inc
das
enter
and
andl
ficompl
mov
mov
insb
mov
fiaddl
fisttps
aam
mov
cwtl
cwtl
les
je
or
test
lahf
loope
pop
jge
inc
jns
mov
insl
or
data16
inc
outsb
or
push
fdivrl
push
mov
ss
cmp
dec
lock
adc
jle
test
jecxz
jne
and
jecxz
cmp
call
xchg
gs
fs
add
add
aad
loope
pop
ljmp
or
lock
xor
ljmp
aad
pop
je
sbb
rcrb
sub
outsb
push
in
arpl
nop
pop
inc
or
and
test
mov
xchg
arpl
fcomps
aad
loope
sti
filds
cs
or
cmp
dec
in
imul
and
push
lock
sbb
dec
adc
lds
outsb
movsl
mov
data16
movsb
jp
sbb
ljmp
adcb
mov
add
leave
pop
mov
inc
sub
outsl
push
jns
mov
loopne
xchg
mov
mov
in
jae
addb
pop
scas
jae
movsl
inc
aaa
push
aad
adc
jbe
cmp
insb
pop
jmp
loopne
xor
and
aam
push
adcl
sbb
subb
cmp
jl
popa
xlat
fadds
xchg
cltd
in
pop
frstor
data16
dec
test
add
fidivs
mov
jecxz
decb
dec
dec
mov
sub
fiadds
cmc
lea
in
addr16
ljmp
mov
loopnew
jne
jmp
fldenv
insl
test
and
push
lock
xchg
les
jae
les
and
in
sub
aas
xor
rcl
jbe
jbe
mov
or
cmp
out
jmp
jmp
leave
mov
mov
or
mov
ja
xor
and
lock
cmpsl
mov
addr16
movsl
dec
mov
mov
jae
or
xchg
add
mov
into
sub
add
mov
repz
sub
push
clc
loop
fbstp
pop
sti
popa
pusha
shll
ss
jbe
adc
and
jo
xchg
and
pop
cmpsb
mov
xlat
leave
mov
inc
or
aad
mov
mov
and
aam
mov
sbb
fistl
int
in
add
gs
cmp
adc
push
or
movsb
mov
mov
daa
ljmp
add
mov
mov
dec
mov
lds
xor
andb
ljmp
outsl
mov
xlat
lods
aad
stc
fwait
out
mov
jge
inc
push
xchg
dec
loope
xchg
pop
dec
bound
repnz
sbb
js
clc
out
push
cltd
loopne
in
mov
cmc
sbb
push
movl
xor
xchg
jae
dec
push
les
add
mov
cmpsl
push
lcall
push
inc
cltd
mov
dec
ret
adc
pop
mov
int
or
fnstsw
mov
xchg
fidivrs
mov
testb
scas
in
mov
sub
lahf
push
jecxz
sub
inc
pop
je
cltd
mov
jmp
mov
mov
in
mov
fimull
jns
and
adc
mov
dec
adc
adc
add
pop
cmpsl
rorl
adc
or
jo
mov
aaa
jns
das
cs
into
shll
jg
mov
imul
push
pusha
movb
or
lahf
pop
push
jmp
mov
lods
cmp
loopne
fisttpl
out
mov
ja
adc
andl
xor
mov
add
inc
xchg
decl
iret
ret
clc
inc
and
dec
je
imul
jb
cld
rol
xor
push
mov
lods
xor
pop
xchg
bnd
arpl
xlat
aam
clc
jno
lock
xchg
cltd
fdivrl
enter
rcpps
int3
jl
lret
int3
sbb
fsubrl
cwtl
mov
hlt
int3
inc
popa
gs
cmp
jnp
iret
jle
push
lds
lahf
mov
sti
add
aas
cmp
gs
cmpsb
aam
mov
push
jae
rcll
cld
pop
incl
mov
popa
jecxz
cmpsl
out
lods
or
or
dec
pop
xor
fmuls
test
testb
sahf
cs
inc
addr16
rorb
cli
insl
mov
fucomi
div
pop
pop
movsl
rol
shl
xor
inc
add
add
xchg
mov
subl
std
add
repz
mov
repz
push
inc
adc
jmp
lret
lcall
popf
mov
imul
pop
dec
pop
sub
in
pop
flds
push
cs
ja
cmc
mov
sub
add
lcall
out
adc
jbe
and
xor
cmp
data16
dec
mov
xor
in
mov
faddl
and
out
cltd
push
mov
cmpb
rcrb
out
imul
xchg
cli
fwait
xor
movsl
fmuls
gs
cltd
inc
fwait
bound
mov
clc
shrl
hlt
push
push
add
or
sub
pop
sub
aam
inc
cmp
mov
loopne
das
fdivl
or
push
mov
xchg
jae
dec
jmp
insb
push
jne
imull
stos
and
dec
aad
mov
insb
cmpsb
mov
js
push
mov
cmp
aad
movb
cmp
daa
mov
pop
add
dec
icebp
jne
jle
mov
out
movsb
lret
cmp
push
mov
stos
addr16
in
mov
dec
push
imul
mov
ljmp
pop
daa
fisubs
dec
dec
mov
jg
lods
sub
fsubrl
out
ds
ds
fcompl
pop
or
lret
cmp
cmpsb
cwtl
jmp
mov
and
loope
jmp
xor
mov
pop
push
adc
pop
mov
jne
stc
sbb
cmpsl
imul
and
mov
dec
movsl
or
cli
loop
dec
push
mov
lret
push
int3
ficoms
es
scas
inc
dec
push
lret
andl
push
jp
in
sub
test
mov
test
pop
dec
and
fs
movsl
mov
xor
xor
mov
jp
and
enter
popf
push
or
lret
or
imul
push
aad
push
fldt
pop
fstpt
fsubrl
int
mov
and
loopne
test
sub
mov
lods
fcompp
and
inc
mov
xor
push
mov
sub
mov
dec
pop
lds
test
repz
outsb
add
clc
mov
or
xchg
daa
lock
shlb
lcall
or
jo
stc
pop
repnz
and
xchg
xchg
xor
js
incb
jmp
cmp
push
push
pop
lock
xor
pop
sub
mov
imul
and
sbb
fdivr
pop
pop
or
sbb
and
out
lock
jns
int3
lock
cmp
fistps
hlt
sbb
mov
jp
ficoms
pop
insl
notl
jno
in
stos
cwtl
pop
cmc
dec
je
aas
xchg
push
out
out
pop
cmp
movsl
nop
test
mov
mov
mov
or
lcall
out
mov
out
push
xor
lods
jge
cmp
or
push
shlb
jae
adcl
pop
rcrl
repz
clc
cmp
cli
add
add
aas
test
xchg
aas
adc
jge
ss
cmpsl
mov
imul
jmp
pop
stos
test
mov
out
aad
movsl
jg
sbb
lods
cmp
and
jmp
mov
dec
and
std
mov
mov
sbb
push
loope
mov
sbb
sub
dec
in
out
add
or
jmp
sbb
js
int
pusha
mov
shl
inc
jecxz
test
mov
push
adc
shlb
inc
jge
xchg
arpl
xchg
pop
and
mov
add
stos
aas
inc
inc
xchg
inc
les
and
or
cmp
inc
aas
mov
add
sub
into
and
push
push
pusha
das
ja
test
jl
pop
lds
xorb
lcall
pop
pop
xchg
adc
sbb
mov
push
rcl
lea
push
fstpt
or
pop
mov
into
lods
dec
mov
insl
push
dec
mov
ret
lods
push
add
push
repnz
add
jb
dec
pop
pop
sbb
mov
stos
mov
cmp
xor
mov
xchg
xor
xor
repnz
in
pop
xor
cmovae
and
sbbb
pop
xorb
aad
mov
ret
mov
adc
mov
and
sarb
mov
jp
adc
lret
jg
jne
push
ljmp
xchg
add
lret
hlt
lret
pop
mov
popl
adc
mov
test
call
adc
mov
push
xor
or
and
sub
jne
in
sbb
xchg
loop
or
hlt
cli
test
cmc
dec
ljmp
pop
mov
pushf
or
and
pop
fs
lds
pop
stos
sub
mov
and
inc
dec
fists
ds
test
mov
xchg
xor
icebp
inc
mov
add
add
lods
xchg
sbb
stos
xor
pop
add
arpl
sbb
cmpsb
dec
lret
imul
mov
dec
push
inc
enter
js
bound
je
and
addr16
stos
xor
lock
mov
pushf
pop
pop
mov
push
jo
lret
push
mov
pop
test
mov
mov
pop
or
mov
stos
and
xchg
mov
lret
shrb
mov
ljmp
jle
push
push
iret
sti
xchg
pop
sbb
adc
stc
dec
mov
sahf
frstor
sahf
push
in
sub
xor
mov
push
or
mov
push
adc
add
mov
mov
pop
std
loop
mov
mov
stos
dec
mov
push
mov
mov
movsb
test
lcall
and
test
pushf
adcl
add
pop
mov
fwait
jbe
insl
in
mov
shrl
xchg
daa
sub
mov
push
iret
jecxz
sbb
xor
nop
test
mov
and
jge
jbe
ret
mov
addl
loop
ret
and
xor
cmp
xchg
leave
hlt
mov
cmpsl
adc
insl
cmp
dec
adc
aas
cmpl
mov
cmc
push
push
or
add
sub
div
pop
jae
aaa
push
cwtl
mov
or
loope
gs
inc
inc
mov
adc
cmp
in
out
xchg
dec
xchg
cltd
stos
out
aam
inc
pusha
mov
dec
pushl
sbb
xchg
negl
movsb
cmpsb
pusha
dec
in
pop
dec
cmp
jg
andl
cwtl
cld
out
pop
incb
pop
je
popf
adc
or
stos
adc
mov
jo
mov
aaa
add
leave
imul
pop
insl
inc
cmp
jle
dec
mov
pushf
lds
insl
jp
xchg
pop
pop
pop
iret
daa
stos
sub
movsl
dec
jge
int3
je
insb
mov
xchg
and
cmp
cmp
les
sahf
fwait
pop
push
and
sbb
dec
and
stos
pop
sahf
pushf
xchg
push
repnz
xor
cli
push
nop
mov
scas
fs
aam
push
mov
repnz
mov
add
inc
shlb
sub
stos
and
nop
mov
mov
int
add
and
xor
iret
mov
int
sub
call
push
xchg
scas
cmp
aad
outsb
aaa
cmpsl
mov
cmc
dec
out
inc
pop
cmp
hlt
jecxz
subl
and
lea
push
cmpsl
sarl
push
outsl
cmp
pop
in
shrb
xor
sbb
xor
jae
lret
popf
mov
lock
xchg
mov
xor
mov
jno
mov
xchg
sahf
pop
mov
outsl
jns
jmp
popf
xchg
test
scas
mov
push
push
mov
jmp
lea
mov
mov
mov
mov
imul
fs
dec
outsb
mov
lea
sub
test
xchg
push
sub
cmpsb
dec
mov
sub
fmulp
adc
test
clc
imul
loope
fcmovnb
repnz
out
in
fildl
cmp
loop
sbb
movsl
push
sarl
loopne
push
mov
sub
nop
xor
repnz
out
pusha
dec
insb
adc
ret
dec
insb
jg
dec
jae
jnp
jns
xchg
pop
popa
dec
test
push
mov
out
push
xor
loope
stos
jg
test
inc
sbb
into
xchg
sbb
pop
jne
add
movsl
cld
and
fwait
jg
and
divb
jne
sbb
inc
xor
fdivl
loope
loopne
sub
loope
sarl
iret
push
sbb
js
add
mov
mov
add
jmp
and
mov
stc
cmp
cmp
sbb
cmp
xchg
dec
add
je
mov
push
push
loope
les
add
lcall
pop
mov
jno
mov
rcl
inc
aas
fcmovnbe
cwtl
hlt
and
pop
sbb
sbb
loope
and
sub
pop
scas
or
loop
lret
mov
inc
pop
je
pop
mov
jo
cmp
xchg
mov
int
jecxz
ss
fisubl
mov
xlat
and
pop
cwtl
fwait
bound
mov
lds
jae
sti
push
dec
and
push
mov
add
mov
out
addr16
or
and
pop
int3
orl
jge
sti
pop
data16
mov
sbb
cmp
and
outsl
jne
popf
int3
mov
test
mov
not
sub
push
mov
adc
lods
mov
lods
out
mov
jb
jl
clc
and
ret
leave
sub
and
xlat
sbb
out
xor
shrb
adc
adc
sbb
fwait
data16
and
or
adc
idivl
in
pop
xchg
xor
daa
repnz
sub
maskmovq
shll
xchg
jno
in
shll
loop
pop
xor
andl
loope
cmp
sub
imul
cli
jg
idivb
mov
mov
cwtl
add
fcoms
in
xchg
mov
add
imul
sbb
adc
or
mov
js
les
leave
dec
movsb
fistpll
mov
dec
xchg
stos
fisubrs
or
insl
aas
dec
push
sbb
mov
pop
cltd
pop
inc
aad
dec
icebp
test
xor
sahf
sbb
cmp
bound
sub
pop
push
and
dec
sub
cmpb
das
mov
popf
adc
arpl
test
cmp
mov
rcrl
mov
xchg
ja
popl
out
lret
shll
ret
xchg
sub
jo
xlat
bndstx
mov
dec
xchg
push
add
outsb
negb
mov
push
xchg
cmpsb
jg
call
out
lods
ljmp
roll
pop
sub
mov
insl
sub
push
xchg
mov
decb
out
out
fidivl
fstl
adc
ds
push
mov
adc
aas
lcall
mov
xor
into
lods
jne
jge
add
cmp
lock
cmp
lock
mov
dec
lahf
cmc
jg
scas
xchg
push
bndstx
or
rolb
int
scas
iret
mov
mov
push
push
xor
add
add
push
push
orl
popf
loop
lcall
inc
js
xlat
fldt
cs
dec
and
repz
dec
inc
add
pop
cmpsb
push
arpl
lea
inc
push
mov
xchg
test
pop
movl
inc
push
arpl
cwtl
pushf
xlat
call
sub
aas
push
jge
push
fistpl
adc
cmp
fildl
cmp
sub
jmp
out
call
sarl
je
push
lods
mov
fwait
push
aas
sub
movsl
cli
movsl
shl
mov
in
data16
stos
cmp
and
test
xchg
jne
adcb
sub
outsb
cld
and
outsb
cmc
in
xor
inc
in
je
mov
and
cmp
adc
mov
popa
jb
jne
mov
push
mov
loopne
mov
cmp
pop
les
pusha
jbe
movsb
les
push
dec
add
mov
lods
ss
mov
ret
add
mov
out
jge
cmpsb
push
leavew
jns
test
mov
lods
inc
outsb
adc
xor
out
lea
int3
mov
inc
sub
ja
xor
icebp
bts
clc
cmpl
xchg
addb
dec
hlt
inc
lds
fdivrs
xor
xchg
and
and
pusha
push
adc
jo
jnp
cmp
or
pop
fucomp
popf
cwtl
dec
fs
scas
daa
dec
sub
and
sti
out
outsb
fs
nop
out
test
mov
aam
and
mov
sbb
out
xor
sti
test
jbe
and
inc
mov
ret
aad
pop
xchg
pop
add
fwait
or
xor
dec
scas
hlt
sub
fisubrl
jmp
add
push
xchg
pop
xchg
cmpsb
sub
clc
nop
sub
sbb
cmp
clc
pop
movsl
adc
push
xor
test
xor
int
cmp
jmp
xchg
xchg
adcl
aaa
pop
es
inc
fsts
ret
jbe
sbb
jb
ret
leave
cmpsl
iret
out
sub
movsl
inc
mov
push
dec
notl
test
xor
loop
push
ss
push
and
sub
xlat
pop
jmp
loopne
test
mov
dec
and
inc
out
dec
mov
adc
movsl
es
xlat
sub
and
nop
lea
inc
pop
setae
mov
sbb
dec
testb
cmp
jo
sub
inc
push
ret
aas
inc
fwait
lret
add
ljmp
pop
lds
push
in
mov
mov
xor
lret
je
cld
inc
mov
lock
or
mov
mov
dec
inc
test
jmp
adc
popf
sub
loopne
imull
push
pop
scas
ret
daa
jae
push
iret
pop
xor
pop
mov
stc
jae
push
leave
nopl
sbbl
xchg
into
pop
push
sbb
inc
dec
xchg
fmuls
push
adc
adc
sub
and
push
pop
xchg
and
cmp
or
pushf
cmp
or
les
mov
jbe
xchg
mov
stc
cmp
jb
mov
insb
lret
insl
xchg
push
sub
fwait
pop
jno
and
mov
inc
sub
push
mov
ds
pop
ds
mov
out
scas
es
lea
jmp
mov
pop
ret
cmpsl
fstl
push
inc
lahf
fcoml
xchg
pop
sub
push
enter
mov
test
cmpsl
mov
jmp
jg
in
cld
cli
test
pop
and
les
mov
mov
clc
loop
fistps
jecxz
jnp
nop
roll
lret
jg
or
rolb
jecxz
xchg
popf
lds
xor
jmp
in
mov
popa
pop
push
pop
mov
mull
or
aaa
dec
and
loop
popf
sbb
call
dec
notl
stos
jecxz
sbb
push
fcmovnb
xlat
fnsave
xchg
lret
ds
or
jno
mov
cmp
out
leave
aas
std
out
xor
jmp
xchg
add
setb
jnp
mov
shrb
popf
mov
pop
dec
test
pop
int3
mov
add
lods
mov
jge
cmc
lea
xor
lods
pop
and
sub
push
loope
ficoml
mov
cmpsb
ds
les
sbb
push
adc
scas
xor
filds
mov
and
test
pop
std
mov
dec
mov
mov
push
loop
shlb
xchg
dec
jno
sahf
cmpsb
adc
jp
push
orl
in
movaps
and
xchg
in
dec
fwait
ds
out
adc
in
data16
add
iret
pop
scas
repz
shlb
xlat
push
sarl
ljmp
push
pop
sub
mov
in
pop
lock
xor
idiv
and
fstps
loop
adc
call
add
add
lods
clc
or
jle
pop
mov
xlat
xchg
xlat
rcrb
clc
push
mov
gs
inc
in
fs
and
lahf
mov
jns
and
inc
jl
mov
dec
sub
lock
iret
mov
inc
ds
scas
aam
iret
push
pop
nop
xchg
cmp
adc
call
gs
push
cmp
cli
or
out
push
jo
nop
xor
mov
cmp
adc
hlt
sbb
aam
or
mov
mov
cs
in
mov
loop
cmp
dec
mov
outsl
jae
pop
xchg
mov
out
cwtl
pop
dec
fimuls
paddsb
inc
and
mov
xchg
cld
popf
push
frstor
inc
xor
stos
adc
and
mov
pop
cmp
mov
dec
lret
mov
sbbb
int
sbb
fidivs
mov
xchg
imul
fsubp
lcall
scas
dec
jl
lret
sub
adc
push
test
rcll
out
into
inc
rcl
scas
fsubrl
or
push
lcall
les
and
lea
mov
or
mov
movsb
mov
push
mov
outsl
sub
js
jmp
push
adc
jae
add
lcall
cltd
loop
xchg
aaa
push
insl
ja
and
lea
fimuls
inc
mov
mov
dec
aad
mov
stc
push
into
mov
les
push
hlt
ja
loop
into
xor
orl
inc
or
pop
mov
sub
shlb
cmpsl
lods
push
pop
lahf
imul
iret
mov
vorps
xor
sub
nop
fidivrl
mov
add
rolb
jo
rcrb
mov
test
dec
fldenv
pop
pop
mov
jle
and
lock
mov
or
in
or
mov
jmp
push
jecxz
mov
sub
jp
mov
fnstenv
iret
xor
add
mov
stos
mov
add
sarl
pop
and
int
icebp
in
pop
pop
xor
cmpsb
sub
mov
sbb
nopl
loope
cltd
mov
xor
fs
adc
jnp
or
mov
pushw
lods
scas
jmp
adc
repz
pop
inc
mov
mov
test
add
sbb
xor
loope
or
test
cld
mov
and
aad
leave
or
cmp
int3
xor
cmp
clc
enterw
out
and
jne
aas
or
mov
sub
dec
aaa
or
and
divb
push
sbb
xchg
in
lret
les
jns
aaa
fisubrl
pushf
cmpsb
sub
jle
stc
outsl
add
fcompl
jle
cmpsl
or
jmp
sbb
mov
cmp
xchg
mov
jae,pt
out
leave
jmp
ds
xor
dec
fistpll
andl
lahf
es
arpl
add
pop
sub
mov
mov
sarl
pop
sub
std
mov
in
daa
and
repnz
xchg
push
test
or
mov
ja
cmp
or
push
popf
ss
jno
or
fistps
mov
into
adc
push
xlat
cmp
fimull
dec
inc
bound
dec
and
cltd
jo
jmp
xchg
xchg
mov
sahf
shll
addr16
inc
aaa
call
xor
add
je
orl
xchg
int
arpl
cli
mull
sti
clc
mov
pop
into
lock
movsb
scas
sbb
or
fsubs
les
xchg
cmp
dec
pop
int3
hlt
mov
push
jecxz
fistpll
xor
lods
dec
push
pop
test
movb
cmpsb
inc
mov
xchg
repnz
les
and
push
shrb
xor
dec
shlb
mov
pop
aas
arpl
dec
lock
mov
mov
scas
or
outsb
mov
outsl
sbb
stc
jbe
filds
shll
cmpsb
lahf
pop
mov
push
jge
mov
jns
mov
pop
mov
pinsrw
xchg
xlat
xor
test
inc
xor
mov
pop
nop
testl
pop
sbb
or
mov
pop
mov
jns
fiadds
inc
xor
gs
stos
repz
cli
shll
jns
fmull
test
shlb
pop
dec
xor
inc
popf
mov
stos
add
jb
xchg
lds
loope
adc
call
hlt
hlt
xchg
shrl
mov
cmpsb
das
stos
jnp
pop
cld
pop
outsb
sub
xchg
notb
push
lret
mov
decl
popa
mov
mov
rolb
pop
cltd
nop
cwtl
je
mov
push
cmc
lds
dec
pusha
hlt
cmp
push
and
push
cld
das
sbb
insl
lret
insb
add
daa
mov
inc
xchg
jnp
cmpsl
nop
jb
xchg
hlt
pop
frstor
ror
or
aad
mov
cmpsl
sbb
or
xor
lods
add
arpl
stc
jle
addb
or
sub
sti
xlat
jl
cs
jb
stc
movsl
xor
adc
push
insb
push
xchg
testl
push
add
jo
cmp
ja
adc
cwtl
loop
cld
test
hlt
push
jno
sarb
cltd
stos
addr16
mov
xchg
pushf
ja
clc
arpl
lods
stc
aam
sub
jae
dec
gs
ja
push
ja
daa
scas
dec
rcrb
push
dec
movsl
icebp
jge
sbbb
mov
andl
inc
xchg
mov
leave
mov
test
sub
dec
mov
leave
pop
icebp
lods
xchg
stos
repnz
adc
insb
mov
xchg
inc
xor
adc
xor
sub
lret
fs
ss
fcoml
testb
adc
les
paddusb
sti
dec
inc
or
fsub
xchg
mov
push
negb
lahf
addr16
xchg
mov
mov
in
mov
iret
mov
stos
sbb
pop
movsl
loopne
out
add
popa
jecxz
sti
lock
mov
adc
jne
divl
fisubs
lahf
sub
jne
xor
pop
jne
jae
xchg
adc
mov
aas
mov
popa
and
cs
mov
aas
adc
insb
fs
pop
sub
and
gs
inc
and
push
in
out
jo
adc
pop
mov
pushf
mov
sub
popf
data16
jnp
mov
jo
sti
ljmp
into
add
iret
push
andb
pop
push
or
inc
lock
cltd
lahf
push
mov
mov
rcr
out
rolb
jnp
daa
ficompl
ss
sbb
inc
orb
shll
mov
addr16
hlt
mov
aad
cld
js
ss
push
leave
test
push
andl
push
imul
inc
jl,pt
jbe
or
or
lahf
and
daa
sbb
fwait
jne
jle
shrl
inc
sub
sub
adc
pop
or
lret
mov
and
repnz
mov
scas
fbstp
es
lods
mov
inc
push
and
pop
and
lret
xor
mov
dec
es
ficoms
or
cld
outsl
sub
fmuls
stc
cmpsb
dec
sub
mov
lock
rcrl
jnp
lds
inc
sub
fimuls
mov
inc
xor
xor
mov
xor
pusha
test
add
stc
ss
mov
rcll
and
xor
cmp
popa
push
sub
ret
push
cmpsl
push
pop
xchg
shrb
xor
clc
ror
adc
add
nopl
push
adc
and
cld
aad
and
add
cmp
xchg
pop
or
xor
mov
aad
data16
mov
ljmp
bound
dec
popf
data16
jnp
es
jns
sbb
xchg
cmp
int3
xor
test
dec
lahf
test
or
jb
inc
mov
inc
cmpsl
adc
push
cmpsb
out
aam
mov
jge
rol
or
or
insl
push
imul
xor
push
fwait
sub
mov
imul
mov
lods
mov
cmp
or
cwtl
pushf
add
mov
outsl
xchg
add
xor
arpl
aas
fs
rcl
jle
int3
sarb
sub
test
xchg
in
or
mov
orb
add
sub
jnp
push
insb
aas
mov
cli
rcr
push
xchg
push
mov
scas
xchg
inc
in
cmp
adc
fisubrs
mov
adc
fs
icebp
dec
cmc
ss
pop
push
add
or
pop
push
movsb
cmpl
adc
and
xor
iret
mov
insl
cmp
enter
push
leave
out
mov
jne
xchg
or
sbb
sti
dec
add
negb
call
insl
push
stc
pop
pop
sbb
pop
mov
inc
cmp
sbb
rolb
xchg
ret
mov
test
pop
in
jns
fisttpl
shll
cwtl
mov
push
call
repz
push
mov
pop
rcrb
ds
mov
cltd
xchg
enter
int3
pop
inc
push
in
loopne
inc
stos
je
ss
shlb
xor
or
daa
movsb
call
lds
fsub
cmp
inc
mov
lret
scas
jbe
cwtl
inc
pop
add
add
lock
pop
loopne
xor
dec
mov
cmc
sub
xchg
cmp
rorl
dec
dec
les
cli
mov
js
ror
iret
sbb
sbb
sub
bound
push
sbb
and
sbb
or
outsb
dec
adc
xor
add
cmp
sub
adc
add
or
fadds
mov
dec
push
push
xchg
push
xchg
insl
loope
pop
sbb
push
pop
daa
sbb
in
push
dec
fwait
xor
adc
xchg
popf
icebp
or
loop
mov
jg
inc
pop
jecxz
pushf
add
xor
movsl
in
outsb
push
das
outsb
or
movsl
and
add
or
enter
or
mov
xchg
push
insl
xchg
std
add
inc
pop
mov
xor
sub
outsb
sbb
or
cwtl
xchg
sbb
ret
mov
jmp
xor
mov
outsb
icebp
cld
int3
shl
sbbl
push
or
mov
jnp
incl
ret
add
in
inc
or
test
out
mov
inc
lock
incl
xchg
dec
idivb
jge
leave
aaa
lds
gs
jo
scas
push
dec
mulb
mov
scas
gs
mov
out
and
sti
insb
shl
icebp
insb
adc
out
pop
rcl
testb
cmp
push
test
sahf
xchg
push
mov
sub
xor
xor
lods
jle
add
xor
dec
and
cli
mov
inc
pop
fs
and
sub
push
cmp
xchg
push
shrl
sbb
ss
mov
sbb
faddl
test
dec
dec
insb
sarb
sti
stc
jecxz
dec
mov
stos
imul
xchg
into
movsb
sbb
push
sub
xchg
loope
cld
add
cwtl
xor
jg
hlt
popf
mull
xlat
add
mov
movsl
or
repnz
test
fisttps
sbb
stc
xchg
loopne
inc
jae
jmp
adc
jmp
add
filds
dec
dec
mov
popa
jmp
int3
and
fcmovbe
pop
push
jmp
imulb
lret
out
xchg
orb
mov
fldenv
push
dec
les
jmp
scas
add
fnstcw
mov
add
in
jo
into
sbb
push
cmpb
shl
and
loop
pusha
jns
mov
test
push
mov
int
call
inc
mulb
xor
test
out
inc
adc
shll
fimuls
or
add
rolb
adc
subl
jge
aas
test
mov
lret
mov
in
jl
dec
jne
pop
subb
adc
cwtl
xor
sub
enter
enter
mov
mov
lds
mov
sub
les
subb
jge
bound
sub
cmc
sbb
sub
push
add
add
iret
out
dec
cmpsl
in
mov
jge
inc
dec
loope
lcall
push
pop
in
movsl
push
mov
dec
mov
pusha
icebp
rcll
xor
and
cli
cmp
fildll
in
jle
fisttpll
lock
inc
inc
fsubrl
pop
lret
cmp
rclb
nop
pop
push
dec
pushw
mov
scas
mov
pop
lret
pop
in
cltd
andl
das
mov
mov
ds
push
mov
mov
fstps
sub
sarb
pusha
jae
scas
mov
inc
inc
mov
pop
sbb
mov
movsl
xorb
xor
push
or
sub
add
adc
call
in
out
sub
mov
mov
mov
dec
ret
mov
sbb
adc
mov
dec
mov
inc
rclb
imul
cs
pop
shrl
insl
lcall
shll
lret
xor
lret
mov
nop
mov
loop
fsubs
inc
scas
cwtl
lea
scas
jnp
pop
push
mov
inc
xchg
or
fcmovnb
fbstp
push
and
xchg
adc
or
push
mov
and
xchg
adc
sbb
jo
jno,pn
mov
xor
fmull
push
push
outsl
cwtl
inc
xchg
xchg
aaa
mov
and
test
xor
ficoms
xor
cmp
xchg
jge
shll
test
cmpl
and
and
inc
lahf
inc
xor
rcll
dec
fiaddl
jns
jle
mov
mov
fstpl
out
in
jo
sahf
es
jno
pushf
sahf
in
leave
inc
gs
xchg
clc
sub
mov
mov
cmovbe
mov
dec
popa
movsl
pop
std
into
adc
popf
jge
cld
xor
rorl
aam
pop
lret
stc
xchg
fadds
inc
das
adc
and
jl
cs
dec
cmp
aam
push
sub
mov
and
xor
stos
sbb
test
and
loopne
sbb
stos
lods
rorl
cwtl
fsubp
bound
cmc
cmpb
mov
sub
cmc
jo
jno
mov
pusha
jae
adc
cmp
arpl
add
xor
sub
mov
inc
sbb
mulb
mov
fsubs
roll
push
fwait
roll
shll
and
pop
push
dec
aad
xor
lcall
test
and
dec
dec
pop
push
cltd
aaa
cmp
repz
pop
or
cwtl
push
lds
ss
adc
mov
nop
mov
xchg
inc
jae
adc
add
scas
xchg
jp
push
out
pop
das
xor
ja
cld
test
jecxz
inc
push
pusha
or
dec
push
add
negl
icebp
cmp
jnp
push
ja
das
and
movsl
out
sbb
xchg
adcb
in
shl
mov
dec
fldl
dec
je
push
jns
xor
subb
mov
insb
iret
sub
push
add
cmc
add
xchg
xor
inc
mov
aam
popa
fdivrp
lea
sub
mov
sbb
lcall
leave
mov
mov
mov
mov
xchg
stos
lods
mov
push
jno
arpl
xchg
inc
xchg
js
jl
xor
lret
push
scas
jp
sub
xchg
shrl
repnz
cld
xchg
pop
adc
les
in
jecxz
pop
mov
pushf
push
mov
jg
sbb
lret
lret
sbb
in
mov
insl
shll
cmp
pop
aaa
xchg
push
loop
push
insl
shrb
cmova
mov
cli
inc
push
push
adc
je
mov
scas
gs
outsl
pop
push
bound
fiadds
and
and
sbb
add
ds
gs
jp
mov
sbb
cmp
xor
sbb
repnz
xorb
iret
repnz
adc
cmp
aam
out
add
inc
mov
jae
sub
scas
or
pop
jno
repz
std
test
scas
gs
jl
frstor
mov
mov
stos
jo
int
xor
pop
lcall
ljmp
stos
sbb
cmp
orb
enter
xchg
adc
mov
sbb
add
hlt
pop
lods
cmpsb
push
adc
sbb
mov
pop
mov
pop
add
clc
mov
sbb
jg
mov
xor
and
or
ja
sub
je
cmp
jge
lret
add
cmc
repz
xor
mov
popf
rorl
pop
pop
lods
sti
lods
outsl
dec
lock
in
add
lock
dec
cmp
jp
push
mov
xchg
dec
jp
inc
pusha
aam
mov
repnz
or
mov
ljmp
outsb
jge
add
mov
lds
fcmove
xchg
mov
push
lret
push
popa
push
aas
mov
xor
and
xor
shlb
sbb
jnp
mov
fs
mov
push
mov
adc
mov
gs
imul
or
push
lahf
lea
dec
inc
repnz
std
fldt
mov
movsb
push
movsb
lods
dec
aaa
loopne
push
fs
xor
int3
ja
nop
push
cmc
hlt
mov
cmc
mov
mov
test
pop
rclb
add
stc
repnz
fcmovnbe
mov
xchg
loop
or
xchg
add
fmuls
mov
pusha
add
mov
ss
ret
pop
loop
or
jne
test
add
inc
jbe
and
test
ret
repz
js
sahf
shrb
sbb
in
rcll
ljmp
ljmp
and
lock
test
xor
andl
pop
es
stos
sahf
lahf
or
adc
insb
rolb
sarl
and
xchg
and
aas
mov
in
stos
sbb
jbe
and
inc
xchg
shrl
daa
loop
mov
jne
rcr
call
sbb
push
out
test
sbb
jecxz
inc
jmp
and
ss
mov
iret
xlat
mov
pop
insb
aaa
xor
rol
inc
mov
push
mov
insl
xchg
cmp
dec
adc
addr16
rcll
mov
jnp
pop
ss
or
outsl
xchg
adc
jl
cmp
or
aas
ss
mov
jbe
out
repz
pop
mov
clc
adc
push
pushf
jp
je
mov
rcrb
pop
out
adc
jg
and
stos
dec
sub
dec
cmc
fwait
sti
dec
pusha
sbb
test
or
dec
les
add
inc
cmp
insb
icebp
jb
ret
aaa
imul
pusha
mov
les
scas
addr16
mov
cmp
push
and
cmp
push
insb
add
gs
jnp
mov
ja
pushf
gs
jg
sti
ja
js
mov
mov
inc
inc
mov
push
dec
adc
xor
xlat
and
inc
sub
daa
add
aaa
outsb
push
iret
das
mov
js
lods
dec
cmp
dec
xchg
ret
mov
jo
mov
xor
je
mov
inc
add
insl
push
cs
or
jae
push
and
shrb
fnsave
jns
iret
xchg
test
xor
nop
sub
jb
mov
fisttps
fisubrs
std
inc
jge
fimuls
dec
pop
cmp
mov
mov
sbb
push
xchg
cmpsl
call
xchg
lds
pop
adc
jg
lods
mov
std
and
imull
pusha
pop
cmp
std
in
pushf
push
enter
cmpsb
iret
fcompl
insl
sbb
gs
shrb
out
pop
out
frstor
inc
punpcklbw
jle
mov
int
mov
inc
inc
lock
imul
push
sti
pop
xor
cmp
sahf
subl
cmp
cmp
cltd
push
imul
jg
pop
rcrb
sub
and
out
push
or
mov
mov
mov
xchg
sub
outsb
pushf
int
jp
jbe
js
jmp
add
shlb
test
sub
adc
mov
int3
and
inc
addl
fmuls
into
xchg
mov
jne
in
ret
out
add
sub
fsubp
pushf
pushf
and
lds
mov
shr
dec
sub
push
jge
pop
pop
fwait
addl
loop
stos
dec
mov
xchg
fidivl
sub
mov
mov
pop
fbld
push
popf
push
sub
fcmovne
lahf
mov
rorb
pop
les
mov
fimuls
jl
cmp
mov
push
loopne
popf
ds
sti
lods
into
xchg
sub
lea
ror
fs
sahf
icebp
pop
js
repnz
insl
repz
mov
cli
push
xchg
xor
cmp
or
mov
dec
iret
lods
lret
imul
insb
xor
sub
mov
mov
cmp
push
rcll
add
ljmp
scas
enter
cmp
or
aas
jecxz
adc
mov
cwtl
imul
jg
and
and
movsb
dec
mov
fldl
dec
inc
lahf
fbstp
adc
add
adc
add
cli
sub
in
sbb
xor
faddl
in
imul
lock
stos
stc
xchg
in
mov
loope
int
pop
sbb
push
sub
pop
add
in
pop
sub
xchg
jns
addr16
scas
roll
cmp
out
push
mov
cs
out
dec
and
lods
std
into
sbb
mov
pop
cmc
xlat
push
rorb
cmp
or
lods
addl
sub
cs
out
jno
fistl
push
xchg
lock
arpl
arpl
xchg
adc
iret
lahf
push
lods
in
add
test
cltd
and
sahf
daa
push
sub
fsubrs
mov
test
outsb
insl
fsts
in
inc
movsl
arpl
pop
inc
test
ljmp
jge
jbe
pop
stc
cmp
dec
jge
test
scas
roll
xchg
push
and
push
jbe
pusha
outsb
add
or
shlb
add
fistpl
int3
jge
outsl
aaa
rolb
mov
mov
lea
insl
mov
gs
sarb
sbb
je
popf
mov
push
or
mov
add
fisubrs
inc
loope
movsb
ret
leave
cwtl
jae
inc
repz
scas
jmp
xchg
loopne
fcomp
movsb
insl
xor
mov
xchg
push
mov
daa
jl
test
or
es
push
je
das
arpl
lods
and
cmpsb
dec
xchg
push
roll
push
mov
out
push
outsl
pop
dec
fisubs
outsl
jo
rcl
or
icebp
inc
xchg
or
xchg
inc
jno
rcrl
sub
xlat
push
xchg
out
popa
mov
movsl
repnz
outsl
jmp
cltd
xchg
cmp
inc
mov
rcl
ds
pop
or
stc
loope
xor
add
push
and
fidivl
mov
sbb
jl
push
sbb
out
not
imulb
nop
mov
inc
rcrb
mov
pop
movsl
jb
jg
inc
xor
mov
and
loop
sbbl
movsb
push
push
cltd
sbb
push
aaa
jmp
and
mov
cmp
mov
pop
pop
into
out
xor
test
addb
add
ja
in
mov
in
pop
repnz
push
adc
not
fstps
cwtl
imul
adc
pop
gs
mov
mov
sbb
cwtl
add
and
push
sub
lock
jmp
mov
sbb
inc
jp
stos
ljmp
fists
pop
clc
sub
mov
out
cs
out
adc
fldcw
pop
add
jb
jmp
inc
push
fidivrl
imul
push
nop
int
push
fbld
es
jl
repz
jae
int3
int
scas
push
cmp
cld
xchg
lahf
lret
pop
in
in
popf
and
push
mov
cmp
addl
movsb
add
loopne
std
addr16
jbe
gs
pop
movsl
push
mov
sbb
mull
pop
push
cmpsb
add
enter
dec
insb
lcall
mov
addr16
insl
dec
mov
idivb
inc
imul
ljmp
repnz
icebp
movsl
xlat
aas
out
test
or
add
nop
and
pop
jl
aad
push
add
loopne
and
or
xchg
rolb
notl
daa
add
xchg
pusha
mov
rcrb
or
sbb
mov
cmc
cmp
pusha
lds
pop
fs
icebp
or
out
xor
jmp
xchg
add
push
and
mov
mov
lcall
or
das
nop
out
faddl
cltd
cwtl
jge
je
push
or
sub
sub
inc
pushf
sub
negl
lcall
push
jae
jle
sub
pop
adc
mov
sbb
cmp
push
iret
xchg
jmp
push
out
andl
loop
notl
nop
pushf
inc
cmp
or
mov
mov
imul
aaa
scas
push
fwait
bnd
test
imul
xor
sub
jp
cmp
xchg
repnz
clc
pop
mov
movsl
mov
or
sub
sub
in
ficompl
popl
rcr
sub
test
xchg
filds
test
arpl
stos
push
inc
sbb
push
push
inc
ss
adc
sbb
cld
jp
sbb
cmpsl
jg
adc
pop
mov
and
out
sbb
popa
insl
adc
add
jne
cli
jns
sahf
insb
mov
xor
lea
xchg
dec
sbb
cmpsl
cmpsb
or
out
mov
inc
fs
cmp
sub
sub
out
sub
adc
addr16
mov
test
adc
cmpsb
push
push
cmp
xchg
xchg
decb
sahf
rorb
jb
mov
movsl
rorb
in
cmpsb
xchg
inc
repz
mov
je
sbb
loop
mov
out
subb
mov
push
add
push
cmc
fldcw
cmp
push
out
and
mov
adc
sbb
push
sub
mov
pop
push
mov
mov
push
testl
push
mov
sbb
imul
mov
jno
sub
lret
popa
xor
mov
xor
cmp
rclb
movsb
dec
lock
xor
sahf
addw
mov
or
or
xor
dec
mov
pop
pop
lods
rcll
sbb
rorl
mov
shll
cltd
shlb
arpl
cmp
mov
add
aad
arpl
jmp
lret
jae
push
pop
and
mov
cmpsl
cmpsb
add
cmp
fisubl
clc
pop
mov
imul
and
icebp
pop
add
popa
mov
daa
call
cmp
arpl
mov
add
idivl
cmpsl
inc
xor
ja
ret
lock
lcall
pop
push
xorl
dec
repz
jb
aas
sbb
mov
xor
mov
xlat
jbe
loopne
std
sub
xor
std
or
pop
out
adc
pusha
inc
inc
sbb
out
push
iret
ljmp
xchg
fbld
cmp
std
inc
or
jmp
outsl
sbb
rcrl
xchg
xchg
dec
out
inc
insl
jmp
dec
jle
fcom
aas
mov
sahf
cmp
out
jae
loope
es
imulb
xchg
mov
xadd
pop
test
jae
call
rcll
xchg
test
and
mov
mov
inc
inc
filds
and
int
cmp
jnp
fnsave
and
pushf
dec
cli
out
sbb
push
lock
sbb
xchg
fs
jb
add
fnstcw
incb
or
stos
dec
mov
das
pop
or
adc
xlat
movsb
sub
xlat
jb
jae
cmpsl
insl
rclb
or
lds
pop
push
jne
add
test
lahf
mov
push
add
cmpb
imul
fs
jmp
lea
inc
lods
out
movsl
and
hlt
or
leave
adc
mov
inc
xor
and
lods
sub
call
das
aam
sub
out
mov
sbb
int
roll
push
mov
int3
outsl
fcoms
ret
pop
cmp
mov
sbb
jmp
push
movsl
adc
test
push
and
push
lcall
cltd
inc
jge
ljmp
sub
testl
sbb
inc
push
mov
adc
or
test
out
inc
or
stos
mov
aam
ljmp
or
movsl
add
jmp
insb
sbb
shlb
push
sti
adc
repz
shrl
inc
lahf
adc
xor
jmp
jae
stos
mov
aaa
ficoms
mov
xchg
dec
fimuls
rcll
data16
sub
jne
les
in
stos
lock
out
inc
adc
adc
movsl
mov
popf
fwait
xchg
sub
arpl
invd
testb
mov
test
mov
and
push
in
or
mov
test
pop
shrb
or
lcall
in
jne
jl
nop
dec
ret
add
mov
aas
push
xor
xchg
test
inc
mov
xorl
xor
push
dec
popl
dec
aad
xor
sbb
push
leave
out
add
or
pop
cmp
xchg
inc
pop
cmp
jb
jbe
ror
mov
into
sbb
loope
movsl
lahf
xchg
popl
inc
decl
ja
xor
mov
or
in
cli
int3
scas
xchg
insb
test
out
mov
mov
outsl
or
pop
test
xchg
mov
xchg
addb
xchg
out
setge
dec
sbb
ljmp
gs
mov
imull
fbld
mov
aam
es
inc
mov
rorb
in
aam
mov
cmpsb
leave
lods
and
imul
dec
and
pop
jle
jmp
and
adc
fwait
xchg
mov
xchg
cs
cs
mov
nop
sbbl
push
mov
adcb
testb
xor
in
test
cld
push
dec
mov
outsb
mov
lcall
decb
fwait
cmp
adc
push
add
shrb
mov
subl
dec
dec
mov
mov
cld
std
cltd
and
shl
ja
out
lret
sub
std
add
push
fidivrl
dec
sub
lock
es
jnp
dec
sbb
jne
or
add
rol
mov
jnp
cmp
cmpsb
sbb
pop
xchg
or
sbb
cmpsb
mov
push
and
rcr
loopne
or
mov
das
add
xorl
sbbl
inc
mov
xchg
and
ljmp
ss
jns
cmpsl
xor
or
mov
shrl
dec
add
adc
js
movsl
aas
or
out
jo
mov
add
enter
sbb
jecxz
es
sti
outsb
push
xchg
sbb
jnp
cld
loopne
cmc
subb
ss
or
scas
pop
mov
inc
sahf
xchg
xchg
enter
mov
repz
cmp
repz
or
mov
inc
test
inc
into
aad
cs
iret
loopne
sti
test
andb
mov
out
add
cmpsl
hlt
adc
addb
add
xchg
xor
mov
mov
dec
adc
ror
adc
add
jl
push
pop
fnsave
sub
cmpsb
xchg
subb
mov
js
loopne
push
lods
mov
lock
mov
insb
jnp
xchg
xor
push
xchg
rcpps
mov
outsl
lods
inc
lret
in
or
cltd
nop
or
add
dec
and
adc
pop
push
sbbl
adc
shlb
dec
insl
mov
bound
xor
xlat
inc
xchg
mov
pop
cs
add
gs
ljmp
scas
out
inc
insb
inc
fdivr
and
push
fdivs
adc
mov
pop
fdivrl
push
cmp
jmp
cmpsb
sub
mov
iret
das
clc
lds
push
data16
dec
mov
cmpsb
lahf
xor
rolb
sbb
mov
xor
xchg
out
mov
shl
adc
ret
adc
jae
subb
mov
push
cmpl
push
push
rclb
jne
outsl
lret
xor
out
cmc
clc
and
loop
push
xor
dec
add
pop
das
xor
les
push
push
scas
mov
push
jbe
cltd
insl
lods
xor
sub
insb
jae
enter
cmc
loop
push
inc
divb
cld
and
sahf
mov
jl
shll
mov
push
mov
dec
je
les
movsb
lea
jbe
nop
loop
imul
and
pop
cmpsl
jg
nop
cmp
loop
jb
or
pop
out
xchg
cmpsl
test
scas
out
sbb
gs
aad
mov
mov
aaa
sub
cmp
arpl
pop
sbb
mov
int
push
mov
dec
call
lods
shrl
out
aam
mov
cltd
jo
cwtl
std
dec
test
sbb
mov
enter
pop
xorb
jns
mov
lods
bound
ret
push
jge
lock
cmp
jae
xchg
call
push
das
imul
daa
jbe
xorb
arpl
xor
sbb
jb
push
lahf
inc
jp
or
in
xor
adcl
mov
pushl
fiadds
pushf
mov
inc
xchg
jne
imul
lea
jecxz
cmp
fildll
push
pop
cmc
imul
jnp
lock
jo
add
in
in
xor
or
dec
out
xchg
jae
inc
lea
hlt
out
fsts
repz
sbb
mov
dec
dec
xchg
pop
pop
sbb
enter
loop
xchg
fwait
xor
jbe
push
or
lret
or
xchg
mov
dec
in
mov
cmp
sbb
data16
cmp
jne
loope
pop
jnp
ret
xchg
aaa
cvtpi2ps
add
sbb
outsl
dec
inc
xchg
cmp
data16
test
dec
inc
inc
rorb
cmp
or
inc
scas
clc
or
sar
mov
sti
push
add
mov
push
sbb
fwait
stc
mov
addr16
cmp
pop
adc
sbb
mov
adc
xchg
push
xlat
stc
mov
aaa
hlt
mov
jb
pop
mov
mov
cld
jb
scas
fwait
lods
xor
arpl
popf
jecxz
bound
mov
cmp
iret
scas
cmp
iret
ror
int
and
inc
and
and
mov
in
incl
jno
add
ds
in
loopnew
dec
pop
divl
ljmp
cmp
pop
iret
mov
adc
mov
push
loop
mov
int
jp
mov
outsl
jg
mov
loope
imul
jmp
mov
push
add
push
stos
xor
dec
push
inc
sub
js
inc
ljmp
int3
fadd
fisttps
mov
xor
loop
mov
sub
cmpsl
in
loop
ret
push
jge
inc
sbb
icebp
xor
jg
sbb
popa
cmp
or
dec
sub
push
dec
mov
aam
and
xlat
in
aam
std
adc
jg
and
movsl
add
sti
inc
scas
inc
outsb
fisttps
jl
fptan
das
test
and
das
ficompl
xor
push
bound
addr16
nop
dec
loopne
xor
mov
int
add
pop
inc
pushf
mov
test
scas
push
fistpl
mov
add
mov
push
sbb
bnd
fstpt
adc
mov
xor
sbbb
dec
test
cltd
xchg
fisttps
adc
sub
jnp
push
shl
push
pushf
shrb
lock
inc
mov
adc
cmp
sub
inc
iret
dec
and
aam
jecxz
pop
mov
rcll
loop
xchg
mov
push
loop
lret
sub
or
lea
repz
in
cmp
call
or
out
sar
or
or
mov
aad
ret
pusha
xchg
mov
andb
inc
fs
fdivrs
xchg
mov
mov
clc
inc
mov
out
lret
lds
mov
pop
pop
movsb
lcall
dec
rcrl
shll
and
sbb
imul
push
cmp
ret
and
out
and
ret
push
or
mov
imul
roll
adc
dec
cli
mov
jno
cmp
add
jae
icebp
xchg
stos
xlat
fwait
incl
cmc
aad
jmp
outsb
sbb
out
unpckhps
sti
sub
push
sahf
movsb
xor
mov
bound
mov
lods
jne
in
cmp
shl
sub
or
pop
rcll
push
cmpsb
pop
cmpsb
movsb
clc
and
pop
js
lret
push
cmp
pop
inc
inc
in
add
jge
dec
adc
xchg
jnp
inc
and
popf
clc
mov
mov
push
clc
addb
cmpsb
or
imull
lea
adc
and
pop
jno
inc
pop
outsb
add
push
roll
movsb
sbb
std
mov
popa
mov
push
test
mov
imul
test
test
lret
sti
and
fidivl
int3
pushf
icebp
jmp
adc
fidivrs
stc
and
out
mov
fs
push
push
cmp
in
jo
lods
ret
shll
mov
add
lods
int3
pop
testl
js
fstps
jecxz
xchg
dec
into
out
cmp
lods
mov
and
mov
push
mov
lods
std
clc
mov
ret
jge
cmp
ret
loope
jle
lret
daa
shll
popl
inc
insl
fdivrl
js
fidivl
sub
outsl
fstps
pop
ss
inc
dec
in
mov
push
pop
adc
rcrl
out
sbb
into
js
pop
mov
mull
xor
push
xor
loopne
mov
inc
push
das
shl
stos
and
mov
loopne
adc
dec
in
dec
mov
aam
jne
stos
loope
lds
xchg
lret
sub
loopne
xor
jbe
roll
lret
in
clc
inc
cmpsl
insb
push
lods
xchg
and
test
inc
cmp
jmp
shr
shl
lret
cmp
je
mov
xor
les
or
cli
push
sahf
nop
orl
mov
addb
int3
out
aas
popa
or
outsl
inc
data16
ret
mov
jl
push
ret
mov
sbb
mov
je
pop
pushf
fimuls
lods
mov
repnz
insl
add
or
dec
sbb
aam
lret
popf
xchg
cltd
add
pusha
cs
insl
ljmp
outsb
repnz
and
push
sahf
xor
jae
aaa
lods
dec
filds
ss
loop
jge
and
cli
mov
dec
xchg
scas
dec
sub
ret
pop
sbb
cld
mov
sub
jle
jns
je
in
sub
hlt
ret
fdivr
push
cmpsb
or
out
jle
jb
mov
lods
pop
test
sbb
inc
and
add
sub
mov
jle
adc
out
in
addr16
mov
add
mov
xlat
pop
inc
adc
fdivs
inc
inc
sti
clc
inc
cs
mov
xor
mov
lret
mov
mov
jnp
inc
push
pop
mov
adc
pushf
lea
loop
mov
aas
stos
sub
adc
mov
outsl
je
lret
loopne
sbb
rcrb
daa
mov
fdivrs
orl
imul
or
cltd
out
flds
repz
aad
ss
sub
popf
mov
lret
je
jle
mov
lea
pop
mov
cmpsl
das
cmp
out
push
push
inc
clc
test
lods
in
push
mov
loop
xchg
hlt
jno
orb
adc
pop
sarl
stos
fcmovbe
push
jecxz
hlt
push
js
xor
mov
data16
popf
scas
jmp
inc
or
xor
mov
dec
out
cli
sbb
out
out
movsl
cmc
xor
stos
dec
pop
add
insl
jl
inc
xor
in
lock
je
adc
insb
adc
out
jecxz
movsl
fucomp
mov
jno,pt
test
xor
push
in
ja
mov
hlt
and
int3
rcrb
mov
jbe
repnz
lds
addr16
fimull
fcmovne
adc
arpl
adc
das
test
mov
sub
push
mov
imul
xor
out
ljmp
imull
dec
cmpb
test
push
dec
js
data16
imul
xchg
cmpsl
sub
ja
push
mov
mov
rcr
call
sbb
shll
mov
dec
adc
push
fstps
stc
sub
cmp
inc
mov
ret
es
pusha
ljmp
imul
repz
fstp
dec
xchg
adc
mov
out
in
dec
aad
push
mov
adc
cli
inc
es
sub
sbb
hlt
into
inc
lahf
fwait
lock
xchg
pop
fstpt
xchg
jge
xchg
push
mov
cmp
mov
cmpsl
loope
xor
shl
fwait
cmp
daa
aaa
xchg
adc
push
jg
in
mov
out
aas
mov
jl
pop
sbb
sbb
xor
and
in
fwait
jmp
addr16
sub
mov
fwait
sub
cli
mov
cmpsl
movsl
rcl
xchg
test
out
sbb
sar
fstps
jg
mov
jecxz
pop
mov
pop
add
xchg
popa
push
push
xchg
fnstcw
push
lret
jle
shlb
mov
in
sub
xchg
cs
call
or
clc
xchg
push
and
sub
xchg
negb
out
repz
movsb
or
adc
aas
mov
repz
into
ficompl
pop
loope
outsl
sbb
mov
mov
and
std
int
lods
popa
xor
imul
loop
rcl
pop
clc
or
movsb
add
stc
outsb
hlt
popf
stc
push
lahf
neg
inc
inc
arpl
clc
sbbl
sbb
xor
xor
xchg
mov
outsb
sub
outsb
mov
mov
jo
mov
add
sbb
in
xchg
out
push
sbb
mov
inc
jle
xchg
es
dec
and
dec
arpl
outsl
int
and
rcl
or
mov
stos
mov
lods
and
sti
lahf
sbb
add
mov
int3
push
insl
inc
mov
adc
repz
push
cmp
mov
mov
lcall
push
sbb
push
enter
jnp
inc
popa
test
sbb
fcoms
cmp
or
inc
sbb
mov
sahf
fisubs
pop
jns
decl
loop
sbb
dec
incl
ljmp
xor
sub
jnp
mov
xor
dec
push
jl
cwtl
pop
sub
or
or
xchg
mov
fwait
pop
addr16
xlat
mov
das
sub
adc
mov
aas
mov
jne
fs
pop
or
mulb
loopne
mov
test
cs
cs
sub
or
or
shll
adc
push
std
pop
mov
and
add
xor
sbb
adc
repnz
ds
les
imul
or
sub
mov
dec
shl
cmpsl
insl
dec
lahf
out
xchg
jbe
mov
sti
inc
pop
and
shrl
adc
pop
mov
sbb
int3
xchg
lods
jbe
mov
push
imul
or
mov
ss
nop
pop
ja
push
xchg
mov
cmp
and
sbb
enter
popf
adc
pop
jo
aad
add
cmp
cmp
mov
inc
inc
lret
lds
lret
xor
mov
mov
xchg
cld
mov
and
fisttpl
push
mov
addb
cmp
aas
inc
push
lods
add
xchg
movsl
daa
sbbb
cld
je
lret
cmp
mov
cmp
and
push
lcall
int
add
mov
pop
adc
mov
in
or
int3
xlat
xor
add
push
push
popf
leave
fcmovnb
xor
mov
cmc
pusha
mov
xchg
adc
lods
mov
dec
sub
xchg
clc
pushf
cmpsb
loop
or
pop
arpl
add
sub
xor
and
ret
or
sub
lock
in
cwtl
jo
sti
mov
fucom
push
stc
rcll
and
sarl
fidivrs
repz
rep
outsb
in
gs
repz
cld
fs
xchg
movsb
int
dec
out
pop
rcr
les
add
call
mov
push
dec
movsb
aad
ja
push
push
pusha
imul
push
insl
in
pop
pop
xor
cmp
sarb
inc
mov
sbb
xor
das
xchg
dec
aad
dec
adc
sub
mov
les
pop
sub
adcl
pushf
push
aas
jp
jle
xor
nop
push
lea
lods
test
movsl
cs
js
orb
add
jmp
into
cmp
add
and
outsb
mov
mov
cmpsb
mov
xor
mov
les
jecxz
mov
push
and
mov
lock
int
ret
mov
sbb
pop
mov
lods
fwait
ds
test
aas
dec
jl
pop
in
ja
mov
jmp
enter
push
in
jno
jmp
fwait
inc
or
int
das
movsl
and
imul
pusha
pop
and
jno
pop
cmp
sbb
xchg
pop
movsb
stc
gs
pop
movsl
fistpll
mov
clc
push
mov
push
push
push
mov
cli
lret
out
imul
dec
pop
mov
ss
stc
cmc
mov
xchg
movsl
leave
add
cmp
dec
ja
sub
xchg
dec
push
xchg
push
es
popa
popf
mov
sub
push
jl
pushl
lods
cs
cltd
aad
shrb
xchg
lea
cmc
aad
xchg
subb
jb
fmuls
mov
adc
lcall
cmpsl
loope,pt
mov
sbb
xor
mov
loope
gs
adc
or
sbb
movsl
mov
pop
js
outsl
xchg
push
sbb
sbb
fidivrl
sti
int
sub
inc
mov
sbb
test
mov
loop
subl
dec
rcrl
push
out
pop
jmp
dec
clc
fwait
xchg
dec
or
repnz
sbb
or
cmpsl
data16
data16
movhps
adcb
out
pop
jnp
and
int3
mov
cmp
adc
inc
repz
cmp
call
clc
or
jge
mov
repnz
pop
sub
jg
fldt
add
add
orl
aad
out
mov
jg
push
sub
adc
xchg
pop
jnp
sahf
mov
movb
xorl
push
in
clc
sbb
nop
cmp
push
sub
inc
mov
sti
adc
cmp
stos
dec
jae
push
adc
sbb
scas
cwtl
pop
out
mov
repnz
clc
fisubrs
das
or
popf
lar
fcomp
cmp
arpl
repz
outsb
mov
xchg
arpl
add
aaa
sbb
loop
ret
inc
lods
push
mov
fwait
pop
mov
add
jp
sbb
pop
aas
xchg
lea
xchg
add
mov
add
mov
inc
inc
ffree
cvtdq2ps
pop
imul
pop
call
push
sbb
xor
cli
decb
jbe
mov
cmpsl
popf
icebp
adc
push
jae
idivl
pop
mov
fcompl
sub
xchg
addr16
jnp
mov
repnz
loopne
pop
pop
aad
adc
push
movb
in
sbbb
mov
and
push
xchg
popf
sbb
insb
shlb
mov
sbb
aad
mov
pusha
or
sbb
mov
or
cwtl
outsl
test
xchg
in
enter
jnp
cmpb
movsb
pop
fstps
mov
sub
xor
mov
in
cltd
out
cmp
pop
cwtl
adc
es
adc
popf
jne
daa
xor
add
call
lahf
mov
in
jae
cwtl
mov
shr
and
sar
or
cmp
inc
mov
insb
scas
add
push
jne
flds
add
shlb
pop
sub
push
in
out
out
jns
testl
out
movsl
aaa
push
and
and
lret
add
out
fisubrs
xor
jmp
in
insb
int3
jno
cmp
sbb
pop
mov
xor
push
cmpsb
sbb
fsubrl
xor
xchg
lahf
ja
push
add
in
inc
je
pusha
hlt
sub
mov
aas
mov
xchg
test
add
add
leave
or
imul
push
mov
ret
fstl
ss
sub
xchg
xchg
push
fisttpl
push
popf
adc
ret
fdivl
adc
out
dec
fcoms
filds
inc
jp
and
cmp
push
add
outsl
test
jo
cs
mov
in
mov
xchg
sub
mov
cmpb
cwtl
arpl
int3
add
shll
cld
inc
mov
in
ret
and
jnp
rcl
call
mov
cmp
sbb
and
xchg
mov
stc
out
xor
mov
insb
mov
mov
mov
addr16
enter
adc
inc
outsl
pop
ret
sbbl
jno
push
xchg
add
sbb
shll
loop
cli
mov
test
mov
dec
pop
push
xchg
addr16
sub
movsl
cmpsl
dec
xlat
in
cmp
scas
mov
push
mov
pushf
stos
mov
xor
sub
mov
fnstcw
outsl
sbb
imul
in
and
xchg
sub
je
nop
fimull
into
or
pop
push
into
or
outsl
addr16
pop
and
loope
out
pop
ret
rdtsc
mov
and
cld
insl
cmp
call
repnz
xchg
sahf
cmp
rcrl
filds
add
stc
push
cli
sti
daa
scas
sbb
push
fcomp
mov
jg
hlt
pop
fdivrl
pop
jae
scas
fnstcw
stos
sbb
adc
mov
pop
xor
sub
pop
sub
jge
or
xchg
push
je
and
jnp
stos
push
dec
xor
cmovs
mov
pop
mov
repnz
pop
push
fimull
sub
fdivp
cltd
inc
push
movsb
out
dec
jbe
iret
jge
imulb
ja
inc
push
push
fbstp
or
push
in
int3
insb
jno
jns
je
mov
adc
add
mov
enter
pop
cmp
mov
cmpsl
lahf
sahf
dec
jb
or
jge
push
sub
test
inc
xor
xchg
xchg
ljmp
inc
xchg
xor
rolb
dec
pop
loopne
add
add
xorb
pop
mov
and
dec
mov
or
sbb
sbb
dec
popf
call
mov
and
or
mov
jne
pop
pop
add
fidivs
rclb
fmulp
shll
inc
add
fisubrs
bound
jmp
xor
pop
mov
sub
mov
sti
fildll
inc
ret
cmp
ljmp
adc
cld
scas
repnz
pop
push
pop
fbld
scas
add
or
jecxz
dec
sbb
cmp
xchg
sub
mov
adc
arpl
in
in
ds
imull
cmp
fsubl
es
orl
les
bswap
js
lods
iret
or
add
mov
cmpsl
aam
pop
mov
mov
jno
mov
std
mov
out
insl
add
adc
rorl
stos
repnz
inc
push
sbb
mov
ja
cmp
nop
les
xor
cmp
xchg
add
mov
cmp
es
pop
sub
cmp
push
push
xchg
std
pop
sbb
out
jns
xor
mov
ret
dec
enter
rcrb
cli
rol
fld1
inc
adc
xchg
or
shll
cmp
push
inc
shrl
push
stos
inc
adc
and
cwtl
leave
and
clc
mov
sahf
lock
jae
jae
xor
les
inc
cmpsb
xchg
nopl
mov
mov
mov
jmp
adc
test
push
inc
sbb
cmpb
mov
or
dec
outsb
or
xchg
inc
or
push
adc
xorl
or
nop
addr16
sub
add
mov
add
cmp
mov
push
clc
movsl
js
push
aad
jge
adc
aaa
std
sbb
cmp
inc
orb
adc
movsl
cmpsl
pushf
mov
adc
mov
sbb
cmpsb
push
and
insl
dec
insl
leave
push
push
xor
jge
xchg
mov
cltd
sti
fs
or
lea
fcompl
daa
repnz
inc
and
push
jns
sub
fbstp
pop
imul
push
in
test
sub
fwait
cmp
outsb
mov
scas
icebp
mov
cmp
sub
jne
cltd
rdpmc
jb
jge
mov
fildl
cmc
cmp
repz
sti
inc
jae
dec
mov
sub
pop
xchg
xchg
cmp
pushf
dec
cmp
or
and
lahf
imul
loop
scas
into
out
adc
int3
cmpsb
xchg
sbb
cmpsl
fdivs
out
es
xchg
push
push
lahf
stos
mov
xchg
sub
mov
pusha
out
pop
fstpl
out
sub
dec
scas
test
pop
repz
in
mov
jo
xchg
inc
jno
mov
fnstenv
adc
in
inc
cmp
lret
cmp
adc
cmp
inc
pop
mov
xor
fcmovu
gs
iret
and
out
add
xchg
aas
jp
mov
rcrl
add
bound
test
std
cmp
mov
out
adc
cs
scas
outsl
aaa
push
or
pop
or
mov
add
je
pop
and
pop
sbb
cmp
sub
out
out
movsl
cli
cld
sbb
faddl
cmp
pop
push
and
mov
repz
sbb
cmp
xorb
fs
pop
mov
add
out
pushf
mov
popf
int3
cli
lods
inc
jne
fisubrl
in
push
add
ss
dec
inc
sub
rcr
mov
add
push
daa
and
mov
repz
movsb
ljmp
into
mov
fstpt
cmpsl
test
cmc
lods
aam
inc
gs
ret
inc
xchg
mov
arpl
xchg
sar
lret
out
orb
push
in
adc
adc
and
push
jne
sub
mov
in
pop
addr16
mov
out
sbb
sub
dec
stc
cmp
in
loopne
xor
clc
ja
jmp
cmp
outsb
jns
test
loop
ja
mov
xchg
add
and
lret
push
cmpsl
leave
push
or
or
arpl
pop
dec
mov
cmpsl
xchg
sahf
mov
lods
inc
std
adcb
xor
sbbl
mov
int3
mov
dec
orl
mov
lods
jmp
jecxz
xlat
adc
inc
test
lds
out
or
mov
cltd
fcomps
call
xchg
int
cmpsb
mov
cli
hlt
cmp
mov
xchg
mov
lock
sub
pop
notb
xlat
inc
lret
inc
es
mov
pop
add
insb
hlt
ja
out
nop
pop
jo
xchg
popa
cltd
nop
jecxz
xor
sub
fistps
leave
sbb
mov
mov
push
xor
sub
daa
ret
inc
pop
lahf
inc
cmp
cmp
mov
bound
imull
push
sub
xchg
pop
mov
movsb
fldt
into
jg
xchg
add
rcll
outsl
mov
jns
cs
lret
call
jmp
pslld
and
test
jb
arpl
repz
sub
out
xchg
out
xor
inc
inc
loop
mov
mov
adc
xchg
fcomp
add
ss
mov
je
fimuls
sub
jp
inc
les
jbe
adc
imul
addr16
push
and
fisubs
adc
mov
pop
out
push
add
dec
mov
decl
cmc
xchg
fwait
adcb
hlt
divb
int
cltd
adc
xchg
mov
inc
push
mov
cwtl
push
cwtl
bound
stc
mov
add
test
pushf
loopne
sub
ret
mov
push
or
and
stos
rorl
adc
jne
hlt
dec
mov
sti
rolb
shr
and
inc
dec
cmp
inc
movsl
repz
pop
inc
xor
std
gs
fdiv
adc
aas
mov
sub
fstl
popf
enter
fmull
mov
mov
cmp
call
xlat
lock
sbb
sub
dec
dec
frstor
clc
inc
sahf
or
add
in
scas
pop
imul
in
jae
cltd
push
fdivl
aam
sub
mov
and
inc
lods
jnp
je
xchg
iret
fnstcw
rcll
or
leave
xor
lea
imull
jg
xor
lea
shll
loop
ljmp
xchg
adc
dec
outsl
inc
mov
dec
sub
mov
inc
sbb
or
mov
lret
jne
loopne
arpl
int
imul
ficoml
jmp
es
adc
jle
lods
mov
sbb
in
jo
fists
push
mov
ljmp
sub
rcr
jmp
mov
push
fisubrl
fldl
cmpsl
out
sub
and
sub
inc
mov
pushf
dec
subb
cmpsl
add
mov
lcall
sub
inc
fisttpl
lret
inc
arpl
sub
fnsave
shl
stos
lock
imul
out
push
bound
xchg
jns
xor
cmp
sub
add
scas
adc
mov
outsb
fucomip
push
push
xor
jb
fcomip
lret
test
xor
sbb
data16
mov
pop
inc
rolb
enter
mov
movsl
dec
aad
test
mov
xor
jne
int
not
dec
pop
sbb
cmp
add
icebp
inc
sbb
or
or
xchg
push
roll
push
out
pop
mov
cli
mov
push
out
fstl
cld
push
cli
push
adc
cltd
push
jnp
in
mov
fsub
jo
fsubr
mov
jnp
loope
fucomip
xchg
cltd
pop
stc
out
cwtl
mov
sub
flds
popa
scas
jmp
insl
aas
test
xor
mov
mov
dec
mov
pop
pop
out
and
xor
pop
nop
sbb
inc
mov
data16
jnp
sti
sub
dec
xchg
inc
lea
cmp
push
pop
ljmpw
out
rorb
cmp
pop
jbe
sti
inc
xlat
dec
xor
ficoms
push
cmpsb
imulb
scas
xor
dec
jne
pop
lcall
adc
add
movsb
adc
out
push
jg
sbb
lea
or
or
mov
outsl
out
push
inc
scas
xchg
jne
push
dec
cmp
jbe
test
mov
fldenv
shl
cld
xchg
stos
mov
lock
jmp
jl
gs
lock
popf
lret
mov
jp
jl
test
pop
push
and
dec
shlb
es
inc
iret
outsb
mov
adc
or
xchg
xlat
push
dec
or
lea
out
je
incl
fwait
or
pop
out
cwtl
push
adc
adc
lcall
or
test
mov
lcall
repnz
pandn
int
inc
loope
es
test
scas
jno
jne
push
adc
pop
cmp
outsb
cltd
hlt
jge
mov
sub
mov
mov
inc
pushf
push
cmp
xchg
in
pusha
jmp
addr16
mov
jbe
jge
cwtl
inc
add
inc
mov
pop
fldt
and
outsb
mov
mov
loope
push
xchg
test
dec
sub
lcall
out
jecxz
shll
mov
popf
push
clc
repnz
add
nop
xor
icebp
test
in
pop
jmp
add
stos
xor
jns
iret
mov
push
dec
xchg
xor
cli
data16
jb
pop
jb
or
nop
bound
out
ret
sbb
cld
cmp
mov
insl
dec
xchg
fbld
adc
jns
movsl
andl
pop
popa
inc
movsl
out
in
cmp
sysenter
mov
inc
sbb
rolb
mov
cmp
xor
std
dec
xorb
cmp
dec
in
lahf
mov
pop
pop
jae
lds
test
pop
dec
cmc
sub
xchg
orb
insl
sub
mov
jae
testb
cltd
xorl
cmp
pop
lcall
cmp
aam
cmpsb
pop
add
xchg
sbb
dec
sub
lea
in
loopne
adc
out
dec
test
mov
in
jmp
ss
clc
xor
mov
dec
aam
xchg
pop
adc
dec
loop
sbbb
mov
mov
mov
push
shll
cld
ds
test
arpl
into
pop
daa
lock
inc
jecxz
imul
mov
ret
imul
inc
push
jecxz
insb
cld
jnp
fs
pop
movsb
adc
add
xlat
pop
mov
ljmp
lock
mov
rolb
dec
push
jge
dec
mov
adc
xor
nop
and
cli
lret
mul
popa
in
inc
push
mov
push
or
dec
pop
daa
lret
xchg
push
and
aas
dec
daa
js
xchg
adc
add
push
and
xchg
lods
and
sbb
mov
inc
addl
sub
xchg
scas
mov
mov
punpckhwd
xchg
inc
call
lock
cs
das
loope
out
xchg
push
pop
sbb
ficoml
leave
push
leave
loope
rcr
jmp
movl
jb
mov
mov
and
cmpsb
popf
or
or
insb
jl
xor
mov
dec
pop
cmp
popf
adc
int3
sub
fisubs
mov
and
adc
xor
lea
xchg
incb
pop
pop
int3
mov
inc
sub
fists
add
lcall
cmpsl
test
jl
shll
dec
sub
inc
pop
xor
xor
daa
pop
test
jge
or
jp
mov
jecxz
imul
push
idiv
es
fwait
push
out
push
inc
and
mov
in
fisubrs
cmp
lcall
movsb
bound
push
in
lods
xchg
pop
mov
movsl
shrb
mov
xchg
jmp
test
and
jno
fwait
stc
pushf
or
adc
lods
sbbl
cmp
push
in
idivb
divb
or
jg
imul
daa
dec
push
mov
xor
insb
and
push
mov
mov
mov
bswap
lahf
mov
pop
sub
dec
jl
fsts
add
out
xchg
movsl
icebp
and
push
sbb
jno
sub
mov
pop
pop
repnz
jmp
sub
adc
ds
cmp
jno
js
mov
ja
std
and
in
negb
in
mov
pop
in
outsl
lahf
fisubs
mov
jne
jo
dec
inc
cmc
in
inc
andl
xchg
outsb
xchg
clc
aam
enter
mov
add
lock
fcmove
push
jbe
fsts
lods
aam
mov
test
push
fisttpll
mov
hlt
adc
adc
cwtl
fwait
sbb
add
sub
mov
xor
mov
sub
ret
mov
xor
push
dec
dec
repz
stos
pushf
dec
movsl
mov
cmp
test
and
mov
and
mov
mov
jmp
sti
jb
out
loopne
popf
sub
in
xchg
mov
sub
ds
negb
cmpsl
add
or
mov
std
test
cwtl
cmp
add
xchg
ja
fidivrl
push
test
enter
xor
sahf
lsl
dec
adc
xor
mov
fdivr
dec
mov
repnz
scas
int3
pop
in
cmp
mov
sbb
inc
mov
scas
xchg
addr16
dec
mov
add
mov
pop
mov
inc
add
sahf
rolb
dec
test
stos
mov
xchg
xchg
sahf
stc
cmp
int
mov
xor
pop
in
cmp
mov
lret
inc
xor
push
mov
jno
jns
and
shlb
in
fdiv
or
lods
push
arpl
sbb
dec
cmp
out
xchg
arpl
jb
daa
sbb
mov
out
jmp
mov
xchg
inc
and
bound
push
test
into
fisubs
add
aaa
mov
push
and
movsl
jmp
cmpsl
sbb
std
notl
mov
and
data16
test
or
push
insb
mov
xor
icebp
int3
dec
jno
fcoms
push
or
jl
mov
push
sarl
lods
stos
hlt
cmpsl
xchg
test
popa
or
sbb
inc
movsb
ds
add
jo
jge
xchg
cmp
add
sbbl
dec
rclb
adc
insb
pop
push
sub
in
or
sbb
adc
mov
inc
cmc
shll
fisttpl
int
sbb
cmpsb
in
push
cmp
mov
and
and
xchg
adcl
out
cmpxchg
call
fstp
dec
mov
stos
in
jp
sbbb
out
inc
cmp
sbb
pop
xor
xchg
add
adc
xchg
movsb
rcrl
or
insb
test
inc
mov
jmp
xchg
cltd
sub
imull
mov
and
shll
mov
cltd
mov
push
pushf
lahf
fcoml
adc
push
pop
imul
mov
cwtl
xor
and
int
lea
js
repz
xlat
ficoml
insb
xrelease
inc
insl
insb
push
jmp
pop
add
adc
push
mov
jnp
lret
jg
lea
jp
pop
enter
sbb
sub
je
lods
int
or
add
out
rclb
and
mov
xchg
mov
push
inc
out
pop
mov
cmp
push
sbb
inc
ret
stc
mov
xor
xchg
cmc
pop
sahf
out
mov
daa
je
and
xchg
push
push
and
mov
repz
outsl
dec
add
cld
cld
xchg
addr16
xchg
mov
in
dec
outsb
out
mov
sub
lret
or
dec
xlat
out
lret
sahf
push
decb
mov
scas
mov
and
movsb
and
fwait
add
add
cmpsl
jl
aaa
lock
je
sub
add
cmpsl
inc
xchg
cli
std
cmpsl
in
mov
jns
mov
and
cltd
mov
or
cltd
lea
lret
lret
rclb
xor
insl
pop
call
xor
dec
push
adc
dec
aad
dec
in
js
sbb
aam
fisubrs
test
dec
mov
inc
movb
pop
or
push
cmp
jmp
test
push
fimull
push
dec
stc
xchg
lods
cmp
testl
xchg
addl
jg
lret
in
cmp
jb
and
push
mov
dec
fucomi
call
jle
cmp
adc
leave
and
or
daa
imul
inc
bound
mov
push
cs
xor
cmp
int3
arpl
push
hlt
xor
bound
je
push
test
in
ds
nop
mov
vpaddusw
test
and
imul
cld
xlat
dec
xchg
jmp
jo
inc
dec
mov
fcompl
into
insl
and
jb
lds
scas
cmp
cmp
or
adc
addb
int
push
sub
repnz
xchg
add
stc
sbb
lahf
or
push
je
sub
mov
stos
stc
out
gs
jmp
adc
imulb
fists
rol
mov
out
cmp
xlat
ljmp
mov
xor
cmp
or
imul
ja
mov
sub
pop
insl
pushf
and
insl
mov
mov
int3
jle
add
aas
cmpsl
push
cmc
int
xchg
pop
xchg
push
push
lret
dec
arpl
popf
push
xchg
daa
nop
cli
jae
out
outsb
dec
sti
sahf
repnz
xchg
adc
lods
hlt
out
in
in
fdivl
mov
aas
fdivrs
aaa
or
in
cmp
lds
fwait
mov
push
xchg
adc
mov
jns
push
jnp
cltd
lods
rcll
xchg
icebp
lahf
mov
pusha
mov
lea
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
sub
add
mov
add
enter
add
daa
add
add
add
add
cwtl
add
orb
add
call
add
add
add
orb
add
cmp
add
pusha
add
orb
add
mov
add
mov
add
fadds
add
add
add
sub
add
push
add
addb
add
js
add
mov
add
add
add
cmp
add
lock
cmp
add
sbb
cmp
add
inc
add
cmp
add
push
add
add
add
add
add
add
add
cmp
add
or
add
xor
add
pop
add
add
addb
add
add
add
add
add
clc
add
add
and
add
dec
push
add
jo
add
cwtl
push
add
rolb
sub
add
call
add
add
pop
add
cmp
add
pusha
pop
add
add
add
or
add
js
add
or
add
add
add
add
add
addb
call
add
add
add
add
add
add
lea
add
or
add
add
add
add
add
add
add
cwtl
add
call
add
add
add
add
add
add
or
add
add
add
add
add
add
nop
scas
add
mov
add
or
add
add
sbb
add
or
add
mov
add
adc
add
add
add
add
add
add
add
lds
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rolb
add
add
add
add
add
add
rcl
add
add
add
add
add
add
dec
aad
add
or
add
add
add
add
add
loopne
add
or
add
add
add
add
add
jmp
add
adc
add
add
add
add
add
add
add
add
call
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
add
call
add
add
add
add
add
cmp
add
sub
add
or
add
sub
add
or
add
add
add
add
add
aaa
add
call
add
add
add
add
add
add
inc
add
call
add
add
add
add
add
add
dec
add
mov
add
or
add
add
add
mov
add
or
add
add
sub
add
add
add
add
add
add
mov
add
mov
add
or
add
push
add
call
add
add
add
add
add
add
mov
add
or
add
add
add
mov
add
or
add
push
add
xor
add
add
add
add
add
push
add
mov
or
add
add
add
add
add
add
mov
or
add
add
add
add
add
js
add
or
add
add
add
add
add
addl
adc
add
add
add
add
add
push
add
cwtl
xchg
add
rolb
add
or
add
pop
add
push
or
add
add
add
add
add
pop
add
push
mov
add
or
add
add
cmp
add
or
add
add
and
add
add
add
mov
add
add
add
add
or
add
add
add
add
add
pop
add
add
add
or
add
pop
add
lods
mov
add
test
add
add
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
inc
add
add
add
add
xor
cmp
xor
xor
inc
add
add
add
adc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
inc
add
outsb
add
add
dec
add
add
add
add
inc
add
jb
add
add
jb
add
add
addb
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
dec
add
je
add
popa
add
add
add
add
add
add
and
data16
add
and
sub
inc
add
push
add
add
add
outsl
add
jb
arpl
add
add
outsl
add
add
add
add
je
outsl
add
add
sub
add
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
jo
jo
add
js
add
add
sbb
add
add
insb
add
outsl
add
jns
jb
imul
je
add
inc
add
jo
jns
insb
add
data16
add
add
add
add
add
add
add
add
add
jns
and
inc
add
outsb
add
add
dec
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
dec
add
je
add
popa
add
add
add
add
js
add
add
or
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
je
add
popa
add
add
add
add
add
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
or
add
or
add
or
add
or
add
or
add
or
add
add
add
add
add
or
add
add
add
add
add
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
gs
xor
fs
insb
add
jb
imul
add
jae
jo
xor
cs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
inc
imul
js
popa
jb
insl
inc
add
add
jb
outsb
jae
popa
insb
insb
inc
imul
push
push
push
gs
jae
jb
outsl
outsb
imul
