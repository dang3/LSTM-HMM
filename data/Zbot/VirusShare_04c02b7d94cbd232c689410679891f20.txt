pushl
shlb
pop
add
call
add
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
lcall
mov
sub
push
pushl
push
call
add
pop
mov
mov
push
pushl
pop
call
mov
pop
pop
lea
xor
call
stos
stos
call
in
sub
push
push
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
call
in
sub
push
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
jmp
ret
mov
sub
sub
mov
mov
shl
mov
sub
mov
movl
mov
cmp
je
sub
sub
je
sub
lea
mov
sub
jb
mov
sub
ja
mov
jle
mov
popf
dec
call
add
jge
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
call
in
sub
push
push
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
call
in
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
call
in
sub
push
push
push
push
call
add
pop
mov
pop
pop
lea
xor
call
call
in
sub
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
push
mov
sub
push
push
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
call
in
sub
push
pushl
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
call
in
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
call
in
sub
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
push
mov
sub
push
push
lea
push
lea
push
addl
lea
push
lea
push
pushl
decl
mov
add
call
pop
mov
xor
adc
sub
mov
pop
mov
mov
mov
mov
push
mov
xorl
pop
sub
or
mov
test
je
add
xor
movl
add
and
addl
neg
clc
sbb
pushl
lea
lea
pop
repz
jmp
mov
pop
pop
lea
xor
call
call
in
sub
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
call
in
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
incl
stos
and
add
add
enter
add
add
cwtl
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
or
add
sbb
add
sub
add
out
add
push
and
add
and
add
add
add
and
add
and
add
and
add
and
add
and
add
and
add
add
push
and
add
and
add
add
add
add
data16
add
and
add
and
add
add
add
add
add
add
and
add
add
add
add
push
add
add
add
add
and
add
add
mov
add
add
add
add
and
add
add
add
add
mov
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
or
add
sbb
add
sub
add
out
add
push
and
add
and
add
add
add
and
add
and
add
and
add
and
add
and
add
and
add
add
push
and
add
and
add
add
add
add
data16
add
and
add
and
add
add
add
add
add
add
add
je
jb
jbe
je
push
jb
imul
push
add
add
imul
outsb
je
outsl
insb
add
add
gs
inc
imul
gs
jo
gs
jb
jns
inc
add
outsb
arpl
dec
outsl
add
enter
jae
gs
popa
insb
jne
add
add
popa
jo
jb
add
ret
gs
jne
jb
outsb
je
jb
arpl
jae
repnz
imul
jb
je
arpl
add
cmp
fs
imul
add
push
add
outsb
fs
outsl
insb
jne
gs
insb
outsl
jae
add
add
je
imul
bound
gs
add
test
inc
jb
popa
je
inc
jbe
outsb
je
add
push
push
je
imul
inc
add
jge
dec
jo
outsb
dec
jne
gs
add
xchg
add
je
imul
je
add
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
add
imul
outsb
je
outsl
insb
add
inc
insb
gs
jb
outsl
insl
insl
inc
jb
popa
imul
aam
inc
gs
jb
jbe
push
jns
gs
add
insb
jae
jb
outsb
inc
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
jnp
inc
gs
push
gs
inc
js
outsb
je
add
inc
gs
push
outsl
insb
outsl
jb
xor
jae
push
push
popa
je
add
jl
inc
gs
push
gs
dec
gs
imul
insb
outsl
jae
push
push
popa
je
add
add
je
push
outsl
outsl
insb
add
add
ja
push
popa
arpl
jb
jne
add
inc
gs
push
jns
push
imul
jb
ja
push
fs
gs
imul
gs
add
xchg
dec
jo
outsb
push
push
popa
je
add
inc
gs
imul
gs
add
addb
jae
push
arpl
add
push
dec
inc
dec
inc
cs
insb
add
add
dec
dec
outsb
jae
popa
insb
insb
inc
jb
jbe
jb
add
add
dec
inc
outsl
outsb
imul
popa
push
outsl
jne
arpl
or
push
push
dec
dec
outsb
jae
popa
insb
insb
dec
inc
inc
inc
add
add
inc
gs
jbe
imul
imul
dec
inc
inc
inc
inc
push
xor
cs
insb
add
add
dec
xor
push
inc
arpl
outsl
insb
add
dec
push
inc
push
dec
xor
fs
insb
add
add
add
add
xor
add
pop
add
add
add
add
add
jo
add
add
add
add
add
mov
add
mov
add
add
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
push
add
test
add
clc
jbe
add
add
add
add
add
or
add
xchg
add
add
add
sub
add
xor
add
sub
add
xor
add
pusha
add
add
add
add
add
add
add
add
imul
xchg
xchg
xchg
add
scas
scas
lods
xor
mov
mov
mov
mov
mov
mov
mov
mov
lods
stos
stos
mov
mov
cltd
pop
xchg
xchg
xchg
or
jge
jp
jp
lods
stos
stos
add
cmpsl
cmpsl
push
mov
mov
mov
les
int
int
rcl
shr
rcl
shl
iret
ror
hlt
int3
int3
int3
hlt
enter
enter
in
mov
mov
lods
lods
lods
lea
fwait
cltd
and
jae
pop
add
add
add
add
add
add
add
add
add
add
add
add
mov
lahf
add
mov
jae
mov
out
leave
lret
not
rcl
cld
fcom
xlat
std
xlat
fcom
fcomp
xlat
aad
aad
rcl
sar
int3
int3
int
aad
iret
rcl
inc
std
mov
mov
scas
iret
movsl
movsl
movsb
xchg
mov
and
add
push
add
add
add
add
add
add
add
add
lods
stos
lods
add
lods
scas
sbb
mov
jnp
mov
mov
dec
leave
leave
dec
rcl
aad
aad
fcom
call
xlat
call
aam
dec
int
dec
int
call
dec
into
into
inc
rol
mov
mov
scas
std
cmpsl
cmpsb
cmpsb
ljmp
push
fs
or
add
add
add
add
add
pop
add
add
add
add
add
add
pop
push
push
add
inc
add
push
add
push
or
or
sbb
add
add
add
add
or
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
leave
dec
int3
int
rcl
sar
fcom
fdivr
xlat
call
aad
dec
int
dec
lret
leave
dec
int
inc
mov
sarb
pushl
cmpsb
test
mov
fwait
fwait
jmp
and
and
add
inc
add
add
add
add
add
and
add
push
add
add
add
add
pop
pop
pop
add
bound
push
push
bound
pop
fs
ds
sbb
sbb
sub
sbb
aaa
cmp
cmp
and
and
pop
push
pop
pop
add
add
add
add
gs
mov
mov
mov
mov
mov
mov
mov
mov
mov
rol
ret
dec
enter
sar
aad
aam
aad
call
iret
sar
enter
mov
ret
mov
mov
scas
lods
scas
jmp
sahf
popf
xchg
xchg
xchg
lcall
test
add
add
add
cmp
add
das
add
add
add
add
add
adc
add
or
add
push
add
outsl
xor
jl
jge
jg
jo
jb
bound
mov
cmp
inc
inc
mov
outsb
outsb
jo
bound
pusha
inc
inc
inc
xor
add
add
add
add
movsb
movsl
movsb
add
mov
mov
mov
mov
mov
mov
mov
inc
mov
dec
leave
lret
inc
mov
mov
mov
ljmp
movsb
mov
call
xchg
xchg
cwtl
cwtl
fwait
cltd
lcall
aas
cmp
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
pop
outsl
outsb
jo
pop
pop
pop
or
pusha
mov
incb
jp
idivb
jmp
outsl
outsl
out
push
push
ret
jg
js
jns
arpl
fs
inc
inc
cmp
sbb
sbb
prefetch
stos
stos
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
cmpsb
cmpsb
test
pushf
sahf
sahf
call
test
decl
xchg
xchg
lahf
sahf
sahf
sti
mov
xchg
xchg
mov
jp
js
das
xor
das
add
add
add
add
add
add
add
add
add
add
mov
push
push
test
lahf
in
mov
mov
addb
decb
xchg
jg
jg
jb
jo
jae
jae
jg
jle
addl
xchg
push
cmp
ss
jge
lcall
shrb
lods
stos
sti
lods
stos
lods
lods
lods
stos
test
stos
std
movsl
movsl
movsb
std
cltd
cltd
fwait
xchg
xchg
xchg
incl
jge
js
jp
jnp
jns
mov
xchg
movsl
mov
scas
sti
mov
mov
mov
mov
mov
scas
lods
stos
xchg
push
adc
add
or
add
add
add
add
add
add
push
pop
adc
mov
mov
xchg
xchg
incl
xchg
mov
xchg
std
xchg
xchg
xchg
stc
xchg
xchg
xchg
in
mov
or
addb
xchg
push
push
push
prefetch
inc
inc
inc
dec
insb
imul
xchg
leave
lcall
out
fwait
cltd
lcall
mov
decl
mov
cltd
fwait
lcall
scas
lods
mov
mov
mov
mov
mov
std
mov
mov
mov
jp
or
add
add
pop
pop
adc
test
call
lcall
incl
mov
xchg
xchg
xchg
sahf
pushf
pushf
std
mov
mov
xchg
in
xchg
xchg
xchg
in
test
jne
cmovp
or
inc
sub
sub
dec
dec
data16
jb
xchg
xchg
rclb
xchg
std
nop
xchg
decb
xchg
xchg
lcall
cmpsl
test
stos
test
pushl
cmpsl
scas
mov
xchg
stos
std
mov
xchg
scas
mov
mov
ljmp
mov
add
pop
pop
adc
scas
mov
ret
lcall
mov
mov
mov
xchg
nop
decl
xchg
xchg
pushf
sahf
popf
movsb
movsl
movsl
test
test
movsl
mov
cwtl
fstpt
jp
push
push
push
outsl
dec
dec
dec
popaw
pusha
bound
jae
mov
lahf
orl
int
xchg
xchg
in
nop
xchg
testl
lea
jmp
mov
mov
pop
nop
mov
xor
js
mov
movsl
mov
mov
mov
stos
lods
lods
mov
movsl
mov
add
pop
pop
adc
mov
ljmp
sahf
decl
nop
call
xchg
xchg
call
xchg
cwtl
fwait
cltd
cltd
fwait
pushf
popf
lahf
sahf
mov
std
mov
cltd
lcall
xchg
xchg
les
lcall
xchg
cmc
xchg
xchg
std
xchg
jb
cltd
push
test
mov
inc
jl
mov
jp
mov
je
mov
outsb
ljmp
adc
lods
or
or
mov
jle
mov
mov
stos
pushf
movsl
movsb
mov
add
mov
add
pop
adc
mov
jmp
xchg
xchg
call
lcall
sahf
mov
sahf
lcall
xchg
xchg
call
cwtl
xchg
call
lcall
fwait
sahf
stc
lahf
xchg
pushf
cld
popf
mov
xchg
imul
xchg
dec
jp
lcall
sahf
pop
imul
movsl
adc
ljmp
adc
lods
packuswb
lods
adc
mov
imul
adc
insl
mov
fwait
scas
mov
scas
lods
scas
movsb
mov
movsl
add
add
add
add
add
pop
pop
adc
mov
ljmp
pushf
call
popf
pushf
lcall
mov
movsl
jmp
xchg
cwtl
decl
mov
decl
js
cltd
jno
cltd
bound
call
sub
pusha
call
or
pop
call
add
lahf
pop
pop
jmp
sbb
mov
outsb
pushl
pop
outsl
mov
and
mov
and
inc
test
ret
mov
lods
scas
mov
sahf
mov
movsl
add
pop
pop
adc
scas
mov
shlb
lcall
mov
ljmp
test
jmp
fwait
sahf
call
pop
jbe
mov
decl
arpl
mov
pusha
decl
or
push
incl
add
lea
push
call
add
fwait
add
mov
or
pushl
es
mov
sub
shrl
inc
sub
jle
enter
leave
xor
dec
lods
inc
mov
mov
mov
mov
movsl
add
push
push
adc
test
mov
jmp
stos
stos
ljmp
lods
pushl
scas
scas
jmp
jno
decl
push
pop
incl
or
addl
test
push
incl
push
decl
add
nop
add
xchg
add
cltd
add
mov
add
lods
adc
mov
cmp
inc
cmp
dec
cmp
call
cmp
call
dec
xchg
dec
mov
std
mov
mov
mov
mov
mov
add
add
add
dec
dec
adc
mov
mov
lahf
lcall
lods
lods
scas
pushl
mov
pushl
mov
ljmp
mov
mov
push
decl
push
pop
decl
or
add
decl
add
add
xchg
add
pushf
add
mov
add
lods
add
pushl
cmp
dec
inc
mov
roll
call
dec
nop
fmuls
call
dec
xchg
fimull
fisttpl
ficoml
call
test
std
mov
mov
movsb
movsl
movsl
arpl
mov
add
add
add
fwait
xchg
cwtl
add
inc
adc
jl
movsl
popf
mov
jmp
stos
test
pushl
mov
mov
mov
mov
mov
jmp
outsl
decl
sbb
pop
pop
decl
adc
mov
push
decl
add
xchg
add
sahf
add
mov
add
stos
add
mov
fs
and
dec
dec
mov
aam
xchg
call
push
cltd
fistl
fcoml
jmp
pop
popf
ficomps
jmp
pop
lahf
jmp
pop
mov
call
xchg
mov
mov
jne
sahf
lahf
or
xchg
xchg
cwtl
add
inc
adc
js
sahf
cltd
lahf
jmp
sahf
cltd
popf
ljmp
mov
pushl
mov
mov
pushl
mov
call
and
call
call
or
decl
add
fwait
add
mov
add
stos
add
mov
data16
mov
xor
jmp
arpl
jmp
cmpsl
jmp
data16
call
imul
faddl
ret
mov
cmpsb
cmpsl
mov
sahf
mov
add
add
add
inc
inc
adc
jb
cltd
xchg
lcall
popf
sahf
ljmp
mov
pushl
mov
mov
mov
mov
jle
xchg
sub
lcall
call
pop
call
add
fwait
add
mov
add
lods
add
mov
pushl
call
inc
fsubrl
jmp
jo
jmp
jo
jmp
jno
ljmp
in
je
out
jne
out
jne
in
je
jmp
mov
mov
test
lcall
lahf
add
jg
ds
cmp
js
mov
sahf
lcall
mov
mov
mov
mov
mov
mov
cmpsl
lods
lcall
xor
lahf
cmp
lahf
cmp
lahf
xor
cltd
sbb
pop
call
add
add
test
pusha
pushl
add
mov
sbb
ficoml
jmp
jbe
jmp
jle
in
xorb
repnz
push
test
ljmp
inc
mov
test
daa
lahf
mov
sahf
add
add
add
pusha
add
aaa
cmp
pop
pusha
pop
jne
jg
out
test
xchg
xchg
xchg
pushl
mov
mov
mov
ret
inc
ret
ret
pushl
insb
mov
lcall
jmp
cmp
cltd
sbb
xchg
add
popf
add
add
add
scas
add
mov
data16
mov
add
iret
es
ljmp
out
sar
sar
pop
push
nop
ret
xchg
push
nop
ret
stc
xchg
push
pop
out
pop
fnstenv
ret
clc
stos
lods
stos
mov
popf
popf
xor
sahf
sahf
add
add
add
inc
add
xor
push
inc
dec
inc
jb
pop
dec
in
push
decl
mov
mov
mov
mov
inc
inc
mov
mov
jl
lcall
dec
cmp
dec
test
movsl
xor
popa
lcall
add
cmpsb
add
lods
add
mov
fs
mov
add
enter
fdivs
mov
out
mov
in
xchg
lcall
repz
pushf
enter
enter
lret
sti
sahf
into
sti
sahf
int
sti
cwtl
lret
push
xchg
sar
mov
cli
mov
mov
sahf
sahf
lahf
aas
nop
xchg
nop
add
add
add
cmp
add
cmp
dec
jecxz
pop
pusha
call
mov
mov
mov
mov
inc
inc
enter
sar
mov
ljmp
mov
mov
push
pop
lcall
add
stos
add
mov
arpl
mov
add
enter
rorl
fiadds
out
mov
push
cmpsb
into
push
cmpsb
int
imull
iret
cld
cmpsl
sar
sti
test
cld
stos
sar
test
sar
negb
lret
dec
leave
lret
std
mov
mov
lahf
mov
xchg
add
cltd
cltd
add
add
add
xor
sub
inc
inc
inc
bound
push
xlat
je
jo
mov
mov
ret
mov
ret
ret
inc
ret
mov
inc
enter
ret
pushl
push
test
scas
push
mov
lods
dec
test
sahf
sbb
pop
jmp
add
mov
arpl
mov
add
int3
add
add
ficoms
jge
in
pop
cmpsl
push
popf
lret
cli
scas
aam
sti
mov
cli
scas
aad
sti
mov
mov
mov
std
mov
mov
pushl
sar
mull
enter
mov
fisubl
xchg
xchg
or
add
add
xor
sbb
dec
dec
ss
jo
xchg
lcall
aam
jmp
xlat
not
rcl
std
int3
int
dec
lret
lret
lret
lret
dec
lret
mov
scas
jmp
push
mov
lods
cmp
lcall
add
add
mov
mov
add
roll
jo
add
add
pop
xchg
cmc
jno
sti
lods
sar
mov
fcos
std
mov
cld
mov
cld
mov
fdivr
std
mov
fdivr
divl
call
lret
int3
mov
sahf
mov
or
add
add
xor
add
add
add
pop
or
movb
loop
out
jmp
test
jecxz
leave
fsubp
fsubp
fcmovnu
xlat
fcmovnu
cli
aam
std
int3
iret
sar
mov
push
cmp
sub
mov
add
mov
mov
add
lret
add
add
fldl
jne
in
js
in
das
xchg
stc
mov
sti
mov
inc
loope
std
inc
fdivrp
inc
loopne
inc
fdivrp
std
leave
inc
fdivrp
inc
std
lret
sti
mov
leave
call
leave
iret
mov
mov
xchg
adc
add
add
std
std
add
std
std
add
std
add
div
or
out
jmp
in
in
out
sub
out
out
dec
call
jmp
out
in
out
fsubr
les
xchg
cmpsl
cmp
movsb
push
jmp
ljmp
add
mov
add
int3
add
add
add
call
inc
pushf
sti
mov
loop
dec
in
std
into
out
std
int3
in
dec
loop
std
int3
loop
dec
loopne
shl
shl
std
shl
shl
sti
ret
fdivr
out
mov
xlat
inc
ret
out
test
cmpsb
mov
cwtl
xchg
add
add
add
std
std
add
incl
cmc
div
add
repnz
hlt
repnz
out
lock
pop
in
lock
cmp
in
in
pop
loopne
loopne
mov
xchg
sti
mov
push
pop
jmp
add
mov
fs
add
enter
roll
jo
fildl
jne
jecxz
jp
in
adc
pop
test
shl
cld
shl
std
shl
std
shl
call
jecxz
call
out
std
fsubr
std
fsub
std
std
fld1
fucomi
std
shl
push
jmp
rcr
dec
leave
lret
test
fwait
xchg
xchg
xchg
and
xchg
xchg
add
std
cli
add
std
clc
add
cld
clc
add
cmc
repz
aam
sarb
cltd
sbb
lcall
add
scas
add
mov
add
lret
add
rolb
jb
fildl
jbe
call
sbb
clc
je
cld
ret
loopne
cld
xlat
jmp
fucomi
std
fucomi
std
fucomp
std
fucomip
jmp
in
std
fsubrp
shl
push
ret
out
rcl
iret
clc
stos
lods
lods
lods
xchg
xchg
xchg
outsl
outsb
outsb
add
add
add
loopne
add
mov
cltd
repnz
and
sahf
add
cmpsb
add
mov
mov
add
int
insl
call
add
fiadds
jne
ljmp
cli
nop
cld
shl
fsubrp
fsubr
std
fldl2e
fsubr
cld
aad
std
aam
cli
shl
cli
iret
loop
stc
into
fdivrp
clc
int
push
ret
xlat
out
mov
fcos
fcom
sti
mov
mov
cltd
fwait
cltd
cmp
fwait
fwait
add
aad
ror
adc
lods
mov
jmp
add
mov
fs
mov
add
iret
add
add
loope
jp
ljmp
cld
xchg
cld
leave
cli
int3
loope
cld
idivl
sar
repz
iret
push
mov
int
ljmp
jmp
ret
ljmp
cmc
loopne
mov
mov
xchg
add
add
add
into
int3
add
rol
mov
cmpsb
loopne
xor
jmp
add
mov
gs
mov
add
int3
push
jo
rorl
jne
ficoml
jns
loope
cmp
inc
xchg
jmp
scas
lret
mov
call
scas
ret
cld
loopne
ret
cli
fstpt
lock
int
fmul
iret
rcl
shl
fcmovb
out
loope
jmp
out
icebp
out
out
popf
call
lret
lods
lods
lods
adc
cmpsl
cmpsb
test
lahf
mov
ret
rolb
ret
rcrl
stos
aam
dec
jg
pushf
sbb
cmpsl
sbb
jno
mov
js
mov
inc
test
ret
push
mov
lret
arpl
hlt
iret
mov
shlb
enter
enter
int
rol
lret
mov
into
shlb
rcl
jg
fcmovu
jb
gs
in
out
out
ljmp
sub
div
and
repnz
sbb
fstp
or
mov
int3
add
add
add
roll
mov
test
push
lock
xchg
ljmp
mov
sarb
test
mov
pushf
lret
ret
mov
lret
iret
int
addr16
rcl
push
rcl
rorl
xlat
inc
rcl
xor
fcmovnbe
daa
xlat
fcmovnu
sbb
adc
jecxz
push
loope
in
out
jmp
add
sti
testb
cld
add
incl
incb
mov
mov
shrb
mov
mov
mov
mov
mov
mov
mov
mov
ret
leave
xor
int
daa
lret
ror
and
aad
sbb
rclb
rcl
aam
rcl
aad
aam
add
fstp
add
add
in
add
jmp
add
xlat
aad
incb
mov
mov
add
ret
mov
mov
mov
mov
push
rol
or
enter
enter
int
add
aam
add
add
xlat
aam
fcom
add
aam
add
fchs
add
fildl
fnstsw
loope
filds
in
call
add
incb
incb
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
ret
mov
mov
mov
ja
stos
stos
dec
test
test
xchg
xchg
xchg
pop
add
add
add
add
add
add
mov
mov
mov
mov
aam
rcl
jmp
rcl
cmc
rcl
sar
iret
rcl
cli
lret
int3
int3
stc
lret
hlt
mov
mov
iret
lods
lods
stos
fwait
xchg
xchg
xchg
dec
ds
add
sbb
add
adc
add
push
add
add
addl
push
add
add
add
add
add
add
add
add
add
mov
mov
mov
enter
iret
aad
aad
xlat
xlat
dec
ror
dec
into
iret
dec
int3
lret
rol
mov
mov
stos
lods
stos
icebp
cltd
cltd
cltd
mov
or
or
add
add
add
add
add
add
add
add
add
add
je
je
jne
jne
fs
dec
dec
inc
cmp
sub
sub
xor
dec
sub
adc
sub
push
add
add
mov
mov
mov
mov
mov
mov
inc
ret
lret
call
rcl
call
aam
dec
int3
int3
inc
mov
sarl
ljmp
popf
sahf
cwtl
cwtl
xchg
jmp
outsl
jno
adc
add
xor
add
add
add
add
addl
test
push
imul
push
push
stos
imul
push
pop
pop
cmp
cmp
pop
outsl
outsl
jo
mov
scas
pop
mov
mov
mov
mov
mov
rol
inc
mov
mov
ljmp
fwait
pushf
call
xchg
xchg
lcall
xchg
dec
dec
dec
dec
adc
wrmsr
add
add
add
add
add
pop
lcall
pop
fwait
xchg
lcall
addb
jl
jge
jp
jns
jp
jp
jnp
jp
je
jb
push
push
push
cmp
je
sahf
sahf
pushf
mov
scas
scas
repz
scas
lods
sti
scas
scas
scas
std
cmpsl
cmpsl
test
call
xchg
call
mov
lods
jmp
lods
lods
leave
cmpsb
movsb
movsl
cltd
jb
jae
adc
adc
add
add
add
add
outsl
insl
outsb
pop
nop
mov
loop
cwtl
pushf
incl
mov
sti
xchg
xchg
xchg
lock
nop
nop
fimuls
mov
jp
pop
and
inc
inc
dec
outsb
outsl
outsb
orl
cwtl
repnz
xchg
xchg
std
lea
call
sahf
sahf
ljmp
scas
std
mov
scas
mov
mov
mov
cmpsb
mov
jg
pusha
pusha
pusha
or
scas
mov
cmpsb
mov
mov
lea
nop
call
sahf
mov
negl
jg
stos
push
push
push
jo
pop
push
outsl
insl
outsb
outsb
xchg
subb
xchg
lock
mov
lcall
mov
pushl
pop
mov
mov
jge
mov
scas
lods
insl
stos
stos
stos
or
add
add
add
add
pop
or
mov
in
mov
xchg
call
xchg
xchg
call
lcall
fwait
popf
pushf
cli
xchg
xchg
xchg
jmp
xchg
xchg
aam
mov
out
xchg
jne
notb
jle
sahf
dec
jnp
mov
aaa
ja
mov
jb
scas
push
outsl
ljmp
sbb
pop
mov
mov
scas
mov
movsb
mov
add
add
add
pop
pop
pusha
or
mov
in
mov
cwtl
lcall
mov
lahf
call
decl
mov
xchg
jb
cld
xchg
popa
cmp
dec
jp
xchg
cmp
nop
sub
xchg
sbb
adc
lahf
punpcklwd
test
imul
mov
insb
pushl
pop
jb
mov
pop
mov
scas
lods
xchg
sahf
popf
lahf
adc
add
add
pop
pusha
pop
or
mov
stos
movsb
cmpsb
jmp
cmpsl
cmpsb
ljmp
cmpsl
cmpsl
lcall
pop
jp
mov
imul
mov
pop
decl
or
mov
call
add
test
pushl
jl
mov
das
jle
enter
lret
xor
xchg
inc
test
scas
movsb
test
test
pop
popa
pusha
or
movsb
test
cmpsl
mov
test
scas
mov
pushl
mov
jmp
inc
jno
mov
pop
decl
or
xchg
push
call
add
sahf
add
cmpsl
add
mov
outsb
inc
aaa
test
lret
inc
mov
rolb
call
inc
mov
inc
xchg
fmuls
call
arpl
stc
mov
mov
mov
std
incb
add
add
pop
popa
pop
or
mov
ljmp
mov
pushl
mov
stos
lcall
push
popa
call
adc
pop
decl
add
lahf
add
cmpsl
add
scas
add
mov
dec
nop
call
pop
pushf
fistpl
fistps
jmp
pop
mov
fildll
dec
cmpsb
mov
ret
movsl
xor
add
add
dec
pop
jle
jnp
popf
xchg
cltd
jecxz
lahf
mov
pushl
mov
mov
lcall
sub
lcall
and
xchg
adc
xchg
add
lahf
add
cmpsl
add
mov
pushl
xor
jmp
insl
test
call
jno
out
jno
call
cmpsl
mov
shll
jg
add
add
add
dec
pop
insl
outsl
imul
test
fwait
cltd
cwtl
pushl
mov
mov
mov
jbe
lcall
jbe
pushf
sub
call
add
movsb
add
stos
add
mov
fs
or
xlat
inc
xchg
jmp
js
ljmp
out
xchg
push
xchg
fldenv
mov
push
fwait
fwait
cltd
add
sub
sub
push
push
dec
pop
imul
xchg
mov
mov
mov
mov
inc
mov
popf
jmp
inc
cmp
sub
lcall
ljmp
add
mov
adc
jmp
popa
mov
push
xchg
cltd
push
xchg
clc
lcall
notl
vcmpss
mov
add
add
xor
pop
pop
push
fisttpl
mov
mov
rol
ret
vcmpsd
pushl
pop
mov
lods
dec
test
mov
add
test
add
add
leave
add
and
push
movsb
int
imulb
into
sti
stos
iret
cld
stos
iret
cld
lods
sar
stc
test
call
rol
stos
test
pushf
or
add
add
dec
push
dec
aaa
jae
je
test
int
out
into
int
lret
sti
lret
std
leave
enter
mov
test
inc
jle
mov
add
mov
gs
add
iret
add
fildl
jne
call
xchg
mov
mov
xlat
cld
mov
fdivr
mov
sar
ljmp
repz
scas
mov
add
add
add
add
pop
or
aad
dec
loope
fsubp
loopne
fcmovnu
ffree
fcmovnu
fcmovu
aad
xlat
out
mov
gs
test
jae
movsb
or
mov
popa
mov
add
aad
je
loop
jl
lock
mov
std
loopne
inc
loopne
std
enter
enter
lret
dec
loope
sti
out
mov
leave
divb
sahf
pushf
sbb
add
add
incl
std
add
ljmp
jmp
in
xor
loop
loop
les
mov
mov
add
mov
arpl
roll
dec
add
faddl
jne
ljmp
cld
ret
cld
iret
in
std
shl
std
shl
call
in
call
out
call
jmp
push
fdivr
fcmove
sar
mov
mov
add
std
add
std
add
std
cld
pop
aam
push
mov
pop
xchg
popf
or
ljmp
add
add
rolb
jno
filds
jbe
out
and
std
shl
fucompp
fsubr
cld
fsubr
std
fsubr
sti
xlat
out
cld
fsubr
sti
shl
push
fdivr
loopne
aad
mov
lahf
popf
das
add
add
int3
into
into
or
arpl
ljmp
add
movl
jb
loopne
js
out
das
xchg
push
lcall
clc
lret
loopne
test
bnd
repz
lock
sar
in
in
vpsadbw
shl
in
fucomp
leave
mov
das
incb
aam
aam
mov
jb
or
mov
imul
sbb
lret
and
sub
lcall
mov
out
in
lret
mov
loope
mov
lret
enter
int
scas
in
ficompl
out
call
rorl
mov
add
stos
stos
lods
add
xchg
movsb
les
pop
xchg
mov
fidivrl
jg
rol
stos
mov
mov
ret
rol
rol
int
ror
int
aam
iret
dec
fcom
xlat
cmp
das
in
fisubs
loop
lock
jmp
or
std
std
add
add
add
incl
mov
mov
outsb
mov
stos
jns
mov
mov
mov
mov
xor
leave
enter
rclb
mov
rcl
or
loopne
or
into
into
add
std
add
incl
fwait
lcall
mov
rol
or
int
add
incl
add
add
push
add
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
lcall
daa
rol
mov
enter
enter
ret
mov
scas
scas
scas
insb
stos
stos
stos
xor
or
add
push
add
add
add
add
add
add
add
add
add
add
stos
lods
lods
add
mov
jmp
aad
rcl
sar
iret
iret
into
std
stc
mov
mov
sarl
sbb
sbb
add
add
add
add
add
add
add
add
jae
jno
addr16
inc
inc
das
cs
inc
inc
inc
and
add
add
mov
mov
cmpl
dec
int
call
aad
dec
into
iret
dec
mov
ljmp
sahf
mov
mov
add
add
add
add
jne
jae
xchg
adc
jo
ret
bound
outsb
insl
outsb
jb
popa
bound
pop
pop
pusha
sbb
mov
in
mov
mov
mov
stos
stos
lcall
xchg
xchg
lcall
cltd
cwtl
lds
jno
and
add
pop
add
add
jae
je
fwait
xchg
lcall
xchg
xchg
or
addb
push
push
inc
mov
fwait
into
movsb
mov
mov
decb
lea
ljmp
mov
in
mov
mov
xchg
xchg
xchg
aas
sub
push
add
add
xorl
cmpsl
test
cmpsb
cld
mov
xchg
xchg
xchg
cld
pushf
pushf
pushf
cmc
cltd
cltd
lcall
push
push
imul
jge
mov
notl
mov
pushl
xchg
mov
test
call
stos
lods
lods
add
add
add
mov
mov
lods
cld
xchg
xchg
xchg
lcall
fwait
fwait
lcall
fwait
lcall
mov
loope
je
out
xchg
arpl
std
lcall
ljmp
and
mov
outsb
pushl
sahf
lods
lock
mov
imul
into
add
xchg
pop
lods
movsb
stos
test
popf
sahf
popf
jmp
mov
xchg
decl
push
jbe
xchg
inc
jb
mov
push
lea
arpl
xchg
adc
cwtl
or
mov
sbb
pushl
and
jnp
lds
xchg
rcrl
subl
jne
push
movsb
popf
lahf
test
test
cmpsl
ljmp
scas
mov
sahf
xchg
decl
or
mov
push
decl
add
mov
adc
ret
dec
aas
mov
roll
call
inc
call
dec
xchg
dec
cwtl
mov
mov
mov
movsl
movsb
movsb
push
add
add
imul
test
lahf
mov
pushl
mov
movsl
call
decl
or
xchg
add
mov
add
mov
push
xchg
fstpl
jmp
pop
mov
jmp
cmpsb
call
fwait
mov
mov
mov
cmpsb
test
pop
add
add
bound
adc
popf
pushf
pushf
cld
mov
mov
mov
mov
mov
fwait
dec
jge
pushf
xor
cwtl
and
call
add
stos
add
mov
addr16
xor
out
mov
jmp
mov
lock
out
jg
fistpl
mov
and
add
add
dec
adc
push
cmp
mov
mov
ret
ret
mov
arpl
lcall
add
jmp
add
ret
fisttpl
in
mov
push
xchg
cwtl
enter
jmp
movsl
inc
mov
movsb
sub
inc
inc
aas
adc
push
xchg
xchg
mov
inc
mov
xchg
ljmp
pop
push
pushl
add
adc
ljmp
clc
lods
iret
cld
scas
sar
std
scas
sar
cld
lods
iret
jmp
enter
mov
ds
std
add
jno
inc
scas
mov
mov
aad
mov
aam
fnop
aam
out
lret
cli
mov
mov
jmp
add
add
aam
jno
call
pop
mov
cld
rcr
inc
std
ret
icebp
mov
ret
cmpsl
cmpsl
dec
addl
stos
add
in
in
or
jmp
out
outsb
fcomp
mov
add
mov
add
add
push
cmp
cld
iret
in
std
shl
shl
call
in
aad
push
enter
int3
in
lods
scas
scas
popa
cmpb
incl
std
std
push
int
shrl
mov
add
mov
add
loop
js
hlt
push
cmpsb
cld
loope
aad
cld
aad
aam
sti
aam
stc
shl
push
leave
fdivr
fmul
shl
mov
mov
xchg
xchg
xchg
pop
ret
adc
mov
push
gs
mov
or
fstpl
cmp
insb
lods
cld
out
mov
shl
call
mov
shl
out
aam
ljmp
scas
ret
vsqrtps
add
add
rol
mov
lods
xchg
inc
and
shll
jbe
mov
mov
lret
adc
into
outsl
fmul
iret
pop
xlat
dec
in
fistpll
call
out
out
sbb
sarb
cmp
movsb
lods
arpl
lods
mov
les
lds
ret
ret
lret
sbb
bswap
int3
int3
or
aam
std
incl
jg
addb
std
incb
lods
std
add
sarl
std
std
incl
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
xor
fwait
loope
int
mov
xchg
and
sbb
mov
xchg
cmp
lds
adc
lock
test
lret
ja
push
push
call
mov
fbstp
cmp
xor
push
add
loope
push
xchg
test
lret
sti
jge
loopne
sbb
rorl
incb
outsl
pop
icebp
mov
sarl
je
cmp
mov
dec
cltd
sbb
ja
mov
xchg
lahf
or
sbb
icebp
pusha
adc
inc
mov
pop
lock
add
in
mov
push
call
or
and
pop
mov
mov
cmpsl
ds
imul
add
mov
push
montmul
cmpsb
xchg
add
fiaddl
mov
sti
dec
loop
lcall
jg
pop
repnz
jns,pt
jo
movsl
cmp
xchg
xchg
les
pop
jns
mov
pop
fwait
loope
int
shrl
test
lods
xchg
adc
enter
sbb
aam
fsubrs
idiv
xchg
daa
push
lea
adc
out
pop
xor
dec
repnz
push
call
inc
mov
add
inc
mov
lods
inc
xchg
mov
mov
ficomps
adc
call
xchg
arpl
popf
pushf
test
mov
lods
and
cmp
pop
add
lret
push
in
pop
push
push
call
adc
outsb
add
sub
inc
fidivrl
stos
inc
or
pop
popf
or
cmp
out
lock
jle
adc
xor
arpl
mov
xor
push
fnstenv
xchg
pop
test
in
sbb
aad
das
sub
lcall
and
ror
aas
add
cmpsl
ds
pop
hlt
push
inc
lds
popa
clc
jns
cmpsl
mov
rol
pop
add
sahf
jl
jecxz
pop
popf
and
cwtl
stos
out
inc
mov
frstor
mov
decb
mov
push
popa
sub
pop
mov
mov
int
ljmp
es
xor
insb
negb
mov
dec
dec
out
ss
into
data16
push
in
mov
fidivl
or
cmpb
out
pushf
pop
sahf
int
insl
add
out
and
and
inc
fidivl
test
clc
les
pop
stos
in
push
pop
int3
in
cmp
fwait
push
mov
mov
adc
inc
xlat
cmc
xor
mov
pop
testb
lods
mov
jge
lcall
xor
sub
pop
push
inc
jp
push
lods
fsubrs
int
and
mov
out
lods
inc
push
or
popa
movsl
pop
xor
mov
call
call
dec
outsl
push
xor
popf
push
lea
mov
stos
inc
adc
inc
test
pop
xchg
dec
out
jl
sahf
xor
into
or
mov
popl
fdivs
stc
nop
loop
pop
test
sbb
pop
push
ss
cmp
jmp
mov
or
xlat
outsb
adc
daa
xorb
mov
inc
roll
int3
arpl
fdivs
enter
cmpl
or
scas
in
es
add
test
stc
ret
jbe
pop
test
adcb
lret
cld
aaa
sahf
xor
dec
mov
mov
ret
repz
bound
testb
lods
mov
jge
cwtl
aad
lret
push
mov
push
jmp
aas
jns
pop
lods
in
mov
mov
jg
jno
in
push
sbb
test
jbe
andl
add
push
cmp
sub
adc
arpl
je
inc
test
je
jns
or
cmpsl
test
inc
ficoms
je
mov
je
inc
test
jne
jecxz
or
push
movsl
scas
add
inc
jle
cmp
js
fildll
cwtl
das
cmpsl
sarl
dec
jmp
jno
pop
push
mov
xchg
leave
sub
movsb
cmc
and
popl
fsubrs
push
push
hlt
mov
stc
nop
inc
push
es
inc
ficoms
mov
add
lods
stos
inc
fiaddl
mov
xor
leave
pusha
sub
inc
fistl
cli
pop
imulb
add
mov
sub
mov
jnp
hlt
call
sbb
popa
clc
xor
xchg
sub
cwtl
sbb
aas
or
hlt
mov
mov
loope
jno
sbb
or
clc
jmp
aaa
into
pop
adc
inc
lret
adc
add
dec
loopne
sbb
xchg
sti
fiaddl
sahf
or
test
jge
mov
mov
fistpl
mov
cmp
shrb
fimull
ja
jmp
outsl
push
or
pop
jne
in
push
mov
xchg
sub
jb
adc
ror
hlt
mov
inc
int
jbe
cli
xchg
pop
mov
ds
inc
cmp
jno
es
fdivl
push
out
jns
cld
xchg
insl
mov
nop
in
test
icebp
xor
jb
sub
rorb
hlt
int3
js
add
ret
pop
inc
shrl
rorb
jp
adc
mov
add
adc
aad
add
sarb
hlt
mov
add
jle
hlt
pop
hlt
sub
sti
xchg
adc
pop
hlt
and
movl
cmp
or
fnstenv
sbb
stos
push
jecxz
dec
adc
adc
jns
sub
je
out
mov
add
lea
adc
xchg
inc
out
or
or
fs
inc
sbb
push
add
mov
adc
jbe
push
sarl
aaa
repz
jae
and
jecxz
fisubrl
or
mov
sti
sbb
lcall
xchg
sub
mov
mov
push
xor
mov
shl
add
arpl
push
mov
lods
xchg
push
test
int
stos
fs
fsts
mov
test
mov
ja
jne
pop
test
scas
inc
lahf
push
hlt
mov
xchg
stos
inc
ret
mov
jg
fidivs
mov
aad
jno
out
sub
repnz
mov
fsubrs
pop
das
movb
andb
xchg
mov
push
out
in
mul
jnp
adc
sbb
shr
xchg
cwtl
mov
jg
ljmp
cmp
pushf
xor
out
jbe
jmp
loope
cmp
xchg
insb
add
mov
out
mov
pop
add
pusha
divl
ljmp
and
dec
loopne
sti
mov
sub
out
xchg
mulb
es
stos
inc
ss
mov
xchg
sbb
jbe
pop
or
je
add
xor
push
out
adc
fnstenv
adc
mov
add
cltd
xor
into
gs
adcb
adc
je
loopne
test
or
mov
jne
push
lods
pop
lods
jmp
loope
sub
cmp
push
call
nop
stos
out
fisttpl
mov
mov
loope
sbb
shrb
popf
xor
mov
lret
loope
stos
xor
bound
jle
mov
jns
stos
xor
lret
aas
mov
jp
and
xor
push
cli
cmpl
dec
fsubrp
xchg
outsl
adc
shlb
or
mov
fsubl
add
mov
cmp
mov
leave
xchg
xor
shlb
addr16
pop
jo
add
push
push
push
pop
push
xchg
push
pop
test
mov
mov
inc
pop
sub
push
movsl
pop
dec
test
mov
fnstenv
cli
pop
xor
lods
std
push
shrb
sbb
cmc
mov
outsl
mov
mov
mov
aam
test
mov
movsl
cmp
rcrb
sbb
movsb
mov
ja
xor
xor
push
inc
pop
mov
dec
fs
shr
fstpt
jo
cs
out
push
ret
dec
jnp
and
sbb
gs
mov
sbb
fimuls
push
data16
pop
hlt
test
mov
mov
jns
imul
lahf
sub
shlb
mov
push
pop
pop
repnz
ficompl
mov
mov
sbb
jno
mov
mov
jle
fisubrl
jb
push
mov
les
jl
sbb
push
mov
das
mov
rorb
push
lahf
into
lds
mov
add
stos
in
mov
mov
or
sbb
lcall
imul
scas
push
out
test
stos
pop
loopne
insl
loop
je
fiadds
inc
inc
lret
add
and
into
outsl
es
gs
sbb
xor
ret
cld
test
and
rorl
out
inc
pop
jb
inc
mov
jns
xchg
fsubl
xchg
dec
push
into
push
cmp
subb
jl
repnz
loopne
add
loope
rcrb
inc
fdivl
les
sub
lret
and
pop
lret
sarl
push
lods
adcb
cmpsl
in
mov
push
jbe
mov
stos
xlat
cmp
pop
mov
push
dec
scas
ss
and
ss
sbb
cs
mov
sub
mov
add
dec
and
sbb
jg
repnz
sbb
sub
pop
ja
xchg
mov
fisubl
hlt
sub
and
stos
aas
mov
in
ret
imul
mov
inc
pop
addr16
dec
dec
inc
loopne
cmp
cmp
push
inc
les
dec
into
pop
test
jne
dec
and
hlt
push
pop
scas
xchg
add
or
push
fisttpl
test
out
add
jecxz
cmpsb
cmc
rorb
jecxz
lret
out
pop
xor
xchg
arpl
push
mov
test
out
xchg
xor
xchg
mov
bound
adc
cmpsl
mov
shll
int3
test
or
dec
and
cwtl
hlt
xor
pop
movsl
test
in
insl
xchg
dec
pop
push
xor
daa
cmpb
xor
sbb
sub
jge
sbbb
mov
sbbb
int
aad
addr16
out
mov
mov
icebp
dec
lcall
mov
aad
mov
sbb
call
jno
into
xor
mov
jo
mov
add
loop
mov
pop
cmp
mov
ljmp
sarb
pop
loopne
inc
out
jno
lret
gs
sbb
rorb
inc
sbb
cmp
lahf
imul
push
xor
adc
sbb
movsl
jo
xor
and
push
daa
cmp
fs
in
in
mov
xchg
cs
mov
popa
mov
cmp
imul
call
in
xchg
inc
jns
jnp
sub
aaa
mov
arpl
outsl
subl
dec
cmp
xor
lahf
dec
sarl
sub
jge
fbstp
sahf
add
iret
sar
mov
add
add
scas
cwtl
lahf
gs
lret
mov
jae
loope
inc
xlat
testl
jg
lea
jnp
scas
cltd
xor
mov
pop
scas
mov
or
enter
sub
sub
fwait
dec
fs
cmp
orb
adc
cs
fistpll
pop
mov
pop
lock
push
jg
orb
fistpll
movsb
sahf
xor
adc
mov
mov
or
fsubrs
call
add
add
or
nop
daa
idivl
xor
mov
scas
inc
xor
int
mov
add
test
sbbb
mov
or
sub
mov
nop
lock
fdivr
mov
fs
pop
sbb
sti
js
sbb
mov
aaa
into
iret
push
out
call
outsb
add
movsl
lods
mov
int
xchg
sti
test
sbb
fstpl
ret
mov
lret
das
ljmp
jnp
xor
inc
xchg
xchg
hlt
or
cmp
sbb
ret
pop
dec
in
and
popa
loope
fwait
pop
mov
xchg
ficoml
outsb
sti
hlt
sbb
cltd
xchg
icebp
cmp
mov
pop
icebp
inc
mov
ret
or
vmread
dec
loope
xchg
xchg
sub
cltd
stc
mov
out
xchg
ds
xchg
sub
pop
icebp
mov
dec
mov
fsub
js
adc
push
or
xchg
jnp
clc
mov
lret
sbb
sub
cwtl
xor
xor
mov
loope
cmpl
jno
mov
clc
scas
aas
xchg
sub
enter
sti
pop
mov
xor
and
in
cmp
jmp
imul
mov
dec
and
inc
mov
lret
add
js
jecxz
call
cs
pop
out
les
pmulhw
loop
in
addl
mov
and
inc
dec
aas
subb
sbb
dec
loope
ss
jno
js
mov
int3
xchg
sub
mov
rclb
aad
adc
jne
cmp
mov
out
test
adc
clc
movsl
das
fcoml
sub
shl
dec
in
stc
dec
loopne
push
insb
add
push
pop
sahf
xor
mov
jb
and
push
mov
xor
jo
mov
testl
out
and
lret
aaa
fstpt
jmp
jns
jo
lods
lahf
jmp
and
mov
lods
inc
inc
xlat
adc
mov
xor
pop
mov
pusha
testl
jle
push
jl
mov
loopne
inc
fidivl
loopne
clc
adc
jg,pt
pop
fs
cwtl
jbe
and
shl
out
stos
inc
iret
adc
or
leave
pusha
pop
cs
fdivrs
jle
xchg
pop
divb
add
adc
add
mov
mov
fldcw
mull
pop
lods
dec
jle
dec
int3
shrl
push
lock
mov
push
fnstenv
sbb
mov
fsubrs
test
roll
testb
nop
adc
push
cmp
or
pop
and
out
into
ret
pop
aas
sarb
pop
shlb
ds
cs
je
test
push
mov
mov
mov
cmpsl
shrl
mov
rorl
icebp
mov
aas
lods
cmp
shufps
movsb
sbb
int
pop
lea
add
imul
mov
sub
mov
test
cmp
push
push
lds
inc
xlat
sti
ja
jp
adc
not
movl
adc
aad
mov
push
cmp
inc
int3
xchg
mov
in
fidivl
push
cmp
push
clc
pop
test
mov
aad
or
sti
dec
xchg
sub
stc
les
pop
xor
mov
xchg
push
lods
inc
cld
mov
fbstp
cmp
shll
std
xchg
xchg
pop
dec
fbstp
or
std
loope
sub
leave
or
loopne
push
mov
jp
rcrl
and
jbe
sbb
xor
andb
out
mov
sahf
jmp
outsl
push
or
mov
sbbb
test
shll
push
fnstenv
sbb
sbb
test
and
push
inc
movl
xchg
cli
xchg
mov
aam
scas
testb
pop
aaa
into
push
adcb
adc
outsl
lret
aam
or
in
lea
xchg
sub
bound
addr16
scas
inc
push
nop
inc
fldenv
push
call
mov
jo
cmc
loopne
lods
push
adc
xor
inc
lret
mov
jmp
imul
sahf
dec
mov
pop
mov
inc
fisttpl
or
bound
jmp
or
ret
loopne
and
push
loop
inc
or
jne
add
jle
cld
xchg
pop
cwtl
adcb
jnp
mov
es
mov
movsl
xor
lret
lds
push
call
jne
adcb
sahf
add
out
add
mov
aad
aad
jae
outsb
pop
repz
adc
daa
or
jnp
adc
loopne
xor
cmp
pop
popa
clc
bound
orb
test
inc
cli
xor
loope
mov
out
jmp
pusha
out
push
insl
add
or
jg
fwait
lret
ficompl
mov
jmp
test
pop
or
mov
leave
pop
notb
mov
stc
faddl
adcb
leave
test
xor
mov
mov
push
push
hlt
out
xchg
stc
nop
cltd
jge
mov
mov
scas
int
cmp
add
xor
out
xor
lods
pushl
xor
jno
notl
aaa
and
test
lea
fdivs
xlat
outsb
push
mov
cmc
mov
add
jle
stos
nop
xor
enter
inc
mov
lret
pop
popf
outsb
add
push
out
and
xor
inc
pop
stos
inc
xchg
arpl
mov
mov
ds
loopne
jge
adc
dec
add
xchg
ret
mov
int3
mov
ja
inc
fmuls
mov
mov
sub
jge
sbb
push
xor
xchg
adc
test
mov
lods
pop
rolb
ret
in
adc
loopne
cmp
lcall
and
push
sbb
inc
js
sub
pop
cmc
test
mov
dec
ret
ret
imul
dec
in
lcall
sub
test
fdivrl
hlt
mov
inc
adc
call
movl
xchg
mov
rsqrtps
xchg
sub
or
sbb
or
ss
lock
push
jmp
orb
hlt
push
jb
in
sub
cmp
mov
imul
xor
xchg
sbb
jle
xor
mov
jl
pop
mov
adc
fcoml
xor
int3
cmc
call
inc
sbb
mov
gs
fs
rcrl
mov
test
loopne
cmp
adc
pop
idivl
push
in
gs
outsb
test
je
fcmovnb
cmc
mov
lret
jle
mov
cmp
into
gs
iret
pop
test
in
sub
jge
cmpsl
add
mov
lock
cmpsb
cmp
mulb
mov
sbbl
aad
inc
mov
xor
mov
test
out
push
sbb
aas
aad
aas
pop
pusha
inc
dec
hlt
jno
int3
arpl
roll
cwtl
shl
enter
mov
push
mov
shlb
out
repnz
imul
mov
jne
xchg
cltd
das
dec
out
xorb
ret
jb
push
and
mulb
push
adc
dec
arpl
nop
mov
and
mov
add
add
aaa
cli
pop
loop
mov
call
fldl
lods
sub
xor
add
lds
mov
je
stos
cmc
jo
daa
int
and
dec
mov
xor
inc
je
sbbb
sbb
sbb
cmc
add
lds
inc
xlat
sbb
imul
cmp
xor
shlb
iret
xchg
lea
mov
fs
push
or
ds
sub
and
add
stos
inc
out
mov
mov
fdiv
fiadds
daa
fidivl
test
inc
mov
add
and
imul
pop
testl
jl
xchg
push
daa
pop
xchg
inc
mov
adc
repz
sub
ror
ret
jae
xchg
push
dec
jnp
and
pop
icebp
ja
ljmp
outsl
sbb
out
xor
in
jbe
adc
call
cmp
jmp
jle
es
test
push
stc
push
mov
pushw
and
xchg
cmp
xchg
sarb
aaa
fdiv
jno
xor
cmpsb
gs
cmpsb
sbb
inc
lret
xchg
mov
pop
pop
cs
sbb
dec
xorb
add
bound
bound
sub
aaa
bound
sub
test
loope
dec
and
icebp
mov
adc
js
in
scas
push
fiadds
lahf
clc
lock
xchg
das
cmp
sbb
cmc
into
inc
pop
sub
shll
xchg
mov
jns
repz
lods
sbb
xor
or
mov
or
rolb
loop
cs
dec
mov
adc
push
and
insb
xchg
imul
pop
bound
leave
and
sbb
insb
dec
loopne
and
pop
adc
lret
orb
adc
lahf
cmp
les
jmp
inc
pop
mov
sub
sbb
imul
pop
xchg
or
mov
push
out
jae
cmp
sti
test
pusha
xchg
in
out
out
imul
mov
test
repnz
and
sub
fmul
cmc
or
push
mov
bound
sbb
filds
adc
push
cmp
dec
aam
pusha
lds
fidivl
out
std
cmpsb
out
pop
ja
xor
jp
imulb
inc
push
pop
cmp
mov
dec
cmc
shrb
cmpsl
or
or
std
pop
add
sub
adc
pushf
imul
cmp
test
pop
mov
stos
in
leave
sti
add
and
mov
pop
sub
mov
mov
dec
mov
mov
scas
jmp
mov
inc
push
lahf
popa
dec
adcl
cli
insl
daa
xorb
test
xor
test
inc
xchg
gs
jbe
repz
and
repz
negl
xorl
out
cmp
daa
imul
rorl
or
stos
mov
pushf
cmp
push
jmp
push
ljmp
aaa
stos
roll
lock
leave
sarb
ret
mul
nop
jb
decl
fisttps
cltd
ja
add
bound
pusha
and
xor
xlat
dec
push
in
daa
enter
loope
aaa
ja
push
scas
js
dec
stos
sub
jge
jnp
cltd
dec
xchg
adc
sub
pop
cld
je
mov
jnp
cmpsb
testl
mov
addl
jne
dec
and
xchg
cmp
mov
stos
clc
shrb
dec
add
adc
mov
mov
jo
std
add
mov
or
cmp
aaa
xor
or
cmp
sahf
dec
inc
clc
pop
sub
pop
scas
cmp
sub
fs
nop
jb
sub
cli
outsl
rcl
adc
in
loop
and
sbb
sbb
push
jp
loopne
inc
mov
xchg
int3
cmp
or
pop
xchg
or
es
fs
fidivrl
mov
cmp
and
add
lods
mov
mov
mov
xor
aam
adc
std
or
pop
ja
scas
test
and
cld
lock
adc
dec
adc
xlat
mov
inc
xchg
cmp
sti
or
or
xchg
and
test
xlat
insl
jmp
fisubs
and
dec
jl
xorl
push
mov
or
shll
decl
enter
pop
xchg
inc
in
clc
pop
adc
inc
lea
in
push
xorl
orl
lahf
or
scas
mov
fucomip
adc
inc
jne
jg
fsts
jge
xchg
ret
mov
pop
cli
xchg
xchg
push
or
cmp
scas
xchg
icebp
xchg
mov
call
adc
and
push
adc
out
fwait
std
cmc
insb
movsb
xlat
negb
stos
rclb
jbe
int
lods
or
pushf
arpl
scas
mov
bound
xchg
lds
and
adc
vpcmpeqw
jg
jmp
xchg
mov
fldcw
push
cwtl
mov
mov
in
scas
out
dec
jae
cmp
mov
clc
shlb
xchg
test
pushl
icebp
das
inc
or
add
push
out
xor
fnstcw
in
mov
ss
or
pop
and
cmp
adcl
cmpb
dec
jnp
or
shrl
ljmp
mov
cmp
ds
in
ret
jg
and
xchg
pop
add
mov
sub
push
jle
inc
stos
mov
pop
lahf
in
jnp
mov
or
pop
es
outsb
cwtl
lods
sub
xchg
mov
cmp
ret
jge,pn
mov
icebp
cli
fiaddl
in
daa
inc
jae
loopne
push
js
push
xor
nop
into
call
sbbb
push
cli
rclb
inc
xchg
outsb
pop
int
and
push
add
pop
ljmp
dec
in
cmp
mov
dec
das
bound
inc
and
sub
addr16
push
lods
cli
fbld
popa
out
daa
mov
push
test
mov
jle
mov
aam
aaa
adc
mov
xor
pop
cli
out
jbe
inc
cmp
jg
repz
mov
dec
rol
push
xchg
rorb
and
call
jnp
lret
popl
cmp
xchg
cmpsl
mov
jl
pop
push
or
ljmp
jmp
mov
push
ljmp
xor
inc
and
adcl
insb
or
sahf
xchg
shlb
aas
test
and
xor
jmp
imul
test
call
out
cmpl
test
cmp
repnz
push
mov
ds
dec
cmp
fnsave
lahf
sbb
xchg
stos
mov
mov
dec
roll
pop
sbb
dec
incl
push
or
mov
xor
rcll
dec
stos
inc
inc
xor
push
addb
mov
ja
jae
jae
xchg
push
sbb
add
aad
lock
jb
data16
lret
loope
jmp
movl
in
inc
adc
mov
and
xor
in
mov
pop
cmpsb
push
bound
iret
clc
mov
repnz
cmp
add
repnz
shll
sub
insb
push
mov
test
jge
adc
cmp
stc
xchg
xchg
pop
ffreep
pop
loopne
adc
lods
pop
xchg
inc
inc
or
and
mov
jno
xor
and
lea
jb
icebp
mov
fdivs
sahf
jne
es
jb
das
mov
std
xor
cmpsl
das
mov
cs
push
std
xor
push
insb
div
push
sbb
sbb
addr16
cmp
stc
std
sbb
pop
or
imul
leave
adc
out
in
faddp
adc
pop
movsb
and
dec
cld
ss
ret
dec
mov
xchg
ja
adc
std
fdivl
cmp
lock
cmp
sbb
adc
movsb
sub
pop
cs
or
out
xor
js
sub
sahf
inc
pop
fdivrl
repz
ret
adc
cmp
cmp
shrb
push
dec
sbb
scas
and
add
xor
and
xchg
addr16
shl
pusha
fwait
shll
jne
icebp
test
inc
push
sbbb
int
icebp
lret
iret
sbb
paddusw
shl
jmp
scas
stc
lcall
sub
dec
mov
outsb
insl
mov
push
popf
add
push
in
leave
and
mov
inc
inc
shlb
pop
add
fldenv
cmp
or
out
push
xor
inc
test
dec
cmp
sub
outsl
lret
inc
repnz
iret
aam
popf
bound
mov
bound
adc
xchg
mov
add
xchg
jae
cwtl
push
dec
aas
cmp
sbb
sbbb
xchg
movsb
cld
jns
or
xor
dec
test
loope
or
push
sub
fucomp
std
scas
mov
mov
mov
push
xchg
add
lahf
mov
sti
adc
bound
or
inc
push
bound
nop
cs
or
shll
aad
jb
mov
dec
jp
cmp
sub
pop
xchg
pop
inc
shll
jno
pop
adc
fcomp
mov
sbb
dec
scas
sub
xor
jmp
ficoml
imul
sti
jns
inc
sub
lret
mov
movl
mov
cmp
cld
clc
rcr
sete
lret
add
stos
stos
or
mov
fcmovnu
mov
add
jae
dec
imul
inc
push
arpl
mov
add
dec
pop
cmpb
pop
inc
push
push
pop
sub
sub
gs
nop
ret
ds
out
pop
repnz
sbb
fcmovnu
xchg
testb
cmc
push
test
loopne
dec
cmpsb
ret
push
jb
into
dec
pop
cmc
cmp
mov
push
ffreep
in
xchg
mov
test
cld
lahf
clc
mov
jbe
cmpsb
mov
insl
sub
push
icebp
ret
lds
or
hlt
mov
rcrb
mov
in
bound
rclb
xor
dec
fisttps
pop
mov
mov
ljmp
adc
mov
fldenv
add
cwtl
xor
pop
nop
scas
mov
dec
or
mov
cld
loop
add
cmp
cwtl
jne
leave
rorb
or
dec
fucomp
in
stc
sub
push
cmovp
jp
ja
inc
push
xchg
xor
mov
repnz
shrb
jo
jns
cmp
loopne
inc
mov
negb
gs
jbe
cli
or
pop
cwtl
dec
lret
shll
fistpll
pop
gs
mov
xchg
cmc
mov
push
fst
add
mov
add
sub
stc
fbld
pop
push
lret
dec
adc
adc
repz
fs
mov
push
dec
popa
ja
add
in
jp
pop
out
ror
cmp
es
push
add
and
cmp
add
iret
out
idivl
add
xchg
inc
out
push
add
pushf
cmp
xchg
mov
lret
sahf
arpl
or
in
adc
cmc
movsb
lahf
into
or
push
test
clc
mov
or
cmp
popf
xor
mov
mov
aaa
clc
shr
rorl
fistps
mov
adc
pop
dec
testb
sub
mov
dec
xchg
mov
adc
bound
pop
imul
push
jno
es
mov
push
clc
mov
lea
lea
mov
dec
and
hlt
es
sub
lahf
mov
aam
and
clc
xor
and
fidivrs
ret
mov
xor
and
push
cmc
mov
push
xchg
add
jnp
adc
fwait
cmp
out
cmc
gs
mov
adc
repnz
cmpsb
add
lret
adc
aam
push
mov
adc
loopne
jmp
jb
lret
push
xchg
sbb
insb
test
sub
test
in
cli
mov
stos
dec
xchg
stos
jecxz
movsb
lcall
inc
popa
mov
mov
test
in
xchg
testb
sbb
inc
jne
or
ljmp
cmpsl
loope
jo
mov
xchg
fstps
dec
mov
sbb
or
cltd
pop
and
dec
jae
push
sbb
sbb
mov
js
mov
sarb
dec
xchg
inc
in
jo
faddp
mov
jo
sub
popa
jp
fld
push
pop
les
rcr
fsubrs
out
test
adc
push
lea
neg
imul
push
jle
stc
cli
insl
mov
scas
mov
sub
xor
push
nop
jo
inc
mov
out
push
and
mov
jmp
es
pop
and
fdivrs
add
or
sti
movsl
ret
pop
cmp
dec
jns
cld
pop
jecxz
or
cmp
mov
mov
add
std
and
cmp
lret
faddl
scas
insl
bound
enter
lcall
movsl
mov
les
mov
icebp
push
popl
add
xchg
cmpsb
push
or
or
cmp
xor
inc
pushf
imul
jns
js
mov
shlb
mov
out
imul
cmp
inc
fcompl
popf
push
dec
jle
or
pop
sahf
inc
arpl
sbb
mov
test
orb
or
jne
push
push
and
sbb
jge
loopne
aam
rcll
stc
push
outsl
and
dec
nop
xchg
mov
stos
mov
jg
je
fldl
mov
das
pop
repz
repnz
xchg
mov
xor
test
nop
mov
insb
icebp
adc
and
and
push
xlat
add
mov
aas
xor
push
push
push
jnp
pushf
xchg
leave
ret
sub
or
jmp
arpl
push
icebp
aaa
push
loop
jb
mov
insl
dec
cltd
push
pop
testb
or
mov
imull
cmp
add
pop
ja
xchg
adc
pushf
inc
or
pop
push
jnp
ret
je
iret
cmp
mov
leave
or
push
jae
jl
fcoms
in
jmp
std
sub
pop
mov
stos
push
push
and
mov
cmp
nop
and
push
jae
jns
cmpsb
adc
outsl
gs
enter
rorl
mov
inc
pop
lret
jp
fldenv
scas
fs
testl
lea
movsl
add
jb
enter
or
xor
sub
movsl
arpl
sbb
adc
cmp
repz
xchg
es
sbb
inc
sbb
dec
mov
sarl
jle
mov
mov
adc
ret
cmp
adc
mov
setge
mov
adc
lahf
int
mov
out
xchg
not
fld1
outsb
mov
push
push
pop
jp
movsb
push
mov
inc
jne
in
push
mov
and
leave
aad
int
cmpsl
repz
xchg
push
mov
idiv
mov
xchg
fisttpl
jmp
mov
mov
ljmp
orl
add
xor
aad
aad
xchg
jae
mov
outsb
jge
imul
stos
cld
aam
sarb
ljmp
es
aaa
jl
and
or
sub
push
inc
test
mov
aaa
jnp
aad
in
cli
mov
pop
xchg
pusha
jge
movsb
add
xchg
inc
movhlps
fisttpl
ret
xor
push
sti
andb
data16
bound
inc
fildll
testb
outsl
cwtl
sub
mov
mov
test
ss
sub
mov
or
es
mov
orl
sti
jb
xlat
cmc
ficoml
inc
pusha
xchg
enter
hlt
add
in
xchg
rol
or
add
sbb
add
add
sub
sub
mov
sarb
ror
mov
fwait
iret
ds
ret
das
push
sbb
test
and
fimull
pop
jg
adc
cli
int3
sub
dec
sti
cmp
stc
int3
out
xor
xor
push
repz
cmc
mov
inc
dec
enter
out
int3
pushl
ds
insl
test
push
es
mov
outsb
mov
cmc
cmpsb
fistpll
popf
mov
frstor
fs
push
icebp
and
pusha
fadd
outsb
scas
scas
lods
mov
sahf
adc
and
fdivs
adc
xor
scas
pop
out
xchg
xor
leave
repnz
in
ffree
adc
sub
cmp
inc
mov
mov
cmp
mov
iret
ljmp
outsl
pop
fucomi
enter
cmp
daa
mov
shr
fidivl
cmp
jnp
mov
and
setns
movsl
pop
test
in
enter
sub
pop
cmp
mov
sbb
enter
jle
push
sbb
stos
mov
cmp
jbe
fcmovbe
cmp
mov
in
inc
scas
js
inc
lds
cmp
movsb
hlt
xchg
sub
mov
xchg
pop
push
into
sahf
repz
jno
sbb
sub
adc
xor
jmp
push
jnp
push
or
fistpll
sbb
add
pop
lea
push
out
sbb
sbb
pop
dec
pushf
sub
mov
mov
icebp
int3
add
push
pop
xor
and
push
xchg
mov
stos
xchg
sub
cmp
add
mov
sti
cmp
sbbb
jno
cli
mov
in
add
in
aam
cwtl
xor
sub
lds
push
mov
das
andl
and
cmp
das
pop
add
movsb
or
cmp
mov
in
repnz
pop
inc
jns
cmpsl
std
decl
pop
cmp
mov
shrb
scas
mov
pop
std
mov
and
lock
pop
add
xlat
add
rcll
inc
cmp
push
mov
mov
cmpb
outsb
insb
fs
sub
mov
mov
cmp
jecxz
cli
mov
mov
in
xchg
leave
cmp
adc
push
mov
imul
inc
add
ja
adc
ja
push
outsb
sub
lahf
out
inc
test
clc
adc
pop
adc
pusha
mov
mov
mov
negl
aas
adc
notl
sbb
sub
ret
mov
cwtl
add
popf
or
mov
cmp
sub
outsl
mov
test
mov
xchg
inc
movsb
sar
out
sti
leave
dec
push
xor
adc
inc
adc
pushf
scas
push
add
mov
mov
xchg
xor
mov
jl
ljmp
or
outsb
sbb
or
xchg
pop
inc
gs
mov
or
sbb
jp
loopne
mov
dec
mov
ds
and
and
dec
test
into
dec
sbb
cmp
adc
stc
popa
ljmp
inc
jo
int3
cmp
inc
insl
sub
xchg
push
sbb
shlb
les
inc
lret
inc
or
dec
xor
inc
jb
mov
pop
cli
xlat
test
pushf
push
cmp
cmpsb
mov
iret
lret
dec
int
mov
imul
movsb
or
mov
jo
push
dec
add
xchg
outsl
mov
push
xor
outsb
scas
add
push
dec
fs
xchg
push
mov
pop
outsb
out
rcrb
das
dec
inc
mov
dec
fwait
sbb
lret
out
xchg
mov
xor
enter
push
das
xor
push
mov
or
inc
idiv
adc
push
mov
fidivrs
test
jns
imul
leave
fisubs
cmpsl
mov
push
jmp
or
jl
test
mov
ljmp
outsl
bound
jns
xchg
in
fsts
mov
stc
xchg
jne
push
add
enter
push
xchg
inc
push
inc
dec
nop
cmpsb
das
lret
bnd
sti
jo
push
xchg
cmp
mov
add
and
out
jae
mov
xorl
xchg
xor
cmp
jae
imul
stos
jmp
stc
inc
adc
jp
imull
aam
jo
adc
push
sub
test
popa
inc
or
cmpsb
std
dec
sbb
cmp
cmp
push
lods
lods
cmp
iret
stos
lock
hlt
xchg
and
push
add
imul
push
mov
cli
inc
push
insb
int
jb
mov
sahf
fwait
into
mov
cmpsl
xor
clc
cmp
mov
push
addb
icebp
ret
xchg
or
mov
mov
mov
mov
mov
lret
add
pop
dec
sub
jbe
fistl
sub
cmp
inc
negb
dec
ret
push
sbb
stos
enter
push
jp
cmp
cmpsb
mov
in
fdivrl
and
jmp
mov
mov
add
into
sti
xchg
jl
cmpsl
sbb
cmp
insb
divb
mov
and
xor
ret
adc
movsl
xor
jnp
or
push
js
pushf
xchg
ljmp
insb
push
fisttps
in
test
cmpsb
inc
adcb
insb
cmp
push
mov
testl
add
add
xchg
xchg
xor
popf
lods
add
xchg
mov
sub
sub
in
inc
outsl
dec
out
data16
cmpb
mov
mov
shlb
xchg
movsb
mov
ss
adc
enter
cld
push
add
movsl
lock
imull
loopne
mov
loopne
pusha
iret
stos
in
fdivl
in
dec
cmpsl
int3
push
movsb
cli
dec
cmp
cwtl
stos
or
inc
shll
jo
adc
jg
inc
fs
fidivrl
ljmp
and
lods
into
jge
mov
das
mov
mov
fdivs
jno
and
pop
fcmovnu
ret
rclb
fldcw
xchg
push
ja
mov
or
addr16
mov
nop
adc
jle
dec
xchg
jne
or
mov
inc
cmp
movsb
adc
das
rol
mov
add
out
jno
mov
lcall
add
push
sbb
std
cmp
push
insl
add
xor
xchg
insl
add
std
mov
push
xor
cmp
dec
mov
sub
imul
aam
mov
xor
jle
push
dec
cld
aam
movsl
loop
leave
mov
or
add
aas
lret
insl
and
or
ds
sub
loopne
andb
lea
lret
ficompl
xchg
jmp
je
loope
arpl
jg
pushf
sub
loop
xchg
pop
cltd
add
lds
iret
stos
mov
adc
jo
and
mov
fisttps
pop
addr16
test
sub
push
pop
call
push
cli
mov
dec
sahf
mov
inc
lds
mov
outsb
lret
rolb
mov
stos
xchg
divl
or
les
push
clc
inc
and
mov
mov
fwait
and
mov
mull
xchg
and
mov
sbb
js
repz
jecxz
js
sub
sub
popa
cld
jns
movzbl
xchg
mov
and
sti
jl
jnp
dec
out
cmp
es
mov
push
sub
out
xchg
pop
xor
imul
push
jnp
xor
movsb
mov
adc
mov
adc
dec
pop
or
cmpsb
mov
lret
negb
xchg
fbstp
sub
test
cltd
popf
je
insb
pop
mov
imul
or
pop
push
lret
and
std
cmpsb
mov
jnp
fsubr
rolb
lahf
mov
repnz
cmpl
js
push
scas
dec
ja
and
push
les
aad
stc
in
shrb
shll
arpl
push
roll
in
cli
fdivp
xlat
stc
add
stc
or
jmp
pop
and
js
pop
out
cs
fsubs
icebp
ljmpw
hlt
mov
pusha
mov
in
xor
push
aas
enter
sti
inc
sbb
xchg
adc
add
jno
adc
mov
jno
mov
lret
jecxz
mov
es
mov
cmpsl
cmp
mov
inc
gs
add
inc
push
popf
xchg
xor
sbb
jno
or
dec
insl
add
pop
cmp
dec
dec
movsb
mov
pop
mov
inc
fcoms
cmpl
out
xor
pop
inc
js
cwtl
bound
dec
adc
fstp
fwait
mov
mov
stc
ficoms
or
dec
shl
xchg
jae
and
nop
or
sbb
test
pushf
adc
sbb
jns
fistl
icebp
insl
mov
fsubl
jg
lahf
jae
movsl
pop
mov
jne
mov
mov
mov
cmpsl
or
mov
mov
push
sahf
cmp
into
or
jp
dec
cmp
movsl
xor
cli
mov
mov
call
stos
inc
pop
adc
jle
orl
sub
arpl
call
and
popf
cmc
enter
mov
sbb
leave
hlt
out
mov
mov
sbb
mov
incb
push
push
adc
xchg
push
sub
mov
xchg
and
adc
fs
lods
add
add
enter
pop
scas
lret
sub
das
pop
int
cmp
call
cmp
adc
xchg
xchg
insl
out
lock
scas
cld
cmp
and
or
or
out
sub
lret
ds
mov
shll
lcall
push
mov
loopne
je
es
xchg
rcrl
and
xchg
imul
mov
out
adc
lods
out
in
pop
fwait
pop
jecxz
adc
or
or
rorl
rolb
test
adc
outsb
imul
fadd
or
or
xchg
sti
call
outsb
insb
dec
jae
das
mov
stos
sbb
jge
pop
push
sbb
mov
aam
cmp
push
xor
andb
dec
hlt
dec
call
and
mov
test
or
xor
bound
aad
repz
mov
jle
xor
ret
test
cmpsl
jp
iret
fsubl
dec
dec
lods
psraw
cmp
push
lcall
icebp
mov
imul
fildll
mov
add
cmp
mov
mov
cmc
pop
into
test
mov
or
cli
rclb
stc
dec
popf
call
in
ss
das
sarl
dec
add
mov
inc
push
xchg
test
dec
pushf
pop
xchg
sub
sbb
mov
stos
pop
pop
outsl
lods
add
movsl
add
mov
jae
test
mov
adc
jno
lahf
aas
jg
cs
mov
in
in
mov
push
or
mov
xchg
xor
inc
leave
dec
rcrb
mov
shl
push
into
dec
and
and
ret
dec
iret
sbb
cs
roll
fadd
mov
cs
subl
scas
xor
sub
das
out
or
mov
outsl
cwtl
xchg
test
loope
cld
jp
test
xchg
addr16
pop
dec
adc
dec
mov
or
xchg
inc
fs
and
cmpb
fdiv
mov
jecxz
xchg
dec
mov
ljmp
sti
adcb
je
les
mov
cmpsl
mov
and
adc
sub
push
mov
jb
sub
icebp
js
xchg
dec
inc
sbb
dec
mov
mov
roll
std
in
int
pop
inc
test
les
clts
xchg
lret
xor
lds
rclb
cmp
mov
inc
pop
in
or
pop
inc
enter
rcrb
pop
subl
cmpsb
mov
pop
jb
pop
stos
adc
push
cmp
xor
adc
fldcw
ja
cmp
lret
jge
test
rorl
or
lods
aam
pop
cld
xor
pop
lret
addr16
inc
fisubl
out
test
inc
popa
clc
je
or
adcb
rcl
popf
xor
testb
cmp
push
outsb
dec
gs
jns
fidivl
lcall
adc
mov
stos
addr16
mov
mov
fimull
call
addr16
pop
cmp
lods
insb
jg
sbb
shlb
loopne
es
pop
pop
xor
jns
jbe
test
addb
dec
sub
dec
into
gs
xor
mov
in
add
dec
out
out
mov
push
cmp
mov
test
lret
cld
frstor
push
push
les
das
jp
popa
jno
jge
sbbb
not
mov
scas
dec
sub
jae
push
fwait
jnp
cltd
lods
mov
pop
scas
decb
insl
add
pop
sub
push
popa
xchg
sub
jno
out
mov
inc
out
jno
cmc
pop
shrl
push
lea
pop
in
orl
mov
out
ljmp
mov
inc
push
inc
fldl
mov
and
out
sbbb
or
cmp
aaa
jp
popa
clc
mov
jg
fsubrp
fdivl
add
jae
mov
lods
int
in
loopne
cmpsl
sbb
mov
adc
ljmp
test
or
fidivrs
xor
push
dec
lock
rcrl
inc
fld
iret
imul
in
ret
sbb
ds
fbld
es
mov
push
popf
stc
shlb
mov
sbb
pop
inc
sub
repz
inc
ficompl
ror
cli
shlb
or
roll
adcb
callw
jne
subl
adc
inc
sub
adc
test
scas
rorl
or
lock
cli
xchg
mov
ret
cld
rorb
or
pop
repnz
sub
push
push
dec
jecxz
mov
mov
testl
mov
sbbb
sbb
jo
or
xor
les
mov
nop
jmp
stos
inc
fmuls
test
stc
insl
and
sub
mov
testb
jmp
add
cmpsb
cmp
int
ljmp
in
inc
fstl
cmp
shll
add
lret
mov
adc
and
rclb
std
sbb
outsl
push
adc
fidivs
xchg
jns
xchg
lret
lret
loop
out
in
lcall
cmp
fidivl
rcrb
xor
cs
mov
sub
jns
js
jge
jne
jle
ret
imul
shrb
cli
dec
sub
lcall
push
scas
mov
mov
rorb
push
cmp
out
test
push
mov
jbe
mov
stc
or
push
ljmp
push
popf
xorl
scas
movsb
iret
data16
iret
data16
pop
repnz
lcall
jbe
pop
mov
das
sahf
xor
cmp
ss
pop
push
movsl
test
jns
movsl
iret
data16
jmp
or
sbbl
sub
dec
in
ja
fidivs
shrl
rorl
adc
push
pop
inc
xlat
mov
scas
stos
lret
aad
pop
lock
mov
inc
push
push
and
mov
les
xor
and
pop
ja
sub
mov
les
out
dec
fists
and
sbbl
push
call
int
stos
inc
add
and
pop
cmp
scas
fs
inc
test
lret
cmc
loope
sbb
sub
dec
cmp
stos
data16
imull
lret
repz
aam
jb
push
pop
lock
das
mov
pop
jno
dec
stos
jp
mov
hlt
or
push
and
dec
lods
jge
push
cmpsb
into
cmp
clc
enter
sbb
inc
adc
in
dec
cli
xchg
popf
jo
mov
lret
push
in
repz
dec
dec
push
cld
xchg
mov
mov
mov
mov
dec
ds
cmp
mov
leave
lcall
cld
out
sti
xchg
cs
mov
dec
dec
jecxz
push
fs
mov
mov
jmp
in
sbbl
add
push
jnp
mov
sbbl
fsubr
cmp
adc
xor
daa
xor
sti
outsb
inc
dec
in
sti
xchg
mov
fldenv
jmp
in
and
dec
insb
jge
fwait
movsl
mov
test
fidivl
pop
pop
and
cmp
movsl
xorb
mov
fstpl
add
and
push
jmp
sbbb
leave
mov
dec
pop
adc
mov
std
xchg
pusha
jo
push
stos
xorb
neg
mov
rolb
xor
pusha
bound
xchg
adcl
out
loope
dec
in
add
shll
mov
orb
popa
loope
cmpsl
pop
clc
shlb
cmp
outsl
push
push
popf
xchg
sub
shr
xor
pop
repz
in
inc
adc
ja
dec
fbstp
push
in
rclb
inc
xlat
daa
out
sti
adc
shll
push
insb
xchg
leave
pusha
int
fdivl
out
sub
pop
outsb
add
jmp
sub
ljmp
aam
scas
add
enter
ds
push
jecxz
dec
js
fildll
iret
dec
loope
mov
jnp
dec
or
es
pop
stc
nop
mov
jle
out
fsubrs
pop
pushf
xor
add
pop
subb
jnp
add
aad
stc
std
xchg
cs
dec
out
dec
push
mov
scas
jl
fcompl
es
stc
sbb
cmpb
imul
cmp
sub
inc
or
pusha
xchg
sbb
mov
xor
and
push
mov
dec
data16
sub
lret
push
xchg
xchg
xor
jp
jecxz
loop
popa
and
jbe
push
dec
hlt
je
movsb
aas
popa
cltd
or
mov
sbb
or
cs
pop
cmpb
shlb
scas
out
dec
ficoml
pop
ljmp
outsb
idivl
fadds
adc
daa
mov
pop
or
stos
pop
outsl
mov
push
scas
cld
test
jge
adc
mov
sub
rcrb
mov
add
cwtl
push
cmpsl
movl
das
mov
push
les
cmp
addr16
fisttps
and
das
ficompl
push
inc
push
bnd
outsl
notl
test
iret
jp
pop
cmpsl
loope
push
and
pop
notl
adcb
adc
loopne
int
lods
adc
cltd
cmp
call
pushf
mov
or
or
shrl
fcoms
icebp
mov
mov
inc
in
lret
jg,pn
inc
cwtl
pop
pop
xlat
jb
loopne
in
mov
sbb
lahf
xor
xorl
dec
or
subb
mov
shr
leave
es
int
sbb
fnstenv
std
jge
xchg
in
lea
ret
or
imul
pop
bound
test
xlat
sub
cld
inc
shlb
pop
fisttpl
testb
push
and
div
push
push
out
push
inc
addb
cwtl
in
scas
dec
and
ficomps
adc
js
mov
push
inc
in
mov
mov
out
mov
or
and
mov
aam
enter
mov
inc
js
int
jl
jmp
out
lret
je
hlt
or
xor
cmpsb
inc
inc
pop
jnp
xchg
je
test
add
sub
inc
call
jg
subb
mov
push
pop
in
lods
and
inc
jmp
mov
xchg
adc
xor
inc
jns
mov
push
cmpsl
rcrb
aas
mov
in
outsb
scas
dec
stos
sub
jno
fistps
xchg
outsb
dec
ljmp
xchg
pop
jne
lods
jmp
out
hlt
cmpl
and
or
mov
xor
pop
mov
rcr
xorb
jecxz
xlat
mov
add
jle
loop
push
test
shrb
popf
movsb
jmp
add
sub
push
jae
cmp
ret
enter
mov
in
pop
fsubs
sub
shll
call
mov
jp
lret
add
push
xor
xchg
cmpl
stos
movsb
movsb
cmp
lret
loope
std
test
popf
push
dec
loop
jl
sbb
mov
ret
inc
lock
inc
inc
xor
jae
jnp
lcall
push
in
out
out
pop
psubsb
cmp
imul
ret
mov
fdivrl
rorl
cs
pusha
pop
rcrl
testb
aam
stos
add
es
push
push
push
mov
js
jmp
fmul
jbe
cld
stc
dec
in
push
mov
push
dec
jl
jge
mov
push
rol
in
test
icebp
cwtl
das
and
insb
add
ss
imul
xchg
push
jmp
mov
jb
pop
adc
nop
daa
popaw
and
inc
sarl
arpl
stc
cmp
adcb
cmp
lahf
imul
mov
fcomp
inc
fildl
daa
push
out
addr16
icebp
mov
mov
mov
ljmp
out
and
xor
stos
aaa
into
jp
test
xor
pop
jae
sbbl
mov
es
add
mov
adc
negl
sarl
xchg
cmp
pop
or
es
adc
mov
loopne
jl
sub
push
popf
arpl
push
test
sbb
sub
sbb
mov
mov
jmp
inc
jecxz
add
test
xchg
imul
imul
into
mull
dec
adc
mov
pop
xor
jnp
jl
ja
jp
lea
ret
push
add
mov
daa
sub
mov
ret
pop
hlt
adc
data16
hlt
xor
mov
out
aad
mov
incb
mov
or
push
or
fcom
push
jecxz
cmp
push
in
push
loope
mov
js
lods
inc
mov
lret
pop
sub
adc
jmp
inc
and
aad
or
sbb
sti
adc
scas
int
fidivrs
adc
jne
cli
cmp
stos
pop
lods
xor
in
mov
lock
lret
adc
fnsave
out
xor
test
pop
sti
pop
mov
dec
adc
ja
push
fs
repnz
in
ljmp
push
mov
es
jno
loopne
adc
jbe
aas
push
mov
pop
mov
fsub
jnp
pop
pop
hlt
nop
das
add
in
sbb
cmp
ds
pop
sbbl
pop
lods
les
jp
stos
icebp
inc
fldenv
int
adc
inc
pushf
xor
jns
inc
xchg
popf
xor
fs
xchg
jmp
rcrb
gs
call
or
cmp
cmpsb
cmp
loope
fistl
mov
jne
xor
mov
xchg
xchg
addl
addr16
sbb
aam
dec
out
inc
xor
jmp
push
jmp
lods
aam
cmc
scas
mov
outsl
js
ret
xlat
int
leave
sub
xor
das
sbb
push
movsl
push
xor
test
fldcw
mov
xor
jg
ret
imul
ret
cmp
sbb
sbb
hlt
adcb
cld
outsb
stos
cmp
and
cmp
stos
fadd
je
into
icebp
sbb
adc
jge
mov
pop
pop
add
nop
mov
popf
and
or
adc
sub
add
sti
rcrl
xchg
adc
orb
sub
push
dec
push
outsl
adc
es
notl
cmpsb
cmc
scas
push
sub
lock
mov
popa
mov
jbe
xchg
std
jl,pt
push
test
mov
jnp
scas
pusha
neg
sahf
add
xchg
cli
movsl
cmp
aad
xor
jne
mov
jl
jne
jae
call
xchg
or
lds
scas
scas
nop
add
sbb
cs
fbld
mov
scas
inc
mov
sbbl
fimuls
pcmpeqd
jl
insb
lods
inc
pop
jg
sbb
fldt
lds
fs
push
and
pusha
push
xchg
testl
dec
enter
mov
lods
cld
adc
inc
inc
incl
out
outsl
dec
fistps
mov
jbe
jecxz
adc
add
xor
pop
push
mov
lret
mov
push
mov
pop
divb
xor
nop
movsb
pop
clc
cmpsb
pop
movsl
xlat
daa
inc
fstl
test
in
inc
es
test
xchg
pop
mov
scas
xchg
and
and
and
mov
jbe
pop
imul
sub
adc
mov
popf
inc
sbbl
hlt
xchg
clc
test
and
pop
push
sbb
push
mov
mov
xor
mov
clc
inc
cmp
rolb
adc
outsl
add
push
mov
mov
inc
fnsave
push
cmp
js
test
sbb
out
and
pop
jp
ss
xchg
popa
clc
int
add
mov
mov
popf
cmpsb
xchg
inc
ffree
movsl
ss
lock
and
sbb
dec
xchg
cli
cwtl
and
ljmp
lea
push
imul
fnsave
fldl2e
orl
and
pop
push
addr16
into
push
jns
add
roll
push
dec
pop
sbb
orb
pop
push
aaa
into
bound
js
pop
adc
inc
insl
cmp
jp
cmp
dec
scas
mov
sbb
scas
and
and
inc
and
adcl
dec
in
mov
sti
out
sub
aas
jp
pop
insl
push
mov
outsb
arpl
lods
inc
push
jecxz
xor
test
lea
jg
movsl
and
stos
std
les
stos
movsl
cmp
dec
arpl
jns
clc
push
xchg
add
rcll
cmp
xor
test
jecxz
mov
flds
dec
and
mov
add
std
xchg
xor
cmp
test
lods
adc
cmpsb
pop
ja
dec
rolb
mov
je
sub
mov
aaa
js
sbb
ret
and
pop
sbb
pop
dec
pop
push
in
push
addr16
stc
xchg
xchg
cmp
add
add
scas
xor
mov
push
test
inc
fistl
shl
repz
je
push
sbb
xchg
and
cmp
in
test
push
fwait
xchg
pop
and
lock
push
out
add
inc
fmull
or
jns
aaa
push
jmp
mov
or
dec
pop
jnp
dec
les
popl
cli
loope
js
icebp
or
jg
push
mov
fldcw
jge
clc
jecxz
sub
sub
test
je
fbstp
sahf
and
push
insb
fidivs
inc
stc
jne
xchg
adc
out
xchg
mov
psubb
fdivl
call
iret
lea
in
pop
pop
adc
xchg
cmpb
or
xchg
mov
xchg
dec
fucomp
orb
outsl
push
insb
and
call
mov
jo
push
faddl
movsl
hlt
adc
stos
inc
aad
inc
fildl
stos
jecxz
in
gs
push
push
test
test
mov
ror
lds
mov
stc
outsw
pop
cmc
pop
nop
add
fwait
sti
fldenv
xor
adc
xor
inc
fsubr
pop
loope
cmp
jno
stos
xchg
push
and
jbe
lds
ret
fldenv
cli
sbbl
adc
popf
inc
bnd
in
mov
xor
lret
inc
sbb
ret
loop
inc
iret
fsubrs
outsb
test
add
mov
addr16
pop
inc
retw
insb
popa
clc
sahf
pushf
push
in
push
mov
sti
xchg
add
sub
lods
cmp
sbb
pusha
shrl
hlt
test
xchg
jnp
add
and
aaa
lods
lds
mov
stc
daa
lods
push
in
sbb
pusha
shrl
test
push
jmp
and
dec
loop
jle
push
call
lret
rcl
mov
and
and
pop
outsb
push
shrb
xchg
jbe
in
push
insb
lret
bound
jecxz
pop
sahf
push
jmp
stos
push
lret
les
mov
mull
lds
in
jnp
cli
stos
adc
add
repz
sbb
sub
xor
mov
mov
test
dec
push
mov
mov
repnz
pop
in
ds
or
out
xlat
push
add
mov
xlat
outsb
mov
iret
pop
hlt
mov
iret
aam
rcrb
lock
gs
sub
shrb
inc
add
cs
movsl
cmp
sub
inc
fldenv
ficomps
rorb
jl
adc
outsb
test
xor
mov
sub
pop
jle
jo
pushf
cwtl
gs
lret
loop
in
lcall
movsb
cmp
ret
pop
sahf
mov
inc
fcmove
mov
in
pop
push
cmp
inc
aas
sbbl
xchg
mov
in
in
pop
push
lock
fsubp
inc
fs
jno
pushf
xor
cltd
add
and
cmp
ret
mov
inc
fidivl
pop
sub
sbb
sbb
ret
ss
int3
arpl
fldcw
or
or
and
mov
lods
subb
and
dec
jecxz
and
mov
sub
sbbb
add
mov
movsb
add
sub
add
int3
push
imul
cmpsb
lahf
jbe
adc
or
add
inc
sub
push
divb
cmpsb
cmc
adc
addb
cli
xchg
fisubrl
mov
pop
sbb
nop
mov
ret
clc
mov
mov
insb
add
out
xchg
fldl2t
or
lods
inc
repnz
test
dec
jecxz
jns
subb
sbbb
mov
in
hlt
mov
cvttps2pi
aas
dec
jmp
bound
mov
ljmp
pop
hlt
mov
lods
inc
lea
dec
loop
inc
icebp
mov
cmp
test
fdivr
xchg
iret
xchg
and
sub
cli
xchg
mov
arpl
push
jmp
fwait
mov
sti
xchg
xchg
frstor
test
sub
or
xchg
jg
jecxz
cmpsl
jle
xorl
sbb
jne
cltd
sub
mov
pop
jbe
pop
test
ret
hlt
dec
loopne
inc
push
add
test
lods
repnz
lds
cmc
call
jecxz
dec
in
fdivl
gs
loop
add
xchg
xor
sbb
and
lds
push
in
sub
jae
jl
add
iret
xor
cmpsb
arpl
scas
inc
and
aad
inc
int
jne
dec
loop
xchg
jmp
leave
push
jp
xchg
or
fidivrl
sub
imul
dec
loop
dec
shrl
fisubrs
adc
mov
testb
sub
cs
jl
lret
lahf
dec
loope
sub
sbbb
sbb
cmp
stc
xchg
cmpsb
cmp
push
dec
in
call
push
jge
les
xchg
les
lods
inc
inc
loope
mov
arpl
cwtd
xor
push
lea
mov
fistpll
adc
rcll
dec
test
xor
push
test
sub
xchg
mov
movsl
scas
std
rcrl
sub
add
jbe
and
push
ret
mov
in
test
mov
clc
sub
iret
cltd
adc
lds
ljmp
jbe
jle
outsb
add
pop
push
or
pusha
outsl
lods
inc
mov
lret
cld
dec
out
cmp
out
test
sti
xchg
lods
popa
mov
xchg
mov
mov
mov
inc
fistl
aam
cmc
pop
insl
add
adc
pop
xchg
mov
inc
aaa
pop
mov
mov
add
cld
xchg
xor
cmp
lahf
test
lods
adc
pop
inc
fmull
sub
out
dec
lret
js,pt
mov
insl
add
rcrl
pop
mov
dec
and
sub
jae
orl
xchg
fucomi
test
and
andl
lds
movsb
pop
notb
int3
lret
sub
fwait
sbb
dec
stos
mov
mov
push
mov
fwait
xor
dec
loope
inc
xchg
cmp
test
lods
mov
fisubrs
sub
es
lret
fiaddl
cmp
std
rclb
inc
fcoml
out
push
popf
loopne
loop
jo
cmp
rcrl
adcb
in
mov
mov
mov
stc
mov
roll
pop
sub
pop
dec
mov
mov
lods
lret
lods
inc
cld
mov
shll
pop
dec
loop
and
xchg
outsl
in
andl
mov
cld
add
sub
out
outsl
lret
popa
push
out
push
int3
mov
notl
inc
fisttpll
push
in
push
gs
xchg
inc
pop
repnz
cmp
stos
sbb
mov
sbb
xchg
pop
dec
in
shlb
pushf
pop
testb
push
popf
dec
inc
dec
out
bound
xchg
inc
pusha
divl
mov
ds
pop
scas
inc
cmp
ds
dec
filds
lods
fbstp
jae
imul
sub
jbe
lods
mov
out
into
cld
aas
sub
inc
fsubrs
test
push
roll
out
xchg
or
sti
inc
lahf
ss
sub
jnp
cmp
rorl
iret
sub
push
jg
push
data16
mov
movsl
stc
cwtl
das
sub
sahf
xor
je
jmp
ljmp
out
mov
pop
imulb
roll
inc
clc
jne
adc
es
roll
sbb
enter
mov
es
lret
add
xchg
int3
dec
jecxz
and
xlat
ret
mov
hlt
adc
clc
sbb
mov
push
out
mov
out
sahf
pop
mov
pop
ljmp
scas
xor
pop
scas
inc
mov
pop
cmpsl
dec
fwait
pop
or
loopne
xor
pop
inc
pop
ja
lea
pop
gs
xchg
ficoml
outsl
push
and
mov
stos
push
sbbl
iret
scas
cmpsb
cmp
mov
inc
fnstsw
jmp
inc
fcoml
js
pop
mov
nop
stos
xchg
fadd
lods
inc
mov
and
mov
lret
cmpsl
ds
into
xlat
outsb
shl
jle
repnz
in
adcb
call
lds
sar
xchg
repz
xchg
sbb
adc
jns
jns
out
test
daa
mov
pop
loopne
sub
mov
and
inc
mov
push
movsl
testb
mov
cmc
arpl
in
mov
fidivrl
insl
add
hlt
mov
push
lret
mov
shlb
jne
cmp
and
sub
fwait
or
cmpsb
mov
and
jge
rorb
incb
orb
mov
mov
mov
inc
fisubrs
inc
loopne
jbe
insl
add
mov
adc
jge
adc
repnz
cmpsl
je,pt
push
call
shl
ljmp
pop
xchg
sub
inc
jo
jbe
sub
sarb
mov
fisubs
rcl
insb
ret
addr16
hlt
test
out
addr16
sbb
adc
addr16
xchg
cs
jmp
in
xor
sbb
xor
xchg
sub
pusha
test
ljmp
jnp
nop
daa
push
andb
mov
or
or
and
dec
jecxz
addb
mov
push
popf
mov
xchg
or
xor
push
pusha
inc
fcoml
jle
mov
lcall
ret
adc
scas
inc
testl
fdiv
mov
add
je
rclb
lds
push
out
mov
sbbb
cmpsb
lock
mov
xacquire
and
sti
xchg
icebp
dec
and
xchg
mov
leave
call
push
out
in
inc
fcomp
cmp
jle
lock
xchg
jecxz
adcb
adc
pop
test
pop
scas
add
cs
pusha
pop
sub
mov
aam
ja
inc
and
bound
adc
adc
pop
mov
push
mov
scas
stc
jnp
outsb
lods
cld
lahf
ss
lds
imul
or
push
imulb
mov
std
sbbl
les
mov
push
cld
mov
out
jns
jle
sti
es
cmc
incl
scas
dec
out
mov
lcall
loopne
shll
ret
adc
test
pop
subb
popf
shlb
mov
out
add
inc
jmp
jno
imul
pop
cmp
mov
mov
into
add
adc
pop
dec
in
jg
clc
outsl
cmpsl
jmp
dec
adc
mov
xor
inc
out
xchg
xchg
into
jne
dec
shrl
loope
add
cmp
stos
cmp
mov
fistl
mov
rorb
add
pop
lock
jmp
aas
fisttpl
jne
aam
rolb
data16
shll
bound
dec
ja
imul
push
fwait
hlt
mov
mov
jp
addb
mov
shlb
loop
push
mov
sbb
fdivl
jae
mov
or
pop
cld
ret
mov
cli
dec
mov
stos
daa
arpl
xchg
es
xchg
cltd
mov
aam
iret
push
inc
pushf
inc
push
adc
mov
shrb
flds
test
xor
pusha
shrl
fcoml
stos
into
mov
xlat
outsb
jle
adc
insl
push
mov
xorl
arpl
ds
push
testb
bound
into
inc
mov
lods
inc
div
xchg
sub
or
into
jns
xor
jae
stos
inc
cli
fwait
aam
int
aaa
into
jle
jae
pop
xchg
test
add
stos
jno
push
in
cmpsb
pushf
pop
out
int
mov
outsl
sbb
dec
out
xor
xor
popf
xor
shlb
mov
decb
and
dec
xchg
and
xchg
push
mov
or
cmp
jge
adc
into
aas
cmp
mov
dec
mov
push
mov
ss
fstpl
push
xchg
mov
xchg
pop
cmp
lods
jae
xor
int
aam
adc
movb
rclb
outsb
add
imul
es
mov
xchg
mov
xlat
and
or
aas
lods
cmp
loop
fnstenv
xor
pop
scas
pushf
push
mov
mov
je
or
jge
dec
pop
jno
cwtl
xchg
pusha
neg
fs
aad
cmp
sub
mov
sbb
rcrl
add
clc
push
sbb
rcrl
add
sbb
std
and
nop
xor
sbb
cmp
cmp
popa
mov
pusha
xchg
daa
je
out
popf
mov
cmp
shl
movsb
sahf
xchg
push
fstl
and
scas
inc
xchg
mov
mov
and
sbb
ja
cmp
shrb
push
cmp
sti
and
scas
daa
dec
pop
and
adc
outsl
sti
ss
dec
cmp
sbb
jecxz
addl
pop
sbb
cmpsb
pop
leave
popa
xor
cmp
add
sbb
sbb
jo
cmp
dec
mov
lds
mov
push
ret
sbb
sbb
cwtl
hlt
cmp
fisubs
cmp
mov
dec
mov
lcall
pop
rcrl
std
mov
and
add
int3
push
ljmp
and
push
subl
pusha
mov
mov
add
test
push
std
sub
and
lea
ds
leave
sub
popf
pop
pop
xchg
sub
cmpsb
rolb
mov
inc
xor
cmp
pop
dec
push
and
or
jl
sub
add
and
int3
imul
loop
add
lcall
jb
daa
lret
test
dec
push
cmp
in
cld
mov
repnz
mov
xor
popa
cmpl
mov
pop
icebp
add
test
es
pop
sub
sub
lods
int3
mov
gs
fbstp
xchg
es
fcmovbe
insb
or
lods
inc
cmpsl
sub
lret
cli
adcb
mov
ljmp
outsl
or
push
shll
bnd
add
enter
gs
lret
es
push
in
sbbb
jns
sbb
int3
mov
push
les
rcrl
fdivl
jae
outsl
mov
fcomip
lea
pop
xor
lea
adc
arpl
xor
lods
add
xor
push
mov
outsl
adc
lods
je
testb
test
lods
pop
mov
adc
fistps
pusha
shlb
mov
fs
out
and
or
mov
fstp
outsl
cmovo
lods
jno
testb
adcl
pop
mov
adc
mov
clc
loope
fwait
xor
adcb
jl
push
scas
push
sahf
clc
int
cld
jg
lds
dec
popf
xor
sbb
mov
mov
test
cmc
fnstenv
mov
testl
int3
gs
adcl
or
jo
sub
inc
ffree
pop
mov
stos
mov
imul
mov
adc
arpl
pushf
and
mov
leave
pop
or
inc
shl
orl
add
add
mov
movsl
jle
mov
cld
mov
dec
aam
rclb
push
ljmp
jno
jns
cld
xchg
call
or
mov
in
lods
inc
pop
pop
cmp
lea
bound
push
out
fists
jbe
xor
pop
sahf
pop
push
xchg
sub
cmpsl
mov
shlb
frstor
push
dec
out
test
mov
popf
xor
repz
and
mov
fbstp
fnstenv
cwtl
data16
leave
jl
mov
rclb
cmp
xor
pop
or
je
mov
paddsw
mov
cwtl
pop
jae
je
ret
shrb
or
aad
imul
mov
xor
cmp
mov
mov
out
and
dec
ss
cltd
push
dec
lods
lock
fnstsw
push
notb
test
pop
in
jnp
imull
or
mov
push
int3
sub
sbb
sub
inc
loopne
pop
cltd
loopne
dec
stos
cmove
dec
jg
mov
or
aaa
add
sbb
jo
sbbl
daa
push
sbb
rolb
movsl
xchg
inc
push
rcrl
adc
rcrl
sbb
inc
scas
lods
dec
push
movsl
lock
fidivl
adc
inc
loop
xchg
adc
xor
insb
add
test
shlb
fcoms
or
inc
xchg
xor
fs
pusha
call
or
jg
fsubrs
popf
mov
int
pop
scas
and
scas
incl
bswap
or
and
les
xchg
sub
aam
dec
or
outsb
add
sub
arpl
lea
push
jp
subb
or
mulb
sub
push
fxch
popa
or
lods
movsb
sub
jle
lds
leave
testb
pop
push
jmp
sub
sub
psubd
xor
popf
add
lods
in
adc
arpl
imul
add
sbb
sbb
pop
insl
mov
clc
out
ret
pop
add
adc
jns
push
mov
jo
dec
mov
pop
jecxz
pop
mov
std
and
jns
in
mov
inc
mov
sub
ficoms
pop
pop
push
pop
negl
pop
inc
inc
or
or
xacquire
xor
imul
lods
sub
outsb
fucomip
mov
xchg
xchg
mov
xor
or
and
inc
sbb
xor
or
jo
sahf
mov
bound
mov
call
adc
test
jmp
push
icebp
xor
adc
fbstp
iret
ss
mov
and
jmp
insb
lea
sub
add
adc
stos
pop
lods
call
mov
in
xor
mov
mov
imul
bound
mov
push
fsubr
sub
cmp
ret
out
sarl
mov
repz
push
fdivl
popa
repz
xor
cld
popf
out
push
sub
rcl
addr16
sti
loopne
cmp
das
iret
lahf
rcrb
pop
pop
std
repnz
adc
mov
add
xchg
out
and
fmull
insl
sbb
mov
and
jno
xchg
cmpsb
int3
push
mov
popa
cmpsl
mov
les
adc
pop
push
popf
fwait
stos
loop
out
dec
mov
std
jmp
pop
imul
jp
cli
cs
dec
ss
pop
xchg
test
xorl
arpl
data16
push
fucom
jge
call
arpl
xchg
cmp
cwtl
sahf
inc
jbe
jne
inc
fs
xor
inc
sub
sub
int
movsl
cmpsl
popa
insl
dec
flds
push
xchg
sub
loop
ds
data16
std
cld
mov
dec
xor
dec
sbbb
or
xlat
xor
dec
call
push
xchg
xor
xor
or
mov
inc
mov
jo
pop
movsb
push
xchg
enter
xor
sti
pop
call
adc
push
call
les
ds
data16
lcall
aaa
popf
or
or
test
movsb
dec
xor
rorl
mov
sbb
add
xor
dec
lret
mov
ja
and
dec
std
adc
sub
add
scas
cmpsl
xor
repnz
mov
inc
or
cmp
jbe
out
adc
mov
or
mov
xor
cmp
or
cmp
jmp
mov
sarl
dec
shrl
sbb
xor
xor
das
and
jnp
xchg
inc
popa
push
pushl
pop
pop
loop
repz
jno
repz
push
xchg
push
in
pop
in
insb
repnz
mov
push
inc
loop
mov
or
push
aaa
add
int
scas
je
mov
xchg
add
mov
arpl
pusha
lods
dec
or
jle
hlt
imul
outsl
mov
aas
and
fcmove
dec
out
jne
pusha
cmpsb
lds
outsb
dec
dec
mov
int3
ret
xlat
cmpl
and
out
push
out
repz
sbb
adc
out
mov
dec
mov
cmp
mov
insl
enter
std
jns
mov
movsl
sub
dec
jge
push
sti
xchg
jo
mov
call
cld
sub
lea
aaa
mov
icebp
xchg
mov
fisubs
rolb
push
pusha
pusha
fwait
in
repz
movb
std
mov
xchg
out
xchg
sahf
cmp
mov
add
dec
out
fistpl
faddl
das
xor
push
mov
ret
ror
push
sbb
push
dec
inc
insb
iret
push
pop
pop
fwait
mov
push
jmp
adcb
std
pop
push
or
popf
popa
mov
movb
jmp
push
cld
iret
xor
test
sbb
mov
gs
outsl
in
push
jg
inc
popf
ret
in
imul
cwtl
push
cmpsb
push
imul
leave
loope
add
movsl
pop
push
jmp
mov
fidivrl
rcll
mov
dec
xchg
inc
sub
pop
push
jg
clc
add
div
sahf
pushf
mov
fldcw
testb
mov
mov
rorl
cmpsl
sahf
cmc
fwait
hlt
out
mov
jmp
jle
mov
popa
xchg
cmp
mov
bound
les
xor
pop
mov
mov
pop
xor
dec
pop
inc
push
push
insb
push
daa
fldt
std
repz
mov
mov
adc
loope
pop
inc
dec
ret
jne
mov
adc
mov
mov
cmpsl
xchg
gs
push
in
sbb
and
sahf
adcb
jne
mov
inc
add
push
sub
add
adc
inc
jno
xor
movsb
movsb
xor
std
lods
int
xlat
addr16
mov
adc
cmpsl
mov
dec
ret
xchg
mov
jl
add
xorb
lock
jns
into
subl
aas
insb
and
mov
cmp
mov
das
out
mov
test
inc
cs
or
cmpl
shll
jo
shlb
inc
cmp
arpl
inc
jbe
popa
pushf
xor
mov
cmp
xchg
stos
aam
jge
in
pop
xlat
dec
and
and
or
inc
bound
mov
dec
xchg
sub
cmp
jecxz
and
lahf
fildl
in
lods
fidivl
or
ja
pop
inc
fisttpl
mov
push
xor
jp
popa
daa
mov
cmp
out
sub
outsb
lret
mov
lret
cltd
xor
push
pop
test
sbb
xchg
xchg
sbb
add
cld
ficompl
in
imul
or
sbb
stos
fucomp
xor
mov
jl
imul
leave
pusha
stos
movb
push
dec
pop
icebp
cmpb
test
lret
sti
repz
sub
sbb
rclb
movsb
cmp
ret
ret
frndint
xchg
or
loope
dec
sub
mov
push
xchg
pushf
jle
mov
ficomps
int
dec
pop
out
xchg
mov
callw
push
call
outsl
add
xchg
das
jne
jp
push
aam
xor
mov
into
sbb
sahf
fcompl
mov
or
xchg
cmp
lret
pop
push
enter
or
sbb
fisubs
repz
pusha
out
sub
cmp
inc
fstl
pop
ret
xor
scas
loopne
loope
sbbb
add
xchg
xor
mov
mov
sub
rcr
jge
jae
cli
pop
lock
cli
xchg
add
push
jg
sbb
shlb
int
repz
and
inc
shrl
sbb
dec
cltd
out
xchg
outsb
xchg
sub
ret
hlt
ds
outsl
adc
dec
loopne
push
addr16
adc
adc
xor
mov
and
push
and
rorl
xor
adc
push
aas
cs
mov
sub
inc
dec
mulb
pop
dec
out
decl
daa
mov
popf
and
movzbl
rorb
xchg
shlb
xor
push
ja
loope
push
inc
fdivrl
addr16
repnz
inc
push
in
cs
aas
add
shll
inc
dec
push
lahf
arpl
xchg
leave
aaa
pop
push
mov
inc
push
mov
pop
jg
insb
xor
popf
stos
push
popf
fdivrl
and
adc
inc
dec
inc
flds
mov
lods
inc
jmp
or
bound
pop
jmp
push
lret
mov
sahf
loop
fsubrs
add
mov
jno
inc
fildl
test
stc
ftst
xor
adc
aaa
push
out
dec
sahf
xor
mov
fmull
daa
xor
jp
enter
push
lods
int3
out
pop
push
loop
fadd
push
shrb
imul
lock
fisubs
por
movsl
adc
sbb
fadd
or
mov
insl
stos
aad
iret
dec
xchg
sub
ret
sbb
push
xor
or
iret
data16
adc
shlb
test
movsb
ja
mov
lds
cmpsl
mov
std
xchg
xchg
xlat
scas
inc
leave
fbstp
ljmp
inc
std
les
in
dec
sbb
in
add
flds
movsl
cmc
mov
cmpsb
pusha
neg
cmp
arpl
lret
dec
loop
lods
inc
xchg
fstl
into
cmp
cltd
imul
and
punpcklwd
cmp
into
gs
inc
xchg
popa
clc
push
fwait
sbb
ficomps
mov
or
cmp
pop
sub
dec
pop
aas
inc
jo
jmp
adc
cmpsl
ds
push
pop
scas
xchg
adc
pop
pop
repnz
dec
jecxz
and
scas
mov
loopne
push
shlb
lds
pop
sahf
mov
xchg
js,pn
sbb
lods
or
lret
xchg
popf
push
push
cmp
enter
sub
xor
push
sub
mov
pop
stos
inc
mov
lods
inc
jno
mov
mov
mov
pop
and
pop
hlt
adc
xorl
andl
pop
pop
pop
mov
jl
int
sbb
xchg
sub
lock
sub
int3
push
jmp
daa
stos
mov
ja
jae
shrl
les
insl
mov
pop
push
fbstp
andb
das
adc
jb
leave
daa
mov
sbb
xchg
sub
insl
mov
loopne
jne
dec
mov
outsb
in
jp
cmp
insl
add
loopne
lcall
or
cmp
lahf
scas
je
out
rcrb
lret
imul
test
mov
test
fcomps
sub
sbb
cmp
xor
sahf
outsb
add
mov
into
mov
fdivl
sub
test
cltd
xor
add
inc
fsubr
inc
fldcw
jl
lock
or
xlat
outsb
test
aas
push
nop
or
mov
addr16
test
loop
cmpsl
leave
adc
mov
data16
int3
pop
ss
in
daa
sbb
jb
push
jmp
add
daa
scas
inc
cltd
push
jmp
sub
loopne
enter
aas
bound
xchg
pusha
pop
hlt
push
cmp
fs
pop
scas
dec
test
mul
add
mov
sub
sbb
std
xchg
cmp
pop
scas
stos
sarb
aad
inc
inc
fadds
sub
pop
hlt
enter
mov
daa
or
jns
xchg
sub
lcall
iret
sub
push
out
mov
dec
cmp
mov
sbb
iret
dec
in
xchg
out
fstl
clc
ret
out
or
popa
mov
pop
adc
add
sub
lods
push
les
int
cli
nop
daa
sbb
xor
enter
in
mov
or
ljmp
addps
andb
mov
mov
and
cmpsl
scas
adc
mov
fistpl
stos
jns
inc
fcmovnu
adc
dec
add
mov
sbb
fwait
xor
es
cwtl
mov
cwtl
sub
jbe
dec
adc
pop
pop
gs
dec
hlt
enter
outsl
push
fdivl
leave
or
out
pop
cmp
mov
scas
test
movsb
cmp
add
pop
int
lahf
mov
fisttps
sarb
into
scas
icebp
ret
pop
jecxz
int
pushf
add
push
insl
xchg
xsha1
cmpsb
or
ss
sub
xchg
mov
pop
testb
aaa
into
inc
lods
jns
mov
into
gs
pop
xchg
test
jae
sub
jl
mov
dec
imul
pop
icebp
xor
fsubrs
inc
test
mov
in
push
lahf
ss
xchg
outsl
shll
insb
pop
jg
icebp
stos
jns
cltd
push
pushf
xor
mov
std
and
push
push
xor
cli
xchg
sub
mov
into
and
mov
mov
push
ret
pop
jne
dec
loop
sbb
xchg
xor
fdivl
fistpl
or
movsl
push
lods
out
pop
hlt
xchg
mov
mov
into
and
es
aaa
dec
rclb
ret
pop
dec
cmp
pop
imul
pop
repnz
arpl
jle
dec
jo
cmp
jmp
cmp
add
push
mov
insb
lds
pop
out
lcall
stc
insl
pop
cmc
mov
sub
jge
fdivs
lret
loop
hlt
mov
int3
arpl
test
jl
pop
mov
and
push
into
pop
sar
push
aam
pop
repnz
mov
inc
je
sub
inc
lcall
es
mov
ret
mov
sahf
xor
lds
inc
fmuls
stc
cmp
sbb
xor
cmpsl
data16
ret
jge
incb
and
and
dec
fbld
testl
enter
lahf
jmp
pop
hlt
addr16
sbb
in
sbb
arpl
stc
push
mov
mov
out
fs
fnstcw
pop
divb
cld
xchg
enter
cmp
sub
fcmove
sub
add
mov
lret
das
adc
filds
movsb
or
add
mov
icebp
out
clc
mov
gs
dec
cmpsb
cmp
loop
xchg
sub
add
xor
and
pop
enter
sub
mov
mov
mov
push
pusha
movsl
cmp
inc
fnstenv
jae
push
gs
jecxz
nop
xchg
mull
xor
dec
in
ljmp
sbb
ds
fildll
rolb
shll
xor
loop
ja
jmp
sub
out
movsl
cmp
or
jns
sbbl
lcall
pop
sub
xchg
adc
xor
mov
insl
add
rcll
les
es
out
xlat
pop
lds
ljmp
or
int
out
in
sahf
adc
cmpxchg
shll
inc
xlat
mov
ret
mov
xor
pop
aad
pop
lock
sub
sub
sbbl
cld
pop
icebp
in
test
cli
xchg
xorb
mov
es
popf
xor
mov
and
mov
leave
pusha
fadds
or
call
and
add
lcall
jg
gs
cmp
add
imul
jl
lods
xchg
sub
inc
sbb
imul
mov
mov
in
outsb
mov
push
lret
bound
rclb
mov
ja
push
xchg
cwtl
xchg
sub
mov
loop
ss
mov
push
xchg
or
dec
xor
inc
dec
mov
mov
adc
out
loope
shrl
add
inc
jp
leave
pusha
lret
ss
lcall
in
in
mov
je
shll
test
rcrl
in
mov
cmp
or
shlb
adcb
cli
or
repnz
mov
fbstp
rcl
push
cltd
es
push
mov
adc
cmp
pop
push
out
lea
mov
ljmp
xchg
adc
mov
fidivs
leave
iret
testb
mov
rclb
outsb
add
dec
hlt
adc
adc
jns
fs
jns
sub
bound
fdivrs
push
mov
mov
imul
pop
ljmp
xchg
xchg
inc
and
pop
cltd
jb
sub
insb
add
int3
clc
xlat
ja
sbb
iret
add
mov
aam
jmp
pop
repnz
cmp
int
ja
push
test
mov
ficoml
out
add
outsb
repnz
mov
xchg
lods
xor
push
fwait
testb
shrb
push
mull
fmuls
add
mov
in
hlt
adc
out
inc
aam
test
push
sbbb
push
push
in
inc
loopne
insb
fdivrs
hlt
jl
in
outsl
out
leave
pop
jmp
loop
hlt
fisubrl
pop
lock
in
stos
sbb
jno
hlt
jb
mov
addb
cmp
ficoms
or
mov
sbb
aaa
js
adcb
cltd
mov
sbb
sti
xor
bound
ret
jp
mov
loopne
xor
scas
push
xchg
add
mov
pop
sbb
jg
xor
adc
adc
cwtl
roll
call
lods
pop
sahf
sti
pop
leave
enter
cwtl
enter
mov
dec
mov
mov
push
repz
sti
repnz
fisubrs
cmp
lahf
nop
repnz
loope
popa
mov
sarb
nop
cwtl
dec
rcrb
push
sarb
mov
cs
mov
pop
mov
inc
xor
test
xchg
cmp
pop
jle
sahf
sbb
sbb
add
es
test
push
sahf
cmp
iret
cmp
rcl
ret
insl
mov
xor
xor
std
sub
jbe
cmpsl
test
sub
sarb
in
fwait
lcall
mov
sbb
test
fnstenv
pop
sahf
xor
iret
jl
js
lock
jno
das
push
xlat
mov
mov
push
inc
xlat
inc
sbb
or
mov
scas
daa
cmp
lods
sbbb
int
mov
aaa
loop
jne
jnp
repz
lds
rorl
add
into
jns
sbbl
jp
and
inc
add
pusha
rorb
movsl
in
cmpl
mov
aad
fsubrs
mov
icebp
adc
enter
imul
or
imul
outsl
mov
out
nop
ret
adc
and
mov
sub
cmp
outsl
xchg
mov
les
cmpsb
cmp
sub
dec
sahf
xor
fldcw
mov
neg
jne
mov
aaa
mov
sbb
ret
pop
es
pop
sahf
mov
icebp
mov
loop
mov
cmp
enter
inc
mov
bound
pop
sub
popa
clc
lea
rclb
icebp
mov
mov
xor
dec
xchg
cmpb
mov
test
cli
call
mov
mov
movsl
mov
inc
sbb
xor
test
adc
jecxz
loope
sbb
lret
pop
out
pop
pusha
push
in
push
rdtsc
enter
jne
in
fstp
cmc
mov
repnz
jnp
das
insb
push
sbbl
mov
push
das
movb
test
lods
in
push
fidivrl
call
inc
out
aaa
jge
xchg
outsb
sbb
mov
leave
pop
addl
scas
das
pop
cmc
ja
cld
xchg
icebp
cwtl
or
push
dec
fs
push
mov
popf
loope
and
jge
push
add
xchg
inc
sub
xor
xor
jge
enter
pushf
decb
inc
popa
sbb
mov
loopne
pop
add
jae
mov
mov
xchg
sub
or
jg
adc
test
pusha
mull
int
mov
mov
lds
pop
or
jl
or
cld
lahf
ficomps
loope
inc
lds
sbb
fsubs
lret
inc
fstpt
stc
into
pop
adc
and
mov
jbe
pushl
out
lret
mov
sbb
mov
push
movsl
fcmovbe
sbbl
mov
daa
mov
sti
popf
adcb
loopne
xor
jne
in
mov
push
inc
test
adc
fimuls
int3
ja
xor
js
pop
dec
sub
jle,pt
cmp
pop
adc
outsl
addr16
aaa
fs
xchg
xchg
pop
js
pop
sbb
dec
popf
push
or
sub
xchg
pop
xorl
add
sbb
jle
lcall
cmp
stc
fstps
or
lret
ljmp
or
mov
xchg
in
adc
push
aaa
pop
xor
popa
pop
repnz
push
jle
sbb
aas
xor
jo
lahf
ss
xchg
xor
sub
sub
jle
lahf
ss
lahf
cmp
sbb
fbstp
cmp
std
xchg
push
popl
sub
dec
sub
jg
mov
leave
cld
xchg
loope
sub
jno
mov
ret
add
daa
push
sbbl
dec
mov
pop
shl
xchg
subb
lods
shrl
sar
mov
ret
sbb
cmpsl
ds
xchg
pop
fcom
imul
add
mov
xlat
outsb
loope
imul
cltd
call
add
daa
xchg
sub
dec
cmpsb
movsl
cmp
insb
cmp
cmp
int3
arpl
pop
lock
imul
cmp
ss
loop
pop
rcrl
sbb
dec
ss
test
ds
pop
int
nop
adc
lods
mov
xor
in
sbb
outsl
lods
push
jle
popf
into
mov
add
fnstenv
das
pop
xor
ret
and
bound
mov
push
js
pop
add
imul
jbe
mov
repnz
fsubrl
fimull
sbbb
sti
out
test
int
push
test
and
fdivl
inc
add
popa
lock
roll
add
and
inc
fnstenv
xor
cmp
push
out
mov
jg
mov
sub
adc
cld
xchg
fdivs
xor
sbb
stos
aas
cmc
sub
jge
push
inc
frstor
aas
mov
cltd
xor
rol
fdiv
xor
stc
mov
ret
out
fnstenv
adcb
pop
mov
sbbb
jns
mov
ffreep
pop
adc
pop
dec
fwait
mov
or
mov
test
data16
lods
out
gs
loopne
mov
jg
call
cmpsl
lock
rcrl
cmp
sbb
push
fdiv
mov
scas
add
cwtl
aas
or
lods
in
or
aaa
ljmp
cwtl
mov
enter
mov
repz
and
fs
add
sub
imul
scas
shll
add
and
das
mov
fucom
jl
add
cmp
shlb
jns
stc
jmp
cli
xchg
dec
jl
jg
or
ss
pop
sub
xchg
out
lea
mov
fwait
xor
xchg
cs
cs
popa
jecxz
outsb
shl
mov
inc
add
lds
stos
mov
inc
mov
sbb
dec
cld
xchg
lock
es
xor
dec
js
cmp
xchg
aam
out
movl
scas
add
fdivrs
aad
rcrb
ret
fwait
and
shl
sub
sbb
out
adc
jnp
test
pushf
int
f2xm1
scas
inc
fsqrt
scas
inc
sub
repz
mov
adc
ja
andb
add
inc
jg
cmp
mov
pusha
mov
lock
pop
cld
xchg
mov
les
jecxz
out
test
addr16
outsb
mov
loopne
jle
roll
or
loop
cmp
pop
mov
mov
test
fwait
or
mov
xor
push
lods
inc
cmpb
jo
or
add
pop
pusha
pop
into
gs
stc
mov
add
mov
loopne
std
je
cmpsl
gs
mulb
loop
mov
pop
shlb
mov
cmp
mov
lock
test
in
movsl
shrb
lock
lea
xor
push
pop
fistl
mov
adc
jmp
ljmp
sub
aaa
mov
fldl
fidivrs
gs
ret
push
fidivl
fdivl
subl
shrl
pop
icebp
orl
rclb
lret
sbb
jp
mov
outsb
fbld
jo
imul
ss
xor
mov
call
push
and
nop
daa
pop
inc
fdivl
inc
jnp
mov
mov
lcall
in
push
popf
sbb
imul
push
jae
mov
pop
and
loope
cli
shrl
shll
lds
rclb
les
sub
mov
dec
pushl
lret
inc
mov
std
hlt
xor
lahf
cli
jo
stc
dec
sarb
dec
adc
pop
mov
jmp
mov
sub
insb
pop
xor
mov
aaa
pusha
or
lock
mov
cmp
mov
xchg
mov
clc
out
push
lahf
pop
lcall
push
gs
scas
daa
dec
call
test
cmp
pop
das
jb
jae
xor
push
cmp
dec
popl
or
or
dec
pushf
addb
adc
pushw
in
popf
test
add
xchg
jb
jns
sbb
dec
push
fisubrl
insl
ja
cmp
into
cmp
push
in
scas
cmp
jb
iret
lahf
xchg
xor
ljmp
adc
or
xorb
pop
ds
in
dec
repnz
enter
xchg
jmp
imul
cltd
push
out
loope
call
jp
or
inc
fwait
lods
inc
std
gs
push
push
nop
daa
push
ja
dec
push
inc
cmc
cmp
test
cmp
out
aad
and
aad
xchg
sti
fwait
xor
dec
xchg
cs
in
pop
repz
in
xor
pop
out
xlat
outsb
mov
mov
ficomps
mov
xchg
dec
mov
add
dec
xchg
inc
xor
test
aaa
pusha
dec
mov
inc
push
pop
cmc
push
mov
scas
jmp
or
xchg
mov
pop
jmp
rcl
mov
movsb
push
lret
or
das
loopne
and
mov
inc
cld
add
xchg
pusha
cmpsb
adc
out
pop
xchg
or
cmp
jmp
inc
cld
lret
adc
jmp
jb
sti
sbb
pop
sbb
int3
pop
cmp
or
repnz
mov
mov
ss
mov
push
mov
push
sub
jg
outsb
mov
cmp
mov
xor
testb
and
testb
jmp
xchg
sub
pop
xchg
icebp
and
popa
and
push
ret
mov
rep
shlb
in
test
insb
mov
shlb
or
xor
sbb
outsl
outsb
negl
dec
cmp
cmp
stos
pusha
fcoml
xchg
rclw
adc
jne
jge
addl
aaa
or
xor
mov
test
or
lea
pop
pusha
and
test
les
sbb
cltd
lods
inc
or
lret
test
adc
lcall
and
push
jmp
les
or
js
fimuls
cmp
mov
es
mov
das
ss
cmpsl
pop
inc
xchg
dec
getsec
pushf
pop
jbe
fwait
xor
pop
lea
sub
inc
loope
add
int3
add
or
or
mov
ljmp
jge
push
gs
mov
and
mov
xor
xchg
lods
cmp
cmp
daa
or
lock
in
adc
sbb
imul
jle
mov
sbb
mov
and
gs
addr16
xorb
jmp
pop
leave
add
sub
and
ja
push
jns
cmove
xchg
popa
dec
lock
dec
out
xchg
lahf
subl
inc
adc
cwtl
push
jg
xchg
and
lods
loope
jno
cmc
insb
xchg
flds
out
ds
shr
push
out
xor
cltd
outsb
mov
mov
sbb
movsb
shll
jg
ljmp
mov
or
cmp
mov
mov
aad
arpl
out
mov
inc
push
cmp
aam
sub
lock
adc
dec
lcall
ss
mov
add
adc
ljmp
xor
cli
mov
xchg
js
or
inc
cmp
int3
arpl
movsb
ret
mov
fisttpl
adc
rclb
mov
and
xchg
sub
lea
dec
xchg
add
repnz
jbe
push
out
lods
add
pop
sbb
pop
sbb
and
mov
jle
jmp
ret
out
pop
hlt
sbb
sub
pop
and
add
lret
jle
inc
clc
movsb
xsha1
cmpsb
push
add
repz
jle
ret
roll
mov
cmp
lret
sub
jg
mov
outsb
aas
lahf
gs
scas
daa
inc
xchg
sub
mov
shll
xchg
icebp
enter
ret
xchg
lods
jecxz
jo
ja
movsl
call
cmp
mov
outsb
fsubrs
dec
cmp
xchg
movsl
iret
jno
mov
fndisi(8087
cli
clc
sub
test
add
gs
stos
repnz
pop
sar
sbb
sbb
pop
sub
cs
fldln2
adc
or
dec
loopne
sahf
adc
xor
cli
jecxz
mov
loope
scas
cmp
in
mov
pop
or
sbb
cld
loop
fcoms
lods
or
shll
jl
mov
loopne
dec
adc
fdivp
push
ja
add
adc
clc
scas
arpl
push
mov
mov
adc
push
or
notl
dec
imul
cli
minps
pop
xor
hlt
ds
sbb
out
add
xor
or
cmpsl
lds
sub
or
mov
loopne
xor
fmuls
add
mov
pop
and
dec
es
add
aaa
inc
nop
jmp
cmp
shlb
push
jmp
pop
jmp
sahf
cmp
iret
pop
imul
daa
cli
pop
sahf
xlat
cltd
and
add
je
addl
je
inc
dec
mov
and
sahf
xor
cltd
fcmovbe
pop
add
push
inc
sub
iret
mov
mov
shlb
les
mov
mov
pop
dec
mov
jg
mov
lahf
leave
mov
stos
dec
in
cmpl
mov
sub
out
outsb
div
add
jmp
ja
dec
dec
jb
xchg
fwait
ja
out
test
out
push
mov
push
inc
sti
jl
add
jns
pop
or
das
out
or
negl
sbb
enter
fbstp
into
repz
inc
iret
xchg
test
mov
mov
das
sbb
lcall
or
xchg
jl
mov
dec
mov
lret
lods
add
sbb
mov
mov
jno
pop
mov
fdivr
test
test
mov
add
dec
lahf
sub
orl
cltd
lahf
pop
mov
pop
dec
push
jb
mov
dec
xchg
push
aas
mov
sub
push
sarb
sub
xor
adc
fstps
outsb
jo
mov
mov
into
push
call
mov
nop
sbb
and
std
xlat
es
int3
daa
dec
idivb
mov
jmp
imul
daa
repnz
outsb
fmul
bound
test
outsl
mov
insl
pop
fcomp
outsl
mov
mov
add
ret
mov
adc
dec
mov
jb
pushf
mov
pop
fmull
sti
xor
pop
dec
stc
pushf
push
in
addl
xchg
inc
cltd
outsl
mov
push
xchg
jge
jno
loop
mov
mov
push
add
lods
arpl
add
dec
dec
xchg
lds
cmpsb
les
cmp
and
pop
xchg
test
sbbb
lea
shrb
xchg
sub
sahf
bound
stc
nop
pop
dec
mov
mov
xchg
int3
in
repz
push
push
jmp
sub
pop
sbb
test
mov
mov
aam
xor
das
sub
sbb
adc
lret
ret
or
xchg
cmp
inc
fdivl
push
xchg
lods
add
pop
clc
mov
dec
out
adc
cld
ficomps
rorl
fwait
lret
mov
adc
add
mov
and
push
dec
jae
adc
ja
test
xchg
mov
sbb
cs
cltd
lret
jmp
test
mov
lods
andb
call
idiv
lret
bound
inc
insl
add
dec
mov
push
call
or
push
scas
decb
mov
push
and
mov
fistpl
ljmp
ret
fdivrp
xchg
sti
test
jae
sbb
aaa
repz
dec
clc
dec
adc
jae
nop
das
les
mov
icebp
add
ds
fisubs
adc
mov
cmpsb
sbb
jecxz
leave
dec
les
push
mov
lcall
inc
jb
xchg
popa
je
movsl
mov
pushf
pusha
hlt
adc
lds
cld
xchg
addb
js
and
jp
and
adc
mov
fsub
dec
mov
hlt
movsb
push
adc
pop
push
inc
adc
xor
mov
cmp
aaa
xchg
cld
and
or
fdivl
sub
pop
js
fwait
lret
xor
mov
test
sbb
mov
mov
out
jge
dec
mov
out
in
mov
push
pop
rcrl
mov
push
pop
ljmp
unpckhps
pop
inc
insl
shll
inc
adc
pop
xchg
mov
in
sub
xor
dec
test
lret
bound
insl
mov
jmp
jae
and
pop
add
ss
mov
stos
ss
inc
or
push
rorb
sbb
xchg
push
jae
andb
sub
in
rcrb
cmp
rolb
daa
jne
and
push
mov
mov
push
mov
jg
xchg
mov
xor
fldenv
dec
les
sahf
imull
inc
mov
push
ret
int
jo
pop
mov
jbe
dec
fs
push
sub
lahf
std
inc
ret
add
movsl
xor
insl
idivb
sub
mov
dec
lahf
movsl
jmp
jmp
insl
pop
loopne
cmp
mov
mov
test
mov
push
dec
pop
or
mov
and
or
imul
popa
jle
aas
fdivl
inc
js
sbb
jne
jnp
insb
popa
mov
jb
sarl
pop
arpl
cltd
push
nop
push
sbbb
add
pop
pop
lds
sbb
mov
out
sbb
jg
cmc
nop
daa
sbb
sti
push
aas
arpl
cs
dec
jno
in
and
scas
dec
jae
out
xor
and
push
adc
aaa
jmp
aaa
adc
outsb
dec
sbb
sub
clc
lret
cld
sbb
imul
mov
inc
stc
fucomp
loopne
std
or
icebp
outsb
or
jb
jg
or
stos
popa
out
das
xrelease
cmp
xor
push
inc
inc
loope
push
insb
sti
fld
mov
jmp
mov
inc
inc
out
in
and
jle
sarl
sub
leave
pop
inc
xchg
dec
lods
dec
outsl
push
jge
mov
xchg
mov
push
fidivrl
dec
xchg
xor
push
cmpsb
inc
push
inc
mov
mov
out
arpl
and
jmp
bound
push
dec
cmp
sbb
rorb
mov
mov
push
and
jo
and
mov
adc
lret
pop
mov
sarb
jp
mov
inc
int
repz
pop
icebp
pusha
stos
pop
adc
lea
insl
adcb
jl
test
rolb
nop
cli
mov
ror
or
mov
cltd
mov
push
gs
ret
cwtl
or
inc
dec
jbe
sahf
call
inc
fnsave
adc
lock
pop
adc
test
shrb
popf
aaa
mov
outsl
lcall
rcll
adcl
xor
scas
test
or
sub
xchg
je
mov
icebp
sub
aam
jge
sti
ret
outsl
mov
scas
add
imul
ret
or
ret
dec
jmp
cli
popa
sub
test
popa
jle
loop
cltd
or
or
cmp
sbb
aad
das
js
adc
dec
sbb
int3
jmp
daa
mov
repnz
pop
mov
les
xchg
jp
xlat
mov
in
fidivs
roll
addr16
sub
sbb
inc
outsb
fmuls
or
push
sub
cli
dec
dec
sbb
movsl
xchg
pop
shll
sbb
sahf
sbb
sub
mov
rcrl
ret
out
cmpsl
shrb
xor
cmp
mov
add
xor
xor
xchg
std
pop
fwait
aam
jno
cmc
and
int3
jmp
dec
sub
jno
jns
mov
or
notl
sbb
dec
popa
jno
cmp
popa
push
imul
lahf
int
nop
gs
fnsave
out
mov
fadd
cmpsl
idivb
clc
dec
icebp
adc
je
jge
xchg
daa
mov
mov
and
mov
inc
les
xchg
push
mov
rcrb
lea
es
cmp
sahf
loopne
or
int3
mov
sbb
cmp
jmp
mov
mov
addr16
jle
xor
pusha
idivl
aam
movsl
fistpll
fsubrs
pusha
ja
movsb
std
xchg
sbb
cmpsl
mov
scas
adc
mull
xchg
aam
mov
pop
loop
pop
dec
jo
ds
xchg
shl
scas
mov
pop
jmp
sbb
outsb
dec
mov
cmp
xchg
mov
test
dec
fs
gs
inc
or
sub
imul
in
cwtl
in
sub
shlb
inc
roll
xor
cmp
icebp
cwtl
xchg
out
lds
fsts
or
or
fsubs
dec
lcall
outsb
jmp
fbld
mov
inc
jb
pop
insl
mov
cmp
mov
xchg
cmc
add
push
scas
jg
xor
push
mov
lret
xor
or
sub
sbb
add
xchg
sbb
shrb
cwtl
mov
stos
ljmp
movsb
cmc
sbb
cltd
rol
xchg
cli
addr16
lods
psubw
les
sbb
in
jbe
mov
pushl
jg
sbb
mov
loope
xchg
sbb
add
ljmp
adc
lds
mov
in
sub
fsts
dec
int
enter
pop
xchg
loopne
sahf
adcb
adc
xchg
or
data16
test
aaa
mov
and
subb
add
test
mov
xchg
out
cmp
jmp
test
jmp
inc
cwtl
das
jbe
dec
inc
pushf
scas
xor
xor
mov
and
xchg
imul
das
addr16
frstor
mov
pop
arpl
loope
cmpsl
dec
add
bound
mov
xchg
daa
fdivl
out
je,pt
push
xchg
mov
das
test
mov
and
hlt
adc
mov
mov
adc
and
pop
push
pop
imull
xor
or
sub
pushfw
mov
int
sti
lret
lods
pop
or
mov
mov
jmp
icebp
sbb
xor
mov
mov
jo
sbb
aad
jno
push
adc
lods
cmc
daa
or
jbe
fimuls
xchg
std
scas
scas
add
and
rcrb
lahf
push
call
imul
inc
shll
stc
jl
xor
sbb
ds
ss
nop
cmp
push
outsb
adc
dec
mov
sahf
fdivrl
scas
in
mov
cmc
stos
sbb
fstps
std
lock
jo
lcall
mov
cmp
es
imul
inc
or
mov
pop
pop
cmp
mov
dec
jmp
ret
outsl
testb
test
and
repnz
in
stos
mov
fcom
rcrb
adc
fnstcw
fstps
jmp
loop,pn
bound
icebp
cwtl
dec
push
in
xchg
loope
cld
jmp
imul
outsb
imul
jne
jno
mov
dec
out
jns
jmp
xor
sub
xchg
popf
jg
iret
mov
into
push
xchg
inc
dec
popa
pop
cli
xchg
out
adcb
and
fistpll
pop
cmp
sub
mov
mov
out
jbe
je
cmp
into
orl
lea
xor
add
je
adcl
push
sbb
testl
fsub
ret
repz
jg
adc
sahf
ret
pop
mov
mov
pop
mov
jle
pop
pop
arpl
xchg
jnp
lods
stc
inc
cmp
popf
hlt
inc
rorb
jns
aad
adc
or
sbb
cmp
and
shlb
jae
mov
in
cmpsl
inc
xlat
mov
bound
lret
lds
mov
mov
mov
cmpb
push
cltd
test
outsb
les
hlt
and
inc
and
dec
gs
xchg
xchg
sbb
lock
cltd
stos
inc
lret
icebp
xchg
stc
das
imul
adc
push
movsl
xchg
fsts
test
data16
mov
imul
outsb
cmp
shl
mov
and
sti
mov
push
outsl
scas
call
inc
and
stos
pop
jne
fs
mov
xchg
shlb
pop
pop
enter
mov
jns
mov
pusha
lcall
dec
imul
ret
or
test
fsubrl
test
popa
mov
je
test
lahf
xchg
sub
out
out
add
push
cld
adc
ds
pop
mov
cwtl
shrl
in
repz
fisubs
and
jo
inc
data16
jae
mov
int
pop
mov
lea
in
sbb
mov
testl
fisubrs
lcall
arpl
mov
dec
in
jge
pop
outsl
and
xchg
pop
sub
dec
mov
jl
imul
loope
push
adc
fnstenv
adc
mov
ficoml
pop
jmp
or
jns
jle
call
mov
outsl
push
add
lea
adc
inc
mov
xchg
ss
nop
stos
inc
test
or
xor
pop
movsl
jg
xor
push
std
jl
pop
outsb
adc
insl
hlt
dec
lock
xchg
pusha
xchg
test
clc
jb
scas
adc
jno
dec
pop
outsl
jge
sub
mov
sub
mov
mov
mov
adc
mov
aad
cmp
jp
lret
jbe
icebp
mov
in
ret
xor
mov
pop
pop
cmpsb
int
pop
insb
sti
testb
mov
mov
js
lret
rcrl
pop
pop
xchg
rol
popa
xor
adc
mov
xchg
int3
dec
loope
mov
mov
dec
cltd
sub
sbb
mul
xorl
les
push
stos
cmp
idivb
aad
sbb
loope
cmp
cmp
inc
mov
sub
xchg
xchg
clc
or
fadds
or
push
imul
add
daa
sti
mov
pop
mov
inc
xor
popf
jg
into
data16
adc
in
jo
mov
ret
or
dec
arpl
iret
lret
cmp
fldenv
pop
jecxz
ds
cmpsb
inc
pop
je
hlt
and
out
popf
and
popf
repz
loopne
adc
cwtl
data16
jbe
pop
inc
fsubr
test
lahf
or
das
cmp
out
cmp
daa
dec
pop
stos
push
add
in
iret
xchg
stos
add
cmp
and
mov
pop
jmp
dec
inc
xor
outsl
mov
or
stos
gs
mov
xor
jmp
and
cli
or
xchg
cmpsb
jns
xor
pusha
out
jle
subl
mov
fisttps
adc
insl
add
loope
xorb
test
fiaddl
mov
push
mov
mov
cli
xchg
mov
and
inc
pop
sbb
xchg
test
mov
lds
adc
sbb
jno
pushf
add
fisubs
lds
xor
mov
loope
jle
jmp
in
int3
mov
adc
sbb
lods
hlt
push
es
mov
mov
and
pop
mov
and
sub
push
inc
out
icebp
out
dec
add
mov
push
jb
mov
xor
inc
fsubrp
leave
hlt
xchg
fcmovnu
inc
add
lods
iret
jecxz
shrl
pushl
mov
cmp
pop
mov
test
aam
pop
push
push
ficompl
add
into
stos
ss
in
leave
rolb
or
in
mul
gs
cmp
mov
mov
push
xchg
es
inc
ret
cmp
faddp
add
mov
negb
mov
fld
outsl
dec
orb
test
pushf
and
xchg
fs
lods
push
xor
test
ret
pop
test
mov
pop
test
jge
stos
es
adc
cltd
int
push
incl
xor
ja
in
cmpsb
and
sub
jb
add
inc
inc
push
add
inc
and
mov
jo
xor
cmpsl
int3
lret
addr16
in
push
es
fimuls
aam
push
inc
xchg
pop
movsb
insb
push
sbb
pop
fwait
loop
and
push
in
fimull
mov
int3
shll
add
call
cmp
aam
and
pop
fmull
lods
popa
negl
or
dec
add
aas
popa
sahf
daa
aaa
cmpsb
xor
cs
jo
pushf
sub
movb
inc
inc
mov
pop
popa
orb
or
xlat
mov
sarl
fsubrs
dec
pop
jae
mov
or
popa
mov
in
pop
mov
mov
and
mov
mov
mov
cmpsb
adc
pop
adc
rep
arpl
popa
push
leave
jbe
loope
test
dec
pop
inc
adc
sub
mov
aaa
mov
push
jle
dec
ret
cmpsl
push
in
out
and
orb
outsl
shll
nop
sbb
imul
rclb
popf
pop
pusha
stos
pop
push
sbb
sub
cmp
sbb
sbbl
cltd
sbb
mov
push
and
mov
pop
fs
fidivl
lea
push
or
jl
outsl
mov
mov
mov
push
shll
ja
push
pop
aas
adc
mov
js
ret
lea
and
or
lods
ja
rorl
jns
ficompl
inc
mov
xor
ret
jae
sbb
es
push
iret
adc
add
ret
popf
sbb
test
aas
mov
lea
push
jbe
dec
shlb
adc
xor
fisubrs
or
mov
or
jp
and
mov
aad
mov
in
stos
dec
ret
shrl
mov
or
cwtl
jle
sbb
in
push
inc
pushf
push
in
les
inc
cmpsl
sub
mov
cltd
js
sti
push
leave
mov
xor
lods
xchg
jo
add
add
das
fs
dec
add
bt
fcomps
sub
aaa
mov
sti
sbbb
mov
sarb
mov
push
add
or
lock
adc
push
outsl
push
push
inc
lea
fwait
bound
jo
adc
data16
repnz
and
pop
je
pop
xor
mov
in
dec
lds
imull
inc
cli
adc
sbb
xchg
mov
mov
or
dec
xchg
xor
into
dec
fbld
inc
or
sti
dec
data16
outsl
push
lds
sub
dec
arpl
adc
xor
fildl
int3
cmp
in
push
shl
popl
ficomps
pop
je
mov
aaa
sarb
pop
das
pop
ss
scas
sti
addr16
adc
js
xor
mov
jo
sub
int3
jbe
and
in
mov
sbb
ret
cmp
sahf
pop
out
rcrb
dec
shll
mov
aaa
js
mov
aad
mull
ret
mov
push
popf
fs
repz
fwait
cmpsl
or
cmpsl
sbb
cmp
fildll
roll
and
xchg
ljmp
int
imul
in
or
in
mov
xchg
pop
int3
add
stc
mov
daa
sti
dec
loop
dec
sbb
rorl
icebp
or
repnz
push
push
clc
xchg
jecxz
shlb
mov
cmpsb
jns
mov
lret
les
outsb
sarl
jg
stos
inc
test
jne
hlt
mov
pop
data16
mov
arpl
ret
or
mov
mov
lret
push
cltd
pop
cmp
daa
aas
xchg
aad
repnz
push
cld
imul
inc
incl
pop
xchg
dec
or
jge
jge
ljmp
ja
testl
popa
test
mov
add
mov
loopne
rcrb
mov
test
push
call
pop
cmp
fidivrs
adc
into
enter
push
push
hlt
xlat
jmp
orl
or
dec
mov
xor
incb
mov
inc
fldenv
jl
xchg
xor
mov
cmpsb
ja
xchg
mov
fcmovb
push
fnstcw
frstor
push
inc
pop
cmc
and
ss
sahf
mov
fwait
mov
mov
pop
dec
adc
inc
loop
cmp
pop
ss
xor
xchg
rorb
add
xor
loopne
dec
iret
mov
add
fwait
xor
scas
mov
xor
rorb
dec
adc
ret
fs
int3
pop
loopne
inc
inc
lods
sar
call
mov
mov
add
repnz
cmp
cmp
adc
xor
scas
adcb
adc
jae
mov
ret
or
mov
sbb
or
sbbl
mov
scas
add
test
shll
jg
icebp
int
lods
or
or
dec
addr16
mov
insl
xor
jl
xchg
insl
jg
xchg
mov
in
rorl
jb
dec
mov
cmp
xlat
scas
pusha
fwait
movsl
mov
sub
clc
bound
mov
dec
push
cld
and
jmp
out
lods
mov
sbb
addr16
ret
jmp
mov
in
or
lret
fdivrl
pop
repnz
mov
add
dec
push
pop
push
addb
movl
in
fdivr
xchg
or
out
leave
dec
xchg
sub
imul
mov
js
push
ftst
jnp
arpl
not
sub
fimull
ja
push
pop
push
in
mov
movsb
push
in
and
mov
sarl
cld
or
in
push
mov
or
inc
pop
push
push
les
fcomps
mov
pop
mov
push
push
cmp
jmp
push
shr
sub
mov
pop
mov
orb
jecxz
or
std
cmp
mov
in
xchg
and
mov
cs
inc
mull
add
bound
stos
rcll
push
mov
call
cwtl
add
inc
js
aaa
stos
arpl
insl
cmp
addr16
mov
mov
hlt
or
xlat
stos
scas
xchg
sub
or
add
mov
dec
jecxz
inc
cli
or
adc
rol
inc
or
nop
daa
out
mov
in
xor
push
test
mov
cmp
fnsave
fs
pop
aam
xchg
push
inc
push
sahf
dec
mov
and
mov
push
int
les
adc
stos
sti
jg
sub
lret
xchg
xor
xlat
data16
orb
dec
je
jl
dec
or
xchg
add
in
dec
push
in
out
push
data16
push
pop
and
push
sub
call
loop
addr16
jg
shrl
inc
subl
cmc
mov
incl
jle
in
xor
loop
add
in
mov
icebp
inc
cmp
cmp
xor
pop
fdivr
cmp
sub
jns
jno
imulb
mov
shl
repz
inc
pop
lea
filds
or
push
jl
push
imul
xlat
jmp
and
fstpt
inc
stc
repz
fs
cwtl
jl
hlt
stos
subb
mov
fbstp
aaa
ljmp
xor
jne
out
mov
xchg
inc
mov
sbb
push
call
outsl
inc
int3
hlt
aam
mov
mov
scas
mov
rcrl
mov
jp
ret
ljmp
mov
push
pop
mov
push
add
xchg
add
fistl
jnp
inc
jp
add
xchg
add
mov
xorl
inc
fwait
insb
leave
cli
inc
out
fbstp
mov
fists
mov
mov
repz
or
jp
sahf
lods
pop
pop
or
mov
test
insb
fcmovne
push
out
test
rcrb
outsb
sub
pop
scas
ret
lret
shlb
cld
lods
loop
nop
sbb
mov
cmp
xchg
mov
pop
loop
dec
jecxz
pop
addr16
repz
pushf
imul
movsl
mov
xor
xor
xchg
iret
mov
jnp
sub
minps
in
pop
sarb
in
in
push
add
xchg
jne
scas
loopne
or
fsubs
sub
out
jae
je
int3
gs
cmp
mov
cli
sbb
cld
pop
int3
fidivs
ja
fldl
add
inc
into
je
jns
mov
sbb
mov
mov
mov
jns
push
inc
mov
mull
es
test
lret
arpl
sbb
push
mov
ss
push
or
xchg
pop
add
pop
out
dec
insl
inc
pop
iret
jecxz
fistl
sbb
push
mov
xchg
fistl
cmpsb
push
leave
imul
sub
gs
or
push
fistps
sbbl
hlt
int
sub
scas
pop
cmc
xor
int3
jne
loop
pop
cwtl
or
dec
inc
xchg
mov
dec
movsl
push
xchg
jne
divl
cmp
adc
mov
pop
inc
lahf
pop
ficoms
xchg
mov
loopne
xor
stos
dec
ja
ja
xchg
sub
cmp
cmp
and
addr16
push
sbb
pop
sub
lret
dec
xor
pop
mov
add
mov
iret
fistl
and
push
xchg
add
and
test
or
and
sbb
outsl
test
out
inc
jmp
dec
add
aas
sbb
scas
mov
aaa
insb
sbbb
in
test
gs
lcall
and
sbb
push
mov
push
xor
push
cli
lret
jns
lods
push
jno
or
scas
xor
inc
outsl
push
ss
or
cmp
and
mov
lahf
call
mov
ret
xlat
add
daa
arpl
adc
jp
scas
push
into
arpl
xchg
out
stc
nop
and
inc
enter
push
xor
lods
popa
or
jno
filds
sbb
push
and
ret
and
cmpsl
insl
add
dec
shrl
test
into
add
sub
insb
mov
cli
inc
sub
dec
ds
jo
mov
xorl
fsubrs
lds
push
test
adc
aaa
push
movsl
add
xchg
jno
add
xchg
xor
cmp
dec
out
test
dec
push
add
xor
mov
jo
inc
jns
fstpl
popf
pop
cmpsb
lods
mov
fwait
mov
xorb
ret
inc
mull
data16
inc
fcompl
xchg
sub
lds
xor
dec
hlt
clc
daa
push
loopne
or
mov
jle
xor
inc
push
lods
xor
xchg
push
int
ret
lds
cmovno
cld
xor
or
lcall
filds
mov
add
mov
out
insb
shrd
lods
outsl
aas
push
push
or
cmpsb
pop
cmpb
push
mov
sbb
popa
mov
pop
pusha
jbe
pop
push
fwait
aas
imul
push
mov
ss
sbb
inc
out
mov
adcl
push
ret
pop
gs
leave
fistl
shll
movsb
out
std
fcoml
pop
test
mov
push
pop
mov
pushf
sub
xchg
mov
enter
push
jmp
clc
aas
or
cmp
in
add
popf
bound
and
pop
pop
flds
fstl
ret
dec
loopne
jns
sub
shll
sbbb
xchg
mov
call
es
rolb
dec
das
rcrb
test
push
jnp
xchg
sub
enter
je
sbb
xlat
mov
push
xor
daa
popf
xchg
repnz
outsb
jl
cmp
stos
sub
mov
xor
adc
cmp
out
stos
mov
aas
imul
rorb
fldl
loopne
jmp
ficoms
outsb
mov
mov
push
mov
shrl
loope
xchg
add
mov
xor
fstpl
mov
bound
cltd
jnp
or
pushf
jp
into
xchg
push
ficoms
mov
out
ds
fisubs
lret
mov
xor
aad
jecxz
inc
testb
cmp
push
sub
inc
fld
pop
inc
hlt
mov
loope
fsts
or
add
test
jns
and
outsb
in
add
adc
ficompl
lods
sbb
inc
jge
je,pt
jno
loopne
insl
xchg
xchg
sub
push
xchg
sbb
into
pop
lock
in
jmp
out
les
cmp
testl
loop
mov
push
movsl
mov
xchg
pop
xchg
lods
incl
fwait
scas
hlt
lock
and
aaa
into
mov
xchg
add
dec
mov
push
je
jmp
scas
adc
jge
and
decl
pop
insl
sbb
mov
ret
push
imul
aas
in
push
dec
jecxz
xchg
cmp
and
mov
aaa
push
sbb
ja
out
popa
aad
jle
je
rclb
lods
dec
add
jb
inc
movsb
xchg
test
add
sub
adc
fs
adc
ret
int
jbe,pn
sarb
xchg
mov
pop
pop
imul
jb
repz
pushf
cli
loop
mov
scas
cmp
pop
in
int
mov
cltd
out
mov
cltd
mov
or
cmp
cmc
shl
or
lds
mov
shrl
in
leave
add
jg
pop
xchg
mov
or
das
scas
rcr
cmp
jecxz
int
sbb
roll
xchg
ds
inc
and
mov
addb
fsubl
pop
dec
cmc
xor
push
les
xchg
hlt
mov
xor
js
mov
stos
mov
addb
fidivrl
and
es
ljmp
cmp
push
insl
xor
cmp
push
mov
push
sar
dec
xchg
pop
sub
pop
adc
stos
inc
inc
cmc
test
push
and
sbb
lock
insl
loop
popf
test
popf
scas
adcl
pop
scas
loopne
loopne
pop
adc
mov
xor
cli
rcrl
xchg
ljmp
fmull
mov
fisubs
daa
xchg
xor
push
out
push
sbb
inc
outsl
sub
jmp
mov
shll
add
sarl
and
jns
cmp
popa
sti
cmp
adc
into
sbb
imulb
lret
icebp
sbb
rol
push
lods
xor
push
xor
mov
sub
stos
push
hlt
fwait
mov
mov
daa
clc
daa
push
cmp
shlb
test
dec
lahf
cmpsb
shrl
xor
mov
aad
cmp
push
ds
mov
sub
scas
inc
test
jmp
inc
lds
and
sarb
inc
lds
out
vmovupd
movsb
xchg
jl
jns
enter
sbb
repnz
movsb
cmp
jg
cs
leave
fs
bndstx
inc
dec
mov
data16
dec
adc
fistps
adc
sahf
cmp
orl
sub
pusha
xor
ss
xor
inc
movsb
repnz
pusha
pop
push
jb
add
int
xchg
jb
es
cmp
cs
lods
push
addl
int
pop
mov
push
inc
sti
decl
mov
fidivl
add
fstpl
ds
dec
pop
push
jl
xor
cwtl
cmp
lods
add
int
leave
lock
sbb
out
inc
std
fwait
aaa
mov
push
popf
mov
mov
sub
in
add
xchg
ror
push
sub
aaa
into
push
pop
xchg
dec
mov
push
in
in
pop
test
addr16
btr
sbb
xchg
aaa
into
adc
jns
fdivrs
outsl
imul
dec
stos
sub
xchg
jle
negl
xchg
ret
sbb
pop
jecxz
and
bnd
imul
std
pop
gs
sub
sub
into
cmpsl
clc
shrl
leave
int3
sub
lds
or
adc
mov
xchg
fsts
xor
xchg
or
imul
adc
xchg
and
shl
movsb
and
cmp
scas
insl
inc
dec
test
sub
nop
mov
mov
aaa
inc
adc
pop
leave
jae
shr
je
mov
outsl
repnz
stos
dec
cmp
dec
pop
nop
jle
jmp
xor
fidivrl
or
push
mov
pop
inc
adcl
leave
loopne
xor
mov
xabort
jbe
xchg
xchg
jge
rcrl
jb
dec
popf
rep
pop
fsubs
sbb
mov
gs
daa
adc
push
stos
cmp
cmp
push
ret
add
xchg
push
pop
jp
mov
lahf
xchg
lock
dec
scas
in
enter
repz
jmp
add
test
cmp
fstps
mov
push
mov
xchg
add
mov
adc
pop
lods
out
out
lods
ret
loope
clc
int
push
aad
dec
mov
movsb
pop
cwtl
and
pop
push
adc
daa
iret
mov
dec
in
stc
sbb
scas
iret
push
addl
sarl
clc
loope
push
push
addr16
mov
out
out
cld
aad
dec
mov
jl
lock
aad
inc
sahf
xor
inc
imul
xlat
add
sbb
arpl
and
adc
ror
cwtl
js
inc
mov
jle
push
dec
rorb
add
icebp
or
mov
cltd
rcr
push
ret
add
dec
rcrb
jae
mov
xchg
mov
cs
or
jae
sub
dec
jmp
out
ret
jle
adc
sub
leave
das
or
out
outsb
sub
sub
and
movsl
mov
sbb
lret
sbb
call
lcall
popa
int
xchg
call
test
jl
xlat
insl
fnstcw
jge
jmp
fbld
out
xchg
push
adc
out
jmp
lcall
xor
outsb
mov
pop
das
insb
xchg
dec
pop
ret
or
sub
call
rcrb
mov
ret
fcomip
sbbb
mov
inc
xor
sub
addr16
mov
cwtl
dec
sbbl
mov
jbe
js
lcall
add
or
mov
mov
mov
cli
pushf
aam
mov
enter
cmp
out
vminss
push
sub
repnz
mov
mov
push
xchg
pop
lcall
cltd
dec
outsb
fcompl
fnsave
add
into
mov
rclb
repz
test
xchg
inc
imul
adc
push
jp
push
mov
mov
or
cmp
cmpsb
add
in
mov
ret
sbb
adc
push
dec
dec
add
xor
bound
scas
jmp
push
mov
xchg
into
leave
int
mov
mov
fwait
lahf
push
or
jae
movsl
stc
nop
cmc
aad
sub
pop
jbe
lret
cld
mov
xchg
shlb
xchg
lret
sbb
adc
mov
aad
mov
repnz
and
sub
or
jg
sbb
ja
mov
aad
xor
fs
pop
add
mov
in
fwait
loopne
hlt
aad
dec
xchg
aas
ja
sub
inc
cmpsb
cmp
add
scas
test
mov
pop
and
rorb
outsl
je
stos
mov
adc
gs
js
inc
ret
xchg
call
mov
test
int3
ja
into
leave
int
mov
fsubr
inc
mov
jmp
and
mov
fnstenv
orl
popf
das
test
fisubl
or
testl
push
add
daa
pusha
sbb
jo
xchg
enter
icebp
ds
inc
test
or
add
and
jge
pop
add
xchg
ss
mov
and
mov
xchg
push
ljmp
add
mov
cltd
jns
adc
push
dec
push
sbb
mov
ret
lds
adc
add
lcall
dec
sbb
pushf
xor
callw
sbb
xor
test
jns
mov
push
mov
jl
pop
lcall
test
or
mov
adc
pop
inc
call
nop
sub
hlt
push
fisubs
mov
jmp
loop
outsl
mov
lret
scas
jne
or
sbb
add
into
mov
ret
outsb
add
stos
mov
lcall
ljmp
add
jb
mov
pusha
pop
clc
mov
leave
pusha
pop
adc
mov
jp
ds
aas
adc
push
jo
dec
push
fdivrl
es
jno
inc
dec
pop
jge
xor
in
adc
push
cwtl
mov
adc
mov
mov
lock
and
push
mov
test
enter
jle
rorl
mov
push
jb
xlat
pop
add
or
mov
pop
and
sarl
pop
mov
lea
daa
push
jmp
jecxz
mov
xchg
adc
jbe
or
pop
mov
xor
jno
jl
adc
scas
lret
sbb
sub
imul
les
inc
cmp
out
imul
aaa
pop
push
scas
addr16
push
lret
daa
mov
cwtl
adc
out
dec
in
pushf
dec
adc
mov
and
sbb
into
inc
add
jnp
loopne
or
dec
fiaddl
in
xchg
push
out
lcall
mov
sub
idiv
repnz
loop
je
outsb
mov
push
cmp
cmc
lods
hlt
cmp
iret
dec
and
xchg
and
cli
xchg
add
cmc
sbb
jg
mov
cs
hlt
and
sub
test
les
xor
orb
daa
xchg
mov
cmp
jp
inc
and
and
fldt
repz
adc
fwait
jns
push
mov
inc
jle
fldt
or
xchg
ljmpw
dec
xchg
mov
iret
push
call
pop
dec
popa
add
xor
dec
aaa
inc
mov
loope
or
and
xchg
adcb
daa
call
je
push
shlb
and
out
lsl
inc
scas
lret
push
mov
gs
adc
fcomps
jg
gs
mov
fiaddl
test
lret
pop
repz
enter
pop
aam
push
call
fsubr
dec
lret
and
pop
rcrb
mov
mov
test
xchg
fidivl
fcomp
arpl
adc
out
les
cwtl
mov
int
pop
fisttps
add
cmc
fmull
cmp
dec
mov
or
cmpsb
jns
int
push
mov
adcl
daa
jg
inc
mov
and
mov
inc
pop
sub
jne
pop
idiv
sub
push
clc
adc
ja
hlt
xchg
cmc
stc
adc
cmc
outsb
jp
je
cmp
pop
xchg
push
dec
mov
es
cmp
aaa
rcr
and
mov
cmp
or
ds
lret
jo
dec
fwait
repnz
inc
mov
repnz
mov
aad
adc
arpl
pop
ss
cmpsl
cmp
jmp
dec
push
lds
inc
xchg
je
pop
jmp
and
push
leave
xchg
insl
adc
cmp
rol
jb
cmp
pop
xchg
sbb
mul
dec
mov
mov
push
and
ja
push
or
adc
sbb
aas
lahf
negl
jle
scas
out
xchg
scas
mov
stos
and
ret
lret
inc
add
push
jo
fwait
aad
fs
fisubrl
insl
ds
xchg
sub
jnp
xor
inc
js
mov
pop
cmp
push
ret
les
imul
repz
stos
pushf
cmp
xchg
pushl
icebp
add
cld
xchg
or
jo
push
shll
cmpsl
int3
loopne
sbb
idiv
cwtl
cmp
xor
mov
test
pop
or
ja
cs
repnz
mov
inc
int
add
mov
addr16
int3
xchg
xchg
sbb
ss
xchg
shll
scas
or
jle
ljmp
adc
sbb
icebp
inc
int3
jne
ja
mov
test
stc
iret
ds
bound
jae
cmpsb
jo
xor
jg
notb
jnp
jbe
cld
iret
in
push
xchg
push
movsb
mov
mov
into
loop
rorb
repz
fnstsw
in
add
mov
ret
cmpsl
inc
ficomps
xlat
cmp
sub
pusha
pop
xorb
inc
mov
dec
xor
stos
xchg
cltd
mov
add
jo
or
sbb
pop
dec
out
lcall
xor
mov
inc
data16
sbb
mov
mov
and
cmpsl
mov
test
lret
bndldx
loopne
pop
les
fwait
pop
xor
cltd
loope
stc
imul
in
loopne
jns
cmp
mov
add
repz
push
xchg
xor
pop
nop
pusha
push
dec
loop
cwtl
cmp
sbb
dec
lods
inc
inc
mov
ficompl
faddl
aas
push
jmp
xor
fwait
les
fsubrl
mov
int
popf
push
cmp
jns
mov
push
push
shlb
xlat
pop
add
jge
mov
or
aaa
mov
dec
decb
pop
sub
mov
fwait
mov
data16
shll
das
pop
cmp
xor
dec
fucomi
out
xchg
aas
dec
aad
inc
and
or
out
add
mov
int
jmp
rclb
cmpsl
out
vmovntdq
stos
mov
rclb
icebp
pop
lahf
sbb
mov
imul
adc
inc
push
dec
lock
mov
test
dec
mov
call
sub
xchg
ds
pop
out
fldcw
jbe
push
movsb
or
adc
ja
mov
or
cwtl
pop
icebp
or
inc
out
inc
add
lods
cs
dec
movsl
cmp
test
mov
push
or
push
sub
faddl
mov
mov
imul
pop
cltd
out
neg
mov
rcrb
pop
jg
lods
pop
xchg
adc
cmp
jecxz
lea
and
das
and
popf
int3
or
jecxz
or
loop
ret
adc
push
mov
in
mov
movsb
loop
rcll
mov
cwtl
inc
cmp
int3
dec
test
bnd
dec
lret
pop
call
pop
mov
dec
test
and
scas
cwtl
mov
push
and
out
orl
call
ljmp
nop
push
mov
mov
and
cmp
jnp
pop
adc
mov
inc
xchg
mov
mov
rcll
add
dec
xchg
sub
jge
xchg
cmp
repnz
xchg
cmp
cmp
mov
shl
dec
mov
aad
clc
insl
dec
loopne
arpl
or
addr16
outsb
stos
inc
mov
fsts
pop
or
xor
and
jp
stc
js
rep
ljmp
inc
push
movsl
dec
and
jnp
dec
lods
cmc
inc
gs
adc
outsb
js
pushf
stos
push
dec
and
out
sbb
loopne
lahf
adc
es
es
jo
pusha
andb
fmul
fcoms
push
in
ljmp
or
or
sub
cvtdq2ps
hlt
int3
stos
inc
loope
imul
ret
pop
popa
inc
or
pop
hlt
ss
das
repnz
sarl
inc
jg
push
jle
rcrb
add
mov
adc
je,pn
push
mov
sbb
cmp
xor
arpl
in
lret
movsl
mov
xchg
fs
dec
and
imul
sti
std
divl
neg
pop
in
or
xchg
inc
movsl
jecxz
fdivrl
clc
pop
lret
fs
and
gs
fldl
jbe
inc
ljmp
cmp
je
xor
adc
ds
ljmp
and
hlt
or
je
lods
mov
iret
inc
std
mov
ljmp
cltd
jne
stc
push
mov
cmp
and
jp
lods
pop
fstps
push
stos
test
xor
cmpsb
xor
mov
mov
or
je
push
call
cli
lea
imul
push
pop
xchg
aad
sub
lcall
dec
and
xchg
mov
je
rorl
inc
lods
push
or
sahf
mov
xchg
aad
jmp
or
xchg
adc
insl
stc
pminub
xor
xor
push
popa
test
out
fdivl
pop
mov
andb
testb
jns
sub
pusha
js
rol
rcrb
and
xchg
mov
jl
dec
scas
call
icebp
xchg
loopne
or
insb
int
hlt
popa
sbb
jg
loope
sub
ret
fwait
scas
xchg
lea
fmulp
dec
daa
dec
mov
sub
lret
das
xor
mov
mov
sub
mov
pop
es
jle
jns
inc
sub
xchg
cmp
xchg
addr16
dec
les
mov
mov
daa
mov
clc
addb
popf
pop
xor
mov
notl
outsb
add
cld
mov
cmp
les
jmp
adc
fstps
xchg
add
push
pushf
loop,pn
fisttpll
mov
imul
out
inc
or
fildl
cmp
fmuls
adc
mov
dec
push
jecxz
into
push
jb
aad
arpl
dec
dec
mov
jne
xchg
push
addr16
aas
test
inc
fadd
dec
dec
arpl
push
into
ds
or
fldpi
mov
jo
mov
push
hlt
mov
or
das
jl
add
or
subb
call
fwait
in
ss
bound
mov
test
sahf
pop
push
insb
push
mov
xor
or
test
addb
sub
sub
bound
popf
push
fidivrs
inc
dec
or
out
push
out
cmp
imul
and
and
push
xchg
jne
dec
int
inc
xor
xlat
fwait
test
inc
xor
or
cli
xlat
stos
std
cltd
pop
mov
xor
aaa
into
leave
xchg
xchg
jp
adc
mov
popf
fisubrs
lahf
sub
add
mov
add
jmp
push
or
pshufw
lret
xchg
in
jo
mov
jecxz
mov
insl
mov
pop
push
inc
out
jns
mov
pop
dec
pusha
mov
lock
sbb
inc
xchg
call
sahf
clc
shrl
jmp
or
iret
xor
xlat
idivb
mov
inc
shlb
pusha
xor
pop
insb
fcmovnbe
adcl
cltd
mov
popf
loop
and
or
mul
sbb
mov
mov
jg
push
jp
inc
inc
mov
ror
and
loop
mov
cmc
js
sbb
idivb
gs
push
scas
cmp
mov
jg
test
mov
lcall
xchg
push
push
push
scas
inc
xchg
xchg
js
dec
loopne
fwait
mov
popf
jno
cmp
mov
stos
adc
cmpsl
mov
cld
dec
mov
int
jae
jle
jno
rclb
jp
sub
sbb
pop
std
imul
adc
jg
xor
mov
xchg
scas
ror
jne
sub
insb
scas
arpl
xor
xor
rol
push
sbb
mov
push
sub
sahf
pop
aaa
xchg
lcall
arpl
mov
testb
adc
or
pop
imul
mov
jge
pcmpgtd
sahf
add
jmp
jb
sub
and
xor
dec
clc
cmpsl
jl
sbbl
stos
jne
mov
faddl
in
movsl
mov
lret
loope
lret
sbb
bswap
outsl
push
pop
insb
ljmp
inc
fdivs
xchg
fsubl
test
shlb
lret
mov
jns
push
cmpsl
ljmp
sub
nop
cmp
cmc
cmc
nop
insb
shll
mov
pusha
sbbb
mov
sbb
pshufw
push
scas
inc
mov
sbb
lret
dec
push
jmp
popa
adc
inc
mov
mov
xchg
inc
mov
xor
sbb
xor
pop
dec
push
cmpsb
dec
sarb
cmpb
inc
dec
xchg
jl
leave
insb
jmp
scas
push
push
out
aas
iret
and
shrl
push
inc
jae
xchg
mov
ret
dec
pop
cmc
push
inc
fst
repnz
outsl
mov
fs
xor
or
stc
addb
add
xor
sub
test
dec
add
insl
cmpsl
fsubs
mov
aas
popl
cmp
dec
xchg
lret
ffree
imul
mov
in
loopne
push
cmp
mov
pop
inc
jne
jb
or
pop
mov
testl
mov
jno
cmp
or
sti
aam
shl
add
bound
outsb
mov
jnp
adc
jbe
nop
jl
std
aam
dec
adc
mov
pop
mov
fisubl
cltd
cli
cmp
out
outsl
or
push
xchg
stos
pop
cs
mov
es
and
inc
adc
dec
dec
mov
stc
andl
xchg
and
rcrb
add
outsl
sub
cli
aam
pop
add
xor
push
xlat
jg
and
inc
cmp
gs
push
pop
lock
mov
jno
pop
sub
popa
push
jp
jge
mov
add
ret
dec
xchg
sub
les
jb
adc
imul
je
mov
adc
pop
cmpsl
sub
sbb
dec
lret
cmp
inc
and
mov
mov
test
int3
js
ljmp
and
mov
xchg
dec
sub
sub
ret
roll
xchg
ret
xchg
cmp
leave
jg
push
cmp
fwait
mov
mov
fdivrs
in
enter
and
and
xor
add
push
shlb
adc
sbb
adc
xchg
fdivs
or
movsl
xchg
xchg
sub
fdivs
and
scas
push
fs
sbb
fwait
push
out
es
mov
dec
into
push
mov
cmp
pop
lods
xchg
cmp
les
jmp
fldl
dec
jae
adc
inc
fimuls
adc
out
stos
test
jbe
js
jns
lret
retw
fisttpll
lret
imul
sub
dec
lret
xor
push
mov
or
mov
les
imul
pushf
jbe
and
dec
sti
scas
inc
fdivrl
lret
out
dec
dec
sbb
xchg
mov
inc
xchg
sbb
adc
add
pop
lcall
in
loop
outsb
add
mov
fistl
loope
adc
call
and
adc
mov
and
pop
add
jb
push
xor
int3
daa
xchg
stc
js
repnz
mov
mov
mov
xor
mov
pop
dec
adc
mov
add
xchg
pop
test
je
cmp
adc
jg
ret
outsl
jne
inc
push
js
push
stos
aas
rcll
stc
and
push
imulb
cmp
enter
and
adc
scas
imul
sub
shll
sbb
push
mov
sub
xchg
cmpsl
mull
jns
enter
rcll
push
out
test
pop
fcmovnu
int
or
pop
xchg
sbb
dec
push
mov
fstps
xchg
int
mov
insl
ss
xorb
test
std
js
fs
scas
ds
je
dec
push
insl
mov
loope
pusha
xchg
jne
push
or
out
jno
sbb
cmp
jle
hlt
inc
pop
mov
xchg
daa
ja
jle
jo
scas
inc
push
inc
shlb
rclb
sti
cmp
aas
mov
popf
cmpsl
aad
jne
mov
inc
cmc
cmp
lock
mov
mov
cs
sti
mov
dec
add
sti
es
jge
iret
das
aaa
mov
cwtl
xor
loopne
mov
fimuls
sub
ja
shrl
gs
or
cmp
push
test
dec
enter
cmp
xor
lds
clc
imull
sub
das
pop
push
xchg
aaa
rclb
xchg
xor
int3
fadds
daa
mov
mov
dec
cwtl
push
outsb
lret
adcb
int3
sbb
push
loop
cmp
shll
movsl
imul
or
fnstcw
sub
and
push
adc
adc
and
cmp
call
pop
imul
pop
sub
sahf
cmc
cmp
jp
pop
dec
cmp
jb
js
cmp
jmp
fs
mov
jne
lea
out
and
pop
sarb
inc
xor
shlb
or
pop
mov
rcr
sbb
sbb
lahf
stos
push
cmp
xchg
fwait
imul
mov
in
outsb
shrd
mov
cli
xlat
mov
enter
pop
adc
movsb
add
sub
push
add
and
mov
ret
inc
in
cmp
push
mov
dec
jnp
lahf
rol
cwtl
cmpb
jp
loopne
or
aad
add
or
cmpsb
test
sub
pop
loop
pop
hlt
push
sbb
push
or
clc
mov
ficoms
xchg
mov
fstp
push
cmp
cmc
lret
int3
arpl
add
out
mov
xlat
enter
inc
xor
mov
fists
push
pop
les
out
clc
jae
xor
pop
jae
out
mov
pop
pop
outsl
mov
sub
fcomps
push
pop
cmp
aam
adc
cmp
pop
mov
push
outsl
rcr
jae
and
shll
push
test
aas
movsl
jo
lock
add
idiv
cs
mov
fsubrl
sahf
mov
mov
cmp
dec
dec
jmp
mov
fsubp
or
andb
in
jecxz
dec
shll
inc
push
xchg
shll
adcb
pop
movsl
jp
and
adc
cld
js
mov
popa
push
cld
cmpb
mov
pop
mov
mov
lret
push
mov
cmc
into
or
insb
shl
sub
loopne
jo
mov
int3
pusha
sti
ss
dec
dec
inc
dec
hlt
aam
fcmovnbe
and
push
repnz
and
std
nop
push
into
leave
shll
add
icebp
jecxz
inc
dec
test
sub
test
adc
dec
cmp
sub
push
pop
and
out
mov
insb
rol
insb
stc
mov
or
ds
iret
sub
insl
arpl
dec
mov
fistpll
stc
mov
fucomip
push
mov
inc
push
jl
test
push
inc
pop
adc
fnstcw
pusha
lods
push
imul
pop
imul
mov
inc
mov
lods
test
xlat
into
xchg
lcall
das
gs
inc
icebp
jge
ds
jmp
mov
cld
xor
popf
out
imulb
dec
incb
movsl
pushw
sbb
aad
mov
sbb
in
mov
jo
cmpsb
sbb
movsl
mov
jns
adc
mov
stc
mov
mov
scas
leave
and
out
mov
scas
lret
or
inc
xlat
iret
lcall
stc
clc
pushl
mov
inc
lcall
and
jbe
aas
push
test
xchg
loopne
push
leave
mov
leave
mov
lcall
cmp
call
mov
js
lock
jmp
pop
push
gs
cwtl
pop
hlt
mov
mov
das
cmc
sub
lds
faddp
js
fs
jns
and
int3
arpl
popf
stc
call
jae
test
jb
dec
push
call
lods
addl
adc
sahf
inc
and
jns
mov
orl
bound
mov
aas
cwtl
loop
and
mov
mov
xor
gs
add
addr16
fmul
add
sti
rcrb
popa
mov
outsb
pop
inc
jmp
pcmpeqw
mov
aas
adc
or
sbb
or
mov
xchg
jmp
movsb
mov
dec
push
jmp
cli
stos
inc
sub
inc
pop
test
icebp
mov
sub
xchg
stos
push
in
loopne
xlat
es
sbb
adc
call
jg
mov
dec
lcall
repnz
iret
jbe
add
push
inc
out
imul
cmp
clc
pop
std
daa
inc
push
bnd
je,pt
sub
clc
inc
in
xchg
daa
push
mov
int3
jle
adc
pop
test
leave
mov
scas
mov
dec
dec
mov
jbe
jp
sub
xchg
xchg
movl
mov
in
jae
js
push
stos
jbe
xchg
mov
in
sbb
test
pop
imul
dec
jg
clc
or
lahf
jb
daa
adc
sbb
or
cmp
movb
lds
iret
or
push
cli
push
je
jbe
andb
inc
fbstp
int
push
out
xchg
or
popf
mov
fwait
loop
ret
addr16
lods
out
mov
dec
int3
lods
mov
xor
adcb
push
imul
scas
stos
cmp
out
filds
dec
imull
dec
push
jmp
cmc
int3
lret
mov
jae
inc
fidivs
hlt
cmp
enter
stos
adc
or
mov
pop
add
stc
repnz
adc
cld
and
push
jae
cmp
inc
sti
orl
std
sbb
jecxz
ss
decb
adc
push
fcmove
pop
or
sahf
std
fdivrl
fdivl
jle
arpl
mov
mov
enter
dec
imul
in
pop
pop
jl,pt
out
cmp
sub
pop
jmp
mov
sub
add
test
inc
mov
enter
imul
jae
lea
pop
sbbl
jns
in
sub
sbb
lea
icebp
jp
outsb
stc
shll
ror
push
push
adc
sub
jo
fwait
and
ds
in
ja
fisubrs
pop
test
add
ret
pop
ffree
outsb
iret
cmp
fists
adc
or
pop
aam
xchg
inc
push
jbe
jo
aaa
sarb
push
in
mov
push
je
xchg
sub
or
jecxz
fstpt
push
pop
sbb
in
mov
aad
inc
xchg
inc
pop
and
lahf
es
jg
sub
pop
std
daa
loopne
cmpsb
adc
xor
leave
addr16
xor
mov
xor
add
add
adc
jo
lds
jno
shlb
dec
pop
dec
jle
mov
adc
ja
mov
jmp
mov
lods
cmp
fdivs
ja
push
jb
cwtl
and
lret
inc
jae
clc
sub
push
inc
std
fs
arpl
and
and
cmp
aam
xor
in
mov
imul
xor
mov
shrb
rcrb
iret
mov
inc
pusha
mov
push
jmp
lods
aas
aam
or
cmp
add
dec
and
jp
cmc
cmp
arpl
push
ss
insb
add
dec
and
jge
test
pop
jmp
loopne
lds
das
mov
aad
divb
rorl
mov
kmovb
in
sub
pop
sbb
fdivrs
daa
cmp
or
dec
scas
xlat
mov
bound
pushf
xlat
cs
movsl
std
xlat
xorb
pop
dec
das
movb
aad
pop
mov
jns
je
adc
cmpsl
stos
inc
xchg
adc
or
jne
cmp
xchg
xchg
mov
mov
je
add
xchg
and
ret
mov
jmp
or
xchg
jae,pt
ja
pop
dec
in
mov
cmp
jge
and
mov
in
outsb
mov
xorb
std
xchg
xchg
inc
arpl
lds
imul
lea
mov
push
inc
pop
aam
sbb
stos
cmc
popf
daa
dec
iret
push
sub
outsl
out
push
and
stc
and
jecxz
sub
aam
add
and
inc
test
mov
sbb
icebp
jb
je
subl
dec
mov
notb
stos
daa
pop
cmp
gs
sub
push
fnstenv
aaa
inc
push
xchg
sar
into
mov
outsl
sbb
out
test
cmp
cmp
ds
nop
pop
out
adc
inc
pushf
test
loopne
mov
sbb
std
call
call
in
in
add
aas
popf
sub
pop
insb
xor
hlt
out
jne
xchg
jecxz
mov
push
repnz
or
pop
bound
jnp
push
pop
hlt
push
adc
adc
sti
stos
dec
pop
mov
mov
imul
lahf
mov
sub
lahf
mov
rcll
xchg
aaa
mov
jle
fcompl
mov
dec
ja
pop
mov
and
mov
popa
test
cli
sbb
sti
mov
sbb
xchg
sub
mov
mov
inc
fdivrs
enter
scas
sub
pushf
mov
push
pop
lahf
insl
or
out
outsl
add
adc
xor
stos
inc
pushl
das
cmp
or
push
outsl
pop
aas
mov
cmp
cs
outsb
inc
ljmp
xor
repnz
and
lcall
ret
cld
imul
aas
inc
xchg
sub
sbb
inc
jp
sbb
mov
pop
outsl
push
jmp
clc
dec
jo
jmp
and
into
fcmovnu
pop
or
jge
mov
stc
nop
dec
sbb
pop
mov
or
fstps
repz
mov
aam
lea
shll
push
ljmp
sub
orb
repz
movsl
and
sbb
dec
aad
jnp
in
inc
lcall
bound
subl
das
cmp
rcrb
out
lcall
je
pop
pop
inc
cmp
jns
mov
gs
iret
push
adc
mov
pop
pop
xchg
inc
cmpsb
decl
add
in
push
inc
jb
mulb
fidivs
int
les
cmpsl
cmp
or
jb
push
mov
dec
mov
mov
add
ficoms
stc
mov
inc
mov
pop
jb
daa
int
pop
push
adc
xchg
ret
test
aam
lcall
outsl
nop
push
movsb
mov
gs
pop
addb
movsb
mov
dec
jl
jg
pop
repz
pop
sub
jno
adc
ljmp
insl
adc
add
mov
push
inc
mov
xchg
lcall
xor
das
fdiv
jg
arpl
fs
insb
sti
rolb
shrb
add
push
call
jo
outsl
jnp
es
push
jae
cmp
xchg
scas
mov
push
arpl
int
clc
lret
jnp
fisttps
stos
xor
repz
sub
fucomi
pop
ret
loop
jae
xchg
sub
xchg
sbb
push
push
leave
add
pushf
xor
pusha
test
inc
push
mov
dec
inc
fidivs
fdivs
jle
gs
test
lea
cmpb
in
orb
out
push
js
ds
add
mov
xlat
and
into
mov
jnp
xchg
lock
mov
cmp
fwait
adc
in
adc
ss
push
mov
subb
mov
xchg
dec
add
icebp
sbb
xor
adc
addr16
add
fdivs
cwtl
in
jne
xchg
fisubrs
cltd
push
lahf
int3
pop
in
cmc
data16
sarb
push
jecxz
mov
mov
dec
jae
jle
movsl
jb
push
in
lret
mov
cld
or
rclb
insb
fdivl
int
pop
jae
flds
popa
sti
mov
push
loop
arpl
enter
fldpi
cmpl
adc
hlt
jne
push
xchg
jnp
dec
daa
mov
add
insl
mov
jmp
sbb
add
das
test
pop
shl
mov
mov
ror
negb
scas
and
mov
fcmovb
inc
loopne
pusha
fcmovne
ja
cmp
push
mov
mov
jno
orb
lock
cmp
inc
xchg
imul
bnd
cs
dec
ds
inc
test
adc
nop
jo
mov
cs
inc
mov
xchg
nop
sub
mov
mov
jb
inc
sub
aad
js
xchg
cmc
in
xchg
jmp
and
movsl
addr16
or
add
cwtl
imul
into
mov
hlt
roll
pop
imul
xchg
adc
xor
int3
test
pop
cmpsb
stos
add
dec
mov
popa
cmpl
cmp
icebp
jne
xor
icebp
inc
ja
mov
scas
push
into
mov
bound
gs
and
scas
add
shrl
push
cli
inc
cld
fbstp
xchg
pop
sbb
sbb
lcall
xor
dec
xchg
push
inc
hlt
sarl
cmp
mov
jno
fmull
bound
fdiv
out
mov
scas
lret
pop
jne
in
xor
add
daa
mov
jo
mov
or
sub
dec
cwtl
outsl
mov
dec
pmullw
xchg
shlb
ror
push
dec
dec
pop
xorb
lods
sbb
cwtl
data16
or
xchg
cs
in
inc
jl
sbb
jns
lret
fstpl
mov
sti
or
push
ret
in
xchg
scas
enter
hlt
std
outsl
subl
mov
test
and
adc
repz
mov
imul
dec
add
dec
mov
jle
insb
sbb
cmp
lret
pusha
mov
movsb
jecxz
pop
out
sahf
in
dec
repz
scas
and
fwait
cmpsl
rorb
pop
cmp
jne
sbb
inc
inc
jbe
aam
insl
mov
adc
pusha
testl
xor
arpl
jbe
adc
or
sti
dec
ds
jmp
cld
xchg
jg
jl
push
add
outsb
mov
sarl
pushw
xchg
pop
mov
jb
mov
pcmpeqb
add
xchg
pop
movsb
xchg
test
jmp
or
das
aad
cmpsl
push
repnz
mov
ds
lret
bound
dec
adc
lahf
cli
push
roll
mov
or
add
pop
pushf
in
shll
mov
popa
add
mov
into
inc
pop
cltd
cmp
outsb
push
les
outsb
aas
xchg
mov
mov
dec
sbb
xor
loop
jp
mov
lcall
pop
jge
mov
stc
movsl
pop
or
pop
pop
inc
hlt
adc
pop
in
std
push
and
push
std
xchg
pop
push
inc
pop
mov
jns
pop
cli
xchg
rolb
sbb
insl
clc
dec
arpl
imul
test
mov
add
push
xchg
adc
cmc
mov
adcb
fdivl
pop
sti
jmp
lds
inc
out
inc
iret
in
shll
jbe
jno
in
mov
push
insb
sub
sub
jmp
jmp
or
mov
hlt
mov
jb
stos
jecxz
adc
out
jnp
dec
fistl
push
pop
xchg
out
je
mov
sub
jns
fs
jb
jnp
cmp
lock
jbe
jbe
ja
cmp
adc
sub
lahf
aas
aad
mov
in
inc
test
leave
outsb
sub
or
cmpsb
insb
jecxz
nop
xchg
sub
xchg
not
cmp
sbb
mov
inc
sub
and
stos
je
sbb
push
cmpb
mov
icebp
adc
loopne
pop
not
inc
mov
sub
dec
ja
xchg
js
adc
xchg
fistpl
ror
je
mov
adc
xor
dec
mov
test
mov
xorl
pop
mov
xor
fbld
rcrl
fsubl
sub
rcll
ljmp
cmp
loope
mov
shl
or
dec
cmp
loope
xor
mov
push
push
mov
pop
loopne
or
aad
adc
test
test
and
pop
sub
xchg
push
call
xchg
movsl
mov
mov
in
and
jns
stos
mov
sub
add
xor
pop
cld
pop
or
mov
inc
pop
mov
sbb
pushf
fwait
push
out
mov
outsb
subl
push
or
lcall
jl
out
cmpsb
sbb
mov
rolb
inc
jp
xchg
add
imul
fs
fisubs
mov
add
mov
test
and
sub
xchg
daa
inc
pop
pop
mov
and
aam
loop
jno
pop
lret
push
lock
iret
fucomp
and
sub
mov
imul
scas
ja
ret
jle
cltd
das
lods
jnp
loope
ret
dec
mov
push
dec
xchg
push
jnp
hlt
sub
cmovo
imul
xor
jp
sub
lret
jbe
test
mov
mov
hlt
loope
mov
les
loopne
aad
out
jne
mov
sarb
sub
pushf
pop
call
icebp
dec
pop
fmuls
test
daa
cmp
out
or
sarb
shrl
stc
adc
xor
mov
ljmp
cmp
loope
push
mov
imul
fwait
imul
sbb
mov
inc
xchg
mov
push
jo
into
in
cmp
fneni(8087
pushf
scas
adc
subb
loopne
test
lods
cmp
and
xchg
sub
out
jg
xor
cmp
xchg
inc
inc
shll
pop
push
out
out
jp
roll
cmp
push
outsb
lahf
xlat
push
xchg
mov
push
test
in
jge
inc
sbb
pop
lret
inc
int
aam
insb
nop
dec
xlat
cmp
rorb
lea
add
dec
fcmove
in
push
adc
inc
lods
fdivr
jo
push
lods
xchg
fstpt
repnz
add
mov
int3
dec
ss
sbb
mov
std
lret
push
dec
movb
mov
sbb
dec
jno
jmp
jle
and
adc
lods
fldcw
imul
sbb
in
sbb
lcall
mov
bnd
mov
shlb
push
jmp
or
jae
mov
mov
popa
sub
mov
orb
fsub
jp
sbb
inc
ret
xchg
lods
imul
cmp
cmpsl
out
jmp
cmp
xor
sti
fwait
test
mov
jmp
es
fcomps
add
pushf
pop
andb
fnstsw
or
xor
sbb
and
mov
xlat
cmp
int3
mov
scas
adc
sub
adc
cmpsl
shl
mov
xor
bound
xchg
push
pop
repnz
jp
jg
add
push
mov
jl
je
sbbl
pop
fucomip
sahf
or
mov
dec
mov
jecxz
stos
or
mov
aam
cmc
pop
mov
out
dec
sbb
fbstp
dec
push
xchg
das
aas
sbb
aaa
cmp
dec
jl
dec
cmpb
roll
jmp
sub
imul
test
xchg
js
cltd
fnstcw
xchg
jp
icebp
jmp
aad
scas
andl
aam
push
ss
test
mov
jle
ret
jge
jle
pop
outsb
icebp
test
push
push
loop
mov
es
pop
das
jp
test
lret
int
jmp
dec
fwait
xor
std
cs
mov
cmp
sbb
cmp
jg
imul
sbb
fcomps
mov
xor
sub
mov
cmpsl
out
sti
call
and
lods
hlt
jp
adc
or
data16
cmp
sahf
es
jl
mov
sbb
in
repz
out
pop
hlt
push
mov
lods
jo
jge
in
xor
outsl
cmp
fisttps
xchg
or
inc
stos
lods
push
aam
xchg
dec
dec
mov
jb
add
bound
addl
dec
push
sbb
mov
int
inc
mov
fmul
movsb
xor
adc
repz
fidivs
add
and
jns
inc
sahf
mov
ret
mov
mov
inc
pop
pop
out
test
into
push
xor
mov
mov
sbb
std
dec
aad
test
mov
and
mov
jp
scas
aas
push
push
pop
rcll
mov
scas
std
sub
sbb
shll
mov
pop
push
movsl
je
lret
pop
das
fldenv
cmpl
push
repnz
test
mov
push
sub
xchg
and
inc
push
scas
inc
xchg
ljmp
dec
loop
aad
adc
movsb
add
mov
frstor
jae
adc
mov
rcrl
int
mov
cmpsl
xor
mov
and
scas
xchg
lock
imul
dec
movl
arpl
int
cmpsb
sbb
jb
sbb
or
push
push
outsl
test
add
mov
jb
inc
ret
and
daa
push
inc
mov
in
xlat
pop
pop
mov
adc
pop
xor
push
xchg
mov
cmp
movsl
daa
out
push
jle
scas
mov
xchg
hlt
aam
lahf
sub
add
or
adc
jb
sbb
sbb
sbb
imul
push
cmpl
lods
addl
xchg
sti
pushf
fdivs
std
or
jns
scas
xor
add
sub
sbb
lahf
aas
ret
insb
push
je
pop
dec
dec
sahf
dec
adc
dec
cmpb
cwtl
ljmp
iret
pop
mov
sbb
xchg
je
jmp
xlat
icebp
fists
inc
fmull
pop
mov
scas
fistps
leave
stos
loope
xor
lret
xor
lds
fdiv
jnp
or
stos
lret
mov
sahf
nop
add
stos
mov
pop
enter
pop
xchg
stos
push
sub
sar
and
dec
hlt
inc
mov
xchg
stos
movsl
adc
dec
mov
push
cld
cmpsb
adc
pop
rcrb
imul
inc
push
mov
or
jg
stos
and
std
lret
pop
xor
adc
jp
jb
jecxz
call
fcoms
jnp
push
jmp
inc
lods
aam
pop
cmc
test
out
pop
es
decb
dec
sbb
enter
fiaddl
cmp
sti
fidivs
sbb
dec
add
cli
xchg
push
shll
ds
popf
shr
add
pop
jns
pop
stos
or
add
dec
jb
jp
push
in
sarl
aas
sub
inc
testb
mov
sbb
ds
jne
sbb
dec
scas
scas
call
inc
fs
xor
mov
gs
clc
rcrl
rcrl
mov
lret
faddl
shr
jb
insb
orb
xor
add
cs
lods
pop
or
subl
lret
push
mov
insl
pop
inc
call
dec
and
xchg
mov
mov
into
das
jns
or
out
jns
push
das
push
lods
mov
push
cmpsb
in
les
testb
mov
sub
scas
inc
mov
int3
fadds
adc
adc
bound
shl
dec
push
sub
mov
rcl
jmp
jo
or
shlb
fidivrl
popa
les
sub
addr16
icebp
push
jae
xchg
jbe
adc
aad
arpl
xchg
xchg
xor
sbb
jns
dec
sbb
cmp
sub
stc
les
aaa
add
jmp
ds
pop
enter
cs
adc
out
mov
call
inc
insl
cmc
lcall
sbb
cltd
cmp
mov
sub
sub
pop
int
loop
arpl
out
and
push
xor
cmpsb
scas
jmp
inc
jge
xchg
imul
xchg
in
movsl
cmp
cmc
insb
mov
popa
mov
xchg
loop
ljmp
nop
stos
adc
mov
mov
aas
out
and
rclb
inc
repnz
arpl
cmp
mov
jmp
divl
add
rol
push
sbb
mov
or
into
testb
sub
mov
ljmp
movsb
repz
dec
and
or
jle
popa
popf
jns
mov
dec
add
mov
aam
mov
flds
mov
ret
dec
pusha
js
inc
pusha
push
xor
jbe
fstpl
push
out
pusha
push
mov
gs
xor
ret
sub
mov
or
insb
fbstp
sbb
bound
popa
iret
xchg
dec
mov
mov
rcrb
xor
cs
and
dec
aas
dec
jp
pop
lock
jmp
ja
sbb
inc
push
xchg
loop
addr16
sbb
jl
mov
sbb
stc
push
xchg
xor
pop
notb
js
test
cmp
push
movsl
adc
xchg
push
fmul
dec
rol
loop
and
inc
mov
mov
stos
add
xchg
dec
pop
xlat
add
mov
add
outsb
ret
aam
push
push
mov
and
shr
xchg
fcomps
xchg
ja
pushf
push
sbb
gs
es
lods
ret
push
sti
int
sub
pop
das
mov
adc
pop
push
test
sub
ret
in
clc
jno
out
and
inc
inc
add
lret
bound
xor
into
sbb
lods
dec
gs
pop
mov
loopne
dec
sbb
xchg
stos
mov
loopne
mov
sti
xchg
mov
ljmp
pop
leave
fnstcw
scas
inc
jg
ret
gs
mov
in
fwait
lahf
pop
and
nop
mov
mov
mov
adc
ss
xor
fcmove
dec
mov
stos
repnz
insb
pop
imul
and
das
jns
subb
lret
inc
sub
out
push
push
push
sbb
jno
popa
pop
adc
pop
les
stos
imul
call
dec
fs
add
mov
repnz
jmp
sbb
negb
sarb
dec
mov
inc
fdivl
adc
push
mov
and
xchg
clc
xchg
and
mov
pop
sarb
sub
popf
inc
cmpsl
fcomip
or
sub
fbstp
jae
ljmp
lret
sti
sbb
loop
pusha
in
cmpsl
pop
test
out
js
add
fcoml
mov
je
dec
xor
cmp
adc
sub
adc
and
sbb
inc
and
je
xor
aam
das
into
push
mov
lret
aas
aam
jne
call
or
ret
ss
push
pop
dec
push
add
adc
add
sub
push
mov
jg
arpl
lret
mov
cltd
mov
mov
daa
jecxz
sub
outsl
xor
push
xor
popf
push
fs
test
loop
jmp
or
fstl
jns
repnz
aaa
nop
aaa
inc
out
xchg
fildll
data16
lock
mov
fimuls
lds
add
int3
rclb
xchg
jnp
mov
jecxz
rcl
cltd
xor
lods
mov
frstor
push
xchg
sbb
mov
mov
jnp
push
jge
outsb
pop
das
xchg
pop
xchg
or
ljmp
lahf
orl
fdivr
mov
das
aam
jle
lcall
sub
sub
dec
int3
mov
sbb
mov
sub
mov
jne
bound
fs
push
rcl
jl
pop
aaa
pop
movsb
inc
divb
push
aaa
xchg
push
inc
fists
pop
test
push
xor
push
lret
out
std
cmp
xchg
rcrl
inc
arpl
cmp
sub
clc
imul
hlt
je
mov
xlat
inc
sbb
test
push
cmp
out
gs
inc
mov
cmpsl
insl
movb
stos
inc
mov
lock
lahf
and
cmp
mov
xor
inc
imul
lcall
push
jb
stc
outsb
das
pop
sbb
jecxz
ret
xor
insb
bound
mov
cli
cmc
jg
xchg
gs
mov
mov
push
inc
stos
neg
cmp
jbe
js
push
mov
imul
shlb
sub
popl
push
xchg
cmp
call
jo
or
ja
test
shr
push
addr16
out
and
pop
popf
push
adc
cmc
int
sub
sbb
dec
dec
aam
in
imul
shll
mov
cmp
iret
dec
mov
ret
mov
sbb
pop
out
cmp
test
or
outsl
adc
test
xchg
imul
sbb
and
mov
mov
repz
xor
dec
inc
push
push
mov
int3
ja
into
repz
call
pop
mov
into
inc
mov
std
fs
adc
and
jo
repnz
lds
movsb
ljmp
jl
xor
dec
roll
call
inc
fidivs
jmp
add
into
lock
mov
jb
lret
sbb
leave
dec
adc
mov
frstor
in
mov
xor
arpl
mov
ds
inc
xor
stc
cli
test
xchg
jmp
dec
inc
fsubs
mov
jno
mov
inc
cltd
out
dec
ljmp
testb
hlt
pushf
sub
ret
xor
lds
js
and
sub
cmp
cmp
inc
arpl
xor
fsubl
hlt
cmp
outsl
shll
adcb
sbb
jg
popa
xchg
cmc
movnti
loope
lds
sbb
inc
sbb
push
cmp
aaa
dec
or
and
xor
imul
add
pop
push
lock
cwtl
push
data16
xchg
stos
lcall
pop
xor
data16
in
xchg
loop
mov
idivl
int3
pushf
popf
push
nop
push
aaa
sub
neg
pop
xchg
add
xchg
mov
mov
sarl
imul
hlt
call
jns
sub
into
add
daa
inc
pop
lret
in
clc
in
mov
loop
cmp
jne
rclb
cmc
shlb
jmp
or
popf
add
add
jmp
rcl
cwtl
je
movsb
dec
movsb
pop
sti
and
sub
and
sub
jno
push
xchg
mov
loopne
out
xchg
movsl
icebp
inc
add
loope
bound
iret
mov
shlb
mov
out
jae
icebp
lods
mov
rcrl
insb
int
xchg
lahf
int
mov
mov
or
mov
test
push
or
test
xchg
add
cwtl
jecxz
rolb
mov
sbb
pushf
pop
stos
outsl
jnp
ret
mov
out
xchg
dec
xlat
icebp
repz
adcb
fsubrs
xchg
orl
and
sbbl
xor
mov
nop
push
mov
inc
pushf
and
adc
into
fisubrl
jg
adc
pop
sahf
stc
mov
cmp
pop
mov
pop
push
push
sub
je
cmp
imul
pop
pop
dec
mov
repnz
and
rolb
pop
pop
adc
mov
lods
rorb
scas
ljmp
pushf
mov
or
iret
cmp
pop
sub
dec
mov
int
pop
mov
mov
out
aaa
sahf
fldpi
iret
cwtl
and
mov
cmpsl
imulb
test
inc
add
sarl
sti
ljmp
lret
call
jae
xchg
pop
stos
add
out
add
mov
xchg
sub
jmp
mov
mov
mov
or
inc
imul
repnz
aas
cwtl
xor
inc
mov
or
mov
loop
inc
sub
rcrb
xor
mov
out
insb
xor
imul
sub
fdivrp
hlt
xor
push
inc
sub
jecxz
addr16
insb
lcall
in
xor
cmp
in
clc
push
mov
add
and
push
ror
rclb
cli
xchg
stos
addb
dec
sbb
repz
and
dec
or
pop
in
or
jbe
outsb
cs
xchg
jp
lcall
call
test
test
movsl
mov
jo
xlat
vcomiss
mov
xchg
int3
push
pop
cmc
jb
jmp
xchg
and
sbb
sub
out
pop
sub
movsl
and
xchg
imul
inc
hlt
subb
pop
pop
movsb
aaa
into
adc
mov
mov
mov
jecxz
mov
repnz
lret
ret
pop
sub
nop
aas
not
aam
popa
sbb
push
aas
ret
ret
sbb
jg
xchg
roll
xchg
sub
fisubs
addr16
loop
pushl
xchg
nop
in
clc
inc
aad
mov
dec
pop
push
push
jl
add
jo
cmpsb
ss
adc
int
ljmp
add
add
sub
repz
mov
sub
sbb
and
push
stos
rorl
jb
mov
ds
push
pop
rolb
pushf
add
movb
mov
add
inc
std
xor
xchg
inc
or
xchg
pop
cmc
sub
pop
pop
jge
push
call
pusha
daa
dec
mov
lods
aas
jg
sbb
mov
pop
ficoms
xor
jo
xchg
add
sti
xor
sar
sub
jmp
nop
sbb
push
dec
and
lcall
and
mov
push
dec
call
push
jp
or
cmp
or
adc
ss
imul
fwait
pop
sub
mov
xchg
mov
cmp
cld
daa
fildl
les
jno
mov
jae
sahf
movsb
hlt
xlat
test
int3
cmp
adc
push
cli
arpl
jns
pop
ret
rorl
lods
or
mov
inc
mov
jne
sbb
xor
insb
not
test
mov
add
ds
xlat
and
xor
aaa
dec
test
sbb
insl
inc
pop
fwait
jp
andb
mov
mov
imul
sub
xlat
and
lods
shrl
add
mov
in
in
out
lcall
cltd
test
sbb
cmp
mov
in
and
in
fiaddl
inc
sbb
aam
paddw
jae
cli
adc
fdivrl
mov
hlt
setae
cmp
idiv
and
add
fidivl
int3
pusha
jns
xor
cmpb
mov
rcll
sti
push
sbb
cmp
jbe
in
sarb
jbe
test
cmovs
pop
lds
in
jno
jns
pcmpeqw
jl
mulb
lea
pop
cmp
adc
mov
popa
cs
fnstenv
stos
loop
or
popa
adc
imul
xor
andl
in
sub
pusha
xchg
gs
outsl
insb
lds
scas
mov
lock
sbb
xchg
mov
sbb
cmp
sti
jl
insb
popa
mov
je
roll
pop
test
les
das
xchg
jle
lahf
mov
pop
jno
xlat
mov
sbb
sub
dec
mov
testb
jbe
sahf
push
mov
sbb
fwait
jb,pt
shlb
lds
imulb
pop
pause
xor
sub
xchg
imul
cld
pop
jge
pop
aad
testl
mov
das
jae
jno
inc
sahf
mov
pop
and
mov
pop
andl
and
or
jp,pt
mov
add
iret
and
dec
push
lock
mov
push
jmp
cwtl
cmp
imull
fnstenv
fsubr
sub
inc
xor
pop
in
rclb
aad
clc
add
dec
pusha
and
push
fwait
lock
sub
add
inc
cltd
inc
js
cmpsb
jmp
mov
ja
shrb
test
ds
pop
cs
loope
stc
int3
xor
xchg
inc
sti
adc
adcb
lret
push
adc
popa
inc
aam
ja
ljmp
into
mov
aas
inc
jbe
xor
stos
in
jae
jne
mov
jae
lret
sub
into
mov
in
adc
cmpsb
in
xchg
mov
lret
push
lock
push
push
call
fisubrs
sub
mov
repnz
mov
es
push
out
push
push
sahf
or
inc
jp
sub
pop
push
jmp
jns
hlt
mov
pop
imul
cmp
repz
repnz
pop
fdivl
pop
movsl
dec
adc
inc
mov
push
test
bound
dec
jmp
mov
jg
test
inc
jne
mov
jl
movsb
mov
cmpsl
add
adc
outsl
jno
fimull
fdiv
xchg
sub
lcall
xchg
sahf
inc
inc
ljmp
pusha
mov
cmpsl
and
jge
sub
push
add
sub
out
pop
mov
mov
loopne
lret
outsl
ret
fisubrl
fs
xchg
push
add
jb
and
in
insl
jg
cld
inc
add
pushf
popa
push
mov
jmp
push
xor
pop
pop
insb
lahf
sarl
mov
rclb
add
or
pop
test
movsb
jecxz
fcom
insb
or
inc
in
pop
in
outsl
outsb
inc
call
jge
sahf
fdivrl
nop
ret
xor
rcrl
add
mov
jns
aam
inc
fs
dec
xchg
ret
mov
cmc
cmp
ss
sub
xor
es
xor
dec
popa
rep
sub
mov
shr
jle
std
adc
pop
and
inc
cmp
dec
xlat
dec
popf
push
outsl
jmp
loope
jae
ret
jns
push
and
push
enter
xchg
mov
mov
fxch
repz
addl
cmp
les
mov
cmp
nop
cmc
lock
int
sub
nop
mov
mov
mov
imulb
sbb
sbb
lds
sub
sub
and
mov
popf
sub
push
inc
sub
fwait
xor
mov
fiaddl
pushf
adcb
seta
cmpsl
mov
dec
lds
cmp
fistps
push
xchg
stos
mov
pusha
add
out
outsl
push
mov
jo
mov
mov
lock
xchg
loop
in
nop
clc
and
stos
sub
shlb
repz
loop
ljmp
and
push
push
mov
cmc
mov
and
push
ret
nop
pop
jmp
and
scas
out
sbb
adc
js
insl
cmp
mov
jp
data16
cmp
cmp
add
ret
test
and
cmc
imul
mov
mov
push
sbb
dec
mov
lret
mov
shlb
or
mov
mov
adc
jns
pop
and
aam
lods
cld
fdivs
repnz
sub
arpl
pop
int3
push
call
in
in
xor
shr
dec
pop
mov
pop
mov
dec
cwtl
lods
jp
fsubs
xchg
jg
cmpsl
mov
rcrl
jl
sub
hlt
sbb
iret
xor
mov
jo
or
fcmovnb
mov
test
loopne
pop
or
cmp
les
cmpsb
mov
xor
pop
and
jle
hlt
jnp
addl
sub
or
dec
and
jl
mov
stos
aas
int3
mov
push
enter
lret
jge
mov
push
lock
xlat
bound
std
cmp
cmpsl
cltd
mov
dec
cmp
pop
jo
mov
into
dec
xchg
test
adc
sbb
xchg
add
jo
push
push
inc
enter
push
pop
inc
push
cmp
adcb
mull
mov
out
jle
push
mov
fsubs
rcrl
icebp
mov
sahf
repz
nop
mov
call
mov
int3
rolb
mov
shll
mov
ud0
popf
xor
mov
add
mov
lcall
pop
hlt
orl
imul
sbb
sbb
fidivs
and
dec
mov
notl
test
ds
and
in
lahf
inc
test
jl
mov
dec
arpl
sub
push
lcall
push
in
mov
fildl
out
mov
mov
data16
mov
adc
or
rolb
fildll
shlb
std
mov
inc
out
dec
pop
repnz
pushf
xor
testb
imul
out
out
or
movsl
inc
xchg
push
lcall
adc
pop
rcll
clc
mov
jl
seta
clc
cmp
add
std
xor
out
xchg
out
mov
pop
pop
mov
push
xorl
jne
cmp
in
push
stos
test
fnsave
jge
ficomps
pushf
sub
pop
rolb
add
push
jo
inc
add
cwtl
cmpsl
sti
push
fisttpl
xor
out
and
outsl
or
mov
mov
push
stc
loope
stc
push
mov
and
packuswb
mov
dec
movsb
xchg
in
stos
push
pop
add
test
mov
cmp
or
addr16
daa
adc
mov
cmp
sub
jecxz
adc
xor
int
call
adc
repnz
in
xchg
mov
dec
or
leave
cmc
pop
rolb
pop
ljmp
and
adc
push
push
stos
sbb
jbe
cmp
mov
iret
sbb
jl
test
ret
xchg
jp
cmpsb
nop
sub
mov
inc
lea
or
mov
stos
jo
sub
ljmp
cmpsl
push
ror
sbb
add
sub
cmpsl
ret
jne
push
lds
loope
xchg
in
dec
cmc
ds
xchg
mov
sub
insb
sahf
and
dec
mov
xchg
xchg
in
rorb
sbb
hlt
mov
jle
and
jle
rcll
subl
cmp
inc
test
imul
pop
fwait
mov
clc
addr16
jmp
mov
out
xchg
int3
mov
sbb
fsts
jns
push
negb
mov
cmp
mov
and
xor
mov
xchg
xchg
cltd
pusha
andl
ficoms
cmp
out
stc
test
out
adc
popl
xchg
sub
pop
stos
repnz
cs
add
cmc
call
pop
cltd
pop
dec
mov
jno
call
dec
out
pop
cmp
pop
dec
xchg
dec
dec
repz
adc
jecxz
sarb
out
nop
testl
insb
xor
out
testb
sbb
mov
outsb
pop
jg
pushf
mov
loopne
jno
jb
adc
inc
shrl
call
jge
or
cmp
jbe
aad
adc
xchg
pop
cli
dec
scas
stc
out
cmpsl
ss
sub
or
inc
decb
push
dec
cmp
pop
and
adc
getsec
jnp
sbb
jns
mov
js
sbb
cwtl
imull
push
xor
jmp
test
lds
movsl
push
stos
cmpl
addr16
push
mov
cmp
sbb
insb
add
das
push
imul
inc
sahf
call
arpl
inc
mov
mov
fcomp
sbb
xchg
pop
loope
nop
mov
inc
test
mov
add
mov
pop
push
ljmp
jno
lock
xchg
mov
shr
es
mov
inc
jns
push
data16
pop
ret
xchg
or
jno
pop
out
push
sti
lods
mov
stos
jp
out
ret
pop
dec
cmc
in
cmpsl
push
out
imul
iret
xor
cmp
movsb
push
jns
mov
in
dec
jp
test
add
stos
dec
stos
std
cltd
pop
leave
push
jge
sbb
test
pushf
scas
pop
loope
mov
lret
inc
push
fs
push
xlat
outsb
xchg
jmp
cmc
mov
lock
inc
mov
sbb
out
fmulp
decb
adc
xchg
daa
inc
ret
popf
fcoms
mov
push
mov
add
int3
mov
stc
outsl
not
sahf
push
jmp
test
jae
test
inc
dec
rcr
cs
lods
jno
and
jp
fistpl
das
pop
in
inc
ljmp
dec
clc
cmpsl
jle
aam
or
inc
jnp
insl
adc
sub
cs
lock
and
pop
ja
std
test
jno
testl
push
mulb
inc
fmull
jle
dec
popa
mov
filds
in
pusha
shrl
shl
in
pop
lods
fsubp
add
es
jne
jae
inc
xlat
push
mov
rcr
in
ja
lret
xchg
in
push
call
divps
dec
mov
cmpl
frstor
sub
jo
or
push
or
jae
add
testb
std
pop
xorb
xchg
push
mov
push
imul
into
adc
cmpsb
or
test
rep
vpshufhw
popf
fldl2e
cmpsb
into
mov
std
dec
out
adcl
leave
xchg
rclb
sbb
pop
bnd
in
ljmp
xchg
xor
iret
jno
rorb
pushf
and
lods
idiv
xchg
lret
sarb
imul
in
sbb
sti
mov
popa
shl
mov
xchg
mov
jp
xor
in
push
cltd
imul
sub
fstl
cmp
jnp
mov
xor
sub
adc
add
dec
or
pop
imul
loop
mov
fwait
sbbl
lock
and
pop
bnd
rorl
cwtl
pop
insl
lret
les
movsl
mov
les
pop
mov
xchg
call
mov
mov
aaa
sbb
movsb
insb
cmp
jae
aas
mov
aam
pop
xchg
not
mov
cmp
sub
mov
call
sbb
lret
and
ret
iret
xor
popa
in
out
mov
pushf
mov
call
mov
ret
enter
dec
xchg
cwtl
jae
push
and
fsubrp
xchg
xlat
sahf
stos
clc
fsubrs
cmp
incb
cmp
mov
push
and
mov
jmp
notl
pop
or
nop
mov
imul
popa
push
add
dec
pop
jnp
or
addr16
insb
push
sub
fsubrs
iret
pop
rclb
xchg
add
inc
cmp
jae
sbb
test
inc
cmp
lods
inc
lahf
lahf
shrl
cld
repnz
fwait
mov
cli
dec
cmp
lock
xor
in
xchg
jae
out
int3
das
mov
loopne
outsb
xchg
and
inc
sub
popf
adc
mov
xor
js
or
loopne
daa
ljmp
push
in
hlt
add
inc
or
mov
jb
mov
pop
out
lds
pushf
jl
mov
adc
sar
in
ds
hlt
inc
pusha
es
xchg
pop
mov
sub
insb
jmp
les
inc
es
inc
mov
mov
test
stc
jo
push
leave
dec
ret
pop
xor
mov
test
scas
pop
mov
cli
fs
push
lahf
ljmp
lret
sti
mov
cmpsl
sbb
jmp
je
in
sub
rcl
mov
data16
jne
jg
jle
dec
dec
sub
dec
in
lods
hlt
jnp
sbb
mov
lds
fmul
mov
mov
mov
mov
cmp
jne
mov
gs
xchg
lea
add
mov
sahf
out
sti
cld
mov
sahf
shlb
ja
xor
ss
sti
and
lcall
mov
jmp
cmp
xor
adc
mov
out
jmp
insl
mov
aaa
aam
fidivs
loop
movsl
cmpsl
out
pop
push
jbe
sbb
add
mov
lahf
ss
cwtl
ds
add
fsubr
test
mov
mov
pop
or
sub
or
sbb
dec
mov
es
les
push
adc
faddp
in
icebp
cmp
fidivrl
sbb
in
fmuls
repnz
cld
lcall
push
mov
aad
pop
ja
ret
pop
mov
cmp
jne
jl
push
push
lods
adc
aas
cs
dec
mov
mov
loop
arpl
fidivrs
mov
sbb
rcrl
rorl
mov
or
pop
rcl
push
andb
ret
loop
push
jp
lods
lds
mov
add
add
push
cmpsl
cmp
sbb
mov
push
or
push
xor
ret
push
in
insl
or
xchg
mov
imul
jge
xchg
repnz
in
sarb
lods
adc
aam
es
nop
add
mov
ret
pop
dec
adc
js
cs
cs
test
js
hlt
testl
int
scas
sbb
test
test
hlt
fcmovne
sbb
leave
sub
mov
out
and
inc
jbe
sti
and
and
loope
pop
push
das
push
mov
mov
mov
adc
rcrl
cmp
ret
dec
stc
je
outsb
sarl
sub
sub
adc
mov
es
dec
push
lds
ljmp
xor
xchg
mov
jbe
adc
mov
add
xlat
sbb
mov
out
mov
jnp
out
fdivrs
cs
lahf
sbb
bound
test
rorl
adc
push
inc
pop
sbb
lods
cmp
sbbl
xchg
inc
push
sbb
pop
lea
jno
or
orl
mov
lods
ret
hlt
or
cmpb
sbb
fcomi
mov
pop
xor
pop
cs
xchg
pop
sub
outsb
xchg
div
dec
cmpsl
fwait
aad
mov
add
inc
mov
iret
call
mov
lods
fsubrl
fcmove
stos
mov
push
or
inc
movsb
cmp
cmc
inc
ret
pop
es
cmp
bnd
out
pusha
sbb
sub
fbstp
mov
pop
fidivl
add
push
push
push
jb
mov
mov
and
inc
out
out
cld
and
mov
fnstenv
mov
or
stos
mov
and
out
mov
loopne
and
mov
sub
ds
pop
arpl
std
lock
std
push
sbb
ret
andl
fisttps
orl
xchg
dec
push
mov
add
pop
pop
add
aam
imul
adc
adc
std
sahf
arpl
test
jle
sub
jae
test
scas
mov
test
imul
mov
mov
mov
es
push
adc
mov
data16
push
lock
gs
mov
or
mov
mov
and
add
mov
dec
mov
dec
aas
push
in
popf
dec
or
mov
mov
fdivs
arpl
int3
add
fdivrs
repz
stc
movsl
cmp
push
ds
test
mov
add
das
nop
lret
lock
jb
stc
mov
mov
adc
loop
dec
xchg
mov
jecxz
rcrl
xor
pop
in
daa
or
pop
push
jmp
push
cmpsb
bound
js
add
mov
jl
leave
arpl
mov
test
cli
lods
jb
fucom
mov
xchg
stc
and
push
test
fisubl
gs
data16
hlt
repnz
sbb
pop
adc
push
pop
test
int3
sbb
cmp
mov
in
aaa
idiv
sbb
inc
push
sub
push
loope
stos
xchg
or
aas
jno
sti
lods
cmc
testl
cmp
cmpsb
clc
sahf
mov
fisubl
xor
pushf
fs
pop
xor
jmp
mov
lcall
cmp
inc
jg
out
popl
add
xchg
imul
stc
popl
mov
dec
das
loop
jecxz
in
fidivl
mov
aas
fdivr
shlb
pop
aaa
cld
arpl
dec
inc
jg
adc
sub
dec
inc
sahf
pop
xchg
and
lret
repz
mov
andl
lods
lahf
jle
mov
and
xchg
sbb
stos
insl
out
adc
xor
push
cmp
adc
xchg
sub
xchg
int
sbb
ret
jb
push
test
sub
cmp
inc
pop
rorb
mov
inc
dec
mov
cli
cmp
fsubs
mov
mov
out
and
lahf
in
mov
and
ljmp
out
std
pop
mov
in
pop
je
adc
addl
cmpsb
fdiv
icebp
cltd
popf
xor
mov
push
xchg
or
sti
mov
das
cmpsb
rcll
cmpsl
dec
push
or
inc
sbb
jae
cmp
scas
repz
ret
leave
sub
jo
xchg
xor
fs
pop
dec
test
bound
add
loop
shrb
cltd
dec
stos
arpl
cmpsb
fisubrl
fbstp
loope
dec
pop
xchg
mov
testl
push
popf
pop
cmp
pop
icebp
pop
fisubl
popf
insl
pop
pop
lahf
cmp
and
gs
push
lods
stc
xchg
push
xor
mov
sti
rcrl
rol
xchg
movsb
sahf
mov
pop
je
js
jge
shl
aad
popf
xor
aas
xchg
inc
gs
aam
inc
mov
out
dec
pushf
push
cld
imul
test
sbb
jne
mov
sti
mov
fnstenv
xlat
sbb
push
ficomps
sub
sbb
jmp
fidivrs
out
pop
pusha
sbb
push
or
testb
cwtl
jbe
add
incl
inc
mov
xchg
aaa
rolb
icebp
pop
adc
pop
addr16
push
xchg
sub
shll
ja
aaa
mov
jne
and
loop
adc
sub
stc
push
je
mov
iret
add
mov
nop
mov
js
das
xor
and
push
outsb
test
movsl
in
adcl
dec
pop
ljmp
ljmp
push
in
je
in
pop
shl
jp
daa
xchg
jae
add
nop
loope
mov
or
in
icebp
out
and
dec
mov
movsl
inc
les
imul
call
ud0
xor
lods
push
push
xchg
insb
or
leave
adc
cmc
mov
inc
push
and
or
adc
imul
adc
xor
adcl
push
pop
lock
das
mov
cmpsl
jp
lea
leave
jo
jae
or
add
jb
cmp
loopne
mul
std
xchg
mov
sbb
out
lret
push
pop
xorl
mov
ds
insl
cmp
xchg
mov
add
mov
lea
fidivl
out
js
jl
pushl
and
or
push
daa
push
sti
add
mov
inc
out
loop
xor
sub
mov
aam
int3
in
mov
shlb
addr16
faddl
fwait
movsl
in
aas
popa
into
sbb
ja
mov
sub
std
leave
push
cmc
add
sti
addl
xchg
enter
stc
add
sub
cs
into
inc
pusha
iret
rorl
arpl
aad
sub
pop
ljmp
gs
jmp
mov
lods
xchg
pop
dec
sbb
loope
push
je
mov
push
mov
lods
xor
push
inc
adc
js
adc
xchg
jne
xchg
and
mov
out
insb
pusha
jmp
pop
insl
repz
and
xchg
adc
rcrb
mov
nop
sbb
sbb
push
xrelease
inc
sub
jle
mov
add
ja
cmpsb
imul
ja
test
sub
push
test
adc
sub
shlb
xchg
mov
test
cmp
enter
lea
jle
ljmp
sbb
daa
lcall
adc
pop
ret
cli
iret
add
call
inc
push
loopne
and
cltd
mov
cli
aas
out
pop
add
clc
add
inc
xor
into
xor
cmp
dec
sbb
xchg
pop
push
push
or
fnsave
add
cmp
rcll
pop
inc
jnp
in
and
adc
pushf
push
popa
mov
int
test
test
mov
cmp
sbb
inc
mov
movsb
je
call
repnz
inc
dec
ds
and
fdivs
lahf
stos
push
subl
and
scas
ds
imulb
mov
cmc
jle
xchg
in
mov
cwtl
movsl
sbb
lds
and
in
jmp
lret
or
and
cld
or
add
andb
stos
dec
dec
xchg
push
rcll
pop
pop
in
fwait
bound
movsb
out
out
pop
cmp
dec
cmp
adc
mov
and
addr16
adc
ja
out
dec
mov
fsubs
or
xorl
and
popf
xchg
or
lods
imul
neg
mov
sub
add
shlb
or
jb
pop
fxch
ss
mov
and
cli
or
clc
sub
dec
add
movsl
movsb
int3
cltd
pusha
je
loop
sbb
cmp
sbb
hlt
int3
cmp
cmc
push
jg
dec
adc
fsubl
adc
cmc
pop
jmp
or
xchg
aaa
push
je
cmp
fs
movsl
cmp
pop
adc
inc
fcom
fisubrs
push
out
hlt
arpl
imul
mov
mov
out
mov
stos
xorb
pushf
pushf
mov
xchg
test
arpl
and
or
mov
adc
jbe
in
mov
call
push
inc
xorb
cmp
cmp
lea
mov
jnp
mov
call
mov
cld
inc
cld
aaa
adc
bound
aas
enter
inc
stc
icebp
nop
out
das
pop
adc
adc
int3
mov
insl
std
bound
fwait
shrl
movups
cmp
cmc
aaa
mov
jne
xlat
das
sub
loope
jnp
inc
out
cmp
inc
movsl
mov
xchg
test
mov
jb
pop
cmp
clc
push
ljmp
add
cmp
imulb
jg
mov
jecxz
xchg
xchg
jge
aad
mov
es
sbb
insb
mov
ja
movsb
test
cld
frstor
inc
loop
xorb
aaa
mov
popl
mov
push
or
lds
or
push
pop
icebp
mov
jo
sub
rol
jp
jl
xor
push
add
sub
adcb
push
xchg
xor
dec
pop
mov
fcomps
xor
pop
mov
adc
cmp
mov
sub
and
mov
leave
mov
sub
outsl
adc
sbb
xor
subl
push
aas
or
stos
xchg
rcrb
pop
inc
dec
and
jl
pop
cmp
mull
rcrb
rclb
adc
stos
xchg
sahf
shlb
jnp
mov
lods
add
jae
or
fst
imul
es
icebp
int3
gs
jg
jne
inc
xlat
xlat
dec
lods
mov
add
cmp
call
fst
int
and
mov
push
mov
lea
inc
lret
lock
adc
xchg
jecxz
and
mov
push
clc
and
xchg
cmpsl
sbb
fbstp
shll
sub
pop
lock
mov
and
xor
pop
inc
aaa
pop
out
enter
push
or
jge
loope
pop
movsl
mov
sub
decl
sub
xchg
xor
arpl
sub
scas
stos
pop
fdivs
xchg
jb
mov
mov
es
repnz
cmp
das
jg
jecxz
dec
add
jmp
imul
mov
bt
aad
or
push
movsb
xor
pop
mov
rcll
mov
cmp
add
das
sbb
mov
lcall
test
cmp
pop
xchg
repnz
hlt
jns
push
mov
inc
or
mov
stos
ffreep
inc
stc
decl
mov
mov
fisubl
btr
jl
or
jmp
or
sahf
push
add
lods
mov
jnp
dec
mov
sbb
sbbl
xchg
sub
xlat
cmc
dec
mov
fs
in
bt
out
jbe
dec
inc
sti
dec
scas
fstpl
xorb
test
sub
jb
fdivs
and
shrb
and
in
jge
hlt
inc
lds
push
test
lock
xlat
sub
mov
jne
jne
in
push
clc
push
push
adc
add
and
sbb
incb
in
sub
nop
mov
sbb
sar
dec
add
and
popl
xchg
pop
push
sbb
outsb
movsl
mov
dec
dec
imul
xchg
movsb
add
jmp
dec
add
pop
xchg
mov
pop
and
adc
mov
xor
cmp
fadds
arpl
adc
xor
sarl
cmpsl
dec
call
push
jo
cmp
xorl
daa
dec
jns
cmp
aad
ds
cmpsl
out
pop
test
adc
int3
pop
movsb
cmpsl
and
push
jge
jb
jbe
out
loop
cli
test
inc
lret
xor
pusha
sbb
sub
ljmp
popf
cmp
ds
rcll
out
jnp
jp
sbb
imul
rcrl
sbb
ror
mov
or
and
pop
mov
nop
xor
cmp
std
sbb
or
repz
andb
jmp
call
mov
sbbl
roll
leave
adc
enter
pop
mov
test
popl
cmp
mov
mov
scas
call
and
cwtl
out
test
mov
popa
mov
sbb
jo
loopne
xor
push
jns
ret
mov
rcll
dec
imul
pop
out
jecxz
jg,pn
outsl
sarb
into
pop
sbb
shrl
mov
jnp
or
lret
pushf
cmc
jecxz
loopne
repz
jl
rcrl
inc
sbb
sbb
dec
pop
mov
dec
mov
rol
jl
in
std
and
adc
es
pop
push
cmp
out
arpl
movsb
std
aaa
sub
and
cmp
outsl
cmc
push
xchg
push
or
rorl
xor
sbb
lds
daa
cmp
mov
add
das
pop
dec
inc
add
aaa
sbb
mov
pop
stc
bound
scas
les
stc
arpl
nop
imul
jae
mov
jl,pt
xor
mov
loop
sbb
loope
inc
pop
push
mov
sub
bound
je
ret
insl
rolb
ss
imul
adc
insl
bound
ret
aam
pop
int3
daa
jno
and
cmp
push
mov
xor
and
movsl
cmp
out
cwtl
das
and
mov
out
js
xchg
stos
or
dec
pop
int
in
or
adc
mov
dec
mov
adc
stc
dec
loopne
xchg
or
call
xchg
adc
aaa
stc
mov
pop
mov
imul
jg
in
jle
xlat
mov
mov
lds
filds
popf
rolb
clc
jmp
mov
dec
mov
fxch
in
mov
leave
out
sbb
sti
add
push
outsb
iret
cwtl
fs
mov
jbe
test
orb
cmc
mov
add
aam
dec
cld
mov
push
fildll
negb
dec
clc
xchg
jp
xchg
cwtl
test
push
add
lea
inc
push
sbb
xor
add
pop
movsb
rorb
xchg
aad
mov
jbe
mov
push
xlat
aas
mov
outsl
pop
mov
mov
sbb
sub
sbb
repz
mov
add
pop
out
cmp
int3
jge
loope
divl
add
test
xor
mov
testl
outsb
aad
push
jge
xchg
pop
outsb
jnp
movsb
push
mov
cmp
pop
imul
in
je
scas
rcr
mov
add
mov
and
add
jne
sbb
pop
enter
jbe
popf
xor
mov
cmp
push
ds
ljmp
mov
and
inc
pop
jg
out
jecxz
xchg
push
addl
jno
mov
and
cmp
lods
lock
pusha
aam
scas
add
pop
repnz
ret
and
clc
je
sbb
pushf
in
cmpsl
xchg
and
and
lods
inc
xor
rclb
in
in
loopne
inc
sahf
je
fnstcw
daa
outsb
in
leave
push
dec
fnstenv
push
or
movsl
jns
inc
shll
addr16
fcmovbe
mov
add
add
and
sub
fcomp
jo
pop
lret
bound
cmpsb
in
fisttpl
not
int
sbb
xchg
jns
jmp
mov
add
inc
jae
lods
push
in
push
inc
xchg
mov
inc
xchg
and
mov
hlt
jecxz
xchg
jne
gs
dec
push
push
lods
inc
ja
sbb
popa
int
push
pop
inc
xor
jmp
push
mov
jle
xchg
cmp
les
mov
inc
fcompl
pop
and
xchg
sub
shll
cwtl
mov
or
sub
add
add
test
jno
nop
scas
fisubs
lahf
mov
mov
add
xor
sbb
lea
mov
les
lret
sbb
adc
stos
or
jp
inc
sbb
lock
js
xchg
nop
lods
lock
xchg
mov
jbe
xchg
cmpsb
and
fwait
push
xchg
js
dec
lcall
jne
or
bound
sbb
cs
cmpsl
jmp
dec
sbb
adc
lret
das
mov
jne
inc
imul
sub
mov
add
cwtl
push
mov
gs
inc
shl
cmc
cmp
mov
add
dec
out
xchg
test
push
enter
inc
mov
push
outsb
xor
jecxz
mov
cmp
fbld
ret
mov
sahf
fsts
cwtl
insb
shlb
test
push
xlat
movsl
sub
mov
push
jmp
xchg
mov
and
or
jge
pop
outsb
mov
scas
scas
sbb
stos
jbe
pop
sbb
and
adc
mov
pusha
inc
pusha
jge
or
scas
stos
mov
call
push
inc
sahf
cmp
adc
iret
repz
jmp
jno
xor
jle
hlt
jae
jns
scas
and
stos
sbb
push
pop
cmp
push
js
loopne
insb
sub
test
andb
pop
pushf
icebp
xchg
xchg
sub
insb
insl
mov
dec
mov
outsb
mov
sbb
repz
pop
int
pop
add
ret
pop
cmp
rol
and
adc
dec
sub
cmpsl
pop
mov
not
repnz
jmp
adcb
mov
push
mov
push
stos
sub
push
repnz
mov
adc
test
pop
inc
je
jmp
cs
fwait
sarl
push
adc
adc
push
lahf
arpl
sbb
push
cmp
cltd
imul
lcall
jb
jnp
sub
out
inc
sub
mov
outsl
push
mov
roll
or
call
and
lret
bound
add
jle
and
cmp
jae
mov
out
decb
bound
jns
adc
fcomp
push
sbb
jb
std
sub
add
sbb
dec
je
push
sti
lcall
data16
inc
ret
push
mov
decb
mov
out
rcrl
and
lret
mov
push
imulb
or
cld
lcall
jne
sub
pop
insl
hlt
mov
in
icebp
mov
adc
push
push
int3
sub
pop
mov
lahf
push
mov
bound
ja
lods
fcoml
xchg
pop
lock
mov
push
lcall
pop
xlat
out
inc
lds
mov
insl
mov
add
jl
xor
pop
dec
sub
push
insb
cltd
hlt
cmp
push
xor
inc
dec
int3
cmp
push
dec
les
push
insl
pusha
mul
mov
sbb
lods
adc
adc
mov
add
shrb
inc
ret
pop
add
mov
inc
add
mov
stc
andl
test
leave
leave
out
in
xchg
ljmp
jo
mov
out
xor
xor
mov
dec
iret
loope
scas
jmp
or
sahf
xor
scas
mov
pop
jne
pushf
shl
test
int
jae
sbb
insb
aaa
int
mov
push
inc
and
ret
ficompl
push
dec
in
lcall
movsb
insb
dec
decb
xor
rorb
loopne
rol
ja
je
mov
popl
push
xchg
adc
dec
push
mov
std
mov
push
dec
lcall
cmp
pop
sbb
xor
xor
jmp
add
mov
mov
jo
or
rorl
xchg
adc
mov
pop
sub
scas
jno
loopne
cmc
cmp
mov
push
lahf
outsb
push
in
scas
ror
addr16
ret
call
mov
inc
cmpsb
mov
shrb
test
sbbb
stos
cli
push
and
cli
xchg
adc
xor
imul
out
xchg
adc
inc
insl
les
pop
sub
xchg
jbe
shl
ja
out
pop
cmp
jno
in
pop
push
fsubs
push
pop
pusha
pop
add
add
dec
arpl
stos
sbb
outsl
imul
cmpl
mov
jg
paddsw
inc
cmp
mov
push
jb
out
xchg
sbb
test
je
repnz
cmpsl
pop
or
and
ja
fsubr
add
sahf
dec
arpl
cmp
push
sbbl
jne
rcrb
mov
jecxz
jb
clc
or
push
js
or
loopne
int
rcrb
push
xchg
pushf
loop
sbb
pop
sbb
xchg
cltd
mov
dec
aad
jmp
pop
pop
or
push
sub
add
cmpsb
stc
or
adc
addr16
dec
and
pop
movsb
mov
jle
mov
ja
dec
fbstp
in
adc
scas
push
pop
lret
arpl
jae
fwait
xor
adc
into
pop
mov
push
pop
repz
cmpsb
in
mov
mov
cmc
icebp
mov
sbb
inc
into
bound
jp
jno
push
out
test
clc
aas
xchg
jp
lahf
jl
movsl
rcr
cli
mov
adc
mov
pop
mov
sahf
inc
sub
outsl
jno
pop
pop
pop
dec
nop
push
xchg
in
pop
xor
jnp
cmp
or
sbb
pusha
mov
mov
mov
mov
push
jmp
cmpsl
mov
mov
loope
gs
xor
daa
add
mov
or
scas
and
inc
nop
icebp
cli
xchg
int3
les
mov
adcl
jmp
adc
mov
repnz
push
mov
xlat
insl
repz
scas
in
mov
dec
outsb
adc
adc
sbb
mov
add
iret
je,pt
xor
sub
pop
cmpsl
xchg
popf
xor
roll
aas
sbb
jne
outsb
sub
or
sub
addl
testl
loope
enter
scas
repz
cmp
mov
jbe
and
jge
insb
js
sahf
pushf
das
inc
jmp
sub
mov
push
addl
mov
test
cmpsb
sub
loop
and
out
cltd
xlat
push
cltd
mov
std
jo
subl
push
mov
lret
pop
mov
movsb
cmp
adc
neg
nop
jl
mov
push
dec
cmp
dec
jne
test
jg
repnz
jle
ljmp
sub
cs
cmc
add
and
leave
sti
xchg
sti
test
cmpsb
in
loopne
push
adc
mov
pop
add
insb
fwait
and
pop
fidivl
repnz
pop
inc
icebp
fisttpll
cltd
lock
lret
jnp
cltd
mov
and
sbb
mov
test
out
pop
fs
push
and
lret
iret
mov
adc
rclb
lret
xor
and
mov
test
mov
inc
adc
es
cmp
and
xchg
sbb
popa
mov
gs
cmpsb
mov
inc
add
insb
cmpsl
inc
jmp
add
int3
out
ja
mov
adcb
lods
fdivs
xchg
or
jbe
inc
ljmp
xor
sub
dec
sbb
cmp
cmp
pop
or
dec
push
lds
test
sub
movsl
sbb
lret
fsubrs
lock
xcrypt-cfb
cmpsl
data16
or
sar
daa
inc
mov
inc
movsl
lods
sub
jb
dec
xor
ror
ret
xchg
hlt
mov
pop
dec
dec
adc
jecxz
jae
sub
sub
icebp
mov
pop
loope
cmp
mov
enter
xor
push
jns
in
call
or
loopne
add
or
mov
aaa
mov
jg
xor
pop
sbb
mov
loop
loope
adc
cltd
out
and
push
sti
xchg
arpl
jbe
jge
or
cmp
dec
lock
dec
push
and
ja
cmp
adc
loop
xor
insl
sub
enter
mov
mov
adc
push
subl
jl
xlat
lods
lret
ds
or
sahf
sbb
and
outsb
outsl
loope
mov
push
mov
push
adc
dec
xor
fs
repnz
xchg
and
ljmp
cmp
repnz
mulb
fwait
dec
cmp
sub
fcompl
ljmp
gs
xchg
or
dec
cwtl
nop
enter
dec
cmpsb
aad
testb
fists
xorb
push
inc
imul
dec
push
mov
scas
vpunpcklwd
or
loop
arpl
dec
mov
jp
xchg
lret
push
jmp
xorb
fidivrl
into
xchg
jmp
enter
mov
movsl
sbb
popa
les
mov
call
pop
cmpsl
clc
push
xor
pushf
iret
test
rcl
aad
and
xchg
mov
lds
shl
pop
mov
cmp
pop
dec
aad
stc
jg
movsb
lock
jecxz
rcll
sub
mov
pop
into
pop
add
and
roll
push
mov
xchg
nop
or
pop
andl
and
sub
mov
outsb
mov
mov
scas
add
inc
cmp
inc
loope
daa
in
or
sbb
xchg
test
mov
mov
cmp
adc
sarl
and
add
mov
aaa
testw
adc
inc
mov
mov
outsl
push
add
fists
es
pop
xor
jne
das
sub
dec
xchg
jno
xchg
outsb
push
ljmp
jb
adcl
adc
jnp
test
in
loope
xchg
test
mov
jnp
loopne
call
inc
sub
call
push
fldenv
dec
jbe
xchg
test
iret
fimuls
into
cmp
js
shrl
sbb
dec
mov
pop
aam
lahf
repz
std
mov
push
das
dec
mov
dec
adc
cmp
push
dec
in
nop
sbb
fidivl
pop
arpl
push
leave
subl
cmp
gs
mov
xchg
inc
movsb
dec
inc
aaa
andl
addr16
insb
jb
cmp
adc
dec
movsl
js
shll
aam
int3
pop
pop
or
dec
adcb
aas
les
push
cwtl
sbb
enter
adc
adc
inc
dec
jae
jb
into
sbb
mov
xor
push
sub
outsb
fs
cmpsl
arpl
ret
xchg
lock
add
sub
insb
loope
clc
mov
adc
test
push
cs
xor
add
shrb
and
dec
test
inc
xor
scas
xchg
gs
jmp
add
and
inc
addb
mov
fwait
adc
and
push
xchg
jmp
stos
push
xchg
cmpsl
push
mov
mov
ds
mov
test
ds
and
mov
aas
xor
or
in
dec
mov
test
insb
push
arpl
cmpsl
shrb
jecxz
repnz
daa
ljmp
lahf
addr16
pop
fwait
push
xchg
out
lods
aas
bound
mov
into
aad
ret
lahf
mov
adcb
and
addr16
imul
insb
sarb
sbb
pop
lds
icebp
adcl
pop
cmp
ljmp
dec
fldl
fldcw
addr16
gs
pop
mov
psrld
test
inc
fdivs
roll
daa
sub
call
cmp
pop
mov
dec
enter
jo
xrelease
popa
icebp
or
dec
in
cmpl
push
jne
movsl
insb
jl
cmpsl
test
mov
mov
loopne
mov
cmp
addr16
push
test
stc
mov
nop
push
lods
sbb
jno
cmpsl
xor
mov
jae
push
popf
pop
mov
dec
scas
ss
cs
jne
hlt
xchg
add
daa
lcall
inc
push
ja
aas
and
cmp
jb
dec
dec
not
inc
fldl
jno
xchg
test
fs
mov
push
jo
jmp
jne
push
icebp
out
xchg
mov
outsb
sbb
dec
jge
pop
mov
mov
notb
fcomps
and
xchg
subb
add
sbb
mov
nop
xchg
or
xorl
mov
push
cmp
mov
ret
mov
sub
loopne
scas
mov
add
jp
push
outsl
push
lods
xor
push
mov
inc
loopne
rcll
and
jecxz
ja
lahf
add
loopne
jnp
lret
push
subl
fimull
or
jge
cmp
mov
stos
lcall
push
jnp
int3
cs
shll
pop
push
mov
cli
insb
popf
xor
fiaddl
jo
adc
mov
in
test
or
sbb
out
mov
add
lods
or
and
rol
stc
repnz
aad
stc
inc
push
or
jmp
outsb
ret
jo
call
or
add
dec
bound
cltd
data16
cmp
punpckldq
je
sbb
in
pusha
xchg
cmp
mov
push
es
sub
xor
arpl
jne
push
mov
mov
ficoml
cmpsb
out
sbb
or
or
sub
mov
fdivl
jbe
insl
mov
bound
sub
mov
sub
in
std
repz
hlt
sub
sub
add
testb
test
sbb
repz
aam
cltd
neg
sub
push
cmp
pop
std
cltd
xchg
adc
jne
mov
pop
push
in
add
push
inc
dec
scas
mov
mov
shrl
xchg
mov
push
mov
ss
jmp
cld
into
fdiv
jle
pop
das
pop
and
loopne
push
cmp
inc
aam
jno
mov
xlat
and
sbb
inc
jae
mov
rolb
ja
mov
pop
out
and
fnstcw
movsb
pusha
or
jbe
dec
mov
ljmp
sti
dec
inc
movsl
xchg
je
outsl
rcll
push
mov
mov
mov
iret
add
in
or
mov
mov
xor
jecxz
ficomps
sbb
cmp
cmp
insb
dec
push
cwtl
inc
cmp
push
outsl
dec
push
inc
fwait
insb
stos
in
jns
mov
idivb
movsb
xlat
add
mov
clc
imul
pop
xchg
dec
lods
add
cltd
add
inc
push
mov
xrelease
gs
int3
mov
fst
dec
test
push
popf
shlb
fwait
test
pop
jecxz
movsl
bound
mov
fiadds
fwait
cld
icebp
jns
and
por
push
sti
jnp
dec
outsl
xchg
std
or
pop
movsb
dec
sub
jp
in
pop
sub
mov
push
lods
inc
jne
inc
push
jbe
xlat
mov
mov
scas
cmc
or
leave
pop
push
add
int3
mov
mov
ds
xchg
dec
arpl
inc
mov
lock
shlb
sbb
inc
cmp
into
lret
arpl
rcpps
lret
jo
pop
lods
or
out
jle
push
shrl
inc
sub
loopne
mov
jbe
ljmp
test
mov
xchg
daa
cmpsl
test
xchg
push
or
dec
sti
jmp
inc
aas
xchg
ret
roll
add
jo
or
or
inc
xchg
and
mov
mov
pop
dec
shl
cmp
fisttps
je
mov
imul
adc
fwait
out
mov
clc
gs
xchg
add
pop
adcl
loope
pop
fiadds
arpl
sub
and
out
scas
repz
xor
fs
lret
cld
or
or
cli
lret
int3
sbb
cmp
adc
popl
in
repz
and
ja
scas
pop
sub
mov
xchg
mov
sbb
out
sbb
jl
mov
adc
fstpl
cmc
sub
out
loop
ret
lcall
hlt
xchg
scas
test
test
xchg
dec
enter
cmp
dec
fstps
loope
push
xchg
in
inc
fdiv
mov
push
outsl
sub
mov
jnp
in
pushl
loope
ss
mov
xchg
mov
or
mov
sbb
lahf
das
xchg
sti
or
inc
jne
mov
xchg
ret
inc
out
out
cli
pushf
mov
in
adc
jo
or
test
mov
in
sub
int
sub
lods
jge
cmp
movsl
std
pop
jg
dec
pop
pop
lahf
or
leave
mov
loopne
inc
sarb
pop
mov
andl
mov
adcl
data16
inc
icebp
cmp
sbb
sbb
jno
sarl
xchg
sub
call
and
rolb
push
dec
cmpsb
xorb
jo
sbb
jg
xlat
cmp
xchg
js
push
stos
sub
fstps
mov
inc
push
in
sbb
jge
dec
je
repz
mov
dec
das
outsb
cmp
add
imul
jmp
mov
push
popa
add
mov
pop
leave
inc
stos
jae
arpl
inc
inc
fiadds
ja
or
sbb
jmp
imul
push
mov
or
addr16
int
decl
push
mov
xchg
sub
jae
clc
lret
sbb
pop
sub
and
lods
lahf
jno
jno
insl
lret
imul
lret
inc
cwtl
cmp
push
mov
pop
jae
fistl
outsb
stos
in
jo
ds
ja
loopne
inc
sbb
jbe
in
push
push
out
mov
cmp
xlat
sbb
add
aas
jmp
outsb
add
cmp
in
push
add
mov
int3
pusha
mov
out
dec
mov
popf
or
divb
shrl
sahf
mov
dec
loope
xor
xchg
sbb
idivl
add
popf
xor
lods
imul
mov
dec
mov
or
cs
mov
mov
inc
fcoml
iret
xor
fidivrs
and
pop
movsb
test
xor
mov
ds
mov
cs
mov
pop
sub
adc
mov
jge
repnz
out
in
aas
lcall
adc
scas
push
nop
cmp
andb
scas
insl
sub
gs
jb
mov
iret
je
dec
pop
xchg
jle
ret
scas
mov
fdivs
cmp
cli
andl
xchg
jo
out
jne
lret
es
xchg
xor
pusha
mov
sti
cmp
std
out
or
jecxz
call
leave
call
stc
dec
xor
add
lea
and
bound
jo
outsb
xor
out
dec
std
pop
icebp
cmp
aad
test
call
or
fs
fidivl
pop
jne
dec
sbb
es
adc
mov
cmpsl
add
insb
dec
xlat
mov
sub
pop
sub
push
or
lock
cltd
lahf
test
dec
xchg
dec
int
or
imul
test
cmp
arpl
xor
clc
mov
and
push
xchg
cmp
mov
sbb
dec
lods
es
push
jmp
scas
dec
leave
shlb
pause
outsb
jne
xor
dec
jmp
in
test
idiv
jg
or
insb
mov
mov
test
adc
iret
cmp
mov
mov
in
push
cmp
dec
outsl
mov
das
add
shlb
and
add
and
data16
push
fmul
mov
stos
inc
xor
lods
pop
ficomps
sub
sbb
xchg
jp
icebp
dec
mov
push
shrb
es
inc
pop
push
and
mov
mov
cmp
xor
pop
lret
lret
sbb
movsl
popa
push
outsl
mov
stc
pop
xchg
add
jb
lock
iret
xlat
rcrl
lds
lret
hlt
pop
cmp
rcr
and
out
imul
clc
push
cltd
int
mov
push
mov
jne
mov
pop
mov
mov
mov
loope
pop
or
daa
jmp
and
je
insb
imul
orb
mov
push
pusha
test
mov
mov
lahf
jmp
in
test
ja
outsb
hlt
push
movsl
shrb
pop
mov
xchg
adc
rorl
in
mov
jae
adcb
xchg
data16
pop
mov
adcb
xorl
add
test
or
psadbw
mov
je
in
sub
push
out
aam
data16
outsb
aad
mov
push
jbe
mov
sets
pushl
xchg
sub
inc
test
dec
loopne
popa
jmp
fdivs
test
pop
addr16
or
mov
imul
repz
div
int3
movsl
and
dec
inc
fidivrs
call
or
cs
scas
fistpl
or
jg
sub
cmp
pop
loope
pop
mov
mov
cmp
adc
xorl
sub
cmp
fiadds
inc
xor
xchg
mov
ret
out
jb
pusha
push
fsubrs
aas
test
cmpsb
fld
loopne
filds
push
jg
xchg
mov
push
test
adc
xchg
loope
adc
std
int3
xchg
dec
cs
cmc
pusha
fsubs
cmp
dec
mov
imul
je
int3
filds
adc
cmp
inc
xor
mov
jbe
add
sbb
aas
in
lahf
sub
inc
add
fwait
ret
xor
mov
je
jg
imul
jp
dec
cmp
add
outsl
imul
ljmp
outsl
push
lahf
dec
adc
icebp
lock
repnz
ljmp
adc
ss
pop
mov
pop
test
jmp
jg
loopne
jns
pushf
add
aam
movsl
fdivl
loope
ljmpw
or
mov
add
fstps
dec
jl
pop
ljmp
cld
adc
xchg
aam
xchg
jae
lahf
or
in
neg
into
enter
mov
ret
jo
mov
push
cltd
fcompp
mov
mov
add
mov
inc
ljmp
int3
push
out
mov
outsb
in
nop
ret
xchg
jmp
or
mov
and
jb
pop
les
movsl
add
stos
rol
fisttpl
dec
dec
cmp
cmp
cmp
repnz
sbb
mov
mov
lea
inc
dec
sbbb
push
cmc
mov
xlat
sub
and
sub
out
imul
mov
add
arpl
out
popf
shrb
imul
ret
imul
add
jge
cmp
das
jnp
daa
addr16
push
xor
test
sbb
movsb
sbb
lds
dec
push
sub
in
xor
xor
scas
push
adc
mov
loop
out
xchg
add
mov
out
test
movsb
sbb
and
shlb
jmp
dec
pop
sti
inc
movsb
pop
jge
mov
lock
jmp
jnp
jnp
cmc
scas
pop
mull
std
dec
mov
cmp
adc
movsb
sbb
adc
mov
mov
push
fistl
stos
lds
stos
test
pop
mov
in
xchg
jp
sti
sub
loope
mov
mov
fiadds
adc
inc
push
cmpsl
xchg
cmpsl
popf
sub
jns
cs
xchg
out
imul
pusha
xorb
and
ds
fs
push
daa
pop
scas
lods
into
jl
daa
pop
mov
mov
sub
enter
cmp
mov
jae
xor
scas
sbb
int3
add
cmp
call
ficomps
pop
iret
mov
xor
jmp
loopne
lcall
xchg
inc
dec
repz
or
mov
push
push
loop
adc
sbb
cmp
xor
leave
pusha
pop
stc
jp
cld
sub
mov
cs
lods
add
outsl
jnp
sub
pop
and
negl
dec
stos
mov
xchg
aam
es
repnz
dec
out
and
xor
fdivs
fidivl
aam
int3
xchg
sahf
push
pop
out
push
js
mov
add
mov
xchg
adc
xchg
pop
sbb
movsb
mov
aam
add
pop
inc
xor
lcall
insl
sti
xchg
mov
pop
sbb
and
stos
out
sbb
insb
jo
push
out
push
outsb
adc
scas
popf
mov
xchg
jb
repz
inc
sbb
mov
jecxz
dec
add
adc
outsl
les
mov
nop
mov
dec
mov
cmp
sbb
int
inc
xor
jl
push
ljmp
jno
cmpsb
xchg
pop
test
push
pop
xor
inc
daa
mov
loopne
mov
push
in
repnz
mov
aam
xor
flds
fsubl
add
cmp
fwait
cs
cmpsb
in
test
test
ss
adc
jl
jmp
lods
fdivrs
fcmovnb
push
or
jno
out
pop
mov
cmc
lret
cwtl
lret
fisttps
push
sbb
add
icebp
jge
movsb
inc
cltd
fidivl
fwait
aaa
pop
and
add
daa
jp
mov
icebp
cmp
or
aam
dec
pushf
jg
xor
cmpsb
push
out
int3
dec
inc
fdivrs
idivl
loopne
mov
mov
adcl
stos
mov
out
jb
pusha
pop
lahf
mov
or
jg
cmp
rorb
cli
popf
mov
xchg
jg
imul
pop
sub
push
or
out
and
fs
fidivl
and
xor
and
push
mov
sbb
xchg
xor
pop
sub
xlat
arpl
mov
and
cltd
push
stos
stc
cmp
cmp
lock
sarl
bndstx
cltd
out
popf
inc
cmpsb
push
mov
pop
je
aam
add
es
loop
mov
inc
mov
lcall
inc
pusha
cmpl
jl
jl
je
and
outsl
xchg
xchg
loope
cmpsl
test
ljmp
push
mov
cmp
xchg
pusha
imul
push
enter
and
int
add
into
test
mov
stos
loop
sub
adc
jo
jns
pop
mov
mov
scas
push
pushf
into
loope
fcmovb
js
and
movl
sub
aad
jo
sbb
sub
rorl
dec
jns
aas
sub
inc
and
inc
popa
adc
xor
repnz
cwtl
jge
adc
orl
add
scas
fcom
stos
orl
cs
pop
xlat
push
mov
dec
mov
mov
cmp
xor
fwait
sarl
mov
mov
mov
cltd
push
scas
cwtl
push
pop
pushf
adc
mov
insl
sbb
ret
pop
repz
out
ret
repz
notl
push
or
push
push
pop
fwait
imul
jno
xchg
popa
loope
or
sbb
in
test
pushf
mov
push
push
cltd
test
xchg
aad
and
mov
ljmp
call
je
filds
xchg
arpl
mov
mov
cmc
outsl
or
mov
jecxz
mov
mov
pop
outsb
xor
outsl
ljmp
dec
jmp
cmp
popa
mov
jbe
in
aaa
and
sbb
shlb
mov
rorb
ss
cmp
and
and
andl
jmp
movsb
push
out
xor
xor
enter
int3
pop
les
mov
cld
loopne
fs
xchg
sbb
add
jbe
stos
push
les
jmp
pop
rorb
mov
and
pushf
icebp
or
lret
dec
loopne
cltd
lret
cmp
push
sahf
xor
or
bound
movsb
sub
sbb
inc
movsb
mov
pop
fs
inc
in
cmpsb
out
adcl
mov
adc
arpl
and
adc
xor
push
ficompl
add
idivb
push
jns
sbbb
dec
fucomi
xchg
in
scas
sub
dec
jne
andb
jne
arpl
or
sarl
mov
loopne
inc
movsl
sbb
iret
orb
fsubr
jl
add
or
mov
popf
xor
out
dec
ljmp
lods
adc
pop
push
loop
andl
lds
movsl
sbb
testl
nop
add
test
pushf
sbb
and
inc
pop
and
push
mov
sahf
sub
fldenv
nop
and
push
or
adc
les
mov
out
sbb
adc
testb
add
hlt
xor
mov
arpl
mov
ljmp
mov
addr16
jmp
adcl
cmp
scas
insl
popf
sub
jbe
jne
jae
gs
xchg
mov
lahf
ret
jp
out
loop
pop
stos
lods
nop
sub
or
jne
dec
or
aas
xor
cltd
leave
push
shl
jg
test
test
imul
jne
mov
mov
popa
hlt
cmp
jno
add
rorl
mov
mov
test
sbb
push
sbb
fisubl
ss
cli
add
xor
and
pop
jne
lret
arpl
xor
sub
sahf
ss
and
lea
mov
mov
lret
insl
ds
clc
adc
or
out
aas
pop
cmp
idivb
xchg
movsl
xchg
dec
test
cmp
testl
push
aam
jb
gs
jl
and
lds
imul
xchg
and
ljmp
std
push
mov
push
and
aas
xor
push
cmp
xchg
call
test
jge
mov
xchg
jp
mov
cwtl
dec
outsl
shl
inc
jecxz
sti
or
mov
pop
jmp
mov
inc
add
aad
notl
jmp
cs
jnp
lcall
push
sarl
add
lret
shl
dec
sub
jge
adc
rolb
pop
sti
xchg
or
into
xchg
pop
and
mov
clc
sub
xchg
and
cmp
shrl
jge
nop
clc
pop
xor
jbe
sub
jg
aad
pop
adc
xor
and
insl
sbb
mov
jbe
xor
xchg
pushf
gs
in
cmp
leave
sub
sub
jnp
inc
pop
negl
or
xor
sbbb
in
outsb
adc
aas
pusha
popa
imulb
aad
push
and
icebp
aaa
fsubl
mov
sbb
push
xor
test
jb
jge
add
out
xchg
in
in
adc
stos
pop
fsubrl
test
js
sti
and
fwait
cmpsb
testl
data16
rcrb
push
mov
pop
icebp
adc
lret
jg
mov
xchg
pusha
jp
cmp
xchg
ljmp
sbb
mov
enter
imul
orl
cmp
mov
aaa
jo
jns
cltd
jne
cltd
movsl
ret
sbb
pushf
mov
or
add
mov
sbb
cli
jl
mov
xchg
lret
push
sbb
cld
add
clc
or
push
xchg
sub
int3
arpl
xchg
outsb
mov
loopne
and
scas
add
sub
jle
sub
pop
lcall
sbb
add
ljmp
out
into
fcmove
cmc
pop
inc
das
or
xchg
sub
xchg
dec
ljmp
mov
addb
mov
cmp
loop
ds
mov
sbb
orb
js
outsl
inc
ficomps
push
and
xor
add
pop
cmpsb
inc
cmp
jge
int3
sbb
cwtl
mov
fists
cwtl
xlat
xor
sbb
data16
outsb
iret
jbe
push
fcmovu
test
rcll
in
aaa
cwtl
xchg
fdivrs
pop
lret
clc
sub
out
dec
pop
pop
loope
je
mov
mov
int
mov
or
xor
xchg
out
insl
inc
sahf
jne
fdivrs
loopne
sbb
lods
inc
ds
mov
sub
cmp
inc
push
imul
sub
aam
push
sub
scas
rclb
out
sub
ficoml
push
inc
js
adc
fimull
adc
insl
xor
ljmp
test
add
jnp
jp
pushf
pop
aas
lret
mov
cmpsl
cmp
jle
mov
sbb
shll
addr16
pop
mov
lds
pusha
mull
mov
arpl
daa
mov
cmp
lea
adc
lahf
cltd
xchg
daa
mov
les
rorb
or
cmp
jnp
ds
cltd
and
jp
adc
cltd
lret
push
inc
fdivl
shll
adc
lods
inc
cmpsb
insl
stc
nop
cmp
dec
movsb
leave
enter
insl
sub
imulb
fsubp
test
mov
ret
ror
xchg
sub
ss
in
and
jo
mov
enter
test
out
ja
lods
sub
js
pop
dec
fiadds
or
movsb
shll
add
ljmp
inc
xor
and
shrl
xchg
sub
out
push
and
xchg
fmuls
or
movsl
inc
in
pop
sbb
or
push
dec
sbb
lret
loopne
mov
lret
pop
push
pushl
leave
mov
xchg
sarl
dec
in
std
popa
lahf
js
lock
add
sbb
ljmp
cltd
sub
pop
in
adcl
imul
cld
jmp
lea
sub
out
xor
ljmp
jg
sahf
data16
mov
mov
push
fcoml
mov
pop
je
add
icebp
loope
xchg
pushf
and
add
shlb
ljmp
xchg
rcl
cld
or
mov
enter
push
jle
rolb
pop
orb
or
sub
and
or
or
jns
das
loope
mov
or
jg
pop
pop
leave
ss
inc
mov
xor
outsb
cmc
fcoml
push
mov
mov
movsb
mov
pushf
or
jmp
cmpl
in
test
jae
xchg
sub
or
jecxz
cmp
or
dec
loope
cmp
imul
xor
pop
nop
mov
add
jge
mov
add
xor
ljmp
ds
sti
out
sub
xchg
mov
adc
sub
or
xor
xchg
enter
jp
push
mov
stos
jne
xchg
out
hlt
adc
fsubr
in
bound
pcmpeqb
das
mov
push
adc
mov
pushl
pop
addr16
add
loopne
pop
sub
push
lahf
pop
inc
sub
lret
xchg
jae
jmp
popf
pop
iret
inc
jbe
addr16
and
mov
ljmp
roll
add
or
daa
or
jmp
int3
push
sub
sub
xchg
add
stos
es
inc
mov
push
bound
mov
xor
xchg
sbb
cli
xchg
cmp
push
pushf
xor
imul
out
lods
mov
lahf
ss
mov
and
or
push
and
dec
xor
test
addr16
xchg
jle
rcl
popf
xchg
pop
jl
cwtl
xor
pop
lahf
cmp
cwtl
mov
jae
pop
cmp
js
iret
imul
and
cwtl
addr16
stos
aas
pop
cwtl
jae
mov
pop
cmp
sbb
dec
and
cli
or
adc
xchg
js
idivl
in
pop
inc
xchg
test
clc
ret
aas
fisttpll
test
dec
hlt
sub
test
sbb
cli
jnp
adcb
ja
push
lret
addr16
scas
bound
xchg
jnp
and
jg
stc
sti
pop
loopne
repnz
sti
adc
xor
cmpsb
or
test
xchg
mov
cld
mov
sahf
push
lock
cmp
in
mulb
pusha
sti
mov
arpl
dec
shr
iret
adc
adc
cli
push
jmp
fcmovu
arpl
pop
imulb
mov
cltd
jg
xlat
cmp
loope
and
xchg
in
iret
andb
es
mov
add
scas
cmpsb
pop
xor
shrb
add
sbbl
lock
popf
shl
cmp
cmp
xchg
or
iret
int3
cld
mov
push
or
pop
sub
cltd
fucompp
mov
lock
out
fidivl
adc
jge
arpl
dec
loope
in
sub
clc
jne
sub
cltd
mov
mov
jns
xor
jne
and
mov
aad
lea
loopne
data16
sbb
cld
dec
in
xchg
out
inc
push
insl
or
dec
xchg
lret
out
cmp
repnz
pop
xor
inc
jmp
addr16
sahf
cmp
lret
fistps
mov
xor
aaa
mov
xor
repnz
cmpsb
push
dec
dec
in
mov
mov
push
pop
rorb
cwtl
ficoml
push
mov
cmpb
mov
cmc
jge
push
int3
or
rorl
stos
dec
fiaddl
inc
fsubp
mov
mov
stos
mov
lods
xor
cs
xchg
lods
add
movsb
repnz
int
hlt
push
mov
in
lock
push
fadd
call
mov
outsb
mov
repz
push
and
inc
arpl
mov
jmp
es
mov
sbb
pop
xor
xor
out
push
int3
mov
pop
cltd
or
add
enter
out
mov
pop
jne
cmp
movsb
or
mov
xchg
xchg
sub
popa
lret
shr
xor
dec
pop
jg
mov
shr
xchg
icebp
xchg
dec
mov
int
and
movsl
xchg
cmp
lods
into
popa
out
cli
xchg
out
xor
mov
jns
and
js
test
or
jbe
cmpsb
jo
call
jne
in
into
mov
pop
cmc
inc
push
adc
insl
xor
xor
pop
add
cmp
push
data16
stos
cmp
or
jno
fs
ss
sti
imul
jecxz
sete
xchg
out
push
mov
rol
mov
pushf
shlb
lret
lea
int
cmp
imul
in
mov
jno
ficomps
lea
dec
cli
push
mov
lods
xorl
pop
xor
or
mov
xor
mov
into
pusha
add
outsl
mov
xor
repz
inc
inc
jbe
mov
scas
sbb
lods
xchg
adc
ljmp
outsb
test
xchg
xchg
lahf
pop
out
sbb
repz
inc
mov
fbld
icebp
sbb
jmp
push
std
prefetch
and
adc
jle
jecxz
jns
push
mov
in
fs
mov
xor
ret
aaa
push
ljmp
call
popf
addr16
mov
and
xchg
cmpb
insb
fstps
scas
or
jbe
lahf
pop
sub
outsb
out
sarb
fstpl
cmp
pop
popf
inc
fdivs
or
mov
cmp
inc
test
adc
test
out
pop
sti
mov
out
mov
add
and
rcrl
inc
pop
xchg
fwait
jbe
mov
mov
xor
xchg
cmp
xchg
sub
test
enter
inc
outsl
fistpl
cmpsb
push
or
bound
jg
in
mov
out
mov
sbb
clc
loopne
sbbl
lds
xor
mov
or
shll
aad
rcr
adc
xor
aas
bound
inc
ds
cmp
jmp
inc
leave
or
xchg
dec
push
inc
sbb
inc
fadd
cmc
push
mov
call
sbb
mov
mov
iret
out
xrstors
mov
jo
mov
sbbb
sbb
cltd
jge
mov
cld
xor
orl
in
or
push
or
dec
cmpsb
std
add
cld
sub
inc
shld
mov
sub
pushf
imul
cwtl
cmp
push
fs
sti
cltd
pop
push
pusha
adc
scas
pop
cmp
inc
into
lea
rclb
mov
mov
push
or
dec
push
pusha
xor
cmp
mov
jp
mov
or
pop
dec
lcall
dec
jle
hlt
mov
jge
dec
mov
mov
jnp
mov
pop
xor
pop
leave
enter
outsb
loope
mov
dec
out
ficoms
and
fwait
dec
mov
jge
inc
lds
movsb
jecxz
jmp
rcr
cli
insl
sub
popf
and
andl
lret
hlt
test
xchg
jno
int
fwait
jg
jmp
mov
or
inc
ljmp
iret
push
sub
repz
outsl
inc
mov
pop
shrl
popa
in
int3
sbb
push
jbe
cmp
sub
das
scas
pushf
int3
sbb
lret
das
stos
fbstp
or
cmc
popf
lods
rcrb
mov
mov
xchg
shlb
scas
test
fcomps
cwtl
push
outsl
sbb
lds
adc
or
cli
dec
cmp
jl
sbb
lock
ds
sbb
lahf
sub
gs
test
jns
mov
rorb
dec
in
dec
mov
sbb
imul
rcl
je
insb
cmp
imul
xor
loop
out
aas
cmpsl
sbb
fldenv
or
mov
or
jp
popf
mov
ret
mov
jl
jecxz
pop
jno
sbb
dec
adc
aam
ljmp
pop
mov
addb
and
std
shll
pushf
test
repnz
cltd
imul
test
nop
mov
lahf
pushf
pop
in
mov
and
fbstp
mov
dec
adc
mov
cwtl
arpl
push
sbb
test
xor
push
or
out
stc
scas
xorl
sbb
inc
roll
push
push
shrb
pop
and
fnsave
mov
movsl
testl
in
mov
test
dec
jp
subb
inc
and
imul
adc
xchg
aas
ljmp
push
push
push
aaa
pop
and
repz
dec
jae
push
sub
lret
adc
enter
push
call
fmull
jo
lods
std
nop
pop
daa
cli
mov
mov
xor
dec
and
mov
test
popfw
fisttps
sub
dec
repnz
adc
adc
nop
push
adc
aam
dec
fwait
popa
dec
sub
push
cmp
jno
add
xlat
cmpsb
scas
and
mov
and
inc
fldt
lods
xorl
gs
test
scas
lret
xchg
mov
dec
push
fdivs
pop
cs
ret
mov
mov
push
rcr
mov
push
loopne
arpl
add
popf
cmp
xchg
aad
mov
cld
mov
xchg
jmp
imul
push
sbb
fisubrs
xor
jl
sub
add
push
ljmp
insl
sub
rorb
mov
add
mov
xchg
outsb
or
push
push
dec
in
faddl
mov
inc
loope
push
and
add
das
cmp
xchg
push
mov
pusha
sbb
test
cmp
mov
pop
xchg
fdivl
stos
cmpb
icebp
jno
fisubrs
out
mov
ss
xchg
imul
stos
pop
pusha
out
shll
and
popf
inc
popa
xor
cmp
inc
cs
jns
mov
mov
jp
xchg
adc
mov
adc
popf
inc
add
ret
mov
cmpl
loop
fcmovb
sahf
cmp
jo
or
mov
xchg
imul
mov
test
fs
out
mov
pminub
aam
jne
lods
push
gs
fidivrl
fsubl
pop
repz
xlat
sub
push
loope
negb
mov
adc
adc
jae
arpl
add
fsubr
add
mov
dec
pop
ficoms
fidivrl
outsl
lret
adc
xchg
xchg
ret
insb
cmp
je
repz
mov
pop
jle
cmp
in
ss
orb
pushl
imul
pop
push
jne
nop
iret
gs
and
imul
cmpsb
test
into
xor
sub
stos
and
ljmp
data16
xchg
repz
dec
pushf
xchg
cs
int3
lret
push
push
mov
adc
jns
inc
divb
daa
in
shl
jmp
pusha
push
jae
jecxz
test
push
into
jg
add
sub
test
adc
das
addr16
insb
cwtl
out
jg
or
fisttps
push
cmp
test
imul
mov
je
xor
das
push
mov
xchg
push
je
enter
mov
sbb
subb
mov
out
mov
mov
aas
cmc
push
xchg
sub
ss
xlat
lds
repz
xchg
sub
dec
fbstp
mov
flds
or
adc
arpl
sub
outsl
scas
ljmp
sbb
jbe
addb
mov
sub
sti
xchg
pop
jo
imul
xchg
hlt
inc
lret
jge
pusha
cmpsl
sub
popl
xor
xchg
ja
jge
inc
test
or
sbbb
sub
jl
jne
leave
or
jno
mov
test
sbb
cmpsb
mov
or
loope
bnd
inc
aas
mov
adc
fnstcw
pop
outsl
fs
fstpt
xor
cmpsl
mov
push
jnp
sahf
add
out
sub
enter
test
xor
shrl
stos
cld
enter
mov
cmp
xor
shlb
int3
js
pop
cli
push
data16
xchg
out
incl
idivb
inc
cmpsb
push
inc
mov
sbb
push
test
dec
pop
push
insb
mov
inc
iret
or
jne
out
add
dec
mov
ret
outsb
lcall
fldenv
mov
das
es
pop
fisttpll
xchg
imulb
test
cmp
int
jecxz
jne
add
jecxz
shrl
xor
mov
push
xor
mov
andl
dec
loope
cmp
in
sbbl
xchg
aam
fs
lods
cmc
mov
jl
loope
sub
cmp
mov
sub
sub
inc
inc
insl
push
xchg
dec
ja
mov
xor
dec
pop
lds
xor
pop
xchg
mov
pop
testb
push
inc
fistl
ret
loope
inc
mov
int
or
adc
pop
jecxz
adc
pop
out
adc
out
icebp
jnp
rcl
addr16
shr
jo
sub
rclb
clc
inc
sub
mov
hlt
push
stos
pop
add
inc
es
cmp
in
shrl
cmp
dec
cld
and
insl
pop
xchg
xlat
outsl
adc
fidivl
test
out
add
sbb
in
inc
sbb
fcoms
outsb
jmp
bound
add
loop
push
xchg
in
dec
lret
rcrl
jo
mov
xchg
dec
repz
push
xchg
sbb
push
cmc
mov
mov
mov
outsb
iret
mov
vmovdqa
pop
xlat
pop
jle
lods
mov
xchg
jae
pop
ret
or
rorl
dec
stos
xor
sbb
insb
mov
sub
fstps
push
ss
test
pop
push
push
mov
and
dec
test
pop
test
mov
jmp
jns
mov
mov
inc
lods
outsb
stc
cmpb
imul
jmp
xchg
push
cwtl
xor
ja
xlat
fsubs
mov
movsb
iret
popa
xchg
shrl
jecxz
icebp
fistpll
pop
repnz
test
lock
xchg
sub
dec
sbb
dec
pop
cmc
dec
test
insb
mov
rcrl
imul
pop
ret
push
js
movsl
imul
ret
xchg
or
or
lcall
inc
fsubrl
arpl
popa
add
xchg
ljmp
pop
cs
push
push
sbb
std
add
add
cmp
aam
lods
lods
jg
pop
daa
cs
push
lcall
cli
cwtl
push
and
jmp
shl
stos
inc
sahf
inc
pop
imul
or
xchg
push
in
xor
or
fnstsw
xchg
and
int
mov
mov
sub
das
or
les
aaa
pop
mov
pop
jae
orl
mov
aam
mov
rclb
rclb
lahf
or
cmp
daa
outsb
mov
sbb
xchg
push
mov
js
xchg
cmpsl
cmp
jnp
out
insl
stc
js
bound
add
leave
xchg
sbb
cmp
jns
sub
mov
or
mov
std
bound
adc
scas
push
inc
aam
cli
and
test
out
adc
xchg
xor
dec
in
push
rcr
jae
in
mov
jae
leave
sub
test
fwait
lods
adc
mov
mov
rcrb
mov
lahf
out
or
shll
add
sti
dec
and
bound
divl
imul
pop
cmp
jp
sbbl
push
adcb
cmp
dec
and
stos
pop
push
fidivrl
rolb
int3
or
sub
scas
inc
jbe
push
test
xchg
int3
jecxz
lods
inc
test
mov
inc
nop
clc
pop
sub
pop
cmp
fisubrs
in
pop
aaa
add
rcrb
in
aam
fwait
rolb
das
add
test
add
shrl
push
xor
lds
icebp
clc
nop
xlat
outsb
ret
cld
outsb
scas
insb
dec
mov
xchg
dec
ret
xor
sbb
mov
cmp
mov
dec
imul
leave
mov
push
ljmp
jmp
inc
mov
mov
popa
xchg
sbb
leave
push
sbb
subl
lret
or
and
pop
xor
mov
jp
or
inc
jg
mov
mov
cld
pop
scas
xor
stos
and
ret
push
push
jmp
add
es
lcall
sbb
adc
pusha
cmp
int3
mov
js
jb
or
pop
lahf
stos
mov
dec
mov
pop
sub
lea
and
mov
andb
cmp
dec
fucomip
mov
xor
fistl
dec
shll
mov
ret
insl
pusha
and
js
dec
dec
sub
test
adc
xor
adc
dec
loop
into
dec
adc
aaa
lcall
push
mov
xchg
ja
lods
add
test
fidivrs
or
mov
sub
arpl
leave
inc
mov
mov
mov
jge
lods
mov
popf
cmp
mov
pop
mov
pop
test
xchg
inc
or
sarl
hlt
push
jl
data16
cwtl
daa
inc
shll
xor
xor
and
jnp
sahf
stos
xorb
mov
mov
fists
jns
or
adc
dec
scas
push
movsl
popf
bound
push
xchg
loope
mov
test
rolb
jmp
test
sbb
call
adc
xchg
add
cmp
push
cmpsb
shl
jnp
add
adc
mov
test
jge
mov
or
xchg
pop
xor
xorl
mov
iret
push
jmp
leave
push
popf
je
push
and
sbb
or
mov
xchg
outsb
xor
xor
lods
mov
outsl
adc
mov
in
insb
cmpsl
and
sarl
push
or
mov
dec
push
leave
dec
mov
popa
fstps
pop
mov
and
jecxz
sub
mov
mov
jo
aaa
inc
dec
shll
test
sub
push
out
cmpsl
ficompl
fistps
dec
mov
mov
mov
and
rcll
mov
rcr
mov
test
shrl
inc
xchg
decl
push
push
push
out
inc
in
adc
les
xchg
push
std
mov
ljmp
adc
cmp
sub
fwait
jecxz
stc
loop
jecxz
pop
push
sbb
mov
cltd
push
mov
jne
sahf
scas
movsb
mov
iret
std
mov
jae
mov
jno
cmpsl
ds
push
jecxz
aam
add
and
xor
sbb
push
pop
mov
add
and
jge
dec
xor
sbb
dec
mov
add
scas
nop
insb
xchg
movsb
dec
dec
lcall
inc
mov
cld
add
subb
aad
cmpps
divl
push
jns
aaa
pop
mov
xchg
icebp
push
test
inc
mov
ret
les
sbb
cmpsl
mov
mov
jnp
fxch
pop
fidivrs
fwait
inc
xchg
pcmpeqb
push
int
aam
pusha
mov
or
outsb
sahf
out
ja
jmp
out
cli
jo
mov
dec
test
cmp
push
mov
lds
gs
aam
negb
pop
das
fwait
scas
add
sub
add
adc
fstps
mov
cmp
aaa
movsl
lds
iret
mov
dec
outsl
pop
cmp
mov
pand
xchg
clc
out
imul
hlt
out
test
fmull
gs
jo
insl
popa
jmp
orb
xor
cmp
jge
cmp
stc
shll
lretw
pop
test
adc
js
ds
and
popl
pushf
and
sbb
cltd
scas
ljmp
mov
loopne
pusha
adc
bound
xchg
int3
push
and
push
adc
inc
mov
icebp
push
mov
cmp
jns
mov
shlb
arpl
stc
cmc
mov
mov
xchg
sbb
xchg
jo
xor
dec
dec
jns
dec
aaa
insl
jge
push
int3
xchg
cmp
stos
imul
inc
shll
dec
sub
push
call
jno
jmp
dec
and
xor
clc
in
mov
fsts
push
mov
iret
mov
scas
mov
adc
xor
lods
xor
xchg
stos
inc
push
clc
sahf
cmc
sti
jne
lret
call
mov
or
outsb
mov
cmp
sub
mov
lock
lahf
int3
test
ret
lcall
lcall
loope
data16
push
mov
scas
clc
cmp
addr16
jecxz
es
xlat
scas
mov
leave
bound
sbb
mov
mov
aaa
mov
mov
fsubs
and
adc
outsl
rolb
stos
ficoml
testb
push
xor
dec
lock
and
sbb
sbb
adc
and
into
fcompl
add
mov
movsl
push
mov
lahf
fld
xchg
sbbl
and
stos
dec
int3
repz
out
enter
and
aaa
movsl
or
sub
and
push
movsb
inc
push
pusha
xchg
sbb
hlt
sbb
mov
push
idivb
lcall
inc
push
push
jns
fistps
xor
repz
flds
popa
xor
adc
push
inc
lahf
pop
or
js
xlat
adcl
out
mov
jge
repz
mov
ror
mov
rcr
sub
fs
xor
mov
ret
lock
mov
sbb
inc
adc
sub
leave
lcall
xchg
and
xor
pop
clc
rcrl
imul
loope
fildll
mov
or
sub
js
push
test
les
mov
dec
mov
pop
out
pop
int
cmp
push
repnz
out
xorb
dec
test
push
inc
sbb
push
adc
cmp
shll
mov
mov
test
push
sub
shlb
xchg
xchg
sbbl
lods
push
mov
mov
les
imul
mov
jnp
popf
stc
and
into
cmp
mov
cmp
dec
imul
testl
jnp
mov
outsl
push
jne
ja
inc
cltd
outsl
mov
rolb
out
xchg
loope
lods
dec
dec
mov
add
ljmp
scas
out
enter
adc
inc
sarb
mov
sahf
cltd
aad
xchg
into
out
add
shlb
xor
ret
jmp
and
popf
iret
out
test
xor
and
sbbl
shlb
or
shlb
je
fdivrl
sbb
lods
orl
sub
out
or
adc
xlat
outsb
cmp
cmc
xorb
pop
or
mov
sbb
cmpsl
sub
inc
mov
mov
xchg
pusha
test
jnp
in
les
loopne
inc
dec
cmc
jae
cmpsb
pop
movsb
xchg
cmp
pop
lds
ja
dec
notl
mov
ror
mov
fldl2t
jle
out
insl
xchg
in
dec
mov
mov
jbe
add
popf
shll
stos
mov
lahf
repz
cli
jmp
mov
cmp
jae
ret
dec
xor
sub
dec
adc
dec
add
out
add
loopne
inc
adc
jmp
xchg
sbb
in
decl
fwait
mov
ljmp
mov
out
dec
and
add
sub
jp
lahf
andb
inc
push
xor
push
push
cmpl
fistps
imul
stos
popa
idivl
pop
rcrb
push
jnp
iret
loope
adc
sbb
popf
lret
insb
mov
les
push
xchg
je
test
jae
jl
pop
stc
jnp
movsb
lods
sbb
sub
mov
sbb
cmpb
or
cmc
test
mov
xor
sub
dec
sahf
mov
xchg
lods
iret
xor
shrb
out
mov
mov
pushf
pop
fwait
xchg
push
sbb
push
mov
mov
mov
cmp
push
adc
mov
iret
fistps
gs
sub
mov
dec
loope
pop
adc
cli
int
ud0
dec
push
jl
in
out
popa
jns
mov
fsubs
sub
aam
inc
push
cmpsl
mov
leave
mov
jle
ret
inc
fdiv
incb
mov
lea
test
xor
scas
std
jns
cmp
fsubl
int
pop
loop
push
std
or
xchg
sub
mov
cltd
mov
mov
fidivl
jb
or
push
xor
sub
adc
outsl
pop
pop
lea
fcompl
lret
jge
stos
and
push
lcall
and
into
inc
xlat
pushl
jne
jo
sub
jnp
mov
xchg
jns
push
cmp
pop
test
inc
fsubrl
cmp
mov
ljmp
stos
imul
xchg
xchg
sbb
jmp
cmp
outsl
sbb
fildll
sahf
clc
mov
sbb
stos
mov
xor
faddp
or
imul
in
pop
repz
pushf
test
bound
fsubr
loop
aad
call
stos
jl
xor
add
movsb
lahf
dec
pop
hlt
jl
push
mov
dec
jnp
mov
cmp
in
outsb
aas
cltd
dec
adc
mov
mov
stc
lods
sub
pusha
jb
sbb
mov
pop
adc
jp
xchg
sbbb
cltd
pusha
xchg
or
cmc
les
arpl
sbb
xchg
adc
push
imul
xchg
inc
xchg
negl
test
ja
or
rorb
inc
inc
mov
dec
aad
or
xchg
popa
cli
test
sbb
adc
or
sub
push
imul
or
mov
mulb
cmpsl
sub
je
sub
push
int3
and
add
push
testl
outsb
bnd
lahf
ss
xchg
or
ret
mov
scas
mov
inc
fnsave
cli
sbb
gs
outsl
mov
pop
mov
jnp
cmp
push
pop
shrb
into
clc
sbb
clc
xor
lods
inc
xlat
ficomps
adc
jle
xchg
jmp
lahf
push
xor
movsl
xorl
ja
push
xor
push
js
push
sahf
push
popf
lods
loope
or
adc
sub
mov
inc
hlt
aas
lahf
mov
adc
cmpsl
shr
lds
jne
cmpsl
cltd
in
jns
incl
xor
push
push
xor
aaa
xchg
ja
pop
into
mov
pop
pushf
xor
hlt
pop
daa
pop
sub
sti
pop
lcall
lcall
lods
insl
lret
sub
popl
std
dec
or
mov
lcall
xchg
outsb
adc
insl
mov
lods
jg
push
adc
dec
xchg
fs
test
mov
enter
mov
push
hlt
in
hlt
xchg
das
fmull
sbb
add
dec
rcl
or
cmpsl
and
jae
inc
pushf
popf
jo
adc
xlat
and
nop
and
push
xchg
cmp
mov
jle
push
mov
divl
fildll
sbb
pop
cmp
pop
jmp
adcl
iret
je
shr
leave
lods
shrl
ljmp
lcall
ret
cltd
nop
rcrl
outsb
adc
mov
jns
clc
in
lcall
sbb
enter
sbb
cmpl
adc
adc
mov
stos
jle
stos
scas
xchg
int
push
sub
jae
add
movsb
xor
arpl
sub
mov
fists
in
orl
dec
mov
or
and
jle
xor
sbb
lahf
mul
inc
jnp
pop
cmpb
imul
fisttps
pop
xor
sub
popa
or
mov
sti
mov
shrb
int3
mov
ds
fadd
sbb
push
mov
jae
mov
inc
ret
mov
nop
sahf
aaa
iret
sbb
lret
mov
insb
jae
std
xchg
and
cmpsb
sbb
push
call
jbe
ljmp
xchg
xor
and
aaa
and
jae
mov
adc
sahf
and
adc
jno
push
shlb
lea
out
sbbl
in
jns
outsb
mov
and
dec
ret
add
daa
push
push
adc
sahf
js
or
sub
inc
pop
cmp
fimuls
sbb
movsb
adc
dec
xchg
adc
xchg
adc
or
sti
pop
mov
sub
fcoms
pop
sub
test
or
push
hlt
popa
mov
xchg
jne
jle
pop
xchg
pop
outsb
enter
shll
int
or
pop
xchg
mov
add
jb
bnd
into
mov
mov
dec
daa
sbb
jp
xchg
ljmp
sbb
mov
cmpl
pop
cmpsb
xor
sbb
mov
xor
and
mov
ret
jge
punpckhwd
jbe
pusha
das
pop
or
add
lret
xor
inc
arpl
or
pop
cmpsl
imul
cli
rorl
fistpll
xchg
dec
pop
cmp
rorb
xor
add
in
jbe
movsl
rclb
ds
cltd
andb
adc
xchg
push
imul
hlt
mov
mov
cmp
mov
dec
inc
jecxz
or
cmp
and
scas
out
mov
lahf
sbb
inc
rorb
jne
dec
pop
jp
bswap
xor
ja
ss
out
mov
dec
aaa
sbb
rorl
xchg
adc
add
dec
iret
dec
in
jo
ja
adc
leave
notl
sub
cwtl
or
int
int3
or
jg
push
shrl
sti
incb
xor
jb
sti
fucomip
and
pop
imul
data16
jns
add
inc
bound
ss
cwtl
pusha
lcall
nop
jnp
lock
cmpsl
fildl
or
push
dec
add
or
inc
outsb
push
ja
adc
sbb
jno
movsb
out
cmp
ret
test
xchg
repnz
dec
stos
mov
and
add
sub
dec
xor
leave
add
inc
xlat
cmpsb
in
lock
daa
and
stc
insb
mov
insb
inc
inc
xchg
pop
fimull
xor
addl
cmp
fsubl
shrl
test
push
lods
out
aad
add
outsl
aas
rcll
jns
jo
sub
mov
mov
insl
inc
dec
xchg
jnp
inc
insb
rcrl
imul
cmp
inc
sbb
lret
dec
xchg
mov
mov
fisubrl
loopne
mov
fistl
andb
jb
dec
dec
push
push
mov
int3
std
cmp
xorl
cmp
jbe
js
in
xchg
iret
mov
jne
mov
fcoms
push
flds
sbb
adc
and
fwait
xchg
popa
lahf
push
pop
cmp
iret
bound
ja
xchg
scas
push
mov
mov
dec
rsqrtps
xor
ficoml
andl
jo
mov
and
and
jge
and
and
cmpsb
mov
and
or
cmpsl
jg
jnp
pop
xchg
int3
adc
and
testb
dec
adc
mov
scas
subl
iret
shrl
mov
sub
insl
pop
mov
loope
or
fs
fdivl
inc
mov
inc
mov
out
xchg
push
jo
mov
pop
push
int
push
adc
cmp
xchg
sub
loope
mov
lods
out
mov
pop
out
pop
inc
jmp
or
push
adc
sbb
push
cld
and
cwtl
or
pop
hlt
int3
cmp
jb
mov
popa
out
lea
out
or
lock
inc
mov
imul
jae
xorl
pusha
mov
lcall
popf
test
stos
inc
sub
cld
xchg
cmp
enter
sbb
cwtl
mov
dec
loopne
mov
ret
jg
adc
popa
add
lock
int3
shrl
or
cmp
aam
mov
fbstp
faddp
jmp
jne
adc
xor
cmp
iret
out
fnstenv
testb
int
outsb
jns
mov
cmp
popa
sbb
test
add
fidivrs
iret
cmpl
fnstcw
pop
fiadds
sub
pop
inc
xchg
xchg
cmp
cld
cmp
cmp
roll
fidivrs
push
mov
fiadds
mov
add
scas
bound
in
and
icebp
int
orb
cmp
std
stos
xor
ss
sbb
add
cs
lods
jge
fisttps
fsubr
and
adc
out
repz
pop
mov
dec
jbe
xchg
pop
lret
int3
lds
add
sbb
scas
mov
sarb
mov
fistps
inc
in
clc
mov
push
or
scas
xchg
je
cwtl
loope
data16
test
lahf
and
inc
and
lea
lret
std
insl
mov
pop
sbb
iret
adc
xchg
js
adc
cmpsl
scas
int
dec
jb
push
imul
aam
out
pop
cmp
subl
jecxz
fdivs
aam
call
fcoms
push
insb
out
xchg
jp
push
movsl
mov
sub
dec
sbb
mov
lcall
lcall
cmp
popa
popf
xor
mov
fcmovne
xor
mov
daa
mov
leave
fnstenv
bound
xor
mov
sti
stos
outsb
pop
mov
dec
cld
leave
cs
dec
and
cli
xchg
loope
inc
lods
mov
fldt
add
ret
sbb
push
jecxz
inc
pop
xchg
sub
xchg
stos
lea
std
insb
or
jp
cs
adc
push
push
xor
stc
add
pusha
mov
fucom
mov
inc
pop
cmp
out
mov
std
cmp
mov
dec
mov
cmp
adc
sbb
push
pushfw
ret
lret
iret
imul
dec
dec
dec
leave
fsts
stos
jp
fstps
lcall
and
cltd
push
sbb
inc
fadds
cmp
fbstp
jb
push
dec
sar
xor
mov
jg
dec
mov
pop
jbe
ficoms
sahf
dec
inc
xor
or
push
or
lods
sbb
jl
add
jg
loopne
test
pop
add
mov
or
cmpl
xchg
popl
xchg
lods
cmp
lcall
ret
sub
mov
roll
jg
lock
in
fmulp
sbb
pop
icebp
cmp
lahf
dec
psubb
dec
popa
insb
shl
das
ret
cld
clc
dec
fucomip
jp
sub
fs
sbb
push
xor
xor
mov
loopne
mov
sbb
adc
in
jo
outsl
inc
lret
cmp
mov
adc
push
push
in
ljmp
mov
out
data16
xor
xor
idivl
and
clc
mov
lock
das
clc
cwtl
sub
inc
cmovl
ss
leave
pop
gs
imul
popa
lock
dec
adc
jl
xchg
sub
outsb
add
xor
faddp
sbb
imull
push
sub
movsb
mov
jmp
inc
cltd
or
dec
fninit
fsts
fidivs
outsb
push
jle
xor
test
xchg
mov
enter
pop
sti
test
bound
inc
std
xor
cld
push
insl
add
and
xor
jo
scas
inc
mov
push
push
cmpsl
adc
loope
in
fiaddl
push
mov
clc
add
cmp
sub
call
test
xor
add
cmc
into
bnd
daa
pop
adc
sub
push
out
out
inc
loop
outsb
add
sub
idivb
mov
stos
popa
scas
sahf
sub
xlat
stos
pop
imul
jns
sbb
jbe
jl
gs
inc
fbstp
xchg
in
test
cmp
jae
movsb
scas
xchg
mov
xchg
jbe
fstpl
jg
push
jmp
pop
jno
jb
jb
jae
mov
aaa
fsubs
xlat
fdiv
je
out
pop
cs
or
out
mov
js
push
imul
into
mov
testl
in
cmp
fadd
or
aaa
and
inc
push
and
jp
jb
scas
mov
popw
in
adcl
xor
addr16
push
pop
scas
cmp
jp
les
pop
mov
xor
sbb
xchg
mov
mov
cmp
pushf
add
dec
add
cmp
test
dec
mov
gs
xchg
outsb
jl
sub
push
ror
inc
nop
adc
lock
or
add
out
jae
push
pop
xchg
pop
mov
aas
and
and
cmp
xchg
sub
jge
sbb
ljmp
push
mov
imull
push
mov
test
ss
jle
repnz
out
and
lods
ss
pusha
pop
paddq
cmp
daa
inc
jg
je
lock
and
push
int3
dec
and
sbb
mov
fimull
or
xchg
je
jecxz
adc
jnp
pop
in
loopne
sbbb
ja
jbe
and
mov
sbb
and
pop
jecxz
cmp
jbe
je
sbb
xchg
mov
push
inc
push
xchg
jge
adc
cmp
pop
jmp
xchg
in
push
jp
xchg
pop
pop
shlb
lcall
pop
je
adcb
mov
and
je
mov
jmp
clc
sbb
inc
dec
pushf
std
xchg
leave
fadd
into
mov
sub
pop
pop
mov
xor
jge
enter
fnstenv
pop
add
jno
std
dec
xchg
and
adc
xor
lahf
jo
test
leave
mov
leave
dec
sub
mov
rclb
les
ja
jp
cs
or
ret
data16
xchg
mov
lcall
mov
cmp
dec
jl
dec
scas
dec
jns
subb
xor
xlat
jg
stos
inc
push
stos
fldenv
jae
cld
inc
out
xor
cld
lahf
push
sar
sbb
push
cltd
out
ficompl
cli
jmp
xor
fcompl
idiv
es
xchg
pop
ret
and
dec
sti
imul
and
jg
lods
mov
jmp
push
out
xor
and
mov
and
mov
pop
cli
inc
inc
std
push
jmp
sbb
jg
jb
in
push
popf
clc
inc
xorb
xchg
shrb
xchg
jns
push
or
cmpsl
and
movsl
sub
out
mov
xchg
je
push
xor
mov
sti
pop
pop
mov
xor
cmp
out
imul
dec
push
ret
roll
mov
cmpsb
cs
push
jle
in
orb
and
add
xchg
negl
stos
icebp
mov
pop
inc
mov
push
mov
icebp
mov
pop
ret
cmpl
ss
gs
lea
stc
enter
mov
mov
movsl
in
sub
test
fidivrl
ja
shrb
push
aas
outsb
ret
aam
movsb
adc
mov
scas
ss
jle
inc
adc
push
fcmove
paddusb
jle
sub
jp
sub
mov
mov
push
test
mov
cmc
inc
mov
fstl
fsubrp
inc
std
xchg
xor
int
aaa
into
sahf
push
inc
pushf
mov
xchg
sahf
lods
popf
leave
movsl
cmp
jnp
leave
lods
ljmp
cmp
dec
sbbl
jge
sbb
inc
stos
dec
sbb
and
insb
xchg
push
or
std
fidivl
or
mov
mov
mov
js
jge
sahf
lcall
mov
add
push
lock
mov
fidivrl
add
push
cmp
adcb
pop
jge
jge
mov
adc
es
aam
into
fiadds
out
fcompl
imul
or
mov
add
or
mov
push
xor
fcom
push
jno
dec
mov
cwtl
cmp
das
mov
icebp
push
flds
mov
inc
and
jmp
out
jmp
andl
rcll
mov
sub
arpl
push
jne
sub
icebp
mov
in
mov
mov
or
mov
fisubrl
sub
pop
pop
ss
mov
xor
dec
aam
shlb
sbb
popa
aam
xchg
push
jp
cmp
mov
mov
dec
imul
push
xchg
jle
mov
std
lods
cltd
in
jo
xor
sarb
cmp
inc
fcomi
testb
bound
rorl
add
adc
xchg
mov
xor
jns
int3
fbstp
cs
int
lods
sbb
fxch
lds
sbb
popa
lods
stos
fs
xor
mov
iret
jg
movsl
sub
lds
imul
outsl
sub
jmp
fwait
mov
sub
rol
pop
decl
mov
ljmp
sbb
ds
andb
out
xchg
fistpl
or
std
outsb
movsb
jl
and
je
rcrb
imul
xchg
adc
mov
scas
cmp
push
xchg
add
mov
and
sub
test
jae
insb
jne
sarb
not
dec
outsb
in
ds
arpl
xor
push
popa
icebp
xchg
xchg
adc
jnp
sbb
jo
and
pop
pop
stos
sbb
pop
mov
pop
enter
mov
mov
bnd
loope
xchg
push
dec
pop
dec
xchg
pop
hlt
push
push
and
adc
scas
testl
dec
sbb
out
and
adc
into
xor
sbb
pop
test
nop
pop
sbb
ret
in
push
fcomps
xor
pop
fcmovu
fmulp
sub
xchg
and
clc
mov
fcoml
inc
inc
sub
or
ja
and
leave
xor
out
loope
sub
int3
jmp
inc
pop
xchg
loop
pop
movsb
mov
cmc
xchg
sub
fwait
cli
shl
mov
pusha
daa
mov
jecxz
in
mov
fwait
or
add
pop
jb
push
inc
cmc
dec
add
nop
mov
mov
addr16
iret
adc
mov
mov
adc
pop
fcmovbe
lds
adc
rcrb
jle
mov
mov
jae
mov
roll
and
mov
clc
jae
out
je
daa
std
adc
dec
aas
mov
pop
jmp
mov
jmp
aas
in
push
xchg
mov
lcall
jl
sbb
dec
std
and
loopne
sub
lret
inc
mov
add
test
rclb
popa
insl
fsubl
adc
sti
sub
and
lcall
dec
and
add
xchg
sti
push
pop
je
cmpsb
arpl
xchg
loopne
scas
mov
push
sub
mov
lds
xlat
out
mov
daa
call
cld
jne
push
std
mov
adc
popa
inc
fwait
sbb
inc
inc
lods
ja
cmp
test
jns
test
pop
cli
or
push
and
ret
xor
fcmove
test
xor
pop
jnp
mov
push
ret
aas
or
jbe
loop
das
mov
cmp
push
fcmovbe
daa
cli
aam
adc
aaa
xor
scas
cmpsb
inc
shrb
pop
mov
jp
pop
xor
ds
mov
insl
pop
jae
add
pushf
xor
xchg
repnz
cmp
xor
pop
jbe
cmp
ljmp
cmpsl
fidivl
mov
outsl
mov
out
popf
bt
lret
mov
loopne
popa
cli
test
dec
jecxz
std
pop
out
pop
loope
jl
inc
movsb
cmp
mov
pop
lds
leave
add
or
pop
outsb
add
xchg
cmp
sub
insb
scas
jns
ja
pop
das
sub
cmp
pop
add
shrl
pusha
xor
and
les
or
adcb
pop
jecxz
aaa
or
xchg
push
cmp
negl
int
jle
adc
jne
xor
jle
mov
cli
and
out
ficoml
mov
jb
jne
lock
jmp
test
pusha
mov
push
out
xchg
loop
in
lcall
mov
cmc
in
hlt
fcmovu
clc
push
stc
stos
inc
js
mov
or
inc
fisubrs
lret
xchg
add
cmc
vprotw
shll
lcall
and
loop
popf
rcrl
in
mov
xchg
adc
aad
icebp
pop
arpl
mov
push
popf
pushf
gs
repnz
pop
addr16
stos
inc
inc
lock
mov
lahf
dec
pop
jno
and
mov
gs
pop
jp
xchg
adc
pop
inc
mov
mov
dec
adc
ret
daa
pushf
iret
pop
adc
fs
dec
mov
js
and
add
xchg
nop
mov
ds
pop
repz
jecxz
or
cwtl
cmp
insb
push
test
cld
cwtl
add
clc
aas
outsl
jae
ret
cmp
dec
fdivl
xor
cmpsl
std
in
pop
jmp
das
movb
ret
or
pop
shll
lret
and
push
ljmp
jno
fimull
add
pop
rcl
imul
mov
xor
in
shrb
shr
add
stos
leave
cs
xor
xchg
iret
push
imul
xchg
roll
push
sbb
jle
and
in
mov
movsb
mov
frstor
or
orl
xchg
and
in
sbb
dec
int
push
mov
sbb
adc
xor
mov
cmp
es
cmc
lcall
xchg
mov
mov
fcomps
xor
mov
mov
mov
push
fistpll
mov
gs
stos
mov
push
mov
add
cmp
cmp
nop
jae
cmp
fimuls
sub
out
divl
xchg
stc
outsb
cs
cmp
lds
sbb
adc
sbb
fsts
xor
ljmp
inc
pop
inc
mov
jb
jbe
lds
push
idivl
xchg
push
or
cmp
mov
lret
or
xor
lea
jne
leave
ljmp
pop
push
mov
dec
int3
xlat
icebp
std
outsb
mov
jnp
sub
sub
orb
iret
mov
rcl
mov
enter
lock
gs
add
imull
cmc
xgetbv
add
sub
cmc
lds
notb
cltd
push
test
scas
xchg
mov
sahf
in
lds
or
test
es
sti
addb
stos
scas
repnz
adc
push
stos
mov
mov
dec
fidivs
jmp
lds
xor
aad
out
cmpsb
fistpl
loopne
sbb
adc
ja
cmp
leave
out
mulb
fs
cmpb
mov
dec
mov
add
mov
lock
jbe
insl
cmpsl
mov
xor
or
lret
sub
in
xor
dec
sub
dec
rorl
dec
loopne
mov
inc
lret
out
mov
push
or
cmpb
mov
psadbw
xchg
imul
mov
mov
lret
xorl
mov
mov
push
add
sbb
mov
adc
sub
and
sub
stos
movsl
push
xlat
js
mov
rorl
sub
test
push
call
inc
cli
and
inc
and
ficompl
std
mov
xor
mov
std
mov
cli
rcll
lods
add
int3
mov
add
add
mov
lret
stos
popf
faddl
sub
pop
xor
dec
or
int3
stos
ret
fldcw
in
xchg
into
iret
dec
jg
adcb
inc
and
repz
lods
push
jmp
fsubrs
adc
push
push
and
testl
lods
cli
cmp
inc
xchg
movsb
sbb
test
cli
xchg
ss
into
cmpsl
lret
or
jge
pop
xchg
push
and
jb
and
cmc
mov
les
mov
aam
jge
rcll
jne
jne
and
mov
cmp
nop
mov
or
push
popf
push
mov
push
push
dec
mov
leave
int
pop
or
subb
mov
data16
sub
frstor
cmp
in
out
or
add
and
inc
mov
test
sub
lods
mov
subl
jmp
fnstenv
mov
lret
outsb
sarl
mov
test
test
adc
jne
mov
pop
xchg
dec
dec
idivl
into
inc
loope
fldenv
into
loop
cli
push
cld
in
inc
test
mov
mov
fstpt
fmull
adc
jae
or
inc
fsubrs
adc
mov
aaa
out
and
dec
pop
pop
icebp
sbb
stos
pop
into
test
mov
pop
lahf
stos
mov
out
cmp
es
clc
and
cwtl
das
loop
and
or
jnp
xchg
jmp
testb
fsts
pop
xchg
fcompl
sub
lahf
pop
jno
or
push
dec
and
scas
inc
xchg
daa
xchg
jns
push
cmp
subl
ljmp
xor
in
mov
xor
push
mov
add
int3
cltd
test
jnp
cltd
ret
jnp
sbb
dec
sbb
jno
cmpsb
xchg
out
sbb
test
sub
xchg
pop
sbb
sub
out
data16
push
xor
add
out
xchg
jb
aad
popa
jecxz
shrl
xchg
insb
lea
out
inc
push
incl
cwtl
xor
lret
ss
and
push
shll
movsl
mov
inc
sbb
mov
mov
mov
pop
mov
push
jmp
cmp
jnp
cmp
add
sti
pop
push
dec
push
adc
sbb
mov
adcl
lods
sbbl
lea
fwait
loope
imul
adc
aaa
incl
inc
int
flds
arpl
pop
jno
cmpsb
dec
insl
loop
test
or
xchg
shrb
and
insl
inc
mov
test
dec
push
xchg
roll
ljmp
orb
jne
mov
add
cmp
mov
push
adc
fwait
ret
cmp
imul
dec
or
jg
rorb
cwtl
out
mov
ret
into
mov
leave
cltd
mov
std
pop
dec
pop
xchg
or
pop
or
daa
jae
add
ret
sarb
stos
ret
leave
and
mov
stc
in
sahf
gs
iret
pop
dec
adc
sar
jb
int3
dec
pop
into
idivl
scas
xorb
adcl
scas
xchg
sub
into
push
xchg
scas
xchg
mov
in
cli
cmp
pop
mov
in
sarl
js
cmc
cmp
shrb
xchg
mov
xor
stos
xchg
push
in
push
cs
add
mov
aad
mov
call
mov
xor
lock
cwtl
std
xor
js
dec
fadd
rclb
call
mov
lret
and
rclb
add
adc
dec
jno
mov
loope
lret
dec
in
jg
mov
mov
adc
ds
sbb
add
out
add
daa
ret
dec
and
shll
js
ja
mov
gs
xchg
movsl
cmp
fbld
jns
xor
sarl
adc
jg
fldl
rol
cmpl
lret
push
insb
neg
out
push
sbb
dec
scas
outsb
addr16
jae
iret
ficompl
xchg
and
insl
inc
aas
jnp
mov
pusha
cmp
ds
mov
mov
outsb
adc
add
hlt
fiadds
inc
cmpsb
insb
xchg
push
cmpb
jmp
cltd
fldenv
gs
pop
aas
pop
jle
aam
imul
xor
jnp
inc
into
cmpl
pop
js
mov
data16
shll
sahf
add
adc
daa
push
cvtpi2ps
pop
pop
dec
add
idivb
push
add
aad
add
xchg
pop
hlt
leave
loope
ret
aad
jno
lods
pushf
lahf
ret
pop
and
jns
sub
bound
push
sbb
jle
xor
cwtl
mov
ret
js
sti
aas
fistps
fisubs
ret
repz
adc
push
mov
jmp
mov
testb
or
and
pop
addr16
xchg
pop
mov
stos
inc
jge
popf
stc
fbld
sub
inc
lea
xchg
add
testl
es
push
pop
mov
ljmp
shll
dec
mov
xchg
lds
outsb
mov
lahf
xor
dec
cmp
and
imul
mov
lret
xor
enter
jl
pop
inc
out
jns
sub
adc
push
lock
xor
aas
ret
repnz
dec
mov
js
insl
imull
mov
pop
pop
inc
pusha
add
jg
pop
lret
fs
addr16
je
out
cmp
addr16
sbb
frstor
dec
jbe
popf
lea
idivl
push
sub
jg
mov
sub
int
out
add
insb
mov
push
cld
xchg
xchg
mov
adc
lods
mov
xor
jb
imul
pop
out
lods
repnz
pop
sar
rclb
jb
daa
mov
or
inc
ret
sbb
movsl
pop
in
nop
clc
lea
push
push
mov
out
cmp
mov
hlt
mov
mov
stc
lods
cmp
sbb
clc
ret
out
ficompl
or
aam
roll
mov
arpl
out
outsb
loope
pop
sbbb
mov
shlb
xchg
jbe
mov
mov
pop
and
stos
cmc
add
lds
adc
int
dec
adc
jge
imul
and
in
mov
les
test
or
dec
sub
pop
inc
dec
out
push
pop
je
sbb
push
mov
mov
xchg
popf
mov
sbb
adc
repnz
mov
pop
fcoml
jo
jo
pop
addr16
mov
pop
test
xchg
rep
and
das
push
mov
mov
cmp
sahf
inc
mov
and
fstpt
cmp
js
jo
shlb
scas
shll
mov
jo
shlb
loope
mov
cmp
movsb
stos
stos
add
xor
mov
bound
pop
cmc
sarb
xchg
movsb
pop
xchg
aas
xchg
mov
inc
xchg
dec
ss
or
nop
scas
push
sbb
nop
inc
data16
test
mov
dec
dec
inc
jnp
les
in
bound
mov
fucomi
test
cmpsb
or
and
jl
rcl
mov
insb
push
insl
fucomip
enter
or
test
jl
call
lds
div
jns
stc
mov
jmp
test
repnz
cmp
xlat
mov
shlb
add
mov
ds
push
and
mov
pop
imulb
imul
pop
repnz
inc
jnp
mov
jb,pn
jae
movb
shll
into
add
push
call
es
clc
scas
dec
inc
xlat
mov
push
pop
idivb
aad
inc
mov
loopne
and
inc
pop
fucomip
cmp
inc
dec
push
add
mov
outsl
cmpsb
stos
push
lock
pop
jmp
sbb
xor
and
mov
xor
fucomi
in
sbb
daa
leave
in
sub
xchg
loope
adc
mov
jno
clc
push
sahf
out
in
and
mov
pop
adc
sub
gs
int3
rcl
outsb
orl
dec
out
cmpsb
sbb
push
rcll
scas
add
add
dec
mov
inc
mov
out
aas
loop
sbbl
repnz
and
ds
dec
xor
scas
sbb
movsb
jecxz
adc
or
adcb
clc
arpl
ret
add
pop
insb
mov
sar
push
enter
je
mov
sbb
rcrb
inc
dec
sbb
sbb
dec
dec
inc
mov
cmp
sahf
jnp
cmp
lcall
inc
fidivl
pop
inc
les
icebp
pop
push
inc
icebp
push
ret
sbb
mov
mov
mov
lds
xchg
xor
ja
lret
xchg
sbb
and
or
ud2
pop
inc
negl
xor
outsb
hlt
cli
gs
sbb
mov
add
adc
ficoms
loop
sub
shrb
xchg
cmp
adc
fs
fwait
into
ljmp
mov
rcl
outsl
into
loop
rorl
inc
movsb
mov
cmp
push
inc
insb
ja
push
mov
jnp
xchg
xchg
add
enter
adc
or
mov
fcomi
lcall
aas
jl
cmc
dec
loop
fs
push
call
fs
call
stc
xchg
xchg
dec
push
lock
fidivs
mov
and
sbb
out
pop
les
mov
pop
into
iret
je
stc
dec
sub
ds
mov
repnz
add
mov
adc
cwtl
shl
int
push
test
dec
mov
or
aad
mov
decb
inc
in
cli
jl
jecxz
sbb
lret
xchg
stos
jp
popa
cmp
xor
push
jecxz
lock
and
and
jecxz
xchg
inc
xchg
sbbb
or
push
sub
and
cmc
loop
int3
arpl
cmp
enter
sub
xor
ja
dec
push
xor
jl
lods
cmp
inc
cmp
xor
jl
aad
jns
js
jg
cmp
mov
mov
into
inc
and
cmpsb
pop
mov
lret
aam
xor
push
pop
jmp
movsl
inc
sub
cmpsb
push
pop
lea
mov
and
ret
icebp
ret
fidivs
aas
shrl
inc
sub
fidivrl
lret
dec
popa
sbb
adc
insl
mov
sbb
sbb
ja
movsb
push
out
and
mov
push
pushf
xor
inc
fsubrs
rclb
test
add
repnz
out
sub
adc
sti
arpl
sbb
wbinvd
shrb
out
lds
lea
mov
mov
mov
jge
and
mov
push
mov
addr16
sub
jnp
aaa
push
fisttps
rcll
jge
and
push
mov
loop
cmp
xchg
inc
lret
insl
and
mov
andl
rorl
jnp
arpl
les
xor
mov
add
or
mov
hlt
out
pop
test
sbb
mov
adc
outsb
add
out
out
fidivl
in
xor
sar
ja
adc
or
test
loop
ficoml
mov
sub
and
jno
es
stos
dec
dec
xchg
stc
popa
fs
ficomps
mov
push
or
lock
mov
jno
les
dec
inc
fdivrl
push
or
and
cmpsl
push
std
xor
call
add
sbb
add
out
jne
sti
push
and
ret
jb
frstor
dec
inc
arpl
jl
sub
mov
sbb
xor
cwtl
and
fwait
pop
pusha
inc
push
ljmp
call
pop
hlt
fnsave
lret
push
push
inc
outsb
cs
xorl
outsl
mov
xor
inc
push
jbe
bound
lea
shl
aaa
adc
or
ret
mov
add
call
test
or
and
lahf
clc
mov
inc
inc
fcomp
sbb
mov
push
dec
bound
sub
cli
sub
clc
dec
jmp
push
push
inc
mov
das
in
pop
sub
push
lods
add
sbb
ss
cli
sbb
mov
leave
pop
repnz
lods
sti
fwait
sbbl
stos
xchg
lret
cmp
dec
pop
scas
clc
xchg
cmpl
adc
cmp
jb
repz
repz
mov
cmpsl
xchg
mov
scas
arpl
and
add
inc
mov
test
pop
push
fdivs
cmp
test
aam
push
addl
jp
mov
test
sub
or
int3
sahf
sub
xchg
adc
add
loope
and
adc
or
or
test
or
pop
loop
xor
or
andb
mov
sub
push
lcall
jp
adc
lcall
mov
pop
mov
or
out
out
dec
pop
pop
out
sub
fs
and
ss
loopne
jno
xchg
mov
pop
in
jo
add
dec
inc
push
in
mov
bound
aad
imul
push
movsb
cltd
push
push
sub
xor
mov
lea
je
add
adc
inc
loop
mov
or
scas
fmull
lods
lret
dec
pop
fimuls
sbb
xchg
out
negb
adc
mov
pop
adc
lret
cld
in
imul
pop
sub
adcl
mov
mov
lea
mov
push
jmp
orl
push
adc
js
sbb
notl
sti
fistps
mov
ret
xchg
pop
adc
gs
aaa
jmp
and
cmp
ljmp
cmp
lds
sarl
and
pop
add
inc
cltd
add
push
adc
imul
or
xor
stos
adc
cmp
idivb
cmp
jo
scas
scas
jno
icebp
popf
or
dec
fbstp
in
nop
pop
das
pop
add
mov
mov
or
pop
orb
jg
jecxz
addr16
adc
cmpsb
lret
pusha
ds
dec
pop
pcmpgtd
pop
push
pop
mov
ss
lds
lea
pop
into
mov
ret
scas
pop
pushf
sub
and
mov
lea
push
outsb
push
mov
jnp
addl
icebp
ja
or
jb
sub
shl
int3
xchg
out
bound
mov
aaa
push
aam
scas
fnsave
push
lahf
push
cmpsb
das
sub
cmp
sbb
js
fists
cltd
out
enter
sbb
or
sub
cmpsb
xor
lods
pop
icebp
loopne
push
stos
flds
dec
inc
jno
pushf
xor
push
ss
inc
fwait
fwait
test
xchg
jbe
aaa
ds
mov
call
imul
push
pop
xchg
mov
fsubrs
jbe
mov
ljmp
mov
scas
inc
or
insb
push
popf
sahf
xchg
movsl
fs
adc
in
nop
sbb
sub
or
cmpsb
mov
fldt
cli
xchg
ret
orl
xor
jle
mov
xor
push
data16
lods
sub
xchg
mov
push
cmc
adc
fisubrl
inc
cltd
cmp
add
push
ja
add
fiaddl
insb
add
cs
xchg
shlb
mov
cld
cmp
and
test
jns
jl
scas
imul
cwtl
push
xchg
mov
pop
dec
jecxz
or
pop
nopl
out
idivb
shll
ret
jg
stc
cwtl
sub
lcall
mov
out
mov
enter
nop
adc
jp
pop
les
arpl
in
add
mov
mov
out
adc
jne
stos
cld
imul
or
inc
fwait
sub
xorl
jb
mov
cmp
lcall
adc
call
cmp
pop
into
pop
out
add
sahf
push
shrb
pop
mul
pushf
push
jg
mov
mov
sbb
sbbl
enter
cmpsl
inc
dec
insl
imull
test
sbb
leave
mov
mov
or
call
shr
in
mov
xchg
or
mov
mov
dec
inc
fidivs
sarl
repnz
add
push
and
cmp
dec
frstor
jp
pop
lods
out
clc
push
xchg
into
xchg
add
xchg
sarb
adc
push
and
notb
mov
aaa
loope
shrl
fmul
adc
cltd
loope
cmc
scas
xchg
incl
fwait
xchg
fs
inc
bound
loopne
aad
push
nop
sti
mov
add
clc
in
pushf
push
mov
push
xchg
sub
mov
jmp
insb
arpl
data16
stos
lods
cmp
ret
fwait
xchg
gs
xor
mov
push
popf
push
test
daa
jnp
pop
jnp
sub
cltd
je
shlb
repz
scas
xor
xchg
inc
adc
cld
imul
xor
xor
popa
jg
push
ja
ret
and
enter
cmp
hlt
ja
push
test
inc
lods
cs
stos
adc
bswap
jecxz
cmc
stc
cs
rcl
cmp
fnsetpm(287
out
jle
push
sbb
cmp
jne
fildll
jno
cmpsb
nop
mov
inc
popf
data16
push
push
addr16
jns
xchg
js
call
inc
or
imul
mov
imul
jg
adc
lods
testl
dec
shll
jecxz
movups
andl
out
arpl
stos
or
or
cmpsb
jns
jb
xchg
xchg
mov
jecxz
shl
adc
xchg
mov
mov
jmp
call
cmp
addb
cltd
jecxz
test
sbb
imul
mov
mov
mov
xorl
mov
or
fisttpl
jmp
pop
mov
in
notb
push
add
xlat
dec
dec
leave
and
imul
aaa
sub
mov
mov
xor
ret
inc
and
cli
sti
pop
cmc
sbb
in
mov
push
ja
push
mov
or
jle
pop
mov
bound
enter
pop
xchg
lret
pop
xchg
call
pushf
cmp
jmp
push
neg
adcl
cmp
cmp
sbbl
clc
sub
jns
or
add
ljmp
xsha1
cmpsb
dec
out
ss
sub
iret
je
or
jno
pop
mov
mov
pop
xor
sti
addr16
mov
pop
test
daa
aad
sahf
push
idivl
xchg
sub
jl
push
jp
mulb
push
in
loopne
pop
rclb
in
jb
ret
mov
ljmp
pop
and
mov
into
pop
sub
mov
out
xor
in
mov
xlat
outsb
xchg
sub
adc
fldenv
xchg
mov
xor
jbe
lret
fwait
f2xm1
mov
mov
adc
inc
xor
mov
gs
xchg
jmp
mov
push
testl
dec
mov
pop
scas
lds
xor
dec
mov
sub
sub
inc
mov
fstpt
and
stc
andl
sbb
xchg
dec
aad
dec
and
mov
ss
out
dec
sbb
idivl
jmp
in
cmp
sbb
sub
das
std
push
inc
aas
sub
loope
popf
and
lcall
add
scas
mov
mov
sub
outsb
cmp
mov
jns
add
pop
test
lds
mov
mov
cmp
xchg
pop
in
pushf
repz
scas
pusha
xor
mov
cmpsl
push
inc
fldenv
mov
push
out
sbb
movsl
mov
xor
mov
push
in
pop
cmp
ret
je
cmc
add
inc
xrelease
sbb
dec
lcall
sub
hlt
shl
mov
rolb
arpl
stos
and
push
call
mov
cmpsl
adc
sbb
xchg
sub
loop
or
loope
mov
les
mov
or
pusha
fadd
insb
sub
mov
and
push
cli
xchg
mov
fcmovnb
into
aam
out
in
add
push
xor
add
icebp
ret
mov
inc
dec
and
divl
js
sti
jne
cli
ficoms
mov
notb
xlat
lods
xchg
mov
push
adc
das
adc
das
lret
bound
add
xor
push
dec
mov
sub
out
xor
icebp
cmp
fwait
push
inc
ret
mov
call
xor
lcall
cmp
xchg
pop
xor
out
loope
icebp
pop
xchg
subb
add
sti
inc
test
mov
into
scas
push
shrl
cltd
ret
aas
aam
mov
fucomi
mov
and
dec
mov
xchg
shll
pusha
shlb
loop
mov
ds
enter
inc
repz
movsb
jl
sar
fwait
js
scas
lods
movsb
inc
fsts
and
leave
push
and
insl
mov
out
fadd
stc
mov
cli
mov
sbb
ljmp
sahf
out
lret
push
mov
rcl
rolb
adc
lahf
repz
shl
call
or
out
add
sub
insl
xchg
mov
dec
inc
fucomp
jno,pn
sub
mov
hlt
or
fnop
sub
testl
popf
leave
fsts
rcrb
mov
adc
mov
mov
cmp
adc
pop
lock
mov
or
imul
outsl
pop
test
jle
negb
cmpsl
stos
sahf
lods
xchg
mov
add
inc
mov
sti
sarb
rcrl
popa
rcr
mov
inc
out
ficoms
mov
push
inc
test
arpl
cli
outsl
hlt
dec
sub
mov
mov
filds
rclb
jns
push
push
mov
push
ja
xor
cmp
xlat
gs
pop
loopne
mov
arpl
sub
insb
or
cmp
xor
repz
mov
fldcw
insl
shll
or
lahf
lods
aas
fstps
xchg
inc
or
out
inc
cmpsl
pop
pop
sbb
sarl
sbb
hlt
mov
jge
sarb
pop
jae
pop
mov
inc
loopne
xlat
xchg
jmp
xor
ljmp
mov
outsb
push
lods
lahf
push
das
fidivs
ljmp
xor
mov
fidivrs
jb
pop
inc
mov
sbb
xlat
mov
gs
int
jne
xchg
iret
fdivrs
ja
add
sbb
pusha
sub
xchg
jge
das
loope
shll
and
roll
add
fwait
sti
adc
sub
movaps
icebp
dec
and
inc
sar
xor
lds
stos
xorl
pushf
nop
mov
loope
cmp
shll
cmp
mov
pop
xor
xchg
loop
shl
int3
jle
xchg
popw
pop
sbb
out
jnp
icebp
mov
ljmp
mov
imul
in
inc
sub
cwtl
pushf
or
xor
test
cmp
push
stc
insb
outsl
stos
mov
fstl
js
jmp
call
or
es
xchg
sub
sbbl
push
loope
and
ret
push
cli
push
movsb
lods
movsl
cmp
stos
sbb
shrl
add
mov
fstpl
mov
insl
js
pop
xchg
jecxz
in
addl
scas
psubusb
cli
repnz
dec
cmp
popf
xor
inc
pushf
arpl
loopne
aam
and
lods
mov
push
in
out
or
xchg
dec
xor
fs
pop
fidivl
popa
xor
push
adcb
mov
loopw
pop
adc
dec
and
stos
inc
inc
jae
mov
das
push
jmp
dec
push
out
or
jne,pn
pop
mov
js
xor
shll
dec
inc
xlat
ss
clc
int
mov
push
mov
xchg
cs
jge
cwtl
jl
dec
fwait
rcll
push
pushf
inc
fxch
or
or
mov
sub
cmpsl
sbb
mov
pop
sub
rcrb
fwait
in
inc
jge
jne
addr16
stc
cwtl
push
and
imul
xchg
push
pop
mov
mov
gs
roll
fdivrs
mov
dec
bound
xchg
jae
dec
cli
cwtl
ljmp
js
jecxz
push
cs
xor
xchg
sub
rolb
iret
addb
icebp
insb
and
adc
ljmp
cltd
ljmp
inc
fs
mov
and
mov
adc
and
rclb
mov
incl
inc
adc
dec
push
jbe
mov
sarb
sbb
pop
or
pop
pushf
mov
cli
roll
and
and
pop
sahf
stos
sti
testl
jne
movsl
mov
dec
xor
ja
pop
mov
and
pop
test
andb
loop
lds
fldenv
push
aam
fsubl
mov
push
out
data16
inc
jecxz
mov
jecxz
movsb
dec
outsb
out
popa
dec
out
pop
dec
lock
push
lods
arpl
or
fs
and
jns
pop
outsb
push
inc
mov
jno
mov
jecxz
fcmovnb
lds
and
loop
jmp
adc
jecxz
add
aam
lcall
and
js
imul
je
ret
pop
adc
cmp
aad
loop
in
pop
mov
mov
inc
cmpl
cmpsl
ror
fwait
bound
or
jmp
stos
push
je
mov
sarb
xor
and
pop
fildl
and
pop
in
adc
clc
sbb
inc
push
clc
pop
ret
push
pop
mov
mov
mov
sbb
addr16
xchg
mov
mov
and
stos
xchg
adc
and
pusha
cmp
dec
fistpl
addr16
je
fnstcw
xchg
xchg
mov
test
out
lret
lret
rcpps
adc
and
pushf
movsl
clc
jle
cmpsb
adc
imul
cltd
cmpsl
es
fiaddl
xor
sbb
cmp
orl
inc
inc
pop
mov
mov
lret
inc
ljmp
or
daa
hlt
adc
gs
push
inc
lock
jo
cmp
int3
mov
or
shlb
out
ror
aaa
jmp
dec
sbb
fs
mov
wbinvd
repz
and
or
into
dec
ror
fwait
sbb
ret
mov
cmp
sub
pop
and
cmp
test
gs
ljmp
cld
cmp
fadds
data16
adc
xchg
or
mov
jns
jp
adcb
mov
xor
dec
mov
and
inc
adc
in
lcall
sub
push
add
inc
ss
test
add
inc
dec
shl
jle
mov
xchg
repnz
mov
sbb
idivb
aas
rcll
nop
jmp
xor
ret
xchg
ljmp
adc
mov
mov
fwait
cmc
test
into
enter
add
icebp
jmp
mov
mov
sti
stos
sub
int
sarb
movsb
inc
inc
xchg
sarl
push
mov
cmp
jg
cmp
adc
popf
jge
iret
aam
dec
lret
add
movsl
sub
add
mov
add
repnz
xchg
popf
sub
pusha
movsl
jo
xchg
mov
loopne
pop
add
loop
dec
bound
mov
jne
ret
iret
pop
or
sarb
fnstsw
fildll
mov
cmpsl
rorl
test
popf
aas
mov
push
xchg
push
pop
sub
bound
movsb
sbb
sbb
push
negl
xor
out
addr16
and
pop
enter
lds
aaa
test
lods
xorl
or
sub
into
mov
fnsave
mov
cmp
ret
fiadds
mov
xlat
jge
lret
out
push
jb
inc
push
inc
sbb
orb
popf
mov
push
inc
fidivl
xchg
jo
adcl
neg
or
insl
push
pop
outsb
xchg
fnsave
mov
push
mov
pop
call
mov
mov
push
je
and
jnp
fbld
insb
ss
pusha
andb
adc
add
icebp
xchg
and
rcll
fnstcw
inc
pop
jb
cmp
mov
mov
aaa
fstpt
sbb
test
sbb
mov
jecxz
sub
bound
dec
cwtl
aas
jp
add
inc
inc
pop
jb
mov
sub
test
sahf
pop
arpl
mov
inc
gs
sbb
push
outsb
dec
dec
ret
stc
clc
dec
cmpsb
cmp
inc
push
test
adc
into
in
ficoml
jb
les
mov
imul
addr16
pop
mov
int
cltd
int
cld
mov
pop
or
xchg
in
pop
sub
scas
out
jbe
dec
dec
dec
cltd
and
cmp
popa
ja
mov
adcl
pop
sbb
insb
popa
fsubrl
or
jmp
out
shl
repz
and
push
sbb
mov
mov
cmpsb
in
mov
imul
int3
out
xlat
sbb
adc
dec
sub
mov
ds
mov
mov
mov
fstl
movsl
push
cmp
loope
cmc
int3
sbb
push
jne
xor
outsb
dec
rclb
inc
fmuls
pop
adc
and
cmp
testb
push
adc
ret
xor
pop
stc
adc
cmc
in
adc
push
dec
pop
cwtl
cmpsb
mov
dec
lds
out
cmc
fstpt
pop
push
je
adc
push
movsl
lret
outsl
cwtl
bnd
lods
xchg
push
mov
inc
arpl
adc
add
stos
jmp
loope
repz
fucom
inc
pop
dec
inc
inc
pop
popf
mov
loope
cli
xchg
cli
xchg
push
incl
push
or
or
in
dec
in
dec
popa
or
hlt
pop
dec
sub
dec
add
or
push
or
testb
xchg
mov
nop
adc
cmpsb
mov
int3
push
add
cmp
test
aaa
pop
fs
icebp
cld
and
xor
mov
mov
mov
mov
or
cmc
mov
js
gs
xchg
mov
jmp
sub
xchg
or
push
imul
xchg
sub
sahf
clc
movsl
xor
mov
adc
add
or
test
cmp
popf
aas
jno
out
mov
les
and
notb
popa
adc
pop
xor
stos
jnp
das
xchg
aam
imul
push
mov
cs
cmpsl
add
push
cmp
push
inc
mov
ja
outsb
adc
arpl
test
inc
ja
imulb
sbb
enter
xor
xor
mov
test
fdivp
and
out
push
push
jecxz
xor
xchg
xchg
in
pop
or
cmp
lret
test
negb
push
pop
sub
adc
scas
mov
int
sbb
push
outsl
mov
add
ja
pop
cmpsb
ljmp
mov
in
mov
mov
xlat
insl
sbb
outsl
mov
dec
add
fs
lea
fsubr
outsl
push
sub
insb
sub
adc
sti
jo
roll
mov
inc
inc
icebp
jge
pop
scas
xchg
xlat
jle
xchg
cmc
xchg
mov
jl
mov
cltd
push
rcrb
mov
scas
jne
and
cwtl
das
repz
sti
imul
sbb
xchg
adc
inc
jns
xchg
lds
pop
cmp
orl
sahf
pop
call
and
mov
test
jge
sub
repnz
call
mov
inc
mov
sahf
add
imulb
xchg
mov
push
sbb
mov
imul
jp
cmp
mov
inc
xchg
ss
aad
mov
cmp
push
scas
clc
or
push
hlt
or
mov
sub
ljmp
cmpsb
pop
int3
fs
inc
pop
push
test
jo
inc
sub
lahf
push
aaa
inc
and
pusha
pushf
inc
int
out
mov
xor
pop
hlt
cmp
out
sarb
inc
adc
ss
sub
mov
idivb
std
inc
ret
xchg
gs
mov
sbbl
leave
cmp
in
jb
push
pop
das
icebp
mov
cmpsl
jg
pusha
push
hlt
rorl
imul
cmc
shlb
ss
cltd
adc
test
mov
mov
mov
jb
cmp
shrl
xor
dec
fistps
frstor
add
mov
dec
sbbl
mov
jp
imul
pop
jo
cmpsb
cld
sub
and
imul
push
rcrl
scas
cmp
xor
scas
popf
add
cld
test
mov
and
sub
pop
in
push
mov
inc
addl
aad
pop
mov
out
ss
jmp
testl
xor
push
or
xor
jae
adcb
pop
sahf
cs
cmpsb
movsb
mov
jmp
popa
jns
jbe
cmp
jo
push
inc
xchg
and
cmp
add
xchg
sub
fisubs
pop
addr16
cmp
cmpsl
mov
int3
imul
sti
mov
pop
add
and
sub
clc
xor
dec
pop
frstor
inc
test
sub
hlt
into
mov
cwtl
or
je
dec
and
jp
aad
dec
pop
jge
hlt
sub
dec
movsb
jbe
pop
lret
xchg
cmp
mov
dec
call
or
jge
sbb
sbb
aaa
xor
pop
aas
xchg
ret
out
inc
add
jmp
cmp
lock
stos
adc
iret
outsb
xchg
mov
mov
cli
lods
shl
dec
dec
mov
movsl
jo
aas
test
xor
fs
sbb
dec
and
mov
add
ljmp
pop
rorl
movsb
pop
pop
in
ret
mov
test
shrl
pop
mov
loop
inc
and
xlat
sub
dec
bound
popf
or
nop
xchg
movsb
incb
jb
aam
test
lods
pop
and
mov
les
sar
fiadds
jne
mov
jp
addb
cmpsl
inc
pop
mov
outsb
pop
lds
cld
dec
adc
lret
out
push
jecxz
ds
jbe
mov
sbb
stos
outsl
jmp
test
test
out
fsubl
add
cmp
outsb
in
push
ljmp
ljmp
mov
push
and
outsb
aad
jns
pop
ret
lahf
shrb
mov
rorb
scas
push
popa
fstl
addr16
andb
shll
pop
cmpsl
sub
arpl
clc
ljmp
insb
mov
cmp
mov
mov
test
mov
out
jmp
jne
rclb
daa
jp
xchg
cmpsl
cwtl
pop
mov
clc
int
loop
int3
ljmp
push
xchg
jmp
xor
and
adc
xorb
and
loopne
add
imul
xchg
push
test
push
inc
xor
mov
mov
mov
xor
loopne
pop
fwait
aaa
mov
sbb
sub
sbb
rcr
push
ret
push
loope
xchg
daa
cmp
cmpsb
stc
fidivl
mov
sbb
ret
iret
xor
sub
push
mov
lret
movsl
lds
lcall
adc
call
imull
sbb
inc
jno
aad
out
mov
and
fwait
mov
inc
mov
lods
xor
or
faddl
xor
push
test
mov
push
into
sub
das
lods
push
jmp
jge
mov
push
mov
js
lods
test
bound
into
jecxz
leave
cmp
inc
adc
inc
cltd
sub
xchg
scas
lods
inc
and
ss
movd
push
insb
pushf
xor
cmpl
xor
rcr
pop
adcb
mov
popa
and
mov
pop
inc
lret
fldlg2
enter
ljmp
or
jnp
sbb
pop
mov
xor
jle
repnz
arpl
xchg
dec
xor
testb
fbstp
xchg
hlt
push
sub
mov
pusha
inc
arpl
fidivl
and
mov
int
loope
mov
inc
jbe
in
cmpsl
push
lea
bound
xchg
es
push
cmpsb
and
xchg
inc
addb
idivb
clc
mov
or
xchg
mov
mov
das
cmp
sub
vmread
add
adc
push
shll
jne
stos
jo
fdivrl
sub
scas
xchg
sub
cli
shr
xchg
mov
inc
push
sub
sbbl
mov
and
stos
or
inc
mov
push
in
into
fsubl
stos
insb
leave
es
fisttpll
sbb
clc
cmp
xchg
ljmp
add
push
mov
icebp
mov
pop
cmp
xchg
dec
pop
ret
jecxz
pop
adc
addr16
shl
jo
fs
int3
or
xor
mov
jmp
das
out
push
push
and
fadds
mov
mov
mov
push
xor
iret
lahf
pop
fst
jmp
jp
imul
pop
add
sbb
and
or
ret
fldcw
ret
shlb
movsb
mov
inc
in
subl
jle
in
adc
jl
sbb
push
fidivl
mov
push
ljmp
inc
hlt
mov
lods
dec
cmp
cs
clc
je
jg
dec
aad
loop
mov
mov
mov
mov
aad
adc
aaa
int
sbb
xchg
lret
push
pop
test
outsb
push
cmp
or
xchg
roll
lcall
leave
mov
icebp
and
shrl
insl
inc
pop
dec
sbb
inc
shlb
sbb
or
dec
add
add
jmp
cmp
xchg
jnp
test
sub
jge
jo
jmp
sub
cld
lcall
jne
dec
repnz
leave
add
fisttpll
mov
fnsave
push
sub
jl
pop
movsl
push
mov
pop
les
cs
push
lret
xchg
dec
in
repz
or
jb
sbb
mov
xlat
fisttpll
pop
fidivs
mov
insl
ja
lret
sbb
mov
insb
ret
push
fstl
shll
xor
decl
imul
clc
lock
flds
stc
dec
push
popa
enter
sahf
mov
mov
addr16
push
adc
sbbl
mov
testb
or
mov
xor
ds
push
cwtl
mov
fisttpll
inc
bound
xor
mov
mov
lds
jns
in
clc
mov
push
push
inc
mov
shl
push
jo
push
inc
fldl
inc
sub
stc
cld
jmp
enter
and
outsl
mov
xor
test
jbe
rorl
cwtl
cmp
js
add
aaa
fcom
mov
cli
andb
inc
data16
sbb
inc
push
stos
cmpsl
orl
cmp
out
sbb
mov
out
or
hlt
mov
test
adc
test
dec
icebp
es
and
mov
xchg
in
lea
negl
pusha
pop
push
push
dec
or
imul
cmc
aam
cmp
ds
ficoms
xchg
xchg
dec
or
shrl
cmp
xchg
sub
scas
mov
jmp
pop
xchg
cmpsl
cmp
fbstp
daa
out
cmp
cli
add
incb
ljmp
sub
mov
jl
fsubr
fcoml
int3
leave
xorl
sbb
jecxz
mov
xchg
xchg
pushf
rorb
pop
sbb
clc
jp
imulb
jge
sbb
fdivl
sub
ss
or
jg
rorb
push
lods
add
cmp
inc
xchg
ficompl
adc
mov
imul
lds
cmp
outsl
je
mov
xchg
pop
push
ret
das
jp
imul
cmc
sub
orl
or
test
scas
jecxz
xor
xchg
adc
adc
inc
and
shl
call
mov
sub
cmp
mov
cmp
sbbb
adc
nop
testl
jg
bound
fisttps
inc
fld
add
mull
jo
xchg
or
out
repz
fisttpll
mov
test
mov
and
mov
idiv
push
scas
aaa
dec
in
int3
jmp
and
adc
cli
sub
mov
popa
sbb
sbb
sarb
push
lret
push
or
cmp
cmpsl
in
xchg
pop
bound
out
add
mov
cmpsl
jnp
sbb
mulb
or
pop
inc
sbb
xchg
int
cli
cltd
inc
add
add
xor
int3
push
inc
mov
jb
fidivs
cld
out
sub
inc
inc
xlat
jbe
fcomps
cmp
lea
lahf
jp
aad
mov
insl
jge
outsl
out
push
cmp
or
mov
push
push
loopne
xchg
fidivrl
fldcw
ret
cmp
loope
ficoml
xor
bound
mov
ret
stos
shl
xlat
aam
and
sti
shl
lcall
jne
fildl
xor
sub
into
shrb
scas
and
push
xor
shlb
xchg
mov
cmp
and
aaa
jp
insb
imul
sbb
xchg
iret
hlt
test
es
cld
inc
push
inc
ja
jae
adc
notl
mov
ret
dec
int
inc
sbbl
xchg
out
push
lea
mov
mov
push
nop
pop
xor
xchg
cmp
pop
push
shrb
outsb
mov
icebp
sahf
pop
stc
inc
push
clc
aaa
std
dec
cwtl
mov
flds
pop
inc
xchg
mov
sbbb
push
sub
pop
fsubl
pop
cmc
and
mov
push
andl
fcmovu
push
jecxz
rcr
add
imul
mul
jge
stc
and
mov
roll
aaa
or
insb
sbb
dec
cmp
subl
xchg
mov
imul
insl
sbb
mov
imul
gs
sbb
lret
lcall
cwtl
cld
push
inc
push
aas
stos
inc
in
pop
sub
add
orl
sbb
adcl
pop
pop
inc
mov
dec
fistps
xchg
sub
aad
into
data16
cmpsl
or
fidivrs
in
std
sub
cltd
cwtl
fnclex
pop
xchg
fnstenv
dec
shll
mov
jbe
repz
and
push
mov
push
test
xlat
adc
out
popf
test
daa
sub
and
mov
xor
bound
je
dec
pop
into
pop
and
rcl
jne
jle
shrl
xchg
loop
mov
jns
data16
cmpsb
ljmp
cld
or
or
outsb
mov
jns
data16
movsb
stos
lds
sub
ret
fsubl
enter
arpl
push
mov
add
arpl
into
nop
daa
add
mov
cltd
aam
icebp
cs
fwait
std
jl
inc
sbb
ret
lds
adc
or
xchg
mov
xchg
ljmp
or
test
fistps
mov
dec
lock
scas
aas
dec
jecxz
adc
testl
fadd
and
pop
adc
js
fmuls
sbb
xchg
adc
mov
out
imul
dec
loopne
mov
mov
add
aas
shl
scas
mov
fildll
mov
xchg
sub
rorl
insl
and
sbb
pop
mov
sbb
or
fwait
mov
fistpl
mov
cmp
or
and
mov
enter
and
pop
inc
mov
mov
inc
aam
aas
mov
push
jmp
and
inc
xchg
bound
cmp
and
inc
inc
and
sub
xor
mov
lods
and
cli
sbb
test
mov
sahf
pop
mov
mov
jp
or
cmp
insl
roll
or
or
movsb
sub
lret
int3
sub
cmc
mov
cmpl
arpl
xchg
cmp
dec
inc
inc
push
imul
sahf
mov
lods
in
xchg
hlt
push
pushf
inc
mov
mov
add
pop
ljmp
pusha
mov
shlb
xor
std
popf
cmpsl
fninit
sub
cmc
and
adc
daa
xor
out
repnz
test
rorl
and
ja
repnz
dec
sub
stos
mov
or
xor
loopne
sbb
inc
sti
movsb
mov
jmp
dec
push
pop
roll
jnp
mov
adc
xor
sbb
sbb
xchg
repnz
data16
inc
pushf
xchg
and
enter
mov
sbbl
pop
popf
pop
mov
inc
xlat
mov
xor
repz
add
aad
jge
fs
movsb
jle
mov
xchg
shlb
and
jns
pop
repz
mov
jns
jnp
cmp
sbb
lret
movsl
lods
or
and
and
fs
jbe
mov
xor
movsl
xor
sarb
inc
sub
lahf
cmpb
inc
cmp
push
push
ds
std
push
mov
mov
popa
mov
loopne
jg
mov
push
mov
cmc
int3
adc
std
mov
cmp
mov
add
xchg
rol
loop
mov
adc
adc
hlt
cmc
adc
mov
mov
pop
out
cli
cmp
mov
aam
cmp
mov
fsubr
push
pop
mov
inc
fdivp
out
xor
test
pop
cltd
popl
inc
mov
insl
mov
mov
daa
lods
mov
dec
vmovntpd
fildl
and
pusha
cmpsb
xchg
negl
add
push
xor
arpl
push
xor
push
sti
xchg
test
lods
jmp
mov
fdivs
xchg
je
adc
data16
mov
popa
add
xchg
ja
mov
js
in
xchg
cmpsl
lcall
fmuls
cmc
adc
ljmp
jno
mov
icebp
shrb
dec
popa
fcomp
jnp
addr16
xor
stos
push
push
sub
mov
adc
ret
xchg
mov
push
ror
sub
jmp
in
dec
jo
mov
or
mov
add
cmp
xlat
cmp
popf
and
push
scas
lods
mov
mulb
fdivl
loopne
or
mov
sti
jbe
pop
pushf
scas
aas
loope
pop
cmp
fsubr
in
nop
pminsw
daa
outsl
dec
xchg
jl
mov
mov
dec
in
adc
enter
adc
push
fbld
sbbl
jb
sub
sbb
das
push
sbb
mov
cs
stos
mov
repz
and
dec
push
jecxz
in
in
and
mov
lcall
cld
and
mov
mov
frstor
inc
setns
add
dec
lea
ss
pusha
sbbb
cmpsl
jp
test
fstpt
push
in
cmp
jnp
cli
loop
cmp
ljmp
and
xor
jns
int3
lods
dec
and
ror
rol
adc
cmp
push
rcrl
inc
cmpsb
les
cld
push
cmp
sbb
shlb
in
sub
cwtl
pop
mov
mov
inc
and
icebp
je
pop
bound
mov
xchg
inc
pop
vunpcklpd
ljmp
leave
ret
add
or
mov
push
aad
pop
insb
leave
mov
or
inc
add
fisttpll
es
inc
fs
pop
fwait
jne
or
daa
and
shll
rclb
lcall
les
push
inc
and
int
jmp
mov
dec
dec
repnz
rolb
inc
cltd
mov
pop
and
mov
shlb
shll
test
insb
andb
push
ljmp
leave
test
lret
ljmp
inc
fadd
sbb
mov
daa
jecxz
shlb
or
cmp
add
addr16
jge
daa
jns
ss
std
lcall
imul
lods
mov
mov
aaa
push
pusha
jecxz
clc
sub
sbbb
stc
loop
mulb
add
fs
push
and
ds
xchg
repnz
adc
jl
js
fsubs
cmp
mov
es
insb
sub
je
add
adc
pop
mov
test
leave
stos
mov
pop
cmp
cwtl
adc
xchg
add
xor
out
jge
xor
xor
outsl
xchg
loopne
outsl
xchg
jbe
orb
pop
cli
ror
dec
movsl
cmp
imul
xchg
testb
stc
out
adc
mov
dec
ret
testl
mov
dec
pop
icebp
clc
cmp
cmpsl
sub
jns
dec
pop
or
push
call
test
xchg
xor
pop
cld
shll
dec
sbb
jae
cmp
jl
into
test
out
pop
loope
push
xchg
ljmp
inc
cmc
mov
sbbb
xor
mov
mov
mov
mov
push
sbb
jg
cwtl
cmp
or
psubw
pop
dec
hlt
xor
xchg
jno
scas
push
test
insb
mov
in
dec
jl
pushf
leave
lret
or
mov
lret
stos
shll
lds
sbb
or
xchg
cli
pushf
xor
sbb
fwait
stos
push
lods
in
nop
pop
jae
lcall
push
mov
mov
pop
pushf
out
cmp
jnp
jnp
cmp
mov
adc
inc
es
xlat
xor
inc
adc
lods
xchg
pushf
dec
dec
mov
arpl
sarb
bound
xchg
sbb
push
aad
add
jge
scas
mov
data16
cmp
ljmp
jmp
or
jb
mov
mov
push
or
add
mov
xor
mov
aad
xor
push
test
jb
out
add
pushf
sbb
dec
cmp
sbb
lea
fisubl
mov
xchg
or
cmpb
testb
sarb
push
jno
insl
mov
push
mov
mov
nop
or
jg
mov
cmpsl
inc
jbe
leave
movsl
shll
mov
sub
imulb
or
pop
movsl
ja
mov
mov
and
ss
popa
or
les
sub
push
or
ja
negb
hlt
adc
inc
push
mov
sub
mov
add
daa
adc
jbe
jmp
fucomi
mov
inc
cmc
ss
adc
int3
dec
out
lds
xchg
aaa
cs
nop
fs
mov
test
test
xchg
shrl
cmp
test
xchg
inc
leave
or
mov
sub
inc
fistpl
in
adc
cmp
rcr
cmpsl
out
mov
adc
pop
outsl
jl
popa
push
dec
ret
outsl
and
mov
cwtl
stos
pop
cmc
pop
mov
jl
dec
add
scas
jo
ret
int3
xchg
movsb
notl
fistpl
fdivs
pop
notb
ret
outsb
xor
leave
xor
push
adc
stos
inc
sub
loopne
mov
test
into
xchg
sti
cmp
mov
or
fstpt
pushl
loopne
push
dec
push
xchg
jns
pop
jecxz
xchg
aad
push
test
jle
cvtps2pi
xor
sub
dec
jb
jp
lcall
or
in
mov
test
pop
mov
mov
outsw
sbbl
pop
addr16
arpl
out
mov
fstpl
sub
dec
dec
movsb
nop
repnz
jecxz
lods
iret
lea
add
test
loop
add
fcmovnbe
cli
or
cltd
arpl
fwait
outsl
push
int
popf
std
inc
imul
and
adc
pop
adc
rorl
lods
stos
hlt
rcrb
mov
lahf
mov
push
and
push
inc
mov
dec
loope
outsb
inc
stos
lahf
inc
addr16
adc
lret
mov
jge
jbe
sbb
sbb
hlt
shrb
hlt
sub
leave
jnp
cli
repz
les
int
jne
lret
lret
sub
pop
into
and
cmp
mov
outsb
mov
stos
imul
mov
xchg
dec
pop
clc
pop
mov
mov
sbb
or
and
xchg
and
pushf
sub
ret
arpl
sub
test
out
sbb
int3
push
adc
pop
sahf
or
out
lds
add
jb
scas
jb
stos
add
inc
jnp
jge
out
cmpsl
sub
adcb
cmp
sub
mov
movsl
sbb
hlt
cmp
in
mov
js
fbld
out
test
stos
cwtl
mov
dec
cmpsl
insb
xor
cmpsl
shr
adc
dec
in
int3
fsubr
insl
xor
xchg
jmp
enter
or
movlps
lret
js
lret
bound
jle
xchg
and
sti
adc
outsb
aad
mov
out
xor
fadd
jns
outsl
add
jg
fsubs
movsl
sbb
sbbl
cltd
or
lea
mov
andl
mov
bnd
loope
cs
pop
clc
jp
sub
into
das
sub
push
cs
fdivl
repnz
xchg
icebp
iret
jne
outsl
fwait
mov
xchg
or
das
xor
les
fldt
cmpsl
clc
outsb
add
jl
pop
and
jecxz
ret
dec
loop
gs
push
dec
and
xlat
fdivrs
xchg
xchg
divb
cs
movsl
dec
adc
xchg
xchg
pop
enter
ss
xchg
add
dec
loope
cmc
or
cmp
lock
sbb
lods
popf
pop
and
lahf
mov
in
das
loopne
rcll
es
sub
iret
xor
fistpll
dec
ds
pop
stos
push
stos
ljmp
cmc
cld
ss
scas
pop
mov
add
and
inc
or
jg
mov
adc
or
xlat
lahf
sbb
clc
imul
aad
adcl
imul
push
inc
mov
out
push
daa
xchg
cmp
add
addr16
dec
xchg
mov
pop
stos
xchg
pusha
sbbb
mov
cmp
push
adc
pop
mov
mov
push
pcmpgtd
lock
add
dec
push
insb
repz
mov
xor
lock
mov
jg
xchg
add
add
cmp
stos
in
xchg
rcl
insb
add
repnz
aam
repz
push
adc
push
cmp
in
add
in
orl
repnz
iret
scas
les
out
push
adc
xchg
lcall
in
and
lock
js
sbb
push
cmpsb
arpl
loopne
xlat
test
jae
insb
rolb
jno
mov
mov
das
mov
sbb
xchg
idivb
les
pop
sbb
xchg
cmp
sbb
imul
mov
fstl
mov
xchg
mov
sbb
shrl
cmp
or
testb
and
fwait
pusha
out
or
clc
filds
in
add
fwait
ret
push
jne
mov
daa
inc
rorb
lahf
add
jg
push
sub
rorl
pop
pushf
add
loop
cli
fcmovnu
testb
xchg
push
sarl
mov
aam
movsl
lahf
xlat
xchg
ja
out
cmp
leave
mov
movsl
add
sbb
andb
push
or
cmp
adcb
pop
jb
cmp
pop
es
jmp
jae
jge
jl
dec
test
jl
or
inc
mov
fcoml
mov
ja
mov
hlt
inc
mov
outsl
mov
lcall
adcl
jns
lds
insb
lock
adc
test
je
lock
mov
sub
mov
in
sti
iret
xlat
fmul
cld
or
ja
and
sti
addb
movsb
fildl
les
push
or
ds
dec
mov
negb
cmpsl
jge
aam
dec
loop
dec
add
cld
test
movsb
jmp
inc
push
repz
cli
gs
sti
pop
xchg
lds
arpl
jbe
push
jmp
or
pusha
inc
or
push
jmp
imul
clc
push
call
sbb
inc
sbb
outsb
addr16
je
mov
push
sti
mov
popa
xchg
loope
dec
mov
mov
dec
mov
gs
cld
pop
dec
push
mov
lahf
fwait
decb
cltd
dec
adc
push
call
mov
lret
fsubs
in
sti
stos
sbb
test
in
or
pop
mov
pusha
cmp
sbb
addb
cltd
arpl
mov
mov
js
mov
outsl
cltd
enter
xor
aaa
gs
clc
arpl
mov
outsl
out
sbb
lret
cmp
mov
mov
js
movsb
sahf
push
sbb
jge
lods
ja
data16
sub
pusha
shl
cmc
inc
push
movsl
js
and
and
inc
aam
xchg
shlb
mov
out
dec
fcomip
pusha
stos
adc
sub
stos
mov
pop
inc
mov
out
mov
lods
imul
ds
jnp
aad
icebp
pop
xor
scas
aaa
ret
imul
push
or
cmp
push
jnp
mov
jg
in
xchg
or
sbb
fsub
sub
je
int3
popa
xchg
adc
jg
fdivl
xchg
repnz
sar
js
sub
mov
lcall
js
jns
or
fildl
adc
icebp
pop
sbb
xchg
outsb
and
out
and
leave
sub
sbb
sbb
push
pop
pushf
xchg
pop
pop
dec
in
xchg
sub
jns
popf
scas
ret
cld
xchg
out
in
aaa
fwait
call
ja
xor
jmp
jb
push
jle
fwait
mov
movsl
sub
je
sub
lret
adc
pop
add
gs
ss
pop
leave
xchg
in
cmp
add
push
ss
xlat
mov
adc
daa
inc
pop
and
into
loop
xchg
dec
insb
dec
rcl
jmp
mov
jl
jb
vucomisd
lods
mov
stos
inc
shrb
xor
fsubrs
pop
mov
add
notl
inc
mov
jle
dec
dec
sbb
mov
or
cmovae
cmp
pop
xor
outsl
jns
int3
xorb
mov
mov
lret
fildl
fists
mov
in
push
insb
inc
mov
psrlq
adc
add
sub
cwtl
mov
into
xchg
cmp
push
test
sbb
pop
jl
mov
daa
pop
insl
mov
adc
mov
pop
sub
outsl
lock
mov
testb
shll
fidivrs
lret
push
and
inc
iret
jbe
sub
lods
lds
mov
shlb
xor
in
cmp
decl
stc
enter
dec
les
in
loope
inc
adc
xchg
xor
inc
out
push
mov
add
push
mov
pop
not
sahf
mov
ret
jnp
in
dec
leave
dec
and
ljmp
outsl
push
xchg
pop
fs
lds
rcl
imul
and
cmp
pop
and
cmp
pop
rcrl
rcrb
in
icebp
aad
mov
jmp
jp
jmp
mov
fnstenv
push
out
nop
push
or
lahf
arpl
mov
cmp
sbb
cs
lods
sbb
imul
inc
rorl
pop
xchg
cmp
or
iret
adcb
shrb
jne
lods
adc
push
mov
ret
mov
es
arpl
pop
xchg
mov
xchg
pop
ja
push
jbe
das
mov
xchg
dec
or
add
pop
ret
mov
inc
or
popf
mov
fnsave
psraw
imulb
fadd
sub
out
cmp
lods
pop
or
mov
adc
dec
xchg
dec
loope
insl
or
sbb
or
jnp
dec
je
mov
int
push
stos
int
xchg
sti
int
sbb
incl
or
and
inc
pop
jle
mov
pop
cmpsl
and
lcall
pushf
xor
mov
inc
aas
pop
int
cwtl
std
sub
jno
jno
or
and
push
push
push
push
mov
mov
popa
imul
mov
sbb
fs
fsubrl
outsb
push
lret
sub
out
cmp
mov
fadd
sub
and
mov
dec
sub
icebp
mov
cmc
add
mov
enter
enter
mov
movlhps
fs
and
int3
dec
fwait
test
xchg
aam
and
and
and
mov
je
loop
mov
push
sub
aad
ds
mov
dec
jnp
mull
icebp
sub
stos
pop
pop
cmp
loopne
cmpsl
and
mov
ja
cs
mov
add
dec
das
in
add
aad
xchg
les
mov
push
jmp
gs
ss
out
cvttps2pi
pop
das
aaa
incl
lods
icebp
sub
iret
inc
lock
dec
mov
mov
loope
mov
frstor
or
adc
pop
repnz
mov
adc
push
ds
iret
dec
xchg
adc
rcr
and
push
pop
add
leave
dec
repz
jne
lds
movsb
sub
mov
ret
cmp
push
adc
mov
cmp
mov
lea
pushf
and
jg
mov
fsubp
addb
loope
enter
hlt
lcall
pop
xchg
pop
in
out
mov
bound
aas
dec
repnz
call
in
sbbl
pop
insl
jge
popf
and
mov
das
dec
es
sub
test
adc
enter
sbb
out
xor
sub
fldt
mov
xchg
push
xchg
adc
in
ja
or
cmp
xorl
mov
mov
fs
xchg
xor
xchg
xchg
mov
push
lahf
jmp
mov
cmp
mov
arpl
sub
nop
sbb
ret
lret
std
repnz
loopne
pop
dec
pop
jl
repz
pop
mov
emms
jo
fmul
cwtl
sarb
cmp
in
leave
add
push
popa
rorb
mov
push
push
ficompl
xchg
cmp
into
cs
xor
lret
call
pop
daa
sbb
pop
jl
das
mov
test
jns
mov
pop
dec
jnp
iret
push
mov
fwait
xor
test
lcall
cli
adc
xor
sbb
adc
out
mov
jmp
lods
rolb
test
jg
repnz
pop
sub
test
aaa
jno
push
movsl
mov
pusha
and
adcb
icebp
or
jnp
sub
push
jle
mov
sbb
xor
add
outsl
pusha
divb
pop
movsl
pop
out
mov
mov
out
jnp
cs
fdivp
mov
inc
lods
lods
fstps
mov
test
mov
jnp
push
xchg
adc
mov
mov
ss
jne
add
push
dec
in
outsl
mov
inc
ret
sahf
xchg
push
ljmp
jno
push
cmc
xchg
shrl
push
icebp
lds
imul
ds
add
cmp
lea
adc
mov
das
call
sbb
lret
push
jnp
dec
pop
mov
in
mov
xor
rcll
pop
inc
inc
dec
cmp
fbld
push
mov
mov
cmc
jecxz
test
stc
mov
into
sub
icebp
mov
sarb
lock
pusha
sub
or
ficompl
add
push
js
dec
dec
mov
jp
mov
cmp
xor
js
pop
mov
cltd
dec
lret
push
add
lods
jmp
cltd
sbb
cmpsl
mov
xchg
jle
loopne
add
sub
mov
stc
or
xchg
adc
jno
add
mov
fnstenv
xor
dec
mov
xor
popa
push
imul
cmp
leave
mov
dec
test
xor
fstpl
sub
sbb
ret
add
in
test
or
outsb
aam
jge
or
add
push
movsb
pop
loop
xchg
shrb
xor
inc
in
and
xchg
scas
bound
xlat
adc
push
pop
lock
jmp
jns
add
icebp
pop
popf
scas
aad
pushf
mov
ret
clc
fs
xchg
xor
iret
jns
pop
fidivl
jb
out
lods
xchg
movsl
loopne
mov
aas
pop
mov
rcrb
inc
idivl
mov
mov
cmp
movsb
test
pop
or
subb
shrl
push
sbb
sbb
imul
push
or
sub
jbe
int3
jg
into
pop
mov
push
adc
add
mov
lock
lods
test
idivl
cmpsb
dec
cmp
dec
xlat
testl
lcall
or
ja
loope
int
lods
add
xor
add
enter
sbb
push
xchg
data16
jmp
rorl
fiadds
hlt
jmp
inc
aas
ja
push
out
sbb
in
aaa
or
pop
pusha
jl
fmull
xchg
adc
adc
sarb
outsl
mov
jne
inc
mov
mov
into
adc
sub
mov
jmp
ror
sub
mov
push
or
jo
adc
je
imul
orl
xchg
aas
test
or
mov
ljmp
sbb
cmp
test
ret
add
push
mov
mov
pop
mov
shll
lcall
and
push
or
cmp
test
xor
cli
mov
lock
jae
cmp
push
testb
sub
sub
int
in
mov
pop
sbb
js
das
and
sub
push
loope
and
inc
loop
js
push
add
wrmsr
repz
or
dec
pop
mul
sti
sub
mov
leave
jnp
subl
mov
or
cmp
scas
push
mov
or
je
jg
cmp
hlt
mov
cmp
sub
or
dec
mov
dec
stc
enter
xor
ss
ret
loopne
frstor
pop
cs
and
add
mov
jge
js
loope
icebp
movsl
jb
push
mov
dec
rcll
sarl
pop
jl
push
mov
push
jb
mov
mov
subb
fwait
xor
inc
popf
andb
sub
adc
sbb
pop
sbb
sahf
inc
xor
cmp
push
mov
mov
mov
scas
movsl
popf
cmc
sub
add
dec
int3
jg
pop
xchg
lcall
or
stos
xor
repnz
xchg
outsb
and
pop
cmp
push
and
xlat
cmc
aaa
inc
fdivl
inc
cli
cmp
roll
aaa
repz
lret
movsb
rol
pop
mov
stos
mov
shl
imul
mov
push
lods
sbb
jno
jno
push
pusha
aad
in
clc
cmp
ss
aas
cltd
das
sbb
mov
notb
xor
ds
repnz
add
push
mov
fwait
std
jge
push
fwait
aam
stc
pop
std
push
mov
dec
mov
mov
mov
int
adc
mov
jg
outsb
sub
pop
fstl
mov
stc
sbb
pop
arpl
loope
movsb
imul
adc
pop
adc
lock
or
mov
bswap
aas
dec
adc
mov
cmp
repnz
adc
jo
divl
adc
xchg
movsl
lock
ret
adc
fnstcw
shll
insb
sbb
negb
mov
fucomi
lea
cli
mov
cmp
fdivrl
mov
test
push
mov
and
jl
xor
push
lcall
jge
shrb
push
ret
add
xchg
lods
rcrb
sub
dec
jb
sbb
mov
mov
push
leave
lcall
pop
xor
pop
std
push
inc
adc
ret
mov
das
test
int
cld
push
decb
xor
jg
sub
mov
test
inc
jb
xchg
stos
fnstcw
fldl
insl
add
xlat
orb
push
mov
pop
mov
mov
test
push
lret
ja
jbe
lock
cmp
popa
test
xchg
adc
lret
mov
xchg
repz
es
stc
or
mov
sub
lea
mov
mov
popf
cmpsb
aas
stos
inc
xor
fldenv
das
xchg
lahf
jmp
inc
in
dec
aam
fiaddl
add
test
movsl
dec
lods
and
sub
mov
xor
lcall
and
pop
xchg
push
in
cli
jp
mov
popl
xor
cli
xchg
push
popa
add
pop
push
or
push
mov
mov
jecxz
xor
cmp
cmpsl
mov
dec
dec
inc
ss
push
inc
adc
jl
andb
push
sub
cmpsb
add
loope
jmp
repz
cmpsb
rorb
jl
mov
adc
ja
lcall
mov
out
sahf
or
stc
mov
add
out
sub
sub
sub
stos
jg
xor
test
rcrl
dec
sahf
jb
adc
jg
lock
push
jb
in
xchg
cs
out
sub
cmp
insl
ret
push
adc
loopne
int
fisubrs
jg
mov
lahf
nop
adc
adc
call
fstl
jmp
int
loopne
ja
mov
pop
sbb
xchg
pop
xor
inc
cs
xchg
adc
pop
and
data16
fmuls
inc
adc
nop
and
push
jge
sbb
push
sub
fstl
stc
xchg
in
js
in
mov
es
pusha
jl
mov
scas
cmpsb
xor
cs
hlt
or
ss
push
jne
mov
mov
insb
dec
pushf
lods
fmul
insl
hlt
mov
jg
sbb
and
mov
fists
iret
xchg
xor
add
push
aam
and
inc
out
out
test
xchg
into
pusha
sub
hlt
idivb
and
fcomps
das
and
xchg
movl
mov
and
push
push
jns
insb
sub
sbb
jo
hlt
mov
dec
shl
sbb
pop
jo
mov
xlat
idivb
inc
call
in
in
test
mov
fstpl
outsl
es
cmpsl
aam
push
into
jg
aas
out
cmpsb
aam
aas
aad
lods
and
sub
jl
xchg
shl
dec
mov
and
dec
lahf
fisubl
arpl
minsd
shlb
sbb
je
add
add
xchg
pop
jnp
jo
mov
jl
mov
xor
dec
ss
lahf
inc
sub
push
or
subb
testl
push
mov
cmp
shrb
js
jecxz
push
adc
jb
push
xor
inc
fstps
push
push
int3
popa
cmp
stos
inc
in
fnstenv
shrl
stc
push
push
aaa
int3
jmp
dec
int
repz
test
aas
cwtl
and
aam
adc
xor
js
cmpsb
push
inc
inc
sbb
fnstenv
dec
sub
pop
push
mov
sub
xor
jecxz
or
cwtl
push
lods
leave
sahf
or
pop
cmp
fwait
in
bound
ret
sbb
xor
incb
jo
pushl
xor
push
popf
mov
fwait
movsl
jp
xor
pop
sbb
ds
jge
xor
xor
jne
inc
dec
fnsave
in
sbb
out
cs
sub
ret
int
mov
or
mov
fisubs
jp
sbb
ret
xchg
dec
addr16
clc
mov
aas
repz
pop
adc
fwait
mull
mov
shl
jns
sub
pushf
imul
add
andb
inc
mov
cwtl
adc
mov
orl
pop
pop
sahf
mov
into
adc
js
fwait
popa
lods
mov
int3
arpl
out
push
mov
repnz
xor
scas
mov
out
cmp
insb
test
arpl
mov
sbb
test
in
xchg
dec
lret
aad
lock
into
loope
jmp
repz
sub
cli
jno
pop
es
push
mov
ds
jae
push
rcll
add
pop
jo
mov
mov
xchg
addl
mov
test
lcall
andb
xor
stos
call
rcrl
dec
aad
js
gs
fnstcw
cmp
sbb
mov
or
xchg
or
popf
rolb
fnsave
inc
gs
xor
pop
mov
jbe
push
aam
push
fnstenv
fbstp
mov
cmpsb
push
pushf
test
xor
mov
fwait
jecxz
mov
pop
push
aad
adc
xor
outsb
jmp
repnz
pushf
xchg
cmp
xchg
pop
nop
subl
sbb
fisttps
cltd
add
mov
cmp
leave
inc
cmp
inc
aas
aad
push
daa
ljmp
jns
jns
shl
mov
loopne
call
xchg
ljmp
cmp
clc
mov
pop
mul
aam
fnstenv
mov
es
sbb
or
jo
clc
cltd
push
mov
and
sbb
push
cmp
sub
xor
mov
iret
test
jle
stos
pusha
jge
adc
test
mov
push
cli
lds
push
sub
adc
ljmp
ret
mov
and
add
aaa
sbb
or
jns
add
xor
push
mov
cmp
lcall
sahf
out
movsb
mov
adc
xor
cmp
lods
call
int3
scas
xor
aad
sahf
in
push
or
xorb
inc
mov
sti
lahf
or
jns
pop
mov
lret
pop
rclb
call
cmp
icebp
pop
jnp
pusha
or
pop
ret
lret
lcall
call
cmp
and
scas
push
inc
inc
adc
xor
popa
jmp
or
fstps
aaa
inc
add
mov
lret
sarb
mov
and
frstor
test
xlat
adc
jns
fbld
sub
ljmp
data16
inc
sub
cmp
jmp
pop
shlb
mov
mov
sub
sub
daa
dec
dec
and
and
hlt
sbb
rcrl
insl
out
popa
push
mov
loope
pop
shlb
mov
cmp
lods
inc
push
pop
xor
inc
mov
fists
sbb
fcompl
xor
inc
data16
jmp
jge
dec
push
insb
inc
sbb
xor
stc
add
test
aaa
adc
xchg
pop
xor
cmc
pop
icebp
es
pop
mov
js
popf
test
ret
jne
or
mov
cmpb
ds
jg
sti
pop
jae
pushf
sub
push
iret
sbb
jne
push
mov
call
mov
mov
fcoml
out
popf
stc
fcoml
mov
test
add
test
arpl
lock
shll
cmpsb
sub
mov
icebp
jnp
add
out
add
aam
rclb
dec
xor
out
push
popf
cmpsb
std
cmc
jg
clc
or
mov
pop
mov
mov
out
movsb
jg
fstl
push
jae
repz
mov
mov
or
pop
shlb
pop
cmp
cmp
inc
out
inc
xchg
xchg
out
xor
cmpsl
cmpl
add
inc
shlb
xlat
lcall
push
mov
jb
popf
lea
add
mov
lea
dec
dec
push
stos
lds
inc
fnstsw
xlat
fs
dec
addr16
and
pop
repz
lret
cmp
jg
mov
mov
test
cmp
loopne
mov
clc
mov
lock
imul
cld
in
xchg
es
scas
and
inc
pop
scas
and
ss
data16
xchg
in
cmp
fmull
test
fnsave
es
fnstsw
pop
jecxz
inc
outsl
inc
int
int3
push
or
daa
mov
and
mov
push
aas
aaa
sbb
sti
mov
xor
mov
add
push
in
lahf
sahf
cmp
mov
arpl
xor
inc
xchg
mov
lcall
xor
daa
jecxz
roll
clc
cmpsl
xor
shll
movsb
sub
sub
imul
xor
xchg
and
push
out
je
loope
dec
push
sub
enter
jle
adcb
fiadds
lret
lret
push
cwtl
es
xchg
add
aas
in
inc
sar
dec
jmp
xor
mov
adc
sti
lds
movsb
push
inc
enter
mov
dec
push
out
enter
cli
fdivp
in
cwtl
xor
mov
jle
jg,pt
inc
add
add
adc
cmc
dec
jg
loope
in
shrl
in
sbb
in
push
push
test
je
xchg
in
xlat
xchg
aas
fcompl
or
pop
stc
insl
data16
pop
or
cmp
jecxz
inc
in
aad
ss
jl
or
pop
pop
xor
cmp
and
jno
mov
fcmovne
cwtl
fs
test
sahf
or
adc
inc
push
mov
mov
fisttps
push
lcall
sarb
ljmp
pop
xchg
pop
push
shlb
imul
int
sbb
fsubrp
add
ret
rcr
jecxz
and
mov
mov
and
pop
loop,pt
mov
repz
int3
push
xchg
pop
or
into
stos
fprem
mov
js
divb
mov
sbbl
lret
call
or
and
mov
gs
xchg
cs
push
sbb
mov
jmp
repz
adc
movsl
sahf
xor
xchg
ss
jo
lock
mov
scas
pop
popa
jl
jno
mov
roll
rcr
outsb
xlat
inc
pusha
or
in
mov
fimull
mov
or
sub
sbb
lahf
and
sti
ret
xchg
mov
bnd
or
push
xchg
push
push
sub
mov
pop
in
mov
leave
pop
dec
sub
xorb
sub
mov
pop
pop
inc
popf
outsb
sub
lock
or
push
xlat
or
inc
mull
call
or
fiadds
sbb
sub
pop
or
add
dec
mov
and
jb
cld
pmulhw
andl
lock
addr16
je
aaa
adc
or
fsubrs
shll
movsl
out
aaa
pop
out
lds
sub
xchg
cltd
inc
or
jp
fucomip
sbb
test
cs
pop
adc
fmul
push
cmp
cs
cmp
repz
mov
mov
pop
mov
sti
outsl
jne
imulb
push
pop
lock
loope
adc
enter
cs
and
lret
mov
inc
cwtl
pop
gs
xchg
xor
popa
add
movsb
mov
pop
adc
mov
jns
pop
cmp
mov
cmp
or
xor
mov
les
into
sahf
xor
mov
xchg
outsb
dec
sub
lds
add
jbe
lcall
cmp
push
sub
sbb
sub
lret
sub
popa
push
fcompl
cltd
mov
cwtl
movsl
xor
in
ret
jns
sub
dec
mov
jno
sti
mov
adc
mov
loopne
fwait
pop
push
ljmp
icebp
adc
add
test
mov
test
xchg
or
out
sub
shr
add
jb
insl
push
jbe
xor
lods
cmpsb
ret
sub
into
notb
pop
and
push
mov
int3
lret
pop
jge
pusha
scas
andl
inc
notl
add
sub
lods
pop
sub
xor
add
inc
insl
sbb
push
cmpsl
insb
scas
js
push
pop
ds
aas
cmp
in
mov
enter
das
clc
sbb
aam
test
xchg
xcrypt-ofb
cmpsl
outsl
movl
repz
mov
loope
sub
mov
sbb
mov
jno
pop
fcmovb
pusha
enter
inc
jmp
shl
dec
and
sbb
inc
es
jo
or
mov
cli
jp
mov
pushf
or
lods
inc
or
or
add
cli
cmp
fs
testb
mov
cmpsb
pop
and
mov
shl
mov
out
mov
dec
outsb
push
outsb
clc
fidivl
add
xor
mov
testb
xchg
mov
dec
data16
jmp
lds
rorb
xchg
pushf
and
mov
std
xchg
pushf
add
mov
adc
lcall
shrb
mov
push
or
jl
mov
adc
iret
pop
adcl
push
jb
ret
gs
shlb
shll
loop
rclb
push
cmp
mov
out
or
int3
mov
aas
push
test
addb
sub
or
and
lock
jnp
and
adc
js
jmp
add
mov
ret
xor
inc
or
push
cmpsb
sub
sub
dec
out
xchg
and
insl
pop
sbb
push
push
xor
test
lahf
arpl
imul
sbb
push
sbb
lret
stos
mov
repz
insl
inc
cltd
fadds
dec
sub
sub
mov
cs
insl
adc
inc
mov
repz
jg
push
dec
inc
fldl
push
fstp
adc
xor
sub
shlb
imul
sbb
jmp
mov
mov
push
mov
adc
cmp
xchg
push
cmc
sub
pop
das
push
into
pop
test
cmpsl
test
icebp
jge
adc
jae
cmp
inc
mov
or
lret
fiadds
push
push
push
pushf
mov
in
inc
rol
ds
cmpsl
out
dec
add
dec
push
lods
rep
cmpsl
out
sub
sub
stc
jo
sbb
cmp
and
ss
xchg
adc
sbb
and
sbb
push
add
sbb
jg
dec
stos
xor
push
or
jecxz
int
mov
add
xlat
mov
test
pop
rcl
xchg
arpl
xor
test
arpl
push
push
mov
dec
jecxz
push
in
or
mov
inc
daa
in
sbb
push
out
or
pop
sti
cmp
xchg
in
xchg
cmc
ss
scas
push
sbb
mov
xchg
push
lock
xor
push
fstl
push
inc
out
stc
icebp
xor
and
sahf
cmc
and
jne
iret
inc
cmp
jp
pop
or
aaa
clc
test
sub
jmp
rclb
fcom
lahf
ss
cltd
push
jmp
movsb
rcl
lock
ss
adc
imul
or
pop
orl
mov
loopne
movsb
and
testl
inc
pop
cmc
jns
lock
lcall
test
in
xchg
mov
dec
pop
mov
jecxz
and
mov
xchg
popf
sub
cld
ret
sub
or
xor
add
push
sbb
pop
fs
xchg
mov
rorl
mov
shl
cmp
jnp
xlat
mov
mov
aad
jle
pop
cmp
data16
xchg
mov
out
bound
push
orl
sbb
scas
andl
inc
cmp
push
cmp
xchg
mov
fcom
fadds
mov
and
xor
gs
popl
fwait
mov
mov
arpl
jns
arpl
in
fcomi
int3
mov
pushf
cwtl
xchg
mov
jno,pt
lock
jbe
dec
cmpsb
pop
sub
xor
jbe
cmp
fsub
push
stc
pop
imul
scas
inc
push
push
fcompl
adc
adc
push
ffree
and
or
add
push
hlt
lods
mov
cld
loop
fwait
pop
cmpsl
jno
imul
mov
mov
mov
into
repz
pop
xor
addb
stos
aaa
push
fldcw
mov
outsl
push
out
xchg
sub
std
fdivl
add
and
push
fwait
mov
mov
dec
mov
pop
mov
dec
add
sub
not
mov
test
jae
lds
ret
mov
xlat
jmp
lds
test
push
add
pop
cmc
test
es
fiadds
addl
test
jge
cmp
push
or
lret
push
mov
das
adc
das
mov
or
push
aam
pop
pop
icebp
imul
daa
stos
inc
pop
pop
push
setl
fcoms
icebp
or
shr
stos
pop
dec
fsubrl
scas
inc
cmc
lret
jbe
mov
push
sbbl
xchg
subl
mov
in
cmpsb
mov
pop
mov
fsubp
add
xchg
push
or
loopne
add
iret
pop
in
aaa
mov
mov
jne
aas
test
sub
dec
scas
add
test
adc
pop
cwtl
inc
imul
fisttps
mov
jbe
inc
insb
rcrl
sbb
jg
pop
loopne
mov
lds
mov
push
pop
xchg
icebp
inc
fsubs
mov
iret
jbe
pop
jbe
je
xchg
cmpsb
inc
std
cltd
out
out
pop
sbb
cmp
call
inc
sbb
scas
arpl
cmpl
inc
aaa
push
push
jecxz
outsl
outsb
add
movsb
jae
pop
ljmp
test
push
ja
mov
fyl2x
xchg
out
xor
mov
push
pop
div
sbb
mov
mov
push
push
sahf
push
inc
mov
aas
les
xor
cmp
xchg
pop
out
ret
or
mov
xor
movsb
pop
mov
vandps
cmp
adc
push
subl
fldt
pop
or
sbb
negl
xor
in
sub
lahf
add
xchg
mov
sarl
mov
fildll
lret
stc
sub
lahf
xchg
test
or
stos
pop
sub
mov
faddl
in
nop
or
cmp
lret
scas
ss
fwait
imul
stos
outsb
in
das
loope
jae
loopne
lcall
mov
xchg
stos
subb
ja
test
mov
out
leave
sbb
test
add
loope
scas
mov
lcall
negl
push
repz
push
ja
jb
fst
addr16
xlat
scas
and
test
mov
mov
shr
insb
sub
pop
int
aaa
dec
test
cmc
xchg
xchg
pushl
lret
mov
imul
pop
jge
sarb
adc
cvtps2pi
mov
test
push
movsl
jmp
test
and
mov
xor
sbb
loopne
test
ja
and
pop
xor
nop
loope
ljmp
pushf
xor
in
cli
dec
cltd
add
lock
mov
xlat
push
call
cmp
dec
fcmovb
daa
outsl
sub
rclb
stos
add
adc
mov
ljmp
push
mov
cmpsl
sbb
cmp
jns
int3
sub
fildl
int
jb
in
stos
pushf
mov
dec
rcrl
or
adc
shl
pop
push
jecxz
das
addb
in
je
jne
cmpsb
push
cmp
repnz
es
jl
jo
mov
xor
enter
cmpb
test
nop
mov
or
cmp
call
mov
push
or
pop
sbb
jge
cld
or
fwait
mov
pop
adcb
pop
movsb
movsb
xchg
fimuls
jns
inc
fisubl
int
dec
sahf
scas
loope
jo
aas
out
cwtl
push
sub
lahf
push
cs
aaa
into
es
popa
fmuls
push
mov
nop
fcoms
les
mov
dec
sti
call
fcmovb
sbb
adc
jno
lahf
inc
mov
mul
adc
cmp
and
mov
rcrb
mov
sbb
out
pop
pusha
orb
cltd
xchg
mov
xor
sbb
push
addr16
xor
call
call
int
jecxz
lods
pusha
test
adc
jae
pop
popl
mov
jbe
cwtl
pop
lods
and
adc
and
jl
call
mov
push
fnstsw
and
dec
adc
fs
mov
test
inc
sbb
orl
mov
fisubrs
jle
jle
fsubrl
push
scas
add
mov
mov
cs
inc
ljmp
add
hlt
add
cmc
call
repnz
pusha
xchg
data16
loope
movsb
add
addr16
sub
out
mov
add
push
sbb
mov
ljmp
dec
mov
pop
call
push
das
xchg
sbb
fs
and
or
lods
xor
jp
mov
push
sbb
rcrb
loopne
inc
mov
inc
sbb
jnp
sub
dec
loopne
mov
incb
popf
movsl
test
add
lret
rcl
divb
aaa
push
std
daa
lahf
sub
xor
addr16
sub
arpl
test
pop
pop
and
push
inc
sti
inc
loopne
lahf
add
xchg
xchg
ret
imul
insb
fildll
cmc
popf
dec
add
lcall
mov
mov
mov
scas
and
or
aaa
add
xor
xchg
cmp
hlt
in
test
dec
xchg
cmpsl
test
je
lret
and
xchg
sbb
mov
adc
repnz
and
ffree
loop
sub
or
clc
or
aad
mov
add
loope
andb
cmp
mov
mov
mov
add
repnz
jmp
leave
pop
or
sub
insb
leave
lods
mov
cs
subl
lds
aam
out
out
mov
mov
jmp
inc
cmpsl
fmul
lcall
scas
cli
adc
inc
std
lahf
cmp
lcall
test
inc
push
popf
mov
xchg
cmpsl
cmp
mov
orl
shlb
clc
out
out
mov
ljmp
lret
jge
mov
xor
fisttps
add
fstpl
lcall
sahf
gs
insl
in
adc
or
pop
stc
test
repz
out
loope
scas
dec
pop
cmc
mov
jno
lds
push
xor
inc
fwait
loopne
int
scas
add
mov
push
addb
fildll
mov
add
out
sahf
xchg
and
add
xor
sbb
jnp
aaa
cli
or
mov
lret
cmpsb
stos
mov
adc
xchg
dec
ret
adc
in
xchg
bnd
inc
pop
adc
call
js
repz
or
pop
mov
fdiv
push
xchg
lret
adc
add
nop
or
ss
in
in
push
fildl
sub
cwtl
test
adc
sbb
das
popa
pop
addr16
mov
mov
adc
sub
cmp
clc
or
aam
mov
icebp
dec
in
scas
inc
dec
cmp
ja
int3
pushf
mov
jnp
imul
lods
lock
sub
dec
cmc
outsl
testb
and
fdivrs
nop
out
stc
adc
jp
sbb
push
cmp
lahf
in
in
pop
gs
mov
mov
nop
insl
inc
cmpsl
loop
cltd
loop
or
mov
rcrl
int3
and
js
movsb
testl
jno
sbb
xchg
and
ret
leave
xchg
out
mov
xchg
cltd
jns
jb
cli
xchg
adc
cmc
push
clc
add
icebp
cs
push
pusha
adc
stc
add
ds
loopne
mov
fdivrp
cmpsb
in
xor
outsl
xchg
adc
rcr
jo
test
fbstp
test
adc
scas
xor
and
jnp
into
xor
jmp
iret
xor
adc
or
mov
mov
movsb
push
push
pop
test
push
adc
ret
or
adc
out
push
or
test
add
mov
mov
sbb
inc
fwait
aaa
jecxz
or
popf
mov
push
fstp
loop
hlt
push
pop
pop
cvtps2pi
adc
sub
inc
negb
mov
mov
aaa
test
add
xchg
inc
mov
cld
mov
in
xchg
lods
pop
add
lahf
push
imull
jmp
adc
sbb
aam
orb
jg
fmull
inc
jmp
xchg
loop
cwtl
cld
fwait
sub
mov
inc
insl
pop
pop
sbb
xchg
push
sarb
push
loope
mov
adc
subl
xchg
shll
shlb
iret
rcrl
inc
xchg
bound
mov
orl
push
stos
dec
lods
subl
inc
dec
or
enter
push
outsl
ret
testb
add
cwtl
pop
gs
shl
and
pop
and
clc
mov
jp
iret
jbe
cmpsb
aas
push
fdivr
adc
pop
push
out
scas
or
fisubl
loopne
shrl
mov
insl
dec
push
inc
cwtl
ja
decl
jle
subl
fildl
sub
jg
xlat
jae
cwtl
test
push
inc
testb
push
fmull
jbe
les
ss
cmpsb
and
mov
and
pop
push
jge
mov
shlb
fisubrl
out
negb
sbb
out
in
push
lcall
sbb
jae
mov
or
dec
stos
ljmp
aas
lcall
iret
popf
in
or
lods
mov
lock
popa
sub
sub
mov
stos
jmp
sti
jo
xor
adcb
add
mov
add
test
adc
mov
xchg
out
in
jg
jnp
mov
mov
mov
sub
xchg
into
push
pop
inc
out
push
mov
in
pop
in
imul
test
push
fsubp
std
mov
movsl
cmp
cmp
lods
mov
xor
std
or
ljmp
pop
mov
ljmp
jo
sbb
cwtl
sbb
xchg
cmp
in
div
adc
pop
adc
cmpsb
jle
data16
pminsw
push
je
aam
lret
mov
mov
jb
xor
pushf
and
arpl
ja
adc
and
cpuid
es
lods
jmp
shrl
add
shlb
jnp
je
pop
stc
ret
xchg
lret
fdivrs
arpl
cld
mov
inc
fstpt
sbb
ja
cmc
or
mov
jmp
insb
pop
xchg
cmc
fucomp
cmp
into
inc
inc
call
test
inc
xchg
mov
lea
add
pop
mov
xchg
loop
and
pop
mov
cmp
out
add
or
mov
repz
dec
cltd
mov
lret
popa
push
fists
les
divb
loop
xor
daa
popa
cwtl
in
cwtl
pop
imul
add
jo,pn
movsb
mov
dec
sub
mov
sbb
js
cmp
imul
pop
lds
dec
add
push
fcoms
repz
pop
aas
cltd
xor
xor
outsb
sub
mov
inc
dec
mov
mov
pop
ret
dec
aam
and
in
sbb
insl
lret
test
dec
mov
sbb
jnp
inc
sbb
je
mov
jecxz
adc
jne
sbb
fistpll
lcall
repz
aas
aas
push
jle
fsub
dec
jecxz
mov
xor
pusha
sbb
in
pop
lret
icebp
xor
lea
rcrl
lods
cmp
stc
dec
mov
loopne
iret
pushf
xor
pop
iret
cmp
cmp
loop
sub
mov
xor
inc
mov
int
cmp
lea
roll
or
scas
sti
sub
inc
pop
jb
dec
push
mov
out
mov
fstl
dec
jb
or
xchg
mov
xor
cmp
push
fdivrs
gs
repz
adc
or
cmp
in
dec
popa
in
mov
stos
inc
sbb
aad
pop
jns
pop
xchg
and
xchg
repnz
sbb
jbe
mov
push
adc
pop
testb
es
xchg
pop
cmp
mov
cli
imull
mov
mov
les
imul
push
es
mov
lock
js
pop
ret
mov
sbb
aaa
pop
cmp
call
in
mov
mov
notl
loopne
mov
add
int3
lahf
pushf
scas
rcr
push
mov
insb
fwait
movsl
clc
or
push
and
adc
dec
lret
stos
cltd
insl
je
hlt
pop
es
sub
mov
push
and
inc
test
sti
dec
repz
xor
into
loope
xchg
sub
mov
int
lret
inc
and
out
in
dec
mov
sbb
xchg
lds
int
pop
lahf
push
xchg
mov
out
xor
inc
faddl
push
daa
sub
or
dec
insl
lock
and
xchg
aad
mov
lret
adc
mov
in
lds
mov
roll
inc
xor
mov
dec
xchg
push
movsb
sbbl
aam
xor
out
aad
aad
nop
sti
popf
mov
mov
xor
inc
push
call
mov
and
sahf
and
pusha
idivl
adc
into
inc
sahf
add
loopne
loopne
or
test
dec
test
pop
adc
int
inc
lret
imul
frstor
int
mov
stos
push
int
insb
add
xchg
xor
xchg
mov
rcr
cld
stos
leave
lods
aam
test
call
push
imull
lret
popf
inc
pop
mov
xor
das
xchg
pop
push
pop
sahf
and
fs
mov
in
fidivl
sbb
jbe
jbe
lcall
add
sbb
add
or
lea
adc
inc
inc
addr16
xor
dec
mov
adc
adc
fcom
int3
push
incb
mov
sbb
das
pop
xchg
push
aad
or
pop
lock
pushf
ss
add
into
fisttps
icebp
inc
jae
es
fcomps
cmpsl
cld
sti
aad
loop
int3
push
adc
jp
cli
dec
mov
leave
out
mov
jmp
push
inc
fld
into
fcomip
fldenv
mov
es
dec
out
pop
inc
jg
mov
sbb
mov
loope
jno
inc
outsl
mov
mov
stos
push
pop
ret
inc
adc
xchg
pop
jle
and
jbe
sub
adc
fcomps
das
aaa
mov
push
jl
das
mov
mov
pop
out
sub
ljmp
add
icebp
adc
mov
adc
rcrl
mov
mull
call
pop
lds
aad
ss
loop
fcmovnu
and
xor
jmp
movsl
pushf
dec
and
out
test
mov
stos
mov
and
adc
std
inc
and
xchg
inc
nop
cmpsl
lret
mov
lods
fmul
call
stos
push
or
mov
add
sbb
sbb
aaa
mov
mov
in
add
stos
cli
and
int
push
add
sbbl
leave
xor
loope
xor
push
je
in
lcall
out
cmp
xor
jnp
sbb
sub
les
aam
mov
sbb
fdivrl
push
mov
xchg
jmp
fwait
pop
in
xchg
mov
adc
or
in
mov
ret
cmpsl
adc
ret
xor
dec
sbb
push
dec
in
data16
cwtl
je
xchg
call
push
je
cmp
jb
bound
int
bswap
mov
xor
and
jg
inc
inc
aam
jae
sbb
sub
jae
sub
imul
mov
roll
sbb
in
lods
pop
dec
les
aad
scas
rcll
sub
les
xchg
and
inc
pop
cmp
inc
scas
test
mov
cwtl
inc
sbb
ss
mov
inc
mov
cmp
popf
ss
in
mov
aaa
or
inc
test
aad
out
mov
aam
mov
or
add
mov
mov
outsl
lret
repnz
push
pop
outsb
add
jmp
rcll
mov
ficoms
out
icebp
sbb
dec
xchg
jmp
fchs
jo
daa
inc
sub
jae
or
mov
outsl
mov
and
sbb
fcomi
inc
dec
push
cltd
test
sbb
push
add
mov
leave
inc
cmpsl
pushf
lods
mov
mov
outsl
pushf
pop
cli
and
arpl
out
outsl
fptan
in
or
bound
adc
in
aaa
and
xchg
out
cmpsb
dec
cmp
mov
jge
pop
mov
test
shrb
pop
add
stos
xchg
pop
aad
pop
or
xchg
sub
adc
mov
in
ljmp
or
mov
dec
or
cli
lea
fsts
mov
fsubs
and
sarb
jge
xchg
mov
std
test
sbb
jg
lds
arpl
pop
xchg
cmp
and
les
pop
ficoms
mov
rcr
stos
addr16
lret
mov
lods
jo
or
subb
add
ljmp
jecxz
fimull
push
aaa
mov
jns
cmpsl
pop
hlt
mov
mov
out
adc
les
jno
into
loop
pusha
adc
xor
aaa
psllw
insl
aas
arpl
xchg
xor
or
fstps
pop
in
mov
mov
push
pop
mov
jns
ret
ret
jmp
fldcw
xchg
pop
pop
lahf
pusha
pushf
es
repz
fnstenv
aam
fisubl
and
in
pop
add
pop
mov
xchg
jb
inc
mov
fisttps
test
jno
sub
es
inc
pop
inc
fstpl
push
or
jmp
scas
ss
jmp
mov
dec
aam
pop
mov
or
inc
fidivrl
xchg
or
enter
arpl
in
jge
adc
sahf
xor
xchg
leave
jle
arpl
ret
shll
dec
iret
push
push
push
adc
push
dec
inc
adc
inc
cmp
test
cmp
cmp
fs
into
fcomps
jb
int
or
mov
adc
add
inc
dec
mov
jmp
imul
in
aas
clc
sub
mov
xchg
push
in
pop
outsb
pushf
scas
call
sti
leave
sbb
xchg
pop
xchg
mov
pop
cmc
jbe
lahf
sub
rorb
leave
pusha
inc
cmp
outsb
addr16
lcall
fldcw
mov
push
add
pop
hlt
out
adc
xor
inc
fs
push
and
add
xlat
imulb
jno
dec
sub
pusha
or
shl
mov
daa
inc
mov
mov
out
data16
push
scas
push
adc
daa
fsubr
bound
pop
mov
pop
sub
xchg
xchg
repz
addr16
gs
inc
pop
in
out
test
sahf
das
repnz
adc
imul
pusha
cmp
pop
dec
scas
mov
mov
xchg
test
aaa
fidivl
jle
lods
std
or
sbb
pop
das
inc
fildll
adcl
insb
add
mov
sub
and
scas
pop
addr16
les
cmc
out
cmp
push
mov
adc
addr16
mov
movl
xlat
outsb
or
add
dec
push
scas
movsl
sub
inc
sub
popf
gs
nop
push
add
or
lahf
scas
leave
xor
int
sbb
mov
xchg
sbb
sbb
and
outsl
cmp
cmpsl
add
repnz
sub
in
inc
bound
jg
cmp
mov
je
lret
in
pop
and
andb
daa
push
stos
gs
pop
mov
xchg
xor
xlat
mov
push
and
addl
insb
adc
jnp
fcompl
pop
pusha
pushl
repnz
test
xchg
pop
subb
push
adc
pop
adc
aaa
daa
and
sub
xor
sub
xor
and
mov
subb
in
sbb
cmp
ret
popf
scas
fs
mov
push
leave
mov
enter
mov
pop
sub
ljmp
jge
dec
sub
cmp
adcl
jb
out
sbb
cltd
ss
push
pusha
mov
and
inc
cmc
push
jae
outsl
mov
add
call
or
lods
and
pop
push
cs
loope
stc
cli
mov
stos
sbb
fstps
sbb
test
xchg
pop
out
push
ds
bts
dec
hlt
xor
sub
cld
fisubrs
mov
fcoml
dec
xchg
adcl
dec
cltd
cmp
add
ljmp
mov
pushf
movsl
pop
imul
fsubrp
in
int
mov
adc
hlt
sbb
dec
scas
sub
jge
aam
pop
les
hlt
inc
insl
jbe
sti
add
sbbl
jp
data16
sahf
adcl
lods
xor
test
mov
mov
mov
jnp
imull
mov
into
stc
aas
fs
adc
push
xchg
mov
in
sub
lret
or
jmp
cmpsb
loopne
sub
out
loopne
movsb
inc
pop
xor
inc
cwtl
sub
xlat
daa
int
insl
clc
and
or
push
stos
jo
sub
lods
xchg
cld
adc
fidivs
es
pop
xor
sbbl
adc
scas
pop
jne
mov
daa
dec
in
jle
addb
jnp
popf
stos
lret
popa
cmpb
and
fldenv
xchg
dec
les
mov
mov
adc
push
or
jb
iret
push
inc
sbb
int
lret
out
add
sub
mov
arpl
xor
add
dec
sub
pop
sub
in
lcall
mov
pusha
add
mov
sbb
shrb
leave
mov
imul
add
enter
cmpl
xchg
loopne
xor
ret
sbb
notb
xchg
jle
fdiv
ret
jp
mov
jle
push
aaa
sti
test
ja
or
lea
stos
inc
enter
std
and
mov
mov
sbb
andb
dec
mov
jb
or
adc
out
cwtl
xor
and
push
adc
leave
xchg
out
outsl
sahf
and
and
xor
jae
aad
jo
mov
hlt
jae
out
inc
hlt
push
cmp
pop
popl
cmpsl
adc
jo
push
inc
mov
xor
mov
xlat
mov
nop
push
xchg
and
adc
lret
jns
jmp
filds
shrl
or
pusha
add
fdivp
ja
adc
cltd
pop
lcall
mov
add
nop
fucomp
orb
mov
sbb
mov
push
cmc
cwtl
pop
movsb
in
rcrb
adc
mov
or
push
test
pop
dec
xor
aas
repnz
enter
push
or
adc
and
sub
insb
subl
in
rorb
jns
sbb
xchg
stos
jmp
in
jne
fidivrl
fwait
push
cmpsb
js
inc
jb
add
push
dec
movsl
xlat
hlt
sub
sti
mov
adc
inc
and
imul
mov
loop
mov
cwtl
mov
int
data16
sub
mov
fidivrs
std
sub
inc
pop
and
or
pop
and
mov
dec
xchg
enter
cmp
pop
adc
mov
or
nop
add
loope
aad
jo
push
nop
pushf
movsb
clc
cmp
cmp
cwtl
test
dec
push
idiv
xor
fs
arpl
adcl
sbb
dec
cwtl
cmpb
lds
mov
je
and
out
jne
aam
xor
or
sbb
xor
mov
push
pop
or
dec
pop
pop
sub
in
pop
out
pop
jl,pt
dec
test
icebp
jecxz
mov
xor
and
lods
jo
or
iret
xchg
dec
cmp
or
movsl
pop
mov
cmpsl
pusha
fistl
stos
and
std
lret
mov
into
mov
mov
rorb
test
outsb
std
jle
out
jecxz
mov
ljmp
xor
mov
fwait
or
jecxz
xchg
push
jb
test
out
inc
mov
insl
lahf
sub
pop
aam
repnz
and
jnp
mov
cmc
dec
scas
cmp
xlat
jle
sub
mov
sahf
or
addb
jge
add
outsl
xor
sbb
jmp
rcl
pop
jnp
pop
lods
add
out
jle
xchg
scas
sbb
xchg
popf
mov
ret
loop
leave
cmp
and
js
ja
outsl
insl
xor
jno
cmpsb
out
push
sbb
push
adc
push
push
push
addr16
xorb
jo
cmp
push
ret
scas
add
loopne
in
das
add
xchg
mov
add
test
in
push
push
lret
lds
mov
or
mov
cltd
mov
out
loope
shl
sbb
lock
mov
xor
mov
mov
cmp
and
mov
ja
loopne
or
cmpl
xchg
add
adc
xchg
dec
lods
adc
sahf
jp
lock
push
popf
push
aas
pusha
cmp
pop
fldl2t
shll
sub
sub
imulb
push
cmc
mov
loope
add
push
push
nop
push
cmc
aad
mov
popf
idivb
sub
sbb
pop
adc
shlb
fcoml
pushf
xor
xor
fdivrs
popa
imull
xor
rorb
nop
pusha
push
jo
icebp
push
std
out
mov
dec
daa
mov
cmp
loop
jno
mov
js
jb
jl
dec
mull
addr16
mov
fidivs
jno
arpl
xchg
ljmp
insb
dec
or
push
xorps
lods
into
lods
inc
mov
push
cwtl
imul
pop
xor
sbb
xor
mov
xchg
fsubrl
pop
add
enter
pop
mov
lea
pextrw
aaa
shll
push
inc
movsl
movsl
jb
mov
xchg
loope
cltd
stos
aam
sarl
aad
jae
mov
or
ds
bound
loop
sub
and
pop
dec
nop
stc
xchg
sub
add
cmpsb
xor
or
adc
lret
mov
mov
or
add
xlat
into
es
xor
mov
test
insl
ds
xor
cli
and
pop
dec
cmpsb
push
or
pop
mov
mov
test
dec
jae
leave
aam
sti
mov
jne
arpl
dec
mov
xchg
mov
les
into
adc
cwtl
inc
out
movsb
dec
mov
fisubl
adcb
lret
aaa
or
cmpsb
sbb
cmc
cmp
adc
pusha
out
dec
and
popf
xchg
cmc
pusha
out
loop
adc
jo
adc
push
test
push
mul
push
imul
dec
pop
cmpsb
pop
fs
mov
pop
dec
test
fidivl
loopne
lret
jl
pushf
shrl
test
test
mov
inc
in
push
pop
sahf
test
out
jb
and
les
cmc
jae
adc
xchg
js
mov
push
pop
mov
mov
xor
repnz
fildll
inc
aas
mov
sti
push
or
jp
jns
fists
sahf
add
and
outsl
imul
or
xlat
fistpll
xchg
jl
cmpsb
sbb
repz
std
push
shrb
xor
add
xchg
dec
adc
aas
fisubrs
and
int
dec
push
stos
in
ficoms
fwait
lods
and
ss
xchg
inc
dec
mov
sbb
fwait
dec
add
xchg
push
lods
jl
fistpl
xor
cli
xlat
jmp
adc
outsl
cmpsb
adc
mov
jp
mov
out
push
iret
and
xchg
dec
pop
popf
xor
sbbb
push
clc
fwait
dec
pop
int
dec
cmp
or
js
push
sub
fbld
jl
clc
adc
add
add
shl
movsl
mov
sar
decl
ds
int3
arpl
aam
inc
outsl
out
xchg
ret
sbb
je
call
int3
jae
out
inc
aas
jle
mov
int
cld
andb
test
test
aas
sbb
jns
out
pop
stc
xchg
dec
pop
sub
push
sub
jbe
ret
sub
mov
sub
bound
dec
pop
mov
cltd
xor
sbbl
loop
sarl
cwtl
int
out
es
test
dec
movsl
cltd
lods
popl
sub
xchg
mov
push
jne
bswap
cmp
sbb
push
fistpl
imul
mov
jno
imul
dec
push
icebp
pop
fbstp
or
scas
mov
lahf
sbb
mov
insb
mov
movsl
mov
stc
es
jmp
int3
fdivl
push
ljmp
jno
repz
ret
fdivr
outsb
sahf
jmp
mov
shlb
push
in
mov
jne
adc
add
cmp
popf
push
in
cli
popa
mov
clc
or
fldenv
mov
cmpsl
jnp
push
cltd
lock
cltd
inc
mov
sbb
in
pusha
test
push
push
lret
pop
repnz
idivl
into
aaa
pop
add
aam
cwtl
inc
dec
cmc
mov
jecxz
cmp
cs
test
gs
stos
xchg
and
mov
sbb
cmc
daa
dec
pushf
cmc
divb
les
dec
sbb
jnp
aaa
mov
inc
adc
mov
lret
cmp
rorl
in
movsl
mov
sub
adc
xor
shll
and
jno
andb
incb
mov
scas
inc
xor
adc
push
dec
xchg
add
cli
movsl
and
inc
imul
scas
inc
cltd
aaa
jbe
xlat
push
inc
pop
xor
push
out
xchg
imul
cmp
cmp
in
stos
test
fcmovu
jecxz
ficoms
arpl
jbe
pop
lock
rol
jle
divl
cmp
insl
mov
mov
test
cmp
outsb
mov
dec
mov
repz
add
xor
cmp
call
inc
jmp
cmp
pop
jbe
cmp
inc
das
hlt
aam
roll
decb
cmp
sbb
mov
cmp
jo
movsb
push
sbb
notl
std
mov
jb
lret
ljmp
inc
fstpt
xlat
bound
jae
push
ljmp
mov
mov
fcoml
lods
or
mov
mov
sbb
int
lods
rcl
jl
push
lods
decl
lcall
movsl
mov
jb
mov
cli
pop
mov
iret
sbb
mov
gs
pop
sub
iret
cltd
sub
int3
repnz
xchg
inc
push
ret
push
lods
es
jle
into
lcall
mov
ret
or
mov
push
sbb
lea
inc
adc
bound
mov
xchg
mov
and
ja
xchg
nop
es
inc
mov
or
sub
fisubrl
icebp
jl
jno
add
mov
mov
mov
jmp
loopne
push
add
fmull
int
xor
inc
push
scas
ja
mov
lret
es
int
cltd
dec
sub
out
sub
sbbl
fucom
notrack
inc
clc
and
and
pop
jmp
in
xor
xchg
jmp
pusha
sti
xchg
pushf
shll
orb
cmpb
je
push
incl
push
mov
daa
xchg
popa
pop
out
aaa
sbb
sbb
jns
and
or
cmp
sahf
sub
movsb
mov
shl
push
fsubrs
cmc
xchg
loop
leave
aad
mov
fsubrl
sbbl
rclb
jmp
fs
pop
xchg
movsb
cmpsb
mov
sub
ret
out
shl
jge
mov
imul
jbe
pop
sub
rolb
push
mov
dec
and
mov
mov
insb
sub
rclb
test
scas
dec
cwtl
mov
add
std
fdivl
and
pushf
mov
xor
adc
sbb
pop
jo
push
sbb
sbb
push
stc
gs
sub
xor
mov
decb
pop
and
jb
push
mov
pop
daa
ljmp
jbe
jnp
inc
imul
xor
rolb
out
or
pop
data16
jae
aad
test
fcmovnbe
bnd
jbe
sbb
mov
stos
cmp
pop
dec
lods
outsl
loop
idivb
aam
insl
pushf
imul
or
xchg
test
fucomp
mov
inc
inc
outsl
cmp
insb
push
and
rcr
mov
out
es
push
xchg
out
enter
pop
pop
xchg
xor
cmp
lods
outsb
enter
popf
mov
out
dec
lea
call
sbb
aaa
je
pop
jecxz
inc
jnp
ss
lret
out
xor
sbb
std
fisubrs
pandn
sub
sahf
cmpsl
jcxz
or
cwtl
insb
cs
jmp
adcl
jg
push
daa
ret
pop
ss
test
xor
sub
test
testb
mov
fstpt
shrl
fbstp
mov
pop
mov
icebp
outsl
push
and
xor
add
lods
sbb
lea
push
fnstcw
test
push
out
sbb
rolb
mov
outsl
pop
or
sub
aam
shrb
fdivr
cld
ljmp
xchg
mov
fstpl
jno
pop
and
lcall
aaa
inc
into
popa
xor
jg
bound
add
jp
nop
test
loope
pop
test
out
stc
pop
not
icebp
fcom
inc
stc
imul
cmp
inc
and
repz
hlt
rcll
sbb
mov
inc
and
sti
lods
dec
ficomps
mov
dec
scas
mov
and
mov
pop
xor
arpl
cld
pushf
rolb
or
mov
jb
xchg
cmp
add
push
mov
or
adc
jbe
imul
lahf
aad
add
sbb
or
cmp
sub
sbb
loopne
out
test
sub
dec
pop
inc
dec
xchg
sub
std
int
cmp
cltd
jne
dec
xor
dec
fcmovu
inc
lahf
idivl
lods
adc
or
sarb
sub
xor
daa
dec
ficomps
push
loope
and
add
mov
fistl
sub
xchg
cmp
pop
pop
mov
pop
sub
in
sub
stos
jne
dec
or
pop
lock
jmpw
cmpsb
adc
pop
inc
loopne
inc
xorl
mov
sbb
into
add
push
jne
mov
fidivrs
cmpsl
pop
jns
mov
push
xor
lret
out
daa
mov
or
mov
call
mov
test
sbb
sbb
ret
mov
out
adc
mov
roll
clc
mov
xchg
sbb
mov
jge
in
call
adc
std
movsb
jecxz
cli
lcall
pop
cmp
push
cltd
out
dec
jg
cli
and
xor
data16
fsubl
ljmp
inc
cmp
cld
test
imul
int3
sub
scas
negb
mov
xlat
fdivrs
xorb
mov
lcall
mov
xchg
push
mov
push
cs
cltd
pop
aaa
mov
adc
cltd
push
add
mov
insl
inc
leave
sahf
std
mov
push
idiv
cmp
ficomps
mov
jne
mov
jl,pt
mov
pop
call
leave
adc
testl
mov
clc
lock
outsl
and
sbbl
in
lret
ds
adc
sbb
xchg
addr16
leave
xor
outsb
arpl
xchg
xchg
jnp
mov
repz
in
adc
enter
out
mov
out
push
loope
inc
or
inc
inc
xchg
xorl
push
dec
mov
imul
or
jecxz
fwait
and
aad
sub
mov
popf
xlat
xchg
test
inc
add
mov
data16
cmpsb
adc
shl
decl
sub
xchg
je
scas
or
roll
test
insb
lret
or
daa
fucom
icebp
mov
push
pop
mov
inc
movlps
mov
popf
xor
mov
inc
adc
push
dec
mov
sbb
sbb
les
push
lods
test
dec
inc
push
adc
xor
test
push
jge
mov
mov
xor
adc
adc
dec
dec
dec
arpl
test
pop
cli
iret
into
call
xchg
stos
sbb
jb
lods
dec
insl
jmp
xchg
adc
jecxz
jo
ret
sbb
mov
pop
adc
push
mov
jae
dec
pop
mov
adc
repz
dec
add
ja
aaa
push
leave
daa
cmp
insb
aam
mov
or
jnp
xchg
mov
dec
xchg
stc
clc
mov
lods
in
lret
xor
fcmovnb
iret
push
cld
pop
lcall
sub
dec
lret
fsts
cs
das
shll
mov
or
mov
sti
jb
fdiv
imul
iret
aas
push
mov
mov
sbb
mov
sbbb
dec
out
xor
pop
adc
dec
icebp
mov
mov
jp
hlt
mov
mul
negl
cld
push
xor
push
push
xchg
insb
fwait
outsb
test
mov
ds
arpl
sbb
jbe
fisubs
nop
or
fcomi
dec
sub
mov
repnz
je
jle
popf
ljmp
ds
pop
sub
inc
and
or
stos
push
mov
adc
hlt
fcmovbe
lods
jmp
pop
in
popf
xor
lods
out
test
sti
mov
fs
pop
cmp
xor
nop
leave
test
lret
xor
lea
xor
jbe
enter
cltd
pop
xor
in
cmp
or
ret
outsb
mov
lock
xor
jle
mov
mov
pop
pop
leave
mov
mov
adc
push
jge,pt
xchg
sub
faddl
div
mov
pop
jo
ljmp
popf
and
jb
cmp
mov
lock
pop
fwait
out
jne
loopne
mov
push
dec
inc
fmuls
scas
pop
ret
push
push
outsl
mov
fwait
xor
negl
adc
roll
pop
loope
outsb
xchg
sbb
cmpsb
mov
jne
cmp
pop
aad
dec
and
fcomp
jns
jecxz
pushf
sbb
add
aas
add
dec
mov
mov
sbb
lock
xchg
pop
addb
jle
push
adc
mov
push
sub
cmpsl
mov
ss
dec
loopne
jmp
adc
movsb
addr16
mov
int3
pop
jae
mov
inc
and
add
push
mov
mov
cmp
out
pop
adcb
out
push
mov
mov
mov
js
das
and
push
xchg
jmp
call
add
sarl
adc
notb
cmp
ret
into
pop
jmp
dec
jo
cmp
or
sub
shl
push
inc
dec
rcll
pop
arpl
xchg
shrl
jg
std
ror
outsl
cli
cmp
sub
mov
hlt
adc
pop
add
test
js
arpl
addr16
xchg
sub
outsb
out
xchg
push
sbb
subb
mov
sbb
in
add
mov
loopne
iret
adcb
fbstp
lret
enter
pusha
stc
dec
test
lods
outsl
enter
sbb
push
mov
push
sub
xchg
lret
test
add
mov
je
movsl
jg
loope
test
inc
jp
mov
fisubl
sub
cmp
gs
pop
in
xchg
push
lods
sub
inc
push
sub
and
mov
cmp
adc
mov
jp
aam
fwait
add
cmc
test
orl
cmp
push
dec
dec
out
mov
imul
xlat
jbe
out
movsb
filds
adc
cmpsl
jno
in
inc
fcoms
inc
into
je
ror
out
mov
popf
xor
xor
inc
inc
pop
js
aam
popa
sub
xor
or
shrl
cmp
lret
lret
mov
aas
push
andb
xchg
mov
pop
adc
outsl
cmp
dec
mov
inc
add
mov
pop
loope
xchg
adc
and
gs
mov
pop
ss
add
mov
xchg
cmpsb
cmp
dec
cmp
mov
arpl
xchg
mov
enter
adc
jg
or
mov
lea
sbb
outsl
inc
repnz
aad
mov
add
xchg
adc
test
dec
mov
jno
pop
addr16
sbb
in
cmp
xor
inc
cmpsl
or
add
mov
xchg
je
jo
imul
fcom
or
mov
inc
sar
inc
scas
ss
aas
push
addr16
pop
mov
mov
fnstenv
cmp
mov
pop
lock
lods
adc
mov
arpl
imul
xchg
mov
jns
iret
stos
push
mov
ljmp
xchg
shlb
stc
push
mov
add
and
shll
adc
int3
dec
dec
scas
test
cmc
test
cs
fldl
testb
imulb
aad
push
aas
mov
fidivrs
xor
pop
jae
jl
lds
idiv
out
jl
pop
and
push
mov
ficoml
int3
fsubrs
repnz
mov
stos
iret
jno
lock
loopne
out
push
lret
pop
out
cmp
stos
jns
or
popa
loope
icebp
xchg
cmpb
fisubrs
repz
mov
mov
addr16
shrb
dec
pop
lds
adcb
push
in
loopne
jb
outsb
fcoms
popl
xchg
inc
xor
jmp
or
sbb
dec
add
add
inc
ss
xor
pop
or
lea
fdivrs
out
xchg
mov
inc
inc
xchg
xor
std
popa
fdivrl
lock
xchg
inc
jmp
cmp
ficoml
sbb
xor
dec
in
inc
push
popf
jb
jnp
or
push
inc
mov
dec
mov
add
xchg
jle
inc
inc
sti
cmp
pusha
push
test
ljmp
mov
inc
xchg
stc
addr16
pop
cltd
sbb
idivl
je
sbb
rorl
in
push
fnstsw
fisubs
mov
or
and
enter
pop
insl
push
jecxz
cmp
jnp
mov
mov
push
adc
push
and
and
jbe
lods
pop
push
mov
cmp
cmp
xchg
push
mov
mov
pop
ja
mov
test
rclb
fwait
and
add
mov
jns
ret
cmpsl
mov
add
push
dec
inc
divl
cmpsl
adc
adc
int3
mov
push
mov
hlt
andb
aaa
adc
sbb
dec
mov
jge
xchg
mov
addb
loopne
or
push
lods
fadds
inc
hlt
in
repz
lock
test
pop
bound
inc
fwait
sbb
cmp
in
fwait
push
shll
cmp
push
dec
add
sbbb
jecxz
imul
mov
mov
lahf
shrl
add
test
js
mov
scas
jnp
push
in
jg
sahf
jno
rcrb
cmp
rorb
in
mov
pop
cmp
push
out
and
sbb
lods
cmp
sahf
iret
into
fucomip
pushl
xor
stos
or
outsb
add
push
jb
lods
add
jnp
and
mov
adc
jne,pn
xor
ja
sbb
inc
mov
cmpsl
imul
int
xchg
jmp
iret
movsl
imul
movsb
imul
lea
inc
pop
add
push
fildll
cmp
scas
cli
jnp
cmp
add
jae
into
and
cmp
mov
insl
mov
push
sbb
idivb
lret
sbbb
test
mov
data16
xchg
push
fisttpl
pushf
xor
lea
adc
xchg
jno
inc
xlat
sbb
pushf
scas
push
push
push
cli
into
stos
mov
cmp
dec
dec
nop
test
shlb
mov
pop
testb
jge
mov
rcl
lds
inc
adc
add
xor
test
inc
outsb
mov
sbb
addb
mov
xchg
add
or
mov
mov
jae
movsb
mov
rol
jmp
jnp
xor
enter
push
imul
jle
inc
mov
dec
lret
mov
jns
cltd
pop
mov
jno
mov
mov
int
mov
xchg
adc
test
rorl
xchg
or
lcall
xchg
rol
into
xchg
in
inc
mov
pop
dec
movsl
movsl
lret
dec
ret
sbb
lret
sub
cmp
test
insl
test
jae
lcall
mov
insl
out
je
mov
out
jbe
and
cmp
adc
or
mov
pop
cmp
cli
pushf
stos
aaa
andb
dec
shl
lods
pushf
cmpsl
jo
lds
shl
jb
lret
jnp
mov
pop
jno
mov
cmp
int
push
ret
push
into
mov
pop
ljmp
inc
push
sbb
daa
jp
fnstenv
adc
xchg
add
lods
lods
imul
fstp
push
stos
xchg
es
in
xor
repz
mov
orw
adc
mov
jl
stos
out
int3
push
pop
adc
add
and
push
pop
insl
cmp
pop
dec
out
sbb
movl
mov
sub
pop
xor
mov
orb
push
aam
sbb
into
inc
dec
xor
loope
push
icebp
pushf
jl
sub
stc
je
lcall
je,pn
mov
aam
push
push
and
mov
pop
add
clc
push
or
and
fnstenv
hlt
jnp
add
lahf
mov
ret
out
ficoml
cld
pop
cmp
popf
fldcw
mov
cmp
data16
cmp
les
ret
pop
lahf
pop
fisubrl
lahf
and
lcall
xor
xchg
jmp
push
fs
stos
pushf
shlb
add
or
inc
xchg
cwtl
dec
cmpsb
inc
mov
popa
jno
or
xor
cmc
xor
jb
mov
mov
inc
jl
shl
jae
mov
ljmp
push
mov
arpl
sbb
xchg
xchg
fs
jno
movsb
inc
jo
jp
pop
jnp
xchg
cmp
push
and
push
sub
push
movsl
cmp
pusha
sbb
sub
lea
dec
pop
pop
mov
xor
mov
ja
or
aad
mov
out
int
loope
add
jne
push
and
out
loope
outsl
mov
mov
or
push
mov
out
aaa
gs
scas
ret
lods
orl
pop
jnp
out
lahf
xchg
in
cmpsb
jg
in
lods
push
lods
mov
push
xor
mov
clc
ja
adc
out
adc
or
mov
ficompl
push
push
mov
mulb
jg
in
mov
orl
sub
lods
inc
in
bound
fsubrs
push
testb
in
adc
adc
mov
mov
add
fisubl
enter
cwtl
xchg
sahf
sbb
jb
add
pop
scas
push
dec
cs
mov
aam
test
sub
pop
out
cs
in
andb
push
outsb
imul
mov
xor
xlat
mov
mov
mov
cmp
test
mov
lahf
cmp
push
jbe
mov
xchg
jp
inc
fwait
aam
or
mov
xchg
or
jge
imul
mov
push
cwtl
adc
daa
call
movsl
xor
fisubl
inc
cmc
mov
push
popf
adc
clc
jae
mov
ljmp
aam
sbb
xchg
push
je
pop
lret
popf
push
sub
or
cmpsl
xchg
dec
sbb
aas
call
pop
jg
pop
push
in
mov
mov
pop
test
dec
add
inc
loopne
and
mov
xchg
mov
xchg
in
xchg
bswap
mov
jecxz
jns
into
pop
fistps
pop
imul
imul
or
pop
pop
adc
movsb
divl
in
arpl
cmp
or
test
adc
pop
fwait
data16
inc
add
adc
push
lea
push
popf
stc
cmpsb
pop
mov
stos
int3
lahf
sbb
add
aaa
push
repnz
mov
or
orb
addr16
aam
roll
inc
xor
jg
int3
mov
in
mov
clc
lods
or
mov
leave
push
out
out
dec
scas
sbbl
ret
enter
pusha
mov
cltd
adc
xchg
cmp
lcall
xchg
inc
pop
add
je
jl
and
test
aad
jmp
subb
repz
scas
xchg
pop
arpl
sbb
adc
adc
mov
jle
ret
hlt
int
sbb
dec
add
push
ds
jmp
or
lret
scas
ss
inc
stos
aaa
push
mov
cltd
push
xlat
adc
or
mov
orb
mov
dec
mov
aam
jb
adc
or
out
sub
rclb
cli
jmp
and
sbb
pop
mov
ret
pushf
or
fidivs
ret
sbb
arpl
jo
ds
sbb
movsl
mov
inc
cmpsl
pop
pusha
insl
test
xchg
or
cmpsl
scas
mov
ffreep
mov
cmp
leave
leave
mov
fstpl
or
xchg
xchg
nop
inc
fisttpl
shll
pop
scas
xchg
test
mov
mov
dec
cmp
push
xchg
lods
dec
int
gs
push
push
mov
stos
out
jbe
push
xor
inc
pop
stc
jg
lods
or
push
or
std
pop
outsb
mov
push
jo
inc
mov
jae
push
stc
xchg
testl
cmp
sub
aam
sub
std
js
das
sub
or
push
push
in
cmp
in
test
testl
jle
sub
jge
jge
test
sahf
or
and
add
bound
jbe
lea
es
xor
inc
add
rorb
loopne,pn
pusha
push
mov
push
inc
and
rolb
mov
pop
cmp
push
inc
test
ljmp
lods
lret
mov
ljmp
jecxz
mov
fmull
int3
pop
sub
xlat
mov
ret
pop
mov
cmp
or
pop
movsb
adc
jl
js
pop
out
pop
pop
sub
sahf
cmp
cvtdq2ps
aas
loop
fs
jns
cmpsl
jae
inc
scas
adc
mov
mov
fmull
mov
inc
loop
add
sbb
movsl
lock
inc
adc
sahf
sbb
mov
push
pop
xchg
outsb
xchg
jno
mov
imulb
shl
insb
add
pop
and
int3
add
out
lea
push
mov
mov
addr16
sahf
clc
and
push
imulb
push
ljmp
jb
push
push
aas
pop
aaa
dec
sub
inc
xchg
sbb
xlat
push
sbb
nop
les
insl
lea
lds
cmc
dec
sub
jne
mov
pop
xchg
lret
test
movsl
mov
pop
scas
cmp
sbb
xchg
lods
and
imul
and
mov
sbb
pusha
cld
adc
xlat
xor
inc
jno
mov
cmp
xlat
fisubl
push
loopne
andb
fistps
data16
cld
sbb
fwait
or
cmpsb
gs
addr16
mov
sub
mov
ret
adc
bswap
jecxz
sti
adc
mov
clc
rolb
shlb
cmp
sub
mov
sarl
pop
pop
xchg
lods
inc
mov
ja
sbb
xorb
movsb
cmp
fstl
adc
int
testb
pop
adc
lock
out
lock
pop
aas
dec
add
cmp
dec
lahf
fs
ljmp
push
sub
insb
xchg
sbb
push
mov
popf
stos
pop
scas
fidivs
lahf
mov
inc
jb
xchg
movsb
data16
add
ret
jp
mov
aaa
jg
jmp
mov
popa
mov
jne
fs
mov
fsubl
subb
nop
das
out
aad
dec
imull
test
hlt
nop
dec
jb
test
xchg
sahf
clc
enter
daa
push
aam
mov
int
iret
std
loopne
push
jmp
pop
dec
pop
pop
jmp
and
mov
pop
scas
sahf
ljmp
mulb
fstpl
adcb
mov
xchg
dec
jns
stc
inc
or
arpl
and
sbb
scas
mov
inc
xchg
adc
mov
cltd
push
call
or
dec
imul
lods
cwtl
aas
mov
and
dec
popf
ja
mov
mov
jbe
inc
test
nop
daa
and
inc
scas
and
mov
icebp
cmpsb
push
jno
jno
into
loopne
repnz
fdivrl
pusha
movswl
push
gs
dec
inc
outsb
jbe
pop
adc
adc
shr
bndstx
hlt
add
fldenv
cmp
fbstp
jne
jnp
or
cld
xchg
aaa
pushf
inc
mov
ljmp
xor
push
out
and
cmpsl
ret
ds
inc
dec
sahf
testl
mov
cmpb
cmp
xchg
sub
test
scas
mov
shrl
jecxz
lret
addr16
leave
sub
add
shlb
xchg
lods
or
fstpl
cmp
out
or
test
fnstcw
push
or
clc
nop
ret
push
push
xor
pop
js
cld
cmp
cmp
sub
xor
xchg
jge
scas
xor
mov
xchg
pop
ja
inc
dec
add
rorl
inc
aas
mov
jp
or
nop
mov
lock
loope
dec
cld
inc
cmp
push
xor
pushf
inc
push
shl
aaa
int
push
insb
ds
cld
push
pop
jp
lock
pop
call
mov
stos
sti
push
stos
sti
adc
jge
pop
dec
fistpl
sti
dec
sub
shll
sbb
icebp
push
xor
jmp
dec
clc
into
fsubrs
mov
rcrl
pusha
and
xor
js
ds
xor
jns
pop
xor
das
ret
out
pop
cld
rcrb
and
mov
addl
and
lahf
sbb
lock
es
icebp
mov
adc
ja
in
pop
jmp
jb
jb
push
xchg
shrd
xor
push
sub
into
mov
outsl
in
out
ja
xchg
pextrw
mov
inc
adc
dec
repz
cwtl
pusha
or
xor
push
stos
mov
arpl
cld
mov
mov
pop
shl
or
xor
fdivrl
popf
mov
ret
and
aad
sahf
arpl
xchg
mov
sbb
dec
push
arpl
outsb
outsl
push
mov
dec
lea
dec
lods
pop
cmc
push
sub
mov
icebp
add
stos
adc
test
mov
add
push
inc
mov
dec
icebp
xchg
sar
sbb
cmpsb
mov
gs
and
ds
mov
fdivs
test
outsl
lods
adcb
mov
jo
xchg
rol
mov
fsts
adc
aaa
cmc
inc
ds
cmp
cmp
stos
cmc
nop
pop
int
icebp
mov
imul
sub
stos
inc
or
mov
dec
loopne
jae
push
sub
cmp
lahf
scas
andl
rcll
adc
mov
cmpsb
inc
inc
dec
dec
jns
cs
imul
pop
cmpsl
pop
pop
in
lret
cld
das
sbbl
stc
push
sbb
lret
xchg
dec
lcall
or
lahf
cmp
outsl
divl
push
xchg
mov
ret
pop
lods
mov
adc
imul
and
imul
or
sbb
jle,pt
lahf
icebp
test
call
test
scas
fildl
cmpsb
hlt
jg
scas
jb
out
dec
jns
cld
add
loop
sbb
mov
scas
push
jle
adc
lcall
popa
imull
mov
push
jmp
mov
loopne
cmpsb
jb
mov
inc
fidivs
mov
hlt
and
sub
ds
enter
cmp
out
pop
mov
test
push
imul
mov
xor
sub
aam
push
sbb
out
in
push
cmp
jbe
leave
cmp
repz
dec
ds
jmp
inc
cli
sbb
sub
cli
insl
pusha
aaa
mov
ss
ljmp
orb
cmp
mov
mov
pop
xchg
add
mov
jae
push
xchg
mov
jne
mov
inc
jecxz
lods
jle
test
scas
inc
hlt
lea
das
cmp
jnp
xor
shr
adc
in
cs
push
xchg
and
xchg
sbb
ret
mov
arpl
mov
sub
je
add
mov
test
jg
sbb
enter
fisttpl
push
cmp
clc
jne
push
fs
xor
mov
jle
mov
cmp
pop
neg
push
subl
call
jp
jne
mov
aas
and
mov
je
and
aam
jp
pop
pop
clc
clc
mov
add
mov
xchg
and
loop
lods
mov
adc
mov
lods
sbb
lahf
pop
mov
xchg
mov
xor
ret
cmp
push
cld
orb
imul
mov
mov
and
out
sub
ret
aas
xchg
inc
in
pusha
outsb
inc
iret
inc
add
sbb
push
out
dec
mov
das
push
jecxz
mov
ret
fsubl
shl
add
icebp
fisubrs
push
cmp
xchg
inc
pop
mov
lahf
fnstenv
inc
ficompl
or
push
mov
stos
aad
xchg
ret
xchg
insl
pushf
sub
sbb
inc
std
xlat
insl
xor
push
lds
inc
js
stos
xchg
cmp
pop
pop
adc
lods
and
xlat
adc
sahf
push
mov
fdivl
mov
pop
xchg
add
cwtl
jnp
rolb
iret
inc
cmpsl
fdivl
mov
mov
xor
lds
or
stos
inc
push
xchg
mov
and
dec
cmc
mulb
inc
xchg
ret
arpl
inc
fdivrl
xchg
not
arpl
xor
ret
pop
and
lock
std
outsb
data16
sbb
add
adcl
cld
pop
adc
add
cmp
fwait
push
retw
int3
fldz
aas
adc
into
popa
repz
ja
cli
pop
push
pop
orl
bnd
test
sub
leave
lret
lret
addr16
push
dec
pop
ja
and
dec
test
es
sbb
sahf
mov
iret
pushf
ss
sbb
pop
lret
xchg
cmp
clc
bound
jbe
cmc
jle
call
or
mov
xchg
pop
sbb
jbe
lods
in
lret
popf
pusha
or
sub
cmp
test
dec
mov
pushf
sbb
fisubs
icebp
inc
enter
dec
push
mov
out
pop
mov
inc
sar
stc
addr16
int
and
cmp
pushf
pop
and
sbb
inc
test
ret
push
insl
pop
loop
jb
sbb
sub
jns
fwait
dec
xor
sar
imul
jb
cmp
or
push
sbb
cld
cmp
daa
cmp
imul
ja
sbbb
pop
sbb
fcoms
ret
inc
stos
fwait
mov
mov
jle
cmp
sarb
int3
jb
sbb
ds
cmp
out
add
hlt
sub
sbb
xchg
add
jnp
mov
fwait
mov
sbb
ja
stc
les
insl
daa
dec
pusha
pop
test
jo
ret
adc
sbb
int
push
lahf
mov
fdivrs
adcb
mov
insl
jecxz
sti
mov
add
nop
inc
mov
into
enter
mov
lret
xorb
xchg
sarb
dec
xor
mov
and
or
inc
push
movsb
ds
outsb
xor
mov
xchg
sbb
add
test
insb
aam
rolb
mov
pop
ljmp
hlt
imul
mov
repnz
mov
rcl
mov
mov
cli
int3
and
dec
mov
cli
pushf
lret
cmpsb
jbe
sub
and
sti
mov
mov
insb
and
dec
xor
push
xchg
test
mov
xor
xor
cli
hlt
ja
outsl
sbb
push
ss
sub
testl
test
and
mov
push
xchg
pop
push
data16
xchg
imul
dec
cli
iret
das
mov
test
shl
or
inc
popa
dec
cmp
dec
shll
pop
xchg
fmuls
in
mov
loope
ret
out
subb
push
mov
loope
scas
and
scas
jp
das
add
xchg
decb
push
add
fsubrl
je
aaa
addb
pop
arpl
rclb
jbe
pop
stos
pop
pushf
jae
loop
test
pop
sti
pop
push
cmp
dec
xor
dec
and
jge
inc
or
jl
adcb
mov
jae
or
fadds
insb
add
xchg
push
ds
jo
inc
stc
mov
push
inc
rcll
in
scas
adc
fldt
fsubr
mov
mov
in
ret
popf
stos
xchg
jb
and
sub
and
jno
add
iret
lret
and
loopne
jle
sti
add
jne
int3
int3
fmulp
xchg
cmpsl
dec
dec
xchg
jmp
aam
arpl
pushf
imul
and
es
adc
push
fnstcw
pop
adc
outsb
inc
xchg
popl
shrl
lcall
ds
out
mov
push
mov
adc
dec
and
jge
mov
mov
mov
sahf
xchg
lret
sti
dec
out
jae
ds
dec
je
jne
add
mov
loopne
jg
les
je
outsb
mov
inc
outsl
xchg
mov
mov
sar
jecxz
push
jae
loop
loop
pop
movb
jecxz
loopne
mov
lods
sti
cs
js
inc
and
insb
push
push
in
ret
add
or
cmp
ret
xchg
imul
push
adc
push
fldenv
push
mov
mov
sub
scas
jno
inc
jbe
js
ljmp
and
enter
mov
nop
lret
hlt
shlb
sub
sub
dec
add
mov
lods
push
pushf
hlt
push
imul
adc
dec
cmp
push
adc
mov
mov
pop
sub
fidivl
dec
mov
push
mov
sub
fldl
stc
es
sbbb
jno
mov
insl
xlat
inc
pop
mov
imul
imul
sub
outsb
adc
add
fstpl
mov
in
inc
sbb
aaa
mov
and
and
insb
xchg
cmc
and
dec
or
fnstcw
push
out
leave
jp
ret
loopne
lock
ret
xor
loop
lret
adc
sbb
mov
xchg
sbb
pop
pop
sub
in
repz
ja
or
dec
fisubrs
imul
mov
lock
shrl
int3
outsl
xchg
movsb
inc
mov
ss
xor
inc
bound
mov
addr16
xor
sar
mov
inc
fcoms
sub
pop
insl
push
lcall
jecxz
repz
fucomip
pop
repnz
lahf
inc
nop
mov
add
in
fstl
mov
fstl
lods
sub
repz
and
jmp
xlat
andb
inc
arpl
ja
add
rcrb
pop
sbb
popf
and
adc
negl
mov
adc
mov
test
shr
pop
xor
xlat
jbe
fldcw
inc
adc
pusha
jp
popa
shrl
xchg
jge
leave
inc
in
icebp
jp
int
mov
repz
mov
sbb
icebp
shr
push
push
mov
fcoms
in
inc
push
adc
cld
adc
push
mov
cmp
in
add
xchg
imul
xlat
mov
fstpt
fwait
xor
pop
aaa
sbb
hlt
mov
movsl
insb
xchg
shrb
pusha
mov
jle
jmp
add
lock
adc
lahf
insb
mov
cld
gs
push
pushl
sti
push
icebp
popa
add
outsb
xlat
bound
std
push
jle
and
aad
int
add
in
mov
or
xchg
inc
faddl
cmpsb
cmp
insl
arpl
pop
gs
push
adc
movsl
test
iret
es
lods
push
cmpl
inc
push
pusha
dec
adc
lcall
outsl
call
xorb
jns
cmp
xchg
mul
and
into
push
in
cmpb
cmpsb
mov
sbb
clc
test
jg
xor
inc
inc
mov
push
adc
aam
inc
sbbl
rcrl
imul
sub
movsb
popf
cmpb
lahf
cmp
imul
sti
out
jp
mov
fwait
je
mov
mov
push
fmull
push
cmpsb
sbb
mov
in
mov
cli
push
adc
jmp
iret
jecxz
or
dec
ds
and
ja
dec
pop
sbbl
cmc
dec
push
inc
lret
mov
fsts
adc
mov
mov
cmp
rclb
jnp
jo
into
push
lods
mov
sbb
mov
div
inc
f2xm1
bound
movsb
adc
sub
xor
icebp
add
xchg
ret
cltd
std
insl
fwait
xor
paddw
xor
roll
push
daa
dec
dec
add
cmp
xor
inc
call
dec
xchg
sbb
mov
inc
xor
rorb
cli
mov
jge
std
fdivrl
test
adc
mov
inc
cltd
jae
push
push
mov
pop
mov
pushf
jae
jp
aam
jg
and
popf
cmovne
inc
pop
mov
loope
sbb
lahf
out
test
ret
jl
jae
xor
ret
testb
and
lea
mov
stc
push
push
adc
add
imul
and
cmp
dec
out
sbb
sbb
lds
or
test
aam
add
in
sbb
mov
pop
into
and
cld
clc
xbegin
in
inc
mov
ret
or
mov
in
cmpl
or
jp
sub
dec
in
fs
xchg
notb
xchg
pop
fwait
push
push
xor
or
stos
mov
mov
dec
add
ja
pop
in
es
pop
mov
jp
and
test
or
arpl
mov
pop
mov
test
in
ret
sbb
divb
xchg
pop
add
out
mov
shll
data16
out
inc
stos
or
mov
adc
sbb
mov
scas
out
adc
and
xor
sbb
push
jmp
push
inc
push
dec
push
popf
scas
lea
jne
jb
mov
test
add
and
cmp
int
cmovl
ds
fsub
imul
add
rorb
fldcw
pop
mov
int3
and
test
cmp
add
into
cs
ficoms
pop
scas
hlt
jg
xor
or
repz
mov
pop
cld
adc
or
push
mov
lock
mov
repz
push
adc
subl
and
das
fildl
fwait
xor
shlb
cmpsl
clc
mov
jecxz
sub
mov
sub
lret
ds
mov
scas
loopne
xchg
mov
pop
cmpsb
dec
orl
push
ds
leave
sub
iret
ss
add
sbb
or
mov
fisubrl
das
xlat
jno
or
mov
in
fisttpll
repnz
movsb
xchg
add
sub
xchg
mov
xchg
and
js
in
mov
mov
ret
cmc
shll
mov
test
cmp
dec
mov
mov
xchg
pop
int3
sbb
mov
cmpsl
cmp
stos
movsb
xchg
mov
pop
pop
mov
inc
test
inc
lcall
mov
sar
icebp
and
ficomps
mov
mov
mov
inc
fcomip
ja
cmp
push
shl
inc
das
nop
dec
popf
lock
jmp
xor
popf
je
sub
cmc
and
add
jl
scas
es
mov
mov
xchg
fiaddl
lret
or
scas
das
cmpl
adc
cmc
inc
or
insl
mov
sub
push
jmp
and
mov
cmpsb
jp
adc
addr16
stc
test
xchg
or
or
xchg
pop
adc
adc
clc
pop
repz
push
jno
xchg
aaa
pusha
push
and
push
dec
push
loope
jae
imul
dec
xor
nop
loope
lods
mov
adc
mov
das
std
dec
stc
mov
outsl
scas
ficomps
inc
aas
and
sbb
mov
add
sbb
nop
jle
sbb
scas
lahf
or
iret
cmc
push
jge
push
jb
lahf
int
mov
push
jmp
ror
xrelease
cmp
add
bswap
jg
add
or
mov
dec
fisttpll
cmp
pop
xlat
and
in
mov
mov
jno
ja
aas
pop
and
andb
ss
stc
cwtl
out
iret
mov
ss
sbb
addb
xor
dec
ss
dec
movsb
inc
xor
mov
loopne
rclb
cld
lret
xchg
cld
adc
add
lret
mov
stos
sub
pop
lret
orl
mov
adc
sbb
call
xchg
lods
sbb
push
sub
pop
pop
dec
fdivp
sti
jne
jmp
mov
iret
popf
adc
push
mov
jl
push
arpl
or
sub
xor
mov
fcoms
push
push
mov
int
jmp
out
sbb
hlt
jge
mov
add
cmp
cmp
movsl
sbb
mov
and
shr
mov
pop
roll
xor
imul
negl
imul
adc
iret
inc
mov
shll
inc
fxtract
std
int3
jg
mov
repnz
sub
and
cmp
stos
xchg
movsb
sub
je
inc
sub
xchg
loop
ja
mov
insb
ljmp
jecxz
hlt
mov
mov
shrl
idivb
jecxz
scas
mov
lods
cwtl
sahf
fmul
pushf
dec
mov
mov
adc
or
mov
cli
out
stos
rcll
jo
movsl
in
in
jge
and
imulb
into
push
jae,pt
pushf
xchg
pcmpgtd
test
sahf
sbb
inc
adc
add
mov
ficomps
or
add
push
leave
inc
fdivr
xor
inc
xchg
int
sub
pusha
pop
or
bswap
push
sub
out
cmp
rcrb
pop
movb
cltd
mov
hlt
xchg
adc
movsb
add
repz
add
jae
cmpsl
lret
es
std
cli
or
imul
push
adc
incb
and
test
out
fwait
leave
push
and
sub
mov
daa
mov
sub
enter
stos
fwait
mov
pushf
aas
int
xchg
push
cmc
stos
in
and
lret
xchg
inc
out
sahf
or
jno
push
and
sub
daa
add
xchg
sub
stos
scas
inc
in
inc
xor
xor
mov
and
cld
xchg
ss
push
sarb
fwait
sub
mov
cltd
test
je
inc
add
data16
lret
es
es
stc
mov
decl
xor
mov
scas
mov
mov
insb
fbld
sub
data16
sti
cmp
movsb
xchg
test
sbb
sahf
mov
or
and
movsb
push
add
fucomi
jb
idivb
stos
xor
cltd
cmpl
ljmp
sbb
test
andl
lret
sbbb
xor
outsl
jmp
jge
test
aad
sbb
mov
add
subl
adc
cmp
push
pop
imul
jbe
mov
imul
aaa
orb
fiaddl
mov
insb
xor
jmp
mov
mov
xor
xchg
fsubrl
and
sahf
push
fdivl
cmp
xor
jecxz
sub
pop
cmpb
imul
add
test
test
lcall
and
sti
push
or
cmp
push
int3
in
lods
mov
lea
xchg
ja
cmpl
push
rcll
or
and
outsb
fsubrl
insl
loope
stc
popf
push
aas
in
mov
lods
mov
les
arpl
xor
mov
in
adc
jg
lea
mov
mov
testb
imul
call
test
lahf
fucomip
fdiv
sbb
inc
dec
pop
or
dec
cmp
push
cmp
in
xchg
incb
xor
inc
and
das
cmp
stc
repnz
xchg
sti
fcompl
out
cwtl
or
jecxz
mov
outsb
ss
mov
mov
cli
add
popa
clc
enter
jbe
jle
pop
stos
pushf
faddl
mov
daa
xorl
xchg
lods
sbb
imul
out
xor
pusha
mov
js
mov
in
xchg
xor
xchg
adc
or
cmp
mov
dec
jecxz
cltd
mull
cmpsl
daa
out
mov
mov
call
lea
pop
out
xchg
push
sbb
jp
pop
inc
in
mov
ficompl
push
les
imul
jmp
pusha
shll
jne
mov
cmp
jae
sbb
dec
dec
cmp
inc
lea
out
mov
fcomi
fnsave
outsb
jmp
mov
jecxz
adcl
mov
xchg
repz
cs
lret
hlt
aad
add
ret
shr
fsubr
sbb
add
test
mov
in
bound
imul
in
add
dec
xorb
dec
shl
jno
mov
subl
je
cmp
loop
ret
sub
jecxz
jmp
aaa
push
cli
lcall
into
dec
testb
imul
ss
adc
cmp
mov
dec
in
inc
cmp
push
adc
xchg
jbe
add
ror
inc
subb
sub
push
std
dec
repnz
and
lds
dec
fidivrl
cmp
adc
repz
jb
mov
adc
push
repz
xchg
test
adc
dec
jns
pop
imulb
jb
outsl
push
add
push
mov
cli
or
mov
scas
sar
sub
jg
inc
push
pop
pop
cs
rcrb
add
loopne
or
adc
dec
fnsave
jo
mov
out
clc
sbb
inc
add
cmc
mov
inc
xor
jl
aas
add
andb
int3
cmp
cli
xchg
in
ss
aad
insl
push
jae
mov
push
roll
xor
in
outsb
inc
test
enter
inc
xchg
rcr
aad
add
cmpb
jno
xchg
or
dec
outsl
das
lds
sub
mov
cld
and
loop
inc
in
rolb
add
fisubrl
cmp
enter
les
cmp
shl
mov
inc
in
ret
dec
dec
ret
or
test
cmp
pop
sub
xchg
loop
pop
mov
call
cmp
xchg
inc
data16
adc
jb
fmul
aaa
lcall
scas
std
cltd
sbbb
pop
sub
inc
insb
xchg
dec
mov
pop
inc
bound
je
inc
push
mov
jecxz
out
pop
roll
pop
jne
fsubrl
xchg
fsubrl
in
popf
or
cs
sbb
or
or
mov
out
dec
sbb
imul
jno
ficompl
outsl
push
movsb
imul
xor
push
jmp
popa
mov
or
push
xchg
daa
cmp
pushf
out
cltd
pop
scas
mov
int3
shld
jl
push
loop
pop
dec
pop
pop
shlb
clc
xchg
mov
jecxz
mov
mov
in
inc
fstps
aas
pusha
jnp
iret
xor
add
shl
cmc
cmp
es
jo
iret
pop
icebp
add
push
ljmp
sbb
stos
mov
push
popa
insl
sub
jmp
cmp
cmc
push
pop
iret
mov
rcrl
cmp
iret
movsl
pop
pop
pop
jg
sbb
sub
test
aam
loope
sub
paddq
loopne
ret
jnp
sbb
rcrb
push
and
push
dec
lret
xor
ret
adc
js
test
sbb
lret
orl
pop
pop
imul
stos
test
pop
iret
ss
iret
cli
jne
shl
jle
into
mov
pusha
inc
test
lret
and
jecxz
dec
rclb
mov
insb
push
jne
sbb
mov
and
dec
dec
jge
stos
pop
add
pop
dec
insb
dec
stos
add
add
cmp
add
push
push
je
fwait
outsb
test
xchg
rclb
imul
insl
jo
and
xor
outsb
inc
push
imulb
push
inc
aad
add
mov
filds
mov
push
jne
leave
adc
xor
or
neg
dec
or
push
aas
xor
and
sbb
in
inc
cmpsb
ds
jmp
lds
jecxz
repz
jecxz
dec
sub
cmp
clc
shlb
push
clc
dec
add
fdivrs
push
pop
repz
rcrb
adc
out
or
sbb
cs
add
stos
bound
outsl
sbb
ss
jg
insb
fstp
shlb
push
xchg
push
and
loop
lods
in
dec
mov
or
xchg
mov
ficoml
stc
push
xlat
or
in
test
push
mov
cmp
mov
xchg
into
gs
cld
jbe
jns
in
orl
add
and
jne
add
sahf
repnz
adc
cltd
cs
enter
pop
sbb
pop
das
mov
cli
ss
or
xchg
push
xor
jns
jle
rcll
lea
sbb
call
mov
jo
jae
push
out
call
mov
daa
test
or
stc
xor
push
iret
xlat
outsb
stc
xor
xchg
loop
cmc
mov
add
or
push
inc
insl
inc
lds
push
inc
adc
push
mov
inc
data16
stos
fildl
xchg
xor
add
test
ljmp
popf
or
adc
rcrl
add
mov
icebp
xchg
mov
mov
mov
inc
fiaddl
mov
popa
popa
std
cli
outsl
inc
lods
xchg
test
das
pop
ds
dec
and
ret
sbb
push
dec
es
xchg
xchg
xor
pop
inc
mov
xchg
shll
sbb
mov
mov
and
aad
inc
pusha
fcomi
sti
xchg
fsubl
insb
jl
std
sbb
push
shrb
fstl
cmp
cld
xchg
sub
cmpl
dec
call
dec
mov
pop
and
aam
shlb
iret
jmp
repz
out
push
inc
in
cmp
arpl
push
cmpsl
mov
stos
shll
ret
sub
xor
je
mov
xchg
jnp
pop
mov
cmpsb
in
sahf
pusha
movsb
xchg
mov
leave
xlat
mov
add
cs
xchg
xchg
add
scas
jle
mov
sar
je
stc
fs
sub
mov
icebp
out
adc
push
add
pop
test
cmpl
and
mov
pop
out
push
setae
xchg
sub
push
sub
ror
sub
dec
lods
fbstp
push
sbb
imul
insb
ljmp
mov
into
xor
adc
adc
pop
scas
inc
jge
lds
adc
or
lret
fnstenv
dec
aad
fadds
loop
shlb
loopne
adc
add
sbb
mov
mov
push
cmp
out
popa
rorb
aaa
testb
shll
pop
mov
xorl
fs
xchg
rorl
mov
enter
lods
xchg
mov
push
lods
scas
outsl
insl
out
xchg
ss
in
mov
jo
push
filds
jle
es
jbe
add
sbb
and
divl
cld
sbb
test
lret
dec
inc
sbb
dec
arpl
andb
pop
hlt
fsubs
mov
jnp
lods
movsb
cmp
jb
inc
mov
pop
rclb
dec
call
fimull
jmp
xchg
push
dec
dec
gs
xchg
nop
push
sub
mov
xchg
cmp
das
mov
stos
cmpsl
mov
icebp
ljmp
roll
dec
mov
sbb
adc
push
push
and
push
arpl
out
mov
dec
dec
cmp
pop
mov
stos
mov
lcall
mov
adc
push
setge
inc
aaa
lods
mov
je
shlb
call
out
xchg
mov
cmp
push
pop
mov
adc
sub
jmp
xchg
push
xchg
mov
popa
fs
sub
xorl
or
jmp
adc
mov
jo
pop
pop
ds
into
mov
push
lcall
aad
dec
arpl
movsl
je
fldlg2
pop
jbe
jns
dec
stos
push
push
out
jno
sbb
push
mov
lds
add
xchg
mov
dec
and
stos
inc
sub
decl
pop
loop
pop
inc
inc
shll
fbstp
add
scas
into
loope
sbb
dec
mulb
add
or
and
repz
adc
sahf
loop
xor
inc
xor
lret
sub
xchg
mov
leave
push
lahf
pop
mov
and
mov
imull
dec
mov
nop
push
pop
loope
pop
xchg
jae
insl
test
scas
test
mov
adc
lret
mov
shlb
jle
jp
in
out
pop
popa
or
imul
incl
pop
aam
push
and
xorb
xor
push
and
dec
pushf
arpl
lea
sbb
dec
int3
lock
std
sub
xchg
test
cltd
es
loopne
fldl
repnz
or
stos
jmp
sub
jmp
jg
shll
jg
xor
pop
hlt
pop
mov
aad
mov
dec
movb
jle
out
in
cmpsb
clc
xchg
adc
adc
pusha
lods
mov
push
inc
notl
inc
arpl
fwait
sub
inc
sbb
or
xchg
sbb
mov
stc
fcomip
adc
scas
or
mov
repz
mov
xchg
inc
pop
dec
sub
push
stc
aas
pop
cmpl
aad
adc
out
cwtl
stos
mov
pop
ja
xor
lret
adc
push
lods
mov
fbstp
leave
div
popa
insb
inc
lds
cmc
cmp
outsl
push
cli
push
mov
lea
sub
add
push
in
jg,pn
pop
out
je
adc
cmpsb
xor
push
std
xchg
lcall
pop
mov
jecxz
adc
fwait
xor
popa
icebp
cmp
mov
xlat
cmp
xchg
xchg
popf
call
mov
adc
mov
std
mov
cli
inc
je
clc
cmp
inc
bound
jne
sub
pop
lods
inc
inc
sbb
movl
repz
dec
jns
mov
fisubs
xor
clc
sahf
mov
enter
adc
pop
adc
add
and
mov
adc
out
ds
pop
mov
stos
xlat
jmp
sbb
aaa
adc
pop
push
bound
mov
mov
out
xor
mov
jl
imulb
or
pusha
xchg
jb
adc
push
or
push
dec
fdivrs
das
xchg
mov
sbbb
add
and
js
xchg
ljmp
add
data16
cmc
aam
nop
push
out
fs
notb
mov
lods
inc
das
mov
shr
push
lret
cmc
jp
mov
lods
jmp
xor
push
loopne
mov
cwtl
pop
daa
ja
sbb
out
test
jg
test
mov
and
sub
sbb
sub
pop
jmp
adc
jl
mov
loop
incl
fcmove
bnd
clc
xchg
sbbb
sti
ljmp
mov
sbb
inc
pop
ja
aad
lret
push
xchg
sti
rcl
sub
fnstcw
adc
mov
mov
add
push
sub
dec
ret
xor
mov
or
notl
sub
addr16
aaa
xchg
mov
sbb
sbbb
cmp
rol
xor
enter
pop
imul
pcmpeqw
mov
xchg
popa
mov
out
cmc
rol
push
shl
stos
loop,pn
xor
mov
mov
sahf
mov
xlat
insl
push
mov
hlt
aas
cmpb
stos
mov
test
pop
rcr
outsl
enter
mov
data16
in
ja
loop
dec
mov
add
jne
jp
scas
stos
out
loop
mov
scas
lock
lds
xchg
mov
arpl
add
out
add
adcb
jle
ss
sub
add
rorb
mov
jg
mov
xchg
or
ds
mov
ror
pop
outsl
addb
mov
paddb
fidivrl
jno
shrb
rcrb
add
inc
push
cs
lahf
testb
mov
jg
or
dec
jns
mov
inc
fwait
sub
out
add
dec
xor
test
xchg
insl
shl
dec
dec
pop
or
sub
pusha
mov
xchg
fnstcw
jns
or
cmpsl
or
das
mov
and
fs
adc
popa
xchg
int3
xor
cmp
gs
xchg
scas
adc
mov
sbbb
ja
insb
xor
and
out
mov
shl
lahf
adc
mov
mov
mov
jnp
and
sbb
inc
add
cmpsb
aaa
mov
pop
lods
xor
imul
int3
mov
gs
sub
jno
jae
mulb
xchg
sbb
into
loope
xchg
loopne
lds
jno
movsb
inc
fstpl
push
cltd
mov
jmp
mov
sub
pop
ss
xchg
shlb
sbb
dec
or
and
mov
xchg
shll
sbb
bound
mov
sti
pop
int
lret
jge
jne
insb
mov
jbe
adcl
aam
dec
mov
pop
fnstenv
cmp
sub
movsb
add
sub
pop
fidivl
movsb
push
dec
vcvttpd2dqx
inc
popf
iret
shrl
jp
inc
xlat
loope
pop
movsl
lock
jecxz
divb
jmp
inc
mov
xor
jbe
xlat
xor
lcall
inc
shl
hlt
scas
in
aam
mov
fisttpl
cltd
or
fisttps
lea
ret
shll
shlb
enter
pop
call
xor
add
cmp
outsl
pop
repnz
jbe
jno
xchg
push
popf
les
inc
test
xchg
inc
xchg
leave
lret
mov
fsubrl
jecxz
sbb
mov
rclb
fisttpll
mov
dec
outsl
push
gs
aas
and
xor
dec
pop
jge
bound
mov
xchg
push
sub
lahf
adc
and
xlat
cmpsb
jns
fistpl
js
mov
test
paddsw
adc
mov
lcall
jnp
dec
mov
stos
jg
bound
fildl
bound
movsl
imul
xchg
adcb
repz
iret
stc
jae
daa
pushf
loopne
stos
sub
xor
add
or
sub
mov
aad
mov
mov
inc
cwtl
push
add
stc
xor
sbbb
push
cmpb
cmp
das
fcoms
mov
or
call
int
outsl
decl
bound
add
push
daa
cld
jbe
lcall
data16
fbstp
push
shrl
ds
test
cs
in
push
xlat
or
xor
addr16
cmp
xor
mov
sub
rclb
ds
aas
rcll
push
pop
shrb
mov
adc
mov
fs
adc
xchg
sub
or
nop
xor
push
shll
mov
addl
cltd
push
jecxz
ljmp
sbb
insb
out
pop
mov
cld
dec
cmpsl
ret
xchg
or
adc
mov
mov
dec
adc
bound
xor
lret
mov
fs
pusha
mov
pop
jmp
lret
shll
pop
aas
jmp
mov
xchg
cs
popf
ds
test
std
int3
sbb
fildll
test
sbb
mov
lret
cwtl
test
sbb
fmul
movsb
jge
aad
shlb
pop
mov
add
push
bound
adc
inc
sahf
cwtl
ds
jno
and
push
out
sub
fdivs
out
in
sbb
mov
push
xor
movsl
jle
push
jns
stos
mov
pop
mov
dec
gs
mov
cltd
jb
push
es
push
and
push
inc
jo
push
nop
cmc
fnstenv
or
pusha
mov
jnp
sbb
dec
repz
jmp
sbb
and
inc
arpl
aaa
in
cmpsb
lahf
pop
adcb
hlt
or
jmp
aaa
inc
pop
cli
or
sahf
lods
fisubrl
sbb
pop
into
ss
lret
iret
cwtl
mov
xor
pop
jg
aaa
sub
aad
mov
lret
clc
cmp
add
in
jbe
dec
push
scas
in
aaa
stos
in
mov
scas
lahf
inc
mov
out
cmp
rcr
push
jmp
gs
xchg
shlb
add
imul
aam
fsubrs
ja
pop
lock
divb
in
notb
loop
stc
sbb
decl
or
imul
mov
cli
mov
imul
add
inc
push
mov
xchg
int
add
xchg
dec
mov
push
mov
mov
mov
push
fnsave
mov
push
popf
cli
jne
mov
adc
inc
mov
pushf
sbb
outsb
stc
imul
jno
mov
stos
xor
sub
jo
mov
mov
loop
loopne
jo
xchg
push
mov
notl
mov
loopne
mov
xor
dec
fwait
mov
lret
std
sub
pusha
fistl
mov
icebp
or
ja
movsb
sti
sbbb
push
inc
pop
or
mov
aad
bound
mov
and
xchg
fidivrs
mov
out
insb
jecxz
jp
bndstx
in
inc
rorb
gs
and
mov
cmp
sbb
inc
xor
ja
les
push
push
or
cvtpi2ps
add
mov
push
xchg
jae
inc
xchg
add
arpl
popf
xor
pushf
or
mov
rcrl
sub
stc
mov
test
fs
or
insl
xchg
sub
mov
ds
jb
lods
inc
and
push
outsl
add
jle
test
mov
adc
shlb
fnstsw
mov
add
xchg
cmc
and
mov
lods
pop
add
mov
jne
cmp
inc
fwait
les
cld
or
lds
stos
sahf
mov
int3
nop
mov
into
xchg
sbb
imulb
gs
xchg
jo
mov
mov
mov
shll
cmp
loop
jb
faddp
loopne
subl
cltd
and
mov
lcall
gs
xlat
xlat
jle
insl
push
pushl
add
sbb
push
cmpsl
movsb
xchg
xlat
pop
lods
arpl
loope
arpl
andb
mov
sbb
test
adc
mov
shlb
inc
scas
pop
movsl
stos
jmp
ss
repz
sti
sarl
push
lds
sub
ret
mov
mov
or
jge
mov
test
stos
mov
mov
push
push
in
test
in
or
inc
inc
mov
call
mov
xchg
fnsave
pop
outsl
add
out
xchg
xchg
xrelease
push
cmp
les
out
sbb
divl
shld
adc
ljmp
aas
add
sub
in
push
fidivl
in
xor
adc
out
mov
sti
inc
mov
mov
push
cmp
flds
jecxz
rolb
lea
mov
cmp
mov
sub
out
nop
inc
sti
push
jb
mov
jo
ficoms
adc
fdiv
mov
dec
jge
rol
cmp
insl
add
sbb
cld
cmp
ja
pushf
pop
clc
xchg
xchg
mov
insb
jnp
or
xchg
movsb
dec
ret
mov
pop
or
xchg
arpl
add
dec
out
mov
sti
xor
push
popf
jecxz
mov
in
insb
loopne
jp
idivb
out
cmpsl
dec
cld
xchg
jnp
int3
fiadds
add
ljmp
push
ret
loope
adc
pop
outsb
lea
iret
imul
pop
or
ss
jno
sub
adc
ljmp
jno
jne
xor
push
loop
xchg
sar
push
or
enter
or
push
jmp
sub
in
test
sti
movsb
outsb
inc
test
les
sub
and
inc
data16
jmp
sub
stos
hlt
pop
push
cld
mov
mov
ret
stos
into
mov
push
push
nop
fs
cmc
shrd
sarb
stos
shl
stos
rolb
and
arpl
xor
and
fcomps
aad
cmp
inc
pop
data16
repz
cmp
or
inc
cli
mov
clc
adc
in
mov
ljmp
add
and
fs
sbb
inc
movsb
movl
jge
cld
loopne
loop
mov
dec
add
mov
ss
into
push
je
add
clc
or
cmp
push
mov
ds
cmp
dec
jecxz
pop
and
fnstsw
ret
lock
mov
mov
dec
fildl
rcrb
add
out
adc
jl
rolb
xchg
xor
or
pop
sarl
sub
insb
bnd
pop
or
cmp
dec
pop
loopne
adcb
loopne
fwait
push
sub
inc
shlb
test
repz
or
add
inc
or
xlat
outsb
xlat
sub
insb
sub
and
mov
scas
sub
cmc
push
pop
out
xor
pop
jg
stos
jp
shll
xor
js
or
adc
mov
fidivs
dec
mov
enter
bound
rcrb
out
pop
les
ret
mov
push
dec
push
xor
lods
orl
dec
lret
push
push
sub
push
sub
lds
dec
or
mov
mov
and
test
xchg
lahf
es
lock
inc
in
movsb
stos
inc
decb
dec
jmp
jno
lds
idivb
repnz
stos
fbstp
pusha
aas
xchg
and
xchg
in
xlat
mov
add
rorl
xor
lret
xchg
pusha
ud2
mov
inc
xlat
sub
xchg
jno
pop
and
aam
stos
inc
pop
cmc
repnz
add
push
lcall
push
jmp
jae
scas
sub
adc
mov
nop
in
or
push
sbb
inc
loope
pop
adc
mov
push
lock
bound
fdivrs
in
inc
push
lds
push
shlb
pop
jecxz
jnp
enter
push
cwtl
mov
iret
insl
add
push
or
lret
popf
cmp
into
or
movsb
lods
clc
inc
fsubrs
cmp
idivb
pop
ret
sbb
add
mov
sub
fcoms
lds
addl
outsl
jmp
cmp
and
cmp
sub
mov
push
jno
test
cmpl
subl
lds
ljmp
sbbl
stc
imul
mov
sbb
rorb
lock
mov
inc
adc
sahf
gs
mov
popa
jo
jl
add
jb
push
int3
jge
dec
xor
shll
sbb
mov
sbb
add
adc
push
imul
popf
inc
inc
test
adc
mov
loop
dec
dec
aad
push
inc
jbe
mov
push
push
jl
shrb
inc
pop
and
inc
daa
jbe
lahf
sbb
xchg
movups
pop
div
cmp
mov
cmp
out
lahf
imul
xor
out
push
sbb
or
stos
std
pop
frstor
adc
roll
xorl
incl
jns
dec
in
sbb
xor
shl
aam
test
mov
mov
lret
addr16
sub
stc
and
pusha
xchg
adc
pop
cmpsl
sbb
jmp
shl
sarl
mov
mov
loopne
subw
lahf
cmpsl
cmp
mov
cmpsb
jg
mov
push
icebp
shlb
adc
pop
test
xchg
dec
mov
lcall
stc
mov
addr16
fsubrl
adc
ljmp
jno
mov
jl
fdivs
mov
fs
xor
loopne
push
dec
rcrb
dec
ficomps
cwtl
xchg
pop
lret
cli
add
mov
and
or
sarl
jle
into
mov
mov
mov
movsb
push
mov
bound
jl
mov
imul
testl
adc
andl
mov
pop
popf
je
mov
sti
pushf
cmp
sbb
lret
and
pop
int
add
push
or
sti
dec
and
stos
adc
and
pop
insb
push
mov
or
add
adc
or
cmp
pop
std
or
in
dec
cmp
push
out
mov
cli
nop
inc
es
or
notb
dec
mov
fucomp
sub
xor
push
gs
push
mov
ds
mov
imul
lea
sarl
mov
xor
mov
jmp
xchg
mov
adc
into
push
call
dec
arpl
jns
adc
fwait
inc
scas
inc
sub
xor
pop
das
xor
in
inc
lods
imul
lods
andb
dec
jp
sub
push
xor
cmp
shrb
xchg
loopne
sbb
inc
mov
ss
test
movsl
movsb
outsb
push
popa
cmp
mov
fstpt
cwtl
rcrb
stos
or
mov
adc
fidivrl
out
int3
or
or
cmp
mov
sub
andb
push
inc
cwtl
je
sub
sub
dec
dec
lods
fdivr
call
and
enter
jmp
push
jae
stc
outsl
ja
push
and
clc
inc
mov
cmp
arpl
pop
xchg
adc
jbe
fistps
jecxz
jle
and
movsl
fdiv
jl
push
inc
lods
inc
jbe
xor
int3
pop
dec
push
mov
mov
enter
xchg
insb
mov
mov
push
sub
cmc
pop
stc
lock
sub
ret
pop
sbb
in
int3
or
dec
sbb
movsb
ljmp
cmp
out
out
mov
xchg
in
roll
dec
mov
jbe
jo
ds
fcomi
push
adc
lcall
arpl
cli
daa
sbb
pop
ja
mov
mov
or
add
rcrb
pop
add
fldl
test
shlb
xor
xchg
xchg
inc
xchg
and
ljmp
xchg
push
sub
xor
mov
mov
rcll
movsb
inc
mov
xor
xchg
or
pusha
out
add
cmp
jae
dec
bound
movsb
pop
andb
lahf
outsb
mov
push
outsb
cmp
lahf
cmc
jno
lods
sbb
mov
add
inc
inc
out
les
and
mov
xorb
aad
sahf
sahf
mov
cmp
scas
jle
push
or
mov
test
jo
mov
xorb
pop
test
hlt
jbe
dec
inc
in
jb
scas
inc
fimuls
inc
clc
lods
enter
lcall
lahf
dec
fildl
pop
adc
les
fnstenv
xchg
jns
jg
mov
mov
lahf
or
sub
mov
mov
inc
ds
cmp
or
jbe
aad
inc
sub
add
inc
inc
pop
lods
adcb
dec
pop
ljmp
loopne
rolb
xchg
xchg
mov
or
jno
daa
arpl
imul
lds
insb
dec
dec
lret
push
dec
rolb
jno
mov
scas
jns
push
outsb
es
dec
stos
push
fwait
adc
dec
ljmp
push
or
cli
sbb
gs
insl
leave
mov
jl
jmp
jecxz
sub
ret
fidivl
lods
aaa
dec
loopne
push
mov
outsl
das
fwait
ljmp
imul
inc
out
lds
out
and
int3
xor
repz
or
pop
adc
pusha
lods
mov
mov
arpl
daa
fidivs
jbe
mov
push
mov
pop
mov
and
repz
mov
int
fnsave
jle
sbb
cli
xchg
test
adc
jg
pop
test
in
mov
dec
push
xlat
lahf
jp
addr16
pusha
outsl
add
sbb
loopne
data16
rclb
mov
imul
inc
pusha
pushl
jmp
ss
rcl
addb
pop
das
sahf
stos
es
in
mov
fidivl
popa
sbbb
cmpsl
push
out
enter
mov
fisubrs
test
stos
outsb
es
push
inc
push
cmp
lea
dec
addr16
pop
lock
test
add
push
cmp
xchg
sahf
inc
gs
mov
jge
sub
mov
pop
cmp
mov
loopne
std
and
pop
sahf
xchg
dec
add
xor
dec
cld
fnstenv
aam
popf
and
mov
xchg
outsb
aad
vcmpsd
xor
es
or
cltd
xor
sti
into
mov
loope
cmpsb
push
or
xchg
cmp
leave
das
cmpsb
push
add
enter
inc
xchg
ss
jg
cmp
fidivl
and
jno
add
loopne
ret
roll
clc
pop
dec
fidivrs
decl
sahf
mov
stos
dec
loopne
sub
push
dec
repnz
fdivp
mov
push
pusha
ss
in
rcrl
fsubrs
mov
sub
cltd
test
out
pop
aam
lahf
inc
hlt
mov
repnz
sub
stos
cmp
rcrb
mov
scas
repz
fisubl
outsl
inc
or
int3
mov
or
xlat
jno
push
push
dec
mov
xor
lea
push
mov
mov
adc
movl
xor
mov
gs
stc
mov
ret
jae
enter
call
test
shll
cmp
out
xor
lea
mov
lahf
dec
push
mov
mov
iret
je
rolb
mov
xchg
sub
jecxz
hlt
fwait
xor
adc
movsb
push
stos
mov
mov
sahf
lds
inc
into
push
jns
fstp
test
push
lods
pop
or
cmpsb
scas
jl
cli
cmp
xor
in
into
xchg
mov
push
cmpsl
outsb
or
push
daa
xchg
add
push
dec
cwtl
stos
jne
es
sbb
stos
movsb
dec
mov
push
add
fldenv
mov
adc
push
les
sub
hlt
enter
ret
or
fists
xor
mov
push
xorb
test
and
repnz
shrl
scas
pop
xchg
popa
jmp
or
insl
loopne
and
sub
or
mov
outsl
in
popf
mov
jne
mov
pop
jbe
fcmovbe
std
push
inc
mov
inc
inc
pop
shlb
sbb
cltd
sub
cmpsb
call
xlat
mov
pop
or
adc
insl
adc
rolb
fimuls
scas
jg
call
or
cmp
mov
movsl
inc
addb
and
pop
mov
xor
aaa
dec
stc
mov
imul
fsubrs
out
mov
rcrl
data16
bound
pop
daa
and
arpl
sub
inc
dec
mov
add
adc
pushl
sbbl
test
jbe
inc
xlat
jmp
fdivl
add
shlb
inc
inc
fdivrl
jbe
scas
out
out
jge
cmp
bound
jle
mov
pop
daa
jl
inc
mov
inc
xchg
sbb
add
sahf
fwait
insl
xlat
push
cmp
mov
xlat
or
mov
popa
push
std
inc
mov
imul
inc
adc
daa
mov
sub
popa
xor
cmp
sub
or
in
cmpsl
popf
sbb
aad
mov
int3
jl
ja
pop
sahf
push
dec
test
insb
sarl
sbb
mov
sbb
and
mov
sub
mov
mov
jo
mov
out
mov
test
push
fstps
mov
push
mov
loopne
inc
fxch
adc
lods
out
cmp
mov
insb
sub
lods
imul
out
jge
inc
repz
ljmp
sahf
test
addr16
mov
in
push
push
outsl
mov
mov
jmp
add
or
sbb
mov
data16
push
inc
push
cmp
mov
sub
fisubrl
aad
clc
push
stos
or
leave
xchg
xchg
lds
pop
addl
addr16
or
mov
out
test
cmpsb
hlt
xchg
cwtl
ljmp
jnp
xor
inc
test
jne
lret
mov
xchg
lea
mov
push
inc
mov
popf
xor
mov
pop
sbb
sub
lock
iret
sahf
dec
fildll
into
data16
rcll
call
push
mov
aas
pushf
mov
sub
or
lahf
cmp
dec
lods
es
fmull
dec
push
jg
and
pop
push
cltd
xor
clc
in
push
gs
loop
clc
ret
mov
add
jmp
mov
mov
les
cmp
add
rorb
outsb
loope
jb
inc
movsb
or
cmp
lcall
push
push
enter
add
pop
mov
outsb
jmp
leave
int
jmp
jg
sar
es
ror
dec
pop
push
fildl
bound
adc
pop
dec
stc
inc
fsubrl
lods
loopne
sub
out
test
outsb
pop
mov
sbb
mov
jp
insb
shrl
nop
es
or
lea
add
pop
mov
iret
movsl
stc
jo
push
push
test
pusha
mov
xchg
add
or
fnstcw
js
leave
jl
test
sbb
repz
inc
rorb
dec
cld
sbb
stc
out
test
sbb
lahf
dec
daa
jae
shr
es
push
ds
repnz
iret
clc
push
xchg
sub
scas
mov
in
les
aad
sub
add
push
dec
inc
loope
or
cmpsb
sub
adc
and
jp
push
mov
sub
imul
fildl
cmp
iret
notb
pop
cmpsb
fcmovne
mov
adc
dec
cmp
int
dec
sbb
sbb
jo
push
out
jb
xchg
aam
and
sbb
fwait
dec
add
adc
in
sub
jecxz
dec
jae
in
js
leave
popf
ljmp
push
mov
sub
out
pop
repnz
sub
mov
divb
in
daa
add
test
push
or
pop
mov
lret
and
ret
fists
in
repz
notl
jae
pushf
dec
ljmp
pop
in
std
xlat
mov
xchg
scas
hlt
or
scas
jae
adcb
int3
outsb
jl
dec
dec
inc
movsl
aam
test
stc
arpl
and
sbb
mov
addr16
xchg
push
add
jno
fisttpl
mov
pop
xchg
sub
sub
jg
fidivl
aam
cmp
aas
inc
pop
jns
rcrl
cmpsl
cmp
inc
out
ret
aaa
into
popa
mov
xchg
sbb
sub
cmp
cmpl
stc
pop
mov
andb
mov
cmp
xor
jbe
sub
inc
sbb
pusha
je
jge
hlt
imul
cmp
movsl
push
inc
cmc
dec
and
fidivs
xchg
fdivs
mov
movsb
nop
movsb
push
mov
pusha
out
sub
in
pop
shlb
repnz
lahf
ljmp
xchg
pushf
dec
ret
jns
mov
xchg
nop
and
inc
movsl
pushf
ljmp
dec
xlat
js
outsl
pushf
jecxz
in
js
pop
cli
fstps
gs
cmpsl
dec
pushf
mov
inc
int
loopne
or
mov
mov
and
or
mov
mov
icebp
xor
mov
inc
frstor
jecxz
bound
mov
jne
in
sub
sbb
orl
enter
cmp
inc
cwtl
push
cmpsl
in
pop
popa
fdivrl
cs
push
inc
mov
call
add
xor
fcoms
popf
cmp
mov
hlt
pop
mov
loopne
scas
ljmp
adc
rorl
dec
xor
test
movsl
xchg
bound
push
jae
dec
sbb
xchg
jno
dec
iret
mov
test
addr16
sbb
jg,pn
ss
imul
clc
jmp
inc
mov
fisubrl
mov
addr16
dec
outsl
sahf
mov
popf
jg
in
insl
push
stos
add
test
arpl
and
jbe
fldt
xchg
push
in
cmp
cmc
insl
shlb
pop
sub
jp
imul
jg
pop
inc
sbb
mov
out
imul
xor
int3
lret
nop
jae
mov
cmp
xchg
dec
add
fwait
mov
push
icebp
push
adc
xchg
inc
aas
fldt
dec
mov
lock
push
lret
cmp
jl
sbb
pushf
loop
xchg
mov
das
jns
cli
cld
jecxz
sub
fsubl
daa
push
dec
or
clc
sahf
sub
repz
das
jno
dec
fisttpl
mov
jp
push
stos
adc
lcall
aam
add
mov
je
xchg
movl
cmp
in
sub
ja
cmp
lcall
pop
repz
xor
adc
cmp
mov
sbb
les
add
stos
cltd
fstps
add
fnstsw
xchg
lds
hlt
data16
dec
xchg
data16
adc
mov
sbb
pop
xchg
cmp
shrb
push
inc
mov
mov
mov
fisttps
xor
hlt
and
mov
cmp
aaa
outsl
pop
mov
adc
adc
pusha
aad
setle
add
out
mov
loop
xchg
push
inc
xor
cmpsl
in
fcompl
sub
nop
push
js
fsubr
dec
sbb
test
inc
icebp
inc
out
ret
pop
lcall
jmp
out
and
fnstcw
jns
shlb
test
dec
mov
movsb
clc
push
lock
jbe
sbb
ss
fldl2t
dec
std
movsl
jae
jmp
loopne
xor
xchg
bound
out
stos
inc
mov
stos
add
dec
and
xchg
pop
lods
lret
cmp
data16
jb
sbb
nop
push
push
push
rcll
xchg
jns
cs
pop
cmp
in
add
cmpsb
fwait
sbb
mov
xchg
mov
cli
in
cmc
add
aaa
pop
mov
rcl
rcrl
insb
jnp
xchg
subl
mov
mov
cmp
lods
xchg
and
cmc
mov
mov
cmp
xlat
push
sbbl
and
add
adc
nop
lcall
mov
add
jge
mov
push
push
add
outsl
mov
ret
dec
push
push
add
lods
inc
mov
xlat
mov
add
mulb
cmpsl
jne
pop
and
inc
bswap
frstor
xor
fcomps
ficomps
cmp
jmp
mov
int3
inc
frstor
sbb
xchg
sub
push
lcall
sbb
int
rclb
adc
xor
in
decb
sahf
sub
dec
icebp
outsl
in
cli
cltd
xchg
nop
cmp
loopne
and
xchg
sub
negb
mov
lret
xlat
sbb
mov
adc
mov
pusha
xor
sbbl
sti
jnp
cmpsl
push
sbb
push
inc
sub
cmp
push
outsl
add
mov
insl
cmp
jl
or
and
inc
add
popf
idivl
std
mov
jo
mov
jne
sub
and
inc
mov
movsl
xchg
lahf
lret
enter
movsl
cmp
jo
or
mov
es
jmp
ljmp
cltd
aaa
or
mov
mov
adc
test
xchg
adc
ds
aas
add
or
pop
cmp
cmp
fistpl
adc
cmp
mov
jnp
mov
repz
shll
jns
jne
jmp
mov
es
ja
and
xchg
push
fimull
jge
mov
fs
popf
xchg
repnz
xlat
mov
mov
int
mov
or
push
test
pop
repz
xchg
shr
lret
jp
xchg
lods
in
xchg
sbb
sbb
sub
std
inc
bound
and
rclb
and
adc
lgs
xchg
jmp
cmpsb
cmp
sbb
pop
pop
jmp
mov
inc
dec
sbb
arpl
cmp
lods
es
and
add
push
jne
shrl
and
mov
push
xchg
bound
push
movb
sub
in
xor
add
cs
jmp
ret
lret
insl
test
test
cmp
mov
cld
movb
loope
mov
lret
add
jno
mov
std
ds
stos
xchg
jecxz
inc
in
cmc
div
mov
add
nop
dec
lahf
add
xor
adc
in
mov
pop
xor
fnsave
inc
pop
into
inc
xchg
cli
xchg
pop
cmp
sbb
add
mov
pop
shl
xchg
mov
pop
xchg
adc
stos
mov
fsub
int3
cmc
aas
fsubl
push
lcall
xchg
scas
mov
bound
sbb
call
mov
out
inc
sub
adc
jae
arpl
stos
jae
aad
cmc
jo
loop
jnp
and
andl
pop
jl
vpshaq
test
fcomp
loop
inc
loopne
dec
lcall
inc
inc
int3
jns
and
call
or
lods
rol
inc
sub
les
fldenv
and
add
jae
test
lods
shlb
shlb
push
mov
add
xchg
pop
or
test
mov
and
inc
notb
mov
icebp
dec
or
fwait
cmp
iret
loopne
lcall
pop
mov
fimuls
sbb
into
sbb
ja
fwait
bound
lahf
data16
mov
sub
mov
adc
sahf
in
pop
add
out
mov
stos
orb
adc
ss
pop
inc
fucomip
stos
cmc
push
loopne
outsl
adc
pop
pop
lods
cmp
cmp
inc
enter
inc
fisubrs
add
xchg
mov
add
mov
imul
lods
mov
out
jmp
hlt
xchg
sbb
shrl
popa
or
ss
dec
out
jp
mov
push
fidivl
jae
dec
mov
inc
push
pop
cmp
push
shll
jo
lea
mov
cmp
in
mov
pop
addl
jg
js
fists
or
jge
mov
push
jecxz
imul
adc
lock
adc
sbb
and
push
adc
popf
xchg
in
or
fwait
sub
clc
xchg
sbb
xchg
and
iret
les
push
imul
adc
mov
xor
xor
pop
xor
mov
ret
popa
and
or
cltd
xchg
adc
jp
xor
sbb
orb
popf
adc
repz
push
pushl
cmc
or
inc
out
test
outsb
jl
dec
add
and
out
mov
mov
stos
mov
mov
addr16
lods
or
mov
rclb
inc
cmp
mov
inc
pop
xchg
int3
cmp
movsl
stos
sahf
sbb
dec
push
pop
aam
sbb
push
cmc
imul
mov
fcomps
mov
idivb
pop
fstps
pop
jge
loopne
push
fs
shrb
cmp
leave
loop
icebp
adc
out
je
or
cmp
addr16
shlb
lret
jne
push
jae
mov
inc
adc
aaa
xchg
mov
cmpsl
mov
jae
mov
cmp
leave
pusha
idiv
pushf
push
push
mov
fists
out
add
loopne
push
sbb
loope
inc
lea
xchg
lret
jns
aas
adc
nop
xchg
xchg
inc
aas
ror
insb
loopne
bound
mov
mov
pop
or
sbb
sub
pop
enter
cmpsl
ljmp
and
es
pop
pop
sahf
ret
std
push
movsl
cs
xchg
call
test
mov
fisubl
cmc
shrl
sbb
sar
dec
add
aaa
int3
arpl
mov
xor
push
pop
out
inc
sbb
mov
cmp
ljmp
jbe
mov
dec
mov
lahf
cs
pop
aad
adc
ret
pop
mov
shl
mov
cltd
mov
mov
fcompl
mov
cmpsl
popa
call
ss
lock
ds
outsl
mov
cmpsl
jo
insb
js
pop
or
shr
cmp
loop
adc
cwtl
das
or
lock
mov
fbstp
or
adc
andl
leave
call
pushl
pop
cmp
cmp
xlat
lcall
fisubl
adc
add
adc
data16
insl
and
push
xchg
add
into
data16
clc
push
mov
fsin
sub
in
add
jl
leave
lods
pusha
iret
xchg
cltd
stc
nop
daa
ss
dec
loop
lahf
dec
cmp
inc
pop
cmp
fcomip
cmp
mov
dec
cmp
cltd
test
jge
fs
pop
xchg
add
fadds
scas
sub
push
mov
inc
loope
shl
dec
dec
mov
stos
cmp
stos
rcrl
push
jo
push
lret
sbb
dec
out
cmpsb
lock
rcl
push
or
mov
loopne
or
xchg
fwait
insl
int
xchg
push
repz
mov
jp
ja
or
jmp
pop
in
cmp
jle
stc
scas
dec
rorl
mov
mov
fcmovnb
daa
xlat
jae
xor
sbb
and
es
repz
and
lods
jmp
sub
or
dec
stc
jmp
adc
jmp
int
repz
jb
ret
or
dec
bts
xchg
sub
mov
jne
xchg
iret
std
adc
fcmovnbe
add
inc
jo
pop
pop
inc
das
ja
and
mov
adc
aaa
add
ds
inc
cld
pop
pop
stos
push
mov
in
and
cld
inc
push
subb
mov
mov
jmp
sbb
dec
or
mov
test
mov
js
pop
loop
repnz
lret
jae
or
loop
pusha
sbb
xchg
daa
negb
imul
test
push
outsl
sub
pop
lods
lcall
int3
out
sbb
pop
leave
sbb
cwtl
repnz
lods
mov
push
mov
xchg
icebp
dec
mov
lds
cmp
rcll
jg
push
es
sbb
ds
cmp
jecxz
inc
adc
push
push
add
inc
mov
addb
cmp
dec
push
jp
std
jmp
jne
mov
or
pop
mov
add
cmp
rcrl
push
and
hlt
stc
mov
lret
rcrl
mov
push
cld
stos
iret
ljmp
mov
dec
testb
xchg
adc
add
cmpsl
add
add
fisubrs
pop
test
bound
push
lcall
int3
loop
inc
push
in
inc
dec
loope
xor
or
daa
in
cmp
xor
fld
in
repnz
lret
inc
sub
stos
pop
add
xor
inc
dec
mov
loop
adc
push
shrb
mov
repnz
repz
cmp
cwtl
lahf
mov
mov
jno
les
inc
xchg
imul
cli
sahf
jbe
stos
mov
in
das
out
iret
enter
pop
mov
pop
mov
aas
sbb
into
or
xor
mov
lods
inc
xor
sub
mov
fcmovnb
fistpl
xor
ret
mov
int3
xchg
addr16
test
adc
das
leave
push
iret
mov
loop
aad
je
call
in
pop
inc
das
lret
lock
or
jns
cld
inc
fildll
pop
in
inc
pushf
xor
negb
jecxz
out
lock
pop
dec
lcall
pop
out
ret
jae
mov
mov
aas
test
incb
push
pop
jnp
add
lods
shlb
mov
out
test
movsb
rsm
inc
inc
in
jne
inc
lret
int3
es
js
mov
cmp
mov
jmp
mov
push
add
xor
xchg
enter
or
nop
andl
adc
rcr
inc
sub
jno
das
nop
lcall
in
scas
pop
cmpsb
sub
cli
test
mov
pop
lret
mov
mov
xchg
fdivp
sbbb
hlt
xor
or
dec
test
push
jge
push
roll
orb
bound
rcrl
dec
data16
lods
jne
sahf
or
pop
xor
cwtl
jb
jp
inc
lahf
sti
mov
sbb
cwtl
push
mov
xchg
cmp
adc
iret
loope
je
add
icebp
shl
jbe
das
xor
xor
pushf
sub
sbb
dec
rcll
lock
or
dec
add
dec
sub
fldt
mov
lock
mov
mov
or
cmc
js
xchg
popl
aam
data16
push
pop
lock
popa
jmp
sbb
xor
pop
mov
int
mov
cli
in
das
addr16
xor
movsl
xlat
mov
add
sub
and
in
int3
lods
stos
cmpl
int
je
or
push
aam
push
mov
sub
push
push
sbb
fldcw
xchg
into
inc
pop
or
add
push
sahf
adc
pop
in
push
sbb
mov
fnstcw
mov
scas
jnp
jmp
jle
xor
std
aad
cmp
ret
addr16
mov
repz
scas
call
adc
call
bound
push
xchg
das
mov
fsub
js
out
push
sub
pushf
call
out
pusha
mov
push
fs
mov
xor
sub
push
sub
iret
pushfw
aam
mov
mov
popf
int
cmp
or
repnz
xor
dec
and
sub
xor
hlt
xor
sbb
call
daa
stc
adc
jp
aaa
lret
jne
xor
add
es
push
iret
push
add
mov
mov
dec
jbe
mov
rcrb
mov
cmp
dec
inc
sub
jno
subl
sbb
sbb
jecxz
sbb
mov
les
popa
mov
mov
cmp
add
outsl
push
and
into
insl
str
in
jo
sub
mov
xor
xchg
push
mov
cmc
xor
xchg
ss
leave
add
adc
pop
inc
fildl
and
mov
repnz
pop
push
inc
fiadds
sub
mov
jae
mov
mov
jne
jo
jns
cmpsl
sbb
scas
dec
and
mov
xor
mov
or
sub
lds
addb
adc
add
es
or
js
mov
adc
negb
pop
adc
push
cld
cmp
or
push
inc
pop
test
ss
push
adc
pop
lods
sbb
jg
int
stc
nop
movsb
sahf
sbb
ret
mov
cmp
pop
shlb
lds
or
cmp
out
xor
sbb
pusha
stos
inc
scas
ds
loopne
iret
enter
repnz
cwtl
insl
cmpsl
ds
jg
fisubrs
vpaddw
push
adc
inc
mov
stos
fs
dec
xchg
xor
leave
arpl
mov
mov
pusha
inc
xchg
or
push
mov
aam
shl
cmc
cmp
xchg
add
dec
andl
lds
arpl
lods
in
test
adc
add
mov
scas
jbe
jg
jb
roll
lcall
mov
adc
or
repnz
gs
mov
outsl
cld
scas
mov
std
rolb
jbe
xlat
xchg
cs
xor
push
mov
sbb
shll
dec
loope
shrb
adcb
xchg
sub
hlt
mov
push
cltd
sub
sbb
hlt
sarb
xchg
jecxz
sti
lcall
fsubrl
xchg
stos
mov
sbb
and
mov
int
adc
out
or
adc
push
stos
push
xchg
lret
ret
out
subl
sarb
cli
lock
sbb
push
outsl
sbb
xor
cmp
dec
dec
push
mov
pop
jno
pop
cltd
adc
jne
es
movsb
push
cmpsb
sbb
cmp
out
mov
cmpsb
push
mov
cmp
shlb
ljmp
inc
mov
mov
mov
fdivr
test
xor
pop
push
adc
pop
jo
or
xchg
push
jnp
clc
add
flds
and
cld
inc
data16
add
fistl
je
inc
das
inc
mov
mov
xchg
xor
push
pop
mov
movsl
mov
cs
jecxz
push
testb
cmp
imul
or
mov
outsl
inc
xchg
push
and
sub
loope
or
std
xchg
jmp
test
and
dec
aam
jmp
insb
sbb
test
xor
cmpsl
mov
jmp
scas
ret
sbb
mov
pop
loope
dec
adc
movsb
dec
add
outsb
cli
lcall
frstor
out
push
sahf
das
lods
inc
mov
insl
lret
lret
xor
xchg
xor
loopne
lods
mov
sbb
xor
dec
pop
jecxz
cld
xchg
cmp
adc
test
sub
add
icebp
stos
jo
push
pop
out
cmp
mov
inc
imul
popf
and
cs
cmp
insb
inc
xor
add
pop
add
es
xchg
cmp
ret
pop
stos
lea
sub
int
mov
js
xor
jg
push
sub
insl
pushf
out
fdivl
mov
adc
xchg
scas
jo
pusha
notl
xchg
loop
and
es
add
aad
push
cmc
inc
aad
and
leave
mull
dec
nop
test
mov
xlat
dec
daa
inc
aas
subl
daa
and
loope
cli
lods
mov
dec
test
jnp
cmp
ret
pusha
jns
mov
vpsubd
sahf
sub
jmp
int3
pusha
jge
xchg
test
sub
stc
rclb
mov
sbb
cwtl
jns
mov
xor
jbe
fwait
sarl
loop
mov
scas
or
or
xor
push
cmp
pop
cmp
lahf
nop
jl
scas
jae
aas
sbb
push
and
sahf
aad
or
add
xor
jbe
scas
shll
pushf
mov
mov
into
jo
mov
mov
and
mov
adc
jae
or
fwait
clc
nop
sub
inc
clc
lahf
sub
mov
ss
jmp
pop
stos
xchg
cmp
pop
addr16
loope
popa
push
cmp
xchg
fdivrl
xor
sub
int3
push
xor
andl
sub
test
and
xchg
sbb
das
xor
test
inc
cwtl
mov
inc
pop
clc
mov
fdivr
test
mov
xchg
ljmp
cmp
in
popf
and
inc
cmp
dec
repz
sahf
or
cmp
adc
subb
pop
dec
repz
sub
shll
pop
inc
fstps
or
or
jmp
and
inc
xchg
sbb
mov
mov
outsl
and
js
nop
cld
scas
shl
lods
aas
mov
xor
dec
fidivrl
iret
lret
push
imul
das
std
push
out
in
nop
pop
fcmovnb
or
pushf
int
adc
stc
in
stc
daa
xor
sahf
xor
in
lock
inc
and
dec
out
sahf
out
push
popf
testl
jno
and
xor
sar
adc
cltd
xor
adc
pop
inc
das
inc
jle
loop
icebp
lahf
push
pop
jg
or
fcompl
in
mov
xorb
test
mov
mov
stos
jmp
iret
sbb
jge
inc
cmc
das
push
pop
test
aam
cmp
mov
jp
aam
stos
sbb
testl
loope
lea
insl
vmovd
idiv
xchg
sub
jp
pop
pop
out
mov
sbb
test
dec
movsl
cmpsl
lods
sbb
or
stos
scas
movsl
pop
fucom
jno
jnp
ret
pslld
and
mov
mov
into
into
je
jbe
jbe
sbb
mov
cmpsb
arpl
pop
jns
jle
mov
pop
xor
repz
fldenv
aaa
dec
xchg
push
test
or
fwait
mov
dec
xor
adc
jg
test
imul
cmpsb
inc
dec
rorl
iret
mov
into
fwait
sbb
add
lret
stc
and
mov
lods
orl
and
imull
dec
dec
stos
dec
adc
mov
add
xchg
stos
fidivrl
mov
into
sub
loop
xchg
cmp
and
pop
push
adc
lcall
imull
int3
jle
adc
inc
xchg
mov
xor
push
adc
xor
xor
jmp
sbb
dec
addr16
dec
jne
into
gs
stos
in
add
jb
daa
push
into
inc
cli
lret
std
xchg
inc
mov
ret
xlat
mov
xor
xchg
pop
and
mov
or
fwait
lahf
jbe
mov
xchg
jle
sbb
mov
xchg
call
and
or
aas
dec
pop
sbb
fsubl
popf
dec
sahf
lahf
test
push
mov
fbstp
or
xchg
sbb
xor
fiadds
int3
idivb
sub
cmp
loop
mov
not
inc
fld
push
rclb
mov
cmc
in
lahf
xlat
cmp
pop
loop
aad
cmp
xor
push
shlb
out
jb
or
inc
int3
loop
popf
test
xchg
jnp
negb
lea
ja
cmp
sbb
xchg
stos
and
ss
sbbl
jnp
shll
sub
adc
popa
inc
cwtl
sbb
cs
push
cmp
jecxz
push
out
mov
in
mov
push
movsl
lds
hlt
addr16
in
mov
inc
scas
cli
adc
rcrl
mov
xor
dec
mov
dec
adc
ljmp
xor
andb
mov
mov
and
scas
and
test
rcrb
push
movsl
mov
icebp
mov
ret
clc
fdiv
cmp
mov
mov
ret
hlt
jnp
pop
or
dec
pop
lcall
sbb
sbb
jge
mov
or
lock
sbb
in
dec
bound
push
decl
cmp
filds
lcall
cwtl
stos
add
push
in
stos
mov
cmp
and
pushf
lcall
sbb
push
addr16
test
mov
idivl
imul
aam
or
out
std
gs
sub
sbb
pop
das
gs
mov
movsl
loop
jg
xchg
insl
jmp
inc
sbb
push
pop
jle
jo
hlt
inc
pop
adcb
mov
std
jge
pop
cmp
jno
and
dec
pop
repnz
addr16
cs
iret
mov
int
xor
leave
cli
les
jg
enter
mov
leave
add
jae
or
inc
fdivs
dec
dec
in
mov
xchg
pop
xorb
es
in
jmp
clc
popa
sub
inc
sbb
mov
xor
outsb
data16
aam
xchg
sbb
test
mov
int3
arpl
inc
ljmp
push
inc
or
test
popa
mov
insb
rolb
shll
pop
in
cmp
dec
arpl
cs
cwtl
nop
inc
inc
pop
hlt
pop
jbe
xor
test
adc
jp
mov
add
fsubs
aaa
dec
pop
lret
icebp
jl
xchg
scas
shrb
add
ljmp
stc
jb
sbb
pop
stc
dec
rclb
nop
xchg
test
shl
sti
push
pushf
xor
add
loop
das
push
aam
and
dec
out
jno
repz
add
sub
ja
outsl
out
cmpsl
xchg
fbstp
movsl
cmpsl
ds
cmpsb
push
divb
jmp
sbb
xchg
testl
sub
cmp
fistpll
leave
xchg
jp
mov
cli
sbbl
fldl
sbb
hlt
shll
es
cmpsb
mov
xchg
insb
xor
and
inc
mov
xor
pop
dec
sub
push
lods
push
dec
push
push
je
lods
jb
jno
je
repnz
jmp
ljmp
test
xchg
enter
sub
mov
push
ss
mov
rolb
cmp
fisttps
add
ja
enter
add
add
data16
sbb
dec
pop
xor
in
mov
xor
fbstp
mov
dec
or
aad
dec
pop
fldenv
mov
leave
aas
bnd
mov
iret
mov
arpl
dec
idivl
int
and
aam
adc
aas
pop
mov
lahf
or
cmp
push
pop
movsl
nop
xlat
jb
pop
rol
xchg
cmc
lret
add
int
push
in
jno
outsb
sub
lcall
js
xchg
aas
push
scas
jno
imul
pusha
sbb
andl
xchg
ss
sub
pop
inc
out
cli
cmpsb
lock
ficoml
mov
mov
inc
lret
cmp
enter
fwait
insl
mov
popf
dec
inc
data16
rolb
iret
xchg
scas
fdivs
mov
sbb
ret
sahf
in
pushf
xchg
and
mov
adc
int3
pop
rcrb
enter
xchg
sbb
repnz
imul
jecxz
add
inc
mov
and
test
lods
inc
stc
call
push
arpl
ret
daa
add
stc
and
inc
outsb
inc
add
xchg
or
adc
or
ljmp
inc
pop
dec
mov
orb
inc
sub
sub
aam
xor
bound
int
in
shr
adc
sbb
call
push
pop
pop
cmc
jge
mov
sarb
icebp
cltd
or
mov
imul
enter
xor
push
nop
stos
ds
loope
jnp
stc
dec
pop
cld
mov
or
xor
jge
xor
dec
inc
out
subl
hlt
adc
push
push
repnz
push
jns
xchg
jb
orb
test
sbb
pop
add
shlb
cmp
push
push
movsb
dec
xchg
add
jl
imul
adc
push
fwait
arpl
adc
subl
push
clc
mov
repz
lods
xchg
nop
inc
pop
adc
mov
jae
sbb
adc
lea
and
out
mov
add
iret
fildl
inc
es
jb
push
test
sbb
mov
dec
mov
scas
call
sbb
out
mov
jmp
push
hlt
xor
add
jmp
jp
fcmovnbe
and
sarl
ret
jp
and
or
push
int3
pop
push
add
aaa
mov
or
jnp
mov
fbld
mov
adc
lcall
push
aaa
test
dec
mov
loope
sub
sbb
mov
mov
imul
sbb
xchg
adc
repz
sbb
push
cmc
sti
cmp
adc
test
jae
or
nop
xchg
mov
cli
push
sub
xor
stos
mov
cli
cmpsb
stos
xchg
loopne
xchg
call
push
add
repz
test
sbb
loop
shl
adc
or
pop
jb
in
leave
fwait
mov
lret
les
xor
xor
sub
fcompp
inc
add
cli
pop
movsb
ss
stos
xchg
adcb
loope
movsb
mov
or
stc
pop
push
jmp
ss
sub
push
jae
mov
scas
imul
aaa
inc
pop
fbstp
fcmovnb
pop
cmp
cmc
outsb
mov
push
mov
out
xchg
dec
int3
es
fidivrs
lahf
push
loopne
nop
shll
sahf
xchg
cltd
cmpsl
lods
add
clc
add
jg
xchg
push
add
sub
dec
pop
jecxz
cmp
inc
pop
sub
imul
dec
mulb
imull
insl
mov
adc
push
rol
fadds
add
lcall
pop
mov
test
xor
sbb
test
lds
js
mov
scas
jne
push
xor
clc
jae
inc
inc
fldcw
mov
pusha
mov
fs
jae
xchg
pushf
adc
and
mov
push
sbb
jmp
fs
cmp
pop
dec
add
inc
imul
adc
mov
jl
inc
hlt
jnp
lret
mov
popa
add
push
inc
ret
outsl
filds
lods
push
mov
jp
mov
addb
adc
daa
xchg
or
sbb
ffreep
in
or
push
mov
jnp
jecxz
popa
andl
dec
push
sti
rcl
xor
xor
aam
push
shll
cs
aad
lcall
or
scas
jg
sahf
pop
inc
int
stos
dec
push
and
inc
add
arpl
loopne
cmp
jg
mov
cmc
pop
mov
cli
xor
lods
lds
jp
sbb
mov
and
push
scas
cmp
sub
pop
xor
jl
mov
fbstp
or
add
out
xor
pusha
fs
or
sbbl
iret
pop
enter
js
fdivrl
pop
and
or
mov
call
mov
outsl
add
push
scas
mov
sbb
clc
sahf
xor
scas
xor
arpl
dec
scas
leave
jge
pop
xor
outsb
loope
fsubp
pop
mov
ljmp
dec
push
scas
mov
fidivrs
cltd
out
jl
popa
and
inc
call
sti
sub
out
cltd
rclb
add
out
xchg
xorb
stos
mov
rcrb
outsl
jp
jb
test
xchg
stc
xchg
lret
bound
mov
lock
dec
inc
cmpsb
adcl
lods
pop
movsb
adc
cmpsl
inc
out
ljmp
dec
sub
inc
pop
jge
xchg
gs
inc
mov
mov
inc
jno
shlb
imull
adc
cmp
shl
add
daa
pop
fcmovnu
push
rclb
cmc
push
fwait
lods
popa
jmp
popa
inc
push
inc
dec
push
dec
and
cli
adc
pop
mov
jl
hlt
shl
pushf
ret
xor
arpl
stos
adc
xor
clc
fs
mov
inc
cmp
test
jb
rcrb
outsl
leave
push
notb
fisubl
jp
xor
dec
call
in
notl
add
aas
test
pushf
xchg
lret
mov
rcrl
movsl
stc
js
das
cmp
cltd
out
xor
dec
std
xchg
pushf
stos
mov
les
or
out
out
insb
test
repnz
and
out
fisttpll
iret
inc
mov
and
int
xor
sahf
out
xorps
push
inc
inc
int3
frstor
sub
lock
loopnew
and
popa
fadd
mov
into
test
lret
jnp
notl
popf
lea
push
sbb
xor
push
mov
mov
out
mov
scas
adc
jae
mov
testb
mov
mov
jp
jp
testl
sahf
cmpl
lea
mov
sarb
add
pop
lods
and
icebp
push
jmp
sbb
popa
cmp
incl
mov
rcr
xor
dec
cmp
mov
inc
pop
outsb
sbb
mov
or
push
lcall
sahf
and
notl
scas
into
cld
jmp
mov
pop
add
inc
inc
out
dec
push
cmpsl
mov
cs
mov
mov
sbb
mov
dec
imul
mov
cli
xchg
xor
in
adc
push
xor
sub
lods
stos
sti
push
ljmp
orl
enter
inc
fsubrl
and
into
scas
inc
sub
data16
mov
cwtl
xchg
mov
in
inc
push
fmuls
std
xchg
mov
cmp
lea
andb
jmp
mov
push
adc
pop
inc
xor
mov
cmp
and
mov
popa
fsubrl
push
xorb
jp
leave
pusha
cmp
popa
adc
cmpsl
loope
jns
jg
push
pop
adc
ret
sub
hlt
push
into
mov
daa
call
mov
xchg
dec
pop
and
sbb
cltd
sub
into
jno
orl
mov
push
test
aas
outsb
out
and
ret
mov
ja
incb
mov
dec
gs
inc
sar
jae
fisubrs
mov
add
pop
cli
xor
gs
sub
test
sbb
test
cli
xchg
arpl
out
test
xor
ficomps
sub
dec
scas
mov
jle
shl
xlat
shl
sub
fldenv
popa
clc
inc
xchg
add
je
loope
test
mov
scas
jmp
add
adc
cmp
hlt
shll
sub
inc
pushf
add
xchg
xchg
add
push
xor
std
add
mov
cmpsb
cmp
stc
lea
lock
repz
mov
dec
lcall
inc
pop
dec
mov
jne
sub
mov
repz
fdivs
sbb
les
push
or
stos
sbb
xchg
mov
lahf
shrb
fldenv
das
inc
sbb
movl
xchg
jnp
out
xchg
cmp
lock
sbb
movl
adc
out
push
lds
bound
pop
pop
mov
repz
and
mov
cltd
mov
jbe
adc
cwtl
xor
push
xor
mov
inc
scas
or
mov
dec
push
push
cwtl
push
bound
mov
daa
outsl
adc
icebp
jp
out
insb
mov
fnsave
adc
inc
andb
outsb
cltd
fstps
popf
cmp
inc
xor
xchg
icebp
addr16
sbb
add
cmp
enter
ds
xchg
mov
shlb
dec
lahf
inc
xor
out
es
sbb
fldl2t
mov
aam
or
lahf
imul
push
sbbb
mov
ljmp
xchg
int3
arpl
xor
in
or
jne
into
mov
push
lret
ret
repz
cmp
mov
ss
lahf
ss
add
xor
pop
fcoms
fbstp
cmp
xchg
and
js
mov
mov
or
cld
inc
adc
cmpsb
sbb
decl
loope
mov
rclb
ret
mov
xor
ret
sbb
fnstenv
pop
mov
dec
out
jnp
and
test
sub
loopne
fildll
mov
in
mov
stc
jle
push
jo
std
adc
push
mov
fistpll
outsl
ja
insb
mov
lea
fidivs
mov
rcl
mov
sub
push
adc
pusha
iret
mov
shl
lea
into
sub
cmp
xor
or
gs
faddl
rclb
popf
xor
scas
pushf
inc
fcmove
mov
pop
adc
outsl
jp
cmp
adc
lahf
sbb
mov
sbb
push
add
push
dec
mov
mov
scas
imul
lea
out
jae
adc
sub
push
insl
jg
lret
ss
or
adc
mov
push
mov
mov
pop
inc
mov
or
cwtl
pop
mov
insb
scas
add
xchg
push
lods
xor
sbb
cmc
mov
sub
mov
mov
push
aaa
js
divb
xchg
push
jge
push
js
push
mov
pop
cbtw
pop
out
adc
mov
fsts
or
sub
cmpsl
cmp
loopne
dec
sbb
leave
adc
hlt
pop
insb
mov
mov
daa
add
pop
popf
and
xchg
xchg
mov
mov
xor
bound
leave
mov
push
adc
setle
call
test
xor
add
push
in
inc
je
ja
int
lret
sbb
add
jmp
xchg
lods
jecxz
aam
scas
mov
mov
push
es
insb
lret
ficomps
push
negb
daa
shrb
mov
cmpsl
pop
rorb
push
in
push
xchg
bound
rolb
es
bound
icebp
mov
icebp
mov
jg
in
test
jle
pop
hlt
mov
adc
dec
xchg
sbb
enter
mov
sub
loop
dec
sub
cmp
lcall
loopne
add
insl
outsl
push
daa
inc
jb
cmp
lea
leave
xor
and
ss
leave
sub
leave
int
arpl
stos
mov
imull
mov
ret
inc
add
inc
icebp
cmp
and
inc
cltd
sub
lods
mov
das
setl
push
lods
lret
jns
jl
testb
dec
add
aam
and
mov
aas
jg
out
adcb
xchg
fdivp
xor
and
ja
aaa
xchg
pop
es
push
addb
lock
cwtl
inc
adc
pop
xchg
push
aas
and
mov
and
mov
cs
sub
ffree
dec
dec
add
cs
inc
mov
push
push
in
fists
xor
mov
movsl
jns
in
es
setno
jge
jne
jecxz
jle
xchg
scas
and
test
cld
sbb
pop
negb
out
add
inc
or
ror
jmp
cmp
push
call
enter
int3
push
loope
pop
sub
movsb
dec
inc
nop
repnz
addr16
cltd
orb
sarl
jmp
jl
xlat
stc
sbb
popf
cmpsb
das
and
pusha
enter
push
mov
sbb
push
inc
outsb
add
jg
pusha
mov
mov
fcoms
mov
sub
arpl
rcrb
xchg
data16
out
out
cltd
cmpsl
shl
adc
pop
pop
out
and
lcall
push
add
lret
data16
jmp
stc
imul
inc
lahf
pop
cmp
sub
popa
sarl
jb
js
pop
daa
sbb
mov
mov
enter
daa
jb
out
or
jae
arpl
fsubl
mov
inc
in
mov
shll
add
dec
cmp
xor
add
xchg
dec
sbbb
bound
in
cltd
mov
aam
aad
mov
imul
or
jo
aaa
pop
push
add
mov
arpl
mov
inc
fistl
loope
cld
push
sarl
movsb
std
adc
mov
and
scas
inc
adc
clc
and
test
stc
outsl
test
push
pop
mov
dec
jo
ja
push
lods
pop
xchg
jb
lds
loop
out
pop
push
cmpsb
xchg
push
cmp
pop
enter
sarb
sub
dec
sar
sub
xor
fiaddl
loopne
mov
jne
jmp
mov
cwtl
add
pop
dec
mov
insb
loopne
sahf
xchg
mov
jns
das
outsb
out
dec
sahf
shrw
fwait
mov
dec
pop
insl
iret
inc
push
aam
sbb
dec
ss
cmpsb
cmp
jg
pop
std
aam
test
shll
xchg
sbb
lahf
jg
dec
clc
hlt
pop
rcll
push
jp
cmp
mov
dec
dec
jbe
jnp
jnp
outsl
orb
or
pop
push
das
xor
popa
inc
icebp
mov
arpl
sub
mov
hlt
pmullw
mov
in
or
sub
leave
adc
pop
jae
loop
je
xor
clc
in
sti
iret
adc
and
or
and
test
mov
or
ja
sub
pop
add
lds
pslld
insl
push
mov
pop
jo
push
lods
mov
cmp
test
outsl
ret
cli
fwait
pushl
mov
cmp
stc
lcall
test
mov
imul
cli
xchg
in
ret
sbb
pop
mov
push
and
push
pop
sub
insl
or
aas
lock
pop
lock
xchg
xchg
cwtl
fists
aad
outsl
pop
mov
test
add
aad
mov
push
push
xchg
jle
mov
and
xor
andb
cmc
sub
add
mov
int
inc
and
inc
mov
mov
cmc
fs
out
adc
mov
outsb
in
rcrl
imul
cmc
mov
pop
stc
cmp
xor
pop
out
sbb
jl
push
xor
fisubrs
rorl
rcrl
push
jg
int
pop
sbb
xchg
cmpsl
sahf
inc
insb
fwait
gs
arpl
pop
jne
das
jg
mov
inc
jb
push
mov
xchg
rcr
ret
stc
or
lea
xchg
jle
add
idiv
test
adc
shrl
clc
sbb
sub
sbb
lret
cmpsl
pop
mov
inc
add
cmp
or
insl
cmovo
cld
call
rcll
sub
jg
pushl
rcll
repnz
xor
dec
imul
insb
dec
add
daa
inc
push
sub
add
aaa
xchg
lods
push
ds
lea
dec
xchg
adc
andb
push
pop
fsubl
push
addr16
in
gs
mov
cmpl
pop
and
xorb
push
test
mov
out
cmp
sbb
mov
xor
stos
pusha
xor
fildl
cmpsl
ds
fucomi
jp
push
les
popf
daa
les
fcomps
in
mov
pop
stos
jp
outsl
add
mov
fwait
pop
es
add
cli
push
fimull
xchg
mov
fs
jno
sbb
mov
ss
out
adc
shl
movsl
and
xchg
fmul
adc
testl
js
dec
jecxz
push
scas
pop
lcall
negb
sbb
pusha
mov
mov
cmove
mov
repnz
push
pop
adc
mov
xor
lds
push
xor
dec
mov
lds
pop
jbe
mov
lods
cmp
loop
mov
mov
cmpsl
jae
jl
jbe
cs
inc
jecxz
inc
mov
clc
iret
jle
inc
fstpt
dec
mov
cld
testb
ljmp
mov
cmp
popa
push
xchg
dec
out
or
cmc
cmp
fdivl
pop
cmp
push
or
inc
pusha
adc
call
into
push
imul
adc
mov
dec
es
dec
xchg
into
clc
nop
ja
dec
sbb
icebp
mov
je
mov
fst
stc
mov
cld
pop
fldcw
or
testb
fisubl
cld
sbb
xor
push
xor
test
add
sti
mov
ret
push
fs
push
mov
pop
ja
xchg
mov
mov
in
cmpsb
cli
stos
mov
enter
xor
cmpsb
stos
dec
add
push
dec
incl
mov
or
mov
mov
push
rorb
push
ret
sbb
mov
les
xor
mov
cwtl
jae
lret
sub
test
push
mov
sbb
lcall
xchg
ja
and
pop
sbb
jo
add
inc
ret
pop
sbbb
mov
test
fidivs
xchg
fmul
cmp
inc
repz
js
in
inc
xlat
fdivl
pop
fisttps
sub
inc
add
xlat
cmp
stos
insl
sbb
sbbb
or
bound
mov
gs
xlat
cwtl
mov
mov
aaa
push
adc
ret
data16
push
or
fdivrs
mov
fisubl
push
xchg
jbe
mul
xor
and
or
movsl
sbb
mov
lahf
lret
xchg
mov
cmp
add
dec
inc
adc
or
fwait
jo
fbld
out
xchg
jge
add
stos
les
imul
cltd
loopne
out
aam
push
cmp
and
pop
fidivl
dec
sub
loope
push
jbe
push
loop
inc
jmp
xchg
pop
in
add
arpl
movsb
dec
dec
cmp
fwait
sub
xlat
mov
ret
imul
ds
imul
cli
movb
subb
push
inc
push
out
stos
jb
mov
stc
dec
inc
test
pop
fadds
dec
and
mov
sbb
je
lret
cmp
jbe
and
cmpsb
aaa
push
push
or
js
popf
or
jecxz
scas
fs
cmpb
fisttpl
fistl
xor
mov
movsb
pop
or
mov
leave
jno
push
mov
cwtl
in
xchg
imul
push
iret
pop
shrb
and
repnz
mov
xor
stos
hlt
pop
insb
xchg
sub
aas
mov
dec
mov
cmp
repz
mov
sub
pop
movsb
pop
cmpsl
movsb
or
sub
inc
or
jge
mov
fcoms
mov
pop
jmp
add
jo
shlb
scas
add
rcrb
or
icebp
int3
sub
mov
and
jb
sbb
sub
mov
shlb
loop
into
dec
out
push
je
add
adc
and
fistps
inc
sub
fucomp
pop
or
cmp
scas
mov
test
ja
movsb
mov
add
stos
pop
ja
adc
inc
sti
movsb
bndstx
and
inc
fisubrl
push
sbb
jle
inc
daa
xchg
xor
popf
mov
cli
inc
fimuls
decl
repnz
int
mov
scas
out
sbb
ja
lret
jl
pusha
daa
sub
mov
xor
cltd
dec
out
dec
or
add
cmp
aaa
add
dec
adc
int3
lods
mov
into
pop
xchg
mov
xchg
orb
dec
scas
fstpt
or
cld
lcall
cwtl
call
mov
subb
scas
jle
stos
jle
or
mov
xor
cmpsb
or
mov
dec
arpl
jb
movsb
push
inc
push
data16
mov
testb
jle
sbb
mov
mov
jg
jno
cltd
jl
cli
pop
fcomps
inc
or
xchg
mov
ficomps
mov
mov
xchg
aad
ljmp
sub
lods
push
pop
inc
sub
xchg
bound
fists
in
jbe
fucom
add
cltd
cmp
repz
in
mov
jb
inc
fsubs
lret
adc
mov
push
lods
add
push
out
push
lods
fistpl
cmp
push
pop
cmp
orl
pop
dec
cwtl
call
cli
pushf
push
cmp
iret
scas
mov
jg
roll
or
int
int3
test
or
test
push
fwait
jbe
mov
jge
clc
push
ficompl
adc
enter
mov
cld
dec
adc
iret
cmp
push
adc
mov
xor
push
mov
repz
ljmp
fwait
cmc
push
loopne
addr16
iret
xchg
mov
das
rcrl
frstor
rorb
sub
or
outsb
jl
pop
xchg
add
insl
mov
add
or
dec
dec
cmp
xchg
nop
sbb
and
add
test
adc
pop
mov
dec
pop
es
lret
sarb
scas
in
packsswb
test
push
jmp
ret
test
int3
xor
xchg
sub
adc
dec
out
xchg
popf
scas
ret
cs
mov
fsubr
test
fs
jge
adc
push
xchg
ja
xchg
movsl
or
cmc
pop
and
iret
lret
adc
push
or
pop
test
hlt
in
and
fs
inc
xchg
dec
cltd
aaa
je
add
inc
fildll
inc
bound
sbbb
pushf
cmpsl
aad
adc
fwait
test
lock
dec
mov
cmpsb
xchg
push
js
cs
xor
out
cli
sbb
and
and
std
popf
int3
or
adc
mov
pushf
loop
dec
stos
add
push
inc
xchg
inc
xchg
fcoml
sbb
cld
leave
daa
or
add
cmc
xchg
and
pop
lds
add
and
lahf
xchg
sub
insb
xor
or
push
int
or
cmp
daa
cmpsb
mov
stos
cld
and
push
push
daa
mov
mov
adc
pop
xor
xor
xchg
mov
cltd
iret
cmp
aas
xor
push
dec
cmp
cli
stos
or
push
xor
inc
push
dec
and
lds
push
mov
ss
push
mov
cmp
je
mov
addr16
es
sub
and
aam
pop
dec
popa
jg
pop
cmp
xlat
shrl
sahf
dec
out
call
hlt
mov
pusha
mov
gs
pusha
mull
dec
jle
orb
lods
mov
arpl
mov
inc
jecxz
push
shrb
mov
sub
mov
stc
movl
dec
mov
jl
je
jb
mov
notl
xchg
fmul
sbb
hlt
dec
out
arpl
cmp
cmp
dec
push
outsb
cmp
push
or
dec
jno
push
hlt
push
cmp
sbb
mov
insb
mov
dec
int
into
jns
jno
sbbl
push
fwait
mov
pop
leave
sub
or
push
push
mov
jg
and
dec
xorb
push
imul
sbb
lods
push
xor
cli
push
mov
popa
xchg
jg
adc
xchg
push
pop
and
add
sti
lds
mov
icebp
inc
data16
dec
pop
cmp
sbb
push
ret
inc
cld
inc
loope
xor
xchg
aas
aam
pop
rclb
jge
movsl
aaa
push
mov
or
leave
xchg
xor
mov
movsl
data16
xchg
lea
mov
popf
pusha
dec
push
lret
fnstcw
shlb
xor
dec
jecxz
inc
gs
repnz
and
outsb
ljmp
sbb
cmp
or
sbb
aas
popa
stc
xor
in
inc
sbb
adc
call
orl
or
sbb
sub
pop
adc
fidivs
out
add
scas
loopne
loopne
sub
mov
divb
fnsave
cmp
dec
mov
adc
leave
sbb
sti
or
cmp
mov
test
les
jg
fcmovb
iret
push
andnps
std
pop
jne
icebp
jb
and
fs
shl
inc
mov
call
hlt
jne
lcall
pusha
and
mov
mov
push
mov
or
out
bound
ficoms
push
stos
lea
mov
cmovp
cmpsl
rol
mov
push
orl
sub
jmp
dec
inc
fldcw
inc
pusha
lods
and
pushl
jl
jo
sbb
cmpsb
hlt
das
gs
mov
ret
pusha
div
aas
pop
dec
dec
xchg
add
ret
ss
in
or
data16
xor
test
icebp
inc
arpl
inc
jns
add
cmp
imul
pop
add
loop
push
sbb
sti
xchg
adc
popf
or
xor
mov
xchg
call
sarb
dec
shll
fidivs
rcl
lret
cwtl
lods
xchg
outsl
mov
int
pushl
adc
pop
pusha
adc
fadd
xchg
and
dec
out
xor
xchg
cmp
imulb
repnz
push
cmp
pop
push
out
fldt
and
call
or
ljmp
hlt
cmp
fdiv
mov
ja
mov
xchg
sub
cmp
loope
lods
sbb
pop
cmpsb
test
movsl
dec
cmp
aad
xchg
mov
mov
std
fstpl
pop
out
outsl
les
pusha
jae
arpl
inc
fiadds
adc
mov
xsave
add
cs
jno
ljmp
jmp
xor
sbb
push
jb
add
xchg
dec
cpuid
xlat
mov
cmpsl
fildll
jecxz
pushf
and
out
rorb
sbb
lret
cmp
fdivrl
mov
out
or
and
and
ja
mov
xlat
dec
int
jg
mov
dec
sbb
icebp
xor
dec
adc
push
ficoms
sub
adc
iret
sub
cmc
es
push
cmp
jl
mov
fstps
pop
dec
icebp
aam
mov
iret
test
mov
lahf
jmp
js
sub
stc
in
loope
jne
lcall
aas
fs
xchg
sbb
andb
fcompl
or
stos
lock
sti
mov
inc
jl
xchg
scas
sbbl
stos
mov
shr
xor
scas
sbb
mov
sbb
fidivs
pusha
andl
out
in
and
test
ljmp
cmc
pop
lret
aad
jb
js
insl
xchg
and
bound
sbb
addl
lods
or
popf
and
subb
mov
jae
jecxz
xor
cmpb
std
roll
lcall
xor
or
cmp
outsb
mov
sbb
xchg
ret
xchg
xchg
sti
rcrl
adc
loopne
pop
adc
sub
aad
inc
es
test
jns
je
jl
add
sbbb
sub
das
mov
pop
imul
aaa
fs
dec
in
jge
pushf
cld
lahf
mov
push
cs
add
mov
dec
out
cwtl
mov
movsb
push
pop
test
mov
pusha
cmpsl
sub
daa
pop
insl
inc
add
xchg
xor
imul
mov
pop
push
mov
loopne
pop
xlat
pushf
je
cmpb
mov
cmpsb
movsl
cmp
jne
jp
stos
push
push
pop
addr16
pop
fsts
sub
mov
push
mov
imul
push
jno
aam
xchg
in
notb
sahf
add
sahf
lods
jmp
test
shll
imul
int3
aad
mov
mov
adc
jge
mov
imull
pop
clc
mov
iret
push
in
call
je
or
pushl
cmpsl
sbbb
mov
fildl
add
mov
repz
inc
push
out
jg
imull
pop
sub
xor
cmpl
cmp
push
aam
repnz
in
dec
aam
sub
cmpsb
add
dec
push
shlb
mov
add
push
inc
mov
pop
cmp
mov
cmp
imul
pushf
push
jecxz
insb
add
mov
adc
pop
dec
or
popa
jle
loopne
fstpl
int3
jg
test
jo
cmp
mov
pop
sub
mov
sub
inc
push
push
mov
cmpsb
call
mov
lea
pusha
mov
mov
clc
rcrl
xor
dec
add
lcall
pop
in
sarb
mov
mov
mov
mov
mov
sbb
xor
pop
orb
fiadds
in
fsubl
cltd
inc
dec
fwait
sti
decb
aad
int
jp
and
addr16
sub
lock
jnp
and
sub
lret
lret
and
pop
in
insb
mov
mov
dec
out
or
push
mov
sub
outsl
push
cld
insb
jno
mov
popa
jl
xlat
and
and
test
inc
enter
sbbb
push
hlt
mov
popf
nop
sub
jmp
stos
cmp
add
dec
cmp
inc
dec
xchg
or
into
adc
aaa
fwait
lahf
gs
push
aad
pop
cmp
stos
cli
jecxz
in
test
inc
inc
mov
add
fbld
push
push
sahf
or
lods
cmpb
push
test
xor
subl
inc
and
xchg
dec
outsl
orl
add
movl
sarl
fbstp
sbb
and
hlt
cltd
xor
fbstp
xlat
out
js
movsb
jl
in
test
pop
jbe
sub
cmp
xor
inc
es
add
lock
jns
mov
jae
or
insb
pop
out
test
add
xchg
outsb
or
pushf
lods
mov
out
jo
sahf
dec
idivb
cmp
in
test
arpl
xchg
pop
pop
out
bound
test
fsubrs
es
dec
add
dec
ds
test
lds
jae
fucomip
jno
loope
mov
and
mov
imul
fidivl
add
clc
or
out
adc
stos
lret
mov
pop
or
dec
jecxz
pushf
dec
test
hlt
in
dec
mov
outsb
aaa
or
jno
cmpsl
cmpsl
lods
ljmp
pushf
mov
idivb
sub
rol
push
cmc
jl
daa
sahf
outsl
test
jmp
jbe
fdivp
faddl
mov
test
xchg
lcall
mov
adc
mov
add
shlb
cmpsl
ret
cli
jae
sub
xor
and
dec
aad
fwait
inc
in
test
sbb
test
and
adc
jge
add
lahf
testl
and
cli
cmc
push
fs
stc
scas
mov
push
daa
enter
cs
fstps
mov
inc
mov
adc
cli
loope
mov
jno
shrb
jge
add
pop
cs
or
mov
mov
xlat
jp
mov
stc
push
push
jmp
push
xchg
push
movsl
mov
inc
test
pop
push
mov
jmp
xchg
mov
ss
adc
ss
cli
add
mov
sahf
pushf
mov
mov
dec
int
stos
inc
inc
daa
fcoml
or
add
push
rcrl
test
popa
cmp
jmp
add
ret
xor
mov
mov
cli
testl
movsb
nop
pop
pusha
dec
or
inc
pop
xor
inc
cmp
mov
adc
xchg
js
fistps
fsubl
dec
loop
repz
adc
out
test
or
xchg
xor
in
jl
and
scas
cli
cmp
dec
fmull
loop
std
iret
xor
or
push
je
pop
xor
lcall
pop
push
imul
aas
and
mov
sub
shrl
daa
sbb
inc
jp
ret
arpl
repnz
shll
insb
fildll
inc
mov
or
sbb
mov
sbb
shr
lretw
cld
test
mov
push
ret
inc
pop
lds
fwait
sti
sub
mov
adc
sub
pop
mov
or
aas
sub
inc
inc
popa
push
inc
xor
xchg
lcall
xchg
mov
aaa
stos
or
add
lahf
les
test
cmp
mov
pusha
aaa
mov
ds
out
or
mov
test
les
ret
push
adc
pop
jg
pop
icebp
and
add
in
sbb
mov
dec
out
xsha256
cmpsb
adc
dec
add
sub
fnsave
sub
insl
repz
test
mov
rolb
clc
sub
pop
sbb
imul
or
je
pusha
adc
xchg
lahf
pop
enter
std
mov
push
insl
mov
add
xchg
jp
mov
mov
mov
sahf
pusha
iret
data16
andb
cmp
rorb
dec
mov
int
addl
xor
mov
pop
sbb
add
xor
and
push
mov
add
or
push
and
outsl
scas
jno
sbb
mov
mov
sbb
cmp
or
cltd
scas
sub
mov
push
sub
mov
aad
xor
scas
into
gs
clc
jae
mov
sub
dec
test
and
push
mov
ds
testl
popa
cmpsb
push
pop
push
test
pop
cmp
stc
pop
mov
dec
shlb
popa
cltd
lds
test
mov
rolb
dec
add
lods
shrl
push
or
test
push
xchg
pop
sarl
push
arpl
jmp
int3
pop
lret
fwait
divl
inc
shll
fwait
mov
les
bnd
mov
dec
vpmaddwd
test
lret
addr16
loop
jmp
pushf
jae
sarb
adc
inc
sbb
jno
aas
pusha
dec
mov
pushf
xor
cmc
push
push
or
es
in
adcl
sbb
push
and
cli
adc
sbb
or
push
lcall
push
pop
sti
or
xor
add
mov
sti
sub
outsb
cmp
dec
sub
inc
cli
sahf
mov
jo
mov
loopne,pt
xor
cwtl
mov
dec
add
mov
imul
push
push
dec
in
xor
imul
mov
and
sub
leave
sub
ficompl
inc
fildll
loope
cld
cmc
mov
sub
fnstcw
push
aam
push
loope
repz
test
cli
pop
shlb
jg
xchg
mov
or
pop
mov
or
dec
ja
addl
cmp
stos
es
cmp
insl
pop
inc
pop
mov
dec
xchg
cmp
or
push
call
loop
mov
xchg
outsl
notb
fsubs
xlat
jbe
adcl
add
inc
outsl
add
or
pop
xchg
xchg
mov
push
sub
xchg
insl
sahf
pop
int3
pop
imul
outsl
mov
xchg
adc
adc
int3
mov
mov
shrb
adc
push
sub
sub
jecxz
add
fiaddl
int3
and
mov
rcrl
rorb
stc
in
in
sub
ljmp
clts
std
xchg
inc
loop
jno
clc
loop
je
mov
pusha
not
add
mov
lret
or
pop
push
jbe
mov
movsb
ja
or
icebp
xor
push
movsb
pop
xchg
inc
jae
xchg
sub
out
jg
xchg
leave
dec
daa
xor
pop
rcrl
cli
jne
call
adc
cmpl
jmp
call
stos
mov
loop
aaa
inc
out
add
fimull
mov
inc
out
stos
dec
mov
ja
inc
mov
push
dec
into
in
inc
xchg
dec
xor
rcr
push
push
dec
lea
xlat
and
adc
mov
mov
cmp
stc
rorb
and
inc
push
lahf
dec
lea
lea
lods
addr16
bound
dec
ror
out
movsb
cld
ret
out
imul
inc
adc
xor
subl
push
and
mov
arpl
cmp
dec
cmp
inc
sbb
mov
mov
inc
and
addl
pop
or
hlt
movsb
xor
fbld
loope
mov
cmpsl
adc
mov
ja
roll
inc
mov
js
push
inc
or
dec
ja
push
xor
sub
push
xor
subb
inc
aas
outsb
mov
cmp
jle
jmp
xchg
stos
fstpl
jmp
and
adcb
cmp
scas
xchg
sbb
ret
hlt
addr16
cmp
iret
aaa
test
popf
dec
in
and
repnz
xchg
mov
xorb
push
ds
in
xchg
sub
je
imul
add
pop
cmp
mov
stos
mov
out
sub
pusha
mov
inc
fnstcw
mov
dec
in
inc
mov
bound
pushf
adc
sarb
mov
cmc
call
inc
fcmovnb
push
repz
inc
mov
add
or
add
sub
aas
xchg
cs
out
cmp
push
mov
std
sub
xor
lret
or
push
push
out
mov
push
sbb
xor
dec
mov
cwtl
clc
or
divl
jb
ss
jae
dec
test
arpl
jns,pn
ja
adc
pop
push
push
data16
inc
cltd
scas
fisubl
aad
xor
inc
mov
dec
mov
lods
subb
insl
or
sbb
dec
je
dec
out
jo
push
mov
mov
aam
mov
or
mov
fwait
mov
mov
pop
mov
idivb
push
pop
out
cltd
or
cmp
xchg
sbb
jae
stos
ja
add
pop
popa
xor
sti
popa
rorl
adc
and
into
cmpsb
in
aas
mov
adc
pushf
iret
push
or
insl
jp
pop
pop
jo
lods
push
sub
in
js
cltd
sbb
sub
std
mov
ret
push
clc
mov
ja
fisubrl
mov
imulb
outsl
shl
or
mov
leave
adc
push
mov
push
out
mov
push
popf
enter
sbb
mov
mov
mov
inc
inc
and
gs
inc
into
fidivrl
mov
iret
xchg
push
out
xlat
sub
or
outsb
add
jg
cmp
jg
pop
shlb
fsubrs
mov
and
jg
data16
xchg
lods
adc
jmp
fistpl
stos
sub
push
popa
sti
pop
pop
ljmp
adc
pop
jbe
jmp
mov
insl
or
subb
add
pop
mov
xor
mov
cwtl
pop
sub
fwait
dec
dec
dec
xor
mov
xchg
adc
loope
pop
cmp
gs
and
mov
push
or
aas
inc
pop
add
inc
cmp
and
cld
sahf
jae
inc
xor
andb
add
and
xor
movsl
ret
inc
andb
fimuls
gs
imul
and
das
ljmp
out
fbld
mov
aad
cmp
pusha
jo
sahf
inc
mov
cld
test
jns
mov
add
or
jl
cltd
test
xchg
adc
and
shll
jmp
rcrb
in
add
rcr
dec
push
in
lcall
pop
aad
add
jnp
xor
sub
aaa
cmp
fucomp
std
imulb
sub
stos
scas
mov
in
ja
test
out
cmp
and
inc
jge
nop
popa
add
insb
mov
shl
jns
scas
fdivl
data16
add
mov
sbb
cwtl
dec
clc
movsb
popa
pop
out
jbe
add
adc
mov
in
jne
cmp
repnz
lds
push
out
shl
mov
ret
into
inc
push
fwait
inc
out
mov
mov
loop
lods
cwtl
and
lods
fisttpl
scas
sub
sbb
fildl
fnsave
adc
pusha
cld
add
sbb
or
inc
xor
imul
adc
shl
std
lods
xchg
pop
data16
imul
nop
outsb
stos
fsts
or
notb
pop
lock
adcl
sbb
sbb
and
mov
sahf
sub
cmp
movsb
sbb
testl
das
adc
fsubl
xchg
call
ret
sub
jg
mov
cltd
into
push
push
push
mov
imul
unpckhps
push
add
push
cmp
test
imul
imul
mov
clc
scas
es
xlat
mov
or
pushf
fldcw
stos
jnp
mov
cmp
jnp
xor
ljmp
in
push
cmpsb
add
xchg
cs
xor
inc
lods
cwtl
jnp
inc
je
add
int
push
out
dec
cmp
aaa
mov
push
and
rorl
mov
hlt
mov
mov
in
lahf
shl
icebp
or
jb
nop
jecxz
lods
cmp
mov
repnz
mov
sti
test
mov
out
repnz
pop
adc
pop
ds
dec
or
imul
mov
mull
xor
xor
add
xchg
aaa
pushf
les
jecxz
outsl
push
aas
ss
cmp
or
xchg
jnp
dec
mov
fsub
xor
or
mov
mov
loopne
pop
rcl
out
js
mov
add
and
cmpsb
test
pop
adc
pop
movsb
mov
pusha
in
popa
div
mov
mov
pop
pop
adc
fwait
aaa
in
insb
sbbl
and
mov
xlat
subl
out
jmp
mov
int
push
adc
xor
hlt
sbb
stc
cmp
addr16
mov
lcall
inc
sbb
or
imull
ja
and
jns
cwtl
jmp
mov
inc
popa
mov
xor
and
mov
seta
shrb
pusha
cmp
out
xchg
pop
clc
test
inc
mov
in
sub
cmpl
cmp
push
sub
fwait
lods
push
leave
lcall
push
adc
cmp
lods
jae
sub
adc
js
imul
sbb
aam
sbb
addr16
lcall
xor
jg
mov
in
or
pop
addr16
int
ds
push
imul
movsl
lock
xchg
lds
jle
mov
fisttpll
or
xorb
mov
fs
pop
jo
xor
jmp
sahf
sbb
je
sub
rclb
xchg
inc
cwtl
sub
leave
adc
into
jns
push
std
pushf
mov
pop
lret
icebp
jg
lahf
ss
and
ljmp
lea
xor
xor
insl
rolb
push
mov
or
in
cmp
push
xorb
cld
je
test
mov
xchg
std
mov
dec
iret
cltd
mov
push
stos
sub
fwait
sub
sbb
jp
mov
popa
scas
mov
sti
xor
jbe
fs
lahf
and
pop
in
inc
xchg
mov
into
out
xor
lea
push
inc
jo
bound
mov
movsl
fs
int
push
mov
rorl
ds
pop
xchg
fnstsw
dec
mov
fwait
inc
inc
int
mov
cli
in
out
jge
fistps
mov
or
inc
es
bound
and
xchg
push
mov
sbb
add
lcall
adc
lret
pop
or
mov
dec
lcall
jg
enter
sub
sbb
mov
sbb
dec
inc
js
out
sarb
shrl
add
sahf
inc
out
sbb
mov
xchg
or
lods
cld
push
ljmp
push
mov
std
cltd
mov
jmp
ljmp
push
mov
mov
aas
pusha
xchg
data16
xchg
sub
cwtl
jecxz
inc
shll
or
push
mov
mov
daa
xor
cmp
loopne,pn
dec
sbb
repz
jl
movsb
and
iret
xor
jae
adc
jge
sub
adc
mov
push
lahf
add
test
pop
adc
and
cmp
sbb
cmp
push
mov
cmp
sbb
dec
sbbb
pop
es
fnstenv
roll
js
cltd
sbb
pop
mov
pop
cmp
mov
aad
push
test
mov
jbe
addr16
cmp
xor
fnsave
lss
xor
ror
xor
pop
cmp
popa
inc
inc
push
js
mov
pop
and
adc
dec
jb
jg
jp
negl
cmp
jge
inc
in
jle
aam
out
xor
rolb
loope
movsb
push
mov
push
xchg
mov
mov
adc
test
mov
inc
mov
xor
jns
gs
cmp
lock
mov
xor
sbb
cltd
or
dec
push
mov
rcr
lock
insl
add
imul
inc
mov
out
sub
cmpb
or
inc
adc
insb
test
jl
push
push
shlb
mov
sahf
scas
jle,pn
int
xor
rolb
sti
add
sub
outsl
mov
pmulhw
in
mov
inc
stos
add
xor
enter
mov
sbb
push
jmp
arpl
popf
adc
out
inc
dec
mov
lds
ret
mov
stos
xchg
mov
jb
add
cmpsl
mov
mov
or
xchg
xlat
push
test
bound
or
cli
pushf
cmp
adc
fs
jmp
jae
xlat
pop
data16
andb
and
cmpb
ljmp
xchg
mov
mov
sub
mov
outsb
sub
push
lds
fyl2xp1
mov
fisttpll
mov
inc
arpl
fsubrs
mov
testl
mov
outsb
scas
repz
dec
inc
ficompl
xchg
dec
fcoml
fisubrl
es
sub
cmp
mov
mov
jl
push
mov
lret
aas
push
std
out
xchg
mov
cli
adc
inc
adc
lret
pop
cli
dec
dec
lods
rol
pop
add
in
mov
mov
scas
adc
xchg
sub
pop
and
jecxz
jecxz
test
sbb
lock
ds
xor
add
jg
std
lock
lret
jmp
out
loope,pt
adc
add
pushl
jge
xchg
sub
loope
push
dec
push
push
ljmp
aam
sahf
mov
mov
outsl
rolb
sbb
shr
scas
aam
xor
into
cwtl
or
in
and
mov
shrl
lds
xor
push
jo
out
cli
push
and
mov
ret
enter
rcl
dec
mov
mov
sbb
xchg
push
loop
add
jns
inc
cmp
add
xchg
jl
jbe
es
jg
xor
testl
addl
mov
mov
loop
test
pop
insb
push
cmp
cmp
lahf
test
push
andb
rorl
push
adcl
xor
jb
ljmp
pop
jo
dec
sub
mov
mov
fisubrl
or
lods
cmp
out
sbb
sarl
test
dec
adc
loopne
lds
pop
aad
sbb
dec
xor
movsb
jg
in
xor
stos
loop
movsb
xor
pop
mov
sub
aam
loopne
sbb
incb
jp
sub
add
xchg
leave
push
mov
sbb
orl
arpl
fs
add
movb
push
jmp
rcl
das
xor
daa
in
xchg
inc
ret
les
xchg
sub
ret
imul
icebp
add
inc
bound
out
cmpsl
dec
lcall
idivl
jae
aas
jbe
add
add
ret
xchg
imul
and
adc
jg
push
pop
daa
movups
rol
push
push
lcall
in
stos
and
arpl
cmp
inc
fsubs
xorl
test
xchg
add
mov
jg
jp
imul
cwtl
and
sti
jbe
movsb
lods
push
cli
inc
rcll
sub
jbe
int3
and
cmp
fisubl
sbb
inc
mov
inc
jle
pusha
stos
pop
mov
rcl
ret
repz
jecxz
cmc
jne
cmp
sbb
ficompl
fisubl
mov
xlat
push
popf
js
jecxz
push
push
or
xchg
int3
push
push
sbb
inc
cwtl
imul
mov
cmpl
stos
insl
lahf
mov
adc
lods
sarb
jb
add
sbb
inc
inc
sub
jmp
dec
cmp
outsb
mov
in
outsl
insb
aaa
iret
rorl
dec
and
test
fnstcw
ficoml
es
jae
push
fidivs
mov
pop
loope
adc
or
sub
add
mov
mov
test
iret
mov
je
or
mov
xchg
sub
xchg
add
inc
fidivrl
xor
int3
arpl
mov
in
dec
loopne
pop
fimuls
in
inc
ret
cmp
fidivl
sbb
and
cmc
stc
xchg
mov
mov
dec
sbb
pop
iret
jg
dec
add
cltd
repnz
mov
xor
leave
insb
inc
push
fmulp
adcb
js
aas
pop
jb
gs
push
lods
lods
xor
inc
cli
fnstcw
jle
das
inc
pop
outsb
call
fsqrt
jb
outsl
rclb
or
pop
test
mov
inc
jle
jp
dec
into
sbb
add
xchg
pushf
ret
push
pushf
insl
jae
insl
in
or
jle
leave
xchg
hlt
xchg
jg
add
enter
in
gs
sub
push
aam
inc
pop
jecxz
pop
aad
ds
idivb
or
mov
adc
insb
add
xchg
insl
je
fwait
inc
pop
int
out
mov
and
imul
daa
in
imul
sarb
adc
mov
cmp
mov
add
or
jle
out
jmp
and
pop
dec
test
mov
mov
mov
inc
ljmp
dec
sub
push
sub
test
push
mov
fcom
cmp
adc
test
xchg
xor
bound
push
push
jae
test
dec
dec
dec
and
xlat
mov
mov
dec
sti
mov
jbe
cmpsl
push
call
or
sub
adc
adc
repnz
jnp
mov
add
mov
je
add
jno
cmp
xor
cmpsl
add
shll
loop
push
xchg
inc
in
sahf
iret
fidivs
stos
fbstp
sub
sbb
dec
mov
js
movsl
cmp
sbb
shrb
jo
subb
cmp
nop
insb
mov
mov
sub
in
loopne
inc
pop
add
lds
cmp
ljmp
ja
aad
xor
xchg
add
jmp
repz
push
aas
nop
outsb
sub
in
jle
popf
xor
mov
push
add
test
jbe
mov
or
nop
popa
mov
mov
mulb
mov
cmp
sub
cmp
mov
mov
arpl
xor
shr
adc
mov
insb
shlb
outsb
or
imul
mov
bound
int3
and
or
rcrb
jne
jo
je
subb
stos
movsl
push
mov
out
notb
roll
lahf
xchg
test
mov
mov
pop
sub
ljmp
xor
in
mov
pop
mulb
jb
xchg
xchg
aas
cmc
divb
xchg
sub
mov
push
fimull
mov
adc
outsb
lret
xlat
lahf
add
jmp
jmp
pop
das
xor
shll
stos
hlt
mov
mov
and
mov
inc
sbb
mov
and
insb
push
sti
in
mov
cltd
pusha
aaa
ja
push
test
ss
xchg
push
fstpt
hlt
xchg
jmp
pop
jp
jb
outsb
shlb
in
loopne
pop
jl
mov
pop
pop
push
fst
xor
mov
xchg
fdivl
or
mov
push
cld
sbb
loop
int
cmp
push
cmp
test
rorb
pop
loopne
mov
clc
sbb
adc
insb
pop
je
iret
adc
insb
lock
mov
fists
out
adcl
cli
cmp
jnp
scas
dec
imul
cld
adc
aas
inc
loopne
cmp
push
stos
push
jno
sahf
sbbb
sbb
into
xor
adc
lret
aam
jmp
jae
jo
sub
jg
jg
orb
xor
pop
add
xor
add
sbb
test
cmp
sub
sbb
xor
jmp
ret
pop
jl
pop
daa
sub
jae
in
js
add
pop
dec
mov
xchg
adc
adc
xchg
mov
popf
mov
gs
adc
mov
sub
push
and
jecxz
fs
jns
xor
mov
rcll
mov
sbb
jle
xchg
push
jno
push
inc
es
adc
shlb
sbb
dec
xchg
jae
loopne
mov
pop
test
mov
and
inc
push
mov
fsub
push
lret
rorb
mov
sub
jp
sub
arpl
adc
iret
out
rcrb
or
fnsave
ss
sti
pop
es
mov
and
inc
push
push
xor
rcrl
pushf
ret
xchg
add
sub
jo
scas
divb
rcrl
ja
jbe
mov
and
inc
xor
jbe
pop
cmpsb
out
fscale
jo
mov
sub
cmp
xchg
jne
push
movsl
int3
jae
les
imul
iret
dec
dec
fwait
sbb
loope
add
imul
push
jmp
stos
mov
adc
dec
or
gs
xor
rcr
cmp
enter
loope
mov
outsl
out
jl
mov
out
aad
xlat
orl
push
sbb
mov
dec
aaa
lods
lret
std
out
enter
sub
mov
cmp
dec
stos
mov
push
int3
imul
mov
or
in
imul
fdivs
idivb
adc
jbe
cmp
testl
mov
add
jns
jns
and
in
fdivs
jg
dec
sub
hlt
rcll
andb
push
ss
inc
xor
jno
mov
and
and
clc
push
insb
add
shrb
loope
nop
out
pop
movaps
andb
fsubrs
inc
cli
popf
je
mov
out
pop
imul
sbb
movsb
or
cwtl
mov
gs
repz
push
and
inc
std
cltd
cmp
je
xchg
add
add
cltd
cmpsl
jno
fidivs
jecxz
push
dec
cmp
bnd
pop
mov
mov
fs
pop
in
mov
mov
dec
mov
xor
mov
push
inc
repz
cmp
or
add
rclb
clc
push
inc
icebp
push
dec
add
xor
cmp
pop
dec
inc
fisubl
pop
jo
push
mov
test
xchg
sbb
or
sub
sub
sub
pop
movsb
mov
loop
add
in
out
inc
and
xchg
pop
js
or
clc
push
mov
dec
mov
jno
dec
pop
push
jbe
mov
imul
nop
fdivl
mov
and
lret
push
fsubrs
inc
hlt
mov
sbb
ds
mov
adc
lahf
cs
pop
xchg
into
dec
sahf
clc
loope
cmp
sub
push
leave
pusha
inc
sbb
pusha
xor
loopne
rclb
pop
insl
inc
sti
std
lods
sub
jmp
add
jnp
adc
lock
xchg
testb
cmp
cmpsb
mov
push
sbbb
jnp
loop
pop
test
jbe
fdivrs
xlat
andl
pusha
bound
sbbb
dec
jmp
jle
and
mov
icebp
insl
or
mov
rcrb
fmuls
mov
pop
aam
jno
jns
stos
fwait
xchg
cmp
lds
out
mov
cmc
subb
adc
mov
lock
lcall
lret
popa
clc
stc
xchg
dec
add
jg
pop
sub
into
aam
jo
mov
out
adcl
in
hlt
je
es
inc
inc
sub
dec
jmp
aaa
pop
add
push
and
std
pop
mov
dec
fnstsw
jecxz
sbb
push
sub
push
fnop
inc
faddp
sbb
outsb
mov
dec
or
lea
push
jae
mov
or
dec
sahf
imul
cmp
leave
xor
mov
push
jmp
mov
outsb
test
lcall
add
inc
adc
sub
add
loope
je
adc
jno
aam
sbb
sub
mov
sarl
add
mov
xchg
sbb
ret
js
sbb
dec
and
call
fcmovne
add
loope
dec
jecxz
andb
ret
pop
iret
xchg
sbb
xor
ljmp
test
cmpb
cld
sahf
popa
clc
iret
pop
jg
lds
mov
push
xchg
inc
mov
inc
hlt
pop
lock
jb
push
pop
in
pop
fstps
addr16
lret
sub
std
xchg
scas
inc
in
cli
gs
or
or
xor
or
dec
popf
outsl
cmp
xor
icebp
pop
pop
out
inc
add
inc
movsl
jbe
cwtl
data16
mov
popl
movsb
out
fiadds
push
mov
xchg
lret
movsb
xchg
cmpsl
hlt
mov
jb
pop
push
mov
cli
out
sahf
jbe
inc
sbb
sub
push
cli
inc
jle
pop
scas
dec
addr16
dec
cmp
push
sub
jb
sti
sub
clc
lahf
pop
in
pop
adcl
imul
mov
or
mov
data16
mov
test
xor
adc
sub
inc
fsubl
cs
pop
js
inc
stos
sub
jb
mov
xchg
insb
mov
lds
push
push
cmpsl
je
mov
mov
std
pop
gs
jl
cmp
mov
test
bound
pushf
in
mov
mov
fmuls
test
pop
jbe
dec
mov
pushf
pushf
inc
cwtl
sbb
clc
xchg
mov
cmp
push
cs
and
xchg
pop
stos
or
nop
cmp
loop
and
mov
int
pop
bnd
mov
mov
xchg
xor
jo
mov
xchg
out
fisttpll
test
mov
ret
or
mov
cmp
ret
sub
mov
rcrl
mov
xor
sbb
dec
lahf
pop
cmp
inc
insb
xor
xor
lret
jno
shll
nop
jp
dec
scas
add
jmp
jge
lahf
hlt
lret
movsb
jnp
inc
push
popf
mov
add
or
sbb
and
pop
ret
adcl
or
pop
mov
mov
lods
inc
out
stos
aam
mov
push
stos
jae
ds
push
sbb
sub
mov
mov
mov
add
mov
jg
xchg
popa
imul
testl
adc
int3
scas
xor
mov
leave
jb
clc
cwtl
xchg
inc
es
je
sub
jne
xor
add
dec
ss
mov
fnstenv
dec
cltd
movsl
insl
or
rclb
adc
or
cld
jecxz
dec
xchg
mov
inc
addr16
mov
fwait
xor
fldcw
js
push
nop
lods
mov
shr
incb
aas
out
test
hlt
mov
bound
test
mov
xor
mov
test
mov
push
clc
into
ja
into
enter
mov
inc
jle
adc
je
sub
jle
pop
and
fistps
jle
push
jae
mov
je
enter
cli
adc
mov
std
xchg
mov
ficompl
out
inc
aad
and
sbb
sub
pushl
inc
mov
ja
scas
and
jl
je
popa
xor
xchg
icebp
push
cmc
pop
aaa
ss
cli
gs
dec
lcall
xchg
sub
pusha
das
jle
popa
mov
mov
mov
add
inc
xchg
sahf
mov
aad
stc
sub
pop
mov
mov
mov
cltd
xor
mov
test
test
add
sbb
rorl
out
mov
inc
adc
movsb
aam
lea
testb
mov
enter
jne
sbb
or
popa
clc
add
fstpl
lods
shll
sbb
dec
sub
mov
mov
sbbb
pop
jge
div
es
ffreep
jle
add
lcall
in
ja
xor
and
fisttpl
xchg
add
mov
jb
mov
sti
push
jne
or
stc
divl
lock
sbb
addr16
mov
rorl
mov
mov
sar
ret
push
lods
hlt
lds
cmp
divl
shlb
jbe
and
adc
push
push
sub
stos
push
push
push
addl
repnz
xor
movsl
xchg
aad
mov
out
fs
movsb
jbe
cld
iret
roll
add
sub
cmp
lea
test
jecxz
aad
addl
sti
lret
outsb
dec
push
push
xchg
xor
int3
out
test
or
fistpll
faddl
push
aad
js
push
jae
jno
jmp
clc
int
scas
outsl
push
and
lea
je
sti
lret
pop
xor
pop
rolb
notb
add
adcl
sbb
lea
xchg
stos
inc
push
and
scas
enter
push
movsl
xchg
dec
pop
sbb
daa
stos
cli
pop
sahf
outsl
pop
add
loopne
pop
jno
sbb
repnz
in
xchg
xchg
adc
lds
cmp
repz
inc
enter
cli
nop
sub
in
inc
aad
movsb
pop
loop
lock
sub
push
lcall
sub
push
arpl
pop
cmpsl
xchg
pop
pusha
sar
inc
test
jmp
push
pop
lds
ljmp
and
loopne
xor
andl
call
pop
stos
daa
dec
inc
jmp
ret
pop
xor
lock
pop
and
pop
push
outsl
js
stos
push
push
dec
call
aam
mov
outsb
add
inc
fidivrl
imul
pop
ljmp
cwtl
cmp
lods
test
jae
mov
pop
sub
mov
int3
std
ljmp
add
push
cmp
gs
jl
jle
test
push
sub
or
mov
or
pushl
xor
lcall
movsl
xchg
ss
jge
xor
push
inc
sub
fstl
jae
and
xchg
sahf
xor
jae
mov
lds
push
jmp
bound
sbb
pop
fidivs
mov
jae
fstl
movsbl
inc
gs
xchg
movsb
push
fisubl
aam
cmpsl
or
add
jmp
xor
icebp
mov
inc
data16
lods
mov
or
jg
pop
jb
jge
dec
dec
adc
adc
push
je
in
pop
dec
lods
xchg
sbb
shl
mov
cmp
aaa
enter
jmp
add
jno
cld
test
repz
insl
xchg
loope
push
fsubs
test
add
jae
jb
mov
and
inc
fiaddl
adc
or
fstpt
mov
adc
jg
xor
mov
add
xchg
aam
sub
pop
out
or
ds
pop
add
out
lock
xor
mov
cwtl
add
movsl
lahf
ja
iret
shr
jge
sbb
sbb
add
push
test
push
or
xchg
add
movsb
xchg
lret
or
mov
add
cmp
iret
sar
jno
gs
rcrl
push
pop
and
loop
loop
sbb
add
inc
mov
mov
lock
cmp
leave
iret
adc
pop
push
dec
mov
hlt
ja
jbe
push
out
jl
in
push
dec
sub
loope
or
dec
pop
sbb
cmp
sbb
insl
jb
lock
jnp
xchg
sahf
xor
jns
push
push
jno
or
imul
aad
mov
pop
mov
cmp
subl
ds
xor
int
jmp
lret
popa
orl
mov
adc
jbe
mov
sub
mov
ja
adc
movsl
and
sbb
out
or
sbb
cli
cmpsl
out
ficomps
das
jle
or
xchg
leave
and
test
or
sub
push
push
sahf
lea
orb
push
jecxz
push
cmp
pop
push
out
sti
jl
ja
push
jns
pushf
xchg
xchg
popa
faddl
cmp
dec
loope
aam
mov
adc
orb
pop
pop
arpl
loope
imul
or
sbb
pop
ljmp
jno
ror
insb
nop
aaa
push
pop
mov
sub
stc
lcall
loop
and
cmp
lret
cmp
mov
ds
mov
mov
repnz
or
test
xor
repz
ja
icebp
add
shrl
jo
push
mov
pushf
pushw
or
imul
pop
scas
xchg
dec
insl
cmp
bnd
mov
xchg
push
mov
test
lods
sbb
dec
dec
push
jle
imulb
cmp
icebp
aas
push
sbb
add
sub
outsb
xor
and
addb
movups
cltd
adc
iret
loope
pop
pop
push
mov
dec
pop
mov
cmpsl
cwtl
das
int3
adc
outsl
insb
test
lret
shlb
push
fwait
pop
mov
ds
icebp
xchg
xor
mov
loope
test
add
add
and
and
dec
mov
cmpsb
dec
pop
mov
mov
cmp
std
sahf
and
mov
sti
pop
mov
nop
dec
cmp
iret
push
aam
push
push
push
add
lret
lcall
mov
cld
test
sbb
hlt
jbe
push
push
call
inc
cmp
mov
movsl
test
fnstenv
pop
mov
mov
push
mov
push
inc
stc
and
jl
in
lea
mov
adc
inc
push
popf
lods
inc
rolb
leave
ljmp
xchg
es
sub
mov
adcl
jb
mov
nop
dec
int3
push
into
and
das
in
mov
rorl
xchg
out
cwtl
xor
leave
shlb
adc
clc
xor
xchg
ljmp
add
data16
jb
push
ljmp
cmp
cltd
sbb
push
mov
jb
sbb
xor
push
sub
xlat
ret
in
jle
and
shlb
jnp
and
stos
inc
xchg
leave
pusha
orb
push
jmp
mov
or
ret
repz
out
add
out
mov
jae
hlt
sub
xor
leave
loopne
sti
xchg
inc
cld
lahf
push
cmp
clc
es
std
test
mov
dec
ja
mov
push
push
jne
and
lret
loopne
mov
mov
push
loope
or
xchg
mov
mov
sti
cwtl
ljmp
cmp
cmpsb
les
inc
sub
fsubl
or
fisubrs
je
push
add
dec
mov
mov
xchg
push
inc
addr16
mov
inc
xchg
fldl
add
add
call
dec
xor
aas
pop
mov
cmp
push
jne
in
jl
aas
mov
call
cmp
sbb
cmp
mov
aas
arpl
call
cmp
sbb
clc
mov
test
mov
xchg
sti
push
mov
cs
push
outsl
je
xchg
jb
out
mov
xor
push
cmp
xchg
cltd
movsl
loopne
call
cmp
xchg
sub
jno
push
push
add
adc
outsl
adc
repz
mull
in
xor
sbbb
cwtl
shll
pushf
add
lods
push
out
or
or
pop
aaa
rcll
aaa
int
add
xchg
mov
hlt
pop
mov
xchg
mov
les
jg
stc
cmpb
mov
loop
xchg
pop
loopne
cmpsl
add
nop
sub
out
sbb
xchg
dec
loop
xchg
pop
dec
ds
lods
in
adc
add
call
xor
mov
inc
push
xlat
or
push
call
adc
xchg
push
mov
lods
mov
adc
dec
popa
clc
jns
je
rcrb
xchg
movsl
inc
mov
dec
sub
repnz
dec
xchg
mov
insb
addl
add
aaa
ss
aam
xchg
cmp
dec
pop
out
loope
in
mov
in
cltd
xor
xchg
out
cmc
pop
mov
adc
movsl
add
pop
testl
inc
pop
notl
fwait
cmp
inc
pusha
les
add
mov
sbb
popa
sbb
mov
popf
out
cmpsl
inc
fidivs
dec
out
data16
sbb
faddl
cltd
hlt
in
sub
mov
fcomps
mov
aam
add
pop
nop
adc
cltd
mov
jmp
jo
dec
aad
push
arpl
xor
in
xor
push
dec
in
mov
daa
scas
test
dec
shl
push
mov
fdiv
mov
jge
adc
sbb
div
loope
pop
jle
sbb
xchg
loop
in
repnz
xor
add
andl
enter
jecxz
jbe
fbld
shrl
xchg
ss
std
adc
lods
and
mov
fnstcw
insb
ret
push
out
adc
outsb
jle
xchg
ljmp
in
or
test
lods
jecxz
out
push
mov
jbe
dec
in
lods
rol
xor
xchg
test
loopne
adc
popa
cli
xchg
xchg
aas
mov
push
push
push
or
or
cli
add
sub
nop
push
aas
xchg
cltd
or
call
mov
jo
push
add
test
xor
insl
inc
call
out
cld
push
jno
stos
repz
lcall
inc
movsb
pop
push
jecxz
add
pop
sub
xchg
push
inc
mov
inc
and
orl
mov
dec
sbb
add
sub
in
cmc
sti
lods
mov
insl
xor
push
hlt
jp
adc
in
and
fcoml
adc
mov
fwait
sti
inc
jmp
jo
mov
out
inc
push
pusha
loop
push
inc
popa
fisubs
dec
mov
cli
popf
sub
dec
sbb
pop
movsl
jno
push
and
fbstp
roll
ffree
lds
shrl
ds
xchg
mov
lock
fdivr
pop
or
imul
dec
shrb
andl
adc
mov
stos
jb
into
into
mov
jno
loopne
inc
js
repnz
jnp
in
mov
inc
cmp
mov
movsl
push
sub
xchg
mov
clc
cmpsl
out
mov
jo
and
repz
fcoml
xchg
xchg
xchg
and
jns
sub
jne
jmp
dec
sub
loop
fsts
sub
adc
mov
cli
flds
jge
shrb
negb
or
rclb
sahf
cwtl
das
add
mov
jmp
pop
or
jo
inc
push
in
nop
adc
and
testl
add
jbe
adc
adc
mov
fbld
je
stc
xchg
sbbb
inc
outsb
push
daa
adc
daa
pop
adc
and
int
adcl
ret
loop
stos
mov
out
cmpsl
sbb
pop
inc
jns
jbe
imul
popf
push
jno
xor
dec
in
aas
loopne
in
icebp
cmpsb
movsl
sbb
loopne
insb
sub
pop
adc
aad
adc
out
pop
and
imulb
scas
popf
add
xchg
cli
xchg
addr16
into
fsubl
inc
mov
cltd
dec
jecxz
lahf
mov
adc
inc
jl
cli
xchg
mov
push
sbbl
rorl
sub
bound
popf
dec
mov
cli
push
pop
scas
loope
dec
das
lods
imul
or
jl
inc
mov
cld
int3
filds
int
sub
xor
into
int3
xchg
dec
push
or
dec
mov
movsl
inc
xchg
xchg
adcb
or
imul
sbb
sti
iretw
push
sbb
mov
mov
sti
sub
inc
xchg
shr
aam
icebp
adc
adc
sbb
fwait
hlt
or
mov
sbb
ds
xchg
sbb
pop
divb
cs
add
pop
adc
repz
push
pop
daa
in
adcl
pop
fcmove
xchg
xor
mov
dec
fisubrs
neg
cmp
cmpsb
inc
lock
loope
aam
and
outsl
and
pop
in
and
xor
xchg
jae
mov
mov
es
lods
movb
xor
pusha
xor
sub
lcall
xor
adc
mov
jp
dec
dec
jb
sub
sub
and
nop
paddq
inc
loopne
xchg
addr16
fldz
cmp
pop
xor
push
int3
pop
mov
jae
jb
inc
hlt
jmp
inc
and
inc
push
test
inc
movsl
ret
sbbb
ja
sub
dec
test
loopne
cmp
cmp
jl
cmp
mov
repz
jmp
xorl
inc
jae
jb
push
inc
fnstcw
dec
aaa
adc
lret
imul
sub
mov
xor
arpl
scas
imul
insl
loopne
add
pop
repz
int
and
or
mov
dec
dec
enter
ds
dec
and
pop
out
adc
lea
add
stc
loope
call
xor
lahf
fsubrl
popf
push
mov
int3
scas
pop
inc
sub
sbb
xchg
rorl
enter
ds
lea
cmpsb
mov
mov
jb
push
push
jbe
xor
inc
mov
add
and
je
cld
movsl
push
push
mov
mov
imul
jl
repnz
adc
adc
sub
inc
lods
ljmp
push
push
jle
or
jp
mov
jmp
inc
das
jmp
in
cld
js
ret
aam
ja
sbbl
mov
jecxz
dec
repnz
cmp
mov
or
bsr
rol
mov
insb
mov
pop
push
xor
adcl
mov
push
xchg
push
xor
mov
aaa
adc
ret
sbb
xor
mov
out
inc
mov
push
stos
sub
and
push
lret
xor
clc
xor
pop
insl
push
pop
mov
popa
add
imul
jbe
aaa
or
mov
dec
dec
mov
fdivrl
mov
mov
inc
cmpsl
int3
ja
mov
cs
lahf
xorl
lret
mov
mov
dec
stc
pop
mov
aaa
fwait
xor
sub
mov
ret
es
pusha
fbld
leave
push
gs
xor
in
inc
mov
dec
and
jp
lea
lahf
fistpl
mov
cmc
nop
out
mov
cmp
pop
cwtl
mov
dec
pop
addr16
push
mov
addl
jl
test
push
ficompl
mov
imul
loope
outsb
rolb
push
js
push
and
in
xor
dec
out
xchg
fsubrl
les
mov
stos
push
aas
test
movsb
xchg
mov
fucomip
outsl
adc
int
pop
outsl
xor
jnp
dec
loope
fucom
sbbl
xchg
stos
icebp
test
jmp
jl
fadd
xchg
pop
jbe
dec
movsb
aas
stc
loop
loop
popf
js
adcl
inc
pop
jns
std
or
addr16
addr16
mov
out
insb
shlb
sbb
lea
andb
cmp
xchg
jge
cmpsw
not
std
sub
mov
aad
shrl
pop
test
icebp
push
leave
ds
dec
fldl
lret
mull
mov
icebp
stos
insb
pushf
push
hlt
or
xchg
aaa
es
stos
xor
cmp
sbb
aam
mov
jl
cltd
je
popf
sub
rorl
sub
push
aaa
inc
or
fwait
push
push
out
jecxz
shl
int
add
pusha
and
sub
adc
insl
cmpsl
test
rcrb
dec
hlt
push
js
loopne
xor
imul
pop
lret
bound
add
imul
sahf
jg
gs
nop
ds
call
test
rcr
aad
sub
and
or
mov
in
and
sbb
jo
dec
push
push
leave
sub
cmp
inc
addr16
imul
mov
rcl
pop
popl
into
ljmp
sbb
sub
enter
stc
call
cmpsl
aam
aas
xchg
leave
xor
lret
nop
pop
mov
lds
xchg
pop
sti
adc
add
pop
mov
sub
xchg
outsb
js
sbb
fbld
int
and
out
shrl
xchg
adc
jp
jle
fldenv
stc
popf
popf
dec
loope
sarb
hlt
jo
aaa
dec
or
adc
xor
push
scas
dec
icebp
sarl
lock
or
push
cmp
lcall
shl
push
je
repnz
push
dec
in
cmp
cwtl
cmp
das
out
dec
sbb
shl
mov
hlt
mov
outsb
sbb
cmpsb
aas
dec
xor
jnp
scas
add
sbb
data16
sub
inc
stos
add
pop
scas
fdivl
mov
rcrb
mov
rcrl
imul
push
cmpsb
push
or
and
mov
das
iret
mov
cmc
or
mov
sahf
lds
out
test
frstor
sub
jns
jno
gs
jecxz
fsts
adc
dec
mov
flds
xchg
jmp
insb
add
and
jnp
lods
nop
push
jae
leave
sub
jnp
test
xchg
and
cmpsb
xchg
cmp
insl
sbb
lds
xchg
icebp
jb
xchg
sbb
xor
pop
in
cld
mov
jo
mov
pop
mov
dec
lret
mov
sub
push
aaa
stos
xor
adc
ljmp
into
sub
push
inc
jnp
sbbl
cwtl
pop
nop
xor
mov
imul
mov
xchg
sub
or
jo
ret
daa
outsl
outsb
insl
cmc
maxps
mov
shrb
ljmp
rorb
inc
pop
in
ljmp
inc
cmp
push
stc
mov
shl
mulb
aam
or
insb
or
xor
fs
mov
xlat
add
jb
dec
inc
xor
arpl
aam
ficompl
in
or
dec
les
jns
lret
and
hlt
pop
xchg
cmp
insb
leave
popf
push
jb
push
sbb
or
push
pop
out
dec
push
jnp
inc
loope
and
movsb
cmp
dec
stos
jle
pop
xor
xlat
xchg
mov
jmp
or
testb
sub
movsb
sub
enter
jns
inc
fmulp
bound
mov
movsl
mov
jmp
cmc
xchg
aad
clc
inc
cmp
cmp
fldenv
cmp
ss
add
sub
sti
test
push
add
cmp
lcall
movsl
shrl
mov
hlt
push
adc
inc
cmc
mov
xlat
pop
inc
xchg
ljmp
jne
mov
pop
xchg
std
insl
loope
cltd
ss
fisttpl
mov
jmp
out
outsl
andl
jne
mov
lret
data16
jnp
sbb
jecxz
mov
add
adc
pusha
xchg
jno
and
andl
addr16
mov
or
xor
daa
cs
dec
aaa
rcrl
push
dec
dec
xchg
jbe
out
mov
fdivrs
aaa
push
lock
dec
cmp
push
add
or
inc
pop
in
repnz
pop
mov
and
imul
mov
pop
outsl
nop
jae
jg
dec
sub
fidivs
adc
incb
adc
add
xchg
inc
add
orb
aad
adc
xlat
pop
add
fsubrl
rolb
lret
xor
or
mov
mov
cld
xchg
pop
xchg
dec
push
cmp
hlt
add
andb
xchg
mov
jo
cmp
call
dec
and
outsl
cmp
out
mov
xchg
aad
and
clc
add
and
outsb
push
popa
loopne
test
cmp
cmpsl
test
shl
xchg
push
clc
adc
pop
pop
dec
add
and
pop
pop
xor
stc
dec
sbb
sbb
dec
dec
test
cli
mov
jno
in
mov
je
mov
xchg
push
rol
fdivs
call
roll
adc
mov
mov
jb
rorb
push
mov
out
ja
adc
dec
push
push
push
adc
lcall
xchg
out
cmp
jno
add
xor
push
ljmp
jo
aas
ret
dec
pop
push
addw
jle
jle
jns
cmp
sahf
xor
outsb
sti
mov
rorb
outsb
cltd
lods
and
or
jp
nop
mov
sub
in
xor
dec
cmpsl
ret
lahf
imul
xor
xchg
pop
mov
cltd
sub
jl
and
sbb
sbb
xchg
fwait
or
das
mov
out
sar
jge
repnz
mov
fstl
cli
sbb
dec
pop
inc
arpl
mov
nop
jmp
pop
aas
push
sub
inc
fnstenv
mov
aam
xor
ss
mov
loop
dec
mov
pop
adc
stos
add
shll
ss
jae
fs
out
xor
pop
cmpsl
jne
inc
jmp
jnp
xor
adc
call
xchg
ds
jb
adc
mov
lahf
ret
outsl
sbbl
xchg
scas
fldl
xor
sub
std
jo
ret
mov
mov
movsb
outsl
dec
test
bnd
imul
pop
ret
sti
or
push
int3
add
aaa
dec
test
mov
pop
insl
and
imul
xchg
or
push
in
sub
pushf
xchg
inc
cli
jne
in
clc
push
xchg
hlt
ljmp
push
ja
add
loope
jecxz
adc
rol
or
mov
push
adc
push
imul
cmpl
leave
addb
xchg
sub
out
lret
xor
xor
jne
adc
push
aad
iret
and
daa
outsl
insb
scas
cmp
pushf
push
mov
pop
es
mov
fistps
inc
mov
fstl
add
xor
push
jmp
test
adc
or
add
lahf
test
and
fdivr
aaa
cli
push
testb
pop
cmp
mov
jne
jo
pop
adc
xchg
mov
and
cmp
lods
mov
xchg
inc
inc
mov
pop
lret
mov
enter
lea
into
pop
xchg
push
scas
stos
sbb
add
pop
in
repz
dec
adc
jle
imul
xchg
jp
sbb
fsts
ret
pop
or
jbe
out
cmpsb
lahf
pushf
xor
mov
dec
and
clc
daa
mov
dec
push
ljmp
jmp
add
sub
mov
pop
pop
jne
dec
inc
and
push
sbb
test
add
test
mov
std
inc
fcmovne
mov
shrb
shll
ja
ss
dec
leave
push
xor
js
jo
pop
and
fldt
rcll
adc
js
xchg
lods
bound
ja
cwtl
stos
sub
inc
xor
fsubl
dec
loope
cmp
mov
out
insb
daa
add
cld
je
xchg
inc
nop
adc
fisubrs
jle
bound
xchg
in
mov
sbb
mov
shlb
sub
cmp
decb
mov
pop
repnz
push
ljmp
loope
cmc
fidivrs
xchg
mov
jl
test
in
andb
and
int
jmp
push
ljmp
xor
cltd
inc
adc
test
adc
lret
xor
or
cmpsl
jl
xchg
out
inc
jno
js
andl
sbb
cld
push
inc
fwait
xchg
dec
or
xchg
xor
movsb
add
jnp
fdivrl
orb
dec
mov
aam
mov
lret
or
mov
push
repnz
adc
enter
sub
leave
pusha
or
sub
jmp
ret
xor
fcoms
mov
test
ss
iret
fistpl
inc
bound
or
and
icebp
rcrl
mov
call
adc
mov
mov
dec
in
jl
mov
lds
test
jle
test
sub
lcall
mov
inc
ja
cmpsl
rol
mov
rorb
lds
mov
jl
cmpsb
xchg
mov
jle
jl
shlb
cmp
xchg
add
and
mov
pop
or
adc
lret
cmp
test
movsl
aad
insl
inc
inc
adc
and
mov
add
cmp
sbb
pop
and
add
dec
mov
mov
pop
or
inc
xlat
xchg
rclb
stos
sub
mov
lods
cmp
cmp
fnstcw
mov
mulb
lods
pop
push
test
push
jecxz
jge
in
add
movsb
mov
lcall
cwtl
rcrb
lcall
dec
cmc
mov
and
cmp
adc
daa
divb
cli
inc
int
scas
or
xor
adc
movsl
pop
inc
adc
jae
das
lret
insl
ja
mov
mov
push
insl
sub
jns
nop
stc
xchg
sbb
sub
mov
rorb
dec
mov
xor
sbb
outsl
mov
dec
inc
xlat
jle
xlat
rcrb
in
inc
cmc
sub
jge
daa
jo
adc
xor
inc
jbe
mov
pop
loopne
sbb
pop
xchg
mov
mov
cmp
mov
cmp
xlat
add
sbb
push
out
aaa
push
pop
and
xchg
das
std
inc
xchg
inc
mov
pop
andb
inc
push
ljmp
jno
mov
fisttpll
cld
xor
xchg
sub
cmpsl
sbb
cs
xor
sub
repz
insb
adc
xor
jp
push
and
jo
dec
mov
adc
push
pop
xor
rcr
pop
or
stos
pop
push
rcr
cmp
mov
fstpt
fst
adc
pop
repnz
push
mov
ss
jns
mov
mov
xor
pop
sub
pusha
pop
stos
dec
loopne
lds
subb
out
jns
insb
stos
and
std
subl
adc
xchg
cld
cmc
xor
pextrw
lods
inc
fisubrs
loope
or
or
xchg
lret
addr16
sbb
ret
daa
or
lahf
jp
mov
mov
in
xor
ret
shrb
das
test
mov
sub
shrl
and
mov
mov
movsl
jb
cmpsb
movsb
enter
dec
sub
push
stos
sbb
jne
lret
xchg
and
push
cs
mov
fimuls
and
mov
mov
stos
adc
xchg
inc
in
test
sub
aaa
dec
lret
cs
or
repz
scas
imul
mov
and
jp
fwait
int3
rorb
mov
into
xor
cltd
bound
push
fs
leave
pop
mov
pop
fisttpll
sub
jg
sub
pop
and
pop
xor
push
mov
aaa
jle
jb
sahf
outsb
stos
jmp
repz
and
dec
xchg
jb
xor
cmp
imull
push
imul
cmp
jg
inc
jl
jb
icebp
push
lcall
dec
loope
outsl
test
aam
mov
int
lcall
mov
pushf
push
cmpsb
mov
out
in
or
fs
das
movb
add
dec
pop
dec
sub
mov
shll
icebp
cmp
and
sub
daa
adc
and
enter
dec
test
out
push
loopnew
cltd
xor
add
mov
bound
into
xchg
ret
pop
int3
aam
fstpl
in
repnz
ds
jl
sbb
pop
shlb
mov
imull
xchg
inc
fldenv
jne
jns
insl
movsl
xor
aad
das
sbb
int
pop
and
es
loop
dec
pop
mov
movsl
popf
stc
mov
sbb
aas
mov
rorl
xchg
test
add
fwait
cmpsl
mov
dec
in
add
xor
mov
repz
inc
or
dec
inc
inc
scas
dec
jge
sahf
mov
fs
push
jmp
out
add
dec
cmc
mov
gs
pop
imul
dec
faddl
stos
inc
jmp
or
and
nop
dec
xlat
sti
cmpsl
mov
mov
sub
scas
fimuls
push
iret
mov
popa
add
arpl
xchg
mov
or
dec
mov
xchg
outsb
js
clc
cs
shll
sbb
repz
ja
jmp
nop
das
push
push
in
sub
xor
cmp
xchg
jns
push
sub
in
cwtl
sub
test
mov
mov
nop
push
test
and
addr16
lar
mov
pop
stos
and
rcrb
aas
mov
push
mov
mov
sbb
or
nop
stos
adc
out
jg
pusha
ljmp
scas
jg
fstpt
sub
adc
push
pop
dec
in
pop
adc
xchg
pusha
imul
mov
xchg
movsl
dec
dec
in
xlat
sbb
sub
lret
push
adc
shrl
adc
rolb
cmp
mov
add
mov
push
iret
pop
repz
sti
cmp
insb
and
int3
xchg
or
fwait
shrl
inc
cmp
idivl
cmp
popf
aaa
or
test
repnz
andb
lahf
jmp
and
sbb
adc
or
in
imul
push
es
scas
fidivrs
test
jbe
fs
dec
sub
mull
icebp
or
push
push
inc
pop
mov
push
push
fbld
pop
enter
jmp
jbe
fstl
adc
lods
cmp
es
stos
gs
fwait
mov
jge
out
sti
dec
jmp
repz
dec
sbb
loope
mov
ficoml
mov
xchg
lcall
xor
mov
jnp
hlt
mov
adc
stos
testb
inc
fistpl
and
and
pop
lods
outsl
push
sbb
xlat
cmp
test
push
shl
jne
cmp
xchg
pop
inc
sarl
dec
dec
pop
push
add
jae
cmp
push
lods
pop
jmp
lret
rcrb
pop
inc
gs
xor
sbb
jl
leave
pusha
pushf
sahf
inc
test
mov
test
lahf
jns
inc
and
and
out
aas
nop
push
cmp
dec
clc
addb
es
xchg
mov
jns
xchg
ja
repz
sbb
sbb
push
ja
les
roll
icebp
add
mov
adcb
cli
inc
mov
roll
sub
add
dec
adc
jg
int3
xor
push
or
stos
daa
int
pushf
jp
out
mov
mov
mov
or
mov
fiadds
fs
sbb
and
xchg
add
out
stc
popf
sub
mov
stos
in
xchg
lea
lcall
das
add
mov
jmp
aam
jae
sbb
sbb
in
shll
insl
dec
rol
xchg
and
jno
sbb
adc
aaa
test
sbbl
fucomi
mov
mov
mov
pop
adc
cmc
sti
mov
inc
int
js
out
cwtl
sub
adc
lret
mov
movsb
jg
fnstenv
push
fdivrs
inc
or
mov
sub
and
ret
pop
divb
dec
cmp
mov
outsl
adc
mov
addr16
ret
leave
xchg
lcall
and
pop
ret
rcll
push
not
or
add
int3
jbe
xor
fsts
xor
adc
outsl
out
mov
in
test
mov
lahf
loopne
in
out
xor
xchg
cmpb
je
and
arpl
out
xchg
mov
ficompl
loope
adcb
jg
rcr
fsubrs
inc
sub
loopne
insb
inc
loope
sub
imul
adc
add
lods
inc
ret
jno
and
roll
cld
push
xchg
bound
into
out
rcr
std
mov
mov
mov
mov
xor
scas
mov
push
mov
mov
subl
jo
jmp
add
inc
push
sub
pop
and
cmp
pop
push
mov
popa
adc
mov
xchg
sub
ljmp
ds
lock
dec
pop
sub
mov
test
pusha
loopne
pop
push
cli
aad
mov
out
adc
pop
inc
adc
lds
idivl
pusha
or
testb
std
sbb
xchg
xchg
outsb
dec
lcall
repnz
in
test
gs
jge
dec
lock
or
xor
mov
btr
inc
arpl
pop
push
pop
or
hlt
push
test
inc
pop
adc
dec
scas
jp
sbbl
mov
imul
pop
in
cli
lods
mov
pop
out
je
xchg
xor
mov
sub
fidivrl
fimull
fidivrl
scas
mov
lret
es
pop
jnp
and
faddl
sbb
subl
jb
inc
pop
lahf
jg
shlb
or
xor
das
sbbb
std
lods
cmp
adc
adc
mov
sbb
outsb
loope
icebp
jl
mov
fcmovnbe
mov
jmp
xchg
mov
pop
cmp
ljmp
stos
loope
push
mov
out
pop
jo
or
inc
inc
or
popf
and
and
cmp
addl
inc
ljmp
sbb
inc
push
and
mov
out
andb
or
bound
pop
push
adc
fwait
ja
xchg
imul
sub
arpl
dec
dec
loop
adc
and
xchg
psubw
into
mov
adc
jg
and
cmp
hlt
lea
inc
in
ret
xchg
hlt
icebp
call
cmp
fisubrl
jecxz
xchg
dec
add
in
stc
cmp
sub
out
outsb
sbb
fsubrs
les
clc
xchg
and
adc
push
pop
cmpsb
xchg
dec
pop
mov
adcb
das
mov
xchg
xchg
imul
fadds
js
ficoml
sub
xchg
cmp
aad
in
mov
gs
fidivs
lods
jnp
jbe
std
or
mov
mov
pop
xchg
cmp
rcrb
pushf
and
fdivrl
shl
mov
cld
cmp
sub
xor
stos
xchg
sub
push
popf
mov
sbb
mov
dec
jmp
shll
pop
mov
and
mov
mov
sbbl
or
loope
rclb
push
test
std
mov
jbe
xor
insl
setns
popl
and
mov
pop
mov
adc
fwait
jle
repz
test
lret
mov
mov
sbb
adc
adc
mov
rcrl
inc
jl
pop
clc
lahf
xchg
adc
fistl
push
leave
sti
dec
out
mov
dec
cmp
into
sbb
mov
js
push
out
xchg
xor
xlat
cmp
or
bound
and
or
push
sub
jae
mov
dec
or
mov
repnz
xchg
insb
scas
xchg
mov
add
mov
fwait
ret
jecxz
cmp
adc
lods
cltd
add
mov
fsubs
int
xchg
cld
test
adc
push
cltd
popa
dec
xchg
sbb
sbb
mov
cmp
cs
mov
mov
mov
xor
mov
dec
adc
mov
shll
mov
adc
sbb
sub
mov
sbb
pushf
mov
dec
inc
dec
sub
dec
push
push
cmp
in
cmp
xchg
mov
fwait
cmpsb
mov
pop
mov
sbb
adc
clc
xchg
outsw
pop
adc
push
sbb
push
or
int3
add
push
ljmp
jno
xchg
fwait
mov
roll
insl
aaa
add
test
test
sub
cmpsb
fsubrs
and
add
jnp
outsl
decl
lods
inc
jge
call
fcoms
icebp
add
icebp
in
xchg
jl
push
cmp
add
xlat
outsb
add
shlb
sbb
mov
scas
mov
mov
inc
sbb
pop
cwtl
pop
loope
shrl
add
aas
in
mov
std
sub
mov
mov
ds
test
add
test
and
dec
cmpsb
test
pop
jg
aaa
leave
mov
inc
mov
cld
dec
iret
test
cltd
or
fnstenv
pandn
or
mov
test
cwtl
mov
ja
dec
xchg
xchg
in
push
and
je
movsb
sbb
xchg
add
enter
addl
aaa
movsb
mov
add
jle
or
inc
cmp
xchg
or
testb
arpl
push
sahf
insl
inc
stc
jl,pn
repz
xchg
mov
mov
leave
jecxz
movsb
es
shrb
mov
fistl
test
inc
insb
push
clc
dec
cmpsl
sbb
aad
cld
xchg
aad
add
dec
dec
dec
shl
aam
filds
ja
ds
dec
hlt
or
inc
sbb
addr16
fstpl
push
gs
lret
inc
mov
test
mov
push
xchg
dec
inc
pop
lods
add
movd
push
and
fstpt
pop
xor
sbb
inc
xchg
lea
insl
out
pop
xlat
sub
pop
mov
jp
mov
scas
sbb
sar
xchg
add
cltd
push
cmp
jle
out
cmpsl
sbb
sub
fcmovnu
jo
or
jl
xchg
push
jnp
test
es
mov
fisubrl
dec
fadds
push
cmp
ja
pop
in
and
xor
push
mov
pop
stos
dec
sbb
xor
insl
jno
lahf
push
pushf
xor
sbb
or
dec
fadds
test
pop
lods
push
scas
inc
dec
jno
mov
xchg
jle
adc
push
dec
divl
or
leave
pop
in
xchg
xor
inc
pusha
push
inc
add
pop
mov
add
fsubrs
xchg
std
push
fldenv
in
jbe
cwtl
das
lock
jo
inc
pop
sub
mov
adc
sub
lock
out
in
or
jl
gs
dec
imul
mov
mov
aas
fadds
test
and
xchg
test
clc
inc
or
or
add
xor
inc
push
int3
repnz
and
push
outsl
mov
cmp
inc
popa
stos
xor
lcall
pushf
insb
insl
js
adc
sti
or
sub
cmp
popa
add
mov
adcl
pop
cltd
mov
push
cmc
dec
loope
pop
pop
leave
scas
and
xchg
imul
stos
xor
jecxz
jb
in
add
jge
mov
xchg
sub
imul
pop
stos
mov
icebp
ret
inc
rcrb
rcrl
or
or
cmp
dec
mov
idivl
mov
pop
int
sbb
jl
loopne
addr16
imul
das
jne
mov
mov
pop
pushf
sub
push
popf
cmp
dec
out
fisubl
roll
push
xlat
icebp
sbb
loop
das
or
cmp
fwait
xor
jle
add
sbb
dec
sub
push
sub
int3
mov
movsb
push
push
lahf
adc
lds
shll
and
popa
cmp
dec
pop
push
inc
jge
or
sbb
or
cmp
ficompl
push
dec
or
mov
jp
pop
dec
adcb
mov
icebp
dec
mov
add
xor
and
xor
scas
mov
dec
jno
mov
add
lods
xor
push
or
fcmove
outsl
sbb
mov
sub
ret
pop
daa
dec
dec
add
lock
loope
and
lods
repnz
ret
out
scas
jns
enter
decl
push
mov
leave
inc
pop
clc
add
sub
sbb
jl
push
xchg
sub
cmc
pop
mov
inc
repnz
int
sbb
push
inc
push
shlb
push
push
je
jae
jp
or
push
int3
sub
fiadds
into
adcl
testl
sub
and
insl
jne
xlat
mov
aad
aad
ret
pop
or
vmulss
rorl
mov
push
dec
pop
inc
les
ds
andb
add
sbb
loope
lea
or
sub
cmp
in
repz
mov
lahf
stos
mov
lods
sbb
test
xor
cltd
push
in
cmc
jbe
mov
enter
and
and
fs
sub
leave
and
cmp
jae
jg
jb
inc
fiadds
add
push
loop
subb
cmp
mov
gs
dec
cmp
mov
dec
push
sub
pop
mov
jg
push
out
scas
xor
rorb
jmp
push
lea
movsb
test
jle
jle
cltd
mov
outsb
mov
ja
mov
ss
mov
inc
push
inc
jns
addr16
jmp
and
mov
mov
rol
lret
aaa
pusha
lret
stos
inc
stos
fucom
es
xor
fcompl
call
or
mov
or
xchg
mov
push
leave
cmp
hlt
stos
shr
jmp
shll
repnz
adc
cld
fwait
adc
shr
stc
sbbl
xchg
mov
jecxz
sbb
imul
jo
xchg
mov
jp
jne
stos
adcb
xchg
cmc
scas
mov
sbb
mov
testb
les
iret
movsl
stc
lods
mov
scas
jg
jb
arpl
cmp
stc
inc
cld
cmp
into
push
mov
into
inc
in
loop
sub
out
add
mov
add
icebp
xlat
rcrl
addr16
imul
xor
inc
aas
test
inc
lret
lret
dec
mov
or
jb
xchg
outsb
adc
in
lods
bound
jnp
dec
into
and
sbb
addb
ret
add
sub
rorb
pop
jge
cmp
subb
and
dec
or
es
sub
mov
sub
jns
add
in
dec
ss
push
mov
push
jne
pop
test
fwait
xchg
movsl
sbb
push
fincstp
sbb
jge
out
insb
mov
or
fstps
out
xchg
outsb
into
xorl
mov
in
scas
jg
or
ret
cmp
pop
shrb
dec
in
std
ljmp
mov
outsl
add
fimuls
mov
je
push
mov
pop
xor
inc
lods
test
in
adc
jno
xor
dec
xchg
xchg
pop
fldt
xchg
mov
dec
fisttps
push
push
adc
add
mov
sbbl
aaa
aam
mov
in
sbb
cmp
mull
lret
sti
insl
aad
xchg
sbb
xchg
mov
pop
xchg
rclb
stos
xlat
mov
jg
jo
mov
mov
inc
jmp
idiv
mov
mov
mov
cmpsl
aas
lcall
imul
icebp
mov
cmp
mov
xlat
unpcklps
cs
out
test
cmpsb
out
das
outsl
push
popa
xchg
xchg
out
mov
fwait
pop
aam
sub
dec
xor
movsb
mov
mov
pop
pop
dec
cmpsl
addl
adc
inc
fadd
dec
sub
insl
jmp
shlb
outsl
and
mov
or
adc
push
or
adc
enter
lods
pop
or
ret
push
inc
jne
call
shll
cmpsb
mov
xchg
nop
test
or
nop
jnp
cwtl
outsl
fidivrs
sbb
out
sub
and
into
dec
cli
jmp
bound
cli
stos
adc
push
dec
inc
repnz
pop
sbb
orb
scas
lahf
mov
stos
sub
imul
test
out
push
dec
rorb
lea
sbb
inc
sbbl
rcr
pop
int
pop
jg
shl
dec
sub
pop
push
cwtl
mov
mov
repnz
cltd
ds
sub
ret
test
ja
in
rcr
xor
out
in
sbb
ret
push
inc
pop
cli
sarb
fsub
cs
sbb
test
sbb
ljmp
pop
cli
xchg
sub
xchg
addr16
lret
add
push
adcl
push
inc
arpl
xchg
cmpsl
aaa
movsl
lods
xor
addl
jnp
add
xchg
arpl
fadds
mov
sbb
lds
mov
mov
dec
sbb
sbb
arpl
stos
rolb
outsb
mov
push
fnstenvs
int
mov
fs
inc
push
out
xchg
and
bnd
les
add
mov
mov
cmc
dec
xchg
insl
in
add
cmp
inc
loop
imul
jecxz
movsl
cmp
ss
pop
sub
ss
cmp
imul
push
inc
mov
jmp
rorl
mov
sahf
cmp
inc
daa
test
popf
in
cwtl
sub
shll
fistps
cld
ficoms
xchg
mov
push
jns
jge
hlt
inc
jg
mov
push
pop
and
hlt
adc
shrb
and
inc
inc
xor
mov
pop
or
rcrl
jns
or
jae
push
jno
pop
pop
xchg
movsl
push
dec
mov
inc
aaa
inc
std
xchg
js
insl
in
and
sub
push
cmc
or
shlb
xchg
repnz
add
sti
xor
clc
popa
push
ja
mov
adc
mov
mov
inc
sbb
test
adc
push
js
mov
add
adc
jecxz
add
push
prefetch
sbb
mov
aas
pop
or
xor
sbb
cmp
push
hlt
cld
push
fs
push
xor
xlat
jmp
cmp
xchg
adc
jns
pop
xlat
push
pusha
call
push
cmc
jmp
xorb
lret
notb
fdecstp
or
mov
xchg
mov
push
dec
pop
inc
inc
fisubl
popa
loope
stos
imul
movsb
sbb
jb
cmp
mov
ljmp
lock
repz
bound
test
xchg
push
mov
call
mov
out
jne
lock
sarb
out
jne
lea
or
loopne
adc
xor
mov
std
xor
add
sbb
add
lds
mov
inc
mov
or
addr16
lahf
xor
push
repz
mov
and
das
add
pop
movlps
sbb
mov
mov
xchg
or
push
push
xor
scas
sub
mov
sahf
push
mov
ss
lahf
orl
dec
nop
or
pop
popa
cmc
out
push
out
push
xchg
push
or
mov
and
sub
rorl
inc
or
je
std
into
push
push
sbb
into
ficoms
aad
or
sub
test
push
cmp
clc
sarb
dec
add
mov
lea
mov
and
ja
mov
add
lea
push
pcmpeqb
mov
pop
lret
subb
cmp
jg
leave
mov
jg
arpl
or
add
push
xchg
push
mov
std
nop
daa
das
mov
and
test
mov
or
jbe
in
push
mov
jb
lods
addr16
jp
pusha
add
lea
mov
ficoms
cmc
xchg
sbb
les
cmpb
sbb
sbb
adc
fidivl
nop
xor
out
repz
inc
popa
push
and
pop
arpl
lret
aam
ret
jge
sub
jge
xchg
orl
out
icebp
and
ffree
popf
js
inc
fwait
xchg
jo
inc
adc
xchg
fwait
jnp
loop
xchg
in
sar
push
lea
sbb
adc
aam
cli
or
xlat
mov
or
pop
sub
sbb
dec
jle
push
xlat
in
jl
adc
outsl
loop
mov
dec
fbld
mov
adc
jge
mov
ljmp
dec
add
inc
xchg
push
sub
lods
mov
cltd
int3
gs
outsl
lahf
sbb
inc
adc
into
lahf
incl
popa
xor
stos
jbe
setns
cmp
sub
dec
test
mov
jo
ret
xor
insl
mov
clc
inc
push
out
jle
dec
cmp
leave
inc
outsb
popf
stc
roll
lock
aas
xor
test
push
into
sub
or
shl
and
mov
sub
popa
push
mov
daa
and
ss
cld
or
and
mov
adc
out
jnp
sti
sub
xchg
test
stos
aad
hlt
mov
push
mov
loopne
dec
push
iret
adc
int
push
xor
or
lods
jmp
in
bound
adc
or
test
jbe
cwtl
xor
sub
sub
repz
dec
pop
scas
add
aad
mov
dec
int
in
sti
lcall
sbb
stc
sbb
inc
int
add
sbb
jb
cld
xchg
xchg
fwait
cmp
clc
hlt
movsb
test
ljmp
dec
test
pop
mov
dec
jp
mov
lahf
mov
mov
lret
push
inc
pop
xchg
repz
rcrb
sub
mov
cmp
cmp
lods
sbb
shll
out
rcll
xrelease
je
jmp
mov
stos
cwtl
jmp
fisubs
shl
leave
test
out
jg
lods
inc
mov
mov
mov
xor
outsb
jl
adc
cmp
scas
test
push
pop
mov
scas
push
inc
xchg
and
leave
adc
in
aam
fcompl
add
mov
pop
cmc
mov
pop
outsl
out
sbb
or
mov
leave
jecxz
push
jnp
pop
lods
jb
or
sbb
jo
pop
cwtl
sbb
cli
cltd
sbb
sbbb
sub
mov
mov
jle
daa
das
pop
clc
dec
or
mov
mov
int
mov
push
mov
cwtl
cmpsb
cltd
shlb
lahf
cmpsb
fisubrs
lret
fdiv
inc
mov
das
scas
movsb
fistpl
loopne
dec
cld
ss
insb
adcb
sbb
push
cmp
js
mov
sub
jne
shrl
shl
outsl
daa
ds
mov
xchg
out
lds
sbb
inc
xchg
dec
cmp
es
std
or
mov
sarl
inc
mov
push
jmp
decb
scas
mov
sbb
out
pop
adc
out
rcl
stc
rorl
or
je
pop
sbb
jae
iret
negb
push
sbb
or
pop
in
fistpl
mov
sbb
hlt
jbe
aad
leave
lea
inc
fcompl
push
pusha
repnz
add
mov
loop
sbb
popa
jne
inc
packsswb
sbb
shlb
mov
mov
inc
fwait
adc
pushf
xor
hlt
adc
mov
testb
pop
testl
inc
outsl
clc
push
xchg
cltd
fidivs
mov
lcall
hlt
enter
mov
jne
adc
int3
sbb
jge
cmp
xchg
cmp
jo
scas
mov
xchg
jno
push
cmc
pop
pop
fidivrl
jne
enter
jno
xchg
mov
jle
fcmove
pop
mov
or
out
clc
mov
stc
jns
sub
fimuls
ds
and
fldcw
jl
xchg
cmp
sub
mov
cs
pop
jb
jnp
aaa
inc
lret
cld
daa
js
cmovl
sub
push
dec
sbb
dec
bound
cmp
cmp
jbe
loop
notb
cmp
les
mov
add
dec
scas
aaa
mov
inc
cmp
xchg
xor
adc
dec
jp
cwtl
cmpsl
jmp
clc
mov
cmp
xchg
push
dec
aam
mov
mov
int
lea
push
push
fs
fstl
dec
out
jge
mov
xor
dec
add
adc
setns
aam
adcb
xchg
scas
xchg
insl
adc
pop
jne
int
mov
push
xor
pop
or
jg
and
push
imul
sub
xor
mov
fistps
imul
add
aad
call
mov
pop
nop
lret
mov
mov
adc
fimull
shl
xchg
dec
or
dec
jnp
cmpsl
dec
and
hlt
leave
add
in
adc
push
xchg
scas
cmc
xchg
sbb
dec
cmp
mov
push
icebp
enter
sbb
addb
daa
nop
mov
sub
ds
pop
xor
je
cmp
mov
leave
adc
clc
ja
xlat
pushf
jecxz
sbb
cmp
in
push
mov
dec
add
int3
push
lret
fisttpll
mov
cmp
jg
push
fimuls
stc
lods
inc
sub
mov
mov
sub
pop
fcomi
fs
xchg
das
dec
nop
xor
jg
cli
mov
cmc
movsl
push
mov
addr16
pushf
addr16
dec
loop
mov
roll
pop
mov
lcall
adc
add
je
xor
pop
cmc
push
pop
mov
xchg
or
push
mov
leave
fwait
mov
int
mov
call
test
sub
cmpsl
adc
push
inc
lock
jne
or
dec
add
mov
or
icebp
mov
arpl
daa
test
pop
in
sahf
dec
sti
mov
imul
fwait
push
push
mov
mov
and
faddl
jecxz
sub
push
aas
dec
push
ds
cmpsl
pop
repz
jg
push
jmp
and
sbb
insb
sub
cmp
cmpsl
mov
xor
int3
arpl
push
sub
movsl
mov
pusha
xor
outsb
loope
sbb
cltd
test
push
adc
and
insb
mov
dec
mov
fimull
stos
mov
ficompl
js
cmc
adc
adc
jns
outsb
inc
enter
jae
mov
data16
mov
lods
lahf
cwtl
inc
loop
inc
out
icebp
movsl
sbb
xchg
add
popf
das
pop
jb
mov
or
cmp
repnz
and
popa
cmp
xchg
adc
sbbl
imul
jae
mov
iret
movsb
push
xchg
in
stos
mov
add
jae
adc
mov
into
pop
rolb
mov
shll
add
inc
mov
cwtl
or
leave
sub
push
pop
in
int
loope
mov
mov
push
lret
or
outsb
pop
movsl
insb
sub
xor
iret
xchg
es
movsb
or
aaa
dec
sub
scas
incl
dec
rcl
mov
jns
test
push
pop
cmc
inc
dec
mov
inc
test
and
lret
jnp
cmpsb
add
es
gs
mov
inc
in
mov
divb
shll
clc
movsb
hlt
mov
imul
lret
and
or
jecxz
mov
movsb
cmp
outsb
dec
cmp
scas
call
scas
inc
in
jo
ret
hlt
adc
sub
insb
cld
outsb
cmp
mov
int3
imul
cli
mov
call
hlt
lcall
je
jne
add
scas
js
cld
xchg
insb
sbb
adc
sahf
sbb
outsb
xchg
xor
and
aas
into
aad
xchg
mov
cwtl
das
popa
sbb
cmpsl
inc
xor
sti
cwtl
sbb
rorl
sub
sub
das
jle
sub
dec
test
aad
leave
sbb
shl
into
hlt
sub
iret
pop
push
scas
inc
dec
enter
rorb
pop
js
pop
ljmp
mov
imul
mov
cltd
mov
jle
add
adc
and
test
imul
iret
inc
movsl
jl
sahf
into
sbb
add
push
shrl
icebp
xchg
repz
pop
lods
mov
icebp
fs
mov
roll
sub
out
insl
ss
test
es
test
pop
cmp
scas
dec
cmp
push
rep
sbb
pop
pop
fwait
test
or
jo
testl
jne
test
hlt
pop
jge
mov
xlat
pop
mov
inc
gs
outsb
bound
stos
mov
mov
sbb
xor
imul
nop
inc
mov
sbb
and
ss
rcll
push
shll
dec
dec
cmp
xchg
int3
fsub
push
in
or
sub
int3
jo
ret
rcrb
mov
insb
cmpsl
pop
js
in
mov
pushf
loop
push
lret
fldcw
mov
insb
rep
push
adc
inc
xchg
pop
stos
fld
ret
lahf
mull
popa
or
add
fwait
mov
lods
inc
and
mov
cmp
or
jg
push
sub
mov
cwtl
jbe
rcr
inc
mov
dec
pusha
stos
sub
lods
insl
and
lods
ljmp
jno
es
popa
or
lcall
mov
cs
mov
sarb
aas
cs
aad
call
mov
popa
or
iret
pop
lods
testb
dec
fisubrl
cmpsb
hlt
nop
lock
inc
xchg
jne
pushf
push
les
mov
ja
cmpsb
dec
mov
loopne
cmp
mov
inc
xchg
inc
pusha
xchg
jecxz
dec
enter
jbe
jle
out
lods
add
popf
sahf
jecxz
bound
and
cli
test
adc
sbb
js
mov
push
sbbl
in
inc
sbb
xor
je
or
lea
ret
inc
loopne
lock
pop
paddsb
mov
push
stos
aad
adc
cld
scas
ja
sbb
and
loope
sbb
push
jno
cwtl
addr16
movsl
sbb
lcall
add
lds
enter
bnd
cmp
fidivrl
stc
sti
cli
cmp
mov
mov
imul
push
test
jns
mov
dec
fldl
jecxz
xchg
jae
mov
sbb
push
push
std
fcmovb
gs
mov
mov
pop
in
mov
pop
in
stos
adc
mov
or
mov
push
shrb
data16
loope
push
outsb
sti
lret
sub
shlb
iret
data16
mov
cmpsl
mov
pop
mov
mov
cld
push
in
inc
sub
in
imul
lods
lret
xchg
imull
stos
add
insb
mov
sub
dec
pop
testb
inc
out
lret
jb
inc
in
sbb
mov
adc
arpl
icebp
sub
cmp
xchg
xor
sbb
test
jae
or
pop
xchg
andl
in
into
mov
xor
daa
mov
cmp
test
mov
in
aas
adc
into
orl
sbb
push
and
arpl
imulb
inc
sarl
jg
imul
add
jge
jne
cmp
jg
mov
mov
repz
cltd
es
cwtl
dec
cli
repnz
icebp
push
fidivs
outsl
in
xchg
lcall
int
sbb
mov
jno
or
sub
loopne
or
incl
loope
mov
mov
cld
jmp
or
pop
sub
stos
add
xor
push
inc
xchg
push
push
rolb
xor
inc
cs
or
sub
mov
incl
cmpsl
and
ja
rolb
mov
popf
stc
lds
shll
loope
mov
loopne
imul
xlat
mov
xlat
add
mov
or
xchg
lock
jb
xchg
xor
mov
aad
sbb
orl
pop
fcmovu
jnp
and
test
inc
hlt
imul
or
inc
ret
stos
dec
in
addr16
push
popa
insb
inc
xchg
sub
or
notb
cli
jge
repnz
dec
or
dec
sbb
repz
mov
dec
sbbb
in
xchg
jmp
sub
push
fcoml
lods
xor
scas
dec
rolb
insb
outsb
cmp
mov
xchg
ljmp
jnp
cmpsl
inc
movsb
adc
push
dec
ljmp
sub
mov
push
mov
cmp
mov
mov
adc
arpl
in
mov
mov
into
out
std
gs
fwait
pushf
xor
mov
arpl
sub
cmp
daa
jecxz
add
inc
in
mov
insl
rcrb
push
lock
shll
push
test
pop
loopne
jmp
sbb
mov
cmp
cli
sbbl
push
out
nop
sub
fsubl
push
test
fmuls
jmp
aaa
xlat
fnstsw
popa
lods
int3
jbe
scas
inc
adc
je
jo
aad
cmp
pop
mov
fcoms
jbe
cmpsl
out
mov
jle
outsb
mov
cmpsl
daa
test
repz
adc
mov
push
xor
dec
mov
lods
cld
enter
xor
push
jne
or
push
outsl
push
pop
int
fcmovnb
or
fs
xor
inc
lods
pusha
mull
popf
xor
repnz
dec
xor
js
loopne
mov
bound
inc
xor
call
mov
jecxz
out
cmp
out
jb
fistpll
subl
inc
mov
sbb
in
push
sbbl
cmp
lods
xlat
icebp
mov
jp
mov
dec
mov
das
int
mov
fstps
dec
dec
dec
repz
les
mov
in
or
imul
pop
hlt
xchg
sub
shrb
xchg
movsl
pop
adc
dec
cmpb
repz
pop
repnz
jmp
cmp
outsb
add
ror
mov
roll
xor
loope
and
fstl
cmpsl
rolb
cmp
add
add
rorl
dec
cmp
xor
lea
out
stc
xchg
push
fcoms
ljmp
cmp
out
int
adc
adc
mov
or
lods
mov
sti
push
adc
xchg
in
ror
negb
sti
xor
lahf
mov
xchg
test
fwait
push
xlat
roll
jb
in
xchg
pop
das
aam
pop
cmpsb
aas
push
sarl
push
push
notb
lds
jne
stc
dec
and
mov
mov
push
ljmp
daa
ret
pop
pop
sbb
loopne
mov
outsl
or
pop
outsl
sub
mov
pop
dec
ja
cli
pop
add
pop
or
insl
mov
adc
sbb
sub
outsb
inc
lea
jo
iret
aas
mov
push
adcl
sub
movsb
int
mov
lods
mov
jge
lods
enter
int
jnp
lods
outsl
mov
outsb
ljmp
and
aad
loop
fcos
or
jecxz
les
aaa
mov
fcmovne
mov
leave
ret
xor
das
mov
cmpsb
inc
mov
pop
jae
dec
inc
adc
in
adc
lea
loop
repnz
out
pop
push
inc
mov
out
test
jbe
xchg
sub
scas
fcompl
xor
cmp
ret
xchg
xchg
call
mov
xor
aaa
scas
pop
cmp
pop
mov
mov
sahf
lret
pop
pop
inc
movsl
cmp
sub
mov
mov
inc
ficompl
mov
jno
inc
lcall
jmp
mov
and
and
dec
cmpsl
mov
pusha
mov
into
cmp
stos
inc
std
xor
jbe
sbb
inc
aad
or
jns
jbe,pt
and
add
and
out
jge
and
lcall
bound
popf
mov
sbb
shrl
gs
fwait
jo
mov
jbe
loopne
inc
and
cmp
mov
faddl
pop
lret
inc
mov
xchg
popa
ja
cmp
cld
ret
sub
push
inc
adc
pop
mov
lret
mov
push
push
adc
scas
jb
push
rclb
cmpsl
ret
xor
mov
daa
pop
pop
aad
subl
mov
fcmovbe
mov
shll
lods
fdivp
js
lret
decb
and
sahf
jg
fisttps
ficomps
mov
int3
mov
lcall
mov
in
inc
sub
adc
repz
stos
clc
add
mov
pop
lods
test
shll
arpl
repz
pop
in
push
inc
cwtl
and
outsb
flds
sti
push
inc
cmc
adc
fcomip
mov
dec
inc
lret
mov
xchg
scas
mov
pop
jne
shll
fsubp
adc
sub
mov
lret
je
dec
sbb
and
cmp
lock
xchg
inc
orb
in
fwait
add
popa
jno
rcl
cwtl
cmp
mov
pop
sti
jnp
filds
cmpb
mov
into
imul
es
add
jge
into
mov
pop
scas
call
sub
dec
xchg
xor
pop
cmpsl
mov
pop
fldenv
fld
sub
jb
cwtl
mov
test
sub
fwait
cmp
xor
repnz
es
mov
inc
aam
pop
ja
adc
std
push
pop
ror
loopne
imul
jae
cmpsb
mov
or
je
fisubs
fdivl
ret
push
and
aas
lods
lds
mov
test
fnstsw
lods
jb
xchg
or
lahf
fdivp
lea
inc
add
mov
adc
lahf
pop
mov
xlat
bound
sbb
or
es
dec
dec
jne
mov
je
cmp
push
imul
cltd
loope
sahf
or
popa
test
lds
jl
out
ds
out
or
aaa
fdivl
jae
andl
mov
fiadds
xchg
jo
and
jnp
cs
cmp
pop
enter
hlt
jmp
mov
cmpsb
fs
stos
fnstcw
shrb
jb
enter
jnp
adc
xchg
ret
hlt
mov
out
mov
fmull
mov
mov
push
addr16
mov
mov
outsb
add
hlt
mov
idivb
popa
jp
push
mov
repnz
aam
arpl
lea
jae
sbb
daa
inc
adc
pushf
inc
adc
jns
jecxz
push
push
test
mov
xchg
push
push
lods
sbb
fdiv
dec
pop
aam
cmp
scas
inc
xor
mov
mov
mov
mov
and
stos
nop
loopne
adc
jb
rcrb
stc
dec
scas
add
pop
or
xlat
jecxz
out
aas
cwtl
shlb
testb
out
pop
sti
insl
dec
ret
icebp
and
punpcklwd
aad
mov
jecxz
adc
xchg
xor
pop
jmp
mov
inc
dec
bound
sbb
shlb
and
dec
xchg
lds
mov
daa
fsts
outsl
inc
cld
sahf
push
ljmp
jg
mov
ret
or
cmp
shl
cli
pop
or
mov
pop
pop
or
leave
mov
jb
mov
clc
or
jbe
sub
cmp
dec
dec
or
das
cmp
shl
inc
push
and
sbb
insl
xor
mulb
or
mov
adc
inc
inc
insl
push
and
jae
clflush
mov
adcl
sub
adc
push
mov
mov
mov
add
inc
lret
pushf
cltd
test
stos
popa
xor
sbb
hlt
xchg
lds
mov
pop
inc
std
test
sub
imul
call
mov
clc
aas
adc
jo
imul
push
or
es
jnp
or
mov
xor
in
pusha
fsubrp
pop
or
add
call
push
mov
and
lret
inc
xor
jmp
out
push
popa
icebp
mov
aam
adc
mov
or
lcall
aas
xchg
leave
fcomps
testb
mov
xor
inc
int3
test
mov
and
imul
inc
arpl
xor
jle
cmp
mov
mov
add
adc
push
idivb
mov
xchg
shrb
lcall
mov
inc
xor
std
and
push
pusha
sti
shl
je
jno
push
outsb
aas
inc
jg
inc
mov
ss
int
push
aas
insl
xchg
fcmovnb
sub
cmp
inc
jecxz
outsl
daa
cmp
outsb
sbb
ficomps
sub
push
cltd
addr16
push
push
xchg
xchg
pop
mov
in
sub
inc
mov
push
lea
cmp
mov
and
subb
or
pop
dec
xchg
sub
lock
in
ss
rolb
leave
mov
adc
pusha
out
outsb
fimull
jge
sbb
decb
notb
sahf
cmpsl
daa
xchg
stc
inc
sub
insb
xor
push
ljmp
dec
inc
fcompl
pop
xchg
sbb
jne
adc
xchg
ficompl
addr16
loop
push
and
test
imulb
inc
or
push
clc
adc
dec
ja
jle
cmpsl
push
push
or
mov
pop
cmc
popa
mov
inc
movb
mov
cmp
stos
jo
mov
mov
sbb
sti
adc
sub
fs
inc
sub
mov
call
outsl
mov
aaa
pop
insl
ss
dec
push
xchg
out
pop
sub
jb
pop
sub
add
cmp
test
mov
scas
mov
arpl
fisttpll
push
fsubrs
popa
jns
lcall
sti
data16
sbb
es
mov
jle
mov
loope
repnz
cmc
pop
imul
in
outsl
mov
push
pusha
sub
xor
ja
std
cltd
je
jb
or
mov
xchg
fldl
xlat
outsb
in
pop
repnz
insb
xchg
add
leave
and
adc
stos
stc
xchg
out
ficoml
scas
shll
rolb
bnd
pop
int3
add
push
sub
mov
or
cmp
mov
loopne
fstl
frstor
shrl
sbb
jge
shll
push
sbb
jne
shrl
or
mov
sub
sti
inc
loope
jne
push
inc
outsb
push
aad
push
out
icebp
xchg
mov
les
call
leave
fs
adc
leave
pusha
lock
outsl
jnp
fidivs
shld
lods
lahf
xor
inc
jbe
cwtl
sub
mov
adc
aad
mov
insb
test
loopne
fisttps
inc
xchg
jp
mov
adc
insl
mov
lahf
in
enter
or
mov
mov
in
sub
xchg
sub
sub
inc
sbb
adc
or
movsb
inc
sbb
push
lds
ss
add
cwtl
fdivrs
fidivrs
mov
adc
lods
xor
pop
adc
inc
lods
dec
xchg
adc
inc
jae
jmp
insl
dec
andnps
les
leave
cltd
pop
push
clc
jae
sub
into
mov
out
cld
loop
arpl
xor
insb
jno
push
call
andl
mov
xor
xchg
inc
pop
mov
mov
pushf
outsb
or
cmpsl
or
stos
ds
xor
adc
xor
adc
iret
ja
jmp
pushf
outsl
or
mov
inc
scas
mov
int
cmp
mov
jge
push
mov
ljmp
jb
fsubrp
add
orl
loope
sahf
mov
push
push
scas
mov
cltd
cmp
sbb
cmp
xlat
das
rclb
add
xor
mov
pusha
in
mov
aaa
stc
push
sub
test
inc
fnstsw
fs
enter
fcompl
in
dec
test
pop
cmpsl
push
inc
test
out
cmp
xchg
jbe
popa
push
outsl
pushf
xor
daa
and
out
mov
scas
jg
add
xchg
in
jecxz
loopne
mov
fidivrs
aaa
into
clc
pop
push
out
test
insb
xlat
and
fdivr
repz
push
ss
mov
stos
add
jae
pop
sbb
mov
cmpsl
push
outsb
loope
dec
out
push
std
sub
mov
fisubs
xchg
xchg
or
and
xlat
xchg
lcall
imul
mov
fnstcw
pop
xor
adc
js
repz
ficoml
xor
fs
inc
loop
cwtl
push
jmp
pop
push
push
xchg
das
icebp
in
test
divl
mov
imul
mov
mov
xchg
jnp
fnstenv
add
push
lret
jne
mov
lods
sarb
xchg
loop
adc
ljmp
out
push
push
cmp
adc
inc
ret
sub
xlat
icebp
clc
pop
pop
cmp
cmp
fildll
mov
sbb
scas
clc
push
out
jmp
outsl
sub
imul
cmc
adc
in
inc
adc
std
insl
xchg
xchg
and
jg
cmp
sbb
repz
push
out
lret
inc
dec
lcall
adc
and
cmc
lcall
gs
loopne
aam
and
xor
loope
repnz
pop
dec
mov
aaa
imul
rcrb
or
adc
ds
mov
mov
inc
in
dec
fistpl
inc
fisubrs
shll
pusha
sbb
dec
mov
push
jnp
xchg
sbb
mov
sbb
xchg
and
je
mov
pushf
xor
mov
xchg
add
fbld
cli
adc
xor
mov
xchg
out
korw
dec
cli
add
repz
sub
jp
outsl
test
stos
inc
ret
faddp
mov
in
int
mov
xchg
jmp
es
xor
cmp
iret
lcall
out
jae
sub
sbb
xor
sub
out
xor
or
enter
adc
xchg
les
ret
mov
add
popf
imul
sbb
ss
jmp
sub
adc
or
ss
scas
mov
cmp
xor
mov
sahf
jns
lods
push
lds
in
push
subl
inc
xchg
sub
leave
mov
sub
and
push
mov
xor
fsub
mov
hlt
loope
js
ds
push
aas
test
out
push
cmpsb
insl
mov
cmp
shll
mov
test
subl
idivb
into
pop
paddsb
adcl
or
movsb
popf
fisubrl
daa
mov
dec
jns
jg
mov
jo
xor
cmp
fs
push
js
bound
cli
mov
mov
inc
imul
ret
in
and
pop
cmpsb
faddl
xchg
rorb
xchg
adc
js
popl
test
leave
or
jl
sti
icebp
and
inc
scas
lret
mov
movsl
mov
push
out
icebp
mov
movsl
xor
xchg
adc
push
lcall
jne
imul
movsb
std
lds
inc
adc
adc
add
pop
xlat
mov
leave
pop
adc
push
lahf
popa
mov
xchg
iret
mov
pop
mov
add
pop
js
cmp
mov
xchg
ret
mov
xlat
mov
mov
and
jb
jmp
and
dec
out
test
in
mov
sbb
cltd
pop
fdivrl
addl
fdivl
cmc
mov
mov
je
and
inc
jo
popa
pushf
pop
add
mov
xor
cmp
loop
call
inc
in
lahf
addb
xor
jmp
jmp
push
push
push
xor
and
xor
inc
test
pop
int
push
inc
int3
fldcw
cld
dec
pop
jno
push
imulb
pop
pop
inc
daa
outsl
into
repnz
adc
mov
pop
mov
test
jg
dec
xlat
outsb
mov
shrl
cmc
mov
dec
cmp
cmpsb
sub
aas
pop
hlt
xchg
pop
inc
cmp
jl
ficoms
cmp
fwait
cmc
jle
lock
and
adc
adc
pop
mov
dec
lret
cmpsl
lods
nop
test
loope
jnp
das
inc
rcrb
jb
and
mov
insl
inc
aas
rclb
jmp
dec
mov
and
int3
arpl
popa
rcrl
mov
mov
mov
mov
push
pop
lock
cmp
mov
cmp
push
popf
sbb
xchg
add
jb
mov
lds
int
lcall
cmp
pop
mov
xchg
aaa
decl
hlt
sub
dec
push
gs
cmp
push
cmpl
jg
les
mov
mov
jg
cmp
sbb
pop
negl
in
notl
pop
rol
pop
test
mov
pop
pushf
push
mov
mov
bound
mov
mull
subb
cmpsb
or
je
sub
repnz
xchg
pop
push
mov
fimuls
roll
out
xchg
mov
inc
jp
scas
mov
add
inc
mov
in
cmc
popf
loop
fstpl
cwtl
jnp
fidivrl
insb
js
loop
out
lcall
mov
mov
call
dec
mov
stc
pop
divb
or
test
jg
xor
out
push
fdivs
push
cltd
dec
in
jns
xchg
mov
das
mov
pushf
or
shlb
xchg
ret
imul
dec
adc
mov
push
fistl
mov
ljmp
repnz
and
rcr
das
inc
andb
xchg
lcall
hlt
leave
push
ss
push
add
lcall
pop
jo
sub
add
lahf
sbb
loope
push
xchg
inc
xchg
pop
test
pop
fdivs
push
jne
adc
or
xor
ljmp
addr16
test
int3
lret
push
or
mov
pop
loopne
outsb
inc
enter
inc
jmp
icebp
movsb
mov
xchg
test
inc
xchg
dec
cmp
or
pop
sub
push
push
cmpsb
xor
or
iret
push
les
std
test
data16
xchg
jp
arpl
lret
stc
dec
fbstp
jmp
jne
aad
aad
repnz
shll
jo
dec
cmpsb
sbb
push
negl
pushw
adc
or
sti
mov
pop
fldl
hlt
sbb
arpl
sub
inc
mov
jbe
addb
jnp
dec
fildll
sub
out
popf
xor
insl
lds
adc
insb
fbstp
in
inc
push
sahf
adc
ficoms
out
mov
fsubs
cli
in
pop
out
pushl
scas
sbb
ds
bound
and
inc
cmpsl
test
cld
ja
push
mov
sub
test
inc
movsl
rcrl
out
mov
push
mov
or
pop
or
dec
cmp
mov
cld
fimuls
push
mov
mov
jmp
dec
push
fistps
int3
xor
xor
sbb
cwtl
andl
xchg
dec
ja
or
mov
push
movsl
stos
jnp
inc
pop
nop
lods
mov
sub
fsubrs
lcall
repz
or
sbb
lods
pop
jecxz
adc
clc
jg
sub
insl
subl
xchg
addr16
push
mov
inc
inc
lods
push
jns
inc
pop
dec
lcall
lock
push
sbb
ja
pusha
stos
pop
repz
es
sbb
sbb
pop
sub
lret
mov
push
mov
dec
je
insb
js
popf
lods
xchg
fsubrl
popa
xor
fsubl
jge
mov
loopne
xlat
or
jp
insb
ja
lods
adc
xor
lods
outsl
jns
sub
popf
dec
ja
jmp
fdivs
cltd
loopne
mov
push
push
xor
popa
mov
ret
ljmp
add
pop
out
mov
icebp
movsb
inc
in
sub
mov
jae
adc
mov
adc
ja
xor
adc
inc
mov
adc
jecxz
cli
xchg
aam
mov
inc
jb
inc
dec
fisubs
leave
test
xchg
out
mov
sub
aas
xchg
mov
cltd
jecxz
add
adc
push
add
popa
jne
cltd
das
imul
movsb
mov
adc
cmp
in
xchg
jg
dec
sti
daa
mov
fstpt
into
es
in
ljmp
push
repz
sbb
xchg
insl
xor
mov
movsl
pop
lods
inc
daa
outsl
pusha
aaa
mov
lea
sahf
rclb
adc
pop
mov
xor
cmp
jb
fcomps
mov
mov
lock
or
sub
inc
fisubs
push
jmp
cld
psubsb
push
ss
es
cli
push
bound
xchg
jmp
in
xor
cltd
or
and
in
sbb
lea
pop
ljmp
fisttpll
stos
addr16
cmpsl
lret
mov
xor
shl
mov
loope
sub
packsswb
dec
dec
dec
stc
mov
inc
loopne
mov
int
jge
je
push
outsb
rol
loop
mov
loope
jle
divb
mov
cmpsl
dec
out
dec
xlat
cmp
or
cmpsl
sbb
cmp
or
aam
insb
daa
push
inc
ficomps
or
testb
jmp
lods
pushf
pushf
pop
sbb
cwtl
xor
push
lods
ljmp
pushf
push
xchg
int
mov
and
int
hlt
push
xor
imul
test
psubw
mov
jno
jb
xor
test
nop
or
ret
mov
push
clc
bound
sbb
lret
jb
or
and
push
cmpsl
insb
pop
cmp
lret
or
arpl
sub
fisubl
adc
or
mov
test
lods
pop
jecxz
or
sub
rclb
jl
inc
repnz
cwtl
sub
xchg
mov
dec
sbb
inc
cs
or
pushf
mov
hlt
jge
adc
ss
imul
int
loope
sbb
in
movsb
cmp
inc
push
xor
divl
jg
aad
repnz
fstpt
pop
aas
push
xchg
pop
popf
mov
ret
xchg
jge
rclb
and
popa
sbbl
gs
iret
xchg
rclb
rclb
xlat
cmp
fdivrl
cmp
ss
mov
jl
sbb
xor
loop
adc
push
dec
out
popa
outsb
add
call
icebp
loope
inc
or
sub
jno
or
pop
cmp
aaa
mov
mov
push
add
loop
pop
out
xlat
sbb
jle
push
mov
out
lea
sub
outsb
sub
lret
jne
cltd
in
or
insb
mov
adc
add
jge
mov
les
push
repz
test
jae
xchg
xchg
outsb
push
es
in
cmpsl
jns
icebp
stos
out
inc
fnsave
aam
shlb
xchg
xchg
cltd
pop
clc
cs
push
push
mov
dec
popa
inc
fldl
dec
divb
jbe
loopne
add
sbb
pop
push
bound
xchg
jae
movsb
adc
mov
and
sbb
jle
dec
cld
or
es
mov
repz
cmp
les
daa
mov
ficompl
leave
push
push
cld
push
mov
daa
negl
inc
sbb
jmp
dec
sbb
jl
adc
cltd
mov
lahf
and
sti
push
inc
and
sti
clc
or
repnz
pop
fs
adc
iret
mov
je
xchg
repz
ljmp
lods
fldl
push
into
push
movsl
mov
mov
scas
push
cld
es
mov
insb
dec
fiadds
cmp
or
add
aam
cmp
dec
xchg
inc
adc
lret
les
xchg
push
sahf
filds
int3
fbstp
fldt
and
lret
pusha
pop
push
cmpsl
loopne
sti
roll
or
dec
xor
and
dec
loop
cmp
add
mov
push
pop
lea
xchg
mov
out
aaa
shl
xchg
adc
mov
xor
dec
inc
fldl
add
rcll
pop
loope
cwtl
push
addb
push
int3
lret
or
andl
mov
add
ret
cwtl
daa
jo
sbb
pop
ljmp
jno
add
inc
pop
iret
pop
add
cltd
pusha
test
out
inc
dec
lock
ret
pop
cmp
fistpl
fsubl
push
stc
popf
into
outsl
cmp
mov
clc
xor
rep
inc
test
sti
movsb
lcall
fmuls
and
mov
nop
cmp
imul
push
jns
pop
mov
lret
sbb
arpl
and
stos
jle
stos
sti
mov
and
mov
mov
push
icebp
mov
mov
push
xor
iret
sahf
push
xchg
add
or
int3
sub
jo
push
push
pop
ja
stos
mov
mov
sub
dec
sbb
out
hlt
lcall
jbe
jmp
mov
dec
adc
cmpsb
insl
or
mov
ds
loopne
pop
loop
mov
loop,pt
dec
data16
test
add
sbb
dec
xchg
add
sub
mov
clc
push
adc
into
movsl
addr16
addr16
psllq
push
dec
cmp
repnz
jae
pop
xor
mov
ret
cld
in
xor
fnstcw
inc
in
and
inc
movsb
add
sbbb
push
dec
movsb
add
fbstp
cmp
dec
out
addr16
add
mov
test
adc
xor
js
dec
fidivl
int
jno
gs
adc
sti
andb
inc
ss
test
xchg
fistps
pushf
mov
in
pop
pop
cmp
mov
and
xchg
adc
repnz
inc
mov
or
jle
test
or
lcall
inc
scas
out
xor
jb
cltd
cmp
push
add
xchg
mov
inc
addr16
xchg
jb
push
dec
cmc
mov
testb
stc
shl
push
inc
popf
pop
icebp
inc
xor
or
add
flds
cmpsb
imul
out
adc
xchg
mov
loope
inc
push
jno
inc
mov
dec
push
jecxz
or
and
movsb
out
test
test
dec
push
cmpsb
test
enter
sbb
ret
push
es
cmpl
or
out
lods
jg
adc
cmp
stos
add
mov
in
cld
dec
or
inc
into
lret
imul
pop
push
xchg
gs
test
xor
pop
in
inc
scas
leave
push
lods
aam
xchg
mov
add
inc
in
popf
xor
jb
je
jecxz
cmp
test
shll
pop
pop
push
es
mov
out
inc
in
cwtl
pop
in
jns
stos
dec
adc
adcb
test
jne
mov
mov
dec
ja
mov
xchg
mov
cmp
jge
stos
xchg
out
pusha
lcall
inc
data16
gs
dec
xchg
je
adc
mov
enter
or
jmp
sbb
mov
add
es
das
or
xchg
sub
enter
daa
rorl
jp
mov
stos
shrb
movl
lods
lods
es
push
pop
imul
and
push
add
add
in
lds
mov
xchg
and
out
push
shlb
loopne
stc
hlt
push
sub
addr16
in
pusha
aas
mov
push
ds
cmp
xchg
lods
or
pop
hlt
mov
clc
adc
fidivrs
cmp
mov
pusha
mov
cmp
aas
xlat
aad
ud2
xor
ja
out
cs
push
pop
mov
je
sbb
in
mov
mov
cmp
sbb
jl
and
lret
pop
leave
mov
mov
sahf
jne
pushf
pop
stos
sti
jp
enter
shl
adc
inc
ficoms
std
int3
das
mov
push
scas
pop
fucomi
jo
xchg
sub
mov
xchg
sbb
inc
mov
jno
mov
push
fstl
sbb
mov
leave
fs
clc
inc
inc
movsl
push
jmp
mov
cmp
aaa
pop
xchg
test
hlt
cmp
jbe
jge
shrl
jae
dec
dec
jne
les
dec
mov
cmp
push
mov
fucomip
mov
add
cmp
xor
nop
push
adc
pop
jmp
inc
inc
pop
mov
scas
test
push
mov
xlat
and
mulb
in
sbb
adc
out
cmp
push
daa
xor
xchg
push
fiaddl
jne
and
inc
out
adc
data16
xchg
iret
les
insl
push
clc
or
cmp
xchg
add
jecxz
push
cli
daa
jo
stos
in
iret
push
scas
cmp
sub
les
aas
std
scas
inc
das
push
imul
push
cmp
js
cmp
inc
and
pusha
dec
aad
dec
subl
out
jnp
xchg
ret
pop
adc
insl
inc
aas
stos
mov
sbb
sub
pop
and
outsl
push
aas
push
movsb
and
add
inc
push
xchg
jne
xor
jb
and
lcall
jne
push
addr16
cmp
add
mov
pop
cmp
mov
xchg
sbb
imul
xchg
lahf
sbb
adc
pop
insb
cwtl
mov
jns
push
add
inc
pushf
dec
stos
xchg
fisttpll
or
mov
xchg
mov
popf
push
pushf
int
lahf
xor
pop
scas
mov
imul
lds
into
popa
sub
call
in
dec
adc
inc
sub
jmp
jecxz
push
jo
stc
ret
fs
imul
dec
loopne
shrl
inc
mov
sub
out
sub
jbe
jbe
xchg
stos
push
popf
mov
shl
loope
test
xor
and
inc
fs
jge
push
call
mov
push
in
xchg
iret
nop
add
sbb
loopne
es
jge
pop
mov
or
adc
xchg
aas
xchg
add
dec
out
sub
inc
pop
testl
sti
mul
sub
subb
not
clc
mov
daa
ds
lock
sub
mov
and
pop
or
fxch
fs
dec
pop
lahf
mov
fwait
lods
cwtl
lret
test
sti
and
aad
inc
sbbb
push
xor
fsubr
adc
das
dec
ret
outsl
sub
push
cmc
mov
out
call
cmpsb
inc
sub
fsubl
adc
sub
out
mov
mov
and
push
xchg
cmp
cli
fsubrs
and
pop
std
or
push
pop
out
or
jne
sbb
bound
pop
jo
js
or
inc
shrl
xor
ret
repz
cli
mov
inc
sbb
sub
lret
enter
push
xchg
insl
push
sbb
or
cs
fisttps
aas
fwait
shlb
xor
sbb
pop
fistl
imul
jmp
push
jno
dec
jns
jg
clc
stos
std
mov
xor
push
or
fidivs
andl
lahf
aaa
aam
inc
cld
inc
lret
pop
cmp
dec
loopne
out
les
adc
popf
test
in
test
out
inc
rcrb
xor
test
pop
call
mov
adc
mov
imul
jle
or
rcll
jne
add
lds
ror
in
fldt
or
lock
sbb
dec
mov
loope
inc
das
int3
push
add
dec
test
fbstp
adc
iret
sbbb
adc
aad
lock
scas
cmp
dec
sub
and
pushf
xchg
sbb
and
fcomip
rorl
pop
or
and
sbb
sbb
adc
fmulp
cmpl
lods
stos
loopne
rorl
das
pop
fimuls
xchg
and
mov
stc
xchg
fwait
test
mov
imul
fistpll
addl
mov
data16
jmp
or
pop
addr16
jmp
int3
lcall
xor
lock
sub
lahf
sub
dec
ja
jns
in
xorl
jnp
movsl
push
out
add
cs
fimull
fsubr
xchg
inc
repz
jnp
sub
or
cmpsb
jg
add
ljmp
test
jne
shrb
sti
xchg
or
das
dec
mov
push
jnp
pop
mov
fwait
cltd
lret
ds
loop
jo
popa
shlb
jns
bound
or
aad
xor
or
mov
pop
jl
cmp
xlat
decb
push
in
dec
test
sar
cmp
clc
sbb
rorl
test
or
test
lret
pop
jne
cltd
and
ret
ret
imul
pop
jmp
jnp
subb
sub
jns
fwait
ljmp
xchg
scas
adc
int3
dec
movsl
jb
in
xchg
out
sbb
ds
hlt
dec
stos
repnz
call
out
loopne
lret
stos
outsl
insb
sbb
test
test
out
test
lods
stos
les
dec
in
repnz
mov
push
repnz
add
aaa
mov
mov
mov
dec
test
mov
mov
adc
ss
ljmp
popf
dec
mov
dec
push
sub
aad
adc
mov
dec
in
lods
je
mov
pop
xor
aad
pushf
push
in
aaa
jp
mov
add
mov
aam
lahf
push
lods
stos
add
repnz
and
xlat
add
std
cs
insb
loope
sahf
insl
stos
mov
fildl
adcl
nop
stc
and
xor
xchg
cmp
hlt
fbld
pop
xor
ja
test
jp
adc
pop
jg
push
cmpsl
mov
jbe
sub
push
pop
cmpb
int
icebp
ja
cwtl
sti
lea
push
shlb
sahf
call
jmp
adcl
fs
fs
add
jns
dec
ljmp
movsb
xchg
pop
stos
mov
mov
jge
insl
xchg
mov
int
cmp
cmp
sbb
jle
ficoms
and
mov
call
imul
mov
jge
mov
out
dec
cmp
out
pop
mov
dec
pop
dec
jecxz
int
xchg
sti
clc
xor
push
jecxz
aaa
ret
jno
mov
push
fnstenv
lods
jmp
aam
movsl
mov
dec
mov
inc
bound
xchg
imul
push
fidivrs
and
iret
sbb
cs
fcomps
mov
xor
mov
ficomps
shlb
dec
and
ret
pusha
jae
and
add
adc
adc
out
cmp
lods
jns
pop
add
nop
mov
pop
push
or
pop
ja
ret
mov
jmp
mov
rorb
js
das
test
cmc
or
cmc
xchg
adc
aam
xchg
int3
repnz
cmovae
xor
rol
push
fdivp
mov
xor
insb
gs
std
enter
mov
mov
flds
paddb
movsb
xor
mov
aam
pop
jle
dec
das
jl
out
lret
out
repnz
pop
inc
cs
jne
inc
pop
scas
sti
js
andb
out
cmpsl
lock
stc
and
xchg
mov
inc
inc
notb
out
sbb
cmp
popa
mov
insb
or
jle
ret
pusha
xor
loopne
in
push
jo
loop
xor
rolb
in
cmp
jmp
mov
or
xchg
mov
lods
sub
mov
gs
addr16
jp
cmp
rcrl
arpl
push
adc
mov
daa
test
mov
and
repz
mov
call
sahf
xchg
mov
pop
testl
cmp
mov
aad
ret
jp
pop
out
cmp
xor
xor
sub
mov
repnz
cltd
test
call
jns
mov
lock
lcall
lahf
mov
test
xor
pop
in
jmp
pop
stos
pop
inc
mov
ja
pop
mov
shl
push
data16
xor
popl
out
adc
sub
out
xchg
inc
repnz
jns
ret
ds
push
lds
fstpl
lock
out
cwtl
ljmp
pushf
outsl
pop
out
inc
stc
lahf
shrb
mov
bound
sub
mov
adc
imul
adc
ret
movsb
mov
pop
shr
mov
in
mov
aas
or
mov
adc
cli
repz
mov
xor
push
dec
pop
push
add
push
push
ss
push
xchg
stos
cwtl
bound
aaa
dec
sbb
jb
push
mov
jg
insl
lea
std
dec
jne
jle
sub
movq
mov
shlb
mov
popf
adc
fcomps
lret
xchg
fs
mov
jno
mov
pop
mov
xor
lret
in
sub
add
xchg
sub
jno
adc
fs
push
xchg
jbe
mov
shll
aam
jg
mov
push
or
mov
arpl
popf
dec
mov
and
jne
mov
push
dec
xor
mov
mov
or
mov
lret
mov
sub
sbb
mov
xchg
mov
and
cmp
mov
jg
das
fcmovnb
cmc
push
popf
fstl
fcmovnu
inc
in
pop
hlt
sbb
rorl
mov
mov
fidivrl
test
mov
cmpsb
mov
jo
jns
cltd
jne
adc
cmp
mov
aaa
into
pop
sub
inc
cltd
shrl
xchg
data16
aas
sbb
or
jmp
test
jecxz
aaa
push
cmpsl
mov
pop
pop
mov
mov
jge
es
add
into
data16
and
in
jp
pop
mov
inc
pop
divps
xor
sub
pop
pop
in
and
push
mov
mov
or
mov
sub
loopne
jb
call
pop
mov
or
notb
stos
enter
mov
stc
addr16
repnz
xchg
pop
cmp
mov
cwtl
adc
lcall
or
test
pop
jp
daa
sbb
xor
cmp
in
inc
inc
int3
out
stc
mulb
inc
cmp
cmp
jmp
lret
sbb
int3
daa
enter
leave
cld
mov
in
xchg
mov
pop
inc
rcrl
mov
std
insl
mov
dec
add
xchg
in
stos
inc
xor
ljmp
sahf
fdivl
adc
mov
jge
mov
test
les
stc
repnz
add
xchg
push
pop
mov
adc
push
mov
rorb
mov
fnsave
or
mov
es
mov
aam
gs
pop
aaa
add
es
dec
mov
in
mov
ljmp
sub
pop
cmc
sbb
je
push
and
sub
fnsave
sub
sub
jmp
popa
jns
or
in
shlb
sbbl
cmp
mov
out
std
cmpsl
mov
push
rorb
clc
push
mov
sbb
push
push
scas
push
add
pop
hlt
push
fs
inc
popf
ret
out
adc
xchg
test
movsl
repnz
out
test
add
jne
sbb
aas
xchg
jle
inc
jle
mov
ja
pop
pop
hlt
movsl
vhaddps
inc
fs
xchg
addl
pushf
mov
xor
mov
shl
dec
pop
mov
ret
xor
scas
sub
and
or
jle
jle
data16
push
pop
cmpsb
cmp
jo
les
pushf
sbb
mov
push
mov
lret
daa
push
out
add
int
push
pop
jae
cwtl
sub
int
ds
scas
fidivs
jns
xor
les
loop
xchg
jo
lds
add
rorb
cld
insl
sbb
hlt
lods
cmp
ss
fsts
or
sub
pop
sbb
adc
bnd
mov
std
dec
mov
repz
stos
push
cmp
lds
cmp
inc
orb
sbb
leave
jo
stos
lds
jmp
arpl
mov
fs
and
loop
setnp
mov
lods
mov
inc
inc
popa
inc
inc
rcll
in
push
jns
dec
and
shlb
cmpsb
cmp
lret
std
xor
sub
adc
sub
addr16
lock
inc
dec
cmpsb
lods
sub
jmp
xor
es
and
clc
imul
push
mov
cmc
lea
xor
cmp
cmp
test
dec
icebp
cs
ja
push
sub
cltd
jmp
xor
lods
jmp
pop
loopne
inc
adc
xchg
cmpsl
mov
fmull
mov
xor
cmp
dec
jl
mov
imul
sarb
sbb
adc
sub
popf
adc
fbld
jno
jge
test
sti
clc
test
xchg
ss
dec
testb
inc
iret
data16
sub
push
loope
outsb
mov
inc
or
mov
insl
add
push
hlt
cmp
mov
je
dec
or
mov
loopne
scas
pop
div
iret
sbb
fists
sub
cmp
imul
es
push
pop
mov
push
popf
rcrl
cmpsl
loop
sbb
orl
into
sarl
lret
add
push
in
leave
loop
insb
mov
or
ja
push
mov
inc
shrl
nop
lods
dec
sub
lock
cltd
inc
fucom
jle
andb
sub
js
push
xor
pop
bound
push
lock
dec
lods
mov
jo
lret
and
fldt
xor
mov
mov
jb
jns
repz
mov
sbb
xchg
dec
cmp
mov
cli
pop
xor
mov
push
cmpsl
inc
xchg
jns
cs
ja
cmp
test
pushf
loopne
loopne
mov
mov
sbbb
ljmp
les
loop
push
dec
adc
xchg
lods
push
and
nop
cmpsl
addr16
jae
inc
std
in
out
gs
jge
stos
xchg
pop
push
das
inc
lret
or
sarb
insb
mov
fs
mov
xor
insb
je
xchg
push
popa
dec
pop
xchg
jb
cmp
pop
lea
fidivrs
cmp
clc
inc
clc
int3
cli
fwait
sti
push
inc
stos
cmp
mov
pop
fildl
and
inc
pop
cmp
test
js
or
pop
mov
cmc
addr16
xchg
dec
xchg
lret
push
mov
loope
dec
cmpsb
cmp
pop
dec
shrb
push
sub
imul
xchg
aam
xchg
imul
mov
jo
imul
push
shrb
dec
pop
loopne
push
data16
stos
xor
lds
xor
hlt
push
xrelease
cs
daa
push
clc
jae
sub
pop
mov
sbb
mov
loopne
outsl
mov
add
out
outsl
ret
stos
sub
jbe
pop
out
and
xlat
pop
cmpsb
arpl
jg
test
jbe
cwtl
push
cwtl
push
je
cs
mov
cs
pusha
push
rcll
lret
mov
jecxz
loop
cld
mov
pop
push
mov
dec
xchg
xchg
lods
xchg
repz
fs
pop
repz
sub
fdivr
jp
fdiv
add
push
mov
pop
jecxz
cltd
sar
cmpsb
in
mov
incl
xchg
test
mov
int3
clc
sar
xor
les
cmp
pop
sub
scas
bound
fdivl
sti
pop
loop
outsb
fxch
loopne
lock
sbb
aad
add
jae
lods
add
mov
scas
dec
cmp
mov
and
cmp
gs
dec
icebp
xchg
or
test
aam
sub
xchg
jmp
push
mov
mov
notb
add
lock
enter
jae
sub
outsl
imul
mov
aas
push
clc
jl
nop
and
cli
or
sarb
loope
cmpsb
lock
pop
jp
mov
out
leave
mov
pop
adcl
out
xchg
pop
int3
rorb
in
pop
js
dec
push
imul
popf
jle
stos
lods
addb
and
dec
arpl
or
mov
sub
sub
jb
sub
insb
arpl
sbb
lods
inc
xchg
add
and
mov
sets
les
adc
xor
and
ljmp
mov
dec
xchg
add
and
std
add
mov
sbb
icebp
sbb
rcr
xchg
adc
rolb
loop
imul
cmpl
push
pusha
loop
pop
ja
pop
inc
lahf
pop
lods
and
cmc
lods
lcall
popa
mov
xchg
and
adcl
rcll
addb
or
out
mov
cmp
lret
test
sbb
xchg
insb
dec
sbb
xchg
js
je
lods
sbb
push
aaa
hlt
ret
mov
mov
inc
push
jnp
imul
adc
dec
jl
sbb
shll
cmp
jb
test
sbb
jnp
push
out
xchg
ds
pop
and
adc
xor
mov
negb
inc
je
add
sub
mov
xor
das
jmp
int
pushf
arpl
mov
mov
in
push
out
or
outsb
jp
sub
daa
push
packssdw
jb
push
push
pop
cmp
sbb
xchg
insb
negb
hlt
ror
push
fcoml
add
pop
scas
push
aam
xorl
outsb
inc
notb
out
jle
pop
daa
cmp
test
xchg
cs
pop
xchg
mov
int
enter
push
hlt
cmp
call
lea
and
popa
scas
movsl
in
push
mov
mov
andb
sti
mov
xchg
sub
xchg
imul
or
sbb
movsl
negl
mov
sti
fldt
push
and
push
push
push
add
iret
ss
push
push
jle
inc
fnsave
or
xchg
push
xorb
xchg
insb
mov
fxch
lretw
or
jns
sahf
lock
jecxz
mov
xchg
xor
fists
cld
clc
cmp
jge
or
dec
add
mov
sti
es
add
aam
fisubrl
cmpsb
clc
fstpt
ja
lcall
inc
das
out
lea
pop
sbbl
nop
pavgb
stos
in
fisubl
fistps
lock
icebp
push
jecxz
inc
mov
fsubrs
cli
shrb
outsb
daa
jb
or
or
int
icebp
cmp
sbb
dec
sub
ds
xor
addr16
xchg
test
push
mov
aaa
aaa
xor
push
arpl
pop
xchg
jg
xor
mov
and
xor
pop
jmp
cmp
pusha
aam
mov
pushf
dec
es
xor
fcomps
xchg
insl
shlb
xor
popf
mov
xchg
jns
lea
idivb
les
sbb
and
out
cmpsb
into
movsb
cmp
pop
into
add
sub
push
xchg
push
loopne
shrl
adc
jne
and
arpl
popf
call
cmp
movsl
scas
push
mov
cmpsb
or
cmp
inc
out
sub
sahf
sub
dec
push
pop
inc
pop
jbe
xchg
xchg
mov
sub
push
loope
cmp
jb
pop
mov
jmp
dec
sbb
mov
xor
clc
fistps
das
xchg
ret
jnp
jns
xchg
mov
dec
jo
jp
add
cmp
push
xor
daa
outsb
cld
stos
outsl
pop
push
inc
aad
and
add
inc
ljmp
mov
ja
test
dec
inc
les
fsts
or
adc
fistpll
pop
dec
fdivl
pop
in
mov
loope
insl
xlat
loop
and
mov
sub
pushf
out
mov
mov
rcll
cmp
out
in
jo
pop
adc
xor
aas
jecxz
test
mov
or
jns
sub
cwtl
fidivs
test
outsl
jle
and
jae
test
inc
mov
in
insb
int3
inc
lods
rorb
sub
push
enter
adc
aam
dec
stc
movsb
pop
and
cmp
testl
mov
outsl
ret
jecxz
dec
push
xor
scas
jbe
std
push
fcmovnu
jg
xlat
jo
fstpl
xchg
inc
arpl
and
fildll
jb
clc
repz
ds
and
jb
ret
sbb
ja
imul
lods
movsl
dec
inc
popa
loop
movl
push
in
xor
cmpsb
lods
sbb
mov
lods
push
push
jae
test
iret
sub
push
inc
dec
aas
push
jmp
call
xlat
leave
daa
ror
and
in
insb
getsec
sub
pop
pop
pop
xchg
sbbb
mov
lcall
dec
stos
mov
fists
lret
out
out
xchg
mov
sub
mov
lods
mov
pop
mov
popf
inc
cmp
scas
pushf
xor
jle
fldl
sub
jne
mov
stos
jnp
in
leave
push
fnclex
jne
into
add
aas
cs
push
adc
int3
push
insb
hlt
jle
iret
scas
sub
adc
xchg
pop
sub
push
jae
mov
cld
xchg
push
lods
xchg
jp
mov
jl
sub
pop
mov
inc
add
pushf
xorl
repz
sarl
mov
xchg
xor
fmul
inc
cwtl
lahf
push
mov
and
or
mov
mov
jns
push
pop
xor
stos
sub
push
test
mov
call
xor
mov
dec
xchg
mov
add
inc
outsb
or
sub
inc
lods
nop
jns
enter
pop
outsl
mov
cmpsb
sub
mov
sub
data16
pop
or
rol
rcr
mov
mov
jmp
pop
out
mov
aaa
push
jne
push
je
dec
scas
ja
jo
sbb
mov
lret
sub
outsb
frstor
mov
adc
test
mov
or
mov
push
test
jo
mov
lret
scas
or
cmp
cmp
mov
in
mov
out
mov
or
add
pop
jmp
cmpsb
xchg
sbb
enter
hlt
pop
sbb
push
je
cmc
dec
sub
and
das
mov
pop
sub
sbb
xor
mov
mov
or
loope
jmp
fwait
inc
mov
jmp
and
xchg
add
dec
jnp
mov
sahf
aad
xchg
inc
sub
jno
pop
movsb
lods
inc
push
mov
dec
mov
hlt
and
mov
cmc
add
clc
test
sub
pushf
xor
mov
and
clc
xor
mov
push
or
xorb
adc
ret
jmp
lcall
adc
lock
dec
pop
add
ljmp
rorl
mov
jg
or
dec
fiadds
sbb
out
popa
ret
sbb
test
mov
std
sub
out
push
and
xlat
fisubl
in
sbbb
ss
scas
xor
shll
popa
mov
and
push
outsb
mov
insb
addr16
mulb
repz
mov
ret
jle
jo
push
ss
sbb
sbb
loopne
addr16
arpl
push
rclb
pop
xstore-rng
cmpsl
inc
shlb
sub
in
dec
into
xchg
lret
mov
pop
in
popa
mov
rorb
popf
hlt
mov
jnp
movsb
push
lcallw
ret
int3
cmp
out
xchg
xchg
cmp
lahf
mov
mov
mov
or
jl
fstl
push
jbe
fwait
cmp
enter
pop
jmp
test
mov
les
jge
aam
dec
es
in
sbb
shl
imul
stos
xchg
and
adc
fadds
adc
sbb
or
imul
or
push
mov
mov
mov
fs
add
push
dec
adcb
pop
cmp
jo
add
stc
rcrb
bound
sbb
dec
lds
jmp
dec
pusha
pop
cmpsl
les
aaa
stos
xchg
sub
sbb
xchg
pop
sub
cmpsl
or
jo
xor
mov
push
scas
daa
cmpsb
pop
lret
lret
jno
pop
loope
bound
jmp
rorl
lret
scas
inc
pop
enter
jle
xlat
pop
into
lea
xlat
mov
xchg
out
fbstp
andl
inc
cmp
mov
push
fnstenv
movsl
cmp
out
loope
pop
loope
pop
adc
xchg
int
mov
shlb
dec
ljmp
add
shl
mov
fldenv
xchg
jecxz
idiv
add
mov
insl
xor
ficoms
aas
mov
mov
xor
movsl
hlt
push
mov
fwait
cmpsl
ss
jae
cmpsb
loop
and
fmull
mov
addr16
xchg
test
stos
in
loopne
fcoms
pop
dec
ljmp
xchg
xor
loop
jle
aam
hlt
jmp
lret
inc
dec
inc
mov
mov
adc
int3
jg
mov
sbb
adcb
xchg
add
cmp
scas
add
dec
mov
mov
movsb
test
mov
lds
loop
test
iret
mov
mov
mov
push
jecxz
adc
mov
into
test
mov
mov
inc
inc
in
stos
out
push
clc
cmp
jl
call
inc
bound
addr16
in
sbb
add
jno
loop
xor
sub
cmp
repnz
xchg
rcrl
mov
loopne
enter
aad
out
push
adc
mov
popa
mov
shrb
fstl
or
fadds
lods
xor
sbb
sub
std
lods
mov
scas
and
insl
jge
dec
int3
pop
or
adc
jne
push
dec
cmpsb
adc
stos
test
jns
cli
pop
mov
pop
push
clc
mull
inc
sub
into
fdivl
lea
pop
mov
loop
loopne
fsub
pop
lock
mov
xchg
es
in
add
es
jmp
push
loopne
test
jo
sbb
notb
shrl
sbb
jno
inc
fbld
jbe
imull
sbb
outsl
test
mov
mov
push
mov
lock
or
add
or
iret
andl
or
leave
lret
loopne
pop
cmpsl
cli
add
mov
or
mov
imul
lgs
inc
test
cltd
push
cmpsl
out
xor
jmp
or
in
les
add
cld
gs
jb
stc
lcall
ret
or
sub
mov
adc
scas
mov
mov
ss
leave
cmp
cmp
loope
scas
in
pop
jno
adc
test
push
out
outsl
and
fs
adc
je
sub
push
std
dec
nop
leave
and
pop
mov
xor
add
testb
jmp
mov
cmp
cmp
xlat
dec
dec
pop
aas
sbb
or
mov
pushl
and
lcall
in
stos
insb
out
mov
add
imul
inc
mov
sbb
mov
xlat
scas
out
xchg
jno
pushf
or
push
sub
or
sub
jmp
mov
outsl
jnp
mov
xchg
dec
daa
mov
push
icebp
add
fs
add
bound
or
jo
ret
in
xchg
dec
in
jnp
lret
and
dec
rorl
jbe
adc
mov
add
pusha
xor
loop
jmp
push
xchg
pop
push
js
add
inc
cld
xlat
push
mov
push
imul
and
mov
lret
aad
cs
pop
aad
pop
push
pop
rolb
dec
lds
cs
mov
mov
lds
and
mov
das
sar
and
mov
inc
addr16
ds
adc
jl
shl
test
or
jb
sbb
pop
pop
fsubrl
out
adc
mov
sbb
pop
cltd
xor
hlt
xor
repnz
push
mov
pop
ds
and
das
jnp
jl
stc
lahf
or
scas
addl
sbb
mov
iret
jns
jl
fists
adc
cmpsl
xchg
lock
daa
outsl
push
jp
xor
repz
stos
fs
ret
pop
das
test
lret
inc
pusha
lret
xlat
jge
les
xchg
fisubrs
sub
pop
hlt
sahf
push
or
les
stc
bound
leave
pusha
subl
jle
jno
and
jle
xchg
mov
sbb
daa
jle
pop
shlb
fwait
mov
mov
ds
mov
fstl
mov
dec
and
lcall
ret
fisttps
test
jb
push
push
call
pop
mov
xchg
and
or
lret
mov
rclb
adcb
aaa
daa
or
movsl
and
mov
jo
xor
inc
pop
mov
mov
or
in
inc
repz
or
das
jno
aas
push
cmp
dec
rcr
mov
xlat
and
enter
enter
sbb
rorl
neg
outsl
sub
arpl
stc
push
push
inc
mov
cmp
mov
push
pop
push
mov
xchg
xor
addb
in
sub
sbb
pop
test
dec
cli
cmp
movsl
dec
mov
lods
loope
mov
stos
push
mov
int
cmpsl
inc
icebp
out
int
std
push
je
fnstcw
into
mov
cltd
loope
fs
insl
stc
nop
lahf
std
andb
push
jge
cmpsl
fwait
repz
dec
push
sbb
add
jb
mov
addl
aad
xchg
adc
xchg
jb
lods
imul
xor
cmp
fsts
xchg
repz
sub
xchg
sub
mov
mov
fistpll
sbb
adcl
push
test
loopne
in
inc
pop
mov
inc
inc
sbb
pop
ja
shll
inc
lods
int
jb
mov
inc
outsl
mov
mov
ds
fldl
sub
subb
jecxz
dec
movsl
push
or
call
movsl
js
and
lds
and
vmovsldup
inc
jmp
es
cmp
dec
dec
pusha
and
test
inc
sti
repnz
dec
jb
bound
xchg
enter
in
and
xchg
test
xchg
adc
cmp
pop
push
mov
push
mov
jae
fisubrl
push
xchg
mov
dec
bound
cmp
pop
xor
mov
mov
cmp
inc
lahf
mov
in
xlat
sub
repz
pop
in
fldt
pop
pop
int3
jg
repnz
lret
push
inc
jo
xchg
dec
clc
sbb
outsb
mov
inc
mov
xor
add
hlt
sbb
sbb
or
pop
mov
add
add
das
push
test
mov
add
test
inc
stos
push
sbb
int3
add
adcl
leave
icebp
cmpsb
cmpsb
mov
cmpsl
call
xor
mov
in
cmp
push
jne
mov
jno
dec
pop
inc
call
mov
pop
or
shll
lds
cmpsl
mov
es
in
mov
dec
cwtl
scas
sbb
stc
add
lcall
gs
scas
scas
fistpl
mov
jmp
lahf
inc
in
mov
sbb
lahf
mov
pop
mov
lret
iret
push
fldenv
cmp
into
js
ja
in
js
adc
inc
cmp
pop
inc
movsb
repnz
fcomps
push
std
je
mov
adc
add
loop
adc
mov
movsb
rclb
mov
sbb
mov
sbb
hlt
out
xor
xchg
jp
xchg
mov
mov
icebp
push
cmp
lods
ja
mov
or
or
sbb
or
stc
inc
jp
in
out
mov
adc
adc
cmp
pop
and
adc
je
inc
popa
repnz
mov
mov
pusha
pop
addr16
loope
mov
mov
push
cwtl
cwtl
xchg
add
lea
stc
and
scas
addr16
add
shrb
into
jnp
movsl
daa
or
mov
int3
mov
int
es
jp
push
cmc
sti
sbb
ljmp
pushf
out
rcrl
push
xor
das
into
inc
outsb
jmp
pop
push
out
aam
jmp
cmp
sbb
sar
je
imul
jno
pop
xchg
test
sbb
call
pop
mov
cld
fstpl
cmpb
aaa
xchg
dec
movsl
sub
push
mov
push
inc
xchg
out
popa
adc
out
sbb
mov
mov
leave
or
mov
pop
jo
scas
loope
dec
mov
xchg
inc
push
and
pop
scas
call
adc
or
inc
ja
adc
rsm
inc
lods
fstpt
jne
pop
lods
and
jne
sbb
xchg
add
mov
lcall
in
shrl
cltd
je
or
jle
fwait
lahf
stc
lahf
cmpl
call
xor
add
in
add
and
xor
push
cmp
push
push
ret
ret
mov
js
push
adc
out
lods
mov
pusha
cmp
push
bound
xchg
inc
push
fsubr
dec
pusha
jge
ret
cmp
in
add
ss
mov
mov
iret
pop
xlat
es
xor
push
sbb
mov
stos
xor
dec
pop
add
inc
mov
mov
mov
sar
xor
in
out
stos
sbb
sbb
jbe
jne
sbb
inc
sbb
xlat
jg
imul
adc
mov
roll
mov
rolb
xchg
sub
add
outsl
loop
pusha
adc
xchg
dec
jns
insb
mov
out
call
jo
insl
data16
in
and
mov
sarl
cmc
cs
jl
jno
aad
sub
ret
sub
mov
cmp
mov
mov
xchg
insl
loopne
push
cli
jno
je
ds
test
test
mov
jmp
mov
aas
fdivrl
cmp
or
or
je
fldenv
or
cmpl
mov
mov
ret
fldenv
fsubs
in
dec
enter
cmp
lcall
jg
stos
repnz
mov
mov
pop
inc
push
jg
rol
pop
nop
scas
or
mov
push
push
jp
push
sbb
or
aam
cmp
xor
jle
into
jnp
or
sbb
iret
movsb
xchg
pop
test
or
mov
and
arpl
sub
mov
or
clc
stos
cmp
adc
xchg
mov
scas
fdivrp
pushf
sbb
mov
jge
mov
fs
mov
mov
test
inc
mov
fbstp
stos
jg
push
je
or
xchg
jne
pushf
push
dec
aad
cmp
pop
mov
and
and
pop
jmp
cmp
adc
das
jo
sbb
pushl
out
cwtl
sbb
xchg
cmc
mov
dec
movsb
addr16
data16
push
pop
xor
mov
out
fdivr
cltd
dec
pop
fmulp
in
test
push
jmp
mov
gs
xor
repnz
sbb
jl
jg
notl
mov
pop
lea
orl
or
test
mov
push
fdivrs
mov
push
push
xor
cmp
xchg
mov
pop
jbe
lds
lea
pop
sub
mov
shrb
xor
jns
mov
dec
dec
popf
bound
push
and
imul
fs
push
push
es
pop
cmp
in
sbb
sbb
mov
adc
inc
es
mov
push
inc
setp
jle
int3
jge
mov
add
push
xor
push
sbb
add
pop
std
xchg
add
dec
loope
and
push
jl
stc
inc
lahf
xchg
fstps
xchg
sub
orl
mov
decb
arpl
lcall
in
mov
adc
leave
aam
sub
cmp
fldcw
pop
push
mov
jne
sbbl
fdiv
cltd
shlb
std
test
ss
std
shr
add
popf
sbb
push
iret
push
xchg
lods
addl
push
inc
adc
push
inc
adc
xchg
pop
popf
sbb
cmp
pop
cmc
cmp
jp
push
lods
sbb
inc
inc
test
xor
stos
aas
mov
in
push
or
xor
pop
sub
and
fs
push
mov
int3
mov
or
mov
dec
lret
lret
dec
push
in
cmc
in
or
ds
out
jp
sbb
xor
btr
mov
je
cmpsl
push
cmpsb
inc
dec
rcl
js
enter
out
pop
fistl
sub
push
mov
jg
jl
std
outsb
pusha
loop
rorl
ja
idivb
push
dec
out
add
xchg
add
repz
ret
xchg
mov
xor
cmp
aas
clc
pusha
cmc
sbb
shll
dec
ja
sarb
call
shll
sbb
aam
cli
adc
les
pop
dec
pop
inc
scas
das
jmp
add
pushf
call
shl
sbb
jnp
shl
push
pop
mov
std
lock
jo
xchg
dec
mov
cmpsl
jo
mov
dec
xchg
in
mov
std
movsb
arpl
out
sub
mov
adc
inc
int
pop
icebp
sub
push
push
push
ret
daa
outsl
outsb
lret
pop
lods
out
iret
jb
popf
jge
lods
daa
mov
lret
mov
sub
pop
mov
mov
dec
nop
sbb
xor
add
push
popf
dec
dec
test
pop
jmp
pop
clc
dec
mov
jmp
cmp
out
cmc
and
fsubrs
dec
or
jle
sub
mov
into
pop
jno
inc
mov
push
imul
lods
push
fisttps
out
cmp
xchg
lea
fisubl
add
iret
enter
dec
loope
ds
sbb
icebp
movsl
mov
aad
int3
outsl
inc
ret
sbb
imul
jge
inc
les
adc
jl
inc
xor
sbb
lock
push
mov
insl
loope
push
ret
push
mov
aaa
or
inc
rol
out
loope
xchg
lea
data16
xchg
mov
and
lods
fwait
push
sbb
negl
int
add
add
add
add
adc
pop
aam
pushf
inc
sbb
inc
cmp
fwait
push
or
or
cmp
ret
cmpsl
roll
fcoml
push
adc
mov
xor
arpl
cmp
jge
nop
daa
mov
out
push
xlat
scas
nop
mov
addr16
pop
push
aaa
mov
mov
rorl
sub
fidivs
sub
add
xorb
or
sbb
scas
jge
push
xchg
scas
ja
ret
sub
cmp
ret
ja
inc
dec
lahf
xchg
xor
sub
mov
lahf
lds
in
out
inc
dec
xor
das
pop
outsb
cltd
cmp
ljmp
test
xor
jecxz
pop
dec
jg
jno
into
fsubl
sbb
sub
pop
jbe
mov
ret
int3
mov
pop
popf
xchg
or
daa
lcall
push
or
fwait
push
sub
jecxz
fcomip
mov
xchg
jl
add
stos
xchg
fistpll
dec
adc
icebp
push
mov
jo
mull
iret
outsb
mov
xchg
and
out
rol
daa
sti
jb
xchg
stos
push
mov
push
adc
dec
sarb
xor
jge
cmpsb
fs
gs
fcoml
ja,pt
dec
inc
test
cmp
adc
loope
xchg
and
je
dec
js
sbb
lret
jns
imulb
inc
jno
das
shlb
std
xchg
fldl
inc
push
jae
test
push
xchg
xchg
in
fsubrs
gs
lcall
insb
clc
lock
mov
addr16
shrl
popf
stc
cmpl
rcll
and
sub
jmp
icebp
xchg
cmp
push
sti
mov
and
das
lods
cmc
pop
xchg
or
dec
push
sarb
imul
outsl
fs
daa
pop
mov
or
shrb
inc
cmp
ds
cmp
rcl
add
test
sarb
adc
mov
fwait
sar
push
movsb
cmp
mov
aad
jbe
shlb
pusha
enter
loop
inc
cmpsl
dec
mov
movsb
fildll
rorb
dec
cmp
and
sti
dec
aam
std
fldt
jmp
movsl
call
rcl
push
inc
cmp
ja
xor
ljmp
inc
fs
insl
sbb
jmp
fidivl
cmpsl
pop
cmpsb
cmpb
dec
push
into
outsb
inc
jb,pn
pop
movsl
adc
fcmovu
mov
pop
pop
lcall
aas
mov
jns
sub
jnp
ss
inc
aas
dec
fsubrl
push
cmp
or
xor
mov
outsb
lret
xchg
cmpsl
xchg
push
or
or
cltd
cmpsb
in
add
push
sub
xor
xchg
jns
lahf
cmp
xchg
push
stos
dec
imul
fucomp
jno
cmp
push
dec
dec
fidivs
pop
sarl
out
push
cmpsl
out
scas
mov
xchg
gs
iret
int3
lret
adc
and
mov
jp
popf
push
in
and
mov
jge
jl
adc
push
or
add
in
pop
out
sub
dec
mov
sub
jg
add
and
and
cmp
pushf
hlt
js
xor
ljmp
pop
and
and
sti
jecxz
scas
push
jg
test
pop
pushf
outsl
int
cs
add
adc
xorb
pop
in
push
xchg
jno
mov
push
aas
jbe
add
xchg
add
in
out
sbb
or
es
lods
mov
push
out
stc
sub
inc
pushf
sahf
negb
adc
out
loopne,pt
jae
sbb
repnz
push
sbb
adc
int3
mov
dec
xor
push
mov
and
adc
testl
jmp
lods
add
divl
jne
leave
push
fiadds
ficoml
jmp
fs
mov
push
and
xor
adc
out
hlt
cmp
in
push
jno
xchg
mov
hlt
int
xchg
jbe
push
cwtl
mov
mov
pop
dec
repz
jle
xor
jp
fists
sti
mov
sbb
cmp
into
fdivl
add
dec
jb
jbe
movl
jne
xor
ficoms
xchg
jb
xchg
adc
outsb
call
or
pop
sub
stos
sub
push
jge
les
outsb
insl
icebp
mov
dec
mov
xor
rorb
sbb
icebp
push
jmp
and
fnstenv
mov
test
mov
inc
adc
popa
shll
lret
push
dec
mov
inc
es
fsubrl
sbb
xchg
mov
jg
imul
lock
cmc
cmp
call
imul
and
add
int
mov
shlb
mov
xchg
mov
xchg
mov
or
das
and
pop
test
in
int3
loopne
insb
cmp
xor
stc
xchg
insb
push
and
mov
gs
dec
movsl
js
test
xor
in
je
push
inc
mov
movsl
das
outsl
and
lea
jge
out
call
cli
sarl
push
push
xchg
mov
jecxz
dec
leave
or
mov
lea
xlat
rcl
std
mov
or
mov
aad
dec
cwtl
cmp
sub
nop
mov
inc
pop
andb
dec
add
sub
pop
mov
adc
clc
movsb
xchg
pop
mov
inc
loop
in
mov
inc
out
jg
lods
insb
adc
xchg
inc
std
xor
and
daa
inc
sbb
add
jecxz
fdivrs
imul
ret
push
mov
fcompl
out
sbb
test
inc
or
mov
test
fwait
or
decl
xchg
sti
test
or
pop
cltd
fwait
xlat
fstpt
pop
sub
pop
mov
mov
jmp
popa
decl
and
dec
in
push
gs
cmp
lret
pop
sbbl
add
shll
andl
xchg
outsb
adc
rcrb
add
dec
fbld
cmpsl
out
andl
mov
sub
inc
pop
push
pushf
push
fcomps
int3
sub
gs
stos
fwait
xchg
iret
lahf
scas
jbe
push
jne
sahf
aam
sarb
outsb
rcrl
insb
add
inc
sar
js
dec
cmp
pop
push
inc
aam
or
sbb
dec
pop
insb
push
lret
add
cmp
flds
push
pop
jmp
cmpsl
mov
scas
xchg
pop
sbbb
mov
jmp
movsb
mov
and
rorl
sub
mov
push
jno
sbb
idivb
mov
pop
cmp
daa
sahf
les
testb
pop
lret
jns
shll
pop
mov
fcomps
rorl
aas
insl
cmpsl
lock
adc
idivl
dec
lcall
loop
sahf
xorb
and
add
inc
mov
adc
mov
push
sbb
popa
lods
jo
xchg
lods
aad
inc
pop
pop
ret
incb
dec
xchg
test
shrl
stc
xchg
repnz
pop
push
movsb
mov
inc
adc
mov
inc
int
rcrb
mov
inc
scas
loop
mov
jns
subb
mov
sub
hlt
xchg
sbb
push
inc
int3
pop
inc
std
leave
es
movb
dec
and
push
outsb
and
push
jo
add
int
dec
push
and
pop
subb
add
cmpsl
shrb
nop
mov
mov
out
pop
in
mov
or
cmp
sbb
std
xor
xchg
adc
adc
outsb
push
ds
sub
mov
testb
dec
xchg
insb
testl
sub
jp
add
add
xchg
add
repnz
sub
pop
int
pop
adc
insl
les
adc
pop
sbb
mov
cltd
repnz
mov
xchg
imul
ja
aam
dec
and
pop
outsl
or
push
add
stos
jmp
in
out
xor
scas
sub
xchg
mov
lcall
xlat
ret
scas
and
jg
mov
arpl
daa
test
push
xor
xor
shrb
clc
dec
out
push
lock
arpl
xchg
test
xor
and
cmp
fdivrs
lds
pop
push
adc
add
jl
and
inc
or
jle
repnz
cmp
icebp
imul
push
add
inc
adc
mov
repnz
sub
mov
js
pop
lods
shlb
fisttpll
xchg
into
imul
pop
lret
lret
cwtl
cmpb
push
sub
testb
cmp
xorl
dec
scas
adc
incl
sbb
das
or
data16
mov
fnclex
jge
cli
scas
add
mov
inc
ret
orl
and
pop
mov
mov
sub
xchg
bound
mov
shr
pop
mov
and
jno
push
sub
xchg
add
inc
inc
sbb
test
dec
out
inc
xor
mov
mov
xlat
cld
pop
aad
jp
sub
cmp
xlat
adcb
and
or
sbb
pop
adc
fisubl
push
jg
lret
push
push
dec
xchg
lret
in
sub
adc
shlb
popa
add
mov
out
xchg
pop
cmpsb
loope
sbb
mov
movsb
lret
add
add
push
jbe
icebp
call
in
lret
ret
lock
out
adc
jb
push
mov
inc
mov
int
iret
sbb
jb
gs
inc
js
add
jns
push
and
fsts
leave
sarl
scas
daa
push
insb
pop
rolb
rol
ret
mov
xchg
pop
shr
rorb
push
push
mov
sub
ss
fildl
cltd
xor
js
cmp
mov
in
pop
ret
inc
decl
lahf
jae
mov
sahf
add
inc
push
hlt
aam
xor
popf
lods
push
mov
sub
mov
mov
cmp
test
shl
imul
test
sbb
adcb
and
sbbb
cltd
xchg
and
outsl
int3
dec
pop
inc
test
pushf
push
fisubs
push
sbb
stos
add
push
aas
xor
mov
adc
das
bsr
cmp
xchg
test
pop
dec
popf
mov
push
jle
out
pop
sub
pop
pop
jp
sahf
aas
mov
call
xchg
inc
mov
pushf
lock
xor
ljmp
inc
dec
in
mov
insl
lods
sbb
nop
sub
dec
sub
std
pop
arpl
xlat
add
das
cmp
mov
insb
scas
add
scas
lock
push
add
les
mov
cmp
mov
mov
or
pop
add
mov
mov
xor
inc
sbb
test
adcb
lods
pop
ds
lock
gs
dec
cmp
push
and
xchg
aad
sub
int3
shrl
aaa
pop
xchg
cmpsl
ss
push
scas
ljmp
addr16
adc
cmpsl
dec
lods
lea
out
call
inc
fwait
lods
jne
aad
xor
bound
cmp
cltd
dec
std
fiadds
sbb
pop
cmp
ljmp
xchg
sbb
imul
movsb
aaa
mov
fidivrs
push
movsl
sbb
adc
jp
arpl
push
clc
pop
mov
lds
push
popf
lea
rcr
jo
imul
dec
je
fstpt
in
shl
mov
sub
incl
xchg
loopne
mov
jge
adc
sub
lea
test
lea
leave
push
lea
sub
js
cmc
xchg
sbb
pop
mov
adc
sarb
jnp
push
out
loopne
loopne
fisubrs
dec
xor
loopne
jp
gs
dec
iret
xchg
xchg
mov
pop
dec
or
push
daa
sub
inc
lds
fnclex
fadds
cmp
mov
aam
inc
loop
dec
pop
jo
data16
fwait
sub
nop
shlb
xchg
sbb
jnp
frstor
stos
jle
xchg
movsl
dec
hlt
jmp
aaa
sub
idiv
cmpl
jno
lock
push
sub
or
scas
add
aaa
testb
pop
push
pop
mov
subb
out
movsb
add
and
jp
hlt
mov
arpl
or
out
ljmp
pop
pushf
lock
xchg
mov
cld
mov
fcoml
out
test
or
in
sbb
shll
cmpsl
inc
clc
push
cld
rclb
jle
mov
popf
pop
inc
push
pop
out
dec
je
inc
xor
dec
add
addb
mov
dec
inc
test
rcrl
lds
jge
mov
xchg
xor
jmp
mov
out
outsb
imul
adc
leave
xor
into
popa
not
cmp
outsb
pop
jmp
ret
addr16
psubq
push
in
cld
insl
sub
xchg
lahf
cwtl
inc
dec
cmp
andb
push
ss
fbstp
shrb
cltd
es
jb
xor
aaa
into
adc
aaa
and
push
test
shll
popa
daa
test
movsl
sub
push
das
adc
sahf
out
pusha
sti
loopne
mov
clc
clc
mov
fldpi
or
cltd
std
add
shrl
faddl
rcrl
fcmovnb
rolb
insl
push
mov
adc
and
pop
fs
sbb
mov
ret
daa
gs
pop
in
in
aam
mov
call
cmp
loopne
inc
cli
cmp
jl
movsb
pop
xchg
out
aas
dec
sub
mov
lea
nop
popa
jnp
scas
cmpsb
sub
fadds
push
push
jb
or
xor
arpl
rcrb
add
popf
push
movsb
or
xor
mov
imul
das
adc
jp
adc
mov
jge
fs
gs
adc
inc
lock
sub
pop
iret
and
icebp
loopne
mov
dec
sbbb
ret
out
cld
hlt
fwait
lahf
sahf
inc
sbb
pop
rcrb
cmp
cmp
int3
std
inc
xchg
sub
fcoms
aaa
lock
ljmp
inc
mov
movsl
cmp
push
ret
pop
adc
sub
sbbb
enter
add
jae
xchg
imul
imul
icebp
add
adc
push
adcb
repnz
fs
jle
xor
mov
xchg
dec
in
sbb
inc
mov
in
mov
sbb
call
es
cmpsb
mov
and
mov
xchg
mov
adc
push
cltd
pop
inc
imul
clc
adc
xchg
subb
fcoms
or
adc
test
cli
xor
push
mov
pushf
loop
jae
movsl
cmpsb
cmp
push
mov
lods
sub
or
sti
adcb
jecxz
cmp
mov
movsl
into
bound
and
clc
jae
jmp
pop
push
in
gs
mov
mov
jns
push
or
es
ja
dec
cmp
dec
in
cmp
mov
add
fdivr
sub
movsl
jno
sbb
mov
cwtl
mov
popaw
ss
dec
cmp
cmpsb
inc
ret
or
and
test
mov
xor
cmp
rol
sub
and
fidivs
cmpsb
notl
jl
cmpsl
mov
xchg
or
mov
mov
jnp
or
mov
mov
inc
cli
lea
push
inc
adc
xchg
mov
sbb
sbb
jge
add
hlt
icebp
mov
jle
mov
leave
adc
loopne
sub
inc
mov
mov
fistpll
nop
out
xchg
pop
stos
into
inc
fnstcw
popf
loope
inc
div
mov
jge
in
and
hlt
mov
mov
cmpsb
adc
xchg
xchg
mov
stos
add
or
cmp
aad
sti
xchg
dec
clc
cmpsl
inc
int
sahf
cmp
aam
shll
cli
mov
ljmp
out
popf
gs
fidivrs
adc
or
shrb
call
or
push
dec
xchg
movsl
pushf
push
mov
test
mov
popf
int3
mov
push
mov
filds
mov
cmp
cmc
and
and
inc
sub
cmp
mov
xchg
mov
int
mov
pop
xor
lahf
mov
outsb
dec
pop
mov
dec
add
sti
push
sbb
mov
mov
ds
retw
pop
inc
decl
imul
test
and
cmpsl
insb
xor
adc
inc
pushf
jbe
test
cs
pop
pushf
inc
push
mov
add
jo
test
aas
push
test
cmp
adc
icebp
pop
inc
pop
into
jne
lods
ss
dec
loopne
pop
ds
inc
int3
imul
fnstenv
imul
pop
xor
in
popa
add
int
sub
xchg
mov
xchg
out
dec
mov
sub
sub
xchg
movsl
pop
imul
lret
cs
xchg
adc
pushf
cld
dec
dec
test
js
pop
loopne
cs
loope
pop
addr16
xor
loopne
std
and
inc
inc
sbb
frstpm(287
mov
fwait
and
iret
push
jne
ljmp
nopl
sbb
sub
shll
cmp
mov
shl
ljmp
push
add
pop
notl
das
cmpl
sbb
pop
aad
insl
mov
adc
cmp
xchg
sub
loopne
rclb
aam
xchg
int
clc
ds
insl
stos
aam
xor
ret
sahf
sbb
and
xor
insl
jno
and
mov
imulb
jg
and
xor
lcall
and
rol
dec
aas
cs
xor
out
cld
popf
sub
insb
mov
insl
sbb
add
mov
sahf
rcll
jbe
in
gs
out
cmp
fsubl
xor
idiv
mov
cmpsb
xor
mov
xor
and
and
mov
inc
test
adc
aaa
arpl
hlt
fistpl
push
cmp
dec
sarb
mov
rorl
or
push
out
js
out
jge
push
stos
cmp
loopne
ficomps
in
test
jns
iret
int
inc
shlb
xchg
cmpsl
jp
fs
adc
cmc
sbb
add
pop
jns
cmp
mov
sub
shr
or
gs
push
je
xor
xor
ljmp
jmp
dec
dec
mov
popa
adc
fnstenv
inc
push
jne
push
xor
jmp
jp
and
in
lret
or
xor
adc
decl
sbb
aam
sub
cmp
int3
jnp
or
xchg
xchg
fdivrl
aad
add
sub
rorl
sti
jge
add
sbb
or
addb
cli
leave
pop
and
cmp
push
fstl
jae
movsl
lea
jg
push
sub
mov
jo
cs
repnz
sub
cwtl
fwait
fwait
pop
stos
inc
leave
je
push
aaa
fucomp
stc
int
repz
sbb
cld
mov
mov
scas
add
mov
stos
mov
test
jno
xor
push
inc
sbb
addr16
movsl
cmp
sub
ret
mov
sbb
addr16
xor
pop
jb
pop
push
jno
int3
inc
pop
push
scas
stos
mov
cwtl
cmp
add
fnstcw
fxch
aaa
mov
xchg
mov
aam
inc
xchg
pop
jp
jmp
inc
xor
pushf
sbb
mov
out
jp
pusha
lea
xchg
pop
mov
cli
test
push
mov
xor
xor
add
mov
push
iret
dec
xchg
mov
xchg
aaa
int
in
mov
ret
push
ret
dec
popa
pop
js
ret
and
adc
ds
jo
sahf
mov
ffreep
pop
adc
pop
ljmp
lock
movss
in
testb
mov
mov
aad
data16
lods
repnz
ret
outsl
aam
xchg
adc
add
and
lock
lods
pop
mov
mov
in
aaa
pushf
dec
cmc
pop
sbb
aad
cmp
mov
xchg
jle
stos
or
xor
stc
sarb
mov
out
shlb
incb
mov
jne
xor
mov
sbb
inc
leave
mov
int3
mov
xlat
into
fidivl
outsl
and
jno
mull
cmpb
xchg
xchg
into
jl
pop
movsb
jo
into
ljmp
movsb
lods
push
push
adc
dec
sahf
cmpb
xchg
adc
mov
aaa
pop
fs
inc
out
mov
hlt
or
jnp
cwtl
popa
or
cs
sub
sub
adc
lahf
mov
adc
fbstp
out
sbb
mov
int3
scas
add
add
cs
int3
push
add
jmp
stos
das
pop
je
jmp
or
push
push
testl
jle
xchg
pop
jecxz
int3
filds
movsb
mov
push
movsl
and
int
test
cmc
add
cli
xor
pop
adc
jle
or
jnp
and
add
popf
sub
push
xchg
lods
adc
sub
mov
fists
test
cli
js
mov
pop
mov
lret
addb
pop
jno
or
fdivp
sbb
mov
mov
call
add
cmpsb
jb
xor
rol
adcb
push
mov
dec
pop
pushw
add
mov
sub
aas
cwtl
jl
dec
pop
aas
mov
xor
scas
daa
arpl
push
mov
cmp
push
adc
dec
sbb
jno
inc
pop
je
mov
fsubs
and
fiaddl
repnz
stos
jle
aam
add
jmp
push
jmp
mov
xchg
jo
jp
pop
sub
adc
stos
popf
fdivs
clc
lahf
mov
aam
pop
or
les
xor
ret
adc
out
xor
cmpsb
or
or
int3
jbe
js
mov
mov
mov
inc
push
cmpsl
test
push
mov
movsl
cmpsb
mov
mov
loopne
fistpll
push
inc
std
or
jmp
iret
jecxz
xor
out
pusha
cmp
sbb
lahf
gs
outsl
push
repz
add
push
mov
add
repz
mov
adc
add
and
imul
nop
mov
push
lods
fmul
sub
lcall
mov
add
xchg
int3
lret
mov
xchg
xchg
inc
xchg
add
lods
push
cltd
lcall
repz
inc
lods
adc
pop
int3
and
rcll
sahf
mov
mov
mov
add
mov
lcall
add
aam
loope
dec
pop
inc
sbb
loope
nop
push
jge
bound
pop
inc
out
stos
mov
jg
imul
push
inc
shll
and
inc
fisubrl
dec
pop
mov
or
add
lret
rep
jno
pop
sub
ja
jno
add
mov
ljmp
mov
jl
andb
push
shl
cmp
mov
push
xor
mov
jg
mulb
lret
jnp
push
xchg
or
xchg
gs
cmp
dec
insb
jg
xchg
sub
test
mov
xor
lods
addr16
xchg
fs
or
into
mov
cmp
sahf
scas
jo
jecxz
dec
sub
pop
mov
lds
fs
das
pusha
int
lods
sbb
mov
mov
faddp
filds
rcrb
push
pop
clc
aaa
dec
mov
mov
push
mov
jl
jb
push
mov
inc
push
push
fnstsw
ss
fnstenv
cmpsb
xchg
scas
jp
lea
jecxz
jbe
rorb
sub
shll
mov
jle
ja
and
sub
mov
mov
stos
gs
sub
scas
ret
icebp
jge
xchg
sub
mov
sub
imul
jecxz
pushf
sbb
inc
mov
pavgb
xor
cld
push
aas
xor
adc
lret
leave
es
sbb
ret
or
sbb
and
in
jl
mov
shlb
xchg
pop
sbb
jecxz
xlat
sbb
test
cmp
jne
stos
sti
cmp
jne
fsubrs
sub
xchg
xchg
push
out
cmpl
aas
repnz
imul
add
cmpsb
fstpl
fdivs
lods
js
inc
sbb
xchg
icebp
out
gs
dec
dec
add
jbe
negb
push
adc
sub
cmc
mov
cmp
or
es
and
loop
pop
and
jle
lahf
cs
dec
mov
xchg
pop
lahf
dec
gs
enter
mov
jp
popf
add
or
or
inc
dec
add
out
nop
out
add
inc
mov
push
inc
or
aad
or
add
push
and
pop
xchg
cli
dec
mov
cli
pop
mov
ret
outsb
ffree
sahf
mov
jno
push
aam
pusha
dec
insb
fdivl
imul
pop
mov
scas
cmp
stos
or
jg
inc
out
sarl
pop
inc
mov
bnd
mov
adc
sahf
pop
hlt
pop
adc
test
sahf
mov
sarb
daa
sub
ja
sub
test
inc
fnstsw
pop
fiaddl
std
test
scas
dec
push
icebp
cmp
lods
xchg
insl
inc
cmp
jne
lahf
mov
stos
fnstenv
ret
adc
fcoms
and
xor
into
lds
cmp
rclb
movsl
imul
add
sahf
data16
mov
xchg
stc
lods
mov
ds
pop
rorb
addr16
mov
mov
jmp
popa
adc
orl
xor
dec
jne
iret
push
cltd
mov
pop
ss
push
popa
dec
rclb
sbbl
jno
ljmp
cmpsb
stc
push
jns
dec
xchg
loopne
jmp
lds
ret
jecxz
mov
test
jle
dec
lock
pop
xchg
notb
daa
pop
fnstcw
jb
dec
les
sti
ss
out
sub
leave
xchg
add
mov
add
xor
orl
inc
pop
push
sub
jae
into
call
dec
shrb
hlt
dec
ret
lcall
dec
xchg
pushf
mov
scas
xchg
mov
shl
sahf
fistpll
bound
lret
es
mov
fdivs
ja
and
inc
pop
mov
imul
cmpsl
out
rcll
mov
and
mov
lock
aad
push
sub
mov
push
mov
jnp
dec
cmp
add
fiaddl
xchg
sub
jmp
or
inc
lcall
into
and
inc
lret
lret
jmp
dec
iret
into
xor
int3
xor
repz
inc
insl
sbb
das
cs
icebp
decl
popf
rcrb
les
icebp
movsl
dec
in
push
and
inc
mov
cmc
xchg
jmp
fmull
and
pop
aas
and
jp
lods
mov
xor
inc
enter
xor
std
xchg
sbb
je
aam
pop
inc
sub
and
mov
cmpsl
sbbb
rorl
sub
call
pushl
xchg
inc
push
inc
or
mov
mov
fdivl
std
outsb
je
out
sbb
mov
aad
movb
push
mov
or
out
notb
and
fists
jmp
movsb
pop
data16
mov
cmpsl
and
inc
lock
push
lods
pop
daa
lret
subl
lock
stos
out
add
ret
inc
incl
push
or
popf
inc
xlat
out
push
fsubl
in
xchg
and
mov
pop
cwtl
mov
fsubp
inc
xchg
outsl
pushf
add
nop
and
dec
pop
pop
mov
push
jno
mov
inc
call
fxch
movsb
mov
dec
in
pop
push
icebp
jbe
add
popa
mov
sbb
or
cld
jb
addr16
fcoml
leave
pop
call
mov
adc
push
imul
fdivrs
add
or
lea
in
neg
and
divb
aad
xchg
adc
xchg
ret
inc
xchg
stos
fucom
jns
pop
leave
mov
add
mov
addr16
sbb
je
cmp
mov
add
stos
scas
aaa
adc
pop
jmp
call
std
das
mov
pop
jle
cwtl
lret
rcrl
push
jmp
int3
push
clc
pop
bound
hlt
inc
ja
dec
pop
xor
xchg
xchg
cmp
jmp
mov
sbb
repz
xchg
push
sub
jg
movsb
mov
inc
sbb
add
sub
sbb
ss
leave
insb
and
out
ljmp
or
jle
cmpsl
jecxz
and
out
push
push
mov
or
insb
push
scas
sub
addb
xor
jae,pn
dec
jge
es
pusha
notl
test
addr16
cltd
stos
or
push
test
dec
pop
xor
int
xor
outsl
pop
sahf
mov
push
in
filds
fidivs
dec
incl
sub
sbb
jge
sbb
or
cmp
or
push
push
clc
popa
imulb
push
sar
adc
pop
xor
xchg
aaa
movsl
mov
jns
lcall
out
or
xchg
repnz
xor
mov
dec
adc
jne
repz
gs
jp
push
mov
or
mov
xchg
test
gs
adc
cwtl
mov
fstpl
lds
pop
sbbb
mov
pop
arpl
mov
mov
mov
sbb
int3
ss
jb
pop
out
imul
test
cmp
test
ffree
pop
sti
adc
and
dec
xchg
jae
insb
jno
int3
in
add
into
push
push
push
xchg
sub
lret
mov
lock
sahf
sbbl
mov
js
sub
test
enter
mov
loop
or
test
mov
vmovhps
mov
xor
inc
repnz
pop
outsb
lock
add
loope
ljmp
addl
aaa
sti
jle
push
push
jno
aad
imul
pop
jne
xor
xor
mov
pop
sarl
aas
mov
jp
xchg
dec
sti
push
cmpsb
mov
inc
in
imul
je
loopne
das
repnz
add
fwait
leave
cmp
shr
push
jmp
orb
orb
dec
pop
mov
jp
cmp
movsb
push
xchg
fstpl
push
jp
add
test
xchg
add
mov
clc
and
mov
jl
inc
sub
and
inc
fcomi
nop
das
pop
mov
adc
pop
push
xor
sbb
cmp
adc
mov
jge
xchg
lret
ja
out
jb
cmp
cli
adc
icebp
aad
out
push
add
dec
mov
sarl
add
rcr
fsub
iret
sbb
cmp
cmp
mov
in
sti
jbe
vpmacssdql
add
mov
fidivrs
lcall
mov
or
or
add
add
daa
lret
into
jo
stos
jl
adc
aad
pusha
pop
das
and
loope
inc
fnstenv
jbe
mov
loop
xchg
sbb
outsb
mov
test
xor
mov
mov
mov
aas
xchg
sub
popa
cmp
sbb
add
mov
mov
pusha
jle
xchg
repnz
sub
cli
test
or
xchg
pushf
push
pushf
sub
xchg
test
xor
mov
mov
loope
nop
sar
adc
jb
daa
movsb
xor
lret
xor
cld
or
ficompl
adc
test
inc
test
jl
push
jae
jmp
inc
cltd
jge
lahf
lods
inc
dec
xchg
push
dec
mov
in
das
daa
mov
out
inc
fnsave
nop
jns
pusha
aad
sti
push
or
xor
dec
pop
nop
jno
repz
push
sbb
test
movb
or
jnp
xlat
lock
lods
mov
push
adc
inc
xchg
clc
imul
out
or
cli
or
cwtl
jne
inc
ror
cmp
je
adcb
push
adc
int3
mov
jle
xchg
mov
mov
or
mov
fucomp
jns
aad
jbe
mov
popf
push
inc
in
jle
repz
repz
sub
call
jne
insb
push
dec
cmp
call
inc
adc
push
icebp
xchg
jns
add
lret
cmp
sbb
out
cwtl
out
mov
sti
fidivs
push
jmp
imul
mov
fisttpl
push
lret
std
rcrb
cmp
hlt
dec
xchg
cmp
add
and
fsub
dec
ficoms
popa
jns
das
test
pop
call
xor
push
adc
and
mov
vpcmpeqw
sub
in
push
out
and
inc
jne
sti
dec
and
inc
xlat
outsb
hlt
test
insl
pop
xchg
insb
or
jmp
test
adc
lock
idivb
add
fsubrs
out
pop
and
dec
test
lret
hlt
ljmp
inc
idivb
mov
mov
sub
in
out
ret
pop
inc
mov
jne
popa
loope
jo
cld
aad
dec
dec
sbb
aam
sub
push
xor
das
out
test
icebp
cmp
push
es
jno
int
mov
jl
jae
pop
adc
push
enter
out
pop
dec
lods
loopne
lds
xchg
loopne
call
rorb
mov
movsb
lods
enter
jnp
push
mov
addr16
mov
xchg
or
mov
xlat
add
and
and
cmp
jnp
push
xor
jle
div
xor
clc
add
push
jmp
adcl
dec
dec
fsts
cli
fidivs
sbb
lods
ss
test
push
or
test
loopne
sub
inc
cmc
out
cmpsl
cmp
stc
jo
fbstp
mov
inc
sbb
jecxz
pop
cmp
xchg
adc
dec
dec
inc
jecxz
sub
sub
scas
jecxz
hlt
enter
mov
cmpsl
out
sbb
addl
rcl
outsl
mov
arpl
int3
lret
mov
inc
push
mov
adc
cmc
mov
cs
in
shl
xchg
out
test
shll
dec
in
push
ret
in
and
push
loopne
pop
jb
inc
in
das
mov
std
cltd
rclb
jecxz
jbe
stos
sub
mov
xchg
stos
pop
sub
jne
mov
mov
jmp
add
pop
scas
xchg
fcom
adc
ror
add
push
mov
and
inc
push
sub
test
jne
xor
fsubrs
mov
push
into
sbb
push
push
sbbb
shrl
insb
sub
mov
push
lods
mov
pop
nop
test
mov
mov
cwtl
std
cltd
cwtl
or
jb
ss
pushf
cli
push
fcomi
fs
jmp
aaa
xor
addr16
ficoms
and
sahf
or
jmp
cmp
pop
push
je
xor
mov
push
lock
data16
out
cmpsl
xorl
mov
hlt
fistpll
fnsave
xchg
icebp
and
rorl
mov
notl
rcrl
gs
sub
or
mov
into
mov
lock
push
pop
jo
test
sub
inc
pop
inc
sub
faddl
xchg
pop
movsl
inc
push
jg
lock
je
push
nop
push
xor
and
sti
or
rcll
and
fidivl
call
push
inc
jb
out
bndstx
pop
cmp
arpl
pop
lahf
add
js
aad
std
cltd
jge
xchg
inc
or
or
inc
pop
insl
in
ret
xchg
mov
bound
xchg
add
pop
jne
sbb
lret
imul
sbb
outsl
subl
mov
popf
lods
push
and
jae
add
fisttpl
add
psrad
popf
imull
jmp
out
mov
lods
imul
lock
dec
xchg
pop
movsl
cmp
xor
js
inc
pushw
aad
lock
sbb
cmp
mov
dec
dec
jmp
test
les
ret
sub
or
aam
jbe
mov
test
sahf
sbb
pop
and
sti
sub
lret
pushw
mov
cmpsb
mov
clc
test
cmpsl
mul
orl
sub
clc
push
sbb
in
mov
jg
sub
sub
mov
pop
cwtl
mov
or
mov
xor
or
stos
cmp
jae
jbe
scas
adc
xor
and
mov
shlb
jl
mov
and
or
xor
xor
dec
jmp
push
adc
push
or
add
mov
dec
xor
addr16
cmp
push
fdivrp
xchg
pop
andl
and
lret
cmp
fsubrs
adc
test
pushf
mov
sub
int
imul
out
lods
mov
xor
or
hlt
mov
push
cli
sbb
movsb
mov
test
mov
stos
inc
mov
out
aam
ror
int
bnd
pop
push
add
sbb
mov
scas
inc
pop
fadds
xor
js
dec
in
mov
insb
sub
mov
pop
fsubl
adc
and
jp
fbstp
mov
mov
insb
jno
arpl
aad
jns
movsl
add
add
inc
push
addr16
mov
mov
xchg
rcrb
jmp
inc
xor
xor
popf
sub
enter
enter
mov
ja
ja
stos
aam
lcall
inc
imul
pop
mov
outsl
out
loop
icebp
cwtl
push
sub
es
cmpsl
and
mov
stos
in
stos
mov
add
xor
out
int3
mov
inc
fchs
mov
adc
shrl
sbbl
ljmp
iret
fisttpl
clc
dec
jno
loopne
daa
clc
inc
loopne
xor
outsl
mov
jp
pop
das
cmp
pushf
xor
bound
out
imul
pop
mov
cltd
data16
dec
push
inc
in
push
fldenv
and
stos
or
icebp
jne
mov
push
push
lret
fldt
daa
in
std
adc
mov
mov
adc
sub
cmp
push
or
mov
bnd
scas
push
in
fcomip
inc
in
add
jb
inc
lret
push
xchg
sub
scas
mov
loope
aaa
push
cmc
mov
mov
das
or
enter
push
add
hlt
mov
xor
test
mov
xor
shl
dec
sub
lds
sti
dec
xchg
repnz
pop
lods
mov
mov
jecxz
xor
mov
idivl
stc
or
pop
dec
sub
mov
dec
sub
jl
stc
or
das
movb
dec
in
in
mov
out
call
daa
clc
mov
dec
xchg
adc
in
repnz
jns
push
add
inc
mov
xchg
test
pop
lret
scas
cmpsb
push
xchg
pop
adc
mov
imul
rcll
jg
sbbl
cmpsl
jne
mov
mov
scas
mov
lods
sub
sub
push
hlt
leave
aad
ret
shrl
jp
daa
push
movsl
fisubrs
add
das
addr16
test
cs
mov
fistps
leave
mov
into
cltd
xchg
mov
fsubl
jp
repnz
adc
sti
lret
jae
mov
mov
mov
jp
xor
insl
dec
dec
fsubl
add
sysexit
pop
and
add
jnp
pop
lods
mov
gs
test
shrb
test
inc
into
xor
cmp
mov
out
inc
test
dec
scas
outsb
mov
lods
mov
fidivrs
sbb
add
push
mov
or
inc
fldt
in
addr16
sbb
ljmp
jge
and
jno
lret
cmp
sti
leave
int
shll
and
push
cmpl
push
outsl
add
icebp
add
adc
and
xor
dec
and
lods
sub
inc
lcall
lcall
lcall
jne
fsub
add
imul
push
inc
add
fcmovne
xor
push
test
sti
or
cli
jns
in
add
and
out
inc
dec
in
mov
inc
adc
movsl
dec
mov
les
popa
lds
in
mov
mov
adc
sbb
data16
inc
sbb
fs
out
pop
icebp
cwtl
jg
inc
mov
push
notl
lods
ss
fnstsw
int3
pop
out
adc
inc
imul
push
fnstenv
jb
xchg
dec
or
mov
fbld
or
test
popf
iret
lcall
push
icebp
nop
and
fdivl
aam
jp
popf
movsl
push
insb
jle
repnz
rol
mov
push
das
push
xor
sbb
push
in
into
loop
andb
mov
sbb
shl
push
push
popa
pop
insb
jno
fldt
mov
jmp
pop
cmpsl
icebp
jo
fnop
aaa
fwait
mov
pop
jmp
aad
xor
ret
ds
add
jne
mov
in
int
add
cs
and
push
xchg
test
adc
arpl
out
repz
cmp
sbb
mov
xor
push
jbe
push
dec
stos
dec
loopne
mov
pushf
out
fwait
xchg
icebp
mov
mov
inc
les
mov
lock
mov
outsl
mov
push
push
sub
andb
jne
ljmp
xlat
sbb
std
imul
dec
in
inc
and
mov
xchg
popf
xor
cmp
ss
sahf
stos
cli
dec
xorb
sahf
lock
jae
sti
rolb
js
lods
jl
dec
mov
nop
loop
in
jo
dec
shll
xchg
hlt
xor
aam
mov
xchg
jle
add
cs
fnstenv
scas
sahf
imul
les
aad
ret
or
xchg
lock
or
imul
ret
ffreep
lcall
in
and
dec
lds
pop
imull
jne
mov
mov
scas
or
add
loopne
and
rcll
xor
push
lods
inc
mov
cwtl
xor
test
or
ds
sbb
dec
aad
cmc
xchg
int3
les
inc
dec
push
stc
inc
mov
pusha
rorl
inc
push
jne
jl
jmp
sub
jns
xor
xchg
and
push
test
or
push
mov
cmpl
push
add
pop
dec
pop
or
inc
mov
xor
sub
ret
mov
lock
sbb
dec
loope
call
mov
sub
rclb
xor
xchg
add
testb
test
add
pop
cmpsb
add
js
popf
dec
xchg
inc
mov
test
outsl
adc
inc
nop
xor
push
jb
pinsrw
push
ficompl
aas
jno
stos
dec
and
cwtl
lahf
stos
leave
inc
pushf
jb
pop
repnz
cmp
mov
shlb
pop
add
das
lods
inc
popa
nop
jb
into
aaa
leave
push
push
enter
stos
inc
sbb
jo
movsb
pop
inc
push
mov
mov
jae
jge
mov
and
mov
out
popa
cli
in
test
imul
test
mov
addr16
sub
sub
cltd
iret
shr
xchg
fucomip
xchg
xchg
xor
or
inc
jmp
push
pcmpgtd
rcrl
in
std
in
daa
adc
inc
lret
inc
into
jo
cmp
iret
jle
sbb
or
into
mov
ja
push
stos
mov
mov
jp
js
divps
str
imul
sbbl
ret
fistpll
mov
mov
repz
mov
mov
stos
jg
lahf
sub
inc
jne
aaa
scas
call
decb
test
cmp
or
mov
jp
xchg
dec
jae
mov
or
scas
adc
add
and
cld
cwtl
repnz
hlt
dec
mov
push
aam
out
push
and
pop
int
xchg
xor
mov
dec
int3
mov
or
out
push
push
xchg
ds
scas
add
mov
push
aad
xorb
mov
mov
lcall
mov
ja
inc
in
stc
dec
inc
adc
lret
lea
push
jne
push
js
bound
mov
ljmp
psubb
arpl
inc
adc
dec
cmp
pop
xor
shlb
lcall
dec
and
sbb
hlt
mov
rclb
test
fdivs
cmpsl
stos
stc
shrb
adc
mov
cmpsl
mov
inc
repz
push
sbb
popf
shrb
sbb
mov
test
insb
adc
and
add
or
add
push
push
mov
mov
add
mov
mov
int3
sub
outsl
aad
xchg
mov
test
dec
mov
test
mov
iret
les
and
xchg
push
add
jae
mov
insb
pop
stos
pop
lahf
push
sub
dec
mov
pop
out
ret
fcoml
loopne
push
pop
xchg
fnstcw
mov
inc
or
aad
daa
dec
pop
add
pop
pop
aam
fwait
mov
ljmp
inc
push
jge
jbe
icebp
sbb
aam
cmpsb
movsb
mov
add
dec
in
rolb
mov
add
popl
inc
scas
sbb
push
scas
popl
xor
fcompl
dec
pop
add
dec
scas
cmpsb
lea
inc
jae
shrb
cld
or
xorl
push
aad
push
sbb
mov
in
icebp
dec
cwtl
ss
inc
mov
cld
cmp
fsubr
push
dec
sub
dec
jb
fisubrl
shrb
imul
lret
xorl
enter
mov
mov
mov
leave
sub
mov
cmp
sbb
sahf
in
scas
ret
call
fisubrl
or
jmp
add
mov
mov
jns
push
cmc
pop
into
mov
pop
or
dec
sbb
fcom
outsb
int
mov
dec
jmp
dec
inc
icebp
mov
inc
loopne
loopne
sbb
xchg
push
or
xchg
lock
and
dec
and
xlat
test
imul
imul
push
and
xor
sarl
mov
sahf
insb
subl
into
pop
jne
faddl
popf
mov
fwait
or
jmp
popf
nop
sub
std
lods
push
mov
fs
pop
ret
lcall
sbb
mov
dec
and
call
cmpsb
xchg
fsubrs
fdivs
jbe
cld
jle
mov
fisubrs
xor
add
inc
cld
inc
cli
jp
loope
sbb
add
adc
add
mov
dec
jne
and
in
hlt
adc
sbb
dec
xchg
loope
popf
fcomps
sarl
sahf
lods
movsl
enter
sbb
lea
inc
fidivrs
jge
ret
xchg
test
adc
icebp
inc
ss
xchg
fiadds
xchg
add
push
std
push
andl
dec
jg
shrb
ds
loope
and
mov
or
pop
cmc
ja
mov
pop
sarl
int3
pop
dec
jl
push
jmp
popf
jecxz
into
xorb
in
xchg
stos
loope
shr
mov
test
xchg
or
pop
lahf
dec
addr16
xor
test
or
sub
xor
xchg
cwtl
gs
ja
std
sub
movaps
mov
dec
push
inc
inc
mov
push
negl
cmp
xor
repnz
dec
mov
sub
jns
jo
xchg
mov
pop
repz
mov
lahf
xor
sbb
mov
and
ljmp
mov
mov
adc
ror
das
test
call
in
mov
adc
xchg
sub
mov
mov
sarb
iret
add
in
sti
lock
jnp
mov
fcoml
repz
in
jp
push
add
movsb
mov
jg
or
mov
jb
pop
fstp
sbb
dec
jb
clc
dec
and
rcrb
jl
clc
and
in
fdivrl
loope
fdiv
das
ljmp
js
lahf
jp
mov
jb
mov
pop
lods
stc
test
push
lcall
mov
fisubs
fcomi
inc
test
mov
pop
pop
pop
inc
enter
aad
clc
lret
test
push
lret
mov
inc
sbb
jnp
outsl
shrl
das
push
roll
sahf
loop
xor
mov
xor
xchg
cmp
insb
clc
sahf
popf
lahf
adc
mov
movsl
stos
inc
jnp
sub
scas
scas
adc
cmp
test
shl
pop
dec
jno
sti
or
add
fdivr
push
mov
mov
in
mov
mov
sahf
lret
cmp
negb
rorl
pop
mov
cmpsl
mov
fldcw
xchg
jnp
mov
mov
mov
movsb
nop
push
jae
sbb
or
les
mul
inc
cmp
popf
inc
test
add
enter
inc
push
cmp
loop
cmp
movsb
in
xor
cmp
rclb
xchg
bound
les
mov
push
xchg
cmpsl
cmc
mov
inc
mov
hlt
xchg
stc
mov
lock
adc
pop
mov
xor
inc
insl
push
fistpl
or
dec
pushf
repz
cld
sti
dec
push
mov
aad
jmp
les
or
outsl
js
popa
nop
daa
xchg
mov
ss
mov
push
imul
aaa
aad
jmp
mov
loope
cmc
jne
repz
add
out
rcrb
xchg
out
cmpsl
out
mov
pop
rorb
inc
shlb
mov
and
sti
stc
cmp
out
lock
js
pop
sub
shll
movsl
outsl
inc
push
leave
lret
push
insl
mull
xchg
or
test
adc
fidivl
push
cltd
xor
jle
pushf
scas
inc
mov
incl
jecxz
repnz
cld
xor
mov
push
dec
scas
into
add
fiaddl
mov
fdivl
lea
in
aaa
clc
adcl
dec
rorb
or
pop
mov
fwait
mov
aas
lahf
xorb
add
sbb
xchg
add
fiadds
aam
gs
xor
and
js
lret
int3
push
sub
jb
rorb
aas
ljmp
pushf
call
mov
add
xchg
cli
dec
xchg
icebp
mov
in
int3
cltd
les
cmpsl
push
call
iret
lahf
sbb
push
cmp
jno
enter
ret
push
out
jns
out
rcrb
and
dec
repz
lahf
shrl
inc
add
je
ja
push
mov
xchg
incb
fsubl
dec
sbb
push
rclb
xchg
sahf
or
sbb
mov
int3
insl
test
hlt
add
push
aad
adc
loope
pop
imul
fisubrs
into
sub
mov
int
jge
cmp
fwait
xchg
aas
out
in
mov
cmpsb
xor
in
dec
push
cld
inc
popa
lock
xor
mov
cmpsb
cmp
lcall
xchg
sbb
cli
pushf
sti
stos
sub
cltd
arpl
test
or
mov
pusha
xor
mov
inc
shlb
stos
cmp
sti
jb
sub
inc
mov
test
scas
sbb
xchg
movsl
jp
mov
aaa
sub
popf
lods
gs
outsl
imul
mull
jne
cmp
jecxz
inc
daa
gs
jmp
arpl
add
ljmp
add
mov
movsl
sub
in
or
sub
jnp
xor
out
push
int3
pop
cwtl
lods
int3
aas
movsb
push
jo
pusha
dec
loop
bound
adc
or
int
sahf
aas
mov
jle
jp
cld
test
pop
sti
jecxz
aam
pop
jo
mov
push
sbb
and
fsubrp
flds
insl
test
pop
xlat
iret
hlt
jmp
nop/reserved
inc
fwait
test
mov
fildl
push
int3
cmp
ja
cmpsl
ds
sbb
test
in
scas
lahf
and
mov
pop
out
sbb
push
add
into
mov
pop
mov
mov
sbb
ret
iret
scas
push
repnz
sbb
push
test
lods
cmpsb
xchg
jp
add
push
out
adc
jl
dec
repz
mov
add
cmp
out
adc
nop
hlt
push
dec
mov
lock
mov
leave
mov
sbb
inc
dec
dec
mov
mov
push
es
testb
jp
cmp
xchg
xchg
aaa
lcall
lret
jp
inc
pop
popf
fwait
or
int3
mov
scas
sbbb
in
pop
leave
adc
enter
xlat
jmp
adc
imul
fwait
sahf
test
mov
push
or
in
pushf
xor
push
cli
add
xchg
jecxz
and
xor
and
stos
inc
push
lzcnt
cwtl
testb
es
fisubl
outsl
dec
sbb
dec
fbld
cmpl
popa
sub
pop
cmpsb
aas
or
bound
push
es
inc
add
jmp
cmpsl
ret
inc
sub
icebp
rclb
pop
xchg
js
or
imul
pop
addr16
sti
add
push
sbb
adc
dec
pop
mov
in
pop
mov
out
push
and
inc
dec
mov
dec
fidivs
and
xlat
loope
nop
push
arpl
lock
aad
sub
pop
scas
add
andl
nop
mov
out
cld
push
mov
sahf
sub
cmp
adc
bswap
lock
xor
push
rclb
lock
and
and
xor
aas
adc
inc
and
inc
shl
xchg
cs
ficomps
stos
dec
loope
rorb
mov
jl
push
leave
sbb
test
mov
insb
mov
jl
mov
outsl
insb
ljmp
pusha
and
test
dec
fwait
ds
icebp
mov
int3
lods
pop
shlb
xor
shrl
or
lods
sbb
rorl
pusha
in
pop
shrl
inc
pop
sbb
inc
rorl
xor
popa
mov
movsb
cld
add
inc
inc
fnstenv
pushf
mov
pop
loop
out
iret
add
fidivl
aam
cmp
sub
push
mov
into
fidivrl
out
inc
push
call
shlb
jne
arpl
hlt
das
inc
sub
lock
dec
or
imul
jnp
dec
push
mov
pop
fidivrl
adc
cwtl
xchg
dec
lds
mov
in
popf
adc
jo
ja
es
inc
push
or
aad
out
pop
loope
stc
pop
sub
mov
aas
sub
cmp
and
imul
out
mov
rcrb
xchg
and
fucomip
sub
shrl
mov
icebp
push
int3
sarb
das
fisubrs
popf
inc
aaa
jmp
push
fcmove
xchg
fucomi
popa
jg
inc
jecxz
cld
or
bound
or
leave
jo
jae
pop
lods
xchg
mov
sub
mov
ss
outsl
clc
lea
sbb
iret
les
sbb
dec
xchg
jl
cvttps2pi
iret
fistpl
lea
daa
stos
adc
incl
pop
aas
pop
sahf
jo
je
inc
mov
jmp
fimull
fidivrl
ficoml
mov
mov
stos
mov
cmp
sahf
lods
imul
xchg
xorl
mov
mov
jb
dec
cld
or
cli
xchg
into
or
sbb
adc
mov
aas
in
idivl
jecxz
xor
mov
jno
enter
shrb
imull
fists
test
mov
std
add
mov
push
sub
or
dec
dec
pop
add
aaa
into
or
xchg
fxrstor
and
ja
sbbl
mov
repnz
adc
and
les
inc
jecxz
aad
xor
cmp
shrl
movsb
pop
out
cwtl
push
leave
or
add
loopne
pop
sbb
es
pop
pusha
jp
jmp
dec
pop
sbb
cmp
adc
mov
js
mov
inc
mov
sahf
add
sbb
iret
fistpl
cmp
loope
and
mov
pop
mov
insl
lret
sbb
and
cmc
mov
enterw
addr16
dec
jecxz
stos
jmp
insl
daa
ljmp
jno
lahf
and
fsts
xchg
mov
sbb
aad
sahf
push
out
push
lahf
daa
and
outsb
addr16
xchg
inc
cmpsl
and
dec
fimuls
stos
jle
loopne
sbb
les
mov
ficoms
mov
pop
dec
jbe
test
imul
outsl
push
notb
jns
mov
mov
les
inc
jns
and
dec
push
push
les
scas
dec
fbstp
inc
xlat
mov
jae
mov
ja
sub
xor
addb
addr16
xchg
sub
outsb
imul
jo
add
lret
cmp
mov
les
push
jmp
repz
nop
and
lcall
dec
pop
rep
dec
aam
jle
mov
outsl
mov
lcall
cwtl
pop
arpl
adc
jns
xchg
mov
aaa
repz
daa
sbbb
aaa
pop
inc
fsts
mov
andl
leave
scas
push
fadds
add
test
pop
push
lods
mov
mov
pop
xchg
lahf
negl
dec
jb
add
outsb
xchg
pop
cmp
rolb
iret
frstor
push
arpl
pop
lahf
aaa
or
xchg
or
xchg
mov
scas
test
mov
stos
std
jb
lret
fistpll
and
add
mov
xor
xchg
sbb
int
cmp
sub
inc
push
pop
jbe
cs
push
mov
lods
out
dec
in
mov
jno
push
fucomi
xor
scas
mov
push
cltd
in
xor
aas
enter
sub
in
test
out
inc
ja
push
stos
xchg
push
fistpll
inc
add
movsl
pop
jns
xor
push
pop
insl
jmp
jecxz
rclb
loopne
pop
mov
pop
cmpsb
mov
add
out
jno
xchg
sub
xchg
add
pop
cmp
out
repnz
jo
ficompl
lret
out
xor
adc
sbb
fisubrl
fwait
push
jb
std
stos
jae
push
cltd
push
test
cmpsb
sbb
adc
mov
adc
mov
ret
outsb
test
push
xchg
insb
add
mov
ss
sub
subb
int
or
and
ds
imul
inc
mov
shll
pusha
sti
sbb
xchg
fs
jb
out
enter
unpckhps
in
adc
cmp
fiaddl
mov
cli
push
addl
les
cmp
in
mov
xor
xchg
dec
filds
pop
icebp
daa
leave
or
sahf
jp
aam
inc
adc
push
sub
lds
xchg
push
mov
dec
cs
fwait
push
mov
pop
scas
cwtl
push
mov
fisttpl
lods
push
imul
pop
cli
and
sub
mov
dec
sbb
fwait
xor
dec
mov
cwtl
idivb
pusha
add
mov
xor
pop
js
inc
and
mov
cli
mov
movsb
push
pop
loop
xchg
xor
mov
adc
rcr
push
into
pop
insl
or
repnz
test
adc
ret
popf
xor
subb
and
push
ds
das
inc
xlat
or
jae
push
sub
sub
mov
int3
repz
ret
adc
icebp
movsb
std
inc
fstpl
lret
jb
or
lea
cmp
in
int
cmpsb
int3
mov
xchg
xchg
add
nop
jnp
adc
inc
or
xchg
pop
sub
out
outsl
movsl
jbe
xchg
aas
lds
or
dec
xor
sbb
popf
dec
add
aam
insb
jb
inc
data16
mov
sbb
xlat
mov
xor
inc
cmp
push
mov
sbb
cltd
jno
cmp
mov
push
sub
xchg
lods
push
aam
dec
fmul
dec
sbb
icebp
xor
jle
cmp
or
out
pop
les
and
popf
sbb
dec
inc
stos
ret
movsb
int3
fwait
pusha
xlat
in
add
loope
xchg
mov
lret
repnz
out
adc
push
xchg
xchg
ja
xchg
mov
sahf
mov
cmp
add
repz
jle
arpl
jp
inc
and
sti
iret
jae
mov
dec
fbld
add
repz
and
xchg
dec
andl
mov
out
out
fstpt
filds
mov
xor
popf
xlat
lea
mov
sti
dec
loope
fistpll
shrl
jecxz
outsb
xchg
jo
shrl
sarl
and
sub
jbe
inc
leave
das
aad
lock
sub
jae
test
test
mov
jge
inc
and
lea
mov
cli
and
ljmp
testb
cmpsb
data16
incb
nop
or
mov
sbb
mov
int3
cmp
loope
push
fwait
xchg
in
int3
je
xchg
outsl
jmp
sbb
add
lea
mov
pop
push
mov
xor
stc
pop
pop
xchg
cmp
xchg
jp
pop
lods
fimull
mov
dec
push
out
inc
sbb
cltd
out
xor
out
arpl
dec
and
jne
cmp
add
imull
scas
mov
xchg
shrb
ret
mov
mov
repnz
sub
mov
xchg
cs
dec
xlat
mov
jns
jne
in
lcall
adc
mov
insb
sahf
mov
test
aaa
inc
fisubrl
jl
imul
sub
mov
sbb
cltd
test
pop
xchg
jbe
lret
icebp
jno
std
xor
cwtl
xor
test
cwtl
lcall
jb
mov
daa
mov
pop
insb
rolb
mov
inc
mov
dec
mov
bound
sbb
cmp
lret
pusha
rorb
lret
cwtl
insl
jb
shrb
sbb
cmp
xchg
imulb
inc
sahf
outsb
sbb
jl
mov
xchg
fdivrl
pop
stos
xchg
les
adc
adc
xchg
stos
inc
sub
fbstp
push
sub
and
and
icebp
es
xchg
test
shlb
xchg
jle
cmp
ret
mov
fs
xchg
fnstcw
les
mov
lcall
les
jge
push
lock
pop
cmc
dec
icebp
rcrb
push
lea
mov
or
jnp
push
movsl
les
loope
pop
mov
movq
rol
cmp
adc
pushf
xchg
stos
test
or
dec
inc
lret
push
lods
sub
mov
cmp
out
mov
cmpsb
cmp
mov
cmp
xchg
and
or
in
pop
addr16
pop
mov
out
fimuls
dec
xchg
mov
cmpsb
jmp
lods
inc
jno
andb
xchg
jne
and
add
lock
jo
adc
fucomip
enter
lea
inc
push
scas
scas
jno
xor
push
es
cmpl
or
test
inc
push
pop
xor
push
mov
cmp
idivl
pop
dec
mov
leave
movsl
out
sub
xchg
aam
inc
push
mov
push
jecxz
xlat
jmp
mov
subb
push
and
dec
push
lods
jmp
imul
sbbl
rol
pushf
xor
hlt
adc
and
dec
mov
rclb
loopne
sub
sbb
jl
and
or
sub
push
cld
out
in
ss
je
mov
stos
xchg
jp
mov
shl
mov
xor
inc
fiaddl
cmpsl
popa
clc
add
daa
jle
sub
jns
jle
dec
inc
stc
nop
js
ret
aam
xchg
imul
xor
jp
sbb
push
les
jb
je
cmpsb
loop
fimull
xchg
call
iret
mov
mov
les
xlat
in
xchg
xchg
mov
into
test
mov
sbbb
xlat
inc
xchg
jb
and
pop
push
testb
sti
jno
dec
mov
fwait
je
mov
out
xchg
sub
jnp
cmpsl
stos
sbbl
push
sti
negb
mov
adc
push
pop
outsl
rorb
ret
bound
pop
icebp
fstl
ss
xchg
call
lcall
cltd
repz
inc
aas
decl
sub
rolb
pusha
mov
sbb
mov
mov
jg
push
adc
fiadds
movsl
push
in
jl
cltd
std
icebp
or
push
inc
pushf
sbb
mov
stc
stc
sbb
test
adc
jns
mov
push
cmp
movsl
cmpsb
and
movb
cmp
fsubrl
xor
adc
popf
adc
or
bnd
add
jg
jne
lds
pop
cmpsl
sub
inc
shlb
inc
imul
mov
ret
stos
testl
push
idivl
add
sbbl
mov
mov
je
ja
shrl
lret
pop
outsb
rol
ror
sub
pop
ret
jp
mov
repz
insl
add
lods
xchg
sub
mov
stos
adc
mov
cmc
sub
rclb
or
inc
ret
lcall
xor
xlat
shl
dec
mov
inc
xor
mov
xchg
push
push
cmc
ja
push
out
movsb
adc
or
pop
lods
aaa
pop
mov
loopne
xor
mov
cmpsb
mov
fcomps
je
or
leave
out
sub
sbb
sub
inc
xor
fidivl
adc
lahf
pop
mov
and
cld
mov
imul
lods
dec
addr16
fistpl
dec
fisttps
mov
xchg
push
sub
mulps
fdivrs
and
add
xor
leave
sbb
jecxz
repz
sbb
jnp
mov
daa
mov
arpl
repnz
sub
jecxz
sbb
in
aad
pushl
pop
mov
mov
stos
and
inc
popa
adc
fnsave
pushl
sbb
out
sbb
sub
aad
dec
ret
mov
adc
insl
dec
and
mov
sub
lods
xlat
pop
pop
addl
ja
shr
and
cs
dec
shl
mov
and
jecxz
test
lret
cld
or
stos
jnp
mov
int3
dec
stos
andl
or
imul
mov
je
iret
arpl
xchg
add
inc
cmpsl
mov
pop
push
in
test
jno
aam
xchg
cltd
scas
cmc
es
rcrb
das
test
push
mov
jl
mov
mov
cwtl
das
rcll
call
adc
adc
cmp
std
dec
jecxz
mov
aas
dec
mov
or
pusha
and
cmp
cld
es
shl
lret
pop
cs
xor
and
mov
xorb
push
stos
cmpsb
cltd
jg
loopne
dec
ret
or
pop
xor
fcoml
pop
inc
or
shlb
loop
daa
les
fmull
and
int3
fdivl
test
fdivrs
jl
out
fmuls
stos
dec
push
mov
cmp
dec
fistps
mov
adc
dec
xchg
and
lods
cmp
fistps
pop
cmp
inc
jo
mov
in
mov
test
sti
pop
push
xor
mov
shll
pop
aas
fwait
xor
jo
das
loopne
jl
mov
mov
mov
add
mov
test
inc
lret
in
cli
mov
mov
lds
cld
movl
dec
aaa
imul
sbb
jb
insl
add
popf
mov
push
test
bound
push
inc
push
lret
lret
push
popf
cmp
and
fadds
inc
pop
sarb
mov
push
or
loope
cmp
sbb
dec
push
pop
in
cmp
or
outsb
jmp
ret
xchg
movsl
mov
fidivrl
popa
push
fisttps
es
mov
fwait
cli
pusha
cli
cmp
sub
inc
fsts
pusha
or
loop
rdmsr
mov
arpl
cmp
loope
lods
jo
sti
fst
lock
fcmovnu
das
xor
push
mov
ret
xor
ficompl
mov
fucomip
push
or
or
sbb
clc
popl
clc
mov
pusha
pop
jnp
test
movsl
cmpsb
adc
inc
and
cld
addr16
pop
cwtl
pop
and
sub
ljmp
xor
rorb
lds
inc
test
inc
in
sbb
test
je
out
mov
ret
mov
xor
aaa
ds
aad
ficomps
mov
sti
mov
rcll
push
and
iret
add
and
shrb
inc
fldcw
cli
or
cmp
jg
popf
mov
imul
adc
mov
mov
pushf
pop
push
jp
imul
lods
push
cmp
repz
xchg
jnp
xor
pop
mov
mov
das
sahf
adc
test
int
dec
shrl
or
sub
mov
in
je
jnp
xor
or
xorb
push
sub
test
mov
enter
and
cmp
pushw
push
out
bound
movsl
or
cmpsl
inc
cs
pop
idiv
lock
push
adc
add
repz
test
sbb
aas
xor
out
scas
mov
xor
mov
and
mov
hlt
lret
xor
adc
push
mov
cmpl
dec
inc
ja
push
xor
mov
xchg
scas
orl
sbb
rcl
and
lds
out
jp
push
in
mov
fdivrl
fstpt
aas
lods
les
mov
dec
mov
cld
mov
xchg
call
add
mov
push
or
ljmp
andb
fwait
scas
nop
into
shl
adc
pushf
in
cs
xchg
sub
loop
sti
dec
sbb
js
mov
cmp
subl
adc
cmp
jle
mov
push
movsl
ja
xchg
xorb
pop
jo
push
add
or
imul
movsl
inc
pop
scas
in
fstpl
sbb
cmp
sahf
ret
jo
mov
and
int
imul
jns
xor
sbb
icebp
loop
lahf
adc
ret
scas
push
or
clc
inc
aaa
lods
inc
bound
lret
in
movsl
notb
jb
inc
pop
push
mov
nop
addr16
mov
insl
cmp
lods
aam
push
repz
xchg
lods
add
cmp
mov
clc
je
jae
or
jns
jmp
sub
add
lods
nop
mov
ret
jb
outsb
out
xchg
mov
imul
jmp
mov
mov
mov
push
rol
test
fwait
cli
xchg
and
leave
xor
les
adcl
in
mov
stc
mov
repz
or
fiaddl
subb
jns
mov
or
leave
leave
mov
ret
or
int
mov
mov
fldenv
inc
push
movsb
aam
mov
fldcw
insb
sbb
arpl
cmp
dec
jge
loopne
or
std
inc
fcompl
push
add
cmp
sub
fwait
cmp
sub
mov
movsl
outsb
dec
loopne
sub
cli
repnz
jle
fwait
enter
aaa
dec
lahf
es
loope
cmpsl
adc
xchg
cs
jmp
xchg
adc
pop
mov
lcall
sub
and
lret
dec
push
mov
sub
jns
xor
cmp
jne
jg
repnz
aas
push
sbb
aad
movl
inc
lcall
or
mov
adc
xchg
xor
fucompp
ficompl
daa
inc
cmpl
in
adc
cs
inc
popa
and
jmp
sbb
sub
incl
fwait
popa
or
xor
push
in
out
add
loopne
xor
mov
cltd
xchg
daa
mov
ja
nop
ficompl
or
cmp
rcrb
addr16
push
cs
mov
cwtl
pop
insb
add
lcall
call
dec
push
hlt
or
xchg
int3
outsb
mov
setg
xchg
mov
insl
out
push
jno
js
pop
pop
inc
push
inc
hlt
xchg
cmp
sub
adc
add
mov
enter
leave
fdivp
sbb
aas
bound
adc
sbb
jno
cld
ret
mov
xchg
pusha
test
mov
adc
add
mov
dec
add
sbb
and
sbb
cli
dec
push
inc
adc
ds
pop
mov
repnz
and
popa
jmp
push
imul
cmpsl
stc
add
cmp
jo
pop
xchg
sub
mov
mov
int
lock
pop
clc
sbb
mov
aas
jns
pop
stos
mov
pop
rolb
xchg
adc
and
cmp
pop
lret
push
ss
fbstp
lret
ficoml
mov
mov
ss
sti
sti
mov
dec
adc
test
cli
jle
xor
add
xchg
and
out
fwait
sahf
adc
or
imul
sbbl
leave
adc
or
aad
jb
enter
sub
testl
mov
fstpl
mov
sbb
outsb
xchg
scas
cmp
pop
mov
xor
andw
icebp
dec
push
out
adc
jl
cmp
push
in
jns
cltd
or
das
mov
shr
inc
jmp
inc
pushf
mov
out
cmpsb
add
xorb
or
push
ds
stos
test
lahf
incb
jecxz
add
pop
lcall
mov
adc
mov
out
cmp
or
cmp
pop
outsl
int3
mov
andl
or
in
push
cmp
sub
aaa
cwtl
add
leave
pop
pop
out
mov
sbb
nop
in
sbb
call
sbb
pop
pop
imul
push
and
in
test
xor
cmp
aas
dec
cmpsl
jns
movsl
cmp
outsb
jecxz
push
lods
push
cmp
lods
jo
xor
xchg
test
jmp
push
aaa
mov
adc
and
ljmp
sub
in
mull
pop
push
popf
test
xchg
xor
mov
xor
js
pop
cmp
inc
xor
xchg
gs
push
mov
cmpsb
xor
xchg
jbe
in
mov
loop
add
push
cmp
ss
scas
testl
pop
cmp
inc
nop
notb
dec
mov
fistl
push
shlb
add
xor
pandn
rolb
fisubl
aaa
add
and
xchg
outsl
pop
pop
enter
retw
hlt
dec
in
aaa
xacquire
add
out
sbb
cmc
inc
cld
mov
xor
fs
aaa
loopne
imul
in
mov
pop
leave
icebp
cmp
mov
push
loop
cli
daa
cmp
call
or
inc
clc
xor
testl
js
dec
cmpsb
sub
lds
sub
and
arpl
add
es
sub
fsubrs
in
int
ret
add
add
sahf
pusha
loope
push
cmp
repnz
push
sbb
jmp
mov
fsubr
into
addr16
stc
add
add
sti
xor
add
icebp
mov
aaa
add
gs
aas
xchg
push
jle
fs
push
aas
lret
mov
fcomp
outsb
stos
dec
inc
mov
mov
mov
mov
lea
out
stc
pop
repz
or
clc
sti
movntps
jbe
jecxz
inc
sti
push
aad
fdivs
xchg
pop
not
xchg
loopne
inc
icebp
jge
inc
int3
sub
add
adc
xchg
mov
mov
add
pushf
mov
rorb
push
xor
dec
movsb
inc
mov
loope
shrb
push
sub
push
add
push
jge
in
mov
jb
sbb
pop
pop
lods
sbb
aaa
loope
pop
push
insl
mov
cmp
sbb
or
popa
lret
and
inc
mov
scas
push
fcmovnu
mov
ds
ss
cmp
lret
jnp
shrb
sahf
aad
lret
sub
stc
nop
sbb
lahf
daa
add
sub
pop
scas
orb
hlt
xchg
xchg
popf
clc
and
mov
add
mov
push
lock
jge
adc
ret
dec
and
nop
loopne
lcall
jl
or
add
push
mov
mov
push
std
imul
mov
and
in
dec
rclb
icebp
mov
or
mov
je
or
aam
sbb
sbb
imul
cli
enter
test
jnp
stos
sub
xor
lds
pusha
push
sti
mov
int
lahf
pop
cmpsb
xor
cwtl
jmp
sub
inc
sbb
outsl
and
into
lods
inc
test
gs
cltd
imul
sbb
dec
or
cs
push
pop
into
lods
mov
jns
jns
sbb
stc
nop
xchg
mov
pop
jecxz
lcall
dec
test
jp
jecxz
fcomps
inc
sbb
ljmp
in
mov
divl
cmpsl
sarb
jmp
sub
fistps
cli
cmpsl
jecxz
dec
imul
jge
rcrl
mov
add
mov
pop
ljmp
xor
pop
inc
mov
dec
packssdw
pushf
jo
cmp
sbb
push
insb
dec
xchg
fstl
js
and
ror
xlat
mov
loopne
mov
sbb
icebp
push
ss
push
xlat
cwtl
mov
cmpsb
xchg
adc
jg
outsl
insb
out
cld
adc
into
jno
add
or
and
mov
test
adc
lret
or
xor
mov
fwait
mov
mov
pop
imul
imul
mov
ss
imulb
add
sub
pop
mov
mov
adc
xlat
jmp
mov
inc
fs
mov
aas
insb
mov
test
cmp
xchg
mov
sahf
jb
mov
test
or
xchg
and
insb
jo
push
push
or
inc
push
iret
ljmp
mov
movsb
cmp
pop
aas
inc
dec
pop
pop
cmc
xchg
shrl
push
in
sbb
jo
mov
fstl
and
cs
or
int3
lods
out
lock
mov
fwait
test
xorb
pop
in
jne
xor
add
andl
sub
mov
cs
cwtl
sbb
adc
sub
jmp
pop
inc
jmp
aaa
lret
fbld
pop
shll
or
jbe
fcomps
testb
lds
push
cld
nop
or
fcmovnbe
daa
jecxz
push
mov
jb
lret
pop
sub
cwtl
shl
xor
ja
push
mov
fidivl
insl
scas
xchg
dec
nop
jp
dec
or
inc
xchg
mov
popa
pop
rcr
mov
inc
jl
xchg
cwtl
daa
pop
add
mov
push
sub
movsl
fsubp
stc
shlb
adc
sti
rcrb
push
add
stos
out
adc
or
inc
push
lcall
loope
mov
push
scas
ficompl
fcoml
jg
cmc
int3
pop
arpl
inc
bound
cmp
clc
or
fstpt
or
addl
sub
sarb
adc
sub
inc
or
out
sub
cmpsb
cmp
std
out
jns
pop
gs
mov
fiadds
mov
test
icebp
adc
xchg
mov
ret
and
push
loope
and
adc
push
jecxz
mov
icebp
jecxz
mov
sahf
push
cltd
mov
leave
das
shl
scas
ljmp
test
rcrb
adc
sahf
stos
jnp
gs
pusha
inc
iret
xchg
sub
mov
scas
jns
mov
cmp
push
xchg
cmpsl
fcoml
inc
inc
icebp
popa
std
fstpt
mov
cs
in
sahf
dec
xchg
sub
sbb
sbbb
lock
scas
mov
sbb
repz
pop
mov
insb
leave
xlat
mov
iret
push
cmc
ja
pop
fwait
sub
fldt
sub
sbb
dec
pop
mov
pop
icebp
sub
rolb
lcall
adc
test
les
ret
mov
fidivrl
sub
mov
ret
sub
mov
push
orb
int
stc
sub
es
cmp
aad
imul
sbbb
xlat
sub
cmpsl
hlt
aaa
jl
xor
xchg
in
inc
mov
decb
fsubrl
xor
sbb
inc
lcall
mov
adc
mov
repnz
sub
cmp
and
xchg
test
js
sub
dec
dec
std
into
mov
lcall
adc
inc
out
les
inc
push
jnp
sbb
pop
jbe
push
outsb
and
mov
neg
jno
les
xchg
push
dec
fwait
shll
cmp
jns
jo
lahf
sub
and
inc
jno
inc
enter
clc
cmp
arpl
cmp
pop
dec
add
test
lds
xchg
outsb
mov
xchg
cmpsl
repz
mov
shll
cwtl
mov
mov
jno
test
cmpb
fidivl
jge
rcrl
sbb
jbe
mov
sar
mov
jo
jmp
aaa
mov
pop
mov
fldcw
nop
das
repnz
cwtl
xor
cmpsl
ds
inc
add
test
mov
xor
fnstsw
xor
adc
sub
jp
cmpsl
xchg
xchg
and
cs
scas
fildl
or
cmp
ljmp
dec
scas
sbb
ja
xchg
xor
cltd
outsb
dec
repnz
fucomp
out
jg
or
or
movsb
aad
xor
xchg
stos
push
loopne
sahf
xor
test
sbb
jb
cmpsb
fucomp
fstp
insl
dec
mov
mov
jg
jmp
retw
hlt
cli
mov
adc
and
mov
jno
dec
mov
or
xor
shll
push
ficomps
cmp
mov
dec
mov
xchg
dec
sbb
pop
ret
sbb
mov
pop
inc
stos
mov
jnp
dec
push
movl
xor
cmpsb
cmp
mov
in
and
fwait
adc
dec
dec
xor
and
loope
in
and
push
adc
inc
lea
sub
mov
sarb
inc
and
enter
cmpsb
cmpsl
cmp
aad
les
out
outsl
xchg
push
xchg
fimuls
dec
insl
mov
test
pop
fsubrs
push
pop
mov
mov
stos
inc
dec
push
pop
jg
jo
stos
out
and
sahf
test
daa
stos
hlt
pop
cmp
movb
sbb
cli
sub
movsb
stc
fsubs
adcb
shlb
or
lods
lcall
rolb
fmull
insb
scas
inc
fiadds
out
pop
rolb
jns
movsb
ret
sub
adc
jae
inc
imulb
cmp
push
movq
xchg
movsl
push
cmpsb
clc
mov
xor
jbe
aas
decb
scas
sbb
out
xchg
sub
mov
inc
xor
dec
filds
pop
xlat
push
bound
shrl
and
das
push
pop
stos
cmp
in
xor
adc
and
and
repz
xchg
inc
daa
leave
xor
xchg
add
xor
shr
arpl
dec
dec
aad
jge
sbbl
jg
xchg
and
mov
fnsave
xchg
mov
mov
ds
push
loop
sub
jbe
xchg
imul
jge
xchg
dec
frstor
xchg
jns
xorl
mov
or
mov
shlb
inc
pop
xor
xchg
ja
int3
mov
xorl
push
cmp
lahf
cmp
cmp
pop
orl
test
or
lea
addl
icebp
mov
lds
leave
imul
jo
push
stos
mov
xor
mov
adc
fwait
in
mov
fwait
xor
hlt
mov
mov
daa
test
xor
dec
mov
jp
mov
adc
jbe
rcll
out
rclb
inc
fistps
mov
jl
add
mov
dec
mov
imul
or
mov
adc
pop
add
js
xchg
adc
fiadds
shrl
fld
sbb
scas
out
movsb
mov
mov
clc
jo
lods
push
mov
jmp
ror
inc
mov
idivl
inc
jecxz
adc
sbb
out
inc
cmpsl
and
fmuls
pop
imul
mov
call
cmp
idivb
mov
sub
repnz
imul
sub
loopne
movsb
jnp
or
pop
mov
imul
jbe
xchg
aad
movb
std
mov
cmp
imul
mov
arpl
loopne
stc
fcomi
aam
sbbb
mov
adc
fmuls
sbbl
int3
mov
dec
dec
sub
jl
sbbb
adc
push
sbb
fs
sub
sub
add
repz
stos
xchg
add
adc
dec
mov
or
jl
xor
add
loope
push
push
loop
das
sahf
lock
movsl
imul
arpl
xchg
popa
inc
pushf
scas
jmp
add
jl
scas
mov
cmp
xor
or
mov
arpl
lret
inc
sbb
cmp
daa
push
jmp
and
xor
pop
mov
sahf
xchg
cmp
lret
xchg
test
add
int3
dec
push
push
mov
aam
andl
lret
shlb
in
add
aaa
or
xor
mov
push
jno
in
ss
and
push
fldt
mov
hlt
cmc
sub
adc
out
ja
xor
push
fbstp
nop
nop
xchg
inc
adc
ljmp
bound
stc
add
xor
popf
xor
add
jle,pt
push
dec
das
cltd
outsb
in
push
pusha
cltd
xor
repz
xchg
lds
scas
push
ss
dec
pusha
jp
in
ljmp
mov
test
push
xor
inc
mov
jl
cld
sub
xchg
sub
add
jnp
jae
xor
lods
jl
dec
sub
jle
or
xor
cmp
jno
push
icebp
mov
dec
loop
cmc
inc
fimull
push
insb
lods
xor
pop
adc
mov
xor
aas
and
shlb
leave
xorb
hlt
ja
mov
jne
or
fucomp
cmp
fstps
imul
into
out
xchg
cmp
jo
and
repnz
pusha
jnp
push
add
cli
fisttpl
xor
jnp
mov
xchg
cmc
inc
xor
sub
sub
stos
cmp
sub
or
inc
rorb
xchg
push
jg
jecxz
or
mov
scas
sbb
scas
sbb
loopne
bound
xchg
or
pop
mov
xlat
and
cwtl
iret
clc
lret
xor
push
xor
sbb
mov
scas
push
mov
add
movsl
shlb
jno
sbb
popf
sahf
inc
sbb
movsl
fwait
gs
aaa
mov
dec
das
adc
sahf
pop
sub
xor
sti
lret
loope
cmp
frstpm(287
aam
lock
push
push
add
aaa
addr16
xchg
lods
mov
or
sti
push
notb
mov
test
data16
test
xchg
jp
mov
out
adc
pop
mov
inc
sub
push
fwait
cmpsl
aaa
mov
mov
pop
imul
pusha
ss
sub
lcall
and
icebp
dec
push
test
outsb
push
nop
inc
inc
loope
andb
adc
mov
lods
hlt
jl
mov
dec
iret
mov
jnp
inc
jmp
inc
adc
push
loopne
inc
sti
aad
fdivl
testb
dec
sbb
push
mov
out
loop
test
cmp
shll
call
jle
mov
inc
daa
mov
jbe
enter
enter
pop
dec
add
sub
mov
or
outsl
mov
sbb
lret
stos
pop
adc
ffreep
rcl
add
or
xlat
xchg
pop
push
call
fbstp
popf
in
ds
cmp
in
jns
leave
xor
add
fs
pop
filds
or
dec
pop
repz
insb
decl
dec
icebp
nop
cmp
mov
cwtl
lret
xor
out
test
cmp
xchg
jecxz
inc
fst
test
add
lods
inc
lods
adc
ljmp
mov
cmp
mov
gs
adc
testl
addl
inc
push
nop
cmp
inc
lds
xor
leave
cwtl
adc
mov
insb
cmp
out
je
pushf
enter
mov
xchg
pop
mov
pushf
pop
test
adc
lcall
sbb
stos
addl
popa
xlat
xor
push
les
sub
dec
add
mov
decl
shl
cmp
push
ret
jge
mov
or
or
xchg
inc
movsl
movsb
cmp
mov
inc
sbb
xchg
sub
push
ret
xchg
test
xchg
jbe
in
jge
sub
adc
cmpsb
inc
inc
push
mov
ffreep
dec
idivb
stos
adcl
or
sub
mov
xlat
dec
sub
and
push
je
push
sbb
outsl
js
xchg
test
dec
or
scas
adcl
xchg
addl
inc
push
mov
mov
shrb
or
mov
lock
push
movsl
lahf
mov
mov
push
repz
xor
jae
mov
decl
mov
jno
cmp
dec
lock
testl
outsb
and
lods
pop
inc
loopne
lret
decl
aas
add
inc
imul
ds
rcll
mov
adc
jnp
ljmp
inc
lret
lahf
xor
pusha
lods
push
std
call
fsubrs
mov
hlt
or
lods
stos
add
imul
or
xchg
insb
dec
cmpsl
in
out
ret
jmp
fcomip
push
outsb
cmpsb
hlt
inc
sbb
shll
jge
cmp
fwait
int3
aad
std
mov
les
jle
scas
insb
testl
sahf
pop
dec
pop
fimuls
mov
lcall
xchg
mov
fcmovu
ds
ss
lods
mov
push
dec
out
fsub
jp
lea
push
mov
movsb
jp
mov
jge
hlt
imul
repnz
inc
adc
ja
data16
lcall
fistps
mov
lods
adc
sub
ret
cmp
mov
lock
cld
cmp
xchg
push
jle
in
imul
js
aas
test
jno
stos
mov
out
mov
in
cmp
push
mov
pushf
mov
jo
mov
pop
popf
dec
sahf
lods
inc
mov
lahf
popa
xchg
xor
lods
mov
and
cmp
shrl
jns
jg
mov
lea
es
xor
xlat
cli
jmp
in
or
icebp
cmp
or
lcall
push
mov
sub
pop
push
mov
psllq
inc
fistps
mov
pop
lods
dec
call
imul
mov
imull
sub
jbe
mov
leave
addr16
xlat
sub
cmp
lds
out
jg
sub
add
xchg
js
enter
dec
pop
mov
lds
push
clc
fucomi
bound
inc
sbb
mov
and
fbld
mov
stc
xor
notl
xchg
cmpsb
cmp
sub
cmp
dec
in
jle
cltd
and
sbb
lds
stos
inc
outsl
mov
leave
bound
or
sbb
pop
jecxz
insl
cmp
xor
xor
cmp
dec
in
adcb
sub
or
outsl
pop
icebp
clc
fiadds
pop
jmp
pop
sahf
sarb
gs
fisubs
and
inc
inc
xlat
cmpl
movsb
mov
in
and
and
push
push
pushl
fldt
inc
mov
and
scas
inc
mov
imul
fsts
mov
les
jmp
mov
sub
fs
in
imul
push
xchg
mov
mov
insb
ja
adc
adc
loopne
es
inc
lret
jmp
imul
mov
mov
push
or
cmpb
or
mov
arpl
mov
stos
and
int
push
cmc
xchg
cmpsb
jl
mov
sub
prefetch
or
dec
loope
push
cmpsl
cmp
sbb
cwtl
std
inc
pop
xor
pop
push
push
sahf
add
xor
sbb
cmp
xor
pop
cmpsl
ds
leave
int
jecxz
imul
int3
int3
inc
lods
sub
sbb
and
bound
mov
cmp
rol
mov
mul
cmp
mov
lcall
insb
sbb
mov
aaa
push
fcmovnbe
inc
push
xor
mov
shlb
pop
out
fcoml
or
call
lcall
addl
call
repnz
add
push
in
enter
sub
call
mov
scas
addb
pusha
push
ljmp
xor
inc
cmp
add
mov
lods
xchg
mov
ds
test
stc
ja
sarl
cmpsb
int
jb
xchg
cs
jne
hlt
inc
pop
cmp
bound
icebp
and
xchg
pop
fsts
or
pop
cld
and
in
lret
and
mov
in
cmp
cld
call
sti
push
push
inc
fistl
adc
push
sub
mov
imul
sub
out
xor
dec
roll
shlb
pop
mov
xchg
sbb
scas
mov
imul
inc
inc
das
mov
clc
aas
add
mov
fstl
fidivrs
mov
and
loopne
repnz
lret
pop
out
fdivs
dec
or
out
lret
es
adc
jg
daa
dec
jmp
cmpb
popf
cmpb
and
fidivs
mov
loopne
aam
pop
push
testb
lret
iret
data16
lods
test
xchg
in
sti
inc
xor
leave
xor
mov
jmp
xchg
mov
insl
cmc
stos
sbb
and
add
popf
pop
mov
and
mov
notb
std
jg
lods
cli
adc
dec
ss
sahf
cli
jl
cmp
inc
or
push
xor
add
in
mov
popf
xor
xor
je
push
cmp
mov
mov
dec
fcoms
mov
ret
std
je
incb
sub
lret
je
shll
xchg
lea
fwait
mov
int3
xchg
jge
dec
in
xchg
sub
or
mov
sub
lret
pop
push
cmp
adc
add
xor
fs
lret
mov
insl
in
rorl
test
outsl
fidivl
pusha
inc
test
jo
rcll
push
int
test
xchg
push
dec
mov
and
cmc
cld
and
es
mov
mov
rcrb
fildl
dec
and
aad
sbbb
ja
sbb
jns
jae
push
lcall
or
adcb
add
in
jae
adc
fwait
movsb
ds
dec
pop
pop
push
cli
xchg
mov
iret
adc
cmp
std
dec
sahf
jne
cltd
test
mov
cmpsb
pop
cmp
fsubrp
fisubs
jo
push
inc
loope
aam
push
bound
out
nop
les
cmpsl
mov
in
inc
xchg
popa
and
mov
lret
jbe
xchg
jbe
stos
sub
pop
cltd
test
je
rol
and
data16
dec
outsb
stc
dec
pop
jecxz
sub
pop
andl
jo
icebp
xchg
adc
or
xchg
divb
scas
mov
sub
inc
or
sahf
mov
shr
ss
push
lods
mov
xchg
bnd
in
cmp
push
adc
and
movsb
mov
push
jg
repnz
and
je
cmp
das
cmp
add
cmpsl
push
and
aam
js
dec
pop
dec
mov
rorl
lock
movsl
dec
and
or
fistpll
shrb
frstor
call
lods
cmp
sbbb
xor
jo
mov
dec
lods
int
fstpt
shll
xchg
pop
out
ret
test
stos
or
test
push
jge
es
addr16
add
sbb
mov
push
xor
je
shlb
ret
repz
sbbl
scas
pop
pop
out
imul
inc
and
mov
push
mov
push
icebp
notb
scas
adc
data16
mov
sub
pop
insb
xchg
and
inc
fisttps
addb
out
clc
jae
jno
inc
clc
les
and
jbe
push
push
orb
enter
sbb
dec
jb
pop
cwtl
nop
sbb
lret
test
adc
pop
push
xchg
mov
int3
scas
pop
in
cli
dec
push
mov
arpl
fs
shll
dec
inc
lds
add
leave
lock
cwtl
mov
adc
sbb
mov
mov
dec
les
jns
in
addr16
xchg
loope
out
test
jp
dec
test
or
jnp
rcr
loopne
sbb
inc
iret
mov
imul
movl
dec
jmp
xor
mov
jae
xchg
pop
push
xor
sar
push
or
mov
popaw
cmc
pusha
notl
insl
adc
mov
pop
decb
aad
and
jno
nop
aam
sub
es
mov
mov
xor
adc
jbe
jae
mov
aas
mov
pushf
pop
aas
push
adc
hlt
mov
xor
mov
add
mov
aad
lock
leave
mov
push
in
scas
mov
push
mov
mov
xlat
mov
scas
dec
arpl
pop
aaa
enter
fldl
push
xor
ret
xchg
movsb
imul
and
jle
push
lcall
rep
xchg
inc
xlat
mov
ljmp
or
repz
jbe
ds
or
ljmp
movsb
sbb
js
popf
stos
xor
pop
mov
adc
mov
in
repz
push
mov
pop
out
jbe
das
ret
xor
fildl
fimuls
mov
jle
push
pop
sahf
rolb
fmuls
and
pop
jae
jno
sbb
jo
lret
lcall
sub
scas
pop
test
cli
cltd
mov
clc
sbb
outsl
push
fadd
jbe
cmp
loope
js
dec
ret
fistps
lea
and
mov
adc
sbb
test
and
sbb
dec
icebp
mov
dec
leave
imul
pop
lret
add
das
mov
sbb
inc
pop
scas
jb
daa
sub
mov
jno
sahf
sbb
sub
mov
sub
arpl
aaa
call
lcall
addr16
shl
mov
inc
xor
inc
andb
jno
xor
jecxz
cmp
js
xchg
lcall
mov
loop
arpl
out
cmpb
popf
or
sahf
ja
jbe
mov
and
testb
addb
dec
inc
call
ds
hlt
push
fcom
inc
or
push
rep
push
fnsave
sahf
movb
rorl
nop
push
out
cld
dec
mov
or
xlat
mov
ds
cltd
xchg
mov
jmp
outsl
fwait
rcl
or
dec
pop
lock
outsl
lods
jb
cmp
sti
sarl
adc
movl
shrl
and
fcomps
jg
nop
sahf
scas
lcall
adc
inc
fs
leave
jns
out
roll
pop
mov
and
sbb
inc
imul
int
pusha
imull
out
xchg
sbb
cmpsb
mov
clc
popa
xchg
mov
dec
sbbl
dec
iret
pop
ficoml
mov
loop
xor
scas
cld
mov
dec
cwtl
decb
mov
aam
push
jae
insb
lods
sub
aad
testl
fcomi
stc
nop
and
popf
sbb
sub
mov
and
sbb
repz
xor
test
dec
popa
js
xor
push
mov
push
in
push
rolb
mov
or
out
mov
cmpsb
insb
push
lahf
mov
js
mov
fcoml
cld
or
cmp
fs
ss
in
cmc
scas
fadd
mov
jae
hlt
push
js
stos
mov
mov
in
xchg
jno
call
dec
subb
insb
mov
adc
test
clc
pop
lea
cmp
js
adc
mov
pusha
ret
frstor
ret
lock
out
iret
js
dec
mov
sarl
sbb
inc
mov
mov
pop
push
jmp
or
cmp
and
test
cmp
jle
mov
dec
cmp
imul
addr16
or
jp,pt
add
mov
pop
dec
notb
les
xor
pop
push
xchg
mov
stos
mov
inc
xchg
pop
pop
mov
jo
cmpsl
sub
lret
cmp
insb
push
sahf
clc
aaa
inc
jne
daa
pop
mov
sub
xor
aam
out
inc
jecxz
push
hlt
fidivs
mov
aas
out
gs
rcl
scas
jb
push
movsb
fdecstp
in
xor
add
jp
dec
xchg
fsubs
aad
popa
jg
repz
mov
into
jbe
cmc
aam
jnp
test
loopne
mov
cli
xor
mov
or
or
repz
cmp
shlb
jb
mov
sbb
popf
fmuls
fidivrl
and
pop
adc
jne
ljmp
sub
pushf
sub
rcrb
pop
scas
push
add
inc
lret
cmp
in
fstpl
cmp
jl
mov
add
or
popf
and
repz
inc
insl
movl
and
les
repnz
jne
mov
and
mov
rcll
add
pop
cwtl
mov
cmp
xor
sub
fidivl
adc
adc
vphaddudq
xor
cmp
lods
sub
leave
inc
or
sbb
inc
cmp
adc
pop
pop
insb
add
stos
add
out
and
aaa
scas
mov
push
lret
scas
or
sub
je
testl
rcrl
dec
or
xor
mov
sub
mov
in
xchg
adc
add
mov
ss
ret
jl
test
sahf
mov
or
jmp
insl
xor
push
mov
enter
int3
call
xchg
xor
cmp
or
lcall
int
lahf
stc
xor
pop
jge
test
mov
out
repnz
in
xchg
dec
push
mov
mov
jp
sub
jo
pop
push
dec
cmpsl
mov
pop
cmp
vpcmpgtb
mov
jmp
inc
and
and
test
pop
push
sbb
pop
loope
add
lcall
cwtl
xchg
or
bswap
gs
std
push
jb
imul
lret
negb
mov
rdpmc
mov
call
cmp
insb
subb
out
test
jne
xchg
rorl
pop
lods
sbb
fistpl
rolb
xor
inc
loop
push
sahf
pop
pop
pop
fildl
inc
cmpsb
cs
mov
pop
in
xchg
lods
dec
fwait
insb
sti
add
inc
bound
cmp
xchg
pop
ret
subl
ljmp
xchg
movsl
mov
stos
inc
or
push
lret
mov
les
mov
xchg
lds
rorb
sbb
sbb
int
push
xor
inc
and
and
push
pop
je
int
push
xor
lock
add
ja
xor
mov
nop
ja
cli
bound
lods
adc
les
mov
fadds
out
js
xor
jbe
fidivl
cwtl
out
add
inc
mov
jns
inc
cld
popf
lcall
andb
xchg
mov
mov
jecxz
decb
leave
imul
inc
jmp
mov
xchg
stc
or
lds
movsl
push
cwtl
jg
add
xor
jns
sti
sbb
push
sbb
xor
and
inc
push
clc
fs
lret
or
mov
subb
or
loope
add
stos
mov
sub
push
pop
jne
mov
lcall
icebp
test
mov
mov
mov
mov
lock
in
cld
lds
scas
dec
ja
jg
int3
nop
pop
enter
popa
inc
scas
cmpsb
jo
pushf
test
pop
jp
es
mov
mov
out
push
cwtl
addr16
lea
in
notb
push
lcall
sbb
addr16
loop
mov
jae
negl
pop
adc
ss
test
notb
in
cmp
lds
xor
outsb
pop
cltd
lahf
dec
lods
clc
mov
loope
jmp
inc
jae
and
add
lods
ljmp
popf
jbe
mov
sub
or
xor
test
xchg
rcll
sbb
add
out
inc
pop
in
inc
xchg
mov
iret
xor
jne
jno
sbbl
and
adc
loope
mov
jl
sbb
add
and
je
jns
xor
and
dec
js
jecxz
add
ror
repnz
outsl
sub
stc
add
jmp
inc
fildl
test
xchg
stos
xchg
movsl
addr16
mov
dec
jg
dec
fmul
push
lret
loopne
ljmp
cwtl
sub
and
cmp
rorl
mov
mov
js
dec
pop
insl
adc
insb
xchg
scas
cmp
xlat
outsb
pop
movsl
lods
cmpsl
pusha
scas
cmc
aas
loope
cmp
inc
pop
sub
jae
inc
shrl
and
ss
push
scas
fdivl
jae
iret
in
cli
or
add
push
adc
inc
xchg
stc
xor
mov
repz
int
xchg
cmc
and
push
push
fistl
sbb
scas
fwait
test
pop
shlb
pop
aas
hlt
or
dec
sub
add
sbb
xchg
nop
test
lods
cmp
aad
shlb
rol
je
cwtl
mov
lds
jge
hlt
nop
mov
repnz
data16
les
rcr
out
sbb
xor
test
cmp
lret
fdivrl
into
push
ret
sub
outsw
jge
adc
subl
jmp
pop
aas
daa
mov
sbb
mov
push
jle
mov
test
das
mov
xor
loopne
in
jb
push
sub
imul
xchg
mov
ss
mov
mov
push
test
xor
in
insb
push
and
movsl
int3
dec
xchg
push
ljmp
pop
add
popf
test
mov
outsl
sbb
push
test
cs
das
pusha
sub
sbb
cmp
out
ret
ljmp
enter
dec
insb
mov
jecxz
xor
icebp
insb
ds
out
test
pop
repz
fs
mov
arpl
je
xor
add
push
test
lahf
pop
xor
jnp
inc
lods
sub
out
sahf
lods
iret
pcmpeqw
push
xchg
sub
sub
je
push
mov
dec
scas
popa
rcr
in
add
ljmp
push
cs
jbe
sbb
xchg
sbb
xchg
aad
std
mov
filds
pop
mov
int3
pop
push
mov
in
call
mov
shrl
xchg
cmp
jp
ljmp
call
insl
rclb
lock
cmp
push
mov
inc
xchg
stos
loopne
jle
mov
pop
pop
bnd
stos
inc
cmpsb
lock
xchg
xor
lea
sahf
mov
in
cmp
stc
lock
xor
pop
mov
test
jecxz
repnz
outsl
or
mov
sub
pop
fsubrl
imul
cmc
jl
dec
xchg
mov
mov
rcl
mov
jl
dec
mov
aam
inc
ficoml
xchg
or
in
pop
mov
cld
xor
cmp
stos
jecxz
cmp
aam
sub
cmp
dec
sub
and
mov
test
pop
add
pop
notb
xchg
adc
rolb
loope
loop
and
push
movsl
lods
roll
mov
es
cwtl
and
insl
mov
fdiv
dec
ret
cltd
ljmp
lods
adc
jnp
push
add
es
push
inc
mov
aaa
sub
push
dec
xor
cwtl
fildll
push
xor
dec
imul
push
jne
cmp
xchg
cs
xchg
ss
jg
and
cli
xchg
push
popf
mov
cmp
ret
iret
jo
or
push
sub
outsb
ret
into
pop
js
push
cmovns
inc
xor
push
and
fildl
or
or
push
fildl
cmpsb
bound
and
lock
adcl
clc
dec
idivb
add
xchg
xchg
notb
cmp
pusha
jl
adc
and
sahf
icebp
outsb
inc
inc
push
jl
lret
outsl
xchg
daa
adc
subb
sahf
mov
in
mov
cmp
lods
pusha
jg
xchg
pop
mov
fldt
cmp
push
xor
push
ror
gs
aaa
pop
fwait
dec
notb
out
mov
dec
sbbb
xchg
or
icebp
mov
xchg
push
fimuls
jns
push
mov
aam
and
push
out
jae
test
out
test
mov
xor
ret
mov
adc
insl
loopne
lahf
sahf
xor
xchg
scas
mov
sbb
mov
repz
sti
mov
mov
leave
outsl
fldln2
stos
mov
sub
loopne
outsb
add
jp
ret
xchg
idivb
and
js
xor
fisubrs
jp
push
pushf
dec
mov
mov
and
pop
and
pusha
fucomp
std
pop
ret
testb
adcb
enter
or
sub
lds
inc
shll
and
sub
inc
pop
invd
and
in
sub
call
test
out
cmp
jne
fmul
jmp
cmpsl
clc
xchg
add
cmc
pop
ds
push
xchg
mov
cmp
jae
fsts
mov
arpl
cmpsb
icebp
sarb
test
pushf
fld
jle
jnp
pop
mov
or
jecxz
sub
add
arpl
cltd
lock
loope
push
push
fdivl
cmp
jno
sbbb
xchg
lods
mov
sbb
push
in
mov
or
cs
mov
mov
sub
dec
and
and
inc
fisubs
mov
les
lret
test
lret
push
in
int
movsb
jno
push
cmc
into
stos
mov
int3
test
les
fwait
xor
fs
popf
jns
popf
mov
je
cmp
dec
mov
inc
pop
movsb
or
push
mov
fcomps
sbb
jae
pop
cld
cmpsb
rorb
int
js
dec
inc
push
jmp
sbb
inc
cmp
add
mov
ret
or
sbb
dec
negl
sbb
pop
jle
sbb
or
inc
jmp
nop
dec
pop
repnz
ljmp
jno
dec
rorb
inc
out
popa
clc
and
lahf
mov
mov
or
jle
and
xchg
mov
xchg
sti
mov
jecxz
and
pop
loope
pushf
pop
cmp
mov
mov
rorb
adc
adc
dec
loope
into
sub
ja
or
or
xor
sbb
cmovp
iret
xchg
movsl
pop
lock
or
mov
mov
pop
add
and
pop
xchg
sub
xor
mov
push
int3
dec
pop
divb
adc
or
push
sub
xchg
push
hlt
mulps
cmp
adc
and
out
xchg
call
sub
jl
jge
adc
stc
nop
pushf
insl
or
pop
scas
sbbl
fldenv
jg
sbbl
add
mov
ds
push
outsb
pop
push
aaa
es
cmpsb
ja
setp
cmp
shll
mov
inc
pop
unpckhps
mov
ss
sub
inc
inc
push
js
imul
xor
mov
lcall
and
lret
cmp
arpl
cmpsb
dec
inc
rol
xor
xor
test
push
mov
fisttps
sti
cmpsl
stos
stos
add
sub
sub
mov
cmp
mov
mov
bnd
cmp
push
dec
jle
cmp
pushf
ss
hlt
fstl
pop
ja
jp
fs
cmp
mov
idiv
repnz
cmp
js
fstl
push
cltd
jp
aam
cmp
sub
cli
adc
xchg
sbb
xor
jl
jge
jns
ds
pushf
push
xchg
pop
xor
cmp
add
jg
sbb
inc
pusha
push
cmp
out
test
outsb
or
push
push
into
repnz
pop
das
inc
sahf
clc
ja
adc
mov
pop
aad
rolb
insl
leave
fisubl
push
push
hlt
dec
lret
and
pop
jae
std
ja
pop
inc
add
sbb
inc
dec
dec
push
mov
stos
pop
sahf
rcr
push
std
xchg
sbb
push
adc
aam
xor
pop
lahf
rcll
out
sbb
xor
jo
adc
cld
inc
xor
std
xchg
das
arpl
pusha
cli
sbb
mov
incb
or
arpl
mov
cmpl
pusha
sbb
xor
add
mov
sti
jl
test
push
sbb
adc
xor
cld
cmpsb
dec
inc
mov
aad
add
mov
cmpsl
pushf
dec
clc
xchg
jg
das
insl
jp
loope
loopne
lods
les
or
stos
mov
xchg
cmc
jbe
ljmp
je
pop
inc
loopne
jae
in
std
add
rol
test
xchg
mov
sbb
jo
pop
test
mov
enter
and
js
loope
cs
jnp
repnz
push
add
mov
xlat
jmp
in
icebp
int
cmp
insb
aaa
or
jl
stc
mov
cmp
into
xor
and
xchg
lahf
adc
fwait
xor
xchg
nop
addl
loop
lea
cld
push
call
jae
out
mov
cltd
or
pop
sbb
jno
fnstenv
jnp
mov
and
sub
xor
fcompl
aas
ret
sbb
divl
and
mov
push
test
or
mov
add
aam
sub
jb
fldcw
movsl
jl
lret
and
adc
repnz
stc
outsl
outsb
cld
and
sbbl
imul
dec
lds
or
shlb
cmpsb
inc
jns
es
push
mov
movsl
adc
or
jne
out
add
mov
dec
and
fistl
mov
lods
jns
xlat
scas
dec
aad
movsb
lret
imul
push
stos
daa
inc
adc
xchg
inc
push
stos
ficoml
jmp
cmp
fimuls
ds
cmp
pop
addr16
xchg
push
ljmp
loope
mov
jno
jle
cmp
into
xchg
push
inc
mov
repnz
call
sbb
cmpsb
pop
pop
or
mov
les
cmp
xor
push
int
notb
call
xor
xor
in
fdivrs
jne
pop
sbb
xchg
pop
and
jo
sbb
add
out
outsb
test
pushl
dec
outsb
ret
lret
imul
lods
aaa
sub
cmp
inc
fnstsw
shrb
int3
xlat
fs
or
xchg
pop
inc
movsl
cmp
jge
cmp
shrb
mov
and
pop
push
cmp
xchg
insl
js
shrb
pop
add
cli
xchg
and
shlb
mov
pop
popa
mov
xchg
jecxz
sub
in
cmp
pop
outsb
mov
xchg
fnsave
cmc
mov
pop
iret
mov
xchg
jg
sub
fbld
lds
nop
cld
jp
xor
or
jo
push
addr16
cmc
mov
pop
nop
and
mov
xor
xor
add
leave
sub
mov
je
add
lods
fdivrl
fldenv
jle
out
fbstp
xchg
dec
movsl
fstpt
jo
mov
or
mov
sub
lock
sub
jbe
xchg
push
adc
inc
ss
mov
mov
pop
jo
fs
adc
add
sbb
in
inc
mov
add
in
nop
movsl
lods
xchg
inc
or
in
dec
loop
xor
or
push
pop
sub
ja
push
cld
jp
pop
nop
test
aaa
into
fidivl
inc
popa
and
inc
jge
jo
ret
jnp
and
pop
and
mov
jno
and
adc
imul
adc
mov
insl
subl
ss
movb
mov
fmull
add
imul
stc
jae
sub
fildll
mov
mov
jnp
push
lods
cmp
nop
addr16
outsb
test
int3
cmc
leave
divl
push
ljmp
jno
and
jg
jo
and
push
sbb
sub
pop
adc
mov
add
aaa
jno
fnstenv
insl
sbb
scas
lods
test
jbe
dec
daa
ljmp
push
in
pop
dec
rcrb
std
stc
adc
imul
jnp
pop
add
push
mov
loope
add
mov
cwtl
mov
pop
andb
call
inc
pop
push
testl
shl
mov
cmp
dec
jns
gs
and
inc
loope
int
fmull
rcl
outsl
adc
jl
pop
mov
fsts
inc
jbe
nop
lea
fsubs
jb
cmc
pop
repz
push
mov
push
jnp
fisubl
mov
lods
or
fcomps
mov
dec
cwtl
das
jnp
cmpsl
push
push
pop
sub
lds
insl
jp
pushf
xchg
or
dec
mov
js
and
repnz
les
jae
pop
push
push
cmpsl
pop
mov
aam
int
stos
dec
adc
fs
int
xor
cltd
int
dec
popa
or
sbb
scas
jmp
cmp
adc
xor
xchg
mov
inc
ficoml
stos
es
add
inc
sbb
cmc
push
sbb
inc
push
sbb
jae
mov
mov
or
stos
pushf
mov
adc
xor
incl
inc
das
loope
add
inc
mov
inc
jmp
jb
aad
es
mov
stos
pop
negb
xor
rcr
sub
push
js
pop
pusha
push
mov
aas
lds
push
or
hlt
sbb
push
mov
repnz
out
hlt
das
adc
mov
push
sub
adc
cli
push
jae
mov
arpl
or
or
int
imul
les
popa
enter
jmp
xor
ret
push
je
loope
andl
add
push
aas
inc
scas
pop
jnp
or
loope
in
push
test
mov
js
or
cli
mov
push
mov
add
push
and
addr16
add
cmpb
pushf
adc
or
popa
pop
in
ret
rsm
push
push
popf
aaa
cmp
loope
push
sbbl
stos
test
rcll
push
xor
fisubl
xor
call
rcl
repnz
add
sbbb
push
mov
xor
outsb
push
jbe
push
push
pop
xor
jno
inc
addl
or
xchg
fisubrs
fisttpll
mov
pop
pop
mov
and
out
mov
mov
movsb
mov
ret
std
xchg
cmc
push
mov
notb
data16
cmp
inc
lahf
clc
adc
fsubl
sbb
jb
and
addr16
xchg
push
jge
push
popf
sub
inc
loope
test
and
mov
cmpsl
jnp
inc
stos
adc
loop
lret
pop
mov
fbld
int3
adc
test
lea
into
push
mov
sub
cmp
sbbl
sub
lret
stos
jae
leave
test
adc
or
dec
stos
sub
jne
insb
push
xchg
mov
aas
jmp
mov
hlt
sub
fucom
or
xchg
clc
push
mov
mov
xchg
subb
push
popa
jbe
fiaddl
imul
in
push
stos
es
mov
lds
or
loop
test
add
or
push
sarl
out
inc
dec
xor
in
pop
dec
fnstenv
enter
fistpll
xchg
ret
test
jge
push
mov
fs
push
int3
xor
les
mov
mov
daa
mov
cmpb
mov
flds
cmp
jns
xor
jae
cs
xchg
inc
sbb
mov
dec
imul
jecxz
test
lds
dec
mov
and
inc
shrl
test
in
inc
test
dec
mov
test
push
fcomp
inc
test
pop
push
lret
call
mov
sbb
loop
jbe
jns
jp
cmp
out
sub
mov
sbb
inc
add
mov
sub
imul
push
shlb
xchg
out
push
lahf
mov
mov
in
sarl
mov
xchg
idivb
or
nop
sub
scas
sub
js
lds
xchg
adcl
inc
lret
mov
ja
and
scas
mov
pop
sub
movsl
jns
pop
sub
or
adc
jmp
rcrb
mov
inc
dec
pop
pop
int
add
sbb
xor
jmp
push
push
insl
or
das
xchg
notb
sbb
rcr
pusha
shrb
ret
cltd
cmc
daa
test
imul
sbb
push
xor
jmp
icebp
loopne
orl
xchg
shll
aas
pop
movsb
jl
add
out
fwait
insl
int
mov
cmp
sarl
sarb
icebp
sbb
mov
or
stos
test
mov
jmp
pop
or
add
scas
jbe
sbb
test
mov
xor
mov
xor
dec
aaa
push
mov
jo
shlb
push
in
ret
cld
xchg
in
movzbl
jne
add
dec
rclb
pop
xchg
xchg
xchg
fs
shlb
sbb
bts
pop
and
leave
loopne
mov
xchg
movsl
lret
sbb
ret
and
push
mov
inc
clc
mov
xchg
dec
dec
in
pop
mov
pop
xor
push
std
repz
add
mov
pop
out
or
push
sahf
pushf
mov
imul
xchg
cmpsb
std
ficoms
push
fiaddl
xchg
je
xchg
ljmp
testb
rclb
iret
push
lret
inc
adc
test
cwtl
in
and
push
add
adc
push
lock
ds
jmp
fbld
sti
and
mov
mov
sahf
inc
cmovo
addb
add
inc
xor
sbb
adcl
mov
movsl
cmp
sbb
cwtl
adc
mov
fwait
jne
add
lock
push
std
or
mov
jge
pop
adcl
les
and
jbe
xlat
xchg
fsubl
dec
stos
mov
cmp
jb
sbb
mov
cmp
xchg
stc
out
inc
stos
add
cli
inc
and
push
lret
sar
dec
cmp
and
ret
jge
scas
daa
mov
in
adc
jb
or
dec
aam
pushw
mov
mov
into
cmp
imul
push
mov
sbb
test
jge
daa
daa
sub
arpl
cmp
mov
rol
gs
add
and
mov
lock
sub
push
je
sahf
sbb
inc
push
popa
mov
xchg
loope
cwtl
adc
pushf
sahf
decb
jecxz
pop
es
rorb
flds
dec
loope
shl
inc
mov
inc
inc
mov
test
xchg
daa
fnsave
add
add
mov
cltd
lods
mov
add
mov
xchg
popf
mov
mov
dec
jp
add
repz
scas
adc
imulb
mov
xor
jmp
fcompl
popf
jg
shll
out
inc
push
incl
xor
and
cmp
pop
insl
push
mov
and
incl
imul
inc
fimuls
xor
outsb
movl
ret
cmpsl
and
jbe
lret
imul
pop
xor
filds
fs
loop
adc
mov
mov
xchg
pop
sbb
jge
mov
es
das
push
insb
pop
push
ret
sub
mov
mov
sub
mov
pop
xor
lahf
xor
jl
push
mov
xor
popa
movb
movsb
cs
std
lods
insl
ss
mov
jecxz
das
add
ja
leave
xor
je
decb
xchg
mov
cmpsl
inc
shld
push
push
mov
inc
call
pcmpgtw
xor
enter
stc
lret
jmp
adc
popf
stc
pop
adc
fstps
adcb
icebp
mov
and
jae
daa
inc
das
jle
int
inc
fs
lea
add
xchg
push
cli
pushf
adc
pop
mov
xchg
ljmp
xor
sar
jno
mov
pop
neg
mov
je
sbb
fldt
adc
cmc
and
cmp
xor
push
jecxz
or
mov
ja
jae
and
xorb
mull
ljmp
stos
cmpsl
jge
clc
loop
out
mov
mov
cld
or
mov
ds
add
xor
pop
addr16
bound
sbb
jnp
std
cltd
mov
enter
or
inc
mov
sub
jae
imul
and
in
pop
mov
pop
fimull
ljmp
test
jmp
cmp
xchg
aaa
xlat
xchg
jmp
js
insl
lahf
and
mov
or
insb
add
nop
sbb
negl
xchg
mov
add
leave
jecxz
mov
mov
dec
call
mov
mov
jne
scas
mov
movsb
sbb
lahf
jg
dec
push
in
or
xor
xchg
cs
and
jne
or
insl
ljmp
hlt
cmp
call
push
xchg
les
adc
xor
dec
daa
lods
pop
pop
inc
xchg
xchg
js
in
test
sbb
fwait
lods
aaa
mov
xor
popa
and
push
mov
or
mul
sub
sbb
mov
pop
leave
cmp
jecxz
je
shll
sbbl
mov
cld
jge
jae
test
adc
jae
popa
scas
js
sar
xchg
popa
mov
mov
stc
push
sub
adc
xchg
movsl
jl
shrb
popf
sub
call
pop
cmp
aad
cli
push
sub
aad
scas
mov
sbb
mov
js
or
data16
and
clc
inc
adc
sub
popf
sub
add
xor
pop
sbb
or
pop
ja
adc
and
mov
mov
mov
imulb
xchg
fwait
mov
mov
leave
xchg
ficompl
stos
aad
shr
xchg
mov
cmpsl
out
testl
mov
jp
lds
rorl
xchg
call
sti
cmp
jg
dec
mov
mov
xchg
cvtdq2ps
mov
xchg
adc
sbb
sbb
inc
and
bound
inc
ljmp
lock
in
inc
sbb
fdiv
adc
sbb
sub
add
ucomiss
cmp
xchg
imul
lsl
ret
pop
jne
fdivrs
push
xor
loope
jmp
scas
cltd
jno
mov
out
cmpsb
mov
and
pop
jno
xchg
push
repz
adc
mov
fildll
rol
and
mov
rcl
mov
popf
outsl
movsb
stos
lds
push
sbb
call
or
ss
stos
jmp
movsl
cmp
dec
fwait
sti
loop
sbb
daa
lds
jno
cmp
sub
add
push
sub
mov
sbb
and
mov
enter
repz
int3
lret
gs
fbld
cld
lahf
pop
adc
inc
adc
pop
iret
dec
lret
inc
movsl
mov
push
mov
dec
xor
mov
adc
adc
fsubs
andb
addb
sti
lahf
inc
jbe
ja
in
loope
sub
fbld
je
push
add
mov
sub
jmp
pop
inc
int
ss
test
push
mov
mov
arpl
jno
xorb
pop
pop
pop
test
and
lods
lret
rorb
pushf
push
mov
push
sbb
cld
aad
cmp
or
or
cmpsb
icebp
adc
addr16
jo
fisubl
jmp
idivb
shll
das
int3
fwait
and
dec
dec
out
repz
push
outsb
pushf
sub
cmp
add
leave
sub
mov
or
push
pop
cmp
stos
push
jo
inc
inc
mov
sarb
or
out
cmpsl
enter
enter
mov
lea
jne
aam
out
fucomi
insb
mov
les
orb
jmp
or
xchg
mov
fistps
popf
mov
nop
pushf
or
jo
loop
mov
mov
rorl
out
mov
pop
cmp
sahf
bound
loopne
dec
adc
xchg
and
cmpsb
inc
fbstp
inc
in
out
inc
cmp
lsl
dec
pop
ret
dec
sbb
fisubrl
loopne
popf
mov
movsl
bound
mov
mov
pop
jae
jns
lods
and
cmp
or
lods
call
add
hlt
xchg
lret
icebp
jnp
adc
in
fnstsw
outsl
scas
cmp
ljmp
pushf
add
cld
out
pop
dec
fnstsw
inc
fwait
imul
in
stc
sub
in
xchg
clc
xlat
push
jb
cs
pusha
push
gs
enter
das
or
je
adc
cmp
dec
dec
mov
mov
adc
popf
leave
dec
aam
mov
push
inc
out
stos
fbstp
mov
sti
xchg
add
cmp
ret
jo
or
push
ljmp
aas
adc
std
lcall
lea
xor
ja
clc
mov
mov
aam
in
cmp
subl
ss
push
insl
jge
aas
sub
jle
dec
cmp
aas
test
out
notl
lret
sbb
outsl
add
cmp
or
mov
push
inc
xlat
xor
jecxz
and
xchg
sbb
gs
sahf
xor
pop
mov
mov
mov
lret
jb
shll
mov
lods
mov
xor
lea
stos
jb
mov
in
shlb
je
or
push
fidivs
fsubrs
mov
mov
sbb
mov
lods
inc
push
test
sbb
sub
lahf
cmp
mov
lret
mov
push
jno
leave
or
out
xchg
aaa
mov
pop
mov
stos
jmp
test
lar
push
dec
dec
nop
push
popa
lock
mov
push
hlt
mov
cmc
xor
sub
mov
pop
inc
and
jp
shl
bound
loopne
movsl
lds
cmp
adc
ret
sub
push
loop
mov
mov
dec
push
add
pusha
hlt
pop
jle
xchg
cmp
incb
pop
das
ljmp
add
in
scas
lods
fildll
orb
or
mov
cmp
das
pop
ss
lods
lret
mov
out
cld
shl
loope
cmp
mov
inc
mov
push
push
jae
and
xor
test
cmp
scas
push
mov
add
repnz
dec
and
adc
jg
in
jmp
stc
jnp
xor
mov
push
je
push
loop
and
jo
cmp
and
adc
stc
rorb
or
pushf
inc
mov
jge
dec
sahf
aad
test
cmc
adc
sbb
cmp
sub
xor
pop
sub
inc
inc
fnstenv
xchg
jecxz
mov
inc
ljmp
mov
jl
cmp
pop
clc
mov
dec
loope
shl
inc
and
pop
fbstp
mov
adc
sbb
pop
dec
jae
cmp
jnp
notb
xchg
xor
int
pop
inc
and
andb
in
cmpsl
sahf
jb
add
fimull
cmp
shrl
push
loop
pop
cmp
lret
mov
sbb
adcb
das
js
cmp
push
fucom
adc
fisttpl
add
into
cmc
sub
cmp
int
jl
add
mov
dec
jns
xchg
fiaddl
std
lock
sub
rorb
push
lock
pop
lcall
pop
xchg
ljmp
sub
or
out
and
jae
in
jg
popf
mov
xor
aas
lea
and
cmp
lock
adc
cli
lods
mov
lret
jmp
add
shlb
popl
jl
dec
int3
and
rcr
in
cld
add
imul
cmp
rcll
in
push
outsb
add
icebp
add
mov
adc
sub
push
insb
add
inc
mov
std
mov
iret
add
push
and
inc
fsubrs
add
insl
out
inc
imul
pop
fucomi
and
and
arpl
mov
push
sti
xchg
mov
cwtl
outsb
lahf
leave
mov
enter
stos
lret
out
push
cld
xor
enter
mov
mov
add
add
aaa
jae
in
mov
out
pop
mov
xlat
insl
add
jp
mov
pushf
les
pop
pop
incb
repnz
pop
inc
and
jae
loop
in
jecxz
lea
shl
les
dec
dec
cld
cmp
lcall
push
repnz
fistps
rcl
bound
inc
mov
loope
daa
push
fstps
std
xor
sbb
sarb
sbb
adc
mov
xchg
std
dec
fsubrl
ss
sti
sbb
mov
dec
push
and
fwait
sbb
or
movsl
or
hlt
add
das
cmp
cld
sbb
outsb
shr
pushf
and
xchg
or
out
jmp
adcl
ss
dec
cmp
mov
push
push
xchg
xlat
jge
sub
pop
jnp
sahf
lea
sti
mov
in
scas
in
cmp
xchg
cmc
adc
mov
push
fistl
adc
push
leave
jbe
repnz
push
pusha
jb
add
js
test
call
mov
push
push
jl
sub
dec
cmp
mov
lcall
dec
push
sub
adcb
mov
and
test
sbb
lock
stos
das
xchg
mov
sub
test
or
ss
dec
inc
cwtl
or
decb
es
xor
inc
xchg
andb
loop
test
aaa
sbb
jmp
fidivrs
shlb
repz
jl
sarb
dec
jecxz
mov
aaa
movsl
cmpsb
rcrl
aaa
incl
cld
sub
xchg
cmpsb
jmp
mov
adc
call
sarb
cltd
loopne
add
push
aas
or
xchg
out
aad
in
inc
xor
and
stc
adc
lahf
ret
dec
stos
in
inc
and
lcall
cmp
mov
outsb
enter
cmp
or
cwtl
adc
icebp
adc
adc
push
movsb
incb
cld
xor
xor
scas
pusha
setge
mov
and
sbb
popa
pop
insl
stos
xchg
jmp
sub
mov
lock
lock
shlb
or
jbe
mov
fisubl
xor
or
inc
mov
mov
or
imul
fidivrl
pop
push
inc
dec
lods
pop
cmp
loope
xor
fnstcw
sahf
shrb
mov
repz
mov
pushf
push
or
mov
xor
or
add
jb
scas
xor
sti
push
cmpsl
xchg
shl
js
mov
dec
loopne
fistps
daa
shrb
ficoms
xchg
cmp
or
jg
repnz
fistpl
mov
ficoml
neg
mov
in
enter
sbbb
cwtl
xor
frstor
cmp
or
test
and
add
cmpsl
incb
adc
or
mov
ljmp
les
sbb
int
dec
sbb
pop
and
or
mov
push
rdmsr
mov
push
cmp
xor
sbb
lret
mov
fdivr
les
test
push
dec
hlt
fnstsw
pop
xchg
testl
das
in
stos
mov
repz
rclb
jmp
mov
xchg
divb
jo
les
test
push
sahf
xlat
cmp
push
das
mov
adc
adc
mov
pop
mov
mov
shlb
sbb
lock
pop
add
and
or
cpuid
cmp
and
mov
lretw
bound
mov
rcrb
mov
dec
mov
rclb
inc
frstor
fidivrs
ljmp
pushf
loope
daa
outsl
cmp
ljmp
push
out
test
pop
cmp
pushf
or
xlat
scas
mov
aas
cmp
ss
fisttps
stos
jp
test
aas
cmpsb
fistpl
scas
lret
sarb
in
ss
inc
ja,pn
mov
push
pop
lock
xchg
sub
mov
push
in
rol
dec
cmp
stos
clc
pushf
xor
push
movsl
cmp
or
dec
loope
fmul
iret
mov
jmp
mov
icebp
push
xchg
mov
adc
or
push
jmp
cmpsb
lock
xor
sub
clc
pop
lds
xchg
rcrl
out
xchg
mov
mov
cmp
jg
push
ljmp
lcall
out
or
sub
in
jle
ret
std
xchg
cmc
stos
stc
popf
xchg
repnz
lcall
data16
fnsave
aas
mov
lret
cli
lret
int3
arpl
sbb
push
jmp
dec
aad
flds
xor
aam
aad
cmpsb
push
pop
pop
repnz
sahf
xor
out
fildl
or
mov
cmc
pop
loopne
leave
adc
adc
lcall
sub
test
loopne
add
add
fsubrs
and
mov
push
fs
cltd
adc
inc
mov
jnp
cwtl
xor
xchg
data16
gs
loopne
add
xor
push
mov
push
xchg
sub
scas
jp
loopne
or
xor
stos
inc
pop
lcall
xor
pop
mov
jnp
xchg
je
add
mov
cmp
pop
aad
mov
inc
mov
adc
inc
fidivl
punpckldq
mov
cmp
movsl
jo
cld
xchg
lret
xchg
sub
ret
mov
jecxz
adc
pop
pop
push
subl
jl
sarb
adc
pop
inc
xor
xchg
arpl
jl
mov
mov
test
inc
fsubrs
dec
cmp
jl
add
in
and
xor
pop
adc
mov
xor
jl
lcall
mov
pop
repz
add
pop
xor
xchg
sub
dec
loopne
fnstenv
or
sbb
dec
out
jo
pop
rcrb
sub
sbb
gs
in
mov
rolb
in
aaa
sbb
nop
dec
in
cmp
pop
fstps
or
imul
adc
in
lea
loopne
sbb
adc
inc
in
daa
mov
or
mov
xor
js
inc
in
ret
pop
and
repnz
std
xchg
sub
adc
inc
jmp
cmp
fidivrl
or
mov
or
adc
lar
add
adc
mov
dec
out
shrl
lds
testl
push
inc
cltd
xor
pop
movsl
xchg
mov
ret
dec
loope
in
loopne
adc
pop
scas
arpl
cwtl
mov
clc
out
fildll
pop
inc
ss
push
mov
adc
mov
mov
jno
xchg
xchg
mov
or
jae
lds
test
int
dec
cmp
jl
out
cwtl
mov
xchg
in
dec
in
aaa
in
push
les
mov
mov
fwait
xor
leave
xor
shlb
stc
mov
push
in
leave
xor
jb
pop
ds
mov
xor
leave
cmp
shlb
test
pushf
int3
arpl
dec
loope
addb
jbe
call
fcoms
aam
dec
jl
jg
and
ficoml
cli
adcl
xchg
xchg
push
mov
pop
cltd
xor
mov
xchg
leave
inc
mov
jns
cmp
xchg
mov
ss
and
imul
sbb
mov
xchg
insl
mov
test
ja
iret
movsl
sub
jecxz
int
pushl
cmc
movsl
sub
mov
jae
lds
js
int
sbb
xchg
dec
jl
imul
push
and
rcr
mov
pop
ds
adc
movsl
dec
xchg
jle
enter
add
jno
adc
inc
xchg
jp
ret
sarl
outsl
adcb
cmovae
jl
add
mov
loopne
lcall
or
xchg
sbb
dec
addl
stos
or
cltd
sbb
ja
loopne
rclb
jno
push
pop
ss
clc
pop
out
pop
push
push
loopne
xchg
pop
hlt
xor
out
outsb
pop
push
add
test
je
cmp
out
hlt
mov
pop
loop
mov
push
in
inc
popf
shlb
aad
out
inc
lock
mov
xchg
hlt
stc
sub
outsl
je
rclb
data16
out
adc
inc
and
push
iret
pop
scas
std
fsubrl
adc
adc
fnstenv
cmpsl
fnstenv
ret
repz
out
xchg
test
mov
out
jp
xchg
stos
and
push
xchg
or
dec
loop
cmc
xchg
sub
adcl
pop
jne
adc
lds
add
adc
fbstp
xor
testl
mov
fiaddl
ret
mov
jge
and
shrb
stc
inc
pop
inc
fimull
test
popf
adc
stos
inc
test
mov
push
js
inc
or
mov
and
sahf
or
jl
sbbl
adc
or
cmp
jno
lods
loop
and
jae
mov
jg
lcall
pop
repnz
andb
out
adcl
aaa
or
mov
or
lahf
aaa
pop
cmc
push
mov
fwait
loop
jae
pusha
cmp
sbb
jmp
test
fdivl
jecxz
bound
jbe
pop
div
scas
inc
xlat
pop
mov
inc
pop
out
ja
xor
cmp
sub
pop
pop
sub
stc
mov
and
and
push
aas
xchg
test
into
scas
inc
cld
loope
jae
push
into
gs
xor
jo
aaa
cmpsb
test
xchg
rorl
sbb
jb
sbbb
insl
std
xchg
fwait
ja
pop
movsl
mov
push
in
std
adc
dec
and
xchg
push
imul
movsl
mov
and
push
cmp
fisttpll
fcomi
mov
addr16
scas
jnp
loope
xlat
outsb
in
add
sahf
cmp
sbbb
movsb
cmpsb
cmp
fdivp
scas
inc
sub
aam
xor
pop
adcb
mov
jb
xlat
stc
and
das
push
ljmp
cmpsl
cmp
fldenv
scas
lds
mull
pop
jg
aam
ja
mov
lret
dec
and
push
xor
ja
int
jno
inc
fmulp
xchg
imul
pop
jmp
shrl
cmp
adc
xchg
pop
sahf
ret
jecxz
les
jmp
es
cmp
add
dec
loopne
jae
rcr
decb
add
in
mov
xchg
rcrl
mov
faddl
lahf
leave
pusha
into
inc
pop
repz
jno
subl
mov
inc
cli
xchg
jae
jmp
mov
lcall
fsubr
lret
cmp
lock
loop
pop
add
test
inc
push
push
mov
mov
dec
sbb
jp
cmp
jo
xor
addr16
and
pop
aad
mov
in
jae
cmpsb
dec
stos
mov
dec
push
mov
mov
pop
ret
jle
movsl
pop
sub
sti
aam
sub
and
sbb
ljmp
push
or
add
pop
xor
and
push
sub
arpl
inc
dec
sub
inc
jns
lods
pop
insb
cmp
cwtl
lea
pusha
popf
jns
popa
inc
sbb
mov
ja
sahf
xchg
test
xchg
sbb
push
jno
ds
stos
fwait
inc
orb
dec
outsl
mov
sbb
mov
test
sbb
xchg
or
and
mov
mov
sbb
jns
rorl
pop
adc
inc
lods
jl
push
dec
mov
pushf
mov
ja
sbb
dec
mov
pop
adc
xchg
xor
push
jbe
dec
mov
pop
mov
lock
jmp
mov
insb
and
imull
push
jb
cmpsb
mov
ret
loop,pn
call
cmp
test
jmp
sahf
mov
loopne
into
lds
or
jle
sub
mov
testb
mov
and
and
shlb
bound
stc
push
add
mov
in
pop
into
mov
push
xor
mov
push
push
or
cmp
sbb
mov
hlt
dec
mov
addr16
cmpsl
xchg
xchg
adc
fcom
push
decb
mov
std
jp
xor
int3
pusha
fs
xor
adc
repz
push
addl
xor
sub
jle
cltd
xchg
ss
test
mov
fisubrl
call
scas
cli
pop
sub
jae
jg
das
dec
push
mov
inc
jo
popa
jg
mov
outsl
jno
xor
fnsave
push
and
jb
xchg
dec
pop
in
das
fs
test
push
xchg
inc
add
je
inc
xchg
mov
clc
push
mov
pop
repz
mov
and
pop
adc
aaa
jmp
inc
lahf
and
and
in
imul
pushf
and
add
add
stc
inc
scas
andl
sbb
mov
push
jmp
insb
lcall
orb
and
xchg
pop
push
or
mov
daa
loopne
mov
jp
call
mov
int
ret
fmul
pop
cmpsl
std
sbb
negb
jbe
aad
mov
adc
hlt
xchg
push
leave
out
cmp
mov
adc
xchg
xchg
jbe
unpcklps
sbb
cmp
out
xor
inc
aaa
out
aaa
ror
loopne
or
xor
loop
in
jl
jg
stos
icebp
sbb
leave
out
fsubrl
push
sbb
mov
cltd
mov
pop
adc
jecxz
ja
sub
jmp
jne
popf
cli
xor
mov
std
xchg
and
mov
imul
mov
sbb
adc
pop
cwtl
ss
push
mov
mov
push
int3
icebp
xchg
out
cs
fcoml
xlat
scas
lds
ret
test
push
fisubl
pusha
stos
int3
jns
dec
dec
fisttpl
loopne
mov
int
test
jb
movsb
push
mov
sub
inc
mov
adc
popf
pop
hlt
mov
add
clc
xchg
lcall
cmpsl
ja
cmc
xor
lock
jl
fldt
cmpsl
test
testb
in
inc
and
xor
fimuls
test
jmp
pop
mov
test
xor
cli
mov
mov
adc
jle
fistl
imul
into
sbb
sub
or
adc
loope
push
lcall
xorl
inc
sahf
push
inc
fdiv
mov
adc
jae
xchg
add
aas
and
cmpb
xchg
sub
addr16
xor
out
sbb
jo
clc
sub
push
lcall
dec
mov
jno
inc
outsb
add
sub
test
jb
mov
mov
faddl
pop
test
jle
std
out
sbb
mov
mov
sbb
pop
shl
jnp
mov
and
fildl
or
lret
loopne
repz
loop
fcoml
or
push
xchg
lret
loopne
mov
loope,pn
xchg
popl
sbb
inc
pop
lea
popa
jl
inc
push
xchg
jge
inc
pop
aam
cmp
cmp
xor
jb
fmull
xchg
nop
adc
xchg
cmpsb
daa
adc
lock
push
out
lds
loope
daa
jmp
lret
lock
fildll
mov
and
mov
fs
xchg
mov
call
cmpb
in
stos
inc
mov
inc
jle
mov
push
sub
sub
popa
mov
xor
je
pop
mov
inc
xor
pop
mov
xlat
pop
dec
xor
jle
cs
cmp
pusha
movsb
sub
sahf
bound
shlb
inc
pop
xor
movl
cwtl
mov
shrb
pushf
int3
xchg
xchg
int3
mov
outsb
mov
fdivr
dec
ror
test
lock
je
xchg
cmp
sub
sbb
stos
stos
aaa
int3
xor
mov
in
lea
ds
movsb
pop
js
xor
push
pop
rorl
sub
sbb
ds
scas
xor
lcall
add
adc
cmp
push
in
outsl
push
mov
loop
mov
and
and
cmp
das
mov
shlb
add
inc
mov
movb
stos
inc
aas
mov
imul
ds
xchg
cmpsb
imul
xchg
mov
addr16
aas
jle
inc
cmp
insb
mov
cmc
push
imul
pop
push
int3
divl
loop
mov
add
pop
xlat
sbb
pop
mov
pop
aam
adc
out
aad
mov
dec
frstor
insb
pusha
test
fsubrl
dec
loopne
std
push
int
imul
dec
shrl
hlt
jmp
mov
je
or
add
mov
mov
dec
inc
mov
pop
arpl
dec
jno
clc
jae
xor
outsb
ds
andb
into
xlat
mov
and
jecxz
push
jmp
test
inc
fisttpl
push
int
imul
mov
push
push
popf
test
xor
inc
es
js
jmp
mov
push
ss
ljmp
xor
mov
bound
cltd
xor
mov
imul
mov
bound
xchg
xchg
jl
divl
xor
es
enter
jmp
out
fisttpl
movsb
fiaddl
xchg
rorb
stos
inc
mov
xchg
mov
shl
sbb
lret
loope
out
xor
data16
es
insb
mov
inc
cmp
mov
push
in
inc
outsb
xchg
sbbb
xchg
xchg
jle
mov
xchg
js
lret
xor
ret
fldcw
pop
mov
mov
iret
movsl
jp
or
daa
fnstsw
flds
in
ret
shrl
pop
hlt
and
jecxz
movsl
fwait
xchg
add
test
jb
sub
dec
pop
sub
imul
in
xor
jne
jb
stc
inc
inc
rcrb
cmpb
movsb
popa
pop
je
mov
xchg
sub
adc
or
dec
aam
ss
fbstp
arpl
jb
jecxz
cmp
pop
and
add
add
in
jmp
test
sarl
out
mov
pop
fsubs
or
sub
repz
popl
inc
push
add
mov
pop
insl
cli
clc
dec
shll
sarb
fdivl
xor
stos
xchg
xchg
add
push
push
imul
pop
jge
in
jg
xor
je
inc
outsl
mov
lret
and
and
jg
imul
in
inc
mov
inc
ret
and
rorl
jns
add
test
xchg
xchg
xor
adc
cmpsb
addr16
ret
xor
xchg
mov
jge
les
ljmp
sub
push
cli
sbbb
jno
int3
inc
push
out
push
adc
mov
out
and
jge
les
repnz
loop
sub
je
stc
xchg
test
dec
sarb
shrb
or
mov
ss
lcall
jge
jl
push
in
push
popf
and
sbb
test
xchg
sbb
and
dec
les
std
aaa
icebp
lds
jns
cmp
sbb
outsb
cli
call
aaa
popf
mov
leave
cld
lret
mov
mov
ljmp
outsl
or
jmp
mov
fistl
loopne
xchg
push
aaa
jmp
stos
push
or
ljmp
dec
cmc
cmp
mov
mov
push
or
idivl
push
jb
cmp
mov
repz
setb
sub
mov
cli
push
push
outsl
mov
sbb
sub
xchg
test
sub
push
push
cltd
movsb
cwtl
lret
jmp
shr
mov
pop
mov
ffree
dec
lahf
jecxz
adcb
add
fistl
sbb
dec
and
pop
into
push
or
xlat
movsb
int3
fiadds
in
sbb
add
or
cmp
add
stos
outsb
leave
pusha
mov
ret
aad
fiadds
mov
mov
in
test
and
add
outsl
pop
mov
fs
jns
mov
imul
push
sbb
xchg
in
sub
sbb
int3
cmp
mov
dec
cmp
jnp
jbe
jne
adc
mov
pusha
repz
and
dec
add
ss
jbe
data16
xchg
ss
sbb
mov
jo
cmpsb
dec
repnz
lret
mov
notb
sbb
ret
dec
mov
adc
adc
push
pop
mov
dec
mov
xor
imul
xor
inc
add
mov
pop
icebp
cs
mov
js
enter
xor
jne
cmpsb
cmp
xchg
jl
daa
and
jae
or
rclb
inc
es
cmp
cld
es
mov
mov
jno
lret
stc
iret
gs
xor
lret
je
fmulp
mov
popa
ret
cmpsl
add
add
mov
orl
pop
out
sbb
mov
sbb
aas
mov
frstor
ljmp
push
in
scas
insl
rclb
repz
ret
push
sbb
jns
mov
test
fidivs
pop
hlt
loope
dec
mov
icebp
xor
sbb
fsubl
outsb
mov
mov
pop
repnz
add
mov
push
ss
sbb
outsl
pushf
pop
shll
add
pop
mov
lret
fcoml
sbb
xchg
xor
pop
push
ret
lds
sub
add
enter
jbe
ds
scas
jmp
fcom
decl
add
ret
inc
mov
cli
fistpl
mov
fisubrs
xor
leave
insb
mov
mov
imul
add
or
cli
jmp
rol
inc
mov
mov
sbb
xchg
push
jecxz
jb
jno
xor
jmp
mov
ss
lds
add
les
imulb
loopne
inc
mov
pop
xlat
sbb
jg
mov
aam
arpl
jmp
inc
into
popf
mov
sbb
ret
cwtl
mov
aas
ret
lcall
iret
sbb
pop
lcall
popf
cwtl
stos
flds
mov
ret
xchg
add
repz
jle
pop
enter
push
push
aam
std
cli
sub
inc
cmp
add
leave
push
mov
and
adc
les
fsts
loop
mov
add
push
mov
shll
movsl
outsl
ret
pop
rcr
fcomps
xor
fdivrl
enter
adc
addr16
inc
sar
daa
ljmp
dec
in
sbb
mov
mov
push
mov
adc
dec
scas
mov
mov
movsb
sbb
sub
jl
stc
and
inc
icebp
dec
imul
aaa
xlat
cmp
sbb
fdivr
clc
inc
mov
cli
scas
xorl
cwtl
dec
sub
jo
test
push
or
inc
stos
push
mov
fstps
imul
pop
hlt
imul
sub
inc
mov
sti
sbb
scas
mov
ljmp
xor
or
insl
inc
mov
cmovnp
xor
jl
sahf
dec
ljmp
pop
aam
inc
rcrb
jmp
aam
adc
sbb
test
test
loopne
push
inc
xchg
mov
xchg
mov
xor
jae
jo
in
dec
loop
aam
mov
and
push
mov
inc
rcrl
jecxz
insl
xchg
cmpsl
aas
repnz
mov
and
sbbl
sbb
push
cli
cmp
and
pop
frstor
testb
jge
negb
test
push
lret
pop
dec
mov
ja
cmpb
mov
dec
test
cmpsb
mov
repz
aam
sub
out
cmp
fsubrl
cmp
in
add
test
mov
popa
cltd
lret
ljmp
jmp
mov
xlat
nop
xchg
mov
jne
mov
cmp
pop
inc
mov
movsl
xor
nop
negl
rcrl
jo
jp
add
shll
arpl
out
cmp
mov
dec
aam
imulb
ljmp
mov
jo
iret
out
adc
fidivs
ror
in
xor
icebp
stos
jno
scas
leave
pusha
loope
dec
sbb
out
jae
ret
push
fildl
mov
mov
dec
push
in
cmp
loopne
inc
les
arpl
mov
jmp
inc
inc
lods
fwait
xor
push
scas
jb
aas
pushf
addl
int3
lock
or
out
negl
mov
mov
add
fadds
jp
outsl
int
dec
mov
aaa
pop
jo
addr16
push
cmc
data16
aaa
mov
cmp
mov
sbb
inc
mov
out
jnp
pop
scas
pop
lcall
xchg
add
std
push
loopne
pop
shll
test
mov
sub
data16
xor
lods
pusha
gs
iret
cmpsl
push
lcall
cmpb
rcr
inc
mov
push
mov
mov
add
mov
jnp
pop
xabort
subb
ss
push
insb
loopne
cmp
xchg
pop
dec
dec
scas
inc
ret
lds
sbb
insb
dec
xor
xchg
push
add
cwtl
pop
jg
pop
cli
pop
cmc
sub
pusha
lahf
xchg
dec
dec
mov
lods
pop
popa
clc
cmp
andl
scas
inc
rcr
pop
ror
repnz
mov
sub
cmp
mov
sbb
cs
std
sub
out
sbb
push
push
push
cwtl
nop
push
xchg
mov
cmpsl
inc
jmp
dec
iret
fs
jg
daa
inc
mov
mov
mov
mul
push
mov
and
les
test
push
mov
jle
push
aad
cs
sbb
sub
jp
mov
hlt
xchg
inc
in
subl
push
icebp
es
lret
divb
fiadds
sub
xor
rcll
push
sbb
loopne
pop
mov
cld
lods
pop
sar
imul
dec
lods
jo
lds
outsl
push
fbld
sub
sti
sub
and
and
pop
leave
pusha
shl
pop
enter
mov
std
mov
mov
cmp
xchg
sub
mov
sub
lock
cmp
aad
cmp
repz
rcll
rorl
xchg
cmp
xchg
mov
mov
dec
std
imul
into
loope
mov
int3
and
faddp
insl
lahf
fcmovu
or
sbb
lock
jns
sub
jge
leave
push
xor
xor
mov
or
mov
das
loope
push
std
xchg
mov
push
pop
sti
jle
out
dec
mov
adc
or
push
je
and
call
test
je
inc
xchg
push
jmp
push
sbb
imul
and
and
popl
rorl
mov
adc
add
in
aam
shr
lods
adc
jge
xchg
js
imul
and
test
sbb
jbe
inc
enter
test
mov
fildl
rol
aaa
les
lods
pop
lcall
sub
mov
flds
cmp
fadd
cmp
cmp
inc
jnp
shrl
pushf
sahf
jbe
jmp
mov
gs
adc
pop
shll
repz
inc
and
fidivrl
ret
pushf
popa
mov
mov
push
enter
dec
daa
xchg
clc
add
xor
inc
lret
xor
in
jl
inc
les
out
pop
pop
aaa
sti
aas
jle
daa
dec
lahf
inc
leave
sbb
xchg
and
cs
aam
mov
adc
aas
add
aas
test
lret
mov
repz
enter
mov
lret
nop
or
imul
mov
in
std
or
pop
adc
sbb
fmull
or
in
jnp
cmp
jl
and
jmp
mov
fcoms
idivb
pop
xor
pop
in
iret
callw
popf
cmp
pop
les
xchg
jl
dec
sub
pop
jnp
xor
pop
cli
and
adc
fs
jne
addr16
cmp
cmp
test
aam
cmp
or
jns
pusha
fdivrp
and
aaa
mov
dec
test
cltd
mov
jge
sub
mov
lea
cmp
jle
jne
sbb
push
movsl
js
test
fwait
inc
enter
bound
cs
pop
mov
popf
cmp
lcall
movsb
mov
lret
loop
xor
dec
psubsw
xor
les
insb
out
dec
sbb
xor
mov
cmp
mov
add
or
adc
movsl
inc
xchg
mov
fnstcw
hlt
mov
add
call
nop
hlt
and
mul
jns
mov
fistl
arpl
dec
ffreep
inc
enter
dec
into
mov
dec
imul
and
dec
les
inc
cmp
push
cmp
mov
xchg
or
fidivl
outsb
xchg
cmc
xor
out
mov
push
movsl
inc
xchg
push
rorl
push
loop,pn
pop
leave
push
pop
popa
sbb
pop
jecxz
jp
inc
scas
cltd
test
dec
dec
push
mov
int
cmp
sarl
notb
add
mov
repz
test
fisttpl
lock
sub
jnp
loope
xor
fwait
cmpsb
xor
xchg
fwait
push
dec
mov
jmp
test
dec
pushl
mov
sub
sub
dec
flds
jecxz
imul
addb
jmp
jbe
rcr
add
in
mov
movl
and
cmpsb
subl
ret
popf
pop
mov
movsb
adc
sti
inc
sub
push
push
cmp
mov
dec
fmull
sub
in
das
and
cs
jae
dec
xor
cmp
mov
sbb
push
test
xor
data16
imul
stc
pop
ror
fmull
lds
in
aam
xchg
pushf
cmc
inc
cmpsl
mov
pop
ret
ret
sbb
xor
and
insb
dec
xchg
xlat
adc
nop
xchg
sbbb
cwtl
movsl
popa
psraw
push
mov
pop
cmp
imul
or
sub
leave
pusha
inc
pushw
cli
cmp
adc
dec
sbbb
lcall
sti
push
addr16
xchg
cmp
pushf
jg
jo
sbb
pushw
cld
cmp
std
xchg
add
add
out
and
xchg
mov
leave
push
jp
or
lods
inc
daa
xor
pop
xor
mov
scas
sbb
popf
xchg
test
sbb
jo
fldenv
mov
sbb
xchg
rorl
jp
mov
sbb
es
fsincos
es
or
imul
mov
mov
inc
cltd
pop
out
mov
in
daa
push
nop
pop
push
cmp
in
mov
in
add
adc
cmp
or
sub
adc
fmuls
in
xchg
jns
imul
jecxz
add
or
mov
out
xchg
orb
jo
and
gs
insb
test
mov
mov
std
imul
fs
stos
mov
addl
push
das
arpl
mov
xorb
xchg
aad
inc
fidivrs
negb
mov
pop
gs
mov
iret
jns
sbbl
lcall
xor
je
pop
push
mov
sub
fnsave
mov
vpsubq
sbb
mov
cmp
subl
inc
inc
outsl
out
mov
ret
mov
xchg
sub
pop
inc
xlat
dec
pop
mov
cmp
out
pop
iret
data16
dec
in
dec
mov
addl
inc
aam
pushf
xor
cmc
lret
inc
add
and
push
dec
pop
fimuls
cs
pop
leave
popf
xor
addb
adc
cmp
ret
mov
imul
jb
pop
fcom
insl
or
scas
sub
sbbl
cwtl
add
sbb
shlb
aad
and
xchg
push
pop
mov
mov
cmp
out
cmp
dec
cmp
lcall
and
push
aad
jmp
jbe
in
stos
out
fsts
int3
je
cmp
pop
sub
push
scas
jle
sub
mov
push
mov
add
out
ret
sub
cwtl
sbb
mov
inc
sbb
or
nop
js
sub
cmpsb
orb
lret
push
les
dec
inc
call
xchg
insl
and
mov
dec
lahf
xor
loopne,pn
cmpsl
dec
xchg
inc
push
leave
and
sbb
jge
test
dec
push
inc
out
ss
enter
cmp
insb
repz
jnp
mov
adc
cmc
jno
in
fs
jp
insl
lahf
or
sbb
fldcw
pop
mov
and
fiadds
iret
mov
and
movsl
dec
mov
mov
das
icebp
jbe
jmp
inc
ss
ljmp
bound
mov
sahf
sub
ja,pt
fwait
add
shll
sbb
mov
mov
sahf
test
inc
and
repz
in
pop
xor
mov
aad
outsl
and
lea
jb
lret
faddl
sbb
shlb
in
push
movsb
hlt
rcll
add
pusha
mov
pop
jno
mov
mov
lea
loopne
addb
in
sbb
dec
lahf
lds
mov
inc
insb
ljmp
scas
outsl
movsl
in
imul
int
movzbl
insl
mov
lahf
aaa
xchg
aaa
add
pop
jno
in
sbb
jae
add
add
repz
sti
xor
mov
mov
jl
dec
or
push
push
test
pop
pop
xorb
rclb
jl
xor
lods
addr16
mov
push
lret
lret
push
fldt
insl
popa
xchg
inc
dec
movsl
xor
xchg
ljmp
out
jo
call
jp
aaa
stos
inc
lret
and
movsb
scas
sub
lahf
or
insl
add
push
adc
adc
or
in
cmp
push
lahf
dec
lcall
cmp
cltd
mov
and
sbb
sub
into
sbb
decl
and
cltd
and
sub
shlb
jp
adc
int3
or
cmp
ja
cwtl
das
std
cwtl
dec
out
push
mov
inc
lcall
fsubrs
xlat
mov
inc
inc
fnsave
fcos
xchg
lret
aam
lret
lds
pop
data16
decl
mov
ljmp
or
movsb
ja
push
mov
cmp
and
mov
pop
jno
push
pop
outsb
add
jecxz
adcb
sbbl
repnz
mov
pop
xchg
xchg
sub
test
cwtl
sbb
xlat
outsb
sti
xchg
dec
filds
popf
xchg
sub
mov
adc
dec
loopne
pushf
jle
push
mov
pop
add
sahf
xor
sub
push
lcall
stc
cwtl
loope
repnz
sarb
xlat
rcll
dec
pop
scas
jg
jo
adc
dec
dec
pop
roll
pop
cli
dec
pop
int3
mov
cwtl
std
push
xor
xor
pop
ret
pop
rcrb
les
mov
popf
cmp
fisubs
xchg
cs
into
std
pop
inc
dec
nop
rcrl
cmpl
cltd
xor
inc
mov
pop
sub
lea
negb
inc
xchg
ds
mov
aaa
or
lret
inc
jae
or
sub
adc
cmc
and
push
shll
test
adc
cmp
jg
sub
outsl
outsl
test
jg
mov
pop
data16
and
xor
and
sbb
push
jb
data16
jmp
cli
stos
xor
inc
fldl
imul
mov
cmp
out
bound
or
dec
pop
pop
push
add
sbb
cs
mov
cmp
sbb
mov
hlt
inc
fldl
es
ret
mov
cmp
test
popf
inc
movsl
mov
test
notb
add
lods
inc
sbb
and
mov
xor
sub
cmp
jo
fldl
stos
loopne
std
rorb
fdivrs
cltd
inc
cltd
or
cmpsl
sub
pop
add
xor
mov
test
mov
jo
xchg
rcrl
outsb
shll
xchg
jmp
aaa
stc
enter
out
mov
xor
imul
xchg
cmp
mov
xor
or
jp
mov
sbb
lcall
out
or
and
into
dec
loopne
jne
cmp
and
enter
dec
outsb
cltd
adc
loope
add
xchg
loopne
push
sbb
mov
orb
cld
popa
push
mov
mov
and
pop
lods
loopne
rorl
add
pop
adc
fldl
fistpl
mov
push
inc
adc
bound
movl
int
push
aad
push
jo
repz
dec
dec
loop
or
xchg
cmp
mov
lea
test
out
outsb
mov
mov
or
inc
loop
sbbb
xchg
inc
cwtl
and
out
pop
jp
cld
das
mov
std
out
dec
inc
in
xlat
adc
out
sahf
cmpsl
push
lret
lds
mov
jg
jl
sarb
push
lcall
dec
inc
bndldx
mov
les
cmpsl
mov
and
jnp
hlt
gs
bound
cwtl
xchg
mov
sbb
gs
and
pop
sub
outsb
in
sub
cmp
ret
fldl
adc
out
out
dec
xchg
inc
shl
add
sbb
xor
mov
pop
into
mov
mov
ja
add
test
data16
pop
popa
hlt
xchg
sub
lret
xor
push
nop
inc
cld
dec
push
inc
loope
shll
pop
cld
sahf
sub
or
and
xchg
rclb
adc
movsb
adc
adcl
xchg
outsb
sub
sti
int
ljmp
mov
or
sahf
fnstcw
les
mov
sbb
hlt
pop
out
cwtl
rorl
pop
stc
pushf
push
fstpt
sbb
js
xchg
addr16
add
in
cmp
pop
je
cwtl
rorl
int3
mov
ret
testl
cltd
ror
mov
jecxz
lcall
pop
clc
popf
xchg
dec
or
les
mov
push
jo
sbb
push
dec
or
pop
cmp
les
fbstp
sbb
and
ja
inc
xlat
pop
cwtl
xchg
cmp
pop
add
pop
mov
insl
push
lods
sub
aad
adcb
dec
or
cmp
push
inc
xchg
outsb
in
pushf
test
and
pop
lcall
std
xchg
mov
mov
sub
cmp
pop
negl
mov
fidivrl
and
stos
jge
rcrb
sbb
xchg
mov
pop
negl
cmp
pop
cld
and
and
jecxz
xlat
jg
xchg
inc
pop
xor
pushf
or
testl
dec
adc
push
popf
xor
loopne
cmp
out
add
mov
mov
mov
jne
ret
data16
inc
cld
sbb
sbb
in
jge
push
add
adc
push
out
lret
jno
clc
faddl
inc
daa
lods
stos
jmp
jo
adc
out
jne
inc
inc
or
mov
jg
mov
testl
mov
ds
adc
mov
test
sub
inc
or
cmp
dec
sub
es
and
scas
stc
les
xor
rorb
mov
mov
stos
xchg
out
ss
inc
cltd
inc
scas
xor
mov
movsb
gs
stc
dec
mov
stos
cwtl
jbe
mov
int
lea
ret
inc
xor
in
stos
dec
mov
stos
out
lods
das
adc
inc
or
dec
xchg
cmp
inc
mov
lret
sbb
ss
fs
arpl
jno
daa
pop
or
xlat
dec
or
and
cwtl
inc
sbb
fdivrl
dec
cs
pushf
adc
sbb
xor
mov
mov
push
cli
push
inc
daa
test
cmp
adc
stos
ss
dec
inc
or
add
mov
push
lahf
inc
xor
scas
sub
lret
xchg
add
push
mov
ror
adc
jg
xchg
imul
loop
repnz
xchg
sub
insl
jmp
ss
add
mov
fnstsw
in
adc
lret
and
dec
inc
es
xchg
jno
or
mov
inc
sub
push
sbbb
lcall
xchg
test
lahf
jle
leave
mov
fidivl
aaa
in
or
xor
shll
mulb
or
mov
out
push
push
je
mov
cs
inc
movsb
mov
and
cmpsl
xor
cmp
enter
xchg
imul
ret
pop
xlat
orl
jecxz
aam
fidivrs
cmp
and
sar
cmp
mov
mov
and
xchg
ds
pop
leave
pop
cld
sbb
pop
clc
popa
aaa
repz
clc
addr16
sub
nop
loop
jmp
lcall
or
mov
cs
xor
js
sub
jp
stos
sub
data16
cltd
outsl
out
mov
push
jo
ljmp
adcb
pushl
push
dec
push
mov
sahf
popf
inc
mov
scas
jecxz
int3
push
in
sahf
sbb
mov
mov
push
idivl
stos
ss
sub
sbb
rorl
cmpsl
aad
add
cmp
pop
ret
jl
bound
dec
loope
sbb
fldl
mov
sub
lods
or
push
iret
pop
pusha
fdivrl
popa
out
add
cld
pop
in
pop
pop
aad
divb
fisubl
pushl
and
jecxz
sti
cmp
out
cmp
lret
outsb
add
cmp
cwtl
hlt
mov
mov
mov
lods
aam
loopne
push
pop
hlt
or
add
cmp
imul
mov
imul
sbb
sub
ja
push
incl
outsb
outsb
jmp
dec
mov
pop
hlt
leave
imul
jmp
xchg
cmp
xchg
or
cmp
pop
adc
dec
push
out
test
mov
push
sti
iret
jg
or
sbb
orb
in
pop
sub
ja
scas
or
mov
adc
add
pusha
in
int3
push
cmp
testl
sbb
pop
add
mov
xor
push
fbld
cmc
pop
adc
jo
inc
inc
leave
xchg
cmp
dec
adc
and
mov
mov
xor
repz
sub
out
cmp
mov
aam
or
into
add
popa
addr16
bound
push
pop
jns
mov
jne
push
aam
outsl
pop
cli
aaa
mov
or
pop
orb
add
shrl
jbe
arpl
mov
cmp
dec
adc
jecxz
iret
dec
push
stos
sbb
dec
addb
push
ja
cmp
mov
out
lods
dec
out
and
jp
lds
mov
or
pop
mov
xchg
cld
add
loope
in
shl
pop
lret
add
lcall
stc
pop
xor
add
sub
inc
mov
stos
outsb
repnz
fiadds
or
addr16
insb
lock
jne
xor
lods
mov
addl
insl
jmp
lcall
xchg
jbe
pop
jnp
mov
test
xchg
inc
loopne
xchg
lahf
cwtl
cmp
stos
sub
call
cmc
lcall
mov
inc
out
cmpsl
sbb
andl
pop
dec
ds
or
adc
xchg
rorb
loop
cs
repz
jae
movsb
sub
arpl
insl
jge
dec
push
mov
jo
repnz
loope
loop
cmp
stc
arpl
jne
or
adc
mov
mov
mov
jmp
hlt
mov
jo
icebp
jmp
cmp
pop
aas
fwait
cmpsb
cmpsl
inc
push
fs
xlat
adcb
or
fidivs
jne
push
cmp
dec
or
mov
and
xor
movsb
shlb
or
xchg
lods
mov
test
insl
add
lret
dec
stos
sbb
lcall
aad
xor
and
orl
leave
xchg
ds
mov
xchg
jg
dec
adc
xor
fwait
mov
clc
push
fisttps
les
je
sbb
cmpsb
dec
stos
push
pop
xchg
mov
sub
test
mov
xor
mov
cmpsl
inc
adc
inc
popf
jae
iret
rolb
push
popa
push
mov
lock
int
jmp
or
aas
stos
test
std
xchg
mov
adcb
enter
adcb
jmp
popf
pushf
rclb
aaa
xchg
inc
out
adcl
add
in
popf
mov
iret
je
jge
pop
shll
sub
imulb
mov
mov
push
push
idivb
and
mov
cmp
insl
pop
cli
andb
mov
mov
cmpsl
xor
xchg
mov
push
decl
shrl
sbb
xor
nop
pop
std
jg,pt
xor
aam
and
iret
mov
in
imul
add
je
cld
pop
and
arpl
inc
popa
jle
leave
xor
aad
rcrl
and
mov
iret
mov
mov
jmp
lock
test
imul
lahf
pusha
pushf
dec
in
cmp
andl
dec
adc
ror
xchg
lahf
cld
cmp
int3
and
or
and
adc
icebp
pop
push
outsl
and
cwtl
pop
out
jb
int
cs
imul
push
aaa
test
mov
push
push
jb
cmp
dec
fs
jmp
pop
clc
inc
repz
inc
sbb
jecxz
ss
push
add
mov
stc
pop
ret
rcrl
or
mov
jb
dec
fistpll
std
mov
test
adc
fwait
movsl
xor
mov
mov
test
jmp
sub
daa
jge
insl
mov
bswap
test
mov
imul
out
movsb
xor
cli
push
rcrb
ret
dec
repnz
lret
xor
insb
repz
ja
pushf
pusha
in
cli
cmp
scas
inc
sub
mov
xchg
mov
mov
mov
lret
filds
mov
mov
pop
aas
dec
callw
jecxz
out
in
insb
jl
pop
clc
cmp
xor
lahf
push
mov
xor
ja
and
ds
mov
mov
mov
xchg
mov
or
inc
or
loope
jmp
dec
xor
push
push
or
addb
pop
sarb
movsb
mov
mov
dec
cltd
les
ret
lds
ljmpw
xor
and
filds
inc
out
pop
aam
out
pop
add
jbe
in
dec
lods
sub
negb
int3
lahf
cmp
lds
xor
mov
stc
rcrl
add
or
adc
and
inc
shlb
sub
pop
ret
mov
js
dec
mov
sub
rorl
hlt
lods
xchg
test
inc
xchg
inc
xlat
xchg
rcll
roll
or
dec
or
decl
daa
call
stc
test
dec
das
mov
mov
mov
dec
and
mov
push
divl
mov
std
gs
cmpsb
xchg
cmp
lret
psrld
push
mov
incb
push
dec
adc
imul
js
int
adc
mov
push
sub
mov
jecxz
inc
fistps
les
mov
jp
fnsave
mov
rorb
jne
pop
aaa
cwtl
push
out
xor
xchg
dec
sbb
push
pushf
cmp
fists
sub
roll
iret
inc
das
stos
jae
daa
mov
jo
cmp
and
mov
xor
pop
sub
dec
dec
adc
adc
es
push
not
ss
cmp
or
arpl
fs
js
lahf
sbb
dec
mov
mov
lahf
inc
cmp
scas
mov
sub
scas
mov
pop
push
cli
lea
xchg
sbb
mov
cmpsb
lds
pop
neg
inc
pusha
icebp
add
pusha
mov
xor
sub
pushf
daa
js
add
cmp
add
jmp
loope
pop
mov
iret
pop
sbb
push
stos
pop
add
xorb
test
int3
xchg
dec
shr
jne
lahf
jmp
pop
call
cmp
les
mov
aad
fdivs
lcall
pop
mov
add
lods
fs
add
add
cld
sub
push
and
mov
mov
in
xchg
cs
push
pop
out
xchg
mov
repnz
jle
jecxz
sub
lret
cwtl
out
sub
inc
sbb
inc
test
movsl
ja
add
xchg
arpl
or
mov
aad
lock
sbb
lea
lods
mov
iret
into
jmp
sbb
push
fisubrs
jmp
aam
das
pusha
out
cmpb
inc
push
fsubs
pop
or
xchg
inc
inc
push
mov
popf
lods
sub
imul
mov
cmp
adc
and
lret
xchg
cmp
and
stos
mov
fidivrl
push
in
iret
pop
lds
je
mov
sub
iret
mov
push
stc
or
pop
popf
inc
sbb
pop
lcall
dec
orb
push
push
les
iret
incb
sbb
mov
int3
xchg
or
inc
fcoml
pop
clc
add
jnp
cmp
xchg
imul
xchg
inc
and
mov
jno
aas
lahf
xchg
in
je
iret
jg
enter
sbb
ljmp
flds
pusha
pop
cltd
mov
mov
out
or
inc
adc
clc
and
loope
sbb
push
jb
mov
pushf
cmp
lods
jle
loop
mov
inc
pslld
outsb
pop
out
jp
imul
mov
popf
dec
out
aaa
cmp
push
jns
rol
add
lret
les
sub
jecxz
flds
pop
pand
nop
iret
xchg
inc
xchg
mov
mov
and
jno
rolb
pop
ret
movsb
cmpsb
pop
imul
out
cli
mov
call
incl
lret
push
mov
xor
cmpb
fnstsw
pop
mov
cmp
lret
sub
or
fcoms
mov
insl
aam
inc
jg
dec
add
adc
sub
test
ds
add
idivl
mov
fidivl
xchg
imul
cmp
notl
sahf
out
jo
inc
dec
adc
cmpsb
lcall
push
aas
popf
sbb
inc
fdivrs
scas
cmc
data16
out
push
mov
jp
inc
mov
daa
or
mov
fbld
sub
int
cld
std
add
sub
dec
push
fadds
sti
stos
adc
lahf
daa
sbb
sub
or
add
call
jecxz
dec
push
out
mov
arpl
data16
and
inc
outsl
aaa
rcll
cmc
popa
repz
sub
mov
mov
out
lds
cmpsb
out
push
lds
movsb
daa
jo
popf
inc
cltd
gs
inc
xchg
aam
cwtl
aam
ds
test
fisttpll
lret
jl
push
sarl
sbb
push
test
movsbl
rcrl
ds
sub
mov
sbb
sbb
dec
je
loopne
xchg
sbb
cli
lock
push
incl
out
arpl
outsb
pop
jmp
out
popf
mov
in
es
sub
inc
fildl
xlat
push
stc
pop
sub
in
mov
pusha
jp
jmp
xchg
in
xlat
daa
lods
gs
xchg
enter
clc
popa
lret
stos
sbb
out
sbb
pop
insb
pop
add
addb
hlt
push
rorb
in
cwtl
inc
jno
mov
jno
sub
jne
xor
pop
lods
sub
push
inc
jo
cmc
dec
addr16
call
mov
sbb
jg
in
and
sbb
inc
or
dec
push
cli
scas
loop
xor
mov
add
mov
sub
fcmovnu
xchg
adc
rcr
inc
or
add
pop
add
pop
push
out
outsl
repnz
lea
setno
cmp
xchg
mov
pop
sbbl
fcompl
imul
or
int3
outsb
jno
jo
int3
nop
xlat
mov
cmp
jno
sub
loop
gs
pop
lcall
into
dec
adc
je
pop
es
jb
xor
into
sbb
push
sbb
insl
and
mov
mov
js
cmp
popf
mov
sub
xlat
stc
fistl
jecxz
mov
sub
aad
cs
negl
decb
int
inc
scas
sub
fwait
test
notl
adc
lock
iret
mov
int3
mov
adc
push
arpl
xchg
fmull
lret
mov
aad
dec
adc
cltd
outsl
sbb
clc
push
faddl
cmp
test
pushf
das
pop
loopne
adc
scas
xor
mov
xchg
dec
cmc
pop
rclb
lods
inc
or
imul
xchg
sub
std
popf
xor
jecxz
inc
adc
inc
xchg
sbb
adc
mov
mov
mov
mov
pop
lcall
mov
cmpsb
cmp
frndint
pushf
inc
mov
mov
mov
nop
test
xor
orb
mov
cltd
mov
cli
sti
and
pop
ficomps
cwtl
mov
aam
xor
and
pop
loopne
nop
mov
imul
sarb
cli
cmc
pop
add
push
sti
arpl
in
mov
mov
dec
mov
sarb
cmp
pop
xchg
mov
and
fucom
outsb
mov
out
mov
scas
insb
repnz
sarb
jno
pop
or
in
mov
loop
fucom
outsb
dec
push
out
lret
lcall
cmc
insb
sarb
jecxz
bound
mov
jmp
bnd
push
mov
mov
and
mov
mov
push
lds
daa
pop
mov
ret
dec
add
stos
pop
push
int
out
aad
scas
xchg
inc
js
mov
repz
xor
push
adc
je
dec
xchg
xchg
add
rcl
mov
sbb
dec
sub
sub
jae
pop
subl
xorl
mov
add
mov
lods
pop
jmp
mov
inc
push
lods
fiaddl
arpl
cmp
sub
mov
nop
pop
xchg
sarl
dec
mov
dec
roll
fcmovb
or
pop
adc
push
cmp
sbb
inc
xchg
inc
nop
mov
in
push
adc
dec
mov
lods
xor
addr16
into
movsl
sub
jae
aad
je
and
sub
clc
inc
jo
das
in
leave
xchg
pop
cmp
adc
jbe
movsl
sub
mov
cmp
outsb
mov
jmp
out
outsb
int3
fnstsw
push
imul
popf
in
xchg
push
sbbb
mov
add
and
dec
into
xchg
mov
and
test
clc
cmc
adc
iret
imul
xchg
add
dec
outsb
push
xor
sub
imul
mov
jl
mov
sub
cmc
inc
push
or
mov
mov
repz
jge
add
in
mov
stos
cmp
aam
rorb
lods
adc
outsl
or
inc
pop
jecxz
arpl
clc
jp
sbb
fimuls
fiadds
pop
mov
test
pop
add
stos
orb
imull
std
popa
dec
jge
jo
xchg
cmpsl
ss
xorb
test
mov
mulb
mov
push
lret
pushf
lret
scas
sub
cmp
cmp
lahf
cmp
push
add
test
xchg
sahf
sbb
pop
ret
fidivl
and
addr16
sub
fs
loop
mov
dec
jmp
xorb
inc
pusha
rcll
mov
iret
mov
out
xchg
in
outsw
shll
jg
mov
out
pusha
ljmp
flds
scas
jne
xchg
cmp
rolb
rorb
xchg
adc
orb
dec
mov
mov
jae
dec
adc
cmp
in
push
cli
pop
lahf
imul
push
movb
inc
fdivrs
stos
loope
xchg
lahf
pop
shll
mov
lahf
popa
stc
lods
sub
orb
or
add
pop
fs
insl
add
jl
fisubrs
sarl
outsl
aaa
xor
pop
push
daa
and
lock
xlat
out
movsl
mov
mov
mov
mov
xor
outsl
stos
shlb
and
xor
test
lret
fstpl
sbbb
push
cmp
ljmp
xor
push
and
xlat
sbbl
imul
mov
adcl
inc
adc
pop
mov
pop
iret
push
lods
fidivrs
popl
cltd
shlb
mov
add
fwait
pop
jbe
je
lea
xor
mov
inc
push
mov
js
add
addr16
push
dec
ud0
mov
loop
hlt
push
in
testl
icebp
adc
or
lret
pop
mov
fidivs
cltd
inc
in
cmp
push
cld
bswap
mov
cmpsb
mull
xlat
je
in
rclb
jmp
jno
cmp
stos
sub
aaa
push
add
jl
mov
arpl
jns
push
or
mov
fdivrs
mov
push
inc
repnz
add
je
jmp
test
push
xchg
dec
scas
ss
ret
out
fwait
lock
jb
rorl
push
jne
es
cwtl
inc
mov
pushf
inc
outsl
cmpsl
xor
push
dec
fidivrl
push
push
mov
mov
and
sbb
loope
lods
sub
push
movsb
xchg
xchg
sub
adc
mov
aas
stos
cmp
jge
inc
adc
lods
cmpsb
mov
lea
mov
scas
imul
adc
pop
sahf
inc
mov
sbb
xchg
cmp
ret
xchg
fucomi
jne
inc
in
outsl
cmp
xor
and
sbb
jp
push
and
xorl
fnstsw
ljmp
mov
insl
in
push
stos
mov
sub
lcall
lea
rorb
sbb
lahf
pop
in
jbe
rcrb
lcall
mov
jmp
arpl
incb
into
xchg
sbb
jecxz
icebp
pop
mov
fiaddl
lods
jbe
js
mov
inc
adc
ss
cmp
cmp
cwtl
push
test
in
push
pop
mov
sub
movsb
lahf
cmp
jge
sti
push
adc
or
loopne
loopne
adcb
xchg
lods
adc
mov
popf
aaa
dec
stos
cltd
cmp
lret
imul
push
and
push
add
sub
mov
fisttps
shlb
mov
pop
ja
popa
in
out
pop
ret
gs
jge
icebp
pop
lcall
sub
out
into
inc
push
aam
sub
mov
mov
add
dec
jp
pop
xor
out
xor
movsb
mov
les
jmp
xchg
jb
pop
ret
stc
push
xor
xchg
mov
psrld
filds
jl
dec
imul
es
test
ffreep
dec
mov
adc
xchg
into
mov
dec
pop
pushf
outsl
enter
cmpsl
es
mov
xchg
mov
adc
sbb
pop
cli
sbb
xchg
mov
mov
dec
push
sub
int
xchg
xor
mov
mov
repnz
shlb
push
mov
scas
cli
movsl
xor
mov
inc
mov
fmulp
pop
adc
stos
or
lret
xchg
cmp
mov
sub
jae
adc
test
jecxz
roll
rorb
inc
or
push
aaa
movsb
push
mov
cmp
movsb
pop
adcb
dec
or
imul
mov
pop
clc
adc
dec
and
clc
popa
adc
shl
mov
pop
or
nop
dec
jns
pop
cmp
push
add
mov
mov
mov
inc
adc
inc
lcall
xor
aaa
insb
jmp
xchg
cmp
push
ja
jge
sti
dec
or
pusha
imulb
jge
ud1
inc
inc
push
pop
into
ljmp
xor
cmpsl
mov
ja
xchg
lods
pusha
pop
add
mov
push
pushf
loope
inc
into
orb
gs
or
cli
pop
jecxz
sub
xor
and
aas
mov
aas
out
outsb
hlt
mov
mov
cmpb
jno
xchg
sub
xchg
das
leave
fwait
inc
add
fistps
icebp
or
dec
cmp
mov
cs
out
cmp
mov
mov
call
decb
mov
movsb
test
in
xchg
inc
daa
dec
mov
inc
xchg
inc
push
add
mov
mov
push
int
lcall
test
stos
sub
mov
scas
mov
movsb
test
in
mov
icebp
mull
cld
aad
lcall
jae
dec
xchg
sub
push
popf
hlt
pop
roll
stos
repz
pop
and
add
mulps
add
ret
ljmp
xor
lock
pop
loop
cltd
cmp
cs
inc
push
paddb
cs
xchg
dec
pop
cmp
dec
mov
out
lahf
add
or
sub
mov
lods
dec
adc
int
dec
es
mov
je
iret
movsl
iret
inc
push
or
mov
mov
mov
xor
aas
sub
sub
push
inc
mov
mov
arpl
addr16
push
dec
adc
test
mov
loope
fdivrl
cli
lock
and
xor
add
popa
icebp
cltd
pusha
dec
or
ret
mov
or
xchg
aas
mov
inc
xlat
lock
mov
fldcw
mov
loop
es
push
and
sbbb
adc
icebp
cmp
and
ret
inc
or
cltd
aas
mov
iret
xchg
and
mov
jne
in
nop
cmp
sahf
mov
fwait
loopne
pop
rcrl
push
shl
sbb
mov
icebp
loope
cmp
ret
xorl
mov
mov
sub
xor
test
jne
lahf
test
fwait
in
fnstsw
idiv
pop
sbb
pusha
testb
jle
ds
fwait
and
pop
pop
jb
pop
movsb
jp
xor
mov
fisubs
aaa
fwait
out
push
psrld
std
sarl
pop
cld
pusha
andb
loop
movsb
out
adc
inc
or
jge
sbb
cmpsb
movsl
xor
int
out
mov
int
add
mov
call
push
sbb
inc
sub
cmp
cmp
ret
dec
les
in
jbe
outsb
in
outsl
push
or
mov
push
aaa
mov
pop
repz
shrl
xchg
fidivrs
add
aas
cltd
cmp
int3
in
out
mov
add
cmc
mov
loope
rcrl
shl
mov
mov
lods
push
movsl
sbb
or
mov
xchg
adc
out
lret
pop
pop
aaa
mov
inc
addr16
lcall
and
ds
xchg
jmp
fisubs
and
mov
cmpsl
scas
sub
sarl
sub
pushf
xor
or
and
ja
insb
les
loopne
testl
test
mov
add
sti
fdivrs
mov
cmpsl
cmp
push
in
arpl
sub
shlb
pop
xchg
aas
aam
push
test
ss
push
jp
cmp
mov
test
xchg
mov
cmp
lret
cld
pop
mov
movsb
ret
pop
mov
addl
imul
and
stos
mov
popf
xor
scas
ss
add
xchg
add
lret
insb
lahf
sbb
pushf
fmul
arpl
cmp
stos
xor
pop
jbe
dec
movlps
xor
cmpsb
sub
mov
sub
les
mov
jne
lea
repz
inc
shr
arpl
mov
gs
sub
data16
adc
inc
mov
cmp
clc
xchg
mov
fs
test
xchg
jae
cmpsb
in
adc
inc
mov
cmp
notb
xor
pop
xchg
and
cmp
mov
sbb
xor
mov
and
ficompl
push
cmp
in
jne
ljmp
in
jne
xor
rorl
aad
flds
icebp
pop
mov
ljmp
lods
xor
xchg
push
fidivl
mov
jge
stos
hlt
int3
fwait
xor
inc
stc
nop
jns
mov
scas
lret
jb
outsl
movsb
in
xor
clc
ds
ljmp
jno
ret
lret
es
lods
inc
push
mov
bound
fsubr
orb
lods
inc
jmp
or
bound
and
orb
pop
sahf
loop
popa
clc
push
add
mov
test
lret
cld
cmpsl
stc
fcomps
adcb
jno
jno
dec
sahf
xor
negb
pop
scas
dec
repnz
push
int3
fwait
inc
clc
ja
push
ljmp
jb
inc
ljmp
xchg
cmp
jmp
out
jo
rorb
fs
mov
mov
inc
scas
or
mov
jg
push
inc
fldl
cmpsb
fs
xlat
jg
mov
sub
inc
flds
dec
mov
notl
mov
adc
and
pushf
xor
inc
cli
xchg
ja
mov
scas
leave
jo
jo
ljmp
idivb
jmp
pop
push
lods
dec
mov
shrb
lcall
jmp
pushw
jno
inc
xchg
arpl
orl
int3
arpl
jg
mov
roll
scas
or
push
add
mov
cmpsl
push
inc
faddl
arpl
sbb
sbb
outsl
dec
lahf
ss
stc
nop
hlt
popf
mov
scas
inc
lock
push
stc
nop
jne
push
jmp
xchg
pop
scas
or
or
call
xchg
sub
mov
inc
in
jno
mov
fisttps
orl
mov
mov
sub
or
fldl
movsb
fs
aad
and
sbb
roll
add
aaa
jl
popa
clc
push
popf
mov
push
cmpsl
lock
leave
popf
xor
inc
cli
xchg
jne
mov
scas
outsl
fidivl
call
clc
cmc
cmp
push
pop
scas
inc
mov
mov
fists
ljmp
jb
aas
test
arpl
fsubr
orl
sub
lahf
pop
pop
int
cmp
mov
mov
inc
fildl
scas
or
push
add
mov
movsl
push
inc
fldl
movsb
fs
aad
mov
sbb
insl
dec
mov
nop
repnz
mov
scas
inc
out
fdivl
data16
inc
cli
xchg
je
push
jmp
xchg
sbb
cmp
ss
pop
xchg
sub
mov
inc
jecxz
jb
mov
ficoms
orl
or
mov
sub
or
fldl
mov
es
rolb
dec
mov
stc
push
fwait
mov
pop
cmpsb
out
fdivl
enter
inc
cli
xchg
jae
mov
scas
lds
jb
out
int
ret
hlt
cmp
adc
jb
mov
fstl
jmp
xor
or
or
mov
xchg
sub
mov
inc
in
or
cmp
mov
mov
inc
lods
or
push
sub
movsb
push
inc
fldl
mov
mov
sbb
insb
fdivl
inc
mov
xchg
icebp
lcall
inc
in
fdivl
gs
into
xchg
inc
cli
xchg
jb
push
in
call
or
in
int
pop
xchg
sub
mov
inc
loop
jb
mov
fcoml
test
stos
or
mov
sub
sub
dec
inc
fiadds
mov
es
and
inc
mov
cli
push
cltd
mov
sbb
lahf
ss
aas
sti
xchg
jno
mov
mov
insb
fdivl
in
into
adc
ss
in
adc
mov
mov
mov
fistl
in
jmp
or
or
sub
mov
inc
jecxz
or
ss
mov
mov
inc
fdivr
stos
or
dec
cld
sub
sub
dec
inc
fidivrs
mov
cld
rcll
mov
sbb
fnsave
mov
xchg
out
cwtl
mov
mov
jmp
je
arpl
iret
xchg
ds
xchg
jo
push
in
out
sbb
cmp
aaa
into
adc
xchg
sub
scas
mov
loopne
jae
mov
ficoml
test
test
mov
mov
sub
sub
jmp
push
dec
dec
fistpll
or
sarb
mov
and
inc
fdivr
inc
mov
sti
dec
xchg
rclb
sbbb
ljmp
idivb
mov
mov
push
je
loop
iret
adc
push
in
adc
mov
xchg
arpl
iret
xchg
fsts
in
out
mov
pop
or
cmp
gs
xchg
sub
scas
mov
loope
or
xor
sub
xchg
inc
test
mov
dec
cli
sub
sub
sbb
shll
iret
adc
push
inc
lock
and
jne
inc
mov
xchg
in
xchg
rclb
sbb
sbb
rclb
mov
out
in
sbb
aaa
loope
iret
adc
sub
lods
mov
fiadds
shlb
fsts
test
cmpsb
or
xlat
jg
gs
sub
sub
in
addl
or
into
js
mov
and
inc
inc
mov
cld
dec
xchg
rclb
sbbl
call
mov
xchg
insl
push
rclb
sbb
fwait
loopne
iret
adc
push
in
arpl
sbb
mov
cmp
xchg
xlat
xchg
sub
mov
out
out
mov
pop
pop
jbe
cmp
gs
pop
xchg
sub
mov
loopne
or
xor
mov
xchg
inc
cmpsl
or
cld
dec
stc
sub
sub
sahf
dec
dec
loopne
mov
addr16
adc
push
inc
out
test
data16
inc
mov
xchg
jmp
rcrl
sbb
sbb
rclb
mov
out
loop
sbb
xor
push
xchg
sub
stos
mov
faddl
addr16
fcoms
test
movsb
or
aad
iret
data16
sub
daa
shr
test
dec
fistpll
or
int3
ja
shrb
inc
fdivrp
inc
mov
std
dec
xchg
rclb
test
mov
ret
hlt
cmp
xchg
imul
mov
push
cmp
bsf
xchg
out
xor
popa
nopl
mov
cmp
xchg
aad
sub
mov
out
in
mov
pop
push
ja
cmp
lods
pop
xchg
sub
into
in
addl
mov
fbld
or
xor
mov
test
inc
cmpsb
push
movsl
xlat
pop
gs
dec
clc
sub
sub
sbb
mov
dec
adc
push
inc
out
xchg
xchg
inc
movsb
cmp
cld
xchg
jmp
or
mov
out
ja
pop
cmp
mov
xchg
insb
scas
push
out
loopne
sbb
mov
fistpll
rcll
push
xchg
sub
test
dec
fiaddl
shlb
xlat
xchg
sub
dec
out
test
mov
shlb
hlt
sub
and
inc
dec
fistpll
or
push
cltd
data16
lret
shll
dec
mov
decb
push
ret
insl
test
in
jne
shll
imul
mov
loopnew
cltd
fdivrl
iret
or
cs
in
pop
push
sbb
or
rcll
lock
mov
pop
add
into
gs
pop
xchg
sub
stos
mov
fstpl
or
xor
shlb
inc
fdivp
movsb
push
movsl
aad
data16
inc
imulb
daa
imul
out
lcall
inc
in
xchg
xchg
aas
movsb
cmp
std
xchg
call
or
cmp
loopne
pop
pop
cmp
lea
xchg
push
pop
out
fisttps
ja
xor
cmp
push
push
xchg
sub
das
pop
out
pusha
cmpsl
mov
flds
shrl
aad
sub
dec
out
xchg
mov
shlb
repz
and
out
test
inc
dec
loopne
and
push
cwtl
addr16
je
shll
dec
cmp
decb
rcrl
test
mov
std
xchg
push
mov
mov
gs
xchg
fstpt
rorb
xchg
jmp
push
out
pop
or
mov
jg
or
pop
cmp
rclb
lock
mov
push
add
xor
push
xchg
sub
std
test
or
dec
cld
shrb
jno
shll
dec
fcomip
mov
incb
sub
and
inc
dec
loope
mov
push
pop
inc
ljmp
xchg
cmp
xchg
out
ret
or
ja
pop
cmp
mov
xchg
push
mov
mov
fdivrl
rorl
cs
out
pop
cmpsb
mov
fadds
shrl
aam
sub
dec
out
xchg
mov
pop
mov
shlb
repnz
and
out
test
inc
dec
loopne
and
push
xchg
addr16
jae
shll
fcomip
cmp
cmp
decb
rcrl
test
loop
jbe
mov
std
xchg
addr16
pop
inc
mov
mov
fs
xchg
fidivrl
rorb
mov
push
out
pop
or
or
pop
cmp
mov
xchg
sub
mov
lock
mov
push
add
xor
iret
test
sub
cld
test
dec
ficompl
shrb
jo
shll
dec
fcomip
mov
incb
sub
and
test
inc
dec
loope
mov
push
pop
aas
jmp
loopne
xchg
cmp
cmp
xchg
out
ret
pop
sbb
ja
pop
cmp
mov
pop
lock
ja
xor
cmp
or
xchg
sub
sub
mov
xlat
jg
or
sub
xchg
sub
es
pop
lahf
or
stos
icebp
sub
and
out
test
inc
dec
loopne
and
inc
jb
ret
test
lds
idivb
mov
decl
rcrl
xchg
adc
std
xchg
gs
pop
inc
xchg
mov
arpl
js
fdivrs
rorb
mov
xchg
jmp
or
mov
jl
or
pop
cmp
iret
xchg
sub
scas
pop
icebp
loopne
mov
push
add
xor
cmpsw
push
xchg
cs
in
test
cmpsl
mov
fstps
or
dec
cli
shrl
outsb
sub
lahf
dec
icebp
mov
dec
fcomip
mov
incb
sub
sbb
inc
dec
loop
mov
imul
cmp
pop
loopne
xchg
cmp
cmp
mov
xchg
in
ret
pop
roll
js
pop
cmp
mov
pop
lock
ja
fstpt
rorb
xchg
sub
sub
mov
aad
ja
mov
shrl
rcll
xchg
dec
pop
popf
or
push
and
out
xchg
inc
dec
loopne
and
movsl
push
xchg
addr16
jb
ret
mov
lds
idivb
mov
add
rcrl
xchg
pushf
jbe
mov
std
xchg
arpl
les
test
mov
fs
xchg
cmp
pop
mov
push
out
pop
or
mov
jp
or
pop
cmp
sub
scas
pop
repnz
mov
push
add
xor
movsl
push
cwtl
das
test
out
test
cmpsb
mov
fcomps
or
imul
sub
popf
dec
repnz
dec
loopne
lahf
adc
inc
icebp
lds
arpl
jecxz
mov
cmp
xchg
push
or
pop
cmp
mov
sbb
js
cmp
xchg
loop
les
add
mov
loope
jns
push
cmp
xchg
xchg
gs
icebp
flds
js
sub
cmp
or
sub
pop
mov
js
scas
hlt
shrb
rcll
xchg
mov
push
fwait
push
movsl
int3
ja
imul
aas
dec
loope
push
xsha1
cmpsb
dec
xchg
push
les
ret
dec
loop
movsb
cmp
push
inc
mov
pop
mov
fsub
ja
mov
xchg
popa
pextrw
pop
inc
sbbb
jp
aam
roll
es
out
push
or
mov
js
or
mov
xchg
sub
lods
pop
repz
mov
push
jp
xor
push
add
xchg
movsb
mov
sbb
movsl
dec
not
imul
sub
pushf
dec
repnz
loope
popf
adc
inc
out
lds
arpl
jecxz
mov
cmp
xchg
push
lds
les
out
pop
sbb
jns
cmp
xchg
loope
les
add
mov
jns
push
cmp
xchg
arpl
push
mov
stc
jns
sub
cmp
or
jg,pn
pop
icebp
pop
mov
js
lods
repz
iret
xchg
sub
jns
mov
push
lcall
cmpsl
in
sub
xchg
ds
loop
sbb
cmpsb
dec
nop
imul
lahf
jecxz
push
adc
movsl
cmp
adc
inc
mov
pop
mov
fsub
js
mov
call
aas
sbbb
xchg
aam
rolb
es
lock
push
and
stos
pop
ds
lret
xchg
sub
stos
pop
repz
mov
push
cld
jp
jb,pn
imul
mov
aam
xsha1
cmpsb
dec
cmc
aam
daa
imul
jp
dec
loop
fwait
adc
inc
in
lds
arpl
jecxz
mov
cmp
ret
or
pop
cmp
mov
push
pop
jecxz
aaa
cmpsb
cmp
loope
les
add
mov
fucom
jns
push
ds
xor
xchg
popa
cmpsl
pop
repz
jp
sub
cmp
push
dec
cwtl
das
jg
pop
icebp
pop
mov
js
stos
repz
and
inc
repnz
mov
push
cltd
adc
movsl
jmp
lds
icebp
mov
cmp
adc
shrl
loop
pop
adc
dec
jecxz
xor
imul
mov
pop
mov
fnclex
jns
mov
add
cmp
pop
in
nop
sarb
add
pop
icebp
push
add
mov
test
aas
xchg
xchg
sub
fstps
adc
shrl
dec
cltd
xor
icebp
mov
mov
adc
and
inc
repz
dec
jecxz
cltd
adc
aas
jmp
sbb
mov
xchg
cmp
cmpsl
ds
imul
pop
pop
cmp
mov
adc
in
lea
add
mov
fninit
jp
push
aas
test
add
sbbb
mov
jnp
sub
cmp
xor
pop
repnz
sahf
mov
shlb
adc
lret
xchg
cs
inc
repz
mov
push
xchg
adc
mov
idivl
dec
in
sbb
test
lea
mov
loopne
and
mov
cmpsl
ds
add
lds
mov
xchg
jp
mov
aas
call
or
pop
cmp
mov
pop
in
mov
cmp
lcall
and
cmpsb
push
inc
xlat
test
xchg
cs
cmpsb
pop
cmc
xlat
sbb
adc
outsb
aam
mov
shl
repz
mov
test
icebp
insl
and
cwtl
inc
hlt
mov
dec
in
xchg
adc
cmp
pop
mov
xchg
cmp
insb
mov
aas
in
insb
add
loopne
and
pop
in
mov
test
lods
add
mov
jnp
push
aas
subb
hlt
aam
and
daa
sarb
aad
dec
cltd
xor
pop
repz
pushf
mov
into
jbe
adc
lret
cld
inc
repz
dec
dec
xchg
adc
mov
repz
cmp
push
adc
mov
fimuls
in
xor
add
test
pop
mov
mov
xchg
xlat
jecxz
or
add
cmp
lods
pop
out
into
cmp
fbld
pop
repz
add
mov
movsb
push
inc
fadds
movsb
pop
not
sbb
adc
insb
aad
sahf
dec
fwait
xor
repz
pushf
mov
test
and
xchg
inc
cmc
mov
in
xchg
adc
cmp
xor
sbb
and
mov
inc
loop
insl
add
add
pop
xor
push
out
mov
test
fildl
mov
or
xlat
subb
lcall
and
and
inc
lcall
lcall
cmpsb
in
insl
pop
enter
sbb
bound
pop
jbe
inc
pop
fcomps
test
pop
ljmp
jno
mov
ds
call
das
jl
iret
cwtl
fdivr
sbb
addr16
cmp
cmp
push
in
sbbb
xor
outsb
push
mov
xor
setp
test
jns
sbb
xor
add
xor
ljmp
lods
mov
sbb
cmp
outsb
adc
shlb
lret
mov
aam
ljmp
jl
ret
mov
inc
push
push
rol
insl
pushf
int3
outsb
mov
aaa
cmp
dec
sbb
jb
push
jmp
add
pop
inc
or
cld
mov
aas
pop
pop
mov
iret
dec
orl
bound
ja
sarl
enter
test
sub
loop
mov
xchg
sub
cltd
mov
pop
fildl
pop
jbe
add
sbb
sbb
ja
inc
fdiv
mov
or
lock
sub
pop
clc
pop
mov
mov
push
stos
pushf
and
enter
lahf
jl
popf
pop
jmp
imull
ds
dec
mov
cmpsl
or
and
or
xor
pop
add
inc
lods
dec
test
mov
idiv
mov
jns
xor
fstl
cltd
mov
sub
push
imul
or
mov
dec
mov
add
jno
negl
dec
shr
mov
cs
dec
es
xchg
lret
test
mov
jmp
or
sub
icebp
stos
repnz
dec
leave
cli
movsb
push
dec
fldt
ljmp
test
out
sub
adc
or
mov
adc
clc
mov
cltd
mov
mov
cld
fcomi
jo
xchg
adcb
mov
add
add
add
xor
add
add
add
add
and
add
add
add
add
sbb
add
add
add
add
push
shl
mov
xor
and
mov
mov
lahf
outsb
arpl
stc
movsb
sbb
scas
pop
add
js
out
popf
in
sbb
sarl
loope
cmp
jnp
add
cmp
lret
les
dec
xchg
cmp
or
pop
and
stos
std
addr16
pop
jmp
hlt
adc
je
and
xchg
sarl
fnstcw
ljmp
pop
cmp
xor
pushf
push
or
mov
adc
jmp
frstor
mov
aad
in
es
arpl
xor
pop
data16
into
cmpsb
idivl
sub
sbb
push
rorl
fwait
scas
out
fcompl
or
dec
enter
mov
xchg
fisttpl
outsb
jecxz
jnp
ds
je
adc
out
sbb
pushf
stos
sub
imul
mov
mov
iret
sub
rcrl
orb
inc
jne
adc
pop
cmp
lods
mov
stos
ss
loop
adc
in
sahf
movsl
test
xchg
lock
cltd
sahf
and
rclb
icebp
push
fs
xchg
cli
add
xchg
lret
pop
fidivl
enter
inc
fstpt
mov
sub
adc
movsb
sub
mov
mov
xor
and
mov
push
cmpsl
cmp
into
cmpsl
pop
xor
movsb
mov
mov
leave
dec
shlb
clc
jbe
dec
or
jmp
outsb
xchg
scas
popf
mov
inc
test
mov
and
sbb
sbb
pop
xchg
hlt
adc
dec
scas
dec
add
push
ljmp
or
outsl
or
mov
in
stos
pushl
or
add
ja
scas
std
or
push
shlb
aas
push
mov
push
cmp
pop
dec
jbe
mov
xor
jb
mov
cli
jbe
jle
jnp
imul
mov
in
cmpl
fcomps
jne
sub
push
pop
aad
jne
xchg
test
jne
mov
adc
sbb
add
lods
cli
fcoms
dec
jb
int3
xor
adc
out
ret
leave
fidivl
fisttpll
push
mov
ret
in
cltd
cld
pop
fnstenv
out
insb
stc
lea
fcom
jp
jb
leave
mov
jmp
xchg
pop
js
cmp
push
dec
push
incl
and
ret
insl
pop
or
inc
out
fwait
sti
jl
cmp
insl
dec
xor
outsl
shrb
mov
aam
sbb
xorl
cmpsl
scas
push
pop
hlt
lcall
rcrb
insl
mov
out
pop
cmp
test
addl
lods
incb
jbe
jo
test
dec
mov
stos
ss
pop
sbb
out
or
jns
mov
xor
fiadds
adc
dec
rcrl
or
xchg
nop
pop
inc
xor
mov
inc
loop
cmp
fidivl
hlt
icebp
adc
jmp
rclb
push
shr
in
inc
sub
shr
pop
xor
js
jno
jecxz
sub
sbb
inc
cmpsl
jno
into
adcl
sbb
adcl
sub
push
out
jecxz
adc
adc
add
fisubl
popf
into
mov
push
sbb
push
in
arpl
loope
loop
orb
push
cmp
hlt
icebp
adc
xor
stc
cmpsb
jns
cs
dec
pop
sub
ret
pushf
inc
xchg
out
jo
jbe
adc
xlat
sti
mov
cmp
loope
loop
repnz
push
testb
jns
rorl
push
xchg
push
xchg
mov
cwtl
sub
xlat
addr16
loope
xchg
push
aas
push
and
lcall
cli
push
mov
lods
add
mov
repnz
lret
icebp
adc
in
pushf
fsts
push
mov
jno
stos
aam
or
push
or
sub
add
mov
sub
aad
scas
sub
fdivrl
enter
ds
lret
mov
adc
bound
loop
jmp
mov
push
fistl
mov
sub
nop
cld
mov
push
push
fisubl
pushf
mov
cld
lods
bound
je
cld
mov
ss
imul
pop
mov
mov
jg
xchg
filds
shlb
adc
imul
xchg
ret
cwtl
lea
test
sbb
push
je
iret
pop
sub
mov
dec
pop
pop
sbb
jbe
outsb
test
add
xlat
dec
or
and
add
add
sbb
and
int
fistl
outsb
fwait
push
dec
mov
adc
aaa
lahf
out
inc
mov
or
fidivl
xor
mov
dec
les
jbe
sub
push
dec
gs
push
mov
lahf
mov
mov
xchg
aam
dec
or
mov
or
mov
enter
lahf
das
xor
sbb
es
in
sub
cld
sub
jg
sarl
ret
es
in
pop
and
decl
fildll
jae
mov
icebp
cwtl
lret
add
notb
loopne
jmp
popa
pusha
jne
inc
jecxz
out
bound
cmp
in
dec
sahf
arpl
inc
add
add
sbb
jg
call
lret
std
jne
xchg
sub
pop
out
scas
mov
cmp
idivb
in
pop
jb
and
je
loop
sub
insl
nop
xchg
xchg
lods
rcr
shlb
sub
cmp
mov
xchg
rorl
hlt
sub
dec
scas
cli
xlat
or
sub
stc
divl
xchg
testb
mov
js
out
mov
lcall
adc
cmp
sub
cwtl
fs
dec
call
add
arpl
pop
xchg
sbb
inc
gs
dec
push
or
rep
fbld
ljmp
jle
fdiv
leave
or
xlat
test
jnp
popf
icebp
jmp
xchg
insl
mov
lds
mov
mov
mov
xchg
mov
test
mov
andb
jmp
test
inc
mov
cmp
inc
cmc
or
mov
xchg
outsl
clc
repnz
int3
fnsave
mov
sbb
xor
push
or
scas
fwait
andb
xchg
scas
xor
cmp
xor
dec
out
fsubl
ljmp
lcall
inc
andb
cmpsb
push
jae
add
cwtl
sbb
cmp
in
inc
adc
add
sbb
sub
push
adc
roll
and
pop
or
jg
pop
mov
hlt
lcall
pop
leave
test
sub
imul
pop
faddl
movsb
xor
rcrl
nop
inc
mov
jb
sub
cwtl
push
push
psllq
pop
jb
or
pushf
pop
push
popf
add
dec
pop
jg
dec
icebp
add
rdpmc
jl
aaa
outsl
xchg
adc
insb
cmpsb
xor
aaa
cld
jg
inc
xchg
push
sbbl
and
add
sub
inc
inc
dec
ret
fbld
inc
ds
mov
sub
imul
push
pusha
xor
es
xor
mov
dec
stos
sbb
push
gs
movsl
sbb
std
sbb
xchg
leave
sbb
leave
cmp
mov
mov
dec
movsl
mov
fwait
xchg
in
pop
fwait
out
loope
and
mov
push
or
adc
or
jns
mov
dec
push
xchg
mov
push
bound
mov
aaa
cmp
enter
sbb
rcl
pop
lods
adc
mov
cmp
inc
push
mov
rcrl
cli
xor
mov
pop
dec
mov
leave
imul
loop
mov
sbb
sbb
adc
pop
mov
sub
negl
pusha
xchg
and
scas
js
mov
sub
add
in
inc
pop
fiaddl
pop
insb
push
shl
out
cmp
cmp
jecxz
mov
cmp
