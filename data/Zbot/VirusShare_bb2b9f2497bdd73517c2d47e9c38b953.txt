push
mov
sub
push
push
push
mov
mov
shl
movzwl
mov
movzwl
mov
shl
movzwl
cmp
jne
mov
or
and
mov
jmp
test
jne
push
push
push
push
call
mov
mov
mov
mov
shl
movzwl
mov
xor
div
movzwl
cmp
jbe
mov
and
movzbl
sub
push
call
jmp
cmp
jbe
mov
or
sub
mov
jmp
cmp
jne
movzbl
xor
div
mov
jmp
mov
test
jne
mov
test
jne
cmp
jne
mov
mov
jmp
mov
test
jne
call
mov
jmp
cmp
jne
mov
jmp
jmp
cmp
jbe
mov
add
mov
jmp
cmp
jne
movzbl
and
sub
movzwl
movzbl
xor
div
mov
mov
imul
movzwl
mov
or
add
mov
movzbl
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
sub
movzbl
mov
imul
mov
mov
mov
xor
div
mov
mov
sub
sub
movzbl
mov
or
mov
mov
and
and
mov
cmp
jb
mov
mov
xor
div
mov
jmp
test
jne
mov
test
jne
mov
test
jne
cmp
jne
mov
imul
mov
jmp
test
jne
call
mov
jmp
cmp
jbe
mov
sub
mov
jmp
cmp
jbe
mov
imul
movzwl
sub
push
movzwl
add
sub
push
call
movzwl
push
mov
and
movzwl
add
push
call
jmp
cmp
jbe
mov
mov
jmp
mov
or
movzwl
xor
mov
mov
mov
mov
add
mov
test
jne
call
mov
jmp
cmp
jne
movzwl
xor
mov
mov
xor
mov
mov
mov
mov
and
movzwl
sub
mov
mov
movzwl
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shl
mov
mov
shr
mov
cmp
jb
mov
add
mov
jmp
cmp
jbe
mov
imul
push
push
push
push
mov
or
push
call
jmp
cmp
jne
mov
and
imul
push
push
call
mov
push
mov
and
push
call
push
mov
sub
push
call
mov
and
push
call
mov
imul
mov
sub
push
mov
imul
push
call
mov
sub
mov
mov
or
or
push
push
call
mov
xor
imul
mov
xor
push
mov
xor
sub
push
call
jmp
test
jne
cmp
jb
mov
add
mov
jmp
cmp
jne
mov
add
mov
jmp
cmp
jb
mov
or
or
mov
jmp
test
jne
mov
sub
sub
mov
add
mov
jmp
cmp
jb
mov
xor
div
mov
mov
xor
sub
mov
add
mov
mov
mov
mov
mov
mov
mov
movzwl
and
sub
mov
mov
imul
mov
mov
add
cmp
je
mov
mov
mov
add
add
mov
mov
movzbl
imul
mov
mov
imul
mov
movzbl
xor
mov
movzbl
or
mov
movzbl
mov
mov
mov
or
add
mov
add
mov
mov
xor
or
mov
mov
add
mov
mov
xor
add
mov
mov
movzbl
or
add
mov
sub
mov
mov
mov
jmp
mov
mov
mov
imul
sub
mov
add
mov
movzbl
shr
mov
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
movzbl
mov
movzbl
mov
add
movzbl
mov
movzwl
mov
sub
movzbl
movl
mov
shl
movzwl
cmp
jne
mov
and
add
movzbl
jmp
mov
test
jne
mov
and
add
mov
add
mov
mov
mov
mov
and
mov
mov
sub
mov
mov
imul
imul
mov
cmp
jbe
mov
movzbl
jmp
cmp
jbe
mov
sub
movzbl
jmp
cmp
jbe
mov
shr
movzwl
jmp
cmp
jbe
mov
add
movzwl
jmp
mov
test
jne
mov
add
mov
sub
mov
mov
xor
mov
add
movzwl
sub
mov
mov
mov
mov
add
mov
add
mov
mov
shr
mov
movzbl
or
push
mov
or
push
push
call
mov
movzbl
imul
mov
sub
mov
movzbl
or
mov
movzwl
movzbl
imul
sub
cmp
je
mov
mov
mov
shl
mov
mov
mov
movzbl
or
sub
mov
sub
mov
jmp
mov
and
mov
add
mov
mov
or
mov
add
movzbl
mov
xor
sub
mov
mov
mov
add
mov
sub
sub
mov
movzbl
movzbl
mov
movzbl
add
sub
mov
mov
mov
add
movzbl
imul
add
mov
mov
sub
add
mov
mov
mov
xor
sub
mov
mov
sub
movzwl
movzbl
xor
add
mov
mov
mov
add
mov
or
add
mov
mov
movzbl
mov
xor
add
cmp
je
mov
mov
mov
and
xor
mov
mov
mov
mov
imul
mov
mov
imul
push
mov
add
push
movzbl
imul
push
call
mov
mov
sub
mov
mov
add
mov
or
add
mov
mov
sub
mov
mov
shl
mov
movzbl
add
mov
movzbl
mov
or
cmp
je
mov
mov
movzwl
sub
mov
movzwl
shr
mov
mov
shl
mov
shr
or
mov
movzbl
mov
xor
div
mov
movzbl
movzwl
sub
add
mov
movzbl
xor
mov
add
mov
movzwl
shr
mov
movzwl
movzbl
or
add
mov
add
mov
movzwl
mov
jmp
movzwl
mov
mov
cmp
jne
mov
mov
mov
mov
movzbl
add
add
mov
movzbl
mov
xor
div
mov
movzbl
shr
mov
movzbl
and
add
mov
mov
sub
mov
add
sub
add
mov
mov
movzbl
imul
sub
mov
mov
mov
movzbl
and
sub
add
mov
mov
sub
add
mov
mov
add
movzbl
or
add
sub
mov
movzbl
and
mov
movzbl
xor
add
mov
sub
mov
movzwl
mov
mov
mov
movzbl
movzbl
sub
sub
mov
mov
mov
add
sub
mov
mov
and
sub
mov
sub
mov
mov
mov
add
mov
mov
mov
mov
imul
add
mov
add
mov
movzbl
imul
mov
sub
mov
push
mov
movzbl
xor
add
push
mov
and
sub
push
mov
add
add
push
call
mov
movzbl
movzbl
add
mov
mov
add
mov
add
mov
mov
mov
movzwl
or
add
mov
add
mov
movzbl
mov
mov
and
sub
mov
sub
mov
jmp
mov
mov
xor
div
movzwl
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shr
movzbl
mov
shl
movzbl
mov
mov
mov
xor
or
movzbl
mov
add
sub
movzbl
mov
xor
mov
cmpl
jbe
mov
add
push
mov
and
push
call
mov
or
imul
push
call
movzbl
mov
and
push
call
mov
and
mov
sub
push
mov
or
mov
sub
push
call
mov
movzbl
jmp
cmpl
jne
mov
movzbl
jmp
cmpl
jbe
mov
or
mov
imul
push
mov
and
add
push
mov
imul
push
call
mov
imul
push
pushl
call
mov
or
sub
push
mov
sub
push
mov
xor
push
push
push
push
pushl
mov
xor
xor
push
pushl
push
mov
and
push
call
movzbl
jmp
cmpl
jne
pushl
push
call
movzbl
jmp
cmpl
jne
mov
mov
jmp
mov
sub
movzbl
mov
mov
mov
shl
mov
mov
sub
movzbl
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
movzbl
mov
movzwl
mov
shl
movzwl
mov
mov
xor
div
movzbl
mov
add
movzbl
mov
imul
mov
movzwl
shl
mov
mov
movzbl
mov
shl
mov
mov
movzwl
cmp
jb
mov
and
xor
push
movzbl
movzwl
or
push
push
call
mov
movzwl
push
call
mov
and
movzbl
or
push
call
mov
mov
xor
div
mov
mov
and
push
movzbl
push
mov
or
push
call
movzbl
shr
movzwl
movzbl
or
movzwl
imul
push
mov
and
push
mov
imul
push
call
jmp
cmp
jne
mov
jmp
jmp
cmp
jbe
movzwl
mov
jmp
jmp
mov
test
jne
push
push
movzbl
push
call
movzwl
jmp
cmp
jbe
mov
movzbl
mov
add
movzwl
movzwl
mov
xor
div
movzwl
movzbl
sub
movzbl
mov
xor
mov
mov
sub
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shl
movzbl
mov
imul
mov
mov
movzbl
mov
cmp
jbe
mov
shl
movzbl
jmp
test
jne
mov
test
jne
mov
test
jne
test
jne
push
push
push
push
call
mov
mov
mov
shr
movzbl
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
or
movzbl
mov
add
mov
mov
movzbl
mov
add
mov
mov
xor
imul
movzwl
mov
shl
mov
movzwl
xor
mov
cmpw
jne
push
push
movzwl
push
call
mov
mov
shr
movzwl
movzwl
shl
mov
mov
add
mov
mov
xor
div
movzwl
mov
add
movzbl
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
movzbl
mov
movzbl
mov
or
sub
mov
mov
mov
mov
movzbl
mov
or
movzbl
mov
and
mov
cmp
jae
mov
xor
divl
movzbl
jmp
cmp
jae
mov
mov
jmp
jmp
cmp
jne
cmp
jne
push
call
mov
jmp
cmp
jbe
push
mov
or
mov
imul
push
call
mov
xor
mov
mov
xor
div
movzbl
mov
add
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
movzbl
mov
add
movzbl
mov
or
xor
movzbl
mov
sub
sub
movzbl
mov
shr
movzbl
mov
movzbl
mov
or
mov
imul
mov
mov
and
and
mov
mov
shl
mov
mov
test
jne
push
call
movzbl
mov
xor
or
mov
mov
add
movzbl
mov
or
mov
mov
imul
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
mov
mov
imul
mov
sub
mov
mov
add
mov
mov
shr
mov
mov
or
add
mov
add
mov
mov
and
mov
mov
xor
mov
mov
mov
mov
mov
mov
sub
sub
mov
mov
xor
movzwl
imul
mov
movzwl
or
sub
cmp
je
mov
mov
movzwl
mov
movzwl
shl
mov
movzwl
movzwl
sub
mov
movzbl
mov
mov
movzwl
shr
mov
movzwl
movzwl
or
sub
mov
add
mov
movzwl
mov
xor
div
mov
mov
add
mov
movzwl
movzwl
add
add
mov
movzwl
movzbl
add
sub
mov
sub
mov
movzwl
sub
sub
mov
jmp
mov
movzwl
movzwl
xor
sub
mov
add
mov
mov
xor
divl
mov
mov
mov
mov
movzwl
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
movzwl
mov
movzwl
mov
movzwl
mov
and
mov
imul
movzwl
mov
or
or
movzwl
mov
and
mov
sub
movzwl
mov
shr
movzwl
mov
and
sub
movzwl
mov
test
jne
call
movzwl
mov
and
movzwl
mov
sub
movzwl
mov
and
imul
movzwl
mov
and
movzwl
mov
and
sub
mov
movzbl
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
and
mov
imul
mov
mov
add
sub
mov
add
mov
mov
and
movzwl
mov
imul
add
mov
mov
mov
mov
mov
xor
add
mov
sub
mov
mov
imul
sub
mov
mov
and
sub
mov
mov
test
je
mov
mov
mov
and
mov
movzwl
or
sub
mov
mov
mov
movzwl
shl
mov
mov
add
mov
mov
mov
mov
add
mov
cmpw
jbe
movzwl
xor
sub
mov
jmp
mov
test
jne
mov
mov
mov
jmp
cmpw
jbe
movzwl
xor
sub
mov
jmp
cmpw
jbe
movzwl
shr
mov
jmp
cmpw
jne
mov
sub
push
call
mov
movzwl
add
mov
movzwl
and
add
mov
sub
mov
mov
movzbl
cmp
jne
mov
mov
mov
mov
mov
movzwl
sub
mov
mov
test
je
mov
mov
mov
sub
mov
movzwl
sub
mov
mov
movzbl
mov
mov
mov
add
mov
mov
add
mov
movzwl
sub
mov
jmp
jmp
mov
movzbl
cmp
jne
mov
mov
movzwl
shl
mov
movzwl
or
movzwl
imul
mov
mov
movzwl
sub
mov
mov
movzwl
add
mov
jmp
mov
sub
sub
mov
add
mov
imul
mov
sub
add
mov
mov
mov
mov
sub
mov
mov
add
add
mov
add
mov
mov
shl
mov
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
add
movzbl
mov
movzbl
cmp
jne
mov
add
mov
jmp
cmp
ja
mov
shr
movzbl
jmp
cmp
jae
mov
sub
movzbl
mov
xor
movzbl
mov
sub
mov
mov
sub
movzbl
mov
sub
mov
mov
shl
mov
mov
and
sub
mov
mov
mov
movzwl
xor
sub
mov
add
mov
mov
mov
mov
movzwl
or
add
mov
movzwl
imul
sub
mov
add
mov
mov
xor
mov
movzwl
and
mov
mov
mov
movzwl
sub
mov
mov
and
mov
mov
movzbl
movzwl
add
add
mov
mov
sub
add
mov
mov
cmp
jae
movb
movzbl
shr
mov
movzwl
shr
mov
mov
mov
mov
movzwl
mov
mov
mov
mov
movzbl
shl
mov
movzbl
movzbl
xor
sub
mov
movzbl
sub
mov
movzbl
movzwl
or
sub
mov
movzbl
movzwl
and
or
mov
mov
test
je
movw
movzwl
or
mov
mov
mov
cmpl
jne
mov
movzbl
shl
add
mov
add
xor
mov
movzbl
shr
add
xor
mov
sub
mov
mov
movzbl
shl
add
mov
add
xor
mov
movzbl
shr
add
xor
mov
sub
mov
mov
add
mov
mov
sub
mov
mov
shl
mov
mov
movzwl
or
sub
mov
sub
mov
movzwl
mov
jmp
movzwl
mov
mov
mov
mov
mov
mov
mov
cmpw
jb
movzwl
mov
jmp
jmp
cmpw
jne
mov
add
mov
movzwl
movzbl
imul
mov
mov
add
mov
movzwl
movzbl
xor
movzwl
sub
mov
jmp
mov
shr
movzbl
mov
or
sub
mov
add
mov
movzwl
xor
div
mov
mov
movzwl
or
sub
mov
mov
mov
mov
mov
xor
div
mov
movzwl
add
add
mov
add
push
movzwl
or
sub
mov
add
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
mov
xor
sub
mov
movzwl
mov
sub
sub
mov
add
mov
mov
add
mov
mov
and
add
mov
add
mov
mov
mov
mov
mov
mov
mov
shl
mov
movzbl
sub
add
mov
mov
or
mov
mov
xor
sub
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
imul
mov
mov
and
movzbl
sub
mov
movzbl
movzbl
and
movzbl
mov
mov
mov
movzbl
sub
sub
mov
add
mov
movzbl
sub
mov
movzbl
movzbl
and
sub
add
mov
imul
imul
mov
cmpb
jne
cmpb
jne
movzbl
jmp
jmp
cmpb
jne
movzbl
sub
mov
jmp
mov
test
jne
cmpb
jbe
mov
shr
mov
jmp
cmpb
jbe
mov
or
imul
mov
jmp
mov
test
jne
mov
test
jne
mov
movzbl
xor
add
mov
sub
mov
jmp
cmpb
jne
mov
mov
jmp
cmpb
jb
movzbl
jmp
jmp
cmpb
jb
movzbl
mov
jmp
cmpb
jbe
mov
mov
xor
div
mov
jmp
cmpb
jbe
mov
imul
mov
jmp
cmpb
jae
mov
mov
jmp
jmp
cmpb
jae
movzbl
mov
xor
div
mov
jmp
cmpb
jae
mov
movzbl
sub
mov
jmp
cmpb
jae
movzbl
and
and
mov
jmp
movzbl
xor
add
mov
add
mov
mov
mov
mov
mov
shr
mov
movzbl
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
sub
movzwl
mov
movzbl
mov
shr
mov
mov
mov
mov
and
mov
mov
shr
mov
cmp
jae
movzbl
movzwl
or
push
movzwl
push
push
movzbl
xor
push
call
jmp
cmp
jbe
movzwl
mov
jmp
jmp
cmp
jne
push
push
push
movzbl
push
call
mov
jmp
cmp
ja
push
call
jmp
cmp
jae
mov
mov
jmp
mov
sub
mov
mov
movzbl
or
and
mov
mov
or
or
movzbl
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
movzbl
mov
shl
movzwl
mov
movzbl
cmp
jb
mov
movzwl
jmp
mov
test
jne
cmp
jb
mov
and
movzbl
jmp
mov
test
jne
cmp
jbe
mov
mov
xor
div
movzbl
jmp
cmp
jbe
mov
and
push
call
movzwl
push
push
mov
add
push
call
movzbl
mov
or
push
mov
sub
push
push
call
jmp
cmp
jb
mov
sub
movzbl
jmp
mov
test
jne
cmp
jb
mov
imul
add
movzbl
jmp
mov
test
jne
mov
test
jne
push
call
movzbl
jmp
cmp
jbe
mov
xor
movzbl
jmp
cmp
jne
call
jmp
cmp
jb
mov
and
movzbl
jmp
cmp
jbe
mov
xor
push
push
push
mov
add
push
call
jmp
cmp
jbe
mov
or
mov
add
movzbl
mov
shr
mov
mov
mov
mov
sub
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
movzwl
mov
movzwl
mov
imul
mov
mov
or
movzwl
mov
imul
add
mov
add
mov
mov
mov
add
sub
mov
add
mov
mov
sub
sub
mov
mov
mov
mov
shl
mov
mov
or
add
mov
mov
add
mov
movzwl
add
sub
cmp
je
mov
mov
mov
xor
or
mov
mov
shr
mov
mov
xor
mov
movzbl
xor
mov
mov
movzbl
and
sub
mov
movzbl
mov
mov
movzbl
shl
mov
mov
add
add
mov
add
mov
mov
imul
mov
mov
movzwl
add
sub
mov
add
mov
movzbl
xor
mov
add
mov
cmpl
jne
cmpw
jbe
mov
movzwl
and
imul
mov
jmp
cmpw
jne
cmpw
jne
cmpl
jne
cmpw
jne
movzwl
movzwl
and
sub
mov
sub
mov
jmp
cmpl
jae
movzwl
sub
mov
jmp
cmpl
jne
movzwl
sub
mov
jmp
cmpw
jbe
movzbl
sub
push
movzwl
or
mov
sub
push
mov
movzwl
xor
push
call
jmp
cmpw
jbe
movzwl
push
mov
and
movzwl
add
push
mov
movzwl
and
movzbl
sub
push
movzwl
push
call
jmp
cmpw
jb
movzwl
mov
jmp
jmp
cmpl
jae
call
jmp
mov
add
add
mov
add
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
sub
mov
mov
add
movzwl
mov
mov
imul
mov
mov
shr
mov
mov
shl
mov
mov
and
mov
add
mov
mov
xor
add
mov
cmp
jb
mov
xor
mov
sub
mov
jmp
cmp
jne
cmpl
jne
push
pushl
call
mov
mov
xor
xor
mov
mov
shr
mov
mov
movzbl
or
movzwl
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
imul
imul
movzbl
mov
or
or
movzbl
mov
movzbl
mov
mov
mov
sub
mov
cmp
jne
movzwl
mov
jmp
jmp
cmp
jne
cmpw
jb
movzwl
push
movzwl
push
push
call
movzwl
shr
movzbl
movzwl
sub
sub
push
movzwl
xor
push
mov
imul
movzwl
sub
push
mov
movzwl
xor
push
movzwl
or
mov
imul
push
movzwl
add
push
push
mov
xor
push
mov
or
movzwl
and
push
movzwl
xor
push
mov
xor
push
movzwl
and
movzwl
xor
push
call
push
call
mov
imul
push
movzwl
movzwl
imul
push
call
mov
movzwl
movzwl
xor
xor
push
movzwl
push
push
push
movzwl
push
mov
and
xor
push
mov
xor
mov
sub
push
movzwl
xor
push
mov
add
push
mov
xor
mov
sub
push
movzwl
and
push
movzwl
xor
xor
push
call
mov
mov
and
add
push
mov
imul
sub
push
call
movzbl
movzwl
xor
movzwl
add
push
movzwl
or
mov
add
push
movzwl
xor
movzwl
or
push
call
mov
movzwl
imul
mov
movzwl
imul
push
call
movzbl
jmp
cmpw
jne
movzwl
mov
jmp
jmp
cmpw
jbe
mov
shl
movzbl
jmp
mov
test
jne
push
push
call
movzbl
jmp
cmpw
jne
movzwl
mov
jmp
cmp
jne
movzwl
sub
mov
jmp
cmp
jae
movzwl
add
push
movzwl
and
mov
sub
push
mov
and
movzwl
sub
push
call
jmp
cmp
jae
mov
sub
mov
mov
and
mov
movzwl
shr
mov
mov
and
mov
sub
mov
mov
or
mov
add
mov
movzwl
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
movzwl
mov
shl
movzwl
mov
movzwl
mov
xor
and
mov
mov
mov
xor
div
mov
mov
and
mov
sub
mov
mov
add
movzwl
mov
and
movzwl
mov
shr
movzwl
cmp
jbe
mov
add
movzwl
jmp
mov
test
jne
mov
test
jne
push
push
call
mov
jmp
cmp
jbe
mov
mov
jmp
jmp
cmp
jbe
mov
add
push
mov
or
push
mov
sub
add
push
call
jmp
cmp
jne
mov
mov
xor
div
mov
jmp
cmp
jb
mov
mov
jmp
mov
sub
mov
mov
and
imul
mov
mov
imul
mov
sub
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
movzwl
mov
xor
movzbl
mov
or
mov
mov
xor
mov
sub
mov
movzwl
and
mov
movzwl
add
movzbl
mov
or
movzwl
and
movzbl
mov
mov
cmp
jne
mov
imul
mov
sub
push
pushl
mov
movzwl
xor
push
mov
movzwl
and
xor
push
mov
or
push
call
jmp
mov
test
jne
pushl
pushl
call
movzbl
jmp
cmp
jbe
mov
movzbl
mov
imul
mov
movzbl
mov
mov
sub
movzbl
movzbl
sub
mov
mov
shr
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
movzbl
mov
movzbl
mov
sub
movzbl
mov
or
mov
mov
xor
or
mov
mov
shr
movzbl
cmpb
jne
mov
movzbl
imul
mov
jmp
cmpb
jne
push
movzbl
push
push
call
movzbl
jmp
cmpb
ja
movzbl
mov
jmp
jmp
cmpb
jne
mov
add
push
mov
movzbl
or
push
push
mov
and
and
push
call
mov
sub
push
mov
or
mov
imul
push
call
push
push
call
push
push
push
call
movzbl
mov
mov
imul
push
mov
imul
push
mov
add
push
call
movzbl
mov
sub
mov
mov
imul
push
call
mov
mov
movzbl
sub
add
movzbl
push
mov
and
push
call
mov
mov
add
push
push
movzbl
xor
add
push
push
mov
movzbl
add
push
mov
imul
push
mov
and
and
push
mov
and
push
movzbl
xor
push
movzbl
push
movzbl
and
sub
push
movzbl
or
and
push
call
mov
jmp
cmpb
jae
mov
or
or
mov
mov
xor
movzbl
and
movzbl
mov
mov
imul
mov
mov
add
mov
movzbl
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shr
movzbl
mov
add
movzwl
mov
xor
and
mov
mov
xor
mov
imul
mov
mov
movzwl
movzwl
movzbl
mov
movzwl
mov
shr
mov
cmpw
jne
movzwl
mov
jmp
jmp
mov
test
jne
push
movzwl
push
pushl
call
mov
mov
and
xor
mov
movzwl
movzwl
mov
and
mov
mov
movzwl
sub
push
mov
movzbl
imul
push
mov
xor
push
call
movzbl
mov
mov
xor
div
mov
movzwl
imul
movzwl
add
mov
mov
test
jne
push
movzwl
push
call
movzbl
jmp
cmp
jne
mov
imul
movzbl
add
push
movzwl
push
mov
and
mov
add
push
call
mov
or
push
call
movzwl
or
xor
push
movzbl
and
push
call
mov
push
movzbl
sub
push
call
movzwl
movzwl
push
call
mov
sub
push
movzwl
imul
push
call
mov
jmp
cmp
jb
mov
xor
movzwl
jmp
cmp
jb
mov
mov
jmp
jmp
cmp
jbe
mov
and
mov
movzwl
mov
xor
div
mov
mov
shr
movzwl
movzwl
shr
mov
mov
or
or
movzwl
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
movzwl
mov
mov
mov
movzwl
mov
or
movzbl
mov
add
movzbl
mov
and
movzbl
mov
shl
mov
mov
movzwl
mov
xor
movzwl
mov
mov
cmp
jbe
mov
add
mov
jmp
cmp
jbe
mov
and
xor
push
mov
and
or
push
mov
and
push
mov
xor
push
mov
sub
push
call
jmp
cmp
jne
mov
movzbl
jmp
cmp
jne
mov
or
movzwl
jmp
cmp
jne
pushl
call
mov
mov
add
sub
mov
mov
and
xor
movzbl
mov
or
imul
movzbl
mov
mov
movzbl
movzwl
xor
sub
mov
cmp
jne
mov
sub
movzbl
jmp
cmp
jne
call
mov
mov
or
add
mov
mov
mov
mov
xor
mov
mov
xor
movzbl
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
mov
xor
div
mov
mov
imul
sub
mov
mov
sub
movzbl
mov
or
mov
cmp
jne
push
push
call
mov
jmp
cmp
jne
mov
xor
imul
movzbl
jmp
cmp
jb
mov
xor
mov
mov
add
mov
mov
mov
mov
xor
div
mov
cmp
jbe
mov
xor
push
mov
add
push
mov
or
add
push
call
mov
shl
mov
mov
sub
push
call
mov
xor
imul
push
call
mov
jmp
cmp
jbe
mov
jmp
test
jne
cmp
jne
push
pushl
call
mov
mov
add
sub
mov
mov
or
mov
mov
mov
mov
and
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
movzwl
mov
shl
movzwl
mov
movzbl
mov
mov
mov
and
imul
movzwl
mov
sub
mov
mov
sub
sub
mov
mov
imul
sub
mov
cmpb
jne
mov
mov
xor
div
movzwl
jmp
mov
test
jne
movzbl
push
pushl
call
mov
mov
sub
movzbl
mov
add
mov
mov
mov
movzwl
add
mov
movzbl
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
or
mov
and
or
movzwl
mov
or
or
movzwl
mov
shl
mov
mov
and
mov
imul
movzbl
mov
shl
mov
cmp
jne
mov
add
mov
jmp
mov
test
jne
push
push
push
call
movzbl
jmp
cmp
jbe
movzwl
movzbl
jmp
cmp
jbe
movzwl
sub
mov
mov
xor
div
movzbl
mov
imul
mov
mov
xor
div
movzbl
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
mov
and
imul
mov
mov
shr
movzbl
mov
add
movzbl
mov
mov
xor
div
movzbl
mov
shl
mov
mov
or
mov
mov
imul
sub
mov
mov
movzbl
mov
cmp
jne
call
mov
mov
add
movzbl
mov
sub
mov
mov
xor
div
mov
mov
xor
divl
mov
mov
movzbl
add
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shr
movzbl
mov
add
movzbl
mov
shr
movzbl
mov
mov
mov
sub
mov
mov
mov
mov
movzbl
mov
mov
mov
mov
mov
mov
mov
and
sub
or
mov
mov
mov
mov
mov
mov
and
test
je
mov
movl
mov
mov
mov
mov
cmp
jne
movb
movzbl
sub
mov
mov
mov
mov
or
or
mov
movzbl
mov
movzbl
xor
add
mov
mov
movzbl
movzbl
or
add
mov
mov
mov
movzbl
mov
mov
mov
mov
movzbl
shr
mov
mov
mov
mov
movzbl
movzbl
imul
movzbl
imul
mov
movzbl
movzbl
and
sub
mov
movl
movzbl
add
mov
mov
mov
mov
movzbl
xor
add
and
mov
mov
movzbl
shl
mov
xor
jmp
mov
and
or
mov
mov
add
sub
mov
mov
mov
cmp
jne
movw
movzwl
and
movzwl
sub
mov
movzwl
or
movzwl
sub
mov
movzwl
or
xor
mov
mov
mov
add
mov
mov
mov
xor
divl
mov
xor
jmp
mov
or
add
mov
mov
sub
movzbl
mov
mov
cmp
jne
movw
movzwl
xor
movzwl
add
mov
movzbl
mov
mov
mov
add
mov
mov
movzwl
mov
mov
mov
mov
movzbl
mov
movl
movzbl
add
mov
mov
movzbl
movzbl
movzbl
and
add
cmp
jne
movl
mov
movzbl
movzbl
movzbl
add
sub
cmp
jne
movl
movzbl
mov
mov
test
je
mov
mov
and
mov
mov
xor
jmp
mov
movzbl
movzbl
movzbl
and
add
cmp
jne
movl
mov
movzbl
movzbl
movzwl
sub
sub
cmp
jne
mov
movzbl
mov
mov
and
mov
cmpl
jne
movl
movzbl
shl
mov
mov
test
je
mov
movl
movzbl
sub
mov
xor
jmp
mov
shl
movzbl
mov
mov
mov
or
sub
and
mov
mov
mov
sub
movzbl
xor
inc
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shl
mov
mov
shr
movzbl
mov
shl
mov
movzwl
shr
mov
mov
mov
mov
cmp
jne
mov
add
sub
mov
jmp
cmp
jne
mov
jmp
jmp
cmp
jbe
movzwl
mov
jmp
test
jne
mov
test
jne
cmpw
jbe
push
call
mov
xor
push
mov
or
push
call
mov
movzwl
xor
imul
push
mov
xor
or
push
push
movzwl
push
pushl
mov
sub
push
mov
imul
push
push
push
movzwl
push
movzwl
xor
mov
imul
push
movzwl
push
call
mov
sub
mov
mov
imul
push
movzwl
sub
push
call
mov
movzwl
imul
push
pushl
movzwl
movzwl
xor
add
push
movzwl
or
mov
add
push
call
mov
jmp
mov
test
jne
mov
test
jne
call
mov
jmp
cmp
jb
movzwl
shr
movzbl
jmp
cmp
jbe
movzwl
mov
xor
div
movzbl
jmp
cmp
jne
call
jmp
cmpw
jne
movzwl
xor
and
mov
mov
or
and
mov
mov
imul
movzbl
mov
add
add
mov
mov
add
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
movzwl
mov
add
movzwl
mov
shl
movzwl
mov
movzwl
mov
xor
imul
mov
mov
movzwl
or
imul
movzwl
mov
mov
movzwl
shr
movzwl
mov
test
jne
cmp
jne
mov
or
mov
sub
mov
jmp
mov
test
jne
push
push
call
mov
jmp
cmp
jne
movzwl
mov
jmp
jmp
cmp
jne
mov
mov
xor
div
mov
jmp
cmp
jb
mov
sub
mov
jmp
cmpw
jbe
mov
movzwl
xor
movzwl
and
push
call
mov
add
movzwl
mov
add
movzwl
mov
shl
mov
mov
imul
movzwl
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
or
and
movzwl
mov
xor
mov
imul
movzwl
mov
and
imul
movzwl
mov
and
mov
mov
sub
mov
movzbl
mov
mov
shl
mov
mov
shl
mov
movzwl
imul
mov
movzbl
and
mov
movzwl
and
mov
cmpw
jbe
mov
and
movzbl
or
movzwl
jmp
cmpw
jbe
mov
and
xor
mov
jmp
mov
test
jne
movzbl
push
push
push
movzwl
push
call
movzwl
jmp
cmpw
jbe
movzwl
movzbl
and
mov
mov
movzwl
mov
or
mov
mov
imul
mov
movzbl
mov
xor
div
movzwl
cmpb
ja
movzbl
mov
jmp
cmpb
jne
call
mov
jmp
cmpb
jne
mov
movzbl
sub
push
call
jmp
cmpb
jbe
mov
mov
jmp
jmp
cmpb
jae
movzbl
mov
jmp
mov
movzwl
mov
shr
mov
mov
and
movzbl
add
movzwl
movzwl
sub
mov
mov
shr
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
movzbl
mov
shr
movzbl
mov
shl
movzbl
mov
xor
mov
sub
mov
cmpb
jne
mov
test
jne
cmp
jae
movzbl
and
movzbl
jmp
cmp
jne
movzbl
push
push
movzbl
push
push
call
movzbl
jmp
cmpb
jne
mov
imul
mov
jmp
cmpb
jae
mov
sub
add
push
mov
xor
imul
push
call
push
movzbl
xor
movzbl
sub
push
movzbl
xor
and
push
call
jmp
cmpb
jne
mov
mov
jmp
mov
xor
mov
mov
shl
mov
movzbl
mov
mov
mov
pop
pop
pop
mov
pop
ret
mov
push
mov
push
mov
movzwl
movzwl
sub
jne
test
je
inc
inc
inc
inc
mov
jmp
pop
pop
test
jge
or
ret
jle
push
pop
ret
push
pushl
call
pop
pop
ret
pushl
call
pop
ret
lea
push
pushl
push
call
add
ret
xor
cmp
jne
push
push
push
jmp
push
push
pushl
pushl
call
add
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
push
mov
push
mov
testb
jne
mov
cmp
je
mov
sar
and
mov
lea
jmp
mov
testb
je
pushl
lea
push
call
pop
cmp
pop
jne
movl
or
jmp
cmp
jne
decl
js
mov
mov
mov
movzbl
incl
jmp
movsbl
push
push
call
pop
pop
cmp
je
mov
jmp
decl
js
mov
mov
mov
incl
movzbl
jmp
movsbl
push
push
call
pop
pop
cmp
je
decl
js
mov
mov
mov
movzbl
jmp
movsbl
push
jmp
addl
js
mov
mov
mov
addl
jmp
movzwl
push
push
call
pop
pop
pop
pop
ret
mov
push
push
test
pop
jne
mov
jmp
cmp
jge
mov
mov
push
push
call
pop
mov
test
pop
jne
push
push
mov
call
pop
mov
test
pop
jne
push
call
pop
xor
mov
mov
mov
add
add
cmp
jl
xor
mov
mov
mov
sar
and
mov
mov
cmp
je
test
jne
orl
add
inc
cmp
jl
pop
ret
call
cmpb
je
jmp
ret
push
mov
sub
andb
push
push
mov
xor
push
mov
mov
test
mov
je
mov
jmp
mov
xor
cmpl
jle
movzbl
push
push
call
pop
pop
jmp
mov
movzbl
mov
and
cmp
je
decl
push
lea
push
push
call
pop
pop
push
call
movzbl
inc
push
call
add
test
je
movzbl
inc
push
call
pop
jmp
cmpb
jne
andb
andb
andb
andb
andb
andb
xor
andb
mov
mov
mov
movb
mov
movzbl
inc
cmpl
jle
movzbl
push
push
call
pop
pop
jmp
mov
movzbl
mov
and
test
je
mov
incl
lea
lea
mov
jmp
cmp
jg
je
cmp
je
cmp
je
cmp
je
cmp
jne
incb
jmp
cmpb
jne
cmpb
lea
jne
incl
andl
andl
mov
jmp
incb
jmp
cmp
je
cmp
je
cmp
je
incb
jmp
incb
incb
jmp
decb
decb
cmpb
je
cmpb
mov
jne
mov
mov
add
mov
mov
mov
andb
cmpb
jne
mov
cmp
je
cmp
je
orb
jmp
movb
mov
movzbl
or
cmp
mov
je
cmp
je
cmp
je
pushl
lea
push
call
pop
jmp
pushl
incl
call
pop
mov
xor
cmp
je
cmp
je
cmp
jg
je
cmp
je
cmp
je
jle
cmp
jle
cmp
je
cmp
jne
cmpb
mov
je
jmp
push
pop
mov
cmp
jne
movb
jmp
mov
lea
cmp
jne
mov
lea
jmp
cmp
jne
mov
decl
incl
push
call
mov
pop
mov
jmp
mov
cmpl
je
cmpl
jle
movl
cmpl
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
je
mov
decl
test
je
incl
mov
inc
incl
push
call
mov
pop
mov
jmp
cmp
jne
mov
decl
test
je
incl
push
call
mov
mov
mov
pop
mov
inc
cmpl
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
je
mov
decl
test
je
incl
mov
inc
incl
push
call
mov
pop
mov
jmp
cmpl
je
cmp
je
cmp
jne
mov
decl
test
je
movb
inc
incl
push
call
mov
pop
cmp
mov
jne
mov
inc
jmp
cmp
jne
mov
decl
test
jne
and
jmp
incl
push
call
mov
pop
mov
cmpl
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
je
mov
decl
test
je
incl
mov
inc
jmp
decl
push
push
call
cmpl
pop
pop
je
cmpb
jne
incl
andb
lea
push
movsbl
pushl
dec
push
call
add
jmp
cmp
jne
incl
movl
cmpb
jle
movb
mov
jmp
mov
sub
je
sub
je
dec
dec
je
sub
je
sub
je
movzbl
cmp
jne
decb
cmpb
jne
mov
mov
jmp
cmpb
jle
movb
mov
inc
mov
cmpb
jne
mov
lea
jmp
cmp
jne
decl
jne
cmpl
je
movb
jmp
pushl
incl
call
mov
pop
mov
cmp
jne
pushl
incl
call
mov
pop
cmp
mov
je
cmp
je
cmp
movl
je
push
pop
jmp
pushl
decl
push
call
pop
pop
push
pop
jmp
pushl
incl
call
pop
mov
mov
push
jmp
cmpb
jle
movb
mov
orb
push
lea
push
push
call
add
cmpl
jne
cmpb
jne
mov
inc
movb
jmp
mov
mov
cmp
je
inc
cmp
jne
test
je
mov
cmp
je
inc
cmp
jae
mov
jmp
mov
mov
cmp
ja
movzbl
movzbl
sub
inc
mov
mov
and
mov
shr
shl
lea
or
inc
dec
jne
xor
jmp
movzbl
mov
mov
and
mov
shr
shl
lea
or
jmp
cmpb
je
cmpl
jne
mov
mov
mov
decl
push
pushl
mov
call
pop
pop
cmpl
je
mov
decl
test
je
incl
push
call
cmp
pop
mov
je
mov
push
and
pop
movsbl
shl
mov
sar
movsbl
xor
test
je
cmpb
jne
cmpb
je
mov
mov
movzbl
testb
je
incl
push
call
pop
mov
pushl
lea
push
lea
push
call
mov
add
mov
inc
inc
jmp
mov
inc
mov
jmp
incl
jmp
decl
push
push
call
pop
pop
cmp
je
cmpb
jne
incl
cmpl
je
cmpb
mov
je
andw
jmp
andb
jmp
movb
mov
cmp
jne
movb
jmp
cmp
jne
decl
jne
cmpl
je
movb
jmp
pushl
incl
call
pop
mov
mov
cmpl
je
cmpb
jne
cmp
jne
cmpl
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
je
mov
mov
push
pop
call
push
mov
mov
call
mov
pop
mov
jmp
cmpl
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
je
cmp
jne
cmp
jge
mov
mov
push
pop
call
jmp
push
push
pushl
pushl
call
mov
mov
incl
lea
cltd
add
adc
cmpl
je
decl
je
pushl
incl
call
mov
pop
mov
jmp
pushl
decl
push
call
pop
pop
cmpb
je
mov
mov
neg
adc
mov
neg
mov
jmp
cmpb
jne
cmp
je
cmp
je
cmpl
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
je
cmp
jne
cmp
jge
shl
jmp
lea
shl
jmp
cmpl
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
je
push
shl
call
mov
pop
mov
incl
cmpl
lea
je
decl
je
pushl
incl
call
mov
pop
mov
jmp
pushl
decl
push
call
pop
pop
cmpb
je
neg
cmp
jne
andl
cmpl
je
cmpb
jne
incl
cmpl
je
mov
mov
mov
mov
mov
jmp
cmpb
mov
je
mov
jmp
mov
incb
incl
mov
jmp
incl
push
call
mov
pop
movzbl
inc
cmp
mov
mov
jne
mov
movzbl
testb
je
incl
push
call
pop
movzbl
inc
cmp
mov
jne
decl
cmpl
jne
cmpb
jne
mov
cmpb
jne
mov
mov
test
jne
jmp
pushl
decl
pushl
jmp
decl
push
push
call
pop
pop
jmp
decl
push
push
call
decl
push
push
call
add
cmpl
jne
mov
test
jne
cmp
jne
or
jmp
mov
pop
pop
pop
leave
ret
cmpl
push
jle
mov
push
push
call
pop
pop
jmp
mov
mov
mov
and
test
jne
and
sub
mov
pop
ret
mov
decl
js
mov
movzbl
inc
mov
ret
push
call
pop
ret
cmpl
je
pushl
pushl
call
pop
pop
ret
push
mov
push
pushl
incl
call
mov
push
call
pop
test
pop
jne
mov
pop
pop
ret
push
mov
push
andl
push
mov
push
mov
cmp
je
cmp
jb
cmp
ja
test
je
cmp
je
or
jmp
push
mov
push
and
call
push
call
andw
pop
pop
mov
test
je
or
push
mov
lea
pop
jmp
mov
test
jne
push
call
test
pop
jne
incl
orl
jmp
orw
jmp
or
mov
andl
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
mov
push
push
push
mov
mov
mov
test
mov
je
test
jne
xor
test
je
test
mov
je
mov
and
mov
mov
mov
mov
and
mov
or
test
mov
jne
cmp
je
cmp
jne
push
call
test
pop
jne
push
call
pop
mov
testw
push
je
mov
mov
sub
lea
mov
mov
dec
dec
cmp
mov
jle
push
push
push
call
add
mov
jmp
cmp
je
mov
mov
sar
and
mov
lea
jmp
mov
testb
je
push
push
push
call
add
mov
mov
mov
jmp
mov
push
pop
lea
push
push
push
mov
call
add
mov
cmp
pop
je
orl
jmp
mov
and
jmp
or
mov
mov
pop
pop
leave
ret
push
mov
push
push
mov
mov
mov
test
je
test
jne
test
je
andl
test
je
mov
and
mov
mov
mov
andl
andl
and
or
test
mov
jne
cmp
je
cmp
jne
push
call
test
pop
jne
push
call
pop
testw
push
je
mov
mov
sub
lea
mov
mov
dec
test
mov
jle
push
push
push
call
add
mov
jmp
cmp
je
mov
mov
sar
and
mov
lea
jmp
mov
testb
je
push
push
push
call
add
mov
mov
mov
jmp
push
lea
pop
push
push
push
call
add
mov
cmp
pop
je
orl
jmp
mov
and
jmp
or
mov
or
pop
pop
pop
ret
push
mov
mov
test
jne
pop
ret
cmpl
jne
mov
cmp
ja
push
mov
pop
pop
ret
lea
andl
push
push
pushl
push
lea
push
push
push
pushl
call
test
je
cmpl
je
movl
or
pop
ret
push
push
mov
push
imul
cmp
mov
ja
test
jne
push
pop
add
and
xor
cmp
ja
cmp
ja
push
call
mov
pop
test
jne
push
push
pushl
call
mov
test
jne
cmpl
je
push
call
test
pop
je
jmp
push
push
push
call
add
mov
pop
pop
pop
ret
xor
jmp
push
push
push
xor
pop
cmp
jle
mov
mov
test
je
testb
je
push
call
cmp
pop
je
inc
cmp
jl
mov
pushl
call
mov
pop
andl
inc
cmp
jl
mov
pop
pop
ret
push
mov
test
jne
push
call
pop
pop
ret
push
call
test
pop
je
or
pop
ret
testb
je
pushl
call
neg
pop
pop
sbb
ret
xor
pop
ret
push
push
mov
xor
push
mov
mov
and
cmp
jne
test
je
mov
mov
sub
test
jle
push
push
pushl
call
add
cmp
jne
mov
test
je
and
mov
jmp
orl
or
mov
andl
mov
pop
mov
pop
pop
ret
push
call
pop
ret
push
push
push
xor
xor
xor
cmp
jle
mov
mov
test
je
mov
test
je
cmpl
jne
push
call
cmp
pop
je
inc
jmp
cmpl
jne
test
je
push
call
cmp
pop
jne
or
inc
cmp
jl
cmpl
mov
je
mov
pop
pop
pop
ret
push
mov
push
push
mov
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
mov
xor
pop
pop
pop
ret
cmp
jne
mov
cmp
je
movzbw
mov
push
pop
jmp
mov
movzbl
testb
je
mov
cmp
jle
cmp
jl
xor
cmp
setne
push
pushl
push
push
push
pushl
call
test
mov
jne
cmp
jb
cmp
jne
movl
or
jmp
xor
cmp
setne
push
pushl
push
push
push
pushl
call
test
jne
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
cmpl
jle
push
pushl
call
pop
pop
ret
mov
mov
mov
and
ret
push
mov
push
mov
lea
cmp
ja
mov
movzwl
jmp
mov
push
mov
sar
movzbl
testb
pop
je
andb
mov
mov
push
jmp
andb
mov
push
pop
lea
push
push
push
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
cmp
jae
shld
shl
ret
mov
xor
and
shl
ret
xor
xor
ret
push
mov
mov
test
je
test
jne
test
je
or
mov
jmp
or
test
mov
jne
push
call
pop
jmp
mov
mov
pushl
pushl
pushl
call
add
mov
test
je
cmp
je
mov
test
jne
mov
push
cmp
je
mov
sar
and
mov
lea
jmp
mov
mov
pop
and
cmp
jne
or
mov
cmpl
jne
mov
test
je
test
jne
movl
mov
dec
mov
movzbl
inc
mov
pop
ret
neg
sbb
and
add
or
andl
or
pop
ret
push
mov
cmp
push
je
mov
mov
test
jne
test
je
test
jne
cmpl
jne
push
call
pop
mov
cmp
jne
cmpl
jne
inc
mov
testb
je
decl
mov
cmp
je
inc
mov
or
pop
pop
ret
decl
mov
mov
mov
incl
and
or
mov
mov
and
jmp
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
mov
mov
test
je
test
je
pushl
call
andw
xor
pop
mov
mov
mov
pop
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
fbstp
add
jno
add
jno
add
inc
add
inc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
clc
jno
add
jb
add
inc
add
jb
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cwtl
jb
add
jb
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
xor
inc
add
inc
add
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
nop
jae
add
jae
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
mov
push
cmp
push
push
jae
mov
mov
sar
and
lea
shl
mov
testb
je
push
call
cmp
pop
jne
movl
jmp
pushl
push
pushl
push
call
mov
cmp
jne
call
jmp
xor
test
je
push
call
pop
jmp
mov
andb
lea
mov
jmp
andl
movl
or
pop
pop
pop
ret
push
mov
sub
mov
push
cmp
push
push
jae
mov
mov
sar
and
lea
shl
mov
mov
test
je
xor
cmp
mov
mov
jne
xor
jmp
test
je
push
push
push
call
add
mov
add
testb
je
mov
cmp
mov
mov
jbe
lea
mov
sub
cmp
jae
mov
incl
mov
cmp
jne
incl
movb
inc
mov
inc
mov
lea
sub
cmp
jl
mov
lea
sub
lea
push
push
lea
push
push
mov
pushl
call
test
je
mov
add
cmp
jl
mov
sub
cmp
jb
xor
mov
cmp
jne
cmp
je
push
pop
cmp
jne
movl
mov
jmp
call
mov
jmp
lea
push
push
pushl
pushl
pushl
call
test
je
mov
mov
mov
jmp
call
mov
jmp
pushl
call
pop
jmp
mov
testb
je
mov
cmpb
je
movl
mov
jmp
sub
jmp
andl
movl
or
pop
pop
pop
leave
ret
incl
push
call
pop
mov
test
mov
je
orl
movl
jmp
orl
lea
mov
movl
mov
andl
mov
ret
mov
cmp
jb
xor
ret
mov
and
sar
mov
mov
and
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
push
mov
push
or
mov
test
je
or
jmp
test
je
push
call
push
mov
call
pushl
call
add
test
jge
or
jmp
mov
test
je
push
call
andl
pop
mov
andl
pop
pop
ret
mov
cmp
jae
mov
mov
sar
and
mov
testb
je
push
call
pop
push
call
test
jne
call
jmp
xor
test
je
mov
movl
or
ret
push
call
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
push
push
mov
push
cmp
jae
mov
and
sar
shl
lea
mov
add
mov
test
je
andl
mov
cmpl
mov
je
test
jne
test
je
mov
cmp
je
decl
mov
mov
lea
movl
movb
lea
push
push
mov
pushl
push
pushl
call
test
jne
call
push
pop
cmp
jne
movl
mov
jmp
cmp
jne
xor
jmp
push
call
pop
jmp
mov
mov
add
lea
mov
test
je
test
je
cmpb
jne
or
jmp
and
mov
mov
mov
mov
add
cmp
mov
jae
mov
mov
cmp
je
cmp
je
mov
inc
incl
jmp
dec
cmp
jae
mov
inc
cmpb
jne
addl
jmp
movb
inc
mov
jmp
lea
push
push
incl
lea
push
push
mov
pushl
call
test
jne
call
test
jne
cmpl
je
mov
testb
je
mov
cmp
je
movb
mov
inc
mov
jmp
cmp
jne
cmpb
jne
movb
jmp
push
push
pushl
call
add
cmpb
je
movb
inc
mov
cmp
jb
jmp
mov
lea
mov
test
jne
or
mov
sub
mov
mov
jmp
andl
movl
or
pop
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
incl
inc
add
xchg
faddl
inc
add
xchg
les
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sbb
inc
add
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
mov
add
add
rorl
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
push
mov
pop
mov
mov
insb
mov
je
inc
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
inc
add
mov
fmull
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
mov
xor
mov
mov
cmp
je
add
inc
cmp
jl
cmp
jb
cmp
ja
movl
ret
mov
mov
ret
cmp
jb
cmp
movl
jbe
movl
ret
mov
push
cmp
push
jae
mov
mov
sar
and
lea
shl
mov
add
testb
je
cmpl
je
cmpl
jne
xor
sub
je
dec
je
dec
jne
push
push
jmp
push
push
jmp
push
push
call
mov
orl
xor
jmp
andl
movl
or
pop
pop
ret
mov
cmp
jae
mov
and
sar
mov
testb
lea
je
mov
ret
andl
movl
or
ret
push
push
push
push
mov
cmp
jae
mov
mov
sar
and
lea
shl
mov
testb
je
push
call
cmp
pop
je
cmp
je
cmp
jne
push
call
push
mov
call
pop
cmp
pop
je
push
call
pop
push
call
test
jne
call
mov
jmp
xor
push
call
mov
pop
andb
test
je
push
call
pop
jmp
xor
jmp
andl
movl
or
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
jmp
mov
dec
add
mov
dec
add
jbe
add
pusha
dec
add
push
dec
add
aam
add
add
add
jo
add
pusha
push
add
inc
push
add
xor
add
push
add
fimull
add
dec
add
mov
add
mov
dec
add
orb
outsb
dec
add
push
push
add
pop
dec
add
hlt
dec
add
push
push
add
sbb
add
push
add
xor
add
dec
push
add
pop
push
add
js
add
mov
add
push
add
fcoms
add
push
add
or
add
add
sub
add
cmp
add
add
push
push
add
fs
add
jo
add
jl
add
mov
add
add
mov
add
rclb
int3
push
add
fcoml
add
push
add
cli
push
add
or
add
adcb
add
add
and
add
add
or
add
dec
add
xor
add
subb
mov
mov
cwtl
adc
loope
and
scas
mov
push
inc
fcomps
push
stc
mov
add
push
or
sbb
adc
fsts
inc
inc
add
ja
jne
lds
dec
sub
xorb
cmp
xlat
js
mov
adc
loope
ret
imul
jle
or
dec
frstor
scas
pop
push
out
pop
sbb
rcll
andl
subb
orb
jecxz
insb
ret
rorb
clc
jne
into
add
xchg
push
fwait
insb
mov
xchg
je
daa
sub
or
pop
jnp
mov
fnstcw
leave
lret
popa
push
xchg
sub
push
jmp
push
mov
aam
imul
xor
std
les
aam
mov
or
pop
orb
add
inc
lcall
pop
xchg
fiadds
push
in
btl
jl
push
dec
rol
pop
sbb
jae
cmp
jo
loop
inc
sbb
lcall
cmp
ret
lds
jg
add
iret
popf
cwtl
clc
popa
and
cs
pop
and
pusha
xchg
clc
and
adc
in
ja
cmp
test
mov
scas
iret
adc
pop
pop
ret
adc
push
arpl
fistl
std
inc
pop
popf
add
rclb
push
mov
movsb
ljmp
sbb
jmp
or
push
loopne
and
xor
xor
lds
jle
dec
xchg
xchg
pop
setb
nop
ds
and
xlat
and
mov
jns
mov
mov
rcrl
mov
xchg
adc
mov
pop
sub
loopne
xchg
lds
mov
fnstsw
lcall
xchg
test
cmp
sarl
cltd
in
push
inc
int
insl
cmp
pop
stc
nop
sbb
mov
clc
sti
xchg
xor
jmp
fldl
int
mov
xchg
shl
pop
nop
adc
cld
cmp
sub
dec
mov
adc
shl
lods
cld
insl
inc
xor
stos
jle
aad
jnp
xorb
popa
outsb
mov
shlb
shll
or
divb
inc
lock
es
inc
mov
pop
or
adc
xchg
sbb
adc
aam
ret
icebp
nop
jno
xor
mov
add
aaa
int
test
push
dec
dec
fwait
add
stos
call
mov
in
push
sbb
mov
push
js
addr16
aaa
mov
push
jp
push
xchg
rcr
pop
leave
sbb
das
jae
outsb
and
xor
or
sbbl
test
mov
pop
jb
popf
cli
mov
inc
push
jge
in
cmp
push
movsl
pop
mov
mov
out
xor
out
in
iret
clc
mov
cmp
push
sub
push
xorl
ret
lea
mov
xchg
adc
imul
xchg
dec
mov
jmp
xchg
loope
lcall
adc
adc
mov
mov
xor
loopne
jo
or
in
cmp
andl
mov
push
xorb
sub
xor
insl
es
xor
leave
jbe
cmpsl
out
movsb
mov
jae
xchg
clc
xor
fistl
mov
daa
cmp
mov
push
mov
sbb
mov
in
mov
xor
or
inc
mov
push
inc
imul
movsl
bound
push
das
adc
mul
xor
js
mov
daa
inc
cmp
jo
or
loopne
aam
pop
sbb
fwait
fwait
shrl
dec
mov
outsb
das
cmc
sub
dec
pop
cld
stos
lea
lods
mov
xchg
orl
cwtl
xchg
sub
jl
mov
mov
xlat
jae
stos
jle
cmp
cmpsl
fimuls
mov
cmp
in
iret
cmpsl
push
xchg
pushf
loopne
and
rorl
and
negb
imul
adc
outsl
pop
lret
jp
jbe
jns
mov
icebp
mov
pushf
adc
or
ljmp
dec
add
ds
jmp
out
aam
cmp
testl
cmp
cltd
mov
outsl
jle
scas
add
sti
faddl
int
filds
ss
push
lahf
test
sti
mov
test
adc
das
or
addl
mov
aaa
dec
push
mov
sbb
test
rolb
cwtl
pop
jg
or
push
enter
lcall
lcall
outsb
pushf
or
adc
or
in
stc
or
aas
sbb
ret
mov
and
push
stc
mov
aam
retw
and
push
mov
ja
and
mov
ret
mov
dec
mov
or
mov
out
fcomps
add
mov
shrl
ljmp
mov
in
push
mov
add
xchg
sbb
out
std
push
daa
adc
xor
sub
nop
push
and
jmp
fisubs
int
mov
lods
es
push
repnz
data16
mov
fcmovb
xor
sub
loopne
xor
int3
mov
adc
rorb
lods
cmp
pop
sbb
dec
add
mul
mov
rcr
and
outsl
dec
adc
sti
aas
cmp
mov
fcmove
mov
outsl
jle
jne
jae
call
aam
dec
icebp
jns
test
push
push
lods
idiv
cmp
test
sub
sarb
repz
add
lods
lcall
cmc
popa
xor
test
xor
dec
lret
or
cmp
test
xor
xchg
push
inc
jmp
addr16
sub
or
sbb
push
nop
jno
sub
mov
shll
push
insb
in
jae
mov
out
out
and
insl
and
lret
scas
sub
mov
je
cltd
rorb
jp
lods
adc
sub
and
ds
cs
push
jne
mulb
negb
adc
jl
push
xchg
push
push
jle
fisttpll
mov
into
test
gs
and
lret
sahf
push
scas
inc
in
les
stos
and
or
jae
jecxz
repz
std
sbb
push
push
out
mov
xor
cmp
cmpsl
stos
push
adc
pop
adc
or
jbe
xlat
icebp
dec
nop
pushf
mov
je
out
jo
js
sbb
inc
std
jge
dec
xchg
gs
andl
addr16
pushf
mov
mov
dec
push
ja
xlat
adc
mov
scas
aad
in
pop
mov
mov
mov
aaa
ret
add
pop
test
mov
push
arpl
push
mov
mov
scas
push
outsl
andl
pop
dec
dec
mov
negl
repnz
mov
out
cmp
andb
push
xchg
xor
aad
test
sahf
into
xor
and
sub
pop
pop
daa
loope
jo
test
push
jno
leave
mov
rcll
push
test
jecxz
mov
inc
jecxz
xchg
shlb
dec
loopne
setns
push
shrl
and
lea
xchg
push
xchg
xchg
mov
dec
sub
push
xlat
or
lcall
mov
mov
cs
inc
inc
push
jne
fdivs
outsb
sbb
push
push
sti
roll
xor
in
movsl
mov
shrb
mov
xchg
pop
sub
orb
idivb
pushf
pop
pusha
pop
sub
dec
pop
insl
aad
sti
ficomps
jle
sbb
imul
pusha
xor
enter
mov
sub
aad
inc
or
mov
scas
aam
call
pop
inc
rcll
xchg
rcl
cmp
popf
insb
mov
mov
fs
std
addl
test
inc
jle
or
dec
cwtl
pop
icebp
lcall
inc
mov
out
mov
sahf
test
test
jbe
or
add
sub
cs
dec
cltd
leave
test
std
daa
in
lods
pop
in
ja
adcl
mov
iret
mov
xchg
and
dec
andb
sbb
dec
add
fldl2t
outsl
inc
ret
es
cmp
rorb
fimuls
inc
xor
stos
rcrb
bound
push
or
das
adc
inc
ret
sub
xor
jb
mov
cld
pop
fwait
mov
and
imul
xchg
add
adc
jge
inc
pop
inc
cmp
mov
test
jne
lods
ds
and
and
lret
movsl
mov
mov
in
jg
push
cmp
aad
dec
fsincos
and
orl
std
aad
inc
in
and
out
pop
ret
add
adc
enter
xchg
xchg
sub
push
stos
mov
imul
fisubrl
imul
mov
xchg
in
shrl
mov
inc
lret
bound
ja
fstps
fsubrs
pop
pop
sbb
sub
add
add
mov
clc
xor
or
inc
push
scas
mov
es
jo
rclb
lods
sub
xchg
jns
and
inc
rcrl
sbb
push
ss
fdiv
movsl
stos
xlat
leave
jp
arpl
push
aad
mov
inc
mov
scas
xchg
cltd
mov
dec
xor
add
clc
add
mov
sub
out
outsb
jg
jmp
lds
pop
and
stos
ja
sti
push
xchg
cmpsb
ljmp
xor
and
fisubrl
es
push
sub
cmp
stos
in
mov
sbb
and
pop
and
loop
add
popf
les
outsb
mov
add
mov
adc
les
ljmp
frstor
ja
xchg
pushf
fildll
in
xor
add
mov
dec
fisubrl
addr16
cmpsl
fdivrl
dec
mov
pop
icebp
mov
clc
outsl
fisttps
adcl
or
or
cwtl
jne
ret
push
cwtl
xorb
dec
test
jb
lret
cltd
inc
jbe
jmp
enter
je
adc
or
fbstp
xor
push
adc
rclb
mov
addb
fdivrs
mov
jp
mov
sbb
cmp
popa
mov
xchg
mov
stos
lock
jb
cmpsl
add
jnp
xor
insl
mov
or
cli
cmc
mov
inc
xorb
or
adc
add
data16
push
lods
push
cli
std
loopne
out
xor
adc
test
in
mov
int
cs
aas
popf
sbb
or
jns
and
add
pop
sub
outsl
cmp
mov
pop
loopne
arpl
xchg
dec
mov
loope
or
mov
ficoml
std
mov
inc
adc
push
dec
out
dec
push
roll
mov
sub
lret
xchg
push
icebp
add
jle
xlat
sub
adc
sbb
cmpsl
push
mov
ficoml
loop
cmp
out
push
sbb
insl
lahf
mov
std
daa
jle,pn
sub
pusha
mov
sub
or
lods
stos
cli
rorl
pop
mov
insl
les
pop
loopne
fldenv
and
dec
sub
dec
jp
mov
dec
dec
mov
add
jg
pusha
in
or
add
call
inc
mov
ljmp
cwtl
dec
push
ds
jmp
jle
test
jmp
xchg
push
and
test
jmp
je
aas
jno
jno
xchg
iret
mov
xchg
fmulp
push
and
adc
jns
mov
push
mov
cmp
faddl
mov
jnp
repnz
mov
repz
aam
cmp
pop
inc
xchg
test
loopne
cmc
adc
jb
adc
inc
lret
ja
loopnew
jge
jae
mov
push
nop
and
xlat
out
outsb
je
shlb
addr16
xchg
adc
fs
pop
hlt
fisttpll
pop
adc
add
push
icebp
lds
cwtl
jnp
inc
jg
iret
jle
arpl
cmpsb
jo
mov
mov
push
and
stos
mov
sarb
iret
cmp
add
pop
and
bound
mov
int
pop
js
mov
push
adc
push
ss
stos
into
enter
adc
jmp
lods
fisttpl
fsubrs
or
addr16
push
frstor
jns
push
xor
mov
std
data16
cld
mov
push
jge
dec
lods
loopne
mov
xor
xchg
push
clc
popa
in
pop
cmc
jne
pushf
jnp
nop
mov
fcompl
mov
jmp
cli
push
push
adc
stos
mov
cltd
pusha
xchg
xlat
jne
adc
mov
add
xor
je
cli
or
mov
push
outsl
repz
mov
imul
adc
jmp
mov
xlat
repnz
in
outsb
sbb
mov
xlat
sbb
stc
out
ret
pop
sbb
fwait
int
and
test
and
push
dec
push
or
pop
ss
sub
fmul
pop
fildl
mov
jmp
cli
test
xchg
dec
xchg
xchg
or
test
xchg
popa
inc
lods
movsb
mov
rcll
pop
jle
push
iret
push
stc
jmp
jle
icebp
jmp
sbb
add
js
mov
in
sbb
pop
sub
pop
ds
in
lods
out
repz
xchg
jnp
adc
gs
hlt
push
push
out
pop
movsl
aas
andl
scas
xor
cmp
ret
sub
popf
or
xor
popf
xchg
adc
lcall
mov
push
mov
push
inc
daa
add
fsubrp
test
inc
sub
stc
cmp
push
in
in
cmp
and
fiaddl
and
mov
mov
xchg
cltd
lods
xchg
push
out
jo
pusha
test
xchg
in
enter
and
repz
sbb
or
ja
movsl
sbb
add
dec
rcl
adc
lock
dec
pusha
jl
mov
lock
shl
negl
loopne
adc
add
sbb
xchg
lahf
mov
addr16
inc
divb
iret
sahf
in
mov
push
pop
sub
push
push
xlat
lea
scas
dec
outsl
xor
hlt
scas
xor
loopne
dec
mov
jp
and
ret
stos
xorl
pushf
push
loopne
mov
push
lock
pop
dec
xor
push
pop
idiv
into
xor
test
insb
mov
or
push
push
aam
xchg
and
sarb
incb
mov
xlat
pop
bt
clc
inc
movsb
mov
fwait
dec
mov
mov
pusha
xchg
lds
jbe
in
xchg
and
insb
in
adc
int
add
aad
in
dec
sub
icebp
cmp
sbb
clc
mov
dec
aaa
loopne
les
jno
and
fwait
in
mov
out
add
sub
mov
and
mov
lods
push
jo
loop
roll
lea
pop
push
lods
pop
and
sti
movsl
out
adc
lret
mov
adc
out
imul
aam
jns
scas
in
sarb
sbb
adc
jmp
stc
mov
daa
hlt
lds
push
add
mov
pop
shrl
arpl
cs
pop
test
mov
cmp
scas
or
shll
mov
add
call
xlat
cmp
cmp
ret
cld
sarl
push
dec
call
pop
mov
xor
or
in
inc
push
ss
outsb
inc
pop
inc
je
jns
cmp
insl
pop
mov
cmpsl
xchg
lods
inc
ss
outsb
cmp
cmp
and
sarb
pushf
ret
lahf
pop
loope
adc
xor
xchg
popa
orb
std
mov
cmc
hlt
push
push
jbe
stos
xlat
pop
fidivrs
roll
jae
jmp
and
inc
and
inc
mov
loopne
push
rcll
popf
sub
call
arpl
cli
fcoms
lods
cld
cmp
cmp
and
mov
mul
fildl
ror
neg
into
bound
insb
roll
movsb
sbb
pop
dec
pop
pop
aad
add
pop
mov
add
roll
mov
inc
arpl
xor
sbbl
jbe
xor
mov
cwtl
xchg
fstl
les
push
xchg
mov
cmp
in
pushf
mov
shrb
repz
popw
jne
inc
inc
stos
fwait
jp
rol
pop
xchg
loop
xchg
add
sub
stos
es
sbbb
dec
ficoms
cmp
mov
mov
mov
pushf
xlat
xor
les
xor
iret
js
pop
in
pop
movsb
sbb
lods
inc
movsl
rcll
pop
jmp
or
mov
sbb
loop
mov
loope
mov
push
mov
test
orl
loope
pushf
fldl2t
out
pop
aad
sub
sub
mov
aad
cmp
inc
arpl
xchg
test
push
popa
aam
mov
jne
sub
mov
data16
xorb
adc
repnz
daa
subl
pop
jns
lcall
sub
sub
jl
xchg
cmp
adc
rol
std
ret
ret
add
nop
ja
xor
mov
data16
xchg
inc
pop
dec
sarb
addl
xor
data16
repz
test
add
insb
dec
jge
ret
and
or
dec
iret
gs
xlat
int3
cltd
push
push
cmp
or
repz
pop
jb
ja
ja
dec
cli
test
cs
mov
aam
xchg
or
and
push
shl
sbb
lock
shll
les
mov
fstpt
mov
sub
test
fdivs
loope
loop
sub
mov
daa
sub
mov
mov
in
fimull
call
push
int3
or
jle
popa
add
jmp
mov
mov
inc
cmpsl
cmp
xchg
jbe
call
sub
mov
cli
pop
jbe
rclb
xchg
in
dec
insb
scas
and
mov
pop
jbe
mov
insb
sbb
or
jne
push
fnstenv
inc
imul
sbb
push
or
add
jnp
pusha
daa
in
mov
mov
jns
jns
pop
mov
out
xchg
bound
pop
icebp
and
sahf
divl
frstor
cs
cmc
jnp
pop
rcrl
pushf
mov
in
mov
je
xor
jp
mov
sub
lret
enter
std
arpl
cmpxchg
mov
or
hlt
js
lock
pop
sub
dec
pop
mov
movsl
push
outsl
ficoms
int
mov
xchg
push
lcall
xchg
and
inc
pop
test
test
add
scas
rcrl
mov
fucom
dec
push
out
jecxz
dec
sbb
jmp
adc
je
rcrl
cmp
push
sbb
mov
or
sbb
add
xchg
out
insb
rep
stc
sbb
xlat
mov
js
popf
cmp
or
adc
pop
out
mov
push
pusha
pop
daa
push
push
inc
repnz
daa
xchg
sbb
jmp
cwtl
clc
int3
jbe
cld
loope
xchg
outsl
test
mov
and
gs
or
push
rolb
cld
push
pop
arpl
jo
in
mov
push
push
loopne
roll
sbb
mov
inc
pop
lods
fs
out
psubq
cwtl
in
popf
dec
and
subl
cmp
push
push
iret
and
stos
out
add
mov
sub
push
imul
jnp
and
and
add
inc
add
loopne
fldcw
popf
jmp
cmp
in
ret
push
and
jg
mov
call
jae
jbe
cli
inc
imul
stos
popa
mov
mov
das
cmp
mov
sbb
cs
or
adc
mov
mov
fisubrs
lahf
outsb
clc
xchg
jnp
bound
stos
je
cltd
jp
clc
mov
cmp
jmp
mov
mov
aas
inc
cmp
xlat
mov
mov
ficomps
mov
sub
sbb
lret
into
pop
cwtl
mov
sbb
aad
mov
pop
xor
data16
push
idiv
sahf
fucomp
sbb
pop
aam
push
push
mov
cmpsb
int3
cli
lea
repz
mov
mov
cmpb
pop
outsb
xor
lock
and
xor
sbb
dec
fdivl
pop
adc
test
and
sub
ret
jle
dec
arpl
mov
je
cmc
loope
pop
scas
fstl
cmp
jp
je
call
arpl
adc
jmp
adc
sahf
into
stc
pop
in
lcall
add
adc
fdivrl
movsl
popa
adc
push
movsb
xchg
test
mov
push
sub
pop
xor
bound
xchg
add
or
push
cmp
adc
add
fldcw
ret
cmp
jns
add
gs
das
inc
cmpsb
sub
es
movsl
lret
cmc
mov
xchg
cmp
pop
daa
mov
push
cmp
in
inc
add
lock
cmp
fisubl
jle
in
fdiv
das
rorl
xchg
in
mov
lods
mov
mov
cmp
inc
sub
pop
cmp
xchg
mov
mov
out
push
and
and
outsb
mov
in
inc
dec
int
idiv
cltd
pop
push
cltd
dec
cmc
ret
inc
inc
mov
xor
mov
xor
mov
push
sub
mov
movsl
js
inc
add
int
shrl
mov
pop
pop
mov
je
xchg
cmp
push
and
mov
or
dec
fwait
mov
jns
pop
xorl
or
fwait
repnz
cmp
aad
and
jge
scas
out
pop
rcr
sarb
pop
std
jns
or
fcoms
mov
sub
jmp
mov
jp
dec
sbb
fs
int
dec
xchg
mov
xor
addr16
mov
add
jae
scas
or
xchg
out
cmpsl
test
loopne
push
pushf
in
pop
fisubs
test
icebp
cli
loop
mov
leave
push
mov
adc
mov
add
int3
xchg
aas
pop
ja
dec
mov
xor
dec
pop
push
push
or
fdivrs
add
dec
pop
push
dec
mov
stos
jmp
jbe
and
test
je
or
jp
mov
fwait
pop
fnstsw
lea
dec
mov
sbb
sbb
xchg
fists
sub
leave
iret
xchg
scas
aas
and
cmpsl
sbb
mov
mov
fidivrs
pop
xchg
xchg
sbb
push
lds
js
inc
mulb
mov
pop
mov
jecxz
cmpsl
mov
out
sahf
dec
outsl
push
mov
and
leave
xchg
lock
mov
ljmp
jne
pop
outsb
adc
fs
add
es
push
jle
xor
fucomp
pop
pop
sub
lods
add
stc
outsl
cmp
cmpsl
adc
jmp
aas
pop
mov
mov
ret
out
cs
jmp
aas
push
mov
push
mov
sub
stos
dec
mov
loop
cmc
mov
fcomps
mov
push
and
icebp
dec
sub
mov
out
aaa
sbb
addb
cmp
or
inc
cld
push
pop
call
push
jb
rcl
fisttpl
clc
xor
add
dec
xchg
sbb
add
fincstp
aas
sar
out
mull
clc
mov
pop
nop
add
jae
lods
mov
aam
outsb
aam
gs
int3
int
rol
cmp
out
push
fwait
imul
fidivrs
imul
rcll
dec
aam
dec
ja
scas
decb
cli
aam
dec
js
call
xchg
lods
mov
dec
sahf
lock
mov
push
inc
inc
mov
push
push
test
push
mov
lods
push
adc
mov
andl
daa
fabs
and
gs
je
rclb
mov
jno,pn
jno
bound
mov
mov
mov
mov
mov
or
data16
or
sub
fdivrs
arpl
stos
push
scas
adc
mov
roll
je
movsb
push
and
loope
fwait
xchg
ja
cmpl
outsb
cs
fistl
push
popa
cmc
xchg
ljmp
ror
adc
mov
das
shl
wbinvd
repnz
sub
pop
xor
gs
popf
mov
in
push
mov
push
xor
dec
icebp
push
iret
aaa
inc
lods
jge
cmp
imul
cmp
dec
int
or
outsl
jl
out
sub
inc
rclb
out
std
cmp
push
adcl
jo
xor
or
stos
test
aam
iret
es
xor
adc
out
test
pop
mov
xchg
rcrb
test
xor
mov
jne
sub
add
stc
push
push
dec
mov
mov
cmc
fstl
mov
scas
jb
fisubrs
add
jecxz
adc
fdivrp
mov
add
add
scas
cmp
pop
mov
js
cmp
mov
fs
insb
rcrl
scas
ret
sbb
out
aas
mov
call
pop
sub
orb
sub
or
pop
fcmovu
sub
sub
jle
xor
or
sahf
mov
out
ss
mov
xor
das
adc
sbb
inc
mov
xchg
cli
dec
sbb
pusha
sbb
repz
jmp
sub
adc
mov
bound
mov
les
test
dec
push
jmp
add
and
push
xchg
aad
mov
sub
or
out
mov
push
inc
inc
xlat
xchg
sbb
pop
mov
inc
movsb
sbb
enter
mov
jle
mov
test
dec
push
jmp
add
and
push
xchg
aad
mov
sub
or
out
mov
push
inc
inc
xlat
out
mov
cwtl
mov
mov
or
nop
sbb
pop
mov
jns
jbe
pop
mov
imul
cltd
add
pop
jle
push
jbe
sbb
xor
andb
mov
and
orl
xchg
cltd
not
adc
mov
mov
iret
in
stos
jl
sub
jae
mov
jp
scas
cmp
sub
sbb
movsb
into
test
pusha
lret
test
cmp
fisubl
push
fsubs
shll
xor
out
cmpsb
imul
or
fidivrl
mov
repz
mov
outsl
pushf
hlt
add
adc
fildl
jecxz
scas
sbb
in
clc
outsb
pop
add
hlt
popfw
xchg
mov
rcrb
js
popf
or
fwait
and
testl
cmpsl
add
outsb
imul
and
mov
ds
push
inc
sub
push
movsl
push
pop
push
ljmp
adc
shll
mov
in
mov
push
or
fwait
and
testl
cmpsl
add
outsb
imul
and
inc
les
das
push
inc
sub
push
movsl
push
or
sbb
ljmp
and
aad
sub
sub
dec
push
ja
sub
std
add
lods
inc
std
jnp
aas
pop
jbe
xchg
push
dec
into
imul
aad
xor
test
xor
xor
sbb
les
sub
and
jmp
pop
inc
lahf
scas
mov
jle
jnp
ss
adc
xchg
mov
lcall
adc
inc
push
test
sti
dec
sub
or
stc
push
stos
out
fwait
test
sti
in
inc
fistpll
inc
jl
sbb
popa
xlat
icebp
cmp
movsb
mov
sbb
xor
scas
sbb
and
in
lds
adc
sub
lret
push
lods
mov
cmc
scas
or
cmp
adc
pop
pop
out
daa
shl
cld
jle
ds
inc
in
cmp
sub
dec
les
add
cld
ja
repnz
cmp
jae
add
sub
fsubrp
mov
sbb
repz
stc
mov
lahf
das
xchg
pop
out
lods
sub
rorl
outsb
filds
mov
subb
nop
testb
arpl
mov
xor
inc
ffree
dec
xchg
dec
cli
lret
out
mov
pop
gs
movsl
and
sti
mov
adc
xchg
and
lret
cmp
dec
inc
scas
cmpsl
mov
adc
test
imul
mov
test
push
jle
push
xchg
dec
inc
jo
push
mov
pop
xor
loop
sbb
nop
inc
lock
shl
xor
adc
or
sti
mov
xchg
jmp
das
xchg
sbb
int3
add
xor
mov
je
xchg
sub
jnp
ds
inc
incl
xor
fistps
pop
xchg
push
rcrb
cmpsl
mov
fisttps
jne
push
xor
out
xchg
dec
shl
imul
vmptrld
push
push
cmp
sbb
pop
ss
and
xor
jno
mov
insl
inc
cmp
xchg
int
jne
jmp
xor
es
pop
inc
push
add
mov
add
and
push
xor
and
pop
or
xchg
test
sarb
icebp
int
mov
out
inc
in
cmp
cli
imul
out
in
lret
pop
ficoms
and
sbb
jnp
sbb
cmp
xchg
pusha
lock
push
sbb
pop
jp
mov
cmp
dec
ret
mov
testl
jnp
xor
pop
sub
flds
bound
test
push
insl
cs
push
into
cmp
in
lods
xor
xchg
push
ss
test
rclb
and
push
lret
dec
icebp
cmp
test
std
in
mov
rolb
push
movsb
mov
jl
sub
mov
pop
mov
and
icebp
cld
sarl
cltd
sbb
sub
xor
and
addl
lds
call
cmp
test
bound
dec
mov
pushf
lock
fstps
stos
test
inc
or
pushf
rorb
sti
push
mov
push
lahf
test
stc
cmpb
push
data16
add
cmp
pop
lcall
pop
iret
pop
push
or
jp
mov
fcompl
outsb
testb
cltd
xlat
dec
test
push
mov
mov
repnz
cmp
xchg
adc
sbb
pop
jne
mov
imul
sbb
jae
pusha
loop
imul
push
cmpsl
in
outsl
hlt
sub
mov
push
iret
inc
loope
fistps
or
outsl
dec
adc
inc
fisttps
addr16
iret
xor
dec
decb
xchg
insl
fwait
cmpsb
addr16
pop
movsb
jge
stos
and
mov
dec
xchg
pop
or
jle
popa
mov
push
aaa
test
push
movsl
icebp
loop
inc
ret
cmc
lret
mov
and
lds
shrl
dec
sub
dec
mov
je
mov
shrb
sub
dec
add
cltd
or
insb
rclb
pop
aam
loop
daa
and
inc
leave
ljmp
sub
inc
addr16
in
pop
jb
mov
jns
sbb
lret
xchg
mov
pop
xor
rcl
insl
sbb
dec
mov
icebp
lret
aaa
mov
push
jmp
mov
das
out
out
or
mov
cmp
mov
fs
or
insl
sub
xchg
mov
push
arpl
out
jne
jo
mov
pop
ret
lds
shll
pop
lcall
and
pop
jp
dec
mov
dec
out
cs
dec
repz
inc
sbb
out
mov
add
add
test
sti
test
sbbb
int
jbe
fstl
dec
sub
push
xor
popa
test
aad
sbb
outsl
xlat
fstl
or
and
lea
pop
or
ret
ja
out
sbb
movb
jne
xor
sbb
ljmp
pop
ret
push
mov
mov
andb
sarb
jb
xchg
add
xlat
pop
inc
lcall
cmpsb
xchg
testl
mov
pop
mov
icebp
push
add
mov
nop
xor
push
mov
xchg
xlat
pop
add
jp
jae
or
mov
stos
adc
sub
mov
push
rol
stc
outsl
adc
fbstp
adc
xlat
inc
outsb
scas
pop
dec
jg
imul
ss
inc
and
push
or
pop
lcall
je
pop
dec
sarb
out
jnp
fsts
pop
sar
and
mov
cmovle
jbe
add
mov
cwtl
stc
cmp
rcll
pop
mov
shlb
jb
arpl
loop
out
repz
gs
push
outsb
test
and
aam
fsubl
je
and
fs
call
jl
movsl
mov
push
in
jl
xor
sbb
dec
repnz
shlb
mov
jo
xor
mov
roll
jae
out
cmp
repz
pop
lods
mov
sub
add
aaa
sbb
pushf
xchg
inc
sti
addr16
loope
movsl
push
jb
cli
or
fidivrs
arpl
into
add
sub
and
pop
add
sub
ds
mov
fucom
cwtl
popf
jo
fcomi
xchg
mov
pushf
in
mov
dec
inc
out
jg
push
rorl
and
jg
jmp
fwait
push
xchg
or
and
pop
dec
xchg
mov
mov
fnstenv
xchg
inc
or
jne
xchg
pop
cwtl
pushl
xchg
mov
loope
dec
lods
mov
xchg
sti
scas
dec
adc
pop
cmpsl
mov
mov
jne
push
add
call
push
mov
orl
loope
gs
pop
sahf
pop
pop
gs
arpl
dec
into
add
cmp
mov
sahf
cli
pop
rorb
xchg
mov
pusha
iret
xchg
push
cmp
add
xchg
dec
adc
xor
loop
sub
enter
fwait
out
dec
popf
mov
jecxz
xor
xchg
cmp
imul
cli
xchg
and
add
pop
pop
enter
jb
xor
dec
fildl
cmpsb
sti
push
sub
push
inc
outsb
pop
jbe
push
lcall
loope
mov
push
adc
in
ljmp
fwait
rorb
mov
sbb
xchg
stos
inc
sub
push
inc
loop
adc
sahf
je
or
leave
add
pop
mov
sub
sbb
add
lea
in
lods
or
pop
push
mov
mov
xchg
fisttps
scas
add
cli
lods
mov
dec
mov
imul
pop
repz
add
mov
pop
lods
je
push
push
iretw
rcrl
aas
add
addb
jmp
stc
pop
sub
pop
arpl
sbb
mov
data16
outsb
aaa
dec
mov
test
repz
les
loop
xor
inc
test
clc
fsubs
pop
mov
leave
xor
inc
dec
cmp
push
xchg
sbb
into
adc
mov
push
push
mov
cltd
push
pushf
add
or
movsl
mov
adc
js
insl
push
jbe
stos
inc
push
cltd
int
outsl
in
pop
pusha
sbb
jg
scas
out
add
in
movsl
adc
aad
mov
insb
mov
adc
push
movsl
cmpsl
mov
jecxz
add
jle
cmc
inc
aad
sub
jbe
xor
fdivrs
popa
cli
push
mov
shrb
inc
xorl
jnp
fsts
leave
je
xchg
fst
mov
inc
jbe
icebp
xor
sub
leave
mov
cld
loop
add
add
xchg
fiaddl
in
rcrb
sub
test
sbb
pop
xchg
push
xchg
or
repnz
mov
stc
push
mov
jne,pn
ja
push
popl
je
or
insl
inc
in
inc
es
or
call
adcb
mov
pop
push
mov
mov
sub
out
xchg
push
xchg
insl
push
or
lcall
pmaxsw
cltd
dec
xchg
cmc
imul
cmp
lret
adc
pushf
in
inc
sub
imul
rol
or
jmp
imul
push
ret
insl
jl
lcall
data16
adcl
js
pushl
jge
pop
ficomps
popa
insb
mov
popa
inc
popf
xchg
packssdw
mov
xchg
push
aam
xchg
inc
out
pop
aad
aaa
mov
jne
mov
push
mov
jle
push
inc
mov
gs
jbe
xchg
fdivl
fbstp
mov
aaa
add
xor
cmpsb
scas
gs
jbe
jl
test
rcr
mov
lock
je
cli
nop
dec
movsb
mov
sub
sub
mov
movsb
add
inc
cld
xchg
neg
dec
mov
pop
add
aad
inc
jl
xchg
dec
icebp
pop
sub
and
mov
lock
mov
lds
cmp
inc
mov
mov
push
xor
push
dec
cmp
sbb
in
jb
loope
jle
lods
dec
fucomip
inc
shll
mov
dec
enter
movsb
cmpsl
xor
xchg
sub
sahf
pushf
dec
jmp
call
nop
rolb
cmpsl
xor
pop
lds
pop
lahf
data16
shr
sti
adc
ja
xchg
cmp
xor
shrb
xor
bound
sbb
test
add
fistps
test
ds
xchg
jp
ja
daa
push
push
cli
loope
mov
jae
shll
shll
dec
xchg
out
or
adc
shlb
cmp
mov
insl
xorl
push
aad
daa
jg
lock
ret
adcb
das
mov
cmp
sar
jns
mov
adc
xchg
inc
xorb
pop
mov
sub
icebp
add
jmp
inc
sbb
and
sbb
or
jae
test
sub
adc
incb
inc
nop
pop
lods
xor
jb
add
inc
jnp
inc
adc
jo
test
in
js
xor
xchg
mov
or
ret
les
push
daa
or
sbb
mov
shrb
cmc
adc
lcall
lock
pushf
mov
lcallw
cmovp
aas
stos
cmp
sbb
hlt
movsb
aad
dec
repnz
xlat
and
js
imul
outsl
add
int
fistpll
dec
dec
out
jl
lcall
outsl
fldt
fwait
in
mov
adc
inc
mov
scas
push
stos
add
push
shll
cmp
sbbb
add
pop
mov
sbb
inc
mov
int
rcrl
push
inc
sahf
mov
cmp
movsl
test
cmpxchg
jmp
sub
mov
inc
sub
jae
bound
cltd
in
sub
add
inc
fsubrl
push
jecxz
push
push
adc
fisubrl
in
scas
xor
push
rcll
or
sbb
test
cmc
pop
subl
sub
roll
xor
pop
loop
sub
pop
pop
int3
and
jns
shlb
mov
push
sub
push
aam
push
adc
mov
ljmp
push
lea
push
mov
add
cmp
loop
insl
iret
push
in
ds
scas
aaa
add
cmp
add
push
shll
jae
xor
call
out
call
inc
lods
push
pop
mov
sub
mov
js
sub
dec
bound
dec
pop
cs
push
mov
mov
sbb
mov
imul
pop
push
add
jbe
test
mov
mov
aad
mov
push
push
push
js
xchg
pop
sub
pop
adc
dec
dec
dec
cs
push
test
iret
sub
push
jns
daa
mov
int3
rcll
rcrl
clc
filds
in
adc
xor
cmp
es
nop
aas
pop
jmp
jmp
lods
and
cltd
xchg
pop
orl
dec
xlat
rcrb
ret
xlat
mov
xor
cmc
imul
jnp
mov
jbe
and
mov
repz
xchg
mov
lock
cmp
xlat
addr16
xchg
mov
test
add
sahf
into
cmp
loop
loop
mov
jo
lret
scas
mov
adc
add
rcrl
mov
lds
mov
stc
cli
movsl
xchg
fldenv
pop
fnstenv
pop
xchg
mov
sbb
mov
test
or
xchg
push
ja
add
clc
cli
inc
adc
jno
stos
je
adc
out
or
test
enter
pop
adc
cltd
mov
adc
xor
jmp
addr16
in
jl
xchg
xchg
call
mov
ret
and
pop
xlat
mov
dec
and
adc
pusha
out
sbb
lret
adc
sub
movsb
add
mov
xchg
test
add
inc
sub
loope
in
push
fsubrp
out
mov
js
pop
pop
mov
jg
dec
xchg
js
inc
cltd
xor
out
lods
std
push
imul
dec
cmc
lods
mov
das
or
jp
mov
cmpsl
dec
add
xchg
mov
xchg
popf
mov
test
pop
nop
pusha
frstor
neg
add
mov
jno
add
push
nop
sbb
xchg
adc
cli
or
daa
sbb
out
addl
cwtl
test
dec
dec
mov
and
add
test
lahf
mov
cmp
call
dec
adc
dec
jge
or
mov
movsl
arpl
test
and
out
inc
cmc
xor
sub
lahf
sub
pop
cmp
imul
cmc
and
jb
je
cltd
js
mov
in
insl
out
jl
inc
lcall
or
int
cmpsb
std
xor
or
jmp
mov
popa
sub
adc
sti
cmpsb
inc
jnp
and
mov
add
clc
mov
js
pop
xchg
aad
popa
addr16
imul
xchg
prefetch
sbb
mov
jo
fwait
stos
les
mov
out
daa
test
test
push
aaa
lock
xchg
xor
add
push
sub
std
fmuls
add
fbld
scas
iret
imul
fcmovnbe
mov
jl
inc
lods
push
mov
pop
adc
inc
pop
jno
int
jne
pop
add
hlt
and
sbb
loopne,pt
notb
subb
adc
shlb
push
nop
sub
xorl
in
lods
mov
sub
cltd
into
scas
js
sub
mov
daa
adc
jg
mov
fdiv
jecxz
in
sub
jg
cmp
ja
pop
mov
insb
movsb
xor
lahf
jg
loopne
rolb
outsb
xchg
push
ds
out
jmp
inc
repz
sub
mov
add
or
push
sbb
and
mov
lea
xor
mov
mov
test
adc
cmpl
cs
and
dec
sbb
xor
cltd
movsl
fdivr
pop
and
ret
rcrl
jle
cmp
inc
cs
adc
mov
lea
mov
arpl
mov
sbb
shrb
fldt
or
daa
fimuls
jge
inc
push
mov
mov
outsl
xor
xor
mov
imulb
jo
sub
fdivrl
les
rcrl
cmp
xor
test
adc
out
or
sub
bound
iret
mov
cmp
cmp
test
mov
pop
sbb
dec
push
jg
sub
sahf
rcrl
dec
subb
fnstsw
sarl
cmc
and
and
add
std
jne
ret
jno
lret
lret
adc
inc
mov
jae
add
nop
cmp
push
mov
and
sbb
dec
repz
data16
pushf
and
push
lds
add
sbb
in
push
add
pop
xor
sbb
mov
jmp
jl
hlt
fdivrp
jnp
push
sub
pop
sbb
or
lret
push
xor
mov
mov
jle
sub
jnp
imul
dec
lret
lds
dec
roll
mov
pop
sub
dec
aam
mov
jecxz
adc
xchg
dec
mov
mov
ret
xchg
or
pushf
aam
xorb
mov
ljmp
fcmove
or
loopne
cltd
cmp
shrb
mov
sahf
fstps
mov
inc
cmpsl
popf
test
mul
mov
mov
cmc
inc
xor
aam
dec
lret
sub
dec
xchg
testb
xor
rcrl
dec
adc
push
jno
inc
stc
das
xor
dec
iret
or
mov
ss
jno
cltd
mov
fildll
push
ljmp
mov
ret
adc
sbb
xchg
movsb
movsb
int
lock
jns
scas
into
push
push
or
push
outsl
jbe
adc
sbb
popf
fsubs
xchg
cld
pop
sbb
shl
test
sbb
or
or
mov
jge
dec
jbe
popf
xor
les
and
lea
pop
jno
out
sbb
call
ret
in
loopne
jl
ja
je
sahf
daa
mov
leave
dec
mov
loope
aas
scas
xchg
jo
sti
in
aas
daa
in
sub
mov
dec
and
jle
shlb
dec
popa
imul
pop
imul
gs
js
xchg
push
or
rcl
shlb
gs
in
lea
pop
xchg
icebp
aad
jae
add
in
into
adc
loop
xor
test
cs
dec
and
out
and
xlat
lock
scas
sbb
jb
dec
addr16
adc
sbb
add
loopne
mov
mov
jns
pushf
jmp
adc
sub
jge
cmp
push
popf
fimull
xor
mov
or
sarb
cmpsl
jns
inc
push
and
lods
cmp
inc
fwait
in
es
ret
jmp
cwtl
je
push
mov
or
imul
into
and
dec
repnz
mul
jmp
mov
aad
xchg
das
jl
aaa
inc
mov
pop
addr16
xchg
repz
or
sub
insb
push
mov
out
mov
xchg
add
test
xchg
in
lods
adc
sub
stos
cmp
repz
les
cmp
cmp
jle
push
dec
lret
jecxz
loop
pop
popa
movsl
mov
stos
xchg
adc
fucomi
adc
mov
outsl
jp
mov
or
out
idivl
dec
cld
xchg
hlt
pop
mov
mov
enter
lret
xor
scas
pusha
mov
add
inc
not
mov
lret
or
adc
ja
mov
ret
fwait
test
sub
cmp
and
inc
cmp
pop
jle
add
dec
ds
jg
int
jge
xor
rep
sub
pop
pop
mov
push
add
pop
pop
fstpt
fs
lcall
fdivl
dec
ret
dec
jl
call
rcrl
sub
idivl
imul
imul
test
rcrl
repz
in
xor
lret
inc
int
xlat
and
inc
push
shr
lods
push
adc
lahf
movsl
adc
js
ret
adc
dec
mov
pushf
pop
push
jbe
xchg
mov
mov
jmp
pushf
daa
fwait
sub
inc
fimuls
adc
mov
iret
cmp
sub
jo
add
scas
hlt
das
lcall
add
scas
repz
scas
mov
pop
and
aas
call
pop
or
push
mov
inc
bnd
sub
lret
test
push
cld
sub
sub
ss
fists
enter
mov
clc
test
inc
ds
sbb
push
pop
cmpsl
pop
mov
loope
lock
xchg
cmp
adc
out
dec
pop
insb
rcrb
std
stos
mov
jb
test
rorb
push
push
fisubl
xchg
orb
dec
inc
push
enter
lret
jmp
es
mov
aad
imul
fwait
divl
sbb
pop
mov
testl
call
sbb
in
fists
mov
sub
cmpsb
mov
aam
lcall
aad
stc
mov
mov
testl
shl
jb
lods
out
pusha
jg,pt
lods
sub
cld
xchg
std
pop
lods
or
repz
cmp
loop
sub
or
xchg
enter
cmp
or
mov
sbb
adc
cmc
add
cltd
outsl
inc
pop
or
sbb
mov
xor
pop
or
pop
sbb
sbb
xchg
dec
push
rorl
lock
pushf
cltd
fnstcw
aam
out
fdivrp
sub
stc
lahf
mov
xchg
push
mov
mov
or
mov
mov
rcrl
jge
pop
jno
outsl
enter
cmp
add
xlat
lret
adc
pushf
cli
mov
test
mov
mov
and
fnstenv
fstl
and
mov
cmp
adc
fsts
push
rorl
jmp
addr16
into
jo
sti
sbb
mov
js
lock
arpl
divb
sbb
fs
jnp
out
and
mov
lcall
or
cwtl
cmp
xor
dec
cmpsb
scas
lods
mov
lret
dec
jne
xor
loopne
js
std
cs
ret
and
dec
imulb
xor
or
aaa
adcl
in
cwtl
nop/reserved
or
add
cmp
and
adc
mov
loop
int
andl
jle
pusha
xor
rcll
push
pop
mov
fnstcw
fs
xchg
mov
ficoml
mov
out
and
mov
jne
push
or
inc
mov
cmp
call
add
repnz
add
cmp
add
orb
inc
cmp
sub
mov
pusha
idiv
mov
js
adc
popa
pushf
dec
iret
cmp
xchg
movsl
shrb
dec
cwtl
mov
mov
mov
mov
es
inc
push
adc
mov
inc
clc
jmp
adc
lret
mov
aaa
mov
mov
daa
pop
lcall
or
jg
mov
sbb
mov
xor
xor
lods
cmpl
sahf
sub
sub
negb
xchg
imul
jae
movsl
or
scas
or
push
pop
jns
and
mov
jbe
adc
jbe
imul
xor
subb
push
ss
cmp
shr
push
aad
repz
mov
push
jecxz
out
push
das
insb
and
dec
jbe
dec
jg
xor
cmp
add
out
mov
mov
arpl
iret
leave
fwait
dec
push
adc
xor
filds
pop
jnp
add
scas
sub
xchg
and
mov
test
lahf
icebp
mov
gs
dec
mov
mov
insl
frstor
pop
iret
push
jno
xchg
movsl
or
push
sbb
mov
adc
inc
xlat
sbb
fs
sub
sbb
test
add
test
mov
push
dec
out
daa
je
rcl
mov
pop
scas
and
xchg
cmp
ret
mov
mov
mov
dec
aaa
add
mov
pusha
jg
adc
sub
cmp
sti
xchg
sbb
inc
adc
mov
pop
in
jge
adc
cwtl
adc
adc
cmpsl
fcomi
cs
fistps
dec
mov
jo
pusha
cmpsl
push
call
pop
adc
mov
ja
mov
pop
leave
mov
jge
pop
leave
and
pop
loopne
pop
out
add
jl
add
je
pop
push
pop
mov
pushf
and
pop
adc
or
test
mov
push
jge
add
movsb
imul
pop
lods
loop
outsb
sar
jnp
and
mov
shrl
mov
ret
cld
loope
mov
shlb
cmp
lea
and
xchg
mov
adcl
or
mov
lds
paddq
mov
js
test
cs
sar
test
xor
mov
add
adc
orl
sbb
sub
and
jo
and
jne
and
shl
sahf
ja
or
adc
dec
fidivrl
insl
mov
xor
jge
ljmp
mov
scas
sub
cmp
pushf
fnstenv
inc
xchg
imul
stos
ret
push
inc
and
inc
pop
inc
stos
or
xchg
insb
mov
jb
repnz
pop
push
insl
scas
fdivrs
mov
pop
mov
cmp
push
push
daa
cwtl
and
loop
sbbl
lods
fs
sti
push
pop
fwait
jge
lret
adc
sub
cs
sub
sub
mov
mov
rcr
inc
daa
aam
mov
repnz
mov
add
fiaddl
stos
in
pop
repz
mov
orb
xchg
add
into
imul
xchg
imul
out
scas
mov
data16
xchg
sbb
add
mov
mov
ret
out
sub
rol
fucomi
or
xchg
fs
push
lahf
adc
add
stos
mov
mov
popa
push
loop
aam
xchg
mov
xlat
into
cmc
in
cli
ret
push
stos
daa
addr16
adc
mov
jecxz
ret
ljmp
sbb
je
pop
shrb
jo
aad
outsl
scas
jecxz
in
mov
es
add
inc
mov
fmul
xchg
movsb
adc
cmp
dec
loop
and
jg
lahf
enter
or
stos
outsl
test
sub
ficompl
xor
mov
push
addl
gs
xchg
xlat
dec
add
stos
or
inc
sbb
mov
mov
cwtl
fcomps
pushf
in
ret
sbb
mov
dec
cmp
inc
mov
sahf
stc
sub
cmp
ljmp
popl
or
cmpl
mov
jb
push
insl
ss
cwtl
sub
inc
jne
outsb
xchg
dec
xchg
loopne
push
cltd
mov
ja
sub
aas
shlb
lea
add
or
pop
adc
jl
add
mov
pop
or
imul
das
iret
jle
inc
cltd
ss
xor
sub
and
ret
dec
xor
ret
aas
mov
or
pop
sbb
mov
hlt
shrb
lahf
aas
test
mov
push
sbb
sub
xchg
fucomip
jae
lods
push
mov
push
inc
adc
mov
mov
mov
cmp
imul
outsb
out
jmp
or
dec
inc
mov
addl
loope
cmp
scas
pop
stos
test
cmp
xor
push
mov
pop
push
les
adc
insb
and
clc
inc
mov
les
cld
push
popa
divb
xchg
mov
and
lea
insb
loop
xchg
iret
ss
jecxz
arpl
dec
test
data16
cmpb
ja
mov
ret
jp
mov
mov
dec
jae
popa
mov
inc
pop
push
dec
je
and
add
inc
mov
in
push
mov
test
leave
sub
mov
std
and
lret
mov
push
xor
push
dec
fisubl
cmc
shl
dec
mov
fidivrs
bound
cltd
inc
in
addb
dec
xor
push
ds
mov
cmpsb
xchg
andb
push
inc
mov
call
mov
xchg
test
mov
add
mov
ret
mov
adc
lods
mov
or
mov
lret
and
jno
pop
je
mov
and
das
test
sbb
pop
dec
fcompl
ret
jp
je
aam
mov
fwait
and
cmpsl
xor
cmp
adc
xchg
mov
xor
mov
push
and
movsl
ret
sbb
and
dec
insl
sub
bound
bound
aam
mov
loopne
scas
mov
sbb
pop
xor
or
popf
push
jle
sub
pop
sahf
dec
sbb
sbb
or
aam
cmp
pop
fdiv
aam
shrd
ljmp
add
mov
pop
lahf
fiadds
cmp
mov
jecxz
xchg
xchg
push
pop
xor
adc
popf
mov
pusha
xor
rcrl
movsl
movl
lods
mov
or
pop
test
xlat
xchg
rep
pop
int3
out
sar
nop
into
addr16
mov
jge
outsb
fisubl
cmpsl
std
xchg
fdivr
call
gs
mov
mov
jae
fstpl
inc
and
xchg
cmp
les
imul
xchg
aam
push
int3
jl
cmp
xchg
dec
mov
iret
and
jb
das
sbb
sub
js
inc
jbe,pn
add
mov
test
loope
ror
imul
jbe
or
pop
hlt
fucomp
imul
lret
das
cmp
and
adc
fidivl
add
fbld
dec
je
int3
insb
xor
scas
mov
xor
nop
sti
fwait
and
dec
lds
sbb
mov
loopne
movsb
xchg
adc
psrlw
or
add
adc
mov
clc
sarl
clc
pusha
clc
sub
dec
sub
pop
movsb
mov
icebp
popf
pop
arpl
iret
aaa
sbb
jmp
push
lret
and
add
mov
aad
or
inc
loopne
aaa
lock
mov
mov
add
jb
jb
cmpsl
out
adc
inc
jge
xor
jnp
testl
js
jb
daa
mov
mov
xor
nop
nop
xchg
push
dec
jo
ljmp
pusha
jns
sub
test
lret
mov
xchg
push
aaa
mov
jnp
call
test
sbb
dec
sbb
ja
lods
pop
jns
out
add
adc
add
sub
pop
push
lods
push
adc
cmc
outsb
xorl
lods
and
pop
iret
int3
mov
dec
filds
push
and
lcall
pop
cmp
adc
sub
outsb
cwtl
inc
jg
shlb
rclb
aam
mov
pop
fildll
pop
cmp
ja
ret
pusha
pop
filds
xor
int3
push
ds
lret
dec
xor
push
xor
inc
cmp
and
jns
mov
and
jbe
mov
sub
in
mov
test
nop
ljmp
jbe
lods
sub
aam
dec
push
lret
pop
shlb
cwtl
lods
mov
sub
xchg
mov
and
dec
jbe
fistps
aas
std
sub
mov
pop
jns
and
jb
lret
inc
push
cmpsb
pop
loop
pop
push
hlt
and
leave
push
cmp
ja
fxtract
push
and
sbb
sub
insl
xlat
aad
cli
xor
mov
adc
xor
xor
call
pop
pop
imul
and
shrb
jle
clc
movl
movsb
popa
or
sbb
aad
push
xor
mov
aad
push
shrb
fsts
jp
dec
cmc
fsubrp
mov
mov
gs
pop
mov
dec
mov
testl
jne
sbb
in
call
shlb
pop
xchg
and
jl
lcall
lea
sub
les
nop
adc
repz
lahf
ljmp
test
std
inc
and
mov
and
and
cmpsl
arpl
jne
and
xorb
cmp
and
adc
jle
test
scas
cmp
mov
cmp
ds
pop
or
cmp
pop
aas
and
loopne
in
out
mov
inc
jg
xor
roll
push
imul
jnp
in
in
lcall
mov
loop
mov
add
fbstp
xchg
and
xchg
daa
mov
mov
shll
mov
sub
jmp
std
inc
xchg
mov
fdiv
dec
or
mov
call
loop
mov
cli
mov
push
shll
xor
cltd
adc
adc
daa
push
fwait
ret
stos
mov
data16
mov
fidivrs
clc
stos
inc
loop
jmp
or
jecxz
and
pushf
shll
lcall
inc
cmp
mov
int3
das
test
nop
stos
xor
xor
fstps
mov
xchg
out
hlt
lcall
aad
out
arpl
decl
xor
jb
test
hlt
stc
or
mov
adc
bswap
dec
nop
inc
and
popf
aad
adc
sbb
lahf
ficoms
out
int3
and
mov
dec
das
leave
outsb
fldt
rorl
mov
int3
into
pop
adc
cwtl
push
inc
fs
xor
int
mov
sub
movsl
imul
mov
mov
shll
xor
inc
lcall
mov
dec
dec
mov
out
popa
lahf
std
lods
fdiv
cmpsl
std
or
or
xlat
in
xlat
dec
pop
add
std
pushf
dec
mov
mov
push
lret
xchg
mov
xlat
stos
jp
add
inc
pop
clc
enter
and
jge
pop
sub
lret
in
pop
fldt
ret
inc
fwait
pop
inc
push
push
cmpsl
fdivrs
add
daa
jb
dec
insl
jbe
js
sub
jns
fs
push
js
mov
pop
adc
fwait
pushf
ret
imul
ja
test
js
xor
lds
inc
xor
cmpb
icebp
repz
call
push
dec
insb
int3
pusha
test
loopne
fdivrs
pop
arpl
push
cld
div
pop
hlt
add
mov
pop
in
pop
sbb
and
sbb
std
addr16
loop
jne
mov
xor
arpl
cmc
cmpsb
inc
loop
je
jge
cmp
dec
push
mov
cmc
jge
ja
push
imul
mov
test
push
fwait
shll
jmp
jae
add
dec
hlt
and
fcompl
aad
iret
and
sbb
movsl
mov
push
pop
mov
push
sub
pop
push
xchg
out
mov
icebp
dec
mov
scas
das
ljmp
dec
sbb
push
out
je
mov
or
xchg
js
aaa
ljmp
loop
mov
popf
sbb
jl
dec
cmc
cmc
enter
adc
cltd
cmpsb
in
pop
in
inc
jl
negl
lret
shlb
cs
adc
xchg
push
clc
flds
test
cmp
lods
pop
add
insl
pop
lods
mov
mov
data16
adc
mov
rorl
sbb
dec
int3
sub
loop
jmp
shl
jp
and
ret
mov
lahf
in
call
adc
lret
cltd
or
mov
sub
cmc
in
cs
rclb
mov
sub
dec
push
adcl
add
cwtl
mov
data16
ljmp
sahf
push
loop
les
out
xchg
mov
inc
dec
leave
push
inc
add
jbe
xor
scas
js
js
pop
inc
sarl
adc
shll
pusha
fstpt
cld
pop
add
mov
adc
adc
cmp
xchg
stos
jo
lret
sbb
gs
enter
fwait
push
jne
jge
jl
inc
in
rcll
std
mov
lret
in
xchg
pop
xor
loope
ljmp
adc
stc
imul
pop
mov
aaa
lock
or
pop
das
push
xchg
xor
or
jnp
jp
sbb
lret
dec
cmp
and
mov
dec
cwtl
sub
xor
adc
jbe
push
fmul
repnz
pop
push
mov
mov
jo
pop
jg
mov
mov
lahf
xchg
leave
pop
jp
sbbl
inc
sbb
test
repnz
repz
addb
or
mov
dec
pop
push
mov
mov
xchg
push
jge
inc
push
cmp
xchg
imul
xchg
sbb
push
jno
inc
dec
leave
xor
insl
xor
inc
out
pop
pusha
aad
mov
jae
push
jbe
mov
jno
or
stos
ror
iret
lcall
and
xchg
rcll
lds
sbb
mov
push
sub
stc
jnp
mov
bound
or
pop
or
dec
outsl
mov
mov
icebp
nop
dec
arpl
dec
push
test
mov
fstps
mov
jmp
les
pop
add
stos
scas
xchg
jg
fidivl
sahf
cld
pushf
clc
dec
cmpl
sbb
aas
daa
mov
in
mov
imul
aam
cmc
movsl
testl
lcall
lcall
daa
xor
jnp
pop
pop
xchg
jbe
lds
push
cld
push
push
pop
in
jne
pop
jo
xor
mov
addr16
test
outsb
and
je
fistpl
cmp
pop
push
je
test
loope
pop
cwtl
adc
inc
cmpsb
xor
mov
ret
xchg
mov
insl
lods
or
push
imul
ret
mov
inc
int3
or
insl
pop
push
outsl
push
jne
lea
ret
sbb
into
fldenv
loopne
je
aad
je
adc
lret
sbb
daa
mov
add
lahf
or
xchg
cmp
fnop
out
dec
mov
jbe
lcall
test
xor
push
lods
sub
gs
add
mov
cmc
cmp
enter
sbb
inc
jno
mov
inc
push
adc
lock
outsb
notl
lahf
sbb
dec
adc
popa
add
iret
adc
pop
ffree
jno
pop
cmp
movsb
xchg
ljmp
add
mov
clc
fisubs
xor
cld
xlat
push
out
jne
fwait
aad
dec
mov
out
js
xchg
inc
aaa
cltd
or
mov
push
sbb
mov
xor
add
inc
aam
or
lret
mov
push
bound
repz
scas
pop
dec
jbe
jno
xchg
fnstenv
mov
arpl
xchg
pop
bound
xor
hlt
inc
or
lret
daa
sub
fisubs
ss
insl
dec
pop
xchg
int
dec
mov
leave
jbe
cld
jne
jo
sub
inc
adc
pop
inc
clc
push
pop
scas
iret
push
inc
aaa
sti
and
out
cmp
jns
pop
xlat
sbb
cmp
mov
ss
cmp
jge
insl
or
or
inc
inc
mov
loop,pn
sbb
int
in
lret
inc
xchg
pop
sub
idivb
popf
insb
testb
or
pop
leave
inc
inc
lret
pop
add
dec
sub
dec
and
outsl
pop
movsb
push
ja
and
ss
jecxz
pop
js
sub
dec
enter
push
or
sub
add
lcall
arpl
mov
shl
int3
xchg
pop
mov
push
xlat
push
int3
mov
and
lods
dec
ror
mov
push
flds
jl
fimull
cmpsl
test
enter
inc
lea
pop
xor
adc
cmc
cwtl
xchg
into
or
imul
xor
fwait
push
jno
inc
push
sub
call
test
rcl
push
pop
xchg
sti
or
lods
pop
in
sbb
fs
mov
pop
lds
jb
shlb
cmp
fsubs
xor
inc
jae
and
inc
divb
xor
mov
cmpsl
push
lcall
in
jmp
mov
lock
insl
out
push
add
xor
ret
out
jp
add
test
lahf
fsubrs
lcall
push
mov
pop
mov
aas
pop
outsl
mov
or
int
xchg
jmp
aad
xlat
pop
xchg
xchg
cmpsb
mov
sahf
decl
data16
cli
jae
inc
mov
out
mov
add
pushl
cmp
shlb
push
je
adc
push
push
out
adc
xlat
dec
push
adc
test
pop
or
lret
adc
sub
rcr
inc
daa
int3
sub
mov
lcall
scas
mov
fcoml
in
ret
cmpsb
lock
xchg
push
hlt
in
push
mov
mov
jp
mov
cmp
aas
in
cltd
adcl
push
sbb
mov
outsl
rorl
scas
and
mov
mov
sbb
lock
xchg
filds
shl
mov
mov
daa
andb
or
ret
mov
push
cmp
sbb
andl
inc
in
pop
push
es
cmp
shlb
xor
pop
out
sbbl
mov
push
xor
in
lods
fdivrs
jmp
mov
out
imul
lret
adc
push
jge
loop
sbb
jnp
lds
ret
push
sbb
mov
pop
xchg
popa
add
pop
lret
xchg
cmp
aad
addl
sbb
mov
sti
inc
xor
ja
xor
add
rcl
popf
test
gs
stc
ja
mov
lret
pop
xchg
push
mov
mov
dec
lcall
ret
inc
ds
popf
jnp
ficoml
je
xor
sbb
iret
sbbl
sub
push
mov
test
add
andb
test
pop
shll
std
out
push
pop
sti
stos
jae
imul
mov
lret
add
pop
adc
fwait
or
adc
mov
stc
aaa
lcall
pop
push
xor
xchg
cmp
je
aas
cmpsb
mov
push
inc
xor
es
jb
and
test
jmp
mov
adc
aam
mov
pop
cmp
outsl
addb
xor
pop
mov
add
xor
push
sub
lret
sahf
shlb
mov
popa
mov
loope
sub
adc
xchg
dec
out
or
ret
pop
cmc
cmp
or
jg
stos
add
cmpb
popf
and
scas
insl
stos
dec
test
fdiv
inc
hlt
jl
cmpsb
inc
dec
mov
pushf
aam
pop
sbb
out
out
mov
test
clc
out
and
push
push
das
sbb
cli
pop
sub
fs
lret
movl
xor
mov
outsb
rcrl
jl
add
mov
push
xchg
pop
stos
aam
mov
out
sbb
mov
pop
mov
xchg
insl
aam
adc
int
xchg
xor
lods
adc
cmp
and
xchg
xor
sbb
ja
jl
data16
loopne
scas
mov
xor
fldt
pop
adc
lahf
or
xor
xchg
mov
dec
jbe
xor
sub
rcrb
jge
mov
cltd
pop
lods
cmp
mov
lret
mov
mov
inc
daa
popa
cmpsl
mov
outsl
ret
in
movsl
out
pop
notl
adc
dec
fistpl
push
test
sub
adc
in
fadd
cvtpi2ps
mov
jg
dec
jp
or
jns
stos
inc
pop
push
mov
and
je
outsb
push
cmp
push
adc
mov
cmpsb
and
es
scas
out
fists
mov
or
xor
mov
in
or
test
and
xchg
call
jb
cwtl
mov
cmp
movsb
mov
ljmp
ljmp
or
fwait
mull
dec
or
ret
std
out
jae
in
mov
jmp
loope
sub
pushl
mov
rolb
or
cwtl
push
out
not
xchg
lds
shll
mov
mov
mov
es
cltd
dec
and
ret
jbe
cmpsb
aam
push
outsl
mov
rcrb
ss
hlt
inc
or
pushf
hlt
adc
fmull
jae
sbb
xor
fcoms
xchg
pop
or
adc
and
lcall
push
shrl
cmc
or
popa
out
push
notl
or
call
pop
sub
ljmp
hlt
or
popa
out
popf
sarb
and
push
mov
in
pop
and
inc
out
insl
inc
inc
loopne
push
hlt
pop
test
lret
cli
lods
popf
xor
pop
jmp
mov
cwtl
mov
pop
out
xorl
push
dec
sysenter
sub
cmpsb
js
dec
in
add
mov
scas
push
int
push
call
and
push
adc
jnp
pop
shrb
sbb
mov
aaa
aam
mov
shll
pop
sti
xlat
es
les
add
in
cld
xor
lock
xor
cwtl
mov
jg
xor
jmp
mov
sahf
aaa
jb
ja
xor
in
into
xor
loope
aam
movsl
arpl
jno
popf
jp
roll
mov
cltd
sbbb
out
pop
jns
adc
call
int3
sbb
add
or
and
mov
xor
addr16
popa
ret
icebp
fidivl
enter
movsl
adc
jl
movsl
mov
adc
inc
or
out
mov
fwait
pop
and
lea
lock
mov
sbb
add
xor
push
inc
pop
adc
sub
daa
loop
out
mov
mov
loopne
aam
and
cmp
and
xchg
js
jg
push
mov
les
dec
inc
test
mov
mov
jp
jno
jno
dec
push
add
add
aad
mov
jne
fidivrl
push
test
add
cld
out
pop
ss
sbb
xchg
sub
out
fcmovnb
out
imul
ret
lock
pop
int
push
add
imul
out
test
sub
sub
dec
dec
and
jp
lcall
clc
sbb
mov
dec
dec
lahf
lds
cmp
xlat
cs
aas
xchg
sub
fistl
dec
and
repz
mov
sbb
bound
push
roll
adc
out
pop
xchg
das
xchg
stc
cmp
aam
xchg
jnp
pop
int3
or
push
pop
fwait
sub
mov
push
mov
mov
fcoml
or
and
push
sbb
jle
xor
xchg
cld
or
sahf
lcall
push
or
or
sbbb
or
sub
aad
xchg
jp
cmp
es
mov
mov
inc
cmpsl
jl
mov
insb
pop
fs
or
jb
mov
mov
arpl
cli
in
push
and
pop
je
aaa
and
ss
push
jmp
push
mov
ret
rcr
sahf
push
sub
out
sbbl
adc
mov
fildl
pop
in
cmp
or
mov
ljmp
pop
shll
mov
iret
mov
push
ja
test
iret
rclb
imul
dec
add
xchg
mov
and
sbb
jecxz
mov
mov
stos
mov
jecxz
scas
je
out
and
repz
fdivrs
pop
je
cmc
psrld
sbb
xchg
je
test
ja
stos
mov
and
cmpsb
xor
add
test
xor
inc
icebp
insb
lret
insb
inc
dec
insl
roll
cmp
mov
in
push
pop
mov
mov
jle
es
mov
sub
jmp
and
mov
pop
in
test
xor
les
aad
daa
stc
lret
sub
adc
adc
push
lods
ljmp
cltd
push
lea
ficoms
mov
push
jecxz
sbb
repnz
mov
repnz
or
repz
pop
test
jne
das
add
and
aaa
push
les
push
push
push
ret
adc
aam
test
add
in
cmp
push
test
pop
in
add
jnp
and
or
adc
jnp
lcall
dec
in
and
mov
jg
enter
push
mov
mov
iret
test
fcmovbe
and
inc
lock
adc
lock
dec
jno
dec
adc
xchg
outsl
mov
sahf
orb
arpl
push
mov
mov
les
inc
xor
pop
mov
rcrb
cs
jne
mov
into
je
push
and
fldt
jo
jbe
insl
fsubrl
lock
cmpsb
daa
pop
scas
dec
xor
sub
mov
mov
and
push
and
pop
in
aaa
popf
test
xchg
mov
test
fisttps
jl
dec
sbb
out
pop
negl
js
pop
or
movsl
and
xor
aaa
popf
clc
pop
add
out
jle
outsl
ficomps
inc
adc
nop
ret
xor
decl
fwait
das
add
js
mov
jmp
cmp
cmp
lahf
lods
fcomi
sbb
or
jmp
mov
mov
outsl
or
inc
ficompl
add
test
bound
add
inc
jne
or
xor
cmp
fcomps
lcall
addr16
sbb
mov
sbb
mov
imul
mov
scas
push
movsl
ret
sbb
out
mov
mov
fisubrl
in
clc
out
jnp
inc
push
xor
mov
sahf
call
xchg
call
jo
test
sub
sar
popf
pop
out
add
xor
movsl
xchg
flds
mov
push
lock
aam
nop
add
loopne
in
xchg
arpl
and
fstp
dec
ret
imull
lods
mov
stc
and
jae
sub
stos
cli
inc
push
das
mov
std
or
mov
les
nop
pop
mov
sub
inc
stc
test
lcall
mov
and
jmp
xchg
lret
shrb
std
mov
xor
jle
sahf
movsb
xor
sub
mov
sbb
aas
pop
add
adc
or
fwait
and
fldl
xchg
cmp
and
and
sbb
and
sahf
gs
iret
sbb
daa
dec
mov
push
sarl
push
ja
nop
dec
cmpsb
add
cmc
outsb
cwtl
pop
mov
lret
adc
movsl
jbe
movsb
sub
outsb
xchg
mov
push
in
enter
mov
or
scas
pop
loopne
enter
mov
cmpsl
push
sub
lods
push
xor
dec
mov
into
leave
jbe
jbe
fsubs
pusha
lea
imul
pop
shll
jno
fs
loop
shlb
pop
rclb
mov
scas
xor
mov
dec
fidivl
call
add
mov
push
out
jmp
in
mov
cmc
cmp
mov
and
mov
sub
loope
mov
xchg
jecxz
xchg
sbb
dec
imul
pushf
xor
sub
jge
pop
dec
fimuls
sbb
inc
pusha
in
pusha
std
hlt
inc
xchg
cmp
jnp
incb
push
push
inc
pop
cmp
jbe
adc
push
adc
sahf
and
enter
inc
push
xchg
insl
imul
int
xchg
aaa
stos
jns
aam
add
and
adc
sbb
pop
stos
shr
or
ror
ss
inc
pop
mov
dec
cltd
mov
adc
decl
mov
inc
sahf
jmp
cltd
sbb
imul
fmuls
in
jmp
adc
mov
xchg
ret
jbe
dec
sbb
and
xchg
shll
jne
mov
pop
push
roll
inc
xchg
fsubs
jno
cmp
push
mov
inc
push
pop
je
or
mov
mov
cli
fcmovbe
mov
jno
stos
add
test
hlt
dec
into
pavgw
or
and
or
adc
pop
test
cmp
fsts
cs
cmp
sbb
outsb
fldcw
push
in
sbb
mov
out
mov
dec
in
inc
push
xchg
add
inc
xchg
dec
es
push
xchg
jp
je
outsb
sub
fwait
pop
lret
cmp
inc
inc
sbb
mov
js
and
loopne
lret
mov
xchg
into
xchg
adc
out
in
mov
sub
out
call
movsb
mov
les
pop
jmp
sub
fdivp
std
or
mov
lods
das
call
js
orl
js
lea
es
inc
lahf
inc
adc
adc
and
mov
fisttpll
bound
rorb
mov
sbb
pop
push
mov
pop
test
adc
pop
inc
loop
mov
dec
push
or
in
dec
push
lahf
aad
sbb
xchg
jb
jle
in
mov
mov
shll
mov
cmpsb
hlt
pop
jne
lret
ja
les
loopne
inc
out
aad
cwtl
enter
cld
pop
sbb
xrelease
aaa
cmp
cli
icebp
mov
xchg
pusha
sub
out
pushf
and
lret
lret
stc
vpackssdw
adc
mov
insb
adc
mov
push
jle
cld
adc
inc
and
or
bound
and
jne
testb
inc
lret
pop
add
test
and
mov
daa
push
mov
ja
pop
adc
hlt
addr16
test
push
call
add
aas
fs
sbb
adc
cmp
push
dec
aas
push
sahf
pop
xor
pushf
ret
push
icebp
int
push
shll
test
mov
mov
cmpsl
or
into
repz
in
ret
and
xchg
test
fdivp
aas
or
mov
mov
inc
xor
pop
fidivrs
imulb
xor
lcall
inc
jg
mov
cli
jne
add
arpl
xchg
or
mov
xchg
cmpsl
test
aam
int3
out
jno
in
push
mov
xchg
mov
dec
inc
sbb
lcall
shr
xor
xchg
jo
js
and
ja
mov
call
and
and
or
cld
mov
fwait
sub
or
int
stos
fisttpl
mov
push
dec
in
mov
mov
push
pusha
sbb
imull
inc
xchg
in
pop
ljmp
add
ss
inc
or
jb
cmp
mov
inc
lret
jns
mov
js
insb
cmpsb
and
rol
lahf
pop
pop
push
test
loop
nop
push
insb
clc
add
cmp
cmpsb
in
mov
addr16
lahf
dec
mov
mov
sbb
cvttps2pi
enter
jecxz
pmaddwd
leave
lea
sbb
dec
loop
sbb
adc
cli
add
jl
mov
test
lahf
ljmp
mov
data16
jo
int
and
mov
mov
test
addr16
cs
mov
pushf
push
rolb
fidivrl
je
push
or
adc
aaa
adcb
mov
or
sbb
pop
sub
ja
inc
mov
ficomps
jns
stos
rol
or
lret
inc
outsl
jmp
cmp
add
xor
inc
dec
add
mov
adc
inc
and
frstor
pop
push
mov
mov
movsl
mov
aad
jle
mov
mov
xor
dec
scas
hlt
xlat
hlt
push
mov
mov
xlat
mov
rolb
leave
shlb
fmulp
repnz
cwtl
sbb
mov
sbb
mov
lods
int3
sbb
fldcw
cmp
mov
cmc
and
popa
xor
or
and
jge
test
adc
es
pushf
repnz
rcl
decl
cmpl
jnp
inc
jns
push
es
int3
pop
in
pop
or
push
mov
cmp
mov
dec
xor
hlt
test
outsb
sub
ret
stos
xor
dec
lds
mov
dec
adc
ljmp
shrl
out
jnp
addr16
xchg
in
xor
jl
test
lret
ja
insb
in
push
adcb
mov
push
rorb
arpl
sub
sbb
scas
es
dec
data16
ret
pop
scas
xchg
push
imul
inc
inc
out
adc
or
inc
add
jb
iret
sub
pop
inc
mov
int3
stos
mov
lods
push
std
popf
aad
int
insb
jns
adc
or
or
push
scas
inc
and
ja
out
pop
mov
test
pop
lds
mov
fs
mov
sti
aas
pop
ds
inc
adc
stc
inc
cmp
cmp
push
pop
inc
test
test
pushf
xor
push
jae
ss
roll
jbe
mov
push
sbb
data16
hlt
insl
and
xor
mov
mov
cli
lock
sub
inc
mov
lods
and
popf
push
xchg
loope
fdivrs
mov
es
mov
adc
jne
pop
dec
or
test
mov
mov
xor
movhps
inc
cmpb
cmp
xor
or
fists
mov
cmp
push
leave
push
sub
dec
xor
into
std
and
jno
and
test
popf
jb
ret
mov
xchg
sub
lods
lods
add
cmpsb
shrl
int3
loope
adcl
xor
call
sub
mov
xor
jae
mov
pop
and
fistpl
inc
mov
test
dec
in
lret
xor
cmp
les
jo
xchg
add
and
rclb
pop
test
inc
aam
scas
sbb
es
cmc
push
inc
and
popa
sub
mov
scas
adc
es
cmp
icebp
jo
lea
jge
enter
adcl
lods
dec
pop
xorb
pop
sarl
push
xchg
sub
and
inc
inc
cmp
and
sub
test
andb
mov
and
and
sar
into
push
push
ret
lods
dec
mov
insb
sub
adc
lret
int
jns
push
fildll
pop
dec
jl
arpl
scas
pop
pushf
adc
xchg
lcall
outsb
out
jae
pop
push
fwait
cmp
pop
out
mov
andl
pop
lods
test
mov
iret
and
cmp
aad
shll
and
push
movsb
ds
fldcw
cmp
push
mov
pop
jle
mov
mov
add
adc
xlat
and
jno
xchg
iret
jecxz
incl
and
lcall
out
jae
mov
xor
mov
cld
mov
mov
bound
imul
in
adc
mov
fildl
movsl
in
and
shr
mov
cmp
stos
ficomps
out
xor
int3
and
pop
out
shll
jne
push
outsl
int3
jge
cwtl
pop
ds
clc
out
jb
sbb
ds
fisubrl
pop
pop
or
cmp
mov
jg
mov
mov
lods
pushf
fwait
xlat
lods
iret
ja
lods
add
adc
outsl
pop
pusha
ljmp
adc
ss
or
mov
inc
test
and
jecxz
mov
mov
xor
in
add
dec
push
dec
ljmp
icebp
addr16
dec
arpl
adc
pop
xor
jnp
fmull
push
pop
dec
xor
roll
aad
out
pop
iret
std
loop
adc
or
adc
cld
xor
aad
and
sbbb
mov
adc
mov
and
pop
out
enter
push
and
test
lock
cwtl
lret
mov
dec
mov
xchg
inc
mov
inc
mov
inc
bswap
bound
test
mov
add
lds
pop
xor
insl
iret
pop
xchg
iret
pop
inc
inc
cmc
cli
mov
cmp
and
fmuls
mov
cli
insl
dec
cmpsl
movsb
add
xchg
sbb
pop
add
mov
notb
fucomp
cmp
pop
and
mov
insl
jnp
jle
pop
test
pop
xchg
in
out
push
cmp
push
bound
lcall
dec
stos
push
popa
loop
sbb
inc
clc
cwtl
outsb
jo
rcrb
fstps
jg
mov
ljmp
ret
pop
fsubrl
adc
dec
inc
jnp
inc
xacquire
bound
nop
mov
cs
addr16
add
cld
test
cmp
and
sub
dec
aas
mov
movsb
add
cld
sbb
mov
popa
jns
xchg
cmpl
pop
add
xor
out
jnp
mov
ss
mov
cmp
mov
aaa
push
sbb
xor
pop
fstpt
aam
sub
mov
out
pop
dec
and
cmp
adc
rcrl
lods
fsubl
cmc
lret
xor
cmp
xor
push
fidivl
dec
xor
clc
rorb
fucomp
cmp
jne
jb
mov
push
stos
stos
cmp
int3
iret
mov
or
adcb
push
mov
inc
repz
mov
xchg
xchg
mov
inc
xor
out
inc
mov
xor
and
xor
pop
sbb
divb
fadds
push
data16
jo
adc
push
dec
sbb
frstor
cltd
adc
push
sbb
arpl
imul
inc
cli
mov
adc
ds
es
shrb
jae
cmp
pop
or
insb
addr16
sub
pop
in
jp
inc
out
ss
aas
adc
mov
cmp
js
jae
fcmovu
popf
test
push
ret
fcmovne
das
lret
jecxz
fdivl
lret
sbb
fiaddl
rorb
push
arpl
add
sub
lock
and
aam
pop
aam
iret
call
and
ja
jo
sub
mov
jge
jecxz
mov
adc
roll
les
paddsw
mov
mov
scas
fsubs
dec
les
jns
aaa
aaa
dec
outsb
push
dec
push
dec
sub
mov
add
sub
push
add
mov
int
jbe
adc
jbe
dec
lds
pushf
jg
nop
test
aas
add
pop
mov
mov
and
mov
mov
add
sti
and
movsb
outsl
cs
mov
xchg
xor
outsl
or
lcall
xchg
xchg
sub
sbb
pop
push
movsb
xor
adc
mov
mov
push
repnz
and
pop
adc
push
fdivs
lock
xchg
jmp
push
add
pop
jge
dec
loop
mov
loop
jnp
stos
jecxz
add
stos
pop
divl
cmp
xor
mov
lock
sub
stos
jb
and
mov
fwait
mov
lcall
and
aas
aaa
mov
sub
xchg
mov
push
jb
loop
mov
test
cld
lahf
xchg
pop
xlat
inc
and
hlt
sbb
mov
movsb
adc
mov
jnp
shlb
fisubs
addb
xchg
jo
xor
jbe
dec
stc
mov
ficompl
jg
dec
lret
jge
xchg
repz
test
fnstsw
dec
fcomps
ret
sbb
adc
xor
ret
shlb
jne
fldenv
lds
sub
fisttps
aad
jge
jne
fnstcw
lods
arpl
das
adc
push
jmp
ret
jb
pop
fwait
cli
pop
mov
out
sbb
dec
cmp
mov
jecxz
jbe
ret
pushf
repz
jb
mov
xchg
in
dec
call
ljmp
xor
out
push
sbb
call
push
aaa
add
cld
rorb
cmc
shll
sbb
mov
jge,pt
cmp
addb
out
push
jle
pop
pusha
pop
outsb
das
repnz
repz
push
int3
mov
and
xor
lret
pop
scas
insb
frstor
ljmp
fnsave
or
arpl
mov
aad
or
mov
pop
and
mov
mov
out
or
ss
popf
movsl
and
pop
add
or
sti
sub
clc
push
sub
jno
int
adc
inc
mov
cli
xchg
jp
sbb
ja
push
pop
xchg
xchg
out
in
lds
aad
bound
outsb
cltd
popf
fiaddl
repz
cmp
sub
and
lock
mov
jns
inc
jno
xor
jb
daa
fcmovnu
jo
addl
push
fdivr
sbb
push
add
push
fs
push
pop
into
aam
mov
divl
xchg
xchg
movl
lcall
xchg
jp
lret
fsubrl
push
movsl
adc
pop
adc
sbb
and
or
movsb
and
test
test
scas
ss
insb
sbb
mov
push
pop
or
mov
das
in
sub
aad
adc
xchg
jge
dec
cmp
mov
mov
mov
ds
aaa
mov
inc
mov
aad
cmp
lret
jae
jbe
lods
test
sbbl
outsl
xchg
adc
inc
insl
aaa
xchg
rorb
push
jo
pusha
fsub
out
pop
xor
repz
rcrl
dec
sbb
xchg
and
jbe
xor
adc
mov
aad
xor
addr16
into
push
mov
test
aaa
jne
aaa
add
aad
rcrl
lcall
imul
in
xchg
fld
pop
and
mov
xor
sbb
sahf
add
out
and
mov
mov
shlb
or
inc
outsb
es
ss
jbe
roll
cmp
xchg
mov
push
mov
jb
push
stc
psrad
popa
or
mov
fwait
and
iret
adc
lret
mov
sub
or
mov
rclb
aam
pushw
scas
cwtl
jle
sub
lret
push
pop
test
jmp
test
xchg
mov
loopne
lcall
cmp
lods
popf
cmp
jg
fsubrl
dec
sbb
dec
popa
or
aas
cmpsl
mov
cli
icebp
ljmp
mov
das
aam
lcall
dec
aas
ret
imul
push
and
mov
push
mov
and
sahf
or
pop
adc
mov
ret
cld
or
fsubr
cmp
imul
inc
lock
clc
call
pusha
mov
movsb
xor
repnz
pop
pop
lods
push
jo
jmp
shlb
enter
leave
sub
sub
sub
jae
pop
in
scas
or
rcrl
leave
dec
data16
pop
aam
inc
push
addr16
imull
and
imul
pop
adc
repz
mov
popf
or
scas
mov
cs
hlt
pop
and
dec
lahf
push
ficompl
mov
loopne
add
or
adc
sub
ret
mov
add
out
xchg
fsub
cmc
jecxz
dec
lahf
sbb
repnz
jp
inc
jmp
push
mov
dec
ljmp
pop
call
xchg
mov
mov
sbbl
jmp
push
pop
xor
jp
testl
imul
fs
outsb
shll
ss
mov
sub
pop
je
xor
jnp
mulb
push
xchg
add
repz
stc
mov
cmpsb
addr16
xor
jnp
mov
pop
fistpl
xlat
push
pop
or
mov
add
sub
pop
fisubs
cmp
push
mov
les
jnp
pop
jle
je
ret
add
hlt
adc
inc
push
aad
jp
mov
or
or
sahf
or
mov
jbe
mov
pusha
mov
hlt
fdivrs
ds
sahf
lock
fwait
xchg
ret
mov
out
cld
adc
hlt
or
mov
jg
mov
leave
or
cmc
push
cmp
es
jne
cmpsb
aad
data16
outsb
xchg
adc
sub
adc
hlt
and
jge
dec
jns
and
ljmp
popf
fs
subb
sub
test
dec
or
loopne
es
sbbl
outsl
jns
cli
mov
push
mov
push
sahf
xor
mov
shrb
cmp
dec
cmp
pop
fs
ss
ds
xchg
scas
int
test
fildll
sahf
lock
sbb
xchg
pop
sub
xor
enter
jge
pop
cwtl
jb
and
or
jecxz
push
mov
mov
daa
gs
inc
pop
cli
or
xchg
aas
pop
jae
push
rorl
out
rcll
adc
mov
iret
jmp
inc
sub
inc
lock
mov
push
mov
adc
les
mov
lcall
cli
clc
fldl
sbb
fisttpl
dec
lahf
in
cmp
pop
jb
rcll
and
mov
mov
push
adc
das
iret
in
pop
and
jno
bound
and
adc
cs
stc
cmpsb
addl
addb
hlt
data16
ffree
in
xchg
sbb
mov
mov
sbb
mov
mov
repz
xlat
pop
rcr
shl
adc
popf
cld
add
dec
push
push
mov
sub
jl
sub
leave
cmpl
frstor
sbb
in
lock
test
mov
aad
divb
push
into
jge
inc
push
mov
jb
flds
mov
jno
xchg
xchg
cld
xor
in
mov
and
dec
push
or
outsb
stc
out
adc
or
cmp
mov
push
xor
int
sbbb
xchg
cs
xchg
mov
mov
shrb
test
mov
xchg
jle
es
pop
dec
std
rorb
int
and
out
jmp
fisubs
das
insb
cmp
mov
iret
lods
dec
xor
sub
push
mov
jmp
mov
jecxz
xor
or
leave
xor
fisubrs
andl
ja
push
mov
lock
rol
cmp
lods
sbb
dec
lcall
das
pop
ds
lods
xor
fistpl
and
xor
mov
ds
mov
pop
mov
add
pushf
leave
push
ret
in
movsb
cmp
lahf
mov
pop
pop
popf
cmp
in
cltd
cmpsb
popf
mov
mov
cmpsb
sub
js
ja
sub
inc
mov
jg
dec
jb
pop
push
pop
pop
lods
mov
repnz
xlat
imul
cwtl
imulb
mov
movsb
js
jmp
insl
adc
adc
mov
inc
xchg
je
adc
addl
lret
fmulp
push
ret
mov
adc
push
pop
adc
cld
cmp
pop
fsubr
jmp
pop
sbb
mov
lods
outsb
aad
push
mov
xchg
add
mov
pop
jne
push
sbb
into
dec
push
mov
into
xor
mov
sbb
je
rorl
scas
arpl
fwait
arpl
sub
lahf
mov
lret
mov
xchg
pushaw
jmp
mov
mov
outsb
inc
mov
adc
dec
sarb
cmc
add
jb
daa
outsl
mov
pop
mov
sahf
sub
loope
or
dec
mov
xor
nop
je
in
movl
push
mov
pop
out
push
xchg
lds
xchg
inc
jmp
jmp
sbb
xchg
jae
std
testb
js
mov
add
loope
insl
aam
mov
rorl
cli
add
and
mov
ja
int3
cmpb
push
sbb
insb
pop
movsl
xchg
ljmp
lret
mov
cmpsl
insb
lods
or
lcall
mov
dec
mov
inc
mov
mov
scas
lret
bnd
cmp
mov
cmp
and
lods
mov
les
jmp
repnz
mov
ja
dec
sarb
or
jbe
jl
mov
int
jb
pop
jecxz
movsb
dec
cli
lods
inc
push
cwtl
pushf
inc
adc
test
je
mov
inc
mov
sbb
xchg
sub
dec
add
mov
inc
xchg
out
faddp
leave
sub
aaa
pusha
jb
jo
sub
jbe
xchg
dec
sahf
inc
fcom
push
pop
adc
and
pop
mov
push
out
fisttps
sbb
fs
fsubrl
or
dec
aad
ljmp
callw
pop
test
add
loope
xor
sahf
mov
js
adc
sub
mov
mov
scas
push
sub
fwait
jb
mov
xchg
adcl
inc
lock
sub
bts
incl
adc
pop
adc
aad
divl
xchg
std
in
repz
cli
mov
in
pop
arpl
outsb
adc
xchg
arpl
mov
mov
dec
sbb
sub
inc
xchg
stos
adc
push
fistl
and
dec
xlat
adc
inc
pop
hlt
xlat
add
iret
sbb
subl
sarb
and
out
ss
pop
cltd
outsb
loope
pusha
leave
fldt
inc
cmp
jo
adc
cmp
dec
xchg
push
mov
adc
movl
push
loopne
jge
popa
inc
inc
push
in
inc
inc
xor
out
push
arpl
orb
out
lods
jg
movsl
arpl
pop
add
shl
bound
xchg
jbe
cs
in
fidivl
xor
fidivrl
pop
incl
mov
fisubs
dec
mov
pop
dec
in
or
daa
int
push
lahf
ret
adc
adc
sub
int3
popf
out
inc
and
cmp
xchg
iret
loopne
daa
ss
xlat
inc
push
popf
xchg
bound
sub
mov
or
pushf
loop
inc
pop
adc
sub
jbe
lret
shll
xor
test
mov
pop
shlb
pop
and
adc
adc
hlt
outsb
pop
pop
jo
xchg
push
fs
and
pop
or
cmp
push
popf
gs
fwait
test
scas
loope
cmp
pop
fdivl
into
xorl
mov
shll
sarb
inc
outsb
and
mov
xor
or
pop
or
mov
dec
aas
ljmp
pop
lds
push
sub
test
gs
movsb
js
xchg
jo
mov
lds
stos
add
bnd
mov
jo
repz
add
scas
repnz
add
push
adc
mov
or
cld
fstps
and
ficompl
shlb
adc
insb
and
dec
fdivrp
add
pop
sbb
mov
mov
movsb
cwtl
xchg
mul
negl
stos
xor
dec
mov
sahf
clc
roll
mov
sub
mov
orl
aad
iret
push
sbb
das
push
cltd
mov
mov
pop
dec
movsb
or
and
std
subb
das
sarb
lahf
dec
jp
cmp
jne
adc
jbe
mov
xor
add
inc
pop
jb
ffree
or
mov
jmp
and
inc
lods
dec
js
sbb
ja
add
je
push
xchg
jb
pop
xor
lds
int
or
jl
pop
jno
pmuludq
add
mov
test
mov
cwtl
xchg
cmp
inc
dec
add
cld
push
push
push
ljmp
pop
pop
push
dec
pop
lock
push
aam
mov
iret
mov
cmp
gs
jle
lret
sbb
lcall
sbb
push
lret
into
sub
stos
arpl
adc
and
cmpsl
sbb
push
cmp
das
stos
fnstcw
lds
inc
push
ret
add
les
dec
adc
les
dec
adc
std
rolb
inc
gs
cmp
imul
sub
lahf
push
mov
mov
push
mov
sbb
and
test
loope
jge
int3
sarb
cmpsl
outsb
adc
popa
inc
aas
ds
mov
mov
dec
jae
push
or
mov
lahf
inc
cmp
push
mov
inc
call
mov
add
lahf
lcall
ds
mov
ljmp
stc
clc
insb
repz
movsl
and
rolb
and
arpl
push
in
inc
mov
rcr
scas
outsl
add
mov
adc
mov
jl
add
mov
repz
or
push
push
call
int
clc
iret
fldt
enter
out
lds
fisubrs
popa
push
sub
rcll
repz
and
ret
inc
mov
or
insl
sbb
test
hlt
xchg
pop
into
hlt
pop
clc
push
inc
lods
outsl
lret
mov
mov
pop
sub
pop
or
and
inc
push
lret
jmp
adc
or
and
push
test
js
movsl
cmp
std
fnstenv
test
sbb
popa
daa
sub
push
add
popf
imul
jecxz
imull
aas
xor
and
sub
loop
dec
stc
gs
push
jo
xchg
fcompl
mov
and
cmpsb
loopne
aas
ror
cli
mov
push
push
inc
arpl
lahf
pop
push
push
pop
pop
sbb
add
daa
in
or
add
jp
rclb
add
cltd
push
mov
in
sahf
jae
daa
into
sub
clc
lods
enter
cmp
and
fistpll
cmpsl
ja
push
iret
loope
pop
sarl
push
mov
xor
adc
aad
inc
or
mov
ljmp
aas
xchg
or
cwtl
inc
ds
xor
sbbb
and
sbb
loope
xlat
inc
cmpsb
lods
les
pop
or
xor
sbb
push
ret
dec
mov
sbb
xlat
out
jne
sbb
fwait
cmc
ret
mov
int3
and
lret
movsb
push
pop
or
xchg
clc
push
fistps
mov
adc
ljmp
xchg
ficoms
mov
jle
sbb
loop
mov
xor
jle
and
mov
fisttps
cmpsl
sbb
out
stos
mov
xlat
sbb
dec
inc
sbb
test
or
rep
mov
mov
jp
lret
jae
jae
in
adc
loope
out
mov
iret
and
cmp
stc
xchg
in
mov
imul
inc
dec
and
xchg
pop
add
enter
out
out
mov
pop
sub
mov
enter
xchg
cltd
xchg
rcrb
and
pop
gs
aad
orb
aaa
jno
stos
adc
push
xchg
test
inc
pop
rcrb
sbb
or
push
inc
repnz
ss
and
aad
push
push
int3
inc
adc
mov
dec
cli
cmc
sub
repz
testl
push
mov
enter
lret
xchg
or
fnop
loope
test
loop
sub
jno
push
sbb
mov
push
mov
nop
cmp
cmp
xor
sti
ret
adc
push
or
adc
jo
negl
pop
enter
iret
inc
xchg
pop
adc
idivb
mov
add
adc
adc
sbb
cltd
scas
push
add
sub
pusha
mov
lea
nop
sbb
sbb
or
test
jns
stos
mov
loope
icebp
inc
lcall
inc
int
bound
xor
push
icebp
or
stos
sub
dec
dec
mov
sti
ja
ja
sub
rcrl
popa
leave
out
and
adc
lock
test
inc
adc
inc
icebp
or
push
int3
rcrl
scas
dec
out
mov
push
push
scas
jle
adc
xor
fwait
ret
sub
cmp
incb
mov
fadds
cmpb
test
pop
sbb
mov
or
es
in
pop
test
pop
xchg
std
in
dec
out
orl
cwtl
cmp
neg
in
sub
lods
lret
lret
add
vpaddq
xchg
ffree
pusha
addr16
xchg
int3
mov
jecxz
comiss
in
cmc
push
std
fistpl
add
mul
xor
push
negb
push
mov
mov
sub
cli
cli
mov
sub
insb
dec
cmpsl
cli
push
jo
lret
xor
or
mov
das
cli
insl
stos
test
jno
xor
sub
mov
mov
mov
aam
or
adc
add
add
sub
xchg
in
xchg
sub
cmp
push
mov
ror
push
mov
lcall
cmpsb
aad
cltd
aad
js
lret
testl
mov
sub
pop
mov
sahf
hlt
lret
fisubs
push
mov
test
jmp
clc
jno
aam
pop
lahf
adc
clc
nop
andl
sti
xchg
movsl
xor
push
daa
pusha
mov
repz
lds
mov
dec
iret
jg
aam
hlt
movsl
inc
add
xchg
jecxz
xor
mov
arpl
jne
sub
pushw
and
inc
mov
and
lea
lret
mov
pop
and
scas
aad
sub
mov
add
arpl
ret
and
imul
mov
cld
and
rcrl
subb
pop
orb
mov
xchg
cld
xchg
xchg
pop
xchg
sbb
xor
in
addr16
fwait
lahf
ret
ror
insl
sbb
les
inc
outsl
or
mov
cmp
mov
jb
lret
xor
inc
data16
das
in
pop
and
adc
cmp
and
test
aas
or
psubsb
xor
addr16
popf
jecxz
mov
scas
roll
cmp
pop
je
lahf
mov
cwtl
hlt
jmp
lret
xchg
sub
pop
add
in
mov
dec
sub
xchg
add
mov
add
cmc
jg
push
mov
xchg
popa
div
outsl
mov
daa
mov
rolb
dec
mov
push
cmp
loope
add
insb
xchg
scas
mov
jae
or
mov
fwait
xchg
mov
mov
cmc
xchg
shlb
sti
stos
jp
test
xor
sbb
xchg
scas
scas
repnz
inc
andl
jae
xor
insl
jne
pop
xchg
inc
add
sbb
loope
in
inc
out
cld
pop
sbb
push
sbb
sar
lods
rol
lea
push
dec
stos
inc
mov
push
sarb
mov
jecxz
popa
aam
test
sub
mov
out
fwait
lods
icebp
sbb
sub
gs
lds
in
sbb
pop
inc
adc
adcl
clc
mov
shl
les
mov
mov
jns
dec
negb
inc
addr16
and
mov
cmp
mov
mov
jbe
add
pop
xchg
lods
icebp
js
mov
xor
push
mov
test
lea
mov
sbb
mull
jno
inc
jno
add
iret
sbb
mov
mov
mov
xchg
fs
pop
dec
xchg
aad
pop
sbb
mov
in
xchg
add
jo
xchg
mov
lea
push
jmp
pop
lret
test
and
scas
fisttpl
insl
jmp
inc
ret
push
or
sub
jne
popf
xchg
inc
xor
mul
push
xchg
fs
sarl
lds
into
ret
add
pop
pop
clc
sarb
inc
sbb
push
cld
pop
adc
pushl
add
add
cmpsl
fbstp
jecxz
ds
test
jne
sbb
cmpsl
and
xor
inc
mov
sub
jnp
sub
mov
stos
lds
inc
mov
push
orl
or
fs
or
mov
mov
push
fs
lahf
pop
adc
mov
xor
jne
sub
imul
or
fs
inc
popf
jecxz
mov
punpckldq
pop
sbb
jb
sub
adc
xor
jg
cwtl
movsb
cs
into
lret
mov
lcall
cmpl
mov
outsl
cmc
in
or
insb
stc
cli
out
jae
jns
pop
or
lock
mov
xchg
xchg
pop
sahf
idivl
lahf
shl
scas
das
xor
negl
incl
and
fistl
mov
adc
pop
inc
fbstp
mul
add
jge
dec
cmpb
sub
test
mov
inc
aas
xchg
push
call
xchg
fldenv
xor
add
adc
js
mov
sahf
dec
arpl
call
jo
incb
std
mov
xlat
lahf
pop
pop
jmp
in
mov
fwait
pop
es
les
fdivr
jno
pop
ret
ljmp
mov
rol
sarb
xrelease
lret
push
test
dec
sbb
push
fildl
pushf
dec
pandn
or
push
fidivs
popf
ss
fists
cmp
call
push
mov
mov
dec
inc
cmp
mov
cmpsb
lret
shl
aad
outsl
or
insb
lret
or
inc
out
stos
cmp
jl
out
jmp
fwait
mov
or
gs
roll
sub
call
ret
inc
cli
sbb
adc
pop
jno
mov
pop
sahf
sbb
xchg
ficompl
loope
les
pop
andb
ja
ret
or
xor
dec
inc
cltd
or
dec
fwait
ret
pop
insb
std
xchg
icebp
pop
add
aam
in
or
dec
enter
push
enter
popa
mov
fwait
icebp
in
lret
mov
adc
call
lret
ret
dec
sub
out
inc
jecxz
jne
mov
jae
pop
push
int3
adc
jecxz
movsl
cmpsl
fdivr
push
mov
sub
add
cmpsb
push
xor
ljmp
ds
outsb
inc
mov
leave
daa
mov
adc
ss
mov
iret
xor
loopne
cmp
orb
add
jmp
pop
aad
aam
pop
lret
popa
push
jnp
add
aas
negl
sahf
or
addr16
xor
push
mov
iret
add
lret
and
push
scas
xchg
mov
jl
filds
ja
inc
mov
inc
xchg
and
inc
inc
cltd
lret
push
push
dec
inc
mov
test
jbe
les
outsb
xor
mov
ret
fcompl
add
fwait
call
sarl
enter
repz
sbb
xor
xor
test
mov
pop
mov
in
mov
movsl
add
stos
movsb
push
enter
pushf
negl
fldenv
adc
and
sbb
cmpsl
push
lea
mov
scas
push
fmuls
in
xor
mul
add
pop
lock
hlt
or
xchg
pop
inc
push
pop
mov
push
or
aad
mov
scas
out
insl
push
sub
sbb
adc
mov
nop
in
mov
ret
xor
scas
roll
leave
pop
outsb
cwtl
mov
sbb
mov
mov
dec
sub
jge
jae
call
mov
sub
mov
mov
dec
sub
sarl
xchg
xchg
xor
push
addb
mov
gs
cwtl
lock
sub
xor
das
mov
test
in
fldl
jle
pop
outsb
out
add
xlat
cltd
sub
loopne
push
jbe
fldenv
and
adc
out
call
cwtl
xorl
push
lock
sahf
out
inc
loopne
pop
inc
mov
adc
ja
sub
aam
sbb
arpl
arpl
js
ss
pop
dec
jg
outsl
mov
mov
and
xlat
jne
add
leave
push
jne
cmc
popa
mov
xchg
inc
movsl
push
data16
mov
add
jb
mov
xchg
sbb
call
negl
cmpps
add
outsl
xchg
inc
pusha
popa
enter
pop
repnz
ror
shrb
mov
fcompl
cwtl
and
adc
sbb
sti
rolb
xor
mov
jns
jge
movsb
iret
inc
mov
test
dec
les
in
stos
stos
movsl
aad
data16
dec
add
inc
pop
jb
mov
mov
mov
cmp
in
call
int
aaa
xchg
testb
push
push
out
test
push
lods
mov
fildl
push
cmp
pop
push
sti
mov
enter
jle
dec
loope
test
sbb
add
in
add
push
hlt
pop
adc
and
mov
or
aam
sub
scas
mov
xor
sub
xor
inc
lods
mov
outsb
dec
dec
in
fildll
test
sbb
rorb
sbb
or
popa
sub
inc
xor
and
pop
xor
imul
in
jp
in
push
std
add
test
and
in
sub
lea
push
adc
cs
fisttps
xchg
shl
sub
adc
and
jmp
xchg
loop
dec
cmp
or
mov
jno
push
jmp
sub
xchg
mov
iret
push
lret
out
sub
xchg
nopl
ja
mov
sub
inc
ds
inc
add
repz
cmp
cmpsb
and
jb
inc
push
push
cmpsb
bound
sbb
out
clc
incb
dec
jo
xchg
pop
out
call
iret
cs
std
vpunpcklqdq
jle
hlt
cs
or
in
jbe
or
leave
mov
mov
aad
xchg
arpl
add
fcompl
cmp
idivb
jb
and
daa
pop
mov
pop
adc
jge
mov
in
cmpsb
mov
dec
xor
and
mov
xchg
int
sub
into
scas
ja
lret
mov
inc
pop
pop
xchg
jl
aam
insl
inc
lcall
jl
pop
in
pop
ja
mov
push
add
mov
int3
pop
lret
sub
and
cmc
mov
push
cltd
cmc
or
insl
cli
iret
loopne
push
int3
sbb
lcall
sbb
sbb
test
mov
les
repnz
or
out
ds
loope
mov
insl
xchg
pop
daa
aas
pop
push
pop
cmc
sbb
daa
cmpsb
add
ret
fnsave
xchg
cld
sub
mov
fists
jmp
push
adc
push
notl
xchg
xchg
cmp
pop
mov
stos
cmpsb
test
jg
dec
les
push
scas
lods
mov
fs
mov
adc
je
push
ljmp
cmp
test
and
mov
pop
mov
cltd
or
int
mov
lret
jg
push
mov
push
stc
jecxz
push
cld
mov
lret
shrl
mov
dec
rorl
push
mov
mov
pop
ficomps
lahf
test
pop
push
popf
aas
loope
popa
xchg
scas
fwait
cwtl
sti
mov
mov
cmc
enter
shlb
xlat
in
mov
or
shlb
sub
inc
es
adc
lock
and
imul
adcl
lock
dec
js
mov
xorb
dec
mov
push
sbbl
or
mov
mov
sub
stc
sbb
vmread
mov
pop
mov
fs
or
pop
sub
mov
add
push
mov
sbb
xchg
mov
subb
rcrl
cwtl
push
std
push
push
in
imul
ja
jns
inc
insb
mov
adc
sti
daa
popf
cld
pusha
shll
cmpsl
mov
mov
mov
pop
pop
ret
mov
or
loop
fbld
add
xchg
inc
inc
fcomip
add
pop
aad
lods
cld
test
xchg
xchg
stc
inc
into
repnz
xor
test
fists
jp
pop
pusha
jno
cmpsl
and
mov
xor
int
push
mov
int
jns
mov
jle
sbb
add
mov
dec
out
add
and
mov
mov
inc
mov
jecxz
shlb
and
mov
ljmp
lea
lods
cmp
and
lcall
inc
push
test
repz
and
cmpsb
adc
pop
std
push
dec
call
add
pop
sbb
inc
cmc
cld
xchg
sub
mov
leave
and
aam
mov
jmp
test
cmp
in
insb
cld
out
test
dec
adc
jne
mov
sbb
push
ljmp
xchg
xorl
or
mov
jle
dec
sti
notl
and
movsb
movsl
fistl
sarl
cmpsb
adc
daa
loop
cwtl
dec
add
stos
mov
mov
mov
fs
push
aaa
xchg
aaa
sub
and
loope
mov
inc
fidivl
push
fwait
rorb
push
xchg
inc
mov
test
leave
mov
cld
xchg
inc
xchg
sub
das
in
mov
das
dec
push
imul
out
int
loope
movsl
movsl
add
inc
pop
xor
call
lods
xchg
insl
stos
lods
xor
adc
insl
inc
sbb
lods
sbb
mov
clc
addr16
push
das
xor
into
in
xor
addr16
xchg
xchg
xchg
mov
xchg
jo
cli
xor
ljmp
movsb
xchg
out
pushf
popa
inc
inc
and
clc
aad
mov
gs
aam
cli
js
hlt
cmpsb
sbb
push
ds
ljmp
aaa
pop
xor
push
push
les
inc
pop
or
test
ljmp
loope
lret
shlb
mov
sub
dec
insl
adc
push
outsl
repnz
aad
mov
sti
inc
movl
lahf
dec
xorb
cmp
repnz
pop
es
in
push
iret
dec
sahf
js
femms
dec
cwtl
mov
inc
mov
outsl
call
sub
add
push
stos
cmp
adc
loop
std
xchg
in
out
repnz
add
mov
pop
push
lea
imul
push
dec
mov
dec
mov
xchg
cmp
mov
test
push
and
xchg
xchg
adc
add
mov
and
pop
enter
sub
in
rcrl
stos
sbb
sbb
xchg
or
cltd
aam
xchg
jecxz
in
jmp
movl
nop
sbb
aaa
and
inc
insl
mov
lea
mov
test
dec
scas
mov
shlb
into
mov
notb
mov
add
repz
mov
popl
xor
xchg
jle
push
cmpsl
mov
repnz
inc
lahf
clc
mov
jns
sbb
fmull
mov
xor
push
jns
xor
adc
sarb
aas
lods
aam
push
xor
mov
pushf
in
xchg
inc
mov
xor
cmp
inc
jae
lret
shll
lcall
xchg
and
mov
xchg
mov
and
call
je
pop
fistpl
dec
pushf
cmp
movsl
mov
push
mov
aas
jo
mov
aad
jo
add
leave
xchg
ret
sbb
in
mov
roll
xor
jo
inc
popf
cld
lret
adc
mov
loopne
cmp
inc
js
xor
fimuls
gs
std
test
and
out
fidivl
pop
imulb
lret
pop
insl
mov
mov
fmull
bnd
stc
mov
fs
lret
jae
or
fdiv
je
xor
outsl
icebp
mov
data16
mov
imul
jbe
mov
loop
mov
xchg
enter
inc
push
es
adc
adc
sbbb
das
add
xchg
dec
test
movsl
inc
fs
movsl
pop
pop
jnp
xchg
and
mov
rcl
adc
fmull
dec
enter
adc
sub
mov
sub
jl,pt
mov
mov
adc
cmpsb
sub
ja
xchg
and
sbb
ficomps
sahf
out
adc
fdivrs
notb
clc
inc
into
repnz
into
sti
mov
js
shr
je
add
popf
xchg
or
pop
mov
data16
imul
popa
ffreep
adc
loop
fnstcw
mov
lahf
in
sarl
testl
adc
adc
xchg
rcrl
xlat
lds
movsb
or
mov
cmp
xor
sub
into
xchg
test
orl
jns
jbe
add
push
add
roll
mov
mov
xor
fsts
mov
negl
test
ss
add
push
and
cmc
in
sub
adc
idivl
arpl
das
lods
imul
test
dec
jae
arpl
cltd
sti
lcall
lret
clc
cs
scas
test
lcall
andl
fxtract
xchg
lcall
xor
das
out
jl
ficoml
mov
adc
jmp
pop
repnz
add
lahf
stos
out
lret
push
into
imul
mov
loop
daa
cmp
pop
imul
jo
jl
and
jg
pop
gs
iret
mov
push
stos
inc
push
rcrb
xor
aas
fstl
xor
xchg
add
push
dec
mov
je
sub
ret
mov
xchg
add
or
hlt
pop
leave
cmpb
inc
in
xor
push
dec
sbb
mov
cli
js
repz
bound
lods
rorl
aam
jno
sub
xchg
or
mov
dec
inc
icebp
in
mul
push
push
fimull
insb
jle
fadd
mov
sbb
push
mov
add
mov
test
clc
fwait
jb
test
jp
hlt
repz
enter
dec
inc
sbb
mov
adc
iret
mov
lock
xbegin
cltd
dec
inc
xlat
and
push
push
enter
arpl
hlt
push
mov
imul
jg
cmp
xor
cmp
lcall
adc
loope
push
loopne
or
inc
dec
cmp
and
inc
mov
jo
jle
jo
adc
ljmp
gs
movsl
repnz
cltd
out
jbe
out
cltd
cwtl
and
mov
call
ljmp
jge
pop
testl
push
inc
lods
inc
pop
jg
xlat
or
cmpsl
out
add
imulb
rcl
cmp
into
and
out
inc
mov
sub
scas
call
pop
add
pop
push
mov
and
in
loop
jbe
mov
pop
insl
push
adc
pop
scas
jmp
aad
lcall
mov
and
dec
xchg
adc
lods
jo
mov
into
out
pushf
test
js
pop
and
dec
icebp
jg
pop
inc
add
or
sub
mov
xor
push
mov
addr16
and
mov
rcrb
scas
fxsave
out
mov
xchg
pusha
cwtl
fsubr
jmp
push
addr16
dec
ja
cmp
and
xchg
dec
sub
push
jecxz
or
jmp
xchg
dec
add
mov
mov
sbb
push
inc
lea
cld
test
pop
outsl
sbb
cmp
push
add
jne
lea
loope
repnz
rorl
xchg
nop
and
test
mov
mov
fsubl
mov
xchg
movsl
out
pop
xor
dec
fdivl
cmp
or
aas
cmp
mov
cmpsl
inc
inc
int3
inc
ljmp
in
or
test
cli
stos
cmp
fs
mov
xorb
repz
push
jecxz
jb
push
mov
and
ljmp
jbe
xor
add
jnp
mov
cld
notl
jns
iret
jb
push
jae
sub
push
sub
fcomps
push
lahf
popf
sub
mov
xchg
dec
movsl
fbld
mov
hlt
sbb
xchg
int3
push
in
push
mov
mov
cltd
scas
and
scas
inc
loope
sub
dec
lret
pop
fstpl
ss
mov
aad
mov
adc
ss
push
ret
mov
idivl
xchg
andb
inc
insb
addr16
pop
jg
lods
imul
leave
bound
in
cmovp
adc
in
out
aaa
jbe
clc
add
mov
out
mov
fsubrs
daa
pop
movsbl
lds
or
sbbb
xchg
xchg
pop
out
or
and
inc
jl
fimuls
out
lcall
aas
ja,pt
cmc
xchg
sub
jne
pushl
pop
aas
mov
mov
movsl
jae
cwtl
add
mov
push
icebp
cmp
leave
sarl
add
cltd
fidivrl
insb
cmp
aas
or
repnz
ja
push
insl
roll
mov
cmc
sbb
xchg
cmpsl
lret
mov
and
out
arpl
or
mov
shll
mov
ss
jl
inc
xchg
pop
jge
js
out
adcb
mov
jg
ss
mov
int
stos
imul
cmpsl
push
les
fdivr
out
push
inc
dec
adc
ss
jg
sbb
insl
add
jge
pop
jmp
jne
cs
int
jae
leave
mov
add
xchg
loopne
sbb
xor
arpl
cmp
enter
cmpsl
dec
mov
rorl
ljmp
cltd
mov
jnp
or
lods
test
dec
pop
mov
and
sahf
cmp
push
sub
out
sbb
push
add
mov
and
sahf
aas
sub
jl
stos
daa
or
mov
sbb
mov
mov
sub
push
test
push
jge
or
and
lods
add
in
test
xchg
sarl
pop
lcall
std
push
push
movsb
jg
mov
lahf
push
leave
xor
add
scas
and
inc
stos
pop
loop
mov
mov
xorl
or
mov
insb
or
jmp
push
pop
lret
jbe
out
lret
imul
fldcw
xchg
in
mov
adc
addl
out
add
fists
pushf
cmpsl
gs
push
jg
sub
test
pop
xor
movsb
fwait
sub
divl
sbb
jbe
jmp
mov
pop
mov
xor
daa
cmp
leave
rep
dec
mov
or
dec
sub
test
int3
sti
stos
xchg
and
jae
inc
dec
in
imul
movb
mov
dec
sub
sub
add
adc
inc
cmpb
test
xchg
jae,pt
stos
mov
mov
and
das
lds
and
sub
jl
cmpb
add
jecxz
cmp
xchg
or
xor
imul
outsb
jl
enter
cs
out
out
mov
lock
xor
movb
jle
dec
pop
inc
pop
mov
int
int
nop
sahf
xor
xlat
push
inc
cs
ja
call
sub
mov
inc
aam
btcl
sbbl
mov
stos
mov
push
cli
and
jnp
dec
mov
mov
add
dec
fsubrl
push
dec
mov
adc
and
leave
into
test
xchg
jns
xor
push
clts
scas
stc
pop
or
pop
adc
and
dec
or
cltd
repz
add
out
insl
sub
add
dec
clc
jb
sbb
ret
loop
jns
push
or
mov
clc
in
in
loopne
mov
mov
pop
cwtl
add
sub
sbb
mov
sbb
test
or
enter
out
bound
sbb
hlt
arpl
dec
xchg
daa
add
sbb
and
jmp
scas
repz
out
mov
jecxz
or
xorl
dec
inc
push
das
ljmp
pop
leave
lock
outsl
lahf
les
ljmp
fsubr
lahf
outsl
xchg
test
adc
mov
out
and
and
enter
xor
lods
dec
cmc
ja
stos
sti
pop
jge
inc
sbb
push
push
insl
push
stos
in
repnz
or
push
mov
xchg
stos
adc
sub
pop
inc
in
mov
jne
mov
add
pop
out
aam
imul
sbb
aaa
cwtl
sub
mov
sbb
pop
dec
cs
cmpsb
mov
and
out
add
paddq
rorb
mov
lret
xchg
jle
cmpsb
pop
push
in
mov
fistpl
pop
mov
mov
dec
add
sbb
jb
sbb
repnz
mov
mov
pop
jnp
subl
push
lds
mov
adc
jg
jnp
popf
or
cmp
cltd
sub
fsubl
or
ficomps
scas
xchg
dec
inc
aad
push
push
xchg
call
repz
fs
adc
into
xchg
mov
test
jns
mov
jge
xor
jns
push
shll
dec
cli
pop
repz
in
lcall
or
inc
or
pop
inc
addl
inc
and
xorb
stos
pop
push
push
cmp
push
das
mov
pop
mov
xor
nop
sub
fucomip
push
push
fiaddl
pop
repnz
or
les
push
into
jb
imul
fdivs
sbb
jns
dec
sub
pop
idivb
xlat
mov
push
imul
es
and
sbb
push
inc
mov
xchg
adc
xchg
sbb
pop
cmpsb
cmp
test
addl
into
sub
sbb
shrl
mov
pop
push
add
in
jmp
xor
into
inc
sbb
aaa
cmc
orl
xchg
je
xchg
add
cmpsl
mov
int3
xchg
dec
out
setns
pop
std
push
xchg
mov
sub
mov
rcr
imul
jbe
lods
imul
sub
ja
lret
insl
idivl
lcall
and
or
lret
and
jmp
out
cmp
mov
ds
sbb
mov
jne
adc
jl
leave
push
movsl
mov
lds
xchg
mov
sub
lcall
and
repnz
mov
lret
imul
in
inc
or
sub
fwait
mov
lahf
mov
sbb
call
sub
int3
addr16
jmp
sub
xor
test
subl
mov
test
into
aam
jg
xor
lea
and
xchg
popa
pusha
xchg
cmp
pushf
fcompl
loopne
jmp
mov
mov
data16
les
imul
into
hlt
out
inc
cmpsb
mov
addb
movsl
ret
xchg
add
cmpsl
and
out
mov
mov
loopne
pop
fisubrs
clc
and
out
arpl
popf
scas
rclb
adc
imul
in
mov
movsl
push
std
and
cmp
loop
xchg
mov
xchg
dec
icebp
mov
or
sbb
or
dec
dec
shrl
test
cltd
push
pusha
jnp
sti
push
out
cmp
cli
fiadds
aas
xchg
sahf
test
ja
loope
add
mov
daa
pop
out
out
and
pop
add
push
notb
std
cltd
dec
pushf
adc
jns
adc
ja
test
ficomps
ud1
ret
fs
call
adc
out
jno
pop
lds
imul
cltd
cli
call
and
or
addb
lock
cmp
xchg
sbb
inc
arpl
mov
add
push
mov
sub
sub
and
daa
lret
sub
testl
push
xchg
push
add
movsb
lret
lret
outsl
jl
movsb
cmp
and
fldcw
lahf
pop
aad
pop
fisubl
leave
dec
mov
andb
mov
xor
not
in
inc
in
jno
or
lock
mov
iret
cmp
pop
xchg
cmp
sbb
stos
jnp
cmp
jp
and
leave
pusha
add
push
push
dec
pop
xor
jae
jo
mov
imul
mov
rclb
adc
sahf
pop
aas
mov
adc
jge
xor
sbb
loop
sbb
mov
cli
pushw
andl
jnp
pop
jge
cmpsb
adc
rolb
hlt
dec
sti
inc
mov
pop
mov
sub
push
push
pop
xchg
lret
pusha
pop
push
xor
nop
sbb
dec
xor
mov
jae
push
add
mov
out
inc
mov
ja
and
fidivrl
sub
sub
pop
and
sub
orl
ljmp
mov
xor
insl
push
pusha
pop
inc
xchg
int
pop
aas
call
rol
aas
cwtl
mov
adc
sub
mov
sub
cmp
aad
cmp
popa
dec
ja
mov
shll
mov
or
inc
leave
sbb
add
pop
mov
pop
lods
or
or
es
or
sarl
lret
push
inc
jge
cmpsl
adc
std
pop
out
cmc
dec
inc
inc
aaa
jle
jb
mov
xor
lahf
adc
and
sti
negb
pop
xchg
cli
inc
out
push
outsl
scas
loop
movsl
bound
jb
jb
fs
repnz
int
out
and
sub
ret
push
aas
shrd
mov
fwait
xor
inc
popa
dec
and
aad
fldl
pop
dec
aam
mov
cltd
xchg
int3
cltd
fmuls
jb
sub
xor
cld
add
dec
fcmovnb
mov
fildl
imul
in
bound
lds
sbb
repnz
inc
cmpsb
fwait
cwtl
fistps
cmp
stos
jne
les
mov
arpl
adc
popf
add
mov
fsubp
mov
call
imul
pop
stc
inc
scas
lods
arpl
outsl
push
push
xor
xchg
add
and
push
xchg
pop
xchg
or
jle
xlat
adc
sbb
mov
mov
repnz
movsb
adc
push
jp
mov
push
sbb
dec
das
sbb
sbb
sbb
imul
mov
fnstsw
leave
sbb
pusha
push
sub
movsl
jmp
ljmp
add
shrl
stos
fstp
sbb
std
std
mov
mov
or
dec
xchg
shl
push
test
mov
in
fdivrs
xor
aaa
push
ret
xchg
lock
testb
xchg
pop
rcrb
sahf
lock
out
pusha
pushf
and
cmpsl
es
lret
lret
lods
and
aaa
aas
push
je
push
add
mov
xor
adc
fstp
stc
add
mov
mov
xor
arpl
sub
add
mov
aam
movsb
cs
and
fstpl
leave
pusha
in
xchg
psubd
inc
mov
scas
in
idiv
mov
les
xchg
addr16
or
push
lret
mov
adc
xor
jp
jmp
pop
lock
xchg
cmpsl
aaa
clc
xlat
dec
incl
or
mov
adc
or
fwait
add
mov
inc
in
sbb
cli
ja
sub
daa
ficomps
xchg
adc
mov
mov
adc
sbb
mov
rdtsc
sub
sbb
rcrl
add
pop
mov
jae
push
out
cmp
inc
dec
inc
fprem
arpl
mov
lods
mov
scas
xchg
cmp
in
add
push
mov
lods
xor
sub
pop
cmp
xchg
adc
ds
xor
sub
lahf
es
aad
out
dec
pop
sti
mull
in
loop
stos
bnd
cwtl
sbb
jbe
cwtl
in
and
fcomps
aas
mov
repnz
in
mov
push
push
dec
into
push
movsl
mov
cmp
push
cmp
jbe
pop
dec
mov
lcall
stos
cs
jns
jnp
aam
out
adc
xchg
add
loope
fmuls
loope,pt
int3
loope
fidivs
es
shlb
fsubs
jl
cmp
adc
in
jo
popf
gs
dec
dec
xor
popf
lock
fists
lds
jns
jge
hlt
popa
cmc
dec
das
movsb
pop
aam
andl
shlb
xor
fidivrs
sbb
js
xor
testl
pop
mov
jns
loop
lds
shl
mov
lock
movsb
js
xor
pop
xor
int
pop
push
pusha
je
fcompl
dec
mov
aam
out
sbb
inc
and
dec
inc
std
jg
loop
add
aaa
mul
das
in
movsl
inc
aam
xchg
std
mov
sarb
mov
sub
push
pop
repz
or
cmp
cmp
jno
gs
jge
and
or
jo
test
jns
loop
jmp
outsl
es
iret
imulb
lods
xchg
xchg
sbb
dec
cmpsb
cs
lock
loope
cld
or
aas
loope
mov
js
push
ja
adc
out
pop
pop
sub
mov
cli
mov
fisubrs
pop
movl
insb
out
stos
add
loop
fisubs
sbb
popa
xor
dec
and
mov
or
popl
out
aam
mov
mov
mov
adc
cli
fs
or
xchg
in
add
jno
ljmp
mov
adc
ret
sbb
mov
and
scas
gs
xor
mov
out
sbb
pop
movsl
or
push
mul
jecxz
call
das
lret
addr16
outsb
stos
mov
dec
inc
and
inc
cmp
and
popf
cs
xchg
test
xchg
into
cmp
insl
fimull
and
pop
and
xchg
fsubp
mov
cmpsl
inc
inc
push
repnz
enter
sub
pushaw
stos
mov
shr
jge
jbe
sbb
fwait
xchg
cwtl
mov
imul
inc
jmp
cmp
or
jp
gs
jge
cmpsb
imul
push
movsb
dec
push
mov
add
fcmovne
test
daa
mov
outsb
push
scas
mov
aas
fcomps
fidivrl
pushf
les
push
daa
jge
mov
leave
xor
orps
xchg
push
dec
movsl
jmp
adc
fisubrl
mov
mov
sbb
or
push
jmp
fnstcw
pop
ss
adc
pushl
cli
xor
in
and
sub
sti
xor
ja
xchg
jno
outsl
je
stc
xor
shrb
fwait
mov
dec
pop
sbb
test
jp
fisttps
xchg
loopne
sub
into
xor
jge
or
loopne
jns
cmp
push
inc
int3
push
popa
push
adcl
dec
cmpsl
dec
adc
test
mov
xchg
hlt
cmc
jecxz
adc
and
bound
jl
lcall
loopne
xor
jnp
lods
ss
in
pop
subl
jmp
jl
pop
dec
adc
rorl
cmp
push
cli
sub
cmp
mov
sbb
cmp
inc
fsts
inc
mov
sbb
push
cli
repnz
push
and
push
sbb
mov
mov
xchg
cli
test
push
xchg
push
insb
or
leave
ljmp
das
addr16
repnz
repnz
test
sub
adc
loope
jmp
xchg
mov
push
mov
jl
sub
and
add
sbb
ficompl
cmp
xorb
xchg
jg
lods
and
iret
jnp
pop
adc
sbb
hlt
lcall
cmp
gs
test
mov
gs
adc
mov
insb
sbb
out
std
xchg
faddl
add
and
inc
bound
mov
fists
repz
push
or
mov
out
adc
push
fisubl
cmp
xchg
pcmpeqb
sbb
mov
in
mov
cltd
jp
dec
push
cmp
or
push
std
aam
fmuls
and
fimuls
fisubrs
cmpsb
fidivrl
lods
xchg
rcrb
fmuls
imul
cmp
cld
xchg
arpl
fs
mov
mov
sub
fcmovbe
int
js
mov
jo
jo
sbbl
dec
add
jns
insb
pop
pop
mov
dec
outsl
mov
sub
sbb
fadds
or
scas
jns
xchg
fdivrl
mov
out
push
ja
mov
lock
push
jecxz
iret
nop
cmc
scas
lds
fisttpl
std
sahf
jae
insl
loop
enter
xchg
xchg
dec
mov
fldenv
mov
mov
outsl
and
jae
pop
out
xlat
cs
push
mov
pop
enter
xor
mov
lret
icebp
into
insb
in
inc
fstpl
adc
add
aaa
sarl
mov
inc
xchg
mov
cld
fcmovnu
push
outsl
inc
cmpsb
push
testb
jge
cmpsb
ljmp
push
pop
outsb
xorb
xchg
bound
push
repnz
sbb
std
push
add
mov
cs
out
test
aam
enter
and
or
adc
pop
lret
mov
push
mov
cmp
movsb
ja
xor
mov
lock
jle
and
ja
xor
cmc
add
btsl
xor
pop
sub
ret
ss
enter
stc
movswl
insl
xchg
jp
or
subb
ja
adc
cwtl
sahf
push
push
pop
pop
les
add
dec
mov
sbb
xor
dec
fndisi(8087
mov
mov
jg
out
cs
jnp
loopne
arpl
in
stos
jo
in
in
push
pushf
mov
and
pop
cmpsl
stos
sub
push
dec
sahf
outsb
push
or
gs
dec
sbb
iret
jp
push
pop
push
inc
sbbb
in
cmp
shr
inc
pop
cmpsb
mov
jb
jl
je
xor
stos
lcall
pop
neg
push
mov
push
int
sub
mov
adc
pop
xor
push
mov
pop
aas
aam
icebp
test
add
sbb
int3
lods
inc
dec
xchg
scas
xor
xchg
xchg
enter
ljmp
push
daa
xor
into
out
outsl
cmc
push
imul
and
dec
fldcw
or
sub
out
out
mov
scas
xor
lods
pop
mov
xchg
ljmp
pop
inc
inc
and
pop
push
loope
arpl
jbe
push
rorb
notl
cmpsl
outsl
stos
idivb
cmp
pop
lcall
cld
loop
mov
ss
add
fbstp
ds
sub
add
orl
mov
mov
jge
dec
add
shl
push
pop
adcb
fimuls
cmpsl
leave
hlt
and
ret
aaa
xchg
jbe
xchg
xorl
mov
adc
pop
inc
and
xor
jnp
dec
jo
pop
mov
iret
adc
jo
xchg
das
sbb
mov
lds
in
incl
cmp
cmpb
adc
adc
xchg
or
xchg
dec
xchg
shl
lods
or
push
pop
mov
int3
or
sti
add
push
stos
sub
cli
mov
pop
xchg
ds
dec
jns
idivl
test
xor
jge
xchg
int
fcomi
jne
jbe
cltd
mov
arpl
outsl
pop
dec
pop
cli
pop
dec
daa
ror
bound
test
sahf
subl
dec
push
xchg
or
dec
fistpll
cmc
sub
lahf
into
pop
pop
jbe
xor
push
push
mov
jp
cmc
insl
push
les
xor
bound
mov
inc
xchg
jb
xlat
loop
push
push
xor
push
test
scas
and
bound
outsb
fadds
repnz
js
add
in
add
xor
lds
xor
lock
adc
mov
xor
push
pusha
sarb
jle
rorb
lahf
cmpsl
xor
and
mov
or
cwtl
dec
jp
add
xor
imul
lods
lcall
push
gs
cltd
add
mov
insb
jge
xor
mov
jns
add
push
sub
cmp
pop
inc
xorb
sbb
dec
mov
fwait
sahf
out
cmpsl
xor
jp
test
add
mov
cmp
add
gs
sbb
and
sbb
xor
inc
js
cmp
push
in
cmpb
mov
std
jecxz
dec
mov
cwtl
loopne
adc
int3
mov
cmp
lods
or
cmp
add
fists
cmp
mov
push
rcll
or
and
sbb
mov
pop
add
or
inc
xlat
movl
lock
ds
sbb
jbe
dec
and
dec
sbb
dec
jp
iret
cld
fs
gs
int3
sub
sbb
movsb
sub
push
mov
jle
jmp
add
leave
mov
dec
and
cs
push
mov
inc
iret
xor
xchg
push
cmp
mul
sub
adc
jbe
dec
cmp
push
insl
scas
cs
inc
ja
jns
sti
adc
or
in
adc
dec
dec
outsb
movsl
push
xchg
scas
sub
xchg
cmpsb
xchg
scas
add
fsubl
lahf
push
inc
test
add
fisttps
insl
daa
mov
call
cmpsl
das
aam
cltd
fsubrp
iret
jge
cmp
add
adc
sbb
adc
in
xchg
jae
and
jae
jae
call
pop
cmc
dec
pushf
fs
fnsave
shll
test
repz
xchg
add
mov
hlt
mov
pop
xlat
in
or
jne
fisubrl
popl
pusha
and
dec
inc
rep
push
dec
mov
in
cmp
in
xor
test
arpl
add
or
shrw
adc
mov
rcrb
mov
dec
adc
add
movsb
out
inc
mov
rolb
rcrb
mov
adc
cmp
lock
lock
mov
cmp
sub
mov
inc
ljmp
rolb
inc
arpl
cs
pop
bound
xchg
lods
test
xchg
inc
sbb
mov
in
test
dec
push
pop
mov
push
add
add
loope
push
stos
mov
jbe
pop
call
xor
pop
pusha
rorb
je
int
push
mov
dec
and
in
int
inc
push
jmp
mov
ss
mov
clc
out
jbe
add
das
jbe
fldenv
push
push
and
cmp
cltd
mov
cmp
movsl
int3
pop
popf
mov
push
repnz
addl
inc
sbb
sub
mov
mov
add
out
jns
int
out
push
lcall
jnp
fucomip
add
repnz
stos
out
jp
jbe
lret
shrb
jnp
pop
or
rorb
sbb
push
shll
sbb
ljmp
imul
out
mov
push
pop
pop
cmpl
fcmovb
mov
xchg
mov
arpl
xor
mov
pop
xchg
mov
cmpsl
adc
decb
jecxz
shlb
xchg
pop
lret
ss
enter
sbb
dec
lret
shr
dec
lods
add
pop
xchg
roll
out
hlt
or
xchg
adc
xchg
pop
into
mulb
lret
nop
add
jg
out
xlat
jo
jo
out
out
addr16
test
daa
adc
push
xchg
jmp
add
stos
cmp
cmpsl
gs
in
sub
dec
push
push
imul
mov
jmp
sub
clc
add
arpl
aaa
pop
shl
xor
out
imul
pop
fsubrs
and
mov
fdivrs
xor
mov
std
pop
cmpsb
add
test
xor
or
in
fmull
inc
xor
insl
addr16
enter
pusha
adc
push
call
cwtl
es
adc
sbb
ljmp
sub
fwait
add
ljmp
mov
pop
mov
loop
xchg
push
aaa
pop
push
adc
mov
movsl
mov
ss
xorl
ss
add
push
dec
or
push
jmp
xor
dec
in
push
inc
mov
or
inc
ja
in
in
cs
jge
lock
ret
call
rcrl
lahf
not
adcb
and
xor
and
add
mov
sbb
and
orl
push
jb
cwtl
jle
dec
xchg
adc
insl
push
xor
push
push
insb
call
adc
adcb
popa
rcll
or
sbb
aas
xchg
sub
cmp
popa
mov
aam
repnz
cmp
xchg
sahf
pop
add
or
mov
cmp
les
dec
arpl
xor
pop
flds
mov
icebp
dec
push
cmp
mov
inc
dec
xchg
bnd
and
pop
repz
or
sbb
sahf
fnstenv
jl
dec
inc
jg
lret
shrb
or
sub
int3
and
ljmp
jae
fbstp
sti
es
cmc
xchg
popa
jle
cmpsl
cmp
cld
and
lock
cwtl
mulb
push
inc
arpl
fcmovbe
aaa
int
sub
mov
mov
int
push
lods
pop
jb
aad
out
mov
sub
iret
hlt
adc
popf
scas
add
sbb
je
test
adc
xlat
xor
icebp
into
pop
cmp
jns
ss
xchg
sbb
push
or
insb
sub
add
ljmp
push
addb
fiaddl
jno
rorl
push
xchg
dec
pop
shll
mov
loope
loope
rclb
mov
movsl
jmp
lret
pop
xchg
lea
scas
orb
add
and
das
cmp
repz
dec
pop
dec
adc
outsb
bound
insl
add
loope
xchg
push
and
cld
mov
std
jae
daa
push
daa
cmpsb
mov
jbe
enter
aad
in
jl
pop
add
std
cmc
outsb
stos
aas
xacquire
dec
pushf
push
in
int3
imul
sub
xchg
jae
jae
iret
or
push
mov
addr16
out
and
pop
in
in
add
xchg
and
imul
jb
stos
aaa
adc
sbbb
ret
imul
cmc
lods
adc
sub
mov
and
mov
cmp
pop
lret
mov
xor
dec
inc
test
sub
dec
loop
xchg
stos
sub
cmp
push
cmp
rorl
cmc
loopne
sub
jnp
pop
inc
adcb
aad
leave
cli
stc
stos
ds
insl
icebp
loop
jne
dec
cmp
dec
xor
adcl
jnp
imul
push
cmpl
rcrb
xor
mov
push
adc
aas
or
icebp
push
jne
out
pusha
test
sbb
cmp
movsb
fs
push
cmpsl
jl
push
jo
into
in
mov
pop
and
mov
fadd
or
cmp
xchg
xor
movsb
push
push
cmp
inc
push
cld
call
ud2
scas
push
and
ljmp
and
jp
mov
jo
mov
push
lock
out
inc
mov
jo
push
or
xchg
lea
into
aas
pop
mov
lret
xor
daa
push
popa
push
fcoml
test
dec
jecxz
sti
push
popa
push
fsubrs
sub
cli
mov
test
aam
adc
rcrl
jae
lock
in
cmp
je
aaa
mov
stc
stos
pop
sub
and
mov
dec
cld
mov
icebp
jnp
movsb
sbb
adc
lods
pop
jne
jge
repnz
adc
stos
outsl
jmp
lcall
cwtl
mov
or
mov
daa
and
ffree
ss
pop
jle
inc
sbb
jmp
std
pop
pusha
data16
and
dec
test
mov
icebp
lret
adc
fcoml
push
sbb
push
inc
loope
ret
mov
scas
sbb
fsin
ja
inc
adc
mov
sub
movsl
jg
pop
dec
mov
fdivs
and
xchg
mov
lods
je
inc
sbb
jecxz
sbb
inc
push
cmp
sbb
nop
test
xchg
jae
jg
pop
bnd
sub
inc
inc
int3
fnsave
xchg
gs
daa
jmp
push
pop
fidivrs
lock
jle
xor
rol
aas
sub
test
pop
push
adc
inc
ljmp
and
push
sub
decl
movlps
cmp
clc
xor
push
inc
mov
and
cmp
lods
adc
insl
sbb
movsw
lea
adc
popa
repnz
insl
jbe
rclb
loop
push
cmpsb
jns
pop
mov
data16
mov
bsf
dec
into
xor
pop
pop
adc
xchg
int3
in
cmp
pop
lret
push
jae
cli
add
dec
mov
icebp
and
arpl
or
hlt
or
mov
repnz
insb
test
adc
xchg
fdiv
cmp
into
cli
lret
jne
cmp
cli
mov
ret
adc
iret
in
push
add
outsl
push
cmp
or
sbb
scas
mov
int3
in
mov
ljmp
insl
pusha
pop
xchg
test
or
mov
test
add
jp
mov
movsl
mov
or
loopne
pop
outsl
sub
pusha
mov
mov
jbe
mov
rorl
jg
int3
dec
incl
push
dec
ljmp
push
fldenv
int3
inc
fs
xor
fistl
xchg
aaa
cmc
and
loopne
sti
xchg
mov
mov
cmp
mov
xchg
sbb
or
aad
dec
mov
push
cmpsb
dec
rcl
fisubrs
pop
imulb
pop
push
xchg
mov
mov
clc
adc
insb
dec
popa
mov
jg
es
ret
out
lods
rcll
out
lock
movsb
cltd
js
mov
das
or
add
push
in
mov
jle
movsb
mov
rorb
psubsw
adc
and
cli
fstl
hlt
mov
out
or
test
in
mul
adc
ss
lds
jo
inc
add
mov
pop
or
fidivl
imul
pop
add
jge
clc
dec
aam
push
xchg
cltd
xlat
mov
pop
fincstp
stc
test
dec
imul
and
daa
orl
lret
lea
mov
jne
xchg
shll
dec
or
out
js
pop
mov
xlat
push
cmp
mov
sbb
jp
sbb
rcrb
xor
push
sub
xor
jno
or
xchg
das
adc
scas
test
sbb
rorl
fnstsw
flds
add
jg
push
je
fisubrl
jg
sbb
jae
test
xchg
xlat
cmp
inc
stos
push
xchg
test
hlt
add
enter
negl
js
repz
in
or
push
push
jmp
sahf
ficomps
das
ret
fldl
rolb
sbb
loop
dec
lds
add
out
mov
movsl
pop
stc
addr16
imul
ja
mov
mov
sub
ljmp
xor
leave
dec
dec
scas
bnd
xor
out
xor
push
fimull
or
scas
insl
lods
mov
fcompl
pop
inc
mov
push
imul
rep
stc
rcr
sar
call
les
cli
adc
xchg
mov
jecxz
jl
jge
cs
xor
push
pop
popa
or
frstor
clc
xchg
mov
stos
clc
clc
adc
aas
imul
xchg
fscale
imul
out
xlat
sbb
mov
push
sbb
ljmp
jp
xor
pusha
mov
enter
in
add
lds
pushl
mov
mov
jle
clc
push
and
fwait
rorb
or
in
enter
dec
aaa
jns
mov
dec
cmpb
mov
in
iret
mov
insl
std
mov
push
push
popa
inc
inc
push
fmull
mov
lds
stos
sbb
and
pop
lock
repnz
movsb
das
inc
sub
jns
cmp
mov
lcall
ljmp
add
jle
sub
mov
ljmp
fimuls
shl
mov
xorl
push
in
decl
pop
into
scas
mov
mov
cmp
inc
aad
cmpl
aam
stos
xor
xorb
ret
or
test
nop
xchg
xor
or
xor
dec
cs
jnp
jo
ret
mov
or
xchg
pushf
cltd
fdivrl
js
cmp
hlt
popa
and
push
dec
jmp
xor
jne
add
int
into
cmp
mov
push
enter
push
push
out
mov
add
stos
insl
repz
cmp
ror
mov
add
xchg
mov
cmpl
dec
les
and
adc
push
orb
inc
cmpsb
ds
lcall
retw
and
rolb
fmulp
dec
pop
xor
repnz
popl
xor
jle
popa
in
ret
and
rorb
jmp
and
jbe
dec
mov
stos
xchg
mov
or
pop
outsb
mov
jbe
xor
inc
inc
enter
jno
jb
xor
fdivs
dec
or
fstps
ficoml
jl
dec
xor
fisubl
or
sti
mov
sti
add
fwait
into
ljmp
xor
mov
aam
cmpsl
bound
dec
push
cli
push
or
call
iret
insl
in
dec
fdivrs
dec
sub
rcrb
ss
sub
popf
shlb
lock
push
add
cmpsb
push
stos
pop
sarb
mov
sbb
xor
sub
into
aam
inc
in
pushf
add
xor
jns
push
jne
andb
je
jno
sbb
mov
add
sub
lret
push
mov
repz
mov
pushf
cmp
das
insb
mov
test
in
ss
push
sbb
cs
mov
pop
mov
sbb
cmp
push
add
ror
pop
and
cmpsl
inc
sarb
popa
xchg
sahf
jle
daa
inc
pop
mov
pusha
inc
sub
sub
scas
inc
push
or
repz
loop
ja
push
call
xor
pop
std
pop
es
mov
xchg
jecxz
lcall
call
test
push
mov
inc
push
xchg
push
mov
push
pop
je
shl
mov
inc
dec
sbb
sahf
mov
mov
outsl
mov
cwtl
inc
fdivl
sub
in
pop
shll
or
js
jb
testl
dec
xchg
pop
mov
push
mov
insb
ficomps
hlt
xor
cmpsl
in
les
iret
mov
mov
iret
sub
ljmp
aas
sub
jle
adc
gs
arpl
mov
insl
inc
cmc
pusha
dec
fimuls
xchg
rcl
pop
mov
pusha
out
and
lret
shrl
inc
dec
and
lock
mov
mov
movsl
enter
data16
inc
adc
mov
inc
sbb
cli
stos
lods
cmp
jo
pop
ret
push
rcll
adc
add
adc
pop
pop
shl
js
int3
xchg
gs
pusha
in
sub
xchg
adc
call
outsl
pushf
inc
scas
add
sbb
mov
icebp
addb
jno
mov
out
jle
lret
pop
fcmovnbe
pop
adc
jo
faddl
mov
pop
pop
mov
sbbl
push
mov
and
mov
adc
aaa
add
movsl
and
cmp
mov
fs
sarb
push
mov
inc
jb
push
mov
cmc
cmp
into
mov
jb
mov
mov
jbe
xchg
jbe
in
push
sub
xabort
ss
mov
cmpsb
test
or
test
fidivrl
roll
idivb
cmp
mov
out
cmpb
in
or
test
loop,pt
jbe
lock
and
pushf
pop
inc
and
clc
cli
test
push
lods
out
fs
hlt
test
mov
imul
lds
jno
xlat
push
or
inc
pop
aaa
and
rcll
mov
mov
xlat
mov
mov
xlat
test
iret
fmul
push
mov
jno
xor
sarb
pop
popa
in
jb
inc
mov
cld
pop
cmpsl
jbe
stos
and
cmp
ret
adc
or
xchg
out
pusha
inc
or
sti
or
ja
jle
adc
sbb
jecxz
mov
out
cmp
xor
xchg
cmp
popa
jnp
cmp
add
pop
xlat
dec
lahf
xor
push
dec
push
adc
xchg
test
cmp
add
sbb
add
sahf
lcall
popa
mov
test
rcr
jb
pop
push
hlt
ljmp
dec
sbb
xchg
sti
movsb
and
add
push
cmp
push
gs
lods
jmp
push
dec
je
iret
push
mov
fnsave
pmaxub
popf
push
and
aas
or
arpl
mov
mov
sbb
mov
add
dec
fdivrp
data16
jbe
dec
cmc
mov
mov
sub
sub
pusha
dec
sbb
add
adcb
lret
popf
pop
insb
dec
std
lods
repnz
dec
push
dec
adc
dec
adc
or
es
iret
neg
xor
mov
cmp
or
push
and
xchg
hlt
or
jne
insb
aaa
jns
in
mov
jnp
cmc
loopne
mov
inc
sub
shl
push
xor
bnd
mov
outsl
je
mov
push
movntq
out
notl
sbb
mov
cmp
out
stos
cmp
aad
push
test
nop
adcl
push
shlb
ret
mov
jne
aas
pop
and
sbb
sub
cmpsl
fstpt
lcall
pop
pusha
jo
xor
test
loop
cmpsb
push
mov
xor
out
pop
in
stos
fwait
aam
jmp
mov
cmp
push
repnz
add
adcl
mov
jmp
mov
mov
test
add
push
push
out
mov
mov
pop
mov
add
inc
rolb
mov
faddl
jnp
ja
xor
inc
dec
pusha
in
shll
or
or
inc
sub
xchg
jecxz
je
cmp
cmpsl
out
sidtl
mov
popa
mov
das
fnstcw
sbb
sub
loopne
fistl
mov
xchg
sub
outsl
cli
mov
push
ja
push
xor
adc
aaa
pop
push
ficoml
arpl
repnz
adc
ss
pop
inc
xor
adc
sbb
jmp
outsb
nop
push
mov
cltd
out
pop
cmp
xchg
and
lahf
loope
leave
stos
jmp
dec
clc
enter
test
jmp
ss
mov
test
cwtl
arpl
lea
push
ja
pop
cmpl
sub
addr16
inc
adc
jo
ja
inc
jl
and
repnz
stos
xchg
fiadds
dec
cmovns
sub
inc
add
pop
orl
aaa
push
dec
xchg
jmp
push
cltd
fisttps
movsb
out
xor
jne
adc
mov
hlt
imul
mov
sub
jno
repnz
subb
mul
dec
xchg
mov
and
fisubs
lock
repz
int3
xorl
jl
pop
jo
jns
pop
jge
rolb
xor
bound
push
xchg
sub
lods
repnz
push
es
loope
scas
cmp
aam
lret
lcall
or
pop
push
es
cmpsb
sbbb
sub
add
fdivrl
rorl
xor
int
cmpsl
imul
je
xor
jg
or
std
insb
leave
mov
dec
or
lock
sub
jmp
sbb
mov
hlt
inc
loopne
pusha
jle
lcall
loopne
fldcw
repz
pop
out
mov
pop
cld
xor
outsl
xor
inc
cmpsl
push
add
push
and
scas
lret
mov
and
jp
jno
das
or
push
xchg
jmp
push
cmp
add
pop
jbe
test
jno
cli
jb
fisttps
or
andl
xchg
dec
pop
inc
xchg
clc
test
inc
daa
aaa
dec
dec
adc
out
dec
sbb
push
leave
xchg
jl
pop
data16
call
stc
push
pushw
call
imull
add
jae
jns
mov
and
mov
jecxz
cmp
in
orl
jle
mov
dec
fdivs
addr16
les
adc
push
push
push
in
dec
cmp
call
aaa
sti
movsb
mov
sahf
dec
xor
add
xor
icebp
pop
jbe
sbb
mov
push
mov
ja
add
scas
aam
pop
mov
cmp
pop
jge
or
js
fndisi(8087
dec
loopne
repnz
lea
mov
iret
pushf
push
cli
frstor
divl
daa
in
stos
repz
pop
jne
jbe
mov
loop
xchg
jp
orb
hlt
fwait
dec
dec
addr16
stos
push
and
popa
hlt
in
mov
adc
scas
add
jp
push
dec
test
cmp
mov
sbb
jbe
decb
testb
test
mov
aas
into
lods
mov
push
xor
add
roll
int
jbe
in
test
sbb
and
stos
ljmp
data16
adc
adc
jae
push
movl
mov
jnp
mov
mov
add
and
aam
cs
mov
addb
insl
cmp
adc
inc
loope
imul
dec
dec
pop
and
xchg
fwait
stos
xor
ljmp
and
mov
inc
popl
mov
scas
sarb
jno
add
pop
pop
add
xchg
cmpl
out
xchg
flds
pop
xchg
pusha
repnz
cltd
sti
jmp
fdivl
cmp
pop
jge
stos
movsb
inc
out
pop
enter
jae
je
dec
lret
dec
mov
sub
xchg
gs
adc
or
xchg
inc
dec
in
enter
mov
mov
mov
sub
sub
mov
fstpt
mov
jne
jp
scas
fimull
leave
scas
out
dec
pop
lcall
pop
testl
mov
xchg
outsl
sbb
fnsave
fldt
push
stos
jge
xchg
or
jl
jnp
adc
int3
jecxz
outsb
xlat
jne
xchg
aad
inc
lahf
dec
mov
hlt
inc
xor
push
ss
xor
xchg
icebp
pushf
pop
jge
mov
pop
push
jecxz
test
iret
fcmovnu
inc
aam
sbb
xor
popa
pop
lods
ficoms
cmpsl
xor
dec
int3
sub
scas
dec
push
je
lret
lods
in
jne
enter
mov
mov
addr16
hlt
jns
inc
loopne
jnp
int
and
lods
sbb
dec
das
insb
popf
or
ret
xor
stos
cmp
das
andl
mov
bound
and
xchg
mov
or
and
adc
je
xor
xchg
sbb
or
sub
leave
jmp
or
pushf
divb
xchg
cmp
negb
mov
pop
inc
adc
dec
push
jp
xchg
dec
call
mov
mov
roll
dec
fsubr
xor
scas
sbb
movsl
xor
bound
dec
xor
mov
imul
subl
cmp
gs
lret
and
xchg
or
lods
lret
sbb
dec
test
sbb
cltd
push
xchg
scas
or
pop
mov
xchg
cwtl
add
dec
fcompl
es
jo
mov
mov
cmp
rclb
adc
das
ret
divb
in
and
popf
fsubrs
sbb
in
dec
sub
sbb
and
ss
and
jbe
imul
int
cmc
xchg
insl
mov
jecxz
jbe
loope
ljmp
mov
sbb
shll
popa
fldl
push
mov
xchg
push
aad
bound
sbb
pop
or
sub
cmpsl
aaa
mov
push
jmp
jb
mov
test
adc
scas
mov
mov
popf
in
sbb
push
jmp
arpl
ss
mov
in
and
mov
xlat
ss
imul
mov
cltd
cwtl
stos
leave
jo
and
ja
inc
iret
outsb
loop
into
popf
mov
mov
pop
cwtl
je
and
mov
xorl
or
fisttpll
jnp
xchg
cld
inc
dec
ret
lock
cmp
sub
adc
scas
cmp
mov
repnz
mov
mov
sti
fwait
insl
pushf
pop
cmp
xor
fcmovb
mov
mov
mov
jg
das
pop
call
lds
loope
inc
cwtl
aaa
xchg
add
mov
movsl
xchg
cpuid
jl
sbb
inc
pop
pop
mov
push
outsl
popa
and
pop
cmc
dec
adc
nop
int3
addb
fldt
loope
addr16
mov
xchg
int
xor
sbbl
or
push
mov
sub
push
into
je
adc
ret
xchg
out
jl
add
xchg
fstpt
push
andb
dec
fsubrp
movsl
shlb
movsb
leave
add
sub
cmp
inc
or
push
lret
aad
or
std
imul
shr
pop
hlt
push
xchg
insb
xorb
lods
xchg
adc
add
adc
cmovl
subl
xchg
lds
sub
push
rorb
out
sarb
push
sbb
stc
loopne
in
adc
mov
xchg
aad
jmp
mov
adc
andb
add
push
mov
xchg
cmp
iret
adc
lea
push
std
jecxz
mov
fisttps
mov
xchg
push
mov
loop
lret
sub
aam
jl
xor
inc
je
jle
pop
cwtl
hlt
mov
add
movsl
push
cmp
xchg
icebp
dec
jg
iret
adc
andb
stos
mov
pop
xor
xchg
adc
imulb
lods
push
ja
xlat
lret
cmp
jp
pextrw
add
push
or
pop
cld
push
xor
cmp
mov
in
fbld
clc
je
mov
fwait
repz
push
mov
stos
sti
and
cmpsl
xorb
or
aad
sub
insb
movsl
ffree
addr16
mov
rol
lret
and
in
xchg
add
addl
lahf
or
inc
lods
inc
pushf
cmp
fwait
call
mov
out
leave
mov
iret
addr16
sbb
sbb
mov
xor
jno
jbe
cmp
sbb
xlat
and
arpl
xchg
mov
mov
lods
mov
insb
xchg
xor
fs
jns
jbe
push
ljmp
cld
jnp
test
xor
jo
ret
inc
jmp
add
jo
inc
out
out
or
mov
push
adc
dec
cld
pop
xchg
fldenv
scas
push
ja
test
enter
shll
cmp
imul
jno,pn
aaa
jmp
pusha
movsb
in
movsl
bnd
push
xor
sub
cmp
mov
jno
lods
jno
mov
or
orb
jnp
push
xor
pushf
and
sbb
test
lret
xor
scas
outsl
mov
insb
and
jne
pusha
jecxz
mov
and
lcall
sbb
mov
loopne
clc
aam
add
test
icebp
sbb
shl
fwait
xor
outsl
sar
cmp
stos
insl
aas
fucomp
repnz
jle
mov
fnstsw
adc
cmp
int3
adc
xor
adc
lahf
outsb
in
and
iret
scas
mov
mov
push
mov
shr
inc
imul
daa
and
xor
fldenv
ljmp
mov
push
dec
gs
push
mov
stos
movl
outsl
ret
les
adc
push
lret
adc
fs
xor
xchg
lret
sbb
pop
push
iret
mov
repz
jns
pop
imul
outsl
mov
cmp
adc
fdivs
sbb
lock
xchg
les
dec
pop
outsb
sub
inc
sub
cmpsl
in
imul
mov
or
dec
mov
dec
inc
ret
test
jo
pusha
sti
inc
jl
sub
mov
jmp
rol
mov
in
pop
icebp
divb
xorb
daa
push
loop
out
mov
outsl
inc
cmp
jl
dec
push
sahf
pop
int
ds
fidivrl
cltd
sbb
outsl
jne
inc
fisttps
mov
and
pushf
xor
stos
lcall
push
add
cmp
popf
mov
mov
jge
xor
add
fistpl
or
jge
cmp
jnp
repz
test
inc
pop
fildl
es
ds
cmp
pop
pusha
xchg
sti
out
fsubl
add
inc
std
cmp
out
pop
mov
pop
xchg
jmp
adc
aaa
insb
push
inc
lock
push
mov
push
stc
ss
sahf
insb
nop
fnstenv
cmp
mov
push
mov
cs
inc
or
fstl
mov
cmpsb
es
outsl
jle
ljmp
sahf
mov
in
pop
pop
push
pop
popa
sub
inc
fsubrs
cmpsb
push
cmp
cmc
mov
fisubrs
inc
mov
ja
mov
dec
stc
pop
std
gs
push
rorb
or
aaa
in
movsb
sbb
mov
mov
adc
xor
cmp
pop
sbb
sbb
movl
scas
fistl
jecxz
mov
inc
adc
insl
push
es
add
rcrb
push
subl
inc
sub
cwtl
xchg
pop
fwait
arpl
xchg
fistpl
jno
xor
subl
push
sub
xchg
xor
in
cmp
outsl
cmc
push
sub
pushf
adc
sbb
fldenv
lods
jb
mov
loope
lret
inc
insl
jb
xor
mov
cmp
rcrb
adc
push
pop
lcall
rolb
jns
fidivl
es
push
mov
adc
fists
fwait
xlat
add
jg
jmp
out
and
aad
xor
pop
push
test
sbb
lock
pusha
or
mov
push
push
sub
repz
pop
and
mov
je
lret
lock
aad
xor
mov
lods
shr
aam
pop
lea
fimull
cmp
imul
mov
push
sahf
or
insl
das
xor
dec
hlt
fidivl
sbb
sub
mov
ret
jg
fnsave
bound
push
ljmp
test
popf
add
addr16
sbb
xchg
dec
vcvttps2dq
adc
lret
mov
dec
sub
int
scas
jmp
and
fidivrl
fisubs
negb
add
xchg
jl
pop
sbb
test
xchg
les
jno
iret
jl
push
daa
xchg
xor
out
add
mull
sbb
push
and
xor
and
pop
mov
mov
pop
ret
lods
or
push
aaa
lock
pop
mov
int
cli
pusha
sub
push
sbb
jae
mov
xor
inc
bound
cmc
sahf
adc
sbb
mull
out
out
sbb
mov
out
mov
cs
lahf
out
das
aas
lods
cmc
xchg
rol
add
sbb
in
stc
into
fmuls
dec
das
push
or
scas
bound
ja
sbb
or
loope
imul
movsl
in
pminub
adc
inc
out
pop
mov
mov
pusha
inc
sub
aas
inc
ljmp
jle
and
adc
and
sub
mov
jl
fadds
pop
call
movl
jne
adc
not
jb
fs
outsl
or
sbbl
xor
stos
add
cmp
clc
mov
scas
daa
xchg
jg
hlt
jnp
lret
pop
pop
or
pop
std
xor
pusha
jge
xor
ja
adc
adc
icebp
cmc
jge
scas
sub
sub
aad
jnp
inc
cmp
jle
cmp
les
fs
xor
nop
iret
and
mov
lret
xor
enter
aaa
outsb
xor
outsb
fcomps
rcrl
mov
jmp
rolb
mov
int3
arpl
push
jl
jp
pop
lods
add
call
xchg
outsb
sbb
sub
jns
push
pop
out
loope
xchg
dec
or
mov
enter
jmp
jl
insb
cld
inc
cli
mov
lock
mov
cmpsb
jmp
pop
test
orl
repz
ret
mov
je
xlat
mov
outsb
test
sub
iret
lods
dec
xchg
sbb
cli
add
mov
inc
stos
test
ljmp
mov
aad
mov
fsubrs
or
loopne
pusha
xor
out
cmp
push
mov
sub
movsb
xchg
fmuls
insb
lahf
rcll
ret
inc
xor
lcall
add
out
mov
xor
cmp
insl
xchg
into
dec
xchg
or
in
mov
fsubp
jecxz
mov
shl
push
sbbl
push
or
imulb
mov
and
push
push
int
dec
fucomp
jmp
ljmp
ja
cmp
xchg
loope
sbb
jne
pushf
mov
loope
clc
sub
cmpl
push
cwtl
sbb
arpl
pop
iret
and
push
lods
mov
ljmp
arpl
xor
incb
int3
orb
out
out
or
sarl
sub
and
and
adc
int3
jle
add
sub
popf
inc
jl
sbb
ljmp
inc
popf
sbb
dec
hlt
adc
jae
jo
push
dec
pop
push
lcall
test
and
inc
loopne
popa
lea
xchg
jle
xor
cwtl
enter
rorl
dec
and
pop
mov
xchg
xor
iret
cltd
jl
jne
nop
jl
mov
or
inc
xchg
add
push
cwtl
scas
push
enter
push
insl
outsl
stc
inc
insb
aas
stc
mov
jp
aam
pop
mov
and
push
sub
mov
adc
repnz
rclb
hlt
or
lods
scas
test
mov
mov
sub
pop
mov
jp
adc
pop
inc
sub
icebp
fucom
jle
rolb
push
push
jl
inc
xchg
enter
xor
stc
jae
xchg
ret
fdivp
mov
push
sbb
or
jno
int3
or
mov
push
and
mov
jno
lahf
xchg
ljmp
adc
add
ficoms
pop
pcmpeqd
cmc
mov
bound
rol
adc
icebp
dec
loopne
mov
and
xchg
jb
imul
loop
xor
jle
lods
or
mov
push
mov
add
add
or
pushf
mov
cmp
mov
jmp
cltd
mov
cltd
or
jecxz
pop
fwait
push
fidivrs
jae
xchg
inc
lods
imul
aas
fcomps
push
inc
mov
sti
dec
sbb
aas
jg
in
push
mov
lock
inc
ss
cmp
outsb
push
xchg
push
cli
mov
xor
mov
shrb
stos
cmpsl
loop
push
mov
jne
and
in
xchg
pop
mov
xorl
and
stos
mov
or
xor
in
popa
xchg
and
xor
cltd
enter
cltd
xchg
popf
out
rcrb
push
aaa
cwtl
push
popa
add
imul
cmpsb
mov
fiaddl
les
mov
rcrl
xor
mov
es
repnz
push
pop
cwtl
sub
stos
mov
shlb
fiadds
stos
stc
imul
call
xchg
add
push
mov
imulb
cmc
or
jnp
inc
mov
dec
scas
loope
hlt
out
or
dec
push
push
push
dec
std
fisubl
and
lret
repnz
jo
scas
js
in
into
pop
cmpsb
sti
adc
sahf
and
out
fiaddl
cmp
int
pop
pushf
and
mov
pop
fstpt
out
rolb
xchg
mov
inc
adc
xlat
ljmp
inc
mov
or
jmp
test
aaa
and
mov
stos
xchg
imul
fnstcw
lods
js
jmp
out
sbb
mov
cmpb
sub
mov
mov
add
mov
add
fsubrl
mov
mov
into
gs
clc
fldl
add
sub
adc
mov
mov
adc
outsb
xchg
pop
aaa
orl
mov
popa
jp
cltd
cmc
pop
pop
mov
jp
xorl
add
mov
push
xchg
mov
das
add
rcrl
dec
scas
pop
scas
xchg
mov
rclb
scas
les
mov
in
fistl
add
dec
push
cmpsb
mov
and
sub
pushf
push
mov
stos
push
jno
into
shll
mov
mov
sti
add
adc
mov
test
push
shrb
stos
mov
cwtl
sahf
dec
fld
test
pop
dec
pushf
and
and
push
jae
jno
add
aad
or
dec
repz
mov
mov
jecxz
mov
jne
inc
push
cmp
scas
inc
or
push
cmp
adc
out
popf
dec
pop
inc
insl
inc
fdivr
inc
lret
xor
imul
adc
mov
mov
xchg
clc
mov
daa
push
fmull
sbb
jne
or
out
pusha
mov
aas
add
xchg
push
incb
adc
mov
stos
mov
cli
outsb
addr16
jecxz
push
jge
ljmp
sub
lret
std
loopne
icebp
or
stos
movsb
dec
adc
inc
dec
aam
mov
nop
test
je
and
cwtl
jne
out
in
aam
fnstenv
mov
jg
xchg
fsubrs
movsb
lods
fimull
jno
int3
pushf
fidivrs
sbb
sub
mov
push
bound
or
cmpsl
movl
push
cmp
push
xchg
jne
dec
loope
in
das
arpl
xor
scas
or
lret
mov
xor
sbb
cmp
jnp
es
cmpsb
dec
mov
and
testb
and
or
fdivl
jge
dec
inc
pop
pop
popf
cmp
push
cmp
jmp
test
popa
jne
cmp
cltd
fildl
testl
and
and
xchg
mov
arpl
bsf
or
std
pop
inc
scas
jge
cwtl
dec
dec
sub
xor
sub
rolb
push
or
push
aas
jecxz
xchg
lods
xchg
lret
mov
sbbl
dec
inc
rorb
sub
aas
cmp
adcl
fmull
je
cld
mov
sarl
mov
cmp
xchg
outsb
push
mov
jp
outsl
mov
mov
insb
rorb
bound
test
fnstcw
in
mov
andb
pop
cmp
in
inc
xchg
loopne
sbb
sub
hlt
dec
and
cmp
jl
mulb
xchg
xor
xor
test
xchg
pop
rclb
enter
imulb
rorb
pop
push
lret
or
mov
add
movsb
mov
mov
lahf
xor
or
jle
leave
push
ljmp
stc
imull
mov
xor
push
nop
inc
add
xor
push
lods
push
dec
sbb
mov
cld
xchg
lret
cli
enter
iret
fwait
add
sbb
push
lea
jo
and
std
lret
jl
movb
lahf
pop
ret
lret
rorl
cmp
mov
sbb
jnp
push
jp
xor
repnz
pushf
mov
dec
ret
rcl
rolb
cltd
lock
lods
mov
and
in
xchg
mov
adc
jnp
ret
movsb
add
cmpsl
or
pop
popa
dec
xchg
into
pop
pop
lcall
push
push
lods
sti
inc
pop
push
dec
xchg
movsb
sahf
ds
les
or
and
dec
mov
rcrl
jmp
clc
jmp
out
xor
mov
bound
out
xchg
xchg
test
cmpsl
push
mov
and
in
sbb
or
push
push
in
bound
xor
mov
sub
mov
push
pop
cmp
ss
stc
mov
cmpsl
std
leave
insl
sub
pop
xchg
and
xor
inc
jl
aas
mov
jb
push
aam
jmp
fldcw
xor
push
ds
orl
addr16
stos
add
ds
push
mov
nop
adc
out
sbb
lods
dec
mov
lock
jg
pop
sbb
arpl
dec
test
mov
adc
sbbb
sub
jae
out
dec
rcll
add
fcoms
lods
divl
iret
adc
jno
data16
or
test
mov
mov
bnd
gs
pusha
pop
repz
mov
and
adc
push
pop
adc
push
cmp
fiadds
jns
mov
cli
jns
stos
jg
add
sarb
sti
mov
mov
xor
xchg
pusha
lret
adc
or
mov
ret
pop
iret
ljmp
push
lret
push
loope
les
in
lret
int
outsl
clc
cwtl
mov
iret
sbb
sub
mov
rorl
inc
xchg
popa
push
pop
inc
les
rcr
cmpsb
mov
pop
cmpsl
into
into
movsl
scas
jmp
and
sbb
cmp
js
sti
outsl
iret
mov
sbb
es
lret
stos
mov
xchg
inc
cltd
pusha
loope
ljmp
fsubrs
cmp
inc
bnd
xor
imul
fadds
mov
in
lcall
stc
jle
fdivs
add
and
xor
dec
xchg
mov
jo
frndint
aad
xlat
mov
loop
push
cli
jmp
iret
adc
clc
mov
jle
jnp
or
je
fcmovne
mov
push
mov
mov
aaa
pop
stos
gs
push
fadd
push
xor
call
fsubr
outsl
xor
inc
lea
loope
aaa
jno
aas
int
cld
dec
jl
popa
lea
pop
ret
or
sbb
xor
sarb
test
insb
cmp
andl
pop
mov
pop
adc
adc
inc
lret
adc
add
shrl
jb
add
ret
into
dec
stos
jnp
mov
adc
sti
xor
incb
repz
inc
jne
cmp
leave
pop
push
jp
mov
or
dec
sahf
xor
scas
sbb
stos
and
std
lcall
ljmp
add
test
adc
scas
out
test
pop
pop
jns
jmp
jl
push
xchg
stc
pop
xor
subb
test
shl
mov
mov
mov
cmp
je
pop
adcl
push
divl
int3
dec
popa
dec
ja
js
mov
rclb
cmpsl
test
adc
inc
mov
in
sbb
les
xor
int
pop
loop
enter
cmpsl
push
xor
xor
loop
in
inc
dec
enter
inc
das
ret
sub
in
and
pop
jg
fwait
insb
jns
daa
adc
cmp
mov
lock
mov
pop
es
push
sarl
jnp
sub
inc
nop
shrl
repnz
jl
mov
xor
add
pop
inc
sbb
fnstenv
mov
sbb
xor
jmp
dec
in
fldcw
and
pop
mov
std
push
ja
test
sbb
shr
sarl
jnp
leave
mov
xor
dec
testl
in
xchg
ret
mov
or
je
in
dec
cmp
or
sub
adc
mov
and
insl
sbb
fdivrs
dec
sub
jo
push
sbb
push
or
or
lds
jmp
lahf
push
and
das
pop
cmp
push
lock
sub
push
ret
lea
push
shll
inc
adc
cmp
add
jno
inc
adc
inc
sahf
mov
ja
push
cmp
leave
mov
aam
outsb
push
repz
dec
mov
push
jl
mov
lods
enter
mov
push
jmp
xchg
test
inc
sar
xor
add
inc
or
xchg
cli
shrl
mov
push
jmp
push
dec
xor
push
pop
sahf
addr16
fcmovu
mov
lret
inc
aad
sahf
mov
jmp
mov
mov
or
icebp
cmp
pop
je
iret
cmp
icebp
iret
or
in
sub
sbb
cltd
addr16
dec
addr16
xchg
ja
cwtl
and
movsb
push
mov
roll
lahf
movsb
sub
out
and
addl
cmp
arpl
pushf
mov
adc
xor
adc
push
pop
fdiv
cmpsb
cmp
add
in
cmpsb
ret
jae
adc
leave
test
cwtl
or
iret
push
aas
cltd
mov
ss
pusha
dec
movsl
mov
jbe
xorl
call
inc
xor
push
fnstsw
cmc
sub
xchg
mov
lret
xor
test
jns
ret
push
xorb
addl
push
ljmp
std
jge
addr16
loopne
or
loopne
cmp
mul
loope
pop
sub
xchg
xor
push
cmp
dec
adc
add
push
sub
mov
xchg
xor
in
mov
dec
cld
mov
dec
popw
nop
dec
and
inc
lahf
push
jecxz
fs
push
add
sahf
ret
xchg
ds
cmpsl
pusha
dec
ret
xchg
lcall
jl
ret
aam
orb
add
pop
ds
mov
pop
pushl
loope
jl
add
daa
enter
jl
mov
add
adc
pusha
xchg
or
mov
and
frstor
ljmp
xorl
push
sub
push
popa
lahf
shlb
ja
or
aam
and
js
jo
es
pop
shll
sarl
ljmp
lahf
lods
cmp
xor
inc
shlb
jge
xchg
mov
mov
cmc
mov
fcmovu
xchg
sub
jbe
mov
sbb
in
fwait
push
clc
orl
mov
sti
ror
sti
cmc
loope
xor
mov
lcall
push
sbb
enter
ficoms
add
mov
mov
and
dec
out
sbb
into
xlat
ret
pop
fnsave
dec
push
cmpsl
and
push
mov
ret
cmp
in
bound
sub
cmpsb
lods
mov
ret
test
movsb
mov
mov
add
test
add
add
icebp
mov
dec
pop
faddp
mov
xchg
or
adc
add
les
dec
filds
xor
pop
cli
add
outsb
cmp
xor
je
jnp
insl
cld
das
pop
push
cmp
pop
nop
dec
loopne
insb
sub
inc
dec
xor
push
cmpsl
adc
movsl
jne
sti
dec
push
popa
sbb
sarb
cld
sbb
aad
fistpll
dec
lods
sbb
pop
or
int3
fiaddl
daa
and
xchg
popa
ds
in
jbe
or
aam
je
cltd
in
shlb
in
test
rcrl
cmp
lock
sbb
mov
enter
popa
das
in
xchg
pop
mov
jmp
cli
insb
lods
rorw
pop
xor
aam
sbb
dec
xor
rclb
stos
mov
or
jnp
shlb
dec
ljmp
pop
test
ret
shl
push
lods
mov
out
mov
in
aad
jle
push
cld
inc
aam
pop
imul
movsb
xchg
cltd
xor
and
xchg
pop
mov
lcall
xor
pop
lock
movsl
scas
push
xchg
sbb
adc
or
xor
es
xor
cs
in
mov
mov
int
faddl
dec
aas
loopne
lds
aam
jl
jnp
inc
add
mov
pop
iret
std
dec
smsw
push
shlb
mov
fcompl
imul
gs
and
push
rolb
xchg
add
icebp
pxor
cmpsl
sbb
add
test
enter
fldl
jbe
mov
icebp
dec
mov
sub
dec
dec
mov
push
loopne
scas
jo
add
test
loop
addr16
xor
mov
clc
scas
mov
mov
mov
jecxz
shlb
cmp
lahf
mov
jecxz
adc
mov
arpl
or
or
push
scas
xchg
lods
adc
fdivrs
or
repz
loopne
out
int
loope
cs
subl
into
and
inc
or
ja
adc
jns
aaa
sbb
repz
mov
jge
fldln2
push
or
adc
mov
out
sbb
push
mov
inc
stos
xchg
lock
jo
jge
into
pusha
mull
dec
hlt
mov
insb
lahf
and
pop
inc
add
xchg
arpl
sbb
sub
or
lret
test
loope
bound
ret
in
syscall
addr16
pop
rcll
sbb
sub
shrb
sub
mov
sub
ljmpw
decl
dec
out
in
loope
lock
adc
dec
jno
inc
out
push
push
sbb
add
xchg
push
xor
sbb
dec
add
aam
mov
pop
lea
jge
pop
hlt
pusha
in
jns
mov
adc
sub
inc
mov
cltd
pushf
pop
pop
sbb
insb
dec
dec
xchg
xor
out
xor
fstps
in
sti
adc
and
orl
nop
test
aaa
cli
out
gs
xor
sub
and
jne
pop
out
popa
imul
add
out
xchg
clc
dec
shlb
pop
ret
jne
inc
mov
popa
lods
pushf
add
imul
cltd
and
popf
mov
out
cmpsb
das
push
jbe
pop
rcll
mov
imul
ljmp
xor
vpackuswb
sbb
cmp
lcall
or
cli
cmp
int3
aas
repz
mov
or
mov
out
push
sbb
int3
imul
out
mov
jne,pn
in
and
push
sahf
push
and
sbb
pushf
lods
pop
in
add
outsb
add
insb
mov
mov
incl
adc
call
fisubs
mov
xchg
cmpsb
stc
out
test
push
mov
or
xchg
inc
adc
into
dec
or
fists
push
xchg
dec
xchg
stos
pop
dec
idivb
jns
aas
jae
ret
jp
dec
in
roll
jo
cmp
jge
daa
push
imul
xchg
sbb
bound
xchg
cli
out
out
jp
xchg
rol
mov
push
leave
fstpl
jp
mov
clc
ja
cmp
pop
fnstcw
iret
cmc
lds
mov
mov
sbb
cmpb
sti
test
cmpsb
push
push
in
movsb
aam
std
or
pusha
jecxz
dec
push
pop
lcall
push
mov
inc
mov
sub
sub
cmpsb
cmovae
sub
lret
adc
fwait
push
or
out
mov
and
stos
popa
insl
push
std
lret
jno
sub
gs
mov
add
mov
cwtl
dec
pop
inc
and
mov
cmpsb
test
jge
scas
xchg
xchg
cmp
outsb
mov
pop
lods
imul
test
cmp
xchg
andl
pop
stc
test
push
xchg
ret
mov
adc
dec
insb
adc
sub
imul
lds
and
adc
call
sub
aas
fisubrl
call
jge
dec
xor
jns
xchg
add
cmc
pop
aad
sbb
test
lret
sbb
adc
pop
pusha
out
sub
or
fs
inc
rol
repz
inc
pop
pop
sbb
scas
xchg
push
sub
divl
xchg
inc
xchg
pop
sbb
ja
push
mov
jmp
sub
cmpl
pop
aaa
fsubl
out
or
repz
and
dec
hlt
cs
mov
mov
ljmp
mov
fcoml
fnstenv
fidivs
cld
sbb
addr16
mov
out
sub
pop
mov
xchg
out
pop
add
mov
mov
mov
js
ja
popf
jl
and
js
hlt
and
mov
lock
loopne
ss
push
lock
cltd
es
xchg
aaa
jb
mov
aad
lahf
subb
push
addb
call
sbb
and
outsl
mull
iret
or
pusha
jecxz
sub
dec
negb
cmp
push
cltd
cltd
push
movsb
cli
fldcw
cmp
imul
push
iret
xor
sbb
icebp
adc
fisubs
test
sbb
rcrl
shrl
mov
push
pop
int
in
dec
sub
sub
adcl
scas
jecxz
gs
cmp
mov
mov
jno
inc
insb
sbb
add
pop
pop
mov
push
dec
dec
insb
ljmp
sahf
mov
int
xchg
stos
clc
fcom
subb
stos
inc
adc
adcl
scas
pop
push
mov
in
mov
popf
arpl
push
jecxz
or
insb
jnp
into
push
add
and
cld
lods
test
sti
lahf
cltd
xor
mov
leave
mov
lock
and
push
fwait
out
test
mov
stos
fstpl
add
or
lds
iret
jae
xor
push
test
insb
pushf
rol
xor
sub
loop
lcall
inc
js
shll
pop
hlt
loop
xor
dec
jnp
stc
lret
mov
fdivl
outsb
mov
test
flds
and
inc
or
pop
jecxz
fsubs
dec
call
mov
out
sub
lock
mov
cmpb
lret
push
fbld
in
xchg
cmp
into
sbb
arpl
mov
sub
jb
pushf
jecxz
fdivp
ret
push
lcall
mov
pop
cmpsb
in
fwait
insl
mov
push
in
or
fiaddl
inc
js
fists
insb
incb
mov
pop
loop
arpl
es
jbe
or
divb
ja
int
jmp
jg
xchg
dec
mov
test
movsl
adc
stc
in
fdiv
mov
fucomi
fstpl
out
out
adc
sub
jmp
lods
xor
xchg
xchg
sar
inc
push
in
adc
mov
xor
push
pop
in
jl
add
test
or
stos
xor
mov
dec
sub
add
or
pop
dec
mov
xchg
mov
and
jnp
daa
cmp
and
mov
pop
cmp
pop
cmc
fimull
mov
dec
sarl
push
push
sub
cmp
pusha
andb
xchg
je
loopne
dec
mov
jae
push
inc
lcall
ss
jno
push
push
lea
outsl
out
mov
sahf
push
fwait
cli
sbb
test
insb
dec
pop
mov
sbb
test
mov
xchg
out
daa
jle
or
popa
ret
inc
and
daa
pop
xor
or
stos
test
out
mov
dec
mov
sbb
shl
adc
sub
cmpsb
mov
and
arpl
sub
out
push
inc
jp
loope
mov
push
or
sub
xchg
adc
pop
int3
lret
mov
in
cld
enter
orl
cli
dec
imul
incl
xchg
jecxz
mov
sub
jns
fistl
sub
insl
jb
popf
mov
push
sti
adc
xor
out
gs
mov
lahf
out
sbb
mov
adc
fs
mov
shl
mov
mov
dec
lcall
sub
sbb
jo
xchg
push
shlb
pop
xorl
push
leave
adc
nop
lods
inc
sub
lea
add
xchg
test
loopne
sbb
in
je
sub
mov
dec
xor
mov
sti
int3
and
jb
cmpsl
adc
jb
out
aad
fchs
mov
mov
jmp
rol
sbb
push
int
das
dec
arpl
mov
ret
enter
xchg
xchg
mov
les
out
jl
cs
sti
jne
popf
pop
jg
jb
addr16
ret
jl
mov
jno
andb
xor
loopne
orl
iret
test
xchg
xor
rcr
sbb
movsb
cwtl
jne
movsb
and
lock
xchg
pop
fdivrl
sub
sti
push
gs
mov
mov
cmp
xor
ret
cmp
lods
dec
inc
jl
cltd
push
sub
pusha
les
scas
or
sbb
xor
mov
out
xor
cmp
jecxz
popf
daa
jns
adc
stc
mov
test
out
sub
aaa
inc
mov
mull
out
lret
mov
inc
fistpl
mov
sbb
js
or
xchg
xchg
xchg
lcall
arpl
jo
scas
test
lcall
dec
jmp
cltd
jle
fimuls
sti
std
or
lods
or
jp
ret
pop
inc
mov
clc
sbb
and
push
xchg
and
lods
out
jb
test
jns
stos
dec
add
scas
aam
push
in
test
or
pop
lods
cld
and
push
xchg
dec
popf
or
hlt
mov
push
sbbl
inc
sti
cld
mov
enter
in
jne
ret
jae
xor
and
rcll
xorb
sbb
xor
cwtl
aam
fldl
sbb
cli
ret
jl
out
iret
insl
sti
push
and
lea
xchg
cmp
jge
fiadds
and
add
mov
jmp
fdiv
mov
adc
xor
pusha
ds
sbb
aas
aas
sbb
setp
loope
bound
jno
xchg
daa
lods
xlat
xor
pop
mov
jl
ret
jns
or
stos
pop
ret
inc
pop
outsl
dec
pop
dec
mov
push
iret
or
loopne
inc
jge
or
xor
add
xor
push
jb
mov
daa
add
inc
xchg
rol
inc
push
cmpsl
jno
fdivrs
push
dec
data16
jb
loop
jnp
pop
loope
das
inc
dec
inc
icebp
adc
ljmp
and
mov
scas
sub
adc
adcb
sub
rcr
inc
inc
dec
sbb
jg
mov
lea
xchg
lret
lahf
pop
mov
das
push
std
sar
cmpsl
movsl
mov
pop
sub
mov
dec
aad
xchg
ret
fildll
mov
call
ja
cltd
dec
mov
shrb
aam
add
and
lods
adc
icebp
jb
stos
pushf
inc
jo
and
cmp
add
inc
sub
push
insl
xor
shlb
or
out
jnp
and
inc
inc
jp
cld
rcll
dec
jae
add
mov
inc
push
sbb
in
xor
shlb
sbb
inc
lock
dec
ret
testb
push
cmpsl
mov
pop
or
popf
lea
enter
inc
sbb
in
addr16
sbb
daa
shll
jl
inc
scas
insb
pop
ffree
and
movsl
cmp
mov
inc
xor
arpl
xor
cmp
dec
loope
andb
push
inc
aas
ret
stc
outsl
mov
mov
sub
jge
bnd
icebp
icebp
mov
add
lret
pusha
cmp
pop
dec
add
insl
inc
das
int3
xor
dec
ljmp
sub
fbstp
push
jg
push
add
fmuls
push
lock
inc
add
push
jl
or
mov
mov
xchg
pop
cmc
js
jl
cmp
dec
cmp
jne
xchg
mov
or
jae
cwtl
test
paddsw
repz
xor
stc
and
sub
arpl
xchg
add
insl
mov
rorb
xor
add
xor
push
idivl
sbb
sbbl
popa
jnp
mov
and
and
sbb
rolb
add
fs
popa
pop
add
push
rol
dec
and
dec
in
push
push
or
inc
adc
pop
cmp
fdivp
pop
dec
mov
push
pop
pop
into
aam
jge
jnp
repnz
out
sbb
sti
fwait
insl
and
fwait
mov
cmp
repnz
imul
test
jmp
inc
cmp
adc
out
popf
int3
or
sbb
int3
or
mov
dec
outsb
sub
add
ja
mov
adc
sub
cmp
mov
inc
aas
jg
out
int3
insb
call
bound
aam
call
adc
arpl
and
cs
cmc
mov
pop
xor
sbb
fildll
in
loope
jb
pop
mov
xchg
ss
pop
inc
mov
or
adc
cmp
pop
push
loope
push
and
adc
out
add
movsb
mov
dec
ja
cmc
hlt
cmp
inc
inc
mov
test
aas
cmp
sbb
adc
fcomps
clc
add
mov
jae
in
inc
xor
dec
mov
ret
mov
mov
stos
pop
sbb
adc
popl
xor
or
scas
adc
pop
jo
punpckhdq
push
xchg
mov
mov
jp
leave
cmpsl
xor
cwtl
xchg
jge
pop
mov
test
mov
or
clc
insl
dec
jp
dec
or
jnp
cltd
xor
sbb
fwait
push
dec
stc
cmpsl
jno
hlt
add
cld
jg
sbb
pop
shlb
and
stos
mov
sar
jge
lods
addb
jmp
inc
push
pop
and
call
les
aam
push
pinsrw
mov
in
fisttps
mov
push
push
sbb
shrb
push
int
pop
push
outsb
or
sub
out
xlat
sub
cltd
cmp
pop
adcb
sti
xchg
inc
mov
push
rcrl
cmpsb
and
or
pmuludq
jno
inc
push
lods
pop
or
gs
mov
xchg
movsl
push
int3
dec
or
pop
add
pushf
add
sbb
ds
pop
dec
inc
imul
xchg
or
aas
je
push
cmp
lcall
js
lds
pop
fadd
xchg
adc
mov
and
adc
cmpsb
bound
sahf
mov
mov
jge
mov
or
mov
xchg
dec
xchg
or
fisubs
andb
pop
movsb
xor
mov
les
add
testb
aas
ret
sahf
out
mov
xor
mov
sbb
mov
add
hlt
xchg
iret
fisubrs
dec
jns
sub
mov
fldl
sub
jle
mov
jae
sbb
leave
cwtl
xchg
hlt
dec
or
cltd
inc
movsb
cmp
pop
xlat
xchg
in
loop
sub
insl
add
aas
push
movsb
dec
pop
mov
sti
inc
in
mulb
lods
pushl
pop
xor
out
or
mov
pop
dec
sarb
call
fs
dec
pop
push
movsl
jge
popa
dec
lods
push
lret
jbe
adc
or
mov
dec
ret
je
sub
mov
add
mov
js
or
cwtl
sbb
inc
lea
add
stos
sahf
in
lds
fstps
inc
pop
inc
daa
jge
add
movaps
pop
sub
xchg
pop
dec
xchg
pop
mulb
cli
mov
cs
jmp
xchg
jmp
and
or
scas
pop
adc
xor
inc
fwait
shrb
pop
nop
and
inc
dec
mov
ss
push
dec
movsl
pushf
xor
and
rorb
scas
loop
sbb
lds
cmp
cmp
out
dec
add
pushf
cmp
push
les
xchg
mov
imul
mov
jecxz
mov
mov
rorl
subl
xchg
int3
dec
lcall
std
inc
fs
jg
mov
test
sbb
sbb
adc
jl
push
in
cmp
repz
xchg
mov
dec
mov
test
imul
mov
mov
mov
mov
push
arpl
jnp
mov
cmpsb
sahf
mov
adc
pop
cmpsl
pop
dec
push
pop
ret
mov
sbb
stos
fwait
add
jb
fsubs
test
into
push
loopne
xlat
or
les
cmp
repz
pusha
pop
in
imul
pop
cmp
adc
push
sarl
inc
cli
aad
shr
mov
les
in
sbb
fcmovb
mov
out
scas
or
scas
push
arpl
sub
or
xchg
jg
cwtl
sbb
xchg
std
stos
imul
add
ret
xlat
xchg
pop
loop
add
inc
aas
sub
and
loopne
fistpll
mov
mov
je
dec
or
cwtl
mov
das
stc
or
xor
push
leave
fldt
xchg
ss
cmpsl
addr16
jle
adc
dec
sub
insb
pusha
mov
fiaddl
mov
jge
arpl
pusha
insl
shll
movsl
lds
out
push
shl
lahf
out
pusha
aaa
aas
gs
jecxz
xor
out
xor
pushf
mov
mov
into
dec
test
push
mov
icebp
arpl
pusha
cld
aad
push
jp
cmp
inc
pop
lds
or
sub
mov
pop
vtestpd
lock
adcb
stos
subl
lret
xlat
jge
ja
cltd
int3
xor
in
imul
lcall
popa
out
int3
lods
inc
popf
roll
shrl
jnp
bound
mov
shrb
jl
push
dec
ficomps
and
es
ljmp
sti
pop
inc
inc
cmp
cmp
mov
fldt
push
and
roll
xchg
ljmp
insb
add
dec
adc
je
cmc
aam
ret
push
jae
sbb
cmp
cmp
repz
cld
add
add
int
test
sbbl
mov
adc
add
dec
outsb
jbe
arpl
push
ljmp
adc
cmp
pop
push
and
loopne
subb
imull
xor
popf
pop
not
and
subl
mov
test
sub
push
sub
xchg
lret
lret
pop
mov
pop
jg
aaa
xor
cmp
fs
test
xor
sub
movhlps
ret
xor
lds
or
bound
cwtl
mov
fdivl
jno
rorl
iret
xchg
xchg
jmp
scas
inc
aad
sbb
repz
add
and
movsl
stos
lahf
cld
and
pushf
and
adc
loopne
adc
cmp
les
pop
adc
inc
jb
fdivrs
inc
test
mov
mov
mov
ret
lcall
les
in
es
fiaddl
pop
jl
xchg
in
xor
rol
add
cmp
cmp
mov
xor
pop
loop
aam
or
and
xlat
push
cltd
xchg
add
jnp
xor
insb
mov
xor
push
lods
addr16
push
and
mov
xchg
mov
add
adc
add
xchg
sub
push
js
imul
mov
popl
mov
sbb
out
fdivrl
scas
mov
fadds
les
stc
outsb
pop
and
adc
lods
or
scas
inc
clc
mov
cli
sar
jae
push
pop
mov
mov
adc
mov
fidivrs
into
cli
push
cmp
divps
in
cld
stc
mov
mov
dec
jge
adc
push
push
cli
fs
dec
jecxz
jecxz
sbb
and
divl
ds
pop
mov
loope
bound
aaa
dec
mov
add
faddl
adc
je
pop
pop
imul
jge
das
mov
into
movsb
in
push
in
mov
mov
cwtl
mov
movsl
pop
xchg
add
aas
mov
and
in
minps
cli
rol
cmp
add
int
inc
gs
sub
aas
sub
enter
cwtl
shrb
leave
add
pop
lock
lock
in
daa
iret
iret
stc
jne
sti
stc
cmp
js
das
shll
or
push
out
je
pusha
xchg
mov
aaa
sub
leave
push
lret
das
sub
sbb
jno
mov
outsb
jne
add
cld
sub
out
jae
push
imul
mov
repz
xchg
adc
jg
dec
aas
and
sbb
cmp
jg
dec
xchg
outsb
xchg
aaa
mov
or
jge
dec
sbb
jb
cmp
ret
dec
jmp
bound
jle
popf
sub
or
mov
rolb
xchg
sbb
pandn
scas
pusha
xchg
ficoml
std
sti
popf
incl
jl
mov
push
cltd
inc
sub
pop
insb
mov
inc
cltd
jp
clc
cs
ret
jle
outsl
sbb
adc
xchg
stos
xchg
std
cmpl
pop
mov
addr16
js
dec
sbb
mov
and
sub
out
cmp
je
push
inc
or
sbb
adc
push
inc
push
push
les
xor
sbb
mov
test
sahf
add
cltd
mov
jns
mov
mov
pop
int
lock
mov
mov
stos
lds
or
xor
outsb
inc
push
jne
addb
ds
sbb
xchg
pop
sub
sarl
xor
push
lcall
xor
and
mov
clc
sbb
loop
jns
into
pop
mov
mov
arpl
and
ljmp
insl
loopne
sbb
pushf
jne
mov
add
or
or
mov
mov
dec
push
outsl
cmpsb
pop
popf
dec
sub
or
pop
jmp
dec
int
jnp
mov
ficoms
outsb
xor
adc
inc
jg
or
jp
jns
out
into
aaa
mov
fisubrl
sub
mov
testl
in
arpl
stc
test
sbb
push
fisttps
out
push
pop
das
ds
sahf
cmpxchg
outsb
xor
xchg
xchg
sub
sub
sub
nop
rsm
push
sbb
xor
daa
sti
je
pop
imul
xlat
lret
mov
pop
add
and
iret
jae
mov
and
cld
std
cli
or
dec
insb
mov
cmpsb
push
inc
call
xchg
shr
das
out
cmp
mov
mov
xchg
andb
popa
xlat
add
gs
pop
mov
jno
fisttpl
daa
mov
jae
jmp
mov
rcll
lret
loopne
lret
loop
jg
xor
sbb
sahf
jnp
call
rclb
cltd
push
ret
out
or
stc
sarl
sub
jecxz
cmpsb
jmp
add
lds
aas
push
xor
imul
sub
jnp
and
cmp
outsl
loop
std
and
sti
lahf
mov
dec
insb
cmp
int
jns
add
adc
cld
jae
scas
jno
add
jmp
inc
cmp
int3
add
push
jno
xorb
clc
push
in
lahf
frstor
gs
sub
add
bound
jge
inc
cmpsb
jmp
mov
imul
bound
dec
mov
inc
mov
ret
ror
sub
mov
daa
arpl
leave
xor
pusha
loop
out
ret
adcl
pop
add
adc
mov
push
adc
sbb
pop
mov
call
add
push
and
rcrl
pop
mov
adcb
mov
popa
push
loop
push
testb
sbb
js
cmpb
adc
or
stos
clc
inc
enter
lea
shlb
insb
jno
clc
jne
inc
lret
and
pop
cwtl
addb
jb
mov
pop
mov
subl
shl
aad
repz
or
cmc
and
shlb
sahf
es
mov
cs
push
cmp
or
insb
cmc
mov
dec
loopne
dec
mov
cmp
xor
sub
fisttpll
xchg
enter
and
cmp
stos
add
test
daa
and
push
cmp
cwtl
and
aad
jo
sbbb
aam
add
xchg
std
xchg
daa
js
mov
mov
pop
cld
jl
mov
add
sarb
aas
addr16
cltd
push
dec
scas
pop
mov
aad
push
mov
mov
iret
pop
mov
pop
push
ljmp
dec
js
pop
and
pop
stos
lret
mov
adc
sahf
inc
rep
adc
arpl
int
cmpsb
test
ret
arpl
aam
pop
imul
xchg
sub
push
sbb
dec
cmpsb
fcomps
xlat
mov
int3
cld
or
cmp
add
mov
jmp
ret
mov
or
jb
outsb
xchg
out
dec
dec
pop
push
jno
xor
into
scas
cld
fistpl
out
cmp
xchg
mov
pop
mov
test
ficompl
cs
fs
xchg
mov
outsl
ljmp
mov
add
add
pop
icebp
add
cmp
sbb
mov
or
popa
push
fisttpl
dec
faddl
int
or
cmpsb
mov
jnp
test
arpl
jge
sbb
sbb
repnz
js
xor
fisttps
add
inc
cmp
mov
push
loopne
pop
fnstsw
rcrl
and
dec
lock
add
call
ss
ss
jmp
and
mov
pushf
lret
cmp
fisubrs
testl
jle
dec
cmc
insb
int
push
fildll
and
add
and
out
int
fldl
pop
clc
jb
pop
push
daa
add
mov
jg
and
das
out
pusha
mov
xchg
pop
cwtl
or
lods
jecxz
jge
f2xm1
and
mov
xchg
add
cmpsl
mov
xorps
push
push
inc
jne
pop
test
stos
popf
mov
push
ja
mov
push
cmc
mov
scas
enter
xor
out
cmp
xchg
dec
push
push
mov
js
sbb
cmp
mov
pop
mov
fcomip
cmc
add
jb
shl
jg
inc
adc
jo
clc
mov
push
lret
adc
sub
cs
xor
adc
jge
pop
pushf
jecxz
mov
loopne
movsl
aas
adc
and
cmpsb
cltd
jne
stos
add
xchg
int3
and
mov
cmp
or
leave
lcall
std
subl
mov
sub
das
mov
or
jae
test
xchg
notb
and
xchg
mov
in
ret
gs
adc
mov
mov
dec
aam
cmp
dec
jbe
sbb
cmp
cmpsl
and
push
mov
push
xor
mov
lahf
push
push
pop
add
cli
in
and
repnz
decl
jbe
mov
sti
mov
inc
mov
stc
in
cmp
xor
shl
imul
mov
mov
and
sbb
or
pop
arpl
rclb
repz
add
mov
jge
scas
xor
imul
cmpl
or
and
iret
lret
mov
and
jle
daa
dec
sbb
insb
test
in
fidivl
pushf
mov
cmp
mov
insb
sub
les
add
mov
into
lods
cmp
in
lock
fsubrp
testb
xchg
call
inc
sub
inc
test
lret
sub
cmp
and
mov
jp
daa
lock
je
inc
out
dec
les
and
in
sbb
enter
rol
out
hlt
sti
mov
repz
cmp
notl
xchg
stos
push
fistpl
mov
call
inc
stos
dec
fimull
jmp
rcrb
test
push
push
mov
mov
mov
stc
mov
outsb
cmp
mov
xor
sub
or
mov
push
sub
sti
les
ss
mov
mov
add
popa
pop
mov
sti
mov
or
lds
in
mov
and
or
insb
xor
movsb
pop
jg
int
outsb
jl
cmpsl
lahf
loope
xor
leave
pop
add
lods
call
dec
fldt
mov
call
adc
sahf
ss
fadd
ja
mov
jne
les
pop
xlat
negl
or
mov
mov
pop
outsb
cmpb
shll
sub
decl
addb
cltd
add
push
loop
mov
xchg
call
ret
or
pop
sbb
fs
pop
sub
push
and
dec
push
mov
loop
movsl
test
cwtl
gs
cli
cmp
xor
jl
cmpl
inc
ljmp
loopne
fs
mov
cmc
cmp
insb
adc
outsl
mov
cwtl
jle
lods
addl
les
ficoml
push
sti
jle
inc
xor
int
push
or
movsb
mov
fucomp
dec
inc
dec
icebp
or
arpl
aas
fidivrs
push
xchg
lret
inc
adc
scas
or
sbb
xchg
jle
movsl
in
cmp
lret
inc
js
les
lea
cwtl
pop
test
cli
push
jp
loopne
iret
pop
pop
mov
test
outsl
jb
xor
repnz
subl
sub
repnz
ja
sahf
test
xchg
sub
sub
aas
gs
lock
in
mov
sbbl
push
adc
je
add
dec
mov
mov
pop
ja
bound
dec
es
add
inc
or
popf
fcmovu
jl
in
lds
sbbl
clc
jecxz
mov
push
daa
shll
cli
insb
lods
nop
push
jnp
or
push
mov
data16
loop
push
push
cmp
imul
popf
scas
dec
mov
rolb
pop
adc
push
inc
xor
adc
jb
push
aaa
ds
out
bound
gs
out
jmp
or
add
cmpsl
push
inc
or
pop
lea
jne
inc
lret
jecxz
sub
mov
inc
xor
insl
lock
jl
nop
dec
cmpsl
insl
sbb
lods
shll
or
sub
sub
mov
push
inc
shl
add
mov
in
dec
icebp
rcrb
test
shll
addb
aas
sub
popf
add
mov
out
mov
pop
nop
cmp
jle
add
mov
inc
nop
inc
mov
cli
jle
test
push
push
out
lock
mov
stos
inc
frstor
inc
es
mov
stos
jg
push
repz
in
mov
xor
pop
lods
xlat
movsb
ficompl
mov
mov
xchg
add
mov
xchg
cmpsb
jbe
dec
call
das
dec
je
cld
push
test
fidivs
mov
subb
push
mov
pushf
shll
mov
jns
xor
mov
lea
outsl
jno
jle
out
ss
or
adc
mov
arpl
sub
stc
fiadds
pop
sti
sub
push
jecxz
shl
adc
test
push
add
cmpsb
sbb
sbb
and
in
jp
fs
mov
into
xchg
hlt
pop
push
push
in
jns
dec
dec
shll
out
rol
fnstsw
cld
pushf
lret
dec
ret
ss
daa
ret
out
out
cmp
in
ss
outsb
add
mov
test
shrb
cmp
dec
pop
test
dec
xchg
pop
and
push
icebp
js
lahf
xor
popa
jmp
add
rcl
jnp
lods
pushf
dec
mov
ret
iret
movsb
sbb
xchg
cmp
fwait
add
out
jle
out
gs
lods
mov
imul
xchg
call
mov
xchg
xlat
je
xor
mov
jle
popf
scas
jmp
mov
inc
mov
xchg
pop
addr16
adc
adc
ret
jbe
dec
jnp
call
fs
aad
out
dec
ljmp
sahf
cmp
int
pop
push
ljmp
test
call
daa
push
dec
jle
push
call
nop
sub
or
and
jnp
push
pushf
iret
mov
jmp
xor
stos
popf
movl
xchg
sahf
in
push
jl
pop
mov
cmp
fsub
and
clc
push
mov
dec
adc
ret
leave
int3
mov
mov
decb
les
add
insl
repz
stos
sbb
dec
insl
pop
insl
sbb
add
or
movsl
shll
add
jmp
pop
stc
mov
dec
mov
aad
rcrl
add
ret
cwtl
outsb
cwtl
fsubrl
mov
gs
cmp
outsl
push
dec
and
je
inc
inc
insb
or
cmp
out
ja
fldl
xlat
test
push
sbb
loopne
std
push
insl
adc
inc
sub
popf
iret
xor
pop
ljmp
je
jno
mov
ja
les
jo
or
mov
push
cmp
ds
add
cmc
xorb
xor
int
leave
jne
xchg
fsub
test
pop
cmpsb
and
arpl
xchg
push
xor
cmp
sub
gs
cwtl
fldl
lcall
mov
mov
mov
clc
push
push
pop
dec
icebp
adc
xlat
jmp
add
daa
loope
loopne
pop
cmp
std
in
and
sub
into
inc
pop
cmpsb
fidivrl
push
lcall
repnz
sbb
nop
stos
pop
pop
imul
xorl
out
rol
sub
mov
loope
xchg
push
rclb
cwtl
jne
inc
test
inc
mov
gs
hlt
or
add
cmp
jnp
push
xchg
dec
pop
cmp
xchg
push
fwait
inc
xchg
sti
pusha
adc
and
add
in
popf
call
mov
arpl
cs
cmp
or
adc
scas
sahf
xchg
inc
pop
arpl
mov
enter
enter
lods
cltd
sarl
out
movups
jo
mov
aam
push
adcb
xlat
and
cli
mov
push
lods
xchg
mov
out
inc
lea
sbb
loope
int
lods
cmp
insl
addb
push
inc
mov
imul
fadds
add
scas
mov
xor
pop
enter
mov
div
mov
ss
mov
aad
push
xchg
notl
push
clc
mov
push
flds
and
or
imul
inc
inc
sub
rcrb
in
mov
popa
push
push
insb
scas
mov
lods
es
rcrl
xor
sbb
loope
sub
fdivl
in
ret
xchg
cmpsb
dec
xorl
inc
push
mov
mov
cmpsb
jge
andl
fucom
std
mov
sub
stc
xor
popf
mov
ds
push
cltd
pop
pop
out
out
mov
jb
xchg
jo
arpl
jecxz
push
and
lret
or
and
outsl
sbb
sbb
bound
and
cmpb
scas
and
leave
jae
mov
int3
mov
cli
mov
sbb
lea
sub
add
fildll
enter
xchg
fwait
decb
icebp
push
imulb
and
sbb
pop
ret
ljmp
rcll
fst
cmp
scas
sub
out
enter
jge
inc
mov
subl
xor
cmp
adcl
cltd
xor
adc
dec
xchg
cmp
add
dec
mov
mov
cmc
inc
sub
add
adc
roll
mov
push
dec
insl
xchg
aaa
rol
ret
sti
cmp
jne
out
dec
popa
xor
sub
out
cmp
addl
ret
xchg
dec
push
test
cmpsb
jp
inc
push
or
int3
dec
ljmp
ss
jb
les
into
movsl
test
mov
push
andb
ficoml
addl
xor
add
cmp
mov
pop
add
repz
or
add
and
xchg
cmp
insb
xchg
movsb
mov
dec
pop
xchg
clc
xchg
cltd
popf
inc
stos
adc
mov
inc
cltd
and
mull
imul
mov
int3
add
movsl
sbb
daa
es
mulb
or
fnstsw
or
mov
nop
movsb
hlt
arpl
ja
pusha
imul
sub
xchg
sub
aad
or
enter
or
iret
loope
icebp
adc
rolb
orl
fabs
in
pop
dec
sahf
cmp
insl
icebp
jge
push
mov
test
or
or
cltd
adc
inc
dec
push
fnstsw
pop
inc
push
dec
ret
addl
addl
mov
jnp
fcompl
fisubrl
lea
into
xchg
into
xchg
in
pop
cltd
or
insl
hlt
push
clc
inc
sbb
xchg
cwtl
callw
push
xchg
sbb
movl
mov
mov
push
pushf
fcoml
dec
inc
nop
lds
mov
jns
cmp
xlat
arpl
int
adc
xchg
scas
imul
sbb
mov
shll
fdivr
jne
andl
orl
mov
pop
jns
mov
in
or
xor
push
add
sbb
inc
movsl
jo
das
outsl
push
ds
mov
mov
pop
adc
push
mov
xor
hlt
rolb
in
test
xor
shlb
pop
xor
loopne
subl
test
roll
aam
iret
int
adc
adc
xor
jnp
push
pop
or
add
loopne
lea
or
arpl
dec
dec
scas
arpl
dec
xchg
push
xor
pop
pop
in
test
gs
cmpsl
fcmovnb
mov
icebp
cmpsl
push
or
and
add
popa
loope
jne
iret
loope
out
lcall
or
jbe
les
jo
sbb
push
jle
push
divb
adc
sti
repnz
xor
xchg
cltd
fldcw
sub
mov
imul
jl
and
ds
sub
add
or
repnz
rol
dec
and
sbb
sub
lret
lcall
clc
jae
push
dec
insb
jno
outsl
sub
stos
decb
cli
and
dec
and
repz
cltd
mov
imul
mov
sbb
mov
sti
enter
xchg
movsb
push
mov
into
or
out
and
xor
stos
inc
aad
insb
insl
mov
xor
pop
clc
push
mov
mov
mov
iret
mov
cmp
adc
insb
dec
mov
orl
cmp
mulb
dec
inc
popf
add
jg
test
aam
or
das
je
sub
and
push
cwtl
insb
test
sbb
sub
inc
int3
imul
stos
sub
inc
cmp
push
xchg
cmp
fwait
inc
adc
adc
repnz
push
int
out
mov
icebp
add
loope
mov
fs
jb
add
sub
cmpsl
jecxz
pop
adc
jnp
mov
cmp
ret
loopne
push
lods
add
rol
cwtl
enter
lds
mov
mov
fimull
pop
sub
sahf
xchg
or
sahf
icebp
pop
ljmp
mov
pop
jl
xor
dec
cli
lock
loop
stos
xchg
jno
lock
xchg
mov
scas
dec
mov
outsl
je
mov
ja
push
ja
xor
aaa
add
cmp
aaa
movsb
jle
lds
mov
mov
adc
push
scas
push
js
or
push
pop
dec
xchg
iret
test
add
mov
cs
mov
out
je
nop
out
mov
sub
add
sarl
fdivrs
dec
mov
adc
loope
sbb
scas
hlt
and
lea
out
and
push
aam
stc
jle
cmp
jmp
and
push
xor
push
pop
push
fdivl
lea
or
rorl
push
js
out
jl
shll
lret
rcrl
outsl
mov
or
add
and
ja
mov
aas
jns
stos
cmp
cmp
ss
pop
xchg
push
jb
and
ret
in
cmpsl
outsl
add
xor
cwtl
add
ljmp
movsb
push
mov
inc
and
enter
inc
es
lock
gs
loop
sbb
mov
xor
xchg
aam
mov
loope
mov
or
lret
inc
mov
cmpsb
and
ljmp
inc
add
xchg
xchg
pop
mov
push
out
sub
xchg
mov
ret
adc
notb
jge
addr16
mov
pop
mov
xor
sub
bswap
mov
sub
subb
repnz
sub
nop
aas
cltd
mov
pop
sub
pusha
js
daa
mov
scas
jbe
push
inc
hlt
dec
popf
clc
push
jne
jo
movsb
scas
sub
add
mov
mov
pop
push
mov
out
lahf
fiadds
fcmovnbe
lahf
pop
xchg
jb
test
jo
lods
push
push
shl
stos
jae
pop
sti
cli
push
jg
rcl
pop
aad
ret
or
pop
sbb
add
fwait
cmp
sbb
aad
inc
cs
and
cmp
or
pop
and
movb
loop
addr16
lods
add
pop
cmp
ja
push
je
mov
inc
mov
ss
dec
les
lret
leave
sbb
mov
ret
mov
push
add
ds
push
movsl
subb
pop
xor
fimull
ret
rcrb
push
insb
movsl
cmc
por
int
jl
lea
sbb
pop
jnp
mov
cld
testb
jbe
enter
cmc
dec
call
sbb
fmuls
lret
aas
inc
into
dec
add
jb
or
stos
xor
push
sahf
sbb
mov
sub
sub
insb
repz
cmpsb
das
sub
je
pop
pop
sbb
jnp
test
decl
fistpll
xchg
clc
pop
mov
dec
ror
mov
neg
test
dec
mov
xor
into
sub
pusha
push
inc
ficoms
rcr
nop
mov
lock
lock
aaa
das
and
hlt
stos
loope
sbb
cmc
out
mov
out
push
in
inc
adc
mov
mov
les
mov
mov
mov
rcll
inc
cmp
inc
pop
notl
gs
xchg
rorl
out
cmp
out
insb
jl
aas
or
call
test
pop
ficompl
movsb
mov
out
loop
mov
fwait
jbe
push
jg
lcall
rcll
cmp
lahf
repnz
js
out
cmp
subb
cmc
sbb
icebp
pop
and
lods
aas
scas
mov
adc
xor
pop
mov
ds
xchg
mov
sbb
popa
aad
pop
push
addr16
cmp
inc
dec
pop
jmp
mov
gs
xor
aam
pop
pop
sbb
and
scas
movsb
enter
jae
fdivs
dec
cltd
sbb
fisttps
ret
pop
add
xchg
sbb
jmp
int3
cmp
push
add
pop
pop
mov
sti
repz
adc
fdivrl
subb
or
adc
fisttpll
adc
xor
into
mov
fnsave
push
test
mov
outsl
sbb
ret
fs
jp
and
and
mov
xor
aam
push
jecxz
daa
jae
and
je
fwait
mov
daa
addr16
nop
push
ds
int3
gs
bound
or
movb
addr16
pushf
shrl
xchg
mov
sbb
insb
lods
loop
sub
imul
jecxz
repnz
adc
in
insl
or
in
cmp
xchg
lods
fwait
and
lods
cld
fsubrs
aas
outsb
dec
inc
lret
test
jg
insl
jbe
lret
out
inc
cmc
call
ss
mov
xchg
sbb
sbb
adc
sbbb
popf
decl
mov
test
inc
sbb
pop
cmp
je
outsl
lea
idiv
loop
lahf
jnp
lea
mov
jmp
stos
pop
pop
data16
mov
sub
insl
add
xchg
inc
fwait
out
sub
mov
or
dec
or
out
sbb
lret
sbbb
fsubr
mov
data16
fadds
mov
add
and
cs
sub
xor
pusha
inc
push
sti
pusha
orl
in
cmpsb
aam
fisttps
mov
flds
lret
push
inc
mov
or
push
push
lods
add
inc
nop
insl
ds
inc
arpl
popf
popa
fs
mov
mov
adc
add
shlb
sub
xchg
pop
inc
test
push
pop
pushf
pop
xchg
shll
hlt
push
mov
xchg
stos
jno
adc
cltd
scas
inc
sbb
fs
jmp
mov
fisubs
cs
xor
mov
leave
out
pop
or
mov
test
ffreep
sbb
mov
and
dec
aas
pusha
dec
das
shll
jae
or
imul
and
pop
mov
jbe
add
lcall
pop
xor
inc
gs
arpl
and
imulb
outsl
jg
lods
xor
pop
sub
enter
in
mov
push
stos
test
fnsave
push
xchg
pop
mov
jl
xchg
mov
mov
fstps
popa
dec
or
add
mov
adc
push
cmp
ret
clc
push
jb
fldt
or
mov
sbb
mov
jmp
popa
sub
jle
mov
push
inc
mov
xchg
adc
daa
mov
in
fwait
cwtl
inc
push
fsubl
scas
test
loop
add
mov
adcl
add
inc
inc
mov
js
mov
mov
pop
lods
adc
pop
push
xor
xor
cmp
repz
sahf
ret
adc
xor
daa
rcll
inc
push
in
add
call
mov
insb
or
xor
inc
js
movsb
mov
add
bound
and
and
inc
bound
leave
xchg
fisubrs
aaa
decl
jg
test
leave
and
shll
call
add
xchg
cmp
sub
stos
xchg
sub
sarb
pop
push
mov
addr16
jbe
lods
xchg
repz
pop
aaa
loop
cltd
mov
inc
adc
jl
jne
lods
mov
push
in
dec
dec
test
pop
xlat
cmpsb
pop
adc
popf
inc
in
pop
pop
mov
push
dec
outsl
xor
cltd
pop
mov
adc
pop
rcrl
aam
mov
ljmp
loope
mov
sbb
mov
jl
outsb
stos
mov
lret
out
cmpsl
call
mov
outsl
xchg
xchg
adc
push
lods
call
daa
shll
out
aas
cmp
sar
lcall
push
jmp
cmp
test
xor
inc
mov
mov
cwtl
cmp
clc
fcomp
lods
inc
mov
lahf
dec
mov
xor
test
mov
xlat
push
push
push
sub
mov
imul
test
jl
ret
test
mov
frstor
psubusb
add
gs
and
int
mov
lahf
sbb
lahf
add
push
outsb
mov
in
cmpsb
sbb
insb
ss
or
leave
ret
jns
sbb
cmp
sub
cld
add
sbb
mov
leave
aas
sbb
stc
ja
sahf
cli
mov
xor
int3
inc
jl
enter
stc
jecxz
cmpsl
inc
jns
inc
idivl
lret
nop
aaa
fnstcw
jne
imul
adc
in
sbb
sahf
jnp
inc
inc
popf
jno
movsl
aam
in
repz
push
je
hlt
xor
xorl
xor
push
rcr
lock
ss
xchg
mov
arpl
rcr
out
push
es
cli
mov
adc
ljmp
aad
pusha
dec
mov
movntps
dec
pop
or
lret
ret
pop
cld
push
divb
daa
adc
mov
jle
adc
mov
shrl
and
xor
outsb
dec
pop
mov
sti
or
add
test
and
sbb
mull
enter
push
mov
lods
ret
js
popf
popa
sbb
divl
adc
shl
arpl
stos
clc
pusha
mov
aam
xchg
xor
clc
mov
dec
fmull
jne
xlat
lds
outsl
imul
out
fwait
call
fstpl
imul
adc
loope
add
fistl
daa
nop
jecxz
jle
ret
ret
cmp
fisttpl
cmp
mov
outsb
push
aad
notb
aas
je
inc
xor
fwait
ret
scas
xchg
inc
je
nop
je
pop
push
or
and
fstl
dec
add
outsb
adc
inc
mov
sti
lret
js
into
cmp
ds
add
or
or
mov
orl
or
ds
insb
push
or
cmp
int3
mov
pop
cmc
push
faddl
out
adc
adc
cld
fisubl
cli
mov
pop
lods
mov
or
jge
stc
mov
adc
adcl
cld
ret
test
sbb
loope
je
cmpsb
in
les
or
jl
sub
dec
mov
std
pusha
lret
test
inc
dec
xor
dec
jecxz
xchg
dec
mov
cmpsl
pop
cmp
dec
pop
xor
shl
mov
mov
mov
lret
ss
daa
mov
gs
js
push
cmp
push
pop
bound
cltd
mov
shlb
add
jae
xor
fcmovb
enter
mov
lods
divl
cs
adc
shl
push
xchg
shl
cwtl
inc
shr
add
cwtl
int
sbbl
ss
push
mulb
stc
sub
jle
inc
es
xchg
adc
jl
mov
rclb
ret
or
jge
mov
imul
xlat
or
jp
fs
xchg
sbb
in
aas
add
cmp
and
stc
adc
cld
mov
aam
shl
xor
mov
add
cmc
adc
ljmp
xor
dec
cwtl
xor
daa
push
xchg
cmp
push
in
lods
in
and
out
rclb
in
movsl
faddp
jo
outsb
movsb
pushf
daa
or
aaa
lahf
push
dec
add
pop
enter
sub
leave
add
mov
ficomps
mov
imul
fcoms
fldenv
imul
cmp
inc
lret
icebp
jnp
pop
int3
jl
jbe
xor
and
jo
lret
imul
aad
dec
cmp
push
dec
or
leave
ret
push
clc
cmp
aas
adc
lcall
pusha
cli
dec
xchg
mov
sarl
je
sarb
pop
divb
mov
lret
push
imul
imul
gs
mov
mov
sub
add
add
pop
push
sub
mov
imul
jae
sbbb
sub
xor
or
push
mov
jg
in
sub
pop
and
mulb
lods
sbb
xlat
add
push
inc
cmp
pop
test
cmp
sti
push
jecxz
popf
cmp
aad
jo
in
adc
mov
jo
adc
loopne
push
into
shll
mov
test
lods
pop
das
rcrl
inc
jae
ret
testb
lods
mov
jbe
aas
add
lods
mov
sbb
adc
ljmp
mov
adc
pop
testl
sbb
cmc
icebp
push
aad
dec
xchg
add
stos
push
cli
loopne
or
and
sbb
sub
sbbb
out
pusha
or
dec
test
xor
xchg
inc
dec
jecxz
inc
mov
test
lret
ds
fwait
adc
and
jo
inc
mov
lods
or
cmp
push
les
sub
mov
cmpb
dec
dec
stos
imul
or
sbb
das
nop
ja
mov
and
fcmovu
dec
add
cmp
push
call
int
jecxz
or
dec
cmp
and
cmpsl
cmpl
sbb
xchg
test
dec
push
xor
in
xor
ficoms
bound
jl
mov
dec
xchg
jno
xor
icebp
sub
movsl
cwtl
xchg
cmp
ds
fcomps
add
sahf
lods
call
sub
mov
mov
push
sbb
repz
mov
pop
insl
jp
pop
dec
ss
stos
test
fdivrl
sti
mov
mov
dec
dec
xchg
les
nop
rolb
test
mov
bound
ds
mov
fdivp
lcall
inc
insl
imul
hlt
mov
lret
xchg
push
rcl
insl
adc
jae
data16
and
sbb
ret
call
and
sbb
dec
mov
movsb
les
inc
js
dec
adc
lods
pop
imul
ret
sahf
cmp
mov
inc
popl
adc
inc
sub
mov
mov
ljmp
jp
inc
dec
or
es
mov
mov
sbb
aad
xor
lock
sub
das
mov
mov
loope
sbb
ljmp
mov
dec
js
push
stos
popf
sub
cmc
outsl
add
push
add
inc
or
xchg
cs
mov
and
pop
mov
adc
push
testl
fadds
addl
xchg
xlat
sbb
add
pop
stos
in
mov
or
cmpsl
sub
xchg
push
push
cli
lret
xchg
outsl
fisttps
in
ss
mov
fidivl
pusha
dec
add
adcl
jb
inc
push
decl
jno
pop
jmp
xchg
in
cmp
dec
mov
or
movsb
fwait
xchg
and
lds
jecxz
mov
sub
xchg
inc
dec
mov
stos
lock
es
mov
in
into
nop
rep
jmp
je
popa
insb
mov
aaa
clc
inc
inc
stos
adc
and
pop
movsb
adc
xchg
scas
cwtl
xor
das
cltd
add
scas
and
iret
lret
dec
dec
gs
jae
jle
std
incb
movsb
icebp
rolb
lret
aaa
andb
ja
mov
outsw
jnp
jae
outsb
lahf
xchg
cmp
lcall
fisttpll
enter
xchg
mov
add
inc
icebp
fmul
xchg
out
mov
sbb
out
and
add
sbb
mov
js
push
imul
outsb
clc
fisubs
loop
ret
add
jmp
and
out
mov
mov
fs
dec
lcall
mov
cs
or
cmp
adc
jg
mov
aam
dec
jnp
inc
cmp
fisttpl
aaa
repnz
jae
jns
out
cmp
fs
ret
insb
dec
mov
cmc
cmpsb
mov
jmp
lea
xor
js
pop
in
pop
ja
std
lret
jb
shl
dec
xchg
mov
mov
sbb
push
fisubrs
call
mov
rclb
inc
insl
mov
imul
mov
sarl
push
fsubl
lods
xor
lds
pop
and
out
fsubr
sbb
ljmp
flds
xor
dec
jo
and
and
cmp
repnz
sti
push
fildl
hlt
ds
mov
push
xor
inc
js
dec
rcl
mov
std
cmpsl
cmp
ljmp
cs
dec
insb
pop
sbb
dec
xor
cmp
sbb
aas
mov
int3
data16
scas
lahf
scas
mov
jmp
imul
repz
ds
imul
ja
sbb
mov
sbb
dec
jb
pop
mov
rcrb
shl
mov
dec
in
es
repz
jmp
cld
pop
adc
shl
adc
dec
cmp
cmp
dec
incb
mov
movb
movsb
sub
sti
and
stos
cmp
std
cs
inc
add
loopne
adc
mov
out
or
push
jecxz
aad
mov
loope
xor
repz
inc
mov
xor
push
xchg
loop
or
test
inc
jmp
lea
dec
sbb
adc
jbe
jns
iret
sbb
jo
adc
leave
lahf
jnp
out
cmpsl
adc
popf
aas
insb
rdmsr
sbb
jb
test
fucomi
ret
jae
imul
outsb
test
mov
arpl
lret
inc
xlat
fxch
xorl
enter
loop
push
jecxz
adc
fimuls
cltd
cwtl
ret
sbb
mov
push
jl
punpckhwd
out
testl
mov
inc
sbb
aaa
jns
aad
lods
stos
jge
sbb
pop
fcoms
jge
adc
mov
lock
sbb
or
imul
mov
push
mov
mov
lcall
dec
mov
sti
add
ds
or
jle
and
aad
push
aam
inc
pop
sti
mov
or
popf
pushf
arpl
pop
mov
cmp
fisttpl
mov
test
sbb
shlb
push
sbb
int
push
xor
sti
out
cltd
cmp
xchg
out
sar
push
xchg
sahf
sbb
xor
mov
sub
rclb
stc
outsb
decb
int
pop
lcall
sbb
iret
test
div
mov
inc
mov
hlt
roll
pop
mov
pop
push
jmp
das
adc
stc
cmc
sbb
int
add
add
mov
aas
ja
ja
outsl
pop
add
add
mov
mov
sub
pop
and
jmp
pop
fdivl
loopne
pop
push
xlat
js
add
lods
out
cmp
mov
popf
sub
leave
scas
mov
not
pop
or
cmpsl
enter
cmp
or
adc
subl
loopne
test
mov
push
sub
leave
cmc
ret
mov
mov
jae
shrl
out
lock
loope
lds
adc
jno
aam
jge
push
sub
pusha
arpl
divl
int
mov
repz
fwait
cwtl
dec
cmpsl
lahf
ds
cmp
mov
inc
aas
or
inc
aam
pop
ficompl
or
lea
ja
loop
xchg
test
iret
test
pop
push
add
aad
dec
cmpsl
aam
adc
sti
or
add
sub
mov
roll
fwait
sub
daa
jmp
rcrb
adc
sub
dec
adc
imul
cli
mov
push
adc
xor
ds
aas
mov
mov
push
pop
mov
aad
ds
clc
sbb
lahf
adcl
cmc
orb
cmpsl
rclb
jmp
pop
jo
and
insb
and
daa
stc
xlat
pop
push
mov
xchg
xchg
mov
cwtl
cmp
roll
push
iret
rorb
inc
push
or
in
fisttpl
cmp
mov
icebp
jg
adc
mov
push
imul
cmp
ja
out
cmp
xchg
jae,pt
jmp
cmp
shr
je
jl
orb
sbb
scas
out
adc
xor
inc
add
scas
int3
loopne
push
lods
add
call
inc
xchg
sbb
mov
or
stos
jecxz
jae
stc
xchg
and
adc
jnp
mov
outsb
icebp
pop
scas
dec
pop
js
jg
mov
pop
lods
dec
pop
test
int
in
aam
xor
cmp
pop
leave
pop
andb
mov
gs
stos
pop
jge
ja
jp
xchg
ljmp
sbb
add
dec
jae
outsl
adc
push
out
shll
or
mov
mov
loop
mov
or
mov
movsl
xor
xlat
ficomps
rcrl
sahf
andl
les
cs
les
cmp
xchg
sub
jns
fstps
inc
stos
mov
fidivrs
int3
insl
mov
pop
imul
stos
pusha
mov
data16
je
xor
popf
mov
xor
push
test
jmp
add
loopne
test
push
or
outsl
scas
ljmp
data16
dec
jb
icebp
xlat
lds
fwait
or
mov
stos
jl
jmp
xchg
arpl
sbb
adc
daa
mov
clc
mov
xor
aas
add
push
ss
mov
mov
xchg
adc
jbe
jb
push
or
add
or
mov
enter
js
cmp
movsb
fisttpl
push
and
sbb
xchg
pop
insl
scas
cmpsb
outsb
sbb
inc
outsb
jae
push
inc
test
add
scas
lcall
fiadds
dec
mov
outsl
cmpsl
lods
ja
cmp
jno
rclb
jle
mov
lahf
mov
jo
pop
cltd
ljmp
fsubp
rcl
aad
mov
mulb
push
addr16
cmp
mov
ds
aam
les
push
rorb
push
xor
push
sti
stos
stos
rcrl
mov
xor
jno
dec
test
data16
mov
out
insb
dec
imul
fmulp
mov
pop
sbb
and
divb
imull
push
bound
test
movl
shrb
int3
lock
mov
ljmp
test
ja
push
mov
xchg
daa
ficompl
pop
and
shrb
out
stos
lahf
pop
scas
imul
jge
cmc
push
sti
sahf
push
adc
jge
mov
push
inc
push
dec
mov
inc
inc
pop
adc
push
bound
setge
mov
mov
mov
ja,pn
test
arpl
sbb
mov
std
movsb
lahf
push
lds
pop
aam
pop
and
mov
sti
movsb
jmp
ret
stos
shrl
div
xor
movsl
cs
cmp
jl
mov
iret
jecxz
cld
out
mov
fwait
sub
jge
adcl
rorl
fists
mov
faddp
dec
iret
cli
mov
pop
dec
push
enter
pop
mov
das
push
pop
pop
mov
cmpsl
add
sub
xchg
mov
mov
pop
loope
mov
mul
nop
xlat
jp
sub
icebp
mov
jge
sub
mov
sbb
add
push
pop
out
daa
cmp
xor
lret
push
mov
shrb
push
aas
data16
cmp
cmpsb
stos
fwait
dec
mov
aad
stos
or
into
loop
rcl
testl
mov
dec
pushf
xor
cmpsl
dec
in
push
outsl
std
pop
mov
ss
adc
or
mov
incl
sahf
jne
rolb
daa
dec
pop
mov
jbe
aaa
mov
ret
sbb
dec
in
cltd
movw
sub
stos
and
incl
lahf
stc
inc
loopne
push
mov
inc
cmp
or
and
cmp
in
adc
push
xchg
popf
lods
push
out
cmp
dec
scas
movsb
xchg
aad
xchg
mov
aad
ss
lahf
xor
mov
adc
inc
cmp
mov
add
cmc
jno
mov
jo
lods
xchg
cwtl
dec
push
mov
sbb
adc
mov
std
fs
mov
lods
loopne
loope
inc
pop
cmp
hlt
inc
mov
add
scas
sub
nop
mov
fwait
xchg
mov
cmp
mov
cmp
xor
and
xor
in
dec
inc
add
cwtl
sub
adc
push
jge
lret
inc
or
rcr
jle
cmp
dec
sub
xchg
lret
mov
or
dec
push
dec
je
leave
dec
aad
jp
in
jmp
push
fstl
mov
loop
fdivrl
cs
gs
add
cmp
add
pop
jbe
enter
mov
test
lods
jmp
jmp
int
sar
dec
xor
outsb
fadds
mov
xor
xchg
cmpsl
xorb
das
int3
jg
out
sbb
out
dec
ud1
mov
sbb
out
inc
jmp
mov
cmpsl
jp
push
test
fcomps
add
out
in
ret
cmp
lcall
sub
adc
mov
ss
mov
push
scas
dec
push
cmp
push
movsb
cmp
and
out
pop
mov
faddp
lock
sub
rcl
pop
stos
inc
out
mov
mov
pop
push
sub
stos
fnsave
mov
adc
pop
mov
pop
int
add
xlat
test
xchg
lret
mov
jns
xor
leave
inc
push
fcompl
repnz
add
pusha
shrl
push
pop
pop
mov
loop
sahf
and
push
adc
add
lds
js
mov
xchg
out
mov
repnz
inc
adc
mov
pop
jo
or
int3
enter
nop
sbb
cmp
fs
testb
mov
xor
fistpl
lret
fidivrl
mov
dec
xchg
xchg
in
out
sbb
xor
cmp
jno
jp
jmp
cmp
js
ficoml
insl
push
or
push
and
cmp
pop
mov
push
cwtl
fdivrl
scas
popa
and
sahf
sbb
xchg
dec
fidivrl
loop
xchg
shrb
sbb
cmova
cmp
ja
sbb
xchg
adc
push
scas
add
sub
les
stos
jl
push
xchg
push
in
adc
ljmp
xor
mov
cmp
mov
cwtl
fs
lret
fs
aas
jne
dec
cmc
ljmp
jmp
outsb
mov
jecxz
mov
cwtl
xchg
fistpll
gs
sarb
idiv
mov
loop
jecxz
das
andl
loopne
xor
icebp
push
and
sub
push
stos
add
lret
or
psubw
push
xchg
mov
fmul
inc
or
mov
test
xor
and
movsl
js
dec
loope
mov
pop
aas
movsb
pop
mov
lahf
inc
xorl
lcall
push
add
sub
arpl
ljmp
jl
pusha
mov
and
cmp
addr16
sahf
dec
cmp
add
jmp
push
sbbb
sub
int3
loop
sbb
fisubl
and
mov
in
mov
adc
mov
mov
mov
dec
add
mov
push
orl
dec
mov
mov
add
push
push
mov
mov
push
mov
jns
mov
add
push
mov
movzbl
add
mov
push
dec
inc
mov
add
mov
mov
mov
mov
mov
movzbl
inc
inc
mov
mov
clc
clc
mov
mov
clc
add
add
mov
mov
mov
mov
xorl
xorl
sldt
mov
mov
push
mov
mov
mov
mov
push
add
jno
add
clc
mov
mov
addl
mov
mov
addl
orl
add
mov
mov
mov
push
cmp
mov
inc
mov
inc
push
clc
mov
movzbl
mov
mov
mov
clc
push
add
push
add
mov
dec
mov
add
inc
add
mov
xorl
andnps
push
mov
mov
mov
add
clc
dec
cmovge
mov
mov
mov
push
mov
add
psubb
mov
clc
inc
dec
inc
add
orl
mov
mov
mov
inc
add
mov
addl
clc
clc
add
mov
clc
mov
inc
add
inc
inc
jnp
add
mov
cmovne
add
add
mov
mov
add
mov
push
mov
mov
mov
add
add
xorl
mov
add
psubb
mov
push
mov
clc
clc
add
mov
addl
mov
push
add
mov
mov
jns
andnps
mov
dec
mov
mov
andnps
mov
mov
add
clc
inc
add
mov
mov
sgdtl
add
addl
andnps
dec
inc
xorl
add
mov
add
xorl
dec
mov
clc
mov
mov
sidtl
mov
mov
clc
mov
mov
mov
mov
mov
mov
inc
dec
mov
mov
andnps
addl
mov
inc
dec
mov
mov
clc
add
mov
add
clc
orl
push
clc
mov
push
mov
mov
mov
mov
orl
mov
orl
mov
add
clc
add
mov
mov
mov
add
push
mov
mov
mov
add
inc
inc
dec
mov
dec
mov
mov
sgdtl
clc
andnps
mov
addl
clc
mov
mov
clc
push
clc
dec
mov
mov
mov
mov
add
jns
push
add
mov
orl
inc
mov
mov
inc
movzbl
jno
clc
addl
mov
mov
mov
dec
mov
mov
mov
clc
mov
mov
orl
dec
add
xorl
add
mov
mov
jns
sidtl
clc
mov
mov
clc
mov
sldt
mov
mov
mov
add
mov
mov
mov
clc
mov
mov
mov
cmovne
clc
mov
mov
clc
inc
mov
mov
add
push
mov
mov
mov
inc
mov
mov
add
mov
mov
clc
dec
mov
mov
inc
push
mov
mov
mov
add
mov
andnps
mov
mov
add
push
mov
mov
mov
mov
mov
mov
mov
inc
dec
mov
mov
mov
mov
push
clc
add
clc
mov
mov
clc
mov
add
orl
clc
inc
cmovge
inc
cmovge
mov
mov
inc
clc
add
addl
orl
cmp
add
orl
add
mov
mov
mov
movzwl
cmovge
jno
xorl
mov
mov
push
clc
mov
cmp
add
inc
xorl
inc
mov
cmovne
cmovge
dec
add
add
jns
mov
clc
addl
inc
mov
add
mov
dec
jnp
mov
push
push
mov
mov
mov
addl
mov
cmovge
mov
dec
cmovge
push
addl
mov
push
push
add
inc
clc
mov
push
mov
mov
mov
add
mov
andnps
dec
push
psubb
mov
add
movzwl
mov
inc
orl
psubb
add
add
add
add
add
push
mov
psubb
movzwl
mov
push
mov
clc
mov
dec
mov
add
mov
mov
push
mov
mov
jno
push
mov
add
mov
mov
clc
add
mov
add
clc
mov
push
push
mov
mov
mov
mov
mov
mov
add
add
inc
mov
clc
inc
inc
mov
mov
add
inc
clc
mov
mov
mov
clc
addl
mov
add
clc
push
push
add
inc
clc
mov
inc
push
mov
mov
clc
add
mov
clc
dec
mov
dec
add
mov
push
mov
mov
mov
inc
dec
add
add
mov
mov
add
mov
mov
push
add
inc
clc
add
mov
mov
mov
inc
mov
clc
cmp
mov
mov
inc
add
orl
swapgs
inc
mov
dec
mov
jno
mov
addl
mov
inc
mov
mov
mov
inc
cmovge
mov
mov
mov
dec
clc
clc
mov
inc
mov
clc
clc
addl
orl
inc
add
mov
dec
mov
andnps
clc
clc
add
add
add
mov
jns
clc
mov
jnp
mov
mov
dec
mov
add
addl
inc
mov
inc
mov
dec
inc
cmovne
mov
mov
mov
mov
mov
add
push
push
dec
add
mov
mov
mov
mov
add
mov
dec
inc
movzwl
add
inc
add
mov
mov
mov
mov
inc
mov
mov
mov
push
inc
mov
mov
clc
add
push
mov
mov
push
mov
mov
push
inc
dec
jno
add
add
add
mov
xorl
add
add
mov
add
inc
clc
psubb
mov
mov
clc
mov
mov
mov
lgdtl
mov
mov
add
movzbl
lmsw
mov
mov
mov
inc
add
inc
mov
push
mov
cmovne
add
mov
add
jno
mov
mov
clc
mov
clc
cmovne
push
add
mov
mov
push
jbe
adc
out
inc
mov
mov
jno
mov
mov
fmuls
sub
popf
jl
call
jecxz
scas
dec
or
lret
sub
ds
mov
jbe
movsl
in
test
pop
addr16
jns
fwait
add
sbb
in
mov
push
sbb
xor
js
addr16
fisubrs
lods
push
cld
mov
sub
inc
popa
test
sub
pusha
adc
sub
loop
mov
jmp
pop
inc
ds
sub
ror
adc
mov
ret
pop
xor
enter
pop
enter
fnstenv
add
sbbl
xor
cmc
insl
andb
xlat
or
cmp
mov
js
imul
mov
jns
call
mov
jmp
lock
out
test
push
sbb
mov
insb
clc
mov
push
bswap
mov
ret
andb
pushf
jecxz
or
push
push
push
stc
shrb
mov
rcll
lret
and
pop
dec
cld
cwtl
pop
stc
cmpsb
sub
inc
sub
mov
adc
push
clc
leave
movsb
jge
jno
fidivl
dec
mov
jbe
ljmp
jmp
sub
push
jnp
sbb
inc
sub
mov
int3
inc
ficoml
pushf
jnp
push
aas
mov
repnz
sub
in
ss
mov
mov
mov
aam
js
stc
or
jae
test
out
ljmp
repnz
cmp
add
jo
out
push
xor
pop
nop
inc
xchg
call
aad
cmpsl
add
sub
loop
mov
dec
dec
jl
xchg
push
inc
sti
or
mov
pop
pop
push
xlat
scas
jnp
lods
mov
sbb
pop
iret
out
pop
sbb
mov
pop
push
pop
es
xchg
lret
push
xor
rcll
dec
push
jo
xchg
loopne
push
jns
cmc
lea
imul
enter
cmpsl
mov
cmp
mov
sub
mov
sbb
int3
push
mov
lret
adc
fildll
mov
inc
sbbl
and
ja
outsb
or
aad
pop
xchg
sbb
push
cld
repz
jns
pop
bound
mov
mov
pop
movsl
pop
out
ss
and
push
sbb
mov
arpl
xchg
mov
xor
in
dec
call
popf
mov
mov
push
mov
js
mov
andb
jae
clc
smsw
leave
loop
sub
push
push
or
push
pop
es
rcrb
sbbb
pop
cmpsl
lods
loopne
xlat
mov
dec
push
mov
ss
add
ret
in
add
dec
push
mov
imul
stc
sbb
push
mov
hlt
sarb
push
icebp
lods
adc
and
aas
sbb
and
mov
jae
ds
stos
lret
push
jnp
das
sar
xor
xor
inc
test
and
xchg
inc
xor
sti
jo
push
push
test
repnz
xchg
pop
sti
cmp
out
xchg
aas
shrl
cmp
and
push
and
jl
repz
or
mov
jmp
stos
push
jno
incb
jo
inc
mov
scas
ljmp
test
sbb
pop
and
pop
test
xchg
out
shrl
add
sub
das
cmpsb
cltd
outsb
mov
xor
xchg
loopne
outsb
mov
pop
push
popf
shll
int
xchg
jne
pusha
in
mov
lcall
or
enter
sbb
add
pop
mov
subb
mov
cmp
push
dec
pop
flds
fwait
sbb
mov
addr16
jno
add
test
sub
ficompl
iret
mov
push
addl
insl
jbe
jne
lods
mov
inc
arpl
jbe
and
sub
int
idiv
add
inc
call
loopne
mov
dec
jg
repnz
test
insb
mov
das
stos
inc
inc
movsb
adc
push
or
scas
es
shl
inc
adc
mov
lock
repnz
push
test
mov
jo
cld
or
loop
cmpsb
fcmovnb
cmp
fdivl
xchg
push
xor
in
std
sub
je
dec
mov
fs
enter
mov
mov
insl
dec
lret
pop
mov
xchg
push
mov
dec
idiv
mov
inc
inc
fldt
clc
fcomps
mov
cmp
fs
dec
rcl
mov
pusha
jg
pop
add
mov
js
mov
dec
add
ja
leave
dec
jp
js
int
xor
sbbb
and
ds
imul
cmp
outsl
or
test
push
mov
xchg
loopne
es
loope,pn
xor
insl
lods
push
out
pop
pop
add
jg
lods
lods
mov
inc
mov
pop
cld
in
dec
cmc
dec
sub
xchg
cmp
lds
jmp
cwtl
js
jmp
out
and
or
xchg
ljmp
and
shlb
add
mov
jb
xor
or
fistpl
imull
inc
cs
loop
shrb
jecxz
orb
sbb
int
push
jle
xchg
outsl
xchg
push
add
repz
or
jmp
out
clc
fdivl
mov
daa
mov
add
data16
adc
or
cmp
adc
shrl
and
sbb
jecxz
sub
imul
fcmovne
xchg
mov
pop
mov
lret
in
ss
repnz
cmpsb
add
xorl
jbe
and
push
dec
and
sbb
push
xor
loop
xchg
jns
sbb
adc
or
or
sub
sbb
orl
sbb
insl
fdivs
cmp
je
int
pop
xchg
pop
out
mov
hlt
cltd
sbb
je
jbe
xor
fisttpll
mov
sub
push
mov
push
mov
adc
sbb
mov
les
sbb
loope
ror
xchg
add
mov
xor
adc
popa
lds
mov
sbb
and
mov
mov
outsb
repnz
sub
mov
mov
cmp
mov
or
mov
enter
repnz
add
cmp
stos
mov
sub
add
xor
cmp
push
and
mov
dec
jns
xlat
push
jle
addr16
shrl
stos
fldenv
repnz
pop
dec
xchg
add
pop
push
scas
dec
adc
in
jns
lods
add
out
loope
scas
mov
mov
mov
jae
cwtl
push
rorl
add
call
xchg
insb
mov
loope
cmpsl
push
addl
adc
push
mov
mov
xor
lock
and
fcoms
cmp
ja
nop
dec
loope
sti
mov
stos
xor
adc
xorb
ja
pop
adcl
cli
fdivrl
xor
shll
fsubs
pop
outsl
int
rcr
sub
cmpsb
inc
mov
int3
cmpsb
xorl
daa
cmp
jmp
clc
or
cld
dec
jp
mov
xorl
cmp
push
inc
inc
lret
sbb
das
sbb
in
in
fcompl
jo
lahf
mov
ret
xorb
in
cmp
pop
and
pop
movsb
in
adc
into
jecxz
jns
xchg
push
inc
or
push
dec
loopne
push
loop
xor
jmp
inc
notl
pop
stos
sub
test
pushf
movsl
in
sbb
enter
jno,pn
mov
dec
stc
cmp
mov
mov
outsl
push
lock
pop
jno
stc
nop
stos
cld
lret
subl
or
scas
ret
int3
jecxz
xchg
xchg
sbb
mov
iret
jg
push
cmp
fwait
mov
pop
or
nop
addr16
leave
sub
test
inc
dec
push
xlat
loope
pop
mov
jp
stc
mov
in
fnstenv
jmp
inc
aad
test
nop
pop
jp
jne
iret
adc
adc
mov
jmp
cmc
add
negb
into
stos
push
and
test
or
push
out
mov
pop
loop
jno
xor
mov
dec
rcrl
fnstsw
sbb
imul
mov
inc
mov
dec
sub
stc
movsb
enter
loope
clc
dec
jle
stos
aaa
lcall
mov
or
das
inc
inc
or
adc
xchg
out
loope
mov
out
xchg
fbstp
dec
pushf
sbb
adc
int3
addr16
lock
sub
loopne
sarb
pop
sbb
dec
xchg
sbb
loop
mul
mov
adc
or
dec
push
sub
mov
aam
or
ja
xor
cmp
mov
xor
adc
iret
jle
mov
inc
fistpll
xchg
mov
or
push
into
jo
mov
xor
bound
mov
in
xor
jl
popa
or
jbe
jnp
pop
and
xchg
call
rcr
mov
std
lcall
sub
ja
mov
inc
jl
push
call
cmpsl
clc
mov
ljmp
push
sub
jns
push
dec
sub
neg
das
cmc
jnp
add
mov
mov
lret
aam
roll
rclb
or
and
mov
mov
inc
outsb
sbb
add
outsl
mov
push
xchg
fwait
xchg
in
pushf
ljmp
xchg
sbb
test
ret
push
mov
sbb
add
fldt
popf
sbb
enter
pushl
shlb
mov
dec
fldenv
rcrb
xor
mov
pop
inc
push
lahf
dec
cmp
lods
mov
jb
fsubl
xchg
and
cmpl
xchg
inc
push
mov
xor
jl
leave
or
sub
pop
dec
fdivrl
mov
xchg
popa
or
cmc
jl
push
test
shlb
mov
xchg
push
add
xchg
jge
dec
dec
pop
inc
jno
push
sbb
cmp
inc
fdiv
int
sub
jp
fs
xchg
gs
iret
daa
addr16
repz
sub
aad
sub
mov
ret
fdivrs
mov
mov
clc
mov
dec
leave
lahf
cmc
mov
out
es
adc
sub
push
lret
bound
xchg
xor
test
cmp
adc
mov
mov
mov
stos
push
push
out
sub
mov
fsubl
xor
int3
movl
sbb
sbb
or
xchg
sbb
xlat
add
mov
adc
push
shrb
pop
lret
daa
leave
mov
outsl
or
outsb
jmp
into
mov
or
push
lret
lods
xchg
js
js
jbe
ljmp
aas
jle
icebp
fnstsw
mov
clc
push
ret
lcall
xchg
adc
dec
lea
femms
stc
pop
xchg
dec
mov
cld
aad
in
sbb
in
je
cli
je
or
jl
scas
mov
cmp
pop
jle,pn
mov
inc
rolb
inc
dec
out
pop
sub
bound
and
sub
and
pop
jno
xor
ror
ja
and
xchg
lcall
jecxz
jecxz
and
inc
sbb
xlat
jns
pop
mov
stos
xchg
push
mov
mov
jg
ljmp
pop
pushf
rcll
add
cmpsl
xchg
mov
test
push
cmc
ret
jnp
cs
loopne
pop
into
das
into
outsl
jp
inc
inc
rolb
sahf
mov
inc
sarb
xchg
jmp
pop
jne,pt
lcall
test
paddsb
jne
push
cmp
insw
lock
cld
aad
rclb
or
cld
cmpsb
xor
fidivrl
add
fwait
or
les
fmuls
fimuls
pusha
xor
xchg
cmp
imul
sbb
sti
xor
push
xchg
bound
movsb
cld
push
jns
out
mov
frstor
add
cmp
pop
pop
popa
mov
test
dec
mov
or
sub
sub
jns
rcrl
andb
and
cli
pop
std
ret
je
mov
mov
addr16
xchg
test
sbbl
call
aad
add
roll
pop
out
jmp
lret
add
mov
lret
call
adc
test
mov
bound
xchg
jl
xlat
xchg
sub
scas
push
dec
je
lcall
nop
jge
xor
cmp
cmc
pop
outsl
insb
dec
imul
add
jle
out
push
inc
xchg
push
sarl
repz
decb
sub
sti
dec
sahf
daa
cmp
andb
popl
xor
xchg
data16
dec
lahf
shll
cmp
or
ja
xchg
stos
jno
jle
cmp
push
jecxz
out
outsb
cwtl
mov
or
arpl
sbb
mov
loope
movsbl
movb
loope
lahf
insl
push
in
dec
push
test
stc
pop
imul
xchg
and
das
sub
clc
out
sub
inc
add
mov
mov
jmp
push
cli
inc
mov
js
dec
sub
stos
mov
lcall
loop
pushl
push
lea
push
add
push
inc
sub
cwtl
inc
push
es
pop
out
jae
mov
int
pop
ss
cwtl
lock
inc
popf
sti
xlat
push
aad
test
insl
insb
pop
push
cmp
jp
pop
aad
mov
xchg
scas
test
ss
lret
adc
in
jmp
ljmp
dec
insl
inc
movsb
push
mov
xchg
test
xor
fidivs
inc
les
test
pop
inc
xchg
int3
test
sarl
scas
orb
cld
jo
or
out
je
int3
xor
mov
hlt
ret
jnp
xor
pop
addr16
cli
add
inc
xchg
add
mov
pop
mov
outsb
gs
and
and
push
scas
in
inc
inc
mov
dec
lods
aad
movsb
rol
inc
xor
and
jmp
outsl
sbb
subb
adc
rclb
jbe
lods
fisttpll
mov
inc
popa
mov
pop
or
cwtl
push
repz
mov
jl
in
push
movsl
sub
add
fucomi
sarb
jbe
icebp
jbe
xchg
movsb
inc
xor
xlat
xchg
sub
cmpsl
mov
std
push
das
enter
mov
jb
and
adc
push
stc
cmpsl
sub
jmp
push
shlb
out
frstor
shll
push
int
and
mov
xchg
add
jno
add
flds
in
dec
rclb
sub
dec
out
pop
scas
pop
enter
mov
xlat
mov
and
ret
enter
dec
lods
jb
mov
xor
std
adc
jl
push
or
add
nop
rcr
fcoms
int3
pop
xor
shlb
mov
cmpsb
shrl
lods
mov
cmp
rorl
ljmp
push
flds
pop
in
scas
fists
jle
gs
inc
mov
mov
lcall
pop
mov
cmpb
jl
into
aaa
jnp
and
or
loopne
sbbl
jge
popa
out
xchg
fsubs
jo
filds
pop
in
aas
cwtl
dec
push
pop
sub
fcmovnb
rorl
xchg
lret
repnz
push
push
aam
mov
adc
mov
inc
jno
adc
adc
inc
insb
xchg
andl
or
loopne
mov
in
enter
roll
dec
scas
fadd
pop
test
sahf
xor
jbe
pushf
fiaddl
lret
ret
xlat
mov
das
clc
ja
testb
inc
cmp
popf
push
dec
mov
vorps
lock
outsl
lods
cli
xchg
and
int3
sahf
sub
dec
dec
mov
roll
aas
mov
push
jne
dec
mov
cltd
addr16
repz
mov
mov
pop
insl
in
inc
imul
outsl
dec
pop
sarb
ror
repnz
loope
sbb
insb
push
adc
repnz
int3
sahf
mov
mov
adc
out
jb
loope
dec
ljmp
shlb
lcall
sbb
out
stc
pop
sub
add
or
movsb
xchg
push
cltd
sub
pop
sbb
subb
dec
adc
dec
in
mov
imul
mov
sti
imul
inc
jo
jb
cmpb
out
xlat
imul
xchg
jns
jns
aam
cmp
add
popl
xchg
dec
fstp
jbe
jnp
aas
push
ret
inc
popa
nop
shll
js
idiv
cmp
je
mov
popf
sbbl
add
cmpsl
cld
pop
mov
pop
add
dec
in
or
mov
popl
add
cmc
pushf
rcrl
fadds
xor
xchg
jmp
hlt
inc
cli
jl
mov
and
mov
sub
mov
fistps
jbe
sti
jmp
pop
push
fsubrl
mov
add
sti
or
push
inc
fwait
jg
outsl
stc
int
iret
mov
xchg
or
push
cmp
das
pop
insl
or
and
gs
pop
or
cmp
pop
lahf
and
dec
push
xchg
pop
push
je
sbb
ret
mov
dec
fidivrs
mov
repz
cmp
and
fwait
scas
mov
pop
jns
scas
enter
inc
pop
add
scas
and
xor
push
iret
inc
ret
aad
adc
in
jmp
xchg
xchg
mov
test
pop
adc
addr16
mov
scas
mov
or
sub
test
int
popf
rcrl
stos
pusha
cs
cld
adc
xchg
inc
call
xor
ss
fs
popl
xchg
push
dec
adc
pop
sti
xor
imul
dec
imul
inc
jb
mov
inc
mov
sub
hlt
jecxz
hlt
sub
or
sbb
pop
xchg
cmp
sbb
jmp
mov
sti
inc
movsb
out
sbb
xchg
aam
mov
inc
roll
call
loop
mov
xor
cmp
dec
jb
mov
sbbl
cmp
adc
adc
ffreep
jg
aam
cmp
push
xor
fiaddl
adc
sbb
test
popf
pushf
cmp
jp
mov
sub
lret
and
sbb
add
pop
leave
cmp
add
test
sbb
out
jcxz
mov
cmpsb
aad
mov
in
sti
aad
dec
sbbl
fwait
adc
inc
inc
cmp
sti
mov
cmpsl
lods
jge
pop
dec
xchg
shlb
clc
add
mov
add
dec
jno
inc
mov
inc
add
mov
orl
mov
orl
mov
mov
mov
dec
mov
inc
add
dec
mov
clc
mov
inc
add
addl
mov
mov
push
mov
inc
add
mov
push
sgdtl
mov
mov
clc
add
add
clc
addl
mov
movzbl
dec
push
push
mov
mov
mov
dec
inc
dec
mov
add
add
mov
mov
andnps
dec
add
movzbl
jnp
movzbl
addl
inc
mov
add
inc
mov
push
dec
mov
inc
push
mov
mov
add
movzbl
add
movzbl
add
clc
clc
mov
addl
add
mov
push
mov
add
mov
mov
push
addl
inc
mov
cmovge
add
addl
add
mov
mov
clc
inc
mov
orl
mov
dec
push
clc
mov
mov
psubb
mov
push
add
inc
inc
mov
addl
push
inc
mov
inc
dec
add
mov
add
mov
mov
dec
andnps
mov
mov
add
inc
orl
add
dec
mov
add
add
inc
mov
jbe
rolb
pop
push
cli
out
mov
jae
mov
dec
xchg
and
dec
test
lock
ds
adc
cmc
gs
test
xchg
lea
dec
sbb
xchg
ljmp
mov
sbb
xchg
andb
cmp
dec
addl
stc
popl
dec
pop
push
mov
call
nop
rcl
insb
push
jo
repz
lea
xor
add
cwtl
xor
insl
pop
pcmpgtd
nop
mov
stos
pushf
push
ja
nop
inc
push
pop
stos
dec
mov
arpl
push
inc
mov
or
ds
dec
test
pop
sub
and
fisttps
pushf
xchg
repz
sub
pop
js
scas
adc
xchg
pop
add
xor
add
inc
dec
xchg
dec
push
out
ret
mov
jg
pop
push
push
fsubr
sub
xchg
int3
sub
cli
push
or
in
pop
scas
insl
aam
test
data16
push
xchg
sub
or
popa
std
rolb
xchg
icebp
lods
incl
sub
cli
in
push
scas
imul
push
nop
or
cmp
add
adc
testb
imul
fdivs
xor
cmp
xlat
sahf
push
xchg
inc
cmp
sbb
xor
mov
movsb
xchg
aaa
movsb
lock
xchg
mov
scas
in
iret
mov
cld
shrb
inc
mov
and
outsl
push
mov
xor
adc
sbb
andl
std
std
mov
jge
mov
cld
cmpsl
test
push
mov
fisubrl
insl
pop
push
pop
mov
inc
insb
lahf
push
fldcw
iret
fwait
and
pop
int
roll
pop
inc
xor
shll
aas
cmc
imul
jge
push
jb
ret
and
adc
loopne
mov
mov
popl
xor
mov
in
test
or
icebp
pop
cmc
pop
popf
loop
popf
pop
push
pop
imul
ret
mov
inc
sub
sub
mov
or
pop
xorb
inc
stc
out
imul
mov
sbb
fs
mov
je
sbb
insb
adc
push
pusha
mov
sbb
out
and
adc
iret
sbb
sub
aas
mov
icebp
daa
js
lret
popf
xorl
xchg
pop
mov
inc
push
mov
movsb
xor
push
cmp
jle
daa
lods
mov
rol
lahf
ret
pop
push
mov
movsb
inc
and
sti
xor
test
test
in
mov
cmp
es
mov
insb
imul
enter
cld
xor
xchg
cmp
xchg
cmp
stc
mov
pop
pop
loope
les
adc
mov
add
dec
add
sbb
addb
test
stos
mov
jge
push
cwtl
loope
xchg
sbb
sub
dec
dec
cwtl
gs
xchg
inc
xchg
andl
adc
fs
pusha
inc
mov
mov
rorl
out
fwait
addl
shll
sbb
outsl
mov
addl
jbe
cltd
inc
dec
enter
sub
push
push
and
mov
jne
pop
fwait
insl
in
or
mov
in
sub
movsb
jb
outsb
mov
rcll
cmp
jne
enter
popa
inc
jl
loop
repz
stc
std
xor
mov
dec
and
xchg
jmp
dec
movsl
pop
jae
jp
push
sbb
or
ret
push
xor
repz
cmp
mov
cmp
sbb
or
sti
sbb
push
xchg
mov
add
dec
jne
decb
cs
lds
jne
sub
mov
rep
scas
or
je
pop
test
lcall
and
mov
push
cmpsl
push
fidivrs
xchg
dec
data16
push
pop
mov
adc
mov
pop
inc
addr16
fsubrs
pop
addr16
decl
rolb
pop
outsl
jmp
adc
test
xor
and
shrl
mov
dec
cmpsb
out
movsl
lret
ljmp
sbb
inc
lds
lods
rcr
and
pop
inc
into
jne
jp
sbb
rcrl
popf
jge
pop
mov
jecxz
jbe
lcall
mov
lahf
int
jbe
rolb
bound
imul
je
in
dec
and
inc
vmovupd
dec
jle
outsl
inc
insb
lret
dec
das
fs
fucomip
xor
negb
out
lds
push
cld
pop
insb
ja
mov
inc
add
ficompl
inc
fcomps
outsb
or
xor
fsubs
clc
xchg
xchg
sbb
and
adc
mov
jbe
jge
ret
add
das
inc
es
or
aad
add
inc
push
out
push
cmc
add
sub
sbb
cmp
xchg
sbb
push
es
inc
mov
add
adc
push
pop
push
mov
push
or
jae
and
outsl
lcall
push
sti
mov
cld
loop
adc
xchg
sarl
cltd
sub
mov
jecxz
sbb
add
cmp
test
adc
std
rep
gs
cld
xor
add
fs
test
xchg
rcrl
push
jae
sahf
lret
dec
pop
lods
push
insl
cmp
adc
adc
cmp
push
push
leave
fistl
andb
lea
outsb
jp
jge
mov
out
bnd
fwait
pop
pop
pop
pop
adcb
arpl
cmpsl
pop
mov
icebp
cmp
mov
jle
push
xor
repnz
and
out
fwait
insl
rcll
idivb
scas
adc
pop
rcr
pushf
stc
jg
xchg
inc
jmp
cmp
dec
adc
mov
out
out
int
mov
daa
out
add
xlat
cmpl
fistpll
jo
jo
inc
loope
mov
pop
adc
xchg
loope
insb
jno
ja
addr16
mov
or
dec
cmpsb
addr16
in
push
repnz
pop
ret
hlt
pop
jno
js
cmp
ds
dec
mov
fwait
pop
cmp
ret
mov
push
cld
inc
cmp
xchg
mov
adc
xchg
jg
stos
sti
test
mov
cmp
in
and
push
jmp
pop
daa
sub
add
dec
cli
mov
and
add
mov
fwait
mov
pop
sub
xchg
adc
mov
cmp
jmp
pop
xchg
cmp
pop
adc
push
test
xor
aad
test
movsb
push
xchg
test
jp
lods
inc
incl
push
pop
jecxz
iret
push
fs
cmp
loopne
xchg
flds
cltd
and
xchg
inc
mov
insl
inc
test
fcmove
dec
sub
out
inc
xor
fidivrl
in
aam
add
je
sub
out
inc
bound
xor
sub
cwtl
or
xlat
or
adc
fstps
hlt
mov
xor
xchg
pop
sbb
ljmp
mov
fcoml
push
mov
fldl
lahf
rclb
push
addb
stos
ljmp
mov
jo
repnz
and
xchg
sub
sti
sub
les
xchg
push
cmp
mov
enter
push
xchg
sbb
inc
pop
aad
ret
lret
xchg
inc
mov
jl
pop
push
xlat
mov
loopne
or
jp
and
loope
cmp
lock
sti
cltd
inc
xchg
inc
outsb
mov
addr16
addr16
dec
aad
dec
xor
sub
mov
cld
push
leave
add
in
imul
fcomps
adc
jb
adc
push
pop
xor
repz
mov
lods
cld
iret
addr16
cmp
or
xchg
addl
dec
xchg
jecxz
add
insb
fincstp
bound
sub
imul
jle
xchg
jmp
mov
inc
repnz
pop
sbb
and
cli
jbe
cmp
stos
or
movsl
fadd
jno
dec
push
push
pop
mov
sahf
cmp
in
test
adc
sbb
repnz
ret
ret
adc
clc
mov
ljmp
icebp
mov
fcmovne
cli
xorl
sub
test
dec
xlat
sub
adc
and
fcmovne
mov
xchg
or
out
shlb
stos
stos
jbe
aad
and
add
or
xchg
stos
push
sub
adc
lds
mov
aas
aaa
pusha
push
xchg
roll
in
or
sbb
mov
push
jmp
adc
ror
jne
fwait
sub
je
sbb
push
and
sbb
and
sbb
cmpsl
scas
push
xor
sub
sbb
pop
lods
and
lds
add
or
inc
cmc
stc
and
mov
shlb
add
jg
and
or
out
jns
lods
adc
inc
jo
pcmpgtb
push
movsb
inc
adc
movzbl
inc
mov
das
std
xchg
out
add
mov
loop
popf
negb
lret
sbb
xor
sbb
lods
ret
xlat
or
fs
cmpsl
adc
lods
out
xchg
fildll
imul
je
inc
outsl
test
inc
insl
stos
jl
dec
adc
pusha
push
jge
or
add
jle
shll
imul
sub
sbb
test
sbb
fs
xchg
add
dec
cmp
xor
lock
cmp
sbb
cmpsb
mov
in
aas
adc
fst
sar
mov
outsl
cs
pop
pushf
sub
pop
xchg
test
adcb
test
shlb
jns
stc
into
in
out
idivb
mov
test
arpl
inc
pop
jmp
jne
in
push
insl
adc
add
xchg
das
xchg
repnz
cld
pop
pop
movsl
std
imul
mov
sbbb
mov
leave
xchg
movsb
cwtl
decb
imul
push
sbb
arpl
xor
jne
cmp
loop
dec
sub
xor
ficomps
inc
jmp
mov
fbstp
adc
mov
jl
dec
cmc
ja
popf
add
mov
jbe
mov
scas
leave
aad
fmulp
xor
fnstcw
lret
aam
ja
and
xchg
push
bound
lods
cmp
fidivl
repnz
lods
xchg
rol
xchg
mov
jmp
jns
and
fs
cmpsl
mov
call
mov
dec
dec
mov
loop
fs
imul
mov
loop
push
rorl
lcall
add
mov
mov
dec
xchg
lods
mov
mov
jmp
imul
inc
adc
pop
ljmp
jae
and
fwait
dec
cwtl
pop
stc
push
out
and
jns
xor
or
pop
jb
testl
mov
shlb
or
add
lret
xchg
fisttpll
sahf
jp
mov
mov
dec
sub
lret
ja
sub
sahf
imul
cmp
push
fsubl
int
outsb
fnstenv
out
fldt
stos
rcrb
repz
adc
sbb
inc
or
in
mov
and
cltd
pop
and
movsb
ret
das
enter
add
pusha
fistpl
jno
inc
mov
ja
mov
test
mov
fwait
push
notl
push
out
nop
mov
lds
outsb
cmp
repnz
dec
xor
add
in
sbb
rorl
push
dec
idiv
pop
stos
xchg
out
ret
into
inc
frstor
sahf
mov
pusha
add
mov
or
js
mov
ljmp
xor
lds
scas
and
jecxz
or
stos
xor
bound
out
aaa
arpl
jo
cmp
cmp
mov
ss
outsb
repz
sub
mov
push
push
push
test
shlb
pushf
bound
and
mov
mov
in
test
add
mov
jne
cwtl
shlb
mov
pusha
dec
scas
adc
xchg
xchg
dec
mov
xchg
lcall
data16
gs
or
inc
add
mov
adc
ret
inc
or
stos
sbb
and
stc
leave
outsb
outsb
mov
out
cs
add
sarb
outsl
xor
xor
xorl
jns
cld
add
push
fimull
pop
jo
rolb
into
push
xchg
outsl
or
mov
mov
inc
in
sti
aad
mov
add
cmpl
mov
cmpsb
daa
adc
ljmp
repz
das
test
call
adc
in
shl
addl
shlb
inc
push
stc
or
or
test
fnsave
xorl
movsb
lcall
jo
sub
test
mov
xor
pusha
cmc
and
out
xchg
or
ret
jne
jo
aam
pop
cltd
dec
in
in
xchg
lret
popf
sti
adc
mov
xchg
outsb
ret
in
aas
rolb
ljmp
arpl
pop
ret
dec
test
loop
inc
jle
inc
repz
dec
rol
xchg
cs
mov
ds
shrb
in
in
popf
inc
test
and
dec
adc
inc
dec
inc
mov
push
ror
push
adc
fcmovb
push
fistpll
cli
sti
into
lahf
loope
movaps
push
call
or
pop
mov
xchg
lock
outsl
push
adc
icebp
lret
ffree
and
inc
xlat
push
fs
xlat
aad
push
out
pop
scas
js
adc
or
push
nop
and
pop
inc
repz
sbb
xor
push
mov
xchg
pusha
pop
pusha
scas
xor
popf
add
sub
sbb
in
mov
inc
sbb
push
sahf
jge
sbb
les
stos
fwait
and
xor
cmp
xchg
pushl
xor
push
cmp
aad
pop
mov
fcomps
xchg
loop
movsb
stos
dec
xchg
dec
imul
dec
lods
pop
jns
lcall
push
mov
ret
and
sbb
push
call
add
fwait
ss
push
fstps
ret
mov
aam
mov
shrb
and
cwtl
mov
nop
outsb
mov
jp
std
pop
mov
jbe
mov
cwtl
fcmovnbe
mov
mov
or
sub
insl
mov
clc
sbb
fadds
or
imulb
pop
push
sahf
idivb
in
lods
inc
adc
xor
leave
pusha
std
or
xchg
rorl
lret
and
test
xchg
popa
loope
inc
ljmp
cmpsb
scas
or
adc
outsb
mov
cmc
push
loope
stos
sub
xchg
inc
push
or
push
lcall
test
inc
xchg
and
sub
test
adc
push
mov
xchg
add
dec
mov
mov
xchg
pop
sbb
xor
push
jmp
push
and
fcoml
cmpsb
dec
mov
push
add
mov
fucom
inc
sahf
fisubrl
out
xchg
in
cmp
lret
mov
pop
push
sti
sbb
aad
jp
popa
popa
scas
cwtl
mov
adcl
hlt
push
in
pushf
adc
or
push
fisubs
cmc
lds
roll
ja
pop
clc
divb
xchg
mov
js
xor
mov
mov
inc
add
icebp
test
pop
add
loop
jno
fwait
xchg
adc
leave
subl
cmp
xor
into
pop
add
jp
fucomi
mov
sbbb
out
test
sub
jmp
leave
cmp
lock
xchg
push
push
cmp
ljmp
shll
jl
cmp
push
lock
push
adc
adc
vmwrite
jb
sbb
mov
adc
out
cmpsb
jnp
stc
rcll
push
pop
fnstsw
lahf
jns
aaa
iret
push
xor
push
imul
scas
xchg
cmpsl
insl
fbstp
stos
in
mov
test
xchg
jne
repnz
fsubrs
push
inc
fcmovb
pop
mov
orb
sbb
lea
push
mov
mov
dec
and
pop
xor
pusha
inc
cmp
popa
jnp
mov
out
jg
and
dec
popf
in
dec
movsb
movsl
std
and
repnz
rcrl
sbb
mov
imul
push
or
inc
push
sub
scas
out
flds
inc
xor
adc
dec
add
jecxz
mov
lds
push
cmc
call
imul
out
dec
inc
add
sub
out
xchg
scas
rclb
sbb
dec
adc
into
jns
jns
mov
bound
and
mov
cmp
jle
cmp
xor
sbb
dec
loop
dec
mov
loope
loope
lea
sbb
cmpsb
iret
out
xor
xlat
pop
mov
jp
cmpl
xchg
loope
xor
lret
mov
jb
dec
fdivrp
push
or
loopne
enter
push
xlat
lods
roll
cmp
lcall
lods
pop
xchg
insl
dec
mov
jg
test
in
imul
daa
cmp
push
sysexit
mov
xor
jle
pop
outsb
dec
dec
movsb
xlat
inc
mov
outsl
and
arpl
xchg
rorl
mov
dec
adc
call
sahf
andnps
jbe
cmp
mov
xchg
int3
sbb
mov
or
stc
pop
aad
gs
push
push
push
mov
outsb
shlb
jle
ds
and
add
test
jle
jae
test
mov
scas
push
mov
cmp
lret
in
push
filds
sahf
dec
in
sub
xchg
push
stc
xchg
jmp
mov
inc
mov
fbld
inc
cld
push
mov
lret
insl
shll
or
sub
lods
push
mov
inc
pop
test
rorl
ds
ds
jns
jae
testb
imul
xchg
jmp
mov
fsubrs
test
jne
mov
mov
test
or
mov
mov
xor
jno
jb
pushf
jns
or
dec
imul
mov
lea
ss
data16
andb
or
or
mov
jno
add
popf
pop
and
int
sbb
rcr
cld
mov
sub
xchg
fadds
popa
inc
xchg
cs
inc
xchg
push
xor
and
sbb
or
pop
addr16
cmp
ror
sbb
xchg
js
call
mov
jne
cmc
mov
or
dec
in
push
push
jg
mov
adc
loope
fimuls
sbb
out
std
fimull
cmp
fisubrl
in
xlat
xor
insl
stc
int3
lods
sbb
push
pop
out
jge
call
int3
and
std
inc
xor
xchg
jb
pop
nop
inc
popf
shll
or
aaa
lret
cmp
les
jns
pop
mov
sar
sub
inc
inc
mov
in
scas
cs
cmpsl
clc
stc
sub
sub
mov
mov
adc
pop
in
cmpb
incl
xor
scas
hlt
test
shlb
test
mov
mov
add
jmp
pop
sarb
loope
cmpsl
lret
adc
mov
mov
sar
cmp
pop
aaa
lret
adc
loop
outsl
add
hlt
icebp
sbb
imul
add
adc
test
cwtl
std
inc
daa
orb
or
lret
out
sub
je
jnp
or
xchg
push
nop
xchg
nop
and
or
mov
or
mov
jmp
xor
jmp
jbe
mov
adc
mov
pop
mov
out
lret
sbb
fistpll
sbb
sub
cmp
add
aam
mov
gs
xor
pusha
or
pop
or
cmp
push
mov
mov
and
pop
mov
lcall
sarb
test
dec
jo
push
sub
mov
pop
adcl
dec
xor
push
arpl
dec
adc
cmp
adc
jp
idivb
pop
adc
xor
xor
push
push
insl
cltd
test
data16
js
jmp
mov
jo
adc
test
pop
lods
sub
aaa
xor
repz
jl
repnz
test
shll
pop
push
das
dec
jecxz
loopne
push
dec
inc
dec
cmp
les
pop
dec
lret
aam
cmpsb
imul
cmp
imul
in
fcomi
sahf
cli
fdiv
jnp
pop
xchg
push
aad
test
stos
sarl
cli
hlt
scas
outsb
filds
xchg
pop
pop
arpl
pusha
xchg
sbb
push
je
dec
out
jb
adc
sbb
push
or
pop
xchg
jg
pop
inc
sbb
loopne
push
sbbb
mov
fwait
sbb
mov
cmp
and
test
ja
movl
data16
sahf
adc
test
inc
daa
je
add
cmp
test
mov
mov
insl
jle
cmpl
or
push
mov
xchg
or
cmp
xor
cmp
push
loope
fcmove
pcmpeqd
mov
test
out
es
vhaddpd
adc
in
in
sub
and
and
dec
call
cmp
daa
outsl
enter
xlat
jne
and
xchg
mov
mov
xchg
std
lret
inc
xor
sub
out
jp
jnp
and
mov
fs
cmpsb
inc
add
jo
add
dec
lahf
pusha
lock
enter
out
into
inc
cmp
dec
outsb
ret
fildll
jae
imul
and
cwtl
inc
and
push
add
xchg
andb
mov
loope
push
jecxz
cmpsl
mov
ds
dec
pop
rolb
and
out
cmc
or
cmp
popf
std
loope
mov
push
adc
jbe,pn
push
popa
push
xchg
mov
loope
cmp
mov
rolb
stc
sti
cmpb
sbb
in
mov
jmp
mov
fbld
mov
xor
sbb
mov
add
xor
mov
pop
popa
repz
pop
jg
inc
mov
push
aaa
les
cmp
pop
push
adc
add
or
insl
pushf
cmc
js
scas
lcall
in
cmp
pop
fucomip
inc
cmp
cwtl
or
test
lret
mov
inc
cmp
clc
jae
push
subl
mov
shrl
mov
enter
test
mov
subb
ss
repz
in
mov
mov
push
dec
pop
lahf
lods
push
repnz
push
mov
push
jl
push
and
xchg
cmp
iret
inc
push
jns
mov
push
idiv
inc
cli
dec
pop
sbb
outsl
mov
popa
jp
mov
cmp
mov
add
or
adc
push
mov
mov
mov
sbb
jne
test
daa
in
leave
ljmp
enter
mov
pop
rcr
out
mov
mov
fwait
stc
in
push
adc
add
inc
inc
out
or
int
scas
out
sub
ficoms
push
fwait
jno
iret
adc
loope
sti
jge
and
leave
adc
ja
dec
in
or
adc
push
data16
mov
sub
into
push
mov
scas
repz
leave
or
sub
cltd
std
pusha
jp
inc
enter
leave
loope
cmp
fdivrs
out
pop
mov
pop
mov
pop
movsb
push
pop
fsubs
ja
mov
ds
arpl
jge
insb
jecxz
inc
adc
dec
jp
cmpsl
shrb
enter
jp
or
and
pop
xchg
pop
push
pusha
aad
jns
int3
push
aas
and
add
ret
cmp
mov
and
int3
push
lahf
mov
pop
imul
or
xor
add
xchg
lret
inc
outsb
lods
and
sti
call
js
lods
mov
xor
mov
push
sbb
mov
push
test
mov
mov
pusha
js
aaa
dec
iret
aas
or
out
repnz
idiv
sub
jmp
mov
xchg
test
xchg
lods
pop
mov
mov
jne
das
mov
mov
lods
dec
inc
ja
jecxz
or
dec
cltd
jae
jbe
add
and
cld
pop
adc
or
jne
stos
mov
adc
xchg
xchg
inc
ljmp
mov
adc
popa
xor
test
mov
lock
std
stos
sti
add
repnz
out
push
imul
clc
nop
add
test
loope
jne
mov
jge
pop
imul
cmp
imul
dec
ret
jmp
mov
sbb
sbb
movsl
cltd
xor
iret
cltd
lea
fildll
mov
aas
fstpt
dec
cli
jmp
pop
stos
data16
xor
fmul
stc
cs
ja
fs
xchg
add
sti
cs
sbb
roll
mov
add
cmpsl
cltd
xchg
je
pop
jb
cmpsb
xlat
fbstp
insl
push
sbb
cwtl
push
aad
cmpsl
add
lock
movsb
movsb
xchg
out
mov
pop
jg
sub
xor
xor
js
lahf
std
pop
rorb
xor
xchg
cwtl
cmpsb
sbb
pushl
xlat
ret
and
jns
rclb
add
mov
pop
call
shrl
jge
jg
jl
xchg
lock
xor
daa
xor
fisttpll
add
fmuls
inc
sbb
mov
jbe
adc
push
sub
mov
loop
mov
outsb
es
fcoms
mov
jb
xorb
dec
adc
mov
jl
mov
lds
jp
nop
sti
pusha
fcmovnb
lret
cmp
add
adc
arpl
lods
push
cmp
jle
xor
pop
movsb
sub
iret
mull
mov
icebp
test
mov
ret
pop
inc
push
mov
mov
scas
out
mov
cmp
lock
lods
xchg
rcrb
inc
out
pop
lret
add
jle
fwait
mov
xor
mov
bound
dec
pop
add
mov
pop
cmp
test
lods
xor
mov
stc
xchg
stos
sbb
or
out
sahf
jge
cltd
mov
jo
adcb
insb
ljmp
or
jno
shr
popf
jo
push
jb
jae
inc
int3
add
xchg
sub
js
sbb
mov
jae
push
aam
std
xor
jo
or
pop
ret
arpl
mov
int3
xchg
push
arpl
mov
add
out
scas
xor
or
mov
push
and
add
or
jecxz
fbld
pushf
mov
rcl
out
fsts
jle
pop
fstpl
in
out
inc
notb
dec
cmc
push
xchg
mov
mov
les
mov
jo
sbb
in
dec
or
sbbl
int3
push
xlat
icebp
jmp
pop
sti
sub
aad
pop
fbstp
lods
mov
out
push
mov
mov
dec
jle
lds
xchg
imul
loope
lea
ficoml
inc
adcl
adc
and
mov
push
mov
insb
ljmp
dec
mov
cli
xor
insl
adc
outsb
push
loopne
gs
rcrl
dec
cld
xchg
scas
fistl
pop
fmul
sbbb
movsb
push
add
mov
rorb
xchg
xor
mov
push
addr16
adc
xchg
addl
test
pushf
dec
xchg
outsl
adc
sarl
push
int3
or
jo
push
xchg
fcompl
sub
jnp
jns
out
stos
loope
aaa
or
insb
fistpll
movsl
cwtl
adc
je
sbbl
jecxz
xchg
add
xchg
or
jb
aad
xor
mov
mov
sub
pop
daa
inc
sti
mov
or
fdivp
cmp
xchg
push
push
sub
test
inc
jb
push
mov
mov
push
push
mov
cmp
lds
hlt
shlb
push
jnp
cmpsb
xlat
mov
stc
test
cmpsb
pop
test
mov
sti
add
jns
fdivrs
mov
sub
gs
call
stos
mov
scas
loopne
push
inc
inc
push
mov
cmp
pop
and
inc
jns
cmpsb
sub
dec
inc
mov
out
jg
stos
xchg
push
shlb
xchg
popa
cmp
stc
or
push
xor
je
push
xchg
mov
incl
hlt
fsubl
dec
pop
pop
call
lods
jb
add
inc
jne
scas
leave
push
and
into
pop
das
data16
popf
xchg
cwtl
call
mov
or
mov
aad
mov
xchg
lcall
jle
cmp
in
stos
cmp
xchg
and
out
xor
mov
xchg
sub
cmpsb
fcmove
ret
imul
jbe
ret
inc
pop
mov
and
mov
or
repz
adc
dec
push
dec
or
lahf
icebp
mov
dec
cmp
inc
pop
lcall
inc
xor
mov
dec
sbb
je
push
call
std
repnz
fnstenv
mov
jns
xlat
xchg
pusha
cmpsl
out
loopne
cli
rcll
push
test
or
popa
xor
into
js
iret
pushf
je
jp
call
push
pop
cmp
dec
sbb
fsubrl
push
and
outsl
jge
pop
cwtl
mov
lret
push
je
lahf
data16
dec
cmp
dec
mov
push
int
sub
pop
sbb
popf
cltd
mov
jnp
cmpsl
sub
mov
push
xor
std
and
or
stc
adc
inc
fld1
imul
jle
aas
out
aas
and
cmpl
or
push
pop
and
lods
inc
inc
jne
mov
rolb
or
sbb
aas
push
adc
mov
push
sahf
push
loopne
inc
aam
dec
add
pop
fidivl
and
mov
or
jno
xlat
pop
xchg
sbb
pop
je
pop
jne
mov
pop
mov
mov
hlt
incb
das
shrl
jge
or
mov
or
mov
jmp
cmpsl
cld
pop
push
movsl
mov
sub
dec
or
in
out
add
pop
hlt
mov
shl
jmp
mov
lds
inc
fcmovbe
mov
sub
cld
jae
inc
hlt
insb
pop
fdivrl
sub
mov
mov
mov
ja
dec
or
add
pusha
dec
cmp
cmp
es
adc
or
ljmp
dec
scas
xor
test
xchg
cwtl
jmp
ja
cmpl
adc
enter
cltd
jmp
clc
fwait
xchg
xchg
lods
into
std
mov
cli
fmuls
ds
jnp
pop
push
out
pop
xchg
outsb
pop
inc
mov
push
dec
lcall
push
dec
jl
pop
cli
mov
mov
in
dec
popa
shr
lahf
sub
jno
mov
aam
iret
xchg
leave
cmp
mov
aad
mov
int
lock
mov
xchg
addb
jmp
push
int
mov
xor
xor
sarb
jmp
rcr
stos
scas
xchg
orb
arpl
out
cmp
outsl
mov
cmp
or
ljmp
jb
jnp
adc
popf
ljmp
pop
jbe
or
imull
xchg
mov
xchg
fdivrs
jle
ss
or
sti
jbe
xchg
jbe
es
dec
xorb
cmpsl
mov
sbb
xorl
popa
push
cmp
push
xchg
imul
mov
jge
pop
pshufw
stos
sub
nop
jo
sub
lock
out
inc
cmp
fidivs
inc
dec
inc
adc
fsubl
aam
pushf
push
sbb
xor
jl
inc
popa
push
adc
sbb
fcoms
subl
xor
jbe
xor
es
fucom
icebp
out
repz
mov
mov
in
xor
cmpsb
and
fcoms
jns
aaa
fimull
cmp
jg
enter
mov
js
jp
lock
adc
dec
mov
les
pop
fildl
dec
out
ljmp
shll
insl
movsb
or
dec
xlat
mov
add
arpl
lds
in
jb
pop
push
mov
in
lock
jae
push
push
lcall
imull
addr16
lcall
rcll
dec
xchg
outsl
push
xchg
lret
jo
movsb
pop
or
push
stc
mov
sub
inc
fisubrs
xchg
das
adc
dec
cmpsl
mov
std
jbe
dec
aaa
adc
jecxz
cmp
inc
lods
adc
std
xchg
out
mov
cltd
sbbb
or
cmp
imul
addl
push
lahf
mov
in
push
scas
ds
xor
rep
sub
lods
repnz
outsl
adc
adc
out
call
adcl
add
insb
std
packsswb
adc
fistps
jg
in
pop
lods
lcall
sbb
insl
das
negl
fsts
push
mov
lods
andb
adc
inc
adc
daa
movsb
pop
xchg
icebp
jecxz
sarb
dec
jecxz
cli
pop
inc
test
cmpsl
in
jno
adc
insl
mov
loop
mov
ftst
sub
aas
or
mov
inc
mov
pop
jo
sbb
or
fcmove
pop
test
out
xor
jbe
ret
push
movsb
cltd
push
mov
jnp
pop
or
out
fisttps
aaa
inc
sbb
push
dec
je
cltd
inc
xchg
testl
sbb
repnz
sub
push
mov
xchg
icebp
push
mov
scas
push
dec
out
rcll
aad
xchg
add
adc
xor
mov
xchg
adc
stos
orl
push
movsb
mov
push
shr
out
and
mov
test
inc
das
and
scas
lcall
jl
adc
pop
mov
ja
mov
js
adc
add
mov
inc
jmp
jge
fistpl
and
fimull
outsb
daa
rolb
mov
into
mov
pushf
adc
xchg
imul
xor
shll
mov
insb
lods
lods
jge
inc
dec
dec
mov
das
test
imul
int
dec
aaa
mov
fcoms
mov
push
cmpsb
sbbl
test
pop
pop
loopne
in
dec
stos
in
cmp
xchg
add
dec
aad
test
sbb
pop
loop
neg
push
adc
mov
cmpsl
and
xchg
cmp
repnz
dec
repz
ret
int
adc
sbbl
xchg
in
sbb
mov
mov
mov
int3
mov
add
pop
lea
xchg
icebp
lods
dec
xor
test
in
sbb
and
sub
stos
or
jmp
adc
add
push
pop
popa
jae
adcl
add
test
je
cmc
push
jmp
sbb
push
lods
mov
pop
repz
adc
cmc
scas
pop
fistpl
sub
xchg
aam
mov
lea
scas
push
out
xor
sahf
ds
or
xchg
lahf
adc
test
xchg
push
repnz
inc
loop
lret
cmpsb
pop
push
inc
dec
mov
test
mov
movsb
inc
mov
xchg
fists
call
mov
repz
pop
out
sbb
xchg
jle
dec
cld
push
sbb
test
ror
std
jle
jns
stc
pop
dec
flds
mov
xchg
pop
mov
addr16
add
pop
mov
pop
pop
pop
orl
ror
pop
out
roll
mov
mov
push
sti
push
andl
jae
mov
jg
ljmp
adc
out
add
add
mov
idivb
jmp
cmp
inc
out
aad
ret
std
xchg
xchg
icebp
fildll
jnp
mov
adc
dec
or
out
add
out
adc
push
sub
in
jne
int
rol
inc
flds
mov
jecxz
jle
and
sahf
add
lods
or
mov
nop
int3
or
cli
lods
push
mov
dec
shll
jecxz
add
and
mov
and
loope
sub
hlt
or
add
jnp
sarb
pop
xor
lds
jp
fisttpl
xchg
push
add
lret
movsl
xchg
mov
adc
ror
xchg
push
loop
frstor
lods
mov
iret
movsl
add
xlat
push
stc
pop
pop
mov
and
fstpl
pop
mov
cmpsl
iret
mov
xchg
je
jnp
loope
insb
jo
xchg
lods
or
lods
jne
fldt
pop
outsl
inc
out
mov
mov
shll
into
xchg
cmpsl
mov
lea
lret
adc
sbb
ret
call
out
mov
fdivs
dec
outsb
test
pop
dec
mov
in
xor
pushf
and
adc
push
jg
jb
add
adc
cmc
adcb
shlb
loope
ss
xchg
and
mov
and
notl
aad
sbb
push
xor
popa
mov
shrl
dec
mov
mov
adc
mov
into
fistps
pop
push
jge
pop
jo
ror
adc
loope
cmp
sub
jo
aad
mov
scas
mov
mov
dec
out
jne
mov
or
mov
lds
aaa
push
or
push
push
dec
in
lcall
test
sbb
cmp
imul
and
dec
enter
fadd
adc
imul
adc
push
addl
adc
outsl
mov
pop
pop
xor
fcomps
insb
fwait
or
jae
icebp
xchg
adc
xlat
push
roll
lcall
jl
orl
outsb
rolb
ja
lods
mov
pop
and
rol
movsb
sub
in
and
jo
sbbb
mov
mov
rcll
push
cmp
in
dec
dec
xchg
inc
or
negl
js
cmp
cmc
sub
pop
call
imulb
sub
shlb
mov
test
or
xor
add
fsubr
lods
push
fcmovnbe
push
fcoms
or
cmpb
mov
mov
movsl
mov
popa
sub
mov
mov
and
cmp
inc
cmp
cmc
and
ret
scas
mov
sahf
int
outsb
and
jne
push
xlat
pop
pop
pop
jl
dec
pop
das
mov
or
cltd
push
ds
bound
xor
and
xor
insl
mov
in
xor
inc
mov
lock
stc
fnstsw
mov
mov
cld
sub
or
aad
idivb
fsubp
push
push
push
cmp
jp
shll
test
xlat
loop
push
push
mov
aam
or
sub
outsl
mov
xor
sbb
nop
add
call
lds
roll
xor
push
pop
and
sahf
imul
jne
jnp
sahf
loopne
xorb
pop
sub
fcmovnbe
movsb
cmpsl
jnp
arpl
lret
test
outsl
enter
ss
jl
outsl
je
and
subb
lds
jno
mov
daa
enter
ss
imul
pop
mov
pop
dec
jne
nop
leave
pop
mov
pushf
sti
or
cld
mov
aad
ss
lock
and
lods
xor
sbb
lods
in
lahf
leave
mov
xor
cmp
mov
dec
out
test
push
test
sub
sub
je
je
mov
xchg
mov
ss
in
jle
stc
inc
pop
pop
mov
aam
cltd
jns
pop
mov
cwtl
adc
fwait
ja
add
mov
jno
out
dec
pop
popa
lds
bnd
adcb
inc
in
dec
es
sub
sbb
dec
mov
xor
lock
imul
and
jg
xchg
sub
test
repnz
lcall
push
pop
cmp
outsl
loop
add
xorps
call
sahf
xchg
aas
pop
cmp
and
or
leave
dec
jbe
pop
jge
jns
rcl
fidivs
add
aas
jmp
cmpsl
movsb
in
rcr
mov
outsb
pop
mov
lret
subb
mov
arpl
push
ja
cmp
add
or
sbb
add
icebp
jne
xor
test
ljmp
cld
mov
push
mov
push
movsl
fisttpll
push
gs
mov
movsl
sahf
jecxz
test
and
and
mov
test
and
jmp
aam
xchg
outsb
leave
fmull
out
pop
ja
inc
int3
mov
inc
ss
inc
add
popa
loope
jecxz
adcl
sub
xchg
xlat
shll
add
dec
rorl
and
xchg
dec
ds
push
pusha
bound
or
mov
punpckhbw
daa
dec
add
les
xor
xor
adc
pop
mov
fisubrl
idivb
push
loope
popf
jl
mov
dec
js
push
icebp
sbb
xlat
sbb
rorl
pop
cs
je
or
or
dec
call
test
adc
cmpsb
dec
popa
pop
pop
pop
add
in
dec
stc
adc
mov
out
out
cs
sbb
adc
xor
inc
pusha
and
xchg
mov
fidivs
ja
test
cmpsb
repnz
cmpsb
les
cwtl
mov
xor
loopne
dec
or
inc
scas
lret
dec
stc
jb
adc
sub
addb
push
dec
andb
xor
movsb
rorb
xor
jae
fwait
mov
mov
xchg
ret
adc
jmp
cld
sbb
inc
icebp
jae
push
sbb
add
pushf
daa
mov
jl
push
outsb
enter
inc
mov
or
cmp
inc
xor
adc
fsubrl
shlb
add
vaddsd
mov
sub
cmp
and
sub
clc
aaa
cld
mov
in
inc
push
lock
testl
adc
stc
fistpl
cwtl
inc
cmp
lret
aaa
fs
push
into
roll
sbb
dec
jecxz
jl
pop
jp
int3
and
stos
adc
mov
insl
lock
sub
xchg
jl
jp
xchg
clc
xchg
bound
fwait
adc
mov
jmp
aas
mov
jbe
test
or
das
pop
xchg
sarb
cmp
mov
jp
or
cmp
add
sub
or
or
push
fisttps
mov
loope
mov
fstl
push
xchg
stos
enter
insl
fsub
test
fsubrl
xor
aas
into
sbb
inc
test
cmc
call
jecxz
push
jp
mov
add
dec
cmp
sub
and
in
fistpll
pushf
popf
add
stos
push
or
jo
and
insb
sbb
xor
js
xchg
ds
or
cmp
ljmp
rcrl
xchg
jmp
jle
mov
outsl
cmc
fldcw
cmpsb
push
in
ret
lea
test
adc
insl
sbb
push
fildll
push
dec
arpl
mov
push
mov
mov
imul
loope
add
das
pop
jae
sahf
or
mov
or
fstpt
movsl
push
out
add
scas
jle
jmp
cmp
js
or
sarb
fcmovu
and
mov
cltd
aad
divb
scas
sahf
mov
nop
adc
mov
aad
mov
jbe
in
cmpsb
and
push
lret
cmp
and
mov
orb
test
outsl
mov
jg
lcall
popf
fistpl
mov
pop
insb
ja
jmp
cmp
in
add
es
pop
je
imul
push
and
cmp
in
and
or
cmp
pop
sbb
and
mov
add
std
test
push
aas
push
sbb
lahf
xchg
inc
test
or
mov
in
aas
and
push
repz
xchg
push
or
fs
push
into
clc
ljmp
arpl
sarl
std
add
adc
mov
ret
test
add
cmpb
inc
sbb
dec
inc
xor
jbe
outsb
hlt
insl
lods
mov
aam
fdivrl
int3
xor
std
add
lock
hlt
jnp
add
out
or
imul
ficoms
mov
sub
das
clc
add
xor
std
push
ret
daa
pop
push
loope
mov
lcall
and
decl
in
jbe
dec
orl
pushf
into
in
dec
out
xchg
jl
mov
sbb
int
mov
push
and
int
xchg
js
sbb
fmuls
test
push
push
push
cmc
lock
jne
or
int3
outsl
or
nop
mov
fadd
aas
cmp
dec
sub
sbb
subl
add
sbb
mov
lahf
and
push
in
std
inc
andb
pop
sub
leave
in
mov
or
push
push
xchg
mov
xchg
pop
or
add
jg
and
subb
push
inc
xchg
xor
pop
filds
xchg
mov
xchg
lea
adc
jno
jle
sahf
jg
push
pop
into
xchg
adc
cli
pop
dec
pop
inc
aam
mov
stos
sub
push
push
mov
ss
pop
and
and
adc
sub
jno
mov
push
jge
pop
mov
fsubl
xor
add
push
push
lea
pop
or
dec
or
fimull
add
xchg
std
cltd
inc
add
lcall
int
pop
leave
and
repz
divl
sbb
mov
or
nop
insl
or
pushf
dec
push
std
in
aas
jl
ret
xor
data16
outsl
mov
sbb
add
xchg
int
jne
sub
outsl
xchg
gs
pop
fs
shrb
aam
cmp
dec
es
xchg
fimull
mov
jle
roll
sbb
and
clc
roll
je
adc
xor
xchg
aaa
cmp
in
test
sti
enter
stos
push
and
loopne
subb
outsl
aam
insl
int
int
jb
into
fcomip
pop
mov
shlb
push
push
enter
ljmp
mov
dec
mov
xchg
xchg
cmp
incb
fdivrp
add
cli
xchg
mov
push
mov
and
dec
push
movsl
jle
cmp
les
push
xchg
gs
inc
pop
xor
stc
pop
push
pop
fwait
ja
xor
push
data16
out
adc
jecxz
pop
ret
jle
xor
dec
cmc
mov
dec
cld
mov
rolb
add
jbe
mov
out
aam
imul
imul
inc
out
nop
cmp
shlb
mov
icebp
cld
mov
xor
mov
std
rolb
pop
orl
sbb
cmp
loope
adc
xor
stc
cs
dec
inc
jp
inc
sbb
dec
push
clc
cs
cmpsl
js
ja
loope
fnstcw
fdivs
jae
aad
mov
fidivrs
mov
sarb
jne
mov
enter
stos
xchg
lock
pushf
sub
rcr
in
movsb
movsl
adc
icebp
fstpl
sub
adc
leavew
pop
xchg
xchg
xor
into
adc
mov
das
je
jmp
mov
dec
jns
les
mov
mov
adc
cs
out
stos
jle
jo
jno
shrl
mov
fisubrs
pop
xchg
clc
mov
add
sbb
sbb
enter
and
and
cmc
shll
test
in
data16
insb
lret
pushf
xchg
aas
push
fdivr
nop
shll
lea
daa
filds
jmp
ja
push
out
pop
ficoml
imul
fcmovnbe
xchg
lods
lds
mov
adc
xchg
movsl
ror
push
clc
pop
cli
dec
push
sbbb
fisubl
out
rcrl
xchg
paddd
mov
pop
jns
lahf
and
xor
jns
xchg
fisubrs
xchg
into
imul
fdivr
movsb
jmp
mov
sbb
xchg
icebp
mov
rclb
divl
adc
dec
xlat
fnstenv
xchg
stc
ljmp
inc
mov
mov
inc
or
xchg
push
insl
outsl
pop
mov
mov
and
fwait
xor
cltd
mov
cwtl
inc
int
jne
je
mov
adc
mov
push
xchg
addr16
popf
cmp
and
lock
push
fs
jns
mov
cmp
lds
aaa
xchg
mov
mov
mov
repnz
sub
das
fbstp
push
dec
and
loope
xor
push
cld
xchg
pop
and
xchg
mov
or
adc
push
out
xchg
aas
mov
pop
subl
jge
sbb
shl
ja
imul
dec
imul
push
iret
mov
imul
xor
dec
je
jb
xchg
dec
cld
outsl
negb
insl
jp
cmpsb
inc
cmc
sub
and
dec
mov
and
pop
je
call
ret
cmp
popa
pop
cmc
in
jmp
and
lea
push
mov
inc
dec
test
lods
test
sub
aaa
push
xchg
iret
pop
bound
or
mov
dec
sub
cmp
aam
add
ja
add
mov
stc
or
pushf
push
test
sub
push
das
push
incl
outsl
adc
scas
mov
shrl
jmp
sbb
jl
pop
stc
clc
mov
repz
dec
clc
mov
cmp
daa
fildl
ja
add
es
and
push
xor
mov
pop
clc
sbb
in
jle
ljmp
add
lock
lea
addr16
lret
popa
or
lods
stc
clc
add
add
pushf
movsb
xor
in
mov
inc
imul
mov
andb
pop
arpl
sahf
pop
jge
test
sbb
push
sarl
je
mov
negl
push
adc
adc
mov
bound
or
test
fadd
mov
sub
in
vpgatherqd
mov
dec
testb
ljmp
int3
push
cmc
jbe
cltd
or
inc
push
pusha
adc
sub
insb
xchg
push
cmp
xchg
icebp
mov
and
imul
jle
cli
cmp
mov
sub
lock
shr
mov
push
mov
and
inc
jp
test
adc
ja
push
and
int
push
cmc
rcr
jle
sbb
lahf
jbe
test
arpl
xor
les
xchg
adc
cmp
pop
sbb
daa
or
pop
inc
sbb
xor
cld
inc
fwait
std
pop
xlat
pop
jecxz
mov
mov
push
and
mov
leave
inc
cmpb
jp
pop
or
mov
pusha
fistpll
insb
mov
ds
shll
lods
adc
xchg
xchg
ljmp
fsubr
add
dec
inc
aam
rolb
mov
loope
cwtl
push
lahf
lock
cltd
jnp
cmp
push
and
sbb
dec
fidivrl
xchg
jge
aam
cmp
add
xchg
popa
outsb
jns
cmp
or
insl
test
sarl
shrl
xlat
test
stos
mov
mov
cltd
dec
out
inc
pop
xor
lret
xchg
loopne
adc
aas
push
loope
inc
push
popf
cmpsl
ficompl
push
dec
mov
out
mov
and
xor
mov
push
repnz
aaa
das
jl
repz
stos
xchg
xchg
xor
or
lds
insb
nop
push
add
jmp
inc
lret
mov
pop
decb
mov
test
push
cmpsb
xchg
or
aam
aam
mov
data16
mov
shll
cltd
add
or
dec
pop
jp
or
xchg
in
inc
jge
jne
ja
xchg
push
and
test
lds
jge
popf
and
mov
pushl
sarb
dec
jae
adc
out
pop
push
pop
cmpsb
jns
frstor
push
pushf
out
push
movsl
pop
jecxz
jne
stos
mov
nop
out
xlat
mov
aam
pop
adc
les
jb
jne
andl
mov
xchg
enter
pushf
mov
std
icebp
add
movsl
lds
jle
jg
jecxz
mov
mov
out
aad
jl
ja
jns
ret
lods
lods
fistps
lods
ds
push
les
and
int3
stos
add
sub
jnp
mov
movsb
fsubrl
pop
lea
ja
mov
and
outsl
pop
popa
push
sub
cwtl
xlat
xchg
push
movsl
jnp
outsb
push
andb
fwait
adc
sbb
xor
negl
or
ret
fidivrs
cmpsb
lds
arpl
fildll
enter
aam
cmp
dec
add
lds
outsl
test
pop
jl
jmp
ljmp
loope
mov
arpl
sub
cmp
jle
adc
imul
out
dec
jge
lcall
iret
clc
aas
adc
icebp
sbb
imulb
sbb
inc
adc
cmp
lret
adc
mov
addr16
pop
ja
sub
mov
sub
insb
out
xchg
cmp
test
sub
and
lret
popa
in
rcrl
fsubl
and
xor
sbb
sub
and
cltd
mov
mov
iret
cltd
lea
pop
fs
dec
rcr
push
mov
imul
and
xchg
sbb
xchg
ss
stos
inc
lock
lods
cltd
inc
mov
push
js
mov
sbb
lcall
cmpsl
mov
sbb
push
mov
xor
sahf
int3
jle
ficomps
cmp
jg
popf
or
push
mov
das
loopne
es
daa
sbb
sahf
xor
mov
inc
and
out
and
ret
inc
mov
mov
repnz
xchg
mov
dec
jl
fmul
cmp
sbb
lret
mov
out
jge
xor
mov
mov
aas
dec
xchg
aaa
push
mov
xchg
into
arpl
test
cmp
push
cmp
push
in
leave
rolb
in
cmc
xchg
jg
mov
mov
lds
mov
add
cmc
lods
icebp
dec
testl
jle
cwtl
cmp
mov
push
sahf
jp
bsf
int
and
fwait
add
repz
pop
jl
xor
imul
adc
pop
and
lds
ljmp
sarb
test
cmp
lahf
adc
mov
or
or
add
popa
shrb
sub
mov
mov
scas
add
mov
out
jg
jle
mov
cmpsb
sbb
insl
jmp
mov
or
xchg
mov
xlat
or
or
push
sub
addb
iret
pop
mov
iret
mov
or
rorl
sysenter
pop
leave
lcall
pop
inc
mov
and
sahf
outsb
sub
pcmpgtd
add
and
adc
lds
adc
jno
lret
clc
les
mov
push
and
inc
fistl
cmpsl
popa
push
and
aaa
enter
pop
mov
daa
cmp
int3
fldenv
ss
sti
jb
dec
out
add
ja
sti
js
sbb
cmp
jns
fists
sub
fidivl
xor
fs
xchg
pop
push
rorl
jns
xor
movsb
repz
sub
xchg
prefetch
jns
add
push
dec
inc
cli
xor
adc
mov
lcall
pop
imull
cld
movsb
jae
loop
push
add
in
imull
add
les
enter
movsb
and
fbld
mov
jp
add
cmp
pop
loopne
push
xor
xchg
mov
dec
dec
xchg
add
lea
fmul
mov
adc
lock
into
sahf
lock
jle
xchg
xor
jmp
jle
pop
fs
insb
into
clc
mov
inc
adc
sahf
dec
mov
cmpsl
xor
fstps
sahf
sub
lods
insb
inc
outsb
ljmp
loope
push
cmc
enter
inc
pusha
sarl
testl
jne
addl
les
sbb
cwtl
into
andl
stc
dec
pop
mov
je
loop
cltd
repnz
popf
lods
por
cmp
popf
mov
xor
dec
dec
cmpsl
fsubrp
shrb
gs
mov
mov
rorb
in
iret
decb
pop
sub
dec
pop
fsubrl
std
sahf
adc
lock
lds
pushf
sub
sub
insl
je
dec
inc
pop
js
ss
inc
jg
cmp
addl
mov
cli
js
mov
mov
cmpsb
aaa
sbb
push
call
inc
push
add
mov
fadd
movsl
add
push
sbb
or
lcall
fdivrl
cmpsb
xor
jae
push
jmp
jg
int
outsl
and
pop
add
cmp
and
cmp
ss
sahf
mov
xchg
cmp
insb
aad
adc
orb
lds
push
pop
push
mov
and
loopne
and
shrl
ljmp
lea
movsb
cs
jg
cmp
jge
mov
loopne
pusha
or
bound
mov
mov
or
inc
jge
es
cwtl
aas
sbb
cmp
inc
cwtl
xchg
roll
mov
insb
jecxz
mov
sub
out
data16
or
mov
push
pop
push
rcrb
in
aaa
mov
mov
sub
cmp
jge
dec
adc
add
mov
inc
aad
shrl
je
and
pop
add
xchg
sbb
ret
cmp
and
lret
mov
sti
fcoms
enter
push
adc
sub
movsl
lret
or
inc
inc
pusha
xor
mov
jno
std
adc
inc
mov
cs
shr
data16
mov
or
add
aad
inc
dec
sbb
pop
test
sbb
jo
cmpsb
sti
adcb
es
stos
daa
xchg
and
int3
mov
pop
mov
sarb
addr16
jmp
scas
cmp
sub
push
jg
xlat
testb
fwait
pop
es
sbb
stos
cmp
nop
mov
xor
fnstenv
push
lret
jle
jbe
xchg
sub
mov
dec
loopne
xchg
cmc
inc
cmc
lcall
cli
lret
lret
adc
lods
push
rcll
adc
inc
adc
adc
push
xlat
scas
repz
mov
repnz
stc
inc
out
jae
cmc
sbb
jnp
sahf
pushf
xor
push
roll
fcmovne
lahf
adc
cltd
cltd
mov
je
push
daa
sbbb
out
mov
sarl
jo
cmp
test
lds
scas
push
dec
call
mov
fisubl
scas
outsl
fs
cltd
pop
xchg
push
leave
out
sbb
adcb
fldenv
in
dec
adc
test
mov
in
dec
or
inc
or
jmp
insb
mov
push
pop
dec
loopne
add
int3
sub
das
nop
mov
mov
popa
popa
jl
sbb
jp
sub
mov
mov
repnz
cwtl
push
pop
movsb
addr16
jl
fisttpll
pop
std
sub
sub
out
pop
jbe
cltd
cltd
push
jmp
lret
adc
outsl
lds
fdivrs
adc
cmp
cmp
ljmp
ljmp
xor
std
insb
cmp
push
or
and
jp
in
jmp
stc
push
cmpsl
or
cli
mov
fst
mov
cwtl
shrl
and
fdiv
pop
mov
in
stc
fs
ja
outsb
test
movsl
fcomps
and
mov
xlat
call
stc
subl
jns
mov
inc
data16
jecxz
pop
in
cmp
repz
dec
in
imul
arpl
das
popf
in
push
jnp
scas
je
adc
jp
mov
jg
push
and
repnz
in
push
scas
jg
push
addl
inc
inc
jecxz
mov
mov
cmpsl
dec
idivl
pop
out
rorb
inc
lds
scas
inc
ja
jg
aas
fistl
adc
adc
js
add
mov
mov
jb
sub
lods
inc
dec
in
push
mov
adc
mov
ja
mov
dec
adc
cmp
dec
dec
pop
jae
push
mov
roll
xchg
rcrl
aad
cltd
movsl
stos
out
and
cwtl
leave
push
inc
xor
int3
hlt
push
mov
push
jo
fdivr
pop
dec
cmp
mov
pop
and
clc
mov
mov
lods
test
loope
das
mov
cld
mov
stc
inc
dec
ja
stos
mov
imul
cmp
inc
aad
mov
stos
dec
xor
out
lret
leave
outsl
jae
add
pop
fdiv
jle
mov
sti
or
jns
hlt
pop
xchg
xor
pusha
dec
loopne
mov
xchg
adc
mov
or
mov
js
jbe
aam
mov
repz
ret
pop
dec
add
mov
es
push
pcmpeqd
pop
xor
cmpl
iret
repz
pop
ffree
pop
xchg
idiv
jecxz
cmp
lock
push
aaa
daa
sbb
pop
into
pop
shl
mov
pop
jno
cmp
sete
sub
aaa
test
cmp
mov
xor
jae
cmpsb
das
xchg
adc
mov
push
lcall
pop
jl
push
lahf
fwait
xor
test
xchg
test
loop
push
imul
mov
xchg
push
jbe
sbb
mov
inc
jmp
movsb
inc
inc
data16
and
repnz
arpl
mov
xchg
xorl
aad
inc
leave
ljmp
and
aam
ljmp
dec
sbb
mov
inc
add
xchg
fnstenv
cli
fidivrl
fidivrl
imul
test
inc
mov
js
mov
popf
jp
xchg
icebp
add
out
dec
stos
mov
add
addb
mov
xchg
xchg
sbb
jnp
pop
sti
or
hlt
scas
jle
loope
add
dec
push
addr16
add
dec
int3
ficoms
lar
inc
in
data16
and
mov
popf
push
or
cmp
adc
jp
popf
inc
shl
dec
mov
xchg
or
sbb
or
and
mov
cmp
push
mov
pusha
es
arpl
fstpt
mov
xchg
mov
scas
aas
mov
push
daa
push
sub
enter
adc
loop
and
or
push
push
jl
dec
lea
negb
xchg
or
not
incl
pop
pop
je
or
mov
cmc
in
pop
and
jae
jae
insb
adc
addr16
cmp
xor
out
jl
jg
fmuls
mov
mov
aad
mov
std
daa
push
add
mov
adcb
mov
sarl
arpl
ljmp
lret
fstps
xor
cmp
ss
mov
call
pop
out
icebp
mov
repnz
mov
mov
mov
push
jle
pop
cltd
sbb
fadds
mov
adc
or
fucomp
cmpb
pop
das
xor
icebp
cmc
aaa
push
rcll
idivb
mov
xor
xor
insb
nop
xchg
fcmovb
xor
and
push
xchg
mov
int3
lret
out
mov
iret
enter
mov
outsl
mov
orb
push
mov
mov
inc
push
fidivrl
enter
std
scas
adc
enter
push
call
cmpsb
push
cmp
aaa
incl
pop
popa
jbe
orb
aaa
dec
sahf
jg
xchg
jae
imull
int3
sti
outsb
lea
jle
addr16
out
pcmpgtb
jge
out
scas
ret
pushf
out
iret
ret
popf
stc
popa
in
imul
jmp
sub
xor
pushf
jne
fcmove
push
push
test
sub
stc
das
pop
jge
loop
sbb
loopne
pop
or
fcmovb
or
sub
imul
xchg
push
fsubrs
pop
or
or
addr16
int3
sbb
scas
fdivp
xchg
add
lahf
ret
pop
xchg
cs
test
mov
fs
push
push
enter
es
test
push
repnz
test
out
clc
les
lock
in
int3
das
cmp
loope
outsl
pop
repnz
xchg
mov
aad
popa
insb
add
aam
sbb
pop
test
movl
mov
jecxz
test
cli
test
xchg
scas
dec
in
cwtl
imul
jp
mov
push
xchg
sub
lahf
push
jns
mov
daa
sarl
out
sub
and
mov
pop
divb
into
cmp
sub
push
aas
aas
mov
mov
jle
mov
or
call
rcl
push
aaa
cmp
les
xor
dec
loop
dec
mov
adc
push
sbb
stos
or
sahf
test
mov
or
push
fildll
sti
fdivl
push
lock
cli
mov
lods
mov
into
sub
mov
aam
insl
aaa
shll
test
xchg
push
repz
sahf
xor
fwait
xlat
and
test
ret
sub
loop
add
add
add
dec
bound
mov
inc
mov
mov
adc
shr
xchg
or
sbb
xor
out
clc
inc
adc
insb
lods
pushf
stos
mov
sbb
mov
fidivrl
fsubl
push
adc
and
xchg
pop
je
xchg
arpl
pop
and
sbb
in
out
cmp
mov
pop
mov
mov
in
or
sbb
movsb
or
insl
mov
adc
and
ss
sbb
cmp
and
jbe
cmp
arpl
fwait
jbe
sbb
repnz
mov
sahf
lds
pop
testl
mov
xor
out
lret
test
mov
popa
shl
xchg
in
fisubrs
jns
mov
mov
mov
pop
out
or
jb
ja
inc
mov
adc
mov
mov
in
mov
shll
dec
fisubrl
das
fnstenv
xor
les
out
dec
mov
xor
sub
int3
push
lcall
jle
xchg
mov
and
shrb
jae
add
jp
das
aam
xchg
std
lock
sub
xor
inc
push
movsb
inc
insl
push
cmp
je
imul
daa
inc
leave
int
lahf
out
jp
and
or
push
pop
inc
mov
fs
push
mov
mov
cmp
pushf
lds
arpl
and
fstpt
sub
mov
les
inc
jp
sahf
pop
das
lods
inc
fst
loopne
jno
pushf
push
cmp
sub
sbb
or
test
xchg
dec
jl
clc
push
jge
ja
movsb
idivb
adc
dec
jnp
ja
mov
stos
inc
jnp
lcall
sbb
xor
les
mov
or
es
inc
mov
mov
aas
lock
sub
push
fstp
xchg
jo
jmp
xchg
cmp
cmc
nop
loope
cmp
mov
dec
dec
lock
aas
ds
popf
imul
pop
gs
stos
jmp
fstpt
sbb
xchg
push
inc
outsl
cmp
fistps
xlat
int3
cmp
adc
loop
sahf
mov
mov
aam
mov
cwtl
loopne
lea
mov
inc
and
adc
mov
jg
mov
jl
test
add
shrb
test
mov
xlat
repnz
inc
jl
and
std
jae
pushl
orl
adc
loopne
outsl
cli
inc
ficoml
insb
push
jae
jo
fldl
jp
sti
or
std
dec
mov
into
add
mov
fidivrs
jno
pop
add
cmp
mov
cs
scas
pop
add
loop
inc
jle
pop
inc
and
push
cmp
cs
mov
jge
std
fsubrs
enter
xor
pusha
stc
lods
sti
adc
jno
dec
adc
stos
push
repz
inc
or
packsswb
fcmovne
inc
or
cld
clc
pmaddwd
or
cmpsb
ss
cltd
xchg
lret
xor
xchg
iret
les
in
shlb
pop
std
mov
pop
int
ret
pop
aad
xchg
enter
inc
mov
rorl
sti
jbe
jp
lea
push
cwtl
push
or
pop
add
mov
sub
mov
dec
inc
cmp
pop
inc
lods
jnp
loopne
push
movsl
xchg
pop
lods
lods
mov
sub
cli
lret
xchg
aam
lds
ds
push
jns
lret
test
xor
inc
fcmovbe
out
xchg
fwait
adc
mov
or
jg
jg
movsl
cmpsl
sahf
add
push
sbb
pop
lods
xor
jbe
sub
mov
cmp
loop
xchg
rclb
movl
dec
stos
cmp
in
lods
pop
jno
shll
sbb
in
outsb
dec
xchg
gs
ror
xchg
mov
dec
cmpsl
sarb
loope
orl
test
lcall
lret
popa
jge
dec
add
adc
dec
pop
pop
icebp
repnz
push
call
adcb
mov
pop
jmp
pop
lds
dec
inc
call
push
popa
roll
outsb
ja
inc
jmp
cmp
dec
lcall
push
fiaddl
sub
aam
xchg
cmp
aaa
push
in
ja
dec
addr16
lret
sbb
movsb
loop
jge
out
fmuls
cmp
jle
jnp
mulb
pop
ds
out
pop
das
mov
sub
push
das
xchg
shl
sub
bound
push
pop
cli
popf
repnz
loopne
repz
repz
mov
not
stos
fistps
or
loop
enter
in
gs
ja
mov
loope
ljmp
pop
push
mov
sbb
ja
mov
sbb
fstp
mov
or
pop
fwait
xor
fwait
push
or
pop
jb
sbb
mov
jge
mov
bound
icebp
sub
fsubp
in
idivb
gs
leave
xor
add
jae
movsb
testb
ret
xchg
iret
jmp
or
sahf
push
xor
shlb
mov
testl
pop
pop
xchg
sub
popfw
mov
ds
push
test
lret
or
mov
clc
mov
jp
pop
imul
pop
mov
dec
pop
lea
les
inc
ja
jp
jge
lods
out
adc
jns
fsts
das
jge
mov
or
xchg
bnd
push
adc
mov
xor
add
shl
mov
push
in
mov
repz
and
nop
pop
adc
dec
push
hlt
and
cwtl
arpl
fbld
sbb
aam
shlb
pushf
jb
ja
insb
in
inc
dec
in
les
and
mov
popa
mov
and
adc
into
add
xlat
xchg
inc
cmp
insb
stos
sbb
mov
cmp
icebp
das
sbb
nop
mov
aad
xchg
mov
pop
in
fisubl
pop
xor
push
jns
add
fsts
jne
push
jmp
fildll
getsec
std
shrb
adc
jg
fcomi
jnp
push
lods
outsb
adc
sahf
jle
and
xor
push
js
inc
nop
push
mov
sub
pop
cltd
out
push
inc
and
rorl
lcall
pusha
xor
clc
xchg
adcl
pop
int3
into
loope
repz
dec
imul
push
arpl
jle
jbe
mov
mov
mov
xor
mov
ds
insb
fmulp
add
cwtl
cltd
xor
mov
int3
jns
jle
xor
or
xchg
lret
add
and
or
in
int
mov
add
ds
xchg
cwtl
fildl
int
subb
push
and
rcrb
sbb
sbb
xor
sub
sbb
insb
jo
sub
pop
dec
rol
call
cwtl
or
sti
out
xchg
mov
and
or
sbb
pop
jnp
jge
insb
cmp
inc
daa
cmp
sbb
mov
adc
pop
mov
mov
mov
dec
and
cmp
xchg
shll
cld
or
fldenv
mov
js
ret
xchg
xor
jg
jmp
adc
pushf
lahf
or
jnp
cli
dec
pop
bswap
fs
int
js
cmp
cmp
push
xor
in
gs
push
jno
bound
push
xchg
popf
xchg
mov
and
pushf
es
xchg
mov
ja
mov
sub
push
mov
imul
addr16
mov
into
pop
gs
cs
clc
addl
mov
sbb
dec
std
pop
xchg
jecxz
out
dec
mov
pop
es
jne
stos
xchg
pop
rcrb
repz
fs
int3
pop
ret
mov
mov
aam
sub
dec
repnz
out
jne
add
sbb
push
mov
mov
sti
ror
push
or
fadd
mov
ljmp
jb
rolb
push
ret
xor
add
dec
lods
mov
ss
cmpsb
into
pushf
sub
pop
bound
notl
out
std
jl
fwait
jo
adc
js
aam
jb
push
outsb
push
pop
sub
ret
inc
sti
sub
xchg
pop
xor
into
sub
add
dec
cmp
and
jl
jle
stos
out
push
or
rclb
sbb
dec
mov
nop
aam
pop
xor
ljmp
mov
xchg
xchg
lcall
sbbb
jae
inc
filds
xor
mov
add
lret
pop
xchg
arpl
fcmovb
xlat
push
sub
pop
mov
sahf
test
mov
mov
lea
inc
out
arpl
dec
xchg
push
fdivrs
movsb
clc
fcoms
push
call
or
add
add
mov
xor
adc
push
push
or
push
jnp
sahf
add
fprem
clc
push
jae
sbb
jecxz
stc
jne
dec
stc
fsts
push
data16
push
sti
sahf
bswap
mov
pop
cltd
mov
repnz
jo
into
dec
icebp
dec
dec
dec
mov
dec
pop
inc
rcr
and
sub
xchg
in
mov
roll
cli
outsl
push
pushf
dec
aam
xor
push
iret
stos
dec
dec
movb
mov
dec
ret
mov
rorb
and
push
mov
mov
pop
mov
push
sar
push
pop
and
pop
cmc
jne
jno
jp
mov
xchg
add
dec
lods
mov
or
sub
divb
cli
xor
and
pop
out
arpl
daa
cmpsl
mov
dec
shl
repz
lret
xchg
fwait
imul
cld
repz
cmc
jp
pop
sbb
in
dec
sbb
rorb
out
sbb
xchg
push
sbbb
pop
lret
push
mov
dec
sti
jb
pop
mov
out
pop
rclb
stos
adc
cs
enter
push
mov
and
repz
mov
inc
enter
mov
aaa
test
or
loope
sbb
sub
mov
loop
mov
daa
sbb
nop
cmp
dec
add
xchg
adc
cwtl
or
sbb
cmp
jno
sub
inc
dec
pop
inc
or
ss
or
and
cmp
xor
push
movsl
or
push
or
mov
xchg
bound
roll
ficompl
sbb
test
loop
xchg
dec
xchg
and
clc
popf
push
xchg
inc
shr
fadd
mov
int
jne
cmp
aam
je
push
or
jp
add
aam
xchg
inc
push
add
adc
pop
xchg
insb
test
jnp
jo
lock
divl
push
bswap
dec
cmp
or
xchg
mov
sbb
das
rcrb
mov
pop
frstor
mov
cmp
add
dec
iret
bound
mov
testb
pop
sbb
jo
sub
sbb
mov
gs
jl
add
adc
aam
xchg
hlt
lahf
shll
jle
mov
test
xchg
jnp
rorl
fisubs
out
inc
loope
mov
xchg
inc
repnz
pop
jmp
shlb
or
mov
ljmp
stc
cmp
xchg
idiv
mov
aaa
dec
stos
out
xchg
outsb
dec
bound
push
lock
mov
push
mov
or
nop
or
push
mov
clc
into
or
int
push
mov
inc
lea
mov
in
jb
and
sbb
cmp
or
sbb
push
jns
les
bound
int
pop
repz
xor
cli
cli
enter
cmp
pushf
xchg
cmpsl
xchg
push
jge
sti
jns
pop
test
mov
call
stc
jno
or
outsb
rolb
and
mov
ficoms
add
int3
push
mov
push
sbb
ljmp
push
scas
lock
xchg
jl
cli
xlat
in
pop
or
mov
ja
test
mov
lahf
in
mov
out
fsubp
repnz
scas
add
add
shrb
ds
lock
push
xchg
push
in
inc
sbb
mov
lods
andl
lret
or
loopne
push
jle
pop
ss
mov
loopne
or
xchg
push
arpl
pushf
xlat
clc
and
pop
or
mov
cs
jg
mov
mov
ljmp
or
inc
out
lcall
js
push
and
jns
std
and
dec
mov
sbb
and
into
pop
mov
out
lcall
movsb
fisubrs
in
andb
inc
in
lods
cmpsl
rcrb
add
ss
es
aam
xchg
mov
into
data16
push
jle
push
outsl
in
or
in
loope
loope
jae
out
xchg
popa
out
inc
dec
xchg
ror
mov
daa
dec
xchg
arpl
cld
or
sbb
inc
mov
fisubl
test
xchg
repz
cmp
or
lock
popa
imul
xchg
xlat
inc
jne
test
or
xchg
in
rol
and
adc
cwtl
xchg
cmp
in
test
jecxz
xchg
lea
sbb
ret
push
pop
jno
push
inc
and
mov
jl
std
dec
ret
add
xlat
mov
cld
cld
mov
adc
sbb
cmp
push
pop
xchg
lret
out
sub
enter
pop
ja
xor
pop
hlt
dec
add
pop
lcall
or
out
push
scas
pop
xchg
arpl
test
out
lcall
aam
lods
push
mov
not
adc
int
fists
ljmp
cmpsb
mov
jg
iret
cmp
sbb
out
adc
loope
adc
or
cmp
int
jp
mov
data16
sbb
outsl
push
xor
or
mov
aaa
mov
loope
nop
cmp
mov
ja
fnsave
cmp
sbb
lahf
or
jge
cmc
cltd
cmp
sbb
ja
or
pop
jge
or
push
jge
test
mov
sbb
or
add
add
add
rorb
pushf
add
xchg
xor
pop
loop
aam
outsl
aas
lret
in
xor
sub
lahf
or
out
push
aaa
xchg
ret
aas
inc
inc
push
dec
cmp
lcall
add
pop
sbbb
xchg
cmpl
push
cmp
das
sbb
lds
loope
roll
inc
and
sti
loopne
xchg
dec
xchg
sbb
mov
out
jle
cs
scas
mov
xchg
jae
into
adc
mov
adc
aas
push
cltd
push
stos
push
mov
dec
add
fsubr
jb
cmp
sub
clc
loope
cltd
dec
pushf
mov
call
ret
sub
mov
iret
mov
outsl
sti
lock
jle
fmulp
cmp
xor
mov
and
pop
rcrl
cmpsl
outsb
mov
sub
mov
cmp
aad
mov
cli
mov
insl
add
sub
mov
and
cmp
icebp
fsub
xor
popf
int3
movsl
mov
aad
add
in
mov
orb
fst
mov
shl
xchg
jecxz
testl
inc
mov
fprem1
leave
repz
adc
jl
fs
pop
mov
jmp
fdiv
cwtl
inc
cltd
andb
movsb
js
popf
aam
mov
icebp
outsl
popf
push
out
and
testb
rcr
aas
in
push
xchg
sub
jne
repnz
data16
xchg
inc
push
mov
insl
fistpl
mov
incl
sub
adcl
mov
ja
aaa
push
mov
js
xor
lds
push
clc
in
enter
subb
lea
idivb
add
mov
mov
dec
enter
mov
xchg
mov
scas
shlb
pop
mov
rorl
movsb
bound
push
insb
out
rclb
lahf
adc
sbb
xchg
adc
xchg
lahf
inc
xor
jne
inc
jle
mov
push
xor
pop
insb
dec
lcall
lods
cld
or
ds
jae
xchg
ds
je
cmc
jno
push
sbb
pop
adc
nop
mov
arpl
push
sub
inc
inc
mov
addr16
pop
cwtl
inc
pop
jbe
into
in
or
cltd
lock
repz
sub
loopne
push
cmp
mov
rcll
repz
jne
mov
mov
jp
ret
adc
push
mov
and
orb
mov
pop
and
frstor
push
jmp
ss
pop
cmc
push
pop
hlt
sbb
dec
add
inc
pop
mov
push
pushf
push
ds
leave
out
or
lahf
js
push
mov
sbb
insl
stos
xor
stos
sarb
test
jmp
mov
fsubs
sysret
pop
test
push
subl
adc
mov
and
pop
arpl
jnp
jmp
sbbl
pop
add
mov
movsb
notb
stos
push
dec
js
sbb
ss
add
pushf
lods
sbb
mov
adc
and
mov
mov
es
popf
inc
fsubs
pop
sbb
shll
push
arpl
scas
inc
dec
das
mov
adc
mov
jle
into
sbb
mov
inc
dec
out
or
or
xchg
cmc
sbbb
test
sti
mov
stos
ret
cmpsb
jg
gs
aaa
aad
jmp
sbb
ss
pop
in
mov
dec
scas
dec
adc
adc
rcrb
push
fbld
cmp
or
leave
or
fdivrs
or
mov
pusha
pop
and
xchg
shll
sbb
mov
arpl
mov
ja
aaa
pop
xor
call
jmp
out
or
mov
push
or
sbb
cmp
fldt
int
cli
rorl
lcall
lods
add
imul
jge
xchg
pop
mov
popa
lods
arpl
and
loope
cmpsl
mov
lret
or
jae
aas
fadds
adc
xor
movsb
sbbl
cltd
call
test
add
cmp
dec
push
mov
aad
cmpsb
push
in
inc
sub
xor
lret
into
call
jg
and
ret
sub
and
push
clc
mov
jecxz
nop
mov
out
fwait
stc
sub
cmp
mov
imul
jno
inc
push
data16
mov
dec
jnp
fnsave
gs
push
pop
and
pop
pop
mov
sbb
ret
mov
jae
fdivrp
lcall
mov
shlb
lea
cmpsb
insb
cmc
int
mov
out
push
or
push
or
popa
cltd
aas
adc
add
xchg
xlat
jp
out
xor
leave
aaa
sub
ret
jne
aaa
jb
popa
xlat
jno
gs
fistpl
pusha
xchg
add
dec
mov
mov
test
cmp
paddsw
xchg
lea
xor
xchg
das
pusha
in
fs
mov
pop
ficoms
cmp
sbb
jg
dec
jo
inc
fdecstp
jg
push
cmpsb
stc
inc
sahf
mov
jbe
inc
pop
das
jb
mov
push
repz
xchg
jl
mov
push
mov
lcall
mov
fiaddl
test
pop
xchg
push
sahf
and
lock
adc
mov
inc
ror
rolb
push
push
mov
jbe
mov
cmp
and
adc
in
in
pop
inc
mov
cltd
jl
rcrl
pop
nop
shll
imul
push
icebp
mov
pop
pop
sbb
sbb
insb
sbb
mov
lock
test
lret
loopne
psubusb
jp
or
jge
pop
jl
pop
in
or
shlb
and
loop,pn
rolb
jle
cld
cmp
aad
jne
movsl
mov
cmp
xchg
xchg
dec
clc
mov
cmc
stos
cmp
je
add
popa
into
clc
push
xor
dec
cwtl
xor
in
xchg
pop
outsl
push
test
mov
push
xchg
cmp
jno
je
xchg
ret
dec
add
mov
in
mov
mov
xchg
xchg
push
sub
lahf
sarl
jno
cmp
jo
jb
daa
int
dec
sti
out
std
inc
xor
mov
pop
xor
movsb
sub
jns
popa
pop
dec
mov
push
fs
jae
bound
mov
aad
pop
scas
into
in
mov
popl
mov
sub
adc
andl
sbb
push
xor
mov
hlt
jl
sbb
add
std
mov
fdivl
adc
nop
insl
mov
in
rcll
fistpl
arpl
jmp
loop
sbb
cwtl
sbb
xchg
sbb
call
mov
push
xor
mov
shlb
cmp
lea
cmc
add
sub
addr16
jae
xchg
adc
adc
cmp
lock
dec
or
lods
sub
xor
adc
repz
jmp
sub
leave
cld
mov
test
sub
xchg
xor
inc
pushf
ss
mov
rclb
clc
mov
xor
sub
pop
or
xchg
js
cs
cmpb
or
ljmp
fimull
aad
jg
cmc
cld
add
push
push
add
push
outsb
inc
jae
lods
sub
push
mov
pop
stc
notb
xchg
mov
cmp
xchg
inc
push
pusha
add
sti
loop
lods
cmp
mov
mov
jmp
jl
jbe
enter
mov
repz
and
xchg
add
or
movsl
into
inc
cmp
mov
mov
arpl
clc
imul
and
inc
cli
push
mov
in
xlat
jno
nop
push
stos
repnz
lss
jecxz
movsb
test
mov
lods
sbb
or
cltd
cltd
sub
xchg
mov
outsb
pop
mov
into
fisubrl
jp
jle
mov
out
inc
add
xchg
in
loopne
inc
sbb
les
insb
pop
ss
and
add
sarl
ret
arpl
fwait
fwait
sti
mov
leave
sub
xor
inc
adc
mov
jecxz
rcll
lea
leave
xlat
mov
dec
fs
mov
aad
movsl
inc
loope
scas
arpl
push
fisttpl
sysret
xchg
mov
mov
pop
frstor
cs
mov
cmp
rolb
sub
dec
sbb
jge
push
xchg
fisubl
cwtl
orl
xchg
inc
mov
mov
pop
lock
rclb
jecxz
outsl
pop
mov
push
add
fcmovne
and
icebp
add
mov
or
outsl
mov
sarb
sahf
outsb
push
leave
std
lds
aam
inc
mov
sahf
xchg
int
cld
nop
sub
add
mov
aad
sbb
stos
in
dec
or
jo
adc
in
cmp
push
js
ficomps
push
mov
sbb
adc
in
jbe
mov
xchg
hlt
testb
test
add
or
ds
pop
and
in
stc
push
inc
pop
out
sti
arpl
fistps
sub
add
xchg
aaa
or
pop
and
mov
jno
sbb
mov
imulb
lods
mov
inc
jnp
pop
sbb
jle
mov
pop
data16
mov
mov
out
sub
adc
inc
push
cmp
lea
dec
inc
cmp
sub
fdivs
ret
test
out
push
js
icebp
inc
fucomip
into
les
pop
ret
add
std
mov
repnz
cmpsb
aaa
in
pop
mov
mov
jp
push
inc
stc
repnz
inc
xchg
push
test
dec
jnp
repz
mov
shlb
scas
inc
sbb
popa
lcall
out
aas
push
sbb
out
in
outsb
mov
sbb
adc
mov
inc
pop
in
in
bound
rol
inc
jge
push
clc
inc
test
mov
aas
frstor
xor
jmp
jg
clc
hlt
into
push
xor
and
inc
imul
inc
paddusb
in
add
xor
subl
ficompl
inc
xchg
jecxz
adc
cmpsl
mov
add
shrb
cltd
mov
jmp
sbb
xor
mov
or
movsl
iret
cmc
in
dec
cmp
cltd
jecxz
xor
dec
pop
fsts
xchg
fisubrs
sbb
xchg
jl
in
clc
lret
lahf
cs
or
stc
xor
fsubrp
dec
push
lds
std
adc
enter
sbb
push
xchg
pop
jl
pop
aaa
mov
sbb
test
stos
adc
jg
add
push
and
pop
call
movsl
xchg
fiaddl
cmpsb
add
std
cli
sub
pop
jle
xor
sbb
sbb
sbb
xor
notb
mov
jae
push
je
shld
mov
mov
mov
gs
les
popf
cmp
lods
imul
mov
test
cmp
xchg
mov
loopne
mov
jo
dec
push
leave
icebp
push
gs
inc
xchg
push
mov
mov
in
dec
jb
push
es
mov
loope
bound
xor
repnz
and
cmp
pop
mov
mov
jle
sub
or
mov
mov
sbb
out
cmp
arpl
push
fldenv
in
inc
repz
bound
or
loope
ja
pop
leave
lahf
dec
cmpsb
and
cmp
movsl
insl
bound
cmp
test
jno
and
int
hlt
jne
mov
jecxz
xchg
outsb
ds
and
pop
jecxz
aad
cli
mov
arpl
arpl
sub
lods
movsl
xchg
jnp
mov
mov
jp
inc
add
jne
je
insl
and
jb
jb
add
or
dec
dec
push
push
and
jb
jb
or
add
push
dec
dec
inc
and
jb
jb
or
add
add
inc
dec
dec
and
jb
jb
or
add
xor
cmp
outsb
popa
bound
je
and
imul
and
popa
jo
or
add
add
xor
aaa
or
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
insb
outsl
ja
outsl
and
imul
je
outsl
outsb
or
add
xor
ss
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
jae
imul
imul
imul
add
push
xor
xor
jo
jb
and
jb
jne
insb
and
outsb
arpl
outsb
and
insb
insb
or
push
xor
xor
or
and
outsl
jne
push
arpl
outsw
jb
pop
outsl
outsb
gs
je
popa
je
js
je
je
bound
or
add
add
xor
cmp
outsb
popa
bound
je
and
outsb
and
outsb
jae
insb
and
imul
add
push
xor
cmp
outsb
gs
arpl
and
popa
jo
gs
outsl
jb
or
add
add
xor
aaa
or
outsb
gs
arpl
and
insb
je
je
jb
popa
and
imul
jb
outsl
jb
or
add
add
xor
ss
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
je
jb
popa
and
popa
or
popa
bound
jb
popa
insb
and
outsl
addr16
insl
and
insl
imul
or
add
xor
cmp
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
outsb
jbe
jb
outsb
insl
outsb
je
or
push
xor
cmp
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
popa
jb
jne
outsb
je
or
push
xor
xor
insb
outsl
popa
je
outsb
and
imul
and
fs
add
arpl
jae
data16
push
imul
sub
and
outsb
je
insl
and
jb
jb
add
add
or
add
push
jne
je
insl
and
jb
jb
or
push
jb
addr16
insl
cmp
add
add
cs
jb
addr16
insl
and
insl
and
imul
outsb
add
inc
gs
popa
jae
inc
arpl
gs
outsl
jo
jo
add
je
arpl
gs
imul
gs
popa
addr16
outsl
js
add
gs
xor
fs
insb
add
ljmp
addb
addb
add
add
jg
inc
add
pushl
xchg
aaa
xchg
test
add
dec
add
and
add
inc
dec
add
dec
dec
add
in
add
pusha
dec
add
ljmp
add
add
mov
dec
add
jbe
add
pusha
dec
add
push
dec
add
aam
add
add
add
jo
add
pusha
push
add
inc
push
add
xor
add
push
add
fimull
add
dec
add
mov
add
mov
dec
add
orb
outsb
dec
add
push
push
add
pop
dec
add
hlt
dec
add
push
push
add
sbb
add
push
add
xor
add
dec
push
add
pop
push
add
js
add
mov
add
push
add
fcoms
add
push
add
or
add
add
sub
add
cmp
add
add
push
push
add
fs
add
jo
add
jl
add
mov
add
add
mov
add
rclb
int3
push
add
fcoml
add
push
add
cli
push
add
or
add
adcb
add
add
and
add
add
or
add
dec
add
xor
add
add
add
gs
outsl
arpl
gs
outsb
outsw
push
add
inc
add
je
outsl
outsb
jae
insb
gs
jne
jae
jb
add
add
popa
insb
push
push
add
inc
je
insl
dec
popa
insl
gs
add
js
inc
outsb
jne
push
jns
je
insl
dec
outsl
arpl
gs
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
ret
outsl
popa
fs
imul
add
add
je
jb
arpl
fs
jae
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
pushf
add
dec
gs
arpl
inc
add
xchg
add
insb
insb
push
imul
push
gs
jb
jo
add
pop
add
gs
je
push
imul
inc
add
add
popa
insb
inc
gs
imul
popa
jae
inc
add
inc
push
xor
cs
insb
add
stos
add
push
imul
cmp
inc
jb
popa
je
inc
outsl
outsb
je
outsb
imul
dec
add
gs
inc
outsl
insb
outsl
jb
jo
arpl
add
inc
gs
outsl
insb
outsl
jb
fs
jae
insl
outsb
je
add
add
jb
je
push
add
insl
dec
bound
arpl
and
popa
je
inc
imul
imul
flds
push
gs
outsb
push
inc
imul
add
dec
xor
cs
insb
add
inc
gs
je
jb
jne
dec
outsb
outsw
inc
add
add
je
outsl
insl
insl
popa
outsb
fs
imul
inc
gs
gs
imul
inc
js
je
jb
arpl
jae
sahf
add
insl
imul
outsl
arpl
jae
add
add
je
jne
jb
outsb
je
jb
arpl
jae
lods
add
push
gs
js
gs
imul
gs
add
inc
gs
outsl
fs
gs
imul
add
mov
inc
jb
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
fs
push
dec
jne
je
inc
jns
add
add
je
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
inc
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
insl
add
je
popa
outsb
fs
gs
outsl
jne
je
add
inc
gs
je
dec
popa
outsb
fs
add
adc
inc
imul
popf
add
popa
jo
gs
jb
jns
fwait
add
popa
jo
jb
popa
je
add
mov
je
popa
insb
inc
jb
add
jo
jb
add
das
add
insb
push
outsb
ja
outsb
fs
add
imul
cltd
add
popa
jo
insb
insb
outsl
arpl
in
dec
jne
je
inc
jns
gs
outsl
push
imul
mov
inc
push
dec
outsb
outsw
add
inc
inc
push
add
xor
inc
gs
inc
dec
inc
push
add
mov
je
popa
insb
inc
insb
insb
outsl
arpl
add
jo
gs
insb
insb
outsl
arpl
sbb
inc
gs
popa
jae
inc
jb
outsl
jb
add
push
gs
imul
gs
add
jae
inc
imul
jb
add
push
add
je
je
imul
inc
add
push
add
je
je
imul
push
add
sbb
push
gs
fs
imul
inc
dec
popa
jo
je
imul
add
popa
jo
je
imul
add
je
je
dec
popa
outsb
fs
add
sbb
inc
insb
outsl
jae
dec
popa
outsb
fs
gs
xlat
dec
inc
add
outsb
inc
add
add
int
and
popf
push
xor
add
js
sbb
fcompl
fwait
or
in
sub
and
sbb
lcall
xchg
add
mov
mov
mov
rolb
jl
sbb
push
popa
pop
ret
mov
cld
add
les
es
rol
repnz
mov
and
or
or
sub
dec
test
jns
dec
xor
nop
aas
aam
push
ds
adc
or
daa
rcr
pop
inc
mov
cmp
xor
cmpsb
push
in
mov
sbb
mov
sub
and
pop
push
mov
fs
lahf
pop
sub
in
ss
repnz
push
and
mov
adc
mov
pop
push
jl
scas
push
insb
fdivrl
xor
sub
push
push
popa
insb
xor
xchg
sti
mov
cmc
hlt
mov
mov
xchg
decb
jecxz
into
ret
sarl
inc
testl
push
sbb
xor
sti
add
hlt
imul
roll
push
add
pop
shrl
push
jl
loope
xorb
daa
xor
mov
inc
ret
pop
nop
pop
flds
mov
jge
cld
dec
mov
imul
and
sub
xor
ret
and
xchg
mov
out
pop
decb
or
dec
pop
mov
mov
imul
into
dec
and
xchg
sub
sbb
mov
mov
ret
movsl
out
loope
lds
or
inc
pop
push
std
sbb
and
dec
cmpsl
ds
push
lock
jg
mov
repnz
cmp
fsubs
push
jmp
fidivs
mov
jae
outsl
stos
lods
xchg
popa
orb
xor
inc
push
pop
inc
pop
cmp
add
aas
lds
inc
cwtl
movb
fstpt
iret
fsub
mov
mov
fmull
nop
loopne
mov
stos
dec
fdivs
sbb
pop
insl
std
enter
ss
insb
iret
jg
test
adc
daa
pop
enter
shr
sub
mov
mov
jp
pushw
je
dec
mov
and
pop
sub
or
rcr
pop
lcall
pop
push
gs
cs
lret
mov
ja,pn
idivl
iret
mov
ds
ss
dec
movsb
aas
sub
leave
out
or
in
pop
pushf
in
fs
in
loop
add
jge
lods
sbb
pop
shll
and
adc
fildl
pop
mov
jl
mov
shl
mov
stos
cli
lahf
sahf
and
push
outsb
in
add
xor
mov
jno
jno
mov
mov
in
adc
fcomi
mov
pop
cmc
lahf
cld
inc
adc
dec
mov
jle
popf
fisubrl
sub
enter
mov
lods
fldl
stos
and
xchg
push
pop
imul
ljmp
add
sub
pop
pop
popa
je
in
adc
xor
jbe
xchg
or
fsincos
in
pop
test
lock
push
cmp
fisubl
les
xchg
cmp
adc
inc
pop
inc
mov
xchg
sub
sbb
loopne
lret
mov
pop
inc
cmp
bound
mov
data16
data16
test
cltd
repnz
mov
loope
inc
lahf
cld
mov
xchg
pop
pushf
mov
stos
cmp
cld
insb
lahf
mov
arpl
jne
xchg
mov
mov
insb
push
lret
cmp
xchg
xchg
mov
lock
inc
jb
jo
fcmovbe
mov
call
push
stos
xlat
in
insl
scas
gs
jne
push
mov
ljmp
adc
fcoml
add
mov
aaa
xchg
rcrb
add
fmull
xor
xchg
xor
popa
mov
fcmovnb
or
xchg
lods
popa
dec
inc
dec
push
pop
xor
int3
and
pop
adc
clc
sahf
sbb
jle
sti
xor
fidivl
add
ja
xchg
shll
into
sbbl
cld
test
mov
lret
sbb
pop
jecxz
adc
andl
mov
arpl
xchg
movsb
cmc
push
fcmovne
cmp
icebp
sub
mov
sbb
shll
stc
cmp
push
push
addr16
test
jno
push
lret
test
mov
inc
insb
mov
out
pop
outsl
mov
push
dec
push
cld
add
insb
imul
inc
test
jmp
xchg
and
jns
fisttpll
fs
loopne
test
int
inc
aad
mov
mov
leave
stos
pop
jnp
dec
pop
fs
xchg
std
mov
popa
mov
lods
push
xchg
xor
arpl
sbb
in
dec
pushl
femms
insb
or
jg
mov
fdivl
out
cltd
push
das
in
sub
jge
movsb
rol
call
sub
adc
stc
lock
shlb
jb
mov
jge
jo
add
push
enter
xorb
dec
push
mov
test
cmp
imull
pop
push
xor
xor
movsl
cwtl
mov
mov
xchg
aam
push
mov
pop
push
mov
and
into
xchg
sbb
add
dec
adc
pop
repnz
lods
js
test
in
mov
pusha
cwtl
ss
or
adc
arpl
jns
cmc
fmulp
enter
push
pop
cmp
pop
push
xchg
cltd
cmp
aas
mov
pop
xchg
out
hlt
cmc
cmp
pop
gs
icebp
aaa
out
push
sub
popf
adcl
jl
insl
in
cmpsl
icebp
xlat
js
ss
inc
xor
pop
push
xchg
adc
rcrl
mov
daa
mov
bnd
cmpsl
sub
xor
sub
add
xor
addb
cld
dec
lcall
dec
outsl
sub
lret
mov
mov
inc
stc
pop
xchg
jl
rorl
shlb
insl
ffree
iret
add
lahf
jno
or
cwtl
outsl
out
in
jg
enter
stos
fidivl
jl
pop
push
sub
sti
push
sub
lret
mov
shl
pop
mov
ss
scas
bound
scas
sbb
xchg
cld
imul
out
jge
mov
pop
sub
jb
mov
insb
out
xlat
cmp
les
jno
repnz
lock
add
icebp
js
inc
iret
jp
test
fs
sti
dec
jmp
mov
out
leave
sub
in
jne
js
shlb
inc
mov
insl
push
jg
ljmp
sbb
bound
jno
and
test
xor
jl
jle
mov
pop
leave
mov
fs
fsubp
push
hlt
mov
push
push
fs
inc
fldcw
outsb
mov
out
decb
inc
ret
ja
lea
addr16
dec
mov
test
ss
pop
mov
pop
add
jae
fidivrl
out
cmpl
insb
idivb
lock
loopne
xor
cmpsl
out
xchg
adc
cmpsl
mov
mov
mov
and
adc
movsb
push
lds
out
nop
je
cmp
outsl
sbb
mov
adc
rclb
dec
scas
jg
jns
xchg
add
mov
frstor
jb
mov
jg
repz
outsb
scas
popa
ljmp
pusha
jmp
mov
or
mov
push
sti
movsl
mov
pop
and
xchg
cmp
pop
and
fsubrl
push
cmp
stos
xor
sti
fs
and
jbe
or
movsl
sub
pop
ret
jle
mov
test
add
lods
loop
mov
sahf
push
pop
aad
and
das
aaa
fsub
je
adc
push
xor
aam
flds
out
insl
dec
mov
out
push
shll
scas
loope
push
inc
lods
nop
push
sub
add
xchg
dec
and
and
mov
lret
stos
xchg
andb
dec
dec
aad
mov
push
jmp
cmpsb
inc
mov
add
mov
in
sbb
mov
sahf
push
pop
aad
and
pop
add
ljmp
stos
jmp
stos
adc
inc
mov
insl
push
jg
ljmp
sbb
bound
jno
and
test
xor
jl
jle
mov
pop
leave
mov
es
hlt
sti
xchg
clc
sbb
adc
iret
adc
xchg
xor
add
js
sbb
outsb
call
jb
jge
iret
out
cmp
movnti
pop
xor
mov
into
ret
push
add
pop
pop
dec
xor
test
cmc
popa
mov
and
cmp
addb
xor
or
lret
sbb
xorl
adc
mov
imul
dec
lods
cltd
movsb
adc
in
push
cmp
gs
je
pop
xor
xchg
in
lods
xlat
jo
mov
orl
frstor
push
jle
jg
sub
mov
adc
popf
loopne
xchg
xor
mov
fstpl
pusha
mov
xchg
mov
popa
adc
or
dec
xor
mov
xchg
lahf
fistpl
add
xor
jl
xchg
fistpl
ret
das
bound
stos
mov
inc
in
pop
jns
add
and
push
jb
je
jo
pop
dec
cltd
lods
xchg
or
cld
pop
cmp
jl
scas
xchg
mov
outsl
outsb
xor
push
cwtl
mov
sti
ss
and
cmpsl
jl
or
sbb
out
jge
mov
adc
add
arpl
pop
cmp
mov
test
scas
repnz
mov
ret
cltd
inc
push
ret
and
adc
mov
rorb
mov
outsb
stc
aad
iret
cmp
cmpsb
scas
sub
add
aaa
xchg
shlb
jo
popf
enter
adc
test
xor
cmp
stos
xchg
outsb
push
out
jae
adc
pop
and
and
ss
mov
adc
jp
mov
push
iret
cltd
pop
out
jecxz
jp
je
test
and
mov
iret
xchg
add
pop
push
jg
xorb
push
adc
inc
imul
fst
neg
int
mov
add
mov
mov
fidivl
loope
sbb
movb
sbb
insb
push
lds
xchg
cmc
xor
andl
cmp
adc
pushf
gs
les
fsubrs
cmpl
mov
xor
mov
xor
inc
orb
pop
mov
into
push
pop
mov
mov
pop
adc
pop
icebp
lea
aaa
das
js
mov
push
push
pop
push
sub
jns
sub
mov
mov
sub
mov
loopne
ss
add
in
pop
mov
sbbl
xlat
adc
mov
pop
sbb
mov
loop
mov
pop
pop
dec
aam
lahf
adc
xchg
cld
mov
mov
push
dec
mov
jp
jmp
add
loop
pop
and
loope
sarb
dec
adc
daa
call
pop
ja
jecxz
xlat
xor
clc
jo
cmp
pop
pop
mov
push
pop
pop
or
aas
jns
mov
scas
fucomip
ret
out
insl
ds
test
push
imul
popf
mov
pusha
lret
sahf
lods
testl
int
fwait
adc
fucomp
cs
dec
xor
sbb
ja
and
xchg
xchg
cmp
nop
or
sbb
adc
pop
mov
addr16
push
adc
notl
clc
cmp
adc
xchg
inc
icebp
pusha
dec
pop
out
mov
icebp
inc
push
dec
push
fistpl
das
outsl
ret
jge
add
push
dec
jge
outsb
jmp
mov
leave
sbb
shl
insb
sub
jge
add
xlat
leave
hlt
dec
aad
loopne
pop
aam
pop
jmp
mov
pusha
rcrl
stc
sbb
mov
or
ljmp
mov
jmp
add
mov
ficomps
sub
lea
cwtl
jbe
dec
adc
fistpl
cmpsl
outsl
mov
clc
jl
aas
outsb
outsl
shlb
loope
sbb
mov
mov
cmp
aas
or
jge
test
sbb
das
jns
xor
adc
lahf
jno
jae
addl
push
cmp
adc
aaa
add
inc
push
stos
fistpll
daa
xor
in
lcall
inc
add
dec
and
lcall
jmp
mov
xor
arpl
mov
ret
mov
xor
mov
cmp
push
lret
xchg
jecxz
enter
cmp
push
mov
pop
and
test
pop
cmp
dec
xorl
imul
push
or
mov
inc
push
mov
in
insb
xchg
adc
pop
pop
std
ffreep
inc
test
loope
xchg
mov
into
push
jmp
jecxz
xor
or
mov
pop
sub
dec
and
out
movsl
jno
ds
inc
xor
pop
out
out
shrl
jle
adc
pop
sbbl
inc
push
nop
cltd
jbe
dec
stos
fisttpll
rcll
pusha
push
inc
stos
adc
bound
inc
jb
adc
pop
push
cld
mov
enter
dec
testb
rolb
repz
push
sub
push
cltd
lcall
or
jmp
jne
cmp
dec
repz
sbb
adc
mov
into
jne
mov
inc
xchg
jns
popl
in
stc
std
gs
adc
dec
shlb
outsl
jnp
insb
bound
mov
mov
mov
lds
cmp
xchg
addl
outsl
fucomp
aas
dec
mov
xchg
inc
and
xlat
in
ss
push
stos
test
clc
and
pushf
in
add
test
ljmp
shr
sbb
std
push
sti
sti
xchg
jp
aad
test
mov
and
inc
lds
or
test
push
dec
cmpsl
pop
mov
daa
and
push
lods
stos
scas
pop
std
adc
adc
mov
adc
mov
lock
pop
stc
ret
mov
scas
stos
xor
test
ljmp
cmpsb
or
xor
xor
xchg
mov
dec
test
cmc
pop
pop
and
inc
mov
test
sbb
push
push
movsb
pop
in
and
or
inc
xchg
ja
sar
aad
movsl
xchg
mov
xchg
out
push
dec
xchg
cmp
pop
fwait
adc
mov
push
pop
inc
xor
dec
add
repz
bnd
test
shlb
nop
out
and
mov
jbe
xchg
dec
addb
mov
mov
cmp
inc
or
stos
add
mov
inc
cmp
repnz
push
push
jbe
repz
mov
adc
mov
xchg
ja
xchg
stos
mov
jecxz
cmp
push
insb
cmp
in
jne
es
int
mov
pop
in
inc
xchg
and
xchg
jne
or
sti
cmp
ljmp
cmpsb
add
cli
gs
bound
mov
add
into
loop
aad
xor
rcrl
pushf
cmpsl
std
sub
xchg
jp
sarl
and
and
sub
sbb
cmpsl
rclb
outsb
adc
cmpsb
push
inc
mov
mov
mov
js
jp
or
js
repnz
imulb
hlt
cmc
bound
jnp
bound
or
popf
adc
add
pop
pop
mov
in
cld
inc
repz
out
push
jg
sbb
xor
ffreep
or
dec
clc
cmc
mov
cli
filds
mov
pop
test
pop
push
xor
fiaddl
mulb
cmp
les
aad
add
sub
push
xlat
dec
pop
jge
push
push
leave
aad
mov
pusha
or
stc
popf
lds
test
or
adc
arpl
jl
lods
and
ret
jle
neg
lret
outsb
les
call
cmp
ret
dec
mov
das
lret
push
mov
add
pop
adc
or
sub
lcall
sbb
jle
leave
je
inc
inc
inc
add
xchg
rcrl
inc
repz
clc
inc
addr16
sub
call
icebp
fs
xor
sahf
push
imul
scas
mov
movsb
jne
ja
iret
mov
mov
cld
xor
loop
insb
jmp
aas
mov
mov
mov
mov
dec
jae
mov
and
push
sbb
lcall
test
lock
xorb
inc
jmp
jae
xchg
mov
xchg
dec
mov
mov
pop
cld
dec
lods
push
mov
ret
mov
inc
call
popf
lret
lea
and
std
shrb
cmpsl
xchg
aaa
scas
mov
in
aam
dec
and
xchg
mov
sbb
scas
sarl
xor
mov
inc
loop
xchg
add
fwait
jecxz
imul
fistpll
jne
orb
add
sbb
addb
pusha
test
jmp
xlat
test
sub
sub
lcall
mov
mov
push
push
inc
fwait
mov
mov
lods
adc
add
adc
stos
loopne
dec
pop
lock
push
insb
and
jno
jle
mov
push
pop
pop
sub
sbb
mov
and
call
jge
in
jp
push
jae
jns
fadds
aad
and
mov
testb
dec
sbb
push
sahf
xor
cmp
fsubr
pop
repz
repnz
mov
out
jmp
mov
mov
jo
xchg
cmp
mov
in
sbb
jb
cs
scas
jbe
jno
movsb
ljmp
nop
push
sbb
stos
pop
dec
mov
xor
mov
cld
dec
in
inc
add
loope
rcrl
aas
xchg
mov
negl
and
add
xchg
sub
movsl
inc
mov
loopne
lds
jmp
pop
mov
mov
mov
cmp
into
lret
fisubrl
sarb
out
pop
iret
movsb
add
mov
push
pop
in
pop
inc
or
ljmp
imul
jecxz
mov
rcrb
loope
pop
xchg
out
pop
pusha
pop
orl
cmp
and
in
dec
xor
xorb
aam
cmpsl
inc
nop
jb
jge
rcll
shrl
ret
xor
stos
mov
int
dec
mov
call
cld
popa
out
das
sbb
jmp
or
call
and
sahf
cltd
aas
test
and
mov
fwait
sub
xchg
bound
xchg
or
mov
and
pop
push
mov
lret
mov
mov
mov
add
fwait
xlat
not
stos
shrb
sub
and
and
cmp
sbb
lahf
push
lret
notl
clc
loopne
test
and
icebp
fisubrl
sahf
cmc
sub
xor
push
shrl
dec
idiv
sub
cmp
ficoml
push
and
js
fidivrl
daa
scas
lods
outsl
inc
cmp
xchg
dec
cmc
or
lods
adc
mov
fdivr
jbe
mov
mov
aas
ja
into
xchg
xlat
xchg
jp
jle
push
cmpsb
fbld
sub
adc
mov
push
cmp
divl
pop
dec
mov
sub
aam
imul
xor
mov
nop
sbb
xchg
dec
mov
pop
or
xor
sub
popf
flds
insb
mov
sub
and
lods
dec
xchg
imul
pop
dec
adc
lea
inc
lods
add
xor
mov
mov
fs
mov
inc
mov
dec
push
fadd
and
jae
addr16
mov
dec
cmp
fwait
xor
push
push
test
scas
dec
mov
test
mov
mov
mov
jb
mov
sar
ret
sbb
test
into
je
sbb
out
fs
mov
pop
add
dec
les
lret
adc
iret
in
pop
and
xlat
fisubs
mov
push
stc
jne
rorb
in
dec
aad
iret
daa
or
cltd
scas
clc
dec
ss
loop
pushf
popf
test
and
fistpll
adc
xor
jno
mov
les
mov
mov
lret
hlt
and
test
inc
mov
out
pop
jle
pop
rclb
push
leave
or
shrl
pop
and
and
cltd
jmp
sbb
out
add
popa
adc
in
jmp
pushf
xor
fs
dec
imul
mov
or
fs
sub
dec
jp
imul
sub
aas
out
mov
mov
ss
xor
shlw
cmc
cmpl
jne
mov
sub
movsl
mov
insl
xor
or
pop
dec
adc
imul
adc
ljmp
mov
out
sub
movsl
imul
fwait
or
popa
pop
push
dec
or
std
push
sbb
xchg
push
sub
push
mov
insb
jp
and
inc
xchg
test
scas
pop
mov
push
in
subl
adc
dec
jbe
cmc
fwait
cmc
pop
push
int
es
loop
int3
repz
ret
push
xchg
sbb
add
mov
test
pop
stos
push
nop
add
pop
inc
add
clc
js
movlps
out
outsl
vpsllw
repnz
int
pop
rolb
aad
out
aaa
mov
cmpsl
xor
jb
or
push
push
push
clc
loope
mov
jecxz
push
sbb
lret
pop
clc
loopne
xor
jb
fmuls
cmpsb
decb
push
jle
inc
push
jle
jns
pop
mov
or
cmp
in
inc
shlb
mov
cmp
enter
shlb
dec
ja
mov
sti
xchg
notl
cld
add
mov
mov
clc
add
leave
aas
pop
rclb
leave
fisttps
xchg
insl
pop
push
pushf
jg
and
and
rcrl
sub
mull
xchg
sbb
pop
xor
stos
mov
jle
scas
and
inc
xor
and
jnp
jl
mov
stos
inc
mov
fcmovne
sbb
lds
push
mov
rclb
push
bound
push
mov
pop
xor
mov
and
inc
shlb
shlb
in
jne
nop
fwait
loop
jb
pop
lock
pop
outsl
cltd
daa
hlt
loop
add
xchg
je
test
push
lahf
fnstsw
outsl
xchg
cmp
repz
xchg
in
cmp
mov
lods
cli
imul
or
iret
jbe
lret
xor
mov
jno
jb
arpl
daa
es
jae
lahf
lcall
inc
movsl
or
je
icebp
push
push
sti
push
mov
sti
pushf
cwtl
sar
push
std
jno
sub
cmp
cmc
cmp
test
add
push
addr16
cmp
adc
inc
mov
mov
push
and
repz
mov
loop
clc
mov
inc
or
mov
cmp
shlb
cld
dec
mov
aas
pusha
mov
dec
test
lods
dec
ja
cwtl
jbe
adc
sbb
repnz
pop
movsl
pop
test
mov
scas
xchg
scas
xchg
in
or
mulb
lcall
xchg
cmpsl
inc
jp
js
loope
cmpsl
sub
insl
and
adc
loope
pop
dec
fdivl
jne
imul
jne
pop
push
or
insl
lds
repnz
call
xchg
aaa
lock
pop
push
cmp
rorl
cmovs
mov
adc
das
dec
adc
and
das
xchg
loop
inc
fs
ss
adc
xchg
push
cmp
inc
cmpb
or
movsb
push
cmpsb
ret
sbb
movsb
fcmovnu
sbb
jg
cmc
lret
inc
sub
pushf
std
pop
push
cmp
and
sub
xchg
add
push
scas
cli
sahf
pop
push
gs
jmp
cli
scas
popf
fwait
cmp
or
movsb
fistpll
in
mov
in
push
icebp
inc
test
stc
adc
sti
inc
sbb
adc
or
mov
int3
mov
sbb
clc
jl
rcll
pop
pushf
arpl
cmpsl
mov
push
lret
mov
clc
int3
in
cmp
xchg
icebp
adc
push
clc
xor
xchg
shll
mov
je
xchg
aam
jge
sub
popa
decl
or
mov
cmp
and
jmp
shll
push
push
jb
xchg
addl
dec
mov
push
fdivs
mov
faddl
cmp
aas
fistpll
or
cld
insl
or
pop
les
mov
push
inc
stos
push
daa
mov
lods
mov
mov
adc
shr
push
gs
orl
and
repz
cld
adcl
mov
mov
icebp
ret
lahf
hlt
pushf
aas
pop
push
sbb
push
cld
aad
push
in
push
adc
add
rorb
ret
inc
call
fsubs
mov
sub
xchg
sub
or
cmpsl
pop
jmp
push
sub
es
cmp
or
jg
cmp
inc
pop
mov
stos
cltd
dec
fisubs
aam
push
cmp
filds
jp
inc
push
incb
loope
xlat
jl
dec
insl
jae
sub
je
test
xor
inc
inc
sub
lods
outsb
leave
cmpsb
push
pop
mov
jo
xchg
subl
es
jnp
ficomps
adc
andl
mov
mov
mov
xchg
cmpsl
fsubs
pop
mov
nop
adc
adc
cmp
inc
jno
sub
push
xor
lcall
in
sbb
idivb
push
shlb
pop
xchg
movb
daa
sbb
imul
xchg
pop
sub
mov
jno
stc
loope
pop
int3
shlb
out
int
ss
repnz
enter
jbe
outsl
fbld
je
inc
inc
fucomip
rorl
dec
push
pop
cmpb
xchg
or
inc
xchg
lods
cltd
in
test
sbb
lret
cmp
and
pop
push
ret
in
xchg
push
cwtl
xchg
pop
push
enter
mov
out
cmp
int
out
insb
jae
and
nopl
cmpsb
cli
stc
jns
pop
mov
add
xchg
add
add
mov
xor
mov
fcmovne
push
xor
cmp
sbb
enter
xchg
out
mov
std
aam
xorb
push
cmp
test
push
jl
push
add
ret
and
xor
push
arpl
mov
fucomi
ret
int
adc
repz
repnz
repnz
dec
aad
xor
xchg
divl
xchg
pcmpeqd
pop
mov
jg
cmpsb
pop
lret
cmc
adc
shrl
lcall
xchg
fcoml
and
adc
icebp
cmpsl
test
mov
mov
in
sbb
movsl
pop
stos
pushf
mov
xor
dec
pop
xor
fs
push
add
testl
add
xchg
imul
push
xor
mov
sub
pop
mov
andl
aas
jo
stos
fnstcw
dec
sub
dec
in
int
mov
adcl
sbb
pop
aas
dec
pusha
push
fnsave
dec
cmp
pop
jb
pop
dec
push
lret
lret
scas
movl
inc
inc
cmpsl
or
test
out
in
inc
mov
aam
add
fwait
das
cwtl
sub
ret
jp
rcll
clc
fwait
adc
flds
call
call
pop
and
fdivs
in
pushf
fstl
mov
vpunpckhqdq
pushf
push
sbb
pop
pop
or
jp
jle
sub
in
es
imul
test
jge
cmp
push
mov
xchg
cmp
mov
int3
push
mov
mov
and
mov
jecxz
roll
out
inc
and
jmp
js
cli
jecxz
lcall
popf
jl
lds
push
ljmp
push
sub
add
loop
mov
pop
adc
add
in
nop
bound
test
mov
xchg
lcall
jne
adc
push
lea
inc
into
add
mov
ds
xchg
daa
push
cwtl
mov
popa
mov
add
jnp
mov
mov
sahf
adc
mov
cmp
shlb
inc
pop
lock
and
sub
inc
subl
mov
lret
cmp
xchg
push
cltd
and
cwtl
dec
sbb
xor
cmpsl
push
lahf
add
and
mov
add
xchg
shlb
adc
inc
mov
lock
dec
or
add
or
jbe
cmp
aas
xor
and
xchg
mov
and
aaa
rcl
ss
sub
xchg
mov
cmpsb
and
push
push
jmp
ficompl
in
sub
in
mov
out
cmp
and
mov
mov
sarb
mov
fdivrs
cmp
push
dec
call
stos
or
icebp
pop
sahf
inc
test
and
jmp
lds
mov
outsb
and
pop
sub
push
fildl
int3
addr16
pop
imull
ss
adc
mov
or
sti
arpl
insl
jno
mov
mov
je
adc
imul
pop
fsubl
fmuls
fldl
dec
cmpsb
shr
cld
adc
xor
and
wbinvd
mov
jp
jmp
cld
ret
push
add
mov
add
jmp
mov
xor
pop
mov
fistps
xchg
add
pop
out
dec
or
scas
add
clc
sub
mov
test
scas
pusha
adc
es
pop
mov
xor
popf
cld
push
jb
mov
sub
and
test
or
xchg
sbb
dec
insb
cmp
cmp
xchg
sbb
mov
in
ret
jl
int
adc
out
mov
and
cmp
jno
jecxz
int3
mov
in
jg
mov
daa
ret
inc
sbb
xchg
mov
mov
popf
jo
jg
cli
dec
jno
in
jmp
out
movsl
xchg
adc
sbb
sbb
and
or
inc
enter
outsb
push
popf
and
add
add
std
into
xor
add
out
sahf
xor
test
fldcw
cmp
test
sub
dec
test
sbb
dec
add
out
jns
mov
jbe
or
sub
outsb
jecxz
sub
sub
jmp
cltd
out
add
mov
shlb
addb
sbb
push
jl
or
mov
fmulp
xlat
stos
jae
mov
xchg
mov
mov
add
stos
aad
iret
jmp
mov
dec
mov
push
or
xor
pushf
mov
iret
push
in
xchg
fisubl
mov
dec
ret
mov
ss
dec
add
movsb
movsb
push
lock
mov
popa
jb
add
mov
fwait
shr
inc
ss
mov
mov
mov
inc
lcall
xor
mov
xlat
jl
jae
or
daa
and
cmp
add
jb
lock
push
jle
lea
and
and
mov
xchg
inc
pusha
test
mov
cs
das
icebp
orl
pop
int3
outsl
je
add
mov
add
inc
sahf
mov
cmp
cmp
or
jbe
repnz
fst
iret
dec
pop
mov
jb
push
add
leave
jge
xchg
stos
cmp
mov
or
mov
mov
fnstsw
lcall
lahf
mov
loope
repz
sub
cmp
orb
popf
sub
out
sub
fcmovne
mov
xchg
xlat
into
lret
out
ror
sbb
add
cmpl
xchg
sub
mov
cmp
mov
test
testb
call
fdivrp
inc
cmc
xor
ds
jbe
push
mov
xor
mov
int
ds
loopne
mov
std
push
or
add
sbb
add
mov
adc
rorb
adc
pop
or
arpl
xor
mov
aam
insb
cmpsb
stc
test
addl
adc
outsl
pushf
cmp
je
inc
lea
dec
fcoms
ret
ret
jbe
xor
dec
loope
cmp
inc
adc
push
dec
aam
adc
lret
mov
lea
aaa
cmp
dec
jp
inc
rcrl
xchg
out
push
xor
xchg
nop
aam
cmp
les
mov
lock
mov
add
insl
cwtl
mov
icebp
and
push
pop
ds
inc
jb
int3
imul
das
mov
les
mov
fcoms
xchg
adc
cmp
jg
int3
mov
addr16
daa
jl
push
pop
int3
and
lock
rclb
cld
pop
push
and
mov
push
mov
inc
cmp
sub
cltd
adc
int
jecxz
dec
out
xchg
lods
inc
mov
incl
sub
pusha
xor
mov
pop
je
sbb
cmpsb
xchg
pop
imul
fwait
adc
test
or
das
aam
aad
jae
lahf
or
lahf
xor
cmove
mov
jno
xchg
andl
sub
outsl
add
jle
out
cmp
jmp
adc
out
push
aaa
push
push
movsl
add
pop
inc
in
sar
repnz
jmp
inc
rcrb
mov
jbe
aaa
loopne
mov
mov
sarb
pop
push
in
add
xor
jge
fs
mov
mov
xor
inc
test
bound
outsb
fnsave
lock
xchg
cmpl
rcll
mov
push
mov
jmp
xchg
leave
test
xchg
mov
popf
inc
lods
shlb
jge
lods
xor
push
data16
stc
es
notb
cwtl
or
jo
fiadds
dec
dec
mov
dec
shr
xchg
inc
mov
stos
test
loope
xor
hlt
dec
add
test
dec
mov
sbb
aaa
dec
stos
out
dec
subb
add
and
loope
xor
fidivrl
lret
test
into
push
divl
adc
mov
mov
mov
mov
lock
or
jge
xor
mov
repz
sub
movsw
cmpsl
or
inc
add
and
mov
mov
xor
dec
push
pop
sarb
cs
shlb
inc
mov
xchg
and
inc
pop
pop
mov
dec
out
pop
aaa
shr
sbb
imul
fs
enter
leave
fwait
test
out
xchg
push
add
scas
addr16
hlt
and
movsl
nop
mov
jp
pushf
mov
insb
cmpsl
push
xor
lock
mov
and
daa
xchg
sbb
outsb
mov
add
add
or
in
xlat
inc
pop
pop
add
lcall
mov
subb
xor
adc
loop
mov
jle
testb
inc
xchg
rorb
scas
mov
cmp
xchg
insl
in
push
fnstsw
mov
sti
and
or
test
xchg
and
cwtl
mov
inc
pop
xchg
jl
jnp
mov
sbb
dec
fists
std
sub
inc
in
push
dec
sub
pop
pop
std
in
jge
lahf
jp
jg
mov
sahf
and
mov
mov
sbb
pop
out
je
mov
stc
imul
mov
jo
js
xor
scas
ljmp
mov
es
push
incb
pop
dec
dec
je
pop
jae
outsl
bound
inc
lds
inc
cmpb
fisubrl
jne
mov
test
cmp
pop
imul
fsub
aas
outsl
inc
cmp
mov
lods
xchg
xchg
pshufw
fwait
xor
pop
fsubs
add
out
or
out
and
dec
mov
test
cltd
in
shrl
lret
inc
test
lods
xchg
rclb
loope
int3
roll
pop
pushf
pop
xor
mov
jg
and
xlat
out
ret
das
pushf
inc
leave
in
pop
lret
das
ja
rcll
push
lahf
push
cmp
adc
arpl
popa
adc
in
mov
ljmp
mov
or
ficoml
cli
sbb
dec
popf
inc
icebp
mov
mov
arpl
ss
push
add
rcll
fiaddl
arpl
fnstenv
movsl
xor
or
pop
loop
fxch
lock
cmpsb
cmp
push
cltd
adc
loop
mov
bound
shlb
dec
arpl
test
and
add
mov
cmc
outsb
dec
cli
xlat
pop
pop
addl
xchg
aaa
xchg
out
testb
or
in
jg
stc
insl
xor
cmp
inc
stos
addr16
outsb
jecxz
xor
xchg
jmp
std
push
es
movsb
and
jg
mov
push
xor
ss
adc
push
lods
and
and
xchg
sub
sahf
xor
and
pop
mov
mov
push
add
or
aad
xchg
jb
pop
fnstsw
test
pop
loop
pusha
out
jnp
push
pushf
mov
movsb
pop
ret
mov
or
pop
mov
imul
subb
jns
pop
push
dec
stc
or
imul
mov
hlt
dec
loopne
sbb
mov
movsb
adc
es
popf
enter
xchg
mov
arpl
cmp
sub
in
ret
xor
cs
std
dec
xor
in
icebp
sub
mov
lret
xchg
jae
pop
lret
pop
xchg
pop
das
in
out
fninit
in
int3
scas
in
stos
mov
stos
arpl
xchg
sub
mov
std
shlb
inc
jae
lret
mov
insl
pop
sub
je
xchg
iret
mov
je
movnti
sbb
dec
add
xchg
cmp
cmp
mov
pop
sub
out
pop
out
call
cmp
inc
sahf
mov
test
ds
jo
jnp
lret
leave
and
and
popa
push
ret
mov
inc
push
xchg
xchg
sbb
fmulp
sbb
loop
popa
mov
cmp
cs
mov
cmp
stos
inc
and
lret
rcl
push
mov
popa
ret
or
push
psubb
adc
mov
jnp
sbb
xchg
mov
cmp
mov
pop
pushf
sbb
lret
add
icebp
push
dec
das
iret
call
mov
inc
jle
mov
mov
mov
stc
test
mov
pop
adc
sub
push
add
jmp
push
inc
xor
xlat
ss
mov
adc
mov
add
or
rcl
inc
and
mov
or
push
xor
push
es
xchg
hlt
jo
je
aad
imul
jge
jnp
jb
mov
divl
xorl
jno
in
fisubs
add
jnp,pn
pop
ljmp
insl
cmpsl
inc
or
pop
hlt
cli
pop
fs
mov
ret
adc
in
xchg
push
popf
out
pop
insl
dec
xchg
xchg
addr16
push
xor
inc
and
xchg
into
dec
fs
and
std
pop
xor
sub
ret
jmp
and
fiadds
dec
jmp
enter
mov
jmp
cmpsl
sbb
fcompp
ror
ja
push
into
xor
push
xor
mov
xlat
sbb
aam
xor
dec
fidivs
gs
daa
mov
mov
test
int
jl
mov
shll
ret
mov
ret
cwtl
and
adc
in
dec
jb
push
test
in
pop
loope
sub
fisubrs
shl
and
sub
sbb
out
jl
lock
incb
xor
mov
loop
xchg
neg
xchg
ja
hlt
fbstp
mov
js
or
addr16
fiadds
cmp
dec
lahf
sub
in
cmpb
inc
sarb
adc
js
fistpl
cmp
xchg
ljmp
xchg
mov
xchg
inc
dec
cwtl
mov
addr16
cmp
mov
mov
test
push
fisttpl
sub
xor
loope
mov
dec
jmp
scas
xchg
push
test
mov
or
xor
lock
xchg
push
shll
jmp
stos
add
push
push
stc
les
add
push
cmp
in
aad
adc
inc
outsl
cmp
daa
jns
jmp
lret
or
pop
inc
loopne
cli
lods
xchg
gs
push
sbb
mov
inc
clc
call
fwait
je
int3
inc
cmp
je
inc
jle
jge
test
mov
pushf
in
lcall
or
adc
mov
repz
rorl
out
adc
or
sub
adc
ss
hlt
pop
inc
pop
arpl
pop
xchg
shrl
pop
jge
mov
xchg
sar
jae
xchg
sub
add
xor
or
xor
push
sbb
dec
popf
cmp
rclb
pusha
push
pop
pop
ret
shll
insb
stos
test
lcall
mov
sbb
and
out
fstpl
jbe
pop
cmpsl
subl
mov
xchg
mov
insb
lock
or
in
mov
pop
cmp
xchg
outsb
pop
andl
js
mov
xor
ss
pop
test
pop
ds
cmp
ds
das
xlat
dec
movsb
cmp
mov
push
push
aaa
pop
scas
out
cmp
mov
push
cmp
rol
and
push
gs
enter
sub
xor
roll
lcall
jp
in
out
and
push
pop
dec
cmp
dec
sub
push
sub
sbb
sbb
out
insb
and
inc
es
sahf
aaa
fstl
lods
sti
jl
aas
cmp
in
jb
sti
sub
cmp
push
pop
add
sub
fnsave
lret
sub
cmp
sub
or
mov
hlt
popf
lea
mov
pop
in
xor
mov
push
pop
jns
jne
jge
mov
es
push
or
mov
incb
mov
in
inc
sbb
daa
stos
cmp
jno
cld
sub
ljmp
cmp
mov
outsl
icebp
ffreep
ret
lods
mov
call
pusha
or
push
repnz
sbb
sub
and
data16
aas
add
xchg
sahf
call
jne
hlt
and
les
adc
mov
add
or
mov
std
push
xchg
mov
add
arpl
adcb
inc
push
jno
inc
xchg
adc
xchg
adc
adc
jnp
mov
dec
sub
shlb
xor
fsqrt
flds
lods
adc
xlat
xor
push
inc
into
or
cld
int
inc
mov
mov
mov
adc
jmp
jne
add
loop
dec
pop
es
incl
ljmp
push
loopne
imul
outsb
xchg
cmp
or
dec
sbb
dec
in
mov
dec
push
cwtl
push
xor
mov
pop
push
mov
int3
pop
jmp
and
pop
xor
cmp
out
lahf
sub
xchg
ret
std
or
push
push
add
popf
push
push
sti
cmp
in
insl
aaa
lret
adc
repz
mov
jg
pop
insl
int
fabs
gs
cmp
bound
jnp
cmp
mov
rcll
push
fnstsw
inc
xor
in
xor
mov
cmpsl
dec
roll
jmp
cmc
imul
daa
sbb
cmp
stos
inc
pop
fs
sub
lds
push
dec
mov
gs
sub
jg
sub
int
addr16
gs
pop
outsl
ret
out
movsb
push
iret
mov
ja
lods
sahf
push
lods
cmp
sub
rorl
inc
ret
das
inc
xlat
inc
inc
cmp
stos
enter
mov
dec
lods
sbbb
fmuls
loope
loop
mov
and
add
inc
jge
mov
xlat
jmp
rcrb
mov
push
int
dec
mov
repz
ret
pop
test
inc
or
ret
mov
jecxz
sub
inc
mov
jg,pn
sbb
rcr
mov
or
popf
cmpsl
jbe
leave
or
out
mov
cmpl
bswap
cs
lret
pusha
negb
cmp
es
sbb
or
idiv
dec
xlat
xor
mov
test
shl
push
insb
sub
shr
sbb
in
subl
dec
mov
pusha
and
add
cmp
insb
pushl
adc
mov
pop
lahf
jp
mov
aas
lret
movsb
stos
adc
leave
mov
loopne
imul
dec
rcrl
out
loope
sbb
xlat
sub
dec
dec
xchg
sarl
mov
aaa
jl
pushf
lods
outsl
in
ret
xchg
add
mov
jb
xchg
daa
push
imul
rorl
lcall
and
fwait
sbb
dec
inc
inc
imul
dec
insb
xor
movsb
inc
jg
stos
aad
dec
fisubrs
scas
in
inc
ret
scas
push
aaa
xor
push
or
adc
push
and
xchg
pop
sub
sbb
xor
mov
push
std
repnz
ret
or
ja
scas
cmp
das
std
add
dec
mull
adc
push
jo
jecxz
mov
dec
sbb
adc
push
icebp
fsubp
jge
popf
xchg
or
nop
in
sahf
pop
sub
and
fists
faddp
aaa
push
mov
in
test
mov
push
xor
jne
cmp
in
and
mov
repnz
adc
sub
xchg
enter
lea
push
call
pop
and
iret
mov
push
inc
insl
push
gs
movsb
xchg
pop
push
and
jne
pushf
push
cmpsb
outsb
popa
mov
cmp
cltd
cwtl
sub
insb
jns
jno
dec
sbb
sbb
sbb
lret
addr16
inc
ljmp
push
fadd
push
fstl
imul
dec
sti
jbe
je
in
jnp
sub
andb
xor
push
rcrb
repz
jg
add
test
fs
mov
dec
mov
ss
fmull
aas
imul
je
push
les
movsl
sbb
adc
loop
adc
or
test
and
adc
mov
sbb
pop
out
mov
lcall
add
inc
lock
jl
push
inc
pop
insb
jns
js
add
lret
jno
cwtl
clc
arpl
mov
dec
dec
sub
xor
add
scas
icebp
add
dec
inc
cmp
add
cmpb
pop
test
sahf
mov
pop
mov
mov
popa
sar
xchg
add
mov
das
xchg
cwtl
rcrb
mov
push
pop
dec
dec
out
pop
jb
mov
fisubs
mov
add
add
mov
sub
cld
ss
pop
jns
test
cmp
pop
dec
insb
fnstenv
faddp
inc
lcall
dec
mov
test
pusha
movsb
add
sub
call
loope
in
mulb
pop
xor
xchg
mov
addl
inc
pop
test
push
repz
xchg
cwtl
jae
add
pop
mov
xchg
fnsave
sub
fdivrl
ret
or
das
pop
es
mov
sbb
and
mov
jg
pop
mov
lret
imul
rolb
notb
int
lret
jnp
xlat
push
pop
outsl
inc
adc
stos
pop
test
mov
aam
pop
sub
adc
std
pop
fsub
dec
jge
and
dec
fs
inc
out
fwait
jl
xchg
cmpsb
dec
cmp
sbb
stc
movsb
js
ret
ja
aam
test
sub
lds
sbb
sub
addb
cmp
and
or
adc
pop
icebp
sub
cli
adc
and
sahf
sub
xchg
or
enter
bound
pop
push
repz
pop
fs
subl
pusha
sub
lods
pushf
adc
enter
andl
mov
in
jle
jb
insb
add
fwait
lcall
fnop
pushf
fnsave
sbb
pop
or
pop
addr16
faddl
sbb
sbb
data16
sbb
lock
sub
aam
mov
inc
inc
sbb
fld1
rorb
mov
xchg
pop
lret
mov
pop
lods
testl
loope
ds
daa
orl
lret
push
jp
xor
and
mov
dec
and
sub
popf
lret
jae
rorb
mov
outsb
xrelease
test
lahf
js
movsb
adc
cltd
jb
imul
ss
push
lds
out
add
dec
xchg
mov
mov
rclb
inc
sbb
movsb
add
fmuls
adcb
cltd
test
dec
push
icebp
test
adc
lret
push
test
repz
fisttps
in
xor
inc
test
pop
shll
adc
fst
or
mov
adc
ret
repnz
inc
jecxz
push
pop
aad
mov
data16
lock
int
ret
push
ror
repnz
push
inc
sarl
fsts
je
add
jecxz
pop
and
rol
pop
adc
cmp
xor
in
jg
lods
ret
cwtl
jge
lcall
hlt
enter
lahf
sti
mov
cli
addr16
jo
hlt
pop
or
xchg
or
sti
ja
arpl
jo
push
sbb
out
fs
iret
inc
adc
mov
jb
inc
and
js
inc
addr16
xlat
mov
jbe
mov
push
out
or
and
mov
nop
sbb
je
inc
add
xor
ds
leave
push
jl
bswap
inc
or
mov
ret
adc
repz
daa
xor
loope
add
fldenv
add
hlt
pop
pop
add
test
xor
mov
sbb
ficoml
cmp
adc
roll
mov
enter
sbb
sti
pop
rorb
cmp
add
xlat
sbb
sbb
lret
push
sub
imul
fs
daa
imul
popf
adc
xchg
ret
test
inc
dec
sbb
movsl
pop
inc
lahf
pop
scas
inc
pop
pushf
and
jbe
insb
cld
into
pop
mov
mov
mov
rclb
rol
jnp
xor
push
sub
jb
mov
push
xor
addr16
xchg
insb
ret
ss
aad
push
ds
imul
movsb
in
sahf
cmp
roll
pop
cmp
aas
mov
les
cmp
adc
iret
mov
push
inc
sti
bnd
jne
std
out
mov
or
lret
jns
xor
jbe
loopne
mov
divl
sbb
repz
int3
cwtl
cmovno
mov
in
or
jmp
cmp
push
add
mov
add
adc
add
or
jbe
scas
mov
call
sub
popa
lcall
mov
xor
mov
jg
cld
sbb
mov
outsl
in
lods
xchg
xor
das
insl
mov
adc
das
sahf
xor
mov
insb
sbb
pop
js
dec
repz
mov
mov
xor
inc
ret
and
jns
push
cmpsl
jmp
push
shll
js
iret
sub
jmp
sbb
cmpsl
mov
sbb
clc
lods
mov
add
icebp
mov
xor
push
rolb
ljmp
push
stos
test
fwait
loopne
jp
popf
jle
mov
mov
jbe
pop
sub
mov
pop
imul
cmp
addr16
jne
ljmp
inc
xchg
lret
xor
xchg
call
popa
inc
jae
fcoml
push
test
xor
and
lds
mov
pop
loop
call
inc
xor
or
and
test
ja
xchg
inc
push
sarb
sbb
popa
mov
mov
inc
sub
arpl
fadds
jbe
dec
dec
mov
cmp
inc
cmp
inc
out
jno
push
or
cld
pop
mov
out
pop
scas
jle
xor
jo
cltd
add
pop
mov
data16
push
mov
pop
sub
es
mov
out
lods
inc
dec
imul
pop
test
lret
cmp
in
jns
or
jb,pn
mov
and
dec
add
je
lods
pop
and
ja
sub
in
movsl
fs
mov
adc
push
lret
loopne
test
mov
nop
mov
test
pushf
push
sub
in
imul
dec
mov
pop
adc
test
jns
mov
or
pop
test
jnp
or
add
pop
lret
leave
outsb
push
mov
lods
invd
js
bound
sahf
fcmovnb
mov
jl
or
addb
rclb
dec
cltd
pop
lret
into
pop
add
or
mov
cmpsl
jo
mov
xchg
adc
mov
mov
cwtl
out
xchg
fsubs
sbb
push
and
ja
and
sbb
imul
push
call
sarl
mov
jp
movsb
mov
pusha
pop
jecxz
jbe
pop
cmp
xorb
out
pop
dec
test
mov
bnd
mov
pushf
jge
aas
insb
pop
cli
sub
push
or
push
cmc
bound
aam
aam
and
mov
out
popf
jno
add
or
pop
add
lods
jle
js
sbb
adc
mov
popa
jl
xor
xchg
subl
in
jecxz
pop
dec
sahf
push
add
xor
sbb
sbb
mov
dec
insl
arpl
pushf
addr16
rorl
mov
cmpsb
mov
dec
xchg
rcll
sti
mov
shll
ror
or
cwtl
jmp
and
add
test
or
pop
push
add
stos
and
gs
and
test
div
add
pop
mov
data16
out
out
ret
mov
cmp
xchg
cld
fldenv
dec
push
cltd
dec
mov
sub
cmpsb
sub
and
mov
jnp
jnp
testl
popa
xor
pop
mov
cs
inc
hlt
lcall
mov
repnz
mov
sahf
push
mov
add
or
mov
bound
push
out
push
cmp
lret
int
cmp
cmpsb
mov
data16
and
mov
push
hlt
lods
mov
push
scas
jl
pop
mov
stos
test
pop
aad
lods
lcall
pushf
lock
sbb
loop
inc
xchg
out
cld
mov
add
xor
shll
incb
movsb
movsl
out
mov
add
mov
mov
pop
loopne
mov
xor
dec
mov
jp
fcompl
daa
sbb
pop
inc
pusha
mov
mov
inc
sbb
pop
rcrb
leave
cmpb
push
in
pusha
pop
adc
adc
push
cvtps2pi
jns
sub
inc
cmp
loop
rcrb
mov
rorb
push
xor
call
mov
jne
fiadds
incl
lods
sti
cs
shlb
mov
mov
in
adc
pop
push
mov
and
mov
cs
das
and
add
aam
sub
cmp
pop
icebp
lock
mov
cmpsl
shll
or
inc
lds
push
xor
in
dec
rcl
es
inc
sbb
and
xor
pop
cld
xchg
xor
fadds
sub
gs
sahf
stc
fildll
or
xchg
and
mov
stc
mov
in
ss
jecxz
mov
out
mov
fistpll
ret
in
daa
test
fidivrs
mov
push
inc
aam
sub
inc
adcb
mov
xlat
and
int3
lods
in
jmp
orl
test
dec
or
or
adc
js
jmp
fcompl
insl
in
add
inc
imul
imul
lods
nop
push
sub
cltd
ds
addr16
dec
xchg
jae
xor
into
incb
add
add
inc
mov
imul
xor
xchg
pop
sbb
outsl
shrl
jae
repz
push
insb
add
stc
mov
jmp
lods
sub
movsb
aaa
aam
mov
adc
in
fwait
cmp
scas
inc
sahf
outsl
cmp
jp
push
pop
sub
sbb
scas
popf
cmc
das
or
sub
jae
lods
dec
out
loopne
xlat
test
and
outsb
repz
push
lret
cld
outsb
hlt
lcall
mov
mov
fidivrl
adc
jbe
cltd
jae
cmp
mov
mov
in
cwtl
push
dec
sub
nop
sbb
fldl2e
mov
mov
push
push
jle
push
sub
test
addl
dec
jmp
cmpsb
pop
or
fimuls
cmpl
and
cmp
out
pop
dec
aas
add
outsl
imul
inc
inc
shl
sar
cmpsl
sub
movsl
lods
push
out
sbb
popa
mov
add
xor
fmuls
jo
shll
cmc
push
pop
xlat
sysenter
push
jp
cmp
test
push
das
mov
xchg
add
rcrb
out
jne
fisttpll
repnz
mov
jge
jle
lcall
cli
imul
push
lcall
popa
and
xchg
shrb
nop
popf
in
jmp
lret
jp
mov
push
pop
pop
sub
fadd
pushf
dec
enter
js
hlt
sbb
push
sbbb
jns
jl
and
mov
ret
jg
jae
push
jmp
ljmp
out
into
cs
dec
cmp
push
in
aas
jl
cltd
aad
in
cmp
enter
xchg
xor
stos
gs
jns
lea
sarl
mov
xchg
add
out
cmp
mov
scas
cwtl
fisubs
inc
movntq
ret
adc
neg
jno
cmp
ds
jns
adc
mov
push
stos
adc
mov
out
jecxz
mov
mov
xchg
mov
sbb
cmp
inc
xor
int
sti
testl
cmpsb
leave
mov
mov
ss
sbb
arpl
mov
jl
sbb
xor
xchg
cltd
in
or
call
and
loopne
mov
sbb
in
jo
cltd
int3
addr16
jp
ret
or
rcr
xchg
fsubl
in
iret
jno
push
push
outsb
push
insl
inc
clc
popa
push
push
lret
jo
push
in
push
mov
loope
jno
into
into
push
mov
ljmp
inc
add
pushf
iret
pop
dec
pop
out
addr16
cmpsl
mov
pop
push
pop
push
and
notb
push
in
xor
mov
dec
inc
lods
popa
imul
ret
popf
jae
fistps
ret
aas
pop
fldl
dec
xor
sbb
popa
jns
int
sbb
lods
jae
addr16
mov
out
xlat
push
jne
push
arpl
cmpps
in
mov
sub
lods
rcrb
fxtract
insb
inc
mov
fiaddl
and
push
je
inc
sbb
les
jp
test
dec
sub
jge
es
jge
dec
inc
int3
test
mov
mov
fld
aam
mov
fdivr
cmpsb
pop
in
cmp
fwait
dec
mov
lgs
adc
leave
movsl
pop
lahf
es
lock
inc
push
std
adc
sub
mov
ret
in
mov
adc
adc
and
in
mov
test
fisttpl
xchg
cli
xchg
adc
mov
mov
or
lahf
xor
lods
sub
notb
mov
mov
xorl
jne
mov
xchg
adc
push
cmpsl
inc
ret
fldcw
into
cs
mov
aaa
xor
in
in
les
sbb
add
xor
cmpsl
popa
rolb
inc
pop
pop
ret
jne
ljmp
push
aad
addr16
mov
aas
xchg
shlb
loop
add
sahf
and
rorb
ja
mov
sub
repz
in
sbb
ret
mov
jle
jl
push
test
out
in
jne
or
jo
sarb
lret
ja
cmpsl
adc
aam
push
jmp
mov
push
lods
cmp
xchg
adc
out
hlt
add
jmp
jo
mov
cltd
inc
and
push
gs
repnz
or
or
icebp
mov
fbld
mov
fbstp
ss
pop
xchg
loop
test
ja
out
pop
scas
jo
mov
int
sub
dec
xchg
clc
outsb
jmp
pusha
lods
movsb
jns
call
mov
test
lret
jae
ljmp
inc
xor
stos
xchg
nop
push
jnp
cmp
cmp
jns
or
pop
dec
lret
sahf
and
pushf
pop
jae
push
aaa
daa
daa
pop
dec
sbb
clc
dec
push
and
insl
data16
lret
ja
jmp
sbb
push
push
sbb
xlat
test
in
arpl
mov
and
cli
xchg
repz
popf
mov
jbe
test
dec
mov
data16
int
push
loop
dec
int
dec
mov
mov
fists
rcll
xlat
sbb
sub
leave
int3
rcrl
lahf
adcl
pop
imul
push
cmpsl
dec
adc
loopne
test
jmp
aas
mov
inc
inc
xchg
and
sbb
je
aaa
xchg
or
imul
out
pusha
fwait
or
mov
pushw
clc
xchg
loop
push
pop
xchg
jl
or
loope
arpl
xchg
test
xor
mov
fmull
repnz
shll
ja
test
xchg
mov
jp
fdivp
or
into
jne
jge
sahf
sub
int
lret
or
gs
pop
jo
dec
ljmp
shll
js
mov
push
addr16
jle
cmpsb
pop
or
iret
and
mov
scas
push
cmp
loopne
stos
cmp
xchg
or
fs
je
dec
mov
cltd
xchg
es
rolb
mov
int3
rolb
imul
mov
in
pop
mov
xor
jge
fimull
in
adc
or
xabort
push
sub
cwtl
insl
out
jo
sub
xchg
scas
dec
pop
adc
inc
adcb
fs
cmc
inc
sub
js
lcall
cwtl
sbb
int3
mov
clc
aaa
aad
mov
jo
rolb
clc
enter
sub
pop
in
out
add
in
mov
pop
jnp
push
addr16
clc
ret
into
add
jns
xor
int
ficoml
mov
mov
pop
xchg
xor
setns
js
scas
jle
sub
sub
pop
pop
imul
inc
xchg
jne
add
xor
std
out
push
push
push
pusha
xor
out
js
aas
sbb
mov
sbb
mov
test
hlt
fsubrl
jo
aam
sahf
pop
test
inc
outsb
mov
cld
lcall
mov
cltd
cmpsl
and
inc
cmp
insl
mov
jle
pop
jp
xchg
inc
addr16
stc
mov
fistps
fs
and
xchg
and
fstl
out
inc
ds
mov
in
xchg
jno
lahf
mov
into
fsts
cmpb
arpl
inc
jecxz
or
aam
mov
jbe
jmp
push
push
push
pop
and
and
sub
addb
scas
cmp
rep
lods
js
dec
inc
stos
xchg
shrb
in
and
mov
cmpps
cmp
push
insb
fxch
ja
leave
xorl
data16
mov
rolb
test
or
mov
sub
scas
xor
aad
jb
daa
xor
or
push
imul
cmp
push
int3
outsb
lcall
xor
xor
add
adc
or
dec
stc
adc
orl
mov
cmp
ljmp
push
dec
in
mov
test
jo
ret
fisubs
pusha
xchg
sbbl
int3
js
dec
lods
fistl
mov
ss
mov
mov
pop
icebp
das
sbb
mov
aam
jg
scas
mov
shll
inc
jmp
das
pop
mov
xor
add
adc
lea
mov
icebp
and
pop
inc
ljmp
mov
fldenv
rcrb
mov
scas
call
jns
fimuls
repnz
push
shll
sub
test
mov
pop
imul
outsl
jle
pushf
mov
daa
inc
pop
ljmp
mov
xor
inc
xchg
sub
sti
les
ror
aas
inc
pop
out
jb
popa
jl
push
incl
ret
sbb
add
cmp
push
lahf
sbb
cmp
mov
ja
enter
test
xchg
jns
and
push
out
mov
stos
outsl
fdivs
add
outsl
and
aaa
pop
daa
pop
test
adc
sbb
jbe
mov
ss
sti
shll
jbe
dec
xor
or
xchg
test
xor
mov
mov
dec
mov
cmpsb
nop
push
sahf
cmc
and
and
ja
into
fldcw
add
scas
dec
insl
je
int
or
adc
fcomps
adc
mov
cmp
push
std
mov
idiv
fldenv
push
sahf
cmp
sub
nop
in
or
push
push
mov
and
adc
ds
sub
push
pop
notl
js
dec
mov
or
jno
addr16
pop
aas
cmp
dec
mov
sti
ds
pop
daa
stos
mull
lods
fisubrl
sbb
cmp
fists
jle
sub
lock
std
jno
push
icebp
xchg
shrb
pushf
or
rcll
imulb
std
into
cwtl
test
scas
ljmp
pop
fnstcw
sbb
rclb
pop
lcall
test
fwait
push
sub
pop
lea
fistl
mov
test
pop
dec
inc
jp
rclb
shll
dec
shrb
jmp
xchg
fcomi
shll
jae
fisubs
mov
in
stos
roll
test
jl
nop
ds
pop
mov
inc
jbe
sub
out
les
stos
mov
lret
pop
jg
fidivs
mov
icebp
leave
push
add
xor
inc
stos
sub
lret
jecxz
pop
push
jecxz
inc
test
int3
repnz
mov
int
mov
push
loop,pt
repnz
pop
in
lret
shlb
xchg
jle
adc
xchg
mov
mov
jge
xchg
sbb
fists
cmpsl
push
cmp
cmpl
jmp
cwtl
xchg
xchg
imul
out
stc
mov
js
push
sbb
and
xor
dec
stos
xchg
mov
pop
push
scas
and
jae
mov
fucom
mov
sbb
pop
mov
outsl
pop
mov
mov
out
mov
xchg
sbb
cmc
and
in
test
les
inc
lea
mov
decl
cld
sbb
adc
sub
in
orb
lahf
cmp
shl
les
loope
dec
adc
sub
push
addr16
xor
sub
lahf
cmp
punpcklbw
xchg
lock
inc
rclb
insl
add
dec
fcmovne
mov
ss
or
cli
xchg
jnp
lret
daa
mov
test
imul
inc
test
mov
popf
fs
fadds
dec
imul
dec
ds
call
add
lahf
ja
insb
inc
jnp
add
mov
lods
and
sbb
mov
or
out
inc
lods
add
or
jl
data16
add
aaa
xchg
adc
lret
shlb
std
nop
pop
ret
test
pop
pushf
outsl
cvtdq2ps
and
test
or
movsl
pop
jo
sub
dec
arpl
imul
fcmovnbe
cmp
push
ljmp
jae
add
mov
addl
rorb
in
xchg
xchg
pop
dec
xchg
aam
dec
push
push
cli
ret
int
push
daa
jno
cltd
xor
lods
lods
mov
sub
add
cmpsl
push
nop
mov
push
inc
dec
pop
ret
push
push
push
test
jae
repz
clc
sbb
push
ljmp
push
sbb
jno
xchg
xlat
pop
jg
test
stc
dec
or
adc
mov
and
mov
inc
mov
jae
adc
ret
mov
movsl
dec
loope
jns
push
or
or
xor
repz
std
xorb
in
pop
xchg
andb
cmc
xchg
inc
lcall
push
sbb
call
dec
push
and
in
lret
aas
enter
ljmp
mov
test
pop
pop
fsubrs
cmp
ljmp
ljmp
lret
push
mov
mov
inc
cmp
lds
sbb
mov
mov
subl
sbb
ljmp
cmp
xchg
pop
or
dec
sub
inc
or
jmp
cltd
loopne
mov
ds
sub
adc
ljmp
xor
mov
cmpsb
push
rcl
js
jno
pop
xor
fs
test
or
rclb
in
sbb
cmp
and
icebp
push
add
adcb
jge
in
jmp
roll
or
dec
fsubrs
mov
xor
rcrl
or
cmovns
test
arpl
call
cltd
mov
add
adc
test
out
dec
std
fidivs
jne
js
add
mov
xchg
jecxz
or
mov
je
insl
out
insb
out
inc
cs
dec
test
cmpsl
movsl
xchg
int3
icebp
test
das
popa
lock
jno
inc
fnstenv
lea
inc
adc
sbb
pop
add
mov
ljmp
adc
in
ficomps
adc
das
or
xchg
sbb
mov
jmp
out
pop
fwait
inc
js
mov
cwtl
inc
cmp
pop
inc
jmp
or
sbb
add
mov
outsl
in
aam
mov
ffreep
fadd
jg
aas
les
mov
mov
ds
mov
inc
lahf
fcmovbe
test
inc
xor
clc
dec
mov
add
push
inc
push
dec
pfrcpit2
clc
mov
jns
adcl
mov
clc
add
inc
mov
add
clc
inc
add
jns
inc
orl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
addl
addl
str
mov
mov
dec
add
mov
xorl
mov
orl
add
clc
mov
mov
mov
inc
dec
dec
dec
inc
dec
add
push
clc
add
mov
push
mov
dec
mov
clc
add
mov
inc
mov
dec
add
mov
mov
add
addl
adcl
dec
add
addl
clc
inc
mov
cmovne
addl
jns
inc
mov
orl
mov
add
mov
mov
mov
mov
mov
inc
inc
clc
mov
dec
mov
mov
mov
mov
dec
add
xorl
add
mov
mov
clc
add
mov
mov
push
push
clc
add
add
add
add
add
add
mov
mov
mov
dec
add
mov
dec
mov
add
mov
add
mov
mov
xorl
add
cmp
mov
mov
orl
mov
dec
dec
addl
jnp
mov
mov
add
cmovge
mov
push
movzbl
addl
add
cmp
mov
orl
mov
push
inc
push
mov
mov
add
dec
addl
clc
push
inc
orl
push
clc
add
xorl
movzbl
add
psubb
mov
mov
mov
add
push
mov
mov
push
mov
mov
add
lmsw
add
mov
push
clc
mov
inc
dec
mov
mov
mov
addl
clc
mov
mov
add
mov
dec
clc
addl
mov
inc
addl
mov
mov
push
mov
add
mov
mov
push
mov
dec
sldt
clc
mov
dec
push
push
dec
mov
andnps
add
push
mov
dec
mov
clc
mov
dec
add
inc
addl
mov
add
add
mov
addl
add
mov
add
add
mov
add
clc
clc
andnps
clc
push
movzwl
mov
addl
clc
push
dec
mov
mov
dec
mov
addl
orl
inc
clc
andnps
mov
add
push
push
clc
adcl
mov
push
movzbl
mov
add
add
mov
mov
mov
add
mov
mov
clc
add
add
clc
push
mov
add
mov
add
push
dec
addl
mov
push
movzwl
addl
mov
add
inc
dec
mov
mov
mov
push
mov
mov
jno
inc
add
mov
mov
mov
add
add
mov
mov
mov
dec
clc
mov
inc
inc
inc
add
mov
mov
add
addl
add
psubb
mov
mov
dec
mov
add
cmovge
add
mov
mov
clc
push
dec
dec
inc
mov
orl
addl
clc
dec
mov
add
mov
mov
mov
clc
orl
add
mov
clc
mov
clc
mov
dec
add
inc
mov
inc
clc
str
inc
add
mov
mov
mov
add
mov
add
jnp
add
dec
add
inc
mov
clc
clc
inc
cmovne
mov
push
mov
clc
dec
inc
mov
add
mov
adcl
mov
mov
clc
mov
inc
add
clc
mov
mov
add
sidtl
dec
mov
mov
jns
mov
mov
dec
inc
psubb
mov
push
orl
jns
add
mov
lmsw
movzbl
jns
mov
cmovge
add
mov
add
add
mov
inc
inc
push
mov
inc
clc
mov
mov
mov
dec
mov
add
clc
add
mov
clc
add
dec
mov
cmp
mov
add
mov
cmovge
adcl
mov
lmsw
add
mov
dec
mov
mov
clc
inc
add
mov
mov
inc
push
add
add
mov
inc
orl
mov
mov
inc
inc
mov
inc
push
mov
mov
mov
add
addl
mov
mov
mov
add
mov
addl
dec
mov
mov
clc
sidtl
jns
mov
add
dec
add
mov
mov
addl
add
mov
mov
inc
clc
clc
inc
add
xorl
mov
inc
add
mov
add
cmovge
inc
mov
inc
add
mov
mov
add
mov
inc
cmovge
push
mov
mov
inc
mov
mov
cmp
push
inc
add
mov
inc
push
mov
orl
mov
mov
orl
mov
xorl
mov
mov
mov
xorl
add
mov
inc
dec
clc
xorl
add
add
add
sldt
psubb
dec
movzbl
push
clc
mov
mov
mov
jno
mov
mov
push
mov
mov
mov
mov
orl
mov
add
mov
cmp
orl
mov
mov
clc
movzbl
mov
movzwl
mov
push
addl
inc
clc
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
inc
clc
mov
jns
addl
push
mov
dec
inc
mov
dec
mov
addl
lods
pop
in
pop
outsb
mov
sub
pop
faddl
pop
nopl
mov
jns
dec
jp
gs
push
xor
out
cmp
sub
xchg
sbb
sbb
sub
inc
aam
in
jmp
adc
push
xor
inc
cmp
mov
int3
mov
sti
sti
das
xchg
jne
push
leave
push
pop
and
fmuls
call
or
push
pop
mov
loope
cmp
mov
lret
mov
or
in
shll
jnp
inc
cmp
lret
movsl
sbb
ja
test
mov
push
sti
pop
in
mov
sub
sub
mov
jle
dec
jle
nop
mov
movsl
jae
sub
stos
add
sub
loop
push
loope
and
inc
lea
cwtl
pop
jg
push
fistpl
dec
push
scas
cli
mov
lods
fsubs
xor
jae
mov
cmp
out
arpl
mov
push
icebp
dec
cmc
std
outsl
mov
imul
faddl
pop
aas
mov
pushaw
stc
push
aam
push
fbstp
ret
jnp
xchg
cmpsb
aas
insb
stos
inc
lods
outsl
jmp
jecxz
mov
test
jp
lret
and
mov
mov
mov
pop
fcompl
enter
js
xchg
sarb
js
lea
roll
cmp
mov
hlt
mov
scas
bound
inc
mov
add
xchg
in
mov
cmp
jnp
daa
cmp
stc
aad
mov
xchg
fldl
cmc
dec
add
and
fs
xor
xchg
inc
xor
cmp
inc
sahf
push
and
aad
cmp
xchg
inc
jb
loop
popf
in
push
cmp
aam
adc
cmp
adc
adc
daa
xchg
push
adc
pushf
repz
loopne
pop
fbstp
scas
test
xchg
add
adc
adc
mov
and
mov
pop
pop
push
fs
rol
mov
and
pop
mov
dec
sarb
push
push
subb
jno
fwait
xor
out
stos
mov
mov
repz
xor
lods
addb
out
cmp
test
cmp
daa
in
xor
cltd
shrb
fdivs
add
dec
shr
xor
out
jmp
pop
add
nop
andl
fsubrl
mov
mov
loope
repz
bound
lds
xchg
inc
cmp
fwait
adc
or
sarl
mov
roll
lret
pop
inc
inc
xchg
roll
mov
stc
push
push
dec
ss
xor
std
fcomp
jb
je
shll
mov
dec
mov
xor
fdivr
ret
cmp
cld
sbb
lods
adc
ret
or
outsb
lock
dec
outsl
mov
xchg
and
sbb
ljmp
test
daa
mov
movsb
out
adc
sub
push
mov
pop
mov
xor
insb
push
fcomps
fstpt
test
add
inc
imul
arpl
jg
fisubl
pop
or
lods
mov
cmp
pop
je
pop
cltd
mov
dec
popf
shlb
insb
out
mov
adc
pop
push
dec
or
outsl
xchg
push
sub
xor
leave
aaa
xchg
jo
bound
jl
jns
test
sbb
xchg
inc
loop
pushf
pop
notl
fdivs
pop
xchg
cmp
xchg
ret
scas
xor
or
inc
fnstsw
fucomi
inc
push
into
push
ljmp
xchg
repz
loope
push
popa
lods
jae
arpl
shlb
or
mov
orb
icebp
shll
insb
mov
push
out
fucomp
gs
inc
pop
or
jno
xchg
sub
cltd
xchg
adc
rcr
mov
jecxz
push
sti
out
pop
dec
adc
push
adc
stc
sahf
cli
mov
mov
add
sbb
mov
xchg
cld
mov
add
in
aaa
sbb
xchg
jmp
dec
jmp
pop
and
jge
push
repz
push
and
add
outsb
mov
push
stos
xlat
in
icebp
mov
cmp
outsl
mov
scas
into
out
lods
bound
leave
jnp
es
mov
sbb
mov
loope
incb
adc
enter
fwait
mov
movb
out
mov
mov
iret
imul
pop
mulb
push
pop
push
jg
inc
in
push
pop
repnz
in
pop
arpl
shrb
sub
lcall
mov
dec
gs
push
cmp
cmpb
scas
xchg
test
push
xchg
aam
sbb
pop
adc
fidivl
lcall
je
add
pop
sbb
scas
cmpl
ss
sub
mov
sub
fstpl
aad
in
repnz
call
mov
lahf
fcomps
jecxz
lds
jge
lds
and
ss
and
add
inc
shrl
jecxz
aas
repnz
jb
std
inc
sub
mov
xor
ja
int3
mov
mov
out
xchg
add
mov
cmc
sub
push
lret
mov
nop
push
popa
mov
cmp
mov
pop
cmp
mov
sbb
add
and
jp
out
insl
push
ja
aaa
out
ret
or
data16
push
rcll
lods
jo
cmp
cwtl
xchg
outsb
and
pop
out
push
inc
mov
or
popf
mov
and
mov
dec
jo
mov
ret
je
insb
push
push
cld
icebp
jnp
outsl
pop
adc
sbbl
stc
insl
inc
cmp
in
ret
jne
push
push
popa
mov
mov
pop
pop
enter
jb
and
dec
pop
pop
xlat
sub
jb
xchg
fcoms
imulb
test
fimuls
inc
mov
outsl
mov
aad
lret
mov
push
jmp
imul
pop
cmpsl
pop
xchg
xchg
mov
cmovns
in
idivl
pop
push
test
fs
pushf
mov
lret
lods
inc
out
movsl
and
sahf
not
sbb
cmp
inc
push
enter
mov
cmpsl
dec
in
lea
pop
xor
ret
mov
sub
les
int3
popa
jb
jbe
pop
jecxz
bound
lret
jl
cmp
ret
imul
pop
andb
leave
movsb
stos
mov
es
popf
mov
sub
push
xchg
data16
daa
fldcw
xchg
out
inc
xchg
fs
or
mov
idivl
in
cld
jmp
in
mov
fildl
sbb
cmc
push
nop
and
std
ja
outsb
stos
mov
push
inc
mov
pop
adc
call
push
movb
test
mov
cmpsb
pop
push
inc
and
adc
jle
popl
out
mov
push
cld
cltd
cmp
mov
lret
faddl
test
sbbl
add
push
mov
or
push
add
push
and
xchg
dec
into
jg
mov
jl
ss
scas
xor
fisttpl
dec
fisttpl
movsl
movsl
pushf
sbbl
mov
das
imul
or
jg
iret
cs
pop
sahf
rol
dec
inc
xor
jmp
xor
push
mov
jl
pop
cmpsb
mov
cld
scas
pop
std
dec
aad
or
ds
or
mov
adc
mov
mov
add
adc
adc
std
xlat
jl
xor
call
mov
ja
and
xchg
sbb
enter
jg
mov
movsb
enter
jge
aaa
inc
cltd
xchg
inc
adc
and
cltd
inc
shl
add
jle
scas
sbb
adc
movsb
outsl
in
xchg
sbb
cli
sbb
or
mov
loop
jae
dec
sbb
push
cli
imul
imul
int
aaa
mov
cs
push
add
jle
into
cwtl
aad
mov
push
aaa
daa
fcmove
jmp
jb
mov
daa
adc
mov
mov
pop
push
fstpl
andl
in
scas
inc
jae
out
aam
fdiv
jo
imul
out
or
xchg
rclb
addb
aas
add
xchg
ret
popf
and
out
in
and
or
scas
adcb
imul
in
dec
jmp
sbb
mov
das
lds
sub
mul
nop
test
cmp
in
sti
js
ja
ljmp
sbb
xor
loop
add
pop
sahf
dec
sbb
aad
loopne
and
xor
ret
test
popf
xlat
sbb
loope
negb
and
or
mov
in
fldt
jae
out
test
sbb
pop
pushl
jp
xchg
lds
mov
xchg
inc
and
mov
sub
mov
cmp
lds
sbb
int3
lock
xchg
xchg
jle
add
sbb
jne
mov
arpl
pop
and
and
dec
ja
shll
int3
dec
int3
mov
lret
testb
pop
xchg
or
sub
mov
lods
sarb
lret
pop
mov
add
pusha
sti
pusha
test
jp
test
int3
push
sub
pop
jb
insl
loopne
shll
jmp
or
ds
push
pushf
mov
shll
sbbl
and
ja
xor
sub
cmc
insl
mov
ljmp
imul
pop
xchg
or
insl
es
jmp
push
sbb
and
dec
add
int
pop
fsubrs
jg
test
je
push
in
ret
dec
ficompl
stos
jno
out
inc
sbb
sub
dec
mov
mov
jl
js
sahf
mov
shll
sti
cmpsb
fists
add
cmpsl
pop
stos
mov
mov
xchg
pushf
push
push
insl
xor
add
int3
fnstenv
mov
xor
xchg
jp
xchg
add
push
push
jmp
into
xchg
loope
adc
dec
jecxz
and
cli
pop
pushf
mov
cmp
test
and
cmpsb
adc
push
movsl
int
or
sbb
movl
enter
mov
adc
lods
push
sbb
stos
dec
lds
decb
inc
add
test
out
lods
bound
imul
xbegin
inc
movsl
roll
aas
mov
daa
mov
sub
out
popa
loop
movsl
pop
popf
cmc
sbb
loop
test
fcomps
iret
dec
sbb
sub
lcall
jge
psrlq
adc
stc
push
or
ss
fwait
mov
in
movsb
or
jbe
mov
fucomi
mov
movl
adc
hlt
lret
jno
je
lret
xor
fisubrs
popa
xchg
cmp
mov
push
xor
push
mov
rolb
mov
jle
jg
jno
mov
add
push
jp
add
push
xor
je
aam
and
ret
pop
mov
stc
rcr
push
data16
adc
les
data16
sbb
xchg
adc
jo
leave
mov
mov
cmp
mov
rcrl
add
mov
xor
mov
xchg
cmc
cltd
push
aam
jle
jae
rorl
lret
rorb
mov
pop
cltd
lret
mov
out
sbb
gs
in
popa
xchg
xchg
pop
js
cwtl
insl
fwait
lods
xor
or
jmp
and
add
pop
mov
push
xchg
rcr
cltd
ret
aaa
aad
cmp
and
fsubrp
fldz
inc
inc
cwtl
mov
lret
lea
jns
or
aad
add
and
mov
inc
ja
std
mov
mov
outsl
jbe
adc
and
cwtl
or
mov
movsl
cwtl
xor
out
das
mov
aam
mov
adc
push
adc
dec
push
sub
mov
and
mov
adc
ret
jno
mov
mov
push
imul
imul
jp
pop
fcos
pop
jle
sahf
out
mov
and
xor
sahf
cltd
jbe
and
mov
inc
push
xor
pushf
mov
adc
dec
sbb
jge
test
add
push
xlat
lods
lahf
pop
popa
jbe
sub
popa
outsb
cli
fwait
scas
in
cmpsl
rcrl
xchg
mov
mov
mov
inc
xchg
push
jo
repnz
adc
fs
aaa
xchg
fcompl
clc
jmp
test
popa
ficoml
mov
dec
mov
xchg
push
adc
dec
xor
adc
cwtl
mov
mov
sahf
popa
add
mov
enter
push
pop
inc
dec
ficoms
jb
mov
mov
incl
cmpsl
imul
rolb
sub
cmp
jo
ds
add
and
add
xor
xor
mov
xchg
jp
inc
cmp
mov
lock
shlb
adc
pop
pop
in
scas
int3
adc
test
mov
es
or
dec
repz
add
mov
stos
and
popf
add
movsb
fwait
xchg
sub
call
xchg
mov
xchg
or
push
sub
mov
fdivrl
es
xchg
cmpsl
hlt
jb
shl
andb
out
adc
fisubrl
mov
loope
sahf
popa
jns
mov
std
mov
dec
loop
sbb
sbb
mov
or
mov
push
mov
fwait
repnz
in
call
jo
jns
loope
push
xchg
mov
call
cmp
push
jl
pop
das
sbb
mov
push
mov
rolb
cmpsb
cli
in
fsts
xor
mov
mov
mov
jle
add
loopne
scas
jge
pop
sahf
cmp
xchg
dec
test
mov
dec
loope
jge
dec
lods
ds
mov
idivl
sbb
je
and
inc
lea
movsl
jbe
out
sarl
fstl
dec
fisubrs
inc
jo
std
mov
inc
mov
iret
jae
ret
mov
test
lea
imul
repz
jbe
mov
inc
inc
push
loope
fbstp
xor
dec
dec
push
push
xchg
cmp
sbb
jo
push
mov
pop
dec
xchg
ret
cmpsb
stc
loop
dec
fmull
inc
inc
mov
ficoms
sbbl
inc
dec
rcr
pop
or
dec
sub
aad
sub
add
xchg
inc
push
out
adcb
sbb
addr16
out
sub
mov
popa
jno
xchg
or
clc
rcr
imul
in
ficompl
pop
js
push
jbe
dec
ret
xchg
cmp
sub
add
mov
aad
popa
stos
mov
test
out
mov
mov
rcrl
loopne
mul
push
add
pop
pushf
fst
aaa
or
cmp
outsl
jb
or
adc
jge
dec
push
xchg
cmc
addr16
mov
sub
sahf
shr
add
mov
cs
ret
mov
lock
cmpsl
test
mov
jp
xor
jge
sub
daa
andb
sbb
xor
aam
push
mov
pop
outsb
lock
and
mov
or
psrad
enter
jb,pn
popa
xchg
mov
call
aaa
jp
sbb
inc
adc
nop
jle
cmc
insb
pop
or
jae
jl
lods
mov
inc
arpl
aad
push
stos
sub
push
arpl
pop
jmp
sbb
xchg
inc
fcomp
xor
mov
movsb
xchg
mov
push
stos
test
sarl
insb
sub
rcrb
sbb
cmpsl
aaa
jp
jmp
nop
cld
cltd
inc
add
jb
andb
inc
ficoms
mov
sahf
sub
mov
arpl
cmp
mov
jne
mov
sub
mov
jae
jecxz
test
inc
pop
fisttps
outsb
push
push
int3
push
mov
push
mov
lret
jb
outsb
scas
mov
mov
push
aas
sub
faddl
movsb
xchg
adc
in
jno
xor
adcl
push
data16
inc
and
xchg
loop
outsb
inc
jns
shll
inc
fcmovnu
aad
rol
ja
ljmp
push
iret
popa
aam
enter
pop
inc
push
jg
or
pushf
lods
lock
pusha
jbe
outsb
sbb
cmp
mov
std
out
mov
push
stc
cmp
sub
xchg
and
lea
scas
sub
cld
daa
scas
mov
xor
push
clc
inc
adc
xor
mov
aas
mov
movsb
and
xor
in
outsb
scas
ret
jo
idivl
lcall
or
lret
mov
sbb
scas
push
cld
idivb
sahf
int3
or
jg
and
imul
sti
std
xor
or
pop
ds
pop
mov
and
ret
dec
stc
add
mov
xchg
sbb
sub
fs
xchg
mov
mov
push
xor
push
xchg
sahf
test
clc
leave
imul
cmpsb
test
lahf
mov
xor
mov
test
fstpt
xor
lahf
sahf
mov
push
xchg
or
ficoms
inc
das
cmc
mov
dec
hlt
in
mov
scas
aas
push
jl
or
mov
mov
and
add
push
inc
add
add
add
sbb
add
loopne
inc
add
add
add
adc
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
or
add
add
add
add
add
add
add
sbb
or
add
in
dec
inc
add
add
add
dec
inc
add
add
add
add
jo
inc
add
add
add
inc
add
add
add
inc
add
add
add
dec
inc
add
add
add
add
add
add
add
inc
add
add
add
dec
inc
add
add
clc
dec
inc
add
add
call
add
add
dec
inc
add
add
enter
cld
add
add
dec
inc
add
add
add
add
add
add
daa
addl
daa
addl
daa
addl
add
add
add
add
add
add
roll
add
and
and
and
and
and
and
and
and
and
sub
sub
sub
sub
sub
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
addl
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
movsb
add
add
jns
and
add
add
add
cmpsb
filds
add
add
add
add
add
add
add
cmp
add
add
mov
add
cmp
add
inc
incb
add
add
add
mov
add
cmp
add
inc
incb
add
add
add
mov
in
call
add
add
add
add
mov
add
add
push
ficompl
and
pop
fisubrl
xor
adc
add
xor
incb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
or
add
or
add
or
add
pop
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
adc
add
push
add
add
add
add
add
add
add
add
add
or
add
insb
add
add
add
add
add
add
add
sbb
add
jb
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
cmpsl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
or
add
add
or
add
and
add
cmp
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
xor
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
data16
add
add
add
js
insb
and
jb
imul
xor
and
arpl
imul
inc
sub
je
outsb
fs
insb
outsl
outsb
gs
and
ds
jae
insl
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
cmp
jb
jae
dec
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
or
and
cmp
arpl
imul
and
and
and
gs
gs
gs
jb
jbe
insb
gs
cmp
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
ds
jb
jno
gs
gs
jb
jbe
insb
gs
or
and
cmp
jae
arpl
imul
and
je
jne
je
outsb
outsw
ds
jae
gs
bound
add
