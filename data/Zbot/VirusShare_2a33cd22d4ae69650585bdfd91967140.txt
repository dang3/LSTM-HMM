push
mov
sub
push
push
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
pushl
shlb
pop
add
call
add
call
in
sub
push
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
pop
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
mov
push
pushl
pop
call
mov
pop
add
jmp
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
call
in
sub
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
push
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
add
jmp
jmp
ret
std
sub
mov
cld
add
mov
mov
shl
sub
mov
mov
movl
mov
cmp
je
sub
sub
je
sub
lea
mov
sub
jb
mov
sub
ja
push
pop
jbe
mov
popf
dec
call
add
call
in
sub
push
pushl
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
push
push
push
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
add
jmp
stos
call
in
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
push
pushl
push
call
add
pop
mov
pop
add
jmp
call
in
sub
push
pushl
pushl
push
push
call
add
pop
mov
pop
add
jmp
call
in
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
add
jmp
call
in
sub
push
push
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
call
in
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
push
push
push
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
pushl
push
push
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
call
in
sub
push
pushl
pushl
push
push
call
add
pop
mov
pop
add
jmp
call
in
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
call
in
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
add
jmp
call
in
sub
push
push
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
push
lea
push
lea
push
addl
lea
push
lea
push
pushl
decl
mov
add
call
pop
lea
sub
sub
mov
pop
mov
mov
lea
mov
push
mov
xorl
pop
sub
or
xor
cmp
je
sub
push
mov
push
push
pop
push
pop
stos
shr
stos
shr
stos
shr
stos
pop
pop
addl
neg
clc
sbb
pushl
lea
lea
pop
repz
jmp
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
add
jmp
stos
call
in
sub
push
pushl
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
call
in
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
add
jmp
stos
call
in
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
call
in
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
call
in
sub
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
stos
call
in
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
call
in
sub
push
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
call
in
sub
push
push
pushl
push
push
call
add
pop
mov
pop
add
jmp
stos
call
in
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
stos
call
in
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
add
jmp
call
in
sub
push
push
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
add
jmp
call
in
sub
push
push
push
call
add
pop
mov
pop
add
jmp
incl
call
and
add
add
scas
and
add
add
and
add
and
add
and
add
add
cld
and
add
and
add
and
add
add
mov
and
add
and
add
and
add
and
add
add
fisubl
add
add
add
test
add
shlb
add
dec
and
add
add
loopne
add
lods
and
add
add
shlb
add
and
add
and
add
and
add
add
add
add
push
and
add
add
inc
and
add
and
add
add
add
add
add
add
adc
add
and
add
add
add
push
add
add
add
add
and
add
add
mov
add
add
add
add
add
nop
and
add
add
add
add
jp
add
movsb
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
cld
and
add
and
add
and
add
add
mov
and
add
and
add
and
add
and
add
add
fisubl
add
add
add
test
add
shlb
add
dec
and
add
add
loopne
add
lods
and
add
add
shlb
add
and
add
and
add
and
add
add
add
add
push
and
add
add
inc
and
add
and
add
add
add
add
add
add
movsl
add
je
gs
imul
jge
dec
jo
outsb
dec
jne
gs
add
aad
inc
gs
gs
inc
imul
gs
jb
jbe
je
push
jb
imul
push
add
inc
imul
insl
gs
insb
outsl
jae
add
add
je
jne
jb
outsb
je
jb
arpl
jae
aam
inc
gs
jb
jbe
push
jns
gs
add
dec
outsl
arpl
dec
outsl
arpl
dec
add
insb
outsb
inc
add
data16
je
je
dec
popa
outsb
fs
add
repnz
imul
jb
je
arpl
add
aas
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
insb
outsl
jae
dec
popa
outsb
fs
gs
add
imul
outsb
je
outsl
insb
add
je
inc
jbe
outsb
je
add
roll
dec
gs
jo
jb
add
cmp
fs
imul
add
rolb
dec
gs
jo
gs
jb
jns
xchg
add
je
jne
jb
outsb
je
push
add
push
push
je
imul
inc
add
out
inc
gs
imul
bound
gs
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
ret
add
inc
jb
add
lods
add
gs
insb
inc
bound
je
add
gs
popa
insb
insb
outsl
arpl
push
add
addr16
arpl
jo
inc
imul
jne
insb
imul
outsl
outsb
add
add
inc
jb
add
adc
inc
insb
insb
push
outsb
jb
imul
jb
gs
sbb
inc
jb
addr16
jne
jb
inc
imul
push
push
gs
popa
addr16
outsl
js
add
mov
push
dec
inc
gs
gs
imul
inc
js
jb
arpl
outsl
outsb
inc
add
mov
inc
push
add
addr16
imul
push
dec
inc
dec
dec
xor
cs
insb
add
add
dec
dec
outsb
jae
popa
insb
insb
dec
inc
inc
inc
add
add
inc
gs
jbe
imul
imul
add
push
push
dec
dec
outsb
jae
popa
insb
insb
inc
jb
jbe
jb
add
add
dec
inc
outsl
outsb
imul
popa
push
outsl
jne
arpl
dec
inc
inc
inc
inc
push
xor
cs
insb
add
xor
jae
push
push
popa
je
add
push
pop
push
dec
inc
dec
inc
cs
insb
add
xor
ds
decb
adc
int
dec
cmp
sahf
push
jmp
enter
dec
adc
mov
testb
pop
popl
cmp
adc
dec
fisubrl
aas
dec
inc
inc
inc
out
inc
or
insb
outsl
pop
popf
popa
xor
mov
adc
in
jbe
adc
mov
ja
or
jmp
loope
push
test
push
xchg
cmp
xor
mov
lds
shll
jnp
ds
push
aad
sbb
lcall
mov
sbb
or
icebp
lcall
test
loopne
add
adc
data16
add
add
data16
pop
pop
xchg
cmp
or
push
adc
pop
jg
inc
cmp
in
sarl
add
cs
mov
push
cwtl
sbb
test
cwtl
and
test
mov
out
das
sub
mov
int3
sbb
and
mov
aaa
cmp
iret
push
sarb
cmpsb
lock
fwait
and
and
push
push
orb
shll
jg
mov
sarb
cmc
lea
in
push
mov
cmpsl
test
ret
mov
popa
xchg
mov
out
mov
aaa
inc
imul
jns
popf
pop
inc
xchg
pusha
xor
xchg
inc
cmpb
pop
jl
dec
dec
ret
enter
shll
int3
mov
cmp
rorb
rcl
dec
jns
add
es
or
xchg
mov
mov
iret
movsb
pop
subb
mov
ret
outsl
jnp
jbe
adc
loope
out
push
out
or
push
pop
idiv
pop
push
pop
cmpsl
imul
ret
js
jno
lods
jmp
add
add
add
add
xor
add
pop
add
add
add
add
add
jo
add
add
add
add
add
mov
add
mov
add
add
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
push
add
test
add
clc
jbe
add
add
add
add
add
or
add
xchg
add
add
add
sub
add
xor
add
sub
add
xor
add
pusha
add
add
add
add
add
add
add
add
push
sub
sub
xchg
xchg
xchg
add
scas
scas
scas
xor
mov
mov
mov
mov
mov
mov
mov
mov
lods
lods
lods
mov
mov
cltd
pop
xchg
xchg
xchg
or
jge
jp
jp
lods
stos
lods
add
cmpsl
test
mov
mov
mov
ret
les
into
int3
int3
rcl
in
rcl
shl
iret
ror
hlt
int
into
hlt
leave
leave
repz
enter
mov
mov
mov
lods
stos
lea
cltd
lcall
add
add
add
push
add
add
add
add
add
add
add
add
mov
lahf
add
mov
mov
mov
leave
leave
lret
not
rcl
cld
fcomp
fdivr
fcom
fdivr
xlat
fcom
aam
ror
sar
int
into
aad
rcl
sar
std
mov
mov
scas
iret
movsl
movsb
mov
dec
das
xor
and
add
push
add
add
add
add
add
add
add
add
stos
stos
lods
add
scas
sbb
mov
jnp
mov
sar
leave
leave
lret
call
ror
aad
fcom
call
fcom
call
dec
into
int3
dec
into
int
aad
aam
into
int3
int3
inc
mov
mov
ljmp
cmpsl
cmpsb
ljmp
pop
fs
or
add
aaa
add
add
add
pop
add
add
add
add
add
add
pop
pop
pop
add
inc
add
pop
add
push
or
inc
or
sbb
add
add
add
or
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
enter
int
call
rcl
call
xlat
xlat
fcom
call
aam
dec
into
into
dec
lret
int3
into
into
inc
mov
mov
mov
mov
cmpsb
test
jmp
lcall
and
and
add
inc
add
add
add
add
add
and
add
push
add
add
add
add
pop
pop
pop
add
bound
imul
push
imul
pop
fs
sbb
sub
cmp
cmp
and
adc
add
add
add
add
add
mov
pop
mov
mov
mov
mov
mov
mov
ret
enter
ror
call
call
aam
call
iret
iret
dec
leave
inc
ret
mov
mov
lods
scas
scas
jmp
pushf
cwtl
cwtl
cwtl
lcall
addl
add
add
add
cmp
add
das
add
add
add
add
add
adc
add
or
add
push
add
outsl
xor
jle
jge
jg
jno
jno
bound
mov
cmp
cmp
mov
outsl
jo
nop
popa
bound
inc
inc
inc
xor
add
add
add
add
movsb
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
leave
dec
lret
lret
dec
mov
mov
mov
ljmp
movsb
movsl
lcall
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
xchg
fwait
lcall
cmp
or
add
add
add
add
add
add
add
add
add
add
add
jo
outsb
add
pop
or
pusha
xchg
lea
incb
jl
jp
jl
jo
outsl
out
data16
data16
ret
jge
jns
jns
arpl
fs
inc
inc
cmp
sbb
sbb
adc
or
lods
lods
stos
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
cmpsb
cmpsb
cmpsl
lcall
nop
nop
incl
addl
xchg
xchg
xchg
lahf
mov
mov
mov
jp
jp
xor
xor
add
add
add
add
add
add
add
add
add
add
mov
push
push
addb
in
mov
incl
xchg
std
xchg
jle
jno
jb
jne
je
jge
jge
addl
xchg
data16
cmp
and
and
cmp
movsb
movsb
movsb
shrb
lods
lods
sti
lods
lods
lods
lods
lods
lods
stos
stos
test
std
cltd
lcall
mov
jle
jns
jns
jp
jp
mov
cwtl
mov
mov
sti
mov
mov
mov
mov
mov
lods
lods
stos
test
sbb
add
add
add
add
add
add
add
add
pop
pop
adc
mov
mov
xchg
xchg
xchg
incl
xchg
std
xchg
xchg
xchg
std
cwtl
xchg
xchg
stc
xchg
xchg
xchg
in
mov
or
lea
mov
pop
push
push
or
inc
inc
dec
insb
insl
insb
jl
xchg
leave
fwait
lcall
lcall
std
mov
mov
mov
mov
lea
fwait
jmp
scas
scas
mov
mov
mov
mov
mov
std
mov
mov
movsl
mov
jl
scas
test
add
pop
adc
scas
call
cltd
xchg
cwtl
incl
xchg
decb
xchg
pushf
popf
pushf
std
movsb
mov
mov
in
in
xchg
push
jne
or
add
inc
es
es
dec
dec
dec
data16
jno
mov
xchg
rclb
xchg
xchg
std
nop
nop
decb
xchg
lcall
cmpsb
cmpsl
ljmp
test
pushl
sahf
scas
mov
xchg
mov
mov
ljmp
mov
add
pop
pop
adc
scas
mov
lcall
mov
mov
mov
xchg
nop
nop
decl
xchg
xchg
pushf
sahf
pushf
movsl
mov
test
negl
jnp
movsl
push
push
push
outsl
dec
dec
dec
popaw
pusha
popa
jne
jae
mov
jge
test
int
nop
xchg
in
xchg
xchg
testl
mov
jmp
lahf
pushl
push
mov
dec
xchg
mov
sub
mov
cmpsb
mov
mov
lods
stos
mov
mov
add
mov
add
pusha
adc
mov
ljmp
pushf
decl
nop
call
xchg
xchg
call
xchg
xchg
lcall
lahf
sahf
mov
std
mov
cltd
lcall
xchg
xchg
les
cltd
in
xchg
cwtl
out
mov
xchg
stc
xchg
xchg
std
xchg
jb
fwait
push
test
mov
inc
jl
mov
jp
mov
jb
mov
insl
ljmp
adc
lods
or
ljmp
jle
mov
mov
stos
pushf
movsb
movsl
mov
add
pop
pop
adc
mov
ljmp
lahf
call
xchg
xchg
lcall
pushf
pushf
lcall
popf
sahf
lcall
xchg
cwtl
call
xchg
nop
call
lcall
lcall
popf
xchg
xchg
push
xchg
push
jle
xchg
dec
js
cltd
cmp
push
pushf
and
lahf
pop
jmp
adc
adc
lods
adc
stos
adc
lods
adc
mov
push
mov
push
mov
imul
jg,pt
rcrb
imull
mov
add
add
add
add
add
pop
pop
adc
mov
lcall
xchg
xchg
lcall
mov
movsl
jmp
mov
decl
mov
decl
lcall
xchg
push
jns
xchg
cmp
insb
decl
adc
xchg
or
call
add
cltd
add
sahf
add
ljmpw
outsb
pushl
jo
mov
and
and
rcrb
inc
inc
test
ret
mov
scas
scas
mov
mov
mov
add
add
add
mov
scas
add
pop
adc
scas
mov
shll
lcall
mov
cmpsb
jmp
stos
test
cmpsl
cmpsl
cmpsb
lcall
jg
decl
dec
jo
mov
push
xchg
popa
decl
adc
incl
push
push
incl
add
lea
push
decl
add
lcall
jmp
pop
jo
mov
ja
mov
sub
mov
sub
jg
cs
cs
inc
mov
enter
sarl
lret
movsl
dec
mov
movsb
movsl
add
push
push
adc
test
ljmp
sahf
jmp
test
stos
ljmp
mov
scas
scas
scas
jmp
jno
decl
or
incl
or
add
addb
incl
push
incl
add
xchg
add
xchg
add
fwait
add
mov
add
scas
adc
mov
ss
aaa
cmp
cmp
dec
cmp
call
cmp
mov
rorb
dec
mov
std
mov
mov
movsl
mov
mov
add
dec
dec
adc
cmpsb
ljmp
lahf
jmp
scas
scas
pushl
mov
pushl
mov
ljmp
ja
decl
push
decl
push
decl
or
add
push
decl
add
xchg
add
popf
add
mov
add
lods
add
pushl
cmp
dec
inc
call
inc
mov
rorl
call
dec
xchg
fmuls
fisttpl
fisttpll
ficoml
call
test
std
mov
mov
mov
lahf
sahf
or
add
add
add
add
inc
dec
adc
jp
movsb
popf
mov
jmp
test
pushl
mov
pushl
mov
mov
mov
jmp
outsb
decl
sbb
xchg
pop
pusha
decl
adc
mov
push
decl
add
xchg
add
pushf
add
add
test
pusha
ljmp
add
jns
int3
inc
call
push
xchg
fcoms
fsts
fistpl
jmp
push
sahf
fistps
jmp
pop
mov
jmp
pop
mov
dec
mov
mov
cmpsb
cmpsl
cmpsb
jne
lahf
lahf
or
xchg
xchg
cwtl
add
inc
adc
js
lahf
lcall
mov
lods
lods
pushl
mov
mov
mov
mov
ljmp
inc
jne
xchg
pop
call
and
xchg
and
sbb
or
call
add
cltd
add
mov
add
stos
add
mov
data16
mov
xor
call
pop
lcall
mov
jmp
cmpsl
jmp
data16
out
test
jmp
data16
ljmp
dec
mov
mov
mov
lahf
sahf
add
inc
aas
adc
jb
cltd
xchg
lcall
popf
lahf
ljmp
mov
pushl
mov
mov
mov
mov
jle
xchg
sub
fwait
outsb
lcall
sub
xchg
pop
callw
add
cltd
add
mov
add
lods
add
mov
pushw
adc
rolb
jmp
outsb
lods
jmp
outsl
lods
call
jb
in
jne
in
je
in
jbe
out
je
out
jb
jmp
mov
mov
cmpsb
test
lahf
sahf
mov
add
jle
ds
js
mov
sahf
lcall
mov
mov
mov
mov
mov
mov
cmpsl
scas
lcall
xor
sahf
aaa
jbe
mov
xor
cltd
sbb
pop
lcall
add
movsb
add
test
popa
pushl
add
mov
sbb
fistl
jmp
ja
call
jle
in
xorl
push
xchg
push
test
jmp
mov
inc
mov
test
daa
mov
lahf
mov
add
pop
add
ss
pop
pusha
push
jne
jg
out
test
xchg
xchg
xchg
pushl
mov
mov
inc
sarl
ret
pushl
insb
mov
fwait
cmp
movsb
inc
jle
movsb
inc
jge
mov
pop
arpl
xchg
add
popf
add
mov
add
scas
add
add
mov
add
shll
mov
in
mov
push
sar
xchg
sar
nop
sar
xchg
nop
ret
clc
xchg
pop
in
mov
fnstenv
clc
lods
lods
stos
mov
sahf
pushf
xor
sahf
sahf
add
add
add
inc
add
xor
push
inc
inc
inc
jb
pop
dec
in
imul
mov
mov
mov
mov
sar
ret
ret
inc
ret
ret
inc
mov
jge
lcall
dec
cmp
mov
adc
cltd
add
mov
add
lods
add
mov
mov
add
enter
xor
in
xchg
ret
push
fwait
push
lcall
negl
enter
lret
sahf
int3
cld
sahf
int3
sti
cwtl
lret
push
xchg
ret
fidivrs
enter
mov
sahf
lahf
sahf
aas
xchg
nop
xchg
add
add
add
add
cs
cmp
dec
jecxz
pusha
pusha
decl
mov
mov
mov
sar
ret
mov
inc
enter
mov
mov
ljmp
xchg
movsb
sub
lcall
jmp
add
mov
arpl
mov
add
leave
add
rorl
out
mov
push
movsl
int3
push
cmpsb
int3
stc
cmpsb
into
cli
cmpsl
sar
cld
movsl
into
cli
test
test
iret
std
test
push
popf
jmp
mov
lret
std
mov
mov
lahf
sahf
mov
add
fwait
cltd
add
add
add
xor
add
sub
or
inc
bound
pop
xlat
jae
jno
mov
rol
rol
mov
ret
inc
ret
mov
inc
leave
inc
rol
mov
test
movsl
push
test
lods
push
mov
scas
dec
xchg
lahf
sbb
pushf
add
movsl
add
lods
add
mov
fs
mov
add
int3
add
fadds
jb
loopne
jl
out
pop
test
negb
sar
cli
scas
cli
mov
sti
scas
sar
mov
mov
std
mov
std
mov
mov
mov
push
movsb
jmp
mov
call
lret
mov
mov
mov
xchg
xchg
or
add
add
xor
sbb
dec
outsb
outsl
outsb
mov
fcomp
jmp
fcomp
test
into
int3
dec
lret
lret
dec
lret
lret
dec
lret
lret
inc
leave
mov
scas
jmp
push
mov
lods
jge,pt
mov
add
add
mov
mov
add
iret
add
add
filds
je
call
jb
sti
scas
sar
cld
mov
std
mov
fdivr
cld
mov
fdivr
std
mov
fcos
mov
fcos
clc
mov
call
leave
into
mov
sahf
lahf
jo
xchg
xchg
or
add
add
xor
add
pop
pop
pop
or
enter
in
pop
out
out
jecxz
out
loop
jecxz
fstp
fsubp
fcmovu
fcomi
fdivr
aam
fdivr
into
ror
mov
push
cmp
sub
mov
add
mov
mov
add
leave
add
add
fldl
jne
in
jbe
in
xor
cld
mov
inc
inc
loope
inc
inc
loopne
std
dec
fdivrp
std
fdivrp
dec
std
lret
cli
mov
lret
lret
mov
mov
xchg
adc
add
add
incl
std
incb
incl
repz
or
out
jmp
jmp
out
sub
out
out
dec
jmp
ljmp
in
out
fucomi
ret
stc
lods
jo
test
js
mov
add
test
pop
pushl
add
movb
dec
add
xlat
add
add
call
inc
pushf
sti
mov
loop
cld
int3
jecxz
dec
out
dec
jecxz
dec
jecxz
dec
loope
std
int
dec
in
call
in
shl
std
shl
sti
fdivr
out
mov
fdivr
ret
cmpsl
cmpsl
mov
cwtl
xchg
add
add
add
incb
std
incl
cmc
idiv
add
hlt
lock
repnz
in
repnz
pop
out
repnz
cmp
out
out
pop
fsubp
loope
lds
xchg
sti
mov
add
pop
ljmp
add
rolb
inc
add
add
flds
jbe
in
jp
in
adc
pop
test
cld
shl
cld
shl
call
out
call
out
std
shl
std
aad
std
xlat
jmp
std
fucomi
fldl2t
shl
push
ret
aam
jecxz
fcos
lret
rep
test
xchg
and
cwtl
xchg
add
std
cld
add
cld
clc
add
sti
stc
add
div
or
aad
xor
mov
xchg
negb
add
add
scas
add
mov
add
lret
call
add
fildl
jne
out
js
out
sbb
cld
std
fsubr
fldpi
fldpi
fucomp
fucomi
fsubr
fucomip
jmp
in
std
fsubrp
std
aam
push
ret
aad
out
fdivr
ror
sar
lods
stos
stos
lods
xchg
xchg
xchg
jo,pn
outsl
add
add
mov
loope
add
leave
sbb
lods
jge
repnz
pop
lcallw
add
mov
mov
add
int3
add
add
fiadds
jae
ljmp
cld
pop
cld
shl
loopne
fsubr
fucomi
call
call
cld
shl
cld
iret
loopne
cli
iret
loopne
stc
iret
fdivrp
stc
int3
fdivr
test
lret
call
xlat
xlat
sti
mov
mov
fwait
cltd
fwait
cmp
cltd
lcall
add
add
fcom
add
leave
adc
lods
mov
jmp
add
mov
mov
add
iret
add
add
loopne
js
call
xor
cld
enter
lret
cli
fdivrp
idivl
aam
repz
iret
push
mov
into
jmp
mov
iret
std
call
shl
ljmp
in
mov
mov
xchg
add
add
add
into
lret
add
sarb
sahf
xor
jmp
add
mov
addr16
mov
add
int
jb
rorl
ficoml
ja
loope
cmp
dec
xchg
jmp
scas
lret
mov
out
leave
std
loop
cld
loopne
ret
mov
lock
int3
in
lret
shl
xlat
fcmovb
call
out
test
out
lock
call
lret
lret
push
lods
lods
lods
adc
test
cmpsl
add
ret
ret
rolb
ret
mov
stos
aam
dec
jg
sahf
sbb
cmpsl
push
insb
scas
and
mov
jns
mov
inc
test
ret
push
mov
leave
fs
test
mov
out
mov
mov
enter
lret
rcl
int3
mov
iret
shlb
rcl
jg
fcmovu
jb
loopne
gs
jecxz
out
jmp
xor
div
mulb
icebp
lock
sbb
or
mov
int3
add
add
add
roll
mov
les
push
lock
je
ljmp
mov
sarb
test
mov
pushf
lret
mov
leave
int3
jp
int3
iret
addr16
rcl
push
rcl
rorl
aad
aam
aam
fcmovnu
daa
fcomp
ficompl
fcoml
fsub
jecxz
loope
in
out
jmp
add
cld
testl
std
std
add
std
incl
mov
mov
mov
mov
stos
scas
xchg
mov
mov
mov
mov
rcll
lds
mov
daa
lret
rcl
and
aam
sbb
aam
adc
aam
or
fcom
push
rcr
fadds
add
loopne
add
in
add
jmp
add
fcom
add
incl
mov
mov
add
ret
vmovaps
mov
mov
push
ret
or
leave
movl
into
lret
aam
add
aad
rcl
aam
xlat
aam
aad
add
xlat
loope
fiaddl
loopne
loop
loopne
in
call
add
incb
std
add
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
sarb
les
mov
mov
mov
stos
test
dec
test
cmpsl
and
add
add
add
add
add
add
add
add
mov
mov
aam
ror
jmp
aad
cmc
aam
sar
iret
into
sar
int3
lret
int3
stc
int3
int3
lret
hlt
mov
mov
iret
lods
lods
stos
fwait
xchg
xchg
xchg
dec
ds
and
add
sbb
add
adc
add
push
add
add
addb
add
push
push
add
add
add
add
add
add
add
add
add
mov
inc
mov
rol
leave
enter
into
sar
xlat
call
xlat
call
iret
iret
dec
iret
into
dec
int3
int3
mov
mov
cld
stos
lods
stos
icebp
cwtl
xchg
cwtl
mov
or
or
add
add
add
add
add
add
add
add
add
add
jne
jne
je
jae
fs
dec
dec
dec
cmp
sub
sub
ss
dec
sub
inc
adc
sub
add
add
mov
mov
mov
mov
mov
mov
mov
int3
lret
call
rcl
call
aam
dec
lret
lret
mov
sarl
ljmp
sahf
lahf
xchg
xchg
xchg
jmp
outsl
jno
adc
add
xor
add
add
add
add
cmpb
jnp
jnp
test
jns
push
imul
imul
push
pop
pop
cmp
aaa
cmp
jo
jo
mov
scas
pop
mov
mov
mov
mov
mov
ret
mov
mov
mov
test
lcall
xchg
xchg
xchg
lcall
xchg
dec
dec
dec
dec
adc
wrmsr
add
add
add
add
add
pop
lcall
pop
fwait
xchg
lcall
addb
jnp
jge
jns
jp
jns
jnp
jns
jp
jae
jae
push
push
push
cmp
jne
pushf
sahf
sahf
mov
scas
scas
repz
lods
scas
sti
lods
scas
lods
std
cmpsl
cmpsl
test
call
xchg
call
mov
lods
jmp
scas
scas
leave
movsb
movsl
movsb
cltd
jae
jb
adc
adc
add
add
add
add
outsl
outsb
outsb
pop
xchg
mov
lahf
lcall
mov
sti
xchg
xchg
xchg
lock
xchg
fimuls
mov
jp
pop
and
inc
inc
dec
jo
outsb
orl
cwtl
repnz
xchg
xchg
std
mov
call
sahf
ljmp
test
mov
mov
mov
xlat
cmpsb
mov
addl
add
add
pusha
popa
pop
or
scas
mov
cmpsb
lahf
movsb
decl
lea
call
lahf
mov
negl
jle
stos
push
push
push
jo
pop
push
outsl
insb
outsb
insl
xchg
subl
nop
xchg
lock
mov
lcall
fwait
pushl
outsl
xchg
mov
mov
mov
mov
mov
mov
out
scas
stos
insl
test
add
add
add
add
pop
or
mov
in
movsb
test
call
xchg
lcall
cltd
cltd
cltd
popf
lcall
xchg
cwtl
jmp
xchg
xchg
aam
mov
out
xchg
ja
notb
pop
jg
popf
dec
jnp
movsb
inc
js
lods
ss
scas
sub
sbb
imul
sbb
mov
lods
mov
scas
scas
scas
jle
movsl
movsl
push
pop
popa
popa
or
mov
in
movsb
test
lcall
mov
lahf
call
mov
call
jb
cld
xchg
pop
cmp
dec
jns
cmp
xchg
sub
xchg
sbb
call
push
ljmp
sbb
sbb
sbb
mov
and
pop
xchg
mov
lods
scas
xchg
lahf
popf
lahf
adc
add
add
pusha
pop
pop
or
mov
stos
mov
mov
ljmp
test
lcall
pop
jp
mov
imul
sub
decl
adc
xchg
push
decl
add
xchg
add
popf
add
cmpsb
or
and
mov
sub
jle
leave
xor
dec
pop
cwtl
inc
test
divl
cmpsl
test
popa
pop
popa
or
movsb
stos
in
mov
test
mov
scas
pushl
mov
jmp
jo
mov
pop
decl
or
add
push
call
add
mov
add
mov
outsb
inc
cmp
into
inc
mov
aam
call
inc
nop
flds
call
arpl
stc
mov
mov
movsl
movsl
movsb
daa
std
std
incb
add
add
popa
pusha
popa
or
mov
ljmp
mov
pushl
mov
ljmp
push
jge
sbb
pusha
decl
or
push
call
pop
jmp
add
jbe
rorl
fcomps
fcompl
ficomps
jmp
pop
mov
fisubrs
dec
cmpsb
mov
ret
cmpsl
xor
add
add
dec
pop
jge
jl
popf
cwtl
cwtl
jecxz
lahf
mov
pushl
mov
mov
jmp
cs
lcall
and
xchg
adc
xchg
add
sahf
add
test
pusha
ljmp
or
lret
xor
loope
test
in
stos
ljmp
out
jno
call
test
mov
inc
cmpb
add
add
dec
dec
dec
pop
insl
insl
push
mov
xchg
pushl
mov
mov
mov
je
lcall
cmp
pushf
sub
call
add
mov
add
mov
fs
or
dec
xchg
jmp
js
jmp
test
push
xchg
push
mov
mov
test
push
cltd
lcall
sub
sub
push
push
dec
pop
addr16
loopne
mov
mov
mov
ret
mov
mov
cmpsl
inc
jg
mov
push
pop
jmp
add
mov
fs
mov
push
jne
fbld
out
pop
push
xchg
ret
push
cwtl
cltd
stc
lcall
notl
inc
mov
lods
popa
lahf
lahf
mov
add
inc
inc
pop
pop
pop
pop
fisttpl
mov
mov
ret
inc
ret
pushl
pop
xchg
lods
dec
cmp
and
lahf
add
ljmp
add
mov
add
fldenv
cmp
hlt
movsb
int
imull
iret
cld
stos
sar
std
stos
sar
std
stos
sar
stc
cmpsl
int
call
rol
stos
stos
test
or
add
add
dec
push
push
aaa
jae
jb
stos
test
into
out
int
cmc
lret
sti
leave
leave
lret
enter
movsb
mov
stos
pusha
mov
lods
inc
cmp
adc
test
add
roll
dec
add
fildl
push
xchg
cld
mov
std
mov
xlat
mov
mov
sar
jmp
lret
rol
scas
lods
lods
mov
add
add
add
add
pop
or
aad
dec
loope
loopne
loope
fcmovnu
fcmovnb
fcmovnu
aad
xlat
out
shlb
test
jae
cmpsb
pop
pop
ljmp
add
lret
call
add
in
jp
icebp
dec
mov
cld
inc
loope
std
enter
fdivrp
std
leave
dec
loopne
std
fdivr
out
mov
leave
divb
popf
sahf
sbb
add
add
incb
std
incl
jmp
out
sbb
in
in
xor
loop
in
les
mov
mov
add
pushl
add
int
insl
fildl
jne
ljmp
cld
ret
cld
shl
call
in
std
shl
shl
call
out
call
out
cld
shl
push
enter
int
stc
mov
mov
and
add
add
std
add
incb
std
cld
std
pop
aam
push
mov
pop
mov
popf
or
test
pop
pushl
add
rolb
jno
loopne
jbe
in
and
std
shl
fucompp
cld
fsubr
std
fldl2t
std
xlat
out
std
fsubr
cld
aad
push
jmp
rcl
sti
mov
lahf
lahf
das
add
add
into
into
into
or
bound
ljmp
add
movl
jae
loopne
js
out
xor
stc
int3
loopne
clc
lret
test
repnz
aad
icebp
rcl
lock
sar
in
aad
out
aam
jmp
shl
in
fucomp
enter
test
stos
das
std
std
add
add
add
aam
push
mov
jb
or
imul
sbb
int
jge
xlat
cs
fists
clc
in
mov
out
in
leave
jmp
fnstsw
int3
leave
loopne
sarl
in
fistpl
in
out
jns
rcl
dec
mov
add
add
mov
inc
scas
xchg
movsb
les
pop
xchg
mov
xchg
fidivrl
jg
rol
stos
mov
mov
ret
nop
rol
enter
int
aam
iret
pop
rcl
rorl
cmp
loopne
das
in
frstor
loop
lock
in
in
or
std
incl
std
incl
mov
mov
outsb
mov
lods
jns
mov
mov
mov
mov
xor
enter
rcl
rcll
rol
adc
rcl
or
loope
or
int
add
std
incl
incl
lcall
shufps
or
int3
int
add
std
std
add
add
add
add
add
lock
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
cltd
cltd
fwait
add
rol
mov
leave
mov
ret
mov
scas
scas
mov
stos
stos
stos
xor
je
add
add
add
add
add
add
add
add
add
add
add
add
lods
stos
stos
add
mov
enter
sar
aam
rcl
sar
int
iret
std
vshufps
mov
test
jle
andb
pop
add
add
add
add
add
add
add
add
jno
jno
push
dec
dec
das
das
sub
inc
and
add
add
mov
mov
cmpl
dec
into
int3
call
rcl
dec
into
into
inc
enter
mov
lods
jmp
mov
push
add
add
add
add
je
jae
xchg
aad
outsl
outsl
ret
bound
outsl
insl
insl
jb
pusha
popa
cmp
pusha
sbb
mov
in
mov
mov
mov
lods
stos
lcall
xchg
xchg
lcall
cwtl
cltd
lds
jae
daa
es
add
add
add
add
jb
je
popf
xchg
lcall
test
clc
mov
or
test
push
dec
push
inc
mov
fwait
into
mov
mov
xchg
decb
lea
scas
test
mov
mov
mov
xchg
xchg
xchg
aas
sub
sub
add
add
jg
adcb
mov
cmpsb
cld
mov
xchg
xchg
xchg
cld
pushf
popf
sahf
cmc
lcall
mov
push
push
imul
jg
mov
notl
mov
mov
lcall
jno
mov
mov
test
lods
stos
add
add
add
test
lods
cld
xchg
xchg
xchg
call
lcall
cltd
cltd
cltd
std
xchg
xchg
xchg
out
xchg
mov
loope
jne
out
xchg
bound
std
pushf
inc
jbe
cmpsl
cmp
scas
sub
pushl
sbb
ss
mov
mov
imul
int
add
add
test
pop
lods
movsl
stos
test
lahf
popf
popf
jmp
movsb
movsb
call
push
js
nop
inc
jb
mov
push
mov
call
or
mov
push
outsb
pushl
es
ret
inc
aas
test
mov
mov
subl
jne
push
mov
movsb
test
test
scas
scas
pushl
mov
decl
or
mov
push
decl
pop
jmp
adc
ret
dec
inc
mov
rolb
call
inc
call
push
xchg
dec
lcall
movsl
movsl
movsl
push
add
add
imul
test
mov
lods
pushl
mov
movsl
call
arpl
pop
pop
call
add
mov
add
mov
push
xchg
fstpl
fistps
jmp
pusha
mov
call
fwait
mov
test
cmpsl
cmpsb
pop
add
add
bound
adc
pushf
fwait
lcall
mov
mov
lcall
xor
cwtl
and
xchg
push
pop
lcall
add
mov
xor
jmp
jns
in
jnp
out
jl
push
jle
ficompl
mov
and
add
add
adc
imul
mov
mov
mov
ret
sar
mov
jmp
inc
jge
mov
add
pusha
pushl
outsb
fmull
in
lea
notb
clc
xchg
jmp
movsl
inc
mov
movsl
sub
inc
inc
inc
adc
push
xchg
xchg
cld
ret
inc
ret
mov
xchg
ljmp
pop
jmp
pushl
imul
adc
ljmp
cli
stos
sar
cli
lods
sar
std
scas
sar
scas
sar
ljmp
fldenv
incb
xor
xor
mov
mov
aad
aam
aam
aad
rcl
shr
leave
leave
leave
cli
mov
mov
jmp
add
add
aad
jae
call
mov
std
mov
cld
ret
cld
ret
inc
fcos
icebp
mov
ret
cmpsl
test
add
add
add
in
or
jmp
out
outsb
fcmovu
movsl
daa
insl
ljmp
add
lret
fiadds
ja
out
aaa
xchg
cli
mov
dec
in
shl
call
in
aad
shl
push
ror
int
scas
scas
scas
popa
jg
addb
add
std
incb
incb
lret
int
sub
mov
add
mov
add
loope
jp
hlt
push
movsl
std
enter
jmp
cld
aad
std
aad
stc
shl
push
fsin
fcmove
shl
mov
mov
xchg
xchg
xchg
pop
mov
mov
cld
lods
add
insb
dec
push
jne
ficomps
cmp
lock
shl
jmp
rcl
jmp
lret
aad
ljmp
scas
ret
ret
ret
push
fwait
cltd
cltd
add
rol
or
popf
stos
xchg
and
shlb
int3
ja
mov
mov
lret
vmovdqu
lret
into
pop
xlat
dec
in
fistpll
out
call
sbb
rol
add
mov
cmp
mov
scas
push
mov
mov
les
lds
ret
sbb
bswap
int
or
aad
std
std
incb
addb
add
add
add
mov
add
std
add
add
add
addb
movl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
xor
fwait
loope
int
mov
xchg
and
sbb
mov
xchg
cmp
lds
adc
lock
test
lret
ja
push
push
call
mov
fbstp
cmp
xor
push
add
loope
push
xchg
test
lret
sti
jge
loopne
sbb
rorl
incb
outsl
pop
icebp
mov
sarl
je
cmp
mov
dec
cltd
sbb
ja
mov
xchg
lahf
or
sbb
icebp
pusha
adc
inc
mov
pop
lock
add
in
mov
push
call
or
and
pop
mov
mov
cmpsl
ds
imul
add
mov
push
montmul
cmpsb
xchg
add
fiaddl
mov
sti
dec
loop
lcall
jg
pop
repnz
jns,pt
jo
movsl
cmp
xchg
xchg
les
pop
jns
mov
pop
fwait
loope
int
shrl
test
lods
xchg
adc
enter
sbb
aam
fsubrs
idiv
xchg
daa
push
lea
adc
out
pop
xor
dec
repnz
push
call
inc
mov
add
inc
mov
lods
inc
xchg
mov
mov
ficomps
adc
call
xchg
arpl
popf
pushf
test
mov
lods
and
cmp
pop
add
lret
push
in
pop
push
push
call
adc
outsb
add
sub
inc
fidivrl
stos
inc
or
pop
popf
or
cmp
out
lock
jle
adc
xor
arpl
mov
xor
push
fnstenv
xchg
pop
test
in
sbb
aad
das
sub
lcall
and
ror
aas
add
cmpsl
ds
pop
hlt
push
inc
lds
popa
clc
jns
cmpsl
mov
rol
pop
add
sahf
jl
jecxz
pop
popf
and
cwtl
stos
out
inc
mov
frstor
mov
decb
mov
push
popa
sub
pop
mov
mov
int
ljmp
es
xor
insb
negb
mov
dec
dec
out
ss
into
data16
push
in
mov
fidivl
or
cmpb
out
pushf
pop
sahf
int
insl
add
out
and
and
inc
fidivl
test
clc
les
pop
stos
in
push
pop
int3
in
cmp
fwait
push
mov
mov
adc
inc
xlat
cmc
xor
mov
pop
testb
lods
mov
jge
lcall
xor
sub
pop
push
inc
jp
push
lods
fsubrs
int
and
mov
out
lods
inc
push
or
popa
movsl
pop
xor
mov
call
call
dec
outsl
push
xor
popf
push
lea
mov
stos
inc
adc
inc
test
pop
xchg
dec
out
jl
sahf
xor
into
or
mov
popl
fdivs
stc
nop
loop
pop
test
sbb
pop
push
ss
cmp
jmp
mov
or
xlat
outsb
adc
daa
xorb
mov
inc
roll
int3
arpl
fdivs
enter
cmpl
or
scas
in
es
add
test
stc
ret
jbe
pop
test
adcb
lret
cld
aaa
sahf
xor
dec
mov
mov
ret
repz
bound
testb
lods
mov
jge
cwtl
aad
lret
push
mov
push
jmp
aas
jns
pop
lods
in
mov
mov
jg
jno
in
push
sbb
test
jbe
andl
add
push
cmp
sub
adc
arpl
je
inc
test
je
jns
or
cmpsl
test
inc
ficoms
je
mov
je
inc
test
jne
jecxz
or
push
movsl
scas
add
inc
jle
cmp
js
fildll
cwtl
das
cmpsl
sarl
dec
jmp
jno
pop
push
mov
xchg
leave
sub
movsb
cmc
and
popl
fsubrs
push
push
hlt
mov
stc
nop
inc
push
es
inc
ficoms
mov
add
lods
stos
inc
fiaddl
mov
xor
leave
pusha
sub
inc
fistl
cli
pop
imulb
add
mov
sub
mov
jnp
hlt
call
sbb
popa
clc
xor
xchg
sub
cwtl
sbb
aas
or
hlt
mov
mov
loope
jno
sbb
or
clc
jmp
aaa
into
pop
adc
inc
lret
adc
add
dec
loopne
sbb
xchg
sti
fiaddl
sahf
or
test
jge
mov
mov
fistpl
mov
cmp
shrb
fimull
ja
jmp
outsl
push
or
pop
jne
in
push
mov
xchg
sub
jb
adc
ror
hlt
mov
inc
int
jbe
cli
xchg
pop
mov
ds
inc
cmp
jno
es
fdivl
push
out
jns
cld
xchg
insl
mov
nop
in
test
icebp
xor
jb
sub
rorb
hlt
int3
js
add
ret
pop
inc
shrl
rorb
jp
adc
mov
add
adc
aad
add
sarb
hlt
mov
add
jle
hlt
pop
hlt
sub
sti
xchg
adc
pop
hlt
and
movl
cmp
or
fnstenv
sbb
stos
push
jecxz
dec
adc
adc
jns
sub
je
out
mov
add
lea
adc
xchg
inc
out
or
or
fs
inc
sbb
push
add
mov
adc
jbe
push
sarl
aaa
repz
jae
and
jecxz
fisubrl
or
mov
sti
sbb
lcall
xchg
sub
mov
mov
push
xor
mov
shl
add
arpl
push
mov
lods
xchg
push
test
int
stos
fs
fsts
mov
test
mov
ja
jne
pop
test
scas
inc
lahf
push
hlt
mov
xchg
stos
inc
ret
mov
jg
fidivs
mov
aad
jno
out
sub
repnz
mov
fsubrs
pop
das
movb
andb
xchg
mov
push
out
in
mul
jnp
adc
sbb
shr
xchg
cwtl
mov
jg
ljmp
cmp
pushf
xor
out
jbe
jmp
loope
cmp
xchg
insb
add
mov
out
mov
pop
add
pusha
divl
ljmp
and
dec
loopne
sti
mov
sub
out
xchg
mulb
es
stos
inc
ss
mov
xchg
sbb
jbe
pop
or
je
add
xor
push
out
adc
fnstenv
adc
mov
add
cltd
xor
into
gs
adcb
adc
je
loopne
test
or
mov
jne
push
lods
pop
lods
jmp
loope
sub
cmp
push
call
nop
stos
out
fisttpl
mov
mov
loope
sbb
shrb
popf
xor
mov
lret
loope
stos
xor
bound
jle
mov
jns
stos
xor
lret
aas
mov
jp
and
xor
push
cli
cmpl
dec
fsubrp
xchg
outsl
adc
shlb
or
mov
fsubl
add
mov
cmp
mov
leave
xchg
xor
shlb
addr16
pop
jo
add
push
push
push
pop
push
xchg
push
pop
test
mov
mov
inc
pop
sub
push
movsl
pop
dec
test
mov
fnstenv
cli
pop
xor
lods
std
push
shrb
sbb
cmc
mov
outsl
mov
mov
mov
aam
test
mov
movsl
cmp
rcrb
sbb
movsb
mov
ja
xor
xor
push
inc
pop
mov
dec
fs
shr
fstpt
jo
cs
out
push
ret
dec
jnp
and
sbb
gs
mov
sbb
fimuls
push
data16
pop
hlt
test
mov
mov
jns
imul
lahf
sub
shlb
mov
push
pop
pop
repnz
ficompl
mov
mov
sbb
jno
mov
mov
jle
fisubrl
jb
push
mov
les
jl
sbb
push
mov
das
mov
rorb
push
lahf
into
lds
mov
add
stos
in
mov
mov
or
sbb
lcall
imul
scas
push
out
test
stos
pop
loopne
insl
loop
je
fiadds
inc
inc
lret
add
and
into
outsl
es
gs
sbb
xor
ret
cld
test
and
rorl
out
inc
pop
jb
inc
mov
jns
xchg
fsubl
xchg
dec
push
into
push
cmp
subb
jl
repnz
loopne
add
loope
rcrb
inc
fdivl
les
sub
lret
and
pop
lret
sarl
push
lods
adcb
cmpsl
in
mov
push
jbe
mov
stos
xlat
cmp
pop
mov
push
dec
scas
ss
and
ss
sbb
cs
mov
sub
mov
add
dec
and
sbb
jg
repnz
sbb
sub
pop
ja
xchg
mov
fisubl
hlt
sub
and
stos
aas
mov
in
ret
imul
mov
inc
pop
addr16
dec
dec
inc
loopne
cmp
cmp
push
inc
les
dec
into
pop
test
jne
dec
and
hlt
push
pop
scas
xchg
add
or
push
fisttpl
test
out
add
jecxz
cmpsb
cmc
rorb
jecxz
lret
out
pop
xor
xchg
arpl
push
mov
test
out
xchg
xor
xchg
mov
bound
adc
cmpsl
mov
shll
int3
test
or
dec
and
cwtl
hlt
xor
pop
movsl
test
in
insl
xchg
dec
pop
push
xor
daa
cmpb
xor
sbb
sub
jge
sbbb
mov
sbbb
int
aad
addr16
out
mov
mov
icebp
dec
lcall
mov
aad
mov
sbb
call
jno
into
xor
mov
jo
mov
add
loop
mov
pop
cmp
mov
ljmp
sarb
pop
loopne
inc
out
jno
lret
gs
sbb
rorb
inc
sbb
cmp
lahf
imul
push
xor
adc
sbb
movsl
jo
xor
and
push
daa
cmp
fs
in
in
mov
xchg
cs
mov
popa
mov
cmp
imul
call
in
xchg
inc
jns
jnp
sub
aaa
mov
arpl
outsl
subl
dec
cmp
xor
lahf
dec
sarl
sub
jge
fbstp
sahf
add
iret
sar
mov
add
add
scas
cwtl
lahf
gs
lret
mov
jae
loope
inc
xlat
testl
jg
lea
jnp
scas
cltd
xor
mov
pop
scas
mov
or
enter
sub
sub
fwait
dec
fs
cmp
orb
adc
cs
fistpll
pop
mov
pop
lock
push
jg
orb
fistpll
movsb
sahf
xor
adc
mov
mov
or
fsubrs
call
add
add
or
nop
daa
idivl
xor
mov
scas
inc
xor
int
mov
add
test
sbbb
mov
or
sub
mov
nop
lock
fdivr
mov
fs
pop
sbb
sti
js
sbb
mov
aaa
into
iret
push
out
call
outsb
add
movsl
lods
mov
int
xchg
sti
test
sbb
fstpl
ret
mov
lret
das
ljmp
jnp
xor
inc
xchg
xchg
hlt
or
cmp
sbb
ret
pop
dec
in
and
popa
loope
fwait
pop
mov
xchg
ficoml
outsb
sti
hlt
sbb
cltd
xchg
icebp
cmp
mov
pop
icebp
inc
mov
ret
or
vmread
dec
loope
xchg
xchg
sub
cltd
stc
mov
out
xchg
ds
xchg
sub
pop
icebp
mov
dec
mov
fsub
js
adc
push
or
xchg
jnp
clc
mov
lret
sbb
sub
cwtl
xor
xor
mov
loope
cmpl
jno
mov
clc
scas
aas
xchg
sub
enter
sti
pop
mov
xor
and
in
cmp
jmp
imul
mov
dec
and
inc
mov
lret
add
js
jecxz
call
cs
pop
out
les
pmulhw
loop
in
addl
mov
and
inc
dec
aas
subb
sbb
dec
loope
ss
jno
js
mov
int3
xchg
sub
mov
rclb
aad
adc
jne
cmp
mov
out
test
adc
clc
movsl
das
fcoml
sub
shl
dec
in
stc
dec
loopne
push
insb
add
push
pop
sahf
xor
mov
jb
and
push
mov
xor
jo
mov
testl
out
and
lret
aaa
fstpt
jmp
jns
jo
lods
lahf
jmp
and
mov
lods
inc
inc
xlat
adc
mov
xor
pop
mov
pusha
testl
jle
push
jl
mov
loopne
inc
fidivl
loopne
clc
adc
jg,pt
pop
fs
cwtl
jbe
and
shl
out
stos
inc
iret
adc
or
leave
pusha
pop
cs
fdivrs
jle
xchg
pop
divb
add
adc
add
mov
mov
fldcw
mull
pop
lods
dec
jle
dec
int3
shrl
push
lock
mov
push
fnstenv
sbb
mov
fsubrs
test
roll
testb
nop
adc
push
cmp
or
pop
and
out
into
ret
pop
aas
sarb
pop
shlb
ds
cs
je
test
push
mov
mov
mov
cmpsl
shrl
mov
rorl
icebp
mov
aas
lods
cmp
shufps
movsb
sbb
int
pop
lea
add
imul
mov
sub
mov
test
cmp
push
push
lds
inc
xlat
sti
ja
jp
adc
not
movl
adc
aad
mov
push
cmp
inc
int3
xchg
mov
in
fidivl
push
cmp
push
clc
pop
test
mov
aad
or
sti
dec
xchg
sub
stc
les
pop
xor
mov
xchg
push
lods
inc
cld
mov
fbstp
cmp
shll
std
xchg
xchg
pop
dec
fbstp
or
std
loope
sub
leave
or
loopne
push
mov
jp
rcrl
and
jbe
sbb
xor
andb
out
mov
sahf
jmp
outsl
push
or
mov
sbbb
test
shll
push
fnstenv
sbb
sbb
test
and
push
inc
movl
xchg
cli
xchg
mov
aam
scas
testb
pop
aaa
into
push
adcb
adc
outsl
lret
aam
or
in
lea
xchg
sub
bound
addr16
scas
inc
push
nop
inc
fldenv
push
call
mov
jo
cmc
loopne
lods
push
adc
xor
inc
lret
mov
jmp
imul
sahf
dec
mov
pop
mov
inc
fisttpl
or
bound
jmp
or
ret
loopne
and
push
loop
inc
or
jne
add
jle
cld
xchg
pop
cwtl
adcb
jnp
mov
es
mov
movsl
xor
lret
lds
push
call
jne
adcb
sahf
add
out
add
mov
aad
aad
jae
outsb
pop
repz
adc
daa
or
jnp
adc
loopne
xor
cmp
pop
popa
clc
bound
orb
test
inc
cli
xor
loope
mov
out
jmp
pusha
out
push
insl
add
or
jg
fwait
lret
ficompl
mov
jmp
test
pop
or
mov
leave
pop
notb
mov
stc
faddl
adcb
leave
test
xor
mov
mov
push
push
hlt
out
xchg
stc
nop
cltd
jge
mov
mov
scas
int
cmp
add
xor
out
xor
lods
pushl
xor
jno
notl
aaa
and
test
lea
fdivs
xlat
outsb
push
mov
cmc
mov
add
jle
stos
nop
xor
enter
inc
mov
lret
pop
popf
outsb
add
push
out
and
xor
inc
pop
stos
inc
xchg
arpl
mov
mov
ds
loopne
jge
adc
dec
add
xchg
ret
mov
int3
mov
ja
inc
fmuls
mov
mov
sub
jge
sbb
push
xor
xchg
adc
test
mov
lods
pop
rolb
ret
in
adc
loopne
cmp
lcall
and
push
sbb
inc
js
sub
pop
cmc
test
mov
dec
ret
ret
imul
dec
in
lcall
sub
test
fdivrl
hlt
mov
inc
adc
call
movl
xchg
mov
rsqrtps
xchg
sub
or
sbb
or
ss
lock
push
jmp
orb
hlt
push
jb
in
sub
cmp
mov
imul
xor
xchg
sbb
jle
xor
mov
jl
pop
mov
adc
fcoml
xor
int3
cmc
call
inc
sbb
mov
gs
fs
rcrl
mov
test
loopne
cmp
adc
pop
idivl
push
in
gs
outsb
test
je
fcmovnb
cmc
mov
lret
jle
mov
cmp
into
gs
iret
pop
test
in
sub
jge
cmpsl
add
mov
lock
cmpsb
cmp
mulb
mov
sbbl
aad
inc
mov
xor
mov
test
out
push
sbb
aas
aad
aas
pop
pusha
inc
dec
hlt
jno
int3
arpl
roll
cwtl
shl
enter
mov
push
mov
shlb
out
repnz
imul
mov
jne
xchg
cltd
das
dec
out
xorb
ret
jb
push
and
mulb
push
adc
dec
arpl
nop
mov
and
mov
add
add
aaa
cli
pop
loop
mov
call
fldl
lods
sub
xor
add
lds
mov
je
stos
cmc
jo
daa
int
and
dec
mov
xor
inc
je
sbbb
sbb
sbb
cmc
add
lds
inc
xlat
sbb
imul
cmp
xor
shlb
iret
xchg
lea
mov
fs
push
or
ds
sub
and
add
stos
inc
out
mov
mov
fdiv
fiadds
daa
fidivl
test
inc
mov
add
and
imul
pop
testl
jl
xchg
push
daa
pop
xchg
inc
mov
adc
repz
sub
ror
ret
jae
xchg
push
dec
jnp
and
pop
icebp
ja
ljmp
outsl
sbb
out
xor
in
jbe
adc
call
cmp
jmp
jle
es
test
push
stc
push
mov
pushw
and
xchg
cmp
xchg
sarb
aaa
fdiv
jno
xor
cmpsb
gs
cmpsb
sbb
inc
lret
xchg
mov
pop
pop
cs
sbb
dec
xorb
add
bound
bound
sub
aaa
bound
sub
test
loope
dec
and
icebp
mov
adc
js
in
scas
push
fiadds
lahf
clc
lock
xchg
das
cmp
sbb
cmc
into
inc
pop
sub
shll
xchg
mov
jns
repz
lods
sbb
xor
or
mov
or
rolb
loop
cs
dec
mov
adc
push
and
insb
xchg
imul
pop
bound
leave
and
sbb
insb
dec
loopne
and
pop
adc
lret
orb
adc
lahf
cmp
les
jmp
inc
pop
mov
sub
sbb
imul
pop
xchg
or
mov
push
out
jae
cmp
sti
test
pusha
xchg
in
out
out
imul
mov
test
repnz
and
sub
fmul
cmc
or
push
mov
bound
sbb
filds
adc
push
cmp
dec
aam
pusha
lds
fidivl
out
std
cmpsb
out
pop
ja
xor
jp
imulb
inc
push
pop
cmp
mov
dec
cmc
shrb
cmpsl
or
or
std
pop
add
sub
adc
pushf
imul
cmp
test
pop
mov
stos
in
leave
sti
add
and
mov
pop
sub
mov
mov
dec
mov
mov
scas
jmp
mov
inc
push
lahf
popa
dec
adcl
cli
insl
daa
xorb
test
xor
test
inc
xchg
gs
jbe
repz
and
repz
negl
xorl
out
cmp
daa
imul
rorl
or
stos
mov
pushf
cmp
push
jmp
push
ljmp
aaa
stos
roll
lock
leave
sarb
ret
mul
nop
jb
decl
fisttps
cltd
ja
add
bound
pusha
and
xor
xlat
dec
push
in
daa
enter
loope
aaa
ja
push
scas
js
dec
stos
sub
jge
jnp
cltd
dec
xchg
adc
sub
pop
cld
je
mov
jnp
cmpsb
testl
mov
addl
jne
dec
and
xchg
cmp
mov
stos
clc
shrb
dec
add
adc
mov
mov
jo
std
add
mov
or
cmp
aaa
xor
or
cmp
sahf
dec
inc
clc
pop
sub
pop
scas
cmp
sub
fs
nop
jb
sub
cli
outsl
rcl
adc
in
loop
and
sbb
sbb
push
jp
loopne
inc
mov
xchg
int3
cmp
or
pop
xchg
or
es
fs
fidivrl
mov
cmp
and
add
lods
mov
mov
mov
xor
aam
adc
std
or
pop
ja
scas
test
and
cld
lock
adc
dec
adc
xlat
mov
inc
xchg
cmp
sti
or
or
xchg
and
test
xlat
insl
jmp
fisubs
and
dec
jl
xorl
push
mov
or
shll
decl
enter
pop
xchg
inc
in
clc
pop
adc
inc
lea
in
push
xorl
orl
lahf
or
scas
mov
fucomip
adc
inc
jne
jg
fsts
jge
xchg
ret
mov
pop
cli
xchg
xchg
push
or
cmp
scas
xchg
icebp
xchg
mov
call
adc
and
push
adc
out
fwait
std
cmc
insb
movsb
xlat
negb
stos
rclb
jbe
int
lods
or
pushf
arpl
scas
mov
bound
xchg
lds
and
adc
vpcmpeqw
jg
jmp
xchg
mov
fldcw
push
cwtl
mov
mov
in
scas
out
dec
jae
cmp
mov
clc
shlb
xchg
test
pushl
icebp
das
inc
or
add
push
out
xor
fnstcw
in
mov
ss
or
pop
and
cmp
adcl
cmpb
dec
jnp
or
shrl
ljmp
mov
cmp
ds
in
ret
jg
and
xchg
pop
add
mov
sub
push
jle
inc
stos
mov
pop
lahf
in
jnp
mov
or
pop
es
outsb
cwtl
lods
sub
xchg
mov
cmp
ret
jge,pn
mov
icebp
cli
fiaddl
in
daa
inc
jae
loopne
push
js
push
xor
nop
into
call
sbbb
push
cli
rclb
inc
xchg
outsb
pop
int
and
push
add
pop
ljmp
dec
in
cmp
mov
dec
das
bound
inc
and
sub
addr16
push
lods
cli
fbld
popa
out
daa
mov
push
test
mov
jle
mov
aam
aaa
adc
mov
xor
pop
cli
out
jbe
inc
cmp
jg
repz
mov
dec
rol
push
xchg
rorb
and
call
jnp
lret
popl
cmp
xchg
cmpsl
mov
jl
pop
push
or
ljmp
jmp
mov
push
ljmp
xor
inc
and
adcl
insb
or
sahf
xchg
shlb
aas
test
and
xor
jmp
imul
test
call
out
cmpl
test
cmp
repnz
push
mov
ds
dec
cmp
fnsave
lahf
sbb
xchg
stos
mov
mov
dec
roll
pop
sbb
dec
incl
push
or
mov
xor
rcll
dec
stos
inc
inc
xor
push
addb
mov
ja
jae
jae
xchg
push
sbb
add
aad
lock
jb
data16
lret
loope
jmp
movl
in
inc
adc
mov
and
xor
in
mov
pop
cmpsb
push
bound
iret
clc
mov
repnz
cmp
add
repnz
shll
sub
insb
push
mov
test
jge
adc
cmp
stc
xchg
xchg
pop
ffreep
pop
loopne
adc
lods
pop
xchg
inc
inc
or
and
mov
jno
xor
and
lea
jb
icebp
mov
fdivs
sahf
jne
es
jb
das
mov
std
xor
cmpsl
das
mov
cs
push
std
xor
push
insb
div
push
sbb
sbb
addr16
cmp
stc
std
sbb
pop
or
imul
leave
adc
out
in
faddp
adc
pop
movsb
and
dec
cld
ss
ret
dec
mov
xchg
ja
adc
std
fdivl
cmp
lock
cmp
sbb
adc
movsb
sub
pop
cs
or
out
xor
js
sub
sahf
inc
pop
fdivrl
repz
ret
adc
cmp
cmp
shrb
push
dec
sbb
scas
and
add
xor
and
xchg
addr16
shl
pusha
fwait
shll
jne
icebp
test
inc
push
sbbb
int
icebp
lret
iret
sbb
paddusw
shl
jmp
scas
stc
lcall
sub
dec
mov
outsb
insl
mov
push
popf
add
push
in
leave
and
mov
inc
inc
shlb
pop
add
fldenv
cmp
or
out
push
xor
inc
test
dec
cmp
sub
outsl
lret
inc
repnz
iret
aam
popf
bound
mov
bound
adc
xchg
mov
add
xchg
jae
cwtl
push
dec
aas
cmp
sbb
sbbb
xchg
movsb
cld
jns
or
xor
dec
test
loope
or
push
sub
fucomp
std
scas
mov
mov
mov
push
xchg
add
lahf
mov
sti
adc
bound
or
inc
push
bound
nop
cs
or
shll
aad
jb
mov
dec
jp
cmp
sub
pop
xchg
pop
inc
shll
jno
pop
adc
fcomp
mov
sbb
dec
scas
sub
xor
jmp
ficoml
imul
sti
jns
inc
sub
lret
mov
movl
mov
cmp
cld
clc
rcr
sete
lret
add
stos
stos
or
mov
fcmovnu
mov
add
jae
dec
imul
inc
push
arpl
mov
add
dec
pop
cmpb
pop
inc
push
push
pop
sub
sub
gs
nop
ret
ds
out
pop
repnz
sbb
fcmovnu
xchg
testb
cmc
push
test
loopne
dec
cmpsb
ret
push
jb
into
dec
pop
cmc
cmp
mov
push
ffreep
in
xchg
mov
test
cld
lahf
clc
mov
jbe
cmpsb
mov
insl
sub
push
icebp
ret
lds
or
hlt
mov
rcrb
mov
in
bound
rclb
xor
dec
fisttps
pop
mov
mov
ljmp
adc
mov
fldenv
add
cwtl
xor
pop
nop
scas
mov
dec
or
mov
cld
loop
add
cmp
cwtl
jne
leave
rorb
or
dec
fucomp
in
stc
sub
push
cmovp
jp
ja
inc
push
xchg
xor
mov
repnz
shrb
jo
jns
cmp
loopne
inc
mov
negb
gs
jbe
cli
or
pop
cwtl
dec
lret
shll
fistpll
pop
gs
mov
xchg
cmc
mov
push
fst
add
mov
add
sub
stc
fbld
pop
push
lret
dec
adc
adc
repz
fs
mov
push
dec
popa
ja
add
in
jp
pop
out
ror
cmp
es
push
add
and
cmp
add
iret
out
idivl
add
xchg
inc
out
push
add
pushf
cmp
xchg
mov
lret
sahf
arpl
or
in
adc
cmc
movsb
lahf
into
or
push
test
clc
mov
or
cmp
popf
xor
mov
mov
aaa
clc
shr
rorl
fistps
mov
adc
pop
dec
testb
sub
mov
dec
xchg
mov
adc
bound
pop
imul
push
jno
es
mov
push
clc
mov
lea
lea
mov
dec
and
hlt
es
sub
lahf
mov
aam
and
clc
xor
and
fidivrs
ret
mov
xor
and
push
cmc
mov
push
xchg
add
jnp
adc
fwait
cmp
out
cmc
gs
mov
adc
repnz
cmpsb
add
lret
adc
aam
push
mov
adc
loopne
jmp
jb
lret
push
xchg
sbb
insb
test
sub
test
in
cli
mov
stos
dec
xchg
stos
jecxz
movsb
lcall
inc
popa
mov
mov
test
in
xchg
testb
sbb
inc
jne
or
ljmp
cmpsl
loope
jo
mov
xchg
fstps
dec
mov
sbb
or
cltd
pop
and
dec
jae
push
sbb
sbb
mov
js
mov
sarb
dec
xchg
inc
in
jo
faddp
mov
jo
sub
popa
jp
fld
push
pop
les
rcr
fsubrs
out
test
adc
push
lea
neg
imul
push
jle
stc
cli
insl
mov
scas
mov
sub
xor
push
nop
jo
inc
mov
out
push
and
mov
jmp
es
pop
and
fdivrs
add
or
sti
movsl
ret
pop
cmp
dec
jns
cld
pop
jecxz
or
cmp
mov
mov
add
std
and
cmp
lret
faddl
scas
insl
bound
enter
lcall
movsl
mov
les
mov
icebp
push
popl
add
xchg
cmpsb
push
or
or
cmp
xor
inc
pushf
imul
jns
js
mov
shlb
mov
out
imul
cmp
inc
fcompl
popf
push
dec
jle
or
pop
sahf
inc
arpl
sbb
mov
test
orb
or
jne
push
push
and
sbb
jge
loopne
aam
rcll
stc
push
outsl
and
dec
nop
xchg
mov
stos
mov
jg
je
fldl
mov
das
pop
repz
repnz
xchg
mov
xor
test
nop
mov
insb
icebp
adc
and
and
push
xlat
add
mov
aas
xor
push
push
push
jnp
pushf
xchg
leave
ret
sub
or
jmp
arpl
push
icebp
aaa
push
loop
jb
mov
insl
dec
cltd
push
pop
testb
or
mov
imull
cmp
add
pop
ja
xchg
adc
pushf
inc
or
pop
push
jnp
ret
je
iret
cmp
mov
leave
or
push
jae
jl
fcoms
in
jmp
std
sub
pop
mov
stos
push
push
and
mov
cmp
nop
and
push
jae
jns
cmpsb
adc
outsl
gs
enter
rorl
mov
inc
pop
lret
jp
fldenv
scas
fs
testl
lea
movsl
add
jb
enter
or
xor
sub
movsl
arpl
sbb
adc
cmp
repz
xchg
es
sbb
inc
sbb
dec
mov
sarl
jle
mov
mov
adc
ret
cmp
adc
mov
setge
mov
adc
lahf
int
mov
out
xchg
not
fld1
outsb
mov
push
push
pop
jp
movsb
push
mov
inc
jne
in
push
mov
and
leave
aad
int
cmpsl
repz
xchg
push
mov
idiv
mov
xchg
fisttpl
jmp
mov
mov
ljmp
orl
add
xor
aad
aad
xchg
jae
mov
outsb
jge
imul
stos
cld
aam
sarb
ljmp
es
aaa
jl
and
or
sub
push
inc
test
mov
aaa
jnp
aad
in
cli
mov
pop
xchg
pusha
jge
movsb
add
xchg
inc
movhlps
fisttpl
ret
xor
push
sti
andb
data16
bound
inc
fildll
testb
outsl
cwtl
sub
mov
mov
test
ss
sub
mov
or
es
mov
orl
sti
jb
xlat
cmc
ficoml
inc
pusha
xchg
enter
hlt
add
in
xchg
rol
or
add
sbb
add
add
sub
sub
mov
sarb
ror
mov
fwait
iret
ds
ret
das
push
sbb
test
and
fimull
pop
jg
adc
cli
int3
sub
dec
sti
cmp
stc
int3
out
xor
xor
push
repz
cmc
mov
inc
dec
enter
out
int3
pushl
ds
insl
test
push
es
mov
outsb
mov
cmc
cmpsb
fistpll
popf
mov
frstor
fs
push
icebp
and
pusha
fadd
outsb
scas
scas
lods
mov
sahf
adc
and
fdivs
adc
xor
scas
pop
out
xchg
xor
leave
repnz
in
ffree
adc
sub
cmp
inc
mov
mov
cmp
mov
iret
ljmp
outsl
pop
fucomi
enter
cmp
daa
mov
shr
fidivl
cmp
jnp
mov
and
setns
movsl
pop
test
in
enter
sub
pop
cmp
mov
sbb
enter
jle
push
sbb
stos
mov
cmp
jbe
fcmovbe
cmp
mov
in
inc
scas
js
inc
lds
cmp
movsb
hlt
xchg
sub
mov
xchg
pop
push
into
sahf
repz
jno
sbb
sub
adc
xor
jmp
push
jnp
push
or
fistpll
sbb
add
pop
lea
push
out
sbb
sbb
pop
dec
pushf
sub
mov
mov
icebp
int3
add
push
pop
xor
and
push
xchg
mov
stos
xchg
sub
cmp
add
mov
sti
cmp
sbbb
jno
cli
mov
in
add
in
aam
cwtl
xor
sub
lds
push
mov
das
andl
and
cmp
das
pop
add
movsb
or
cmp
mov
in
repnz
pop
inc
jns
cmpsl
std
decl
pop
cmp
mov
shrb
scas
mov
pop
std
mov
and
lock
pop
add
xlat
add
rcll
inc
cmp
push
mov
mov
cmpb
outsb
insb
fs
sub
mov
mov
cmp
jecxz
cli
mov
mov
in
xchg
leave
cmp
adc
push
mov
imul
inc
add
ja
adc
ja
push
outsb
sub
lahf
out
inc
test
clc
adc
pop
adc
pusha
mov
mov
mov
negl
aas
adc
notl
sbb
sub
ret
mov
cwtl
add
popf
or
mov
cmp
sub
outsl
mov
test
mov
xchg
inc
movsb
sar
out
sti
leave
dec
push
xor
adc
inc
adc
pushf
scas
push
add
mov
mov
xchg
xor
mov
jl
ljmp
or
outsb
sbb
or
xchg
pop
inc
gs
mov
or
sbb
jp
loopne
mov
dec
mov
ds
and
and
dec
test
into
dec
sbb
cmp
adc
stc
popa
ljmp
inc
jo
int3
cmp
inc
insl
sub
xchg
push
sbb
shlb
les
inc
lret
inc
or
dec
xor
inc
jb
mov
pop
cli
xlat
test
pushf
push
cmp
cmpsb
mov
iret
lret
dec
int
mov
imul
movsb
or
mov
jo
push
dec
add
xchg
outsl
mov
push
xor
outsb
scas
add
push
dec
fs
xchg
push
mov
pop
outsb
out
rcrb
das
dec
inc
mov
dec
fwait
sbb
lret
out
xchg
mov
xor
enter
push
das
xor
push
mov
or
inc
idiv
adc
push
mov
fidivrs
test
jns
imul
leave
fisubs
cmpsl
mov
push
jmp
or
jl
test
mov
ljmp
outsl
bound
jns
xchg
in
fsts
mov
stc
xchg
jne
push
add
enter
push
xchg
inc
push
inc
dec
nop
cmpsb
das
lret
bnd
sti
jo
push
xchg
cmp
mov
add
and
out
jae
mov
xorl
xchg
xor
cmp
jae
imul
stos
jmp
stc
inc
adc
jp
imull
aam
jo
adc
push
sub
test
popa
inc
or
cmpsb
std
dec
sbb
cmp
cmp
push
lods
lods
cmp
iret
stos
lock
hlt
xchg
and
push
add
imul
push
mov
cli
inc
push
insb
int
jb
mov
sahf
fwait
into
mov
cmpsl
xor
clc
cmp
mov
push
addb
icebp
ret
xchg
or
mov
mov
mov
mov
mov
lret
add
pop
dec
sub
jbe
fistl
sub
cmp
inc
negb
dec
ret
push
sbb
stos
enter
push
jp
cmp
cmpsb
mov
in
fdivrl
and
jmp
mov
mov
add
into
sti
xchg
jl
cmpsl
sbb
cmp
insb
divb
mov
and
xor
ret
adc
movsl
xor
jnp
or
push
js
pushf
xchg
ljmp
insb
push
fisttps
in
test
cmpsb
inc
adcb
insb
cmp
push
mov
testl
add
add
xchg
xchg
xor
popf
lods
add
xchg
mov
sub
sub
in
inc
outsl
dec
out
data16
cmpb
mov
mov
shlb
xchg
movsb
mov
ss
adc
enter
cld
push
add
movsl
lock
imull
loopne
mov
loopne
pusha
iret
stos
in
fdivl
in
dec
cmpsl
int3
push
movsb
cli
dec
cmp
cwtl
stos
or
inc
shll
jo
adc
jg
inc
fs
fidivrl
ljmp
and
lods
into
jge
mov
das
mov
mov
fdivs
jno
and
pop
fcmovnu
ret
rclb
fldcw
xchg
push
ja
mov
or
addr16
mov
nop
adc
jle
dec
xchg
jne
or
mov
inc
cmp
movsb
adc
das
rol
mov
add
out
jno
mov
lcall
add
push
sbb
std
cmp
push
insl
add
xor
xchg
insl
add
std
mov
push
xor
cmp
dec
mov
sub
imul
aam
mov
xor
jle
push
dec
cld
aam
movsl
loop
leave
mov
or
add
aas
lret
insl
and
or
ds
sub
loopne
andb
lea
lret
ficompl
xchg
jmp
je
loope
arpl
jg
pushf
sub
loop
xchg
pop
cltd
add
lds
iret
stos
mov
adc
jo
and
mov
fisttps
pop
addr16
test
sub
push
pop
call
push
cli
mov
dec
sahf
mov
inc
lds
mov
outsb
lret
rolb
mov
stos
xchg
divl
or
les
push
clc
inc
and
mov
mov
fwait
and
mov
mull
xchg
and
mov
sbb
js
repz
jecxz
js
sub
sub
popa
cld
jns
movzbl
xchg
mov
and
sti
jl
jnp
dec
out
cmp
es
mov
push
sub
out
xchg
pop
xor
imul
push
jnp
xor
movsb
mov
adc
mov
adc
dec
pop
or
cmpsb
mov
lret
negb
xchg
fbstp
sub
test
cltd
popf
je
insb
pop
mov
imul
or
pop
push
lret
and
std
cmpsb
mov
jnp
fsubr
rolb
lahf
mov
repnz
cmpl
js
push
scas
dec
ja
and
push
les
aad
stc
in
shrb
shll
arpl
push
roll
in
cli
fdivp
xlat
stc
add
stc
or
jmp
pop
and
js
pop
out
cs
fsubs
icebp
ljmpw
hlt
mov
pusha
mov
in
xor
push
aas
enter
sti
inc
sbb
xchg
adc
add
jno
adc
mov
jno
mov
lret
jecxz
mov
es
mov
cmpsl
cmp
mov
inc
gs
add
inc
push
popf
xchg
xor
sbb
jno
or
dec
insl
add
pop
cmp
dec
dec
movsb
mov
pop
mov
inc
fcoms
cmpl
out
xor
pop
inc
js
cwtl
bound
dec
adc
fstp
fwait
mov
mov
stc
ficoms
or
dec
shl
xchg
jae
and
nop
or
sbb
test
pushf
adc
sbb
jns
fistl
icebp
insl
mov
fsubl
jg
lahf
jae
movsl
pop
mov
jne
mov
mov
mov
cmpsl
or
mov
mov
push
sahf
cmp
into
or
jp
dec
cmp
movsl
xor
cli
mov
mov
call
stos
inc
pop
adc
jle
orl
sub
arpl
call
and
popf
cmc
enter
mov
sbb
leave
hlt
out
mov
mov
sbb
mov
incb
push
push
adc
xchg
push
sub
mov
xchg
and
adc
fs
lods
add
add
enter
pop
scas
lret
sub
das
pop
int
cmp
call
cmp
adc
xchg
xchg
insl
out
lock
scas
cld
cmp
and
or
or
out
sub
lret
ds
mov
shll
lcall
push
mov
loopne
je
es
xchg
rcrl
and
xchg
imul
mov
out
adc
lods
out
in
pop
fwait
pop
jecxz
adc
or
or
rorl
rolb
test
adc
outsb
imul
fadd
or
or
xchg
sti
call
outsb
insb
dec
jae
das
mov
stos
sbb
jge
pop
push
sbb
mov
aam
cmp
push
xor
andb
dec
hlt
dec
call
and
mov
test
or
xor
bound
aad
repz
mov
jle
xor
ret
test
cmpsl
jp
iret
fsubl
dec
dec
lods
psraw
cmp
push
lcall
icebp
mov
imul
fildll
mov
add
cmp
mov
mov
cmc
pop
into
test
mov
or
cli
rclb
stc
dec
popf
call
in
ss
das
sarl
dec
add
mov
inc
push
xchg
test
dec
pushf
pop
xchg
sub
sbb
mov
stos
pop
pop
outsl
lods
add
movsl
add
mov
jae
test
mov
adc
jno
lahf
aas
jg
cs
mov
in
in
mov
push
or
mov
xchg
xor
inc
leave
dec
rcrb
mov
shl
push
into
dec
and
and
ret
dec
iret
sbb
cs
roll
fadd
mov
cs
subl
scas
xor
sub
das
out
or
mov
outsl
cwtl
xchg
test
loope
cld
jp
test
xchg
addr16
pop
dec
adc
dec
mov
or
xchg
inc
fs
and
cmpb
fdiv
mov
jecxz
xchg
dec
mov
ljmp
sti
adcb
je
les
mov
cmpsl
mov
and
adc
sub
push
mov
jb
sub
icebp
js
xchg
dec
inc
sbb
dec
mov
mov
roll
std
in
int
pop
inc
test
les
clts
xchg
lret
xor
lds
rclb
cmp
mov
inc
pop
in
or
pop
inc
enter
rcrb
pop
subl
cmpsb
mov
pop
jb
pop
stos
adc
push
cmp
xor
adc
fldcw
ja
cmp
lret
jge
test
rorl
or
lods
aam
pop
cld
xor
pop
lret
addr16
inc
fisubl
out
test
inc
popa
clc
je
or
adcb
rcl
popf
xor
testb
cmp
push
outsb
dec
gs
jns
fidivl
lcall
adc
mov
stos
addr16
mov
mov
fimull
call
addr16
pop
cmp
lods
insb
jg
sbb
shlb
loopne
es
pop
pop
xor
jns
jbe
test
addb
dec
sub
dec
into
gs
xor
mov
in
add
dec
out
out
mov
push
cmp
mov
test
lret
cld
frstor
push
push
les
das
jp
popa
jno
jge
sbbb
not
mov
scas
dec
sub
jae
push
fwait
jnp
cltd
lods
mov
pop
scas
decb
insl
add
pop
sub
push
popa
xchg
sub
jno
out
mov
inc
out
jno
cmc
pop
shrl
push
lea
pop
in
orl
mov
out
ljmp
mov
inc
push
inc
fldl
mov
and
out
sbbb
or
cmp
aaa
jp
popa
clc
mov
jg
fsubrp
fdivl
add
jae
mov
lods
int
in
loopne
cmpsl
sbb
mov
adc
ljmp
test
or
fidivrs
xor
push
dec
lock
rcrl
inc
fld
iret
imul
in
ret
sbb
ds
fbld
es
mov
push
popf
stc
shlb
mov
sbb
pop
inc
sub
repz
inc
ficompl
ror
cli
shlb
or
roll
adcb
callw
jne
subl
adc
inc
sub
adc
test
scas
rorl
or
lock
cli
xchg
mov
ret
cld
rorb
or
pop
repnz
sub
push
push
dec
jecxz
mov
mov
testl
mov
sbbb
sbb
jo
or
xor
les
mov
nop
jmp
stos
inc
fmuls
test
stc
insl
and
sub
mov
testb
jmp
add
cmpsb
cmp
int
ljmp
in
inc
fstl
cmp
shll
add
lret
mov
adc
and
rclb
std
sbb
outsl
push
adc
fidivs
xchg
jns
xchg
lret
lret
loop
out
in
lcall
cmp
fidivl
rcrb
xor
cs
mov
sub
jns
js
jge
jne
jle
ret
imul
shrb
cli
dec
sub
lcall
push
scas
mov
mov
rorb
push
cmp
out
test
push
mov
jbe
mov
stc
or
push
ljmp
push
popf
xorl
scas
movsb
iret
data16
iret
data16
pop
repnz
lcall
jbe
pop
mov
das
sahf
xor
cmp
ss
pop
push
movsl
test
jns
movsl
iret
data16
jmp
or
sbbl
sub
dec
in
ja
fidivs
shrl
rorl
adc
push
pop
inc
xlat
mov
scas
stos
lret
aad
pop
lock
mov
inc
push
push
and
mov
les
xor
and
pop
ja
sub
mov
les
out
dec
fists
and
sbbl
push
call
int
stos
inc
add
and
pop
cmp
scas
fs
inc
test
lret
cmc
loope
sbb
sub
dec
cmp
stos
data16
imull
lret
repz
aam
jb
push
pop
lock
das
mov
pop
jno
dec
stos
jp
mov
hlt
or
push
and
dec
lods
jge
push
cmpsb
into
cmp
clc
enter
sbb
inc
adc
in
dec
cli
xchg
popf
jo
mov
lret
push
in
repz
dec
dec
push
cld
xchg
mov
mov
mov
mov
dec
ds
cmp
mov
leave
lcall
cld
out
sti
xchg
cs
mov
dec
dec
jecxz
push
fs
mov
mov
jmp
in
sbbl
add
push
jnp
mov
sbbl
fsubr
cmp
adc
xor
daa
xor
sti
outsb
inc
dec
in
sti
xchg
mov
fldenv
jmp
in
and
dec
insb
jge
fwait
movsl
mov
test
fidivl
pop
pop
and
cmp
movsl
xorb
mov
fstpl
add
and
push
jmp
sbbb
leave
mov
dec
pop
adc
mov
std
xchg
pusha
jo
push
stos
xorb
neg
mov
rolb
xor
pusha
bound
xchg
adcl
out
loope
dec
in
add
shll
mov
orb
popa
loope
cmpsl
pop
clc
shlb
cmp
outsl
push
push
popf
xchg
sub
shr
xor
pop
repz
in
inc
adc
ja
dec
fbstp
push
in
rclb
inc
xlat
daa
out
sti
adc
shll
push
insb
xchg
leave
pusha
int
fdivl
out
sub
pop
outsb
add
jmp
sub
ljmp
aam
scas
add
enter
ds
push
jecxz
dec
js
fildll
iret
dec
loope
mov
jnp
dec
or
es
pop
stc
nop
mov
jle
out
fsubrs
pop
pushf
xor
add
pop
subb
jnp
add
aad
stc
std
xchg
cs
dec
out
dec
push
mov
scas
jl
fcompl
es
stc
sbb
cmpb
imul
cmp
sub
inc
or
pusha
xchg
sbb
mov
xor
and
push
mov
dec
data16
sub
lret
push
xchg
xchg
xor
jp
jecxz
loop
popa
and
jbe
push
dec
hlt
je
movsb
aas
popa
cltd
or
mov
sbb
or
cs
pop
cmpb
shlb
scas
out
dec
ficoml
pop
ljmp
outsb
idivl
fadds
adc
daa
mov
pop
or
stos
pop
outsl
mov
push
scas
cld
test
jge
adc
mov
sub
rcrb
mov
add
cwtl
push
cmpsl
movl
das
mov
push
les
cmp
addr16
fisttps
and
das
ficompl
push
inc
push
bnd
outsl
notl
test
iret
jp
pop
cmpsl
loope
push
and
pop
notl
adcb
adc
loopne
int
lods
adc
cltd
cmp
call
pushf
mov
or
or
shrl
fcoms
icebp
mov
mov
inc
in
lret
jg,pn
inc
cwtl
pop
pop
xlat
jb
loopne
in
mov
sbb
lahf
xor
xorl
dec
or
subb
mov
shr
leave
es
int
sbb
fnstenv
std
jge
xchg
in
lea
ret
or
imul
pop
bound
test
xlat
sub
cld
inc
shlb
pop
fisttpl
testb
push
and
div
push
push
out
push
inc
addb
cwtl
in
scas
dec
and
ficomps
adc
js
mov
push
inc
in
mov
mov
out
mov
or
and
mov
aam
enter
mov
inc
js
int
jl
jmp
out
lret
je
hlt
or
xor
cmpsb
inc
inc
pop
jnp
xchg
je
test
add
sub
inc
call
jg
subb
mov
push
pop
in
lods
and
inc
jmp
mov
xchg
adc
xor
inc
jns
mov
push
cmpsl
rcrb
aas
mov
in
outsb
scas
dec
stos
sub
jno
fistps
xchg
outsb
dec
ljmp
xchg
pop
jne
lods
jmp
out
hlt
cmpl
and
or
mov
xor
pop
mov
rcr
xorb
jecxz
xlat
mov
add
jle
loop
push
test
shrb
popf
movsb
jmp
add
sub
push
jae
cmp
ret
enter
mov
in
pop
fsubs
sub
shll
call
mov
jp
lret
add
push
xor
xchg
cmpl
stos
movsb
movsb
cmp
lret
loope
std
test
popf
push
dec
loop
jl
sbb
mov
ret
inc
lock
inc
inc
xor
jae
jnp
lcall
push
in
out
out
pop
psubsb
cmp
imul
ret
mov
fdivrl
rorl
cs
pusha
pop
rcrl
testb
aam
stos
add
es
push
push
push
mov
js
jmp
fmul
jbe
cld
stc
dec
in
push
mov
push
dec
jl
jge
mov
push
rol
in
test
icebp
cwtl
das
and
insb
add
ss
imul
xchg
push
jmp
mov
jb
pop
adc
nop
daa
popaw
and
inc
sarl
arpl
stc
cmp
adcb
cmp
lahf
imul
mov
fcomp
inc
fildl
daa
push
out
addr16
icebp
mov
mov
mov
ljmp
out
and
xor
stos
aaa
into
jp
test
xor
pop
jae
sbbl
mov
es
add
mov
adc
negl
sarl
xchg
cmp
pop
or
es
adc
mov
loopne
jl
sub
push
popf
arpl
push
test
sbb
sub
sbb
mov
mov
jmp
inc
jecxz
add
test
xchg
imul
imul
into
mull
dec
adc
mov
pop
xor
jnp
jl
ja
jp
lea
ret
push
add
mov
daa
sub
mov
ret
pop
hlt
adc
data16
hlt
xor
mov
out
aad
mov
incb
mov
or
push
or
fcom
push
jecxz
cmp
push
in
push
loope
mov
js
lods
inc
mov
lret
pop
sub
adc
jmp
inc
and
aad
or
sbb
sti
adc
scas
int
fidivrs
adc
jne
cli
cmp
stos
pop
lods
xor
in
mov
lock
lret
adc
fnsave
out
xor
test
pop
sti
pop
mov
dec
adc
ja
push
fs
repnz
in
ljmp
push
mov
es
jno
loopne
adc
jbe
aas
push
mov
pop
mov
fsub
jnp
pop
pop
hlt
nop
das
add
in
sbb
cmp
ds
pop
sbbl
pop
lods
les
jp
stos
icebp
inc
fldenv
int
adc
inc
pushf
xor
jns
inc
xchg
popf
xor
fs
xchg
jmp
rcrb
gs
call
or
cmp
cmpsb
cmp
loope
fistl
mov
jne
xor
mov
xchg
xchg
addl
addr16
sbb
aam
dec
out
inc
xor
jmp
push
jmp
lods
aam
cmc
scas
mov
outsl
js
ret
xlat
int
leave
sub
xor
das
sbb
push
movsl
push
xor
test
fldcw
mov
xor
jg
ret
imul
ret
cmp
sbb
sbb
hlt
adcb
cld
outsb
stos
cmp
and
cmp
stos
fadd
je
into
icebp
sbb
adc
jge
mov
pop
pop
add
nop
mov
popf
and
or
adc
sub
add
sti
rcrl
xchg
adc
orb
sub
push
dec
push
outsl
adc
es
notl
cmpsb
cmc
scas
push
sub
lock
mov
popa
mov
jbe
xchg
std
jl,pt
push
test
mov
jnp
scas
pusha
neg
sahf
add
xchg
cli
movsl
cmp
aad
xor
jne
mov
jl
jne
jae
call
xchg
or
lds
scas
scas
nop
add
sbb
cs
fbld
mov
scas
inc
mov
sbbl
fimuls
pcmpeqd
jl
insb
lods
inc
pop
jg
sbb
fldt
lds
fs
push
and
pusha
push
xchg
testl
dec
enter
mov
lods
cld
adc
inc
inc
incl
out
outsl
dec
fistps
mov
jbe
jecxz
adc
add
xor
pop
push
mov
lret
mov
push
mov
pop
divb
xor
nop
movsb
pop
clc
cmpsb
pop
movsl
xlat
daa
inc
fstl
test
in
inc
es
test
xchg
pop
mov
scas
xchg
and
and
and
mov
jbe
pop
imul
sub
adc
mov
popf
inc
sbbl
hlt
xchg
clc
test
and
pop
push
sbb
push
mov
mov
xor
mov
clc
inc
cmp
rolb
adc
outsl
add
push
mov
mov
inc
fnsave
push
cmp
js
test
sbb
out
and
pop
jp
ss
xchg
popa
clc
int
add
mov
mov
popf
cmpsb
xchg
inc
ffree
movsl
ss
lock
and
sbb
dec
xchg
cli
cwtl
and
ljmp
lea
push
imul
fnsave
fldl2e
orl
and
pop
push
addr16
into
push
jns
add
roll
push
dec
pop
sbb
orb
pop
push
aaa
into
bound
js
pop
adc
inc
insl
cmp
jp
cmp
dec
scas
mov
sbb
scas
and
and
inc
and
adcl
dec
in
mov
sti
out
sub
aas
jp
pop
insl
push
mov
outsb
arpl
lods
inc
push
jecxz
xor
test
lea
jg
movsl
and
stos
std
les
stos
movsl
cmp
dec
arpl
jns
clc
push
xchg
add
rcll
cmp
xor
test
jecxz
mov
flds
dec
and
mov
add
std
xchg
xor
cmp
test
lods
adc
cmpsb
pop
ja
dec
rolb
mov
je
sub
mov
aaa
js
sbb
ret
and
pop
sbb
pop
dec
pop
push
in
push
addr16
stc
xchg
xchg
cmp
add
add
scas
xor
mov
push
test
inc
fistl
shl
repz
je
push
sbb
xchg
and
cmp
in
test
push
fwait
xchg
pop
and
lock
push
out
add
inc
fmull
or
jns
aaa
push
jmp
mov
or
dec
pop
jnp
dec
les
popl
cli
loope
js
icebp
or
jg
push
mov
fldcw
jge
clc
jecxz
sub
sub
test
je
fbstp
sahf
and
push
insb
fidivs
inc
stc
jne
xchg
adc
out
xchg
mov
psubb
fdivl
call
iret
lea
in
pop
pop
adc
xchg
cmpb
or
xchg
mov
xchg
dec
fucomp
orb
outsl
push
insb
and
call
mov
jo
push
faddl
movsl
hlt
adc
stos
inc
aad
inc
fildl
stos
jecxz
in
gs
push
push
test
test
mov
ror
lds
mov
stc
outsw
pop
cmc
pop
nop
add
fwait
sti
fldenv
xor
adc
xor
inc
fsubr
pop
loope
cmp
jno
stos
xchg
push
and
jbe
lds
ret
fldenv
cli
sbbl
adc
popf
inc
bnd
in
mov
xor
lret
inc
sbb
ret
loop
inc
iret
fsubrs
outsb
test
add
mov
addr16
pop
inc
retw
insb
popa
clc
sahf
pushf
push
in
push
mov
sti
xchg
add
sub
lods
cmp
sbb
pusha
shrl
hlt
test
xchg
jnp
add
and
aaa
lods
lds
mov
stc
daa
lods
push
in
sbb
pusha
shrl
test
push
jmp
and
dec
loop
jle
push
call
lret
rcl
mov
and
and
pop
outsb
push
shrb
xchg
jbe
in
push
insb
lret
bound
jecxz
pop
sahf
push
jmp
stos
push
lret
les
mov
mull
lds
in
jnp
cli
stos
adc
add
repz
sbb
sub
xor
mov
mov
test
dec
push
mov
mov
repnz
pop
in
ds
or
out
xlat
push
add
mov
xlat
outsb
mov
iret
pop
hlt
mov
iret
aam
rcrb
lock
gs
sub
shrb
inc
add
cs
movsl
cmp
sub
inc
fldenv
ficomps
rorb
jl
adc
outsb
test
xor
mov
sub
pop
jle
jo
pushf
cwtl
gs
lret
loop
in
lcall
movsb
cmp
ret
pop
sahf
mov
inc
fcmove
mov
in
pop
push
cmp
inc
aas
sbbl
xchg
mov
in
in
pop
push
lock
fsubp
inc
fs
jno
pushf
xor
cltd
add
and
cmp
ret
mov
inc
fidivl
pop
sub
sbb
sbb
ret
ss
int3
arpl
fldcw
or
or
and
mov
lods
subb
and
dec
jecxz
and
mov
sub
sbbb
add
mov
movsb
add
sub
add
int3
push
imul
cmpsb
lahf
jbe
adc
or
add
inc
sub
push
divb
cmpsb
cmc
adc
addb
cli
xchg
fisubrl
mov
pop
sbb
nop
mov
ret
clc
mov
mov
insb
add
out
xchg
fldl2t
or
lods
inc
repnz
test
dec
jecxz
jns
subb
sbbb
mov
in
hlt
mov
cvttps2pi
aas
dec
jmp
bound
mov
ljmp
pop
hlt
mov
lods
inc
lea
dec
loop
inc
icebp
mov
cmp
test
fdivr
xchg
iret
xchg
and
sub
cli
xchg
mov
arpl
push
jmp
fwait
mov
sti
xchg
xchg
frstor
test
sub
or
xchg
jg
jecxz
cmpsl
jle
xorl
sbb
jne
cltd
sub
mov
pop
jbe
pop
test
ret
hlt
dec
loopne
inc
push
add
test
lods
repnz
lds
cmc
call
jecxz
dec
in
fdivl
gs
loop
add
xchg
xor
sbb
and
lds
push
in
sub
jae
jl
add
iret
xor
cmpsb
arpl
scas
inc
and
aad
inc
int
jne
dec
loop
xchg
jmp
leave
push
jp
xchg
or
fidivrl
sub
imul
dec
loop
dec
shrl
fisubrs
adc
mov
testb
sub
cs
jl
lret
lahf
dec
loope
sub
sbbb
sbb
cmp
stc
xchg
cmpsb
cmp
push
dec
in
call
push
jge
les
xchg
les
lods
inc
inc
loope
mov
arpl
cwtd
xor
push
lea
mov
fistpll
adc
rcll
dec
test
xor
push
test
sub
xchg
mov
movsl
scas
std
rcrl
sub
add
jbe
and
push
ret
mov
in
test
mov
clc
sub
iret
cltd
adc
lds
ljmp
jbe
jle
outsb
add
pop
push
or
pusha
outsl
lods
inc
mov
lret
cld
dec
out
cmp
out
test
sti
xchg
lods
popa
mov
xchg
mov
mov
mov
inc
fistl
aam
cmc
pop
insl
add
adc
pop
xchg
mov
inc
aaa
pop
mov
mov
add
cld
xchg
xor
cmp
lahf
test
lods
adc
pop
inc
fmull
sub
out
dec
lret
js,pt
mov
insl
add
rcrl
pop
mov
dec
and
sub
jae
orl
xchg
fucomi
test
and
andl
lds
movsb
pop
notb
int3
lret
sub
fwait
sbb
dec
stos
mov
mov
push
mov
fwait
xor
dec
loope
inc
xchg
cmp
test
lods
mov
fisubrs
sub
es
lret
fiaddl
cmp
std
rclb
inc
fcoml
out
push
popf
loopne
loop
jo
cmp
rcrl
adcb
in
mov
mov
mov
stc
mov
roll
pop
sub
pop
dec
mov
mov
lods
lret
lods
inc
cld
mov
shll
pop
dec
loop
and
xchg
outsl
in
andl
mov
cld
add
sub
out
outsl
lret
popa
push
out
push
int3
mov
notl
inc
fisttpll
push
in
push
gs
xchg
inc
pop
repnz
cmp
stos
sbb
mov
sbb
xchg
pop
dec
in
shlb
pushf
pop
testb
push
popf
dec
inc
dec
out
bound
xchg
inc
pusha
divl
mov
ds
pop
scas
inc
cmp
ds
dec
filds
lods
fbstp
jae
imul
sub
jbe
lods
mov
out
into
cld
aas
sub
inc
fsubrs
test
push
roll
out
xchg
or
sti
inc
lahf
ss
sub
jnp
cmp
rorl
iret
sub
push
jg
push
data16
mov
movsl
stc
cwtl
das
sub
sahf
xor
je
jmp
ljmp
out
mov
pop
imulb
roll
inc
clc
jne
adc
es
roll
sbb
enter
mov
es
lret
add
xchg
int3
dec
jecxz
and
xlat
ret
mov
hlt
adc
clc
sbb
mov
push
out
mov
out
sahf
pop
mov
pop
ljmp
scas
xor
pop
scas
inc
mov
pop
cmpsl
dec
fwait
pop
or
loopne
xor
pop
inc
pop
ja
lea
pop
gs
xchg
ficoml
outsl
push
and
mov
stos
push
sbbl
iret
scas
cmpsb
cmp
mov
inc
fnstsw
jmp
inc
fcoml
js
pop
mov
nop
stos
xchg
fadd
lods
inc
mov
and
mov
lret
cmpsl
ds
into
xlat
outsb
shl
jle
repnz
in
adcb
call
lds
sar
xchg
repz
xchg
sbb
adc
jns
jns
out
test
daa
mov
pop
loopne
sub
mov
and
inc
mov
push
movsl
testb
mov
cmc
arpl
in
mov
fidivrl
insl
add
hlt
mov
push
lret
mov
shlb
jne
cmp
and
sub
fwait
or
cmpsb
mov
and
jge
rorb
incb
orb
mov
mov
mov
inc
fisubrs
inc
loopne
jbe
insl
add
mov
adc
jge
adc
repnz
cmpsl
je,pt
push
call
shl
ljmp
pop
xchg
sub
inc
jo
jbe
sub
sarb
mov
fisubs
rcl
insb
ret
addr16
hlt
test
out
addr16
sbb
adc
addr16
xchg
cs
jmp
in
xor
sbb
xor
xchg
sub
pusha
test
ljmp
jnp
nop
daa
push
andb
mov
or
or
and
dec
jecxz
addb
mov
push
popf
mov
xchg
or
xor
push
pusha
inc
fcoml
jle
mov
lcall
ret
adc
scas
inc
testl
fdiv
mov
add
je
rclb
lds
push
out
mov
sbbb
cmpsb
lock
mov
xacquire
and
sti
xchg
icebp
dec
and
xchg
mov
leave
call
push
out
in
inc
fcomp
cmp
jle
lock
xchg
jecxz
adcb
adc
pop
test
pop
scas
add
cs
pusha
pop
sub
mov
aam
ja
inc
and
bound
adc
adc
pop
mov
push
mov
scas
stc
jnp
outsb
lods
cld
lahf
ss
lds
imul
or
push
imulb
mov
std
sbbl
les
mov
push
cld
mov
out
jns
jle
sti
es
cmc
incl
scas
dec
out
mov
lcall
loopne
shll
ret
adc
test
pop
subb
popf
shlb
mov
out
add
inc
jmp
jno
imul
pop
cmp
mov
mov
into
add
adc
pop
dec
in
jg
clc
outsl
cmpsl
jmp
dec
adc
mov
xor
inc
out
xchg
xchg
into
jne
dec
shrl
loope
add
cmp
stos
cmp
mov
fistl
mov
rorb
add
pop
lock
jmp
aas
fisttpl
jne
aam
rolb
data16
shll
bound
dec
ja
imul
push
fwait
hlt
mov
mov
jp
addb
mov
shlb
loop
push
mov
sbb
fdivl
jae
mov
or
pop
cld
ret
mov
cli
dec
mov
stos
daa
arpl
xchg
es
xchg
cltd
mov
aam
iret
push
inc
pushf
inc
push
adc
mov
shrb
flds
test
xor
pusha
shrl
fcoml
stos
into
mov
xlat
outsb
jle
adc
insl
push
mov
xorl
arpl
ds
push
testb
bound
into
inc
mov
lods
inc
div
xchg
sub
or
into
jns
xor
jae
stos
inc
cli
fwait
aam
int
aaa
into
jle
jae
pop
xchg
test
add
stos
jno
push
in
cmpsb
pushf
pop
out
int
mov
outsl
sbb
dec
out
xor
xor
popf
xor
shlb
mov
decb
and
dec
xchg
and
xchg
push
mov
or
cmp
jge
adc
into
aas
cmp
mov
dec
mov
push
mov
ss
fstpl
push
xchg
mov
xchg
pop
cmp
lods
jae
xor
int
aam
adc
movb
rclb
outsb
add
imul
es
mov
xchg
mov
xlat
and
or
aas
lods
cmp
loop
fnstenv
xor
pop
scas
pushf
push
mov
mov
je
or
jge
dec
pop
jno
cwtl
xchg
pusha
neg
fs
aad
cmp
sub
mov
sbb
rcrl
add
clc
push
sbb
rcrl
add
sbb
std
and
nop
xor
sbb
cmp
cmp
popa
mov
pusha
xchg
daa
je
out
popf
mov
cmp
shl
movsb
sahf
xchg
push
fstl
and
scas
inc
xchg
mov
mov
and
sbb
ja
cmp
shrb
push
cmp
sti
and
scas
daa
dec
pop
and
adc
outsl
sti
ss
dec
cmp
sbb
jecxz
addl
pop
sbb
cmpsb
pop
leave
popa
xor
cmp
add
sbb
sbb
jo
cmp
dec
mov
lds
mov
push
ret
sbb
sbb
cwtl
hlt
cmp
fisubs
cmp
mov
dec
mov
lcall
pop
rcrl
std
mov
and
add
int3
push
ljmp
and
push
subl
pusha
mov
mov
add
test
push
std
sub
and
lea
ds
leave
sub
popf
pop
pop
xchg
sub
cmpsb
rolb
mov
inc
xor
cmp
pop
dec
push
and
or
jl
sub
add
and
int3
imul
loop
add
lcall
jb
daa
lret
test
dec
push
cmp
in
cld
mov
repnz
mov
xor
popa
cmpl
mov
pop
icebp
add
test
es
pop
sub
sub
lods
int3
mov
gs
fbstp
xchg
es
fcmovbe
insb
or
lods
inc
cmpsl
sub
lret
cli
adcb
mov
ljmp
outsl
or
push
shll
bnd
add
enter
gs
lret
es
push
in
sbbb
jns
sbb
int3
mov
push
les
rcrl
fdivl
jae
outsl
mov
fcomip
lea
pop
xor
lea
adc
arpl
xor
lods
add
xor
push
mov
outsl
adc
lods
je
testb
test
lods
pop
mov
adc
fistps
pusha
shlb
mov
fs
out
and
or
mov
fstp
outsl
cmovo
lods
jno
testb
adcl
pop
mov
adc
mov
clc
loope
fwait
xor
adcb
jl
push
scas
push
sahf
clc
int
cld
jg
lds
dec
popf
xor
sbb
mov
mov
test
cmc
fnstenv
mov
testl
int3
gs
adcl
or
jo
sub
inc
ffree
pop
mov
stos
mov
imul
mov
adc
arpl
pushf
and
mov
leave
pop
or
inc
shl
orl
add
add
mov
movsl
jle
mov
cld
mov
dec
aam
rclb
push
ljmp
jno
jns
cld
xchg
call
or
mov
in
lods
inc
pop
pop
cmp
lea
bound
push
out
fists
jbe
xor
pop
sahf
pop
push
xchg
sub
cmpsl
mov
shlb
frstor
push
dec
out
test
mov
popf
xor
repz
and
mov
fbstp
fnstenv
cwtl
data16
leave
jl
mov
rclb
cmp
xor
pop
or
je
mov
paddsw
mov
cwtl
pop
jae
je
ret
shrb
or
aad
imul
mov
xor
cmp
mov
mov
out
and
dec
ss
cltd
push
dec
lods
lock
fnstsw
push
notb
test
pop
in
jnp
imull
or
mov
push
int3
sub
sbb
sub
inc
loopne
pop
cltd
loopne
dec
stos
cmove
dec
jg
mov
or
aaa
add
sbb
jo
sbbl
daa
push
sbb
rolb
movsl
xchg
inc
push
rcrl
adc
rcrl
sbb
inc
scas
lods
dec
push
movsl
lock
fidivl
adc
inc
loop
xchg
adc
xor
insb
add
test
shlb
fcoms
or
inc
xchg
xor
fs
pusha
call
or
jg
fsubrs
popf
mov
int
pop
scas
and
scas
incl
bswap
or
and
les
xchg
sub
aam
dec
or
outsb
add
sub
arpl
lea
push
jp
subb
or
mulb
sub
push
fxch
popa
or
lods
movsb
sub
jle
lds
leave
testb
pop
push
jmp
sub
sub
psubd
xor
popf
add
lods
in
adc
arpl
imul
add
sbb
sbb
pop
insl
mov
clc
out
ret
pop
add
adc
jns
push
mov
jo
dec
mov
pop
loop
adc
mov
roll
push
sti
mov
fcom
lahf
cmp
in
mov
or
add
stos
jmp
mov
loop
mov
imul
xor
stos
adcb
mov
sub
mov
xor
jo
mov
or
inc
fs
icebp
sub
pop
inc
cmp
mov
cmp
push
adc
orl
and
mov
shlb
mov
in
pop
scas
mov
xchg
sub
shr
in
testl
lods
and
xchg
xchg
in
orl
cmc
lahf
adc
je
mov
mov
lods
inc
ljmp
test
jp
dec
jge
and
mov
fmuls
fadd
aaa
mov
ljmp
push
insl
fisubs
dec
push
fsubrs
push
and
lahf
push
test
popa
mov
aas
icebp
addb
mov
arpl
push
dec
jnp
movsb
add
pop
add
out
mov
fldl
inc
xchg
sbb
mov
dec
out
enter
sti
in
cmp
inc
push
xor
inc
scas
jbe
fstps
aam
ds
xchg
stos
testb
or
sbb
xchg
popf
xchg
nop
enter
or
pop
xor
jle
xor
cltd
cmp
arpl
fisubrs
add
dec
xor
and
imul
lods
imul
push
push
lret
mov
daa
xor
in
rol
jns
xchg
or
push
frstor
imul
xor
and
xchg
cmp
inc
mov
repz
call
lods
or
lods
das
cli
push
data16
dec
mov
pop
icebp
pop
jae
flds
push
leave
inc
bswap
mov
mov
sbb
popa
jbe
ljmp
push
xchg
mov
or
into
pusha
inc
pop
lds
fs
push
or
sbb
adc
dec
inc
mov
or
adc
mov
jle
and
push
js
mov
mov
sti
pop
into
ja
dec
add
pop
insl
jmp
pop
aas
in
sahf
push
scas
sub
int
faddl
mov
lods
adc
in
enter
lret
scas
push
jnp
xor
xor
enter
jo
insl
cmp
mov
push
add
push
lods
inc
pop
cli
pop
out
pop
les
inc
sarb
popf
sbb
xchg
mov
and
dec
or
pop
xchg
out
dec
pop
arpl
sti
test
inc
mov
add
pop
fmuls
or
out
add
fdivp
cmc
stc
pop
push
jmp
cmp
or
cld
mov
leave
pushf
sbb
pop
mov
mov
pop
clc
mov
into
arpl
sub
xor
sub
cmp
js
cli
imul
aaa
loopne
and
dec
inc
pop
gs
imul
adc
pop
test
mov
inc
inc
dec
enter
cwtl
mov
cld
mov
xlat
dec
sti
pusha
adc
flds
fucomip
push
ret
and
popf
push
and
mov
xor
mov
and
rorb
aam
dec
inc
insl
ljmp
in
push
daa
push
add
gs
dec
xchg
ja
repz
roll
sub
sbb
or
icebp
repnz
xchg
data16
pop
pusha
jp
adc
push
jno
jbe
pop
mov
jg
out
inc
jmp
lods
sub
jnp
fbstp
and
pusha
bnd
stos
mov
adc
fisubs
je
cmc
lds
sti
xlat
pushf
pushf
aaa
jle
in
ja
cwtl
ljmp
jne
lret
jo
sbb
xor
sub
dec
adc
push
pusha
test
fcomp
dec
add
pop
xchg
pop
xor
inc
xchg
dec
jmp
add
in
sbb
insl
test
cmpsb
popl
push
jb
fdivl
push
mov
sbbb
scas
inc
and
mov
mov
mov
or
popf
sbb
lods
inc
sub
mov
ret
jmp
cmp
or
scas
ss
xchg
fiaddl
push
cld
cmp
loope
mov
repz
mov
cmpl
paddusb
addr16
jb
loop
xor
jns,pt
sbb
das
sub
hlt
or
xchg
sbb
iret
aam
dec
or
xchg
jmp
mov
rclb
xchg
sbb
hlt
pop
inc
dec
in
je
xchg
dec
adc
sbb
jne
dec
ror
ret
sub
mov
mov
in
ret
movsb
inc
aam
int
add
cmp
in
mov
lahf
jo
test
mov
sbb
sub
scas
push
ret
add
adc
add
test
call
xchg
xlat
stc
fcmovnb
popf
imul
or
test
mov
mov
inc
add
sbb
stos
cli
mov
xchg
mov
and
cmp
fs
mov
push
les
xor
mov
push
push
aam
incl
ljmp
rorl
inc
sub
stos
movsl
cmp
pop
mov
mov
jo
and
dec
push
mov
push
sub
test
cmp
aam
in
xchg
add
xchg
mov
and
rcr
jb
push
mov
mov
cmp
push
cmpsl
mov
lods
pop
ds
js
adc
add
lock
in
stos
sbb
das
mov
mov
out
ret
sbb
and
rcll
rcrl
mov
lret
std
cmpsb
jne
sbb
and
das
push
popf
mov
lret
mov
mov
adc
test
mov
dec
ffreep
sub
jo
icebp
lea
and
filds
jns
daa
xor
movsl
insl
jo
ja
jge
add
sti
sub
inc
sahf
cmp
xchg
xchg
cmp
enter
repnz
out
out
jbe
adc
leave
mov
sti
jl
cs
sbb
ds
iret
mov
add
pop
mov
ret
jecxz
cmc
jne
mov
enter
xchg
sahf
sar
outsb
fmull
hlt
and
out
pop
adc
in
or
xchg
mov
pop
int
lcall
lds
ss
rorl
and
std
sub
sarb
inc
push
inc
shr
mov
mov
mov
sbb
jbe
xchg
cmp
mov
sub
mov
mov
fiadds
push
arpl
mov
movsl
xor
push
sub
mov
clc
pop
test
push
lods
scas
sti
push
lret
add
sbb
push
mov
jo
cmpsb
hlt
ret
enter
inc
loopne
jns
lods
inc
dec
lcall
mov
ret
hlt
aas
cmp
jo
or
ret
jo
pop
xchg
call
push
push
sbb
xchg
jecxz
push
nop
in
cmp
mulb
add
sbb
ds
or
dec
and
inc
aam
jne
in
test
xchg
inc
mov
in
stos
fwait
cmp
int
test
mov
push
jbe
lret
stos
in
push
addr16
cld
arpl
mov
mov
jp
test
push
xchg
andl
push
push
or
imul
jp
xchg
lods
mov
movsl
loop
sbb
xor
cmp
push
push
dec
loop
jno
in
mov
ret
je
cmc
cli
xchg
sub
xchg
sub
movsl
cmp
push
dec
pushf
mov
iret
out
repz
and
inc
call
xchg
cltd
sbb
shl
cmp
sbb
dec
loopne
cmp
decb
push
shrl
orl
add
clc
popa
sbbl
dec
push
popf
xor
sub
xchg
out
mov
gs
mov
pop
and
push
and
lock
jae
dec
gs
or
clc
aad
cld
clc
sbb
mov
push
ljmp
call
mov
popf
xor
das
dec
in
jecxz
xchg
aad
ret
pop
sub
adc
repz
inc
mov
popa
int
mov
inc
testl
pop
sarl
push
das
out
ret
aad
add
sub
jmp
scas
inc
out
add
jge
xchg
sub
pusha
iret
data16
xor
jge
cmp
mov
cmp
push
push
jecxz
cmp
addr16
fcomp
pop
hlt
or
enter
shrl
or
xor
mov
es
xorb
xchg
les
mov
mov
lods
enter
sbb
dec
loope
mov
cmp
in
nop
loop
iret
push
stc
nop
subb
scas
mov
fidivs
xor
fisubs
stos
inc
mov
fidivrl
lret
mov
mov
in
in
fiadds
loopne
pop
adc
sbbl
cs
loop
xchg
pop
cmp
pop
out
imul
mov
pop
mov
jge
adc
dec
add
mov
icebp
mov
xchg
adc
shrb
add
lods
mov
mov
mov
xor
push
popa
pushf
xor
dec
jecxz
jne
lea
xchg
cli
lcall
mov
test
push
pop
or
mov
jle
push
cld
xchg
inc
mov
or
addr16
lret
jge
outsb
icebp
mov
pop
iret
data16
adc
sarl
fadd
push
add
sbb
ljmp
test
insl
pop
icebp
scas
jge
jno
dec
push
out
nop
mov
add
xor
insl
and
enter
ss
cmp
push
dec
fidivs
cmpsl
in
in
hlt
mov
addr16
jo
push
bound
test
xchg
sub
inc
sub
mov
xchg
imul
les
out
dec
in
shlb
jmp
jecxz
add
mov
aad
test
call
or
jnp
inc
fisttpll
pop
repz
das
inc
fisubs
rorl
rcl
rol
add
xlat
cmp
jae
clc
mov
ljmp
jge
mov
int
xchg
cmp
lret
xor
cmpsl
ret
inc
fidivl
sub
dec
dec
out
pusha
sti
xchg
adc
rcrb
or
aas
lahf
test
jle
movsb
test
imul
jp
test
mov
push
popf
inc
fadds
or
test
mov
xchg
out
adc
lock
cmc
adcb
je
aad
adc
ss
fisubs
enter
jecxz
mov
fldt
jnp
out
testl
jb
mov
mov
ret
pop
ljmp
dec
cmp
cmpb
int
dec
mov
cs
xor
push
cmp
add
mov
lods
fsubrs
test
add
inc
sbb
ja
lock
sbb
sbb
dec
jecxz
mov
jmp
subl
call
or
jle
and
je
pushf
lock
clc
jmp
xor
mov
mov
pop
mov
lcall
jg
lahf
ss
adc
stc
dec
divps
and
arpl
mov
xor
shll
mov
or
fildl
sahf
int3
aaa
in
subl
int3
fiadds
dec
loop
jmp
rorl
xchg
sub
in
adc
pop
rorb
cmp
popf
test
lret
mov
fcoml
int
leave
pusha
inc
out
sbbl
sub
xor
jae
aad
notl
mov
daa
mov
insb
mov
add
aas
cli
inc
fcomps
popa
int3
arpl
ja
fidivs
gs
insb
test
pop
repnz
jbe
sub
pusha
pusha
stos
mov
cmp
adc
hlt
shrb
jae
loop
push
aam
push
jmp
out
rcrl
stos
inc
jns
cmp
es
mov
or
das
push
jmp
test
imul
push
leave
pusha
aam
pop
and
pop
pop
out
loop
idivl
loop
lret
cmpsl
ds
or
jge
int
mov
pop
jae
mov
and
pop
ret
mov
lahf
ss
pop
repnz
mov
push
lods
fdivrs
xchg
jp
mov
test
pop
cmc
jge
sub
adc
mov
mov
testl
leave
push
test
mov
dec
cmp
insl
outsl
cld
call
xor
push
aas
and
lret
bound
ss
jmp
imul
enter
xor
lahf
lret
push
hlt
mov
push
out
ret
lcall
lock
push
lods
sbbb
mov
dec
inc
xlat
cltd
xor
pop
icebp
cmp
int
testl
mov
vpmaxsw
or
test
aad
xchg
push
in
add
fdivl
xchg
pop
cmc
mov
push
scas
cmp
pop
pop
push
sbb
xor
enter
test
jge
mov
jl
pop
push
ljmp
push
popf
sbb
sub
sub
jl
scas
loopne
negb
shlb
shrl
adc
jae
mulb
push
and
mov
jl
add
mov
sub
mov
inc
fimull
push
imul
out
pop
repz
xchg
mov
int3
ja
add
adcb
mov
cld
jbe
xchg
lods
sbb
add
fsubl
push
in
xorl
push
jmp
or
out
test
cmp
loope
pop
mov
xchg
jb
mov
and
jl
jle
decb
mov
es
cli
rcrl
inc
fisubs
stos
inc
or
int3
aaa
mov
mov
xchg
lret
pusha
pop
jg
push
scas
jle
add
imul
xchg
xchg
sub
dec
and
stos
xchg
xchg
cs
mov
clc
in
mov
jl
adcb
std
sbb
jecxz
jo
pushf
add
jg
mov
mov
jg
dec
js
subb
push
movsb
mov
lahf
add
mov
mov
jno
arpl
leave
xchg
push
popf
push
jmp
lock
stc
lahf
adc
scas
test
xor
mov
fbld
mov
test
lret
iret
enter
lock
clc
xor
mov
mov
shlb
aam
arpl
int
xor
stc
lea
test
mov
leave
pusha
popf
xlat
popf
xor
mov
lock
push
das
inc
and
roll
test
stos
fldenv
sbbb
and
testl
lcall
jo
test
test
mov
add
or
mov
cltd
movsl
sahf
aam
cmc
adc
icebp
inc
inc
fdivrl
repnz
call
xchg
jmp
or
ds
sub
dec
mov
cmp
dec
in
lods
out
fnstsw
push
adc
std
xchg
jae
popa
clc
out
xchg
sub
inc
ljmp
vpshufd
test
gs
inc
push
out
gs
mov
outsl
repz
cmpsb
jb
mov
and
inc
lret
fwait
xchg
and
cwtl
das
jnp
sub
pop
and
movsl
inc
cmpsb
cmp
jns
xchg
pop
out
iret
jl
adc
and
ds
out
sbb
mov
lea
loope
scas
gs
fildll
jle
xor
jo
mov
dec
cmc
xor
sub
nopl
mov
jmp
adcl
mov
push
dec
push
inc
ds
jbe
pop
inc
lret
xor
stc
cmp
sub
test
sti
test
cmp
jmp
sbb
and
ret
and
stos
cmpsb
int
fdivs
call
xchg
cmp
outsb
inc
aam
stos
mov
sub
cmpsb
dec
fidivrs
ja
imul
repz
fmull
jmp
jle
dec
push
lods
xorb
test
pop
ret
out
dec
int3
xchg
mov
mov
or
mov
lcall
mov
or
imul
imul
ret
lock
inc
clc
cmp
push
mov
and
fwait
mov
int3
cmp
pop
fidivs
mov
cld
dec
dec
mov
out
das
xchg
je
mov
sub
shll
stos
add
push
or
and
flds
adc
push
sub
adc
out
jne
pop
jns
mov
jno
jb
aaa
movsb
cltd
clc
cs
jecxz
fimull
sbb
cmpsb
cmp
inc
sbb
xor
ret
mov
jns
cmpsl
jns
pop
jmp
out
pusha
in
push
sub
mov
scas
mov
enter
aaa
call
es
mov
push
xchg
adc
sbb
dec
jnp
xchg
scas
jl
and
scas
jmp
and
mov
push
jmp
sbb
or
mov
jae
adcb
xchg
das
mov
rcrl
jge
jno
shrb
insb
enter
daa
mov
xor
lock
xchg
adc
enter
adc
addr16
shrl
mov
xchg
adc
mov
fbstp
sbbb
add
popf
adc
ss
ja
jg
cwtl
call
cmpb
pop
sahf
mov
fnsave
in
adcb
push
testl
or
cs
test
mov
into
jb
clc
out
xchg
sbbl
inc
or
mov
mov
test
mov
out
imulb
stos
pop
pop
jbe
lods
jle
std
scas
int
fwait
rclb
ret
push
dec
sub
mov
js
cs
pop
ljmp
in
pushf
testl
inc
test
testb
pop
out
push
nop
mov
cli
inc
xchg
jo
push
adc
popa
xchg
cwtl
cmp
sub
mov
aaa
pop
add
adcl
or
jns
xchg
xor
mov
xlat
test
les
movsl
jns
mov
pushf
cld
call
and
mov
inc
fisttpll
pop
lock
ss
js
pushw
test
stc
jmp
js
jl
pop
outsl
jnp
sub
fdivrp
stos
inc
jmp
add
push
pusha
negl
pop
cmc
adc
jnp
repz
lea
adc
lret
push
adc
xor
xchg
add
jb
fnsave
shrb
shll
lcall
mov
mov
push
in
ja
es
cltd
sbb
push
pop
cmc
mov
sub
dec
push
fcoms
or
xchg
cmp
add
cmpb
pop
stos
xchg
cmp
sbb
adc
test
cmp
popa
add
shrb
dec
push
mov
push
lds
jb
sbb
sbbl
cmp
pop
sbb
cmp
test
mov
ja
mov
call
mov
cwtl
fisubs
nop
fwait
hlt
test
out
pushf
xor
pop
mov
cmp
push
push
push
lods
dec
lret
mov
sbb
into
mov
jno
ljmp
out
mov
testb
jae
push
gs
dec
in
dec
fwait
xor
int
pop
pushf
imul
push
js
pop
insb
jno
push
adc
rcrl
cmpsb
cmp
mov
hlt
mov
sbb
sbb
cli
pop
jnp
add
adc
std
xchg
arpl
hlt
xor
and
push
jae
xchg
pop
xor
shll
sbb
pop
dec
or
push
lahf
jb
and
inc
repz
sbb
scas
jae
cmp
popf
in
fdivl
add
movsb
cmp
mov
jnp
shrl
sub
cmp
mov
fidivs
sbb
lea
lds
inc
call
or
clc
mov
ret
pop
mov
sarl
adc
xchg
je
mov
jmp
movsl
cmp
or
out
popa
mov
lahf
ss
xchg
sub
mov
dec
xchg
test
sub
xor
fsubrs
popa
into
gs
popf
sbb
daa
cmp
fdivl
pop
int
lea
es
insl
mov
int
movsb
shlb
shl
fidivl
repz
nop
enter
shr
push
sbb
add
mov
fnsave
mov
inc
call
or
popa
mov
pop
mov
xchg
sub
add
fnsave
sbb
imul
xor
mov
ret
repz
addl
je
inc
mov
lds
push
xor
mov
aas
push
push
out
lods
pusha
xor
dec
int
test
pop
addr16
lods
mov
push
mov
push
in
cs
stos
inc
sbb
mov
nop
mov
mov
test
scas
mov
mov
add
sub
jg
mov
andb
dec
and
push
sbb
jae
or
lcall
sbb
jg
ret
stos
inc
loop
xchg
cs
es
jp
nop
daa
dec
fwait
xchg
sub
addr16
dec
shrb
popa
into
gs
pop
mov
xor
sbb
adc
mov
xchg
push
cmp
pop
lods
inc
imul
cmpsl
ds
mov
add
xchg
sub
in
test
sbb
rorb
dec
cwtl
das
aas
popl
sahf
std
add
mov
xchg
dec
jnp
lcall
mov
into
gs
and
je
jns
outsb
or
jno
xor
push
sahf
xor
sub
insl
lods
mov
js
add
sub
jge
jp
push
leave
pusha
mov
es
pop
aad
mov
cmp
push
mov
add
outsb
xor
js
push
stos
shll
or
fwait
sub
and
mov
inc
jg
xlat
scas
push
pop
repz
dec
loope
jmp
aam
int3
push
repnz
push
xchg
push
jns
call
shlb
jge
jne
inc
std
xchg
cmp
inc
fsubr
shl
mov
lret
bound
das
outsb
xor
repnz
int
pop
lcall
sbb
add
or
dec
loope
call
sbb
add
call
int3
cs
stc
popf
sahf
dec
out
mov
push
in
std
inc
or
sbbl
mov
jmp
mov
loop
adc
jno
lret
fdiv
jnp
in
lahf
ss
mov
movsl
lea
pop
sbb
mov
decb
mov
push
mov
sbb
scas
xchg
push
out
iret
sub
add
outsb
add
push
cmp
add
lcall
je
add
out
mov
jbe
mov
les
mov
fs
cmpsb
push
lods
inc
inc
mov
jecxz
sub
cmp
xor
xchg
cmp
stos
sub
cwtl
fwait
outsb
pop
pop
lahf
mov
adc
hlt
mov
adc
cmp
dec
out
push
mov
cs
mov
ret
enter
mov
clc
dec
ljmp
fs
arpl
xlat
test
mov
fisttpl
fcmovne
insl
and
jnp
sub
psraw
mov
jge
cld
push
mov
adc
push
iret
jle
int3
push
and
fdivrp
push
mov
mov
addr16
mov
decb
sbb
dec
mov
and
jmp
pop
jb
cli
daa
mov
bound
xchg
imul
jno
inc
mov
push
nop
daa
inc
mov
sti
push
mov
mov
cltd
rcrl
in
or
imul
in
popf
push
call
lods
gs
fisubrs
mov
loopne
bound
repnz
adc
pop
cmp
js
mov
testb
in
jae
iret
push
into
shl
in
rcl
sub
cltd
push
call
loop
adc
pushl
mov
mov
dec
rclb
cmp
out
ja
in
stos
cmp
xchg
and
addr16
test
int3
xor
inc
movl
xor
push
push
or
pop
jge
dec
dec
fimull
dec
cmp
pop
dec
lds
push
push
sub
xchg
cltd
sub
sub
rcrl
ss
jno
add
test
xchg
adc
push
mov
pop
rcrl
xchg
inc
cli
loope
rolb
push
ret
rcrl
pop
xlat
mov
or
xchg
lcall
cmp
xchg
sub
inc
pushf
pop
icebp
loop
jl
mov
hlt
mov
fdivrs
outsl
in
fs
mov
out
mov
and
adc
nop
outsl
insb
mov
push
outsl
pop
icebp
jnp
shrl
pushf
or
mov
or
and
or
push
inc
jno
arpl
xor
ja
add
add
out
hlt
xor
fadds
pop
in
inc
push
repnz
addr16
les
daa
push
cld
xchg
dec
out
xchg
push
insb
movsl
cmp
daa
sub
jl
fbstp
popf
xor
mov
lds
mov
and
in
jp
inc
lds
hlt
cmp
jbe
mov
mov
fistpl
mov
jecxz
xchg
mov
in
out
cmp
aad
add
lahf
push
sub
test
lret
clc
outsl
jmp
pop
mov
fcmovnb
pop
fiaddl
out
xor
push
xor
ss
push
mov
inc
fmuls
push
daa
add
call
stos
mov
stos
pushf
inc
or
cld
xchg
and
movsl
xor
arpl
xor
mov
ud2
mov
xor
js
js
jno
adc
pusha
test
adc
sbbl
js
notl
test
jmp
and
or
fwait
add
pop
rcl
xchg
jns
push
xorb
xchg
push
jle
movsl
and
mov
aas
adc
fidivl
ds
jge
lods
rclb
add
cmpl
insl
aad
add
cs
addr16
ss
push
dec
in
ret
mov
add
adc
test
repnz
mov
dec
fistpll
xor
add
push
call
loopne
pop
adc
in
xchg
adc
subl
mov
push
mov
xchg
test
xchg
mov
loope
and
int3
shr
inc
ss
lods
es
aad
insl
insb
scas
inc
sahf
loopne
xchg
add
pop
cmp
mov
cmp
inc
mov
mov
mov
pushf
fstp
cs
adc
and
cs
out
test
outsb
ss
dec
ror
sbb
mov
mov
ljmp
jl
movb
xchg
jbe
dec
out
mov
or
negb
js
sbb
sub
sbbl
xchg
mov
lds
cmp
push
add
adc
push
and
es
clc
shrb
and
mull
or
enter
leave
adc
ss
cmp
cmp
jae
sub
sbb
arpl
jmp
adc
cmp
mov
mov
jbe
jmp
or
aas
lods
adc
sub
sub
std
cmp
or
sbb
push
je
mov
fnstsw
sub
aad
push
mov
bound
jle
dec
in
lahf
pop
iret
and
cmp
xchg
sbb
insl
es
mov
mov
and
sbb
cs
mov
icebp
xchg
pop
push
xor
sub
push
xchg
loope
mov
test
iret
lret
cmp
js
push
cs
mov
call
xchg
cmpsl
or
mov
lock
lea
pop
inc
jne
xor
and
mov
push
pusha
mov
jb
outsl
mov
enter
in
or
jbe
cmp
fstpl
push
leave
xor
adc
je
ficoml
jno
scas
sub
and
insl
add
repnz
fisubrl
dec
xor
enter
cmp
dec
das
add
push
imul
mov
aam
sbb
lcall
sub
jne
je
test
cwtl
mov
xchg
mov
inc
insb
pop
aad
clc
sbb
push
popf
add
mov
and
mov
imul
in
xchg
mov
std
cli
cltd
in
js
shl
sub
icebp
mov
cli
add
lods
lods
mov
inc
mov
add
sub
clc
add
cs
sbb
dec
iret
adc
jl
or
lds
sub
test
mov
mov
inc
xlat
pusha
jo
aam
fs
arpl
in
pop
jge
jl
xchg
int
cmp
mov
fldenv
fs
sarl
xchg
repnz
fcomps
dec
stos
mov
and
add
hlt
dec
fists
insl
call
stos
push
sub
add
pop
repnz
jmp
xchg
sub
dec
cwtl
sarb
mov
pop
cmp
xor
adc
loopne
xor
cmpsl
in
in
std
dec
in
sbb
in
movsb
and
add
cmp
xchg
std
in
cmp
jb
mov
clc
cld
xor
adcb
mov
fneni(8087
scas
lds
cmp
jge
lock
fdivs
push
mov
sbb
xor
loop
push
into
movsb
in
mov
loop
and
push
in
fs
lea
adc
jo
gs
fildl
fcompl
add
inc
sbb
mov
sub
jmp
pop
push
cmp
repz
xchg
jns
cmp
add
pop
adc
or
jl
mov
mov
movsb
xor
mov
push
inc
push
shlb
jge
sub
mov
add
fldenv
insb
fisubl
lret
add
icebp
es
dec
mov
je
jg
stc
dec
scas
jl
rcrb
jle
insl
in
dec
xchg
call
mov
outsl
inc
dec
shl
cltd
xor
hlt
aam
adc
lods
sbb
dec
lds
fildll
push
xchg
enter
ds
mov
icebp
dec
pop
or
incl
loopne
aam
addr16
scas
ja
cmp
or
mov
pop
dec
jecxz
push
lds
frstor
fwait
cmpsl
fwait
xor
adc
jno
ljmp
xchg
cmp
push
repnz
cmpl
jbe
pop
mov
sbb
jle
insl
shll
divb
mov
pop
add
inc
in
fdivrl
cmp
add
sub
sub
loope
pusha
xchg
leave
out
xor
sbb
and
ror
push
lds
insl
subb
dec
test
cli
out
or
fidivrs
add
enter
in
inc
daa
push
sbb
dec
leave
in
scas
insb
xor
lods
mov
jle
lea
orb
and
or
ret
gs
hlt
inc
and
sbb
xor
int3
ja
pusha
cmove
out
aad
xchg
outsl
push
jg
fldl
test
les
int3
nop
pushf
xor
in
xchg
aaa
adc
lods
inc
arpl
movsb
icebp
add
scas
mov
add
mov
orl
fcmovnu
mov
xchg
xchg
sub
pop
in
sti
push
pop
insl
fisubs
lea
xchg
fs
cmpsl
xor
inc
fcomi
subl
sahf
add
push
shll
push
ds
push
xchg
test
push
ljmp
cmp
cmp
mov
mov
dec
mov
dec
loop
outsl
xor
movsl
push
test
add
sbb
insl
cmp
in
push
push
loop
xchg
push
js
mov
pop
jns
jle
pop
fistpl
jns
je
sub
js
or
cmpsb
inc
mov
popf
inc
jno
int3
sbb
adc
xchg
mov
mov
and
in
movb
ss
sub
adc
xor
mov
std
pusha
fstpt
xchg
push
mov
scas
mov
ficoml
clc
pop
test
jns
pop
test
inc
mov
jae
sub
movsl
out
adc
cmp
mov
shrl
insb
int
jl
xchg
in
or
in
xchg
pop
cmp
or
test
lock
mov
cs
sub
adc
stos
fmuls
dec
js
push
or
js
and
outsb
add
push
pop
add
gs
or
jno
pushf
xor
mov
pop
scas
sub
or
iret
gs
idivb
test
ss
das
imul
inc
adc
enter
and
adc
pop
mov
imul
cmp
push
icebp
fisubs
xor
cmp
xor
loop
dec
rcrl
add
stc
jl
hlt
lods
sbb
sbb
mov
dec
call
add
mov
ret
jecxz
sbbl
mov
push
rcr
sub
jecxz
test
std
ja
movsl
xorl
jmp
jmp
into
fstl
mov
cmpsl
add
testb
insb
out
out
pop
jmp
mov
inc
or
imul
pop
pop
mov
mov
and
cltd
dec
and
mov
xor
fisubl
arpl
into
add
mov
out
jecxz
inc
jmp
sub
inc
xchg
xor
push
or
pop
data16
and
dec
icebp
dec
inc
insl
enter
lods
sbb
jno
outsb
ds
fnsave
dec
lahf
mov
jnp
push
mov
into
aaa
dec
pusha
mov
mov
pop
pusha
jbe
cld
pop
pop
mov
ja
pop
or
popf
lret
jb
jae
stc
jmp
sti
inc
xor
add
cmp
mov
fsts
enter
xor
imul
xor
sub
dec
xor
stos
int3
mov
in
ljmp
pop
in
xchg
aad
adc
es
out
lods
jmp
inc
push
sub
cmp
add
ljmp
aaa
push
push
jns
xchg
stos
jb
dec
jbe
pop
mov
cmp
movsb
push
aam
pop
cli
push
pop
les
mov
cmp
cmpsl
shrl
out
dec
fisubl
pusha
je
push
out
jns
arpl
test
lret
pop
aad
test
mov
pop
outsl
add
testb
adcl
ror
mov
stos
jle
ret
mov
ljmp
and
sbb
aam
push
xchg
xor
cmp
mov
mov
adc
mov
out
sbb
mov
jnp
mov
rol
pop
jae
insl
jo
cmc
test
test
and
fcomps
xor
mov
push
sahf
sbb
jmp
ljmp
js
jl
addr16
fsts
testb
ret
adc
pushf
das
lea
mov
inc
dec
mov
jge
lds
les
fs
js
cmpsl
xor
adc
xchg
nop
loope
jno
pop
sbb
rcrl
repnz
pusha
scas
pop
cmp
imul
rolb
mov
push
and
in
shlb
mov
mov
fsubp
stc
xor
leave
mov
repz
cmp
shll
mov
add
cmp
aam
dec
jl
in
push
jmp
inc
stos
jmp
dec
arpl
pop
cmpsl
add
mov
test
pushf
mov
push
cwtl
das
mov
and
out
mov
jne
cmp
xorb
jge
jg
test
cmp
imul
add
pop
jne
mov
push
lret
or
dec
adc
xor
addb
andl
xchg
jne
push
lods
dec
xchg
mov
dec
push
cli
imul
jne
inc
pop
mov
out
cld
or
out
push
mov
adc
jno
mov
pop
lds
in
jmp
movl
cmp
mov
mov
sbb
aas
lds
pop
add
jbe
add
mov
loop
adc
into
jmp
in
iret
and
mov
jno
inc
iretw
xor
push
rcrl
mov
fwait
in
nop
mov
mov
iret
scas
sbb
dec
popa
es
fbstp
out
cltd
out
xchg
movsl
test
ss
ret
sbb
sti
sub
mov
inc
dec
xchg
push
ret
mov
and
fiadds
jecxz
and
rorb
add
lcall
mov
cmc
std
xchg
daa
int
lea
daa
adc
test
mov
in
cmc
scas
sub
ds
iret
jl
fbstp
scas
inc
mov
test
ret
cli
mov
xchg
addr16
adc
mov
fdivrl
inc
cmp
sbb
repnz
jle
push
addr16
into
mov
push
inc
add
mov
inc
xchg
aam
loop
mov
es
scas
fwait
popa
jno
xchg
cmc
jnp
push
stos
xchg
sub
aas
test
add
gs
out
mov
or
jae
sbb
push
call
mov
aam
data16
jp
jns
stc
ja
xchg
cwtl
jne
outsb
out
xchg
sbb
jae
hlt
aaa
mov
xor
nop
adc
dec
jnp
and
popa
xchg
cs
aaa
mov
xchg
out
frstor
sub
scas
mov
pusha
add
mov
jnp
cmp
pop
push
iret
push
xor
divb
inc
jge
rol
jle
aam
lcall
cmc
ljmp
shl
xchg
sbb
daa
jbe
imul
push
add
xor
shll
xchg
or
sbb
pusha
dec
add
insb
push
sbb
jb
sahf
and
data16
sub
jne
lahf
jle
insb
outsl
orl
and
cltd
clc
outsl
sub
enter
or
data16
repz
dec
xchg
xlat
nop
cmp
jl
inc
push
lds
pop
inc
xchg
jb
cmpsb
adc
cmp
and
push
push
cltd
xor
cltd
cmp
cmp
dec
sar
inc
sub
and
insb
push
pop
cmp
mov
mov
dec
lahf
fcmovbe
xchg
int3
inc
cmp
xchg
scas
or
push
inc
cmp
gs
dec
sbb
jle
fsubrs
imul
nop
and
xsha1
cmpsb
or
sbb
test
popf
enter
outsb
jae,pn
inc
add
pop
icebp
xchg
fildll
push
lea
xor
mov
jle
push
mov
push
dec
and
mov
mov
pop
imul
xorb
mov
jecxz
inc
ja
ret
call
jle
loop
xchg
rol
jl
mov
mov
mov
in
aam
push
pop
aas
sub
fidivl
cmp
repnz
je
sbb
inc
shl
push
pusha
dec
adc
fistpll
adc
ljmp
repz
ret
loope
jae
mov
mov
push
sub
movhlps
add
sbb
pop
daa
push
jae
and
and
pop
paddusb
sub
mov
jmp
mov
dec
cmp
inc
sbb
addr16
fs
imul
mull
arpl
xor
mov
xor
call
xor
lahf
push
imul
sbb
rorb
fnsave
sarl
xor
jmp
mov
sar
jg
or
test
stos
cmp
subb
into
mov
or
push
cwtl
push
imul
aam
xor
xchg
xor
pop
cmc
cs
jmp
or
sub
test
scas
inc
iret
jo
arpl
sub
stos
dec
fbstp
dec
mov
add
out
out
mov
cmp
repnz
add
adc
loope
jmp
iret
add
xorl
addl
je
add
xor
xchg
int3
shlb
int3
in
mov
mov
xchg
mov
sarl
cmpsb
into
movsb
or
push
lods
loop
inc
mov
out
xchg
jns
rol
aad
inc
push
mov
mov
in
push
outsb
mov
shrb
mov
mov
fiadds
std
repz
jmp
push
sbb
push
mov
push
sbbl
and
xor
fcmovne
mov
call
into
and
cmc
lret
dec
mov
sbb
lods
add
add
scas
loopne
push
adc
jecxz
mov
cli
popf
xor
inc
cmp
inc
roll
xchg
or
pop
in
in
pop
hlt
lret
mov
mov
ds
sahf
jbe
mov
or
push
xchg
bnd
mov
and
mov
imul
push
push
sarl
imul
mov
pop
andb
sbb
cmpsl
call
popa
xor
ret
adc
arpl
adc
pop
and
sub
and
mov
dec
addr16
mov
insb
aas
addr16
aad
mov
fildll
in
sbb
rorb
popa
clc
pop
xor
xor
test
push
movsl
hlt
aas
outsl
push
inc
adc
jmp
divl
testl
aad
insb
pushf
sti
shl
mov
ja
mov
lock
ret
dec
test
insb
ds
push
in
push
aam
xchg
push
push
leave
pusha
inc
or
jl
leave
pusha
lds
ds
pop
testb
inc
fsub
mov
and
fs
xor
sbbb
push
es
fsubrs
mov
stc
sub
dec
adcb
mov
sahf
xor
call
or
into
cmp
push
mov
fldcw
ret
mov
cmp
pop
xchg
and
jl
xorb
add
xchg
mov
jae
cmpsb
xchg
jecxz
ret
cmp
imul
cld
push
dec
pop
int3
lock
pushw
adc
xor
sub
popa
push
lock
mov
arpl
add
xlat
repz
sub
add
mov
xchg
adc
iret
xchg
mov
push
sbb
into
inc
scas
out
into
into
inc
sbb
mov
aam
call
ja
dec
mov
push
divb
xor
mov
jp
fcoms
outsb
mov
push
push
cmp
out
xor
shlb
in
inc
push
mov
imul
imul
cmp
or
lods
loopne
pop
cmpsl
xchg
cmpsl
call
cmp
add
ficoml
cltd
mov
or
or
sbb
push
outsl
insb
ss
cmc
out
cmpsl
sbb
jle
mov
xchg
sub
ss
inc
mov
es
fwait
push
aaa
or
and
fidivl
clc
scas
xor
pop
test
cmp
adc
adc
into
xchg
push
cli
movsl
insl
outsl
repnz
xorl
push
repnz
or
inc
insb
mov
inc
push
arpl
ljmp
sbb
mov
pop
inc
adc
cmc
adc
repz
sub
pop
icebp
sbbl
cld
pop
jb
mov
pop
jge
test
pop
daa
repz
push
mov
or
insb
jg
decb
loopne
push
push
mov
ret
mov
test
lea
ja
cmc
das
cld
lret
pop
in
cmc
lds
lret
push
aas
add
fadd
fadd
adc
cmc
cmc
push
adc
repz
shll
jno
sbb
dec
shll
inc
xor
sub
rcr
insb
fildll
int3
sbb
mov
xacquire
add
sar
xor
dec
push
xlat
aaa
inc
mov
clc
push
call
outsl
movl
mov
cs
xlat
mov
sbb
jno
lods
xor
in
lds
inc
imul
push
lods
xor
sub
jo
dec
push
sub
mov
fildll
cmp
cmpsl
outsl
xchg
cmp
into
lret
mov
jno
repnz
push
xor
mov
sbb
mov
push
push
dec
fcoms
bound
adc
fmull
sub
cmp
je
cli
outsb
push
adc
ja
loop
lea
cmp
test
cmpsl
mov
jp
dec
jns
cmp
int
jno
push
mov
pop
sbb
dec
add
xchg
shlb
xor
les
fsubrl
pop
imul
and
mov
aad
or
cmp
imul
ja
call
test
sar
mov
test
xor
ljmp
sbbl
xor
xor
pop
stc
add
icebp
popf
out
or
xchg
out
lcall
inc
mov
cmp
ror
xlat
adc
mov
popa
sbb
jnp
mov
out
inc
mov
shrl
call
in
sbb
push
xlat
cltd
and
sub
dec
js
jmp
dec
fwait
cmpsl
sbb
in
bound
sub
cltd
jge
test
rol
cs
mov
lcall
daa
sbb
xchg
lods
or
sbb
inc
movsb
into
aas
lahf
xchg
push
add
hlt
lea
jns
xchg
in
lret
inc
or
int
mov
popa
or
pop
pop
pushl
roll
stc
mov
adc
leave
or
lret
jge
inc
pop
pop
cli
mov
cltd
xchg
pop
stos
or
jae
dec
scas
cli
push
lods
sub
les
pop
in
popf
cmpsl
sbb
pop
jb
cmp
in
adc
inc
add
mov
add
pop
sti
jno
add
cld
loop
dec
ljmp
inc
dec
cltd
and
cmp
imul
mov
jecxz
mov
mov
aad
jb
xchg
add
aas
movsb
addr16
std
mov
mov
imulb
mov
int
fld
int
ljmp
sarl
sub
mov
ficoml
add
xor
insb
cmpsb
push
repnz
notl
mov
or
jne
ds
mov
fwait
dec
rolb
mov
scas
pop
data16
and
shll
dec
fistpll
fcomip
mov
loope
and
ljmp
inc
cmp
jle
mov
fsubs
push
fldt
pop
mov
sbb
pop
inc
mov
popf
jnp
mov
mov
nop
fsubrl
cmp
cmc
mov
iret
dec
in
mov
push
pop
insb
nop
xchg
dec
mov
outsl
arpl
xchg
nop
aad
inc
cmpsb
sbb
jno
lahf
jle
mov
dec
push
je
add
mov
sub
add
jle
and
xchg
or
test
movsb
sub
enter
leave
xlat
mov
fidivs
dec
or
xor
lock
pop
mov
push
addr16
mov
mov
dec
iret
mov
repz
stos
jmp
adc
jae
push
inc
test
aam
test
ss
sahf
sti
adc
lods
mov
pop
rcr
mov
jge
std
mov
mov
insb
jl
mov
pop
loopne
jg
fldl
in
xor
ds
fstps
das
mov
test
addr16
jne
or
mov
cld
or
push
jmp
imul
loopne
into
stos
add
jl
and
icebp
es
sbb
icebp
addl
das
adc
cmpsb
inc
sbb
mov
dec
iret
xchg
fsubrl
in
dec
loopne
pop
dec
lods
mov
sub
sub
push
pop
in
mov
dec
testb
enter
lds
icebp
jge
repnz
arpl
jg
movsb
pop
mov
movsl
popf
mov
sub
cmp
push
out
sbb
pop
jae
jne
insb
pushf
popa
fmull
pop
xchg
das
mov
andl
adc
inc
xor
jno
aaa
mov
test
gs
das
xchg
pusha
cmp
mov
xor
or
pop
inc
mov
stos
sub
inc
test
adcl
test
mov
les
mov
adc
nop
stc
js
mov
xchg
mov
mov
test
inc
inc
push
lret
dec
loop
lea
test
pop
adc
leave
mov
imul
mov
fcmovnb
dec
test
pushl
out
push
cmpsl
add
es
sbb
mov
movsb
cmp
inc
dec
bound
enter
cmp
mov
xor
loop
xchg
and
xor
jno
xor
xchg
sub
fstps
ja
stos
or
dec
imul
popf
outsb
jno
lods
mov
aam
dec
dec
add
dec
add
add
lcall
les
pop
sbb
adc
pop
repz
cltd
xor
cld
xchg
mov
sub
sub
push
mov
cmp
jo
add
pop
lahf
xor
rolb
pop
je
and
imul
sbb
xlat
es
leave
mov
mov
ja
jg
lret
sbb
shlb
out
push
rcl
aam
xchg
stos
inc
enter
sub
or
pop
mov
inc
sub
dec
dec
sbb
in
aaa
push
fwait
cmp
shlb
enter
imul
pop
adc
and
mov
jae
cmpsb
mov
int
mov
dec
movsl
std
or
dec
ss
outsl
subb
jnp
cs
add
ljmp
jmp
jno
jo
xchg
sbb
sbb
aaa
fisubl
iret
sbb
xchg
loope
int3
ret
rclb
sbbb
xchg
gs
push
je
sub
xchg
push
test
dec
test
test
movsl
xchg
js
adc
add
and
pop
sub
dec
cmp
cld
mov
xor
lret
or
scas
leave
pusha
fldcw
clc
cs
addr16
movsb
pop
mov
mov
lahf
mov
stc
add
sub
add
das
lahf
xor
cmp
mov
movsl
add
aam
enter
lods
cld
jecxz
stos
mov
call
push
jae
mov
aas
mov
stos
pop
push
nop
lds
sbb
sbb
push
shlb
fcompl
jne
cmp
and
popa
push
push
ret
xchg
cs
gs
scas
xchg
push
lret
cmp
dec
shll
jbe
hlt
aad
mov
test
lcall
push
sub
call
push
jmp
jle
or
cmp
and
call
mov
shlb
dec
sub
ja
cmp
pop
fwait
pop
push
testl
mov
pop
cmc
dec
jl
jp
mov
jle
aam
scas
dec
shll
rcll
inc
scas
push
push
fidivs
adc
sbb
arpl
inc
fdivs
ret
cmp
mov
adc
inc
dec
in
and
out
outsl
enter
sub
mov
mov
push
bnd
hlt
adc
sub
mov
movsl
fwait
mov
icebp
add
iret
xchg
cmp
jo
and
xchg
and
fsubrp
incb
mov
fwait
clc
pop
sbb
inc
dec
push
lea
loop
scas
and
test
jmp
or
push
mov
out
orl
rolb
in
push
and
xchg
scas
jae
js
mov
push
mov
xchg
pop
jbe
fnstenv
pop
vpmulhuw
sbb
mov
jg
stc
mov
nop
loop
adc
repnz
int
lds
sahf
dec
popf
push
and
push
xchg
cltd
scas
cld
mov
rorl
int
sub
dec
adc
into
imul
push
pop
xchg
stos
jb
mov
decb
push
das
data16
xlat
icebp
out
sti
xchg
mov
sbb
test
ss
jo
pushf
or
jae
lds
stos
insl
pusha
and
sbb
lcall
push
jbe
outsb
push
pop
int
ret
hlt
adc
xor
addr16
ror
mov
faddl
add
sbb
iret
ret
js
mov
mov
into
fcmovne
iret
shll
add
fidivl
add
mov
mov
nop
outsl
mov
pop
aam
pop
fistps
mov
push
popf
out
leave
sahf
jmp
jno
pusha
mov
and
dec
icebp
dec
jg
push
cltd
ret
inc
int3
lea
pop
iret
sub
pop
mov
mov
cmc
mov
int3
out
loop
mov
mov
jl
xor
xchg
add
inc
cwtl
js
fwait
push
sbb
pop
jecxz
ds
jno
sbb
ja
lea
jno
in
cmpsl
cmp
xchg
andl
rclb
pop
repnz
push
cmp
in
add
inc
xor
test
push
lahf
lret
or
pop
repnz
mov
stos
dec
stos
sub
les
cmpsb
arpl
xchg
ss
xchg
cmpb
and
mov
rolb
and
pushf
xor
ffree
mov
jns
xchg
cs
fisubrl
popf
cld
push
je
push
insb
cmp
iret
xchg
gs
pop
sti
lods
or
cmp
subl
inc
sbb
inc
adc
hlt
push
pop
aaa
or
xchg
pusha
imul
dec
mul
jp
aam
xlat
push
pop
add
lea
aas
add
das
fisubrl
daa
lcall
adc
fwait
push
lcall
push
or
xchg
inc
mov
sbb
cltd
stos
sbb
pop
test
pusha
mov
fs
test
lahf
std
stos
xchg
push
adc
inc
stc
ret
xchg
xchg
jl
addr16
add
loope
std
mov
int3
popa
inc
adc
nop
movsl
inc
or
lea
mov
mov
add
jg
add
sub
and
pop
stos
ljmp
or
js
enter
cmp
mov
scas
fnstcw
or
xor
xor
movl
or
test
dec
add
iret
dec
scas
out
cli
push
push
xchg
adcb
push
bound
lahf
inc
aas
out
xor
mov
aaa
cmp
pushf
cmp
ljmp
movb
rcll
movsl
ret
or
sub
or
daa
push
js
push
jl
shlb
push
shll
sbb
test
cltd
mov
xor
jne
dec
in
incl
adc
adc
clc
jg
shll
mov
sar
sahf
and
cmp
imul
ljmp
add
vmovaps
push
ret
xorb
inc
cmp
jo
test
jle
ds
mov
and
and
or
rcrl
sbb
dec
stos
addr16
lea
into
mov
stc
xchg
js
pop
add
pop
mov
inc
jno
dec
inc
add
add
mov
pop
mov
cmp
popf
push
cmp
outsb
fwait
or
leave
jnp
inc
mov
loopne
pop
popf
cmp
jne
cmp
xchg
pop
imul
inc
lcall
lods
rdpmc
sub
inc
jo
cmp
arpl
pop
scas
push
fdiv
bnd
pop
scas
adc
mov
mov
cmpsl
and
dec
pop
test
ficoml
sub
shl
popa
mov
test
lret
int3
in
test
push
pop
stos
pop
cwtl
fidivs
mov
adc
mov
fstpl
ficompl
testb
xchg
mov
in
push
xor
sbb
dec
push
push
or
push
popa
pushf
sbb
dec
cmpsl
cmp
mov
repz
mov
shr
sahf
hlt
xchg
sbb
jns
dec
dec
sti
fwait
mov
adc
xchg
addr16
sub
shrb
mov
xor
mov
and
dec
push
mov
shl
decl
loope
dec
adc
shll
aas
dec
test
mov
xor
pop
xor
notl
mov
leave
jecxz
xchg
cld
sub
fsubrl
jne
fwait
add
call
or
mov
cmpsb
pop
addl
sbb
lock
imul
imul
rclb
cmpsl
push
popa
je
jbe
mov
push
bound
mov
cmp
faddp
push
mov
adc
pop
jns
xor
movsb
sti
mov
mov
add
movsb
fcompl
out
insb
mov
jne
lea
mov
lods
mov
mov
data16
sbb
xchg
mov
mov
jne
adc
clc
fildll
inc
add
xchg
mov
ret
sbb
xor
cmpsl
mov
pusha
dec
popa
jnp
push
shrb
adc
xor
xchg
push
xor
ret
cmc
enter
pop
jp
adc
add
cld
xchg
into
es
add
repz
sbb
add
ficomps
loope
add
mov
icebp
nop
popa
push
gs
andb
push
cmc
pop
mov
pop
add
loope
jb
pop
fisubl
push
dec
lds
mov
adcl
push
mov
addr16
scas
jae
pop
dec
popa
xor
rorl
push
call
ret
push
popf
aad
insl
nop
je
and
scas
xchg
sbb
das
inc
aaa
int
sub
push
sbb
mov
mov
jno
andl
xor
cmp
inc
pop
je
adc
lds
mov
into
div
sbb
sbb
aam
mov
insb
jl
mov
pop
clc
pushf
mov
mov
mov
cwtl
das
jge
dec
fs
mov
in
add
push
mov
int
out
leave
and
or
pushl
aam
gs
sbb
lock
mov
cmp
insb
mov
sub
inc
mov
mov
movl
jne
and
rcl
inc
dec
jle
mov
cmpb
cs
xor
sbb
sub
lret
xor
sbb
lret
mov
inc
test
scas
or
das
out
dec
fsubs
sub
repnz
testb
or
pop
lea
lods
cmp
xchg
pop
mov
push
mov
pop
data16
cmp
icebp
outsb
aad
fcmovu
data16
mov
xchg
xchg
lods
daa
mov
cmpsl
ds
lods
mov
push
shrl
push
rorl
out
sahf
pop
insl
out
ret
aam
fwait
and
ret
mov
clc
fucom
movsb
out
fnstenv
cmpsb
ljmp
mov
data16
push
mov
sub
add
sbb
inc
test
adc
or
adc
ret
ja
fidivl
xchg
notl
jnp
gs
je
pop
cmp
mov
aad
xlat
lods
jp
push
icebp
test
lret
ja
adcb
andl
lcall
pop
xor
push
inc
xor
ljmp
jno
and
fdivrs
leave
pop
cmp
repnz
cmpsb
cmpb
jp
sub
pushf
test
nop
mov
bound
sbb
cmp
jge
dec
dec
pop
rcrl
and
sub
mov
jb
movntps
adc
fwait
xor
sti
xchg
fldl
adc
mov
rcll
jge
push
lods
movsl
cmp
leave
inc
bound
push
cmp
aas
inc
out
test
mov
cmp
pop
push
xchg
pop
imul
and
add
lock
jb
in
pushf
into
pop
pushf
pop
pop
enter
sbb
mov
sbb
je
mov
in
jg
jle
arpl
or
fildll
cmp
je
push
xor
aas
mov
add
scas
xor
pop
xor
xor
or
cmp
lods
out
cmpsl
and
mov
hlt
movsl
les
jno
rclb
jno
and
sbb
push
sub
mov
daa
cs
ja
test
push
adc
out
sti
sbb
push
inc
push
ljmp
sbb
cli
xchg
pop
cmp
repz
idivb
stc
or
repnz
sub
das
pop
sub
mov
add
lret
lds
cmpl
dec
pop
sub
xlat
mov
in
mov
test
cmp
and
lods
xchg
repz
mov
jns
and
adc
sub
sbb
inc
fsubrp
addr16
inc
push
mov
or
insb
mov
inc
jp
xchg
jb
adc
rclb
stos
push
stos
pop
imul
lds
rcll
mov
xor
push
insl
sub
mov
pop
fiadds
add
je
std
and
mov
adc
push
add
pop
xchg
scas
call
mov
stc
dec
out
stc
and
push
xlat
dec
inc
ss
xor
js
push
fldln2
pop
and
xchg
outsb
push
xor
dec
mov
js
mov
hlt
cmc
shl
xchg
xchg
dec
movsl
dec
call
sub
and
scas
pushl
inc
add
mov
dec
scas
xorl
jb
lahf
or
ja
xor
xchg
mov
jp
mov
mov
inc
sbb
shll
addb
aad
and
cmpsb
push
fsts
sbb
sbb
outsb
test
jl
sbb
loop
dec
loopne
add
cmc
inc
iret
repnz
xlat
inc
mov
jns
mov
scas
adc
inc
pop
sahf
test
cld
sub
sahf
test
inc
sub
push
hlt
inc
imul
jo
push
jbe
cmpsb
imul
or
dec
cmpb
loop
clc
pop
pusha
mov
es
divl
repnz
sbb
ret
fcompl
pop
adc
pop
cmp
loopne
dec
in
mov
cmc
shll
pop
pop
in
fnsave
push
subb
push
pushf
push
or
outsl
dec
xlat
repz
dec
or
inc
stos
sub
stos
lea
mov
das
cmp
adc
cmp
mov
int3
dec
push
adc
mov
jno
int
cs
popa
mov
sbb
ljmp
ja
dec
xor
inc
sahf
sbbb
cmpsl
sub
and
adc
and
fs
jne
xor
clc
nop
aaa
mov
pop
sub
adc
jo
lret
mov
cmp
data16
cwtl
push
push
and
fisttpl
lock
aad
lret
sub
push
xchg
ficoms
mov
jno
and
addr16
cwtl
mov
mov
sbb
sbb
mov
sarb
sbb
aad
or
add
lret
mov
int3
test
mov
leave
xor
pop
xor
jno
mov
sti
out
arpl
mov
loope
push
mov
pop
fisubs
negl
xor
inc
enter
js
mov
test
iret
fldt
push
sbb
xchg
pop
cmp
out
stc
popf
pusha
xlat
mov
rorl
push
sarl
aas
mov
out
cld
sbb
xor
aaa
inc
imull
ds
adc
push
inc
loope
pop
imul
sub
lods
frstor
daa
mov
cwtl
enter
hlt
pop
push
xchg
lods
fxch
bound
pusha
jmp
and
arpl
sbb
adc
or
push
mov
ficoms
stc
fwait
xor
push
jmp
xchg
add
xchg
scas
add
in
adc
pop
add
fsts
pop
adc
lcall
and
loopne
sub
aas
inc
dec
jno
or
sbb
and
and
inc
fistpl
sbb
inc
jmp
or
pusha
cmp
add
xchg
mov
inc
imull
sbb
jmp
add
inc
inc
fisubl
mov
xor
inc
mov
stos
fwait
inc
or
push
jnp
cmp
repz
enter
repz
in
stc
nop
aad
xchg
testl
sbbb
out
cwtl
jecxz
jnp
rorl
pop
addr16
stos
stc
cld
test
push
xor
sbb
dec
stos
adc
das
iret
fadd
out
sbb
pop
and
mov
pop
push
cli
push
push
subl
jne
jecxz
xchg
jb
pop
xor
pop
call
or
enter
mov
pushf
shlb
incb
jecxz
lcall
mov
adc
in
stos
nop
repnz
mov
repnz
xchg
adc
fs
popa
jg
xor
jmp
fld1
outsl
sar
mov
clc
sub
mov
pop
jne
cmpsb
xor
mov
xchg
mov
inc
test
out
arpl
dec
cltd
jne
mov
stc
dec
mov
lret
jge
mov
push
sbb
adc
sub
add
pop
xor
lahf
jl
or
ljmp
ss
in
fxtract
push
out
inc
stos
xor
fsubl
es
mov
xor
mov
or
lahf
cwtl
xchg
and
xor
sub
and
sahf
xchg
xchg
scas
push
jmp
loopne
arpl
jb
movsb
add
inc
cmc
mov
push
cmpsl
pop
mov
out
je
cmp
cmp
lahf
testl
pop
sahf
pop
icebp
mov
cmp
stos
xor
push
xchg
or
mov
xchg
imul
leave
and
add
ss
xlat
cmc
and
adc
cmp
jle
fstpl
lahf
push
out
adc
cwtl
jg
fs
inc
mov
scas
ficomps
push
out
pop
cmp
mov
xchg
push
sub
popf
mov
mov
sahf
mov
test
pushf
dec
aas
dec
dec
mov
mov
and
movsl
push
jmp
aaa
out
cmp
scas
adc
divl
lds
aas
loop
gs
add
jae
adc
dec
fstpt
int
leave
jae
mov
xor
mov
mov
jne
push
test
and
dec
xchg
popa
cmp
daa
add
scas
negl
shlb
push
aam
std
jo
jp
les
iret
rep
in
sbb
inc
xchg
adc
fidivrl
cmpsb
lea
cltd
xlat
icebp
into
repnz
add
inc
call
repz
out
pop
adc
pop
out
adc
in
test
js
fs
in
movsl
aam
sub
adc
mov
sub
repnz
cmpsl
and
jp
xchg
cmp
dec
jg
inc
cltd
adc
inc
pop
mov
stc
insb
ljmp
mov
aas
inc
ret
jbe
cmpsb
xchg
cwtl
mov
imul
push
sbb
popf
cmp
sbb
sbb
scas
jb
add
sbb
lret
cld
xchg
std
mov
mov
sbb
out
mov
outsl
ljmp
push
inc
aam
push
cmp
lea
jmp
adc
sub
fld
mov
mulb
lcall
adc
cmp
jo
cmp
inc
leave
and
pop
fcoms
std
test
and
or
sbb
fiadds
xchg
or
out
lcall
push
pop
mov
pop
loope
xchg
mov
mov
loop
sub
out
test
mov
in
add
push
add
pop
lock
jle
int
mov
adc
in
and
call
or
gs
cs
mov
jae
aas
adc
sub
xlat
push
cmp
leave
jl
mov
bound
aaa
push
dec
inc
xor
fwait
dec
rcll
and
mov
div
aam
lods
adc
ficoms
add
pushf
mov
pop
xchg
mov
daa
negl
pop
movsl
out
mov
pop
pop
pop
addr16
pusha
cltd
jg
rcrl
sbb
out
jno
push
lods
push
push
adcl
testl
popf
sub
cld
cmp
pop
mov
sub
inc
add
repnz
lret
rep
add
std
fucom
movsl
lea
mov
fs
adc
mov
mov
xorl
inc
arpl
rclb
loop
lods
fcompl
dec
popl
daa
inc
jl
or
ss
dec
pop
ret
xor
and
jae
push
cmp
sub
pop
rcll
dec
pop
mov
js
inc
xorl
cmpsb
adc
in
fs
test
loope
xor
inc
lcall
int3
mov
push
xchg
jmp
fiadds
mov
cmpsb
jge
mov
add
stos
inc
xor
pop
int3
pop
and
dec
dec
mov
or
cmp
adcb
loopne
jecxz
jle
pop
daa
ret
sub
insl
cli
sbb
test
pop
mov
int
lret
push
xchg
pop
js
out
add
mov
repz
data16
stos
mov
fwait
loop
pop
outsl
add
arpl
inc
scas
xchg
or
xchg
or
sarl
mov
dec
jecxz
les
rclb
scas
jne
adc
ficomps
and
or
mov
jns
shlb
ljmp
popf
scas
inc
sub
mov
lahf
and
and
inc
xchg
xchg
lock
loope
or
or
adc
aad
loope
filds
movsb
outsb
push
popa
daa
and
lret
mov
in
pushf
mov
leave
jg
clc
xchg
clc
pop
sbb
jne
movsb
mov
fsubrs
lods
push
or
test
mov
dec
push
insl
call
or
imul
les
fsubs
bound
mov
stc
push
mov
mov
fimull
mov
push
cli
in
pop
dec
xchg
int3
jp
aas
stos
mov
sub
fsubrs
aad
int3
repz
push
push
cmp
push
xor
mov
int
pop
dec
nop
xchg
sbb
pop
sbb
movsb
push
stc
xchg
mov
cmp
mov
xor
enter
out
sti
sbb
jae
mov
mov
cwtl
sarl
lea
and
or
mov
cmp
xchg
scas
insl
sbb
or
sub
popa
lods
dec
pop
jmp
rcrl
cli
add
test
push
jge
add
sahf
jno
pusha
xchg
push
bound
mov
dec
ss
movsl
xchg
push
mov
xchg
xor
scas
loop
call
mov
paddb
dec
test
cmp
mov
sub
test
sub
adc
outsb
rcrl
mov
mov
rorl
pop
mov
bound
jge
dec
loop
mov
sub
adc
xchg
pusha
or
nop
icebp
insb
mov
dec
movsl
out
sarb
out
or
ds
sub
fidivrl
jg
decl
daa
pop
dec
mov
xchg
aam
int
jge
nop
mov
mov
fimull
aas
fwait
cmpsl
jo
dec
mov
arpl
cmp
sbbb
mov
subl
inc
frstor
mov
pop
fcoms
aad
dec
xchg
adc
push
dec
dec
fisubl
dec
stos
adc
outsl
ds
push
cmp
mulb
in
cmp
lret
add
or
lea
call
out
int3
sahf
sub
fbstp
test
iret
pusha
add
jecxz
out
mov
lret
jecxz
adc
or
and
movsl
mov
adcl
ljmp
mov
dec
aas
cmp
dec
rolb
xchg
out
dec
dec
and
xchg
jecxz
cmp
sub
fsub
dec
and
arpl
dec
xor
sti
jp
inc
les
cmp
inc
mov
sti
mov
movsb
jle
jle
pop
inc
dec
es
test
out
add
sub
inc
adcb
push
sub
xchg
or
mov
jl
in
pop
cmp
nop
jmp
ror
jp
dec
mov
mov
loope
pop
insb
scas
lret
testl
xchg
in
sub
or
xor
es
inc
xchg
out
cmp
pop
mov
es
sub
jne
mov
adc
jnp
cmc
ret
mov
add
insb
push
stos
push
sbb
push
and
cmp
push
gs
mov
mov
xchg
daa
in
out
mov
jne
pop
lods
pusha
bsf
inc
out
push
lret
jle
lret
push
push
mov
lahf
popf
je
fdivl
ror
mov
cs
jns
push
jae
cltd
mov
adc
mov
les
sbb
int
lret
int
inc
cmpsl
mov
adc
dec
push
rorl
sahf
and
push
or
scas
clc
push
mov
mov
andb
xchg
or
js
movsl
pusha
xor
xchg
jbe
cld
mov
jne
insb
inc
cmp
clc
dec
push
mov
cs
in
fdivl
aas
icebp
push
jo
mov
cmp
ss
call
or
cmp
popa
pop
cmpb
adc
rclb
xor
ja
xor
jmp
cs
push
outsb
add
push
lahf
and
adc
jbe
jo
andl
jp
arpl
sub
pushf
cmp
cmpsl
mov
ret
sub
push
aaa
add
push
pop
or
aam
pushf
add
xor
movsb
dec
add
ja
sbb
mov
js
xchg
das
pop
push
lret
addr16
out
dec
loopne
loopne
push
add
xor
jmp
xchg
sub
out
and
adc
popa
orl
out
in
pop
cltd
lahf
stos
mov
add
xor
inc
pushf
and
rcr
and
push
pop
sbb
xchg
inc
lock
cwtl
fwait
xchg
xchg
sarb
faddl
cwtl
leave
lea
movsl
mov
fisttpl
mov
cmpsb
cmp
out
les
pop
or
add
adc
sub
mov
aam
ret
shll
stos
orb
rcll
out
or
inc
addr16
into
cmpsb
mov
jbe
pop
inc
push
sub
jp
fwait
pushf
xor
int
mov
cmp
lret
shrl
inc
sahf
cli
loop
sub
and
subl
xchg
dec
in
fstps
mov
lea
xchg
stc
push
mov
icebp
cwtl
jb
xlat
pop
shrl
enter
jae
cs
mov
cwtl
push
notb
fbld
cmp
loope
iret
or
rcrb
or
cmpsb
push
test
bound
lahf
jne
push
add
mov
in
call
lret
cmpsl
push
ret
add
cmp
push
stos
ja
faddl
add
sub
imul
sub
mov
cmp
pop
cmc
and
je
sub
in
inc
shrb
sbb
rorl
mov
mov
mov
push
sub
rorb
dec
test
xlat
popf
outsl
fucomi
mov
pop
daa
cmp
pop
xorb
xchg
push
mov
lods
jg
movsb
mov
mov
mov
das
shrb
push
cwtl
xor
leave
mov
sbb
xor
sub
imul
icebp
cmp
shlb
mov
xchg
movsl
pop
dec
in
sub
aam
or
jg
push
out
test
jnp
pushf
sbb
push
xorb
test
dec
std
inc
pusha
xor
xchg
xor
xor
lods
es
mov
sub
adc
cmp
iret
mov
inc
mov
jmp
rorl
sbb
sub
ds
lret
add
js
adc
arpl
and
push
mov
push
mov
in
jg
int3
arpl
mov
push
inc
and
jae
aaa
scas
sub
pop
int
jo
outsl
jns
test
mov
repnz
in
nop
mov
fnstenv
mov
lret
mov
aaa
out
cmp
test
ds
xor
out
xor
add
in
movsb
or
mov
or
pop
outsl
mov
sub
inc
xchg
sub
mov
push
jle
dec
enter
mov
mov
sahf
cmp
lcall
pop
dec
imul
or
sarl
enter
mov
push
pusha
jmp
jle
add
arpl
or
pop
stos
xchg
ss
mov
cmc
popa
jle
push
push
ficompl
push
nop
fldl
sub
fs
cmp
testl
mov
mov
fcoms
pop
jbe
test
imul
arpl
mov
imul
cmp
pusha
fcmovnbe
jmp
andb
and
jmp
cmpb
mov
test
and
icebp
mov
rol
addr16
add
fiaddl
ret
sbb
mov
cmp
jmp
and
lds
bound
popa
jno
and
nop
aam
shr
cld
das
pop
aas
cmp
sub
stos
fcomp
addb
sbb
fs
das
lock
dec
push
fsubr
subl
or
jl
pop
mov
test
std
push
xor
ret
xor
and
lahf
sub
jb
jge
xor
call
ds
cwtl
push
in
aam
dec
and
cmc
add
daa
mov
or
jecxz
sbb
push
in
xor
inc
into
fcos
pop
xlat
outsb
mov
bound
xlat
out
dec
enter
lcall
icebp
xor
dec
cwtl
dec
push
stc
nop
imul
adcb
rorb
xchg
movsl
cmpsl
sbb
xchg
push
or
xchg
cmpsl
je
test
out
xchg
or
sbb
stos
scas
sbb
jecxz
mov
addl
or
xor
jnp
xchg
cmpl
ret
out
mov
inc
cmp
nop
es
int
push
cmp
addr16
cmc
and
dec
sub
cwtl
je
mov
mov
sbb
out
popf
out
std
lret
sahf
xor
imul
mov
jb
sbb
int3
test
subb
push
fnsave
loope
ja
xchg
mov
adc
dec
data16
call
sarb
addr16
out
xor
fsubrl
jmp
xchg
packuswb
je
dec
dec
lret
aad
or
mov
rcll
add
ret
data16
mov
mov
sbb
mulb
ljmp
and
xchg
mov
stos
push
repnz
push
out
add
sub
jno
mov
lret
out
imul
adc
push
lret
mov
inc
mov
jbe
jns
add
int3
arpl
in
and
testb
sarb
lcall
pop
cmpsb
sub
and
cmp
paddusb
or
mov
mov
sub
iret
and
ret
adc
mov
jmp
js
and
jb
data16
insl
mov
mov
mulb
in
push
dec
popa
push
push
stos
pop
cs
adc
sti
dec
lret
xor
loopne
out
dec
jmp
rcl
and
cmp
pushf
xor
fldl
lcall
popa
ficompl
xchg
xor
and
adc
push
aaa
add
sbb
cmp
inc
pop
mov
or
test
cmpsb
inc
sub
pop
cmpsl
leave
dec
or
fnstenv
test
loop
in
jecxz
mov
clc
stos
xchg
cmc
clc
shr
dec
test
sarl
pop
arpl
sbb
cmp
cmp
insl
shrb
xchg
les
loopne
xor
adc
arpl
mov
cwtl
in
xor
bnd
cli
cmp
sub
add
dec
lock
ss
pop
or
psrad
xchg
es
sti
push
int
insb
xor
jg
add
cmpl
jns
fsubrs
test
mov
push
sbb
repnz
lock
add
sub
mov
pop
xlat
jmp
cmp
mov
pusha
pop
jae
add
push
outsl
fcomps
test
mov
push
cmpsb
fwait
sbb
sub
mov
xor
lcall
mov
ja
pop
sahf
xor
push
push
inc
push
or
xor
lods
inc
popf
jno
sbb
aaa
int3
arpl
push
repnz
lret
sti
jns
or
mov
rcrl
aam
test
dec
scas
xchg
cmpsb
push
dec
xchg
ss
sub
outsl
in
stos
cmp
mov
mov
pushf
shl
pushf
inc
inc
pop
jne
jb
dec
mov
xchg
mov
insl
pop
insl
stos
inc
mov
inc
push
inc
negl
enter
push
mov
test
or
fnstenv
data16
fidivrs
ficomps
cmpsl
dec
aad
testb
daa
ds
dec
push
pusha
dec
in
inc
or
mov
xor
mov
orl
out
mov
inc
movb
in
dec
adc
mov
aad
popa
sub
outsb
pop
or
ret
js
shrb
test
cli
mov
sbb
adc
mov
adc
adc
cmp
ficompl
mov
mov
xor
cmp
pop
std
jge
xorb
hlt
fs
movsb
scas
test
push
push
and
xchg
shl
out
sbb
sbb
ss
popa
dec
lods
sbb
mov
push
jecxz
mov
mov
repz
int3
and
lret
iret
pusha
jmp
neg
nop
movsl
test
outsb
hlt
out
es
xchg
fimull
das
rolb
aas
xchg
push
fidivs
lods
stc
insb
mov
mov
sub
mov
mov
adc
jle
push
das
ss
addr16
std
bound
ds
adc
jb
aaa
sub
mov
xor
mov
aaa
fwait
cmp
sub
xor
mov
iret
push
in
mov
popf
pop
lret
jae
mov
xor
push
adc
ja
loopne
lods
inc
and
mov
mov
pop
sub
pop
cmp
fwait
mov
sbb
dec
andb
int
repz
dec
xor
add
jmp
adc
stos
pop
sbb
push
ret
pop
push
clc
pop
pushf
mov
pusha
lea
ljmp
mov
rcll
sbb
jp
cmc
cs
jmp
and
fnstcw
subl
mov
cmp
cmp
test
outsb
mov
ret
mov
adc
repnz
and
nop
xchg
inc
test
mov
and
ljmp
xchg
add
push
mov
mov
dec
cli
lea
fdivrl
bound
in
int
jg
xor
insl
sub
jmp
xchg
sub
sbb
cmpsl
cmp
sub
xor
pop
cli
jo
outsb
outsl
dec
xchg
pop
scas
ret
addr16
mov
addb
addb
mov
xchg
pop
add
out
sbb
mov
or
insl
jge
dec
xor
in
inc
push
and
add
into
mov
cmp
push
outsb
mov
mov
sub
lods
inc
sub
imul
sbb
aas
xor
pop
sbb
xor
outsb
inc
mov
incb
jg
cmp
inc
push
shll
shl
push
fpatan
adc
push
pop
xor
sub
jecxz
das
xchg
jb
cmpl
xchg
and
shll
in
test
pop
ja
scas
movsl
inc
cmpb
cmpsb
stos
mov
cs
push
test
das
jae
faddp
jae
pop
test
nop
negb
loope
and
inc
mov
pop
fldcw
cmpb
ss
mov
dec
scas
sub
xor
xor
sub
cmpsb
mov
mov
sbb
mov
cs
sbb
push
pushl
push
gs
adc
mov
fnstsw
jnp
add
jmp
rcrl
add
out
jo
pop
movsb
rcr
aaa
subl
mov
or
sbb
push
mov
or
inc
add
add
shrl
mov
cld
mov
jp
sub
cmp
xor
movsl
mov
dec
inc
dec
clc
pop
mov
int
jns
mov
enter
mov
inc
cmp
mov
xchg
insb
enter
jle
adcb
dec
or
into
cmpsb
push
in
mov
gs
fs
push
xchg
rclb
jmp
fadds
jecxz
scas
xchg
fwait
sub
mov
add
out
mov
pop
cwtl
stos
aas
call
int
mov
es
lods
inc
pop
ret
lock
and
addr16
stos
jle
inc
xor
scas
cmpsl
call
mov
fcoml
dec
sti
jns
pop
inc
sbb
xchg
dec
pop
pop
sahf
data16
enter
das
imul
push
cwtl
sbb
ds
xlat
outsl
lods
aaa
add
jecxz
stc
pop
push
cwtl
cmc
pop
rol
fcompl
pop
push
ficoml
scas
inc
xchg
xchg
pop
dec
mov
loopne
or
stc
mov
rolb
adc
aaa
push
xchg
mov
xchg
icebp
in
hlt
lods
xchg
imul
mov
scas
xchg
rcl
repz
nop
jns
add
and
cmp
sub
adc
in
inc
adc
jae
test
lret
aas
pop
movb
stos
leave
in
xor
jno
sbb
enter
jne
xor
fsubr
cmp
sbb
cmp
push
inc
fbstp
jle
add
mov
lods
adc
ret
test
fdivl
fsubrs
jp
mov
lahf
jge
iret
and
mov
mov
call
in
ljmp
fs
cld
shlb
fistpl
pop
roll
mov
mov
mov
push
sub
lret
dec
xchg
mov
sbb
or
stos
cltd
adc
push
mov
add
sub
mov
psrlw
pop
lods
cld
adc
xchg
das
repnz
insb
out
outsb
sub
xchg
or
lock
and
call
xchg
mov
push
cltd
push
icebp
inc
xor
dec
jmp
mov
mov
shlb
loop
clc
ret
cmp
adc
or
mov
icebp
mov
cltd
cmp
lahf
xlat
mov
mov
addr16
fnstcw
fldenv
jo
iret
sub
mov
cmp
or
push
mov
fistl
pop
jl
jb
out
andl
sarb
call
fsub
sbb
jae
stc
and
xchg
shr
sbb
shll
outsb
popf
not
dec
pop
add
cmp
and
jne
adc
sbb
arpl
xchg
xor
in
jbe
leave
push
sub
jne
mov
fcoml
fdivl
jp
dec
popa
fs
inc
scas
in
xor
movsb
mov
jne
inc
xor
cld
fucomi
xchg
adc
arpl
xchg
jl
push
cmp
icebp
push
sbb
xor
sub
fsts
pop
pop
sub
in
cmp
jbe
and
push
int
push
or
inc
lods
pop
repz
inc
fstps
dec
test
bound
jg
inc
int3
inc
lcall
cwtl
vhaddpd
xor
push
inc
add
das
ds
and
push
inc
movsb
repnz
shlb
mov
scas
mov
xchg
add
sbb
and
mov
cmp
mov
mov
test
cmp
pop
mov
xchg
jp
mov
dec
pop
cmc
adc
jbe
sahf
xrelease
cli
xlat
fnstsw
dec
ja
jae
outsb
data16
leave
jg
xor
xchg
repnz
loop
into
gs
movsb
call
stos
jno
or
jp
push
jae
xorl
mov
jno
ljmp
stos
sub
fbstp
inc
imul
out
dec
xchg
mov
dec
gs
ret
sub
mov
dec
mov
outsl
fiaddl
mov
cmp
notl
push
mov
inc
push
dec
and
insl
lods
outsb
mov
pushf
mov
push
subl
sahf
push
push
repz
scas
xor
mov
int
mov
and
lods
sub
xchg
je
adc
dec
and
arpl
push
mov
daa
jmp
jne
and
push
fldz
clc
and
stc
popf
push
out
mov
dec
insb
mov
aam
outsl
mov
les
and
incl
cmp
push
push
push
xor
adcl
outsb
push
push
addr16
jmp
stos
mov
dec
loopne
push
leave
push
lds
das
fstps
mov
mov
xor
cmpsl
pop
fbstp
cmp
je
adc
shrb
ret
ja
dec
pop
dec
pop
mov
jge
leave
cwtl
scas
or
cmp
les
mov
stos
push
sahf
dec
adc
gs
test
inc
sub
push
jno
push
arpl
xchg
and
xchg
mov
pushf
or
xchg
pop
jge
mov
data16
push
jge
sub
push
lods
cmp
aaa
fldenv
inc
xlat
and
pop
pushl
pop
insb
mov
iret
push
jp
ds
int
add
add
aaa
add
lds
sub
push
pushf
and
in
xor
pop
jmp
ljmp
or
dec
lock
or
iret
jle
and
loope
push
in
mov
sub
add
int3
js
xor
pop
xchg
and
dec
cmpsl
jp
sbb
jp
add
pop
or
and
inc
cmp
jne
int
mov
rcrl
push
cmp
dec
inc
adc
push
cmp
sub
push
jmp
pop
hlt
pop
pop
pushf
cmp
lods
xchg
sub
dec
dec
pop
pop
mov
mov
insb
mov
xchg
repnz
dec
dec
insb
or
shl
inc
sub
jecxz
add
or
punpckhbw
xor
fdivl
or
cli
mov
aad
js
notl
xor
sub
pop
repnz
push
push
jne
push
mov
push
iret
int3
cmpsb
popf
xlat
outsb
or
push
movsb
ss
sbb
push
imul
fidivl
movsl
xchg
cmp
sar
outsl
mov
repz
mov
cmc
mov
fdivrs
mov
cmpsb
sbb
inc
lods
jp
and
stc
adc
fs
into
mov
jg
dec
iret
add
insb
pushf
lock
sub
fcoml
daa
xchg
pop
cwtl
sub
insb
jp
stos
in
adc
outsb
adc
xchg
mov
fcompl
or
cli
mov
or
in
int3
arpl
mov
outsl
jnp
sahf
fcomps
inc
data16
jle
jmp
jae
mov
xor
mov
sbb
ja
jmp
jle
add
ds
cmp
pop
cmp
aaa
aas
faddl
mov
jnp
notb
addr16
add
or
xor
add
std
mov
jp
add
mov
push
mov
test
fcmovnbe
xlat
sub
mov
stc
add
mov
mov
pushf
shl
jnp
int
pop
mov
call
jle
ljmp
jl
or
iret
or
mov
add
pop
rcll
mov
pop
and
arpl
and
dec
push
rcrb
sub
insl
cld
je
push
mov
in
enter
inc
cwtl
sbb
inc
popf
sbb
jmp
cmp
jge
xor
hlt
std
sahf
pop
test
and
scas
inc
pushf
xor
sbb
frstor
mov
push
dec
push
fxch
mov
lods
and
int3
mov
xor
pop
push
cs
cmp
pop
dec
pop
nop
movsb
dec
sub
sbb
stc
ja
cmp
inc
rcrl
in
adc
cmp
pop
xor
clc
movsb
jg
out
add
jecxz
push
popa
add
in
negl
mov
stos
inc
fs
call
addr16
pop
mov
stc
insb
add
cmp
popf
dec
mov
mov
jecxz
fcomps
pop
enter
andb
mov
mov
testb
or
sbb
inc
lods
ljmp
mov
jo
dec
sub
dec
dec
mov
push
push
negl
add
and
jbe
adc
mov
pushf
add
push
ds
push
sub
adc
mov
cmp
outsb
dec
das
ret
and
inc
pusha
and
inc
movsb
dec
add
adc
sahf
andb
xchg
hlt
pop
mov
int3
fistpl
ror
bound
and
pushf
in
inc
daa
xlat
add
mov
jl
xchg
popf
sbb
inc
jle
sti
or
inc
mov
repz
adc
inc
fs
mov
sti
xor
and
repz
js
enter
fs
pop
inc
inc
push
mov
jle
xchg
daa
xchg
or
mov
gs
test
jnp
adc
add
mov
fists
imul
sub
push
sbb
jbe
xchg
ror
mov
aam
push
mov
inc
cmpsl
out
push
popa
xchg
pop
data16
xchg
idivb
adc
pop
inc
pop
lods
inc
test
sub
or
int
cmp
jb
dec
loopne
jp
xchg
dec
dec
push
rcr
mov
rol
fucomp
popf
je
and
test
sbb
lods
das
mov
outsb
jl
sub
adc
mov
mov
jbe
mov
es
dec
jmp
or
hlt
inc
push
test
repnz
pop
sbb
nop
std
cmp
test
mov
pop
sub
mov
or
cmp
out
mov
mov
scas
in
and
jecxz
pop
jle
mov
ret
xor
pop
repnz
out
pusha
jl
test
or
ss
gs
aaa
push
out
pop
mov
shl
or
arpl
jp
cwtl
dec
dec
cli
sahf
fimuls
movsb
mov
mov
mov
scas
push
add
stc
mov
addr16
lahf
rol
xchg
scas
cwtl
in
rcrb
mov
imul
adc
push
jge
mov
xorb
sub
add
out
or
sti
adc
pushf
loop
pop
mov
mov
rcl
jp
push
mov
shll
push
hlt
xchg
mov
shrb
pop
add
mov
sahf
je
rcrb
lret
push
jnp
push
mov
dec
jl
dec
out
pop
cli
dec
vpaddq
xorl
add
les
lahf
xor
out
or
xchg
sub
pop
je
shlb
jl
adc
mov
sbb
fdivrl
sub
ja
adc
cltd
stos
sarl
adc
in
stc
pop
cli
jmp
mov
mov
imul
pop
jmp
int3
xlat
int
or
push
sub
mov
das
mov
or
mov
sbb
les
out
shr
or
add
dec
sub
sub
lret
xchg
je
mov
jnp
loope
out
push
push
xor
cmp
cmp
add
pop
loopne
push
push
add
loope
sti
fldl2t
in
jbe
mov
ljmp
cmpsl
test
mov
sbb
jnp,pt
outsl
fsubrs
push
int
or
inc
cltd
mov
fsubrp
pop
sbb
stos
enter
pop
scas
sub
pop
lret
xlat
xchg
ljmp
divb
sbb
jno
push
mov
xchg
cmpsb
add
loopne
lret
jno
cmp
andl
jno
out
inc
and
inc
test
call
cmp
iret
clc
xlat
add
sub
cs
test
aad
xchg
dec
add
mov
ss
inc
fdivr
or
adc
mov
xor
add
add
hlt
and
stos
dec
icebp
jae
lods
mov
jno
push
lret
fidivrs
lods
jo
sbb
cld
jecxz
adcb
mov
and
icebp
xor
aas
sbb
pop
push
popf
dec
loopne
mov
cmp
sub
push
mov
popf
jne
shl
cmp
push
mov
cs
sub
xchg
cld
mov
fwait
insl
inc
cmpsb
fists
bound
into
mov
add
fistpl
in
and
jl
inc
adcb
cmp
cmp
nop
lock
mov
xchg
mov
adc
daa
adc
cmp
out
sarl
sti
pop
push
mov
and
jge
mov
mov
pop
ds
inc
subl
fwait
inc
fwait
shr
xchg
jb
sub
jg
jmp
add
xchg
add
fwait
pop
test
cmp
mov
xchg
mov
jecxz
mov
mov
call
sbb
jecxz
mov
fisubl
std
adc
dec
imul
das
mov
call
mov
daa
add
inc
ljmp
call
inc
bound
int
sub
push
cli
jg
das
pop
test
xchg
adc
pop
or
push
or
loop
pop
in
jle
or
jno
test
cld
iret
cwtl
mov
pop
sub
or
lods
data16
arpl
mov
pop
lret
lret
and
adc
mov
ret
xor
outsb
insl
rcrb
mov
mov
sahf
xchg
pop
dec
xchg
aas
or
add
jecxz
mov
movsb
sub
xor
movsl
data16
dec
xchg
xor
out
mov
filds
xchg
loop
add
cmp
andb
dec
jnp
pop
xor
pushf
test
mov
test
das
xor
stc
fs
mov
loopne
ror
xlat
push
fcmovnbe
cld
jl
cs
jnp
jnp
repz
mov
jle
cmc
sbb
insb
sti
xlat
cli
rorb
scas
in
push
cli
sub
inc
stc
jmp
out
fistl
adc
jg
and
sti
mov
mov
flds
pop
decl
pop
sbb
loop
sub
fdivrs
jecxz
outsl
xchg
mov
add
add
xor
mov
mov
pop
dec
rolb
jg
push
inc
cmpsl
movsl
dec
mov
daa
pop
pop
stc
es
xor
cld
je
fnop
ret
je
out
insl
jmp
adc
sbb
jmp
rorl
push
inc
pop
pop
out
movsl
ja
xchg
cmp
pop
lock
cli
or
xlat
push
or
fs
inc
adcb
sub
mov
aas
sbb
mov
add
push
sub
andb
outsb
fadds
xchg
jle
pop
shr
mov
fildll
cs
push
xlat
scas
icebp
cmp
orb
out
in
xchg
push
jmp
push
je
mov
pop
outsl
xlat
cmp
in
imul
mov
push
shl
movsb
icebp
inc
mov
cmp
lods
aas
scas
sar
push
inc
testl
popf
stc
movsl
mov
and
or
dec
loope
lock
sarl
adc
ret
xchg
sub
fisttps
fs
pushf
mov
mov
push
std
push
shl
jbe
out
add
das
or
mov
test
scas
jno
fstl
push
hlt
fadds
test
mov
mov
iret
lahf
outsl
std
sbb
and
mov
push
lock
and
icebp
inc
mov
inc
enter
lret
andb
sbb
sbb
or
movsl
mov
insl
cmpsl
mov
sub
rcl
xor
push
aas
or
and
ds
outsl
push
and
jmp
inc
mov
jle
inc
lret
pusha
ficomps
stos
jne
pop
daa
inc
fwait
cmp
cmp
or
dec
loope
dec
pop
scas
push
inc
sbb
shrb
jns
mov
sub
cmp
shll
push
test
xor
xchg
test
shrl
or
loopne
and
xor
or
adc
aaa
mov
mov
dec
or
and
push
mov
pop
fidivs
push
dec
leave
fsubs
arpl
and
cmp
jo
lods
outsl
dec
popf
mov
push
pop
in
mov
ret
sub
jnp
jmp
jns
bound
pop
push
jo
aas
je
mov
and
xlat
in
add
loop
sub
xor
imul
push
scas
sbb
push
fs
push
std
pop
hlt
xor
sub
shrb
cmp
push
or
xchg
sub
in
xchg
es
dec
daa
add
ss
aad
fnstsw
push
pusha
sub
cmpsb
int
mov
add
add
leave
and
mov
scas
lock
sbb
inc
push
dec
xchg
dec
cmpsb
andl
mov
xchg
and
imul
cmp
jp
lret
mov
scas
aas
rcll
mov
stos
gs
lret
int3
fisubs
stos
sarl
lret
pop
xor
and
test
or
cmp
xor
shlb
inc
jo
dec
data16
cwtl
sbb
jnp
mov
xchg
clts
popf
jl
adc
or
int3
imul
outsl
cli
xlat
push
dec
pop
mov
orb
ret
inc
and
js
jo
and
push
dec
lods
loop
mov
jmp
mov
movsl
and
pop
xchg
mov
out
cmpsl
dec
ds
fcmovnb
fbld
pop
mov
sub
mov
cmp
out
xor
mov
adc
jb
xchg
movsb
mov
mov
pop
push
mov
mov
and
and
cltd
lcall
addb
mov
int
push
mov
aas
jp
lods
xchg
sbb
and
dec
mov
out
push
push
dec
addr16
adc
repz
out
pop
aad
popa
aam
mov
sub
ja
movb
sub
push
cmc
das
hlt
lods
sub
mov
mov
mov
or
movsl
mov
sub
popf
jge
and
sbb
pusha
out
mov
jg
mov
dec
push
lock
jge
cmp
mov
adc
scas
cwtl
js
cvtdq2ps
test
outsl
ja
push
aam
rcl
or
into
pop
mov
js
test
call
xchg
xchg
data16
pushf
xor
adc
push
in
inc
mov
lret
and
jmp
ss
out
sahf
clc
arpl
and
mov
xor
lods
mov
mov
frstor
arpl
push
jae
and
jnp
das
mov
insb
outsb
mov
adc
sbbl
inc
rclb
fldt
ss
lods
fldt
push
out
sbb
into
lods
repz
pop
lods
mov
xchg
cmp
insl
cmp
addr16
sbb
sub
dec
adc
sub
pop
dec
mov
mov
and
mov
push
ja
or
sub
out
enter
gs
xor
enter
out
push
in
loop
sub
lahf
negl
js
loope
imul
out
inc
pop
ret
pop
dec
icebp
mov
movsl
fstps
mov
shl
adc
aas
sarb
jmp
movsl
sub
xchg
hlt
jnp
ret
mov
add
or
mov
rcll
inc
les
das
sti
push
int
cmp
arpl
xchg
out
mov
nop
cmpsl
xor
xor
add
clc
push
or
outsl
mov
mov
addr16
pop
les
loopne
cli
addr16
sbb
inc
fdivl
sub
movsb
cmp
adc
sub
repnz
sub
cmp
aad
dec
dec
loopne
sub
test
dec
fmuls
inc
outsb
mov
sbb
sbb
lock
popa
adc
sbb
mov
push
or
hlt
xchg
push
pop
orb
and
xchg
sbb
incb
cmpsl
aaa
dec
sub
or
sub
incl
jle
and
popf
cmp
dec
scas
push
sub
nop
push
ljmp
call
rorb
pop
and
pop
stos
xchg
test
test
mov
enter
and
or
movsb
nop
mov
rol
shrl
test
push
lret
push
or
mov
pop
stc
adc
add
sub
pop
dec
dec
xchg
out
test
mov
sub
inc
dec
lahf
decb
lock
sub
arpl
cmp
in
jmp
out
jge
mov
mov
shll
cmpsb
fisubs
and
jo
sub
fsub
in
imul
lfs
sbb
leave
or
jmp
push
loopne
or
js
mov
lea
out
and
orb
mov
pop
sbb
or
push
cld
inc
js
mov
subb
pop
and
cmp
lds
ss
negl
testl
inc
insb
sahf
and
adc
sarb
imul
add
fdivrl
mov
sbb
mov
mov
mov
cmp
xor
pop
pop
xor
lea
mov
push
into
cmp
aad
push
mov
loope
test
mov
jo
outsl
loope,pt
cs
subl
sbb
sub
stos
testl
dec
clc
insb
jle
sub
or
adc
and
imul
insb
xor
sbb
addr16
adc
movsl
pop
add
in
inc
push
push
popf
neg
iret
mov
lret
cli
jns
inc
imul
pushf
push
hlt
cmp
mov
mov
pop
mov
push
repnz
out
xchg
mov
cmp
sbbb
adc
loope
pop
xchg
movsl
xor
test
jns
loope
int
push
xor
ret
insb
push
mov
fadd
scas
ds
ss
in
loop
lret
mov
xor
push
lds
jno
add
push
mov
sbb
sub
cmpsb
dec
mov
jecxz
dec
icebp
repz
or
adc
mov
call
shlb
enter
test
pushf
inc
push
sub
jae
adc
sbb
dec
in
cld
jmp
add
xorl
gs
pop
mov
push
cmp
jg
cld
test
inc
adc
and
lahf
xor
dec
xchg
xchg
mov
mov
xor
cwtl
inc
pop
ja
mov
lods
mov
fsubrl
sub
jl
xor
mov
ss
xor
stos
push
int
mov
xor
mov
in
adc
or
in
fucomp
mov
sbb
fmuls
fcmove
pop
lahf
add
gs
enter
sub
mov
cmp
scas
call
loop
addb
mov
sbb
fwait
popa
ds
fcmove
or
stc
sti
loop
es
lods
ss
push
cs
idivb
aad
mov
sub
and
daa
lret
ja
push
cs
push
aas
and
jne
mov
nop
lods
sub
jp
push
inc
fdivl
sti
jne
adc
mov
out
push
dec
fnstenv
popf
sahf
mov
loopne
nop
sub
stc
and
add
and
inc
cmp
adc
adc
lds
outsl
ljmp
nop
push
stos
mov
ret
hlt
stos
shrl
stos
jmp
push
popf
add
ljmp
pop
adc
jecxz
cmpb
int3
and
sbb
fwait
mov
sbb
cmpsl
cmc
psubusw
jge
ficompl
jecxz
push
sti
adc
decb
lods
xchg
mov
addr16
mov
cmpsb
in
mov
adc
jmp
cs
dec
inc
xchg
cmp
pop
into
xchg
stos
sbb
mov
stos
dec
cmpl
dec
test
repz
test
fisubrs
xchg
mov
andb
sbb
ds
inc
jo
and
dec
adc
mov
pop
lds
mov
mov
fistpll
ret
mov
das
imul
mov
orb
pop
addr16
or
mov
insb
jle
mov
out
add
mov
mov
shrb
dec
pop
fcomip
sub
das
lock
add
pop
mov
jae
rol
scas
and
test
xchg
aam
jae
aaa
roll
ret
xchg
cmp
push
xchg
jge
push
loope
mov
lods
mov
enter
add
test
and
and
bound
fidivrs
jmp
into
inc
pop
adc
sub
nop
add
mov
clc
jbe
mov
push
rolb
pop
lret
fimuls
or
xchg
mov
rcrl
in
js
mov
out
mov
push
mov
clc
mov
js
hlt
mov
das
xchg
lods
out
loopne
xor
fisubrs
jp
sti
mov
hlt
jae
jns
cmc
sahf
and
push
popf
std
lods
add
sti
xchg
push
filds
cwtl
push
dec
dec
jo
dec
daa
mov
dec
sub
lahf
stos
sar
inc
mov
popa
scas
popf
lret
js
mov
push
jne
fldcw
push
and
sti
mov
es
arpl
pushf
sbb
outsb
stos
or
nop
jge
pushf
fs
into
xor
mov
out
or
out
inc
dec
lods
loopne
lods
jmp
fdivp
cmpsb
pop
add
pusha
adc
nop
sbb
sbb
cmc
rorb
adc
push
lcall
xchg
sbb
mov
idivb
mov
jae
loop
cmp
shl
ljmp
sub
xchg
xor
push
aaa
mov
icebp
rorl
nop
push
mov
in
in
ret
push
or
lock
pusha
cmp
and
leave
in
addr16
ja
imul
adc
js
or
adc
loope
mov
or
movsl
dec
dec
cmp
icebp
push
inc
loop,pt
pop
pushfw
movsl
dec
xchg
push
fldenv
rcll
dec
sub
pop
decl
add
pop
jno
pop
in
xchg
xor
xchg
call
mov
pop
imul
xchg
addb
fistpl
jne
test
mov
pop
jo
fbstp
and
xor
sti
in
fistps
test
mov
or
push
add
es
clc
insb
js
pop
and
sbbl
out
add
shll
xchg
mov
dec
dec
mov
cwtl
xor
in
mov
xor
push
mov
iret
push
sub
dec
cltd
push
sbb
cmpsl
adc
pushf
jo
fbstp
and
shll
test
imul
push
push
call
das
xchg
imull
outsl
jp
popa
loopne
stos
jno
and
xchg
sub
out
jno
jns
insl
sub
jle
pop
mov
out
mov
mov
push
orb
add
sahf
jae
std
movsb
ret
outsb
sub
sbbl
dec
and
out
daa
fcomps
mov
aaa
cld
fdivs
sbb
ja
xor
loope
inc
pop
sbb
ret
cmp
pop
icebp
psllq
rcr
pop
mov
mov
fbstp
fldt
jne
ss
push
xchg
xor
lahf
popa
xor
dec
jno
std
enter
xchg
jmp
xor
push
jl
imul
pop
movsb
arpl
push
inc
cmp
pop
or
push
pushl
into
xor
push
push
test
imul
mov
push
xor
test
jl
xor
xchg
adc
mov
mov
lds
sub
add
dec
jl
repz
in
jg
scas
inc
pop
jo
xchg
loop
int
push
arpl
mov
adc
loop
xor
shll
push
jecxz
xchg
das
mov
pop
and
xchg
ret
lcall
in
xchg
inc
movsl
cltd
subb
repnz
xchg
sbb
xor
xchg
int3
jo
mov
adc
xchg
xor
push
popa
inc
cmp
cmp
cli
pop
cmp
cmp
cmp
rcl
pushl
xor
in
push
out
test
movsl
loope
xchg
pop
mov
or
xchg
orb
test
xchg
adc
mov
lahf
sbb
dec
add
hlt
cltd
push
cs
idivl
add
into
pop
ljmp
or
cwtl
push
and
push
dec
pop
jmp
stos
mov
sub
mov
test
xor
lret
jl
movaps
ja
mov
xlat
jmp
dec
cmp
jecxz
cmp
dec
addr16
fsubr
rcll
lds
sbb
out
jae
dec
test
xchg
rolb
sub
pop
call
lret
cmc
nop
cld
flds
xor
shrb
les
imulb
xchg
add
stc
push
fstpl
mov
sti
call
cwtl
lcall
add
dec
subb
pop
pop
mov
push
xchg
jle
loopne
sbb
andl
dec
or
clc
pop
out
in
jae
insl
mov
cmc
mov
mov
nop
jl
jl
lock
aas
std
pushf
dec
mov
and
insl
es
sbb
inc
lcall
and
je
int3
jo
xchg
or
ficompl
mov
or
popa
xor
mov
pop
and
cmpsb
in
ljmp
sbb
push
cwtl
ja
lret
xchg
popa
sub
mov
push
mov
aad
iret
nop
pusha
jmp
test
out
inc
rcll
inc
adc
clc
fcmovne
inc
lret
cmpsl
cmp
mov
pop
daa
movsl
movsb
lods
jg
dec
enter
into
gs
jle
mov
movsb
cmp
dec
std
movsb
cmp
jmp
cmp
add
sbb
iret
inc
mov
mov
push
push
iret
xchg
mov
fnstcw
ficoms
adc
sti
fwait
and
or
std
cli
loopne
enter
and
cs
inc
gs
fcoml
cmp
pop
push
mov
sbb
push
lahf
push
mov
push
in
imul
or
adc
dec
inc
and
mov
pop
scas
out
lods
mov
jae
sbb
sub
out
dec
pop
and
mov
lock
adc
sbbb
jp
and
shrb
in
ds
mov
lcall
stc
add
jbe
inc
test
mov
xchg
hlt
test
sbb
adc
ss
jne
cmpsl
nop
shll
ret
das
imul
jns
mov
xchg
dec
jns
fbstp
sahf
lods
mov
dec
test
ss
call
or
dec
or
jp
mov
out
xchg
dec
push
mov
jbe
ja
or
leave
lock
jnp
cmpsb
arpl
das
loop
and
leave
cmp
mov
sbb
or
mov
add
mov
insl
scas
mov
mov
add
dec
jecxz
mov
stos
sbb
popf
lret
and
repz
int3
fnsave
jnp
cs
ja
push
inc
adc
add
jl
inc
test
sbb
fsubr
not
jne
mov
cmp
int
and
vpcmpeqw
or
xchg
jge
adc
divb
ds
sub
cmp
push
je
xor
popa
int3
aam
or
mov
test
cmp
dec
popa
call
mov
push
sub
setno
push
sub
loopne
out
rclb
add
loope
xchg
in
push
fwait
mov
std
inc
test
and
mov
call
imul
stos
jae
test
mov
ret
fdivl
mov
cli
mov
jae
cmp
call
dec
repz
into
xor
repnz
sahf
pop
into
cwtl
push
cmp
mov
xor
push
insl
inc
add
cwtl
jo
and
inc
jb
adc
les
rcl
sti
sbb
push
fisubrl
pop
rolb
or
clc
mov
dec
jge
mov
push
sbbb
xor
sbb
hlt
dec
loopne
inc
clc
sahf
mov
outsb
cmp
pop
fbstp
mov
adcb
arpl
les
add
cmpl
js
xor
mov
fwait
push
bsr
inc
loopne
push
mov
sbb
or
es
jle
es
pop
cmc
nop
dec
cli
into
mov
aam
cmp
cwtl
in
insl
xlat
lods
stc
orb
outsl
push
addr16
sub
jns
enter
mov
cmpsb
shr
and
loope
gs
sbb
pop
jecxz
out
in
or
repnz
sbb
negl
push
push
repz
stos
daa
das
xchg
out
jae
mov
in
push
xchg
lcall
xlat
sub
jns
jge
dec
cmpb
lods
test
loope
orl
stos
shr
inc
into
sbb
push
sub
sbb
dec
sub
maskmovq
ss
xor
push
push
out
nop
and
sub
sub
mov
pop
ss
jbe
out
andl
or
daa
sub
mov
das
cmp
jmp
loop
mov
enter
push
call
mov
ret
pop
push
das
pop
dec
addb
int3
mull
pop
xor
iret
lea
data16
imul
inc
inc
inc
jbe
stos
xchg
out
lea
xor
sbb
mov
ja
jo
enter
addb
cmpsl
pop
lock
gs
and
shll
pop
pushf
jg
xor
push
test
cld
mov
leave
fidivrs
mov
add
push
jns
das
lcall
cmc
stos
cli
inc
fisubrl
inc
rcrl
push
imul
sbb
nop
adc
fists
ljmp
adc
bts
fdivs
sarb
mov
xchg
xor
movzbl
xor
pop
xchg
pextrw
mov
int
out
hlt
cmp
and
decb
jl
test
add
hlt
mov
mov
sti
int
ljmp
pop
dec
out
lahf
aaa
into
into
in
es
das
rcrl
xor
sbb
push
jl
out
xchg
push
jb
mov
adc
in
stos
rolb
call
or
mov
jne
arpl
orl
lcall
and
mov
cmp
sbb
cmp
decl
mov
shrl
mov
jns
pop
scas
adc
aad
lods
loop
fisubrs
xor
std
rcr
in
xchg
or
test
pop
push
out
nop
sub
xor
dec
pushf
cli
call
dec
add
mov
outsl
and
mov
mov
cli
lret
xchg
mov
push
mov
dec
xlat
into
and
jge
bnd
les
rcl
sbb
out
dec
cmp
pop
xchg
pop
rcrl
dec
fmuls
js
xchg
stos
in
mov
sbb
inc
pop
lret
in
jnp
mov
push
push
xor
out
mov
push
mul
ficoml
movsb
push
adc
mov
aam
push
mov
pushf
xor
jne
pop
push
dec
xor
or
sbb
mov
imul
mov
test
jecxz
add
inc
mov
cmpsb
adc
mov
xlat
in
shrb
rolb
movb
push
add
out
push
clc
cli
jno
xchg
jle
sub
addl
pop
imul
and
sti
repz
dec
aad
in
xor
pop
out
addl
stos
and
and
addr16
dec
dec
inc
mov
movsl
icebp
pop
hlt
mov
cmp
dec
push
cmc
dec
movsl
add
mov
add
inc
pop
test
jno
jo
or
orb
scas
mov
sbb
pushf
orb
loop
lcall
xor
sbb
in
fldt
and
jg
xchg
cmp
xlat
xor
adcb
mov
xchg
cmp
push
jl
push
inc
repz
jns
lea
and
jle
popa
fcoml
mov
push
mov
xor
addr16
add
sarl
nop
shlb
into
loope
jae
lock
or
arpl
sub
xor
jecxz
lcall
push
outsb
jne
push
mov
testb
dec
xchg
cmp
sbb
push
retw
fistpll
xchg
gs
jbe
and
cwtl
push
ljmp
and
mov
jmp
push
cmpsl
jmp
mov
ja
sahf
popf
xchg
shlb
lcall
scas
push
iret
xor
stos
test
lds
inc
add
xorb
mull
cmp
mov
and
daa
mov
lahf
pop
inc
push
push
push
gs
jb
ss
mov
repz
mov
mov
adcl
sbb
je
lcall
xor
stos
push
or
andl
les
imulb
add
xchg
roll
ljmp
out
push
pop
orb
icebp
out
mov
ror
int
jb
jae
orl
xchg
sub
adc
je
fisubs
ret
repz
rorl
inc
cmpsl
dec
inc
roll
mov
insl
cmp
movsl
pop
push
mov
push
je
aas
mov
mov
clc
push
cmp
in
in
sbb
sbb
inc
testl
pop
loopne
fidivs
jns
sub
aam
fwait
jle
lds
dec
xchg
dec
dec
adc
gs
idivl
cmp
shrl
aaa
int3
sub
sub
push
or
into
inc
jae
out
insb
push
ljmp
mov
shll
mov
dec
adc
cmp
or
jge
mov
rolb
jmp
mov
scas
adc
add
test
ljmp
cld
adc
pop
jb
inc
push
lods
jb
jns
and
push
pop
mov
add
add
cmp
out
std
loopne
xchg
fsubrl
mov
sub
inc
inc
or
testl
cmpsl
mov
mov
and
sub
adcl
adc
pop
ljmp
push
hlt
nop
add
cmp
loop
mov
cld
faddp
fists
shl
adc
sub
add
cmpsl
mov
ret
pop
ret
push
das
ljmp
push
in
aam
in
dec
mov
test
insl
push
xchg
mov
aaa
aam
mov
pop
sub
sahf
aad
push
andb
daa
cwtl
jbe
movsb
jmp
xor
mov
out
call
or
sahf
xchg
push
pop
mov
mov
cmp
les
sbb
loop
mov
adc
enter
xor
and
adc
jnp
orb
lret
sbb
cltd
aad
mov
pop
out
pop
repz
inc
out
mov
and
cmovge
mov
fldt
aam
mov
pop
daa
call
addr16
popa
out
cltd
adc
jb
shlb
cmc
mov
jnp
cmp
adc
sbb
mov
xor
pop
dec
int
test
cmc
cmp
add
sub
add
mov
mov
mov
mov
bnd
cmpsb
mov
mov
lret
shll
xchg
and
icebp
lret
js
ja
jns
mov
clc
fnstenv
pop
and
das
test
lods
dec
stos
inc
andl
leave
xor
pop
sbb
pop
inc
xchg
xchg
inc
xor
loop
out
xchg
hlt
adc
test
cmp
iret
mov
xchg
add
dec
scas
and
mov
jnp
dec
aaa
into
push
iret
into
mov
imul
lods
push
mov
int3
mov
or
cwtl
mov
and
pop
clc
cmp
xlat
inc
enter
add
mov
scas
jnp,pt
rsm
push
pusha
cmp
jne
scas
xchg
cmpsb
sahf
iret
loope
sbb
or
push
push
and
mov
out
nop
push
daa
dec
cmp
or
pop
imulb
sbb
sub
mov
fcmovne
in
ds
jo
lret
dec
shll
jo
cmpsb
push
cltd
mov
loope
aad
xchg
into
loop
call
sbb
cltd
mov
inc
pop
or
and
aas
movsl
jne
mov
mov
mov
ret
inc
sti
rcl
sbb
mov
inc
mov
adc
daa
lcall
xor
in
insl
jae
lock
je
lcall
cmp
mov
cmp
loopne
jp
mov
sub
leave
lcall
lods
ret
outsl
je
and
frstor
inc
pshufw
mov
es
nop
mov
xchg
lods
and
pop
add
mov
repz
mov
dec
les
cltd
push
out
leave
add
cs
jmp
in
cmp
add
stos
arpl
cltd
mov
fistpl
mov
ljmp
sar
cmpsl
add
movsb
cmp
addl
inc
std
in
fistl
fimuls
test
mov
std
sbb
push
mov
jno
mov
sbb
lods
mov
lods
jno
inc
mov
jl
fs
movsb
cmp
or
lcall
jbe
fildl
pop
dec
sbb
insl
jecxz
sbb
fcmove
imul
pop
mov
inc
sbb
pop
or
aad
fbld
pop
lret
dec
in
pop
popf
je
mov
jl
pop
stos
inc
xchg
imul
movsl
xor
xchg
adc
pop
lret
cmpsl
enter
test
fildll
cmpsl
leave
sbb
scas
jmp
out
sbbb
imul
hlt
sub
repnz
xchg
adc
or
dec
xor
pop
jecxz
add
cltd
fsubl
in
push
xor
je
cmpsl
movsl
rcl
mov
lret
mov
dec
sahf
sbb
sbb
push
rcl
add
and
pop
pop
cmp
cmp
adc
pop
cmp
in
sub
xor
pop
out
cld
cmp
add
mov
or
dec
xchg
dec
or
scas
aam
lret
pop
mov
pop
mov
push
repz
inc
and
dec
push
movsl
jns
or
xchg
adc
xchg
outsb
movsl
jle
push
push
cmp
aaa
jno
hlt
mov
fldenv
inc
lret
aas
es
xor
push
inc
lods
inc
jae
and
aam
filds
test
push
dec
lods
jle
jbe
and
xchg
jmp
mov
mov
sbb
mov
cmp
and
xor
xor
ds
cli
fcoms
jp
and
enter
jne
fdivp
mov
sbb
xor
inc
jae
mov
int3
leave
push
or
add
mov
jmp
jl
icebp
shl
les
push
pushf
sub
dec
test
rorl
cwtl
out
cwtl
lahf
mov
inc
pop
out
inc
data16
mov
test
mov
mov
xchg
je
mov
jle
or
outsl
lahf
adc
and
fsubl
stos
pushf
iret
mov
add
fisttpll
test
daa
movsl
enter
stos
mov
sbb
jge
movsb
cmp
push
ret
xchg
sbb
jno
lock
mov
mov
add
and
out
dec
xchg
xchg
das
fidivs
stos
cmp
inc
nop
mov
nop
mov
lods
sarl
ret
sti
jecxz
mov
or
mulb
stos
cmp
sub
push
jne
jo
and
mov
push
xlat
dec
push
cmp
shl
lea
movsb
cmp
xchg
inc
or
adc
add
xchg
and
int
push
cwtl
mov
push
out
dec
mov
add
adc
mov
pusha
dec
jns
mov
push
jae
daa
dec
das
or
or
fsubrl
popa
and
adc
jle
cmp
or
sub
rcll
mov
mov
dec
inc
ljmp
pop
ret
mov
aaa
int
movsl
ds
data16
lds
cmp
mov
outsb
repz
jmp
js
mov
fwait
mull
in
dec
adc
dec
and
mov
adcb
cmp
and
pop
and
into
ss
insl
sub
and
nop
dec
lods
movsl
inc
xlat
dec
arpl
mov
movb
adc
test
mov
loope
lcall
pop
insl
test
bound
inc
test
das
pop
mov
testb
in
shl
sbb
dec
sahf
icebp
push
test
fnsave
xor
sub
pop
xor
packuswb
push
popf
ljmp
cmp
iret
pop
in
inc
ret
repz
movsb
sub
mov
ss
inc
sbb
push
jl
mov
pop
mov
cmp
push
sbb
push
xchg
pop
ret
cmpsb
int3
js
mov
fcompl
and
leave
ret
lret
mov
scas
fisubs
cld
mov
or
adc
movsb
inc
adc
in
rcr
sub
fidivl
cmp
dec
sbb
add
shlb
sub
jmp
scas
pop
ss
addr16
mov
rcll
mov
rcrb
mov
scas
or
dec
mov
int3
xchg
ljmp
or
sbb
mov
shlb
add
rcrl
pushf
dec
icebp
pop
out
and
jbe
push
pusha
or
popa
das
xchg
push
aam
xchg
sub
cli
aam
cmp
pop
xchg
imulb
les
inc
js
into
gs
fwait
xchg
sbb
mov
ret
hlt
std
pop
cltd
xor
sbb
mov
jg
ret
push
mov
rcll
dec
cmp
out
imul
push
arpl
movsb
push
jne
fstl
sbb
xor
push
xchg
push
jb
or
dec
js
scas
in
push
cs
cmp
in
dec
cli
cs
notl
xchg
xor
mov
pop
cmp
out
pushf
aaa
int
mov
xchg
xor
sub
in
and
mov
xorl
xchg
add
lahf
mov
adc
add
and
icebp
insb
and
stos
lds
scas
inc
ja
pop
jle
push
xlat
mov
lret
sbb
fdivs
add
into
cmp
jns
add
cltd
lods
data16
je
pushf
data16
adc
std
mov
shlb
std
push
fimull
divb
add
add
cmp
ds
sbb
pop
test
fadds
push
xchg
rclb
leave
sub
push
arpl
sahf
and
call
dec
sti
cs
cmp
mov
fs
mov
adc
rorb
stos
fs
les
lea
aam
pushf
rcrl
add
test
adc
pop
xor
loopne
cmp
stos
lds
sbb
adc
shld
sahf
pop
or
movb
stc
movsl
jmp
fs
add
jns
dec
icebp
adc
pop
mov
xor
pop
lods
and
sahf
push
sub
or
inc
in
push
mov
scas
push
lock
push
jo
testl
adc
pop
outsl
mov
mov
pusha
cli
mov
repz
add
mov
mov
aaa
stos
addl
xchg
pop
pop
out
jp
das
cs
cld
xchg
cmp
das
cmp
xor
push
and
pushf
les
aas
mov
mov
aad
stos
cmp
cmc
push
aas
iret
jo
pop
push
lock
mov
mov
in
inc
in
jg
shr
lahf
repz
push
sub
lcall
bound
push
test
pop
jb
shl
cmpsb
xchg
test
xchg
inc
xchg
ja
inc
xor
ud1
mov
jge
inc
fldcw
lret
pusha
cmp
loopne
inc
xchg
or
jmp
lcall
lcall
test
sub
adc
push
aad
or
sti
xor
xlat
outsb
scas
push
imul
pop
push
adc
pop
dec
repz
sahf
gs
pop
jne
dec
mov
lcall
push
jmp
in
xorl
add
and
and
cmpsb
lods
inc
shrl
jge
iret
cmpsb
xchg
mov
cs
orl
fidivl
pop
jge
mov
sub
mov
dec
push
mov
stc
adc
or
outsl
pop
mov
push
movsl
loopne
mov
cmp
addr16
fldenv
sub
rcl
pop
or
mov
sub
add
xchg
testb
push
add
or
das
jne
ja
data16
xor
jmp
test
decl
xor
xchg
add
add
cmp
sahf
add
int3
ss
addr16
and
mov
ja
mov
inc
cmpl
ret
loop
leave
jge
test
fstl
sub
jae
repnz
mov
out
adc
inc
sahf
cmp
push
mov
cmpb
jne
jecxz
lods
mov
in
orb
jns
mov
or
cli
popf
test
lcall
in
mov
nop
data16
inc
fxch
fwait
lea
jbe
jle
aas
pop
mov
or
test
jnp
inc
pop
call
push
outsb
sbb
pop
push
rcrl
lods
addr16
xchg
add
orl
and
shlb
into
lea
mov
out
dec
cwtl
jnp
jns
js
je
xchg
dec
ss
andb
out
or
aam
scas
aam
cmpsb
or
sub
fstl
fnstsw
jmp
jp
arpl
xchg
adc
mov
mov
ljmp
test
push
and
lahf
lock
daa
xchg
lea
popf
pop
cs
jle
leave
mov
in
scas
in
push
call
fwait
xor
test
push
ljmp
lock
jecxz
scas
out
mov
inc
lock
sbb
addr16
out
mov
pop
test
addr16
imul
les
jb
sbb
sbb
stc
jno
adc
sub
jns,pn
push
or
add
sub
fsubl
ret
fists
inc
fs
xchg
add
xchg
mov
or
cmp
lods
xchg
sub
adc
fwait
cmp
lds
fdivrl
cld
or
inc
push
nop
sub
aas
mov
int3
sub
daa
sub
loope
hlt
mov
mov
mov
dec
lods
mov
mov
outsl
mov
insl
xor
enter
xchg
lahf
std
mov
mov
jne
dec
aad
adc
sub
test
add
adc
adcb
adc
cmp
outsb
dec
imul
loop
test
xchg
test
lea
sahf
xor
test
jbe
push
xor
push
cmc
lret
jge
pop
jo
mov
shrb
scas
stc
ss
sti
arpl
cmc
mov
shlb
jecxz
cmp
add
cs
mov
push
push
sbb
adc
mov
cli
lret
lea
mov
call
or
add
testb
adc
adc
xchg
dec
stc
xchg
and
test
cmpxchg
push
sub
sub
dec
sbb
jge
fld
dec
ret
inc
negb
fnstenv
lahf
int3
out
push
adcl
popa
inc
xchg
push
dec
xchg
fbstp
pushf
cmp
in
mov
ret
fistpll
fidivl
adc
dec
cmpsb
sub
movsb
pop
cli
cmpsl
orl
notb
adc
adc
gs
xor
jne
sub
pop
mov
popf
cmp
push
mov
push
mov
stc
xchg
adc
cmpl
xchg
xor
sbb
push
iret
loopne
outsb
mov
jno
sbb
mov
test
xchg
cs
aad
cld
dec
push
out
mov
repnz
fdivs
das
add
bound
sbb
scas
sti
int
pop
xor
mov
jmp
shl
push
repnz
inc
scas
mov
mov
lret
arpl
addr16
vpcomuq
lret
mov
jne
jbe
sti
pop
push
sub
shll
xlat
sbb
push
push
push
mov
outsl
shll
push
dec
gs
in
aam
or
cmpsb
jecxz
gs
jae
xchg
jmp
int3
dec
loop
jne
push
stos
shrb
adc
jae
inc
sub
test
mov
sbbl
mov
pop
insl
mov
cmp
add
ret
arpl
ret
pushf
idivb
cmp
sub
add
add
sarl
fs
inc
and
fcmovnu
add
das
sar
or
bound
pop
test
and
pop
xor
xor
xor
les
rcrb
cmpsl
je
sbb
out
jae
mov
insb
inc
sbb
mov
repnz
fsubr
pusha
loop
mov
test
ret
mov
xchg
das
add
pusha
mov
loope
inc
popf
sub
scas
pop
xor
cmp
xor
jg
dec
and
pushf
out
inc
dec
cmp
loope
in
pop
pop
mov
mov
scas
or
xor
push
mov
or
xor
insb
or
ficoml
mov
fdivs
inc
xor
push
sbb
inc
movsb
mov
jg
xor
cmpsl
adc
push
xchg
xor
inc
xchg
jnp
in
cmpsb
in
cmp
scas
mov
push
jno
cli
mov
sbb
imul
inc
jl
mov
or
cmpsl
xchg
cltd
test
xor
and
stos
es
ds
jne
jecxz
or
pusha
lods
mov
call
xchg
enter
jb
notb
out
das
movsl
jg
or
in
dec
cwtl
out
xchg
scas
out
out
inc
rcrb
andb
jp
pop
inc
cltd
clc
sahf
xchg
push
cmp
je
call
or
mov
fcom
or
mov
pop
les
xchg
andl
push
xchg
fstl
or
std
ret
and
push
test
xor
and
icebp
xor
inc
push
jo
push
test
push
ljmp
jno
cmp
mov
lea
loope,pt
sub
mov
or
or
mov
lds
fsubrp
xchg
xchg
inc
scas
jbe
mov
inc
mov
dec
ljmp
lock
out
push
fadd
or
add
xor
or
adc
and
xchg
jecxz,pt
push
enter
cmp
sbb
mul
fnsave
fwait
es
loope
jns
cmp
clc
nop
int3
in
add
xor
mov
je
scas
and
incl
push
or
les
sbb
cwtl
inc
aaa
addr16
cli
loopne
clc
mov
ficompl
jg
cmp
sahf
shlb
or
sbb
and
dec
fsubl
stos
in
ds
pop
and
jne
sbb
sti
insb
sub
push
movsb
nop
xchg
sub
rcr
les
mov
icebp
movsl
mov
cmp
add
inc
and
sub
fisubrl
mov
fidivrs
in
dec
inc
test
and
mov
dec
out
movb
in
and
test
int3
lock
sbb
add
rcrl
and
jns
push
sbb
dec
push
dec
dec
imull
in
xchg
lcall
push
xor
xchg
dec
cmc
imul
push
lret
bound
insw
add
jecxz
mov
testl
sti
mov
testb
stc
mov
mov
mov
andb
sbb
int
f2xm1
inc
or
nop
scas
pop
nop
add
addr16
hlt
jb
lds
lcall
nop
pusha
adc
inc
add
in
fsubrs
and
push
movsl
stos
mov
sub
stos
call
sbb
rorl
jns
std
and
push
xor
xor
adc
insb
ja
addr16
jno
arpl
in
les
out
push
pop
lcall
jnp
loopne
push
ds
jle
push
cmp
mov
mov
test
aam
jns
jno
ja
sarb
xrelease
mov
push
rol
xor
fidivl
ljmp
pop
cmpsb
push
aam
mov
xchg
daa
xor
inc
xor
push
dec
js
mov
je
andb
insb
inc
pop
add
push
cwtl
jp
jmp
stc
popf
pusha
stos
lock
jmp
pxor
and
jae
jecxz
sub
sub
movsb
adc
fbstp
cmp
mov
mov
mov
movsl
arpl
add
lea
int3
addr16
pop
out
nop
adc
inc
cltd
repz
add
ja
data16
aaa
cwtl
out
pusha
jb
dec
test
mov
aad
lods
pop
aam
cmpb
push
jl
popa
mov
lahf
dec
les
xchg
inc
cld
paddw
stc
movsl
jns
xor
fs
pop
in
out
lods
cwtl
mov
xchg
popa
notb
mov
arpl
mov
push
sbb
mulb
fstpt
loop
mov
cmp
sbb
rcrb
test
cwtl
mov
lock
add
pop
insl
aas
push
aas
mov
fildl
mov
push
enter
movsb
bound
lret
push
jle
mov
xor
mov
iret
in
std
jp
pop
and
xchg
push
and
pop
add
add
inc
jle
pop
lcall
fsubl
jno
mov
cmovns
inc
jb
cmp
test
adc
cmpsl
mov
out
out
push
lock
adc
fidivs
mov
or
clts
sahf
lock
mov
ljmp
mov
aam
iret
and
jmp
test
inc
jg
sbbb
cwtl
daa
fildll
ss
xor
adc
fnstenv
and
sub
cwtl
movsb
outsb
lds
outsb
dec
pop
jno
sub
mov
jecxz
mov
adc
sbb
aaa
fs
push
add
sub
push
or
imul
imul
dec
xor
push
mov
aad
lds
jge
cld
pop
sub
mov
xor
jb
mov
xchg
xchg
pop
ljmp
push
jne
lods
mov
test
fdivrl
popf
lea
push
dec
lahf
dec
sub
loop
leave
fld
mov
mov
add
mov
cmpsb
mov
adc
adc
jb
test
xor
sbb
sub
jp
pop
nop
cmpsb
add
out
cmpsb
addr16
lds
into
cmp
jns
call
cmp
mov
inc
lret
mov
mov
mov
push
jmp
stc
jbe
cs
ror
pop
cmc
nop
lock
xchg
fists
popa
cld
int3
inc
and
das
pop
sub
and
inc
stos
push
xchg
add
stos
lods
mov
ss
xchg
inc
incl
fyl2x
fiadds
adc
push
or
out
scas
call
mov
dec
dec
xchg
mov
push
mov
and
xor
mov
adc
and
fmul
xchg
bound
sarb
jo
or
cmp
mov
or
mov
jp
sub
mov
or
mov
imul
outsb
rorb
jae
add
xchg
mov
xchg
std
inc
jns
clc
outsl
test
push
mov
std
scas
jge
lea
inc
add
out
and
test
scas
xchg
and
mov
jmp
dec
xchg
push
xchg
jo
je
lods
jge
pop
popa
mov
mov
jge
mov
lods
frstor
enter
lret
adc
cld
adc
xor
lret
or
mov
jo
aaa
xchg
inc
mov
int3
and
mov
sbb
pop
inc
lods
out
jne
aad
leave
sub
xchg
xchg
sahf
lock
out
lahf
and
mov
cs
mov
aas
and
clc
jne
push
or
pop
aaa
pop
jp
movsl
mov
pop
sub
scas
inc
lods
adc
cltd
in
xor
movd
mov
sti
mov
pushf
xor
scas
mov
fs
fcoml
push
jmp
fisubl
gs
jmp
in
lock
rolb
mov
pop
dec
dec
jb
punpckhwd
sbbb
test
cmpsl
out
pop
clc
inc
fsubs
iret
adc
jle
jg
aas
test
mov
mov
outsb
mov
fidivl
inc
fwait
insb
jle
cmp
add
std
negb
xchg
negl
mov
je,pt
and
movsb
pop
call
cwtl
jecxz
jnp
ljmp
dec
imulb
sbb
xchg
lods
mov
adc
mov
fcomp
or
pop
les
notb
adc
faddl
in
adc
lods
arpl
push
dec
inc
push
cmp
loope
adc
jno
inc
mov
andb
mov
xchg
rolb
lock
mov
cmp
mov
loop
push
xor
xor
pop
into
stc
insb
cmp
xchg
fadds
scas
out
addr16
mulb
sbb
sub
dec
iret
das
push
mov
sbb
imul
test
mov
ds
repnz
sub
pop
cltd
mov
test
mov
fcmovnb
xchg
or
lcall
sbbl
fiaddl
dec
clc
sti
add
adcl
cmp
inc
jno
in
inc
pop
aas
clc
push
push
fsub
js
mov
dec
mov
xchg
sub
repz
mov
mov
cmp
pop
hlt
movb
pop
dec
jns
pop
dec
push
loope
sbb
sbb
or
xchg
imul
mov
push
jno
lods
inc
pop
lea
jge
mov
inc
in
fiadds
in
gs
lock
xor
cli
cmp
scas
or
or
inc
jle
std
packsswb
xchg
xor
mov
sbb
dec
popa
cmp
jmp
pop
inc
das
leave
in
test
mov
scas
stos
inc
dec
and
jmp
or
push
sub
pop
mov
jl
lcall
sbbl
or
push
inc
imul
jno
cltd
xor
ret
stc
mov
push
sbbb
imull
pop
push
rorb
cmp
add
dec
rorl
lods
sbb
aas
xor
and
lods
pop
stc
sub
hlt
pop
pusha
xchg
sub
push
aad
fcomip
pop
loop
cmp
dec
fs
in
test
dec
fstpl
jle
sbb
and
pop
imul
je
pop
add
mov
les
cmp
mov
int
sub
addr16
int3
mov
dec
mov
cmp
cmp
pushf
dec
dec
loope
imul
iret
fs
inc
push
add
je
dec
into
and
in
aas
mov
sarl
ljmp
jl
jg
nop
sub
lahf
cmpsb
cmp
lods
jmp
mov
jle
jl
xor
mov
out
cmp
mov
adc
jbe
inc
out
push
cmp
out
pop
bndldx
jmp
inc
push
fsts
arpl
jbe
lods
cs
arpl
pop
sbb
lcall
add
xchg
inc
push
cmp
push
out
jbe
inc
adc
jne
and
repz
mov
jmp
cmp
jo
ss
std
ss
jp
xorb
stc
xchg
jge
and
sbb
xchg
lock
sbb
arpl
cmc
xchg
loopne
pop
jmp
daa
mov
pop
push
mov
lcall
cmpsb
mov
jne
pop
cmpsl
mov
loope
mov
push
int3
cmp
xor
and
cld
sti
push
mov
adc
arpl
in
mov
jmp
aaa
pushf
pop
stc
cld
lods
inc
sbb
bound
js
mov
push
cwtl
mov
pop
cmp
sbb
outsb
mov
mov
xchg
cmp
xchg
add
mov
pop
xor
fldln2
mov
cmp
aad
int3
push
mov
adc
push
testl
and
sbb
aam
inc
sbb
dec
and
push
ljmp
cmp
fdiv
nop
add
arpl
call
mov
add
sub
rcrb
push
inc
loope
lock
rcrb
cmp
dec
ror
popa
push
scas
xchg
push
jmp
jle
cmp
xchg
pusha
dec
inc
gs
outsb
shrl
fistps
cltd
inc
fisubrs
sub
cli
jge
mov
mov
movsl
cltd
sbb
or
mov
fisttps
or
ljmp
test
sub
mov
pop
ss
addr16
lock
or
push
and
pop
mov
add
mov
cmp
inc
jle
push
insb
ljmp
ds
lock
and
dec
daa
add
mov
fwait
push
fstpl
ljmp
cmc
mov
xchg
je
fwait
xor
push
test
fnstcw
xchg
test
dec
pushf
out
ljmp
dec
mov
or
in
out
in
add
mov
jge
mov
mov
mov
int
inc
add
xchg
int
sub
out
adc
dec
iret
lret
lret
push
pop
pop
ljmp
mov
popa
or
cmp
mov
xor
mov
in
mov
mov
fdiv
js
icebp
test
inc
pusha
add
fistpll
mov
test
xorb
cli
in
mov
sub
mov
and
lods
cmpsl
push
ss
test
int
shrl
adc
sub
shl
pop
mulb
push
ret
aas
push
or
xchg
daa
out
add
verr
jg
dec
movsb
mov
mov
push
cli
sub
dec
scas
fdivp
xchg
sbb
adc
das
rorl
nop
daa
xor
pusha
testl
jle
arpl
pop
outsl
pop
and
imul
push
lds
mov
jp
out
inc
mov
addr16
loope
bound
hlt
imul
sbb
jae
lret
or
push
and
or
insl
mov
fnstenv
push
mov
nop
pop
xchg
dec
mov
jle
adc
scas
out
jg
fildl
jns
xor
add
xchg
xchg
xor
xlat
js
or
shl
shrl
int3
fs
cmp
inc
test
movsl
xchg
lcall
adc
sbb
and
sarb
outsl
mov
aaa
pop
sbb
notb
outsl
push
push
je
leave
in
std
push
add
stos
and
mov
shll
dec
ds
xlat
insb
and
mov
cmp
call
int
rol
ss
je
add
aam
jno
mov
out
ficompl
mov
sarb
inc
pop
fstl
adc
rcr
jbe
clc
mov
push
ljmp
pop
rclb
jo
lcall
mov
je
ljmp
dec
icebp
ss
and
mov
pop
es
lock
cmp
cmpb
mov
das
mov
pop
sahf
cld
xchg
pop
xchg
clc
mov
mov
test
inc
pop
xor
lcall
mov
xor
mov
add
or
sahf
adc
test
jnp
out
movsl
iret
data16
xor
xchg
add
fadds
or
cld
dec
mov
lds
dec
or
mov
scas
cmp
sbb
hlt
pop
fidivrs
rcl
insl
test
mov
dec
test
dec
mov
shrb
lret
jnp
popa
in
insl
call
cmc
in
jle
xchg
pop
std
xchg
xchg
sbb
inc
outsl
stos
inc
pusha
ja
cmc
mov
fdivrl
xor
mov
es
mov
jo
jb
movsw
jo
roll
jecxz
jmp
cmp
push
outsb
loopne
and
push
cmpsl
clc
jae
shl
push
pop
out
mov
ja
mov
mov
mov
xor
xchg
mov
jmp
fwait
xor
mov
insl
cmc
add
popa
aaa
sbb
jg
mov
shr
sbb
dec
ret
cmpb
loop
data16
dec
mov
lcall
ss
pop
outsl
aad
push
add
pop
int3
je
jb
movsl
inc
xor
dec
mov
les
dec
int
add
ja
jb
push
inc
popf
or
pop
stc
jl
mov
loopne
out
in
negb
push
into
ss
outsl
addl
xchg
mov
leave
vmovsldup
das
push
sub
sub
mov
lahf
pushf
jbe
std
rcl
mov
shrl
dec
pop
adcb
xchg
mov
xchg
mov
jge
mov
dec
ret
mov
mov
fistps
lea
pop
out
mov
pop
jmp
jne
lret
jne
inc
fnsave
int3
cmp
sbb
xlat
stos
in
add
mov
je
pop
ret
fidivrl
push
popf
in
xchg
mov
inc
movsl
loopne
and
jecxz
mov
push
jmp
dec
movl
xchg
xchg
sub
in
scas
ret
inc
dec
outsl
test
xchg
cmp
xchg
test
les
mov
jae
mov
cltd
fistps
in
lea
call
jge
and
and
add
mov
cmpl
dec
loopne
pop
cmp
cmp
sbb
rorl
mov
sub
xchg
cmp
jne
nop
sbb
add
lods
jae
push
add
jno
xlat
dec
push
fyl2x
test
mov
testb
pushf
cli
and
loop
mov
out
mov
cmp
cmpsb
ret
rolb
sbb
in
lods
mov
popf
dec
fstps
lret
jge
jbe
fs
sub
fmulp
inc
inc
lret
ljmp
icebp
adc
imul
cmp
test
fadds
xorl
dec
sbb
ja
ret
mov
jnp
decb
inc
ficomps
mov
jo
add
sbb
xchg
xchg
insb
or
jp
cli
xchg
incb
push
out
mov
jge
icebp
push
push
rclb
addr16
or
es
cmp
daa
push
fsubl
fcmovnb
sub
xor
lahf
gs
push
push
fwait
sti
fisttpl
xor
xchg
xor
setge
subb
movsl
xsha256
cmpsb
dec
std
pop
push
pop
mov
rorl
dec
shlb
outsb
pop
adc
in
cvtps2pd
sahf
dec
mov
inc
pushf
subb
sahf
xchg
xor
xchg
and
pop
test
out
sbb
cwtl
inc
or
mov
popf
jo
sbb
sub
repz
adc
sbb
mov
jbe
mov
das
fnstsw
dec
sqrtps
test
ss
out
or
iret
scas
sub
xor
nop
out
mov
and
xchg
scas
add
out
sbb
push
xchg
sub
sbb
fidivrs
out
jns
cmp
jne
cmp
cmpb
cmp
pop
mov
aaa
sbbb
sahf
sbb
mov
cmp
scas
xchg
mov
sti
inc
cli
mov
roll
fisttps
dec
pop
jl
aaa
scas
jnp
jmp
insl
mov
ljmp
jle
bound
sbb
jb
mov
mov
mov
out
cmp
fwait
lods
fcoms
orl
dec
jecxz
mov
iret
xchg
xor
sbb
shrl
and
sbb
push
jecxz
add
lret
call
inc
sbb
push
popf
les
scas
into
jne
out
and
xchg
test
add
clc
fs
mov
int
sub
cmp
rcll
js
in
pop
or
and
xlat
push
push
mov
and
popa
mov
or
jle
shll
data16
ds
push
movsb
imul
pop
insl
aad
sbb
sub
mov
fnstcw
in
loope
and
jl
lcall
cmp
xor
add
cmc
hlt
jle
pop
daa
shll
leave
push
pop
rclb
push
sbbb
and
inc
push
dec
xchg
sbb
inc
fadd
sahf
loop
or
jl
inc
lcall
dec
sub
xchg
ljmp
jbe
repnz
jmp
in
mov
pop
fs
xchg
cmp
arpl
jb
cmpsb
arpl
and
add
and
pop
xor
dec
out
mov
nop
add
and
lcall
mov
lahf
das
ss
loop
inc
lods
jb
push
mov
outsl
xchg
popf
xchg
repz
and
push
pop
imul
ja
cmp
leave
test
inc
mov
enter
dec
inc
icebp
shrl
cmp
aad
xchg
jecxz
pop
mov
int3
mov
pop
cmp
lret
sub
dec
ljmp
mov
mov
iret
das
into
mov
inc
jge
out
scas
and
push
loope
ret
loope
gs
cmpsl
icebp
shll
fldcw
mov
in
mov
imul
inc
adc
xchg
mov
ja
inc
mov
inc
mov
lret
bound
jo
lock
aam
cmc
neg
shrl
mov
sbb
push
mov
std
insl
ret
xchg
adc
movsb
mov
lret
xor
sub
adc
inc
dec
pop
sub
daa
outsl
cmpsl
movsb
repz
call
mov
in
jle
lcall
fsts
mov
popa
jbe
rcll
lods
inc
out
add
loop
jo
pusha
sub
lret
int
mov
mov
cmp
das
lea
pop
out
xor
out
inc
sbbl
stos
in
js
sbb
xchg
sbb
jl
jge
jns
mov
jl
lret
jae
adc
inc
add
popf
or
lds
loop
adc
and
dec
push
mov
or
sub
sti
mov
add
jns
scas
movb
xor
adc
test
dec
adc
std
mov
jns
jmp
mov
sahf
out
jb
inc
adc
jo
loop
imul
enter
clc
rol
outsl
sub
pop
scas
iret
jb
insb
rcrb
xor
pop
hlt
jle
add
hlt
push
pusha
jno
gs
or
jae
fmulp
ja
and
inc
cli
cmp
imul
leave
fdivrs
cli
inc
fmull
xor
jns
and
das
cmp
and
insl
fs
sahf
push
scas
pop
sbb
dec
data16
adc
call
and
adc
xor
sbb
iret
ja
cmp
lock
jnp
shl
or
enter
lret
fsub
push
jl
cltd
lods
je
push
xchg
stos
fs
add
adc
fisubrl
pop
and
pop
cmp
ret
cmpsl
add
out
adcb
sub
xchg
stos
add
pop
add
out
ljmp
repz
shrb
popf
mov
jecxz
outsl
and
dec
jecxz
push
mov
adc
or
pop
or
mov
inc
mov
push
mov
jno
jae
pop
mov
jmp
jbe
popf
fistps
or
xchg
dec
pushf
mov
jmp
out
push
clc
pop
push
sub
pop
fstpt
mov
sub
xchg
sub
std
sub
adc
icebp
scas
inc
ljmp
jg
xchg
aad
and
jo
dec
pop
mov
xor
mov
out
cmpsl
pop
nop
daa
mov
in
insb
xor
adc
sbb
fdiv
add
je
push
sti
mov
pop
hlt
in
imul
cmp
movsb
popa
dec
icebp
xor
jl
pop
xor
fstpt
add
mov
test
lahf
test
adc
pop
bnd
in
xchg
clc
out
or
cld
adc
mov
cltd
mov
stos
xchg
and
lret
jae
loopne
adcb
inc
mov
dec
or
in
jno
test
jb
fildll
scas
jecxz
loope
add
mov
jmp
mov
scas
add
icebp
std
orl
jnp
sbb
inc
outsl
push
jae
mov
pusha
or
paddsb
cmp
ficoml
in
push
jmp
cmp
inc
outsb
nop
jg
roll
fstpt
in
lahf
sub
mov
inc
or
sbb
inc
ljmp
mov
cmpsb
test
popa
ret
jp
and
pop
leave
ljmp
cmp
pop
lahf
enter
push
out
test
and
push
jno
stc
mov
fnstcw
das
pushf
pop
popa
fisttps
popf
arpl
in
xor
jp
mov
jg
mov
mov
je
stos
xor
pop
lods
lahf
scas
inc
int
iret
pop
aam
int3
fistps
divl
std
fisttpl
popa
sub
pushf
cmp
xchg
push
and
es
test
jb
push
inc
and
out
mov
cmp
xor
mov
xchg
arpl
push
test
lock
mov
out
xchg
das
clc
addl
and
push
fmull
pop
test
ja
push
sahf
inc
mov
in
and
dec
mov
das
pop
mov
movsb
sub
fldcw
jp
add
mov
in
mov
add
pop
pop
test
cmc
std
or
data16
rcrb
sahf
sbbl
add
shll
std
mov
lods
or
inc
sub
lret
imul
clc
or
sbb
loope
add
in
sbb
jge
out
addr16
movsl
or
mov
sbb
cli
std
lods
push
pop
outsb
inc
mov
sub
lods
pop
filds
mov
and
ss
jne
pop
mov
xchg
cmp
pop
and
cmp
cli
or
rcrl
sarl
js
in
cltd
int3
pop
dec
es
fsubrl
jge
insl
pop
push
or
dec
mov
cmpsl
adc
and
cmpb
imul
xlat
fldenv
mov
clc
lret
mov
pop
iret
or
int
sbb
add
push
sbb
cmc
xchg
inc
shrl
and
add
xchg
xchg
dec
add
xchg
mov
and
pop
xor
xchg
cmp
push
sbb
cmp
push
jno
pop
js
mov
fistl
dec
or
xchg
int
lods
popa
mov
dec
out
out
int3
sahf
lret
xor
mov
fstl
aas
dec
jge
fldt
mov
push
or
xchg
cs
inc
mov
loope
add
mov
fdivl
test
scas
es
addr16
xor
iret
xor
inc
jo
in
dec
decl
jle
mov
scas
fldcw
notb
sub
jg
or
loope
add
add
das
aad
sbb
test
out
cwtl
in
push
xchg
jns
ja
mov
sub
nop
pop
xlat
aaa
push
js
mov
xchg
adc
xchg
leave
pusha
imul
fistl
cmp
jns
sub
mov
push
add
mov
and
jle
popf
jns
push
mov
test
lea
cli
inc
sub
xor
call
mov
or
cwtl
stos
repz
outsl
and
push
sarb
fistl
mov
and
xchg
lods
aad
sahf
xor
and
cmp
xchg
sbb
js
notl
negb
xchg
lods
mov
mov
push
sahf
xor
loopne
sub
or
xchg
inc
stc
and
ds
mov
out
fisttpl
fdivrp
dec
mov
and
xor
adc
jp
push
dec
lcall
cmc
mov
cmp
push
cmp
mov
outsb
jp
push
xor
outsb
push
mov
movsb
adc
pusha
cmp
xor
sub
call
or
cmp
nop
nop
add
fwait
ss
arpl
jl
dec
xchg
aam
xchg
mov
sbb
sbb
sbb
sub
jbe
mov
pop
mov
mov
pop
movsl
dec
cmp
push
in
mov
xchg
mov
fsubrl
shll
mov
push
mov
push
jbe
pushf
xor
jg
orb
fdivrp
sahf
insl
scas
add
jnp
enter
mov
jno
fnsave
or
push
sub
xor
cmp
adc
add
in
push
xchg
sub
lods
dec
mov
inc
jmp
or
inc
mov
jne
loope
or
mov
jle
lock
call
int
adc
ljmp
rorb
and
cmp
mov
cmpsl
jle
or
mov
or
les
insl
push
mov
pop
mov
mov
add
push
or
or
pop
aas
xor
repz
pushl
push
jge
sbb
xor
test
mov
mov
inc
js
test
push
loope
cmp
dec
fistpl
or
push
push
pop
mov
mov
repnz
aam
pop
lds
pusha
cmp
les
adc
mov
je
mov
aad
sbb
pop
jmp
clc
sub
and
jno
aam
dec
loopne
pop
cmp
loopne
into
sub
pop
mov
cli
or
pop
jg
dec
or
gs
mov
xor
popa
mov
nop
adc
add
scas
mov
adc
lretw
inc
pop
or
inc
lret
pop
jg
cwtl
sti
inc
adc
sub
popa
add
das
adc
pop
in
test
outsl
shl
lock
rorb
imul
jne
cmpsb
lcall
jbe
leave
cwtl
inc
loope
and
xchg
adc
jmp
into
fnstcw
push
pusha
aas
test
enter
pop
xlat
jb
fsubs
pop
jb
data16
xor
sub
push
xchg
xchg
cmpsl
pusha
sar
daa
pop
rolb
mov
mov
test
mov
jecxz
inc
push
jmp
dec
push
inc
pop
out
push
mov
cmc
xchg
mov
adc
or
push
dec
cmp
pop
stc
inc
negb
mov
add
mov
add
and
adc
pop
xor
and
stos
ret
mov
xor
mov
mov
into
xor
jo
push
push
and
inc
add
fsubrp
inc
add
rdmsr
arpl
inc
cmp
lret
mov
sti
or
cmp
lahf
xlat
mov
mov
xor
dec
sub
pop
out
inc
imul
jnp
jl
ss
sbb
std
and
jg
and
fs
sbb
add
hlt
mov
sub
add
mov
mov
iret
pop
jg
inc
dec
cmpsb
mov
icebp
sbb
sub
mov
sub
mov
popa
jns
dec
and
inc
test
inc
sbbl
imul
and
and
test
imul
movsb
cmp
test
ret
lret
aaa
stc
xlat
or
xchg
stos
add
lods
inc
bound
xor
int
add
dec
enter
loop
push
andb
out
insl
pushf
stc
mov
jo
shlb
xorl
push
scas
dec
popf
and
xchg
mov
xchg
sub
add
xor
mov
repnz
push
repz
dec
loop
xor
fbstp
insb
push
cmpsb
push
or
sbb
test
sub
test
jo
loope
arpl
movsl
xchg
popa
fbstp
popf
sub
inc
pop
divl
cmp
stc
mov
lds
mov
mov
adc
jp
pushf
jae
sub
ds
mov
test
dec
inc
inc
mov
rolb
aam
ficoms
stos
or
ss
xor
xchg
add
cmpsb
icebp
push
cmpsb
orl
adc
inc
cwtl
jbe
push
jno
popl
fsubrl
adc
inc
popa
loopne
xor
in
loop
call
out
test
pop
popa
lods
or
lret
dec
packssdw
fdiv
cmpsb
rcrb
jle
leave
cmp
cmc
iret
xor
push
and
data16
add
sahf
and
or
repnz
ss
shll
add
inc
jg
rorl
adc
jg
ss
setns
xchg
pop
add
rclb
pop
movl
inc
je
jle
xchg
stos
dec
add
popa
jnp
jb
fs
out
sub
mov
popf
addr16
cwtl
and
xor
test
daa
push
pop
mov
dec
mov
dec
mov
dec
jo
and
fsubrl
xor
jp
pop
adc
mov
lods
inc
fldcw
lret
enter
mov
aam
ret
cmp
sarl
or
pop
insl
dec
andl
cmpsl
scas
aaa
sub
iret
fdivrl
adc
add
xor
call
sub
cli
lea
adc
test
jmp
or
jl
seto
mov
xchg
sub
out
mov
adcl
pop
movsb
add
sub
sub
imul
movsb
ja
sub
nop
mov
pushf
lcall
popf
ds
mov
rep
icebp
jg
jl
sti
or
mov
mov
push
dec
push
stos
lea
xor
dec
push
ljmp
call
push
cmp
decl
sub
cmp
mov
cmc
std
push
adc
data16
mov
inc
jp
leave
pop
push
cmc
push
loope
add
adc
lret
mul
fidivl
mov
stos
repz
popf
adc
bound
cmp
popf
add
mov
into
cmp
or
inc
and
fcoml
shlb
pop
xchg
mov
jae
sbb
dec
jecxz
mov
mov
loop
push
mov
pop
clc
movl
inc
jl
add
fcoml
ficoml
hlt
cmp
std
testb
stos
mov
push
cmp
pushf
fld
fcoms
cmp
lods
cmp
bound
and
fsubr
push
gs
inc
adc
dec
adc
mov
pop
out
loopne
xchg
rorb
mov
insb
shl
and
test
jecxz
popf
dec
in
adc
jmp
mov
imul
mov
icebp
adc
mov
jbe
pop
lcall
cmpsb
cmp
sub
pop
jno
mov
inc
out
push
ds
or
gs
lds
sub
mov
push
repz
add
pop
xchg
fucomp
jo
sub
sub
cwtl
lds
ds
xchg
push
sbb
cmpsb
popa
cmp
pop
push
push
adc
and
test
xchg
das
cmp
js
xchg
rol
mov
aad
push
inc
pop
xor
mov
push
das
push
repnz
pop
fsubs
fisttps
xchg
test
andb
mov
mov
mov
sti
xchg
das
ret
cmp
sti
xchg
pop
adc
stos
out
in
in
sti
cs
out
loopne
dec
testb
cltd
loope
fwait
repz
addr16
mov
insl
sarb
pop
fcomps
adc
pusha
xlat
sub
cmp
icebp
insb
lahf
loopne
mov
pushf
into
gs
mov
in
adc
repz
xlat
lock
sahf
pusha
pop
scas
sbb
andl
dec
imul
int3
pop
lret
xlat
dec
shlb
xor
icebp
test
jmp
dec
mov
mov
lds
xor
scas
cmp
adc
lahf
or
sub
hlt
xor
inc
iret
push
push
leave
push
jns
add
mov
pop
mov
mov
push
or
pop
pop
adc
data16
push
push
fistl
pusha
mov
pop
testb
scas
add
call
cmp
sti
jmp
insl
out
push
rolb
sahf
or
lods
es
in
mov
data16
cmp
insl
xchg
les
iret
fmul
sar
inc
imul
inc
lret
pop
jmp
pop
out
das
pop
pop
stc
xor
dec
pop
add
mov
out
xchg
ss
movsl
enter
gs
sbb
add
or
mov
push
lret
adc
pop
dec
leave
into
sub
roll
idivl
pop
cmp
dec
pop
add
nopl
cmp
push
jnp
lret
out
iret
std
aas
mov
pop
push
outsl
xchg
addr16
dec
cmp
outsl
andl
and
inc
int
stc
push
lods
aas
pop
xor
xchg
cmpsl
push
out
fadd
fnstenv
lret
xor
dec
je
xchg
and
cmp
xlat
mov
rcll
lcall
jb
packssdw
mov
stos
lods
cli
pop
fsubrs
fnstcw
aam
mov
and
push
mov
sarb
jecxz
or
pop
ror
sbb
mov
in
xlat
int
inc
lods
or
ss
xchg
idivl
mov
pop
cmp
push
jge
xchg
fidivrs
fistps
mov
dec
and
fiaddl
fbstp
jle
inc
push
leave
loop
int
sbb
jecxz
inc
movsb
test
imul
xor
adc
sub
mov
imull
and
frstor
lret
push
mov
loopne
inc
sahf
cli
hlt
outsl
add
dec
add
pop
xchg
xor
nop
adc
inc
push
cmc
int3
dec
cmpsl
push
stos
mov
push
add
icebp
mov
dec
aad
outsb
imul
jo
xrelease
xchg
movsb
pop
pop
mov
cmp
inc
dec
fisttps
adc
stos
gs
in
mov
adc
push
in
nop
mov
dec
dec
mov
xchg
add
jne
cmp
push
inc
ret
mov
addr16
xchg
xorb
adc
pushf
lcall
dec
in
mov
xchg
mov
or
push
sahf
inc
jo
les
push
xor
mov
cmp
mov
jo
gs
inc
cs
adc
in
jb
int3
sub
aas
push
insb
gs
in
pop
arpl
cmp
cmp
add
mov
push
cmp
jmp
cltd
cld
or
cmc
adc
sbb
lds
mov
andl
sbb
lods
lds
mov
jle
mov
nop
pop
push
sbb
mov
mov
gs
cmp
into
jae
or
dec
jb
sbb
or
sub
pop
cmp
cwtl
sti
mov
lret
lcall
cmc
dec
jecxz
push
mov
pop
test
mov
pop
mov
xchg
mov
repnz
pop
insl
and
iret
push
rclb
mov
and
mov
push
in
loope
loope
jo
fwait
test
push
movsb
rcrl
imul
ret
in
pushf
outsb
sarb
push
or
ja
add
push
inc
insl
sahf
jb
cltd
das
cmpsl
and
int
dec
push
push
shll
out
inc
shlb
dec
add
xlat
mov
cmp
test
ljmp
es
pop
into
hlt
and
cmp
adc
add
mov
cwtl
lret
and
arpl
ss
inc
xchg
xchg
jmp
mov
push
cmpsl
push
jno
imul
cmp
jb
add
push
inc
ret
mov
dec
xor
outsb
jno
mov
pop
ds
nop
mov
mov
test
insb
rorb
mov
mov
fcoml
add
sub
popf
mov
sbb
outsl
out
pop
xchg
mov
pop
int
ljmp
pop
cld
stos
jmp
or
out
sub
inc
xor
push
in
push
and
xchg
dec
ret
lods
sbbl
sub
or
dec
fisubl
dec
and
int3
lret
addl
lea
cltd
subl
lea
mov
das
insl
jmp
inc
jge
gs
xor
int3
xchg
pop
lar
jae
js
stc
dec
data16
ret
subb
sub
sub
or
inc
rcrl
inc
add
pop
pop
push
cmp
repnz
lds
es
and
popf
mov
sub
pop
jo
cld
jne
int3
sub
jbe
push
test
cmp
stc
and
and
test
add
nop
xchg
stos
fcmovu
loop
jp
pop
push
daa
lcall
cmp
cmc
mov
sbb
adc
scas
aam
rorl
shl
xor
or
xorl
call
mov
push
ja
jae
stos
pop
mov
andb
xchg
xchg
jbe
std
push
test
test
mov
out
and
daa
mov
hlt
cmp
test
imul
mov
loop
sbb
add
iret
cmp
imul
push
cmpsb
push
fs
or
xor
jg
adc
mov
mov
sbb
adc
aad
sbb
pop
xchg
adc
push
and
pop
sahf
xlat
jbe
mov
jle
std
inc
mov
jl
test
inc
addr16
mov
sub
ret
rep
jmp
cmp
adc
cmp
dec
shrl
cmc
pop
cltd
fstpt
dec
push
add
subb
or
gs
nop
cmpsl
shlb
outsb
test
in
push
or
stos
scas
addb
jne
pop
call
dec
pop
lahf
dec
mov
add
xor
cmp
mov
into
popa
cli
push
aas
dec
cmp
fildll
loopne
shll
xor
xchg
lock
push
ss
pop
mov
jg
xchg
aam
les
repz
sbb
out
inc
jns
ljmp
ds
cmp
icebp
pop
andb
or
mov
fisttpll
icebp
cs
adc
fnstsw
nop
imul
push
jb
xor
aad
dec
lds
xchg
outsb
fstps
cmc
push
add
mov
movsl
adc
daa
jmp
addr16
ss
add
insl
inc
sar
mov
hlt
clc
cmp
aam
xchg
out
mov
push
imul
lds
aaa
mov
or
jg
mov
sub
add
xor
aad
hlt
pop
aaa
gs
fbstp
xchg
int3
xchg
dec
mov
pop
call
fildll
cmp
add
dec
imul
js
jne
xchg
mov
jmp
pop
push
imul
out
test
mov
addr16
lcall
fidivrl
jnp
pop
rcrl
jge
xlat
std
inc
mov
int
pop
sub
clc
bound
mov
jbe
mov
test
aaa
clc
jo
ljmp
je
scas
clc
or
push
aam
lea
shlb
das
insl
ja
push
xchg
add
xor
sub
scas
sub
mov
dec
jb
sbb
add
pop
or
push
pushf
sub
mov
sti
imul
sub
dec
lea
daa
lcall
popa
mov
enter
gs
mov
ljmp
mov
ds
mov
decb
adc
sbb
mov
lahf
xor
pop
sub
cmp
data16
jecxz
xchg
out
xchg
cmpsb
jmp
shlb
and
cwtl
arpl
push
xchg
sti
xchg
jne
ljmp
aas
mov
or
mov
pushf
ss
cmp
stos
cld
iret
mov
movsb
idivl
pop
and
push
ret
dec
pop
ljmp
xor
inc
test
test
inc
sti
xor
cmpl
nop
pop
repz
sub
int
les
imul
xchg
loop
pop
xor
push
out
insl
pop
fwait
aam
and
and
jo
sub
sbb
cmpsl
and
mov
mov
cmp
push
insl
ds
cmp
add
sbb
sbb
mov
cmc
xchg
pop
shrl
int
inc
dec
jg
out
jmp
mov
test
jnp
movsb
mov
xchg
fildll
cmp
sti
mov
cmpsb
inc
test
hlt
lahf
or
dec
subb
push
movsl
mov
popf
cmpsl
jecxz
jbe
cmp
xchg
pusha
mov
inc
out
cmp
or
push
adc
arpl
xlat
xchg
adcl
mov
fwait
and
sbb
int3
into
xor
add
pop
shr
sarl
sub
jae
inc
popf
dec
in
jb
mov
loope
std
sbb
pushf
mov
les
stos
dec
xchg
mov
push
int3
jae
loopne
outsl
cmp
lret
cmp
es
in
fwait
outsl
into
out
add
stos
mov
pop
pop
aas
mov
fcmovu
and
cmp
in
cmp
jae
cmp
pop
mov
in
push
jno
or
sbb
xchg
xchg
test
out
jl
pop
mov
mov
jl
jae
inc
test
lret
lea
adc
dec
scas
push
jno
ss
xlat
scas
push
aad
cmp
shlb
out
test
xchg
popa
jmp
push
leave
mov
pop
je
test
mov
test
xchg
push
cld
cmc
inc
cmpsl
pushf
cmp
xchg
lods
jmp
push
mov
mov
ret
das
cmp
les
adc
xchg
push
popf
ret
das
add
mulb
mov
jb
pop
mov
clc
and
cli
pop
sarl
scas
rol
xchg
sub
pop
insl
aam
js
xchg
in
bound
pop
jns
push
jno
inc
int
dec
faddl
jno
jo
lock
fisubl
xchg
cmc
push
or
jno
xchg
mov
dec
sbb
dec
pop
nop
jg
fsubrs
or
repnz
sub
in
mov
xchg
cmp
clc
stos
mov
mov
pushl
and
sub
sub
or
clc
rol
cmp
ret
sbb
push
mov
cmc
push
mov
aad
daa
jle
aam
popa
enter
testl
or
xor
jo
pop
rorl
push
mov
pop
out
stos
sbb
movl
pop
fwait
scas
js
bound
jg
jbe
dec
cmp
mov
clc
ss
and
scas
xchg
test
test
jecxz
int3
sub
sub
lahf
stos
jmp
jp
scas
sub
inc
in
adc
xchg
repz
mov
push
sbb
lret
lret
hlt
test
xor
add
in
push
pop
and
pop
insl
xor
hlt
mov
test
cmc
add
mov
or
nop
inc
pop
bound
cld
dec
or
adc
mov
mov
repnz
jl
push
outsb
repz
cmp
sbb
jmp
mov
inc
fs
mov
sahf
and
push
cmp
cmp
das
imul
xor
pop
in
jge
ss
pop
ret
xchg
dec
in
test
fucomp
inc
xlat
xchg
testl
adc
hlt
mov
pop
addb
cld
sbb
cmp
orl
sub
jle
lahf
cmp
nop
rolb
cmp
int
push
jae
inc
xor
cmp
daa
jns
movsb
andl
adcb
sub
or
mov
loopne
add
mov
mov
pop
insb
or
sbb
xor
in
outsb
daa
mov
negb
rcrl
sub
jae
popa
mov
iret
out
cmp
scas
mov
mov
ja
or
aam
jge
loopne
sahf
push
sub
clc
or
rcr
shll
dec
add
and
pop
mov
ja
pop
sub
sub
mov
fstpt
ds
pop
pusha
repz
repnz
scas
cmp
ss
pop
sub
hlt
xchg
push
add
andl
lahf
sub
nop
fwait
sbb
or
shll
push
icebp
insb
inc
cld
mov
mov
dec
cld
sarl
lods
dec
push
jmp
fucom
lret
push
push
jp
das
roll
notl
sub
sbb
cmpsb
inc
cmpsb
jne
aam
mov
pop
sub
push
push
jb
xor
mov
jno
xlat
stos
repnz
and
sahf
clc
cmc
push
mov
cli
aad
cmp
add
push
fisttps
mov
jg
sbbb
xorl
sbb
ss
jmp
stos
fnstenv
xchg
hlt
lret
xlat
sub
cmp
hlt
popa
loop
inc
mov
push
in
add
mov
fneni(8087
inc
in
add
lcall
mov
pushf
push
inc
jl
repnz
pop
ja
in
fcmove
inc
in
cld
jo
iret
ror
pop
leave
rcrb
arpl
movsl
repz
sbb
pop
and
loope
lret
push
test
dec
imul
mov
xchg
scas
mov
orl
jmp
outsl
enter
dec
sub
or
push
test
std
jno
mov
call
dec
enter
lds
jae
xchg
in
pop
sbb
stos
add
movsl
std
push
out
stos
sbb
aaa
pop
jnp
rcr
mov
pop
jne
fldenv
push
es
cmp
lods
or
pop
mov
xchg
sub
xor
adc
pop
cmp
enter
and
jne
jne
jle
add
push
jg
mov
je
sti
pop
roll
or
inc
lock
data16
into
dec
pop
sub
sub
pop
pop
lods
scas
sbb
pop
int
sub
mov
pop
imul
popf
loope
fisubl
mov
push
in
cmp
push
call
pop
jbe
daa
mov
fsubrl
push
mov
mov
adc
clc
sbb
loope
lods
inc
inc
pop
fwait
mov
sub
push
adc
inc
xchg
fidivs
dec
lahf
hlt
mov
mov
adc
ja
sbb
test
bound
repnz
imul
das
push
mov
sub
xor
outsb
aaa
in
and
lds
jge
iret
in
into
dec
mov
or
pop
data16
adc
xchg
add
mov
andb
into
pop
insb
add
jnp
dec
test
mov
rcrb
xchg
hlt
push
dec
sub
inc
scas
psllq
lods
xchg
ljmp
sbb
mov
pop
iret
xor
xorb
pop
int
loop
jle
xchg
out
inc
lahf
pop
repz
mov
inc
adc
enter
je
scas
add
or
xor
jl
and
sub
inc
mov
dec
mov
jmp
rcl
jle,pt
outsl
adc
dec
push
hlt
xor
fstl
in
cld
cwtl
enter
fistpl
test
adcb
adc
dec
jp
dec
loop
movhps
jo
imulb
rorl
shlb
dec
test
mov
cmpsb
and
int
ljmp
into
hlt
fdivrs
mov
sahf
popa
pop
add
addl
jge
std
add
push
mov
je
sbbb
ret
jge
mov
add
add
cmp
jg
in
cmp
or
testb
xchg
mov
mov
das
es
push
dec
addr16
jp
icebp
mov
sub
xor
adc
lea
cmp
adc
loopne
out
inc
push
hlt
test
push
add
sbb
or
jle
aam
lahf
dec
popa
ret
pop
test
std
test
jmp
xchg
sub
addr16
dec
or
push
cmp
mov
mov
xchg
dec
es
call
or
mov
push
loop
push
cmp
out
je
rcrl
pop
jmp
int
aad
sahf
push
scas
rorb
pusha
sbb
mov
inc
das
jp
inc
les
clc
xchg
in
fwait
dec
xor
push
lock
sbb
ret
ja
out
sbb
lds
fucomp
jp
mov
test
out
sbb
out
aam
xchg
and
dec
bnd
jnp
into
pop
jbe
mov
xchg
daa
imul
fsubl
popa
clc
dec
rcl
mov
jg
and
and
outsl
sbb
add
mov
ret
lcall
jge
out
icebp
pop
push
cmc
mov
push
sub
or
shrb
negb
mov
xchg
sub
adc
mov
mov
int
or
bound
js
repnz
jno
sbb
xchg
cmpsl
add
jae
jo
popa
adcl
cmpsl
mov
fcmovnb
dec
dec
dec
xchg
push
lea
aam
jbe
add
fs
sub
jecxz
mov
dec
cmp
cltd
mov
and
adc
sti
or
pop
sub
pop
pop
sbb
pop
push
jge
jg
sbb
js
lods
clc
clc
sub
cs
popa
insb
jle
ja
mov
push
popf
pop
cli
xchg
addr16
movsb
jg
cltd
jg
mov
ret
fnstsw
movsb
cltd
inc
xor
enter
sbb
movsl
dec
das
add
lods
shlb
pop
mov
mov
in
xrelease
test
jbe
adc
lds
add
add
sbbb
and
stos
sti
cli
adc
sarl
adc
mov
adc
jge
cmpsl
cmp
push
arpl
sbb
js
loopne
xor
call
sub
xorl
fbstp
ss
minps
mov
add
or
adc
mov
lods
inc
aad
lea
daa
rol
pop
dec
and
dec
cmpsb
outsb
loop
jl
dec
shrl
mov
mov
dec
pop
lock
xchg
dec
pop
adc
inc
jns
push
stos
push
rcl
jmp
cmp
lea
rcll
inc
cmp
add
imul
push
shlb
bnd
pop
pop
cmp
xlat
sub
adc
sbb
pop
adc
mov
bound
lahf
push
mov
push
fstpl
mov
shll
in
arpl
push
mov
cmpsl
jp
pop
data16
loopne
dec
das
in
pop
inc
aam
mov
movsb
inc
dec
cwtl
inc
inc
lret
insb
iret
sbb
pop
dec
and
dec
and
sbb
pushf
jle
xor
ror
jo
push
push
enter
dec
cmp
loop
add
notl
sub
jo
xchg
lcall
dec
iret
xchg
lock
add
xchg
and
mov
shrl
lcall
pop
pop
sahf
insb
sub
and
cld
adcl
shld
fcomps
lret
xlat
add
or
nop
pop
out
cmpsl
sub
mov
xchg
js
cmpsl
mov
imul
addr16
push
mov
sarl
pop
pop
enter
aas
pop
ds
scas
fadd
pop
fcom
je
dec
lds
lret
dec
mov
adcl
pop
xor
and
in
ja
or
call
mov
mov
insl
mov
pop
data16
fsubl
lods
in
fdivrp
test
call
xchg
or
icebp
mov
or
inc
jmp
pusha
test
int3
ret
shrl
mov
pop
mov
dec
out
xchg
inc
int
push
inc
xchg
gs
std
ficompl
jp
aam
rclb
add
dec
repnz
mov
inc
mov
iret
push
stos
test
cmp
test
popf
lcall
inc
mov
cmp
dec
pop
shrl
stos
into
cmp
adc
dec
inc
cmp
daa
jp
pop
clc
popf
aam
test
mov
lcall
push
es
push
rcrl
mov
xchg
inc
push
xor
sar
rorb
lods
mov
lret
lahf
and
mov
xchg
sub
cmp
push
or
stos
rorb
pop
aam
jge
fsubrs
imul
cmp
ljmp
push
or
pop
sahf
lahf
test
sahf
je
addr16
pusha
imul
arpl
dec
iret
loop
leave
cmp
sub
dec
dec
sbb
pop
mov
mov
cmp
add
in
shlb
mov
cmp
subl
inc
and
popf
inc
je
push
xchg
jo
dec
aad
in
push
ret
pop
cltd
movsl
ja
scas
push
leave
mov
push
ss
movsb
push
std
or
push
sub
xor
lods
cmp
test
adc
fs
jo
or
lods
stos
xchg
mov
cmpsb
cmpsb
adc
cld
jae
sbb
loopne
adc
mov
mov
dec
lea
cmp
or
cmpsl
mov
enter
ret
cmc
js
sub
in
fwait
sub
mov
jbe
and
dec
fistpl
imul
popf
repnz
cmpsl
stos
mov
xor
adc
int3
popa
das
insb
inc
dec
xchg
aaa
fwait
das
adc
arpl
mov
stos
adc
mov
lods
jo
js
or
test
daa
or
add
jp
inc
enter
xorb
movsb
mov
cmp
out
gs
ret
sbb
call
test
mov
es
icebp
inc
jo
cmpsb
das
push
jb
dec
jp
cmc
clc
add
iret
pop
les
mov
rclb
pusha
or
inc
fsubs
pop
cmp
xor
xor
fstp
xchg
sub
in
dec
aam
mov
pop
adc
xor
fcomps
test
loop
or
xchg
ljmp
inc
addr16
xchg
inc
xchg
sub
mov
test
push
or
xchg
pmovmskb
sahf
mov
popa
or
popf
xchg
enter
adc
cmp
daa
ja
dec
mov
mov
pop
jmp
fstpl
loopne
scas
mov
fimuls
in
mov
das
sti
jbe
adc
test
pop
and
ljmp
sbb
cmc
fildll
sbb
sub
mov
mov
clc
cmp
jns
inc
mov
aad
sti
sbb
sbb
mov
sub
xor
jle
dec
jecxz
mov
imul
sub
pop
out
xor
clc
rcl
add
push
mov
mov
mov
hlt
test
cltd
cmc
mov
out
pop
negl
dec
push
sub
jno
jbe
xor
xorb
inc
dec
into
inc
in
bound
jnp
mov
mov
lahf
daa
inc
int3
aaa
stc
cmp
pusha
lret
fst
xchg
sub
cmc
mov
outsb
nop
lods
stos
add
push
xor
xchg
sbb
loope
push
adc
sti
mov
mov
enter
add
and
fwait
adc
es
into
xor
mov
or
and
aad
std
pop
in
popa
in
lcall
addb
sti
xchg
pop
call
and
bound
aas
cmpsb
xor
xlat
repnz
inc
adc
out
xchg
push
cmp
jbe
jo
outsb
test
or
idivl
dec
lret
movsl
sti
rol
mov
call
fsubp
cmp
in
pop
in
stos
adc
outsl
cmp
in
xor
mov
rorb
aam
mov
mov
lds
sbb
xlat
xchg
pop
scas
hlt
mov
push
xor
dec
mov
in
adc
es
cmpsb
les
addl
mov
pop
xchg
jmp
sub
pushf
fdivr
es
xor
xor
fdivrl
inc
push
test
pop
adc
jmp
enter
das
inc
andb
ljmp
mov
xchg
xor
cmp
fdiv
cmp
std
sub
fwait
pop
push
outsl
adc
add
stc
inc
pop
mov
pusha
clc
xor
sub
in
es
mov
cmc
clc
mov
loope
xor
fimuls
pop
scas
xchg
or
sbb
mov
mov
fidivs
mov
sbb
dec
in
pop
mov
mov
mov
sub
add
jbe
ret
outsb
sbb
xorl
add
out
push
mov
pop
sbb
cmpsb
pop
mov
pop
int3
jbe
popa
adc
int3
mov
jl
sti
xchg
xor
mov
inc
sti
and
fdivrs
rorb
cmp
mulb
aaa
std
push
insl
inc
loop
xor
inc
cltd
push
cmp
ds
mov
cmp
push
es
add
inc
mov
test
test
and
xchg
fneni(8087
mov
repnz
sub
adc
fcomps
insb
subl
dec
in
jmp
ds
in
sahf
data16
ret
xchg
add
xor
cmp
cmp
sbb
sbb
hlt
pop
dec
cmp
mov
jle
clc
subb
or
pop
mov
mov
shlb
mov
add
rclb
pop
js
mov
ss
test
out
mov
test
test
and
es
lea
jge
ljmp
jnp
xchg
add
mov
adc
mov
inc
mov
mov
jne
adc
xor
mov
xchg
xor
jnp
imul
jmp
fwait
out
push
mov
inc
dec
mov
inc
mov
ja
jecxz
and
xchg
dec
das
movsl
leave
mov
out
ret
aaa
lahf
dec
loopne
inc
xchg
insb
mov
decb
iret
xor
test
mov
xchg
push
in
adc
push
inc
adc
and
aaa
pop
filds
xor
fs
lods
testl
mov
xchg
cmp
jo
adc
xchg
in
into
js
icebp
test
pushf
xor
leave
in
lret
jae
aas
mov
xor
lea
adc
jo
mov
mov
aam
std
lds
dec
cld
push
les
add
ljmp
cmp
cli
push
adc
shl
sbb
iret
jns
pop
pop
gs
pop
cmc
xchg
jp
andb
rolb
jbe
testl
ficompl
clc
mov
cltd
rclb
inc
dec
std
fcmovne
jg
std
lea
sub
int
xor
jecxz
dec
in
pop
jl
call
aaa
mov
pushf
lock
cmp
cmpsb
sti
int
dec
lidtl
sub
movsl
or
push
leave
stos
jle
push
xor
add
roll
mov
cmc
push
cld
cmp
bound
lds
push
fs
mov
mov
xor
into
or
jns
jb
dec
adc
pop
jns
rcrb
xor
push
adc
popf
stc
jbe
push
hlt
sahf
sbb
and
iret
adc
sbb
movsl
pop
popa
sbb
pushf
popf
outsl
aas
sbbl
fcomi
sub
pop
jns
shlb
lock
cltd
jle
mov
test
sbb
iret
pop
call
jge
and
xor
add
lods
push
mov
or
mov
cmpsb
inc
int
pop
iret
testl
xchg
inc
sbb
xchg
sbb
testl
cmp
sahf
push
push
mov
in
in
dec
pop
shrl
mov
mov
or
insb
sarb
lcall
clc
add
and
jge
dec
fs
mov
lods
mov
fldt
add
stos
inc
mov
int3
mov
mov
push
stos
nop
stos
xchg
lods
filds
jmp
fildl
inc
xchg
stos
aaa
mov
test
jae
cltd
jmp
movsl
dec
adc
out
and
push
lods
jns
xor
mov
mov
and
adc
mov
mov
paddw
mov
in
pushl
mov
lock
lret
sbb
int3
push
xor
in
cmp
lahf
das
xor
sub
lcall
mov
outsl
xchg
sbb
mov
movsl
sbb
fsubrs
push
mov
xorb
xchg
bound
sub
push
xchg
addr16
scas
pop
pop
push
fsubrl
inc
adc
das
xchg
add
mov
mov
dec
movsl
pop
mov
mov
mov
loop
jne
gs
daa
adc
mov
mov
and
repz
jae
mov
addl
sbb
pop
fidivrl
fs
imul
je
cmp
or
jae
pop
add
mov
je
pop
cmpsl
push
test
jle
subl
mov
cmp
ja
out
repz
adc
outsb
sbb
out
subb
pop
sub
push
and
inc
dec
and
popa
mov
jb
lods
inc
pop
xchg
mov
jb
add
sub
popa
cmc
out
rorl
push
or
jns
xchg
outsl
adc
es
push
scas
xchg
xor
orl
xchg
dec
pop
mov
shlb
shlb
int
cmp
jmp
sbb
push
mov
xchg
sub
inc
test
gs
mov
addb
sub
push
mov
sti
mov
push
fdivl
pop
mov
pop
scas
movsl
jl
push
jb
outsb
int3
loope
jl
out
xor
mov
add
jbe
test
inc
in
xorl
test
cwtl
mov
push
jp
jb
std
inc
inc
sbb
popf
push
loopne
add
xor
mov
mov
js
daa
mov
cli
cmp
inc
push
sbb
movsb
dec
sub
notl
pop
ret
ja
test
ja
sub
ret
and
sbb
jge
data16
in
cld
das
lret
add
mov
ret
or
push
int
sub
jo
rcrb
sub
mov
divb
jae
adc
jge
cmp
and
in
in
fmul
xchg
out
jmp
test
pop
mov
sub
adc
jb
daa
inc
inc
pop
addr16
mov
xchg
sub
out
mov
jae
push
movsl
in
dec
addr16
inc
bound
stos
stos
jne
cmp
pop
push
lock
cmp
clc
push
mov
push
pushf
pop
push
lock
cmp
or
jne
out
mov
loopne
setae
scas
repnz
push
ret
or
cltd
dec
cmpsb
cmp
in
adc
sti
or
test
dec
lret
je
adc
sub
push
lcall
mov
test
push
cmc
xchg
adc
nop
rolb
and
shlb
idiv
adc
or
sub
scas
sub
ret
scas
incb
fsubrs
sbb
xor
in
stos
test
sub
nop
mov
bound
mov
cmp
jo
and
jmp
and
inc
arpl
lret
mov
decb
push
cmp
xchg
xchg
icebp
sbb
inc
sbb
aas
es
fwait
ss
gs
cld
mov
pop
mov
push
lods
popf
fisttpl
jmp
loopne
or
xchg
sbb
xchg
pusha
aad
cld
iret
or
int3
jg
inc
dec
jmp
enter
shr
mov
xor
or
mov
fnstenv
cltd
cwtl
test
out
cmp
shrb
xor
sub
in
test
dec
and
out
add
and
sub
push
push
imul
cli
mov
mov
dec
mov
jg
sbb
rcrb
movsb
push
pop
insb
jae
aad
xor
xchg
sbb
xchg
movsl
cmp
or
dec
mulb
push
call
hlt
repnz
fisubrl
fisttps
push
idivl
push
xor
icebp
pop
ljmp
push
mov
cmc
adc
repz
fidivrl
sti
sub
outsb
push
lods
dec
in
push
jbe
inc
xor
lods
pop
mov
pusha
push
push
jg
mov
sub
adc
test
inc
lods
pop
movsb
repnz
push
insl
cmp
and
mov
cltd
sbb
fcmovb
jb
sub
int3
popa
adc
js
inc
das
nop
fwait
xchg
mov
mov
pop
jae
xor
pop
fcmovnbe
and
int
ud2
test
jbe
iret
dec
dec
pop
jl
xlat
icebp
and
cs
lcall
lods
bound
fisttpll
xchg
repz
push
into
jnp
inc
gs
push
add
mov
mov
mov
mov
cli
mov
sbb
loop
cmp
sub
and
addr16
cld
xor
inc
loop
sbb
lret
pop
jb
or
mov
das
icebp
push
and
popf
in
jns
je
icebp
pop
ret
mov
mov
lret
popw
mov
push
push
cmc
cmpsb
xor
dec
cmpsl
xor
pop
mov
jecxz
cld
sbb
roll
aam
inc
jno
js
js
call
dec
xchg
sub
in
mov
push
mov
stc
sub
sub
pop
ds
xlat
pop
mov
aad
ret
test
jb
dec
pop
repz
xor
jns
pop
inc
rcrb
data16
sub
push
lods
mov
pop
sub
mov
pop
cmp
cmpsb
pop
stc
fmuls
jecxz
stc
adcb
sbb
adc
mov
cmpsl
mov
cmp
adc
mov
pop
pop
insb
lock
dec
sbb
mov
decb
aad
roll
arpl
xlat
jns
fistpll
cmp
jge
push
insb
addl
fs
adc
jbe
add
dec
sub
adc
test
cwtl
in
and
jbe
andb
clc
std
test
gs
push
jne
xchg
arpl
int
in
sahf
and
outsb
adc
push
call
xchg
mov
inc
fadds
dec
popa
push
push
jg
aas
sub
ret
loopne
in
rol
mov
loopne
sub
push
and
aas
sti
enter
and
hlt
out
adc
decb
in
arpl
stc
push
lods
xor
pushf
into
jnp
imul
lods
mov
cli
adc
cmc
cs
daa
adc
push
xchg
dec
cmpsb
jecxz
cmc
adc
jns
clc
gs
jae
sub
inc
shlb
dec
icebp
in
nop
inc
cmp
add
or
mov
jbe
push
cmp
lret
push
sub
cld
push
leave
jns
cli
jae
cmp
cmpsb
push
jg
stos
push
push
add
push
mov
push
lods
cmp
push
cmpsb
jg
adc
mov
dec
out
popf
hlt
daa
cmp
int3
out
and
mov
popf
jp
dec
call
add
xor
lea
and
pop
hlt
in
mov
dec
jl
jnp
sub
jns
shr
sub
push
jge
sub
and
add
or
xchg
jnp
mov
inc
pop
or
insl
xchg
call
mov
xchg
lods
cmp
sahf
dec
arpl
inc
repnz
jb
or
add
fwait
pop
xor
into
lea
xor
sub
xchg
stos
repnz
sbb
dec
in
test
mov
sbbl
das
fwait
je
inc
sbb
inc
int3
add
jbe
jno
and
dec
inc
dec
inc
cwtl
or
push
push
pusha
fdivp
imul
mov
sahf
nop
imul
repnz
xor
loopne
into
adc
pop
hlt
sbb
jo
pop
mov
lret
sarb
mov
cli
jl
imul
in
ficoms
cli
ljmpw
fistpl
push
adcb
pop
gs
or
jmp
push
cmc
cmc
add
jl
test
sbb
push
mov
popa
mov
pop
xlat
test
cmp
mov
cmp
lcall
or
sub
jnp
fstpt
lods
pop
out
or
arpl
sahf
cmp
repnz
loope
adc
aas
push
jb
repz
test
mov
out
mov
pop
xchg
jno
push
push
addr16
fistpl
mov
pop
sub
mov
jg
sub
movsl
loopne
mulb
inc
sub
ss
xchg
testl
add
test
adc
adc
inc
dec
out
popf
je
pop
loop
dec
icebp
sti
and
ss
xchg
inc
pop
jo
fwait
jbe
lods
ljmp
pop
es
jmp
inc
repnz
dec
pminub
ds
mov
or
ja
in
aaa
pop
out
xor
inc
cmpsl
push
xchg
ljmp
repz
jecxz
mov
inc
out
aaa
xor
outsl
orb
mov
inc
xor
mov
mov
test
jp
dec
and
sub
pop
mov
jle
mov
push
push
pop
imul
imul
lods
add
daa
dec
addr16
push
rcr
and
cmpsb
push
push
enter
mov
das
add
add
shl
test
aas
repnz
in
push
xor
push
inc
out
out
fadd
xor
je
iret
movsl
xchg
lret
mov
cwtl
adc
jle
lods
ds
and
montmul
cmpsb
inc
outsb
out
push
sub
xchg
lock
sbb
xchg
cmpsb
insb
mov
dec
ss
shlb
or
ds
int3
mov
outsl
jnp
sub
filds
adc
mov
fisttps
mov
push
sti
xchg
lods
cli
jno
cmp
mov
push
pop
mov
cwtl
roll
cmp
xlat
mov
in
js
jmp
adc
aas
insl
stc
cwtl
inc
jmp
push
repz
fs
mov
xor
jnp
push
dec
cmp
mov
rolb
dec
sarl
sahf
loope
dec
jb
or
push
jg
loopne
lcall
inc
sahf
sbb
cwtl
xor
push
xchg
pop
addr16
dec
mov
das
push
jne
jne
int3
dec
push
in
cmp
mov
cmp
pop
ljmp
test
mov
inc
cmpl
stos
sub
shll
or
inc
fdivs
or
xchg
sub
dec
imul
push
mov
adc
pop
pop
lahf
xchg
jmp
push
cmpsb
push
mov
mov
xchg
mov
dec
loop
mov
cwtl
mov
push
cmpsl
test
rorl
lahf
mov
adc
cmp
mov
popa
sub
loopne
lock
ljmp
sub
push
rcrl
mov
jno
mov
sub
xlat
mov
pusha
or
sarl
jg
sti
sbb
xor
in
fistl
xchg
dec
mov
sub
pop
and
loope
dec
cmp
fprem
mov
cmp
or
jb
jns
loop
out
movb
dec
add
add
fstpt
les
cmp
sub
test
iret
dec
bound
lcall
hlt
push
lods
mov
ljmp
out
cmp
inc
ljmp
ds
scas
adc
xchg
and
dec
ja
xor
xor
stos
sahf
lods
xchg
scas
imul
fdivrs
stc
mov
sub
push
xchg
cmp
dec
aas
inc
inc
je
fwait
xor
jae
dec
inc
sbb
push
xchg
dec
add
mov
scas
outsl
pushl
cmp
jge
imul
pop
out
jnp
stos
push
xor
xor
ret
pushl
mov
and
outsb
nop
out
sahf
adc
adc
jmp
fcmovu
xchg
rcrl
and
xchg
push
push
decb
neg
mov
push
jecxz
ret
fildl
es
fistl
in
movsl
sahf
cmp
or
cmpsl
push
mov
mov
inc
xchg
sbb
add
sbb
xchg
stc
mov
insl
mov
xor
call
push
rol
addr16
mov
fildll
mov
out
jnp
stc
je
adc
xor
std
and
sti
push
ret
push
adc
jnp
roll
outsl
cli
mov
mov
jbe
mov
pop
roll
push
or
ljmp
je
sub
mov
xor
cmc
mov
in
ficompl
insb
mov
addr16
jne
inc
cmpsl
je
jmp
inc
cmpsl
pusha
add
and
imul
cmp
ret
adc
push
out
cld
push
mov
jbe
movsl
nop
dec
adc
dec
mov
imul
xchg
loopne
ljmp
fcoml
clc
or
pop
push
sbb
movsb
and
push
out
mov
fnstsw
mov
scas
and
mov
push
push
fstl
jecxz
scas
xchg
outsl
xchg
daa
pavgw
enter
or
pop
movsb
out
ds
mov
push
pusha
rorb
out
mull
js
sub
fistps
icebp
sbbl
fwait
shlb
cltd
add
test
adc
or
and
in
mov
pop
jmp
or
sub
mov
repnz
or
cs
int3
addr16
idivb
lret
into
aas
std
pop
push
je
inc
inc
sbb
aad
cmp
test
or
lea
mov
inc
jg
fnstsw
insl
mov
push
lods
add
sti
pop
test
adc
fcoml
xor
es
cmp
popa
mov
in
push
jmp
pop
xchg
cmc
mov
clc
pop
aaa
cmp
inc
fmull
sbbl
add
mov
cli
data16
mov
lds
push
sub
lcall
or
fcoms
aam
sti
dec
pop
frstor
pop
ja
lea
mov
jmp
cmp
cmpsl
cs
pop
mov
ret
push
sub
into
inc
gs
shrl
xchg
ds
mov
mov
jb
push
call
adc
lds
shrl
add
push
push
push
lret
mov
sbb
mov
in
dec
or
push
xchg
sub
add
jnp
repz
or
sbb
daa
int
xor
add
fisubs
push
insb
aam
sbb
and
mov
cld
outsl
add
das
push
and
inc
cld
sti
lahf
pxor
jecxz
shrb
subb
sub
mov
and
mov
subb
dec
sub
or
xor
loope
sbb
pop
loopne
imul
mov
loop
sbb
jle
xor
xlat
sarb
jle
popf
lahf
lahf
jle
add
stos
bound
test
mov
xor
adc
xchg
loope
mov
enter
push
mov
rcr
iret
push
jno
fstl
xor
arpl
test
mov
and
mov
push
repnz
mov
inc
jge
push
fimuls
lahf
outsl
cmp
pushf
and
mov
push
daa
pop
jmp
mov
adcl
fs
test
mov
cli
daa
xor
imul
iret
std
mov
pop
xchg
inc
add
lret
lcall
out
mov
dec
aaa
dec
jmp
shlb
scas
add
push
jb
cli
pusha
mov
or
ss
mov
popf
outsb
out
mov
addr16
cmp
mov
and
lret
xor
into
inc
lock
xchg
out
pushf
js
mov
push
push
or
push
lock
dec
es
or
stos
inc
push
ljmp
fsts
mov
leave
ja
jecxz
mov
sbb
mov
aad
xchg
mov
mov
aaa
add
pushf
pop
fisttpl
cli
shrl
ret
xchg
and
xor
mov
idivb
mov
mov
subl
test
int
insb
cli
inc
fsubs
xor
lds
ret
cmp
xchg
dec
pusha
lret
push
sbb
ret
sbb
in
jo
dec
sub
gs
rorb
imul
scas
sbb
outsl
sub
mov
pop
lret
inc
sahf
cmp
or
mov
xchg
add
cli
pop
popf
sbb
ds
arpl
mov
jno,pn
pusha
pop
leave
loopne
cmp
jmp
cmova
mov
fiadds
and
pop
repz
jno
mov
inc
aad
lcall
aaa
arpl
dec
add
js
cwtl
lcall
outsb
jns
sbb
ds
loopne
add
or
stos
nopl
dec
arpl
fidivl
mov
add
cmp
adc
jl
test
subl
clc
insb
shlb
add
dec
loop
aaa
pop
in
or
xchg
movsb
adc
scas
fcoml
mov
pop
mov
out
hlt
rcr
sbbl
nop
xlat
push
cld
adc
mov
mov
or
dec
jecxz
imul
mov
arpl
icebp
xchg
pusha
mov
call
lret
sub
cmc
inc
sbb
inc
aas
out
mov
out
filds
adc
insb
push
repnz
mov
mov
push
bound
mov
jne
dec
push
sbb
orl
ja
insb
jo
jns
sbbb
mov
inc
imul
loopne
inc
pop
icebp
xor
xchg
mov
mov
pop
lret
shl
dec
insb
es
push
mov
add
clc
xchg
and
mov
les
add
imul
ss
std
and
arpl
sub
ss
pusha
pop
sub
jne
and
cmp
jnp
aam
mov
xchg
jp
call
adc
dec
jmp
mov
xor
dec
popf
sbb
or
mov
movsl
dec
xchg
mov
dec
loope
imul
cmpl
data16
icebp
adc
int
adc
sub
mov
jnp
idivl
xor
add
add
xor
jne
push
jne
xchg
scas
in
repnz
mov
aas
add
test
sahf
test
dec
cmp
test
bound
cmp
push
inc
sahf
add
inc
imul
insb
jge
ret
lods
daa
inc
arpl
mov
lcall
sti
inc
int3
xor
cmp
add
adc
pop
mov
mov
mov
mov
mov
pop
pop
movsb
pop
popa
outsl
push
daa
jb
lret
fstl
mov
sbb
mov
xchg
out
or
sahf
mov
cmp
pushf
dec
insl
fsubrs
mov
andb
jp
ja
push
pop
sbb
mov
xor
clc
push
mov
leave
gs
repz
mov
shll
sub
sub
insl
dec
cli
daa
jnp
es
popf
pop
ret
rcll
or
cld
fs
xchg
sbb
nop
dec
ja
pop
notb
sahf
sub
inc
cmp
in
fidivl
ret
dec
inc
aam
scas
add
push
orb
mov
aaa
or
and
lock
xor
mov
inc
cli
mov
dec
popf
jecxz
shrl
imul
mov
clc
sbb
push
pop
sarb
and
insl
daa
mov
stos
push
xorb
dec
pop
mov
mov
jle
sub
inc
inc
gs
lret
jb
xor
jo
push
pop
xor
popa
arpl
ja
sti
call
mov
test
es
cli
mov
mov
lahf
in
shll
and
ds
jo
adc
dec
test
xor
ret
push
test
jmp
jae
mov
in
pop
mov
test
add
jge
adc
les
pushf
test
ja
inc
cmpsl
fwait
mov
negl
pusha
enter
popf
in
or
popa
leave
jbe
arpl
call
sub
mov
add
scas
push
loop
cmpsb
mov
mov
inc
add
sarb
push
sar
jno
and
pop
sbb
sbb
add
mov
stos
push
mov
xchg
and
ret
loope
dec
xor
push
scas
jp
and
adc
in
pop
xor
inc
jl
cwtl
and
into
jb
cs
or
lock
aas
js
jae
bound
inc
add
or
fs
xchg
mov
push
xlat
jns
cmc
mov
ja
adcl
shl
mov
adc
mov
pop
pop
adc
mov
fbld
jb
adc
push
or
mov
push
ljmp
sub
sbbb
into
cmp
iret
mov
inc
pushf
stos
adc
aad
inc
cltd
dec
bound
pop
iret
inc
and
mov
adc
shl
cmp
pop
notl
xor
jmp
mov
mov
cmpsb
data16
dec
jecxz
ret
daa
mov
pusha
roll
and
addb
push
aad
rol
push
js
jg
loop
push
adc
push
lret
out
test
xchg
and
cwtl
arpl
lret
movsl
xor
fldcw
pop
das
mov
jns
mov
popa
fdivrs
add
imull
jns
cmp
adc
cmpsl
and
dec
mov
push
sbb
fdivs
push
inc
das
shl
push
pop
xlat
jb
cmpsb
aam
mov
mov
imul
or
mov
push
jg
and
push
push
popf
test
out
push
sub
les
imul
pop
mov
outsb
jge
ds
add
mov
pop
in
je
push
sub
xchg
dec
rcrb
xor
lahf
repz
jbe
lret
adc
std
sub
xor
mov
mulb
cli
test
push
fsubrl
sub
ljmp
push
and
into
xchg
inc
inc
xlat
lcall
imul
cld
and
aaa
into
xor
gs
stos
mov
out
ja
sub
fists
adc
leave
stc
jecxz
imul
mov
fidivs
pusha
arpl
or
lea
push
mov
andl
stos
xlat
and
push
push
clc
xor
sub
shlb
repz
aad
scas
ret
lret
das
loop
popa
ds
fisttpll
shrb
pop
pop
fstpt
fstpl
push
sub
lods
xchg
sti
and
aam
xchg
dec
cmp
pop
test
fmul
in
les
mov
popl
lret
call
pop
and
cwtl
inc
add
pop
sub
add
aam
imul
and
popl
scas
mov
aad
and
mov
xor
xchg
jbe
dec
dec
cld
and
dec
push
stc
ror
push
and
mov
cmp
notrack
notl
dec
jecxz
dec
pop
mov
nop
addr16
iret
add
lret
ss
push
adc
push
inc
push
faddl
aad
dec
fiaddl
outsl
jp
jmp
mov
jbe
in
xchg
outsl
jg
or
fmul
cli
push
psubw
aas
test
aaa
mov
xchg
inc
fucomi
cmp
fidivrl
lahf
or
hlt
sbb
out
mov
sbb
enter
push
or
mov
ss
out
sarl
fidivrl
or
add
or
add
push
lea
movsl
or
cmpsl
xor
enter
shlb
clc
xor
fsubs
pop
into
loope
cmp
cmp
in
fwait
jb
jae
adc
std
rcrl
inc
inc
daa
mov
cs
xchg
test
shr
mov
fbstp
insl
pop
sub
cli
fbstp
std
jo
mov
push
ja
je
sub
ret
cmpb
in
out
adc
jnp
add
adc
js
jle
lock
fcomip
xchg
cmp
mov
test
data16
push
push
in
cmpl
jo
dec
or
lahf
ja
sub
stos
rcrl
pop
xlat
es
leave
fs
inc
inc
push
sub
pop
pavgb
sbb
jno
xchg
dec
cmpsb
sbb
jbe
xchg
lret
fs
andl
and
or
cmp
fnstcw
testb
roll
jl
sub
mov
and
inc
adc
lcall
int
sar
adc
gs
jmp
mov
lea
add
clc
cli
push
int
xchg
or
or
jecxz
das
push
loop
push
inc
mov
push
inc
mov
gs
push
cltd
insl
enter
xlat
ljmp
push
sub
outsb
or
aas
hlt
hlt
mov
mov
inc
dec
dec
in
rcl
mov
xor
mov
jnp
jns
bound
test
jnp
adc
mov
push
sub
jo
and
cmp
sub
popa
scas
out
aaa
jb
movsl
mov
stc
lods
lea
push
jp
loop
push
orb
jb
loope
dec
or
std
pop
fiadds
push
mov
pop
fsubrs
fwait
popa
cld
and
dec
pop
xor
or
mov
sbb
xchg
in
jge
push
adc
jecxz
lea
mov
sti
aaa
jbe
shlb
add
std
push
rorl
imul
xchg
fmull
imul
fstp
sbb
subb
or
mov
xchg
dec
sbb
push
fsubl
int
push
and
mov
inc
push
jg
pusha
mov
cmpsb
push
sub
mov
data16
stc
daa
push
cmp
imul
jno
and
ficomps
jno
cmp
into
loop
pop
xchg
cs
jmp
jae
icebp
pop
test
dec
adc
repz
mov
add
scas
sbb
mov
shlb
adc
xchg
mov
imul
scas
aas
cld
les
insl
mov
ror
xor
in
stos
pop
cmpsb
cmp
divb
lret
inc
pop
loopne
adc
addb
cmc
jb
imul
and
data16
push
test
test
or
adc
dec
das
aas
cmc
mov
jb
int
push
test
sbbb
enter
repz
in
inc
loop
push
stos
xor
out
out
add
or
adc
lret
cmp
sbb
inc
fstp
mov
inc
or
gs
sub
jp
frstor
push
std
das
push
outsl
pop
jb
jge
int
jecxz
fistpll
rolb
popa
aad
stc
nop
pusha
repnz
lret
mov
int
test
test
mov
shrl
push
or
ret
cltd
pusha
cmp
je
shlb
aam
jle
xchg
pop
into
adcl
sbb
incl
xlat
jp
xchg
dec
or
push
outsb
fidivl
rcrl
ds
push
decl
hlt
fldl
cld
jne
bound
insl
ljmp
or
mov
popf
pusha
cmp
and
add
push
lea
add
xchg
pop
lock
in
dec
insl
push
pop
xchg
mov
jl
test
lret
add
out
in
enter
fmul
data16
arpl
fstl
movsl
inc
xchg
lods
ret
cli
fnsave
sbbl
pop
arpl
sub
add
xor
mov
push
inc
je
fbld
jp
call
stos
sub
lds
dec
hlt
mov
popf
out
les
pop
stos
int3
jecxz
js
loop
sbb
popf
popa
in
lret
xor
sub
icebp
adc
dec
add
fwait
popf
push
push
sub
ret
mov
sub
imul
shl
adc
movsl
hlt
push
inc
fwait
dec
dec
shrb
rclb
xsaveopt
loopne
bound
sbb
jns
xchg
push
xchg
push
inc
xchg
dec
ss
mov
sbb
icebp
cmp
pop
and
dec
push
and
push
in
sbb
shrb
stos
push
mov
lock
mov
add
ss
jb
fadd
dec
push
cli
push
test
and
imul
sti
inc
cli
xchg
cwtl
cwtl
cwtl
pop
lret
mov
shlb
fidivrs
pop
adc
push
insb
pushf
repnz
push
icebp
fsubrs
mov
int
mov
int
add
pop
inc
or
icebp
repnz
inc
inc
push
sbb
push
fdivrs
popa
jle
mov
push
mov
pop
adc
das
jbe
out
push
inc
lret
fbld
test
stos
adc
xchg
data16
mov
jb
sbb
mov
jo
fsubs
jne
add
jecxz
add
lods
inc
push
es
xlat
push
call
jmp
repz
or
cld
lcall
jbe
sub
dec
inc
fstl
mov
fs
bound
mov
inc
push
popa
add
inc
fisttpll
int3
jg
loope
sti
adc
dec
bound
dec
int
inc
xchg
mull
xchg
fwait
xor
push
and
pop
cltd
mov
lahf
mov
fstpl
out
xchg
dec
and
sbb
test
cmp
lret
mov
loope
lds
push
test
outsl
lret
xchg
mov
push
push
shrl
dec
jecxz
cmpl
inc
xor
movl
mov
mulb
sub
in
out
cmc
xor
xchg
out
mov
loopne
test
inc
cmp
inc
aad
dec
inc
out
clc
push
xchg
lret
je
push
pop
mov
stos
jge,pt
out
aas
data16
push
sbb
mov
sbb
sbb
ds
je
idivb
inc
adc
jbe
jbe
push
inc
or
or
dec
jecxz
or
test
ficomps
ja
xchg
xor
push
clc
xchg
int3
mov
cli
rclb
or
es
push
fisubl
push
movsb
dec
gs
addr16
add
shll
call
mov
xor
ror
repz
xor
sub
mov
jecxz
cmp
adc
lea
dec
sub
dec
testb
jp
jecxz
adc
lcall
sbb
sbb
ret
cmpsb
lods
jg
mov
loop
popa
repnz
jae
or
fmull
in
fsubr
adc
push
inc
in
mov
lcall
xor
xchg
out
inc
dec
adc
xchg
mov
movsl
pop
cs
pop
xchg
sub
dec
iret
sbb
or
lods
xchg
loop
cli
cmp
mov
dec
sti
push
int3
xor
xchg
scas
pop
cmp
out
repnz
into
dec
ss
fwait
jle
inc
hlt
push
cld
jl
sub
into
xlat
pop
arpl
es
push
pop
cltd
test
adc
in
cs
push
ljmp
insb
push
daa
add
nop
cltd
dec
mov
lret
add
enter
stos
xor
adc
in
pushf
mov
ret
add
add
push
inc
clc
lock
or
cmp
add
int
iret
dec
loope
fmul
daa
mov
icebp
cmp
shrb
mov
mov
jle
inc
mov
loope
xor
sub
jge
push
stos
lds
xor
jl
sub
popf
in
pusha
sbb
hlt
pop
adc
xchg
test
sbb
ret
xor
and
ljmp
mov
or
adc
test
int
fwait
mov
iret
into
mov
add
shlb
mov
sbb
xor
cmpb
shrb
stc
ret
add
or
adc
jg
mov
lock
js
push
stos
fidivl
adc
mov
lret
sub
fcoms
pop
jge
scas
cs
sbb
loop
xchg
pop
dec
scas
fcomi
adc
je
inc
xor
sub
dec
lret
jae
das
ja
test
jb
sahf
insl
xor
ret
jl
es
push
loopne
mov
and
add
or
in
xor
xor
or
mov
sahf
les
sub
test
rorb
shl
pop
and
and
cmp
and
mov
insb
out
xor
repnz
loop
bound
cmp
insl
cmc
inc
insl
movsb
test
push
lods
cmp
movsb
xor
nop
and
push
fcmovne
test
dec
dec
push
push
pusha
test
je
dec
push
push
dec
lahf
jae
in
xchg
pop
daa
push
shll
lock
mov
xchg
or
xchg
push
negb
pop
popa
daa
inc
fwait
push
mov
mov
cmp
leave
jle
xor
add
jle
fadds
or
add
movsl
add
es
push
mov
inc
xor
movsb
dec
push
mov
xor
sub
push
cld
hlt
stos
loop
add
jl
pop
sub
dec
jp
out
stos
jge
xchg
xlat
xlat
push
popf
xor
dec
out
test
xchg
mov
movsl
mov
cmp
or
hlt
pop
mov
mov
xchg
insl
jl
cli
push
sub
push
ret
imul
outsb
or
cmp
cmp
popf
enter
ss
sbb
fiadds
scas
ficoml
sub
inc
fdivrs
mov
pop
push
push
mov
fildll
push
inc
pop
mov
dec
mov
ret
bnd
add
int3
sbb
scas
mov
inc
arpl
popa
xlat
mov
xor
or
sbb
push
xchg
xchg
sub
js
dec
daa
mov
lcall
and
test
ja
mov
incb
popf
mov
jl
xorl
fcoms
jns
inc
stc
sub
mov
inc
xchg
cmp
mov
test
fisttps
mov
std
pop
insl
shlb
sbb
dec
fisttps
hlt
mov
mov
imul
movsl
sbb
mov
ss
outsb
jge
lahf
ljmp
pop
test
nop
shrb
mov
nop
dec
add
xlat
jl
les
sbbb
fldpi
push
outsl
add
cmp
mov
and
dec
es
jge
outsb
aad
jnp
nop
xchg
aam
jmp
add
mov
push
cmpsb
stos
jge
out
int3
dec
in
dec
adc
add
cmp
and
repnz
ds
adc
pop
xor
add
push
xor
mov
in
and
cs
loop
popa
int
fstl
rorb
fcompl
or
sbb
imul
lea
test
jmp
sbb
cmp
sbb
ret
pop
jmp
sbb
dec
jo
in
pushf
movsl
xchg
shlb
and
cld
xor
bound
cmpsb
in
addr16
push
icebp
jne
push
sub
test
out
mov
mov
cmp
stos
cli
xchg
loope
jb
xor
xchg
pop
scas
push
cwtl
stos
or
xchg
cs
mov
mov
cli
loope
addr16
sbb
mov
cmp
sub
push
add
fs
sbb
xor
shl
aad
jecxz
push
fsubrl
cmp
or
sbb
popa
scas
mov
movl
out
dec
in
dec
lcall
dec
push
stos
imul
cmc
lods
mov
leave
pop
adc
xor
dec
sahf
icebp
and
in
lret
xor
push
stos
push
in
push
ja
add
in
mov
mov
inc
xlat
xchg
cmc
pop
aaa
daa
pop
lahf
or
popf
outsb
cltd
push
pop
xor
shll
push
mov
sub
push
pop
clc
lea
aam
fldenv
push
lods
push
decb
pop
xchg
sub
fxch
clc
pop
sub
fcoms
cli
mov
add
pop
mov
jle
sub
dec
adc
aaa
jae
imul
call
sbb
popf
xor
lret
push
insl
divb
cmp
dec
pop
das
fdivl
jle
jns
push
js
inc
in
lea
mov
pop
fstpl
dec
adc
repz
mov
pop
inc
add
cmpsb
ljmp
pushf
fwait
dec
loop
inc
aas
mov
push
push
ret
sbb
in
jns
cmp
cwtl
ds
cmp
aam
pop
out
sarl
fidivs
push
lea
in
out
lret
cmp
or
or
jecxz
popf
lahf
std
mov
inc
loopne
adc
imul
push
pop
or
mov
popa
jnp
clc
jo
xchg
loope
xchg
jbe
jmp
sbb
xchg
lods
inc
jmp
push
jb
pop
mov
mov
fstl
adc
sahf
imul
or
out
cmp
repnz
aad
pop
orb
xor
sub
or
xchg
inc
pop
lret
pop
mov
push
adc
mov
sbbb
dec
mov
popf
imul
and
push
out
ja
adc
test
mov
inc
and
push
lods
daa
push
dec
scas
testb
push
sub
mov
dec
xchg
sbb
xchg
popa
mov
rcr
mov
dec
inc
xlat
insb
cmp
add
sub
enter
fwait
sub
aas
movsb
mov
push
sahf
repnz
jae
mov
adc
sahf
dec
cmc
dec
mov
xchg
push
icebp
adc
mov
xchg
lods
adc
and
mov
inc
adc
xor
push
lods
xchg
nop
fistps
insb
in
mov
jb
repz
out
xchg
jnp
push
and
push
mov
shll
pop
or
cmpsl
aaa
lret
cs
adc
ret
pop
int
enter
mov
in
mov
inc
repnz
in
aam
vmresume
mov
jne
cmpsl
loop
rcl
call
cmpsl
into
mov
add
dec
sub
pop
mov
ret
ljmp
jge
mov
jmp
cmp
push
in
test
lea
fwait
jb
add
daa
fsubrl
fs
cs
out
test
orl
aam
cmpsb
sbb
jp
ret
rcrb
gs
adc
jno
mov
jnp
shlb
push
jbe
imul
xchg
jbe
cs
xchg
loope
fbstp
call
mov
ja
aaa
insl
xchg
pop
in
fnstsw
dec
pop
insl
jp
sub
mov
scas
call
scas
cmc
inc
fwait
daa
lss
loop
out
cmp
leave
test
and
pop
sar
in
mov
imul
jae
add
std
and
adcl
and
mov
sub
int3
jecxz
push
imul
or
jae
mov
shrb
test
inc
fldenv
dec
loope
cwtl
adc
out
mov
je
inc
cli
add
cs
test
or
and
or
nop
cmc
cltd
and
pop
xor
xchg
cmp
pop
add
clc
pusha
sub
in
jne
nop
lock
int
mov
cs
fwait
pusha
sti
sub
out
sbb
nop
pop
aam
adc
notb
scas
jno
gs
aam
mov
sub
push
sbb
push
mov
xchg
loopne
dec
push
add
inc
pop
dec
mov
cmp
dec
iret
and
lret
push
mov
ret
xchg
cs
push
sub
mov
jne
adc
mov
mov
mov
sub
inc
pop
mov
out
sbb
mov
cmp
test
clc
adc
stos
aaa
fwait
loopne
dec
in
cmpsl
loop
xchg
pusha
inc
fldenv
dec
adc
les
fcmovnb
les
ja
pop
and
adc
xchg
xor
or
cmp
mov
xchg
cmpl
lret
pop
sub
push
clc
into
nop
push
arpl
jmp
cmp
mov
xor
push
push
cwtl
or
push
push
mov
pop
lods
cmp
xchg
incb
pusha
fisubs
push
lods
std
rcll
inc
fabs
mov
pusha
js
out
adc
daa
pop
icebp
or
shrb
rclb
inc
xor
shlb
jbe
fnstcw
pop
outsl
imul
fdivr
loope
dec
pushw
int3
insb
cltd
adc
popl
pushf
xor
mov
inc
inc
addr16
arpl
jb
mov
cmpsb
xchg
test
pop
adc
movsb
lds
pushf
cmp
fbld
pop
push
mov
add
int
in
aaa
rcll
mov
jno
sub
inc
fstps
mov
outsl
ss
mov
stos
repz
mov
cltd
andb
cld
gs
push
jmp
sarl
inc
das
xlat
fsubr
loop
mov
aam
adc
popa
in
pushf
imul
pushf
pop
aad
jae
xlat
sub
jp
cld
gs
lcall
mov
mov
sbb
xchg
add
mov
mov
mov
loop
lds
inc
scas
inc
mov
movsl
adc
lods
ss
test
adc
xor
in
jmp
out
dec
pop
call
mov
cmp
shl
loopne
or
lea
jne
and
inc
jns
nop
stos
loopne
stos
ss
and
xor
adc
pop
push
mov
fs
cmp
inc
mov
jle
add
sbb
cmp
xor
inc
fdivrp
lret
insl
scas
call
mov
sbb
push
cmp
arpl
sbb
daa
jecxz
sahf
pop
inc
fdivrp
inc
adc
jbe
sbb
jp
adc
and
mov
iret
dec
cmpsb
mov
enter
jl
nop
mov
pop
mull
popa
xor
adc
mov
loop
mov
unpckhps
insl
clc
lahf
mov
cld
inc
and
mov
in
lcall
outsb
negb
into
mov
int
or
cwtl
test
xchg
push
lods
xor
int3
push
sbb
xor
lods
mov
aam
fcomip
popa
adc
xor
mov
test
dec
or
icebp
adc
into
in
out
jecxz
jbe
ret
into
subl
das
ja
xlat
dec
imul
jae
push
mov
popa
xor
jge
out
in
shlb
inc
add
push
mov
push
xlat
dec
lock
sbb
sub
addr16
xor
cltd
aaa
bound
js
je
jno
add
inc
dec
mov
xor
xor
rcrb
orl
xlat
add
dec
adc
in
fsubrl
cmp
aad
and
stos
subb
es
fsub
lcall
cs
outsl
fstps
imul
sbb
mov
sub
imul
imul
lock
out
daa
repz
aad
xlat
rcll
imull
mov
xchg
xor
addb
xchg
or
jnp
push
test
mov
jmp
jo
sbb
xchg
sbb
adc
cmp
jge
stos
in
cmc
pop
test
repnz
imul
or
ret
dec
movsb
fldenv
repz
jmp
inc
mov
or
adc
stos
inc
inc
int
jg
repnz
mov
or
adc
outsl
gs
cwtl
mov
pop
xor
and
xor
mov
in
dec
fs
repnz
adc
or
imul
sub
stos
repz
jg
mov
mov
mov
outsl
imul
loopne
popa
popf
out
mov
lods
push
adc
ret
xor
scas
loope
mov
pushf
mov
mov
cmpsb
inc
bound
test
jge
and
and
xchg
shll
call
lds
dec
cmp
ficomps
lret
push
loop
adc
imul
jno
or
rorl
sahf
sub
out
cltd
xor
and
enter
in
and
insl
sahf
sti
xchg
xor
adc
mov
aaa
call
jp
hlt
insl
and
lock
xchg
adc
mov
push
inc
sbb
mov
inc
out
fcomps
jbe
sbb
movsb
and
or
inc
hlt
mov
mov
cltd
push
mov
insl
mov
ljmp
adc
stos
push
repz
cmp
je
sbb
cmp
mov
and
frstor
xchg
push
stc
pop
mov
add
mov
movsl
push
pop
fadds
test
inc
stc
test
jbe
std
test
hlt
imul
push
sub
lret
fidivs
shrl
bound
lock
jmp
cmp
into
push
push
popf
xchg
pushf
jo
gs
rcrb
lcall
fildll
mov
insb
mull
cltd
sbb
inc
fucomip
jle
out
ret
pop
faddl
fsubr
xor
loopne
dec
add
sbbl
mov
ficomps
lret
cld
add
and
mov
adc
daa
stos
push
or
pop
into
cmp
dec
out
pop
ljmp
cmc
cmp
outsb
xor
out
orl
sbb
sbb
gs
cltd
ror
mov
xlat
cs
pop
cld
jecxz
mov
test
jb
lahf
pop
shlb
add
xchg
loope
test
dec
pop
cltd
insl
sub
arpl
and
add
xchg
inc
aas
lret
in
lcall
cmp
negb
lret
jae
dec
mov
xchg
add
add
push
sbb
and
pop
loope
loopne
or
pop
sub
pop
lret
push
mov
add
mov
mov
ljmp
or
fs
sub
fidivrl
ds
imul
mov
jl
pop
sub
cmp
jbe
out
ret
lock
cmp
pop
pop
scas
lea
stos
rcrb
add
sbb
lret
push
add
enter
shlb
xor
push
xor
add
aad
leave
out
mov
and
lea
mov
add
mov
pushf
out
sbbb
mov
sbb
xchg
je
adc
push
dec
or
adc
pop
mov
dec
popa
mov
jecxz
sarl
sbb
lret
fmul
dec
jl
cmp
lock
loop
test
movsb
cmp
imul
outsb
adc
or
jbe
push
sub
mov
call
mulb
jae
dec
dec
stos
jmp
es
orl
cmpsl
out
or
add
push
data16
pop
pop
je
mov
pusha
push
cs
adc
jmp
dec
ret
iret
inc
mov
std
mov
cwtl
adcl
or
dec
into
scas
add
jno
sub
or
add
lods
inc
rolb
repnz
mov
test
popa
out
sarl
mov
pop
out
xor
aad
mov
pushf
and
and
push
shrb
pop
mov
dec
lret
push
testb
fstl
test
or
ret
jp
xor
sbb
jbe
push
or
leave
mov
cmp
cmp
pop
mov
clc
js
nop
ss
aad
xlat
pop
pop
adc
pop
outsl
mov
inc
ds
add
dec
push
fidivs
dec
ljmp
and
mov
in
mov
pop
ret
sbb
mov
sarb
stos
cmp
sbb
fbld
mov
mov
int
sub
ds
add
push
cmp
mov
pop
lea
out
ret
xor
jmp
imul
sbb
dec
les
cmp
inc
xchg
mov
dec
inc
push
xchg
in
xchg
jo
out
je
push
out
xchg
outsl
cmc
and
outsl
pop
and
adc
pop
mov
cs
cmpsl
cwtl
hlt
testb
jae
inc
movsl
dec
adc
cmc
imul
orb
mov
shl
repnz
les
pop
rcrl
in
into
pop
jbe
sarb
adc
mov
push
lock
sbb
inc
rcrl
jns
jne
pop
mov
xor
inc
pop
jle
scas
sarl
lods
fsts
lods
arpl
mov
mov
repnz
mov
loop
push
or
cwtl
sub
arpl
inc
lock
and
and
pop
inc
sbb
mov
lea
xor
jmp
add
xor
push
mov
shll
pop
push
jbe
shl
add
sub
mov
dec
pop
je
popf
shl
daa
adc
faddl
loope
loop
pop
add
inc
negb
inc
adc
cmpsb
das
cmp
loopne
je
and
ds
dec
cs
sti
and
in
fwait
lods
jnp
push
and
js
enter
aas
or
jmp
or
ret
arpl
test
stos
out
or
lret
data16
sahf
and
js
jnp
es
lods
adc
sub
adc
or
lea
or
sbb
nop
imul
cmp
xchg
xchg
or
cmp
mov
subl
add
pop
xchg
out
inc
stc
fcomps
movsl
sub
pusha
js
les
repnz
sbb
stc
ret
sarb
push
outsb
pop
ret
and
mov
popa
nop
popf
or
push
stc
nop
cmp
mov
nop
add
cld
cmp
addl
mov
fdivrs
sbb
sbb
mov
aam
xor
jp
stos
pop
bound
test
fildl
pop
and
imul
test
int3
xor
jb
cmpsb
push
mov
faddp
rcll
add
xchg
sbbb
lcall
mov
rolb
outsb
mov
cmp
push
dec
repnz
sub
fs
or
jnp
std
cltd
sti
mov
test
and
lret
mov
fbld
mov
ud0
nop
push
jb
jbe
mov
sbb
or
imul
clc
jae
int3
aaa
sub
xchg
ds
push
loope
dec
push
add
and
xor
or
notl
cs
inc
add
xchg
sub
hlt
arpl
enter
fwait
stc
cld
mov
movsb
cmpsl
sbb
fadd
in
mov
dec
sbb
inc
or
fists
mov
sbbb
or
adc
std
pop
xchg
std
data16
mov
insl
sbb
jmp
cmp
jbe
xchg
mov
and
addr16
icebp
mov
xchg
popa
pop
mov
mov
inc
and
mov
jb
iret
cmp
xchg
lahf
sarb
mov
pop
negb
dec
sbbl
aas
idivb
mov
and
sub
inc
or
int3
inc
pop
xor
add
sbb
mov
xchg
fs
loope
add
sbb
gs
and
andl
and
pop
cmp
push
sub
push
aas
imul
ret
decl
dec
comiss
mov
out
mov
lahf
sbb
cwtl
das
rcrl
dec
xor
sahf
sbb
pop
icebp
cmp
jno
mov
jne
cltd
inc
mov
jno
stc
movsb
push
pop
sub
sbb
jne
outsb
outsl
push
imul
scas
roll
jg
pop
sbb
mov
fcomip
and
aaa
dec
pop
subl
xchg
mov
fistpl
inc
loop
rcrl
rclb
push
mov
sbb
xchg
sbb
adc
out
testb
int3
xchg
movsl
xchg
enter
dec
adc
adc
mov
xor
mov
lret
xchg
push
scas
mov
xor
movsb
fwait
mov
push
jge
inc
cmpsb
pusha
mov
shll
mov
xorl
loopne
shlb
rcll
mov
ss
int3
sub
pusha
sahf
push
jb
dec
call
xchg
sub
loopne
cmc
loop
fwait
jb
lret
test
stc
cmpsb
mov
ja
orb
ja
mov
test
sub
or
stos
sbb
jle
mov
push
repnz
orb
gs
ja
int3
sub
mov
xchg
mov
push
and
ror
or
fldt
negl
jns
bound
fldenv
imul
imul
jnp
xchg
pop
sub
je
inc
jecxz
stos
xchg
adc
movsl
cmp
fadds
lea
fcomip
loop
inc
fcompl
jmp
adc
cmp
push
mov
jle
mov
cltd
scas
or
xchg
cli
test
int3
lea
mov
dec
mov
push
jne
aaa
out
adc
std
or
mov
jns
or
inc
nop
arpl
sahf
lods
addr16
mov
movsb
or
ficoml
push
je
cld
in
clc
fnstsw
xor
push
aas
insl
stc
xor
push
sub
into
out
and
xor
shll
pushf
xor
lret
and
fucomp
dec
pop
scas
repnz
loopne
lcall
daa
loopne
pusha
sub
mov
jl
js
cld
add
mov
clc
jmp
xor
pop
movsb
jnp
push
scas
xchg
imul
sbb
and
sub
shlb
or
xchg
mov
jge
cmp
add
and
mov
push
movsl
ret
test
cmp
mov
cmp
xchg
jno
cwtl
pop
arpl
cs
mov
push
mov
aad
idivb
lcall
push
cmc
imul
sbb
and
jge
jne
mov
jns
mov
sbb
nop
sub
pop
inc
xor
sub
mov
cld
mov
int3
mov
fsubr
rol
mov
mov
jmp
mov
sbb
inc
cmpsl
repz
mov
adc
jmp
and
dec
cwtl
and
out
add
xchg
ja
imul
stos
pop
adc
lea
aam
adc
dec
pop
jmp
sub
in
orl
ja
xor
cli
cltd
into
xor
mov
inc
lahf
push
repnz
adc
xchg
mov
sbb
add
jge
add
outsb
loope
mov
xor
scas
inc
fcomps
cld
popa
fsubr
mov
and
dec
stos
das
add
xor
hlt
or
mov
mov
xchg
mov
outsl
push
loope
nop
adc
mov
imulb
sub
fisubl
flds
add
push
fisubrs
movsl
mov
outsb
add
adc
fdivrl
mov
mov
mov
fbstp
xchg
add
jmp
mov
iret
iret
xor
add
sbb
mov
pop
je
push
inc
cltd
sub
or
pusha
gs
in
sti
mov
adc
sbb
ret
xor
mov
fninit
cmp
rorl
psrlq
add
insl
std
sbb
push
or
stos
adc
inc
inc
and
and
pop
pop
jp
jg
cmp
ret
cmpl
add
and
sub
cmp
inc
cltd
or
gs
sub
jge
sub
rcl
hlt
mov
out
in
fiadds
and
mov
dec
and
dec
pop
aad
sub
rclb
mov
push
addr16
cmc
dec
outsb
push
movsb
pop
push
sti
cmc
mov
cmp
in
jg
repz
mov
push
mov
jle
nop
aad
loop
add
cmp
inc
out
rorl
enter
in
mov
sbb
hlt
push
movsl
dec
insb
rcr
xchg
movl
cmp
adc
jmp
mov
and
rcrb
arpl
jmp
ss
leave
mov
sahf
mov
pop
jae
pop
dec
lds
hlt
pop
repnz
ss
fidivl
ljmp
dec
out
into
adc
adcb
clc
jo
or
xchg
cmc
js
stos
push
lds
sbb
sarb
mov
mov
mov
aad
push
dec
dec
faddl
push
mov
mov
sbb
jbe
sbb
shll
jb
push
pop
mov
ret
ret
sti
insl
add
sbb
lret
sub
subb
push
jecxz
sbb
aad
sub
js
add
je
push
mov
sbb
out
inc
lahf
adc
mov
gs
pop
xor
jp
sti
mov
in
loop
addr16
mov
loope
sbb
popa
lret
rolb
lea
mov
es
iret
js
mov
bound
cmp
push
inc
inc
jecxz
or
xlat
in
push
cmp
jge
dec
in
out
push
test
or
shr
adc
fcmovnb
dec
mov
jae
outsl
dec
xchg
add
andb
mov
or
xor
aaa
hlt
push
scas
je
sub
cmc
add
xchg
or
insb
mov
loope
push
add
jle
xchg
or
inc
jnp
mov
cmp
pushf
out
test
stos
leave
movsb
pop
sbb
jge
das
or
testl
nop
mov
std
pop
fdivl
pop
ja
xchg
in
inc
mov
pop
lret
mov
fs
fsubr
dec
mov
leave
mov
sub
loop
sahf
adc
jmp
aam
out
xchg
ret
fstpl
add
sub
outsl
jae
std
or
jb
dec
dec
push
xchg
aas
iret
pop
iret
push
test
lret
xlat
sub
mov
mov
int
stos
test
and
inc
fisubl
and
test
cmp
xchg
outsl
nop
sub
rcr
fsubl
int
sti
cmp
insb
add
pop
add
mov
divb
mov
sbb
jo
out
pop
enterw
add
xor
push
xor
jb
int3
xor
js
xchg
jnp
fbstp
pop
cmpsl
sub
push
cmpsl
ret
cmp
jae
in
loope
hlt
push
int3
iret
jno
and
lock
jae
out
dec
arpl
sub
pop
inc
test
bswap
fdivs
jg
out
mov
outsl
push
cmp
jge
sti
pop
or
lock
ret
mov
mov
loop
dec
sbb
sub
or
cmp
xchg
push
iret
daa
je
jb
ss
into
jno
cltd
inc
pop
enter
push
jmp
jno
repnz
fwait
sub
popa
clc
enter
jo
jg
int
push
ffreep
mov
fistl
clc
cltd
pop
imul
mov
repnz
gs
in
cmp
dec
cli
adc
xchg
sub
sahf
fimull
shll
je
enter
test
cmpb
aaa
popa
in
push
sahf
cmp
je
insb
popa
test
cs
cmpsl
leave
out
sbb
or
scas
pop
imul
jg
fiaddl
rol
inc
iret
fldl2t
sbb
cmp
pop
inc
inc
stos
sbb
cmpsl
das
icebp
or
add
repz
fnstcw
cmpsb
dec
mov
ror
pop
mov
mov
add
cmp
pop
je
pop
cmp
add
xchg
add
subb
test
andl
and
sti
push
sub
push
stos
xchg
or
xor
pop
sti
ljmp
mov
jmp
sub
sub
fwait
sbbb
jbe
fsubrl
lret
jecxz
leave
clc
je
pop
pop
int3
fmuls
into
sbb
sbb
jle
pop
or
add
jnp
xor
pop
hlt
rolb
fsubs
jge
or
xchg
jmp
sbb
cmp
mov
je
rorb
popf
ja
or
xor
test
cmp
pop
jb
data16
jecxz
ss
or
loope
arpl
dec
pop
dec
push
xchg
push
cmp
cmpb
xchg
push
aas
inc
dec
pop
adc
jmp
xchg
jmp
sahf
push
ds
pop
jnp
repnz
pop
das
cmp
push
imul
sbb
mov
inc
insl
add
mov
notl
push
mov
shrl
in
movl
mov
xor
push
loope
inc
mov
fisttpll
pop
xlat
ljmp
mov
dec
dec
pop
out
loope
add
cmpl
push
dec
adc
mov
push
cmc
mov
mov
pop
out
lock
dec
cmp
mov
addr16
cmp
cwtl
and
scas
call
je
jg
hlt
cmp
jmp
push
mov
mov
mov
dec
dec
xchg
add
imul
popa
imul
jb
jne
adcl
clc
popf
fidivrl
mov
daa
jno
lods
incb
jo
sbb
mov
in
std
jno
push
jmp
and
xor
dec
out
imul
outsl
add
add
dec
mov
sbbl
add
jp
push
mov
cmp
out
cld
jg
xchg
xor
test
or
cwtl
repz
sub
xchg
arpl
cwtl
push
icebp
testb
mov
jno
test
popf
es
mov
jne
shll
filds
sub
rcr
mov
push
sbb
and
mov
daa
out
add
jp
pop
dec
xlat
jg
gs
and
ljmp
push
jo
push
push
mov
dec
movsb
iret
lods
dec
xlat
subb
outsl
pushf
arpl
sbb
lsl
into
test
adc
imul
int
sbb
enter
stc
push
call
fcompl
xlat
mov
fs
lret
rol
push
sbb
xor
into
gs
lods
popa
js
in
std
and
sbb
push
add
xchg
ret
cmc
inc
xor
addr16
cmpsb
mov
mull
add
test
adc
xlat
xchg
decl
mov
mov
mov
cli
add
sarl
xor
mov
xchg
out
mov
push
call
or
cld
xchg
ljmp
je
xchg
adc
sub
inc
pop
loopne
mov
aam
push
fdivrl
mov
mov
je
sub
nop
xchg
js
push
mov
mov
xchg
xchg
or
dec
push
add
or
mov
nop
push
and
add
adc
xchg
lds
popf
shlb
mov
ficomps
sahf
bound
xorb
enter
mov
mov
mov
jbe
push
mov
inc
lcall
ds
or
mov
test
sub
add
xorb
sbb
clc
xchg
mov
cmp
sarb
fs
xor
push
cmp
cmpsb
ljmp
addr16
fbstp
loop
cmpsl
cmp
decb
out
outsl
leave
dec
loope
xor
test
cmpb
sub
jmp
inc
or
mov
sub
stos
lods
and
cmpsb
inc
fidivl
pop
adc
clc
lahf
test
stos
and
test
test
or
cmpsb
gs
imul
add
gs
shl
and
mov
bound
mov
notl
push
test
dec
dec
xchg
jl
into
cltd
push
adc
les
push
leave
pusha
xorl
cs
cmp
pop
pop
mov
mov
cmp
lods
sarb
mov
xchg
in
fucomi
inc
inc
outsl
nop
sub
aas
outsb
push
dec
pop
jg
sbb
into
xor
fadds
or
jne
jno
sub
notl
out
lret
in
aad
in
mov
push
mov
sbb
call
ret
add
mov
popf
popa
cs
inc
mov
jle
imul
inc
loop
jne
imul
insl
add
popa
incl
mov
cmp
add
xchg
mov
xorb
notl
aaa
scas
fs
insl
nop
jns
xor
cltd
inc
push
inc
jb
dec
cmp
pop
push
imul
adc
loope
mov
outsb
sbb
das
je
inc
push
inc
push
pop
mov
insl
mov
sbb
scas
add
dec
fisttps
cli
rclb
lods
inc
sbb
inc
leave
fs
jnp
insl
fs
lods
leave
dec
bound
movsb
dec
outsl
ljmp
push
pop
xchg
bound
dec
mov
movsl
jmp
je
movsl
adc
mov
lods
lds
xchg
psadbw
icebp
add
adc
cmp
xor
iret
out
inc
mov
les
testb
xor
sti
dec
aaa
cmp
push
sub
pop
push
mov
xlat
stos
inc
inc
pop
sbb
aas
in
int3
pop
lret
mov
jns
addb
cs
repnz
pop
js
adc
fldcw
push
insl
mov
jno,pn
notl
lret
ret
add
cmc
aad
test
lcall
cli
mov
out
clc
cmp
stos
xor
mov
lcall
pushf
dec
stos
xchg
xchg
push
loope
loop
addr16
mov
pop
shlb
jns
mov
aaa
jbe
daa
push
popf
push
insl
jecxz
sbb
gs
outsl
push
in
int
decb
sahf
mov
lcall
nop
jne
ret
cwtl
xchg
xchg
popa
cmp
jno
movsb
sub
shll
xchg
dec
add
inc
test
cmpsb
mov
push
call
stos
jg
jge
lret
in
mov
add
pop
out
and
push
loopne
add
xchg
mov
sarb
xor
shlb
xor
rcl
sti
aaa
mov
cwtl
aam
add
mov
mov
jle
pop
and
leave
in
sbb
ss
jbe
sub
aaa
and
mov
jb
push
sub
sbbl
xor
mov
sbb
popl
jl
shlb
push
lret
test
adc
test
xor
ret
adc
lcall
fsubrl
mov
push
xchg
cs
aad
sbbl
dec
fdivrl
aas
or
loope
sub
pop
out
pushf
or
xchg
rclb
ljmp
jb
inc
sub
cmp
pop
pop
fmuls
mov
inc
fidivs
pop
xor
jns
cld
adc
pop
jg
addr16
push
out
cld
mov
iret
fstp
pop
adc
mov
test
movsb
aaa
std
adc
sub
lcall
push
jne
dec
mov
jmp
mov
mov
fdivl
or
das
sub
xchg
cli
jne
jl
rcrl
jg
mov
pop
cmpsb
clc
jge
and
in
out
push
xlat
les
shl
push
inc
out
enter
add
jbe
andb
nop
test
ss
jno
push
pop
mov
lahf
pop
aad
xchg
push
push
sarb
shll
les
pop
imul
pop
jne
mov
dec
lret
xchg
dec
movsl
sbb
inc
cmc
adc
mov
mov
jo
punpckldq
cmp
push
xchg
cmpsl
adc
pop
inc
mov
push
and
in
push
std
repz
das
js
push
daa
pop
dec
movsl
add
xor
lahf
shl
lods
add
hlt
es
notl
jb
mov
mov
push
sub
mov
xchg
mov
iret
cmpsb
xor
lahf
xchg
outsb
addb
lock
pop
mov
xchg
stos
gs
cs
sub
rcl
or
mov
sbb
lds
cmc
mov
add
mov
xchg
lods
inc
adc
pop
movsb
sbb
shrl
outsb
jnp
loopne
pop
xor
add
xchg
bound
sub
mov
or
push
sub
sbb
and
xchg
adc
testb
shlb
cs
jne
dec
das
ret
sbb
call
into
ja
or
outsb
aam
dec
int
call
push
movsb
jne
lahf
sub
push
popf
clc
mov
push
jecxz
xor
dec
add
inc
pop
pop
adc
mov
data16
out
std
es
push
sub
cmc
push
in
push
xchg
add
cld
sbb
ds
loop
lahf
roll
ja
cld
cmpsb
sti
out
std
mov
inc
cmpsl
xor
dec
sbb
jb
lcall
sbb
pop
and
test
inc
call
mov
sub
xchg
dec
ja
inc
sar
mov
psrad
pop
mov
out
push
in
das
inc
cli
or
sbb
orb
mov
call
mov
shl
cmc
add
inc
movsl
icebp
gs
adc
xchg
imul
dec
xlat
pop
or
and
pop
lcall
and
jl
pop
jecxz
test
pop
insb
lods
test
pop
lret
and
inc
cmpl
fsubp
pop
aam
popl
or
mov
hlt
cltd
mov
sbbb
mov
lret
enter
jmp
jb
fsubl
rclb
mov
out
xchg
cltd
or
scas
fs
push
inc
mov
pusha
and
imul
cmp
unpcklps
inc
xor
push
pop
add
sbb
sbb
mov
inc
leave
je
push
jbe
and
outsb
rcrl
sbbl
sbb
test
push
into
test
test
push
loopne
cmp
sbb
and
sub
mov
lods
dec
add
and
jbe
mov
icebp
jnp
imul
in
and
mov
mov
movsl
inc
dec
mov
insb
popf
ljmp
mov
popf
pop
and
popf
lods
mov
insl
in
cmp
push
test
mov
ror
idiv
loope
rcrl
jl
imul
push
mov
popf
cmp
jnp
jmp
imul
cmp
sahf
daa
cmp
aad
fwait
push
xchg
and
xchg
jp
mov
mov
pop
in
mov
or
xor
sahf
loop
jl
shlb
xchg
jge
dec
push
mov
cltd
mov
cmpsl
mov
push
das
insl
sbb
test
and
ret
shrb
xchg
pop
mov
icebp
dec
imul
push
lods
push
jne
pop
loop
loop
sti
xchg
mov
pop
jnp
pushf
sub
mov
mov
andb
xor
lods
dec
fwait
dec
or
pop
add
push
aas
repz
and
xor
or
cmp
aad
inc
cmc
cmp
or
enter
mov
sub
xchg
fwait
scas
in
icebp
ds
roll
xchg
add
mov
xchg
lret
push
int
add
js
leave
lods
outsl
cmp
out
mov
sbbb
cltd
test
movsb
xor
pop
dec
sbb
aam
sub
pop
cmp
adc
movsb
gs
dec
sub
rcl
push
enter
inc
loope
ja
arpl
stos
sbb
xchg
dec
mov
lcall
dec
out
jecxz
in
adc
stos
test
pop
out
xor
mov
mov
ret
push
daa
xchg
sahf
inc
cmpsb
fnstenv
daa
jnp
arpl
lods
lds
outsb
push
orl
sub
ret
cwtl
scas
lock
fmulp
and
sti
inc
lods
jg
sub
mov
ljmp
cmp
sahf
hlt
inc
pop
test
pop
jl
mov
leave
mov
xor
stos
adc
push
test
stos
icebp
cltd
pop
stos
mov
push
inc
arpl
addb
mov
inc
jmp
int
dec
testl
pop
loope
lods
add
hlt
push
fldl
ljmp
pushf
fnstenv
push
push
fbstp
mov
mov
loop
lret
bound
or
daa
mov
stc
cltd
xor
inc
movsl
lea
ljmp
sbb
fldt
dec
dec
lahf
adc
aam
lock
sbb
fwait
inc
div
into
call
scas
int3
and
lret
into
cmp
dec
mov
arpl
and
outsl
lods
lds
jge
xchg
push
fs
into
jbe
js
mov
mov
mov
mov
xchg
aam
test
cmp
test
in
lods
xor
pop
repnz
bound
mov
and
mov
xor
mov
in
cli
jle
ss
xor
leave
aam
xor
je
imul
in
or
hlt
lret
xor
push
out
mov
ret
push
lods
jns
stos
inc
roll
mov
outsb
loopne
push
push
lods
aas
jae
xchg
lcall
test
in
adc
dec
shl
sbb
cmp
add
xchg
call
adc
xor
int
cli
or
lods
aam
cld
mov
cmp
cld
cmp
filds
push
je
sahf
mov
pop
bound
and
dec
mov
ljmp
push
stc
add
sub
inc
xchg
adc
dec
cmp
jp
cmp
xchg
add
pop
stc
add
push
loop
imul
sbb
mov
cltd
sub
cltd
pop
add
mov
mov
dec
jle
jb
call
lahf
imul
push
aaa
out
enter
add
lea
mov
cli
pushf
ret
jecxz
xchg
mov
fcoml
icebp
mov
push
xchg
xchg
push
outsl
repz
sbb
int3
pop
xor
add
mov
dec
test
cmpsl
ret
xor
scas
cmp
in
mov
ret
fs
popa
andl
xchg
sub
int3
xor
jb
lret
pusha
idivl
sbb
ffree
dec
mov
sbb
or
xor
jp
adc
aam
repnz
mov
jge
sbb
cltd
stos
mov
jle
imul
js
dec
or
popa
dec
push
or
mov
mov
push
or
ds
loop
xchg
test
push
sbb
inc
sti
das
pop
adc
pop
mov
dec
inc
leave
lcall
sbb
xlat
scas
pusha
mov
rorb
adc
jns
sti
mov
imul
incb
push
loope
cmp
ficoml
mov
pop
sbb
out
cmp
fxch
cmp
outsl
fcomp
pop
icebp
fnstsw
jb
sub
inc
inc
mov
cmc
leave
mov
push
dec
add
mov
adc
jg
in
mov
data16
adc
adc
pushf
popa
sub
mov
mov
mov
aad
pop
in
enter
adc
repnz
mov
adc
pop
jmp
loope
push
lock
push
invd
mov
dec
sub
xor
je
out
idivl
pop
mov
mov
xchg
sub
push
js
mov
scas
mov
mov
mov
jl
pusha
xlat
sar
inc
add
mov
jb
mov
adc
leave
jne
cmpb
pop
cmc
test
or
add
ljmp
or
adc
mov
addr16
inc
inc
pushf
fs
dec
xor
push
push
sub
jg
shrl
dec
test
mov
mov
mov
mov
out
sub
xchg
add
rolb
cmp
jae
cwtl
stos
pop
xchg
cmp
add
push
and
mov
push
lret
leave
sub
repz
sbb
icebp
xor
les
mov
xchg
pop
jmp
dec
cmp
cltd
sti
mov
pop
hlt
push
or
insb
pop
cs
cmp
insb
roll
arpl
in
arpl
insb
jp
in
push
imul
fs
lret
aaa
jle
jmp
or
mov
sbb
push
and
jp
and
mov
pop
adc
pop
stos
cmp
insl
les
aaa
mov
jns
jbe
cmp
push
out
out
xor
movsb
jmp
je
dec
pop
jb
adc
mov
ljmp
xchg
or
pop
sub
jmp
pop
popf
xchg
jecxz
int
push
or
dec
pop
mov
test
dec
mov
jnp
mov
xlat
sub
xchg
sbb
mov
xor
mov
fstpl
ret
xor
dec
push
mov
jo
xchg
ret
cwtl
mov
enter
lods
ljmp
lods
in
xchg
jne
ret
int
cmc
mov
inc
push
addb
mov
xor
push
test
repz
cmc
push
adc
or
sahf
inc
mov
jno
loopne
adcb
fucomp
xchg
mov
mov
gs
jae
mov
mov
mov
out
inc
pop
dec
xchg
in
cli
cmp
test
push
lea
and
fs
jns
cmp
inc
push
mov
fbstp
jle
xlat
mov
dec
int
mov
mov
add
lea
adc
loopne
dec
add
mov
rclb
faddl
enter
roll
xor
sbb
sbb
xchg
dec
scas
loope
bound
int
in
mov
ja
jnp
aas
mov
adc
mov
jg
jns
jmp
dec
lds
mov
loop
push
adc
push
cmpsb
loop
pop
je
arpl
and
lea
xor
repz
xchg
and
je
cmp
stos
das
sbb
sub
mov
fcomip
pop
push
mov
cmpsl
push
jle
popf
scas
xchg
mov
divl
inc
sti
xchg
inc
adc
inc
pop
cmp
out
jae
mov
pop
jecxz
enter
ss
shl
inc
adc
push
xlat
je
jle
jge
add
movsb
roll
orl
jecxz
daa
cmp
pop
shl
dec
xchg
inc
rorb
and
fisttpll
mov
shrb
cld
imul
sub
stos
shlb
push
pop
xchg
js
and
adc
mov
fimull
inc
fcmovb
mov
cmpsl
pop
dec
pop
icebp
aam
or
xor
inc
cld
jecxz
and
lahf
jb
push
les
mov
xchg
cli
sub
dec
sbb
add
les
shll
lcall
aam
rcll
mov
pop
and
jbe
cmp
inc
loop
xchg
sbb
pop
out
lret
cmc
mov
push
icebp
mov
stc
shrl
lea
xor
inc
aaa
push
jmp
cmp
out
shrb
and
test
ret
lcall
roll
repnz
stos
das
push
xorl
aaa
ds
arpl
pushf
inc
es
mov
xchg
pusha
pop
fdivrl
es
pop
je
andl
repz
pop
movsl
adc
mov
mov
sti
or
mov
loopne
add
es
lea
and
jl
push
mov
test
push
mov
data16
inc
sub
jne
or
sbb
cltd
cltd
clc
adc
sub
xchg
lea
lcall
and
push
sub
movsb
dec
cmc
imul
lock
cmp
xchg
lods
cli
mov
jae
std
daa
outsl
xor
cwtl
das
notl
mulb
sub
dec
rol
cli
test
ret
inc
mov
jb
xlat
push
sti
pop
pop
mov
fsubr
pop
fwait
add
inc
ret
fildl
sub
fwait
shrl
mov
inc
sbb
xlat
cltd
xor
sahf
imul
arpl
sub
pop
stos
negb
xor
icebp
popa
jns
and
push
lods
sub
pop
orps
xchg
ja
les
pop
cmp
fimuls
push
sub
pop
fwait
mov
out
repz
mov
adc
xchg
push
jle
enter
mov
addb
push
popa
test
xchg
inc
jnp
stos
pop
mov
fwait
sarl
lret
js
imul
adc
dec
xor
push
iret
ss
push
scas
mov
fists
jmp
and
mov
dec
xchg
cmpsb
leave
js
scas
fidivs
jns
dec
arpl
xor
or
jnp
pop
adc
inc
mov
sub
pop
mov
inc
mov
sarb
mov
dec
pop
add
mov
xchg
bound
xchg
test
gs
daa
call
leave
punpckldq
sbb
lds
stos
push
inc
lcall
js
fdivl
hlt
sbb
ret
fstps
in
jnp
sub
scas
mov
cmp
fcomip
leave
pop
popf
rcl
mov
mov
ja
inc
call
inc
and
dec
ret
jmp
fcomps
jmp
in
andb
jno
pop
mov
shlb
xchg
xchg
mov
mov
fxch
jae
clc
xchg
sub
dec
dec
jl
sbb
dec
cltd
jecxz
stc
xor
pop
xchg
xchg
dec
add
mov
push
shr
xor
mov
adc
xchg
aad
cmc
inc
popa
leave
leave
out
imul
sub
fwait
xchg
repnz
in
jno
push
sub
pop
jecxz
pop
xor
add
pusha
stos
and
inc
cli
fwait
ds
adc
data16
adc
jl
int3
lret
jb
mov
test
pop
xchg
xor
sbb
jle
add
lret
sub
repnz
popf
bound
clc
pop
rorl
clc
popa
int
je
add
inc
test
test
dec
adc
xchg
fidivs
adc
xchg
add
testl
jno
cmp
sahf
out
or
sbb
bound
mov
xor
add
push
ja
flds
jo
sahf
and
dec
test
jbe
push
pop
in
xor
arpl
adc
push
and
jnp
inc
es
into
lcall
cwtl
inc
int3
cwtl
inc
lcall
in
push
pop
movsl
aaa
or
je
ljmp
jne
shrb
and
xor
cmp
mov
mov
jle
daa
cld
mov
sbb
sbb
out
xchg
push
mov
inc
or
pop
bound
xchg
pop
das
jo
sbb
xor
mov
enter
or
je
cld
xchg
loop
call
and
fdivrs
and
mov
scas
xchg
bound
mov
add
inc
adc
xchg
lret
jnp
xchg
sub
sub
into
gs
dec
out
jle
and
aam
pushf
or
dec
inc
call
loopne
aaa
dec
out
push
lcall
pop
mov
lods
xlat
fsubs
dec
dec
aas
repz
rorl
cmp
imul
sub
dec
fld
scas
mov
mov
jnp
inc
mov
dec
test
out
sub
cwtl
pop
rcl
jne
test
dec
gs
test
enter
icebp
cmpsl
out
mov
arpl
shrl
std
aam
daa
enter
fdivr
pop
lods
std
inc
push
in
ret
loope
xor
and
push
sub
mov
xor
xor
jmp
cs
fidivrl
loop
xchg
sbb
jge
or
rcrl
mov
fstpt
adc
jne
es
mov
sub
dec
mov
xchg
jl
xchg
push
sub
add
mov
sbb
clc
rcrl
sub
fwait
dec
movsb
push
add
jmp
add
leave
push
out
fcmove
stc
mov
inc
xlat
add
fadd
loopne
sub
out
adc
pop
movsl
mov
mov
adc
daa
pop
call
mov
push
xor
xchg
push
cli
jne
hlt
stos
lcall
add
orl
inc
shr
test
dec
repz
fcoml
mov
sub
cmp
push
sbb
les
inc
adc
pop
movsb
xor
fstpl
out
call
xchg
mov
imul
les
aam
xor
jecxz
cmp
pop
scas
add
sbb
add
jns
jo
adc
lahf
mov
mov
fstps
mov
stos
enter
imul
clc
pop
cli
aas
sub
adc
lret
scas
inc
fistps
dec
jecxz
popa
xor
and
sbb
icebp
push
imul
es
rorl
add
insl
sahf
lret
scas
mov
cmp
addr16
push
aas
cmpsb
xchg
sub
pop
mov
mov
xchg
and
mov
jns
les
aad
push
or
test
adc
add
add
pop
add
test
and
sbb
mov
loope
sub
sub
adc
dec
pop
in
ja
mov
out
xorl
push
in
sbb
push
les
sbb
bound
mov
add
leave
add
or
cmpsl
sbb
outsb
sub
jmp
test
dec
loop
cmpsl
xchg
add
xor
insb
mov
cs
idivl
shll
cld
jmp
movl
lahf
inc
dec
inc
or
les
ss
sbb
ficomps
scas
out
mov
fisttpll
stos
movsb
jecxz
and
aas
subl
and
inc
inc
es
popa
mov
loopne
sub
xchg
popf
mov
adc
out
mov
fmull
push
scas
inc
test
adc
or
mov
xchg
jo
jmp
fld
icebp
xchg
stc
and
xor
mov
add
insb
mov
sub
xchg
xor
das
adc
sbb
loope
dec
jg
test
cmpsb
push
pop
sbb
mov
cmp
test
jecxz
mov
popa
mov
sbb
mov
test
push
out
rcl
int
sub
mov
xchg
aad
add
cmpsb
aaa
jbe
aaa
jbe
aam
cmp
out
xchg
scas
inc
ja
or
cmp
jno
scas
mov
inc
subl
mov
mul
add
loopne
sub
fisubs
stos
notl
jmp
sub
lahf
sar
or
sbb
fists
sbb
jnp
adc
mov
arpl
aad
js
hlt
mov
jle
inc
mov
adc
es
test
call
subl
fldt
add
sbb
mov
pop
or
cmp
mov
push
sub
nopl
cmp
or
pop
stc
mov
addl
lea
push
std
setne
cli
test
cmp
cmpsb
aad
xlat
cs
jl
repz
sub
stc
or
js
cmp
jmp
mov
add
imul
cwtl
nop
sbb
cmpsl
les
cmpsb
pop
es
data16
hlt
xor
xchg
sti
stos
mov
sbb
faddl
cltd
imul
popf
pop
xor
sbb
mov
insb
add
lahf
int
stos
shll
outsb
jg
pop
cmp
adc
mov
std
aam
cmp
xchg
mov
ret
rolb
cld
inc
mov
adc
hlt
icebp
mov
call
pop
out
pop
adc
xchg
std
iret
data16
adc
and
and
rcll
pop
push
test
jp
pushf
imul
fstpt
je
inc
and
cmp
sbb
mov
negb
pop
rol
mov
repnz
inc
outsl
push
inc
mov
in
outsb
ds
call
push
push
fstl
push
push
das
out
test
mov
dec
jg
adc
mov
pop
sbb
pop
jp
call
xchg
or
daa
inc
sbb
nop
fs
push
cmp
shrl
xchg
arpl
xchg
fs
pop
outsl
pop
mov
sub
pop
in
cmpsl
cmp
mov
push
or
adc
inc
xor
dec
xchg
or
or
lds
push
and
jne
in
rorb
clc
xchg
ss
pop
xlat
mov
inc
out
adc
jns
in
jg
loopne
out
enter
bound
xor
lock
in
les
adc
sub
xlat
adc
stc
pop
mov
in
rolb
test
sub
mov
xchg
fcmovnb
pop
loope
idivb
in
lds
outsl
sarb
xchg
xor
call
xchg
sbb
repz
and
xchg
sub
sbb
adc
lods
outsl
cltd
mov
bound
and
pop
je
mov
pushf
xchg
cmpsb
mov
out
in
lods
adcb
loopne
insl
xor
inc
in
mov
jnp
test
sar
xchg
add
sbb
or
xor
in
popf
fldenv
jge
mov
inc
pop
push
imul
cmp
jle
test
pop
ja
out
adc
repz
test
negl
inc
ficomps
jns
mov
ljmp
jbe
popf
pusha
mov
cmc
daa
loope
ss
lds
and
dec
loope
inc
in
int3
fcomi
mov
push
push
pop
bound
jge
jbe
and
push
scas
fld
aam
xchg
decb
sub
lret
inc
imulb
call
cmp
mov
cli
mov
mov
dec
jecxz
subl
leave
out
cmpsl
or
lret
inc
pop
cmpsb
xor
loope
sbb
repz
in
pop
mov
ret
ret
in
jno
mov
dec
dec
add
xor
into
das
test
loop
shl
inc
fldt
push
inc
mov
xchg
add
pusha
mov
xchg
jno
enter
xchg
jge
dec
sti
ds
mov
in
popa
adc
sbb
mov
pop
clc
bound
out
add
mov
ljmp
sbb
mov
and
int3
push
scas
cmp
in
xchg
out
xrelease
test
sti
jbe
xchg
xor
stos
jb
sarl
ljmp
dec
or
icebp
aad
js
pop
pop
push
push
rcrb
sbb
mov
cmp
add
je
dec
pop
add
xor
mov
mov
ret
mov
ja
mov
dec
xor
adc
sbb
xchg
cmp
xorb
jbe
insb
es
mov
ret
outsb
xor
ret
movsl
mov
iret
jbe
popa
movsl
mov
cmpsl
std
cltd
and
test
adc
enter
popf
es
sbb
icebp
jnp
lea
imul
fs
and
gs
add
cmpsb
jg
xlat
cmp
inc
mov
js
outsl
ds
addr16
fcom
lea
std
sbb
sbb
xchg
mov
xchg
test
in
xor
jb
or
xchg
das
fbstp
add
lea
xchg
dec
mov
sahf
xor
push
mov
mov
mov
les
jnp
pop
mov
xchg
ds
sti
jmp
pop
imul
or
or
jns
cmp
inc
iret
cmpsb
repnz
cmpsb
cmp
cltd
ffreep
pop
out
xchg
dec
and
push
xor
movsb
add
lds
cmpsl
sbb
pop
mov
pop
or
mov
add
xlat
jg
jle
and
aas
pusha
lods
jo
cwtl
decb
pop
mov
out
icebp
adc
out
js
loopne
adc
sbb
mov
das
test
mov
rcr
pop
adc
aam
cmp
out
test
sbb
cmp
cmp
jae
cli
jge
pop
jo
lods
cld
jnp
or
sti
jbe
mov
aad
xchg
jns
mov
sar
es
push
sub
mov
cmpsb
fstpt
les
jno
pop
in
fstl
or
jae
inc
sub
clc
push
ljmp
testb
push
inc
fst
pop
mov
into
xlat
outsl
inc
xchg
cmp
pushf
mov
in
stc
cmp
clc
int
push
mov
popa
adc
aas
xchg
mov
pop
mov
lea
scas
inc
dec
dec
rcl
pushl
dec
mov
xorl
xor
push
jmp
dec
stos
stos
lock
dec
stos
stos
push
insl
popa
repnz
lret
cld
inc
iret
and
test
aas
sbb
lds
jno
cmp
jle
cmpsb
cmp
sbbl
mov
movsb
inc
mov
aaa
mov
dec
je
push
int3
aaa
and
mov
or
loope
outsl
out
bound
js
and
outsb
aas
mov
ljmp
shl
adc
xchg
dec
mov
mov
add
sbb
fdiv
adc
adc
xchg
xor
cld
cwtl
aaa
pop
fwait
jbe
mov
fbstp
rorb
mov
add
or
push
push
scas
add
or
stc
and
inc
sbb
inc
dec
xchg
xor
mov
or
xor
pop
inc
mov
popf
sbb
or
outsl
and
outsb
xchg
in
dec
jl
call
mov
inc
cmp
lock
jg
jmp
sbb
repz
pop
mov
ja
in
dec
pushf
mov
into
inc
mov
jbe
xor
jb
sbb
push
aad
and
jne
xor
mov
iret
push
ret
and
pop
in
push
push
arpl
push
mov
lock
pushf
pop
fs
aam
nop
into
mov
sub
out
mov
lock
mov
mov
ret
xchg
cmp
out
imul
lods
fsubl
jbe
xchg
adc
adc
sbb
or
ja
dec
imul
jl
lock
insl
out
imul
gs
out
orl
mov
mov
mov
cmp
jle
xchg
fidivrs
add
repz
mov
insb
add
sub
push
es
aad
push
dec
jmp
mov
xor
sbb
mov
outsb
mov
shrl
mov
iret
and
adc
jmp
movsb
sub
clc
scas
push
mov
in
xor
test
jb
fnsave
xchg
rcl
inc
adc
push
lahf
mov
adc
rorb
mov
ljmp
repz
shrl
cmp
imul
pushf
dec
jl
imul
mov
adc
or
and
add
mov
jle
and
mov
fimuls
insl
sub
sub
add
lret
orl
enter
leave
insl
mov
mov
shll
cmovbe
sub
and
mov
ss
dec
jno
in
xor
adc
stos
sub
and
fs
popf
inc
pop
mov
mov
in
rorb
lods
mov
xor
push
xor
insl
cltd
jbe
loope
lock
inc
dec
pop
ja
xor
je
pushf
and
adc
stc
inc
and
mov
mov
loopne
popf
inc
dec
push
dec
setp
pop
inc
inc
jns
stc
mov
sub
cwtl
ret
int
mov
sbb
inc
in
sbb
push
and
add
xchg
push
dec
jge
loopne
inc
lcall
inc
mov
cmpsb
dec
mov
sbb
stc
imul
cld
mov
lds
mov
pusha
in
call
or
lret
loope
loopne
pop
faddp
sbb
lds
adc
push
leave
jle
lcall
loope
stos
fwait
mov
mov
rclb
pop
and
arpl
sub
jbe
ss
dec
xchg
fnstcw
adc
push
xor
cmp
lods
mov
scas
test
hlt
addr16
addb
jge
push
popf
push
dec
dec
adc
inc
jmp
mov
and
movb
jmp
js
push
addl
movsb
push
jnp
lds
icebp
lea
js
stos
xchg
mov
out
mov
pop
inc
jmp
xchg
dec
mov
dec
in
pusha
gs
inc
popf
mov
idiv
or
popa
popf
dec
xlat
sbb
jg
pop
cmp
xchg
sub
out
gs
lret
push
negb
cmc
sbb
jl
mov
inc
fmull
inc
xor
popf
cmp
mov
bound
test
lods
and
pavgb
mov
in
fdivs
rol
sbb
jo
fistps
cs
jae
cli
xchg
dec
rclb
shlb
pop
lret
sbb
ret
scas
mov
lods
bound
add
out
xchg
je
sub
mov
jne
lea
sub
out
nop
sub
and
jmp
cmp
negl
add
push
das
jg
jecxz
jnp
sbb
test
xchg
and
ret
pop
mov
outsl
gs
add
imul
fidivrl
mov
cltd
test
mov
mov
das
xchg
cli
pop
fimull
and
test
adc
int
pop
arpl
jo
icebp
inc
dec
sub
cli
mov
movb
mov
scas
out
int
and
push
mov
jno
rcrb
fnstenv
ret
repz
fstl
push
outsl
sbb
xor
scas
fidivl
jg
negb
rcl
push
scas
and
dec
rcl
in
leave
inc
add
arpl
mov
cld
adc
je
packuswb
xlat
or
push
jo
cmp
sti
ret
adc
pop
cs
insl
in
xlat
cmp
andl
push
ret
jnp
cli
pushf
lcall
scas
cs
sbbb
xchg
push
sub
jb
push
lret
mov
pop
inc
or
mov
pop
mov
int
mov
push
repnz
mov
fcomi
outsl
out
cld
cmpsl
ds
inc
lahf
out
ror
repnz
and
push
push
imul
pop
pop
lret
jne
arpl
cmp
push
imul
pop
insl
and
pop
cmc
jle
jbe
push
sbb
dec
js
or
nop
pop
jp
sub
jns
pop
inc
ficomps
mov
shl
popf
jecxz
xor
mov
mov
imul
pushf
call
out
jp
mov
test
or
cltd
test
test
sub
pop
aam
iret
fisubrs
aad
lcall
inc
loope
xor
movsb
jns
add
and
sub
stos
movsb
test
outsl
sub
movsl
dec
aam
or
push
cs
push
cli
fcompl
lret
cmp
cwtl
sub
push
jne
stos
xchg
dec
adc
adc
ret
pop
sbb
mov
negb
and
aam
push
xchg
push
shll
push
mov
or
mov
mov
push
jno
aas
iret
cmpb
popf
ljmp
test
mov
in
jb
test
cltd
inc
mov
je
imul
outsb
aaa
loope
stc
mov
and
scas
xchg
and
das
adc
jae
fstpt
push
or
mov
jmp
cmp
ss
shr
mov
add
xlat
or
push
stc
popf
stc
or
nop
cmpsb
std
xchg
mov
fstpl
loopne
cmpsb
imul
rcrl
push
mov
xor
cmp
mov
xor
bound
sub
out
lret
sub
xor
stos
jne
xor
call
or
adc
lds
jb
sub
in
ret
inc
jno
jae
xchg
mov
mov
jnp
mov
inc
leave
test
mov
or
mov
lcall
mov
inc
push
lock
dec
xchg
ss
cmp
imul
sbb
hlt
mov
fst
mov
pop
fnstcw
inc
inc
leave
pusha
jb
dec
dec
fidivs
sub
mov
sbb
or
push
push
xchg
cwtl
rcl
mov
lds
lds
rcl
inc
lahf
xor
ror
sbb
scas
and
int3
rcrl
jl
fwait
pusha
push
mov
js
xor
push
js
xlat
repz
test
sbb
orl
and
shrl
loopne
cmc
js
and
xor
cwtl
das
dec
subb
xor
std
push
psubusw
push
scas
jb
loope
lret
setno
mov
jae
xchg
push
jl
cmp
cmp
fsubl
movsb
cmp
aam
or
pop
adc
xchg
rclb
push
cs
jnp
add
repz
lret
jae
adc
mov
loopne
orb
pop
std
cmpsl
popf
jb
push
mov
mov
enter
and
mov
inc
rorb
and
sbb
std
imul
imul
add
lahf
cmpsb
stc
dec
pop
enter
jl
fisubs
lods
xchg
mov
xor
fucomip
push
push
jno
fistps
imul
adc
sub
jne
popa
mov
mov
push
mov
je
cmp
jb
sub
push
rcrl
mov
mov
into
add
outsl
sbb
mov
adc
xchg
mov
or
cld
fidivl
push
push
sub
cmp
adc
adc
lahf
xor
dec
lea
daa
add
adc
jecxz
sub
inc
xorb
hlt
inc
stos
or
movsl
push
popf
fucomip
lods
dec
xor
outsb
je
in
inc
cltd
xor
or
pop
push
icebp
cmpsb
lea
sub
inc
mov
movsl
jge
movsb
and
mov
jp
dec
iret
jb
movsb
add
shll
xchg
aaa
js
lods
jmp
sbb
cmc
cmp
js
cmp
inc
fcompl
add
xor
adc
push
outsl
insl
loopne
push
cmp
sub
pop
pop
fdivs
push
mov
inc
fldl
in
lock
adc
addr16
adc
leave
pop
loopne
lret
or
sbb
and
int
mov
cmc
push
sbb
and
lret
mov
add
out
pushf
xor
jb
out
loopne
test
test
or
outsb
adc
adc
add
aad
ja
xchg
fwait
repnz
sub
adc
popa
ljmp
fdivrs
cs
es
jecxz
jp
mov
shll
mov
sbb
cmpsl
shld
mov
iret
xor
pop
leave
out
mov
sar
jge
popf
jecxz
mov
popf
push
hlt
rorb
repnz
sarl
insb
test
ja
fcomps
cmp
loop
push
mov
or
movsb
push
je
mov
negl
leave
test
sub
arpl
xchg
and
int3
xchg
test
ret
in
sub
cli
test
push
push
sub
mov
and
xlat
cmp
dec
xchg
insl
repz
movsl
inc
inc
jmp
stos
xchg
mov
add
pop
or
cs
lea
add
stc
ret
pop
lods
cmp
cmc
testl
cmp
adc
pop
inc
mov
mov
js
jns
mov
les
pminsw
mov
mov
jns
pop
push
aad
mov
adc
js
pushf
xchg
adc
cmp
mov
inc
lods
mov
repz
adc
mov
add
fimuls
sti
mov
xchg
into
fdivrl
rcrb
divl
mov
bound
xchg
mov
inc
mov
mov
mov
ret
lods
pusha
dec
or
lret
aas
imul
call
dec
dec
mov
mov
ds
or
xchg
pop
test
negl
outsb
mov
pop
or
mov
repz
iret
adc
sub
xor
cmpsl
sbbl
or
add
pop
sbbb
inc
aam
loope
mov
ret
hlt
pop
sub
mov
xlat
pop
and
dec
push
jo
sub
dec
and
pop
incb
aas
scas
xor
in
fwait
aas
pop
jno
and
shrl
add
or
xor
popa
mov
sbb
adc
mov
int
mov
fistpll
lea
dec
rcrl
sbb
stc
repnz
lahf
sub
stc
adc
repz
jb
pop
repnz
cwtl
and
push
sbb
rclb
add
push
sub
pop
inc
adc
enter
cmpsb
add
lret
loop
and
jnp
daa
and
js
jnp
sbb
sbb
jp
scas
aaa
lods
lahf
mov
into
or
mov
push
sbb
dec
iret
clc
rol
or
out
repz
or
push
mov
pop
jns
mov
test
push
add
jne
aam
fwait
imul
pop
outsl
fmull
mov
sbb
loope
lds
push
dec
and
mov
cmp
outsl
push
adc
add
inc
popa
sete
ja
dec
mov
jecxz
in
jne
inc
in
pop
bound
mov
popa
fdivl
add
add
leave
shlb
lea
or
and
loope
cltd
test
pop
fiadds
cvtps2pi
or
pop
and
ss
cli
adc
scas
pop
int3
mov
aam
insb
jle
stc
ss
xlat
mov
mov
fstpl
pop
jae
fbld
add
dec
and
jne
sbb
and
daa
sar
mov
mov
or
dec
fisubrl
adc
lahf
jae
sub
jns
or
or
sub
fwait
push
cmp
jb
inc
sub
sbb
lods
dec
adc
push
fldt
mov
sbb
cmp
loop
xchg
roll
sbb
lods
addr16
pushf
outsb
or
sbb
dec
bound
cmp
inc
mov
cmp
or
iretw
sub
sti
psubusb
mov
cmp
leave
mov
cmp
add
popa
sahf
sbbl
stos
lock
and
loopne
and
jmp
dec
jle
dec
jecxz
jnp
cmp
push
xchg
int3
lret
lea
es
ja
std
jb
mov
ret
rclb
jl
add
xlat
test
scas
mov
stos
int
pop
test
jmp
aad
xor
mov
imul
inc
and
adc
roll
add
jge
mov
mov
jae
jne
fsub
jmp
mov
pop
lods
push
or
cmpsb
cmp
movsl
int
mov
rorl
ja
xor
or
and
sub
shr
xchg
add
daa
data16
xchg
sub
dec
mov
lret
dec
xchg
aad
in
mov
sub
shll
enter
std
pop
push
fldenv
sbb
or
gs
push
add
inc
lret
repz
bound
mov
lock
pushf
movsl
addb
int3
xchg
test
cmp
dec
stos
cmp
lods
aam
loop
adc
and
or
push
clc
rcrb
jmp
aad
xor
pop
pop
push
test
gs
pop
lret
dec
scas
es
sbb
jbe
out
pop
mov
out
inc
push
dec
cmp
pushf
xor
xchg
test
out
rcll
loope
call
mov
push
ss
repz
lods
pushl
sbb
sub
mov
stos
sub
pop
adc
lret
ftst
in
push
fidivl
out
sahf
mov
fsubl
nop
fwait
hlt
xor
jle
xorb
pop
adc
inc
jae
out
pop
lock
out
aad
sbb
movsb
xchg
mov
mov
add
xchg
cmpb
scas
scas
in
arpl
inc
jne
inc
cmp
sbb
adcb
ds
out
std
shrl
dec
cmpsb
or
in
dec
fistl
or
xor
or
ret
mov
dec
in
test
stc
js
insb
rclb
add
cmpsb
push
insb
mov
in
xor
push
js
pop
cltd
das
repnz
loope
into
jbe
fisubs
jmp
adcb
pusha
das
mov
jb
clc
push
add
push
stos
or
or
or
out
std
aas
shll
in
addl
pop
outsb
int
in
pop
inc
daa
js
jle
lods
pop
lods
xor
dec
movsl
dec
or
fwait
mov
add
clc
outsl
fisttpll
jmp
adc
and
xchg
scas
nop
into
pop
jge
sbb
and
jno
and
jge
stc
shlb
enter
ret
in
and
cwtl
sub
xchg
es
ret
sub
pop
je
dec
mov
mov
lods
mov
or
inc
into
sbb
mov
adc
dec
jb
xchg
sub
or
jmp
aaa
inc
movsl
jecxz
pop
ja
xchg
xchg
cwtl
fldl
jne
cmp
sub
pop
add
adc
mov
cmc
lods
add
xor
push
or
mov
data16
jle
in
sbb
mov
pop
jbe
in
cmpsl
jns
pushl
mov
mov
sbb
inc
inc
sub
aad
mov
or
push
push
mov
lcall
push
imul
add
jno
sbbl
cmp
jge
xor
dec
mov
or
xchg
xor
scas
lods
arpl
nop
pusha
cmp
mov
std
and
or
mov
dec
das
fdivs
jg
testl
adcb
sbb
movsl
sbb
sub
mov
js
dec
addr16
xor
fmul
int3
mov
loope
add
rcl
aam
int
cmpsb
std
cmp
dec
sbbb
xor
mov
lods
jnp
test
jg
lret
jbe
xor
insl
ja
std
test
test
mov
xor
insb
shr
adc
jle
ljmp
xchg
in
xlat
je
jae
lds
push
jbe
xchg
adc
cltd
je
jb
in
push
data16
ret
daa
outsb
ljmp
cmc
inc
bndstx
ja
mov
cmpsl
jmp
dec
stos
in
cmp
leave
push
daa
in
push
js
inc
dec
pop
cmpsb
adc
sbb
add
sbb
inc
faddp
and
pop
pop
mov
ds
mov
adc
xchg
dec
and
rcl
jp
jo
mov
pop
inc
mov
ja
je
aad
dec
pop
lea
fisubs
stc
dec
mov
adc
insl
and
sbb
xchg
ljmp
lahf
in
mov
cltd
lock
or
in
jg
scas
push
inc
fidivrl
sbb
movsb
mov
push
inc
out
es
push
or
mov
popf
or
jg
cmp
dec
jmp
dec
cmp
mov
sbb
loope
sahf
inc
dec
rcrl
imul
jp
nop
and
pop
cmp
dec
out
mov
popa
push
add
and
sbb
push
pop
jne
pop
lcall
movsb
pushf
cmc
inc
lret
push
jl
int3
pop
pop
jmp
push
popf
mov
nop
pop
jo
cmp
dec
pop
mov
js
fs
sub
mov
or
or
xor
xchg
shlb
pop
imul
dec
clc
cmpsb
arpl
xor
fisttps
popf
mov
dec
pop
lcall
dec
in
movsb
rol
fldcw
pop
xchg
add
jp
lea
inc
cmp
ja
je
insl
sbb
outsb
mov
out
xchg
mov
pop
cli
loop
rol
cmpsb
inc
enter
testb
push
pushf
arpl
leave
sahf
cmp
lods
cmp
lret
fildll
pop
movsl
xchg
xchg
sub
icebp
pop
mov
movsb
mov
fdecstp
dec
das
mov
push
int3
xlat
ljmp
cmc
push
jno
inc
and
or
push
mov
cltd
pop
mov
les
icebp
and
test
rclb
cmpsl
popa
subl
clc
shrb
inc
mov
fstl
pop
rorl
pusha
clc
inc
jae
mov
sub
shrl
sub
jae
push
jbe
push
xchg
jge
xor
aad
push
mov
pop
test
xchg
add
mov
loope
jns
xchg
push
insb
add
jp
gs
lret
mov
mov
fisubl
mov
push
adc
jle
xchg
jno
aaa
dec
lret
mov
out
mov
test
adc
jg
cmc
repz
imul
dec
and
dec
xor
ja
fistps
lods
push
lret
add
or
mov
jle
adc
sub
sahf
rol
inc
xorl
or
sbb
jle
daa
push
or
ss
test
or
adc
iret
std
add
add
dec
aaa
mov
cmpsb
lock
dec
insb
popf
fisubs
adc
int
add
out
js
cwtl
push
mov
xchg
ficoms
imull
adc
movsb
insl
cmpsl
out
outsb
mov
fbld
sbb
inc
push
fisubrs
in
mov
pop
mov
or
aas
testb
lods
mov
fisttpll
dec
mov
dec
and
rcl
push
and
ljmp
out
jo
xor
mov
push
xor
lock
xchg
sbb
shrl
fs
insl
aam
or
in
insl
es
mov
inc
hlt
mov
ficoml
lods
loope
cmp
mov
jo
testb
or
in
bnd
mov
inc
fists
xchg
in
orl
cmp
movsb
nop
insl
ljmp
cmp
xchg
push
xchg
sti
or
jns
aaa
lahf
repnz
arpl
push
fwait
orl
sbb
mov
ret
mov
out
push
cmc
jle
or
inc
loop
lock
and
in
pusha
inc
iret
lcall
dec
das
mov
ds
cmp
pop
les
loope
cli
popa
arpl
bound
jg
ret
push
jno
test
fistl
lcall
adc
cmp
out
cmc
mov
pop
and
int3
test
popa
fs
fcmovbe
push
sbb
mov
in
inc
insb
dec
dec
fdivrs
xlat
in
and
call
push
cli
jmp
mov
into
pop
mov
mov
mov
push
pop
test
inc
cmpsb
ss
mov
push
jp
pusha
pop
stc
add
nop
ror
mov
jb
xor
aam
stos
cmp
mov
inc
sti
fwait
cmp
pop
outsb
jecxz
fwait
test
loope
pop
ucomiss
loop
mov
xor
xchg
pop
inc
dec
into
jns
jge
add
dec
sub
dec
xchg
outsl
incl
xor
mov
jecxz
add
inc
sbb
inc
popa
popf
repnz
adc
jnp
imul
popf
push
mov
hlt
hlt
hlt
lea
add
aaa
inc
outsb
stos
es
out
test
pushf
pop
dec
shlb
mov
xlat
stos
outsl
jns
fmulp
mov
pop
mov
jecxz
clc
in
subl
dec
icebp
pop
nop
stos
mov
cld
xchg
in
roll
inc
daa
add
shl
arpl
scas
inc
inc
push
enter
sub
jecxz
cmp
aas
cli
orb
xor
cmpsb
cmp
rorl
sub
jg
mov
mov
cs
or
pop
notl
pushw
adc
mov
xor
dec
imul
jb,pn
pop
out
scas
dec
fdiv
inc
inc
mov
push
inc
in
inc
mov
enter
push
leave
xchg
add
bound
or
sub
test
add
cs
in
int3
sahf
call
outsl
add
or
jne
jp
out
lea
adc
mov
xor
add
cmp
dec
dec
mov
outsl
mov
push
cmp
pop
mov
fsubl
lea
push
or
jg
sbb
out
out
stc
popa
nop
inc
ret
and
cltd
sbb
and
xchg
jnp
mov
out
adc
push
into
loopne
mov
mov
adc
pop
push
pop
out
sub
clc
push
jno
std
mov
add
xlat
test
ds
insl
jns
add
sbb
sub
jge
cs
scas
aaa
js
cltd
xor
leave
into
push
mov
subl
addr16
cmpsb
adc
jbe
mov
xchg
add
shl
jb
int
mov
out
lea
and
addb
int3
jg
lods
or
dec
mov
mov
dec
shrb
int3
cmp
adc
dec
sbb
push
pop
jecxz
nop
or
pop
jmp
sar
out
sub
fldpi
lret
mov
comiss
adc
adc
movsb
sbb
lea
pop
int
add
loopne
lahf
addl
xchg
ss
push
leave
mov
push
lret
and
bound
jp
jb
mov
push
loop
jle
add
popa
clc
dec
push
push
ljmp
cmp
mov
fsts
mov
mov
cmc
adc
jp
push
movsb
hlt
push
sub
lds
jne
mov
imul
stos
mov
jne
movq
ret
xor
repz
iret
fwait
pop
loop
push
cltd
mov
es
ja
jp
cmpw
xchg
pop
in
xlat
ljmp
push
sub
hlt
mov
sbb
out
std
xchg
sub
adc
pop
lea
jne
int3
cwtl
fs
xchg
pop
xchg
mov
fdivrl
inc
das
mov
lds
push
sbb
iret
outsb
mov
sbbb
and
ds
xchg
add
mov
pusha
sbb
push
push
push
pop
popa
filds
fcmovne
ret
sub
in
pop
cli
stc
movsb
mov
jae
cmp
stc
mov
scas
mov
mov
and
lods
push
xor
and
neg
mov
in
ficompl
cmp
xor
sbb
test
xchg
mov
or
mov
cs
cmp
fnstcw
dec
push
fucomp
shll
or
or
cmp
mov
aam
popa
fmul
jle
xchg
lock
sbb
lcall
clc
lods
inc
ljmp
xor
dec
les
scas
ret
mov
stc
nop
cmp
sahf
jne
popa
lcall
inc
push
je
adc
mov
jmp
daa
int
pop
test
mov
push
sub
pop
ja
addr16
jb
add
push
xchg
or
adc
insb
xor
adc
cs
inc
fmuls
add
sub
xchg
out
dec
addr16
je
jmp
into
jne
push
push
inc
push
in
jne
aad
xor
je
lods
fdivrl
inc
test
sbb
push
pusha
fstpt
rorb
outsl
inc
push
lock
cmp
xchg
insb
jb
jle
or
emms
mov
and
ret
aam
sbb
jns
xchg
add
xor
dec
cmc
out
xor
in
inc
push
out
mov
push
xor
outsl
ret
sti
or
push
stc
sar
outsb
add
dec
stc
mov
ficoml
sbb
mov
inc
hlt
adc
je
sbb
idivb
fstpt
mov
pop
das
rol
xchg
out
in
sub
test
xchg
test
pop
mov
rol
fs
insb
popf
and
push
mov
ljmp
bound
push
dec
push
cmp
loope
mov
sbb
mov
enter
rcll
cmp
push
jnp
stc
adc
fsubr
orl
mov
lock
lds
adc
outsl
cmp
jecxz
add
cs
jbe
mov
and
test
addr16
rclb
sub
mov
pop
xor
hlt
lret
les
daa
test
cmp
push
pop
push
test
mov
xchg
lods
aas
mov
cmp
ret
sarl
sbb
call
into
and
jnp
clc
xlat
lcall
ds
lcall
and
loop
fbstp
add
lods
in
in
dec
popf
stc
incl
fwait
cmp
xor
arpl
cmpsb
rorl
xchg
xchg
mov
cwtl
shl
dec
imul
dec
adc
dec
subb
jl
out
xchg
sbb
into
enter
repz
outsb
mov
in
sub
in
sbb
jge
addr16
in
mov
add
mov
pop
mov
adc
outsl
ret
xchg
mov
enter
cmpl
addr16
mov
ficoml
cs
jb
dec
in
jmp
sub
adc
mov
cmp
rclb
stos
jecxz
outsb
in
stos
aas
loop
mov
in
add
lds
imul
mov
sbb
sarl
test
lret
int
mov
jno
gs
xchg
xchg
scas
dec
out
xchg
or
pop
stos
aas
push
cmpsl
mov
cs
pop
and
mov
pop
mov
pusha
pop
mov
cltd
imul
add
inc
bound
xchg
out
and
add
dec
out
clc
inc
aad
lods
loopne
and
dec
repnz
adc
pop
std
das
loopne
cmp
and
pusha
cwtl
mov
hlt
or
cmp
gs
xchg
xor
scas
bound
push
push
aad
adc
bound
test
lahf
pop
lods
push
inc
fildll
lods
xor
test
sarl
divb
arpl
fbld
or
push
scas
and
loope
and
sarb
das
in
data16
xor
jmp
loopne
pusha
pushf
cli
xor
mov
mov
xchg
into
shlb
fcoms
jne
add
add
sub
pinsrw
movsl
aaa
roll
xchg
pusha
or
outsb
fbstp
push
pop
and
push
jne
test
addr16
push
ljmp
push
or
jnp
jmp
sub
je
cs
lods
lcall
lods
adc
cmp
shlb
cmpsl
sarl
popa
sbb
aaa
testb
inc
inc
push
out
dec
std
xchg
aaa
mov
out
mov
push
repz
dec
push
sbb
insb
adcl
push
shlb
out
add
adc
icebp
mov
imul
or
lock
andb
cmp
cmp
in
sub
mov
outsl
and
pop
leave
dec
and
je
dec
xchg
and
mov
out
jae
push
and
in
test
sbb
mov
jge
negl
inc
jmp
jp
fnstsw
setb
mov
cmpsb
push
into
outsb
mov
pop
inc
mov
lea
mov
test
dec
push
iret
sub
mov
mov
xor
push
lods
insl
push
lds
pop
fadds
jl
jge
lds
jns
inc
ja
add
sbb
mov
adc
push
push
xor
stos
and
sub
movsl
ds
stc
push
push
push
jb
xor
ret
pop
insb
and
lods
int
enter
mov
popf
cmpl
in
or
aam
scas
std
not
scas
push
cltd
int
cwtl
imul
xor
adc
sbb
sub
mul
and
pop
dec
fidivrl
jno
jbe
movsb
adc
test
add
jge
mov
ja
dec
bound
sti
sub
push
aas
or
jno
insb
add
in
ljmp
nop
xchg
test
in
fsubrp
aad
sbb
addr16
push
xchg
jmp
int
jo
mov
mov
fdivrs
jmp
rorl
cmc
add
iret
jo
clc
push
lds
lock
insl
cmp
cmpsb
lock
lods
or
jbe
subb
inc
fidivl
movsl
dec
mov
icebp
jnp
push
imul
inc
sbb
or
push
add
daa
ss
add
sbb
mov
and
or
dec
and
mov
mov
les
push
jge
and
xadd
stc
add
dec
cmp
test
fbstp
jle
iret
xor
cwtl
adc
adc
mov
or
out
adc
or
mov
xchg
and
push
adc
pop
sub
repz
jl
test
ja
fucom
in
lcall
data16
pop
in
iret
ss
push
sbb
js
sarb
shr
enter
push
fnstenv
aam
leave
insl
daa
jbe
or
adc
push
sti
cmp
push
int
scas
dec
mov
push
pop
rolb
mov
jmp
cmp
mov
out
sub
daa
addr16
add
pop
nop
cmc
mov
popa
fnstenvs
mov
sbb
cwtl
add
insb
xor
push
ljmp
sahf
jl
pop
jno
mov
adc
adc
dec
cmp
mov
scas
aaa
shll
mov
and
arpl
mov
adc
inc
jle
push
popf
fldl
xchg
loope
enter
xor
push
stc
je
jl
dec
cmp
dec
pop
inc
lcall
jecxz
stos
jmp
xchg
loope
mov
lods
sbb
dec
fwait
dec
jmp
ja
cmp
movsb
xchg
cwtl
cmp
jecxz
cmp
testb
xor
rol
xchg
in
inc
mov
dec
fdiv
push
lret
inc
cmp
cmp
pop
push
jns
mov
mov
je
cmpsl
or
pop
jae
cmpl
loop
inc
or
lock
cmp
or
xchg
mov
push
das
cmpsb
add
test
sbb
and
mov
fisubrs
jno
xor
imul
mov
add
cmp
test
scas
decb
in
cmp
inc
sahf
jo
aaa
test
or
popf
push
inc
dec
ljmp
pop
and
iret
adc
xchg
jle
std
ret
xor
in
sbb
xchg
movsb
dec
sub
shll
xchg
aam
loop
add
sub
daa
stos
mov
outsl
dec
loop
and
imul
cmpsl
cmp
xchg
jmp
mov
in
dec
sub
out
aas
and
push
incb
xor
outsb
push
pop
leave
pop
xor
push
out
xchg
int
add
pop
cmp
cmp
loop
adc
xor
out
in
xor
cmp
and
fdivs
fiadds
pop
ja
xlat
jmp
adc
hlt
movsl
dec
cmp
push
pop
pop
shll
data16
int
and
fcomps
fs
mov
xor
cmp
push
push
outsb
divb
sub
lea
je
xchg
sbb
and
sahf
testb
call
cmpl
in
fcmovnbe
fidivrs
mov
cld
enter
mov
cltd
cmpsl
test
sub
addr16
xor
jecxz
mov
xchg
orl
push
jnp
push
scas
adc
out
adc
or
cld
shl
dec
push
mov
test
xchg
das
lods
adc
movsl
pop
insl
fldt
sub
and
adc
pushl
rorl
mov
dec
lret
jnp
pop
or
fwait
mov
push
jmp
add
jno
gs
adc
lock
lahf
ret
sarl
jmp
pop
fnstenv
jp
mov
mov
inc
pusha
sub
jle
mov
jmp
mov
add
inc
inc
gs
stc
mov
movsl
xchg
and
inc
push
mov
fsub
jbe
xor
sti
push
push
add
inc
lret
cmc
sub
cwtl
mov
hlt
dec
mov
mov
cmc
lahf
or
ds
xchg
jne
mov
cmp
push
insl
xchg
sti
scas
dec
mov
inc
test
sbb
inc
and
pop
jnp
pop
hlt
xor
popa
sub
fistpll
adc
lcall
lret
push
mov
pusha
or
sub
das
cltd
decb
dec
pop
les
pop
pop
test
aaa
shll
xchg
in
push
xor
cwtl
mov
pop
outsl
shl
adc
aad
jnp
in
adc
enter
jno
fs
andb
pop
outsb
lahf
add
stos
fwait
lret
add
jp
push
and
sub
add
push
lods
imul
das
push
int3
mov
mov
xor
fwait
jbe
push
fs
rorl
fldl
jo
js
imul
sbb
imul
popl
xor
rcl
lret
les
mov
test
inc
leave
incl
mov
pop
jecxz
cmp
jns
jbe
sti
adc
lahf
cltd
andb
xlat
jo
jo
jb
pop
xchg
xor
cli
cmc
lea
add
xor
fmull
jmp
ss
or
mov
out
add
std
mov
and
push
rcll
mov
or
mov
jp
jae
call
js
sbb
jp
ljmp
inc
imulb
adc
or
mov
push
lea
sahf
test
inc
jmp
aaa
lds
pop
xor
cmp
ja
mov
pusha
jp
mov
clc
mov
inc
insl
sub
insl
cmp
push
jle
outsb
enter
mov
in
sbb
fsubs
enter
push
imul
and
jle
mov
subl
rorb
and
sbb
test
pop
hlt
mov
hlt
mov
pop
mov
in
inc
sub
xchg
out
aam
add
sbb
or
notb
aad
sbb
and
push
je
popf
inc
pop
fsubr
mov
and
outsb
test
xchg
jnp
and
cmpsb
xchg
out
sbb
scas
repz
test
jge
inc
sbb
mov
leave
repnz
shl
add
mov
in
add
xor
outsb
call
pop
pop
sub
divl
mov
sti
lds
mov
movsl
or
aam
pusha
popf
in
xchg
sbb
ss
and
out
cmp
ja
jne
sahf
xchg
adc
xor
out
pop
mov
pop
clc
mov
mov
xor
jbe
inc
popa
xchg
xor
sub
sahf
jo
dec
jg
push
lods
pop
out
sbbb
adc
subb
dec
bound
and
push
push
imul
xor
lods
adcb
mov
lret
and
imul
push
xchg
mov
xchg
and
lahf
sub
rcll
inc
in
clc
mov
mov
outsl
scas
in
xchg
in
imul
sbb
bound
dec
stos
mov
addr16
pop
jns
scas
jb
sbb
mov
sbb
jns
lods
inc
arpl
call
mov
fwait
and
lock
stos
push
sbb
sub
cmp
es
jge
jae
aam
sub
mov
in
xor
xor
sbb
and
inc
sub
je
sbbl
cmp
ljmp
lds
mov
pop
pop
int
ds
gs
in
push
aas
sbb
xor
push
loop
out
add
inc
mov
add
out
call
fs
fadds
and
iret
in
cmp
out
jns
sub
sbb
hlt
loopne
sub
popf
jns
adc
pop
adc
repnz
jns
cmc
dec
sub
pop
push
in
test
outsl
inc
movsb
jno
nop
push
lret
push
fmul
and
adc
sbb
inc
int3
outsl
out
cmp
arpl
pop
ss
aad
xchg
jb
inc
fidivrl
fsubrp
dec
add
and
xor
pop
gs
shrl
xchg
add
in
add
in
xor
insl
or
mov
lahf
pusha
scas
xor
xorl
lret
push
les
push
xor
les
les
jle
or
xor
or
enter
je
imull
lods
cmp
fstps
inc
push
or
inc
jno
xor
in
cwtl
sub
int3
leave
xor
dec
lods
sbb
xor
mov
out
and
ret
lds
lods
scas
out
cmc
sahf
int3
popa
lods
es
cld
inc
pop
pslld
lods
pop
fdivrs
xchg
fidivl
sub
cmp
push
js
aas
nop
fdivrl
inc
fmulp
mov
xor
fidivrs
pop
sub
cmp
in
cmp
iret
orb
test
cmpsb
nop
call
sbb
outsl
xchg
mov
mov
call
cli
rcl
sbb
fwait
jmp
mov
lret
push
je
lods
add
gs
cli
fwait
xchg
mov
sub
mov
lcall
jmp
dec
xor
dec
rcrl
xchg
mov
add
and
xor
mov
dec
cmp
ljmp
xor
movsb
push
jbe
notb
pop
sub
fldenv
jae
gs
daa
test
push
pop
scas
test
lods
fldt
je
or
pop
xchg
dec
test
xchg
mov
sbb
iret
mov
jne,pn
rcrl
mov
icebp
adc
js
frstor
mov
add
or
test
mov
test
push
mov
imul
mov
sarb
mov
push
sbb
mov
jp
sub
hlt
jnp
rolb
push
xchg
jno
enter
stc
push
dec
aad
popf
dec
ja
mov
xlat
mov
test
or
test
ret
leave
pusha
dec
xchg
das
cmp
push
inc
mov
loope
jecxz
sub
pop
fnstcw
adc
int
mov
pop
sbb
ret
inc
popa
stos
ljmp
jmp
sbb
aas
pop
sub
pop
sub
push
jmp
ficoms
call
arpl
cmp
pop
push
nop
adc
push
or
adc
push
and
mov
cs
fnsave
js
xchg
mov
xchg
subl
pop
mov
jbe
mov
fdivrl
mov
sar
sbb
jbe
push
pop
rorl
add
ja
mov
faddl
or
test
add
pusha
das
sub
mov
stc
inc
jg
add
imul
dec
dec
addl
or
mov
sub
iret
in
inc
sub
cmp
jecxz
mov
xorb
daa
sbb
enter
test
mov
nop
cmpl
add
fwait
inc
repnz
inc
cmp
popf
sub
fwait
or
push
and
decl
jbe
push
sahf
sbb
inc
leave
inc
movsb
jno
stos
out
fcomp
rcr
dec
outsb
sub
mov
fadds
lds
nop
in
mov
dec
adc
add
popf
je
pop
pop
adc
lahf
sti
pop
xchg
dec
add
nop
insb
les
stos
out
push
mov
mov
inc
xlat
cld
scas
mov
and
pop
dec
adcb
mov
addr16
sub
cli
lret
stc
scas
andl
cld
cmp
inc
mov
dec
fidivs
lock
repnz
push
mov
and
je
sbb
cwtl
fucomi
cltd
xor
cmc
out
and
daa
jnp
jae
adc
pop
hlt
push
cld
dec
or
mov
sub
adc
repnz
cmp
shl
adcb
dec
sti
cmpsl
dec
fsubl
xchg
mov
ljmp
ret
push
sub
pusha
push
bnd
lock
pop
cltd
push
sbb
add
dec
jo
sub
or
jne
cs
enter
push
or
jns
stos
mov
cmpsb
fldt
jns
mov
push
gs
sbb
inc
dec
mov
pop
jge
mov
jge
add
out
movsl
lds
test
ss
ret
mov
mov
xor
sub
mov
ret
aam
and
lmsw
mov
jne
xor
jle
jae
movsl
dec
xchg
pop
and
pop
jne
sti
xorb
ficoms
sub
jo
pop
sbb
or
pop
jmp
incb
pop
scas
aas
push
pop
jno
out
mov
adc
jle
cmp
pushf
fs
inc
pusha
add
repnz
jo
out
dec
sbb
outsb
xor
aam
pusha
enter
fisubs
xor
leave
int
mov
pop
ret
mov
push
sbbb
lods
les
push
leave
mov
fstp
int
pop
repnz
movsb
pop
mov
adc
bound
lock
adc
jmp
jg
inc
pusha
movsl
push
hlt
cmp
stos
push
rcr
outsl
les
jno
ljmp
testl
popf
dec
jecxz
les
subl
sub
mov
jno
sbb
cmp
andb
mov
shll
repnz
inc
fmul
add
xorb
jge
adc
clc
or
jb
lcall
jne
jae
je
daa
cwtl
data16
or
js
mov
js
lods
mov
jecxz
push
sti
mov
inc
xor
xchg
push
adc
xchg
sti
addb
decb
shll
pusha
dec
adc
leave
adc
les
fiadds
mov
sub
sub
inc
sarl
fnsave
arpl
ret
sbb
xor
pop
adc
loopne
mov
pop
fmul
mov
or
arpl
push
dec
add
cmpsb
and
dec
sub
xchg
mov
ret
sbb
ret
cwtl
or
push
mulb
mov
clc
xor
pop
rorb
xchg
mov
pop
repnz
loop
pop
fistpl
jns
jge
cltd
aaa
xor
mov
in
test
mov
mov
mov
mov
repz
call
xchg
cmpsl
xor
addr16
dec
sbb
lea
inc
ja
xor
nop
push
xchg
adc
fstps
outsw
and
cmp
mov
sbb
lea
ljmp
shr
push
dec
pop
lds
mov
fldl2t
fnstcw
es
xor
cli
push
int3
sub
out
pop
int3
fimuls
decb
push
arpl
xchg
pop
les
pop
jge
es
lea
mov
getsec
stos
cmp
test
and
and
add
push
xor
stos
fstps
xor
push
or
ljmp
jnp
dec
inc
divb
std
daa
addr16
xchg
inc
ret
aam
cld
clc
adc
add
dec
outsb
sub
ss
imul
pop
or
scas
dec
movsb
push
jno
daa
mov
test
xchg
cmp
jecxz
add
in
or
out
ret
sbb
mov
sub
xor
mov
rcr
add
push
hlt
jge
jns
jmp
lret
push
orl
idivl
fcoms
push
int3
adcl
imul
adc
mov
adc
pop
cmp
cmc
sbb
dec
repnz
testb
mov
stos
inc
pop
iret
push
test
jo
jne
dec
adc
cmp
mov
cmp
mov
sbb
cs
xorb
jbe
dec
test
cmp
jg
les
mov
mov
test
ds
repnz
xchg
loop
fcomip
fwait
mov
cld
mov
lret
rolb
fcmovnu
pushf
loope
push
or
mov
ret
hlt
mov
ret
insl
movd
out
mov
add
dec
and
push
test
pop
lods
mov
mov
jne
jne
cmp
mov
or
outsb
leave
jae
ret
imul
stc
mov
movsb
dec
out
repnz
mov
lds
popa
sbbl
pop
cmp
lds
jg
xchg
repnz
in
lea
pop
loop
ret
ds
aaa
repnz
dec
add
les
mov
enter
icebp
stos
adc
clc
or
sbb
sbb
mov
es
int
or
dec
or
in
fidivs
jae
scas
gs
add
fistps
mov
inc
clc
or
cmp
jae
insl
vmulps
xor
pop
sbb
out
rol
jp
test
in
std
sbb
mov
lds
aam
cmp
xchg
subb
es
leave
dec
dec
inc
and
js
xchg
sahf
cwtl
inc
pop
lret
and
scas
lods
inc
loope
sub
dec
aam
cmp
fwait
xor
mov
xchg
xor
jp
pushf
stos
mov
and
popa
in
jns
out
popa
sub
jle
cltd
cmc
or
ficoms
fnstsw
mov
shll
pop
into
lret
xchg
push
inc
flds
ljmp
xor
dec
adc
jmp
inc
xor
test
dec
mov
add
addr16
jae
xchg
or
push
mov
jmp
mov
fcmove
inc
adc
xor
sub
pop
es
push
push
dec
bound
fbstp
negb
dec
outsl
jle
pop
out
int
hlt
inc
bound
fildl
xor
sbbb
xlat
lcall
mov
pop
adc
fisubrl
in
sbb
jae
push
push
ret
aas
das
lds
or
xchg
sbb
in
dec
cmp
divb
mov
cmp
cmc
or
repz
dec
mov
fistl
sti
push
inc
mov
cmp
push
fidivs
xchg
in
mov
and
mov
and
loope
movsl
gs
mov
nop
pop
mov
mov
data16
outsl
ret
mov
push
icebp
mov
push
into
or
insl
inc
inc
sub
jae
jp
jle
fnstenv
cs
pop
test
jb
into
scas
jno
addr16
je
rorb
xlat
popa
and
outsl
push
sub
jecxz
dec
inc
repz
inc
nop
mov
cmp
sub
ljmp
push
push
xchg
inc
cli
add
rorb
fstl
push
aad
rorl
pop
xchg
adc
stc
jp
add
or
mov
cli
sbbl
or
push
out
fsubl
sbb
cmp
push
lea
inc
jl
stos
jne
sbb
orl
shrb
shrb
xchg
das
mov
jo
popa
xchg
xor
ds
push
scas
enter
dec
lods
stos
test
xlat
dec
pop
or
push
les
fcomps
daa
jecxz
mov
loope
pop
notb
cltd
jge
inc
jnp
hlt
repz
adc
adc
fisubl
and
mov
int
inc
test
cmp
mov
push
sbb
popl
popf
or
pop
test
push
push
push
mov
add
test
or
mov
shrb
lds
loop
jae
sahf
scas
add
jmp
inc
push
and
iret
or
jl
fiadds
jg
xchg
mov
aam
mov
mov
inc
in
push
lahf
inc
psubsw
loopne
push
in
cmp
lds
add
test
push
or
mov
mov
pushf
outsl
mov
pushf
aas
mov
pop
ds
insb
daa
mov
push
xchg
push
mov
fistps
mov
mov
mov
fisubs
scas
scas
inc
loopne
loope
jp
cmpl
fdivrp
push
xlat
gs
insb
imul
push
add
jp
cmpsl
mov
jl
cmpl
lret
sub
bound
insb
mov
mov
xchg
xchg
mov
std
inc
fldcw
int3
pusha
pop
pop
or
adc
cmp
adc
mov
cmp
scas
sub
sub
push
int3
mov
xorb
out
mov
imul
lock
loope
fistps
xor
enter
mov
sbb
ss
mov
push
mov
pop
test
mov
mov
sbb
repnz
inc
leave
mov
or
mov
mov
fsubl
sub
incl
popf
jno
sub
dec
inc
idivl
and
mov
mov
mov
mov
sbbl
ds
xchg
dec
enter
mov
int3
pop
adc
movsbl
jge
test
dec
mov
xchg
xorl
out
pop
or
dec
outsl
repnz
jge
xchg
sbb
filds
testb
nop
mov
push
mov
sti
or
ficoml
pop
test
je
cmpsl
push
or
xchg
lods
das
mov
add
fpatan
adc
fs
jp
gs
je
pop
mov
jl
hlt
ss
cmp
scas
jp
pop
pop
mov
mov
mov
mov
cltd
fucomp
lret
out
aas
pop
push
pop
and
xchg
ss
idivb
sbbl
jns
and
stos
sub
imul
shl
or
hlt
pushf
pop
daa
push
push
jne
sbb
rcrb
rcrl
in
aas
enter
cmp
xchg
sbbl
fidivl
cld
dec
pop
sbb
lcall
or
notb
das
sti
popf
loope
hlt
cmp
decb
std
cltd
shll
mov
and
inc
pushf
or
and
pop
cld
inc
mov
int
jg
inc
scas
cmp
sbb
mov
or
mov
mov
dec
sti
aaa
and
mov
xchg
dec
test
dec
cmpsl
loope
cwtl
bnd
mov
loop
xor
mov
hlt
xchg
sub
inc
mov
jb
cs
jmp
push
loope
pop
lock
sbb
sahf
sbb
test
mov
jp
imul
aam
mul
pusha
je
lcall
mov
xchg
cmpsb
mov
add
and
xchg
lahf
rcrb
sbb
add
fcomps
lods
lds
test
adc
mov
insb
xor
pop
and
ds
cmp
iret
call
adc
stos
test
jb
jbe
push
loop
fs
leave
push
xchg
sub
inc
cld
pop
aam
or
lea
cmp
arpl
cmc
adc
pop
cmp
or
cmpsl
lock
pop
lods
movsl
mov
scas
aaa
jno
inc
and
add
out
fidivl
ja
push
out
mov
dec
or
mov
sub
sub
push
movsl
repnz
jle
iret
and
sub
xchg
lods
int3
ret
shll
mov
pop
loopne
dec
pop
cmp
push
cmp
mov
int
xchg
call
mov
imul
rorb
push
pop
cmc
subb
adc
jmp
xchg
inc
in
jg
fbld
xchg
enter
mov
adc
enter
cmpsl
ds
cld
lcall
in
or
shlb
add
xchg
sub
cmp
outsb
push
sbb
push
push
mov
sub
cmpsb
scas
ja
stos
lods
inc
cwtl
ss
adc
pop
inc
xchg
stos
jp
jmp
testb
cld
jmp
repz
cwtl
mov
enter
int
sbb
addr16
lret
clc
adc
jge
int3
jno
ret
adc
push
data16
inc
lea
out
aam
scas
test
mov
sbb
popf
push
call
pop
cltd
outsl
push
mov
jge
shlb
adc
dec
mov
lock
xlat
xchg
sub
jae
imul
mov
sbb
pop
and
roll
inc
mov
fxch
cmpsb
mov
cli
jbe
sub
negl
push
mov
push
dec
stos
call
popf
loop
fwait
shrl
lods
inc
lock
popa
repz
lret
bound
das
arpl
sarb
sbbl
pop
pop
cs
cltd
cmp
pop
mov
ret
in
test
cmp
cltd
pop
mov
sub
scas
inc
outsl
mov
int3
arpl
cltd
pop
mov
sbb
lcall
push
xchg
jne
xchg
sarb
cmpsl
ss
push
push
in
les
sub
mov
pop
ljmp
adc
aad
aaa
into
push
out
out
inc
lret
pop
mov
lock
int
scas
adc
xor
fmul
test
jb
popa
scas
outsl
push
and
pop
mov
dec
and
jno
mov
aam
xchg
hlt
inc
push
adc
ret
clc
loope
adc
test
leave
jecxz
lea
lret
jg
packuswb
xchg
daa
shl
or
push
fimull
push
jnp
jmp
aad
mov
cld
movsl
stos
xor
cmp
xchg
fistps
js
lret
xor
pop
cmp
mov
rcrb
add
jmp
shl
cmc
test
es
add
mov
push
lcall
sub
lea
stc
jae
push
call
xchg
imul
inc
xor
js
mov
stos
pop
mov
cmp
and
int3
jb
ljmp
jge
lahf
sub
mov
in
inc
jb
orl
push
movsl
push
insb
add
mov
sbb
or
xor
cmpb
and
mov
lods
sbb
dec
test
clc
xchg
andb
cmp
jbe
aas
inc
shrb
aad
leave
mov
out
cld
aas
lret
data16
adcl
sbb
pop
jp
pop
cmpsl
into
insl
orb
pop
dec
mov
loop
xchg
jo
lock
fistpll
jbe
xchg
pop
cmp
insb
jae
sets
cld
subl
mov
inc
pop
fwait
xor
popf
cmp
xchg
pop
cmp
lea
fcmovu
test
outsb
add
lods
sbb
mov
lods
add
adc
mov
push
stc
iret
adcb
dec
pop
jno
inc
addr16
inc
into
mov
iret
data16
hlt
clc
mov
js
outsb
mov
int
jns
add
inc
fsubs
pusha
xor
cmp
ficompl
mov
ss
jmp
push
sbb
insb
sbb
or
popa
mov
push
cmpsb
addr16
shrl
stc
mov
add
add
in
cmp
cmc
add
jmp
cmp
xor
xchg
out
add
mov
ret
add
pushf
pop
sub
sahf
jns
pop
out
clc
and
pop
stos
xchg
fnsave
or
ds
push
sbb
data16
rcl
pop
jb
test
sub
xor
xchg
mov
xorl
in
lds
dec
mov
jno
cmp
pusha
jge
push
and
jmp
mov
push
push
mov
mov
outsb
mov
or
jno
xchg
movsb
jns
jns
or
mov
icebp
xor
fisubrs
and
or
mov
shl
sarb
out
sahf
add
das
fldt
sub
addr16
sub
leave
pop
loopne
aaa
mov
jbe
fimuls
repz
jmp
es
mov
rcll
in
mov
add
cmp
shlb
mov
push
or
mov
ret
cmp
cmpsl
imul
jo
mov
push
cmp
add
adc
sar
sbb
shl
orl
and
add
add
dec
orl
imul
jno
inc
jmp
jp
adc
ja
ljmp
xor
jno
mov
ja
push
push
insb
dec
pop
sahf
jb
repz
fistpl
ret
bound
popf
sub
and
std
out
mov
negl
dec
adc
mov
int
cmp
xlat
cmp
std
sub
adc
int3
pop
xor
fisubl
inc
aam
popf
fs
enter
dec
aas
sti
loop
fcomps
sbbl
jl
je
mov
inc
mov
push
int3
fbld
ret
aas
fisttpll
or
and
imul
aam
incl
cmp
fidivrl
dec
or
xor
dec
xchg
loop
aaa
add
inc
or
fdivs
dec
movsl
cmc
mov
movsl
push
jecxz
roll
imul
movsl
mov
mov
xor
imul
sub
and
xlat
repz
and
inc
mov
xor
push
cmp
test
cmc
dec
fisubl
mov
test
mov
push
inc
mov
test
cs
fs
pop
daa
sbb
insb
loopne
lahf
stos
xchg
xor
es
sbb
dec
push
cmpsl
ret
test
fwait
mov
fdivs
in
ret
pusha
mov
loop
mov
popa
imul
mov
xchg
fadd
out
cmc
and
or
aad
inc
pushf
fisubs
and
jbe
lea
gs
push
jge
or
xchg
pop
xorl
scas
mov
and
ror
dec
movb
xchg
jmp
mov
hlt
cmp
cs
xchg
pop
mov
add
call
rcll
jp
stos
sbb
sbbl
ljmp
fstps
sbb
jge
mov
loopne
rclb
out
adc
pop
inc
push
sub
and
cmpsl
ds
outsb
pop
ljmp
push
push
pop
out
insb
sbb
lock
mov
adc
mov
push
xor
stos
enter
into
pop
jmp
mov
xor
scas
aaa
push
out
sti
stos
mov
xchg
add
pop
in
push
cmp
jmp
rorl
cwtl
xchg
mov
inc
mov
add
lods
out
orl
jmp
mov
shl
jmp
mov
daa
outsl
sub
dec
mov
cmpsb
xor
cmp
popa
data16
jmp
sbb
dec
jns
pop
push
xor
jmp
xchg
push
in
jmp
fidivrl
orl
repz
clc
and
adc
pop
movsl
arpl
ds
mov
adc
cmc
jo
xorl
bound
ljmp
and
or
or
frstor
outsb
pop
jae
imul
cmp
pop
lock
mov
mov
fildll
xchg
cmc
push
and
push
inc
ret
xor
lods
jnp
lret
cld
mov
test
lret
pop
or
shll
popf
sahf
inc
xchg
jnp
sub
inc
frstor
ret
ds
pop
popf
daa
inc
xchg
les
repnz
ljmp
pushf
mov
scas
call
filds
addr16
inc
loop
lds
loopne
inc
nop
xchg
add
sub
imulb
mov
cs
mov
fstpt
sti
mov
mov
ret
dec
cs
mov
sbb
dec
nop
add
push
and
adc
jno
fs
sub
fwait
es
mov
mov
call
cmp
notb
or
pop
sbb
stc
rcl
mov
mov
repnz
pop
in
scas
fcomip
mov
leave
xchg
in
jle
std
pop
int
dec
fisubrl
push
lcall
jmp
cwtl
iret
mov
mov
out
mov
push
fnstsw
mov
lret
mov
in
into
and
jnp
inc
push
mov
pusha
and
push
xchg
in
stc
mov
out
adc
inc
call
out
jb
mov
rorb
xlat
jge
jmp
cltd
jg
cmc
or
jl
xor
notb
xor
adcb
stos
in
jle
frstor
mov
mov
jle
xchg
lods
pop
lds
push
xor
lods
imul
int3
roll
jns
jns
sti
push
cmp
or
jmp
inc
sbb
add
bound
scas
xorl
add
popa
repnz
test
std
js
xchg
push
gs
jmp
jb,pt
sti
fwait
push
mov
jmp
sbb
inc
sbb
cmp
jecxz
ja
and
or
pop
jmp
into
xchg
jge
sarl
mov
test
call
pop
out
mov
popa
xor
hlt
adc
jo
mov
je
inc
mov
adc
bound
push
dec
in
push
vpmaxub
out
sti
adc
cltd
or
mov
enter
add
pop
sbb
lea
mov
dec
ljmp
or
or
inc
test
shl
mov
cmp
daa
ret
jp
mov
dec
adc
out
jo
and
dec
loop
rcrb
cmp
mov
rcrl
xor
insb
shlb
cltd
mov
lds
jg
out
popf
lahf
notl
shlb
in
insb
pop
push
das
setge
mov
xorl
jle
fistpl
jge
int3
cld
enter
jns
lret
cmp
in
dec
sti
pminsw
jo
pop
jne
fwait
jb
sbb
cmp
int
pop
pop
imul
mov
mov
jmp
sub
aas
leave
loop
loopne
ljmp
jne
mov
mov
adc
cmp
enter
mov
in
push
fisttps
push
xor
xchg
push
jns
fldl
mov
out
pop
cmp
je
dec
mov
inc
jae
gs
fidivrl
hlt
subl
pop
repz
les
mov
lods
and
mov
movsb
pushl
stos
mov
or
clc
mov
clc
test
std
xor
or
stos
aas
or
cs
pop
lea
add
xchg
mov
xchg
icebp
mov
dec
popa
sbb
ja
push
xor
pop
add
sub
fiadds
mov
fildll
jecxz
popa
add
movsl
ret
jp
enter
nop
data16
out
sub
mov
mov
and
ds
xchg
negb
mov
xor
mov
or
inc
ret
fbstp
mov
sti
mov
adc
ret
push
cmpsb
decb
shrb
fdivs
mov
out
adc
cmpb
insb
jmp
enter
xor
inc
sarb
leave
int
fwait
pop
out
sarb
push
push
xorb
je
xor
xlat
fisubl
test
mov
popf
sahf
dec
scas
xor
mov
push
fbstp
leave
xchg
push
ret
sbb
cmc
adc
ss
out
pop
xchg
das
mov
jecxz
jbe
jno
mov
rolb
xchg
mov
jp
sub
or
pop
lods
lcall
xchg
and
das
stos
out
fwait
cld
jg
mov
out
jl
sub
stc
xchg
mov
dec
mov
sbbl
xor
jle
imul
xchg
cmp
js
hlt
lahf
push
ljmp
ss
hlt
dec
push
call
inc
movsl
dec
pop
xlat
out
xor
inc
inc
scas
or
mov
add
add
fwait
push
out
jmp
dec
push
sbb
lret
xchg
jle
jae
or
repz
cwtl
das
adc
ss
out
out
cld
xor
or
and
clc
popl
fstpl
pop
repnz
push
adc
mov
lods
mov
cmc
sahf
pop
sti
cltd
in
in
mov
les
sbb
mov
xchg
mov
les
mov
ljmp
and
sar
dec
xorl
push
adc
imul
mov
lock
popa
lcall
fwait
inc
inc
test
mov
cmc
mov
test
std
sub
arpl
ret
sbb
hlt
pop
ljmp
pop
push
fmul
ret
dec
dec
jp
pop
add
push
push
xchg
fwait
lea
out
and
sti
push
xor
sbb
bound
xor
xchg
gs
sbb
jb
xor
or
jmp
pusha
xchg
cmp
dec
clc
out
orl
xchg
jp
xchg
lods
repnz
arpl
stc
sbb
push
sbb
xchg
jecxz
mov
fcoms
or
loopne
xchg
int3
jle
js
dec
cmp
lea
push
mov
lahf
inc
jb
test
pop
mov
xchg
mov
or
mov
and
mov
dec
push
jnp
loop
jb
sub
js
cltd
mov
lret
pop
rolb
in
aam
cwtl
cmp
push
insl
stc
pusha
negl
imul
pop
xor
xor
in
sbb
jge
cltd
insl
lret
loopne
es
push
mov
push
aaa
std
sbb
xor
lds
pop
insl
das
or
mov
leave
jae
or
mov
sahf
lods
inc
pop
xchg
into
test
movsb
orl
and
fnstsw
jmp
dec
push
stos
repnz
or
addr16
fldenv
push
jbe
inc
fwait
mov
ret
lret
mov
ficoml
icebp
out
fstpl
mov
repz
cltd
mov
cld
and
inc
in
gs
and
idivb
in
or
inc
mov
sbb
rcll
cmp
and
test
popf
or
lods
xor
test
xor
add
in
or
cmp
inc
shrl
and
cmpsb
cmp
mov
dec
sub
xchg
pushf
outsb
in
inc
cmp
mov
sub
xchg
xor
push
jecxz
sub
adc
cltd
add
sbb
sub
fsubl
pop
or
pop
outsl
push
and
push
fwait
inc
mov
ja
out
fs
cwtl
push
inc
arpl
mov
adc
xor
ljmp
popf
ja
ljmp
lods
push
data16
pop
std
fldl2t
and
ds
fdivrp
or
xchg
add
xchg
sub
inc
mov
mov
outsl
rclb
and
aad
bound
xchg
push
enter
sub
pusha
out
movsl
daa
jmp
mov
insl
les
adc
mov
iret
test
or
push
stos
sub
loopnew
adc
xchg
test
adc
hlt
stos
mov
mov
shll
jb
lds
dec
pop
mov
push
mov
dec
mov
mov
add
std
mov
adc
add
jne
in
mov
or
pop
xor
sarb
cmp
imul
adc
int
pop
inc
mov
and
scas
popa
cmpsl
mov
mov
out
aam
xchg
push
push
xlat
test
mov
fcmovbe
das
add
or
mov
cwtl
adc
jge
mov
or
jns
lcall
sbb
aam
pop
mov
repnz
cmp
adcl
sbb
ds
fistpl
fucomip
fwait
test
je
ja
xchg
in
mov
mov
aas
gs
dec
je
adc
mov
jle
xor
xor
std
mov
sbb
mov
aas
lock
addl
gs
lcall
inc
clc
pop
repnz
dec
loopne
daa
lcall
dec
loopne
bound
js
test
stos
es
sub
out
sbb
jbe
xlat
jle
adc
fidivrs
addr16
push
dec
hlt
mov
add
jbe
or
testb
sub
cs
js
dec
outsb
jl
cmp
dec
dec
arpl
inc
xlat
pushf
xchg
inc
or
cmc
jecxz
scas
xchg
push
jnp
out
mov
sbb
xor
fimull
cmp
sti
xchg
icebp
ja
shl
fnstenv
leave
inc
or
movsb
test
mov
in
cmp
adc
leave
lods
push
jno
shlw
clc
rorb
pop
sub
es
inc
std
push
or
es
lea
adc
inc
sbb
repz
mov
mov
jmp
or
addb
loope
flds
lahf
dec
aam
movntps
cwtl
cwtl
ret
lods
jbe
inc
les
test
add
pusha
ss
cld
or
mov
xor
je
dec
pop
in
and
out
repz
mov
sbb
out
cmp
adc
mov
clc
xor
sub
xor
lcall
or
mov
aam
ja
jnp
lock
es
lods
jbe
imul
xchg
cmp
je
inc
ja
pop
cmp
pop
icebp
jge
add
mov
push
scas
test
ds
push
test
mov
push
mov
mov
xchg
dec
test
push
stos
bound
cltd
daa
mov
repnz
pop
mov
or
push
outsl
in
fisubrl
shlb
test
daa
out
jns
shl
fcompl
ds
and
inc
jb
lods
ss
ja
cltd
sub
mov
fsubrl
lods
cmpsb
pop
jmp
or
pop
adc
cmpsb
mov
jo
sub
loope
push
or
push
jb
call
movsl
mov
mov
xchg
inc
pusha
std
in
and
xchg
and
loope
mov
add
mov
scas
push
push
xchg
cwtl
arpl
cli
jecxz
sahf
into
and
jo
bound
pop
and
loop
aaa
gs
negb
and
add
fstpt
sbb
ss
sub
adc
leave
inc
divl
scas
pop
repnz
popa
es
pop
mov
pop
push
xchg
xchg
dec
mov
jb
iret
cwtl
pop
outsb
into
mov
popa
add
pop
adc
ret
mov
cmp
jg
jb
sbb
dec
xlat
adc
push
incl
inc
cli
lea
lds
mov
popf
push
mov
pop
xchg
dec
dec
scas
pop
sbb
pusha
mov
push
pop
icebp
rclb
aaa
or
js
or
push
dec
idivl
push
lret
jmp
lock
cmc
jo
data16
push
push
outsl
in
xchg
jle
push
mull
jno
dec
popa
or
pop
and
dec
movsl
cli
testl
cli
jne
cmp
loop
xchg
adc
lock
scas
sub
movsl
sti
or
mov
movsl
mov
les
sti
and
mov
push
imul
stc
popa
icebp
inc
fs
jno
cmpl
cld
repnz
cli
cltd
adc
and
fcomps
pop
mov
jle
cld
xchg
cmp
test
aas
sub
out
xor
fnsave
xchg
arpl
cmp
jbe
mov
fisttpl
xor
sbb
cmpsb
aaa
bswap
mov
scas
mov
loopne
outsl
loop
lds
hlt
push
sub
xchg
mov
notl
sbb
xor
bnd
jnp
cmpsb
push
push
stos
sbb
cmp
push
jo
popf
repz
jle
out
lcall
int
cmp
push
mov
sub
mov
jmp
jg
test
loop
icebp
mov
repnz
adc
data16
aas
imul
cmc
dec
sbb
jp
out
aam
clc
xchg
stos
sub
push
in
sub
xchg
pop
mov
adcb
flds
imul
mov
xchg
sub
jno
jo
stc
xchg
sahf
xchg
popl
cmp
mov
lds
mov
jnp
fidivs
lret
dec
xor
adc
adc
out
jb
xor
fldcw
loope
adc
ficompl
ret
push
push
sbb
scas
dec
cmp
js
jge
add
daa
aad
int
dec
jb
jno
outsl
icebp
lcall
or
out
shrb
or
xchg
dec
jge
sub
je
jp
pop
mov
mov
divb
mov
pop
lret
rcrl
and
push
inc
add
hlt
arpl
lds
cli
xchg
aam
cmp
sbb
sbb
push
cmp
pop
xchg
rol
fwait
ret
mov
sbb
sub
dec
pop
sub
cmp
cwtl
test
cmp
push
out
dec
js
sub
add
mov
fstpt
pusha
pop
bswap
xchg
xor
push
cs
out
movsb
push
add
sbb
popa
test
lods
sbb
std
ss
fsts
or
mov
xor
xor
les
movsb
cmp
dec
jmp
push
ret
push
shl
dec
pop
mov
jae
pop
sub
mov
jle
mov
push
adc
adc
jbe
and
or
or
nop
jmp
test
and
sbb
scas
sbb
insl
jge
or
out
imul
rolb
or
loope
test
loopne
daa
adc
scas
inc
aas
aam
mov
sahf
clc
pop
leave
idivb
mov
sub
push
lods
dec
lcall
pop
iret
insb
cld
pop
dec
push
sub
jno
pushl
sbb
es
cmp
push
jnp
adc
pop
mov
inc
cmp
push
fdivl
push
lods
lea
adc
dec
mov
sbbl
je
loope
xor
bound
inc
sti
adc
cmpb
xchg
jb
fnstsw
dec
daa
mov
inc
push
jl
or
jbe,pn
sub
loope
or
stos
fwait
and
insl
cltd
xor
aam
ds
outsl
mov
and
pop
in
test
jge
xchg
movsb
ljmp
mull
mov
popf
jns
jmp
sbb
data16
pop
pop
sub
out
pop
push
bound
push
xor
rolb
inc
fisubrs
bound
loope
gs
inc
lcall
jae
hlt
imulb
int3
pop
sti
pop
jle
mov
push
scas
mov
cmpsl
xchg
adc
pop
and
inc
xor
call
adc
outsb
add
aaa
fstps
lcall
adc
adc
loopne
andb
mov
decb
dec
bound
test
dec
sbb
mov
scas
popl
xor
ret
bndstx
fs
pop
push
es
xor
mov
pop
push
in
insb
popf
adc
pop
mov
cmp
jl
jle
aam
sarl
fistpl
mov
fnstcw
or
xchg
mov
mov
dec
divb
dec
inc
fisttpll
xor
mov
fildll
sarb
sarl
jle
repnz
or
jl
sbb
ret
pop
push
mov
sub
mov
ja
xchg
je
leave
sub
sbb
or
dec
lret
inc
add
shrb
jnp
cmp
mov
push
xor
pop
mov
loop
sub
cli
xchg
push
int3
dec
stos
js
sbb
sub
data16
inc
dec
and
loope
mov
mov
pop
ja
outsl
mov
fistpl
pusha
sub
push
mov
fists
enter
ds
adc
and
js
dec
ja
push
imul
clc
pop
loopne
jle
pop
in
or
mov
mov
decl
mov
stc
mov
ret
inc
mov
jl
jge
xchg
and
mov
ret
pop
adc
in
adc
sub
pop
and
xchg
call
mov
xchg
dec
scas
call
loopne
ljmp
add
es
ret
lods
jbe
lods
mov
jecxz
and
clc
ret
hlt
sbb
ja
or
rcrb
pop
das
or
add
mov
shl
insb
and
repnz
sub
movsl
icebp
mov
pop
adc
xor
pop
dec
inc
or
jle
inc
adc
rcr
jmp
test
arpl
insb
idivb
rol
repnz
icebp
rcl
pop
xchg
daa
ss
mov
adc
xor
jp
push
fs
push
das
js
mov
fs
cmc
mov
adc
test
pop
mov
out
or
adc
push
iret
mov
bound
rorb
in
jmp
pop
scas
out
aad
jecxz
aas
stc
add
sbb
sbb
dec
leave
jb
mov
push
adc
movsl
xchg
fidivrs
imull
adc
inc
lret
lds
popa
movsb
xchg
jno
xorb
adc
pop
mov
out
xchg
or
stos
and
enter
cwtl
insl
movsb
nop
cmpl
adc
test
outsl
jmp
or
or
shr
cmp
loop
sahf
test
and
inc
mov
fcmove
and
pop
push
sbb
push
jb
loope
add
les
rorl
push
movsb
lret
and
jb
cmpsb
in
clc
cmp
adc
mov
and
ret
hlt
ficompl
or
jnp
fwait
fwait
jae
cld
ret
jne
jp
add
mov
mov
mov
jo
negl
mov
in
dec
dec
popf
lods
mov
out
add
movsb
inc
mov
pop
sub
fadds
and
dec
loop
fwait
clc
sahf
mov
dec
call
pop
cmpsb
or
jle
filds
andl
lock
mov
adc
cmp
jno
xchg
stos
sbbl
mov
into
cld
jle
pop
and
and
cmc
call
xor
mov
incl
or
enter
pop
nop
daa
mov
pop
lcall
and
jo
inc
pop
insl
mov
xchg
andl
mov
adc
and
xor
mov
fisttpl
fs
test
xor
ret
ds
cmp
test
sub
subb
pop
ret
lods
aad
xchg
xchg
out
sub
jle
subl
push
dec
adc
or
pop
xor
cmp
or
movsb
nop
sbb
imul
scas
jno
adc
rclb
cmp
inc
lret
add
sarb
sub
or
jg
xchg
mov
fimuls
aam
sbb
outsl
dec
sub
mov
xchg
repz
cltd
js
mov
adc
or
stc
or
clc
jae
frstor
add
icebp
test
clc
aaa
mov
sti
test
xchg
or
cmp
lahf
lret
mov
pop
cmp
inc
mov
data16
test
push
inc
pop
dec
sub
mov
iret
cmp
adc
out
jne
push
into
std
push
arpl
test
decb
cli
lods
sahf
gs
sti
adc
jbe
sub
lahf
movb
ja
or
rcll
sbb
add
movsb
mov
addl
xor
cltd
pop
mov
mov
and
scas
inc
fimull
aad
mov
adc
adc
mov
xchg
std
inc
sti
adc
sbb
dec
iret
aam
cmpsb
xchg
jne
sbb
adc
cmpsl
mov
adc
mov
lock
cli
inc
es
fidivrs
xorb
sub
add
ljmp
aas
push
mov
cmp
stos
inc
mov
push
es
ljmp
and
in
das
jns
jb
jns
mov
jo
mov
dec
jge
cmp
xor
mov
loopne
addr16
mov
test
insl
adc
test
imul
lcall
cli
inc
popa
and
jl
cmp
lods
add
push
hlt
dec
xchg
dec
mov
sub
sub
pop
pop
lds
ja
mov
popa
or
cmp
gs
adc
into
fdivrl
or
sub
push
out
dec
in
imulb
cs
pop
je
nop
mov
push
int3
cmp
add
push
sbb
fisttps
add
sub
ja
aad
bound
pop
pop
pop
decb
into
jmp
hlt
sti
hlt
iret
fnstsw
pop
sbb
inc
in
stc
push
xchg
sbb
stc
mov
fucomp
push
add
xor
lret
pop
and
pop
bnd
data16
jp
arpl
dec
loop
xchg
bndstx
cmc
imul
push
adc
dec
and
ret
arpl
jle
push
xchg
sbb
repz
and
dec
push
pop
stc
pop
push
jb
cli
lret
dec
mov
sbb
xchg
fdivs
in
cmovl
ja
enter
fbld
xchg
dec
or
mov
fnstsw
je
or
cltd
mov
mov
daa
mov
lahf
lods
rcrl
int3
gs
xor
xchg
aas
mov
cli
xor
es
inc
inc
push
ljmp
xchg
js
cmpb
lds
in
inc
lret
inc
cltd
pop
scas
or
or
outsl
fs
pop
lea
mov
lock
mov
pop
xor
or
mov
sti
mov
cwtl
pop
jnp
push
lods
dec
inc
lock
dec
loopne
mov
pop
or
push
in
jae
movsl
push
xchg
sbb
inc
sbb
sbb
or
ljmp
mov
mov
and
outsl
pop
jle
shll
pushf
pop
jmp
mov
mov
push
adc
inc
insl
in
jg
insb
add
xlat
lea
jmp
movsl
adc
sub
cmp
dec
dec
test
shlb
addr16
jnp
pop
test
pushf
mov
jae
imul
lock
lret
add
push
mov
inc
lods
inc
movsb
fstp
js
jo
fbstp
outsl
aaa
and
test
mov
mov
xchg
lods
int
pop
mov
iret
loop
xchg
jp
lahf
and
jo
lods
pop
out
cmp
pop
jbe
shll
mov
fildl
pop
xchg
pop
mov
scas
in
xchg
pusha
and
pop
jne
in
fistpl
xchg
ficoml
xor
cmpsb
out
jl
push
mov
xchg
xor
or
shll
push
sbb
cmpb
xchg
pop
popa
repz
mov
std
ja
mov
in
decb
xor
xchg
dec
comiss
push
xor
push
jo
push
outsb
or
bound
jp
aas
fmuls
lea
mov
push
outsb
mov
arpl
cmp
popf
ficoms
cmpsl
jge
arpl
cltd
cld
pop
or
and
popa
push
ja
mov
rcrb
mov
xor
cmpsb
cltd
inc
in
push
mov
popf
repnz
lods
cmpsb
cmp
stc
add
sbbb
add
repnz
sbb
in
lcall
shll
adc
sti
outsb
loope
lea
or
sbb
push
mov
cmpsb
les
pushf
jbe
adc
cmp
ffreep
mov
adc
rcr
out
mull
dec
popf
sub
leave
push
jne
jae
in
ficoml
push
or
mov
dec
or
pop
pop
xor
daa
mov
xor
mov
push
insb
or
push
imul
and
pop
lcall
add
pop
push
mov
pop
or
sub
mov
or
xchg
shrl
jns
cwtl
xor
mov
push
imul
jl
cwtl
sti
mov
sarl
push
sub
dec
enter
inc
fldenvs
mov
sub
jmp
inc
aas
mov
push
or
or
mov
popa
lea
mov
or
insb
cmp
cmc
mov
cmp
pop
mov
sbb
xchg
into
push
push
mov
les
int
rcrl
je
cmpps
jno
or
sbbb
or
dec
fwait
es
das
fadds
and
outsl
jo
fisubrl
pusha
sbb
or
dec
dec
sbbb
popa
pop
inc
sub
lcall
adc
outsl
repz
repnz
and
mov
xchg
ret
xor
in
outsb
xor
sahf
inc
imul
cmp
cmpsl
mov
pop
cwtl
outsl
arpl
jb
dec
notb
pop
fnsave
add
fwait
sti
and
sub
out
mov
add
push
addl
xchg
push
popf
dec
inc
mov
lods
mov
loop
cs
bound
mov
in
je
outsl
sub
jae
mov
mov
mov
jo
clc
fidivs
cmp
lods
mov
pop
mov
xchg
pop
out
repz
test
mov
nop
xor
cmp
push
clc
lds
add
dec
jecxz
rcrl
jmp
or
or
leave
push
add
cmpsb
ds
das
int3
push
adc
outsl
icebp
mulb
mov
mov
sub
jne
cmp
fsts
mov
sub
sub
test
push
mov
xchg
adcb
and
mov
loope
jne
repz
push
jno
mov
mov
cwtl
cs
or
cs
outsb
pop
push
sub
addb
xlat
loopne
addb
inc
iret
addb
xchg
add
dec
andb
xchg
jp
testb
pop
and
push
jmp
mov
fmuls
lcall
sub
mov
xor
jp
shlb
clc
nop
sub
fucomi
test
pop
xor
out
add
push
in
aas
sub
xor
or
loop
scas
pop
cmpsl
cli
xorl
rcll
xlat
sub
sub
movsb
mov
fcoms
or
cmp
notl
cltd
aaa
dec
sbb
push
leave
loopne
out
arpl
repz
pop
sub
xor
inc
sub
dec
push
lods
enter
stos
lcall
jns
push
test
jl
leave
pop
imul
mov
cs
pop
das
add
fldcw
cvtps2pi
or
std
lret
out
nop
lods
rorl
pop
sub
mov
adc
xchg
xchg
loopne
xchg
imul
push
rcll
je
and
scas
push
push
fdivrs
mov
add
and
cmp
mov
and
add
stos
rolb
or
scas
inc
push
insl
imul
sti
int3
jg
sbbb
lret
loop
std
mov
jae
movsb
sbbl
shl
sub
pop
xor
mov
popa
add
das
shrb
movsl
push
or
pusha
divl
jnp
mov
movsl
jl
cmpsl
mov
out
call
fstps
pop
sbb
jns
sahf
push
push
inc
mov
pop
addr16
fbstp
sub
stos
sbb
sub
rolb
mov
fdivl
or
cmc
mov
es
mov
sub
int
sub
mov
mov
enter
jno
rorl
lret
xor
xor
sub
andb
imul
cmp
xchg
and
sahf
scas
pop
sahf
pop
mov
adc
push
loope
sub
je
adc
hlt
fisubrs
loopne
ret
push
xor
or
mov
sub
pop
inc
sti
fsubr
mov
pop
ljmp
pop
data16
idivl
das
mov
pop
inc
fildl
xor
lock
stc
and
data16
stc
adc
in
xlat
mov
mov
loop
push
aam
cld
or
mov
addr16
and
fstpl
add
pop
test
in
lods
cmp
and
sbb
mov
xor
ds
iret
bound
scas
add
clc
and
or
mov
popa
call
idivl
test
mov
jle
test
lret
mulb
jns
ss
sub
insl
in
repz
xor
fisubl
mov
and
rcll
adc
push
cs
xchg
sbb
test
dec
mov
loopne
push
xlat
fstl
mov
push
ljmp
mov
lret
ds
std
push
cmp
dec
cmp
sub
scas
scas
cmp
les
dec
shlb
gs
sub
cwtl
sub
inc
ds
mov
out
mov
xchg
jp
mov
clc
jnp
push
mov
test
cmp
adc
dec
dec
int
in
fdivrl
pushf
sbb
xchg
cs
jb
sbb
js
sub
roll
in
mov
mov
push
xchg
iret
pop
in
or
mov
std
dec
adc
imul
sub
imul
mov
in
inc
xchg
jg
sarb
jecxz
gs
mov
or
ljmp
popf
jl
sbb
leave
push
gs
adc
and
push
push
nop
in
daa
lcall
inc
fnsave
xlat
cmp
adc
mov
push
repz
cli
jb
fsubl
pop
out
ja
inc
arpl
xchg
push
sbb
lcall
sbb
out
or
and
dec
sbb
aam
clc
mov
dec
imulb
movb
xor
into
cld
ds
xlat
in
adc
lods
inc
push
dec
filds
movsb
data16
clc
cmpb
pop
and
nop
mov
in
pop
jg
out
xlat
outsb
and
loop
rolb
lea
loop
negl
arpl
push
fucom
sti
add
lret
xchg
add
popa
cmpsl
addl
aas
pop
inc
xchg
movsb
mov
cltd
loopne
loopne
ficomps
mov
pop
xor
loopne
stc
and
mov
cmpsb
negb
lock
jle
js
or
out
mov
sub
jb
lea
lds
or
fsubp
mov
mov
push
ss
leave
mov
call
sbb
cmp
shll
jge
add
lods
cli
cmpl
aad
leave
ljmp
imul
sub
aas
pop
sahf
jne
aam
cli
add
inc
inc
fcompl
aas
pop
sbb
pushf
rcrb
aad
mov
out
jl
cmc
sbb
lods
jns
in
pop
mov
fwait
cmpsl
inc
lock
jne
stc
nop
adc
dec
out
jbe
sbb
mov
cmpsb
cli
mov
out
cld
inc
jp
push
test
dec
inc
icebp
popa
clc
xchg
cmc
sbb
jnp
daa
out
and
sbb
shrl
cmp
jae
jmp
cmp
stos
jle
aad
push
pop
mov
bound
fistpll
scas
stos
xchg
jmp
or
pop
lods
adc
sbb
rcll
pop
fldenv
or
scas
outsl
aaa
or
leave
jnp
clc
pop
mov
sbbb
add
xor
iret
mov
and
xor
push
push
icebp
add
stos
notb
dec
pushf
inc
pushw
mov
stc
lret
xor
inc
mov
std
mov
gs
divb
imul
jmp
jmp
add
mov
shrb
mov
mov
pop
and
dec
mov
clc
inc
lods
mov
push
stos
xchg
insb
mov
jp
pop
fnstcw
repz
lock
dec
cli
adc
xor
outsb
or
cmp
jecxz
xchg
mov
inc
gs
push
ds
shll
es
xchg
pop
xor
sbb
adc
lea
lods
rclb
imul
jns
dec
pop
stc
xchg
mov
xchg
pop
jecxz
pop
xchg
stos
pop
stos
adcl
aaa
pop
arpl
adc
xor
lea
ret
xchg
push
leave
mov
mov
adc
test
outsl
add
sbb
mov
aad
cmp
xchg
scas
push
sbb
mov
pop
sahf
call
cmc
and
call
repnz
mov
and
clc
stc
nop
sbb
xor
loopne
pop
xchg
cmp
push
mov
icebp
pushl
sub
cmp
leave
mov
ja
scas
pop
cmp
shrl
test
icebp
popa
sub
sub
inc
jge
leave
jg
jo
mov
cmpsl
xchg
sbb
movsl
out
fdivrl
cwtl
idiv
movb
dec
xchg
sub
cmpb
pop
jmp
js
xchg
or
sub
push
fsubs
xor
test
shl
dec
inc
and
pop
pop
or
mov
test
test
sbb
pop
mov
sete
imul
repnz
insb
shrb
sbb
popa
jg
cs
inc
insb
add
xorb
movsb
movsb
mov
adc
push
pop
mov
cs
pusha
xor
sub
sub
ret
roll
icebp
test
push
insb
iret
repz
mov
sti
aam
icebp
mov
sbb
xchg
dec
jle
negl
fnstenv
or
test
fdivl
or
sti
sbbb
add
jg
mov
sbbl
testb
mov
jo
mov
cmp
leave
sbb
mov
mov
dec
inc
jecxz
mov
divb
adc
xchg
xor
mov
or
loope
and
test
add
loope
xor
xor
mov
popf
hlt
in
jmp
in
xchg
lret
xchg
push
ljmp
jno
cmpl
cmp
rolb
add
jae
sbb
lods
dec
dec
jge
ret
push
xchg
jg
jb
cmc
int3
fsubrl
test
out
jl
fcmovne
dec
fimull
sbbl
mov
xor
push
nop
push
sbb
dec
fnsave
mov
cwtl
pop
sub
mov
jno
xor
in
rcpps
inc
cmp
add
push
push
mov
fidivs
jle
sbb
je
std
pop
push
pusha
pop
adc
and
sub
dec
inc
sub
imul
add
adc
push
negl
sub
fbstp
pop
adc
push
pop
gs
push
stos
xor
out
inc
std
push
ja
pushf
or
dec
arpl
leave
notl
mov
imul
jp
aad
int
sub
lret
sahf
sahf
push
cmpsl
dec
jmp
idivb
rol
dec
int3
faddl
push
insl
test
mov
outsb
shrl
add
aam
mov
cmpsl
add
jmp
sub
gs
stos
daa
pop
jl
mov
mov
xchg
test
jns
and
addr16
or
xchg
xor
dec
lds
adc
in
lods
fisubs
push
shl
sub
data16
xchg
iret
pop
jnp
ds
cltd
xchg
shlb
xor
inc
pop
xor
cld
xchg
arpl
jbe
jbe
bound
rcl
pop
femms
test
adc
cmp
sbbl
enter
sub
mov
push
inc
std
xor
mov
cld
pop
mov
inc
arpl
and
subb
pop
and
inc
push
jl
notb
dec
pop
add
jge
js
movsl
sbb
test
lret
push
ljmp
movsb
pop
push
loopne
xchg
pop
mov
int3
jecxz
sbb
push
mov
dec
insl
xchg
fwait
xchg
pop
adc
arpl
jg
dec
rcrl
cmp
push
mov
mov
ret
shr
out
jae
xchg
inc
pop
scas
scas
ljmp
jo
sub
mov
movb
push
xchg
rcrb
cmp
xchg
mov
add
rorl
push
dec
xor
xlat
sarl
xchg
je
iret
lret
cmpsl
out
gs
inc
enter
or
mov
cmpsb
jnp
clc
jp
aam
pop
push
mov
push
mov
add
xchg
je
les
pusha
push
pop
or
mov
daa
lcall
inc
pop
movsb
je
xor
sub
fsts
mov
lret
shll
mov
jns
test
mov
fs
fsts
bound
iret
rcl
shlb
or
jp
push
sub
cli
pop
cld
cmp
mov
adc
cltd
pop
mov
out
pop
mov
mulb
xchg
in
adc
and
inc
adc
dec
jo
xchg
cs
add
inc
test
mov
push
or
ret
pop
cmp
xchg
gs
sahf
mov
mov
pop
and
push
cltd
or
cmpsl
imul
jnp
mov
cmpsb
clc
imul
lcall
xchg
jmp
leave
pop
pop
mov
mov
scas
sub
into
xor
xor
xor
and
sub
icebp
xor
xor
or
xor
sbb
cmp
add
lahf
xor
fisttps
rcr
jo
push
shll
jb
or
or
imul
mov
dec
push
imul
ret
fadds
or
movsl
leave
stc
rorb
and
jnp
es
xchg
scas
or
mov
test
lods
in
ss
add
cmp
push
in
and
mov
and
int3
ss
sub
out
in
xor
mov
push
inc
mov
push
jnp
rolb
insl
push
pcmpeqw
pop
and
sub
movsb
pop
ret
mov
fmuls
pop
pop
icebp
fisubrl
mov
inc
lret
sbb
and
jecxz
mov
dec
dec
adc
add
mov
add
insb
sub
xchg
in
mov
pusha
leave
lods
std
inc
outsb
std
ficomps
mov
test
mov
lea
jno
scas
and
sub
xchg
daa
push
xchg
push
cmp
cmpsb
test
add
xchg
lahf
xor
and
insl
test
inc
testb
cmc
adc
mov
and
cmp
pushf
cmpsl
pop
push
out
movsb
scas
mov
sahf
and
and
out
sub
pop
mov
iret
mov
adc
push
inc
mov
fisubs
out
repnz
mov
popa
mov
or
aam
jg
cmc
stc
mov
jmp
fdivs
sbb
and
loope
hlt
insb
hlt
lods
ficoms
xor
imull
cmp
pushf
and
cmc
or
jecxz
adc
testl
and
lahf
fwait
mov
lret
push
xchg
das
clc
cmpsl
adc
fisubs
jg
add
loop
mov
xchg
out
push
push
lock
mov
xor
test
mov
cs
or
icebp
xchg
enter
in
sbb
mov
add
xchg
sub
sbb
shlb
pop
xor
dec
or
aas
adc
mov
cld
xchg
jns
dec
pop
test
movb
mov
sarl
ljmp
mov
es
mov
pushf
mov
push
mov
adcl
mov
in
loop
leave
insb
add
outsb
fstp
ror
enter
addr16
pop
push
movsb
sarb
and
push
fmull
xlat
sub
jno
mov
mov
aad
cmc
ja
push
and
lods
xchg
xor
jp
notl
scas
in
pop
repz
insl
adc
jnp
push
outsl
mov
add
out
mov
sbb
adc
movb
mov
loopne
inc
pop
cmp
sub
jbe
stos
and
aaa
push
int3
pop
repnz
repz
stos
test
jns
leave
lret
mov
mov
or
push
es
jmp
into
cmpsb
inc
arpl
cmpsb
int
mov
loopnew
cltd
push
pop
cmp
lret
adc
jno
fiadds
jp
xchg
in
mov
test
sbb
inc
je
sti
and
sbbl
mov
pop
popa
mov
add
pop
mov
sub
shl
negl
jb
inc
add
sub
push
repnz
aas
adc
cmp
cmp
dec
inc
fwait
loope
idivl
inc
stc
popl
xchg
sub
or
sub
add
test
push
imul
imul
aam
jmp
inc
push
xorb
ud0
test
mov
addr16
nop
jae
mov
pop
dec
jecxz
orb
sbb
pop
leave
fnstenv
mov
divl
inc
fwait
test
and
mov
shlb
push
out
mov
fcoms
push
inc
fiadds
scas
das
or
lock
fmul
mov
lcall
adc
jb
addr16
push
or
inc
outsl
xchg
je
push
mov
xor
ja
lea
pop
xor
std
sub
mov
cmp
inc
mov
cmp
mov
pop
xor
sbb
xchg
push
faddp
xor
shl
dec
mov
pop
push
fdecstp
in
add
mov
push
aam
adc
dec
mov
test
jne
sbb
fwait
mov
push
popf
adc
and
dec
add
sub
stos
mov
dec
inc
stos
outsb
inc
lret
test
and
and
lds
mov
mov
fbld
cwtl
pop
mov
dec
repnz
mov
insb
push
loop
iret
out
push
pop
and
adc
data16
adc
aad
cwtl
push
cltd
push
aam
repz
xor
stos
popa
and
jne
loopne
test
inc
rcrb
mov
cmpsl
bound
mov
pop
insl
adc
mov
cmp
movb
adc
testl
imul
inc
test
mov
leave
xchg
and
pop
cld
pop
and
xchg
mov
jg
and
fwait
push
sbb
fidivrs
andl
inc
cmpsl
jle,pt
sub
dec
cld
xchg
ljmp
sub
loop
scas
lcall
repz
push
sub
cld
outsl
pushf
clc
fnsave
mov
xchg
icebp
out
add
jbe
popf
stc
mov
stc
je
sbb
out
in
test
mov
adc
pop
mov
cmp
inc
les
inc
fcmovne
leave
insl
cmp
out
pop
mov
push
pop
repz
ds
pop
icebp
mov
js
xchg
add
xor
sub
mov
mov
pop
in
mov
push
adc
pop
sbb
bound
xchg
jmp
out
test
fsub
mov
out
xor
add
lods
mov
popa
add
aas
cld
or
orb
jo
rcrl
push
xchg
ljmp
pop
lahf
mov
mov
cmpsb
sbb
or
mov
pusha
add
dec
gs
mov
jb
and
sbb
js
dec
sbb
xchg
aam
leave
jg
xchg
lea
sbb
xor
dec
in
lock
inc
popf
mov
pop
cwtl
aam
xchg
insl
dec
cmc
and
mov
or
sar
out
repnz
sbb
pop
test
push
pusha
add
jmp
lcall
sbb
xor
sbb
nop
ret
cmp
dec
xchg
rcrb
ret
cmpsl
out
bound
jnp
lds
int3
jnp
mov
mov
jnp
inc
ds
xchg
cmp
mov
jg
sbb
ds
xor
mov
out
mov
xor
pop
in
std
sub
push
jmp
mov
dec
aaa
stos
xor
xor
pop
cmp
outsb
sbb
js
out
into
test
lds
repz
xchg
sub
pop
pop
sub
mov
mov
mov
shrb
and
jp
popa
xor
clc
clc
or
sbb
dec
xchg
mov
ja
std
push
mov
xchg
add
inc
aad
bound
idivl
test
sub
shrl
bound
push
inc
jmp
push
mov
insl
testb
push
or
cmp
jge
js
out
loopne
iret
loope
aas
jbe
jmp
test
movsl
or
imul
mov
call
lea
xchg
mov
fucomp
sbb
fwait
repz
and
inc
add
repnz
or
call
std
push
in
add
sub
push
mov
lcall
xorb
shrb
fstp
push
and
mov
test
leave
int
enter
sbb
dec
mov
and
sahf
jns
jge
movb
cld
stc
pop
scas
mov
fidivl
hlt
mov
jbe
nop
pusha
add
inc
xchg
push
cmc
pop
sbb
sbb
nop
or
shrb
divb
jge
pop
xchg
rol
inc
push
add
add
es
mov
int
in
sub
or
cmc
pop
add
mov
xchg
ret
cmc
mov
push
sbb
aam
std
xchg
loope
les
push
mull
in
bound
dec
cmpsb
iret
in
aam
inc
push
loopne
fsts
add
add
lcall
enter
test
xchg
sub
and
decl
into
bound
fsubrp
mov
lret
gs
gs
sbb
stc
and
pusha
ss
sbb
pop
jo
or
rorb
cld
addr16
js
jae
mov
mov
xchg
mov
fs
lcall
repnz
lcall
popf
inc
mov
jp
jnp
cmp
mov
sbb
add
movsb
movsb
mov
adc
mov
xchg
test
mov
jecxz
sar
lahf
xor
mov
xchg
or
js
addr16
mov
ffreep
aam
jnp
xor
push
pop
lcall
pop
adc
or
xor
fcomp
aad
rorb
ss
in
fcompl
xor
dec
sbb
adc
inc
add
cli
and
mov
pop
push
rcrb
outsb
or
push
loope
and
dec
lcall
adc
lds
sub
mulb
ds
daa
ljmp
outsb
add
pop
push
adc
push
jge
inc
mov
pop
inc
fisttpl
pop
xlat
cs
cli
jp
jge
add
hlt
orb
sub
dec
lods
jnp
je
call
loopne
stc
adc
mov
jae
pop
add
cmp
stc
popf
aas
or
and
xor
shlb
sbb
fisubs
repz
or
pop
ja
push
shlb
dec
xchg
mov
cmpsl
lcall
gs
pop
cltd
xchg
sub
dec
sub
xor
jge
repz
xchg
mov
pop
enter
adc
sub
std
rclb
pop
test
mov
push
or
sbb
loopne
lret
inc
fidivrl
int3
mov
sarb
mov
cmpsl
cmpsl
inc
mov
in
inc
xchg
pop
insb
movsb
jp
cmp
cmp
cltd
call
sbb
xor
jb
adc
cwtl
xor
icebp
lcall
test
inc
and
shll
pop
in
fs
vpcmpgtd
lock
inc
mov
jmp
bound
int
jecxz
jmp
in
popf
sub
pop
daa
mov
fs
inc
fwait
sub
inc
cld
mull
mov
jns
inc
fidivl
or
adc
pop
pushf
adc
jmp
mov
pop
fwait
mov
frstor
mov
cmpsb
xor
sub
xchg
andl
cs
adc
jb
les
loope
push
mov
cmp
shll
stos
add
dec
ss
scas
jecxz
push
dec
popa
adc
mov
pop
outsl
pushf
jmp
xchg
mov
cmpsl
jle
repnz
mov
mov
sub
divl
call
dec
push
push
pop
lahf
hlt
shlb
xchg
pop
stos
inc
xor
mov
mov
adcb
out
insl
leave
mov
int3
push
push
inc
xchg
lret
sti
or
cmpsb
mov
xlat
clc
inc
test
xor
js
jb
add
sub
cmp
cmp
out
daa
loop
inc
fnsave
sbb
cwtl
fs
in
ret
and
notl
pusha
pop
sbb
or
test
cli
push
sbb
stos
xor
cmp
mov
dec
mov
xor
aad
shlb
inc
xchg
mov
out
sarl
push
cmp
jl
adc
dec
loop
cmp
push
jb
mov
push
out
cmp
int3
pop
adc
adc
aas
add
cltd
shl
jmp
cmpsb
inc
outsl
push
mov
negb
fnstenv
pop
movsl
inc
mov
mov
sub
mov
movb
rorl
pusha
cltd
leave
pusha
lret
push
sbb
cltd
hlt
aas
out
mov
mov
and
out
xchg
pop
or
in
pop
push
sub
test
cmc
cwtl
out
xchg
insl
pop
cmp
test
sti
lret
fstp
jge
mov
les
sbb
dec
mov
push
cmpsl
stc
xchg
adc
iret
pop
xor
fistl
push
adc
push
adc
rcll
or
into
mov
shrb
jg
mov
mov
inc
jae
fwait
das
and
fcoml
mov
pop
sub
cmp
cmpsb
and
mov
push
mov
into
jmp
xchg
lcall
sub
push
imul
insb
in
xor
jl
jnp
jo
call
fdivrs
xchg
mov
cmpl
pop
jns
dec
mov
pushf
sub
or
dec
adc
sbb
outsl
ds
jl
adcb
jg
ljmp
fstl
loope
insb
cs
test
cmp
sahf
scas
cmp
repz
popa
adc
sahf
jae
mov
adc
xor
cltd
push
jmp
or
inc
inc
in
addb
push
addr16
pop
call
mov
xlat
cmp
xchg
leave
sahf
sbb
push
push
jmp
scas
insl
push
jmp
rol
sub
cld
out
xor
jno
std
cmp
stos
into
and
inc
and
dec
mov
cwtl
int
push
jb
sbb
sti
sub
add
hlt
mov
mov
mov
xor
mov
sbb
adcb
sbb
outsb
shrl
mov
pop
rorl
rclb
adc
out
push
sbb
data16
out
out
fistps
das
test
inc
enter
jp
sbb
cmpsb
cmp
pop
fadd
flds
cmpsl
aam
mov
push
push
xor
arpl
mov
mov
pop
mov
add
pop
xchg
imul
scas
ficoml
divb
inc
inc
popf
xchg
and
test
rolb
movsb
in
loop
cmc
dec
cmp
sbb
aaa
xchg
movsb
jge
test
add
mov
js
mov
xchg
inc
popf
mov
pop
and
jns
and
dec
out
test
mov
in
mov
pop
mov
jmp
aaa
or
ret
movsb
jge
xchg
push
sub
gs
arpl
inc
sahf
adc
jns
xchg
adc
test
push
fs
cli
jl
popf
xchg
icebp
lds
add
and
daa
adc
pop
addr16
add
popf
arpl
jne,pt
pop
mov
lds
scas
xor
movsl
jle
mov
add
inc
lret
mov
jbe
inc
sahf
rorb
jg
movsb
and
fistl
push
jecxz
cmp
sbb
lcall
xchg
dec
out
add
roll
sub
pusha
mov
fwait
lcall
ffreep
and
and
sbbb
xchg
sbb
mov
jno
nop
jno
or
mov
in
mov
sbb
cltd
mov
icebp
das
pop
insb
loope
sub
pop
aaa
fs
sti
jle
mov
inc
jne
test
cmc
loop
icebp
fchs
push
sti
add
dec
adc
lret
scas
sub
adc
addr16
mov
in
lret
ror
mov
loope
in
hlt
and
enter
fistl
bound
jmp
sbb
outsl
inc
push
jmp
dec
add
mov
daa
movl
or
or
push
insb
inc
fwait
jl
dec
movsl
mov
and
inc
xor
in
mov
xchg
pop
scas
out
cltd
in
inc
out
ret
sbb
and
imull
inc
adc
lret
and
insb
lds
mov
add
adc
sub
std
sub
dec
push
lea
cmp
add
in
inc
repnz
xchg
insb
mov
int
rorl
dec
cltd
cltd
lods
xchg
inc
iret
mov
mov
stos
out
mov
xor
inc
dec
imulb
loop
mov
jmp
push
js
mov
xchg
mov
hlt
dec
hlt
scas
adc
dec
dec
arpl
xchg
fs
push
add
sub
mov
jno
in
dec
mov
fdivl
sarl
sbbb
shlb
popa
mov
sahf
push
mov
push
lock
mov
jae
mov
ss
jae
cmp
inc
mov
into
bound
fld
pop
sub
pop
cmp
mov
jo
mov
loopne
push
and
push
pop
popf
roll
or
fbstp
shll
mov
stos
loope
sbb
jl
or
cmpsb
sbb
fcoms
clc
fmull
mov
mov
inc
clc
xlat
mov
add
clc
mov
inc
inc
bndstx
les
adc
sub
push
inc
mov
cs
pop
xchg
aaa
lea
inc
inc
jmp
or
xchg
fistps
push
dec
mov
cmp
pusha
testl
and
cli
adc
pop
lahf
xor
cltd
scas
scas
cmp
imul
lea
cmp
stos
in
xchg
icebp
mov
or
mov
movsl
mov
sub
dec
xchg
inc
dec
movsb
mov
lods
imul
ljmp
pushf
fwait
mov
les
popa
aaa
push
enter
icebp
cmove
mov
cmp
outsb
add
je
mov
stc
stos
add
xorl
adc
push
ja
adc
jle
adc
mov
out
mov
pushf
popf
push
ljmp
jno
orb
pop
pop
sahf
push
int
dec
pop
stos
jns
mov
pop
and
push
ljmp
ljmp
push
inc
fucom
jnp
and
push
test
sbbl
cmpsl
rorb
sbb
leave
test
pushf
mov
mov
repz
add
adc
bound
aad
stos
outsl
push
jmp
sub
ja
fisubs
ds
sbb
insb
rcrb
mov
out
fldl
jbe
std
fs
sub
addr16
les
loop
xchg
jnp
loop
lret
lock
adc
adc
outsl
insb
lods
xchg
cs
mov
in
loope
addr16
adc
add
jp
leave
mov
push
repz
fisttps
jns
mov
inc
jecxz
scas
popf
or
cli
lods
xchg
pop
shll
pop
cmp
sub
jnp
decl
cmpsb
imul
shrl
cwtl
dec
dec
ljmp
dec
mov
jne
xchg
shl
xchg
cmpsb
xor
jg
pop
push
fstl
movsb
and
fadd
int3
test
jae
sarb
lea
lods
cmpsb
mov
sbb
mov
mov
mov
arpl
pusha
xchg
mov
ss
imul
test
sub
sarl
ljmp
xchg
or
outsl
sub
sub
fstl
popf
cli
and
fmull
test
xchg
dec
adc
cmp
jle
or
stos
push
mov
pushf
inc
mov
mov
test
pop
pop
xchg
scas
loope
mov
frstor
add
fisubrl
xor
fdivs
pop
je
and
mov
arpl
into
cwtl
xor
es
int3
popl
xchg
xchg
and
lods
mov
push
and
mov
mov
sub
in
dec
lahf
std
pop
mov
lods
repnz
or
sbb
dec
lods
push
pop
sbb
inc
cmp
sbb
popf
sub
mov
ss
je
std
or
jno
das
arpl
into
imul
jmp
call
in
sub
push
mov
dec
outsl
cmp
insb
cld
out
bound
pop
add
div
mov
pop
mov
fcomps
or
les
push
mov
dec
mov
push
aad
stos
repnz
xor
push
flds
out
sub
and
push
ror
ss
rol
sub
sbb
push
out
sti
mov
test
mov
pop
nop
arpl
or
ret
hlt
iret
scas
mov
push
pop
jle
lret
sahf
mov
es
movsb
push
outsb
fldcw
push
mov
cli
xor
cmp
xchg
jmp
out
mov
outsb
add
stc
xchg
mov
sti
push
add
mov
adc
mov
lcall
inc
daa
mov
mov
fcompl
add
aad
fmull
lock
arpl
clc
xor
insb
add
jg
inc
adc
xchg
xchg
movsl
adc
popf
std
mov
mov
insb
nop
inc
adc
lea
cmp
pop
mov
xor
xor
test
or
and
rorb
testl
imul
xchg
or
aaa
lea
outsb
xor
in
lock
loope
outsb
jae
ja
icebp
dec
cmpsl
xchg
cmp
adc
out
xor
push
sbb
jns
aas
shl
pusha
adc
sub
mov
jecxz
movsl
xchg
pop
add
xchg
sbb
adc
repnz
dec
cmp
jmp
jbe
cltd
mov
shll
mov
aam
inc
push
xchg
lea
mov
jg
push
jnp
mov
movb
leave
daa
hlt
or
popf
adcb
sub
iret
jb
in
jmp
dec
add
ds
pop
ja
stos
shl
cmp
aas
je
jl
xchg
enter
loopne
nop
repnz
sbb
pushf
hlt
test
sub
jp
mov
dec
sbb
rol
pop
imul
xor
xor
dec
mov
cltd
shrb
or
jbe
jge
xlat
es
js
inc
jg
or
in
sbb
xchg
xchg
into
mov
xor
sub
daa
and
pop
xchg
in
pop
add
mov
sbb
jnp
mov
push
ss
sahf
loop
fcomi
test
popa
xor
mov
addr16
stos
mov
mov
jp
adc
test
inc
push
add
mov
int
stc
outsb
pusha
ss
mov
pop
jl
push
jo
andl
pop
shlb
add
xor
and
fwait
xor
loop
dec
stc
je
cmp
fsubr
xchg
dec
cmp
cs
mov
fidivl
add
inc
push
imul
push
push
sar
xor
icebp
sbb
adc
fs
add
cmp
mov
sbb
sub
icebp
ret
hlt
adc
lahf
out
pop
jb
mov
jne
mov
mov
push
inc
rcrl
fidivs
int
add
dec
fxch
repnz
xor
adc
cmp
outsl
outsl
add
insb
movsb
push
and
xchg
loope
or
idivl
test
popf
or
fcomp
aas
push
nop
icebp
test
inc
aad
aaa
dec
out
test
dec
push
dec
gs
pusha
pop
mov
push
test
jb
adc
sbb
test
daa
push
je
mov
aas
outsb
lds
sub
jno
ljmp
dec
or
jne
test
push
push
mov
les
leave
pop
sahf
cli
xor
add
cld
imul
stc
mov
sub
ret
mov
fcoms
pop
and
test
jae
push
mov
loop
ds
add
and
rcrl
mov
aaa
push
xchg
js
add
jno
push
xchg
sub
mov
insl
adc
mov
jle
adc
or
addr16
xchg
adc
mov
in
push
mov
add
and
mov
pop
jmp
jne
jmp
push
xlat
jp
sbb
pop
xor
nop
fbstp
out
in
sbb
cmp
sub
lea
lcall
adc
xchg
pop
cmp
adc
rcrb
in
mov
lret
outsb
mov
roll
popa
jle
sub
rcll
es
addb
add
fwait
shlb
mov
daa
adc
out
xlat
fimuls
add
enter
mov
jno
sub
adc
inc
js
adc
lods
dec
movsb
popf
add
das
fs
xchg
lds
mov
shll
ljmp
sbb
loop
jp
mov
jle
add
inc
jl
imul
mov
mov
push
jb
sbb
inc
inc
sub
fwait
mov
mov
loope
sub
add
xor
cmpsl
jle
imul
xor
mov
test
imull
sahf
push
rol
cmp
in
add
dec
cltd
jl
dec
xor
xchg
inc
push
ret
jecxz
jle
imul
and
lea
inc
jp
add
fdiv
pop
jne
and
add
xchg
dec
cmp
jno
xor
jbe
mov
mov
gs
sti
sbb
inc
daa
xchg
mov
inc
add
mov
and
sti
fidivrs
icebp
and
pop
pop
mov
aam
xchg
shl
adc
sahf
sbb
sbb
push
mov
xchg
dec
mov
dec
in
mov
ds
es
xchg
pop
or
jmp
int3
jle
jl
cld
pop
int3
leave
das
pop
sahf
and
mov
out
popa
push
js
mov
jmp
or
rorb
xchg
jns
pop
pop
test
xchg
bound
bound
scas
subl
mov
je
push
lods
xor
int3
add
jl
imul
std
jne
insb
movsl
mov
mov
or
scas
mov
subl
add
in
and
adcb
mov
ja
aaa
int3
xor
aas
and
sbb
lret
in
nop
daa
int
fwait
push
jl
sti
shlb
imul
push
fucom
les
mov
loop
adc
pop
movb
cld
hlt
mov
lds
push
adc
clc
lret
push
add
addl
lret
dec
roll
mov
cmpsb
leave
dec
mov
cmp
sub
jge
lahf
add
les
adc
js
cli
xor
or
mov
addr16
das
insb
shlb
jo
and
jp
push
test
push
or
dec
pop
inc
xchg
jmp
dec
sub
sbbb
xchg
mov
jecxz
or
cmp
cmp
shrb
xor
dec
loopne
pop
cmp
inc
sbb
fnstenv
push
notl
mov
bound
xor
fiadds
insl
lret
dec
les
out
mov
xchg
xchg
pop
adc
mov
repz
push
aad
mov
int3
jg
nop
inc
sbb
mov
fldt
mov
mov
ficoms
or
out
add
hlt
and
add
or
fisubrl
cmp
inc
repz
push
shrb
icebp
fsubrs
mov
push
xor
adc
mov
push
fxch
movl
frstpm(287
mov
mov
das
mov
lods
xor
shlb
inc
inc
sarl
inc
fcmove
add
popa
and
mov
sti
push
xor
inc
and
xor
mov
lcall
sbb
pop
dec
sub
fdivrp
xchg
insl
pusha
or
scas
outsb
sub
lock
insl
ret
xor
test
sbb
rorb
lret
and
imulb
pop
xchg
insb
fildl
adc
jns
xor
out
gs
jmp
xchg
mov
pop
dec
push
bound
mov
xchg
fcompp
xor
fisubl
xchg
jg
lock
shlb
jns
out
hlt
pop
loop
aad
mov
dec
add
addl
adc
cmp
mov
cmpb
xor
sahf
push
or
hlt
jg
int
inc
push
add
adc
dec
stos
fnstenv
lcall
pop
and
cs
jg
cmp
and
sahf
inc
cli
jne
jns
aaa
ret
push
in
push
fstpl
add
imul
lcall
dec
fdivs
add
dec
and
mov
pop
or
mov
sbb
aaa
mov
xchg
push
ljmp
mov
lods
cmpsl
xchg
adc
aas
push
insl
test
lahf
aas
les
fmull
or
in
pop
jnp
mov
jle
cmova
hlt
mov
sub
movl
adc
mov
ja
sahf
sbb
lret
sti
in
aas
and
das
push
pop
and
adcl
lahf
and
shrb
addl
jno
sahf
shlb
dec
or
add
pusha
lret
inc
pop
mov
jmp
iret
jecxz
sbb
mov
add
push
xchg
insl
pop
dec
stos
es
xchg
xchg
ljmp
movsl
loop
out
mov
xchg
push
lahf
sub
mov
fwait
sar
iret
xchg
push
add
xchg
imul
lock
fisubs
outsl
push
push
xor
cs
pop
cmpb
adc
dec
js
mov
fidivl
mov
dec
and
lret
bound
hlt
jo
test
sbb
and
mov
sarb
iret
mov
inc
add
mov
loope
sti
jns
inc
aaa
icebp
movsl
push
insl
pop
scas
scas
les
test
pusha
loop
ret
testl
mov
stos
sub
mov
test
fsubrl
scas
push
imul
inc
jb
jno
mov
in
shlb
inc
lcall
inc
clc
fwait
ss
xchg
xor
sub
and
cmpl
insl
loop
inc
stos
into
xor
or
test
xchg
mov
call
jge
push
sti
ds
in
mov
mov
mov
bound
xor
mov
cmp
in
sbb
ds
cmp
mov
push
push
mov
mov
push
lret
lds
xor
mov
pop
sbb
mov
push
call
fiadds
fwait
dec
add
rcrb
adc
mov
add
pop
out
push
sar
aas
repz
sub
in
mov
pusha
aaa
mov
imul
das
ja
push
jns
cmpsl
mov
sbb
mov
and
xchg
pop
jo
pop
loop
cmp
or
fimull
loopne
add
in
or
mov
aaa
clc
cmp
fisubl
dec
mov
jns
cld
push
mov
jg
das
mov
dec
loop
xchg
data16
xchg
xchg
jnp
and
adc
rolb
mov
sbb
mov
jle
shl
dec
ljmp
xchg
xchg
mov
push
add
in
loop
mov
cmp
and
xchg
xchg
xor
xor
andl
inc
in
add
test
rclb
movaps
cmpsb
and
pop
sub
lret
cmp
fs
or
mov
fmul
pusha
dec
mov
cmpsb
jbe
loope
les
test
leave
jo
mov
nop
mov
push
testl
mov
das
push
push
mov
gs
dec
lahf
clc
sahf
add
sub
test
mov
xchg
jae
repnz
and
inc
arpl
fnstenv
shl
popf
insb
test
or
jle
ja
xchg
imul
cli
xchg
jmp
sti
sbb
sub
out
and
or
mov
data16
out
aaa
or
mov
sti
push
adc
xor
xor
bound
push
ficoms
test
sub
sbb
pop
add
repnz
bound
jmp
and
loope
mov
jmp
dec
dec
arpl
add
sub
jl
inc
call
inc
mov
lret
xor
icebp
xchg
xor
mov
mov
cmpsb
mov
test
out
push
or
mov
sub
dec
scas
push
decl
sti
jbe
test
test
jp
in
das
mov
jb
ds
jmp
push
pop
push
fcomp
addr16
jecxz
in
daa
jo
pop
xchg
xor
pop
push
lods
nop
loopne
mov
ds
or
cs
jo
call
hlt
mov
rcll
test
add
and
xor
mov
cmp
idivl
out
push
mov
push
mov
or
and
movsb
shr
loop
cmpsb
mov
mov
add
push
mov
out
jecxz
xor
jg
ret
shlb
out
push
and
out
adc
mov
add
stos
mov
in
push
sbb
sbb
sahf
mov
sbb
frstor
push
jne
or
mov
repnz
imul
pop
dec
inc
jmp
or
enter
sub
push
fwait
sub
sti
stos
jmp
push
pushf
aad
cmpsb
push
fwait
xlat
adc
pop
sub
xchg
mov
repz
fs
add
cs
jge
and
pop
xor
xlat
and
xor
mov
pushf
sbb
push
cmp
pop
xor
scas
shrl
sahf
pop
jae
push
movsl
je
xchg
pop
imul
jae
movsl
cmp
mov
pushf
jmp
or
cmp
hlt
daa
inc
test
mov
stos
jmp
sub
mov
lea
xor
repz
cmp
adc
pop
out
cmp
sbb
outsb
or
in
mov
es
in
dec
inc
stos
xchg
icebp
in
jo
jmp
inc
add
mov
or
pushf
loopne
fiadds
lods
dec
push
fidivs
notl
dec
scas
leave
loope
jo
fsubrl
ljmp
cmp
mov
push
pop
mov
je
cwtl
mov
pop
les
into
arpl
inc
inc
jb
imul
cmpsl
push
call
push
cmp
jmp
cmpsl
and
xor
ret
fbstp
jp
into
int
xchg
push
dec
nop
pop
adc
fiadds
or
adc
or
mov
lret
push
or
cmpsl
leave
fxch
xchg
cld
push
sahf
lock
push
or
lret
mov
inc
adcb
rcrl
iret
push
add
mov
push
andl
inc
or
xor
adc
mov
pop
adc
adc
or
push
xor
montmul
cmpsb
ret
in
dec
push
push
sub
and
pop
lea
push
lds
imul
gs
pop
xor
movsb
pop
je
dec
movsl
mov
pop
bswap
sub
push
or
dec
mov
add
mov
stos
mov
xor
adc
pop
sub
or
inc
push
sub
out
mov
div
in
add
mov
mov
mov
bound
imulb
mov
or
arpl
pusha
mov
and
xor
push
jge
sbb
jp
jno
jno
or
jae
jp
dec
ljmp
jbe
fisubs
les
add
mov
cli
imul
pop
out
cmc
mov
scas
mov
mov
mov
std
jecxz
mov
mov
xor
decb
sub
xchg
cmpsb
jo
jnp
ret
push
in
jnp
out
or
data16
dec
std
nop
cmp
into
push
pop
mov
adc
movsl
out
pusha
or
jp
jne
mov
mov
mov
and
and
test
mov
fmulp
push
mov
popa
hlt
and
and
lcall
push
lahf
call
sbb
loope
test
sbbb
lcall
pop
cwtl
int
mov
mov
shll
test
loop
dec
lods
mov
xor
mov
mov
sub
or
mov
lret
jno
inc
push
jne
add
mov
out
or
cs
jbe
mov
repz
inc
std
lods
mov
jle
and
pop
inc
or
mov
das
popa
imul
or
daa
mov
adc
sbb
xchg
adc
je
dec
xor
adc
fdivs
rorl
je
shl
fidivrs
mov
xchg
add
mov
add
lcall
sbb
arpl
jecxz
ret
and
mov
mov
decb
leave
mov
push
out
cmovnp
pop
xor
pusha
push
je
in
testl
js
lret
test
ja
je
sbb
jle
scas
xchg
xchg
sbb
shl
mov
mov
pop
repnz
lods
or
aad
or
sbb
inc
loop
jmp
push
pop
nop
int3
repnz
add
push
jae
push
sub
ss
pop
pop
mov
or
adc
xchg
sub
shll
push
repnz
push
shrl
mov
fnstcw
les
xchg
mov
enter
cli
daa
push
divb
push
jge
mov
dec
repnz
xchg
fistps
dec
cmpsb
xor
dec
pop
mov
or
test
lock
xchg
mov
aam
xchg
popa
mov
ret
repnz
mov
fdivs
sahf
inc
arpl
jmp
xchg
xchg
pop
push
lock
sahf
sub
int
add
dec
in
or
aad
mov
cmp
loop
fnstsw
setno
pusha
xsha256
cmpsb
xchg
insl
cmpb
mov
int3
dec
mov
imul
lcall
push
mov
mov
cwtl
mov
push
popf
push
mov
fmuls
btc
inc
jp
call
test
pop
cmp
lret
adc
push
cli
cld
fs
and
das
mov
push
test
xchg
add
fnstenv
int3
in
popf
sub
mov
xchg
cmp
cmpsb
add
adc
clc
subl
push
cmp
push
popf
outsb
xor
jns
das
sahf
mov
lea
mov
arpl
fildl
cs
jmp
push
mov
test
and
jno
into
mov
int
cld
sub
pop
mov
sub
pop
jb
ret
js
or
sbbb
adc
fldenv
ja
xlat
test
push
jecxz
mov
cmp
in
xlat
mov
outsb
sub
test
fnsave
add
sub
cwtl
add
add
fadd
jp
dec
xchg
ficoml
in
loop
insl
sti
xchg
mov
rcrl
jo
or
into
pop
stc
rcll
imul
gs
adc
cltd
lret
insl
movsl
add
daa
hlt
inc
or
xchg
cltd
test
js
push
dec
mov
push
jae
fidivs
adc
je
std
inc
push
inc
push
xchg
mulb
sbb
das
xorl
sub
rolb
xchg
idivb
lret
cmp
repz
or
outsb
xchg
fmul
pusha
add
imul
gs
arpl
sbbl
xchg
lods
out
fwait
in
mov
xor
pushf
xlat
push
insl
std
lret
adc
sahf
popf
lret
sub
das
mov
jno
pop
xor
in
les
dec
pop
lods
int3
lret
add
addb
loopne
repz
imul
and
cmp
push
shll
add
or
sub
stc
push
mov
movsl
fdivp
and
ret
xchg
mov
inc
dec
les
add
into
rcll
fnstsw
fistl
fists
sbb
dec
jecxz
cmp
test
xchg
pop
push
cmp
test
testl
or
and
add
mov
xor
and
sbbb
push
mov
lcall
dec
mov
mov
jo
mov
mov
icebp
dec
jbe
les
sahf
jae
pop
bound
mov
xor
cmp
and
mov
cwtl
test
addr16
jae
std
dec
int
fs
and
in
inc
mov
mov
repz
mov
sbb
cmpsl
jb
add
hlt
ja
cmp
xchg
add
inc
xchg
xchg
lahf
test
pop
jmp
cltd
xor
js
mov
loop
scas
mull
sub
sbb
loopne
push
sub
push
or
or
and
cmp
lock
push
and
fsubrs
sbb
cmpsl
cmp
ret
popf
lods
insl
add
push
push
xor
pop
stos
push
outsl
leave
cmp
loopne
fists
sub
sbb
add
jo
sbb
fidivl
lods
pop
ljmp
shll
adc
insb
cmp
dec
outsl
sub
dec
mov
mov
fwait
jmp
cmp
mov
outsb
out
xor
xor
inc
dec
aaa
mov
adc
mov
stos
test
jle
xchg
xor
call
cmp
ds
scas
or
rcrl
test
mov
mov
or
mov
lgs
xor
dec
pop
and
mov
xor
dec
movsl
push
push
roll
mov
jbe
adc
bound
xor
sub
inc
or
sbb
jg
dec
lcall
dec
add
and
hlt
aad
daa
rolb
out
and
dec
not
mov
push
movsb
mov
or
loopne
mov
loope
sbb
sbb
test
and
mov
or
aam
push
adc
rcrb
ret
pop
daa
clc
pop
and
mov
mull
push
sbb
std
int3
mov
in
js
pop
adc
adc
movsb
in
sbb
adcl
inc
cmpsl
popa
cmp
ret
jmp
mov
je
ret
inc
lock
cli
push
xchg
sub
jne
sub
and
aaa
pop
xor
push
out
test
int3
stos
inc
mov
fldl
sbb
insl
insl
jg
sub
pop
mov
xlat
loop
push
leave
cmp
xchg
sbb
add
notl
sbb
rcll
cmp
fdivrl
cmp
sbb
aam
ja
push
push
repz
inc
mov
dec
cmpsb
and
ss
ret
jnp
leave
pusha
out
sbb
test
dec
mov
bnd
dec
pusha
lret
or
sbb
loopne
inc
es
out
andb
outsl
sub
xchg
sbb
inc
mov
jg
xchg
pushf
and
mov
addb
cmpsb
clc
sahf
mov
test
clc
shr
int3
push
push
aaa
mov
hlt
jle
mov
push
push
nop
push
sub
adc
cmp
mov
in
pop
negl
dec
sahf
adc
sbb
jo
xor
push
xchg
imul
popf
push
lds
out
and
loope
fmull
cmpsb
arpl
sahf
repnz
or
outsb
add
cmp
loope
xor
cltd
arpl
push
incb
jns
jl
push
ljmp
jno
sbb
push
out
ret
pop
loopne
add
mov
call
adc
pushf
dec
and
sbb
xchg
push
nop
fwait
jb
push
push
insl
icebp
mov
adc
jge
pop
xchg
inc
jl
scas
xor
into
mov
sbb
cmc
fwait
or
es
sbb
pop
adc
lret
push
sub
mov
or
cs
push
hlt
push
sub
mov
cld
xchg
xchg
adc
sbb
xor
push
cltd
sbb
shlb
std
stc
cwtl
test
cmc
iret
clc
popl
cmp
lea
or
lods
xchg
cmp
lahf
xor
xor
jns
int
bound
mov
pop
lock
adc
insb
ja
cmp
or
stos
xchg
mov
mov
fidivs
mov
shl
pop
leave
xchg
add
sbb
into
fwait
out
bound
imul
leave
mov
ds
sub
btc
cmp
jge,pn
xchg
dec
clc
or
push
fidivrs
push
jmp
aaa
repz
in
adc
lds
sub
call
inc
xor
out
sbb
inc
jno
jns
into
cmp
bound
in
andl
mov
or
jp
adc
push
inc
push
cmp
cmpsl
jmp
daa
sbb
pop
xchg
scas
xor
rolb
mov
out
pop
jg
sub
xor
inc
fwait
mov
fimuls
pop
test
js
mov
vmovaps
mov
mov
cmp
movsl
sbb
fists
stos
lret
xchg
mov
xor
push
adc
push
jmp
mov
or
fdivrl
mov
leave
jo
add
out
inc
pop
out
jne
ljmp
mov
fisubl
jne
ja
mov
xchg
sahf
mov
int3
lret
mov
fildl
iret
inc
fildl
and
jg
insl
fnstsw
sbb
sahf
xchg
push
out
fninit
mov
pop
scas
inc
mov
push
ljmp
pusha
fcmovnbe
push
adc
cmp
push
in
cmc
adc
je
shlb
xchg
sub
adc
xchg
jg
imul
inc
adc
adc
mov
into
sub
inc
xchg
pop
lock
mov
mov
movl
fstpt
and
dec
mov
loop
scas
mov
xlat
cmp
int3
jecxz
xlat
outsb
sbbl
cltd
xor
iret
gs
cli
inc
ret
in
jbe
fisttpll
adc
clc
add
jb
lock
les
nop
dec
push
idivl
adc
push
xchg
pop
pop
lcall
push
in
mov
inc
mov
rorl
popa
adc
cld
psubusw
imul
test
mov
push
pop
movb
xchg
nop
pop
es
lods
fnstcw
fstpl
pop
mov
mov
mov
movsl
or
lcall
int3
shlb
notl
xchg
mov
mov
pop
xor
ja
sub
sti
int3
shr
and
ret
lea
fidivl
sub
jg
hlt
mov
push
adc
icebp
insb
and
fbld
test
xchg
pop
cmp
into
cmp
ja
outsl
dec
pop
jno
movsb
repnz
mov
stc
mov
add
test
outsl
push
rcr
hlt
gs
popa
ljmp
mov
aad
divl
mov
popa
and
shll
outsl
insl
std
xchg
sahf
mov
push
jno
sbb
ds
push
stos
lea
ss
outsb
cmp
int3
sub
ror
jp
aad
xor
ret
pop
push
out
rol
jne
mov
test
mov
iret
movsb
mov
lea
ljmp
mov
scas
int
ret
ja
mov
sub
cmp
sub
sub
xor
fisttps
cwtl
aas
xchg
stc
lcall
in
or
out
lods
in
int
sub
jns
js
pusha
xor
inc
mov
jae
lods
lea
sbb
es
and
mov
orl
jae
mov
mov
sub
mov
xor
xchg
or
aaa
fisubl
insb
jle
or
mov
cmp
fcom
mov
dec
or
mov
test
push
xchg
nop
xor
xor
dec
int3
aas
dec
das
fstps
mov
loopne
adc
dec
sti
pop
call
out
lret
and
mov
sbb
lea
lea
ljmp
enter
cld
out
inc
into
xor
sub
je
dec
and
lods
mov
js
adc
cmc
adc
fistpll
dec
pop
cmp
cmpsl
shll
xor
loopne
js
adc
cmc
sbb
xchg
add
in
jp
pop
adc
ljmp
cmc
fisubl
add
cld
ret
test
mov
push
repz
or
mov
sbb
and
fcoml
cmp
pop
fdivrs
jns
dec
mov
inc
scas
sar
jge
mov
nop
iret
push
neg
mov
push
pop
mov
sub
mov
pop
fs
les
inc
aad
int
push
cld
mov
test
jg
pop
cmp
xlat
popl
pop
mov
inc
stos
adc
test
dec
pushf
mov
out
test
rcl
in
mov
sbb
dec
sub
mov
stos
jbe
scas
push
ljmp
testb
pop
adc
nop
mov
les
std
sub
rcr
xchg
popf
orb
scas
cli
jnp
and
popa
xor
adc
lret
bound
rcr
add
nop
lods
mov
mov
or
mov
fchs
ja
jb
in
push
cmc
or
fldlg2
jp
cwtl
and
aas
jnp
inc
fimull
pop
cwtl
dec
fwait
popa
sbb
dec
in
mov
ds
int
test
push
lods
add
lods
mov
cltd
lea
xchg
inc
in
out
loope
fcomps
adc
mov
imull
mov
mov
mov
cmp
add
outsl
mov
lods
std
cli
xchg
dec
pop
divb
ja
cmp
pop
xchg
stc
in
pushf
xor
loope
ljmp
call
cltd
shr
int
dec
cmc
outsb
add
pop
xchg
negl
aaa
or
xor
in
int3
pop
in
repz
mov
mov
inc
mov
stos
rclb
shr
add
hlt
stos
mov
aaa
popw
jg
dec
mov
sub
lea
pop
sbb
stos
dec
jb
inc
mov
xor
sub
xorb
mov
test
sbb
rcrl
push
shl
mov
sbb
cmp
das
ret
jge
mov
inc
pop
push
sub
and
mov
sub
negb
rdpmc
xor
lea
loope
xor
fs
jbe
mov
or
jp
fsubrs
sub
dec
sbb
insl
sub
cmc
sbb
in
xchg
jb
insb
ret
call
mov
test
cmp
pop
inc
shlb
sbb
stc
out
sub
pop
jle
sub
add
out
das
dec
pop
or
lret
sahf
and
loopne
mov
fsubs
or
fninit
jp
or
clc
std
scas
add
sub
cwtl
popf
cli
push
jp
mov
sub
sbb
aaa
into
pop
out
sti
push
sub
sbb
mov
fldcw
ja
pop
hlt
lods
inc
es
in
mov
in
stos
aad
xchg
jge
jno
call
es
sub
cmpsb
btrl
inc
inc
pop
sbb
mov
lock
push
mov
or
adc
jb
mov
or
clc
lock
push
inc
int
shrl
sub
dec
push
sub
cmc
push
pop
dec
mov
mov
or
mov
inc
outsb
cs
outsb
mov
bound
ret
movsb
adc
jo
push
sub
sbb
mov
or
insl
inc
pop
xor
push
jno
clc
mov
fs
fcoms
movsb
inc
movsl
insb
imul
popf
jne
test
mov
mov
jae
movsb
jge
mov
jbe
push
rorb
or
cmpsb
mov
sub
popf
add
sbb
lcall
in
clc
or
jl
data16
cmc
mov
insb
sbbb
out
xchg
imul
xchg
loopne
clc
subl
aas
push
jb
inc
lods
insl
push
adc
pop
pusha
clc
iret
adc
dec
inc
test
inc
std
stos
push
adc
mov
daa
leave
xor
ljmp
mov
aam
inc
xlat
jmp
or
push
stos
fiadds
stc
frstor
in
push
stc
popa
test
sub
dec
into
jo
bound
mov
xor
xchg
inc
ffree
mov
fs
push
mov
test
insl
adc
ja
rcrb
das
adc
call
cmp
cmpsl
es
xor
mov
nop
fiaddl
mov
pusha
ss
cmpsl
mov
test
out
cmpsl
jo
inc
aam
out
mov
mov
repnz
inc
jmp
ret
ret
in
add
xchg
arpl
mov
cmpsb
lds
int3
push
jbe
fbld
out
cmp
pop
or
dec
add
xor
frstor
push
cli
pop
ficompl
dec
mov
adcl
popf
jne
dec
std
in
daa
push
fucomi
xchg
or
cs
xchg
sub
ss
test
loopw
popf
lret
pop
cs
pop
les
push
adc
cmp
mov
fs
jp
lret
dec
adc
cmp
dec
mov
scas
and
fs
sbb
sahf
sub
in
add
sbb
dec
test
pop
clc
mov
gs
mov
push
dec
and
out
pushf
repz
and
es
cmp
push
mov
pop
test
add
or
add
mov
add
insl
lods
outsb
sub
dec
xchg
push
fbld
inc
push
ljmp
mov
gs
adc
and
clc
xchg
xchg
sub
sbb
xchg
loopne
aas
pop
mov
aaa
pop
dec
loopne
add
ffree
add
and
rcrl
jb
daa
lret
popa
push
add
or
sub
pop
jb
push
sub
test
divb
pop
pop
ljmp
sbb
push
jbe
sbb
cld
stos
dec
dec
mov
dec
jp
mov
int3
and
dec
in
lahf
dec
push
int
jl
stos
mov
dec
ljmp
mov
cmpsb
adc
mov
into
jb
ljmp
hlt
or
daa
push
or
dec
or
in
dec
enter
insb
sub
or
sbb
xchg
pop
mov
nop
incl
test
gs
arpl
js
cmp
cmpl
lahf
and
out
imul
mov
lret
xchg
jp
sbb
leave
inc
add
fiadds
loopne
cmpsb
jno
xchg
cmp
add
gs
adc
or
inc
push
inc
jns
cmp
pop
add
in
cld
dec
addr16
ljmp
cmp
ljmp
adc
int
shlb
xchg
push
xchg
loope
enter
sarb
xor
hlt
mov
scas
addl
cmpsl
movsl
xchg
mov
scas
xchg
cmp
out
xor
cmc
cmp
push
sub
movsl
loop
je
das
mov
push
cld
iret
into
add
push
bound
aaa
pop
xor
fwait
aad
adc
jl
shrl
sbb
inc
or
pop
lret
pusha
leave
xchg
sbb
pop
push
aad
fisubrs
lret
mov
mov
push
xor
es
aas
es
jmp
jl
or
jl
out
lret
adc
cmpsb
jno
inc
rcl
mov
shll
daa
pop
xor
push
ljmp
push
pop
adc
sbb
adc
cmpsb
mov
xchg
sbb
out
or
pushf
scas
in
or
xchg
es
mov
movb
mov
jno
out
sti
cmp
mov
xchg
ret
int3
lods
jns
mov
mov
jmp
push
xchg
xor
inc
fcmovnbe
mov
dec
out
or
sti
xor
push
push
sbb
sbb
xchg
nop
mov
and
scas
mov
nop
mov
aaa
into
dec
xlat
leave
pusha
scas
cmp
cli
js
push
out
cltd
loopne
cld
sub
xor
movsl
mov
xchg
mov
into
enter
add
lret
pop
add
xor
fcmovb
enter
xchg
aad
xrelease
jle
dec
daa
fwait
hlt
and
inc
sbb
dec
cld
fldenv
sahf
jg
test
jmp
xor
arpl
mov
jnp
je
or
hlt
xchg
sub
push
pop
inc
cli
pop
lcall
sub
imul
es
inc
fwait
jbe
cmc
fwait
icebp
jl
movsb
movsb
cmp
xor
aad
test
pop
push
lahf
aaa
and
adc
mov
js
stos
inc
sbb
bound
xchg
arpl
lods
xchg
mov
jae
add
xchg
aam
dec
out
adc
xchg
inc
push
jp
aaa
dec
xchg
aaa
dec
outsl
adc
adc
cmp
jbe
ja
rolb
int3
insl
jo
mov
dec
pop
call
lea
cwtl
test
stos
subl
test
mov
out
xor
xchg
int3
add
int
xchg
xor
pop
negb
cmp
imul
rorl
mov
int3
adc
push
sub
dec
data16
and
test
dec
mov
cmpsb
orl
movl
cmp
lock
fimuls
daa
mov
movsl
rep
pop
dec
sbb
pop
push
insb
jecxz
push
push
mov
nop
enter
cmpsl
out
daa
lahf
lret
and
adc
loope
negb
ljmp
adc
or
sbb
aas
leave
or
adc
insb
js
or
movsl
fldl
sub
imul
jle
pushf
push
xchg
dec
js
sarl
and
incl
or
push
sbb
test
clc
movsl
pop
adc
xchg
subb
repz
dec
mov
mov
popa
adc
inc
std
push
in
pop
push
cmp
fidivrl
adc
and
adc
fucomi
call
or
cwtl
sbbl
mov
mov
ss
mov
int3
jg
jb
jnp
addl
adc
enter
fisttpl
daa
mov
push
adc
or
and
dec
sub
push
jg
push
mov
push
test
jle
pushf
pop
cmp
insb
ljmp
in
out
aam
rorb
jl
pop
cmp
loopne
pushl
mov
pop
lret
mov
mov
cmp
gs
pop
mov
arpl
subl
sbb
push
cmp
jl
jbe
jge
in
or
aaa
push
imul
push
aaa
jbe
pop
loopne
inc
mov
push
ljmp
mov
pushf
xor
add
lods
cmp
push
dec
movl
xchg
insb
push
pop
and
iret
jno
mov
push
cmc
jecxz
test
les
jp
inc
movsb
insb
cwtl
call
jle
bound
imul
popf
cmp
leave
data16
in
pushf
fnsave
sar
ja
mov
pop
fldt
pop
fs
mov
stos
ja
scas
cmc
cmp
negl
call
dec
stos
jmp
pop
jmp
cmpsl
mov
rcrl
mov
xor
js
dec
addl
in
push
inc
imul
xchg
inc
sub
jge
mov
sbb
jp
pop
and
jnp
and
outsl
jl
jmp
or
in
seto
xlat
sub
ret
mov
scas
xor
mov
cmp
enter
and
mov
insl
mov
fcomip
nop
pop
adc
lea
ljmp
or
jnp
xor
test
pop
sbb
inc
push
mov
inc
rcl
rcrl
or
insl
push
xor
jae
scas
lcall
std
movsb
cmp
and
ret
sub
test
sub
test
mov
es
fcompl
outsb
jbe
pusha
xchg
add
fnstsw
fisubl
xchg
xchg
sbb
or
ljmp
cmpsb
lahf
xor
dec
js
xacquire
and
or
add
add
mov
dec
sarl
pop
sbb
or
addb
xor
push
mov
in
out
imul
popa
cwtl
popf
repnz
call
xor
mov
push
jmp
mov
sahf
or
push
movzbl
xchg
dec
rcrb
add
out
inc
mov
frstor
jns
xor
mov
push
mov
mov
scas
lods
inc
loopne
cmp
imulb
jae
scas
sahf
push
mov
ret
xor
push
dec
adc
cmpsb
xor
add
pop
inc
cmpsl
data16
push
dec
cmp
hlt
in
imul
adc
arpl
repnz
xchg
push
mov
jmp
ss
fscale
mov
sub
rolb
sti
rol
push
cmpsb
inc
repz
pop
jno,pn
stos
and
mov
in
push
add
cmp
rep
adc
mov
lcall
xchg
xchg
jle
nop
incb
add
cmp
ljmp
push
cltd
shl
mov
xlat
and
or
pop
push
inc
cmp
shrl
push
mov
hlt
dec
stc
push
stos
popa
mov
pop
cli
outsl
xchg
mov
mov
in
sbbl
daa
test
fldpi
test
jp
imul
call
xchg
scas
test
frstor
das
adc
popf
pop
cld
lcall
in
popf
cmp
stos
mov
hlt
call
aas
lea
ret
clc
outsb
das
cmp
xchg
rolb
test
subl
iret
bound
in
mov
fcoms
push
sbb
ret
and
iret
out
imul
sub
push
jp
pop
popa
rcr
inc
adcb
mov
jmp
lods
shrb
shl
mov
bound
fstl
xlat
mov
or
adc
pop
pop
mov
pop
insl
ds
repz
ljmp
jne
push
call
shrb
iret
popf
cmc
loopne
mov
inc
lods
es
sbb
sub
jne
in
imul
cmp
shrb
cmp
push
sub
fucomip
lret
and
adc
push
aam
les
or
or
pop
stc
sbb
stc
stos
xor
jmp
push
rol
mov
mov
iret
add
scas
dec
sub
jnp
pop
mov
call
call
aad
insb
jmp
les
xor
out
pop
add
fistpll
mov
rcrb
sub
jmp
jnp
rol
shll
lahf
stos
pop
push
cmp
div
mov
sub
add
push
adc
fnstsw
int
adc
cli
mov
add
jp
lock
adc
in
or
aaa
push
pop
push
fs
fs
and
mov
data16
pop
xchg
mov
push
jl
mov
shr
cmp
jmp
cmp
mov
cld
sbb
aad
lret
jae
or
out
cmp
xchg
jns
add
cmpsb
cld
iret
xchg
dec
data16
icebp
mov
arpl
jg
ss
jae
andl
loopne
repz
jp
sub
add
or
xorl
insl
sbb
xlat
cmp
imul
xor
scas
ja
pop
ret
lods
cmp
stos
push
sub
dec
data16
stos
lds
xchg
inc
inc
mov
add
pop
mov
jg
sub
nop
xchg
cmp
lahf
jbe
sbb
dec
stos
call
inc
sar
mov
pop
aad
xor
fisttpll
push
out
xorl
xchg
xor
ja
or
data16
xchg
xchg
add
adc
push
sbb
pushf
outsl
push
stc
xor
jp
add
sbb
and
xchg
imul
dec
push
repnz
ljmp
out
push
and
adc
adc
jb
cs
jecxz
test
sub
mov
enter
push
shlb
hlt
cmp
dec
lds
jbe
jbe
stos
fdivl
inc
mov
push
and
mov
rcrl
jnp
xchg
sbb
sbb
rcrb
or
outsb
jo
add
xchg
xor
jle
mov
push
aam
jns
sahf
add
lods
dec
xchg
aad
daa
mov
pop
add
or
insb
loop
scas
jge
xchg
notl
jns
mov
lret
jle
and
arpl
shll
popa
call
clc
ret
repnz
and
jo
mov
addb
inc
or
push
lds
push
pusha
push
mov
nop
add
cmp
icebp
cmp
int3
dec
dec
hlt
and
enter
sub
popa
adc
scas
nop
or
pusha
or
lahf
adc
int
lret
sarb
loope
xchg
popa
testb
pop
movsl
lret
xor
add
sbb
nop
test
ljmp
mov
or
and
and
hlt
cwtl
cltd
and
sub
ljmp
dec
pop
sub
mov
icebp
jnp
stos
xchg
sbb
adc
imulb
popa
mov
test
out
out
inc
xchg
mov
cltd
stos
cmp
adc
dec
or
jg
xor
xchg
std
or
mov
lea
xchg
sbb
int3
mov
psrld
and
adc
js
test
jecxz
mov
dec
sbb
bound
push
shlb
dec
xlat
std
cmpsb
les
out
push
popf
inc
inc
lds
imull
out
dec
mov
mov
aad
mov
mov
negl
xchg
addr16
push
mov
push
in
cmp
sbb
cs
pop
iret
mov
imul
in
mov
test
rcr
fnstenv
ret
clc
push
andb
mov
pop
mov
sbb
sbb
pushl
sub
sbb
inc
stc
lock
pop
jge
push
loop
sub
fwait
rorb
loopne
enter
pop
adc
cmp
or
lahf
mov
sbb
or
dec
sbb
mov
pusha
nop
push
xchg
jno
mov
ficompl
adc
inc
dec
mov
das
fs
inc
adc
data16
movsl
sbb
out
enter
gs
jecxz
dec
enter
adc
jle
loop
sub
jp
dec
fs
incl
jg
jle
cmpsb
movsl
mov
dec
int3
and
aam
imul
push
xor
dec
cltd
inc
push
fstl
mov
and
lea
mov
and
pop
lds
xlat
sub
mov
push
xor
dec
enter
cs
mov
ljmp
test
sub
repnz
icebp
or
int
in
mov
mov
pop
mov
out
icebp
pop
mov
ret
aam
inc
repnz
sbbl
xchg
data16
clc
leave
in
mov
inc
cli
shll
push
ret
push
push
pushf
dec
mov
pushf
pop
icebp
jmp
ds
jnp
decl
ds
shlb
or
mov
ficoml
pushf
insl
sti
sub
and
mov
ja
cli
lock
outsl
mov
into
mov
push
jns
mov
cmp
enter
inc
adc
jno
and
push
cwtl
dec
les
out
outsb
push
mov
dec
jb
hlt
aas
sub
mov
xchg
pushf
fs
pop
xchg
std
mov
sqrtps
xchg
sub
dec
cmp
cld
icebp
mov
xchg
and
adc
lret
push
sub
out
sub
adc
pop
andl
jae
icebp
sbb
xchg
jb
or
mov
inc
sti
lods
loope
mov
xchg
pusha
add
loopne
and
inc
gs
and
pop
add
pop
xor
and
pushf
movsl
pop
stos
stos
repz
divl
mov
divl
js
in
add
push
cmp
jmp
pop
loopne
repz
fs
xchg
shrb
xor
xchg
dec
mov
push
hlt
mov
inc
dec
mov
repz
cmp
xchg
and
adc
add
repz
xchg
add
mov
popf
repnz
xchg
inc
push
ret
mov
push
insl
and
adcl
jbe
dec
mov
stos
clc
xlat
addb
sti
sbb
or
cs
es
xchg
loope
pushf
nop
sbb
test
js
insl
test
iret
mov
je
xchg
sub
pop
mov
push
repnz
mov
mov
jmp
inc
fdivl
sahf
pop
aas
shr
pop
gs
jns
test
adc
mov
adc
jle
mov
repnz
movb
imul
int
cwtl
mov
cwtl
popa
scas
out
xor
add
inc
push
out
jae
xor
stc
mov
jecxz
push
les
insl
int
sti
outsb
pop
aad
cmp
shll
outsl
fidivl
jmp
into
rcr
imul
push
inc
dec
add
dec
add
mov
mov
loop
inc
movl
cmp
icebp
fidivrs
ja
dec
xchg
push
dec
movsb
mov
xchg
pop
cmc
xchg
cwtl
inc
loop
push
ljmp
jno
mov
inc
inc
cmp
inc
pop
push
repnz
loop
jns
sbbl
out
dec
call
xchg
push
or
jae
ficoml
adc
add
sbb
outsb
sub
ret
sbb
scas
les
push
xchg
sahf
in
fdivl
pushf
mov
sarb
shl
add
xor
insb
jno
jle
insl
mov
icebp
or
push
jbe
cmpsb
pusha
ss
fistl
jnp
loop
or
jl
jno
in
push
repz
sub
rcrb
xor
and
into
dec
arpl
mov
shrl
jne
add
popa
jb
push
pop
pop
xor
cmp
aad
cmp
fwait
push
cmpsb
aam
in
dec
loope
push
aam
add
mov
add
or
jb
lock
xchg
cmpsb
mov
add
test
outsl
sahf
mov
sbb
and
adc
mov
fdivrl
loopne
movsl
and
lcall
popf
sub
and
or
sbb
push
mov
pop
aas
pop
add
pop
aad
stc
in
sbb
repz
outsb
arpl
sbb
push
popf
sbb
sahf
push
scas
out
arpl
lock
vpaddsb
aas
add
fdiv
lods
outsl
jnp
mov
cmp
dec
movsl
cmp
out
loope
lods
sub
sub
shl
cmp
dec
enter
ds
jecxz
popf
fistps
ret
mov
mov
fcoms
cld
shlb
and
pop
push
jp
sti
or
jge
stc
mov
inc
sti
jp
popa
into
lret
inc
push
adc
sub
stos
sub
ret
je
sub
inc
mov
jne
mov
mov
mov
sti
xchg
sub
push
and
daa
add
in
ds
imul
ja
add
push
xor
in
subl
add
int
sbb
add
fs
clc
das
cmp
in
imul
mov
mov
mov
inc
pushf
popa
sub
sbb
mov
movsl
sub
lds
das
and
sbb
push
xor
lret
jae
and
adc
in
push
inc
xchg
leave
xlat
outsb
out
ror
clc
mov
mov
adc
hlt
mov
inc
pop
aaa
jmp
and
test
rorb
jne
mov
lcall
in
das
lds
mov
xchg
sbb
adc
sbb
xchg
enter
cmpsb
int
fwait
jmp
or
outsl
call
insb
sti
push
aas
popl
push
lcall
rolb
pusha
mov
insb
sub
movd
adc
inc
mov
add
jb
mov
ret
jmp
js
mov
test
mov
and
xchg
imul
sbb
sub
mov
rolb
mov
add
inc
sbb
in
fisubs
add
push
adc
sbb
or
fwait
in
mov
inc
shrb
mov
test
jle
push
mov
xchg
out
inc
or
sub
lcall
popf
or
mov
enter
rcrb
lcall
mov
jns
shrb
hlt
fnstenv
cmp
jl
jo
lret
xlat
test
add
add
je
pop
shrb
mov
or
push
pop
adc
mov
ds
jl
stos
or
add
ret
xor
push
sub
stc
nop
mov
dec
pop
xchg
je
fdivl
or
xorb
iret
push
leave
imul
aad
jecxz
into
imul
adc
sub
insb
dec
inc
cmpsl
or
push
cli
stc
and
pop
es
gs
xchg
lcall
stc
into
push
and
enter
das
addr16
dec
xor
pop
pop
call
add
divl
mulb
test
lret
push
cs
and
test
test
or
cwtl
xchg
xchg
and
mov
les
or
xlat
pop
sbb
pop
clc
imul
stc
dec
mov
shll
inc
push
add
aaa
lret
pop
imul
mov
adc
fistps
adc
lods
jo
xchg
lret
or
inc
or
xchg
dec
mov
pop
dec
ret
jp
and
adc
je
bound
dec
jle
cltd
pop
cmp
test
sbb
loopne
lahf
inc
int3
mov
inc
out
clc
push
inc
and
mov
hlt
pop
in
movsb
cltd
fs
aad
xchg
mov
das
dec
scas
cmp
pop
fidivrs
int3
cmp
mov
rcrl
inc
mov
loop
mov
inc
adc
mov
mov
push
mov
arpl
xchg
mov
into
mov
mov
pop
shll
mov
lock
ret
pop
movsl
push
stos
adc
lret
movsb
push
cltd
pop
sbb
sbb
aaa
stos
sarb
xor
and
cmc
sbb
cld
shr
sub
inc
mov
je
and
jb
bound
popf
sub
pop
in
mov
add
pop
fnstenv
pop
paddsw
dec
sub
jl
lds
push
push
or
dec
push
mov
mov
mov
dec
cltd
aaa
in
inc
or
mov
cs
mov
mov
xor
or
aas
push
insb
sub
xchg
imul
mov
xchg
push
stos
sub
mov
sbb
and
and
rorl
outsb
mov
mov
cmp
jno
pusha
cmp
stos
test
leave
pop
int3
xlat
mov
fwait
les
add
in
cmp
xor
cmpsl
adc
shrl
or
sbb
data16
or
dec
stc
lods
daa
loop
pop
adc
mov
dec
in
add
sbb
pop
xchg
cmp
or
call
mov
scas
xchg
or
imul
add
push
cmp
add
scas
repnz
mov
enter
pushl
xchg
push
inc
rclb
adc
lea
arpl
aad
cmp
lret
addr16
fsubrl
shlb
add
jl
pop
stos
xchg
movsb
es
fcomps
jle
inc
std
mov
insb
out
loope
mov
push
leave
or
xchg
aam
js
add
inc
mov
sahf
mov
sbb
xchg
adc
pop
ret
loope
loopne
xor
movsb
sub
dec
jb
dec
xchg
arpl
adc
popa
cmp
cmp
cltd
push
leave
loop
sti
jbe
mov
std
inc
cld
lcall
cs
xchg
xchg
mov
leave
ret
pop
paddd
imul
cld
popa
imul
pop
adc
test
fidivl
scas
push
dec
cmp
or
mov
movsl
adc
rcl
jnp
sbb
pop
loop
mov
or
int3
fisttps
or
imul
xchg
in
add
xchg
sub
pop
into
les
push
in
xor
call
cltd
pop
mov
pop
ja
lret
add
adc
xchg
popf
rclb
mov
xor
mov
fsts
scas
scas
in
outsb
cltd
shlb
int
fcmovu
js
push
fistps
bnd
cmp
xor
inc
inc
pop
adc
adc
cmp
cli
and
mov
popf
add
clc
outsl
std
and
aam
mov
and
aaa
xor
push
popf
mov
adc
xor
mov
push
in
push
push
cmp
das
ret
and
cmp
pushf
fildl
fdivrp
movsl
jecxz
aad
gs
incl
arpl
cmp
insb
jecxz
mov
dec
mov
or
sub
sub
lahf
pop
ds
inc
dec
shlb
xchg
jg
xchg
pop
jb
sbb
fstps
xor
subl
enter
and
mov
mov
jecxz
cmp
repz
and
repz
cmc
mov
add
addr16
leave
add
pop
aam
adc
mov
fstpt
dec
pop
sbb
jno
cmp
sub
add
jg
xor
mov
pop
jle
adcb
pcmpgtd
jno
sahf
xor
arpl
sbb
jae
lret
rcrb
fmull
std
add
stos
fnstsw
xorl
jecxz
mov
dec
inc
dec
fsts
std
push
cs
or
ljmp
or
push
mov
xor
dec
sub
lcall
pop
movsb
fsubrl
inc
or
adc
aaa
lds
jmp
dec
loope
jl
push
in
sahf
xchg
sub
mov
jb
xor
push
and
adc
ror
add
xor
leave
mov
sahf
push
jmp
dec
fistpl
scas
sub
sti
mov
sarb
add
pop
nop
daa
lea
test
dec
mov
testl
cwtl
cld
das
insl
stc
pop
and
add
loop
jmp
pop
xchg
fsts
ja
jno
into
mov
loop
mov
dec
cmp
mov
xchg
ficompl
cmp
dec
cld
pusha
jnp
lods
inc
scas
ds
test
mov
imul
and
adc
jg
xor
ss
sbb
loopne
das
mov
loope
mov
push
in
jp
adc
pushf
je
cmp
sahf
sub
mov
outsl
xor
jnp
add
add
adc
xchg
into
or
aas
addr16
nop
mov
sbb
and
loop
je
xor
sbb
in
test
cmc
repz
pop
neg
push
jle
aaa
mov
cmc
orl
jno
inc
imul
aas
ret
int
jp
sbb
lahf
insl
or
or
cmp
imul
or
clc
inc
or
lock
andb
cmp
add
shl
bound
sub
push
add
inc
stc
jmp
cmp
repnz
push
pop
std
lcall
add
dec
add
shl
and
lds
xor
adc
sub
push
cmp
or
pusha
mov
in
es
add
mov
testl
mov
mov
inc
movsl
das
sub
xchg
dec
sti
push
out
popf
out
push
adc
ss
rcr
pop
adc
fisttpll
icebp
pop
ja
andb
push
sbb
adc
xchg
imul
movb
ret
mov
sub
and
fstps
movsb
xor
aam
in
test
cld
adcl
negl
jle
loope
inc
sbb
or
pusha
xchg
add
sbb
in
push
or
out
clc
push
mov
cmp
pslld
dec
cmpsl
cmp
pop
insl
mov
sub
push
mov
dec
fbstp
outsl
mov
and
into
cmpsl
cmp
sahf
lods
mov
fisubrl
xor
inc
cmc
cmp
adc
iret
jp
cmc
fldcw
sbb
jl
ds
jecxz
imul
add
ja
movsb
xor
pop
lcall
cwtl
addr16
mov
lcall
into
xchg
dec
in
ret
inc
jecxz
es
out
lods
in
or
outsl
rclb
fistpll
scas
add
mov
cmp
hlt
xlat
or
lds
sbbl
sti
push
out
in
push
pop
cmpsl
or
test
mov
jno
test
and
xor
push
mov
les
dec
iret
cmp
mov
push
pop
fcmovnbe
outsb
sub
jp
push
and
fcmovb
in
jae
pop
insb
sti
sub
xor
lods
inc
sub
xchg
sub
int
adc
shlb
rorb
xlat
fisubs
lcall
mov
adc
fcoml
inc
fs
and
inc
out
push
pop
aas
iret
mov
cmc
test
xor
adc
setle
aas
arpl
iret
mov
ret
mov
fs
int
pop
pushl
arpl
je
inc
shrb
rclb
mov
scas
ficomps
stos
sahf
xor
push
ds
into
outsl
je
nop
stos
dec
jbe
xlat
fbld
dec
sub
xchg
sub
addr16
sbb
push
push
sub
scas
or
pop
out
js
and
sub
add
fnsave
push
sub
stc
pop
and
das
inc
mov
ljmp
cli
xchg
mov
adc
ljmp
mov
push
sub
sarl
inc
mov
mov
popf
pusha
not
mov
inc
add
stos
adc
lret
inc
into
aas
sub
or
ret
test
xchg
mov
xor
pusha
sub
ficompl
in
cmc
and
and
push
or
xchg
mov
stc
dec
cld
imul
mov
mov
jae
mov
mov
fidivl
daa
cmp
pop
fistps
cmp
pop
push
inc
jmp
ss
xor
scas
cmp
imul
rcll
ret
shr
push
sbb
xor
gs
pusha
cs
mov
fimull
mulb
repz
and
sbb
popf
xchg
lock
sbb
movsb
mov
push
outsl
push
xchg
leave
jae
xchg
test
pushf
jno
adc
in
or
shrb
idiv
pop
arpl
bound
nop
dec
mov
imul
or
xchg
out
dec
push
add
es
mov
jle
stos
stos
mov
xor
add
xchg
outsb
pop
jg
shll
or
addr16
xor
mov
stos
add
xor
mov
arpl
jle
inc
int
pop
dec
mov
xchg
adc
push
inc
mov
push
fcoms
xor
scas
xlat
add
mov
inc
mov
dec
xor
pop
popf
fld
jecxz
out
daa
mov
je
rcl
push
inc
add
push
cmpsb
pushf
and
test
out
sarl
lahf
aam
repnz
fsubrl
int
nop
stos
mov
leave
sbb
inc
in
int
lock
push
xchg
push
inc
arpl
add
or
xor
xchg
loope
iret
jb
lahf
js
rcrb
mov
xchg
clc
jbe
and
push
mov
outsl
lds
fisubl
or
xor
push
or
fldcw
xor
notb
sbb
insl
jns
xchg
lahf
lret
mulb
sub
dec
mov
cmp
cmpsb
xor
fisubs
jb
fisttpll
fistpll
jge
adc
stos
xor
jecxz
jp
sbb
ret
aad
mov
jmp
mov
out
push
cmp
xor
add
pop
mov
push
jbe
xlat
fists
stc
fcoml
sub
push
add
les
cmpsl
jecxz
push
push
cmpsb
mov
push
cli
xchg
pop
or
jle
mov
mov
add
nop
iret
mov
mov
xor
mov
pop
outsl
jns
inc
mov
lahf
iret
mov
add
sub
movsl
pop
daa
xor
leave
cmp
lods
inc
and
test
cmpsb
inc
push
lods
adc
call
and
and
cmpsl
rcrl
and
fwait
or
jo
sti
cs
shll
xlat
aad
mov
cmp
bound
fbld
pushf
push
in
nop
rorl
aaa
fidivs
sbb
lret
pop
mov
mov
and
dec
aaa
insl
imul
es
jb
cwtl
pop
lods
pop
cmpsl
mov
mov
lcall
rcrl
push
push
add
movsl
xor
sbb
dec
loope
dec
jmp
adc
xchg
or
mov
aaa
bound
xor
adc
sub
adc
hlt
sahf
and
mov
ret
ret
addr16
sti
test
je
fdivr
xchg
test
out
xor
mov
xchg
xor
js
rsm
xor
xchg
dec
push
pushf
shll
sahf
pushl
and
xchg
xchg
inc
xor
mov
loop
int3
lcall
sahf
jb
mov
xchg
mov
push
jae
sbb
test
pop
push
orl
and
out
mov
js
jle
out
sub
lret
push
repz
dec
sub
out
fcmovnb
aam
jns
dec
in
stos
orl
imul
adc
adc
testl
xor
mov
mov
jle
mov
neg
jmp
stos
pusha
sahf
lods
mov
mov
or
data16
shrb
aam
push
mov
outsl
jnp
lock
fdivp
arpl
in
enter
dec
pop
cmp
or
cld
xchg
xchg
mov
and
xchg
outsb
fistpll
test
sub
stos
mov
test
pop
cwtl
push
ret
lret
mov
pop
test
dec
mov
shrl
mov
movb
mov
jno
mov
xor
insb
ja
and
mov
lea
scas
cmpsl
mov
testb
add
cmp
jp
scas
cmpb
rorb
cwtl
xchg
imul
mov
imul
sub
xor
add
cs
pop
scas
cmp
data16
icebp
xor
fbstp
je
aam
sub
adc
sbb
add
cmp
repnz
aas
fldl
xchg
and
in
ret
cmp
pop
shr
ja
cltd
das
nop
cltd
mov
lret
daa
daa
gs
jae
pop
lahf
je
xchg
adc
cmpsb
inc
mov
lret
jbe
stos
lds
int3
xchg
add
jnp
andb
mov
sub
sbb
popa
dec
sub
jl
repnz
xor
pop
inc
mov
ja
fidivrl
push
mov
dec
cmp
push
test
cmp
push
divl
popf
cmp
insl
mov
out
mov
push
je
push
dec
inc
lods
jns
out
adcl
mov
dec
lds
or
ret
jle
adc
add
xor
arpl
cmp
inc
outsl
repnz
inc
xor
pop
xchg
leave
pusha
test
mov
popa
inc
mov
in
xor
imul
xor
and
push
ret
mov
call
int
ficompl
push
and
ljmp
inc
bound
cmpsb
cmp
aas
std
les
sarl
push
test
mov
mov
mov
and
pop
and
scas
in
or
xchg
mov
pop
jbe
mov
pop
fs
cmp
mov
dec
push
fistpll
pushf
testb
cmp
ja
add
out
mov
or
push
push
adc
mov
ret
dec
sbb
nop
daa
lcall
adc
das
cmp
inc
mov
bound
dec
inc
or
mov
mov
repnz
call
insl
fucomip
cmp
imul
int
push
ds
pusha
mov
adc
es
js
push
cwtl
jge
lds
sbb
push
pusha
push
stc
sarb
sub
adc
int3
and
push
xor
popa
jge
sbb
mov
jmp
xor
sub
sbb
cmp
xchg
dec
push
andl
mov
lods
jg
pop
testb
jo
add
loopne
rep
mov
ja
subb
ret
pop
sub
pushf
xor
pop
push
inc
mov
xchg
xchg
pop
cmp
cmp
rcl
jp
cld
inc
sbb
mov
ljmp
testl
dec
stos
or
scas
and
stos
shll
jae
out
pop
jge
shl
into
sahf
fbstp
or
sbb
sbb
lahf
xor
adcl
cs
inc
jmp
inc
ljmp
jb
adc
jae
mov
or
jnp
imul
inc
pop
cmp
pop
xchg
ret
jg
mov
out
les
jg
push
test
bound
sbb
jo
add
mov
xchg
rcrw
les
filds
jns
out
mov
xlat
push
jb
and
cli
xchg
pop
mov
mull
scas
inc
adc
repnz
dec
les
imul
cmp
sbb
xchg
or
inc
and
in
push
dec
inc
sub
sub
mov
xchg
jo
jne
or
lods
sbb
stc
jp
sarb
or
add
sub
or
mov
lods
fcoms
jecxz
cs
xor
mov
cmc
test
sbb
pop
adc
pop
loopne
and
daa
lcall
adc
out
in
insb
jae
mov
in
je
cmpsl
xchg
jno
pushf
sub
or
loopne
aas
shll
mov
nop
aad
gs
jg
das
jnp,pn
xor
or
lea
stc
lret
jmp
fdivrl
lret
and
mov
in
xor
shrl
test
ljmp
repnz
testb
mov
fistpll
pop
ret
pop
fwait
xor
mov
out
out
cli
or
outsb
ljmp
outsb
shll
insb
xchg
js
or
xchg
test
mov
inc
lods
inc
in
mov
push
in
outsl
lahf
sbbb
push
dec
add
rcr
xor
mov
and
xor
inc
ret
push
cltd
pushf
inc
push
cwtl
xchg
jge
das
xor
aaa
ficompl
jae
int
imul
dec
movb
fstl
adcb
or
jnp
push
xchg
data16
shrb
leave
pusha
sbb
cmp
rol
test
dec
adc
dec
push
jl
ds
hlt
aaa
mov
icebp
movsl
cmp
push
or
jnp
ret
jle
pop
addr16
out
pushf
fnstsw
test
das
stos
pop
test
dec
neg
sub
fmul
sub
jnp
jns
js
or
and
sti
sti
call
test
pushf
xchg
sbb
hlt
push
mov
jno
mov
dec
xor
mov
inc
xor
aas
ljmp
mov
mov
ds
nop
in
mov
mov
and
test
movsb
pop
push
inc
jle
xor
cmp
dec
stc
xchg
dec
movaps
xor
push
jmp
popf
fs
pop
and
push
inc
adc
clc
popl
push
arpl
mov
sbb
xorl
cmp
call
out
in
mov
int3
int3
add
mov
pusha
add
mov
es
mov
push
call
inc
clc
or
mov
rcl
ret
jns
outsb
jecxz
cmp
and
xor
xchg
push
inc
pop
add
cmp
in
mov
movsb
mov
nop
mov
mov
fadd
fbld
sub
dec
test
shlb
int
cwtl
test
outsb
es
ret
adcl
in
orl
jp
mov
or
cmpsl
mov
push
in
negl
sub
lds
sbb
xchg
jno
inc
ss
mov
sbb
pop
jne
and
ss
mov
mov
lock
shrl
xlat
sub
and
imul
sti
xlat
mov
or
lcall
leave
sbb
es
mov
ret
jmp
push
aas
xchg
lea
xor
dec
inc
xchg
stos
add
out
mov
mov
fisubs
cmc
xchg
jns
add
cmp
jl
xchg
cmc
jbe
pop
in
sub
push
adc
mov
cli
push
pop
lea
cli
mov
nop
and
xchg
cmp
and
fucomp
test
bound
sub
aas
sti
pop
pop
pop
out
je
shrb
pop
xor
enter
cltd
iret
dec
pop
rorb
or
movsb
mov
ret
mov
aam
mov
sbb
shrl
sbbl
fcomps
les
lcall
in
push
leave
rcr
call
inc
adc
lcall
mov
push
mov
nop
dec
mov
pusha
cli
mov
mov
rorl
loop
xchg
mov
aad
mov
cs
and
rcrl
cmp
fidivrl
rorl
cmp
push
int3
leave
ljmp
push
mov
add
dec
xchg
fbstp
pop
test
in
jns
mov
outsb
xchg
pop
insl
std
jo
clc
cwtl
lock
xor
pop
mov
dec
std
dec
cmp
loopne
sub
out
nop
gs
std
lret
rcl
jl
pop
xor
dec
rcrl
enter
addr16
or
add
push
jno
cs
mov
jbe
flds
popa
imul
negb
mov
stos
xchg
cmpsl
and
mov
das
ret
push
mov
mov
ficoms
push
mov
cmp
fistps
pop
push
xchg
sub
mov
es
and
push
jge
xor
xchg
xor
dec
in
push
sbb
or
mull
out
push
out
mov
add
push
fldenv
push
fisttps
stc
mull
mov
mov
mov
fcoml
inc
fidivrl
push
popa
iret
lea
scas
and
lock
and
sub
add
loop
je
outsb
mov
push
mov
cmpsb
fidivs
xchg
jle
and
idivl
mov
sbb
push
out
jo
and
test
mov
sbb
bound
adc
adc
or
xlat
sahf
lds
or
xchg
int3
arpl
psrad
mov
dec
add
fs
push
pop
jl
mov
inc
iret
xor
sub
xor
push
test
jno
sub
jae
fwait
hlt
adc
or
into
test
cmp
nop
dec
xchg
rcr
scas
pushf
xor
lock
loop
cmp
dec
add
xor
add
test
push
fwait
xor
adc
jno
pushf
dec
pop
sbb
mov
hlt
pusha
jl
sub
lret
test
inc
fiaddl
es
divl
cli
sbb
push
jle
adc
stc
adc
xor
xor
mov
pop
cmp
push
stos
lds
inc
xlat
cld
fs
pop
jb
loope
pop
pusha
pop
repz
push
out
cmp
icebp
insb
sbb
xchg
das
cmp
jmp
push
sbb
mov
aas
std
push
sti
xor
cld
outsl
mov
or
out
or
pop
lahf
das
scas
cmp
dec
dec
outsl
or
cmp
aaa
mov
mov
sbb
jmp
int3
adc
lea
mov
pusha
ret
mov
aaa
mov
js
xor
jae
xchg
mov
int3
adc
sbb
mov
hlt
fstpl
stc
in
push
subb
hlt
xor
pushf
mov
sbb
cmp
test
xor
inc
stos
xchg
push
popf
insb
mov
push
ret
adc
jno
xchg
cltd
mov
fstpt
shlb
loope
mov
pop
les
adc
dec
push
xchg
push
mov
cld
sub
lret
cmpsl
jp
jl
sbb
in
jle
fidivrs
repnz
fdivl
cmp
repnz
push
inc
mov
movsb
in
xchg
stos
dec
ds
int3
lcall
cmp
push
xor
xchg
adc
ja
arpl
xchg
sbb
jnp
out
out
insl
jecxz
outsb
std
push
jl
lods
sub
push
lea
enter
or
cli
and
xor
test
adcb
mov
pop
pop
cmp
insl
jnp
mov
pop
pop
repnz
or
repz
jns
das
mov
orb
xchg
xorb
push
xchg
jnp
int3
lods
mov
cmpsl
and
fstps
jns
cmc
adc
in
shlb
adc
pop
popf
lcall
movsl
or
or
mov
movsb
cmp
int
sub
adc
mov
sub
cs
xlat
rol
into
jge
inc
fsubrs
lahf
pop
dec
add
jo
jno
sub
pop
andb
xor
adc
push
les
outsl
testl
stc
je
pop
xchg
ret
test
push
leave
fcompl
pop
adc
shl
xor
jl
bound
data16
adc
mov
je
pop
mov
pop
mov
cmp
fwait
cli
pop
insb
daa
adc
push
sub
mov
inc
out
mov
aad
mov
fsts
test
jge
and
lock
stos
sub
lock
mov
aaa
sarl
xchg
out
repnz
mov
mov
lahf
and
add
jo
outsb
or
inc
cmpsl
lret
xlat
sub
mov
xchg
jmp
sbb
arpl
pop
mov
lahf
cld
and
ljmp
cmp
movsb
js
mov
mov
mov
adc
mov
cmpsb
gs
sbb
or
hlt
ret
or
mov
fsubs
dec
xor
lds
xchg
imul
clc
jae
arpl
sbb
jmp
rclb
in
or
dec
mov
xor
incl
and
pop
or
mov
cmpsb
jns
adc
sub
hlt
aam
loop
mov
inc
mov
loope
cwtl
adc
or
fucomip
jnp
add
aam
lods
stc
jo
movq
xor
cmpsl
movsb
loope
fisubs
test
decl
sub
pop
sub
jg
cmp
push
jle
sub
jbe
pusha
ret
xchg
mov
jle
call
jl
mov
ljmp
sbb
xorb
and
ss
jg
or
repnz
push
pop
mov
pushf
mov
int
pop
repnz
sub
xor
cltd
pop
out
push
sbb
test
ljmp
cmp
fdivl
and
mov
pop
mov
add
and
or
aad
inc
fldt
js
shlb
xchg
add
mov
jns
bound
movsb
mov
cmpsl
loop
dec
ror
loop
xor
jmp
xchg
add
xor
xor
sub
repz
jae
and
stc
js
inc
jne
jno
dec
imul
aam
add
mov
xlat
in
and
popa
pop
inc
push
in
mov
ret
flds
jne
inc
lods
aam
xor
aad
push
lahf
adc
scas
push
aad
enter
cmp
inc
mov
mov
cmp
adc
and
ja
orl
pop
out
test
mov
movlps
pop
pop
xor
dec
and
clc
fwait
enter
mov
lds
inc
lret
cmpsl
rcrl
sbb
js
push
pop
push
xchg
or
jno
insb
and
fldl2t
dec
mov
xchg
and
cmpb
xchg
xor
adc
sub
and
cmp
push
pop
je
or
add
mov
push
pop
sub
sbb
outsb
pushf
out
push
cmp
xchg
insl
lea
cmpsl
sbb
sub
mov
or
or
pshufw
add
fnstsw
ret
adcb
xor
push
cmc
imul
inc
shl
dec
ljmp
into
mov
jmp
jp
mov
xor
rcl
mov
push
dec
sbb
lods
xchg
sbb
xor
dec
cmc
cld
ja
and
icebp
movsl
aam
stos
jbe
jno
mov
out
sbb
mov
icebp
mov
dec
adc
dec
xor
addr16
nop
mov
add
sar
lcall
cwtl
pop
lahf
pop
jle
jb
sarl
aad
mov
sarb
xor
push
push
mov
xor
out
stos
rolb
dec
lea
jae
lds
scas
bound
mov
loopne
jmp
int
mov
mov
add
ljmp
xor
out
xor
mov
push
push
sahf
xchg
sbb
lcall
insl
and
fdivrs
add
dec
and
es
add
adc
mov
add
push
stos
fisubl
adc
mov
jle
fst
push
xchg
jae
mov
xor
data16
jp
mov
mov
popa
testl
or
repnz
ret
aam
mov
push
addr16
or
lret
add
lods
adc
xor
scas
jge
data16
xchg
and
push
std
pop
mov
xchg
adc
lock
dec
fcmovnb
mov
out
push
addr16
and
jle
cs
and
lea
ljmp
andl
int3
out
aad
sbb
sbb
scas
fistl
outsl
into
xchg
pop
shll
aad
stos
subl
mull
push
mov
in
pop
fnstenv
lret
and
and
mov
das
shrl
fwait
dec
movsb
rol
jo
rcrl
jge
or
adc
adc
mov
push
inc
fwait
repnz
jbe
nop
daa
push
mov
in
testb
sub
das
push
movb
mov
aas
mov
mov
aad
sub
xchg
and
xchg
pushf
inc
dec
out
jecxz
cmp
divl
repz
std
aam
dec
rcll
push
out
pop
fidivrl
dec
aas
addr16
cmp
cmc
clc
test
dec
xchg
xlat
outsl
cmp
push
es
xchg
fldenv
call
das
outsl
jnp
dec
test
jp
mov
push
xchg
add
int
dec
and
negb
sbb
inc
sarl
dec
push
jecxz
enter
mov
mov
fnstsw
clts
bound
flds
add
mov
dec
arpl
cltd
inc
cmp
les
enter
push
mov
aas
pushf
out
inc
pop
push
arpl
cmp
xor
adc
in
push
stos
push
sti
xchg
mov
or
mov
inc
enter
and
xchg
inc
ret
mov
gs
lcall
xor
orl
inc
jecxz
out
push
adc
xor
mov
cmp
std
lock
cmp
mov
inc
cwtl
addl
pop
xchg
subb
add
mov
mov
rcr
into
popa
lock
subl
lcall
jl
cli
cmp
xor
pop
outsl
inc
adc
rclb
pop
out
add
lret
fbstp
fldt
or
mov
or
mov
sarl
lods
pop
mov
jo
sub
in
les
es
into
sbb
mov
aaa
add
cli
lcall
cmp
and
pop
adc
pusha
outsb
loope
push
xchg
fbstp
jp
dec
mov
das
and
mov
or
test
mov
cltd
leave
test
jmp
cmp
cli
sbb
mov
add
pop
ret
inc
mov
sbb
cmp
xlat
cltd
cmp
enter
or
jnp
pushf
popa
ja
hlt
xchg
xchg
and
in
cmp
jle
divb
and
sets
xor
out
in
loope
fcoms
lods
int
cmp
sti
loop
and
add
test
pushl
sbb
mov
add
xor
and
in
mov
scas
shll
stos
insl
mov
fdiv
sahf
jns
test
in
das
inc
jne
mov
adcb
int3
mov
pusha
dec
es
mov
dec
jecxz
xchg
jbe
sbb
outsb
sbb
cs
insb
filds
pop
mov
dec
cmp
jns
mov
sbb
dec
les
dec
add
scas
ds
rcrl
shl
aad
pop
dec
into
adc
lds
dec
rcrl
fmul
call
jb
dec
int3
out
addr16
push
cmp
mov
cld
xor
stos
mov
add
dec
ja
in
movsl
insb
dec
mov
mov
push
xor
jb
dec
sbb
mov
mov
mov
ret
add
outsl
fldt
dec
or
push
fstpl
clc
pop
or
adc
sbb
or
adc
lret
ja
syscall
fsubl
dec
arpl
dec
xor
mov
in
inc
adc
das
push
rolb
pop
mov
xor
test
scas
nop
jb
inc
mov
cmp
lret
add
mov
pop
fnsave
adcb
mov
fs
xchg
jl
stos
sbb
int3
or
sub
pop
ret
and
insl
jns
push
scas
lret
stc
jge
inc
push
sahf
std
mov
sbb
mov
cwtl
loop
enter
daa
or
and
or
jle
divl
imul
out
xchg
jmp
lds
int3
shl
push
scas
push
test
lock
xor
inc
add
sti
andb
ss
jne
add
lahf
push
mov
mov
fsubrs
pop
mov
mov
lret
or
ja
sub
rcrb
xor
push
add
aad
and
cltd
jbe
dec
push
popf
sahf
inc
add
sub
repz
imul
add
xchg
jbe
test
mov
imul
outsb
inc
pop
rolb
mov
mov
dec
jmp
add
daa
mov
testl
xchg
pop
repz
mov
dec
mov
lret
pop
cmpb
sub
stos
scas
inc
loopne
ret
mov
int
or
ret
pop
sub
cmp
shrl
dec
push
cmpsb
int3
leave
pop
movsb
dec
mov
ret
hlt
es
or
pop
push
test
pop
mov
cmp
mov
out
sbb
mov
mov
fimuls
inc
push
idivl
into
cmp
xor
test
and
dec
outsb
mov
nop
inc
cmp
mov
dec
loope
mov
push
mov
outsb
xchg
imul
enter
sub
jecxz
xchg
add
adc
popf
sub
sbb
and
dec
popa
cwtl
ret
lea
sub
sbb
dec
jle
gs
pusha
cmpb
cmp
jbe
push
lret
sarb
push
lret
cmp
sub
mov
fistps
mov
push
xchg
sub
xor
push
fisubrl
aad
sahf
mov
addr16
xchg
inc
mov
jg
and
popa
xor
inc
push
mov
in
inc
out
cmpsl
jno
js
das
xchg
pop
out
or
pop
mov
mov
into
test
cmp
or
push
outsb
sbb
in
push
xchg
rorl
and
jbe
int
inc
sub
sbb
stos
xlat
push
dec
cmp
jp
cmp
inc
or
lods
add
and
scas
xorb
xchg
shl
imul
dec
rcrb
loope
or
jp
push
pop
enter
imull
sti
xlat
mov
mov
sbb
cmp
lea
sbb
adc
insl
loope
ds
lock
jge
mov
jmp
popa
in
mov
push
repz
sub
movl
push
dec
fwait
and
out
dec
dec
rolb
and
jmp
push
cmp
jb
mov
cmpsl
jle
xchg
sub
mov
popa
sbb
push
in
push
xchg
mov
sub
movsb
into
xchg
xchg
sbb
cwtl
push
adc
mov
mov
jmp
xchg
rcrb
jmp
or
std
imul
lock
jmp
dec
fdivl
sbb
inc
pop
push
mov
mov
movhps
scas
jl
popf
mov
shlb
xlat
jne
aaa
mov
push
push
sbb
lret
in
push
cmp
pop
add
jg
aad
sub
sub
mov
jno
dec
lret
imul
fstpt
push
jo
pop
loop
xchg
lea
movsl
sub
or
cmp
out
inc
or
dec
in
push
sbb
mov
push
insl
push
push
out
dec
jl
pop
mov
jg
push
outsb
out
or
sti
in
or
ss
adc
jmp
jg
xchg
pop
dec
mov
adc
pop
outsl
into
lea
in
sahf
jmp
mov
push
add
repnz
jle
test
xchg
jns
smsw
or
sahf
pop
jo
mov
pop
jae
jo
sub
test
pop
pop
xchg
adc
jle
out
mov
popa
dec
xor
push
mov
mov
rorb
roll
sub
test
and
cs
int
std
fdivs
lds
aaa
std
and
mov
xchg
adc
sub
cmpsb
fists
push
add
jmp
dec
sub
fs
pop
inc
mov
xchg
cmp
rolb
imul
cmpsl
push
xlat
jmp
and
orb
outsl
pushf
stos
and
gs
ja
repnz
push
pop
jp
jge
mov
mov
gs
adc
adc
mov
out
in
das
mov
xchg
aam
sahf
push
sbb
fucomi
fcompl
jecxz
lock
or
es
loopne
cmp
fisttps
mov
mov
js
shll
mov
popa
xor
and
push
out
vhaddps
pusha
mov
adc
cs
fs
dec
pop
pusha
jmp
cwtl
lahf
call
jp
pop
push
js
sub
jno
ret
pop
mov
jmp
mov
std
stos
ret
dec
inc
test
je
cmpl
pop
inc
lds
es
stos
loopne
add
lock
pop
addb
jb
lock
pop
test
jmp
xor
xor
out
aas
or
push
flds
sbb
xchg
fsubp
jnp
cli
jnp
xor
mov
imul
inc
int3
arpl
cs
and
jb
popf
clc
daa
sbb
cld
lcall
jbe
insl
loop
inc
adc
lahf
mul
mov
or
mov
adc
inc
add
adc
and
push
push
xor
jo
sub
das
xchg
add
sub
or
cmp
jbe
pop
inc
pop
add
dec
loope
sbb
inc
leave
js
out
jae
push
or
and
mov
inc
mov
push
lahf
icebp
xchg
cli
xchg
test
dec
mov
sbb
rorb
sub
mov
add
add
pop
dec
inc
shlb
and
add
jnp
outsb
adc
lods
int
mov
inc
pop
repnz
mov
xlat
inc
sub
mov
pop
adc
push
ret
and
leave
hlt
or
add
mov
insl
pusha
mov
adc
inc
fdivrp
mov
push
pop
out
stc
imul
sbb
insl
mov
push
inc
xchg
ds
dec
cmpps
jo
cmp
sbb
mov
and
iret
aam
pop
and
sti
cmpsb
sub
out
xor
cmc
inc
push
cmp
insl
iret
pmaxsw
push
pop
stos
jmp
mov
and
and
mov
inc
fistl
mov
ds
cmpb
dec
popa
shrl
stos
daa
or
adc
add
and
jmp
mov
sub
test
test
lock
inc
les
jae
or
scas
jp
aam
add
out
adc
mov
pop
xorb
mov
push
rcrl
lock
xchg
inc
pop
and
leave
roll
fsubs
invd
inc
push
xchg
mov
add
aaa
fidivl
shrb
sbb
ret
and
loop
loope
jne
cld
mov
aam
fisubs
sbb
outsb
jbe
out
mov
push
sbbb
push
out
xchg
ljmp
sahf
xor
test
mov
sbb
lahf
test
pop
or
jl
call
pop
sub
ret
push
sbb
xor
outsb
mov
hlt
push
movsb
popa
xor
xor
push
out
inc
xchg
int
jne
xchg
in
lods
jmp
mov
and
xorl
sub
movsb
cli
js
aaa
mov
hlt
pop
push
imul
mov
adc
stc
and
add
scas
lret
mov
jg
popf
outsl
js
xor
mov
jmp
imul
mov
pop
mov
mov
cld
adc
push
adc
mov
jmp
adc
test
repz
sbb
cmp
xor
push
cld
jb
insb
and
nop
mov
add
je
stos
cmc
push
ja
jg
mov
ret
roll
mov
movsl
cs
jl
das
sbb
xchg
mov
es
cld
cwtl
fbld
dec
mov
shl
fcomps
pop
vhaddpd
jle
test
imul
or
stos
jp
mov
xchg
jle
popa
mov
push
add
fdivs
jbe
inc
fstpt
daa
stc
test
aam
mov
pop
push
out
fidivl
cmpsl
test
cmp
pop
ret
insl
pushf
das
inc
lahf
mov
cmp
xlat
push
loopne
push
mov
pop
gs
push
dec
jbe
lock
sbb
push
in
ret
inc
leave
xor
pop
pop
out
jmp
inc
lret
xchg
cmp
mov
imul
xchg
stos
aas
add
shrb
into
pop
mov
pop
out
es
adc
mov
xchg
xchg
popa
mov
cmc
into
lds
mov
jo
push
cmpsl
dec
fs
push
jmp
clc
je
mov
sbb
jo
or
imul
fstl
xor
cmpsl
sub
push
repnz
outsb
inc
in
mov
lods
lds
mov
xchg
adc
dec
test
pop
mull
loop
push
cli
sbb
sbb
sbb
sub
add
xchg
fwait
add
pop
call
and
push
lahf
and
xchg
xchg
sub
push
sub
test
pop
fnstenv
stc
xorl
mov
ljmp
in
mov
push
dec
adc
xor
sub
sub
sti
nop
leave
jp
les
enter
inc
dec
pop
adcb
or
movsb
cmp
fdivs
adc
ficoms
mov
mov
xlat
lods
aam
rcll
ret
aam
mov
dec
pop
subb
xchg
add
aam
and
movsl
gs
lahf
mov
icebp
popf
and
ja
jecxz
out
unpcklps
outsb
sbb
sub
jle
lret
cli
fldl
mov
adc
sbb
or
imul
or
jae
xchg
xchg
stos
fsubl
icebp
outsb
sub
scas
shrb
in
adc
mov
in
stos
lea
call
ja
popa
push
scas
sbb
outsl
ss
arpl
sub
leave
sahf
ss
xor
inc
mov
sarl
cmp
xor
dec
test
push
test
push
bound
pop
xorb
icebp
mov
repnz
inc
adc
loopne
xor
and
sti
orl
in
out
lahf
mov
cmp
insl
mov
mov
aas
dec
pop
mov
lret
negb
xchg
mov
xor
addb
xchg
or
dec
pop
nop
jnp
mov
xor
out
mov
push
mov
sti
cmpsl
push
push
ljmp
insb
inc
fxtract
lahf
test
mov
movsb
stc
mov
fcoms
rorl
push
sbb
sub
push
xchg
fucomp
mov
or
mov
ds
mov
les
add
pop
outsl
mov
mov
cmpsb
or
xchg
rcrl
mov
leave
jge
mov
dec
adc
mov
scas
aas
xchg
insb
cli
loope
adc
es
mov
or
fldcw
lods
repz
test
adc
or
push
and
iret
mov
xchg
sbb
adc
pop
stos
push
nop
dec
push
jbe
xchg
scas
call
imul
repz
sbb
inc
mov
ret
outsb
fadds
stc
insb
mov
ficomps
pop
je
shlb
je
xchg
ljmp
movsb
xchg
in
pusha
std
mov
mov
call
mov
dec
icebp
add
es
adc
cmpb
mov
repz
or
pushf
and
push
and
adc
pop
fisttpl
test
or
cmp
mov
pop
outsb
cltd
add
dec
sarl
inc
push
aad
jle
mov
and
cltd
out
inc
fldl
cmp
jmp
mov
in
rcll
mov
xchg
movsl
aaa
scas
sbb
mov
std
pop
inc
fidivrs
mov
jecxz
inc
and
inc
push
and
bound
jno
ror
out
jb
fwait
scas
mov
lret
sub
in
cmp
out
lds
sti
mov
stos
lret
cld
int3
dec
lock
pop
insb
hlt
xchg
daa
push
out
scas
jno
pop
in
push
inc
loopne
add
es
mov
and
ja
xor
cmp
inc
xor
mov
mov
fidivrs
push
jae
inc
cmp
xchg
pushf
adc
test
mov
outsl
sub
aas
mov
in
fwait
push
clc
mov
ficoms
dec
icebp
jge
sbb
repnz
das
jnp
popa
mov
sbb
or
adc
scas
fucom
sub
dec
aam
shl
ret
outsb
sbb
jbe
jg
idivl
jns
mov
sbb
xor
push
sub
xchg
and
inc
push
mov
inc
add
insb
js
inc
cld
adc
aaa
outsl
cmovne
js
inc
out
out
subl
sbb
dec
or
lcall
push
rolb
fidivl
mov
testl
in
push
sbb
shll
jne
dec
shrl
cmp
sahf
mov
xchg
call
dec
or
stos
inc
fcmovnu
and
cmp
and
outsl
clc
lret
mov
mov
sbb
dec
adc
and
sbb
pop
xchg
test
or
push
cmp
mov
mov
rorl
stc
lea
ret
pop
call
mov
mov
mov
xlat
or
cmpsb
jns
pop
imul
xchg
cmp
pop
mov
sbb
sub
jmp
jle
and
or
std
mov
shll
pusha
inc
stc
aam
mov
sbb
xor
inc
push
jl
sub
dec
fists
out
pop
cmp
stos
arpl
jg,pt
repnz
dec
adc
hlt
jge
rcll
push
pop
jl
push
mov
and
test
inc
fsubr
int3
jmp
js
scas
push
lods
and
fstpt
in
imul
and
xchg
pop
cld
dec
popf
cmp
mov
ss
add
pop
lds
mov
cmp
mov
sub
add
mov
dec
xor
ja
shl
test
cwtl
jne
insl
imul
mov
mov
add
sbb
icebp
ficomps
and
jle
stos
xchg
jle
leave
lret
pop
scas
and
rolb
testb
in
pop
mov
push
sbb
cli
mov
cmpb
xchg
pusha
push
mov
adc
mov
dec
repnz
mov
pop
cmpb
cmpsb
shll
dec
xchg
sar
jae
rcrb
sub
sub
sub
or
cmp
or
pop
in
ss
sub
frstor
addb
sub
aas
add
and
scas
jno
jge
int
mov
addr16
add
xchg
sbb
cwtl
sbb
divb
ljmp
xor
mov
and
xchg
stos
push
stos
mov
fnstenv
in
lret
sub
cld
cmpsb
dec
movsb
push
ss
out
or
stc
adc
sub
mov
pop
loop
cmp
jb
in
les
lcall
filds
pop
xchg
cmp
dec
lea
sub
mov
repz
std
cltd
negl
int3
into
jle
inc
mov
lret
dec
dec
std
ret
pop
sbb
fimuls
call
cmp
subb
sub
mov
in
mov
jnp
pop
fdivp
dec
xchg
std
jo
sub
out
call
mov
push
out
mov
cltd
xor
xor
scas
scas
cmp
jne
cmp
dec
ret
mov
addl
hlt
nop
push
test
daa
int
inc
iret
mov
leave
sub
jb
sti
mov
inc
push
mov
imul
mov
sbb
push
cmc
filds
clc
icebp
mov
jbe
xor
xor
add
mov
xor
scas
call
ret
cwtl
orb
dec
mov
dec
hlt
or
adc
push
jp
sbbb
es
test
js
fimuls
cmp
lds
jbe
xor
aad
leave
push
insl
jae
mov
xchg
hlt
pop
bswap
mov
lahf
mov
jns
jnp
ds
inc
add
aas
cmc
push
rcr
cmpsl
inc
in
pop
push
xor
lods
test
adc
loopne
push
jmp
add
pop
out
les
jb
daa
movsl
xorb
scas
mov
inc
test
inc
sbb
test
out
repz
je
jp
inc
and
push
fiadds
xchg
ds
add
dec
leave
mov
push
outsl
add
push
mov
mov
or
inc
adc
sbbb
push
mov
xlat
jmp
iret
fwait
test
or
mov
jl
mov
es
mov
xchg
push
xor
ljmp
ret
sbb
sub
xor
push
dec
mov
mov
jle
sub
bound
mov
sbb
adc
mov
mov
addr16
cmpsb
fwait
xchg
push
mov
lea
scas
rcr
mov
shl
jns
sub
outsl
mov
push
xchg
scas
push
in
and
xor
pop
adc
or
das
ja
iret
fsin
and
lret
sti
lret
push
xor
sbb
mov
rolb
enter
pop
mov
mov
shrl
lahf
out
pop
lods
xor
fisubrl
xor
repnz
push
adc
aad
pop
shl
pop
sub
push
xor
cld
pop
orl
jecxz
jl
cld
cli
in
sbb
mov
ss
ja
test
push
daa
cmp
and
cmp
lods
stos
lods
stos
jae
fst
xchg
pop
mov
popa
data16
test
cmp
into
aam
sbb
divb
les
loop
or
jno
ret
xchg
dec
test
or
mov
sub
clc
decb
sbb
sub
ja
xlat
test
lcall
test
inc
xor
dec
mov
push
ljmp
lock
dec
jg
ljmp
es
arpl
out
call
xchg
dec
test
leave
enter
data16
pop
lret
xchg
in
repz
cmp
xchg
mov
loope
insl
fbstp
cltd
insl
iret
mov
daa
mov
jg
sub
sarl
or
adc
mov
std
sbb
push
pop
and
fwait
lods
xor
mov
jae
mov
pop
push
add
dec
sbbl
outsb
and
insl
xor
pop
fsubs
aam
sbb
sahf
repz
int3
and
push
push
test
aaa
cmp
js
std
test
lods
insb
jo,pn
imul
jp
xchg
xor
out
sub
mov
inc
mov
inc
out
outsb
pop
lcall
push
aaa
mov
sbb
scas
les
push
jp
ds
cwtl
das
push
adc
mov
stc
ss
cmp
sub
jmp
add
mov
fistpl
or
ss
popf
dec
dec
sub
enter
jp
aas
add
xchg
add
fsubl
cli
inc
std
pop
fimuls
pop
add
push
mov
cmc
dec
dec
push
mov
adc
or
and
ljmp
or
int
ret
push
sbb
sub
dec
loop
lret
sti
subb
mov
xor
adc
push
xchg
insl
cmpsl
cmp
lods
mov
add
adc
mov
mov
dec
outsb
test
xchg
jmp
sub
fsubs
pop
cmp
aam
adc
inc
mov
xchg
adc
sub
aad
cltd
or
fwait
push
aaa
dec
dec
cld
and
xor
lock
test
jo
aad
movsl
dec
cmp
or
cmp
mov
dec
fsubrl
lds
stos
push
pushf
pop
hlt
orl
out
adcb
into
outsb
cmp
cmp
sbb
cld
and
rcrb
xorb
push
std
mov
popa
xlat
mov
imul
stc
xor
sbb
xchg
push
pop
rcrb
fisttps
addr16
rol
add
iret
out
loop
pop
adc
outsl
jnp
push
cmp
inc
insl
fidivl
out
std
pushf
inc
clc
int
in
pushf
xor
repnz
outsl
xchg
js
push
xchg
and
adc
mov
cli
or
adc
sar
shrl
mov
addr16
mov
orl
push
out
push
jmp
cmpsb
sbb
out
in
test
cmp
test
in
ficomps
pop
mov
cmpsb
or
fadds
adc
xor
movsb
addl
pop
psubsb
jge
out
xchg
int3
insb
jo
pop
in
pushf
xor
stos
gs
cmp
enter
out
ljmp
orl
rcl
clc
in
mov
out
leave
cld
or
into
inc
lods
pop
cld
rcrl
inc
fnstenv
inc
xchg
outsb
arpl
je
scas
aaa
mov
stos
dec
pushf
push
xchg
xchg
aas
roll
sub
loop
pop
and
scas
push
mov
test
xchg
orl
mov
xchg
add
xchg
sahf
push
insl
shlb
xor
lret
leave
das
imul
popa
lds
cld
inc
mov
inc
sub
je
sub
xchg
inc
inc
dec
jmp
int
dec
push
push
fwait
or
rcr
mov
fwait
xor
icebp
push
out
jns
lock
sbb
lret
sub
test
orb
fyl2xp1
decb
into
shll
sub
dec
sub
dec
test
imul
aad
mov
inc
fucomp
xor
push
or
pop
sbb
dec
ds
jnp
in
fadds
scas
out
cmc
jge
adc
lret
enter
and
in
sbbl
mov
add
daa
inc
mov
inc
jne
cmpsb
jno
inc
cltd
cmc
stc
jne
les
pop
pop
jmp
sub
addr16
enter
push
into
loope
jae
movsb
sub
sub
sbb
js
sbb
fdivrl
mov
adc
shll
gs
pop
sub
sbb
out
jo
adc
addps
add
cmp
scas
test
sbb
popf
jnp
xor
sbb
xchg
std
dec
push
loopne
lock
filds
fs
jbe
lret
jae
fsubrs
int
je
push
in
jge
inc
adc
cmc
gs
pusha
dec
pop
mov
adc
outsl
mov
mov
jp
repnz
fs
mov
pop
pop
out
xor
xchg
leave
es
push
dec
and
mov
xor
mov
mov
sbb
jmp
sbb
sub
leave
mov
loop
xor
rorl
xchg
fldcw
pushf
cltd
cli
mov
xlat
int
or
addb
hlt
mov
rclb
add
ja
fstpt
in
pushf
xor
mov
fwait
jno
std
je
fdivrl
push
adc
fmuls
shrd
ds
add
pop
mov
mulps
inc
iret
imul
adc
mov
insl
lods
adc
push
dec
gs
ret
xchg
shr
lods
sbb
imul
imul
outsl
int3
stos
jge
int
xchg
hlt
xchg
loopne
iret
icebp
pusha
ljmp
mov
xor
and
movsl
mov
xor
xor
test
xor
adc
inc
push
push
outsb
pop
jb
jbe
cli
xchg
cmc
cmp
xchg
pop
mov
test
push
sub
cmpsl
shrl
mov
or
inc
push
mov
nop
push
aaa
jl
or
popf
jae
and
push
add
scas
and
sub
popf
add
xchg
repz
sub
or
je
ret
xchg
mov
aad
rorl
ljmp
pushf
add
bound
call
mov
xlat
inc
int3
mov
pusha
push
sub
push
cmp
jno
jmp
and
fstpt
into
inc
jae
cmpsb
out
dec
fcompl
pushf
cld
ret
scas
pop
push
pop
adcl
xor
lret
sub
fwait
sub
push
lahf
enter
mov
mov
pusha
mov
or
dec
and
jae
sbb
dec
cs
or
out
dec
pop
rorb
adc
lock
add
sbb
mov
pop
rorb
jmp
add
test
xor
cld
sbbl
adc
cltd
scas
sub
push
mov
xchg
mov
lea
push
ret
fwait
inc
arpl
pop
ljmp
fnstenv
lahf
outsb
hlt
into
push
andb
push
in
cmp
jle
cwtl
negb
and
and
lret
xchg
sub
push
jmp
lcall
inc
fcmovbe
push
or
dec
aaa
pop
adc
dec
inc
pop
mov
insb
ss
lea
test
ljmp
aad
sti
dec
sbb
pop
outsb
push
push
loop
dec
sti
cmp
sub
fisubrs
pop
stc
push
cwtl
mov
jb
incb
push
fwait
xor
icebp
jnp
out
fmuls
xor
lcall
lock
and
outsl
add
sbb
xor
lret
fs
pushaw
inc
bound
stos
mov
mov
pmulhuw
out
cwtl
mov
mov
sub
lret
pop
xor
jne
sub
sbb
pop
mov
fcoml
inc
cmpsb
cmp
add
mov
loopne
lods
cmp
les
rcl
mov
xchg
inc
ret
dec
pop
sub
dec
mov
arpl
into
mov
shrb
xchg
arpl
lock
sub
xchg
xchg
xchg
xlat
xchg
adc
popf
xor
mov
push
jb
mov
daa
test
jbe
arpl
int3
fidivs
movsl
and
inc
xlat
ror
xchg
add
popf
jmp
jl
int
scas
scas
inc
and
int
lea
mov
and
mov
mov
inc
xchg
scas
popf
into
enter
inc
sarl
sbbl
rorl
mov
sub
push
imul
sahf
je
cmp
inc
lcall
mull
jno
mov
loope
mov
outsb
push
dec
lret
imul
adc
mov
call
cmpsb
mov
mov
add
sbb
out
xorl
or
inc
or
out
dec
xchg
sbb
ds
imul
jb
xchg
imul
insb
fwait
pop
jle
stc
jns
mov
dec
mov
xor
sub
push
sbb
mov
dec
cmp
inc
fidivrs
mov
mov
adc
mov
lahf
mov
mov
mov
jno
aam
push
mov
loopne
daa
xlat
and
mov
lods
rcrl
xchg
mov
pop
sbb
sub
jmp
iret
cmp
jmp
je
mov
add
dec
lods
and
push
sub
loope
mov
xchg
xchg
push
popf
cmp
mov
add
and
and
int
jbe
shll
or
lret
sub
dec
dec
sub
pop
sub
sbb
scas
dec
xor
mov
ret
test
sub
cmp
dec
mov
xchg
repnz
ss
mov
je
sub
sub
mov
sub
mov
jne
les
inc
and
push
add
testb
je
in
popf
mov
iret
push
pop
adc
shlb
xchg
jno
outsb
insb
pop
hlt
lock
jge
pop
adc
clc
mov
and
dec
cltd
dec
inc
fidivs
push
test
sbb
jge
add
mov
pop
dec
insl
lcall
mov
je
sti
xor
adc
out
xchg
dec
and
aaa
das
mov
dec
sahf
loop
das
clc
jecxz
push
pop
cmc
dec
shll
ss
mov
icebp
xor
daa
push
push
movsl
mov
sbb
dec
cmp
add
inc
call
xchg
pop
gs
std
cmpsb
jp
or
out
pop
mov
adc
jnp
imul
cli
jmp
mov
push
mov
jae
xchg
push
sbb
inc
idivb
push
popf
orl
shlb
xchg
inc
jae
lock
pushf
add
fucomi
xchg
mov
divl
rcrl
divl
shrl
adc
ficoms
subl
jnp
xchg
add
mov
sbb
aaa
cmp
jb
leave
mov
leave
int
and
jo
test
loop
xchg
jl
ret
fucomp
dec
mov
pop
in
and
iret
dec
in
ljmp
jae
mov
out
mov
push
or
popa
lea
arpl
mov
pop
in
ss
xchg
and
ja
xor
sbb
and
jmp
scas
cmc
aaa
nop
xor
mov
adcb
hlt
ss
push
mov
add
xchg
cmp
push
or
inc
cmp
fdivrl
out
xchg
out
fidivl
ss
jns
cmp
cmp
in
or
iret
sub
xchg
pop
insb
and
sahf
mov
push
mov
jecxz
inc
push
popl
and
sub
stc
sar
aad
push
xor
xchg
in
arpl
popf
ja
jge
mov
in
add
xor
sbb
inc
out
adc
std
lea
sub
repz
shr
pop
fidivrs
pop
cmp
les
mov
bnd
orl
jne
clc
jmp
gs
sbb
dec
jo
sarl
lret
push
int3
push
cmpb
add
adc
pop
and
adc
cmpsl
xor
add
ja
pop
mov
mov
and
sahf
fs
loop
fwait
and
into
int
ja
ja
xchg
je
pop
sub
ficomps
rorb
outsl
daa
rol
jge
mov
test
xlat
jl,pn
movb
mov
mov
insb
fadds
lea
fnsave
aaa
push
sub
pop
xchg
das
sahf
lods
insb
rcl
cmc
push
movsl
add
pop
lret
jp
dec
pushf
push
pop
jne
add
sbb
dec
int3
ficoms
ja
cmp
movsb
addr16
mov
lret
lahf
shrl
jb
mov
sub
pop
pop
mov
in
adcb
pop
xchg
pop
cmp
or
dec
dec
mov
adc
sub
inc
in
je
xor
cmp
outsl
cmc
or
or
jle
fnstenv
sti
pop
pop
dec
mov
mov
inc
lret
popf
call
or
pop
sti
js
lahf
and
sub
add
mov
arpl
xchg
aaa
xchg
ljmp
mov
add
sbb
clc
mov
fwait
test
aaa
fisubrs
jl
movb
pop
xor
popf
cld
mov
and
out
pop
jecxz
ret
cltd
push
jmp
fcomi
lahf
or
push
cmc
out
rcll
sub
jl
mov
pop
insl
scas
jp
shlb
fsubrs
ss
daa
push
mov
loop
cmc
xchg
daa
ljmp
push
in
add
sub
lcall
inc
pop
sahf
cmp
dec
cmpsl
mov
add
js
les
cltd
mov
fidivs
sarb
into
cmp
jl
push
xchg
int3
leave
push
and
adc
mov
fsubr
pop
push
adc
xchg
je
ret
push
jo
ds
and
cltd
pop
sub
outsb
ret
push
cmc
dec
mov
xor
pop
pop
into
push
push
cmp
aaa
das
adc
pop
adc
inc
inc
push
mov
mov
cltd
jg
push
pushf
xchg
pop
fimull
fucomip
mov
pop
cmpsb
push
add
es
push
in
push
pop
pop
mov
shll
addr16
add
or
test
xor
jecxz
xor
xor
cmp
push
std
push
cmc
push
add
testl
in
stc
pop
call
sbb
jnp
sub
xchg
push
cmp
jle
aaa
out
imul
enter
out
int3
shll
imul
in
push
imul
fbstp
sti
sbb
push
clc
popf
imul
adc
lret
and
xchg
in
push
int3
test
mov
jb
push
mov
mov
mov
push
or
rclb
push
xchg
adc
jle
mov
or
xchg
push
out
sbb
cmp
movsb
addr16
in
push
dec
and
stc
or
mov
insl
mov
fmull
lock
icebp
mull
cmp
sbb
nop
int
adc
ss
je
icebp
cmp
out
inc
das
scas
out
push
rol
mov
cmpsb
ror
into
mov
fwait
shlb
fldcw
mov
fcmovne
xor
outsl
aas
pusha
leave
ss
sti
jg
out
mov
lods
rcrb
cmp
loop
out
jg
sub
jno
pop
stos
mov
push
mov
mov
jmp
pop
dec
leave
cmp
cli
push
or
inc
pop
push
pop
adc
inc
testl
mull
lea
jnp
in
cmc
adc
es
into
dec
mov
enter
jno
sbb
ret
cmpsb
fbld
push
in
push
inc
test
or
jb
push
out
xchg
sub
xor
testl
dec
inc
pop
sbbl
sub
leave
jno
lea
pop
je
mov
cli
cmpsb
sub
lds
sbb
mov
movsl
in
daa
hlt
xchg
jl
sub
aaa
ja
adcl
ja
jo
add
movl
scas
rcl
add
push
pop
and
fldcw
mov
adc
inc
jecxz
mov
repnz
pop
mov
xor
fldenv
sub
aaa
fmulp
cmpsl
outsl
out
das
test
xlat
repz
mov
icebp
mov
loope
dec
inc
dec
xorb
adc
mov
pop
not
mov
adc
pop
clc
nop
jne
cmp
sbb
sti
sahf
lods
xchg
mov
inc
jae
push
sbb
popf
sub
sbb
xor
xchg
in
shrb
ss
filds
lock
call
nopl
movb
ljmp
clc
in
lods
cmp
push
ljmp
inc
add
enter
into
cmp
das
shlb
xorl
aaa
sbb
pop
dec
sarb
pusha
mov
xor
lock
mov
dec
stos
mov
jne
inc
lds
out
sub
sub
jns
shrl
pop
jmp
cmc
frstor
jg
jge
hlt
stc
adc
repz
je
mov
push
loop
inc
test
sbb
lds
rcrl
in
mov
mov
aad
adcl
les
adc
pop
mov
push
inc
pop
call
push
sub
pop
mov
mov
in
pop
lcall
and
out
orl
sbb
scas
xlat
aam
out
cmpsl
pop
mov
je
dec
cmp
pop
add
push
sub
xor
mov
mov
jns
pop
mov
ja
sub
cwtl
mov
cld
lods
insl
jge
movsb
dec
add
ja
or
or
jecxz
sub
dec
mov
add
popf
xchg
iret
xor
or
xchg
cmp
pop
pop
mov
push
sub
icebp
lock
stos
out
cmc
pop
jbe
dec
mov
daa
mov
inc
cli
jmp
scas
and
dec
cwtl
pop
dec
jnp
push
int
or
es
cmp
mov
push
lahf
aaa
sbb
pop
lods
sbb
xor
movsb
and
and
lahf
cmp
mov
xlat
mov
sub
add
xchg
mov
cltd
lcall
dec
dec
sbb
fiadds
push
or
sbb
push
xlat
rcl
or
cli
movsb
sub
lahf
push
and
sbb
fucomip
stc
test
les
orl
dec
icebp
adc
data16
mov
dec
add
test
pop
das
pop
cmp
enter
jo
xchg
daa
loopne,pt
cld
les
enter
xchg
dec
ljmp
stos
gs
dec
inc
jne
int
jmp
mov
scas
inc
sbb
incb
das
cmpsb
pop
dec
in
fdivrl
jns
push
pushf
es
add
jle
test
ss
inc
jb
xor
xchg
add
sub
movsb
sub
in
enter
jge
jnp
shrb
orl
movsl
mov
push
aas
add
stos
test
mov
out
mov
insb
sub
jmp
cmp
sub
gs
in
xchg
push
lret
fsubrs
mov
adc
out
lock
pop
jle
xchg
push
mov
insb
in
roll
mov
lahf
mov
fidivrl
movl
lods
fisttpll
xor
enter
aam
xchg
inc
sahf
outsl
push
ret
out
push
movsl
pop
lods
shrl
mov
fdivl
imul
rclb
out
lcall
dec
in
push
adc
inc
jns
je
adc
push
fmuls
mov
push
lss
and
pop
lods
pop
push
jb
jmp
mov
push
xor
ds
xchg
inc
inc
lea
pop
fwait
jmp
add
mov
xchg
adc
jl
insb
jmp
xchg
mov
sub
mov
paddsw
jecxz
gs
clc
pop
push
imul
in
call
sub
movsb
mov
dec
or
xchg
cmp
neg
scas
xchg
test
jp
int3
sbbl
or
and
dec
xor
xor
cwtl
xor
jp
push
mov
pusha
mov
push
jg
push
sub
ds
jae
mov
popa
inc
or
mov
out
popa
loopne
fiaddl
lahf
and
scas
sbb
ja
in
das
ja
jne
push
dec
mov
jns
or
sub
fucomi
incl
daa
shlb
jp
xchg
adc
add
int
das
mov
jno
scas
mov
pop
imul
dec
xor
in
adc
subb
daa
xchg
push
adc
ss
add
push
mov
adc
insl
jge
jbe
out
mov
mov
push
lcall
or
insl
inc
movsb
inc
jp
fdivl
or
test
test
mov
dec
out
dec
in
je
dec
imul
and
cmp
scas
mov
add
test
or
repz
cmpsb
les
cmp
sahf
xchg
fnstsw
dec
and
push
jl
mov
orb
push
adc
cmpsl
fsubs
mov
jmp
pop
js
mov
icebp
xchg
daa
pop
xor
je
hlt
repz
mov
pop
xchg
adc
dec
or
rcl
xchg
hlt
jg
mov
fisubrl
xchg
mov
pop
mov
leave
jge
loopne
dec
adc
movb
stos
out
pop
push
in
xchg
push
shl
pop
sub
cmp
stos
pop
pop
rclb
rcll
lcall
xor
mov
mov
mov
out
push
hlt
xchg
ss
testb
loopne
repz
push
mov
push
add
js
out
cmp
test
adc
ret
adc
idiv
or
pop
xchg
mov
insl
jmp
sbb
jnp
addr16
add
mov
sbb
mov
pop
sub
mov
and
mov
repnz
xchg
add
inc
and
mov
scas
mov
jne
push
push
int3
add
lods
repnz
rorb
dec
pop
pop
nop
sub
fnstcw
sbb
and
add
and
jns
movl
cltd
cmp
popf
imul
and
xor
xlat
xor
scas
shr
xchg
dec
sarl
shrl
fwait
jmp
mov
mov
es
scas
xchg
dec
cmc
pop
std
jo
lahf
lock
add
and
xchg
adc
outsl
aas
pop
push
dec
bnd
xchg
dec
mov
hlt
adc
lods
cmpsb
arpl
xchg
cmp
xchg
call
scas
cmp
scas
in
mov
std
mov
xor
les
and
mov
cmp
fsubrs
rorb
clc
stos
mov
rcl
adc
sub
and
xlat
outsb
inc
xchg
loopne
loop
jne
mov
jne
imul
mov
mov
xchg
and
loop
adc
xchg
cli
or
mov
sub
ss
and
add
adc
fmulp
call
andl
insl
mov
lods
rclb
sti
mov
pop
push
sbb
xchg
negl
int
dec
outsl
dec
cmp
jo
into
orl
push
sahf
repnz
or
sbb
hlt
sub
adc
in
jbe
stos
jb
adc
sbbl
rorl
ja
sbb
paddq
addl
pop
xor
pusha
cmpsl
mov
popa
imul
jo
mov
hlt
push
scas
mov
mov
pop
ljmp
dec
addr16
push
test
inc
out
cli
aam
in
push
add
pop
dec
stc
push
movsl
cmp
sbb
jae
adc
pusha
enter
and
fildl
pop
xor
jecxz
lods
cltd
and
xor
push
sub
test
mov
jo
stos
int3
and
cli
xchg
sti
mov
dec
mov
pop
pop
mov
lahf
scas
sbb
test
sub
inc
pop
mov
fyl2x
xchg
arpl
pop
insb
movl
inc
in
cld
mov
in
test
ficompl
outsl
sbb
or
cmp
mov
mov
out
xlat
xchg
lret
xchg
mov
cwtl
test
scas
adc
or
xorb
movsb
in
inc
add
loope
xchg
dec
sbb
outsl
and
clc
sbbb
into
mov
aad
leave
outsb
or
pusha
lock
out
addr16
ja
mov
jmp
js
xor
shrb
mov
jne
je
xchg
or
cmp
sbbl
fists
mov
imul
mov
jb
xchg
insb
sbb
movsl
out
das
mov
mov
xchg
cmp
out
push
orb
xchg
ja
adc
or
mov
aam
xchg
mov
sub
addb
jns
or
arpl
xchg
add
insb
jle
lods
jbe
lretw
xchg
outsl
loop
fsubrs
rolb
adc
data16
int
andb
outsb
pop
fbstp
jmp
xchg
xchg
scas
stc
popf
jns
push
decl
add
das
cmpsl
dec
xor
es
xor
fdivs
int
fisubrs
xor
jg
shl
inc
lahf
out
xchg
pop
cmp
dec
call
es
aaa
imul
mov
fwait
lds
sbb
jno
pop
pop
stos
fidivl
or
sbb
cmpsb
mov
ljmp
push
jge
dec
add
outsl
stc
cmp
sub
loop
cmp
add
sbb
leave
or
adc
insl
lgs
mov
xchg
sub
sti
int
sub
cld
inc
cltd
jmp
test
lret
fs
aam
xor
xchg
and
jns
in
or
aad
test
lret
jmp
std
sub
pushf
xor
les
aad
jnp
loop
sub
lods
sbb
sbbl
pushl
sub
pop
pop
jle
mov
es
in
popa
inc
leave
je
dec
dec
dec
mov
and
cs
lahf
sub
test
cli
jl
push
mov
push
or
out
call
jg,pn
test
jnp
imul
xchg
dec
mov
dec
mov
pop
jmp
and
cli
pop
xchg
in
sti
test
pop
test
inc
fcomip
dec
inc
xor
js
mov
cmpl
hlt
xor
pop
mov
loop
pop
movsb
cmp
insb
shl
pushf
mov
leave
shl
fsubrs
inc
push
cli
cmc
lods
inc
daa
sbb
je
xor
jmp
mov
out
rcl
shr
lea
das
stos
dec
jecxz
jl
mov
inc
sbb
mov
shrb
setb
and
lock
and
loopne
ss
incb
ret
push
stos
dec
pop
sub
mov
inc
in
aaa
dec
addr16
cltd
imul
popf
aas
insl
ja
mov
ja
and
cld
xchg
adc
mov
jb
stos
inc
icebp
pop
je
adcb
out
pop
xchg
loopne
popf
stc
stos
leave
orb
jge
repz
adc
xchg
cs
push
cwtl
sbb
popa
ds
mov
dec
leave
ds
je
aad
mov
dec
mov
xor
ja
mov
or
mov
push
scas
mov
or
test
xor
repnz
xchg
in
data16
jne
test
jecxz
dec
pop
lret
cmp
and
push
mov
pop
mov
push
fbld
mov
push
in
push
das
xor
je
in
ds
repnz
cmc
inc
push
test
daa
inc
movsb
sti
lcall
mov
lret
fsubs
inc
fsubl
int3
xlat
jmp
cli
push
mov
sahf
mov
push
out
mov
jno
dec
in
jne
loopne
scas
inc
xchg
outsl
lcall
cmp
test
aam
push
mov
outsb
lds
lcall
aam
dec
mov
ds
ds
jno
leave
fsubrl
lds
ret
adc
shrl
in
push
imul
pop
lret
dec
int
test
pop
loopne
lea
gs
cmpsl
dec
int3
fdivrs
dec
sbb
lods
mov
std
xchg
xlat
mov
sbb
jp
jae
dec
mov
shlb
mov
cld
mov
and
test
cmp
andl
and
jmp
xor
push
dec
data16
iret
xor
sbb
fsubrs
add
push
aaa
dec
fimuls
imul
aam
push
test
lret
lahf
cmpsb
in
cs
jecxz,pn
inc
orl
cmc
xor
pop
push
in
nop
ss
in
ds
inc
repz
pop
mulb
movsb
sub
mov
mov
and
jne
sub
mov
sub
add
out
push
cmp
or
movsb
pop
add
xchg
test
push
dec
jbe
sbb
dec
fnstsw
push
jae
fadd
and
shlb
jl
or
pop
cs
push
mov
fnstsw
nop
mov
in
adc
aad
xlat
xchg
ja
push
test
cs
cmpsl
mov
int3
push
pop
sbb
inc
out
pop
orl
call
hlt
adc
adc
cltd
jbe
and
fisubl
cmpsb
sti
repz
and
stc
je
int3
rcll
jge
xlat
jmp
sahf
sahf
ss
fidivs
cmp
arpl
mov
or
or
ja
loop
sbbb
subl
mov
insl
lds
hlt
push
out
jg
pop
adc
dec
les
dec
and
jae
pusha
movsl
lcall
shrl
stos
push
mov
gs
aad
repz
fnstsw
add
call
fidivs
pop
adc
mov
pop
je
mov
movsl
mov
popa
xor
dec
into
cmpsl
jo
out
sub
add
mov
pop
clc
add
add
pushl
in
es
pop
scas
adc
into
iret
adc
and
idivl
pop
stos
inc
dec
out
add
hlt
lock
jge
ret
repz
mov
push
xchg
jo
hlt
mov
add
fnsave
fwait
pop
fsts
push
or
es
aam
pop
addr16
mov
popa
xor
mov
pop
sub
addr16
in
inc
xor
lret
bound
pop
jmp
or
jmp
sub
jl
loopne
in
sbb
clc
sahf
test
lds
out
inc
popa
mov
xor
cld
or
dec
fiadds
mov
scas
inc
ret
xchg
add
scas
imul
fdivrl
and
mov
cmp
xor
rclb
bound
cmp
xlat
fcompl
popf
stc
sbb
adc
pop
inc
pop
jno
sub
nop
fldenv
add
daa
jnp
pop
ret
les
xor
or
push
jne
pop
jle
sbb
iret
xchg
daa
mov
adc
inc
jnp
xchg
das
inc
pop
insl
sbbb
push
andl
xchg
dec
push
in
out
dec
aad
call
outsb
mov
je
cltd
and
into
dec
mov
outsb
sub
mov
hlt
lods
sbb
mov
cmp
add
pop
jecxz
and
push
pop
je
pop
fidivs
in
push
lods
cmpsb
in
nop
ret
shll
nop
fbstp
cld
lea
dec
mov
pop
shr
stos
push
ficoml
js
mov
inc
add
push
xchg
jmp
mov
gs
and
mov
mov
jno
adc
andl
test
mov
pop
out
into
gs
outsl
and
dec
xchg
xchg
mov
not
add
sbb
inc
adc
or
jne
cwtl
sahf
push
push
jo
test
or
fidivs
dec
add
movsb
addr16
out
ja
pop
jecxz
mov
ret
js
jmp
and
cld
outsl
and
mov
mov
shrb
fbld
sbb
sub
inc
insl
sbb
fbld
mov
mov
push
dec
add
outsl
aaa
stos
cmpsb
loope
cld
imul
sub
cmc
inc
fcomip
in
sub
loopne
xchg
mov
add
ljmp
cmp
xor
test
shll
adc
notb
movsl
loopne
loop
ss
jle
int3
jb
push
mov
outsl
stc
in
dec
enter
subl
push
push
fcoml
int
push
out
sti
push
leave
push
outsl
adc
sarl
rcrl
and
or
fxch
dec
xor
dec
pop
movsl
jns
test
mov
jbe
and
mov
or
js
fldcw
test
hlt
lods
push
popf
sub
aas
and
jb
xchg
lods
or
inc
push
cld
and
mov
lret
shl
jae
mov
mov
push
repnz
leave
push
cmp
lods
call
aas
scas
mov
pop
sbb
addr16
cltd
pop
sbb
push
roll
dec
inc
mov
push
push
test
mov
mov
int
shr
pop
mov
jbe
jg
xor
pop
std
lods
inc
pop
inc
lret
sub
or
mov
repnz
out
popf
aaa
lahf
xchg
fisubrl
or
std
pusha
es
mov
pop
dec
mov
imul
dec
lea
jg
ret
int3
dec
pop
into
jmp
sbb
scas
popf
in
pushf
mov
out
gs
lret
in
xor
ret
lds
jl
add
ljmp
addl
xchg
xor
mov
xor
lret
jmp
xor
ja
data16
pop
inc
fisttpll
loop
dec
frstor
movsl
pop
scas
add
cmc
adc
lcall
lret
jecxz
cltd
adc
pop
and
mov
fisttpll
adc
bound
iret
mov
cmp
aaa
ret
pop
xor
fucomip
jns
push
addr16
dec
js
loop
inc
jge
inc
lahf
movsb
int3
mov
or
adc
xchg
adc
je
call
add
aad
add
lds
sbb
xchg
dec
lods
inc
xorl
lret
xlat
aam
sbb
adc
mov
dec
fcompp
push
lock
shrb
push
mov
mov
clc
and
icebp
addr16
mov
mov
jnp
sbb
push
mov
fisubrs
cwtl
cmpl
stos
jbe
cwtl
cmpsl
es
jo
and
pop
jo
xchg
jle
pop
stos
jne
mov
mov
push
aad
push
push
pop
add
inc
fs
pop
dec
mov
iret
cmpsb
dec
push
cli
or
mov
ljmp
lds
inc
rcl
in
rcll
mov
bound
lds
rcl
repz
rcrl
mov
dec
jmp
fs
ret
ja
cmc
mov
in
gs
dec
pushl
pushf
sub
pusha
xor
negl
inc
jg
test
fistpl
inc
mov
js
push
xchg
enter
shrl
xchg
mov
inc
jne
dec
filds
xchg
insb
xor
lods
ds
cs
dec
xchg
or
cmpsb
cmc
ret
mov
out
mov
pop
xchg
std
pop
dec
ret
shl
daa
and
push
xor
mov
fmull
mov
jg
stos
sbb
jne
mov
push
lcall
hlt
lods
scas
es
pop
jmp
es
out
insl
fcomps
insl
mov
pop
adc
cs
outsb
andl
inc
test
cmp
cmpsl
cmp
enter
sti
dec
dec
ss
jg
jne
push
jmp
xchg
lods
and
out
push
out
popa
mov
pop
mov
dec
pop
into
gs
out
push
xchg
push
in
test
mov
mov
in
mov
xchg
inc
xchg
dec
repz
xchg
inc
popl
orb
adcb
cmp
xchg
loop
mov
in
cwtl
lods
and
push
add
insb
sbb
loope
lea
add
jae
mov
sbb
lock
cmp
inc
fwait
push
xchg
jno
or
and
adc
jnp
lds
mov
insb
and
push
push
dec
cmp
push
mov
push
inc
xor
and
pop
push
sub
test
mov
pop
cmpsl
testl
push
rol
jbe
mov
rcrl
popf
clc
push
mov
fnstenv
std
or
es
fucomp
xchg
cmp
mov
mov
add
ja
inc
inc
shrl
stc
bound
das
mov
xor
imul
mov
out
loope
push
xchg
mov
out
out
sahf
xchg
inc
subb
addr16
push
xchg
pop
push
mov
xor
faddp
cmpsb
pop
sub
xchg
test
icebp
xchg
push
xchg
mov
mov
movsb
repnz
sub
outsl
fld
ret
dec
add
ret
pop
add
in
cmp
ljmp
mov
add
push
es
sbb
mov
in
dec
inc
xor
int
jns
sub
jbe
sub
das
pop
lds
out
cmp
outsl
lods
scas
xchg
mov
cmpb
inc
cmp
add
lods
xchg
mov
je
xchg
or
cmp
xor
sub
popf
push
sub
push
sub
xchg
pusha
ds
pop
repz
mov
imul
mov
pop
jmp
into
xor
repz
inc
cmpsl
xor
jp
enter
push
stos
mov
rclb
pop
aam
mov
repz
sti
or
push
and
mov
aas
add
aad
dec
femms
pop
lds
push
ret
push
jmp
ret
fldcw
sbb
ret
sub
or
or
mov
lahf
std
push
das
sarl
fildll
stos
sahf
hlt
insl
mov
pop
arpl
or
jns
icebp
push
cmpsl
ds
sub
push
jmp
pop
fldl
mov
mov
shlb
pop
jno
xor
out
push
cltd
cmp
jno
push
xchg
or
pop
cmp
pop
orb
mov
imul
pushf
jg
xchg
clc
stos
jmp
xchg
shlb
lds
pushf
aad
dec
inc
push
adc
sub
test
test
add
add
xor
dec
cmp
rorl
and
pop
mov
gs
mov
inc
xchg
jecxz
out
xchg
push
lea
push
dec
jb
dec
pop
or
lods
iret
pop
repnz
int3
xchg
hlt
pop
clc
jae
mov
xchg
add
test
mov
pushf
push
out
aad
pop
or
jmp
cmp
xchg
sub
pop
cmp
std
mov
cmpsb
and
mov
out
xor
add
dec
cli
mov
adc
cmp
dec
fmuls
test
jp
pushf
sbbb
push
add
adc
add
mov
jbe
in
rcl
nop
fsts
add
mov
lods
ljmp
xchg
jo
outsl
stc
sub
sub
insb
dec
stc
adc
xchg
inc
fwait
mov
roll
scas
mov
sbbl
hlt
pop
fs
jmp
pop
xor
cli
sbb
xchg
and
or
scas
mov
insb
je
jg
fildll
sub
mov
lahf
or
mov
jecxz
clc
pop
pop
cmpsl
mov
cmpb
jb
std
inc
pop
inc
data16
out
push
push
and
xor
int3
inc
pop
mov
in
and
push
inc
cld
mov
and
and
sbb
pop
out
sti
jb
out
cmp
pop
insl
mov
add
dec
pop
data16
push
addl
repnz
out
mov
mov
movsb
out
ret
pop
xor
inc
fsts
cmp
stc
pusha
pushf
stos
and
jae
push
es
arpl
xchg
aad
xor
sub
rcr
mov
xchg
lahf
ss
and
mulb
xchg
sub
jmp
fs
daa
ficomps
add
js
addb
cmp
jecxz
and
adc
cmpsb
jbe
and
test
fisubrs
out
ss
aas
jecxz
repz
dec
inc
pop
jno
mov
adc
std
mov
pushl
xchg
decl
movsl
jb
sahf
push
inc
into
mov
xor
inc
iret
inc
das
pop
insl
ret
fstpl
or
cld
and
fists
rcrb
dec
push
cld
push
clts
test
inc
mov
out
jle
jno
xchg
mov
loope
stc
aad
repz
adc
mov
jns
test
repz
mov
adc
mov
sub
sti
jns
inc
test
xchg
pop
xchg
sbb
out
sar
mov
mov
nop
sbb
inc
aad
and
sbb
test
out
gs
pop
push
adc
inc
mov
xchg
mov
fcomps
sub
in
pushw
push
out
popf
dec
test
rcrl
sbb
mov
pushf
cld
mov
lea
xchg
sbbl
push
mov
js
mov
jbe
ljmp
leave
cmp
dec
cmpsb
and
add
nop
lods
mov
sbb
add
into
sbbl
push
inc
nop
icebp
lcall
shlb
adc
dec
or
jg
mov
ret
sti
shr
xor
cmpsl
shlb
xchg
pop
imul
or
jmp
mov
mov
inc
pop
jne
or
std
lahf
cmp
push
jb
pop
cmp
pop
vpsrld
push
mov
inc
stos
mov
inc
idivl
enter
out
dec
xchg
sarl
xchg
dec
in
data16
pop
xor
dec
gs
mov
mov
dec
fdivl
jecxz
push
loop
arpl
mov
out
fbld
psubusb
jmp
repnz
addb
add
cmpsl
ret
in
or
orb
add
jge
inc
daa
and
add
shll
push
sahf
mov
fst
sbb
dec
add
xchg
dec
inc
scas
mov
sbb
lock
nop
jnp
add
pop
push
pop
test
rorl
lds
push
jns
or
lret
imul
push
lods
fsubrl
clc
add
clc
cmp
sub
adc
push
fdivrp
adcl
std
mov
call
nop
dec
push
fisttpll
sub
rorl
lods
jmp
pop
mov
scas
add
test
mov
scas
push
fwait
pop
loope
out
aaa
das
es
adc
sti
xchg
xor
inc
es
subl
push
test
inc
fsts
lahf
pusha
clc
pusha
sub
imull
dec
mov
inc
sub
jns
jmp
and
out
scas
jl
out
rclb
add
dec
mov
out
mov
fcoml
subb
sbb
mov
mov
add
push
aaa
jbe
fwait
pop
cmp
nop
inc
lcall
sbb
ja
pop
cwtl
in
dec
repz
adc
pop
or
lock
cmp
pop
jne
mov
dec
push
xor
aam
rorl
adc
or
call
imul
mov
sbb
stc
ret
jp
mov
adc
dec
cmp
sub
arpl
ja
fwait
pop
fcoml
rcl
push
xor
ret
xchg
cmpsl
cmp
pop
scas
in
ljmp
sub
fucomp
xchg
icebp
push
and
aad
js
inc
jmp
xor
pop
nop
xchg
sbb
dec
mov
dec
mov
push
bound
sbb
mov
stc
jg
add
fwait
lock
jl
pusha
sub
rorl
push
sbb
inc
add
cmpb
and
iret
xchg
lods
icebp
cmp
outsb
dec
mov
fsubp
push
andb
mull
jo
xchg
rclb
out
test
shrb
lea
dec
and
aam
stos
fcmovb
jb
outsl
and
pop
ss
jne
and
jge
dec
ja
scas
test
pusha
dec
je
dec
cmpsl
or
push
out
shll
es
mov
cmc
dec
es
ret
out
popf
shlb
pushf
sub
cmp
subl
or
cmp
cmp
stc
pop
push
inc
orps
xor
and
loope
pop
jp
clc
stos
aas
sbb
mov
fldcw
dec
bound
xor
stos
fstpt
fistps
mov
into
fwait
dec
in
and
inc
dec
add
pop
xor
stos
out
nop
mov
cli
or
mov
mov
arpl
cmpsl
mov
pop
mov
jl
imul
stos
mov
mov
or
imul
adc
out
xor
or
test
mov
arpl
cmp
jg
or
jb
std
push
lds
fdiv
push
fmul
pop
push
xor
stc
adc
sbbl
iret
fcomip
jl
add
push
sbb
stos
ret
fcomip
add
rclb
out
or
inc
cltd
adc
cmp
xor
adc
and
addb
xor
or
mov
mov
clc
dec
lods
mov
jne
in
mov
decb
movsl
out
scas
test
pop
lods
pop
popl
mov
or
pop
xor
fs
nop
cs
push
ss
test
xor
and
gs
lods
xchg
test
xchg
cmp
outsl
gs
jecxz
mov
sarl
fwait
add
mov
or
jae
jbe
repnz
out
loop
pop
sbb
mov
xchg
pop
das
mov
pop
hlt
cli
push
shrl
fidivl
mov
shlb
imul
ljmp
and
clc
lea
jg
test
pop
add
or
std
or
pusha
ret
call
sbb
sbb
inc
inc
test
xor
adc
mov
push
popa
xlat
stos
shll
mov
loopne
test
push
xor
imul
adc
cmp
pusha
in
mov
push
push
clc
jb
pop
or
fmull
popa
fsubp
cmp
pmulhw
stos
insb
out
xlat
mov
sbb
mov
mov
rol
pop
prefetchw
movb
imul
cmp
outsl
add
fdecstp
pop
mov
mov
mov
lret
in
out
add
xchg
sbb
cmp
lea
lock
daa
and
mov
mov
fdivr
mov
test
adc
aas
jge
cli
cmpsb
xchg
xor
xchg
mov
aad
fildl
jmp
pop
mov
lcall
call
pusha
ja
xchg
fnsave
mov
mov
pop
push
xor
fdivs
ficoms
jbe
adc
aad
in
lcall
lods
cmp
addr16
cmp
xlat
push
pop
test
dec
mov
pop
pop
aas
mov
adc
xchg
mov
insl
aam
cmpsb
and
pusha
mov
lods
inc
mov
mov
stos
lret
ja
inc
sbb
js
cli
mov
xchg
mov
and
xchg
arpl
mov
push
push
out
std
and
call
lock
in
jbe
movsb
push
sti
fmuls
je
mov
cli
dec
fildll
icebp
push
sub
mov
std
insl
add
mov
jnp
outsl
testl
cmpsl
push
sahf
mov
or
notb
rol
push
cwtl
mov
or
gs
sti
movsb
cmp
mov
adc
push
jmp
mov
idiv
dec
sub
nop
and
jle
jg
or
mov
cltd
xchg
pop
sub
sahf
lods
scas
mov
push
nop
sbb
shll
jge
repnz
pop
or
cmpsb
xchg
xchg
stos
mov
mov
leave
cmp
sub
imul
and
or
in
mov
jp
jg
mov
lock
mov
push
xchg
jae
inc
int3
jno
xor
das
test
inc
sti
ror
ss
jbe
outsb
add
pop
xor
roll
and
cs
sti
aas
aas
mov
iret
dec
and
lea
clc
jae
cmc
dec
mov
jns
xor
or
lea
sub
into
scas
jl
xorb
adc
fnsave
jecxz
data16
mov
pop
orb
push
jle
cmp
mov
pop
pop
notb
cld
add
or
cmpsl
int
test
iret
shll
out
nop
cmc
mov
add
adcl
push
inc
add
sbb
mov
cmp
mov
movsl
xchg
dec
addl
pop
and
and
cltd
loope
or
mov
sbb
mov
movsl
int
leave
dec
jns
sbb
leave
jle
icebp
add
fidivrl
ret
mov
shl
aas
mov
jle
test
inc
into
stos
xorl
mov
je
mov
aam
fsubrl
jb
mov
jae
inc
pop
xor
push
es
ss
inc
shl
mov
rclb
xchg
stc
lea
scas
nop
dec
and
ret
push
jnp
fcoml
pop
rep
in
repnz
pusha
pop
cld
xor
and
jge
sub
and
rclb
in
jb
mov
sbb
mov
scas
hlt
sarb
inc
popf
fbld
es
movsb
ljmp
push
les
mov
cmp
fists
orb
inc
xchg
insb
sahf
sub
cmp
ds
inc
lds
jl
inc
xor
cli
aam
shll
push
sbb
jl
sahf
xlat
mov
xor
cld
mov
int3
sbb
dec
xchg
xchg
cmp
sub
lret
bound
pop
hlt
pop
data16
lret
mov
ss
mov
dec
pop
aaa
out
lcall
ss
aas
cmpsl
ja
push
push
jle
xorl
jecxz
jmp
outsl
adc
and
mov
lret
jg
js
push
insb
mov
pop
mov
mov
lcall
sbb
mov
cmp
in
cmp
lea
jl
sub
lea
test
dec
inc
push
push
pop
ss
jnp
jecxz
xor
push
rol
mov
dec
sub
icebp
pop
sub
inc
loopne
leave
mov
je
in
jg
mov
ds
outsb
repnz
xchg
lahf
add
arpl
xchg
fsts
inc
sbb
cmc
mov
mov
into
fistl
incl
popf
mov
cmpsb
dec
out
adc
inc
pop
sub
cmp
aas
stos
inc
cmp
hlt
clc
addr16
xor
cwtl
in
out
subb
je
cmp
pushf
imul
mov
rol
jge
pusha
push
jb
es
push
or
push
imul
ljmp
push
inc
jge
and
mov
pop
push
aas
cvttps2pi
int
inc
or
xchg
cmp
sub
icebp
and
lret
adc
dec
dec
in
mov
test
sub
jecxz
ljmp
jo
into
movb
add
pop
cmp
out
add
add
xchg
mov
mov
shrb
ficoms
jmp
jae
jecxz
jp
or
push
cli
lock
addb
fldl
push
leave
loopne
iret
rcrb
and
in
mov
xor
add
inc
pop
inc
and
sbbb
into
sarl
pop
push
lds
aam
int3
add
xor
push
leave
imul
mov
test
mov
inc
mov
sbbb
call
jae
jg
pop
mov
insb
inc
add
sub
and
test
popa
jmp
push
jo
repz
stos
stos
push
pop
cmp
lea
sahf
mov
scas
mov
stc
imul
sub
xlat
xchg
xchg
inc
and
dec
xlat
scas
dec
adc
jle
arpl
cmc
jnp
lods
mov
adc
repz
int
icebp
addb
pusha
cmp
xchg
decb
mov
jnp
push
movsb
inc
pop
xchg
jge
pushf
cli
push
jno
xor
and
fcoms
int3
stos
inc
cwtl
insb
or
xchg
jmp
cmp
pushf
imul
testb
sti
out
or
add
lcall
cwtl
mov
jle
call
ret
xor
ret
iret
xor
popa
mov
scas
pop
xor
mull
cmp
sbb
inc
inc
jae
sti
dec
jae
push
mov
loop
mov
xor
add
dec
mov
daa
shll
mov
cmp
xchg
incl
aam
mov
jns
pop
mov
das
call
pop
dec
xlat
aad
pop
call
inc
shlb
fimull
and
popf
add
push
repz
cs
pop
int3
add
cmp
arpl
and
fmull
mov
aas
pop
loop
mov
inc
inc
in
xor
iret
fs
dec
inc
push
xchg
adc
sahf
cmc
aas
pop
mov
data16
adc
std
sub
xchg
jo
push
rcrl
sbb
pushw
pop
repnz
lret
lea
and
mov
imul
jb
cmp
sti
dec
xchg
jl
xor
js
ljmp
in
stos
inc
mov
push
or
movsl
dec
ss
dec
dec
movsb
mov
fdivrl
iret
sti
std
or
insb
xlat
stos
subl
push
int
int3
and
lods
test
cmc
mov
or
vsubss
loopne
sbb
mov
cmc
mov
adc
std
cmp
sub
mov
int
add
inc
scas
fisttpl
outsl
pop
xor
fildll
sub
aaa
test
imul
push
cmc
enter
dec
sub
and
fmull
pop
mov
loopne
cli
shll
inc
adc
ds
ja
dec
test
lret
cmpsl
dec
or
dec
filds
enter
data16
ss
icebp
je
pop
or
clc
test
mov
push
jp
clc
movsb
dec
scas
mov
lret
loopne
or
cmp
pop
jne
jmp
sahf
sub
jb
stc
pop
in
popf
lods
scas
ds
mov
outsb
jg
mov
inc
popf
std
repnz
lds
lret
sti
push
xor
sbb
loop
mov
repnz
dec
xchg
adc
mov
shr
addr16
pop
xor
jo
push
pop
fwait
push
and
lcall
mov
sarb
out
jle
sbb
int3
dec
add
rclb
and
mov
in
arpl
add
test
adc
mov
aad
mov
sti
int
xor
mov
mov
push
jmp
clc
push
xor
push
inc
in
pop
test
aad
adc
in
daa
into
dec
and
je
inc
xchg
sub
test
aaa
loope
cs
sbbb
pop
cld
jbe
sub
sbb
pop
testb
pop
movsl
sub
sub
pusha
cli
cwtl
adc
pop
out
lret
aas
aas
dec
repnz
popf
scas
mov
into
testb
outsl
mov
out
sahf
mov
xchg
xor
cmc
lahf
rcrb
push
stos
add
fs
pushf
xchg
sahf
xor
call
mov
mov
mov
or
or
je
mov
idivl
popa
add
pushf
sbb
test
dec
pop
ja
scas
sar
xchg
jge
decl
cwtl
xor
mov
sbb
out
sarb
mov
fsubl
iret
sti
les
dec
or
pop
icebp
push
stos
notb
out
jns
js
sbb
pop
mov
mov
jb
shl
fsts
sub
imul
sub
sbb
lods
in
jne
pop
jle
fwait
sub
int
ljmp
inc
jns
fstps
dec
out
and
jl
repnz
xor
xchg
in
inc
inc
push
jno
outsb
imul
ret
outsl
mov
push
lods
loope
pop
lods
repz
xor
scas
cmp
fisubs
inc
pop
dec
xchg
pop
push
inc
flds
insl
xchg
out
and
mov
jle
mov
sub
imul
imul
pop
pop
inc
xlat
mov
fldl
jge
mov
lods
stos
fwait
sti
xchg
mov
pop
xchg
xchg
and
adc
sbb
pop
imul
lods
xor
arpl
ljmp
shrl
push
or
mov
jge
in
sub
sti
or
negb
and
aaa
sbb
int3
mov
sbb
cltd
inc
fcmove
inc
and
xor
jl
inc
xor
fisubrl
push
iret
in
test
arpl
pmaxsw
push
jecxz
shlb
pop
jmp
ja
test
jmp
fwait
cli
fildl
cmp
loope
ret
cmc
sub
das
dec
cmp
mov
push
dec
in
cs
maxps
jl
mov
cs
jae
mov
popa
imul
and
fsubl
lret
mov
movsl
outsl
adc
push
movsb
jns
mov
jecxz
sbb
fcompl
mov
data16
hlt
ds
ds
cs
dec
jle
mull
jnp
setno
push
mov
sbb
ret
mov
sbb
xor
inc
insb
add
dec
and
mov
adc
push
leave
add
and
andl
sbb
mov
pop
sti
jecxz
cmpsl
pop
push
test
pop
mov
mov
daa
aaa
stc
cli
stc
loope
cmc
pop
ret
xchg
out
scas
popa
out
xchg
mov
xchg
dec
and
loope
jecxz
jmp
push
das
lcall
cmp
xchg
andb
decb
xor
xchg
jno
or
mov
mov
adc
cmp
jnp
adc
mov
sbb
sub
sub
test
cmpsl
xchg
adc
roll
movsb
test
mov
mov
push
addr16
shrl
sub
dec
ja
xchg
ja
adc
cmpb
jge
adc
jnp
cmp
sbb
loope
icebp
xchg
mov
push
pop
js,pn
adc
fisttpll
xchg
jge
aas
cmp
loope
cli
cmp
clc
outsl
out
pop
inc
scas
xor
movsb
loope
inc
sbb
mov
jb
enter
outsb
jae
sub
adc
pop
mov
mov
mov
adc
sarb
loop
cmp
mov
mov
inc
cmp
pop
fsubrp
jns
test
jle
xchg
mov
sahf
popa
mov
out
inc
push
js
xchg
mov
in
shll
add
jle
add
fldl
push
bound
jmp
mov
and
jb
mov
movsl
mov
aaa
push
pusha
and
pop
gs
adc
xchg
dec
aaa
add
repnz
add
add
pop
dec
xchg
cmp
pop
outsl
stos
lret
daa
add
ret
push
fstl
cmpsl
shll
and
or
pop
aaa
xchg
add
mov
xchg
xchg
jle
mov
sub
jbe
cs
sahf
dec
aas
aam
xchg
in
and
and
pushf
fisubl
ror
pop
test
je
xchg
jle
scas
into
arpl
out
mov
test
inc
outsb
lret
loopne
mov
mov
mov
xadd
fnsave
daa
xchg
sbb
dec
in
aaa
cmp
or
scas
call
fdivrs
addb
mov
sarl
jp
jge
scas
inc
adc
jno
xor
lahf
jns
shrl
test
jl
rolb
xor
jbe
push
dec
dec
sub
std
cmp
cmp
mov
sub
es
or
lods
xchg
hlt
xchg
xchg
inc
outsb
lods
push
imul
jmp
addr16
sbb
out
fdivs
mov
xor
mov
stos
inc
or
loop
add
gs
outsl
adc
loopne
ret
pushf
mov
in
scas
jmp
dec
push
add
ljmp
pushf
push
dec
xor
jp
inc
enter
int
scas
cltd
dec
insl
mov
repnz
ljmp
xor
lods
repz
push
fidivl
test
dec
pop
and
cmp
les
hlt
lods
outsl
add
jno
cmp
in
addl
or
jl
inc
gs
movsb
ret
mov
popf
bound
ss
mov
or
pop
icebp
cmpsl
add
cmp
js
xor
push
push
daa
jnp
push
inc
jl
push
scas
add
mov
jge
scas
out
scas
test
aam
out
test
pop
cs
push
inc
fdivp
andb
imul
fisubrs
xchg
xor
sarl
pop
pusha
aaa
xchg
inc
and
iret
sub
loope
mov
adc
out
arpl
gs
push
lea
cmpsl
lods
in
pop
xchg
vandnps
aaa
mov
jae
enter
lods
daa
loop
pop
cmp
pop
imul
push
dec
add
sbb
add
inc
inc
lret
lret
pop
sarl
add
mov
cmpsb
mov
adcb
push
aas
bound
imul
jae
shl
sahf
jno
cmp
in
fdiv
adc
mov
rcll
push
fsubr
loop
out
jecxz,pn
outsl
or
sub
inc
cmp
and
addr16
or
cmp
imul
mov
jb
adc
fsubrl
mov
or
xchg
mov
mov
sbb
cld
lods
cli
cmp
and
lock
andb
mov
push
mov
inc
inc
call
sub
lahf
push
int3
loop
mov
add
xor
or
lock
jmp
lea
lcall
lret
and
cmp
sbb
pop
mov
clc
les
jmp
inc
mov
jecxz
shrb
or
mov
or
and
or
gs
out
dec
ljmp
pop
ds
test
push
loope
xchg
scas
jl
test
cltd
jne
stc
xchg
add
dec
shr
jl
in
xor
jl
sbb
inc
lret
lret
push
sbb
rorb
inc
dec
mov
cmp
xchg
sub
cmc
inc
jno
sub
imul
sbb
js
xchg
jo
ja
jb
cli
test
pop
sbb
shrl
or
pop
repz
fdivl
mov
sbb
adc
in
jmp
cmp
push
mov
je
js
sbb
pop
lods
inc
mov
mov
andl
sti
add
call
lea
xchg
sub
push
lret
xor
mov
outsl
sbb
cld
push
int3
lods
inc
rclb
ja
push
or
or
lcall
gs
cs
sahf
das
or
push
push
xchg
aas
inc
mov
sub
int
imul
cmp
lock
push
out
jle
jg
xor
sbbl
xor
and
jno
pop
not
movsl
mov
push
cmp
in
popf
xor
xchg
lods
inc
add
shrl
push
ret
pop
xchg
jmp
repnz
ljmp
jo
cmpsl
cmp
aaa
addl
lret
ss
or
sub
dec
ficoms
ror
cwtl
sbb
cmp
fildll
arpl
mov
dec
add
ja
mov
jb
outsb
sbb
aam
pusha
inc
dec
movsl
cld
stos
cmpsb
ret
mov
scas
add
cmpsb
inc
xorl
cmp
mov
jae
call
and
inc
test
dec
rorl
sbb
lret
imul
cmc
jecxz
sbb
daa
in
xchg
or
mov
mov
mov
test
icebp
inc
sbb
mov
js
iret
arpl
mov
ret
sub
cmpsb
repz
xor
push
aaa
or
add
inc
fstps
cmp
mov
lods
inc
add
or
std
jg
scas
and
popa
cld
mov
jnp
push
in
xchg
adc
je
adc
mov
in
xchg
xchg
mov
out
or
add
orb
xor
pcmpgtd
arpl
gs
rolb
xor
not
adc
push
adc
cmp
movups
cmp
xchg
push
xlat
es
les
dec
adc
in
mov
mov
push
out
cmp
push
jbe
lods
sub
pop
mov
into
in
adc
sub
aad
js
jge
into
jbe
in
mov
pop
outsl
out
push
ret
daa
adc
repz
fcomi
fwait
xor
inc
push
call
xor
call
xlat
fnstcw
push
out
inc
cmp
dec
gs
into
das
sbb
decl
xchg
orl
pop
or
mov
cmp
xchg
lret
roll
test
adc
push
in
hlt
sar
mov
or
push
jb
fcoms
call
or
sub
test
and
jb
scas
mov
sbb
lret
jnp
mov
pushf
loopne
ret
test
xor
stc
mov
out
pushf
push
mov
pop
jp
xor
xchg
ljmp
dec
xor
cs
into
and
iret
arpl
dec
gs
clc
xor
pop
or
aad
test
inc
fsts
ret
ret
sti
paddd
pop
sbb
lahf
dec
enter
lock
outsb
cmc
nop
stc
cmp
int3
mov
mov
cmp
xlat
cmp
mov
dec
or
sub
adcb
cmp
insb
jl
pop
popa
subl
push
popf
sub
push
flds
popf
fildl
test
pop
test
mov
imul
ljmp
test
or
xorl
movsl
movsb
adc
loope
and
addl
add
sarb
jae
and
loope
fildll
rcll
sbb
test
ss
cli
es
jo
int
push
lcall
jle
push
mov
cmc
xchg
pop
xor
dec
xchg
mov
fcoml
fdivrs
lock
or
xor
loop
mov
cmpsl
mov
xchg
and
daa
push
std
sbb
leave
loopne
adcb
adc
pmaxub
js
movsl
daa
mov
pop
in
push
idivb
pushf
jl
mov
sbb
pop
clc
orl
loopne
xchg
fs
ficoms
faddp
movsb
add
daa
pop
shrl
push
icebp
ret
push
cltd
mov
lahf
xor
xlat
cli
mov
adc
ss
mov
movsl
push
addr16
data16
adc
jo
sub
into
cwtl
shrb
push
add
out
xor
inc
into
sbb
test
xchg
add
cmp
test
addr16
bound
rcrb
push
jns
mov
subb
push
cmpsl
movsb
insb
cli
xchg
inc
cs
lret
sbb
sub
dec
js
leave
repz
ror
fmull
fldlg2
aad
out
sub
adc
mov
into
add
sub
adc
xchg
dec
daa
mov
pop
sub
pop
jne
dec
cmpsl
insb
jae
lahf
aam
push
mov
sahf
inc
fildll
cmp
fisubl
repz
sub
imul
push
aas
push
add
cld
dec
push
or
sarl
loope
and
aas
dec
dec
mov
in
xchg
outsl
icebp
xor
xor
xchg
or
fnstsw
jge
jl
lods
test
inc
ja
ljmp
sahf
aas
jnp
push
mov
and
mov
push
rclb
ret
xor
lock
xor
cli
jae
loop
push
jo
scas
pop
sub
into
xchg
ret
xchg
xor
pop
data16
fs
jb
xchg
xor
lcall
lahf
cmp
fistl
dec
aad
pop
mov
ret
jl
dec
fsub
filds
into
mov
mov
mov
mov
cwtl
das
pop
fstpt
mov
mov
or
sub
push
or
sub
shrl
out
pop
inc
lock
inc
fildll
dec
insb
sub
outsb
adc
es
sbbb
mov
xor
lock
enter
mov
je
das
push
and
push
ljmp
sub
mov
cld
lcall
sbb
and
pop
fs
imul
or
lock
mov
pop
adc
gs
adc
sbb
xchg
loop
dec
and
adc
inc
inc
imul
sbb
fld
aam
mov
xchg
cmpsl
mov
mov
repz
pushf
cltd
jge
imul
pop
and
mov
test
or
rcrb
pop
sbb
test
push
sub
insl
sbb
jo
dec
jecxz
push
leave
fadds
and
stos
es
push
or
sbb
gs
mov
cmpb
int3
arpl
mov
cmpsb
mov
loop
inc
xchg
iret
mov
ret
fcmovnbe
out
jmp
stos
mov
ja
mov
cli
jle
ret
fucomip
sub
aad
sbb
and
out
hlt
xchg
adc
divb
push
cmp
cltd
or
movsb
add
out
scas
pop
pusha
sbb
cmp
fdivrl
mov
outsl
lret
pushf
lods
jmp
jne
dec
outsl
lds
fidivrs
das
lds
imul
addr16
xchg
out
sahf
in
mov
cmpsb
jle
or
in
call
and
cmp
pop
push
push
ficomps
pop
cmpsb
ja
mov
jmp
add
push
dec
and
mov
jne
sbb
test
jmp
test
repnz
xchg
pop
sbb
test
es
push
pop
mov
frstor
mov
movsl
inc
out
scas
das
inc
push
and
pop
ret
fldt
cli
pushf
test
shll
jl
cwtl
or
sbb
mov
inc
pop
push
cmpsb
jp
ja
xchg
fwait
sub
mov
inc
mov
xchg
ljmp
and
jp
lds
and
push
push
rcr
out
insb
add
mov
or
mov
and
rcll
mov
into
lcall
jns
mov
jns
shrb
pop
pop
ret
adc
outsb
adc
les
jmp
jne
inc
xchg
jmp
iret
testl
lods
pop
xor
mov
add
sbb
sbb
lret
fimuls
outsb
in
lods
out
jl
sti
stc
ja
inc
push
call
xchg
mov
dec
fdivs
divl
lahf
mov
enter
adc
mov
je
sub
jb
cld
sub
aad
ret
jno
dec
xchg
jbe
rcll
xlat
mov
add
orl
fwait
sbb
popf
pop
movsl
mov
jecxz
adc
test
aad
fdivl
scas
cli
lea
add
data16
mov
push
xorb
or
cmp
sahf
sbb
mov
lods
insb
xchg
sbb
cld
int
jns
enter
arpl
adc
pop
lods
dec
aas
jb
push
pushf
dec
push
cld
lea
xchg
hlt
cwtl
sub
mov
xchg
test
outsl
adc
mov
cmp
imul
mov
fnstenv
rcl
adc
je
scas
icebp
mov
stc
adc
ljmp
call
aad
pop
out
test
push
popa
adc
scas
test
std
push
lods
ret
repz
data16
push
pop
shll
inc
fildl
push
je
bound
arpl
xor
mov
addb
adc
mov
loopne
cmp
xchg
mov
sti
and
inc
dec
jecxz
shlb
xchg
xor
and
leave
bound
mov
cltd
mov
mov
lret
mov
mov
adc
icebp
add
lods
repz
add
inc
or
jae
cmpsb
sbb
or
adc
mov
inc
inc
test
rcl
ljmp
pop
in
xchg
xchg
popa
clc
iret
mov
jge
and
jno
inc
lods
insb
xorl
cmp
arpl
and
xor
push
lods
or
ret
sbb
dec
pusha
stos
fwait
repnz
jno
leave
inc
aad
xor
sarl
arpl
mov
rclb
mov
shll
sub
mov
or
adc
xchg
ja
xor
push
xor
push
xchg
cmp
and
lods
cmpsl
push
stc
lods
push
fstpt
repz
cltd
xor
outsl
jle
fwait
jae
repz
lods
pop
mov
inc
fcomps
mov
inc
fmull
lcall
lock
les
les
mov
jge
inc
out
sbb
pop
xor
pop
jmp
lret
out
call
in
sbb
cmpsb
adc
mov
in
or
push
add
jp
sub
push
xchg
sub
rcrb
inc
gs
mov
fs
icebp
aad
sub
pop
jmp
xlat
sarb
movsl
bnd
or
push
jns
jne
sbb
cmp
adcb
xor
push
inc
lcall
xchg
mov
mov
xor
int
xchg
lcall
xchg
adc
movsb
and
sbb
mov
popl
mov
cld
ja
xchg
dec
mov
repnz
mov
aad
xchg
mov
stos
and
mov
adc
fildl
ss
cmpsl
mov
adc
jno
sub
cmp
loop
mov
stos
inc
pop
shl
mov
dec
in
mov
jb
ljmp
fwait
jne
sti
addb
sbb
xor
iret
sub
sbb
faddp
sub
lock
cmp
mov
mov
outsb
push
jg
inc
stc
cwtl
das
lds
bound
jbe
jmp
add
mov
add
lods
fidivrs
mov
lcall
clc
cmp
mov
push
mov
pusha
iret
lret
mov
aam
ficomps
mov
sub
mov
aam
push
shrl
and
xor
and
or
rcrl
shrl
jg
aas
js
pop
or
cs
pop
cmc
sbb
dec
push
mov
push
xchg
dec
in
in
pop
adc
push
das
lret
pusha
add
outsl
rclb
push
mov
pop
out
rorl
popa
mov
mov
hlt
pop
sub
test
mov
adc
mov
inc
jl
jns
xchg
mov
adc
lcall
stc
mov
jle
pop
and
pop
add
shll
lods
jmp
adc
lods
inc
cmp
push
inc
pop
mov
filds
push
les
ja
repz
cmpsl
and
pop
mov
or
sub
jl
lret
pop
xchg
jge
cld
arpl
subb
or
iret
jns
sbb
jno
in
push
jb
or
aam
and
mov
xor
iret
test
ret
testb
or
jnp
daa
repnz
fcomps
push
clc
nop
xchg
sub
out
mov
fnsave
sbb
hlt
sti
bound
sbb
mov
mov
jb
test
lret
pop
nop
jge
cwtl
bound
mov
gs
stos
insl
add
ljmp
xor
inc
fisubl
dec
or
cmpb
scas
cmpsl
shlb
fildll
mov
cli
imul
loopne
adc
inc
shll
notl
jnp
hlt
mov
push
rcl
sbb
dec
cld
imul
loope
xor
jb
cmpsb
dec
hlt
daa
repnz
rcrl
mov
stc
mov
test
cs
or
nop
cmp
jg
push
rorl
jo
icebp
jb
sahf
incl
leavew
fsubrl
je
xchg
fldcw
loopne
or
fdivrs
sbb
xor
or
mov
into
repz
add
cmp
pusha
test
and
notb
xor
xchg
sbb
dec
leave
pusha
cmp
xor
out
jg
pop
stos
push
int
pop
scas
out
cltd
jo
xchg
and
push
inc
push
pop
sti
jb
sbb
fidivl
mov
in
fnsave
lret
fcomip
mov
and
test
push
adc
loope
sub
dec
leave
aam
decl
es
sbb
adc
in
mov
push
push
and
ss
mov
cmp
push
stc
pop
ror
outsb
stc
xchg
stos
clc
fiaddl
inc
js
lock
test
imul
lock
cmpsb
loopne
hlt
adc
pop
xor
jno
xor
xchg
fstpt
mov
or
dec
cmpsl
xor
inc
jne
loop
mov
lret
and
sub
in
test
jmp
push
and
push
xchg
cs
clc
lds
insl
mov
pop
dec
inc
mov
outsl
lcall
sti
stc
mov
adc
dec
repnz
scas
mov
push
mov
inc
inc
fsubs
frstor
jnp
pop
jp
imul
lcall
movzbl
xchg
jmp
es
and
lcall
js
lcall
xor
add
cmc
shll
stos
adc
xor
push
hlt
dec
shlb
jae
push
js
in
mov
adc
xor
cli
gs
ja
mov
inc
jmp
fcmovnb
pop
int
shr
xor
loope
popf
out
inc
rcll
insb
int3
cmpsb
mov
aam
jle
and
or
xchg
mov
fcomps
pushl
sbb
aaa
cmp
in
fs
cmp
aad
pop
inc
sub
mul
sub
or
test
adc
in
das
pop
fisubrl
fs
icebp
pop
test
or
in
dec
fdivl
pop
sub
or
dec
fistpll
lcall
enter
or
les
push
sbb
jp
push
fistpl
in
call
cmp
pop
pop
push
sbb
mov
in
mov
fisttps
push
mov
mov
test
jno
xchg
pop
stos
loop
mov
idivl
add
movsl
cmp
mov
fsubrl
inc
sub
cmp
inc
fsts
ficoml
and
repz
sub
push
outsb
mov
mov
cmp
into
jb
cli
jne
sbb
stos
or
movsb
cmc
jecxz
into
subl
adc
mov
ret
repnz
imul
sbbb
bound
icebp
add
and
daa
lcall
jno
push
mov
movsb
in
and
js
gs
ret
xor
inc
je
test
pop
in
bound
test
fstpt
xchg
in
push
lods
xor
xor
adc
push
mov
stc
cmp
fsub
mov
mov
movsb
mov
adc
pop
pop
inc
mov
cmp
cld
scas
pop
cli
xor
fsubrl
inc
fcompl
xchg
adc
mov
add
xchg
les
imul
cmp
pop
das
jge
cmpsl
cmp
fldenv
test
cmpsb
inc
cwtl
push
sbb
xchg
pop
ja
aad
insl
mulb
jmp
rorb
jbe
inc
pop
mov
jg
dec
jmp
data16
lea
mov
std
pop
sub
push
sub
xor
cmp
fiaddl
popa
clc
push
dec
pop
adc
jg
loope
mov
out
add
sbb
push
inc
sbbl
fnsave
fisubl
add
jecxz
pop
inc
ret
ret
repz
dec
mov
fyl2x
cmp
test
mov
punpcklwd
pop
xchg
jnp
jl
push
scas
flds
sbb
push
movsb
sarb
dec
fstl
cmp
out
insb
mov
iret
push
stos
cmp
push
jbe
fidivrl
lret
pop
out
jl
iret
mov
lret
mov
cwtl
nop
pop
out
dec
rolb
pop
addr16
imul
xor
inc
sbb
xchg
lock
hlt
insl
adc
cli
jl
push
pop
leave
flds
and
adc
stos
ljmp
xor
jno
sti
pop
pop
loopne
int3
pop
scas
mov
sbb
je
das
rol
jl
sbb
xor
dec
in
sub
push
jp
ret
sub
jns
test
aam
mov
sarb
jno
cmp
lds
ret
xor
push
movsb
sarb
test
lahf
add
pop
xrelease
imul
imul
mov
pop
cmp
fwait
movsl
sub
inc
push
xor
mov
add
int
pop
call
cli
pushf
sbb
gs
outsb
ljmp
pop
andl
pop
cmpsl
sarl
or
loope
repnz
pop
subb
dec
push
or
lahf
daa
iret
push
jmp
sub
sub
in
js
or
adc
jle
cmp
popf
push
adcb
jb
mov
pop
or
andl
jecxz
and
adc
mov
popf
sbb
sbb
mov
and
leave
xchg
scas
addr16
fmulp
or
jmp
test
rorb
cld
cltd
mov
adc
fcoml
and
mov
mov
and
or
fdivs
sbb
pushf
xchg
push
sahf
sbb
imul
push
inc
mov
mov
jl
xor
xor
dec
fbstp
or
mov
mov
and
inc
lcall
and
jno
dec
sub
sub
test
lea
jp
cmpsb
push
js
gs
shl
xchg
fcomps
shrb
cmpsl
out
push
inc
loope
xchg
lods
movsl
cld
push
ret
mov
mov
shl
sbb
icebp
ds
pop
lods
push
jns
lds
repz
imul
add
nop
pop
sbb
into
push
add
pop
lahf
and
jl
cmp
loop
jae
inc
add
loope
testb
mov
xor
jns
add
pop
cwtl
aam
jae
sub
jl
hlt
shrb
sub
or
cmp
adc
popf
mov
add
dec
dec
mov
jno
pop
jo
push
xor
mov
stc
and
insl
lds
adc
mov
adc
xchg
sub
into
push
pop
pop
mov
lods
cmp
mov
dec
loop
outsl
jge
mov
add
pop
add
mov
cltd
mov
push
ja
jnp
in
add
adc
pop
inc
xchg
addr16
sbb
or
repnz
sbb
stc
mov
dec
sub
iret
mov
push
pop
mov
xor
mov
mov
push
sti
ss
mov
shlb
mov
inc
insb
andb
sbb
cld
dec
cltd
mov
fwait
ret
cli
aad
sbb
inc
ljmp
jns
jb
jno
ret
mov
mov
arpl
push
into
jnp
shrb
and
aaa
or
push
fcoml
stc
xchg
test
rorb
xor
cmp
pop
pop
into
fmull
repz
shll
dec
cli
pusha
call
inc
pushf
ret
adc
xchg
pop
test
mov
xor
push
xor
dec
repz
and
inc
mov
xor
xchg
sub
pushf
outsl
pop
xchg
adc
lahf
scas
and
mov
ret
rcrb
adc
dec
sub
testl
cmp
pop
idivl
aas
pop
sub
inc
repnz
out
xchg
add
lret
xchg
icebp
jnp
jge
xlat
outsb
lods
jb
test
and
ret
andb
in
in
pop
decb
adc
stc
push
hlt
or
cmp
sbb
hlt
lea
adc
mov
stos
je
test
je
mov
lods
testw
xchg
sbb
sbb
jle
stos
inc
je
adcb
xlat
mov
jnp
and
adcl
arpl
cmp
jle
pop
sub
sub
jg
mov
aam
mov
push
pop
sub
sub
out
xchg
mov
or
jnp
push
out
mov
inc
aad
jno
push
adc
mov
dec
dec
inc
mov
fptan
loopne
negl
test
dec
pop
cmp
or
jle
cwtl
cs
sbb
or
icebp
mov
sub
rorl
mov
test
xchg
pop
stc
xchg
lods
insb
sbb
aas
mov
mov
mov
mov
fstpl
xor
movsb
jae
mov
mov
inc
inc
adc
mov
dec
loop
xor
imul
cmp
imul
sbb
subb
mov
pop
ficoms
lods
sti
dec
iret
gs
sub
scas
push
ds
or
push
sbb
andb
mov
xchg
or
ja
push
arpl
icebp
pcmpgtd
sbb
loop
cwtl
dec
push
orb
and
cmpsb
sub
mov
xchg
into
and
push
adcb
push
sub
mov
in
push
pop
daa
push
icebp
add
sub
sub
push
jae
adc
sbb
lahf
imul
cmp
lea
les
je
or
into
fisubrl
fs
fisubrl
sub
mov
mov
mov
jg
push
sbbb
daa
push
je
add
jecxz
int3
shll
leave
int
subl
jno
in
mov
lret
jnp
stc
mov
ljmp
mov
mov
push
repnz
jne
jo
sbb
push
cmc
lods
into
mov
inc
shlb
xor
cmp
insl
jb
mov
mov
inc
fucomip
clc
aas
in
mov
mov
sub
scas
dec
out
rorl
aaa
insl
lods
jmp
pop
xchg
popf
clc
adc
dec
dec
cmp
pop
shrb
cmp
sbb
mov
loope
push
outsb
lcall
xlat
adc
hlt
ja
xchg
cmpb
out
xor
xlat
hlt
inc
mov
sub
jnp
sub
femms
mov
stc
push
or
jbe
jmp
sbbb
fninit
and
daa
jmp
jg
insb
push
pusha
push
jnp
mov
pop
idivb
push
lods
popa
sbb
cmpsb
jnp
adc
sbb
popa
fdivl
mov
jp
jnp
sti
inc
sub
inc
sbb
and
jb
mov
ljmp
cmp
pop
inc
xor
xchg
es
dec
cmpsb
hlt
mov
lods
mov
test
scas
test
imul
int
jp
stos
in
mov
mov
jo
mov
ja
sbb
jno
add
sbbl
jns
mov
push
dec
cltd
sbb
xchg
adc
mov
fsubrs
jns
pop
dec
xchg
push
adc
rcrl
push
je
xchg
lcall
mov
notb
inc
int
mov
pop
loop
sbb
sbb
cmpsl
cmp
add
sbb
daa
add
out
jl
inc
dec
icebp
dec
xchg
ss
jns
ss
shlb
jo
mov
jae
scas
push
cmp
fdivrs
shll
int3
pushf
fwait
mov
in
and
sbb
xchg
jne
adc
iret
movsl
cmpsb
jns
push
repz
mov
add
or
pop
outsb
stc
sar
push
das
psubq
fimull
stc
and
cwtl
xchg
not
imul
ljmp
mov
adc
movl
lahf
dec
pop
pop
mov
daa
ret
mov
daa
inc
addr16
pusha
pop
int3
xchg
nop
ljmp
mov
inc
pop
sbb
push
int
inc
cmp
leave
jmp
rorl
mov
xchg
into
lcall
mov
inc
jg
in
adc
scas
sbbl
loopne
fs
mov
clc
push
sbb
and
mov
addb
inc
dec
mov
insl
dec
fildll
sbb
mov
cmc
shlb
call
test
js
dec
mov
ds
push
jne
call
adc
clc
and
inc
movsb
repnz
movsl
movsl
inc
mov
data16
leave
mov
adc
adc
jno
xchg
adc
dec
sar
out
outsb
test
icebp
sahf
enter
mov
fidivs
pop
lock
daa
mov
push
loop
gs
shlb
sbb
push
xlat
stc
movsl
lahf
xor
pop
hlt
mov
pop
es
pop
jo
adc
inc
xor
stc
orl
xor
pusha
adc
daa
dec
incl
lods
sub
ds
pop
adc
jg
inc
jle
jbe
pop
adcl
hlt
ret
lahf
lcall
movsl
jo
popa
lods
or
add
mov
ja
lcall
divb
cs
rolb
mulb
fsts
xlat
sbb
sub
scas
hlt
sub
cld
xchg
jbe
sub
or
xchg
cmp
ret
mov
rep
cmp
out
lods
cltd
jb
mov
jle
hlt
lret
movsb
mov
lds
inc
dec
in
mov
insl
ja
mov
add
pop
inc
or
outsb
aad
dec
dec
cltd
testl
lret
cmc
lahf
dec
in
incb
and
mov
ror
jbe
repnz
popf
lock
add
ret
outsl
aaa
cmp
out
hlt
and
int3
cmpsb
lock
push
nop
lock
add
xchg
xor
inc
jle
stos
icebp
out
dec
lcall
sub
xchg
stos
fsubrs
bswap
sbb
sub
jmp
cmpsb
scas
dec
popa
cmp
jno
jbe
aam
cld
or
mov
insl
addr16
aam
jo
rolb
lret
jmp
jns
xchg
rclb
lods
lds
push
sti
daa
jb
mov
test
mov
pushf
and
push
push
dec
xchg
push
sahf
in
stos
push
aas
dec
repz
pusha
ss
cmpsl
and
jecxz
stos
cmp
cmp
test
lods
scas
jl
cltd
pop
dec
cmp
clc
pop
hlt
jmp
sbb
out
inc
out
pop
push
lea
cltd
gs
xchg
pop
in
sbb
jne
and
xlat
xchg
add
xchg
add
jmp
ret
lahf
nop
push
xor
sarb
add
and
fidivl
inc
or
jmp
or
in
ds
push
or
adc
testl
fstps
movsl
movsb
jne
inc
mov
subl
jg
imul
in
repnz
jecxz
es
pop
push
cmp
lods
inc
xchg
push
bnd
mov
push
fstpl
cmp
mov
dec
adc
mov
mov
jl,pt
imulb
jmp
lock
lods
and
adc
lods
lcall
out
inc
movsl
jbe
fwait
add
fs
sbb
jge
shlb
rcl
insb
xchg
fcomip
lret
dec
jge
push
scas
loop
push
jo
lock
mov
mov
jge
imul
std
popa
fdivrl
jae
xor
gs
rorl
lods
rcrl
jb
cmp
rcll
or
jne
sbb
inc
ret
out
jnp
into
shrl
push
jne
mov
xor
in
inc
in
xchg
pop
and
mov
insl
cmp
loop
cmp
jle
cmp
ret
or
jecxz
adc
xchg
jb
outsl
stos
inc
add
jmp
xor
stc
arpl
pop
mov
scas
pop
shll
jb
mov
into
repz
jmp
cmpsl
mov
and
xchg
adc
push
out
or
leave
sub
push
pop
cli
and
movsb
sub
pop
in
das
loop
cmp
pop
mov
rcrb
cmp
imul
insl
loopne
scas
mov
push
repnz
cmp
xchg
data16
cmp
dec
jecxz
cld
xchg
testb
mov
or
das
mov
jns
ja
stos
or
imul
xchg
dec
xorb
mov
nop
insb
dec
or
mov
xchg
jo
shlb
ret
mov
imul
mov
sub
ret
add
scas
jg
sub
push
decb
fs
cmp
and
daa
mov
cmp
jae
cmpl
and
dec
and
jns
sub
xchg
jns
sub
fbstp
mov
xor
les
clc
adc
pop
lahf
jmp
jecxz
sti
sbb
test
test
mov
mov
pop
cmc
push
aam
cli
fnstenv
mov
jg
cmp
pop
dec
popfw
cmp
je
dec
nop
cld
pop
sub
xlat
fldt
push
add
sbbl
bnd
mov
push
or
scas
xchg
sbb
mov
jecxz
mov
mov
cmpsb
cmp
lahf
mov
aaa
stc
xor
inc
push
adc
mov
xchg
mov
mov
xchg
or
xchg
pop
inc
push
outsb
scas
xchg
sbb
int3
sub
push
push
ljmp
jno
jecxz
sti
es
mov
test
or
sub
fidivrl
ds
push
pushf
scas
dec
inc
lds
je
sbbb
xchg
sti
push
adc
fadds
jl
mov
inc
sti
push
inc
xlat
sbbb
and
ret
xlat
fiaddl
aas
ja
lock
xchg
movb
lea
jle
lods
inc
int
push
jmp
lock
movsb
pop
dec
out
inc
mov
adc
adc
data16
mov
stc
sbbl
mov
add
jns
sub
inc
sub
jbe
dec
fsubrs
jb
pop
jno
in
fidivs
and
movl
add
aas
inc
mov
fsubrl
out
sbb
out
adc
xor
pop
hlt
mov
add
mov
das
inc
inc
mov
mov
sarl
pop
mov
xchg
push
jae
dec
dec
push
lret
xchg
inc
mov
push
xor
push
jno
xor
cwtl
adcl
out
jno
or
int
daa
nop
mov
mov
lahf
mov
jle
shlb
mov
adc
das
or
and
mov
pop
aaa
inc
push
jns
jmp
pushf
xor
mov
icebp
sub
jecxz
clc
pop
cmp
cwtl
sub
push
dec
sti
and
movsb
testl
xchg
cs
sub
lock
jne
xchg
mov
cmp
out
jb
push
movsl
movq
repz
mov
jbe
mov
mov
jbe
insl
imul
mov
or
or
mov
icebp
pop
or
imul
pushf
imul
or
lea
pop
movsb
xchg
mov
jne
les
imul
fucomi
dec
mov
outsl
in
sbb
lods
sbb
dec
out
pop
adc
inc
fs
mov
popa
loope
dec
mov
fnstcw
rcrl
sbb
in
sbb
ficompl
xor
or
pop
popa
outsl
add
ss
fldt
xchg
sub
hlt
cmpsb
lods
pop
popa
movsl
xchg
sub
repz
pop
mov
lods
add
inc
fcompl
mov
jo
and
adc
es
test
fnstenv
jno
arpl
notl
bound
pop
mov
or
leave
repz
cmp
adc
repz
mov
inc
addr16
jmp
data16
addr16
out
ss
mov
mov
out
imul
shlb
std
push
mov
or
or
aaa
ljmp
call
lea
scas
push
jle
pusha
jg
xchg
movsb
popa
and
and
xor
inc
and
aas
adc
lds
shll
xor
or
cmpsl
inc
pop
test
push
bound
ja
push
and
es
and
or
push
push
pop
out
popf
sbb
xor
mov
fisubrs
sub
or
adc
xchg
mov
sbb
int3
jg
jne,pt
pop
sbb
sbb
pop
shlb
cld
push
add
stos
jne
pop
pop
movl
in
add
or
cmp
or
xor
lcall
xchg
outsb
jo
xchg
jo
inc
and
lods
in
lods
push
pusha
into
xor
jl
pop
cwtl
lret
jae
sarl
int3
mov
test
out
and
out
sub
sub
jns
clc
imul
rep
adc
pop
inc
mov
cltd
mov
lock
aaa
lcall
loopne
mov
lcall
xchg
pop
xlat
imul
lock
lods
jb
cli
mov
xchg
push
movsl
out
insb
pop
add
mov
rcll
fdivp
in
outsb
inc
ficomps
das
fisubs
in
sbb
cmp
cmp
sti
push
jg
ja
jle
call
and
es
push
loope
mov
cmp
xor
out
xchg
jl
cmpsb
orl
sbbl
and
flds
imul
movsb
jns
ljmp
fidivs
mov
mov
aam
arpl
add
or
sbb
adc
lret
cld
mov
test
sub
or
daa
stos
jmp
push
pop
jge
or
and
lea
jp
pusha
ss
xor
mov
push
or
pop
lcall
jmp
out
fadd
daa
cmpb
test
or
das
outsb
jl
mov
mov
fwait
mov
imul
mov
aas
push
xchg
add
mov
mov
pop
mov
sbb
sub
cmp
outsb
cmp
sub
inc
cltd
fwait
outsb
neg
popl
lds
and
out
mov
mov
adcl
cld
xchg
sub
cli
insl
jne
cmp
mov
xchg
mov
push
sbb
or
das
sub
lea
mov
xorl
icebp
cmp
mov
loope
mov
lahf
add
loope
push
pop
xchg
dec
cmp
jmp
xor
lahf
cld
mov
push
mov
mov
mov
lea
mov
inc
mov
test
daa
xor
push
scas
and
or
mov
movsb
cli
popa
call
popl
mov
sbb
leave
dec
loop
dec
pop
pop
movsb
scas
imul
sub
xchg
add
cmc
fsts
and
mov
xor
out
out
mov
mov
lar
lret
in
repz
cli
adc
sub
pop
mov
dec
ja
jge
je
int
and
mov
imul
and
inc
clc
xchg
pop
mov
mov
push
xchg
stos
addb
into
inc
sbb
shl
pop
mov
sti
and
loop
inc
mull
clc
dec
mov
cmp
and
les
dec
xchg
mov
cmp
cwtl
imul
hlt
mov
loopne
stos
lcall
shll
jle
xchg
lds
movsl
sti
mov
adc
aam
adc
xchg
add
sbb
pop
fucomp
cmp
iret
dec
call
push
jo
fwait
into
gs
push
out
xchg
arpl
adcb
or
out
nop
cmpsb
xchg
jnp
sub
cli
pop
mov
cld
aaa
and
and
fistpl
mov
sub
jno
jl
mov
fbstp
gs
fnstsw
sbb
popa
jno
sti
inc
js
cmc
push
out
rorl
add
cmpsl
lds
sub
test
ret
cmp
hlt
test
pop
jb
pop
pop
shll
repz
hlt
pop
pop
ljmp
push
fs
repz
out
and
jg
nop
dec
and
cmp
jb
push
fcmovne
addb
lahf
rcrb
rorl
xchg
xchg
mov
mov
or
mov
aas
sub
mov
or
adc
cmpsl
fs
in
dec
imul
loopne
popf
adc
enter
cmc
push
add
mov
xchg
fildl
jns
testb
dec
and
ror
test
gs
and
jae
test
sbb
addr16
mov
shl
and
or
add
movsl
sbb
pop
iret
mov
add
dec
mov
in
sbb
rcl
nop
ja
sbb
pop
sbb
shr
jl
sarl
adc
jns
inc
stos
pop
sbb
add
cmp
dec
and
scas
scas
loope
sub
stos
inc
mul
ja
inc
pop
lret
insb
jne
aam
fnstcw
outsl
stos
mov
add
mov
or
cs
mov
sub
jmp
cs
jo
cmp
out
sahf
xchg
xor
sahf
dec
inc
inc
pop
icebp
jo
inc
aad
xor
push
popf
and
sahf
xor
imull
mov
neg
mov
cld
and
pop
lods
cld
lcall
inc
or
fcmovne
lds
inc
mov
arpl
outsl
daa
pop
stos
out
test
les
mov
xchg
xchg
call
sahf
push
roll
lcall
in
nop
mov
rcll
xor
stc
gs
sbb
movsl
cmc
adc
mov
ror
or
mov
lods
push
mov
pop
sbb
shll
ja
lods
pop
sbb
mov
dec
imul
aam
sub
add
insl
ss
daa
sub
sbb
pop
mov
imul
mov
cmpsl
movsb
pop
xchg
push
scas
inc
mov
movsl
xor
les
and
scas
xchg
inc
cltd
ficoms
sti
sub
aaa
incl
out
and
push
push
lods
lds
mov
jbe
andps
add
fwait
test
es
cld
pushf
cli
cmp
cs
orb
cmpsl
negb
imul
test
push
sub
xor
bound
jecxz,pn
data16
mov
adc
data16
pusha
testl
add
scas
cmp
ds
mov
aad
in
push
cs
fucomp
lret
cltd
fimull
sbb
dec
cmp
xchg
mov
dec
ret
inc
cmp
ja
push
push
mov
lods
outsl
jp
ja
xchg
shlb
inc
ret
dec
jecxz
adc
or
sti
cmc
cwtl
and
adc
jnp
bound
loopne
stos
and
pop
data16
pop
subl
jns
or
jno
icebp
mov
test
rorb
arpl
loop
mov
or
cmp
clc
sub
bound
dec
pushf
mov
add
push
lods
and
das
sub
mov
pop
outsl
add
cli
push
sub
mov
push
cmp
jae
xchg
dec
testl
popf
rcl
push
test
dec
lods
decb
setle
mov
jecxz
xchg
sahf
loope
jle
fidivrl
call
jge
dec
push
push
subb
popf
rcr
pop
sti
and
dec
iret
repz
xchg
ja
subl
xchg
jmp
cmp
lock
ret
mov
jno
call
mov
cmp
mov
pop
push
fsubl
inc
ss
lret
xchg
jb
loop
lahf
xor
in
popf
lea
ljmp
add
jnp
arpl
sub
mov
sub
ret
dec
xchg
lret
xor
mov
cltd
add
enter
add
cmc
mov
mov
rorb
adc
sarl
movsb
dec
push
js
mov
pminub
addr16
inc
sar
cmpsb
xor
inc
jge
in
aaa
movsb
lcall
fwait
dec
push
loopne
lea
mov
imul
jp
rol
push
dec
inc
sub
mov
insl
sub
movsl
jl
les
enter
xor
push
sub
cmp
fwait
pop
mov
add
adc
insb
mov
jg
lods
fldt
cmp
lahf
arpl
int
loope
ja
add
fwait
cmpsl
add
jnp
pop
sub
dec
adc
adc
dec
imul
mov
aam
pop
sbb
aaa
xchg
push
cmpsb
cmp
pusha
push
pop
sti
fwait
daa
pop
idivb
xchg
xor
scas
or
push
arpl
popa
shll
dec
cltd
and
arpl
mov
imul
ficoml
xlat
lods
cmp
lods
adc
dec
shrl
mov
adc
lret
sub
test
jbe
outsl
negl
dec
movsl
sub
mov
inc
aas
stos
jo
and
mov
fst
out
or
mov
mov
push
jmp
punpcklbw
or
roll
mov
outsb
pop
cltd
lcall
fsubrl
sbb
mov
mov
test
enter
inc
mov
arpl
xchg
rcrb
or
pop
in
mov
jb
push
add
repz
rcrb
sub
xor
mov
jmp
xor
push
and
pop
inc
push
lret
mov
jecxz
xor
les
jecxz
adc
fistps
lret
cmp
pop
dec
dec
insl
sbb
scas
pop
das
lahf
add
sub
sbb
clc
lods
mov
sbb
mov
aas
push
lea
dec
rorb
xchg
sbb
lea
mov
pop
cmp
jle
fisubrs
inc
dec
add
jge
subl
xchg
stos
shlb
mov
shll
dec
cwtl
sbb
in
mov
loope
out
add
inc
dec
pop
scas
xchg
pusha
std
mov
flds
sahf
mov
bndstx
push
pop
sbb
pop
jno
push
xor
and
or
sbb
sbb
mov
movsl
inc
mov
stc
xchg
sub
inc
adc
push
dec
pop
orb
xchg
add
iret
shlb
xchg
xchg
aas
xchg
cmpsl
daa
lods
adc
jecxz
mov
jno
mov
sub
repz
fisttpl
xor
lahf
ret
dec
out
pop
in
movsb
in
jge
mov
cwtl
mov
lcall
sarb
outsb
jp
shrb
inc
inc
dec
lock
dec
pmullw
pop
mov
leave
mov
rolb
dec
mov
and
cmp
inc
iret
cmpsb
inc
in
jo
add
xor
out
mov
js
aad
jp
add
loope
and
adc
bound
xor
mov
stos
push
sbb
sbb
cmp
pop
xor
add
cmp
jno
cwtl
sub
rorb
pop
cmc
psubsb
inc
mov
adc
sbb
lock
cmp
jae
dec
fwait
popf
aad
in
dec
data16
mov
jp
sbb
jp
daa
cmp
stos
cltd
pop
push
push
xor
mov
jne
push
in
pop
mov
je
aad
mov
xor
xor
ds
mov
jge
xor
test
in
stc
dec
lods
inc
fstpl
cmp
ror
adc
lcall
pushf
add
jae
xorl
outsb
enter
pop
inc
and
repz
std
inc
cltd
sbb
ret
push
mov
xchg
sub
shl
sub
bound
lods
nop
fs
pop
sbb
push
sarl
out
xchg
mov
leave
push
sub
out
inc
sbb
mov
push
leave
mov
ss
push
push
or
or
add
cmc
pop
test
dec
pop
add
xchg
shrb
push
adc
lock
push
std
and
ja
loope
fldl
std
je
lods
ljmp
pushf
sub
inc
sbb
xchg
jnp
cli
fmulp
adc
pop
in
std
pop
dec
out
es
dec
dec
jmp
push
add
dec
dec
lds
cmp
out
pop
pop
jecxz
cltd
negb
and
out
mov
in
test
inc
xchg
dec
mov
jnp
adc
mov
xor
leave
mov
fsubrp
sub
mov
es
shl
pop
out
push
test
stc
or
sub
enter
or
sub
xchg
je
inc
sub
push
inc
enter
insb
cmp
adc
shlb
jo
adc
mov
cmpsw
mov
pop
mov
inc
in
jo
shrb
insb
cli
outsb
inc
jge
js
rcrl
xor
jbe
cltd
int
xlat
das
cmp
add
sbb
iret
fldt
add
popa
popa
clc
xchg
mov
jg
insl
jne
test
mov
daa
mov
mov
in
mov
sub
dec
pop
fstps
scas
push
inc
and
fisubl
lods
gs
sub
jns
rep
repz
aad
and
adc
pusha
lods
decb
mov
or
mov
add
xchg
sarb
imul
jecxz
or
add
jecxz
in
lahf
adc
dec
inc
lea
cld
lret
push
inc
leave
subl
imul
jnp
std
inc
add
jne
or
int
xlat
mov
push
xor
mov
mov
aam
rol
pop
add
in
jns
in
popf
pushf
lret
fnstcw
mov
push
xchg
lcall
mov
fcmovnb
into
nop
clc
adcb
mov
dec
fdecstp
test
daa
mov
cs
mov
add
arpl
outsl
push
cmp
pusha
mov
xchg
fwait
and
jo
in
add
push
jb
lahf
mov
mov
push
stc
popa
sub
push
or
shr
jo
data16
and
dec
lds
pop
fwait
sbb
sbb
in
xor
xor
jnp
jmp
sbb
lcall
imul
push
fwait
pop
shrl
std
outsl
jmp
xchg
push
xlat
jb
xor
popa
scas
clc
enter
add
dec
pop
mov
lods
jo
jp
mov
add
push
add
sahf
ss
push
pop
test
jne
jmp
ret
pop
push
in
stc
insb
add
or
lods
ljmp
scas
out
int
bound
push
fwait
and
test
inc
movsl
cwtl
pop
and
sbb
xchg
ja
outsb
iret
pushf
fisubs
xor
aam
call
jo
sub
cli
inc
pop
fdivs
mov
pop
xchg
daa
fwait
call
jbe
pop
addr16
xchg
xor
sbb
xchg
adc
adc
pop
sahf
mov
loop
xchg
and
cmp
and
shrb
test
mov
jnp
mov
scas
das
adc
push
inc
push
sbb
aam
into
mov
insl
jge
mov
mov
mov
pcmpgtw
xchg
pop
insl
cmc
std
and
je
subb
iret
movl
sbb
jae
cmp
sub
lret
cmp
lahf
sub
dec
aam
adc
mov
jle
sbb
xchg
xlat
jmp
dec
fldenv
arpl
in
in
cmp
xor
xor
add
inc
mov
jmp
cmp
and
mov
mov
leave
adc
mov
dec
sti
in
push
push
dec
pushaw
xlat
sbb
pushl
sub
pop
xor
shl
xor
ror
jno
mov
jecxz
clc
inc
inc
mov
xorl
or
xchg
movsb
mov
cltd
popw
jns
and
mov
fidivrs
add
stos
dec
fdivl
mov
ret
popf
inc
in
ljmp
test
les
int3
jge
mov
and
dec
mov
int3
sub
outsl
cmp
add
daa
push
mov
les
lds
cmp
je
in
dec
xchg
out
mov
or
jnp
stos
inc
sti
stos
fwait
scas
mulb
xor
or
enter
imul
jl
jbe
push
push
cmc
xchg
or
cmpsl
dec
push
push
mov
je
loope
push
daa
test
xchg
inc
add
cmp
jmp
adc
frstor
popa
xchg
xor
dec
mov
test
inc
fsubrl
pusha
add
mov
sbb
stos
or
or
loope
mov
cmpsb
jae
inc
xlat
fiadds
or
jae
lret
inc
mov
test
movsl
mov
sarb
fwait
sub
mov
lds
xlat
shl
dec
mov
rcl
imul
dec
lret
cltd
bnd
in
fisubrs
ds
sbb
jge
jg
insb
lods
testb
sub
mov
daa
sub
push
mov
shl
mov
hlt
stc
mov
sbb
fisubrs
or
xchg
jge
adc
push
ret
and
out
cmp
push
jge
daa
rcl
icebp
pop
in
push
mov
out
int
xchg
ljmp
jge
xchg
mov
arpl
test
add
jae
inc
fcmovu
in
push
ficoml
sub
push
push
ret
daa
jb
pusha
jmp
fucomp
mov
pop
push
mov
icebp
std
inc
fwait
lods
inc
and
dec
movsl
fldt
mov
rcr
jbe
lea
std
inc
add
pusha
and
mov
in
inc
push
bound
lods
ljmp
es
cld
roll
dec
imul
int
xchg
pushl
xor
pop
daa
test
mov
sbb
pop
mov
xor
inc
rcrb
dec
add
dec
loope
cmp
iret
push
or
dec
sbb
mov
jns
pop
xlat
adc
push
xor
gs
js
xor
repz
pop
push
loope
and
aas
sub
add
loop
repz
test
stos
das
out
cmpsl
test
mov
hlt
pop
loope
push
jecxz
les
ss
or
into
mov
es
adc
xor
aam
sbb
popf
xor
mov
mov
or
and
push
mov
sti
jg
sub
ret
sbb
xor
sbb
mov
add
dec
mov
push
jno
insl
cmp
lret
loopne
test
das
mov
es
jl
xor
es
int3
adc
int
enter
pop
insb
cmp
jb
mov
lea
push
jle
pop
sub
test
stc
fsts
sub
mov
mov
and
lret
mov
pop
sti
inc
rorl
imul
aam
movb
mov
cmpsl
std
or
lock
aad
push
icebp
pop
sahf
rolb
sub
sbbb
loope
adc
pop
push
pop
roll
pop
mov
jo
fimull
push
int
xor
mov
pushf
ret
jp
jl
adc
test
mov
add
inc
adc
mov
idivl
pop
scas
movsb
mov
adc
ss
jno
stos
arpl
bnd
mov
pop
fisttps
add
adcb
hlt
mulb
aad
cs
dec
mulb
sub
pop
jmp
cmc
icebp
cmpsb
cli
add
mov
loopne
scas
mov
sbb
clc
adc
imul
aam
cmp
xchg
pop
mov
add
pop
xor
xor
pop
mov
and
fistl
aaa
mov
imul
jns
iret
ljmp
cwtl
push
sbb
popf
pusha
inc
dec
test
call
js
ljmp
mov
sarb
test
push
lret
fbld
test
push
push
jb
aas
arpl
xor
push
or
movsb
data16
subb
dec
adc
shrb
cs
lret
jp
mov
sbb
push
jmp
mov
ret
cmpb
outsb
pop
aam
or
pop
lea
pop
pushf
ds
cmp
pop
mov
mov
add
and
xchg
sub
push
sbb
test
pop
stos
imul
push
mov
dec
ss
push
dec
jnp
pushf
xchg
cltd
pusha
or
push
out
sub
push
fdivs
insl
sbb
jne
push
cmpsl
pop
lods
sub
or
je
cltd
cmpsb
movb
cli
sub
inc
das
popf
cmpb
ljmp
mov
mov
or
cmpb
scas
xchg
sbb
ljmp
sbb
cs
popa
xor
dec
ja
cs
push
push
dec
cwtl
mov
pop
popf
jo
mov
lret
popa
jnp
iret
xchg
in
sbb
and
lcall
psubb
xor
aad
mov
sahf
push
bound
push
inc
push
xchg
jb
cmp
clc
push
pushf
pop
cmp
adc
hlt
push
dec
arpl
test
push
xor
loop
sub
mov
xchg
lock
jnp
movsl
push
movsb
jle
decb
mov
addl
mov
or
inc
les
and
cmovge
daa
xlat
loop
arpl
test
shrb
popf
repz
adc
dec
cmp
mov
pop
sbb
cmp
pushw
fsubrl
jle
jnp
add
mov
sub
cmc
mov
jmp
push
adc
or
fisubrs
cmp
mov
xchg
inc
ret
lcall
mov
push
push
mov
jle
das
mov
adc
and
shrb
jg
mov
lret
jge
ja
cmc
mov
mov
movsl
mov
daa
jae
shlb
clc
idivl
cmpsl
xchg
inc
arpl
movsl
movsl
pusha
dec
xor
pushf
jo
rol
mov
rolb
ja
jmp
out
pop
into
aaa
push
mov
ljmp
mov
fimull
in
fiadds
cmp
inc
int
clc
arpl
movsl
xchg
dec
fbstp
imul
mov
xor
cmpsb
mov
ja
jmp
rorl
out
dec
out
jno
xchg
sub
insl
sub
xor
and
jns
cmc
xor
into
xor
ss
mov
mov
mov
mov
mov
nop
jle
lcall
mov
sub
stos
sbb
inc
aas
push
mov
gs
adc
jno
push
push
out
inc
pop
xchg
cmp
ds
mov
pop
push
sahf
jg
das
lds
adc
pusha
xlat
cmc
cmp
pop
jns
or
sub
in
sbbl
out
xchg
mov
xchg
push
sbb
jecxz
mov
or
jge
fdivp
mov
test
inc
cli
in
push
popf
mov
push
sahf
pusha
cmpb
pop
jp
mov
test
dec
fs
imul
jns
test
dec
lcall
les
add
daa
push
aaa
testl
ret
dec
in
dec
lods
shll
shr
jo
lods
xor
xchg
test
in
mov
cmpsl
arpl
loopne
push
adc
enter
shr
mov
stos
inc
ljmp
sbbb
and
xchg
xor
insl
xor
repnz
sarl
jbe
mov
and
mov
bndstx
hlt
ljmp
movsl
adc
sbbb
aaa
jbe
inc
mov
mov
xchg
sub
icebp
pop
sbb
das
inc
dec
pop
loope
mov
dec
mov
dec
repz
sbb
in
int3
sub
test
xchg
lret
rcrl
cmp
and
lods
iret
pop
sbb
andb
xchg
push
cmp
in
push
cli
xor
nop
add
mov
cmp
neg
sbb
lahf
push
and
xchg
cwtl
subb
nop
shlb
idivb
push
lret
jno
jno
pop
icebp
or
decl
pop
xchg
mov
sub
push
pop
repz
shrl
push
adc
test
and
stos
mov
pushf
jb
into
out
iret
xor
jecxz
leavew
test
popa
and
out
lret
jmp
jg
xchg
stos
jo
popa
sbb
mov
enter
imul
stc
stos
lds
sub
jnp
mov
imul
sub
mov
jecxz
loop
stc
and
leave
sbb
xor
jo
pop
popf
aad
inc
nop
in
nop
push
inc
shlb
stos
xlat
out
orb
push
add
and
xchg
add
clc
mov
cmp
or
mov
xor
inc
or
sub
xchg
test
popa
mov
inc
sti
es
push
inc
inc
lea
lock
cs
je
inc
pop
mov
mov
int3
fidivl
push
sbbb
push
mov
notl
jns
std
jmp
shrl
jecxz
mov
inc
adc
mov
push
scas
iret
xorl
idivl
mov
and
fwait
push
test
ss
xchg
scas
sbb
nop
test
bound
arpl
mov
push
xor
and
call
mov
mov
test
add
xlat
lods
outsl
pop
xor
jmp
xchg
and
inc
ret
in
add
xchg
in
mov
lods
mov
shll
aad
dec
and
daa
sahf
arpl
mov
cmp
pop
dec
sbb
mov
daa
sahf
mov
cld
push
dec
idiv
inc
sbb
fldenv
push
or
aam
mov
ja
lret
insl
sti
push
sbb
mov
repnz
scas
or
pop
in
popf
sbbb
mov
inc
lret
and
jbe
pop
mov
inc
movsb
inc
push
sahf
inc
mov
pushf
scas
sbbl
and
add
push
fmulp
add
insb
jle
cmp
dec
ror
push
push
ljmp
sub
mov
sub
sbb
inc
cmc
nop
das
rcr
call
fsubrl
push
fstps
cmp
imul
mov
movsl
je
xchg
popa
call
cmc
pop
jmp
jbe
xchg
in
imul
lcall
pop
mov
lds
pop
dec
in
iret
adc
in
xchg
lret
xchg
xor
cs
mov
jmp
mov
arpl
sahf
test
insl
push
sub
les
xchg
jnp
pop
dec
adc
jle
dec
iret
xchg
dec
xchg
mov
loop
dec
or
adc
pop
xlat
adc
sub
lcall
arpl
cmpsb
repz
outsl
push
fmuls
inc
dec
cmpsb
lock
vandnps
icebp
fstpt
ret
lock
mov
xor
movsl
icebp
xorb
inc
or
loopne
or
out
mov
cmp
dec
out
mov
int3
aad
dec
neg
dec
iret
push
sbb
sahf
lret
inc
out
xchg
mov
imul
popf
sbb
fs
sarb
xchg
enter
mov
aaa
jo
clc
cmp
xlat
popa
and
stos
je
notl
mov
xor
data16
sub
add
nop
test
rclb
negb
xor
add
popf
xor
js
cli
ss
dec
les
test
hlt
dec
mov
cs
xor
push
js
cmp
cmpsb
insb
lods
inc
jp
scas
push
cs
fwait
xor
pop
stc
or
jns
and
xchg
mov
jp
cmp
in
sarb
push
cmpsl
into
insb
sti
aad
jecxz
cli
fsubs
jno
bound
jae
subl
pop
out
test
or
test
repnz
bound
pop
in
pop
out
and
hlt
mov
popf
fs
pop
outsb
sub
inc
in
fists
or
pop
inc
stos
and
or
out
dec
lea
adc
aam
fs
jl
inc
mov
jae
sbb
imul
negl
fcoml
jno
pop
shll
repnz
shrb
xchg
movsb
pop
adc
scas
jmp
push
test
and
cmp
das
mov
xchg
dec
and
xor
push
in
popa
inc
mov
sbb
jae
xchg
dec
insl
sub
fstpl
in
sti
cmp
imull
jp
jl
push
das
add
xchg
imul
cmp
dec
mov
push
enter
push
rorl
orb
jno
out
les
mov
arpl
add
cmp
xor
ja
or
push
cmc
nop
push
fdivrs
mov
std
lods
pop
or
inc
jecxz
adc
lock
enter
and
or
mov
xchg
xchg
cltd
lock
dec
fidivl
jb
cltd
xor
mov
dec
jp
aas
std
jae
cltd
mov
push
push
jns
push
test
enter
js
test
in
jnp
pop
adc
mov
mov
push
jbe
int
in
lcall
mov
into
inc
loope
dec
mov
sbb
scas
popf
mov
jle
shrl
lods
fsubr
popf
jle
hlt
fidivl
push
test
push
lods
subl
je
es
mov
xchg
je
cmp
aam
rolb
mov
loope
push
jle
andb
enter
ljmp
cs
adc
in
inc
mov
push
adc
into
pop
dec
je
and
in
arpl
adc
fstl
sti
fnsave
add
sub
mov
jne
pop
xor
xor
cmp
pop
out
pop
push
xor
popf
ds
jns
lds
pop
dec
dec
or
or
add
lahf
mov
pop
fbstp
pop
rcll
test
mov
pop
adc
fildl
push
mov
in
adc
inc
push
les
jae
xchg
daa
pop
adc
cmpl
popf
mov
cmp
xor
nop
adc
push
lret
sub
fdivrl
and
and
lahf
xor
hlt
cmp
push
ds
push
sbb
ss
test
pop
insb
push
gs
cmp
lods
addr16
aad
mov
lret
add
push
jno
add
adc
stos
out
mov
out
or
mov
fsubrl
cltd
mov
inc
lret
xor
imul
lahf
imul
lea
fimuls
pop
stc
xchg
popa
fdivrl
mov
jb
int
in
stos
cmp
mov
rcr
mov
jecxz
add
jo
push
in
dec
aaa
mov
sbb
add
and
insl
sub
lock
es
adc
mov
fcomps
das
or
jge
shrb
add
fcoml
in
out
xchg
xor
cmp
ljmp
push
mov
push
fsubs
out
pop
cmp
push
jno
fisttpll
mov
adc
test
add
lahf
mov
inc
out
cmpsl
add
push
mov
dec
insl
outsb
jge
out
loopne
inc
add
daa
or
shl
je
fildll
push
jns
sbb
jns
or
dec
call
and
jmp
lea
inc
outsb
mov
enter
rcrl
add
sub
adc
inc
push
pusha
jnp
dec
dec
int3
add
std
push
imul
sub
mov
pop
jns
mov
lahf
sbb
xor
xchg
push
pop
es
cwtl
xor
pop
mov
push
inc
pop
imul
mov
push
mov
fs
cmp
loope
cmp
cmpsl
sub
sbb
jl
mov
mov
scas
aam
sub
or
add
jmp
movsl
test
adc
movsl
xchg
out
sbb
and
xor
and
pop
push
inc
ljmp
out
push
cmpb
sbb
into
mov
test
jbe
jo
xchg
jnp
lret
scas
or
cmp
xchg
mov
push
pop
insb
dec
push
ljmp
call
and
out
mov
mov
sbbb
daa
lcall
cmp
mov
and
sub
jae
imul
cmc
cli
dec
stos
mov
mov
pop
stos
inc
inc
cld
cmp
jmp
movsl
int
sti
mov
pushf
push
movsl
fwait
outsb
inc
xchg
jns
xchg
stos
cmp
insb
leave
sbb
rolb
add
pushf
pop
or
loope
jcxz
mov
or
jns
mov
mov
into
popa
adc
pushf
movsb
daa
cmc
dec
fadd
and
movl
jnp
or
fcmovb
and
cmc
inc
cmc
lret
pop
mov
notl
or
pop
adc
andb
sub
incb
or
out
mov
insl
jbe
movsl
xor
xor
enter
stos
add
shll
mov
fimuls
sbb
mov
mov
aaa
push
ret
mov
mov
pop
cmp
les
loope
outsl
loop
aas
adc
mov
movsb
and
mov
ja
stc
push
inc
sbb
inc
dec
jns
inc
int
fmuls
pop
pop
cmc
and
xchg
pop
lret
add
push
loopne
cmc
inc
cltd
sbb
iret
xchg
mov
lock
addr16
stos
sub
mov
adc
aas
aas
push
rcrl
bound
push
pop
jb
sub
adc
addr16
push
xchg
enter
cmpsb
sbb
add
jne
ret
push
mov
sub
mov
xchg
jae
or
mov
mov
sbb
mov
or
ljmp
dec
lea
push
xor
mov
add
jbe
out
jae
xor
mov
insb
mov
in
lcall
xchg
scas
clc
dec
inc
sbb
popf
sets
jge
imul
push
xlat
je
cmp
movsb
das
or
cmp
push
mov
push
push
dec
dec
addl
daa
ja
push
push
sbb
cmp
add
mov
jae
mov
pop
dec
mov
adcl
bound
jge
sub
or
mov
adc
lods
xlat
daa
dec
cwtl
rolb
enter
ds
int3
repnz
lods
mov
push
int
idivb
in
vmovsd
adc
jmp
push
ljmp
and
mov
out
dec
out
pop
or
enter
cmp
push
and
cmp
insb
sub
sub
daa
pop
dec
mov
add
iret
dec
mov
pushw
sbb
mov
sbb
leave
sub
cmp
mov
frstor
dec
adc
mov
push
mov
sub
or
sti
shl
mov
cwtl
inc
inc
pop
loope
mov
xchg
mov
cmpsb
ljmp
sbb
fimuls
mov
roll
sub
xchg
or
mov
jg
lret
in
testl
popa
inc
dec
mov
pop
dec
insb
pusha
aaa
jnp
pop
mov
mov
mov
mov
andl
mov
sti
scas
fisubrs
sbb
arpl
cwtl
nop
dec
mov
jle
punpcklbw
sbb
aad
cmova
rol
pop
xchg
ss
push
ret
xor
lods
stc
dec
mov
fsubrl
inc
mov
shrl
jle
daa
outsl
mov
fldenv
jge
pop
mov
adc
adc
leave
adc
pop
xor
mov
xor
jbe
inc
push
sbb
sti
sbb
jno
mov
cmpsb
sbb
and
pop
xor
out
dec
loopne
cld
push
ret
iret
lds
faddp
mov
div
into
test
enter
testb
rcl
push
sar
lahf
push
mov
add
shll
dec
mov
in
insb
xorb
pop
jns
movl
xchg
or
in
aad
xchg
fdivrs
shl
rcl
imul
stc
xchg
sub
pop
stc
insb
xchg
stos
mov
mov
movsl
jp
out
mov
xchg
add
aas
addl
cli
cltd
movsb
mov
jge
scas
insb
or
sub
les
adc
and
call
sbb
dec
lea
or
or
out
cmp
jl
mov
jle
lock
inc
xchg
aas
loop
out
loop
sub
pop
fsubs
mov
sbb
pop
stc
insb
fdivl
fcompl
loope
and
push
mov
jns
in
loopne
ret
lcall
sbb
pop
int
jge
mov
dec
fs
cmp
shrl
sbb
cmp
out
mov
mov
roll
fimull
aaa
push
or
and
push
xchg
fadd
sub
pop
test
jae
stos
and
xchg
repz
out
cmp
idiv
push
jmp
mov
lods
or
mov
je
mov
dec
cli
adc
cmp
add
rcrb
aaa
mov
in
insl
pop
add
dec
mov
xor
jns
ret
scas
pop
xchg
adc
add
rorl
xor
and
cli
jbe
aaa
mov
repnz
sbb
movsl
jns
ret
pop
in
fisttpl
add
pop
mov
lret
pop
jge
popa
adc
mov
adc
jae
jl
jg
psubsb
inc
xor
adc
add
shl
notl
xchg
jb
adc
xchg
cs
and
sbb
imul
pop
lods
xor
jbe
loopne
data16
mov
out
lods
insl
hlt
inc
jg
imul
fildl
mov
icebp
jp
out
pop
dec
sti
js
or
add
or
add
xchg
sub
in
jne
push
into
fisttps
adc
into
aam
popa
add
pop
mov
cmc
push
xchg
pop
jp
out
jle
push
pusha
testl
xchg
dec
bound
in
lcall
xchg
adc
mov
mov
int3
lods
and
or
adc
lods
aam
push
idivl
dec
sub
lea
cli
jmp
and
sbb
pop
adc
ss
fiaddl
lds
andb
orl
call
addl
mov
cwtl
jg
lret
push
add
jno
sbb
fwait
ljmp
xchg
pop
stos
cwtl
fdivs
inc
lret
fidivs
cmc
adc
dec
sarl
add
push
add
and
sbb
fwait
xor
adc
and
test
fidivrl
fs
pop
int3
mov
cs
xlat
adc
inc
add
dec
mov
or
stos
jle
leave
es
sub
movsl
xchg
dec
pop
sti
jge
repnz
sbb
cli
jnp
out
and
aad
sub
test
js
push
mov
pop
push
add
in
sti
and
fnstcw
dec
nop
jno
dec
insb
sub
lret
ljmp
test
lock
mov
xlat
jns
mov
lret
add
xchg
sub
popf
dec
jl
cmp
cld
push
in
test
xor
mov
pop
das
movsb
xchg
dec
adc
lret
push
push
mov
in
sbb
loop
dec
pop
das
nop
aam
movsl
mov
push
fs
add
js
inc
inc
cld
xchg
xor
out
xchg
out
mov
scas
mov
adc
push
adc
add
or
sbb
or
or
xchg
mov
push
fwait
jae
and
orb
dec
je
ljmp
mov
add
push
dec
test
mov
mov
sahf
fidivrs
pushf
outsl
call
shr
mov
lcall
jl
xor
push
or
add
mov
gs
xchg
cmpl
add
shrb
push
stos
pop
fs
int3
jne
rcrl
push
es
dec
ja
cmpb
xchg
add
shrb
and
out
loop
fistl
xchg
jns
adc
rcrb
dec
mov
outsl
call
or
orb
or
ja
cltd
test
shrl
mov
repnz
xor
adc
les
pop
lds
push
fsubl
and
pop
push
pop
das
repnz
jb
jge
shll
fadd
add
idiv
test
mov
clc
mov
pop
sbbl
or
cmp
fcmovnbe
ret
sbb
jne
or
jp
sti
pop
addr16
out
pop
fs
je
or
iret
jl
mov
js
xor
pop
or
add
adc
daa
cmp
hlt
popf
fdivrl
out
out
jb
cwtl
jmp
dec
add
movsb
inc
jl
mov
popa
dec
mov
call
sbb
lahf
div
lods
dec
rcrb
ss
push
jl
pop
mov
aas
sbb
dec
dec
mov
shl
pop
or
and
mov
enter
or
or
outsb
enter
push
outsb
fnstenv
dec
sbb
movsb
movsb
int3
cmc
mov
cli
scas
push
mov
xchg
jno
ds
imul
xchg
lahf
lds
int
nop
push
inc
in
lret
push
call
jne
sarl
cmc
mov
test
inc
subb
das
pop
jg
cmp
jns
push
in
outsl
jnp
push
fcmovu
les
sub
xor
mov
cs
fdivl
jno
push
sub
mov
jmp
aaa
mov
lret
xor
mov
mov
fstpt
xchg
js
iret
cmp
cmpsb
sbb
rcrl
adc
les
mov
pop
test
aas
xchg
nop
out
shll
push
lcall
push
jmp
or
jb
sbb
sbb
sbb
jmp
push
repnz
fwait
mov
jmp
add
leave
push
and
and
mov
xchg
ljmp
imul
inc
jns
out
ret
dec
inc
push
out
mov
nop
xchg
pop
jae
push
in
inc
lds
or
pop
xor
push
sbb
fidivl
stc
call
popf
add
jae
in
push
in
add
das
adc
mov
push
mov
into
enter
mov
sub
pop
out
jb
out
and
adc
nop
adc
pop
mov
mov
cmp
sub
sbbb
or
mov
leave
fcmovnu
clc
lcall
decl
loope
inc
repnz
jbe
test
out
inc
push
inc
mov
mov
hlt
pop
pop
jno
lret
mov
dec
jmp
mov
frstor
mov
pop
and
pop
push
mov
xchg
or
xchg
mov
lret
push
push
sysret
xchg
in
mov
mov
daa
pop
lds
int3
or
fs
mov
imul
dec
cmp
jecxz
mov
push
repz
sbb
jne
mov
cld
xchg
xchg
pop
mov
jnp
test
and
sub
or
dec
aas
fwait
sarl
rcll
in
mov
inc
les
or
push
mov
fadd
mov
sbb
scas
js
dec
pop
subb
cmp
xchg
or
and
hlt
sbb
pop
ret
out
bnd
mov
hlt
fwait
mov
sbb
aam
pop
cld
xchg
sub
aas
ss
add
les
das
mov
and
push
jecxz
out
xchg
rorl
jns
xor
adc
out
mov
cmpsl
stos
inc
add
ljmp
xlat
add
rclb
pop
fwait
repnz
jns
xchg
push
loope
int
mov
aas
test
or
pop
daa
or
sub
xchg
leave
xchg
mov
or
push
push
cwtl
aad
cwtl
or
mov
jp
rorb
andb
aas
jp
pop
lock
mov
mov
adc
or
lock
and
ret
outsl
push
push
pop
sahf
les
mov
sbb
clc
sbb
adc
icebp
sub
ss
icebp
jecxz
arpl
lods
xchg
cli
and
and
int3
fidivs
loopne
rorl
stos
push
xor
rorl
into
xor
xor
inc
pop
inc
fs
bound
call
pop
adc
ss
stc
add
mov
popf
xor
push
test
enter
jne
jmp
push
mov
or
cmpsl
push
nop
outsb
dec
cmp
sub
in
xchg
mov
dec
loope
xchg
in
and
notl
lcall
add
es
popa
adc
mov
pop
sbb
fpatan
cmp
mov
jecxz
adc
das
pop
ret
movsl
outsl
xor
gs
push
jae
fimuls
pop
movsb
fsts
fsts
dec
in
mov
xor
lods
insb
addb
mov
cli
shrl
xchg
or
fbstp
mov
xchg
not
xlat
pop
flds
mov
mov
mov
ds
xor
mov
rorl
mov
cmp
shl
rclb
sbb
pop
cmp
arpl
aaa
into
mov
add
fildl
shlb
sub
push
std
gs
aaa
aaa
aam
pop
mull
jecxz
enter
in
jge
pop
mov
popf
divl
or
add
jno
daa
fwait
or
mov
push
js
psraw
and
in
insb
rcll
push
xchg
dec
jbe
jle
or
pop
mov
insb
cmc
imul
mov
pop
pop
lds
lods
xor
push
ss
aad
fisubrs
pushf
push
jae
faddl
mov
mulb
adc
pusha
sar
xchg
pop
or
xor
mov
cmp
cmp
fsubrl
adc
cmpsb
js
sbb
jg
mov
adc
pop
mov
jae
scas
movsb
xchg
cmp
dec
int
push
ljmp
xchg
ficoml
mov
fdivl
stc
jne
sbb
imul
repnz
out
js
das
dec
mov
xor
xor
rol
xchg
sub
mov
dec
fs
inc
fsubrs
pop
idivb
xor
mov
aam
xor
add
xorl
xchg
mov
notb
ja
xlat
gs
push
sar
inc
loope
ss
shrb
ljmp
dec
dec
mov
por
sbb
fstpl
insb
add
or
jecxz
fdivrl
fisttpll
loopne
scas
mov
xlat
out
or
mov
adc
mov
sbb
fcompl
xchg
pop
inc
cmp
idivl
adc
stos
mov
sub
repnz
clc
cmp
shll
out
mov
outsb
loope
or
out
nop
dec
mov
cmp
cmp
int3
iret
fsts
push
sbb
ficoms
js
lock
push
in
lods
mov
jo
mov
push
iret
inc
ds
jmp
or
in
push
mov
add
mov
mov
adc
add
mov
push
xorb
pop
push
inc
popf
fmuls
lea
mov
cmp
adc
push
push
or
and
dec
sbb
mov
pop
insb
jecxz
jnp
xor
push
outsb
or
jmp
cli
mov
pop
sbb
cmpsl
push
mov
cld
cwtl
mov
mov
dec
dec
sahf
gs
aam
adc
les
jg
dec
push
push
fsubs
jl
xchg
xor
ss
roll
push
cwtl
and
dec
ss
ret
mov
ljmp
push
jae
mov
xor
cld
xchg
test
cld
xor
inc
jl
lock
aas
xchg
add
das
adc
popf
ds
divb
test
inc
aad
outsl
sub
ficompl
repz
or
mov
dec
add
cmp
mov
fsubrl
aad
inc
or
xchg
inc
pop
sti
fs
xchg
mov
pusha
daa
jb
mov
jno
jb
dec
ret
dec
jmp
sub
push
test
cwtl
dec
mov
pop
mov
dec
out
cmp
js
push
in
enter
ds
xchg
pop
sbb
cli
pusha
jge
shlb
ljmp
out
push
jmp
shr
xchg
add
test
lcall
iret
mov
and
xchg
mov
xlat
test
fnstcw
or
scas
daa
jae
call
nop
out
movsl
inc
pop
das
inc
xchg
jmp
inc
inc
fsts
movsl
negl
pusha
cmp
xor
and
ss
jne
add
mov
push
lcall
or
fnstcw
leave
out
test
cmpsl
das
fists
xchg
inc
fbstp
or
mov
mov
repnz
fisttpl
loope
aas
pop
sbbl
mov
scas
outsb
idivb
ret
mov
xchg
pop
sbb
lods
sahf
mov
pop
xor
mov
sarb
xor
xchg
rorl
sbb
shll
jnp
mov
ds
scas
dec
sbb
xchg
adc
in
mov
lods
push
xor
inc
pop
and
sbb
outsl
cmp
cmp
imul
shl
sti
sbb
mov
pop
jbe
add
imul
jg
cmpsl
pop
test
and
mul
mov
inc
dec
test
rorb
mov
mov
push
add
adc
popa
pushf
mull
mov
add
xlat
dec
shll
pop
jb
push
out
sub
pop
or
test
xor
pop
add
xchg
lds
mov
insb
mov
fcomip
rsqrtps
mov
cmp
stos
fsts
cltd
std
out
jo
fs
std
ret
jno
aad
mov
pop
ss
dec
dec
and
lds
scas
andl
sbb
rol
jp
iret
adc
add
cli
popf
mov
xor
adc
xchg
and
and
fbld
es
fyl2x
pop
mov
inc
or
mov
bound
pop
mov
push
mov
pop
adc
xor
pop
je
fmul
xlat
add
and
arpl
cmc
jle
loop
ds
jl
or
iret
mov
dec
jns
lahf
cli
outsl
adc
das
sbbb
lret
or
mov
jle
mov
push
sbb
aad
fistl
sbb
add
addl
push
jecxz
dec
aad
xchg
test
shll
adc
or
lea
or
fistps
mov
clc
and
mov
pop
xorb
push
clc
enter
adcb
add
xchg
aam
pusha
nop
leave
mov
sub
add
cmp
push
fs
lds
xor
sub
push
xchg
add
cs
in
stos
add
inc
mov
and
aad
nop
xor
sub
sbbb
sbb
jb,pt
insb
or
or
sub
sbbb
add
into
shr
out
push
inc
mov
fcompl
aad
jle
clc
bound
and
sbb
sub
pop
add
es
test
das
pop
adc
cwtl
das
inc
jge
sub
adc
add
in
mov
mov
xchg
push
call
lret
cmpsb
outsl
dec
pop
in
movsb
imul
pusha
decl
in
rolb
movsl
xchg
gs
jne
in
mov
xchg
pop
mov
insl
inc
cmp
insb
and
sub
add
js
popa
jg
xchg
push
add
cmp
dec
mov
jne
fsts
dec
fdivp
add
mov
push
add
cmp
sub
jmp
mov
sahf
int3
pop
mov
stc
mov
fwait
aaa
pop
jge
or
nop
mov
or
std
jp
fs
xchg
decl
xchg
dec
je
clc
cwtl
aad
movsl
scas
mov
cltd
sub
dec
cmc
iret
or
or
xchg
aas
pop
dec
jno
xchg
mov
jnp
xor
mov
mov
imul
incl
inc
mov
pop
pop
popf
outsl
into
pop
rcrl
inc
mov
sbb
ficomps
adcl
enter
inc
pop
test
push
fcomp
pusha
fildll
jle
les
cld
or
mov
xchg
in
or
rcr
imul
arpl
data16
adc
pop
int
mov
pop
outsb
mov
stc
repz
cmc
ja
stc
adc
mov
xchg
pop
adc
arpl
mov
pop
dec
pop
mov
out
fimull
lahf
xrelease
jl
and
cmp
push
ret
out
add
and
adc
mov
dec
rolb
pushw
addr16
inc
frstor
fcomi
aas
ret
sti
insb
mov
or
fidivs
jp
insl
lock
std
aaa
rorl
dec
imul
outsb
push
sbb
insb
mov
inc
sbb
mov
mov
ret
repz
mov
lods
pusha
add
add
mov
lret
jge
int
in
cmp
inc
adc
lret
addr16
add
ret
pop
dec
cmc
stos
push
ljmp
call
mov
jge
mov
mov
push
mov
pop
into
push
pop
outsl
adc
jns
mov
fdiv
int3
sbb
jbe
mov
mov
adc
cltd
lret
xor
adc
cmp
sub
movsb
push
leave
test
jns
mov
fstpl
sub
xchg
mov
sub
aam
jnp
es
mov
xchg
sbb
enter
imulb
inc
fwait
pusha
xchg
or
sub
aad
in
mov
sarb
jo
and
mov
fs
and
or
jecxz
jae
xor
dec
loop
outsb
add
xchg
pushf
xor
iret
mov
aas
loop
nop
test
cmpb
test
inc
adc
sub
cli
push
cmp
in
mov
es
in
loop
mov
lods
cmc
push
aad
test
gs
cltd
test
pushf
movsl
adcl
cmp
xlat
aam
ja
dec
std
lcall
jg
jno
adc
mov
pop
test
mov
push
dec
int3
xchg
decb
lahf
push
scas
mov
jnp
add
xlat
mov
bound
or
pop
out
pop
mov
pop
jl
icebp
or
fstps
testb
mov
and
mov
sahf
or
jecxz
clc
adc
inc
mov
test
addr16
add
and
lods
push
outsb
test
cmp
in
test
hlt
mov
cwtl
mull
dec
fwait
or
mov
les
inc
mov
in
push
leave
int3
jl
jnp
ja
es
rcl
je
adc
and
mov
mov
pop
sahf
adc
add
enter
in
jp
stos
dec
mov
pusha
inc
adc
and
and
lret
cmp
pop
ljmp
lock
stc
sbb
push
dec
aas
dec
pop
popa
push
push
cmp
test
shlb
ret
jl
pop
xor
sbb
out
push
loop
xchg
push
shlb
cli
lock
in
push
pop
and
jmp
divl
add
in
sti
and
cmp
jns,pn
insl
push
pop
shr
cmp
cmp
pop
pop
outsb
inc
or
clc
xchg
inc
push
add
mov
testl
xor
aad
ljmp
mov
cwtl
popa
push
cwtl
jp
jecxz
mov
shl
sub
or
cwtl
pop
mov
push
push
mov
mov
sbbl
jns
add
fiaddl
sbb
xchg
imul
pop
dec
sbb
cmp
ljmp
sbb
sahf
or
pop
xorl
xor
psraw
ljmp
repnz
stos
sti
push
sbb
xchg
test
std
movsb
imul
fwait
inc
and
sti
test
push
mov
jno
fs
mov
aam
cs
mov
aas
xor
shl
dec
out
dec
pushf
xchg
lcall
dec
icebp
notb
lret
enter
and
fnstsw
cmp
jp
pop
out
jne
rcrl
icebp
adc
popa
ret
xor
fistl
mov
sbb
imul
into
mov
mov
sub
lahf
push
mov
in
nop
fs
dec
inc
loope
cmp
add
aaa
fcompl
jp
lods
ljmp
and
adc
orb
push
hlt
imul
mov
lock
movsb
std
adc
fildll
sbb
negl
add
fwait
dec
mov
test
cmp
push
dec
mov
sub
xor
sub
flds
and
je
subb
jns
fmull
and
or
popf
mov
push
jmp
inc
clc
test
cmp
pop
std
insb
daa
loop
jecxz
shlb
cltd
adc
dec
arpl
xchg
outsl
mov
mov
and
in
add
sbb
popf
jne
lods
js
cwtl
std
and
cmp
xchg
push
stos
cmc
pop
out
sbb
fs
dec
jge
push
and
popa
and
xchg
xchg
cld
xor
add
cmp
psraw
iret
adc
clc
inc
and
out
xchg
fwait
cmpsl
adc
inc
jo
inc
mov
outsl
test
jne
test
jecxz
xchg
aas
cmpsb
add
mov
repz
mov
mov
icebp
jne
sbb
fadds
in
rorb
xchg
data16
enter
fmuls
arpl
mov
jb
sahf
stos
les
and
ss
dec
or
bound
and
icebp
adc
mov
repnz
pop
push
repnz
call
cltd
jns
xchg
jp
inc
xchg
add
jae
dec
movsb
jns
test
ljmp
stc
mov
pop
lea
dec
pop
stos
or
outsb
push
pop
out
outsb
insl
les
hlt
push
push
pop
and
xlat
mov
xchg
mov
inc
dec
loope
out
test
fdiv
mov
es
jns
lret
in
inc
and
repz
and
push
pop
push
in
sbb
sub
lock
test
cmp
in
inc
pop
sbb
sbb
adc
fadd
pop
lock
loop
or
dec
rol
mov
lcall
es
cs
adc
pop
in
mov
test
mov
and
test
pop
push
lret
sbbl
sbb
mov
cmp
xlat
add
sbb
jmp
cmpsb
lods
int
mov
jge
add
shl
test
xchg
sahf
inc
popf
dec
in
clc
rclb
cmp
loopnew
sub
dec
es
cltd
add
arpl
xchg
out
push
pop
xchg
pop
mov
sahf
jb
push
clc
fwait
pushf
jno
sbb
roll
push
push
xor
inc
push
les
loop
call
or
repnz
popf
add
aaa
cld
lahf
jnp
stos
mov
push
fwait
je
push
out
push
pop
nop
mov
fistpl
pop
xor
xor
mov
dec
negb
leave
cmpsl
iret
pop
or
in
cltd
in
push
mov
adc
cmpb
inc
in
fwait
insl
cltd
ret
add
or
sahf
sub
mov
pop
inc
not
mov
push
push
fimull
aaa
xor
xchg
mov
sbb
adc
or
mov
fildll
mov
bound
or
mov
push
sbb
mov
or
lock
fldl2t
xor
mov
cwtl
jns
leave
adc
xor
filds
in
leave
push
fsubrs
je
sbb
out
mov
xchg
in
bound
pop
push
push
xor
jae
jnp
out
mov
outsb
add
mov
fldcw
or
subb
loop
cmp
xchg
icebp
or
les
cmp
push
jg
sub
cltd
sub
cmpsb
and
es
ret
add
stc
push
out
mov
icebp
mov
sub
movb
into
popa
pop
faddl
jle
mov
mov
mov
pop
cmpsl
xchg
xchg
cld
mov
jg
jae
ret
pop
pushf
into
or
cmp
scas
aas
sub
add
jno
mov
cmpsb
cli
adc
sub
iret
jne
ret
mov
loop
xlat
les
mov
pop
adc
add
xchg
pop
cld
xchg
stc
inc
popf
cmpsl
inc
sbb
mov
jecxz
adc
repnz
test
lcall
imul
mov
loop
dec
loop
inc
mov
mov
xchg
pusha
subb
dec
fstpl
nop
mov
mov
mov
mov
out
adc
into
xchg
fs
hlt
int3
arpl
test
in
iret
ljmp
dec
mov
cld
rcrl
test
cmp
xor
nop
test
subb
movsl
and
mov
push
cs
xchg
int3
lcall
in
ds
sub
stos
nop
jmp
fwait
mov
dec
xor
sub
dec
pusha
aaa
add
lret
jl
std
mov
mov
adc
mov
in
jae
or
daa
xchg
test
es
push
es
xchg
repnz
inc
stos
xchg
xor
mov
add
pop
xor
sub
pop
jle
testl
enter
jmp
test
mov
add
inc
push
pop
ret
xlat
aam
cmp
mov
dec
lcall
lea
in
pop
fdivl
js
dec
bound
mov
lcall
push
in
jg
fs
idivb
std
fsubs
std
cmpsb
sub
or
mul
sub
xchg
add
stos
jb
test
mov
and
int3
sbb
ljmp
mov
mov
jns
or
int3
les
fcoml
mov
adc
test
xchg
push
inc
dec
fucomi
out
fcoml
nop
loopne
frstor
dec
xchg
sub
idivl
insl
inc
and
mov
xor
ret
shl
push
shl
jge
cmp
mov
xor
daa
mov
stos
dec
mov
xchg
sbb
mov
jg
outsb
adc
clc
add
adc
push
mov
mov
sahf
mov
movsl
cmp
mov
rclb
les
aad
mov
ret
pop
jne
dec
cmp
mov
xor
arpl
pop
fildll
or
in
fldt
mov
sar
or
mov
mov
jmp
dec
scas
sub
jo
repz
rclb
stos
and
emms
fs
fs
mov
test
lret
mov
outsl
leave
xor
sub
jl
or
lock
adc
mov
adc
fxtract
cli
jb
xchg
movsb
sbb
hlt
adc
xchg
sub
lret
mov
and
int
in
mov
fisubrs
xchg
jbe
pop
mov
andl
cmpsl
cmp
jp
fstpl
les
or
ja
push
stc
mov
fdivp
inc
nop
loope
ret
adc
jp
push
push
jecxz
add
stos
inc
daa
mov
leave
jecxz
outsl
xor
scas
das
stos
jo
mov
mov
mov
mov
mov
xor
inc
sbb
adc
movsb
leave
xchg
ja
push
adc
mov
jmp
pop
mov
push
xlat
pop
hlt
lods
cmp
std
xchg
cltd
cmpsb
scas
test
cltd
xor
mov
mov
test
test
sub
mov
cs
pusha
cmp
mov
subl
loopne
mov
xor
push
jg
sbb
pop
mov
int
repnz
jmp
lahf
mov
dec
adc
pop
enter
xchg
jmp
jge
loopne
jle
pop
stos
mov
jbe
sahf
xor
in
sbb
xor
sar
cmp
fisubrl
cmp
mov
int
mov
sbb
loopne
xchg
sarl
push
mov
xor
pop
inc
push
mov
mov
lret
lcall
push
xor
lahf
daa
ret
cmp
add
mov
sbb
dec
push
push
shr
lds
xor
push
push
mov
mov
out
in
mov
fstpl
sub
in
hlt
jl
or
outsl
stos
test
mov
imul
mov
jb
ds
stos
sub
das
push
jge
rcrl
aas
arpl
mov
enter
fistps
add
xor
mov
add
shl
nop
push
cltd
sbbl
xlat
add
ljmp
xlat
jbe
jb
les
or
push
inc
cmp
dec
mov
or
outsb
lds
pop
mov
loop
cmp
dec
test
and
lds
mov
pop
hlt
aad
xor
lods
push
cmc
add
mov
int3
dec
cmpsl
je
lods
sub
ret
ret
ret
and
imul
outsl
aas
test
push
in
and
shl
js
xor
sub
inc
test
xchg
mov
push
mov
and
adc
push
mov
xlat
outsb
inc
sub
out
pop
popa
cmc
adc
push
dec
pop
sub
lahf
imul
dec
add
das
repnz
ja
ficoms
push
dec
ret
in
aas
cmp
lods
fucomip
cmp
sub
jl
sub
fistps
sub
and
mov
loopne
lods
shrb
and
imul
adc
xchg
push
pop
mov
fisttpll
jl
in
je
cmc
dec
xchg
dec
sbb
gs
mov
xor
bound
insb
sbb
sbb
sbb
inc
addr16
mov
inc
pop
into
xor
aam
push
push
out
loopne
loopne
lret
mov
cs
push
shr
fisttpl
mov
mov
fmull
rcll
clc
or
pop
dec
dec
shlb
cmp
adc
lods
cmp
sbb
jbe
pop
shrl
ret
pop
rolb
inc
std
fnsave
cmpsb
out
mov
or
cmc
arpl
into
sub
push
inc
imul
sub
loopne
push
xor
dec
mov
xchg
jo
xchg
test
pop
sahf
mov
cmpsb
cmpb
cmp
inc
es
orb
cld
in
xor
loop
xor
lcall
jl
push
jmp
lea
xor
xchg
add
xchg
adc
lret
and
ds
sub
mov
test
ret
in
cmp
inc
mov
jp
in
stc
pop
ss
or
xchg
cmp
push
ret
imul
cli
dec
dec
or
and
sbb
pushf
adc
inc
cwtl
cmp
es
mov
shr
push
out
cli
pushf
inc
adc
test
cwtl
lods
fstpt
dec
mov
jno
mov
stos
jbe
ret
adc
lcall
in
stos
loope
mov
pushf
fmul
mov
jo
cmpsb
movsl
mov
or
lods
fs
dec
int
pop
icebp
cmpsb
jg
lcall
in
test
clc
out
mov
out
fnstcw
mov
stos
push
pop
pop
pop
cmpb
repz
pop
dec
pop
jg
leave
int
lods
fs
adc
into
clc
movsb
addr16
popa
xor
pusha
mov
lahf
jo
fsubr
jle
ljmp
dec
lret
data16
cs
and
adc
bound
push
and
or
loopne
dec
adc
jne
pop
jb
cli
jge
sub
in
scas
push
outsb
sub
jno
cmp
imul
add
and
fdivs
jecxz
dec
and
mov
sbb
add
cmc
jo
push
in
xchg
xchg
mov
fldenv
mov
rorb
shll
cwtl
aas
iret
cmp
notl
dec
loopne
sbb
insb
inc
push
addr16
jp
jecxz
xor
aas
fbld
cmc
adc
xchg
sub
stc
repz
cmp
cltd
std
lea
mov
imul
nop
xor
adc
inc
out
stos
addr16
sbb
lret
sarl
pop
ds
pop
loope
int3
pop
dec
dec
aam
jle
imul
sub
push
sbb
inc
fiaddl
pop
lock
mov
cli
push
setne
fwait
adc
not
lret
dec
and
inc
and
jge
ja
pop
jg
or
mov
call
xchg
jle
test
xchg
and
cli
push
inc
mov
fs
pop
test
ja
dec
aaa
push
cltd
test
xchg
dec
roll
rcrl
and
lcall
lcall
adc
imul
bound
cwtl
sbb
or
mov
test
mov
fidivs
lcall
mov
push
xchg
mov
jp
push
mov
mov
push
rcr
adc
jne
fwait
mov
addr16
fwait
and
mov
push
xchg
aad
fbstp
mov
iret
shrl
and
inc
loopne
jmp
in
xor
cmpsl
jecxz
negb
roll
cmp
sbb
aad
push
hlt
inc
jg
es
sub
lods
in
loopne
dec
es
jae
cmp
shll
mov
imul
fnstsw
pop
repz
dec
icebp
out
and
aaa
loopne
xchg
lock
dec
subb
sub
fcmovb
addl
mov
mov
jne
fidivl
addr16
push
or
imul
pop
inc
inc
fidivl
pushf
sarb
push
loope
jl
inc
and
popf
inc
and
jo
push
out
daa
and
std
xchg
fstps
mov
push
popf
int
dec
ljmp
xchg
nop
push
decb
roll
outsb
nop
pop
dec
lock
out
adc
dec
mov
sub
icebp
movsb
in
es
pop
mov
xor
cwtl
leave
int
inc
ret
fnstsw
aad
mov
pop
and
jl
sub
adc
cwtl
stos
mov
je
stos
shll
xor
push
insl
adc
imul
dec
lcall
notb
cli
repz
movsl
loopne
or
ljmp
and
outsb
xchg
mov
stc
lods
jecxz
or
dec
repz
push
push
in
iret
ljmp
cwtl
fisubl
aas
or
xchg
icebp
sahf
lods
sub
xor
cmp
test
pop
sbb
jnp
daa
push
ljmp
es
or
adc
adc
pop
test
and
test
inc
fistl
stc
jmp
or
push
adc
orl
or
lods
lds
imul
jp
jns
call
dec
pop
test
bound
jns
les
loope
into
inc
sbb
add
adc
pop
imul
clc
mov
dec
in
rol
stos
repz
xchg
fisubrs
adcb
in
out
mov
inc
fidivrl
popf
stos
sti
into
gs
inc
popf
insl
pushl
pushf
lods
jns
popf
and
xchg
mull
jecxz
dec
orb
pop
dec
bt
mov
add
add
mov
adc
popl
call
hlt
fbstp
call
push
sbbl
lret
movb
mov
or
dec
ret
cli
repnz
cmpsb
fwait
xlat
popa
fdivl
ljmp
cmc
add
outsl
je
andb
mull
xor
loopne
xor
dec
addr16
cld
dec
dec
ror
repz
int3
mov
add
mov
lods
dec
insb
sbb
jge
xor
or
mov
xchg
xchg
cmc
nop
arpl
cmp
cmp
add
out
add
loop
ja
jle
std
cmpsl
mov
gs
lea
xlat
xchg
ficomps
imul
inc
scas
mov
test
inc
fmull
push
movsl
jbe
arpl
pushf
scas
lods
inc
loopne
shrl
popa
push
sbb
call
out
add
outsb
mov
imul
jle
xchg
sub
sahf
lahf
add
test
loopne
testl
or
push
xor
sbb
pop
lret
xor
mov
imul
sarl
or
push
push
lcall
dec
and
idiv
push
leavew
lods
sub
xlat
mov
dec
dec
mov
add
sahf
mov
rclb
mov
jg
jne
mov
push
sbb
jmp
mov
jb
ja
mov
push
or
pop
outsl
stos
xchg
leave
cmpsl
ljmp
aas
add
std
addb
adc
mov
ret
xor
mov
das
push
cli
inc
and
fisubrl
rcrb
sub
das
adc
mov
js
out
sub
xlat
les
mov
icebp
cmp
add
fwait
and
mov
dec
out
inc
sbb
jno
sbb
data16
stos
lock
push
xor
pop
in
mov
cmc
push
sqrtps
ret
dec
jbe
outsb
adcb
pop
and
shl
or
add
rorb
fsubs
mov
fs
scas
sbb
bound
mov
sbbb
jg
imul
mov
rcrl
imul
adc
fisubrs
int
imul
jne
ficoms
leave
enter
jg
enter
icebp
mov
adc
mov
pop
jl
in
cli
cltd
cmpsl
pop
xor
sahf
jnp
cmp
or
cmp
daa
jb
in
mov
gs
loope
lret
cmp
lgs
loope
sahf
xorb
mov
cmp
jecxz
cltd
rsm
jne
scas
xchg
ds
xor
dec
imul
mov
in
mov
inc
mov
scas
es
fisttpll
pop
push
mov
cmp
mov
xchg
jl
jns
sbb
or
lods
mov
cli
lods
xorb
dec
mov
in
fldl2t
add
jne
mov
sahf
mov
add
daa
xor
pop
push
xor
fistps
jno
fwait
ss
aad
in
jmp
inc
mov
mov
enter
sbb
cmp
lods
imul
xor
sbb
dec
adc
jns
sbb
lock
jge
xor
fdiv
dec
push
scas
fnsave
fnstenv
sti
into
inc
dec
sti
into
mov
mov
xchg
cltd
mov
xchg
pop
adc
mov
inc
pushf
add
inc
dec
fisttps
pop
sub
nop
jne
adc
jbe
sahf
or
dec
mov
xor
mov
adc
dec
mov
jle
adc
add
outsl
jl
pop
xor
adc
mov
lods
popa
pop
nop
call
movd
outsl
das
jle
sahf
stos
jnp
mov
leave
out
sti
test
leave
pop
aaa
cmp
push
cmp
jmp
push
push
fwait
pop
jg
sbb
lds
mov
mov
inc
or
xor
jle
pushf
hlt
mov
into
sub
out
or
adc
in
shll
sti
outsb
repnz
bound
cmp
gs
cwtl
pop
mov
shld
fld
cmp
ss
stos
je
bound
and
pop
pop
aas
fisttps
enter
test
jmp
or
sub
mov
cmp
cmpsl
dec
call
insl
test
lret
xor
in
jb
dec
push
movsb
xchg
je
inc
shll
pop
jl
gs
outsb
add
bound
in
lret
shl
mov
pop
mov
mov
mov
sahf
pop
imul
cmp
and
leave
notb
jmp
divb
test
je
sbbb
push
in
inc
hlt
or
mov
pop
mov
into
or
mov
stos
sbb
iret
aas
js
insb
out
fstpl
mov
sti
jb
sbb
cs
and
inc
repnz
push
inc
pushf
push
or
push
mulb
xchg
mov
les
shrl
popf
clc
jns
data16
mov
jno
adc
xlat
hlt
pop
imul
call
daa
outsl
mov
cmp
pop
decb
mov
dec
jno
leave
pop
mov
jnp
in
pop
lock
shrl
inc
fcomps
mov
icebp
andb
cltd
hlt
into
notl
sbb
test
lcall
mov
dec
fmuls
jo
lods
in
pop
enter
call
in
xor
mov
aaa
mov
dec
pop
add
clc
dec
iret
scas
add
adc
dec
push
js
push
mov
jno
movsb
sub
cmpsl
cmp
push
lods
mov
push
sbbb
ds
mov
inc
inc
outsb
and
pop
popf
xor
mov
xchg
outsl
in
stos
rcll
mov
xlat
sti
leave
mov
cmp
pushf
das
out
jmp
xchg
or
repz
shlb
out
loope
aam
ja
inc
push
in
pusha
cmp
lahf
add
mov
cltd
daa
jb
fidivrs
ss
outsl
sub
push
jb
fidivrl
jecxz
lret
sub
lods
out
adc
ret
stc
lret
out
pop
rclb
insl
push
scas
cli
aad
pop
mov
xchg
pop
js
push
outsb
bswap
popf
fisubl
cmp
out
xchg
xor
jmp
imul
in
stos
enter
sub
xor
and
pop
add
mov
mov
cmpsb
call
jp
je
shl
fisubrs
pop
test
fs
jns
repz
mov
test
cmp
test
andb
aaa
push
das
inc
outsb
enter
push
xchg
ja
lret
lods
enter
jecxz
dec
movsl
cmc
mov
sub
aas
aad
mov
ljmp
jg
push
dec
outsl
push
jb
rclb
and
in
orl
imul
mov
imul
fistpl
or
inc
pusha
ja
leave
pusha
and
outsb
mov
leave
out
mov
loopne
rol
fcomp
jne
fcmovu
inc
or
cld
push
dec
test
jno
outsb
repz
out
jecxz
pushf
or
movsb
shll
jnp
pop
leave
test
jns
and
aaa
int
cld
cmp
jmp
pop
iret
sbb
loopne
xchg
imul
push
popf
and
mov
sbb
push
push
call
xchg
pop
xor
cwtl
mov
jecxz
and
mov
and
dec
rol
shlb
dec
loopne
int3
cmpsb
cmp
and
call
test
and
lods
lea
hlt
mov
push
mov
xchg
add
test
and
fwait
arpl
fidivrs
or
adc
sahf
repnz
shl
lcall
mov
jno
daa
into
dec
jecxz
lret
mulb
and
data16
or
jg
jbe
inc
xor
inc
icebp
push
pop
add
cli
jle
insb
stc
mov
inc
pop
push
sub
arpl
mov
inc
stos
mov
clc
fxch
outsl
aad
fsubr
or
divb
jp
sub
jno
cmp
pop
xchg
add
inc
sub
out
fidivs
or
pop
xor
mull
mov
pop
call
subl
out
loope
test
stc
lahf
sbb
mov
jbe
rorb
insl
shrl
sbb
mov
addb
mov
flds
mov
jns
in
lock
notb
testl
push
inc
lahf
push
test
int
gs
jp
jae
and
fcomp
int
push
mov
mov
and
add
cld
int
xlat
leave
and
ret
sbb
add
xlat
orl
push
adc
pop
lret
push
and
test
mov
and
gs
arpl
mov
popa
xchg
pusha
scas
jecxz
dec
pop
inc
sarb
cmp
popa
mov
lods
mov
jo
fucomi
xchg
xchg
lock
jmp
rcll
push
imul
pushf
or
ret
pop
icebp
inc
sbb
dec
leave
xchg
lea
stc
nop
jnp
push
insl
mov
pop
scas
pop
ficoms
push
lods
mov
loope
push
jmp
adc
cmp
and
fcom
jmp
out
scas
or
cmc
add
pop
sub
xchg
pop
jnp
loopne
adcb
jl
sub
xor
mov
scas
out
lods
fidivs
add
and
cmp
mul
sbb
int3
aaa
dec
mov
in
adc
xchg
je
or
fnstsw
push
or
icebp
push
xchg
adc
repz
push
je
pop
fstpt
das
jecxz
popa
adc
movsb
imul
fcompl
mov
sub
test
frstor
xchg
cltd
push
push
pop
out
mov
mov
lods
aam
push
and
jle
cpuid
push
sub
pushf
or
adc
call
xor
pop
jnp
xchg
sub
movsl
sub
or
inc
mov
mov
pop
xchg
mov
cmp
xchg
fdivr
push
arpl
inc
and
jb
stos
inc
jmp
dec
cli
idiv
enter
shl
shlb
punpckldq
notb
inc
cmpsb
std
int
sbb
pop
lds
lahf
mov
daa
es
shll
pop
push
shl
cs
pop
call
pop
and
dec
sub
test
mov
pushl
adc
test
pop
fistpl
rcrl
sub
push
and
pop
and
cmpsb
icebp
mov
iret
inc
add
dec
in
and
xlat
jmp
mov
mov
and
mov
clc
leave
cmp
aad
ds
fadds
add
lret
arpl
jge
inc
push
xchg
in
push
gs
pushf
mov
jb
mov
pop
xchg
mov
mov
mov
and
fdiv
lock
int
adcb
xchg
mov
loopne
mov
bound
cs
cld
shrb
fdivl
fdivrs
lea
cmp
mov
mov
js
sub
xchg
cmc
cmpsl
add
pop
push
sub
out
cmp
shrl
ja
jns
mov
int3
cmp
mov
pop
xchg
out
mov
int3
sbb
gs
pop
sub
push
lahf
aas
jl
mov
fstps
inc
fldt
pop
add
iret
pop
es
sbb
push
pop
movsl
xor
ja
ss
jp
mov
dec
ss
lods
jo,pn
cmp
push
cmc
push
push
jg
xchg
bound
lock
fimuls
lahf
xorb
inc
fstl
inc
fnstcw
jae
dec
movsl
cmp
sbb
push
adc
pop
xor
mov
xchg
stos
testb
sti
fwait
bound
mov
sahf
pop
jmp
xor
xchg
repnz
sbb
into
push
mov
mov
dec
jl
insl
shrl
mov
and
rclb
movsb
mov
fidivrs
and
enter
addl
xchg
adc
inc
dec
add
sbb
xchg
gs
lds
cmp
addr16
push
fcom
and
mov
pop
or
xor
pop
stos
cmp
add
xchg
mov
inc
cmpsl
mov
push
outsb
movb
daa
fwait
jno
divl
pop
out
add
or
pop
pop
or
adc
jnp
mov
xor
push
add
or
lahf
add
xor
addr16
jae
sbb
rcr
push
jg
test
rorb
popf
or
push
add
sbb
push
loope
orl
jno
xchg
sbb
xchg
icebp
jno
test
test
scas
inc
xchg
insb
or
mov
repz
out
ljmp
adc
jg
push
mov
and
pushf
dec
inc
mov
push
xor
lahf
cmpb
out
xor
add
mov
cli
mov
fidivrs
movsl
popf
lahf
and
and
in
sbb
pop
mov
fs
xlat
clc
and
out
sbb
pushf
insb
sbb
adc
rcrb
cmp
mov
imul
push
mov
shll
nop
xchg
cmpsl
nop
mov
pop
cmp
mov
push
sbb
int
mov
cs
xor
mov
mov
xchg
andl
ss
bound
xlat
pop
mov
rcl
jle
lret
jle
inc
inc
mov
jecxz
dec
sahf
outsl
hlt
mov
scas
adc
lahf
fdivs
outsb
jnp
push
pushl
mov
mov
aas
or
in
in
lods
movsb
cmp
out
pushl
fisttpll
mov
xlat
sub
scas
pop
or
fdivl
xchg
pusha
ds
callw
movsb
popf
xor
repnz
cmpsl
cli
mov
loopne
mov
in
cmp
mov
mov
push
mov
push
cmp
jecxz
mov
add
xor
jl
aam
cltd
xorb
sahf
jmp
nop
mov
loope
je
mov
mov
mov
rclb
mov
int
and
push
push
lods
test
jb
xchg
sub
push
loope
xchg
stos
js
jge
int3
push
mov
push
fs
sbb
pop
ds
jmp
or
cmp
and
push
loope
inc
pop
stos
inc
inc
std
push
into
outsl
mov
pop
shl
iret
fistl
out
je
sbb
pop
xchg
inc
inc
xchg
into
gs
insb
stos
xchg
jo
aad
pop
mov
mov
aaa
or
mov
nop
sti
inc
jge
or
in
xchg
addl
sbb
lcall
dec
cli
push
in
pop
lcall
clc
andl
dec
xchg
dec
pop
lds
lea
int3
adc
mov
cmp
push
jmp
or
in
cmp
xchg
adc
mov
inc
iret
fnstenv
shll
xor
xchg
icebp
push
mov
cmp
shlb
arpl
ljmp
lea
rcrb
sub
push
xchg
add
adcl
in
jno
push
je
cmc
rep
inc
shl
mov
push
mov
aam
pop
mov
popf
pop
push
add
xor
sbb
sub
or
int3
into
lea
adc
popa
les
mov
test
push
dec
push
sarb
es
sub
ret
aam
into
lret
sub
mov
jns,pn
add
cwtl
add
cmp
scas
push
pop
lret
das
out
sbbb
jle
sti
and
mov
lcall
in
inc
bound
cmp
nop
push
out
icebp
dec
test
mov
push
push
dec
jnp
sub
push
mov
pop
mov
sbbb
stos
push
cltd
sub
cmpsl
dec
and
in
pop
scas
stos
movsl
incl
int3
xor
or
jae
sbbb
sarl
and
pop
xchg
dec
movsb
add
insl
push
imul
inc
pop
lcall
clc
lock
scas
ja
push
fs
pop
ss
mov
jo
cwtl
js
lret
cld
hlt
and
lods
arpl
fnstcw
inc
and
and
jnp
jg
lds
sbb
xchg
fwait
int3
mov
int
dec
cmp
rcll
fwait
add
nop
call
test
movsl
pop
sarb
lret
out
scas
inc
arpl
adc
cwtl
xor
adc
cmp
cmpsl
hlt
lcall
roll
mov
pop
jmp
mov
out
cltd
test
mov
lds
outsb
jg
std
jecxz
das
and
sbb
in
xor
add
xchg
mov
ret
sub
in
imul
adc
ret
xchg
mov
mov
dec
pop
or
jbe
cmp
nop
mov
dec
sbbl
repnz
xchg
aas
dec
push
jbe
and
cmp
scas
lret
adc
loope
in
inc
jne
insl
insb
add
dec
xchg
sahf
push
fsts
or
and
xchg
testb
xchg
xchg
hlt
roll
push
push
test
ja
das
dec
xlat
sbb
test
jge
pushf
xchg
repz
mov
xchg
push
adc
jl
sbb
xchg
cmp
mov
sahf
test
dec
add
jno
cwtl
xor
jp
xchg
sbb
pushf
push
mov
xchg
xor
clc
out
fidivs
cmpsl
add
aam
xor
jg
mov
push
jno
jno
cmpb
inc
subl
rol
jl
insb
xchg
decb
xchg
leave
rclb
mov
call
fsubs
add
add
movzwl
and
dec
adc
cwtl
fbstp
xor
aas
dec
fimull
sbb
and
roll
cli
test
icebp
out
add
inc
pop
aaa
pop
cmpsl
dec
cwtl
aad
push
cmpl
add
xchg
dec
push
dec
sbb
cmpsb
fistps
jl
shrl
and
je
ja
lock
and
sbb
leave
add
jne
push
push
mov
daa
pop
xchg
jecxz
adc
cmpsl
add
cmpsb
xor
push
sub
xchg
jae
mov
call
mov
xchg
and
mov
push
xchg
mov
sbb
and
lds
cmp
test
aad
mov
lds
add
test
sbb
jge
mov
into
test
xchg
inc
adc
xor
and
sbb
inc
xchg
mov
add
lret
fistpll
into
mov
sub
xchg
xor
movsl
mov
inc
add
mov
sub
lea
xor
mov
xchg
add
rcll
dec
ss
jl
pop
cmpsl
out
cmc
mov
daa
and
mov
orb
sbb
xchg
jns
add
mov
lahf
push
adc
dec
popa
or
sub
mov
ficomps
nop
call
xor
ds
ja
mov
test
mov
adc
inc
push
jb
movsb
fisubl
dec
xor
daa
mov
shll
dec
adc
mov
inc
mov
add
aas
rcrb
add
xchg
pop
nop
and
sti
notb
xlat
lahf
negl
xlat
and
rolb
cmc
adc
pusha
or
test
out
xchg
pop
and
dec
into
lods
int
sbb
in
inc
and
arpl
insb
jg
mov
jno
jo
jmp
cli
leave
xchg
cs
adc
push
movsl
xor
out
cmc
arpl
cmpsl
cvtdq2ps
repz
and
dec
adc
pop
sbb
in
jb
push
ljmp
lock
mov
sbb
mov
push
dec
lret
rcll
adc
clc
or
push
int
fs
pop
outsl
movsb
cmp
les
cmpsl
ret
mov
pushf
jle
das
ds
and
jbe
flds
bound
nop
mov
dec
fisubrs
lret
dec
loope
mov
inc
in
repz
in
jne
mov
dec
scas
test
loop
dec
pop
imulb
mov
jnp
mov
ljmp
rcrb
dec
movsb
push
fsubrl
add
iret
inc
mov
push
mov
jmp
inc
in
dec
aas
mov
sbbl
sbb
in
inc
mov
sbbl
cmp
scas
inc
andb
lea
add
mov
xchg
shlb
pop
pop
cli
dec
icebp
aad
hlt
pop
mov
pushf
mov
leave
sbb
mov
dec
in
xchg
mov
hlt
mov
daa
ds
hlt
outsl
dec
xor
push
fucomip
add
adc
cmp
fwait
mov
lret
pop
push
jge
pusha
jp
mov
leave
mov
xor
mov
add
std
dec
mov
inc
loopne
pop
outsb
sbbl
test
loopne
add
add
pop
cwtl
add
xchg
and
adc
mov
xorl
sub
dec
mov
test
shrb
pop
inc
dec
pop
test
ficompl
xor
imul
sub
nop
adc
inc
fdivrl
in
or
xlat
repz
push
fcoml
js
iret
push
xor
cmp
sbb
xchg
mov
repnz
vpsllw
xor
call
popf
push
out
cld
scas
leave
pop
lock
cmp
add
stos
mov
pop
aas
lret
push
andl
pop
out
jns
popf
mov
push
sahf
push
mov
xchg
lret
xlat
add
or
sbb
sbb
mov
insl
ret
and
push
mov
lods
inc
mov
loopne
push
and
ja
nop
icebp
mov
sarl
inc
sbb
lods
adc
adc
lcall
lcall
xchg
cmp
cwtl
sbbb
sbbl
mov
shlb
sub
in
or
into
mov
push
movsl
int3
adc
in
inc
dec
lret
sti
inc
mov
add
loope
and
inc
xchg
loopne
hlt
xor
jae
mov
ds
sahf
xor
sti
pop
push
shll
cmpl
cmp
roll
data16
xlat
pop
mov
in
push
pop
mov
sbb
xchg
out
xchg
sub
adc
cltd
adc
push
cmpsl
cltd
sbb
xchg
xchg
in
sti
or
dec
pop
sub
pusha
js
cmp
hlt
sub
imul
mov
adc
jge
lock
mov
movsl
les
cmpsl
xorl
ret
mov
andb
add
gs
cld
sbb
rolb
out
call
test
and
pop
insl
jno
mov
aaa
lcall
lock
scas
jg
adc
jne
test
int
in
ss
add
leave
mov
ret
sbb
mov
jnp
les
adc
xor
js
and
jns
flds
into
dec
out
in
into
mov
add
cs
pushf
pop
cmp
sahf
add
push
jno
and
std
je
int
and
fcmove
adc
idivb
xchg
lret
mov
mov
call
xchg
push
jmp
mov
jo
push
push
icebp
adc
mov
daa
jo
shlb
jl
js
push
lods
fstpt
iret
lretw
jge
dec
jg
jbe
fldcw
sbb
sbb
addr16
dec
lock
cmpsl
gs
xchg
enter
stos
sub
sahf
xchg
sub
notl
adc
mov
aad
xor
ja
into
daa
call
mov
test
fwait
mov
adc
sbb
dec
decb
jp
push
and
sarb
cli
in
movsb
and
das
xor
daa
and
cwtl
adc
mull
cmp
rclb
lods
imull
sub
fdivs
arpl
mov
in
mov
test
xlat
and
add
popf
scas
inc
xor
pop
addr16
sti
xchg
push
mov
xlat
sub
mov
cs
push
out
insb
xchg
test
fldt
xchg
popa
sbb
mov
cmc
adc
fsubrl
call
inc
xor
xchg
push
out
inc
add
push
sbb
or
inc
mov
mov
push
out
adc
jae
inc
inc
fldl
cli
das
addr16
bound
outsb
lea
xchg
cmp
dec
mov
push
jmp
adc
and
fildl
dec
jecxz
lock
add
dec
xchg
insb
imul
push
dec
mov
loopne
pushf
fldl
pop
add
pop
lahf
sbb
mov
sbb
jg
lods
mov
sahf
mov
push
popf
sti
mov
fucomi
mov
sub
push
ret
mov
mov
movsl
sub
jnp
jmp
sbb
test
xor
pop
call
add
repz
xchg
xor
je
and
dec
cmpsl
mov
cltd
xchg
cli
xchg
stos
mov
cmpsb
fcmovbe
cltd
sub
cli
out
inc
add
clc
in
out
mov
shl
mov
push
fwait
sti
cmp
lods
mov
addr16
shll
push
daa
popa
mov
jne
push
jmp
cwtl
cld
xchg
es
insb
add
inc
sbb
mov
sti
pop
lret
test
call
ja
push
into
adc
roll
dec
arpl
push
or
pop
fidivs
mov
sub
or
pushf
daa
xchg
mov
sarl
pop
int
mov
pop
dec
data16
lds
cmp
inc
pop
bound
das
cmp
jecxz
cltd
adc
push
sbbb
stc
xorb
pop
sarl
shl
push
fisubrs
inc
mov
inc
xchg
lods
ror
mov
leave
push
xor
out
sti
in
and
in
fdivrs
movsl
sbb
mov
cmp
scas
inc
sahf
push
xchg
icebp
nop
or
ss
inc
sub
call
test
lods
mov
ss
pop
out
sub
test
jecxz
int3
sti
push
jns
cmp
jno
enter
lret
jp
sbb
aad
pop
int
xchg
sub
cli
pop
xchg
or
push
mov
pop
out
pusha
int
lcall
sbb
pop
cmpsb
or
xchg
sub
inc
mov
jg
stc
push
pop
xchg
push
repz
add
rcl
sub
ss
add
mov
cmp
jno
push
ret
arpl
mov
and
sbb
mov
mov
ficoms
dec
cmp
mov
jp
ds
out
fwait
stc
popf
xchg
xor
and
sti
es
xchg
cmp
jecxz
sbb
adcb
jmp
jno
stos
jae
sub
and
fcom
cmp
sub
repz
dec
lock
rorb
xchg
cmpsl
leave
outsl
push
xchg
jmp
or
and
push
sub
push
loope
iret
mov
push
sub
or
mov
push
add
jns
add
iret
pop
mov
ja
jecxz
ret
push
cld
mov
ds
fmulp
mov
jmp
rclb
cmpsb
movb
and
in
mov
stos
mov
mov
push
shl
repz
sub
lods
xchg
lock
xor
xchg
cmc
mov
mov
adc
imul
mov
in
jg
in
dec
icebp
jp
mov
inc
xorb
cmp
xchg
nop
daa
mov
dec
mov
scas
cmc
cmpsb
insl
aad
xchg
cmp
cmp
idivl
add
dec
mov
jecxz
mov
xchg
sbb
xchg
or
jno
lcall
out
mov
aam
lcall
mov
icebp
mov
ljmp
jge
cld
xchg
ficompl
mov
sbb
mov
dec
inc
mov
ljmp
cmp
shlb
sub
push
mov
notb
cmpsb
arpl
hlt
mov
push
jo
or
xchg
sub
adcl
sbb
adcb
cli
adc
clc
ret
das
cmp
sbb
xor
sti
fwait
xlat
je
sub
jmp
add
mov
jle
pop
scas
push
lahf
inc
loopne
std
xor
inc
xor
sbb
mov
into
push
cltd
adc
cmp
ds
frstor
scas
lea
mov
and
push
sbb
and
xor
inc
std
mov
gs
mov
fiaddl
lods
imul
dec
mov
inc
scas
push
sub
xchg
outsb
aaa
inc
es
icebp
dec
cmp
test
fmul
jg
or
xor
out
xchg
repnz
ds
dec
dec
mov
gs
bt
cmpb
cli
xchg
sub
mov
or
insl
cmp
arpl
or
pop
mov
fs
xor
lret
insl
inc
sub
imul
mov
sahf
mov
mov
rcrb
xor
int3
pop
sbb
pop
les
inc
push
add
sbbl
dec
dec
pop
jp
and
leave
aaa
popf
push
rcll
int
hlt
loope
movsl
push
jmp
mov
fwait
pop
inc
jno
jbe
arpl
jo
jge
mov
stos
pop
sub
arpl
imul
or
in
jb
enter
hlt
test
inc
sbb
das
cmp
sub
icebp
mov
and
adc
test
jne
nop
lahf
test
push
fucomp
inc
lods
imul
mov
mov
lds
xchg
adcl
mov
sbb
xorb
mov
stos
stos
cmp
jbe
in
mov
pop
fsubrs
pop
shlb
pop
adc
nop
leave
movsb
inc
jo
and
xor
aad
cmpsl
inc
pop
jle
popa
mov
shlb
jle
sbb
shlb
addr16
cltd
fsubl
fsubr
push
xor
aam
int3
std
xchg
rcl
cmp
out
cmpsb
lret
lcall
sbb
int
cmp
mov
lods
pop
enter
fisubl
pop
sbb
inc
xchg
call
mov
mov
outsl
cli
mov
jp
dec
hlt
sub
cmp
outsb
loop
adc
pop
loopne
jae
and
dec
dec
dec
in
call
cwtl
pop
gs
clc
pop
lods
aaa
jge
sub
test
insb
push
mov
and
mov
cli
push
fidivrs
push
movsl
push
fwait
sti
sbb
cld
sbb
hlt
lcall
xchg
xor
or
gs
hlt
sub
cs
test
xchg
loop
lods
outsl
mov
lret
or
negl
jo
cmp
inc
push
fcomip
mov
mov
fucomip
lock
pop
add
rorb
jp
scas
inc
push
scas
lods
dec
xor
cmp
outsb
lea
mov
je
insb
pushf
scas
xchg
test
cs
js
stos
test
adc
and
xor
out
xchg
pusha
mov
dec
and
lea
out
mov
pop
mov
dec
xchg
xor
push
lea
jl
popa
sub
test
testl
mov
cltd
jb
sub
inc
inc
shrl
je
pop
push
mov
pop
sub
xchg
push
das
stos
cmpsl
nop
popf
cmp
mov
mov
hlt
sti
shll
or
out
cld
sub
pop
cmc
push
je
jg
in
fwait
test
sub
xor
xchg
cmpsl
incb
int3
jbe
in
xchg
lahf
dec
std
mov
cmp
test
cmp
xor
mov
mov
test
stos
aaa
fldenv
cmp
and
rclb
cmpsb
inc
out
inc
fisubrs
cld
pop
push
jmp
rcrl
pop
sub
dec
add
pop
loope
mov
mov
push
mov
mov
add
add
jnp
stc
andb
inc
outsb
add
fcoms
cwtl
gs
mov
dec
push
es
loopne
cmp
mov
in
out
fisubl
cmp
cmp
inc
dec
loopne
or
jg
popa
sbb
outsl
lds
loopne
fwait
xor
push
mov
and
cwtl
out
lea
dec
pop
cltd
je
jg
mov
mov
cltd
push
mov
dec
jg
ss
iret
data16
shr
adc
je
sub
dec
xchg
imul
out
mov
lods
mov
sahf
divb
in
ret
ja
cmpsb
push
pop
ja
clc
jp
cmp
sahf
insl
test
aad
and
push
xchg
and
aas
mov
jbe
sbbl
sbb
sub
cwtl
jmp
shll
icebp
mov
int
xchg
sub
lret
mov
fistl
test
push
orb
dec
lret
pusha
loope
test
push
repz
dec
adc
movsb
push
jmp
clc
ds
inc
clc
into
addr16
decl
pop
xor
lret
cld
sbb
dec
stc
inc
stc
loop
mov
mov
lret
push
push
pop
hlt
adc
stc
or
bound
pushf
sub
pop
test
xlat
lret
outsl
xor
cwtl
push
fidivs
cmc
fidivl
movsl
cld
pop
xlat
mov
cmpsl
std
jge
push
fsubp
movsl
psubw
cmp
or
dec
int
sub
test
lea
cwtl
daa
xchg
mov
sbb
aam
sbb
jl
inc
jle
mov
sbb
jb
adc
pop
negl
mov
jp
dec
ret
inc
aaa
fistpl
cmp
addr16
dec
rorl
push
into
cmp
jg
push
inc
xchg
pop
and
insb
int3
fsubp
aad
mov
in
setg
xchg
sub
in
stos
mov
imul
test
sbb
int3
dec
aaa
ret
xlat
jnp
add
sbb
mov
je
sub
mov
enter
gs
cmp
int3
dec
dec
jecxz
movsl
adc
or
cmpsl
sbbl
mov
fnstcw
std
shlb
jle
sarb
xchg
xchg
popf
push
push
int
mov
out
add
aad
fdecstp
jge
clc
pop
arpl
jl
inc
lret
sbb
imul
iret
xchg
cs
mov
sbb
adc
dec
in
ss
mov
enter
push
in
popa
mov
mov
pop
addr16
mov
pop
mov
mov
sub
fimull
and
subb
mov
imul
enter
sbbb
test
mov
in
popf
pop
mov
bound
jl
faddl
xor
leave
std
jae
stos
dec
and
pop
add
jae
sbb
jecxz
sbb
xchg
daa
insl
sub
push
mov
ret
push
cmpsl
push
mov
mull
dec
jns
cld
test
out
inc
sub
iret
push
call
js
pushf
mov
in
mov
push
test
or
xor
stos
sub
pop
cli
and
cmpsl
xchg
and
insl
push
mov
adc
inc
push
sarl
push
in
addr16
jle
mov
scas
push
jge
into
ja
xchg
pop
mov
push
xchg
divl
xchg
pushf
shll
or
sub
dec
in
mov
push
jno
outsb
mov
cmc
mov
or
mov
add
movsl
cmpsl
repnz
scas
repnz
jns
pop
adc
rorb
push
cmp
mov
sub
andl
insb
dec
cmpl
imul
xchg
test
icebp
jl
cmp
adc
add
sub
movntq
scas
int3
ret
mov
cs
leave
sbb
cmp
ret
daa
jae
pop
mov
pop
insl
ret
mov
push
lea
xchg
iret
aaa
data16
cmp
lock
mov
test
sub
cmpsb
clc
inc
jns
and
int3
test
addr16
mov
xchg
mov
sbb
jecxz
sbb
jae
inc
sbb
xchg
fsubrs
xchg
sbb
data16
test
repnz
adc
adc
sti
xor
mov
mov
adc
lret
popa
cltd
push
jp
loopne
jno
push
es
xchg
mov
add
cmp
lods
inc
fstp
or
es
xor
pop
pop
lahf
jae
pop
push
bound
jbe
into
and
stos
cmc
sbb
mov
push
xor
or
or
cs
fidivrl
movsl
cwtl
not
insb
mov
rclb
sarb
push
sub
pop
je
add
clc
out
in
cmpl
adc
mov
lds
pop
xchg
jg
adc
mov
lret
fs
test
or
mov
movsb
xor
fwait
inc
adc
loope
fwait
es
mov
add
adc
cwtl
insb
ss
popf
or
jmp
clc
insl
fwait
xor
jmp
mov
jge
enter
sti
xchg
test
lahf
push
jmp
jp
insl
cmp
cmpsl
fdiv
push
add
mov
fcmovne
stos
ficompl
adc
cmpsl
mov
sub
out
dec
jns
rorl
jge
push
push
out
cmpsl
add
pop
imul
mov
nop
aaa
push
push
das
jo
testb
cmp
les
pop
repnz
pop
test
jne
or
inc
sahf
arpl
or
jns
jg
outsb
incl
jno
insb
sbbl
jmp
cmpsl
cmp
mov
pop
jae
faddp
ja
adc
imul
inc
inc
jb
sbb
rorb
cli
xchg
sbb
push
loop
out
stos
cmp
scas
out
sbb
mov
leave
sbb
mov
in
icebp
or
jg
fstl
dec
add
je
pop
pushf
xchg
gs
or
loop
insb
sub
daa
ja
and
sarl
dec
ror
stc
mov
add
cmp
cld
pop
fwait
mov
iret
and
xor
xlat
sub
jns
movsb
stos
fidivl
fldcw
mov
sbb
movsb
fsub
push
pop
and
jmp
push
les
mov
dec
mov
mov
pop
adc
loopne
lcall
pop
inc
xchg
cli
adc
xchg
dec
cmp
or
sbb
push
jp
jl
pop
sbb
pop
pop
mov
or
push
mulb
fiaddl
add
pop
insb
sbb
adc
push
in
outsl
lcall
xor
popa
pop
fisubl
leave
mov
popf
outsl
rcrb
sarb
mov
jo
inc
dec
sub
sbb
ret
enter
mov
adc
sub
enter
out
sarl
xlat
push
or
adc
mov
inc
and
out
popa
mov
and
jae
lret
lods
in
ret
mov
add
test
icebp
fldcw
cmp
jmp
loopne
fistps
jmp
mov
cmp
sub
adc
inc
xchg
jo
jmp
jg
sub
inc
push
add
jle
dec
push
xor
dec
imul
jo
rorb
mov
orb
push
dec
aam
and
jge
aam
xor
fdiv
fsubrs
sti
out
data16
lea
loope
and
imul
pop
jle
ret
test
dec
hlt
les
dec
cmp
xlat
mov
in
sbb
inc
cmpsb
cmp
jg
mov
push
dec
fisttps
add
cmp
call
js
mov
dec
mov
push
mov
out
jno
adc
repnz
mov
dec
pop
imul
mov
jns
into
je
fwait
rcrl
sbb
notl
jo
push
imul
idivl
mov
xor
mov
cwtl
push
in
leave
sahf
cmp
or
xor
jle
les
add
outsb
xor
arpl
jecxz
inc
push
or
push
xor
and
jl
push
imul
int3
jne
jns
add
loop,pn
pop
mov
andb
aad
pop
mov
rcr
and
xchg
pop
lcall
cmp
nop
jecxz
test
cmc
sub
sub
push
sbb
ret
cmp
push
mov
lds
scas
scas
or
movb
std
dec
xchg
nop
add
or
jo
xlat
fisubrs
and
out
adc
jmp
jmp
or
sbb
jns
les
std
sahf
add
sub
lahf
je
xchg
push
dec
lock
and
pop
aas
leave
std
dec
mov
daa
lret
adc
ljmp
cmp
lods
mov
jno
dec
add
std
rcrl
pop
pop
fucomip
ljmp
lret
sub
dec
fldcw
lods
jnp
push
add
adc
cwtl
ljmp
mov
ret
pop
loop
sub
insb
add
mov
mov
icebp
cwtl
rol
sbb
das
test
mov
outsb
jo
fidivrl
fwait
repnz
or
js
cld
push
inc
imul
fisttpl
fucomp
add
mov
ret
hlt
pusha
cmp
rcll
or
jl
cmp
mov
push
fidivrs
push
pusha
push
pop
mov
mov
fisubrs
testl
insb
dec
jge
mov
ss
decl
jg
inc
and
loop
xchg
or
mov
out
pop
xor
jae
jg
loopne
push
jg
dec
bound
cmp
and
je
call
xchg
adc
jo
jecxz
in
xchg
or
mov
addr16
scas
cltd
adc
pop
inc
shlb
sbb
cmc
mov
fdiv
fs
adc
and
fnsave
lods
andl
push
test
sub
stos
inc
lahf
cltd
int
ficompl
xor
push
jnp
add
sbb
dec
pop
xor
jp
push
pop
push
sub
shr
popa
sub
dec
mov
dec
and
mov
stos
data16
loopne
add
mov
push
js
inc
icebp
pushf
sbb
lock
cli
jp
sbb
xor
cmp
enter
jg
dec
sti
imul
mov
fstps
mov
in
repz
pop
dec
fisttps
sbb
sub
sbb
mov
popf
stos
mov
fs
and
lock
out
jae
out
shll
mov
insl
jge
push
shll
mov
push
mov
mov
mov
aad
mov
and
mov
pop
mov
arpl
mov
leave
pusha
jle
inc
xchg
mov
jb
test
sbb
jg
push
mov
jg
inc
mov
sbb
out
lret
inc
sbb
in
sub
pop
in
xchg
sub
and
lds
ljmp
repnz
insb
push
jg
stos
inc
xchg
gs
cmpsl
enter
push
aam
add
sahf
push
dec
sbb
js
push
js
lods
fimull
popa
nop
ret
fimull
cmc
mov
out
sbb
std
mov
push
cld
dec
mov
xlat
xor
push
mov
fistpl
out
test
lods
pushf
mov
lret
pop
pop
jmp
and
pop
sub
mov
mov
adc
scas
pop
mov
mov
cmp
mov
fdiv
stos
inc
add
es
sbb
lahf
cmp
out
lret
lock
mov
xchg
mov
movsb
mov
pushf
daa
call
xor
incl
and
sub
cmp
push
arpl
punpckldq
and
or
je
dec
cmp
lock
scas
and
repz
mov
mov
or
inc
cmp
jle
adc
dec
fdivrs
sbb
push
mov
cmp
popa
fwait
mov
daa
pop
and
scas
cmp
in
push
jle
sbb
pop
dec
cmp
addb
xchg
adc
fwait
sub
fidivl
push
jae
imul
xchg
sbb
dec
test
leave
dec
outsb
pop
adc
adc
popf
xor
nop
add
add
push
jns
xor
or
decb
xlat
mov
xchg
mov
ret
fcoml
pop
adc
inc
xlat
jns
pop
sub
jle
sub
mov
fistps
cwtl
jne
mov
int3
pmulhw
mov
bound
sarb
adc
mov
arpl
mov
pop
jl
test
ljmp
lock
sub
push
jae
sbb
cmc
decb
pop
pop
test
daa
xor
xchg
xor
cmp
ffreep
popa
push
inc
outsl
mov
mov
in
push
sbb
in
aad
enter
je
in
enter
lock
cli
sub
jmp
xchg
xor
dec
bound
adc
pop
mov
fsubrp
xlat
xchg
jmp
dec
out
push
outsl
in
out
dec
xor
mov
lds
cmp
fsubs
push
mov
adc
push
pop
hlt
lret
int3
add
js
pop
xor
inc
jl
xchg
jns
dec
test
or
into
xchg
lea
pop
lcall
mov
aaa
mov
jne
shrb
adc
lods
fnsave
mov
jge
sti
xchg
fucomi
sub
and
xorl
xor
push
jo
cwtl
out
push
sub
push
popa
adc
arpl
dec
rcrl
std
or
or
xlat
out
mov
ret
mov
mov
flds
in
mov
mov
xchg
xorb
rcr
popf
cld
or
iret
je
xchg
xor
cmp
sub
scas
mov
xchg
jb
rorb
jns
sub
cmpsb
lret
stc
in
loopne
xchg
jl
xchg
mov
push
sub
push
in
sbb
sub
test
rcrl
insb
repz
dec
xchg
or
das
sub
push
or
cmpsl
push
adcl
std
out
clc
dec
test
add
imul
and
adc
rcr
jne
popa
cs
sbb
imul
lods
aaa
cld
dec
lock
cld
pushf
aas
adc
jbe
dec
loope
inc
addr16
int
loopne
xchg
adc
sub
loope
mov
dec
test
inc
sub
call
and
popf
xchg
mov
sbb
and
mov
jbe
inc
data16
lcall
xchg
inc
dec
mov
call
lds
iret
pushw
testb
mov
cmp
outsb
mov
jnp
jo
movb
int
jp
mov
lods
pop
xorl
sub
cmp
and
add
and
dec
lock
sahf
fimuls
adc
inc
push
add
mov
outsl
pop
and
push
or
push
jmp
fwait
cmc
xchg
xchg
leave
xor
jnp
add
sarl
fsts
mov
jge
repz
push
jle
packssdw
pop
sub
enter
jp
jl
pop
out
sub
js
dec
pop
out
push
add
xacquire
cmpsb
in
inc
adc
xchg
inc
sbb
mov
les
sub
push
cmpsl
inc
pop
fnstcw
lcall
pop
xor
je
pop
jbe
xchg
cmp
test
inc
and
cld
xor
jp
jne
rcr
xchg
lds
fldt
scas
pop
jno
jg
cmp
mov
cs
aas
push
rol
stos
cli
lock
imul
loopne
shr
ret
pop
xor
sub
xor
icebp
mov
loop
out
xchg
xorl
mov
dec
bswap
dec
xor
mov
sbb
mov
decb
push
xchg
cmp
in
ficoml
pop
mov
call
iret
outsb
jl
call
movsl
mov
arpl
dec
in
out
fldcw
mov
pop
sub
jbe
out
or
out
cli
incl
scas
bnd
and
jg
les
js
mov
popf
pop
scas
mov
testb
mov
cmp
adc
ficomps
test
jbe
xor
ror
mov
add
cmp
pop
push
dec
pusha
jl
dec
pop
fwait
xchg
cmpsb
adc
es
jmp
sub
jns
and
and
das
insb
add
mov
xchg
hlt
mov
test
rcpps
js
cmp
popa
mov
sbb
inc
dec
xchg
setg
gs
ficompl
mov
sub
repnz
dec
jmp
fidivs
subl
enter
cmp
adc
ds
fcoml
nop
add
icebp
insb
adcl
in
xchg
sbb
or
lahf
fisubl
push
subb
sub
push
sbb
lcall
sub
mov
pop
or
fdivp
sbb
pop
lcall
mov
or
ret
push
sarb
outsl
insl
ljmp
pop
fidivs
jle,pt
scas
dec
cs
sahf
mov
xchg
sub
sbb
xor
mov
mov
jno
xchg
jo
add
xchg
sub
mov
sub
cld
mov
xor
icebp
stos
leave
pusha
sbb
xor
pushw
dec
cmp
out
insl
sbb
dec
daa
add
dec
mov
add
les
test
pop
dec
andb
jb
push
xchg
add
loope
add
sbb
sahf
mov
out
dec
jb
sbb
ja
sbbl
push
jecxz
cmp
into
lods
into
fdivl
push
negb
pushf
and
sbb
cli
or
outsb
enter
iret
lods
adcb
xor
in
push
ss
jge
jecxz
xor
test
inc
mov
cwtl
pop
bound
imul
rcrb
in
lock
push
cmp
or
lods
das
aaa
cld
push
sbb
sbb
int3
xor
ret
adc
xor
imul
push
sbb
xor
sbb
popa
dec
std
or
or
scas
stc
int3
xchg
rorl
loop
mov
mov
fmuls
add
pop
icebp
stos
and
mov
adc
dec
dec
xor
loope
sahf
adc
orb
adc
rolb
fsubrs
dec
dec
mov
pushf
out
sahf
lea
sahf
xchg
cmp
xchg
cmp
add
cmp
in
jmp
xchg
sbb
cltd
pop
stos
adc
int
jmp
inc
adc
pop
ret
out
aaa
mov
adc
pushf
ja
pop
mov
data16
pop
add
pop
es
inc
push
lret
data16
test
xlat
mov
int
jmp
movsb
and
cmp
cmp
jmp
add
pushl
mov
mov
int
jge
jg
mov
add
pop
sbb
sub
dec
sbb
jns
popf
xor
test
pop
fidivrs
mov
add
mov
mov
mov
shrl
xchg
fnstenv
in
stos
lret
pop
sbb
mov
xor
cmp
nop
stc
shrl
inc
incl
hlt
ret
pop
jmp
rol
and
negl
imul
popf
add
dec
iret
loop
roll
pop
mov
add
ret
gs
jmp
pop
inc
inc
clc
lods
out
jg
sarl
mov
add
sub
in
loope
mov
add
mov
js
pop
jne
ret
xchg
std
les
or
mov
les
in
xchg
jne
push
cmpsl
mov
int
add
hlt
movsb
or
imul
addr16
mov
mov
xor
mov
movsl
xchg
pop
pop
stc
iret
ss
scas
mov
jl
inc
xor
popf
lret
dec
ja
jg
mov
xchg
cs
aam
sahf
xor
sbb
nop
addr16
lahf
lret
loope
add
repnz
jg
xchg
xor
je
mov
xorl
sub
xor
push
sub
jg
cmc
imul
insb
pop
mov
jne
pop
xchg
pop
mov
dec
sub
lcall
imul
aad
mov
xchg
pop
aad
xchg
mov
mov
nop
mov
push
xchg
sub
jmp
dec
or
mov
adc
pop
out
mov
imul
xchg
jmp
int3
test
gs
jbe
lahf
xchg
mov
xchg
scas
adc
cmp
sub
loopne
mov
int
cmc
stos
push
mov
pushf
hlt
fistps
ja
call
jno
sar
add
std
repz
data16
insb
ret
mov
das
movsl
imul
jp
cmpsb
iret
jne
xor
aad
testb
sti
and
pop
push
dec
sbb
nop
mov
popf
mov
rolb
hlt
or
cld
mov
iret
lds
scas
dec
mov
shlb
movsl
dec
pop
cmc
insl
xchg
out
stc
xchg
lret
pop
hlt
cmp
cltd
push
outsb
in
mov
jbe
push
mov
inc
inc
push
jb
and
xor
adc
sbb
call
in
mov
sahf
inc
out
mov
ret
leave
loop
and
cmp
pop
jl
jns
cs
in
mov
xchg
cli
int
out
push
out
sub
mov
leave
lret
hlt
fnstsw
leave
mov
sub
sbb
push
inc
mov
xchg
call
int3
adc
dec
int
cwtl
and
sub
stos
dec
xchg
icebp
lds
call
jl
js
adc
dec
xchg
dec
xor
mov
aas
popf
loope
not
mov
lret
xor
push
in
frstor
pusha
dec
jns
pop
mov
jb
xchg
or
shlb
sarb
mov
mov
add
sub
xchg
and
push
xor
pop
std
add
sub
idivb
mov
pop
dec
pop
decb
pop
jp
mov
int3
adc
int
int
jmp
lret
sbb
jae
imul
pop
sub
dec
cmp
push
xor
into
lock
mov
imul
movsb
rolb
xor
cwtl
or
jnp
or
test
fs
xor
add
rclb
in
jge
fisubrl
xor
sti
xchg
sub
sub
orl
jnp
fmuls
adcl
subl
movsb
xlat
push
mov
insb
xchg
jno
cld
insb
pminub
orb
sti
xchg
in
add
repnz
testb
daa
sahf
and
js
inc
fmuls
cmp
call
arpl
mov
dec
jmp
pushf
sub
lcall
pushf
ljmp
call
push
xor
mov
cmpsb
js
or
jp
dec
mov
pop
mov
dec
cmpl
xor
pop
xchg
outsl
aaa
cmpsb
or
rorl
xchg
repnz
loop
push
test
mov
aaa
test
mov
xor
out
out
inc
les
dec
jecxz
rorl
lret
cmc
adc
in
fistpll
jnp
lods
and
pop
popf
pop
jo
mov
adc
pop
insl
adc
mov
inc
adc
push
push
mov
outsb
or
mov
pusha
mov
pop
jle
mov
xor
xor
call
sbb
or
lods
lea
ffree
cmpsb
and
int3
fdivrs
push
repz
add
adc
mov
in
mov
push
das
ljmp
jmp
out
ljmp
fidivrl
aam
jecxz
cmp
insb
push
rol
pop
add
xchg
int
xchg
imul
dec
mov
dec
sub
ficoml
out
or
pop
lods
push
das
xchg
mov
test
pop
push
cwtl
cmp
push
test
test
xor
cld
push
cs
mov
repz
movsl
cmpsb
cmpsl
adcb
mov
cmc
lret
sti
sub
adc
jp
lcall
adc
je
iret
add
push
jb
insb
jo
xchg
dec
mov
cmpsb
clc
int3
cmpsb
hlt
ret
or
mov
out
add
ss
add
jg
mov
push
dec
jae
sbb
jecxz
cmp
add
sbb
or
mov
leave
xchg
xchg
jo
xchg
ds
ficomps
or
mov
outsb
incl
add
and
inc
shll
jne
out
adc
inc
mov
lahf
ja
fistps
mov
addr16
jb
stos
mov
cwtl
xor
adc
cmp
push
mov
nop
ljmp
dec
scas
je
jecxz
jb
shrb
sahf
xor
sahf
mov
mov
xchg
cltd
xor
fldcw
mov
lds
mov
adc
test
hlt
lahf
test
cmp
push
or
mov
rcll
test
jecxz
pushf
sbb
cmp
xchg
hlt
dec
lea
jb
sbb
sbb
sbb
pop
filds
mov
xchg
andb
data16
test
loop
mov
cmpsb
test
or
in
test
sub
xchg
stos
lret
scas
jno
clc
flds
lods
mov
jge
mov
fcmovbe
insb
or
cs
mov
movsl
mov
jmp
sub
shlb
adc
adc
jg
push
xchg
inc
fcmovb
popa
lds
jp
pusha
jae
adc
jmp
imul
stos
cmp
mov
shld
shrb
xchg
movsb
jno
xchg
mov
cltd
stos
out
cmc
lahf
jae
sbb
ss
inc
push
aaa
adc
mov
fistl
pop
mov
push
fadds
cmpsb
pop
jle
jbe
mov
fistl
mov
sub
test
mov
xchg
fildll
mov
mov
leave
roll
imul
push
pop
pop
in
inc
xchg
sbb
push
mov
bound
jb
push
sti
das
or
nop
sbbl
adc
jl
mov
cmp
mov
test
lea
ja
cmp
ds
mov
pusha
inc
ficoms
mov
mov
repz
cmp
lds
sti
xor
ds
loope
push
call
lret
mov
add
jae
mov
dec
push
sti
fcmovb
add
add
out
lods
popf
inc
lea
dec
mov
inc
imul
cmp
addr16
xlat
outsb
jbe
push
mov
neg
cmp
pop
clc
xor
ljmp
stc
dec
xor
jbe
ds
mov
out
push
xor
sbb
push
push
cmp
js
pop
cmp
mov
push
out
and
je
cld
shlb
add
sarl
lods
sarl
sub
daa
pop
and
cltd
aas
push
mov
fcmovu
std
mov
icebp
stos
lods
jb
pop
fstpt
jp
rcrb
dec
leave
pop
xor
sbb
cli
inc
push
out
andb
dec
sub
jo
leave
inc
xor
xor
sbb
push
or
mov
mov
pop
cmpsb
insl
scas
sarl
mov
mov
gs
xor
cs
mov
pop
nop
inc
repz
jne
mull
dec
aad
push
xchg
mov
cli
jecxz
push
mov
pop
lods
inc
add
and
pop
testl
stos
jns
cli
mov
adc
sub
aam
fisttpll
mov
gs
pusha
inc
in
dec
incb
sub
in
test
jnp
fcoms
or
adc
cmp
fdivs
test
dec
jmp
or
arpl
lret
repnz
mov
sbb
jle
sbb
add
mov
out
pop
or
xor
adc
adc
insb
adc
popf
loope
ljmp
frstor
push
adc
pusha
jmp
loop
mov
xchg
mov
notb
adc
lcall
setle
inc
xor
jnp
and
fsubl
and
cld
xor
test
loopne
mov
mov
sub
cltd
iret
rorl
loope
mov
into
data16
jl
pushf
dec
iret
in
adc
dec
add
je
fbld
rcrl
mov
inc
test
push
fcomps
push
xor
cmpsl
in
shrb
test
add
fidivs
lods
lods
loope
xlat
in
pop
hlt
sbb
outsl
push
popf
stos
mov
loope
inc
and
fadd
icebp
and
imul
adc
and
enter
cld
push
std
ret
cmc
xor
addr16
gs
js
push
xor
ffree
jp
push
mulb
test
jle
mov
divl
sub
sub
cmp
add
jle
fisubrs
add
inc
push
lahf
mov
and
xor
neg
in
loopne
out
rorl
cs
fists
repz
or
mov
jmp
movsl
mov
push
sub
dec
cmp
fbstp
push
pop
in
dec
popa
std
or
pushf
cmp
or
dec
in
mov
leave
mov
pop
lock
inc
sbb
sub
in
jl
mov
imul
pop
cmp
mov
cmc
in
xchg
xor
push
adc
pop
mov
stc
testl
mov
ja
mov
pop
repz
jp
adc
jno
jne
pop
inc
add
in
stos
ja
scas
pop
push
jne
pop
and
mov
in
and
xor
or
mov
jle
sbb
push
mov
xor
cwtl
test
sahf
jbe
sub
je
or
sbb
mov
jo
mov
xchg
dec
enter
popf
popa
data16
jmp
sbb
scas
push
insb
cmp
xlat
fwait
inc
push
dec
pusha
test
stos
push
dec
inc
out
and
jne
aam
mov
andb
adc
int3
push
sbb
out
mov
mov
mov
mov
les
adc
mov
decb
add
test
mov
adc
fildl
aam
ficoml
cmp
or
sbb
andnps
int3
movsl
test
mov
movsl
xlat
dec
pusha
cmp
scas
pop
dec
icebp
sbb
out
push
lahf
mov
xor
mov
cmpl
and
xchg
test
inc
mov
push
pop
add
fmull
and
jecxz
xchg
adc
ds
loope
repz
xchg
pusha
notl
lret
xlat
mov
movsl
and
loop
test
dec
xchg
aam
outsl
fmull
jl
into
fidivrs
mov
or
mov
inc
jns
popa
stos
je
cmc
mov
ds
repnz
aaa
into
xor
mov
or
int3
int3
nop
sub
mov
aaa
insl
imul
aad
cmp
repnz
movsb
test
push
mov
es
fisubs
add
jmp
and
ret
fcmovne
fiadds
int3
icebp
insl
ss
loopne
pushf
aam
out
fdivr
mov
ret
pop
cli
ja
into
adc
lcall
push
xor
daa
mov
adc
pop
imulb
adc
cwtl
xchg
mov
pop
cmp
add
lea
adc
jbe
jno
pop
pusha
pop
sahf
xchg
jg
ror
js
scas
mov
aad
add
in
mov
mov
cmp
outsb
fs
add
jb
push
xchg
outsl
cmp
je
repnz
sbbl
imul
mov
push
mov
xlat
pop
out
sar
jmp
jnp
inc
fildll
shl
data16
push
xlat
sti
and
xchg
cmpsl
mov
shrl
out
push
xchg
jne
mov
mov
lds
test
push
decl
repnz
int3
mov
not
loopne
add
mov
lret
decl
or
adc
mov
sbb
mov
lcall
aas
dec
jb
out
je
outsl
lea
mov
stos
arpl
fidivs
data16
dec
aad
xlat
sbb
scas
gs
lds
js
cltd
and
icebp
call
jb
test
movsb
pop
xchg
ret
push
int
or
cmp
mov
fnstcw
jne
lret
rclb
lret
unpckhps
xchg
xchg
mov
jecxz
sub
mov
loop
adc
outsb
or
insl
lret
xor
and
xor
mov
dec
js
sub
movsl
jl
dec
mov
ljmp
mov
or
cmp
sub
dec
lods
cmp
insb
pop
ss
ds
xchg
test
sub
stos
inc
jp
pop
jp
pushf
pop
into
xor
cmp
xor
dec
ret
aaa
and
test
cmpsl
pop
call
sub
sbb
dec
pop
arpl
daa
sub
dec
mov
fwait
inc
sub
cs
add
fdivrs
push
push
fsubs
daa
lahf
pop
fiadds
loop
inc
xor
fldcw
rcrl
sub
cld
or
cmp
ja
popl
out
cli
popf
sbbl
mov
xchg
mov
stc
in
xchg
mov
ds
outsl
cltd
pop
push
xchg
loopne
ss
ljmp
mov
pop
sub
loop
cmp
pop
loopne
pop
adc
mov
addr16
shll
add
or
push
out
push
jmp
in
inc
jo
js
sti
or
and
ljmp
test
rep
mov
out
dec
mov
mov
int
cmc
shrb
jo
shrb
cmp
or
repnz
cmp
pop
cld
add
xlat
in
adc
sub
add
and
mov
aaa
incl
lock
fnsave
ret
and
mov
test
and
push
adc
imul
lret
out
cltd
mov
dec
fidivrs
pop
add
push
aas
movl
stc
idivl
xorl
test
xor
xchg
mov
add
cli
dec
and
push
push
mov
cmp
xchg
mov
idivl
hlt
mov
mov
xor
int3
inc
loop
dec
xchg
sub
scas
mov
jmp
push
inc
adc
icebp
or
ret
jnp
insl
mov
jp
movsb
adc
add
dec
ficompl
repz
sub
outsb
push
jge
sub
data16
sti
xchg
pop
jne
cmp
inc
mov
sbb
aas
out
divb
lock
jns
jge
and
dec
loop
and
aam
and
out
push
ds
outsl
out
iret
or
inc
mov
mov
rclb
lea
dec
inc
push
jae
imul
mov
mov
and
inc
and
adc
nop
sti
rcr
mov
aas
mov
arpl
push
xor
stc
ss
imul
mov
sub
jp
rolb
test
mov
outsl
mov
push
das
pushf
sti
and
pop
push
call
lds
test
cmp
pop
inc
fimull
or
mov
sarl
xlat
sub
inc
jle
dec
es
xor
mov
test
jp
shr
cmpsb
or
lret
cmp
dec
loopne
mov
inc
cmp
iret
and
lret
imul
xchg
sbb
mov
xchg
or
dec
cmc
out
jle
out
scas
lahf
push
popf
add
mov
aas
mov
adc
or
cs
inc
mov
in
jo
data16
lret
testb
xchg
cs
hlt
enter
loop
jnp
fwait
subb
pop
pop
adc
mov
ljmp
lods
clc
mov
mov
xor
cmp
aam
mov
push
xor
lahf
es
daa
lock
mov
mov
cmp
and
push
mov
xchg
hlt
mov
rcll
pushf
mov
pop
mov
cmc
or
sarl
nop
mov
aam
repz
lcall
adc
and
and
adc
notl
lods
shl
andl
push
sahf
xlat
sub
cmp
aaa
pop
jne
leave
js,pn
xchg
push
pop
lahf
sub
jns
fwait
sub
fsts
call
xchg
xor
pop
ds
sbb
sub
test
ret
test
cmp
inc
mov
popa
push
cli
push
fcmovu
mov
lods
inc
sub
xchg
lcall
mov
cmp
sub
lahf
aad
repz
hlt
push
decl
out
mov
out
cmp
ja
mov
fimull
and
stos
inc
fsubrs
mov
push
testb
jle
add
add
mov
sahf
xchg
sbb
inc
pushl
push
lret
push
popa
je
pop
pop
loope
jno
lods
int
fcmovbe
and
icebp
jle
xor
movsl
add
into
or
in
pop
loope
push
xor
fsubrl
lods
cs
inc
fisttps
call
dec
mov
jmp
adc
or
repz
xchg
jge
pop
and
les
add
addr16
frstor
rcrl
xchg
fldl2t
icebp
sahf
lcall
popa
sub
stc
inc
sbb
mov
in
push
inc
xchg
js
je
and
fs
mov
adc
sbb
arpl
ja
mov
add
or
sub
int
sub
shlb
add
stos
test
pop
stos
ljmp
sbb
add
stos
addb
dec
sbb
xchg
testb
int3
sahf
movsl
ret
iret
in
add
loop
into
repnz
fbstp
out
mov
dec
in
aam
insl
out
lods
fsubp
sub
dec
add
mov
adc
and
lods
out
daa
lods
mov
arpl
jecxz
mov
scas
push
cmp
mov
pop
xorl
js
enter
aam
adc
sub
jne
mov
std
out
das
and
jge
jae
and
mov
cwtl
inc
mov
mov
ret
cmp
stos
dec
cwtl
mov
movsl
mov
mov
mov
add
shrl
inc
das
jp
in
xor
push
fidivl
mov
stc
nop
push
fwait
mov
jns
in
repnz
js
mov
jl
lods
push
pop
movsl
rolb
xor
xchg
jl
loopne
cmp
imul
adc
jle
dec
out
cmp
imul
aas
dec
push
xchg
jbe
ret
in
mov
xor
and
out
stc
aam
jae
lods
ds
in
outsl
pop
inc
push
popl
imul
enter
push
inc
lretw
arpl
jo
sbb
jo
andb
pop
inc
pop
into
clc
cmpsl
out
inc
xor
xor
es
popf
or
scas
stc
lahf
loope
rcrb
pop
ljmp
outsl
mov
push
divb
mov
push
jmp
xorl
mov
jbe
push
pop
pop
pop
call
cmp
shll
mov
jb
cmp
sub
fdivs
js
xchg
into
aas
enter
or
jecxz,pn
push
iret
ss
adc
xchg
sub
popl
sub
mov
mov
cld
sbb
rcrl
and
les
add
loopne
mov
xchg
out
jge
jne
je
pop
imul
or
stos
lcall
adc
icebp
xchg
lods
push
outsl
mov
fsubr
ret
call
daa
mov
cwtl
fildl
dec
jne
jmp
jl
inc
bound
xchg
push
call
je
repnz
bound
jg
fstl
pop
mov
adc
jecxz
dec
xor
pop
push
push
cld
jg
std
fbld
xchg
jo
pop
scas
mov
inc
popa
pop
jl
push
sub
fwait
mov
add
and
lods
shlb
ss
es
stos
push
jae
das
adc
or
xlat
inc
sub
pop
rorl
jmp
xchg
xchg
sbb
cs
xlat
in
mov
dec
add
jno
dec
push
aam
in
lret
cmp
pop
enter
adc
in
ds
lods
fsub
push
xor
cmp
pop
daa
cmp
push
push
into
xchg
mov
das
fwait
xor
nop
daa
mov
je
jp
pop
shlb
fwait
int
push
ret
jae
stc
lea
imul
jmp
lds
lock
xor
fisubs
mov
out
mov
jno
and
jp
hlt
push
dec
mov
movsl
xchg
hlt
rolb
aam
repnz
lds
fidivs
mov
sti
push
cld
xchg
mov
lret
jg
jb
call
push
fimull
cs
sahf
std
mov
mov
jle
xchg
jg
xchg
or
sub
movsb
cmp
stos
mov
aad
aam
dec
lea
adc
aas
out
cs
mov
lds
xor
cld
xchg
decl
jnp
and
idivl
clc
jo
sbb
in
xorb
inc
jmp
arpl
es
and
mov
shll
add
call
test
inc
mov
stc
jo
push
mov
or
sti
cmp
enter
das
icebp
add
and
rorb
sbbl
pop
clc
aas
mov
xor
ficomps
cmpb
cmc
mov
jbe
jno
xchg
inc
cmc
fsubs
fsubrs
pop
mov
push
pusha
jp
out
pop
jne
push
aas
shr
addb
mov
cltd
ljmp
and
scas
sbb
pushf
outsl
lcall
add
inc
mov
fwait
scas
xor
repnz
cld
std
sbb
test
dec
imul
mov
cmp
and
ret
lret
clc
out
gs
mov
fildll
cmpsb
ljmp
push
or
cmpsb
lcall
scas
mov
fwait
dec
mov
js
sbb
cmc
jl
jnp
arpl
ffree
dec
in
adc
mov
daa
out
pop
cs
loop
movsl
push
ljmp
jno
gs
lea
xchg
cmp
insl
orb
mov
outsl
loope
shll
lock
xchg
xor
loopne
xchg
sub
mov
xor
mov
xor
pusha
movsl
or
outsb
mov
push
leave
rcrl
inc
mov
inc
popf
sub
int3
mov
push
jge
xor
cmp
mov
xor
sbb
outsl
je
add
push
pop
or
pop
loopne
or
movsl
rorl
pop
jmp
fnstenv
hlt
lret
adc
cmp
cmpsb
mov
movsb
cld
cltd
aam
sub
lds
jl
xor
loopne
cmp
adc
inc
aaa
or
mov
sahf
dec
and
dec
dec
lahf
mov
cmp
maxps
push
in
xor
out
mov
ss
sub
pop
fucomi
andb
and
sbb
pop
sbb
sub
xchg
dec
mov
cmc
or
pop
add
mov
sub
xchg
fldt
jge
xorl
sub
gs
out
ja
and
cmpsl
cmp
push
pop
xor
call
or
popf
jns
push
jmp
mov
mov
mov
in
dec
sbb
xchg
sbb
xor
popf
mov
lcall
dec
mov
rorb
pop
adc
inc
jle
gs
push
jmp
adc
cmp
repz
mov
push
push
sub
repz
bound
shr
push
xchg
cmp
pusha
cmc
mov
pop
xor
pop
mov
and
inc
adc
and
jae
adc
mov
clc
inc
xor
and
lods
inc
adc
lds
aas
adc
and
cmc
lea
cmp
testl
int3
adc
inc
lods
sub
lea
fistl
ja
nop
in
push
mov
adc
stos
push
pushl
je
cld
lcall
in
add
xchg
jnp
jb
dec
loop
scas
xchg
xor
ljmp
sbb
inc
push
mov
lods
iret
jmp
or
adc
fwait
xor
xchg
out
test
fcmovbe
insl
push
mov
les
ficoms
shll
js
add
inc
pop
mov
pop
dec
sub
jns
inc
mov
cltd
data16
adc
push
sarb
mov
in
test
aad
pop
test
sub
les
rcll
or
jbe
add
add
outsl
in
push
in
inc
or
push
lock
lods
dec
clc
int3
jae
in
out
mov
add
aaa
pop
daa
sbb
clc
dec
dec
xor
sub
mov
mov
dec
mov
jmp
pop
inc
fnclex
stc
fistpl
sbb
andl
ljmp
mov
subl
fs
movsl
leave
adc
std
data16
inc
pop
pop
and
push
shrb
mov
mov
sarl
sub
jnp
cwtl
das
ljmp
cmp
mov
movsl
aad
arpl
cmp
mov
loopne
je
mov
loope
inc
mov
pop
roll
or
lock
sbb
mov
pushl
jo
or
add
ret
inc
xchg
jae
into
mov
sbb
jp
fistl
xchg
jmp
test
add
stos
mov
and
addr16
lds
dec
jae
inc
inc
pop
xchg
mov
sbb
roll
movsb
push
subb
cmp
lea
jl
insb
cmp
ror
and
outsb
add
notl
cli
pusha
fsts
cmpsl
push
jge
mov
fnstenv
jge
pusha
sarl
ffree
loop
lds
repnz
inc
cmp
jmp
rcll
test
push
jnp
test
leave
jecxz
movsb
push
daa
inc
fidivrl
cmpsb
add
xchg
fdivrs
or
sub
mov
mov
movsb
jecxz
ror
adc
stos
jmp
aaa
dec
fbstp
jb
add
jecxz
xor
sub
push
jae
cwtl
mov
cmp
xor
sub
adc
jae
push
icebp
popa
jge
mov
add
cmp
daa
adc
aas
lret
adc
sbb
xchg
scas
orl
sub
loop
fmull
lods
rcll
mov
stos
scas
out
jno
lcall
dec
add
insl
sbb
call
es
testb
jmp
scas
adcl
jle
ds
pop
push
cmp
stos
xor
mov
xchg
or
ficomps
cmp
gs
insb
lea
add
loope
xor
xor
xchg
sub
mov
fsubl
mov
cvttps2pi
fs
and
push
bound
mov
rorb
lock
loope
mov
mov
pop
lock
in
and
cmp
addr16
or
mov
pop
sti
int3
pop
ss
pop
xlat
imul
scas
addr16
fdivrl
and
je
dec
push
mov
sbb
insb
cmp
fiadds
fimuls
lds
imulb
inc
insl
inc
in
jo
adc
lret
bound
mov
sbb
out
mov
sbb
ret
mov
sbb
push
mov
push
mov
rorb
fs
clc
jae
push
dec
jp
decl
inc
push
cld
dec
adc
repnz
push
pop
mov
pop
or
ret
and
or
adc
add
je
jno
cmp
pop
push
xchg
and
mov
ret
mov
loop
inc
adc
adc
and
push
out
mov
fs
mov
fisubrs
enter
add
sub
push
enter
dec
add
push
jns
push
push
ljmp
adc
adc
xor
sbb
call
pop
jl
out
add
ficomps
cmpsl
outsl
jbe
mov
ja
mov
dec
leave
movsl
jb
cmp
test
pushf
repnz
jle
xchg
rcrb
fstpt
or
xchg
mov
adc
repnz
xchg
and
cmp
lods
cvtps2pd
sarb
std
aas
or
jae
fs
out
or
arpl
inc
popa
cwtl
stos
inc
into
push
xor
sbb
cs
pop
pusha
pop
js
dec
mov
or
arpl
pushf
and
das
pop
call
inc
pop
pop
js
xchg
in
push
xchg
mov
dec
mov
test
adc
popf
add
fildl
into
pop
mov
add
or
mov
es
adc
out
push
pop
xchg
rorb
loop
aad
inc
testb
cmp
out
dec
pop
xchg
sbb
sub
or
fistps
subl
xlat
cmp
jmp
and
xorl
mov
adc
arpl
bound
mov
add
test
dec
loope
dec
jbe
jg
lock
sti
sahf
dec
pop
insb
sub
imul
push
inc
outsl
mov
inc
shlb
mov
sarl
jb
sub
dec
pop
or
cmpsb
out
out
call
cmpsl
xchg
and
loop
and
push
dec
and
clc
das
pop
lods
pop
inc
push
shll
subb
out
decl
sub
sbb
pop
jg
bound
add
adc
xor
jmp
pushf
cmp
fcomi
test
xchg
cmc
cmpsl
mov
push
pusha
movsb
push
js
rorl
push
or
aas
stos
ljmp
bound
jb
pop
mov
add
js
mov
ret
fildl
or
dec
sti
scas
fsubl
aas
stos
jge
loope
scas
rolb
sahf
enter
mov
lods
lods
xlat
mov
pop
iret
aas
mov
repz
iret
arpl
dec
cld
iret
xor
inc
shll
add
sbb
out
and
mov
std
pop
leave
and
pop
jbe
sub
pop
mov
sbb
and
mov
or
mov
mov
out
mov
in
aaa
mov
das
les
test
and
inc
mov
mov
adc
cli
dec
xchg
cmp
adc
sub
sub
sub
loopne
jne
sub
xchg
fwait
and
loopne
jo
push
int3
outsl
pop
je
std
adcb
mov
push
in
lock
add
test
cs
clc
push
cmp
sbb
dec
mov
int3
cmp
jle
sti
fisubrl
and
mov
test
or
jo
sub
dec
std
lahf
pop
mov
fs
mov
xchg
stc
nop
adc
repnz
jg
gs
dec
mov
cmp
fmull
hlt
ljmp
movsl
sbb
test
arpl
dec
out
add
mov
push
punpcklbw
scas
int
sbb
add
mov
insl
cld
adc
pushf
xor
ljmp
lahf
adc
movsl
bound
lods
adcl
or
mov
jb
sub
xchg
mov
jle
andb
enter
ret
pop
dec
jmp
mov
rcrl
shr
in
sbb
cmp
mov
daa
inc
mov
mov
mov
xchg
and
clc
xor
popl
stos
dec
dec
push
popf
incl
and
jl
icebp
lcall
push
or
jmp
inc
mov
addl
out
mov
sbb
inc
cs
mov
fimuls
pop
lds
push
icebp
push
xchg
add
sbb
inc
insb
out
cmpsb
mov
xchg
ret
icebp
in
push
leave
mov
jo
xor
push
insb
inc
dec
out
fwait
pop
push
sahf
test
xorl
inc
sti
test
mov
jns
in
xchg
mov
mov
scas
mov
jnp
imul
popf
aas
idiv
mov
es
adc
mov
mov
inc
jo
mov
inc
fiaddl
adc
sub
and
pop
outsb
cld
add
pop
pop
outsb
xchg
inc
insl
scas
jb
mov
mov
movsl
sbb
and
movsb
push
lock
mov
cmp
jo
pop
mov
jne
shl
out
fstps
ss
inc
add
mov
pop
and
mov
jae
adc
ss
inc
out
fidivs
sbb
cmpsb
mov
pop
clc
shlb
cli
xchg
cmp
into
filds
lods
add
dec
xchg
sbb
arpl
mov
push
adc
push
mov
sahf
icebp
pusha
and
adc
push
cmp
in
mov
cmp
jle
stos
popa
jge
sarl
inc
in
mov
stos
lcall
fwait
jne
inc
inc
xchg
ss
dec
pop
and
movsl
inc
mov
xor
cmp
dec
pop
cmc
dec
sbbb
dec
sahf
mov
add
inc
sbb
mov
and
adc
into
pop
aas
mov
fbstp
dec
xchg
hlt
mov
jo
mov
mov
movsb
imul
addr16
sub
ror
and
and
mov
lcall
out
loop
stc
sbbb
nop
sub
cmp
mov
int3
sbb
mov
in
ret
dec
and
rolb
enterw
movsl
adc
cld
fsubrs
xchg
sbb
clc
dec
dec
inc
pop
hlt
outsl
jg
jge
sbb
imul
mov
sub
insb
in
xor
push
test
fdivs
pop
les
push
push
je
mul
addr16
sbb
repnz
lds
mov
aaa
mov
and
or
mov
movd
mov
inc
cmp
xlat
sbbl
mov
pop
aaa
xor
push
inc
mov
push
and
fcomps
pop
repnz
data16
mov
add
je
pop
fstpt
loopne
cmp
mov
adc
testb
bound
cs
sbb
mov
mov
add
outsb
xor
xchg
outsb
add
shll
loop
daa
clc
pop
mov
ret
imul
or
inc
nop
mov
cmp
out
rol
sti
jae
mov
xchg
dec
inc
mov
or
aas
jbe
out
adc
pop
dec
jbe
popf
jl
scas
inc
pop
lahf
stos
rclb
lret
and
sti
ds
jns
xchg
inc
inc
xchg
jmp
int
sbb
or
mov
adc
cmp
cltd
adc
icebp
xor
mov
sbb
sub
mov
divl
mov
fstpt
sahf
push
xchg
pop
sbb
mov
push
stos
sub
ds
or
xor
scas
inc
dec
push
xchg
imulb
mov
fdivr
lods
ret
add
test
inc
ficoml
leave
fnstenv
xlat
jecxz
test
ret
push
lds
sbb
mov
fs
jnp
push
lods
cmpl
cmp
gs
cmp
in
mov
ret
mov
mov
mov
xchg
push
ljmp
xor
ret
sbb
ds
repnz
and
shll
jle
xorl
xchg
mov
mov
dec
mov
xor
push
adc
int3
int
fucomip
jg
aad
adc
jp
les
test
ja
cmp
mov
cmp
push
xchg
sti
mov
pop
add
fldenv
pushf
mov
loop
sahf
in
add
mov
mov
sbb
mov
push
aas
dec
mov
mov
or
mov
mov
sbb
inc
xor
cmp
cmp
push
out
hlt
adc
aaa
pusha
xlat
push
loop
push
mov
or
mulb
mov
sahf
pushf
inc
pushf
icebp
inc
lods
test
inc
inc
popf
test
aam
sub
pushf
daa
movsb
pop
inc
xor
sub
fidivrs
fsubrs
mov
imul
mov
and
dec
ret
clc
mov
xorb
insb
mov
imul
or
cmp
mulb
ds
add
in
cmpsb
lret
push
aas
cmc
rcrl
xor
mov
push
lock
inc
outsb
or
sbb
orl
jl
mov
jle
push
in
mov
jl
mov
mov
xchg
clc
test
js
mov
clc
add
scas
xor
es
pop
jne
bound
repz
cmp
loop
dec
adc
pusha
mov
push
loopne
xchg
push
jb
xchg
jp
xlat
push
pop
mov
sub
lahf
sbb
dec
dec
xchg
adc
push
sbb
sub
push
sar
cmpsl
add
push
fsubrs
int3
and
inc
pop
mov
pop
adc
jae
les
imul
movsb
cmp
pop
sbb
jmp
jmp
movsb
dec
stos
cvtps2pd
ja
push
mov
push
jmp
fbld
fidivl
stos
mov
mov
lds
sbb
cmpsb
sub
add
in
mov
aas
add
mov
cmp
xor
lcall
movsb
ret
lcall
xchg
jle
fs
mov
push
rolb
inc
mov
inc
rcrb
inc
lcall
cmpsb
les
sbb
cmpsb
inc
sub
xchg
out
dec
xchg
or
cmpsb
stos
std
fwait
bound
imul
mov
fldl
scas
xchg
xor
xchg
xchg
cmpsb
mov
nop
fsubr
scas
sub
add
inc
pop
inc
mov
addb
pop
cmp
push
jmp
dec
sahf
test
pop
fwait
aaa
sbb
dec
or
cltd
dec
rcr
push
dec
and
sbb
dec
test
dec
mov
xchg
xchg
jbe
rcrl
sbb
ficomps
mov
cmp
cmp
inc
cmp
jmp
mov
sub
stos
mov
arpl
xchg
cld
insl
inc
or
xchg
dec
mov
dec
mov
test
fcomi
test
dec
ficoms
sahf
cmp
push
call
adc
jle
popa
pop
stos
mov
xchg
daa
cmp
in
repz
imul
cltd
add
mov
xor
mov
jl
jnp
or
sbb
notb
pop
call
clc
in
hlt
push
cs
lods
cmp
pusha
ss
stos
les
xor
leave
pop
jecxz
sbb
push
mov
cmp
cmp
dec
jb
lea
cmpsl
aas
mov
fists
jle
and
jecxz
dec
jg
jo
out
scas
sub
loop
pop
jg
es
aam
imul
pop
negl
pop
imul
add
cmpsb
mov
xchg
adc
int
out
push
xchg
mov
lea
cmp
mov
ficoms
mov
sub
mov
shll
pop
and
mov
cmp
push
add
addr16
jae
jge
push
pop
push
add
in
pop
xchg
mov
mov
jp
mov
stos
outsb
imul
lret
addr16
pushf
pop
jno
and
adc
es
test
pop
ss
jl
pop
loopne
fmull
mov
lods
jle
mov
into
lds
jns
aam
add
dec
lods
mov
out
dec
or
cmp
pop
push
lret
addr16
pop
insb
or
adc
xchg
mov
std
mov
outsb
xor
rorb
cld
test
and
xchg
in
mov
out
les
adc
or
xchg
mov
push
call
test
dec
lcall
negl
incl
sahf
mov
add
push
clc
pop
lods
test
enter
cmc
insl
test
push
leave
out
stos
add
fnclex
outsb
adc
add
sti
pop
sahf
clc
cmpsl
ret
dec
jle
jecxz
push
addr16
fucomp
lds
cs
sahf
xchg
jae
fdivrs
mov
jmp
xchg
pop
in
sbb
lods
dec
push
cmpsb
jp
lods
icebp
xor
inc
or
scas
or
cmp
addr16
jno
int3
cs
push
inc
xchg
test
add
fld1
sbb
stc
pushf
adc
or
divl
xor
add
pop
lahf
fiadds
or
cwtl
add
cs
xor
mov
mov
popa
test
stc
inc
pop
dec
dec
vpaddb
push
movsl
xchg
les
rsqrtps
push
cmc
nop
cli
push
ss
int
ljmp
mov
lds
push
pop
mov
adc
out
nop
mov
pop
mov
aad
or
inc
push
xor
das
pop
adc
shrd
cmp
xchg
in
push
pop
adc
testb
imul
arpl
lods
dec
scas
jnp
inc
mov
sahf
fdivs
jmp
ds
mov
push
mov
pop
aas
push
xchg
dec
std
lods
test
ja
dec
jg
out
test
test
into
movsl
mov
sahf
out
add
inc
hlt
scas
jmp
lret
xchg
outsl
cmp
arpl
sub
adc
fbstp
cmc
insl
sub
and
inc
clc
dec
and
jbe
fucomip
pop
push
bound
jo
push
popf
rcrb
ljmp
jnp
popa
mov
stos
mov
sti
and
clc
inc
stos
in
xchg
cld
arpl
aad
lahf
dec
aaa
inc
ret
icebp
out
out
inc
adc
gs
fnstsw
pop
sbb
add
or
jns
out
add
ret
add
fucomp
sub
sub
adc
ljmp
mov
inc
stos
jmp
xor
lret
data16
xchg
cwtl
loop
scas
lcall
int3
mov
lods
xor
sahf
lods
test
push
insl
xor
jg
call
cmp
lock
setp
sbbb
into
mov
nop
rolb
xor
add
mov
xchg
xchg
es
gs
mov
jmp
mov
test
cmp
jmp
outsb
stos
inc
pushf
sub
popa
out
jnp
adc
cmpsl
dec
mov
lods
jnp
xchg
and
adc
lods
movl
fsubrl
jmp
and
sub
ficoms
xor
mov
pop
aaa
int3
scas
aad
js
into
in
test
cmpsl
mov
pop
test
ds
aas
pop
ds
sahf
push
out
aad
xor
setg
xchg
dec
dec
out
sahf
xchg
ficomps
and
fwait
xor
gs
lds
sub
push
test
or
outsl
sub
sub
cmc
mov
xchg
dec
mov
imul
mov
xchg
jecxz
mov
mov
stos
std
fisubs
adc
xor
addr16
lret
sbb
nop
fidivrl
push
mov
xor
bnd
cli
and
or
cmpsl
lret
sub
mov
ds
xor
les
inc
inc
jno
dec
pop
and
push
push
mov
inc
scas
shr
jae
sub
mov
xchg
sub
jne
inc
pusha
push
sub
xor
xchg
mov
ret
add
inc
pop
lcall
mov
fisubl
enter
xchg
out
sti
lcall
outsb
in
lret
lock
andl
test
cld
mov
loope
lock
mov
xor
cmc
out
mov
lret
xor
cmpsl
pop
insl
push
add
cli
daa
pop
leave
mov
outsb
aas
add
in
inc
and
push
ret
or
mov
inc
pusha
lods
pop
mov
adc
pop
insb
xchg
push
test
mov
xor
sbb
js
movsl
jae
insb
mov
push
sbb
fisttps
mov
xor
outsl
push
ljmp
jo
sbb
loope
cmp
addr16
mov
jbe
je
xor
dec
sahf
sub
and
sub
out
aaa
notl
sub
sbb
mov
inc
or
xor
mov
push
push
mov
lret
adc
ret
cmpsb
jl
fs
dec
js
inc
xor
mulb
test
movsl
sub
mov
ret
mov
cmc
pop
repz
subb
xchg
loope
add
mov
and
lcall
or
dec
fsubrs
arpl
xchg
scas
testl
jb
pop
loope
xchg
clc
or
pop
in
jnp
mov
inc
inc
pcmpeqd
sub
jo
or
cmpsl
loope
jae
lea
and
out
addr16
xor
outsb
scas
pop
push
std
xchg
aaa
xor
mov
jg
ret
cmp
push
jb
outsl
rolb
xchg
cs
mov
dec
jo
js
popa
test
lds
iret
or
mov
adc
push
mov
xor
sbb
adc
push
je
mov
je
hlt
cmp
xchg
jns
out
out
mov
test
lahf
out
or
rclb
dec
cmp
jo
std
insb
into
mov
push
mov
push
xor
jmp
adc
movl
pop
xchg
pop
pop
adc
in
test
pop
insl
ret
outsl
shlb
add
fbstp
xor
aas
add
mov
imul
adc
call
push
lods
push
or
push
or
inc
in
mov
mov
dec
dec
push
xchg
sti
cmc
cltd
int3
fidivs
xchg
std
enter
mov
outsl
or
in
lock
data16
adc
repnz
dec
xor
jns
jle
loopne
cmc
pop
mov
sub
out
cmpsl
xchg
mov
in
jo
fsts
adcb
cmp
mov
jg
pop
test
or
and
leave
enter
xchg
mov
les
xchg
add
pop
and
pushf
pop
push
ja
hlt
rol
fsubl
xor
xchg
push
out
shr
jle
push
adc
fldenv
adc
call
push
lds
cmp
cmpsb
add
xor
cld
adc
jge
and
inc
inc
fdivs
std
movsb
jmp
xchg
pop
xchg
sub
mov
inc
mov
rcr
pushf
add
add
pusha
cmp
stc
xor
fsts
cmp
jge
and
ss
std
push
adc
fistpll
xlat
pop
lret
jge
dec
inc
cltd
in
test
cmp
repnz
mov
cmp
sbb
add
or
inc
lret
cld
sub
leave
adc
lea
call
push
add
std
movd
movsb
and
inc
jne
clc
cmc
mov
mov
mov
push
mov
repnz
mov
xor
cld
pop
push
push
and
jo
push
xlat
in
mov
ja
cld
lret
daa
mov
pop
addr16
pop
jne
adc
add
adc
arpl
lcall
push
jg
fisubs
sbb
das
xchg
jne
jns
mov
cmp
push
iret
cmp
sbb
adc
fs
adc
or
std
in
stos
test
jp,pt
divb
or
loope
iret
data16
dec
sub
jb
xchg
pop
xchg
dec
test
and
stos
xchg
cmc
inc
jb
out
cmp
jo
cmp
scas
cltd
ja
lret
pop
jl
jns
xor
cmp
pop
pop
insl
add
insb
ds
lcall
push
in
arpl
pop
testl
inc
dec
gs
jns
aaa
mov
lods
cmp
shl
cmc
movsb
mov
in
les
cmp
in
ficomps
pop
icebp
dec
sahf
dec
pop
jo
mov
popf
xor
addr16
imul
push
cli
lods
mov
or
aaa
pop
repnz
sub
sbb
sbb
pop
out
sahf
lret
pop
out
and
cld
test
mov
cmp
cld
andl
int
inc
jmp
insb
mov
int3
imul
std
mov
xchg
push
sub
jb
jecxz
sub
push
outsb
dec
adc
jg
das
faddl
jle
ffree
mov
cmpsb
scas
rep
adc
pop
icebp
imul
imul
movb
addr16
cmpsl
sbb
pop
ficomps
xor
cmp
mov
aas
inc
lret
pusha
mov
fstl
mov
jne
inc
push
ja
es
cwtl
inc
lret
pushf
cld
es
std
repz
pusha
in
fsubrs
aad
into
push
jecxz
mov
lea
insb
inc
cvtpi2ps
inc
popa
repz
ror
and
or
ds
push
pop
pop
sahf
xchg
or
pop
or
outsb
sub
sub
mov
fiaddl
rolb
repnz
in
sbb
sub
insl
cmp
inc
fidivrl
fbld
push
adc
test
je
fdivs
push
in
stc
xchg
add
mov
cwtl
das
mov
fdivl
fmuls
xor
xor
jge
rcr
outsl
add
add
dec
sbb
xor
andl
pushf
sub
lahf
ss
into
cltd
xor
in
mov
out
xchg
call
out
xor
arpl
shlb
into
dec
call
stos
inc
lahf
pop
sahf
ud0
pusha
lock
nop
out
call
lea
test
mov
pusha
ss
sbb
jle
lods
rolb
mov
xchg
jge
xlat
mov
or
mov
cmp
pop
icebp
sti
hlt
lds
jns
dec
inc
jecxz
jbe
testl
cmp
aaa
into
push
pop
mov
mov
push
popf
dec
mov
cwtl
das
hlt
or
cmp
adc
pop
notb
aad
stos
and
mov
jae
dec
mov
rcrb
mov
push
sub
pusha
leave
fidivl
xchg
and
inc
push
inc
ficompl
mov
roll
lahf
aaa
repz
and
cli
xchg
cs
dec
in
dec
sbb
mov
mov
mov
xor
pop
ljmp
add
es
cmc
shrb
pushf
dec
pop
out
jnp
sub
out
pushf
jbe
lret
insb
aas
sti
sbb
sub
daa
mov
jl
inc
fdivl
xchg
rolb
fdivl
aam
fadds
daa
icebp
mov
sub
and
mov
loope
daa
fnsave
pushf
xor
xlat
outsb
xchg
dec
out
xorl
push
mov
call
nop
daa
daa
and
jle
fs
mov
jno
test
lds
repnz
addr16
or
sarb
jl
test
iret
or
add
sub
push
inc
dec
loopne
sar
xchg
add
sbb
or
icebp
mov
adc
roll
xorb
push
or
push
out
inc
inc
lods
inc
je
or
cmp
adc
inc
inc
xchg
sub
mov
dec
in
dec
out
inc
sbb
push
mov
sub
adc
inc
fidivl
mov
in
dec
out
aas
pop
mov
lret
sub
stc
mov
arpl
pop
aaa
das
gs
repz
jne
pop
sub
test
jnp
sub
aam
jo
aad
jb
and
insb
pop
and
jo
jnp
xorb
shrl
ret
jno
push
daa
aad
push
je
xchg
mov
ret
jns
stc
repz
roll
insl
cmpsl
bound
xchg
enter
sbb
mov
mov
xlat
xchg
mov
pop
cmc
mov
inc
fnsave
sti
xchg
test
add
cmpb
mov
lock
fidivs
scas
pushf
xor
sbbl
jg
stos
inc
xchg
lods
push
popf
fisttps
hlt
mov
xchg
and
les
mov
mov
iret
cwtl
pop
repz
pop
es
mov
mov
sbb
jne
adc
jle
cmp
mov
sub
lret
cmp
mov
nop
daa
mov
call
xchg
ja
inc
into
gs
cmp
cwtl
test
xlat
fmull
pusha
idivl
call
jmp
mov
popa
push
pop
fwait
mov
data16
mov
imul
shr
mov
lods
mov
outsl
lds
mov
mov
outsb
in
lahf
int3
cmp
add
xor
dec
insl
xor
lahf
fsub
jl
mov
mov
insl
aam
mov
jns
mov
or
jle
je
mov
jecxz
bound
jb
adc
jb
scas
mov
jb
or
aaa
jb
aaa
mov
je
repz
and
stos
out
nop
daa
pop
jl
jmp
rdtsc
enter
mov
in
inc
fcomps
test
mov
adc
xchg
jmp
je
mov
mov
aas
addr16
sub
mov
xor
outsl
sub
popf
stc
sbb
mov
jo
and
ja
xchg
cmpsb
add
pop
cmp
shll
push
in
movsl
adc
mov
lcall
adc
push
test
pop
fnsave
lods
inc
subb
pop
pop
mov
insl
add
xchg
mov
insl
adc
and
xor
ret
lcall
scas
inc
dec
mov
mov
les
clc
sub
decb
das
mov
sbb
hlt
push
mov
jnp
push
adc
test
jnp
movsl
data16
arpl
mov
cmp
or
stos
cmp
pop
xor
mov
sub
rcrl
mov
sbb
cmp
imul
test
xchg
mov
andb
shrl
mov
jle
dec
scas
fwait
jle
lret
mov
pop
pop
repz
push
mov
fidivs
outsb
sbb
mov
test
pop
inc
xlat
mov
mov
xchg
sbbb
pop
jg
mov
and
fimuls
mov
jae
les
lods
xchg
fbstp
sbb
pop
arpl
into
gs
imul
jecxz
sbbl
jo
movsl
cmp
stos
cmp
fiaddl
in
je
in
jb
std
xchg
loopne
pop
icebp
fnstcw
scas
inc
insb
inc
test
jae
pop
mov
xchg
pop
ret
add
adc
sbb
call
or
cmpsb
cmp
inc
fildl
pop
imul
and
push
stos
mov
das
mov
ret
clc
pop
mov
xchg
sbb
push
mov
cmc
in
gs
push
outsl
xchg
icebp
mov
pop
rcr
adc
aaa
inc
stos
popa
js
mov
repz
mov
les
or
cmp
pop
decb
pop
lods
sbb
out
mov
sub
fcoml
test
out
test
push
in
rorl
stos
jnp
cltd
xor
popf
out
lret
inc
jno
jns
ds
push
fwait
ret
fcmove
aas
xlat
out
jo
xor
pop
enter
jb
out
add
cmp
mov
out
mov
cmp
sarl
jns
loop
ds
add
fildll
or
fnsave
cld
xchg
pop
fsubs
or
sub
je
shlb
mov
mov
clc
pop
fdivrs
mov
adc
add
es
inc
test
mov
push
cmc
or
call
pop
dec
jl
not
stos
inc
push
sub
xchg
pop
sbb
mov
movb
imul
cltd
sub
push
mov
aas
popa
je
xor
dec
xor
mov
aas
inc
sub
bound
dec
and
mov
inc
mov
lods
inc
fwait
mov
dec
jo
pop
push
pop
mov
and
popa
stos
sub
inc
imul
dec
jno
pop
xor
jp
testb
leave
cltd
dec
sbb
aaa
mov
out
and
or
adc
call
xor
arpl
sbb
bound
jg
push
cltd
xor
push
data16
sbb
enter
sbb
pop
lcall
add
rolb
adc
or
push
mov
in
inc
mov
divl
adc
mov
jae
sar
fidivl
pop
push
xlat
fisttpl
inc
mov
jo
outsb
lea
jecxz
push
push
sbb
xorb
push
leave
in
jnp
mov
fsts
in
imul
inc
enter
in
test
adc
sub
jno
lea
es
das
test
xchg
xchg
mov
pop
js
xchg
jecxz
arpl
adc
sbb
mov
in
lds
adc
aas
inc
in
data16
fnstsw
das
shrl
jnp
shrb
mov
mov
inc
cwtl
out
mov
jle
add
testl
mov
lock
popa
cmp
stos
pop
cmp
add
pop
call
mov
xor
movl
sub
xchg
xor
les
cmp
xchg
enter
sbb
mov
js
mov
repnz
out
insl
push
mov
cmp
fs
loope
mov
or
add
and
cmc
xchg
ret
mov
loopne
push
lahf
ljmp
test
xlat
cmp
lcall
jp
cmpsb
pusha
pop
fwait
inc
pushf
sub
jne
imul
jle
mov
inc
mov
popf
xor
mov
xor
testl
arpl
mov
ret
mov
in
mov
psubd
sbb
jg
adc
ja
xor
ret
fcompl
and
lock
stos
movsl
cmp
adc
push
adc
dec
or
arpl
stos
test
hlt
jp
in
mov
orb
sbb
lods
sbb
pop
sarb
test
xchg
dec
cmc
push
jo
pop
mov
jns
sub
jmp
push
cwtl
mov
sub
test
pop
or
sbb
fldcw
adc
shlb
shrb
addr16
push
add
jmp
pop
in
xor
mov
pop
idivb
sub
jp
mov
push
xchg
xchg
sub
es
test
in
and
mov
sti
xor
jmp
mov
push
rcll
push
and
stos
fildll
in
cli
and
bswap
dec
mov
inc
out
insl
lahf
pop
cmp
inc
popa
mov
cmpsl
insb
lea
repz
jmp
mov
fistl
pusha
push
mov
pop
inc
sbbl
cmp
cmp
gs
dec
dec
jecxz
pop
dec
push
into
cmp
adc
jb
test
dec
sub
add
shrb
aad
int3
ss
fcoms
inc
jecxz
rcrb
mov
mov
repz
jle
outsl
xchg
cs
add
loop
inc
call
mov
call
xchg
pop
cwtl
js
or
lahf
aaa
jle
mov
cmp
lahf
or
cmp
or
push
and
int3
inc
sub
jne
lcall
dec
jae
xchg
dec
inc
jno
pusha
pop
imul
push
mov
icebp
repz
flds
push
adc
movsb
sbbb
aad
psadbw
sbb
or
scas
jecxz
pop
ljmp
jnp
fbld
mov
mov
push
rcrb
add
icebp
mov
push
or
mov
gs
inc
xor
push
adc
cmpsb
pop
or
jb
sub
push
cmpb
mov
es
fldenv
push
sbb
mov
lret
pusha
mov
sbb
pop
mov
or
ss
mov
dec
leave
push
pop
je
inc
push
push
add
nop
mov
repz
aas
dec
mov
lahf
push
pop
rolb
clc
sub
dec
and
jb
imul
movsb
jle
jmp
add
xor
inc
xchg
fldenv
xlat
adc
aam
cmp
into
add
mov
sbb
cli
movsl
jne
fprem
xor
mov
loopne
ffree
notl
int
cmp
fildll
and
mov
xor
and
pop
popf
addl
push
inc
xchg
pop
lret
ret
jle
les
mov
sbb
jle
mov
testb
dec
sbb
sub
xor
xor
rorb
push
lods
push
sti
rorl
xchg
push
rcrb
adc
in
sbb
mov
add
pop
xchg
addr16
cltd
loope
pop
mov
out
repnz
mov
inc
or
and
pop
lahf
mov
pushl
sub
test
mov
or
xor
jo
sbb
cmp
lock
outsl
popf
jp
mov
sub
jbe
jae
mov
adcb
movsl
jo
in
clc
test
cmp
pusha
jge
bound
cmp
jge
xchg
pop
inc
xor
mov
gs
inc
mov
pop
dec
loop
dec
nop
pop
stc
or
imul
xchg
jge
inc
or
gs
sub
jns
cmc
inc
ljmp
and
pop
mov
hlt
nop
push
mov
mov
stc
in
fmuls
sbb
inc
fistpl
insb
shll
das
mov
loope
jecxz
popl
or
jecxz
pusha
mov
or
sbb
add
jae
and
push
sub
cmp
out
push
jl
mov
add
and
dec
jp
push
mov
jo
push
cwtl
mov
ficomps
adc
sub
outsl
mov
lret
inc
inc
into
ds
fadds
add
cmp
clc
cmp
std
xor
adc
shlb
sbb
dec
data16
push
shld
sbb
jle
insb
mov
xor
mov
and
push
in
loopne
popa
mov
lods
aas
repz
jecxz
jnp
cwtl
mov
enter
loop
and
sbb
std
mov
fwait
jg
imul
aaa
adcl
xchg
sbb
lods
jo
addr16
sbb
inc
mov
push
mov
int3
gs
xor
mov
test
adc
or
or
add
push
pop
push
arpl
sub
jne
pusha
xor
sbbl
insb
lods
pusha
pop
dec
mov
jle
ja
push
jl
xchg
inc
push
into
bound
stc
dec
sub
in
mov
add
pop
aam
sbb
ds
stos
push
out
shld
push
add
repnz
push
pop
adc
jle
xor
sub
rcrb
xor
and
adc
ficoms
jb
pop
jno
test
inc
cmp
nop
xor
int3
arpl
inc
ja
dec
pop
jnp
insl
dec
dec
iret
insb
inc
sbbl
mov
jecxz
loopne
outsb
lea
out
pop
jmp
xchg
jno
xchg
ficoms
push
add
loop
push
loope
or
add
and
or
inc
lcall
push
jg
or
and
inc
std
das
mov
sti
xor
inc
cltd
stos
and
mov
mov
movsl
or
inc
lock
insb
cltd
mov
in
test
fidivl
out
fistl
push
cli
mov
mov
aad
jae
subl
mov
dec
and
jl
jmp
pop
xor
das
scas
dec
fnsave
shlb
popa
inc
shrl
dec
xchg
mov
push
fmull
pop
push
fidivl
icebp
mov
sti
or
out
xchg
cwtl
das
adc
ss
push
fisubl
or
in
test
out
fildl
pop
pop
fists
adc
push
mov
and
or
xchg
or
mov
xor
push
xchg
ja
sub
in
lock
enter
pop
sub
loopne
lahf
xor
jbe
mov
mov
gs
cli
cwtl
ja
adc
call
push
cmp
addr16
imulb
sahf
rcll
ret
adc
jecxz
sti
sar
push
in
push
lods
ret
cmp
loop
jg
jp
inc
inc
adc
mov
insb
in
imul
mov
mov
mov
fsubrl
imulb
stos
into
inc
or
mov
cs
fisttpll
popa
mov
xchg
test
push
cli
and
xchg
sub
scas
cmpl
mov
add
cmpsb
dec
adc
pop
push
push
push
xchg
mov
push
adc
fists
inc
int
cmp
mov
jl
dec
dec
rorb
jns
int
pop
xor
cli
xchg
mov
cld
pop
rol
mov
aad
fcompl
push
fimull
jbe
pop
test
ds
insl
leave
stc
sub
arpl
loope
or
ret
pushf
jb
into
test
dec
hlt
lock
jmp
enter
add
in
enter
or
xchg
stos
int3
adc
roll
push
jnp
adc
test
push
add
mov
fistpl
pop
pop
rcrb
popa
pushf
or
mov
jecxz
inc
ret
cs
add
cmp
push
push
adc
imul
inc
and
mov
push
cmp
inc
inc
scas
xor
call
jae
mov
xchg
ja
fs
pop
xchg
sti
xor
imul
mov
ja
mov
ret
xchg
xchg
in
clc
sarl
gs
repz
mov
jl
pop
aam
sahf
popf
jnp
movsl
daa
in
cmc
arpl
cmpsb
clc
dec
mov
cmp
sbb
mov
icebp
adc
cmovne
push
addr16
sarl
aas
jns
and
outsb
jb
dec
dec
cs
pushf
aas
jo
dec
inc
jno
mov
xor
mov
fldl
sbb
int3
shll
out
rol
mov
mov
divl
iret
popf
pusha
notl
icebp
xor
lcall
les
rcrl
or
add
sub
loop
ss
loope
outsl
test
in
les
add
aam
mov
mov
xchg
inc
int
pop
mov
loope
jl
dec
movsl
lods
inc
sti
imul
mov
dec
enter
add
es
inc
push
flds
and
pop
push
test
aaa
pop
sbb
cmp
xchg
clc
sbb
or
push
mov
push
push
mov
fs
push
jb
sub
sbb
mov
into
insl
imul
mov
ret
sbb
pop
cmp
xor
aaa
push
cwtl
mov
enter
jns
jp
inc
lods
push
cmp
addl
add
test
rcrl
or
in
jb
outsb
mov
inc
sbb
jne
pop
ret
lock
adc
inc
outsl
test
push
adc
shll
loope
add
in
xchg
into
cs
jl
out
fsubrl
int
lea
leave
adc
pusha
mov
push
stos
dec
in
pop
ficomps
lret
xlat
mov
in
addb
or
aaa
cmc
add
adc
test
or
xlat
data16
push
clc
lret
dec
imull
loop
in
jo
ret
xchg
dec
sbb
mov
and
rcrl
enter
pop
out
arpl
movsl
fldcw
cmpsb
pop
stc
push
rol
sub
xchg
lret
jmp
mov
pop
add
sub
js
repnz
data16
jle
aam
push
sub
inc
jne
aas
aam
xchg
into
xor
mov
adc
cwtl
fdivs
adc
fisttpll
mov
and
test
pop
ss
cmp
jp
mov
loopne
jns
test
dec
leave
push
push
cmp
pop
mov
mov
imul
cmpsb
insb
lahf
push
push
mov
scas
sbb
stos
iret
fisubs
scas
enter
cmp
mov
ljmp
mov
sti
mov
mov
aad
jns
fnstenv
fidivrs
dec
loope
sub
jae
das
loope
xor
jno
cmp
jnp
fmuls
add
sub
rcrl
add
adc
loop
in
sbb
lods
mov
lcall
nop
push
push
jl
in
lcall
pop
ljmp
push
inc
mov
jnp
pop
mov
popf
adc
mov
rcrb
leave
mov
pusha
neg
add
add
movsl
xor
jecxz
clc
das
add
sahf
or
xchg
cmp
imull
fcomps
pushaw
aam
dec
out
xor
pop
idiv
fwait
xor
mov
push
shll
dec
iret
mov
cmp
test
cmpsl
xchg
sub
push
push
lods
andl
jg
pop
add
fdivrp
dec
mov
cmp
xlat
iret
rcrb
rcr
inc
fxch
hlt
movsl
fs
adc
cld
test
dec
mov
loopne
gs
mov
xchg
xlat
mov
or
lret
popa
fwait
test
out
scas
mov
in
sbbl
mov
shrl
adc
ljmp
jns
sbb
es
add
addr16
int3
inc
dec
mov
imul
mov
imul
stos
pop
movsb
pop
aas
lret
cwtd
mov
sbb
es
loope
test
popa
xor
lods
js
or
jge
sbb
clc
popl
push
mov
inc
pop
pop
iret
pop
dec
push
out
addr16
add
and
mov
xchg
inc
or
add
gs
enter
xchg
sbb
or
icebp
scas
enter
adc
push
jne
sub
mov
push
inc
lret
jbe
es
push
inc
fsubs
clc
adc
out
jnp
dec
or
stos
pop
leave
pusha
dec
cli
daa
ljmp
pop
mov
popf
mov
jne
mov
mov
pop
or
loop
test
adc
sub
clc
mov
jno
push
movsl
jnp
mov
mov
cmp
jle
fimuls
xlat
xor
fidivrl
jp
ret
adc
inc
push
sbb
push
inc
fistl
pusha
or
cmp
mov
frstor
sbb
imul
push
rorl
clc
mov
xchg
scas
cmpl
push
mov
xchg
sub
pop
pop
aam
add
daa
mulb
loope
cmc
rolb
xor
cmc
push
add
and
test
aam
addl
test
dec
loopne
dec
mov
pop
cwtl
int
mov
ret
jb
in
sarl
add
lret
jge
push
lock
adc
ss
mov
xchg
pop
dec
scas
push
notl
cmpsl
sbb
dec
sahf
push
decb
jecxz
lods
dec
mov
jg
pop
repnz
mov
cmp
std
pop
loopne
adcb
and
repnz
add
push
notb
xor
in
and
mov
cmp
pop
inc
fsubrs
inc
cmp
sbb
or
and
mov
push
sbb
fimuls
mov
sbb
out
xchg
sub
sbb
and
les
inc
out
and
inc
shll
pop
push
fisttps
imul
lcall
sbb
cmpsb
enter
in
mov
or
push
rcl
sub
fs
and
call
scas
sub
or
or
movl
push
add
aam
cs
std
xor
jge
jb
jg
cmp
xchg
pop
cld
xor
lock
nop
fists
cmc
mov
pop
dec
mov
sbbl
sub
push
outsb
mov
mov
pop
cmc
dec
pop
les
movsl
pop
add
sub
cmp
jb
je
out
test
or
xchg
add
sbb
push
pop
adc
fisttpll
in
xor
stos
gs
jb
xchg
or
in
jbe
popf
cmpsl
shlb
or
jp
fistl
cmp
std
pushf
movsb
cwtl
xchg
adc
jae
mov
adc
xor
jle
jle
push
iret
inc
lahf
lea
mov
mov
repnz
cmp
mov
cld
or
xor
arpl
es
cmpl
xor
sti
loope
in
les
out
pop
out
mov
outsb
shl
inc
into
das
cmpsb
sub
sti
jle
in
dec
lods
sbb
jl
lock
sahf
pop
adc
dec
sti
inc
inc
pop
push
in
pusha
inc
lods
jne
xorl
insb
movsb
push
ljmp
aaa
fsubl
or
cmpsl
sub
or
cmpsb
inc
and
add
and
icebp
jae
mov
aas
fucomi
mov
ret
int
sahf
lret
in
out
test
or
ljmp
inc
movl
xchg
mov
sbb
sbb
in
call
or
out
stc
shlb
loope
lds
push
leave
cwtl
movsl
xchg
or
inc
into
jge
dec
rclb
inc
fidivrl
adc
sub
dec
xchg
insb
inc
xchg
dec
rcll
or
add
jnp
in
jl
lahf
inc
test
es
dec
sub
and
jg
ss
test
jmp
cmpl
xor
aad
cwtl
orl
jb
cltd
mov
inc
mov
pop
mov
adc
adc
dec
adc
lods
inc
enter
pushf
into
xchg
xchg
mov
xchg
hlt
cmpsl
pusha
jecxz
nop
mov
adc
test
stc
jae
jae
sbb
push
loop
mov
dec
aad
hlt
sarl
ret
shlb
cmc
out
rorl
cmpsl
sbb
sub
movsb
in
inc
es
mov
jp
or
pop
stos
jno
pop
xor
outsl
cmpsb
ja
cmp
xor
pop
sbb
dec
lcall
sub
or
sti
cs
inc
sub
cli
lock
inc
mov
adc
add
mov
mov
push
outsb
bound
xchg
ret
xchg
push
fsubrs
mov
cmp
loopne
pop
mov
adc
push
cmp
mov
dec
push
cs
and
movsl
pop
adc
loop
mov
imul
movsb
bound
jmp
sub
ds
sarl
fisubrs
sub
adc
pusha
aas
out
pop
test
lahf
mov
jb
mov
lods
into
fisubs
pop
enter
out
sbb
or
ret
add
push
xchg
xor
push
pop
pop
les
and
or
sub
push
adc
xchg
push
test
js
xchg
das
idivb
push
fwait
imul
jb
test
daa
or
mov
repnz
leave
or
push
stc
push
mov
and
ficoms
jnp
movsl
rol
inc
out
jo
rolb
mov
and
xchg
push
adc
mov
pop
rcll
and
lahf
testb
mov
repnz
out
fidivrl
leave
cmpsl
das
hlt
repz
out
cmp
addb
mov
or
cli
stos
loop
ffreep
lcall
icebp
fsubl
sub
or
jbe
xor
sarl
or
mov
dec
cmc
popa
test
inc
loop
or
das
cld
dec
xor
fbstp
mov
add
mov
push
inc
pop
into
push
pop
xlat
outsb
jle
and
aaa
cmp
pop
xorb
push
add
sub
cmc
jecxz
ret
xchg
push
daa
lcallw
mov
push
mov
add
sbb
mov
int
scas
mov
test
int3
adc
fildll
lock
and
lcall
jae
inc
dec
popf
cli
xchg
iret
pop
mov
xor
hlt
cs
repnz
cmp
icebp
shrb
mov
outsb
lea
and
mov
push
cmp
jg
ja
repz
stos
and
idiv
and
shl
stc
ret
ret
jmp
sbb
call
out
or
leave
add
cmp
ficoml
xor
adc
cld
and
push
rcrb
stos
jno
and
outsl
ljmp
cmp
cli
push
lret
fiadds
sarl
push
call
test
xchg
cwtl
roll
mov
call
lods
aas
call
ret
mov
push
leave
mov
and
xchg
or
popf
sbb
or
or
dec
xchg
adc
stos
inc
jae
xor
cld
aaa
movsb
xchg
jne
push
or
xor
in
and
shlb
add
mov
pop
push
sub
mov
mov
ficoml
gs
sub
dec
fists
dec
sbbl
aaa
data16
push
mov
frstor
je
xor
push
bound
fidivs
out
sbb
or
into
jb
sbb
les
lods
in
or
adc
pop
xorb
jge
or
cmp
stc
nop
jmp
int
das
sub
pusha
pop
push
out
adcl
arpl
aam
inc
test
xchg
xlat
stos
inc
or
lret
xor
xlat
xlat
loop
xchg
mov
lds
scas
testb
js
aaa
into
dec
popf
mov
in
push
mov
pop
out
insl
add
or
data16
sbb
jae
mov
idivl
fdiv
dec
testb
popf
adc
into
push
mov
sarb
cmpsl
adc
ss
arpl
out
icebp
inc
fsubs
adc
dec
fistps
mov
jo
loopne
xor
into
mov
fwait
xor
aad
lods
clc
pop
popf
xor
sbb
dec
stos
mov
sti
and
inc
sbbb
cmc
mov
loopne
ds
adc
mov
bound
stos
jno
xchg
lock
sub
daa
insl
les
hlt
push
call
adc
add
push
xlat
cs
rorb
add
jno
mov
dec
dec
stc
push
lret
subl
sub
lcall
adc
or
lret
mov
clc
dec
mov
xchg
aaa
int
cs
out
cmp
mov
cwtl
adc
push
lods
mov
cmp
cmp
fnstsw
icebp
int
movsl
jp
dec
outsl
cli
mov
and
push
repnz
fstp
adc
xor
iret
push
mov
mov
mul
mov
jb
mov
push
in
call
or
inc
insl
xchg
xchg
fucomp
mov
sahf
mov
outsb
or
flds
sub
je
popa
adc
mov
inc
adc
shr
js
shll
mov
lds
xorb
jne
ficoms
pop
sahf
daa
scas
dec
hlt
sub
inc
sbb
out
sub
popa
popf
xchg
sub
push
sub
popa
sarb
push
lock
out
xor
fbld
sbb
sub
pop
or
gs
jl
in
movsb
in
inc
and
out
call
sti
xchg
cmp
add
push
mov
sar
sub
mov
iret
hlt
je
fcomps
adc
fldl
stc
add
je
out
in
xchg
inc
js
inc
cmp
test
mov
orl
lcall
mov
ss
mov
inc
push
pushf
fcmovnu
jnp
ss
push
jge
and
cmp
push
mov
stos
pop
sti
fidivl
les
mov
gs
mov
imul
push
es
lea
dec
mov
and
call
cmpsb
pop
xor
inc
addr16
sti
jne
mov
xchg
sbb
push
lock
shlb
mov
jb
jp
lods
pop
pop
mov
movsb
fwait
xchg
inc
fisttpll
dec
xchg
jle
sbb
enter
sbb
sbb
sbb
adc
loopne
daa
mov
das
int3
push
in
mov
pop
pop
scas
dec
arpl
push
lock
jg
andl
mov
stc
xchg
fnsave
enter
aaa
into
sbb
mov
mov
push
popf
inc
popa
cltd
xor
sbb
fpatan
cmpsl
ds
ss
test
sbb
stos
ja
sbb
pop
repnz
orl
push
stos
inc
subb
mov
cmc
adc
ja
lods
iret
pushw
push
daa
mov
repnz
insl
inc
adc
movl
in
mov
in
imul
sub
xchg
jae
push
xor
sahf
xchg
jo
lds
xchg
inc
xchg
sub
jns
mov
push
gs
cmp
mov
inc
scas
stc
fs
mov
cmp
or
mov
ud1
xchg
push
push
popf
cmp
mov
ret
arpl
xor
aaa
sub
jmp
lcall
loopne
flds
sub
pop
fwait
jge
clc
ljmp
cld
sbb
jns
in
movsb
sub
fs
fs
fstps
add
pop
addb
ret
mov
lret
xchg
cmp
lods
jne
cmp
inc
gs
lds
addr16
cmc
mov
rclb
adc
sbb
mov
test
pop
mov
jl
lock
xchg
outsb
mov
ret
xor
ss
adc
dec
mov
jge
divl
jae
nop
out
ror
ret
xor
mov
stos
scas
xor
adc
jno
repz
push
mov
xorl
cmpl
or
mov
cs
mov
ja
stc
dec
inc
or
or
mov
xor
daa
fiaddl
inc
scas
mov
fidivrl
push
clc
pop
insl
lds
into
sbb
mov
imul
mov
fs
or
jns
out
cmpsb
lret
pushf
xchg
aaa
inc
and
mov
sti
sbb
js
mov
insl
mov
hlt
push
rorl
cmp
xor
and
scas
outsb
adc
jno
mov
xchg
mov
pop
cs
cmpsl
sub
cmp
shl
inc
or
ljmp
cmp
adc
cmpsb
daa
jbe
sbb
and
insl
repnz
push
aas
pop
lock
pop
adc
inc
mov
cli
mov
mov
jb
cmpsb
daa
fs
outsl
repz
inc
or
clc
sahf
aas
ss
jg
andb
mov
push
cld
and
ds
push
pushf
xchg
adc
roll
cli
std
adcl
int
jns
push
add
bound
sahf
mov
mov
inc
adc
fsincos
pop
jmp
lahf
cmp
add
pop
aaa
movsl
cmp
sti
pop
int
adcb
mov
and
pop
mov
add
cwtl
cmp
das
lods
mov
mov
mov
test
xchg
cltd
cmp
out
cwtl
add
popf
ds
pop
sub
mov
mov
sub
pop
addr16
jns,pt
sub
mov
cld
pop
lods
mov
stos
pop
add
popf
out
pushf
ds
std
sub
mov
jle
cmpsl
lods
mov
mov
sbbl
and
mov
shrl
fnstcw
test
pop
fisubrs
push
mov
pop
insl
sub
mov
and
mov
movsl
mov
mov
nop
sbb
cmpl
lock
lods
gs
ja
cmp
pop
shlb
aas
push
sbb
mov
cwtl
dec
add
lods
mulb
jnp
in
js
leave
das
sahf
cmp
adc
ds
mov
mov
jmp
repz
xor
and
fdivl
xor
js
and
xor
jo
add
mov
pop
and
fsubp
mov
mov
rcll
ljmp
add
and
popa
xor
insl
frstor
mov
jae
cmc
dec
cmpsb
jno
add
and
push
js
xchg
out
fsubl
mov
repnz
dec
daa
icebp
gs
pop
and
cld
lods
mov
shr
pop
jmp
add
lock
stos
daa
repnz
push
ljmp
rorl
push
adcb
pop
stc
mov
cwtl
cmp
mov
lahf
push
pop
out
push
push
jb
adc
clc
pop
cli
pop
or
cmp
jge
sbb
mov
sbb
mov
mov
cmp
mov
mov
mov
cmp
and
pop
or
cmp
cmp
lds
stos
cwtl
aas
fxch
jnp
or
mov
pop
pop
dec
adc
mov
jle
jmp
mov
lock
into
xor
addl
lea
lret
shlb
fs
push
mov
stos
addl
or
sbbl
cmp
test
ja
mov
scas
xor
push
adcl
insb
jno
mov
roll
lock
push
add
xor
push
xor
push
fstl
mov
in
xor
mov
mov
cmpsl
sub
push
xor
lds
cmp
sbb
mov
xor
mov
or
popa
sbb
test
inc
pop
xor
or
sub
stos
xor
imul
xchg
sti
pop
sti
das
inc
or
ret
addr16
sbb
xchg
ds
mov
test
and
hlt
pop
and
cmp
notb
ds
xchg
aaa
xor
mov
sub
lcall
lcall
push
out
mov
push
adc
sub
adc
lods
fwait
inc
inc
dec
daa
stos
mov
or
jne
add
sbb
aad
lea
pop
cmpsb
sub
and
mov
shrl
sti
mov
sbb
mov
mov
cmp
mov
mov
test
cmpsb
xchg
hlt
pop
jg
hlt
pop
mov
or
loopne
pushf
sbb
dec
pop
push
bswap
mov
mov
fadd
lds
xchg
mov
push
add
fadds
cmp
nopl
pusha
out
pusha
dec
jp
jae
jb
xchg
imul
rorb
mov
lret
mov
lods
fidivrl
xor
fsub
pop
orl
push
out
imul
fidivl
mov
xchg
jp
xor
dec
mov
pop
aam
insb
aas
pushf
add
pusha
cmpsl
xor
fdivl
movsb
cmp
sub
fs
push
adc
jmp
pop
aam
repnz
pop
int3
pushf
movsb
ss
cmp
sbb
pop
movsb
aam
iret
mov
mov
ret
movsl
pop
pop
negl
rclb
mov
test
jg
xor
test
pop
das
stos
lret
xchg
out
xor
add
lret
sub
pop
imul
hlt
xor
xchg
xlat
sub
cmp
test
mov
xorb
pushf
mov
dec
push
pop
scas
mov
lods
ljmp
loop
jecxz
push
repz
push
pushf
adc
push
popf
les
and
push
movsl
add
aad
mov
lcall
pop
add
aad
sub
pusha
test
mov
add
cltd
and
cmpsb
lret
mov
mov
pop
js
xor
daa
stos
xchg
orb
adc
and
fidivs
sti
inc
fsubrl
mov
loope
in
test
aaa
mov
leave
out
daa
mov
repz
fists
adc
or
mov
inc
sub
jmp
cmc
sahf
aaa
movsb
imul
loope
xlat
outsb
and
pop
push
push
xor
std
arpl
inc
jae
cmp
or
pop
orb
call
incb
loopne
sbb
pop
sahf
xchg
xor
inc
adc
movsb
lcall
add
mov
sbb
into
fsubrs
out
sarl
push
es
pop
inc
leave
jecxz
icebp
pop
lcall
inc
mov
mov
loopne
sub
iret
cmp
jae
mov
scas
sub
pop
sub
movl
push
mov
mov
gs
mov
mov
xor
inc
fiadds
pop
call
jecxz
jmp
pusha
in
stos
jmp
scas
sbb
cmp
aas
or
arpl
ret
mov
out
mov
xchg
fcomip
push
rol
aad
lret
push
mov
mov
stos
or
ficoms
movsl
mov
cmpsb
pop
mov
xchg
mov
jl
xchg
xchg
data16
or
and
bswap
jno
xchg
aas
push
insl
hlt
roll
push
nop
or
xchg
int3
cwtl
cmp
movsl
xor
adcb
lds
pop
jge
pop
movsl
test
mov
pop
decl
ja
lods
sub
int3
inc
adc
cmpsl
add
shlb
insb
and
cltd
popa
jbe
aad
jg
stc
imull
call
ljmp
sbb
sbb
dec
dec
add
cmpsb
cltd
jl
push
mov
cmp
bound
sti
sbb
mov
stos
inc
push
xchg
inc
xchg
cmp
pop
add
arpl
mov
pop
sarb
mov
adc
mov
jp
push
movsl
mov
inc
out
or
ds
push
outsb
push
adc
test
int3
mov
and
sbbb
push
js
mov
pop
lods
mov
adcl
mov
mov
cmp
fistpll
and
pop
jmp
mov
jnp
jmp
push
jle
jnp
sbb
inc
mov
rol
rclb
int3
xchg
jecxz
jns
xchg
mov
movsl
xor
xor
and
xor
and
mov
daa
pop
fdivrl
bound
stos
jge,pn
jo
cmp
jo
mov
loop
or
jl
push
scas
sub
fnstenv
mov
lret
xchg
aas
sbb
cli
pop
nop
inc
fdivrs
movsl
xor
adc
imul
pop
mov
dec
push
mov
movsl
lds
mov
je
dec
push
xchg
gs
int3
ret
aad
data16
sub
push
cld
cmpsb
cmp
sub
mov
xchg
insl
ljmp
xlat
outsb
into
xchg
les
inc
or
lret
pop
xchg
xchg
cmp
push
sub
mov
mov
aas
cwtl
add
rclb
shr
mov
std
emms
mov
sub
xor
pop
roll
fdiv
hlt
movq
ljmp
cmp
dec
in
in
aad
pop
cmp
pop
repz
push
repnz
mov
lret
cmp
lret
sbb
lret
repnz
add
jo
jnp
add
push
out
stc
push
mov
test
mov
nop
push
jg
inc
lock
lcall
push
cmp
cmp
mov
jne
pop
incl
data16
scas
push
movsb
mov
lods
xchg
inc
repz
fucom
in
push
ljmp
add
movsb
xor
mov
mov
mov
push
fsubl
rcl
push
add
cmp
mov
pusha
hlt
push
scas
repz
cmp
inc
jae
or
inc
call
js
jecxz
les
mov
lcall
add
sbb
mov
fs
aas
test
pop
mov
push
add
jl
xchg
addb
into
lea
mov
sbb
inc
stos
test
mov
aaa
cld
xchg
imul
sbb
pushf
sbb
push
push
jp
aas
test
addb
cmc
pop
popf
jecxz
cmc
adc
inc
or
cmpsl
xor
loopne
mov
int
push
cmpsl
ret
lds
call
inc
mov
movsb
repz
pushf
out
mov
mov
mov
lret
outsl
in
enter
sbb
popf
cmp
sbb
and
and
int
insl
call
repz
subl
jl
mov
cmp
fstpt
add
in
mov
fistpll
stos
mov
fisubl
jbe
mov
inc
data16
sub
lcall
je
subb
popa
ret
hlt
pop
push
jle
cs
rolb
mov
sahf
push
iret
sub
dec
mov
cltd
cmp
push
imul
popf
daa
cs
into
sarl
sub
mov
lods
in
push
pop
shrb
inc
lahf
inc
ret
inc
cwtl
inc
sub
mov
dec
hlt
pop
inc
or
in
xchg
mov
or
ficomps
int3
and
xor
cmp
add
and
inc
push
adc
push
mov
jle
aas
hlt
lahf
insb
repz
push
or
pop
jno
mov
dec
lods
mov
or
out
jbe
fstpt
popw
mov
dec
movsb
daa
xor
test
adc
mov
into
sarb
push
push
dec
xor
mov
popf
sbb
js
mov
adc
add
push
add
scas
push
dec
push
inc
mov
out
adc
add
adcl
insb
add
push
sbb
paddq
or
cwtl
inc
push
jl
and
adc
pop
sti
les
scas
pop
and
mov
cmpsl
xor
ret
inc
adc
sub
cmpl
pop
inc
popa
cwtl
test
or
jnp
sub
add
dec
fmuls
xchg
or
xor
sbb
dec
pop
arpl
sbb
daa
mov
mov
out
dec
adc
add
xchg
cmp
xchg
inc
xchg
cmp
jmp
stc
fs
addr16
xchg
roll
lods
fs
and
loope
xor
sarb
mov
xchg
jnp
mov
mov
cmp
flds
into
divb
cmp
and
in
imul
rolb
xor
sub
movsl
xchg
popf
aaa
lods
sub
loopne
mov
mov
scas
xor
add
dec
adc
inc
aad
mov
stos
and
and
in
push
cmp
jnp
xorl
test
fidivrs
roll
jne
mov
bswap
ja
push
cli
pop
std
pop
inc
push
sahf
mov
mov
inc
adc
pusha
inc
adc
mov
test
addr16
ficompl
mov
outsl
mov
pop
cmp
and
mov
push
js
push
leave
xchg
xchg
sub
fcmovu
je
ljmp
or
ret
pop
jp
mov
mov
inc
cmp
in
sub
rcrb
push
xchg
cmc
or
test
lds
lods
sub
loop
and
pop
lock
pop
cli
outsl
ljmp
inc
xchg
rep
sahf
or
mov
xor
adc
out
jbe
adc
mov
cmp
pop
jns
mov
mov
mov
loope
lret
nop
cmp
xchg
mov
adc
into
stos
xor
xor
xor
cmp
aas
aas
add
xchg
enter
pusha
pop
faddl
ds
insl
in
cmp
es
test
movsb
xor
mov
mov
cmpsl
push
pop
stc
sub
pop
cli
aaa
xor
mov
mov
mov
and
test
adcb
aad
mov
push
jmp
fwait
xlat
outsb
int
aam
add
imul
push
mov
js
pop
push
pop
inc
or
cmpl
fsubl
mov
mov
movsl
orb
lds
push
push
adcb
lcall
adc
add
jae
cmpsb
pop
dec
push
imul
sarb
cmp
imul
or
pushf
jnp
push
mov
bnd
test
addr16
add
movsb
sub
sub
xor
cmp
int3
jmp
fdivrs
imul
inc
ja
sahf
pop
std
cmpsl
fwait
sbb
dec
ds
cli
xchg
scas
sub
loop
imul
out
repnz
scas
add
pop
insl
add
leave
mov
and
shl
pusha
int
mov
jae
sbb
stos
pop
xor
cmpsl
pop
mov
xlat
xchg
add
hlt
outsl
push
ljmp
in
adc
fidivrs
jo
imull
call
rcl
callw
lds
cmp
mov
and
ret
xchg
ret
loop
sbb
or
in
mov
xor
cltd
inc
lods
dec
push
lret
push
fildl
push
mov
mov
inc
or
das
mov
pop
lds
testb
shl
xchg
add
mov
cli
xchg
xchg
or
dec
call
icebp
push
add
xorl
sbb
dec
mov
sub
or
pop
es
cmp
xchg
cmp
cmp
add
jl
push
stos
inc
xchg
movsl
sub
or
mov
dec
jp
sbb
jp
arpl
jge
loopne
mov
jge
imul
xchg
cmp
stos
mov
jle
in
popa
jecxz
push
ret
es
je
mov
mov
fnstcw
lret
push
popf
cld
in
stc
adc
ss
je
addl
pop
ret
aam
aam
jle
mov
add
fcmovu
xor
sti
cmpsl
daa
in
add
jp
inc
or
outsl
add
ss
fnstsw
xor
sub
xchg
in
xor
jnp
neg
ja
inc
push
into
push
icebp
stos
sub
xor
push
jecxz
cld
cwtl
mov
insl
mov
mov
int3
mov
lea
mov
mov
fsubs
mov
push
jle
cmp
push
or
negb
std
or
pop
adc
mov
scas
xor
cmp
push
stc
call
cld
jle
or
pusha
dec
adc
ds
popa
insb
sub
pop
push
pushf
ds
loope
jne
mov
push
stc
movsl
cmp
or
dec
and
cmp
and
xor
xor
add
pusha
jae
lcall
cld
sbb
pop
dec
pop
add
fsubr
jae
xchg
sarl
sbb
shll
fiaddl
mov
scas
xor
ljmp
fisttps
cmp
test
mov
stos
pushf
inc
out
les
push
scas
sub
xchg
and
jmp
mov
sbb
cmp
sub
divl
cmpsl
leave
xchg
adc
push
stc
js
push
cli
imulb
mov
andb
sbb
das
scas
push
cltd
dec
or
mov
mov
movsb
pop
clc
dec
add
out
daa
mov
out
leave
lods
sbb
push
inc
mov
into
mov
mov
or
movsl
icebp
jmp
cmc
imul
inc
push
xchg
jbe
mov
int3
lds
dec
sub
mov
cltd
add
pop
in
pop
add
mov
shr
jns
nop
or
pop
fiadds
jmp
cld
lcall
addr16
call
jge
xor
jno
gs
fdivrl
jg
loope
into
xchg
inc
push
push
ret
jecxz
int3
jle
dec
or
add
pop
sahf
mov
rolb
cmpsl
ds
fnstcw
mov
add
mov
pop
dec
fisttps
loopne
std
adc
and
enter
fiadds
lret
sub
sarl
cmp
xchg
leave
jb
daa
push
and
aam
test
outsb
ja
lock
sahf
bound
fwait
in
pop
mov
inc
cwtl
in
jno
xchg
cmpsl
xchg
mov
lods
add
test
xlat
fadds
adc
mov
cltd
xlat
sub
adc
and
and
sahf
and
mov
add
imul
push
mov
flds
sahf
xchg
lret
test
pop
add
scas
enter
mov
cltd
inc
mov
mov
test
stos
cmp
mov
nop
inc
jmp
mov
adcb
ds
lds
and
dec
mov
nop
inc
xchg
lcall
js
mov
jmp
bnd
test
xchg
inc
imul
lods
sub
int
and
or
roll
mov
ljmp
jno
fnsave
and
xor
cmpsl
sub
push
ret
xchg
test
lds
pop
push
add
pop
push
push
jle
js
xor
jge
xchg
cmp
jmp
incl
iret
add
pop
test
xor
stos
sub
adc
notl
cmp
out
pop
sbb
inc
jge
pop
loop
or
iret
xlat
jl
mov
sub
test
mov
pop
add
in
test
jecxz
cmpsb
jae
mov
mov
out
push
out
xor
xor
scas
xor
pop
add
dec
adc
mov
test
pop
adc
xor
sarb
test
out
outsb
test
add
test
in
mov
rclb
sbbl
out
movsb
pop
push
hlt
xor
lahf
iret
out
mov
repz
outsl
mov
stos
lock
jecxz
test
icebp
push
int3
test
jns
shlb
test
mov
mov
popf
inc
push
outsl
mov
jmp
lods
sub
mov
push
leave
fsubs
push
mov
jmp
push
std
test
adc
push
les
int3
dec
test
pushf
lahf
mov
xchg
leave
loop
or
mov
popa
cs
xchg
cmp
cmp
add
adc
dec
xor
jg
nop
xchg
cmp
scas
and
rolb
jecxz
gs
mov
sbb
lret
pop
xor
je
or
adc
jne
inc
stc
push
inc
psubq
test
loop
out
adc
sahf
mov
add
push
sub
mov
out
add
rcrl
stc
nop
adc
pop
scas
mov
jae
stc
movsb
daa
scas
xor
or
aaa
and
inc
or
xor
inc
or
lods
dec
int3
xchg
or
hlt
pop
xchg
pusha
mov
insl
lock
cmp
mov
and
sbb
jp
scas
jno
xlat
out
add
pop
add
push
adc
popf
jbe
mov
and
je
mov
adc
lods
loopne
pop
das
mov
in
addr16
xor
cs
adc
push
xor
daa
add
test
sub
rolb
insl
icebp
insl
add
je
pop
test
mov
test
popa
pop
in
rolb
jae
sbb
and
cmpsb
nop
xchg
inc
inc
sti
pop
out
and
sbb
insb
add
ljmp
jns
pop
push
cmc
dec
adc
add
xor
pop
ret
daa
xchg
cmp
mov
mov
dec
jecxz
jne
add
roll
into
std
xchg
adc
ffreep
in
inc
adc
sbb
lret
sbb
mov
sbb
jae
cmc
movsl
xor
dec
in
mov
mov
fcmovnu
test
mov
in
mov
and
movsb
test
or
push
std
xor
sahf
mov
stos
xor
orl
cmp
mov
int3
repnz
jp
dec
adc
push
cld
repz
cmpsb
out
ss
inc
popf
inc
jmp
call
jl
and
jo
cmp
jmp
icebp
je
ret
jb
xchg
repz
inc
pop
aad
setnp
je
shll
dec
mov
mov
iret
push
pop
cli
inc
jne
out
mov
js
jae
add
shrl
js
por
cmp
or
test
xor
scas
outsl
jg
notl
sbb
xchg
pop
gs
js
push
mov
sahf
inc
mov
scas
jno
inc
lds
ret
loop
cs
out
insb
daa
ss
out
and
inc
adc
mov
test
test
inc
fyl2x
arpl
popf
and
or
xchg
inc
push
push
es
in
pusha
out
testb
mov
cmpsb
inc
test
jns
xchg
and
insb
js
scas
mov
mov
mov
jg
or
test
cmp
in
aam
shlb
es
out
ret
outsb
sbb
fwait
js
xchg
lock
imul
add
jmp
imulb
es
mov
dec
daa
lods
dec
inc
push
aaa
insl
dec
scas
xor
cmpl
and
jmp
xor
je
ja
arpl
stos
sti
add
add
out
lahf
inc
pop
std
dec
punpcklbw
jns
addr16
push
aad
cmpb
imul
pop
push
je
xorl
pop
std
test
mov
inc
mov
cmp
add
scas
pop
cmp
decl
inc
adc
push
cli
in
daa
jmp
jp
enter
scas
push
icebp
arpl
dec
es
into
mov
mov
adc
aam
ret
xchg
or
push
sbb
add
sub
roll
push
lea
mov
outsl
fistpll
pusha
sbb
dec
psubsw
and
mov
out
xchg
test
stc
adcl
mov
push
outsl
pop
xor
xor
mov
sub
xchg
dec
push
push
xor
jmp
push
cmp
mov
xor
cmpsb
enter
cmpsl
xor
pop
inc
adc
pop
pop
cli
repnz
lret
jae
loope
js
ljmp
push
push
add
push
push
add
and
and
aas
scas
sub
loop
xor
dec
pop
aad
dec
or
iret
nop
inc
cmc
and
je
ljmp
test
aad
pop
cltd
out
xlat
inc
aas
lcall
pop
cld
stos
outsl
roll
or
push
dec
or
pop
mov
rorb
fwait
cltd
rcrl
inc
cvtpi2ps
ret
add
jo
mov
xchg
es
xchg
je
lds
outsl
fldl
leave
cmpsb
jge
mov
mov
fbld
int3
nop
cmp
cmp
sbbl
in
mov
or
mov
pop
mov
ljmp
std
pop
mov
mov
into
mov
pop
incb
fbld
mov
cmp
push
sub
mov
adc
inc
push
cmp
and
outsl
mov
xchg
sbb
mov
inc
daa
je
in
pushf
cld
pop
popa
icebp
aam
fs
in
jae
push
movl
fdivrs
ljmp
sbb
or
inc
lock
pusha
imull
out
test
mov
cltd
or
push
adc
int
dec
lret
xchg
clc
lods
xor
fists
mov
xchg
loopne
and
fs
cmpsl
insb
adc
pushf
add
pop
and
popa
ljmp
push
cld
jecxz
push
negl
std
orw
call
push
out
xor
pusha
mov
and
je
shr
insb
imulb
add
loopne
repnz
mov
mov
push
xor
aad
andl
xchg
jnp
scas
xor
outsl
jg
jbe
xchg
popa
daa
cmpsl
fnstenv
push
je
pop
mov
data16
jp
sarb
lock
cmp
iret
sbb
xchg
fcomps
pop
stc
stc
add
jb
jecxz
ss
dec
pop
mov
jl
je
lret
data16
imul
xchg
pop
xchg
popa
icebp
sbb
add
call
cmc
gs
daa
call
inc
or
fidivl
in
cltd
cmp
repz
mov
mulb
cmp
popf
mov
sarl
cmp
out
insb
movsl
xchg
fidivrl
mov
repz
pop
push
cmp
test
jnp
movsl
cs
mov
sub
pop
cmp
sti
pusha
add
sarb
push
pusha
ljmp
cmp
mov
lods
xor
movsb
dec
push
cmp
cltd
sbb
inc
or
push
lods
das
sub
jmp
lock
scas
push
out
cmp
test
enter
add
pushf
aad
pop
pop
lds
xchg
sub
jp
popf
aam
loope
cld
arpl
repnz
xor
dec
adc
sub
inc
push
aaa
xchg
mov
iret
mov
mov
ds
sub
pushf
gs
in
out
pop
lahf
cmp
idivl
mov
mov
rep
jge
outsb
or
imul
and
inc
dec
sbb
enter
negl
jg
and
fldl2e
jo
addb
mov
icebp
pop
xlat
mull
test
jmp
movsb
sub
push
repz
mov
mov
add
adcb
js
xchg
cld
fs
mov
lods
pop
add
mov
leave
movsb
std
pop
insb
adc
xor
sbb
sub
inc
adc
cmp
insb
in
xor
mov
and
test
mov
inc
or
xchg
test
mov
sub
test
dec
cmpsb
and
xchg
ret
mov
cmc
push
add
sbb
mov
dec
or
jmp
icebp
in
imul
adc
in
mov
mov
stc
adc
push
call
lret
stos
out
xchg
mov
inc
or
mov
jge
or
in
push
add
xchg
xor
icebp
mov
mov
roll
rorl
call
mov
rcrb
popa
cmp
mov
mov
imul
adc
fidivrs
dec
mov
fwait
popa
pop
push
add
pop
xor
jmp
orb
push
mov
xchg
push
or
je
pop
clc
sub
cld
push
xor
sub
lds
mov
rorb
xlat
pop
imull
aad
mov
mov
sbb
jns
enter
pop
add
or
push
pop
push
movsb
xor
cmp
mov
mov
sub
std
stos
mov
out
scas
xlat
jp
pushf
imul
xor
sub
inc
popa
inc
fsubrs
addb
imul
jge
mov
sbb
push
jp
scas
movsb
jae
int3
mov
sbb
xchg
rcrl
leave
lret
lea
fwait
xor
jae
stos
mov
ret
adc
shlb
inc
xchg
cmp
into
jne
nop
sub
cmp
dec
adc
imul
ljmp
xchg
cmp
sub
test
jnp
popa
jbe
add
mov
lods
lds
ja
jno
lds
fcoml
lea
or
cmpsl
cmp
cmp
cmp
inc
pop
sbb
lahf
popf
dec
ret
int3
pop
add
mov
sub
negl
inc
or
add
ja
sub
mov
dec
push
sti
iret
dec
add
fistps
scas
xor
test
cmp
sub
lea
dec
adc
subb
outsl
popa
shll
cltd
cli
jb
enter
cmpsb
mov
mov
adc
inc
pop
add
jbe
addb
cmp
jns
subb
js
sar
data16
imull
nop
mov
lret
sub
sbb
stc
popa
lret
mov
cmp
pop
push
cmp
xchg
cld
cmpl
and
cwtl
das
pop
inc
or
pop
xchg
sub
jnp
imul
repnz
cmp
insb
and
cmpsl
push
lea
lds
dec
jecxz
xor
add
fnsave
mov
sahf
fsincos
xchg
or
cmpsl
ds
mov
adc
pop
inc
jle
into
scas
data16
cwtl
rclb
add
jae
push
or
mov
cmpsl
pop
aas
cli
mov
hlt
loope
into
gs
add
outsb
in
andl
or
ficoml
sub
inc
sti
insl
sub
dec
hlt
mov
mov
test
cmp
xor
and
mov
in
mov
push
jecxz
insb
add
add
jbe
ljmp
mov
sbb
ret
shrb
in
jnp
push
push
out
xorl
jne
aam
and
daa
fdivrl
aad
dec
mov
jnp
pop
repz
pushf
iret
data16
cmpb
out
in
test
aam
das
push
inc
or
pop
xchg
sub
jp
imul
mov
cmp
imul
cmpsl
push
mov
lds
dec
jecxz
xor
add
fnsave
mov
popf
fdivr
xchg
or
sbb
inc
jge
into
scas
gs
xchg
iret
push
in
add
jae
push
or
mov
cmpsb
pop
aas
mov
scas
inc
stc
scas
pop
hlt
loopne
into
gs
add
insl
in
sbbl
or
fsts
sub
inc
cli
insl
sub
inc
ficoms
mov
cld
call
or
and
cmp
mov
push
loop
insb
add
add
jbe
jmp
std
xchg
mov
aas
outsb
stos
sbb
sar
shrb
dec
push
out
xorb
cltd
addr16
rorl
xchg
sub
fstpt
aad
dec
mov
jp
pop
repz
fwait
iret
data16
jp
mov
in
test
rcrl
mov
pop
xchg
sub
lds
imul
repnz
cmp
imul
sbbl
jb
mov
lds
divb
mov
add
fnsave
mov
pushf
sti
xchg
or
sbb
inc
jnp
into
lods
fs
xchg
int
in
mov
lcall
and
movsb
pop
inc
xlat
mov
mov
imull
iret
dec
jl
xor
sahf
push
lcall
movsl
mov
roll
insl
sub
xchg
dec
hlt
mov
data16
out
adc
cmp
xor
and
mov
in
scas
rcrl
insb
add
add
ja
out
and
push
xchg
mov
test
insb
test
pop
mov
loope
jnp
dec
pop
out
jg
add
rolb
xchg
sub
inc
mov
jns
pop
repz
lcall
scas
in
out
test
rcrl
mov
push
xchg
sub
les
imul
repnz
aaa
data16
push
mov
mov
ret
dec
in
das
rclb
insb
add
fidivs
push
cld
xchg
pop
mov
sbb
inc
jp
iret
stos
in
xchg
int3
push
in
std
mov
lcall
and
mov
les
cmc
fcoml
shlb
std
jl
das
imul
popf
push
lcall
mov
sub
inc
not
insl
sub
loopne
dec
hlt
mov
addr16
out
adc
cmp
xor
pop
pop
movsb
cmp
scas
ret
xchg
insb
add
add
js
in
and
push
call
push
sbb
pop
mov
jnp
dec
pop
lock
add
roll
sub
xlat
ds
inc
mov
js
pop
repz
cltd
shrl
jnp
adc
iret
cwtl
das
add
movsb
jno
mov
push
xchg
sub
ret
jne
imul
repnz
ss
addr16
test
mov
lahf
in
rcrl
insb
add
fbstp
data16
cwtl
aam
xchg
push
mov
sbb
aas
jns
shrb
lret
push
out
cld
mov
lcall
and
mov
ret
mov
cmc
test
shrl
sti
jl
sub
dec
lcall
mov
sub
inc
hlt
insl
bound
xchg
inc
hlt
mov
push
test
cmp
xor
sbb
ds
in
lods
ret
pop
fists
loop
xor
mov
adc
ss
push
mov
pop
mov
fucom
jnp
dec
pop
icebp
jl
add
iret
andb
mov
xchg
sub
push
inc
mov
jbe
pop
repz
xchg
shrb
jns
adc
int
das
cmp
mov
push
sub
shlb
movsl
loope
loope
repz
xor
sbb
test
mov
xor
popf
fsubs
lock
pop
pop
adc
inc
jle
ja
mov
xchg
sar
xchg
add
sbb
push
or
pop
cmp
pop
out
nop
enter
mov
fwait
loop
ja
dec
add
mov
lahf
push
inc
fadds
cmpsl
pop
neg
adc
imul
lock
mov
mov
les
pop
dec
loop
inc
cmc
mov
imul
leave
add
pop
ss
mov
out
stos
les
mov
sar
jns
loop
and
add
movsb
push
mov
mov
pop
mov
fsub
jl
dec
pop
icebp
jp
add
int
and
and
aas
add
es
hlt
push
xchg
shrb
js
adc
int3
cltd
xor
cmp
movsl
insb
pop
mov
ret
mov
fisttps
adc
hlt
mov
xor
bound
adc
mov
xor
pushf
movsb
cmp
mov
ret
adc
inc
jl
ja
arpl
add
sbb
push
or
pusha
cmp
cmp
movsl
pop
out
pop
pop
out
divl
ja
dec
add
xor
sub
push
inc
flds
cmpsb
pusha
not
adc
imul
lock
mov
mov
les
icebp
fsubrs
pop
dec
loop
inc
testb
xchg
adc
enter
xor
xor
sbb
cmp
insb
test
outsb
add
loope,pn
and
push
add
data16
enter
cmp
and
inc
pop
icebp
js
add
pop
cltd
js
lret
andb
mov
xchg
sub
add
mov
jb
pop
cmc
push
xchg
shrb
ja
adc
lret
lcall
push
mov
ret
mov
fisttpll
push
imull
push
stos
dec
addl
cmp
mov
ret
movq
inc
jp
ja
bound
xchg
pushl
sbb
popa
cmp
shlb
les
cmc
scas
push
popf
fists
js
dec
add
sub
cmpl
aad
shrl
idivb
sub
mov
mov
cmpsb
out
mov
lds
out
fnstenv
pop
dec
jecxz
inc
testl
movb
and
out
lret
cmpsl
xchg
push
call
jecxz
sub
lea
dec
add
mov
leave
pusha
mov
cmp
jle
inc
pop
bnd
add
adc
jle
mov
sbb
inc
fadds
ds
jo
pop
notb
push
jne
adc
in
mov
leave
fwait
xor
aaa
push
mov
outsl
mov
ret
testb
push
adc
push
mov
xor
cltd
shll
call
pop
or
loope
stos
pusha
mov
mov
inc
in
push
mov
push
lret
bound
jno
shll
ret
pop
icebp
hlt
lods
pop
sahf
fstl
and
cs
push
inc
fiaddl
mov
aam
inc
hlt
jg
es
mov
mov
cmpsl
out
mov
cmp
fnstenv
pop
dec
in
inc
testl
les
mov
xor
xor
push
push
test
xchg
push
call
in
sub
lea
dec
add
bound
leave
pusha
mov
ds
xlat
out
or
repz
add
adc
jl
mov
sbb
inc
fadds
ds
jo
pop
notb
aam
ret
jae
adc
in
mov
fwait
xor
aaa
adc
dec
mov
lds
fisttpl
shl
repz
adc
pop
mov
xor
xchg
shll
call
pop
or
cmp
pop
mov
std
mov
inc
jecxz
pop
mov
add
bound
jo
aam
push
jmp
repnz
pop
sahf
fistl
adc
and
das
lcall
dec
in
mov
aad
inc
bnd
and
repz
adc
lret
cmp
fnstenv
pop
dec
in
testl
ret
and
in
lret
test
test
push
call
fmuls
in
sub
lea
dec
add
popa
lahf
and
mov
ds
out
or
jne
add
adc
jnp
mov
sbb
inc
fdivr
cmp
dec
outsb
and
push
aam
shll
movsb
loop
mov
pushf
xor
xor
mov
lds
shl
repnz
pop
adc
lods
inc
jle
pop
mov
xor
xchg
shll
jmp
push
or
cmp
loop
test
lret
sti
mov
inc
loop
pop
mov
add
arpl
push
ljmp
test
jp
inc
sti
es
cwtl
dec
inc
fstpt
mov
jmp
stc
rorb
pop
and
mov
mov
test
xchg
mov
ss
mov
insb
add
nop
push
lods
sar
and
jecxz
lret
adc
test
xorl
pop
xchg
mov
fisttpl
cltd
jl
lods
inc
pusha
popf
and
mov
ds
aad
jg
inc
pop
repz
push
popf
pop
xchg
jp
jp
mov
sbb
inc
fsin
cmp
clc
push
aam
mov
loopne
mov
lds
cmpsl
sbb
mov
fidivl
xlat
dec
jecxz
mov
push
pop
adc
scas
inc
jl
pop
scas
fs
cmp
call
or
cmp
jns
pop
nop
daa
mov
add
loope
pop
mov
add
fs
cmp
addb
or
inc
cli
daa
mov
xchg
dec
inc
fdivrl
mov
jmp
or
insb
cmp
sbbl
nop
inc
lahf
ss
adc
enter
xor
push
dec
in
cmp
nop
outsb
test
add
pop
scas
sar
and
dec
test
xorl
pop
aam
jno
mov
fimull
cltd
jp
lods
inc
pop
fwait
and
mov
ds
aam
addb
pop
repz
pop
sahf
pop
xchg
jp
les
mov
pop
int3
inc
cmp
stc
dec
mov
imul
repnz
les
cmpsl
bound
mov
lds
dec
jecxz
mov
push
pop
adc
scas
inc
jp
pop
lods
arpl
int
int
cmp
out
lds
jae
cmp
jp
pop
xchg
sub
scas
inc
fistps
and
xor
aad
push
in
addl
or
inc
clc
sub
xchg
dec
inc
fnstsw
mov
out
fs
int
insl
cmp
sbbb
pop
hlt
mov
scas
adc
movb
enter
jae
push
dec
out
cmp
xchg
insb
cmpsb
insl
add
lea
scas
mov
loopne
int
dec
test
jmp
mov
jb
mov
in
and
inc
add
pop
cltd
and
mov
aas
sbb
ljmp
and
jnp
ret
mov
adc
ss
push
mov
insb
mov
fdiv
mov
ret
hlt
das
adc
inc
subl
jae
rorl
add
cli
xchg
out
and
sbb
stos
popa
aaa
into
xchg
lret
cmpsl
ds
mov
in
in
pop
push
add
in
mov
les
cltd
cmc
stos
mov
fstl
and
xor
lcall
hlt
in
movsb
or
aas
imulb
mov
xchg
dec
inc
fnstsw
mov
sti
lret
pop
xlat
outsb
cmp
sbbb
pop
cmc
mov
scas
adc
les
xor
xor
fdivl
push
push
out
cmp
xchg
push
outsb
add
mov
fidivs
int
dec
stos
inc
jle
push
jmp
lahf
enter
jb
mov
out
and
nop
daa
or
fwait
ja
scas
inc
pop
cwtl
and
scas
ljmp
add
or
shll
cmpsb
loop
xor
inc
xor
arpl
dec
mov
insl
mov
fcomi
mov
adc
inc
xorb
mov
fdivl
rorb
add
insb
add
sbb
test
lret
cld
mov
in
loop
pop
dec
add
jo
jl
push
xchg
sub
test
and
cs
in
addl
or
ds
sub
xchg
inc
inc
fnsave
mov
sti
leave
push
fsubrs
ljmp
mov
adc
ficoms
xor
xor
fdivl
push
push
out
aaa
cli
xchg
imul
and
fnsave
int
dec
stos
inc
jge
push
jmp
sahf
enter
jb
mov
out
and
nop
daa
pop
inc
add
jbe
scas
inc
pop
xchg
and
lods
jmp
ljmp
and
lahf
push
mov
je
mov
adc
inc
xor
dec
sbb
dec
xchg
insl
mov
mov
lahf
ss
sub
mov
mov
fdivl
rorl
add
insb
add
sbb
test
aaa
into
sti
mov
in
loope
pop
dec
add
outsl
in
mov
ret
repz
inc
ficoml
mov
sub
dec
in
addl
or
cmp
pop
fwait
xor
mov
push
in
fs
enter
aaa
jmp
testb
lods
adc
fisttpll
xor
das
jecxz
jae
push
push
out
ss
xchg
push
mov
scas
mov
fdivl
int
dec
stos
inc
jl
push
jmp
popf
enter
jb
mov
out
and
nop
daa
push
inc
add
jne
scas
inc
pop
xchg
and
lods
call
ljmp
and
lahf
push
lea
jae
mov
adc
inc
fcomi
xor
cli
dec
xchg
insl
mov
fxtract
mov
mov
adc
inc
jle
scas
fdivl
rorb
add
insb
add
mov
jne
and
enter
scas
push
in
loopne
pop
dec
add
outsb
in
mov
roll
repnz
mov
fsts
and
sub
inc
xlat
xchg
dec
in
cmpl
cmc
jmp
or
cmp
sub
nop
inc
inc
fnsave
mov
sti
movl
sbb
pop
testb
stos
adc
fmull
xor
loop,pn
jae
push
push
out
xor
outsb
add
mov
int
dec
stos
inc
jnp
push
jmp
pushf
enter
jb
mov
out
and
nop
daa
add
es
inc
pop
xchg
and
stos
out
xlat
sbb
ljmp
and
mov
mov
ficomps
fdiv
xor
sti
dec
test
insl
mov
sbbb
xlat
hlt
mov
mov
adc
inc
jl
lods
arpl
je
into
dec
in
mov
xchg
call
or
mov
jae
and
test
in
ficomps
enter
je
xor
jge
push
xchg
sub
mov
xlat
adc
mov
sub
fcoms
mov
imul
sahf
or
cmp
sub
popl
fnsave
mov
sti
lds
fnstenv
out
sbb
push
testl
fisttpl
lret
fdivl
dec
push
call
mov
sbb
fnstenv
int
dec
stos
inc
jp
push
jmp
fwait
leave
pusha
int
jb
scas
out
out
and
nop
daa
add
mov
sub
xor
test
jne
jecxz
mov
mov
cmp
addr16
mov
mov
mov
and
mov
sbb
jl
rcrb
jl
sbb
sub
std
mov
cmp
sbb
daa
mov
es
dec
imul
and
cmpsl
fbld
gs
push
xor
notb
in
jecxz
adc
dec
clc
add
popf
les
out
mov
pop
inc
movsb
xchg
arpl
dec
ret
cmp
inc
in
test
jl
aas
sbb
xor
out
mov
adc
lret
inc
push
out
sub
movsl
clc
cmc
jg
lcall
push
sbb
lret
les
mov
cmpsl
push
dec
mov
stos
cmpsl
dec
mov
decl
inc
mov
stos
fistl
cwtl
and
repz
sub
and
cli
subl
stos
pop
mov
cld
xchg
addr16
mov
xlat
fadds
fdivrs
xchg
mov
add
das
cmpl
inc
cmp
mov
push
dec
mov
test
push
inc
pop
mov
push
insb
out
test
push
pop
dec
xor
insb
jno
insb
xchg
push
inc
mov
push
aam
lea
bound
xor
ret
test
and
or
cmp
mov
jl
and
fisttps
pop
dec
push
and
jp
pop
arpl
scas
cmp
add
fildll
clc
push
hlt
cmp
jno
jmp
cmp
mov
cld
ret
xor
push
popf
clc
dec
rclb
pop
push
dec
aas
sbb
mov
aas
arpl
clc
inc
aas
mov
fisubrl
mov
vpcmpgtd
shlb
jbe
addr16
icebp
pop
iret
mov
inc
jmp
add
add
add
xor
add
add
add
add
and
add
add
add
add
sbb
add
add
add
add
idivb
stc
xor
push
xchg
fcoml
jecxz
stc
movsb
sbb
scas
pop
add
js
out
popf
in
sbb
sarl
loope
cmp
jnp
add
cmp
lret
les
dec
xchg
cmp
or
pop
and
stos
std
addr16
pop
jmp
hlt
adc
je
and
xchg
sarl
fnstcw
ljmp
pop
cmp
xor
pushf
push
or
mov
adc
jmp
frstor
mov
aad
in
es
arpl
xor
pop
data16
into
cmpsb
idivl
sub
sbb
push
rorl
fwait
scas
out
fcompl
or
dec
enter
mov
xchg
fisttpl
outsb
jecxz
jnp
ds
je
adc
out
sbb
pushf
stos
sub
imul
mov
mov
iret
sub
rcrl
orb
inc
jne
adc
pop
cmp
lods
mov
stos
ss
loop
adc
in
sahf
movsl
test
xchg
lock
cltd
sahf
and
rclb
icebp
push
fs
xchg
cli
add
xchg
lret
pop
fidivl
enter
inc
fstpt
mov
sub
adc
movsb
sub
mov
mov
xor
and
mov
push
cmpsl
cmp
into
cmpsl
pop
xor
movsb
mov
mov
leave
dec
shlb
clc
jbe
dec
or
jmp
outsb
xchg
scas
popf
mov
inc
test
mov
and
sbb
sbb
pop
xchg
hlt
adc
dec
scas
dec
add
push
ljmp
or
outsl
or
mov
in
stos
pushl
or
add
ja
scas
std
or
push
shlb
aas
push
mov
push
cmp
pop
dec
jbe
mov
xor
jb
mov
cli
jbe
jle
jnp
imul
mov
in
cmpl
fcomps
jne
sub
push
pop
aad
jne
xchg
test
jne
mov
adc
sbb
add
lods
cli
fcoms
dec
jb
int3
xor
adc
out
ret
leave
fidivl
fisttpll
push
mov
ret
in
cltd
cld
pop
fnstenv
out
insb
stc
lea
fcom
jp
jb
leave
mov
jmp
xchg
pop
js
cmp
push
dec
push
incl
and
ret
insl
pop
or
inc
out
fwait
sti
jl
cmp
insl
dec
xor
outsl
shrb
mov
aam
sbb
xorl
cmpsl
scas
push
pop
hlt
lcall
rcrb
insl
mov
out
pop
cmp
test
addl
lods
incb
jbe
jo
test
dec
mov
stos
ss
pop
sbb
out
or
jns
mov
xor
fiadds
adc
dec
rcrl
or
xchg
nop
pop
inc
xor
mov
inc
loop
cmp
fidivl
hlt
icebp
adc
jmp
rclb
push
shr
in
inc
sub
shr
pop
xor
js
jno
jecxz
sub
sbb
inc
cmpsl
jno
into
adcl
sbb
adcl
sub
push
out
jecxz
adc
adc
add
fisubl
popf
into
mov
push
sbb
push
in
arpl
loope
loop
orb
push
cmp
hlt
icebp
adc
xor
stc
cmpsb
jns
cs
dec
pop
sub
ret
pushf
inc
xchg
out
jo
jbe
adc
xlat
sti
mov
cmp
loope
loop
repnz
push
testb
jns
rorl
push
xchg
push
xchg
mov
cwtl
sub
xlat
addr16
loope
xchg
push
aas
push
and
lcall
cli
push
mov
lods
add
mov
repnz
lret
icebp
adc
in
pushf
fsts
push
mov
jno
stos
aam
or
push
or
sub
add
mov
sub
aad
scas
sub
fdivrl
enter
ds
lret
mov
adc
bound
loop
jmp
mov
push
fistl
mov
sub
nop
cld
mov
push
push
fisubl
pushf
mov
cld
lods
bound
je
cld
mov
ss
imul
pop
mov
mov
jg
xchg
filds
shlb
adc
imul
xchg
ret
cwtl
lea
test
sbb
push
je
iret
pop
sub
mov
dec
pop
pop
sbb
jbe
outsb
test
add
xlat
dec
or
and
add
add
sbb
and
int
fistl
outsb
fwait
push
dec
mov
adc
aaa
lahf
out
inc
mov
or
fidivl
xor
mov
dec
les
jbe
sub
push
dec
gs
push
mov
lahf
mov
mov
xchg
aam
dec
or
mov
or
mov
enter
lahf
das
xor
sbb
es
in
sub
cld
sub
jg
sarl
ret
es
in
pop
and
decl
fildll
jae
mov
icebp
cwtl
lret
add
notb
loopne
jmp
popa
pusha
jne
inc
jecxz
out
bound
cmp
in
dec
sahf
arpl
inc
add
add
sbb
jg
call
lret
std
jne
xchg
sub
pop
out
scas
mov
cmp
idivb
in
pop
jb
and
je
loop
sub
insl
nop
xchg
xchg
lods
rcr
shlb
sub
cmp
mov
xchg
rorl
hlt
sub
dec
scas
cli
xlat
or
sub
stc
divl
xchg
testb
mov
js
out
mov
lcall
adc
cmp
sub
cwtl
fs
dec
call
add
arpl
pop
xchg
sbb
inc
gs
dec
push
or
rep
fbld
ljmp
jle
fdiv
leave
or
xlat
test
jnp
popf
icebp
jmp
xchg
insl
mov
lds
mov
mov
mov
xchg
mov
test
mov
andb
in
test
inc
cmpl
insb
lret
push
mov
jae
out
fsubr
cmp
cmp
adc
jae
sbb
add
jmp
mov
icebp
inc
inc
lret
and
