pop
stos
stos
xchg
add
in
cmp
inc
movsb
sub
push
pushl
push
push
push
push
lea
push
call
xchg
outsl
sub
ret
mov
hlt
insl
ja
mov
add
pop
je
inc
add
dec
add
in
mov
or
sbb
jne
insb
pop
mov
and
lea
push
push
hlt
add
mov
or
in
call
out
jle
ja
push
push
push
inc
je
dec
mov
call
xchg
inc
pop
je
dec
in
insl
ja
lock
push
add
int
push
clc
call
jg
mov
push
popa
push
jns
add
mov
jle
dec
push
dec
jns
lock
call
inc
movsl
popa
imul
mov
lock
pop
mov
aaa
push
call
incl
push
mov
and
das
adc
xchg
push
pop
call
mov
cld
call
xchg
hlt
pop
dec
insl
jns
fsubrp
ljmp
push
add
and
in
mov
push
push
add
lock
call
or
push
push
in
pushf
mov
push
popf
arpl
pop
call
ror
inc
push
jp
ret
in
das
loopne
sbb
inc
sbb
add
in
sbb
js
push
sub
push
push
push
jae
push
add
xor
push
mov
lock
xor
outsl
pop
mov
cmp
jns
mov
push
cmp
inc
dec
jo
gs
jno
dec
leave
fsubr
ds
sar
out
mov
gs
mov
sti
jno
push
push
into
pusha
mov
xor
iret
adc
sbb
jg
sti
dec
jne
roll
neg
sbb
add
dec
sub
mov
jmp
push
lock
mov
enter
push
lahf
std
adc
movb
inc
adc
neg
sub
add
inc
not
in
push
flds
xlat
inc
neg
add
sbb
sub
dec
push
sbb
add
jnp
ljmp
ret
push
not
add
adc
add
dec
pop
sub
cmp
push
divb
mov
fsubrl
dec
push
test
mov
jg
pushf
test
adc
pop
push
or
jle
xchg
sahf
inc
dec
dec
dec
lcall
dec
jmp
popl
sbbb
fidivrs
xchg
inc
clc
in
fs
push
ss
notb
and
xor
jne
jne
test
addr16
cld
xor
push
dec
fdivs
jp
cmp
call
cmp
mov
leave
loope
adc
clc
rcrl
push
outsl
out
add
dec
inc
shr
aam
sub
lcall
mov
pop
dec
jo
bound
inc
mov
push
fists
cs
pop
js
insl
lock
inc
gs
add
loopne
inc
xchg
popl
mov
out
lock
dec
mov
sbb
sti
and
popa
dec
xor
std
sti
stos
ficomps
shrb
arpl
lock
jae
mov
inc
sbb
int
xorb
push
inc
cmpsl
je
inc
pop
or
cmp
xor
ss
mov
pusha
fcmovu
imul
or
and
jp
aaa
xchg
sbb
push
aaa
je
insb
outsl
call
aaa
outsb
dec
add
xor
dec
jmp
scas
jg
rcrl
repnz
mov
insb
sbb
jmp
fsubs
fcmovnu
in
sbb
outsl
jge
fildll
xor
push
inc
fiaddl
movsb
and
sub
cmpsb
push
out
arpl
push
ss
xor
adc
cmp
enter
fildll
mov
mov
and
call
bound
pop
mov
pop
push
push
sbbl
mov
add
mov
lods
dec
inc
fs
dec
mov
loope
push
push
push
lahf
insb
aas
jecxz
sub
push
pop
mov
sbb
xor
inc
inc
lds
das
mov
insb
ja
add
imul
ret
dec
add
push
xchg
in
test
loop
dec
inc
inc
bound
jo
jmp
xor
imul
or
lods
xchg
mov
lahf
and
fs
dec
inc
push
push
movb
cmp
js
mov
in
int
loopne
jb
rolb
push
or
cs
add
adc
sbb
mov
jmp
mov
xchg
fsubs
loopne
arpl
clc
dec
popa
adc
push
adc
addr16
adc
jge
mov
fistpl
stc
mov
repnz
imull
shlb
sub
sbbl
call
in
add
dec
push
mov
xor
push
in
aad
mov
cmp
ficoms
adc
loope
imul
cli
scas
daa
jle
cmpsl
mov
insl
cld
add
inc
nop
cld
inc
outsl
imul
fcompl
push
aaa
dec
aam
dec
pop
sbb
rclb
add
orl
cmpsl
add
test
popf
push
mov
lds
push
xchg
jns
sbb
js
jmp
cmp
mov
add
push
jb
cmp
sbb
lock
fs
call
sub
call
cmp
and
xchg
jo
mov
imul
mov
push
rorb
pop
sub
idivb
xor
rcrl
call
je
in
jns
dec
mov
jbe
xor
inc
ja
outsb
insb
inc
int3
sub
cmp
out
cmp
inc
mov
mov
add
dec
cmp
inc
mov
adc
ret
sub
dec
jbe
outsb
cld
loopne
in
lods
push
movsb
jo
dec
arpl
cmp
jbe
cmp
loop
xor
push
and
and
data16
ret
or
aaa
ss
xor
push
add
inc
sbb
jge,pt
outsb
jo
enter
dec
push
dec
xchg
mov
cmp
push
pop
dec
pushf
test
inc
fmull
mov
lock
and
xor
pop
and
aas
push
mov
xor
xchg
fistpl
mov
inc
idivl
test
jbe
fiadds
jp
and
sub
filds
pop
or
or
xor
sub
adc
popa
in
sub
jmp
pop
lahf
cmpsb
notl
pop
mov
movsl
mov
dec
xor
stos
fisttpl
orl
dec
loopne
addr16
imul
add
icebp
punpckldq
xchg
or
icebp
dec
push
jae
ss
dec
fdivl
pushf
sbb
push
fwait
notl
ja
into
lock
inc
inc
pop
aaa
sti
aas
mov
inc
jne
pop
xor
xor
xchg
cwtl
mov
sub
inc
add
adc
add
jg
daa
dec
test
loope
adc
lods
rcl
jns
lods
inc
jo
xlat
mov
inc
xchg
xor
sbb
inc
jmp
xor
shr
jmp
mov
xchg
ds
inc
outsb
push
fdivr
inc
and
mov
call
mov
push
cli
sbb
sbb
or
adc
fadds
push
fcom
in
sub
xor
jl
and
rorb
pop
lahf
je
inc
stc
lock
lret
xor
fdivrs
adc
adc
add
cmc
sbb
push
call
push
push
jecxz
jp
call
sbb
jb
inc
test
cmpl
and
jo
pop
pushf
inc
pop
jo
adc
dec
ljmp
pop
inc
jns
sub
adc
mov
repnz
inc
cli
stos
aaa
out
push
dec
inc
mov
stc
shrl
xor
lods
aas
sbb
aaa
xlat
das
leave
inc
dec
pushl
not
jmp
pusha
inc
dec
xlat
je
inc
add
icebp
push
out
loop
or
jmp
add
rcrb
push
or
orb
fcoml
mov
repz
cli
and
dec
bound
mov
mov
ja
call
pop
iret
hlt
jbe
and
or
fldl
lock
mov
sbb
sbb
loopne
push
sbb
cli
and
inc
and
inc
adc
push
pop
mov
jmp
andl
or
push
and
inc
arpl
push
inc
adc
push
push
testb
sbb
addl
jo
ret
ret
xor
push
popf
aam
outsb
adc
push
imul
sti
sbb
dec
pusha
les
sub
int3
std
push
push
cmp
iret
push
test
dec
dec
xlat
sbb
jnp
pop
test
sub
mov
insl
cmc
ret
cli
add
fists
adc
add
xor
dec
push
outsb
mov
jl
push
mov
shl
push
pop
ss
push
aas
mov
mov
xchg
inc
jmp
gs
int3
sbb
push
dec
adc
mov
ds
and
rolb
add
sarl
mov
repnz
mov
lea
sbb
mov
or
shrb
xchg
push
xor
cmp
mov
push
imul
inc
jecxz
or
inc
cmp
sbb
scas
outsb
cmp
add
dec
push
outsl
ja
insb
push
shl
cmp
arpl
andl
daa
xorl
cmpsw
cmpsb
push
imul
test
inc
scas
out
inc
push
iret
stos
mov
or
mov
test
movsb
fimuls
mov
std
addl
aaa
xor
insb
aaa
fwait
rcrb
dec
dec
inc
popa
and
rcrb
dec
clc
xchg
mov
push
jno
imul
fcoml
lock
fisubs
cmp
and
xchg
call
push
test
shrb
ficoms
xor
out
pop
mov
mov
aas
clc
inc
xor
push
loope
je
cmc
dec
xor
inc
gs
ja
cmp
ja
mov
aas
les
push
inc
sbb
mov
jo
pop
mov
sar
orb
jno
imul
sbb
xor
or
inc
push
push
sbb
fsubs
push
cmpsl
lods
ficompl
add
inc
ja
pop
sbb
push
xor
addr16
fsubr
lds
subb
adc
aaa
nop
jo
ret
rcrb
sbb
adc
jmp
mov
int
popl
cld
call
mov
pop
pop
in
mov
pop
aam
mov
popa
js
popa
cltd
insb
add
out
cmp
data16
out
xor
loope
cmp
pop
inc
inc
fdiv
cmp
adc
popa
xor
cmp
mov
pop
sbb
xor
addb
jge
inc
inc
lret
push
in
shrb
adc
mov
int
jl
psubq
cli
ss
push
xor
add
and
push
pop
xor
add
loopne
and
loope
or
les
push
stos
sbb
lods
and
xchg
xor
pop
xor
imull
push
lea
inc
pop
jae
outsb
jae
fwait
pop
xorl
push
divl
ret
test
insl
clc
dec
push
je
mov
shrb
add
sbb
pushf
test
xchg
aas
adc
xchg
cmc
pop
sub
jnp
pop
scas
sub
outsb
outsb
mov
pop
lahf
sub
rorb
lods
push
adc
jle
jo
dec
sbb
dec
fisttpll
mov
loopne
mov
in
dec
jp
add
jne
xor
fs
adc
fs
cltd
xorl
call
mov
push
mov
mov
adc
lods
sti
cwtl
jne
test
fidivrs
lea
dec
push
daa
mov
or
in
mov
icebp
or
jb
xor
nop
loop
stos
push
outsl
call
pop
clc
cwtl
pop
jecxz
dec
mov
sbb
repz
push
imul
test
fisttps
call
xchg
pop
dec
pop
dec
mov
mov
ss
stc
xor
aas
cmp
dec
dec
inc
push
sbb
in
xchg
cmp
xor
in
mov
arpl
jo
mov
inc
sub
sbbb
div
shrb
adc
lock
ss
xor
aad
out
sbb
imul
sbb
add
mov
jg
sub
insb
pop
adc
xor
fimuls
jbe
in
std
add
jno
outsb
jecxz
lret
sbb
loope
rolb
loopne
bound
int
cld
fwait
or
vmwrite
and
popa
inc
dec
jns
outsl
icebp
pop
ljmp
push
xchg
adc
inc
bound
scas
pop
fidivs
pushf
xchg
loop
inc
push
gs
cmc
add
shlb
int3
dec
or
push
outsb
stos
inc
xchg
clc
inc
push
push
push
push
inc
xor
push
sbb
cmc
inc
sbb
add
nop
xor
gs
outsl
insl
cwtl
popf
inc
movsb
divl
in
out
outsb
xor
bound
pop
fs
sbb
clc
sub
mov
xor
inc
pop
daa
cmp
jae
mov
cmp
xchg
push
pop
mov
and
mov
xor
bound
cltd
lods
xor
out
sbb
sbb
call
sub
call
inc
push
xchg
mov
dec
hlt
inc
or
cmc
jns
mov
mov
std
sbb
sub
sbb
jb
ljmp
sub
push
add
inc
ja
inc
mov
decl
jb
cmp
inc
mov
neg
sub
xor
inc
jbe
fistpl
repz
fwait
cmc
lods
cmpsl
ret
adc
pop
inc
or
daa
jge
js
ret
cmp
test
push
push
test
push
mov
pop
cmpsl
shlb
sbb
loopne
mov
push
outsl
xchg
loopne
push
push
ja
orb
jne
xor
jo
jno
mov
or
xlat
js
test
and
cmp
cmp
pop
dec
out
xor
insl
cmp
lea
jecxz
inc
aas
incl
xor
shll
mov
arpl
pop
arpl
outsb
mull
inc
push
xor
xlat
jo
mov
call
cmp
and
push
fisttps
xchg
adc
ljmp
in
or
insl
push
xchg
imul
and
push
subl
fnstsw
pop
outsb
jbe
jb
and
test
jb
mov
inc
gs
ja
push
or
rorb
movsl
scas
lret
jb
push
fidivs
mov
nop
xor
cmpsl
inc
pop
ret
ja
mov
mov
test
push
les
inc
add
mov
loope
mov
sbb
daa
jmp
cld
mov
je
rorl
lcall
dec
inc
clc
push
xor
lock
pop
mov
rcr
push
dec
addr16
push
insl
aaa
fsub
aaa
bound
dec
dec
aaa
sub
adc
loop
mov
jne
loop
push
cs
mov
int3
add
andl
add
or
push
negl
pop
push
popf
test
and
dec
jecxz
cmpl
jns
push
lock
das
or
mov
mov
push
xor
mov
mov
mov
dec
in
popf
jmp
jecxz
inc
cwtl
movsb
and
aaa
mov
pop
js
mov
mov
cmc
and
test
mulb
aaa
xor
mov
jmp
inc
jbe
repnz
call
mov
dec
sbb
test
inc
ja
and
in
adc
or
adcl
pushf
inc
inc
movsb
inc
cmovnp
adc
insl
sub
xor
arpl
nop
loope
in
push
inc
lret
icebp
sub
sbb
cmpl
adc
adc
dec
ds
push
jmp
pop
ret
inc
inc
hlt
add
pusha
lock
mov
cmpsl
push
fcmovb
cmpsb
dec
inc
enter
fmuls
in
fildl
and
mov
dec
not
sub
fnsave
fsts
push
inc
push
push
inc
cld
insl
adc
rorl
ljmp
not
push
neg
adc
sbb
push
sub
call
add
push
inc
push
jae
inc
cmp
imul
clc
sub
push
fadds
neg
pop
inc
add
les
popf
sahf
sbbl
xorl
lock
insb
push
xchg
and
mov
sub
inc
cmp
aad
jns
outsb
arpl
movsb
xchg
adc
mov
cld
lock
xchg
mov
add
call
mov
jmp
test
xchg
add
imul
cmp
adc
clc
pop
push
data16
dec
push
stos
mov
push
adc
pop
inc
mov
ss
xor
push
dec
fisubrl
adc
data16
or
call
lcall
xor
rclb
dec
jmp
fmuls
inc
test
sub
sub
aam
outsl
push
scas
cmp
jae
incb
sbb
adc
dec
add
jmp
adc
sub
pop
mov
or
in
ljmp
mov
adc
add
js
mov
mov
inc
fs
xor
sub
sti
addr16
or
xor
dec
push
ficoml
repnz
gs
shrb
jns
or
jmp
arpl
and
adc
dec
outsl
pop
or
inc
fs
fiaddl
mov
mov
sbb
jecxz
pop
pop
inc
ja
or
pop
std
imul
xor
aad
aad
dec
cmp
cmp
ja
lds
icebp
add
addr16
xor
hlt
sahf
lcall
mov
mov
bound
fsub
xchg
push
repnz
inc
mov
insb
popf
dec
and
xor
shl
dec
outsb
in
and
mov
mov
ss
cwtl
or
or
mov
inc
or
call
xor
cmp
dec
jmp
lret
dec
aaa
aaa
push
addr16
push
or
loop
push
push
test
loopne
lock
xor
xchg
sub
rorl
inc
xor
inc
dec
fbld
bound
dec
mov
mov
inc
jmp
pop
jmp
fiadds
imull
ret
lret
bound
insl
fld
or
aaa
orb
lret
jecxz
xor
xchg
cwtl
push
xor
fsubrl
jecxz
ja
add
xor
repz
push
jno
dec
mov
bound
jb
pop
jp
es
inc
jmp
cmp
pop
int3
in
sub
cld
mov
jae
stos
mov
scas
and
daa
out
lahf
add
xor
mov
jb
es
shll
xchg
data16
jmp
jbe
int
loop
adc
xor
mov
nop
push
sti
enter
push
int3
jmp
inc
mov
or
xor
pop
pop
cmp
int3
andl
test
cmp
pop
sahf
repz
mov
adc
and
mov
int
mov
arpl
add
dec
clc
jnp
mov
jne
xor
push
inc
add
flds
cli
sbb
push
jmp
aad
sub
rorl
sbb
inc
jne
cmp
cmp
stos
das
ljmp
int3
push
push
in
mov
xor
add
lods
add
mov
and
imul
xchg
cmp
cld
dec
mov
pop
test
dec
mov
mov
dec
push
imul
inc
mov
pop
or
mov
jmp
insl
mov
roll
push
push
hlt
aad
fs
in
les
cwtl
or
daa
cmp
call
mov
repnz
std
xorl
pop
sub
or
or
lahf
dec
xor
jae
mov
loop
inc
mov
lock
mov
dec
push
pop
sbb
int3
sarl
outsl
pop
push
cmp
xchg
rcr
test
js
adc
mov
fcmovnu
hlt
aaa
inc
adc
sbb
jmp
dec
inc
sub
add
aam
jb
dec
mov
or
mov
outsl
adc
ret
pop
ljmp
inc
call
loop
shrb
repnz
mov
loopne
loope
jne
addr16
addr16
jl
in
data16
js
xor
jns
push
maxps
call
cmp
jne
push
clc
cltd
call
je
dec
sub
pop
add
mov
add
test
fistpll
xor
in
push
sub
or
add
mov
xorl
sbbb
js
add
adc
sbb
xor
push
out
lcall
dec
and
rolb
xor
sbb
insl
mov
insb
addb
bound
inc
cmp
int3
stos
sub
in
sub
dec
jecxz
sub
shrb
sbb
clc
mov
jo
push
lret
jmp
mov
pop
fstpl
inc
dec
adc
mov
enter
add
push
jmp
loope
mov
lods
sub
andb
dec
rcrl
sti
test
fimuls
inc
dec
sub
pushf
push
sub
cli
lea
ret
cmpsb
std
sbb
inc
push
sub
add
and
lds
push
arpl
sar
outsb
ret
outsb
gs
add
pop
dec
or
loopne
add
addl
lods
sbb
sbb
push
aaa
and
dec
push
sub
lcall
mov
pop
scas
pop
sub
mov
dec
push
adc
lea
xor
popa
jl
loop
not
icebp
adc
mov
movsb
addr16
out
jo
or
fs
push
add
jno
push
xchg
lret
out
xor
inc
pop
outsb
adc
push
test
pop
int3
or
fisttps
jecxz
xor
fldz
push
insl
fsubl
sub
and
out
adc
mov
mov
lret
mov
lods
je
test
into
cmp
aas
mov
pop
jne
insl
inc
je
jno
push
add
jae
lea
clc
decl
and
jbe
push
fidivrl
les
lahf
es
mov
ret
into
js
add
adc
inc
outsb
aaa
outsl
outsb
js
leave
and
fiadds
das
dec
in
mov
jne
dec
call
adc
mov
enter
and
adc
dec
push
data16
addl
fimuls
adc
jb
and
outsl
insl
add
ss
pop
imul
mov
sbb
dec
fs
mov
cli
cmp
inc
mov
aam
push
rcrl
adc
cmp
outsl
fninit
stos
icebp
lods
cwtl
rcll
jcxz
mov
cld
pop
adc
test
in
dec
call
imul
mov
mov
test
pop
call
mov
loope
dec
ss
jns
gs
addr16
shr
add
pop
adcl
ja
push
call
loope
xorl
jmp
aaa
mov
mov
inc
xor
lock
adc
cs
outsb
push
imul
je
inc
xchg
mov
jecxz
in
int
adc
dec
ss
subb
jp
xchg
push
mov
jo
inc
leave
das
mov
or
jbe
sbb
addl
je
pop
jmp
xor
sub
bound
aam
in
inc
jmp
add
clc
add
divb
add
dec
lahf
popa
or
lret
rcrl
and
jmp
iret
not
ret
dec
test
aam
insl
shl
pop
sbb
sub
negb
xor
divb
inc
mov
dec
int3
mov
lods
out
push
inc
push
aam
call
pop
mov
loopne
gs
xchg
int
imul
shll
js
insl
push
jmp
push
jae
xor
sub
pop
pop
sub
dec
andb
stos
sub
aad
pusha
pop
call
and
fldt
shrb
ds
inc
jae
xor
dec
cltd
jp
mov
vmread
push
mov
nop
add
loop
mull
adc
inc
jne
das
mov
xchg
push
popa
bound
out
cs
and
mov
inc
insb
outsb
popf
mov
rolb
mov
mov
pop
lock
or
add
cmp
cmp
cmp
or
imul
inc
push
data16
push
imul
mov
ljmp
inc
push
dec
insl
dec
test
jne
mov
sbb
aas
mov
jns
jns
lcall
mov
add
je
jbe
add
mov
adc
imul
insl
and
pop
xor
fdivrp
hlt
data16
xor
push
addr16
rolb
out
xorl
imul
push
jae
scas
dec
lods
mov
mov
pop
xor
lret
sti
inc
add
pop
in
jp
test
cmpl
push
sbb
sub
push
pop
inc
call
xor
push
popa
jge
mov
std
and
push
xor
sub
divb
and
push
and
jbe
or
seta
lods
bound
cs
dec
orb
popa
pop
dec
cmp
inc
cmp
push
sub
mov
mov
xor
inc
jae
int3
pop
mov
mull
add
inc
out
iret
bound
xor
add
push
lret
repz
sbb
mov
mov
inc
adc
mov
adc
jecxz
adc
jmp
xor
push
jns
mov
insl
sub
add
adc
mov
adc
xlat
hlt
es
jmp
xor
shlb
jno
xlat
daa
and
xor
inc
xor
xchg
jb
hlt
stos
jb
loop
nop
dec
cmpsb
sbb
xor
dec
sub
dec
push
dec
lds
hlt
jmp
xor
fisubrl
shlb
xchg
in
imul
fs
xor
adc
jl
add
inc
imul
movsl
mov
jg
ja
add
daa
dec
push
xor
xchg
int
xchg
xorb
arpl
call
je
test
cmp
loop
or
stos
mov
dec
aam
cmp
inc
dec
cmp
inc
xchg
xor
lea
push
mov
mov
xor
mov
mov
lcall
push
in
shl
fmull
jmp
pop
mov
cmpsl
fstps
movsb
sarb
mov
inc
ss
push
bound
jbe
inc
orl
in
loopne
mov
shlb
xor
jl
adc
clc
mov
bound
dec
xor
dec
pop
push
faddp
inc
mov
push
jne
or
enter
push
dec
inc
push
aaa
xor
mov
push
xor
mov
fwait
sbb
int
push
dec
scas
sub
mov
push
push
fdivs
outsb
icebp
dec
sub
dec
neg
mov
fwait
pop
stc
xlat
icebp
sub
push
cli
lea
decb
or
sub
dec
aad
push
fadd
addr16
sbb
rcrb
push
add
repz
sbb
sarb
push
lods
inc
and
adc
inc
inc
jmp
adc
and
sub
sub
aas
push
push
orb
fldt
jmp
add
inc
adc
dec
or
or
add
inc
test
or
and
and
adc
add
arpl
inc
push
inc
outsl
inc
add
and
jg
cli
fwait
adc
dec
push
push
dec
and
popa
outsb
push
mov
js
test
inc
mov
and
mov
push
mov
pop
jnp
test
cmp
and
pop
or
adc
test
pop
imul
or
and
pop
and
jns
mov
inc
and
jo
fldl
clc
js
popa
data16
push
add
pop
jbe
mov
aas
sbb
add
and
mov
mov
pop
add
cmp
adc
mov
inc
jae
dec
pop
and
pushw
dec
push
inc
inc
dec
xchg
add
adc
add
dec
dec
xlat
pop
sti
pop
dec
jo
jbe
add
imul
test
mov
inc
or
pop
lcall
and
imul
push
jbe
arpl
or
mov
sbb
ficomps
aam
add
mov
in
pop
mov
sub
shll
and
imul
and
mov
fistpll
int
mov
test
test
cld
lcall
dec
adc
push
jno
gs
popa
fs
pop
sti
mov
or
or
movsb
pop
dec
rorb
scas
mov
dec
imul
pop
addr16
or
push
sub
pushf
fimull
int
pop
sbbb
jo
pop
xor
or
jmp
jo
mov
cmp
or
dec
in
pushw
xchg
mov
push
inc
sub
mov
jbe
insb
inc
push
ret
mov
outsl
sbb
insl
lea
jns
outsl
jae
push
mov
js
outsl
movsl
out
adc
rorb
imul
out
mov
xchg
outsb
xorl
mov
add
sbb
dec
pop
and
xchg
xchg
and
ss
or
pop
pop
adc
stos
inc
int
test
lods
cmpsl
sub
push
adc
adc
mov
mov
ret
test
lods
mov
push
push
push
push
jo
ss
addr16
arpl
lods
std
je
gs
add
xor
popw
fdivl
incl
pop
int3
mov
aas
lret
fisubrl
xor
dec
sbb
adc
and
in
nop
leave
lcall
or
inc
js
das
or
cltd
xorl
jge
sbb
push
jb
xchg
lret
mov
mov
je
leave
mov
and
ss
repz
jmp
imulb
inc
loop
cmp
or
test
mov
sbb
pop
ljmp
jmp
lret
sbb
xchg
mov
insb
jae
or
test
lods
mov
cs
push
xchg
leave
pop
add
sub
es
lods
and
add
mov
xor
pushf
add
jmp
out
repz
sbb
test
cwtl
aam
pop
ret
icebp
mov
test
incl
xor
std
sub
sbb
pushf
jo
sbb
jg
jb
divb
in
loopne
mov
dec
push
leave
push
xchg
adc
adc
std
stc
into
jl
mov
dec
out
cmp
dec
mov
inc
xchg
aad
in
push
xor
sbb
adc
mov
shr
sti
incl
fldl
fmul
loop
lahf
cmp
es
and
dec
das
cld
or
pop
jmp
andb
lret
mov
out
cmpsb
sub
icebp
ss
icebp
aad
inc
jns
mov
inc
lods
sub
incl
jno
jg
jecxz
xchg
inc
push
jns
pop
mov
and
dec
mov
decb
jbe
call
xchg
cltd
fisubs
pop
mov
jge
popf
adc
daa
movaps
sti
incl
call
push
jbe
pop
addl
pop
scas
inc
xor
outsb
cmp
or
pop
push
mov
out
fdiv
push
xor
jb
xchg
stos
test
int3
pop
mov
jmp
es
inc
pop
push
je
cli
xchg
push
push
mov
cltd
push
cmc
std
add
shlb
test
jmp
inc
pop
inc
cltd
add
jnp
mov
cmp
scas
or
bound
in
cmp
frstor
and
inc
int
dec
xchg
std
xchg
popf
jmp
inc
add
cmp
dec
fdivrs
sub
xchg
std
pop
inc
imull
sub
add
repnz
dec
in
loope
pushl
test
inc
mov
mov
int3
addr16
mov
pusha
mov
dec
cwtl
aaa
add
inc
inc
mov
popf
dec
jmp
dec
mov
mov
xchg
sub
fisubrs
jp
sub
pop
js
fsubr
sub
int
jl
xchg
shrb
loop
mov
dec
mov
dec
addr16
fwait
inc
dec
icebp
sbb
lea
cmpsb
and
jp
mov
daa
jl
adc
mov
add
sub
daa
sub
sti
cltd
jo
popf
gs
sub
insb
insb
mov
cs
pop
xchg
mov
aaa
xchg
lahf
lcall
mov
pop
xlat
inc
push
mov
insl
adc
dec
test
pop
jecxz
lret
add
shl
test
popf
or
sti
inc
push
xchg
adc
scas
out
aad
cmc
adc
shlb
add
or
pop
ljmp
lahf
in
jno
movb
xchg
fisttpll
pop
xchg
mov
insl
mov
pushl
cmp
mov
and
mov
fists
adc
decl
aas
stos
or
pop
jmp
and
ret
sub
pop
lcall
xchg
mov
jg
xchg
test
into
dec
rorb
adcb
lret
in
addr16
sub
rclb
idivb
repnz
jg
decl
adc
ja
jnp
push
inc
add
es
les
arpl
sbb
mov
popf
or
lds
scas
mov
out
ja
decl
test
stos
leave
fs
push
sub
mov
push
pop
sbb
cmp
mov
loopne,pn
xor
push
stos
adc
mov
xchg
and
aaa
gs
add
lcall
comiss
addb
pop
popa
sub
fstp
ljmp
jecxz
xor
fsubp
jg
cmp
lar
jge
and
rolb
idiv
push
mov
xchg
int
mov
fists
inc
insb
xlat
pop
outsl
sahf
mov
sbb
mov
incl
ss
mov
xor
mov
jp
subb
or
mov
fisttps
jns
notb
and
in
add
fucomi
outsl
call
sbb
pusha
dec
mov
fcmovnb
and
sub
idiv
lcall
pop
push
andl
inc
ljmp
cmp
dec
jmp
pop
out
dec
push
jnp
or
push
nop
sti
xor
fwait
int
sub
jl
mov
aam
xchg
push
mov
rorl
mov
ret
mov
jmp
fidivl
subb
mov
push
ljmp
ss
push
das
cld
lcall
mov
push
xor
les
or
cmp
mov
idiv
pop
out
aas
in
xchg
add
mov
aaa
sbb
call
cmp
nop
mov
dec
fldcw
push
mov
ljmp
lea
loopne
cli
data16
negl
es
or
mov
sarb
dec
adc
cld
mov
jmp
jecxz
outsl
jno
jp
sub
stos
push
inc
scas
add
pop
in
adc
mov
shll
sahf
mov
jb
repnz
mov
mov
dec
test
call
sub
mov
out
cwtl
clc
mov
lock
fidivs
fsubl
imul
mov
icebp
arpl
lods
pop
enter
lcall
cld
ljmp
lcall
or
inc
lods
dec
sahf
xchg
pop
call
inc
pop
fldt
or
add
mov
lret
and
cmp
lds
push
add
shrl
cmc
leave
lret
stos
add
test
fcompl
ja
mov
ds
dec
inc
into
cmp
push
mov
mov
clc
arpl
add
pusha
movsb
es
sti
data16
aam
or
out
or
stos
fdivrp
pusha
decl
add
shll
xlat
rorl
nop
int
jae
mov
cmpsl
pushl
dec
mov
jge
cmc
adc
dec
mov
push
insb
cld
das
decl
movsb
sahf
mov
out
lcall
ljmp
fnstenv
das
add
out
ds
clc
inc
scas
jecxz
jle
lock
dec
enter
push
xchg
push
jge
out
loopne
insl
jne
movsb
sbb
mov
loop
je
and
mov
das
or
sbb
xor
shlb
in
cmp
aaa
jl
inc
cmpb
fwait
xor
mov
movsl
jg
xchg
cli
sbb
fstpt
xor
enter
dec
into
push
ljmp
lods
pop
imul
mov
jnp
push
cmpsl
jmp
in
les
mov
add
pop
jae
sub
push
out
repnz
ss
push
pusha
fnsave
lods
enter
or
decl
cld
mov
push
xchg
or
xlat
or
mov
movsb
movsl
mov
xchg
push
jmp
cld
rcrb
xchg
sti
mov
call
push
lret
pushf
xchg
dec
outsb
nop
divl
test
popa
cltd
and
outsb
fstpt
adc
pushl
sbb
call
sbb
mov
jecxz
aad
xor
popf
jg
push
rcll
push
mov
shr
out
sub
mov
add
movsl
lcall
jb
fcmove
push
loop
mov
fnstcw
or
subl
xor
inc
popf
fldenv
mov
stos
and
negb
lret
or
popf
cld
mov
idiv
outsl
imul
sbb
mov
sarb
leave
sti
loope
push
adc
push
push
push
inc
sti
neg
xor
push
inc
inc
push
in
pop
repz
mov
jno
in
ljmp
cld
mov
add
mov
mov
test
dec
push
push
cmpsb
jo
xchg
clc
sub
in
outsl
lcall
cld
aad
dec
pop
mov
call
pop
inc
fsubrl
gs
pop
sub
insb
inc
negl
sti
std
ljmp
mov
push
sbb
addb
movsl
enter
mov
xor
jg
fsub
lret
or
cmp
rcll
arpl
add
jnp
mov
mov
call
call
mov
fwait
pop
inc
push
xchg
outsb
rorl
daa
pop
cli
mov
jno
mov
in
mov
mov
xlat
loop
decl
call
in
enter
repnz
xchg
xor
stc
mov
mov
mov
and
mov
mov
inc
scas
adc
js
daa
in
cmp
push
add
lcall
push
frstor
nop
jae
push
mov
loope
lcall
into
mov
std
pop
and
mov
xchg
stc
jp
cmp
aad
xchg
loop
in
push
invd
xchg
mov
mov
je
in
das
or
cltd
push
fwait
insb
jmp
ret
imul
scas
mulb
sbb
ljmp
mov
jecxz
int3
cmp
sub
leave
rorb
daa
sahf
jle
adc
call
loop
push
jo
and
sub
fucomi
lcall
outsb
insb
mov
add
or
shl
cmp
add
pop
inc
int
pusha
test
dec
aaa
xchg
push
incl
and
sbb
mov
out
movsl
aam
out
pop
cmp
ljmp
fldenv
dec
daa
inc
lods
dec
inc
pop
fistl
insb
sbb
cs
sahf
dec
test
pop
call
daa
jg
in
es
xor
dec
sbb
or
shll
cmp
mov
mov
int
test
lcall
lcall
push
sub
or
test
cmpsb
sbb
xchg
ficomps
sbb
das
dec
sahf
movsl
inc
in
dec
or
jno
leave
xor
shl
jbe
jg
pushl
aaa
adc
imul
call
aad
mov
fldcw
add
push
adc
ret
push
sub
popf
sbbb
dec
pop
cld
call
pushl
test
pop
xchg
loop
mov
insb
sbb
and
and
dec
call
repz
ret
imul
jmp
cmpsl
xor
mov
sub
lods
push
xchg
mov
cmp
scas
fs
pop
daa
fdivr
pop
call
movb
mov
dec
xchg
daa
pop
data16
int3
loopne
cli
sbb
fstl
dec
inc
cmp
fists
inc
xlat
nop
daa
adc
jg
push
aas
jae
sbb
imul
sub
ljmp
ljmp
call
jno
aam
dec
dec
mov
rorb
lahf
bound
mulb
icebp
je
call
and
jl
lods
addr16
jle
test
shll
adc
pushl
mov
add
xchg
repnz
scas
loope
pop
jb
fiadds
sbb
icebp
mov
je
loopne
test
cmp
movsb
lcall
ljmp
add
repz
or
pop
ja
pop
dec
push
push
shll
shrl
call
lods
pop
shll
xlat
out
xchg
insl
jno
je
mov
sub
mov
scas
fdivrl
jae
sub
dec
and
test
fdivr
dec
mov
mov
inc
mov
push
fisttps
in
data16
jmp
mov
cs
lcall
pop
lods
fistpll
fcoml
cmp
outsb
arpl
push
cli
fwait
nop
mov
push
jp
ljmp
inc
pop
dec
mov
fcompl
es
jns
mov
push
lcall
call
jbe
mov
scas
pop
mov
in
jg
ljmp
dec
fwait
sbb
sti
test
xchg
scas
jb
stos
inc
leave
jl
and
movsl
mov
mov
nop
mov
je
inc
mov
ljmp
out
cwtl
stos
insb
addr16
test
adc
xor
or
sub
pop
adc
rolb
push
setns
lock
dec
push
dec
add
mov
cmc
shlb
decl
std
lahf
out
fadds
mov
inc
mov
sbb
outsl
insl
pop
hlt
mov
push
and
mov
sub
sbb
ret
mov
pop
cld
pop
xor
orb
sti
jno
mov
jmp
decl
movsb
into
test
mov
pop
sub
push
arpl
fwait
mov
call
push
inc
hlt
lcall
jo
call
mov
push
scas
xor
sbb
inc
in
inc
fcomps
out
cmpsl
mov
daa
pop
repnz
sub
pop
jne
xchg
jne
xchg
xor
lock
cli
in
push
scas
out
mov
ljmp
sbb
mov
dec
stos
add
mov
sub
fisubl
flds
xchg
push
outsl
dec
xchg
jmp
mov
dec
xor
lret
mov
adc
aad
loopne
bswap
pop
int3
pop
sarb
jmp
ret
dec
andnps
loop
repnz
adcl
xchg
push
sar
cld
ljmp
inc
xchg
movsl
xor
adc
scas
add
cwtl
mov
rcrl
das
std
pop
jae
cmpsb
outsb
fs
cmpsb
ret
arpl
pop
aas
inc
rcrb
ljmp
mov
ds
sti
icebp
stos
les
adc
add
sar
pushl
dec
imul
jmp
insl
ret
add
int
sahf
jnp
cmc
lahf
cmp
pushl
and
mov
xor
fisubl
mov
mov
mov
mov
jg
fucomip
mov
cmp
rorl
fwait
jnp
inc
fbld
movsb
mov
test
push
les
jne
subb
jmp
inc
rcll
cmp
add
xor
popa
in
incl
mov
cs
rorb
mov
mov
dec
lahf
pop
sbb
movsl
in
pop
mov
cli
cmp
arpl
xorl
ud0
incl
cltd
mov
sbb
xchg
add
mov
fiadds
test
pop
jae
out
pop
fs
nop
cmpsb
xlat
dec
mov
mov
pop
ljmp
adcl
lock
ljmp
lcall
cld
pop
std
aad
add
lods
dec
jle
sbb
das
int3
ljmp
inc
lods
push
push
loope
xor
pop
ds
pop
jmp
add
mov
dec
add
push
pop
popf
pusha
lock
and
jle
bnd
push
imul
lret
aam
int3
test
pop
push
movsl
decb
std
inc
push
iret
or
push
cmp
sub
imul
cld
cli
jo
mov
pop
movsb
mov
xor
mov
push
mov
enter
je
shll
dec
jp
and
sbb
incl
sbb
sbb
mov
loopne
mov
mov
insl
fdivrs
outsl
hlt
das
negl
lcall
icebp
dec
les
add
mov
xchg
cmc
pop
dec
xor
mov
add
push
movsl
ffreep
push
inc
adc
ljmp
outsb
mov
pop
inc
mov
jmp
jmp
sub
inc
test
fsubs
add
adc
pop
ror
add
sti
mov
xor
lret
std
inc
call
mov
jge
rorb
mov
lcall
or
dec
sbb
push
pop
push
sub
fsin
incl
dec
imul
xchg
xchg
or
pop
stc
frstor
sbb
ret
jmp
cmc
jmp
cmp
clc
mov
cltd
jmp
outsl
hlt
jmp
push
mov
pop
cmpsl
push
inc
into
mov
js
leave
cmp
jno
mov
test
fucomip
jl
mov
xchg
ss
pop
cli
pushl
repz
into
inc
das
xor
mov
out
out
cmc
push
cmpsb
mov
pop
fucomip
xchg
push
inc
sub
push
jecxz
add
fbld
sahf
fs
inc
xchg
in
ds
adc
lret
pushl
cli
stos
stos
mov
insl
push
pushf
mov
addb
js
dec
dec
mov
ljmp
cmc
in
push
mov
jnp
sub
xchg
mov
and
mov
cmc
out
mov
jnp
jbe
in
incl
pusha
pop
nop
cli
mov
test
cmp
push
pop
xor
xchg
dec
push
aas
mov
in
xor
mov
mov
inc
mov
divb
pop
enter
clc
andb
adc
cmc
fcos
jg
mov
movsb
pop
or
cmp
jg
cld
mov
out
decl
mov
call
out
imul
stos
pushl
sub
xor
out
jbe
xor
mov
int3
xor
push
pop
lods
push
cmp
mov
dec
fidivs
adc
inc
jo
sub
fdivr
jg
jmp
cmpsb
and
adc
call
nop
mov
rcrb
movsl
pop
outsb
ret
cmc
mov
outsb
sti
loop
lods
shrl
cltd
dec
roll
stc
insl
repnz
dec
mov
inc
lcall
jp
sub
push
dec
mov
ljmp
mov
nop
into
ret
jmp
enter
daa
fcmovne
jns
mov
int3
inc
push
xor
out
or
cmp
cmp
push
mov
cs
cs
pop
icebp
pop
mov
pop
jnp
xchg
mov
shll
cli
jmp
stc
clc
cmp
push
mov
pop
aaa
mov
inc
jmp
incl
mov
je
lea
sbb
mov
push
cmc
sar
mov
or
xor
repnz
mov
fs
cmp
enter
aad
or
lcall
jns
int
mov
je
mov
test
sahf
mov
lea
mov
pop
jno
mov
ljmp
pop
push
cs
push
sbb
andl
mov
pushl
sahf
cli
mov
mov
pop
cli
sbb
cmp
cmovo
cmp
xor
out
in
std
push
mov
aam
sbb
lock
mov
fucomip
das
pop
inc
pop
nop
fmuls
jmp
dec
outsb
in
mov
enter
call
cli
xor
fistps
pop
subl
loop
mov
fsubs
call
iret
in
inc
adc
sbb
cld
mov
push
mov
lcall
cmp
clc
jl
adc
inc
inc
push
jle
jns
les
mov
andl
shll
out
or
or
lret
ss
pusha
shlb
decl
ja
push
add
xchg
mov
sbb
icebp
ljmp
cmp
arpl
xor
stos
mov
add
popa
sti
int
leave
push
cmc
mov
outsl
ljmp
fadds
push
inc
pop
leave
leave
xlat
mov
push
and
fdivrp
js
jg
in
stos
jbe
aas
dec
fs
fsubl
daa
pop
push
adc
xor
icebp
pushl
icebp
pop
adcb
push
cmp
sbb
scas
ds
das
fistl
pop
lds
mov
incl
sahf
mov
sbb
dec
mov
lea
stc
adc
mov
ret
xchg
pushl
sbb
or
cmovle
out
mov
push
test
xchg
lods
test
mov
dec
roll
call
scas
xor
pop
inc
sub
dec
in
mov
je
xor
cli
xchg
shl
jg
dec
jecxz
test
ret
and
rorb
mov
xchg
idivb
movsl
mov
cmp
pushf
mov
loop
bnd
push
test
out
sti
sub
iret
pushl
xor
mov
ds
xor
pop
std
decl
inc
stc
loopne
dec
dec
xorl
and
xchg
orb
int
fisubrl
lret
shlb
push
push
jg
lcall
loope
jns
dec
cli
add
cmpl
call
xor
popf
xorl
pop
popf
mov
cmp
call
lea
loopne
sbb
ja
or
fwait
andl
push
cltd
lock
sbb
imul
leave
pop
mov
div
adcl
outsb
pop
loopne
push
pushf
out
pop
sub
stos
cmp
stos
sarl
or
add
or
adc
mov
and
imul
enter
test
add
sub
jns
push
xor
rcl
pusha
out
mov
add
sbb
outsb
add
xor
fwait
push
out
adc
inc
push
jg
mov
sti
fisubs
or
movsb
mov
cltd
sub
decl
movl
and
or
mov
decl
dec
add
xchg
and
jnp
testl
mov
push
in
adc
out
mov
fwait
stc
mov
push
int3
mov
cmc
mov
cli
cmp
ja
mov
in
jmp
ljmp
lea
popf
out
ljmp
lods
add
xlat
adc
call
ljmp
mov
lret
or
xchg
leave
cmpb
mov
orl
fs
nop
pop
stc
lcall
insb
hlt
cmpsb
movsl
roll
xchg
in
ds
ljmp
out
cmpsb
inc
cmp
in
adc
inc
scas
enter
stos
loope
fadd
jg
lds
aam
dec
jecxz
aam
and
or
or
int
incl
push
in
cmp
bound
xchg
cmc
aaa
cli
add
push
cmp
inc
cmpl
or
cvtdq2ps
stos
sub
add
pop
cli
fistpll
adc
jmp
sbb
mov
or
pop
loopne
pop
push
jne
add
decl
jg
idivb
xlat
push
cmp
mov
daa
test
ret
and
scas
cli
out
adc
xor
out
fcos
decl
mov
cmp
popf
int
lock
cmc
inc
mov
test
add
push
outsb
sbb
mov
mov
aaa
cli
adc
in
int3
js
cltd
outsl
lock
shrb
cmp
rorb
test
decl
std
hlt
inc
lods
add
xlat
das
in
adc
data16
jns
adc
das
fs
and
dec
dec
sarb
add
ret
imul
cs
mov
jnp
out
xor
or
add
push
shlb
call
dec
lcall
sti
pushl
shll
popf
fcompl
fbld
sbb
xor
or
dec
lcall
fucomp
in
std
arpl
iret
mov
pop
push
ljmp
cli
in
push
cmp
xor
lcall
push
int
push
mov
inc
or
jl
mov
shl
pop
mov
popf
and
ljmp
mov
fists
add
lcall
lcall
mov
addr16
das
pop
cs
js
stos
adc
xchg
xchg
dec
jmp
sub
js
jl
cmp
pop
xchg
test
mov
pushf
jmp
sub
push
lea
icebp
jmp
lds
cmp
mov
cmp
das
insb
scas
das
inc
hlt
pop
popa
scas
lods
in
hlt
cli
mov
jno
xchg
push
iret
decl
incl
and
jle
jle
fisttpl
xor
bound
pop
ljmp
adc
xorb
pop
sub
fimuls
mov
pop
dec
divb
movsl
cmc
incl
xor
cmp
inc
mov
inc
add
movsl
cmp
insb
subl
jnp
add
rorb
rcrb
mov
clc
call
ljmp
test
mov
cmp
pusha
je
add
call
xchg
mov
rcrb
fistpl
call
stc
incl
xor
scas
pushf
pop
enter
adc
sbb
hlt
jg
lcall
scas
cwtl
or
in
sarl
mov
enter
call
jbe
mov
sub
sbb
aas
das
cmp
loope
xchg
sarl
sub
out
lcall
sbb
xchg
adc
aaa
jge
pop
cwtl
pop
jb
bound
mov
rorl
or
mov
push
or
inc
insl
testl
sbb
stos
add
sub
in
popf
int
pop
call
mov
in
push
jmp
outsl
sbb
outsb
sub
dec
mov
xchg
incl
outsl
jp
jg
shlb
cmp
pop
in
xor
loop
call
je
xlat
mov
bound
mov
inc
lods
jle
cmp
shrb
xchg
out
hlt
aas
stos
ds
dec
mov
or
add
enter
cmp
notl
pop
ljmp
movsb
xchg
jl
inc
mov
mov
mov
adc
fnstenv
push
arpl
dec
mov
popf
push
popf
loopne
fsubr
push
pop
fucomip
xchg
outsl
lret
inc
repz
lret
inc
and
mov
les
call
adc
out
popf
pop
dec
mov
pop
xchg
pop
xor
dec
aaa
clc
pop
jmp
cwtl
ds
push
mov
sub
call
out
cmp
and
cmp
leave
call
jne
sbb
add
mov
mov
xchg
xor
mov
xchg
mov
and
test
fisubl
cld
mov
sbb
popf
jg
xor
mov
imul
fcompl
mul
and
dec
rcr
call
push
scas
sbb
adc
sub
in
in
dec
jbe
rcl
mov
xchg
out
fisttpll
inc
mov
or
jg
outsl
mov
sub
rdtsc
cmp
jmp
push
sbb
mov
mov
scas
aas
rolb
out
xor
push
clc
incl
subl
fldl
ljmp
push
je
pop
xchg
testl
dec
lret
movsb
cvtpi2ps
sbbb
inc
outsl
lock
dec
xchg
roll
mov
mov
insl
roll
mov
scas
lods
cld
in
cmpl
dec
std
jg
mov
adcb
dec
test
call
out
fs
popf
hlt
mov
adc
pusha
or
cmp
shll
xor
mov
insl
dec
call
pop
mov
lock
push
and
sbb
les
inc
mov
lods
pop
xor
cmp
lcall
dec
adc
mov
jne
dec
pop
or
cmpsl
mov
pop
lea
stos
js
shr
out
pop
insl
and
add
mov
or
lcall
ss
inc
jno
sub
mov
insb
lcall
adc
insl
or
sbb
or
vmaxsd
das
sbb
es
xor
clc
mov
movsb
test
jmp
jbe
cmp
adc
mov
xchg
mov
leave
lcall
mov
cmp
push
cmp
cmp
das
fwait
mov
fsts
adc
incl
cli
pop
sahf
or
jle
out
pop
cltd
and
sub
and
test
dec
fsub
insl
ret
mov
das
popa
and
mov
pushl
das
lret
sbb
cwtl
add
test
in
mov
aaa
fcmovnbe
ljmp
shll
ret
or
and
pop
jp
cmpsl
mov
incl
adc
loop
cmp
push
xchg
sub
js
pushf
xor
call
loope
or
xor
inc
outsl
je
sub
or
ficompl
xchg
dec
lcall
mov
mov
or
and
test
dec
adc
jge
ss
inc
incl
cld
jns
push
mov
pop
pop
imul
xor
inc
popf
mov
es
popf
dec
sub
les
leave
jp
jp
add
ljmp
lret
je
push
cmpsb
repnz
js
je
dec
xor
decl
shrb
lcall
pop
xor
cmc
jle
mov
push
xor
mov
dec
inc
push
les
or
add
fwait
pushl
icebp
into
stc
divl
mov
fsubrs
inc
lret
and
shlb
mov
mov
mov
sbb
mov
dec
lret
and
vmovaps
add
daa
push
fsubl
lcall
repnz
les
test
faddl
ja
mov
jns
insb
fsubp
xor
fbstp
repz
ds
ja
jno
cmp
mov
loope
je
cmp
ljmp
push
pop
pop
adc
inc
mov
pushl
incl
push
lods
inc
xchg
loop
lret
add
fwait
sub
xchg
cli
in
ljmp
or
ds
in
clc
mov
mov
into
dec
dec
leave
sbb
pusha
mov
and
fs
into
mov
negl
xor
aad
mov
mov
push
repnz
pop
pop
mov
xor
jns
in
fcmovne
add
push
imul
mov
fiadds
mov
jp
jmp
aas
data16
mov
mov
mov
pop
scas
and
test
movsl
add
leave
shl
xchg
jg
or
popa
dec
scas
sbb
add
arpl
dec
xor
cvtdq2ps
jae
and
pop
js
sbb
mov
and
cmp
scas
fs
cmpl
jl
rclb
cmp
insl
jns
out
inc
and
add
mov
jns
add
mov
sub
inc
mov
icebp
stc
fwait
xor
xchg
mov
test
or
add
mov
push
mov
jg
je
jmp
inc
in
add
mov
cli
sbbl
pop
mov
fucomip
movsl
incb
clc
jecxz
and
pop
lods
out
jno
daa
mov
ret
fldenv
lea
shlb
pop
pop
mov
mov
aaa
xor
das
hlt
pushl
jno
arpl
xor
or
or
mov
aad
push
dec
sub
adc
mov
xchg
push
icebp
lea
add
xor
aad
mov
pop
jnp
mov
data16
syscall
add
dec
dec
mov
sub
out
dec
sbb
cmp
std
push
push
das
std
fistps
popl
icebp
cmpsb
lcall
push
lea
push
lcall
in
jns
dec
sub
sti
xor
fucomip
lahf
fisubrl
inc
add
and
lods
shrl
decl
data16
lar
insl
xchg
call
rclb
push
ret
sarl
push
into
lock
scas
shll
cs
clc
outsl
add
pop
das
sbb
fstl
stos
fcoml
lods
pop
lods
repnz
mov
aam
stos
clc
lods
cmp
call
call
test
js
ljmp
loopne
xor
xor
outsl
call
xchg
mov
push
imul
subl
mov
aad
call
call
cmp
and
jge
pop
movsl
adc
into
jle
push
inc
in
lcall
stos
xchg
aad
mov
lcall
std
fucomi
mov
test
test
imul
pop
ljmp
imul
jo
fs
xlat
out
pop
fisttpl
push
stc
clc
jg
pushl
push
pcmpgtd
mov
jbe
dec
cs
adc
das
push
or
mov
stc
outsb
xchg
addr16
fwait
jecxz
mov
fucomip
enter
pop
dec
stos
cmpsl
mov
fnsave
xor
cli
pushl
cli
fisttpll
pop
jno
xor
inc
in
mov
in
rolb
push
lcall
push
jno
mov
mov
movb
sub
fs
loope
popl
pop
adc
push
dec
in
cltd
enter
bound
xchg
sub
dec
jg
jp
mov
decl
hlt
inc
sub
gs
stos
mov
add
mov
cmc
or
loopne
jmp
cmpsl
aam
push
sarl
stos
dec
stos
popa
push
fsubl
inc
sahf
and
or
lock
and
jmp
xchg
mov
decl
out
test
xchg
mov
dec
lret
pop
cld
ljmp
xor
mov
idivl
in
dec
mov
sbb
mul
dec
ljmp
std
aaa
push
in
jp
stos
sbb
xorl
jno
push
pop
jmp
pop
outsl
inc
repnz
mov
xor
shlb
xchg
in
lret
and
scas
ficoms
adc
lods
aaa
nop
cli
inc
data16
iret
ljmp
mov
shlb
adc
jl
rcll
lods
pop
daa
xchg
cmpsb
or
in
sub
mov
out
scas
movsl
mov
repnz
and
pop
leave
add
or
call
ljmp
insb
sub
dec
shrl
pop
pop
xchg
movsb
mov
inc
aad
out
incb
lcall
sub
aas
imul
jmp
test
mov
ret
ja
movsl
test
call
jp
repz
push
int3
jns
xor
dec
mov
xor
cld
call
pop
clc
pavgw
pop
sbb
cwtl
lret
push
jle
ds
jmp
dec
jg
pop
inc
adc
push
jge
stos
mov
aaa
inc
xchg
outsb
mov
repz
loopne
or
and
ret
pop
addr16
jmp
cs
sbb
push
loopne
in
cmp
das
cmp
dec
std
dec
cld
and
jnp
or
gs
sbb
fadd
lahf
lods
lock
pushl
out
leave
inc
mov
mov
outsl
push
mov
test
sub
fldl
ds
test
hlt
in
sbb
mov
jae
jne
fildl
cmp
test
ret
xchg
sbb
mov
push
pop
and
clc
mov
mov
sub
imul
mov
lcall
repz
or
hlt
jg
jg
adc
xchg
fidivrs
sub
test
jmp
pop
int
fbld
mov
ds
xchg
cmpsb
stc
dec
in
rcll
clc
jg
jnp
ljmp
bound
icebp
mov
push
movsl
add
fistl
popf
pop
shl
fldt
jo
sbb
notb
inc
loopne
lods
aaa
mov
mov
std
call
bts
lcall
out
xchg
aam
scas
ljmp
std
jp
stos
pop
shll
incl
lcall
les
icebp
or
jae
xchg
xchg
pop
push
jne
hlt
dec
mov
scas
pop
push
pop
out
movsb
push
arpl
adc
outsl
rclb
aam
jns
loop
dec
mov
jg
sbb
test
adc
dec
insl
xlat
cmc
xor
je
leave
add
sub
fiaddl
pusha
dec
push
cli
ljmp
push
lock
mov
js
dec
mov
mov
iret
std
out
call
clc
mov
adc
rolb
bound
negb
jg
decl
fidivl
push
jge
pop
std
pop
test
std
add
inc
shlb
int
movsl
mov
es
xchg
lods
dec
xchg
gs
outsl
cld
outsl
in
adc
ja
fcomps
lea
out
lods
leave
jns
movsl
cmp
stos
repz
data16
mov
add
call
sbb
sbb
add
sub
into
in
add
fnstcw
adc
xchg
or
lock
pop
sti
stc
mull
add
adc
cltd
into
cmp
and
ja
gs
push
cmpsl
pop
sahf
imul
test
adc
sbb
ret
and
inc
mov
add
ds
in
cmp
push
fbld
jb
outsl
lret
xor
dec
xchg
cwtl
cli
mov
in
into
lcall
and
mov
push
xor
push
outsl
fcompl
xchg
xchg
sub
gs
les
call
sub
inc
push
data16
dec
mov
ljmp
add
pop
mov
sbb
cmp
hlt
sub
push
leave
and
cmp
rclb
repz
mov
jmp
aam
imul
dec
inc
and
xorb
lret
fisttpll
shr
xchg
outsl
hlt
jmp
lea
add
stc
popf
mov
add
or
adc
or
push
mov
ljmp
dec
shlb
fwait
mov
sahf
mov
add
pop
or
mov
incl
dec
lcall
out
repz
or
jp
cmp
push
decl
shl
stc
adcl
lds
jne
mov
pop
call
clc
jne
ja
cmp
pop
xchg
jmp
jg
clc
adc
jno
jg
pushl
adc
cs
pop
out
mov
mov
xor
pop
pop
subb
pop
adc
and
movsl
movsl
pmuludq
xchg
arpl
sarl
fucom
add
addr16
in
outsl
cmp
xchg
cmp
call
jle
clc
cli
or
lcall
xchg
shr
xchg
mov
adc
decl
enter
ja
aam
test
incl
sub
add
je
fidivl
adc
ds
scas
test
add
call
dec
xchg
push
jnp
in
movq
sbb
pop
push
jno
in
adc
push
sub
mov
aad
xorl
ret
or
mov
loop
xor
stc
pusha
mov
movsb
dec
pop
int3
incl
cmp
dec
stos
inc
adc
lcall
mov
xchg
pop
test
jle
popl
shrb
xchg
stos
es
add
fbld
and
in
mov
sarb
pop
xchg
mov
cs
cmc
decl
jmp
iret
push
pop
or
cmp
test
sbb
xor
call
jle
jge
cmpsl
inc
push
sbb
jge
stos
aad
cli
das
sti
xchg
jecxz
jg
scas
sub
add
mov
pop
or
cmp
xchg
ficomps
mov
adc
sub
pushl
mov
into
es
mov
xchg
pusha
sarb
xchg
pushf
jl
in
outsl
push
jmp
jb
xchg
add
sbb
xchg
test
sbb
mov
ljmp
xorl
xchg
lret
ss
lds
out
dec
or
mov
cli
int
pop
pop
decl
aaa
mov
jle
jecxz
xchg
mov
sub
sub
aad
and
push
cld
push
roll
les
andb
sub
mov
loop
js
inc
std
decl
cmpsl
push
add
test
cmc
cmp
jmp
clc
decl
lea
mov
lret
push
push
ja
push
or
adc
xchg
xchg
lret
rcrb
in
dec
pop
or
add
mov
mov
mov
clc
mov
movsl
aam
mov
test
ret
mov
jae
mov
jbe
in
es
call
testb
fimuls
push
pop
test
pop
fwait
loope
jo
or
cmc
push
call
or
xchg
cli
shrl
push
loopne
cmc
repz
mov
and
imul
lcall
pop
mov
sbb
jl
test
pop
iret
push
jecxz
jg
mov
adc
jmp
insb
push
aad
movsl
insb
push
aas
punpcklwd
push
pop
ds
sbb
jg
cmp
stc
inc
loop
ja
lds
fisttpll
sahf
das
call
jmp
sahf
lret
ljmp
call
xchg
push
sub
push
xchg
ljmp
lcall
inc
cmp
dec
sbb
mull
dec
cmp
jl
adc
cmc
or
jg
dec
jle
shl
cmp
lcall
adc
repnz
xchg
adc
mov
xchg
push
pop
add
dec
push
sbb
std
aad
sahf
jl
stos
mov
aam
imul
test
sbb
call
outsb
cmp
dec
push
mov
and
jb
lret
mov
mov
lea
xor
cmp
xor
insl
add
mov
mov
ljmp
into
and
outsl
mov
and
jp
clc
push
dec
adc
aam
hlt
lea
jle
sub
xchg
xchg
in
and
cwtl
loop
incl
inc
popf
push
ss
test
nop
hlt
je
pop
orl
outsb
push
dec
mov
sub
dec
int3
sti
in
and
insl
and
test
data16
pushl
push
and
and
les
lods
push
sbbl
mov
test
cmp
leave
inc
rcl
outsb
jge
das
cmc
decl
jne
jle
aaa
and
cmp
dec
ljmp
dec
adc
rcrb
push
aad
ret
pop
mov
xchg
clc
jmp
ja
push
add
ret
stos
mov
sbb
insb
call
xor
gs
jne
icebp
call
or
fcomps
mov
ret
add
push
jecxz
adc
xor
jg
incl
daa
xchg
fs
ljmp
push
adc
jb
icebp
lods
xor
push
decl
add
jle
sbb
addr16
xchg
shrb
leave
sub
movsl
mov
rcrl
mov
sti
cmp
loope
xchg
out
or
jbe
lock
push
push
mov
inc
add
hlt
outsl
mov
das
rcr
call
int
dec
dec
fadds
ljmp
mov
mov
jae
xor
aam
in
sar
fimuls
push
mov
rolb
mov
push
xor
cli
out
jp
jno
xor
outsl
hlt
or
pop
xchg
and
mov
sub
sub
sub
lds
loopne
mov
jecxz
jno
pop
cs
mov
enter
aaa
push
xor
stc
sub
mov
xor
jb
mov
mov
mov
shlb
test
sub
mov
mov
sbb
push
cmp
dec
mov
fs
lock
inc
mov
call
cli
mov
icebp
loop
sub
sub
cmp
fidivs
mov
ljmp
mov
jl
into
in
lds
aad
xchg
loopne
stos
pop
cli
pushl
mov
mov
adc
into
lods
sub
sahf
orl
test
inc
loopne
or
inc
jnp
leave
cwtl
adc
or
leave
jg
inc
stos
and
xchg
xor
insb
xchg
cltd
or
int
les
movsl
dec
lcall
jge
push
xchg
leave
jle
fisubl
xchg
mov
lds
cltd
in
aad
inc
scas
mov
pop
imul
ljmp
cld
pushl
mov
cwtl
xor
ljmp
stos
ljmp
cli
call
push
in
push
mov
jecxz
sub
ds
std
xchg
lcall
incl
adc
out
fdivr
jg
imul
mov
hlt
mov
stos
sub
mov
pop
add
mov
fisttps
mov
mov
mov
xchg
mov
xor
cli
cld
cld
mov
lahf
xchg
std
call
jmp
push
mov
mov
jno
in
pop
jle
fs
scas
mov
aad
call
lock
dec
mov
lcall
and
push
aad
cmpl
bound
ss
dec
in
sub
test
mov
sub
cmp
out
inc
in
inc
pop
cmp
pushl
xor
pop
test
inc
push
mov
outsl
adc
in
ljmp
testb
mov
jmp
out
shrb
cli
pop
ljmp
jnp
mov
lret
jmp
imul
xchg
mov
movsl
xchg
rclb
cmpsl
loopne
jmp
mov
add
lret
mov
dec
dec
xor
or
cs
mov
jo
dec
subb
or
jmp
ss
sti
fildll
mov
or
stos
push
stos
int3
outsl
add
lret
sbb
mov
fimull
call
jg
cmp
out
xor
sub
in
test
ljmp
cld
scas
and
mov
les
ja
jecxz
into
cmp
jmp
notb
das
test
inc
cmp
loope
add
idiv
hlt
stc
sbb
das
push
xor
and
test
arpl
lea
jno
fisubrl
mov
and
hlt
test
inc
dec
mov
test
lock
icebp
jmp
jnp
shrb
outsl
hlt
pushl
ss
adc
pop
jno
jno
sub
fiaddl
jl
sti
ret
sbb
adc
repz
dec
push
pushf
mov
cmp
mull
or
cmp
pop
mov
jmp
fcomp
push
mov
lods
pop
daa
and
mov
xlat
cmp
ret
addb
cli
dec
xor
mov
cmp
jno
dec
popf
push
lahf
pop
mov
or
lods
mov
mov
or
and
int3
cwtl
mov
in
incl
and
inc
dec
inc
fcmovu
mov
add
dec
imul
xchg
shrb
aad
jmp
adc
adc
jae
mov
or
jl
rcrl
rclb
jae
daa
cmp
popl
xchg
adc
sub
imul
mov
dec
mov
lods
sbb
test
ljmp
adc
outsb
out
addl
add
ret
jmp
sbb
jmp
mov
add
xchg
xchg
stos
fincstp
in
dec
pop
dec
cld
pop
jp
dec
mov
mov
std
int3
stc
out
orl
cmpsb
adc
push
mov
sar
mov
ljmp
clc
xchg
jmp
ds
in
xlat
pop
das
lcall
cli
fsub
mov
sbb
popf
xor
mov
inc
out
ljmp
pop
fsubrs
dec
push
push
push
mov
pop
jecxz
adc
dec
sub
mov
out
and
je
lods
outsb
xor
lea
cltd
pop
dec
cmc
bound
or
cli
push
decl
mov
mov
cmpsb
cmc
pusha
lret
push
sub
push
cld
push
inc
add
ljmp
decl
shlb
push
mov
mov
loope
jle
push
mov
add
mov
mov
and
xchg
push
inc
lods
pop
das
daa
mov
cltd
jg
std
mov
xchg
in
push
inc
pop
daa
adcl
fdivr
decl
cmp
icebp
cmp
adc
movsb
btr
push
inc
cmp
xchg
ljmp
mov
mov
aaa
gs
jge
jmp
les
fprem1
mov
ret
mov
inc
bound
popf
pop
pop
fs
dec
mov
xchg
adc
jnp
lock
in
imul
imul
jo
cmc
incl
jns
mov
cmpsl
jle
push
fists
inc
mov
push
mov
sahf
sub
push
mov
cli
out
idivb
inc
lock
pusha
lret
lahf
iret
dec
mov
push
call
jnp
ja
js
adc
inc
fldt
bnd
mov
inc
inc
aad
incl
cmc
xchg
repz
or
in
scas
push
sbb
imul
incl
xchg
rcl
sbb
rcrb
cld
jae
pop
xchg
xor
call
test
cmpl
cmp
pop
push
add
cli
out
nop
mov
imul
aas
inc
sbb
mov
add
jg
mov
xor
add
fimuls
int3
imul
test
cmc
inc
inc
push
cmp
adc
and
jg
xchg
subb
mov
xchg
aad
popf
push
sbb
jmp
shlb
pop
lds
inc
cltd
jmp
mov
movsl
xor
mov
mov
decl
add
pop
mov
mov
dec
mov
jp
cmp
cmp
push
inc
cmp
call
cmpsb
pop
jge
pop
lea
cmpsl
add
mov
push
or
jecxz
das
xchg
xchg
scas
cmpb
add
xor
movl
sbb
mov
pop
mov
jmp
rorb
pop
out
jge
out
add
ret
aaa
in
and
mov
adc
ret
mov
inc
jb
xchg
pop
mov
repnz
jecxz
pop
call
das
mov
mov
or
fisttpll
nop
pushl
dec
lret
xor
mov
cmp
aas
add
dec
mov
sbb
pop
or
call
mov
inc
xchg
dec
sbb
clc
popa
fadds
stos
outsl
adc
jo
das
stc
add
xchg
cli
pushf
outsl
xor
mov
dec
call
jg
xor
aad
push
in
xor
decl
mov
mov
dec
and
mov
ss
ds
xor
mov
pop
ret
out
xchg
sahf
dec
and
pop
xorb
andb
jp
sahf
push
movsl
dec
incl
je
stos
scas
scas
sub
xchg
in
cmp
mov
das
std
outsl
icebp
call
sar
sti
push
mov
mov
shrb
xor
sub
pusha
xor
decl
or
mov
fcmovne
xor
jg
nop
or
push
mov
call
sub
jg
call
test
pop
and
js
sahf
icebp
pusha
push
push
test
pushl
push
jno
pusha
mov
xchg
cmp
jg
lcall
repz
xchg
sbb
lret
fldt
roll
popa
clc
sub
je
jl
lock
clc
ljmp
adc
mov
fs
out
mov
mov
jg
adc
and
aad
pushf
test
inc
mov
dec
stos
or
sbb
push
mov
push
sbb
mov
loopne
cwtl
xor
adc
jge
sti
jmp
lods
mov
test
scas
mov
jecxz
and
mov
jl
bound
in
sub
mov
repnz
outsb
cs
xor
jno
aas
fs
pop
mov
lock
pop
leave
rcll
push
nop
sub
gs
mov
shrl
clc
lcall
hlt
ret
addr16
mov
cmp
ficoml
popa
lods
test
test
ljmp
clc
mov
xor
or
push
fmull
sub
sub
and
in
lea
in
mov
stos
mov
mov
or
test
mov
icebp
ljmp
jecxz
cli
pusha
pxor
dec
dec
imul
jns
add
test
flds
fwait
mov
mov
push
fdivl
xor
ljmp
nop
mov
das
dec
sbb
mov
sub
call
or
mov
xchg
push
or
gs
frstor
lods
leave
push
mov
dec
push
lahf
mov
inc
cmpsb
inc
scas
xor
leave
mov
orl
cmp
dec
mov
sbbl
mov
loop
sahf
mov
iret
cmc
xchg
cli
add
cld
fcompl
daa
daa
cmp
shl
or
out
mov
fstpt
xlat
fimull
and
jle
pop
mov
sub
in
pop
lret
lock
repnz
sti
xor
and
aas
fists
xchg
std
ja
pop
vshufps
test
or
pop
loop
ljmp
mov
dec
adc
test
xor
test
cmpsb
xchg
lock
insl
hlt
xor
push
out
adc
fstp
cmp
sbb
faddl
mov
outsb
add
add
xor
in
fildll
shlb
cmp
test
cli
xor
add
jae
lods
sub
jg
push
stc
scas
pop
xchg
scas
cmp
pop
jb
cmp
sub
in
pop
mov
mov
jmp
inc
push
mov
insb
mov
mov
addr16
scas
cli
in
daa
xchg
pop
enter
incl
outsl
icebp
icebp
test
das
cs
and
fcomi
orl
jne
cmc
adc
call
mov
cmp
inc
mov
mov
xor
jae
xor
int
imulb
aam
mov
or
sar
nop
mov
fadd
or
pop
leave
fsubrl
int
add
dec
jle
sar
mov
add
sub
outsl
fcmove
daa
mov
or
incl
sbb
lahf
xor
pusha
cmp
testb
or
mov
cmc
js
data16
jecxz
push
sbbb
test
mov
pop
cli
mov
inc
scas
pop
insb
lds
fsubl
rclb
fldt
lock
xchg
mov
out
test
ljmp
outsl
lock
or
mov
inc
push
dec
sahf
cmp
or
es
pop
pop
xchg
add
sub
fwait
cmp
cs
call
das
inc
cld
xchg
pop
test
jle
movntq
sub
gs
call
insb
mov
popf
rcrb
xchg
ficoml
decl
ljmp
stos
xor
movsl
adc
push
adc
lods
adc
pushl
inc
cltd
sbb
aas
mov
movsl
incl
or
sub
xor
mov
ds
sbb
pop
call
mov
mov
push
fmulp
in
imulb
dec
or
outsl
sbb
push
jmp
mov
xchg
add
inc
jge
lods
das
add
popa
mov
hlt
incl
mov
dec
xchg
faddl
outsb
xor
mov
leave
push
sahf
jg
ljmp
das
push
add
enter
sub
aam
repnz
incl
jmp
xchg
iret
call
jmp
pop
test
insl
inc
cld
rcl
sbb
fmull
mov
sub
movsl
les
pop
out
dec
pop
mov
mov
lods
mov
sbb
out
push
hlt
iret
and
lock
push
inc
sub
xchg
sub
or
mov
and
sub
xor
popa
cltd
add
mov
imul
mov
push
jae
inc
mov
lods
std
pop
cli
or
scas
xlat
fs
xchg
mov
out
movsl
decl
lahf
cmp
mov
push
jmp
in
jbe
sub
lods
aam
mov
fcmove
sub
jo
shlb
adc
pop
and
cmp
inc
mov
xor
decl
mov
out
test
lea
pop
or
std
out
adc
or
sbb
adcl
adc
add
inc
popl
sbb
xor
sbb
cmc
sbb
cmc
int3
lock
xor
std
test
rcrb
mov
add
stos
hlt
js
testb
xor
inc
add
xchg
cmp
jg
out
arpl
sub
xchg
add
inc
dec
adc
lods
adc
repnz
loopne
xchg
xor
int3
aam
adc
call
pop
leave
enter
jecxz
sbb
loopne
pushf
mov
ljmp
cld
xchg
in
f2xm1
mov
pop
mov
mov
mov
pop
push
stos
call
call
sub
arpl
xchg
sbb
mov
mov
pop
push
movsb
pop
pop
push
mov
ret
lret
lret
lret
and
call
dec
dec
jp
add
insl
cmpsl
adc
mov
data16
xchg
jne
push
sti
mov
lock
out
es
fmuls
adc
loop
jg
jge
pop
inc
xor
ljmp
rcr
mov
sub
sub
push
cmp
mov
mov
std
xchg
fists
stos
pop
pop
sbb
das
cld
jg
imul
push
fstps
test
pop
fistl
push
inc
cmp
cmpsl
xchg
ret
stos
pop
std
mov
and
int
mov
sub
push
repz
mov
lret
shrl
xor
add
js
add
popaw
lcall
mov
inc
inc
inc
xor
in
hlt
xor
and
jg
jmp
dec
and
in
mov
enter
andl
mov
lret
xchg
es
addb
decl
lock
pop
sahf
xchg
mov
mov
sti
sbb
mov
dec
mov
incl
loopne
mov
push
fnclex
jbe
inc
int
loope
pop
shrb
daa
jge
cmc
adc
or
leave
adc
jmp
loop
cli
inc
mov
push
cmp
jecxz
adc
adc
jo
arpl
jg
lea
or
inc
call
cwtl
ret
adc
dec
das
cmp
inc
pop
aaa
lret
inc
into
mov
or
cwtl
fwait
cmp
cs
lods
sti
sub
push
xchg
pop
sub
jno
sbb
jl
dec
call
inc
inc
ljmp
cmp
enter
jne
lret
aad
decl
je
notb
cmp
int
and
adc
and
xor
and
push
sbb
add
lods
mov
jecxz
dec
es
cmc
pop
sti
and
push
imul
cli
pushl
mov
pop
push
jp
ss
cli
idiv
fdivrp
call
pop
and
iret
sub
test
sarb
addr16
push
imul
popf
mov
inc
mov
xchg
dec
lret
jne
sbb
fadds
jg
decl
bound
or
pop
push
mov
cmpsl
insl
sbb
popf
inc
scas
dec
inc
add
fdiv
out
fimuls
xchg
ljmp
jmp
push
push
push
cmp
cmpsl
adc
adc
mov
pushl
push
sarl
decb
inc
add
fmuls
lcall
mov
sahf
or
pop
cmp
cli
fcoml
jge
jmp
dec
dec
cld
incl
inc
jne
movsb
fwait
mov
pop
pop
mov
sub
decl
sbb
xorb
lods
cmp
or
lods
filds
inc
lret
lahf
sbb
xor
aaa
mov
sbb
pop
cmp
jg
ljmp
cwtl
and
pop
loop
not
lods
xchg
xchg
pop
ficomps
es
jmp
out
loopne
sub
inc
mov
pop
sarb
imul
shll
clc
inc
fwait
push
pop
push
and
cmp
dec
dec
loop
cli
or
sahf
sub
out
in
and
jbe
mov
xchg
cli
jg
jmp
in
xchg
shll
push
nop
call
xor
jge
fistps
stos
pop
add
xor
xchg
fnstenv
cmp
inc
mov
lcall
lods
push
test
jmp
pop
mov
dec
mov
mov
decl
iret
jl
push
push
arpl
jge
cmp
loopne
cli
jge
push
call
aas
sbb
sti
xchg
ds
test
adc
cltd
das
sbb
xchg
inc
addr16
push
pop
stc
popf
or
scas
fwait
adc
cli
das
stos
xchg
pop
adc
movsb
out
rorb
fsubl
pop
cmp
outsl
data16
fstpt
inc
test
sti
loop
aam
ret
ljmp
fisttps
push
scas
test
xchg
push
xchg
pop
pop
push
xor
pop
enter
fistps
dec
and
cmc
test
test
pop
cli
lcall
and
mov
aas
adc
sub
cmc
sub
lcall
adc
dec
mov
adcb
fbstp
call
push
pushl
js
mov
inc
adc
jp
ss
or
xor
jnp
inc
jmp
shlb
dec
daa
mov
jns
loopne
ljmp
out
roll
mov
in
push
movsb
scas
in
bound
mov
sbb
lcall
dec
mov
sub
loope
cmpsl
jae
test
jmp
js
in
cld
add
data16
sbb
mov
and
fsubs
pop
lea
mov
pop
loop
in
cmpsb
adc
push
aam
stos
adc
add
decl
roll
pop
shlb
xchg
cli
dec
lock
jl
lahf
or
push
popf
stos
or
lods
jle
loope
jp
loop
fdivrl
movsl
and
call
xchg
push
nop
jb
add
mov
jle
test
push
test
jmp
jno
decl
fsqrt
pop
inc
cmpsb
arpl
sahf
in
mov
rorl
mov
decb
lea
mov
mov
lds
clc
xor
mov
inc
mov
jne
cmc
gs
imul
flds
sub
outsl
aam
mov
add
inc
arpl
popa
lret
pop
out
xor
lods
mov
xchg
jge
aaa
out
clc
jecxz
push
xchg
js
pop
movsb
std
addr16
andl
test
arpl
scas
jl
ss
and
mov
ljmp
xor
shlb
pop
inc
sbb
enter
les
push
movsl
push
cmpsb
aam
bound
ucomiss
call
rolb
jmp
mov
mov
shlb
sub
mov
scas
pop
lea
sbb
dec
cmp
inc
aam
xchg
or
pop
jae
mov
mov
cs
lea
sub
pop
fsubr
fucomip
enter
pushf
mov
sbb
outsl
mov
pop
lods
js
xchg
xor
test
or
push
jns
dec
fcompl
ja
cmpsb
xor
xchg
dec
xchg
fidivrs
stos
cmp
jae
push
lea
pop
push
push
std
loop
push
movsl
pushl
in
xchg
out
jp
clc
aaa
cli
mov
jl
sub
loopne
pop
push
mov
push
dec
push
sub
or
mov
jns
cmc
push
decl
sub
and
insl
loopne
or
push
ljmp
xchg
mov
push
out
sbb
cmp
cmp
in
mov
add
pop
test
pop
shrb
negb
dec
sbb
jg
mov
sbbl
sbb
add
fmul
std
xchg
std
aad
push
xchg
jg
test
mov
fs
int3
inc
repnz
lcall
jne
or
cmp
or
out
stc
imul
xchg
decl
jmp
rorl
dec
jnp
in
mov
in
and
inc
pop
and
xor
jecxz
in
adc
jle
push
xchg
jne
push
sub
mov
shl
dec
clc
test
mov
adc
leave
dec
ss
push
pop
in
in
subl
sub
cmp
push
jl
push
loope
mov
in
mov
mov
pushf
inc
insb
insl
ja
fistpll
aaa
cmpl
sbb
xor
jmp
bnd
loop
jns
jg
icebp
pop
fsubr
es
inc
insl
xor
lods
andb
cwtl
fistpl
xchg
sub
sub
and
or
lret
jge
imul
inc
mov
push
jne
sar
into
push
mov
xchg
fistl
stos
lret
incl
outsl
jmp
sbb
scas
adc
mov
push
loop
andl
push
mov
inc
sbb
mov
lods
push
mov
push
aaa
sti
sar
mov
xor
sbb
push
push
xchg
fistpl
jecxz
push
bound
pop
dec
repnz
jg
mov
xchg
pop
mov
aam
cmpsb
lock
stc
cltd
adc
xchg
clc
decl
sahf
ret
adc
insl
in
test
sbb
xchg
testl
lds
jae
loope
leave
loope
xchg
fisttpl
loopne
loop
mov
call
mov
cli
repz
mov
ret
ja
imul
stos
mov
jg
clc
cld
cmc
popf
push
sub
cld
sbb
outsb
xchg
call
inc
addl
leave
pop
pop
push
adc
push
in
mov
fnstsw
lods
pusha
mov
es
and
aaa
pop
fdivl
mov
daa
sbb
mov
jle
or
xor
lock
test
or
or
pop
adc
mov
inc
andb
dec
mov
fildll
sar
mov
ror
mov
cmp
mov
in
pop
xchg
rcl
mov
lea
jge
adc
fldcw
push
and
sub
repnz
arpl
jecxz
cmp
jg
dec
shll
loopne
icebp
mov
cmp
call
addb
es
popf
into
je
fiaddl
xor
aas
rorb
incl
push
cli
mov
aam
and
arpl
fdivrs
shl
subb
leave
int
ret
mov
add
lret
or
xor
push
sub
movsl
fdivr
fistpll
cwtl
sti
push
sub
sub
cmpsb
js
xor
out
push
jg
nop
pop
push
ja
sahf
xchg
mov
std
mov
rcll
fsubr
incl
out
imul
cs
jnp
or
dec
call
adc
fbstp
popa
aam
pop
js
sub
out
adc
or
loopne
lcall
and
lock
mov
dec
xlat
out
fstpt
dec
scas
out
sarl
test
stos
addr16
movsb
lods
ljmp
std
mov
pop
dec
test
add
lret
push
daa
das
xchg
xchg
outsl
fstl
mov
lahf
test
fidivs
rorl
mov
pushf
and
jnp
xor
test
aaa
das
ljmp
cmpsb
adc
pusha
stos
out
push
data16
lods
cmp
push
xlat
in
cs
outsb
mov
push
sbb
in
xchg
fucomip
mov
xchg
lcall
pop
push
mov
xor
pop
dec
mov
xor
or
mov
rolb
int
out
xchg
ret
cmpsl
mov
call
inc
xchg
sub
xlat
popf
mov
test
ror
mov
cmpsl
fcmovb
push
ffree
dec
out
mov
stos
push
shll
jae
add
mov
push
xchg
push
cld
xor
notl
mov
dec
das
icebp
movsl
jle
testl
push
cmp
shrl
mov
stos
mov
sahf
in
clc
ljmp
mov
stc
jne
push
or
int
call
inc
lret
and
movsb
push
mov
add
loopne
addr16
ljmp
stc
push
push
xchg
mov
push
mov
cmpsl
lds
mov
loope
push
push
ljmp
mov
gs
inc
pop
sub
dec
jecxz
pop
scas
gs
mov
lahf
loope
sbb
fldenv
push
mov
xchg
and
ret
mov
out
fmuls
sub
inc
xchg
inc
mov
fxtract
jmp
jg
jmp
test
je
lea
lcall
call
dec
call
cld
repnz
sarl
cmp
lods
push
je
sbb
lret
or
pop
clc
fisttpl
xchg
jecxz
out
mov
cmpsl
push
mov
mov
loope
push
stc
pop
sub
and
push
bound
jge
xchg
cltd
push
jg
and
cli
insb
sbb
sbb
pop
lock
lahf
jb
ljmp
fiadds
icebp
dec
insb
in
pop
push
pop
scas
mov
incl
jns
mov
pop
gs
lds
addr16
cmp
loopne
adc
roll
mov
das
lock
nop
mov
das
and
xor
sub
adc
ljmp
lret
dec
cmpsl
stc
mov
dec
repnz
jmp
clc
mov
cmpsl
sub
int
mov
stos
or
decl
std
dec
jno
clc
inc
cmp
test
fisubrl
push
xor
jecxz
mov
sar
stos
ja
pop
dec
imul
cmp
cmp
jg
test
adc
das
jmp
test
push
rcll
pop
pop
clc
pusha
dec
xchg
jp
fsts
jno
inc
aas
cmp
fwait
add
mov
fldcw
jmp
imul
in
jns
dec
adc
das
icebp
jecxz
decl
adc
ja
dec
js
xchg
clc
das
jl
movsl
dec
ret
xor
sbb
adc
popa
stc
shl
sti
decl
cltd
xor
aam
sub
jg
adcb
push
dec
cld
decl
add
jnp
inc
add
sahf
or
mov
outsb
pop
inc
hlt
ljmp
repz
test
and
ds
pop
stos
mov
or
out
movaps
inc
call
outsl
and
xchg
mov
mov
rcrl
pop
sub
pop
mov
add
lret
xor
fucomip
xchg
stos
pop
mov
mov
mov
mov
lods
fwait
jp
cli
push
cld
lods
pcmpgtb
es
add
test
xchg
push
movsb
mov
xchg
mov
aad
add
mov
jge
rolb
and
and
nop
incl
mov
dec
sbb
pop
pop
xchg
inc
imul
add
clc
jmp
addl
push
cmp
clc
inc
shrb
xor
call
clc
ljmp
syscall
and
pop
enter
sbb
adc
repnz
loop
add
call
outsl
or
movsb
xchg
mov
scas
sbb
jge
inc
inc
adc
jge
jl
incl
negl
mov
sub
scas
add
pop
lds
mov
adc
cmp
movsb
mov
les
jne
rol
aam
cli
aaa
clc
out
lret
aas
dec
into
sub
or
test
enter
pop
push
leave
ret
mov
push
sub
incl
adc
or
and
js
sub
popa
test
push
push
inc
shlb
fcoml
dec
iret
pop
repnz
jmp
sbb
push
ret
mov
xchg
imul
lea
pop
imul
mov
lods
aas
stos
inc
fs
pop
sub
scas
sbb
invd
adc
cmp
decl
xadd
push
lret
xor
call
jle
dec
or
mov
aaa
adc
sbb
pushl
push
mov
jmp
lea
mov
sbb
subb
das
test
test
sar
or
out
sub
fistps
lahf
xor
mov
or
add
jnp
or
sbb
iret
and
jnp
pop
adc
fbld
push
xor
je
mov
jns
jnp
aad
pop
pop
das
hlt
sbb
rcl
test
and
jg
aaa
push
repnz
xchg
lock
push
incl
decl
dec
mov
ljmp
cwtl
lea
xlat
sbb
jg
push
dec
xchg
mov
test
lahf
int3
jae
mov
inc
rcrl
lcall
pop
pop
or
cltd
cmp
mov
hlt
ret
sub
cmc
pop
fcmovne
fbstp
test
mov
fsubl
add
dec
mov
loopne
mov
orb
xchg
xlat
push
mov
cmpsl
adc
mov
inc
jle
add
and
pop
leave
ljmp
js
mov
int
in
ljmp
jge
inc
dec
sub
xchg
cmp
add
testb
outsw
mov
dec
mov
mov
mov
xchg
mov
outsb
add
adc
sbb
inc
scas
mov
das
lock
and
jle
in
xchg
push
fldln2
test
add
jo
xchg
cli
int
popa
pop
mov
cmc
les
cltd
push
sbb
ljmp
je
mov
mov
ljmp
std
cld
out
inc
dec
stc
ss
insb
pop
push
shrd
testb
je
sbb
sbb
outsl
icebp
call
lods
je
pop
add
cli
sahf
sbb
pop
orb
leave
push
inc
push
stos
cmpsb
incl
and
stos
loop
mov
xchg
test
and
mov
xor
popf
or
sub
mov
ja
mov
mov
shrl
or
flds
ret
popf
sbb
das
cmc
xchg
pop
fisttpl
fs
and
xor
in
mov
xchg
std
lcall
lods
xchg
lds
mull
dec
jp
pop
je
adc
inc
lcall
rcrb
cmp
aas
push
xchg
out
pop
sbb
pop
in
ret
test
decl
sbb
jne
sbb
call
jl
rcl
iret
inc
jns
or
pop
rcl
mov
dec
pop
cli
and
xchg
fdivrs
sbb
jl
daa
fnstsw
fdivrl
mov
adc
and
iret
cli
mov
jnp
inc
inc
popa
cmp
dec
fmuls
cld
ljmp
aaa
jl
sbb
mov
divl
push
push
pushf
lds
add
loop
ljmp
jbe
push
pop
nop
xchg
pop
push
mov
fimull
outsl
std
incl
inc
sbb
es
pop
or
sub
call
sub
es
dec
fiaddl
or
push
shrb
inc
sti
mov
xchg
jecxz
cmc
xchg
inc
test
or
outsl
decl
sbb
push
in
cli
fstl
add
mov
xor
mov
push
movsb
xchg
popa
push
in
subl
call
cmp
mov
add
cld
das
xchg
cli
mov
pop
das
mov
and
cli
outsl
ja
sub
fadd
scas
pop
stos
repnz
scas
sub
xchg
cli
jg
dec
loope
push
enter
adc
pop
ret
push
ret
cmp
outsl
sbb
push
js
xor
mov
and
fimull
push
jg
pushl
hlt
push
mov
and
js
lret
mov
dec
cld
test
mov
dec
out
out
lods
dec
fldz
inc
ss
mov
rcll
mov
jno
out
pop
mov
std
lea
adc
cmp
xchg
loop
and
pop
jmp
sbb
stos
mov
mov
lahf
dec
lods
mull
pop
and
adc
inc
cli
pop
dec
testl
test
adc
sbb
daa
and
cmp
in
cmpsb
les
std
pushl
lcall
sbb
scas
sbb
ja
sbb
fnsave
mov
ljmp
cmp
rolb
push
jns
jle
sbb
cli
mov
sbb
clc
push
mov
push
inc
es
mov
movups
push
ret
jg
pop
mov
clc
adc
insb
subl
clc
call
cli
std
loope
das
incl
and
pop
fdivrl
sbb
ljmp
stos
xor
mov
or
push
and
mov
ljmp
cmp
stc
xchg
or
popf
xorl
sub
inc
inc
decb
call
mov
and
xor
xor
jbe
or
lahf
or
mov
dec
jl
call
movsb
icebp
push
mov
xor
lahf
mov
ljmp
daa
pop
in
xor
push
shlb
clc
mov
lock
and
aaa
adc
fidivl
jo
cltd
jecxz
pop
and
mov
sahf
sbb
pop
cltd
dec
cmp
pop
ljmp
xchg
cmp
sbb
xchg
in
add
incl
cmp
sti
and
les
repz
sbb
outsl
hlt
jg
lret
in
push
in
ss
pop
jbe
hlt
outsb
fnstenv
mov
sub
clc
decl
aam
mov
sar
and
xchg
jno
lret
or
pushl
pop
mov
sub
pop
fnstsw
adc
sbb
imul
les
scas
xchg
jno
cli
jmp
nop
jb
sbb
lret
pop
mov
push
push
lea
dec
negb
cmpsb
add
mov
aaa
clc
push
test
or
jl
out
mov
jecxz
or
ljmp
mov
in
jne
aas
xchg
loopne
jmp
std
daa
fstl
iret
xlat
push
mov
adc
mov
push
pop
add
mov
sbb
movsl
push
or
or
out
scas
xchg
cmp
or
mov
lea
dec
mov
inc
mov
nop
push
call
push
cli
mov
insb
nop
mov
aaa
mov
test
xchg
das
std
aaa
cli
ret
jne
xchg
jne
lcall
sbbl
xchg
cli
push
fiaddl
pusha
fdivr
lock
adc
dec
hlt
ljmp
mov
loop
cmpsb
sti
orb
daa
mov
rol
inc
jg
aam
mov
hlt
ljmp
scas
gs
cld
mov
jae
adc
push
sbb
clc
test
cltd
pop
jno
jo
push
push
movsl
decl
clc
xchg
sub
inc
sbb
fildl
rorl
dec
subl
inc
fdivr
xor
incl
mov
shrl
adc
adc
push
movsl
add
in
push
aad
dec
xorb
dec
call
mov
movsl
sub
and
mov
jno
movsl
call
fmuls
addr16
psraw
ds
call
lock
sbb
rcr
cmp
dec
loopne
flds
fistpll
ljmp
add
js
stc
mov
pop
das
mov
add
sub
mov
lea
mov
pop
or
mov
pop
jmp
filds
pop
and
jecxz
jmp
stos
adc
sti
add
fnstsw
call
cmpsb
nop
cld
cmc
das
lahf
mov
cmp
fxam
pop
fistpll
ja
xlat
incl
mov
icebp
stc
ljmp
iret
pop
fldcw
scas
ljmp
movsl
outsb
divl
hlt
shlb
cli
dec
jnp
mov
decb
in
shll
dec
sub
in
fbld
ret
pop
cli
lcall
jge
jne
out
repnz
mov
insl
mov
ret
or
popf
addr16
lock
rcr
adc
lea
lea
sub
dec
add
cmovnp
adc
inc
dec
inc
ljmp
jmp
pop
jb
scas
cmpsb
test
call
pop
cwtl
add
pop
add
push
pushl
sbb
aaa
sub
in
popf
mov
fcomps
dec
loop
push
inc
hlt
add
jmp
fmull
test
dec
jge
addr16
sbb
icebp
xor
aas
jmp
pop
daa
xlat
inc
outsl
test
bound
inc
mov
mov
lods
in
adc
mov
lock
vcvtdq2ps
enter
add
das
cmc
incl
cmc
pusha
sahf
cmp
fidivrs
dec
out
or
fisubl
mov
popa
loope
or
xor
mov
rorl
mov
jge
in
call
mov
decl
inc
repz
sbb
cs
and
popf
outsl
ret
push
xor
shr
enter
xchg
cli
mov
lock
pop
mov
insl
shll
adcl
mov
fyl2x
cld
fisubrs
push
sbb
repnz
nop
movsb
mov
mov
sbb
jmp
ja
enter
aad
cmovle
arpl
test
aam
jmp
or
xor
xchg
rcrb
and
fsubr
ljmp
insb
xlat
adc
test
das
fwait
movsl
out
test
jno
dec
lcall
ss
lods
or
iret
mov
mov
cmp
sub
inc
dec
std
pushl
push
lret
push
frstor
je
mov
adc
jmp
idivl
and
rcrl
sbb
movsb
mov
mov
adc
mov
mull
mov
mov
inc
push
or
ds
ljmp
std
cmpl
js
outsb
fistps
cld
inc
int
mov
loope
decl
inc
jno
js
cmp
pushf
aad
test
test
cmpsb
add
xchg
in
lcall
cs
clc
mov
js
jbe
inc
mov
aaa
cli
lcall
es
mov
orb
adc
call
adc
sbb
and
or
mov
jle
fsubrl
shll
push
cmp
cmp
incl
outsb
mov
mov
cmp
mov
jnp
jecxz
inc
sub
or
rcr
cld
push
sarl
pop
sbb
push
fildll
fsubrl
xor
loope
scas
xchg
push
add
jo
lahf
repz
shlb
je
dec
mov
push
cmp
mov
lcall
decl
mov
xchg
mov
lods
movsb
ret
mov
xchg
ljmp
lock
loop
cs
jge
cmpsb
mov
ljmp
cmc
call
and
xorl
jb
cmpsb
mov
push
aad
pop
enter
push
ljmp
lcall
testb
mov
mov
cmp
loop
lret
outsl
inc
xchg
inc
enter
in
push
out
test
jge
cwtl
pop
pop
cwtl
inc
mov
shr
roll
pop
pop
fs
cwtl
mov
negl
dec
add
addr16
xor
pop
movsb
incl
xchg
lods
jne
call
jae
and
sub
ljmp
push
and
pop
movmskps
test
ljmp
pop
sub
dec
xor
push
and
shrl
xchg
test
rcll
sbb
add
pop
jp
mov
ljmp
lock
in
ror
outsl
dec
dec
int3
or
test
cmp
mov
inc
and
push
push
cmp
lods
ja
ds
cmp
adcl
sarb
mov
adc
out
push
sub
imul
mov
and
inc
mov
inc
enter
popa
xchg
lock
cmp
popf
or
outsl
mov
push
dec
aam
and
mov
xchg
dec
sbb
adc
jb
lcall
rclb
aam
or
dec
adc
and
push
nop
xchg
mov
out
rolb
mov
jge
incl
repnz
xor
ljmp
xor
ja
mov
mov
jecxz
cmpsb
cmp
mov
sahf
mov
hlt
mov
rorb
mov
push
movsb
pop
in
or
mov
mov
std
xor
shlb
mov
movsl
jle
cmp
mov
push
jne
sbb
mov
inc
movsb
ud0
fnstcw
mov
gs
dec
iret
xor
es
imul
pop
pop
ljmp
shlb
icebp
decl
imul
dec
imul
jmp
xchg
rol
add
mov
cld
in
cmp
clc
flds
ret
icebp
ljmp
arpl
adc
cmp
repz
cmp
ljmp
fldcw
ss
or
stos
sti
inc
dec
inc
rorb
mov
subl
mov
push
xchg
scas
adc
jecxz
lock
loope
int3
jb
movsb
pop
sub
mul
push
mov
roll
cmp
add
aam
rcl
lock
test
ljmp
xor
jo
stos
fildll
or
lahf
cmp
or
in
mov
lock
lcall
subl
or
mov
lcall
sbb
and
sub
pushf
ja
push
cmp
jb
arpl
addr16
sti
lret
push
movsl
decl
out
pop
jo
jge
into
sbb
mov
inc
das
dec
mov
call
adc
test
es
rclb
rcr
push
in
xchg
pop
mov
or
adc
dec
out
adcl
lds
cld
lds
adc
pop
sbb
sbb
jo
jecxz
jg
jg
xor
xor
inc
outsl
sub
or
rcrb
mov
push
pusha
cs
outsl
std
pushl
nop
cltd
nop
gs
lret
std
push
xor
lret
sarb
imul
sbb
jmp
std
ret
sbb
mov
imul
mov
loopne
mov
lea
movsl
fisubs
or
lcall
cmpsb
out
pushl
cmp
rol
mov
lods
push
loop
shll
sbb
sbb
inc
inc
xchg
mul
pop
movb
mov
sub
int
mov
mov
push
iret
cmp
xchg
out
sarb
dec
ficoms
lods
das
fildl
sub
xchg
inc
inc
aad
ljmp
in
xchg
fwait
das
xchg
xor
mov
cwtl
sbb
or
xor
cmp
add
sbb
out
inc
aas
inc
xchg
int3
and
or
sub
mov
shrl
jmp
sub
cmpsl
es
sub
xchg
xor
push
cwtl
sub
push
lret
push
aas
ficompl
mov
cld
call
xchg
mov
push
les
fsubs
mov
and
jl
pop
pushf
rorb
mov
into
adc
adc
int3
lcall
mov
adc
mov
sub
mov
xor
mov
sti
rcrl
movb
sbb
mov
loop
mulb
and
jbe
lods
incb
sub
jl
push
mov
fidivrl
imul
aas
fnstcw
out
fcoml
decb
inc
xor
outsl
sbb
sbb
pushw
stos
pop
sti
pop
jge
lahf
lods
mov
mov
jmp
inc
mov
sub
lcall
loope
xor
divl
add
mov
sarl
xchg
fucomip
and
lcall
call
xchg
mov
testb
rcll
jmp
cltd
add
pop
pop
out
aaa
mov
sub
pop
mov
call
sti
std
mov
mov
out
lret
shll
ret
add
rorl
aad
out
lods
pop
xchg
inc
sbb
fistpll
out
orps
ffree
incl
aam
lods
or
sbb
inc
sar
icebp
sbb
call
and
or
mov
in
cmp
out
shll
je
mov
mov
ficoml
cmp
rcrb
test
push
mov
lea
loope
aaa
clc
aad
stc
rcr
xor
lcall
jno
test
inc
aas
gs
in
mov
inc
cltd
jae
neg
mov
loope
sub
js
daa
jl
call
sub
imul
cld
dec
outsb
sbb
shrl
imul
fcomi
pushl
fsubrl
dec
mov
dec
sub
ficomps
into
jb
and
fidivs
pop
out
call
popa
ret
imul
call
sub
mov
xor
adcb
icebp
pop
fs
imul
dec
bound
cmp
and
dec
out
ret
mov
neg
cltd
dec
mov
shlb
jp
ret
fnstcw
popa
add
call
sub
negl
xchg
clc
sub
pop
pop
push
je
mov
jecxz
mov
jg
test
sarb
and
js
repz
stc
xor
sub
sbb
jns
imul
outsb
sarl
jo
mov
or
push
cld
mov
gs
jp
ljmp
in
xchg
popl
cwtl
das
mov
pusha
add
add
sbb
dec
out
cmc
ljmp
mov
loopne
mov
jns
adc
push
in
outsl
and
std
ljmp
xor
inc
aam
sub
ds
test
repnz
test
das
mov
roll
add
inc
fs
sti
incl
ss
xchg
sbb
fxch
mov
cmp
cs
data16
jg
mov
adc
lds
jo
shll
jns
xor
incl
das
sub
or
lock
add
subb
lcall
mov
sub
pop
xlat
in
les
enter
jg
leave
rclb
sub
fadd
rorb
sbb
pop
aas
movsl
call
push
adcl
xor
ljmp
pop
mov
mov
nop
xchg
sub
cmp
or
dec
lret
fdivs
cmc
dec
outsb
rep
in
mov
xchg
enter
cld
cmp
sbb
mov
popa
dec
inc
cld
mov
adc
rep
stos
sub
decl
lea
rcrb
mov
cli
jg
pushl
inc
bound
aas
je
pop
fs
dec
lret
insb
push
loope
mov
clc
inc
xchg
dec
mov
lods
popf
inc
ljmp
jg
arpl
jmp
call
arpl
sub
inc
ret
ds
pop
outsb
rolb
jno
mov
mov
dec
std
inc
stos
mov
inc
subb
decl
jge
imul
hlt
lcall
sub
int
xchg
cli
incl
nop
sbb
inc
pop
and
pop
stos
push
icebp
lret
cmp
pushl
sbb
dec
unpcklps
mov
lret
inc
mov
loopne
and
dec
cmp
xchg
leave
lcall
fwait
pop
add
and
mov
mov
push
scas
jnp
call
sbb
lods
test
lahf
add
lcall
clc
fbld
arpl
daa
test
stos
push
sahf
stos
pop
cmc
pop
mov
add
jecxz
add
and
jg
lods
cmp
and
adc
shrb
sub
imul
test
incl
int3
mov
daa
lds
clc
imull
cmp
inc
cmovb
push
dec
or
pop
xor
gs
lods
cmp
getsec
mov
stos
leave
in
cmp
out
push
in
jge
sbb
call
pop
inc
jecxz
aam
adc
xchg
adc
adc
std
les
addr16
sbb
incl
rcr
mov
or
mov
in
stos
xlat
in
call
int3
pusha
or
sbb
outsl
push
adc
dec
sbb
dec
dec
cmpsb
test
mov
icebp
dec
in
push
sbb
rcl
sub
jo
or
mov
out
mov
stc
sti
pop
addr16
sarl
lret
enter
mov
movl
and
arpl
pop
cld
dec
mov
cmp
push
xchg
sub
clc
push
pop
push
mov
cmp
dec
and
lods
sub
adc
push
dec
sbb
das
lcall
fwait
imulb
psubw
es
je
and
pushl
mov
lret
cmp
test
arpl
push
xor
jle
jne
sbb
mov
xor
cmpsl
mov
filds
add
push
mov
repz
nop
lods
jno
or
xor
js
pushf
sbb
in
lea
stos
xor
int3
mov
popa
inc
pop
in
je
es
das
mov
dec
pop
xor
mov
cmc
stos
test
inc
orps
decl
stos
pushf
pop
add
decl
mov
jg
push
outsl
mov
pop
mov
clc
in
orb
decb
add
test
outsl
cmpsb
jns
sub
incl
jbe
mov
js
in
dec
mov
push
ljmp
test
cli
mov
xchg
sub
add
insl
clc
inc
decl
loop
adc
dec
fmuls
jg
aaa
loope
test
sahf
fstpt
pusha
cmp
mov
hlt
inc
add
sbb
sub
adc
fisubl
xchg
cli
call
and
or
psubusb
mov
cmp
out
mov
mov
jmp
ljmp
sbb
in
jae
pop
andl
mov
lret
mov
pop
mov
jmp
stc
shrl
jns
cmp
xor
loopne
jg
mov
out
cmpsl
push
sti
cmp
outsl
cwtl
push
aam
das
pop
pop
push
dec
shrl
xlat
jb
sub
mov
out
jmp
shr
xor
das
test
jmp
hlt
cmp
nop
cld
arpl
incl
outsl
ljmp
imul
dec
push
xor
outsb
inc
mov
mov
mov
fnstcw
mov
mov
aas
and
push
lcall
incl
scas
sbb
test
outsb
fcom
stc
sub
aaa
mov
pusha
rorl
sbb
movsb
rclb
mov
aad
bound
pop
clc
or
cmp
subb
insb
clc
xchg
testl
das
ja
leave
xor
add
in
push
sti
movsb
jae
adc
idiv
outsl
xchg
aam
loop
mov
pop
lea
jmp
add
clc
std
pushf
outsl
icebp
adc
scas
dec
adc
pop
lret
aas
push
outsl
mov
mov
outsl
popf
xlat
mov
movsbl
lcall
enter
jbe
xor
mov
out
imul
jg
std
pop
movsl
bndstx
test
arpl
ljmp
es
in
rclb
call
dec
repnz
in
jmp
cld
xchg
cmpsb
pop
jae
sbb
ljmp
sbb
jecxz
jne
cmp
aaa
jb
cmp
icebp
fbld
mov
sbb
std
das
pop
sarb
stos
test
stos
add
aaa
mov
pop
lahf
enter
testb
pop
loopne
jnp
mov
sub
int3
stos
add
in
in
call
or
mov
mov
ficomps
mov
out
mov
push
call
jl
xor
inc
cwtl
mov
std
push
fwait
xchg
sti
scas
adc
mov
lahf
test
sub
inc
rcll
imul
mov
xchg
jae
es
aad
dec
je
leave
sbb
jnp
scas
push
pop
pop
clc
outsb
and
inc
mov
lods
fstpt
lods
in
nop
mov
sub
call
inc
lods
ds
ja
pushf
fstl
adc
test
daa
lods
jnp
popf
push
push
cmp
cli
lea
repz
mov
cmpsl
cmp
fldenv
insl
pop
mov
dec
int
mov
pop
jmp
stos
inc
std
addr16
inc
fistps
mov
xor
mov
push
or
cwtl
jle
es
push
pushf
sbb
aam
or
push
jmp
lcall
out
fwait
pop
in
imulb
mov
jno
mov
test
ljmp
hlt
and
sbb
mov
xchg
fadd
leave
cmp
cli
jle
or
push
xchg
xor
stos
jg
clc
xchg
push
pop
insb
repnz
jge
xchg
add
jecxz
call
pushl
sahf
dec
es
dec
mov
inc
jno
jne
call
mov
mov
dec
hlt
cmp
pop
inc
mov
sahf
dec
orl
ffreep
loope
jl
add
ljmp
push
pushl
js
or
aas
jns
mov
outsl
out
or
pop
pusha
mov
xchg
push
loope
clc
push
jb
in
outsl
aaa
movsl
xchg
iret
call
call
in
sbb
pop
shlb
cmc
test
cmpsb
incl
es
sbb
jp
std
lcall
movb
test
das
std
rorl
sbb
add
out
lcall
std
filds
mov
and
adc
fldenv
aaa
jge
mov
inc
push
orb
add
adc
ljmp
or
dec
inc
mov
inc
shr
push
test
xor
pop
jp
mov
add
mov
mov
lahf
or
jg
mov
into
bound
mov
fldt
mov
call
clc
mov
xor
test
xchg
add
or
rcrl
incl
xchg
icebp
aas
fisttps
cs
sub
mov
add
jg
in
sub
jae
xor
jp
sbb
fs
dec
inc
enter
outsl
movsb
movsl
sbb
out
jp
test
or
sbb
das
mov
scas
push
fcomps
lcall
bound
int
mov
mov
mov
les
outsl
mov
xchg
or
mov
jno
ljmp
or
jle
xor
push
cld
jg
mov
and
and
pusha
mov
ss
std
cmp
xchg
shrl
pop
sub
rclb
xor
loop
cld
pop
mov
jp
popa
and
sarl
mov
hlt
int3
adc
jbe
and
cmpsb
and
icebp
bound
popf
adc
arpl
cltd
fucomp
and
fcmovu
popf
xor
movsl
pushf
jge
and
jno
stos
mov
adc
mov
call
and
dec
mov
push
xchg
jmp
das
out
dec
inc
outsb
jmp
mov
push
outsb
imul
cli
mov
push
pand
adc
jnp
lock
ret
out
gs
data16
roll
mov
dec
lret
mov
xor
repz
xor
dec
mov
or
add
call
mov
add
dec
fidivs
sbb
xchg
cli
mov
test
xor
lds
movl
inc
decl
xchg
mov
stos
push
jp
std
loop
cltd
fildll
dec
rorb
dec
aad
scas
push
outsb
and
shll
xlat
dec
mov
sahf
in
xchg
adc
in
pop
cli
clc
pop
mov
dec
sbb
js
mov
or
adc
ds
push
cmc
pushf
popf
outsl
mov
mov
jnp
and
or
int3
xchg
popf
int
stc
lcall
je
shrb
loope
nop
mov
cmpl
sub
and
inc
mov
fnstsw
decl
out
push
dec
mov
add
fwait
add
dec
popf
popf
jbe
hlt
pop
pop
les
or
dec
or
sub
aam
push
rorb
sbb
call
jno
jbe
push
loope
sub
out
dec
xchg
daa
lods
inc
clc
sti
sub
into
andl
inc
out
push
clc
sub
mov
dec
dec
pushl
shr
mov
sahf
loope
out
into
cmp
out
fcomps
jbe
sti
in
push
mov
scas
sbb
lcall
push
and
sub
shr
or
stos
jp
inc
scas
sti
mov
js
push
mov
xchg
jo
icebp
lcall
adc
stc
xor
mov
and
mov
inc
xchg
pop
cmp
sti
cmpsb
loop
mov
or
xchg
lods
push
movsl
mov
movsl
enter
pusha
jmp
popl
ret
xor
out
push
out
das
and
sbb
xchg
in
fstpl
sbb
jg
out
and
xor
aam
sbb
or
je
push
mov
sub
cmp
add
xor
xchg
mull
shl
dec
test
xor
cli
pop
std
inc
jno
adc
mov
inc
mov
jmp
test
adc
ret
push
push
pushl
lcall
cmp
imul
popa
sub
sub
cmp
test
dec
and
mov
jmp
adc
cmp
es
pop
add
stos
push
push
jns
pop
cltd
xchg
mov
mov
fistl
mov
cwtl
dec
das
lock
shlb
ja
jnp
xor
jg
decl
mov
mov
outsl
xor
jp
adc
mov
xchg
das
mov
call
popa
es
fadds
mov
lcall
xor
addl
sar
loop
lret
adc
imul
cmp
insl
leave
pop
sahf
jge
cli
decl
test
bound
aas
cmp
jne
mov
push
dec
jge
inc
adc
fdivrl
stc
lods
sbb
and
lock
jno
pop
pop
push
jg
xor
clc
and
and
mov
xchg
or
xchg
jg
lea
and
ljmp
in
paddsw
mov
call
cmp
das
lock
fldcw
or
mov
push
pop
xchg
dec
and
nop
loop
jbe,pt
fmul
jg
lcall
popf
push
in
mov
enter
movsl
popf
ret
adc
outsl
jno
adc
xor
std
insl
lahf
inc
sar
call
jl
adc
adc
xchg
add
cmp
dec
xor
incl
fistpll
and
mov
repz
adc
dec
pushl
sbbb
ret
insl
popf
movsl
pop
std
push
sub
sub
cld
lcall
lcall
mov
adc
fwait
scas
outsb
or
or
xchg
clc
ljmp
mov
shrl
inc
stos
jo
out
lods
clc
incl
cltd
icebp
loop
dec
mov
jae
stos
sub
mov
std
jg
pop
div
nop
pushf
xor
ss
shll
sbb
cmpsl
test
leave
mov
call
jne
inc
clc
ret
mov
push
fnstsw
inc
adc
fs
ljmp
jno
inc
shlb
addl
es
movsl
fucomip
test
loop
cwtl
adc
sbb
mov
pop
mov
push
mov
add
pop
daa
fidivrl
fildll
in
cmpsl
jo
mov
testb
repnz
jl
decl
pop
mov
ret
mov
lret
inc
pop
nop
out
sub
jne
and
lcall
decl
lret
out
adc
push
and
adc
xor
scas
lcall
push
imul
int3
inc
dec
scas
fucomi
fistps
cmp
adc
loope
cld
or
pop
mov
call
sbb
lcall
fs
js
dec
aaa
fmuls
adc
sub
mov
incl
inc
nop
add
xor
imul
sub
in
push
mov
inc
dec
cs
add
pushl
sbbl
repnz
inc
daa
or
loopne
lds
int3
pop
loop
movsl
lfs
stos
jecxz
mov
out
push
pop
movsl
rep
nop
gs
inc
imul
cld
pop
ljmp
shll
addb
jle
jns
lcall
shr
push
inc
lret
lds
int3
cli
stc
fs
dec
iret
cmp
mov
jle
fildll
lcall
cmpsl
test
andl
sbbb
test
fildll
loopne
xchg
fincstp
lods
das
fwait
int
data16
or
inc
inc
push
sub
call
int3
jp
mov
fsubrl
add
ljmp
add
bound
mov
mov
lods
adc
dec
push
test
adc
pop
and
cwtl
add
or
pop
je
xlat
bnd
icebp
out
fstps
push
sbb
add
call
lahf
bound
mulb
dec
out
add
adc
shlb
push
jnp
ljmp
xchg
jo
subb
add
cmp
insb
jnp
hlt
sbb
push
bound
dec
mov
cmc
sti
push
int
lods
mov
fisttpl
int3
jle
xor
decl
push
mov
das
mov
arpl
out
sarb
daa
mov
jge
sub
jg
outsb
dec
xchg
jle
negb
mov
test
push
jmp
fdiv
jno
dec
enter
ret
in
iret
dec
push
aam
call
jbe
jns
adc
mov
outsl
call
pop
cld
cld
xchg
lret
push
mov
sbb
cs
xor
lcall
mov
lcall
fistps
cmp
inc
fs
int
out
pop
dec
cmp
dec
cs
call
loopne
sbb
mov
mov
inc
jl
adc
cli
call
bound
fwait
gs
inc
adcl
imul
push
jg
and
out
ret
inc
mov
jnp
mov
cmp
jb
inc
or
sub
mov
adc
es
incb
dec
std
jmp
cmpsb
pop
bound
jb
xor
ljmp
pusha
add
lcall
scas
ja
add
hlt
ljmp
xor
inc
imul
mov
and
cmc
adc
inc
hlt
das
hlt
mov
cmp
shrl
pop
mov
aaa
jp
and
std
or
mov
cmpsl
cmc
fildll
sub
ret
sub
ret
pop
push
ds
popf
imul
push
insb
push
mov
movsl
add
adc
movsl
incb
lret
add
pusha
divl
js
jge
andl
cmpsb
leave
xor
pop
and
mov
xchg
ljmp
cli
ljmp
lods
sbb
lcall
xor
movsl
xchg
sub
ds
xchg
fnsave
jge
pushl
and
push
mov
sbb
or
push
lcall
sbb
pushf
int3
movsl
adc
lcall
sub
incl
pop
cmp
ret
popf
mov
lock
cmp
dec
pop
jb
loope
mov
cld
jb
hlt
mov
mov
dec
fs
and
mov
jo
adcb
rcl
push
and
in
cmpl
xor
daa
sub
jne
push
mov
movsl
cltd
pop
imul
pushl
ds
aaa
mov
cmp
aaa
xchg
inc
lret
sbb
cld
adc
xchg
in
fucom
xor
xchg
std
incl
in
xchg
mov
sahf
sarl
aas
ror
mov
and
leave
lods
incl
xorb
xchg
sbbb
data16
push
inc
scas
sbb
das
push
scas
scas
hlt
lahf
cld
outsb
inc
or
fisttps
loope
or
add
jns
test
cmpsb
cmp
cld
inc
es
sub
jmp
aaa
cli
rorb
dec
push
ret
add
or
insl
fidivrs
repnz
and
xor
xchg
ljmp
xor
pop
or
dec
adc
inc
outsl
mov
pop
cmp
test
dec
mov
sub
or
mov
aaa
lods
jmp
sub
mov
mov
mov
pushf
out
inc
adc
cltd
add
in
pop
push
jmp
push
fdivs
sub
ljmp
xchg
in
in
pop
pushf
mov
xor
lahf
or
cmp
sbb
leave
test
lcall
stc
jnp
mov
push
push
icebp
jbe
cld
add
pusha
push
call
jo
insl
sub
jns
test
icebp
jb
mov
rcrl
add
jmp
add
movsb
jb
aas
out
xchg
cli
add
cmc
call
aaa
mov
sbb
pop
daa
jge
data16
je
gs
adc
adc
mov
pop
mov
jns
pushl
inc
and
negl
push
lods
inc
xchg
or
add
outsb
test
add
dec
and
dec
jno
inc
adc
sub
dec
push
dec
testb
testl
inc
or
test
outsl
imul
add
jbe
lea
pop
adc
ljmp
pop
push
inc
dec
inc
inc
inc
push
dec
inc
inc
dec
add
mov
adc
push
inc
and
jp
outsl
push
pop
inc
pop
inc
dec
dec
inc
push
dec
push
dec
dec
push
inc
push
add
mov
mov
add
movsl
or
and
insl
jg
insb
push
add
xchg
dec
dec
inc
push
pop
inc
push
dec
adc
sub
lods
mov
lahf
rcrl
pop
or
add
fmull
and
in
mov
cmp
and
mov
inc
add
push
pop
imul
mov
ljmp
add
xor
cmp
pop
add
dec
fidivs
jno
jae
data16
dec
lret
lods
mov
lcall
mov
jne
jno
push
jbe
arpl
rcrb
outsl
cmp
inc
dec
inc
dec
inc
add
xlat
and
push
push
jbe
pop
xchg
jno
loopne
xor
lods
test
or
cwtl
xchg
push
mov
or
mov
xor
or
pop
mov
jae
xor
push
xor
je
pop
stos
mov
ficompl
dec
jo
lcall
je
mov
bnd
pop
and
ljmp
or
jb
jne
insb
inc
insb
insb
outsl
arpl
decb
scas
test
jns
negl
jae
rcrb
push
cs
imul
and
adc
xlat
xor
and
push
imul
scas
xor
mov
or
cli
add
cmc
push
jb
gs
popa
mov
imul
dec
xor
push
add
add
lock
js
add
jb
push
jb
je
imul
jg
push
mov
pop
jns
rcrb
xor
jbe
jne
scas
cwtl
mov
jle
test
sbb
add
add
lods
xor
sub
lods
rorb
cwtl
loopne
push
insb
xchg
sub
popf
xor
int
jo
pop
sbb
cmp
push
add
daa
in
popf
fcom
mov
js
add
sbb
cli
pop
jae
inc
or
jo
pop
imul
and
dec
outsb
add
sbb
push
push
imul
jbe
jno
cmp
loop
je
test
sbb
xor
and
or
inc
arpl
mov
or
push
push
xchg
fwait
jne
outsb
xor
inc
jb
dec
pushf
sahf
mov
arpl
js
mov
mov
add
mov
jbe
insb
imul
imul
jae
lods
mov
insb
jns
ja
xchg
iret
and
cmp
rclb
dec
outsb
imul
add
insl
fimull
fisubs
xlat
dec
test
sbb
and
movl
addl
imul
test
dec
pop
push
adc
mov
in
jle
add
jne
out
cmovle
and
add
dec
dec
call
mov
push
sub
popa
js
ja
popa
dec
je
xchg
mov
pop
and
jg
xlat
pop
push
pop
xor
mov
imul
repz
fyl2x
ficompl
mov
into
insl
lods
mov
or
ds
loope
scas
dec
cmp
loop
pushf
jecxz
sbb
or
ret
mov
cltd
or
add
and
loop
std
int
pop
cmp
push
jne
ja
loope
pushl
pop
dec
dec
inc
inc
push
dec
inc
push
push
inc
push
add
mov
jge
mov
push
xchg
mov
add
pop
or
scas
rcrb
cs
inc
xor
cmpsb
das
inc
xor
jae
out
inc
imul
inc
clc
or
jb
xchg
jle
dec
add
and
es
pushf
mov
cs
insl
loope
sbb
jge
mov
push
jmp
fwait
lret
movsl
arpl
cmp
xor
xor
push
out
icebp
inc
movsl
out
emms
cmp
inc
jnp
repz
fsubs
xorb
shlb
sti
test
call
or
dec
ja
mov
int
ja
jle
ja
rorb
ljmp
jg
adc
xchg
inc
and
ja
xchg
xchg
data16
ja
ja
pushl
hlt
inc
xchg
mov
ja
aaa
lcall
dec
jl
or
ja
clc
test
in
inc
xchg
push
xor
jmp
inc
adc
loop
add
vsqrtsd
call
je
movsb
ja
ja
and
insl
add
mov
and
push
mov
ja
cwtl
stc
sbb
dec
dec
or
jl
test
movsl
jecxz
or
pmullw
fwait
add
push
push
mov
inc
ja
dec
or
in
inc
mov
cmp
mov
push
adc
movsl
pop
sub
sub
sbb
sarb
sti
push
mov
ja
ja
sbbl
mov
ja
mov
or
fadds
stos
aad
loopne
add
or
call
sahf
ss
xchg
flds
ja
icebp
out
sahf
addr16
inc
and
mov
lock
jg
ja
or
mov
ja
push
xor
inc
lds
mov
push
sub
cltd
nop
ja
test
jnp
mov
filds
xor
cmp
enter
push
pop
pop
sub
pop
push
and
sti
jecxz
scas
adc
arpl
adc
and
mov
andb
ja
lock
insl
mov
outsl
xchg
jo
pop
jmp
xchg
mov
ja
scas
xor
sti
loope
cld
dec
jl
je
subl
push
shrl
call
bound
mov
and
mov
inc
fcmovnb
pop
jbe
cmpsb
incl
sbb
ja
sbb
mov
jmp
sbb
jb
das
adc
push
pop
insb
lahf
xchg
jb
daa
push
inc
dec
rcrb
xor
mov
das
inc
or
adc
cs
ja
int3
xor
mov
ja
jp
mov
push
incl
es
loope
sub
popfw
xor
out
push
jg
decl
mov
andl
xor
les
sbb
sub
icebp
call
push
cmp
addb
mov
sbb
in
inc
mov
inc
fimull
stc
xor
out
sti
fistl
add
add
ds
xlat
dec
xchg
iret
test
incl
and
add
inc
add
mov
fucomip
lret
inc
xchg
nop
pop
loop
outsl
xchg
ja
xchg
mov
ja
test
int3
lea
movsl
mov
sarl
mov
fcmovnu
clc
add
or
pop
add
iret
ja
and
push
ja
dec
sti
mov
jecxz
fs
ja
movsb
bswap
cmp
inc
inc
lcall
jp
mov
xor
in
ja
ja
sbb
jmp
adcb
mov
loop
dec
adc
sar
push
jb
lock
loope
xor
test
cltd
lahf
adc
ja
in
mov
dec
jge
mov
sbb
jge
stos
pop
call
cld
push
xor
ljmpw
and
and
sub
adc
mov
sti
lods
xchg
lret
aad
jl
stos
cmp
push
test
jle
add
push
sbb
incb
mov
lcall
femms
pop
cmp
dec
mov
lcall
inc
add
mov
gs
and
gs
mov
add
push
imul
mov
or
dec
push
push
and
add
ja
sbb
and
insb
mov
jo
mov
sbb
jle
inc
push
ljmp
outsb
or
je
bound
jns
cli
add
mov
jns
fs
push
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
mov
cmp
jo
ja
ja
shll
mov
jbe
add
sub
arpl
outsl
dec
pop
mov
ja
ja
ja
or
lret
fcomp
divl
testl
jno
xchg
jae
das
arpl
call
add
add
mov
ja
ja
iret
pop
cwtl
sub
ja
imul
cmp
ss
adc
ljmp
je
push
andb
andb
jo
ja
mov
or
je
mov
mov
ja
push
ja
jmp
add
xchg
lods
cmp
push
xchg
add
ja
aaa
icebp
dec
adc
rcrl
dec
inc
repnz
mov
jg
cmp
in
lcall
dec
lock
inc
scas
ja
jnp
into
cmpb
ja
and
std
mov
mov
and
lock
dec
pop
sbb
lahf
sbb
fstp
adc
insl
popa
popf
int
sub
out
ds
push
stc
adc
pop
add
sub
xor
cmpb
sub
shrl
ret
sahf
rorl
pop
enter
ja
inc
push
xor
rcll
xorl
or
mov
jne
sub
sub
add
pop
sbb
sti
push
ja
cmp
ja
xlat
sub
jbe
ja
push
jle
mov
sti
stc
pop
popa
mov
xlat
ja
ja
mov
add
mov
lea
pmulhw
inc
mov
mov
clc
mov
add
pop
jge
outsb
jmp
ja
inc
or
out
pushf
ja
jmp
adc
mov
rcll
push
ja
push
enter
mov
stc
jno
dec
or
sbb
ja
rep
mov
loope
adc
dec
ja
ljmp
gs
xchg
popa
ja
or
insl
imul
cmpb
enter
sub
mov
in
jp
test
adc
add
lock
jge
sbb
clc
xchg
shlb
mov
xchg
aas
dec
xchg
add
push
xchg
jle
xchg
popa
addr16
sbb
mov
push
xor
mov
xor
loope
test
das
ja
int3
sub
test
pop
addb
hlt
insb
insb
jecxz
adc
clc
ss
mov
xchg
in
and
add
push
outsl
mov
push
popa
mov
mov
dec
jp
pop
iret
adc
aas
cmp
jne
xor
or
idiv
movsl
ja
and
pushf
adc
jecxz
dec
mov
imul
push
push
nop
ficoms
test
push
xor
xchg
dec
out
imul
and
shll
ret
and
gs
sbb
cmp
pop
pop
xchg
notl
js
fisttpll
cmp
push
adc
out
data16
adc
lcall
mov
mov
loop
stc
cmpsb
mov
ss
push
dec
or
jnp
stc
cmp
jl
popf
out
add
fwait
rorb
dec
or
pop
pop
mov
bnd
pop
mov
cli
cmp
xchg
mov
insb
clc
mov
or
xor
in
and
adc
in
leave
add
aam
add
inc
sub
lds
xlat
out
sbb
fisttps
out
jnp
pop
mov
cs
mov
adc
ja
dec
xchg
imul
fcom
sti
or
xor
addb
pop
aas
xlat
mov
mov
xlat
test
ja
movsb
or
icebp
ja
push
xchg
rclb
push
xchg
mov
pushf
leavew
loopne
jp
lret
sub
cmp
dec
out
cmp
xor
dec
mov
popf
pop
pop
add
test
mov
dec
pop
xor
filds
insb
xchg
or
inc
sbb
std
flds
stos
and
dec
testb
jl
pop
fstpl
nop
sub
and
pop
or
or
scas
jns
push
sbb
ja
out
insl
xchg
addr16
mov
jle
daa
fsubrl
mov
pop
xor
pop
sbb
sbb
push
lret
dec
push
dec
sub
push
sub
mov
dec
sbb
popf
or
shl
pop
dec
cmp
imul
or
sub
aad
cltd
lea
nop
imul
ss
sahf
xchg
push
mov
mov
ja
imul
stos
ret
adc
data16
and
add
mov
sti
fisubl
hlt
insl
data16
xor
test
sti
xlat
jo
lods
lahf
aaa
neg
mov
jle
arpl
mov
cmc
ja
fidivrs
or
dec
push
icebp
sarl
pop
add
popa
icebp
dec
mov
stos
jo
aaa
pop
xchg
adc
popl
movsb
gs
adc
jno
jno
out
xchg
out
add
repnz
icebp
ret
in
and
js
sahf
imul
outsb
cwtl
das
cltd
bound
mov
addr16
mov
shll
pusha
cld
sbb
idivl
xor
push
dec
jecxz
adc
inc
mov
push
scas
in
cltd
mov
push
mov
in
out
xor
leave
nop
shlb
xchg
cmpsl
enter
insb
or
lret
xchg
lret
nop
cli
add
dec
add
insl
add
mov
dec
push
pusha
ja
jbe
lock
bound
cmp
cmp
out
jne
fcompl
sbb
inc
pop
shll
insb
arpl
and
adc
popa
xchg
out
or
lds
jae
pop
pop
mov
scas
xchg
mov
fldl
test
cmpb
icebp
or
xor
ja
ja
out
in
adc
shl
or
pop
out
inc
mov
push
adc
mov
clc
sbb
inc
movsb
push
jl
movsb
stos
cli
repnz
fadd
imul
test
jmp
test
rorl
cmpsl
cmp
in
push
icebp
fs
adc
jle
jge
xor
dec
jecxz
shll
cmpb
mov
xor
jmp
in
mov
loope
fs
testl
mov
push
stc
shlb
fdivs
arpl
sbb
jecxz
pop
popl
pushf
idivl
loope
scas
lret
xchg
test
cwtl
jo
fcmovu
push
inc
roll
test
sbb
roll
aaa
cmp
test
into
shufps
outsl
aam
jae
xor
ss
insl
out
ret
mov
mov
xchg
sub
insl
jo
pop
arpl
jl,pn
jle
inc
and
pop
jae
fldenv
pop
xor
xor
cmp
and
les
hlt
cmp
xchg
ds
das
jnp
mov
add
pusha
or
ficomps
or
mov
xchg
sbb
add
test
sbb
and
xchg
push
andl
test
lcall
inc
jmp
out
jbe
jl
inc
sarb
aaa
and
out
pushf
jge
jbe
aad
cli
test
xchg
mov
dec
sbb
xlat
enter
or
or
jmp
hlt
mov
cmc
es
mov
xchg
pop
add
xchg
jmp
loopne
xor
xchg
fisubs
cmp
mov
mov
xchg
cs
push
scas
rcl
lods
xchg
pop
or
xor
pop
pop
mov
or
ja
adcl
sub
mov
jmp
mov
out
scas
ds
arpl
shlb
xlat
mov
cs
popf
sub
inc
sbb
inc
aam
inc
sbb
mov
jmp
scas
jns
xor
fmull
ds
jo
pop
jo
loopne
jg
push
mov
imul
shrb
lea
mov
sbb
fists
inc
dec
pop
sahf
dec
popf
adc
call
inc
mov
push
add
lods
pusha
dec
negb
jmp
int
pop
and
cmpl
rcll
popa
adc
fs
xchg
insl
mov
jecxz
pop
dec
and
lods
ffree
stc
pop
loopne
popa
jge
jle
cld
js
xchg
lret
repnz
sbb
jae
daa
repnz
xchg
sub
xor
mov
inc
jmp
sbb
xlat
inc
mov
gs
or
fdivs
cli
push
das
cmp
xchg
aas
and
push
inc
adc
je
icebp
push
insb
imul
out
xchg
dec
sbb
into
xor
std
push
jl
pop
or
or
addl
adc
and
adc
pushf
mov
and
sub
popf
pop
mov
pop
rcrl
jl
loop
sub
xchg
and
pop
jp
les
insb
cmp
and
or
mov
pop
inc
dec
push
push
out
mov
mov
cmp
adc
adcb
out
dec
mov
sub
sub
dec
and
cmp
rcr
inc
dec
pushf
push
loope
add
lret
nop
jle
and
xor
jg
and
mov
xchg
push
mov
arpl
loopne
loopne
mov
loop
ss
push
push
mov
sub
xor
xor
lret
sub
or
sahf
pop
xorb
shl
rcl
mov
hlt
or
mov
fidivs
test
incb
push
cmp
xchg
insb
pop
pop
mov
ret
cmp
cs
add
xchg
ds
cmpsl
sahf
mov
sub
xor
out
dec
or
mov
ret
jl
push
cs
fdivrs
sbb
in
scas
mov
cmp
test
push
mov
insb
call
mov
push
jo
ss
pop
mov
add
push
sbb
popa
adc
jge
adc
add
out
iret
jno
jmp
flds
and
sub
jecxz
shll
jle
fadd
inc
int
xchg
in
dec
pop
adc
jbe
sahf
stc
push
fsub
shll
gs
push
leave
dec
cmp
push
or
adc
paddq
jp
mov
daa
jp
xor
inc
fdivrs
xor
dec
iret
loop
loop
outsb
fdivr
mov
lahf
dec
rorb
leave
push
add
int
jmp
icebp
or
scas
dec
ret
xchg
ss
cli
cli
movsb
pop
add
divl
loope
cmp
adc
mov
sbb
icebp
jbe
lcall
fxam
stos
adc
xchg
fbstp
xchg
rcl
adc
pop
lret
loop
outsl
sub
add
add
pushf
adc
out
rcl
inc
loopne
movsl
jbe
pop
stc
lret
popf
imul
ja
xor
das
xorb
cwtl
lock
insb
popa
cmp
jg
in
cld
add
cs
bound
outsb
loope
sub
push
cmp
repnz
xor
inc
sub
popf
or
or
jecxz
aas
outsb
sub
test
loope
cmp
and
xchg
mov
jnp
lock
lret
ret
das
cld
outsb
jl
adc
rol
daa
int
sub
lods
popa
xchg
xor
cmp
icebp
je
nop
pop
xchg
xlat
test
inc
clc
sbb
mov
daa
push
jg
ss
pop
stc
sbb
sbb
xorb
jmp
lds
pop
shr
test
xor
clc
mov
dec
dec
cmp
inc
pushf
jl
call
pop
adc
cmp
jecxz
xor
dec
sbb
mov
arpl
mov
cltd
pushf
aad
xchg
pop
mov
cltd
mov
pop
jns
adc
jns
push
cld
jge
shll
cmc
mov
div
or
adc
out
stos
lahf
jg
clc
dec
sub
xor
dec
jmp
cmp
pop
cwtl
test
iret
jp
aad
icebp
adc
movsb
pop
adc
xor
les
xchg
in
adc
repz
fs
cwtl
rorl
mov
js
push
rolb
in
jbe
and
das
aaa
scas
mov
clc
add
pop
loope
fwait
mov
ja
scas
test
cmpsl
or
and
and
out
test
mov
and
daa
std
pusha
pop
xchg
repnz
dec
xchg
outsl
mov
lock
out
cmpsb
fimuls
add
mov
dec
cmpsl
lcall
cmp
sub
jne
mov
insl
neg
push
repnz
mov
ljmp
push
repz
hlt
sbb
dec
dec
xor
dec
and
call
cmp
pushf
lods
pop
sbb
push
loop
dec
adc
push
or
xchg
push
and
xchg
cwtl
iret
sbb
cmp
xchg
pop
and
and
enter
sbb
in
jmp
dec
jae
fs
cmp
inc
xor
cmc
insl
test
out
cmc
ret
test
push
out
scas
sbb
stc
jno
xlat
aam
pop
sub
shl
sub
sbb
cmp
in
mull
sti
in
in
cmpsl
out
cmp
mov
cmp
lock
and
sub
stos
mov
push
and
fstpl
xchg
clc
sbbb
loopne
test
mov
add
sub
pop
ret
popa
es
pop
dec
out
pop
and
or
push
sarb
or
fwait
scas
add
pusha
shll
adc
push
shll
sub
cmp
mov
lret
adc
mov
cmp
lcall
call
or
pop
testb
mov
xchg
gs
stos
cwtl
loope
jp
cli
and
or
dec
mov
cmp
imul
mov
mov
xor
jp
push
or
movsb
mov
pop
or
sbb
lea
shlb
rcl
sub
addl
cmp
icebp
mov
mov
or
mov
pop
or
outsl
imul
das
dec
je
jecxz
setp
sub
mov
or
pusha
sbb
clc
ficoms
sarl
mov
dec
xorl
mov
dec
push
mov
jmp
or
out
push
sub
rclb
mov
jecxz
mov
or
and
cmp
addr16
pusha
mov
jo
jae
sub
inc
popa
dec
mov
xor
xchg
or
jno
cmpl
inc
mov
rcrl
push
pushf
adc
sbb
mov
mov
arpl
cld
das
aas
push
or
mov
mov
daa
mov
xor
add
sub
mov
movsl
das
ret
test
popf
sbbb
je
pop
jnp
scas
jb
jge
cltd
pop
pusha
fwait
hlt
add
dec
xchg
call
cmovle
dec
lret
lods
or
pop
pop
inc
add
adc
inc
jbe
push
insl
dec
pop
popa
arpl
out
mov
or
out
dec
xchg
and
xor
cli
pop
movsl
mov
insb
add
push
inc
jb
or
jecxz
insl
data16
pop
xchg
in
insb
push
sub
loopne
adc
dec
call
aas
sbb
icebp
dec
les
aad
inc
roll
aas
rorl
leave
aas
and
ss
ficoms
lods
ljmp
js
pop
mov
dec
push
iret
pop
xorb
mov
fistpll
xchg
aam
mov
sbb
iret
adc
inc
rorl
popf
xchg
hlt
jecxz
into
loop
mov
mov
push
inc
adc
pop
sbb
jp
icebp
rclb
add
xor
daa
or
bound
push
and
add
jne
fadds
xchg
test
cmp
in
mov
imul
mov
push
inc
in
fistpl
mov
inc
mov
jmp
outsl
lea
push
jmp
push
int
mov
adcb
cmp
adc
test
add
dec
jmp
inc
outsb
test
roll
inc
jne
outsl
sbb
cmp
inc
daa
es
fstpt
dec
cmpsl
push
leave
pop
xor
jp
jp
divl
sbb
jmp
mov
or
test
add
sbb
pusha
sbb
icebp
imul
dec
mov
cmp
repnz
pop
ds
add
dec
jecxz
leave
into
repz
out
ret
rclb
mov
sbb
mov
rorl
mov
sub
push
or
push
and
lss
ljmp
mov
in
mov
lods
push
cwtl
push
div
inc
cmpsb
pop
aas
push
inc
insl
popa
jge
mov
movsl
push
adc
adc
iret
sbb
dec
sbb
cmp
dec
mov
mov
shlb
jecxz
dec
lods
add
xchg
pop
sub
dec
mov
pop
test
dec
mov
ljmp
jecxz
stos
xchg
fcmovne
push
dec
dec
es
mul
js
ret
sub
repz
jo
aaa
inc
int3
insl
xchg
or
lret
push
ja
mov
int
divl
xor
ds
sbb
xchg
pop
sahf
insb
arpl
dec
outsl
add
js
mov
sub
aas
jle
jne
lds
push
scas
pop
push
push
inc
dec
lahf
pop
cmp
leave
lock
add
xor
mov
mov
ret
or
push
mov
xor
cmpsb
movsb
cmp
or
addr16
cmp
test
clc
mov
push
ss
mov
daa
pop
jo
cmpsb
icebp
push
rcrl
adc
dec
aas
jmp
inc
push
and
leave
xchg
sbb
sbb
xor
nop
dec
sub
fnsave
xor
sbb
jnp
fistl
pusha
xlat
pusha
sahf
pop
mov
lahf
in
mov
push
xor
pop
or
xor
hlt
cltd
data16
mov
mov
or
mov
pushf
push
jno
adc
cmc
enter
insl
sub
jle
xchg
xchg
sbb
lcall
xchg
lret
cmp
push
pop
lds
and
mov
xor
sub
pop
xor
icebp
adc
sbb
cmp
dec
mov
xor
in
dec
push
int3
xorl
dec
cmc
cmp
cmp
mov
cli
mov
loop
pop
shrl
mov
fst
pop
leave
mov
je
lock
test
xchg
sbb
les
xor
push
mov
out
rcll
inc
mov
mov
lahf
sbb
or
int
pop
and
ret
inc
xchg
scas
sbb
pop
daa
sbb
mov
enter
cmp
orb
push
mov
jmp
ss
fs
mov
pop
fildl
push
lods
daa
dec
adc
mov
insl
imul
push
jbe
roll
jecxz
xor
clc
ret
loopne
xor
jge
mov
ljmp
mov
pop
mov
or
xchg
insb
shll
loop
sub
xchg
fs
xlat
sub
adc
test
mov
push
mov
xchg
leave
call
movsl
sbb
loop
fwait
das
push
and
dec
repz
andb
mov
add
adc
xchg
jbe
cwtl
xlat
xchg
clc
shll
bound
mov
fcompl
and
mov
roll
aad
hlt
aad
lret
cwtl
icebp
xchg
xor
addr16
pop
subl
jle
cmpb
aaa
addr16
icebp
adc
in
push
adcl
sbb
mov
cld
enter
jl
aaa
mov
mov
adc
push
xor
popf
shll
lahf
rcll
sti
sbb
dec
call
out
mulb
mov
rclb
xchg
and
mov
mov
xchg
mov
sbb
jns
pop
cmp
jecxz
xor
or
orl
push
out
sbb
lock
cmp
cmp
add
out
jno
lret
ljmp
insl
dec
push
ds
or
fldcw
lds
test
cmp
inc
mov
pop
negl
sbb
in
add
in
and
pop
cmpsl
loop
icebp
pop
in
test
movsb
ss
add
je
xchg
and
jmp
shlb
dec
mov
inc
or
mov
cmp
jecxz
aaa
mov
xor
xchg
pop
xchg
aam
jg
ret
loope
in
scas
lcall
icebp
inc
sbb
mov
fsubl
sub
lock
sub
or
repz
and
xchg
loopne
daa
fdivs
xor
mov
jo
mov
and
lahf
sub
das
ss
aaa
and
incl
xchg
jbe
add
inc
bound
dec
sbb
add
or
sbb
add
mov
mov
sbb
shlb
das
cmp
popf
icebp
mov
add
sbb
ja
test
push
lock
jecxz
cmc
push
mov
push
jno
daa
mov
sbb
xor
pop
out
cs
jle
xor
and
jne
outsl
pushf
je
int
or
pushf
adc
rclb
test
cmp
test
and
push
cwtl
cmp
lcall
cmc
xlat
push
or
loopne
icebp
push
sbb
ds
or
shr
sbb
cwtl
adc
movsb
rclb
xchg
ret
pop
imul
int
mov
cmp
jge
ljmp
insb
popf
pop
mov
test
addb
push
sub
pop
mov
xor
dec
cmp
push
mov
cwtl
lret
hlt
lods
mov
shrl
cltd
jbe
int
mov
mov
dec
iret
xor
cli
mov
jmp
sbb
xchg
push
pop
mov
mov
pop
sbb
cmc
subb
fisttpl
test
je
fs
and
or
pop
leave
dec
sbb
test
lock
sbb
mov
and
or
call
add
xchg
or
popl
pop
popf
rcll
pop
dec
pop
xchg
data16
lods
xor
inc
fbld
pop
mov
inc
mov
adc
pop
jae
sbb
adcl
daa
into
sbb
orb
movsl
jae
mov
sub
imul
mov
lea
inc
mov
pushf
rcrl
mov
pop
ljmp
insl
sbb
dec
and
pop
cli
mov
int3
cmp
inc
dec
dec
inc
mov
cld
in
into
jg
loopne
and
add
int
mov
jo
pop
stos
mov
fidivrl
aad
sub
and
std
sbb
icebp
mov
ds
push
out
mov
mov
test
xor
xor
cmp
iret
pop
and
mov
cmp
sbb
sahf
mov
movsb
mov
ror
testl
or
jmp
dec
adc
add
cli
cmp
xchg
lock
cld
push
push
sahf
btc
in
xchg
xchg
loope
pop
outsl
dec
jne
popa
cld
cli
adcl
cmp
sub
fcmove
jp
sbb
scas
push
xchg
movsl
xchg
shlb
test
jo
jbe
adc
imul
imul
adc
mov
ret
jle
add
insb
adc
shlb
andb
jno
jbe
mov
daa
cmp
or
and
mov
mov
add
sbb
xor
aaa
and
mov
add
or
es
jle
and
shr
leave
lods
cmpsl
loope
mov
xor
dec
cmpsl
jne
mov
and
xchg
cmp
dec
imul
rclb
jle
mov
lea
fbstp
pushf
outsl
and
rcrb
or
dec
clc
inc
repz
pop
lcall
sbb
cli
or
hlt
in
lcall
sub
enter
movsb
push
mull
loopne
test
or
sar
adc
iret
add
dec
and
loope
fiaddl
loopne
cmp
jno
inc
xchg
inc
mov
loope
pop
pushf
les
push
mov
push
and
mov
addr16
or
pop
inc
mov
aas
arpl
dec
pop
fs
pop
push
mov
cld
mov
xor
adc
jae
stos
jbe
xchg
xor
sbb
mov
int
out
pushf
test
mov
and
sub
aam
cmp
add
jbe
push
jno
mov
mov
or
fldt
addb
rclb
test
test
test
and
orl
ss
push
inc
bound
inc
call
xor
ret
mov
xor
in
in
jbe
mov
subb
ret
xor
mov
hlt
std
jo
inc
xor
xchg
ljmp
dec
push
or
or
pop
mov
hlt
mov
pusha
or
cmp
mov
ret
aaa
xchg
pop
sub
divl
stos
jnp,pn
jmp
outsb
inc
out
or
adc
jecxz
lds
jmp
out
mov
xchg
mov
cmp
mov
add
test
pop
std
fldl
mov
int
push
mov
jmp
cmpsl
mov
inc
adc
test
jae
test
daa
ljmp
cmc
outsl
fists
cmpsl
pop
and
jbe
rcll
jns
icebp
sub
lds
inc
es
fldenv
xor
outsb
push
insl
mov
and
mov
out
sbb
outsl
jno
xorb
rolb
std
shll
andb
push
push
ret
shrl
jl
mov
push
icebp
xor
pop
repnz
mov
jg
mov
mov
xchg
std
push
jge
daa
mov
xchg
dec
inc
cs
xor
imul
xchg
sub
xchg
cmp
movsb
inc
mov
orb
aas
lock
cltd
pop
sub
mov
ss
out
loop
out
imul
mov
mov
inc
sbb
subb
mov
test
addb
mov
cmp
jae
mov
xor
adc
xchg
outsl
cmc
mov
and
add
mov
mov
xchg
jb
inc
xchg
xchg
stos
outsl
lcall
dec
pop
xlat
xor
mov
enter
lret
out
cmp
or
mul
jmp
cli
fdivrs
jmp
outsl
int
insb
mov
xor
mov
lcall
jl
or
push
leave
xlat
and
clc
xchg
cmpsb
sub
orb
mov
sub
mov
pop
ljmp
flds
dec
shll
jno
rolb
jns
je
inc
ret
shr
je
jmp
or
mov
repnz
inc
sti
movsb
add
mov
sbb
xor
loopne
orb
adc
sbb
cli
aaa
xchg
gs
out
xor
inc
pop
insl
cmp
jae
push
xor
push
mov
mov
dec
mov
mov
inc
mov
mov
pop
mov
ret
outsb
jb
test
dec
out
insl
lds
stos
push
iret
pop
mov
movsb
in
and
addb
pop
mov
fldt
das
dec
adc
or
push
sbb
je
sbb
dec
adc
popf
or
xchg
mov
mov
xchg
mov
roll
sti
call
loop
into
and
mov
sbb
lea
lea
and
xchg
into
ljmp
sbb
inc
mov
add
mov
aam
cltd
scas
fiaddl
and
pcmpeqw
push
data16
sub
or
xchg
fadds
xchg
pop
push
mov
test
sbb
popf
cmp
pop
push
loopne
in
sbb
mov
add
popa
addr16
adc
pushf
aaa
sar
cmc
out
std
xor
in
xor
mov
cld
inc
cmpsl
push
insb
xchg
loopne
cld
jbe
and
sbb
testb
jne
jbe
outsl
js
pusha
loop
push
nop
and
lret
dec
sbb
or
cmp
in
push
adc
popf
push
sarl
sbb
inc
xor
das
mov
mov
daa
xlat
imul
call
lret
outsl
test
aad
ret
clc
int
xor
pop
xchg
insb
inc
add
adc
shrb
bound
and
fs
dec
mov
xor
push
enter
or
inc
std
adcl
or
or
cmp
xchg
push
and
les
jbe
mov
rorb
imul
rcll
sbb
jle
lds
stc
loopne
and
jbe
push
loopne
testb
and
hlt
push
std
fcomps
ss
cmp
rcrb
mul
shlb
ds
inc
mov
cli
lcall
jae
ja
pop
pushf
aad
test
rcll
data16
jp
add
cmc
inc
or
adc
aaa
cwtl
mov
arpl
orb
cld
sbb
pop
mov
loopne
imul
mov
pop
xor
mov
nop
xchg
addr16
dec
pop
xchg
fsts
movsl
mov
rcl
leave
data16
sbb
jb
inc
dec
sub
adc
or
cs
or
test
mov
add
adc
adc
in
mov
cmp
sbb
cli
sar
in
jmp
sbb
push
add
jl
pop
adc
push
js
cmp
pop
clc
sub
mov
mov
xchg
adcl
je
pop
adc
jecxz
push
cwtl
xchg
push
jle
cmp
fs
mov
das
jg
clc
mov
cs
xor
pop
test
std
arpl
popa
xlat
push
sbb
ret
insl
jae
pusha
test
loopne
add
aam
int
ret
or
in
pop
mov
mov
or
notb
inc
stos
test
pusha
push
mov
inc
xchg
imull
and
insb
cld
test
pop
adc
ss
push
stos
iret
lods
or
test
int
and
or
ja
fstl
out
js
mov
or
scas
mov
mov
and
fimull
push
jecxz
jo
push
rol
jne
push
cmp
xor
jge
push
lret
xor
int
loopne
test
into
mov
xlat
lock
xchg
loope
add
clc
sbb
jl
inc
jbe
ss
fisttpl
sub
sbb
cmp
xor
scas
stc
in
dec
addr16
inc
or
inc
iret
ds
and
fnstenv
aad
out
outsb
stos
pop
mov
dec
icebp
inc
mov
jle
icebp
sub
negb
in
loop
rcrl
mov
mov
call
sarb
jne
cmp
or
fmuls
jle
hlt
sbb
out
sub
and
mov
xor
and
adc
inc
je
fdivr
mov
pop
aas
sarb
cmp
adc
mov
inc
sbb
rcrl
and
mov
jle
jge
dec
xor
fcoms
shll
ret
in
add
jbe
xchg
sahf
dec
pop
hlt
jecxz
mov
dec
cmp
push
insl
mov
inc
test
push
xchg
imul
push
cmp
push
mov
adc
jbe
or
lahf
ror
mov
push
aaa
add
xor
pop
popf
sbb
xlat
pop
mov
ja
push
or
jl
andl
push
aad
adc
div
icebp
dec
scas
adc
mov
cmc
fisttpll
mov
cmpl
dec
mov
dec
lcall
dec
rcl
insb
cmp
xchg
inc
les
or
out
filds
aad
pop
aas
adc
das
add
inc
in
and
add
or
xchg
pop
lods
jp
jle
xchg
movsl
imul
add
mov
sbb
pop
adc
cltd
clc
cmpsl
mov
repz
mov
rcll
shrb
insb
xchg
and
stc
add
inc
call
cld
fidivl
shrb
sti
sbbb
ret
cmp
and
push
push
pushf
les
mov
and
push
fstps
pusha
idivb
cli
pusha
add
negl
int3
ror
mov
outsb
and
mov
fcoms
cmp
jl
push
sbb
fimuls
fwait
dec
xor
adcl
pop
xor
and
or
sbb
shll
mov
dec
scas
popa
data16
inc
jge
xor
xor
test
arpl
sbb
xor
pusha
push
das
sub
mov
stos
orl
jne
mov
sbb
pop
call
loop
iret
and
jae
lret
mov
or
xchg
ja
cmp
or
das
fists
push
and
fadd
mov
repnz
cmc
mov
nop
out
mov
imul
inc
add
cmp
mov
mov
cmp
ret
outsb
xchg
loope
aad
in
lret
decl
fiaddl
pop
out
sub
adc
testb
shll
inc
add
push
movsl
mov
cmpl
inc
or
outsb
call
pop
or
push
mov
inc
pop
js
bound
in
fldt
dec
sbb
fidivl
mov
pop
fdiv
mov
fdiv
adc
jae
fcoms
std
ficompl
shll
daa
jns
repz
inc
jg
nop
ret
or
sub
cmp
aam
cld
lods
sub
aam
cs
jns
pop
orl
aas
push
mov
leave
pop
or
or
mov
nop
insl
loope
pop
inc
pop
das
push
lcall
adc
fadd
sub
pop
sbb
cmpsb
sub
mov
mov
test
mov
loop
pop
sbb
pusha
and
sbb
aad
fs
ja
xchg
es
js
jl
cmp
mov
les
push
push
pop
daa
ja
ss
pop
bound
mov
inc
outsb
icebp
lds
test
sbb
clc
notb
popf
mov
jg
inc
push
xchg
mov
xor
push
movsb
lret
nop
cmpsl
pop
xchg
shlb
or
add
mov
xlat
shr
insb
cmp
testl
les
loopne
shlb
adc
arpl
xchg
jle
ljmp
cmp
inc
xor
cs
aas
cmp
or
clc
je
jl
pop
add
sbb
aas
out
mov
pop
xchg
lea
movsb
loope
mov
addl
int
out
inc
and
jbe
pop
jnp
pop
stos
add
sbb
sub
mov
gs
sbb
mov
div
and
out
ret
fsubl
insb
jae
btr
clc
mov
paddsw
adc
push
dec
add
add
cs
xchg
inc
xor
dec
and
or
lock
lret
push
cld
dec
adc
push
lock
jmp
sbb
adc
in
pop
push
add
mov
and
adc
andl
call
mov
inc
xchg
movsb
xchg
outsb
push
or
je
or
pop
or
in
or
dec
sub
cmp
sub
loop
dec
inc
sbb
mov
lock
cs
pop
imul
cmp
sbb
xchg
pop
jge
sti
mov
mov
pop
add
test
mov
dec
fcmovne
cltd
xor
jo
stc
pushf
add
ds
notb
dec
mov
add
push
addr16
cmp
dec
dec
outsl
mov
add
imul
or
sub
jecxz
in
inc
jo
repnz
aas
jmp
or
push
stos
xchg
cmpsb
xchg
aas
jo
jp
push
imul
cli
fwait
outsl
outsl
ss
jae
jne
ljmp
add
inc
sbb
test
test
gs
jns
call
jmp
mov
roll
out
mull
jg
dec
gs
ret
push
inc
mov
test
ret
mov
adc
jo
push
xor
lock
adc
and
stc
or
mov
adc
pop
enter
cwtl
sbb
push
out
aaa
xchg
inc
sub
xchg
jp
sbb
or
aam
fmuls
mov
mov
rcll
popa
test
jg
pop
ss
pop
jge
push
cld
cmp
xchg
mov
inc
xor
mov
push
sub
push
cmp
scas
int
call
pusha
cmpsl
int
and
cmp
add
add
iret
lods
shll
orb
int
mov
cmp
lret
lret
mov
push
mov
dec
xor
fistpl
jnp
mov
in
cld
cltd
xor
test
cmpsl
pop
ret
mov
jb
jae
cwtl
hlt
add
sub
fsubrs
mov
or
and
test
cmp
aaa
clc
addr16
push
push
fildl
es
jmp
incl
pop
je
pop
push
out
mov
aad
push
push
mov
xor
jb
xchg
repnz
cmpsb
out
aam
adc
and
inc
mov
jg
mov
fwait
cltd
pop
cli
cwtl
jp
push
jne,pn
rcll
ds
shl
mov
pop
add
int
xor
fstpl
jnp
mov
cmc
ljmp
loopw
test
or
loope
cmpsb
popa
icebp
fistpl
inc
pop
mov
and
jg
in
mov
mov
dec
mov
ss
pusha
bound
push
inc
inc
push
les
in
pop
and
pop
inc
sti
addb
push
mov
arpl
daa
dec
out
shlb
sahf
xchg
add
sti
fistl
je
or
mov
inc
adc
mov
dec
cmp
rol
sahf
or
jb
xor
in
dec
dec
pop
sub
cmp
add
dec
jle
pop
sbb
cwtl
fists
imul
adc
daa
lock
sub
les
dec
lds
mov
jo
mov
xchg
out
aaa
arpl
jns
lret
clc
cs
cmpsl
xchg
xlat
setno
or
push
lds
std
bound
fldl
add
sub
test
clc
in
dec
sbb
add
out
es
adc
mov
jns
inc
push
out
push
test
push
cld
pop
push
inc
rcrl
xchg
mov
pop
negl
or
xor
lds
loope
mov
inc
arpl
es
pcmpeqw
xor
xchg
push
in
popf
lock
sarl
sbb
push
jg
lcall
test
pop
and
jge
add
mov
mov
pusha
push
inc
cmp
adc
mov
test
sbb
lods
xor
jle
fsubrs
mov
inc
popf
jmp
sbb
dec
inc
sarl
jo
mov
stc
add
pop
cmp
mov
add
data16
adc
fldl
jp
imull
bound
pushf
test
cmp
dec
lahf
xchg
and
mov
lds
test
jbe
push
mov
je
int
int
sbb
lea
cwtl
mov
iret
lock
lds
sub
icebp
pop
add
cwtl
stos
mov
push
pop
inc
jp
and
add
pop
stos
cmc
xchg
shr
std
inc
movsl
fcoms
xor
xchg
fs
inc
dec
test
cmc
and
lcall
fimuls
cltd
fiadds
test
call
shll
mov
call
daa
es
sarl
push
xlat
mov
test
sbb
das
bound
scas
inc
xchg
and
cwtl
mov
dec
pop
scas
sbb
jl
out
inc
les
pop
pushf
mov
enter
adc
dec
cmp
cmp
repnz
sbb
sbb
or
dec
std
jne
shlb
sub
sbb
rclb
mov
test
push
ss
repnz
out
mov
cld
mov
adc
and
jg
push
sub
dec
and
das
mov
cmpsl
mov
icebp
pop
xlat
and
ljmp
mov
cwtl
stos
and
lods
gs
push
mov
jge
add
add
popa
int3
dec
outsl
nop
sub
mov
mov
sub
aaa
push
or
xchg
pop
rolb
xchg
push
lahf
mov
sti
sbb
ret
xor
mov
cwtl
inc
and
add
clc
lods
mov
jecxz
push
rcl
xlat
or
mov
jb
xchg
hlt
or
in
out
test
and
arpl
fisttpll
roll
rolb
fxch
in
sbbl
hlt
lods
ret
dec
or
dec
adc
sub
gs
xchg
add
cli
aam
sarl
aaa
pop
arpl
imul
enter
add
out
arpl
sub
shll
cmpsb
ret
rcll
out
loopne
or
pusha
fcompl
test
stos
adc
int3
insl
pop
and
jle
bound
or
mov
xchg
aas
cmc
ljmp
adc
and
scas
pop
orl
fucomi
popa
mov
gs
inc
push
sbb
xchg
lods
js
push
decb
shll
cmp
outsb
inc
jp
mov
test
dec
adc
jbe
push
jo
pop
sub
sub
mov
add
mov
movsb
loop
sub
je
push
imul
xorb
and
dec
pop
sbb
inc
cli
add
out
pop
cmp
inc
gs
aas
sbb
mov
daa
xor
fildll
popa
cwtl
out
or
jns
and
je
pop
sbb
push
imul
in
sbb
test
hlt
inc
sbb
and
mov
push
dec
mov
out
cmp
pop
imul
jmp
cli
cld
iret
inc
jnp
adc
sbb
cmp
pusha
or
jmp
mov
inc
dec
sarl
insb
iret
subl
mov
insl
shrb
clc
push
dec
inc
daa
les
adc
push
mov
aas
jl
add
ret
fwait
outsl
sbb
push
add
test
jp
rorl
pop
xor
sbb
and
mov
push
push
push
test
mov
lock
jp
push
test
ret
sub
imul
add
xchg
mov
je
hlt
mov
mov
push
aaa
je
in
push
inc
fidivrs
mov
pop
insl
mov
cmove
rorl
in
test
sub
xor
xorb
call
inc
adc
jnp
jge
flds
das
jb
mov
cwtl
rcrb
cmp
lcall
mov
clc
stos
push
test
lock
mov
rcll
adc
ja
inc
lock
nop
jne
pop
pusha
sbb
shll
pop
sbb
ljmp
adc
push
stos
mov
cmp
loope
or
and
jmp
fstps
outsb
mov
test
mov
inc
xchg
mov
xchg
repz
roll
addr16
stos
jp
sub
icebp
das
sub
or
lea
ds
cmp
xchg
push
outsl
sbb
jno
mov
repnz
mov
mov
cs
in
adc
inc
in
xor
xchg
sti
sbb
test
out
or
pop
orb
fidivs
enter
xor
push
push
pop
cmc
loope
add
jo
push
mov
fucomi
inc
lods
ds
mov
rol
cli
cltd
pop
pop
jb
lcall
les
lods
jg
mov
xlat
leave
pop
ja
fcmovu
scas
mov
sub
addl
sub
xor
in
pop
clc
adc
mov
add
icebp
sahf
push
cmpsb
hlt
std
mov
add
sub
xlat
std
iret
lahf
add
pop
aam
orb
icebp
sbb
das
inc
fwait
int
movsb
mov
shll
fidivrl
push
xchg
loopne
jo
fisttps
bnd
mov
cltd
addr16
rcrb
mov
popa
bound
lods
pop
aam
adc
lods
pop
aas
push
jae
mov
sbb
roll
ds
dec
mov
cmp
icebp
dec
sbb
lock
fs
add
or
dec
jge
fldenv
leave
les
loopne,pt
jae
mov
and
pop
aad
jne
fwait
sbb
or
aas
cld
xchg
lods
cld
lahf
xchg
add
and
jg
loopne
pop
fmul
xorl
test
jecxz
aad
jge
loope
jle
xchg
adc
lock
js
hlt
add
testb
jp
into
and
mov
and
sbb
mov
pushf
or
fadds
aaa
mov
mov
loopne
cmovb
aad
cmp
sti
cmp
xchg
sub
imul
popf
dec
loope
mov
popl
jmp
xor
cmc
inc
jg
pop
push
jo
pop
dec
pop
mov
or
adc
imul
inc
adc
aaa
loopne
push
mov
jne
mov
xchg
adc
adc
je,pt
stc
cmp
lea
adc
add
sub
adc
jl
ds
mov
fcompl
xchg
cmp
mov
push
mov
jl
mov
push
or
or
push
sbb
stos
xchg
xchg
aam
scas
in
call
sub
add
cmp
sbb
arpl
xor
rcrl
add
repz
leave
inc
call
xor
cltd
loope
inc
ljmp
add
faddl
inc
cld
mov
adcb
test
mov
es
sbb
aaa
push
or
inc
add
jno
add
add
fsubl
loope
push
lea
jno
adc
dec
xor
loopne
jo
je
das
mov
pop
xchg
inc
test
daa
dec
or
jg
out
gs
sar
test
hlt
scas
jmp
negl
js
sarb
test
push
jae
cmp
push
push
addl
jp
and
add
jge
jmp
imul
bound
ljmp
add
xchg
mov
jl
fldenv
pop
enter
mov
imul
push
lea
push
cmpsl
daa
ds
arpl
mov
into
nop
or
pop
shrb
sahf
mov
xchg
cmc
ds
daa
dec
test
loopne
sub
cwtl
adc
xchg
outsb
mov
xchg
push
imul
ret
sub
out
dec
fnstcw
cs
add
pop
cltd
or
adc
lods
cmp
adc
mov
and
fstps
sub
das
jae
js
sahf
pop
or
inc
cmp
shr
mov
les
scas
arpl
loope
mov
bound
pop
faddl
sar
cld
mov
sub
pop
in
adc
dec
sub
cs
xor
lods
roll
xchg
xchg
ljmp
dec
add
andb
pop
or
test
clc
add
push
sub
mov
xchg
push
xor
sbb
shlb
adc
and
jne
decb
mov
hlt
xor
cmpsl
imul
je
in
movl
xchg
ret
mov
ret
sarb
xchg
add
pop
xchg
and
push
shl
mov
in
lea
out
cmp
addr16
jmp
sbb
adc
test
sbb
jmp
sub
sbb
mov
mov
jp
sub
lret
cmpsl
or
cmp
add
mov
dec
cli
cmp
mov
push
xorb
ds
and
jge
inc
cmp
int
and
jl
or
pop
inc
pop
xchg
out
xor
push
cld
test
fcmovnb
hlt
daa
adc
xor
cltd
rcrl
dec
sbb
subl
sbb
or
enter
mov
bnd
test
sub
popf
insl
pop
jl
repz
pcmpeqd
adc
clc
sbb
out
lock
dec
fwait
push
cmp
cmpsl
imul
iret
mov
mov
aas
in
mov
or
and
test
mov
test
inc
inc
movsb
fisttpll
shll
inc
sub
ljmp
add
mov
jns
jl
mov
mov
popf
mov
jb
mov
dec
andb
lods
add
jae
pop
je
jmp
sub
outsb
jmp
addr16
out
addb
sub
add
in
ss
clc
addr16
or
les
lahf
and
cmp
inc
mov
cwtl
cmp
adc
sub
gs
movsb
inc
inc
mov
adc
negb
mov
jb
xor
mov
mov
in
sbb
inc
xchg
add
adc
dec
push
xorl
xlat
out
rorb
into
pop
insl
cmp
ret
adc
dec
stos
stc
adcl
les
mov
mov
ss
lahf
in
mov
mov
mov
icebp
push
dec
mov
and
push
jge
add
dec
mov
mov
jmp
fwait
sbb
cmp
jge
ljmp
dec
popf
jmp
xor
rcr
push
test
ds
stos
cmc
stc
cld
pushf
cmp
dec
test
dec
pop
sahf
shlb
inc
mov
loope
pop
mov
outsl
andl
jne
dec
pop
push
aad
push
xor
lret
test
push
sahf
adc
es
mov
gs
inc
or
add
mov
ds
aad
ss
repnz
dec
into
je
jge
jle
sbb
mov
inc
sub
mov
dec
repz
repnz
add
je
push
aas
rclb
xor
mov
test
idivb
outsl
dec
dec
push
adc
sub
pushf
pop
xor
pop
hlt
jnp
push
cmp
and
xor
and
pop
push
ficoml
xchg
test
jae
xchg
and
pop
call
dec
sub
into
insl
mov
loope
and
push
mov
cli
mov
dec
or
pop
std
in
outsl
xor
roll
mov
push
mov
push
pop
in
push
pop
jle
sub
hlt
inc
push
scas
sub
adc
ficoml
and
mov
insl
push
xchg
movsl
ljmp
mov
push
mov
test
jns
sub
loop
jle
ror
out
cmc
push
sarb
cmp
cld
lock
xor
pop
in
inc
push
and
ffree
pop
cmp
sbb
enter
jbe
jle
cmpsb
daa
scas
dec
lds
test
hlt
dec
fsubl
lret
pop
out
jl
adc
jge
arpl
jbe
mov
push
jbe
dec
mov
and
jns
je
mov
std
je
cltd
add
or
cli
stos
bound
movsb
dec
xchg
notb
push
or
xchg
jg
push
in
js
sub
aaa
rorb
jno
dec
mov
add
and
sbb
cmp
cmp
cld
push
or
push
jl
fidivs
pop
rcrb
fmull
nop
xor
adc
in
xchg
in
test
imul
cmp
mov
jns
pop
fdivrs
inc
aad
jge
in
xor
faddl
fdiv
and
jp
sbb
dec
insb
pop
cmp
mov
jae
scas
add
xchg
xchg
sub
mov
repnz
pop
xor
vaddss
repnz
in
js
xor
push
cwtl
movsb
fiadds
mov
out
dec
js
mov
adc
mov
fldl
cmpsb
pop
push
sbb
push
aaa
lcall
cmpsb
shll
sub
jo
or
xor
push
cmp
dec
fnsave
test
into
out
aaa
ja
add
outsl
lret
or
outsb
adc
in
lock
mov
ds
cmp
nop
pop
or
mov
aam
arpl
push
insb
popl
divb
jne
in
jg
jg
or
cli
pop
sbb
sub
or
jle
fdivrs
rcll
mov
test
push
aad
dec
push
ds
add
adc
push
decb
in
ss
jecxz
out
icebp
xor
sbb
sub
mov
sti
fcmovu
loopne
add
clc
mov
shll
sub
ss
xor
and
add
std
fldl
je
sbb
xor
or
repz
imul
iret
pop
push
and
test
mov
pop
ljmp
pop
add
inc
mov
outsb
fcom
mov
jl
imul
mov
sbb
push
testl
sub
add
inc
or
push
or
mov
loop
fucom
sub
sbb
dec
gs
lcall
and
sahf
mov
rcrb
xor
cld
lock
mov
lret
out
sbb
mov
test
js
dec
sub
or
jmp
sub
xor
jmp
dec
push
repnz
inc
shrb
popa
cmp
add
rclb
cmpsl
sbb
sub
cvtps2pd
pop
icebp
mov
xchg
rcl
mov
fisubs
je
lcall
imul
cld
daa
push
notl
rcrb
outsl
xchg
mov
mov
pushf
cmpsb
lcall
mov
lahf
jae
lret
inc
xchg
push
insb
out
pop
xchg
je
sbb
andl
fucom
mov
xor
cwtl
je
add
mov
jecxz
push
sbb
cmpsb
or
or
or
cmp
xchg
lods
dec
push
fwait
stc
or
sbb
dec
jb
rcrl
add
xchg
sbb
push
and
sbb
mov
mov
or
add
or
andb
push
sub
sahf
sub
movsl
leave
dec
dec
xchg
movsl
mov
push
xor
push
push
mov
push
mov
inc
fldenv
sahf
mov
loop
inc
call
fistps
rol
fmull
mov
cmpsl
pop
outsb
pop
outsl
data16
sbb
test
xchg
pop
vpperm
cli
dec
mov
sub
adc
ret
cmp
stos
mov
add
lahf
outsl
add
inc
cltd
pop
test
aam
lret
cwtl
pop
nop
mov
xlat
and
lods
jmp
std
xor
mov
mov
cs
mov
sub
jp
loopne
cld
and
cs
ret
push
insb
fsubs
sub
mov
pop
inc
push
and
add
jle
sub
adc
shlb
xchg
fucomp
mov
fwait
mov
addr16
outsl
stos
testb
jno
cwtl
sti
les
inc
mov
pop
ljmp
rclb
add
pop
aad
test
adc
mov
or
jne
mov
sub
add
cmp
jecxz
ss
push
out
stos
imul
ficoml
mov
mov
lret
inc
bnd
cmc
lret
dec
test
cmpb
push
dec
push
pop
cmp
push
xchg
push
inc
xlat
rorb
imul
flds
mov
inc
shlb
mov
xor
cld
or
scas
enter
out
lods
test
andb
fstpl
test
shlb
mov
push
sub
or
add
addr16
mov
insb
pop
outsl
clc
decb
cmp
aas
cmpsb
push
mov
movsb
mov
in
jp
pop
xchg
push
add
je
sbb
das
pop
add
add
or
cmp
push
cmp
aas
pop
sub
scas
push
and
arpl
aaa
bound
dec
push
mov
enter
negl
aas
aaa
dec
mov
xchg
inc
adc
rclb
mov
adc
ss
xchg
aam
insb
and
sti
mov
jnp
sar
xor
inc
mov
xlat
lahf
dec
nop
push
and
ljmp
dec
mov
jle
out
fbstp
ficoml
cld
push
pop
or
adc
push
cmc
push
insb
lods
call
lahf
push
imul
dec
movsb
shlb
mov
das
inc
inc
int3
pop
mov
inc
lock
subl
push
mov
or
sbb
xchg
adc
push
in
dec
cmp
fwait
mov
jg
inc
cmp
jl
mov
cltd
shll
push
or
pop
cmp
cmpsb
jb
cli
add
insl
cmp
mov
ja
pop
mov
adc
push
cld
loope
pop
rorb
es
clc
mov
adc
test
add
lock
push
and
dec
test
ret
in
mov
pop
cmpsl
in
mov
ret
cmp
sti
mov
movl
sbbb
ret
or
adc
dec
outsl
cmpsl
mov
fisubrs
jbe
or
lock
out
dec
dec
call
mov
js
rcr
xor
add
inc
mov
lcall
orl
inc
xchg
mov
cmp
dec
or
call
outsb
cmp
popf
sbb
mov
aas
cmpb
testb
arpl
pop
cwtl
sahf
filds
add
adc
in
mov
outsb
jae
inc
inc
loope
jnp
mov
dec
and
jp
sbb
shll
jecxz
pop
fs
repz
mov
out
sbb
pop
lcall
lcall
or
or
xchg
cmp
sti
les
insb
stos
inc
jmp
lret
lods
loope
sbb
jg
cmp
cmp
and
shlb
pop
add
adc
jbe
xor
or
push
pop
lea
mov
out
pop
mov
pop
ss
jl
movsb
push
cmpsb
lds
pop
test
jnp
push
scas
fwait
cmpb
push
mov
jmp
cmp
mov
rclb
or
mov
sbb
mov
xchg
xor
push
and
mov
inc
and
test
sbb
lds
jle
lahf
cltd
and
into
add
pop
stos
into
subb
add
push
ss
int
dec
xchg
mov
sbb
xor
push
xchg
ja
iret
xor
pop
iret
in
lcall
or
sbb
pop
inc
test
dec
mov
out
push
cmc
cmp
lock
mov
orb
and
mov
jno
mov
mov
or
add
lods
push
in
aaa
cld
pop
jo
lret
mov
les
jl
sub
je
mov
push
int
je
outsb
push
jnp
aam
inc
mov
sub
stc
mov
nop
or
xchg
popa
je
imul
inc
pop
lods
je
or
fcomi
aad
rcr
test
cmp
cld
movb
repnz
mov
lcall
cmp
inc
inc
and
lods
jle
fsubs
push
nop
icebp
cwtl
xlat
sahf
sbb
shl
jnp
push
sarl
sbb
loop
sbb
mov
aaa
mov
push
clc
xchg
xor
mov
call
push
or
xchg
lret
adc
inc
lock
mov
or
push
cmp
and
sti
xchg
jae
into
stos
shlb
orl
in
pusha
shrl
sub
inc
cld
das
bound
push
xor
pop
fisubrs
shlb
out
xchg
sbb
cld
fsubrl
popf
push
sahf
and
cmpsl
adc
or
sahf
sbb
pop
inc
mov
rcrb
js
loope
dec
inc
push
mov
xor
add
adc
cmp
fsubl
add
lock
inc
sub
lea
lret
xchg
std
je
call
jmp
enter
mov
dec
std
mov
ss
add
adc
cmc
negl
xchg
lret
pop
jbe
sbbl
lret
adc
pop
fisttpll
scas
imul
jmp
sub
push
cmpsb
and
cmp
or
dec
xor
fdivl
mov
js
pop
imul
pop
inc
cmp
data16
rorl
dec
cmp
gs
lcall
cli
sbb
and
test
clc
iret
inc
outsl
push
dec
cs
adc
iret
inc
xor
adc
jp
mov
stc
bound
pop
mov
cmpsl
insl
mov
push
adc
arpl
ljmp
icebp
push
mov
sahf
rolb
adc
scas
nop
and
xchg
mov
or
dec
icebp
and
mov
or
dec
hlt
cmp
jbe
mov
popf
mov
in
shrl
rorl
mov
adc
add
or
xchg
cmp
mov
out
pop
loop
iret
rclb
pop
sub
std
mov
fists
inc
dec
aam
xchg
lret
dec
movsb
and
jno
and
jl
mov
adc
lds
mov
sub
scas
sbb
pop
cmpsb
cli
pop
ret
dec
imul
inc
je
lods
stos
std
rclb
roll
jle
test
push
push
xor
pop
leave
cmpsb
ja
sub
int
out
push
pop
je
shlb
cmp
mov
popa
add
rclb
and
lcall
je
pop
mov
loop
inc
dec
lahf
aam
xlat
and
or
clc
mov
cwtl
jne
stos
and
mov
mov
shr
push
test
push
std
sub
sbb
xchg
lret
xor
ret
add
rolb
mov
inc
push
sub
cmp
cmp
add
xor
jl
loope
pop
add
popf
add
add
add
jb
mov
xor
or
or
adc
add
pop
idivb
mov
mov
add
fmul
sti
or
nop
mov
mov
sarl
add
js
bound
hlt
cmp
mov
sbb
mov
sti
lret
or
jle
gs
push
outsb
mov
inc
outsl
fildl
sub
xchg
mov
jp
add
call
pushf
rolb
xor
dec
cmpsb
incl
dec
jge
cmp
ret
push
xor
add
les
dec
sbb
mov
xor
mov
mov
scas
adc
mov
xchg
or
outsl
push
pop
push
push
ss
iret
sub
adc
jge
test
lahf
mov
aaa
in
addr16
inc
xchg
mov
std
loop
xchg
fistl
in
jmp
loope
popa
ds
or
jmp
int3
sub
outsb
sti
repz
and
ljmp
mov
loope
cmp
std
aas
lret
les
inc
xor
xchg
dec
sti
sti
jge
mov
add
mov
rolb
sbb
aaa
rclb
aaa
push
xor
or
add
jmp
mov
stos
je
push
cmp
icebp
popa
mov
loop
xchg
fistps
addb
mov
pusha
rcrb
inc
mov
mov
mov
cmp
inc
pop
adc
xor
in
push
jl
sbb
or
stc
add
shl
jge
cmp
adc
jecxz
ret
sbb
sbb
stos
or
jo
jbe
fsubrl
lods
test
dec
xchg
dec
das
or
cwtl
lahf
arpl
push
and
imul
pop
mov
std
cs
jmp
sbb
cli
xchg
push
lahf
jne
ja
icebp
add
ret
rcr
or
outsb
sbb
cmp
pmuludq
mov
outsl
mov
icebp
je
pusha
test
adcl
aam
adc
clc
and
pusha
adc
pop
inc
push
jecxz
cmp
ljmp
mov
jle
add
xchg
push
std
out
mov
int3
mov
out
hlt
loope
and
fmull
pop
sbb
test
aad
adc
shlb
ja
inc
ret
subl
jo
loope
cmp
xlat
std
adc
pop
jecxz
mov
jne
imul
mov
out
inc
push
or
into
dec
mov
lret
test
iret
dec
loopne
xchg
push
or
pop
inc
notb
sbb
sbb
leave
into
rolb
aaa
mov
ljmp
adc
adc
xor
std
hlt
push
daa
push
add
xchg
cmp
inc
inc
cwtl
hlt
rorb
orl
stc
in
mov
pop
push
bound
pop
jnp
rclb
cmp
sahf
push
jg
lods
in
rcrb
stos
cmpsl
sbb
in
sub
popf
push
cld
test
push
pop
adc
in
jmp
cmp
aam
inc
lock
dec
test
sahf
mul
cld
mov
ja
scas
or
out
rolb
add
mov
pop
cld
outsl
mov
cltd
dec
jge
and
addb
scas
push
mov
lcall
cmpsb
stos
dec
push
push
dec
mov
test
pushf
sarb
aam
ljmp
push
jnp
pop
in
add
js
mov
jbe
lds
add
xchg
mov
in
sbb
mov
mov
mov
mov
xorl
sub
xchg
jbe
and
cmpb
loop
and
sarl
xchg
cltd
fbstp
cli
or
cmpsl
in
in
ds
mov
xchg
mov
push
dec
jne
mov
and
xor
mov
xor
mov
jne
movsb
sbb
mov
or
test
ret
and
lret
push
lds
sub
aam
sbb
mov
cmpb
jge
cmp
fists
aas
inc
clc
in
loopne
dec
inc
adc
repz
es
adcl
pop
mov
sbb
rcrb
in
push
inc
mov
or
sbb
mov
cmpsl
and
in
add
inc
inc
int3
leave
cmpl
and
jne
repnz
and
sti
push
mov
pushf
mov
int3
inc
aam
add
dec
fnstsw
mov
das
sub
cmp
mov
sahf
push
shlb
xor
hlt
cmp
mov
lahf
mov
sti
xchg
scas
xchg
clc
loope
adc
shrl
cmp
jle
dec
imul
pextrw
and
add
sbb
push
pop
xor
xchg
add
gs
aaa
jo
mov
mov
inc
adc
rcl
fs
fdivl
cmc
pop
jl
jmp
hlt
inc
adc
out
loopne
mov
mov
lock
and
outsb
jne
mov
inc
xchg
and
ljmp
jecxz
fildll
repnz
pop
fldt
mov
stos
dec
test
xchg
pop
daa
imul
jp
insb
jp
mov
lret
xlat
push
push
ret
out
movsl
xchg
shl
mov
and
rorl
or
push
jl
loope
push
andl
dec
sub
loop
loope
fdivrs
inc
lods
fbld
pusha
pop
loope
mov
mov
fsubrl
mov
lods
sub
add
lock
sub
pop
push
in
imul
add
std
push
pop
sbb
add
lahf
adc
lea
push
add
inc
pop
cmpsl
clc
leave
sbb
subl
inc
mov
xor
jo
imul
hlt
cmp
dec
orl
sti
dec
lahf
fisubrs
mov
mov
jl
aam
mov
add
inc
dec
cmp
movsb
fcomp
lock
pop
push
cmp
cmp
nop
mov
adc
adc
xchg
rcll
test
insl
fimuls
dec
jl
inc
fcmovb
mov
push
push
fimuls
cwtl
inc
dec
mov
or
lock
mov
inc
hlt
push
adc
xchg
ret
sbb
add
fidivs
mov
cmpsl
loope
mov
loop
sti
in
and
mov
movsl
xor
or
pusha
mov
jne
test
leave
notl
scas
jne
adcb
cs
add
push
sub
lahf
mov
das
add
popf
jl
mov
add
mov
aas
sub
scas
cmp
fstpt
jbe
inc
outsl
add
sarb
sbb
add
js
mov
call
mov
xor
in
or
js
cmpsl
mov
imul
sbbl
ret
sbb
jae
adc
in
jle
pop
mov
dec
mov
xor
or
inc
ja
std
fsubs
dec
jb
mov
dec
and
jno
inc
ljmp
sbb
or
orb
pop
mov
ret
call
adc
jecxz
mov
iret
or
cmp
sub
sbb
lahf
pop
pop
arpl
test
push
pop
push
pop
filds
loopne
push
arpl
call
enter
pusha
mov
ret
cmp
jo
gs
aaa
sub
insb
cltd
mov
repz
aad
pop
js
fsubrp
cli
dec
push
sbb
inc
aaa
das
push
fcmovb
iret
aaa
das
adc
imul
scas
mov
jle
imul
push
and
lds
inc
inc
push
std
das
sar
jae
xor
iret
fcmovnb
les
xchg
idivb
bound
not
pusha
pop
xlat
xlat
shl
add
xor
movq
xchg
mov
or
cmp
mov
loopne
cmpsb
pushf
cwtl
sub
xchg
aad
fcoml
xchg
mov
add
aad
test
pop
scas
dec
stos
lods
loope
decl
mov
cmpsb
das
mov
in
inc
sbb
fdivrl
cltd
jo
jb
lea
insb
push
popf
mov
fwait
lret
bnd
aas
jno
mov
push
xchg
xchg
sti
mov
jno
data16
lock
rorb
ds
or
mov
cmpsl
pop
pop
adc
mov
aas
iret
push
dec
outsl
jmp
pop
mov
pop
mov
push
mov
inc
cld
or
cmp
insb
adc
pop
leave
and
nop
cmp
xchg
mov
jne
push
scas
std
aam
mov
inc
sti
push
lcall
pop
sub
inc
xchg
xchg
adc
test
incb
adc
jmp
sbbl
daa
clc
or
or
loope
or
mov
and
push
pop
or
push
xor
outsb
lock
sub
icebp
or
out
add
pop
cld
dec
sub
push
sub
mov
cmpsl
ret
test
add
cvttps2pi
in
xchg
lcall
cmp
mov
mov
std
inc
and
loop
cmpsl
fimull
xchg
add
mov
dec
cltd
in
imul
push
pop
cwtl
add
ja
ja
mov
or
sahf
push
test
test
jbe
sbb
arpl
popf
lcall
mov
ds
push
mov
lock
pushf
cwtl
mull
sub
clc
mov
inc
xor
inc
sti
sub
negl
pop
adc
sahf
les
cld
stos
jle
cwtl
lahf
shll
sahf
sbb
loopne
or
outsl
jae
push
lods
adc
shlb
adc
mov
out
movsl
in
jg
inc
insb
jo
loop
lea
ret
add
mov
adc
int
fcmovnb
push
push
mov
sub
dec
fildl
test
popa
push
mov
mov
out
jae
xor
je
sbb
jne
push
sti
out
dec
fidivrs
xchg
call
dec
xchg
movl
xchg
cmp
loopne
sub
js
popa
fsin
jo
cmp
outsl
push
test
cmp
sub
sbb
sbb
in
jae
bnd
push
and
and
jo
adc
mov
loopne
mov
test
mov
outsl
push
or
inc
cmp
sub
cmpb
mov
fcoml
leave
sbb
sti
fistl
out
scas
lahf
jl
out
push
inc
sub
fadds
fs
cmp
xor
std
test
test
repnz
add
pop
sbb
mov
push
cmpsb
mov
inc
jo
push
in
loop
sarb
cmp
inc
int
rcll
mov
call
outsl
aas
repnz
add
pop
sbb
mov
xchg
push
cmpxchg
idivl
jl
or
pusha
ds
test
add
in
cmc
stos
cmp
sbb
aaa
push
mov
icebp
or
pop
roll
push
add
movsl
outsb
pop
xchg
lret
xchg
das
les
fistpll
pop
xchg
imul
add
pop
lods
or
xchg
aam
add
sbb
mov
push
push
jle,pt
mov
test
popf
pop
into
jb
xlat
in
in
push
add
push
rorb
stc
int
and
cltd
sbb
mov
fildll
push
das
popa
push
sub
pop
in
lcall
gs
lret
divb
cmp
fnstcw
sbb
push
and
ret
dec
outsb
xor
jmp
fcomps
inc
sub
xor
cmp
push
sbbl
adc
mov
push
xchg
mov
mov
cmp
ficompl
cld
pop
cmp
sbb
in
push
mov
jg
jmp
mov
mov
test
add
jno
add
cmpsb
mov
inc
dec
pop
jmp
mov
or
mov
pop
dec
xchg
adc
and
jge
bound
push
mov
invd
pushl
pop
ss
jbe
ret
cwtl
dec
push
repnz
outsl
xchg
or
in
fadds
test
je
adc
xor
jns
ja
fcomps
sub
rol
mov
fs
sbb
mov
xor
jge
add
or
mov
leave
rclb
xlat
push
loop
mov
out
fisubs
xchg
pop
pusha
xchg
jne
shl
sbb
loope
jo
jg
mov
pop
jecxz
je
and
mov
cmp
cld
push
dec
cmp
jl
and
clc
loopne
inc
inc
push
push
or
std
aad
add
add
cmp
xchg
mov
dec
adc
mov
inc
mov
loopne
add
movsl
mov
gs
mov
sbbl
push
pusha
mov
mov
and
cwtl
mov
mov
mov
jne
lea
and
dec
mov
lcall
insb
cmc
pop
gs
inc
fwait
sub
or
jg
imull
mov
sub
mov
mov
cvtpi2ps
stos
cmpsb
inc
mov
jle
in
jl
loop
mov
jbe
stos
or
outsl
cmpsb
je
loope
dec
into
add
xchg
jmp
lret
sub
add
adc
and
add
xchg
ficoms
pop
mov
sbb
mulb
lods
jnp
addb
popf
pusha
sbb
or
mov
jp
pop
sbb
les
fcomps
sub
cmp
aaa
es
push
xor
pusha
lock
icebp
pop
xchg
adc
ret
xor
dec
fcompl
popf
mov
sbb
dec
cmp
data16
sbb
outsb
add
fisttpl
cmp
xchg
jle
es
mov
mov
lods
repnz
mov
dec
notb
outsb
and
cmp
shrb
xchg
rolb
mov
mov
jle
mov
inc
cmc
mov
push
lea
dec
fdivrl
punpckhwd
sub
sub
mov
add
mov
scas
ret
dec
lds
out
mov
add
inc
js
jmp
sbbb
daa
cmp
inc
push
push
mov
xchg
adc
mov
icebp
nop
adc
mov
test
cmc
or
jno
add
xchg
ret
out
cmp
jp
leave
loop
es
xor
test
fldl2e
push
ffreep
daa
push
push
xor
adc
inc
add
push
rcll
jle
sbb
adc
mov
ret
in
pop
andb
sahf
sbb
inc
xor
data16
sbb
jbe
jne
mov
cmp
sarl
jbe
cmpsl
xchg
xor
rcll
push
mov
push
pop
push
add
shll
fmul
sbb
cmpsl
into
xchg
mov
mov
sub
jne
jnp,pn
je
sub
lods
mov
push
pop
sub
sub
cmpsl
or
rorl
dec
mov
incl
xor
sbb
mov
lods
outsl
mov
xchg
jnp
gs
outsl
mov
xor
aas
mov
adcl
sbb
ds
cs
aad
mov
into
out
sbb
mov
movsl
push
insl
jmp
enter
cmp
and
fsubrl
int3
outsb
xor
js
add
push
lea
stos
mov
in
ljmp
adc
dec
jnp
scas
sub
jmp
hlt
sbb
lahf
mov
out
push
aaa
sub
jmp
or
cmp
inc
loop
or
push
stc
out
push
call
push
std
jge
movsl
adc
pop
stos
daa
sbb
repz
dec
rclb
jl
cmovle
cmpsb
xor
pop
sub
xchg
and
rcr
rcl
add
push
mov
jbe
test
bound
jp
sbb
sbb
xor
out
std
xor
mov
testb
jle
frstor
pop
adc
dec
pop
or
pop
repnz
sbb
ds
jne
ret
ja
adc
add
pop
dec
pop
stc
cmpsl
mov
in
jle
les
fldenv
imul
sarb
dec
xchg
cmc
push
dec
cmpl
xchg
mov
push
mov
push
xchg
cmp
movsb
inc
in
jnp
mov
xchg
mov
or
mov
inc
lret
test
lahf
addr16
roll
push
lahf
mov
adc
imul
sub
stos
add
clc
cmp
icebp
inc
insb
sbb
test
cmpsl
js
jne
mov
sbbb
cmp
cld
test
cmpsb
fnstenv
mov
jge
mov
mov
aam
cwtl
sbb
clc
mov
cli
xor
popf
jae
loope
int
out
mov
ja
test
sti
mov
enter
notb
pop
adc
sbb
andw
cwtl
pushf
sahf
test
inc
shll
shrb
out
rclb
lahf
dec
enter
inc
outsl
shl
add
or
mov
mov
ljmp
dec
mov
in
mov
jae
insb
mov
cmp
je
lea
pop
adc
push
pushf
dec
mov
js
xor
ret
sub
mov
dec
cmpsb
ss
jg
mov
pushf
stc
dec
xchg
sbb
clc
ret
fldenv
sbb
outsb
stos
xor
js
sbb
out
movsb
jl
pop
mov
in
adc
xorl
add
xlat
mov
add
fwait
sub
test
negb
mov
xchg
and
jle
je
and
cmp
aam
pop
repnz
mov
icebp
in
sub
nop
sti
inc
mov
sbbb
pop
jo
orb
sbb
jns
xchg
nop
inc
adc
mov
lret
in
subb
add
es
cmp
sub
add
add
mov
popf
inc
pop
outsb
pop
imul
out
mov
js
das
jo
sahf
cmp
or
mov
mov
lret
push
lahf
insl
lcall
mov
outsb
loopne
pop
xor
jge
cs
cmp
in
dec
testl
sub
and
mov
sub
enter
cmpsl
pop
jno
inc
fwait
jg
pop
xchg
outsb
push
hlt
sti
leave
pop
lea
dec
jg
dec
fdivrs
js
mov
insl
loopne
shll
pop
fcoml
jle
add
fidivrs
idiv
mov
push
mov
dec
test
inc
daa
mov
rdpmc
push
jg
push
imul
jge
xchg
pop
testb
mov
ss
mov
push
dec
nop
xchg
mov
mov
adc
jns
cmp
add
sbb
jmp
int3
xor
cmpsw
mov
into
sarl
xor
push
sbb
in
adc
clc
adc
add
dec
or
out
shlb
push
or
mov
gs
pop
xor
cli
or
sbb
dec
mov
mov
pop
les
push
pop
xor
pusha
loope
std
adc
add
jge
mov
mov
dec
adc
xor
in
sbb
and
cmpsb
test
lock
mov
jbe
dec
sub
pop
test
fs
call
out
js
adc
lea
mov
jle
stos
dec
xchg
stc
or
add
scas
and
in
or
fidivrs
lea
imul
add
mov
inc
ss
popa
sti
cli
or
adc
push
stos
jl
outsb
xor
push
jne
mov
xchg
ret
mov
fidivrs
mov
shl
in
pop
pop
shlb
push
sbb
fnstcw
pusha
adc
sub
cmp
inc
filds
out
inc
pushf
sub
les
cmp
test
lret
jmp
pushf
cmpsb
into
sbb
roll
enter
inc
loopne
lea
jl
sti
fbstp
and
mov
jl
xor
inc
sbb
mov
sbb
push
ds
ljmp
xor
mov
sbb
mov
rolb
cltd
pop
outsl
push
jge
gs
movsb
out
cmp
xor
add
mov
scas
cmovae
dec
pop
mov
mov
xor
outsb
out
inc
xor
rol
aad
sub
adcl
xor
and
pop
andl
mov
pop
inc
sub
dec
call
popf
add
js
pop
out
sub
cmpsl
outsl
mov
ss
inc
ds
mov
mov
push
lret
cld
or
loope
sbb
sub
jo
push
pop
mov
cmp
sbb
cmp
aaa
inc
inc
cmp
pop
lock
jb
aaa
mov
ja
insl
test
les
mov
mov
or
jbe
mov
ds
fisttpl
and
inc
out
cmc
es
jne
insb
mov
sbb
mov
ja
add
push
push
sub
sbb
adc
dec
cmpsl
and
jo
lea
sub
mov
fidivrl
incb
std
aad
repz
inc
cmp
cmc
dec
fsubrl
add
pop
sub
outsb
mov
mov
dec
or
dec
xor
mov
or
pop
test
movsl
jbe
scas
ljmp
xor
push
push
movsl
sti
stos
pop
xchg
std
xor
pusha
div
mov
inc
scas
xor
pop
inc
leave
xor
adc
dec
mov
jnp
pop
cmp
mov
mov
insl
fwait
sub
mov
dec
jns
stos
mov
paddsb
into
push
shr
adc
sbb
adc
and
aas
add
push
push
ror
add
cmc
daa
mov
sub
jg
jmp
pop
pop
cs
movsl
ret
cli
repz
ret
push
xor
jecxz
nop
js
mov
es
push
or
lods
pop
inc
out
adc
jg
clc
push
xchg
and
scas
mov
fwait
dec
cld
push
out
mov
loope
notl
movsl
pushf
inc
outsl
add
cmp
mov
scas
nop
jl
daa
aaa
jns
cltd
jl
fidivl
clc
jg
rcrb
ret
jno
xchg
cld
mov
insb
mov
pop
pop
iret
sbb
fistl
cs
and
push
sbb
jo
lds
mov
pop
xchg
outsb
jnp
push
or
test
sub
mov
loope
xchg
cld
pop
dec
fildl
mov
dec
jne
and
test
je
gs
inc
fisttps
outsb
and
mov
lods
xorl
ds
loope
jo
sub
push
icebp
inc
ljmp
xor
outsl
and
pushf
scas
into
pusha
mov
loope
sbb
movsb
scas
stos
cmp
add
fsubrp
in
add
nop
xor
fidivl
icebp
jg
jbe
adc
leave
xor
mov
mov
pop
enter
mov
cmp
data16
sub
fdivrs
imull
mov
push
xcrypt-ctr
cmpsl
sbb
loop
mov
xchg
addr16
scas
pop
jge
mov
daa
pop
sbb
cli
mov
xor
add
mov
repnz
les
outsb
idivl
aas
inc
add
lea
sub
mov
xchg
fistl
lods
add
test
andb
scas
js
movsl
call
mov
cmp
lock
out
xchg
xor
mov
lea
adc
les
jne
orb
shll
sar
std
cmc
xchg
repnz
or
insl
pop
mov
add
add
scas
loop
dec
es
lock
ret
out
jle
dec
dec
shlb
imul
jae
sbb
faddl
jg
test
inc
inc
jp
mul
test
push
pop
xchg
loopne
filds
in
iret
inc
data16
lods
jbe
inc
push
ja
inc
mov
inc
pop
cmp
stc
in
es
mov
cmpsb
mov
lea
cs
mov
cmp
mov
jecxz
sub
lods
sbb
out
inc
mov
adcb
std
lea
jge
insl
dec
jmp
cmp
shl
xchg
mov
ffreep
sub
cwtl
jno
pop
add
jmp
int
mov
xor
pop
pop
dec
std
xchg
pop
add
js
sbb
inc
aaa
cli
dec
jne
in
lcall
and
sub
cmp
xor
stc
inc
sbb
stos
mov
mov
test
into
pop
inc
stos
in
ret
movsb
iret
lds
push
pop
lret
sub
dec
es
fstpt
ret
xchg
scas
call
or
pusha
adc
ret
dec
push
loop
dec
leave
popf
pop
stos
mov
pusha
sbb
sub
out
inc
fildl
add
ret
xchg
sbb
dec
or
jb
and
into
jp
adc
mov
adc
push
xor
ss
or
push
lods
mov
rolb
xchg
fcoms
das
shlb
xor
ljmp
lds
or
icebp
test
addr16
push
jb
lea
aas
xchg
add
mov
add
fisubrs
aaa
cmp
mov
inc
faddl
mov
jno
mov
loop,pt
push
mov
testb
and
loope
adc
rorl
dec
push
push
daa
movsl
jl
jge
std
or
or
push
pop
and
dec
xchg
mov
ljmp
and
iret
sti
push
add
xchg
push
mov
adc
fwait
add
mov
or
nop
push
xchg
xchg
inc
outsb
mov
and
or
shll
into
test
jo
int3
add
adc
push
jle
xor
push
rcll
shlb
gs
shr
lock
inc
pop
xchg
jno
cmp
rclb
insb
or
stos
cmc
cmp
call
imul
ret
daa
jp
cmpsb
ljmp
xchg
pusha
out
imul
rcrl
test
xchg
or
cmp
or
repnz
js
pop
push
sbb
iret
sub
cmpsl
loope
shll
not
cmp
inc
adc
inc
add
arpl
test
popf
push
push
stos
sbb
aad
mov
stc
rol
xor
jns
insl
push
sqrtps
sub
and
call
ja
adc
inc
jno
dec
inc
hlt
xchg
cmp
cmovo
rcrl
dec
pop
ljmp
aas
push
lret
jne
mov
arpl
dec
in
mov
push
and
add
pop
loopne
sub
inc
lret
stos
pop
lock
xor
fldl
ret
jecxz
push
push
mov
movsl
jmp
pop
bound
mov
rolb
sbbl
imul
sbb
ret
inc
xchg
fistps
dec
xor
adc
fnstsw
aam
stos
add
ret
jp
push
fidivs
jmp
jne
xchg
fisttps
rcrl
xchg
sub
hlt
mov
or
sbb
dec
not
scas
aam
stos
cli
stos
xchg
xor
xchg
mov
lods
bound
dec
pushfw
int
sbb
cmpsb
fsubs
sub
cmp
sub
icebp
push
shl
jnp
mov
xor
mov
aad
call
pusha
add
adc
jbe
cmp
sarl
or
jle
adcl
test
fidivs
js
adc
ret
mov
jno
push
out
cmp
or
cmp
stos
xchg
push
mov
pop
stc
insb
push
xor
mov
add
add
mov
or
sbb
adc
mov
dec
jge
aam
adc
adc
cmp
mov
pop
das
mov
add
cmp
andb
testb
rol
add
push
push
and
mov
mov
sub
std
push
outsb
cmp
lds
sub
xor
xlat
lahf
loopne
mul
jg
dec
jecxz
insl
or
fstl
arpl
or
sbb
add
cmp
sbb
pop
ficoml
mov
enter
dec
out
movl
insl
fistps
addb
in
add
push
sub
movsl
adc
popa
jp
imul
jp
ds
lret
sub
pop
bound
mov
push
cmp
pop
add
ljmp
sbbb
or
test
mov
add
in
test
scas
inc
mov
push
loop
sbb
mov
test
or
mov
sbb
jns,pn
mov
mov
pop
clc
addr16
rorl
sbb
mov
mov
xor
icebp
add
fidivrs
rorb
mov
inc
push
in
xchg
aaa
out
push
mov
fsubrl
xchg
loope
cmp
fisubrs
gs
xlat
mov
adc
ljmp
adc
mov
or
sahf
push
mov
fisttpl
sbb
inc
pop
in
cld
sub
outsl
mov
out
mov
mov
sahf
dec
cwtl
cmp
sbb
leave
cltd
lods
mov
jb
pop
pop
clc
inc
sbb
jg
sbb
jge
rolb
leave
add
or
pusha
jns
pop
mov
popf
xchg
mov
xchg
faddp
xor
mov
rorl
mov
pop
aaa
adc
std
int3
fnsave
add
push
test
jbe
imul
ljmp
ss
push
ds
pop
inc
mov
nop
or
jg
mov
xchg
stos
push
inc
sbb
imul
xor
adcb
push
stc
and
cltd
fisttps
xchg
repz
in
and
popf
shrl
lcall
stos
mov
mov
jo
mov
cmp
add
mov
loope
lretw
push
jle
rcll
sub
ss
mov
cli
loopne
adc
xor
sbb
mov
dec
test
insb
adc
pop
cltd
imul
jmp
rorb
mov
dec
mov
inc
inc
jae
xor
xor
shr
push
fisttps
mov
sub
test
adc
in
scas
jp
inc
cli
insb
sub
mov
aad
sub
and
fisttpll
repz
enter
call
ja
inc
cmpb
adc
bound
mov
cmp
pop
cmp
sbb
xchg
leave
fcomi
pop
or
jmp
sub
enter
outsl
test
push
jae
or
push
fidivs
cmc
sub
std
adc
stos
mov
push
mov
jp
inc
add
jae
testb
in
jle
sub
push
mov
fs
data16
mov
mov
inc
or
sub
aas
sub
popa
fldt
push
out
lods
jbe
xor
cmp
push
jmp
movsl
pop
mov
jnp
and
imul
jmp
insb
fwait
int3
xlat
cmp
test
add
add
and
mov
mov
cmp
ss
outsl
arpl
in
sbb
into
sub
sbb
pop
shrb
movhps
enter
dec
shr
xchg
cmc
hlt
jbe
mov
icebp
int
push
mov
mov
int
pop
pop
pop
inc
adc
movaps
repz
insb
icebp
in
push
lret
and
cmpsl
sbb
xor
jecxz
jle
or
dec
loop
cmp
jo
jmp
fistl
cs
lds
pop
popa
adc
mov
js
jbe
test
sub
push
decb
mov
and
or
out
pop
xchg
ss
in
pop
and
mov
rcrb
jo
sbb
mov
out
mov
lcall
out
icebp
add
std
or
push
jo
in
xor
dec
aaa
xor
dec
std
mov
mov
cwtl
lock
mov
inc
idivb
cmc
adc
rolb
shrl
popa
mov
fmull
movsl
and
loope
lock
fdivp
jo
je
mov
loop
lock
cmpsl
jmp
gs
aad
cs
mov
mov
inc
sub
setbe
jbe
jae
insb
sti
sub
mov
leave
in
test
inc
mov
jne
stos
lock
adc
std
mov
and
andb
ret
adc
pop
or
rcrb
dec
out
subb
push
loope
cli
ret
jmp
mov
adc
push
addr16
hlt
rcr
sub
xor
pushf
shr
cmp
dec
or
sbb
fildl
inc
shl
push
les
rcrl
push
pusha
mov
in
mov
cs
cmp
adc
pop
mov
mov
sub
adc
sub
pop
lods
lods
jbe
inc
sbb
or
aaa
lea
and
mov
je
outsb
mov
add
imul
and
out
mov
scas
sti
ds
mov
rorb
aaa
addb
ret
xchg
inc
xlat
and
mov
fiadds
jbe
mov
xor
loopne
pop
mov
jb
and
xor
outsb
sbb
lea
ficoms
jp
pusha
or
cmp
fsubr
mov
nop
sub
mov
imul
pop
popf
imul
pop
xchg
cld
jno
imul
mov
pop
orl
dec
popa
nop
lds
mov
pop
dec
fwait
adc
fwait
cmp
lea
jbe
mov
xor
iret
xor
xchg
in
or
jle
push
dec
dec
clc
test
outsl
inc
cli
lea
imul
xchg
je
outsl
mov
inc
adc
ret
stmxcsr
fildl
and
nop
sti
mov
and
js
lea
pop
jmp
icebp
cmpsl
jg
cmpsl
jecxz
pop
sbb
xchg
sub
popa
jmp
push
jge
lods
into
clc
pop
rcl
es
insb
loop
arpl
xchg
pop
xor
test
mov
mov
push
lcall
pop
pop
sbb
and
pop
xchg
test
push
hlt
dec
push
jne
addr16
sub
lea
mov
negl
or
and
mov
and
icebp
push
lret
and
adc
mov
clc
or
lods
fldt
mov
jno
imul
mov
xor
insl
pop
add
aad
pop
fstps
fwait
sbb
outsl
fbstp
mov
inc
data16
outsb
xchg
or
outsl
or
out
scas
jo
lock
sub
scas
lock
pushf
add
aam
pop
xor
pop
and
ficoml
aas
js
add
out
mov
iret
daa
pop
sub
pop
test
clc
add
push
mov
lea
lock
mov
pop
mov
jnp
loopne
leave
cmp
mov
cmp
hlt
lds
mov
jne
int3
inc
hlt
les
mov
jo
mov
inc
sbbb
insl
push
xorb
scas
in
rorb
jge
lds
subb
mov
dec
pusha
mov
xchg
clc
cmc
into
scas
cmp
jmp
adc
dec
mov
jmp
fbld
push
mov
icebp
add
int
jne
cmp
imul
shrb
push
js
mov
fmul
andl
fstpl
movsl
imul
cli
inc
pop
mov
sti
lea
xchg
aaa
adc
sahf
out
and
pop
iret
xchg
mov
and
mov
out
sub
cmc
pop
lock
and
add
and
stos
jmp
jno
sbb
pop
enter
mov
pusha
xchg
adc
aas
or
and
adc
lods
mov
fsubs
mov
add
dec
fidivs
shl
xlat
outsb
iret
ficoml
fldcw
mov
or
mov
aad
xor
cmp
and
jo
adc
and
push
and
mov
and
test
add
pusha
xorb
fistl
sbb
out
es
sbb
jno
je
nop
mov
jle
mov
mov
push
jp
fiaddl
sub
les
dec
stos
aad
jbe
mov
jge
pop
and
cmp
or
inc
cwtl
inc
sbbb
push
xor
cwtl
shlb
inc
adcb
mov
pusha
and
out
les
sub
sub
popf
loop
mov
leave
xchg
fists
dec
pop
stos
cld
inc
sbb
mov
das
les
dec
jg
fbld
push
iret
pop
jo
je
xor
push
js
test
lock
scas
ljmp
pop
inc
cli
dec
call
mov
mov
jb
sbb
mov
movsl
and
clc
xchg
mov
insb
push
stos
jb
into
jmp
aas
adc
push
stos
mov
pop
or
leave
nop
movl
ficoml
cld
mov
test
lcall
push
xlat
sahf
test
jae
mov
push
mov
inc
sets
push
inc
loopne
cmp
xchg
inc
test
movsl
repz
cmp
ds
ds
xor
mov
adc
push
scas
or
and
jnp
pop
push
sub
add
fwait
aaa
std
sbb
xorb
or
mov
das
inc
sbb
pop
adc
daa
lret
push
jg
pop
mov
dec
xlat
sbbl
jmp
aas
mov
inc
lds
push
jle
adc
shl
cli
popf
xchg
mov
gs
mov
outsb
movl
bound
add
mov
cmp
negb
aam
and
xor
add
jb
jecxz
sub
mov
fiaddl
adc
dec
outsl
mov
lret
lret
jl
and
inc
fcoml
int
mov
in
gs
insb
add
xchg
sbb
lret
pop
scas
pop
inc
fmull
sbb
ret
cmp
jae
pusha
sbb
cs
dec
mov
out
pusha
mov
cs
sbb
andl
jo
cmp
sbb
stos
add
xchg
inc
fisttpl
fcmovbe
add
add
stos
mov
mov
mov
cmp
push
cld
mov
xchg
test
into
dec
xchg
test
mov
pop
inc
nop
adc
int
add
mov
jo
xchg
add
lret
jg
loope
loope
imul
sub
in
mov
cltd
js
fcoml
mov
mov
cmp
or
push
repnz
lock
mov
pop
rcll
cld
lcall
sbb
mov
adc
fstl
inc
and
nop
jecxz
mov
sub
out
ret
jbe
adcl
adc
rolb
cmpsl
lods
jmp
mov
cmc
dec
mov
jecxz
les
mov
sbb
and
dec
outsb
mov
mov
or
sbb
loopne
daa
stc
jp
std
add
mov
insb
out
pushl
push
in
lea
add
bound
ss
fs
cmpsl
lods
and
or
inc
mov
insl
loopne
mov
mov
mov
popf
aam
rcl
jg
mov
adc
jge
push
clc
jne
sub
mov
inc
ja
gs
fs
cltd
fnstsw
sub
inc
lock
sti
pushf
sub
cli
adc
mov
lock
jmp
arpl
ret
imul
or
and
je
loopne
sbb
je
inc
rcll
push
addb
sub
mov
jbe
je
stos
lods
outsb
sbbb
jo,pt
adc
inc
and
or
outsb
push
cs
movl
pop
shl
repnz
inc
push
rolb
lock
sti
adc
das
mov
insb
sub
dec
fwait
mov
leave
bound
jmp
out
add
aas
jp
loop
ret
in
pop
repnz
popa
dec
scas
add
jle
inc
ds
adc
in
cmp
outsb
add
xor
jnp
xchg
add
stos
shlb
dec
int
popf
out
pop
xor
js
push
pop
mov
adc
adc
cmp
pop
or
icebp
jecxz
push
pushf
in
fmull
adc
incb
jge
fisttps
cld
in
or
sbb
scas
push
adc
jne
lds
mov
mov
scas
inc
pop
adc
add
jo
and
xor
adc
mov
adc
faddl
addr16
xor
in
popa
popa
jp
insl
sti
pop
add
sub
lret
shll
xchg
sarl
dec
push
jmp
xchg
loopne
ja
mov
daa
jbe
je
mov
xchg
cwtl
add
jp
inc
and
pop
pusha
leave
and
jnp
xlat
in
fidivrs
pop
sti
adc
cld
jbe
jmp
jno
stos
pop
es
lock
es
push
dec
shlb
add
pop
out
daa
je
mov
cltd
int3
cmp
test
ja
icebp
add
cld
fildl
fisubrl
xchg
mov
subl
pop
insl
mov
xchg
push
call
pop
jae
adc
mov
out
push
jl
xor
jo
movsb
pop
dec
mov
fisubs
ljmp
cmpsb
stc
icebp
iret
mov
adc
pop
lods
sbbl
es
or
pop
and
adc
sub
xchg
push
shr
sub
out
in
sbb
mov
cld
mov
jle
jne
cmp
inc
nop
xchg
lret
mov
xlat
ja
add
cmp
push
jg
add
inc
fldl
pop
cs
add
mov
ret
jl
imul
push
sub
test
lock
test
inc
sub
lock
xchg
or
jno
pop
shl
jge
inc
fldt
sbb
ljmp
mov
sarl
mov
mov
test
popf
stos
push
fwait
jmp
jne
pop
cwtl
mov
dec
cmp
push
adc
and
ffreep
orb
pop
push
push
adc
aas
ljmp
mov
sbb
pop
call
inc
int3
stos
gs
jmp
jl
mov
xchg
shll
and
movsb
clc
mov
cs
test
and
fiadds
in
lahf
lods
mov
cmp
imul
mov
scas
aaa
or
mov
aaa
mov
fs
imul
bound
test
ret
dec
xor
cmp
xchg
sti
lea
andb
movsb
xchg
loop
es
mov
aam
pop
inc
push
out
dec
std
inc
mov
lahf
or
push
loope
popa
mov
pop
sbbb
pop
or
jb
test
jg
in
pusha
jle
mov
rcrl
fistpll
xchg
jg
mov
stos
jb
pop
xor
call
sti
addl
pop
hlt
adc
vmovss
pop
add
sti
outsb
loope
repnz
out
inc
cmp
je
xor
xchg
loop
cmp
stos
push
inc
sbb
mov
int3
test
in
cwtl
push
and
add
jp
adc
sti
push
jo
mov
divl
addr16
jg
cmp
or
pop
adcl
cmp
aas
xor
dec
pop
adc
mov
pop
adc
clc
mov
adc
dec
pop
cmpl
movnti
out
or
andb
add
inc
pop
add
cld
xchg
out
inc
stc
mov
insl
stos
lds
aas
das
adc
lahf
push
mov
stos
std
jno
mov
xor
ss
sbb
adc
ljmp
das
mov
push
pushf
xchg
aaa
or
fcoml
arpl
mov
or
stos
gs
fs
daa
enter
add
fdivp
add
aas
xlat
aas
inc
rclb
pop
push
inc
in
jo
mov
fisubrs
mov
jbe
in
cli
mov
rcrb
xchg
scas
add
add
int3
aam
movl
jmp
fucomi
scas
dec
or
je
mov
fsubrs
pop
dec
pop
cmpsb
cmp
push
cmpb
push
xchg
mov
shl
jbe
mov
loopne
sbb
jg
adc
cmp
mov
mov
setb
jbe
je
xor
push
movsb
cmp
or
push
ds
ffreep
adc
mov
mov
movsl
test
sahf
mov
aad
stc
insl
jmp
notb
jecxz
ljmp
fistps
pushf
stos
xor
fldt
push
cld
fnstenv
rcrb
leave
add
movsb
jle
and
js
mov
pop
aad
inc
push
xchg
out
pop
std
jmp
in
jle
adc
add
sti
stc
out
pop
aaa
insb
cmpsl
jl
pop
mov
sbb
add
and
ja
insl
gs
cld
popa
imulb
xchg
sbb
ss
clc
cmpb
shrb
test
xchg
pop
inc
stc
or
add
mov
mov
es
dec
mov
push
mov
mov
pop
out
jbe
push
lahf
jg
in
jl
xlat
cmpsl
rolb
mov
adc
shl
jp
and
push
pop
cmpsl
mov
adc
push
sub
repz
inc
shrl
or
loopne
sbb
push
lahf
mov
jne
add
adc
xchg
ds
pop
add
or
movsl
repz
popf
cmc
fcmovnu
lret
mov
jo
or
push
dec
add
test
pushf
stc
inc
mov
std
mov
push
push
cli
push
adc
pop
imul
rcrb
xchg
xchg
push
ds
sbb
mov
push
mov
imul
xor
outsb
test
push
iret
push
jmp
outsl
jl
in
push
sbb
or
jb
inc
fiaddl
inc
je
cmp
mov
or
pop
ficompl
lds
jle
mov
aaa
sbb
mov
push
mov
sub
les
aas
cmp
pop
xchg
dec
inc
int3
xor
pop
andl
int3
and
js
lods
xchg
sub
jl
pop
cli
scas
mulb
loopne
add
sbb
lea
jmp
mov
xlat
lea
xchg
add
mov
lods
adc
adc
cmp
mov
pop
call
and
pop
loope
sbb
je
loope
push
inc
cltd
mov
pop
jne,pt
xor
test
lods
mov
push
nop
sbb
mov
je
mov
aad
mov
jg
call
hlt
sbb
mov
cmpsb
sub
and
sbb
jmp
lcall
jmp
ret
subb
fidivrs
xor
pop
orl
push
adc
stos
push
add
fists
adc
sub
aaa
shlb
aad
fimuls
sbb
adc
repnz
push
mov
mov
inc
mov
sbb
mov
sbb
call
in
ja
mov
cmp
cmp
mov
ljmp
fwait
and
cmp
cld
mov
mov
pop
je
jecxz
dec
stos
mov
mov
rcrb
insl
clc
push
sub
inc
fisubrs
mov
lea
mov
lahf
adc
adc
xchg
sub
aas
xchg
inc
cmc
dec
adc
dec
mov
fdivrl
addb
rolb
jae
aaa
add
stos
and
cmpb
ret
cmpsl
jg
jecxz
cmp
mov
call
pop
jns
jl
or
inc
adc
mov
es
cmp
mov
pop
mul
ljmp
rol
je
out
push
xlat
push
jb
sbb
js
mov
fwait
and
and
jmp
push
xor
outsb
mov
fists
insb
pusha
sti
mov
call
into
cwtl
loope
adc
addr16
das
pop
inc
pop
sub
imul
add
pop
push
lods
xchg
jbe
xor
dec
outsb
jmp
mull
xlat
pop
mov
hlt
add
or
dec
mov
mov
enter
add
decb
xor
mov
jbe
test
jmp
jo
xorb
aam
sub
cmp
jo
mov
jne
loop
mov
or
or
jge
pop
adc
orl
mov
in
mov
mov
mov
xor
mov
push
mov
cmpb
fst
inc
stos
movsb
aad
adc
add
pushf
xchg
lds
xchg
lahf
xchg
lcall
fwait
cmp
es
js
insb
pop
imull
or
cmp
test
loop
lea
push
xchg
cmpsb
pusha
add
and
inc
outsb
pop
jle
adc
mov
push
xchg
push
ret
sahf
mov
pop
mov
pop
hlt
outsl
mov
icebp
imull
sbbb
push
mov
in
and
das
mov
fstpt
push
mov
jae
push
and
dec
rcrb
adc
pop
fwait
sub
mov
aad
jecxz
sub
jae
lods
insb
cli
inc
out
leave
mov
dec
xlat
fs
out
pop
lock
jmp
es
push
rsm
inc
mov
xor
leave
fidivs
pop
cmp
popa
in
cld
cmc
mov
bound
cmp
sbb
xchg
es
mov
adc
jle
pop
insl
insl
aas
stc
iret
cmp
and
jge
pop
cmpsl
adc
pusha
mov
repnz
test
in
jo
aaa
mov
hlt
test
fdivs
int
fmull
icebp
orl
incl
sub
jg
xorb
and
pop
add
or
icebp
roll
mov
cmp
stc
push
and
cltd
or
aam
clc
xchg
adc
push
cli
scas
fsubs
inc
mov
mov
mov
pop
xor
push
dec
push
dec
outsb
mov
ljmp
das
fsub
adcb
int3
fidivs
mov
mov
mov
jmp
ss
ret
push
mov
jnp
adc
repz
push
lods
int
mov
pop
sub
out
push
or
jmp
adc
jge
sub
pop
addr16
int3
cmp
mov
lods
les
mov
mov
aaa
cltd
add
fisubrl
pop
push
pop
cli
lret
stos
icebp
cs
test
test
or
push
dec
add
js
mov
mov
cmp
hlt
xlat
dec
sub
shlb
adc
or
dec
mov
adc
push
mov
in
incl
dec
rorl
fwait
jnp
sbb
push
adc
mov
outsl
xor
ja
or
cld
lahf
mov
mov
push
xchg
dec
or
mov
inc
roll
test
mov
push
sbbl
mov
xchg
loopne
ret
mov
mov
dec
insb
mov
fs
aas
inc
decl
dec
jecxz
xchg
push
movsb
mov
mov
mov
lds
cmc
sbb
adc
jbe
mov
xchg
mov
imul
and
jl
mov
and
movsb
insl
adc
in
push
or
fisttpll
mov
scas
inc
sbb
jo
and
cmp
dec
iret
sbb
or
adc
sbb
scas
cmpsb
pop
nop
push
mov
push
or
pop
jb
pushf
add
xchg
mov
mov
xchg
jmp
push
xchg
mov
jo
jle
cmp
lea
adcb
movl
call
mov
mov
or
and
das
sub
mov
and
and
in
mov
sbb
test
cld
leave
sub
cmp
dec
faddl
jne
xchg
nop
cli
dec
inc
push
roll
mov
xchg
cmp
mov
fistps
add
mov
sub
decl
mov
sbb
mov
rclb
loop
clc
pop
or
sub
push
pop
sbb
mov
aad
sbb
mov
inc
cmp
lret
xchg
dec
in
mov
mov
or
outsl
sbb
cmp
inc
sub
push
aam
out
adc
rcrb
ds
push
pop
cmp
fcmovnu
or
inc
mov
sub
test
outsb
call
sbb
jnp
or
dec
cld
inc
ret
dec
inc
test
add
orps
inc
inc
call
mov
test
dec
fwait
mov
daa
push
cld
jbe
add
jns
adc
psrld
mov
and
les
adc
data16
cltd
add
inc
mov
mov
imul
daa
lcall
inc
dec
xor
std
sub
popa
push
mov
in
pop
nop
jae
xchg
xchg
xchg
xor
xor
inc
lds
adcl
lret
je
sbb
cmpsl
cltd
xor
jmp
jbe
mov
mov
xchg
cmpb
les
inc
mov
nop
and
xor
test
js
leave
pop
testb
inc
add
jns
mov
pop
pop
cld
gs
add
pop
push
sbbb
mov
or
xchg
jne
sahf
mov
cmpsb
push
pop
push
xchg
adc
out
inc
pop
mov
dec
pop
iret
xchg
arpl
lods
xor
mov
insl
cld
test
incl
test
adc
cmc
add
fidivl
ljmp
and
mov
gs
shlb
fs
jbe
sbb
outsl
pusha
mov
nop
cltd
mov
test
sbb
mov
insl
je
loopne
repnz
es
shlb
xor
and
ja
shlb
xor
bound
imul
icebp
adc
inc
adc
push
push
add
sub
lret
pop
fcoms
adc
xor
push
xchg
fnsave
xor
clc
or
push
mov
jae
out
mov
mov
and
outsl
jp
subb
mov
adc
mov
imul
rolb
sahf
mov
in
inc
lock
enter
sti
jmp
add
pop
movsl
adc
mov
pop
and
mov
lock
mov
xchg
imul
repz
mov
jo
test
loope
cli
adc
in
xchg
sbb
fistl
ret
sub
xchg
inc
mov
gs
ret
insb
shll
fstpt
or
fwait
xchg
pop
loope
push
in
push
lahf
push
pop
lahf
cmp
mov
popa
movsl
movsl
xchg
inc
mov
mov
push
stos
xchg
push
mov
jbe
sbb
or
mov
xor
xor
fwait
lods
jp
jbe
add
jg
and
sbb
or
das
cmpb
ret
cmp
cmp
imul
fwait
popf
orb
adc
mov
add
mov
mov
notb
sbb
leave
pop
jno
outsb
mov
pop
in
mov
jmp
out
pop
mov
mov
or
xor
sbb
jmp
or
int3
hlt
cmpsl
xchg
or
mov
or
inc
push
data16
mov
jle
xchg
cltd
xchg
push
pop
xchg
fiadds
jecxz
mov
add
or
ret
push
jbe
jg
movsl
dec
out
int3
and
push
adc
add
call
ss
cli
and
dec
mov
insb
lock
loop
in
out
mov
xor
jg
or
xchg
jecxz
pop
insb
mov
dec
push
divb
cmc
jg
dec
inc
popf
movsl
out
ljmp
add
jmp
xor
push
xor
mov
out
mov
iret
or
inc
jmp
sbb
add
sti
movsl
adc
popa
loope
jo
mov
mov
mov
adc
icebp
push
xchg
jnp
cmc
push
aaa
pushf
cmpb
inc
testb
outsl
fneni(8087
ret
sub
jbe
incl
icebp
sbb
inc
orl
mov
jge
jmp
pmulhw
sub
aaa
sub
and
pop
push
xor
cwtl
insl
stos
in
push
sub
sub
shrl
cmp
inc
mov
loopne
mov
push
ret
mov
xor
js
gs
std
mov
mov
lahf
cwtl
jbe
sub
sbb
fidivl
sti
fistpl
ret
shll
mov
ret
outsl
loop
fsub
out
and
add
outsb
rorl
mov
cltd
xor
xor
jg
jbe
outsl
adc
scas
in
andl
jb
adc
insb
incb
cmpsb
xchg
pop
xchg
cld
rolb
ret
and
shlb
outsl
stc
in
repnz
test
pop
mov
and
xor
or
cmc
std
mov
mov
outsl
orb
lea
mov
in
xchg
mov
cmp
cld
repz
mov
ljmp
push
das
xor
lea
fcmovu
mov
data16
pop
clc
orb
mov
jge
sbb
popa
out
and
inc
fbstp
call
push
add
sub
test
icebp
mov
scas
inc
lret
add
pusha
pop
enter
int3
outsl
decl
rclb
sbb
sub
lea
or
js,pt
jmp
cld
push
lea
add
dec
addl
xlat
cmc
cmp
cwtl
jp
dec
cmp
mov
add
rorb
outsb
xchg
add
inc
sub
sbb
in
in
imul
jbe
cld
or
das
subb
jge
fbstp
ss
sahf
mov
aam
pop
cli
outsl
mov
mov
jne
jmp
loope
lods
test
loope
push
inc
add
movsb
clc
lret
push
cmp
pop
out
bound
loop
adc
imulb
jne
pop
push
in
mov
je
in
xlat
movsl
clc
mov
mov
mov
cmp
test
xchg
out
cmp
mov
jo
clc
push
cld
ret
rcl
push
jns
mov
in
ja
dec
lds
lcall
lds
jl
sti
mov
notb
cmpsl
pusha
roll
sbb
jle
cld
and
inc
aam
adc
xchg
arpl
xchg
jbe
mov
and
push
push
sbb
cmp
jb
push
in
cmp
fimuls
jb
or
push
mov
fiadds
pushf
xchg
push
jle
pop
std
push
sub
or
dec
sarl
pop
inc
negb
add
sbb
out
add
sub
test
out
and
and
add
push
test
outsb
nop
sub
leave
lock
push
fwait
cli
pushw
xor
cmpsl
adc
and
cmp
cmpsb
pop
pop
es
xlat
call
fildl
into
dec
mov
lods
outsl
jg
jp
jb
sti
rcll
ficoml
lds
xchg
mov
push
mov
dec
nop
push
je
sbb
and
aad
push
push
xor
mov
outsl
inc
sub
movsb
inc
mov
ss
mov
mov
fistpl
push
in
cmp
sbb
push
cltd
shrb
insl
stos
clc
arpl
and
bound
xchg
xchg
out
xor
sub
push
out
pop
ss
push
cld
aaa
test
and
jmp
push
xor
push
or
stos
mov
mov
sbb
sbb
rorl
or
jl
loope
dec
jb
or
or
mov
cltd
es
mov
inc
mov
sbb
xchg
push
movsb
outsb
fwait
push
lock
mov
enter
sbb
vpsrld
outsl
fcoms
xlat
jbe
mov
push
lock
and
inc
cmpsb
xchg
jns
movsl
mov
test
sbb
outsb
ja
jecxz
xor
cmp
jo
bound
pop
pop
inc
sub
push
add
sbb
add
and
jbe
inc
into
and
stc
pop
out
stos
insl
decb
fs
push
pop
inc
icebp
push
jns
mov
andl
fldl
dec
pusha
mull
jecxz
mov
lds
pop
movl
rcll
pop
icebp
cmp
out
lea
or
xchg
ror
pop
mov
pop
fdivr
xchg
ljmp
inc
adc
std
and
adc
clc
ljmp
add
rolb
clc
aas
xor
jl
mov
rolb
sub
out
andb
icebp
mov
leave
jge
aad
dec
test
gs
cmp
pop
adcb
or
add
daa
out
fstpl
sbb
push
push
cmp
adc
pop
cmp
or
test
jno
leave
lock
mov
daa
and
int
add
int
shll
mov
movsb
ss
lcall
rorb
push
xchg
mov
ja
clc
push
mov
divb
into
imul
mov
mov
mov
mov
mov
fsubl
cmpsl
pop
mov
mov
mov
cmp
notb
xor
fidivl
add
sub
sti
jo
pop
jno
jmp
fdivl
xchg
sub
test
or
scas
jl
pusha
sub
mov
popf
imul
sub
or
hlt
scas
pop
jae
les
cli
leave
jl
sub
jmp
hlt
andb
jl
and
pop
cwtl
jp
add
dec
add
mov
fisubrl
shr
pop
mov
push
sub
or
shlb
and
shl
adc
and
cld
push
sub
cmp
gs
mov
mov
add
mov
ljmp
nop
stos
pop
mov
add
pop
xor
push
cmpsl
dec
add
push
xchg
mov
sub
stc
inc
xchg
push
rcrb
inc
in
iret
adc
sub
lods
adc
loop
mov
sub
adc
and
loop
xor
test
in
sub
add
movsl
test
sbb
scas
loopne
mov
xchg
phaddd
cmp
pop
fadds
dec
mov
lods
add
pop
cmp
and
push
loope
inc
xchg
and
stos
daa
mov
push
mov
xor
mov
aad
pop
dec
out
add
testl
add
stc
mov
lsl
pop
insl
je
or
lods
lods
outsb
rol
in
or
or
dec
mov
dec
jmp
mov
adc
fstpt
pop
dec
sarb
daa
mov
in
mov
out
stos
dec
push
shll
lret
popf
sub
call
aam
sarl
fisubl
loop
adc
sar
mov
inc
xchg
stos
cmp
aad
into
or
push
dec
lock
mov
dec
inc
rolb
xchg
mov
pop
aam
cmp
pop
xchg
test
adc
sahf
adc
loop
ret
jl
push
cmpb
push
lcall
imul
xor
jl
lock
pop
or
mov
push
xchg
fldt
mov
movsb
push
jg
aaa
cwtl
dec
ss
aad
shlb
inc
pushf
int3
fwait
mov
enter
test
pop
cli
cmp
insb
dec
cmp
sbb
std
inc
mov
adcb
icebp
outsl
outsb
arpl
or
cmpsl
inc
cmpsl
mov
dec
push
mov
inc
insl
mov
je
sub
test
inc
pop
add
loopne
fwait
and
mov
xchg
pop
push
das
add
jno
imul
sbb
out
aad
lock
cmp
pop
mov
sub
mov
data16
xlat
pop
pop
or
fldcw
mov
dec
lock
cmc
hlt
push
lcall
enter
mov
or
sbb
testl
lods
jl
aam
inc
dec
mov
mov
push
decb
lahf
loope
mov
psubb
shrb
gs
imul
sub
inc
pop
pop
subb
bound
subb
aam
mov
xchg
push
add
mov
rcrb
push
push
fcmovbe
in
enter
dec
xor
inc
sti
mov
and
and
and
js
push
roll
out
sbb
insl
add
or
jbe
sbb
sub
rclb
lods
dec
addl
cmp
pop
pop
stos
dec
rcll
in
pop
andb
rcr
std
ljmp
push
aas
and
pop
mov
and
fisubrs
std
testl
sub
and
xchg
repz
dec
and
xor
movsl
shll
daa
sbb
fcmovnu
sub
mov
push
out
cmovno
in
stc
fs
ret
sub
cmovs
sub
xor
test
gs
aad
jno
sub
popa
mov
cltd
shl
loopne
daa
mov
mov
and
bound
sbb
mov
mov
inc
in
arpl
and
lea
pop
mov
outsl
mov
insl
fdivl
push
jbe
push
movsl
ljmp
fisubrl
shll
jl
inc
enter
outsl
push
push
pop
and
mov
add
int3
shll
cld
pop
aam
and
and
or
lea
mov
or
add
fidivrl
icebp
add
jecxz
push
sub
fdivs
cs
jle
push
mov
lret
icebp
jmp
hlt
test
in
inc
insb
sbb
jle
loope
or
lock
sbb
add
aas
test
add
xor
fldcw
xchg
mov
data16
in
mov
shrb
inc
cmp
add
test
jno
aad
fstl
cmp
mov
jns,pn
xchg
cmp
stos
pop
mov
xchg
test
mov
pop
fwait
ljmp
outsl
sbb
lock
jl
in
add
adc
pop
jnp
fcmovb
inc
push
cmpsb
andb
andl
shll
mov
or
fs
filds
or
pop
fcoml
fwait
mov
push
imulb
mov
xlat
mov
mov
jecxz
pop
loop
inc
sbb
mov
sub
dec
push
cmpsb
push
xchg
cwtl
mov
or
sub
test
adc
mov
in
ret
repz
xchg
outsb
or
or
jecxz
push
outsb
jmp
mov
test
mov
and
jbe
xor
or
adc
cmc
std
pop
pop
dec
mov
add
add
pop
je
fsubrp
or
mov
jg
cld
sub
adc
jmp
add
nop
dec
fstps
mov
mov
lcall
xor
push
jns
add
pop
repnz
outsb
xor
into
xor
jne
sbb
clc
adc
aaa
pop
shrb
ss
jg
popa
adcb
xchg
test
jbe
jp
jbe
stos
dec
jne
stos
jecxz
lahf
jge
pop
mov
xor
pop
fdivr
pop
jo
sbb
and
mov
jae
inc
push
ss
cmp
mov
add
es
xchg
lahf
mov
imulb
mov
or
out
call
or
loopne
out
mov
push
mov
inc
sarb
inc
mov
and
sub
adcb
cmp
outsl
jbe
and
inc
ds
test
aad
shll
fidivs
pop
adc
xor
fsub
and
in
or
jmp
dec
outsl
jle
insl
iret
mov
shll
inc
inc
adc
outsb
mov
add
cmpsb
pusha
jmp
std
jns
out
xchg
lods
subb
loop
cmp
push
fcom
into
data16
lods
cld
negl
fwait
popa
xlat
xor
push
mov
mov
mov
inc
rorb
out
adc
or
mov
adc
cmp
pop
and
ss
cld
mov
shll
mov
aam
push
ljmp
shl
push
lock
je
sub
or
inc
insl
in
sbb
outsb
inc
pop
or
lahf
pop
imul
andb
popf
jmp
xor
and
fwait
subl
nop
inc
mov
inc
jl
inc
pop
and
jmp
fcmovu
dec
and
or
dec
and
cmpb
dec
adc
popa
sbb
sbb
adc
gs
push
fidivs
jb
cltd
mov
aam
cmpb
jne
dec
mov
cmp
cmc
jg
and
cmp
fwait
mov
or
mov
jg
ret
shll
sub
out
sub
jge
rclb
jp
xor
adc
push
push
push
ljmp
test
cmp
lods
jg
addl
or
fdiv
mov
and
cmpsl
cltd
push
int
aad
in
mov
addr16
pop
add
lcall
roll
inc
cmpsl
and
mov
add
push
rolb
lock
pop
ret
pusha
lds
call
or
jge
xor
jb
jp
cld
js
pop
push
pop
cltd
cltd
add
inc
inc
pop
cltd
jns
pop
insl
fwait
pop
adc
adc
lods
push
je
mov
xor
sbb
xchg
sbb
adc
jle
adc
push
push
icebp
sti
inc
test
lods
stos
ss
enter
addb
push
out
lds
and
and
testl
aam
addl
adc
int3
frstor
mov
xor
out
add
add
push
cmp
push
adcb
mov
je
sbb
fldl
inc
ret
xlat
mov
push
cld
lock
in
subb
sub
cmp
lea
adc
inc
inc
repz
adc
push
stos
mov
xor
push
jp
mov
es
scas
sub
test
hlt
push
cwtl
mov
inc
add
out
mov
call
cmpsl
cmp
sbb
push
or
cmpsb
add
push
shl
adc
repnz
out
sbb
adc
mov
or
jae
add
jecxz
scas
shrb
mov
sub
mov
clc
popa
jp
jb
pop
dec
or
test
insl
jecxz
imul
xor
pop
mov
outsb
mov
jmp
outsl
inc
fiaddl
outsb
int
inc
das
and
sub
cmp
mov
sub
mov
das
or
xchg
fistpll
addb
and
les
jge
cmp
movsb
and
hlt
mov
xor
lock
leave
sbb
and
xor
pop
and
call
pop
cmp
test
push
fdivrl
cmp
add
fisubs
out
mov
lcall
pushf
add
outsb
in
or
inc
inc
and
outsl
and
jg
mov
ror
mov
cmp
testb
jge
ss
test
notb
in
orl
jnp
xchg
cld
sub
cs
lcall
outsb
fstpt
lds
adcl
pop
gs
inc
mov
and
pop
cli
aam
notb
xchg
test
fstpl
into
outsl
test
jns
and
push
push
inc
lea
int3
inc
xlat
in
mov
pop
mov
push
inc
cmp
lock
subb
xor
jmp
pop
cmpsb
lcall
ret
jg
sub
pop
push
aam
jb
fcoms
pop
mov
and
adc
or
mov
loope
inc
aam
cli
mov
aad
xor
cmp
jp
insb
and
fildl
cmp
mov
data16
das
hlt
repz
in
sbb
lods
push
mov
mov
add
pop
push
xor
fst
pop
mov
cmp
aam
xor
xor
mov
out
cs
mov
sub
dec
aad
dec
push
enter
addl
lahf
ljmp
xchg
push
jle
and
insl
mov
sbb
xchg
mov
xchg
pushf
arpl
add
int3
mov
fidivrs
int3
sbb
adc
ljmp
fstpl
shrl
aas
or
xchg
or
mov
ret
lret
or
or
out
and
pop
or
je
and
je
sub
jne
mov
in
mov
jns
adc
mov
jp
xchg
inc
movsb
test
fstpt
lods
lods
stos
std
fiadds
loope
das
int
jo
mov
insl
or
std
or
sub
sub
or
idivb
mov
cmp
xor
out
call
stos
mov
jge
pop
and
and
pop
js
sub
push
scas
jae
outsl
outsl
clc
insl
jl
mov
add
cltd
or
inc
push
or
test
clc
cmp
mov
jecxz
inc
push
dec
adc
fadds
mov
pop
sahf
jne
add
aam
or
fcoms
shlb
test
add
and
and
mov
jle
jo
ja
add
sub
repz
jae
out
pop
test
cmp
ljmp
or
push
cmp
cmp
push
jle
xor
pushf
dec
adc
jl
sbb
loope
pop
dec
push
ret
jmp
in
push
mov
mov
cmpsb
mov
and
popa
xor
sub
shlb
popa
and
add
cmp
inc
mov
std
mov
das
nop
lods
cltd
add
dec
adc
inc
sti
inc
push
ss
rcll
cmpsb
hlt
sub
mov
stos
pushf
and
xchg
jbe
mov
ret
imul
mov
sbb
mov
or
mov
fs
mov
lods
add
cmp
xor
or
pop
jecxz
sbb
out
xor
mov
jp
mov
or
inc
inc
outsl
push
insb
xor
or
call
xchg
sub
pop
loop
loope
pop
outsl
push
adcb
xor
inc
sbb
jo
and
cmp
add
addb
mov
push
insb
or
lods
add
ret
dec
ret
or
mov
fidivrs
xor
jne
push
sub
test
lods
push
loopne
jecxz
add
mov
loopne
hlt
add
push
roll
fcmovbe
add
leave
dec
pop
xchg
xchg
pop
sub
mov
jbe
rcrb
orl
mov
clc
and
das
sti
jbe
clc
das
rclb
pop
xchg
jbe
sub
fidivl
cld
mov
fdivl
ljmp
stos
fwait
lcall
in
pop
or
push
outsl
mov
ljmp
or
call
jne
ja
lea
push
out
xchg
imul
test
mov
cmpsl
jge
mov
or
faddp
cmpsb
dec
and
jb
dec
sbb
ds
popl
inc
loopne
xchg
sub
push
inc
incb
mov
inc
lret
addl
ljmp
jb
sub
hlt
es
in
clc
dec
pop
xor
mov
pushf
pop
loopne
or
sub
or
jg
dec
scas
mov
cmp
mov
and
aam
outsl
cld
mov
test
add
js
loope
dec
mov
inc
adc
and
imul
xchg
rorb
inc
inc
or
pop
mov
add
ffreep
test
pusha
das
jno
stc
push
movhps
dec
lods
jp
icebp
xlat
lock
mov
je
xor
in
mov
addl
push
lock
dec
das
sbb
and
les
push
jle
push
orl
ret
es
fidivrs
daa
and
cmpsb
out
jecxz
xor
scas
dec
jg
dec
jne
data16
ja
test
xchg
push
sub
sub
adc
shll
mov
movb
xchg
push
cmp
inc
je
lea
mov
inc
test
inc
push
fisubrs
cld
dec
inc
pop
lahf
fcmovne
add
xor
call
xor
fwait
orl
adc
aam
lea
dec
jl
mov
test
pop
add
adc
test
clc
pop
les
dec
fstps
ret
or
lods
add
pop
cltd
inc
lods
into
ljmp
rolb
push
dec
into
in
mov
int
xlat
pop
jmp
add
imulb
jne
jno
leave
push
lea
push
inc
and
pop
or
mov
xor
nop
scas
ss
lods
add
fcompl
mov
int3
call
movsl
out
cmc
push
push
mov
inc
pop
jge
add
hlt
cmp
std
dec
jns
mov
adcb
jne
sbb
xchg
or
cwtl
mov
scas
scas
outsb
add
hlt
push
jno
cli
mul
aad
jbe
xlat
mov
icebp
adc
adc
and
bound
insl
xlat
leave
out
pop
add
aas
mov
mov
and
mov
dec
mov
addr16
jo
add
fistpll
mov
mov
out
jmp
and
xchg
push
cmp
and
aad
or
xor
jle
stos
ljmp
lahf
mov
mov
or
adc
mov
aad
push
cli
inc
movsl
mov
loopne
or
aam
or
jne
fcoml
add
mov
and
mov
stos
dec
loopne
mov
jge
shlb
jns
cli
and
mov
test
aam
mov
lcall
nop
fbstp
push
les
jmp
imul
out
jne
cli
or
je
shlb
add
das
inc
xor
mov
rclb
push
test
stc
dec
sub
adc
sbb
lret
orb
and
adc
push
adc
jp
repnz
sbb
fimull
cwtl
mov
xchg
cmp
inc
pop
cmpsb
scas
pop
xor
or
push
pop
inc
jl
sbb
adc
mov
clc
int
push
lds
cld
jo
pop
aas
or
pop
mov
push
lods
movsl
or
scas
fiaddl
mov
gs
push
loopne
mov
es
cmp
ret
pop
hlt
addl
fstl
call
mov
mov
sbb
pop
pop
mov
adc
enter
push
pop
or
lds
dec
or
mov
add
cmp
mov
adc
rcr
arpl
ja
mov
sub
cmp
dec
or
jmp
mov
cld
jae
fsubs
mov
aad
add
call
mov
adc
cltd
je
rolb
out
mov
inc
mov
mov
or
in
xchg
xor
call
movsl
leave
data16
dec
inc
test
es
mov
or
jge
arpl
xchg
pushf
cld
mov
pavgb
pop
adc
adc
adc
jmp
adc
jp
pop
stos
out
lret
cmp
test
imul
mov
dec
fucomip
arpl
mov
mov
cmp
leave
in
xor
dec
fistps
std
xor
sarb
cmp
and
aad
out
and
sbb
adc
push
sti
ret
sub
test
cmpsb
fiaddl
sbbb
shr
mov
leave
xchg
insl
inc
and
scas
xlat
ds
mov
sub
test
addr16
cmp
and
push
sti
lods
divl
dec
shrl
mov
mov
adc
mov
es
mov
inc
aad
sbb
into
cs
ficoms
out
fisubrs
insb
push
jno
testl
or
jnp
sbb
fcomps
pandn
cli
and
inc
dec
gs
mov
lds
inc
movb
inc
or
shlb
jbe
ds
cmp
out
repz
jae
ljmp
jb
arpl
addr16
scas
add
shll
xchg
test
ja
adc
iret
xor
mov
loop
or
lret
or
stc
and
call
movsb
imulb
add
push
mov
aad
mov
loope
pop
or
cmp
pop
icebp
mov
fisubl
push
adc
adc
inc
inc
lahf
jge
xorb
stos
push
mov
inc
or
inc
add
fldl
ret
stos
lods
jle
mov
out
mov
int
mov
jo
fwait
movsl
push
and
inc
decb
out
xchg
lds
pop
inc
dec
jecxz
or
fistps
push
mov
testb
in
fmull
mov
popf
xor
push
add
ja
jl
pop
push
les
cmp
and
sbbb
and
mov
inc
stos
icebp
ret
aam
and
inc
lahf
loope
mov
xor
pop
add
ror
jbe
inc
adc
mov
in
jb
fisubs
fisubs
popf
aam
pop
addb
xchg
roll
inc
mov
fldenv
lock
inc
lcall
rol
mulb
mov
stos
jecxz
fisttpll
frstor
in
mov
fimull
insb
cmpsb
loop
or
dec
sub
dec
lods
push
pop
mov
out
pop
mov
jle
mov
cltd
in
leave
movsb
mov
mov
aaa
jle
test
cmp
dec
mov
mov
mov
or
sbb
pop
inc
sbb
popf
stos
out
sti
or
pop
mov
mov
mov
das
pop
mov
sbb
xorl
jbe
jns
mov
and
mov
inc
xchg
mov
add
nop
adc
hlt
add
dec
clc
ss
ljmp
popf
sub
dec
es
adc
ss
pop
sub
sub
ljmp
nop
es
fidivrs
sahf
pop
mov
mov
orb
sbb
xchg
mov
hlt
push
inc
sbb
insb
lds
xchg
push
jno
outsl
into
fcomps
scas
or
inc
daa
or
push
and
pusha
rcr
jle
call
dec
dec
call
fwait
add
sbb
mov
sub
js
inc
sub
sbb
notb
mov
dec
or
or
add
insb
push
and
jp
or
insb
and
xor
lahf
cmpsl
pop
rolb
fucomi
sbb
add
ret
push
xchg
shlb
jl
test
lods
dec
dec
imul
in
int
lock
cmpsb
arpl
lds
test
push
dec
dec
fldt
js
xorb
and
rcr
xchg
mov
inc
jb
dec
loopne
jmp
aam
das
lret
loop
lret
call
in
dec
jne
sbb
sbb
add
mov
mov
rcrb
jl
iret
rol
and
or
mov
mov
mov
fisubrl
push
adc
mov
test
jl
into
sahf
push
adc
pop
out
leave
aaa
push
call
clc
sub
push
or
mov
jle
push
pushf
and
aas
xchg
movsl
jl
cli
pop
inc
cmp
xchg
or
dec
stos
push
jb
lea
dec
cmpsb
sbb
out
mov
pop
push
dec
push
or
dec
xchg
aam
shr
aam
arpl
js
ficoms
iret
test
xor
ljmp
pop
mov
xor
ret
mov
je
cmpl
pop
mov
sbbb
push
and
add
jmp
sbb
pop
mov
inc
test
sbb
push
loope
or
fcomps
data16
iret
add
jne
mov
jno
sbbl
pusha
jno
lea
or
sub
or
das
aad
xchg
lods
call
rolb
sbb
inc
pushf
push
inc
add
dec
aad
insl
sahf
sahf
xchg
xchg
rorl
aad
adc
and
aas
outsb
cmp
jo
and
rcrl
rcr
push
xchg
cs
outsl
jno
and
cmpl
int3
xchg
sub
cli
mov
out
daa
test
cmp
test
aam
shll
add
pop
js
mov
jp
mov
push
loop
pop
ja
mov
push
inc
dec
fcoms
leave
sbb
cmp
pop
cmp
mov
or
pushf
scas
sub
sbb
push
dec
insb
call
outsb
and
or
add
add
or
xor
xchg
dec
mov
jb
xchg
mov
loopne
mov
dec
les
and
jg
aas
mov
hlt
inc
enter
jl
mov
adc
and
push
mov
stos
xorb
adcl
lods
mov
es
pushl
push
xchg
and
add
add
scas
adc
xchg
adc
es
rcl
or
outsb
lret
add
subb
mov
mov
lock
in
push
pop
pusha
xor
xchg
cld
adc
inc
xchg
out
imulb
sub
xor
in
and
divb
fistpl
ja
dec
lods
pop
sbb
in
or
dec
jecxz
push
scas
push
mov
sbb
or
mov
call
fiaddl
xchg
ljmp
rclb
jo
lods
int3
test
lret
ss
subb
je
pop
mov
sub
adcl
mov
push
adc
xchg
fiadds
and
aaa
dec
sub
pushf
and
mov
and
jmp
loopne
push
imul
stos
jbe
jecxz
inc
incl
push
add
and
popa
sbb
lea
or
push
popa
or
mov
ja
fs
int3
pop
and
pop
cs
or
and
sahf
and
mov
xchg
sbb
outsl
rcrl
pushf
fdivs
outsl
or
int3
nop
pop
add
jno
jo
loope
push
pop
fsubs
shl
or
push
sbb
adc
push
xor
sub
sbb
ret
ret
inc
je
icebp
and
arpl
adc
inc
lcall
fcmovnu
xchg
lods
jmp
pushf
ljmp
adc
mov
xchg
jmp
test
fbstp
pop
cmp
outsb
mov
std
inc
xor
jg
xor
mov
xor
and
mov
mov
mov
dec
fiaddl
cli
outsl
les
mov
insb
inc
leave
leave
dec
inc
fwait
lcall
sbb
add
xor
sbb
test
in
loope
lret
xor
jo
push
repz
loope
mov
mov
inc
das
jne
inc
loop
cmp
xchg
aad
fadds
mov
or
pop
push
lcall
cmp
fimull
out
and
adc
out
int
dec
inc
rcrl
and
int
and
sub
xor
in
push
mov
push
push
ds
mov
or
je
pop
push
xor
xchg
pop
xor
fcompl
mov
in
mov
adc
and
ficompl
and
pop
or
mov
insl
mov
push
pop
flds
iret
sub
lret
sahf
das
clc
mov
add
movsl
mov
inc
mov
test
mov
sbbl
push
xchg
mov
subl
mov
fs
inc
xchg
sub
or
cld
pop
rcll
mov
icebp
ja
xlat
out
jmp
les
lcall
icebp
pop
ffree
icebp
subb
mov
mov
mov
mov
mov
jp
clc
adc
pusha
add
mov
imul
pop
mov
out
sbb
cmc
mov
mov
pop
es
pop
testb
push
jne
sub
push
lods
adc
clc
vmovdqa
xchg
insl
add
mov
dec
cltd
cmp
nop
sti
lods
push
lret
movsb
daa
arpl
adc
sub
clc
daa
push
das
push
cmp
test
repnz
or
mov
ljmp
and
dec
jge
movsl
push
mov
xor
adcb
call
push
cmpsl
add
lods
in
and
mov
pop
add
mov
bound
jg
jp
jno
push
iret
inc
sub
cmp
inc
jg
test
imul
outsl
cwtl
and
out
rorb
mov
stc
es
mov
push
pop
fimull
sub
lds
xor
in
sahf
test
lahf
xor
mov
popa
sub
minps
arpl
cld
pushf
lea
popa
call
sub
mov
ss
pop
xchg
xlat
add
mov
mov
aam
mov
inc
mov
add
and
lock
sti
pop
in
cmp
fists
pusha
test
jne
je
push
push
jmp
cvtdq2ps
aas
xchg
mov
loope
stc
test
xchg
pop
add
cmp
dec
dec
movsb
add
push
pop
outsb
sahf
push
push
rol
push
dec
rol
outsb
mov
adc
outsl
mov
inc
mov
rolb
pop
pop
rorb
rol
cmp
mov
or
sbb
or
stc
add
mov
sbb
or
popa
jne
mov
ja
mov
fstl
adc
fdivr
jbe
add
add
cmpl
dec
mov
push
mov
imul
jb
in
push
xchg
and
jg
mov
fistpl
and
fwait
cmp
or
or
mov
or
ret
fidivrs
inc
jmp
cmp
jmp
mov
xchg
leave
ljmp
adc
fwait
call
ljmp
pop
inc
inc
mov
or
jle
mov
icebp
mov
movntq
out
andb
xchg
mov
test
popa
push
xor
sub
jmp
or
add
lock
popf
lods
mov
mov
inc
dec
popf
ljmp
pushl
jecxz
scas
fimull
jmp
fnsave
add
pop
out
stos
or
insl
sub
dec
daa
jl
pop
adc
lods
cmpsl
fldt
sbb
sbb
inc
mov
das
mov
stc
adc
rol
roll
aaa
pop
clc
call
mov
or
adc
out
jns
add
loop
xor
jbe
popa
into
inc
mov
dec
test
jo
jo
mov
xchg
sti
cld
call
orl
testl
stos
add
jns
loop
add
sub
call
cmp
sub
hlt
incl
push
add
xor
and
lock
pushf
test
fwait
pop
jg
shlb
clc
ljmp
aaa
ja
add
jo
mov
mov
add
cld
enter
insb
test
sub
rcrl
pop
iret
in
xor
xchg
std
sbb
mov
sbb
les
push
sub
mov
jge
xchg
pop
and
sbb
jbe
aas
xchg
mov
inc
dec
inc
inc
sbb
jbe
push
push
cmp
sub
adc
bound
mov
and
xor
mov
mov
cmp
xchg
inc
enter
sub
testb
push
roll
je
addl
adc
jge
ret
pusha
mov
jbe
mov
sbb
orl
shll
xchg
adc
stos
pusha
mov
add
jbe
repz
sbb
cmpsl
fdivrp
std
pop
mov
pop
out
sbbb
stos
cmc
out
or
jecxz
mov
ja
xor
pushf
out
pop
sub
movl
cltd
hlt
popa
js
test
fcompl
pop
repnz
pop
jg
scas
mov
scas
int3
sbb
sbb
mov
xor
adc
push
aam
adc
push
fdivl
outsb
adc
stos
adc
je
je
incb
aam
and
cmp
leave
test
mov
mov
push
insl
aas
or
mov
add
mov
dec
pop
push
pop
rcll
jg
and
jne
add
pop
mov
aaa
out
std
fcoms
jne
jmp
sahf
push
pop
ds
push
pop
and
loope
cmc
pop
xchg
mov
push
jg
jne
and
icebp
stc
aaa
adc
stos
inc
nop
cmp
mov
mov
loopne
testb
outsl
and
jle
cmpsb
scas
roll
cld
mov
adc
faddp
pop
icebp
jge
sbb
jmp
lret
cmp
jno
aam
xadd
jae
jbe
fcmovu
inc
int3
dec
and
mov
lret
cmpsb
pop
jp
pcmpeqb
xor
clc
ret
jnp
xchg
jb
js
xchg
ss
popa
subl
and
sbb
int
mov
lret
mov
or
adc
int
leave
sub
rol
in
mov
nop
cmpsl
pusha
cmp
cltd
popf
cmp
outsb
lds
mov
push
cmp
push
and
dec
xchg
andb
sbb
loop
inc
and
lds
orl
cld
cmp
mov
cli
test
cmc
xchg
mov
mov
orb
repz
ljmp
daa
shlb
ljmp
inc
push
add
out
fsubrl
mov
clc
dec
or
and
ds
and
andb
fs
and
fstpl
xor
push
xchg
adc
loope
inc
mov
jne
mov
pop
orb
fidivs
pop
outsb
sub
mov
addr16
fucomp
lock
sub
sub
data16
mov
dec
mov
sbbb
jmp
ljmp
pop
fiaddl
jl
pop
push
imul
cld
mov
jge
or
pop
popf
cmp
mulb
pop
cli
rolb
and
add
les
in
sub
lods
xchg
jbe
inc
cmp
adc
dec
pop
js
mov
decb
subb
pop
add
lock
push
and
jns
cmpsb
loopne
rolb
mov
lock
shlb
dec
mov
fs
add
call
pop
sbb
and
mov
outsl
test
push
push
mov
add
mov
jg
inc
gs
add
inc
in
jecxz
push
loopne
mov
and
orb
mov
call
adc
cmpsl
inc
push
xchg
jge
orl
test
sbb
ds
xor
xchg
sti
and
mov
push
in
sbb
std
movsl
aaa
push
jno
neg
mov
adc
repnz
aaa
push
test
lret
sub
xchg
shll
mov
sub
mov
lds
push
mov
rcr
pop
sub
mov
sbb
stos
in
lods
push
clc
lods
adc
fcmovnb
or
lds
mov
ret
add
mov
cmp
ljmp
xorb
in
and
mov
push
das
mov
and
shr
fists
and
mov
push
push
lea
mov
xorl
and
sbb
mov
movsb
mov
jmp
cmp
lret
mov
lea
lods
stos
clc
movsl
sub
lcall
xchg
jno
mov
lods
lea
test
sbb
cmc
fdivrp
mov
xor
aaa
push
sbb
inc
xchg
stc
adc
lods
push
ret
fdiv
pop
in
adc
shll
cmp
aas
mov
mov
test
push
mov
inc
sti
dec
push
sti
ret
add
dec
rorl
neg
pop
call
jnp
dec
lret
leave
shll
mov
orb
insl
mov
or
mov
push
cs
int3
cmpsb
data16
dec
loope
mov
outsl
mov
ret
cmp
dec
push
sbb
jge
adc
mov
inc
dec
lea
jmp
push
in
adc
dec
ja
js
popa
sub
popf
loopne
mov
adc
xor
sbbb
repz
xchg
mov
xorb
call
mov
andps
pop
sbb
pop
decl
js
dec
cmp
popf
bnd
mov
or
push
mov
ret
push
cltd
mov
clc
out
or
push
in
sahf
adc
movb
mov
push
mov
jo
xor
or
push
mov
and
sub
push
sahf
push
mov
lods
fimull
in
dec
enter
outsb
out
inc
outsl
daa
adc
inc
jp
push
mov
sub
bound
ret
std
inc
out
loop
dec
push
push
jl
into
xorl
push
add
push
push
lock
inc
andb
push
daa
push
or
clc
mov
les
fldcw
fsubr
jl
mov
mov
jno
add
adc
xor
fcomip
loopnew
push
push
push
hlt
lcall
mov
adc
mov
xor
dec
inc
outsb
aam
aaa
mov
push
mov
icebp
aas
and
pop
and
mov
sub
dec
jne
sub
mov
enter
push
mov
ficomps
push
bound
mov
jo
lods
fiaddl
lcall
rcrb
scas
loope
ds
mov
and
xor
mov
or
das
orb
pop
dec
xor
insb
pop
xchg
lcall
stos
and
in
xor
pop
pop
pop
lcall
in
jg
sar
movsl
fcmovnb
add
push
mov
mov
add
lret
jo
xchg
dec
lds
fmul
popa
add
cmp
arpl
dec
jne
push
les
int3
and
push
sub
lock
addr16
pop
pop
adc
imul
mov
aas
loopne
fildll
pop
fidivs
xor
arpl
ljmp
scas
pop
or
cmp
push
mov
movsb
cltd
inc
or
lret
insl
jecxz
sub
shrl
xor
insl
out
and
push
ret
fs
fadd
testb
sub
roll
pop
cmp
movsl
out
sub
call
inc
inc
fwait
andnps
dec
mov
or
dec
in
loop
flds
xlat
inc
dec
shl
pop
rorb
nop
fs
test
stc
jns
inc
movsl
inc
pushf
and
rep
push
cmp
sbbl
jecxz
cli
add
cmpsb
mov
lds
xchg
or
outsb
aaa
sbb
or
fsts
jne
xchg
inc
orb
pop
push
rolb
add
xchg
dec
mov
idivb
std
insb
add
xor
out
in
jg
insb
inc
xchg
adc
add
lret
sbb
jmp
imulb
cmp
xor
pop
filds
insb
popf
inc
xor
or
fldenv
inc
add
call
xchg
mov
sub
ret
adc
mov
push
scas
ret
sbb
out
cli
scas
roll
xlat
mov
or
and
ret
sub
lret
cmpsl
pop
sahf
pusha
xchg
mov
mov
or
dec
pop
sub
push
xchg
mov
mov
mov
jmp
icebp
adc
inc
mov
jmp
inc
sub
sub
ret
inc
rolb
push
std
jbe
pop
jno
lea
dec
cmp
les
and
nop
shlb
aaa
mov
inc
jbe
or
out
mov
xchg
fs
clc
pushf
rcrb
mov
add
sub
lea
rorl
sub
out
or
test
mov
stos
loope
js
mov
cs
sbb
in
pop
jne
adc
xchg
adc
mov
mov
mov
inc
inc
inc
xchg
test
mov
inc
std
ss
daa
ljmp
jp
cld
inc
rorb
adc
divl
or
push
ljmp
inc
ficoms
and
test
pop
lods
stc
xchg
add
test
mov
jo
inc
int
outsl
addl
inc
adcb
gs
dec
lea
pop
repnz
sub
stos
jnp
sti
sbb
sbbl
fs
jge
sbb
fs
iret
inc
mov
jno
je,pn
enter
negb
enter
add
mov
push
in
scas
movsb
push
cmp
push
outsb
aas
icebp
repz
ljmp
mov
push
loopne
add
aas
mov
cmp
inc
cli
scas
movsl
inc
inc
fidivrs
sub
jecxz
loop
iret
outsl
mov
les
push
pop
push
aas
xchg
es
mov
add
xchg
fldt
incl
lea
or
push
nop
mov
adc
enter
sbb
mov
loop
dec
add
cmp
push
xor
cmp
loope
rcrl
mov
cwtl
test
cmc
insb
dec
outsl
ret
pop
pop
inc
add
out
sub
xor
lods
adc
pop
test
push
into
add
inc
mov
std
add
dec
nop
jb
inc
iret
stos
subb
xorb
mov
add
adc
mov
jle
inc
jle
loop
mov
push
fidivrs
sarb
lcall
je
sarl
xor
icebp
sbb
sti
test
nopl
insl
popf
pop
mov
ret
fstps
inc
das
sub
sbb
movsl
mov
ret
jmp
addr16
bound
mov
pop
insl
and
mov
ljmp
and
mov
pop
mov
jle
pop
sti
cmp
jmp
test
and
aam
out
push
stos
mov
push
hlt
fildll
mov
xlat
cmpxchg
lea
arpl
loop
iret
mov
mov
imul
stos
je
xor
lret
orb
mov
inc
jge
shl
push
jg
inc
mov
xor
test
fwait
xor
mov
subb
xchg
subb
adc
les
push
sub
jg
rcl
mov
ljmp
mov
clc
test
popf
loope
ret
mov
jo
cltd
dec
mov
pop
and
xor
lods
xchg
inc
mov
pop
out
icebp
push
or
or
pop
adc
adc
fs
cli
xchg
addr16
outsl
and
xor
cmpsl
and
sbb
pop
jecxz
outsl
pop
cmpsb
inc
mov
icebp
repnz
int
mov
lock
pushf
out
adc
idivl
cltd
outsb
outsb
insl
mov
adc
sub
mov
cmp
cmc
jl
and
add
push
dec
les
xchg
mov
jp
jb
sub
or
pop
imul
mov
icebp
sbb
push
jl
cmp
pop
call
out
outsb
mov
fmull
jmp
mov
outsl
loopne
stos
mov
add
gs
push
mov
add
out
aam
pop
ds
or
mov
lret
mov
mov
mov
mov
cmp
test
pop
push
je
fdivs
or
sub
dec
and
jne
in
add
test
mov
xchg
adc
testb
adc
lock
jle
sub
enter
inc
lock
das
testb
movsl
and
out
cmp
jo
or
add
sbb
mov
add
inc
xchg
rclb
pop
aas
in
xchg
xlat
sbb
in
xchg
xor
pop
sbb
inc
popa
in
daa
test
and
movsl
sub
in
pop
lock
dec
xchg
dec
test
icebp
adc
push
sahf
mov
and
sub
aam
orl
push
ret
xor
in
and
test
lret
fmulp
sbb
cmp
adc
mov
xlat
cmpsb
pop
popa
or
add
mov
push
sbb
sbbl
leave
ss
ret
push
movsl
dec
movsl
inc
push
jbe
lea
dec
inc
mov
add
jmp
push
lock
imul
jge
insl
daa
xchg
out
loop
lods
icebp
dec
mov
inc
fsubs
pop
scas
test
enter
clc
shlb
popf
and
fs
fistl
dec
push
movsb
inc
cli
in
or
pop
or
mov
dec
filds
or
outsl
leave
inc
mov
sarl
insb
mov
push
iret
add
dec
dec
iret
xchg
jge
sbb
loop
pop
in
and
icebp
test
pop
rclb
adc
add
int
stos
pop
or
sub
pop
push
mov
cmc
add
test
adc
jnp
push
sub
bound
imulb
mov
mov
and
add
and
cwtl
jl
mov
ror
xor
jb
repz
push
les
sub
lret
test
cmp
xlat
loope
not
sbb
cmp
lods
jne
mov
xlat
jnp
inc
dec
push
adcl
dec
shlb
out
das
xor
icebp
ret
cmp
leave
jno
aaa
rclb
mov
push
sub
dec
stos
movsl
ret
push
outsl
test
xchg
mov
jle
pop
mov
xchg
mov
jmp
fstl
xor
ds
pop
adc
sub
xchg
pop
jo
sbb
call
inc
addb
jae
idiv
outsl
dec
adc
adc
in
pop
push
mov
xchg
jnp
add
mov
js
xor
mov
lock
les
jbe
cmc
test
push
cmp
js
cmp
mov
fcom
mov
imul
mov
cmp
or
outsb
aam
aaa
and
cwtl
push
sbb
jg
push
data16
or
pop
insb
xchg
xchg
clc
les
ret
insl
inc
pop
cltd
sub
movsb
and
aad
loopne
mov
out
rcll
subb
insb
mov
into
into
mov
and
sub
hlt
mov
mov
add
push
js
scas
push
sub
sbb
push
lds
sub
sahf
shrb
out
inc
mov
lods
xchg
mov
test
popf
jg
push
int3
xchg
inc
mov
icebp
inc
leave
insb
sbb
cmpsb
jecxz
mov
ss
xchg
movsb
adc
xor
dec
sub
jg
mov
iret
jo
mov
das
rclb
mov
sub
ficompl
pop
shl
orb
xchg
pop
roll
mulb
xor
aaa
ds
add
xor
inc
imul
xchg
xchg
xorb
ret
sti
lods
xchg
lods
andl
cli
add
je
scas
adc
cmp
fnsave
cltd
jmp
xor
inc
mov
icebp
lods
pop
xchg
test
pop
mov
pop
test
les
rorl
lock
std
dec
xchg
inc
jnp
mov
insb
nop
or
cmp
cld
or
rorb
lock
movb
aad
stos
dec
mov
mov
aaa
add
xchg
add
std
call
ljmp
shl
mov
cld
pop
sbb
cmpsb
cmp
sarb
ret
jmp
adc
outsb
mov
hlt
es
das
repz
ret
push
mov
shld
fcmove
adc
pop
add
xchg
mov
mov
inc
aaa
add
cmp
fstpl
unpcklps
adc
ja
stos
jmp
lds
mov
xor
stos
xchg
inc
es
std
jae
das
mov
lock
inc
popf
movsb
ds
add
popa
or
popa
adc
sbb
rol
jne
mov
outsl
mov
cmp
add
repz
sbb
ljmp
nop
lea
jno
sbb
call
clc
stos
add
mov
jle
movsl
jb
xor
mov
add
in
sarb
faddl
mov
jl,pn
stos
movsl
push
aas
push
mov
or
sbb
lret
or
ficoml
pop
mov
repz
mov
and
sub
ja
inc
sub
xorb
jge
mov
jge
or
mov
rcll
mov
movb
fwait
subb
cmp
cld
pop
and
lds
jl
push
push
or
test
mov
incl
pop
jmp
imul
push
loopne
xchg
cmp
loopne
xor
gs
dec
pop
outsb
mov
bound
ds
gs
or
xchg
adc
rclb
adcb
imulb
test
and
call
fsubrl
repz
insb
push
jg
loop
xchg
scas
stos
das
adc
daa
xchg
mov
icebp
insl
std
xor
sbb
aad
ss
fs
mov
dec
add
jmp
xor
sarl
push
jo
pop
cmovo
dec
pusha
add
push
mov
dec
pop
and
outsl
out
add
ljmp
cmpsb
inc
push
in
cmc
and
xchg
push
movsl
xchg
sbb
mov
and
cld
stos
repz
push
pop
mov
inc
lock
lea
jle
push
lods
lock
push
test
stc
xor
in
stos
mov
pop
test
out
test
outsl
mov
mov
or
shr
dec
imul
loopne
xor
push
call
insl
in
fwait
pop
mov
rcrb
pop
cmpsl
mov
das
aam
mov
adc
mov
xor
xchg
mov
sbb
and
shl
insb
ret
pop
jl
cwtl
out
push
gs
inc
cmpsb
popf
push
xor
jle
test
stos
icebp
cli
jne
sbb
mov
xor
rcrb
movsl
ljmp
loope
push
stos
jne
subb
xchg
out
enter
mov
push
jo
std
sub
adc
adc
frstor
push
lret
xlat
jecxz
fnstcw
and
xor
adc
jno
cli
xor
lcall
lcall
sub
cmp
ret
adc
sub
lock
mov
sar
sbb
pop
xchg
mov
out
xor
js
cmc
popf
clc
popf
aad
ja
frstor
rcrb
mov
bound
loopne
in
cmpsb
adc
shlb
aam
jl,pn
jae
xorl
pop
bound
sub
fsts
or
test
in
sub
decl
ljmp
ds
add
pinsrw
test
push
lds
add
aaa
mov
test
mov
dec
in
xchg
mov
jp
xor
push
int3
pop
mov
data16
xorb
push
cmp
loopne
test
add
ds
outsb
outsl
cmp
adc
data16
mov
lea
loope
and
scas
jmp
mov
popf
pop
add
mov
call
mov
cmc
pop
dec
sbb
mov
cmc
test
shrl
cld
lods
or
sti
cmp
out
jb
loopne
notl
sbb
mov
mov
inc
mov
adc
or
xchg
mov
lahf
or
jno
sbb
push
mov
sbb
jecxz
jmp
mov
mov
cltd
add
adc
outsb
sub
sub
fidivs
stc
call
mov
out
sahf
test
jl
subl
mov
or
inc
inc
dec
mov
cltd
sbb
fsubr
ret
dec
push
mov
add
das
xor
xchg
data16
insl
jp
sub
or
in
sub
aaa
sti
push
push
ss
mov
xchg
adc
xor
xor
imul
jns
push
and
fstpl
mov
scas
lods
push
adc
out
int
inc
mov
stos
dec
ret
add
mov
or
daa
pop
test
mov
mov
mov
jge
jno
sbb
jno
jg
sbb
lods
push
mov
adc
pop
add
push
push
sbb
sti
xlat
mov
std
push
cmc
in
jge
dec
lcall
outsb
xorb
add
fs
pop
xor
jmp
test
cwtl
mov
das
jne
das
and
xor
in
insl
cmp
outsb
fs
into
insl
imul
clc
add
push
pop
sub
out
aad
adc
mov
dec
mov
pop
insb
addr16
mov
pop
arpl
mov
pusha
repz
aas
push
cmp
cmc
aaa
cmc
adc
cs
mov
loopne
in
lret
stc
mov
add
ja
pop
sbb
add
and
push
insb
xorb
lea
and
and
outsl
xchg
sbb
hlt
and
mov
or
adc
fldt
ja
aam
cmp
das
aam
std
sub
movsl
and
es
dec
in
push
rorb
lret
add
mov
lahf
or
push
testl
mov
pusha
andb
inc
push
add
and
jo
jae
lahf
jp
lock
push
inc
outsl
mov
cmc
push
movsb
rcrl
fbstp
cmp
jp
frstor
mov
add
lea
mov
insl
xchg
push
cwtl
cmp
loope
sub
sub
jae
dec
leave
xor
filds
addb
sbb
jp
xchg
add
hlt
adc
insl
aam
push
adc
mov
mov
jl
incl
dec
cmc
xchg
hlt
mov
lods
mov
outsb
push
push
adc
stos
add
mov
sub
fs
jmp
orb
inc
xchg
insb
push
mull
es
pop
in
inc
les
fimull
mov
fistpl
insb
in
idivb
inc
xor
xchg
xlat
sub
aaa
adc
ljmp
lods
into
mov
lcall
mov
inc
add
dec
int
xchg
stos
loop
insl
clc
fwait
stos
jbe
cmp
xchg
pushf
xchg
imul
into
inc
dec
sbb
dec
lods
jo
loope
subb
xor
cmp
hlt
mov
loope
cmp
inc
mov
cmp
repz
jae
sub
xchg
mov
je
pop
and
sub
mov
jge
subl
xchg
xlat
leave
pop
pushf
repz
imul
hlt
sbb
jg
out
ds
clc
mov
dec
xchg
out
cs
and
pop
jl
pusha
sbb
mov
pop
outsl
cli
push
xor
outsl
or
cmpsb
and
jo
ja
loopne
inc
jge
or
nop
jne
xchg
or
xlat
sub
add
xlat
cmpsb
repz
sbb
mov
pusha
test
or
mov
popa
imul
shll
cmp
jno
fbstp
inc
mov
xor
scas
mov
out
in
pop
push
sub
add
push
adc
pop
rolb
sbb
jns
dec
lods
xchg
jns
dec
xor
adc
and
fimull
rcrb
in
mov
out
faddl
mov
jl
lcall
xlat
outsb
test
adcl
pop
mov
movsl
or
int
clc
pop
lods
dec
cmp
xchg
loopne
adc
lret
sub
xchg
fisubl
cmp
pop
push
jb
jbe
call
rolb
repz
cwtl
pop
clc
insl
inc
push
fld
xorb
mov
push
jbe
cmp
inc
cmc
cmc
ret
rclb
mov
and
push
cld
mov
adc
ret
sbb
fs
jne
arpl
enter
sub
daa
fildll
sbb
insl
mov
cmp
push
adc
xor
jp
mov
fstpt
sub
mov
jmp
xchg
mov
xchg
cmp
jo
mov
inc
arpl
subps
push
fdiv
cmp
push
add
andl
sub
cld
jae
jl
push
push
cli
pop
xchg
test
inc
rorl
enter
daa
ljmp
adc
dec
mov
rcrl
push
in
fldenv
mov
test
fwait
xchg
xor
loop
cmp
adc
in
pop
aaa
loopne
lods
mov
inc
ds
cmc
out
cwtl
pop
push
test
push
xor
mov
sbb
xchg
fdivl
mov
or
cwtl
fs
jl
insl
cli
mov
pop
mov
jne
push
add
and
std
pop
jo
xchg
icebp
rolb
pop
sti
insl
jmp
scas
sbb
lea
push
addb
stos
mov
sub
push
sbb
pop
out
xchg
aaa
leave
and
and
sub
xor
mov
jbe
adc
std
shlb
loop
mov
sub
std
insb
or
xchg
lahf
dec
icebp
push
sub
cmpb
jne
push
mov
pop
idiv
enter
xchg
ljmp
js
aam
in
es
in
cld
inc
jno
fldcw
cmpsl
xchg
adc
outsb
movsb
sarb
or
stos
jmp
cmp
add
rorb
sbb
xor
pop
mov
je
xchg
or
xor
int3
adc
jp
pop
dec
mov
pop
rcrb
add
add
and
adc
jo
cmp
cld
test
fldt
mov
adc
jae
lock
cmc
push
aad
subl
fildl
aad
dec
and
sbb
sbb
leave
or
imul
mov
rorb
pop
jno
faddl
push
dec
pop
test
jp
cs
lahf
cmp
dec
mov
int
icebp
cwtl
inc
test
or
mov
inc
push
cmp
xchg
or
dec
les
jp
pop
push
jg
xor
mov
jns,pt
pop
push
xchg
lcall
mov
cmp
push
mov
mov
fs
adc
ss
fcomps
add
or
inc
ja
iret
mov
push
dec
and
lret
jmp
dec
data16
mov
clc
xor
arpl
push
pop
cli
cmp
cmpsl
mov
xchg
dec
bound
div
in
insl
sub
mov
add
jge
push
lret
enter
inc
mov
subb
in
ret
cmp
add
pop
sub
fpatan
shrb
cmpsb
mov
pmovmskb
aaa
int3
mov
pop
pop
test
pop
dec
shlb
shr
mov
xlat
pop
decl
outsb
cmp
mov
loopne
ficompl
out
stos
std
push
cmpsb
or
pop
pop
xchg
xchg
fidivrs
scas
decl
or
push
shll
aas
and
aad
ficompl
pop
fistpl
xchg
push
add
pop
pusha
dec
xchg
imull
push
insb
mov
in
out
outsl
loopne
xlat
jae
jle
leave
and
adc
push
xchg
dec
xchg
hlt
mov
or
mov
add
cltd
lea
lock
cmp
dec
xor
dec
push
sbb
shrb
push
pop
das
nop
or
sbb
mov
mov
mov
xchg
lods
cmp
fiaddl
jg
mov
roll
and
call
lock
dec
and
and
icebp
and
mov
mov
push
sti
sbb
pop
test
outsl
dec
push
imul
das
mov
enter
call
and
leave
add
fidivrl
mov
mov
ljmp
add
mov
scas
mov
jge
insl
std
call
adc
mov
pop
mov
dec
cmp
and
testb
insl
or
mov
aas
push
repnz
lds
jbe
cmp
sub
mov
mov
push
into
pop
add
adc
testb
mulb
and
in
or
das
push
std
add
pop
adc
repnz
adc
dec
insb
sub
mov
push
mov
mov
and
out
lret
jge
fwait
das
sbb
nop
or
fsubs
scas
int
cmc
or
adc
pop
popf
dec
pop
jo
ljmp
add
sub
xchg
test
pop
pusha
or
inc
jecxz
dec
movsl
outsl
std
push
shl
xor
mov
jl
das
mov
movsb
or
mov
aas
mov
loopne
inc
and
int
sbb
xorl
xchg
ja
jge
aas
jmp
sti
xchg
in
ljmp
jbe
fisubs
inc
popf
cld
int
adc
xchg
xchg
pop
cltd
and
fnstsw
lret
mov
inc
mov
loop
shll
xchg
sbbb
mov
roll
sub
fimull
sub
dec
sahf
xor
and
fidivrs
fcomi
xchg
cmp
xor
inc
cs
sub
out
pop
negl
inc
xor
out
mov
out
lahf
and
inc
test
sub
sbb
andb
pop
inc
inc
jbe
std
fneni(8087
out
mov
xor
les
add
mov
mov
pop
pop
pop
shll
shlb
add
jl
in
push
jns
pop
outsl
daa
jne
lods
or
lret
hlt
inc
mov
shrb
lahf
and
and
pop
in
mov
pop
icebp
pop
mov
push
popa
sbb
mov
sbb
test
stc
and
inc
mov
ss
les
mov
ss
dec
jae
sbb
jmp
xor
out
and
mov
cmpsb
enter
mov
push
imul
add
push
in
adcb
jo
push
jge
js
ret
repnz
into
mov
rolb
inc
test
push
sbb
inc
jns
shll
adc
clc
xchg
aaa
mov
and
dec
outsl
inc
ds
imul
int
xchg
insl
mov
rcrb
mov
mov
popa
xchg
pop
pop
cwtl
mov
stos
add
dec
outsl
test
pop
das
jle
jnp
mov
lret
stc
mov
out
fcmovbe
push
jnp
scas
lock
and
fisubrl
sbb
add
ffree
or
cwtl
bound
aad
aas
add
stos
or
mov
push
dec
movsb
clc
and
add
mov
inc
and
mov
cmpsl
xor
mov
pop
jno
sub
adcb
aas
je
push
or
jbe
adc
and
pop
rcl
out
mov
fiadds
in
xor
mov
insl
adc
jmp
fidivrs
cmp
out
cs
or
loop
lock
dec
xlat
push
xor
sub
ss
pop
xor
fidivrl
sbb
push
xor
fsubr
adc
inc
fsubr
je
mov
lcall
in
push
scas
and
arpl
std
xchg
pop
cmp
daa
into
mov
and
fistpl
jp
push
shlb
outsl
and
sbb
iret
mov
xor
inc
rol
icebp
dec
pushf
xlat
lret
shlb
hlt
pop
jp
ret
arpl
les
cmp
stc
lds
ret
dec
sbb
jne
stos
mov
test
add
inc
mov
push
or
inc
add
and
in
lret
das
insb
xchg
mov
arpl
inc
mov
pop
dec
std
xchg
xor
icebp
lods
sub
jmp
out
inc
add
cmc
pusha
movsb
and
or
mov
int
adc
inc
add
cwtl
fmul
icebp
sbb
repnz
push
pop
sub
lock
mov
mov
lcall
pop
jne
add
sub
mov
cmpl
jns
xchg
sub
gs
jl
pop
xor
and
mov
outsb
arpl
add
adc
inc
aam
cmp
or
inc
into
in
cmp
sbb
test
movsl
push
popf
aas
fst
sbb
dec
push
subb
pop
push
sbb
jbe
test
push
cmp
call
xorb
or
lret
es
xchg
cld
push
mov
jle
mov
lods
jnp
pop
push
mov
pop
or
and
call
adc
mov
outsl
or
ljmp
ss
inc
shr
mov
mov
mov
push
adc
int
ret
shlb
and
test
fadds
pushf
mov
push
add
ret
lods
cmp
push
jne
pop
dec
cwtl
enter
add
or
aaa
jle
shll
jnp
adc
sbb
icebp
mov
nop
adc
cmp
dec
mov
cwtl
jae
adc
or
loope
and
push
mov
jmp
out
hlt
jmp
sub
sub
jle
push
out
cli
test
mov
xchg
int3
cmp
mov
jns
sbb
aam
or
cmp
cmpxchg
inc
cmp
enter
das
cli
out
sub
inc
add
mov
fistps
xchg
adc
leave
inc
xlat
mov
xchg
mov
mov
add
pusha
add
mov
or
xchg
inc
into
add
ljmp
push
or
adcb
pop
outsl
or
jno
mov
hlt
insl
or
ss
insl
xchg
imul
push
mov
push
insl
loopne
std
push
lods
jge
adc
mov
outsl
mov
in
cmp
sub
cwtl
jne
js
inc
call
dec
xchg
mov
sti
addr16
aam
jb
mov
push
and
fisubs
in
insl
fstpt
push
cmpsl
xor
in
notb
rorl
movsb
mov
or
add
jne
mov
mov
sbb
stc
je
mov
mov
inc
add
add
sbb
addr16
stos
mov
shll
jbe
cmp
fnstsw
inc
xor
lods
push
cmp
in
jae
xor
pop
pop
mov
sub
add
into
test
stos
daa
pop
xor
cltd
adc
andb
testl
jns
mov
xchg
data16
dec
push
add
lahf
sub
test
and
add
adcl
xor
cld
cltd
cld
dec
mov
movsb
mov
cwtl
pop
sbb
in
mov
inc
xchg
dec
adc
push
stos
or
cmpsb
jae
mov
mov
inc
cmpsb
ja
mov
push
inc
sub
lds
or
xchg
inc
xor
iret
and
sub
mov
shr
mov
or
push
roll
fsubs
fidivs
mov
aas
mov
mov
sub
inc
mov
rol
jg
enter
orb
aas
hlt
roll
out
fcomps
inc
push
jo
and
xorb
jl
lock
and
les
clc
cltd
push
push
mov
arpl
fstpl
test
sub
inc
push
pop
dec
sbb
or
cmc
sbb
pop
jg
dec
cmpsl
jp
or
shlb
insl
xor
icebp
stos
jge
mov
aam
dec
lds
jge
pop
push
outsl
mov
push
aad
mov
add
ror
mov
xchg
movsl
pop
movsl
into
mov
sbb
sbb
ss
stos
push
je
and
outsl
sbb
popa
int
fwait
mov
out
loop
inc
int3
adc
pop
test
or
xor
push
or
lret
dec
push
ss
inc
jno
and
aas
inc
cmc
xor
jbe
cmpsb
lods
sbb
sbb
cmp
xor
mov
mov
dec
dec
loope
into
dec
adcb
pusha
rorl
add
cli
dec
push
mov
insl
fwait
dec
nop
cwtl
adc
lods
pop
pop
cmp
scas
dec
sti
lea
mov
add
inc
adc
mov
dec
push
shrl
mov
xchg
sbb
rcr
aam
xor
ljmp
test
shll
rcr
and
out
test
mov
scas
in
dec
in
pop
sub
scas
mov
and
andb
lds
pushf
mov
cmp
push
call
nop
scas
mov
lcall
xchg
fisubl
adc
insl
xchg
push
pop
cmp
xchg
mov
in
jp
or
or
cmpsb
xchg
popa
int3
xchg
or
jns
sub
lds
inc
ret
push
mov
or
jg
daa
or
aaa
mov
mov
adc
stos
pop
lock
fdivrs
movsl
fdivl
nop
add
fimull
in
inc
inc
mov
jae
cs
add
movsl
orb
fst
add
stc
xlat
add
jmp
inc
leave
adc
fwait
pop
jno
cmpsb
nop
dec
lea
sub
cmp
dec
pop
mov
shll
mov
push
test
insl
xchg
ficomps
arpl
cmpsl
push
ja
test
mov
jno
imul
inc
aam
mov
dec
pop
repz
pop
in
mov
lds
outsl
test
sti
lret
sub
pop
mov
movsl
int
stos
sub
adc
cs
push
fsubrs
rcr
xchg
in
aaa
dec
fcoms
mov
ljmp
dec
xor
jne
subl
ljmp
inc
es
mov
adc
test
neg
hlt
adc
cli
test
out
mov
out
bound
mov
mov
jl
adc
popa
or
xor
xchg
clc
add
xchg
push
mov
cltd
pop
push
test
jle
cmpsb
addb
aas
les
add
pop
sub
stos
outsb
pop
loopne
jecxz
jp
mov
in
ret
push
rolb
adc
or
add
cmp
dec
rcll
int
ficompl
pusha
mov
jae
dec
add
mov
lret
or
mov
fisttpll
mov
dec
add
pop
scas
mov
inc
mov
aaa
push
or
insb
inc
jnp
loopne
stc
outsl
mov
clc
or
clc
pop
fucom
mov
cltd
mov
pop
pop
aam
or
inc
scas
cmp
or
daa
and
in
jg
je
in
leave
je
and
cmp
test
adc
hlt
xchg
mov
not
loop
cmp
loope
adc
jne
mov
aad
inc
cmp
movsl
in
and
xchg
sub
scas
outsl
mov
dec
ret
fdivrs
mov
sub
pop
mov
test
add
and
ss
mov
mov
sub
mov
mov
ljmp
and
dec
insb
sub
mov
jo
jg
fwait
dec
fnstsw
xor
and
pop
gs
or
and
loopne
cmc
arpl
in
aaa
mov
and
inc
test
mov
pop
jecxz
mov
bound
pop
xchg
enter
cmc
sub
mov
push
outsb
ljmp
jnp
in
cli
cltd
in
cmp
mov
into
popa
push
adc
lods
enter
addl
sub
inc
jno
fldl
or
pushl
lds
insb
xchg
push
inc
aaa
mov
sub
insl
test
sub
sub
add
push
and
call
fs
loope
push
es
xchg
loopne
adc
cld
xorb
popa
out
ss
ret
add
call
call
sarb
mov
or
test
mov
cli
sbb
dec
mov
lahf
adc
xor
incl
in
push
add
lds
fidivrl
lcall
je
or
mov
gs
lock
push
mov
dec
rcl
pop
dec
pusha
hlt
xchg
xor
xor
push
push
fimuls
insl
rorb
fnstsw
xchg
mov
enter
push
mov
mov
mov
scas
xchg
sti
mov
std
push
and
outsb
dec
fwait
mov
dec
mov
outsl
mov
pop
aad
and
and
ret
push
popa
add
push
aaa
clc
into
addb
pushf
testb
sub
cmp
cmp
adc
cmp
sbb
push
pop
jg
aam
fistpl
add
or
mov
divb
les
loopne
inc
nop
adc
xor
leave
test
outsl
in
adc
cmpsb
sub
nop
orb
aad
push
fs
rol
pop
pop
and
sti
loopne
dec
cltd
mov
sbb
sarl
dec
xchg
sub
mov
or
in
xor
aaa
aam
xchg
js
dec
mov
les
mov
enter
adc
fdivs
fisubrl
pop
das
push
jmp
pop
jo
xor
pop
andb
xchg
sbb
rcr
inc
mov
mov
push
dec
pop
dec
outsl
xor
push
xor
nop
ret
shrl
jmp
mov
imul
mov
xchg
in
subl
mov
ud0
add
adc
jmp
out
jnp
jns
shl
in
pop
xor
sub
std
sub
pop
sbb
fistpll
or
repnz
inc
cmpl
sub
push
dec
ffreep
fists
test
adc
jnp
js
adc
scas
fucomip
inc
pop
fcmovne
daa
push
jmp
sahf
mov
and
cs
clc
test
std
sbb
inc
sbb
ljmp
mov
sbb
xchg
xorl
mov
ljmp
gs
add
pop
orb
push
in
fidivrs
adc
push
int3
hlt
push
shrb
jg
mov
adc
loopne
inc
clc
sub
push
rcl
repz
pusha
shlb
push
pop
std
lret
js
leave
incb
rcll
xchg
mov
push
xchg
jae
pop
pop
fs
inc
sbb
mov
test
inc
jbe
cmc
mov
jge
sbb
loope
daa
test
sbb
aaa
jnp
mov
cmp
mov
stc
add
xor
mov
dec
lar
push
mov
mov
scas
gs
add
lods
jge
sbb
imul
addl
sbbl
loop
and
insl
mov
dec
sub
loope
iret
xchg
test
mov
in
fwait
mov
push
ljmp
pushf
stos
mov
lods
out
popf
test
test
into
iret
gs
mov
cmpsl
adc
inc
int3
das
cmp
ljmp
xchg
rcll
xchg
push
dec
mov
lods
daa
xchg
pop
je
inc
fmull
sbb
stos
and
add
sbb
in
pop
inc
das
je
fst
pop
pop
push
cwtl
or
scas
lds
sbb
in
ds
xchg
fiaddl
repnz
xlat
aaa
addb
xor
cmpsl
jecxz
dec
test
jle
mov
add
test
mov
inc
loop
pop
sub
dec
addr16
mov
dec
mov
ret
dec
out
pop
cmc
stc
test
hlt
rol
stos
stc
jbe
sbb
sarl
xchg
cs
push
jbe
mov
stos
gs
xchg
jmp
bound
movsl
mov
hlt
xlat
insb
xor
xor
arpl
jae
pop
sub
sbb
dec
movb
test
adc
mov
add
popf
xchg
mov
xchg
scas
shll
mov
stos
add
imul
jb
daa
sar
jmp
adc
aaa
das
cltd
and
sbb
add
jnp
lds
mov
outsl
icebp
dec
dec
loop
roll
and
enter
adc
mov
pop
sbb
in
cmpsl
lea
iret
jge
loope
in
lods
add
sbb
inc
pop
addb
loop
push
stos
je
ja
sub
jg
and
pop
mov
xor
test
dec
jle
out
add
inc
leave
add
mov
clc
dec
fnsetpm(287
pushf
cld
leave
cmc
jg
jbe
fnsave
aad
dec
call
and
sti
in
adc
inc
insb
and
lock
push
cmp
or
sarb
ret
or
push
inc
mov
cltd
popa
ds
movsb
pusha
cwtl
pop
mov
pop
pop
adc
jp
pop
jmp
jb
and
sbb
in
popa
es
enter
sbb
inc
lock
mov
inc
in
enter
loope
mov
mov
jle
sbb
orl
ret
enter
fmuls
jle
outsl
mov
mov
in
mov
or
xlat
aam
cmp
sub
es
inc
mov
test
les
fmuls
xchg
repz
push
loop
jns
cmpl
or
stos
mov
jp
iret
mov
cmp
das
sub
jae
mov
or
daa
nop
cmpsb
outsl
or
loope
cmp
dec
fwait
cli
je
jbe
mov
pop
gs
xchg
xor
jg
cmpsb
aas
enter
insl
pop
insl
cmp
and
sbb
aas
xchg
pop
icebp
notb
lahf
mov
insl
add
ljmp
fcom
bound
mov
shr
jo
cmpsl
mov
outsl
lds
sbb
fldl
call
mov
xor
ljmp
shrl
and
mov
dec
or
jle
jo
jo
push
push
sub
aam
outsl
mov
bound
add
mov
push
dec
sbb
iret
jmp
mov
adc
mov
or
xchg
andb
pop
call
push
and
aad
mov
in
pop
pop
clc
mulb
push
xor
and
test
jo
add
pop
in
pop
rcll
mov
sub
lret
push
or
sbb
xchg
xor
adc
cmp
and
repz
xchg
cmp
pusha
dec
pop
add
mov
push
xor
xor
adc
test
loope
jle
push
cs
lea
jg
jecxz
xchg
jp
pop
mov
shlb
dec
addb
clc
pop
sbb
pusha
rcll
push
adc
fwait
nop
test
mov
jb
cltd
lods
xchg
fimull
mov
add
adc
or
in
sarl
xlat
jno
mov
das
insl
loopne
push
sub
add
sbbb
add
inc
pop
insl
mov
dec
subl
mov
xchg
jp
mov
sub
cwtl
and
mov
and
cmp
pop
cmpsb
xchg
fadd
not
jo
jl
push
or
xor
xchg
mov
mov
cmp
testl
jb
push
fwait
sub
fildll
shlb
sahf
push
popf
lods
loopne
aam
lea
in
fiaddl
mov
pop
aaa
insb
pop
adc
shl
cmp
enter
je
sbb
cmpb
push
rorl
add
rcrb
dec
cmc
and
dec
xor
push
jle
lcall
adc
rcl
and
sub
and
aas
cwtl
cwtl
sub
aad
aad
cmp
clc
lods
ss
sbb
cmp
pop
test
adc
fmuls
test
dec
inc
inc
fcomp
inc
inc
inc
mov
xchg
lods
out
cmp
cmovp
shr
fdivr
test
push
aaa
scas
jae
xchg
or
mov
sub
sub
fstpt
mov
adc
xchg
mov
lret
pop
popf
xchg
insl
outsl
pop
rcl
ret
les
xor
or
dec
jb
xchg
cmp
dec
imul
pop
push
div
not
add
sub
adc
jecxz
mov
adc
ret
mov
addr16
and
xor
cmp
or
ret
call
or
in
cs
cmpsl
add
aaa
sub
pop
mov
push
inc
push
imul
mov
ret
xchg
dec
mov
adc
xchg
daa
repz
aas
mov
xchg
and
repnz
lret
fisttpll
cmp
cmc
inc
dec
fsts
push
inc
add
jo
dec
mov
add
aad
mov
jle
test
adc
lret
stos
xchg
pop
push
ljmp
pop
mov
sbb
sbb
fistpll
jl
enter
xchg
push
push
or
dec
sbb
enter
push
int3
push
add
inc
test
inc
mov
xchg
daa
pop
sub
iret
mov
rorb
ret
xchg
push
pop
and
seto
sbbb
fidivrs
inc
mov
ret
inc
mov
xor
sub
mov
mov
sbb
sbb
jecxz
fwait
subl
lds
psubq
notb
repz
mov
bound
pop
pusha
sbb
xchg
mov
jbe
mov
loop
insb
mov
mov
jp
repz
push
subb
fmuls
jle
outsl
gs
or
repz
fildll
jle
pop
mov
add
sbb
xor
ret
fnstcw
mov
dec
xor
rcrl
add
xor
xchg
outsl
filds
mov
iret
push
inc
push
outsl
xchg
mov
push
sbb
xorb
test
or
or
shlb
xlat
pop
daa
adc
mov
cmp
mov
adc
faddl
aad
xorb
insb
xor
shrb
sub
loopne
xchg
sbb
mov
or
sub
jge
mov
xchg
jns
mov
faddl
xor
nop
mov
jne
cmp
sahf
outsl
push
bound
fldt
push
incl
ret
pop
jge
sbb
push
mov
gs
jmp
cmp
test
and
adc
jp
fdivr
shll
mov
add
ret
push
xchg
cmc
pop
add
sub
jp
push
adc
inc
in
sbb
stos
or
mov
leave
les
fbld
repz
add
mov
and
fdivp
pusha
fstpt
inc
mov
frstor
in
enter
repnz
jmp
test
adc
mov
jo
insb
fs
mov
xchg
loopne
xchg
int
popl
cs
add
sbb
arpl
sbb
inc
icebp
aam
sub
sahf
loop
ja
adc
lods
cmp
inc
loop
mov
orb
sbb
xor
stos
cmp
aam
mov
mov
mov
adc
rclb
sub
xlat
idivb
inc
pop
sarb
mov
mov
mov
mov
outsb
in
cmp
sub
and
xor
ljmp
mov
push
shll
sbb
fstps
das
stc
sub
daa
clc
out
mov
inc
add
bound
push
inc
push
mov
sbb
mov
gs
and
inc
mov
or
push
jmp
outsb
dec
sub
into
xchg
cmp
xor
les
jecxz
inc
dec
stos
loopne
and
push
pop
fsubrs
test
pop
cmp
out
and
mov
pop
fwait
sbb
insl
dec
push
mov
aad
movl
movsl
sub
mov
mov
pop
dec
mov
aam
shr
sbbl
cwtl
jmp
pop
jae
repnz
inc
jecxz
mov
and
xorb
or
pop
xlat
lret
inc
push
mov
fiadds
mov
lods
gs
das
jnp
mov
push
pop
pop
subl
cmp
push
mov
dec
fcomip
or
ror
sbb
push
pop
mov
sarb
adc
sbb
in
cli
lods
mov
mov
scas
xchg
in
outsb
dec
loope
test
and
bnd
and
inc
aaa
jo
xchg
mov
lods
pop
aad
or
es
xor
sub
and
sti
das
mov
xor
adc
call
mov
les
jne
cld
out
xor
mulb
push
xor
mov
jecxz
out
icebp
bound
and
jge
fmuls
dec
fisttpll
dec
das
sbb
xlat
cmp
shl
mov
cmp
push
jns
dec
sarl
adc
mov
mov
adc
add
dec
clc
and
sti
and
jmp
add
aad
aaa
sub
clc
addr16
cmc
adc
cmp
mov
jne
loopne
xchg
xchg
aam
nop
sbb
inc
inc
je
mov
mov
mov
pop
mov
jnp
fstps
and
outsl
repnz
lock
sub
push
stc
adc
shl
leave
lret
ret
fdivr
insl
mov
push
in
and
mov
inc
loop
xchg
xchg
js
ret
data16
lods
mov
mov
clc
loop
mov
adc
lods
outsl
mov
adc
test
push
test
or
push
xor
push
test
mov
jne
mov
push
xchg
mov
test
sbb
pushf
das
shl
rcll
rorl
aaa
jge
int
sbb
idivl
and
aas
clc
dec
sbb
es
fwait
mov
or
jmp
xor
jne
adc
push
popf
adc
cmp
add
dec
and
icebp
add
pop
jns
add
and
ljmp
mov
push
push
mov
icebp
cmp
jnp
adc
push
mov
aam
or
mov
mov
pop
mov
aaa
fists
mov
fcompl
xor
rcl
movsb
cmpsl
inc
push
hlt
aaa
testl
mov
outsl
fildll
movsb
mov
jae
cmp
je
add
xorb
loopne
loop
dec
fdivl
std
jl
or
std
dec
add
sbb
out
in
push
insb
mov
cs
movsb
data16
xchg
pop
enter
stos
js
orb
sub
and
test
addr16
subb
and
aam
fwait
add
outsl
pop
mov
or
mov
iret
xchg
inc
loope
repnz
cmp
clc
data16
push
icebp
push
mov
and
xchg
pop
rolb
pushf
ss
adc
movsb
fbstp
xor
clc
add
push
sub
out
adc
int3
inc
dec
mov
cwtl
mov
mov
mov
jbe
fmuls
and
test
cltd
dec
mov
je
aaa
in
shrl
jge,pn
push
outsl
push
pop
loopne
push
sarb
dec
and
add
push
cmpsl
and
std
outsb
ret
pop
pop
adc
lret
cmpsb
mov
loopne
test
push
repz
ljmp
enter
int
outsl
ret
inc
nop
test
or
mov
mov
fwait
adc
stos
std
adc
lret
sarb
mov
add
xchg
into
insb
adc
shlb
out
das
test
mov
enter
jb
adc
test
stos
dec
fs
bound
jge
arpl
add
jp
stos
push
test
rclb
and
or
lret
add
dec
pop
iret
sub
gs
add
ret
std
lods
roll
adcl
loopne
and
jl
xor
aas
mov
gs
insb
sub
gs
push
ret
into
mov
mov
aad
jg
or
test
shlb
pop
nop
sbb
mov
mov
call
and
fcompl
cmp
ljmp
add
pop
out
mov
jg
das
rclb
rclb
into
jp
subb
shlb
gs
andl
insl
imul
fbstp
shrb
test
mov
ljmp
dec
sbb
or
pusha
sub
dec
mov
or
fwait
or
dec
insb
into
xchg
cwtl
mov
push
add
xchg
les
jne
pop
jbe
mov
roll
stos
sub
test
mov
in
push
adc
or
mov
cmpl
fidivl
mov
shlb
inc
insb
shrl
mov
mov
cmp
add
push
xchg
cmpsl
rclb
xchg
scas
inc
out
ficomps
rclb
call
fistpl
insl
xor
xor
mov
sahf
pop
sbbb
pop
xor
iret
aas
sub
add
icebp
mov
cmp
sbb
mov
adc
or
xor
push
outsb
popa
fwait
inc
out
clc
adc
shrl
or
lahf
pop
adc
adc
adc
popf
inc
xchg
inc
andb
mov
stos
fwait
jno
push
mov
aam
imul
insl
clc
add
xor
ja
roll
fisttps
push
and
movsl
outsl
sub
jbe
aad
or
mov
or
push
aaa
cmpsl
mov
outsl
loopne
jg
add
pop
scas
xchg
ja
adc
sbb
pop
stos
push
arpl
aam
pusha
pop
jl
xchg
out
xor
out
cltd
mov
out
cmp
orb
and
jge
inc
inc
fisubrs
jo
ljmp
inc
in
add
push
cmc
adc
or
and
cmpl
jne
sub
mov
sub
sbb
xchg
or
clc
icebp
push
enter
imul
add
test
and
out
push
rcrb
ja
jp
cmp
aas
xor
or
in
mov
aam
into
movb
add
imul
push
rcr
test
push
sbb
inc
icebp
push
fsubl
pop
fwait
mov
movsb
sbb
push
cmp
ljmp
xor
lcall
or
shlb
inc
adc
mov
xor
adc
outsl
or
mov
fdivrp
dec
push
cmp
add
mov
cmpsb
pop
pop
addr16
aaa
rcl
icebp
nop
xor
adc
rolb
sub
push
test
inc
xlat
sbb
pop
mov
push
sub
repnz
leave
xor
lret
add
fimuls
aam
fstps
sub
xchg
test
stos
jb
divl
inc
mov
push
sbb
ss
outsb
std
mov
inc
or
mov
movsl
imull
push
aas
out
lcall
xchg
adc
inc
and
rcrl
jle
mov
lcall
es
xchg
adc
fstl
pop
or
push
or
pop
notb
pusha
push
leave
push
mov
jno
outsb
sbb
cmp
ret
jns
mov
mov
pusha
cmp
leave
mov
xchg
dec
cmc
jns
xchg
rclb
mov
dec
add
cmp
bound
push
cs
in
sti
pop
add
cmp
cmc
gs
push
inc
sbb
mov
in
push
cli
sbb
ljmp
inc
or
inc
repz
fcmovnu
sbbl
movsl
clc
cmpsb
into
cmp
sbb
mov
jns
sub
insl
xor
negb
and
sahf
bound
popl
jb
add
fildl
mov
pop
outsb
scas
and
out
dec
lcall
dec
movb
dec
std
gs
fcmovbe
xchg
rcrb
add
ss
pop
mov
mov
popa
cmp
mov
sbb
fisttps
xor
cmp
adc
pop
addl
inc
pushf
adc
jns
adc
jl
sub
js
mov
lea
fs
loope
add
popa
or
add
dec
cltd
add
cli
sahf
and
adc
push
stos
push
ja
das
xchg
loopne
sti
pop
jno
add
mov
iret
or
push
aaa
mov
cmp
cmp
idivl
xor
in
in
and
aas
bound
roll
loop
pop
lds
adc
sbbb
pop
and
out
xchg
add
pop
lahf
rorl
or
ljmp
cmove
in
mov
bound
push
push
and
pop
fcoms
xchg
push
mov
adc
idiv
add
xchg
pushf
pusha
pop
scas
cmp
and
out
sub
add
inc
sbb
aam
push
icebp
adc
ficoml
fildl
rorb
pop
dec
inc
ss
mov
mov
ds
mov
scas
clc
sub
pusha
cld
ja
push
fildl
dec
fisttpll
push
loop
jle
dec
imul
ficoms
push
mov
pop
mov
push
mov
cwtl
shlb
cmp
sub
add
data16
push
jg
jmp
jns
inc
jne
or
adc
cli
lea
cld
xor
mov
inc
jg
pop
cmpb
lock
sbb
daa
adc
clc
or
leave
inc
cmc
xchg
movsb
out
call
push
pop
outsl
jle
sarl
es
jmp
mov
movsl
fcomi
jbe
dec
out
outsl
cmp
repz
push
xchg
pop
sub
push
cli
mov
ljmp
sbb
mov
inc
dec
hlt
ffreep
int
pop
decb
push
jb
push
pop
inc
dec
jg
icebp
sbb
and
aaa
push
inc
add
es
mov
je
pop
outsb
out
pop
jge
sbb
or
fstps
pop
push
lods
and
add
stos
adc
mov
jle
sub
sub
or
pop
push
sti
cmpsl
xchg
sti
pushf
int
idiv
dec
in
faddl
dec
add
adcl
adc
inc
dec
stos
push
add
out
sbb
lock
fists
xchg
shlb
push
in
insl
sti
icebp
daa
mov
add
pop
stos
shlb
repz
cmc
mov
lcall
add
dec
fmull
mov
outsb
cmp
in
jg
leave
push
stos
dec
aas
sarb
adc
cmp
jo
push
insl
jl
push
push
and
jg
xor
rcl
ss
out
pop
push
mov
push
sbb
fmuls
jg
push
lods
adc
sbb
jbe
dec
aam
dec
mov
es
push
data16
icebp
sub
cld
push
mov
add
sub
fistpll
xchg
push
jbe
int3
mov
mov
addr16
sbb
test
and
ret
mov
rorb
jne
xchg
int3
pop
jb
jmp
add
or
xchg
ljmp
push
mov
aam
adc
jns
dec
sahf
insb
push
das
mov
add
mov
xchg
cmp
pop
jg
xor
push
cld
repz
cs
lock
adc
jecxz
pop
movsl
inc
stc
loopne
mov
jo
and
xor
push
mov
pushf
add
shll
inc
or
sbb
add
rcl
dec
xlat
mov
outsl
xchg
xorb
add
pusha
mov
mov
inc
sub
add
aam
hlt
loop
sbb
lret
dec
xchg
or
mov
cld
pop
or
sub
jl
jb
mov
pop
adc
fdivrs
push
sbb
mov
jbe
fstpl
sbb
cwtl
lods
lods
icebp
lods
out
repz
ljmp
mov
cs
int
cmp
fidivrs
clc
sub
xchg
jg
lods
ret
mov
adc
aad
dec
leave
cmpsl
repz
cmpsb
into
push
fdivr
push
movsb
aaa
movsb
sahf
or
add
shlb
sub
sar
es
push
pop
jecxz
mov
jne
mov
je
lods
dec
cltd
ficoms
add
loope
imul
test
mov
lods
addr16
cltd
and
pop
mov
lds
mov
sub
lcall
inc
lods
hlt
jo
jmp
adc
out
arpl
lods
aam
inc
cmp
jmp
pop
and
sub
movsl
pop
ficompl
iret
cmp
movsb
pop
xlat
sub
pop
les
in
sub
push
adc
pushf
and
cmp
vpaddsw
mov
movsb
or
mov
push
xchg
or
ja
mov
xchg
and
jne
outsb
fisttpl
jle
rcrl
loop
dec
mov
es
jl
push
push
jnp
les
mov
cmp
stc
sbb
mov
jo
dec
add
add
ja
js
rorb
and
stos
push
jb
call
bound
pop
shrl
xor
mov
hlt
les
mov
test
lods
mov
mov
xor
shlb
xlat
xor
cmp
dec
mov
jmp
movlps
fistl
std
mov
scas
scas
xchg
sub
dec
shrb
xchg
pop
shll
ret
mov
jo
clc
sub
sub
cs
jno
mov
mov
iret
fwait
bound
adc
dec
cmpl
insl
pop
push
xchg
mov
ret
push
dec
and
int3
call
and
cmc
push
call
push
mov
mov
je
ds
std
inc
stos
mov
pop
outsl
movsb
and
repz
pusha
ret
push
mov
mov
js
call
lds
iret
filds
loop
cmpsb
lods
outsb
sub
mov
daa
cmp
add
out
stos
in
dec
insl
dec
vmovupd
or
mov
add
and
mov
xor
jg
jae
add
sti
cltd
push
and
imul
std
rcr
test
mov
ret
mov
mov
hlt
out
cwtl
andb
loop
std
int3
adc
rcl
int3
sub
mov
test
das
pop
leave
xchg
sbb
clc
sbb
test
cmpl
mov
push
jns
mov
das
insl
aas
scas
rolb
adc
pop
cmp
jne
cs
push
cld
shl
or
bound
pop
ljmp
jle
adc
in
and
add
aad
xchg
mov
push
in
jae
mov
aas
xlat
fucomi
mov
loopne
jp
xchg
outsb
mov
mov
mov
and
movsl
mov
fcmovb
add
incb
mov
loope
sahf
aas
decl
mov
mov
loope
adc
movsl
adc
je
and
jns
sub
loop
mov
adc
xchg
fnstenv
adc
inc
mov
add
popf
lahf
push
cmc
xchg
rorb
and
insl
fwait
pop
clc
inc
adc
neg
sti
push
inc
ja
ror
outsl
cld
mov
and
dec
sub
xor
and
pusha
popf
lock
or
fisttps
fmull
push
test
mov
jns
add
push
xor
loop
sbb
mov
sbb
lods
cmpsb
pop
mov
mov
mov
daa
sbb
movsb
test
stos
dec
mov
cmc
mov
icebp
pusha
pop
mov
aam
pop
push
insl
cmpsl
xchg
incl
ret
mov
adc
aam
mov
push
or
or
lds
mov
in
scas
js
jno
mov
outsb
cld
push
xor
shr
inc
sub
fwait
out
sub
bound
or
hlt
int3
mov
xchg
out
cmc
xchg
xchg
dec
aad
jbe
mov
loopne
or
pushf
sti
testb
in
push
test
popa
fistl
loopne
fdivl
pop
mov
test
sbb
and
pop
mov
out
sbb
outsl
outsl
push
mov
mov
loopne
pop
data16
or
mov
adc
outsl
sub
push
js
mov
mov
addb
loope
in
inc
enter
mov
push
mov
lock
data16
sbb
add
rcrl
xor
sub
shl
mov
arpl
jae
mov
outsl
mov
scas
xchg
mov
or
iret
jmp
clc
fstpt
aaa
xchg
int
icebp
and
ret
push
lahf
in
push
push
pop
sub
sub
cmp
sbb
cmovs
cmpsb
int3
jecxz
out
in
pop
mov
add
out
xchg
xlat
pop
fdivrs
sub
icebp
in
sbb
dec
loopne
sar
mov
outsb
mov
test
ja
hlt
add
clc
xchg
popf
mov
push
insb
shlb
shlb
inc
das
pop
sbb
loopne
std
mov
jae
insl
ret
insb
outsb
repz
cmp
mov
xchg
das
mov
jb
and
add
out
inc
aaa
mov
repz
mov
adc
call
sbb
roll
jmp
test
sbb
pop
outsb
push
cwtl
pop
inc
call
inc
cmp
dec
mov
ja
out
cmpsb
jmp
addr16
mov
lret
pushf
jb
xchg
sbbl
jnp
sahf
mov
cmp
sbb
orb
mov
pop
loop
ficoms
inc
mov
sbb
testb
popa
adc
pxor
push
or
ss
addb
or
fwait
repnz
or
jle
mov
fmul
dec
aad
jmp
out
test
mov
iret
icebp
cmp
mov
mov
inc
sbb
icebp
mov
fidivs
jg
leave
insb
popa
cmpl
es
cmpsb
pusha
or
les
inc
or
xor
scas
mov
jbe
inc
and
add
xor
rcll
push
stos
cmp
sub
adc
popf
xor
mov
inc
in
dec
insb
pushf
xor
psadbw
adc
or
and
xchg
fmuls
decl
out
ret
push
push
push
xchg
push
or
adcb
adc
pushf
loope
mov
lods
pop
outsl
test
movsl
jne
sub
notb
fwait
mov
cld
movsb
and
aam
xchg
les
and
adc
sbbl
jo
push
dec
push
dec
jge
lock
sub
lahf
xlat
movsl
nop
push
inc
test
cmp
xor
shlb
fisttps
or
lahf
std
clc
outsl
andb
or
sti
adc
cltd
mov
xor
mov
lock
mov
xor
pop
setl
lahf
movsb
mov
ret
adc
and
rcrl
or
fsubrp
pop
jl
jg
stos
das
push
movsb
mov
pop
push
cmpsb
lock
jno
inc
push
fdivrp
pushl
lods
xor
mov
or
popa
mov
subb
sub
lock
outsl
stos
xor
or
mov
cmc
add
adc
xor
jmp
and
ror
scas
adc
sbb
dec
cmc
pop
jbe
jl
mov
mov
sbb
gs
push
xorl
xchg
rol
adc
push
pop
push
push
js
cmpb
mov
int3
icebp
pop
jns
loope
push
xlat
out
fadd
push
xor
jle
mov
cmp
pop
test
add
out
loop
enter
rolb
movsb
insb
sti
add
jbe
xchg
xor
clc
push
jmp
arpl
outsl
mov
push
mov
fsubrp
in
or
inc
mov
xor
cmp
dec
gs
inc
jb
or
xchg
and
inc
jno
shll
cmpb
pop
sbb
pop
and
or
movsb
leave
mov
in
popa
rolb
sbb
cmp
idivb
clc
lods
mov
sbbl
or
dec
mov
mov
adc
xchg
call
adc
sarl
jbe
pusha
sti
ret
push
mov
pop
rolb
push
push
jecxz
xor
stc
dec
loopnew
cli
xorb
dec
rcr
ret
xchg
inc
mov
loopne
lods
add
pusha
push
aam
jo
fidivrl
push
and
mov
inc
mul
pop
pop
sbb
sub
pop
lds
inc
hlt
dec
data16
jg
mov
inc
inc
push
and
mov
popf
push
pusha
adcb
daa
cli
stos
aam
fsubrl
mov
mov
sbb
outsl
mov
pushf
mov
fisubrl
jno
mov
or
sub
pop
jle
mov
inc
sbb
push
mov
orl
jno
call
in
jae
insb
rcrl
jecxz
das
shr
nop
stos
mov
mov
ds
pop
repnz
jge
outsl
les
pop
es
sti
dec
stos
std
push
int
mov
add
mov
loopne
add
xor
jo
mov
in
call
dec
xor
push
sub
scas
adc
cld
outsl
scas
add
cmc
mov
xchg
xor
push
mov
test
lret
in
sbb
jbe
movsb
loopne
mov
sub
and
lock
xor
cli
and
mov
bswap
jl
jmp
stc
fdivs
mov
mov
fwait
jmp
xchg
out
scas
dec
decl
lds
or
lcall
jmp
ret
add
test
negb
fistpll
sbb
cld
out
in
in
mov
int3
mov
inc
outsb
rorb
xchg
or
xor
lea
inc
dec
push
cmp
dec
pop
xlat
dec
lret
inc
push
xchg
movsl
and
jp
pop
cli
and
scas
out
mov
aaa
ljmp
inc
mov
pop
push
xorl
push
mov
das
adc
popa
std
or
fdivrs
mov
out
mov
aad
pushf
in
adc
test
dec
lahf
pop
icebp
movsl
xor
fisttpl
js
orb
icebp
movsb
aad
fcmovnu
lea
add
xorl
sbb
pusha
movsb
push
hlt
mov
dec
std
dec
and
sub
inc
in
cmpsl
and
dec
push
shll
nop
xor
dec
ret
or
mov
pop
dec
sbb
pop
lock
ds
inc
cli
mov
jg
xchg
jle
pop
ret
mov
adc
xchg
push
ljmp
jl
dec
dec
pop
push
aas
jno
or
fcmovnbe
xchg
mov
mov
shl
fidivs
add
mov
pop
outsl
sub
mov
outsl
mov
scas
ret
roll
pop
ficompl
dec
or
into
mov
jno
add
push
les
mov
mov
sbb
ret
mov
scas
inc
es
cmp
testb
mov
shll
cmp
cli
pop
fs
mov
in
pop
lds
loop
fnsave
leave
pop
dec
fldenv
push
faddl
jmp
bound
adc
lock
add
mov
xchg
adcb
fnsave
stos
and
cmc
sahf
push
insl
mov
lods
dec
xor
mov
and
push
cli
nop
add
rcr
lods
test
addb
mov
cmp
cmovge
aad
push
or
pop
nop
sti
mov
adc
lock
sbb
outsl
ja
jno
test
pop
jg
add
mov
push
inc
jmp
icebp
pop
add
inc
jecxz
fidivl
add
xchg
lods
test
jo
loope
dec
jg
fmull
sbb
call
push
aam
addl
or
lret
cmp
mov
insl
inc
push
dec
rorl
add
cmp
push
sahf
xchg
mov
xor
add
xor
shrl
pop
adc
test
sti
imul
pop
inc
rol
mov
jl
inc
inc
push
out
orb
lock
leave
adc
pop
ss
mov
in
xchg
insb
jnp
mov
pop
loop
sbb
jp
imul
cmp
loopne
test
sub
inc
sub
mov
adc
sbb
jae
shrb
inc
mov
adc
lret
jg
ss
adc
mov
xchg
or
jp
ljmp
fsubrs
sbb
mov
push
aaa
cmpsl
int3
xor
mov
jae
xchg
into
jle
fucomip
mov
aad
aad
mov
mov
cmpb
test
cmp
inc
push
sub
push
test
inc
mov
lret
jle
stos
ja
ficoml
scas
dec
and
mov
jb
adc
enter
push
push
add
sub
sub
outsb
sbb
or
aad
xchg
shr
fildll
and
add
jle
adc
mov
andb
jecxz
mov
push
mov
sbb
push
push
in
mov
icebp
lret
pop
add
mov
fisubrs
das
sti
testb
je
mov
shrb
les
scas
neg
js
dec
sub
xor
jle
cltd
hlt
add
fimull
roll
or
sub
out
sbb
and
pop
clc
push
lock
jg
dec
and
and
jecxz
dec
dec
clc
push
nop
mov
mov
mov
xlat
stos
xchg
lds
movsl
or
les
scas
mov
adc
inc
or
js
sub
cmp
pop
lcall
lea
mov
js
jg
les
mov
adc
adc
test
cmp
push
xchg
push
or
jle
cmpb
inc
repnz
or
or
stos
add
add
add
fldt
aaa
inc
fcmove
mov
mov
xchg
or
fiadds
adc
push
test
icebp
or
jns
je
pop
sbb
inc
repz
test
push
pop
jg
or
lods
adc
gs
stos
cwtl
sub
pop
rclb
loop
mov
inc
iret
pop
mov
adc
cmpsb
cmpsl
test
jno
stos
sbb
mov
js
or
mov
sbb
jecxz
clc
push
test
inc
xchg
ror
paddw
das
cld
in
fwait
test
and
and
and
ret
adc
cs
cwtl
out
jecxz
add
jg
jle
pop
lret
packuswb
cmp
inc
push
outsb
popl
imul
scas
xor
add
xorb
aaa
sbb
xor
xor
jle
or
adc
dec
arpl
jp
mov
je
hlt
pop
cmp
pop
jno
imul
outsb
adc
dec
mov
mov
rolb
fistpl
xlat
dec
rcll
pop
mov
in
xchg
int3
xor
xchg
sub
shll
call
pop
jne
push
sub
cmp
add
dec
in
call
fs
mov
out
and
test
pop
push
dec
out
insb
test
jno
lea
jl
pushf
repz
or
or
push
inc
pop
sbb
mov
rcll
dec
cwtl
ljmp
jae
addl
or
aaa
and
je
mov
out
mov
jle
xor
jns
sbb
stos
lret
mov
and
mov
push
ds
pushl
sbb
cmp
lds
pop
jp
sub
dec
dec
fdivl
scas
mov
shl
or
loopne
inc
adc
outsl
test
aad
dec
jecxz
popa
andb
lods
sub
addl
dec
adc
and
push
mov
mov
rorl
ffree
cwtl
adc
fsub
test
mov
xchg
dec
mov
fwait
addl
or
daa
stos
lock
add
jecxz
lods
and
mov
jecxz
fimull
out
mov
outsb
and
shrb
ficompl
inc
pop
fst
xchg
or
sbb
sbb
fildll
xchg
loope
mov
sbb
cmp
or
popf
subb
fbld
fimull
les
dec
pop
or
push
push
dec
adc
popf
shlb
adc
stos
xchg
popf
adc
dec
add
int
test
xchg
call
pop
andb
lock
mov
jg
xchg
push
cmp
scas
fcmovnb
aam
cmpsl
jbe
imul
out
pop
ret
mov
push
addr16
inc
sub
dec
je
cmp
out
arpl
push
mov
xor
lret
arpl
mov
cwtl
out
or
repnz
inc
pop
mov
cmpl
jg
push
lods
push
push
lods
stc
mov
loopne
insb
icebp
and
jae
hlt
sub
addr16
test
push
lcall
or
loopne
aas
movsl
loope
xchg
pop
fidivrs
mov
mov
mov
sbbl
shl
inc
and
or
mov
push
xlat
loope
movl
sarb
pusha
sub
mov
and
fsubl
lds
and
cmpsl
lahf
push
aam
stos
orb
out
lret
repnz
cmp
pop
mov
fadd
mov
adc
push
mov
enter
cld
ret
adc
mov
cld
das
add
xchg
xor
mov
mov
mov
mov
lds
xchg
mov
lods
mov
pusha
xchg
and
lock
add
mov
xchg
push
sarb
testl
test
bound
add
mov
lods
out
ja
mov
popf
add
cli
fildl
push
daa
dec
ret
mov
iret
rolb
adc
mov
jmp
cmp
ret
mov
adc
push
push
call
and
sub
inc
aaa
loop
lock
cmp
js
inc
lahf
test
mov
xor
nop
mov
mov
jmp
nop
pop
and
mov
popa
pop
inc
call
in
js
push
insb
test
mov
sub
arpl
nop
jmp
outsb
call
insb
std
lods
test
std
adc
inc
ficoms
adc
add
ljmp
adc
pop
pop
pop
inc
mov
lea
cmc
add
ret
mov
dec
pop
mov
sahf
adc
jg
xorb
data16
sbb
mov
dec
jo
adc
ret
add
cld
test
filds
in
jle
loopne
pop
les
pusha
and
push
lea
sub
pop
lret
push
getsec
lcall
pop
mov
sbb
lods
cwtl
aas
test
fisttpl
clc
mov
sbb
aad
pushf
bound
or
aaa
enter
loope
shl
xor
ljmp
sbb
jg
outsb
pop
cmp
pop
rcll
lea
rcll
sub
jmp
add
xchg
lea
test
sbb
into
sbb
cwtl
loop
jo
cmp
outsl
decl
popa
pop
inc
xchg
loope
movsb
cmp
push
pop
adcl
push
lahf
iret
sub
lods
push
mov
iret
lea
in
mov
push
pop
jne
mov
mov
push
jge
and
bnd
cmp
popf
jb
push
ja
lock
mov
pop
jl
push
add
int
ja
cmc
cmpsb
lock
jbe
inc
mov
push
cld
lahf
loopne
mov
repnz
mov
out
shlb
xor
pop
fisttpl
das
insb
cli
iret
sbb
ljmp
jae
sbb
jne
clc
or
fimull
or
inc
inc
cs
mov
xchg
pop
mov
hlt
cmc
arpl
push
std
ficompl
cmp
decl
dec
sub
dec
pop
add
subl
aas
xor
push
call
pop
adc
mov
pop
ljmp
xor
sub
fwait
es
insl
xor
sarb
dec
xchg
mov
orb
sub
cmp
mov
lret
mov
cltd
je
jl
mov
enter
mov
std
add
enter
push
fldl
rcll
fistps
xchg
mov
movsl
mov
loop
imul
and
cmp
xor
pop
popf
mov
outsb
pop
xchg
addr16
add
lret
js
jl
sub
lahf
ljmp
aaa
mov
pop
sti
adc
mov
jge
jmp
mov
lods
outsl
lock
mov
mov
test
adc
scas
mov
movsl
jle
pop
or
xchg
call
xor
inc
mov
mov
add
mov
ficomps
pop
ja
test
sbb
dec
clc
xchg
sub
rcr
clc
pop
insb
xchg
cli
test
sbb
jno
mov
fs
stos
xor
call
loopne
nop
dec
ret
int3
aas
jg
out
jmp
xchg
and
movl
insl
loopnew
sti
fistps
lahf
mov
pusha
lock
int3
sar
out
jmp
jle
stos
stos
outsl
imul
jo
mov
mov
push
out
push
sahf
pop
adc
push
test
add
int3
fadds
aam
mov
push
cmpb
adc
jmp
jmp
adc
mov
mov
aad
pop
and
cmpl
jecxz
push
pop
loopne
or
mov
push
icebp
stos
stc
xchg
ds
bound
pusha
adc
rcrl
pusha
inc
leave
cmp
test
not
pop
clc
aaa
or
cmp
inc
mov
mov
xor
mov
inc
jno
orb
ficoms
sbb
cmc
ds
nopl
insb
stos
loopne
std
sub
test
pop
xor
cmpsl
or
test
pop
fildll
mov
sub
lds
popa
mov
loop
clc
jbe
jmp
pop
fldenv
imul
jp
movsl
mov
ret
mov
fldcw
lret
push
shl
cwtl
add
dec
lea
cld
xor
test
push
push
movsl
sbb
clc
imulb
outsb
insl
mov
dec
clc
mov
cld
push
shl
mov
lock
pop
mov
adc
fucomip
leave
push
dec
stos
in
aad
jno
xchg
out
loopne
ret
mov
xchg
clc
dec
test
in
or
outsl
lcall
push
pusha
or
dec
cmp
mov
mov
pushl
and
mov
stos
mov
mov
pop
fdivs
mov
orl
rclb
xor
sub
neg
xchg
pop
in
int
jl
pop
jne
xchg
out
or
fidivrs
sub
movsl
push
stc
movsl
cmpb
mov
scas
cltd
and
mov
rolb
mov
out
mov
sbb
add
push
or
mov
pop
andb
orb
les
mov
insb
dec
aaa
mov
mov
cmp
push
pop
add
mov
ficoms
pop
shrb
test
int
jb
imul
and
repz
int
addr16
incb
inc
decb
and
rcrb
push
outsl
stc
dec
dec
rolb
mov
test
push
loopne
push
adc
lods
shrb
xor
fidivrl
or
enter
gs
sbb
xchg
test
ss
push
mov
push
pop
jbe
sbb
and
mov
pop
push
hlt
or
jno
rcpps
and
cmp
mov
sahf
sti
rcll
scas
and
je
lds
lods
lods
add
bound
adc
comiss
add
scas
into
adc
es
cmc
loop
inc
fisttpll
lds
sbb
hlt
fbstp
stc
shll
jno
xchg
stos
adc
or
sbb
and
sbb
mov
popf
loopne
fdiv
aaa
cmc
outsl
cld
inc
adc
mov
ret
push
dec
test
dec
call
pop
mov
lcall
and
mov
arpl
jb
pop
shll
popa
repz
mov
sbb
xor
popa
jno
pop
add
jl
jmp
mov
jl
xchg
cmp
add
movsl
lock
loop
add
test
movsb
in
adc
mov
in
enter
or
imul
adc
repz
sbbl
inc
dec
test
mov
jg
sbb
inc
bound
pop
jle
ljmp
bound
sarl
jp
inc
mov
popf
pop
cwtl
lcall
cmpsb
int
xchg
loope
adc
lods
loopne
das
jne
shrl
mov
stos
mov
sub
mov
jl
push
cmp
shlb
push
fidivrs
sub
push
jg
sti
mov
loop
ret
lock
insb
scas
sbb
jle
xchg
inc
dec
out
mov
hlt
negb
out
mov
dec
mov
ja
insl
push
inc
push
mov
jge
sbb
movsb
sbb
fcomp
pop
jbe
mov
mov
inc
dec
movsl
inc
jmp
lea
das
les
jo
icebp
mov
xchg
cwtl
or
std
mov
add
inc
cmp
or
jne
mov
add
jb
out
outsb
rorl
inc
adc
mov
xchg
adc
mov
loopne
in
mov
xor
inc
pop
mov
dec
cmp
xchg
push
les
pop
jp
or
or
mov
xor
cli
pop
pop
sbb
mov
into
dec
faddl
jg
in
and
pusha
outsl
xlat
dec
out
xchg
imul
ja
ja
push
pop
sar
dec
push
jg
mov
jo
in
mov
dec
fsubrs
stc
aad
insb
push
sub
call
ja
pop
loop,pn
jns
mov
js
push
mov
shlb
push
jne
mov
fbld
xor
push
jecxz
repz
pop
fcomi
outsl
fsubl
xor
or
cmp
mov
stos
add
pop
aam
inc
mov
sub
mov
imul
mov
insb
sub
xchg
inc
jbe
cmp
in
push
add
jmp
push
sub
jnp
mov
jge
imul
inc
xor
mov
jg
push
fimuls
mov
pop
test
mov
adc
mov
bound
xchg
pop
shrl
mov
cmp
mov
push
fists
push
les
fldl
into
mov
pop
mov
enter
sub
popl
adc
call
mov
das
shrb
xchg
push
mov
shrb
shlb
daa
test
pop
xor
mov
stos
mov
xor
fcomp
scas
les
jecxz
push
mov
movsl
fcoms
je
ds
jg
std
lds
xor
mov
or
arpl
cmp
mov
out
in
clc
sbb
inc
arpl
in
ret
jb
out
out
ljmp
jno
shl
std
out
clc
movsl
push
adc
or
shlb
daa
lahf
out
fildll
test
mov
lock
lods
dec
movsb
jge
fs
push
lea
cmp
jo
sarl
lock
cmp
xchg
fstl
lret
arpl
fdivrs
cwtl
and
xor
fidivrl
jns
test
imul
push
outsl
ret
fldcw
pop
push
cmp
fnstsw
inc
inc
sub
sti
push
sub
mov
aaa
sbb
test
movsl
dec
jmp
mov
imul
jo
lds
sub
mov
dec
aam
push
add
and
mov
sbb
bound
mov
cmp
iret
mov
fisubl
push
out
pop
push
push
mov
xchg
inc
mov
jno
mov
aaa
aam
jb
ljmp
sub
popl
mov
lcall
mov
scas
or
sub
andb
adc
dec
mov
outsb
outsl
push
test
orl
sub
fstl
adc
ljmp
ljmp
cli
push
add
add
mov
or
in
cmpsl
neg
test
mov
out
andl
clc
push
mov
imul
push
fwait
push
cmovne
xchg
jp
ret
and
jl
jecxz
mov
ja
call
cmp
and
andb
into
ficoml
sub
into
pop
or
cmp
aaa
shrb
std
pushl
pop
jl
adc
xchg
dec
call
pop
adc
dec
mov
rorb
popa
xchg
clc
and
mov
lret
add
jle
pushf
fdivl
mov
test
xor
xchg
repz
loope
clc
testb
into
sub
adc
or
push
xor
hlt
push
pop
mov
or
adc
lret
push
lret
cltd
jl
imul
jnp
xchg
imul
pop
nop
fsubs
mov
rol
aaa
push
loope
aas
fidivs
mov
repz
rcrb
inc
inc
mov
pop
dec
popf
cld
add
inc
pop
subb
inc
mov
rorl
cmp
sub
xchg
call
inc
jecxz
lea
mov
push
je
outsb
push
jnp
ds
lcall
inc
jmp
jle
mov
mov
inc
dec
dec
pop
mov
sub
push
adc
pop
out
dec
adc
or
lea
in
xchg
push
xor
mov
aas
push
insl
dec
aaa
xchg
cli
fdivl
scas
mov
add
les
sbb
xlat
push
xchg
add
mov
cli
xor
cmp
adc
jmp
movsl
adc
ret
outsl
dec
xor
sbb
in
lcall
adc
pop
in
mov
xor
xchg
mov
jge
movsb
inc
movsl
inc
cld
testb
or
xchg
es
xor
in
movb
imul
add
sbb
mov
mov
loopne
stos
dec
sub
mov
lahf
dec
icebp
and
fnstenv
enter
das
push
scas
inc
mov
adc
mov
sub
or
add
mov
in
shrl
or
cs
sahf
cmc
push
inc
mov
jmp
jo
sbbb
sbb
int
pop
lret
jnp
sbb
rcl
xchg
jmp
push
mov
psubb
sub
and
xlat
xor
test
dec
sahf
jbe
ja
pop
hlt
aas
test
loope
dec
push
adc
cld
pop
cmc
gs
ret
dec
sbb
sub
aam
pop
push
sbb
xor
cmp
mov
xor
daa
in
mov
mov
in
sar
mov
faddl
and
sub
cli
fnstenv
add
xchg
inc
imulb
insl
mov
sub
dec
test
push
test
or
in
push
mov
mov
test
xchg
dec
sbb
mov
mov
rcrl
test
xchg
pushf
lahf
sbb
jmp
inc
mov
add
insl
popa
outsl
aaa
push
loopne
cmp
or
cmp
insb
xchg
or
pop
adc
insl
inc
push
and
cs
mov
push
stos
fistpl
mov
mov
dec
das
sub
jo
push
adc
mov
clc
mov
mov
mov
fdivrs
sub
mov
jno
out
sbb
add
mov
lahf
shrl
das
jl
or
inc
ss
push
mov
in
xchg
or
test
mov
xchg
dec
sbb
enter
lock
mov
mov
adc
outsl
insb
dec
dec
xchg
inc
icebp
bound
jg
dec
pop
push
dec
icebp
jg
mov
bound
lea
jl
fisubrs
add
jne,pn
pop
call
fildl
subl
push
lds
add
pop
xchg
pop
maskmovq
sbb
dec
jg
pop
dec
mov
insb
xlat
jmp
mov
mov
inc
fsub
xor
pop
mov
mov
xchg
sub
or
cld
or
dec
cmpsl
filds
aam
fidivrs
out
inc
sub
mov
xchg
mov
outsb
mov
in
xchg
icebp
mov
push
imul
sub
mov
cmp
into
leave
or
mov
cld
xor
lods
iret
in
pop
cmp
jle
rcrb
in
js
movsb
dec
rcr
pop
inc
icebp
mov
arpl
pop
test
clc
or
pop
and
mov
inc
adcb
and
jmp
pop
lea
test
rclb
mov
jnp
dec
mov
push
outsl
stc
jb
ret
lret
popa
push
jl
add
int
inc
cmc
fistl
mov
or
xor
jge
cmc
sbb
pop
in
pop
ret
mov
add
add
xchg
pop
and
je
cmpsl
in
and
jge
repnz
mov
jo
sub
divl
aad
cld
aaa
mov
lock
or
pop
pop
mov
rcll
enter
lret
pop
shrb
add
fstl
out
mov
adc
and
outsl
mov
inc
add
jne
test
cmp
stc
or
add
inc
into
cs
imul
cmp
out
das
inc
pop
push
nop
add
mov
mov
xor
test
hlt
push
push
inc
adc
ss
ret
adc
push
xchg
js
ss
fisttpll
jg
jno
rcrl
in
mov
popa
mov
add
mov
jmp
lea
je
push
jne
mov
dec
aas
xor
int
dec
arpl
mov
xor
sti
in
jno
fcmove
in
in
dec
les
ret
adc
loope
icebp
xchg
sbb
xor
sbb
call
xchg
inc
roll
and
andb
int3
outsb
and
or
ja
dec
out
pop
add
pop
push
cmp
pop
icebp
and
add
lret
pop
clc
data16
movsl
cwtl
sub
adc
pop
or
pop
add
add
call
mov
arpl
hlt
andb
jmp
dec
inc
insb
mov
or
jo
adc
les
mov
dec
flds
jle
loope
xor
and
test
stos
push
and
ret
xor
cmpsl
sub
ja
push
mov
pushf
push
mov
aam
add
test
inc
mov
repnz
loopne
dec
cmp
popa
fcomps
or
or
adc
dec
nop
push
ret
idiv
fists
sbb
cs
xor
out
mov
aad
out
add
in
loop
test
cmp
ja
sbb
scas
cwtl
adc
mov
dec
dec
xor
lods
or
fldt
dec
xlat
loopne
pop
inc
imul
lock
add
dec
or
jb
dec
rol
push
push
fiadds
push
and
add
loopne
and
xor
mov
cmc
aam
inc
push
pop
xor
ljmp
mov
push
loop
inc
ret
insl
pop
or
or
xchg
cs
ja
xchg
add
jge
or
aaa
cmp
stc
mov
xchg
and
aaa
push
mov
fwait
add
insb
jae
and
mov
clc
scas
loop
jae
int
cmp
mov
mov
or
sti
push
outsb
add
aas
pop
mov
mov
sbb
lods
fidivrs
mov
iret
xor
and
pop
mov
mov
fidivl
sahf
das
scas
adc
jb
ljmp
add
addr16
jae
add
mov
inc
ret
mov
in
cmpsb
sbb
push
adc
adc
sbb
in
lret
sbb
ret
std
das
lds
decl
push
pop
mov
and
aad
stos
lcall
call
test
mov
dec
rcl
and
clc
sbb
leave
mov
mov
das
dec
jnp
xchg
pop
dec
lret
mov
mov
jbe
sbb
xchg
out
ljmp
sti
xchg
and
rclb
cmp
jecxz
ljmp
cld
or
push
in
data16
inc
lock
les
in
testb
mov
cli
dec
adc
mov
push
fildll
gs
add
fcmovnu
push
xlat
sbb
lods
cltd
rolb
cwtl
cmp
and
push
lock
push
fadd
mov
push
push
jle
dec
and
gs
xchg
ljmp
insl
cltd
mov
cld
inc
xor
movsl
xchg
in
dec
push
mov
xchg
mov
dec
add
jae
xchg
xchg
xchg
std
inc
lock
cmpsb
fldt
bound
mov
icebp
es
shrl
jecxz
cmc
xor
aam
pop
add
cs
call
shll
mov
and
or
push
repnz
or
pop
out
cmp
leave
daa
sahf
cld
adcb
mov
fildll
add
scas
sub
add
inc
enter
mov
fs
lret
add
or
daa
jo
sbb
push
loope
add
pop
mov
je
lods
fistps
repnz
int3
xlat
out
out
xor
mov
pop
inc
arpl
xchg
inc
push
or
lock
outsl
push
mov
jp
mov
and
lea
push
jecxz
int3
inc
aaa
mov
mov
movsb
enter
popa
andl
sahf
shlb
inc
add
or
pop
sbb
mov
mov
cld
or
cmp
or
fldcw
insl
rcrl
inc
push
push
mov
rolb
cld
push
enter
sarb
jecxz
jae
leave
insl
loopne
imulb
push
into
mov
jns
xchg
icebp
jbe
adc
in
popf
push
inc
lock
push
cmp
sbb
mov
shl
mov
loope
pop
fdivrp
in
rcrl
imul
stos
adc
in
xchg
or
add
or
or
push
pop
cmp
cli
lods
mov
and
dec
out
cltd
lcall
mov
scas
pop
sbb
xchg
pop
psrlq
mov
testb
inc
loop
adc
mov
insl
je
lret
adc
push
push
mov
mov
fisubs
adc
test
das
mov
in
jmp
jmp
outsl
lods
push
jp
inc
stos
lods
addl
lds
push
push
add
es
dec
mov
out
mov
sti
test
pop
movsb
jne
add
mov
or
pop
rorb
into
stos
mov
jp
pusha
cmpb
aaa
outsb
push
and
cmp
cmp
fisttpl
or
loopne
mov
jg
repz
inc
ret
mov
icebp
push
mov
sbb
clc
mov
or
ss
notb
mov
jp
pop
test
sub
imull
jg
xchg
and
adc
les
or
mov
mov
sahf
jbe
pushf
cmp
out
fs
mov
loope
adcb
push
push
mov
sub
xlat
testb
sbb
rcrl
dec
mov
gs
add
lea
jge
iret
ds
sbb
ja
push
add
movsb
cltd
enter
iret
and
lock
and
addr16
adc
adc
xorl
negb
stos
add
xchg
dec
push
or
pop
add
clc
mov
std
or
rcrb
mov
ret
cmp
jo
stc
mov
mov
adc
stc
roll
push
loop
xorb
dec
insb
stos
or
pop
pop
adc
test
mov
call
push
iret
or
jge
mov
pusha
inc
stos
dec
ljmp
sar
sbb
mov
mov
push
lods
nop
test
pop
aaa
jo
mov
out
xorb
add
jg
aaa
cmpb
cmp
jo
pusha
and
dec
add
test
lds
imul
cmpsb
and
into
or
scas
out
loop
aam
xor
loopnew
xchg
lahf
loop
adc
sti
fistpl
sbbl
mov
adc
xchg
push
adc
rolb
loope
sti
in
and
fisttpl
xchg
or
push
and
xchg
orb
push
divb
imul
jmp
xor
std
push
sbb
lock
repz
shlb
in
add
lea
ret
outsl
sub
ja
sub
mov
push
cwtl
leave
mov
mov
jmp
jg
mov
pop
mov
mov
lret
cwtl
add
popa
or
dec
xchg
pusha
mov
hlt
fists
jmp
xor
orb
outsl
xor
jo
lcall
icebp
adc
dec
scas
test
cmpsb
add
and
imul
in
test
insl
sbb
mov
lock
add
shl
fwait
push
je
jge
cwtl
mov
pop
add
mov
mov
cwtl
or
fisttpl
mov
ja
add
add
adc
ficompl
nop
push
sub
mov
xor
push
nopl
push
sbb
fldt
dec
mov
inc
mov
lcall
das
cmp
rorb
inc
inc
stos
imul
xchg
pop
mov
pop
jb
in
inc
pusha
push
cmp
inc
mov
inc
add
int3
mov
mov
pop
cmp
xor
sahf
jb
icebp
inc
lds
js
jg
cmpb
fldl
pushf
cmp
sbb
andl
mov
inc
push
das
jl
loopne
out
bnd
mov
push
hlt
adc
fcmovbe
jle
daa
mov
lds
out
and
xchg
xchg
cmpsl
add
mov
loop
cwtl
mov
aaa
push
cs
xchg
add
int3
adc
or
add
pop
cwtl
push
ljmp
mov
sub
js
push
fmuls
xchg
mov
movsb
test
or
imul
lcall
faddp
scas
pop
pop
pop
cli
out
int3
fwait
cli
lea
jge
or
sub
pop
adc
mov
fdivl
jp
lcall
fisubrs
push
adc
in
cmp
push
jns
adcl
sbb
and
test
adc
test
pop
mov
outsb
xchg
mov
push
cmp
fistpll
push
mov
fidivs
test
pop
out
call
movsl
xchg
mov
and
inc
dec
lods
rol
cmc
cmpsb
cmp
ret
push
xor
mov
das
dec
sbb
ret
push
andl
roll
loopne
addl
cmp
stc
sbb
mov
xor
fwait
jo
shl
push
pop
cltd
inc
bound
testb
inc
and
jmp
insb
out
mov
clc
and
ret
jmp
ljmp
repz
mov
fistpl
xorps
cmp
adcl
mov
pop
popa
popa
cwtl
test
pusha
ja
or
mov
add
dec
lock
loopne
andl
fimull
sbb
pop
aaa
push
xor
insb
inc
mov
xlat
jo
cmc
dec
rcll
mov
aas
xchg
pop
mov
mov
fldl
je
ret
in
jg
mov
icebp
mov
sub
sahf
xchg
insl
test
mov
inc
popa
movsb
dec
jbe
std
test
call
ret
mov
add
out
or
lods
mov
mov
jne
adc
rcrb
push
jnp
jo
and
push
mov
cmp
out
inc
aas
fidivrs
out
push
into
pushf
scas
in
insl
testl
jge
test
and
sub
test
inc
out
mov
clc
ret
jb
mov
pop
scas
dec
jbe
lods
mov
outsl
sub
xchg
out
cmp
loop
arpl
or
idivl
push
bound
jp
pop
push
subl
jns
adc
stos
jae
and
xor
lds
in
pop
shll
inc
mov
xchg
jno
pop
ret
adc
icebp
or
mov
pop
and
nop
inc
xor
imul
call
push
repz
sbb
cmp
pop
jg
inc
jo
jp
mov
es
add
and
loop
aas
dec
loop
sti
mov
cmpb
cld
add
push
lods
bound
add
cld
popf
adc
out
rcrb
pop
imul
popa
push
lock
stos
test
mov
adcb
inc
js
call
icebp
sub
pop
dec
testb
lock
jmp
int3
jae
in
mov
xlat
insl
ja
shr
scas
sub
inc
xorl
push
stc
inc
out
ja
filds
mov
mov
cmp
popf
les
cs
xchg
push
jae
lcall
fildl
pop
dec
add
xor
adcb
scas
in
arpl
jb
adc
stos
js
pop
insb
mov
sahf
rcrb
mov
test
xchg
subb
pop
add
inc
pop
pop
and
jmp
andb
rcr
movsb
inc
fiaddl
bound
push
das
cld
xchg
adc
out
cld
repnz
shlb
sbbl
mov
jbe
jmp
cmp
mov
mov
mov
test
jae
hlt
xchg
or
outsl
or
lds
mov
lds
sbbl
js
mov
pusha
pop
sub
push
insb
inc
mov
pop
inc
sub
xor
filds
cmp
ss
push
cs
shll
pop
bound
adc
fstl
test
mov
xor
mov
mul
pop
bound
outsb
add
jne
jbe
lcall
pop
loop
dec
es
or
int
loop
mov
outsb
insl
push
mov
jmp
mov
cs
jmp
and
pop
lret
fucomp
mov
les
subl
add
fiadds
test
xor
sub
inc
mov
mov
jmp
test
and
fdivrp
push
shrb
push
les
andl
push
aaa
xchg
xchg
xchg
out
mov
in
xchg
mov
std
dec
mov
or
mov
inc
addr16
mov
mov
fidivs
cld
or
push
jb
jns
pop
mov
sti
mov
xchg
lcall
jb
shll
pop
clc
or
test
je
add
ljmp
mov
jecxz
add
jbe
inc
stos
js
mov
mul
and
push
fsubs
or
and
mov
in
cmp
std
cmpsb
dec
aam
mov
lods
aaa
popa
gs
shrb
push
add
or
das
mov
jo
stos
sbb
ja
mov
pop
mov
sub
in
dec
jbe
pop
out
push
pop
movsb
movsb
and
je
push
mov
sub
push
xchg
inc
or
ljmp
fnsave
jne
ret
repnz
dec
mov
test
fidivl
add
and
jno
out
ljmp
adc
adc
into
cmpsw
pop
sbb
and
xor
mov
dec
and
mov
xor
fistpll
sbb
repnz
push
movsl
jno
jne
daa
les
outsl
mov
xchg
std
movsl
add
lds
mov
stos
mov
outsb
mov
in
int
outsl
xchg
adc
outsl
pop
je
inc
out
sbb
out
in
ljmp
push
scas
hlt
insb
jmp
outsl
movsl
sub
xchg
xchg
ret
insb
in
clc
or
adc
pop
sub
xor
cmpsb
sbb
adc
shlb
pop
cli
orb
shrb
pop
aas
movsl
repz
fldcw
inc
xchg
mov
mov
ds
mov
or
cmp
xor
orl
in
xchg
out
dec
adc
shlb
pop
jle
notl
adc
jmp
mov
push
and
pminsw
outsl
dec
into
add
pop
fs
adc
dec
xchg
and
inc
push
xchg
sbb
movsb
mov
stos
xchg
cs
aam
mov
sbb
test
mov
lahf
mov
xchg
cs
jns
js
jbe
sbb
adc
lahf
or
or
and
int3
int
lods
xchg
jbe
lcall
mov
icebp
xchg
movsl
out
sti
push
push
ja
xor
cmp
mov
mov
add
or
jg
adc
adc
out
add
lods
test
outsb
in
add
and
add
lea
push
dec
mov
cmp
icebp
dec
dec
data16
mov
mov
dec
inc
nop
das
insl
push
sti
mov
and
push
cmp
jo
ja
push
adc
cld
in
cmp
pop
pop
stos
popa
add
idivl
pop
icebp
lds
pop
jle
fldt
jnp
popa
aam
push
outsl
rcrl
xchg
addb
mov
and
mov
subb
mov
push
pop
mov
mov
arpl
push
adc
push
aas
push
jmp
mov
inc
sbb
adc
cmpsb
xor
shll
test
add
cmp
mov
loope
imul
xchg
sbb
mov
mov
jae
add
push
and
pop
adc
xchg
xor
test
mov
push
ffreep
lods
or
xchg
popf
pop
aas
xchg
pand
fbstp
je
std
jnp
repz
or
pop
mov
adc
cwtl
sub
in
or
incl
sub
and
int
ljmp
mov
add
or
and
enter
mov
sbb
mov
xor
jge
mov
and
push
inc
jl
mov
cmpsl
daa
and
xor
or
outsl
mov
pop
cmp
out
or
push
xchg
lret
insb
sbb
jmp
and
leave
xor
add
mov
movsl
jl
icebp
hlt
inc
leave
push
push
xor
mov
mov
push
or
jb
adc
test
sbb
cltd
sbb
int
mov
jecxz
scas
adc
push
push
and
orb
leave
jmp
lea
sbb
mov
and
mov
add
sub
jle
cli
and
pushf
inc
sbb
inc
bound
mov
adc
xchg
jp
repnz
cmp
inc
pop
fcomip
push
scas
adc
xor
push
inc
push
add
mov
mov
xchg
cmpsb
in
mov
mov
mov
fs
inc
seto
mov
dec
ret
sbb
inc
xor
decb
movsbl
xchg
xchg
cmpsl
xor
rolb
fbstp
mov
mov
pop
sahf
push
mov
je
ret
push
add
pushl
scas
mov
ret
cs
aas
mov
mov
xchg
adc
dec
add
dec
jno
pop
sbb
push
and
sub
es
xchg
pusha
push
insb
mov
or
pop
ljmp
shlb
int3
jg
cmp
add
inc
push
out
adc
sti
inc
xchg
jb
jmp
loope
fsubl
mov
popf
mov
xchg
je
das
cs
or
mulb
mov
xlat
add
mov
mov
shll
pushf
movsl
aad
ret
scas
jle
push
xchg
mov
aam
mov
mov
jp
lds
dec
nop
imul
stc
or
mov
shlb
mov
pop
mov
mov
loop
fimuls
cmc
pop
cmc
add
push
dec
mov
outsb
movsl
loopne
dec
stos
outsb
dec
cld
pop
mov
push
test
adc
outsb
add
xchg
xor
xlat
sub
std
mov
pushf
xchg
push
std
test
lcall
dec
sub
jle
mov
ljmp
mov
dec
test
stos
and
lods
in
movsl
and
or
add
addr16
add
ret
and
cltd
inc
std
and
or
xor
sar
jg
ds
cmp
cmpsb
inc
jmp
jl
mov
enterw
cli
inc
inc
xchg
adc
or
shr
pop
push
lds
xor
cs
push
jge
test
push
or
mov
sahf
push
jbe
loop
pusha
push
add
out
inc
add
or
sbb
mov
cmpsb
or
pusha
fmull
inc
pop
outsl
sbb
jnp
push
test
ljmp
dec
jle
mov
xchg
lcall
mov
dec
rcr
inc
mov
nop
pusha
cmpsb
cmp
sub
xor
das
shl
sbb
inc
gs
mov
adc
pop
or
repnz
jg
pop
xor
mov
jecxz
in
cs
push
pop
push
adc
or
push
or
orb
cli
dec
push
jg
ret
xchg
cwtl
adc
nop
push
mov
adc
jb
sub
movsb
fwait
test
fs
jle
stos
call
or
pop
pushf
stc
stc
sbb
in
outsl
insl
inc
jmp
fcmovbe
jnp
xor
test
add
and
pop
sbb
add
std
add
imul
in
mov
mov
mov
in
xor
fwait
inc
aad
rorb
test
nop
pop
stos
jmp
push
push
cmp
lods
pop
es
in
add
pop
mov
shr
mov
or
outsb
test
sbb
andb
adc
ja
add
mov
in
push
mov
sub
lret
stos
and
shr
pop
cli
es
xchg
and
aas
ljmp
outsl
mov
ficomps
mov
enter
mov
jno
add
mov
fs
add
add
popa
push
jl
lcall
lock
arpl
das
movsb
dec
and
jle
shll
incl
adc
clc
lods
ficoml
cli
jg
inc
aaa
inc
inc
or
lahf
fadd
add
fldlg2
dec
ljmp
pop
add
adc
cmp
outsl
mov
inc
cmp
movsl
loope
push
fwait
mov
mov
mov
or
dec
push
jb
jge
loopne
mov
mulps
movsl
xchg
pop
movsb
xchg
div
dec
aad
mov
jae
jb
loope
pop
fbld
cmp
imul
push
ss
es
mov
or
int3
xor
pop
mov
loopne
inc
scas
dec
mov
mov
pop
fldt
int3
add
aaa
and
add
adc
mov
ret
sahf
js
in
in
popf
stos
fimuls
cs
loop
pop
fidivl
xchg
lret
das
push
mov
fstpl
mov
pop
sarb
or
mov
and
popa
je
test
add
test
movsl
jg
dec
dec
add
int3
mov
xor
andb
push
sahf
dec
mov
mov
aam
gs
lea
push
pop
xor
lret
movsb
int3
mov
mov
cmp
add
dec
mov
ljmp
jle
ja
inc
cmc
mov
mov
mov
inc
out
adc
inc
xchg
jl
add
mov
dec
popf
sbbb
cmpsb
cmp
jmp
and
dec
js
push
mov
pop
inc
mov
dec
or
or
jge
clc
out
enter
sub
sbb
call
xlat
push
inc
dec
fildll
nop
cli
pop
dec
cwtl
jp
mov
jg
mov
iret
rclb
mov
adc
mov
fyl2xp1
je
rcll
add
jo
xor
add
lcall
mov
mov
cmc
or
call
fsubrp
cs
mov
sbb
mov
arpl
and
incl
adc
pop
xor
sbb
dec
lock
out
mov
fldt
andb
pusha
clc
mov
and
inc
mov
mov
or
cmp
sub
push
aad
cmp
bound
mov
pop
add
je
add
fildl
and
loopne
mov
test
fdivrs
repz
loopne
rolb
test
sbb
cmp
or
cli
or
jecxz
mov
add
xor
sbb
inc
packssdw
test
loop
and
inc
or
pop
add
jb
sub
test
lahf
push
insl
mov
dec
pop
vmwrite
in
dec
cltd
js
outsl
mov
jl
stos
pop
test
notl
shll
xor
lock
dec
add
push
jp
call
loop
imul
lea
faddl
sub
pop
sub
mov
mov
testb
jae
cmc
scas
fisttps
popf
and
test
leave
inc
jns
dec
lock
ljmp
push
das
dec
push
push
icebp
scas
call
sti
out
push
push
mov
test
mov
rorl
fwait
jle
sbb
fdivrs
gs
iret
or
outsl
adc
cld
roll
inc
inc
out
sti
sbb
fiadds
fld
inc
orb
xchg
mov
mov
repnz
xchg
call
adc
xchg
mov
mov
sbb
xor
xlat
fsincos
mov
add
lods
insl
dec
dec
mov
push
aaa
xor
sub
jae
ret
sbb
mov
and
imul
das
fistpl
bnd
pop
ljmp
incl
or
jbe
out
fcos
or
loopne
outsb
adc
in
jg
dec
adc
adc
or
test
mov
daa
fnstenv
call
imul
rolb
aam
mov
mov
insb
mov
mov
mov
lret
popf
adcl
or
filds
cli
testb
inc
addb
jbe
insb
cli
lea
ljmp
jns
and
aaa
push
jb
add
push
call
xor
imul
out
push
shl
mov
xchg
xchg
pop
loop
std
adc
nop
cld
mov
pop
and
dec
push
push
jg
push
adc
mov
xchg
inc
or
lock
mov
or
push
test
dec
jecxz
jnp
mov
jbe
and
lea
inc
mov
je
cmp
pop
js
rorl
sbb
ljmp
pop
rorb
push
in
inc
test
inc
fildll
insb
std
sub
repz
fwait
mov
or
push
and
dec
mov
shll
mov
insl
push
lods
jp
out
rcrl
dec
push
hlt
arpl
add
inc
out
sub
dec
xchg
int3
jne
lea
lcall
movsl
inc
mov
dec
sbb
add
dec
push
sbb
test
fldcw
mov
push
sub
out
jns
je
sub
push
fstl
add
mov
inc
xchg
push
mov
fisttpll
sti
movsl
movsl
mov
jp
shl
push
mov
out
dec
mov
push
inc
adc
outsl
cmpsl
add
test
mov
out
clc
test
push
enter
adc
lcall
mov
orl
mov
xlat
shll
mov
ds
decl
add
arpl
xchg
mov
loopne
inc
dec
mov
push
dec
inc
xchg
cmp
outsl
lods
mov
and
imul
cmp
cmp
adc
ss
and
mov
or
jle
psubq
iret
and
xor
pop
sub
aam
popf
outsb
fcoml
pop
popf
cmc
xor
jo
add
lahf
xchg
cmp
cli
xchg
sbb
push
data16
rol
ds
or
pop
aaa
decb
popf
fwait
test
sub
insl
out
ds
push
mov
aam
jl
outsl
in
add
dec
test
push
repnz
sbb
sbb
sbbb
lods
js
inc
sbb
push
xor
loopne
je
adc
mov
mov
inc
repnz
sbb
int
mov
inc
icebp
mov
sbb
loopne
xchg
mov
inc
inc
cmc
lea
adcl
call
cld
dec
es
mov
mov
test
das
out
out
pop
jl
jmp
inc
pop
fdivr
test
pop
in
insb
jecxz
fchs
inc
add
test
loopne
outsl
jb
jb
lds
sub
imul
or
nop
out
stos
aas
mov
push
or
jp
xor
in
sti
pop
cmpb
aas
xor
xchg
jo
arpl
sbb
dec
lds
push
pop
adc
movsb
ss
push
sahf
icebp
sbb
sbb
in
xchg
add
sbb
or
ja
ret
imul
loope
inc
jp
add
orb
and
mov
hlt
movsl
dec
mov
loope
leave
std
or
add
dec
mov
outsl
mov
sbb
fistl
ja
sbb
mov
mov
cld
xchg
sti
inc
inc
outsl
and
cltd
sbb
push
mov
push
xchg
or
sbb
std
or
xchg
sub
mov
sbb
test
inc
incl
daa
jno
test
out
mov
addl
sahf
test
xchg
outsb
adc
pop
push
into
fildll
lods
push
outsb
aaa
rcrl
mov
add
push
and
inc
dec
lock
dec
cmp
sbb
cld
xor
cld
pop
inc
aad
push
shll
fisubrs
cmp
dec
pop
pop
cmc
aaa
jle
les
subl
in
push
push
sbb
inc
idivb
jne
lock
dec
popf
or
outsb
sbb
subb
dec
lahf
jmp
xor
adc
stos
into
loop
xor
in
cmp
aaa
rorb
das
dec
enter
lcall
test
jl
dec
imul
jne
les
adc
mov
cmpb
test
andl
loopne
push
fldenv
adc
sub
fisubrs
xchg
out
or
std
in
lcall
pop
sub
loop
cwtl
lock
mov
mov
sarb
cmc
int3
lods
iret
add
pop
or
xchg
sub
insb
aam
cmp
mov
push
testl
pop
or
repz
push
mov
dec
popf
idivl
stos
filds
or
inc
fistpl
in
popa
sub
sbb
mov
incl
adc
mov
push
push
and
mov
lods
fstp
outsl
mov
enter
sbb
jno
leave
scas
or
cli
cmp
sub
xchg
push
lods
shll
mov
lock
cld
mov
out
cmc
in
or
xchg
push
sahf
sub
pop
jne
push
inc
add
fstp
mov
scas
insl
inc
dec
std
enter
in
sbb
repnz
cmpsl
dec
pop
cmp
gs
mov
push
sub
push
cmpsb
addl
stos
sarl
jne
fdivrl
clc
in
mov
lahf
xor
insl
int3
inc
or
popf
jg
stos
jp
cwtl
mov
or
out
shrb
mov
push
jecxz
pop
into
nop
rclb
mov
repnz
pop
inc
aas
testl
ret
subl
movsb
mov
scas
mov
and
adc
pop
inc
push
into
inc
aaa
fcompl
adcb
movsl
dec
push
aad
sub
dec
inc
pop
pop
inc
repz
call
insb
test
mov
pushl
rcr
or
xchg
in
jmp
xchg
sub
push
insl
pop
pop
in
push
scas
and
jbe
fcmovnu
and
jb
or
and
push
movsb
add
pop
mov
push
lahf
adcb
push
pop
push
sbb
sbbb
aas
mov
pop
fsubrs
js
inc
adc
fs
mov
scas
mov
pop
add
pop
dec
adc
push
stos
andl
imul
mov
xchg
lcall
or
repz
add
in
pop
cld
sbb
cmp
in
pop
sbb
mov
lods
in
push
xchg
sbb
ljmp
adc
in
lods
cmp
cmpb
xchg
fwait
pop
mov
imull
fbld
mov
sub
jnp
xor
cmpsl
in
ffreep
aaa
out
fisubs
push
add
movsl
mov
mov
clc
mov
lea
inc
add
inc
mov
les
outsb
inc
and
pop
sub
push
iret
sbb
loope
add
dec
jmp
cmpsb
call
cltd
mov
loope
inc
xchg
xor
adc
or
sub
mov
insb
nop
cmp
mov
movsb
aas
outsb
les
pop
in
mov
fcoml
test
ret
inc
cld
jle
mov
jb
fwait
pop
mov
out
adc
stos
bound
push
arpl
ljmp
fpatan
sub
push
mov
nop
mov
sbb
outsl
jae
arpl
sahf
call
mov
ficoms
xsavec
aaa
aaa
mov
pusha
jp
or
std
mov
xor
fsubs
xchg
outsb
popf
jns
fidivs
sub
sbb
cmc
cmp
loope
lahf
js
push
sub
pop
dec
outsl
in
inc
inc
test
mov
out
mov
jle
scas
fwait
mov
xor
inc
enter
jmp
std
mov
imul
and
sub
mov
jne,pt
and
dec
rclb
mov
mov
mov
out
cmp
dec
or
sub
pop
loop
push
add
xor
mov
adc
mov
shll
ret
xchg
in
add
es
rolb
outsl
sti
test
sub
negb
out
stos
fmuls
sub
pop
ss
or
popf
aam
adc
aaa
rolb
js
leave
incl
and
add
ret
jg
add
rcl
sbb
fdivrs
hlt
dec
shrb
xchg
dec
addb
add
mov
mov
sti
iret
cmpsb
hlt
enter
imul
mov
bound
jmp
aaa
dec
inc
outsl
push
test
mov
clc
push
fnsave
arpl
inc
mov
pop
mov
xchg
pop
sbb
pop
xor
pop
flds
aad
sar
rolb
sti
inc
test
sub
daa
cmp
testb
mov
sub
out
push
call
xchg
pop
enter
xor
jg
pusha
cmpb
jl
add
sub
dec
cmc
or
lret
stc
dec
mov
adc
test
mov
jne
dec
cmc
add
xor
fst
mov
cld
stos
imul
fdivrs
jl
ja
hlt
lds
clc
dec
out
and
aad
aaa
adc
sbb
xchg
sbb
xchg
xor
jp
comiss
sbb
inc
jg
testb
xchg
test
nop
in
add
pushl
gs
popa
into
bsr
in
and
xlat
mov
mov
add
add
pop
push
sbb
mov
outsb
xor
iret
fists
xlat
mov
lret
daa
jmp
jge
fiaddl
and
sub
loopne
xchg
js
add
divb
jb
or
aas
and
mov
sbb
mov
pop
gs
push
lahf
mov
js
mov
sub
je
lea
push
add
fdivp
pop
cmpsb
xchg
inc
std
in
popa
mov
dec
sub
mov
ss
or
sub
mov
push
push
rcll
movsl
shlb
icebp
add
lock
cltd
mov
aad
or
mov
pusha
push
insb
pop
mov
hlt
sub
or
mov
push
sub
push
sub
or
inc
loope
ficoml
dec
adc
fs
stos
dec
loope
mov
jl
add
mov
or
and
call
adc
mov
mov
add
xor
movsl
adcb
test
cmp
push
insb
inc
jge
fs
ljmp
loopne
mov
add
fistpl
aam
sarb
pop
mov
push
or
notl
mov
pop
enter
inc
in
cmpb
js
push
xchg
call
mov
les
add
mov
inc
push
pop
add
adc
jmp
push
arpl
pop
gs
jle
and
mov
or
jnp
inc
push
or
and
cmp
aad
jns
push
outsb
mov
mov
into
in
movb
ret
ficoms
push
and
popa
adc
test
cmc
mov
pop
out
je
mov
in
jb
fisttpll
xchg
sub
inc
inc
push
and
stos
int
jo
adc
sub
or
jge
je
push
inc
mov
sub
pop
or
add
movb
mov
jbe
cmpsl
clc
adc
movl
and
add
mov
out
mov
loopne
add
dec
push
pop
pop
test
cmp
jecxz
pop
sbb
xor
mov
cmpsl
in
or
fwait
mov
mov
aad
lock
popf
push
push
js
rclb
in
cmc
test
ret
lock
cmp
sbb
push
je
jno
cmp
fmuls
dec
jno
sbb
dec
aam
inc
dec
gs
rcr
or
dec
aad
or
jg
push
out
cwtl
push
jecxz
push
push
mov
xor
lcall
cmp
or
xchg
enter
sti
push
mov
push
std
divb
inc
rolb
cmp
and
insl
add
mov
aad
sub
adc
cmp
loop
pop
xchg
or
mov
popf
mov
jle
fucomip
movsl
pop
push
and
xchg
lret
jg
shl
dec
adc
mov
sub
pushf
icebp
fs
leave
push
loope
cmc
scas
xchg
cmp
aad
add
fcomi
pop
inc
mov
mov
lock
or
sub
mov
fdivrp
jl
jbe
stos
mov
push
sbb
mov
mov
rcrl
or
pop
inc
add
lcall
add
mov
jno
fs
ljmp
fbld
cwtl
lret
inc
dec
lahf
mov
call
es
filds
call
mov
pop
ja
lcall
mov
pop
push
or
sbb
push
adc
xchg
loopne
ljmp
inc
sub
imul
iret
add
pop
je
jmp
shrb
mov
popf
clc
fmuls
cli
cmpsb
xor
push
dec
cli
inc
jb
or
mov
adc
loop
cmpsb
popa
push
int
clc
inc
inc
cmp
sbb
cmp
adc
cld
aaa
add
or
js
mov
loop
arpl
lds
rcrl
jg
sub
xchg
or
inc
adc
sbb
fisttpll
cmpsb
jge
cmp
xor
mov
or
push
add
fcoml
loopne
add
inc
lock
jbe
inc
loope,pt
mov
cmp
inc
std
cmpsb
and
fwait
or
and
xor
mov
outsl
add
pop
push
pushf
xor
lds
push
cmpb
sbb
push
pop
lods
inc
arpl
pop
cli
scas
mov
cltd
and
movsb
shl
push
fisttpl
sbb
ljmp
std
pop
shll
push
loopne
std
les
iret
mov
or
mov
adc
sub
mov
lods
or
and
lret
xchg
sti
sahf
add
call
ret
or
loope
pop
xor
orl
pop
mov
mov
aad
frstor
or
adc
xchg
sub
cmpb
in
xorb
loopne,pt
and
in
mov
jge
push
xchg
sbb
inc
dec
and
cmpsl
xchg
ficompl
inc
sar
sbb
push
pop
push
imul
add
ljmp
xchg
adc
inc
fnstenv
hlt
mov
or
mov
out
jg
iret
testb
mov
cmpsl
fs
shlb
shlb
mov
cmpsb
ret
sbb
out
jge
cmp
dec
mov
jecxz
jnp
popa
adc
in
cltd
cmpsl
icebp
ret
loope
xchg
lret
push
mov
in
mov
and
mov
lea
clc
xlat
dec
xchg
mov
mov
bnd
pop
inc
std
ret
push
sbb
and
in
cmp
or
imul
lock
ljmp
icebp
cwtl
sub
daa
and
adc
push
adc
stc
jne
insl
inc
inc
jp
and
pop
cli
mov
dec
ret
push
pop
bound
jnp
xchg
mov
inc
or
les
sub
aaa
lock
je
xor
push
jmp
mov
mov
scas
xchg
ljmp
out
fildll
pop
stc
addps
test
gs
and
xchg
cmpsb
dec
fidivs
cmovg
pop
push
dec
add
clc
sbb
inc
aaa
inc
adc
arpl
orb
daa
mov
js
ds
push
push
inc
cs
mov
mov
sbb
dec
inc
and
mov
test
and
sbbb
stos
jge
test
add
outsl
lock
in
mov
sbb
mov
test
or
sub
pushf
jae
xorb
loop
leave
test
adc
in
xchg
cmpsl
and
mov
call
mov
fistpll
clc
adc
lock
mov
shr
jb
test
call
mov
inc
fisubs
roll
pop
nop
jns
and
aad
out
mov
mov
pushf
in
or
cltd
sbb
push
addl
inc
jne
xor
push
imul
pop
mov
repz
and
mov
adc
sbb
or
in
fstps
jno
push
fistl
mov
and
addr16
add
or
pushf
inc
add
ret
cli
lea
cli
inc
aad
jmp
loopne
mov
inc
sarl
jo
hlt
mov
mov
push
rcrb
aam
loop
mov
push
xchg
pop
stc
clc
jb
mov
fdiv
mov
xchg
and
xor
mov
out
ss
icebp
and
inc
push
out
ds
push
ds
fnstsw
ret
ss
sub
dec
inc
inc
jmp
icebp
dec
xchg
mov
push
int
loop
lods
mov
or
outsl
cmp
pop
jno
adc
or
and
cmp
ds
ret
repnz
lret
repz
mov
ja
adc
adc
sti
das
mov
nop
dec
scas
lock
shlb
fs
sub
loopne
out
inc
xchg
push
loopne
mov
jmp
xchg
push
inc
sti
mov
out
mov
ret
rclb
popa
xor
add
popf
nopl
rcrl
push
lock
das
pop
push
push
inc
fldt
sub
or
mov
pop
jp
inc
push
sbb
add
in
xor
iret
ja
lock
std
or
xchg
lret
adc
daa
or
rcrb
mov
sahf
mov
lods
mov
sbb
scas
pop
inc
sbb
addb
mov
mov
loop
jl
jmp
shl
popa
push
xor
icebp
std
loope
mov
loopne
fildll
push
addr16
test
jmp
and
and
imul
jmp
sbb
rcr
pop
or
repnz
dec
mov
lods
jle
jmp
stos
scas
mov
lret
mov
ret
mov
xchg
aas
jl
enter
add
cmp
addr16
out
pop
mov
clc
jg
sub
ficoml
jbe
sbbb
mov
call
sarl
sub
push
ja
test
mov
inc
idivb
stc
jno
pop
lods
movsl
daa
jae
lods
leave
pop
lock
push
xchg
mov
mov
das
adc
pop
add
sbb
jp
shr
and
or
add
jb
sub
adc
mov
sbb
das
push
clc
add
jg
mov
xchg
leave
in
push
sub
ss
movsl
incl
xchg
aam
sbb
push
in
sub
sbb
aad
pop
pushf
cmpsl
mov
xor
fs
aaa
mov
mov
orl
iret
scas
std
push
loop
lock
cli
sbb
stc
sbb
sahf
movsl
or
mov
repnz
repnz
popa
cltd
repz
and
push
jg
fisubrl
adc
jle
dec
dec
xchg
subl
aad
jge,pn
lods
push
imul
push
icebp
ja
dec
mov
sbb
mov
rorb
add
jmp
add
xchg
hlt
pop
inc
sbb
int
and
bound
fdivr
or
imulb
sbb
outsb
and
mov
call
ds
add
pop
pop
aas
inc
add
mov
inc
jecxz
leave
and
cmp
mov
mov
and
js
rorl
test
push
dec
cmp
rorl
cmp
jbe
mov
inc
mov
sar
sbb
lods
xor
movsl
sbb
fdivs
jo
adc
adc
ja
sbb
call
bound
les
ficomps
int3
gs
mov
pop
cmp
mov
cmp
mov
outsb
aad
jb
cmp
xchg
jp
addb
fcomip
pusha
and
gs
dec
mov
int3
mov
push
mov
pusha
in
jg
sbb
push
lock
das
insb
rcll
dec
popa
inc
sub
sbb
or
sti
sbb
stos
ret
test
sbb
and
lds
int
push
lahf
inc
jecxz
sub
mov
jb
xlat
jle
ljmp
arpl
fimuls
decb
clc
fildll
adc
shr
xchg
ficoms
std
fwait
scas
unpckhps
push
icebp
inc
xchg
and
imul
pop
fidivrl
rorb
pop
ds
lods
popf
xor
pop
adc
insb
add
test
imull
jb
aas
outsb
cli
movsl
fbstp
in
cli
andl
push
mov
jmp
lahf
popf
push
push
movq
sub
fistpll
add
mov
and
sub
mov
jle
push
unpcklps
out
push
rolb
adc
out
rcll
ja
pop
pop
push
negb
mov
mov
or
push
imul
mov
ret
rcll
mov
or
lock
add
add
mov
push
pop
push
shlb
jno
jb
fwait
orl
jne
jg
loope
std
mov
clc
out
push
popf
mov
sub
dec
xor
out
push
insb
or
sbb
jae
pop
sub
js
add
ljmp
push
mov
mov
and
and
pop
mov
and
jg
mov
mov
lods
adc
iret
adc
add
testl
out
pop
adc
dec
fmul
adc
dec
push
mov
sarl
mov
cld
cmc
or
notl
pop
sahf
or
mov
fists
or
movb
icebp
jecxz
popa
loopne
cmp
pop
andl
pop
aad
xorb
inc
mov
movb
jle
in
les
dec
and
scas
mov
adc
jle
or
cmpsl
add
mov
jb
pop
es
xchg
cmp
mov
sti
xchg
andb
or
cmpsb
inc
shl
out
out
push
lds
mov
adc
call
test
bound
jae
pop
aad
loop
enter
subl
test
cwtl
fidivrl
add
pushf
inc
pop
sbbb
mov
jmp
jle
and
movsb
outsb
xchg
rcrl
or
add
push
and
inc
mov
lods
outsl
sbb
adc
mov
push
xor
adc
mov
sbb
enter
loopne
loope
aaa
mov
leave
push
popf
popl
mov
mov
dec
rorb
adc
lock
mov
movsb
cwtl
sbb
fbstp
mov
or
shl
mov
loop
int
jbe
and
fs
cli
call
lcall
mov
jmp
jno
inc
popl
or
xchg
testb
nop
frstpm(287
aas
flds
loope
inc
or
test
je
or
dec
mov
hlt
rolb
fnstenv
xor
pop
add
lods
lock
ret
xor
cmp
call
pop
mov
inc
pop
outsb
jg
mov
adc
xrelease
repz
mov
rclb
hlt
pop
dec
stos
or
mov
fst
notl
test
push
sti
push
sbb
jbe
leave
pop
dec
jb
cld
jg
call
fcoms
mov
add
cmpsb
or
push
mov
adc
mov
lock
test
lods
cmp
aam
xchg
or
shl
clc
out
stos
jle
cmp
and
jne
pop
push
outsb
pop
pop
loopne
sub
ret
cmp
pop
test
xchg
cmp
adc
push
inc
dec
push
test
mov
ja
rorl
mov
decl
movsl
sbb
adc
add
mov
cli
add
test
pop
mov
push
sub
mov
adc
clc
test
or
xchg
jbe
push
add
mov
inc
xchg
or
xlat
mov
imul
adc
push
inc
fisttps
aad
pop
mov
mov
outsl
inc
fcoml
scas
sbbb
mov
std
mov
or
or
or
adc
out
jo
dec
imul
add
or
or
and
into
jecxz
jb
insl
dec
addr16
mov
xchg
sbb
mov
int3
sbb
or
xchg
mov
mov
cmpsb
aaa
test
adc
mov
mov
push
mov
les
xchg
mov
das
add
mov
xchg
pop
xor
loopne
nop
repz
aam
les
mov
mov
sub
lock
call
pop
loop
ret
std
fistpll
sub
jle
test
or
and
jmp
clc
out
pop
fisttps
in
xchg
lock
lret
push
fs
les
jg
das
mov
xor
mov
push
mov
std
in
inc
jecxz
or
stos
je
stos
jbe
and
lahf
or
decb
xchg
int
xchg
lea
push
stos
ljmp
addl
xchg
dec
aaa
mov
das
in
and
inc
pop
jne
js
imul
or
sbbb
fistpll
es
inc
lds
jp
jge
lock
rcrb
ss
mov
mov
data16
mov
test
xchg
outsb
pop
bound
or
decb
fcoml
rclb
pusha
mov
test
xchg
pop
sub
rolb
xor
adc
aad
subb
mov
adc
xor
jbe
mov
fs
add
pop
shl
jmp
mov
hlt
rol
sub
in
dec
jg
cltd
lock
pop
cmpsb
push
or
insb
ret
hlt
mulb
decb
push
add
ret
adc
or
cs
and
push
cmp
push
pushf
inc
ljmp
popa
cld
mov
adc
iret
fistpl
mov
loope
outsl
fdivrp
jg
push
fisubl
test
cmp
or
push
fimuls
pop
into
and
dec
es
xchg
sub
cmp
sahf
mov
stc
int3
or
mov
dec
mov
push
jno
jp
loop
cld
repz
adc
add
xor
popa
push
sarl
cltd
sub
enter
lock
test
es
movsl
jl
inc
dec
stc
push
shrb
lods
mov
and
jnp
and
and
xlat
xchg
lds
fstpl
mov
push
jbe
cli
and
sub
ret
int3
mov
sbb
loop
or
in
or
aaa
jbe
and
jge
ja
mov
mov
ret
mov
mov
pop
push
das
inc
inc
lahf
ret
fcom
in
neg
cmp
adc
sete
movsl
out
xor
dec
cmp
pop
mov
xchg
xchg
inc
jno
dec
xchg
jg
jo
mov
jg
adc
add
or
in
in
sub
jno
push
dec
mov
adc
mov
jae
and
mov
rorb
fs
sub
sub
ljmp
add
arpl
call
shrl
ret
lds
cmp
push
xor
mov
or
add
ss
repz
clc
pop
ljmp
pop
out
xlat
sub
adc
hlt
xchg
movsl
ljmp
dec
jmp
push
mov
xor
push
cmpb
ret
xchg
leave
outsb
sub
jns
adc
cmp
adc
add
jge
pop
aaa
int3
in
sub
xor
pusha
push
mov
adc
push
cmc
and
cmpsl
adc
and
add
xor
xlat
cli
in
jl
shll
dec
clc
ja
jno
test
sbb
push
add
push
xor
add
mov
jg
negb
mov
aas
cltd
bound
adc
cmp
add
mov
and
iret
lock
std
or
add
xchg
adc
outsl
ja
pop
cmp
imul
fbstp
jle
jbe
mov
xor
mov
sub
and
mov
out
fwait
jb
fwait
sub
xorb
and
rolb
orb
shll
mov
in
pop
adc
pusha
inc
and
jmp
sbb
jnp
int3
scas
hlt
into
shrl
stos
mov
jle
scas
rcll
dec
add
into
dec
sbb
sbb
push
shl
loopne
mov
inc
mov
or
iret
inc
push
mov
push
inc
outsl
push
cld
mov
sahf
cltd
out
cli
xchg
push
rolb
inc
mov
mov
cli
xchg
lret
out
inc
xor
or
xor
lods
adc
pop
gs
push
incb
in
xor
in
rclb
mov
das
sbb
aas
imul
cmp
and
jo
sbb
sub
js
inc
insb
and
sbb
roll
dec
jecxz
aad
add
ret
cmp
test
daa
dec
mov
add
push
dec
mov
inc
mov
mov
fbld
xchg
push
push
repz
lock
stos
stc
fwait
lods
pop
mov
or
adc
adc
mov
lea
vmovdqu
push
outsl
mov
incb
push
inc
sbb
adc
incl
xchg
lret
or
cmc
pop
xchg
movsl
add
mov
mov
sahf
pop
dec
lea
mov
xchg
negb
xchg
es
and
xchg
pop
fcmovu
mov
in
out
jecxz
mov
or
add
aam
mov
cld
aam
addb
jge
xchg
sub
or
jnp
lret
lods
or
push
jg
lret
push
adc
mov
outsl
outsl
addr16
cmpsb
aam
adc
aam
cwtl
xor
sub
out
inc
stc
in
sbb
adc
adc
push
dec
insl
sub
jge
push
movsb
fcomp
xor
lret
adc
cltd
cmp
fcmovnb
outsl
pop
jg
sub
cmpl
sub
mov
xor
jno
pop
pusha
xor
adc
add
inc
adc
add
push
mov
or
and
and
inc
shld
mov
jmp
add
aad
and
cmp
pop
pushf
pop
add
mov
fcomi
pop
add
loop
sbb
shrb
int3
dec
cs
setge
out
cli
into
sbb
mov
cmp
aaa
sub
push
push
pusha
jnp
sbb
mov
and
add
xor
daa
inc
leave
repz
sub
sub
adc
jmp
fisttpll
xchg
lea
gs
mov
lds
mov
lcall
mov
jg
mov
inc
adc
mov
lea
mulb
cmp
cwtl
sbb
out
outsl
inc
sub
inc
hlt
fstl
outsl
cld
mov
cmp
inc
inc
insl
jecxz
pushl
or
xchg
js
push
stos
fxch
push
jecxz
dec
clc
stos
in
xchg
inc
sub
popa
cmp
gs
cs
fcmovnu
mov
or
mov
stos
dec
shrb
lock
jge
pop
push
mov
fmull
xchg
mov
stos
cmc
call
pop
pop
or
xchg
cmp
fs
clc
inc
pusha
jb
imul
xor
rorb
sub
ret
aam
ficompl
test
in
add
lea
sahf
sub
jno
ds
rcr
insl
subb
das
std
mov
sub
pushf
and
fbstp
mov
mov
mov
mov
mov
mov
test
cmp
dec
outsl
push
cli
pop
add
dec
fadds
cmpsb
ljmp
lcall
adc
push
jmp
and
xor
jl
mov
mov
sub
mov
scas
shll
push
push
andl
xchg
aam
mov
push
dec
dec
les
rclb
xlat
mov
cli
int3
out
xlat
roll
xor
jmp
mov
fcomip
xor
into
jbe
mov
shrb
jbe
pop
jmp
outsl
pop
pop
mov
pop
add
xchg
pop
mov
jne
es
add
les
jle
push
sbb
stc
xchg
in
aaa
add
xor
inc
popa
movsl
mov
lret
mov
stos
xchg
rclb
addl
xor
push
sub
pushl
pop
lock
push
loope
sbb
sub
popa
std
fcomip
mov
mov
or
mov
jp
push
adc
clc
test
das
call
enter
into
pop
icebp
test
pop
inc
and
int3
hlt
push
dec
hlt
das
mov
pop
cwtl
push
pop
xor
cmp
je
scas
mov
mov
int
ja
filds
xchg
dec
push
int3
jmp
je
loope,pn
test
jecxz
pop
fs
stos
adc
jnp
pop
push
pop
insb
xor
imul
push
mov
xchg
jbe
xor
add
test
jno
cmc
mov
imull
inc
jne
cmpsl
mov
repz
inc
mov
mov
sbb
xchg
cmpsb
adc
pushl
in
bound
cli
sub
sarb
add
mov
aad
scas
fnstsw
adc
adc
push
pop
stc
popf
push
iret
hlt
xchg
outsl
sub
adc
shrb
xor
imul
loopne
push
call
cmp
xchg
pop
dec
push
lret
sbb
call
push
and
pop
adc
push
and
xchg
sbb
mov
mov
inc
bound
rcrb
mov
inc
leave
clc
add
arpl
mov
jo
adc
mov
outsb
inc
movl
lds
sti
psubb
xlat
test
inc
push
and
test
les
sub
and
jae
std
les
jbe
scas
cmpsl
es
ja
js
rcll
shlb
sbb
test
add
inc
mov
mov
ljmp
les
push
mov
stos
jo
adc
jns
push
jno
pop
outsl
mov
lcall
dec
lods
test
insl
shlb
jo
jns
sub
xchg
outsl
test
sub
js
mov
cmc
inc
jge
es
decb
sub
inc
mov
popf
stc
outsl
pushl
sbbb
in
call
cmpsb
jecxz
aad
dec
fistl
adc
test
js
and
and
mov
xor
inc
outsl
pop
out
mov
dec
insb
lret
xor
xchg
mov
js
fprem
push
push
jne
add
pop
add
mov
sbb
imul
loopne
pop
mov
hlt
add
sbb
fistpll
dec
pop
std
movsl
xchg
mov
jo
xor
into
hlt
in
jg
cmc
adc
sbb
test
cli
adc
or
mov
pusha
lret
and
je
cwtl
xchg
push
jo
jg
in
shll
or
push
flds
in
mov
or
dec
cmp
and
xchg
or
rclb
faddl
or
pop
dec
or
inc
lea
mov
faddl
arpl
test
mov
mov
or
mov
popa
mov
out
loopne
ja
popa
adc
pop
movsl
push
pushf
add
mov
loope
mov
mov
or
jno
sub
push
sbb
in
push
out
cli
mov
cmpsl
insl
pop
mov
and
fstl
stos
mov
cmp
imul
push
or
shrl
popf
or
mov
dec
insl
adc
mov
push
lods
stc
les
aad
push
std
jmp
fnstsw
pop
dec
push
mov
lods
std
cmpsb
testb
pushf
nop
scas
cmp
sbb
mov
fists
fisubl
add
arpl
cli
cmc
icebp
mov
xchg
and
pop
inc
pop
push
cwtl
sub
dec
xchg
cs
les
adc
mov
cmp
add
stos
xor
aaa
mov
inc
hlt
mov
mov
test
mov
sub
and
mov
addr16
mov
imul
nop
sub
cmp
jg
or
and
popa
ret
popf
test
jae
pop
adc
mov
or
scas
imulb
adc
cwtl
sub
shll
fistpll
pusha
inc
sbb
scas
sti
add
bound
push
ljmp
fisubrs
lret
mov
test
mov
pop
loopne
aad
push
push
adc
inc
pop
rclb
mov
mov
mov
fldt
lret
adc
sar
mov
mov
test
jle
ljmp
in
fidivs
xchg
rcrb
sbbl
scas
clc
pop
or
aam
movsl
mov
xor
mov
xchg
into
mov
aaa
inc
cmp
jp
pop
fdivs
in
loope
and
daa
pop
fisubs
js
push
xchg
rorl
movsl
xorb
cmpsl
sbbb
xchg
pop
mov
imul
or
ljmp
inc
hlt
xorb
lcall
pop
imul
inc
sar
and
out
jp
cmp
pop
inc
rolb
lock
imul
sub
aas
push
cld
cs
jb
mov
stc
das
inc
arpl
lods
and
test
dec
cmpsl
add
push
sub
pop
das
movsl
pop
inc
add
and
sub
jno
add
cmc
cmp
cmp
mov
mov
aaa
adc
adc
cmp
or
icebp
pop
fildl
jmp
cmp
mov
movl
adc
pop
mov
je
mov
cmp
rolb
add
mov
sub
add
jl
cli
mov
inc
xchg
gs
jge
mov
loope
into
sbb
and
imul
lcall
and
mov
dec
pop
es
lahf
in
inc
shr
jl,pn
adc
mov
inc
and
popa
test
jnp
jp
mov
xchg
xor
pop
test
push
inc
pop
faddl
aad
cmp
pop
pusha
or
cmp
xor
xchg
mov
fldt
sbbl
push
jae
aas
addl
rclb
out
mov
xchg
enter
ret
cmp
cmpsb
dec
loope
dec
mov
pushf
inc
mov
jle
xchg
pop
dec
subb
es
xchg
pop
and
inc
mov
jle
push
cs
adc
pop
pop
clc
dec
enter
test
mov
push
and
mov
outsb
sub
decl
xchg
push
sub
dec
out
dec
cmp
scas
xchg
in
xor
loop
pop
jo
inc
cmp
imul
xchg
ja
scas
js
push
and
pusha
ret
and
jmp
jg
inc
pop
mov
nop
scas
sub
or
pop
adc
or
ficoml
aam
adc
repnz
pop
out
sahf
test
push
push
loopne
jp
xchg
inc
push
cmp
cmovo
adcb
pop
add
mov
in
icebp
mov
ret
mov
out
daa
test
pop
mov
mov
addr16
mov
stos
pop
les
pop
mov
rolb
pushf
mov
iret
dec
lret
cld
push
ret
call
dec
arpl
sbb
xchg
in
js
lahf
fildl
outsb
je
test
cmp
jecxz
xor
sub
mov
ror
xor
pop
stos
pop
lock
pushl
int3
les
loope
lea
test
inc
pop
add
clc
lock
fptan
outsl
inc
sub
dec
mov
sbb
int3
xor
fildll
add
add
mov
outsl
push
inc
pop
dec
xchg
sub
mov
outsl
cld
mov
imull
dec
lahf
loop
pop
mov
mov
dec
xchg
shr
add
dec
xor
jle
mov
movq
fcmovnu
mov
fstpt
xchg
nop
add
mov
jl
xchg
inc
mov
ret
test
scas
push
add
cltd
sub
push
out
xchg
mov
sbb
xchg
clc
mov
push
movsb
mov
push
cltd
addr16
test
jle
or
and
mov
cld
imul
mov
cltd
nop
mov
mov
mov
cmp
cltd
and
or
aaa
lahf
pushf
adc
or
fbld
push
inc
les
clc
mov
stos
loopne
insb
xchg
mov
jns
push
xchg
std
idiv
lahf
mov
mov
jecxz
add
stos
pushf
add
push
hlt
hlt
mov
dec
data16
or
xor
stc
lods
lahf
fs
sbb
repnz
popa
jl
imul
mov
cmpsl
push
mov
xor
cmc
sub
shrb
mov
fs
sub
or
xchg
int3
shlb
lret
movsl
je
mov
and
sub
add
push
leave
pop
xor
dec
rcrb
dec
sbb
sbb
inc
or
orb
add
jbe
stos
mov
pop
jmp
adc
and
int
sti
leave
push
lea
cwtl
pop
jg
cmp
cwtl
jbe
jo
stos
aad
insb
pushf
pop
sahf
aaa
movsl
ja
cmp
jbe
adc
cli
les
pop
shlb
repnz
cmpsl
rcrl
add
pop
cmp
mov
js
in
pop
popa
loope
mov
sbb
nop
das
shr
ficoms
mov
inc
bound
sbb
test
out
mov
push
lahf
insl
out
rorb
jbe
push
add
cld
or
xchg
jns
clc
jno
lds
jns
nop
jmp
jg
jge
shrb
pop
imul
mov
fists
pop
jo
dec
jno
imulb
or
lods
jae
shl
mov
mov
push
rorb
lods
mov
test
fwait
test
fdivrl
sub
cmp
inc
inc
sahf
repz
adc
mov
stc
ret
rcl
inc
out
cld
mov
xchg
mov
jge
lea
add
shlb
adc
shlb
push
add
popa
cmpl
inc
or
cmp
cmpsb
addr16
inc
cmp
jl
loop
mov
int3
push
scas
xlat
aas
aas
mov
out
mov
cmpsl
mov
xlat
mov
xor
add
dec
movsb
shl
out
dec
inc
or
daa
test
incb
clc
repnz
and
stc
dec
dec
nop
inc
dec
sub
push
mov
sbb
cs
scas
pop
xor
xchg
lock
clc
pop
add
shlb
adc
mov
je
and
push
inc
mov
popf
je
sarb
cwtl
or
scas
cld
loope
pop
lahf
push
shlb
xchg
test
into
cmc
aaa
xchg
or
adc
lcall
movsl
fsubs
jnp
lods
inc
mov
aas
cmc
cs
lock
sbb
jge
xchg
jne
std
mov
and
cltd
fcomps
mov
sbb
das
stos
dec
jb
jl
xchg
clc
test
call
mov
ss
nop
roll
int
and
sbb
cmp
lods
jb
adc
cltd
xchg
push
xor
std
fistl
pushf
aam
je
std
cmpsb
sbb
out
fdivrp
or
xchg
imul
pop
mov
incl
arpl
test
movsl
mov
fistpll
adc
ljmp
mov
cmp
nop
cwtl
fistl
and
xor
adc
pop
leave
cmp
fists
sti
sahf
mov
in
inc
lahf
iret
mov
test
ds
popf
shll
ja
push
sbb
addl
mov
lea
int3
sbb
daa
jns
lods
cs
or
inc
sub
nop
pushf
and
ja
lock
sub
popa
lret
pop
lahf
add
xor
insl
dec
into
bound
aaa
xchg
and
push
push
fs
mov
jg
add
dec
xor
lret
and
mov
out
pop
movsb
xor
test
xor
fistpll
int
mov
shrb
jnp
sti
mov
push
inc
inc
jno
sbb
xchg
je
push
daa
adc
aas
ficoml
loop
mov
imul
lahf
inc
inc
pop
nop
pop
cmp
clc
test
popa
add
pop
mov
call
icebp
inc
add
mov
pop
insb
cmp
push
jo
mov
les
xor
aad
jno
bound
push
push
and
xchg
nop
in
pop
jmp
nop
mov
and
mov
sbb
add
jecxz
outsl
outsl
sbb
add
bound
ja
sub
jecxz
pop
or
fadds
lods
push
es
les
sbb
mov
and
add
push
lea
jle
pop
jns
cvtdq2ps
enter
in
cmp
outsl
mov
ljmp
clc
pop
call
dec
xor
push
sbb
sub
insb
je
inc
aad
decb
push
and
push
daa
and
js
decb
add
loop
xchg
push
loopne
das
push
fcmovne
std
cmc
mov
dec
fists
ret
sbb
sub
cmc
lods
movsl
xchg
lods
pop
adc
leave
inc
push
or
fwait
push
loope
ljmp
cmp
or
xor
push
or
orl
pop
push
adc
fs
push
subb
and
test
imul
mov
fistpll
mov
inc
xor
and
mov
ret
pop
clc
cmp
adc
adc
adc
pop
je
cmc
add
mov
lock
lahf
lahf
mov
add
pop
lcall
test
push
mov
or
test
inc
out
out
push
cs
sub
insl
das
lea
aas
ret
sbb
or
and
and
mov
add
imul
add
pop
pop
sub
stos
data16
jg
dec
in
jge
adc
cmpb
outsl
outsl
inc
adc
mov
subb
xchg
ds
ror
or
int3
nop
subl
ficomps
loopne
pop
pop
jne
mov
add
add
scas
mov
sbb
mov
inc
adc
jg
add
sub
lock
aaa
cli
add
ret
mov
or
movsb
add
or
cmc
pop
push
adc
mov
sub
les
adc
sbb
popf
sti
sahf
push
dec
mov
cmp
lods
inc
add
cltd
cmp
in
cli
inc
stos
mov
jl
repnz
sub
pop
mov
shll
fwait
repnz
sub
inc
mov
mov
pop
push
aas
add
mov
add
lds
stos
adc
leave
jp
insb
add
fimull
or
stos
arpl
cld
in
or
add
cmp
mov
test
or
cld
repz
inc
je
push
out
sbbl
ret
or
push
call
adc
out
sbb
loop
dec
xor
out
das
adc
xor
cld
pop
mov
jl
enter
and
test
cmc
cmpsl
xchg
adc
push
jge
outsl
pop
cmp
push
pushl
test
popf
arpl
push
push
outsb
mov
inc
fadd
fildl
inc
and
mov
add
call
mov
push
xor
rorb
test
or
ja
jg
pop
push
mov
in
jl
cmp
push
add
loop
push
rep
inc
fdivrl
incb
fidivrs
pop
movsl
test
aas
shlb
and
jno
lea
aas
cwtl
sarl
add
mov
add
inc
add
mov
jb
mov
mov
flds
add
outsl
mov
push
ljmp
lret
and
cmp
movsl
js
shl
mov
es
aad
xchg
cs
stos
mov
push
repnz
mov
xor
mov
mov
fimull
rorb
adcb
push
stc
dec
leave
and
decl
fnstsw
xor
inc
stc
lea
mov
mov
pop
jo
jecxz
sbb
pusha
test
xchg
pop
sub
and
xchg
popf
lret
mov
pop
sarb
jo
xor
jbe
add
dec
or
mov
cwtl
mov
dec
outsl
subl
sub
fwait
mov
inc
cmp
stos
call
sbb
ret
xor
inc
out
inc
scas
adc
push
sub
sub
popa
rclb
pop
pusha
mov
push
lds
lock
jecxz
mov
in
or
cmp
xchg
into
es
mov
out
sbb
add
push
in
or
pop
push
int
bsf
mov
in
adc
push
jmp
adc
inc
or
decb
int
and
adc
dec
cmc
inc
negl
sar
inc
or
aam
mov
fnstsw
dec
jge
fs
or
rolb
sbb
xchg
lret
lea
outsl
push
fcmovbe
in
or
jo
xchg
movsb
mov
loope
jl
push
bound
dec
scas
jno
push
mov
pop
rcr
and
cmp
iret
adc
sub
shlb
lea
ss
les
repz
sbb
inc
lock
ffreep
add
dec
xchg
cmpsb
push
cmp
xorb
lea
dec
cs
das
shrb
scas
mov
xchg
fisttpll
inc
fldl
push
cli
fisubrl
dec
icebp
sbb
or
pop
dec
and
cwtl
aaa
cmpsl
or
ss
in
jle
mov
call
popf
jmp
lea
sahf
outsb
test
sbb
jge
ljmp
sub
mov
push
ds
push
lahf
add
or
in
pop
push
fldt
insb
pop
adc
adc
dec
cld
ja
or
addb
xchg
or
mov
into
xchg
into
out
push
xorl
adc
inc
dec
xchg
test
sub
mov
or
in
fwait
stos
mov
stc
push
testl
xor
lods
movb
repnz
out
inc
stos
mov
push
sbb
inc
sub
jge
dec
push
or
int
add
sub
pop
inc
adc
dec
xor
xorb
imul
fsts
scas
push
out
jno
shlb
aas
dec
jl
inc
test
aam
sub
pop
push
jp
mov
cmp
sbb
jmp
jnp
pop
inc
dec
mov
pop
pusha
add
dec
or
add
xlat
jle
mov
or
sbb
dec
push
cld
xor
cltd
js
sbbb
roll
add
cld
mov
push
imul
jae
ficoml
hlt
mov
jo
mov
xor
notb
int
xchg
adc
subl
sbb
ret
adc
inc
movsl
jbe
sbb
mov
imul
cmp
mov
jne
pop
and
mov
xor
ja
mov
in
stos
add
cmpb
int
sbb
popa
pop
dec
xor
ss
mov
fcoml
mov
cmpsb
adc
add
mov
add
and
ret
aaa
push
push
adc
aaa
sub
fidivs
rolb
dec
das
mov
jecxz
repz
fs
repz
std
inc
mov
or
es
xor
je
mov
xchg
xor
out
mov
call
leave
sarb
loop
mov
mov
sub
insl
sbb
push
jl
rol
xchg
popf
dec
adc
rclb
loopne
cld
outsl
push
mov
les
scas
cmp
outsb
fcmovnbe
call
nop
aas
bound
subl
mov
mov
xchg
stos
and
add
adc
insb
dec
or
jecxz
aaa
outsb
cwtl
or
push
and
pop
inc
sbb
ret
sbb
sub
jge
int3
inc
sbb
adc
ljmp
inc
xlat
movsb
cmp
sub
outsl
cwtl
shrb
adc
pushf
mov
fildll
fildl
mov
inc
push
rorb
or
xor
stos
mov
mov
jb
inc
jg
icebp
ret
cmp
popf
repz
adc
imull
in
lea
mov
mov
push
cmpsb
fcoms
pushf
fnstenv
adc
call
jg
xchg
mov
mov
mov
std
cli
je
subl
sbb
repz
incb
inc
hlt
popf
add
rolb
lahf
jne
mov
insb
sbb
and
pop
into
inc
stos
in
fistpll
scas
push
loop
push
shl
mov
icebp
cmc
add
scas
dec
xlat
int3
clc
inc
std
movsl
add
ljmp
push
incl
fdivrs
inc
jecxz
nop
aad
push
mov
insb
repz
loop
insb
ret
sar
aaa
mov
add
sub
stc
inc
cmpsb
fs
dec
push
in
ret
xor
test
mov
imul
mov
push
cmp
sub
pop
mov
or
cld
ja
repz
adc
test
mov
mov
add
inc
mov
inc
push
andl
loopne
loopne
ds
cmp
add
cwtl
clc
div
pop
stc
cmpsl
cltd
out
mov
add
sub
sbb
xchg
movsl
and
mov
mov
mov
repz
mov
popa
aaa
jp
fmull
mov
sarb
push
lds
addl
in
or
test
pushf
cmp
push
xor
shll
or
inc
mov
push
imul
pusha
je
ljmp
mov
mov
lock
in
mov
ror
movsl
or
add
sub
loope
push
pop
arpl
mov
sbb
sarb
pop
mov
xchg
jmp
mov
das
les
pop
icebp
inc
decl
sub
roll
inc
add
enter
jecxz
push
sbb
or
dec
ss
sahf
add
lret
das
cld
divb
mov
lret
sbb
xchg
push
outsb
cli
or
adc
fbstp
es
dec
leave
inc
les
dec
jl
mov
push
js
sbb
xor
inc
jbe
sbb
or
sbb
pop
pop
pop
shrb
sarb
sbb
pop
popa
jnp
xchg
xchg
rcr
inc
cmc
mov
xlat
fwait
add
mov
sti
push
xchg
les
push
mov
cmpb
jle
mov
dec
jp
mov
lods
mov
adcl
dec
sub
jg
imul
adc
dec
into
jecxz
mov
das
add
add
lea
cmp
jo
inc
incl
or
subb
ss
xchg
insl
rcll
or
or
xchg
test
subb
or
lock
pop
mov
test
mov
or
push
out
jmp
mov
lcall
call
xchg
xlat
xchg
jl
mov
inc
and
cmp
or
sbb
loopne
sbb
push
jle
out
or
clc
and
sbb
mov
inc
icebp
jne
push
adc
mov
lock
push
add
mov
popa
jle
cmp
push
lret
xchg
jl
sbb
int
ja
sub
add
cltd
xchg
outsl
imul
call
or
pop
cmc
pop
xor
imul
inc
test
dec
cld
test
pushl
insl
mov
aaa
icebp
adc
mov
popf
xchg
push
nop
dec
xor
imul
decb
xorl
cmp
insb
or
add
dec
xbegin
das
addr16
out
jo
adc
mov
outsb
or
fiadds
mov
fnstcw
adc
sub
sahf
popf
push
sub
out
lcall
cltd
xor
add
aaa
sbb
andb
lds
jb
inc
mov
fstpl
ja
mov
pop
push
push
xchg
xchg
mov
mov
in
das
cwtl
loop
dec
dec
push
imul
sbb
addb
mov
pop
dec
pushl
incl
dec
xlat
xchg
jge
dec
lcall
fwait
push
dec
push
hlt
xchg
ja
and
cmp
scas
out
lret
mov
fdivrs
pop
cmpsb
out
loopne
jne
pop
adc
cmp
and
mov
sbb
xchg
dec
push
xor
insl
out
and
push
and
andb
and
sub
stos
fsubrs
les
clc
inc
cmc
aaa
mov
dec
pop
sbb
dec
dec
inc
aam
mov
aas
cld
loope
jg
lock
lea
test
setb
pop
push
jl
xchg
sbbb
sub
jecxz
pushf
popa
cmp
mov
aaa
aad
arpl
cs
insl
sub
cmpsl
or
adc
bound
out
and
jo
pop
mov
inc
mov
stos
fisubs
push
scas
push
mov
test
das
std
xchg
pop
loopne
or
dec
std
cli
out
mov
add
push
test
push
ss
cltd
pop
mov
int3
cmp
add
movq
mov
add
adc
lods
ljmp
int3
aas
mov
pop
fdivr
outsl
dec
filds
lret
les
pop
adc
inc
cld
lret
and
add
dec
xor
cmpb
fisttpl
test
or
loopne
fmull
cmc
aam
incl
push
lcall
out
xchg
cmp
inc
imul
ror
xchg
pusha
push
jg
sbb
mov
test
jg
nop
and
pop
addr16
sbb
outsb
negl
pop
dec
push
imul
imul
test
mov
sbb
cltd
orl
out
clc
pop
outsb
mov
xor
stos
pusha
fbld
mov
pop
and
leave
or
cmp
lock
push
add
pop
mov
in
pop
idiv
mov
and
lock
cwtl
and
call
jmp
add
ss
push
idivb
jmp
fisttps
lcall
and
mov
pop
loope
inc
add
test
sbb
into
pop
bound
repz
lret
jg
fistpll
and
pop
mov
dec
pop
dec
mov
enter
lock
and
xlat
test
outsb
loope
add
insb
inc
jb
jge
call
push
xchg
mov
in
movsb
pop
pop
aam
pop
insb
std
jl
loope
dec
outsb
sub
add
mov
fisubl
ljmp
mov
adc
and
ljmp
cmp
push
stos
dec
sbb
imulb
aam
scas
scas
and
fucom
repnz
fcmovnu
fcoms
idivl
dec
loopne
and
add
push
sub
inc
cmc
mov
shll
or
and
imul
cli
das
inc
adc
outsl
mov
sub
lahf
jno
mov
adc
cmpsl
in
clc
in
fists
loope
push
mov
or
adc
test
mov
shll
mov
fnstenv
pop
sbb
sub
out
cmp
mov
je
inc
jb
rcrb
pop
jp
loopne
mov
ret
sub
neg
bound
add
mov
xchg
push
ja
clc
aaa
jle
sbb
mov
jo
les
or
xchg
adc
negb
add
dec
sbb
and
dec
mov
iret
lds
pop
ret
mov
test
push
fmuls
loopne
lds
in
cmp
testl
and
xchg
cmp
pop
sbb
adc
loopne
idivb
inc
sub
or
push
and
jecxz
push
adc
adcb
fistl
cmc
adc
push
and
clc
and
aaa
cmc
inc
jo
inc
push
adc
mov
push
push
or
inc
pop
pop
fcomip
mov
and
add
mov
mov
ret
sub
test
outsl
jmp
lds
xor
shr
icebp
or
lock
xor
pop
cmp
xor
rolb
sub
sbb
mov
or
jmp
push
movb
gs
or
popa
xor
das
cwtl
jle
in
xchg
aaa
insl
int
xlat
pop
dec
loopne
mov
jp
jno
inc
inc
or
movsb
inc
push
and
ficomps
cld
jmp
mov
dec
ljmp
cmp
push
lcall
sar
mov
adcl
add
js
dec
add
or
pop
sub
inc
add
cmc
fwait
cli
pop
mov
push
mov
movsb
xor
in
adc
xor
jb
xchg
insl
adc
pop
mov
insb
mov
xchg
std
pop
xorb
insl
ss
divl
stos
push
pop
or
pop
pop
js
addb
dec
popa
add
mov
jg
scas
jae
movsl
pop
cltd
sub
shrb
push
push
mov
leave
and
pop
mov
and
data16
daa
sbbb
outsb
std
inc
jge
cmp
or
xor
outsb
mov
cld
xor
mov
sub
jge
or
or
dec
pop
sub
adc
sar
out
fdivs
lcall
sbb
xor
inc
fmull
jmp
std
gs
loop
pop
ja
jg
test
adc
xor
int3
jne
mov
popa
nop
arpl
lock
rol
mov
cltd
stc
loope
xchg
push
jae
jnp
insb
mov
daa
pushaw
out
lock
ljmp
pop
gs
dec
insl
loopne
mov
lret
mov
ds
and
sbb
mov
jae
jg
ret
cmp
fiadds
xorb
push
loop
cmpsb
or
movsl
xor
adc
adc
dec
jo
adc
scas
outsb
aam
stos
inc
mov
xchg
out
push
ss
mov
js
imul
movsl
aad
dec
call
jnp
sbb
and
add
fildll
pop
adc
sbb
dec
fidivl
in
or
lcall
sbb
popl
xor
xor
rolb
sub
outsb
cmp
jg
jbe
push
mov
push
pop
cmpsl
jp
or
ffreep
and
lret
push
loope
mov
movsb
fxch
jmp
push
push
call
dec
loopne
rolb
jecxz
roll
hlt
cltd
es
sub
cli
jge
pop
js
incl
lods
nop
mov
ret
loopne
pop
ret
inc
adc
mov
ljmp
push
ds
test
ljmp
insl
push
out
xchg
adc
fdivrp
lcall
mull
gs
sbb
adc
adc
fists
ss
mov
xchg
push
idivb
adc
aas
ljmp
mov
pusha
and
sbb
lret
pop
mov
xchg
add
cmc
dec
mov
pushl
lds
push
and
call
xchg
or
cmc
add
icebp
sub
xor
pop
cwtl
xchg
cmp
push
pushf
or
scas
popa
or
jmp
mov
mov
test
arpl
scas
cwtl
scas
sbb
pop
push
sub
test
call
fs
lock
insb
int
sub
jae
into
scas
push
les
jp
sbb
subb
push
aad
cmp
shufps
mov
inc
cmpsb
jg
out
ret
scas
sbb
sti
aas
add
shrb
xor
outsb
or
xchg
inc
jge
test
adc
stos
ljmp
mov
mov
outsb
shl
arpl
decl
push
pop
rcrl
cmp
jle
repnz
adc
jl
hlt
and
mov
cld
push
test
mov
sbb
or
cli
aas
into
cmpsb
xlat
data16
mov
push
stos
daa
pushl
ljmp
push
mov
cmp
lods
or
insb
scas
jbe
aad
mov
mov
inc
pop
test
orl
call
loopne
ljmp
jno
xor
hlt
mov
repnz
sub
shlb
popf
loopne
out
mov
jge
or
push
outsb
sahf
mov
mov
andb
xor
xchg
pusha
push
stos
iret
mov
jb
fmuls
add
or
setae
add
das
sub
cmp
stos
in
push
outsb
inc
lea
popf
push
aad
push
fists
test
cmp
push
mov
adc
add
mov
ljmp
test
mov
test
jo
cmpsb
mov
mov
scas
pop
into
sbb
mov
mov
pusha
xor
mov
push
cmp
add
push
mov
add
inc
cmp
push
lock
cmc
push
add
mov
mov
mov
shlb
push
nop
stc
imulb
xor
inc
inc
mov
ret
fnstsw
popa
lods
or
pop
xchg
dec
sbb
xchg
iret
jb
mov
cmc
mov
adc
enter
and
jo
lret
sub
adc
inc
sahf
xchg
mov
inc
xchg
cli
mov
add
aas
insb
and
daa
push
addr16
mov
xor
in
mov
sbb
push
cwtl
jo
andb
mov
stc
test
add
add
fbld
enter
pop
lret
sbb
adc
mov
outsl
rcrl
jo
inc
loopne
xor
outsb
lock
aaa
jmp
lret
sub
or
jne
add
pop
std
movsl
or
loopne
add
push
mov
scas
mov
lsl
es
hlt
es
aam
push
push
mov
insb
fbstp
sub
inc
or
add
or
or
outsl
lods
dec
cmp
xchg
cmp
mov
icebp
aas
push
push
xorl
in
pop
adc
cmp
nop
sub
and
pop
jmp
daa
mov
inc
sub
cmp
in
dec
inc
cli
adc
inc
pop
std
xchg
and
pop
adc
pop
js
push
xor
ret
mov
pop
mov
sub
cltd
out
xchg
dec
ljmp
push
inc
push
inc
or
sub
pushf
push
jmp
lahf
fwait
add
cli
dec
incl
sbb
add
xor
jb
fildll
sub
js
popl
mov
imul
sti
ljmp
inc
add
xchg
dec
inc
sub
push
jge
fsubr
cmp
add
add
loopne
clc
outsl
mov
push
and
bnd
fneni(8087
das
xlat
lods
cmpb
mov
fisttpl
sbb
sbb
add
adc
cli
sbb
mov
lret
idiv
adc
aaa
gs
fsts
mov
aas
push
cld
or
mov
fs
inc
xchg
inc
popa
mov
mov
jno
pop
add
add
and
or
call
fidivl
mov
into
fsubs
mov
leave
cwtl
inc
pop
and
out
and
inc
cli
sbb
jg
and
mov
test
cli
mov
push
leave
mov
incl
das
inc
push
dec
arpl
fstl
rolb
rol
lock
jmp
and
std
lods
sbb
cmc
cmp
xchg
pop
lods
mov
js
push
pop
inc
jae
xchg
cli
icebp
push
fwait
cmp
jmp
mov
inc
scas
sbb
xchg
ficompl
sub
pop
fsubs
out
loopne
mov
incl
in
daa
out
pop
mov
adcl
jle
cmp
cmc
test
cld
cltd
push
sub
mov
cmp
and
mul
shl
adc
mov
dec
fs
push
push
sub
insb
pop
jge
lods
sub
mov
dec
pop
outsl
popa
cli
mov
sbb
daa
jge
adc
sar
test
lret
adc
sti
xor
add
and
sub
shll
das
jmp
mov
cs
mov
sbbb
sub
xlat
dec
mov
aaa
xchg
mov
inc
cld
jns
mov
inc
dec
mov
dec
jg
loopne
or
inc
ficomps
push
test
pop
and
sub
cltd
adc
loop
decl
jb
jae
sbb
insb
test
mov
std
insl
imul
sti
sahf
push
jge
mov
xor
jne
pusha
loopne
fisubrs
sub
cmpsb
xlat
jge
mov
pop
mov
fists
jo
addr16
push
lods
sbb
adc
xchg
arpl
ljmp
jp
lods
test
lds
jle
outsw
pop
popa
mov
add
cmp
lods
inc
std
aam
movsl
and
sub
mov
movsb
stos
ret
inc
sub
push
mov
or
fcomip
inc
dec
test
push
push
jl
adc
imulb
sbb
aam
dec
popa
es
or
in
call
gs
fsubp
icebp
loop
push
push
dec
pop
push
into
in
cmp
call
push
pusha
mov
idiv
pop
jg
sub
pop
pusha
sbb
enter
mov
sbb
push
cmp
fidivrl
mov
xor
in
add
mov
fucomip
jmp
jecxz
sbbl
and
or
js
jp
jnp
nop
add
add
int
lds
xchg
mov
sbb
movsl
shrl
insl
mov
addr16
lsl
cs
and
adc
push
sbb
dec
adc
push
lds
push
bound
rcrl
inc
repz
jns
sbb
ret
mov
fidivs
adc
out
pop
mov
jmp
cwtl
negb
mov
aaa
shl
push
mov
xor
push
fidivl
mov
mov
add
push
lcall
sub
pop
movsl
mov
xchg
mov
fbld
sub
outsl
aaa
roll
enter
int3
push
cltd
sbb
subl
cmc
dec
push
xor
or
or
add
pop
sbbb
push
lds
scas
lea
lods
cwtl
pop
add
pop
pop
shrl
dec
jbe
ss
sbb
rcrb
outsl
or
cmp
mov
stos
inc
sahf
mov
xchg
das
aad
pusha
scas
cmpsb
es
and
add
mov
fsubrp
popf
add
scas
cmpsl
jecxz
and
in
pop
xchg
jg
dec
push
in
iret
push
mov
fcmovne
add
mov
lcall
aaa
push
sub
or
or
testl
pop
and
stos
loop
xchg
daa
cmpsl
or
and
and
dec
test
cli
fildll
push
mov
mov
pop
and
in
sbbb
fnstsw
out
push
sub
adc
add
addb
bound
pop
movsb
and
xchg
ss
jl
cli
sbb
cmc
jmp
xchg
dec
pop
add
push
imul
mov
flds
pop
xor
dec
or
test
cld
dec
add
ficompl
repnz
cltd
push
cmp
mov
mov
lahf
rolb
testb
pop
xchg
rcrl
mov
dec
or
test
or
mov
stos
movsl
inc
xchg
mul
and
mov
cmc
mov
xor
std
push
das
insb
xchg
xor
aam
or
fadds
cld
cld
das
cld
es
or
lock
and
and
loope
mov
mov
and
sub
fsubrl
inc
ret
jne
ficoml
pop
mov
mov
inc
lcall
or
sub
jno
pop
adc
insl
movsl
mov
inc
mov
test
out
fsubrs
and
mov
mov
ja
sbb
movsl
das
std
test
outsl
cs
pop
mov
repz
outsb
push
insb
cld
divb
and
repnz
imul
jb
mov
adc
fcomps
stc
pop
nop
sarb
xchg
sbb
dec
and
rcrl
mov
orb
add
inc
clc
lret
movsb
out
sub
jg
ffreep
and
mov
test
push
mov
cmp
or
pop
test
shll
adcb
ja
cmp
inc
stc
pusha
push
xor
sub
jp
inc
ss
int3
dec
adc
jmp
xchg
daa
lods
xor
and
jg
mov
sbb
push
dec
gs
cmp
adc
sar
movsl
testl
add
lock
sbb
inc
out
loopne
jg
bound
movb
loope
mov
lea
ret
jmp
inc
mov
push
sub
mov
and
sub
popa
mov
nop
ret
and
jbe
mov
push
jno
rolb
cli
xor
xchg
fistl
stos
sbb
stos
add
scas
rcr
pop
pushl
outsb
dec
outsb
in
out
dec
push
jns
pop
dec
mov
mov
cmp
cmp
jo
fdivl
stos
sub
adc
es
push
mov
xchg
or
cmp
loope
adc
idivb
outsl
mov
hlt
inc
out
push
mov
xlat
in
clc
rorb
sbb
stos
push
lret
in
fcmovnu
inc
pop
cmp
push
mov
pushl
and
sbb
cwtl
pop
push
ret
xor
cld
int
or
dec
ljmp
cmp
jne
push
mov
push
fcoml
int
inc
rclb
incl
bound
mov
outsl
sbb
scas
imul
das
mov
sbb
and
outsl
lock
mov
jg
popf
cmc
pusha
cmc
cli
data16
mov
jge
outsl
push
aaa
repz
repz
adcl
cld
sbb
bound
dec
stc
lea
pop
sbb
lcall
mov
call
xor
dec
sub
nop
jmp
mov
add
xor
inc
jo
pop
or
push
loopne
mov
cld
sahf
roll
ljmp
test
mov
decl
mov
dec
arpl
and
mov
add
mov
mov
cmpsb
xlat
rol
addb
test
pop
fnstsw
cli
mov
imul
dec
pop
fsubr
fistl
jnp
cmp
dec
out
cmp
call
cli
incl
push
and
inc
dec
push
cmc
sub
mov
push
std
sbb
mov
es
and
or
int3
ret
xchg
or
les
and
lcall
or
xchg
fnstcw
inc
fwait
lcall
push
push
aam
fs
movl
push
lcall
jno
mov
xor
gs
add
jmp
push
sub
xorl
dec
sbb
in
or
mov
fiaddl
sbb
fnstenv
and
push
out
mov
inc
out
fcom
inc
nop
add
ret
mov
adc
icebp
hlt
cmp
dec
movsb
lods
push
cld
pop
fst
arpl
mov
ret
rclb
nop
inc
or
mov
xchg
adc
pop
ljmp
scas
shl
fadds
js
fisubl
adcl
fisttpl
jge
fmul
cmpsl
leave
push
aas
lahf
add
jle
mov
daa
lcall
call
scas
lret
sub
mov
adc
mov
js
pop
les
cs
out
adc
adc
ds
or
daa
testl
je
mov
cmp
inc
add
cmp
xchg
xor
jns
cli
outsl
adc
pop
mov
test
lods
hlt
fstpt
xor
dec
adc
pop
mov
iret
hlt
jle
mov
je
pusha
les
xchg
jb
cli
fstl
xchg
pop
pop
stos
sti
sar
fadd
inc
pop
clc
xchg
mov
mov
out
dec
shlb
jmp
test
cwtl
xor
in
icebp
outsl
rcrb
push
push
leave
inc
sti
cwtl
adc
addr16
pop
outsl
sbb
sub
mov
mov
testb
test
cmc
mov
out
in
dec
xbegin
xchg
pop
lahf
mov
rcll
xor
mov
mov
imul
testl
xchg
adc
cmc
in
pushl
jp
pop
lods
adc
mov
push
cmp
add
or
sbb
cmpsb
aaa
jl
movsb
pop
push
outsb
xchg
aaa
ret
outsl
inc
mov
out
aaa
mov
fisubrs
or
adc
mov
dec
mov
and
and
adc
add
add
out
push
mov
pop
and
adc
dec
push
cmc
scas
jne
std
dec
add
cltd
xor
movsl
adc
cmc
test
jecxz
lods
lock
cwtl
mov
sub
imul
and
repz
test
sbb
jbe
cmc
popl
add
outsb
dec
add
pop
test
outsl
std
fnstsw
in
and
pop
jle
lcall
dec
std
aaa
push
xor
shl
js
sbb
ja
ja
jg
xorb
scas
and
rolb
movsl
xchg
cmp
nop
dec
stos
mov
adc
adc
and
xchg
loopne
addr16
js
daa
sub
insb
aaa
shr
out
les
mov
mull
call
push
dec
int3
xchg
mov
aam
jmp
add
cs
outsl
cmp
push
ret
syscall
stos
xor
movsb
pushf
push
lods
outsl
cmp
xor
dec
inc
xor
push
push
add
cwtl
adc
loop
sbb
push
pop
clc
test
or
adc
sahf
and
sub
dec
lcall
jecxz
enter
clc
and
xchg
xchg
jns
test
sbbl
outsl
ret
scas
bound
jl
rorl
pushf
sub
outsl
pushl
xchg
jbe
clc
mov
mov
or
std
mov
outsb
cmpl
pushf
or
mov
das
in
inc
jb
gs
jle
push
inc
stos
aaa
push
add
pop
cli
test
addr16
xor
mov
add
dec
mov
out
pop
es
loope
add
dec
je
jnp
lea
pop
pop
loopne
and
push
stos
push
mov
fsubrp
sbb
iret
sub
adc
push
aaa
icebp
mov
pop
cld
add
xlat
pop
jne
cwtl
pop
test
xor
lea
test
adc
and
aad
cmp
xchg
mov
mov
lea
es
sbb
cltd
jecxz
sarb
add
cmc
and
and
loop
std
incl
mov
cld
pushf
jne
push
xchg
inc
pushf
adc
push
rorb
lea
or
xor
push
lods
jmp
and
sbb
lret
and
add
cmp
mov
fisubs
push
cmc
or
adc
mov
adc
fldt
lcall
cltd
adc
xchg
cmpsb
cmc
filds
sahf
and
dec
mov
cmp
jp
stc
aaa
sub
pop
sbb
hlt
pop
fldl
mov
std
pop
or
nop
sbb
xchg
subl
into
repz
dec
pop
xlat
jg
call
fs
push
mov
call
push
ret
pop
push
pcmpgtb
test
scas
shl
sub
dec
aam
sub
int
out
rcr
cld
and
inc
ds
pop
jge
xchg
dec
cmp
jle
aaa
sub
or
mov
loopne
fdivrp
hlt
ret
mov
inc
add
insb
xor
inc
inc
sbb
adc
mov
add
adcl
xor
lds
jp
lahf
out
push
sbb
inc
aad
cmp
aaa
vunpcklpd
cmp
add
sbb
lcall
adc
and
jae
mov
and
cmc
addb
arpl
dec
fwait
dec
mov
call
cmp
xchg
cli
pop
les
mov
out
dec
and
sbb
popl
inc
or
es
clc
sbb
mov
incb
mov
mov
jle
rolb
in
decl
jge
loop
or
rcll
pop
jge
and
jecxz
std
call
movsl
sbb
adc
sub
shlb
call
bound
fwait
sub
xchg
into
pop
int
cmp
call
xchg
mov
repz
dec
push
mov
stos
clc
movsl
push
xchg
int3
in
mov
fcom
movsl
gs
push
mov
scas
cmpsl
rolb
lea
jns
adcb
rorl
sbb
out
repz
xor
ja
and
xchg
push
aam
mov
orb
decl
lods
xor
je
pop
jns
jg
cmc
nop
and
dec
add
das
or
inc
inc
insb
cmp
push
aaa
out
jl
lock
scas
out
stc
stos
enter
in
or
and
cli
and
and
xchg
mov
dec
shrb
push
xlat
xchg
lcall
daa
cld
decb
test
push
mov
aam
pop
sbb
insl
pop
mov
pusha
imul
xor
je
pop
rorl
jecxz
les
dec
sub
or
or
ja
inc
xchg
adc
jecxz
leave
mov
pusha
mov
mov
jmp
mov
xchg
scas
dec
mov
mov
xchg
xor
lods
mov
lock
xchg
cmp
inc
mov
pusha
cld
popa
adc
cli
xchg
nop
push
inc
cmp
jg
lods
pop
inc
roll
or
loope
hlt
mov
push
ja
jmp
dec
mov
jle
stc
jecxz
push
repz
xchg
popf
or
push
mov
incl
and
mov
dec
cmp
sbb
clc
fstpt
movsb
dec
jmp
test
outsb
xchg
push
loopne
ds
jbe
mov
cmp
out
jle
add
sub
add
jecxz
mov
gs
sub
stc
subb
icebp
test
mov
inc
ljmp
push
sbb
jmp
movsb
pop
lods
sub
and
or
cmp
cmp
sbb
inc
lcall
data16
lods
nop
push
iret
jbe
fstp
lahf
push
mov
popa
call
xchg
popl
aam
decl
and
mov
cmpsb
outsl
sub
int3
push
outsl
mov
mov
xchg
loop
fistpll
aad
lods
lret
add
ljmp
mov
ficoml
fidivl
xor
imul
std
lods
sbb
xor
test
xchg
cltd
and
call
mov
cmpsl
call
sahf
pop
adc
loope,pn
jg
mov
push
xchg
and
clc
into
add
mov
cmpsb
jl,pt
or
test
dec
lds
leave
mov
add
outsl
jmp
dec
cmpsl
shrb
adc
jo
adc
nop
mov
mov
aam
imul
cmpsb
mov
mov
decl
icebp
and
ret
inc
sbb
push
add
shll
pop
adcb
push
sbb
push
int
movsl
incl
sbbl
or
dec
jb
decl
aam
sbb
std
sub
pop
mov
and
faddp
adc
xchg
mov
mov
data16
outsb
mov
sub
dec
std
cmp
adc
mov
imul
imul
inc
jge
pushf
jnp
or
mov
add
pushl
lret
cmpb
lds
pop
lods
test
push
stc
negb
aaa
fmuls
jmp
rcr
bound
pushl
xor
sbb
out
or
pusha
sub
mov
das
mov
mov
push
orl
fsub
or
imul
xchg
out
or
imul
lods
pop
pop
aaa
dec
loopw
cmc
cmp
clc
mov
loope
mov
mov
into
adc
push
mov
add
ret
xor
cmc
icebp
pop
negl
push
xchg
xchg
mov
mov
push
mov
mov
iret
and
push
push
sti
dec
hlt
inc
push
sub
rcr
es
inc
jl
call
lods
xchg
data16
je
pop
sub
and
inc
daa
out
mov
inc
dec
sbb
mov
popf
lods
push
mov
adc
mov
orl
or
or
xor
sub
inc
pop
mov
jge
imul
or
shrb
lret
inc
pop
out
xlat
pop
aad
or
xor
imul
push
rcrb
xor
lret
sub
jle
lahf
sub
push
pusha
and
push
cmp
out
xor
mov
pop
jbe
inc
or
xorl
fsts
xor
clc
push
jnp
test
cmpsl
icebp
mov
mov
push
pop
dec
pusha
sub
xchg
popf
insl
scas
and
das
lock
out
ror
not
fisubrl
jl
movsb
xor
add
jno
adc
lret
adc
repz
iret
dec
jne
pop
sbb
mov
incl
repz
inc
jecxz
dec
mov
clc
xor
insb
clc
ja
aam
repz
pusha
mov
jge
pop
xchg
aam
movsl
add
ljmp
and
push
add
xor
and
mov
clc
fnstenv
lret
sarl
push
loopne
cmp
cs
subb
xor
push
push
and
mov
adc
adc
iret
xchg
scas
mov
mov
movsl
dec
jbe,pn
xor
xchg
or
aaa
call
jp
xor
lahf
sub
push
clc
inc
mov
xor
and
sub
int3
pop
fldt
shl
pop
orb
sahf
loop
add
jo
lcall
das
xor
and
push
mov
cmp
imul
pop
jne
adc
repnz
inc
fs
inc
les
jbe
push
sub
decl
ret
add
jne
sbb
lods
je
notl
in
filds
or
adc
inc
cmp
xor
and
mov
dec
mov
push
ret
sub
loope
jo
mov
and
jns
sub
mov
push
xchg
sub
rol
test
call
stos
sarl
mov
pop
mov
lcall
inc
ds
adc
test
push
sub
mov
addb
ffreep
mov
test
shll
pop
mov
clc
and
mov
int
out
clc
aaa
decb
inc
in
cmp
mov
adc
mov
jl
mov
add
loope
jle
jecxz
incb
fstpl
or
loop
cmc
mov
sar
cmp
cwtl
sbb
and
jmp
push
xchg
call
mov
xchg
hlt
and
fs
push
and
inc
imul
rolb
decb
mov
jle
and
xchg
outsl
lock
pop
or
loop
mov
jecxz
mov
out
rcll
out
iret
movsl
sbb
lcall
pop
pop
shrb
xchg
frstor
int
dec
inc
jmp
sub
inc
icebp
in
lret
jle
push
mov
dec
jae
ds
jbe
icebp
hlt
push
int
mov
sub
std
lret
scas
pop
adc
or
fdivr
es
bound
sub
xchg
add
jl
ljmp
dec
ljmp
jno
or
inc
incl
mov
jne
sbb
int
mov
and
push
test
jbe
xor
imul
or
in
scas
push
mov
sarl
dec
mov
inc
xchg
xchg
lods
xor
adc
addr16
fwait
mov
mov
out
iret
aad
loopne
pop
icebp
fcmovnbe
pop
push
es
inc
xor
sub
pushf
mov
out
mov
push
mov
sbb
sbb
add
sbb
je
cmpsl
xchg
lea
mov
mov
jmp
out
test
mov
mov
push
insl
call
shll
lock
and
hlt
mov
icebp
icebp
insl
sub
push
xchg
xchg
xor
xor
sarl
cld
pushl
stos
inc
mov
push
adc
pop
mov
inc
or
add
sbb
xor
insl
dec
test
xchg
int
jo
xsave
xchg
pop
divb
mov
adc
dec
xchg
cmpsb
test
je
xor
leave
pop
xlat
test
cmp
dec
mov
test
push
push
sbb
inc
adc
add
push
sub
mov
cmp
jp
inc
das
xchg
je
iret
cwtl
fldl
sub
sub
add
cmp
or
push
mov
or
add
addb
call
mov
add
arpl
js
insl
cmc
jg
aam
jbe,pn
or
std
cli
es
pop
jle
inc
int
push
mov
mov
pop
test
nop
or
dec
and
mov
cmpsl
mov
das
push
mov
fildll
orl
add
ret
ret
mov
jno
and
cld
and
pop
dec
aad
jl
enter
sbb
mov
cli
sub
and
jge
addr16
sti
sub
sub
fs
cli
inc
jmp
loop
nop
add
lods
push
xor
pop
xchg
stos
test
fsubl
sub
cmp
cld
mov
ds
or
mov
push
movsb
movsb
jge
add
scas
lods
mov
fs
stos
jns
mov
add
sahf
xchg
push
testb
hlt
imul
pop
out
aam
cmpb
insl
cmpsb
imul
fdivl
mov
cmp
inc
cmp
mov
sti
or
dec
add
adcl
aaa
mov
call
mov
dec
sahf
xor
movsl
dec
inc
sub
stos
shlb
pop
pop
sub
and
jge
dec
add
push
orl
inc
pop
add
int
dec
mull
jo
jno
bound
pusha
stos
ret
xchg
test
inc
andl
push
icebp
mov
mov
inc
add
xchg
mov
testb
xchg
pop
mov
sbb
cmp
data16
hlt
fldt
adc
sbb
or
clc
mov
push
stc
gs
cld
pop
push
mov
pop
or
movsbl
sbb
aas
ss
dec
xor
pop
in
lea
gs
pop
fs
sbb
sub
rcl
mov
movl
xchg
lds
jecxz
sbb
clc
js
mov
mov
js
pop
lcall
out
push
pop
inc
rclb
mov
xchg
sbb
int
or
aaa
fs
pushf
data16
dec
scas
mov
push
jl
cmp
int3
add
in
fcmovnu
fbstp
add
out
lock
ror
push
ret
pusha
repnz
and
and
aaa
imul
sub
subl
push
cld
in
add
test
cmpsl
cmp
mov
shrl
inc
test
mov
sbb
mov
dec
mov
sub
and
ficoms
add
adc
adc
mov
and
sbb
outsb
out
lcall
rolb
outsl
or
mov
lret
push
mov
inc
sbb
mov
mov
add
testb
das
pop
and
mov
add
jp
hlt
inc
add
lret
popf
orl
testb
sub
sbbl
ja
mov
mov
add
push
in
lods
pushf
or
xchg
fadd
sbb
aad
xchg
test
icebp
mov
inc
pop
cmp
mov
pop
push
negb
movsl
fistps
adc
add
or
mov
orl
and
add
int3
adc
ret
pop
clc
jle
push
andb
ljmp
jno
xchg
jne
movsl
sbb
pop
jo
fcomps
in
or
hlt
or
pushw
repz
idivb
mov
inc
add
jbe
xchg
inc
xlat
add
lret
call
add
mov
or
mov
adc
adc
test
cs
sub
lea
inc
icebp
call
mov
shl
nop
dec
dec
and
adc
popa
pop
sbb
out
mov
std
add
jne
push
jp
mov
js
mov
inc
sbb
cmp
shrb
pop
enter
cmp
inc
aam
jne
fs
and
fisubrl
jg
mov
adc
xor
cld
xchg
push
mov
dec
into
mov
mov
loop
cwtl
enter
add
sti
in
jg
mov
cbtw
xchg
dec
or
mov
pop
jne
jne
pop
push
jmp
clc
ljmp
cli
mov
lea
cmp
xchg
in
pop
inc
lock
jge
pop
cwtl
sbb
mov
mov
in
xlat
inc
dec
pop
shlb
add
sub
loopne
hlt
inc
sub
movsb
and
mov
jmp
xorb
adc
sti
pop
fmul
mov
xor
or
and
pop
enter
xor
bound
add
mov
imul
icebp
dec
push
jl
inc
inc
and
pop
ljmp
clc
out
and
dec
into
jbe
cmp
jl
je
mov
cltd
dec
mov
dec
or
cmpsb
mov
dec
cld
push
imul
out
movsb
movsb
fcmovnbe
push
cld
lcall
cltd
lahf
mov
inc
out
jmp
hlt
ss
push
inc
sub
int3
add
mov
pop
imul
pop
and
mov
jp
push
mov
mov
cmpb
dec
adc
je
or
mov
add
sbb
lods
mov
cli
addr16
mov
mov
test
jno
nop
jle
movsb
pop
aaa
xchg
ljmp
or
xchg
adc
jno
test
test
je
les
push
or
outsl
mov
mov
pop
ret
addr16
test
fstpt
sbb
and
popa
adc
dec
mov
call
sahf
cs
mov
mov
popf
pop
mov
filds
sbb
fstps
sbb
ljmp
dec
dec
xor
imul
pop
decl
cmp
gs
adc
int
lret
and
push
inc
aaa
cli
mov
sbb
xchg
scas
fdivrp
fbld
adcb
test
das
inc
add
fwait
cli
adc
ss
push
dec
jo
or
jge
jo
mov
rorb
outsb
mov
cmp
sub
pop
outsl
lock
lahf
push
jg
cmp
inc
aad
sar
xor
push
adc
jo
and
sbb
mov
negl
std
inc
mov
js
inc
lock
mov
mov
sbb
pop
push
cmpb
imul
xchg
pop
inc
das
add
lock
test
cli
mov
icebp
popa
cltd
lcall
leave
mov
nop
sub
and
mov
stos
xor
mov
decb
es
sbb
sub
pop
clc
jl
adc
repnz
mov
cmp
pop
jp
push
bound
push
adc
mov
movsw
lock
mov
out
andl
nop
in
jmp
pop
test
mulb
add
mov
adc
dec
push
rcl
leave
test
or
lahf
imul
dec
add
idivb
insb
pushf
xor
in
add
add
ret
filds
fs
das
push
mov
sbb
and
mov
sbb
push
mov
aad
std
jnp
leave
insl
xlat
lret
out
sbb
hlt
push
jle
clc
xor
adc
dec
push
out
fs
mov
add
jbe
adc
jg
sub
mov
mov
stos
adc
lcall
neg
stos
jno
sar
pop
mov
stos
repnz
or
add
fistpll
jne
mov
xor
adc
fstpt
sbb
sub
movsl
and
or
mov
xchg
insb
inc
clc
xchg
mov
jo
pop
leave
outsb
xchg
fidivrl
and
jae
push
add
sub
ljmp
or
mov
inc
pop
movsb
lods
jb
push
add
or
sbb
sub
rclb
js
sbbb
mov
adcb
sub
not
call
arpl
xor
jno
rcrl
inc
mov
cmp
sbb
loop
xor
inc
jge
inc
ljmp
imul
xchg
or
sub
adc
mov
movsl
push
hlt
or
push
std
pop
outsb
and
mov
push
push
aas
fs
pop
push
xchg
ss
push
clc
in
cmp
in
sub
in
mov
push
hlt
jmp
mov
movsl
mov
mov
ret
add
test
icebp
or
push
jmp
xchg
pop
incl
aaa
popf
int3
data16
adc
lea
dec
sbb
dec
adc
cld
push
fists
sbbb
and
inc
cs
cltd
sbb
dec
ja
sbb
nop
pop
jbe
xlat
adc
adc
das
insb
mov
test
aam
mov
out
imul
outsb
mov
add
and
xor
in
jns
out
fs
pop
xor
lds
repnz
or
shl
hlt
in
and
jnp
into
xchg
jmp
sbb
lods
and
mov
push
xor
fdivrl
inc
call
mov
adc
adc
mov
cmp
inc
add
mov
inc
scas
push
jno
cs
test
and
outsl
in
sub
sub
lret
lret
loopne
push
sub
push
jo
adc
test
push
jmp
xchg
push
pop
mov
cwtl
test
je
jmp
test
sub
mov
call
push
dec
mov
mov
mov
mov
jmp
lahf
adc
fistpl
jp
pop
push
call
or
imul
sbb
lea
sub
aas
pop
mov
std
outsl
xchg
pop
je
mov
das
xor
scas
add
lea
mov
push
or
ljmp
jecxz
ljmp
cld
dec
rolb
adc
cli
test
inc
cmp
jp
pop
jg
jg
outsb
repnz
and
je
pxor
mov
pusha
loope
inc
xor
cmp
inc
xor
cs
adc
rcrl
mov
sbbl
testl
fwait
pop
mov
sbb
jb
movsb
mov
sbbb
int3
nop
mov
rclb
pop
xor
push
mov
mov
scas
dec
xor
and
das
bound
fdivr
xchg
adc
push
int3
inc
cmpsl
loop
xchg
popf
cmp
xor
sbb
loop
mov
sbb
fadd
push
std
inc
add
mov
fsubrl
fistps
cmpsb
xor
pop
mov
fsubrs
mov
inc
add
jp
cld
pop
jp
call
dec
xchg
sub
pushf
stc
adc
mov
ss
add
pop
pop
rclb
test
jecxz
ficoms
xchg
hlt
dec
hlt
jmp
fcmove
inc
daa
push
pop
dec
push
or
mov
clc
out
rclb
mov
jmp
pop
push
xor
and
jmp
dec
js
cld
sti
fidivrs
scas
popa
pop
adc
ret
repz
shrl
or
mov
in
adc
dec
fwait
cmp
ret
push
js
jo
lahf
dec
pop
decb
adc
ja
sbb
jbe
pop
arpl
andb
mov
inc
clc
inc
loope
int3
add
pop
and
dec
out
xchg
fdivr
pop
mov
scas
popf
mov
jmp
std
pop
inc
mov
pusha
sub
jne
mov
jmp
sub
cmpsb
enter
fldl
sbb
nop
aad
jmp
aas
icebp
das
push
sbb
sti
cli
cmpsb
push
ret
incb
cld
sahf
gs
sbb
xor
scas
addb
cmc
cmc
dec
ljmp
pop
mov
loop
test
xchg
lcall
mov
inc
push
mov
mov
dec
aaa
pop
je
xlat
and
pop
or
repnz
adc
test
imul
rorb
subb
mov
shrb
fcmovb
add
inc
mov
icebp
les
push
adc
xchg
mov
call
aaa
push
lock
lock
sti
add
push
dec
sarl
mov
js
dec
mov
pop
push
xor
sbb
xchg
adc
add
ds
cmp
pop
std
mov
pop
adc
fdivs
sahf
enter
jmp
shlb
ret
int3
lret
pop
enter
lods
ljmp
bound
out
sti
inc
outsb
push
cmpsl
mov
pusha
rcll
jne
cmpsb
lea
xchg
or
hlt
test
inc
and
fdivl
fs
pop
test
ja
outsb
jle
mov
xor
pmullw
mov
sahf
cmp
sub
sahf
icebp
repz
js
sar
add
adcl
adc
mov
fistpll
cmp
daa
push
xchg
scas
pop
lock
push
daa
add
imul
push
sti
out
pop
xlat
subb
add
test
mov
jl
and
lods
loop
adc
outsl
std
mov
sub
insl
jae
loopne
or
xor
cmp
jg
clc
pop
mov
mov
sahf
push
aas
inc
and
mov
and
dec
pop
inc
out
add
mov
cmpsb
jle
adc
sub
clc
shlb
dec
popf
mov
add
and
xchg
adc
jmp
call
cli
or
adc
mov
mov
das
mul
mov
aaa
js
sub
notl
push
sub
pop
mov
mov
loopne
insl
mov
and
dec
adc
add
lcall
ret
add
jmp
mov
mov
push
xchg
add
inc
in
jo
mov
jecxz
nop
popf
dec
cmpsb
je
into
push
or
push
roll
mov
daa
adc
aam
mov
jae
gs
push
dec
mov
add
loope
loopne
mov
addr16
aad
dec
mov
repz
fidivs
mov
mov
stos
pushf
inc
subl
orb
xchg
mov
mov
insb
stos
fs
or
shl
jmp
std
pop
lret
cmp
and
leave
inc
adc
xor
icebp
mov
decl
add
lods
xor
and
cs
les
fsubl
and
aas
jne
clc
mov
je
push
dec
adc
jl
fistl
in
fistpl
out
xor
inc
lods
cmpsl
inc
lds
mov
push
cmp
icebp
outsb
fsubrl
loope
inc
lcall
repz
pop
mov
arpl
add
mov
mov
push
bound
jg
sar
movsl
out
lods
icebp
dec
insb
enter
sub
sti
add
xor
nop
push
ret
xchg
clc
bound
sbb
add
ja
mov
jg
insl
and
movsb
adc
std
aaa
test
leave
mov
cmp
mov
push
add
shlb
mov
or
addb
into
pop
rorb
cwtl
sti
in
jmp
jo
inc
test
push
jmp
pop
sub
and
cmp
cld
leave
ret
ds
mov
or
cmc
fisttps
push
mov
mov
mov
fisubs
sbb
repz
dec
jge
cmp
cmp
repz
sbb
aaa
dec
or
test
cli
push
push
jg
pusha
mov
lods
mov
adc
push
mov
decl
mov
jb
or
or
and
xchg
adc
and
das
mov
popa
fcomi
sub
xor
mov
ss
outsl
ljmp
adc
sbb
and
in
test
sub
outsl
loopne
inc
push
ja
stc
add
pop
xlat
add
mov
and
leave
xor
cli
xchg
imul
xor
cmp
xchg
mov
fists
jecxz
cmp
adc
test
add
mov
xlat
aad
mov
test
sub
hlt
das
jnp
sub
aad
call
stos
shl
push
repnz
mov
or
mov
andl
scas
pop
pop
add
add
add
mov
std
push
movsb
in
sub
lods
push
lock
jecxz
mov
decb
push
clc
xchg
in
shlb
mov
out
xchg
jns
cmp
adcb
subl
stc
les
or
and
mov
aam
test
mov
pushf
pop
and
sar
aad
dec
sbb
push
loopne
movsb
fstpl
add
rcll
ss
pop
shrl
fdivrs
loopne
test
push
xchg
hlt
repnz
repnz
outsb
loopne
adc
frstor
fistl
das
jb
hlt
aaa
test
mov
out
pusha
nop
mov
add
aas
cmp
push
or
dec
and
outsl
aad
jbe
pop
sbb
inc
push
stos
pop
mov
sti
lcall
xor
push
xchg
jle
mov
xlat
mov
or
aas
mov
jne
push
adc
add
aaa
negb
mov
outsl
sbb
fnsave
fsubrp
dec
sbb
jo
xchg
pop
je
cld
mov
das
and
imul
aad
adc
ljmp
and
add
xchg
add
jo
jle
jne
je
and
dec
xchg
or
aaa
fdivp
mov
adcl
es
out
cs
test
adc
scas
ficompl
outsl
adc
sar
negb
mov
addr16
stc
mov
es
out
xchg
aam
pop
pop
subb
sbb
cmp
pusha
and
lods
or
imul
dec
ss
and
sub
dec
in
cmp
inc
inc
cli
pop
sbb
repz
pop
cli
pop
std
fisttps
sbb
les
sti
jmp
mov
sub
xchg
ljmp
cs
adc
es
adc
jg
fs
inc
xchg
loop
outsl
push
test
xor
pushf
imul
xchg
inc
loop
fisttpl
adc
dec
je
dec
lea
aam
ss
pusha
adc
lcall
sahf
jge
mov
cmpsl
or
xor
or
jl
pop
sub
decl
push
stos
or
add
int
fwait
lods
test
or
add
leave
dec
xchg
data16
mov
ljmp
test
andl
inc
inc
jg
je
xchg
in
js
fsin
mov
outsl
mov
shll
jno
xor
fmuls
cmpsb
out
clc
aaa
in
lods
iret
xor
loope
push
and
cld
pop
call
popa
or
xchg
fbstp
mov
adc
fidivl
or
pop
dec
aad
cmp
inc
mov
fstpt
jns
gs
fdivrl
xchg
jns
push
in
popf
pop
mov
mov
push
jg
push
mov
add
fstps
push
cmp
push
lds
repz
fcmovne
clc
movb
int
mov
cmpl
push
cmove
mov
inc
sub
decl
mov
mov
pop
test
mov
das
fadds
es
mov
cld
pop
inc
imul
jecxz
adc
and
shll
test
or
aad
je
sti
fstp
jle
push
push
mov
xor
sub
xchg
mov
mov
fnstsw
icebp
popf
ficoms
push
scas
out
mov
xchg
jge
pop
fcomps
and
je
mov
and
pop
movsb
icebp
cmp
rorb
push
aaa
decb
cld
outsl
scas
movsb
fs
cmp
lea
xchg
push
movsb
shlb
aad
rclb
mov
aaa
test
mov
sbbb
lea
ret
mov
popa
cli
sub
movsb
pop
mov
dec
adcl
jecxz
mull
imul
push
cmp
fistl
pop
out
inc
test
jne
stos
mov
xor
push
or
pop
mov
cmp
push
pop
inc
gs
or
cwtl
mov
mov
bound
and
mov
stos
sbb
popa
int
adc
pop
cmp
js
pop
ss
and
iret
iret
mov
scas
jmp
cmpb
mov
push
rcrb
lcall
inc
push
pop
and
dec
jnp
clc
filds
pop
dec
iret
add
and
push
xor
shl
and
adc
or
ret
push
mov
inc
cmp
mov
pop
bound
popf
loop
cld
xchg
cmp
mov
notb
push
das
mov
mov
xor
inc
jmp
xchg
inc
dec
jne
ljmp
pop
inc
and
popa
fistpl
or
out
stc
jmp
inc
aaa
xchg
sbb
or
push
jmp
sbbb
pop
dec
imul
and
in
fmuls
xor
pop
clc
aaa
outsb
testb
sbb
aad
ljmp
xchg
pop
data16
cmp
movsl
adc
push
jge
mov
mov
fcoml
outsb
icebp
in
push
inc
or
out
stos
jo
mov
inc
ljmp
inc
es
fisubrl
lods
in
filds
aas
mov
inc
xchg
xchg
mov
in
movsl
mov
sbb
cli
daa
adc
xchg
cmp
out
mov
mov
add
popf
dec
insl
inc
lea
shlb
test
roll
call
mov
aas
enter
pop
inc
sbb
leave
sub
xchg
outsl
ja
push
insl
hlt
outsb
add
xor
push
cmp
aaa
fstpl
inc
or
adc
je
pop
adc
hlt
jmp
adc
add
mov
cmp
int3
inc
lret
jg
mov
add
mov
push
cmpl
push
aam
das
cmp
dec
enter
pop
andb
lock
push
adc
add
pushf
out
je
into
pop
cmp
xchg
outsb
adc
nop
popa
jnp
bound
inc
mov
add
add
mov
lahf
or
movlps
sarl
jne
imull
fwait
sub
sbb
scas
aam
pop
insb
adc
loope
je
sub
cwtl
fisubs
mov
in
clc
jge
or
cltd
enter
and
orl
cli
pop
push
fistl
and
push
daa
mov
fs
icebp
add
lods
repnz
mov
out
rorb
xchg
push
in
inc
add
fildll
jecxz
pop
and
mov
mov
jmp
cli
repz
push
inc
mov
fisttps
sarl
fwait
mov
call
sbb
add
dec
mov
js
sbb
add
and
adc
call
jg
xchg
lods
sbb
dec
or
stos
dec
pop
add
xchg
incb
adc
inc
cmp
jp
push
dec
jne
pop
add
inc
sub
int
test
addr16
sti
mov
sub
out
rcll
call
dec
clc
mov
iret
nop
stos
mov
mov
pop
sub
inc
lret
cli
lret
pop
add
mov
xchg
push
mov
les
add
movsb
jne
fstl
dec
add
mov
fwait
aad
add
xchg
xor
outsb
je
cmp
fcoml
int3
fs
pop
cltd
add
pop
je
xor
cmp
xchg
aam
inc
push
sarb
add
adc
insl
sbb
paddq
add
stos
dec
lds
inc
incl
clc
jns
imul
and
and
add
sub
sub
dec
jmp
lcall
jmp
mov
adc
add
cs
mov
andb
sub
imul
pop
nop
xchg
xor
xchg
ficomps
aaa
ret
jo
push
es
sub
adc
jns
fistpll
jp
inc
and
xchg
jno
push
je
jae
mov
movsb
ds
jg
decl
call
int3
mov
movsb
iret
aad
xchg
ljmp
push
test
add
flds
fcomip
aas
rol
je,pt
outsl
mov
mov
sub
inc
add
decl
popa
shrb
into
das
out
push
jmp
jae
in
push
test
jle
decb
repz
insb
rcrl
add
addb
dec
lret
lods
push
mov
cmp
cmpsl
xchg
lret
aam
rcll
pop
repnz
loop
push
or
icebp
das
push
xlat
pusha
clc
adc
rcll
pop
and
movsb
les
int
mov
mov
or
add
inc
cmp
fs
dec
fldl
lods
mov
xchg
or
sub
sbb
or
rol
in
rcrl
decb
inc
mov
call
xor
adc
popa
and
psrld
rolb
sti
dec
pop
add
mov
std
pop
ljmp
push
std
fstps
pop
iret
or
sub
insl
add
mov
xor
push
repz
fsubs
mov
int3
mov
push
sbb
es
adc
cmp
mov
push
mov
lcall
xor
pop
ja
mov
stc
add
inc
inc
pop
out
shll
out
sub
in
pushf
shll
sti
in
in
fcoms
rep
lds
xor
in
fbld
in
icebp
stos
push
mov
nop
mov
leave
sub
fstps
adc
jg
mov
mov
xchg
or
xchg
or
std
sub
aad
lock
mov
shll
inc
cmpsb
and
cmp
jecxz
bnd
mov
in
xchg
xor
mov
std
dec
insb
xchg
mov
cltd
inc
dec
mov
push
shll
dec
cltd
push
jg
xchg
je,pn
push
push
mov
mov
jl
aam
mov
adc
andb
jo
call
icebp
inc
add
loope
add
xchg
int3
stos
or
push
xor
nop
lret
cmp
unpckhps
push
xchg
call
and
pop
icebp
add
int
mov
mov
fcomi
outsl
out
call
rolb
and
inc
sbb
cmp
xor
call
mov
xchg
pop
add
les
pop
push
pop
ja
testl
roll
outsl
adc
jge
stc
lods
iret
push
cmc
sub
ljmp
and
jecxz
shl
daa
fsubrp
hlt
dec
or
xlat
add
pop
mov
push
adc
in
cmpsl
mov
sbb
movsb
push
out
imul
xchg
call
lods
psubd
jp
dec
adc
mov
and
pop
fdivs
icebp
jge
call
pop
clc
mov
jmp
sbb
repnz
outsl
flds
push
lret
pop
fsubrs
cld
cli
inc
mov
mov
jg
adc
sub
mov
xchg
dec
and
fs
xor
stos
xor
pop
clc
push
dec
test
sbb
inc
lcall
push
in
iret
xor
rcrb
mov
sub
in
aaa
cs
mov
dec
xchg
gs
mov
add
sarl
xchg
rorb
mov
imul
les
outsl
fimull
push
or
adc
sub
into
jl
popf
and
push
mov
int
pop
mov
test
add
mov
inc
mov
sbb
mov
xchg
xor
push
mov
pop
rcr
int
mov
std
or
jmp
roll
insb
add
and
push
jle
cmp
addl
nop
add
fstps
jno
out
rcll
jg
pop
out
pop
in
out
push
sbb
pop
test
cmp
sahf
dec
add
fdivrl
inc
std
add
imul
insl
mov
fstps
jge
sub
out
mov
pop
inc
ljmp
jmp
add
add
in
mov
sarb
dec
pop
add
cld
mov
sub
and
dec
push
or
and
aas
xor
lods
jns
test
filds
cli
cmp
stos
sub
outsl
lret
dec
dec
test
add
icebp
mov
sub
test
aaa
xor
cmp
popf
mov
mov
das
pop
rcll
xor
sarb
sti
push
jmp
mov
xor
gs
pop
jp
sbb
in
cwtl
lds
push
test
push
iret
xchg
and
dec
dec
add
lea
repnz
sub
scas
les
aaa
mov
jecxz
decb
test
repz
call
loopne
out
mov
mov
xor
int
addr16
cli
lcall
insb
or
mov
cmp
sbb
into
cmp
mov
add
pop
adc
jl
mov
jae
loop
cmp
loop
shl
mov
cmp
xchg
loop
cmpsb
lods
add
and
mov
pop
insb
ljmp
test
movsb
mov
xor
or
push
sbbb
test
rol
xor
add
cli
inc
inc
pop
pusha
aad
jl
mov
push
lods
mov
xchg
push
jnp
cmp
mov
outsl
sub
dec
fwait
mov
movsl
gs
lea
fsubr
js
xor
notl
sbb
jmp
lahf
scas
adc
cmc
mov
stos
mov
dec
cmp
or
ret
or
mov
fildl
jge
cwtl
addr16
push
add
xor
mov
push
jnp
push
xor
aad
sub
ret
or
std
dec
std
inc
adc
mov
xor
mov
nop
ret
jbe
inc
jecxz
sarb
sbb
adc
out
push
mov
dec
and
add
xchg
fiaddl
cld
dec
and
in
pop
aaa
mov
and
insl
test
xchg
push
add
and
lea
popf
jno
repnz
jle
mov
mov
decb
lahf
jno
insl
push
cld
pop
sub
sub
int3
adc
dec
addl
and
aaa
in
adc
inc
mov
sbb
outsl
jl
popf
mov
cmpsl
jb
iret
xchg
enter
repnz
pop
cmp
jg
out
in
push
pop
rorb
pop
dec
xor
es
sub
mov
fnstsw
outsb
dec
std
xor
dec
sub
das
adc
and
xor
ds
aam
pop
jns
inc
rolb
pushf
fadd
filds
dec
andb
cmp
std
xchg
pop
xchg
aam
xor
test
inc
sbb
ljmp
sub
in
clc
lods
push
inc
jecxz
stos
std
mov
mov
add
adc
insb
jo
push
fisubrs
mov
call
sub
dec
stc
pop
push
inc
imul
pop
mov
push
insb
and
in
or
lahf
pop
or
out
cs
xor
call
aaa
aaa
mov
fbld
stos
push
cmpsl
sbb
in
push
inc
mov
xchg
repz
sub
cwtl
mov
fstp
ljmp
dec
cmpsb
xchg
rclb
lahf
das
cs
jo
pop
loopne
leave
xchg
js
push
call
leave
xor
inc
call
incb
xor
pop
jle
fidivrs
or
jge
mul
inc
loop
cmp
pop
lcall
jmp
mov
fdivs
lret
or
pop
mov
pop
lcall
xor
pop
adc
xor
bound
jg
cmp
push
je
push
stos
lret
lods
lea
jge
sbb
pop
add
mov
jecxz
or
xchg
punpcklwd
inc
aad
lock
dec
pushl
and
or
ja
aad
repnz
subl
cld
adc
mov
inc
mov
aaa
pop
fdivrl
or
dec
jns
popf
push
adc
rolb
pushf
pop
sub
add
push
add
repz
and
and
inc
dec
in
dec
aaa
std
mov
xor
jb
rclb
mov
cmpsb
test
xlat
push
sbb
mov
pop
stos
dec
mov
push
inc
pusha
pushf
or
push
ret
dec
mov
call
dec
mov
xor
push
movsl
fists
sub
fisttps
cltd
cmpl
adc
push
ret
adc
pusha
sbb
cmp
mov
orb
add
loope
mov
les
xchg
pop
sbb
test
sbb
mov
mov
and
js
daa
inc
sbb
pushf
xchg
mov
stos
cld
pop
mov
je
outsb
or
jle
fdivrp
inc
lods
mov
cli
mov
pop
dec
xor
icebp
fbstp
sbb
sbb
testl
xchg
and
push
lea
add
mov
test
cwtl
mov
add
repnz
pop
push
icebp
pop
sbb
or
call
dec
leave
cmp
pusha
adc
popf
daa
outsl
in
in
and
imul
loope
ret
lea
add
cmpsl
inc
inc
aad
rorl
xchg
dec
in
arpl
insb
pop
mov
jecxz
mov
in
and
xlat
enter
xor
mov
or
loopne
std
aam
movups
push
fistps
jbe
mov
add
sub
std
pop
mov
sub
rcll
lahf
jne
push
push
cli
sbb
addb
mov
jg
fmull
lcall
and
dec
mov
inc
in
sub
flds
push
test
mov
jecxz
adcb
sub
std
adc
rcrl
cmp
mov
aas
incl
das
test
inc
inc
sub
pop
daa
pop
push
test
lea
mov
sbb
mov
je
scas
add
pusha
ss
repz
xchg
shl
scas
lds
push
lea
push
pop
adc
ljmp
inc
fucomp
mov
adc
mov
shl
sub
gs
jle
movsb
inc
sti
inc
mov
mov
shlb
sbb
fbld
bound
mov
leave
leave
sbb
popf
andb
jmp
pop
pop
mov
xor
mov
adc
hlt
adc
dec
std
sbb
pop
popa
push
mov
cwtl
addr16
rorl
cwtl
pop
divl
adc
das
inc
popa
mov
mov
aas
ljmp
icebp
adc
dec
popf
xchg
stc
inc
adc
incl
lret
mov
pop
push
jg
push
lcall
mov
sbb
and
dec
in
add
mov
aaa
movsb
mov
test
inc
cli
leave
rcrl
adc
icebp
repz
pusha
jne
addr16
add
cli
mov
inc
mov
out
andl
insl
mov
mov
add
and
xchg
repz
xor
mov
mov
adc
push
nop
fsubrl
fwait
test
xchg
and
sbb
and
add
ja
test
outsb
rolb
mov
outsl
add
lods
add
insl
push
daa
lcall
pop
mov
jb
sahf
nop
and
imul
popf
xchg
call
cld
fs
std
pop
hlt
jmp
cli
and
mov
or
mov
fidivrl
out
sbb
and
add
bound
test
aas
iret
and
lea
push
ret
xchg
dec
sti
pusha
xchg
sbb
dec
jo
stos
sub
push
add
js
jl
bound
push
inc
xchg
fcoml
mov
arpl
pop
mov
inc
push
xor
into
adc
mov
or
xchg
push
cli
jecxz
pop
or
xchg
sbb
mov
and
js
cmp
add
sub
mov
dec
aam
add
add
js
push
insl
sub
cld
in
dec
or
sbb
jmp
mov
mov
xchg
adc
andb
das
jne
dec
out
inc
out
mov
cltd
jg
add
and
mov
call
mov
cmp
in
jae
push
mov
xchg
das
roll
pop
addl
sbb
outsl
loop
xchg
movsb
and
mov
pop
in
ljmp
clc
mov
out
dec
lret
addr16
cwtl
inc
aas
sub
jb
jbe
add
test
jg
ret
add
fcmovu
outsb
cmc
inc
mov
mov
cli
rorb
jge
stc
and
or
cmp
adc
sub
inc
cmp
push
das
add
cmc
lock
pop
mov
sbb
mov
mov
mov
mov
dec
or
ret
mov
sub
adc
pop
std
pop
push
jg
sbb
xchg
insb
mov
jne
sub
or
adc
lcall
or
mov
push
xchg
insb
out
push
in
adc
cmpsl
insb
addr16
movsb
add
decl
push
push
data16
sub
pop
ret
sbbl
lret
xor
lret
repnz
inc
pop
fsubp
mov
mov
push
xchg
push
dec
add
outsl
imul
rorb
aaa
sub
push
push
mov
mov
mov
ror
inc
xchg
xchg
sbb
mov
xchg
jl
push
mov
movsl
adcb
inc
dec
and
fildll
push
sbb
outsl
lock
pop
jle
popa
xchg
inc
jmp
pop
push
lock
mov
test
xor
pushf
popa
scas
xchg
push
add
dec
movsb
out
fwait
push
mov
fidivrs
in
rclb
inc
rclb
mov
icebp
ja
jecxz
popf
xchg
push
in
movsb
fnstenv
sbb
rclb
imul
sbb
aam
jl
xchg
popa
inc
xlat
push
push
add
shrb
call
pop
int3
or
hlt
mov
pop
xor
test
fcmovb
mov
or
dec
jno
cmp
insb
ss
fwait
loope
js
sub
push
mov
pop
sti
stc
mov
jg
pushl
fstpl
xor
int
mov
cmpsl
mov
push
bound
mov
cs
pop
mov
call
lods
xchg
incl
popa
sbb
pop
aad
movsl
mov
inc
pushf
jns
test
push
push
cmp
jg
add
jp
push
insb
mov
sub
mov
cmp
xorl
pop
mov
dec
jp
jnp
dec
xchg
repnz
mov
loopne
cmp
jnp
in
xchg
pusha
or
push
add
imul
imul
outsb
outsl
lock
imul
sti
je
jb
push
adc
outsb
je
jb
arpl
jae
fs
adc
jns
cmp
inc
gs
stos
ljmp
insl
popa
jo
neg
std
dec
jbe
pop
push
gs
imul
jb
popa
mov
fisttpl
daa
jo
adc
jne
div
addr16
gs
push
insl
jo
and
insl
jg
mov
inc
je
mov
pop
jae
cmp
push
cmpsb
xchg
push
sub
gs
dec
mov
dec
popa
pop
ja
insl
inc
cs
insb
fisubrl
jnp
fbld
outsl
popa
cmp
xchg
sub
imulb
pop
jae
dec
or
and
mov
mov
push
push
outsl
pop
jae
out
jne
cmp
push
push
imul
loope
outsl
adc
push
or
loope
into
jb
rolb
pop
das
mov
outsl
mov
inc
jns
inc
fwait
fs
mov
or
mov
arpl
add
adc
fs
jnp
mov
ret
jle
outsl
imul
jbe
mov
int
add
outsl
dec
out
daa
loope
mov
dec
je
jle
inc
mov
inc
in
filds
fs
adc
sub
or
pop
jmp
jo
sub
mulb
mov
inc
ret
adc
jecxz
aaa
push
ja
popa
es
inc
dec
inc
inc
test
rclb
xor
fcmove
xchg
sar
jns
push
inc
or
or
sub
sbb
rcrl
sbb
dec
mov
xor
imul
mov
adc
inc
mov
push
mov
mov
push
jne
outsb
test
sub
insl
add
das
push
jne
ret
mov
scas
popa
pop
movsb
dec
push
test
lret
out
or
arpl
fcmovnu
jne
jg
lcall
gs
jo
inc
mov
inc
imul
pop
mov
xor
fcomp
mov
iret
insb
scas
outsl
jo
out
dec
ss
imul
ret
jbe
jo
in
jb
xor
push
jo
popa
imul
adc
inc
mov
dec
inc
inc
out
insl
insb
fcom
lea
jae
pop
pop
out
mov
shll
insl
icebp
mov
outsl
jbe
jo
mov
jo
push
xlat
test
add
imul
sub
out
popa
xchg
loopne
test
pushf
cmp
sbb
popa
ret
push
popa
xchg
popa
nop
or
insb
outsb
fsubrs
scas
loope
sbb
xchg
out
cmpsl
fiadds
movsb
mov
xchg
sub
xchg
pop
outsb
mov
mov
cmp
xchg
or
or
fcomp
jne
scas
push
ss
push
cwtl
or
ja
push
ret
mov
mov
inc
inc
jmp
xchg
dec
js
call
pop
or
inc
insb
addr16
xor
mov
or
xchg
test
insl
push
or
nop
pop
xchg
imul
inc
jo
push
insb
lret
xor
mov
js
in
insb
jns
push
sub
rorb
push
ret
push
int3
push
outsb
jl
sbb
add
stc
out
insl
mov
add
and
adc
add
add
scas
cmp
or
add
testl
int
and
add
add
jnp
jge
add
push
xor
pop
insb
das
jnp
push
add
popa
je
or
dec
xor
out
mov
pusha
pop
add
jb,pn
jb
mov
or
cs
ljmp
or
insl
out
and
ret
jnp
imul
sti
fiadds
es
jmp
ja
dec
imul
loopne
test
dec
jl
add
lock
sub
daa
add
add
add
add
add
add
add
inc
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
test
scas
fcmove
jg
adc
mov
pusha
hlt
ret
jnp
out
mov
std
sub
push
pop
pop
adc
in
int
scas
pop
cmpsb
cld
pop
hlt
roll
mov
fs
fstps
cli
sub
fimuls
push
mov
and
js
xchg
or
adc
js
or
sti
andl
lret
and
xor
daa
mov
push
add
push
out
gs
inc
lods
int
outsl
out
outsb
movsb
clc
test
maskmovq
loop
xchg
jns
add
push
hlt
xchg
int
or
cmp
xor
push
daa
insl
data16
mov
in
sbbl
xchg
mov
js
rcll
and
das
mov
mov
in
pop
dec
out
fstps
mov
stos
addr16
sub
mov
pusha
fisttpll
cmpsb
push
aad
es
mov
jns
push
btc
mov
inc
clc
push
pop
and
and
push
rolb
inc
fsubrl
xor
xchg
daa
adc
inc
sub
test
aad
pop
and
into
xchg
sbbl
sbbb
lahf
push
fildll
stc
pusha
push
mov
ret
mov
in
jbe
std
sub
fwait
mov
add
movsl
cmpsb
outsl
pusha
je
sub
stc
cwtl
outsl
adc
cmpsl
xor
cmp
ret
daa
loopne
inc
aas
in
and
sti
sub
jp
rol
sbb
repz
stc
call
rorl
jge
hlt
inc
and
outsl
into
and
mov
inc
insb
pop
adc
in
push
sub
loope
dec
or
xchg
incl
xchg
stc
pop
jb
cwtl
mov
cmpsl
or
xor
fwait
xor
iret
adc
mov
lea
cmp
cmp
add
cwtl
addr16
or
xchg
add
add
add
add
xor
add
mov
add
add
add
adcb
add
and
add
add
add
add
add
push
add
addb
add
js
add
add
add
or
add
add
fs
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
addb
add
or
add
add
add
js
add
add
add
add
add
add
addb
add
or
add
add
hlt
js
add
add
add
add
sub
add
and
add
dec
add
add
add
add
fstp
add
add
add
filds
std
add
incl
std
std
add
fistps
std
fstpl
iret
add
lcall
in
std
insl
add
std
outsl
add
fucomip
add
fistps
out
fstpl
fstp
dec
add
lcall
out
fstp
add
fildll
std
incl
out
fnstsw
std
add
std
int
iret
decl
iret
fstp
add
add
fstp
add
add
jge
fstp
pop
add
fstp
add
ljmp
std
int
incl
std
add
std
iret
add
dec
add
add
fstp
add
decl
fldl
out
jg
in
fildll
int
fldl
iret
std
int
iret
fistps
incl
std
dec
add
std
std
add
std
add
jg
add
fistps
pop
add
add
dec
add
ljmp
iret
std
dec
add
fildll
iret
std
insl
add
in
add
in
add
std
jg
int
jge
std
filds
out
std
jge
fldl
out
add
dec
add
fistps
int
dec
add
fnstsw
fstp
int
int
dec
add
out
add
fisttpll
out
fstp
add
out
add
add
std
std
add
std
iret
add
add
in
add
fildll
in
std
int
fstp
iret
add
fisttpll
out
decl
in
dec
add
std
out
add
std
outsl
add
add
fldl
std
fistpll
std
fisttpll
in
jge
std
std
outsl
add
std
filds
out
fucomip
add
fucomp
add
add
add
std
iret
add
fisttps
in
std
dec
add
fnstsw
int
outsl
add
std
iret
add
fldl
fstp
jge
outsl
add
fstp
add
std
std
add
std
pop
add
std
pop
add
std
pop
add
fstp
add
fucomip
add
ljmp
int
pop
add
fstpl
in
add
fldl
iret
fstp
add
jg
iret
add
add
fisttps
filds
int
incl
std
std
dec
add
std
add
ljmp
int
out
add
ljmp
out
fucomip
add
std
jge
std
fucomip
add
dec
add
fstpl
fldl
std
std
iret
add
fucomp
add
std
in
add
std
incl
std
add
jge
out
fildll
fstp
out
add
add
fistps
insl
add
std
incl
std
dec
add
in
add
fucomip
add
fucomip
add
fisttpll
int
insl
add
jge
fstp
pop
add
in
add
fnstsw
in
in
add
add
add
fistps
int
std
add
fildll
iret
add
add
std
jg
fstp
pop
add
fistpll
in
add
ljmp
std
fucomp
add
fisttps
dec
add
in
std
dec
add
incl
std
add
iret
fstp
add
std
out
add
in
add
std
pop
add
std
int
in
add
std
in
add
fucomip
add
in
add
incl
int
in
add
std
incl
fldl
fstp
jg
iret
ljmp
dec
add
std
filds
std
add
std
jge
outsl
add
std
filds
iret
add
fisttps
int
pop
add
std
in
add
add
add
fucomp
add
add
filds
std
fstpl
in
std
outsl
add
std
fldl
std
out
add
lcall
out
add
add
fisttps
iret
fstp
add
fistps
std
std
jge
fstp
jg
insl
add
add
fucomip
add
dec
add
fstp
add
add
std
pop
add
jg
in
outsl
add
in
add
fisttpll
iret
jg
in
fucomip
add
std
jge
out
fisttps
iret
fisttpll
out
fildll
std
add
ljmp
std
add
add
ljmp
out
std
filds
out
std
pop
add
fldl
fstpl
pop
xchg
and
push
in
fisttpl
insb
xor
ja
lahf
mov
sbb
mov
iret
cwtl
dec
adc
je
js
mov
leave
clc
andl
jb
lcall
outsl
jne
loop
and
add
jge
test
mov
mov
ja
sbb
cmp
daa
cmp
cltd
fdivs
sub
rclb
fdivp
mov
push
js
test
pop
ret
or
rclb
dec
xchg
insl
jmp
cli
jl
lds
cmpsl
xchg
jnp
add
sahf
xchg
mov
xchg
sbb
adc
fcomi
sbb
and
dec
in
je
xor
ljmp
push
xchg
and
mov
pop
pop
xor
mov
outsl
inc
outsl
and
dec
addr16
xchg
shlb
mov
jbe
lcall
add
push
jne
xor
lock
add
pop
adc
jle
mov
std
jg
dec
shll
and
jae
pop
call
dec
cmpsb
idivb
and
notl
out
pusha
leave
gs
sbb
std
insb
aaa
jb
in
je
mov
sub
sbb
js
js
dec
aaa
ret
dec
out
sbb
pop
shlb
out
or
push
fcmovne
jb
or
call
jle
pop
push
cmp
jl
push
mov
pop
jo
or
jnp
mov
jb
xlat
js
and
dec
add
cvtps2pd
std
push
mov
adc
xchg
pop
iret
jne
cmc
repz
pop
cmp
dec
cli
push
pushf
lret
xor
addr16
test
test
incl
cld
int3
iret
mov
mov
cmpl
sub
fs
pop
mov
and
fnstcw
xor
lret
gs
or
pop
outsb
nop
cmp
fisubrl
adcl
sub
pop
pop
add
ja
jge
mov
xor
adc
or
cmp
add
or
js
sahf
xor
sbb
push
call
sbb
ja
mov
aad
pop
dec
dec
and
jg
and
jnp
test
sub
sbb
jne
mov
sbb
fadds
jns
cmp
sub
sbb
es
lds
test
lock
pop
jnp
aaa
adc
push
int3
jl
arpl
pop
sub
pop
sub
mov
loop
fiadds
pushf
xor
std
add
loop
xlat
das
dec
cmp
ljmp
push
outsb
cmc
mov
addr16
mov
daa
cltd
push
pop
fs
lock
imul
and
pop
pop
jne
and
jns
lret
mov
outsl
jns
xchg
cwtl
inc
ljmp
cmp
mov
pop
leave
cmp
sub
pop
inc
inc
lcall
inc
jns
push
sub
test
inc
ljmp
xor
es
rep
repnz
aaa
in
js
out
cmp
or
fidivl
ja
jae
xorl
and
or
in
pop
xchg
jle
into
ja
xor
jg
popf
mov
inc
push
cmp
mov
or
and
push
sub
xchg
mov
mov
ja
and
mov
icebp
adc
or
pop
xchg
mov
imull
and
fiaddl
jmp
mov
and
push
mov
sub
punpckhdq
jne
fs
inc
pop
mov
shl
xchg
mov
or
mov
or
xchg
and
jo
cli
shlb
fadds
cli
jmp
add
jg
xlat
lods
mov
shl
clc
jbe
cli
loopne
rolb
mov
mov
or
cmp
in
xchg
inc
inc
dec
push
and
jno
movsl
sub
push
aam
push
std
lock
xor
cmp
fs
jge
lods
hlt
aaa
cmc
jne
xchg
jns
aam
loop
in
and
mov
out
out
repz
mov
mov
stos
ret
int
xor
mov
mov
pop
mov
jl
mov
popf
mov
imul
xchg
mov
fucomi
sbb
xchg
decb
dec
push
push
insb
mov
flds
lahf
push
sub
xchg
in
cmp
mov
and
iret
dec
aad
imul
inc
imul
push
fs
mulb
dec
sbb
repnz
dec
cmp
aas
xlat
cmp
popa
mov
outsl
push
mov
dec
cwtl
cmpsl
dec
jbe
test
sub
mov
push
mov
aad
ret
leave
mov
add
add
add
add
add
add
add
std
add
mov
std
add
incl
mov
ds
add
jle
add
lahf
scas
add
sahf
scas
add
jg
add
fistpll
add
pop
scas
add
fidivrs
add
sahf
std
add
mov
scas
add
pop
out
add
mov
in
add
fildll
add
aas
std
add
pop
mov
add
out
add
jle
add
jg
add
push
mov
add
push
std
add
lahf
out
add
mov
in
add
mov
add
ljmp
add
lahf
mov
add
sahf
mov
add
fsubrp
add
mov
add
aas
lods
add
incl
stos
fistpll
add
in
add
aas
mov
add
mov
in
add
ds
add
jg
add
aas
std
add
pop
incl
lahf
jle
add
lahf
incl
fwait
pop
lods
add
mov
out
add
pop
std
add
fsubrp
add
mov
mov
add
pop
incl
fstpt
add
fistpll
add
jle
add
mov
std
add
ds
add
pop
mov
add
std
add
incl
sahf
incl
mov
mov
add
pop
in
add
mov
scas
add
jle
add
pop
mov
add
mov
out
add
push
std
add
std
add
pop
out
add
pop
mov
add
fidivrs
add
add
mov
scas
add
jle
add
mov
add
pop
mov
add
lahf
scas
add
mov
add
jle
add
pop
mov
add
jg
add
scas
add
add
mov
add
in
add
incl
fistpll
add
mov
add
aas
in
add
aas
out
add
scas
add
out
add
mov
add
jle
add
incl
jmp
in
add
aas
in
add
fistpll
add
fucomip
add
pop
std
add
lahf
lods
add
sahf
std
add
lahf
out
add
pop
mov
add
out
add
sahf
mov
add
mov
std
add
lahf
out
add
pop
lods
add
ds
add
ljmp
add
aas
scas
add
aas
std
add
fdivrp
add
pop
std
add
mov
scas
add
lahf
incl
scas
mov
incl
lret
lahf
in
add
jg
add
pop
out
add
jg
add
lods
add
mov
add
sahf
scas
add
fucomip
add
pop
out
add
in
add
lahf
in
add
sahf
scas
add
incl
lret
ds
add
fidivrs
add
jg
add
aas
mov
add
aas
scas
add
pop
mov
add
pop
lods
add
lahf
lods
add
ds
add
jg
add
jle
add
mov
std
add
pop
out
add
mov
scas
add
aas
incl
fwait
lods
add
lahf
std
add
mov
mov
add
lahf
lods
add
pop
in
add
fidivrs
add
jle
add
in
add
lahf
mov
add
pop
incl
stos
lahf
scas
add
ds
add
mov
in
add
incl
fistpll
lods
add
pop
mov
add
mov
scas
add
jg
add
pop
in
add
lahf
std
add
fildll
add
aas
in
add
fistpll
add
mov
mov
add
fildll
add
ljmp
add
jle
add
fildll
add
jg
add
fistpll
add
sahf
in
add
ds
add
pop
std
add
fistpll
add
ds
add
aas
incl
jmp
in
add
jg
add
pop
incl
pop
in
add
fildll
add
aas
lods
add
aas
scas
add
push
std
add
pop
mov
add
aas
out
add
jle
add
mov
scas
add
lahf
mov
add
aas
std
add
mov
mov
add
pop
std
add
lahf
scas
add
pop
incl
mov
pop
lods
add
pop
mov
add
lahf
mov
add
lahf
scas
add
jle
add
jg
add
lahf
std
add
fildll
add
add
incl
sti
mov
std
add
ds
add
aas
std
add
push
mov
add
aas
mov
add
lahf
incl
mov
pop
std
add
fidivrs
add
jle
add
pop
incl
out
pop
lods
add
pop
in
add
pop
mov
add
fistpll
add
incl
fwait
aas
mov
add
lahf
incl
out
aas
incl
mov
incl
iret
pop
mov
add
lods
add
fisubrs
add
pop
std
add
sahf
out
add
lahf
std
add
in
add
push
lods
add
ds
add
push
mov
add
pop
mov
add
ds
add
pop
scas
add
pop
mov
add
in
add
mov
lods
add
mov
lods
add
sahf
lods
add
ds
add
mov
in
add
sahf
lods
add
pop
lods
add
pop
out
add
lods
add
lahf
in
add
jg
add
mov
out
add
pop
mov
add
mov
mov
add
lahf
in
add
pop
lods
add
incl
scas
mov
scas
add
add
pop
scas
add
ds
add
ds
add
mov
mov
add
pop
scas
add
push
lods
add
jg
add
ljmp
add
push
incl
fistpll
std
add
jle
add
jle
add
pop
incl
out
ljmp
add
ds
add
incl
mov
out
add
sahf
mov
add
sahf
scas
add
fdivrp
add
fisubrs
add
jle
add
mov
lods
add
mov
mov
add
mov
std
add
mov
in
add
jle
add
jg
add
jg
add
pop
mov
add
ds
add
ds
add
mov
add
pop
incl
mov
sahf
mov
add
fsubrp
add
jle
add
pop
scas
add
push
std
add
jg
add
jle
add
incl
stos
lahf
lods
add
aas
out
add
pop
lods
add
fidivrs
add
ds
add
sahf
out
add
pop
incl
sti
mov
std
add
aas
mov
add
jle
add
aas
out
add
mov
std
add
jle
add
fisubrs
add
ds
add
mov
lods
add
fdivrp
add
push
mov
add
mov
std
add
pop
mov
add
mov
out
add
mov
incl
out
aas
mov
add
mov
std
add
push
out
add
sahf
incl
scas
pop
std
add
pop
scas
add
sahf
lods
add
mov
out
add
lahf
mov
add
jg
add
std
add
jle
add
lahf
lods
add
incl
lcall
mov
add
fucomip
add
sahf
in
add
fildll
add
ds
add
mov
mov
add
std
add
mov
in
add
lahf
scas
add
jle
add
jg
add
jg
add
mov
add
sahf
out
add
push
incl
mov
jle
add
fucomip
add
fsubrp
add
push
out
add
jg
add
std
add
push
in
add
pop
mov
add
fildll
add
lahf
mov
add
pop
in
add
pop
mov
add
pop
mov
add
push
std
add
lahf
mov
add
jle
add
pop
std
add
pop
in
add
pop
lods
add
fidivrs
add
pop
out
add
add
aas
incl
out
pop
in
add
pop
in
add
pop
std
add
ds
add
mov
add
pop
mov
add
ljmp
add
jg
add
lahf
out
add
ds
add
pop
incl
mov
in
add
ds
add
mov
add
jg
add
aas
scas
add
lahf
mov
add
lahf
lods
add
fucomip
add
sahf
mov
add
mov
std
add
aas
in
add
aas
std
add
lahf
mov
add
fsubrp
add
fdivrp
add
lahf
mov
add
fisubrs
add
lahf
mov
add
in
add
pop
scas
add
push
out
add
lahf
scas
add
ds
add
sahf
mov
add
ds
add
lahf
out
add
lahf
std
add
incl
fwait
mov
scas
add
mov
incl
mov
lahf
incl
fstpt
out
add
mov
out
add
jle
add
pop
lods
add
pop
mov
add
pop
out
add
aas
out
add
lahf
mov
add
push
std
add
aas
scas
add
aas
in
add
out
add
mov
lods
add
aas
mov
add
jg
add
aas
out
add
ds
add
mov
incl
iret
sahf
scas
add
fdivrp
add
pop
std
add
lods
add
mov
std
add
add
mov
add
ds
add
mov
mov
add
in
add
mov
incl
sti
fildll
add
aas
in
add
jg
add
jle
add
mov
lods
add
aas
incl
stos
jle
add
mov
add
sahf
in
add
pop
incl
scas
pop
mov
add
mov
mov
add
lahf
incl
jmp
std
add
mov
mov
add
aas
lods
add
pop
lods
add
sahf
incl
lahf
in
add
std
add
sahf
in
add
jle
add
ds
add
sahf
out
add
lahf
mov
add
mov
add
lahf
in
add
mov
scas
add
jg
add
jle
add
pop
in
add
fucomip
add
incl
lret
push
lods
add
pop
lods
add
mov
lods
add
mov
scas
add
lahf
scas
add
sahf
mov
add
pop
lods
add
sahf
lods
add
add
mov
mov
add
mov
add
pop
mov
add
pop
in
add
pop
in
add
aas
std
add
pop
incl
aas
std
add
lahf
std
add
out
add
aas
in
add
ds
add
fucomip
add
pop
in
add
ds
add
sahf
lods
add
lahf
scas
add
push
in
add
fsubrp
add
push
mov
add
jle
add
aas
mov
add
pop
scas
add
pop
mov
add
pop
mov
add
pop
out
add
ds
add
sahf
std
add
pop
std
add
jg
add
pop
scas
add
pop
lods
add
mov
mov
add
mov
scas
add
ds
add
sahf
lods
add
mov
mov
add
pop
incl
stos
pop
out
add
aas
lods
add
pop
scas
add
pop
out
add
add
fsubrp
add
lahf
mov
add
sahf
in
add
pop
lods
add
push
std
add
fisubrs
add
pop
std
add
pop
mov
add
ds
add
in
add
fdivrp
add
sahf
out
add
mov
lods
add
fucomip
add
incl
stos
add
pop
out
add
fidivrs
add
fildll
add
lods
add
ds
add
fdivrp
add
fildll
add
pop
in
add
aas
mov
add
fisubrs
add
pop
incl
lret
push
out
add
ds
add
std
add
aas
std
add
mov
scas
add
pop
mov
add
jg
add
jle
add
incl
sti
mov
in
add
out
add
ds
add
ds
add
fisubrs
add
pop
lods
add
fdivrp
add
fildll
add
push
out
add
incl
jmp
std
add
out
add
pop
mov
add
jg
add
push
incl
scas
ds
add
pop
std
add
add
pop
mov
add
pop
std
add
pop
out
add
in
add
sahf
lods
add
ljmp
add
ds
add
pop
mov
add
sahf
mov
add
push
incl
jmp
mov
add
pop
std
add
mov
add
jle
add
lahf
incl
fistpll
add
out
add
lods
add
jle
add
mov
scas
add
lahf
out
add
mov
add
pop
lods
add
sahf
incl
scas
add
pop
mov
add
sahf
incl
lret
mov
add
sahf
std
add
aas
scas
add
mov
add
ljmp
add
jle
add
aas
std
add
lahf
scas
add
aas
mov
add
jg
add
ds
add
mov
mov
add
sahf
incl
mov
ljmp
add
mov
scas
add
pop
scas
add
jle
add
incl
lahf
lahf
mov
add
mov
mov
add
push
out
add
incl
fistps
lods
add
lahf
std
add
mov
mov
add
pop
in
add
mov
mov
add
mov
in
add
push
scas
add
push
std
add
push
in
add
pop
mov
add
jg
add
pop
out
add
push
mov
add
sahf
lods
add
pop
scas
add
jg
add
pop
lods
add
pop
out
add
lods
add
sahf
out
add
fsubrp
add
lahf
incl
out
sahf
incl
mov
aas
mov
add
fistpll
add
lahf
lods
add
aas
std
add
lahf
mov
add
fistpll
add
jg
add
ds
add
lahf
out
add
incl
std
add
push
std
add
lahf
scas
add
std
add
sahf
mov
add
jle
add
mov
std
add
pop
scas
add
mov
scas
add
fisubrs
add
fsubrp
add
pop
in
add
pop
scas
add
aas
out
add
push
out
add
scas
add
mov
add
lods
add
mov
mov
add
aas
lods
add
jg
add
std
add
pop
mov
add
out
add
sahf
mov
add
pop
incl
fwait
push
mov
add
push
in
add
lahf
std
add
add
ljmp
add
mov
add
fdivrp
add
mov
mov
add
pop
mov
add
ds
add
mov
mov
add
fisubrs
add
ljmp
add
sahf
out
add
in
add
sahf
in
add
std
add
pop
std
add
jle
add
jle
add
in
add
pop
lods
add
mov
in
add
out
add
aas
lods
add
jle
add
push
std
add
jle
add
mov
std
add
add
push
out
add
sahf
in
add
add
jg
add
jle
add
add
mov
mov
add
jle
add
fistpll
add
mov
add
push
mov
add
out
add
jg
add
mov
lods
add
pop
scas
add
pop
incl
pop
out
add
add
mov
lods
add
jle
add
fisubrs
add
ds
add
jle
add
mov
in
add
lahf
std
add
jle
add
pop
out
add
aas
mov
add
jg
add
fsubrp
add
pop
in
add
add
mov
mov
add
jle
add
mov
mov
add
mov
mov
add
push
lods
add
mov
std
add
sahf
in
add
mov
add
add
pop
in
add
mov
add
aas
mov
add
ljmp
add
jle
add
sahf
in
add
jg
add
jg
add
mov
in
add
push
mov
add
pop
scas
add
aas
out
add
add
sahf
out
add
push
mov
add
in
add
incl
mov
mov
mov
add
aas
out
add
sahf
lods
add
aas
std
add
ljmp
add
ds
add
fdivrp
add
push
scas
add
sahf
out
add
mov
std
add
jg
add
pop
std
add
pop
mov
add
pop
in
add
aas
lods
add
lahf
std
add
ds
add
ds
add
pop
out
add
pop
in
add
add
fisubrs
add
mov
std
add
out
add
mov
scas
add
lahf
mov
add
fidivrs
add
pop
mov
add
mov
add
pop
out
add
fsubrp
add
mov
lods
add
sahf
std
add
sahf
mov
add
mov
add
ds
add
ds
add
sahf
mov
add
pop
in
add
aas
in
add
mov
std
add
std
add
jle
add
mov
add
add
fucomip
add
pop
mov
add
pop
scas
add
mov
add
pop
in
add
jle
add
pop
scas
add
ljmp
add
out
add
out
add
jg
add
push
out
add
lahf
in
add
mov
mov
add
sahf
mov
add
mov
in
add
push
in
add
pop
mov
add
mov
mov
add
push
mov
add
fdivrp
add
push
lods
add
fisubrs
add
add
mov
out
add
lahf
incl
mov
pop
mov
add
aas
mov
add
pop
std
add
pop
in
add
aas
mov
add
ds
add
out
add
add
pop
in
add
out
add
lahf
incl
fwait
push
std
add
jg
add
pop
in
add
jle
add
pop
incl
jg
add
pop
mov
add
mov
lods
add
sahf
scas
add
fildll
add
pop
in
add
aas
out
add
out
add
jle
add
fdivrp
add
jle
add
aas
scas
add
pop
scas
add
mov
add
pop
mov
add
pop
out
add
mov
std
add
sahf
std
add
sahf
std
add
aas
out
add
pop
lods
add
fucomip
add
pop
std
add
lahf
std
add
sahf
in
add
push
lods
add
pop
in
add
sahf
scas
add
pop
scas
add
std
add
jg
add
in
add
mov
add
std
add
ds
add
ds
add
aas
in
add
std
add
pop
lods
add
ljmp
add
pop
lods
add
lahf
incl
scas
sahf
std
add
incl
jle
add
fidivrs
add
jg
add
pop
mov
add
aas
out
add
mov
scas
add
aas
mov
add
fistpll
add
fistpll
add
pop
mov
add
jg
add
jg
add
fdivrp
add
fsubrp
add
jle
add
mov
std
add
lahf
scas
add
pop
mov
add
mov
mov
add
sahf
scas
add
pop
mov
add
pop
in
add
ljmp
add
sahf
lods
add
pop
lods
add
jg
add
ds
add
std
add
jle
add
pop
out
add
push
scas
add
pop
mov
add
jg
add
mov
lods
add
ds
add
add
add
add
add
add
or
pop
or
add
add
sub
add
add
add
sbb
add
insb
and
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
push
add
jle
pop
add
add
jle
aas
add
add
add
add
add
add
add
dec
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
add
add
add
add
xor
cmp
xor
xor
inc
add
add
pop
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
inc
add
je
add
add
add
and
dec
add
ja
insb
add
insl
add
add
add
jne
add
add
data16
jae
outsl
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
add
and
push
add
inc
add
add
dec
add
add
popa
add
add
add
jp
sub
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
test
add
je
add
add
add
and
dec
add
push
jno
imul
jbe
insb
add
and
xor
cmp
cmp
cmp
sub
add
add
add
add
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
xor
sub
and
cmp
xor
sub
and
xor
xor
add
and
add
add
inc
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
xor
sub
and
cmp
xor
sub
and
xor
xor
add
and
add
add
inc
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
inc
add
je
add
add
add
add
js
add
add
or
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
add
add
add
add
add
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
inc
add
je
add
add
add
and
dec
add
ja
insb
add
insl
add
add
add
jne
add
add
data16
jae
outsl
add
add
adc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
inc
add
je
add
add
add
and
dec
add
push
jno
imul
jbe
insb
add
add
add
dec
add
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
inc
add
je
add
add
add
and
dec
add
push
jno
imul
jbe
insb
add
add
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
gs
xor
fs
insb
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
inc
gs
outsl
arpl
