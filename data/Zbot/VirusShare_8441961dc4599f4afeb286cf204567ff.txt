push
mov
sub
mov
mov
xor
mov
mov
xor
mov
cmp
ja
cmp
jb
mov
movl
xor
mov
call
cmp
je
test
je
movl
call
mov
mov
mov
mov
mov
pop
ret
cmp
je
cmp
je
mov
mov
mov
mov
pop
ret
lea
cmp
jne
movl
xor
mov
call
cmp
je
test
je
movl
call
jmp
movl
mov
mov
call
test
je
call
mov
jmp
movl
mov
mov
mov
call
jmp
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
sub
lea
movl
call
sub
call
movl
mov
lea
mov
mov
mov
mov
mov
movl
call
mov
test
je
mov
mov
test
jne
cmp
je
mov
mov
mov
mov
mov
call
mov
cmp
je
mov
mov
mov
mov
mov
call
call
mov
mov
call
and
call
mov
mov
mov
mov
mov
mov
call
mov
call
mov
call
mov
mov
mov
mov
call
mov
jmp
lea
lea
push
mov
sub
movl
call
call
nop
lea
push
mov
sub
movl
call
call
nop
lea
push
mov
mov
pop
jmp
lea
push
mov
mov
pop
jmp
nop
nop
nop
nop
push
mov
pop
jmp
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
nop
nop
call
mov
mov
mov
inc
data16
mov
data16
data16
es
add
nop
nop
leave
ret
nop
push
mov
sub
nop
nop
call
mov
xchg
pushf
mov
and
mov
push
inc
outsb
xchg
and
mov
data16
bound
xchg
and
bound
imul
mov
addr16
bound
and
bound
data16
cltd
mov
arpl
xchg
data16
data16
es
add
nop
nop
leave
ret
push
mov
sub
nop
nop
call
mov
xchg
and
bound
xchg
and
cltd
inc
data16
and
add
add
leave
ret
push
mov
mov
call
nop
nop
call
mov
data16
dec
es
and
out
and
es
out
and
mov
es
decb
inc
mov
jle
in
and
in
and
jmp
decb
inc
mov
data16
and
outsl
jo
data16
adc
and
mov
and
cmp
data16
add
nop
nop
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
nop
nop
call
in
and
sahf
adc
mov
data16
inc
data16
bound
out
and
in
and
and
in
and
and
in
and
bound
push
inc
data16
jbe
and
fldl
nop
nop
movl
mov
leave
ret
nop
push
mov
sub
nop
nop
call
in
and
and
mov
and
and
push
jb
mov
data16
data16
sbb
mov
data16
data16
outsb
out
and
mov
sbb
mov
data16
in
outsb
out
and
sbb
mov
data16
data16
outsb
out
and
mov
data16
data16
data16
data16
out
bound
test
in
bound
jecxz
adc
and
data16
mov
data16
data16
and
and
mov
data16
data16
addr16
jle
data16
data16
and
fisubs
data16
and
mov
test
and
es
and
and
push
push
and
bound
data16
data16
push
out
and
and
in
and
adc
data16
outsb
mov
data16
data16
data16
scas
out
bound
cmp
in
jbe
cmpsb
adc
and
cmp
data16
jmp
scas
out
bound
cmp
in
bound
add
nop
nop
mov
mov
mov
leave
ret
nop
push
mov
sub
nop
nop
call
in
and
and
mov
and
and
push
jb
mov
data16
data16
sbb
mov
data16
jns
in
outsb
out
and
mov
sbb
mov
data16
data16
outsb
out
and
sbb
mov
data16
jns
in
outsb
out
and
mov
data16
data16
data16
data16
out
bound
sub
mov
jecxz
adc
and
data16
mov
data16
data16
and
and
mov
data16
data16
addr16
jle
data16
data16
and
fisubs
data16
and
mov
test
and
es
and
and
push
push
and
bound
data16
push
out
and
and
in
and
mov
mov
and
data16
data16
data16
scas
out
bound
mov
mov
cmpsb
adc
and
movsb
js
in
jmp
scas
out
bound
mov
mov
fsubrp
popa
fildl
nop
nop
mov
mov
mov
leave
ret
nop
push
mov
sub
nop
nop
call
in
and
and
mov
and
and
push
jb
mov
data16
data16
sbb
mov
data16
mov
and
mov
sbb
mov
data16
outsb
out
and
sbb
mov
data16
mov
and
mov
data16
data16
data16
data16
out
bound
aad
data16
bound
jecxz
adc
and
data16
mov
data16
data16
and
and
mov
data16
data16
addr16
jle
data16
data16
and
fisubs
data16
and
mov
test
and
es
and
and
push
push
and
bound
data16
data16
push
out
and
and
in
and
and
data16
outsb
mov
data16
data16
data16
scas
out
bound
dec
jnp
in
jbe
cmpsb
adc
and
dec
jnp
in
jmp
scas
out
bound
dec
jnp
in
bound
add
nop
nop
mov
mov
mov
leave
ret
nop
push
mov
sub
nop
nop
call
in
and
and
mov
and
and
push
jb
mov
data16
data16
sbb
mov
data16
jp
in
outsb
out
and
mov
sbb
mov
data16
data16
outsb
out
and
sbb
mov
data16
data16
outsb
out
and
mov
data16
data16
data16
data16
out
bound
jge
data16
bound
jecxz
adc
and
data16
mov
data16
data16
and
and
mov
data16
data16
addr16
jle
data16
data16
and
fisubs
data16
and
mov
test
and
es
and
and
push
push
and
bound
data16
jge
in
push
out
and
and
in
and
int3
jge
in
outsb
mov
data16
data16
data16
scas
out
bound
bnd
in
jbe
cmpsb
adc
and
hlt
jge
in
jmp
scas
out
bound
bnd
in
bound
add
nop
nop
mov
mov
mov
leave
ret
nop
push
mov
sub
nop
nop
call
in
and
and
mov
and
and
push
jb
mov
data16
data16
sbb
mov
data16
mov
and
mov
sbb
mov
data16
jl
in
outsb
out
and
sbb
mov
data16
jl
in
outsb
out
and
mov
data16
data16
data16
data16
out
bound
in
data16
bound
jecxz
adc
and
data16
mov
data16
data16
and
and
mov
data16
data16
addr16
jle
data16
data16
and
fisubs
data16
and
mov
test
and
es
and
and
push
push
and
bound
data16
in
push
out
and
and
in
and
je
data16
outsb
mov
data16
data16
data16
scas
out
bound
lcall
jecxz
adc
and
pushf
jg
in
jmp
scas
out
bound
lcall
fsubrp
fcmovbe
add
nop
nop
mov
mov
mov
leave
ret
nop
push
mov
sub
nop
nop
call
in
and
and
mov
and
and
push
jb
mov
data16
data16
sbb
mov
data16
data16
outsb
out
and
mov
sbb
mov
data16
in
outsb
out
and
sbb
mov
data16
data16
outsb
out
and
mov
data16
data16
data16
data16
out
bound
lea
in
bound
jecxz
adc
and
data16
mov
data16
data16
and
and
mov
data16
data16
addr16
jle
data16
data16
and
fisubs
data16
and
mov
test
and
es
and
and
push
push
and
bound
data16
jle
in
push
out
and
and
in
and
sbb
data16
outsb
mov
data16
data16
data16
scas
out
bound
add
in
jbe
cmpsb
adc
and
add
data16
jmp
scas
out
bound
add
in
bound
add
nop
nop
mov
mov
mov
leave
ret
nop
push
mov
sub
nop
nop
call
in
and
and
mov
and
and
push
jb
mov
data16
data16
sbb
mov
data16
jno
in
outsb
out
and
mov
sbb
mov
data16
data16
outsb
out
and
sbb
mov
data16
jno
in
outsb
out
and
mov
data16
data16
data16
data16
out
bound
xor
mov
jecxz
adc
and
data16
mov
data16
data16
and
and
mov
data16
data16
addr16
jle
data16
data16
and
fisubs
data16
and
mov
test
and
es
and
and
push
push
and
bound
data16
push
out
and
and
in
and
test
in
outsb
mov
data16
data16
data16
scas
out
bound
stos
jo
in
jbe
cmpsb
adc
and
lods
jo
in
jmp
scas
out
bound
stos
jo
in
bound
add
nop
nop
mov
mov
mov
leave
ret
nop
push
mov
sub
nop
nop
call
in
and
and
mov
and
and
push
jb
mov
data16
data16
sbb
mov
data16
mov
and
mov
sbb
mov
data16
outsb
out
and
sbb
mov
data16
mov
and
mov
data16
data16
data16
data16
out
bound
fnsave
in
bound
jecxz
adc
and
data16
mov
data16
data16
and
and
mov
data16
data16
addr16
jle
data16
data16
and
fisubs
data16
and
mov
test
and
es
and
and
push
push
and
bound
data16
data16
push
out
and
and
in
and
sub
data16
outsb
mov
data16
data16
data16
scas
out
bound
push
jae
in
jbe
cmpsb
adc
and
push
jae
in
jmp
scas
out
bound
push
jae
in
bound
add
nop
nop
mov
mov
mov
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
nop
nop
call
in
push
imul
in
and
data16
mov
inc
outsb
mov
imul
pushw
out
and
sbb
and
cmpsl
ficomps
xchg
mov
mov
and
and
cmpsb
cmp
data16
cmpsl
out
scas
out
and
arpl
jb
mov
mov
jne
mov
imul
pushw
out
and
sbb
and
and
and
outsb
or
std
roll
nop
nop
mov
leave
ret
nop
nop
push
mov
sub
nop
nop
call
in
and
and
and
and
and
cmpsb
jle
and
cmpsb
push
out
and
and
mov
xor
and
out
and
and
and
and
and
data16
data16
and
and
mov
push
data16
xor
bound
and
in
and
bound
test
cmpsb
adc
and
and
jmp
jecxz
data16
xor
bound
and
data16
into
call
nop
nop
mov
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
nop
nop
call
mov
data16
outsb
data16
outsb
out
data16
lcall
mov
mov
nop
mov
leave
ret
push
mov
sub
nop
nop
call
mov
data16
and
bound
iret
cltd
cltd
cltd
es
and
data16
and
jl
and
xor
push
and
fs
sahf
cltd
lea
add
leave
ret
push
mov
sub
nop
nop
call
in
and
bound
ds
cltd
cltd
out
and
data16
and
inc
in
and
xor
push
adc
and
and
sahf
cltd
lea
add
add
add
mov
leave
ret
push
mov
sub
nop
nop
call
in
and
bound
pushf
cwtl
cltd
cltd
es
bound
divl
out
and
adc
and
lea
and
and
in
and
arpl
roll
nop
nop
mov
mov
mov
leave
ret
nop
push
mov
sub
nop
nop
call
in
jbe
sbb
outsb
in
and
fs
and
and
outsb
lea
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
nop
nop
call
mov
and
and
in
out
jecxz
cltd
cltd
cltd
mov
jb
in
jecxz
cltd
cltd
cltd
out
bound
add
adc
inc
ljmp
data16
bound
jb
out
bound
es
cltd
cltd
out
jecxz
cltd
cltd
cltd
mov
jb
in
jecxz
cltd
cltd
cltd
out
bound
inc
fwait
cltd
cltd
out
jecxz
cltd
cltd
cltd
mov
jb
in
jecxz
cltd
cltd
cltd
out
bound
outsb
fwait
cltd
cltd
out
jecxz
cltd
cltd
cltd
mov
jb
in
jecxz
cltd
cltd
cltd
out
bound
mov
or
inc
bound
jecxz
cltd
cltd
cltd
out
bound
mov
cltd
cltd
out
jecxz
cltd
cltd
cltd
mov
jb
in
jecxz
cltd
cltd
cltd
out
bound
rcrb
add
inc
bound
jecxz
cltd
cltd
cltd
out
bound
lcall
cltd
cltd
mov
jae
in
jecxz
cltd
cltd
cltd
out
bound
sbb
cmp
inc
bound
and
jecxz
cltd
cltd
cltd
out
bound
push
lcall
cltd
cltd
in
and
and
out
sub
jecxz
gs
xor
and
out
and
pop
and
imul
mov
data16
data16
out
out
bound
push
cwtl
cltd
cltd
mov
data16
data16
mov
jge
cltd
cltd
jmp
mov
jmp
out
out
and
mov
data16
data16
data16
data16
data16
data16
data16
and
bound
jecxz
cltd
cltd
cltd
cltd
mov
mov
cmpsb
imul
mov
data16
jbe
mov
data16
data16
jecxz
cltd
cltd
cltd
cltd
mov
mov
and
in
and
mov
in
and
out
and
in
and
jecxz
cltd
cltd
cltd
cltd
mov
mov
cmpsb
imul
mov
data16
data16
out
and
in
and
in
out
data16
outsb
out
and
in
and
jecxz
cltd
cltd
cltd
cltd
mov
mov
xor
and
adc
and
out
and
in
and
jecxz
cltd
cltd
cltd
cltd
mov
mov
and
data16
push
data16
and
and
in
and
and
in
and
jecxz
cltd
cltd
cltd
cltd
mov
mov
jecxz
cltd
cltd
cltd
in
ss
cltd
cltd
imul
data16
data16
and
and
in
and
and
in
jecxz
cltd
cltd
cltd
out
and
in
and
jecxz
cltd
cltd
cltd
cltd
mov
mov
jecxz
cltd
cltd
cltd
data16
and
pop
jecxz
cltd
cltd
cltd
sbb
in
xor
sub
cmpsl
in
repz
cmpsl
xchg
cmpsl
xchg
bound
sahf
data16
and
data16
and
and
in
xor
and
out
and
in
xor
cltd
cltd
gs
out
and
in
and
jecxz
cltd
cltd
cltd
cltd
mov
mov
jecxz
cltd
cltd
cltd
cltd
data16
out
and
data16
data16
and
and
in
and
in
out
data16
outsb
out
and
in
and
jecxz
cltd
cltd
cltd
cltd
mov
mov
xor
in
jecxz
cltd
cltd
cltd
out
in
data16
cltd
data16
and
cltd
cltd
in
and
inc
in
jecxz
cltd
cltd
cltd
in
jle
jecxz
cltd
cltd
cltd
in
es
cltd
cltd
data16
jecxz
cltd
cltd
cltd
in
es
jecxz
cltd
cltd
cltd
mov
cltd
data16
jecxz
cltd
cltd
cltd
pop
jecxz
cltd
cltd
cltd
adc
jecxz
cltd
cltd
cltd
cltd
in
and
cltd
out
data16
and
in
and
jecxz
cltd
cltd
cltd
cltd
mov
mov
and
jecxz
cltd
cltd
cltd
cltd
mov
mov
and
data16
mov
data16
and
bound
jecxz
cltd
cltd
cltd
cltd
mov
mov
mov
nop
leave
ret
nop
push
mov
sub
nop
nop
call
mov
data16
es
and
and
cmp
jecxz
data16
xor
and
out
and
shll
pusha
out
and
shll
jb
and
and
and
outsb
out
mov
xchg
jmp
mov
jmp
xchg
addr16
jo
xor
fs
xchg
and
and
and
and
and
push
adc
and
xor
jbe
and
push
add
add
add
mov
leave
ret
nop
push
mov
sub
nop
nop
call
in
and
and
out
sub
inc
in
xor
and
out
and
pop
and
adc
and
lea
jge
add
nop
nop
movl
mov
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
sub
nop
nop
call
in
and
cltd
data16
and
dec
outsb
in
and
cltd
data16
and
dec
outsb
in
and
cltd
data16
and
dec
outsb
in
and
cltd
data16
and
cmp
and
bound
gs
cs
and
shll
nop
in
repnz
outsb
data16
xchg
push
jbe
xor
shll
xchg
in
repnz
push
data16
xchg
addr16
cmp
add
nop
nop
mov
add
pop
pop
ret
push
mov
sub
nop
nop
call
in
and
out
and
out
and
data16
sbb
outsb
imul
in
and
lcall
outsb
out
bound
jne
cltd
cltd
out
movsb
jmp
sahf
push
jbe
and
and
and
shll
xchg
es
and
out
and
and
and
ss
sahf
push
jbe
and
ss
and
push
and
jbe
and
into
add
nop
nop
leave
ret
push
mov
sub
nop
nop
call
in
and
out
and
out
and
ja
add
sbb
outsb
imul
in
and
lcall
outsb
out
bound
add
movsb
jmp
sahf
push
jbe
and
and
and
shll
xchg
cs
and
out
and
and
and
ss
jmp
sahf
push
jbe
and
jbe
and
push
and
jbe
and
into
add
nop
nop
leave
ret
nop
push
mov
push
sub
nop
nop
call
mov
data16
sahf
sbb
mov
data16
xchg
cltd
data16
xor
and
cmpsl
sub
xchg
and
jae
out
and
cs
xchg
cltd
lea
data16
fsubl
data16
data16
sahf
ja
add
and
mov
data16
xchg
sbb
and
outsb
in
and
and
mov
and
in
and
popa
mov
data16
xchg
cltd
lea
cmp
and
jae
out
jmp
sahf
cltd
data16
mov
data16
data16
data16
sahf
ja
pop
jmp
sub
inc
outsb
jmp
mov
and
in
and
bound
std
fwait
cltd
cltd
in
sub
xor
imul
sub
xor
and
jmp
sahf
in
lea
data16
sahf
sbb
and
out
xchg
cltd
data16
and
jmp
mov
and
in
and
bound
and
outsb
in
and
movsb
xor
and
cs
sub
and
movsb
xor
and
sub
and
lret
sahf
cltd
data16
call
nop
nop
add
pop
pop
ret
push
mov
sub
nop
nop
call
mov
data16
and
and
pop
in
sahf
popa
in
and
cmpsb
pop
and
lcall
in
out
and
in
and
and
and
in
and
bound
ret
lcall
data16
aad
je
add
nop
nop
leave
ret
push
mov
sub
nop
nop
call
mov
data16
and
and
pop
in
sahf
popa
in
and
cmpsb
pop
and
lcall
in
out
and
in
and
and
and
in
and
bound
lea
lcall
jne
add
nop
nop
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
add
push
mov
mov
push
sub
and
call
call
call
mov
lea
mov
call
sub
test
jne
jmp
inc
movzbl
cmp
sete
cmp
sete
or
test
jne
cmp
je
cmp
setne
xor
cmp
setne
test
je
lea
lea
test
je
inc
movzbl
cmp
setne
xor
cmp
setne
test
jne
jmp
lea
inc
movzbl
cmp
setne
xor
test
setne
test
jne
cmp
je
lea
cmp
sete
cmp
sete
jmp
mov
inc
movzbl
cmp
sete
cmp
sete
or
test
jne
movl
call
sub
testb
mov
je
movzwl
mov
xor
mov
mov
mov
call
sub
mov
leave
ret
inc
movzbl
jmp
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
jmp
lea
mov
mov
add
add
cmp
jb
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
fninit
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
mov
mov
test
je
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
mov
mov
lea
mov
test
jne
leave
ret
lea
push
mov
push
sub
mov
cmp
je
test
mov
je
mov
lea
call
dec
jne
movl
call
pop
pop
pop
ret
mov
xor
test
jmp
inc
mov
test
jne
jmp
lea
lea
push
mov
push
sub
mov
test
jne
mov
mov
mov
cmp
je
test
mov
je
nop
lea
call
dec
jne
movl
call
pop
pop
pop
ret
mov
xor
test
jmp
inc
mov
test
jne
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
pop
mov
jmp
mov
push
mov
mov
push
movzwl
sub
mov
lea
xor
mov
mov
call
mov
mov
sub
test
jne
jmp
add
dec
js
cmpb
jne
or
add
dec
jns
cmpl
jne
mov
mov
leave
ret
mov
mov
mov
mov
movl
mov
mov
call
mov
mov
mov
mov
jmp
lea
lea
push
mov
push
push
push
sub
mov
test
je
lea
pop
pop
pop
pop
ret
movl
mov
lea
movl
movl
mov
mov
movl
movl
mov
mov
movl
movl
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
movzwl
mov
mov
call
movzwl
sub
test
mov
jne
movl
call
test
mov
je
cld
mov
mov
mov
rep
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
and
cmp
sbb
and
add
add
mov
dec
jns
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movzwl
mov
lea
mov
call
movzwl
sub
test
jne
xor
test
jne
mov
call
mov
call
sub
movzwl
call
mov
mov
lea
mov
lea
mov
lea
pop
pop
pop
pop
ret
mov
call
cmp
mov
jne
jmp
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
add
cmp
jb
sub
orl
sub
jmp
sub
orl
mov
mov
mov
mov
jmp
nop
nop
nop
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
call
mov
add
mov
call
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
push
mov
pop
jmp
nop
nop
nop
nop
nop
nop
nop
jmp
aaa
inc
add
add
add
incl
add
dec
insb
xor
dec
and
js
xor
dec
ja
xor
add
add
inc
inc
inc
add
add
add
not
inc
sbb
arpl
sbb
andl
andl
andl
andl
andl
sbb
and
packsswb
sbb
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
test
cmp
repz
mov
and
push
fcoml
mov
jp
lret
adc
push
mov
fcmove
sahf
push
push
and
ud0
dec
mov
cli
mov
mov
ja
loope
pushf
out
jl
inc
pop
and
lock
repnz
push
loope
jns
repz
push
loope
jns
repz
pop
cld
sahf
xor
push
jle
andl
sub
add
fs
sbbb
arpl
sbb
andl
inc
or
xor
fs
sbbb
arpl
sbb
andl
andl
andl
andl
clc
and
test
fsubrs
sbbb
arpl
sbb
andl
mov
repz
pop
add
add
mov
and
int
cwtl
dec
arpl
sbb
mov
jns
inc
cltd
adcb
aad
sbb
iret
add
sahf
pushl
fbld
and
push
inc
into
or
xor
cwtl
mov
imul
rolb
mov
jecxz
fcomip
shrb
rcl
fucomi
rclb
sbbb
cld
mov
add
xchg
arpl
sbb
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
ljmp
decl
mov
sbb
icebp
les
fsubrl
movsb
xchg
mov
xchg
fs
andl
mov
shll
dec
out
inc
ss
pushw
aam
mov
std
std
outsl
sub
in
xor
xchg
add
or
mov
fwait
outsl
mov
js
xacquire
outsl
jns
push
sahf
add
xchg
mov
rcrl
sbb
jl
mov
lods
lods
daa
sub
lea
negb
and
aad
push
repnz
sbb
mov
cmp
xchg
pusha
sbb
mov
pop
aas
cli
sub
scas
ror
xchg
ja
jae
test
movsl
push
movsl
out
cmp
ja
or
push
outsb
sti
loopne
sti
xchg
das
orb
inc
xor
mov
xchg
lea
push
xor
inc
fbstp
out
cltd
jno
test
cmc
sahf
mov
xchg
xor
push
mov
repnz
jno
bound
xor
mov
lcall
push
xlat
push
or
movsl
cmpsl
xchg
arpl
leave
sarl
daa
pusha
aad
and
xchg
fsubrs
repnz
mov
push
xor
ljmp
and
fisubrl
cmpsb
mov
sub
fistpl
mov
cmp
or
int3
inc
push
inc
or
inc
ljmp
rorl
and
jo
out
ror
data16
popa
jmp
mul
inc
and
push
xchg
jecxz
lock
mull
xchg
pop
fs
cmp
pop
mov
out
and
nop
mov
xchg
addr16
push
mov
push
das
in
cwtl
into
adc
ret
xchg
or
testl
xchg
mov
insb
mov
lods
mov
arpl
pop
mov
fisttpl
xchg
sbb
icebp
push
pop
pop
lahf
repz
adc
arpl
cmp
mov
pop
loope
rolb
fcomi
pop
jmp
sub
loope
adc
sub
sub
xor
mov
repz
cmpsl
out
add
out
loopne
scas
dec
aaa
add
addr16
sbb
fistps
shll
stc
leave
call
mov
jg
cltd
cmp
fists
add
scas
fnstsw
mov
push
jge
push
test
es
pop
testl
or
xchg
or
sub
ret
ss
cmpsb
ss
in
andl
push
sbb
add
fwait
adc
outsl
lret
int3
xor
push
adc
inc
lods
mov
imul
cmp
loopne
shr
or
rcrl
jo
stos
or
inc
dec
mov
les
xor
sbb
cmpsb
and
and
lods
lds
into
aam
cmp
jmp
pop
scas
fdivrs
xor
xchg
or
test
rorb
in
jg
inc
mov
mov
and
adc
imul
push
pop
fmuls
ret
int
jl
lock
xor
xchg
out
add
sbb
xchg
sti
mov
mov
fnstsw
adc
jnp
jb
or
jae
cmpsb
cmp
sub
outsl
imulb
lea
das
mov
out
xlat
pop
jne
dec
cmc
mov
mov
loopne
ret
sbb
sbb
mov
mov
push
hlt
jecxz
test
fisubs
fs
dec
mov
in
out
hlt
les
fnsave
xchg
inc
leave
xchg
in
loopne
rcl
xchg
setp
lret
pop
cmp
xor
push
cmp
popf
insl
jg
popa
sar
mov
push
mov
jecxz
andb
sub
bound
cwtl
mov
xchg
push
iret
adc
push
pushw
std
inc
and
push
sub
sti
shll
or
adc
scas
add
data16
outsl
test
or
lcall
mov
call
mov
sub
pop
xchg
sbb
jno
sets
lds
imul
cwtl
mov
stos
fsubrs
sub
addb
xor
xor
push
in
fstp
inc
movsl
adc
inc
rorl
les
cmpsl
iret
cmp
cmpsl
push
loop
ficoml
mov
xchg
pop
dec
rcrb
xchg
sti
pop
jmp
sbb
sbb
adc
adc
push
ja
and
mov
or
lret
xchg
mov
add
int3
inc
and
in
sbb
ret
sub
outsl
pop
jb
add
test
cmp
lea
cmp
dec
outsl
imulb
loop
jne
push
js
movl
adc
insb
sbb
inc
jp
mov
lret
sbbl
repz
aas
out
out
les
sbb
out
mov
enter
jg
dec
cmp
testb
dec
and
rolb
outsb
or
lods
sub
sub
and
xlat
fists
rorb
cld
sbb
lret
out
or
call
and
fstp
jp
mov
mov
inc
add
in
sbbl
jmp
fcompl
mov
cld
sbb
fdecstp
add
cmpsb
arpl
inc
mov
cs
leave
scas
push
shlb
sbb
sbbl
das
add
push
mov
push
push
push
sarl
insl
xchg
mov
addl
and
pop
fcomip
sbb
push
repnz
pop
inc
pop
xchg
push
test
mov
call
fistps
sbb
xchg
add
imulb
test
sub
push
pop
leave
mov
or
pop
nop
jb
aaa
mov
pusha
std
xchg
inc
nop
fists
push
lahf
adc
xchg
arpl
test
push
add
in
out
sbb
dec
in
scas
push
jmp
loope
icebp
dec
sbb
xchg
adc
in
adc
arpl
sbb
jp
xor
sbbb
cmp
lods
mov
dec
xor
adc
dec
mov
sbb
mov
mov
iret
pop
cs
sbb
ja
jne
insl
stos
mov
add
cmp
xchg
jg
mov
insl
push
sub
jbe
xorb
xchg
mov
jl
cmc
pop
idivl
pop
nop
lock
mov
jl
cmc
pop
neg
inc
inc
add
sub
and
mov
fmulp
jl
mov
call
jge
or
xlat
mov
in
dec
popa
cmp
or
aaa
sbb
push
stos
mov
ds
shll
fwait
sti
popf
aas
movsl
sti
fdivs
xchg
inc
in
in
jp
insl
mov
lcall
mov
add
sbb
rcrl
dec
lods
ret
loop
pop
xchg
xchg
test
ret
fxch
push
inc
scas
push
or
shll
lea
or
push
adc
jnp
popa
fwait
lods
pop
ja
inc
insl
mov
add
jle
rolb
lea
sti
adc
adc
inc
insl
mov
jge
jl
imul
mov
imul
stc
aaa
ja
inc
insl
mov
mov
ja
inc
insl
mov
mov
adc
in
mov
repz
push
mov
cmp
cmp
in
in
inc
cmp
mov
mov
xchg
add
pop
data16
mov
es
mov
fwait
clc
inc
sbb
imul
movsb
dec
adc
imul
bound
pusha
sub
jp
shl
fmuls
mov
adc
stos
push
push
dec
adc
in
or
rolb
lea
aam
add
orb
hlt
repnz
push
inc
lcall
xchg
stc
and
arpl
dec
js
cmpsl
rcrl
data16
leave
arpl
jne
push
or
aam
pop
xchg
add
pop
data16
mov
sub
mov
lock
mov
rorl
loope
in
imul
loop
push
fs
dec
adc
imul
sbb
cmp
dec
lret
sub
mulb
jp
shl
push
mov
inc
inc
cmpsb
adc
enter
movsl
mov
fwait
xlat
test
cmp
lds
xchg
inc
or
mov
push
inc
lret
mov
popa
dec
mov
xchg
int
dec
into
hlt
rolb
push
dec
test
loope
in
imul
andl
mov
dec
xor
jns
xor
or
inc
push
and
dec
arpl
shl
ds
lret
mov
loope
mov
mov
inc
cltd
and
sbb
repz
adc
mov
push
fldcw
cmpsb
add
je
jnp
cmp
in
cmp
lock
lods
and
mov
add
and
cmp
stc
arpl
sbb
pop
cmpsl
rcrb
add
cwtl
fcoml
icebp
test
sbb
adc
adc
sbb
or
pop
inc
and
test
repz
sti
inc
add
pop
xor
adc
push
data16
jmp
xchg
sub
ret
arpl
adc
insl
testb
mov
lret
jmp
dec
jno
mov
dec
and
ljmp
and
jl
out
pusha
mov
insb
sahf
and
aad
inc
add
and
mov
jns
fcoms
sbb
cwtl
jmp
mov
inc
jmp
fnstenv
push
or
lret
sbb
mov
aaa
out
xchg
sub
mov
clc
dec
xchg
adcl
adc
andl
das
lahf
add
inc
lods
sti
insb
and
and
out
push
xlat
outsl
adc
out
mov
loop
dec
repnz
stos
xor
fcmovu
je
outsb
jecxz
pusha
pop
dec
lock
lret
push
xchg
push
xor
add
inc
mov
dec
loope
lods
sub
fs
gs
int3
pop
test
add
cmp
int3
fcompl
sub
sub
fists
push
daa
bound
pop
jno
andl
pop
js
test
mov
xor
pop
push
das
stos
xor
pop
lods
sarb
mov
mov
test
cmp
push
fistps
mov
add
aas
xchg
dec
lcall
inc
dec
pop
dec
out
add
cs
jmp
dec
xchg
mov
aaa
inc
stos
gs
push
repnz
test
sbb
sbb
cmp
lock
and
sub
xchg
cs
push
rorb
cmp
mov
mov
stos
jb
jg
mov
iret
imul
mov
das
jp
jb
mov
call
xchg
inc
sbb
push
add
mov
or
push
dec
inc
and
es
lea
mov
or
add
pusha
mov
inc
leave
mov
cmp
leave
sub
mov
jnp
adc
es
xor
fwait
es
mov
dec
add
sbb
fs
push
cmp
les
and
sti
test
pop
inc
adc
mov
mov
jecxz
mov
pushf
sbb
xchg
sbb
jo
pop
cld
outsl
addr16
lret
push
add
push
sbbl
sti
xor
xchg
xor
ljmp
in
sarl
mov
loope
in
sub
mov
sub
loope
push
cmp
adc
insl
ret
outsl
sbb
xor
out
pop
fs
jnp
cs
cmp
sub
and
xor
lock
inc
in
fnstsw
push
mov
ficoml
stc
mov
std
lcall
mov
and
out
loope
mov
dec
stos
stos
jo
out
cmpl
fwait
xorl
mov
sub
popf
sub
cli
movsb
inc
lret
cmp
cld
test
outsl
inc
or
mov
js
pusha
mov
dec
clc
mov
in
mov
or
es
aaa
sbb
fs
fadds
decl
add
mov
aas
sub
xchg
push
lea
leave
mov
cmpsl
js
call
mov
mov
adc
nop
sbb
lods
pop
adc
ja
push
dec
mov
lods
bnd
mov
pushf
cmp
jae
push
add
cwtl
fcoml
icebp
test
mov
jns
pop
dec
adc
inc
gs
adc
je
push
push
cmp
or
pop
push
into
gs
xchg
sub
sti
inc
add
pop
lret
or
lcall
xchg
push
orl
ret
mov
adc
insl
jmp
in
pop
xchg
xorb
lret
jmp
out
pop
leave
sahf
bound
fs
mov
and
jl
out
pusha
mov
insb
sahf
cmp
shrl
mov
fcoms
test
insl
push
and
arpl
lcall
or
stos
push
or
lret
cs
movsb
add
adc
cli
dec
pop
mov
dec
push
in
adc
andl
fildll
lods
sti
insb
and
dec
bound
jnp
jae
xlat
outsl
adc
out
mov
loop
dec
repnz
stos
xor
fcmovu
insl
jo
leave
lcall
push
xchg
push
jno
cmp
mov
dec
loope
lods
sub
add
pusha
dec
cmp
test
add
cmp
lahf
scas
jecxz
sub
add
xchg
adcb
ret
pop
jno
cmc
cmpb
das
test
mov
sarb
push
stos
xor
pop
lods
sarb
mov
mov
test
cmp
push
adc
jl,pt
sti
sarb
dec
test
xchg
decl
and
inc
dec
pop
dec
out
add
add
sub
pop
dec
xchg
mov
inc
sub
cli
iret
mov
jmp
sbb
or
pop
jle
out
push
das
dec
fs
cmpsb
loope
lcall
rorb
cmp
outsb
fwait
jns
cwtl
or
mov
jb
jg
mov
iret
imul
xchg
xchg
arpl
add
mov
call
and
mov
fscale
call
pop
mov
lret
les
dec
inc
and
es
idivb
cmp
mov
push
out
sub
adc
orl
sbb
push
jnp
adc
es
adc
es
mov
dec
add
sbb
fs
push
cmp
les
adc
mov
sti
test
pop
mov
es
inc
fdivrl
iret
push
andb
jo
pop
cld
outsl
addr16
int
repz
jl
rolb
sbbl
aam
aas
loopne
lock
ljmp
mov
inc
mov
std
loope
dec
std
lret
inc
fsubrl
cmpsl
loope
push
cmp
adc
insl
ret
outsl
sbb
xor
xchg
push
dec
xchg
insb
je
pusha
jnp
cs
cmp
mov
add
subb
in
fnstsw
inc
js
addr16
jbe
ficoml
stc
mov
sub
incl
outsl
mov
cmp
and
test
es
mov
out
xchg
jmp
and
mov
cmp
or
fwait
add
out
xchg
or
sub
cli
movsb
inc
lret
cmp
jmp
mov
cli
js
pusha
mov
dec
clc
fsts
neg
es
aaa
sbb
fs
mov
rcl
mov
mov
aas
dec
xchg
add
leave
mov
cmpsl
js
xchg
cmp
in
mov
cmp
mov
lcall
test
push
pop
pop
jae
sub
pop
lea
push
add
icebp
cli
inc
rcrb
dec
add
mov
in
push
pusha
jnp
lret
pop
stos
xchg
jecxz
aad
sub
sub
sahf
lock
pushf
iret
lds
jbe
xor
movsb
push
jbe
push
rcrl
adc
aad
cs
mov
addr16
lret
jl
inc
push
mov
sbb
add
sti
dec
push
xchg
sub
mov
dec
or
mov
aas
mov
pop
and
subl
add
mull
push
aam
and
adc
andl
andl
andl
andl
mov
ds
ss
shlb
ss
rclb
mov
loop
rclb
mov
loop
cs
mov
cwtl
pusha
int
ss
mov
cwtl
pusha
int
adc
bound
adc
bound
mov
enter
push
add
mov
idivb
cmpsl
pop
sbb
and
jmp
andl
andl
mov
ds
ss
rclb
mov
loop
cs
mov
cwtl
pusha
int
adc
bound
mov
enter
pop
lret
sub
inc
fs
sub
inc
add
jns
inc
or
subb
pop
int
or
xor
lods
mov
call
pop
icebp
mov
or
andl
andl
andl
andl
andl
andl
andl
andl
mov
mov
cmp
sbb
repz
aaa
adc
inc
adc
adc
aam
popa
faddl
pushf
push
rorb
pop
jge,pn
adc
insb
test
lea
insb
std
fimuls
jecxz
pop
ret
push
xor
cmp
ljmp
std
sti
xchg
fcoml
sahf
fwait
dec
mov
mov
std
js
scas
fdivp
jns
fadds
fcomi
ret
inc
sbb
inc
jp
add
xchg
pop
or
orl
push
and
push
addr16
divb
or
das
in
add
cmpb
mov
cmpb
cmc
add
sbb
inc
cmpsl
aaa
jge
rcll
je
adc
mov
daa
adc
orb
mov
adc
jp
mov
test
scas
lds
and
mov
es
sti
cmpsb
in
xchg
in
pop
sbb
dec
scas
movsb
inc
lret
push
popf
dec
mov
cmc
sbb
xor
int3
mov
cmp
notb
clc
jp
test
inc
shlb
scas
fwait
ss
jg
adc
les
int
sub
pop
repnz
mov
sbbb
enter
xchg
lds
adc
bound
in
jl
je
faddl
aas
in
push
mov
rorb
test
mov
mov
jle
dec
fcomp
cmpsl
xchg
pop
pop
push
mov
cmpb
and
out
mov
mov
lcall
dec
mov
test
sub
out
pop
mov
lahf
pop
icebp
push
sub
mov
add
xor
clc
add
imulb
pop
mov
cs
push
sahf
cld
or
inc
insl
dec
nop
jnp
in
mov
dec
mov
xchg
andb
xor
pop
mov
mov
shl
and
mov
repnz
ficoml
and
mov
xor
mov
jbe
add
mov
xchg
sbb
jmp
mov
mov
jne
or
push
cmp
add
movsb
outsl
inc
out
xchg
ret
cltd
test
mov
outsl
incb
jmp
repz
push
sbbb
dec
sbb
xchg
test
pop
or
sbb
adc
ficoml
ficomps
mov
fwait
popf
jne
pop
jo
mov
incl
xchg
mov
mov
imul
push
mov
sbb
mov
sbb
push
in
mov
cmp
je
push
sbb
mov
sbb
inc
and
push
push
sbb
andl
and
dec
xor
push
push
daa
pop
pop
dec
and
sti
jae
rol
push
in
sahf
sbb
popf
std
jmp
lds
mov
sub
int
mov
jnp
add
jnp
xchg
xchg
lds
push
add
lcall
outsl
sti
pop
js
mov
mov
xchg
and
mov
out
aaa
rcrb
test
mov
stos
shl
xchg
enter
jmp
push
lods
mov
jb
sahf
out
shlb
ljmp
lods
xlat
jns
nop
fbstp
ret
push
and
inc
fldt
int
ret
insb
test
add
xchg
adc
push
imul
mov
aam
into
push
cmp
push
cmpsb
jge
inc
jmp
cmp
and
push
xchg
ljmp
scas
inc
incb
add
or
jecxz
in
enter
xor
sbb
cmpsb
lret
arpl
in
sahf
pop
std
dec
test
arpl
sbb
cli
inc
sahf
movsb
repz
ds
orl
push
jle
pop
adc
add
and
xor
stos
jbe
xchg
sub
outsl
jnp
ret
rorl
jns
mov
pop
mov
test
sub
sti
pop
gs
cmc
inc
out
inc
in
les
mov
lock
xchg
inc
into
movsl
in
lret
inc
clc
or
pusha
cltd
or
adc
jnp
pop
or
sub
cmpsl
mov
aam
aaa
or
or
lcall
jne
into
or
jbe
shr
xor
and
outsb
fisttpll
jge
aad
push
sbb
adc
push
movsb
sub
xor
jo
sbb
daa
test
xor
repz
jno
dec
mov
fidivl
sahf
int3
ret
outsl
pop
jbe
out
loopne
fwait
ret
sbb
das
inc
repz
xor
mov
iret
mov
push
cmp
mov
shrl
inc
outsb
shrl
inc
push
test
das
push
test
das
push
test
das
push
test
das
dec
sbb
pushf
dec
les
out
dec
sbb
pushf
dec
les
out
dec
sbb
pushf
dec
les
out
dec
sbb
pushf
dec
les
out
out
scas
pop
sub
ret
inc
mov
scas
pop
sub
ret
inc
mov
scas
pop
sub
ret
inc
mov
scas
pop
sub
ret
inc
mov
scas
pop
sub
ret
inc
mov
scas
pop
sub
ret
inc
mov
scas
pop
sub
ret
inc
mov
scas
pop
sub
ret
inc
mov
dec
mov
mov
insl
aas
out
mov
insl
aas
out
mov
insl
aas
out
mov
insl
aas
out
mov
insl
aas
out
mov
insl
aas
out
mov
insl
aas
out
adc
jge
shrl
mov
lahf
pop
lock
shr
fists
push
or
push
or
cmpl
cmpl
pusha
and
rcl
arpl
pusha
and
rcl
arpl
pusha
and
rcl
arpl
pusha
and
rcl
arpl
ret
mov
sbb
adc
jne
jg
mov
sbb
adc
jne
jg
movsl
sub
outsl
movsl
sub
outsl
movsl
sub
outsl
movsl
sub
outsl
movsl
sub
outsl
movsl
sub
outsl
movsl
sub
outsl
movsl
sub
dec
mov
in
dec
mov
in
dec
mov
in
dec
mov
in
dec
mov
in
dec
mov
in
dec
mov
in
dec
mov
in
jmp
test
scas
ss
or
leave
push
push
jg
pop
test
cmpsl
jecxz
loope
mov
pop
jmp
jae
loop
out
mov
lock
jp
leave
xorb
fld
mov
jbe
jae
lret
enter
pop
lret
enter
popa
enter
mov
loop
enter
mov
pop
lock
pop
lock
shr
fists
in
xchg
fists
push
or
push
or
push
or
push
or
cmpl
cmpl
cmpl
cmpl
pusha
and
rcl
arpl
pusha
and
rcl
arpl
pusha
and
rcl
arpl
pusha
and
rcl
arpl
ret
mov
sbb
adc
jne
jg
mov
sbb
xor
mov
xchg
pop
addr16
xor
pop
cmp
jbe
ffree
xor
in
sub
mov
pop
cmp
loope
shr
xchg
roll
xor
shr
push
push
icebp
lds
sub
inc
fucom
outsb
adc
ss
mov
aaa
ljmp
shlb
les
cs
xchg
mov
inc
cltd
inc
xchg
arpl
sbb
mov
xchg
pop
addr16
ror
xor
out
push
lret
shll
or
stos
inc
mov
xor
mov
shll
add
sbb
push
mov
jne
mov
jns
push
mov
fidivrs
sub
lret
faddp
fnstcw
and
movsb
or
push
orl
mov
mov
mov
jno
cmp
mov
dec
pop
je
jecxz
cwtl
pop
xor
sub
movsb
repnz
cmc
outsb
fldz
sarb
insl
mov
and
es
mov
jnp
or
xor
pop
add
fists
enter
mov
push
add
push
mov
in
xchg
mov
or
pop
in
jne
add
cltd
mov
das
adc
push
xor
addl
ljmp
ds
div
lret
cld
and
xchg
mov
mov
sbb
push
cmp
mull
data16
rcrb
xchg
jnp
xchg
sbb
sti
out
jo
nop
cmp
cmp
lea
imul
push
mov
cmc
sbb
inc
out
cwtl
cs
and
test
ficomps
cmp
ss
ds
push
jl
jg
push
pusha
xor
arpl
xor
push
adc
movsl
scas
pop
pop
lock
pop
test
jg
xchg
cmp
dec
sub
stos
stc
sbb
mov
fdivrs
pop
popf
mov
adc
cwtl
mov
xchg
data16
testl
push
push
fwait
test
insl
jge
inc
xlat
pusha
or
orl
mov
push
cmp
dec
pusha
and
outsb
imul
fwait
and
inc
fucom
outsb
cwtl
push
test
arpl
loop
into
mov
or
imul
pop
jo
adc
push
jmp
lahf
push
iret
cmp
inc
aaa
xor
and
lods
sub
sbb
scas
xchg
std
loop
rcrl
xchg
bound
aaa
mov
test
cmc
lret
jno
iret
jae
les
loop
inc
xor
pusha
subl
lock
adc
sub
pop
dec
sbb
mov
jp
xchg
fadds
rorl
ret
pop
enter
nop
pusha
loope
and
jae
stos
push
rol
lcall
pop
cmp
sub
sub
xchg
jae
push
xor
imul
out
mov
xchg
pop
call
push
jbe
and
loopne
ret
jp
shrb
mov
pop
mov
clc
inc
jo
jnp
xchg
pusha
adc
sub
mov
xor
inc
cmp
int
test
div
int3
jb
movsl
mov
sbb
jl
les
inc
in
int3
mov
pop
ja
pop
adc
jns
dec
adc
aaa
icebp
sub
push
jo
scas
push
pop
imul
jbe
cmpsb
push
mov
pop
push
in
cld
and
jl
outsb
test
or
or
mov
add
adc
add
repnz
dec
push
pop
push
int3
push
sbb
repz
xor
jns
mov
stc
add
aas
iret
dec
inc
jbe
mov
xor
imul
inc
repz
das
jae
inc
fnstenv
out
mov
aas
in
push
mov
movsl
and
cmp
dec
xchg
mov
inc
cs
insb
fsubrs
or
push
leave
test
out
mov
cli
jne
out
or
lahf
add
push
lcall
addr16
jne
test
jp
add
or
cwtl
mov
icebp
sub
mov
arpl
pop
and
mov
adc
xchg
mov
mov
xor
push
scas
and
dec
and
xchg
sub
in
push
out
aam
mov
test
xlat
insl
adc
jge
repnz
or
stos
fimull
lods
xchg
outsb
dec
ja
jne
flds
iret
repnz
outsl
mov
shll
mov
std
fisubs
add
ud1
stos
xchg
lods
jp
movsb
lcall
ss
ss
mov
mov
repnz
mov
xchg
jmp
fmuls
fcomip
fs
pop
cmpsb
test
adc
xor
pop
mov
pop
pusha
gs
test
into
push
sarl
add
lea
xorl
addr16
adc
xlat
pop
pop
sbb
or
xlat
and
aad
lods
scas
fdivp
fs
scas
push
push
add
push
adc
sbb
push
mov
lret
mov
sbb
stos
clc
sti
sbb
ljmp
data16
fildll
mov
dec
or
insb
stc
in
std
push
lcall
pop
or
popf
ficoml
sub
stos
sbb
xchg
xchg
ljmp
add
in
pop
sbb
loopne
lret
mov
dec
out
ja
daa
pop
jae
mov
dec
hlt
pop
ficomps
mov
sub
adc
incb
push
rcl
out
test
push
and
jl,pt
dec
add
cwtl
xchg
cmp
jmp
loope
push
cmp
cmp
rcrb
jge
mov
add
xchg
aaa
dec
dec
cmp
movsl
sti
pop
test
cmp
push
inc
mov
popf
xor
bound
xchg
jns
lret
xor
xorb
stc
pop
push
dec
push
pop
add
mov
cmc
ljmp
or
push
or
pop
jnp
into
add
xor
xor
push
xor
mov
push
fdivrl
test
cld
lcall
ljmp
cmp
cld
ret
jmp
or
imul
push
xor
lcall
and
dec
test
leave
sbb
stos
push
xchg
pop
rcr
fisubrs
xor
dec
cld
stc
jne
xor
dec
cmp
movsb
mov
sbb
in
dec
jbe
stos
push
push
mov
mov
push
call
je
dec
mov
xchg
gs
in
jnp
xchg
and
jae
cmp
insb
dec
sbbb
add
add
inc
or
mov
mov
mov
fdivrp
dec
mov
pop
jp
and
mov
add
mov
iret
icebp
outsb
test
sub
push
push
jo
cmpsb
int3
aas
xchg
aaa
mov
mov
aas
cltd
es
cmpsl
repnz
pusha
pop
test
into
adc
dec
jecxz
js
add
sbb
mov
out
out
push
jl
add
jb
ret
push
push
je
out
xor
mov
or
cs
pusha
psubq
iret
and
fbstp
cmp
dec
mov
popf
imul
sub
popa
cmp
sbb
xchg
leave
idivb
push
das
mov
or
fwait
lahf
dec
fcompl
fwait
outsl
jl
fdivrs
jb
stos
mov
std
pop
pushf
idivl
rorl
pusha
mov
sbbb
xchg
mov
jb
rcrl
fwait
mov
pop
aaa
xlat
push
xchg
inc
aad
push
jns
loope
outsb
xchg
fldcw
mov
jns
scas
rolb
adc
sbb
test
ss
fs
cmp
shlb
aas
jecxz
or
pop
or
jp
dec
lcall
loopne
rorb
push
mov
insb
cli
pop
std
movsb
shll
and
sahf
pop
andb
movsl
ret
adc
cmp
xchg
sub
jg
lret
ja
mov
rorl
daa
or
jg
inc
mov
loopne
pop
jae
xchg
cli
xor
xchg
or
or
fiaddl
mov
imul
in
hlt
mov
int3
insl
push
in
aaa
pop
dec
ficomps
mov
xchg
sub
andl
lods
cld
sub
cmp
outsb
mov
xor
pop
add
push
int3
push
mov
or
lods
ffreep
leave
testb
fs
jmp
cli
cmp
xchg
ficompl
into
and
pop
cmpsl
aaa
mov
leave
clc
mov
icebp
cmpsl
loope
pop
shll
and
or
stc
jne
dec
and
loop
dec
inc
stos
je
xlat
xchg
js
push
dec
add
ret
shlb
pop
mov
call
add
mov
nop
gs
sub
add
or
arpl
push
aas
pop
fadd
xchg
jg
push
aam
out
cli
or
jp
shrl
lea
jge
rclb
test
add
sbb
sub
lret
dec
jge
addb
jp
mov
cltd
inc
lds
fsubrl
xchg
mov
push
and
lahf
mov
aaa
stos
jmp
xorb
or
pop
out
nop
lea
insb
arpl
mov
lcall
stos
lcall
stc
jg
aaa
and
rol
sbb
pusha
adc
pop
and
mov
mov
notb
sbb
jbe
cli
call
sar
jae
stc
stos
aas
adc
pusha
jmp
push
dec
pushf
jp
mov
notl
add
leave
lds
push
shrl
call
push
xor
push
cmp
pop
aas
add
cmp
push
cwtl
fwait
and
dec
adc
jb
fisttpll
sbb
inc
std
ja
insb
dec
and
jns
ss
xor
inc
iret
std
push
rcll
subl
lret
shll
push
dec
daa
mov
xchg
scas
dec
js
mov
shll
in
incb
call
xor
ljmp
xchg
or
dec
dec
pop
cltd
mov
xchg
aas
fisttpl
or
cmc
mov
stos
addl
sbb
mov
aas
sub
fsincos
es
pop
push
xchg
incl
jmp
jnp
roll
lret
and
stos
mov
dec
sbb
out
imul
jb
lret
dec
dec
or
dec
fiaddl
and
sbb
sub
adc
test
sub
push
sub
pop
inc
mov
mov
stos
das
lods
cmp
icebp
scas
pusha
mov
pop
dec
fsubs
ljmp
xchg
popl
push
xchg
dec
sub
push
ljmp
stos
add
int3
adc
cld
clc
int3
loope
push
xor
jg
stc
movsl
stos
divl
outsb
data16
imul
cmp
sub
std
aad
sub
adc
in
jl
xor
sub
lods
fcmovnu
inc
out
push
sbb
inc
cmp
lret
add
pop
scas
sub
mov
stc
mov
sub
in
jnp
pop
mov
jns
mov
adc
push
cmpb
or
dec
sarl
scas
andl
aad
xchg
andl
push
pop
test
mov
pop
cmp
mov
pmaxsw
or
adc
arpl
popl
sub
test
ja
push
leave
out
xchg
iret
sub
flds
jp
in
adc
xchg
jbe
inc
push
clc
nop
mov
lods
cld
and
in
and
mov
fdivp
aaa
push
out
add
xchg
and
inc
sub
in
jne
jno
xor
pop
pop
add
push
xchg
inc
mov
xor
lods
decl
cld
les
cld
out
sub
std
sub
aam
push
stc
cld
adc
pop
and
dec
int3
ret
aam
sub
andb
pop
mov
xchg
int3
cmpsl
fstl
and
addr16
imul
mov
xchg
imul
lods
pop
out
jge
push
push
fmull
pop
xchg
movups
push
pop
mov
shll
cmp
fwait
sbb
inc
inc
mov
sbb
push
imul
outsb
fsubs
bound
mov
subb
lcall
dec
cmp
imul
fwait
adc
stc
adc
and
or
mov
push
pushf
jae
mov
cmp
into
clc
adc
lock
aas
movsb
ja
les
or
setbe
pop
negl
cmpsb
mov
pop
lds
into
bound
aad
shrb
imul
xchg
sbb
mov
leave
xchg
push
xchg
dec
sub
das
push
rcrl
jmp
mov
pop
xor
add
adc
mov
lods
gs
and
in
jno
cmp
cli
mov
dec
jle
sbb
lret
pop
scas
inc
sbb
mov
jb
out
xchg
xchg
cmpsl
fiaddl
xor
pop
out
stc
clc
shl
inc
les
mov
fnstcw
int3
inc
outsl
popl
pop
adc
mov
imul
sbb
loop
or
push
lods
mov
jmp
xchg
jle
fwait
or
enter
ss
test
sti
rcrl
cld
mov
das
scas
test
ftst
cli
pop
test
cmp
xchg
outsl
fistpl
scas
mov
lahf
xchg
sbb
cltd
lahf
insl
cmpsb
in
and
aam
nopl
jne
sahf
pop
xlat
xchg
and
push
pop
cli
test
das
shrb
add
div
movb
cmp
jmp
les
inc
mov
push
mov
push
xchg
mov
repz
and
push
scas
fcoml
scas
xor
pop
push
jno
mov
mov
pop
sbb
into
divl
mov
jmp
push
and
mov
scas
xchg
jg
stc
std
mov
cld
mov
nop
cld
cmp
jg
ss
jecxz
fisttps
rcr
mov
test
les
out
push
sbb
or
fcmovbe
jp
repnz
jecxz
js
stos
xor
fimuls
insb
sub
mov
in
jecxz
mov
push
jl
push
pop
out
std
repz
jge
add
xchg
mov
div
cld
in
pop
mov
sub
fmuls
stc
mov
aaa
hlt
xchg
cmpsb
mull
pusha
outsl
jae
ljmp
js
testb
imul
cmp
fwait
inc
out
xorb
push
int3
clc
and
xchg
jecxz
out
xchg
imul
in
xor
add
xchg
fwait
xor
pop
repz
testl
push
in
xchg
mov
sbb
out
stos
mov
shlb
scas
popw
insb
aas
pop
mov
sbb
aas
mov
jae
add
dec
adc
insb
add
sti
push
dec
popf
cmp
inc
outsb
insl
mov
cltd
cmp
jp
rorl
xor
cli
xchg
sbb
mov
pop
rcll
cmp
sbb
add
add
mov
sahf
sbb
insb
aam
jp
push
lock
cmp
mov
pop
lds
push
call
out
aad
fcoms
cmp
pop
and
in
mov
jno
enter
dec
jns
and
mov
cltd
sbb
sti
dec
xlat
add
push
outsb
dec
test
flds
push
fwait
xor
inc
mov
push
imul
orb
pop
adc
adc
jg
pop
movsb
sub
pusha
arpl
mov
dec
lcall
das
inc
jbe
outsb
ret
bound
xchg
jge
or
repnz
ds
mov
cli
outsb
mov
mov
rcrb
arpl
and
mov
lea
nop
lea
cmc
push
test
scas
jo
cmp
fcompl
inc
aas
in
push
lock
mov
and
stos
pusha
mov
inc
cmpsl
fs
xor
fsub
xchg
jns
lods
xchg
jge
push
out
clc
movsl
ret
iret
jle
movsb
mov
inc
movsl
ja
fs
filds
jp
mov
push
lret
fdiv
mov
and
push
fisubrs
popf
into
xchg
pusha
mov
repz
mov
in
icebp
call
ret
jns
inc
pop
fadds
ret
movsb
ljmp
lcall
shrb
and
sub
xchg
push
stos
icebp
inc
negl
adc
repnz
pop
xor
push
jns
into
je
repnz
or
cld
add
leave
pop
mov
mov
xlat
cmpsl
rcrb
and
push
notb
leave
addr16
out
fdivl
icebp
and
test
rcrb
nop
js
stos
mov
mov
adc
add
mov
xchg
sub
adc
fistps
leave
dec
dec
jne
jmp
mov
in
sub
mov
jne
jg
scas
shll
xchg
je
orl
test
sti
and
adc
out
cltd
mov
push
dec
sahf
xor
imul
js
rcrl
mov
ja
into
sub
int
or
xchg
xor
add
push
jns
jmp
in
xor
and
push
int3
lahf
jne
dec
ja
mov
jns
pop
std
jnp
ficoms
stos
stos
and
fisubl
shl
push
push
shrb
daa
lds
sub
push
inc
jg
lea
pop
pop
sub
add
push
out
push
mov
mov
insl
sti
inc
pop
xor
enter
cmpsl
add
xchg
mov
jmp
pop
sahf
cmpsb
outsl
and
cmp
push
mov
dec
rolb
sarb
ljmp
jl
out
or
cld
xchg
jl
inc
add
pcmpgtb
mov
rcrl
ret
int3
dec
cmp
mov
mov
push
cmp
mov
jl
fs
mov
fwait
lds
in
test
adc
mov
cmp
mov
adc
adc
lea
fsts
sahf
cli
lret
mov
divl
or
in
movsb
shl
pop
int
insl
pop
cs
sbb
jp
std
dec
nop
jae
cld
or
pop
lret
std
jg
jo
cmp
imul
push
sbb
fwait
in
rol
imul
rcrb
xchg
fbstp
int3
inc
mov
jmp
mov
mov
ljmp
lret
stos
and
or
jno
mov
insl
int
pop
scas
cmp
or
or
add
nop
lret
sbb
imul
inc
add
stos
out
mov
pop
sub
aad
shl
cmp
sbb
dec
dec
notb
jle
int
out
push
fnstsw
mov
gs
xor
push
inc
dec
sub
mov
pusha
cmp
sub
adc
pop
xchg
inc
sbb
test
xor
mov
jne
scas
loope
inc
or
sti
stc
movsb
je
leave
cmpsb
pop
iret
push
xchg
push
inc
bound
out
cli
cmp
sub
sub
cmpsl
out
gs
pop
mov
dec
mov
mul
faddl
sbb
insl
js
iret
fnsave
sbb
inc
xchg
scas
sbb
jecxz
push
adc
push
repnz
js
sbb
jge
push
mov
sti
pop
std
sub
cli
fwait
mov
sbb
jle
or
add
jmp
lods
pop
sub
outsl
add
cmpsl
test
sub
into
xor
dec
jl
and
pop
sbb
xor
sbb
jmp
icebp
out
out
gs
nop
mov
jl
push
pop
mov
sub
lahf
cmc
jecxz
mov
inc
mov
clc
shll
sub
outsb
fsubrp
mov
int
mov
pop
into
pop
adc
pop
lret
mov
ss
ret
inc
sbb
and
adc
or
decb
movsb
add
jp
cltd
jnp
inc
ljmp
scas
adc
push
les
jb
pop
les
in
mov
cmp
das
mov
cmp
mov
xor
adc
imul
push
loope
in
hlt
xchg
stos
jg
out
pop
sarl
sbb
mov
test
push
cltd
lea
mov
fwait
lock
sahf
and
or
or
popa
adc
pop
movsb
call
aas
out
cmp
adc
mov
xor
ds
mov
fstps
movsl
mov
out
scas
mov
and
test
arpl
cli
test
push
imul
in
mov
addr16
in
popa
pusha
add
sbb
or
xor
add
mov
popf
in
shlb
xchg
mov
sub
lret
add
setns
jo
push
arpl
leave
pop
sub
lahf
stos
xchg
aaa
fsubrl
pushf
out
and
and
mov
sub
in
push
dec
mov
mov
xchg
mov
lods
outsl
fdivl
lds
or
shr
loope
jp
scas
aam
repnz
mov
pop
xchg
adc
xor
add
inc
adc
xchg
mov
popf
int
pop
or
pop
xchg
mov
xlat
call
scas
sub
arpl
imul
or
push
lods
shrb
add
movswl
or
push
lds
pop
rolb
into
btc
push
and
std
inc
test
mov
shl
or
int3
icebp
sbb
mov
cs
adc
icebp
sub
xchg
shlb
mov
sub
test
sub
mov
cmpsb
mov
mov
in
inc
inc
push
mov
mov
enter
sub
lret
inc
les
lock
cli
lahf
pop
or
jl,pn
mov
sub
frstor
xchg
sbb
xor
ja
mov
pop
inc
int3
lea
sahf
insb
loopne
mov
xor
and
dec
js
test
stos
mov
dec
imul
and
loop
cmp
and
daa
jmp
mov
imul
lea
sbb
jge
and
out
jnp
hlt
jbe
sub
das
adc
add
push
icebp
pop
pop
xchg
fs
mov
sbb
adc
sahf
popf
or
loope
out
or
or
cwtl
rorl
add
jb
or
mov
or
addr16
sub
cmpsb
call
loop
pop
lods
xor
icebp
mov
pop
shr
push
aad
mov
cmp
mov
add
mov
jne
cli
jecxz
add
xor
mov
push
insl
dec
outsb
add
test
sub
add
dec
jl
daa
cmp
dec
cmp
adc
in
loop
test
adc
aam
mov
dec
jmp
mov
mov
addl
nop
jp
mov
push
push
or
jle
loopne
insb
jno
mov
mov
ljmp
and
pop
rcrb
mov
pop
push
push
dec
jns
adc
mov
mov
fistpll
leave
movl
pop
cmc
data16
mov
pop
ljmp
xorb
adc
pop
pop
push
and
cltd
mov
jno
repnz
pop
push
repz
js
cmp
rcrb
loopne
test
lock
and
sbb
enter
inc
fdivs
fistps
dec
sbb
inc
vcvttpd2dqy
push
sub
cmpb
push
mov
mov
jge
or
jmp
insl
xor
adc
int3
in
cmpsb
aam
lods
hlt
hlt
cmp
movb
in
cmp
jnp
cmp
push
xchg
mov
dec
add
and
in
int
push
scas
cmp
inc
or
cwtl
cld
outsl
aad
sbb
and
and
test
das
lar
inc
push
mov
push
test
mov
sub
cmp
or
mov
les
aad
add
test
cld
sub
sahf
loopne
mov
jb
inc
and
addr16
xor
data16
test
in
add
cmp
pop
enter
pop
outsb
roll
pop
fwait
scas
bound
mov
popa
mov
pushw
arpl
jno
inc
xchg
xchg
pop
cli
scas
stos
inc
lock
loopne
shll
xor
inc
arpl
popa
sbb
rclb
cld
or
xchg
fucomp
mov
pushf
lret
xor
aad
lea
out
and
sub
add
in
out
jecxz
lods
mov
and
xor
inc
in
jmp
sbb
scas
cmp
fldl
lods
outsl
mov
aaa
jge
popf
nop
mov
pop
adc
lret
xchg
or
sahf
sbb
dec
ret
jns
fdivrs
or
sub
mov
sub
fimull
out
fiaddl
ljmp
mov
push
push
sti
mov
leave
ja
call
push
ss
hlt
cmp
scas
nop
and
mov
adc
cmp
inc
mov
icebp
xchg
or
rol
jmp
test
mov
push
lds
es
daa
pop
fwait
test
jp
int3
mov
rcrb
mov
pop
rolb
add
mov
lods
addl
cltd
cmp
mov
fadds
das
shlb
mov
add
addb
sub
sbb
jnp
push
xor
stos
and
cmpl
out
in
insl
fmuls
int3
daa
setns
inc
sub
test
mov
pusha
mov
dec
mov
sbb
in
mov
or
inc
bound
aad
mov
das
pusha
call
scas
push
xlat
push
sbb
or
lret
adc
and
sti
lahf
and
or
mov
repz
push
mov
pop
cmp
imul
repz
lahf
hlt
pop
push
fistpll
pop
pop
sub
xchg
leave
jno
adcb
ficoms
test
nop
leave
loop
outsl
or
lahf
lds
filds
jle
aam
jl
sbb
je
out
sub
cltd
rclb
sbb
cmp
adc
jl
and
sub
xchg
out
mov
xor
dec
pusha
xor
mov
xor
pop
and
jno
mov
add
fisttpll
iret
std
repz
icebp
mov
lret
dec
popf
mov
movsb
ret
int3
dec
icebp
out
cmpsl
adc
enter
mov
aad
insl
pop
cmpsb
cmpsl
xchg
jmp
leave
lods
mov
sbb
sub
sub
std
inc
lahf
pop
cmp
mov
out
push
call
push
shll
movsb
movsl
jecxz
outsb
out
or
out
cmp
add
divb
inc
aam
xchg
inc
mov
stos
mov
adc
pop
imul
pop
fisubl
cmpsb
fs
scas
cmp
rcrl
mov
rcll
es
jae
and
mov
jns
movsb
inc
sti
imul
mov
fstpl
jmp
cltd
lcall
outsl
outsb
push
mull
jmp
jne
sbb
pop
pop
mov
push
sbb
test
jne
pop
xchg
pop
std
daa
cmpsl
jbe
cli
mov
cmpsl
data16
pushf
pop
lahf
inc
jb
lret
in
data16
sbb
or
ljmp
ljmp
add
decb
add
pop
hlt
sbb
sub
pusha
outsb
dec
loopne
mov
add
inc
push
sbb
xlat
push
pop
sbb
ret
das
or
xchg
test
fistpl
rcl
sub
sbb
mov
xchg
jge
sbb
mov
fstl
sahf
mov
scas
arpl
mov
movsl
aas
mov
cltd
call
adc
push
fildll
jnp
ret
cmpsl
insl
scas
xor
push
les
mov
test
loope
adc
mov
jle
imul
xlat
lcall
mov
jo
fwait
jg
jge
gs
dec
dec
jo
out
out
xor
mov
mov
adc
fnsave
pop
and
add
push
outsl
mov
shlb
mov
outsb
mov
repz
cld
pop
mov
bound
fisubrs
xchg
ljmp
inc
inc
or
pop
xor
push
iret
mov
rclb
outsb
cmp
xchg
mov
es
sub
repnz
imul
dec
mov
pop
into
dec
jmp
ds
lods
inc
mov
in
std
xor
popa
stos
in
jle
or
and
and
push
jbe
mov
fstpt
adc
std
mov
lock
pop
dec
jne
in
jnp
xlat
pop
inc
enter
out
ficomps
jmp
cli
movsb
push
frstor
jnp
leave
test
fmul
sbb
jns
js
daa
mov
pop
imul
icebp
ja
cmc
push
mov
rorb
aad
imul
loop
xor
dec
sub
adc
push
mov
adc
sub
mov
imul
mov
or
jmp
ds
sub
cld
add
cmp
insb
push
push
test
mov
mov
popf
pop
sbb
push
dec
sbb
cltd
stc
inc
mov
fs
cmc
enter
divb
sub
xlat
out
xor
xchg
out
add
push
cmp
gs
or
inc
sub
mov
xlat
fidivl
mov
xchg
in
fdivr
aaa
ss
push
negl
lahf
pop
add
insb
push
push
mul
popa
pop
int
stos
xor
test
das
add
int3
sahf
jns
push
mov
jae
push
int3
scas
jecxz
pop
loop
mov
pop
int
loop
xor
aad
pop
orb
fs
jns
inc
push
push
lret
mov
rclb
loopne
je
popl
mov
aaa
das
lock
mov
inc
fwait
and
push
mov
xor
mov
inc
div
aas
mov
ja
and
cmpsb
std
add
xchg
push
push
push
pop
fwait
mov
add
pop
xor
movsl
jg
test
cmp
add
insl
inc
pop
stos
pop
lods
mov
mov
xor
cmc
jno
movsl
sub
jmp
cmp
pushf
scas
pop
call
and
es
push
push
jno
cmp
test
or
push
inc
iret
fnstcw
popa
es
xchg
push
mov
mov
test
stos
in
pushf
lret
loope
iret
lods
sti
mov
cmpsl
mov
cmpsl
sbb
mov
sarl
dec
dec
je
push
adc
add
cmp
dec
cmp
js
pop
pop
jae
pop
in
bound
ljmp
xor
and
add
fs
stos
rorl
lock
push
mov
inc
ret
add
fnsave
add
into
pop
sarb
mov
int3
inc
daa
jo
fsts
mov
mov
bound
push
sbbl
lret
mov
inc
dec
aam
aaa
and
or
inc
inc
mov
pop
imull
mov
imul
push
sbb
hlt
jb
jno
fwait
push
push
or
xchg
xor
orb
loopne
fs
mov
insb
jno
xor
outsb
or
push
fmul
cwtl
mov
je
mov
bound
xchg
clc
movsb
mov
outsb
and
xchg
aaa
xor
mov
xor
adc
jl
cld
xchg
imull
out
mov
sbb
mov
or
mov
data16
dec
repz
cmp
jl
aam
jno
sbb
sarl
inc
xchg
cmc
jmp
pop
cmp
or
and
pop
xchg
pop
jmp
lods
xchg
lahf
lahf
jl
leave
addr16
jl
ljmp
mov
pop
ds
sub
call
mov
hlt
jge
jo
xchg
jae
fwait
jmp
pop
push
nop
fldenv
and
test
dec
cli
movsl
adc
xor
inc
push
popf
mov
xor
je
mov
sub
fsubp
push
xor
push
nop
jmp
cwtl
jno
push
ja
outsb
aam
ja
in
fbld
adc
xorl
mov
xchg
int3
mov
cmp
cmc
aad
inc
mov
pop
fs
lds
lods
cli
dec
test
fld
cmp
add
sub
pusha
cld
mov
loope
pop
insb
push
inc
jmp
inc
in
cld
sbb
adc
jo
adcb
jno
outsb
sub
pop
aam
in
outsb
mov
ljmp
into
cmp
adc
inc
xchg
stos
loop
or
pop
mov
xor
mov
jl
repnz
adc
dec
push
jne
inc
jae
inc
jecxz
xor
push
ret
pop
in
ret
mov
orl
popa
movsl
loope
fnstcw
sub
outsb
lds
dec
mov
nop
stos
iret
inc
jecxz
mov
push
and
jne
and
imul
out
gs
pushf
mov
ret
ror
aas
lods
icebp
lds
mov
mov
jno
stc
xchg
in
sahf
mov
ret
pop
cmp
sbb
inc
loope
or
push
mov
inc
stos
lea
fs
das
sbb
test
mov
imul
into
rol
cltd
imul
cmp
scas
loopne
inc
lock
push
pop
sbb
fisubrl
and
inc
data16
pop
sub
test
orb
sbb
das
inc
inc
ret
xor
add
scas
data16
daa
jl
mov
aas
jb
adc
push
mov
cmpsl
addr16
pop
rorb
or
fs
mov
loopne
loop
mov
dec
sti
and
and
in
test
dec
pop
jno
in
ret
mov
int
or
sub
fwait
idiv
fsubr
pop
in
jge
incl
jl
sbb
xchg
loop
fnstcw
mov
test
xlat
mov
cmpsb
sti
fstps
out
mov
push
fmuls
add
push
jns
aam
stc
cmp
ja
pop
mov
jbe
mov
mov
sahf
ds
shl
push
push
push
and
pop
lds
pop
movsl
mov
xor
push
mov
push
jnp
xchg
rol
lea
pop
jg
cmp
ss
repnz
loopne
scas
sbb
shlb
mov
cmp
inc
aam
roll
fbld
ljmp
sahf
pop
dec
xchg
xchg
mov
jmpw
push
pop
fwait
fwait
jb
xchg
mov
jl
and
mov
pop
jns
daa
mov
clc
dec
jecxz
jge
inc
xchg
cmpsl
int3
adc
enter
hlt
aam
cli
ja
mov
jecxz
mov
sub
out
aam
add
getsec
les
inc
sub
sbb
dec
shl
or
pop
mov
mov
sahf
addr16
insl
push
dec
mov
mov
repnz
sar
sbb
mov
das
jl
jb
cltd
mov
jns
mov
jbe
xchg
sub
movsb
add
mov
sub
cmp
jg
outsb
inc
scas
test
pusha
or
dec
jecxz
xchg
inc
adc
call
sub
ret
xor
arpl
rolb
cld
sarb
cmpl
scas
lock
jae
pushf
call
adc
scas
inc
xor
cmp
mov
mov
push
push
lahf
test
scas
mov
sbb
mov
dec
push
sbb
flds
rcrl
add
int
popl
repnz
add
sub
test
mov
fnstsw
or
call
mov
adc
outsl
jbe
xor
jo
cli
icebp
add
jne
adc
insl
cli
loope
or
in
and
addr16
mov
ja
int3
fldcw
add
push
or
inc
and
push
fs
lds
ljmp
jb
sub
and
pop
xlat
inc
dec
pop
push
and
subb
xlat
hlt
insl
xor
loopne
mov
aam
push
xor
je
jae
or
leave
in
fadd
test
repnz
ljmp
dec
incb
ljmp
push
lock
adc
mov
pop
sub
jmp
cmc
out
repz
cmp
lock
push
rol
cmp
inc
xchg
out
dec
jle
daa
push
dec
or
mov
mov
mov
test
xchg
pop
les
out
bound
jae
test
ljmp
jg
push
push
xchg
cmp
mov
xchg
mov
and
into
jl
jb
adc
in
in
dec
mov
jecxz
push
or
mov
xchg
loope
icebp
je
xchg
scas
dec
movsb
xchg
mov
xlat
enter
xor
push
add
fstps
sub
aam
in
or
out
mov
jp
push
push
cmc
addr16
cmp
inc
scas
notl
xlat
jmp
dec
dec
jle
insl
mov
pop
pushf
pop
push
stc
scas
push
sarl
stos
daa
mov
addb
or
insl
inc
push
and
xchg
insl
cmpxchg
adc
inc
daa
loop
jo
inc
pop
xlat
fisttps
jecxz
lret
xchg
shll
test
xor
dec
mov
mov
cli
mov
sub
mov
adc
sub
or
lds
and
xchg
test
xor
test
push
push
jns
ret
or
dec
cmp
fldl
jecxz
jmp
jp
clc
outsb
mov
jne
iret
dec
and
push
dec
dec
cli
ja
leave
push
push
aas
or
aaa
dec
idivb
lcall
out
xorl
cmp
insb
jmp
or
sub
cmpsl
pop
dec
mov
push
daa
push
jbe
inc
inc
imull
xchg
sbb
dec
pusha
fs
push
and
out
filds
jae
in
outsl
xchg
ja
push
test
in
jne
stc
cmp
les
fsubl
inc
jo
sub
lods
repz
cltd
sahf
and
pop
xchg
mov
adc
cmp
sub
adc
inc
pop
test
and
out
and
aam
xorl
or
out
pop
mov
inc
dec
movsl
add
pop
mov
addl
mov
fnstsw
loopne
sarb
push
mov
movsb
mov
mov
cmp
cli
aam
and
inc
mov
mov
and
in
aas
mov
ror
cmp
shlb
jmp
mov
add
cltd
mov
mov
push
inc
xlat
pop
dec
cwtl
test
jge
fnstsw
xor
xor
iret
test
xor
lods
pop
push
iret
popa
mov
jge
xchg
std
cmp
sbbb
adcb
lret
xor
aas
mov
popa
mov
adc
push
rclb
mov
cmp
ret
out
xchg
ror
imul
test
in
ret
pop
cmp
aam
nop
scas
aas
jge
sub
mov
jbe
mov
jne
fmuls
add
pop
xchg
dec
add
sub
int3
scas
lods
insl
std
aaa
rcrl
mov
out
lret
call
xor
adc
std
test
scas
test
jae,pt
scas
lret
addr16
jae
xor
inc
push
test
pop
cwtl
lds
or
cld
shlb
shl
lds
xorb
jg
adc
mov
das
icebp
pop
call
sub
repnz
mov
fists
ss
or
gs
scas
xchg
bound
adc
mov
and
pop
sbb
inc
fucomi
fstl
xor
dec
subl
mov
pop
pushf
mov
in
cmpl
out
in
fists
dec
je
inc
sub
pop
and
nop
rcrl
and
jmp
mov
lds
lds
add
icebp
pop
mov
add
sbb
sub
lock
mov
and
les
or
push
inc
dec
add
and
imul
sub
mov
mov
scas
pop
fwait
lock
add
leave
dec
mov
xchg
fstpl
mov
dec
rcr
or
int3
movsl
xchg
jge
cli
mov
pop
adc
lock
lret
arpl
cmp
sbb
outsb
cmpsb
lretw
movsb
icebp
idivb
inc
push
push
repnz
pop
mov
jge
ds
call
mov
test
mov
jae
xor
enter
push
or
sub
ljmp
shrl
inc
adc
adc
cli
mov
dec
pop
fadds
rol
dec
lret
pusha
and
aam
mov
dec
pop
lret
sub
cmc
adc
stc
leave
iret
inc
pop
in
idivb
mov
in
pop
fistps
fmulp
pop
push
xchg
notl
and
out
jnp
stc
lods
jecxz
xor
ret
jo
aam
xchg
arpl
inc
outsl
add
add
mov
cmp
insb
jbe,pn
idivb
add
ret
push
lahf
outsb
xchg
sub
add
inc
lahf
sub
subl
jmp
insb
fisubrs
cmp
push
dec
mov
jmp
jb
add
dec
scas
sbb
fidivrl
in
cmp
in
iret
int3
jo
stos
lss
mov
cmp
in
xor
lods
xor
mov
mov
dec
pop
lea
dec
mov
lods
and
xorl
in
dec
inc
inc
push
push
ss
pop
rclb
lds
jb
adc
arpl
movb
testl
mov
xchg
cli
cwtl
mov
fcoml
test
std
push
cmp
mov
lret
or
mov
rol
add
movsl
or
adc
cmp
repz
xchg
ret
add
xor
lock
pop
fbld
adc
std
pop
decl
cld
jl
fnstsw
fdivp
mov
cwtl
out
dec
popa
lret
push
test
push
xor
pop
js
inc
fadds
in
jo
out
in
or
pop
cli
xor
push
and
testb
cmp
insb
ret
push
mov
and
mov
sbb
insl
or
dec
enter
cmpsb
jo
add
xor
or
lods
xor
adc
xor
jmp
loop
out
sbb
sbb
pusha
push
push
pop
pop
sbb
cwtl
dec
and
mov
mov
add
inc
mov
pop
adc
jne
addr16
shlb
mov
movsb
sub
or
out
push
icebp
andb
mov
and
mov
cli
roll
ljmp
cs
dec
or
push
faddl
jns
xor
insl
insb
sahf
hlt
sbb
sbb
xchg
out
repnz
mov
popf
inc
loop
mov
xor
sub
xchg
mov
add
das
mov
pop
jns
enter
xchg
xchg
sbb
fsts
push
je
or
pop
xchg
pop
mov
mov
stc
daa
in
fidivrl
mov
mov
enter
ss
push
xor
mov
add
pop
adc
jbe
popa
pop
sub
popa
mov
mov
lock
mov
adc
mov
sahf
ljmp
popf
or
or
adc
popa
es
scas
pusha
and
pop
lret
divl
inc
sbb
sbbl
aaa
adc
stos
xor
push
fxch
aam
repnz
fs
mov
fidivrs
and
data16
push
pop
fwait
xchg
mov
cli
adc
out
add
push
test
pop
jp
pop
pop
gs
enter
imul
cmpsb
out
mov
xchg
mov
mov
push
jbe
outsb
jecxz
or
jbe
inc
add
pop
lds
xor
mov
sbb
mov
mov
in
lret
push
fsubp
lret
mov
out
mov
pop
inc
jbe
aaa
adc
or
adc
sub
xor
mov
mov
out
pop
out
loopne
test
sbbb
push
add
fldt
and
das
imul
fcoml
cwtl
insb
push
xchg
hlt
js
popa
xlat
dec
mov
jmp
aaa
pop
adc
add
insb
mov
adc
mov
xor
and
push
call
sub
cltd
std
cwtl
cmp
mov
scas
mov
ret
mov
fdivl
enter
insl
call
inc
and
lret
cmpsl
cmp
imul
sub
pop
xchg
fwait
das
or
push
lret
addr16
pop
adc
add
pop
xchg
mov
adcl
rolb
or
dec
sarl
cmc
cmc
and
xor
mov
orb
imul
daa
pop
adc
xor
loope
cwtl
mov
xchg
add
pusha
mov
into
out
lock
fs
shlb
and
jl
jmp
inc
mov
fnsave
cmc
ds
mov
jbe
cmpb
xor
dec
lea
scas
mov
cmovns
pushf
push
cs
pop
push
pusha
cmp
pop
mov
test
add
jecxz
addr16
jle
orb
adc
das
sub
mov
sarl
int3
repz
jae
sbbl
inc
aam
leave
or
or
xor
and
popa
pop
test
and
push
testb
cmpsl
sub
subb
mov
mov
sub
cmp
inc
xor
inc
sbb
fisubrl
cld
pop
cltd
je
fiadds
movsb
test
xor
sbb
rol
dec
int3
popf
add
or
mov
fsts
movsl
mov
seta
negb
and
mov
sti
inc
in
or
popf
xlat
sub
mov
add
push
adcb
mov
imul
movups
mov
add
add
adc
mov
cmpsl
mov
inc
faddl
lods
lahf
cmp
mov
and
test
lods
pop
mov
pop
mov
sbb
loopne
cmp
bound
lcall
fnstsw
mov
dec
mov
jle
dec
jne
mov
mov
xchg
pop
test
fwait
mov
xchg
cltd
stos
or
and
cld
dec
mov
dec
mov
and
sub
pushf
jno
mov
je
or
jp
es
dec
sbb
fwait
bound
mov
aaa
or
insb
stc
loop
int3
push
dec
jle
sbb
push
rclb
adc
int
and
out
xor
mov
cs
inc
xor
loop
jmp
and
dec
mov
cs
lcall
ja
in
sub
cmc
aad
mov
test
sar
dec
mov
cmpsl
sbb
shl
xchg
negl
enter
cmpsb
cmpsb
inc
movsl
test
hlt
loopne
pushf
pusha
hlt
out
sbb
lea
inc
adc
sbb
and
aad
mov
aas
sub
call
jo
jo
ret
in
shl
repz
cmp
pop
add
ja
push
add
mov
in
gs
or
sub
dec
xor
push
insb
cmp
xchg
mov
sbb
mov
stc
pop
jp
inc
pushf
stos
mov
in
movsb
jb
sti
push
xorl
xchg
xchg
ljmp
ficoml
in
mov
jge
mov
hlt
test
mov
outsl
jbe
stos
cmc
sub
adc
xchg
lret
mov
mov
dec
std
lock
lea
mov
cwtl
out
fidivrs
sbb
leave
jp
pop
in
or
bound
adc
repnz
jae
pusha
mov
stos
int
xlat
mov
js
mov
lahf
and
adc
aam
cmpsl
outsb
jl
mov
fldcw
lods
scas
jl
pop
in
adc
cwtl
cltd
xchg
jno
mov
push
xchg
cmpsl
sbb
lret
or
cmp
ja
jge
push
sbb
push
xor
sub
cmc
movsl
cli
xchg
hlt
dec
dec
jecxz
and
stc
es
sub
out
sahf
jp
add
and
outsb
adc
enter
int3
jl
sub
mov
cmc
inc
jp
stos
pusha
dec
rcll
push
or
mov
arpl
addl
in
filds
jbe
clc
or
pop
ja
and
pop
push
add
dec
sub
jmp
les
lea
andl
or
mov
es
sbb
add
je
orb
xchg
loope
xchg
adc
adc
cmp
jp
xor
pop
inc
cmp
test
fimuls
fmuls
jbe
add
jl
outsb
les
push
ret
test
inc
push
sub
das
xlat
jbe
jb
xchg
cmp
int3
dec
fcomps
fiadds
mov
cwtl
iret
dec
mov
dec
mov
clc
xchg
enter
cmp
cmp
cld
cmpl
jle
push
out
mov
inc
orb
adc
jmp
cmp
mov
add
jns
filds
fldcw
aaa
lods
mov
call
dec
mov
push
int3
push
stc
testl
xlat
fildl
sarl
sahf
cmp
xchg
ljmp
jb
xchg
loop
sub
shlb
mov
int3
add
push
sub
sub
dec
push
in
or
mov
lods
int3
add
icebp
add
cli
ds
icebp
xorl
aaa
roll
jecxz
inc
popa
mov
insb
pop
dec
movsl
cmc
movsl
subps
adc
push
lret
sti
subl
adc
inc
mov
pop
ret
and
mov
xor
mov
pop
loope
mov
push
lcall
arpl
push
imul
cmp
and
adc
loope
into
addr16
popa
sub
dec
mov
mov
jae
push
aad
test
and
pop
cmp
shll
xor
lret
xor
pop
outsl
jno
sbb
push
pop
arpl
sbb
out
add
insl
sub
loope
push
lret
iret
pop
je
jno
popf
in
add
fisubl
pop
adc
dec
jnp
pop
jmp
xor
push
xor
ret
repz
scas
pushw
push
or
adc
mov
pop
lds
fadds
jge
arpl
or
testb
adc
loope
pop
sbb
bound
sub
jmp
in
imul
inc
movl
sti
loopne
mov
rorl
js
je
push
js
je
aam
push
test
fwait
adc
cmc
or
xchg
in
xchg
testb
mov
mov
icebp
repz
mov
inc
popf
jecxz
push
stc
mov
in
inc
lahf
sub
imul
adcl
sbb
fwait
into
out
mov
jge
insb
mov
add
sub
mov
mov
pushf
scas
cld
cmpb
stos
dec
test
xor
jno
mov
pop
cmp
sbb
stos
cmp
in
dec
mov
cli
adc
sbb
xchg
lret
stos
mov
xor
test
adc
jmp
cmpsl
ja
int
pushf
cmp
jnp
lods
xchg
pop
flds
fdivrl
pop
ret
jmp
stc
cmp
test
pop
xchg
les
movsb
in
inc
adcb
fisubl
out
sub
out
mov
inc
test
clc
arpl
sbb
andl
andl
andl
cli
pusha
adc
fistps
fwait
mov
mov
mov
xor
sbb
std
sbb
call
mov
inc
xchg
fidivs
cmpsl
aad
insl
push
xchg
popf
add
outsl
scas
pop
cmp
jp
mov
mov
inc
xchg
fidivs
cmpsl
aad
insl
push
xchg
popf
out
enter
push
fstl
xor
fs
sbbb
arpl
sbb
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
xor
jge
add
mov
add
mov
add
mov
add
mov
add
mov
add
loope
mov
lods
xchg
addr16
dec
rorl
mov
mov
add
mov
add
mov
add
jl
sbb
mov
add
mov
add
mov
add
arpl
sbb
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
inc
inc
pop
push
icebp
fs
scas
cld
cmpb
stos
pushf
scas
cld
cmpb
stos
aas
push
ret
xchg
pushf
scas
cld
cmpb
stos
pushf
scas
cld
cmpb
stos
pushf
scas
cld
cmpb
stos
pushf
scas
cld
cmpb
stos
pushf
scas
cld
cmpb
stos
pushf
scas
cld
cmpb
stos
pushf
scas
cld
cmpb
stos
aas
push
ret
xchg
arpl
sbb
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
inc
sbb
sbb
int3
mov
mov
dec
and
inc
dec
push
dec
add
dec
je,pn
inc
decb
sbb
das
mov
addb
pushf
orb
loopne
or
gs
jns
hlt
roll
xchg
cmpsb
sbb
rol
std
xor
popf
pop
xor
inc
lock
push
leave
mov
aad
pop
cld
mov
pop
lods
jmp
pop
or
adc
mov
dec
std
mov
xorl
add
adc
sub
jle
sub
push
out
mov
cmp
data16
rol
aaa
xor
aas
pop
popa
or
jecxz
mov
push
movl
xchg
xchg
int
repnz
xor
adc
xor
jmp
jbe
jmp
loopne
or
xor
jl
call
mov
ror
mov
insb
fisubs
shrb
fwait
or
cmp
push
push
arpl
in
repz
mov
cmp
add
into
adc
in
pusha
xor
iret
popf
mov
loope
mov
cmc
cwtl
mov
gs
xor
gs
push
mov
aad
pusha
pop
push
popa
jl,pn
jg
push
inc
pop
stos
add
adc
fsub
jmp
test
mov
add
int3
xorl
negb
cmp
push
sub
pop
lock
fdivp
xor
loope
jns
xor
mov
idivb
cltd
gs
xchg
aad
jmp
cmp
mov
inc
xchg
fidivs
cmpsl
aad
insl
push
xchg
popf
enter
mov
jge,pn
sarb
mov
mov
inc
xchg
fidivs
cmpsl
aad
insl
push
xchg
popf
int
cmpsb
daa
loope
ret
call
mov
xchg
in
push
mov
mov
out
scas
leave
push
mov
mov
lcall
pop
push
loopne
lea
mov
aad
popa
out
adc
add
push
or
jg
sbb
rcl
push
inc
xchg
mov
push
js
mov
add
cmp
mov
stos
cwtl
loopne
aas
inc
jp
loope
mov
mov
add
int3
xorl
negb
cmp
push
sub
pop
lock
fdivp
xor
loope
jns
xor
mov
idivb
cltd
gs
xchg
aad
jmp
cmp
mov
inc
xchg
fidivs
cmpsl
aad
insl
push
xchg
popf
enter
mov
clc
jmp
cmp
scas
mov
xchg
xlat
xlat
dec
arpl
inc
out
dec
scas
rcrb
bound
inc
pop
xchg
mov
xchg
in
push
mov
mov
out
scas
leave
push
mov
mov
lcall
pop
push
loopne
lea
mov
aad
popa
out
adc
add
push
or
jg
sbb
rcl
push
inc
xchg
mov
push
js
mov
add
cmp
mov
stos
cwtl
loopne
aas
inc
jp
ss
mov
ja
arpl
sbb
andl
andl
mov
enter
bound
sub
arpl
sbb
andl
mov
enter
fs
sbbb
arpl
sbb
andl
andl
je
in
out
push
aad
sbbb
arpl
sbb
andl
fpatan
pop
or
jmp
aad
sbbb
arpl
sbb
mov
enter
aam
mov
fs
sbbb
arpl
sbb
stc
jg
jno
cmpsl
mov
fsts
jno
popa
arpl
sbb
andl
push
jo
fcompp
adc
popa
arpl
sbb
andl
stc
push
rol
dec
jmp
fmull
mov
andl
andl
xchg
mov
inc
mov
jo
arpl
sbb
andl
repz
add
lret
cmp
xor
fs
sbbb
add
mov
sbbb
mov
mov
fiaddl
and
das
push
or
cltd
es
jp
leave
sbbb
leave
xorb
add
xchg
and
jp
data16
push
or
cltd
es
jp
leave
sbbb
leave
sub
jb
lds
xchg
and
fs
sbbb
arpl
sbb
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
std
pushf
mov
and
fwait
xchg
mov
shll
jb
gs
clc
mov
sbb
arpl
lods
xor
inc
data16
xor
push
stos
inc
orl
jns
sub
dec
push
cmp
mov
xchg
cmp
add
mov
jae
xlat
mov
scas
insl
xlat
cmp
sbb
mov
inc
xchg
lahf
enter
fnsave
insb
push
or
sub
jb
sub
pop
jg
mov
insl
mov
mov
jae
pop
aaa
lahf
arpl
mov
and
xor
repz
mov
inc
ret
je
xor
and
push
push
aam
push
or
xor
leave
jp
jo
jno
sub
popf
cmp
push
xor
pop
pop
xorl
aam
xchg
cmpsl
inc
inc
push
inc
cmpsl
sub
inc
out
enter
xchg
lret
adcl
sbbb
jbe
dec
mov
mov
repnz
push
cmpsl
and
inc
pop
sbb
dec
mov
stc
lcall
dec
add
sub
push
testl
sub
lock
dec
mov
and
pop
clc
pop
shll
add
pop
mov
and
movsb
stos
pop
movsl
pop
in
jne
xchg
pop
jno
push
imul
mov
push
aam
pop
ljmp
aam
mov
insb
sub
sub
subl
aad
cmp
test
xor
popf
push
jle
mov
outsb
out
imull
push
xchg
xchg
sbb
jno
ja
jecxz
dec
sti
pop
in
sub
inc
jle
arpl
xchg
mov
push
and
inc
mov
popf
ds
vmread
insb
sub
jns
mov
pop
pusha
sbb
push
fnstenv
add
pop
mov
xor
rcr
test
repz
fists
jns
or
sahf
lcall
mov
lods
ret
or
xchg
aas
mov
popf
je
ret
scas
pop
or
jns
pop
rcrl
je
mov
ss
je
or
js
mov
test
jnp
mov
movsb
sub
cmp
or
or
pop
sarl
mov
std
int
xor
xor
inc
dec
fcmovne
mov
add
push
mov
cmp
pop
add
xchg
pusha
movsl
or
push
outsl
cmpb
stc
mov
lds
roll
popl
rolb
push
or
mov
mov
leave
or
div
imul
dec
sbb
xchg
outsl
pop
mov
jge
push
mov
ja
sub
divb
imul
pop
fnsave
dec
xchg
inc
ss
add
sbb
dec
jo
mov
insb
lret
dec
out
fisubrs
add
jle
xor
jae
push
in
out
popf
in
adc
call
inc
mov
mov
into
xchg
jns
push
insb
lods
and
pop
sar
push
dec
imul
and
mov
movsl
push
mov
cmp
xchg
xor
fisttps
ljmp
jo
mov
movsl
cmp
push
neg
mov
pop
xor
arpl
adc
inc
out
mov
test
movsl
aam
ret
testl
fstp
xlat
lahf
dec
mov
xor
std
sbb
lcall
sbb
hlt
cli
rcl
dec
and
jle
fistps
inc
push
aas
in
pusha
out
test
cmp
fiaddl
bound
xchg
cmc
xchg
xchg
mov
sub
push
ss
dec
decl
aaa
fstl
ljmp
mov
jl
push
ret
orb
ss
adc
or
inc
ja
xorl
fiadds
addl
mov
jbe
add
lahf
filds
sbb
test
pop
mov
enter
call
mov
in
movsb
daa
or
dec
inc
xchg
pop
sbb
je
gs
movsl
push
sbb
push
outsb
iret
out
test
cmp
sahf
stos
in
jae
xor
dec
dec
leave
sub
adc
adc
mov
cmc
cmpsl
repnz
fistl
inc
in
out
and
insb
lret
test
idivl
clc
test
cmp
mov
cmp
dec
jl
lods
rcrl
adc
lods
nop
cmp
pop
test
dec
sbbl
or
xor
mov
ja
test
inc
movsb
pop
fnsave
sbb
and
int
adc
popa
push
std
ja
popa
xchg
sub
ret
scas
inc
jbe
rcrb
bound
jb
orb
rolb
xor
push
push
push
ljmp
xchg
pusha
jp
push
jae
mov
into
xchg
adc
ja
jp
push
cmpsl
call
xchg
cmpxchg8b
leave
test
lds
lcall
inc
dec
jmp
pop
fdivr
cmpsb
jo
sbb
popa
jae
popa
jbe
iret
mov
leave
mov
andl
cwtl
jge
dec
inc
jb
add
sbb
or
jbe
dec
sahf
and
and
loopne
or
imul
push
pop
xchg
cs
sbb
jne
pop
out
jae
sbb
leave
and
sbb
aad
pop
sbb
lcall
enter
sbb
sbb
adc
fidivrs
inc
jns
jbe
sub
ljmp
cmp
test
add
sub
fisubrs
inc
pop
add
fidivrl
loopne
sub
test
stc
inc
mov
cmp
xor
out
fadd
cli
lock
jo
aad
das
dec
mov
fwait
repnz
xor
daa
in
imul
pushf
movd
xor
xor
clc
xchg
xlat
out
pop
test
adc
jnp
sub
jne
fwait
sub
fcomi
out
sbbl
lret
mov
xchg
test
jle
or
xor
sbb
ret
lock
mov
push
iret
std
inc
mov
cmpsb
in
jg
add
das
popa
xor
subl
jle
lods
push
or
sahf
mull
xor
xor
mov
enter
lret
aas
repz
xor
je
sbb
xchg
mov
test
inc
push
ss
mov
cld
enter
xchg
cmpb
test
out
movsb
es
jae
imul
out
jb
sbb
xchg
jb
dec
mov
in
pop
insb
sub
adcl
mov
pop
jmp
pop
sbb
hlt
pop
pop
ret
sbb
xchg
add
push
jg
into
int3
js
insb
cwtl
cmp
in
mov
xlat
sub
jle
dec
adc
bound
jne
or
pop
jno
xlat
xchg
testl
loop
test
or
mov
clc
lahf
sbb
cltd
clc
pop
adc
in
dec
imul
jae
in
rorl
mov
or
inc
shll
sarb
lret
cmp
jl
pop
shll
and
mov
popf
dec
mov
js
ficoms
enter
push
mov
add
rorl
aaa
nop
push
sti
xor
stos
not
ljmp
cmp
adc
dec
adc
mov
addr16
test
mov
je
sbb
imul
in
or
and
lcall
and
rcr
jae
fcoml
add
ret
data16
int3
scas
inc
pop
into
mov
test
xor
xchg
js
inc
js
lahf
cmp
mov
pop
lods
push
cmp
adc
cmp
or
testl
cmpsl
cli
xchg
ds
enter
pop
js
movsl
aam
cld
push
mov
outsb
xor
add
jle
nop
decl
adc
dec
mov
push
mov
xor
cmp
stc
nop
push
arpl
and
dec
inc
push
xchg
cwtl
cmpsl
push
dec
aas
loope
sub
mov
vorps
push
dec
leave
mull
fidivs
or
movsl
fwait
loop
inc
and
or
jmp
and
aad
adc
xchg
lret
test
and
aad
adc
xchg
daa
jg
push
repz
xchg
jg
andl
inc
js
mov
xchg
cmp
std
loope
xchg
xor
add
aam
pop
insl
rol
add
push
addb
and
in
jae
fisubl
or
xor
negb
dec
mov
add
std
inc
rol
dec
out
xorl
ljmp
loopne
xorl
ljmp
sub
sahf
enter
scas
add
popa
popf
movsl
jnp
or
add
xchg
movsl
jnp
or
sbb
jl
mov
mov
es
sub
or
cmp
dec
pop
sbb
push
dec
jno
jne
mov
leave
mov
adc
dec
mov
mov
mov
setno
mov
out
mov
lods
adc
inc
or
mov
dec
cmpsb
jge
int3
cmpsb
xchg
xchg
xchg
mov
mov
sbb
push
repnz
jne
call
inc
xchg
dec
mov
sbb
xchg
int
ret
loop
sarl
rolb
mov
cmp
adc
mov
cmp
xchg
int
ret
loop
sarl
rolb
or
mov
push
call
adc
xchg
test
dec
dec
jae
fsubr
mov
adc
mov
sarb
cmpsl
pushf
ja
cmp
out
nop
mov
fs
cli
aad
inc
stos
and
xchg
jnp
sub
jb
jns
in
shl
push
test
cmp
aam
xlat
jns
in
shl
push
test
add
cmp
sub
lods
in
pop
fisubs
adc
sub
xor
or
outsb
pop
shl
ljmp
pop
lret
pusha
jbe
std
pop
movsl
in
push
lahf
adc
jne
mov
loopne
jg
dec
push
icebp
xchg
arpl
shl
sahf
scas
sbb
mov
cmpb
cmc
dec
dec
pusha
xorl
sbbb
mov
lret
das
dec
pop
xchg
out
into
data16
int
mov
out
cmp
pop
xchg
int3
dec
fdivrs
dec
jbe
jg
popf
ljmp
addr16
lock
lods
mov
jmp
loop
pusha
dec
jge
mov
subb
ds
lcall
cli
add
dec
dec
xor
aas
push
leave
mov
addr16
fidivrs
or
inc
pusha
adc
mov
jne
fnstenv
push
lods
in
cwtl
test
out
lds
ljmp
ficompl
xor
frstor
jl
cmp
imul
add
or
sbb
pushf
in
in
popa
sbb
bound
push
mov
mov
iret
lret
pop
xor
adc
push
cmp
sub
iret
xchg
incb
push
mov
mov
sub
cmpsl
mov
fmulp
xchg
incb
push
mov
xchg
push
mov
bnd
inc
jb
pop
sbb
push
jmp
and
call
add
in
addr16
cltd
add
int3
xchg
and
aas
lock
lcall
or
add
push
push
pop
sbb
push
xor
xor
shll
push
fidivl
test
roll
aaa
mov
movsb
cmp
mov
mov
les
mov
mov
xor
ja
call
add
lret
push
jl
add
pop
int
push
test
inc
xchg
mov
mov
enter
or
or
fwait
jo
mov
fs
dec
pop
adc
scas
jae
push
sbb
and
dec
rcrb
test
pop
mov
add
pop
daa
xchg
sbb
pop
mov
inc
jno
inc
sbb
jge
pop
adc
dec
test
mov
mov
xor
ret
sub
in
imul
ficoml
mov
jns
mov
fcoms
in
cmp
imul
mov
popl
push
dec
xchg
imul
dec
xchg
push
les
push
adc
shrl
sub
nop
dec
fbld
push
pushf
aad
adc
xchg
lret
test
and
aad
adc
xchg
mov
in
and
pop
hlt
lock
sub
pop
ret
add
cmp
clc
hlt
stos
inc
jp
push
xor
xchg
out
pop
mov
and
stos
lret
divl
push
in
outsb
mov
xchg
mov
or
add
shlb
sti
adc
xchg
sbb
iret
xor
stos
jae
mov
xor
adc
and
scas
sbb
sub
xchg
xchg
movb
ror
push
out
fstl
push
mov
clc
and
xchg
jle
sbb
sbb
mov
lcall
push
jbe
cmp
add
loopne
jle
mov
pop
push
xchg
push
loop
scas
adc
orl
testb
fisubrl
cmp
arpl
xor
inc
mov
xor
add
fsubl
cmp
sbbb
add
out
jo
sub
push
in
mov
in
mov
scas
es
push
sub
cltd
lcall
mov
mov
fstps
push
out
push
iret
notl
sahf
fbld
xchg
jne
sbb
pop
xchg
jl
mov
dec
jne
out
enter
icebp
sub
xchg
pop
mov
lods
mov
cmc
dec
pop
mov
sub
xor
addr16
das
popf
sbb
out
xchg
lret
sub
scas
test
subl
imul
data16
negb
push
cmp
pop
loop
xchg
sub
js
fnstsw
bound
stos
mov
cmc
test
in
sti
addr16
inc
lods
mov
sub
dec
mov
adc
mov
fucom
out
jge
ficoml
push
es
stos
rcr
add
std
xorb
repnz
movsb
pop
inc
lret
outsb
or
or
outsl
shr
jg
pop
je
mov
and
nop
negl
mov
inc
sub
mov
aas
xor
push
sub
data16
rcl
inc
pop
or
fstps
stc
pop
and
sub
mov
bound
push
cmc
fwait
jb
mov
std
inc
int
xor
jae
pusha
mov
xor
repz
mov
xor
cs
inc
dec
nop
cwtl
cmpsb
xchg
adc
mov
inc
inc
bound
cmc
inc
pop
lret
xchg
sub
and
jne
sbb
cmp
fnstenv
stc
int
mov
jbe
push
xchg
pop
rorb
mov
dec
mov
adc
inc
es
imul
sbb
adc
gs
mov
hlt
clc
add
mov
into
stc
cltd
cltd
sub
mov
aam
xchg
cmpsl
xchg
push
xor
xorl
or
mov
cmpl
mov
popa
test
and
jg
mov
sbb
addr16
mov
lods
add
movsl
push
sarl
repnz
mov
mov
xchg
sarl
bound
hlt
or
and
hlt
clc
add
sbb
jecxz
cmp
lds
add
mov
decb
lret
adc
dec
add
ficomps
js
pop
dec
leave
and
divb
jg
test
shll
stc
mov
lea
jnp
xchg
and
test
cmpsb
pop
data16
mov
jb
sub
test
fnstsw
jae
lret
jns
dec
sahf
pop
arpl
mov
fsts
dec
dec
out
mov
std
mov
ficompl
sti
loop
mov
sbb
inc
out
xlat
test
and
outsb
sbb
fsubrs
mov
push
fs
cld
pop
or
jnp
sub
add
cs
mov
jecxz
cmova
inc
inc
dec
lds
lods
aad
xor
fwait
iret
xchg
pop
fwait
int
nop
lods
add
aad
cwtl
jb
push
in
lods
mov
addr16
out
scas
andb
loop
mov
adc
int
pop
aam
ss
stos
mov
aas
imul
cmp
subb
test
lahf
rcrb
jl
push
push
test
mov
mov
add
pop
aas
mov
in
pop
jb
je,pt
call
dec
pop
inc
loop
add
jae
mov
jbe
sarb
jno
in
pop
sbb
js
subb
jo
pusha
or
sbb
in
or
jl
pop
jge
and
xchg
mov
data16
cmpsl
outsl
shlb
push
sub
and
mov
js,pt
insl
addr16
sbb
xchg
inc
sbb
sarl
loop
lea
mov
arpl
dec
jge
ret
xlat
sub
or
or
lahf
sbb
pushf
fst
movsb
repz
pop
ljmp
sub
mov
adc
mov
into
lods
shll
popf
pop
in
add
xchg
pop
add
lods
fsubrl
out
loope
xor
in
push
mov
cmc
or
nop
inc
mov
sbbb
loope
dec
inc
pop
push
into
ljmp
test
pop
xor
rcrb
mov
pop
push
stos
out
lret
jbe
mull
dec
mov
dec
fcomps
cltd
add
stos
cmpsb
arpl
ficomps
mov
mov
js
or
arpl
and
push
mov
mov
xchg
fadds
xlat
sub
xor
test
lcall
jl
js
ljmp
or
les
mov
loope
pop
sbb
xor
adc
mov
xchg
cltd
pop
popf
push
fsubl
loopne
imul
outsl
push
pusha
data16
out
jbe
sub
dec
shlb
xor
push
jl
cmp
ja
add
lcall
lcall
scas
or
ficoms
nop
scas
cmp
sti
ss
sub
sbb
mov
cmpsl
les
cmp
xchg
push
cmp
sahf
mov
jo
dec
sar
mov
xor
pusha
or
addr16
adc
mov
fcmovnbe
mov
aad
push
fdivl
mov
xchg
inc
scas
xchg
or
outsl
inc
xchg
jmp
jmp
jmp
pop
mov
js
ret
clc
or
roll
fsubr
cmp
fsubs
fcoms
xchg
repnz
mov
xor
cltd
leave
stos
ret
loope
add
sub
js
cld
std
cmpsl
rcr
scas
xor
adc
xchg
jmp
xchg
adc
mov
xor
pop
rcr
sub
into
bound
sbb
pop
sbb
outsl
adc
inc
mov
xchg
imul
cmp
cmp
out
test
nop
bound
jno
pop
mov
loopne
cmp
stos
out
es
push
fwait
icebp
push
je
mov
xlat
div
cld
dec
fldl
mov
sub
mov
inc
lds
dec
sbb
add
int
xor
sub
fdivs
out
cmp
in
inc
lahf
ret
or
push
lcall
mov
xor
inc
sarl
int3
or
aas
rorl
mov
sub
iret
mov
ret
cmc
sbb
lret
into
fchs
into
data16
dec
cwtl
cld
jns
xchg
bound
xchg
add
std
insl
enter
xor
push
sti
inc
xor
mov
adc
insb
inc
and
scas
dec
adc
les
arpl
roll
adc
andl
sbb
mov
mov
fcomi
cmp
push
push
sbb
push
sbb
cmp
ret
shrl
cltd
movsb
xor
hlt
cmpsb
sti
stc
xor
and
mov
add
sub
dec
adc
mov
mov
cltd
incb
xlat
outsl
scas
cmp
lea
call
xor
or
jle
cmp
xchg
rcl
pop
mov
mov
push
aaa
mov
sbb
stos
and
pop
idivl
dec
test
pop
imul
sbb
push
cwtl
dec
cmp
scas
cmpsb
addr16
xchg
hlt
shrl
push
aad
xor
sbb
int3
loop
sub
pusha
dec
xlat
decb
ret
pop
xor
cmp
push
fstps
add
cmc
jp
stos
push
jle
xor
dec
lods
mov
inc
mov
rcll
das
int3
push
xor
outsl
or
mov
inc
sbb
mov
shrl
int
int3
fs
adc
sti
lcall
mov
xlat
push
pop
fldenv
jb
and
les
and
sti
jne
pop
in
mov
adcb
cltd
stc
push
shrl
push
pop
and
dec
cmpsb
enter
add
xor
adc
ret
jnp
aam
dec
push
mov
iret
stos
lock
clc
mov
ficoms
pop
ljmp
cmp
mov
shrb
movsl
mov
adc
movq
dec
aaa
cs
push
pushf
inc
inc
and
and
sub
imul
and
in
repnz
lea
dec
mov
rorl
jae
mov
pop
or
sub
movsb
add
arpl
out
pop
das
push
cmpsb
push
testl
testl
xchg
ss
xor
dec
inc
addr16
mov
test
jns
rorb
pop
mov
pushf
das
sub
or
xor
test
into
push
insl
testl
cli
mov
mov
cld
shll
mov
loope
icebp
loop
pop
movsb
fcoms
mov
sbb
mov
or
out
jp
push
sub
pushf
or
flds
push
xchg
imul
aad
push
lds
xor
adc
in
cltd
fst
incb
and
xchg
push
inc
mov
clc
outsl
inc
lret
cli
sub
shll
mov
xchg
add
mov
je
subl
lods
sahf
pop
fcmovnu
int3
dec
sub
mov
xchg
cmp
xchg
lret
dec
adc
daa
fcomi
call
sbb
push
out
pop
cmc
subl
scas
push
xor
push
je
sub
push
mov
jns
sarb
scas
lcall
fldcw
lret
je
or
mov
stos
outsb
je
lock
or
dec
jp
lds
pop
int3
dec
inc
mov
add
in
outsl
test
fistps
psubw
jno
pop
aaa
lcall
and
sub
in
adc
hlt
xchg
dec
dec
sbb
mov
add
pop
mov
dec
std
pushl
leave
cmpsl
ja
xchg
mov
mov
lds
sub
add
out
ret
divl
xchg
or
or
adc
les
mov
jbe
add
cmpsb
adc
inc
add
pop
adc
sub
jae
cmpsb
xchg
lods
cwtl
loope
inc
xor
out
mov
inc
xchg
popf
push
mov
adc
jge
scas
fimuls
sub
push
push
pop
mov
ret
pop
jae
jbe
pop
ljmp
notb
mov
lea
loopne
pop
push
inc
mov
test
fldl
movsl
dec
sbb
mov
loopne
adc
outsl
lock
bound
cltd
call
rorb
add
rcrl
int
xchg
fsubs
and
adc
xor
push
int
mov
inc
fimuls
loop
cmp
sub
lods
aaa
js
dec
xor
push
adc
pop
add
add
int
jecxz
lret
lret
dec
cltd
bnd
scas
testb
pop
xchg
jmp
sarl
or
jno
sub
xchg
in
dec
subb
adc
in
adc
shll
push
inc
sbb
push
test
push
pop
pop
adc
xchg
push
add
fwait
add
sbb
push
int3
mov
lock
jmp
lock
in
dec
add
xchg
js
fdecstp
lea
in
stos
std
leave
inc
lret
jnp
xchg
sub
addr16
pop
lahf
aad
ret
scas
dec
out
test
cmp
in
xchg
mov
les
sub
mov
dec
cmpsl
fwait
add
popf
xlat
ret
cwtl
jo
sbb
rorl
ficoms
xor
jns
outsl
dec
adc
add
popf
scas
adc
loop
and
sub
fwait
aaa
xchg
cld
das
dec
lea
and
mov
out
lret
mov
sbb
xor
loop
xchg
in
sbb
mov
cmc
add
add
pop
stos
mov
mov
mov
data16
mov
call
sub
ficoms
adc
add
sub
mov
push
mov
sub
and
faddl
cwtl
scas
lea
inc
inc
xor
outsl
lods
jle
clc
dec
mov
inc
ss
frstor
leave
lods
nop
add
mov
pop
aam
scas
mov
repz
repnz
and
int
lret
pop
fdivrl
xchg
jecxz
and
push
adc
out
aas
jbe
sub
rcrl
in
fists
lcall
arpl
insb
push
stos
xchg
cmp
test
das
repnz
out
js
sub
icebp
jo
stc
bound
jecxz
fildl
jge
xchg
test
gs
or
ljmp
mov
mov
es
xchg
test
push
mov
push
fldenv
inc
scas
shl
shlb
pop
lea
xchg
dec
sahf
dec
insb
jno
ds
push
and
rorb
ss
fwait
pop
fst
cmpsb
mov
hlt
fmull
sahf
cmc
cmp
stos
cli
inc
sbb
or
out
lret
popf
rol
jp
or
or
inc
inc
leave
sub
add
lret
xchg
add
popa
dec
test
test
data16
push
pop
push
mov
xchg
pop
mov
cmp
xchg
hlt
xchg
xchg
mov
xchg
sbb
adc
inc
xor
jae
dec
ret
and
and
sub
ds
inc
mov
pop
jns
xor
arpl
mov
and
push
mov
iret
out
lea
and
sbbb
pop
test
mov
test
push
dec
sbb
mov
je
push
xor
shrl
shl
popa
imul
std
cmp
shrl
xchg
inc
loopne
push
nop
dec
outsl
lds
cmp
jno
pop
lret
jmp
lret
rcrb
jp
daa
adcl
cmpsb
adc
cmp
das
xor
xor
popa
imul
adc
gs
mov
sti
mov
push
ljmp
jno
in
dec
shll
mov
cmpsl
mov
in
lods
mov
imul
jbe
mov
push
push
test
cmp
sbb
mov
add
add
test
out
mov
inc
mov
shlb
lods
sub
icebp
mov
dec
fsubl
stos
pop
mov
jmp
mov
enter
xor
aaa
repnz
ja
popf
dec
aad
adc
sub
ss
dec
adc
andb
pop
loop
cmp
in
mov
jbe
lock
pushl
adc
in
push
pop
cmpsb
cmp
sbb
mov
addr16
pop
bound
pushf
loopne
in
std
popf
fmull
push
mov
or
pop
mov
jecxz
pop
adc
sbb
int3
xchg
std
inc
mov
mov
xchg
or
and
jmp
mov
cmp
popa
mov
xor
mov
fstl
jnp
gs
out
iret
js
sub
dec
and
push
popa
lret
or
clc
stc
stc
lea
dec
dec
out
cld
mov
into
lods
scas
scas
lods
and
aas
push
movsl
xchg
xor
stos
aas
cmp
pop
lcall
mov
cli
and
mov
aam
out
paddusb
jle
sbb
and
pop
or
mov
cmp
adc
jne
pop
xchg
wrmsr
aad
cmpsb
filds
dec
imul
xchg
lock
jo
xorl
ds
and
mov
dec
xchg
pushf
out
rcr
pusha
lods
mov
fwait
pop
dec
call
sub
fnsave
leave
stos
inc
jle
push
scas
jb
out
pushl
mov
les
mov
dec
jg
je
xchg
movb
imul
or
mov
andl
repz
xchg
lcall
sbb
fidivrl
loop
ret
imull
fisubs
or
jl
sbb
mov
nop
sub
sub
popf
ja
pop
fistpll
dec
or
movb
mov
fs
jbe
or
adc
push
cmp
fadds
stc
or
jnp
push
sub
jne
movsb
leave
movb
xlat
add
xchg
xor
cmp
arpl
sbb
stc
jp
cmc
or
cwtl
adc
cld
add
adc
shl
daa
sub
sub
pop
pushf
inc
cmpsb
mov
xchg
xlat
xlat
dec
arpl
inc
out
dec
or
xchg
ds
sbb
stc
jmp
xor
shlb
ret
in
jno
push
out
into
std
negl
lods
xorb
scas
push
in
xchg
adc
mov
adc
or
jecxz
dec
pop
sub
outsl
ret
pop
add
jge
std
adc
add
jo
add
mov
repz
adc
rcl
lcall
lahf
mov
inc
pop
popf
std
bound
outsl
lahf
inc
jb
xor
pop
ss
inc
push
sahf
xchg
cmp
jg
adc
addr16
lock
push
mov
lods
inc
inc
add
test
out
pop
nop
jne
in
adc
xchg
popa
leave
aam
out
rol
clc
pop
punpckhwd
das
adc
jp
add
outsb
lods
xor
adc
add
idiv
push
addr16
and
out
pop
idivb
add
xorb
xor
daa
jbe
push
push
fucomip
mov
mov
cli
pushl
mov
nop
push
cmc
lods
stos
adc
cmp
lret
xor
sub
mov
fbld
jns
cmp
adc
mov
and
stc
hlt
jecxz
push
das
adc
ret
aam
cmp
add
in
mov
es
xchg
cltd
cmpsb
icebp
cmp
out
add
push
mov
in
xor
popf
popa
jnp
clc
stos
dec
push
add
push
jno
xor
lcall
dec
sbb
xchg
pop
xor
adc
out
mov
push
cltd
imul
imul
mov
jno
clc
flds
stc
arpl
sbb
test
sti
add
sbb
shrb
jb
push
xor
fisubs
cmpb
clc
lcall
cmp
inc
mov
in
push
mov
push
mov
xorl
xor
mov
sbb
push
mov
shl
xchg
pop
add
xchg
push
arpl
mov
test
scas
test
jnp
jne
xlat
jnp
jp
mov
subl
cwtl
scas
test
dec
sub
jns
adc
jl
pop
icebp
mov
sbb
lods
sti
xchg
repnz
fisttpll
insl
pop
xor
outsb
divl
popa
adc
andl
xor
out
lcall
add
mov
adc
sahf
js
fs
aad
pop
repz
sbb
push
push
or
mov
movsl
movsb
repz
in
test
insl
inc
sbb
jbe
daa
or
sub
push
jns
push
dec
push
rol
ljmp
sub
data16
sbb
cs
cld
pop
jg
push
daa
mov
xor
adc
shr
nop/reserved
xor
xchg
mov
add
xchg
pop
inc
pop
pop
dec
movsb
popf
sub
cmp
stos
xchg
cwtl
mov
add
in
pop
nop
mov
ljmp
jo
sbb
sar
ret
negb
mov
test
lds
lods
mov
scas
or
daa
dec
sub
subl
stc
lock
int3
std
outsl
enter
or
scas
scas
clc
negb
sarb
add
cmp
xchg
bound
inc
push
sbb
insl
mov
int3
js
add
arpl
xchg
push
stos
push
fchs
repnz
out
push
hlt
insb
stos
mov
inc
dec
xor
mov
inc
push
push
sbb
mov
mov
mov
test
mov
mov
inc
push
roll
or
jno
inc
shl
push
scas
dec
dec
mov
dec
fs
jbe
lret
shlb
sti
rolb
or
lea
ljmp
or
loop
dec
pop
inc
fwait
pop
inc
mov
cmp
and
push
movsl
xchg
jmp
inc
mov
enter
js
mov
sti
dec
xchg
call
sbb
pop
mov
sti
push
adc
lret
sub
jle
cmpsb
fwait
movsb
shll
mov
shl
gs
sbb
mov
cmc
ret
jmp
bound
mov
out
jo
cmpsl
mov
mov
push
sub
lret
test
sub
addr16
fwait
pop
test
add
sar
aas
sbb
ror
cmp
in
sahf
cmc
xor
sub
divl
jo
xlat
outsb
subb
cmpsb
sub
sub
jge
push
and
sub
divl
jo
xlat
outsb
subb
lahf
pop
sub
mov
jmp
push
mov
xchg
xchg
adc
mov
cwtl
faddp
rclb
call
ret
pushf
mov
pop
in
jecxz
negb
fisttpl
xchg
clc
icebp
push
fcoms
mulb
mov
xchg
int
pop
pop
add
jmp
pop
popa
sbb
gs
sub
mov
clc
out
clc
mov
or
enter
dec
or
cmp
jne
mov
out
sub
fimuls
xchg
xor
notl
sti
sbb
pop
into
and
jecxz
mov
cmp
mov
push
jp
bound
dec
mov
dec
mov
sub
cmc
lret
clc
mov
fnstcw
xchg
xor
add
mov
icebp
dec
push
call
pop
test
cmc
push
xchg
sbb
or
pop
outsb
sbb
or
out
xor
sahf
sub
inc
test
and
add
jmp
inc
lods
test
cwtl
aad
in
xchg
inc
dec
jl
lret
mov
mov
mov
mov
popf
xlat
fdivs
push
dec
or
inc
sub
inc
mov
ja
psllw
xchg
ss
xchg
inc
xchg
mov
xchg
fwait
mov
xor
pop
rcl
ret
out
or
repnz
cwtl
insb
popa
add
out
jecxz
fucom
add
sub
mov
adcb
jmp
repz
cmp
sbb
xchg
pop
subb
mov
cli
pusha
push
or
mov
sub
out
cltd
xchg
xchg
sbb
rcr
xchg
fdiv
mov
movsl
adc
rcll
xchg
xor
mov
cltd
sub
cmpsl
leave
xor
cmp
call
testb
sbb
scas
xor
call
iret
sub
jge
sub
es
sub
es
mov
mov
icebp
sbb
dec
fidivrs
movb
inc
add
cmc
mov
jmp
mov
push
push
pop
icebp
cmp
sub
jne
lcall
mov
mov
pop
xor
and
inc
add
lret
adc
imulb
adc
cs
push
aaa
cli
lcall
xor
mov
pop
fsubr
or
cmpsb
sub
hlt
mov
jmp
movsl
scas
je
add
jmp
inc
mov
cmp
cmpsl
subb
gs
sbb
jg
jbe
fstpt
xor
sub
fldl
and
mov
dec
push
lahf
fcmovbe
int3
pop
xchg
dec
add
and
jle
sbb
pop
add
pop
cli
lock
cmc
lods
ja
pop
and
stos
lret
lods
mov
in
das
aam
sub
adc
ret
into
pop
cmpsb
dec
lods
mov
adc
xlat
fisubl
ljmp
xchg
jmp
out
xchg
push
cmp
adc
xor
adc
mov
and
sbb
lods
nop
idiv
addr16
out
xor
call
inc
aam
sbb
add
cwtl
cmp
sub
mov
dec
inc
push
mov
xor
sub
mov
pop
and
or
test
sub
sub
pop
lds
jo
fs
dec
rorb
scas
xor
mov
orl
imul
xchg
inc
outsl
jo
ljmp
push
int
pop
push
cmp
test
xchg
orl
mov
push
jo,pn
mov
rcl
ficoms
xchg
add
jg
pop
lret
movsb
arpl
pop
inc
inc
je
add
mov
rol
mov
inc
mov
adc
cmp
int3
repz
movl
sti
pop
jecxz
ds
xor
sub
popf
and
adc
mov
inc
cmpsl
jae
int3
mov
fwait
bound
mov
lea
sub
xor
jl
lods
stos
pop
mov
scas
repz
loopne
insb
xchg
iret
in
add
loope
shrl
rcl
sbbl
mov
cwtl
shl
or
mov
add
daa
sbb
and
lcall
jge
cmpsl
iret
cmpl
sub
and
gs
pushf
xchg
in
pop
jecxz
or
inc
add
mov
adc
push
push
loope
rcrb
lea
fucom
mov
cmp
aad
lret
sub
std
mov
mov
mov
lahf
add
fldcw
test
in
mov
and
ljmp
sub
mov
leave
in
lods
inc
repz
int
xchg
pop
insl
adcl
clc
outsl
sub
push
adc
cs
addb
test
lea
pop
mov
in
subb
sbb
fdivrp
sbb
stos
inc
repnz
sahf
sub
je
push
add
push
jno
push
dec
addr16
add
orl
ret
fcomi
push
pusha
das
fiaddl
stc
leave
mov
imul
inc
shll
movsbl
sahf
ss
dec
daa
xchg
jne
mov
insl
testl
push
and
jecxz
push
sub
test
inc
jecxz
jmp
adc
sbb
jbe
sbb
mov
push
nop
adc
dec
jo
mov
fstpl
push
test
mov
jl
sub
scas
sbb
xor
popa
dec
xor
dec
inc
lahf
in
fidivrs
cmp
cmp
sbb
fisubs
icebp
or
and
cli
insb
mov
jns
pop
push
iret
or
jp
lods
xchg
sbb
mov
jp
xor
xchg
sub
fs
movsb
fwait
icebp
or
nop
cmp
mov
push
fstp
fcmovb
sbb
cmp
and
add
out
mov
pop
addb
imul
rclb
adc
jmp
std
andl
sub
out
mov
aam
pop
into
mov
mov
push
call
psubq
jb
inc
lret
dec
cmp
pop
xlat
xlat
out
xchg
jb
aad
xorl
inc
and
mov
xchg
sub
cld
test
popa
push
pop
jle
out
popf
enter
fwait
adc
jo
dec
jns
add
jnp
sbb
into
dec
nop
xor
mov
cmpsl
in
in
repnz
xor
and
pusha
test
js
int3
outsb
aaa
and
stos
out
shll
dec
mov
cmp
lds
xchg
pop
inc
or
jge
push
sbb
movsl
jp
lret
lock
lcall
and
add
xor
jno
das
mov
pop
xchg
xor
rclb
lock
inc
xor
shr
movsl
xchg
inc
movsl
clc
fwait
push
rcrl
mov
ds
jb
loop
les
insl
or
imul
cltd
hlt
push
movsb
cmp
test
lods
push
xor
aas
pop
push
jmp
ljmp
sub
jne
aad
aaa
dec
push
popf
fsubl
psubq
scas
mov
gs
jecxz
pop
inc
pushf
mov
testb
lret
jmp
xor
mov
mov
add
cvtps2pi
imul
pop
test
adc
push
xor
rclb
push
jge
pop
pop
es
sub
mov
push
xor
jg
je
adc
mov
mov
sub
sub
loopne
dec
xorb
sub
shrl
roll
jae
xchg
nop
imul
mov
and
jb
idivb
xchg
in
inc
test
pop
addr16
jmp
cmp
mov
sub
stos
js
bound
jne
cli
push
rclb
or
jmp
and
out
imul
ss
lods
cmp
jle
imul
or
fwait
sub
cmp
add
xchg
xchg
add
pop
mov
cli
insl
jns
lcall
fisubl
push
gs
mov
mov
aaa
xchg
or
mov
aas
sub
pop
dec
inc
or
mov
es
mov
out
push
cwtl
cmp
jno
stos
or
bound
mov
fcomps
or
test
xor
repz
xchg
nop
mov
ja
movsl
push
pop
gs
iret
pop
clc
sbb
mov
sbb
mov
out
sbb
adc
sub
mov
out
pop
leave
stos
enter
xlat
rorb
xchg
into
fistpll
jle
push
rorl
bsf
insl
jns
add
pop
pop
popf
pusha
or
insl
mull
push
call
stos
mov
in
add
in
sbb
sbb
mov
inc
inc
adc
and
jmp
jae
gs
ljmp
test
lret
adc
jne
and
loope
enter
xchg
add
mov
es
sbb
push
add
lcall
fwait
inc
aam
testl
xor
mov
sti
and
ret
out
push
xchg
mov
push
xchg
cli
cwtl
push
mov
cmp
ja
cmp
imul
scas
sub
lock
sbb
dec
notb
movsl
push
jge
fucomip
jnp
clc
icebp
cli
lcall
daa
xor
repz
inc
adc
je
cmp
fistps
mov
mov
cmp
add
lahf
mov
sahf
aad
jecxz
iret
dec
pushf
mov
movb
fstpl
pop
into
and
mov
out
xor
xchg
out
sti
das
sahf
adc
xchg
shlb
loopne
icebp
ja
dec
inc
in
xchg
sarl
fwait
inc
gs
mull
shl
ss
out
add
lcall
out
hlt
into
pop
sub
in
and
in
cmpsb
fwait
ja
loope
out
push
jmp
aam
imul
inc
test
pop
jmp
lods
outsl
aas
dec
pop
pop
rolb
jno
pop
inc
xchg
mov
sbb
ds
imul
out
imul
dec
jp
fcoml
sub
xor
mov
xor
mov
test
stos
mov
movsl
xor
dec
push
arpl
popa
xchg
pop
into
rcll
negb
push
xor
into
pusha
std
fsts
mov
das
lcall
mov
jbe
jmp
xor
lcall
cmc
hlt
sbb
sahf
xchg
aad
ds
or
mov
fisttpll
cwtl
push
nop
rcrb
loope
mov
mov
fs
xlat
stos
mov
insl
or
nop
pop
clc
scas
inc
push
sahf
and
inc
lcall
mov
jmp
lock
sbbb
hlt
push
pop
mov
xchg
shrb
pop
in
mov
fldt
into
adc
repz
cld
dec
push
cltd
out
leave
repnz
outsb
sbb
jle
and
ljmp
mov
push
or
test
mov
out
cmp
adc
pop
xor
les
push
cmpsb
scas
lods
push
push
imul
and
popa
cmc
xorl
outsl
xchg
cld
cmp
mov
out
lahf
dec
inc
aad
rclb
jmp
out
lock
or
insb
sbb
std
push
ljmp
sub
out
xor
cmpsl
in
pop
decb
xor
push
cwtl
popa
mov
push
mov
js
arpl
sbb
clc
es
ds
ss
push
je
xor
arpl
call
mov
add
les
mov
call
push
pop
push
insb
xchg
jno
push
sub
ja
mov
lcall
sub
xor
movsl
adcb
stos
aas
cwtl
push
mov
lods
fisubs
insl
xchg
add
inc
popa
add
sbb
push
push
pusha
jl
je
push
push
test
fmul
clc
mov
mov
jno
mov
mov
inc
jbe
mov
inc
ds
push
subl
lret
outsl
lods
call
mov
in
popa
pop
ficoml
fsubrp
jge
fdivrl
or
push
or
inc
cltd
jnp
repnz
pop
mov
lret
imul
adc
push
push
mov
int3
jle
push
xchg
enter
pop
ficoml
pop
dec
jne
inc
jnp
xor
enter
fcmovbe
ds
cmp
add
inc
or
sub
push
mov
and
out
pop
mov
in
push
lahf
sbb
aas
lret
stos
cmp
js
add
push
mov
stc
scas
jb
cmc
inc
inc
cld
call
sbb
or
bound
out
sbb
xchg
pushf
push
mov
jp
jecxz
xchg
dec
pop
adc
pop
xor
in
add
movsb
xchg
imul
jmp
call
test
jecxz
mov
fstl
cld
dec
into
repz
mov
sbb
aaa
daa
xor
lods
inc
repz
movsb
add
add
movsl
xchg
jae
xchg
idivl
lret
cli
or
rorl
cmc
das
mov
cmp
rclb
shll
xor
mov
in
cmp
hlt
xor
add
xchg
inc
jg
pusha
in
out
imul
imul
repnz
loopne
and
jae
mov
push
jbe
and
or
popf
pop
popf
add
xor
mov
adc
push
cs
dec
and
iret
xor
xor
lea
adc
das
iret
insb
data16
and
inc
fcompl
sub
daa
stos
mov
sub
sbb
imul
loope
or
cmp
push
imul
js
ficomps
into
add
xchg
dec
sahf
inc
sub
test
cltd
push
scas
aad
adc
add
sti
cmc
and
in
jecxz
rcr
scas
lock
es
and
xor
sbb
shlb
imull
jl
dec
mov
daa
and
out
movsl
push
ja
sar
jge
mov
adc
xor
stos
in
dec
mov
cwtl
push
mov
add
hlt
shrb
lea
sub
mov
movsb
int3
pusha
rcll
push
insb
pop
xchg
xchg
xlat
xor
jns
mov
jo
xchg
jb
fs
sbb
jnp
push
test
dec
jmp
xchg
inc
inc
ja
dec
xor
mov
mov
ljmp
dec
in
cmp
fimull
jo
xchg
in
ret
xchg
cli
jecxz
int3
xor
inc
push
xchg
sahf
ja
pusha
push
imul
imul
mov
rolb
inc
ss
mov
gs
add
jbe
das
leave
mov
pop
push
push
out
test
repz
popa
aam
call
sub
dec
and
imul
mov
hlt
shl
xor
inc
test
sbb
stos
movntps
fstps
call
loope
jecxz
pushf
movsb
in
imul
mov
add
hlt
and
jne
imul
mov
ss
mov
ljmp
fistps
gs
push
dec
or
mov
cmpsl
xlat
xor
xor
and
lea
lock
add
imul
pop
lret
and
or
lea
fs
mov
dec
jne
jmp
stc
push
sub
pop
clc
pop
out
mov
lock
and
mov
cmpsl
and
pushf
xor
arpl
popa
stos
cmp
pop
jl
scas
jecxz
lds
jp
xor
push
test
push
cmp
push
mov
aad
and
ja
es
lock
pop
pop
ret
dec
pop
sbb
fistl
jae
ljmp
cmpsl
push
outsb
or
popa
icebp
adc
push
sbb
mov
jmp
mov
fidivrl
push
push
imul
lret
or
insb
mov
aaa
mov
mov
es
push
out
in
cmpsl
jle
jp
outsl
and
jmp
sub
ret
stc
lods
or
insl
outsb
xchg
mov
testb
fists
xchg
xchg
std
push
or
push
or
push
arpl
adc
jo
pop
loop
push
and
mov
mov
je
cmc
sti
ds
adc
loopne
add
mov
sbb
pop
xchg
dec
enter
push
cmpsb
outsb
xchg
test
mov
movsl
push
ds
mov
enter
aas
test
jb
fwait
sub
jno
fisttpl
mov
add
pop
push
cmp
cmp
push
or
lods
push
fdivp
or
test
or
test
dec
sbb
enter
out
sbb
pushf
addr16
jecxz
xchg
or
aad
adc
hlt
sbb
bound
or
xchg
mov
lea
sbbb
shlb
xchg
xlat
xor
xor
outsb
ds
mov
ret
push
adc
aas
push
pop
loop
fbld
mov
mov
jge
aam
or
je
je
ret
shlb
mov
xchg
cmp
test
cmp
pushf
int3
and
adc
push
sarb
jno
mov
xchg
lods
cmc
sbb
movsl
xlat
xchg
push
pop
cmp
push
pushf
xor
lret
push
cmpb
leave
xor
cmp
decl
repnz
pop
nop
push
xchg
adc
mov
mov
jno
sbb
cmp
inc
jl
js
push
xchg
fcomi
cltd
call
mov
adc
sbb
andb
aas
stc
jmp
popf
mov
daa
inc
pop
ret
jecxz
add
popf
mov
jbe
push
sub
mov
adc
inc
jns
cmp
push
xor
jg
xor
jg
add
stc
jecxz
xor
and
cmpsl
push
dec
jge
call
dec
push
jbe
and
cmc
sbb
pop
mov
sahf
rcrl
leave
rcl
pop
and
pop
sbb
or
sbb
add
and
dec
test
push
bound
dec
sbb
push
dec
cld
sbb
sahf
fisubs
jecxz,pt
mov
mov
idivl
push
xlat
inc
jp
mov
cmp
mov
in
lcall
test
mov
insl
movsb
lret
push
decl
pushf
cmp
mov
dec
pop
lret
dec
xchg
aam
shll
ret
pop
xor
es
loope
fcomps
cmp
sti
nop
sub
sbb
push
fwait
aad
enter
iret
ficoml
divb
out
push
cmp
mov
mov
sub
jne
mov
insb
not
mov
rorb
jle,pt
or
pop
push
cs
shrl
jmp
cmp
mov
ja
mov
cli
lret
aam
sbbb
push
daa
ss
stos
pop
push
jle
incl
cmp
inc
adc
addr16
iret
sarl
adc
les
in
cmp
lahf
add
mov
dec
mov
jg
daa
cmpb
addr16
iret
sarl
adc
rolb
xor
add
aas
incb
fnstsw
call
ljmp
push
ja
xor
and
mov
jo
dec
sub
lahf
pushf
mov
pusha
pop
call
push
fldcw
lretw
imul
cld
jno
dec
jbe
mov
fdivrp
fs
sahf
movsb
and
lock
and
push
pushf
mov
mov
leave
pop
in
push
jns
nop
fistpl
sub
cld
icebp
pushf
xchg
in
pop
mov
bnd
mov
sub
inc
pop
inc
mov
scas
icebp
lods
push
pop
into
push
icebp
jmp
stos
inc
pop
and
jns
mov
dec
mov
dec
pop
movsb
mov
pop
popw
and
bound
lods
test
dec
inc
lock
dec
push
jns
js
mov
popa
fwait
dec
adc
or
cmpsl
adc
mov
aad
jnp
sbb
xchg
pop
or
mov
int
push
fisubrl
sti
cmp
addr16
and
aad
test
or
rclb
mov
arpl
cmpsb
add
xorl
ret
rolb
and
das
mov
rcrl
mov
scas
sub
push
int
push
jbe
jg
call
out
add
xchg
sbbb
jg
push
mov
ficompl
push
stos
cmc
push
dec
test
mov
es
pop
loopne
dec
in
hlt
cmp
loop
leave
out
sub
jnp
jno
jecxz
adc
sti
icebp
push
pop
sub
ficompl
clc
xchg
sbb
orl
and
fcom
test
das
sbb
es
pop
bound
test
lret
sbb
sbb
scas
mov
je
add
scas
stos
lcall
movsl
leave
mov
jge
inc
mov
pop
pop
push
and
sahf
mov
gs
pop
sub
jmp
pop
pop
bound
movsb
add
sub
pushf
add
inc
lods
xor
loope
xchg
shl
push
cld
lock
mov
sbb
movsl
xor
xchg
pop
cmp
movsb
mov
mov
popl
int
dec
jl
aaa
mov
rolb
dec
loop
mov
add
in
clc
inc
jl
push
sbb
out
add
mov
inc
mov
sub
or
push
in
dec
push
jno
fdivrs
out
movsb
xchg
mov
mov
jno
addr16
clc
lahf
mov
mov
sub
jge
stos
outsb
outsb
fucomip
pop
mov
cmp
and
jne
jo
mov
enter
imul
inc
push
xchg
adc
xor
stos
push
das
sub
pop
cmp
jbe
aad
in
shl
popf
push
dec
bound
xchg
ss
mov
pusha
test
jno
aam
mov
cmpsb
lods
mov
jl
cmp
arpl
out
inc
popf
xadd
js
fdivs
pop
int3
xor
xchg
pop
push
jae
fs
std
ss
call
ss
stos
inc
outsl
stos
and
mov
dec
xlat
jmp
rorl
cli
outsb
fisubrl
cmp
mov
lods
insl
lret
xchg
loopne
xchg
adc
xchg
stos
int
dec
xor
jle
loop
jmp
cmp
xchg
repz
out
pop
js
mov
inc
rclb
add
test
mov
mov
pushf
inc
adc
ja
test
sbb
shll
mov
sbbl
js
mov
xchg
push
lret
jecxz
andps
leave
dec
dec
jns
gs
dec
rcrl
test
xor
ss
ret
gs
repnz
test
ret
sbb
adc
xchg
cmp
pop
xchg
mov
jle
fbld
cmp
adc
movsl
cmp
adc
adc
stos
or
dec
mov
jg
jae
push
sbb
in
sub
lcall
shll
jg
rol
xor
xlat
sbb
and
push
jl
in
leave
sahf
shrl
stos
adc
cltd
in
out
mov
or
fidivs
movsb
shrl
imulb
mov
cmpsl
push
push
xor
cmp
es
or
adc
aad
pop
movl
inc
rorl
cwtl
pop
daa
jo
or
ljmp
rclb
fsts
adc
sarl
lds
ficompl
xchg
int
add
repz
loopne
lods
movsl
mov
cld
cmp
lret
popl
lea
loopne
pop
mov
and
in
loopne
jl
icebp
fwait
sbb
in
popf
test
int
dec
cli
in
mov
sub
xor
scas
sti
repnz
cmpl
roll
mov
xor
mov
sahf
outsl
sub
push
adc
jbe
add
jmp
pusha
cmpsb
jne
push
out
mov
dec
push
addr16
sar
jle
mov
lcall
je
out
pop
add
stc
inc
stos
xlat
notb
and
xor
lret
jb
loopne
fbld
and
dec
push
inc
adc
and
mov
cmp
loop
push
mov
out
sarb
ret
push
ja
test
pextrw
and
xchg
sbb
insl
sahf
sti
mov
pop
hlt
inc
mov
jecxz
xchg
pop
inc
lahf
pop
inc
mov
adc
popa
mov
xlat
mov
pusha
add
popa
mov
leave
inc
ror
and
xchg
mov
sbb
inc
dec
xor
aad
popa
sub
imul
adcb
movsl
arpl
push
add
pop
imul
or
adc
mov
iret
cvtps2pd
mov
xchg
jno
mov
push
adc
mov
hlt
dec
ret
fs
cli
mov
pop
sbb
mov
in
inc
cli
cmp
cmp
out
mov
xchg
int
xchg
scas
clc
push
loopne
fs
int
jnp
call
ficoms
pop
call
push
xlat
lahf
mov
add
negl
pop
aaa
aaa
ja
lret
sub
ljmp
inc
mov
gs
mov
mov
inc
stos
stc
and
jmp
cmp
mul
fmuls
js
enter
cld
sbb
into
ds
mov
dec
stc
in
enter
fwait
jp
mov
cmpsb
call
xor
mov
and
imul
daa
jg
push
je
push
test
mov
popf
jno
and
fcompl
sbb
movsb
cmp
fistpll
and
mov
ret
sbb
cmpsl
aaa
pop
mov
dec
xor
mov
fcoms
lret
jnp
pushf
cld
mov
xlat
mov
iret
push
xor
dec
into
jns
jp
jbe
lods
push
and
cmp
fwait
cwtl
jp
dec
adc
fisubl
xchg
pushf
mov
lods
add
sub
dec
out
xlat
ret
stos
int3
sbb
xchg
fs
ret
outsl
or
dec
push
inc
lods
addb
imul
and
loope
cmp
adc
fwait
cmp
adc
xchg
push
fninit
mov
lock
mov
cmc
xchg
fcomi
dec
insb
jns
ljmp
ret
dec
stos
inc
out
mov
add
rcrl
push
mov
scas
jns
cmp
mov
and
xchg
xchg
xor
int
fiaddl
popa
inc
ret
cld
and
test
pop
movsl
and
xchg
arpl
cltd
insl
pop
push
insb
mov
lret
rclb
lock
push
sbb
xchg
ficoms
jo
mov
pop
mov
int3
and
sub
andl
rcr
jns
cmpsl
and
insb
sbb
idivb
shrl
mov
or
xchg
pop
sbb
xor
sub
cmp
xchg
push
pusha
sub
loope
in
shll
aaa
out
aaa
stos
jmp
cld
icebp
out
pop
ja
pop
insl
int
lret
ret
ret
and
outsb
add
pop
imul
add
std
lcall
cmpsb
sub
xchg
mov
loope,pt
scas
jne
je
pushf
mov
xchg
cmpsb
cmc
inc
cmp
stos
fisubs
cmp
or
push
mov
push
enter
and
xor
repz
fnstcw
clc
das
xlat
ror
daa
mov
test
dec
sub
cmp
ds
out
xchg
push
mov
inc
clc
xchg
in
adcl
cmp
fwait
aas
mov
in
mov
or
adc
lock
aad
fbld
std
pusha
jb
mov
repz
stc
pop
xchg
and
push
test
mov
mov
setbe
pop
push
jae
and
mov
and
mov
pop
daa
cltd
jbe
movsl
jmp
repz
mov
cmp
stos
jb
scas
pop
jne
popf
mov
call
push
and
test
in
or
jae
cmpsl
add
cmpsb
clc
stos
das
aaa
outsl
imul
icebp
mov
mov
xchg
mov
loope
jnp
neg
fcmovnb
sbb
rcll
jg
ret
nop
shlb
pop
popf
jg
pop
rclb
add
in
or
mov
in
ljmp
lock
pop
scas
xchg
pusha
adc
sub
mov
inc
rol
dec
arpl
into
inc
jb
pushf
inc
push
int3
adc
decb
cwtl
sub
cmpl
xchg
movsb
push
push
pop
jns
mov
cmp
push
pop
jl
dec
stos
icebp
int
mov
in
sub
xchg
push
stos
cmp
pop
pop
shl
lock
xchg
test
sbb
inc
sbb
cli
cs
shll
int3
xchg
js
lods
negb
jb
sub
cvtps2pi
add
xor
ss
pop
repnz
adc
mov
xorl
lret
mov
ljmp
inc
sub
fwait
inc
adc
cmp
std
ljmp
pop
loopne
and
ss
enter
sarl
xor
out
les
xor
int3
dec
pop
pop
xchg
inc
arpl
mov
pop
push
mov
bound
sbb
scas
cs
iret
xchg
xchg
push
int3
popl
into
jmp
sub
xchg
loop
mov
test
add
arpl
rorl
xchg
push
loope
mov
jne
fcmovnbe
loope
pop
cmp
fwait
xchg
mov
push
adc
clc
fisubs
push
aam
jmp
mov
outsl
mov
repz
push
pop
xor
ret
push
int
cmp
jecxz
test
or
pop
xchg
pop
mov
fbld
dec
jmp
ficompl
insl
std
mov
imul
inc
push
adc
jno
xor
and
pop
jno
in
dec
sti
adc
lea
mov
shr
add
sbb
je
jno
pop
dec
jns
dec
into
hlt
inc
leave
add
mov
xchg
push
mov
dec
mov
cmpsb
xor
mov
pop
idiv
cmpsl
inc
xor
gs
sub
mov
fwait
inc
pop
jnp
mov
xchg
xor
xchg
arpl
dec
mov
mov
mov
out
pushl
sbb
lret
sarl
repz
sbb
and
pop
movsb
test
add
cmpsl
or
out
mov
out
dec
mov
ficompl
pop
cmp
sti
mov
pop
xchg
pop
fdivl
stc
mov
es
sub
aam
iret
ror
into
scas
data16
push
sbb
outsl
mov
call
sub
xlat
cmp
loope
cli
mov
pop
xorb
xchg
push
test
inc
jmp
dec
jmp
mov
fcmovu
mov
adc
jo
dec
arpl
and
pop
mov
aas
mov
movsb
push
mov
arpl
mov
mov
push
pop
jle
inc
adcl
mov
dec
stos
cmp
add
ficomps
sarl
fwait
jo
sti
call
mov
ja
fdivr
stos
push
iret
in
dec
cmpsb
and
nop
js
jle
mov
push
cld
ss
ret
aam
dec
stc
pop
push
lcall
shrb
sub
jg
into
sar
mov
adc
xor
sub
lds
or
sbb
xor
xchg
xor
lahf
pop
test
sti
cmp
or
out
add
mov
ja
pop
xor
adc
popf
lods
jmp
insl
dec
stos
das
int3
add
js
fucomp
jle
out
mov
pushf
xlat
ja
push
pop
fs
aam
inc
jecxz
sbb
inc
mov
cwtl
and
ficomps
repnz
in
std
xchg
subb
mov
mov
bound
adc
fistps
out
out
enter
pop
arpl
or
adc
sti
and
pushf
xor
xchg
mov
sti
clc
int3
cld
push
aad
jle
lret
out
pop
xlat
xchg
aaa
mov
loope
outsb
out
jo
ljmp
loop
jno
pop
shr
mov
call
or
add
in
bound
pop
cmp
adc
test
dec
xchg
or
or
inc
leave
les
xchg
out
out
out
rorb
adc
dec
push
je
push
data16
je
mov
pushf
movl
mov
mov
cld
xchg
loope
daa
lcall
lcall
adc
push
fadds
scas
aad
dec
or
iret
test
xchg
cltd
aaa
cmp
out
repz
js
out
movsl
cmp
aam
rcl
cmp
fisubrl
aam
lea
or
fcompl
scas
mov
jbe
mov
addr16
jp
dec
mov
pusha
and
lods
lea
dec
jmp
in
mov
test
addr16
jp
insb
add
inc
jo
call
jnp
and
imul
mov
in
lock
loopne
or
loope
xchg
add
push
call
xchg
adc
dec
add
xor
xchg
mov
ds
jb
pop
jne
jl
and
mov
es
or
xor
dec
add
jns
sti
pop
frstor
and
xlat
out
push
jmp
dec
and
jp
fbld
les
fisubl
dec
in
insb
loop
jge
ljmp
mov
cmpsl
cltd
mov
call
sahf
push
sbbb
sbb
push
sub
adc
pushf
cmp
roll
jbe
sbb
jae
in
and
push
loope
loop
jb
arpl
push
das
pop
and
outsl
gs
mov
sub
sub
add
addr16
push
and
lea
scas
ja
push
jo
dec
mov
xor
dec
mov
push
xchg
adc
rorl
outsb
gs
push
push
test
arpl
jge
inc
dec
jb
add
mov
mov
movsb
mov
push
xchg
sbb
insb
into
sbb
push
clc
xor
mov
mov
mov
adc
pop
and
dec
mov
movsl
int
dec
sbb
and
stos
int
sbb
pusha
outsb
dec
loop
push
mov
pushf
clc
xor
push
aaa
mov
and
out
ret
jle
cmpsb
inc
test
jle
sbb
add
sbb
xor
les
rcrb
adc
ljmp
insb
lock
je
mov
add
les
pop
push
les
and
pop
test
shrb
lret
subb
push
cli
sub
xchg
hlt
insl
and
dec
movsb
push
and
cmp
int3
mov
xchg
out
mov
and
fidivs
addr16
rorb
jle
imul
pusha
out
leave
cwtl
add
or
mov
incl
cli
out
pop
xchg
adc
movb
cmpsl
dec
cli
addr16
inc
fcomi
dec
int3
fiadds
movsl
sub
adc
and
cmp
push
and
dec
rcll
jge
mov
mov
mov
cmp
push
adcb
dec
push
rcrl
or
cmp
fcomps
aam
test
mov
arpl
in
pop
les
jae
lods
arpl
int3
and
not
orl
int
les
or
ret
ljmp
shrl
movsb
inc
xchg
out
mov
mov
sbb
adc
cmpl
mov
inc
imul
pop
mov
stos
in
movsl
lret
xchg
ret
dec
mul
fildll
xchg
fildl
adc
push
or
xchg
scas
in
xchg
es
mov
push
xorb
fisttps
in
sub
dec
vpmulhw
lock
addr16
stc
add
xchg
aas
add
insb
int
lods
adcb
xor
fisubrl
jb
stos
outsb
repz
test
ds
imul
aas
or
pop
insl
movsb
fs
lods
clc
or
insl
pushf
jp
inc
lods
inc
xchg
xchg
or
xchg
testb
mov
or
fimuls
shl
and
jne
cmp
testl
cs
push
lds
cmp
andps
sbbb
enter
mov
or
jns
mov
inc
dec
push
mov
adc
lods
mov
mov
or
test
dec
jge
mov
adc
movb
or
mov
outsb
pop
dec
std
dec
jae
dec
xor
adc
jecxz
lods
xor
mov
je
adc
outsl
jns
xchg
cmpl
das
ret
jmp
nop
jge
push
xor
repz
imul
mov
dec
mov
add
push
and
cltd
mov
mov
jg
cmp
ss
orl
je
stos
mov
jmp
xchg
pusha
push
jnp
mov
jmp
insl
push
sbb
push
sarl
loope
lcall
add
lock
cld
fwait
sti
in
dec
xchg
mov
fstps
xor
mov
add
fdivrs
sub
dec
movsl
cmp
pushl
mov
sbb
shlb
jbe
lods
pop
fcmove
jle
dec
mov
scas
mov
inc
mov
or
xor
adc
and
push
mov
rcr
test
sbb
cmpsl
xlat
or
xor
pop
mov
jge
mov
shll
cmp
xchg
clc
xchg
push
out
and
xor
arpl
out
icebp
xor
cli
imul
dec
xchg
iret
mov
push
iret
sbb
inc
xchg
xchg
stos
outsl
jg
movsl
adc
sub
call
out
or
cmc
mov
jnp
fists
push
ret
das
sub
mov
add
push
jno
and
out
in
inc
pop
xchg
or
push
jb
jle
pop
je
sahf
and
dec
into
out
arpl
ss
cmc
out
mov
rcll
jle
and
lret
dec
std
sub
jl,pt
jle
addr16
sub
ret
cwtl
inc
adc
pop
push
push
jne
or
cli
jmp
mov
sbb
aad
push
fstps
adc
xchg
arpl
push
xchg
cli
xchg
xchg
mov
lret
push
mov
mov
jl
mov
jmp
movsl
imul
sti
std
push
out
add
push
push
push
sub
inc
lock
mov
into
loope
adc
push
sahf
sbb
dec
out
push
iret
xchg
xor
jno
andl
daa
popa
roll
xchg
xchg
pop
or
rcll
cmc
xor
inc
xchg
fs
dec
pusha
cli
mov
lahf
lock
sub
push
mov
jp
loope,pn
mov
sub
imul
ds
adc
dec
mov
dec
cmp
popf
scas
push
xchg
adc
dec
xchg
lea
ljmp
sti
push
out
nopl
lea
jb
or
inc
lds
xor
mov
out
jp
test
xchg
pushf
loop
cmpsl
mov
dec
pop
ja
sbb
cwtl
lds
fcmovnu
stos
or
imul
clc
xchg
push
flds
jne
shll
sub
iret
outsb
fsub
xchg
pop
fnstenv
inc
mov
ret
rorl
and
iret
arpl
xor
sub
sub
repnz
pop
jmp
dec
popa
or
jl
cmp
fwait
cli
and
or
jg
inc
xor
outsl
mov
stc
cwtl
ret
mov
movsb
push
cs
sbb
lcall
push
popf
jo
jae
and
add
and
mov
mov
int
adc
xchg
pushf
daa
das
imul
rdmsr
push
movsb
fildl
inc
mov
pushf
shrl
in
or
testl
int3
jle
mov
jbe
sub
daa
clc
ret
push
add
pop
jl
push
inc
roll
pop
out
jp
mov
cwtl
xor
fistl
add
mov
icebp
pop
adc
rol
mov
out
sub
in
fisubs
mov
pop
test
sub
lcall
imul
xchg
pop
mov
cmpb
hlt
mov
lods
jg
adc
push
jb
add
fdivs
inc
and
push
fs
inc
shll
in
sti
ret
add
mov
clc
xlat
outsb
push
mov
jnp
ja
icebp
xor
cltd
xor
xlat
xor
inc
movsb
jae
imul
lods
inc
cld
int3
scas
pushf
jg
xchg
dec
and
sub
andb
dec
pop
fistl
add
mov
push
in
inc
mov
dec
dec
add
mov
aam
xchg
pop
in
fisubs
mov
pop
test
sub
in
mov
imul
inc
dec
subl
sub
leave
add
lret
mov
imul
sbb
pop
jo
mov
add
outsb
mov
or
int3
mov
test
inc
mov
ret
movb
mov
loope
inc
xchg
subl
dec
scas
cmp
test
xor
hlt
dec
out
sub
jmp
repz
pop
ret
dec
xchg
test
pop
dec
cmp
repnz
in
ds
mov
xchg
test
popa
xchg
pop
xchg
jns
push
out
dec
mov
pushf
dec
jo
sbbb
sahf
or
or
cmp
add
and
push
insl
lods
cmp
xchg
pushf
in
pop
mov
in
push
mov
cmpl
and
jp
sbb
push
clc
into
shrl
fcomi
pop
mov
sub
or
data16
pop
or
cmp
jmp
mov
xor
dec
and
mov
cmp
ja
das
addl
loop
xchg
pushf
daa
das
imul
or
mov
adc
loopne,pn
adc
daa
add
enter
movsl
out
out
jno
cmp
push
fcompl
enter
popa
ret
cs
test
push
test
xchg
imul
in
mov
fcompl
mov
inc
mov
mov
ret
pushf
cmc
negl
out
inc
mov
cmpsl
out
notb
out
cmpsl
add
sbb
xor
jecxz
popf
cmp
jp
std
pop
jle
sbb
fldl
inc
std
jo
pop
dec
push
jge
adc
ficoms
icebp
div
insl
mov
fimull
cld
pop
std
pop
mov
test
inc
int
push
shrl
add
js
xor
jmp
xor
mov
pop
pop
sbb
and
sbb
leave
mov
push
cltd
and
inc
shl
and
ja
sahf
in
xchg
xchg
xchg
in
mov
fwait
ja
jne
cld
popf
push
je
cmpl
xor
inc
mov
fmull
popf
sub
imul
jl
mov
mov
into
adc
stc
push
or
inc
push
scas
xlat
sarl
and
jle
das
adc
mov
lock
jp
jl
mov
pop
fildl
outsb
nop
ret
add
repnz
dec
mov
xchg
mov
xchg
mov
jmp
rcrl
pop
sub
insl
mov
mov
push
and
int
pop
daa
hlt
sbb
xor
incl
mov
loope
iret
ja
jge
jmp
div
outsb
pop
aas
in
lods
test
mov
data16
shrl
movsb
jno
nop
pop
aam
mov
and
and
mov
ljmp
pop
sti
or
loopne
sub
les
jb
js
or
push
mov
aaa
push
jmp
jle
push
jno
sbb
jbe
incl
in
arpl
mov
cmp
dec
ljmp
pop
aad
mov
loop
sbb
push
push
sub
or
inc
push
sbb
sbb
pop
jg
mov
mov
leave
pop
imul
movsb
sbb
out
nop
inc
xchg
aaa
in
or
mov
pop
fcmovbe
aam
inc
pop
pop
mov
mov
cli
int3
or
xchg
les
or
mov
lods
lock
xchg
lahf
push
jno
repz
addr16
dec
mov
adc
jmp
or
jns
jle
jecxz
mov
shlb
hlt
fsubrs
lahf
xchg
adc
xor
aaa
repnz
push
mov
loope
mov
enter
mov
jl
popa
and
scas
rcrb
pop
mov
iret
sbb
mov
mov
inc
inc
xor
repz
xor
rcll
rolb
inc
fiadds
cltd
movsb
repz
incb
jo
outsl
ret
sbb
gs
js
fidivl
jae
cmp
or
xor
cs
jl
pusha
popa
pop
dec
jae
push
add
adc
cs
sub
imul
leave
aad
test
mov
mov
dec
shl
fsubp
push
in
inc
loop
cmp
add
xor
stos
shr
jbe
insl
mov
xchg
push
ret
jbe
and
into
mov
and
push
jbe
mov
sub
call
jo
out
inc
lock
rol
and
mov
stos
int
dec
mov
pop
in
sbb
aaa
dec
loopne
shlb
jp
sbb
sbb
jle
int3
inc
xchg
mov
push
test
push
mov
add
push
adc
repnz
pop
and
js
enter
xchg
inc
xchg
add
andb
imul
std
les
xchg
xor
dec
arpl
fisttpll
jecxz
or
ret
sub
rcrb
pusha
outsb
in
cmp
dec
iret
inc
dec
dec
test
gs
shlb
ffreep
fidivs
out
mov
in
cmp
xchg
testb
lret
sti
popa
mov
xor
aas
dec
xor
es
mov
ss
mov
pop
stos
adc
sub
ss
dec
push
fsubs
imul
push
xor
inc
sbb
call
dec
incl
dec
fstl
mov
das
mov
add
mov
jnp
outsb
sub
ja
mov
je
cmpsb
fnclex
vpperm
push
cmp
add
movsl
xor
icebp
arpl
call
jnp
push
sub
in
test
inc
test
and
dec
sub
xor
adc
in
movb
push
cld
mov
lds
lret
and
adc
js
cmp
mov
jne
dec
inc
leave
pop
outsl
xchg
scas
adc
adc
in
dec
push
cmc
or
aad
adc
cmp
push
arpl
es
jl
mov
mov
shlb
shrl
pop
mov
mov
divl
stc
inc
cli
and
lea
js
aam
ret
jmp
in
dec
aaa
cmp
cwtl
in
cld
insl
icebp
addl
arpl
inc
mov
shll
push
stos
mulb
out
dec
jae
jo
imul
lahf
cmpsl
add
xchg
inc
aaa
fadd
pusha
cmpsl
and
lods
rorb
mov
pop
add
inc
jmp
aam
adc
adc
pop
xchg
std
nop
pop
mov
orb
ljmp
xor
std
pop
aaa
or
fdivrs
scas
cltd
pop
inc
loopne
jae
mov
push
or
xchg
cwtl
jle
push
xchg
lds
lods
sub
xchg
pusha
push
in
sbb
mov
pop
sbb
repz
mov
inc
cmpsl
sub
xchg
in
aad
test
pop
sbb
and
pop
or
insl
in
adc
movsb
xchg
data16
add
inc
jae
testb
adc
in
dec
ja
sub
jne
data16
xor
out
imul
stc
add
addl
push
test
sbb
push
push
cmp
push
leave
idiv
dec
xchg
xor
cmpsl
lock
or
idivb
adc
or
pop
call
in
sub
mov
jmp
adc
daa
jns
inc
stos
in
xchg
lret
adc
pop
ficompl
mov
push
les
jo
fnstcw
scas
or
jl
decb
inc
xchg
mov
insb
daa
scas
inc
addr16
mov
data16
movsl
sbb
xchg
mov
hlt
mov
scas
sahf
and
outsb
out
mov
adc
pop
cmovle
cmpsl
popf
mov
stos
and
inc
mov
jmp
outsl
addb
aam
lds
mov
xor
sahf
in
fs
mov
dec
or
enter
shll
testb
push
mov
xchg
mov
ja
mov
xor
stos
xchg
pop
lds
stos
xchg
movsb
mov
mov
fdivp
xor
fsubl
push
fnsave
ljmp
push
je
movsb
mov
adc
pop
mov
sbb
decl
or
xor
lret
push
cld
adc
call
sub
mov
add
rclb
out
dec
xchg
cs
lods
push
popa
pop
mov
adc
dec
jb
icebp
mov
je
stc
jge
pop
mov
mov
jle
stc
push
or
lea
push
dec
mov
and
jg
sbb
mov
imul
sub
dec
aaa
jg
xor
js,pn
xchg
add
cmpsb
enter
or
mov
pushf
mov
xor
xchg
bound
lret
loop
out
scas
xchg
popa
insl
addb
fsubrl
cld
inc
pop
loope
fwait
scas
dec
cltd
cmp
lods
adc
lcall
scas
int3
push
pusha
push
mov
imul
sbbl
sbb
inc
cmp
insb
sarl
orb
fcomps
mov
out
xor
push
arpl
iret
jg
dec
mov
ljmp
xchg
inc
push
dec
jge
xor
jns
adc
sbb
xchg
or
insb
xchg
mov
ss
xchg
cmp
push
lods
and
out
fstpt
and
imul
xor
in
rolb
pop
push
imul
pop
call
cmp
scas
movsb
cmp
xchg
or
mov
pop
sub
add
loope
jle
out
cmp
jmp
push
bound
sub
inc
repnz
rcr
and
not
adc
add
sub
push
imul
push
and
loop
and
inc
popf
add
jnp
inc
scas
mov
stos
loop
mov
lods
cmpsb
push
jge
xchg
nop
sbb
sub
test
dec
cmp
cli
adc
and
inc
jmp
and
mov
jo
int3
xorl
hlt
and
adc
or
xor
adc
sbb
ljmp
out
test
push
sbb
adc
pop
imul
sub
dec
rorb
test
imul
divl
pop
adc
cld
pushf
popa
aas
mov
cmpsl
cmp
and
je
adc
adc
out
adc
negl
add
out
dec
cmp
xchg
mov
movsb
aaa
pop
pushf
sbb
pop
jo
cmp
mov
mov
mov
in
jbe
sbb
push
mov
inc
ret
pop
mov
xchg
mov
into
pusha
jmp
lods
pop
xchg
mov
out
scas
loop
cmp
adc
int
rol
adc
mov
leave
lods
lret
sub
jl
jno
stos
dec
rcrl
imul
pop
test
dec
arpl
fisttpll
iret
cmp
push
sbb
xlat
dec
sub
cmp
push
mov
mov
bswap
xor
or
stc
xchg
xchg
xor
inc
clc
lcall
xor
lahf
cld
lods
mov
test
and
fisttps
repnz
in
cmp
test
imul
nop
xchg
pusha
xchg
inc
push
xchg
cwtl
lods
pusha
loopne
inc
cmp
ja
inc
xor
cmc
sub
mov
jno
test
sahf
mov
and
dec
xor
shrl
xor
ss
sbb
sar
or
xchg
inc
sbb
call
imul
lea
fptan
hlt
or
push
test
xchg
test
jge
stos
mov
fnstsw
in
test
and
xchg
cmpl
xor
mov
push
mov
mov
out
clc
stos
imul
adc
sti
ficomps
jle
push
mov
or
sbb
mov
or
js
cmp
pop
jns
lahf
inc
hlt
mov
mov
mov
xor
outsb
or
ja
jnp
or
mov
dec
pop
int3
ret
mov
fcmovbe
sbb
push
add
or
xchg
mov
nop
or
arpl
ret
mov
xor
push
daa
stc
jo
xchg
cmp
bound
push
aas
hlt
in
pop
inc
add
or
hlt
push
mov
mov
ljmp
xchg
cmp
mov
decb
cs
jns
scas
pop
jns
xor
fwait
xchg
mov
sub
lods
sbb
or
fs
pop
adc
out
icebp
call
jmp
in
dec
xor
xchg
out
push
jno
jecxz
add
shl
cltd
fsts
fmulp
in
popf
sbb
aam
jecxz
movsb
dec
adc
pushf
mov
inc
cld
ss
mov
xor
mov
mov
cwtl
jne
orb
arpl
xor
mov
jbe
test
xchg
jae
out
and
and
dec
out
adc
out
pop
mov
xchg
insb
or
inc
insl
jp
cmp
adc
cltd
sbb
jmp
adcb
pop
mov
js
push
mov
mov
xor
mov
movsl
mov
pop
out
dec
arpl
jle
or
data16
outsl
fsubl
iret
in
fwait
int3
push
jge
cmp
pop
push
arpl
adc
jae
iret
loope
fnstenv
or
insl
fs
jg
jl
jne
sbb
jnp
add
out
xchg
push
jecxz
imul
cmp
in
pop
in
mov
out
mov
sbb
psubd
inc
adc
outsb
push
rcrl
fistl
or
sbb
enter
lahf
hlt
inc
mov
adc
sub
sub
push
push
pop
nop
cmp
cld
aad
xlat
lret
xor
loopne
cs
addr16
xchg
mov
rolb
into
std
bound
insl
dec
lods
test
fidivl
lcall
dec
pop
add
xor
cltd
xor
push
nop
cmpsb
aas
pop
pop
data16
push
add
inc
push
imul
rclb
dec
inc
sti
cld
ret
and
inc
jns
mov
and
lahf
fstpl
mov
icebp
xchg
mov
push
jmp
jge
adc
lret
insl
fstpl
add
fisubs
and
jecxz
and
inc
sbb
adc
and
pop
cvttps2pi
insl
test
int
mov
mov
int3
pop
xor
xchg
sub
nop
iret
je
pop
incl
lds
testb
rcrl
and
test
sub
mov
mov
mov
lea
pop
ja
js
push
test
dec
push
lret
sbb
push
popa
push
push
pusha
out
ret
fnstsw
dec
test
xor
xchg
pop
adc
cltd
pop
outsl
add
jg
pop
int3
mov
int
mov
xchg
jne
add
add
jb
pop
pop
mov
imul
sbb
push
aas
or
dec
xor
popa
pop
bound
sub
inc
rcrb
int
dec
pop
out
out
fwait
dec
pop
cs
xor
xchg
jbe
jb
adc
in
inc
ss
ret
fldenv
xchg
lds
inc
dec
push
pop
adc
add
jle
inc
mov
test
sti
rclb
adc
jne
dec
in
sti
js
sub
roll
popa
add
inc
push
stos
and
fisubs
call
adc
xchg
jae
ljmp
xchg
cmp
and
jb
fsubr
ret
pushf
icebp
lods
dec
mov
stos
dec
dec
pop
add
inc
jb
sub
sbb
cmpb
icebp
les
fidivl
test
xchg
inc
sub
push
and
or
scas
adc
sbb
xor
lds
mov
outsl
das
dec
mov
mov
lcall
daa
cmpsl
fdivrs
xor
lahf
cmp
mov
mov
nop
test
lock
out
push
dec
push
fidivrs
xchg
in
jge
mov
js
mov
movsl
aam
xchg
movsl
xor
sub
out
sbb
icebp
sub
add
es
popl
clc
je
jo
sti
rorb
fs
aaa
insb
cmp
scas
in
dec
xchg
dec
dec
out
int
loop
inc
out
js
adc
cwtl
jmp
jmp
push
leave
mov
dec
sbb
loop
out
sahf
lcall
popa
aaa
hlt
in
push
sbb
shlb
sbb
sbb
and
cmp
lret
mov
pop
int
cli
out
sti
jle
icebp
scas
cmpsl
mov
lret
adc
cmp
fiadds
add
mov
inc
push
mov
hlt
mov
inc
cmp
sub
rcr
inc
pop
int3
lods
fs
pop
jno
add
sub
adc
out
cmp
call
mov
daa
mov
ret
inc
test
ds
mov
or
ret
or
pop
jmp
pop
lahf
push
cmp
mov
pop
shll
mov
popf
fdivr
adc
add
xchg
dec
imul
cmp
stc
jno
mov
lds
shlb
mov
out
cmpsb
dec
mov
mov
mov
jno
sub
dec
adc
xchg
and
daa
dec
xchg
mov
push
jnp
jnp
mov
mov
jbe
jg
call
sub
push
jge
sar
imul
daa
xor
mov
jecxz
inc
xchg
sub
imul
pop
pop
cli
mov
pop
leave
dec
jmp
movsl
ffreep
xor
das
loopne
mov
mov
loopne
bound
or
das
in
mov
mov
mov
aas
push
adc
sbb
push
mov
nop
clc
test
add
fidivl
mov
jecxz
and
fs
push
mov
dec
mov
sti
aad
sub
popa
outsb
xor
pushl
mov
pop
cmp
cmp
fmul
inc
stos
cwtl
mov
cmp
xor
cmp
push
jo
jle
dec
jecxz
insb
lret
jecxz
add
pushf
and
loopne
jp
aam
push
jle
insb
mov
fildll
out
adc
cmc
or
out
adc
test
into
sub
mov
imul
testb
sub
dec
mov
je
jecxz
push
dec
aas
out
pop
inc
jno
push
inc
je
xor
inc
mov
or
aaa
adcb
push
pushf
lock
sbb
and
scas
nop
or
xor
xchg
push
aaa
jmp
out
adc
xor
and
add
jae
sarl
add
insl
push
sti
mov
and
and
subl
push
sahf
cmpsb
lret
or
pop
cmpsb
pop
stc
shr
je
outsl
sti
mov
cmp
jle
mov
daa
int3
icebp
sub
icebp
inc
pop
cmp
out
xchg
lock
movsl
push
aam
mov
push
cli
add
cmp
or
adc
testl
cld
pushl
daa
push
mov
lea
pop
ja
or
adc
jno
aad
mov
aad
push
loope
push
stos
cmp
shll
pop
mov
das
and
mov
fstp
inc
xchg
cmpsb
nop
loopne
mov
dec
iret
pushf
jno
pop
rcrb
sub
mov
mov
dec
push
test
push
jg
aad
mov
cmp
inc
jge
add
ret
xor
push
test
ljmp
pop
addr16
jae
inc
xchg
cli
xchg
dec
out
add
lds
dec
repz
int3
jl
push
push
test
xchg
or
jp
adc
cwtl
rclb
pop
movsb
rclb
push
ja
mov
dec
push
div
lock
incl
mov
mov
pop
jb
shll
insl
scas
dec
mov
inc
jge
in
jnp
and
mov
aam
int3
mov
leave
cltd
shrw
lret
jg
addl
fisubs
sbb
ds
std
ja
ret
mov
inc
pop
fistl
mov
cmc
mov
dec
outsb
adc
or
iret
sarl
dec
or
jnp
les
stc
mov
fisttpl
mov
mov
cli
pop
call
dec
mov
leave
mov
push
add
add
pop
lahf
lock
xlat
lea
fwait
xor
lock
es
mov
cmovo
and
scas
cltd
and
push
add
cmp
mov
lea
mov
fldcw
xor
push
in
or
push
rclb
sbb
gs
stos
dec
std
xchg
divps
or
stos
jp,pt
xor
dec
push
pushf
and
jp
aas
jl
js
add
test
dec
std
or
ss
sub
mov
into
xor
daa
test
lods
jl
imul
repnz
xorb
and
xorl
push
cwtl
in
out
or
dec
cmpsb
add
mov
adc
xchg
push
jns
adc
dec
call
iret
mov
jle
aas
lret
lcall
jmp
cmp
mov
std
jns
hlt
mov
jbe
jl
cmpsl
xlat
xchg
stc
xchg
inc
xor
aas
pop
test
mov
imull
pop
add
pop
pop
lods
xchg
aam
clc
pop
mov
inc
mov
cmpsb
dec
mov
daa
lahf
push
iret
lds
ljmp
push
adc
dec
insb
add
cwtl
mov
loope
sub
cmp
stc
and
popf
cmp
in
sub
test
add
mov
mov
sbb
std
push
ds
mov
dec
pop
and
shll
sbb
popa
sub
aam
adc
mov
or
dec
sar
add
aaa
sti
sub
mov
xor
not
lds
dec
xor
popf
fldt
mov
ret
call
movsl
pinsrw
aas
outsb
mov
popf
jge
test
rclb
or
mov
push
sub
std
pop
or
imul
test
xor
pop
dec
mov
outsb
pop
add
add
xchg
fdivp
mov
dec
mov
mov
jbe
notl
mov
scas
icebp
daa
mov
sub
in
aas
iret
fwait
call
cwtl
xchg
mov
loop
cmc
pop
lret
lcall
push
mov
mov
sbb
enter
mov
adc
sub
pop
lret
adc
test
lock
cmp
movsl
mov
xchg
sar
mov
mov
add
push
or
or
jno
mov
sbb
stc
enter
sbb
scas
arpl
or
adc
repnz
mov
jle
stc
pop
xchg
sub
xorb
mov
iret
dec
addr16
dec
cmpsl
fsub
mov
inc
jmp
adc
inc
out
and
ja
add
mov
aaa
popf
ficomps
in
insb
inc
mov
out
sahf
mov
fidivrl
daa
pop
adc
popf
lcall
pop
or
cmpsl
sbb
xlat
movsl
sbb
je
negb
jbe
jmp
add
sub
or
sahf
dec
add
cmp
out
out
pop
xor
xor
aad
inc
inc
jmp
sbb
push
and
les
mov
sub
lock
rclb
push
call
pop
imul
arpl
push
push
mov
ja
imul
xor
shll
jle
lds
and
sbb
mov
mov
sbb
movsb
and
lret
xor
dec
repnz
loope
or
dec
sbb
jb
pusha
das
jle
push
and
cmp
addr16
mov
pop
jns
aad
sub
ss
sbb
mov
scas
dec
aad
or
jae
xchg
shlb
sub
imul
xor
fidivrs
or
jge
lock
jle
sub
std
inc
inc
test
push
fs
xchg
in
dec
outsb
test
sti
leave
or
dec
dec
sub
loope
lds
push
xor
test
cmp
cwtl
xor
pushf
scas
cmpsl
or
lret
dec
sbb
and
fwait
mov
add
fcomps
out
cmp
js
jne
or
shll
push
popf
pop
ja
mov
push
jg
aaa
and
push
mov
xchg
pop
fcomps
lea
aam
cmpb
xor
out
xchg
pop
repnz
jecxz
ror
outsl
test
jge
xchg
sub
into
push
or
arpl
fisttpl
cmpsb
xor
nop
xor
imul
cltd
jb
push
enter
push
cld
adc
arpl
sbb
out
push
aam
xchg
jp
mov
sbb
outsl
mov
adc
out
outsl
mov
sub
and
dec
ret
sub
inc
mov
mov
mov
push
push
sbb
adc
adc
aaa
or
push
cmp
test
mov
jmp
loopne
test
xor
mov
and
in
or
push
or
xchg
ret
and
or
inc
push
push
adcl
push
xor
xchg
cwtl
sub
jge
fdivs
in
mov
pop
out
aas
dec
jne
pop
or
lock
fisttpl
fildl
jo
inc
jecxz
mov
ret
mov
in
enter
dec
iret
aam
or
push
test
mov
and
stos
push
mov
cmp
dec
in
sub
sbbl
jl
gs
rorb
mov
xlat
cbtw
subl
das
fyl2xp1
sti
push
aas
in
pushl
loop
push
jp
loopne
dec
mov
ljmp
repz
rcrb
repnz
jle
cmp
fwait
inc
cmp
inc
cmpsl
mov
and
push
jp
mov
and
lret
mov
mov
mov
push
jle
pop
ljmp
jg
adc
mov
add
sbb
fistpll
sub
enter
sbbl
cmc
xchg
in
adc
push
inc
xchg
or
and
xchg
mov
fsubs
fdivl
rsm
fldt
mov
adcb
orps
jecxz
jecxz
movsl
into
sti
or
lock
mov
pushf
pop
cmpsl
ds
stos
movsl
xlat
hlt
ficoms
bnd
inc
xchg
dec
sbb
mov
cwtl
cmp
jns
sub
xchg
int3
xor
scas
movsb
jbe
sbbb
in
adc
stc
icebp
fcom
dec
fnstsw
sbb
pop
mov
mov
xor
lock
dec
pop
test
mov
outsb
lcall
or
bnd
jnp
jecxz
mov
lds
rolb
pop
jbe
mov
xchg
mov
in
inc
dec
mov
ret
dec
dec
lods
or
dec
jmp
xchg
sbb
mov
cmpsb
mov
out
movsb
push
xor
imul
mov
setle
fdivrs
xor
lods
jae
movsl
cmp
jno
inc
add
add
fs
insl
push
push
add
sub
dec
or
xor
pop
dec
dec
pop
pop
add
outsl
arpl
bound
mov
mov
mov
sbb
movsb
out
push
mov
mov
cmp
pop
xchg
movsl
ds
pop
or
xchg
inc
call
cmpsb
out
lcall
lock
and
jle
scas
out
jge
add
pop
cmpsb
push
cmpl
out
int3
lods
inc
inc
imul
jge
fadds
mov
inc
push
dec
sub
pop
push
stos
ss
adcb
xchg
cmp
je
fnsave
mov
cmp
jmp
mov
aad
mov
in
cmp
inc
lock
jns
out
mov
xor
pop
mov
imul
xchg
xor
inc
fsubrp
mov
scas
ret
in
push
cltd
mov
and
jno
in
sti
cwtl
jl
data16
pusha
movsl
jne
fsubl
movsl
in
adc
ret
insb
or
and
adc
jle
notl
jge
in
jle
and
cwtl
aam
int3
out
cs
pusha
jbe
dec
jno
daa
ja
imulb
data16
jl
mov
movsb
rorl
lret
xchg
je
negl
push
ret
cwtl
mov
cli
mov
test
clc
sub
in
je
pop
xchg
in
pop
jne
sbb
jp
xor
sub
rdpmc
sbbl
add
hlt
adc
ret
ljmp
push
aad
mov
loopne
imul
cs
and
pop
pusha
aas
mov
mov
mov
fsub
mov
xchg
test
push
xor
lahf
push
or
add
cwtl
pop
jmp
imul
stc
or
repnz
pop
jmp
pop
dec
sarl
push
movsl
xor
jg
mov
out
cwtl
jle
stc
int
lds
stos
out
mov
pop
out
fwait
into
sub
push
push
xor
mov
imul
push
popa
pop
les
shrb
out
and
movsl
pushf
mov
sbb
xchg
cmp
fbstp
ljmp
sbb
pusha
sbb
jle
fisttpll
or
cmp
lds
inc
movsb
and
mov
dec
lods
adc
daa
jg
push
lret
stos
pushf
in
lods
popl
jecxz
in
inc
add
mov
pop
ret
fnstenv
mov
enter
int3
cmp
mov
aam
dec
movsl
mov
subb
fnstsw
sub
mov
add
push
mov
xor
sbb
cmp
push
sti
outsl
pop
sbb
das
lret
mov
dec
mov
mov
add
push
add
cmp
and
out
in
lret
decb
lret
out
inc
sbb
dec
adc
repz
outsb
jbe
jne
lret
loopne
aad
es
add
fsubs
xchg
iret
andl
aas
cld
sarl
lea
ds
out
test
mulb
and
insl
pop
push
int3
jp
pop
sbb
loopne
rep
cmp
adc
fildll
dec
xchg
movsb
mov
movsl
lret
popa
adc
cltd
jge
pop
xor
mov
inc
or
mov
pop
xchg
leave
ljmp
push
cmp
sbb
jp
repz
sub
btc
ds
pop
gs
test
cld
xlat
out
and
orl
int
ss
pop
int
leave
sub
push
xor
sub
sbb
daa
fs
add
fistps
shrb
fcomp
filds
mov
jmp
test
and
mov
in
mov
or
pushfw
jb
pop
sub
sahf
adc
xchg
les
mov
jecxz
inc
pusha
push
sbb
addl
and
or
pop
xor
les
cli
filds
arpl
imul
push
fists
xchg
sub
jl
mov
fwait
iret
pop
scas
sub
xlat
sub
jmp
cmp
fldln2
les
cltd
inc
mov
aam
jl
stos
enter
and
call
or
cmp
sub
icebp
in
ret
loope
or
and
in
adc
adcl
cli
es
mov
mov
lds
add
fs
arpl
xchg
cs
or
mov
jns
pop
pop
cmp
or
dec
xchg
pop
or
adc
movw
ret
jmp
xchg
jmp
mov
xor
mov
mov
je
ds
push
lods
aas
loope
sarb
push
adcl
je
hlt
adc
fidivl
mov
cmp
loopne
jnp
pop
and
sbb
xlat
dec
loope
ficomps
jge
or
imul
in
lds
out
push
jg
scas
and
iret
mov
fcompl
dec
lock
inc
push
scas
xchg
outsl
fbstp
pop
stc
lods
shll
idiv
in
mov
jb
cmpsb
gs
mov
cltd
mov
out
out
inc
aas
jle
adc
das
sbbl
pop
jle
push
jmp
cmp
mov
jns
dec
or
add
jnp
mov
xor
adc
xchg
xor
jnp
popf
jecxz
add
pushl
jno
and
arpl
lret
lret
adc
push
mov
xor
xor
push
jae
fidivl
push
push
daa
vcvtdq2ps
push
pop
xchg
mov
std
inc
fldcw
sbb
mov
sti
mov
jmp
mov
mov
aam
xchg
pop
jo
lods
sahf
mov
setbe
in
cmpsl
pop
sub
cwtl
lcall
enter
addr16
mov
loope
mov
jg
push
lret
mov
fs
push
inc
cmp
pop
xor
mov
mov
stos
mov
aam
je
loopne
jnp
mov
insl
fs
ss
add
jp
xor
mov
and
jno
je
sbb
sub
shrl
mov
mov
or
push
lret
push
jp
sbb
push
shl
dec
decl
ljmp
push
push
jp
xchg
adc
cmpsb
inc
fdivs
insb
adc
inc
out
jbe
pushf
sbb
int3
jne
lds
mov
pusha
fildll
mov
or
and
sub
out
xor
mov
subl
iret
data16
ror
mov
outsb
call
leave
pop
clc
sbb
mov
imul
xchg
cmpsl
test
testb
sub
sub
push
and
pop
repnz
mov
jnp
push
dec
cmp
shr
jp
mov
popa
or
mov
mov
sub
xchg
mov
mov
xchg
adcb
inc
push
pop
aad
cltd
popf
mov
ljmp
loop
into
and
movsl
jne
or
lock
xchg
mov
lcall
sbb
test
pop
mov
subb
and
scas
mov
xchg
jg
push
inc
andl
ds
aad
ds
pop
in
push
cmpb
fs
out
cmp
mov
dec
flds
ljmp
pusha
mov
xchg
xorb
test
add
arpl
mov
popa
jg
or
adc
pop
inc
decb
push
fs
das
cmp
fld
sahf
lea
test
repz
cs
jns
pop
and
ret
sti
hlt
cltd
xchg
mov
adc
add
imul
mov
fimuls
or
imulb
xchg
es
mov
adc
xchg
addb
jl
sbb
or
mov
push
mov
rolb
push
and
shl
addr16
gs
movsb
inc
fisubrl
push
push
inc
fidivrs
leave
xchg
fwait
ss
push
test
mov
test
test
shl
outsl
fs
imul
mov
test
lock
mov
mov
loop
pop
cmp
jb
mov
rcrb
add
out
lock
xchg
iret
pop
mov
inc
dec
cmpsl
rcr
loop
testl
and
jne,pt
test
ficompl
addl
sbbb
int
xchg
fstpt
mov
sbb
adc
sbb
daa
sbb
in
push
push
jg
ret
into
dec
pop
pop
sub
ret
pop
cmpsl
sti
or
aad
cmp
dec
stos
mov
mov
xor
jae
insl
push
mov
stc
in
adc
dec
xchg
inc
pop
jecxz
jno
sbb
fwait
mov
lock
popf
cmp
imul
lock
mov
cld
cs
sub
and
inc
mov
test
jbe
jne
out
outsb
and
cmp
inc
cli
mov
fldt
jae
xchg
pop
fwait
xchg
mov
cmpsb
les
or
fcomps
fadds
stos
xchg
dec
fisubs
sbb
inc
fmuls
popa
fs
and
pop
bound
imul
sub
mov
les
cmp
inc
fidivl
test
imul
aad
data16
and
pusha
xorb
mov
jg
scas
cmp
scas
and
cld
movsl
divb
jge
add
scas
aas
mov
jl
mov
cld
pop
pop
or
cli
btc
mov
pop
xchg
adc
out
inc
push
out
cs
cli
mov
jno
fimuls
cmp
inc
fs
inc
jge
lea
jns
cmp
rclb
cmp
fstpl
mov
cmp
cmc
aam
ljmp
inc
fstpt
mov
out
enter
rol
xchg
fcoml
xorb
or
jmp
fstpt
add
fwait
fwait
xchg
mov
add
mov
sub
jo
lea
inc
aas
fnsave
sbb
icebp
divl
inc
jmp
pop
fmuls
cmp
shrd
lea
fcomi
lret
lcall
mov
cmp
adc
cmp
pop
inc
adc
mov
ret
inc
je
cmc
sbb
dec
js
test
aas
pop
adc
and
mov
inc
xchg
mov
cmp
xchg
dec
jb
xchg
xor
mov
sub
icebp
jmp
xchg
mov
test
mov
or
lods
sbb
xor
and
jl
jae
pop
enter
mov
mov
test
cld
jl
jg
pop
inc
je
out
jns
cmpsb
cwtl
cmpsb
repz
adc
push
inc
xor
aas
sarb
sub
adc
xor
pop
imull
push
sti
xchg
fcoml
xor
xchg
mov
xchg
sub
pushf
add
mov
insl
sbb
push
ja
ficoms
or
mov
pop
fdivrl
lds
xor
aam
push
mov
jnp
ret
mov
add
cmp
lahf
sbb
push
cmpl
pusha
addr16
out
mov
scas
cs
dec
lock
push
jb
rorb
test
addl
and
scas
add
push
les
movsl
fsubrl
cs
out
pop
rcrb
test
mov
push
cmpsb
int
movsl
xlat
ljmp
in
movsb
je
inc
mov
or
add
lahf
scas
sbb
lcall
adc
les
and
xchg
ds
outsb
mov
dec
add
cmp
clc
lret
int3
fadd
pop
call
dec
cwtl
outsb
inc
xlat
cmp
ficoml
and
scas
scas
cmp
jo
aad
or
lods
pop
in
or
push
stc
xchg
inc
xor
jb
shl
ds
loop
or
loope
pop
fldpi
jns
push
testl
jp
sub
sbb
std
lods
fsubp
pop
rorl
mov
enter
cmp
addb
mov
cmp
ret
scas
clc
in
push
xor
push
fneni(8087
fisubrs
xchg
cmp
or
fsts
xor
dec
push
cmp
out
or
stos
loop
testl
out
scas
mov
ret
andnps
rclb
int3
imull
xorl
in
adc
inc
stc
incl
xchg
add
push
arpl
mov
aas
or
and
xchg
loopne
or
dec
int
insb
mov
pop
push
pop
mov
out
push
imul
inc
and
lcall
xor
jns
xchg
dec
mov
repnz
xchg
into
dec
xlat
dec
movsl
nop
leave
loopne
call
mov
aam
cmp
sub
pusha
sti
mov
lahf
aam
xchg
je
lods
sbb
popl
std
mov
jle
lret
daa
andl
sahf
xor
fdivrs
sbb
testl
adc
push
mov
push
add
lds
jnp
clc
dec
movsl
lcall
jge
int3
inc
lret
das
add
mov
inc
maxps
cmp
dec
mov
imul
jge
insl
ss
mov
and
jo
and
mov
xor
push
jle
jp
outsb
mov
mov
fisubs
fcmovbe
xlat
addr16
arpl
leave
mov
stos
fiadds
popf
mov
in
arpl
hlt
adc
xchg
jmp
insl
or
adcl
ljmp
push
icebp
and
out
pop
jne
int
fstpl
or
insl
adc
xchg
imul
insl
mov
sub
push
ja
xchg
hlt
out
ja
and
mov
push
loope
test
jmp
xor
into
push
ss
sub
pop
jne
rorb
lret
adc
das
negl
mov
or
adc
lcall
xor
mov
arpl
jecxz
imul
test
sbb
inc
test
insb
push
adc
inc
pusha
xor
mov
pop
adc
pushl
gs
or
test
inc
inc
stc
loopne
sar
mov
fcomi
mov
imul
dec
cmp
xchg
mov
ljmp
jns
ss
iret
xor
sbb
push
nop
rolb
ror
pop
mov
adc
loopne
popa
in
push
push
sbb
and
adc
add
or
je
pushf
aas
data16
out
lock
pop
fdivl
push
call
push
sub
pop
rcrl
pop
je
pop
imul
outsl
adcl
call
xchg
aam
sbb
cmc
mov
orb
je
lods
and
push
push
cmp
add
daa
xor
mov
push
push
fs
sbb
xor
fs
notb
iret
into
lea
imul
add
xchg
mov
pop
cmpsb
jns
pop
and
lret
fs
js
and
mov
gs
and
rcll
xlat
scas
pop
scas
and
enter
inc
out
inc
mov
loop
repnz
add
sahf
das
testb
dec
push
mov
or
negl
mov
decl
jbe
push
adc
das
mov
repnz
fimull
push
push
je
cmpsl
cmp
loopne
mov
xor
sbb
pop
push
cmp
aaa
xor
inc
add
inc
cld
and
loopne
mov
sbb
popf
inc
adc
jnp
insb
adc
imulb
into
movsl
xor
add
outsb
aaa
push
fistpll
inc
pop
pop
scas
test
out
pop
adc
bound
hlt
sub
and
int
push
in
sti
sbb
sub
or
mov
dec
orb
fldenv
push
inc
les
sarb
icebp
cld
hlt
add
out
and
dec
push
xchg
or
sbb
loopne
shlb
cmp
in
cmpsb
pop
insl
into
testb
aas
sub
push
dec
sbb
mov
and
aam
jb
push
out
lret
cltd
jecxz
mov
rorl
add
js
pop
jb
xchg
lret
inc
xor
imul
orb
sbb
xlat
or
jb
fiadds
bound
loopne
sub
loop
sbb
out
lds
icebp
cmp
and
adc
sbb
fcoml
movsl
in
divb
fisubrs
dec
jg
cwtl
and
shl
add
or
xchg
pusha
mov
fistps
pusha
clc
jne
xchg
xor
loop
cmp
ds
jbe
mov
or
outsb
les
jg
es
sbb
repz
out
cmp
popf
or
movsl
leave
inc
sarl
or
mov
cs
fildll
cmpb
jg
inc
xor
inc
iret
inc
out
test
pop
sarb
dec
into
and
stos
outsb
loope
cmp
push
xchg
lds
popa
int3
dec
inc
mov
cmp
or
inc
mov
pop
add
in
xchg
xchg
popf
mov
movsb
mov
lock
jmp
insl
mov
fisubrl
push
sub
cs
fwait
sahf
xor
jb
add
mov
mov
pop
sub
call
repnz
sbb
fisubl
push
jle
lods
pop
xor
adc
loop
daa
in
mov
test
add
loop
shll
test
push
sbb
enter
mov
pop
mov
pop
jmp
lahf
xor
les
test
mov
add
fidivrl
dec
and
adc
aad
pop
lcall
test
push
pop
jb
rorb
add
adc
adc
fnstsw
pop
in
mov
ja
leave
cmp
popf
lret
mov
xchg
push
xchg
ja
hlt
jg
arpl
lds
sbb
mov
enter
xor
jns
pop
mov
les
sbb
add
mov
scas
add
pop
and
mov
mov
push
mov
stos
push
nop
iret
add
pop
addr16
add
cmc
shrb
and
es
mov
add
movsb
xchg
sub
mov
test
cmp
add
xor
xor
jge
inc
popa
push
jno
scas
pop
mov
pop
mov
add
test
mul
lcall
repz
add
je
cs
jo
push
fstpl
outsb
loop
xor
jl
pop
and
lcall
adc
sub
adc
dec
stc
add
aaa
notl
mov
rclb
aad
push
pop
jle
push
out
stos
or
adc
and
clc
scas
pop
xor
mov
jecxz
pusha
lcall
pop
mov
das
dec
mov
lahf
pop
push
adc
insb
icebp
mov
test
enter
cmp
lcall
pushf
out
fisttps
es
xlat
pop
mov
cltd
xor
cli
mov
and
in
stos
cltd
mov
inc
mov
mov
sbb
sahf
testl
punpckhwd
add
cmpsb
xchg
cld
push
loopne
mov
cltd
mov
xor
push
loopne
cmc
ja
and
idiv
lods
mov
outsl
jle
stos
je
jne
jns
inc
sbb
sub
roll
pop
insl
loopne
mov
sub
add
fistps
pusha
jo
xchg
dec
xchg
test
negb
xor
mov
ds
and
fists
lds
inc
repz
loope
loope
dec
push
cltd
cmc
stos
enter
leave
gs
sti
clc
cmp
ds
pop
mov
xchg
in
dec
test
dec
outsb
and
or
push
or
mov
enter
jnp
pop
scas
es
cld
or
imul
pusha
xor
mov
scas
fwait
adc
negl
int
mov
scas
movsl
mov
pop
push
mov
aam
addr16
dec
leave
hlt
mov
xchg
cmp
jmp
adc
fisubrs
inc
mov
scas
out
popf
sub
mov
cmc
or
push
call
adc
rclb
mov
mov
out
adc
sbb
mov
jle
mov
cmp
sub
pop
push
or
data16
pop
mov
jmp
mov
mov
pop
sub
push
je
aad
pop
mov
int
mov
pop
insl
outsb
dec
jbe
lods
sub
add
or
sbb
insl
fs
in
out
cltd
mov
loopne
aaa
mov
xchg
popa
insl
cmp
mov
xor
cltd
dec
xor
fs
in
mov
sub
daa
call
push
in
and
mov
push
jae
cli
scas
adc
xchg
dec
and
nop
fnstenv
mov
xchg
clc
mov
pop
je
and
push
sub
and
xor
xchg
mov
addr16
cs
inc
pop
or
mov
ret
cmp
inc
out
loopne
sub
into
hlt
push
pop
dec
call
out
test
mov
loop
push
hlt
nop
ret
iret
das
iret
push
les
roll
sti
push
call
bound
add
sbb
cwtl
pusha
fldcw
movsl
cli
and
add
mov
lock
mov
int
lock
leave
inc
scas
stos
sbb
mov
or
lcall
lods
aad
cmp
push
pop
or
or
cmc
mov
nop
movsl
scas
js
adc
sti
psrad
jmp
adc
jnp
mov
popf
popa
add
cs
fsubrl
clc
mov
mov
mov
add
push
xchg
mov
daa
jge
lea
clc
cmc
cmpsl
cwtl
lds
ja
int3
and
gs
or
icebp
lahf
xchg
sbb
pop
repz
out
cmpsl
and
or
clc
mov
pop
xor
std
mov
nop
cmpsl
xchg
lret
add
add
cmp
stos
inc
xchg
mov
mov
jnp
mov
sub
xor
push
or
pop
cmpl
scas
fnstsw
push
mov
ja
sbb
xchg
inc
xor
jb
scas
xchg
in
sub
xchg
cld
pop
jne
inc
test
xlat
and
inc
xor
fstpt
lahf
out
and
stc
cmp
sbb
push
inc
jno
xchg
cmpsl
cli
aam
mov
clc
jno
aam
sahf
dec
ror
fs
leave
push
add
js
jmp
jmp
push
push
pop
cmp
cmc
pop
sub
into
addr16
sbb
mov
jmp
ret
sbb
sbb
imul
loope
pop
push
int
cmp
mov
cmp
lds
aad
aaa
cmp
pusha
and
repz
sahf
or
and
rcrb
dec
jg
xchg
dec
lods
stos
cld
jg
or
mov
ja
xchg
xor
add
add
cmp
inc
subb
inc
imul
pop
in
les
jae
pop
int
push
jge
adcb
or
lea
insb
aad
lds
lret
jo
push
sub
mov
test
inc
rorl
push
jge
adc
add
cwtl
sub
leave
xchg
int
push
adc
cmc
or
es
lods
aam
jns
andl
into
imul
dec
dec
or
xchg
out
lret
adc
in
jl
outsl
or
jae
movl
ljmp
cmpsl
ds
fildll
jae
adc
lods
pusha
ss
adc
shll
inc
mov
stos
sbb
popf
jmp
xchg
into
test
xchg
hlt
adc
fcmovne
dec
push
sbb
adc
in
jge
cmp
test
int
clc
xchg
nop
sbb
popf
int
lods
push
das
or
lods
sub
fcomps
sbb
push
xchg
add
fiaddl
add
mov
xchg
mov
pop
fnstsw
andl
mov
xor
call
pop
loopne
inc
in
cmpsb
inc
aaa
xor
sbb
sbb
and
pop
ficomps
mov
jl
xchg
inc
xlat
ret
popf
std
sbb
sub
jp
and
scas
jmp
adc
nop
cmp
in
fwait
in
filds
jg
add
in
in
leave
push
jp
lock
xor
sti
fimuls
pop
in
aad
out
and
jg
sti
in
out
or
cmc
add
ja
xchg
loope
mov
icebp
ja
loop
imulb
or
arpl
jge
jno
fsubs
jbe
dec
xor
pop
imulb
iret
insb
jl
fists
divl
push
cwtl
xchg
jae
sub
mov
push
jecxz
pop
divb
sbb
jge
push
in
sarb
mov
xor
cmp
movsb
lods
lret
dec
pop
and
xorl
xchg
jb
fidivrl
std
xor
cs
stos
push
fdivs
or
adc
imul
test
xchg
aaa
pop
push
test
ja
push
loopne
fwait
mov
imul
fcoml
ror
push
inc
sbb
jle
test
fisttps
or
adc
sbbl
push
xor
mov
jmp
push
sbb
gs
mov
xchg
or
fs
sub
insb
cmp
out
aad
iret
lods
sbb
inc
jl
and
hlt
cmp
js
test
pop
jmp
movsb
mov
xor
mov
fisttps
push
stc
adc
pop
sub
inc
enter
mov
enter
xchg
cmp
xchg
pop
out
and
add
sub
dec
and
sub
fistpll
mov
adc
aaa
and
push
pop
je
sub
pop
leave
inc
sahf
lock
add
pop
and
popa
sarl
xchg
mov
mov
cvttps2pi
pmullw
xchg
jbe
stos
fimuls
add
lret
shll
out
in
movsl
sub
ljmp
call
dec
mov
enter
cld
into
or
adc
lods
lods
inc
cmpb
dec
aam
xchg
pushf
loop
pop
push
fdivr
jge
fimuls
ljmp
mov
je
mov
inc
ret
and
sbbb
dec
out
mov
in
jp
jo
lods
sub
cs
aad
arpl
jne
sbb
pusha
arpl
outsb
add
repz
cmc
lahf
push
dec
sti
xor
pop
frstor
sbb
out
lahf
inc
xchg
cmp
lods
sbb
cli
scas
lds
rclb
mov
jb
inc
sbb
cmpl
mov
inc
orl
es
adc
jge
xor
and
and
add
adc
int3
jo
cmp
int
mov
dec
cltd
sub
aad
inc
push
cwtl
and
cmpsl
je
cmpsl
xor
mov
pop
xor
cmpsl
repnz
cmpsl
mov
add
pusha
out
jno
mov
out
subb
sub
fs
inc
mov
sub
call
je
scas
inc
mov
pop
gs
or
xor
jmp
dec
mov
sti
pop
es
dec
mov
cmp
sub
and
jb
jae
call
pop
cmpsb
int3
popf
xchg
mov
pop
cmpsl
loope
stc
xchg
or
push
pop
jbe
pusha
add
jl
fisttpl
mov
lret
repz
mov
jae
pop
cmp
stc
xchg
sub
addb
push
and
xor
fdivs
mov
mov
pop
in
sub
jbe
pop
scas
cmp
push
mov
rol
ss
dec
addr16
sbb
add
xor
pop
and
es
aam
fidivrs
mov
cmpsb
fcmovu
movsb
dec
add
sbb
inc
cmp
ja
mov
inc
push
mov
sbb
mov
sub
pusha
pop
int3
xchg
ja
popf
jbe
gs
scas
pop
js
add
sub
xor
push
push
arpl
xor
lcall
sbb
adc
jge
shll
ja
nop
imul
popf
push
xor
test
dec
shl
outsl
fs
dec
sub
adc
bound
cmp
or
jo
imul
incb
in
les
inc
mov
dec
and
jle
insb
insb
mov
popf
sbb
jmp
sub
movsl
dec
mov
dec
mov
loopne
js
or
adc
mov
mov
ja
cmp
sbb
lods
sbb
push
cmpl
mov
xchg
cmpsb
adc
std
aaa
add
lcall
scas
xchg
push
cmp
mov
arpl
int
jl
cmp
xchg
push
enter
aad
mov
push
arpl
sbb
dec
out
lea
out
or
jecxz
cmpsb
inc
jnp
outsl
inc
xchg
and
mov
ljmp
js
pop
stc
int
outsl
adc
adc
xor
mov
fldenv
fildl
dec
xor
loope
sub
xor
ret
xchg
icebp
or
jnp
sub
cli
add
into
out
push
mov
mov
and
xlat
sub
and
stos
mov
popa
or
cmp
sahf
or
aas
popf
mov
xlat
mov
jp
xor
xor
xlat
jnp
cld
fisttpll
lahf
mov
test
pop
ret
adc
or
jecxz
jnp
mov
stc
fwait
orb
arpl
mov
fnstenv
xchg
push
into
jge
xchg
scas
fisubrs
outsl
xorb
ljmp
pop
cmp
fwait
popf
mov
pop
imulb
pop
push
divb
mov
imul
sti
lcall
sbb
sub
shll
cwtl
cmpl
dec
repz
pop
xchg
hlt
cmpsb
xchg
pop
test
in
in
popf
dec
push
ret
int
rcl
or
daa
fsubp
repz
mov
push
push
adc
imul
mov
inc
lock
cmp
sub
jo
mov
cld
mov
xchg
and
inc
dec
jne
pushf
bound
or
aam
pop
mov
mov
push
pusha
cmpsl
cwtl
xchg
ljmp
bound
icebp
cmp
mov
mov
stos
insb
xchg
jno
stos
cltd
xchg
daa
push
repz
rol
ffree
mov
dec
dec
mov
sahf
cmc
cmpsl
int
int3
aaa
jl
aas
lcall
jmp
jmp
add
out
adc
jbe
add
daa
dec
mov
dec
jge
add
lea
pop
imul
jg
mov
push
jae
ljmp
adc
jecxz
sub
add
bound
and
jno
sbb
cmpsl
cmpsb
sbb
adc
push
jne
sbb
inc
add
andl
xor
mov
push
xchg
sahf
ja
daa
arpl
mov
mov
cmp
mov
je
sahf
ret
sub
std
and
jo
lahf
or
cmp
mov
ret
mov
lcall
test
outsb
orb
xor
sub
cli
out
nop
aad
pop
pop
lret
or
mov
addr16
jge
add
rcll
mov
into
dec
push
lods
out
dec
jbe
aaa
cmp
sahf
pushf
xchg
arpl
loopne
sbb
ja
lret
mov
fwait
push
cmc
aad
mov
loopne
std
js
cmp
pop
jne
jecxz
rclb
adc
fisttpl
test
pop
decb
mov
or
sbb
in
sbb
imul
dec
nop
or
gs
and
imul
add
enter
mov
cmpsl
aam
or
dec
jne
dec
aaa
mov
mov
push
repnz
clc
pop
out
in
mov
arpl
mov
mov
inc
mov
insl
ret
sti
pop
cmpsl
std
imul
loop
and
jmp
lret
sti
pop
cmpsb
sbb
mov
enter
sub
insb
or
not
test
into
cmpsl
jge
cmp
lock
into
test
int
or
push
add
repnz
cmp
ret
xor
ss
mov
fs
and
push
jmp
ds
lret
cld
sbb
and
and
pop
xchg
mov
pop
or
not
sub
push
fwait
cmp
out
js
xor
aaa
xor
dec
test
in
sub
imul
mov
inc
leave
cmp
int3
shrl
lret
aaa
mov
roll
js
sbb
out
lcall
mov
test
push
or
push
jns
xchg
lea
and
aam
imul
iret
arpl
adc
bound
in
pop
insb
data16
fs
push
cli
pop
mov
mov
add
adc
or
pop
jo
xor
loop
cli
out
or
jne
je
sub
push
out
jae
scas
cmp
sti
es
mov
andb
mov
pop
stos
jbe
addl
jmp
je
mov
cmpsl
mov
lods
jle
or
mov
push
and
scas
sbb
xchg
lahf
sub
xchg
jae
fisubl
mov
sar
pop
inc
arpl
leave
and
fdivl
push
test
jecxz
rclb
movsl
xchg
arpl
repnz
shrl
in
jns
fs
loop
out
push
sbb
push
pop
push
dec
mov
or
movsb
sbb
addb
stc
add
iret
or
add
test
jb
lods
loopne
scas
test
cmpsl
xor
fldt
loopne
loopne
add
les
jno
outsb
out
sbb
fiaddl
inc
adc
insb
out
xor
xchg
and
in
mov
adc
stc
mov
lretw
xlat
call
insl
divl
jns
xor
sbb
adc
leave
jae
bnd
bnd
jmp
popa
mov
icebp
mov
add
pop
jg
mov
rcr
ret
and
jb
xchg
pop
imul
mov
inc
gs
out
cmp
test
jp
lods
cmpsl
leave
jp
cmc
lds
sub
adc
jmp
dec
mov
hlt
repz
mov
jecxz
mov
cwtl
sbb
stc
jnp
lds
out
add
aas
ljmp
cmp
mov
arpl
sahf
lahf
fsubrs
push
dec
scas
cmp
dec
lds
fdiv
cmp
cmp
test
xchg
dec
jecxz
popf
jae
inc
cmp
and
push
stos
mov
aaa
clc
cmp
int3
stos
inc
lods
cmpsb
in
and
cmp
ret
jge
ljmp
out
sbb
or
pop
adc
add
out
movsb
aaa
pop
pushf
sbb
pop
call
inc
jnp
mov
cmpsl
es
inc
dec
aam
gs
xor
test
sti
movq
mov
fisttpll
gs
pcmpeqw
inc
sbb
push
push
or
sub
cs
push
sub
out
inc
xor
and
or
pusha
pop
inc
sti
rcl
rorl
dec
add
cltd
in
xchg
add
insb
mov
shll
arpl
and
aad
arpl
outsl
mov
mov
jl
jmp
ja
dec
cmp
lods
out
ljmp
pop
seta
pusha
into
sahf
inc
js
jle
dec
fcoml
xchg
add
adc
outsb
cltd
mov
iret
ja
push
orl
int
out
jo
mov
pop
shll
popf
std
adc
cs
test
fucom
pop
cltd
cs
movsl
pop
sub
int3
call
push
inc
inc
dec
stc
jo
sbb
hlt
add
in
adc
jbe
imul
xor
mul
pop
xchg
repnz
xchg
jge
orl
xchg
mov
add
out
std
pop
pop
lcall
lahf
pusha
sub
mov
add
mov
mov
je
xlat
xchg
inc
jnp
testl
ljmp
or
je
fnstcw
int
push
cmc
ficoml
push
mov
adc
rol
push
push
sti
and
sti
lods
xor
sub
shr
rcr
xor
fists
or
sbb
xchg
stos
jmp
jge
inc
push
add
nop
sub
or
cmpsl
pop
jns
lret
call
pusha
and
inc
xor
ljmp
inc
ret
jbe
ss
push
cld
push
mov
scas
jge
push
sub
jecxz
mov
xorb
xor
adc
int
cmp
add
iret
iret
sub
popa
xchg
dec
xchg
add
cld
sbb
add
xor
add
flds
fwait
arpl
les
je
jno
or
jae
sarl
jle
fmuls
adc
mov
movsb
aaa
pop
pushf
sbb
pop
add
lret
fdivl
add
sbb
push
sbbb
test
into
cwtl
add
int
mov
fs
and
pop
insl
imul
pop
and
fcoms
dec
pop
loopne
popa
push
out
add
fisubl
adc
aad
cli
dec
stos
addl
test
pop
xchg
xor
ds
xchg
add
test
xlat
bound
cltd
int
lcall
ret
add
dec
pop
or
ljmp
xchg
insb
fisttps
scas
fs
fldcw
jo
adc
jnp
insl
test
loop
mov
pop
into
arpl
push
inc
and
notl
rorl
fwait
js
pop
sbb
and
adc
push
shrb
xor
mov
cli
dec
lahf
mov
or
xchg
adc
movsl
add
bnd
jge
jecxz
xor
gs
dec
sub
pop
flds
pop
mov
ds
cmp
adc
push
lock
hlt
enter
fcmovu
cwtl
out
cmp
int
rolb
imul
add
pop
jecxz
cmpsb
push
push
inc
in
xchg
sbb
pop
cmpsl
pushf
loop
xor
shll
pop
ror
mov
mov
xchg
es
sbb
xor
mov
inc
mov
std
push
jne
mov
adc
cli
inc
pop
scas
enter
imul
mov
les
fidivs
mov
nop
pop
fs
fidivrl
scas
fsts
out
cmp
dec
add
js
mov
pop
add
inc
pop
jne
pop
inc
les
pop
xor
pop
add
lret
lds
bound
outsb
cli
inc
mov
sub
mov
dec
ds
and
in
jne
mov
xor
ret
test
cmp
adc
cmp
jnp
jecxz
adc
cmp
out
imul
push
jmp
inc
add
xchg
lcall
push
jnp
cmpsb
xchg
loopne
cmp
push
jnp
test
mov
push
pop
or
in
inc
jmp
js
add
sub
pusha
sub
out
fimull
dec
xchg
cs
data16
sahf
mov
cvttps2pi
popa
clc
or
mov
enter
xorl
add
test
inc
pop
fiaddl
xchg
shll
fwait
sub
cs
cwtl
popa
cmp
fbstp
aas
aad
jmp
popf
mov
sbb
mov
pop
push
movb
sub
rcll
popf
test
hlt
mov
loopne
xchg
adc
add
mov
xor
das
xor
in
fcmovbe
iret
push
xor
and
pop
dec
in
je
pop
sbb
cmp
inc
lcall
dec
dec
add
shrl
xchg
mov
xchg
subl
add
push
jbe
or
shl
dec
cmp
in
jp
push
andb
rcrb
mov
jae
adc
lret
or
and
jmp
fcmovb
into
imul
sbb
adcb
aad
scas
sbb
or
xchg
dec
ja
mov
insl
pop
rclb
mov
push
inc
xchg
fidivl
cmp
fbstp
popa
xchg
add
mov
sbb
int
les
or
or
imul
mov
cld
sbb
cmpsl
mov
btr
and
pop
dec
in
mov
xor
inc
lcall
dec
dec
add
shrl
adc
sbb
out
inc
push
test
and
jae
adc
sub
fldl2t
int3
push
call
pop
orl
jno
fmul
mov
mov
mov
dec
loop
movsl
mov
sub
je
scas
add
add
inc
aam
xchg
jb
cmp
inc
mov
or
and
popf
and
dec
inc
lods
add
imul
hlt
les
iret
xchg
pop
bound
les
xor
pop
or
in
push
cmp
push
leave
leave
add
iret
das
pop
xlat
cwtl
sbb
fs
sub
push
repz
test
jbe
push
movnti
xchg
ret
jo
jmp
jb
jge
or
movsb
cld
pop
test
lahf
icebp
sub
in
outsb
dec
jmp
mov
rcrl
fcmovnb
cmp
xor
sbb
push
imul
and
xchg
jge
xor
push
imul
fimuls
push
inc
xchg
aaa
or
lds
lea
lock
lods
scas
and
push
jne
int
lock
out
push
mov
imul
push
ss
notl
mov
inc
and
ret
mov
out
or
push
jnp
int
xchg
sbb
sahf
sahf
nop
mov
mov
aaa
mov
fidivs
iret
xchg
stc
jecxz
sarl
gs
ss
outsb
add
xor
ret
cs
sbb
roll
inc
pop
int3
push
mov
xchg
aad
and
test
sbb
lcall
jp
cwtl
cwtl
push
cltd
mov
lds
hlt
fcmovnb
push
and
and
jp
enter
pop
sti
cmp
aad
mov
jecxz
inc
sub
lcall
jne
insl
pop
movsl
sti
push
and
push
mov
sub
insl
mov
js
inc
xor
xchg
push
cmp
loope
loopne
push
fs
add
push
arpl
scas
loopne
cmp
aaa
mov
data16
jb
mov
xor
sbb
int3
outsl
mov
sbb
test
xchg
cwtl
cmp
leave
push
sbb
pop
shrb
mov
cmp
imul
cwtl
dec
and
jns
icebp
xchg
xchg
pop
push
sub
popa
jne
into
pop
mov
inc
push
mov
mov
push
in
lahf
jmp
add
fcmovnb
dec
lcall
jmp
and
inc
inc
inc
inc
repnz
bound
mov
ret
aam
dec
push
bound
cmp
cmp
ret
jns
pushf
mov
loop
push
enter
insl
xor
or
sub
orl
in
add
sbb
lcall
xchg
xchg
mov
out
sub
loope
dec
mov
and
lcall
and
or
adc
mov
xor
imul
loop
cmpsl
or
add
sub
mov
das
jl
jne
jbe
fwait
push
sub
push
jmp
xor
jno
outsb
cli
ljmp
xchg
enter
stos
shr
sbb
mov
fwait
repz
jp
mov
adc
gs
push
mov
add
es
popf
gs
movsb
jmp
int
mov
jbe
shlb
dec
bnd
dec
cmp
int
ret
pop
std
adc
adc
cs
mov
mov
or
ficompl
sbb
stos
cmc
aam
mov
xchg
lods
mov
mov
push
mov
mov
dec
lds
pop
and
jp
cmp
test
xchg
dec
jecxz
repz
sbb
and
add
cwtl
ljmp
enter
loopne
jg
cs
inc
pushf
pushf
out
mov
ds
ret
add
jno
jno
xchg
push
subb
push
ds
xor
outsb
iret
mov
popa
inc
pop
rclb
movsl
je
fldenv
sbb
or
push
mov
add
mov
xor
int3
and
loopne
enter
into
push
call
adcl
loopne
inc
jnp
daa
cmp
sbb
push
push
push
movsb
mov
andl
or
pop
push
cmp
jbe
push
mov
sbb
pop
xor
mov
mov
fstpl
mov
movsb
mov
mov
fcoml
lcall
js
icebp
push
cmp
dec
cmp
stos
inc
test
add
loope
cmc
inc
pop
lea
inc
adc
dec
xchg
adc
fs
das
shrl
stc
pusha
repnz
mov
pop
inc
mov
mov
test
in
jg
pop
xchg
sub
cli
aad
pushf
mov
leave
mov
loop
pushf
or
loop
mov
sbb
jp
lds
and
sbb
add
js
enter
push
arpl
jge
ret
dec
out
add
push
mov
lds
orb
mov
xchg
int3
imul
pop
mov
xlat
ret
mov
icebp
fcom
push
dec
imul
sti
pop
sub
pop
rolb
mov
jns
loopne
js
dec
pop
cwtl
jns
pop
into
add
cli
xor
movsl
pop
jne
in
mov
jmp
fcomi
es
xchg
pop
jb
nop
pushf
xor
fsubrl
fwait
leave
mov
dec
insl
sub
fwait
add
popa
or
scas
and
lods
sbb
xchg
aam
adc
fsubrs
ret
js
sub
mov
lock
loopne
jl
pop
into
xchg
mov
jae
fldl
mov
cmp
sub
inc
je
xorb
push
fwait
mov
fs
push
jne
jne
push
adc
mov
mov
mov
dec
out
mov
sahf
push
pop
mov
test
or
repz
xlat
aam
mov
sbb
xlat
int3
xchg
sub
inc
imul
cmp
cs
cmp
sub
mov
fisubrs
sub
pusha
cmp
or
cli
sbb
jecxz
cmp
iret
nop
or
sahf
enter
in
sarl
push
lret
lea
xor
cli
insl
jne
or
lods
roll
sub
daa
mov
mov
jbe
mov
sbb
out
pop
jne
and
int3
jae
daa
into
add
clc
das
mov
dec
insb
dec
sbb
xor
outsl
arpl
dec
xorl
xor
dec
cmc
xchg
mov
pop
into
mov
dec
pop
loop
pop
mov
orl
pop
add
fwait
sbb
test
cwtl
add
jo
add
xchg
loopne
add
into
mov
js
xchg
or
pusha
test
in
loop
je
stos
out
in
mov
ret
mov
cmp
jae
add
dec
adc
mov
ja
and
ret
rclb
sub
movsl
pusha
cmp
lahf
mov
push
into
aas
popa
stc
mov
jb
test
jnp
std
ja
pusha
mov
fldl2t
ror
xchg
jp
or
jl
scas
sbb
sbb
pusha
js
jecxz
mov
sbb
repnz
or
and
fiadds
adc
and
sub
les
stos
in
aas
jge
push
inc
dec
pop
sub
lods
push
mov
push
xor
cwtl
and
insb
mov
jp
fldl
jp
decb
pusha
repz
cmpl
pusha
les
sub
push
loop
fs
or
adc
shlb
cmp
sub
and
int
jp
ljmp
negl
movsb
lcall
lock
and
insb
sarl
push
inc
fsubs
cltd
pop
jne
sub
dec
adc
or
push
mov
pop
mov
ljmp
das
push
inc
sbb
mov
xor
enter
or
pop
lret
sahf
xor
add
and
in
push
imul
fbstp
xor
test
ds
jmp
lds
sbb
ljmp
jmp
cmp
gs
movsl
popa
or
jne
inc
cmp
jge
lret
pusha
aaa
cmc
fsts
inc
lahf
shr
mov
mov
pop
or
out
push
sbb
icebp
push
xor
sub
scas
jmp
dec
out
push
jg
mov
xchg
or
jb
mov
mov
daa
ret
and
loopne
mov
mov
or
xor
shrb
cltd
pop
mov
xchg
daa
addr16
sub
pop
lcall
push
das
mov
dec
fucomi
mov
pop
out
cltd
mov
mov
pop
adc
adc
mov
sti
or
dec
jnp
inc
outsl
out
pop
fists
sti
lahf
inc
sbb
daa
fucom
insl
mov
pop
sub
int3
pop
repz
cmp
inc
sbb
sbb
movsl
jae
sub
mov
cwtl
icebp
fisttpl
int
roll
mov
jecxz
adc
sbb
push
xchg
dec
xor
mov
add
jb
ret
mov
outsb
xchg
mov
rcll
mov
cmp
adcl
pop
mov
xchg
fldt
xchg
cld
mov
out
adc
mov
insb
dec
dec
bound
loope
push
rcl
test
mov
stos
loopw
mov
idivl
sub
std
movsb
cmp
and
dec
in
pop
dec
dec
cmp
aaa
data16
repnz
test
std
lods
adc
pop
mov
push
and
pop
sub
sub
adc
loop
shrl
xchg
push
pop
jb
mov
icebp
mov
ficoms
inc
loop
jno
pop
shr
gs
inc
popf
ss
out
scas
and
popf
addr16
cmp
xor
call
pause
inc
ja
pop
in
adc
ret
fs
movsb
in
std
sub
cmp
push
fs
sbb
or
xchg
js
mov
add
ret
inc
mov
mov
push
lcall
jp
clc
fisubs
inc
sub
hlt
lahf
jle
int
pop
sbb
sti
push
outsb
xor
mov
jnp
ficoml
cmp
xor
shrb
pop
pop
inc
outsb
or
sarb
xchg
push
pop
mov
push
into
hlt
adc
imul
std
xchg
push
fildll
loope
inc
outsb
call
mov
pop
out
dec
pop
push
push
outsb
mov
xor
add
out
fs
and
push
xor
mov
xlat
adc
mov
shl
inc
out
fstpl
aam
adc
fldt
cmpl
stc
push
fcomps
icebp
out
pusha
cwtl
dec
into
ja
mov
imul
mov
inc
out
xor
cmp
lock
adc
pop
or
roll
push
subb
and
xchg
data16
xchg
xchg
inc
add
adc
push
imul
cli
jnp
outsl
add
xorb
cmpsl
pop
pop
jle
or
sbb
mov
divb
pop
ljmp
add
sahf
cltd
pusha
and
outsl
jne
lret
sbb
push
test
out
jmp
jmp
add
xchg
pop
gs
adc
mov
cmp
push
push
stos
push
xchg
cli
jecxz
pushf
ret
pop
xchg
push
xorl
jmp
sbbl
and
xchg
lock
adc
push
jae
loop
popf
push
mov
pop
iret
dec
leave
mov
icebp
push
and
lret
mov
mull
lret
js
push
xchg
int3
xchg
pushf
adc
addr16
mov
jno
fidivrl
ja
in
les
rolw
dec
iret
arpl
shll
mov
popf
shlb
jmp
and
pop
hlt
leave
aaa
stos
mov
pop
cmp
sbb
fs
in
xor
push
sub
lock
xchg
xchg
dec
leave
mov
mov
cmp
pushf
cmp
pop
insl
dec
dec
cwtl
insl
ljmp
push
jnp
adc
jns
inc
or
cmp
divl
scas
jle
mov
inc
cmp
push
scas
jle
xchg
mov
movsb
ljmp
adc
adc
dec
add
adc
cmpsb
pop
sub
xchg
movsb
mov
cli
cwtl
inc
popa
jne
loopne
addr16
lock
and
and
leave
popa
xchg
orb
add
and
cmp
cwtl
jbe
std
and
pop
sbb
dec
jp
ret
mov
xchg
popa
js
cmp
mov
push
aas
pop
lea
addr16
inc
jg
je
jp,pn
and
std
int
clc
pop
dec
rcl
out
pop
jmp
sub
push
or
movsl
rcrl
out
data16
pop
or
into
mov
add
lock
dec
jns
call
jge
out
cmp
shl
pop
cmpsb
push
cmp
xchg
or
scas
pop
jmp
push
xchg
cld
addr16
lods
sahf
ljmp
xchg
jne
sahf
dec
roll
loop
mov
insl
popf
ljmp
push
repz
je
stos
push
in
lods
and
mov
sub
xor
push
cld
jge
cmp
shlb
orl
mov
pop
cltd
sub
scas
dec
xchg
pop
xor
fnstcw
inc
out
shl
sub
pop
outsb
loope
jo
loopne
mov
jecxz
mov
movsb
jnp
and
clc
cli
out
sub
add
sti
xchg
pushf
sahf
mov
mov
shlb
mov
mov
dec
adcl
fcoms
add
inc
fdivrs
sbb
push
cmc
pop
push
xor
mov
sub
bound
call
mov
dec
pop
dec
out
mov
mov
movsl
and
add
inc
inc
int3
mov
dec
mov
dec
xor
mov
icebp
sub
push
jns
inc
xor
add
xor
xor
aad
jle
lds
jns
pop
and
lock
adc
dec
cmp
sbb
sbb
inc
subb
or
scas
repz
pop
loopne
cli
dec
inc
mov
inc
push
insb
in
xorl
mov
lret
push
xchg
jp
imul
test
push
or
push
iret
pusha
iret
adc
xchg
dec
push
xchg
inc
roll
add
fadd
mov
fnsave
out
sbb
and
pop
data16
cmpl
idivb
out
or
sub
push
stos
and
ja
and
mov
inc
cmp
aad
cmpsb
enter
jnp
lcall
insl
mov
xor
lret
sub
ss
aas
add
mov
lods
adc
ss
cmp
push
xchg
xchg
lea
subl
scas
je
stos
lock
mov
cs
negb
pop
notl
fisttpl
icebp
jle
mov
loope
mov
rcll
xchg
mov
mov
mov
cmc
inc
rcrl
sub
push
xchg
loopne
sbb
jmp
outsb
les
mov
idivl
mov
sbb
loope
jl
nop
xor
mov
and
jmp
sbb
or
lahf
jp
inc
and
xor
scas
stc
jp
push
clc
jl
mov
sbb
loop
cli
shlb
es
push
call
repnz
jecxz
in
xor
ret
fsubrl
push
mov
sbb
adcb
inc
mov
lds
test
idiv
fimull
imul
pusha
push
xchg
ja
aam
es
fcmovbe
pop
lods
sub
fwait
cmp
orl
mov
ficoml
lret
into
arpl
outsl
stos
xchg
mov
sub
push
push
sbb
flds
jmp
in
sbb
inc
test
loope
ret
inc
clc
dec
sbb
or
sbb
or
or
mov
insb
shrl
pusha
scas
or
mov
add
out
hlt
jbe
mov
loop
xor
and
push
push
or
je
mov
xor
inc
pop
fwait
mov
and
ret
inc
scas
fisubrl
adc
or
push
jno
nop
fmull
dec
mov
fists
das
adc
or
mov
and
hlt
sub
insl
cmp
nop
sub
push
cltd
scas
bound
repnz
mov
mov
jno
lahf
test
pop
int
mov
dec
add
or
pushf
cmp
fisttps
hlt
loop
jb
cmp
jno
sub
js
and
push
push
in
dec
insl
push
pop
mov
aad
mov
lahf
call
and
fnop
incb
in
cmova
test
xchg
pop
shrl
stos
xlat
iret
pop
imul
insb
cld
mov
jnp
out
movsb
cmp
inc
sbb
mov
xor
popa
dec
dec
fdivl
inc
xchg
or
fidivl
mov
outsl
movsb
lea
lret
mov
roll
xchg
cmpsb
fdivrs
sbb
shl
sub
pop
push
leave
lods
sahf
sub
push
lret
test
and
push
sahf
inc
fidivl
iret
xor
lret
mov
cmc
mov
aas
or
movsl
loopne
test
out
push
xor
ret
push
stos
out
cwtl
jbe
fs
mov
leave
stos
stos
mov
dec
mov
push
fidivs
adc
rorl
xchg
mov
shrl
cs
hlt
pop
push
cmp
shll
pusha
inc
sub
ss
or
xor
xchg
into
flds
fsubrs
in
aad
cmp
push
inc
idivb
enter
sbb
sub
testl
out
pop
lock
pop
pusha
and
dec
push
cmpl
inc
orb
xor
sbb
or
out
out
cmc
lret
mov
jge
cmc
pop
into
xor
adc
push
push
add
pusha
xor
not
ret
inc
sahf
outsb
jecxz
push
xor
out
inc
add
das
movsb
in
ficomps
out
dec
adc
out
jge
in
pop
lret
jns
jo
push
sub
loope
jge
xchg
lods
cmpsl
pop
test
cmp
mov
push
imul
mov
outsb
test
sbb
inc
out
dec
mov
cs
jo
jno
fists
jne
mov
push
hlt
stos
das
pop
stc
fmulp
cwtl
rorl
push
stos
test
in
inc
nop
jnp
xchg
xchg
xlat
pop
sbb
movhps
xchg
rolb
outsl
push
lds
jge
ss
in
ljmp
and
and
push
loop
test
lods
pop
fldl
mov
loop
scas
es
into
dec
das
adc
add
es
sbb
xchg
addr16
mov
mov
int3
jno
imul
push
adc
popf
dec
or
sub
xlat
push
cmpsb
jne
sub
jnp
inc
lea
mov
imul
mov
aad
mov
xor
sahf
adc
repz
inc
sub
std
adc
inc
fs
subl
aas
inc
int3
mov
scas
popf
jns
movsb
jge
xor
sub
ret
icebp
imul
push
icebp
xchg
xor
scas
aaa
fists
pop
mov
cmpsl
push
test
ds
dec
in
push
in
rclb
pop
dec
pop
orl
fisubrl
dec
ret
push
pop
cmp
fld
pop
dec
repz
and
cmp
push
dec
test
add
jecxz
push
fs
subb
push
std
lret
sub
idivb
cmc
out
das
mov
dec
cmp
inc
fistl
fstpt
inc
cmpsb
mov
cmp
inc
jg
test
sub
adc
jnp
repz
repz
xchg
push
jno
adc
fisubs
movsb
inc
xchg
fwait
lret
xchg
leave
ror
loop
add
lea
rorl
push
or
insl
ss
popf
test
xchg
pop
aad
sub
mov
mov
jae
and
pushf
or
in
push
ds
jecxz
int3
clc
cmp
jne
imul
arpl
loope
mov
fnop
incb
in
scas
mov
dec
pop
pop
xchg
xchg
arpl
lcall
jno
test
in
jb
ret
and
fldl
jge
inc
mov
or
jo
or
call
test
fisubl
ljmp
push
ss
aas
inc
pop
fidivrl
pop
ss
shrl
mov
or
rcr
mov
and
sub
adc
cmp
outsl
fcoms
push
mov
es
inc
lods
rol
mov
pop
pop
ret
aaa
push
xchg
lock
loope
lods
test
xor
pop
add
into
pop
fs
cld
push
xor
or
pop
fldt
ljmp
mov
movsl
popa
add
enter
inc
les
mov
jg
mov
mov
seta
sbb
jl
inc
mov
scas
into
xchg
push
inc
pushf
jo
stos
in
inc
add
adc
ja
std
inc
fldcw
sbb
adc
push
in
push
xor
cmp
mov
push
shlb
jmp
add
test
fistl
xor
push
inc
or
andl
inc
pop
push
aam
lods
jb
sbb
arpl
add
js
jle
mov
cwtl
jmp
mov
mov
lret
imul
push
sub
mov
xor
mov
loope
sub
fsubrs
mov
push
or
das
pusha
xchg
push
ret
ljmp
jno
bound
lods
bnd
imul
mov
divb
std
cmpsl
pop
push
or
pop
cwtl
sub
mov
lock
sti
xchg
insb
add
pop
insb
jl
xchg
mov
and
js
inc
add
jl
jl
mov
xor
out
das
les
shl
negb
pop
cmc
mov
and
xchg
pop
and
adcb
ds
jl
and
sub
jmp
jmp
jg
cmpsb
dec
arpl
shll
clc
mov
aad
mov
xor
test
dec
mov
push
scas
add
push
mov
xchg
push
sti
mov
pop
inc
arpl
or
or
add
or
test
dec
mov
jge
call
fidivrs
sbbl
rcrl
stc
push
andl
jl
out
popf
in
std
inc
mov
lret
mov
mov
push
jo
mov
adc
sub
stc
cmp
push
xchg
pop
int3
inc
popa
enter
stc
jmp
loopne
repz
hlt
push
cmpsb
jecxz
pushf
and
xchg
in
hlt
lds
pop
pop
lret
std
repnz
insl
subl
cmp
pop
and
pop
adc
cmp
lock
pop
std
clc
add
nop
call
lahf
loope
and
call
or
jno
lahf
cmp
push
xchg
dec
fs
out
sbb
insl
insl
mov
fbstp
shlb
xchg
and
nop
rol
fwait
out
imul
sub
pop
nop
movsl
push
or
fmuls
push
dec
mov
inc
loop
jne
dec
ljmp
repz
mov
sarb
adc
int3
sub
outsb
rorl
leave
wrmsr
add
cmp
sarb
push
cmp
xchg
nop
ficomps
push
push
sbb
shl
and
shlb
in
mov
push
inc
stc
jno
cmp
xorl
ja
aam
mov
sbb
xchg
sbb
jecxz
sub
lods
fdivr
popfw
jg
jb
and
repz
mov
mov
rcrl
xor
into
loopne
lret
push
mov
les
cli
sti
add
in
xchg
add
jae
xchg
dec
gs
jle
pop
mov
adc
push
jnp
fs
popf
or
insl
in
in
push
fmuls
cs
mov
cs
jg
dec
add
add
pop
jo
jl
loopne
je
cmp
out
std
and
push
mov
bound
sti
popf
push
and
pop
int
cmpsb
inc
fldenv
aad
mov
testb
arpl
xor
mov
xor
xor
outsb
xchg
cmpsl
inc
imul
mov
negl
testb
les
mov
outsb
mov
cmp
mov
insb
adc
sahf
int3
sahf
adc
dec
push
xchg
dec
add
aam
adc
daa
lods
sub
aaa
and
dec
pop
pusha
call
xor
inc
mov
or
inc
and
mov
xchg
aad
jae
and
or
jp
lods
jp
xchg
push
add
pop
cmp
roll
jne
inc
or
lahf
lods
xchg
mov
lret
xchg
js
sub
sti
lods
sbb
mov
data16
test
mul
mov
push
dec
ljmp
cld
pop
adcl
pop
sbb
es
cmpsb
cltd
insl
loopne
cs
xchg
sti
mov
std
neg
xchg
pop
cmp
div
add
or
jbe
cli
aas
fsubrs
orl
mov
fbld
push
jnp
mov
sbb
sbb
test
testb
cltd
jmp
inc
lods
js
shrl
add
daa
mov
push
stos
inc
xor
in
jl
and
mov
mov
mov
jne
outsb
loop
fdivrl
fmul
xchg
sub
and
pop
fmuls
outsb
inc
pop
wbinvd
sub
fstps
int
in
mov
ja
jg
mov
das
mov
mov
fisttpl
jae
jl
test
sub
fdivs
int3
jmp
pushf
sbb
xlat
lock
or
outsl
mov
movsl
bound
or
jecxz
scas
xchg
bound
and
xchg
pop
mov
sub
push
mov
fs
or
and
outsb
lds
fsubrs
js
cmpsl
push
outsl
out
mov
pusha
dec
loopne
stos
xchg
aaa
or
repz
xor
popf
inc
cmp
movsl
rcrb
loope
inc
rcrb
jmp
dec
adc
jg
and
add
call
inc
jnp
dec
lea
sub
andb
test
inc
xor
outsb
mov
mov
popa
nop
fs
cmp
dec
insb
iret
cmp
sbb
sub
xchg
nop
cmp
pop
xor
cmp
fdivrp
adc
jns
fwait
pop
loope
mov
addl
cmpsb
gs
inc
insl
dec
aad
sti
jo
flds
int
pop
aaa
xor
push
mov
dec
and
inc
adc
cmpsb
test
repz
mov
sub
xchg
mov
or
xchg
idiv
cmp
push
stos
sbb
out
push
fsubl
test
jp
adc
sub
inc
insl
lcall
arpl
pop
jle
mov
mov
mov
rcrl
sbb
jp
adcb
jo
jge
stos
in
push
or
add
push
pushf
mov
minps
arpl
movsb
jle
lds
xor
dec
sub
mov
out
pop
loop
arpl
lret
scas
sti
cld
pop
loopne
pop
jg
jb
pop
sbb
fisubs
mov
push
data16
mulb
sub
push
or
dec
sub
jle
inc
adc
ret
nop
add
out
fwait
jbe
mov
xchg
cmp
daa
clc
jo
xlat
ljmp
pop
push
sti
outsb
js
sub
arpl
daa
dec
cmp
pop
sti
loope
pop
push
xchg
inc
popf
pusha
jne
jne
lods
add
sbb
xchg
xor
cmp
and
dec
pop
int3
sahf
outsb
xlat
add
imul
incb
mov
out
sahf
fwait
sub
mov
push
xchg
pop
out
sub
loop
lods
push
iret
sbb
pop
inc
negb
jae
pop
ds
mov
ja
leave
cmpsb
cld
imul
loopne
adc
test
mov
ret
fstl
pop
dec
mov
stc
mov
mov
xchg
test
mov
pop
jg
push
adc
mov
popl
fwait
mov
jmp
inc
dec
add
sbb
xor
sbb
aaa
faddl
jae
scas
enter
mov
or
mov
and
pop
push
inc
into
in
adc
mov
icebp
sub
sbb
adc
ljmp
stc
push
jae
insl
jle
adc
adc
push
mov
pop
mov
and
je
xor
out
mov
mov
scas
lahf
push
xchg
inc
mov
adc
fstpl
inc
outsb
jg
pop
push
cmp
das
add
xor
lcall
cmp
push
stc
fisttpl
subb
int
xor
and
jle
movsb
mov
jmp
jbe
push
dec
jne
aad
jmp
rorl
addb
xor
push
fidivrl
rolb
jmp
push
shrl
xchg
in
in
test
inc
cmc
mov
shlb
mov
lods
pop
dec
push
jle
or
dec
cmpsb
dec
pop
and
pop
loope
add
pop
aas
push
outsb
roll
mov
stos
sti
jg
fistpl
daa
and
lock
sub
ret
xor
js
mov
imul
add
lret
xchg
iret
iret
push
aad
stos
enter
xchg
cmp
xchg
jo
fnstsw
popa
out
jmp
in
ds
nop
jno
mov
nop
inc
cmp
xchg
sub
jae
icebp
push
aam
mov
ja
xor
jecxz
cli
jb
loopne
mov
pop
mov
sbb
mov
outsb
adc
mov
call
add
inc
sti
inc
aas
call
js
sbb
scas
push
loopne
inc
lea
and
pop
push
pop
mov
adc
sbbl
fmulp
jns
sbb
xchg
mov
gs
push
sahf
das
into
mov
test
out
js
mov
dec
xchg
jo
cli
leave
mov
mov
xchg
in
popf
push
insb
mov
lret
ds
mov
repnz
hlt
mov
mov
aam
push
xor
dec
fcmovbe
mov
or
outsb
push
pop
in
cld
dec
xor
jnp
xchg
adc
mov
add
xor
bound
add
jno
in
sbb
push
inc
mov
mov
in
ss
cmpb
cmp
repz
sbb
dec
xchg
neg
or
push
shlb
inc
inc
sbbl
adc
lods
pop
mov
scas
pop
pop
subl
pop
jp
and
fidivrs
push
in
cltd
mov
mov
popf
xor
dec
stc
adc
daa
aaa
xchg
lahf
fucomip
scas
jg
and
inc
pop
lods
mov
lret
mov
fstps
push
into
mov
lea
or
inc
and
push
shlb
fdivrs
mov
sbb
mov
mov
xchg
flds
int
cmp
popa
fsubrp
cmp
inc
pusha
and
xchg
inc
add
jge
pop
xlat
fcompl
mov
push
jb
int3
cmp
bound
pushf
and
scas
and
push
sti
lahf
shlb
insb
xor
shll
xor
jmp
inc
sub
fisttps
popa
mov
hlt
setl
loope
fnstenv
mov
leave
enter
out
xchg
sub
outsb
ljmp
sbb
pop
add
cmp
mov
adc
cld
sub
cwtl
sti
and
scas
loop
mov
cwtl
ljmp
xor
mov
cmp
push
mov
dec
sbb
push
fdivl
jle
xor
pop
adc
xor
sti
sub
inc
mov
mov
and
jge
in
dec
ja
xor
lret
insb
lea
adc
pop
push
xchg
icebp
xor
std
out
push
mov
push
das
sbb
and
jge
mov
cwtl
pushf
add
lcall
lret
mov
sbb
lret
lock
sub
sarl
inc
sbb
cwtl
sbb
test
and
cwtl
notb
jecxz
in
inc
and
add
xor
push
cmp
jmp
lock
test
xchg
mov
mov
ss
add
mov
sbb
inc
imul
pop
sbb
add
scas
mov
mov
mov
add
xor
sub
cltd
sub
ja
ds
jl
mov
cwtl
std
sahf
cmp
andl
rorl
es
add
je
sbb
mov
fwait
nop
nop
mov
incb
sub
inc
test
test
or
cmpsb
sbb
mov
je
mov
and
clc
and
or
out
sub
lcall
add
sbb
add
xor
jns
and
inc
xor
int
mov
or
xchg
pop
mov
outsl
xchg
inc
sbb
mov
jbe
mov
out
mov
imull
xor
inc
out
cld
adc
push
movl
add
jg
mov
jno
and
clc
ljmp
mov
jbe
dec
dec
rol
jg
sub
movsb
cs
mov
sbb
sub
push
xchg
ror
fs
dec
in
shl
shrl
rcrb
in
xchg
mov
shl
lods
jno
xchg
sub
pop
cltd
into
mov
add
pop
and
into
or
mov
lcall
and
lea
dec
inc
subb
jg
xchg
rcl
aas
pushf
js
repz
repnz
orb
std
mov
loopne
stos
imul
inc
rcrl
nop
js
mov
out
xor
add
neg
nop
popf
dec
xchg
pop
mov
jo
stos
adc
jo
dec
lahf
xor
lahf
mov
les
shl
mov
fisubs
and
xor
aaa
jg
leave
hlt
jge
fnstcw
jne
es
adc
mov
sbb
and
fsubp
es
js
mov
cli
test
jne
rorb
repnz
loope
jmp
push
jo
xor
mov
inc
add
jle
inc
enter
push
cmp
std
ret
lea
cmp
mov
add
leave
orb
sahf
addr16
rorb
cmp
adc
xchg
int3
int3
sub
pop
or
sub
and
fistpl
cmp
lahf
pushf
imul
jge
ret
xor
repz
push
jno
pop
mov
push
adc
cmp
js
jo
popa
lahf
cmp
addb
pop
repnz
xchg
jg
jae
or
mov
cmpsl
fsubrl
movb
cwtl
push
jecxz
mov
sbb
int
push
or
add
mov
andnps
cmpsl
les
imul
mov
in
fists
out
gs
ja
pop
and
inc
inc
fldcw
repnz
xor
cltd
aam
add
pop
inc
cld
dec
pop
adc
mov
push
push
inc
sub
popa
mov
loope
add
pop
and
test
out
lret
cs
lock
bound
iret
cmpsl
adc
les
inc
add
out
sub
push
sub
ss
fcoms
lret
adc
xor
jae
int
popf
cmp
mov
and
push
jno
nop
mov
jbe
ret
mov
and
sub
sahf
sti
stos
jg
shll
fbld
jbe
xor
xchg
sub
or
xor
or
lret
int3
test
xchg
jo
fisttpl
or
add
jnp
xor
repz
sbb
stc
xchg
jae
add
mov
lahf
fiaddl
and
fists
push
inc
call
fisubrl
jmp
cli
cmp
stos
cmpsl
int
add
icebp
fidivs
push
add
cmpsl
je
and
mov
push
push
xchg
lret
das
sbb
ret
out
test
mov
iret
or
fs
xlat
mov
xchg
mov
aad
xchg
push
pop
mov
or
test
rolb
repnz
cwtl
out
or
mov
mov
dec
jne
and
push
cmp
push
frstor
hlt
icebp
fstl
inc
ja
or
sarb
mov
inc
icebp
sbb
hlt
in
or
in
cmp
jne
cmpsb
lret
mov
xchg
sub
call
mov
subb
inc
dec
cld
inc
add
pop
sbb
jnp
mov
shl
and
xorl
arpl
jmp
out
jns
in
ja
popf
std
fcmovbe
pop
mov
scas
pop
xchg
in
mov
sub
ja
mov
mov
mov
mov
xchg
mov
pushf
out
mov
fiaddl
jl
xchg
push
out
xor
push
jne
test
test
xchg
jg
sbb
inc
mov
loope
in
ret
pop
inc
mov
pop
rcrb
dec
sub
xchg
aam
aam
movsb
imul
out
dec
jle
adc
je
popf
xor
js
cwtl
enter
sarl
mov
outsl
sbb
jo
add
sarb
mov
and
call
fiaddl
outsb
dec
cmp
lret
cwtl
or
popa
pop
lock
pushf
lds
popf
outsb
mov
sub
pop
push
xchg
jae
loopne
sub
mov
ss
sahf
out
or
push
lcall
jmp
pop
pop
push
push
or
xor
aaa
cltd
push
bound
cltd
and
pushf
rcrl
mov
shld
lock
imul
lahf
lods
lcall
repz
push
lahf
dec
sbb
iret
xlat
mov
dec
int3
out
cltd
fst
stc
mov
loope,pt
cmp
sub
into
pop
cmpsb
dec
lods
mov
cmp
sub
pop
or
mov
mov
loope
sbb
popa
std
cmpsl
add
xor
rcrl
xchg
jo
lret
pop
lret
mov
xor
push
popa
mov
jg
test
push
cmp
mov
jp
addr16
ljmp
insl
psrlq
pop
sbb
ss
fs
test
push
jl
xchg
xor
or
pop
fisubrs
xchg
sbb
mov
addr16
icebp
call
jmp
push
xchg
ja
cmp
jmp
setle
mov
mulb
testb
loope
mov
inc
ljmp
xchg
pushf
insb
mov
mov
sbb
sbb
xchg
cmp
ficoml
push
shll
nop
and
push
mov
movsl
pop
jmp
jle
jecxz
scas
xchg
mul
in
add
shrl
sub
lock
jmp
cltd
xchg
jg
push
add
repz
ficompl
stos
push
push
clc
popa
aad
adc
mov
push
lret
push
and
gs
repz
mov
dec
movsl
mov
out
xor
mov
mov
xacquire
mov
enter
xor
cltd
insb
and
std
test
cli
shrl
mov
push
ljmp
add
xchg
std
jle
pop
or
fsubl
fwait
bound
push
sbb
mov
cmp
xchg
cmpsl
xchg
aas
cmp
in
in
pop
pop
push
mov
mov
cmp
sub
add
mov
adc
xor
stos
addr16
xchg
in
lods
out
add
and
loope
lods
jns
mov
cmpb
xor
gs
inc
ffreep
mov
and
jo
or
jne
adc
scas
adc
sbb
xchg
ret
cmp
jle
jg
sub
lret
push
jge
js
push
add
sub
outsl
jno
inc
mov
cs
pusha
loope
jle
mov
dec
jge
lcall
sarb
pop
ja
sub
push
mov
cwtl
add
xchg
fimull
pop
push
and
leave
lahf
daa
adc
adc
pop
or
lahf
dec
clc
push
add
pop
or
mov
gs
arpl
dec
rcrb
or
idivb
inc
sbb
out
jmp
ret
dec
cwtl
addr16
mov
lahf
push
jp
mov
add
jnp
push
mov
or
bound
xchg
pop
dec
push
pop
fst
nop
mov
xchg
int
ffree
aaa
pop
imull
push
pop
hlt
nop
xchg
add
push
mov
mov
or
or
ret
mov
cltd
dec
aas
pop
or
sub
add
pop
aas
push
add
sbb
fmul
cwtl
xchg
adc
movsl
xchg
std
xchg
in
xlat
sub
in
pop
arpl
cmp
mov
pop
cwtl
cwtl
ljmp
test
xchg
pop
dec
mov
inc
dec
add
mov
loop
call
mov
iret
inc
stos
ret
sahf
lods
dec
jbe
lret
xchg
imul
push
pop
pop
out
jno
mov
mov
fisttpl
rcl
sbb
or
add
push
inc
push
jl
mov
push
in
sub
xchg
jnp
mov
pop
push
bound
sahf
in
xchg
mov
jmp
pop
jg
negb
mov
shlb
insl
add
ljmp
mulb
lret
test
xor
call
roll
cwtl
in
adc
insl
fdivr
jo
out
jbe
in
or
ds
js
rorb
jo
inc
cmp
xlat
js
xor
loop
sbb
sahf
xchg
arpl
jmp
xor
jo
and
dec
leave
sbb
lock
lds
jge
jo
add
sub
sbb
pop
mov
push
mov
push
mov
les
cli
ret
fldenv
in
pop
ds
adc
push
ficomps
cld
jno
int3
mov
andb
and
aam
inc
pop
js
mov
in
mov
cmp
inc
pop
mov
das
pop
cmp
pop
leave
mov
or
and
pop
xchg
xchg
or
int
insb
enter
rcl
test
cmpsl
fcompl
scas
fistpll
or
xorb
sub
mov
stos
outsl
in
sub
fdivrp
dec
mov
add
pop
repnz
pop
cmp
adcb
sbb
push
sbb
stos
es
repz
mov
mov
jmp
nop
lcall
cltd
lahf
sub
push
sbb
lcall
inc
mov
lods
clc
push
lods
push
in
sahf
and
aaa
mov
pop
push
add
cs
dec
jb
in
jns
mov
lock
push
pop
mov
dec
sbb
xlat
call
daa
aad
movsl
jne
mov
repnz
xchg
sarb
ss
aam
mov
int3
cltd
or
push
jg
mov
fistpll
leave
mov
push
mov
sub
mov
mov
lret
push
push
adc
fs
subb
sti
lret
or
push
mov
sbb
xchg
or
mov
test
sub
addr16
roll
rcr
mov
out
sub
sti
lock
sarb
push
sub
rcrb
movsl
jecxz
cmp
test
lods
out
xchg
cwtl
in
sar
shll
mov
cmpsb
mov
xchg
dec
push
into
and
mov
xchg
loope
test
dec
or
inc
les
scas
and
jbe
and
jmp
dec
dec
inc
sbb
jp
ficomps
in
int3
hlt
fdivrl
int3
sar
leave
repnz
pop
ss
inc
rol
adc
mov
test
loop
iret
cmp
loope
xor
inc
scas
movsb
adc
icebp
in
and
lahf
cmpsb
and
push
into
or
lock
jnp
and
push
push
into
xor
je
push
jns
pop
dec
es
mov
dec
jmp
mov
sbb
test
sbb
xchg
mov
sti
adc
xchg
sbb
aam
movsb
push
lods
repz
fcomi
lea
jo
sbb
jg
pop
lock
mov
test
rorl
mov
fildll
xchg
out
adc
not
dec
jge
mov
sti
pop
in
sbb
xorl
cltd
xor
out
adc
ret
jp
add
pushf
adc
mov
arpl
xchg
mov
inc
xchg
dec
mov
rcll
lret
xchg
hlt
jo
hlt
or
dec
mov
and
repz
stos
and
cmp
arpl
dec
push
fdiv
pusha
sarb
dec
xchg
scas
and
aas
stos
jl
sbb
push
lret
jl
pop
push
cmp
lea
cmp
out
cltd
fwait
sbb
mov
sti
adc
gs
mov
outsl
jne
mov
ret
jne
inc
sbb
mov
xchg
in
mov
inc
notl
dec
cli
cwtl
aam
xchg
and
ret
dec
movsl
and
xchg
mov
pop
call
xchg
ret
inc
mov
dec
mov
icebp
add
add
adc
fcompl
imul
xchg
and
pop
lcall
cld
mov
sti
mov
insb
mov
movsb
fsts
scas
adc
loopne
dec
sbb
aad
push
cmp
add
ja
cli
pusha
add
in
cmp
sub
pop
out
pop
pop
ljmp
repnz
push
fs
sbb
add
xchg
mov
dec
addr16
test
shr
and
popf
daa
push
rclb
out
inc
aaa
jb
lods
shl
pop
cmp
insl
and
xchg
sub
lock
adc
push
pop
sub
repnz
sub
inc
push
scas
fistps
sahf
mov
dec
test
sbb
loopne
pop
sahf
arpl
mov
insl
cltd
xchg
adc
js
fimuls
push
xor
aam
fdivr
outsl
dec
mov
push
xor
inc
and
push
imul
pop
push
pop
lods
movsb
scas
mov
jmp
and
scas
mov
sbb
xchg
loopne
pop
sbb
or
mov
mov
push
xchg
sbb
mov
dec
jge
sarb
xchg
es
pop
push
imul
fisttpll
cmp
inc
sub
pop
add
cmp
iret
mov
mov
lods
xor
sbb
and
test
cmp
add
dec
enter
out
in
jns
shrb
leave
xchg
dec
and
xchg
cmp
sahf
aad
jg
cltd
mov
jno
pop
outsb
adc
std
xor
in
test
fisubrl
pop
jmp
xor
adc
xor
out
sub
lock
jmp
pop
in
fwait
popaw
inc
aam
dec
dec
xor
adc
xor
loope
fs
adc
ficompl
icebp
loop
mov
daa
push
push
in
pop
int3
stc
pop
popf
xor
xchg
sub
dec
ret
mov
fs
dec
cmc
pop
ret
cmc
inc
dec
aad
int
lea
sbbb
sti
mov
xchg
or
xchg
pop
jae
and
cmp
arpl
fmuls
in
shlb
inc
xchg
adc
into
mov
adc
cwtl
dec
cmpl
mov
mov
scas
pop
movl
mov
or
adc
fiadds
rolb
icebp
or
imul
mov
jb
inc
js
jno
inc
pop
sub
add
std
mov
mov
fcomip
in
inc
movsl
xchg
pop
cmp
outsb
xor
js
sub
adc
mov
and
outsl
xor
xchg
xchg
mov
shrl
roll
shll
xor
xchg
out
xor
fwait
lods
dec
mov
and
sbb
shll
idivb
xchg
dec
cmp
push
mov
cmp
sahf
push
dec
or
push
rorl
pop
int3
jno
filds
mov
push
int3
cmp
jmp
rcrl
mull
sub
bound
imul
loop,pt
test
popf
jns
sahf
push
dec
mov
inc
loope
jp
cmp
cwtl
jae
sub
pop
lahf
rclb
nop
mov
imul
xor
pushf
jbe
mov
mov
cmp
outsb
les
ljmp
ret
loope
shrb
xchg
dec
jg
stos
or
jbe
mov
jo
stos
hlt
sub
repz
inc
dec
and
push
push
mov
into
out
adc
push
dec
sub
icebp
aad
cmp
adc
inc
call
jnp
jle
inc
out
cltd
ja
mov
pop
dec
popa
push
roll
fwait
inc
pop
popa
mov
jmp
fsts
mov
enter
push
push
add
ds
mov
ds
inc
pop
cs
imul
mov
adc
sar
jno
xchg
fdivs
jnp
pop
out
jno
xchg
ret
call
mov
push
jbe
jl
xchg
push
inc
popf
push
divb
jb
ret
lahf
and
stc
js
imul
outsb
lock
jne
mov
jle
imul
aad
lahf
xlat
mov
ja
jmp
mov
pop
data16
arpl
les
or
adc
pop
mov
fcoms
cmp
mov
aam
ja
mov
sbb
nop
or
push
jne
push
pop
dec
lcall
jp
dec
sub
sbb
sarl
mov
inc
sbb
shlb
add
mov
scas
scas
or
in
pop
add
loopne
movsl
fldl
jle
sbb
xchg
mov
push
cmpsl
ret
dec
cmp
out
in
aad
push
addl
push
cld
dec
test
mov
cld
and
sub
gs
subb
jne
in
out
inc
fstpt
add
mov
loop
gs
imul
and
cs
jb
bnd
lcall
andb
or
mov
xor
mov
add
sarb
call
mov
xchg
jne
and
add
mov
pop
cmp
push
enter
data16
jl
mov
divl
mov
pop
mov
sbb
push
cmp
pop
ret
mov
orl
mov
xor
mov
mov
repz
dec
dec
adc
loope
aas
fisubl
cld
imul
pop
je
mov
push
jle
mov
pusha
sbb
sahf
dec
clc
push
xor
mov
mov
sub
andl
push
and
adc
sbb
mov
and
aas
out
and
ja
lods
lret
sub
scas
in
jecxz
or
mov
mov
pop
aaa
ret
mov
ja
push
in
adc
push
dec
hlt
lods
xchg
and
imul
mov
adc
insb
fcoms
loope
or
push
mov
xchg
lods
mov
and
not
mov
lds
jns
jnp
cmp
fistpl
mov
jns
and
push
xchg
leave
aad
sahf
mov
insl
rcl
sub
mov
inc
fcomip
sub
pop
adc
insl
cld
mov
fsub
mov
je
imul
jo
jne
or
push
movb
movsb
mov
ret
sub
fsubl
dec
add
mov
jle
push
mov
pop
pop
arpl
add
and
sbb
dec
inc
sub
aad
aad
mov
mov
rolb
pop
cmpsl
xorl
dec
dec
sub
daa
xchg
lock
mov
ss
xchg
out
enter
imul
jnp
mov
xchg
mov
out
jnp
outsl
rcrl
dec
adc
rcr
mov
insl
lcall
inc
loop
ret
or
imul
js
and
inc
in
pop
jmp
mov
adc
cmp
test
daa
stos
add
cld
and
cld
adc
push
pushf
adc
in
outsb
enter
mov
sahf
in
ss
or
mov
out
aad
sbb
xchg
mov
int
arpl
inc
pop
mov
bound
nop
mov
cmp
daa
addr16
movb
xchg
shlb
lock
negl
fdivrs
xor
push
or
or
inc
jle
adcl
into
adc
ljmp
jne
in
mov
daa
push
jno
out
lock
cmp
jge
mov
lret
sub
mov
push
jge
adc
sub
imul
cmp
xor
mov
pop
inc
pusha
in
mov
mov
adc
push
xlat
push
push
cmpsl
xor
les
jb,pn
mov
cmp
out
cs
pop
jnp
out
mov
roll
je
scas
rcr
test
add
sahf
arpl
insb
mov
pop
insb
jbe
sbb
cmpsb
ret
xor
pop
popa
or
sbb
mov
cwtl
xchg
dec
sub
clc
iret
dec
out
out
jb
dec
pop
pusha
sbb
dec
xor
mov
out
faddl
dec
lods
adc
mov
xlat
stos
or
pop
in
mov
xchg
sbb
mov
daa
sti
sub
adc
lret
dec
inc
xchg
mov
shl
inc
mov
add
leave
xor
xor
xchg
sub
xchg
decl
mov
xchg
pop
fcoms
aas
inc
and
jl
test
pop
cli
fwait
std
push
push
in
imul
sub
adcl
push
jne
test
pusha
or
mov
adc
dec
xchg
pop
imul
stos
cmp
dec
es
out
stc
sbb
lds
and
add
add
lret
cmp
jnp
xor
mov
cmp
add
jno
mov
jg
adc
in
mov
mov
mov
mov
sahf
push
xchg
iret
leave
pop
pop
stc
pop
inc
jmp
lret
mov
notb
mov
or
xchg
das
shrl
xchg
cmp
fimuls
jl
stos
mov
sarb
popa
jl
leave
add
adc
sbb
test
cmpsl
sub
rolb
xor
aad
push
and
out
imul
push
mov
imul
cli
or
dec
test
xchg
jo
and
xor
cmc
adc
scas
pop
jmp
movsl
mov
dec
nop
sbb
pop
sbbl
ret
jne
lds
xor
popf
xchg
jb,pn
into
cli
lods
mov
outsl
cwtl
stos
push
push
stc
rclb
mov
mov
es
inc
rcrb
add
sbb
pop
jno
imul
in
shl
sbb
js
jmp
jne
int
mov
inc
mov
dec
dec
div
arpl
sub
xor
mov
repz
adc
mov
js
sbb
pushf
lock
xor
mov
jle
xchg
leave
jno
adc
aad
dec
nop
outsl
fmulp
stos
lahf
cmpb
or
dec
fistps
fmulp
or
sub
jno
cmp
aam
test
pop
lock
inc
mov
outsb
cmp
mov
jmp
aad
mov
rol
mov
les
fsts
mov
and
push
arpl
sub
pop
andb
sbb
push
dec
sub
push
add
adc
enter
rcl
test
pop
out
mov
jmp
test
lods
push
jo
pop
pop
cmpsl
loope
std
outsl
dec
xlat
lcall
mov
sbb
mov
icebp
mov
dec
mov
cwtl
mull
jno
rcrl
mov
fldenv
jg
in
xchg
icebp
outsb
xchg
dec
mov
inc
pop
lods
call
decl
xor
jmp
insb
xchg
push
or
mov
fadd
or
je
mov
les
fisubrl
jns
adc
stos
push
mov
int
out
jo
shrl
lds
xor
push
jmp
cmp
adc
push
xchg
dec
xor
popf
imull
cmp
fmull
push
cmp
jb
rcrb
jecxz
adc
shll
loope
push
jle
ret
pop
sub
push
lea
mov
mov
leave
ret
sbb
shrb
std
jecxz
test
push
jle
sub
movsb
scas
out
ds
loop
fdivs
jb
xor
push
cmc
in
cwtl
jg
dec
xchg
push
dec
adc
inc
pop
addr16
sub
sbb
leave
or
cmpsl
sub
gs
icebp
jo
jnp
sbb
mov
xchg
xchg
cmp
aad
ja
cmp
jbe
test
mov
cmp
add
fldenv
inc
imul
test
jmp
leave
insb
cld
sub
or
mov
jo
sub
jg
jns
push
cltd
cmp
sbb
jmp
inc
and
out
stc
adcl
inc
out
imul
ds
hlt
fistpll
xor
movsb
sub
jbe
add
mov
mov
sbb
pop
outsl
jp
pop
jle
lahf
je
clc
mov
cmpsb
insl
outsl
adc
aas
mov
loopne
push
loopne
add
sarl
clc
inc
mov
cld
ret
outsb
pop
mov
xchg
in
iret
inc
mov
data16
test
scas
jle
sub
xor
imul
std
in
mov
aad
popf
lock
enter
lcall
mov
adc
cld
and
outsb
xor
sbb
pop
loop
jo
add
pop
adc
fsubl
xchg
loope
in
xchg
sub
cmp
mov
std
ficoms
cmpsl
pushf
pop
cmp
arpl
cmpsb
and
cmp
mov
xor
dec
xor
add
cs
push
rorb
jle
sub
mov
mov
adc
xor
sti
into
push
roll
pop
movsb
mov
pop
movsb
push
xchg
dec
mov
cmp
test
sbb
int3
xchg
int
fcmove
test
arpl
in
jbe
insb
cld
cmp
mov
pusha
sbb
test
sbb
lods
call
std
lods
jp
loop
adc
mov
rcrl
inc
les
and
sbb
ss
mov
loope
dec
imul
adc
fildl
nop
fcompl
push
jae
test
mov
cmpsl
xor
adc
ror
adc
mov
std
dec
adc
stos
inc
in
xor
in
pusha
inc
lahf
out
push
sbb
adc
subl
loopne
mov
pop
ffreep
adc
loopne
cmp
push
dec
push
inc
mulb
js
adc
push
sbb
sub
mov
xor
add
loope
daa
scas
cli
arpl
xchg
lock
fnstsw
fcompl
adc
push
in
xchg
ret
or
hlt
in
les
test
pop
jp
or
fwait
jmp
cld
inc
mov
and
pushf
pop
sbb
inc
imul
pop
jb
push
or
mov
movsl
inc
int
mov
notl
inc
loopne
or
cmpsl
aaa
les
sbb
jo
mov
lcall
add
xor
push
jmp
into
cmpsb
sub
dec
mov
mov
push
not
insl
adc
es
inc
cmp
mov
das
mov
bound
xchg
ss
mov
insl
fsts
out
inc
in
push
call
pop
adc
lock
cmp
dec
adc
push
xchg
xchg
cmc
js
adc
mov
mov
push
fidivrs
cld
xchg
jnp
lcall
mov
into
ficoml
push
sbb
in
xor
ds
outsb
subb
out
push
push
popa
in
imul
adc
test
dec
aaa
xchg
loop
cmp
mov
inc
test
and
push
jmp
add
in
les
stos
dec
or
fs
andb
xchg
aas
add
std
mov
and
lock
jae
aad
dec
pop
fwait
xchg
xor
mov
movsb
arpl
mov
cltd
pop
pop
push
adc
jge
jl
dec
add
cli
insb
pop
shll
cltd
aam
jne
cmp
push
mull
cwtl
clc
sub
stos
sbb
add
in
pop
lret
roll
movsl
sub
push
push
xchg
movsb
cli
shl
or
or
and
xchg
pop
pop
int
sub
lea
xor
lods
and
cmpb
dec
jmp
insb
iret
and
loopne
xor
push
push
fnstsw
div
mov
or
push
fimull
ret
hlt
lret
stos
aaa
dec
jmp
stos
aad
inc
test
popa
push
push
dec
lret
cwtl
bound
inc
sub
and
scas
push
adc
cmp
xchg
mov
js
mov
xor
mov
pop
outsb
sahf
ret
iret
dec
dec
push
mov
dec
into
pushaw
push
lahf
fwait
scas
dec
lret
push
adc
int
pop
xor
out
lock
mov
add
test
pop
bound
inc
dec
std
popa
repnz
inc
jl
pop
sbb
jns
aam
or
sbb
xor
iret
fiaddl
cwtl
push
in
outsb
mov
xor
and
jg
mov
ficoml
into
call
outsb
pop
push
xlat
outsl
sub
jb
pop
loop
hlt
mov
fidivl
ja
mov
cmpsl
and
rorl
ficoms
xor
repz
mov
out
jno
imul
add
mov
ss
pop
fildl
adc
lret
mov
ja
cli
mov
pop
pop
pushf
inc
jmp
cmp
icebp
mov
cmp
dec
cs
xor
mov
sbb
fistl
sbb
add
inc
sarl
inc
and
push
adc
pop
adc
std
dec
adc
aas
xor
cmp
xor
pop
test
addr16
sub
in
cltd
mov
xchg
pop
or
mov
in
mov
push
enter
cld
cmp
jne
or
adc
mov
mov
pop
xchg
out
test
sub
scas
lret
mov
or
mov
jp
aad
test
and
insl
lahf
add
repz
sbb
dec
lea
mov
testb
push
addr16
mov
push
cmp
cmp
push
xchg
sbb
shrl
mov
stos
inc
cmp
lds
dec
sahf
and
mov
lcall
sbbb
cmpsl
push
jo
lea
add
push
sbb
push
scas
cmpsb
and
sub
repnz
fs
sub
and
arpl
push
sub
stos
aaa
arpl
mov
jnp
mov
test
ja
push
ds
push
mov
jge
pop
cli
stc
mov
fldcw
sbb
push
adc
jne
fsubr
sbb
pop
sub
dec
es
jno
pop
jnp
jmp
adc
les
or
push
jp
movsl
add
subl
test
dec
scas
pop
stc
scas
fsts
push
int
or
hlt
in
frstor
loop
outsl
and
scas
inc
cmp
enter
mov
sub
int
sub
aas
mov
aas
fsubp
aad
xchg
arpl
les
movsb
adc
mov
cwtl
and
inc
aam
js
mov
inc
inc
push
or
and
sub
movhps
jo
outsb
xor
jge
in
out
sub
mov
aad
push
pop
jg
sub
rep
aaa
xchg
ret
xchg
jmp
sbbl
inc
mov
xchg
xor
dec
cmp
jnp
mov
dec
jge
and
andl
sbb
in
stc
lds
sbb
repz
loopne
lock
sub
in
add
or
adc
cmp
xor
hlt
sahf
dec
test
pop
movsb
xchg
aam
mov
mov
cmpsl
and
add
loop
sahf
xor
fsubl
out
add
pop
sub
add
pop
lret
fadd
inc
pop
or
je
icebp
pop
or
pop
in
inc
shll
xchg
push
mov
and
rol
add
push
test
mov
negl
arpl
jno
icebp
jbe
pop
hlt
push
gs
mul
scas
add
insb
mov
sbb
sbb
xchg
push
into
pop
sub
fnstenv
and
mov
pop
pop
fucomi
cmpb
imul
rol
ljmp
out
andb
out
lods
in
into
test
dec
nop
adc
hlt
mov
mov
add
mov
push
lock
adc
or
lods
inc
push
mov
leave
divb
sbb
lods
in
dec
out
incb
outsl
pusha
pop
dec
xchg
dec
ds
push
sub
jns
mov
addb
aas
cmpsb
sub
adc
scas
ljmp
mull
repnz
cmp
mov
ljmp
jno
pop
hlt
xor
add
sbb
pusha
jae
bound
mov
test
aam
inc
mov
mov
pop
pop
js
movsb
loopne
jl
lods
lods
stc
out
cmpb
scas
fs
xor
sar
in
inc
lret
in
pop
int3
xchg
bound
lret
sbb
xchg
sbb
xor
mov
cli
cmp
fs
xor
dec
loop
jno
pop
shr
cmp
lcall
dec
and
and
out
inc
test
xchg
out
das
imul
add
mov
out
lahf
push
imul
repz
dec
xchg
loopne
leave
scas
dec
sub
cmp
jnp
aaa
mov
mov
insb
jge
in
fdivs
pop
push
xchg
imul
scas
repnz
js
or
add
jne
pop
adc
push
sub
aaa
adc
outsl
dec
hlt
cmp
imul
dec
pop
push
test
mov
inc
addl
or
ret
pop
jbe
or
lea
out
adc
cli
jae
clc
pop
inc
data16
lcall
loop
test
lahf
pop
imull
sarl
jb
lret
or
insl
xor
outsb
dec
test
xlat
jo
dec
insl
xor
addr16
nop
lahf
push
imul
mov
shrl
lret
inc
xor
sub
xchg
add
add
and
dec
dec
fwait
addb
sbb
lods
in
pop
jbe
pusha
aam
push
jno
xchg
les
test
rcrl
inc
orb
sbb
test
inc
test
or
sbb
sbb
out
fcomip
xchg
pop
jo
xchg
push
pusha
push
push
pop
and
test
lret
push
addr16
mov
fdiv
inc
stc
sub
imull
mov
ljmp
nop
shl
stos
icebp
cmp
mov
loopne
pop
out
dec
andnps
clc
xorb
test
mov
loop
or
ss
out
mov
cmpsl
das
mov
daa
test
xor
leave
fs
out
out
aad
xchg
xor
in
lret
add
cmp
pop
icebp
stos
inc
sub
push
out
je
cmpl
and
xchg
mov
cli
aad
das
sub
sbb
pop
stos
repz
shlb
popf
push
movl
lods
fcomp
out
xor
mov
add
in
cmpsb
inc
outsb
cmpsl
inc
xor
in
test
pop
js
in
mov
add
mov
dec
push
cli
push
mov
pop
movsl
sub
insb
test
call
pop
fisttpl
adc
pop
orl
dec
inc
sub
add
xchg
mov
mov
test
dec
pop
cmp
jl
mov
ja
fs
push
inc
push
mov
fsub
adc
enter
ds
mov
push
xor
inc
std
loop
lods
push
in
jp
in
sbb
insb
xchg
and
push
push
stc
sub
cltd
dec
stos
pop
out
jae
lock
stos
sub
ds
fisubrl
jmp
inc
aaa
cmovo
repnz
lods
dec
lods
mov
pop
cmp
sti
test
adc
hlt
add
pop
fcomps
mov
ret
adc
fsubrp
add
add
or
shr
jge,pt
jg
popf
scas
in
shlb
xchg
insb
mov
xchg
jne
bound
test
je
or
cmp
imul
lret
les
adc
or
xchg
lods
fwait
sub
loop
push
sahf
jmp
dec
cltd
mov
ja
add
lret
adcb
add
gs
mov
jle
jb
and
pop
ds
mov
repz
cmp
nop
push
mov
aam
and
jle
push
or
push
push
popa
pop
pop
fadd
mov
jp
cs
xchg
insl
les
lods
test
or
int3
leave
gs
inc
pop
ror
and
adc
inc
roll
adc
xchg
shll
add
mov
lds
mov
cmp
mov
test
lods
mov
xchg
aas
pusha
arpl
sub
jecxz
mov
cwtl
hlt
adc
lods
loope
pop
lcall
mov
mov
icebp
adc
dec
push
outsb
fisttpll
js
stos
lock
or
fnstsw
nop
cmp
lock
cmc
sub
mov
es
imul
mov
adc
push
mov
jnp
dec
mov
stos
mov
lock
in
mov
cmp
repz
iret
in
xor
cltd
cwtl
test
rolb
or
mov
movsl
je
arpl
mov
dec
sub
sub
push
jp
mov
ret
cmp
aam
fstpt
popa
aad
cmpsb
push
shr
aam
or
adc
leave
and
repz
sbb
sti
call
dec
bound
imull
mov
loop
ja
int
pop
repz
jns
and
push
xchg
out
dec
dec
and
repnz
push
push
push
cld
test
sub
pop
pop
push
sbb
fstpl
cmpb
add
movsb
and
addr16
mov
sub
or
jge
add
arpl
paddusb
popf
xchg
jl
cmp
pop
fistl
fimull
and
rolb
jne
jno
stos
and
mov
lock
movsb
shl
cmp
sub
aad
out
jecxz
inc
sti
adc
in
stos
je
rolb
push
cmp
in
jne
cmp
or
cmpb
test
sub
arpl
push
sub
stc
out
xchg
jne
sbb
scas
out
inc
inc
add
inc
xchg
adc
adc
into
mov
dec
mov
inc
lods
leave
sbb
lea
flds
repz
lods
mov
push
decl
arpl
add
leave
xchg
jo
push
mov
lret
pusha
cwtl
cmpl
bound
and
sarb
ds
inc
dec
push
pop
cmp
push
fwait
or
dec
mov
int
mov
dec
mov
or
ja
add
sbb
jle
mov
pop
push
stos
outsb
outsb
loop
push
lahf
and
mov
add
out
sub
stc
adc
xchg
clc
pushf
xchg
daa
jp
cmp
add
cmpsb
push
push
lods
insl
movl
adc
mov
xor
jbe
push
jo
fdivrp
cmpsb
fisttps
dec
dec
test
repnz
lods
mov
or
mov
leave
cmp
push
push
sbb
fsubrl
and
iret
les
and
pop
clc
mov
xor
add
enter
sti
out
jne
aad
mov
jb
push
lret
add
adc
fstl
pop
push
sbb
mov
in
or
je
les
call
sub
jne
fimull
add
mov
push
fdiv
or
idivb
jns
in
sbb
leave
sbb
mov
jnp
movsl
add
xchg
and
cltd
pop
prefetchw
enter
mov
adc
xchg
nop
shr
jae
inc
hlt
pop
out
jge
and
dec
cmpsb
adc
inc
imul
sbb
mov
mov
lret
aam
insb
fdivl
push
cmpsb
sub
xchg
les
out
or
addr16
fs
inc
mov
xor
sub
ret
cmpsb
sbb
sub
mov
pop
mov
es
icebp
shr
adc
mov
xor
jae
pop
popa
sbb
sub
loopne
out
add
lret
sbb
mov
dec
gs
test
pop
sbb
cltd
loopne
cwtl
add
scas
int3
aaa
nop
repz
jecxz
repnz
cmp
fstpl
in
pop
jecxz
sub
push
adc
and
iret
out
sbb
std
add
cs
js
ja
and
jecxz
mov
leave
fs
inc
gs
stos
jmp
jb
mov
cmpsl
ja
jge
mov
packssdw
es
movsl
adc
ficoml
inc
pop
xor
rol
iret
rclb
xor
in
into
cmp
out
dec
lods
mov
out
dec
rcrl
xchg
add
xor
loop
or
fs
jp
adc
mov
push
pop
imul
push
into
fcmovnbe
testb
add
fnsave
lret
flds
inc
pop
cmc
dec
bound
and
dec
dec
out
mov
xchg
push
les
popl
in
adc
sub
icebp
xor
aad
cmc
jo
scas
cmp
mov
loopne
push
dec
or
movsb
daa
pop
add
iret
mov
or
icebp
add
iret
jle
cli
scas
ljmp
lret
cmp
sub
cmp
mov
add
jns
xlat
out
push
push
fld
fs
add
popa
in
popf
cmc
sbb
adc
push
test
mov
out
mov
jmp
push
test
shl
shrl
pop
or
fisubl
push
jmp
cmp
inc
mov
daa
add
dec
movsl
xchg
pop
out
adc
lea
mov
pop
out
lret
imul
gs
dec
jmp
mov
xchg
and
int
dec
jg
push
mov
sub
push
mov
jp
fistl
cmp
mov
clc
fwait
xchg
imul
inc
sti
rclb
xchg
jns
orb
pop
das
mov
imul
out
aas
call
andb
stos
push
cmp
roll
test
mov
push
add
jmp
in
movsl
push
js
xorl
dec
sahf
dec
push
jge
test
adc
shrb
adc
push
add
into
add
pop
and
mov
outsl
icebp
fcomps
mov
pop
outsb
push
mov
mov
mov
loope
pop
jmp
jg
cmpsb
inc
mov
sbbb
popa
cmpsl
sub
push
dec
fstpt
sbb
dec
dec
cmp
mov
mov
ss
and
repz
cwtl
daa
into
and
leave
imul
ljmp
pop
adc
add
mov
in
jl
push
ret
mov
push
xor
daa
or
mov
fldl
stos
movsb
adc
inc
cmp
loopne
mov
enter
and
mov
das
fldenv
and
pop
cltd
pop
outsb
loopne
out
hlt
jmp
push
sub
in
mov
mov
imul
call
mov
nop
mul
adc
mov
lret
xor
mov
imul
or
int
and
jnp
mov
and
repz
push
add
daa
sbb
xor
stc
sub
jl
int
int3
shll
rcrl
in
mov
inc
fst
inc
adc
dec
mov
xor
int3
cwtl
aas
jno
test
dec
aam
jo
mov
add
fsts
push
outsl
push
push
xchg
adc
es
loop
filds
mov
ficoml
outsb
inc
sub
popa
push
or
and
cmp
bts
cmc
fs
pushf
outsb
sbb
test
inc
mov
lods
or
mov
cmp
movsb
fists
xchg
cli
xlat
fidivl
aas
lahf
add
into
pop
hlt
and
jle
in
outsl
pop
ret
shll
std
out
xchg
pop
cmc
and
mov
fdiv
decl
cmp
fstpt
sub
cmp
mov
pop
outsb
and
imulb
jle
lock
jl
xlat
das
cwtl
lret
inc
and
or
xchg
insl
fisttpll
in
xor
mov
loop
mov
jo
aam
push
adc
fs
mov
xor
mov
inc
adc
jo
mov
xor
jnp
or
fcoml
mov
xchg
mov
imul
sub
mov
out
or
inc
inc
pop
ficoml
xlat
cmp
sub
mov
and
xchg
mov
xor
xor
and
xor
pop
loopne
sub
ds
arpl
gs
jl
mov
fs
xlat
sub
mov
xchg
fwait
test
jne
cmp
mov
cs
std
add
push
inc
pop
call
adc
push
dec
xchg
lds
outsb
mov
lock
mov
outsb
push
lds
sub
inc
rdpmc
pop
push
pop
xchg
movsb
movsb
mov
in
jp
jb
inc
pusha
mov
test
into
pop
mov
jb
sbb
push
mov
xor
mov
roll
cmp
imul
inc
push
inc
and
out
inc
mov
jl
ret
popa
add
int
fisttpl
cmp
cltd
inc
inc
cmpsb
inc
dec
js
push
push
add
xor
int
cwtl
xchg
or
mov
xor
adc
and
cmp
pop
mov
into
int
mov
outsl
imul
sbb
imul
push
xor
sub
cmp
and
aad
pusha
xor
mov
daa
dec
cltd
ret
xchg
lods
jnp
xor
inc
iret
test
shlb
data16
ja
sarb
scas
add
jb
dec
imul
add
clc
pop
cld
push
jecxz
mov
icebp
push
imull
push
pop
hlt
nop
addr16
pop
scas
ja
int
xor
and
push
shll
and
xor
xchg
in
inc
stos
shrb
cld
mov
push
mov
enter
outsb
adc
mov
out
xchg
sub
nop
pop
loop
xor
es
mov
push
outsb
incb
sbb
lahf
decl
fstl
mov
sti
mov
xchg
xchg
inc
sub
lock
or
mov
loope
lret
sbb
int
sub
or
pushl
scas
or
repz
mov
arpl
sub
cwtl
sahf
or
daa
xlat
mov
stc
aas
push
and
mov
jp
ja
adc
fimull
popa
sbb
mov
mov
xor
into
popa
into
and
gs
and
xchg
inc
sub
lock
lret
jns
xor
mov
icebp
jae
inc
sub
pop
into
outsl
or
int
lret
negb
fwait
xchg
lret
in
loopne
les
jle
aam
mov
iret
or
shll
cmp
pusha
call
ficoms
and
adc
mov
clc
and
adc
cvtpi2ps
mov
jne
lods
dec
push
push
push
aam
sub
popf
mov
push
cmpsl
dec
loope
les
je
xor
mov
stc
js
cmpsl
mov
sarb
mov
cmp
into
pop
mov
xchg
stos
fsubrl
int
pop
rolb
mov
sarb
arpl
inc
mov
cmp
out
or
lahf
dec
cmpsb
icebp
fistpll
xchg
pop
push
xor
aaa
sbb
jae
dec
push
inc
xchg
in
dec
xchg
cwtl
icebp
jl
in
jecxz
ffreep
das
or
clc
xchg
or
push
jg
pop
inc
clc
inc
mov
std
mulps
jb
popa
jb
cmp
cs
int3
test
sub
mov
fidivrs
pop
mov
xor
inc
mov
ljmp
cli
jbe
sub
xor
mov
sahf
mov
repnz
out
adc
xchg
fdivrl
mov
imul
dec
jp
and
sbb
inc
test
ss
out
mov
xchg
scas
sbb
pop
fneni(8087
or
adc
dec
inc
xor
or
mov
jle
lods
shr
loopne
iret
cmc
or
ja
or
es
gs
in
jae
mov
loope
sbb
mov
add
popa
pushf
sub
jmp
xchg
push
imul
sub
sub
or
lret
mov
xorb
cli
or
dec
push
dec
jnp
or
push
pusha
cmp
pop
insl
cwtl
and
pop
pusha
mov
cmp
out
dec
push
cs
sbb
in
fldenv
pop
stc
xchg
movsl
lret
rorb
jp
into
mov
mov
fists
mov
and
rolb
mov
dec
pop
mov
lods
push
jb
repz
fidivrl
rcrl
xor
dec
mov
fstpl
mov
outsl
cmpsl
adc
mov
lods
test
into
loopne
cmp
cmp
cmp
sahf
pusha
hlt
loope
inc
push
imul
add
inc
and
jb
pop
test
pop
xchg
add
adc
idivb
in
push
sub
sahf
fwait
out
lret
out
xchg
cmp
icebp
in
inc
das
pop
add
ds
and
mov
mov
aaa
iret
insb
xor
lea
rolb
cmpsl
xor
mov
xchg
movsl
ficoml
mov
hlt
lret
addb
cld
inc
jmp
or
fisubs
inc
out
fists
jno
sarb
push
or
add
pop
pusha
dec
rorb
test
xor
test
mov
mov
rcrl
cmpsb
aaa
adc
repnz
leave
cli
js
or
or
je
out
fs
pop
mov
inc
mov
mov
sub
clc
push
and
in
or
loopne
lds
mov
ret
xchg
loop
ljmp
fists
fiaddl
xchg
lea
xor
cltd
test
mov
dec
test
dec
push
mov
adc
pop
fmuls
push
aaa
fiadds
or
fildl
mov
dec
xor
sbb
mov
inc
or
mov
jge
or
mov
movsb
pop
xchg
mov
fmull
fmuls
dec
pop
es
jne
aas
lods
test
push
cs
fdivrl
outsl
and
xor
and
in
subl
push
addr16
mov
mov
push
out
ret
mov
outsb
das
mov
repz
push
jno
mov
jmp
loopne
ret
in
cltd
inc
cmpsl
add
roll
sti
jbe
cmc
inc
push
ljmp
xor
into
aam
sarl
fldl
or
sub
jmp
dec
push
dec
stos
mov
imull
iret
test
add
int
fldcw
mov
mov
or
lock
dec
movsb
mov
int
mov
push
sbbl
iret
in
shlb
and
inc
mov
lock
adc
inc
xchg
inc
push
outsl
or
test
or
icebp
adc
lods
lea
cmp
push
cmp
fbld
pmullw
fldl
or
and
push
fdivr
out
stos
std
das
fcoms
inc
in
test
mov
leave
jno
xchg
sbb
fldln2
pop
mov
xchg
aaa
pop
jle
addb
out
jmp
mov
dec
and
stos
into
dec
pop
lcall
sbb
sbb
movsl
mov
push
mov
add
loopne
and
daa
cli
push
or
ss
bound
loopne
in
adc
mov
mov
stos
or
push
aas
insb
add
push
push
sub
mov
mov
cmp
test
or
adc
adcb
push
add
mov
dec
inc
and
rcrb
inc
imul
popa
std
cs
dec
fs
loopne
mov
jno
mov
pop
jnp
mov
int
into
adc
movsb
int3
adc
pop
xor
out
test
jg
inc
xor
xor
xchg
pop
pusha
mov
clc
mov
test
inc
push
and
imul
dec
idiv
nopl
pop
rolb
inc
cmp
xor
cmpl
mov
std
inc
mov
add
add
pop
out
mov
cmp
xchg
pop
mov
mov
jno
mov
fwait
cmp
cmp
and
cmpsl
pop
jae
cli
insb
adc
sub
xchg
icebp
pop
lods
push
cmpsl
push
stc
xor
into
sarl
inc
loop
lahf
insl
int3
xor
inc
adc
push
pop
cwtl
jae
mov
mov
or
push
xchg
mov
cmp
dec
mov
fwait
mov
and
call
shlb
and
jp
test
mov
cwtl
inc
subb
xchg
scas
or
fdivrs
aad
jecxz
pop
shrl
cmp
cmp
add
or
push
jo
inc
test
nop
mov
jns
sub
fsts
jns
xor
and
insl
test
rorb
lods
push
xlat
ret
xchg
aam
mov
iret
sbb
mov
call
fldl
mov
xchg
in
fnop
lods
sub
adc
or
aad
lock
ret
loop
repz
xchg
mov
dec
xor
shlb
mov
out
in
mov
lock
lods
dec
jns
orl
and
loop
pop
scas
dec
and
aas
adc
stc
jge
outsl
dec
lds
jle
add
xchg
adc
insl
push
loope
ficoml
arpl
into
mov
push
sub
dec
or
stc
xchg
mov
or
fmull
pop
mov
xchg
xchg
test
mov
inc
mov
dec
mov
jns
adc
faddl
fnstcw
sahf
xorl
jo
inc
loop
and
dec
imull
mov
rorb
outsb
sti
leave
adc
les
mov
cmp
lret
push
push
loope
lret
daa
or
inc
cs
and
pop
mov
push
add
and
dec
xorl
xorl
aas
fstps
ss
cmpsb
cmp
js
mov
jne
dec
dec
pop
rcrb
clc
jg
mov
ds
sub
mov
pop
and
push
jae
popf
mov
dec
or
dec
sarb
sbb
push
movsb
add
xchg
xor
jl
inc
xchg
mov
push
in
sbb
ficoms
aad
call
imul
add
push
or
mov
les
add
adc
jb
iret
xchg
sub
jl
cmc
sbb
popa
int
shr
fisubl
adc
xchg
loope
xchg
addr16
or
push
or
jle
inc
or
stos
dec
pop
and
in
adc
mov
jo
sbb
loopne
mov
fstps
fnsetpm(287
mov
sbbb
outsb
push
pop
push
pop
mov
fimuls
dec
and
cmp
push
pop
lds
sub
or
rorl
jmp
ja,pt
push
stos
nop
stos
push
loop
aad
mov
rorl
pop
in
sub
inc
scas
mov
jmp
insb
sub
aad
mov
adc
xchg
scas
fstl
sub
test
ljmp
addl
js
lods
stc
dec
inc
ret
dec
stos
mov
inc
shlb
push
adc
loope
loopne
xchg
push
inc
push
xor
lcall
dec
jmp
add
cmc
push
sahf
ss
stos
mov
sub
scas
and
adc
ss
dec
or
clc
cs
out
cltd
mov
sbb
aas
add
fsubrs
mov
push
data16
movsb
sub
inc
mov
outsl
ljmp
add
xchg
shrl
xor
movsw
cmc
aam
mov
or
cs
or
mov
sbb
mov
mov
andb
jae
in
clc
jmp
push
xchg
test
jle
popf
mul
stos
clc
icebp
mov
lahf
sarb
prefetch
in
mov
enter
out
mov
cs
sub
sub
sub
dec
or
mov
jnp
sbb
fildll
mov
in
jne
push
cmpb
or
jae
bound
test
mov
pop
xchg
int
shlb
cld
ficoml
cmc
rcrb
fst
stos
call
roll
ret
fadds
push
sti
and
inc
or
je
lcall
out
cmp
loop
movsl
sub
iret
push
jne
ljmp
femms
adc
insl
insl
lahf
pusha
movd
pop
sbb
std
sarb
loop
mov
pop
xchg
sbb
xchg
or
cmc
test
add
xor
mov
mov
popf
inc
jbe
cmp
and
xor
xor
push
lcall
xor
ljmp
mov
ficoml
orb
test
test
sub
je
xor
orl
out
mov
mov
movsl
ljmp
ret
xchg
mov
inc
int3
in
inc
dec
xchg
addr16
in
jne
xor
cmp
pop
cmp
loop
push
add
rorl
in
jge
stc
pop
fdivl
gs
pop
lret
jg
mov
add
jl
das
adc
outsb
pop
imull
mov
loope
jecxz
push
dec
out
push
or
sub
cmp
push
bound
rcrb
stos
nop
popa
fwait
mov
sub
and
leave
adc
popa
scas
fsubrs
push
cmp
push
mov
fiadds
data16
cmp
scas
mov
lea
push
mov
repz
mov
aas
lret
scas
clc
in
push
jge
mov
cmpl
pop
add
lock
xchg
lret
sub
xor
xchg
xchg
cmp
push
and
ror
or
sbb
push
fcomp
mov
sbb
push
xor
test
std
inc
mov
fcomip
loope
mov
xor
mov
insl
sarl
jne
hlt
leave
mov
xchg
and
enter
push
test
pop
xor
test
stos
push
lods
shll
mov
lea
in
sbb
testl
scas
mov
push
adcl
or
lock
inc
incl
and
mov
sbb
mov
adc
stc
enter
pop
xor
jnp
mov
test
cmpsl
xlat
mov
and
mov
mov
nop
and
into
mov
popa
dec
xchg
test
jmp
xchg
jno
adc
test
push
lret
inc
ficoml
sub
adc
cwtl
out
add
adc
cmpsb
leave
push
mov
lret
imul
scas
adc
pop
mov
cmpsb
lds
xchg
loope
rcrb
inc
outsb
xchg
jb
ss
jg
sub
push
xor
or
xorb
shrb
push
jo
mov
lret
pop
jmp
jl
xchg
mov
in
scas
insl
adc
mov
cmp
mov
rcr
arpl
mov
insb
lea
lock
dec
movd
mov
cmp
add
les
repz
adc
popa
sub
or
jns
nopl
jmp
sbb
loope
mov
int
enter
sub
movsl
inc
mov
in
pop
pop
out
sbb
sub
movl
lods
sbb
jnp
inc
movsb
xor
cmp
shll
jnp
movsl
lods
mov
fldenv
lds
mov
dec
adc
jecxz
push
int3
dec
icebp
xchg
loopne
pop
pop
inc
adc
movsb
fcom
mov
and
xor
push
sub
jo
xor
les
imul
mov
inc
inc
fwait
hlt
xchg
jecxz
call
sahf
orl
adc
xchg
jle
imul
adc
push
add
gs
mov
xchg
je
push
out
pop
cmp
inc
bound
dec
icebp
inc
jb
imul
cld
and
test
das
daa
add
mov
pop
mov
dec
fdivrp
push
mov
ds
lea
cmp
adc
repnz
push
jp
xor
jnp
addr16
or
or
bound
rolb
shlb
lea
popf
shr
jecxz
test
mov
mov
mov
ret
cmp
dec
ljmp
cmp
mov
int
lods
mov
dec
add
adc
and
pop
cwtl
ret
ss
stos
enter
cmp
mov
mov
push
fisttpll
xor
sub
xchg
sub
mov
psllw
jnp
data16
add
es
loopne
mov
xchg
lret
addl
fsts
fcoml
aam
pusha
xchg
push
stos
pop
aam
out
in
inc
mov
or
adc
mov
scas
inc
xchg
jmp
mov
repnz
xchg
cmp
inc
push
adc
pop
subb
addr16
dec
dec
adc
dec
inc
xchg
mov
mov
cmp
or
inc
mov
icebp
xor
hlt
add
mov
ss
gs
xchg
jnp
cltd
aaa
cmpsb
jo
cmpsl
aaa
lcall
inc
push
loop
add
dec
jge
punpckhbw
jmp
xor
call
test
push
lods
lret
inc
or
rorl
pushf
jo
inc
mov
sub
arpl
rcrb
push
mov
mov
cld
jns
test
mov
sub
stos
sarb
nop
pop
scas
and
mov
sbb
pop
jns
imul
xchg
mov
ss
pop
adc
or
sbb
test
loope
xor
stos
xor
sub
js
xor
popf
adc
and
shlb
add
xor
sub
xchg
sub
out
mov
addr16
push
ljmp
dec
or
xchg
out
cmp
push
xor
cmpsb
pop
add
jmp
xor
in
add
movsb
xchg
imul
movsb
movsb
mov
inc
push
dec
sub
lods
dec
mov
cmp
enter
mov
cld
pop
pop
dec
dec
or
xchg
out
psraw
sub
adc
shll
filds
test
fsub
push
mov
lock
or
bound
je
data16
mov
fldt
sbb
mov
fimuls
lcall
hlt
jp
in
rcr
xorb
add
stos
lret
loopne
xor
cmc
sbb
loopne
jbe
mov
xchg
adc
adc
cwtl
cmp
pop
pop
add
dec
les
sbb
shr
int3
mov
xor
sbb
insb
mov
mov
imul
fwait
aam
lods
jp
mov
fnstsw
add
mul
lret
xchg
xchg
sar
adc
push
icebp
rorl
gs
xor
dec
leave
dec
stos
xstore-rng
cmpsl
push
sahf
outsl
stos
add
jp
jmp
fdivrl
in
scas
xchg
xchg
adc
pushf
sub
xchg
push
push
pop
add
jl
and
mov
mov
cld
stos
xchg
adc
mov
aaa
repz
push
adc
incl
std
and
cmp
lcall
pushf
fcom
out
fmuls
mov
insb
js
jle
popa
push
div
lods
pop
and
mov
stos
lahf
cwtl
mov
loope
xchg
sub
mov
pop
mov
add
push
cmp
dec
mov
add
cli
std
sbb
or
push
sub
ret
popf
aad
push
or
push
pushf
cmpsb
movsl
sub
or
xchg
and
mov
and
pop
add
test
dec
fstps
out
les
iret
jb
movsl
jl
lcall
cmp
jmp
mov
cltd
fnstcw
push
jecxz
loope
das
mov
into
push
and
loopne
jle
cld
test
sub
xor
jnp
xchg
pop
daa
mov
jae
inc
xor
and
cld
call
cld
ss
ret
aam
dec
xor
fdivrp
and
jae
adc
movsl
or
daa
lahf
dec
aam
loopne
sub
adc
or
mov
jnp
jb
test
adc
in
mov
mov
aam
cmp
pop
add
add
or
push
adc
inc
aaa
ret
stos
jae
rcr
in
lds
dec
loopne
loope
shll
inc
sbb
and
stos
icebp
and
mov
xchg
adcl
cs
cmp
int3
jecxz
movsb
aaa
pop
pushf
sbb
pop
pop
mov
and
lret
loopne
rorl
adc
pop
mov
stc
adc
add
roll
dec
dec
pop
nop
sub
jge
int
and
out
add
scas
add
cmp
les
mov
cmpsb
test
jge
iret
adc
cmp
push
dec
xchg
lahf
incb
xorb
sahf
call
dec
loope
mov
je
shll
out
mov
mov
mov
jnp
fdivl
sub
stos
repnz
inc
std
scas
push
lea
and
sub
cmp
mov
xchg
imul
adc
out
push
add
sub
loop
dec
popl
mov
adc
jbe
jp
mov
cmpsl
jb
adc
mov
imul
mov
dec
xchg
mov
xchg
incb
ret
cmp
fsubrs
and
mov
inc
sbb
jae
jne
jae
scas
cmp
int3
mov
dec
addl
mov
cli
addr16
jbe
lcall
jle
and
or
fisttpl
jbe
fisttpl
mov
sub
movntq
fdivl
movsl
popf
add
xchg
repnz
daa
cmp
and
in
mov
into
cmp
xor
or
movsb
nop
and
cmp
loope
sbb
xchg
aam
jecxz
cmp
pushf
mov
ja
jl
inc
adc
and
dec
cmp
or
insb
nop
movsb
lcall
inc
sbb
lahf
cmc
pushf
mov
ja
addr16
jne
popa
arpl
pop
sub
xchg
push
ja
pop
mov
stos
imul
sti
jecxz
ss
adc
aas
gs
mov
daa
popw
mov
dec
das
loope
lds
inc
cli
outsb
test
xchg
aam
fmuls
jae
subb
std
es
or
mov
sbb
stc
pop
jo
in
sub
or
push
adc
cmpsb
jnp
dec
shrb
sti
in
pop
dec
xchg
fwait
mov
add
lret
jae
mov
push
mov
roll
cmp
or
push
rol
cmc
das
leave
js
and
outsb
in
arpl
pop
sbb
out
pop
jne
fildll
xor
mov
pop
xorb
daa
and
dec
mov
mov
fistpl
xchg
stos
movsb
lret
dec
cli
adc
test
push
into
xlat
mov
bound
data16
int
jae
repz
pushf
fimull
adc
cmp
sub
mov
mov
lods
xor
rclb
std
xor
sbb
mov
push
add
pop
lret
addr16
movsb
rolb
imul
nop
mov
push
aam
fcmovbe
fstpt
ret
adc
movl
out
push
int3
repnz
adc
adc
ss
imul
ja
insl
push
jnp
outsb
out
sbb
aad
int
cmp
xlat
cld
adc
testb
cli
mov
sarb
add
sbbl
loope
test
and
xchg
add
xor
push
pop
lcall
ss
repz
data16
mov
stos
pop
sbb
pop
hlt
mov
pop
aam
pop
fs
ret
add
sbb
icebp
xor
cmp
and
mov
movb
push
aaa
call
inc
jg
fdivl
mov
rcrb
jb
or
ret
fisubrl
cmp
inc
out
stos
push
pop
jno
dec
test
xchg
call
pop
mov
movsb
dec
push
cmp
andb
and
lahf
inc
mov
es
stc
test
mov
or
jo
nop
hlt
xorl
pop
push
lahf
outsl
sbb
ret
mov
mov
and
add
xor
xchg
stc
sbb
int3
mov
sbb
xlat
outsb
add
mov
cltd
aaa
cmp
push
xchg
adc
mov
sub
push
pusha
pop
push
or
fldpi
xor
jp
push
movsl
sub
sbb
xor
incl
outsb
xor
or
xlat
test
cmpsl
call
shl
cwtl
cwtl
insl
mov
push
inc
test
adc
mov
jno
sub
popf
jmp
decb
push
stos
loop
repnz
mov
push
pop
xlat
scas
popf
cwtl
or
movsl
in
mov
sbb
mov
inc
mov
mov
mov
aas
xchg
xchg
testb
or
sbb
incl
sub
inc
loopne
pop
ss
dec
cwtl
pop
mov
sbb
jl
pushf
bound
add
fucomi
push
and
repnz
and
inc
or
dec
stos
xchg
das
test
int3
push
push
test
jae
into
outsl
push
movsb
movsl
sti
sub
push
adc
out
aas
jp
cwtl
loop
imul
dec
and
xor
xor
push
bound
push
sub
data16
shlb
ret
jecxz
das
call
jl
test
jle
dec
in
jo
cmp
xlat
outsb
imul
and
imul
xor
fadds
inc
xchg
iret
fcoms
in
mov
das
js
jp
rcrl
add
sbb
fsubrl
aam
or
pop
test
inc
ds
leave
inc
mov
mov
cli
inc
add
stos
outsl
xchg
lahf
loop
fdivr
jns
mov
jae
xor
pop
sbb
lret
and
or
mov
into
pop
cltd
addr16
cltd
mov
or
jae
stc
cmp
cld
jb
sti
push
jno
and
mov
enter
sti
shr
add
xchg
and
test
loopne
stos
xchg
lock
cltd
sbb
add
out
mov
mov
cltd
jl
push
mov
imul
scas
fisubl
sbb
adc
sahf
mov
dec
setno
lods
mov
test
push
scas
jns
out
jmp
jne
inc
lods
movsl
sub
inc
dec
jb
adc
nop
not
stos
xchg
dec
pushf
aad
pop
lock
ds
lock
outsl
mov
loop
inc
pop
in
lds
aad
add
fs
je
jg
cltd
jne
scas
sbb
mov
scas
pop
lods
fnstenv
movsb
cmp
lahf
out
ljmp
jb
add
insl
pusha
mov
inc
inc
imul
sub
in
xor
xlat
in
jmp
or
dec
xchg
sbb
sti
jp
xor
outsb
rorb
hlt
and
orl
in
mov
sub
jmp
cmpb
fidivrl
lcall
mov
test
shll
andb
int
inc
push
rcll
lock
aaa
lds
repz
pop
fbstp
inc
lea
mov
test
mov
outsb
rorb
stc
push
mov
xor
jp
in
xor
sub
adc
and
jno
sub
mov
adc
dec
cmp
add
cmp
fisubs
in
inc
scas
imulb
ss
jbe
inc
jne
xchg
or
jecxz
push
add
pusha
aaa
dec
sbb
push
ljmp
hlt
and
jg
test
xor
out
jmp
push
scas
sbb
jg
xchg
mov
out
data16
mov
pop
mov
ljmp
pop
dec
xchg
jns
push
sbb
popa
mov
cs
repz
sub
lods
or
sti
push
and
std
mov
cmp
mov
mov
stos
adc
test
test
cmp
mov
cli
jle
cmp
in
sbb
stos
test
cmp
dec
or
loopne
adc
xchg
arpl
mov
hlt
adc
scas
loopne
arpl
cs
xchg
nop
xchg
cltd
out
orl
dec
insb
push
outsb
xchg
outsb
mov
adc
in
add
dec
int
push
arpl
mov
test
loope
dec
mov
rcl
lret
cmp
dec
ss
js,pt
into
sbbl
adc
or
xor
mov
jo
imul
inc
js
dec
fcmovb
pop
inc
and
movsl
sub
fs
in
push
push
lods
movl
jns
or
jne
clc
mov
jecxz
cmpsl
mov
addr16
dec
insl
push
mov
xlat
and
pop
or
mov
jle
pop
xor
xor
fs
or
cltd
arpl
pop
jbe
or
andb
sub
addr16
dec
xchg
sub
mov
aaa
imul
sti
sub
jb
lcall
xor
sub
pop
cmp
mov
mov
sub
jb
roll
int3
push
push
fs
xchg
es
in
loopne
loop
xor
and
je
pop
jmp
jecxz
inc
bound
and
sbb
lret
sbb
in
fsqrt
push
mov
pop
inc
xchg
mov
mov
pop
sub
cmp
sbb
ja
dec
jle
and
scas
lret
fwait
leave
sub
imull
imul
cld
mov
stos
or
sub
sub
mov
cltd
inc
dec
fidivl
or
outsl
int3
push
rcll
sahf
negl
sub
bound
pop
insb
xchg
iret
dec
call
call
jne
imull
lock
cmc
popa
pop
mov
mov
inc
jno
mov
mov
imulb
or
mov
ret
sub
js
fldenv
outsb
je
sub
pop
jns
and
sbb
jle
lea
sbb
lods
lods
sbb
adc
lret
and
in
sar
xor
fadd
stc
add
das
push
sarl
xor
mov
mov
iret
bound
and
mov
dec
add
leave
sub
fsts
icebp
or
loop
cmp
inc
sub
push
jnp
cltd
sbb
add
lret
aad
xor
fldt
jnp
jl
lahf
test
pop
es
add
push
mov
dec
pop
xchg
push
in
mov
bsf
xor
and
jp
dec
sbb
lcall
adc
ds
movl
jno
xor
cmp
mov
dec
add
mov
adc
enter
pushf
mov
add
cmp
sbbl
pop
sub
stc
and
sti
mov
pop
mov
cmp
jno
jne
daa
xchg
jnp
rcll
aad
aas
push
push
mov
data16
sbb
inc
push
jne
cmp
sbb
loope
sub
lods
sbb
lret
cli
sbb
mov
push
mov
and
lods
mov
jnp
pushf
insb
mov
jae
mov
std
push
push
jno
pushf
stos
fs
push
ja
rcr
arpl
inc
xchg
mov
jmp
jg
shll
xchg
imull
sbb
mov
push
or
in
ret
lds
data16
cli
fiaddl
sbb
std
repz
test
mov
pop
fdivs
int3
mov
push
fcomps
je
fwait
mov
cwtl
jecxz
fnstcw
push
xchg
ror
imul
or
out
js
add
lds
inc
xorb
sub
jae
dec
add
mov
daa
xchg
out
data16
pop
nop
sbb
or
nop
add
outsb
inc
and
push
gs
cli
leave
rcr
dec
shrb
stos
sahf
push
lahf
sbb
pop
mov
sti
out
fildl
xchg
push
mov
fwait
call
dec
cli
leave
rcr
dec
adc
jns,pt
stos
insb
aam
addb
sub
shll
hlt
cwtl
mov
ljmp
nop
stc
out
dec
mov
dec
mov
sbb
xchg
push
mov
cmpb
cmc
or
mov
lods
iret
leave
mov
lods
inc
jno
cmove
cmp
inc
pop
addl
add
xor
sbb
out
cs
insl
mov
adc
mov
in
aam
lret
push
sub
outsb
movsb
dec
fcmovnbe
mov
movsl
in
scas
mov
pop
loope
fsts
scas
sti
mov
imul
mov
out
jecxz
rorl
jnp
dec
insb
mov
mov
ljmp
push
inc
push
inc
inc
shlb
adc
mov
test
or
lods
inc
inc
push
dec
mov
xor
xor
decl
dec
out
aas
jp
cwtl
loop
push
in
mov
shlb
sub
mov
arpl
pop
mov
jecxz
into
adc
pop
mov
ja
ljmp
and
adc
dec
xor
dec
or
cmp
ret
pusha
xor
sbb
inc
lcall
sbb
pusha
add
or
or
lcall
adc
dec
and
inc
arpl
lods
cld
pop
push
aas
sarb
pop
int3
ret
mov
stc
in
mov
jo
repz
call
add
sarb
sets
js
popf
stos
adc
sub
xor
daa
cmp
pusha
adc
adc
int
dec
lds
fcomps
in
ds
dec
in
fsubr
and
lret
icebp
xor
and
xor
mov
mov
dec
sub
mov
pop
sub
rcll
xor
push
sbb
mov
add
jmp
test
call
lods
xchg
jne
pop
rolb
and
lds
mov
push
in
jp
add
inc
outsl
jge
dec
cwtl
repnz
cmp
xor
test
push
int3
mov
jno
lahf
cmp
fdivl
sahf
xor
insb
cmp
ds
mov
add
jmp
ds
or
sbb
mov
or
outsl
dec
lret
push
fidivs
inc
mov
xchg
mov
jbe
jg
xchg
add
fucomi
outsl
repnz
popf
outsb
sub
cld
jge
and
mov
and
imul
mov
inc
mulb
sbb
popf
in
jno
js
inc
das
sub
out
cmc
mov
fs
xor
cld
mov
cltd
jmp
das
lods
push
cmc
pop
in
call
sbb
cs
popf
lods
aaa
int
js
mov
jb
inc
mov
mov
or
int3
or
xor
inc
popa
xchg
test
adc
pop
insb
jl
and
jge
cmp
sub
xchg
pop
and
cmp
xchg
cmp
into
xchg
lea
pop
pop
scas
adc
inc
jb
push
mov
fs
pop
jno
xor
int
mov
rorb
sbb
std
out
xchg
js
or
stos
insb
mov
mov
jno
gs
or
xchg
fdivl
imulb
xor
rorb
nop
pop
scas
cmpsb
jno
adc
push
xchg
in
cmpsl
test
inc
xor
push
adc
insl
fs
mov
push
pusha
mov
out
lea
xor
xchg
mov
and
jge
test
mov
or
sub
push
cld
add
adc
or
ss
rolb
iret
xchg
xchg
push
fnstsw
jg
mov
imul
inc
adc
fildl
mov
decl
xor
xor
in
pop
imul
jae
inc
jecxz
xor
and
adc
adc
or
jno
mov
outsb
adc
or
enter
mov
pop
and
into
adc
outsl
mov
dec
mov
out
jmp
dec
test
pop
sbb
je
mov
mov
sub
shll
fdivp
aaa
ss
sub
or
data16
cmp
push
mov
aam
js
mov
sub
loopne
inc
sbb
mull
lcall
push
adc
inc
mov
sbb
adc
sbb
scas
mov
jmp
adc
inc
push
jnp
mov
push
sbb
fcomps
fs
fs
sbb
out
ret
jnp
shlb
push
mov
mov
outsb
insl
push
and
xchg
lahf
ja
daa
outsl
daa
mov
imull
ret
bnd
or
jmp
fs
test
adc
mov
or
sbb
lea
jns
jecxz
sbb
mov
or
jbe
js
in
adc
mov
adc
outsb
mov
mov
pop
ja
test
movsb
xchg
fcoml
test
pop
push
cmp
pop
int3
es
addr16
lea
push
jl
push
icebp
icebp
adc
jne,pt
dec
imul
and
out
out
leave
mov
adc
call
enter
jl
xchg
imul
scas
dec
imul
or
sbb
jge
add
adc
into
es
pop
lahf
pushf
sbb
test
sbb
data16
inc
push
dec
push
inc
jb
push
ds
mov
inc
out
lahf
scas
pop
lods
je
mov
dec
pop
mov
mov
inc
cwtl
loop
pop
xor
ss
cmpl
mov
adc
ds
pop
adc
pop
insb
jl
and
jge
cmp
sub
xchg
pop
and
cmp
xchg
cmp
or
sub
or
outsl
sub
shlb
mov
jbe
insb
nop
mov
les
sub
pop
adcb
jbe
ljmp
adc
xor
jbe
push
loop
fucomip
push
jnp
pop
ficomps
jecxz
shrb
stos
adc
pop
fldl
fucomip
call
mov
mov
mov
sti
sahf
ret
mov
jb
bound
inc
pop
cmpsb
mov
cmp
adc
push
mov
ficomps
inc
neg
std
lea
ret
dec
sti
inc
js
or
pushf
dec
mov
rorl
mov
into
mov
push
push
movsb
fs
mov
dec
cmp
xchg
movb
jno
mov
push
icebp
inc
cmp
call
xor
adc
jb
loop,pn
pusha
hlt
pop
repnz
bswap
cwtl
pop
mov
icebp
lods
aam
into
test
push
sub
jae
mov
das
and
jecxz
and
mov
mov
push
push
out
jg
cmp
lods
mov
or
sub
add
mov
es
mov
es
mov
lret
mov
xchg
mov
add
dec
lret
mov
lret
mov
data16
cmpb
mov
xchg
aaa
push
out
pop
dec
push
dec
loope
jns
insl
mov
into
or
push
adc
fldenv
outsl
popa
rcll
idivl
pop
insb
prefetch
xchg
xchg
out
sub
add
ja
call
and
leave
jnp
lods
cs
jnp
or
test
sub
inc
loop
mov
jne
in
jb
jecxz
sub
xchg
mov
and
popf
orb
jne
out
test
lods
push
stos
ja
dec
popf
xchg
cmp
add
in
xor
push
cwtl
shlb
das
in
pop
movsl
rorl
dec
adc
out
sbb
inc
jmp
pop
sbb
out
fidivrl
stos
nop
push
sbb
xor
jmp
cmp
dec
repnz
and
lahf
add
clc
lret
insl
xor
jle
adc
cltd
outsb
sub
lret
sub
fnsave
xlat
rcrb
pushf
leave
mov
jo
sub
dec
adc
jl
imul
scas
das
adc
mov
pop
jge
bsr
mov
jb
sub
outsl
inc
into
scas
fistps
mov
dec
jo
jnp
mov
lock
cli
xor
push
mov
and
push
pop
xchg
hlt
cs
xchg
scas
into
inc
sbb
adc
test
push
push
mov
mov
inc
dec
mov
out
test
mov
ljmp
rcll
adc
outsb
cmp
inc
inc
daa
popf
cmp
xor
push
sbb
out
jne
jo
pop
test
pop
imul
stos
adc
pop
push
xchg
movsb
mov
mov
scas
jmp
and
xor
mov
aaa
push
imul
fists
repz
stc
sub
jl
int
dec
mov
xlat
push
mov
fidivrl
xchg
pop
lret
inc
jae
jns
sbb
adc
sbb
cmpsb
jne
iret
push
sub
fisubrl
and
jns
jmp
mov
mov
xchg
and
in
loopne
test
pop
fnsave
pop
mov
lret
scas
xor
aas
push
mov
push
lods
mov
sub
jp
or
or
pop
sub
cmp
mov
mov
scas
test
jb
jle
movsl
or
inc
aas
lret
pushf
mov
jle
into
mov
pop
test
cmpsb
addr16
fwait
inc
pushl
ja
dec
sbb
sbb
pop
add
adc
lods
mov
or
pop
imul
mov
jg
pop
cmp
xor
int
sti
fwait
pushf
jo
xchg
test
xchg
movl
enter
cmp
lock
bound
sbb
inc
jle
adc
in
and
cmp
nop
test
ja
and
test
inc
adc
fdivrs
stos
out
int3
adc
pop
cmpsl
dec
pop
xchg
mov
inc
xchg
decb
mov
lret
mov
mov
cmp
lds
push
jge
jg
mov
outsl
xlat
stos
lcall
dec
xchg
dec
scas
iret
insl
sbb
cmp
sbb
or
test
mov
sti
sub
push
mov
js
xor
addl
and
sub
pop
pop
outsb
push
xor
mov
inc
es
dec
gs
int3
inc
jmp
add
mov
in
and
aam
mov
mov
hlt
or
jecxz
sub
decl
push
loope
js
push
orl
mov
mov
dec
mov
ror
jo
sub
cli
aaa
xchg
sub
inc
daa
jo
jmp
jle
cwtl
scas
ds
sarl
sub
mov
cmp
adc
sbb
std
xor
mov
jae
inc
adc
lods
inc
mov
lods
sbb
lods
push
out
loope
pop
enter
cs
cltd
jne
imul
ret
filds
imul
in
mov
loope
mov
pop
test
lahf
insl
inc
xchg
or
sbb
pop
mov
mov
cld
pop
xchg
lcall
or
pop
pop
iret
inc
pop
cltd
out
adc
mov
pushf
add
and
mov
es
xlat
mov
jne
push
pop
pop
andb
cmp
in
test
cmp
movsl
add
incb
loope
movsb
mov
outsl
stos
add
stc
xor
pop
popa
jp
mov
push
in
mov
test
roll
lods
xor
jge
inc
imul
inc
rcrl
cmpsl
push
dec
mov
call
sub
fimull
lock
pop
cmc
mov
mov
out
mov
sbb
pop
notl
mov
in
fdivrl
stos
clc
jge
xchg
ljmp
lret
jae
imul
and
and
jno
fildll
or
into
sti
leave
jecxz
pusha
outsl
and
mov
call
fists
sub
lds
lock
pop
leave
xchg
inc
pop
pop
mov
xchg
outsl
lds
loop
pop
stc
cli
cmpsl
stos
add
jg
sahf
jo
adc
fsubrs
cwtl
loope
imul
rep
jae
popf
lahf
xor
mov
fidivrl
sub
pop
clc
inc
frstor
push
adc
sahf
ljmp
sbb
mov
mov
jno
sbb
je
cmp
test
xchg
mov
pop
data16
sbb
cld
ja
lods
cmpsb
lret
mov
lahf
stc
dec
dec
aad
roll
push
mov
aas
mov
mov
pop
add
jnp
cs
pushf
lea
lea
test
rorl
jne
rorl
dec
ds
lods
lcall
jg
ret
xchg
in
lock
cmpsl
out
repz
aaa
jp
xor
psrlw
dec
dec
pop
and
adc
and
mov
pop
test
push
incb
inc
aaa
fdivrs
xchg
jg
inc
add
dec
daa
mov
sbb
scas
dec
mov
les
aaa
jge
int3
xor
add
test
pop
leave
inc
stos
inc
mov
xchg
shll
imulb
push
mov
repnz
jbe
popf
or
push
stc
fnstsw
ds
out
scas
test
inc
add
jmp
inc
bts
daa
out
cmp
loope
data16
jge
add
add
pusha
scas
inc
outsb
sbb
push
popf
popa
stc
les
enter
adc
adc
cmp
cmp
push
sub
sarb
lea
jp
mov
and
lret
sahf
push
lret
imul
std
shrl
xlat
iret
xchg
sti
fmulp
pop
cmp
or
mov
aam
fwait
outsl
push
mov
shl
cmp
pop
outsl
popf
lock
inc
and
sub
imul
push
sbb
pop
pop
adc
jl
or
pop
inc
bound
mov
push
jl
in
jle
out
xor
js
dec
fistpl
es
cmp
fnstsw
ret
push
out
cmp
cmpsb
sqrtps
pop
sbbl
cld
lods
fisttpll
lds
loopne
data16
xor
repz
cld
xlat
pushf
call
and
scas
ljmp
aaa
adc
inc
nop
subb
jns
sbb
pop
mov
push
sub
pop
insl
or
dec
sbb
in
cmp
adc
cmp
pushf
inc
inc
repz
stc
adc
push
or
sarl
xchg
sbb
imul
dec
pop
fadd
mov
xchg
scas
lods
jns
outsl
int3
jge
cld
movsl
jl
popa
xchg
cmp
fxch
rcr
nop
popa
adcb
xor
dec
add
shl
jmp
cltd
cmp
cmp
lret
or
add
fwait
dec
dec
xchg
testb
sbb
jmp
dec
cmp
xchg
clc
fsubp
mov
dec
inc
lock
pop
lahf
std
inc
scas
xlat
outsl
and
es
lock
cmpsl
std
sbb
ja
repnz
iret
mov
bnd
pop
xchg
sbb
clc
lds
loope
fwait
push
sub
adc
arpl
mov
adc
lahf
lea
lock
jecxz
push
faddl
insb
test
movsl
popf
push
mov
out
dec
push
xchg
out
inc
add
repz
lahf
dec
and
pop
rcll
fldenv
adc
cmp
push
dec
sbb
inc
sub
scas
jge
fistps
fmulp
rclb
fisubs
lcall
call
out
sbb
jl
inc
sti
pop
cmp
ds
jle
inc
das
cld
and
int3
xor
in
and
data16
add
fcomps
cmpl
mov
ss
push
xor
cmpsl
pushf
ficoms
cmc
inc
cmp
mov
jbe
dec
dec
repnz
loope
sti
movl
adc
nop
xorb
xchg
ficompl
mov
xchg
cmp
fdivrl
loopne
pop
js
mov
repnz
mov
je
call
popa
fwait
ds
mov
sbb
rcl
cmpsl
loop
jne
sarb
pop
out
sub
xorl
fsub
xchg
and
jl
fldcw
pop
cmp
xor
cs
in
jb
bound
sbb
pop
into
xlat
jns
fstpl
mov
add
int
cmp
and
adc
into
inc
push
cmpsl
sub
mov
sbb
rcrl
aad
cmpsl
and
sbb
stc
sub
xchg
inc
pop
or
or
push
mulb
xchg
test
cmpsl
pop
ret
inc
jg
repnz
jns
int3
mov
mulb
xor
and
mov
les
fwait
xchg
jb
out
out
xadd
pop
stos
daa
fldl
insb
mov
shrl
xor
jmp
shll
jle
or
fsubrs
push
pop
mov
xchg
or
test
ret
es
shll
into
lods
jbe
xchg
popf
lret
ficoml
lahf
sbb
rcl
sahf
aad
fs
js
push
cwtl
adc
call
xchg
orb
imul
rcrl
push
popf
xchg
aas
xchg
xchg
jno
loope
in
out
xor
jno
into
in
jbe
xchg
xor
lods
out
cmpsb
mov
mov
hlt
pop
mov
jo
jp
mov
and
lret
arpl
jnp
insb
adc
pop
lods
xchg
fadds
aam
add
mov
inc
fcmovb
xorl
lret
setbe
cmpsb
movsb
adc
pop
pop
add
sub
pusha
sti
xlat
add
call
stos
das
sbb
xchg
out
fadds
ficompl
mov
jbe
test
aaa
push
lea
mov
adc
pushf
fistps
xor
and
push
ret
stc
std
in
inc
mov
ret
jmp
jnp
inc
test
mov
inc
jbe
decb
jmp
sbb
into
dec
and
cmc
pop
dec
push
sbb
adc
xor
enter
xchg
inc
outsb
pop
push
sti
push
jne
test
pusha
and
test
mov
arpl
sub
mov
mov
sbb
pushw
inc
xchg
adc
cmp
fisubs
imul
int3
or
push
loope
pusha
xchg
fs
hlt
fidivs
mov
xor
in
lahf
adc
sub
bound
push
and
jb
dec
lahf
inc
sarl
add
arpl
aas
je
or
lea
mov
push
loop
xchg
mulb
add
and
aad
or
shrb
pusha
lock
out
push
ret
sbb
std
jle
adc
icebp
cmp
out
cmp
push
pushf
lock
lock
mov
mov
jb
es
push
cmpsb
dec
push
sub
mov
enter
pushl
and
icebp
leave
data16
push
inc
and
fs
pop
lret
mov
clc
cmp
lahf
xchg
bound
out
lods
loopne
inc
int
sahf
scas
fsubrl
es
mov
outsb
cmpb
mov
rcrl
inc
xor
jns
loope
adc
sahf
jae
bound
cmpsb
and
leave
int
rol
and
sbb
fcom
int3
mov
mov
les
outsl
mov
mov
pop
jo
lock
repz
imul
jns
add
mov
enter
cmpsb
add
test
ja
in
insb
and
push
mov
icebp
adc
mov
in
jmp
cltd
push
pop
dec
dec
adc
ret
bound
jecxz
mov
xlat
mov
mov
sbbl
mov
mov
das
lock
mov
inc
adc
mov
aas
leave
mov
sbb
jle
jns
xchg
mov
stos
cmpsb
repz
ss
mov
jecxz
ret
sti
push
cltd
push
cs
sub
loop
xchg
div
daa
adc
jbe
mov
gs
xlat
mov
pop
jno
lods
ficoms
or
inc
ja
push
jl
hlt
jl
xchg
cmc
jno
mov
mov
std
outsl
xor
in
inc
xchg
lret
mov
mov
dec
imul
sar
push
ret
jbe
and
cmp
fxch
out
and
xchg
pop
pop
popf
popf
or
dec
xor
mov
leave
das
sahf
dec
push
sti
lock
pop
xchg
jnp
pop
jl
stc
mov
or
jbe
clc
aad
mov
and
out
testb
in
push
xchg
jo
push
mov
clc
jmp
mov
rcll
std
call
sub
cmp
idivl
mov
pop
mov
pop
push
sti
push
ljmp
pop
mov
mov
sbb
xchg
push
addps
cmp
imul
push
push
popf
stos
mov
sub
jecxz
mov
push
pop
enter
mov
out
dec
fldt
movsl
pinsrw
add
mov
test
dec
jae
sti
or
and
jb
pusha
add
test
cmp
fstpl
rolb
mov
into
mov
sub
negb
mov
arpl
rclb
int
add
push
push
inc
jg
pop
jp
ficoms
sub
fs
sub
mov
mov
in
jge
sub
pop
pop
adc
mov
stos
xor
test
or
mov
adc
mov
push
ljmp
popf
test
jo
testb
cmpsb
xlat
fsubl
out
scas
or
push
xchg
mov
loop
insb
mov
push
dec
xor
fwait
or
add
imul
xchg
xor
mov
sub
call
adc
sub
lock
add
fadd
jno
inc
sub
inc
dec
inc
xor
scas
push
pop
jne
imul
dec
insl
shr
repz
outsl
mov
and
or
xchg
shrb
push
cmp
ds
inc
repnz
insl
xor
pop
aam
popa
xor
dec
fwait
shlb
push
push
mov
mov
fbld
in
fmull
cld
mov
pop
dec
pusha
xor
add
mov
out
cmp
scas
ds
sbb
rorb
lret
push
popf
sbb
rolb
je
cmp
loope
popf
fucomip
fcoml
mov
jae
xchg
pop
ficomps
push
aas
pop
push
or
aam
std
jl
notl
sub
enter
leave
cmp
ljmp
lret
lcall
es
adc
jg
icebp
dec
pop
xlat
push
orb
mov
test
imul
rclb
sbb
dec
lcall
xchg
aas
dec
popf
sbb
cmpsl
pop
xchg
int3
scas
outsb
pop
and
cwtl
popa
imul
adc
push
icebp
pop
adc
xchg
test
stos
int3
sti
insb
adc
xchg
fincstp
int
ret
mov
cmp
rcr
xchg
adc
mov
cmp
inc
bound
xchg
sahf
or
xchg
dec
es
or
jno
sbb
insl
fidivs
insl
add
xor
in
mov
xor
mov
push
inc
int
and
lods
mov
sbb
and
push
sub
scas
inc
les
mov
imul
or
mov
and
loop
jbe
inc
lods
xchg
stc
mov
push
cmp
xlat
jge
mov
xor
jno
cmp
int3
mov
cmp
into
in
and
sti
es
dec
cs
mov
and
lahf
clc
push
sti
out
pop
aas
addr16
lds
lret
dec
daa
lock
xor
jbe
jns
cltd
add
cwtl
mov
or
jl
stos
mov
mov
sti
dec
js
xchg
pushf
adc
imul
xchg
adc
add
outsb
arpl
mov
cmp
inc
vmovlhps
jne
hlt
sub
cs
and
ret
push
push
dec
xchg
sbb
sub
adc
sbb
mov
mov
int3
push
mov
pop
sub
dec
hlt
and
cmp
outsl
cmpsb
flds
sub
test
pop
xchg
adc
in
ljmp
or
or
inc
fimull
dec
jg
mov
mov
xor
repz
mov
sub
push
mov
xor
insb
add
repz
in
mov
fmul
or
pushf
pop
and
lcall
lcall
loope
mov
xchg
adc
push
out
mov
je
pushf
int
add
aam
lods
sub
xor
mov
lods
mov
jae
ljmp
adc
and
mov
mov
sti
fisttpl
clts
dec
ret
push
add
mov
sub
nop
rep
and
adc
mov
cmp
jp
xor
or
xchg
inc
mov
sarb
sti
cmp
jb
push
xorl
or
sbbl
lock
push
lea
mov
inc
or
in
cmpsl
push
cmp
and
cmpsl
dec
mov
loope
push
out
inc
loope
orb
inc
lods
fisttpll
ret
and
pop
mov
mov
insb
add
xchg
push
jnp
mov
push
hlt
push
dec
inc
cwtl
adc
adc
lea
mov
push
in
xor
lea
xchg
jmp
and
and
jb
out
pop
std
xchg
cmp
mov
into
adc
scas
data16
inc
aam
xor
mov
mov
cmc
test
insl
js
mov
dec
inc
dec
mov
out
mov
js
mov
bound
stc
sbb
xchg
push
bound
pop
lock
push
mov
push
mov
xor
xor
fnstenv
sub
push
xor
insb
push
fmul
add
out
loop
lds
pop
aaa
or
popa
sub
test
cmp
mov
bound
sub
lahf
call
mov
outsl
packuswb
mov
and
mov
lcall
mov
or
out
cmc
push
fwait
vmwrite
mov
fdivrs
ss
jnp
sub
jnp
pop
pop
xchg
and
rcll
adc
sarl
or
xchg
xor
pop
xchg
cld
push
add
mov
js
call
fs
das
cmp
and
cmp
xchg
push
call
imul
xor
mov
ficoml
rol
sub
aad
ljmp
testb
pushf
scas
sbb
sbb
je
push
inc
enter
fisubs
pop
xchg
lods
adc
xor
dec
mov
jno
sub
mov
pop
ss
imul
loop
sbb
pop
arpl
xchg
add
lods
dec
adc
xor
cld
lds
pop
cmpsb
push
cmp
xchg
inc
fdivs
lcall
push
ja
lret
adc
dec
out
clc
sarl
jecxz
pop
leave
jp
fcoms
mov
movsb
pop
and
cli
jp
mov
and
lret
clc
shrb
xchg
jb
test
pop
or
xchg
mov
sahf
dec
cmp
adc
arpl
in
xor
push
mov
xchg
test
dec
cmc
sub
sbb
loop
add
xor
cs
and
lcall
popa
lcall
push
jl
push
lock
push
push
cmp
jp
cmc
cld
sbb
mov
aas
pop
xchg
mov
xchg
movsb
scas
notl
int
je
popf
mov
sub
inc
jno
lcall
push
decl
aas
pop
xchg
mov
add
icebp
push
inc
lds
sbb
jg
xchg
pop
pop
jle
and
lret
orl
or
jmp
mov
mov
sub
je
xor
stos
orl
xor
push
into
cmp
mov
test
sub
sbb
xchg
rep
mov
in
adc
mov
sbb
sub
jb
xchg
in
inc
je
jb
pop
in
or
sub
nop
adc
cmp
dec
cmpsb
subl
pop
mov
mov
mov
jp
cmpsl
int3
mov
add
xor
daa
inc
scas
pop
mov
push
daa
ficomps
cmpsl
in
popf
xchg
cmp
mov
pop
dec
repz
push
mov
xor
lods
pop
cmpsl
adc
pop
xchg
sbb
sub
sbb
xchg
ljmp
sbb
cli
out
data16
out
inc
gs
movsl
es
cmc
sbb
out
cld
test
dec
cmp
into
sbb
stos
xor
int3
in
xor
push
push
es
loopne
icebp
mov
popa
pop
or
mov
hlt
push
pop
repnz
imul
imul
sub
pop
jmp
scas
test
sbb
xor
sub
push
xor
xor
sbb
pushf
pop
dec
sti
leave
in
push
jg
je
xor
jge
mov
xchg
dec
pop
jg
mov
in
aas
js
inc
mov
mov
ds
mov
jnp
fidivrs
in
insb
lahf
popf
push
inc
sar
lret
inc
and
bound
fucomi
xchg
cld
jp
cs
pop
aam
les
ja
mov
lahf
lds
mov
inc
push
mulb
test
cmpsl
ficoml
ss
xor
lret
lds
jb
mov
and
add
jno
out
sbbl
in
mov
add
ficompl
or
pop
sub
stc
mov
ljmp
mov
pusha
sub
repz
and
sbb
cli
and
jg
mov
pop
ja
sarl
jge
xchg
popf
cmp
xchg
and
or
sbb
xchg
in
sub
cwtl
xlat
dec
sub
movsl
ja
add
repz
sti
jo
cltd
mov
push
int
push
mov
mov
pop
sub
outsb
lea
adc
sub
xor
dec
push
pop
clc
or
aaa
lahf
xor
add
fs
mov
sub
sbb
mov
mov
mov
add
adc
jg
jg
scas
add
jno
pop
lock
adc
mov
shrl
add
test
and
dec
ds
lahf
cmp
shll
pop
shll
cltd
aas
loop
sbb
push
mov
je
dec
mov
cs
dec
inc
mov
test
push
pop
ss
outsl
adc
fst
cmc
leave
cltd
in
dec
push
stos
push
dec
mov
dec
xor
inc
xchg
out
pop
movsb
or
sbb
loopne
ljmp
shr
fidivs
fisubrl
sti
cwtl
dec
lods
dec
ds
daa
mov
test
pop
imul
call
jle
mov
in
xchg
scas
jmp
popf
sbb
mov
xchg
and
aam
insb
inc
movsl
and
insl
mov
scas
cli
xchg
sbb
out
pop
in
jno
ss
es
test
dec
cmpsl
push
fdivrl
push
jo
ljmp
stc
pusha
pop
dec
popf
mov
les
xchg
jg
jecxz
xor
ret
cmp
out
sahf
jnp
repnz
bound
mov
adc
loope
or
jnp
dec
fwait
push
popf
ds
xor
cmp
add
sub
push
enter
or
cmpsl
mov
jno,pn
xchg
bound
imul
out
sub
imul
icebp
gs
jmp
adc
pusha
sbb
add
test
ja
pop
dec
jg
ds
call
mov
test
xor
mov
lods
sar
insl
mov
and
mov
jno
jae
inc
in
push
jne
out
cli
int3
test
mov
jne
dec
mov
ljmp
shlb
inc
ficomps
jo
and
inc
cwtl
dec
mov
jb
push
adc
call
hlt
das
push
fs
or
shlb
mov
jp
mov
clc
aad
clc
aad
leave
in
add
mov
xor
and
sbb
mov
movsl
rcrb
pinsrw
and
sbbl
mov
mov
icebp
loopne
jb
pop
dec
in
inc
add
fs
jle
mov
jno
test
sar
adc
leave
into
lods
add
adc
ljmp
xchg
roll
out
jmp
mov
cli
cltd
or
daa
rclb
jae
jae
adc
das
movsl
mov
cld
subl
inc
cmp
push
repz
scas
cltd
mov
push
int3
xor
and
outsb
jg
cmp
movsb
mov
sbb
pop
sbb
pop
mov
xor
push
pop
cmpsb
stos
push
dec
push
xchg
out
jo
inc
inc
dec
and
or
sub
scas
les
mov
sub
out
or
dec
mov
and
or
jp
insb
lods
sbb
mov
js
inc
push
push
out
iret
dec
add
xor
jno
pop
dec
mov
aaa
push
xchg
popa
push
daa
adc
add
sub
je
mov
dec
dec
mov
hlt
pop
xlat
sub
cld
stos
push
mov
mov
into
ja
xchg
divb
or
push
rolb
mov
cmpsl
xlat
mov
cmp
cltd
es
pop
inc
dec
sbb
js
scas
inc
inc
mov
mov
movsl
scas
adc
adcb
lcall
sti
imul
inc
mov
lahf
ja
sarb
pusha
es
aad
arpl
xor
xor
mov
cwtl
cmpb
push
sbb
pop
hlt
jns
stc
push
or
scas
je
test
push
out
ret
fldenv
dec
outsl
pop
fidivl
std
mov
mov
int
and
mov
add
sahf
inc
out
mov
pop
push
sub
call
fistpll
mov
push
sbb
sbb
xchg
mov
mov
pop
aaa
fs
mov
mov
loopne
xor
xchg
sbb
pushf
xlat
out
je
xchg
or
xor
mov
jo
xor
les
push
mov
sub
lcall
cmpsl
scas
ret
fdivl
cmp
fstl
sahf
or
adc
daa
cltd
scas
out
lret
dec
pusha
jecxz
sub
push
add
test
loop
xchg
xor
arpl
ret
test
addb
arpl
sbb
lahf
jl
cli
int3
xor
sub
mov
push
sbb
addr16
xchg
mov
ss
sahf
std
dec
scas
fdivl
sub
pop
xlat
jo,pn
ret
ljmp
adc
lcall
mov
repz
fxch
rcr
nop
popa
addb
ret
insb
outsl
hlt
or
or
int
fiaddl
mov
loop
jns
lods
js
jge
jmp
repnz
adc
movl
xor
adc
iret
movsb
rcll
xchg
test
dec
sub
stos
cmp
inc
outsb
pop
dec
fsubrs
jo
push
enter
movsl
hlt
jecxz
scas
ss
loope
mov
pop
daa
add
je
and
mov
imul
ja
cld
and
push
stos
repz
push
inc
rorl
adc
cmp
loop
lods
cmpsb
cs
test
jmp
jp
jbe
jmp
rorl
mov
sub
mov
mov
call
sbb
jno
or
fucomip
jns
insl
sbb
xor
leave
add
xchg
sub
inc
dec
nop
imul
inc
mov
lods
mov
adc
lret
mov
rcrb
shl
imul
arpl
push
scas
and
scas
cmc
popa
insb
mov
notl
fwait
pop
mov
mov
or
dec
jmp
insl
add
pusha
sub
xor
pop
enter
insl
dec
aaa
gs
mov
inc
adc
ss
int3
jno
jle
add
sub
fwait
addr16
test
test
lods
arpl
pop
cmp
inc
sbb
dec
xchg
push
sbb
enter
ret
mov
outsl
stos
and
clc
ret
add
movsb
call
mov
jbe
fstpt
inc
pushf
adc
call
cwtl
mov
rol
in
rorb
shll
xchg
pop
stos
and
dec
and
push
stos
add
push
icebp
inc
daa
test
xor
mov
push
push
popf
jno
rcr
dec
xchg
cmp
jp
jl
adc
add
ret
jns
sarb
xchg
enter
out
mov
push
xchg
bound
loopne
push
jne
jne
inc
cmc
pushf
or
dec
cmp
inc
enter
sbb
or
jg
in
fdivrs
mov
jne
pop
xor
pop
cmp
sbb
xor
sahf
mov
cltd
and
mov
push
jns
sahf
cmp
aaa
push
or
rclb
mov
xchg
std
xchg
inc
sahf
shrb
inc
mov
or
xchg
cmp
mov
decb
xor
cmpb
mov
cli
push
sahf
mov
addr16
xchg
mull
in
xchg
mov
pushf
mov
iret
inc
dec
and
pop
ret
scas
sub
sbb
sub
mov
mov
push
daa
jne
cwtl
test
sbb
sub
and
fdivr
push
xchg
shll
cltd
jmp
mov
filds
ljmp
test
popa
sbb
cmc
inc
dec
push
mull
mov
jge
pop
shl
mov
sbb
mov
push
push
inc
cmc
xchg
imul
inc
mov
sub
pop
adc
jge
cmc
mov
aas
and
test
push
push
pop
in
enter
dec
xchg
scas
cmp
rolb
leave
dec
jp
aaa
push
jb
in
es
adc
fs
in
outsl
cmpsl
add
stos
lods
jns
inc
movsb
xchg
xchg
xchg
adc
push
jns
push
pop
out
outsl
inc
outsl
push
hlt
mov
adc
test
lahf
pusha
call
aaa
imul
loop
repz
mov
mov
pop
jne
sub
and
jb
sti
add
jp
mov
adc
shll
pop
and
fists
mov
aas
idivl
pop
leave
mov
imul
or
fcompl
mov
decb
mov
xchg
lods
pop
cwtl
sbb
int3
cld
add
sahf
add
int
inc
jp
push
hlt
jp
dec
test
into
adc
lds
ja
movsb
dec
insl
mov
pop
or
mov
mov
std
cmp
lahf
cmc
out
aaa
mov
and
js
sbb
inc
push
jmp
mov
imul
arpl
adc
fdivr
jbe
or
mov
or
cmpsl
fwait
jl
and
push
sar
out
jns
cltd
mov
cmp
test
sbb
fists
cmp
fsubl
xor
fdivs
ror
in
and
push
sub
push
cmc
mov
into
fdivs
push
nop
or
mov
dec
pop
test
adc
mov
pop
addl
sti
scas
sub
push
test
xor
push
xor
ja
xchg
adc
aas
dec
push
xor
mov
mov
pop
in
jmp
dec
movsl
add
dec
pusha
xchg
sbb
data16
xchg
imul
sub
stos
cld
std
cli
enter
inc
imul
stos
stos
nop
xchg
jge
fsubs
fsubs
dec
lds
cmpsl
ds
sbb
das
and
cli
push
cmpsl
and
sbb
cwtl
lret
xor
les
data16
or
sarl
int3
inc
cld
in
pop
mov
in
sti
jmp
ffree
dec
dec
pop
mov
and
loopne
scas
or
mov
jmp
mov
or
fnstcw
xchg
jmp
fwait
push
push
out
mov
cmp
and
xor
ja
fs
jno
cld
repz
xchg
mov
sbb
cwtl
lret
xor
les
data16
enter
rcl
std
inc
fldcw
sbb
pop
inc
pop
test
jl
mov
inc
sub
add
lretw
mov
cwtl
ret
inc
fimuls
data16
mov
jo
dec
push
jg
or
cs
inc
add
out
subb
mov
stos
fmull
sub
inc
mov
jge
push
jge
aad
sbb
aaa
inc
xor
sbb
out
nop
jl
aad
stos
or
add
mov
sbb
stos
jp,pt
fdivl
bound
adc
sahf
pop
dec
pushf
bound
not
adc
xchg
shll
cmp
sub
jmp
rcrl
mov
jl
inc
pop
fadds
xor
jge
jae
fidivrs
inc
cmp
stc
xor
add
cs
dec
lret
bound
pop
mov
xchg
xor
jmp
sti
lock
and
cwtl
mov
mov
push
or
push
sub
mov
nop
or
sarl
das
adc
pop
aad
dec
addl
sbb
pop
call
sbb
jno
in
mull
pop
cmp
mov
int3
push
cmp
inc
xor
adc
inc
aas
adc
fsts
mov
xor
int
or
sbb
shrl
xchg
xchg
fdiv
dec
ljmp
sbb
fistps
dec
int3
xchg
jg
cmp
add
test
or
stc
sbbb
aaa
cmp
or
scas
dec
fucom
fisubl
pop
mov
pop
and
dec
leave
ret
push
daa
xor
or
insb
pop
pushl
scas
or
dec
sbb
inc
dec
adc
fcoml
mov
or
and
hlt
orb
bnd
jecxz
test
int
into
mov
jge
dec
xchg
mov
movsb
push
scas
scas
mov
xchg
xorl
sub
push
or
dec
push
mov
add
mov
xchg
hlt
addr16
mov
jno
addr16
flds
sub
jns
aaa
dec
fxch
mov
stos
xchg
aad
ret
pop
aad
cmp
inc
adc
cmp
pop
sub
jg
pop
test
aas
mov
fistl
push
in
dec
inc
test
inc
push
add
cld
add
sub
aaa
xchg
insl
fistpll
add
sub
in
js
jnp
xchg
lret
mov
cli
incb
fdivrl
xor
add
mov
xchg
cmp
fistps
les
push
add
cld
add
cmp
mov
rcr
pop
pop
sub
hlt
mov
into
xchg
pop
out
lea
lock
lahf
dec
cld
push
ja
stc
stc
sub
cltd
dec
stos
pop
out
loop
jno
pop
shr
mov
add
xchg
jp
cld
pop
and
repz
out
gs
push
in
xchg
mov
fcomps
ja
shl
xchg
cmp
and
push
imul
mov
mov
push
pop
xchg
adc
mov
cmp
addr16
cmpsw
push
dec
stc
loop
sahf
mov
jnp
or
in
and
bound
lea
adc
mov
pop
jg
xor
pop
push
push
stos
imul
xorb
scas
jge
fsubrl
scas
xchg
mov
jae
mov
andb
mov
minps
stos
push
push
es
cmp
xchg
sbb
mov
add
jae
mov
into
mov
notl
or
ret
add
repz
push
dec
pop
xchg
mov
out
lods
pop
ss
sub
dec
call
push
mov
xor
jbe
pop
call
mov
sub
inc
sbb
pop
jno
mov
and
sbb
lret
psrld
xchg
mov
sbbb
lcall
aaa
out
std
pop
xlat
sarl
mov
mov
adc
and
cmpl
imull
push
pop
hlt
nop
cmp
cmp
aad
or
movsl
push
ss
sar
ror
sub
jns
mov
pop
dec
cmp
les
sub
pop
add
sub
arpl
jl
adc
xchg
pop
faddl
push
cmp
dec
add
cmp
sub
fisttps
movsb
jmp
and
je
or
subl
in
sub
fdivrl
cmp
mov
push
aaa
lahf
mov
push
mov
or
push
xchg
fdivp
lods
mov
dec
shrb
pop
int3
jnp
addl
xor
mov
push
fdivl
dec
div
scas
mov
dec
push
in
push
hlt
adc
pop
lret
xchg
rorb
xor
dec
push
jl
das
sbb
jns
subl
mov
js
lahf
imul
add
mov
aad
mov
jno
loope
push
dec
sti
and
pop
mov
rcll
leave
inc
mov
mov
xchg
stos
xor
mov
into
lret
in
adc
push
sub
ret
pusha
and
out
jg
addl
dec
jmp
in
mov
int3
loop
dec
test
or
and
cld
into
test
adc
add
sbb
fnstenv
xlat
imul
cmc
cli
cs
mov
or
ja
add
or
adc
jno
cli
daa
pop
mov
xchg
arpl
add
mov
fistl
icebp
test
stos
mul
rcl
adc
cmp
fs
inc
subb
push
repz
out
bound
xchg
mov
adc
lea
adc
leave
dec
or
mov
lds
out
jne
jle
test
dec
and
pop
aam
stos
pop
jecxz
cs
push
ret
push
and
scas
add
inc
pop
cs
jp
ss
mov
mov
sbb
push
jae
insb
mov
fildll
out
in
push
xlat
mov
int
outsb
nop
sti
pop
int
sub
lea
into
cltd
pop
cltd
or
aad
dec
mov
jno
adc
pop
jo
mov
cmp
fsub
add
je
push
into
lock
sbb
fdiv
shlb
mov
int
jge
sbb
in
cmpl
in
pushf
or
dec
stos
lret
or
shlb
nop
cmpsl
mov
mov
cld
dec
shll
push
sysret
cmp
push
out
call
pop
or
sbb
xor
xchg
adc
jnp
cmp
dec
jle
popf
dec
mov
mov
jnp
lahf
xor
ud0
xchg
push
mov
add
push
cwtl
mov
jno
pop
lods
in
jb
push
mov
fmul
aam
xor
xor
aaa
movsl
jns
lds
mov
mov
ret
cld
and
popa
ret
mov
mov
and
dec
add
xchg
xchg
aaa
xchg
jnp
aaa
cmp
insb
sub
sbb
dec
std
xor
and
dec
or
lods
insb
xchg
mov
int
subl
ret
xchg
iret
mov
lret
push
lahf
cmp
cmp
xchg
xchg
and
xchg
outsb
adc
fs
movsl
and
dec
pop
out
xor
fcmovne
dec
or
or
push
jecxz
mulb
iret
adc
dec
inc
jp
iret
lods
stos
pop
and
xchg
mov
or
and
icebp
sub
clc
sbb
inc
dec
adc
out
xor
sbb
loope
dec
call
mov
mull
sti
xorb
std
adc
stos
addr16
je
jae
and
dec
adc
lcall
mov
cmp
cmp
inc
inc
insl
pop
orl
mov
sub
add
daa
push
cmpsb
in
mov
lret
cmp
pop
mov
push
dec
mov
lds
adc
addl
mov
insb
dec
jmp
adc
dec
in
outsb
or
rol
adc
jecxz
dec
ljmp
shll
fisubl
ret
call
incl
cs
fadd
mov
push
xchg
in
in
hlt
inc
out
sub
les
ret
aaa
rolb
and
lods
pop
adc
fisubrl
adc
cwtl
mov
cmp
push
and
in
adc
push
gs
sbb
cmpsl
movsl
shll
in
sub
mov
out
xchg
and
cmp
imul
pop
out
xchg
xor
repnz
dec
pop
or
es
hlt
les
fsub
pop
scas
mov
jmp
pop
sbb
ja
jmp
je
fs
scas
pop
adc
sub
test
in
stos
xorl
add
inc
pop
mov
imul
cmp
dec
sti
sti
xor
and
mov
fimull
sti
sub
adc
sbb
pop
mov
or
cltd
fists
ret
cmpsl
push
bound
xchg
fdivrs
xchg
xor
xor
xor
cmc
sbb
mov
daa
daa
mov
add
jns
or
fwait
fs
insl
sahf
out
clc
push
dec
cmp
adc
and
push
or
fmull
call
inc
pop
mov
inc
adc
pop
mov
mov
mov
notb
sub
push
push
add
lret
lds
test
in
pop
pop
dec
clc
sarl
aam
sbb
pop
cld
adcl
push
js
test
js
jge
aad
mov
or
aad
add
jae
jle
daa
cwtl
testl
leave
dec
push
xchg
pop
mov
lret
out
icebp
cld
jnp
loop
xlat
pusha
cmpl
repz
and
push
adc
sbb
mov
enter
scas
int3
mov
cmpsl
ljmp
ret
inc
pop
inc
scas
dec
out
stc
cltd
push
ss
ficomps
push
pop
ret
inc
fst
xor
std
loopne
jecxz
inc
testb
adc
aaa
out
jae
jecxz
and
mov
mov
push
push
dec
mov
mov
add
xchg
cwtl
fstpt
cli
pminub
cmpsl
fsubrs
cmc
push
push
mov
out
lock
jnp
ds
aas
jo
daa
enter
fwait
cmpb
mov
xchg
js
and
addr16
jle
ret
mov
mov
ljmp
mov
cmp
lahf
jb
pop
mov
movsl
mov
mov
sub
scas
jg
test
gs
in
xor
test
dec
cld
and
or
dec
dec
iret
fidivl
in
mov
loopne
ja
roll
leave
sarb
and
nop
push
rolb
arpl
fsts
les
cwtl
mov
xor
add
out
pop
lahf
and
cli
dec
insl
pushf
outsl
addr16
fs
add
xchg
dec
test
dec
sbb
sbb
pop
or
and
arpl
pop
ja
fldt
jne
repnz
dec
xchg
inc
xchg
in
scas
adc
aad
cmpsb
xchg
mov
js
or
cmpsl
popa
or
inc
rcr
sbb
dec
cmp
shr
or
cmpsb
in
imul
loopne
adc
cmpl
jmp
das
aas
fcoms
inc
mov
out
mov
mov
cmp
sub
xchg
repz
and
jae
sub
inc
mov
std
mov
lds
enter
xchg
inc
jbe
xchg
jmp
dec
fistps
lcallw
out
sahf
dec
imul
jp
sbb
repz
inc
jno
xchg
cs
sbb
adc
pop
or
shlb
sub
adc
into
xchg
mov
stos
out
js
push
sub
test
sarb
sbb
int3
mov
push
movsb
jmp
je
jo
add
push
nop
int
cli
jne
es
mov
lods
jo
adc
cmpsb
icebp
add
in
adc
xor
cs
daa
pop
dec
mov
pop
sub
mov
mov
test
or
lds
les
iret
and
addr16
sbb
mov
icebp
mov
das
dec
cmp
mov
and
inc
ret
push
jno
stos
outsl
pop
cli
pop
lock
add
jnp
pusha
sti
mov
xchg
lret
je
je
jmp
lods
inc
sub
jne
xchg
movsl
or
adcl
mov
lret
sub
sarl
xchg
dec
sti
jnp
and
jge
dec
inc
push
outsl
dec
arpl
pop
push
in
jo
cmpsl
sub
mov
sub
scas
push
and
in
xorl
loope
outsl
mov
jns
and
cmp
mov
xor
xor
in
stos
lods
jo
mov
jge
xor
shll
push
cmp
test
scas
add
lock
mov
or
ror
in
scas
add
sbb
inc
add
mull
icebp
mov
mov
mov
repnz
adc
cwtl
cs
scas
bound
outsl
data16
in
insb
cmp
loop
push
sbb
push
push
outsb
out
dec
pop
out
shl
mov
jge
lcall
in
mov
je
and
lock
out
cmc
test
push
hlt
push
xor
ss
add
push
mov
cmp
shl
notb
adc
stos
repz
sub
add
and
pop
dec
dec
sahf
outsl
les
out
js
push
ss
jmp
subb
dec
mov
xchg
insl
pop
js
xorb
fistpl
xor
dec
sbb
push
call
add
fs
decb
add
shll
mov
filds
push
push
out
mov
shrb
shlb
scas
sarl
jns
rclb
xor
loope
sub
jae
outsl
sbb
xchg
push
mov
pop
xor
movsb
add
cmp
nop
movsl
into
xchg
sbb
repnz
push
dec
movsl
rclb
decl
mov
add
in
lahf
jmp
add
lahf
mov
addr16
orl
ret
addr16
vpand
test
cmpsb
lea
flds
pop
mov
mov
pop
aam
xlat
stos
sub
sbb
enter
outsb
int3
std
push
pushf
inc
jns
addr16
mov
jge
in
cmp
or
push
cmp
cmp
mov
cwtl
xchg
iret
loopne
es
push
mov
jmp
mov
mov
in
push
mov
repz
outsb
fisttps
movsb
jmp
and
sub
repnz
xlat
cmp
adc
repz
stos
or
add
aaa
add
repz
mov
shlb
pop
out
jg
fs
xchg
inc
dec
fdivrl
push
dec
adc
lods
pop
rorl
sbb
rorl
lock
and
sbb
addl
sti
flds
lcall
or
mov
pop
out
mov
into
dec
inc
adc
xor
cli
repnz
xor
xchg
cmp
inc
and
jp
cmp
imul
sarb
add
movsl
jnp
xor
stc
pop
sahf
das
andl
sub
jg
cmp
aaa
adc
in
add
xchg
xchg
rclb
xor
cmp
lods
out
dec
sub
pushl
sub
mov
ja
sti
cmp
adc
pop
dec
adc
call
add
out
or
xchg
or
push
and
sub
loop
shll
in
mov
adc
lock
jo
push
mov
mov
and
sbb
stos
adc
push
jae
aad
cli
pusha
mov
cs
jge
jae
jo
loope
lods
fdivr
and
shr
out
jmp
pusha
je
in
inc
adc
xchg
pop
adc
mov
movsl
nop
enter
mov
in
pushf
mov
movsl
adc
push
or
out
cmpsl
outsl
sahf
xchg
adc
jns
cmp
jg
loope
cmp
xor
jmp
dec
dec
aad
pop
and
in
cmp
push
les
mov
xchg
jecxz
xchg
cwtl
mov
sub
mov
mov
fnstenv
divl
pop
mov
in
lds
stos
jmp
call
dec
cwtl
es
push
xor
hlt
sub
sbb
add
jbe
xlat
dec
jp
std
fstpl
push
inc
int3
daa
fiaddl
mov
divl
divb
or
xchg
stc
jg
sahf
add
xorl
fsub
xor
mov
sti
loopne
int
inc
hlt
mov
jbe
cmp
jg
mov
jg
js
xchg
repnz
scas
and
cmp
lret
lock
fdivrs
mov
mov
icebp
stos
jns
jge
sbb
mull
mov
xchg
dec
sbb
in
cmp
int
shrb
sbb
mov
and
xor
and
dec
repnz
cmpsl
aaa
add
clc
jb
mov
adc
ret
out
mov
ja
rcrl
dec
xchg
cld
dec
loopne
pop
push
int
sarb
mov
xor
mov
add
add
stos
inc
sbb
imul
inc
mov
loope
sahf
shll
push
ret
xorl
adc
jo
xchg
adc
pop
pop
push
shrl
int
sbb
addb
xchg
dec
loop
aas
pop
imul
movsl
mov
mov
jl
xor
hlt
lock
imul
cmp
in
ret
fwait
leave
mov
cmpsb
mov
mov
sub
outsb
dec
adc
je
sub
pop
pop
add
mov
mov
add
sarl
fldt
and
stos
gs
mov
lds
and
stos
ss
and
fsub
sbb
arpl
leave
mov
xor
cmpsl
pop
int
out
test
repnz
aaa
adc
mov
cmp
mov
std
push
inc
cli
pop
mov
pop
xchg
pop
stos
xchg
pop
insb
xor
sbb
ljmp
sbb
ja
push
bound
imul
int
inc
fwait
scas
jb
xor
fldt
mov
jb
fnsave
cmpsb
xor
push
out
lods
inc
out
mov
aad
and
lds
mov
sbb
pop
dec
add
pop
sarl
je
xchg
cmp
arpl
daa
dec
out
shlb
aam
push
jp
push
andb
xchg
and
ja
data16
jl
jb
fidivrl
xchg
sbb
or
jp
dec
enter
xchg
jg
in
jl
and
xchg
lcall
cmpsb
into
xchg
mov
test
iret
adc
push
outsb
popf
mov
or
xchg
clc
jnp
and
inc
insb
mov
push
int3
and
add
and
xchg
mov
lods
cmpsb
icebp
out
push
shll
jbe
push
and
stos
push
adcl
xor
lahf
pop
sbb
mov
scas
pop
fsubs
inc
fildll
in
shl
jmp
rcl
test
sarl
cltd
loopne
test
rcll
sub
shr
jge
pop
push
inc
xor
or
xchg
mov
add
dec
dec
sti
push
inc
xchg
mov
cmp
cli
mov
cs
pop
lods
in
in
cmpsb
nop
loope
pop
divb
aas
lods
push
push
cmp
lods
fs
jae
mov
xchg
mov
int3
inc
and
adc
lds
push
jns
sbb
ret
cwtl
mov
testl
adc
and
inc
in
mov
stc
mov
pop
mov
mov
sbbl
inc
xchg
mov
sbb
out
pusha
cli
inc
mov
pusha
or
out
sahf
test
cmpsb
gs
je
ds
mov
insb
rcll
fmul
sbb
or
jno
adc
andb
orb
shlb
outsl
cli
pop
mov
cltd
in
and
cmpsl
mov
push
and
and
fwait
jl
cld
and
jmp
dec
rol
rorl
hlt
and
sahf
add
mov
sbb
pop
imul
jmp
or
sbb
jae
adc
xor
add
or
imul
jl
sub
call
mov
rcrl
aas
imul
stos
sti
lret
movsl
sub
popa
inc
andb
add
jnp
test
push
jmp
mov
mov
rolb
mov
movsl
pop
xchg
enter
inc
xchg
push
insl
xor
pushf
pop
pop
repnz
gs
dec
stos
push
mov
subl
movsl
mov
or
pop
push
fwait
insl
int
mov
inc
adc
and
jmp
sahf
jecxz
mov
inc
sub
int
sbb
dec
and
pusha
adc
fsubrs
roll
sbb
sbb
add
insb
xlat
inc
mov
popf
les
call
inc
movsl
out
sahf
jb
pop
or
pop
jp
jne
or
addr16
dec
xor
mov
or
dec
pop
add
iret
jo
dec
stos
lds
add
sub
xchg
or
jecxz
outsb
mov
dec
js
pusha
push
mov
sub
mov
inc
mov
fcmovu
cs
outsb
dec
fidivs
stos
mov
adc
jbe
arpl
cs
mov
and
mov
repnz
xor
or
leave
or
iret
push
cmpsl
rclb
jbe
sbb
out
rcr
sbb
mov
dec
lahf
cmpsb
in
push
repnz
cmc
daa
ret
xor
and
out
xchg
mov
push
sti
pop
mov
leave
push
jg
push
ss
push
pop
cmp
shrl
cltd
dec
sub
adc
mov
fs
or
bound
fnstcw
pop
or
cmp
movsl
cltd
adc
mov
cmp
lcall
mov
push
jnp
repnz
pop
lock
mov
and
or
pop
in
push
dec
pop
and
enter
call
mov
adc
ss
and
xchg
jecxz
cmp
pushf
or
adc
call
ficoml
xchg
negb
push
dec
hlt
lods
cs
sbb
jge
insl
push
ljmp
mov
fnstsw
dec
test
aad
adc
cmpsl
scas
pushf
fsubs
sbb
ret
fstps
jecxz
xchg
xor
rolb
pop
jg
cmp
xor
frstor
mov
enter
ss
aad
sub
jl
sahf
and
adc
cmp
jnp
or
inc
out
cld
or
lods
call
cld
dec
xor
out
xchg
loop
stc
mov
cmp
mov
xor
jmp
mov
imul
cmpsb
and
cmp
js
ss
fldenv
lods
cmp
stos
xchg
mov
fwait
mov
xor
pop
inc
xor
xchg
mov
sub
enter
ror
mull
inc
adc
cmpl
mov
bound
aad
pop
scas
cltd
mov
test
popa
or
lret
dec
or
cmp
das
clc
loope
repz
jns
fcoml
gs
pop
into
rorb
filds
adc
and
addr16
outsb
push
movsl
pinsrw
lea
js
iret
fcmovnbe
mov
dec
orb
jle
jbe
add
jmp
add
pusha
cmp
scas
pop
pusha
and
sub
and
push
sahf
jo
pop
push
add
rcr
bound
cmpsl
push
cwtl
jg
dec
sbb
add
aam
pop
mov
test
data16
test
lods
push
cmpsb
outsb
add
roll
repz
sub
push
xchg
sub
mov
int
repz
and
aaa
sub
ja
xor
mov
jmp
lret
mov
mov
add
adc
sbb
pop
add
lock
ret
sbb
aam
in
stos
push
pop
xor
rorl
mov
dec
jbe
inc
inc
and
pusha
mov
mov
add
dec
inc
out
mov
adc
inc
dec
inc
cld
icebp
fs
adc
addr16
fwait
xchg
pop
insl
sub
fcomp
cmp
dec
dec
aas
insl
mov
xor
add
aas
repz
add
notb
loope
shl
sbb
test
push
insb
adcl
fnstsw
imul
stos
fsubr
loop
mov
pushf
inc
pop
cmp
lcall
pop
in
inc
ja
ds
xchg
loop
add
imulb
in
pusha
fstps
push
add
aad
cmp
xchg
ljmp
movsb
int3
std
lcall
jmp
inc
mov
mov
pop
or
mov
das
jae
cmp
js
add
stos
xchg
out
jo
adc
ljmp
nop
push
jecxz
pop
fisubs
ljmp
inc
mov
push
xchg
in
sbb
sarl
call
push
repnz
fcmovnb
pusha
iret
push
les
ljmp
lods
push
and
cli
fcoml
movsb
lret
subl
in
xor
repz
jl
or
xchg
jbe
cmpsl
into
mov
insb
add
loopne
mov
cli
stos
inc
and
sti
xor
enter
xchg
daa
aam
cmp
imul
xor
fisttpl
lret
xor
or
loop
divb
and
popa
fimuls
sti
add
fs
repnz
scas
adc
dec
xchg
imul
test
and
push
cmp
mov
nop
je
mov
inc
mov
js
sub
pushf
stos
lds
push
cmpsl
imulb
inc
cli
lret
mov
out
push
mov
std
lret
cmp
in
jbe
sub
fmuls
mov
les
xchg
mov
add
into
pop
jne
mov
jo
nop
push
mov
ja
push
stos
aad
lods
jl
cli
std
and
push
mov
std
mov
mov
pop
mov
pop
fwait
stos
push
or
stos
jmp
repnz
xorl
pop
mov
dec
xchg
popf
out
mov
adc
mov
aaa
push
lcall
jmp
ret
les
and
xchg
or
push
mov
loopne
arpl
cwtl
add
call
aas
mov
push
imul
mov
ja
enter
mov
in
pop
test
frstor
in
sub
mov
fimuls
dec
xchg
xchg
mov
push
add
push
movsl
sbb
js
push
aam
scas
popf
dec
outsb
pop
popa
inc
fnsave
pop
int3
rcl
or
test
lock
jnp
popf
adc
and
xchg
or
not
stc
mov
xor
das
mov
scas
xor
movq
dec
dec
xor
clc
aad
in
jae
lahf
xchg
pop
inc
fnstenv
add
mov
es
test
movd
sub
cli
push
movsl
xlat
mov
inc
mov
pushf
loopne
inc
jg
scas
mov
fsubl
pop
add
dec
pop
cwtl
movsl
outsl
stos
addr16
cmpsb
xor
push
ret
push
push
or
adc
out
push
sbb
lret
xchg
or
cmc
outsb
mov
rep
inc
mov
insb
ret
ja
pop
into
popa
and
enter
popa
ds
out
jo
push
sbb
cmp
out
ret
in
movsl
xchg
test
cs
jbe
push
pop
cli
ljmp
adc
mov
mov
sbb
mov
lret
jno
mov
mov
mov
rolb
shll
out
mov
cmpsl
negl
adcl
int
inc
mov
in
adc
rcr
jmp
jae
in
cmpsl
jne
ja
lahf
sarl
ja
mov
out
mov
imul
sub
fldcw
movsb
xor
enter
out
jns
sbb
test
nop
iret
adc
subl
je
and
add
into
sbbb
push
cmp
lret
mov
jmp
js
mov
in
nop
imul
js
jne
scas
jbe
rcll
jo
popf
ficompl
rcrl
or
fildl
mov
call
pop
mov
ret
jle
scas
push
out
ret
pop
mov
mov
out
scas
jo
aad
rclb
cld
jmp
xor
adc
mov
cmp
or
cmp
es
imul
ljmp
shll
mov
out
std
ljmp
push
mov
pop
cmpsl
ds
push
adc
movsl
pop
and
pop
ret
js
push
test
add
mov
pop
dec
pop
mov
jno
addr16
jmp
std
cld
mov
popf
enter
xor
xchg
je
mov
imul
sub
sbb
aad
cmp
xorb
cwtl
push
mov
das
leave
push
mov
loop
loop
push
lcall
push
icebp
xor
ljmp
mov
ret
cli
add
xor
add
and
cmp
or
fmull
sti
xor
xchg
xchg
mov
jmp
fidivrl
lock
insb
lret
xchg
jmp
arpl
out
adc
mov
pop
mov
shlb
push
pop
inc
aad
incb
mov
aas
or
mov
mov
jns
sub
mov
lock
dec
jno
pop
cld
inc
cwtl
fsubrl
push
or
bound
push
mov
loope
dec
xchg
call
inc
ds
out
or
mov
mov
cwtl
dec
test
test
pop
xchg
imul
xor
leave
sbb
loope
mov
jp
addr16
pop
or
aad
sub
js
jne
xchg
int3
and
cmp
sar
mov
mov
pop
pop
into
jl
jo
push
jg
sub
int3
jnp
jmp
lds
mov
outsl
int3
and
call
cld
dec
pop
andl
in
or
cli
js
push
icebp
shrl
cmp
mov
pop
imull
mov
pop
pop
sub
mov
out
and
ftst
rcrl
sti
xor
cli
sbb
jl
mov
mov
pop
nop
inc
or
or
testb
inc
pop
es
and
popa
mov
shll
push
and
mov
fldcw
idivl
push
xlat
inc
jp
push
pop
leave
xchg
test
das
movsl
lret
mov
add
fldcw
adc
jnp
repnz
dec
test
adc
pop
fiadds
repz
sbb
fs
jb
jae
mov
adc
cld
lret
mov
lret
mov
pop
push
mov
js
addr16
gs
pop
je
repz
mov
mov
xor
pop
div
pop
ss
xor
dec
sub
xlat
lcall
ss
std
scas
gs
out
loop,pt
pusha
sti
movsb
lcall
jae
sbb
mov
mov
repz
inc
cs
int3
mov
divl
gs
scas
aaa
lahf
test
jns
outsb
push
or
and
das
aas
in
or
xor
leave
add
aas
adc
subb
pusha
cld
sbb
gs
lds
or
addr16
fidivl
jecxz
push
and
insl
xchg
call
push
fcoml
mov
mov
popf
inc
and
mov
mov
xorl
mov
or
and
sub
icebp
fldt
scas
stos
push
sbb
rcll
sbb
pop
add
aad
dec
xor
push
sub
mov
mov
stc
adc
fsubrs
xor
sbb
push
push
cmp
rcrb
aam
jnp
ljmp
dec
push
fsubs
inc
jge
sbb
scas
inc
fldt
adc
mov
cwtl
jl
scas
std
fisttps
pusha
ret
and
pusha
mov
arpl
sti
inc
jnp
sbb
pop
outsb
adc
sub
sub
cmp
sub
stos
mov
add
jecxz
adc
jmp
dec
cmp
out
fdivrs
inc
fisubrs
dec
jae
aam
aam
rcrl
xor
xor
popa
push
push
fwait
xlat
lea
fidivrs
data16
fnsave
and
pop
lock
fstps
xor
sbb
adc
xchg
in
daa
sarb
mov
lea
js
mov
inc
mov
aas
loop
xchg
enter
cmp
jge
cmp
pusha
pusha
cmp
sahf
aaa
daa
mov
or
push
mov
push
cwtl
cltd
sbb
out
push
out
es
xor
jg
mov
xor
decl
testb
popf
pop
sbb
sbb
dec
push
jmp
add
cmpsb
cmp
sub
ret
mov
gs
sub
pop
rorl
fistl
mov
rcr
repz
daa
sti
or
clc
sbb
movsl
rcrb
adc
or
or
mov
hlt
mov
push
lahf
nop
xchg
fisubrs
out
jne
lret
scas
push
mov
dec
mov
aad
cmpsl
pop
or
cmc
loope
inc
lret
and
jne
sahf
mov
add
xor
pop
mov
mov
cmp
and
aas
jle
jae
xchg
fisubrs
and
cli
xor
jg
loope
setae
dec
fiadds
mov
add
repz
cmp
mov
xor
loope
aaa
push
lea
dec
notb
or
and
adc
mov
inc
and
ds
addb
cmp
loope
cmpsb
pop
fldt
xchg
aas
inc
jnp
imul
insb
rcrb
ss
jns
mov
add
flds
mov
lahf
jnp
add
adc
aaa
lcall
adc
add
lock
in
mov
push
xor
aam
xor
mov
popa
adc
xchg
in
mov
sbb
cmp
clc
pushf
pop
int
aas
mov
cli
scas
mov
out
outsl
mull
cltd
add
js
dec
clc
mov
sub
mov
lds
xchg
out
sbb
add
in
xchg
sbb
iret
lds
lret
jl
jg
in
ret
pushf
xchg
dec
adc
fadds
mov
mov
sub
mov
fiaddl
data16
testl
sbb
sub
int
push
inc
mov
adc
insb
and
jmp
cltd
stc
out
mov
xchg
les
sub
sbb
icebp
xor
dec
lret
cltd
xchg
adc
push
fistps
jmp
add
loope
insb
push
out
jno
scas
test
xchg
xchg
icebp
popf
cmp
or
idivl
cwtl
mov
pop
inc
aad
jp
inc
push
imulb
dec
fdivs
rcrl
add
jae
ljmp
mov
push
mov
shll
dec
push
sub
mov
push
or
dec
insl
pop
dec
xchg
iret
inc
rorl
inc
mov
push
lret
pop
stos
test
scas
pop
adc
mov
ljmp
cmp
nop
push
jecxz
mov
mov
repz
pusha
out
add
cltd
aas
aam
out
outsl
dec
xlat
iret
cmp
ret
les
scas
jnp
cmp
sti
shrb
mov
inc
popa
insl
roll
pop
xlat
xchg
pop
pop
mov
cwtl
jno
push
test
mov
jge
push
cmpsl
ret
aas
subb
xchg
adc
je
jnp
push
ss
inc
push
push
dec
sti
in
shrl
insl
ljmp
inc
mov
jmp
sbb
push
mov
out
pop
jo
dec
rcrb
mov
and
ss
ficoml
insl
xor
jmp
insl
imul
mov
jno
ret
es
dec
pop
jo
and
test
popa
jbe
cmp
cmc
xlat
insl
inc
mov
sbb
addb
bound
push
mov
in
orb
add
repz
call
icebp
lock
mov
dec
xchg
stos
lret
enter
daa
cmp
imul
imul
incl
cltd
push
jnp
in
mov
push
aam
xchg
cwtl
inc
je
andb
fisttps
lret
in
stos
xor
lcall
js
clc
in
lea
push
lahf
xchg
sub
daa
dec
jmp
sbb
out
sahf
mov
add
jb
popf
dec
push
sbbl
or
mov
enter
cmp
lods
and
aad
mov
sub
xchg
jno
sbb
pop
shlb
ja
push
xchg
xchg
cmp
pusha
mov
incl
testl
pop
ss
mov
pop
daa
sbb
sbb
test
push
and
jnp
in
mov
xor
andb
subl
mov
clc
fwait
dec
test
xchg
into
filds
push
addr16
push
fisubrl
inc
push
ret
addl
sahf
xchg
imul
int
movsb
xchg
repnz
or
pop
repz
sub
jle
inc
sbb
daa
aad
dec
sti
imul
add
in
fwait
jp,pt
scas
hlt
scas
jo
movsl
or
jae
mov
jg
test
xchg
cmpsb
mov
das
or
dec
pop
sbb
loopne
cmp
xor
mov
or
cwtl
jle
jp
xlat
js
jecxz
push
xor
mov
mov
mov
mov
adc
loope
jne
mov
pop
in
sub
sti
lret
add
sub
data16
mov
xchg
sub
mov
clc
cli
insl
jnp
mov
xor
push
ja
xchg
xlat
mov
fdivrp
dec
dec
leave
clc
addr16
or
insl
mov
pop
sar
fcom
aad
pusha
adc
leave
lods
icebp
int3
xlat
negl
iret
pop
mov
aas
xchg
add
imul
sbb
pop
ret
add
xchg
aam
fwait
xchg
jecxz
lcall
dec
push
xchg
gs
outsb
dec
dec
adc
mov
inc
push
aaa
out
xchg
lea
mov
hlt
ficoml
sahf
mov
outsl
mov
pop
xor
and
xchg
sahf
insl
xchg
lcall
mov
ficompl
dec
fmull
div
dec
push
fwait
sbb
pop
adc
xorl
inc
out
jne
shlb
pop
add
jnp
aaa
fisubrl
shlb
stc
mov
or
mov
rorl
xchg
pop
cmpsb
icebp
push
push
roll
in
mov
jns
mov
jmp
aas
sti
xor
dec
mov
fucom
fstl
jecxz
mov
cwtl
xchg
pushf
push
mov
adc
insl
pop
jp
out
jno
push
push
fdivrl
xlat
mov
adc
xor
and
adc
loop
add
cs
mov
cmp
fsubl
loopne
xchg
push
aam
cltd
xor
sti
test
in
loope
jecxz
in
mov
jecxz
cmp
mov
xlat
sbb
sahf
shrl
dec
dec
jo
dec
sub
into
mov
cmpsb
mov
sub
cld
inc
or
or
out
out
xchg
pop
xor
enter
cmp
sub
notl
mov
pop
push
enter
add
fistpll
scas
inc
ja
adc
sbb
mov
test
fnstcw
and
inc
cvtps2pi
fadd
loop
imul
jno
lods
cmp
add
fsubp
ss
cmc
or
add
movsl
dec
cld
mov
in
call
adc
int3
pop
mov
ljmp
insl
jp
sub
outsb
mov
sub
mov
jecxz
addr16
data16
lods
mov
adc
pop
pushf
das
clc
mov
daa
cmc
inc
addr16
test
cld
je
adc
push
insl
pop
scas
dec
jbe
ja
test
mov
xchg
jbe
xchg
lods
stos
sbb
mov
pushf
lods
cmpsb
cmpsl
hlt
add
mov
pop
scas
scas
scas
cmp
add
repz
aas
add
jp
popf
pop
sub
mov
cli
bound
movsl
andb
fildl
mov
xchg
orl
jg
dec
jge
fmuls
and
adc
cmpsb
pop
les
or
mov
cld
lods
les
pop
sbb
loope
mov
xchg
pop
loope
xchg
xchg
cltd
dec
loope
adc
mov
imul
and
dec
cmp
jmp
js
and
xchg
add
add
jecxz
lcall
pop
lods
add
js
call
movsl
push
in
lahf
ljmp
push
add
stc
cltd
adc
add
or
sbb
or
mov
fwait
or
and
dec
mov
filds
mov
jbe
ja
push
fistpl
fisubs
ljmp
jmp
cmp
mov
and
loope
adc
in
pushf
and
stos
lcall
loopne
mov
loop
fidivrs
push
jle
addl
aad
jg
pop
stc
hlt
nop
xchg
lods
mov
inc
lret
push
push
inc
pop
cmp
into
addr16
xlat
out
push
add
xchg
jnp
aas
sbb
adc
clc
pop
imul
mov
dec
inc
es
jp
or
insb
dec
daa
sub
inc
jns
adc
sub
jecxz
xchg
lock
jp
xchg
jae
push
lea
repnz
cmp
mov
or
push
aas
sbb
push
sti
jmp
inc
cwtd
mov
sti
js
push
mov
inc
pop
mov
pop
dec
pop
scas
lea
call
inc
sahf
sub
cmp
insl
jl
inc
inc
jno
push
in
and
cmp
cmp
fmul
in
adc
jg
xchg
mov
jle
jne
fcmove
push
hlt
sub
ljmp
addb
daa
out
cmovne
pop
pushf
or
mov
dec
mov
sti
repz
sahf
fmuls
mov
inc
and
adc
push
je
add
ret
bound
xchg
test
sbb
sub
rcrl
fwait
push
pop
inc
mov
lods
cltd
mov
les
push
mov
jmp
mov
mov
in
mov
incb
jecxz
ret
std
and
imul
lock
inc
and
rcl
adc
cmpsb
jb
mov
loopne
ljmp
hlt
scas
push
bnd
xor
scas
xchg
mov
test
pusha
shrb
xor
mov
xchg
xchg
ret
shlb
mov
push
inc
stos
jb
or
popa
push
sahf
push
cmp
loop
imul
int
ja
sbb
sub
pop
cmpb
jp
push
lcall
insb
sub
adc
or
inc
push
cs
inc
enter
sbb
fsubr
dec
cmpsb
mov
push
ss
test
push
insl
ret
dec
jnp
mov
mov
sub
mov
inc
add
and
addr16
adc
mov
cmc
in
push
jmp
aam
jb
jp
punpckhbw
clc
orl
sub
bound
ret
sub
dec
cmp
popa
gs
jmp
pop
jg
mov
mov
push
jmp
movsl
addr16
jmp
call
sbb
add
lods
arpl
adc
js
std
ss
cmp
mov
and
cmp
sbb
jnp
jle
das
xlat
mov
data16
sub
rcr
cmpsb
lcall
xchg
out
pop
int3
and
add
ret
ret
xchg
fstl
ja
insl
popf
cld
cli
outsl
rcll
fnstenv
movsl
mov
dec
add
adc
mov
fwait
rcll
mov
or
xor
sbb
inc
ret
mov
ss
dec
hlt
and
pop
outsb
cmp
inc
xchg
cltd
and
lret
shlb
out
daa
mov
cmp
pop
mul
aas
jnp
ss
jne
addr16
cltd
clc
insl
xchg
mov
sbb
dec
addl
iret
clc
lock
mov
data16
or
inc
adc
xor
xchg
mov
out
and
es
scas
iret
mov
add
jno
mov
cmpsb
imul
pop
inc
or
cli
sub
loop
jno
pop
shr
jne
ja
cli
inc
xchg
mov
mov
jge
sti
jle
xlat
push
add
cmp
and
sub
mov
dec
adc
push
cwtl
dec
mov
mov
mov
jp
cmpsl
pop
fcompl
addl
pop
push
iret
mov
mov
xor
push
sub
cmp
andb
push
das
ljmp
inc
or
sbb
jbe
mov
cmp
sahf
cmp
dec
shrl
xor
or
repnz
mov
imul
and
insl
popf
fisubs
subl
cmp
or
movsb
push
cmp
and
add
out
lea
lods
fdivrp
inc
hlt
sarl
dec
sti
mov
adc
pushf
nop
jmp
popa
lret
shll
mov
addr16
xor
fistpll
sub
loopne
sub
mov
mov
adc
sti
pop
lea
push
mov
add
mov
pusha
jle
aad
push
cmp
stos
int3
enter
sbb
cwtl
pop
push
mov
mov
jecxz
add
outsb
dec
cmpsb
push
mov
ss
aaa
loop
out
subb
cmp
sub
ret
shlb
lret
push
shlb
mov
daa
in
pop
add
push
xor
pushf
jp
filds
sub
pop
rcrl
dec
dec
pop
pop
or
std
dec
testb
xchg
xlat
jg
cld
ja
inc
jno
fbstp
sub
mov
js,pt
sub
das
xchg
push
xor
mov
sub
in
notb
and
cmp
add
iret
shrl
in
pop
addr16
out
push
ret
fsubp
dec
xchg
pusha
xor
cmpsl
push
mov
rcrl
popf
repz
das
add
mov
adc
ss
adc
and
cmp
cmp
rolb
inc
pop
cmp
jecxz
pop
or
cmp
sbb
rorb
or
adc
mov
adc
imul
xchg
or
mov
mov
inc
cld
mov
data16
jge
addb
into
xor
hlt
inc
add
xor
push
mov
and
inc
inc
add
sahf
in
cmc
jle
rcll
insb
fs
dec
xchg
pop
out
mov
lods
or
lock
test
mov
jbe
outsl
push
sub
loop
notb
out
push
pop
inc
or
lods
fdivl
scas
mov
cmp
jo
outsb
sub
add
mov
test
push
shrd
imul
pop
movsb
mov
inc
dec
les
jmp
adc
popf
lods
jmp
and
pop
inc
mov
mov
dec
jl
aad
add
outsl
jbe
xor
and
pusha
mov
or
mov
push
adcl
lahf
sbb
in
mov
xchg
or
jno
repnz
xor
subb
in
jmp
inc
pop
mov
xchg
std
pushf
test
icebp
xor
mov
or
jo
or
js
scas
inc
call
mov
or
push
inc
fcomip
push
ds
push
lret
out
sub
orb
je
pop
xlat
enter
mov
mov
sub
push
dec
jp
orb
push
rcr
cmp
sti
stos
and
repnz
repnz
or
mov
xor
push
stos
push
daa
popl
leave
pop
pop
rcll
xchg
push
mov
jno
mov
push
notl
lods
mov
inc
loopne
jb
inc
test
mov
xchg
cmp
lcall
add
sbb
cli
or
add
xor
outsl
movsl
in
jecxz
dec
mov
vmovaps
pusha
imul
xchg
or
mov
lcall
cmp
push
fisubrl
pushf
pop
repz
iret
pop
sahf
pop
push
ficompl
shll
mov
sarb
insb
rorb
dec
cmp
mov
push
push
push
rcl
jae
cmp
push
or
cmpb
push
sbb
lcall
adc
ficoms
dec
push
adc
popa
cmp
aam
mov
push
mov
xchg
or
or
cmp
movd
movsb
aaa
pop
pushf
sbb
pop
js
jge
cs
lahf
gs
cmp
adc
sti
sbb
stos
out
hlt
mov
or
mov
mov
in
mov
jl
iret
inc
fs
jmp
lds
pusha
pop
pop
call
pop
lods
xor
call
fcoms
mov
jb
outsl
sbb
test
shl
sbb
cmp
pop
pop
push
cmp
aad
orl
sar
fists
sbb
stc
mov
pop
sbb
add
sub
add
add
sbb
lods
shrl
dec
ss
push
outsl
loop
lods
pop
dec
pop
das
popa
in
jmp
jne
std
fdivs
mov
daa
test
xchg
lods
addr16
jmp
ljmp
aam
leave
movsb
ja
push
int3
jmp
add
jno
in
fdivrp
rcl
or
inc
xor
jle
sbb
orb
pop
pop
cmp
or
daa
pop
xchg
lret
adc
push
scas
movsb
xor
imul
adc
lret
cmp
int
or
jle
nop
lcall
dec
cs
xor
xor
cmpsb
or
dec
mov
inc
xor
sti
call
cmpsl
cmp
jle
repnz
mov
cmp
mov
or
mov
xchg
std
ret
cwtl
loopne
or
stos
mov
insl
and
test
mov
shll
in
int
sbb
imulb
repz
es
out
pop
pop
les
loop
adc
ret
inc
es
pop
dec
fildll
push
jle
cs
push
loope
mov
in
and
xchg
outsl
adc
pop
insb
or
arpl
iret
inc
int3
imul
in
pop
sbb
lret
jle
shrl
xchg
pop
icebp
negl
shr
loopne
jns
sbb
imul
bound
adc
sub
add
cmpsl
and
cli
loop
scas
add
push
imull
out
pop
sbb
lods
push
xchg
push
popa
roll
jns
jg
and
cmc
sarl
and
adc
bswap
xor
inc
sub
out
lret
pushf
faddl
sub
mov
lahf
add
int3
icebp
ja
lea
fdivrs
sub
jb
inc
mov
fisubrs
loope
ret
or
push
rorb
pop
popa
xor
or
pusha
xor
cwtl
in
in
jb
xchg
jmp
test
mov
repnz
or
cmp
outsb
push
push
andb
push
add
repnz
inc
cmp
mov
aaa
dec
int3
lods
bound
scas
aaa
mov
push
adc
imul
mov
and
jl
aam
loopne
stc
leave
mov
xor
push
xchg
inc
scas
xchg
push
lea
cmpsl
mov
mov
xchg
lahf
pop
pop
int3
push
push
mov
mov
loopne
pop
and
mov
adc
stos
jl
ja
add
movsb
inc
fisubrl
sbb
dec
xlat
jle
out
xchg
jnp
inc
lds
mov
into
cmp
or
xchg
iret
pop
imul
mov
popf
mov
push
es
xor
test
out
xor
roll
xchg
outsl
xor
xchg
adc
adc
aam
and
rclb
leave
gs
sub
add
scas
pop
or
mov
pop
lea
ja
inc
adc
jae
jbe
idivb
xlat
mov
jne
xchg
enter
cmp
ficompl
lea
adcb
movsb
sbbb
and
fcmovnbe
scas
mov
cld
xchg
push
inc
jle
fistps
fnstenv
xchg
adc
or
xor
push
pop
fisttps
add
in
outsl
pop
popa
sub
adc
daa
fcoml
mov
cld
fisubl
test
jge
sbb
dec
into
inc
daa
sbb
mov
push
mov
push
mov
arpl
pop
mov
enterw
jo
hlt
aaa
roll
pop
add
jmp
daa
loope
xor
jbe
pop
jnp
loop
daa
sbb
mov
fcmovnb
stos
into
jle
ds
mov
sbbl
std
mov
jp
mov
fcomps
aad
inc
pop
jg
lcall
xchg
jns
push
pop
aad
sbb
adc
outsb
fisttps
movsb
jmp
and
test
aam
xor
pop
repz
inc
mov
fs
daa
shll
cli
jecxz
cmp
xor
sbb
jns
stos
xor
ret
dec
xor
rcrl
enter
je
pop
xchg
and
mov
lock
popa
test
sub
icebp
jno
orl
dec
add
xor
and
push
repnz
and
decb
fdivr
in
movsb
popa
fstps
dec
or
xchg
out
nop
fwait
cmp
pop
outsl
fbld
in
cltd
add
mov
jns
repnz
out
mov
sbb
fiaddl
lds
sarb
pop
jmp
add
outsb
clc
inc
fstpt
ret
jno
xor
insb
popa
data16
mov
testb
pop
inc
addl
xchg
gs
aas
cld
loopne
cmp
into
inc
mov
sbb
cltd
pop
aas
mov
cmp
popf
movsb
out
shlb
lods
ja
jp
call
dec
mov
push
lret
loope
sub
in
sub
push
adc
out
mov
push
cwtl
loopne
pop
adc
scas
pop
inc
mov
or
shrl
fiadds
push
adc
jae
jmp
mov
jbe
addr16
pop
mov
notl
ja
lds
je
xor
mov
sbb
and
test
subb
outsl
cwtl
movsl
adc
lods
or
adc
jbe
mov
pop
ror
imul
sbb
cs
xlat
iret
inc
fiaddl
fcomps
pop
repnz
clc
stos
and
aas
add
sahf
movsl
xor
fstps
adc
pop
sbb
fwait
dec
outsb
cs
stos
out
xor
push
pop
fsub
inc
je
pop
pop
scas
sbb
lods
mov
dec
mov
test
insb
jnp
mov
int
repz
dec
xchg
mov
leave
sti
xor
pop
cltd
fucom
leave
daa
movsl
inc
loop
jno
sub
xor
js
mov
push
or
mov
sahf
movsb
cmp
repz
into
add
sti
outsl
sbb
xchg
xchg
fistl
std
clc
lcall
pop
rcl
sbb
mov
pop
je
mov
pop
out
cmpsb
jge
jl
test
in
jae
sbb
pop
and
pop
jo
ficoml
add
lds
add
and
adc
lds
inc
mov
cltd
xchg
jle
push
frstor
and
int
mov
inc
push
push
cmp
stc
jo
imull
dec
insb
fnstsw
aad
mov
inc
pop
or
jp
jae
sub
mov
push
cmp
jb
loop
std
mov
pop
das
mov
ja
cmpsl
mov
and
enter
mov
cmp
dec
movsl
scas
lods
aad
mov
xchg
push
mov
dec
out
aad
inc
mov
pop
mov
xlat
sub
jl
mov
dec
fistl
out
mov
adc
dec
pop
and
leave
stos
fsub
aas
pop
pop
pop
sbb
inc
push
bound
sarb
aaa
pop
or
mov
rorl
ljmp
out
mov
xor
adc
push
sbb
mov
adc
ja
xchg
out
mov
adc
shlb
in
mov
cmp
xor
dec
pop
scas
in
scas
test
adc
inc
mov
mov
push
push
je
idivb
lods
cmp
mov
inc
pop
xor
lods
mov
addr16
stc
xchg
icebp
and
cs
inc
sbb
ds
clc
xor
ja
mov
add
mov
push
fldcw
aam
js
inc
fstl
push
dec
outsb
pop
pop
in
aas
ret
or
push
adc
sub
insb
dec
aaa
movsl
fwait
lret
ljmp
xchg
cmp
xchg
popa
jp
das
push
shll
rcrb
cmp
test
sub
push
pop
mov
push
movsb
xor
pop
in
sti
divl
bnd
add
outsl
sbb
and
mov
int
sbb
inc
ljmp
push
movsb
call
push
xchg
add
std
insl
cld
inc
push
jge
push
xchg
dec
pop
pop
sub
xchg
xor
notb
testw
repnz
loopne
into
jne
mov
jns
add
add
adcb
inc
cwtl
ljmp
out
sbb
jbe
mov
sub
fidivrl
cmp
dec
xlat
movsb
ljmp
je
jp
cs
mov
jg
cmp
xchg
call
js
add
mov
mov
cltd
jbe
std
inc
lds
mov
xchg
or
xor
adcl
jbe
cmp
or
xor
xor
jle
push
clc
sarl
xchg
pop
bsf
and
testl
dec
iret
lock
jmp
iret
dec
popa
in
mov
icebp
sbb
sub
lock
adc
lods
cmpsl
add
xchg
sbb
mov
inc
daa
inc
and
loope
inc
jle
data16
pop
rorl
sbb
mov
scas
out
or
inc
xchg
fisttps
cli
jo
lods
pop
jnp
adc
jecxz
fidivrs
pusha
mov
pop
mov
sub
shll
or
sub
mov
dec
jmp
test
xchg
jecxz
or
insl
jecxz
dec
pop
or
ja
lahf
cmpb
sub
stos
mov
and
aaa
icebp
in
xchg
xchg
mov
shlb
pop
mov
sub
js
and
jmp
pop
mov
iret
dec
clc
fnsave
test
cld
sub
sarl
mov
out
lods
iret
xorb
les
pop
jmp
ficomps
mov
int
nop
sbb
pop
inc
jg
aad
loope
pop
add
push
aam
sbb
mov
push
inc
jp
push
lods
movsb
mov
std
xor
shll
xor
clc
xchg
sbb
dec
shll
ficomps
sti
push
pop
xchg
mov
adc
jnp
loope
or
jno
mov
mov
cltd
scas
repnz
sbb
mov
mov
pushf
push
pop
ret
xorb
daa
rorl
push
sbb
lea
sbb
icebp
roll
xchg
lods
ret
adc
inc
stos
dec
rolb
dec
jns
lods
sub
lahf
mov
lret
lret
xchg
mov
add
push
leave
pop
fsubs
sti
sahf
ds
in
add
xor
loope
push
cmp
dec
push
gs
subl
imul
cltd
out
decb
fs
cwtl
js
pop
fdivrl
outsb
icebp
pop
pushf
cs
subb
in
xor
add
adc
fmull
das
mov
adc
outsb
sbb
pop
add
fs
pop
lds
popa
call
cli
lds
pusha
mov
loop
pop
pop
mov
mov
add
leave
ffreep
call
jmp
icebp
jmp
loop
out
je
push
decb
ss
mov
xchg
int3
pop
push
xchg
mov
testl
sahf
sbb
jge
push
lock
fnstsw
add
and
stos
mov
mov
dec
rcr
test
testl
in
aaa
jbe
int
xor
adc
call
jo
ret
cmpl
ds
mov
js
insl
pop
mov
clc
loopne
add
stc
inc
add
ljmp
aam
push
and
ljmp
jo
rol
mov
into
gs
pop
rol
pop
flds
mov
les
or
popf
ds
js
sub
insb
inc
popf
jno
cmc
pushl
adc
jno
cmp
xchg
leave
pop
movsl
or
dec
push
sub
mov
mov
rcll
jae
mov
sbb
cmpsl
and
cmp
cmp
jbe
xor
jb
cmp
adc
cmp
or
or
xor
push
movsl
pinsrw
mov
xchg
cli
dec
ficomps
daa
pusha
lds
or
outsl
addb
ljmp
nop
jge
xchg
mov
outsb
fldcw
adc
mov
jno
xchg
adc
pop
bnd
pop
pop
push
xor
femms
sub
add
cmp
cmp
mov
andl
cmp
pop
push
mov
lcall
repz
dec
lcall
test
enter
imul
dec
jl
push
pop
mov
jge
ja
popf
mov
dec
push
insb
push
push
daa
mov
mov
pushf
jns
fildll
or
shll
add
lock
sahf
add
js
push
dec
sahf
test
dec
int
xchg
int
sahf
stc
addb
xchg
sub
pop
js
out
jo
aas
sbb
jmp
xchg
sbb
xor
aam
es
out
inc
insl
arpl
and
sbb
fwait
and
pop
int
scas
sub
mov
outsb
fs
enter
leave
daa
pop
pop
test
mov
icebp
dec
shrl
pop
xlat
lea
push
aad
sub
test
or
cmpsb
mov
jns
xor
xchg
shrl
aad
fbld
lea
jecxz
dec
mov
stc
lods
cltd
mov
mov
shlb
dec
insb
stos
jnp
ja
push
dec
push
in
or
and
jbe
cmp
adcb
inc
out
vsubss
test
jge
stos
in
push
push
lods
push
add
aad
mov
or
push
mov
js
std
xor
negl
call
arpl
cld
jle
nop
subb
cmpsl
roll
mov
mov
int3
int3
jp
andl
adcb
dec
testl
cmp
je
int3
int3
jp
andl
andb
xorl
aaa
stos
loopnew
cltd
pop
dec
aad
cltd
dec
ret
cs
std
lock
or
pop
rcll
jge
mov
add
cld
scas
mov
out
mov
xor
dec
lods
and
out
gs
xlat
out
sbb
and
mov
rcr
cmpsl
and
sbb
mov
pop
lret
insl
and
adc
or
jno
adc
movsb
xor
lds
out
add
sahf
mov
lock
ja
xchg
inc
insb
mov
and
das
lods
cmp
push
jg
fidivrs
iret
lret
out
xchg
enter
push
pushf
test
fiadds
dec
imul
icebp
imul
mov
jb
fimuls
bound
dec
xchg
mov
lods
insl
and
cmpsl
xor
int3
loopne
mov
jns
cltd
push
flds
push
test
pop
sub
pop
ljmp
inc
jne
and
or
push
inc
hlt
subl
xchg
and
xor
aaa
clc
sbb
ja
mov
xor
cmp
iret
push
test
and
enterw
insl
xor
add
jb
add
jmp
in
fsubrl
cmp
cltd
jg
sbb
idivb
pushf
pop
test
ret
stos
pop
std
outsb
lock
in
adc
and
lcall
pop
cli
outsl
mov
add
xchg
push
cmpsl
mov
leave
mov
or
imul
inc
loop
sbb
sti
push
jne
test
pusha
adc
dec
lfs
jb
repz
dec
inc
push
shl
mov
sbb
push
shl
popa
dec
and
fisubs
adcb
push
push
push
sti
scas
dec
es
sar
inc
dec
pop
stc
push
fidivrl
fisubl
xchg
sahf
jbe
push
pop
ret
popf
sbb
or
mov
dec
insl
andb
mov
push
nop
mov
cmp
lahf
mov
push
sbb
loopne
out
imul
nop
std
lret
jb
add
ror
or
and
xor
iret
leave
call
cmp
sbb
insb
mov
mov
jae
mov
xchg
sbb
cmp
lods
inc
mov
das
dec
mov
pop
adc
loopne
popa
xchg
insl
test
nop
movsl
mov
cmpsl
outsb
xchg
and
aam
inc
dec
movsl
push
pop
add
cmc
push
lea
imul
aaa
add
and
adc
jns
jl
push
test
mov
andb
loope
or
stos
xchg
stos
jnp
icebp
inc
push
daa
mov
cli
and
ret
jns
cwtl
pop
mov
cmpsb
mov
outsl
mov
rclb
dec
xchg
cmpl
je
mov
addr16
lock
pop
and
pop
cltd
test
mov
mov
loop
add
sbb
pop
test
test
cs
adc
repz
jnp
jne
and
inc
jmp
mov
imul
fsubl
fisubrs
xor
test
xchg
cltd
aad
mov
nop
sub
mov
je
cmp
fmuls
loopne
and
int3
ljmp
loope
decb
xchg
mov
cmpsl
cltd
inc
mov
add
fimull
sti
or
arpl
movsbl
pop
sbb
ja
sbbl
mov
push
popf
mov
push
push
mov
inc
mov
mov
inc
and
daa
std
xchg
scas
rcl
xor
leave
xchg
mov
push
loope
roll
or
repz
lock
dec
aaa
rcrl
ljmp
jns
in
dec
pop
mov
adc
inc
idiv
sbb
dec
ljmp
je
mull
sbb
and
outsl
cmp
iret
mov
or
pop
stos
pop
int3
outsl
out
mov
xor
mov
stos
stos
push
xor
int
jle
cmc
js
repz
inc
arpl
mov
jmp
fs
out
cwtl
mov
jmp
push
stos
xor
fs
out
xor
sub
hlt
pushf
mov
push
xlat
test
add
dec
push
fwait
clc
mov
pop
out
jb
sub
xchg
int3
andl
loop
aaa
stc
je
add
mov
call
pushf
stos
cmp
pop
add
mov
gs
xchg
inc
adc
sbb
push
lods
clc
outsl
sub
ficoml
xor
push
std
cwtl
sub
xorb
inc
aaa
mov
out
pop
int
sub
or
popa
cmp
inc
mov
rclb
inc
arpl
xchg
incl
mov
pop
pop
aas
outsl
push
dec
jno
or
sub
sar
sbb
insl
scas
scas
xchg
daa
roll
test
mov
xlat
sub
cmpsl
push
jo
or
cmpsl
ja
fdivrp
aam
data16
xlat
sbb
mov
pop
pop
out
div
push
push
jmp
out
idiv
pop
sti
or
sbb
gs
mov
xchg
adc
repz
inc
lods
inc
mov
pop
sbb
cmpsl
in
jno
out
sbb
or
loope
ljmp
mov
clc
test
sbb
mov
js
scas
out
aad
repnz
inc
pusha
adc
aad
xor
int3
ja
push
or
push
push
ja
jae
lock
pop
ret
or
fwait
imul
and
and
es
inc
inc
jnp
int
mov
pop
mov
lock
xor
loopne
jno
test
lret
add
call
ljmp
enter
mov
rdtsc
mov
adc
add
sub
and
scas
add
loopne
imul
sub
outsb
fisttps
movsb
jmp
and
ja
outsl
popa
push
dec
iret
ffreep
popa
mov
push
mov
jb
sub
pop
lods
pop
xor
xlat
cmpsb
dec
lcall
adc
js
sti
into
xchg
in
inc
and
addr16
cltd
shr
testl
and
push
imull
jecxz
mov
xchg
adc
pop
ficoml
mov
adc
pop
mov
mov
xchg
xor
jo
or
pop
jl
dec
xchg
mov
lret
imul
mov
mov
cmp
aaa
mov
arpl
dec
popf
mov
test
xlat
das
insb
lea
and
movsl
jge
je
push
or
lods
push
inc
fists
loope
xchg
fcomps
loopne
cmpsl
add
inc
inc
dec
xor
cmp
shlb
mov
cmpsb
stc
faddl
sbb
mov
in
mov
xchg
aas
lds
dec
mov
jecxz
mov
and
lea
js
cltd
pop
and
lahf
inc
testl
ja
push
inc
mov
in
add
lods
mov
test
rolb
and
push
test
cmpsb
mov
lods
in
shr
scas
stc
adc
sbb
out
sarl
gs
or
sub
adc
pop
mov
mov
nop
mov
loopne
xor
mov
mov
cmp
fcomi
mov
pushf
adc
dec
jmp
lds
loope
add
cmp
pop
ja
mov
mov
js,pt
adc
cld
push
cmp
aaa
adc
lock
outsb
and
lahf
inc
negl
push
cmc
cli
lods
repz
test
pop
es
stos
repnz
push
and
pop
in
jmp
fs
cmpb
xchg
insb
xlat
jl
push
in
sub
jb
icebp
pop
dec
cltd
lcall
ret
ffree
addb
stos
mov
in
in
and
es
arpl
add
fwait
clc
cli
sub
into
xor
out
mov
int3
and
cmp
mov
xlat
cmpsl
loopne
xor
mov
dec
sbb
cmp
lret
aad
fisubrl
int
data16
aam
and
mov
add
test
push
in
mov
jl
inc
jne
mov
xor
icebp
push
lds
dec
jecxz
fsubs
rolb
mov
push
and
jns
cmp
dec
mov
lods
xor
mov
idiv
out
push
mov
std
cmp
add
loopnew
xchg
jne
and
add
sub
adc
fwait
imul
jb
dec
sbb
sub
mov
lds
push
mov
in
and
or
ljmp
inc
popa
lds
pop
int3
adc
adc
xor
sbb
or
in
adc
push
mov
std
insl
cmp
sbb
rcrb
mov
ss
jnp
out
or
mov
iret
ret
cmp
xor
mov
add
adc
push
jge
mov
inc
xor
popf
int3
mov
or
subl
jno
aam
hlt
lods
icebp
push
cmpsl
ret
cwtl
out
pop
clc
mov
repnz
cmp
jno
sub
mov
ror
mov
xchg
arpl
ja
jle
ss
adc
js
addl
lret
pop
movsb
out
fdivs
push
xor
ficoml
mov
jge
jl
out
mov
out
or
pop
cmp
add
mov
ret
xchg
pop
bound
outsl
int
xchg
imul
leave
ds
push
leave
inc
inc
and
int3
je
mov
inc
inc
das
xorl
mov
enter
int
cmp
push
dec
out
lods
mov
out
xor
mov
pop
mov
inc
push
mov
out
fisubrl
adc
xchg
ss
jmp
mov
and
add
in
sbbl
inc
xchg
xor
adc
pushl
stc
loope
cmp
push
or
in
sub
push
sub
rcl
push
fisttpl
xchg
insl
sub
adcb
pop
mov
sub
call
push
fsub
fsubs
sub
jg
lahf
outsl
mov
cmp
pop
xchg
xlat
or
dec
add
sbb
sub
enter
xor
xchg
jne
mov
dec
sbb
add
cmpsb
cmp
out
icebp
call
jmp
outsl
mov
in
lret
adc
xor
sub
scas
jmp
aad
pop
test
lret
hlt
pop
mov
out
icebp
call
jmp
pop
cmp
mov
addr16
inc
loopne
pop
sbb
ljmp
sub
or
adc
pop
ds
xor
sub
dec
cmp
jnp
adc
iret
rorb
push
jg
pop
hlt
in
cmp
xchg
stos
notl
jmp
mov
pop
sbb
xchg
jp,pn
add
into
xchg
mov
sbb
pop
push
push
lret
popa
lods
leave
xchg
das
jo
fstpl
ja
bound
adc
adc
cld
sbb
test
nop
mov
fwait
inc
imul
pop
inc
ljmp
and
lcall
jmp
les
mov
je
cmp
fmuls
movsl
lds
lret
inc
xchg
and
or
pop
movsl
pop
popf
or
push
scas
xchg
les
xorb
inc
push
push
notb
sub
cltd
ds
daa
cmp
iret
pop
pop
dec
cwtl
inc
addl
lret
push
arpl
jns
cmp
mov
and
orb
mov
cltd
add
dec
mov
data16
cmp
xorl
shrb
jae
mov
add
addr16
shll
movsb
rcl
sbb
sarb
pusha
push
outsl
push
ds
loope
adc
mov
sub
testb
jne
pop
sarb
in
es
lods
dec
loopne
jge
xorl
mov
int
xlat
mov
mov
negb
les
mov
out
jb
fadd
fs
ljmp
xlat
pusha
cltd
imul
mov
call
push
cld
lcall
or
test
and
lock
ret
std
js
dec
addl
ds
mov
popf
mov
inc
sbb
lods
nop
mov
cmpsl
mov
jo
test
out
gs
rcl
test
jae
dec
pop
inc
dec
jle
push
mov
popa
jae
inc
lods
ja
add
mov
imul
inc
jge
sarl
test
cmp
fistl
cmp
lods
shrl
cmp
xchg
cmp
ljmp
add
loopne
test
jb
out
test
inc
pop
sbb
push
in
and
pusha
mov
sbb
fbstp
or
xchg
xchg
jbe
sub
cmp
testl
mov
jmp
test
adc
sub
jae
push
dec
cli
mov
icebp
push
adc
movsb
fisttpll
popa
rcll
xor
nop
sqrtss
sub
popf
nopl
test
jae
andl
push
pop
pop
sbb
pusha
pop
xor
xchg
dec
incl
insb
jl
push
sub
leave
or
out
jle
pop
mov
lds
decl
pop
mov
stos
int3
testb
cmp
mov
sbb
sbbl
fildl
jecxz
rcl
inc
stc
dec
mov
mov
jmp
loopne
shll
repz
dec
lcall
mov
in
out
sti
jle
loope
jb
aaa
inc
cli
ret
mov
push
mov
arpl
je
mov
test
dec
js
mov
in
repnz
fiadds
adc
ja
jmp
and
in
cli
popf
sbb
out
test
lods
into
sbb
aaa
lods
rolb
jnp
or
lret
jle
pop
add
sub
mov
mov
xchg
test
mov
repnz
dec
jbe
roll
and
xor
mov
pop
repz
fcmovnb
addr16
subb
xorb
dec
mov
xchg
dec
test
pop
jb
and
mov
cmp
sub
mov
xchg
popa
and
movb
sbb
outsl
jp
push
pop
cmc
mov
mov
add
jb
xchg
pop
sbb
sub
inc
mov
lea
dec
daa
sar
or
ret
mov
adc
in
push
xor
ljmp
repz
loopne
sarl
nop
xlat
cmpsb
inc
sub
aam
shll
das
pop
cmpsb
mov
pop
gs
sti
pusha
test
cwtl
rcr
xchg
xchg
std
push
cmpsb
enter
jl
shlb
add
lahf
dec
in
dec
cli
jp
int3
xchg
lods
addr16
xlat
mov
lods
mov
dec
xchg
adc
or
jns
push
pop
mov
mov
cld
cmpsl
push
jo
nop
fwait
cmp
ds
cli
iret
mov
pop
pushl
adc
pushl
scas
or
popa
mov
je
sbb
xorl
xlat
inc
arpl
ret
inc
ret
dec
rolb
out
mov
jno
sub
dec
or
insl
mov
push
jmp
push
lcall
popf
insb
lahf
daa
insb
inc
cmp
adc
sbb
pop
xor
push
out
sub
stc
mov
lods
shrl
fs
jle
push
pmulhuw
in
jmp
mov
roll
jl
and
cmp
pop
dec
pushf
ljmp
imulb
lret
fidivrl
jnp
push
and
out
js
lds
out
shlb
leave
cmp
inc
dec
adc
iret
movsl
jmp
jg
pop
push
add
dec
in
std
stc
sub
cmp
mov
subb
adc
inc
jecxz
movsl
adc
movsl
push
push
pop
rorl
and
xchg
xor
aad
insl
pop
or
incl
jge
in
cwtl
ja
or
das
jmp
sbb
daa
pop
lods
jg
shlb
adc
js
add
rclb
and
jnp
sbb
cmp
fld1
xor
int
inc
loope
aas
fwait
add
jns
mov
push
dec
arpl
icebp
xchg
pop
in
stos
sbb
cmp
sar
mov
pop
lcall
push
in
inc
xor
xor
insl
int3
xchg
mov
fistpll
cli
mov
jge
ds
lahf
inc
dec
dec
xor
mov
jne
jne
sarl
je
loopne
sbb
and
out
mov
mov
pop
sahf
aam
aam
loope
sti
mov
or
adc
jb
cld
push
mov
jg
gs
test
mov
fstl
pop
leave
iret
subl
xchg
insb
imull
mov
jbe
scas
xor
xor
inc
call
jae
xchg
or
sub
inc
test
xor
push
xchg
jae
sbb
jge
adc
inc
xchg
data16
sbb
scas
scas
negl
pop
cli
out
inc
and
xchg
lret
movsb
je
xchg
mov
psubsw
gs
rcrl
mov
sbb
xchg
push
fisttpll
mov
ds
cs
xor
push
in
popf
pop
pop
cmpsl
lods
ds
dec
cmp
jp
xor
lahf
push
flds
outsl
adc
dec
bound
jmp
and
jl
xchg
xchg
xor
mov
call
daa
cmpsb
int3
cwtl
pop
xor
push
mov
xchg
rcrb
adc
pop
mov
lahf
adc
jle
addb
sbb
mov
std
outsl
enter
out
js
xor
insb
mov
sbb
dec
leave
sbb
cmp
into
cmpsb
push
sub
sti
imul
div
add
mov
or
in
push
mov
inc
jge
pmulhw
and
outsb
in
jno
fisttps
movsb
jmp
and
mov
sbb
xor
sti
mov
repz
popa
lock
pop
je
lcall
adc
out
fs
outsb
sub
je
mov
and
push
stos
test
mov
push
mov
sub
enter
mov
or
jns
mov
leave
vmread
pop
loopne
sti
jge
rcll
movsl
shll
fiaddl
test
leave
or
push
pop
sbb
sbb
stos
cmpsl
xor
loop
popf
int3
imul
lock
movsl
or
imul
push
jmp
add
xchg
xchg
cmp
and
out
xchg
leave
mov
mov
add
ret
and
lret
dec
jo
mov
jbe
lds
inc
push
inc
mov
std
outsl
enter
leave
mov
int
jp
sbbl
sub
imul
dec
ss
dec
pop
xlat
sbb
dec
fimuls
aad
cmp
inc
add
and
pusha
cltd
rclb
mov
adc
sbb
sub
cmpl
rolb
adc
stc
mov
jbe
push
mov
push
sub
into
dec
repz
stos
aaa
out
repz
repnz
movsb
inc
mov
jnp
push
and
fnstcw
dec
out
or
mov
pop
testb
cli
add
pop
jo
lds
dec
or
cmpsl
dec
lods
ljmp
or
incb
scas
call
js
inc
pop
je
cmpsb
jg
arpl
les
or
mov
jl
jp
int
frstor
lds
xor
pop
cli
push
inc
adc
jle
movsl
ret
inc
dec
jle
add
cmp
jl
stc
or
jne
add
mov
pop
gs
enter
int
push
je
shlb
lods
loopne
jle
gs
test
movsb
por
test
std
push
mov
mov
jmp
cmp
arpl
mov
xor
sbbb
pop
dec
mov
dec
lods
fldcw
cwtl
cmp
pop
push
push
mov
adc
adc
sbb
divl
adc
negb
movsl
fidivs
xor
int3
jge
push
std
cmp
cmp
scas
xchg
dec
jmp
in
sbb
adc
and
sub
pushf
sub
sbb
sub
inc
sub
sbb
in
push
insl
sub
in
test
sub
dec
add
jmp
mov
aaa
mov
xor
inc
imul
int
mov
dec
push
push
loopne
cmpsb
push
sbb
push
jae
ret
lock
aaa
test
call
jp
jno
test
jbe
into
negl
inc
out
dec
fs
mov
outsl
and
mov
push
push
or
xchg
jp
ds
sub
cmp
ljmp
sbb
int
mov
nop
out
xchg
jge
adc
sub
xchg
xor
inc
mov
testl
stos
add
gs
adc
out
cwtl
mov
push
mov
popf
pusha
fsubrs
mov
mov
pop
outsb
cmp
cmpsl
push
out
loope
jbe
mov
push
xchg
inc
in
int
lcall
pop
push
movsb
fidivrs
sarb
aas
inc
negl
cltd
mov
in
out
popf
fidivl
loopne
mov
dec
xlat
jns
loop
jno
pop
shr
lcall
jns
sub
add
push
std
stc
ret
pop
mov
popa
cmp
bound
je
lret
pushf
or
clc
sbb
test
dec
push
sub
jl
push
mov
add
inc
popa
push
cld
ficoms
int
sub
mov
andb
fs
lock
and
loopne
sub
cmp
add
xor
dec
push
test
mov
add
cwtl
push
dec
mov
dec
in
imul
into
dec
add
lahf
add
les
jmp
push
loopne
les
xor
lock
pop
push
and
pop
cmp
into
out
pop
pop
lcall
cmp
andb
mov
sar
mov
adc
sti
mov
xchg
fcoml
mov
lahf
adc
cmpsb
mov
ret
jae
inc
ret
mov
ljmp
push
dec
sbb
cli
or
add
aam
enter
rcl
test
mov
xchg
sbb
sbb
int
add
enter
int
push
fisubrs
and
push
movsl
mov
ja
sbb
insl
out
dec
and
and
dec
adc
cmovnp
jecxz
roll
arpl
push
ret
xor
xchg
repz
imul
lcall
mov
pop
cs
in
dec
out
scas
mov
dec
mov
pop
jns
mov
shlb
mov
iret
cmp
sahf
mov
jg
lods
pop
ret
ret
test
adc
sbb
jg
icebp
lcall
lock
stos
je
es
nop
push
out
push
mov
pop
jg
xchg
jge
mov
pop
loopne
leave
movsl
jg
imul
dec
mov
pop
into
push
scas
nop
and
add
or
cli
and
lds
mov
adc
add
sbb
sbb
pop
lahf
clc
mov
int3
or
cli
in
incb
ud0
cwtl
xchg
les
adc
in
sub
adc
lahf
xchg
fwait
sub
mov
dec
xor
adc
fs
fimull
ja
xor
mov
into
insl
call
mov
mov
loope
mov
insl
inc
sub
jno
lods
xchg
adc
int3
xchg
das
loop
hlt
outsl
xlat
les
fisubrs
ret
rcll
push
fnstsw
shlb
inc
cmc
adc
xchg
pop
mov
int
pushf
or
adc
pop
cmp
movsl
adc
movsl
adc
or
xchg
push
pop
or
shr
les
jb
stos
test
xchg
push
xchg
adc
sub
inc
addl
jne
mov
sarb
stc
xchg
sub
mov
data16
and
popa
cmp
lods
outsl
cs
push
loope
xchg
arpl
adc
std
insb
mov
adc
fbld
das
fdivr
xchg
loope
xor
sub
sarl
lcall
mov
fdivrs
jne
scas
std
push
inc
sbb
ja
mov
pop
es
sti
shl
inc
xor
pop
add
addb
test
and
or
addr16
int3
ljmp
add
mov
scas
daa
test
cmpsb
add
pop
lds
and
jl
add
inc
imul
rolb
ss
push
lcall
rcll
inc
adc
pushw
xor
lock
add
gs
xchg
cmp
and
push
stos
sub
mov
xlat
jbe
movsl
xor
pushf
cmpsb
ds
or
je
or
pop
or
push
stos
mov
push
xchg
sbb
test
sbbl
mov
adc
stc
andl
push
arpl
inc
adc
loop
cmp
or
dec
mov
sub
dec
adcl
gs
sbb
out
pop
in
and
push
adc
mov
ret
pusha
push
addr16
jg
repz
mov
fstpt
mov
jmp
not
jne
mov
pop
in
stc
roll
punpcklbw
addr16
icebp
call
jmp
jne
mov
iret
sub
or
into
out
cwtl
lea
test
sub
jo
pop
cmp
into
fimull
out
cmpsl
sbb
pop
fcomp
arpl
and
out
out
mov
repz
push
cmc
rcr
cmp
xchg
xor
cmpsb
xor
xor
outsb
ljmp
data16
or
pusha
xchg
dec
fnstsw
in
cmp
arpl
cmp
inc
cltd
in
cmp
push
out
mov
inc
movsl
xchg
cs
or
insl
aad
daa
dec
sarb
aam
hlt
or
movsb
xchg
outsb
int3
lods
std
addr16
es
jno
mov
push
lods
aas
push
lahf
pop
mul
push
popf
int
loope
filds
sub
out
into
or
lret
daa
mov
jo
add
outsl
aaa
fistpll
aas
mov
aas
inc
sbb
pop
fldenv
or
lods
data16
or
sar
addr16
sbb
dec
or
shl
out
out
into
or
sub
adc
loope
sbb
adc
mov
jb
push
lcall
and
and
inc
out
fs
cs
insl
adc
and
xchg
cwtl
cmp
push
or
aaa
and
dec
out
push
in
xor
mov
aas
inc
sbb
pop
cmpsl
adc
popf
inc
inc
or
mov
js
loope
out
mov
pop
or
popf
mov
xor
fidivs
pop
pushf
adc
jae
and
scas
test
xchg
cmc
push
pop
jns
sub
scas
pop
jl
mov
jns
int3
pop
call
or
and
adc
lret
mov
dec
push
sbb
in
push
and
divl
push
andl
lods
mov
and
add
and
jg
mov
adc
lret
pop
push
inc
daa
mov
out
daa
std
inc
int3
adc
pop
repz
sbb
sbb
xor
call
fcoml
add
jle
repz
rcrb
stos
data16
dec
and
pop
push
jecxz
or
mov
scas
mov
fsubrl
fld
inc
mov
sti
mov
cs
add
jp
hlt
adc
in
mov
adc
daa
sub
sti
jp
cmpl
not
adc
dec
push
cmp
mov
into
jb
lret
daa
pop
lock
jo
jg
and
repnz
ret
push
cmp
push
xor
jb
inc
mov
mov
hlt
adc
into
mov
xchg
lods
cld
int
or
adc
ds
roll
popf
decb
sti
jg
push
pop
jne
out
cmp
mov
push
inc
add
lods
in
jo
das
push
lcall
mov
repnz
xor
lret
sbb
push
jo
cltd
ja
popf
sub
mov
lods
test
rclb
jmp
adc
mov
mov
aad
mov
mov
int
inc
or
push
pop
xchg
cwtl
sub
inc
mov
arpl
pop
dec
adc
fisubs
test
mov
sbb
or
adc
adc
dec
bound
mov
repz
inc
imul
mov
mov
and
push
pop
lcall
pop
lret
adc
push
mov
inc
pop
test
lea
dec
pop
addr16
fldl
lret
dec
cli
cmp
sub
sub
lock
ja
aaa
es
cmp
xchg
aad
gs
insb
or
mov
imul
dec
mov
cmp
imul
psraw
sub
adc
test
mull
xor
sbb
fs
xor
enter
pushl
jne
pusha
data16
xor
insb
and
cld
in
cmp
fs
clc
aaa
push
mov
or
sbb
push
popf
dec
adcb
stos
bnd
mov
je
push
push
lcall
push
adc
jno
pop
ret
shrb
mov
jecxz
out
jno
sub
bnd
out
xchg
movsb
inc
mov
inc
pop
inc
or
jmp
pop
sbb
xchg
je
push
lods
pop
xchg
jne
rcl
mov
jle
mov
sti
repnz
push
int3
mov
and
loopne
cmp
clc
js
push
lods
xchg
inc
mov
add
lcall
push
push
mov
mov
mov
pop
std
mov
cwtl
jno
clc
add
xchg
cld
adcl
daa
lret
movsl
sbb
adc
pop
and
ds
sub
push
jmp
inc
dec
push
stos
dec
inc
ja
mov
std
test
pop
sahf
gs
fsubl
sbb
stos
and
xorl
in
xchg
sbb
sub
push
and
or
push
add
in
testb
lret
xor
ret
imul
adc
sub
push
mov
dec
or
test
cltd
adc
pop
ds
lret
loope
mov
and
or
fdivrp
push
push
cli
cltd
mov
mov
test
dec
out
fwait
inc
lahf
push
cmp
pop
push
add
ja
sbb
pop
xchg
pop
pop
mov
fiadds
mov
sub
cli
mov
imul
stos
push
in
jne
add
loopne
or
push
mov
lods
xlat
inc
mov
ljmp
jp
xchg
ss
inc
jo,pt
ret
jne
xlat
adc
pop
pushf
add
cmpsl
push
imul
xor
sbb
mov
sub
cltd
xor
jge
fcoml
popf
sub
mov
xor
and
mov
arpl
ret
test
ds
add
inc
mov
andb
popa
aam
subps
outsl
xor
mov
out
das
ror
adcl
inc
cmp
repz
hlt
xchg
or
cmp
dec
or
cs
daa
dec
arpl
daa
mov
push
pop
xchg
mov
dec
shrl
sub
clc
cmpsb
dec
into
ja
and
iret
or
es
cmp
pop
mov
in
ja
in
pop
cmp
push
push
sbb
loop
jp
rclb
das
pop
cmp
cmp
leave
lret
rclb
shll
mov
outsl
neg
sahf
das
int3
jle
jbe
adc
mov
push
inc
cmc
stos
sbb
pushf
stos
push
mov
pusha
pop
push
rol
insl
xor
mov
mov
push
xchg
pop
sub
xchg
mov
pop
fdivrs
jmp
mov
sbb
gs
jmp
xorl
das
in
sub
pop
push
rol
insl
xor
fmull
outsl
mov
inc
inc
hlt
inc
cli
das
mov
dec
add
or
shlb
lret
or
push
sahf
aad
pop
adc
cmp
data16
data16
cmpsl
dec
pop
adc
shll
adcb
ret
sub
divl
adc
mov
pop
mov
mov
sti
jle
sub
test
jmp
stos
mov
sbb
jmp
testb
ds
cmpsb
inc
shl
ja
push
insb
mov
lret
ja,pt
mov
mov
mov
xor
or
test
dec
and
xor
xor
lcall
lcall
icebp
push
shr
mov
sub
repz
mov
cmpsl
xchg
or
std
push
push
add
shrb
and
std
in
sub
inc
mov
and
mov
jns
dec
nop
jmp
sti
scas
dec
fimull
jp
call
and
push
push
mov
test
imul
rcr
lret
pop
lret
pusha
scas
lcall
mov
jne
sub
shr
loop
inc
sub
pusha
mov
inc
mov
jae
xor
xor
jle
xor
inc
xor
out
xchg
add
inc
ret
sbb
cltd
repnz
stos
insl
adc
fwait
mov
stc
lds
mov
sub
imul
inc
ret
jae
dec
jo
sbb
dec
mov
cmp
fs
ljmp
and
cmpsl
pop
int3
ffreep
loopne
or
outsb
pop
aas
pop
sub
sub
jb
jae
xchg
movl
in
ljmp
arpl
push
fcomip
jo
sub
test
or
push
pop
push
xchg
or
mov
stc
mov
dec
std
inc
es
outsl
les
out
xchg
adcl
addr16
popf
mov
adc
adc
pop
mov
xor
xor
pop
xor
mov
dec
xchg
jmp
cmc
add
sarb
xor
js
xchg
stos
aaa
clc
scas
lods
push
ja
leave
inc
fs
lret
add
cmc
jno
jne
outsl
shl
sar
aaa
call
xchg
int3
xorl
scas
loopne
adc
pop
or
inc
xchg
xor
outsl
repz
les
jns
sub
add
dec
and
pushf
or
pop
mov
cmp
mov
ret
testl
fwait
loopne
sbb
xor
push
enter
lods
fcmovbe
fwait
iret
push
mov
add
cltd
mov
push
add
xchg
aad
pop
fwait
std
mov
jecxz
and
inc
fisttpll
add
mov
out
dec
cli
and
popf
adcl
cltd
scas
mov
je
push
xchg
leave
mov
fldl
js
jecxz
add
xchg
jnp
int3
jle
add
insl
and
mov
lock
into
imul
fs
mov
enter
imulb
push
sahf
dec
in
push
dec
test
popf
mov
ret
stos
insb
jb
mov
push
cmp
lds
sbb
dec
jne
cli
and
or
ds
cmpsl
xchg
jle
pop
xor
jmp
out
push
mov
sbb
jecxz
xchg
out
and
das
inc
xlat
enter
mov
imul
mov
int
jmp
daa
nop
mov
fdivrl
jns
adc
leave
ret
sub
lea
call
mov
sti
pop
xchg
dec
outsb
sbb
test
jl
mov
mov
and
arpl
mov
cmp
add
lock
add
sarb
movsl
sti
jg
shll
sti
dec
xchg
inc
arpl
subb
into
in
jnp
mov
cmp
mov
xchg
jae
imul
cmpsl
mov
mov
xor
mov
push
out
jbe
push
jbe
jbe
jb
jmp
out
or
loopne
inc
shlb
dec
jnp
push
push
int3
sbb
iret
lds
out
loope
in
cmp
and
push
jae
adcb
ret
stos
je
push
arpl
mov
fiaddl
insl
mov
lcall
repnz
cmp
insl
fs
push
out
mov
lds
inc
or
inc
add
gs
mov
jb
cmc
movsb
push
std
mov
ret
repz
jecxz
xor
xor
add
data16
out
rcrl
negb
xor
pop
ret
rcrl
xchg
adc
imul
jno
aam
arpl
mov
ficoms
mov
lcall
repnz
mov
jns
jne
push
repz
fstl
ss
cmp
pushf
rol
and
push
xchg
push
lds
cmp
lock
ja
loope
jns
test
ficoml
push
mov
push
cmp
push
rorl
pop
xor
repnz
mov
inc
pop
psubb
in
jnp
ret
cmp
gs
pop
pop
inc
ret
sbb
jle
imul
hlt
jnp
cs
pushf
mov
jne
sbb
or
ret
jae
xchg
xor
popf
xor
adc
je
push
push
sahf
xor
xchg
push
push
movsb
out
ret
imul
adc
movsl
aam
mov
hlt
add
sbb
mov
cmpsb
or
and
ljmp
xchg
lcall
mov
inc
scas
sbb
mov
cmp
jne
bound
icebp
fs
pop
sbb
push
dec
mov
or
pushf
pop
xor
clc
addl
mov
cmp
jo
and
jge
inc
jp
fucomi
dec
mov
jne
xchg
jl
fwait
adc
sti
fistl
xor
jae
in
or
jo
add
jne
movsl
jecxz
xlat
mov
xchg
mov
xchg
mov
imul
pop
push
gs
cmpsl
dec
xchg
xor
or
add
js
fldl
mov
sub
adc
sbb
add
mov
stos
jmp
scas
xor
aam
cmp
mov
scas
mov
addb
imul
dec
jle
xorb
std
mov
sbb
movsb
nop
adc
ret
out
cmp
sbb
sbb
outsb
or
sbb
lret
sbb
inc
mov
pop
daa
and
dec
arpl
mov
cltd
ret
loope
insb
sbb
sub
and
daa
sti
sub
pusha
add
ror
push
lret
mov
es
call
xchg
sbb
sub
add
jle
shrb
enter
clc
rcll
loopne
sub
push
test
scas
xchg
aaa
jnp
pop
and
mov
adcl
jbe
cmpsl
in
dec
xchg
jge
testb
add
sbb
pop
jge
mov
xchg
sub
les
xchg
mov
adc
mov
push
mov
pop
pushf
push
cmp
shr
sti
lods
xor
ljmp
jae
fdivs
pop
je
cmc
inc
es
int
addr16
popf
int3
mov
push
cs
scas
hlt
sbb
mov
pop
negb
push
xchg
loop
push
jp
ljmp
fwait
mov
pop
in
out
adc
aas
push
dec
fisubl
inc
push
xor
xchg
mov
mov
lret
loop
lret
sub
mov
pop
test
scas
test
outsl
stos
loopne
push
sbb
sbb
dec
repnz
xchg
jg
mov
xchg
and
mov
push
add
jp
add
mov
mov
mov
xlat
jnp
push
or
jge
fninit
mov
cmp
ds
fstps
sti
jbe
lcall
push
mov
pop
mov
adc
sbb
or
pop
clc
ljmp
ror
fbld
pop
cmp
pop
filds
popa
std
in
bound
arpl
xor
movsb
mov
fdivr
cmp
xor
mov
xchg
mov
daa
in
push
inc
sub
xchg
mov
or
int3
push
fwait
push
hlt
movsl
pop
mov
fwait
lcall
rorb
insl
xchg
or
insl
dec
shl
mov
subl
inc
pop
popa
sbb
pop
pop
fdiv
sbb
nop
add
pop
cmp
mov
cmp
int3
inc
addr16
dec
enter
push
pop
mov
push
sahf
xor
xchg
in
mov
mov
mov
je
data16
mov
mov
lods
mov
jb
lret
xchg
push
movsb
cmpsl
xchg
adcl
xchg
dec
xor
pop
loopne
ss
mov
movsl
out
cmpsl
adc
or
mov
push
jne
out
repnz
sbbb
ret
sbb
or
and
xchg
int3
xchg
ret
push
mov
icebp
sub
imul
test
xchg
dec
andb
and
add
sahf
mov
sub
pop
sbb
xor
stc
das
jo
xor
push
mov
leave
fcomip
pop
pop
cmc
cmpsl
imul
jge
push
in
cwtl
repnz
jnp
out
jb
js
in
mov
stos
push
sbb
xchg
add
out
cli
jns
aas
cmpsl
push
sbb
xor
jecxz
push
push
push
sbb
sbb
lret
mov
cmp
push
mov
in
pop
cmp
loop
test
in
addr16
xor
or
xor
xchg
pop
stos
sub
aam
adc
inc
pop
dec
rcrl
sbb
in
push
ficomps
sbb
cmpsl
or
sub
ljmp
pop
jns
mov
mov
dec
or
or
dec
pop
fnstcw
out
idivb
cmp
lret
nop
sbb
inc
jb
jecxz
es
and
jnp
mov
imul
mov
sbb
in
lock
mov
jbe
or
or
add
mov
jg
sti
dec
pop
pusha
dec
lods
lcall
mov
test
mov
push
mov
jbe
adc
into
xchg
mov
fstps
sub
call
ret
push
jecxz
addr16
pop
and
push
jbe
cmpsb
scas
pusha
inc
mov
out
fisttpll
fincstp
xor
xchg
xchg
mov
notl
adc
out
aam
pop
imul
aaa
xchg
cmc
cmp
cwtl
aad
pop
and
das
xor
push
dec
sbb
jo
jge
jl
ljmp
or
in
ja
les
mov
sbb
mov
lret
and
imul
into
rorb
xchg
cwtl
add
xor
pop
and
add
push
shl
jb
push
insl
xchg
adc
sub
mov
clc
jns
shlb
sti
pop
xor
or
xor
xchg
pop
stos
sub
lds
mov
jg
imul
cli
lea
jg
and
fucomp
stos
jg
cmp
fdivrl
insb
pop
dec
push
cmp
outsb
cmpsb
imul
mov
mov
inc
sub
sti
ja
mov
mov
inc
in
cmp
mov
testb
cmc
enter
bound
mov
jo
aad
dec
push
mov
rol
decl
cltd
xchg
out
push
adcl
addb
and
int
lret
jne
arpl
mov
bound
mov
fnstenv
jmp
mov
add
mov
xor
push
adc
add
mov
adc
xor
xchg
hlt
dec
leave
sub
inc
adc
in
push
add
aad
cltd
dec
gs
and
sbb
mov
ss
rclb
dec
int
imul
ljmp
gs
sub
inc
iret
sahf
mov
sbb
mov
icebp
in
in
lods
imul
in
push
mov
in
out
cmp
xor
mov
decb
xor
push
push
sarl
cwtl
test
jmp
mov
ss
dec
ret
das
sbbb
pop
xorl
pusha
fs
ja
or
pushf
cli
push
xor
mov
pop
xor
lret
sahf
decb
adc
ret
repnz
ja
mov
xchg
out
int3
xchg
mov
pop
loop
xor
jns
js
call
adc
xchg
in
sbb
add
pop
adc
out
jmp
aam
xchg
roll
jmp
ret
xchg
loope
roll
add
push
fadd
mov
push
sub
mov
push
aam
push
sbb
cmp
fsts
lea
pop
jecxz
scas
je
sub
inc
push
out
xor
xor
sub
adc
dec
push
popf
out
into
inc
ja
aam
je
xor
cwtl
jp
mov
cmp
xchg
cmpsl
orb
mov
xchg
lods
hlt
mov
cmc
cmp
stc
pop
jae
sarl
push
outsb
mov
pop
out
mov
dec
mov
jno
fildl
mov
add
pop
in
mov
pop
jmp
mov
in
cli
not
imul
cmp
pop
fisttps
pop
push
pop
mov
dec
cli
fsubl
fisttpll
mov
xor
or
fisubl
mov
stc
scas
scas
js
notl
push
jg
in
lock
cld
sbb
jo
jns
mov
mov
push
repnz
shl
out
psubq
xor
xchg
mov
dec
jnp
mov
dec
ss
scas
cs
xchg
cmc
or
sub
gs
fadd
fnstsw
gs
jle
in
xor
xor
sub
pop
jb
sub
incb
outsl
jg
push
daa
adc
cmpb
out
lock
je
pushf
mov
pop
scas
repnz
scas
adc
je
sub
scas
leave
pop
adc
jnp
jns
dec
cmp
outsb
or
and
cmpsl
daa
jbe
mov
test
popa
jecxz
add
in
push
out
jecxz
jle
outsb
adc
mov
outsb
xchg
test
insb
dec
repnz
test
and
mov
jbe
fstpt
test
adc
lds
rcll
jbe
sti
js
enter
cmpsl
repnz
es
pusha
adc
insl
insl
loope
xor
jl
jno
je
iret
test
es
fdivr
push
popa
mov
adc
arpl
dec
sbb
loope
es
test
xchg
jmp
sbb
pop
dec
add
pop
shrl
mov
sub
rcrl
sub
pushf
inc
outsl
outsl
mov
sub
sbb
add
out
pop
rcr
and
mov
in
dec
push
push
stos
xor
jae
scas
mov
lock
idivb
lods
xor
dec
cld
mov
add
into
mov
fwait
sbb
cld
pop
ficoms
dec
pop
aas
adc
or
xor
mov
mov
or
or
das
pop
lea
inc
stc
imul
adc
outsb
adc
push
adc
xor
repz
in
push
out
xchg
pusha
cwtl
in
cmp
inc
push
out
fcmovu
dec
jecxz
pop
sbb
jmp
adc
and
jmp
sahf
jae
nop
in
hlt
inc
cs
or
je
lret
pop
in
cmp
add
lret
in
jne
mov
int3
stc
loop
enter
jbe
data16
mov
push
je
xchg
inc
dec
dec
jp
stos
mov
imul
adc
mov
fcmove
and
faddp
test
sub
movsl
cwtl
inc
out
neg
or
int3
and
xor
push
mov
imul
pushf
js
loope
pushl
test
iret
jnp
shll
push
mov
mov
cwtl
pop
push
push
pop
mov
fstpl
push
or
and
pop
fsub
scas
sti
cltd
sahf
fistpll
stos
test
or
cmp
pop
xchg
mov
adc
test
mov
cmpsb
and
mov
insl
lods
jmp
adc
push
and
out
xor
and
cmp
or
subb
fstl
jmp
test
adc
sar
sub
sbb
mov
and
adcl
ret
and
shrb
or
dec
pop
lock
sbb
loopne
inc
fisttps
ret
jo
mov
loope
fwait
or
clc
imul
adc
ljmp
cmc
fisubrl
fsts
outsl
cmc
shlb
xchg
outsl
and
mov
stos
sbb
mov
xor
pop
loop
add
jnp
sbbl
fiadds
int
sub
jmp
cld
pop
das
popa
mov
lock
outsl
lea
sub
adc
mov
sti
aas
or
cmp
testl
das
xchg
enter
mov
inc
sub
jl
idivl
sbb
movb
cmc
fimuls
jp
sub
loopne
sub
dec
popa
inc
lea
and
sti
jne
sarl
ljmp
lock
fsubrp
xor
addb
sbb
dec
imull
popl
xchg
mov
rcll
imul
mov
dec
ljmp
scas
mov
loope
iret
nop
repz
ja
push
xchg
xchg
cmp
dec
stos
and
jns
mov
in
jle
sub
ds
add
cwtl
movsb
sbb
xchg
push
inc
shll
or
shlb
or
cmc
hlt
cmp
jl
rcrl
adc
fs
dec
xchg
xchg
push
xorl
ror
jp
cld
and
and
stc
add
mov
jg
adc
aaa
test
mov
mov
jle
lock
inc
pushf
ss
out
push
jl
pushf
push
imul
push
popf
pop
sbb
xor
repnz
mov
pop
dec
test
sbb
in
pop
aas
outsl
lock
sarb
fisubs
lcall
dec
or
and
or
ds
insl
inc
push
cmc
pop
sub
sti
in
dec
dec
inc
dec
out
pop
call
aad
aam
incb
xlat
jo
add
mov
xchg
ds
dec
mov
jg
and
push
dec
or
sbb
sbb
add
lods
arpl
mov
jecxz
ror
xchg
in
xlat
mov
push
dec
pop
xchg
pop
adc
sub
mov
mov
jg
cmc
fdivr
pop
stc
es
sub
mov
mov
pop
xlat
mov
jp
fisubrl
mov
and
mov
sub
fildll
imul
repnz
popa
stc
je
lcall
loop
jno
sbbb
movsl
push
jno
sbb
loopne
pop
outsb
cld
mov
popa
jp
jae
into
pop
sub
repz
jl
xor
push
cld
movsb
mov
ss
test
pop
pop
addr16
test
sub
outsb
cvttps2pi
dec
dec
pop
and
js
pusha
jmp
push
jge
repnz
xchg
cld
or
adc
push
mov
scas
jge
call
shl
mov
je
std
xlat
ss
cmp
pop
jmp
imul
pusha
ficoml
inc
pop
sarb
outsl
xlat
rclb
sub
test
add
and
lcall
fdivp
cltd
push
ret
push
sbb
push
movl
adc
nop
icebp
pusha
jnp
xlat
pop
jge
push
sbbl
call
cld
shrb
jmp
push
ss
jns
mov
pop
jp
xlat
enter
xchg
aad
mov
cmp
fisubrl
notl
dec
and
into
push
test
das
jp
dec
sub
mov
mov
movsl
cs
dec
or
fstl
scas
jecxz
add
stos
out
add
es
in
ret
incl
sub
cli
stos
mull
pushf
mov
mov
xor
or
cmp
mov
inc
sub
loope
fisttpl
xchg
jo
rorb
hlt
xor
pushf
sahf
movsl
dec
xchg
pushf
adc
cld
sarl
push
mov
and
arpl
mov
push
mov
dec
aam
lods
pop
dec
lahf
sbb
jns
push
mov
testb
fwait
add
roll
fwait
movsl
fcoml
mov
or
xchg
pushf
add
icebp
pop
mov
mov
mov
pop
popf
pop
adc
xor
xchg
data16
pop
insb
das
jp
bound
aaa
test
mov
dec
jge
jmp
add
je
pop
mov
bswap
clc
scas
sbb
pcmpeqb
lcall
or
in
xchg
pop
into
dec
xchg
jmp
jno
sub
pop
mov
ja
xor
dec
cld
imul
mov
push
xor
and
pushf
test
nop
repz
into
les
push
outsb
popa
jle
lcall
pop
cmpsb
scas
ja
mov
imul
std
pop
je
aaa
jno
shrb
pop
and
and
cmp
sarb
gs
cltd
dec
jmp
mov
stos
pushf
mov
push
es
jb
mov
mov
mull
insl
test
xchg
add
data16
data16
filds
cmp
pop
inc
in
test
repz
xchg
and
sub
inc
aaa
cli
jmp
in
cmp
mov
jecxz
cmp
add
lock
imul
stc
out
fstl
pusha
mov
mov
out
xchg
inc
pop
test
out
adc
lods
test
dec
pop
or
push
jl
add
out
push
mov
out
ja
push
loopne
mov
push
jo
pop
ljmp
insl
push
lret
insl
jnp
xchg
dec
shll
xchg
mov
sahf
push
and
sub
xlat
stos
dec
mov
outsl
in
adc
cmpb
dec
jno
in
cmp
cmp
pop
in
jg
xchg
xor
loop
mov
popa
decb
add
dec
jnp
cwtl
scas
cmp
mov
lock
int
pop
leave
sti
fdivs
mov
jecxz
vmptrst
jmp
sbb
imul
pop
lret
icebp
mov
jmp
push
xor
xor
dec
aaa
sahf
xchg
jmp
jns
test
add
jb
mov
test
stos
int
vmulsd
cmc
dec
add
or
mul
pusha
jg
mov
mov
or
push
cmc
pop
sbb
push
cmpsl
enter
xchg
iret
or
test
out
and
outsl
daa
or
mov
into
movsb
cmc
arpl
out
dec
clc
pushf
pop
int
aas
mov
into
add
clc
xchg
aas
stc
add
cmp
cmpsb
dec
pop
shl
mov
fildll
fs
out
pop
lea
imul
cmpsl
push
adc
rcrl
push
xchg
or
and
or
mov
dec
test
repnz
cmpsl
push
xchg
fwait
xchg
and
pop
cmpsl
fsubr
push
inc
popf
fadd
lods
mov
sub
clc
arpl
pop
mov
das
inc
sbb
addl
stos
mov
pop
cmp
inc
inc
push
loopne
push
sub
xchg
mov
cmp
xor
inc
cmc
call
lret
call
mulb
or
ret
data16
pop
mov
mov
mov
inc
mov
orb
cltd
fwait
add
aad
jb
cmp
rcll
pop
lods
jg
push
cmp
addr16
mov
jecxz
sbb
imul
ljmp
les
sti
cmp
mov
jle
or
xor
xor
insl
fsubr
xchg
sub
inc
dec
scas
incb
cmc
in
frstor
dec
in
lock
fmuls
cld
pop
xlat
dec
cmp
pop
xchg
mov
sub
into
sub
out
jns
lds
mov
xchg
add
mov
ficoms
xchg
popa
xchg
lock
cmp
sbb
loopne
cltd
mov
xrelease
mov
mov
mov
or
sbb
inc
sub
es
jnp
dec
mov
lahf
dec
dec
cmp
dec
push
push
pop
insl
sub
inc
ljmp
inc
mov
sub
cld
dec
inc
int3
mov
stos
pop
cltd
and
xchg
add
mov
mov
subb
mov
inc
cmp
xchg
ret
les
pop
or
lret
aam
call
jg
push
stos
cmp
fstl
rorl
inc
adc
mov
and
mov
int3
adc
cmp
clc
add
rorb
cmp
scas
pop
clc
out
notl
das
push
xchg
clc
adc
int3
lock
lret
out
sub
mov
cmp
mov
das
popl
cmp
xchg
mov
andb
leave
or
pop
add
add
sbb
pop
push
xor
xor
inc
dec
mov
movsl
xchg
adc
xchg
xor
ss
jl
adc
pop
fcomps
iret
addr16
repnz
jge
lds
mov
pop
push
and
jb
divb
je
mov
and
dec
nop
js
fisttpll
test
push
or
push
inc
sbb
push
flds
sahf
dec
adc
ja
test
and
into
lock
out
inc
mov
stos
arpl
ljmp
mov
mov
out
sub
in
dec
test
int
jge
xchg
bound
inc
fld
sbb
add
sbb
and
xlat
rcrl
push
xor
test
dec
or
fistpl
dec
and
dec
sub
outsl
dec
in
cltd
je
cmp
int3
andb
lcall
mov
adc
testb
and
add
fisubrs
mov
popa
sbb
dec
xchg
fchs
mov
pop
pusha
push
and
jmp
cli
aam
mov
add
nop
push
test
or
int3
xchg
sbb
cmp
ret
mov
ljmp
jno
push
iret
nop
lods
or
pop
xchg
or
sbb
sbbl
push
push
push
cltd
jmp
ljmp
hlt
ss
daa
mov
rcl
mov
mov
into
fcomps
pop
popf
dec
dec
fcomps
imul
sub
pop
into
lods
call
movsb
cli
rcr
pop
lods
mov
sti
test
fisttpl
out
outsb
out
jp
into
daa
les
mov
lds
ret
fistpl
pop
or
push
shll
add
test
dec
out
push
xlat
bound
jae
sub
add
sbb
outsl
popf
sbb
adc
fs
leave
adc
xchg
mov
es
cmpsl
mov
arpl
sub
cmpl
cmpsl
dec
pusha
fisttps
aad
stos
js
movsb
call
add
and
ss
mov
mov
xchg
dec
push
pop
adc
adc
sbb
lret
inc
push
adc
push
je
add
mov
push
loopne
inc
negl
out
pop
push
out
jmp
cmp
jno
ret
lret
dec
cli
xchg
adc
aam
ss
mov
xlat
jl
pop
adc
notl
sarb
data16
arpl
xor
loope
lea
mov
dec
insl
add
cmpsb
mov
pop
xchg
iret
das
das
imul
inc
pop
xchg
pop
and
inc
iret
or
or
popf
cmc
lods
pop
shll
adc
out
add
ret
pushf
xchg
fists
jge,pn
push
pop
es
pop
adc
cltd
sub
dec
lret
mov
pop
stos
pushf
mov
jmp
xchg
inc
iret
or
jb,pn
pop
testb
inc
das
jae
insl
cs
popf
mov
mov
out
add
leave
in
ds
sbb
inc
imul
ja
inc
fdivrl
test
insl
fcoml
enter
push
inc
mov
mov
and
adc
adc
fnop
mov
mov
andl
addl
xchg
outsb
das
mov
and
into
pop
movsl
jp
ljmp
insb
mov
pop
and
cmp
lods
inc
sub
mov
and
fs
lods
repz
and
sbb
das
mov
pop
lock
outsl
int3
loop
enter
scas
sub
jmp
and
ss
cld
andl
lock
outsl
xchg
xchg
mov
imul
ljmp
testb
cs
cld
roll
lods
movsb
push
mov
movsb
aad
jnp
out
das
sysenter
cmpsb
dec
xor
or
jg
clc
push
movsl
js
add
xchg
cmp
outsl
jge
inc
data16
mov
jmp
shl
jl
outsl
adc
mov
loop
cwtl
mov
repnz
lret
jmp
inc
icebp
or
push
enter
test
test
pop
loope
lods
call
fsub
inc
inc
in
jle
xchg
inc
loope
mov
pop
push
test
or
lcall
sbb
mov
outsl
iret
es
ret
int
inc
or
aaa
push
adc
and
pushw
dec
repz
flds
sahf
dec
adc
ja
movsl
hlt
mov
push
test
or
scas
les
sub
stos
cmp
pop
es
mov
dec
icebp
cltd
push
and
xchg
lock
shll
enter
insl
xor
xchg
mov
cld
out
xor
mov
in
push
data16
pop
roll
sub
mov
loopne
jb
mov
push
adc
inc
xchg
mov
or
mov
sbb
push
add
mov
add
xor
sbb
cmp
sbb
ss
ret
aam
dec
out
ss
jmp
sbb
xlat
pop
mov
sub
cmp
cmp
arpl
sbb
cmc
jl
mov
pop
cmp
aaa
sub
mov
fimull
mov
and
pop
outsl
and
movaps
jne
out
divb
stos
push
pop
jmp
inc
xor
push
gs
xchg
push
xchg
and
push
sahf
iret
add
test
or
rcr
xchg
mov
and
inc
das
sub
inc
aaa
mov
adc
mov
shll
push
cli
add
mov
push
pop
xchg
hlt
dec
in
out
pop
mov
rcrl
pop
test
adc
lahf
insl
pop
loopne
xor
push
aad
adc
push
ss
in
popf
mov
ss
jo
inc
push
ljmp
addb
leave
mov
sbb
inc
mov
mov
jo
int3
sbb
mov
js
sbb
lret
mov
rcrl
inc
stc
mov
call
xchg
and
push
sub
arpl
dec
adc
cmp
jmp
inc
mov
sahf
dec
mov
lcall
sahf
cmp
mov
adc
stos
stos
dec
cld
andb
mov
or
jno
mov
icebp
jbe
jnp
mov
test
push
leave
pop
in
mov
cmc
mov
pop
rcrb
jecxz
inc
lret
lea
in
xlat
fwait
int
jae
ds
mov
jno
jns
fcmovu
frstor
scas
add
mov
dec
sub
adc
lock
lcall
and
push
dec
dec
mov
mov
xchg
aas
popa
and
add
cmpsl
aas
mov
bound
dec
push
xchg
pop
sbb
dec
mov
sub
lret
loope
mov
insb
rol
and
or
inc
lcall
pop
cmovg
inc
add
sbb
dec
xchg
arpl
pop
imul
push
movsb
loop
mov
jno
scas
rcll
test
popf
lods
lcall
aas
mov
add
daa
popf
data16
fisubrs
dec
data16
mov
out
and
loopne
call
daa
jle
adc
mov
xor
loopne
sub
sub
mov
lcall
outsl
push
push
jae
inc
mov
push
add
push
or
in
dec
mov
sahf
subl
and
ret
add
adc
int
xor
jbe
and
mov
push
out
xchg
fmull
sbb
dec
add
cld
repz
jae
and
cmpsb
mov
jb
jns
fcomp
xchg
inc
and
sub
ljmp
cwtl
sub
mov
sbb
outsb
push
stos
pop
mov
mov
add
cmp
cs
mov
mov
adc
ret
std
pop
icebp
movsl
icebp
daa
mov
adc
call
lret
jmp
insl
je
ret
inc
push
pop
cmc
clc
lds
stos
lcall
pop
pop
dec
dec
or
xchg
out
jo
push
dec
cmc
cmp
cs
or
or
cmp
xchg
xlat
fmull
adc
xlat
dec
pop
lret
pop
sub
fsubs
xchg
out
in
mov
test
sub
xchg
or
mov
sti
xor
cld
stos
jmp
mov
or
and
sbb
jo
add
push
lret
dec
jno
movsl
jns
mov
out
aad
cld
jnp
dec
xchg
aam
add
inc
mov
cmp
push
jge
repnz
xchg
and
xchg
add
aas
fnstcw
add
push
mov
imul
sahf
movsb
cwtl
jl
mov
inc
or
enter
dec
movsb
sti
mov
in
inc
jne
jae
cmp
ljmp
or
dec
sbb
mov
mov
dec
xlat
pop
xor
cmp
inc
mov
pop
in
ss
sbb
aam
outsb
scas
popa
aad
sti
add
sub
xor
cmp
inc
mov
icebp
rolb
pop
mov
inc
nop
or
subl
cs
iret
cmp
int3
cs
dec
in
lods
outsl
pop
test
add
loop
out
daa
add
scas
inc
ret
add
mov
loope
fidivl
xor
mov
sbb
cwtl
lret
pop
repnz
xchg
stc
hlt
test
orb
push
loopne
mov
arpl
ror
fidivs
xor
xor
pop
jbe
lcall
or
or
int3
xchg
subl
xchg
mov
out
push
jns
cltd
out
pop
cltd
dec
std
mov
pop
aas
mov
sbb
add
fdivrs
bound
mov
int
loopne
sahf
sahf
lods
hlt
sub
or
cmp
push
inc
xor
filds
outsb
add
sbb
sub
add
mov
mov
popa
pop
add
fwait
sbb
pop
inc
int3
shl
jmp
xor
fnsave
movups
pop
dec
je
pop
movsl
test
inc
jb
cmp
dec
push
mov
mov
std
ss
fs
cmp
shll
jp
mov
mov
js
imul
mov
xchg
fidivl
sub
shll
mov
jg
cmpsb
out
push
repnz
mov
mov
fidivs
cs
add
mov
inc
xchg
push
mov
aam
fsubrp
andb
mov
imul
add
push
dec
pop
jae
sub
jge
push
dec
mov
and
jecxz
push
out
jno
jmp
sbb
xchg
pop
pop
sahf
sbb
jge
out
testl
nop
test
xor
test
outsl
mov
roll
cmp
loope
test
lds
xchg
imul
iret
sti
shl
arpl
jp
jg
lret
repz
push
outsl
aad
sbb
adc
lcall
sub
push
add
arpl
push
mov
push
xor
mov
xlat
fwait
repnz
shlb
push
loope
out
scas
fadds
in
push
inc
push
jb
movsb
cmc
fistps
pusha
or
out
push
xor
xchg
inc
lods
jbe
push
jg
add
pop
jl
subl
mov
pop
pusha
mov
subb
arpl
fidivrs
jp
sbb
push
imul
cli
jnp
outsl
pusha
repnz
inc
jo
cmp
sbb
adc
ret
jp
inc
jg
pop
sbb
es
mov
add
pop
xchg
cmpsb
mov
arpl
inc
mov
sub
cmpsl
cmp
mov
xlat
iret
inc
insb
aas
sti
aaa
xchg
mov
gs
and
push
cmpsl
dec
xor
ljmp
sbb
inc
or
stos
cmp
lcall
imul
jmp
jnp
add
pop
pop
pop
mov
cmp
divl
add
mov
and
sub
sarl
int
cmp
xor
push
xor
cmp
sbb
sub
fsubrl
leave
out
aam
fisubrl
sub
mov
dec
mov
dec
xchg
adc
xchg
mov
iret
std
fadd
mov
sbb
ret
je
clc
pop
xchg
inc
shl
test
push
negb
aaa
cmp
push
mov
addl
fwait
in
xor
dec
sbb
inc
push
ja
iret
mov
sub
mulb
and
loop
add
mov
and
mov
fsubs
pusha
in
aas
sub
out
stc
test
ds
lcall
jbe
loopne
ret
adc
xor
jne
xchg
hlt
or
data16
jns
pop
in
and
jge
lods
mov
je
popf
dec
fwait
add
lods
ss
notb
inc
pop
sbb
daa
push
loop
xchg
sub
xorl
lock
sub
pop
es
in
push
mov
pop
pop
sarb
mov
inc
clc
push
inc
inc
rcrl
add
cmc
daa
xor
xchg
ja
mov
inc
push
push
js
cld
jg
lods
pop
outsb
bswap
movnti
jo
jb
sbb
sbb
jbe
sbb
imul
lea
mov
add
cli
xor
and
cs
dec
push
aaa
sbb
push
popa
xchg
out
cli
dec
stc
xorl
xor
jecxz
sbb
pop
mov
jb
repz
leave
mov
xchg
lcall
mov
xor
fcomps
adc
icebp
pop
rclb
mov
jp
sbbb
mov
push
leave
and
mov
xchg
cmpl
cwtl
out
pop
stc
xor
inc
shll
lods
push
vpunpcklqdq
push
popa
lea
imul
loopne
iret
mov
jnp
pop
pop
pop
rcrl
pop
cmp
mov
pop
dec
add
pop
rcrl
popl
leave
imul
ret
lds
sahf
adc
mov
sub
mov
lock
cmp
pop
and
icebp
xchg
out
sbb
xchg
inc
mov
push
mov
pop
mov
sub
shlb
daa
mov
add
pop
mov
push
mov
fstpt
jmp
sub
lret
mov
xlat
fdivr
outsb
push
xlat
push
bound
dec
lahf
rcll
decl
cmp
pop
sub
fsubrl
push
or
sub
jns
jmp
jp
push
push
scas
mov
add
jecxz
sahf
in
or
push
fsubr
test
cmpsb
push
mov
lods
pusha
cli
xor
jge
loopne
mov
mov
or
imul
xor
xor
jnp
scas
jns,pn
mov
cmp
insb
or
and
push
fs
mov
inc
xlat
xchg
mov
lahf
lea
loope
inc
mov
pop
mov
and
iret
add
inc
xchg
icebp
mov
jmp
das
mov
mov
mov
fiaddl
lods
das
insb
jp
sub
mov
jle
or
aam
repz
cs
outsl
out
mov
or
lcall
pop
mov
mov
sbb
in
and
push
insb
in
or
mov
clc
mov
xchg
into
stos
out
sub
jo
jg
xchg
stc
leave
cmp
cmpl
sbb
lea
cmp
insl
hlt
aam
ret
imul
jbe
std
jecxz
inc
push
mov
dec
jge
pushf
nop
aaa
pop
xor
xor
xor
inc
bnd
sbb
mov
arpl
jg
xor
out
jg
lret
into
scas
xchg
lock
mov
outsl
sbb
jg
add
pop
pop
push
inc
or
jae
lods
mov
aam
movsl
sahf
outsb
push
xchg
mov
aam
mov
call
adc
stos
test
adc
xchg
or
inc
nop
add
lods
ret
jge
ds
xor
or
xlat
jmp
std
ret
ja
mov
roll
test
scas
pop
add
inc
push
mov
test
adc
fcomi
inc
gs
hlt
data16
loopne
aam
scas
dec
lods
jae
sub
inc
mov
es
aad
push
sub
loop
addr16
ss
lock
cwtd
sbb
sbb
in
push
pop
push
mov
in
xchg
mov
or
test
ret
ds
pop
push
jge
orb
jecxz
stos
and
js
mov
push
mov
xorl
and
push
xchg
mov
jno
sub
js
mov
lods
push
mov
in
mov
cmp
ret
andb
rcll
xchg
or
mov
mov
pop
cs
adcb
sbb
xor
test
lahf
pop
insb
or
and
sbb
mov
push
xor
xchg
push
ds
pop
jnp
out
push
and
and
rol
je
pusha
pop
dec
in
xlat
inc
adc
lods
mov
inc
push
fnsave
add
loop
sti
pop
lret
rolb
mov
lcall
dec
mov
xlat
es
push
pop
push
xchg
dec
incl
aas
shlb
pop
and
fcmovu
or
xor
pop
imul
fidivrl
or
inc
jle
mov
jmp
dec
push
stos
jecxz
push
mov
ljmp
in
mov
jg
fildll
vmovaps
mov
jl
lds
adc
jl
rclb
or
ret
cmp
sbb
adc
dec
pop
and
push
cltd
mov
lcall
jae
hlt
pusha
mov
lret
or
or
pusha
jecxz
mov
sub
dec
xchg
bound
out
or
sub
sub
lods
aad
sbb
scas
add
and
mov
mov
push
add
or
je
cmp
cmp
cld
xor
insb
sbb
cmp
jmp
fs
push
cwtl
xchg
stos
in
outsb
into
adc
sbb
loop
rol
stos
cmpsb
ljmp
xchg
cmp
loop
repnz
mov
adc
rorl
fstps
jbe
dec
insl
stc
inc
mov
pop
pop
mov
sbb
sbb
fidivrl
mov
inc
cmp
test
int
mov
enter
pop
rorb
jne
push
dec
fdivr
subb
ds
icebp
xor
fcmovnb
mov
pop
cwtl
sbb
or
stc
and
mov
lea
mov
jl
cmp
hlt
in
xor
das
mov
fsubs
mov
inc
popf
pop
push
mov
lea
xor
xor
and
aam
xor
rclb
push
push
xchg
or
push
sarl
daa
daa
add
clc
fistpll
sub
sub
lea
out
or
lods
sbbl
push
lods
arpl
and
sub
or
ljmp
mov
mov
sub
movsbl
std
mov
cmp
xchg
pop
mov
out
inc
push
adc
inc
mov
cmp
jo
out
orl
popf
or
and
cmp
nop
cli
lahf
lcall
mov
mov
jge
push
out
add
ret
adc
test
push
adc
test
shr
stos
mov
inc
add
nop
mov
lea
loop
or
inc
sub
insb
movsb
sub
nop
mov
pop
rol
and
push
adc
and
jmp
mov
dec
ds
add
sbb
aaa
add
mov
push
movsb
les
sbb
pop
add
rcr
sarb
outsb
push
incl
fstl
sub
cmpsb
cmpsl
mov
jmp
clc
jecxz
mov
inc
push
pop
mov
mov
sbb
ljmp
cwtl
inc
das
xchg
fdivl
adc
pop
mov
roll
rclb
jge
test
sub
push
cmp
jmp
in
xchg
push
ds
stc
push
fsubs
jno
sbb
negb
adc
outsl
cmpsb
xchg
cmp
mov
decb
cs
mov
inc
sub
pop
pop
mov
mov
jle
inc
adc
fildl
xchg
fldl
jae
push
and
lea
push
loop
fiadds
xor
leave
cmpsb
push
cmp
das
cld
xor
insb
sbb
cmp
jmp
inc
insb
adc
add
mov
jl
iret
sbb
loopne
inc
mov
or
dec
inc
inc
xor
add
lahf
and
mov
pop
inc
jmp
ffreep
sbb
inc
les
cmp
xor
jp
shll
xor
cmp
mov
cmp
jmp
pusha
test
push
outsb
cmp
jecxz
call
adc
adc
or
cltd
add
mov
movsl
loopne
cli
xchg
les
data16
sahf
imul
inc
cmp
add
sahf
jb
adc
in
sub
insb
ja
sub
into
adc
pop
jae
icebp
fsubp
mov
sub
popf
and
call
inc
fmuls
iret
mov
mov
pop
push
addps
and
mov
adc
pop
lods
lds
sbb
sti
lock
addr16
bound
dec
out
out
mov
and
jnp
sbb
test
and
mov
sahf
or
rcl
mov
push
pop
movsl
cmp
mov
orb
js
dec
cmp
xor
cmc
mov
fidivrl
mov
ja
mov
adc
sbb
sbb
fstpt
loope
sub
cmp
imul
sbb
or
arpl
xor
into
pop
jae
xchg
mov
subl
mov
icebp
and
aam
addr16
add
shrl
call
fs
pusha
mov
xor
pop
arpl
xchg
pushf
mov
pop
inc
cmp
push
imul
sub
dec
int
add
je
es
sbb
test
stos
jo
adc
push
leave
push
sti
pop
xchg
adc
lret
cmp
call
cmp
jnp
add
stos
inc
daa
sbb
mov
pop
dec
data16
or
ja
dec
cwtl
mov
fidivl
dec
loop
jl
or
push
loopne
lcall
pop
pop
and
xlat
push
xchg
gs
pop
pop
lods
jb
decb
cwtl
sahf
shll
xor
add
push
xor
gs
mov
outsl
sub
jecxz
and
bound
jp
push
adc
daa
out
xor
rorb
cmpsl
jns
popf
jl
pop
aad
dec
out
call
loopne
in
imul
pop
xchg
cwtl
dec
pusha
mov
popa
sahf
inc
ret
dec
push
sbb
mov
loope
and
jge
movb
pop
xchg
icebp
loop
adc
jb
inc
push
mov
adc
add
gs
js
sbb
add
scas
clc
jae
fwait
loopne
fisubs
loope
cmpl
ror
add
pop
mov
ja
jg
adc
cwtl
cltd
stc
xchg
ja
lock
mov
cmpsb
xchg
push
pop
push
push
fimull
xor
jmp
icebp
and
push
jb
or
aaa
xor
std
mov
xor
adc
push
jp
insl
data16
sbb
shlb
xor
or
mov
cmp
mov
stos
popa
icebp
mov
ret
xor
pop
sub
mov
lahf
call
push
insl
cld
nop
jae
inc
andb
cmpsb
cmpsl
pop
enter
sbb
push
fiadds
mov
xor
mov
lcall
cmpl
xchg
pop
lahf
add
dec
cmp
or
cwtl
sub
inc
push
push
stos
mov
pop
sbb
dec
std
mov
bound
shll
jl
adcb
sbb
push
xchg
xor
popf
loope
mov
clc
push
lcall
jmp
lods
cld
push
leave
jo
jmp
loopne
leave
fldcw
sub
lea
or
lea
or
xchg
imul
inc
push
outsl
call
mov
out
arpl
sbb
mov
fidivrl
add
push
push
dec
testl
pop
in
fisttps
dec
in
cmp
mov
or
mov
nop
mov
scas
insl
pop
cltd
mov
pop
mov
nop
hlt
mov
loop
xchg
jo
pop
ret
inc
mov
lahf
xor
mov
cltd
imul
sbb
push
mov
cli
out
and
inc
out
cli
out
inc
cwtl
cmp
scas
mov
jmp
hlt
dec
stos
xor
add
int3
jnp
sub
inc
xor
mov
mov
fcmovnu
cmc
scas
dec
cmp
fmul
xchg
imul
xor
dec
jb
xchg
add
sbb
lods
mov
cltd
pushf
dec
push
scas
inc
sbb
mov
pop
and
push
arpl
push
dec
das
lret
adc
insb
jge
add
mov
pop
jp
aam
test
or
push
aas
sbb
sub
mov
jno
jbe
out
andb
sbb
sbb
cmp
mov
jae
in
fcoml
nop
iret
sbb
int3
dec
jmp
or
xchg
dec
inc
jg
xchg
mov
shlb
jmp
add
mov
in
das
fistps
sbb
sbb
test
jg
fistpl
mov
sub
fimull
cld
mov
jp
push
jge
outsb
imul
sub
and
repz
das
dec
fstpl
sub
pop
mov
adc
in
jg
loop
rol
adc
sahf
jb
sub
add
and
add
push
or
jle
push
in
mov
popa
fwait
lods
cmp
jge
add
pop
int3
xlat
cmp
fisttps
inc
and
xlat
cld
aam
mov
inc
repz
mov
ss
xor
add
lahf
outsb
ficomps
xor
insb
movsb
jmp
stc
or
jge
ds
pop
add
pop
jno
push
push
jl
jno
and
loop
dec
cmp
jnp
daa
nop
push
adc
aas
pop
icebp
mov
in
add
dec
sbb
mov
cli
mov
xchg
add
das
xor
ret
jecxz
dec
inc
adc
adc
arpl
es
cmp
or
rolb
cli
cmp
mov
xor
in
add
pop
or
inc
jo
push
in
xchg
cmp
xchg
outsb
mov
mov
add
jp
test
lea
add
movb
mov
stos
push
xchg
ljmp
pop
cmp
and
xor
fbld
stos
mov
lret
jbe
ret
sbb
push
repz
sub
add
cmpsl
ret
test
cmpsl
call
cmc
or
loope
jg
sub
stos
dec
mov
jge
dec
xor
jp
push
jns
add
mulb
cli
and
mov
push
or
popf
add
dec
sbb
xlat
dec
mov
out
sti
and
lret
insb
xor
fdiv
aaa
xchg
inc
enter
xlat
sbb
jbe
adc
addr16
lods
xor
jb
test
mov
js
dec
inc
andl
fcmovb
lock
daa
scas
jo
sti
mov
sbb
mov
dec
lret
xor
pop
pop
fwait
mov
cmp
hlt
pop
xlat
lock
dec
jge
and
daa
outsb
jle
ret
aas
and
adc
and
hlt
les
movsb
icebp
mov
jno
fldcw
xchg
in
sub
or
jge
push
je
inc
cmc
out
iret
movsb
push
lahf
insl
decb
adc
in
aam
insl
std
jg
bound
stos
insl
xor
pop
test
pop
inc
mov
sahf
push
mov
rolb
push
mov
xchg
cwtl
test
or
xchg
out
dec
out
xlat
pushl
cmp
nop
lods
loopne
inc
sub
lods
and
movsl
daa
mov
mov
popf
push
sub
in
out
out
sbb
push
js
inc
pusha
inc
cmc
xchg
xchg
or
adc
mov
and
sti
mov
dec
mov
dec
loope
in
leave
mov
push
sbb
bound
sub
negl
lods
xchg
push
xchg
mov
dec
insb
das
hlt
decl
mov
gs
shll
push
in
ss
sarb
ja
cmp
xchg
frstor
mov
push
jne
cmc
jb
loopne
rcr
imul
or
adc
clc
jmp
cmp
fisttpll
aam
cltd
cltd
int3
adc
sub
sti
out
int3
clc
mov
inc
jne
stos
inc
cmp
loopne
xor
cmp
sbb
sub
aaa
push
sub
pop
mov
pop
fsub
sub
sbb
ret
mov
cs
iret
and
enter
fsubrl
and
sti
jnp
in
pop
push
cli
sahf
mov
mov
xor
add
cmp
sbb
cli
bound
add
dec
lods
pop
icebp
inc
imul
jnp
mov
adc
pop
dec
add
pop
rorl
testl
mov
sub
inc
in
mov
sahf
xchg
push
inc
mov
push
addr16
cmp
pushf
sbb
xor
outsb
enter
aam
xor
or
xchg
pop
sti
xor
mov
pmaddwd
cmp
lods
xchg
outsb
loopne
jbe
test
lret
insl
jge
jl
pop
xchg
scas
movsb
adc
xchg
in
lcall
sub
pop
daa
jo
pop
push
sub
sbb
in
fsubrl
or
cltd
divb
fistpl
repz
add
outsl
mov
xchg
scas
add
jno
push
into
mov
cmp
adc
insb
pusha
or
negl
fisubrs
pop
jo
xchg
sysexit
and
or
pop
sub
or
or
and
adc
int
push
pushf
jae
inc
mov
sbb
std
push
ret
jbe
xor
in
push
outsl
roll
mov
dec
mov
das
pop
mov
pushf
or
pop
jmp
pop
bound
push
adc
jb
fs
testl
lea
loop
popf
popf
roll
jecxz
mov
mov
mov
and
dec
jo
lods
fsubl
div
out
setge
loopne
cmpb
xor
lock
shrb
rolb
ds
test
mov
mov
jge
negb
dec
in
popf
lods
fsubrs
cmpsl
or
mov
sub
add
std
jns
stos
loop
add
sahf
xor
mov
andl
cwtl
js
xor
cmp
adc
decb
push
int
dec
inc
add
js
js
push
xchg
sub
push
add
adc
and
adcb
mov
loopne
sbb
dec
dec
out
out
cli
dec
jno
js
inc
popf
push
stc
xorl
push
in
lods
sbbl
mov
outsl
ljmp
leave
jmp
adc
cmpsl
pop
mov
or
add
movb
adc
xor
fcomps
sahf
cmp
iret
arpl
movsl
sub
cmp
fistpll
or
xlat
pop
sar
cmp
fdivrs
ret
rcll
loope
movsb
idivl
add
cmp
mov
lahf
outsb
jne
push
out
sub
push
or
subl
jns
les
mov
sar
icebp
or
gs
sti
test
jl
sub
pop
call
xorl
sub
popf
adc
gs
sub
push
push
arpl
aad
out
add
inc
pop
out
push
xor
jo
pop
mov
xor
add
adc
sub
mov
loope
bound
cltd
es
cmpsl
mov
rcl
mov
xchg
fildl
cmp
push
dec
inc
cmp
out
xchg
dec
xchg
in
sub
jns
jmp
adc
outsb
cmp
lahf
shl
jmp
push
or
jmp
push
aas
repnz
jns
jg
dec
xchg
jmp
xor
jno
fistpl
lea
pop
out
pop
mov
scas
sbb
cli
pusha
push
clc
rcl
mov
int
inc
xchg
aam
adc
jp
cmp
jo
in
fsubrs
jne
cmp
pop
shlb
je
dec
lds
ja
xchg
or
fld
and
push
test
mov
clts
stc
adc
mov
fincstp
pushf
mov
fldcw
je
adc
mov
mov
ficoml
das
fwait
jb
pop
mov
sub
pop
out
cld
mov
or
or
mov
lds
sbb
pop
dec
imul
repz
cmp
fldenv
jp
stos
mov
dec
test
xor
incb
cli
push
sub
or
mov
nop
cld
xchg
xchg
add
lods
sub
in
fisttpl
or
imul
leave
fimull
pop
xchg
cmpsl
stos
pop
push
xor
in
rol
push
js
or
out
sbb
gs
and
push
push
and
cmp
sbb
sbbl
xorb
inc
and
jae
outsb
adc
daa
and
stos
xchg
imul
or
add
out
xor
push
push
xchg
je
xchg
and
push
je
add
sub
lret
pop
outsl
lods
mov
add
jns
dec
fisubl
mov
lahf
add
mov
push
inc
addr16
pop
jne
or
imul
mov
mov
in
std
jns
cmpsl
and
enter
leave
jo
push
stc
jo
mov
push
rcll
xor
ss
lods
xchg
loope
mov
jo
cwtl
jb
arpl
adc
mov
inc
inc
add
lahf
sbb
add
movsb
adc
data16
push
cltd
pop
sbb
mov
flds
mov
dec
jns
out
xchg
fldcw
pop
subb
adc
mov
jmp
xchg
stos
pop
push
and
mov
jg
push
les
movsb
cmp
scas
adc
or
subl
popa
nop
sub
mov
int
and
fs
xor
add
cmp
das
lahf
loop
sbbb
loop
and
sub
xchg
mulb
lea
jns
pop
sbb
dec
mov
xchg
fldt
mov
xadd
outsb
cmp
dec
gs
inc
ret
mov
add
jg
outsl
sbb
xchg
jmp
lahf
aad
movsb
lock
sbb
imul
sbb
inc
fucom
or
or
mov
incl
mov
inc
mov
das
inc
cmp
test
les
xchg
xor
inc
test
dec
leave
xor
xchg
stc
loopne
cld
divl
xlat
xor
mov
adc
pop
or
packuswb
or
sbb
inc
ret
fstpl
xlat
popf
xchg
push
push
icebp
movsl
dec
sbb
sti
out
fs
mov
push
rorl
sub
adc
mov
movsb
jecxz
seto
aam
push
mov
cmp
insb
xchg
arpl
out
mov
fbstp
imul
jg
divl
jle
nop
jb
add
sbb
dec
mov
cmp
mov
jp
dec
mov
jp
jmp
cmp
add
xchg
push
mov
jmp
cs
xor
jp
pop
hlt
mov
mov
sub
test
mov
dec
shl
xchg
xor
inc
lcall
and
gs
movsl
ret
hlt
test
adc
mov
dec
inc
sub
fcomi
or
rcrl
and
mov
pushf
cltd
imul
mov
pushf
jno
icebp
push
sub
lcall
add
xlat
inc
xchg
mov
outsb
pop
jl
outsb
cld
sbb
lret
dec
frstor
cmpsb
and
inc
cmp
jbe
nop
mov
outsb
lds
cmp
inc
mov
sbb
fwait
xor
roll
dec
fistpl
or
pop
or
add
jg
iret
outsb
xlat
test
je
push
mov
pop
cmc
mov
stos
and
push
jl
cmp
mov
fbld
js
dec
int3
ret
xor
jg
mov
mov
mov
mov
movsl
insb
push
pop
sub
cmpsb
fidivrs
pop
fs
sub
ret
dec
jmp
nop
loope
xor
lods
test
aam
test
test
pop
mov
int
sarl
cmp
pop
lret
bound
rorb
mov
sub
push
lahf
inc
cmp
jp
xor
mov
fs
sbb
test
and
or
lods
mov
adc
mov
in
inc
inc
cmp
andb
pop
sbb
sbb
rolb
add
dec
cld
jnp
sbb
shld
mov
stos
pusha
jnp
movl
ja
sub
aaa
jmp
xchg
pop
into
int
or
lods
mov
jno
jne
movsl
push
dec
sub
outsb
in
mov
mov
in
test
lods
push
cmp
in
jae
test
hlt
sarl
out
dec
int
mov
push
scas
sub
lock
pusha
xchg
aas
dec
and
fwait
mov
inc
add
outsl
jmp
jg
and
xchg
ljmp
and
into
into
test
aam
sar
out
cli
test
mov
pusha
or
cmpl
push
jbe
pop
iret
or
pop
shrb
insb
inc
mov
fcomi
mov
and
fwait
pop
in
fldcw
les
sub
data16
push
sub
data16
movsl
test
add
inc
fnsetpm(287
jp
dec
mov
inc
mov
push
jp
lods
push
je
outsl
inc
hlt
push
or
inc
pop
cs
fcompl
jbe
cltd
mov
test
mov
pop
out
jl
xchg
inc
pop
sub
and
test
repnz
and
or
sub
jbe
ret
adc
test
xchg
mov
bound
outsb
repz
test
mov
mov
rcrb
dec
sbb
mov
sub
mov
mov
jno
mov
push
jg
lds
cltd
and
sbb
push
mov
cmc
int
leave
es
cli
ret
push
mov
add
xor
sbb
mov
fwait
in
aad
push
mov
mov
mov
in
xchg
mov
lods
inc
dec
fimull
sbb
mov
sbbb
mov
sbb
je
xchg
addr16
push
fldt
scas
push
cltd
pop
mov
cwtl
mov
mov
shlb
out
and
lock
roll
lds
jnp
pop
icebp
ret
inc
rorl
out
hlt
test
mov
scas
rol
fstl
dec
addr16
or
xchg
shrb
imul
pop
hlt
je
push
das
rcrl
push
xchg
cmp
imul
cwtl
inc
mov
xor
decl
add
sbb
xchg
inc
pop
cmp
int
lods
jae
stos
popf
insl
xlat
roll
mov
xchg
xor
mov
xor
mov
insb
push
insb
shl
xchg
sbb
push
ja
adc
and
mov
sti
aas
cmp
mov
and
sbb
in
cmpsl
or
adcb
jb
pusha
and
and
xchg
push
xor
stc
sub
das
filds
xor
mov
cltd
push
loopne
mov
nop
mov
xchg
bound
sub
addl
popa
sahf
and
dec
jl
mov
xchg
mul
in
add
out
lds
in
pop
mov
hlt
addb
mov
jg
fcoms
xor
repz
fildll
int
lret
push
dec
dec
mov
xor
or
rclb
fildl
cmp
daa
out
jno
lods
xor
cmpsb
daa
shr
shll
lret
call
inc
bts
or
and
xchg
sahf
mov
xor
pop
pop
enter
cs
stos
add
xchg
fdivr
xor
loope
pusha
arpl
ss
lds
imul
adc
and
jb
mov
pushf
adcl
addr16
pop
in
aad
icebp
cmp
dec
shlb
aas
jb
out
sbb
cmp
aas
mov
incl
xchg
out
xchg
inc
xchg
sub
js
test
xor
xchg
push
xchg
js
jnp
or
push
loope
popa
or
xchg
inc
mov
enter
out
ds
jb
mov
fs
pop
jo
int
ss
clc
arpl
push
stc
push
cmp
push
pushf
shrl
adc
roll
ror
sbb
xor
daa
add
test
movsb
sub
pusha
jbe
inc
loop
dec
insb
push
cmp
xlat
into
cwtl
sub
sub
sti
lret
jge
xchg
adc
mov
sub
fdivrs
inc
out
mov
sub
loopne
es
mov
adc
das
mov
out
mov
fcoml
loop
lock
dec
push
in
mov
jo
imul
xlat
xchg
sub
mov
les
pusha
gs
outsb
testb
or
xchg
std
pop
jne
or
in
pop
scas
mov
add
inc
pusha
test
pop
cmp
sub
push
jne
cmp
adc
adcb
repz
roll
lods
scas
inc
add
shl
and
inc
cmp
ret
movsl
mov
mov
incb
pop
or
mov
sub
stos
xchg
xor
jecxz
jbe
cmp
fwait
test
jno
xchg
cmc
sbb
xor
sub
mov
pop
int3
jmp
jno
out
mov
shrb
andl
mov
mov
mov
lods
mov
jle
add
push
cmp
idivl
scas
mov
shlb
leave
fcmove
outsb
ljmp
jmp
ss
dec
xchg
sbb
or
mov
sbb
out
clc
jmp
imul
cmpsb
fs
sbb
adc
movsb
or
push
sbb
mov
sub
mov
xchg
ds
lods
cltd
lret
jl
stc
stc
negl
add
bound
pop
mov
push
cli
imul
pop
popf
inc
and
daa
fisubrs
in
movsb
inc
mull
ljmp
inc
lods
push
out
xor
fwait
sub
mov
push
fsubs
mov
lcall
test
out
adc
mov
pop
dec
inc
push
leave
push
test
add
rorl
leave
stc
rcrb
xor
push
mov
push
push
dec
xlat
and
mov
sub
push
sub
cmp
inc
dec
mov
fs
inc
cwtl
dec
xchg
push
fldcw
out
jmp
inc
gs
and
je
int
je
jbe
sbb
adc
inc
mov
es
int3
rorb
dec
incl
out
dec
mov
imul
dec
lods
dec
adcl
dec
sti
mov
inc
js
inc
imul
fs
outsb
sbb
cmpb
sbb
cld
in
mov
out
iret
frstor
pop
sub
lea
add
mov
xchg
lock
jno
xlat
ret
orb
inc
jp
jl
fistps
rorl
sbb
push
cmp
ljmp
mov
mov
xor
inc
mov
and
pusha
movsl
scas
loope
mov
push
xor
outsb
shlb
ds
rolb
mov
inc
ja
mov
popa
cmpsl
add
shrl
das
test
nop
jbe
jecxz
xchg
lcall
ret
or
icebp
rcrb
adc
nop
les
movsb
cwtl
sbb
cltd
dec
jne
push
out
sbb
fldl
mov
fst
pushf
and
sahf
in
rorl
scas
test
mov
cmp
or
int3
daa
and
imul
jecxz
inc
or
insl
sbbb
sub
and
xchg
insb
lahf
cmp
popf
js
mov
fistl
or
xchg
mov
ret
add
outsb
inc
and
dec
mov
jmp
adc
mov
jb
jecxz
or
jno
jbe
int3
ja
rcll
mov
imul
pop
cmc
imul
push
xor
pushf
cmp
inc
sbb
js
sti
mov
jecxz
jne
iret
int3
cmpsl
xchg
cli
je
xchg
pop
mov
stc
adc
pop
mov
inc
inc
popf
das
lahf
insb
inc
xchg
sub
sbb
out
push
mov
cmp
and
loope
push
je
std
mov
loope
lcall
addr16
out
pop
add
inc
push
aas
ds
mov
or
adc
mov
mov
push
rcrl
and
daa
sbb
push
fsubrl
sub
jno
push
pop
frstor
fistpl
jne
sub
lahf
je
push
out
xor
out
and
xchg
cmp
addr16
mov
sahf
cli
inc
fs
daa
pop
daa
xchg
jl
ja
fistpl
or
pop
fadds
dec
fidivrl
mov
pop
fildl
dec
or
push
pusha
mov
xchg
mov
mov
loope
lcall
addr16
gs
inc
sti
xchg
aas
ds
mov
add
xor
dec
in
adc
divb
shll
ds
mov
sub
pop
xchg
in
scas
add
inc
jecxz
jbe
cmp
int
lds
push
push
mov
cmp
ret
sti
test
stc
inc
scas
in
mov
loopne
outsl
mov
inc
adcb
lea
pop
xchg
mov
push
adc
aam
scas
daa
jae
sbb
movsb
adc
rorl
mov
fstl
out
jbe
pop
fadd
lods
pop
and
leave
push
loop
pushf
xchg
nop
add
dec
mov
pop
sbb
push
aam
xor
jnp
cwtl
sbb
aam
jnp
out
mov
je
test
mov
jae
out
sbb
fwait
jae
mov
ds
movsl
stos
icebp
pop
clc
popf
rolb
push
and
push
fsubrp
pop
push
pop
jl
in
xchg
das
or
xchg
stos
in
cwtl
fiaddl
sub
dec
call
loop
repnz
xchg
fcmovu
dec
imul
loop
mov
sub
sbb
xchg
dec
sbb
fldcw
and
aaa
cmpsl
sub
pop
mov
imulb
xchg
cmp
repnz
mov
aas
lea
xor
pop
repnz
ficoml
xlat
mov
mov
fs
andb
or
rclb
xchg
xchg
xor
cld
lret
jne
push
shlb
out
mov
jbe
stos
add
cmovbe
outsl
or
mov
bound
shrb
lock
inc
scas
aaa
lahf
cmp
scas
jl
lods
stos
mov
xor
or
push
and
adc
and
xchg
push
aad
sarl
sbb
test
jecxz
add
mov
and
mov
stos
leave
insb
add
fsubr
imul
ret
add
jno
sub
insb
pop
xchg
das
mov
jns
mov
fdivrl
mov
int
jge
lea
push
insl
mov
test
stc
pop
fdivl
or
imul
add
sbb
icebp
enter
mov
popl
in
pop
jl
inc
xor
mov
push
bound
sub
adcl
xor
fstpl
in
ss
fisubs
imul
lock
fs
lea
scas
pop
cwtl
sbb
test
dec
mov
push
adcl
jb
pop
add
sar
and
leave
pushf
or
shlb
iret
fwait
jbe
in
data16
sahf
mov
outsl
movsb
dec
aad
dec
sbb
out
rol
pop
int3
ljmp
sub
outsl
gs
inc
mov
lcall
jmp
aas
jle
jae
xchg
fisubrs
aaa
push
out
jge
xor
jg
and
xchg
lods
mov
addb
filds
mov
out
fwait
push
xor
push
or
mov
mov
test
repz
ss
popf
adc
pop
popl
mov
popf
rorb
xchg
hlt
addr16
pop
bound
mov
pop
jb
or
sbbb
mov
es
out
cwtl
lods
dec
sub
lods
mov
lret
mov
pop
test
fcomps
sub
lea
fwait
inc
popf
test
jl
test
fucomi
jns,pn
mov
push
movsl
fs
pop
dec
data16
sbb
lcall
xchg
mov
ret
jne
jp
xchg
adc
sbb
or
fstpt
sub
imul
dec
push
add
loopne
adc
mov
pop
call
jp
xor
dec
scas
in
decb
and
mov
pop
scas
loopne
xor
div
cli
jae
add
scas
addl
mov
daa
add
mov
ret
call
inc
inc
fwait
je
out
xchg
stos
mov
scas
test
pop
es
sbb
adc
push
int3
push
pmulhw
jno
cli
and
mov
add
out
std
inc
dec
push
or
in
sbb
adc
cmp
mov
xor
ret
pop
xor
out
bound
pop
scas
lret
sbbb
data16
andb
aaa
out
xchg
xor
and
jb
sub
sbb
push
jmp
fwait
sub
xlat
and
xor
bswap
repnz
outsb
arpl
aam
arpl
in
xchg
loopne
in
mov
add
jo
jns
jo
loopne
jnp
ret
inc
jg
push
fcmove
ds
cld
lahf
push
roll
or
addb
sbb
dec
lcall
cmc
imul
xchg
add
lahf
sub
dec
repz
mov
adc
sub
popa
shrl
fmul
jp
sub
cld
xchg
mov
cmp
scas
add
addb
les
add
xor
and
int
scas
inc
gs
ror
cld
pop
aaa
mov
pop
icebp
rclb
push
jbe
daa
jmp
add
rolb
xchg
or
mov
sbb
addl
or
dec
mov
xlat
cmp
pop
lcall
and
je
dec
loop
inc
das
pop
cmpsb
int3
and
push
fcompl
int3
rorl
push
adc
ljmp
sahf
rcll
sub
dec
test
jecxz
nop
pop
enter
mov
aam
cmp
dec
sbb
cmpsl
jnp
mov
call
pop
jecxz
and
fldcw
jge
mov
icebp
and
and
popa
into
test
repnz
add
dec
pop
lcall
dec
faddl
lea
sbb
into
stos
bsf
repz
daa
fidivl
fsubrl
repnz
push
int3
mov
push
xchg
mov
and
std
pushf
ret
jle
xchg
mov
or
shl
jbe
add
lods
ljmp
jp
cli
inc
inc
jge
mov
pop
jg
lcall
unpckhps
pop
in
clc
aam
adc
ja
inc
ds
mov
loope
sbb
je
int
popf
es
arpl
addr16
ficoml
jge
lea
jae
mov
dec
xlat
les
inc
hlt
ret
es
jl
xor
dec
cmpsl
das
out
test
push
xor
push
cmp
sub
es
clc
dec
dec
insl
leave
jmp
or
out
adc
sub
xchg
jl
test
or
inc
lods
aaa
test
xor
inc
sub
out
dec
mov
sahf
pushf
add
and
jg
dec
sti
cmc
cmpsl
repz
pop
sub
mov
sub
inc
rcrb
add
mov
push
mov
cmp
aam
movsb
inc
popf
popf
enter
es
mov
sahf
sbb
jl
insb
icebp
pop
mov
scas
push
jno
mov
dec
std
pop
jle
dec
loop
ljmp
jb
daa
adc
std
push
sub
out
dec
lcall
inc
out
andl
ljmp
lea
leave
es
dec
cmp
dec
push
cli
sbb
sub
and
and
push
test
mov
pop
mov
and
push
fiadds
das
dec
sub
mov
test
arpl
test
aaa
sub
adc
mov
leave
ret
mov
adc
in
dec
xchg
pop
repz
cmp
inc
mov
push
and
pop
pop
icebp
jle
stc
stos
fimuls
inc
fwait
js
fsubrl
stos
setbe
ret
dec
mov
in
out
xchg
pop
mov
and
scas
movsb
push
aad
and
mov
dec
add
jno
pop
cmp
lock
push
scas
paddusw
pop
aaa
xor
fincstp
mov
decl
push
jae
xlat
and
push
rcll
push
lcall
push
repnz
enter
arpl
sarb
sub
loop
lds
iret
cmp
xchg
cmp
lds
dec
push
jl
add
ret
jnp
mov
mov
inc
pop
rolb
aaa
loopne
push
lods
cmpsl
rcll
mov
gs
insb
adc
out
jp
xchg
insb
push
pop
in
pop
inc
pop
shlb
scas
or
jo
mov
scas
xchg
inc
leave
sahf
movsb
fmull
leave
xchg
sub
sbb
pop
sbb
testb
cmc
icebp
add
shrb
ret
push
push
stc
insl
push
add
pop
test
sub
ja
out
xchg
jl
sub
subl
and
movsb
mov
fildll
fdivp
cmc
test
pop
push
repz
adc
mov
or
scas
mov
aas
out
sbb
stc
mov
mov
dec
mov
fwait
xlat
or
push
xlat
das
loop
sbb
xchg
pop
dec
into
clc
lret
jp
stc
adc
sbb
cmp
enter
movsb
adc
xlat
sar
push
sbb
cmpsl
push
loope
negl
mov
jb
outsb
in
in
mov
xchg
lahf
push
clc
test
cmpsl
mov
add
mov
and
or
cltd
fdivp
aaa
sbb
inc
repz
mov
mov
lods
jecxz
lret
outsl
push
mov
jbe
push
mov
mov
xlat
mov
cmp
xchg
inc
mov
es
arpl
inc
push
pop
pop
mov
in
aaa
mov
addr16
xchg
jo
loope
or
sbb
lahf
dec
xor
loope
call
mov
ret
fdivl
push
shll
push
fadds
negb
cwtl
inc
xchg
iret
xchg
shrl
push
lcall
ret
mov
mov
jmp
jne
dec
sbb
add
rcl
push
jo
xor
shrb
fldl
js
mov
lret
gs
xchg
cmpsb
lcall
cmp
xor
arpl
adc
xor
je
push
push
lcall
inc
lods
mov
xlat
push
std
inc
lea
xor
mov
sub
inc
jno
leave
iret
or
or
sub
repnz
inc
mov
pop
loope
test
pop
scas
ja
int
test
jae
add
sub
in
mov
clc
addr16
sbb
inc
imul
mov
dec
cmp
cmp
int
xchg
jl
lret
pop
lahf
in
sbb
out
fwait
lea
xchg
push
les
xor
jo
mov
es
into
cmp
sti
xchg
loopne
fidivs
mov
mov
pusha
lods
or
dec
leave
and
cwtl
scas
mov
std
xchg
pop
mov
jl
icebp
movsb
jge
cmp
push
push
movsl
sbb
add
idiv
inc
inc
les
cli
jmp
xchg
cld
pop
iret
popf
mov
or
and
popf
jp
xchg
pop
cmc
ret
outsb
shlb
movsl
pop
js
or
pushf
scas
inc
cltd
or
ja
lods
jl
jg
in
push
shl
testb
jle
push
inc
sub
xchg
and
mov
fists
rclb
rclb
xor
inc
ficoms
arpl
pop
pop
sub
jae
cmc
icebp
xchg
test
movsl
imul
ja
mov
mov
pop
pop
xor
cli
ljmp
lret
jb
inc
and
adc
js
cmc
lret
jae
and
bound
inc
in
inc
fstl
mov
in
pop
int
jno
xchg
insl
xor
in
sub
adc
adc
jno
clc
sub
shll
adc
mov
inc
andl
xlat
cltd
mov
enter
outsl
mov
fisubrl
cmp
push
sbb
pop
mov
ret
sar
xor
dec
adc
in
subl
hlt
cld
dec
adc
push
lcall
out
imul
push
sub
shll
aas
adc
mov
xchg
mov
mov
daa
pop
push
lods
imul
cmpsl
xchg
mov
mov
adc
sbb
inc
or
rclb
mov
into
jmp
shlb
je
ljmp
sub
inc
fwait
cmp
sub
mov
sti
jae
lods
cmp
into
adc
sub
in
fwait
out
mov
jmp
and
mull
sub
xor
xchg
cmp
ds
pop
or
cmc
push
pop
cltd
push
adc
dec
rolb
test
andl
cmp
arpl
mov
in
pop
int
jno
mov
jae
movsl
dec
pushl
stos
add
mov
decb
aas
aam
imul
jl
pop
or
pop
clc
inc
sub
dec
pop
outsb
cli
xor
xor
jns
adc
lret
loope
dec
subl
inc
and
cmp
inc
int3
jnp
andl
imul
fnsave
cmp
outsl
fistpll
jne
and
fsub
jl
or
push
push
pop
push
xor
addr16
fidivrs
rolb
fisttpl
ljmp
push
inc
mov
pushf
shrl
lret
loop
or
or
push
dec
push
inc
cmpsl
repnz
xlat
lea
stos
incb
imul
push
ljmp
pop
cs
out
orb
sahf
iret
jecxz
jle
mov
or
stos
cld
lods
inc
insl
popf
lds
ret
aad
sbb
jno
pusha
pop
add
jns
xor
into
jge
xchg
fiadds
jae
jecxz
pusha
mov
adc
in
loopne
xchg
js
cmp
iret
rcll
data16
aaa
cmp
jl
repnz
rol
sub
sti
jge
hlt
scas
outsb
push
and
outsb
mov
dec
or
sahf
sbb
adc
lds
xor
adc
out
jmp
in
pushf
rcrl
pop
jb
aas
push
cmpsl
cwtl
adc
aaa
insl
fistpl
or
pop
mov
std
popa
adc
fcomip
ljmp
aad
les
shll
adc
xor
inc
xor
push
cld
nop
fdivs
sbb
mov
test
lcall
or
lret
aam
nop
cmpxchg
aas
fsts
dec
pusha
mov
and
jo
cltd
out
orb
mov
insl
inc
jmp
cmp
mov
lds
test
loope
shrl
jg
scas
add
and
dec
sbb
dec
cmp
popl
out
lea
sub
xchg
dec
xchg
push
neg
fneni(8087
push
push
mov
outsl
push
lds
inc
pop
mov
stos
inc
std
mov
jle
aas
inc
pop
hlt
xchg
and
lea
cmpl
xor
mov
mov
push
cld
nop
fdivs
cmp
iret
mov
int3
ss
cmc
sub
cmp
or
lds
aas
fsts
fisubl
sbb
and
jo
cltd
out
orb
sahf
iret
jecxz
jle
mov
ficompl
lds
lds
ret
aad
sbb
fwait
xchg
aaa
dec
mov
insb
jns
xor
pop
lds
fbld
lea
jecxz
pusha
mov
adc
in
inc
mov
xchg
sahf
pop
push
call
push
jae
fisubs
lods
aaa
cmp
pop
clc
loopne
dec
aaa
out
xchg
in
shrl
sub
sbb
mov
mov
lret
scas
xor
cmp
pop
jecxz
scas
je
sub
sub
sbb
sarl
iret
mov
int
popa
mov
add
shll
adc
mov
xchg
add
mov
mov
ret
cmpsb
test
push
sbb
js
adc
or
push
sti
in
mov
cld
aas
dec
xor
lahf
sbb
lret
or
xlat
lds
xchg
je
fwait
inc
fwait
cmp
orb
movsb
mov
cs
dec
and
out
cmp
test
in
dec
ja
inc
ret
jb
xor
movsl
push
xchg
pop
pusha
addr16
rorb
je
fistpll
inc
xlat
aas
adc
jbe
dec
out
scas
outsb
pop
pusha
xor
and
test
iret
adc
and
pop
stos
xchg
call
xor
adc
out
jmp
mov
and
jg
xor
mov
dec
lock
daa
stc
in
movsl
gs
xchg
cli
push
ret
cmp
jae
push
clc
stos
and
adc
jo
leave
xchg
ss
push
fidivrs
sub
fwait
cld
inc
sbb
stc
dec
xchg
hlt
jle
int3
lret
ret
xor
or
outsl
not
cmp
mov
dec
movsb
sub
roll
imul
shll
sti
adc
pop
aaa
xchg
or
pop
dec
push
leave
fidivl
flds
jnp
and
pop
jle
aad
rcrb
mov
daa
mov
inc
iret
mov
sbb
int
sub
sbb
xchg
dec
shll
js
shll
dec
add
lods
pop
js
fld
dec
jl
movsl
xchg
dec
cmpl
push
shl
or
adc
mov
mov
sub
inc
or
push
mov
add
mov
loopne
clc
cmp
cmp
or
sub
jg
es
aam
jne
ljmp
push
shrb
dec
out
pop
adcb
cwtl
pop
cwtl
in
in
xor
mov
mov
jmp
jge
in
in
int3
mov
mov
pushf
loop
add
xor
xchg
inc
pusha
pop
sbb
xor
shll
clc
push
fcoms
push
insl
cmc
sarl
aaa
xor
xorl
mov
scas
sbb
ljmp
or
in
mov
test
mulb
js
lcall
sbb
xchg
js
arpl
sbb
ljmp
mov
sbb
jne
pop
lret
jp
mov
dec
pop
adc
sbb
int
bound
adc
sbb
pop
les
cmpl
pushf
fidivrs
out
icebp
jmp
lods
mov
lock
cmpl
aaa
and
xchg
clc
inc
iret
jp
mov
dec
push
sbb
push
outsl
xchg
mov
gs
imul
mov
xchg
fimull
outsl
xchg
icebp
sbb
or
pop
iret
negl
add
add
inc
jl
xor
mov
clc
dec
inc
xor
out
sti
add
sar
jecxz
ja
imul
fyl2x
mov
das
imul
dec
cld
jae
or
cmp
or
jb
mov
and
jbe
xor
xchg
loop
loope
lods
imul
repnz
adc
les
push
adc
cmp
xor
loop
xchg
sahf
imul
popl
sub
mov
and
cli
les
lea
insb
test
mov
dec
shl
sub
xor
xchg
pop
pusha
inc
or
add
dec
pop
in
pop
mov
xor
push
add
sbb
stos
out
idivl
or
jns
mov
stos
ret
ret
or
pop
movsb
nop
mov
iret
xor
push
enter
les
mov
sub
xchg
sbb
rcrb
xor
xor
test
insl
cmpsl
stos
add
call
or
sahf
xor
popa
ror
loope
and
and
mov
dec
add
pop
rorl
dec
push
leave
cmpsb
adc
xor
prefetcht0
pop
mov
sbb
mov
insb
cld
lea
xchg
sti
insb
dec
mov
mov
sbb
jecxz
mov
repnz
cmp
ret
ja
mov
sub
sbb
mov
outsb
mov
dec
pop
cli
and
leave
lcall
mov
fcompl
rolb
data16
scas
jno
push
jnp
mov
into
or
addb
add
push
push
insl
cmp
iret
pushf
mov
xor
mov
mov
jmp
ds
sbb
inc
imul
jno
mov
ret
dec
mov
xchg
xchg
pop
int
and
dec
out
mov
pushf
mov
mov
cmp
jns
pop
pop
mov
ljmp
adc
cmc
fmuls
and
lahf
xchg
jg
mov
pop
xor
cmpsl
push
jo
pop
out
push
dec
data16
fisubrl
fadds
rol
cmpps
sbb
fs
fnstcw
xchg
or
push
shlb
icebp
lock
xchg
je
jae
cmp
inc
icebp
lcall
xchg
into
test
sbb
mov
mov
cmpsl
add
and
add
or
pop
lock
jno
jno
imulb
arpl
fstpl
les
inc
mov
ja
push
jmp
mov
cld
nop
aad
test
cmp
out
jg
jo
mov
out
cwtl
dec
xor
sahf
into
in
add
jg
pushl
pop
das
popa
js
push
outsb
push
and
sub
stos
sub
mov
loope
and
push
out
faddl
fwait
int3
and
lock
lret
cmp
or
stc
test
cltd
lea
add
lret
mov
loop
imul
fisttps
ljmp
lret
xorl
movsb
popf
int3
flds
xchg
fsubp
xor
sbb
xchg
mov
jnp
shlb
inc
rolb
sbb
in
cmp
lods
je
lahf
pop
jg
pop
aaa
pop
test
and
xchg
mov
mov
sbb
packuswb
push
jp
ds
icebp
repz
jecxz
push
mov
fwait
cmc
test
out
arpl
fimuls
lods
js
add
mov
push
jecxz
and
xchg
call
add
xchg
fdivrs
add
pop
xchg
mov
fsubr
incl
into
in
out
hlt
xchg
sbb
outsb
and
sbb
clc
ds
iret
popf
popl
shll
mov
or
sbb
insb
jo
les
loopne
pop
dec
pop
adc
popf
xchg
mov
das
addr16
sbb
adc
mov
dec
jmp
cld
mov
out
add
rorb
mov
mov
xchg
or
scas
aaa
lcallw
das
add
gs
push
mov
sub
andl
xor
pop
jns
sub
pop
cli
jb
dec
xlat
lds
sbb
loope
lret
sbb
push
or
mov
push
xchg
mov
jne
mov
and
sub
rcr
inc
pop
int3
lods
mov
adc
in
fcomi
subl
mov
pop
int
call
inc
pop
jl
jno
fdivrs
inc
cli
jbe
jle
int
test
cmpsb
jle
bound
xchg
sbbl
or
add
xchg
hlt
das
stc
or
jmp
fsubl
fwait
mov
sub
adc
rcl
adc
stos
outsb
repz
movsl
pinsrw
mov
addb
push
sub
mov
dec
icebp
das
push
cli
pop
into
lods
pop
jmp
mov
cmp
test
push
mov
int
les
or
jb
stos
je
sbb
mov
pop
xchg
sub
add
call
ljmp
cld
or
js
inc
test
ret
shlb
mov
push
sub
inc
pop
inc
aas
inc
mov
pop
add
push
out
sbbl
jge
test
jno
in
aad
add
dec
test
shr
js
hlt
cs
loop
mov
loopne
rol
dec
xchg
cmp
pop
dec
aaa
stc
fwait
inc
shlb
scas
jp
mov
pop
loop
aas
push
cltd
shrl
in
mov
xchg
roll
push
sbb
sub
insb
sub
mov
add
adc
xchg
in
test
jae
sbb
pop
sbb
hlt
fwait
outsl
or
in
out
in
jns
fs
push
sub
dec
jnp
fimuls
mov
xor
shlb
adcb
mov
sbb
call
icebp
call
jmp
movsb
add
dec
mov
mov
and
dec
pop
cwtl
sbb
fmuls
in
jmp
mov
repz
scas
mov
addb
dec
les
pop
repz
push
lock
adc
lock
insb
xchg
test
into
xchg
add
inc
dec
mov
pop
add
jne
jbe
mov
add
aam
inc
sub
sbb
pop
pop
add
nop
pop
insl
out
cmp
outsb
mov
insl
pop
icebp
scas
mov
repz
jmp
sub
movsb
testl
insb
lea
fwait
orl
push
sbb
fsubl
cli
jle
cmpsl
xchg
ret
imul
cld
clc
pop
lds
out
jp
mov
scas
movsl
das
fldt
fs
inc
dec
sarb
int
jo
sarb
mov
xor
add
mov
pop
iret
sub
mov
jmp
jo
rcl
xchg
dec
fs
pop
in
sarb
bound
sbb
mov
cmpsb
aam
repz
pop
pop
adc
movsl
repnz
push
push
loopne
out
inc
jg
cwtl
ret
push
inc
dec
pop
sub
ss
jae
out
or
xlat
sbb
and
scas
xor
jnp
sbb
sub
dec
fimuls
insl
inc
sbb
and
cmp
mov
inc
add
fcomps
mov
and
lods
push
cmc
or
ss
inc
mov
scas
inc
stos
addr16
pop
xchg
or
add
cmp
mov
jne
pop
lahf
push
test
mov
iret
xor
mov
xor
pop
les
push
sub
pushf
cmp
stc
or
jp
cmp
shl
cs
sub
pusha
xchg
xchg
pop
ja
dec
movsl
lods
fwait
xchg
in
cwtl
mov
lods
imul
xchg
stos
mov
sbb
lods
mov
dec
push
nop
mov
and
cmp
jbe
sub
add
xor
neg
lahf
pusha
aaa
xchg
cld
shr
dec
add
mov
and
mov
cwtl
mov
mov
movsb
dec
das
push
mov
mov
inc
push
ret
add
cs
xor
ret
stos
cmp
push
nop
cmp
xchg
dec
mov
loop
mov
adc
xor
je
mov
add
add
int
cmp
mov
stos
or
out
mov
roll
or
test
scas
mov
fistps
xlat
cli
fldl
cmp
jl
and
cmc
sarl
lcall
ss
push
adc
pop
jge
inc
adc
dec
mov
out
pop
dec
jb
cmp
and
push
mov
lock
sbb
push
and
inc
push
ja
push
jecxz
pushf
jmp
and
popf
ds
push
inc
and
frstor
jge
icebp
xchg
data16
push
push
cmp
pusha
inc
out
fwait
mov
sbbl
adc
popf
add
ret
mov
sti
and
cmpsl
jmp
andl
loope
or
lods
lret
push
xor
daa
jle
rcrb
les
fdivr
rclb
cmp
lea
ficomps
jo
and
scas
in
cmc
mov
fstpl
mov
loope
dec
sahf
pop
mov
add
jo
int3
pusha
lea
stos
cmp
sahf
push
mov
aad
leave
in
add
mov
xor
and
adc
cmp
pop
testl
xor
ficoml
cmpsl
mov
push
sub
xchg
sub
cmpsl
adc
xchg
jbe
pushf
push
sbb
popl
enter
dec
xchg
adc
adc
mov
out
orl
pushf
mov
lahf
pop
std
xor
fidivrs
sahf
loopne
or
adc
lahf
out
leave
fdivrs
adc
cld
test
xchg
pop
sbb
mov
xor
add
cmc
sub
cmp
add
outsl
pushf
popf
adc
scas
and
clc
int
jne
inc
arpl
pop
leave
scas
ficompl
xchg
push
lock
pop
notb
test
add
sbb
shr
loop
int
mov
mov
sbb
mov
xchg
and
pop
in
out
and
mov
ret
push
int3
in
xor
mov
cmp
scas
iret
imul
popf
pop
jecxz
iret
pop
out
push
cmpb
es
ss
sbb
dec
xchg
inc
mov
cwtl
dec
arpl
iret
enter
das
int
jge
mov
inc
cld
js
lret
mov
lret
push
mov
add
and
mov
ret
and
or
lea
push
clc
lahf
fdivl
mov
xchg
dec
jb
movsl
fsubp
cmovb
xchg
ds
ret
cmc
mov
mov
inc
pop
js
jo
repz
xchg
movsb
test
adc
sar
ss
xor
mov
icebp
ret
mov
ljmp
pop
pop
mov
repnz
xor
sub
push
inc
jo
dec
and
pop
aam
inc
inc
stos
insl
jbe
sbb
push
xor
jno
inc
dec
ds
sub
lds
in
xchg
jbe
cmp
sbb
scas
aas
call
movsb
sub
mov
fcomps
push
cmpsb
push
aad
aam
aam
movsb
int
scas
test
lahf
imul
fidivl
sub
jnp
add
mulb
inc
mov
xchg
test
cmpb
out
jns
in
sbb
xchg
xchg
sarl
in
mov
loope
xorb
loope
lock
cmp
and
lods
dec
jno
add
arpl
sub
fcoms
dec
aam
cli
and
push
jge
xchg
mov
cmp
hlt
mov
fsub
sub
mov
sti
inc
xor
adc
jmp
iret
or
pop
jge
insb
or
aaa
test
jno
jae
mov
jmp
mov
in
mov
mov
out
fisttpl
aas
cmpsl
mov
fnsave
insl
inc
mov
ret
decb
out
test
push
sub
mov
and
loope
or
arpl
push
ljmp
mov
mov
loop
xor
pop
mov
mov
cmp
xchg
sub
push
add
into
mov
cltd
movsl
shl
pop
rcll
xor
mov
push
popf
outsl
ret
int
push
fimull
das
je
pop
lcall
cwtl
insb
rclb
js
pop
sub
mov
pop
mov
sub
cld
jg
fs
in
or
gs
imul
cs
test
lret
adc
mov
xchg
or
jbe
rol
stos
subb
lods
dec
rcl
sub
mov
fcmovu
or
or
cwtl
pop
fistpl
ret
push
popl
dec
pop
mov
pop
stc
mov
rorl
es
dec
and
cmpsl
idivl
scas
dec
addl
or
imul
test
bound
cmpsl
push
and
or
mov
cmp
lods
popa
lcall
aas
push
jae
cmp
js
inc
aam
inc
pop
movsl
int
push
cmp
loopne
aam
shll
int3
call
sub
out
fcomps
add
jb
inc
mov
stos
js
imul
pushf
xchg
or
mov
das
outsb
push
mov
push
pusha
das
idivl
ss
loop
jg
dec
push
pop
ds
jae
fildll
push
mov
in
mov
ja
push
lcall
mov
push
scas
fsubrl
cmp
jb
jo
push
push
imul
pop
pop
es
arpl
xchg
stos
xor
js
jb
out
xor
dec
or
cmovno
jns
in
loop
push
icebp
dec
loopne
jns
sub
mov
sub
adc
cwtl
jno
std
pop
daa
sbb
sti
fwait
clc
in
ret
or
dec
mov
adc
ficomps
clc
mov
jnp
insb
arpl
jae
cltd
xor
push
sbb
and
or
add
mov
inc
push
orb
fsts
xor
mov
cli
jb
inc
jbe
and
call
fstps
sti
loop
mov
adc
dec
push
fdiv
mov
icebp
jp
and
add
pop
icebp
outsl
pusha
add
aad
lods
fidivrs
inc
lahf
mov
add
mov
cmp
pop
fwait
insb
iret
xor
out
pop
out
test
ret
jge
pop
bound
add
xchg
test
jnp
xchg
mov
bnd
cmp
push
out
imul
push
andb
lods
lock
push
mov
into
clc
pop
xchg
fidivs
mov
mov
incl
adc
mov
adc
dec
loope
xchg
push
fcmovb
mov
jmp
pusha
xor
fisubrl
and
mov
mov
add
imul
mov
jb
xor
sbb
fs
inc
jb
jno
lret
or
repz
mov
pop
push
cld
xlat
movsb
or
test
pop
add
icebp
jnp
mov
mov
ret
xchg
fcoml
movsl
and
lahf
in
xchg
in
cmp
jmp
jnp
lahf
lcall
mov
stc
mov
shl
sbb
and
pop
sub
push
cmpsb
xor
incb
shll
aaa
xor
mov
cld
inc
outsl
mov
arpl
xsha256
cmpsb
push
xlat
push
rol
pop
imul
jg
push
repnz
repz
out
rol
ret
loope
dec
js
mov
sub
std
ret
dec
add
andb
out
dec
ret
cmpsl
add
mov
mov
push
push
mov
dec
subl
pop
mov
leave
lret
je
sbb
not
into
mulb
sti
aam
out
cmp
fstpt
sbb
mov
inc
scas
jle
push
xchg
sub
dec
cmp
insl
cs
adc
addr16
test
mov
outsb
sbb
dec
pop
jns
mov
sbb
xchg
cli
xor
aad
xor
movsb
push
sbb
stc
inc
dec
mull
cmp
ljmp
cwtl
mov
cwtl
mov
pop
pop
dec
inc
adc
test
movsb
sbb
aas
dec
adc
test
enter
push
loopne
mov
or
mov
mov
ret
xor
neg
ljmp
mov
jmp
jp
mov
les
nop
push
loop
leave
loop
fwait
sbb
inc
out
hlt
cltd
push
push
add
les
pusha
or
mov
and
dec
fcomp
push
lods
push
lods
pop
sub
xchg
sbb
adc
xchg
cmp
dec
ds
leave
pushf
dec
stos
jecxz
add
ds
push
cmpsb
into
fdivs
mov
push
mov
in
jno
cmc
testb
stc
pop
sbb
and
repz
lock
std
out
daa
jbe
mov
test
loop
jo
cmp
jno
das
inc
ret
pop
test
data16
testb
mov
or
enter
test
loop
bnd
mov
fcmovu
mov
xor
test
in
dec
cmp
out
xchg
inc
cld
sub
xlat
jnp
gs
xor
je
ror
pop
add
fnstenv
aaa
test
push
out
xchg
punpcklwd
decb
cmovno
jns
in
loop
push
icebp
dec
loopne
jns
sub
mov
sub
xchg
orl
bound
je
icebp
jae
xor
ds
scas
add
scas
sbb
in
out
push
xchg
or
push
push
xchg
jne
jecxz
nop
daa
nop
in
sbbl
sahf
fmul
scas
loope
pop
adc
cmp
outsb
lret
mov
inc
mov
jo
push
fwait
or
popf
rcll
pop
repz
das
scas
add
leave
cli
add
cli
mov
or
lret
adc
in
xchg
mov
iret
jno
ror
into
sbbb
dec
jbe
sub
mov
daa
stos
sarl
loop
dec
dec
inc
adc
test
divb
jb
les
cmp
xchg
pusha
pop
xchg
repnz
mov
in
mov
sub
sbb
in
jnp
out
mov
or
addb
and
loopne
ret
sub
mov
and
stos
pop
xchg
or
push
sub
dec
out
aam
adc
inc
adc
arpl
mov
cltd
lcall
int
loope
cmp
je
push
test
push
cmpsb
je
jae
rolb
dec
pop
xchg
sub
cmc
mov
neg
sub
add
and
jmp
dec
mov
ja
das
and
sahf
jne
pop
xchg
pop
leave
out
mov
mov
mov
push
aam
or
sbb
cmpsb
sti
js
fadds
into
pop
and
cwtl
ret
push
data16
add
mov
mov
push
arpl
into
dec
repnz
mov
adc
lea
scas
xor
in
cmpsb
lahf
cmp
dec
loopne
subl
es
inc
dec
sub
shrl
push
icebp
sar
jb
cwtl
out
jg
jne
iret
insl
shlb
mov
pop
push
mov
mov
jne
add
sar
je
inc
mov
loopne
sbb
jno
insb
int3
jne
movsl
daa
cwtl
loope
arpl
push
jmp
jns
outsb
test
mov
or
cs
repz
push
push
ret
dec
push
subl
push
lock
push
push
das
out
into
sbbb
xchg
dec
mov
sti
cs
jns
xor
dec
mov
fnsave
sahf
sbb
xchg
jb
pop
in
lods
std
push
and
jmp
mov
pop
scas
pop
popa
lods
mov
stos
mov
sub
daa
mov
or
repnz
sbb
pop
cs
lods
out
inc
mov
add
incl
repnz
mov
dec
inc
sbb
cmp
xor
test
sbb
mov
repnz
outsb
and
lcall
pop
dec
bound
popf
scas
lea
mov
rorb
sub
mov
sbb
xchg
add
mov
lds
pop
jecxz
mov
xor
inc
ss
test
stos
xchg
mov
out
xor
loope
in
cld
mov
pusha
test
and
mov
test
xchg
push
or
mov
iret
sbb
out
add
mov
push
xchg
leave
ds
icebp
push
sbb
in
test
data16
add
cmp
shl
adc
das
idivl
ss
loop
dec
stos
out
cmp
push
js
decl
add
movsl
es
arpl
adc
pop
into
or
and
mov
gs
sbb
adc
mov
dec
int3
paddq
pop
xor
cwtl
mov
jne
mov
cld
iret
mov
dec
imul
inc
test
incl
inc
sbb
jbe
inc
enter
sbb
or
sbb
and
xchg
jns
into
push
adc
scas
sbb
enter
jmp
inc
stos
in
mov
xchg
add
inc
cli
insb
popa
mov
add
out
mov
push
pop
mov
jbe
mov
ret
xorb
pushf
inc
pop
jle
daa
mov
push
rcll
movsb
mov
je
orb
mov
nop
insl
repnz
add
inc
pop
scas
xchg
inc
add
sbb
mov
mov
ret
pop
add
pusha
pop
fbld
jo
pop
sbb
mov
insl
lret
stos
mov
xor
pushf
pop
outsb
lods
aam
dec
inc
mov
sbb
les
dec
adc
daa
sbb
push
jmp
xor
xchg
xchg
pusha
add
roll
pop
movsl
inc
and
sub
arpl
push
push
push
outsb
cmp
gs
lcall
cwtl
cmp
je
cltd
xor
mov
jno
clc
jb
dec
dec
loopne
int3
add
mov
mov
fcmovne
cmc
mov
lods
ss
mov
pushf
mov
inc
push
cltd
loope
mov
loopne
adc
push
jge
fstpl
xchg
mov
movsl
pushf
adc
das
sub
and
fldl
arpl
les
das
jns
clc
bound
mov
bound
add
push
push
adc
insl
fldt
call
cmp
mov
notb
inc
adc
pop
push
jb
adc
sub
lahf
mov
lds
popa
inc
sub
dec
lock
mov
in
push
mov
addr16
mov
out
sbb
push
stos
dec
shl
xor
cmp
in
lods
cmc
mov
sbb
mov
push
mov
loopne
imul
lds
mov
notl
pop
mov
push
stos
xchg
push
adc
imul
jnp
mov
fimuls
sbb
popf
and
cmp
mov
and
adc
xor
cmp
mov
and
in
hlt
fstpt
lret
loope
and
and
cmp
cmp
fistpll
nop
pop
mov
imul
out
xor
xchg
jnp
fs
xor
jp
int3
aam
mov
pop
jne
test
lods
shll
cld
enter
faddl
pop
and
sub
movsl
mov
cmp
pusha
pusha
xor
pop
dec
cmp
mov
icebp
test
sub
adc
sbb
dec
aam
mov
sub
sbb
mov
mov
repnz
and
call
addl
and
out
sub
sub
dec
btrl
push
es
arpl
mov
dec
push
rorl
scas
fs
jmp
iret
jle
das
insl
jnp
pushf
add
jns
sub
in
push
or
jg
rcll
push
dec
xchg
cmpsl
lock
sbb
mov
cmp
and
xor
inc
pop
jb
jae
lahf
jno
add
lds
fwait
test
ljmp
mov
leave
mov
repnz
fs
jl
inc
aam
repz
pop
pop
cmc
inc
popf
scas
sbb
sub
test
sub
xchg
push
jge
jb
out
cmp
jnp
cmp
pop
rcrb
or
and
lock
sub
jno
pop
lods
push
mov
push
cmp
in
lds
jmp
mov
mov
jl
pop
mov
pop
and
push
movsb
movsb
xchg
out
mov
pop
mov
imul
pop
pop
lea
ffree
xchg
stos
lret
clc
xor
and
pop
mov
negl
and
xchg
scas
notb
idivb
sti
inc
shrb
pop
mov
sub
xchg
xchg
inc
nopl
jae
ret
sub
pop
add
and
jmp
xor
outsl
out
mov
in
mov
ret
pop
jle
scas
mov
idivb
push
pop
dec
sarl
jne
jmp
and
inc
pop
add
push
mov
addl
add
outsb
scas
add
lods
add
dec
bound
sub
adc
mov
stc
adc
sbb
fwait
cmp
mov
add
sub
pop
jp
ja
sbb
sti
pop
enter
jmp
cmovb
shlb
dec
mov
push
dec
mov
or
dec
je
movsl
add
push
or
jmp
andb
pop
into
leave
sbb
sbb
adc
and
dec
mov
mov
mov
adc
or
imul
push
test
push
shl
aaa
mov
pop
cs
inc
fildl
inc
loope
dec
sbb
sub
push
add
lcall
fiaddl
movsb
jge
push
out
lcall
bound
and
pop
push
mov
push
inc
mov
inc
cli
cmpsb
adc
add
cmp
xchg
loopne
popf
xor
jecxz
mov
push
push
add
or
es
mov
enter
insb
mov
ljmp
push
nop
xchg
push
addr16
repnz
jl
add
sahf
sbb
jne
mov
sub
mov
mov
mov
sub
pop
enter
jnp
leave
into
fdivrs
clc
adc
mul
or
add
mov
push
sbbl
mov
out
adcb
in
je
lock
jecxz
or
inc
xchg
dec
mov
sbb
in
xor
mov
sub
cmp
addr16
shll
mov
orb
imul
roll
push
sub
pop
push
push
nop
adc
rcrl
out
add
jmp
mov
pop
lret
and
loop
mov
rclb
lcall
dec
int3
mov
hlt
xchg
cltd
pop
jns
dec
sar
xchg
sub
inc
and
mov
adc
xchg
add
add
xor
fistl
inc
xor
jbe
xor
lahf
aaa
ret
lahf
icebp
mov
cld
cs
scas
xor
pushf
and
aad
loope
xchg
and
out
jo
dec
dec
rcll
push
jbe
cmp
jecxz
and
sub
or
jne
mov
push
pushf
in
sbb
jmp
sbb
mov
cmc
hlt
aam
add
jle
imul
mov
push
fs
mov
loope
pusha
cltd
inc
adc
mov
ja,pn
mov
cltd
or
call
and
xchg
xchg
into
data16
inc
int
fstps
cmpsb
xchg
or
mov
mov
push
sbb
xchg
mov
push
push
in
and
xchg
in
popa
popf
lret
xchg
sbb
and
add
sub
nop
movsb
sahf
sub
sbb
loopne
aam
ljmp
rcr
xchg
iret
sub
push
movsb
mov
jae
pop
faddl
inc
sub
xchg
js
cmp
adc
mov
xor
fisttpll
fcomps
aad
cmp
push
push
push
ja
push
enter
outsl
mov
pop
in
gs
xchg
pop
dec
ljmp
mov
stc
adc
je
xor
lahf
inc
shlb
jecxz
mov
adc
xchg
test
loope
inc
mov
xchg
in
out
nop
adc
vpmacssdd
or
pop
adc
add
punpckldq
and
push
xor
xor
adc
pop
aam
sbb
jnp
mov
outsb
jge
mov
adc
das
add
jge
cmpsb
and
or
loop
ret
repz
jp
inc
inc
jg
sbb
xchg
mov
lret
fs
push
mov
and
xor
int
pusha
xchg
push
insl
aas
adc
xchg
xchg
jmp
or
pop
and
loopne
or
dec
stos
scas
adc
inc
inc
xchg
lock
push
cmovne
push
rclb
adc
jb
xchg
lret
sub
cmp
cmc
daa
je
les
movsl
cmp
inc
mov
xchg
lret
insl
pop
xlat
imul
jbe
xchg
dec
or
jp
jp
mov
or
pop
sbb
pop
ret
imul
push
shr
repz
mov
sub
mov
xchg
imulb
dec
popa
mov
test
pop
scas
and
pusha
fsubr
pop
outsb
push
inc
loopne
cmp
pop
filds
out
push
out
push
cmp
mov
push
idivb
xlat
jnp
mov
xchg
dec
cmp
loop
inc
xor
arpl
test
movsl
pushf
lcall
fsubrs
jmp
mov
and
xchg
push
inc
and
inc
stos
adc
or
cmpsb
push
fsubl
jp
dec
push
sti
mov
das
or
fidivl
jae
fcoms
inc
jmp
scas
sti
mov
out
outsb
push
adc
xor
popa
aaa
pushf
dec
dec
cmp
in
pop
out
shrb
orb
call
jge
into
out
repz
cli
mov
pop
roll
fisubrl
jno
stc
add
mov
in
dec
sub
inc
aad
add
int3
shlb
test
fbstp
xor
scas
decl
imul
jl
dec
pop
or
dec
das
mov
and
push
xchg
out
jne
sahf
cmc
das
hlt
push
scas
imul
mov
jg
cli
in
in
mov
push
xor
cltd
inc
push
xchg
aaa
and
mov
adc
mov
mov
cmpl
dec
fildll
cmp
lahf
inc
cmp
outsb
sti
aad
jge
or
outsb
xlat
dec
sub
xlat
divb
push
dec
adc
mov
std
loopne
adc
aad
xchg
icebp
loop
pop
xchg
andb
or
cmp
add
arpl
jge
mov
sbb
cmp
cmpsb
flds
sbb
daa
pop
dec
arpl
dec
cltd
dec
rorb
xorb
sub
das
pop
fdivl
xchg
in
dec
sbb
dec
sub
pop
adc
jmp
mov
pop
icebp
cwtl
jbe
clc
adc
add
pusha
clc
push
cmp
adc
test
pop
fistpll
pop
fs
iret
jp
stos
jbe
imul
lods
mov
sub
lahf
cmp
pusha
mov
icebp
test
cwtl
mov
push
adc
in
mov
push
lds
insl
lea
aas
xor
dec
clc
jnp
out
cmp
es
movsl
pusha
jbe
cmp
mov
sbb
add
cld
loop
sub
xchg
lock
outsl
push
push
fdivrs
pop
ja
loop
in
data16
shl
cmpl
leave
mov
jmp
pushw
sub
cmc
loopne
adc
mov
push
cli
bound
insb
push
xor
call
int
jno
ds
insl
push
xchg
mov
out
mov
sbb
adc
mov
sbb
xchg
sbb
fisttpl
rcrb
push
int
js
ljmp
inc
push
shlb
gs
cltd
xchg
push
inc
mov
mov
mov
push
aaa
jae
push
pop
mov
ja
sbb
mov
addl
xchg
pop
add
pop
fidivs
movsb
mov
cmc
call
jle
sub
mov
mov
mov
sub
cld
pusha
rcrb
nop
iret
fsts
mov
jp
shrl
test
outsl
mov
loop
adcl
sub
enter
movsb
pushf
mov
inc
inc
push
testb
addr16
xchg
push
jo
add
fwait
sbb
cmp
jp
mov
or
cmp
add
stc
cmp
adc
and
xchg
mov
push
icebp
imul
test
in
notl
pop
stos
stos
data16
pop
or
rcr
mov
xor
imul
sub
cmpsl
push
hlt
enter
bound
inc
dec
or
decb
xchg
aam
fadd
test
ja
jbe
and
mov
clc
add
inc
pop
fwait
pop
mov
aad
repz
push
jo
fld
dec
mov
cmpsb
cmp
mov
rorl
mov
sbbl
loop
jl
add
scas
and
jns
cmpsl
in
jge
lret
jg
shl
dec
gs
jmp
pusha
sub
cmp
add
in
dec
dec
xor
mov
adc
jno
fdiv
das
in
insl
jb
gs
push
xor
xchg
xor
orb
aam
inc
sub
pop
je
movsl
sbb
jl
pushf
fsts
fbld
mov
fcmovbe
mov
mov
mov
xlat
stos
pushf
cmpl
mov
popa
and
mov
ja
dec
outsl
pop
cmp
xor
mov
out
fsubrl
jne
mov
cs
leave
outsl
push
inc
mov
pop
pusha
addr16
pop
daa
rcrb
mov
repnz
dec
inc
inc
jge
lock
mov
in
sbb
int3
sub
inc
fsubrs
stos
packssdw
sahf
sarl
loopnew
pop
push
loope
das
adc
mov
ss
jb
mov
sbb
lcall
aaa
pop
jle
mov
fnstsw
test
cmp
pop
sbb
scas
adc
movsb
jle
xchg
add
or
cmc
daa
push
jle
int3
pushl
sbb
sbbl
jno
mov
push
add
mov
movsw
arpl
mov
xchg
mov
inc
mov
mov
mov
aad
daa
leave
test
loope
js
lds
cs
outsl
pop
xor
ljmp
or
xor
aam
mov
pop
xchg
and
repnz
insb
push
call
outsb
add
call
out
or
es
outsl
lret
lcall
fadds
sahf
enter
rolb
and
push
jp
jmp
mov
pop
mov
ja
hlt
idivl
imul
loopne
out
repz
std
mov
je
sbb
push
and
mov
inc
loope
mov
mov
jecxz
lods
hlt
jns
fnop
xor
in
test
push
cwtl
xor
xor
lods
lret
in
fisubs
pusha
roll
dec
inc
pop
sarb
xor
ret
cmpl
iret
dec
int3
clc
cmp
fs
push
repz
dec
imul
decl
pop
lods
addl
or
sub
mov
subl
pusha
push
jmp
jo
xchg
mov
push
mov
bswap
sbb
inc
and
xor
out
test
test
cmp
in
in
add
int
push
and
out
mov
rcrl
or
xor
outsl
mov
arpl
pop
fidivrs
dec
aad
sub
mov
xorl
leave
test
xchg
pop
xchg
push
sub
and
cmp
push
stos
call
in
or
add
lret
xlat
fwait
pop
mov
sti
mul
dec
pop
cmpsb
adc
xchg
add
push
dec
inc
cmp
in
xor
xor
xchg
mov
sub
jl
js
sub
or
aad
iret
nop
loopne
lea
test
cmp
and
xchg
and
mov
push
mov
sub
ds
leave
inc
sbb
inc
mov
or
jb
push
sub
loope
cwtl
in
scas
iret
ror
cwtl
in
lea
pop
rcll
cmp
aam
mov
test
pop
mov
gs
ret
push
ds
loope
aas
cltd
setp
lods
cmp
repnz
jno
mov
xor
outsl
xlat
fisttpll
cld
push
dec
clc
fsubrs
or
test
pop
dec
out
mov
dec
scas
out
lds
lods
mov
inc
cmpsb
loope
icebp
pusha
push
jmp
jo
inc
ret
pusha
push
lret
dec
movntq
loope
shr
fisubrl
mov
xchg
cld
mov
dec
dec
lret
cmp
cmpsl
out
insb
mov
cwtl
pop
sbb
lods
cltd
xor
jge
popf
stc
out
movsl
jle
mov
lcall
or
out
xor
mov
fucomi
jle
daa
push
push
ror
addr16
fcmovu
dec
mov
icebp
jo
ja
mull
vfrczsd
les
dec
mov
sbb
aas
mov
test
dec
xchg
mov
add
icebp
jl
rcll
mov
fnstcw
xchg
movsb
mov
sbb
or
out
repz
fnstenv
loope
jb
push
cmp
mov
cli
aad
mov
into
and
in
inc
mov
jl
lods
cmpsl
scas
dec
lods
lret
pavgb
nop
dec
fs
je
leave
inc
sbb
xlat
frstor
popa
inc
xor
cmp
add
dec
inc
jb
pop
pop
xchg
jmp
jnp
xchg
push
out
hlt
cld
lea
testb
jno
dec
mov
add
negb
pop
jl
sti
jb
xor
adc
xchg
roll
cmp
sub
out
jnp
outsb
push
rcr
aas
mov
pop
sti
cmp
orl
fyl2xp1
sub
daa
adcb
sub
jle
or
fiaddl
insb
repnz
clc
mov
add
cmc
popf
popa
sub
pusha
mov
add
jp
sbbb
cmp
xor
into
mov
adc
ficompl
push
sbb
mov
push
sbb
dec
stos
pop
xchg
aaa
ja
lret
xor
addr16
insl
aad
divl
xchg
push
adc
sarl
sti
into
imul
mov
sar
lods
mov
xorb
xchg
lret
xchg
cmp
rorl
sub
dec
dec
and
fidivl
fistl
mov
dec
and
cwtl
in
cmp
jne
je
push
mov
dec
ljmp
cld
cmp
iret
in
in
mov
pop
test
jp
mov
inc
fsubrl
es
mov
cmc
in
cwtl
movsl
push
inc
push
cmp
popf
daa
mov
xor
fidivl
loope
leave
add
arpl
push
or
sub
push
fcoml
iret
jmp
pop
popa
xchg
xor
push
movsl
push
lock
les
imul
or
out
call
adc
loopne
mov
in
jecxz
pushf
or
mov
fwait
cli
fiadds
loop
mov
aas
std
lea
add
lock
pop
push
add
in
test
lds
and
pop
insl
shrb
cmp
jp
mov
pop
xor
int
jb
dec
push
xchg
mov
inc
pop
das
cmp
fimull
sbb
pop
mov
inc
fsubrl
push
pop
repnz
cs
xchg
imul
ret
cmp
xor
sub
xchg
lcall
jnp
shlb
push
rcr
adcl
xchg
out
lret
xchg
or
jecxz
ret
inc
jae
lcall
fisubrs
cs
hlt
ret
cld
push
addr16
andl
pop
adc
mov
arpl
xor
jae
call
adc
daa
jl
jg
cwtl
in
insl
mov
or
push
mov
dec
scas
aam
bound
jne
mov
insb
jmp
test
sbb
sahf
imull
mov
es
test
push
aas
mov
loope
fimull
addr16
and
or
push
adc
test
sahf
push
jnp
rclb
mov
adc
mov
jb
mov
mov
dec
jmp
ret
inc
dec
jb
insl
shrb
cmp
ss
xlat
jp
or
dec
xchg
test
lret
adc
insb
and
les
add
add
mov
repnz
insb
push
cld
push
sbb
push
cltd
fcompl
stos
or
mov
mov
jbe
insl
mov
ret
rorb
sbb
ret
mov
movl
ret
sbbl
movhps
es
inc
movl
push
hlt
xor
fcoml
outsb
add
ljmp
xchg
mov
dec
pop
repnz
popf
call
lret
xor
add
loopne
subb
rcr
popf
mov
dec
and
dec
movsl
xchg
add
mov
xlat
leave
and
int3
sub
movsl
cmp
in
cltd
adc
out
mov
pushf
shrl
push
xchg
int3
mov
clc
mov
sbb
and
repnz
insb
push
cld
push
sbb
mov
scas
rorb
pusha
mov
loop
call
adc
imul
out
out
fnsave
lret
xor
sub
js
pop
test
xor
test
or
mov
adc
loop
adc
add
dec
inc
ss
sub
cmpsl
js
jnp
inc
jae
negl
lret
cld
jge
std
insl
cmp
jns
cmc
clc
std
cmp
pusha
arpl
shll
cltd
dec
cmc
xchg
int
test
int
pop
jmp
mov
test
or
pop
cltd
and
ret
mov
iret
sahf
cmpsb
ficomps
sub
or
nop
pop
bound
lcall
mov
jns
loopne
add
pop
jb
xchg
in
test
or
xchg
sub
nop
ja
sahf
out
nop
sti
scas
or
clc
mov
adc
sub
pop
sbb
inc
ds
cwtl
loope
or
dec
pop
movsb
jg
cmp
je
xchg
pop
sbb
fcmove
adc
imul
insb
dec
fbstp
and
mov
or
jecxz
or
dec
test
ret
lock
out
inc
loope
adc
mov
neg
ss
sbb
into
pop
pop
mov
loopne
pusha
shrl
mov
xor
mov
cmp
cld
movsl
cmp
arpl
lahf
push
jg
test
xor
xchg
icebp
push
shll
cltd
insl
adc
leave
dec
gs
js
push
or
push
jmp
push
fs
xchg
imul
xor
jle
pop
push
xor
fcoml
outsl
sbb
dec
int3
daa
test
dec
xchg
mov
cmpsl
cmp
pusha
sbb
sub
out
mov
push
cs
scas
sbb
mov
jo
insb
cmp
aas
lret
cmpsl
jg
push
dec
pop
mov
pop
xor
mov
lahf
mov
xor
loope
in
addb
add
mov
fistl
push
fsubs
popa
jno
lea
mov
inc
pop
xchg
push
in
dec
scas
adc
cwtl
push
pop
dec
int
or
inc
push
mov
mov
addl
mov
or
ret
cmpsl
adc
jb
xchg
fldcw
xor
dec
inc
cli
sbb
movsb
push
repnz
lcall
ja
lret
test
xor
adc
aam
xchg
neg
in
cs
ret
sbb
nop
push
mov
mov
and
js
push
adc
mov
and
adc
insl
icebp
mov
insb
push
push
xchg
into
test
insb
cwtl
add
testl
loope
mov
inc
mov
dec
add
xlat
sub
push
xchg
mov
sbb
or
fcmovnu
fsubr
jmp
push
jo
mov
push
pop
dec
add
dec
mov
data16
lcall
data16
das
sub
add
add
sub
movsb
fsubp
icebp
or
les
out
fs
cwtl
andl
popa
leave
stos
imul
loop
imul
ja
mov
push
hlt
sti
push
xchg
sub
push
jnp
jns
pop
adc
jle
rcr
adc
cmp
cltd
test
xor
sub
loope
lods
add
clc
jnp
push
jle
dec
fmull
cld
mov
pop
mov
push
cmp
dec
sub
call
loopne
stos
idiv
dec
dec
fimuls
cmpsb
jnp
xchg
add
xor
pop
dec
nop
pop
pop
mov
mov
jmp
das
pusha
imul
push
adc
adc
mov
push
mov
loope
lea
push
jae
pop
mov
pop
js
push
icebp
jecxz
cmpsb
lods
xchg
cmpps
enter
jle
addr16
pop
pop
push
popa
leave
int3
out
stos
scas
push
subl
add
imul
sbb
addr16
adcl
jbe
aam
dec
sbb
lret
out
and
mov
xor
cmp
ret
push
sbb
addb
cld
cmp
xchg
sbb
and
in
cmp
xchg
shll
clc
arpl
xchg
jmp
cs
insb
xor
in
aad
out
data16
and
in
cmp
xchg
ficompl
cmp
fisttps
pop
mov
pop
test
xor
push
retw
ficompl
fs
shll
sbb
push
jb
je
mov
jne
xchg
xor
andl
nop
shl
xlat
aaa
fs
pop
dec
pop
dec
iret
cmp
pop
sub
mov
jecxz
cmp
jecxz
sub
mov
fsin
gs
in
out
inc
outsl
sbb
xchg
cmp
jo
xor
das
jb
sbb
cwtl
mov
sti
adc
or
xchg
pop
pop
adc
movsl
sub
scas
xor
movsb
or
in
mov
sbb
insb
loopne
fiadds
in
cld
mov
push
fisttps
pusha
gs
mov
ja
xchg
sahf
sbb
mov
inc
xor
jb
movsl
std
not
fnstenv
iret
cld
cmp
push
lcall
in
jg
and
cmp
mov
mov
dec
sbb
jl
cmp
mov
fadds
xchg
testb
lods
iret
add
sub
in
cltd
xor
loopne
xor
test
mov
mov
and
jl
sub
loop
fsubrp
mov
test
push
xor
push
aam
jbe
popf
cmpb
add
xor
cmp
cmp
in
mov
lock
jmp
adc
fld
sbb
mov
lcall
cmpsb
add
jge
lds
cmp
scas
jae
push
lcall
pop
mov
ss
inc
test
jmp
iret
pop
mov
push
popf
pusha
pop
and
into
or
jbe
mov
jmp
pop
cld
call
jle
jmp
out
mov
daa
dec
outsl
mov
test
shrb
or
mov
mov
sarb
stos
imul
cmp
dec
inc
adc
cld
push
jbe
dec
and
in
xor
xchg
scas
add
clc
das
push
pop
mov
xchg
dec
scas
out
cmp
sbb
enter
lea
inc
negl
cmp
pop
sbb
adc
adc
push
in
test
mov
lock
pop
cs
and
jp
scas
repnz
mov
loope
and
xlat
es
lods
sub
cmp
test
fcomps
cmp
sbb
mov
add
jae
cwtl
movb
sbb
das
add
scas
idivl
lahf
sub
dec
cli
movl
cmp
jno
mov
fwait
dec
aas
or
insb
jns
enter
dec
mov
inc
and
fcoms
loop
stos
push
fsubrs
inc
dec
test
subb
mov
push
xlat
or
pop
push
dec
pop
xor
dec
jno
icebp
int
add
add
std
mov
orb
cmp
push
mov
xchg
subl
xor
jle
cmc
cmpsb
rep
nop
ja
cmp
mov
fldenv
pop
pop
lods
popa
sti
iret
sbb
sbb
mov
mov
mov
sbb
sub
lock
hlt
dec
pop
inc
test
loop
movsl
sub
roll
icebp
sbb
movsl
stc
mov
pop
pop
fimull
ret
repnz
xor
imull
scas
rorl
adc
divb
jecxz
ss
mov
std
js
jbe
outsb
jae
in
fsubs
movsb
dec
and
into
std
jle
pop
mov
sub
fnstcw
push
mov
sub
sub
mov
pusha
mov
cmc
sbbb
pop
add
or
add
loop
decb
push
rorb
dec
cmpsl
mov
xlat
pop
or
in
lods
cld
inc
cld
and
mov
xchg
roll
jecxz
inc
addr16
xchg
inc
pushf
xor
rorb
sbbl
daa
fidivrs
inc
in
sub
push
pop
mov
mov
lods
push
andl
loopne
inc
push
push
mov
adc
cmp
lods
push
pop
inc
ljmp
mov
dec
xchg
jbe
lods
jle
mov
loop
jl
jmp
xchg
pusha
cmc
sub
data16
rcll
xchg
lds
dec
mov
test
or
das
movsb
mov
fisttps
lahf
dec
fucomp
mov
jns
pop
clc
lret
pushf
jg
xor
adc
mov
test
add
lret
arpl
hlt
mov
dec
insl
push
push
push
push
xchg
lods
inc
push
sub
sbb
popf
ret
cli
dec
jl
and
imulb
and
shrl
rol
push
mov
shl
mov
cmpb
jno
lods
mov
loop
and
mov
icebp
xchg
mov
dec
push
jg
aaa
pop
hlt
ds
call
xor
insl
aaa
scas
call
pop
sbb
enter
mov
add
insb
lods
inc
test
in
repnz
cmp
call
jnp
enter
mov
and
xchg
xlat
sbb
or
pop
repz
lock
mov
jg
test
aad
call
test
pop
and
dec
inc
cmp
loope
push
push
or
jns
sti
loop
ja
cmp
inc
popf
aaa
xchg
divb
dec
fnstcw
cmp
xor
gs
pop
mov
mov
sbb
mov
pop
jbe
jb
test
insl
jno
mov
pushf
shrl
adc
fbld
sub
mov
inc
das
out
iret
fisubrs
jge
sbb
and
mov
mov
movaps
sbb
sub
arpl
cmp
sbb
cltd
test
sbb
out
xchg
or
ss
dec
xchg
xor
add
into
fistl
cmp
shrl
lcall
jae
idivb
mov
cmpsl
inc
mov
inc
cmpsb
mov
push
lcall
insl
xor
out
xlat
lds
push
sahf
add
cmp
pop
data16
cmp
adc
sub
loopne
xchg
adc
push
mov
xor
test
or
mov
lods
jmp
shlb
lahf
arpl
jb
xchg
add
mov
sbb
in
aad
add
add
dec
out
test
xchg
les
pop
fstl
sub
inc
cwtl
mov
add
sub
out
aad
aam
mov
dec
in
ret
push
jo
not
ret
xchg
nop
mov
xor
ficoms
lods
enter
aas
mov
shl
sub
aam
adc
jmp
repnz
inc
push
imul
dec
sbb
inc
into
pop
out
imul
daa
les
in
popf
cli
cmp
xchg
stos
pop
or
sub
cmpsl
jnp
jg
dec
cmc
mov
and
out
push
data16
inc
pop
lahf
xchg
xor
xor
iret
jnp
aaa
mov
jg
lahf
gs
push
aad
jmp
mov
jno
mov
insl
leave
cmc
inc
jns
xor
mov
sti
mov
and
loope
int
das
popf
fnsave
repnz
bnd
rolb
inc
push
test
ja
and
repnz
lret
mov
lods
mov
mov
and
jecxz
insl
sbb
fmull
lea
dec
push
xchg
mov
fsubrs
push
sub
push
movsl
loop
dec
fwait
xor
ja
and
repnz
addr16
mov
clc
sbb
pop
inc
addb
pop
mov
dec
jg
and
or
push
jle
cmpsl
repnz
nop
jmp
pop
dec
aam
les
mov
xor
inc
jmp
mov
out
out
stc
rcll
inc
clc
loop
repz
adcl
dec
sbb
test
add
sahf
inc
call
inc
rcrl
and
int3
out
subl
mov
add
sub
loope
sbb
cli
inc
adc
fimull
clc
fimuls
xor
sub
add
add
pop
xchg
adc
leave
and
xor
fistpl
rolb
mov
mov
inc
imul
sarb
popf
aaa
xchg
mov
add
dec
pop
stos
sar
pusha
mov
scas
roll
add
add
cld
lds
jb
test
insl
jno
mov
pushf
shrl
pushf
dec
jnp
hlt
pop
cmp
xor
pushf
cli
cli
into
fs
mov
movsb
decb
flds
nop
inc
roll
mov
clc
dec
push
or
sbb
fcmovb
insb
push
push
or
iret
addr16
mov
cmp
xor
shl
insl
addl
hlt
aad
cmpsb
cltd
out
cmpl
xchg
out
lock
push
lahf
out
pslld
hlt
out
insl
leave
hlt
cvtps2pd
xchg
test
pop
rcl
ret
jecxz
cmp
cmpsl
rolb
stos
outsl
and
pop
lret
es
push
test
cmp
aam
addr16
imul
jns
sbb
pop
adc
fs
sub
push
in
adc
lock
adc
icebp
sub
lret
roll
xorl
ds
dec
cmc
pop
xchg
inc
push
stos
jne
test
fwait
out
call
adc
push
ret
sbb
dec
mov
popf
sbb
test
cmpsl
mov
mov
adc
clc
mov
sub
jmp
aad
push
xlat
stos
and
mov
sub
aaa
add
sbb
cs
or
cmp
mov
sbb
decl
jmp
xchg
cmc
and
sub
add
and
jo
sbb
mov
mov
inc
mov
inc
pop
and
fs
pusha
dec
fisttpll
lock
sbb
mov
and
inc
or
and
stc
mov
cli
dec
rcrb
mov
cmp
in
sbb
or
mov
mov
push
push
lock
pushf
cld
push
es
aad
sub
or
lret
das
loop
pop
dec
or
inc
pop
dec
xchg
das
jmp
adc
pushf
ljmp
sbb
shl
cmpsb
cs
cltd
fdivrl
pop
jb
xor
repz
rclb
sub
cmp
jnp
mov
inc
pop
xchg
aas
mov
push
xor
adc
pushf
ljmp
adc
aad
jno
jg
je
dec
push
jnp
mov
xchg
jmp
aad
mov
inc
shrb
fistl
test
add
jne
mov
jbe
imul
jae
jp
jnp
fcompl
decl
in
mov
mov
pop
test
sub
loop
lret
jae
ds
cmp
lods
mov
mov
ds
pop
leave
daa
dec
xor
out
or
out
cltd
nop
rol
mov
nop
and
outsl
xchg
xchg
cltd
cmp
scas
into
dec
rolb
sub
push
add
jne
mov
jle
add
or
lea
mov
jbe
and
bound
xor
stos
xor
aam
imul
negl
pop
cld
into
sbb
pop
into
in
jge
pop
xchg
insb
sbb
push
mov
mov
and
loope
mov
out
out
adc
add
pop
or
scas
or
inc
cmp
mov
ds
add
das
jbe
mov
cwtl
sub
cltd
jb
insl
and
mov
inc
and
mov
or
xchg
push
sti
repnz
mov
pop
cld
into
sbb
test
js
jge
pop
xchg
insb
sbb
xor
adc
in
jle
adc
dec
adc
out
adc
js
fildl
push
push
int
adc
scas
or
push
movsb
mov
xlat
push
add
das
jbe
mov
xlat
cmpsb
stos
popa
push
inc
cmp
stc
add
xchg
sahf
ss
ret
std
push
xor
popa
xchg
insb
mov
jns
ja
in
rcr
lods
inc
aad
jl
adc
pop
ljmp
cmp
cli
sub
hlt
div
rcr
mov
mov
roll
add
adcl
adc
adcl
cmp
xor
xlat
sarl
inc
fstl
insb
inc
dec
add
repz
cs
es
sub
sbb
mov
push
mov
loope
add
lret
clc
mov
adc
out
xchg
clc
pop
mov
mov
adc
xor
pop
fldcw
lret
lods
jbe
in
int3
imulb
cmp
fcmovnbe
sbb
jno
xchg
aas
adc
pop
ja
sbb
lcall
push
push
dec
dec
adc
pop
ljmp
xchg
xor
sbb
mov
or
lods
and
fsubrs
xor
pop
adc
ds
cs
ss
outsb
mov
dec
push
ss
mov
jl
cmc
push
shr
data16
cld
sub
adc
pop
subl
lea
lea
in
test
rcrb
mov
sub
aad
mov
lahf
fistps
imul
mov
roll
arpl
ret
js
lahf
sub
ffreep
add
cmp
mov
mov
mov
push
push
lock
push
lods
xchg
sar
in
mov
pop
xchg
xchg
outsl
mov
push
inc
pop
std
add
xor
icebp
xchg
adc
xor
push
xchg
mov
push
or
mov
lcall
sub
and
lods
inc
mov
sbb
insb
ret
out
and
xchg
sbb
bound
inc
sbb
push
cltd
sahf
mov
loop
icebp
mov
gs
xchg
or
push
add
add
mov
sub
xchg
sub
iret
mov
enter
call
jecxz
lea
dec
sub
hlt
js
jbe
pusha
das
je
sub
bound
shl
xlat
enter
insb
push
in
xchg
push
inc
xor
nop
dec
push
or
leave
or
lock
jae
sub
loopne
jmp
pushf
or
push
ret
aad
mov
cmp
lods
mov
cmpsb
pushl
daa
xchg
in
inc
push
movsl
jbe
adcl
pop
lea
add
insl
dec
in
enter
hlt
rcrb
sahf
enter
les
repz
lods
movsb
add
call
loope
push
into
cmpsl
cmpb
mov
xor
mov
push
sub
inc
pop
popa
lret
js
aas
stc
lds
cmp
sti
or
add
mov
lock
mov
sahf
out
daa
fadds
repnz
scas
gs
cmpsl
arpl
sbb
shlb
xchg
cmc
cmp
mov
ss
add
pusha
lcall
jle
inc
loope
sub
test
movsb
jno
adc
js
xor
cs
fstl
xchg
mov
pop
push
js
lea
push
lods
ret
movsb
sbb
scas
push
lcall
pop
les
repz
lods
movsb
add
repz
xor
imul
or
or
cmp
arpl
cli
into
inc
xchg
nop
push
xchg
fidivs
jb
dec
push
xchg
mov
aas
outsl
leave
insl
stc
es
xor
cs
pop
out
bswap
pop
pop
pushf
cmp
arpl
add
cmp
loopne
add
mov
rol
fnstsw
jg
mov
jmp
fcoms
cmp
jb
lcall
dec
sbb
in
cmp
xlat
movsb
mov
or
and
sub
movsb
add
shrb
cmp
adc
addl
mov
mov
leave
push
pop
mov
int
mov
ds
hlt
mov
and
lock
pusha
addr16
push
jmp
cmpsl
ret
stos
adc
adc
cs
test
push
jnp
rclb
mov
ret
push
mov
divb
mov
out
lock
push
mov
xchg
out
push
sub
test
cmp
sub
loop
repz
adcl
add
pop
mov
push
xor
pusha
ds
jmp
out
or
into
bound
mov
cs
xchg
cwtl
int3
adc
rorb
hlt
std
sbb
xchg
movb
adc
xchg
or
xor
sub
bound
mov
mov
cmp
mov
xchg
cmp
mov
es
sub
cs
pop
cwtl
fs
fsts
insl
loope
and
rol
mov
mull
in
adc
adc
xchg
adc
int
idivb
daa
inc
and
subl
pop
jne
dec
clc
mov
jmp
inc
adc
mov
sub
insb
test
cmp
pop
repz
cmp
dec
enter
sarl
mov
fildl
lods
dec
icebp
xchg
xor
xchg
adc
in
int
inc
out
push
ficomps
sub
jae
hlt
jle
fadds
sbbb
les
or
pop
xchg
lcall
mov
or
outsl
or
sub
call
pop
fdivrs
xchg
fcoms
cmp
fdivs
fwait
or
mov
sbbb
jmp
inc
and
push
sub
sub
sbb
mov
mov
push
fcoms
cmp
jb
lcall
dec
sbb
in
cmp
hlt
es
inc
into
xor
cli
iret
ja
leave
iret
fidivs
dec
out
inc
cmpsl
mov
test
xor
lock
push
notl
cmpsb
addl
dec
and
je
xor
into
xchg
add
pop
adc
repz
push
push
das
mov
lahf
pop
adc
inc
sbb
subb
xlat
pop
fnstsw
shll
dec
dec
mov
and
fbstp
push
lret
mov
icebp
std
cmpsb
sbb
shr
bound
inc
and
jl
jl
adc
pop
ds
pop
out
fcmovu
jne
insb
cmp
mov
push
pushf
cwtl
inc
adc
mov
sub
lods
or
sti
rclb
xlat
mov
clc
jp
push
lock
fcmovnb
mov
mov
outsl
call
jg
nop
mov
cmp
pop
ret
xchg
mov
stc
push
inc
mov
and
fs
rcl
es
adc
jl
sub
push
sub
inc
jno
ret
sbb
push
je
cmp
out
dec
mov
mov
sbb
mov
outsb
xchg
xchg
xor
sub
jle
adc
arpl
pop
clc
push
push
ret
ja
roll
nop
in
adc
push
stos
pmaddwd
jo
out
xchg
test
add
sbb
mov
pop
xchg
fadd
insb
push
push
or
iret
cld
add
jle
cmp
add
push
pop
jae
rclb
jecxz
jmp
stc
add
jg
mov
in
lret
rcr
in
sub
lret
icebp
dec
push
aad
add
push
fwait
add
mov
mov
push
fcoms
cmp
jb
lcall
dec
sbb
in
cmp
bound
sub
push
lcall
cld
test
jle
es
and
dec
and
cs
data16
pop
repnz
fsub
lret
std
roll
ja
andb
jecxz
test
dec
xorb
call
sub
iret
rorb
push
jge
jge
popf
popf
push
xchg
adc
std
lret
dec
sub
nop
inc
dec
aam
add
das
dec
mov
shlb
je
dec
nop
incb
cwtl
adc
mov
test
xchg
jb
push
fstps
mulps
sub
mov
cltd
mov
ljmp
jg
dec
je
test
push
xchg
outsb
push
je
test
repz
or
stos
loopne
push
xchg
addr16
xchg
std
mov
xor
push
jnp
add
xor
and
call
inc
outsl
insb
fld
sbb
out
jne
mov
cmp
push
stos
jge
inc
adc
outsb
bound
inc
inc
insl
stos
repz
inc
loope
sarb
jb
xor
push
scas
mov
inc
mov
ss
adc
fldcw
ret
mov
cmp
ret
aad
lret
ror
mov
sub
dec
jmp
push
inc
sbb
out
push
jp
lods
or
in
mov
lcall
mov
adc
cli
add
fcmovu
add
mov
icebp
adcb
inc
pop
sub
shlb
xor
adc
inc
test
and
or
sub
pop
std
or
cltd
test
xor
push
and
icebp
adcb
jecxz
aaa
notl
or
out
inc
pop
popa
out
or
mov
adc
mov
popl
clc
jmp
ret
lods
xor
or
loope
sub
lea
aas
sbb
rol
scas
lods
xor
out
inc
insb
jl
negl
test
push
mov
daa
push
and
fsubs
popf
sub
sub
scas
add
shl
xor
gs
pop
inc
dec
inc
adc
and
mov
test
fisubs
pop
mov
popf
mov
jge
ret
ja
adc
sbb
xor
out
movsl
sbb
xor
mov
test
inc
ljmp
andl
xor
xor
push
dec
in
cmp
fs
jno
mov
leave
and
xor
lock
adc
pop
fsubl
mov
and
sub
inc
dec
xchg
mov
jmp
xor
jle
ss
aas
mov
mov
pushf
jbe
mov
xchg
out
enter
daa
pop
mov
into
data16
and
pop
dec
lods
mov
gs
or
es
rclb
push
mov
inc
rep
cmp
clc
std
jns
popa
rorl
test
cs
xor
or
stos
addr16
rclb
and
cmp
lret
and
stc
pop
data16
or
pop
negl
cs
popf
loope
adc
fcmove
sub
xchg
jbe
cmp
in
cltd
adc
out
mov
pushf
shrl
gs
cmp
shrl
imul
roll
xor
add
pop
sbb
xorl
jl
divl
mov
shl
mov
scas
lea
imul
pop
xchg
pop
mov
dec
jg
and
or
push
jle
cmpsl
les
jle
in
fdivp
aaa
xor
mov
outsb
mov
dec
push
ss
mov
jl
cmc
push
shr
data16
popf
add
xchg
nop
fwait
mov
scas
jae
sbb
mov
rol
dec
cmpsb
add
pop
push
mov
add
movb
mov
clc
cmpsb
fsubl
dec
movsl
ret
jae
pop
adcb
insb
movsb
xor
fs
bound
test
leave
dec
fidivl
aam
loope
loopne
fsubrs
push
lods
xor
call
and
inc
repnz
mov
mov
xchg
into
lods
fsubp
cmp
out
clc
gs
pop
inc
dec
inc
adc
and
jg
mov
and
add
mov
rcl
mov
pop
sbb
lcall
mov
addl
inc
or
notl
sub
testb
jne
mov
adc
pop
dec
push
xchg
movsb
adcb
les
in
adc
push
stos
xcrypt-cfb
cmpsl
movsb
xchg
mov
daa
movsb
push
xor
fistps
into
mov
xor
mov
movb
sbb
repnz
gs
xorl
dec
adc
pop
pop
daa
cmp
xchg
adcl
outsl
mov
push
mov
adc
scas
add
dec
xor
test
or
mov
mov
cltd
repz
mov
sbb
lea
roll
pop
cmp
fldcw
sarb
inc
cmp
cmpsb
add
pop
or
pop
push
adc
in
jecxz
and
sti
xchg
stos
clc
loop
repz
adcl
pop
callw
sar
xchg
rcll
mov
dec
orb
push
and
mov
xchg
jl
les
stos
test
xchg
shll
dec
dec
gs
cmp
jg
pop
mov
and
jbe
in
xchg
xchg
nop
push
cmp
jecxz
adc
mov
cmp
insl
addr16
xlat
xchg
ja
lock
mov
xchg
mov
fucomp
jge
mov
stos
and
rolb
mov
adc
xchg
mov
or
ljmp
mov
sbb
aad
adc
mov
shl
mov
xor
mov
dec
mov
adc
adc
aaa
fadd
lret
sub
cmpsl
insl
std
ret
pop
push
ja
xchg
movsl
pusha
cmpsb
mov
scas
or
mov
pop
adc
cli
mov
pop
pop
inc
push
xorl
cmpsb
and
out
xor
movsb
outsl
insb
dec
push
sbb
in
imul
sarl
div
pop
ss
lods
sbb
pop
imul
jg
sub
push
pop
int3
and
sbb
rcr
push
jno
stos
repz
dec
out
mov
mov
mov
flds
add
jp
sub
gs
test
sub
mov
jl
outsl
inc
sbb
pop
roll
sub
popa
sbb
jns
pop
into
test
mov
pop
or
push
mov
add
loopne
adc
push
pop
xor
fcmovu
cmp
pusha
push
pop
fs
mull
push
test
mov
out
mov
movsb
shrb
mov
bound
mov
scas
in
pop
loope
xor
mov
cmp
xor
loop
dec
outsl
mov
cmpsl
arpl
pop
loop,pt
mov
dec
or
ds
xchg
adc
jns
gs
sti
ds
sub
test
les
enter
xchg
mov
mov
and
insb
cwtl
pop
pop
mov
stc
push
shlb
repz
test
call
scas
xchg
sbb
add
add
mov
cli
fists
push
xorl
sub
lods
push
int
mov
icebp
pop
pop
jmp
cmpsb
xor
ss
mov
push
pop
and
sbb
inc
je
jnp
mov
add
pushf
jns
xorl
sbb
out
dec
push
xchg
xchg
stc
sub
xchg
mov
gs
mov
xchg
cmpsw
inc
fsts
test
fldcw
test
add
insl
dec
mov
gs
sahf
insl
or
pop
hlt
cli
xchg
pop
movsl
cltd
lds
pop
movsl
sub
fisubrl
jbe
vcvtsi2ssl
movsb
dec
push
loopne
lahf
cltd
cli
pop
fildll
loop
push
and
sbb
outsl
and
lock
in
cs
lock
fbld
or
pop
les
add
lds
in
les
ret
lcall
inc
mov
xchg
dec
loop
push
lea
xchg
adc
std
fstp
cmp
jecxz
push
call
in
repz
jecxz
popf
pop
movsb
jne
jge
sbb
sbb
add
mov
movsb
adc
dec
pop
cmp
mov
push
mov
inc
scas
leave
scas
das
dec
push
xchg
bound
out
pop
lcall
adc
dec
jle
ror
sbb
adc
loop
fwait
int
movsb
xor
adcb
lret
popa
cmp
pop
out
insb
xlat
jae
dec
push
pop
fimuls
pop
mov
insl
icebp
inc
mov
jbe,pt
movsb
shlb
jg
loope
cmp
push
pop
push
iret
aas
jne
loopne
adc
mov
and
mov
push
ret
outsl
sbb
test
std
sub
pop
cwtl
jae
adc
sub
mov
arpl
xchg
adc
test
and
test
or
negl
xor
push
arpl
lahf
and
push
pop
sbb
jmp
add
xchg
pop
lcall
hlt
notb
pop
call
fimuls
inc
icebp
cmp
stos
in
xchg
in
inc
je
fisubs
testb
jo
xor
mov
xchg
adc
call
rdmsr
gs
shlb
popa
sahf
aad
cmpl
lods
xor
fs
hlt
call
push
mov
addr16
sub
cmc
cmp
je
xchg
pand
sahf
cmp
es
pop
fcoms
xor
sbb
push
movsb
insl
test
xor
gs
mov
in
mov
sti
imul
inc
test
aam
push
dec
mov
adc
jle
mov
loopne
ret
xor
and
mov
shlb
lds
ja
add
lds
fwait
push
jge
popf
in
adc
in
fwait
mov
lods
dec
jns
out
repz
daa
adc
mov
push
sbb
test
mov
in
sub
add
fcmovbe
push
lret
inc
or
loopne
je
fimuls
sbb
cmp
pusha
and
pop
and
or
clc
mov
ret
dec
xor
js
andl
jmp
dec
pop
out
mov
nop
js
lcall
lret
jns
and
sbb
adc
jnp
lcall
jg
mov
mov
or
cmp
daa
xlat
mov
mov
pop
loopne
call
dec
in
pop
mov
cmp
push
sub
or
lcall
adc
test
cmpl
repz
test
outsl
xchg
mov
loop
gs
push
cs
dec
cmc
add
inc
into
bound
or
pushf
xor
add
pop
rcr
ret
imul
jne
je
jmp
push
mov
mov
cmpsl
and
add
fisubl
test
aaa
xchg
xchg
add
frstor
jo
xchg
rclb
xlat
adc
pop
nop
cmp
orb
or
mov
pop
adc
inc
inc
popf
shlb
jge
xchg
xchg
xchg
pushf
fidivs
mov
add
icebp
rcrl
mov
movsb
dec
sbb
add
dec
out
push
in
push
push
inc
stos
or
pop
mov
jecxz
mov
push
pop
pop
mov
ja
aaa
scas
movsl
repz
shll
fdivl
pop
mov
cmp
jbe
dec
std
scas
jmp
loopne
repz
data16
out
jp
pop
into
jbe
push
adc
add
shrl
neg
cmpsl
sub
mov
add
loope
gs
nop
or
jle
jmp
fidivl
or
xchg
dec
rolb
mov
sub
test
pop
cmc
pushf
popf
sbb
mov
out
mov
movsl
test
mov
rorl
out
les
sbb
pop
push
nop
push
out
stc
mov
gs
iret
cli
mov
cmp
insl
xchg
add
icebp
sbb
jbe
sub
sub
mov
sti
movsl
aam
add
or
pop
andl
xchg
mov
or
dec
lret
jns
inc
nop
ljmp
loopne
mov
hlt
push
testb
cmc
xor
ss
cmp
std
scas
clc
pop
push
dec
xchg
loop
inc
and
add
lds
int
imul
sub
aas
cmp
xchg
inc
test
jecxz
dec
add
dec
xlat
mov
std
imul
mov
popf
push
sbbb
cmc
xchg
fwait
xor
mov
mov
fwait
mov
sahf
test
js
and
mov
ljmp
imulb
hlt
mov
pop
push
dec
int
arpl
pop
xor
fwait
and
xchg
out
bound
aaa
decl
insb
addb
jl
mov
cmp
cmp
shlb
cmc
jp
push
xor
sub
push
in
mov
js
out
ss
js
push
push
loope
insl
mov
rcrl
loope
imul
fsubrl
or
fwait
movsl
adc
out
lret
pop
and
jmp
and
enter
stos
loope
or
cmpb
in
imull
pop
or
lock
aam
sbb
imul
fdivrl
inc
out
pop
add
les
xor
push
push
or
xor
sub
fs
jle
pop
push
jle
and
std
and
dec
jg
lods
iret
icebp
nop
push
lock
test
aaa
add
jns
dec
mov
inc
pop
inc
mov
outsl
add
push
cli
lock
dec
sahf
jns
clc
jl
adc
inc
push
jge
adc
fsts
fsubl
push
lret
mov
lock
dec
pop
les
es
push
shlb
push
mov
fisttpl
int
cmp
mov
iret
inc
cmc
mov
and
push
push
add
mov
sbb
mov
movsl
push
inc
lahf
sbb
sbb
mov
lea
sub
mov
inc
daa
xchg
and
inc
lods
out
bound
loope
and
mov
xchg
mov
push
cmp
cmpsb
push
inc
mov
in
stc
ss
sahf
lret
push
bound
fldenv
movsl
je
cmp
imull
cmp
mov
lret
iret
pop
imul
jp
fnstcw
movsl
in
ret
dec
pop
push
bnd
mov
test
pop
mov
adc
mov
lret
ret
cld
lret
ret
fwait
int3
icebp
pushw
mov
pop
dec
mov
das
pop
mov
mov
aam
inc
aaa
andb
push
addb
or
aad
pop
outsb
rcr
cmp
mov
xchg
testl
fists
andb
jl
xchg
jne,pn
jg
sbb
icebp
aaa
movsb
cmc
popf
xor
xor
jmp
jo
mov
outsl
dec
ja
std
fsubl
fdiv
inc
cs
mov
lahf
pushf
jp
mov
sar
pop
dec
xor
dec
dec
gs
mov
lcall
mov
pop
adc
mov
shll
repz
mov
sub
sbb
mov
adc
and
add
popa
push
movsb
cmp
stos
push
add
rcr
je
cltd
inc
loopne
xchg
mov
ds
jmp
insb
ror
cmpsl
cmp
jmp
xor
in
jne
fistpl
push
sub
das
jge
jge
mov
cmp
lret
sbb
sub
stc
icebp
dec
insb
loope
mov
inc
lcall
sub
scas
arpl
xchg
and
test
insb
jae
shrb
dec
push
popf
fsubl
maxps
jae
in
mov
cli
pop
push
jp
pop
divl
cmp
inc
push
iret
add
iret
outsb
ret
test
fcmovne
push
mov
jecxz
movsb
xchg
pushf
in
mov
enter
jnp
ret
aad
mov
cld
mov
push
pop
adc
push
adc
mov
test
sahf
jge
mov
jmp
sbb
jbe
pop
pop
cli
mov
pop
fsubr
imul
xor
jne
or
sub
jno
xchg
hlt
sub
dec
xlat
mov
shll
sti
xchg
pop
mov
cmc
sub
lret
push
xor
dec
pop
jle
repnz
sahf
sarb
aaa
xchg
lods
lods
fistpll
mov
aaa
mov
retw
add
xchg
xor
lds
in
add
int3
loop
xchg
xlat
jg
xor
insb
bound
dec
adc
ret
lcall
movlhps
cmp
pcmpgtw
lret
cmp
add
movl
push
xchg
lret
divb
adc
int
mov
xchg
jb
xchg
cwtl
das
das
pop
ret
mov
ret
faddl
push
adc
xchg
sbb
and
push
cli
mov
pop
push
and
cmp
orl
inc
push
in
imul
lret
mov
mov
lret
pop
das
jae
lret
adc
lods
aam
lea
aaa
loopne
adc
aas
test
push
in
jnp
je
add
dec
loope
push
xchg
loopne
add
popa
fs
mov
mov
and
leave
int3
negl
and
xor
lret
push
imul
fildll
pop
pop
inc
pop
and
outsb
leave
aad
das
dec
das
fbld
xor
push
loopne
loop
pop
insl
ret
add
xor
cmpsb
sbb
rcrl
sbb
dec
mov
movsl
gs
daa
test
dec
push
leave
adc
and
jo
mov
xchg
aaa
mov
xchg
nop
fs
lods
cmp
gs
lcall
into
cmp
sub
cmp
ret
call
cmpsb
imul
andl
lret
sbb
pop
cmpsl
inc
dec
sbb
aaa
ret
or
xchg
add
fidivrs
int
call
sub
inc
arpl
or
or
lret
imul
test
and
mov
jns
sub
inc
iret
pop
dec
lcall
and
adc
jmp
pop
subb
xor
mov
shlb
or
scas
arpl
or
imul
cmpsb
movsl
sub
cmp
lahf
decb
std
js
push
pop
gs
add
outsb
shll
cmp
mov
int
sbbb
and
aam
and
fldt
mov
in
inc
inc
ds
in
sahf
mov
fsubrs
dec
gs
imul
xchg
sbb
mov
js
jns
and
add
insl
and
dec
stos
add
sub
pop
dec
das
adc
jmp
sti
jmp
mov
mov
scas
and
add
xchg
xchg
shrb
jp
and
imul
in
cwtl
add
iret
adc
scas
jns
inc
fdivrs
cli
push
out
jns
mov
and
nop
jne
jae
enter
mov
fwait
pop
ret
mov
xlat
xchg
inc
xor
pop
mov
jbe
iret
or
mov
imul
pop
xchg
leave
aam
and
out
ret
sti
test
push
xlat
and
std
pushf
ret
jle
xchg
cli
and
cwtl
pop
dec
cmp
xchg
popa
mov
iret
cmpsb
fildll
push
gs
mov
cwtl
and
jge
adc
mov
cmpsl
cltd
push
and
inc
push
and
pusha
lret
pop
loopne
adc
aam
cmp
pop
lds
js
mov
shll
pusha
mov
xlat
nop
pop
scas
or
xor
add
fwait
subb
fsubrs
sub
cmpsl
rorb
out
les
jns
xchg
mov
xor
and
mov
jne
cmpsb
call
jno
hlt
add
push
push
xlat
xor
jne
stc
xchg
out
rcrl
test
andl
shll
aas
cld
std
shlb
xor
out
out
popf
out
push
lock
xchg
mov
andps
jae
sub
dec
sub
mov
pop
mov
adc
push
test
mov
jo
ljmp
jp
dec
inc
inc
ret
fimuls
mov
lds
jbe
ror
lds
loope
inc
push
test
frstor
ficoms
cmp
xor
push
mov
bound
mov
popf
mov
insb
pop
fsubp
pop
fidivrs
dec
daa
bound
xchg
xchg
sub
lret
mov
fcompl
cmp
imul
jb
xor
sub
lret
push
insl
jle
ret
cwtl
stc
pop
shrl
and
adc
xor
call
les
loope
mov
xchg
orb
mov
inc
popf
fmul
into
pop
js
negb
add
les
cmp
pop
sub
iret
inc
push
sub
test
mov
push
and
xor
xor
sbb
aad
in
push
jae
fnstsw
dec
ds
cmc
xor
sti
fadds
add
dec
push
outsb
fisttps
movsb
jmp
and
lds
and
lock
les
scas
cmp
aad
sub
inc
cs
bnd
fcomp
lret
movsl
addr16
cli
fistpl
inc
push
or
mov
clc
lret
xchg
mov
sbb
push
mov
fmull
shll
dec
dec
jno
lds
sub
mov
add
or
repnz
push
in
inc
jo
sbb
rclb
inc
inc
dec
ss
mov
xchg
dec
adc
add
jb
adc
fnsave
fiadds
js
arpl
xlat
fcmovnb
push
push
mov
jecxz
enter
enter
bound
into
cmc
nop
and
int
mov
mov
sub
iret
aaa
dec
mov
push
fdivs
in
repz
lahf
xchg
leave
xchg
xchg
es
and
sub
xor
mov
sub
mov
add
fidivl
loopne
sub
out
out
jbe
mov
scas
lret
out
pop
insb
mov
inc
xor
insb
pop
lds
xor
imul
add
test
fbstp
lcall
mov
pusha
pusha
int3
jno
fsubr
movsb
test
jge
lcall
cmc
ljmp
cmp
cmc
into
rcll
jnp
scas
sub
shr
movsb
daa
repnz
nop
rcl
lahf
sbb
pop
mov
adcb
movsl
insb
out
xor
clc
sbb
add
or
test
mov
out
xor
pusha
lea
push
mov
sbb
adc
mov
loopne
imul
hlt
xor
cmp
sbb
sub
jmp
outsb
das
loopne
push
outsl
mov
mov
cmpsb
jns
inc
pop
imul
pop
inc
les
das
add
dec
imul
pop
stc
xchg
add
lods
lods
fisttps
push
mov
out
fidivs
cmp
cltd
das
pop
fstps
cli
pop
sbb
aad
fwait
stc
sbb
xor
jge
daa
lcall
stos
fdivl
xchg
jmp
loop
pop
movsb
xchg
fs
mulb
xlat
jl
sbb
sub
xor
jb
inc
adc
mov
push
mov
inc
xor
je
xchg
sub
xchg
cmp
jle
jecxz
in
mov
mov
pop
enter
push
mov
cmp
xor
add
adc
or
rorl
loopne
pop
daa
sbb
dec
mov
mov
or
dec
add
test
dec
cmpsb
in
pop
dec
push
inc
and
out
add
xorb
lock
inc
int
insb
arpl
add
mov
add
and
add
mov
fcoms
sbb
cltd
or
fnstcw
ss
es
outsb
or
inc
mov
pop
xor
dec
sub
les
mov
jl
mov
shlb
jp
fsubrs
adc
inc
mov
mov
lcall
int3
or
das
sarl
movsb
jae
insl
test
xor
sbb
or
pop
pop
ss
push
xchg
or
ds
xchg
in
push
out
clc
lcall
cmpb
cmp
cmp
fs
push
fs
push
add
arpl
les
xchg
fisttpl
movsb
dec
cmpsb
movsb
icebp
aas
push
lods
bound
leave
loope
fisttpll
pop
mov
lock
int3
cld
cmpsl
xor
aad
roll
cli
scas
push
std
mov
or
lds
jmp
mov
mov
js
pop
jns
push
xlat
cmpsl
int
enter
dec
lds
out
lret
jle
aas
or
daa
push
mov
pop
popl
daa
ss
es
leave
xlat
loopne
cltd
ja
jno
test
xchg
xor
xchg
mov
xchg
xchg
dec
sub
mov
push
jns
push
cwtl
cs
push
lcall
shrb
mov
and
pushf
rcr
push
cmp
mov
adcl
or
jp
push
insl
ja
mov
jne
ss
jno
data16
dec
xlat
sahf
mov
loopne
mov
push
push
je
scas
mov
jl
int3
inc
xorl
mov
fisubl
push
xor
lret
mov
push
cmp
push
mov
in
xchg
adc
jnp
iret
or
icebp
enter
xor
xor
cld
adc
cmp
in
sbb
add
sbb
push
jae
lods
ret
scas
push
cltd
cmp
and
inc
jge
sbb
repz
test
pusha
or
add
and
adc
fsubrl
dec
xor
je
and
js
sti
add
loop
jmp
sbb
imul
jmp
xor
arpl
aaa
pusha
xchg
loop
mov
or
lock
das
add
es
inc
pop
cmp
lods
xchg
repz
paddq
rcrl
xchg
aas
mov
cmpsl
and
xor
daa
sti
int3
mov
lret
xor
lds
xchg
mov
sub
int3
sub
stos
in
pop
lods
cmp
gs
lods
das
and
mov
lods
inc
in
push
test
in
dec
stos
pop
lret
push
out
cmp
popa
push
test
push
xchg
ja
xchg
mov
loope
sti
dec
pop
pop
ret
cmp
je
fsubrl
test
mov
cmp
jmp
adc
xchg
fs
sti
je
aas
and
insl
es
inc
mov
in
inc
or
inc
xor
movsl
xlat
dec
jno
cmp
in
lods
setbe
sub
fsubl
rcrb
push
aaa
push
sub
test
jns
fsubl
in
inc
pop
cltd
push
pop
cmp
aam
xchg
in
int
scas
lret
add
push
sub
iret
lcall
fisttpll
inc
mov
jns
repz
adc
jmp
dec
inc
in
and
popa
arpl
fdivs
scas
and
mov
out
push
mov
fdivl
in
jmp
mov
sub
push
pop
rorl
xchg
ja
mov
mov
sbb
mov
cmp
movsb
sbbb
outsb
adcb
aaa
xchg
fisttpll
mov
push
mov
mov
and
pusha
or
inc
clc
push
adc
or
dec
lock
enter
xor
scas
jle
add
loop
inc
inc
aad
scas
loopne
sub
mov
lret
movsb
mov
lds
xor
pop
mov
pop
mov
inc
call
pop
add
ljmp
pop
sbb
leave
jnp
or
mov
xchg
and
and
push
adc
lock
mov
inc
fs
mov
mov
cltd
js
sbb
stc
add
pop
mov
icebp
cmp
sbb
jno
test
sbb
ret
lahf
cmpb
cld
lahf
filds
ljmp
outsb
or
sarb
inc
mov
mov
ret
mov
mov
push
lret
sbbl
inc
lods
adc
jnp
add
in
jns
lea
jno
add
je
mov
mov
lods
push
xor
shll
aas
lods
test
jecxz
add
outsb
or
or
mov
cmp
popf
inc
cmp
pusha
lds
lret
loope
lock
xchg
and
int
popa
push
sbb
sbb
jno
jmp
jbe
dec
sti
pop
adc
cmpsl
lea
int3
add
cmp
fdivrs
and
bound
adc
inc
test
inc
sub
add
and
hlt
icebp
repnz
and
xchg
xchg
aas
fwait
pushf
das
das
add
and
sub
mov
movsl
lcall
scas
pop
les
sbb
mov
fimuls
lds
or
shlb
repz
jmp
iret
cmpsb
dec
and
mov
pop
call
arpl
sub
loopnew
pop
movsb
sbb
dec
sub
mov
sub
icebp
sub
xchg
in
ret
out
inc
fldcw
sbb
iret
xchg
mov
fs
mov
push
call
mov
mov
adc
loop
jp
mov
stc
add
sbb
mov
test
push
inc
fldenv
in
adc
dec
in
mov
out
dec
imul
popa
inc
cld
lock
cltd
into
sub
jl
lret
mov
sahf
nop
movsb
rclb
pop
rclb
sti
test
jle
int3
sbb
sub
mov
repnz
outsb
mov
movsb
add
xchg
daa
adcl
ds
int3
rol
xchg
push
pop
xlat
and
mov
jnp
out
cmp
sbb
jmp
sub
mov
cmp
cmc
ficompl
dec
in
cmpsb
xchg
inc
hlt
sub
hlt
daa
mov
int
cmp
incb
or
push
test
mov
cmp
mov
mov
fistl
xchg
pop
push
pop
jnp
loopne
push
pop
outsl
rorb
dec
xchg
rcrl
dec
iret
sti
push
pop
and
call
push
ljmp
pop
and
ret
push
mov
sbb
fcoml
add
je
imul
pushf
mov
into
inc
int3
mov
dec
cmp
or
push
stc
dec
cli
xchg
es
and
sbb
push
arpl
test
xchg
mov
ljmp
add
fisubrs
dec
roll
ror
aaa
nop
mov
out
jge,pn
sub
jecxz
std
dec
mov
lret
cwtl
adc
lods
mov
enter
sbb
push
or
push
jnp
adc
test
leave
lcall
cld
mov
insb
jge
incb
cmp
mov
cwtl
popf
daa
cmpl
fidivs
mov
push
mov
loope
jp
cmp
xor
xchg
mov
out
xchg
inc
mov
ljmp
sbb
jge
add
movsl
jnp
lcall
mov
sbb
mov
dec
mov
cmp
or
jp
sbb
or
xor
popf
mov
add
push
movb
scas
jb
adc
aaa
push
out
xor
push
dec
mov
xor
decl
pusha
xor
stc
sbb
ds
adc
lods
stos
sub
ss
int3
mov
sahf
rorl
cld
pop
nop
xor
test
dec
cmpsl
sub
mov
in
nop
and
or
ljmp
fnstsw
or
pcmpgtb
jp
repnz
stos
mov
sub
ret
test
push
adc
push
mov
xor
outsl
bound
test
xchg
pop
outsb
mov
mov
inc
mov
dec
sti
imul
xor
icebp
imul
mov
ss
lret
and
mov
les
pop
push
xorl
ljmp
dec
cwtl
movsl
inc
and
xor
push
fadd
icebp
test
dec
add
add
js
jnp
and
enter
fstl
inc
jne
and
jo
aas
sbb
sbb
mov
sbb
fxch
rcr
nop
popa
orb
mov
mov
or
cld
adc
sbb
mul
inc
add
xchg
mov
lods
fwait
sbbl
outsb
pmullw
xchg
mov
mov
mov
xchg
lock
insb
jae
jl
adc
xchg
into
push
cmpsb
hlt
lahf
lds
add
inc
ret
adc
dec
fwait
adc
jae
inc
inc
fimuls
aad
xorl
test
jl
int
movsl
sbb
sub
xchg
xor
pusha
popa
jns
out
out
or
push
pop
cmp
sbb
jno
xor
inc
jp
push
add
mov
sbb
push
mov
dec
push
cmpsl
cmp
js
push
dec
mov
mov
outsb
std
adc
inc
scas
mov
insb
or
add
push
or
shr
xchg
add
push
cltd
pop
xchg
mov
ja
cmp
jb
adc
mov
cmpsb
popf
outsl
cwtl
push
dec
cmp
mov
ds
popf
sti
lock
nop
jnp
jb
or
push
lea
iret
test
test
fstpt
and
in
dec
and
scas
aaa
mov
mov
adc
mov
sar
inc
out
cltd
ds
popf
jle
outsb
gs
xor
aaa
insb
dec
es
xchg
push
scas
jno
xor
sti
call
jo
push
imul
andl
push
daa
mov
or
shll
dec
adc
sub
sbbb
dec
stc
inc
xor
push
sbb
pop
popf
stos
jns
jmp
mov
notrack
jmp
mov
dec
add
and
sub
in
push
sub
inc
xchg
insl
ja
push
pop
out
mov
pop
sbb
push
das
xor
js
lock
xor
xor
dec
insb
loope
popa
push
and
in
fildl
adc
enter
pop
xchg
xor
add
xchg
xor
dec
adc
out
shr
mov
call
xor
imul
cmp
enter
int3
mov
into
pop
sbb
push
aam
ret
pop
je
fstps
shll
sbb
dec
mov
pop
cmp
and
jae
cmc
test
adc
imul
add
dec
xchg
push
in
fwait
jmp
movsb
movsb
pop
push
fdivrl
mov
shlb
sahf
push
lods
add
std
push
pop
orl
dec
loop
stc
xchg
pushf
mov
loop
cs
mov
shll
cmp
nopl
xor
je
xchg
lahf
mov
xchg
mov
cmp
ret
jp
lcall
imulb
add
movsl
and
jl
jnp
jae
or
insb
sub
test
add
cmp
add
xchg
mov
pop
inc
call
pop
and
std
push
pop
ret
push
fnsave
ret
in
loope
and
mov
mov
int
inc
pop
push
and
cs
push
stc
adc
stos
cmp
into
into
mov
jne
sbb
push
mov
scas
jmp
gs
inc
pop
or
jmp
loope
mov
jg
clc
xchg
fwait
in
push
lret
push
ret
insl
lahf
movsb
adc
gs
xchg
push
xor
movsl
pop
gs
fwait
popa
dec
dec
add
pop
scas
xchg
push
fldcw
xchg
shr
fimuls
jno
add
push
mov
das
add
pop
in
dec
dec
pop
sbb
clc
sub
fcmovbe
in
enter
data16
loopne
mov
dec
dec
inc
sahf
jmp
es
notb
adc
lock
pop
jge
xchg
aam
or
mov
cmp
scas
mov
pusha
adc
lret
push
mov
movsl
inc
mov
inc
cmpb
dec
jo
fcmovb
xlat
mov
push
dec
ja
fsubr
mov
mov
pusha
mov
xchg
cmp
fnstcw
lods
rcrb
fucomi
hlt
adc
cmp
cmp
in
call
sub
in
std
jl
lea
push
jp
pop
out
fchs
sub
and
call
push
inc
test
bswap
imulb
cmp
in
imulb
fucomi
in
jo
inc
xchg
inc
inc
dec
cwtl
scas
dec
cli
out
sub
mov
mov
testl
aaa
stos
das
mov
xchg
repnz
aad
add
cmp
dec
iret
imul
xchg
nop
mov
dec
cmp
push
test
push
das
push
add
mov
mov
dec
inc
loopne
or
lods
push
sahf
push
pusha
push
push
loope
xchg
mov
jno
sbb
aas
or
popa
push
pop
outsb
movsb
out
cli
jle
lds
lock
mov
scas
lahf
test
bound
lret
inc
int3
out
cs
pop
fs
sbb
mov
and
hlt
out
jne
sti
adc
mov
mov
dec
out
gs
xor
mov
jp
sarb
and
sub
mov
mov
dec
xor
xchg
mov
and
scas
dec
dec
stc
mov
scas
xchg
aas
push
adc
fidivl
movsb
pop
mov
or
mov
mov
stc
and
sub
cmc
push
adc
fisubs
pop
fs
dec
mov
dec
je
or
sti
mov
push
lahf
into
add
es
mov
adc
xchg
jg
add
shll
and
sub
dec
mov
mov
rorb
out
pop
roll
mov
shll
add
filds
push
stos
sub
enter
jl
push
adcb
and
sbb
pop
divl
inc
cmpb
add
sti
or
repnz
fldcw
xchg
outsl
mov
js
arpl
or
dec
inc
imul
mov
add
hlt
or
popf
icebp
jo
icebp
int
sti
inc
sub
push
sbb
iret
arpl
cmc
push
push
rolb
outsb
incl
sub
and
out
mov
jns
xor
pop
in
mov
mov
mov
aas
arpl
dec
cmp
jmp
mov
aad
fdivrl
js
push
dec
push
lret
lret
ss
adc
sbb
jne
sbb
mov
xor
insb
sarl
rcll
ret
mov
icebp
jns
mov
repnz
repz
jl
cmpsb
add
mov
out
mov
push
inc
mov
fists
xchg
sub
sbb
nop
jl
jno
push
mov
mov
sahf
adc
cltd
daa
jo
int3
and
xchg
pushf
mov
fidivl
xchg
sbb
fbstp
outsb
sub
fbld
ss
adc
push
push
repz
iret
rcrl
stos
xor
test
add
mov
mov
push
push
in
add
ljmp
or
enter
ja
inc
nop
int3
xchg
cs
and
das
inc
jbe
jecxz
mov
xor
js
jnp
xchg
inc
jl
push
or
mov
dec
jle
xchg
stos
mov
inc
scas
inc
lea
js
push
pop
pop
mov
fisttpl
dec
and
scas
dec
jmp
xchg
bound
pop
pop
ret
dec
xchg
ljmp
aaa
aam
pop
xor
mov
and
orl
in
imul
out
xor
xor
aaa
pop
std
pop
push
mov
fwait
lds
rorl
out
mov
sbb
ljmp
andl
sbb
adc
cmpsb
cltd
shlb
orl
mov
mov
in
jecxz
sub
mov
punpcklwd
ret
shl
loop
jno
pop
shr
jne
out
cs
push
call
andl
gs
push
jne
lods
xchg
sbb
in
gs
pop
ja
mov
loope
or
lds
lret
xor
test
or
pop
ja
mov
leave
jge
mov
inc
fisttpll
mov
xchg
cmc
out
jns
adc
xchg
mov
xor
imul
stos
push
sub
or
lods
out
mov
adc
or
scas
into
sbb
test
mulb
frstpm(287
ret
jbe
and
and
ret
ret
fmuls
inc
push
mov
cmp
jo
push
sub
and
addr16
fwait
adc
fwait
movsl
insb
mov
into
and
scas
js
dec
sbb
fcoml
mov
adc
and
or
push
cmpsb
pop
xchg
xchg
pop
add
push
fisttpll
fldenv
and
shlb
fldenv
shlb
dec
and
sbb
push
and
sbb
pop
xchg
mov
lods
std
les
mov
xchg
daa
push
loop
cmpsb
cmp
or
pop
dec
in
pusha
gs
jg
in
outsb
adc
lret
sbb
jp
sbb
mov
movsb
repz
addr16
ret
cmp
push
dec
mov
cs
jne
mov
inc
and
cltd
pop
fwait
mov
and
jge
cmc
into
stos
mov
fwait
jl
std
rcrl
cmp
push
out
sbb
nop
sub
xchg
outsb
call
jbe
shrb
push
mov
mov
xchg
fisubrl
cmp
add
inc
movsb
dec
jae
and
pop
repz
fiadds
leave
xchg
imul
out
or
xchg
mov
mov
xor
fsubs
push
dec
sub
jnp
or
pushf
mov
rorb
aas
xchg
nop
mov
jmp
inc
dec
scas
jmp
rcrl
out
movsl
sub
and
lcall
cltd
movsl
mov
xchg
dec
mov
in
aad
sbb
jmp
into
lcall
add
je
jo
loopne
cwtl
jno
test
int3
fstpl
xor
adc
adc
xor
adc
sbb
xor
cmp
jbe
js
fisttps
mov
jmp
sub
repnz
adc
adcl
sbb
fstp
add
pop
pop
dec
in
and
and
sub
xlat
add
imul
xchg
mov
int3
js
xchg
fcmovb
push
fistpll
inc
xor
out
fdivs
push
adc
ds
in
lcall
out
out
aad
mov
inc
mov
mov
dec
add
insl
cmp
mov
lods
inc
scas
loopne
mov
dec
pop
mov
cmp
in
cld
cltd
repnz
ret
sub
sbb
pop
test
mov
xchg
xchg
cltd
push
adc
dec
fstl
and
sub
xlat
jbe
cld
outsb
addb
mov
pusha
and
jp
es
mov
aaa
xor
xor
repz
movsl
xor
sub
mov
sbb
ror
jns
xlat
sbb
pop
out
daa
adc
push
imul
mov
addr16
scas
adc
jnp
js
xchg
fbstp
mov
push
push
cmp
and
xor
fistps
das
push
mov
pop
outsl
sbb
jecxz
rol
pushf
xchg
and
shlb
mov
pusha
sub
mov
les
xchg
adcl
iret
push
sub
cmp
stos
fcom
jecxz
xorb
mov
cmp
cs
das
insl
stos
inc
pop
add
dec
ret
divb
push
aad
inc
lods
xchg
push
testb
jo
and
repz
xorl
jl
mov
testb
stc
sbb
and
sub
sub
cmp
bnd
or
mov
test
iret
mov
ja
andl
dec
call
push
xchg
and
daa
and
xor
jl
inc
insl
sub
sbb
mov
test
xchg
or
pop
ljmp
adc
pop
arpl
ja
mov
cs
mov
xchg
in
xor
or
sub
sbb
dec
aam
int
mov
cwtl
lret
jmp
and
push
fsubrs
push
sub
jns
les
mov
mov
add
dec
in
in
shrl
cmpsb
push
xor
xchg
aas
lret
in
js
push
leave
into
add
and
jne
ret
in
add
fdivs
pop
cmc
adc
fmuls
rcrl
jmp
push
xlat
pusha
rcll
enter
shlb
push
sarl
rolb
adc
in
divb
pop
pop
xchg
repz
lods
or
cmp
fmull
fwait
stc
out
and
lcall
pop
mov
loop
and
lds
lods
sub
cmpl
outsb
stc
cmp
incl
add
into
addr16
push
xchg
adc
shll
sbb
xor
rorl
jle
insl
scas
mov
cld
xchg
sbb
stos
cmp
and
mov
imul
mov
xor
shlb
lods
jle
pop
repz
fs
in
push
rcrl
or
hlt
or
xchg
sti
hlt
fstpt
mov
sbb
lcall
leave
push
xorb
iret
jl
int
ss
sbb
pop
test
subl
mov
imul
pop
jle
sahf
sbb
aaa
out
xchg
sbb
addr16
test
insb
cmp
out
cltd
in
out
arpl
pushf
or
lock
testb
dec
xor
adc
mov
rol
daa
je
push
mov
sub
std
les
xchg
int
jp
or
pop
or
push
xlat
icebp
xchg
outsl
xchg
pop
cltd
mov
test
lahf
daa
scas
mov
shr
leave
inc
inc
es
movsl
push
movsb
ds
ror
shrb
negl
lea
add
andl
mov
clc
inc
incl
hlt
jg
pop
mov
out
aam
mov
scas
jecxz
test
jmp
out
pop
fdivrl
and
sahf
pop
rol
mov
and
into
gs
notb
jb
adc
test
adc
push
mov
pop
xor
xchg
into
repnz
js
adc
mov
scas
and
ds
shll
xchg
imul
add
lock
push
xchg
xlat
adc
adc
test
pop
arpl
inc
sbb
orl
fdivrl
movsb
arpl
pop
nop
bound
xchg
movsb
xchg
cmpsb
dec
and
add
cmpsl
cs
scas
or
pusha
jl
xchg
mov
ret
sti
sub
cmp
icebp
jb
scas
std
xor
and
fsubl
lcall
jg
adc
inc
xlat
mov
jl
ss
pushf
ficomps
cs
cltd
jmp
xchg
addr16
mov
imul
popa
push
gs
dec
sbb
outsb
mov
repz
push
jmp
imul
mov
repnz
sbb
test
mov
addb
adc
movsb
jmp
and
pusha
add
rcl
stos
dec
hlt
out
rolb
pusha
sbbl
inc
xor
movsl
stos
xchg
add
pop
push
outsl
push
mov
inc
sub
jmp
out
sahf
loopne
mov
aad
ljmp
push
scas
jne
xchg
mov
inc
repnz
fnsave
cmpsb
ss
arpl
fistpl
or
lret
xchg
orb
lods
mov
dec
popa
lret
into
xchg
mov
xor
scas
xchg
mov
xlat
sbb
and
push
cs
add
test
jbe
mov
into
inc
test
jecxz
mov
adc
adc
test
mov
and
xorb
mov
lret
int3
loop
adc
clc
adcl
or
enter
outsb
sub
leave
lret
outsb
pop
hlt
movsb
inc
push
lods
dec
lock
ja
cmp
jp
rol
push
xor
insb
ljmp
and
movsb
clc
add
sub
dec
ficoml
divl
int3
push
addr16
xorl
int
icebp
jl
adc
or
arpl
iret
gs
repz
out
leave
cld
inc
cmp
dec
adc
mov
add
fldt
cmp
out
or
lret
gs
lock
sub
xlat
popa
into
pop
cmp
mov
daa
inc
xchg
cmp
int
insl
scas
xchg
mov
cmp
and
push
enter
inc
inc
loop
ror
jg
dec
mov
out
or
xor
pop
popl
mov
nop
ret
jno
cmp
cmpsb
dec
sbb
push
cli
push
jns
adc
lds
mov
lds
push
add
negl
pop
adc
and
mov
push
into
dec
jae
push
jns
inc
movsb
dec
imul
fwait
sub
test
fcmovbe
xchg
cmp
lock
in
loope
out
sub
jge
in
and
insl
repz
fs
adc
xlat
int3
cmpsb
mov
out
mov
dec
pop
mov
or
jl
insb
outsb
fmull
orb
pop
cmp
push
add
lods
pop
jnp
aaa
pop
and
pop
int
fildl
or
inc
imul
shrl
in
test
sub
rcrl
push
jae
pop
pop
cmp
adc
dec
lahf
xchg
adc
clc
loopne
out
cwtl
ja
mov
dec
outsb
sbb
nop
mov
pop
imul
and
roll
sub
xchg
push
adc
mov
stos
add
xchg
es
mov
daa
sbb
and
repz
mov
cmp
cmp
shlb
lea
nop
push
shl
fwait
std
lods
jbe
lea
add
jno
xchg
in
mov
inc
add
dec
rclb
mov
and
lahf
and
cmpsb
lcall
rcll
mov
add
fstpt
repnz
enter
rcl
test
or
stc
push
pop
sub
cmp
int3
mov
outsl
adc
lea
pop
push
das
sub
xchg
pop
aad
xchg
inc
ljmp
or
pop
in
inc
lret
add
xlat
negb
shr
mov
mov
ficompl
xchg
lret
ss
mov
js
cmp
loope
in
test
ret
push
insl
cmp
inc
pop
test
and
dec
xor
lea
nop
roll
inc
call
mov
nop
mov
inc
xor
insb
push
xor
cmc
dec
push
add
mov
enter
int
pop
scas
data16
ficomps
lcall
mov
xor
lcall
cmc
jl
mov
or
mov
aad
or
cmp
hlt
std
jg
idivb
clc
inc
push
ret
in
and
add
mov
pop
cli
ret
inc
ret
daa
inc
daa
out
fistps
inc
jo
jecxz
fs
xor
test
inc
push
je
repnz
insb
fcomip
stos
frstor
mov
repnz
ja
repz
dec
mov
arpl
jno
mov
bound
pop
popf
mov
or
lret
xchg
mov
or
test
xchg
inc
sbb
insl
fstpl
pop
es
adc
inc
cmp
and
mov
mov
fadd
lds
cwtl
add
movsl
loop
pop
mov
cld
aas
pop
dec
hlt
or
es
xchg
dec
add
shrb
cmpsl
adc
cs
push
pop
jecxz
in
sub
cmc
inc
icebp
or
aaa
and
inc
xlat
ds
movsl
xchg
xchg
mov
jns
jae
inc
rorl
mov
imul
outsb
add
outsl
jecxz
sarb
mov
xor
and
sub
dec
mov
push
testb
sub
les
or
lock
add
pop
mov
cld
inc
test
test
xor
jnp,pt
mov
fidivrl
lret
pop
cwtl
movsb
jmp
or
into
sub
icebp
out
test
lret
push
test
push
ret
imul
je
cmpb
dec
jbe
shr
rolb
mov
ret
dec
mov
xor
dec
pop
push
push
f2xm1
xor
jg
pop
inc
inc
mov
fwait
sub
xchg
sbb
lret
mov
outsl
or
out
insb
leave
mov
pusha
pop
or
mov
adc
repnz
mov
cmpsl
pop
mov
fsubr
int
das
jnp
orl
jne
and
mov
add
dec
ja
lahf
add
ret
icebp
fistps
and
adc
mov
inc
jne
sub
insb
ds
lds
push
mov
push
out
aaa
std
fidivs
mov
cs
jg
nop
pusha
addl
rcrb
xchg
lods
push
add
sbbl
lock
nop
cli
inc
pop
xchg
js
int
push
dec
adc
in
addl
jb
add
and
lea
cmp
stc
movsl
push
stos
xchg
shl
call
sbb
scas
rcrl
aad
fstpl
imulb
sbb
push
xor
sub
popf
shr
stc
adc
push
adc
outsb
inc
sub
popa
push
or
jg
push
and
or
and
mov
out
std
xchg
ret
inc
mov
mov
pop
xchg
pop
je
xor
insb
xchg
aad
movsl
sarb
outsl
xchg
nop
daa
dec
fsubr
xchg
xchg
xlat
loop
popa
sbb
outsb
cmc
mov
and
test
jp
xlat
ss
mov
xchg
xchg
push
push
roll
cmpsb
mov
scas
dec
push
pop
notl
sub
hlt
add
sub
sbb
das
push
push
jge
mov
dec
xchg
jnp
pop
cmpb
test
cmp
outsb
test
push
xchg
push
repz
pop
jge
adc
sub
jge
or
xchg
mov
js
push
aam
and
sub
sub
pop
icebp
les
inc
pop
sbb
add
mov
pop
pop
sub
xor
and
dec
jl
repz
into
test
subl
int
xchg
add
dec
inc
mov
js
mov
xor
rcr
mov
pushw
aad
pop
cld
das
cmp
in
call
cmp
popf
dec
pop
ljmp
cwtl
ret
int3
mov
cmp
fnstcw
fucomi
mov
sub
sbb
addb
or
sub
cmp
mov
dec
popf
jecxz
jno
dec
sub
ljmp
notb
int3
inc
mov
dec
mov
jg
insb
xchg
fstpl
inc
mov
ja
shrl
push
pop
stc
dec
inc
sub
in
fmul
pop
pop
inc
out
inc
adc
sbb
jo
xchg
xorb
mov
mov
mov
int
div
mov
js
jp
adc
xchg
mov
xlat
sbb
imul
push
adc
flds
rorl
jl
pop
mov
mov
pop
fildl
adc
push
pop
sub
mov
int3
test
nop
scas
xchg
imul
enter
fistl
lcall
popa
pop
xor
sar
call
ret
lret
add
stos
adc
or
inc
mov
insb
rep
lods
adc
iret
or
std
in
fcom
repz
mov
icebp
dec
push
rcl
iret
mov
cld
push
and
cmc
jno
mov
xor
inc
mov
and
ret
sahf
divb
arpl
push
xchg
sub
pop
pop
ja
bound
dec
inc
add
mov
ljmp
mov
jge
pop
in
cmp
xchg
cli
pandn
or
dec
call
push
sbb
and
mov
jbe
fstpt
inc
out
cli
mov
out
ljmp
xlat
lret
std
test
es
pusha
adc
lcall
xor
dec
ljmp
push
movsl
test
fbstp
mov
movsb
sub
push
rcrb
popa
mov
es
dec
push
mov
xor
push
outsb
inc
sub
popa
push
or
subb
inc
int
aam
dec
fs
mov
dec
lret
or
aas
iret
out
or
add
add
out
adc
mov
cmc
xchg
add
arpl
mov
xchg
mov
jno
xor
addr16
in
test
push
loop
sti
cmp
xchg
mov
jle
dec
ds
inc
xchg
aaa
xchg
lods
daa
subl
aad
and
lret
sbb
pop
xadd
xor
imul
ja
mov
paddd
fidivl
roll
data16
mov
addl
call
pop
rclb
in
loopne
mov
ja
stc
dec
mov
loopne
push
inc
scas
xlat
dec
mov
fisubrs
xlat
cltd
clc
dec
lret
or
mov
ret
sbb
in
jmp
pop
pop
jp
cmp
out
jmp
rorl
mov
cld
lods
stc
stos
aad
in
xor
push
cli
aad
stos
add
outsb
dec
jge
or
push
push
loopne
stc
pop
imul
jge
daa
push
clc
jae
dec
lahf
push
mov
clc
mov
in
repz
sbb
or
pop
add
fists
test
cmp
sub
jns
ja
dec
mov
jae
das
shlb
out
lret
in
xor
pop
push
scas
shlb
lcall
aam
lods
pushf
icebp
daa
mov
mov
inc
lods
dec
xor
movb
sub
sub
in
lahf
xor
cmpsl
repnz
sub
add
cmpsl
movsb
imul
out
sbb
cld
stos
and
in
pop
and
jge
dec
cmc
stc
icebp
cmp
imul
inc
cmp
jp
jnp
sbb
cmp
mov
aad
out
pop
scas
leave
mov
ss
xlat
inc
fisttps
jbe
pop
insb
fcom
movsb
cmp
push
push
pop
movsl
mov
or
sub
shrb
imul
or
int3
xorb
fstps
inc
or
std
in
enter
push
xchg
push
in
push
popl
popf
pop
into
out
sbb
mov
xchg
pusha
cmc
aad
inc
or
or
jl
or
int
ljmp
mov
fucom
jecxz
ljmp
mov
push
mov
out
out
fdivrs
and
daa
stos
ds
insb
mov
dec
sub
rorb
sahf
dec
add
fistpll
divb
pop
outsl
aas
mov
mov
xor
xchg
or
scas
mov
outsl
mov
cs
jb
out
in
mov
out
mov
aad
scas
and
lret
jge
xchg
or
nop
push
sbb
cmc
cmp
mov
xor
pop
rcrl
fisubl
xor
adc
popa
and
arpl
adc
sub
push
loopne
xor
into
inc
or
add
dec
push
cmp
lcall
cmpsl
mov
jb
enter
imul
jns
xor
lret
xor
adc
sbb
aaa
add
movsl
std
sub
pop
and
mov
pop
mov
xor
xchg
ret
int
fwait
add
and
xor
push
xchg
mov
pop
mov
xor
xchg
ret
int
psubq
enter
ss
and
xchg
mov
fdivrs
mov
addb
sarb
ds
ja
nop
dec
fmull
les
lcall
scas
pop
inc
inc
leave
pop
dec
adc
jle
add
repz
stc
pop
test
jle
xor
or
sbb
cmp
push
pop
mov
mov
icebp
adc
es
mov
insb
decb
test
ss
test
gs
xchg
mov
fisubrs
daa
push
call
cmp
jmp
add
inc
mov
cltd
xchg
leave
adc
test
sti
jp
xor
scas
not
mov
sbb
cmc
stos
or
jp
mov
lret
adc
cmp
stos
shl
data16
mov
fists
insl
mov
xor
andb
or
ss
movsl
in
insl
jo
push
dec
sbb
sbb
add
pop
pop
add
push
sbb
sbb
stc
adc
add
rcr
cmpsl
inc
sub
sbb
add
addr16
mov
push
push
mov
int3
fcmove
fcoml
ret
dec
push
and
sbb
leave
xchg
mov
andb
ret
and
ret
ret
adc
rcrb
movsb
mov
repz
inc
outsl
dec
scas
inc
sbb
jno
mov
call
cmpsl
sarb
sbb
or
sub
sbb
daa
pop
daa
pushf
mov
dec
ret
cli
mov
mov
mov
jae
push
and
xor
sbb
pop
sbb
jecxz
popf
scas
inc
addl
mov
adc
sub
adc
add
cmpsl
lods
lret
fsqrt
pop
std
insl
mov
cmp
sub
leave
adc
gs
push
call
sbb
adc
adc
dec
pop
cmpb
jecxz
in
movsl
out
sub
mov
loopne
lods
ljmp
sub
ret
aas
mov
fcmovnb
dec
enter
lcall
xor
mov
hlt
jo
fildll
pop
pop
cmp
sub
mov
push
xchg
cmpsl
mov
xor
or
imul
xchg
or
sti
xchg
aaa
push
js
pusha
das
mov
scas
inc
aam
sub
mov
mov
cmp
jne
sbb
mov
ja
inc
xor
sbb
pushf
sub
into
fwait
dec
adc
fistpl
out
inc
sub
mov
push
and
push
mov
test
out
xchg
add
in
scas
push
mov
jmp
xchg
lahf
and
push
fs
mov
lods
dec
shll
in
inc
inc
push
or
jb
xchg
mov
pop
mov
ljmp
cmp
push
ljmp
mov
adc
xor
mov
add
sub
add
pop
sub
mov
or
addb
repnz
mov
cmp
push
ret
xorl
pop
mov
sbb
mov
int
cs
mov
scas
pop
sti
aas
cmpsl
fs
push
adcb
jp
stos
sahf
sti
pop
push
cmpl
negl
fsubl
jb
adcl
xchg
sbb
call
sub
mov
and
push
jg
int
cwtl
loope
bnd
loop
xchg
popf
jmp
mov
dec
sub
repz
xor
dec
cmp
in
pop
and
mov
xchg
jp
and
push
ja
add
int
mov
lret
xchg
popf
mov
inc
mov
lret
dec
add
sahf
push
jle
fbld
adc
push
or
rorb
mov
dec
dec
call
cmp
jp
int3
xor
out
notl
push
subl
sbb
mov
adc
test
lods
and
cmp
cwtl
xor
xor
shll
sbb
int
jno
jb
clc
cmpsl
leave
mov
imul
enter
cmpsb
syscall
pop
arpl
loope
mov
mov
jno
int
jmp
or
hlt
mov
push
ret
add
xchg
add
dec
adc
xchg
cmp
enter
and
and
cmc
loopne
lret
xchg
add
test
in
or
repnz
xchg
int3
jmp
in
adc
jp
and
xor
dec
xchg
mov
cmp
cmp
pop
push
lret
xchg
push
das
sahf
lds
jne
sub
adc
sbb
push
rolb
mov
stos
lods
sub
shlb
jg
ljmp
jmp
sub
adc
sub
lret
mov
data16
test
pop
cmpsl
dec
cld
mov
mov
inc
push
mov
mov
cld
imul
ret
jno
loopne
ret
pop
dec
je
push
adc
outsb
das
in
sbb
add
adc
out
les
mov
movsl
aas
and
and
movsb
rcrl
lcall
fistl
test
lret
push
bound
pop
xor
clc
mov
lods
rcrl
pop
push
fwait
jne
andl
pop
mov
push
push
and
cs
push
cltd
mov
jecxz
stos
push
shl
jae
add
scas
test
xchg
stc
daa
mov
cli
data16
shll
arpl
cmpsb
xchg
lahf
and
push
fs
mov
lods
dec
shll
pusha
ja,pn
pop
adc
push
adc
xchg
mov
pop
or
leave
mov
push
shlb
into
jg
mov
xor
xor
mov
mov
sbb
xor
nop
lods
loope
outsb
loope
movl
dec
call
mov
jl
add
mov
aad
cli
add
jp
lret
dec
and
xchg
into
mov
mov
adc
repz
es
pop
sbb
iret
inc
bound
in
in
mov
dec
or
pop
dec
lret
sbb
loopne
sbb
mov
sub
fdivr
in
inc
aad
pop
mov
popf
inc
inc
cmp
xor
mov
sahf
mov
push
mov
mov
call
add
dec
lock
and
adc
fisttpll
push
pusha
mov
dec
sbb
xlat
add
cmp
mov
push
inc
imul
negb
fadd
popa
ret
push
add
sbb
orl
mov
not
adc
push
fucomip
js
mov
and
mov
xchg
jp
and
push
ja
add
int
mov
lret
xchg
popf
mov
inc
mov
lret
dec
add
sahf
push
jle
fbld
adc
push
jg
sbb
mov
dec
push
mov
fcompl
sbb
pop
fisttps
jmp
aas
cmp
in
mov
xchg
cmove
sbb
mov
xchg
cmp
jns
xor
fwait
dec
jle
dec
mov
mov
xchg
push
mov
dec
aam
decl
gs
mov
mov
hlt
sbb
pop
mov
or
mov
jbe
ficoms
push
cli
mov
xor
repz
nop
leave
scas
in
imul
xchg
xchg
push
movsb
mov
and
and
adc
push
dec
jecxz
popf
scas
inc
addl
hlt
mov
mov
xor
addl
xchg
xchg
dec
int
inc
das
aaa
mov
popa
mov
xor
dec
rcrl
divb
jmp
lock
sarl
lea
jo
pop
xor
out
jne
sarl
loop
mov
out
pop
mov
lret
cmp
xlat
test
xchg
inc
jns
test
and
mov
pusha
cli
lahf
aas
cld
jmp
stos
or
loop
fidivrs
shl
xchg
or
es
cmp
cmp
inc
xor
mov
jne
pop
sub
push
stc
fbstp
xor
popf
push
shll
cmpsb
pusha
or
adc
jl
subb
insb
jnp
push
mov
cmp
dec
enter
dec
cmc
adc
in
stc
pop
subb
or
mov
push
pop
test
sbb
bound
fisubl
or
dec
adc
test
popf
push
mov
pop
push
or
adc
and
cli
loop
push
or
adc
in
sbb
out
aam
mov
add
sub
jg
push
mov
or
xchg
icebp
mov
lret
jecxz
popf
scas
inc
addl
cmpsl
jns
arpl
prefetch
or
sbb
and
cmp
inc
push
mov
mov
lds
mov
mov
add
dec
mov
inc
adc
stc
fbstp
shr
pop
mov
xor
push
scas
adc
xchg
out
cmp
lock
pop
and
inc
iret
sbb
hlt
arpl
enter
jbe
bound
add
jecxz
jecxz
inc
fsub
inc
mov
push
mov
cmp
pusha
dec
push
call
jns
fdivr
mov
addr16
bound
mov
jle
test
push
sbbb
adc
addl
shr
insl
xor
jb
fidivrl
arpl
sbb
mov
adc
test
pop
lds
inc
popa
jle
or
adc
adc
sbb
dec
mov
jae
adc
leave
bound
daa
inc
icebp
sbb
shll
loop
mov
pop
inc
rorl
pop
movsb
adc
xor
std
bound
adc
jecxz
insl
notl
test
mov
in
or
sub
and
std
leave
or
jl
adc
inc
xchg
mov
aaa
mov
int
call
xchg
ss
or
popf
dec
loope
inc
ljmp
lea
inc
sbb
test
ret
dec
sti
or
jl
adc
out
mov
adc
aas
enter
push
jmp
push
pop
movsb
or
stos
cmc
popf
imul
stc
push
sub
fwait
xchg
and
test
ficompl
inc
inc
into
mov
mov
daa
loop
int
push
mov
ljmp
jnp
cld
test
and
test
jae
inc
jecxz
add
pop
je
mov
shlb
aaa
pop
lret
dec
cmpl
dec
ret
dec
lret
cwtl
mov
push
in
aas
fwait
xlat
or
in
cs
jo
add
sahf
adc
mov
mov
xor
sbb
mov
imul
int
adc
inc
adc
call
push
inc
mov
rclb
out
xchg
loop
repnz
cmp
adc
outsb
mov
xchg
stos
test
dec
out
cmp
decb
and
xor
fadds
cmc
out
clc
pop
inc
movsl
in
das
sub
fucomip
inc
mov
arpl
fsubrp
mov
loope
cmp
lods
dec
mov
data16
es
jmp
gs
out
ss
dec
js
aaa
scas
sbb
sub
mov
cmp
add
push
sbb
or
ror
std
cmp
push
outsb
ljmp
jb
repnz
fs
shlb
dec
or
add
sbb
clc
out
ror
cmpsb
iret
test
jb
mov
mov
sarb
aaa
push
cmp
ret
xchg
or
jge
in
dec
push
pusha
cmp
movaps
xor
and
clc
aas
pop
or
enter
push
inc
rcll
push
sub
cmpsl
outsl
scas
cmp
ds
stos
cmpl
mov
pop
insb
inc
fs
mov
ret
test
mov
lcall
insl
push
cmp
lea
repnz
aaa
repz
js
aaa
cmc
int
mov
adc
inc
pop
jbe
xchg
sbb
mov
jo
mov
loopne
and
jecxz
xor
sbb
out
or
add
cld
mov
sti
into
loope
fucomip
rol
rorb
xor
and
dec
pusha
sbb
out
and
jne
mov
cltd
stos
adc
mov
sbb
or
cld
sbb
loopne
nop
adc
fimuls
movsb
jge
or
lret
push
mov
or
imul
imul
ja
xchg
push
or
leave
ds
mov
cmp
dec
test
dec
sets
xchg
jb
add
stos
add
sbb
or
out
xor
adc
push
cmpsl
mov
sbb
ljmp
ja
and
sti
cmp
dec
pop
stos
test
pop
sub
sub
xorb
add
rcrb
and
sbb
in
mov
dec
push
lret
mov
sahf
pop
test
loop
ret
push
sahf
sub
pop
out
dec
sbb
je
shlb
sahf
adc
aad
sbb
lahf
mov
ret
pop
and
mov
pop
stos
or
or
movsl
les
sbb
inc
data16
push
movsb
mov
jns
std
cs
cltd
pop
movsl
sub
dec
mov
xchg
lods
sbb
xchg
int
dec
xor
rorb
xchg
mov
cwtl
idivb
popl
xchg
xor
inc
mov
mov
fmull
imul
lock
xchg
cmp
arpl
jg
mov
cmp
test
lcall
xor
fstps
pusha
pusha
mov
jne
lahf
sub
inc
add
jo
or
fwait
add
sub
outsl
add
push
adc
data16
out
add
cmc
dec
movsl
xor
ror
push
and
push
sbb
pushw
push
mov
push
inc
mov
xor
std
arpl
nop
mov
test
stc
movsl
cltd
dec
xchg
test
mov
sbb
xchg
mov
mov
dec
in
xor
ret
jge
jnp
mov
shlb
cld
hlt
dec
and
fcomps
jno
je
iret
mov
pushf
sbb
add
adc
rcrl
ret
adc
push
jge
jp
mov
pop
int3
das
shlb
rcrl
call
mov
insb
xchg
dec
lods
pop
lds
lods
pop
xchg
in
pop
das
inc
into
xor
sub
and
xor
and
out
or
inc
pop
pop
push
or
inc
in
jo
pop
fnstenv
adc
dec
int
dec
xor
stc
mov
pop
xchg
mov
cwtl
idivb
popl
xchg
xor
xlat
lcall
imul
pusha
sbb
hlt
lea
repz
shlb
sarl
cs
das
pushf
insb
js
pushf
push
movsb
nop
fstp
int3
sub
pop
sahf
or
xorl
pop
rcrb
xor
sub
sub
cli
xor
fldcw
dec
popf
test
dec
in
jb
scas
ljmp
roll
add
sbb
imul
cwtl
mov
outsl
xor
pop
xchg
jbe
mov
push
sbb
aam
cmp
or
lcall
pop
jae
lcall
loope
mov
sahf
add
adc
movsb
cmpsl
scas
pop
les
push
fiadds
insl
cmpsl
adc
mov
xchg
pop
mov
xor
and
daa
inc
bound
in
stos
testl
jg
push
testl
sbbb
sub
shl
xlat
leave
push
fs
imul
inc
dec
movsb
jecxz
push
jo
add
xor
jae
popa
jp
pop
mov
dec
mov
add
ret
stc
andl
leave
std
fcoms
rol
jecxz
loope
or
aad
dec
lods
inc
popf
mov
or
fdivs
sbb
and
out
push
mov
push
addr16
and
lahf
scas
or
xchg
ret
sub
push
in
xchg
leave
xor
inc
jnp
or
add
mov
xorl
bound
stc
in
dec
mov
push
mov
test
dec
adc
pop
rclb
movsb
jecxz
push
jo
add
into
dec
repz
outsl
and
mov
dec
mov
add
out
aam
sbb
xchg
mov
adc
leave
std
fcoms
rol
jecxz
loope
or
aad
dec
lods
inc
popf
mov
or
fdivs
sbb
and
push
dec
dec
and
xor
add
jne
pushf
lret
adc
lahf
scas
or
xchg
ret
sub
cli
mov
xor
inc
jnp
add
out
out
divb
mov
dec
mov
pop
cmp
es
cs
in
mov
shll
or
mov
mov
ret
enter
or
test
mov
dec
nop
adcl
aaa
in
stos
sbb
mov
sub
adc
adc
sbb
int
or
xchg
push
and
fisttpl
sbb
xlat
out
sub
imul
push
add
inc
mov
fistpll
mov
xchg
add
jnp
cmp
mov
cltd
stos
adc
les
test
cmp
outsl
sbb
mov
js
inc
mov
fyl2x
push
enter
or
xchg
sub
xor
jns
sti
stos
cltd
sbb
cmpsl
dec
mov
push
nop
mov
clc
int
out
imul
enterw
shll
xor
shlb
mov
jbe
addr16
clc
ds
jns
cmp
mov
les
xchg
push
leave
push
mov
push
in
push
cltd
insb
out
xchg
lock
sub
sub
xor
sbbb
inc
and
cmp
cmp
fisubrl
push
mov
mov
ret
enter
xor
inc
xor
imul
xchg
or
mov
in
jg
outsb
push
divl
push
sti
stos
ror
lret
aad
sub
pushf
pop
scas
pop
cltd
lods
shr
je
xchg
mov
push
scas
popl
ja
ret
mov
cltd
pop
rcrl
push
decb
cli
adc
sub
aas
movsl
sbb
enter
add
lock
lods
xchg
loop
test
jb
fildll
sbbb
aad
fistl
xor
pop
mov
out
stos
pusha
into
cmpsb
fmuls
jp
mov
jne
mov
cltd
stos
adc
les
test
cmp
cmpl
lahf
loopne
fstpt
and
insl
dec
clc
lcall
bound
fcompl
clc
movsb
push
sti
dec
in
rcrl
cs
xchg
xchg
xchg
hlt
pop
fisubl
and
sbb
jnp
mov
pop
je
loopne
mov
fcompl
xchg
sbb
sahf
insl
push
inc
lods
ss
or
cmp
or
idiv
cwtl
movsl
sbb
daa
or
cmpsb
shll
sub
xor
mov
ret
enter
sub
icebp
fcmovb
dec
test
or
mov
mov
or
or
in
dec
mov
ds
insb
mov
mov
add
mov
mov
jg
and
sub
fwait
out
inc
inc
xor
mov
cmpsl
rcrb
sarl
stc
xchg
filds
ror
inc
pop
cmp
sti
xor
dec
es
cmc
sub
sub
fwait
je
iret
mov
pushf
sbb
add
adc
and
sbb
add
ret
insl
lea
rcrb
lret
cld
sbb
cli
mov
scas
cmp
add
mov
movl
cmpsl
lret
cwtl
push
inc
ds
or
mov
aas
mov
in
cmp
and
int
inc
mov
test
orb
mov
imul
lcall
xor
cs
xor
jno
mov
push
stos
lods
push
mov
or
movsl
sub
mov
add
fdivrl
add
mov
xchg
decb
cld
cmp
ja
sbb
push
rorb
push
stc
xor
inc
sub
xor
jb
cs
cmc
adc
aas
ss
cmp
mov
or
into
ffreep
adc
adc
insl
scas
mov
test
jae
bound
and
dec
call
jns
addr16
and
xchg
jl
dec
fnstenv
js
mov
adc
adcl
mov
mov
pop
data16
jb
nop
pop
mov
xor
xor
mov
and
ret
mov
mov
sbb
mov
xor
dec
sub
mov
mov
mov
add
sub
cs
adc
outsb
dec
xchg
in
imul
adc
data16
jnp
xor
insl
pop
clc
pop
rcrb
push
rcll
sub
lcall
rclb
inc
pop
sbb
data16
sub
in
int3
and
sahf
xchg
add
sar
sbb
clc
mov
mov
adc
sub
popa
push
out
lock
test
inc
in
divb
out
cli
jnp
stos
jmp
into
fsubrs
lcall
stc
sarb
mov
push
jns
sahf
mov
or
pop
shlb
lret
iret
mov
clc
hlt
push
xchg
mov
repnz
push
mov
test
scas
jno
xchg
mov
jge
mov
xchg
xchg
jae
dec
lods
push
add
sub
adc
mov
pop
push
dec
add
push
cwtl
xchg
stos
mov
mov
push
pushf
and
jo
and
dec
fld
xor
adcl
fs
adc
daa
aad
xlat
adc
mov
popa
mov
cmpsb
jmp
or
hlt
mov
xorl
jmp
mov
mov
cmp
rorl
imul
ret
and
into
std
or
mov
or
es
ljmp
sbb
rcrb
addr16
idiv
fsubrl
push
pop
jmp
mov
sbb
sbb
inc
jae
lcall
bound
hlt
or
jl
cs
rol
sbb
jp
cmp
and
int
add
mov
call
adc
sbb
lahf
repnz
jnp
lret
inc
inc
in
add
repnz
ds
mov
adc
inc
pop
jp
mov
push
leave
sahf
jl
pop
xchg
dec
mov
xchg
mov
push
sti
adc
inc
sbb
xor
scas
xor
pop
mov
mov
adc
dec
mov
test
sbbb
cmp
adc
and
mov
jb
lods
xlat
ja
or
jne
je
stc
xor
lds
ret
addr16
dec
push
aad
and
xchg
pushf
stos
cwtl
outsb
sub
or
push
repz
nop
inc
dec
hlt
adcl
cmp
xchg
adc
clc
mov
mov
ret
jb
xlat
popa
jmp
scas
test
add
das
push
jp
and
into
mov
imul
sub
gs
mov
pop
jge
iret
scas
mov
jbe
push
jge
fs
or
jno
adc
outsb
test
xchg
jb
and
vpsrlq
or
aam
mov
stos
sarb
pop
leave
or
add
pop
pop
addr16
inc
std
hlt
sti
fdivs
in
das
and
lea
pop
fcmovnu
inc
and
adcl
or
dec
stc
mov
leave
pop
mov
fdivs
jae
fwait
mov
fdivs
cwtl
dec
fs
in
cld
push
inc
push
dec
cmc
insb
push
mov
addr16
pop
add
rorl
adc
mov
xor
dec
push
adc
mov
loop
mov
adc
out
push
push
adc
jns
aad
cmp
mov
in
popf
push
pop
push
jecxz
je
jae
dec
out
ds
fwait
call
outsl
jb
xchg
das
stos
or
lret
ret
cmp
sub
xor
mov
sub
push
pop
adc
std
mov
mov
les
out
xlat
lea
sub
mov
popa
jl
pushf
arpl
jge
out
out
jmp
hlt
mov
aas
fisubrl
in
enter
or
mov
mov
ret
enter
mov
xchg
leave
jb
lea
sbb
mov
bound
sbb
sahf
and
jmp
mov
in
mov
dec
cmc
dec
cs
pushf
ret
test
insb
jmp
dec
in
fbld
ja
or
enter
leave
mov
pop
jb
lret
or
or
mov
mov
sbb
sub
popa
jmp
scas
std
cmp
add
mov
imul
sub
gs
sbb
push
mov
push
dec
dec
mov
outsb
test
xchg
jb
and
vpsrlq
or
aam
mov
stos
sarb
pop
leave
or
fcomps
inc
std
hlt
sti
fdivs
dec
std
add
push
lods
out
lock
jecxz
or
dec
stc
mov
leave
pop
mov
fdivs
jae
fwait
mov
fdivs
cwtl
dec
fs
in
cld
push
inc
push
dec
cmc
insb
push
mov
addr16
das
jae
loop
out
jb
mov
xor
dec
push
adc
mov
loop
mov
adc
scas
jns
call
aad
cmp
mov
in
popf
push
pop
clc
cmp
dec
pop
movsb
in
divb
xchg
or
xchg
and
push
push
shlb
mov
in
fsub
stos
aam
test
cltd
pop
cmc
xchg
xor
gs
ljmp
xchg
mov
jbe
test
push
mov
imull
aas
sarb
adcl
fsubp
loop
test
add
fnstsw
dec
cmpsl
mov
fst
pop
or
add
leave
xor
mov
or
or
push
xchg
fnstenv
lods
fcom
or
shll
addr16
inc
fmulp
cmc
xchg
or
cli
cwtl
shlb
cs
and
or
cmpsb
mov
or
pop
cmp
out
fcomps
jle
inc
and
dec
pop
lea
cli
aas
mov
add
jae
outsl
stos
or
fxch
or
in
add
shrb
sbb
xorb
xchg
repnz
shll
fucomi
shll
add
pop
fcmovnb
je
push
lea
movsb
hlt
test
pushf
push
jmp
or
pop
pushf
cwtl
jae
fdivl
loopne
ljmp
mov
push
fsubrl
mov
xor
mov
jno
push
rcr
arpl
xor
push
test
mov
mov
ret
enter
pop
sbb
clc
ficoml
or
xchg
imul
pop
ret
int3
mov
dec
pusha
ret
push
int
push
out
lds
js
ja
adc
ss
fwait
mov
mov
aaa
add
xchg
stos
push
add
xor
and
out
dec
out
jmp
jb
insb
cli
jecxz
and
cmc
repz
addr16
lods
sub
pusha
outsl
add
pop
ficomps
pop
les
iret
sbb
inc
and
ljmp
pusha
cwtl
mov
imul
sahf
lds
es
jle
inc
inc
mov
fistpll
xor
dec
scas
fnstsw
cmp
mov
cltd
stos
adc
les
test
or
mov
mov
dec
pusha
pop
lea
jp
mov
iret
mov
pop
push
mov
pop
mov
or
xor
in
jmp
out
popf
movsl
inc
add
dec
dec
lahf
mov
jmp
sahf
out
out
movl
es
jg
sub
pushf
dec
orb
out
dec
and
enter
and
ss
nop
sti
and
lret
int3
insl
jecxz
aam
mov
adc
arpl
jne
sub
mov
ret
adc
adc
divb
xor
and
cmp
adc
je
sbb
out
mov
xchg
cmp
fcmovnbe
xor
mov
dec
out
addr16
outsl
or
fistpll
in
pop
insb
cmp
es
lret
repz
dec
and
mov
repnz
enter
mov
adc
inc
fwait
add
and
pop
push
mov
cs
addl
test
pop
mov
out
iret
sbb
mov
mov
dec
cld
add
xchg
jbe
dec
stos
mov
cmpsl
xor
and
xchg
inc
add
cmpsl
rcrb
pop
mov
mov
pop
out
push
jne
bound
lea
sbb
or
mov
xor
aas
jb
push
mov
pop
jmp
push
les
es
roll
out
aam
dec
lahf
and
ljmp
mov
mov
mov
push
sub
dec
mov
int
sbb
loope
cltd
iret
cmp
shll
cmp
sti
sbb
lret
test
add
lock
mov
mov
cmpsb
out
es
in
in
lcall
pop
jl
mov
cmp
pop
aas
xchg
lds
xchg
xchg
shl
stos
fidivs
cli
cs
js
out
out
popa
adc
hlt
arpl
jb
inc
cmp
jp
jnp
cmc
mov
aam
mov
cld
scas
mov
negb
loopne
cs
pop
into
out
sbb
dec
jae
lods
aam
push
mov
inc
cmpsb
ljmp
mov
sbb
lock
test
jae
cli
int3
mov
arpl
cmp
in
add
lret
xor
mov
shrb
test
inc
xchg
inc
mov
enter
sti
sbb
shl
out
dec
ret
and
mov
int
jb
rorb
add
pop
aas
test
pop
aas
and
enter
fidivs
sbb
into
cmpsb
ds
test
into
xchg
jg
cmp
cld
aas
out
fsubrp
xchg
push
gs
cli
jbe
cld
std
lret
nop
loopne
mov
subb
jp
repnz
mov
loope
and
cmp
imul
rorb
add
pop
aas
test
fwait
mov
fcoms
test
aam
xor
insl
fdivl
sbb
lds
dec
cld
lods
sar
jbe
ret
neg
popa
out
push
sarb
test
mov
sbb
push
leave
push
popa
loopne
shr
in
jecxz
scas
int
cmpsl
push
cmp
jmp
popf
xchg
rcrb
cmpsl
imul
shrl
mov
out
sbb
add
mov
mov
xchg
addb
jmp
stos
dec
xor
data16
pushf
cli
sahf
cmp
mov
fiadds
sub
sbb
mov
je
cmp
insb
inc
out
in
mov
imul
cmpsb
cmpsl
lods
xchg
mov
push
packssdw
shlb
ja
cmc
jp
iret
cli
out
push
aaa
sub
jg
and
sbb
inc
cwtl
in
xchg
imul
cmp
xchg
shrl
inc
add
mov
out
jb
jnp
cmp
in
cmp
andl
mov
ret
push
cmp
test
ror
xchg
dec
loope
adc
mov
and
test
ljmp
and
lock
jmp
dec
movsb
jb
inc
jge
popa
fucomp
adc
dec
push
and
gs
and
xor
xchg
cwtl
mov
in
sub
dec
jno
dec
jle
dec
rorb
jno
or
lcall
inc
ljmp
out
cmp
cmpsl
and
add
loope
or
adc
and
arpl
add
fwait
pop
sub
aam
sub
inc
loope
js
sub
lret
push
cmp
xlat
mov
mov
cmpsl
push
hlt
mov
clc
inc
inc
sbb
int3
jnp
xchg
dec
outsb
sarb
pop
push
cmp
pop
jb
mov
or
fisubrl
movsl
sub
mov
scas
jnp
push
jno
add
test
inc
cwtl
test
outsb
xchg
dec
out
cmp
enter
fbld
dec
sub
mov
nop
push
loop
fistpl
out
fs
push
dec
pop
pop
mov
rcll
test
push
fwait
call
adc
push
inc
les
mov
and
gs
in
jg
int3
fisttps
lods
xchg
mov
mov
pop
sti
loope
push
xor
mov
fucomp
mov
mov
sub
jecxz
fildll
lahf
lahf
adcl
cld
adc
arpl
jmp
xor
stc
sub
test
mov
xor
jl
ret
popa
mov
cmp
or
cli
loop
std
jae
inc
xorl
daa
andl
inc
xchg
cmc
notl
jno
pop
push
mov
xor
insl
xchg
xchg
add
mov
cwtl
sahf
rorb
adc
jnp
test
lcall
andps
cmpsl
sbb
jno
pushf
subl
test
jecxz
aad
and
add
fwait
pop
sub
ret
fwait
loope
sbb
xchg
or
xchg
adc
mov
mov
cmp
stc
incb
fisttpll
sbb
dec
ret
repz
adcl
jb
push
popf
sub
sbb
or
sbb
call
call
aam
arpl
add
daa
movsl
cmpsb
pop
add
lds
dec
fcmovnu
jge
fcomps
push
loope
and
mov
arpl
addr16
leave
inc
cmp
jnp
xchg
or
sbb
jg
rcll
aaa
adc
xor
dec
hlt
lods
ret
sbb
movsb
in
jo
pushf
dec
out
imulb
sbb
in
loope
inc
mov
pop
sti
loope
push
xor
mov
fucomp
mov
mov
sub
jecxz
fildll
lahf
lahf
adcl
cld
adc
imul
sub
xor
stc
sub
test
mov
xor
jl
ret
popa
mov
cmp
or
cli
loop
std
jae
inc
xorl
daa
subl
dec
in
dec
rclb
mov
mov
push
pop
push
mov
xor
insl
xchg
xchg
add
mov
cwtl
sahf
rorb
adc
jnp
test
lcall
outsb
les
inc
sar
lea
pop
and
mov
subl
ljmp
sbb
gs
call
lret
cmp
push
mov
jp
dec
xchg
arpl
mov
mov
push
pop
cmp
add
cwtl
in
out
jmp
sbb
out
inc
aaa
and
sub
icebp
adc
fidivrl
inc
aad
or
push
pusha
jp
insl
test
pop
mov
fisubrs
pop
mov
mov
cmp
pop
dec
rol
adc
test
xor
fidivl
bound
ja
sub
mov
jne
pop
adc
and
mov
es
mov
xchg
out
call
sub
adc
ja
cli
jae
jb
sub
mov
pop
icebp
je
dec
ret
test
cmp
popf
mov
mov
or
inc
fs
jle
mov
sub
jb
loope
xchg
jne
xchg
scas
or
dec
outsb
push
pop
sahf
cld
and
insl
mov
clc
jmp
imul
cli
fidivs
int3
cltd
imul
sub
gs
xchg
icebp
loopne
in
stos
pop
test
mov
inc
pop
int
jnp
sbb
or
arpl
dec
es
out
cmp
jb
in
jbe
cmc
push
divl
mov
mov
cmp
xor
add
ss
inc
inc
jnp
or
rcll
and
adc
lods
fs
or
test
push
dec
popf
push
fstpt
test
mov
fadds
loop
push
das
cmp
mov
jb
jb
leave
mov
fs
subl
pop
jb
mov
xchg
inc
sarb
lret
shrb
xchg
iret
adc
js
dec
xor
sarb
lret
jbe
fdivrs
fs
push
xchg
sarb
sub
add
lret
adc
xchg
xchg
inc
pop
mov
add
lret
cld
pop
dec
repnz
mov
into
cli
nop
imul
inc
sarb
lret
add
dec
stc
lret
inc
cmp
rcrl
adc
inc
xor
and
movsb
faddl
push
dec
sub
jae
jb
stos
lcall
add
jae
dec
rorl
sub
pop
jb
stos
lcall
adc
lods
xchg
jns
push
sbb
push
mov
pusha
sub
push
divl
cmc
pop
lea
sbb
mov
and
fisubl
mov
push
xchg
repnz
fs
and
fisubl
iret
mov
sahf
pop
and
and
fisubl
inc
mov
lret
add
je
hlt
and
fisubl
sahf
jo
rcr
outsl
push
xchg
leave
mov
and
fisubl
dec
test
in
xchg
in
xchg
repnz
fs
and
fisubl
add
dec
je
lods
sahf
pop
and
and
fisubl
or
daa
adc
scas
jb
inc
loopne
jmp
lret
fwait
shlb
icebp
iret
pop
stc
into
xlat
out
mov
aaa
xchg
mov
int3
and
sbb
mov
cmpsl
test
fnsave
dec
enter
push
ret
sarb
add
and
and
insl
stc
mov
insb
push
jo
enter
mov
repnz
push
cmp
xchg
sbb
xchg
xchg
jge
mov
addr16
dec
sarl
movsb
lahf
mov
mov
movsb
add
dec
pop
scas
das
jmp
jae
call
fstl
jmp
pop
or
inc
pop
mov
add
dec
dec
xor
fsubr
sbb
jbe
push
mov
dec
pop
mov
mov
adc
push
inc
movsb
xor
cld
sub
cli
sti
arpl
lret
imul
push
push
out
cli
bound
dec
movsl
test
sarl
aam
addr16
sbb
ror
cmp
test
or
pop
jns
pop
xor
fsubl
xor
dec
popf
clc
mov
fisttpl
sbb
pop
adc
adc
pop
jge
cmpl
mov
jns
imul
jno
sub
jns
push
je
mov
sub
jne
adc
loop
addr16
pop
je
fwait
pop
sub
fists
rep
or
mov
mov
mov
pop
ja
out
cmp
enter
setne
int3
cld
iret
add
in
cmp
inc
fmul
xchg
or
aas
mov
out
imul
popf
sub
or
shrb
push
push
mov
mov
pop
jp
adc
sbb
loop
lret
add
nop
xchg
mov
stc
fiadds
adc
fcoml
jo
enter
in
dec
enter
mov
pop
pop
sarb
in
dec
aam
dec
cmp
and
aad
test
loop
stos
aas
adc
inc
lret
andb
xor
gs
lret
jecxz
lahf
ljmp
push
popf
nop
jo
cmpsb
lods
mov
xor
fs
mov
cwtl
sbb
cmp
clc
push
lods
ds
mov
and
cmc
dec
sub
dec
mov
iret
in
and
pop
sarb
or
cs
rol
out
xchg
mov
loop
stc
stc
fstpt
pushf
cwtl
dec
scas
dec
push
sub
mov
in
ret
pop
lock
into
std
dec
mov
pop
in
pop
pop
or
cmpb
imul
in
movsl
andl
scas
mov
xchg
and
das
rorl
push
inc
cmp
jp
jnp
xchg
push
test
leave
mov
dec
pop
dec
mov
cs
xchg
add
adc
cld
mov
pop
mov
push
sbb
push
inc
sub
pusha
je
jl
arpl
stc
movsl
movl
jge
outsb
sub
call
inc
push
lock
mov
cmp
and
and
arpl
jb
inc
cmp
jp
jnp
xchg
push
test
inc
imul
jns
inc
sbb
mov
jnp
fisttpl
xor
cmp
mov
or
mov
push
pop
mov
push
xchg
and
add
push
loop
or
mov
data16
repz
mov
shlb
cmp
popa
sub
sbb
enter
xor
push
cmp
and
lcall
adc
mov
enter
popa
ret
fnsave
jge
int3
cmp
mov
adc
pop
popf
js
mov
outsl
adc
jmp
and
and
arpl
jb
adc
add
cmpsb
fnstsw
repz
fcomi
cmp
sub
in
cmp
gs
fisubrl
mov
add
mov
or
add
ret
nop
pop
jmp
xor
out
sub
mov
fsubl
lea
or
push
xchg
js
inc
pop
arpl
ds
mov
fs
jecxz
icebp
inc
movl
lds
sti
sbb
add
lret
lods
mov
and
sbb
lea
cmove
sbb
rorb
pop
mov
fdivs
adc
js
inc
pop
out
stc
sbb
adc
mov
es
std
inc
xchg
lret
mov
stos
and
mov
pop
call
pusha
insb
pop
jp
cmp
fcoms
in
add
jb
push
sbb
and
out
adc
flds
xor
pop
pushl
sub
pop
push
xchg
js
inc
pop
mov
addr16
mov
mov
dec
pop
sub
cwtl
xor
loop
xchg
inc
or
lcall
loop
mov
or
es
in
jnp
jns
lods
shlb
lock
inc
jmp
roll
sbb
repz
adc
dec
cmpsl
xchg
pop
and
ret
mov
lcall
push
mov
push
dec
je
mov
and
or
hlt
loopne
int
mov
jge
fs
mov
cmp
pop
push
jle
dec
outsb
lods
cmpl
xchg
stos
fiadds
loopne
fs
fnstenv
mov
pop
xchg
out
inc
out
push
mov
inc
scas
movsb
inc
ret
rolb
loop
arpl
cmc
scas
jg
fiaddl
cmp
inc
push
test
mov
mov
xchg
jae
out
fidivs
aam
pop
dec
pop
push
xor
clc
dec
test
mov
stc
jmp
mov
cltd
sbb
clc
gs
mov
pushf
lea
mov
or
stos
add
add
in
scas
push
mov
cmp
mov
fistps
sbb
dec
sti
leave
and
lea
pusha
jo
sbb
int
not
shlb
in
lea
push
mov
sub
roll
sub
gs
push
dec
sub
pop
pop
cld
xchg
ret
sbb
cmp
cmp
mov
ret
add
xlat
jp
decl
inc
xor
aas
popf
insl
cmpb
or
dec
ffreep
mov
jb
mov
and
inc
scas
pop
and
mov
mov
lods
pmuludq
iret
dec
out
pop
addr16
aaa
mov
cmpsl
pop
lods
push
xlat
imul
cs
cmp
sbb
xchg
or
mov
fmull
pop
outsb
lock
movsl
jecxz
push
pop
adc
or
imul
sarb
and
arpl
setbe
and
sub
pop
cmp
sub
mov
scas
cmc
xor
mov
mov
xchg
mov
pop
mov
mov
mov
enter
or
sbb
rorl
mov
lock
jmp
jo
mov
sub
dec
test
adc
out
dec
sbb
lods
cmp
cwtl
inc
cmc
ljmp
pop
sub
push
mov
movsl
or
cmp
xchg
mov
lock
in
les
sbb
jbe
roll
stos
and
sub
cmp
mov
add
call
push
scas
mov
add
gs
outsb
gs
fnstsw
xor
sbbb
lods
xor
jle
nop
out
or
ljmp
mov
out
adc
mov
cmpsb
mov
and
neg
je
in
pop
in
in
in
jno
aad
add
mov
lods
les
adc
mov
mov
mov
or
daa
mov
mov
pop
push
inc
and
jns
imulb
outsl
or
daa
test
mov
rcrb
jmp
aad
add
orb
cmp
cmp
hlt
pop
inc
and
mov
sub
hlt
arpl
mov
dec
jno
xacquire
jo
jle
fisubs
insb
outsl
jmp
div
and
xchg
cmp
add
lods
fdivp
leavew
push
data16
mov
xor
mov
insb
cld
cmpsl
adc
and
push
inc
push
cmpsl
sbb
jno
pushf
subl
inc
movsb
mov
xchg
pushf
inc
mov
mull
inc
ljmp
fnstcw
jo
push
stc
outsb
pop
push
into
daa
jo
xor
push
cmp
int
jecxz
js
shlb
push
outsb
or
hlt
arpl
mov
rcl
ficoms
aam
mov
xor
lahf
loopne
add
add
sbbl
jg
xor
inc
pop
mov
lret
sbb
and
mov
shr
sbb
pop
xchg
dec
sahf
mov
inc
and
in
mov
adc
sbb
mov
out
or
dec
aaa
pop
rcll
scas
gs
sub
fldcw
jnp
xor
in
ret
xor
xor
adc
or
cs
mov
xchg
dec
mov
das
push
mov
xchg
lcall
fsts
insl
jb
push
fldenv
in
sub
or
mov
or
es
dec
repz
loop
rcrl
int3
push
lahf
jae
in
into
or
sahf
pop
fidivs
aam
pop
dec
pop
adc
pop
lret
testb
add
xchg
ja
jbe
nop
dec
arpl
add
lret
sbb
xlat
dec
cs
into
mov
push
out
pushl
test
hlt
and
fisubl
pop
or
add
adc
inc
cltd
or
add
je
in
mov
cmp
or
pusha
sub
int3
push
lahf
jae
in
xor
cmp
cmpsb
mov
mulb
inc
sarb
lret
sbb
xlat
push
ret
mov
mov
push
and
ljmp
std
fisubl
pop
sarb
xchg
into
lcall
xchg
lahf
mov
dec
div
mov
mov
mov
add
or
sti
xchg
jl
or
out
inc
cmp
xchg
cmp
lcall
movsb
popa
clc
je
sub
out
lock
pop
or
frstor
or
xchg
mov
add
lret
cli
lahf
ret
icebp
and
add
and
push
ja
mov
inc
jno
xor
cmp
cld
popaw
inc
insl
ljmp
pop
mov
and
pop
pop
shll
je
fldcw
addr16
push
daa
mov
pop
jmp
sub
and
outsl
fisttpl
std
call
push
popa
mov
jmp
fidivs
aam
pop
dec
pop
adc
pop
lret
testb
inc
sahf
nop
xlat
mov
mov
ljmp
lret
xlat
xor
ljmp
shrl
and
lods
add
fisubl
shrb
jecxz
orl
clc
pop
adc
clc
je
sub
pop
xchg
rcrb
or
in
popa
rorb
mov
test
jle
pop
pop
mov
sahf
test
addr16
int3
outsl
push
fwait
xchg
into
loope
xchg
out
shll
ret
and
mov
sub
adc
das
lret
dec
jg
dec
fstpl
ret
mov
jmp
cmp
mov
jo
push
fsubl
and
fisubl
cwtl
mov
int3
push
lahf
jae
in
mov
cli
lahf
cmp
sbb
mov
in
add
stos
adc
jb
stos
lcall
lea
lea
js
jb
mov
pop
pop
out
sbb
in
lret
xchg
lds
or
je
pusha
mov
clc
je
sub
adc
xchg
ljmp
and
mov
mov
rcrb
xchg
dec
xchg
fsubr
lret
jmp
lods
or
pop
push
or
sahf
popf
inc
pop
dec
inc
sarb
xor
aad
insb
inc
mov
mov
cs
mov
push
push
xor
bound
scas
dec
fnsave
cs
or
inc
xchg
and
cli
fsts
inc
inc
mov
ljmp
es
fisubl
add
sbb
mov
popa
clc
nop
pop
xchg
out
xor
mov
insl
sub
inc
imul
inc
jg
stc
add
lahf
inc
out
dec
pop
pop
dec
nop
and
arpl
sbb
pop
loope
push
and
scas
lcall
sbb
add
add
inc
mov
orb
roll
fistpl
in
xchg
call
adc
lcall
loope
fldl
mul
lods
mov
mov
hlt
arpl
jb
inc
cmp
jp
jnp
xchg
push
test
call
jne
in
scas
pop
jle
cmpsb
adc
js
les
or
shlb
arpl
test
jno
pushf
subl
mov
xor
int3
mov
arpl
or
pop
sbb
rorl
lret
mov
mov
cmp
iret
stos
hlt
mov
sti
push
les
nop
cmpsl
cmpsb
iret
hlt
jno
pusha
stc
add
pop
jbe
xor
adc
call
fcoms
aas
inc
cmp
adc
das
lock
fiadds
fisubs
sahf
push
dec
cmp
and
movsl
and
mov
movsb
scas
jb
je
cmp
jo
add
push
push
add
shrl
mov
enter
xchg
sti
cs
jl
or
fcmovnb
in
cli
loopne
dec
mov
out
mov
andb
test
movsl
xchg
xchg
mov
cmp
sbb
nop
lods
shll
pop
push
cmpsb
xchg
mov
dec
jecxz
ficoml
add
mov
push
lds
out
in
cmpsl
pop
xchg
dec
test
in
insb
stos
js
loopne
push
clc
sbb
outsl
mov
lret
iret
call
cmp
xchg
inc
test
test
outsl
add
call
inc
pop
xor
int3
or
or
call
mov
fistl
and
xor
mov
hlt
dec
cmp
pop
cld
mov
stos
shll
ja
or
mov
mov
test
mov
call
ljmp
mov
mov
jne
sahf
pop
inc
test
jge
inc
iret
and
xchg
cmp
mov
cmp
lods
and
sahf
lahf
jae
dec
sub
rcrl
sub
or
jle
jmp
hlt
sar
pop
jge
int
inc
cwtl
push
sahf
and
inc
pop
or
push
cmp
movsl
adc
or
cld
pop
xchg
xor
inc
jg
lods
sahf
or
mov
addl
push
fcoms
or
jb
jne
xor
imul
cwtl
mov
and
xchg
inc
push
adc
lea
mov
bound
mov
addl
sbb
push
jo
or
hlt
arpl
cltd
and
push
aaa
push
add
and
cld
aad
in
xchg
inc
cmp
scas
pop
mov
mov
fistl
push
mov
dec
mov
and
xor
xor
push
adc
mov
inc
iret
fs
inc
mov
push
inc
aaa
jecxz
fcomps
stos
jecxz
fimuls
aad
mov
js
enter
mov
lahf
jnp
out
add
cmpsl
sbb
and
cld
xor
int3
xor
adc
xchg
lods
xchg
sub
int
hlt
arpl
xchg
movsl
mov
ljmp
fldenv
add
rclb
sti
push
jbe
mov
jno
fs
pusha
rcl
das
inc
mov
push
jbe
sarl
add
jmp
loop
repz
and
xchg
and
cmp
std
mov
adc
es
jmp
ljmp
das
jl
popa
scas
pop
push
sbb
mov
xor
or
fs
xor
jno
adc
push
subb
cmp
mov
cmpsb
out
or
pop
sbb
inc
adc
cmpsl
test
hlt
arpl
fwait
pop
sbbl
cmp
fsubrl
stos
aas
pop
mov
aaa
mov
es
ja
ljmp
subb
or
xchg
mov
pop
je
sbbb
pop
push
lods
imul
jmp
pop
sbbl
cmp
fsubrl
stos
aas
pop
mov
aaa
mov
es
pushf
inc
inc
pop
jl
push
movsl
dec
adc
cmpsb
pop
jb
cmp
mov
pop
je
sbbb
pop
push
lods
imul
jmp
or
push
or
dec
sahf
cmc
push
je
jmp
cld
add
es
push
sbb
push
jecxz
insl
out
out
stos
negb
push
mov
mov
movsb
inc
lea
adc
jg
arpl
das
not
cmc
and
popa
ret
nop
jp
out
aaa
jmp
imul
jg
jecxz
hlt
arpl
mov
cmpsb
ja
imul
lret
out
outsl
pop
mov
sarl
aad
loop
loope
aam
mov
cmp
jmp
cltd
mov
push
insb
movsl
and
cmp
jp
pop
cmp
pushf
outsl
repnz
xchg
lods
sysenter
sub
lods
pop
cld
pop
imul
push
pop
mov
stc
pop
add
push
cli
lahf
xchg
lock
loopne
sbb
loope
popa
sti
mov
dec
cmp
clc
daa
hlt
cwtl
testl
cli
ret
mov
flds
in
cmp
jmp
imul
jg
jecxz
hlt
arpl
fsubrl
and
mov
cmpsl
in
nop
cmp
jne
cmp
fwait
in
jp
inc
lods
push
and
xchg
mov
rcrb
loopne
mov
jbe
ljmp
mov
gs
mov
adc
hlt
arpl
mov
dec
loopne
test
push
adc
stc
sahf
xchg
ljmp
xor
insb
mov
dec
push
rclb
dec
cld
dec
fmuls
mov
lret
nop
lods
in
movsl
mov
sahf
xor
pop
push
gs
cltd
dec
sub
mov
push
loop
adc
inc
out
pop
mov
shl
int3
mov
push
adcl
call
hlt
arpl
in
call
mov
sbb
bound
fidivs
aas
jl
fiaddl
aaa
in
test
push
jns
js
lahf
push
cmp
jl
mov
jmp
ret
ljmp
sbb
xor
jae
subb
push
popa
pop
and
inc
push
pop
sub
fiadds
lahf
mov
test
pop
jnp
pop
dec
mov
and
mov
dec
fwait
add
ja
pmaddwd
addl
push
xchg
push
cwtl
dec
adc
add
mov
lods
ja
je
test
es
sbb
sbb
push
xor
cli
popa
jb
lcall
xor
xor
ds
data16
scas
sahf
push
sti
loop
mov
jb
lcall
insl
jg
jecxz
hlt
arpl
add
aaa
fcompl
mov
in
ljmp
push
lds
jp
jns
stos
or
sub
sbb
enter
jns
in
dec
xchg
ud0
mov
mov
jo
dec
mov
repnz
mov
dec
imul
cmp
pop
loopne
sub
inc
xlat
stc
xchg
or
xor
shlb
clc
sbb
or
sbb
push
mov
sti
es
and
and
fildl
xchg
xchg
frstor
imul
fidivl
push
imull
cmp
inc
fs
movsl
and
mov
cmp
fucompp
std
lods
mov
mov
arpl
inc
xlat
aas
dec
pop
lahf
jae
pushf
ret
jbe
cmp
arpl
and
iret
nop
test
pop
pop
pop
imul
jge
outsl
and
jae
mov
and
bnd
mov
addb
aad
cs
out
test
jecxz
xchg
outsb
iret
inc
mov
ja
mov
loopne
and
xchg
out
dec
dec
jae
pop
iret
inc
dec
push
adcb
fcmovb
cmp
fnsave
int
push
inc
xlat
loope
jb
je
movsb
xor
xchg
lcall
adc
lock
stc
adc
jle
sbb
mov
sub
inc
fsubrs
mov
stos
push
in
lret
push
ljmp
fisttpl
xor
ja
and
loopne
fwait
mov
mov
xchg
pop
inc
mov
mov
jno
pop
jle
sub
shrb
mov
mov
sbbb
and
mov
lahf
nop
cmp
mov
test
addr16
arpl
std
jmp
call
pop
ret
or
sbb
xchg
push
mov
cmp
fs
inc
stos
aaa
test
mov
add
push
lds
daa
subb
jo
lods
sti
mov
sbb
mov
cli
push
call
xor
sbb
xchg
pop
add
into
mov
dec
cmp
scas
cmp
hlt
lcall
mov
mov
and
inc
push
add
jnp
jmp
push
or
std
sub
dec
push
and
jbe
inc
push
in
ljmp
test
sub
inc
or
xor
mov
mov
xor
icebp
loop
mov
das
aas
push
jl
mulb
rolb
leave
jbe
mov
arpl
les
jns
jbe
mov
lahf
mov
sub
fstl
into
iret
mov
or
fldl
fs
mov
cwtl
xor
pop
popa
jge
push
out
mov
lret
testb
pop
dec
jns
adc
stos
push
fwait
add
nop
sub
jns
mov
dec
ds
lret
aam
in
les
xchg
nop
sub
or
sub
idivl
xor
sahf
std
jle
lods
mov
out
mov
xchg
cmp
aas
jb
dec
fimull
cmp
cmp
mov
cmp
push
push
dec
dec
cmc
cli
and
je
dec
fmulp
xchg
andb
mov
jb
movsl
iret
push
insb
jmp
lock
outsb
cmp
je
dec
fsubl
fisttpl
mov
scas
inc
pop
dec
cmpb
mov
notb
daa
mov
fldenv
aas
test
out
scas
clc
add
push
mov
jae
arpl
mov
popf
xchg
test
test
xchg
jb
xor
cmp
out
out
sar
ja
cmp
std
push
movsl
lea
lea
jge
jle
push
lods
into
mov
lea
imul
cs
fmuls
das
xchg
xchg
add
fstpt
ret
in
push
in
jecxz
xchg
jns
pop
sub
mov
xchg
ficoml
ss
divl
ss
dec
mov
cmp
lcall
clc
dec
pop
insl
push
stos
adc
test
dec
ret
fcompl
jbe
stos
movsl
fs
int3
cltd
dec
dec
nop
push
mov
lds
ret
cmp
cmp
sub
xor
jb
mov
flds
sub
mov
jbe
jl
les
jo
ds
stos
iret
dec
xchg
adc
imul
mull
sahf
jp
aas
cs
fmuls
das
xchg
xchg
add
fstpt
ret
in
push
in
jecxz
xchg
jns
pop
sub
mov
xchg
ficoml
ss
divl
ss
dec
mov
cmp
lcall
clc
dec
pop
insl
push
stos
adc
test
dec
ret
fcompl
jbe
stos
movsl
fs
int3
cltd
dec
dec
nop
push
mov
outsb
inc
stc
in
push
dec
xor
jmp
ja
lds
stos
add
ffree
cmpsb
sbb
sbb
jl
mov
and
dec
dec
and
lods
subb
testl
push
in
jecxz
xchg
jns
pop
sub
mov
xchg
ja
and
add
test
dec
mov
cmp
lcall
clc
dec
pop
insl
push
fstp
pop
daa
cmpl
xchg
cs
or
xor
sbb
push
dec
and
divl
divl
push
and
fcoml
push
out
int3
pop
jbe
adc
fstp
int3
or
je
in
push
popf
in
mov
jge
push
std
lds
clc
xchg
arpl
mov
xchg
mov
pop
daa
popf
lret
sbb
iret
add
xlat
cld
push
xchg
and
icebp
filds
out
mov
aad
cli
call
hlt
pop
ljmp
cmp
imul
jae
sub
inc
movsb
push
stc
repz
sbb
cmp
scas
movsb
ret
cmp
cmp
sub
xor
jb
mov
flds
sub
xor
sbb
mov
test
pop
fsubl
cmpsb
adcb
repz
scas
pop
xchg
sbbl
ret
adc
pop
out
push
insb
aad
shlb
or
sbb
ja
sub
xor
iret
inc
jg
cwtl
aas
sahf
push
and
or
inc
sub
jne
lock
cmpb
out
xchg
lods
pop
xchg
test
rorb
test
stos
adc
shl
mov
bnd
xchg
stos
mov
cltd
jno
cmpsl
ret
out
int3
rclb
stos
jne
movsb
push
ret
cld
fmuls
mov
xor
sbb
jnp
cmp
insb
mov
inc
subl
xchg
popa
xor
jecxz
or
clc
out
enter
orl
mov
test
and
in
lds
jb
cmp
dec
stos
cmp
or
insl
fisubrl
adc
dec
pop
ljmp
ffree
push
std
stos
add
ffree
cmpsb
sbb
sbb
and
cmc
xor
jmp
xchg
add
fstpt
ret
in
push
in
jecxz
xchg
jns
pop
sub
mov
xchg
ja
and
add
test
dec
mov
cmp
lcall
clc
dec
pop
insl
push
push
add
and
ljmp
popf
or
xor
fcomps
fcomps
push
adc
xchg
inc
fwait
mov
pop
mov
cmp
mov
sbb
push
and
lods
enter
adc
jmp
pop
js
outsl
clc
push
call
jb
popa
mov
mov
or
sub
test
xor
call
into
sbb
addb
cmpsl
test
clc
repnz
les
or
or
dec
repz
push
mov
int3
mov
pop
xor
sub
push
movsl
in
push
in
pop
sbb
xlat
sub
push
lret
jnp
mov
outsb
mov
xchg
adc
enter
sbb
and
push
fildll
fwait
cli
outsl
and
and
negl
sbb
jb
in
fsubp
pop
lods
js
inc
mov
mov
adc
mov
mov
jae
mov
mov
es
ret
in
jne
push
cmc
je
fstps
mov
outsb
sub
push
movsl
in
push
in
pop
sbb
xlat
sub
push
lret
jnp
mov
outsb
mov
xchg
adc
enter
sbb
and
push
fildll
fwait
cli
outsl
and
and
negl
sbb
jb
in
fsubp
pop
lods
js
inc
mov
mov
adc
mov
mov
test
mov
inc
or
xchg
and
add
sub
sub
jo
lods
add
stc
push
fnstcw
scas
stc
out
jns
lods
adc
cmp
js
pop
xor
pop
loopne
xor
jns
pop
dec
lcall
pop
aad
mov
ja
ja
inc
ret
test
mov
fmulp
rorb
jnp
lahf
sub
je
fnstsw
idivl
mov
in
rcrl
add
mov
movl
les
add
into
cmpsb
shll
mov
mov
mov
stc
outsl
pushf
sub
scas
les
inc
in
cwtl
mov
mov
cmp
pop
out
lock
mov
ret
sti
mov
push
ret
cltd
jnp
inc
pushf
mov
push
or
outsl
aam
outsb
loope
adc
lds
jl
xor
int3
repnz
push
add
cli
sar
popl
jle
cld
xor
sbb
dec
gs
cmc
mov
sbb
xor
aas
dec
test
das
inc
push
jne
adcl
imul
jg
jecxz
mov
ret
cld
xor
mov
sub
movsb
jo
je
pop
cmp
sub
incb
xchg
es
jb
frstor
mov
mov
je
jae
adc
in
mov
aad
and
jno
out
inc
adc
jno
sahf
xor
jno
stc
xchg
sbb
movsl
cmpsl
push
xor
push
mov
outsb
test
dec
xor
test
bound
insb
mov
fsubl
ds
in
xor
dec
mov
pusha
inc
decl
mov
popf
and
ret
jnp
jge
push
jecxz
loopne
jo
push
int
sbb
aad
or
inc
loopne
lret
jo
or
ds
adc
push
cmp
sti
fidivs
add
mov
leave
test
sub
xchg
mov
aas
xchg
mull
movsl
cwtl
mov
cmpsl
inc
fiaddl
xchg
dec
xor
test
bound
insb
mov
fsubl
ds
in
xor
dec
mov
pusha
inc
decl
mov
popf
adc
push
lods
lahf
add
fldenv
ja
icebp
or
fldl
aas
cmp
cmp
xchg
push
out
leave
lret
cmpl
mov
daa
out
jae
mov
leave
fisubs
aam
xlat
int
inc
xchg
inc
test
bound
insb
mov
fsubl
ds
in
xor
dec
mov
pusha
inc
incl
mov
mov
mov
jne
pop
jp
out
mov
outsb
push
push
movsb
xor
push
sub
jle
mov
and
xor
and
lods
pop
mov
dec
flds
sub
xchg
sub
add
cmc
movsl
lahf
jle
jecxz
dec
dec
fbld
mov
mov
or
ljmp
cltd
test
and
adcl
fcmovnu
sub
nop
xchg
mov
cwtl
inc
xorb
mov
xor
mov
mov
cmpb
popf
push
mov
std
test
mov
stc
mov
add
sbb
pusha
cmpsw
clc
ss
orb
jno
rcl
cmp
inc
out
xchg
adc
fldl
dec
repz
cmpsb
push
dec
shrl
push
shl
push
dec
pop
and
cmp
outsb
cmp
scas
ret
imul
dec
add
lods
inc
push
pop
ds
lcall
push
aad
out
sahf
lods
or
lahf
sbb
and
mov
mov
out
mov
and
fisubl
dec
mov
sbb
push
pop
sbb
adc
pop
fcompl
loopne
rcll
data16
lcall
cmc
xchg
sub
inc
movsb
push
stc
repz
fstps
les
sub
cmc
les
addr16
push
mull
leave
cmpsl
in
out
pop
xor
aas
add
cmpsl
in
push
dec
sub
xchg
dec
addr16
movsl
cmpsl
jg
push
mov
pop
mov
je
dec
pop
call
xchg
xchg
pop
sbb
testl
sbb
movsl
cmp
lcall
js
jg
sbb
xchg
add
in
jmp
cltd
cmpsl
test
jle
pop
mov
mov
pop
mov
cs
sub
out
icebp
mov
push
or
xor
jnp
sub
sbb
jb
add
in
scas
push
mov
jmp
add
ja
test
movsl
cmp
add
jb
sbb
dec
sub
in
test
jmp
xlat
push
enter
dec
xor
sbb
std
add
das
sahf
test
mov
sarl
aad
push
lsl
xchg
sbb
aas
inc
pop
jmp
jbe
test
cmp
loop
or
hlt
add
in
adc
xchg
fdivr
fstps
fst
jne
or
mov
repnz
add
hlt
arpl
lahf
lea
add
rol
mov
jge
push
cmp
fldenv
ret
dec
xor
add
fidivl
xchg
lods
mov
or
iret
daa
mov
sbb
cmpsb
mov
mov
and
pop
iret
cld
inc
aas
roll
outsb
dec
jp
imul
in
cwtl
test
ds
xchg
rorl
fsubrl
daa
sub
cmp
imul
arpl
lahf
lea
add
jbe
sub
push
cmp
fldenv
ret
cmp
lods
repnz
fisubrl
push
cmpsl
cmp
mov
movsl
into
out
push
int
xor
cmc
pop
test
pop
inc
outsb
test
adc
jle
lret
cmp
mov
jmp
lea
leave
inc
push
jns
adc
aad
rorl
inc
xor
pop
pop
cmp
mov
data16
pop
sbb
lss
ja
bnd
lret
and
pop
cmp
fcomps
adc
js
lret
and
insb
push
sub
lods
xchg
push
rol
negb
mov
xchg
sarl
mov
negl
mov
fcmovbe
fldt
mov
movsl
dec
popf
daa
adc
mov
add
gs
pusha
jbe
in
mov
je
movsl
cltd
jae
jbe
lahf
sub
mov
and
test
mov
fidivrs
out
ret
cli
jmp
mov
hlt
fadds
fwait
test
dec
pop
lahf
movsb
cmp
mov
jge
push
hlt
cmp
push
pop
pop
cld
notl
xor
adc
daa
pop
lret
inc
int
imul
packuswb
ret
in
imull
mov
add
inc
xchg
fs
adcb
mov
fildl
mov
cmc
mov
jbe
xchg
sahf
pop
sbb
popa
imul
loope
xor
mov
mov
pusha
cltd
mov
loop
push
je
inc
xchg
stos
mov
into
add
or
add
jle
cmp
jmp
daa
cwtl
sub
pop
fistl
in
cmp
enter
add
xlat
test
shrb
idivl
add
mov
mov
popf
inc
cwtl
enter
cld
jge
sub
aaa
mov
push
push
rcll
mov
test
aam
and
push
dec
cmpsl
push
xchg
movsl
ret
fsubl
test
sub
dec
insl
push
sub
and
push
inc
ds
or
lahf
inc
push
push
jno
sub
data16
adc
fisubrs
jne
pop
push
aaa
in
mov
cmp
cmp
jae
xchg
cmpsb
pop
push
cmc
add
push
xor
inc
xor
xor
mov
lock
in
cmc
push
and
inc
iret
sbb
ret
rolb
dec
lahf
cs
inc
popa
sub
xor
pop
fistps
fsubrs
or
and
mov
xchg
scas
dec
aaa
adc
xchg
mov
je
jno
jae
fdivrs
cli
pop
adc
cmpsb
test
fwait
sbb
out
and
into
icebp
sti
push
test
setbe
mov
cld
and
adcb
cmp
and
cmp
dec
repnz
xor
out
xchg
mov
cld
pop
imul
and
mov
sbb
add
mov
mov
hlt
arpl
xchg
clc
or
lret
movsl
jl
in
call
pop
or
adc
sbb
into
test
or
fnstsw
inc
mov
jno
scas
and
sub
loop
clc
neg
push
jns
repz
xchg
iret
add
test
fbld
sub
fisubrl
or
rcr
jmp
aad
int
xlat
imull
dec
shrl
mov
js
sahf
roll
mull
fildl
clc
dec
clc
iret
sub
fnstcw
sbb
cmp
imul
mov
add
sbb
mov
hlt
arpl
aam
or
inc
lret
dec
aam
rcll
imul
icebp
push
imul
and
push
adc
das
or
inc
rcrb
sahf
xchg
lcall
je
cmp
cli
and
xchg
cmpb
push
scas
lea
mov
push
nop
aaa
shll
mov
xchg
filds
sbb
mov
test
xor
add
or
sub
jecxz
cmp
into
sub
dec
mov
mov
add
sti
call
aas
inc
and
and
arpl
ret
mov
daa
xor
push
shll
mov
adc
push
fsubr
mov
adc
cmpsb
pop
lods
test
test
push
rolb
inc
push
or
pop
outsb
mov
rorb
lds
scas
movsb
popa
adc
dec
js
lret
inc
rol
add
and
shlb
test
into
lds
mov
dec
ja
ret
sbb
inc
jo
push
addr16
adc
daa
jp
mov
push
fsts
pop
outsb
cwtl
ds
jmp
nop
xchg
cmp
jne
clc
fistps
cld
fs
movsl
mov
mov
xchg
int
mov
xor
test
dec
lock
in
ljmp
bound
rcll
push
cmp
scas
sub
aas
mov
jns
loopne
xor
jb
inc
mov
cmpb
sub
into
mov
mov
test
dec
insl
fiadds
cltd
mov
xchg
sbb
xlat
push
mov
cli
add
add
mov
push
sahf
sbb
mov
mov
test
xor
or
scas
mov
dec
pop
dec
je
adc
mov
dec
lea
jle
push
xor
insb
add
pop
jg
int
pop
dec
push
xchg
pop
das
mov
pop
xor
sub
je
jne
fcompl
push
push
or
scas
and
int
mov
and
mov
and
push
outsl
add
pop
mov
or
jp
jnp
cmp
sub
cmp
pop
add
adc
jb
in
fsubp
pop
lods
js
inc
mov
mov
push
cmp
scas
in
in
pop
stos
or
ljmp
orl
mov
cs
jbe
shlb
and
loopne
std
scas
push
mov
dec
add
push
mov
add
xchg
mov
push
dec
loopne
jb
ret
cmc
ret
xor
imul
jno
mov
icebp
and
cmp
pop
mov
and
repnz
mul
daa
adc
pop
iret
mov
clc
data16
mov
jg
fnsave
xor
push
push
ja
scas
ss
push
imul
fdivrp
or
add
out
sbb
pop
xor
ficompl
pop
pop
out
jns
fiaddl
mov
xorl
fists
xchg
sti
test
gs
test
icebp
sub
inc
push
inc
push
clc
xor
stos
ret
rcr
jb
mov
xchg
jge
add
mov
not
sbb
popf
mov
jg
push
xor
mov
fdivl
adc
ret
call
hlt
push
and
repz
lret
jo
adc
mov
cmc
or
xor
fcompl
push
mov
dec
push
fs
dec
aaa
incb
xlat
icebp
in
lret
aaa
push
sbb
loop
adc
inc
orl
lock
lds
cmp
testl
mov
cwtl
pop
mov
fimull
add
lahf
add
or
jno
fmuls
sub
popa
in
je
lcall
dec
les
lods
filds
insb
and
stos
ret
rcr
jb
mov
xchg
jge
add
mov
not
sbb
popf
mov
jg
push
xor
mov
fdivl
adc
ret
call
hlt
push
and
repz
lret
jo
adc
mov
cmc
or
xor
fcompl
push
mov
dec
push
fs
dec
aaa
incb
xlat
icebp
in
lret
aaa
push
sbb
rorb
jecxz
lret
xor
mov
push
pop
and
stos
push
fstl
ja
scas
fidivrl
inc
dec
mov
outsl
dec
testb
inc
push
sub
add
test
cmc
roll
pop
test
pop
push
enter
sbb
dec
nop
test
xchg
bound
loope
mull
xlat
jmp
sbb
nop
cli
ja
xchg
adc
es
and
xor
roll
jge
mov
cmp
xor
dec
cmpsl
outsl
fwait
nop
push
push
push
jp
out
mov
enter
sbb
pop
pop
daa
jmp
or
in
bound
in
jg
dec
stos
out
pop
sub
dec
mov
and
dec
xor
int
mov
or
jbe
jge
adc
test
push
cmp
cli
cmpsb
call
cltd
ljmp
xor
dec
ds
adc
pop
sub
int3
adc
nop
mov
out
leave
and
bound
sarb
bound
mov
sbb
xor
flds
insb
std
scas
rorl
sbb
or
or
inc
test
pusha
fsts
orl
in
outsb
and
mov
sahf
jecxz
adc
int
fldcw
mov
jne
cmpsb
fs
mov
or
das
push
out
jmp
and
inc
mov
sti
adcl
sbb
xor
ljmp
bound
push
xchg
out
test
or
or
mov
sub
insl
lods
sub
and
or
fmuls
sbb
mov
inc
inc
jecxz
push
pop
xchg
outsb
xor
push
fs
notb
lds
push
out
xor
outsl
cs
out
in
ss
jl
repz
pop
pop
outsb
pop
mov
shrb
popf
fisttpll
jo
cmpsl
adc
or
push
mov
test
out
sbb
push
pushf
xor
in
jle
in
bound
in
jg
dec
stos
out
pop
sub
dec
mov
and
dec
xor
nopl
xchg
jge
adc
test
push
cmp
cli
cmpsb
call
cltd
ljmp
xor
dec
ds
adc
pop
sub
int3
adc
dec
loop
inc
insl
aad
push
mov
cmpsb
scas
dec
cmc
xlat
movsb
js
push
xor
call
or
sti
cmpsl
pop
jle
adc
and
or
lahf
lret
sbb
outsl
mov
movsb
pop
sbb
lcall
jp
pop
repz
in
add
xor
sysexit
adc
test
jg
add
test
push
inc
enter
mov
mov
je
leave
call
mov
daa
inc
in
fmulp
fwait
stos
mov
add
mov
das
or
pop
jns
add
pop
and
hlt
pop
jno
test
xchg
mov
adc
xchg
dec
xchg
or
pop
lcall
add
mov
fwait
stos
mov
pop
inc
push
fs
xlat
pop
jae
popf
popf
sarl
pop
and
inc
iret
sbb
mov
out
loope
shll
mov
test
or
test
mov
decl
test
mov
repz
aaa
push
int
mov
mov
dec
fcom
aam
push
les
mov
pop
cmp
fildl
cmp
rcr
andb
and
ret
jae
mov
out
push
jl
adc
rcr
ja
add
fstps
mov
mov
dec
out
pop
sub
dec
xchg
fs
pop
cmpsb
jl
lds
out
int
jno
loope
sbb
mov
cwtl
mov
lds
xor
vmovaps
stos
pshufw
or
dec
inc
sub
jne
mov
mov
test
mov
mov
fadd
push
rolb
sub
mov
inc
or
pop
add
arpl
loop
jecxz
mov
shrb
mov
mov
sarl
or
imul
jns
fstl
and
repnz
jle
push
daa
into
adc
rclb
pop
out
loop
jae
mov
fldl2e
xlat
pop
adc
sub
in
inc
scas
add
dec
in
pop
pop
adc
aad
xchg
pop
push
push
add
push
dec
adc
jno
lds
or
loopne
add
mov
pop
fcoml
into
jno
das
jge
mov
das
jge
mov
push
xchg
mov
ret
cmp
notl
push
iret
adc
cmp
pusha
daa
pop
popa
je
xlat
mov
repnz
push
adcl
rorl
dec
mov
dec
jns
cmp
leave
aas
je
int
xor
cltd
cwtl
push
aas
xor
mov
insl
jge
adcb
add
stos
scas
js
cmp
push
cmc
or
ret
rcrl
push
bound
ss
lcall
and
xor
cwtl
push
xlat
jmp
adc
jae
insb
mov
nop
das
sub
scas
test
mov
mov
xchg
mov
sub
daa
scas
cmp
stos
cmpb
les
mov
add
xchg
push
je
or
lret
cld
push
xchg
push
adc
mov
sahf
cld
jecxz
inc
push
mov
jg
xor
jl
push
out
mov
stos
adc
test
shlb
inc
lds
ficoms
rolb
fucomp
pop
hlt
adc
sub
jge
lods
nop
cmc
xor
repz
ficomps
mov
in
mov
xchg
jns
adc
fimull
cmp
dec
mov
xlat
mov
sbb
es
cmp
push
dec
and
lods
jle
loopne
xchg
cld
adc
out
rorb
and
fwait
pop
xchg
dec
ret
test
pop
cld
loope
cmpsb
mov
cli
xchg
popa
mov
mov
sti
push
push
mov
pushf
add
cwtl
push
mov
sub
mov
sub
and
mov
xor
test
rcll
ds
dec
btc
dec
or
xor
xchg
adc
repnz
add
roll
mov
ds
mov
mov
adc
jo
ret
cmp
jle
cmp
pop
xor
fstpt
jbe
push
stos
in
xor
loopne
jle
xor
inc
test
repnz
mov
shr
loop
fwait
sbb
ljmp
stos
pop
dec
aas
loopne
jb
mov
call
xor
xor
jmp
daa
or
dec
roll
add
push
outsb
jmp
aad
fldt
xor
add
mov
arpl
dec
mov
les
fiadds
sahf
jecxz
inc
pop
bnd
lods
mov
shlb
cmp
xchg
insb
inc
js
lock
lret
stc
or
lcall
pop
xor
test
cld
rcl
ss
sub
mov
push
arpl
sbb
rcll
les
aas
imul
cwtl
and
lods
push
int3
or
cmpsb
xor
faddl
in
xor
mov
bound
push
lcall
cmp
dec
mov
dec
into
std
cs
es
and
inc
pop
push
icebp
sahf
mov
or
dec
stos
lcall
mov
mov
xor
out
mov
push
mov
dec
stos
lcall
iret
mov
movsb
gs
in
sbb
mov
jbe
test
cli
leave
push
rcrb
cmp
mov
es
jns
inc
out
dec
fildl
jnp
sub
lock
cwtl
mov
mov
js
inc
sbb
cli
adc
xor
loope
xor
jno
lcall
cmp
or
cwtl
test
fldl
mov
mov
sub
add
ja
push
sub
pop
call
push
adc
in
mov
add
inc
in
cmc
mov
pop
les
inc
mov
sbb
add
cmp
hlt
daa
sbb
sbb
int
cs
stos
iret
rorl
mov
mov
sub
push
and
out
jmp
ljmp
mov
cltd
inc
cmpsb
jecxz
xor
xor
mov
std
xor
stc
mov
js
jp
test
xlat
mov
dec
negl
inc
js
and
aaa
ror
testl
pop
jl
adc
jo
dec
sub
loope
mov
adc
loop
jno
cmp
or
outsb
faddp
push
loop
rcrl
push
mov
xor
insb
or
popa
scas
loope
inc
and
ret
jo
lahf
enter
cmpsb
in
sbb
inc
push
pop
lahf
div
ljmp
inc
sub
imul
add
lods
lahf
mov
out
loop
jno
cmp
or
enter
pop
pop
or
jne
mov
sbb
stos
jbe
aad
clc
in
movsl
les
test
fstps
jge
pop
jno
lds
sub
fcmovbe
imul
xchg
lods
push
xchg
test
add
enter
adc
sub
jg
rorb
add
and
push
les
es
cmp
imul
pop
mov
iret
cmp
push
out
ret
sub
xor
aaa
jg
dec
orl
inc
cmp
dec
mov
xchg
or
xchg
pop
mov
adc
pusha
out
lds
sti
int3
sbb
sbb
adc
imull
inc
mov
sub
rorb
push
test
dec
add
sahf
mov
nop
addr16
int
pop
es
repz
push
rcrl
scas
pop
inc
out
add
cld
push
add
cli
and
and
or
pop
fs
sahf
add
xchg
cld
jmp
adc
or
mov
cltd
insl
lods
scas
pop
inc
out
add
mov
sahf
pop
scas
add
inc
sbb
imull
cmp
stos
dec
enter
addl
and
ljmp
and
ljmp
ret
clc
push
shl
adc
stc
adc
mov
ret
clc
push
dec
leave
jae
gs
fistpll
sbb
test
mov
mov
sbb
push
sub
adc
dec
mov
lods
pop
call
hlt
mov
and
jmp
int
inc
jg
push
xchg
in
adc
sbb
jbe
and
bound
and
jno
inc
outsb
sbb
lods
mov
sub
insl
movsl
cmp
pop
cmp
fcomi
lret
mov
in
mov
shll
insb
adc
mov
adc
xchg
dec
ja
sub
mov
dec
mov
scas
pop
add
in
sbb
daa
dec
cmpb
pop
xor
xchg
test
cmp
or
je
mov
in
popa
and
arpl
and
sarb
dec
insl
mov
outsb
aad
mov
rol
xor
xchg
jmp
jecxz
mov
lods
pop
jle
popf
int
sbb
sbb
sbb
fcmovnu
inc
and
lahf
pop
lods
fsubl
dec
pusha
test
mov
inc
inc
mov
cmpsb
mov
pop
xlat
std
mov
mov
data16
mov
sub
int3
xor
mov
jmp
jmp
cld
ret
push
pusha
mov
inc
pop
lods
fldcw
push
cmc
cmp
ds
mov
mov
filds
sbb
jne
jl
lret
mov
fnstenv
fcoml
fnstsw
sarl
arpl
inc
daa
fucom
push
push
jns
popa
pop
or
pop
mov
cmp
push
and
stos
clc
into
test
out
cld
jbe
inc
paddb
push
daa
es
mov
daa
jne
test
jb
ss
xchg
leave
dec
inc
jbe
dec
cmp
lret
cmp
sbb
push
xchg
ret
pop
shll
xchg
jbe
add
xor
pop
mov
gs
out
int3
lds
sub
xlat
arpl
xchg
mov
adc
push
imul
xor
dec
int
mov
mov
xor
popf
int3
dec
xor
mov
inc
in
out
sbb
jo
inc
add
pushf
mov
into
xchg
ret
jo
or
add
or
fdivrs
jae
scas
daa
clc
jnp
mov
imul
mov
lods
add
ret
sti
or
jecxz
mov
rcrl
dec
mov
and
or
pop
sbb
js
fistps
cmp
loopne
fucom
ss
aas
test
mov
and
dec
pop
push
orb
loope
rdmsr
sti
in
imul
cltd
add
and
mov
cmp
xchg
cld
data16
pop
adc
imul
pusha
add
test
aas
arpl
ret
cmp
dec
dec
push
pop
int3
popf
and
scas
jmp
ss
or
and
add
cmp
mov
or
xchg
mov
flds
and
mov
insl
inc
dec
lea
dec
inc
mov
pop
repz
sub
out
rclb
xchg
mov
stos
stos
subl
idivl
sbb
pop
add
pop
outsb
repnz
cmp
inc
pop
mov
sbb
mov
xchg
mov
or
inc
les
nop
ss
test
pop
or
dec
in
aas
es
inc
pop
out
mov
push
aaa
adc
ret
leave
es
jle
sbb
jg
xchg
fstpt
cmc
and
xchg
hlt
and
jb
lcall
fidivs
outsl
iret
fsubr
sarl
and
shrl
lock
mov
adc
in
mov
pop
aaa
or
es
mov
cmp
mov
es
jns
pusha
mov
les
aas
xor
mov
in
es
mov
mov
dec
fsubrs
in
les
xor
ljmp
cmc
sbbl
push
enter
scas
fmull
jle
dec
mov
fdivrl
dec
movsb
popf
add
sbb
push
adc
pop
repnz
sarl
or
adc
outsl
xor
jmp
and
mov
mov
and
daa
sub
jbe
push
xchg
mov
lahf
int
add
ljmp
sub
inc
lcall
pop
adc
and
add
sbb
sub
pop
shlb
call
pop
popf
hlt
cmp
mov
mov
mov
mov
outsb
pop
imul
fcmovb
or
sub
pop
std
movsb
push
or
sub
cwtl
iret
sub
push
add
pop
pushf
dec
inc
dec
pop
jecxz
or
in
jp
pop
lcall
or
mov
in
jmp
jno
jmp
imul
jg
jecxz
hlt
arpl
scas
lock
push
pop
jp
jecxz
mov
inc
push
sub
bound
and
imul
fxch
mov
ret
and
arpl
sbb
or
pusha
and
jl
mov
xchg
loop
sbb
cmp
lods
bound
push
lods
pop
insl
je
and
jne
jp
jl
push
mov
out
sub
jg
cmp
dec
cmp
mov
mov
push
test
in
test
cmpl
mov
add
fldl
and
lcall
or
les
inc
leave
jb
adc
mov
lods
sbb
mov
std
std
xchg
xor
mov
es
sub
sub
js
ss
inc
divl
aas
xlat
out
mov
arpl
pop
sbb
xchg
arpl
mov
lods
fxch
cltd
sahf
mov
loopne
push
mov
icebp
shlb
push
mov
and
stc
cmpsl
pusha
cltd
xchg
aad
mov
sub
xor
and
arpl
sub
fistpl
lods
jb
ret
mov
push
jle
lahf
es
dec
push
and
jne
inc
mov
and
shrb
xchg
dec
out
out
daa
push
inc
sub
adc
je
cld
pop
and
mov
daa
or
lods
cmovle
stc
mov
add
inc
scas
idiv
negb
or
inc
shlb
int3
dec
mov
imul
sub
jb
inc
adc
cmpsl
test
hlt
arpl
fisubs
and
out
leave
mov
jbe
mov
dec
scas
xor
shrl
or
out
notl
jle
mov
daa
cmp
sbb
inc
lret
dec
enter
inc
cs
inc
in
sub
lss
aam
loope
das
jmp
cmp
push
test
sarl
sub
lods
cmp
add
lock
xor
out
insb
ds
mov
cmp
les
ljmp
hlt
loopne
fwait
loop
sbb
mov
in
jbe
movsl
mov
pop
cld
adc
adc
stos
aad
shl
pop
int3
add
dec
int3
pop
pusha
mov
inc
je
repnz
push
cmp
and
cmp
aas
jp
adc
shrb
clc
sbb
push
adc
inc
icebp
mov
inc
je
popl
int3
test
pop
push
lock
fcomi
xchg
adc
mov
dec
aaa
fdivp
add
jg
cmpsl
outsb
mov
push
dec
jge
cltd
lock
sbb
or
mov
stos
or
mov
push
js
ja
sahf
iret
sbb
xchg
sbbl
cmpsl
and
dec
movsl
repnz
jae
repz
and
cmc
rcll
int3
ja
push
sahf
movsl
into
jmp
popf
or
loopne
repz
jmp
arpl
dec
sub
push
sbb
xchg
pop
imul
adc
xchg
je
in
aas
adc
ljmp
insl
out
mov
pusha
adc
push
je
dec
or
dec
lods
repnz
pusha
dec
arpl
cwtl
pusha
push
pop
dec
movsl
cmpsb
or
call
movsb
pop
mov
xor
xchg
scas
adc
mov
jle
stos
arpl
arpl
hlt
sti
dec
lods
jp
rolb
cwtl
push
pop
cmp
lcall
dec
inc
lret
dec
lret
push
dec
cld
add
push
sbb
out
scas
dec
int3
push
daa
arpl
xchg
or
dec
sub
xor
lcall
cli
dec
pop
xlat
mov
add
insb
popa
cmp
jmp
gs
mov
push
cwtl
rol
addl
out
out
nop
pop
or
push
push
adc
fbstp
inc
ficoms
stos
dec
sbb
pop
outsb
into
test
popa
sbb
pop
and
lea
fs
ret
and
cmpsb
lods
or
mov
lret
iret
adc
aaa
xlat
jns
pop
xchg
in
jge
in
jno
push
inc
mov
dec
sbb
ja
dec
mov
xlat
xchg
in
int
aam
stos
test
push
shrl
psubusw
cli
testl
lds
sub
sub
xor
pop
lahf
popf
push
int
fistps
jnp
loope
sbb
sub
inc
xchg
or
fdivrl
das
pop
add
shlb
or
fnsave
add
and
sbb
jo
leave
lock
daa
outsb
cmp
out
or
push
or
mov
pop
outsb
aas
cmp
cmp
cmc
push
sub
push
add
fsubrl
int3
cwtl
sub
push
call
sub
sub
aas
jns
inc
shll
jnp
dec
loope
ret
ret
add
test
jo
rcrl
mov
pusha
mov
in
lods
lock
or
sub
cmp
push
fdivs
push
inc
subb
arpl
dec
dec
and
xor
shlb
shrb
outsb
incl
stos
xchg
rcll
push
jle
mov
jnp
aaa
adc
movsl
jo
sbb
sbb
fadds
loop
fucomi
adcl
mov
mov
and
inc
inc
jb
dec
sub
mov
xchg
clc
mov
iret
sbb
sbb
outsl
sbbb
inc
and
jmp
and
or
call
lods
sbb
mov
aam
jp
and
sub
into
xor
je
sub
fwait
lds
test
stos
xor
jnp
or
inc
out
lret
pop
inc
push
out
cmp
orl
jl
jns
in
mov
rcrl
push
and
push
dec
lods
bnd
push
sub
add
rorl
mov
inc
mov
or
ror
ficoml
sahf
push
xlat
or
cli
inc
jp
mov
es
rol
adc
rclb
idivb
je
iret
lods
push
fiadds
stos
daa
fs
push
cmp
int3
add
out
inc
popf
mov
mov
repz
pop
sub
mov
into
sbb
xchg
dec
fbld
dec
jo
insl
cs
sub
push
cwtl
aaa
test
pop
neg
out
ja
push
inc
repnz
scas
sub
jae
hlt
test
cli
aam
add
cmpsl
xchg
cmp
mov
push
jl
cmpsl
lock
test
aaa
lds
fcomps
xor
add
stos
ds
mov
pop
aas
mov
jg
add
xchg
sahf
mov
xchg
flds
push
inc
movsl
add
sar
fldcw
push
out
mov
mov
aam
pushf
cmp
mov
out
mov
imul
insb
pop
idivl
lds
xchg
mov
leave
shr
and
cmpsb
jns
dec
mov
sub
mov
cwtl
mov
mov
imul
sub
cmp
mov
jle
out
movsl
adc
mov
jb
test
sub
xor
cli
inc
and
int
lods
push
cmp
imul
push
push
bound
stos
sar
fisttps
cmp
jecxz
mov
lods
xchg
jnp
xchg
mov
sub
insb
jnp
sub
xchg
jge
out
popf
lods
mov
pop
outsl
mov
stos
add
sub
leave
roll
add
sub
pop
xchg
push
fucom
and
pushf
dec
sbb
bound
daa
xchg
or
pusha
mov
push
push
out
add
sbbb
ja
sahf
cltd
addl
xor
loop
sahf
cmp
pop
daa
or
into
repnz
decl
xchg
dec
icebp
fadd
or
addl
shl
jnp
add
push
loop
shlb
push
ss
cmp
push
push
xchg
mov
das
jo
mov
xchg
push
je
call
imul
jmp
jnp
push
xor
in
jne
sahf
mov
cmp
repz
loop
add
sub
adc
xchg
cmc
rcr
aas
aam
push
sub
adc
int
int
rcll
xchg
aam
or
fimull
stos
ret
add
jge
and
push
inc
repnz
mov
xchg
mov
push
sbb
mov
xchg
movsl
and
lret
xor
or
loop
or
dec
popf
call
push
jle
lods
jp
mov
adc
jmp
pop
pop
lock
scas
test
mov
out
loope
add
cwtl
je
pop
scas
sbb
hlt
insb
in
add
icebp
mov
sub
jge
idivl
and
arpl
sbb
push
xchg
enter
data16
xor
jbe
xchg
xchg
inc
negb
or
cltd
push
mov
lret
jo
or
pop
iret
lods
jge
leave
stos
jne
push
lcall
inc
bound
and
mov
mov
inc
rorl
add
jb
fdiv
and
call
int
and
sub
pop
shrl
mov
and
imul
fadds
pop
pop
aas
pop
mov
ss
xchg
cmp
xor
imul
jl
popf
popa
clc
int3
ffree
lods
out
cld
clc
jnp
mov
movsl
mov
push
shr
and
inc
mov
mov
sarb
repnz
xor
ss
add
in
incl
adc
and
xchg
push
ss
xlat
ljmp
lock
sub
fxch
int3
sarb
repnz
xchg
std
jecxz
jmp
xlat
xchg
lcall
xchg
int
mov
pop
aaa
aam
into
push
addr16
pushf
sbb
in
sarl
inc
xchg
popa
jl
loop
mov
xor
mov
out
pop
pop
filds
notb
and
scas
mov
int
test
out
and
in
or
popf
pop
inc
add
addr16
lock
sub
fxch
insb
in
jge
jmp
mov
and
jmp
inc
xchg
pop
subb
lock
or
mov
aas
movsb
adc
add
or
pusha
sbb
fcomps
add
lea
xchg
lods
sti
mov
xor
leave
inc
lods
stos
or
add
and
mov
mov
nop
mov
ja
pop
add
flds
gs
testl
adc
js
lock
mov
push
add
mov
repz
xchg
mov
jne
ret
adc
hlt
scas
add
inc
xlat
stos
inc
or
int
mov
test
daa
cmc
lods
icebp
test
mov
out
pop
pop
movl
sub
or
or
dec
sahf
xchg
or
adc
hlt
scas
jne
pop
in
fwait
adc
jp
jp
call
mov
or
lock
in
movsl
adc
jge
bnd
push
int
fmuls
ss
jl
xor
xor
cltd
mov
loopne
ss
adc
pusha
loop
lahf
jae
test
out
insb
inc
sbb
mov
mov
enter
dec
or
repnz
xchg
sbb
dec
pop
icebp
arpl
in
ret
sbb
xor
or
jb
gs
std
dec
dec
push
pop
fs
mov
lret
pop
div
cwtl
std
andl
in
push
ds
in
sbb
bound
sbb
push
sbb
jg
data16
jbe
adc
xor
sbb
roll
sti
or
push
in
mov
ja
add
and
sub
mov
and
mov
dec
jnp
movsb
push
fsubs
fs
sbbb
inc
pop
out
xchg
jge
fisttpll
movsb
mov
cmp
fisubrs
xchg
fstl
inc
adc
or
test
insl
push
dec
out
xlat
cmovns
xor
cltd
xor
popa
rclb
mov
push
mov
and
roll
mov
xor
pop
pop
fs
loop
pop
push
pop
jg
sbb
js
cmp
mov
cmp
jl
mov
sub
js
and
inc
dec
sub
mov
es
sti
negb
add
inc
push
inc
gs
icebp
scas
pop
out
and
xchg
pop
mov
repz
or
fnstcw
push
int
sub
jbe
in
or
xor
or
adc
lods
arpl
inc
fildl
inc
rolb
mov
dec
loopne
rorb
mov
outsb
sbb
push
cmp
mov
mov
cmp
and
lret
xor
ds
cmpsb
mov
inc
sbb
cmp
fidivs
addl
adc
jno
sbb
cwtl
cld
imul
jl
ja
mov
inc
in
mov
inc
add
mov
xor
gs
lea
outsb
push
adc
push
dec
add
mov
mov
cmp
sub
fstl
xor
es
jl
dec
aam
int
inc
outsl
ficoml
push
sbb
and
int
jmp
repnz
pop
xchg
pop
add
push
inc
ja
sbb
or
dec
xor
mov
out
sbb
mov
push
or
js
cld
xchg
fnstenv
outsb
cs
and
mov
mov
adcl
xchg
mov
daa
mov
ret
jns
and
pushf
vmread
fdivl
arpl
push
cld
mov
les
mov
aam
int3
push
jmp
xor
xor
mov
pop
xchg
push
dec
xlat
ret
lock
ss
icebp
cltd
add
pop
jnp
or
lods
pop
scas
inc
outsb
mov
sbb
cld
xchg
add
lods
pop
scas
inc
outsb
mov
sbb
or
adc
jle
push
ljmp
jle
aas
les
and
and
adc
test
inc
mov
loop
bound
es
les
rol
cmp
sbb
inc
es
mov
scas
mov
hlt
dec
js
loope
adc
or
aad
jno
repz
loop
sbb
in
out
xchg
repnz
cmp
xor
cmp
data16
push
test
adc
cmc
mov
leave
shrl
pop
sbb
arpl
sub
cmp
pop
loopne
push
mov
ja
dec
sub
push
mov
xchg
dec
lret
xor
lea
cmp
fxch
stc
mov
pop
push
lahf
sub
loope
push
loop
xor
mov
jp
inc
popf
jg
andb
pop
rolb
sub
frstor
sbb
filds
adc
scas
jp
xchg
incl
ret
je
cs
push
shl
push
dec
push
lds
adc
and
add
enter
adc
or
in
xor
inc
test
mov
sahf
and
movsl
mov
lea
in
jmp
jge
adc
inc
mov
mov
das
iret
jae
in
aad
push
xor
loop
sub
mov
into
push
cwtl
je
or
test
add
or
enter
push
clc
or
mov
push
push
jp
ret
icebp
mov
sbb
xchg
movsl
mov
dec
stos
push
loope
lret
dec
pop
cltd
push
aaa
mov
outsl
jno
scas
sbb
stc
jne
sub
inc
sub
idiv
adc
pop
sbb
out
jg
sub
add
lahf
pop
hlt
sub
pushf
dec
xor
int
lret
lea
lds
xchg
mov
mov
pushf
jg
lds
ror
je
test
dec
movsb
mov
xor
inc
push
or
push
xor
aad
and
in
xchg
mulb
sub
int
lea
neg
inc
jne
jne
push
jbe
jg
aaa
dec
push
ret
arpl
daa
inc
scas
pop
in
cwtl
jg
aaa
dec
push
ret
icebp
insb
mov
dec
ffreep
in
push
mov
mov
cmp
cmp
cmp
iret
pop
lds
mov
mov
cmp
fwait
shlb
out
cmpsb
test
push
nop
nop
mov
mov
andb
lods
rcrb
push
or
rorb
pop
ja
sub
sbb
in
out
es
dec
jno
divl
lock
in
jne
pop
push
outsb
add
mov
sub
mov
aam
and
push
bound
xor
xchg
fsubrs
mov
cmp
xchg
pusha
in
mov
mov
test
and
adc
rcrl
and
dec
enter
xor
into
dec
xor
adc
aad
into
loopne
mov
cltd
fiadds
arpl
shl
adc
xchg
push
mov
aas
jb
ds
loope
cmpsb
mov
xchg
mov
negl
inc
push
cmp
push
out
imul
push
or
pop
mov
sti
inc
cld
mov
mov
pusha
das
and
xlat
arpl
jae
sbb
and
mov
stc
inc
test
pop
ljmp
inc
push
das
and
mov
daa
push
nop
push
rcll
mov
jle
jae
mov
les
xor
test
push
mov
inc
loop
popa
filds
insb
mov
and
mov
dec
lods
jle
pop
sub
fwait
inc
xor
icebp
xchg
lods
push
push
push
stc
popf
das
mov
fwait
inc
xor
icebp
xchg
lods
jecxz
sbbb
test
dec
cmp
and
leave
sub
mov
ja
push
push
lock
pop
fldcw
add
pop
movsl
outsb
sub
mov
stos
cmpsl
push
sahf
mov
push
aas
xchg
fisubs
ljmp
decl
sbb
adc
inc
dec
arpl
scas
sbb
xor
movsb
cwtl
push
mov
ds
and
add
imul
jbe
inc
jb
fimull
mov
mov
sbbl
sahf
lods
push
xchg
insl
mov
lret
outsb
push
outsl
dec
push
sub
push
movsl
mov
enter
rclb
mov
cltd
into
roll
movsb
hlt
inc
mov
clc
mov
test
sub
aam
sbb
repnz
sub
dec
call
loopne
ret
push
mov
test
xor
xchg
leave
inc
mov
sbb
jl
pcmpgtw
lcall
aad
imul
frstor
movb
dec
stos
cmpsl
push
in
push
imul
push
fnstenv
insl
imul
mov
test
repz
dec
add
xchg
xor
cmpsl
lock
loop
jnp
call
in
mov
out
shl
cmc
clc
mov
pop
in
lahf
shrb
adc
mov
repnz
dec
test
jmp
pushf
sbb
das
daa
or
add
jg
jmp
decb
pushf
ror
out
jnp
sbb
outsb
mov
mov
mov
orl
cmp
scas
scas
add
das
popa
sub
adc
jb
int3
xchg
movsb
lret
sbb
icebp
push
mov
jne
jge
cmp
fiadds
xor
out
shl
add
sub
jle
addl
sub
inc
aaa
xchg
xchg
movsl
scas
cltd
dec
fiadds
out
mov
mov
sti
xor
lds
gs
pop
lea
outsl
cmpl
iret
inc
jnp
cmp
adc
test
mov
sub
sbb
sbb
arpl
pop
lds
iret
cmc
jno
push
xor
fbld
add
cs
enter
insb
ds
xchg
xor
test
dec
pop
insl
test
and
sbb
mov
push
jne
jo
mov
cli
insb
xor
push
cld
out
and
js
es
into
movsl
xlat
outsb
frstor
test
lret
xorl
sbb
mov
xor
out
loop
ljmp
xchg
lock
jae
or
dec
fwait
imul
xor
test
add
sbb
data16
and
fidivrs
mov
stos
mov
frstor
dec
xorl
add
xchg
mov
pop
test
adc
scas
mov
mov
sub
insl
clc
add
clc
nop
repz
lods
sti
repz
jmp
sub
mov
gs
jecxz
loope
lock
or
adc
cltd
imull
mov
push
xchg
pop
pop
jnp
flds
mov
test
and
jmp
outsl
push
and
inc
dec
mov
cmp
gs
add
js
jb
xchg
sbb
imul
sarl
pop
hlt
shll
sahf
cmp
jae
cmp
js
and
dec
sub
aas
pop
jb
int3
sahf
loop
jbe
jae
out
out
or
test
sub
dec
cli
ds
cmp
sarl
add
mov
pop
xchg
mov
aad
jmp
movsb
imul
mov
lret
push
call
hlt
cmpsl
fbld
fisttps
sahf
jo
jg
shrl
jne
jecxz
pop
ficompl
xor
shr
jle
adc
cwtl
imul
lods
mov
dec
invd
imul
sbb
lock
pop
jg
sbb
sub
scas
bnd
xor
lods
mov
dec
mov
adc
xchg
ss
iret
adcl
dec
push
add
enter
mov
and
xor
inc
cmp
and
adc
sbb
mov
add
and
inc
jb
arpl
sti
xchg
fucomip
xchg
fisubrl
hlt
fdivl
mov
cmp
dec
cmp
fwait
test
dec
rclb
rorb
inc
jecxz
mov
jno
mov
cmp
aaa
ret
in
inc
pop
stos
and
cmpsb
push
cmp
xor
fstp
mov
or
les
mov
sbb
fmuls
add
sbb
ficoms
cmp
in
lcall
pop
and
or
cmc
dec
push
jns
in
adc
jg
mov
jo
xchg
rorb
push
jp
lods
push
mov
out
jnp
inc
mov
adc
xchg
popf
mov
jns
xchg
lds
mov
imul
loop
cmpsl
mov
mov
fbstp
ss
xchg
and
mov
icebp
dec
in
pop
mov
and
or
mov
in
arpl
add
xchg
loop
push
sbbb
lods
inc
scas
jns
fs
jnp
sbb
mov
mov
xor
adc
out
outsl
xor
in
cmpb
jecxz
shll
imul
dec
mov
push
xlat
in
add
mov
lea
push
pop
and
and
mov
data16
pop
repnz
test
imul
jnp
and
push
mov
lods
jne
adc
push
push
adc
xor
cmp
xchg
cmc
aas
imul
cltd
pop
cmpl
push
cli
cmp
outsb
fs
divl
xchg
enter
dec
rorl
addr16
sbb
mov
daa
mov
in
xchg
outsb
insl
cwtl
or
add
scas
dec
xorl
sub
jg
xchg
xchg
push
setne
push
mov
xor
bound
xchg
jge
push
mov
mov
lcall
and
xor
push
mov
mov
rolb
sub
fdivrl
add
jmp
sbb
mov
outsb
lret
inc
xor
mov
imul
jno
cmc
adcl
loope
pop
sti
mov
pop
aas
mov
jae
dec
repnz
cmp
add
insl
inc
fisubl
mov
loopne
jo
fdivrl
clc
jle
sahf
jo
pop
push
jne
dec
sub
mov
in
fnstcw
jle
std
xchg
cmp
fstpt
in
iret
lods
and
cmp
vprotb
mov
lock
cli
bound
inc
and
adc
repnz
mov
adc
dec
stos
mov
pop
daa
sbb
jmp
outsl
lods
sbb
in
rcrl
add
dec
sbb
pusha
sub
dec
int
dec
das
nop
sbb
pop
pop
cmpsl
fmull
and
ds
pop
in
pop
xor
xlat
arpl
lcall
xlat
or
iret
or
jns
aad
mov
jne
inc
cmpsl
mov
loope
cmpsb
xor
inc
and
jb
jo
sub
cmp
inc
cli
and
push
xchg
test
fidivrl
push
pop
xchg
ret
mov
mov
mov
jmp
add
xchg
jg
push
lahf
lret
adc
jo
jg
sti
je
repz
mov
fistpll
cmc
pop
pop
out
dec
adc
lret
xchg
stc
jb
inc
inc
leave
xlat
fwait
popf
and
out
popf
imul
xchg
aaa
jmp
cmc
xor
cmp
xchg
and
sub
jecxz
aaa
lahf
mov
pop
in
pminsw
mov
or
mov
enter
sti
in
lcall
push
sbb
add
inc
xchg
cltd
pushf
adc
out
call
aaa
int
cmpl
lahf
cmp
outsb
adc
xor
sbb
fimuls
xchg
les
jnp
sbb
or
loopne
and
mov
cmp
movsb
loope
decb
enter
es
lret
push
add
inc
movsl
in
xchg
lahf
stos
jmp
ljmp
enter
std
jl
cs
nop
jp
lahf
pop
mov
push
test
mov
jnp
addr16
adc
addr16
pop
mov
sahf
shl
mov
xchg
jge
movsl
cwtl
ret
dec
incb
cmp
xchg
mov
mov
inc
stos
pop
sub
repz
mov
push
es
push
fsubr
pop
push
je
inc
xchg
and
xor
std
leave
add
mov
int
lods
mov
xchg
hlt
cmp
and
fcmovnu
aad
add
lahf
pop
xchg
pop
dec
jmp
xchg
std
mov
and
stc
add
cli
icebp
mov
sub
and
in
mov
mov
xor
mov
cmpsb
push
push
jecxz
mov
jle
pop
fld
jge
or
popa
sub
divl
in
sub
clc
or
xchg
xchg
ja
out
mov
data16
je
fabs
or
cmp
es
push
sti
lahf
jp
mov
nop
xor
fisubrl
and
mov
add
mov
shrb
mov
cmp
fstps
lret
loopne
xlat
bound
lock
dec
scas
popa
pop
aaa
jb
fucomp
mov
sbb
data16
mov
xchg
int3
div
jmp
mov
push
fs
mov
fiaddl
push
xchg
and
xor
pop
sbb
or
imul
scas
xchg
mov
mov
je
addr16
pop
ja
andb
negb
xchg
pop
mov
sar
popl
jmp
enter
fwait
std
xchg
loop
or
mov
xor
mov
adc
in
lods
jnp
and
test
mov
inc
inc
ret
push
push
ja
sti
sahf
mov
ret
stos
cld
mov
js
icebp
into
dec
gs
mov
mulb
dec
and
gs
inc
int
outsl
std
repz
mov
jge
fs
jmp
arpl
cmc
xchg
mov
dec
push
or
std
repz
mov
jge
fs
enter
and
xchg
rorb
mov
and
rolb
add
xor
add
jmp
shll
push
stc
cmc
pusha
cmp
ss
out
cmp
call
fs
dec
jb
popa
jbe
cld
cmp
fidivs
aaa
mov
jno
fldt
push
jmp
jge
mov
cwtl
add
scas
pop
jle
stos
daa
cmp
loope
pop
mov
push
push
in
andb
cld
mov
jle
js
mov
push
ss
or
mov
popa
outsb
testb
pop
push
in
sbb
dec
std
push
mov
add
dec
adc
mov
popa
fxch
in
loope
rclb
pop
mov
repnz
into
dec
cmpb
xchg
xchg
test
mov
sub
pop
mov
mov
sub
inc
fidivl
add
mov
sbb
lret
or
xor
ja
les
roll
and
xchg
in
sbb
test
fcmovne
and
jle
sti
sbb
repz
std
lahf
sbb
pop
int
movsb
das
push
sub
push
pop
ficoms
out
imul
bound
jne
jo
das
js
jl
inc
ss
inc
inc
mov
mov
fistps
push
fmuls
cmp
lock
dec
and
jb
inc
mov
outsb
aaa
xchg
jb
js
cmpsl
test
sbb
pop
jle
enter
and
fildl
push
je
mov
mov
cmp
lcall
mov
dec
cld
and
ret
pushf
popa
out
insl
out
wrmsr
mov
ljmp
std
rcll
insb
ljmp
xchg
push
dec
pop
movsb
xchg
test
test
fwait
in
mov
cmp
shll
mov
daa
insl
out
rdmsr
loopne
ja
ret
jge
push
or
rcll
insb
ljmp
adc
pop
movsb
xchg
test
test
add
or
lods
repnz
in
les
jl
xor
add
sbb
jg
mov
jle
xor
mov
int3
div
add
mov
xchg
hlt
sub
mov
insl
inc
inc
cli
jl
xor
ds
and
inc
cmc
push
lea
dec
cmpsb
insl
sbb
push
in
je
sbb
mov
fdivp
adc
sub
fwait
xchg
dec
loope
and
sbb
iret
jo
add
mov
dec
mov
mov
je
jmp
dec
int
mov
sbb
adc
aad
leave
mov
mov
into
cltd
fbld
cmp
inc
jge
mov
ja
mov
pop
or
nop
test
ret
sub
lret
xchg
cmpl
cmp
dec
outsl
or
fsubp
gs
cmpsb
dec
outsb
mov
mov
mov
and
ja
or
cbtw
cmpsb
dec
jl
rorl
jo
inc
cmp
jo
xor
xor
sub
mov
mov
mov
or
dec
push
or
popa
aam
or
rol
mov
mov
sbb
icebp
mov
xor
pop
repz
xchg
jl
out
fbld
mov
jne
mov
jl
push
dec
je
mov
pop
lcall
outsl
add
add
jne
jo
das
push
xor
lret
es
jne
add
adc
sub
sbb
fiadds
out
mov
sub
mov
sbb
jo
inc
mov
mov
pop
bound
and
pop
rol
inc
sbb
imul
push
jo
das
add
addr16
lret
and
push
add
xchg
pop
cmpsl
dec
lcall
adcl
hlt
imul
test
adc
cmp
mov
pop
xor
or
sub
xchg
or
add
imull
xor
mov
and
jb
jno
cmp
scas
mov
lock
insb
add
inc
push
jne
xlat
sub
out
movsl
pushf
jecxz
mov
lds
call
rol
pop
or
xchg
loope
jns
stos
in
or
and
enter
fmuls
and
push
xor
mov
jg
adc
lods
pusha
das
scas
mov
insb
adc
inc
dec
in
mov
out
fwait
sub
push
test
mov
aam
cmpsl
rcrb
pusha
inc
cwtl
scas
stos
fcomi
dec
das
shll
jmp
arpl
lds
xchg
inc
ljmp
sub
xchg
inc
fisubl
jnp
xchg
dec
push
inc
push
and
int3
div
jecxz
js
push
bound
leave
repz
mov
popa
mov
in
repnz
adc
loop
mov
push
sub
fmuls
and
imul
xor
push
xchg
jno
fisubs
mov
inc
movsl
xchg
ret
jbe
adc
mov
add
dec
hlt
mov
push
daa
mov
push
xor
movsb
push
enter
jge
jo
inc
jecxz
je
inc
jmp
test
arpl
xchg
std
or
jne
xor
cmp
lcall
mov
inc
xor
fistps
fldt
dec
rorl
lcall
clc
and
int3
div
test
daa
imul
movsl
push
mov
push
int
leave
jo
lahf
mov
imul
and
mov
mov
pop
leave
mov
or
pop
fistpll
loope
bnd
jge
push
xchg
jne
xchg
xor
sahf
adc
das
cmp
or
lds
xchg
addr16
sti
or
mov
jb
mov
sahf
aas
flds
lret
fyl2x
loop
jae
imull
xor
mov
xor
icebp
addr16
add
adc
xchg
inc
ljmp
xor
sbb
call
sbb
cmp
lret
push
xchg
cmpsb
xchg
pop
add
movsb
sti
mov
or
ja
push
jne
cmp
test
fimull
dec
jp
ja
fmull
popa
mov
aaa
push
inc
jo
jp
mov
outsb
mov
xchg
add
lods
add
loope
lea
cmc
jno
fisubl
push
inc
clc
aad
scas
mov
call
and
or
mov
xchg
out
mov
es
jle
adc
lahf
outsb
ret
or
dec
xor
inc
sub
mov
out
jb
movsl
ss
pop
push
jno
loopne
out
sbbb
add
mov
push
lahf
movsl
into
lods
leave
fs
and
jecxz
out
jnp
jge
aad
test
icebp
mov
sub
and
in
notb
adc
sub
mov
call
cmp
and
sub
cmpsl
or
and
repnz
adc
lret
jbe
xor
push
scas
fstpl
mov
cli
sbb
push
mov
adc
add
data16
mov
dec
or
bnd
daa
in
shrl
ja
inc
or
xlat
iret
jnp
mov
dec
xchg
cmp
mov
rcr
cmp
push
aad
mov
push
and
or
xchg
xor
push
fcoml
outsl
cmpsb
cwtl
pop
leave
mov
pop
adc
dec
cld
int
les
hlt
and
imul
push
jno
loopne
mov
jne
aad
mov
sbb
test
dec
adc
std
ja
lahf
int3
mov
mov
push
imull
pop
sbb
in
push
es
jb
xchg
aad
jmp
andb
adc
mov
call
call
cmp
loop
rclb
ss
pop
add
cmp
add
cld
push
xlat
aam
jl
aad
jbe
push
aas
push
add
push
lret
js
mov
outsb
ficompl
mov
add
cmpsl
inc
sub
repz
div
dec
mov
pusha
js
lock
push
ret
push
cmp
or
movq
cmp
sbb
mov
mov
or
push
xor
imul
lock
or
push
idiv
push
push
jle
xchg
lods
daa
aas
and
pop
jae
js
push
jp
inc
and
add
hlt
enter
jg
bnd
xor
out
mov
xchg
pop
xor
and
push
shll
lcall
test
cmp
aam
in
or
cli
xor
xchg
or
inc
jbe
or
aas
sbb
lahf
int
loopne
jecxz
jo
xlat
and
mov
mov
jg
in
es
cltd
imul
les
test
lods
xchg
int
pop
dec
gs
inc
stos
add
fxch
pop
rcll
inc
lahf
aad
sbb
fcomp
js
mov
mov
fldenv
inc
dec
pop
ljmp
into
jo
pop
xchg
loope
push
sbb
sub
ret
gs
ret
lea
pop
mov
push
in
es
cltd
imul
pop
scas
inc
and
mov
fisubs
inc
mov
daa
push
out
dec
mov
jne
inc
xchg
xor
mov
jb
std
dec
lret
test
in
pop
push
in
je
sbb
pop
aad
fidivrl
shrl
and
mov
in
mov
lret
inc
movsl
dec
aam
cmp
and
inc
pop
mov
out
jmp
xor
pop
cmpsl
and
mov
sub
xor
xor
push
lods
call
sbb
jl
lock
adcl
mov
push
push
rolb
adcl
test
outsb
push
add
cmpsl
lea
cmp
cmp
popf
cmp
insl
sar
xor
scas
shll
pop
xchg
pushl
aam
or
pop
sti
and
xlat
shlb
inc
repnz
xchg
ss
pop
movsb
xchg
test
test
aam
enter
fildl
adc
in
ret
adc
sub
adc
scas
push
popa
jecxz
cmp
xchg
pop
pushf
xlat
pop
mov
cmp
sub
adc
xor
pop
std
popf
popf
ret
subl
jbe
movsb
mov
or
ljmp
cld
dec
and
sbb
add
sti
in
mov
jns
and
sub
mov
inc
adc
inc
dec
addl
in
mov
xor
and
inc
jle
scas
mov
test
xor
jmp
fdivrs
or
mov
mov
jno
cmp
movsl
jns
test
ljmp
cmpsb
jbe
test
into
stos
mov
jl
sub
mov
lahf
in
jl
push
sti
out
push
arpl
sbb
pop
in
loope
inc
dec
push
mov
movsl
aas
rol
cld
mov
mov
jmp
andl
pusha
mov
or
pop
jae
int3
popf
daa
popf
out
repz
fcmovu
ja
and
sbb
rorl
stos
arpl
sbb
xchg
hlt
mov
jecxz
sub
sub
jl
mov
popa
sub
test
aad
sbbb
mov
jnp
sub
inc
gs
xchg
imul
add
push
inc
or
inc
sti
insb
push
or
arpl
sbb
lds
dec
jae
sub
clc
or
adc
sar
xlat
xchg
pusha
lret
data16
xor
adc
dec
add
cli
stos
imull
jbe
pop
es
aaa
adc
add
andl
mov
adc
xchg
xchg
mov
adc
scas
mov
bound
xor
arpl
sbb
les
shl
push
dec
pop
ss
jmp
xor
fistl
and
sbb
push
mov
ficoml
fs
sbbb
arpl
sbb
ljmp
decl
mov
sbb
icebp
les
fsubrl
movsb
xchg
mov
xchg
fs
andl
mov
shll
dec
out
inc
ss
pushw
aam
mov
std
std
outsl
sub
in
xor
xchg
add
or
mov
fwait
outsl
mov
js
xacquire
outsl
jns
push
sahf
add
xchg
mov
rcrl
sbb
jl
mov
lods
lods
daa
sub
lea
negb
and
aad
push
repnz
sbb
mov
cmp
xchg
pusha
sbb
mov
pop
aas
cli
sub
scas
ror
xchg
ja
jae
test
movsl
push
movsl
out
cmp
ja
or
push
outsb
sti
loopne
sti
xchg
das
orb
inc
xor
mov
xchg
lea
push
xor
inc
fbstp
out
cltd
jno
test
cmc
sahf
mov
xchg
xor
push
mov
repnz
jno
bound
xor
mov
lcall
push
xlat
push
or
movsl
cmpsl
xchg
arpl
leave
sarl
daa
pusha
aad
and
xchg
fsubrs
repnz
mov
push
xor
ljmp
and
fisubrl
cmpsb
mov
sub
fistpl
mov
cmp
or
int3
inc
push
inc
or
inc
ljmp
rorl
and
jo
out
ror
data16
popa
jmp
mul
inc
and
push
xchg
jecxz
lock
mull
xchg
pop
fs
cmp
pop
mov
out
and
nop
mov
xchg
addr16
push
mov
push
das
in
cwtl
into
adc
ret
xchg
or
testl
xchg
mov
insb
mov
lods
mov
arpl
pop
mov
fisttpl
xchg
sbb
icebp
push
pop
pop
lahf
repz
adc
arpl
cmp
mov
pop
loope
rolb
fcomi
pop
jmp
sub
loope
adc
sub
sub
xor
mov
repz
cmpsl
out
add
out
loopne
scas
dec
aaa
add
addr16
sbb
fistps
shll
stc
leave
call
mov
jg
cltd
cmp
fists
add
scas
fnstsw
mov
push
jge
push
test
es
pop
testl
or
xchg
or
sub
ret
ss
cmpsb
ss
in
andl
push
sbb
add
fwait
adc
outsl
lret
int3
xor
push
adc
inc
lods
mov
imul
cmp
loopne
shr
or
rcrl
jo
stos
or
inc
dec
mov
les
xor
sbb
cmpsb
and
and
lods
lds
into
aam
cmp
jmp
pop
scas
fdivrs
xor
xchg
or
test
rorb
in
jg
inc
mov
mov
and
adc
imul
push
pop
fmuls
ret
int
jl
lock
xor
xchg
out
add
sbb
xchg
sti
mov
mov
fnstsw
adc
jnp
jb
or
jae
cmpsb
cmp
sub
outsl
imulb
lea
das
mov
out
xlat
pop
jne
dec
cmc
mov
mov
loopne
ret
sbb
sbb
mov
mov
push
hlt
jecxz
test
fisubs
fs
dec
mov
in
out
hlt
les
fnsave
xchg
inc
leave
xchg
in
loopne
rcl
xchg
setp
lret
pop
cmp
xor
push
cmp
popf
insl
jg
popa
sar
mov
push
mov
jecxz
andb
sub
bound
cwtl
mov
xchg
push
iret
adc
push
pushw
std
inc
and
push
sub
sti
shll
or
adc
scas
add
data16
outsl
test
or
lcall
mov
call
mov
sub
pop
xchg
sbb
jno
sets
lds
imul
cwtl
mov
stos
fsubrs
sub
addb
xor
xor
push
in
fstp
inc
movsl
adc
inc
rorl
les
cmpsl
iret
cmp
cmpsl
push
loop
ficoml
mov
xchg
pop
dec
rcrb
xchg
sti
pop
jmp
sbb
sbb
adc
adc
push
ja
and
mov
or
lret
xchg
mov
add
int3
inc
and
in
sbb
ret
sub
outsl
pop
jb
add
test
cmp
lea
cmp
dec
outsl
imulb
loop
jne
push
js
movl
adc
insb
sbb
inc
jp
mov
lret
sbbl
repz
aas
out
out
les
sbb
out
mov
enter
jg
dec
cmp
testb
dec
and
rolb
outsb
or
lods
sub
sub
and
xlat
fists
rorb
cld
sbb
lret
out
or
call
and
fstp
jp
mov
mov
inc
add
in
sbbl
jmp
fcompl
mov
cld
sbb
fdecstp
add
cmpsb
arpl
inc
mov
cs
leave
scas
push
shlb
sbb
sbbl
das
add
push
mov
push
push
push
sarl
insl
xchg
mov
addl
and
pop
fcomip
sbb
push
repnz
pop
inc
pop
xchg
push
test
mov
call
fistps
sbb
xchg
add
imulb
test
sub
push
pop
leave
mov
or
pop
nop
jb
aaa
mov
pusha
std
xchg
inc
nop
fists
push
lahf
adc
xchg
arpl
test
push
add
in
out
sbb
dec
in
scas
push
jmp
loope
icebp
dec
sbb
xchg
adc
in
adc
pop
sbb
dec
repz
fiaddl
ja
pop
das
or
sub
mov
mov
insb
imul
mov
cmp
sbb
adc
jl
push
fwait
xor
in
lret
fistpl
subb
and
push
out
mov
add
ljmp
pop
or
mov
and
stc
loope
sub
xchg
das
sub
dec
inc
and
adc
outsl
jle
xchg
push
imul
dec
adc
xchg
sub
inc
lcall
xor
lcall
ja
lds
int
xchg
mov
orb
fldl
and
inc
mov
inc
dec
or
dec
lods
cmp
or
or
loope
int3
xor
mov
movsb
les
or
push
inc
stos
sbb
mov
xor
mov
cmp
out
mov
inc
inc
popl
rorl
movsl
jg
shll
xchg
add
stos
jnp
pop
jl,pt
adc
fnstenv
mov
xchg
add
push
in
push
inc
sbb
dec
repz
cs
mov
adc
mov
jge
fwait
es
lahf
adc
dec
lahf
sub
mov
aas
mov
lret
aaa
popa
pop
aaa
fidivl
xor
jge
push
xor
scas
jmp
aad
mov
dec
xorl
leave
jp
sbb
out
stos
add
cmp
pop
sets
out
dec
arpl
mov
jbe
dec
pop
pop
jne
xchg
aaa
repz
nop
push
fldcw
xchg
jne
das
jge
lret
mov
je
stc
push
aas
in
and
dec
mov
das
enter
xchg
mov
and
cs
jge
cpuid
cli
jp
xor
clc
xchg
out
or
js
ja
push
adc
lea
mov
inc
in
dec
dec
and
mov
inc
int3
cltd
in
lret
sub
and
mov
dec
add
sbb
aam
xlat
in
mov
dec
ret
dec
jno
repnz
ja
negb
sti
aas
pop
adc
cmp
imull
add
mov
jp
xchg
popa
adc
pop
or
adc
lret
push
fucomi
call
adc
dec
bound
pop
cmp
sbb
mov
mov
test
in
add
insl
lcall
xchg
xor
mov
jp
mov
jne
fsubr
dec
popf
sub
lcall
add
aas
jle
jp
add
ror
mov
add
int
xchg
xor
sbb
jmp
mov
xor
or
jp
jge
enter
pop
hlt
js
jo
aam
insb
xchg
loop
jmp
mov
sub
test
sub
sub
rcrb
fldt
pop
andb
lcall
pop
dec
or
pop
add
mov
xor
mov
imul
adc
mov
stos
push
lahf
repz
xchg
push
inc
ret
sar
das
cmp
stc
orl
aas
dec
fdivrs
into
enter
hlt
cmp
inc
cmp
int
xor
xor
lds
lcall
pop
pop
movsb
fsub
mov
dec
scas
sub
and
shlb
jp
xor
and
cmpsl
jg
or
or
stc
and
scas
or
xor
mov
call
lods
push
sub
or
dec
icebp
mov
aas
jmp
movlhps
mov
and
mov
mov
aad
dec
in
fstps
inc
scas
add
cmp
pop
dec
scas
sbb
cmpsb
out
sahf
sbb
outsl
xor
pop
and
fidivrs
in
mov
fmuls
dec
cmp
push
sahf
mov
dec
mov
pop
pop
push
ljmp
dec
in
fbld
jo
out
push
mov
lea
push
sbb
inc
clc
pop
cmpsl
sbb
sub
aam
mov
and
push
pop
ljmp
test
fidivs
dec
out
pop
and
mov
fsubl
stos
and
insb
mov
cltd
or
add
bnd
dec
loop
gs
dec
sub
or
sub
push
insl
cs
sub
pop
cmpsl
cmc
mov
jae
pop
xor
in
lret
addl
movsb
imul
push
lret
xchg
outsb
test
push
jecxz
sbb
inc
xor
mov
popa
aam
sub
fnsave
mov
jno
inc
xchg
push
push
rol
mov
inc
push
sub
aaa
mov
out
add
mov
fistps
loopne
add
pop
enter
fmulp
jno
aam
ljmp
jbe
mov
div
dec
lock
push
pop
and
repz
adc
movsl
add
jp
xchg
imul
leave
popf
mov
jbe
sbb
test
cmp
ret
popf
out
inc
je
shlb
das
iret
call
in
shlb
das
xlat
sbb
sub
faddp
cmpsb
rcll
sbb
or
addb
add
cmp
jge
ucomiss
mov
sbb
jae
lret
add
bound
fisubrs
insl
sub
fimuls
dec
aas
lret
subl
mov
repnz
jmp
cmc
sub
inc
mov
push
mov
xor
mov
inc
scas
sbb
popf
mov
push
pop
mov
inc
movsb
aaa
xchg
mov
push
stos
in
lahf
xlat
lock
push
das
mov
popa
pop
adc
push
dec
add
mov
in
cmp
mov
add
push
mov
mov
push
bound
popf
pop
mov
mov
icebp
stc
pop
aaa
fidivl
mov
inc
push
fmull
mov
cmp
mov
xor
sub
and
xchg
cmp
and
aad
add
inc
insl
xor
leave
cld
mov
cmp
adc
pop
stc
pop
dec
cwtl
in
inc
fstps
mov
lods
aad
in
mov
mov
push
stos
mov
clc
stc
into
jmp
cmp
add
inc
adcl
xchg
repnz
and
sbbl
aad
mov
cld
mov
dec
scas
sub
adc
js
and
and
fsts
push
pop
and
movsw
movsb
ja
push
cltd
outsb
jbe
decb
xchg
iret
mov
sarl
jbe
lret
in
lret
push
inc
fsub
push
pop
and
ja
das
outsb
shll
sub
cmpsb
outsb
push
std
lods
cmp
push
call
adc
lret
fmull
adc
sbb
imul
scas
test
add
jp
sbb
out
push
sti
cmpsb
out
xchg
mov
mov
mov
jbe
lods
jl
cmp
jmp
imul
add
in
insl
test
scas
cld
leave
sub
jge
xor
lock
push
mov
inc
pop
pusha
xor
popf
dec
or
imul
enter
xor
aas
lahf
adc
dec
sub
enter
lods
pop
outsb
add
inc
jp
sub
mov
pushf
dec
xor
dec
jecxz
xchg
add
xor
mov
xchg
out
mov
loopne
sahf
rorb
adc
stos
cmp
jmp
cmp
dec
movsb
pop
shr
mov
jmp
stos
and
stos
sbb
or
loopne
adc
mov
lods
dec
push
inc
lods
push
xlat
jp
cmp
jno
adc
push
mov
fxam
out
xor
or
mov
pop
lret
fnstsw
xchg
icebp
sarb
mov
add
push
popa
sbb
insb
dec
jmp
cmp
pop
xor
scas
mov
xor
mov
jmp
pop
cmp
jno
mov
mov
call
add
cmp
stc
sbb
repz
adc
mov
jge
pop
and
or
leave
xchg
mov
xor
stos
xlat
or
movsl
add
shlb
cmp
push
and
hlt
dec
jbe
xlat
push
pusha
push
dec
stc
xlat
cmpsl
daa
loope
cld
popa
enter
xor
mov
mov
xlat
cmpsl
daa
loope
cld
popa
enter
loop
mov
aad
lcall
bnd
add
inc
adc
mov
mov
mov
mov
jecxz
ret
test
mov
mov
pop
xor
push
pop
ja
out
push
sub
pop
xchg
mov
data16
adc
sbb
pusha
mov
xor
cld
jmp
mov
mov
pmaxsw
out
cmp
xor
add
in
jge
xchg
mov
push
push
xor
push
das
push
dec
mov
lcall
lock
or
pop
in
enter
pop
sub
mov
leave
mov
das
lds
daa
rcrb
mov
pop
pop
push
cltd
pop
pop
xchg
mov
inc
aaa
addl
adc
jns
sbb
mov
outsb
lea
ret
pushf
jle
xchg
xchg
mov
out
aad
fwait
xchg
fimull
xchg
sub
pop
xchg
daa
add
sbb
loope
stc
out
inc
test
push
lods
in
ss
cld
fs
dec
lret
adc
mov
repz
jg
mov
xor
out
fucomi
outsb
test
fisubrl
push
add
lea
es
insb
xor
bnd
aam
or
imul
mov
in
mov
loop
lahf
xor
and
jno
outsl
gs
sbb
daa
dec
stc
mov
xchg
mov
xchg
mov
in
push
mov
pop
leave
add
cmpsb
mov
dec
adcb
push
fisubl
cld
fs
dec
lret
adc
insl
les
hlt
mov
aad
rcll
leave
push
les
cmp
outsb
js
mov
into
and
mov
xor
ret
rcl
sbb
cmp
arpl
jg
inc
push
ja
lods
sbb
outsb
iret
pop
int
jl
aad
movsb
outsl
lods
xchg
shll
fildl
aas
mov
dec
or
jb
std
or
fists
mov
sti
xchg
jp
xor
out
out
insl
loop
jae
xlat
add
jne
cmp
push
lret
cmp
adcl
and
out
adc
pop
mov
aam
lcall
add
and
lahf
scas
clc
sub
aas
pusha
push
js
xchg
orps
jbe
pop
mov
pop
cmc
cwtl
mov
in
imul
into
cmp
mov
dec
mov
stos
xchg
orl
jne
mov
xor
jle
mov
arpl
out
aas
push
push
add
xchg
push
jns
loop
in
and
cwtl
int
into
and
loope
fidivrl
sbb
cld
std
test
stc
ja
or
cmp
js
or
sbb
sti
xorl
inc
pop
push
jmp
adc
lods
mov
fs
sub
or
add
ret
notl
push
ss
pushf
pop
in
test
jg
into
aaa
pop
arpl
int
stos
jns
rcrb
mov
ret
loope
rcrl
ss
xchg
in
fcompl
jmp
in
cwtl
sub
hlt
push
xor
pop
mov
out
dec
movsl
mov
fcmovb
mov
add
cmp
sub
fninit
cld
js
or
push
ss
nop
sub
sub
iret
lcall
insb
sub
daa
sub
xchg
addl
push
cmpsl
sbb
adc
loope
push
pop
outsl
xlat
lahf
cmp
xor
mov
sub
clc
lods
scas
jmp
xchg
std
scas
repnz
and
inc
lahf
xor
and
jno
sub
xchg
std
std
xchg
mov
ds
addr16
inc
or
inc
or
icebp
mov
clc
sbbl
mov
sub
dec
push
xchg
sbb
dec
mov
xor
mov
jnp
jbe
cwtl
or
nop
dec
add
jecxz
divl
mov
jo
std
fsts
out
jb
add
outsb
jmp
pop
icebp
jns
sbbl
mov
xor
and
jg
ret
inc
js
pop
mov
sub
push
in
leave
data16
loopne
adc
dec
push
sbb
scas
mov
out
js
mov
movsl
push
push
pop
je
movsb
jecxz
inc
pop
sbb
inc
jl
les
shll
jl
sahf
xchg
jmp
jnp
inc
push
sbb
adc
std
fnsave
jae
aaa
mov
lea
adc
dec
push
xchg
mov
test
mov
or
clc
xor
adc
xor
enter
iret
xchg
mov
stos
jmp
mov
sti
sub
jg
outsb
lods
or
sarl
jo
ljmp
inc
inc
push
dec
outsb
lea
sarb
mov
fildl
fistpll
or
xchg
push
push
push
push
sbb
pushf
adcl
or
adc
push
mov
sti
sub
jne
movsb
aam
mov
dec
jmp
imul
sbb
ja
push
test
sub
std
icebp
into
lock
push
jae
cmpsb
jns
cmpb
pop
or
xchg
pop
push
push
inc
or
mov
pop
push
sub
add
stc
dec
jae
fcmovne
add
ja
test
xor
clc
mov
ss
mov
lret
jb
and
add
lods
mov
mov
hlt
sub
insb
jnp
clc
clc
jg
outsl
loop
imul
loopne
cs
add
repz
pop
jle
xchg
inc
mov
dec
add
jo
fcompl
sahf
jle
out
popa
cmp
cmpsl
or
inc
insb
push
mov
loopne
and
pop
das
cmpsl
cmpsl
xor
push
pop
aad
jne
push
jo
jno
adc
nop
shlb
push
mov
xorl
cmpsl
inc
xor
hlt
sub
sub
jne
add
jo
stos
mov
lods
or
jl
mov
pop
or
xchg
lahf
stos
sbb
inc
icebp
jno
pop
fiadds
mov
andl
cmp
loop
pop
mov
cmp
adc
lods
pop
pop
adc
loope
push
hlt
movsl
out
enter
sub
shll
out
pop
daa
xchg
inc
mov
push
rcll
movl
or
mov
jo
jno
adc
test
repnz
test
fidivl
and
pop
dec
jmp
lahf
jg
xchg
mov
in
pop
cmp
mov
push
pop
adc
inc
xor
imul
jge
pop
push
les
cmp
hlt
es
mov
jo
leave
ds
cmpsl
in
daa
mov
fists
call
jo
pop
adc
or
fnstsw
dec
sbb
push
ja
xor
jns
jne
dec
fstpt
add
mov
add
xchg
xchg
mov
jno
iret
or
daa
jne
outsl
or
or
stos
push
inc
inc
and
movntps
movsb
std
fsubl
jnp
cmp
dec
mov
movmskps
sub
icebp
mov
into
xchg
idiv
mov
xor
inc
cmp
outsl
xor
push
mov
outsl
and
movmskps
sub
icebp
mov
sarl
out
xchg
xchg
pop
rclb
sub
out
scas
cmp
lahf
adc
subb
fmuls
das
jnp
add
ret
leave
dec
jp
aas
dec
inc
or
popf
repnz
push
or
mov
xchg
inc
loopne
sbb
add
jl
data16
fldl
in
aaa
jbe
push
cmpsl
jae
popa
aas
repz
bound
pop
loope
add
push
fstps
scas
cmpsb
jne
xchg
fsts
push
jb
push
or
dec
pop
add
xchg
inc
pop
push
xchg
xchg
mov
mov
rcr
bound
cltd
mov
enter
xchg
repz
push
fsts
movsl
adc
add
dec
mov
ss
mov
or
lret
cmpsb
cmp
sub
ja
mov
sbb
mov
dec
and
cli
sbb
lahf
insb
popf
jmp
mov
xor
dec
xor
daa
sbb
lock
sbb
in
insl
les
add
mov
fistpl
nop
xchg
pop
test
aam
mulb
xchg
add
dec
mov
rolb
call
les
rorl
sbb
cli
ds
fiadds
aam
ja
add
jno
and
mulb
cmpsl
xchg
daa
xchg
loope
enter
mov
pop
call
xchg
inc
pop
dec
mov
iret
aam
fs
aam
inc
push
sub
jge
cwtl
xor
add
push
shrl
push
icebp
jnp
sbb
cmpsl
or
pusha
dec
pushf
scas
cwtl
ret
fstp
imul
xor
pop
nop
jge
jo
xchg
jl
push
jae
jo
and
jle
xor
lea
mov
dec
and
js
sbb
aad
mov
push
ja
mov
jl
sub
test
shll
or
loopne
push
loop
jns
push
mov
pushf
inc
ljmp
mov
out
ljmp
pop
loopne
pop
fistpll
and
jmp
fidivl
sbb
pushf
loop
sub
mov
roll
jbe
mov
imul
jo
jnp
cmp
and
xchg
fsubrp
and
jecxz
dec
add
test
and
jmp
push
cmp
rcrl
aaa
subl
add
jmp
inc
andb
add
insl
push
mov
ljmp
and
incl
aaa
and
lret
push
or
adc
push
les
lea
dec
cmp
pop
cmc
jo
or
es
in
loop
pop
out
cmc
add
and
pushf
xchg
sub
std
cmp
add
mov
pop
cmp
inc
push
jnp
movb
adc
shrd
pop
mov
xchg
adc
loope
xlat
test
mov
imull
cltd
je
in
jns
mov
idivb
je
fcmovu
jmp
lahf
imul
dec
sbb
imul
pop
call
les
or
out
ret
lea
add
mov
dec
pop
aam
jmp
cmp
in
shl
mov
aas
sbbl
xchg
clc
adc
xor
mov
loope
xchg
push
lret
clc
sbb
popa
jnp
dec
sbb
pusha
mov
stos
xlat
fstps
cmp
adc
shrd
loop
and
data16
pop
add
and
cmp
je
inc
int3
leave
or
and
mov
lret
fiaddl
stc
add
loop
loopne
out
lea
mov
jle
lock
push
jnp
jnp
or
adc
enter
hlt
int3
fucomi
roll
mov
jmp
mov
pusha
inc
fsubrs
imul
lcall
mov
cmpl
into
cmp
adc
inc
sub
or
fs
in
xor
mov
push
sbb
cmp
addr16
stos
faddl
insl
and
mov
pop
lds
shll
adc
lods
dec
movsl
xor
add
jns
icebp
std
or
cs
and
outsl
mov
movl
movsb
xchg
pop
pop
sti
shrb
pop
daa
push
jp
jecxz
ljmp
or
mov
stos
inc
cwtl
dec
xchg
pusha
fwait
ljmp
or
pop
jle
xor
cmpsb
and
in
fwait
ljmp
std
insb
iret
call
or
lret
push
test
jle
roll
cs
sub
mov
call
mov
lret
test
push
aas
xor
add
in
lret
mov
add
gs
clc
cmp
or
push
sbb
xchg
flds
mov
pop
dec
cmp
push
loop
shr
inc
mov
cmpsl
push
dec
jo
mov
sbb
sbbl
or
scas
int3
or
jno
sub
es
subb
jp
dec
test
dec
out
mov
dec
cs
mov
cmc
pop
sbb
or
xor
scas
sub
ja
sbbl
sub
cmp
or
lcall
xchg
jl
seto
popa
pop
or
adc
or
mov
push
in
push
xchg
mov
push
jp
fistps
ljmp
push
xchg
scas
and
sbb
push
cmp
icebp
xchg
clc
lock
fbstp
mov
outsl
cwtl
out
cli
and
cmpsl
push
insb
fcmovnbe
jb
xlat
pushw
cwtl
mov
adc
inc
or
dec
mov
and
adc
imull
lret
jle
sub
jg
lods
sub
call
mov
mov
add
and
add
into
test
mov
mov
xchg
add
notb
popf
xlat
insb
adc
imul
js
push
lahf
xchg
sub
push
dec
imull
add
cmp
mov
pop
xor
mov
fdivp
sub
add
popa
scas
mov
mov
arpl
clc
sti
mov
and
sbb
jne
xor
outsl
jp
xchg
rolb
pop
pop
push
sub
insl
dec
mov
xchg
mov
outsb
mov
cmp
clc
stc
stc
xchg
mov
imul
leave
xor
loopne
pop
lods
lret
pushf
xor
mov
or
lcall
and
xor
clc
push
mov
xchg
loop
xor
push
je
imul
add
imul
pop
pop
lods
jo
adc
stos
cmp
fildl
inc
imul
or
inc
out
pop
add
pop
and
xchg
push
xchg
stc
and
jle
push
adc
ljmp
bound
pop
mov
xor
jne
sbb
or
scas
sahf
inc
popf
outsb
pop
inc
data16
loop
lahf
and
fdivs
mov
rcrb
and
and
add
popa
fwait
mov
test
hlt
in
dec
xlat
cmp
add
mov
mov
inc
and
mov
stc
orl
ror
push
sbb
fcmovnu
pop
and
or
repnz
imul
addr16
or
lret
mov
pop
roll
dec
dec
and
mov
lea
fs
and
mov
xchg
sub
dec
mov
pop
stos
inc
pop
sbb
mov
orb
jnp
push
ror
push
filds
push
lods
repz
loop
inc
test
out
clc
ja
sub
imul
sub
or
gs
and
movsl
fsubs
or
jg
mov
and
xlat
jmp
sub
outsb
js
sbb
mov
test
mov
xor
test
add
xchg
iret
shrl
push
test
fistps
inc
mov
sub
fwait
xor
icebp
fs
sbb
decb
daa
pop
add
lods
sub
leave
or
xor
pop
jge
cmp
mov
cmpsl
inc
cmp
jnp
daa
roll
cmp
mov
pusha
adc
bound
mov
sub
dec
test
push
lods
push
cmpsl
popf
push
jne
push
addb
mov
call
sbbb
xchg
jne
xchg
inc
mov
or
bnd
sbbb
pop
addr16
push
pop
jb
mov
cmp
mov
movsl
add
mov
or
xchg
mov
lret
jp
cmc
sbb
loopne
jo
jle
xlat
je
int
mov
sbb
mov
loop
es
or
sti
fnstenv
lds
adc
mov
sbb
mov
and
mov
out
ljmp
test
hlt
and
str
dec
outsb
ret
jg
cld
fmuls
loop
shrl
icebp
cwtl
clc
push
fidivrs
and
add
movl
icebp
push
roll
cli
xchg
sti
push
cmp
mov
clc
sbb
je
int3
outsl
setno
cmpsb
add
adc
or
mov
lret
call
aas
lcall
push
xor
mov
xchg
aas
inc
inc
dec
test
dec
scas
mov
push
cmpsb
or
lret
out
fildll
push
shll
inc
enter
or
fnsave
add
ret
xor
jmp
cmp
mov
push
add
push
popf
jns
subb
loope
pop
xchg
inc
mov
add
sti
out
inc
cmp
outsl
cmc
fidivl
movsl
xchg
and
out
clc
fidivrl
jmp
dec
mov
jmp
cltd
or
add
insb
repnz
pop
insl
popa
into
rcrb
mov
mov
inc
xor
adc
outsl
iret
jmp
sbb
shrb
in
pop
cmpsl
pop
push
ret
mov
mov
and
ja
and
sbb
pop
xor
ja
xor
sbb
sub
add
push
fnstsw
outsb
dec
clc
jg
andl
andl
andl
andl
test
leave
and
inc
shl
testl
sbb
je
jno
imul
push
int
jno
mov
imul
sbb
repz
aaa
mov
cs
jns
and
mov
repnz
jl
arpl
sbb
inc
push
pop
sbb
imul
movsl
cli
xor
jg
inc
xorl
lods
mov
adc
lds
and
inc
xlat
push
sbbb
fsubrl
inc
arpl
sbb
loop
inc
aas
in
hlt
xchg
lea
or
aad
sbbb
lea
jb
adc
inc
cwtl
cmpsb
cltd
inc
push
arpl
sbb
scas
repz
jnp
inc
mov
jo
add
insl
and
stos
or
test
pop
inc
pop
sub
shlb
gs
sbb
jp
jmp
or
pop
out
inc
lock
negl
mov
cmc
call
in
fs
fildll
sar
push
xchg
int3
push
shlb
pop
inc
lods
fsubrl
fidivl
mov
push
js
pop
out
out
xor
outsb
leave
xchg
pop
stos
test
mov
pop
xchg
adc
sub
fcoms
out
loope
mov
fidivrl
jge
push
dec
movsb
sbb
outsl
inc
fld
fs
xchg
cmp
imul
vcvtdq2ps
cli
xchg
pop
dec
xchg
xchg
jno
or
jge,pn
pop
outsl
sub
rcrl
test
cmp
in
or
ss
add
in
inc
or
outsl
in
int
mov
ficompl
fsubr
ret
aaa
push
inc
push
dec
in
cmpsb
cmp
stos
fwait
xor
jbe
lds
push
movhps
test
and
xor
xchg
mov
lods
in
adc
mov
icebp
testb
pop
stos
rcrb
test
adc
pop
xor
int3
push
testb
mov
jmp
movsb
mov
xchg
push
aaa
adc
lret
mov
in
push
jo
loop
jne
sbb
sub
daa
mov
in
push
pop
addl
mov
cmp
fiaddl
loop
mov
loop
rcll
mov
or
push
push
aam
dec
loop
mov
in
lock
add
mov
outsb
rcll
jo
push
adc
fldl
incl
mov
mov
add
jns
inc
push
pop
or
mov
cwtl
icebp
fdivs
push
or
aas
addr16
mov
ffree
add
xlat
cmp
pusha
pop
sbb
add
daa
sub
mov
inc
ljmp
nop
callw
sbb
push
dec
xchg
cmp
gs
jle
cmp
mov
push
mov
mov
flds
mov
inc
push
lret
scas
push
lock
insl
dec
pop
and
inc
in
mov
movsb
xor
aad
mov
lock
pop
fsts
mov
arpl
sbb
andl
jo
mov
arpl
sbb
cltd
nop
les
sarb
andl
jecxz
mov
arpl
sbb
imul
mov
xor
sbb
ds
fs
sbbb
pop
mov
mov
arpl
sbb
outsl
andl
andl
push
xor
mov
aad
sbbb
iret
mov
hlt
mov
fs
sbbb
or
mov
mov
out
andl
pusha
push
cmp
arpl
sbb
aas
pushf
js
addr16
mov
xor
ljmp
andl
pusha
popa
fidivrl
mov
arpl
sbb
or
int3
arpl
sbb
xlat
inc
xchg
cmpsl
arpl
sbb
fidivrl
arpl
xchg
arpl
sbb
sbb
jne
arpl
sbb
movsb
mov
jmp
andl
insb
gs
data16
arpl
sbb
adcl
arpl
sbb
les
cmpsb
dec
jge
cmpsb
arpl
sbb
scas
jecxz
mov
adc
aad
sbbb
xchg
movsl
jl
add
fs
sbbb
test
add
arpl
sbb
cs
jp
xor
arpl
sbb
je
push
aaa
out
pop
add
fs
sbbb
arpl
nop
mov
nop
in
mov
andl
sbb
or
cmp
andl
ret
enter
arpl
sbb
cmp
pusha
push
arpl
sbb
enter
fwait
ret
cltd
arpl
sbb
jns
add
fs
sbbb
aad
jns
pop
ret
sbb
sbbb
ss
cmpsb
jmp
arpl
sbb
sbb
rcrl
jnp
arpl
sbb
xchg
mov
arpl
sbb
push
leave
mov
nop
add
andl
sub
mov
andl
pushf
cmp
xor
sbb
aad
sbbb
cs
pop
and
insl
fwait
jle
andl
aas
fnstcw
cmp
cmpsb
arpl
sbb
cmp
mov
xor
arpl
sbb
cld
sub
subl
aad
sbbb
adc
fimuls
arpl
sbb
ret
mov
sahf
arpl
sbb
sbbb
arpl
sbb
pop
imul
adc
aad
sbbb
mov
test
push
andl
or
mov
andl
cli
xchg
lret
and
mov
andl
mov
fisubs
andl
mov
popf
fsubrl
aad
sbbb
subl
aad
sbbb
sub
pop
into
mov
andl
jns
ror
arpl
fs
sbbb
mov
imul
andl
data16
outsl
cmp
cmp
fs
sbbb
in
ret
push
jg
arpl
sbb
jp
lods
push
and
arpl
sbb
mov
ds
loope
arpl
sbb
test
sub
arpl
sbb
lods
outsb
xchg
push
fisttpll
push
stc
lcall
dec
lret
fdivr
outsl
sbb
fsubs
jnp
ficoml
ja
push
cld
sahf
movsl
adc
xor
stos
std
icebp
mov
add
in
fsubr
sub
in
and
mov
pop
shll
loope
xchg
fidivs
in
cld
inc
adc
imul
cmp
and
dec
int3
jne
decb
jno
cs
adc
ret
xchg
clc
add
mov
fidivrs
iret
xchg
pop
sub
dec
fidivrl
arpl
sbb
andl
add
or
addr16
mov
inc
push
and
ja
xlat
inc
and
sub
or
shlb
movsl
mov
je
lcall
add
mov
sbb
in
jge
push
mov
push
or
xchg
sub
enter
push
rcrb
rclb
jb
mov
dec
cmp
xor
inc
mov
xor
mov
pop
mov
mov
cli
cmp
bound
std
adc
push
addr16
std
cli
mov
outsl
jne
movsl
mov
scas
add
sbb
mov
add
xor
pusha
jmp
sti
mov
inc
je
cmp
sub
imulb
dec
fsubs
or
mov
xchg
shrb
int
mov
xchg
mov
xchg
out
je
push
rcr
out
and
add
jge
or
int3
mov
bound
mov
or
lcall
push
aas
std
outsb
mov
pop
cmpsl
sub
loop
sub
fisttpl
mov
mov
pop
dec
dec
cmp
scas
pushf
addr16
cmp
push
xor
adc
sahf
imulb
es
jo
je
cmp
cmc
or
adc
xor
pop
jg
xchg
mov
mov
imul
mov
addr16
icebp
sbbl
pop
test
cmpl
mov
sub
push
mov
popf
mov
int
mov
decl
shll
pop
xor
add
dec
test
dec
sti
pop
in
sub
inc
jle
arpl
xchg
mov
push
cwtl
push
out
frstor
sub
in
negb
cmc
push
ret
push
or
jle
idivl
or
rcrb
int3
in
and
insl
popf
in
adc
push
xor
ret
pop
xchg
pop
mov
xor
lret
stos
loopne
lods
ret
inc
fstl
lods
sub
or
pop
aas
aad
dec
mov
xchg
pushl
jnp
adc
fnsave
pop
je
or
js
mov
test
sub
and
int
sahf
or
aaa
inc
aam
enter
sbb
mov
in
lods
loop
test
std
int
xor
pusha
dec
mov
cli
cmpsb
pop
js
pop
mov
jecxz
adc
jno
pop
adc
cmp
dec
clc
jo
mov
lds
and
mov
push
jb
mov
nop
mov
pop
fbstp
inc
clc
and
lock
dec
sbb
xchg
outsl
pop
mov
bound
add
or
aad
mov
test
in
divb
mov
fldcw
and
lock
push
mov
lock
add
sbb
js
pushf
or
or
mov
repz
test
adc
jb
or
push
in
out
popf
in
adc
call
push
or
ret
sbb
adc
scas
sbb
cmp
push
mov
cmp
and
pop
and
mov
movsl
inc
stc
pop
clc
cmc
leave
and
lahf
scas
in
inc
mov
push
dec
cltd
inc
xlat
pop
dec
add
lret
jmp
neg
mov
mov
cmpsl
jno
sbb
push
imul
mov
push
cltd
sbbl
fstp
xlat
lahf
dec
mov
xor
push
lock
mov
inc
mov
leave
std
add
divb
add
or
mov
cmpsl
inc
push
aas
in
or
hlt
jecxz
mov
lods
ljmp
ja
or
lahf
xchg
out
outsb
mov
mov
stos
rcrl
mov
clc
nop
movsb
decl
aaa
fstl
xlat
ds
dec
xor
enter
cmp
cmp
ret
xchg
lods
push
lock
daa
loopne
rorb
fiadds
addl
mov
jbe
add
xchg
cmp
xor
and
inc
add
je
lods
std
mov
insl
mov
adc
shlb
xchg
pop
sbb
je
gs
movsl
push
sbb
push
outsb
iret
out
test
cmp
sahf
stos
in
jae
xor
dec
dec
leave
sub
adc
adc
mov
cmc
cmpsl
repnz
fistl
inc
in
out
and
insb
lret
test
idivl
clc
test
cmp
mov
cmp
push
xor
std
or
xor
inc
test
pop
xchg
cwtl
cmp
push
cltd
add
push
fistpll
and
mov
cmpsl
pop
or
cmpsb
je
out
gs
sub
sbb
xchg
faddp
les
pop
adc
in
jl
mov
movsl
fprem
negl
repz
das
push
jb
not
loopne
push
insl
daa
rcrb
popa
mov
call
add
std
pushf
sbb
inc
js
xor
xchg
xchg
fisubs
mov
arpl
ds
popa
imul
pop
mov
mov
add
lret
jo
iret
dec
push
js
insb
lret
cmp
jmp
dec
xor
mov
dec
cmpsb
mov
xchg
out
movsb
or
outsb
push
pop
inc
out
xor
adc
and
inc
xchg
xchg
mov
cwtl
sahf
push
cs
not
xchg
xor
ds
jb
jb
or
and
xchg
call
jmp
andb
mov
mov
cmpsb
push
jo
dec
jno
lea
popf
jecxz
inc
adc
stos
jl
fmuls
out
stos
adc
in
out
push
jb
cmpsl
sub
and
sbb
nop
aad
orb
adc
scas
mov
rorb
push
leave
inc
icebp
movsb
inc
imul
cs
cmp
mov
pop
jb
pop
push
repnz
in
repnz
sti
fsubrl
fcoms
aas
outsb
xor
pop
bnd
push
jb
dec
jae
xchg
addr16
dec
cmp
scas
arpl
cld
push
add
adcb
popf
flds
clc
aad
or
lahf
pop
lea
dec
fidivs
dec
nop
shrl
sahf
fdivs
push
ret
scas
or
lret
mov
leave
push
xchg
pushf
pop
cs
dec
pop
pop
mov
loop
push
fdivrl
js
clc
add
dec
nop
clc
push
lods
push
pop
or
mov
pop
xorl
pop
mov
push
ret
lcall
mov
addr16
decb
xchg
out
jmp
mov
dec
push
fistpl
into
js
jl
stc
pop
pop
dec
movsb
mov
add
addr16
sti
inc
out
inc
repnz
test
into
xor
inc
or
test
je
pushf
mov
xor
and
fisttps
inc
das
push
xchg
push
mov
lock
xchg
jge
int
test
imul
mov
or
sbb
inc
pop
test
lock
sbb
jns
sbb
push
xchg
mov
arpl
incb
aaa
mov
loopne
push
test
add
push
and
jge
adc
push
mov
loop
xor
push
fst
xor
sbb
sbb
mov
inc
dec
mov
cld
xorb
sbb
stc
mov
pop
mov
jmp
ljmp
mov
inc
cli
push
stc
stc
push
xchg
push
fisttpl
arpl
cmp
push
ljmp
mov
sbb
mov
mov
xor
xchg
add
lods
imul
inc
call
and
adc
enter
popf
lret
push
push
xchg
int3
test
jmp
pop
rorl
ja
out
fs
mov
aad
sub
dec
add
pop
cmp
push
call
mov
xchg
stos
sbb
mov
lock
pop
add
pop
int
lret
jmp
add
neg
testl
inc
ret
call
in
adc
xchg
xchg
dec
push
and
xchg
xchg
test
xor
or
cli
dec
sbb
stos
bound
push
dec
dec
bound
insb
pop
push
roll
mov
leave
xchg
jle
ror
ds
sbb
jne
and
mov
or
rcll
pop
ljmp
int
aas
mov
xor
lods
mul
push
inc
loope
in
movsl
jbe
aas
xor
add
mov
xchg
aas
mov
cltd
sub
in
mov
sarb
pushf
jge
push
shrb
rorl
les
mov
jno
mov
fmul
xchg
sub
add
add
pusha
adc
int3
cmpsl
or
sub
xor
loope
fwait
inc
movsl
dec
out
aad
jp
pminsw
out
mov
sub
dec
sahf
pop
mov
ret
fcomi
mov
push
out
ja
xchg
and
mov
ret
cmp
enter
inc
sub
mov
fbld
pushf
xchg
push
mov
arpl
jb,pt
xor
or
je
mov
repz
data16
lods
jns
rcrb
fs
fsubr
outsl
dec
xchg
test
aaa
inc
or
sbb
jo
add
cwtl
push
ja
jbe
push
jbe
dec
inc
sti
popa
shrb
inc
inc
or
sar
cmp
stc
and
sbbb
or
add
outsl
idiv
cmpsb
push
or
add
or
fwait
sbb
mov
movsb
pop
sbb
loopne
or
inc
push
es
int3
shrb
lcall
test
mov
iret
ljmp
mov
push
mov
cmp
imul
lahf
mov
fndisi(8087
mov
test
xchg
and
leave
mov
test
or
mov
sbb
mov
aas
bound
cmpsb
sbb
imul
out
fwait
mov
test
outsl
xor
push
insb
sbb
mov
dec
push
cmp
sbb
aad
dec
dec
and
dec
mov
jae
and
lea
fadds
out
pop
mov
cmp
or
or
jg,pt
andl
jmp
test
sbb
test
mov
mov
wbinvd
popa
xchg
in
repz
mov
les
int
push
mov
imul
sub
scas
xchg
es
mov
xchg
pop
imul
repnz
mov
sub
push
ret
cmc
leave
mov
ret
mov
insl
outsl
arpl
and
leave
div
jbe
adc
xor
sub
mov
int3
or
sbb
pop
push
mov
into
pop
jne
test
and
enter
fsubrl
mov
out
dec
cmc
xchg
dec
fs
fildll
dec
cmp
fsubs
jp
loopne
test
pushf
pop
popf
add
xor
sub
aad
lret
mov
stos
shr
repnz
hlt
and
lret
fcomi
incl
aad
jge
dec
sbb
sub
mov
mov
xchg
or
jg
dec
xchg
aam
ror
out
add
pop
lods
mov
lcall
inc
or
sbbb
rolb
cltd
and
jno
mov
out
xlat
cli
es
ret
push
pop
les
pop
rcrl
mov
jle
xchg
sub
daa
dec
enter
jnp
sbb
fucomp
push
xchg
negl
scas
mov
and
inc
inc
imul
mov
scas
push
push
sbb
bound
cmc
cmc
js
in
xchg
inc
in
jb
lahf
leave
cmp
clc
jl
pop
mov
movsl
bound
paddq
ja
dec
push
clc
mov
jle
jp
push
sti
sbb
lret
jbe
mov
jbe
or
mov
push
dec
js
stos
inc
jmp
cmpsl
div
mov
mov
xlat
sahf
hlt
js
cli
add
mov
lret
cmp
xchg
scas
je
fistpll
les
cli
push
shrl
xor
pusha
mov
adc
repz
mov
xchg
cmp
orl
jae
mov
xchg
pop
pop
mov
cmpsb
adc
repz
inc
pop
lods
mov
imul
out
add
in
push
push
jge
dec
aas
push
sbb
jp
mov
push
in
xor
adc
sub
xor
sarb
add
jg
push
testl
div
mov
outsl
lcall
std
inc
cli
fcmovne
mov
loop
loopne
gs
pop
aas
cwtl
lea
cli
ret
std
jecxz
fs
mov
fidivl
fnstenv
aaa
mov
cmp
xchg
rcrb
aam
addr16
movsl
mov
jo
jnp
xor
mov
cs
cltd
dec
sub
adc
inc
sahf
dec
mov
mov
sbb
cmc
sub
cs
pop
movb
dec
aam
lock
dec
cmp
incw
int
aas
pushf
test
pop
daa
imul
pop
xchg
mov
aam
or
pusha
jge
mov
adc
in
and
arpl
fsts
sub
xchg
and
sub
in
lret
fldenv
xchg
push
in
cltd
out
adc
sub
mov
cmp
mov
test
call
loopne
bound
or
pop
mov
imulb
adc
mov
and
push
lahf
push
cmp
push
test
std
insl
lahf
jl
test
adc
les
out
adc
push
sti
dec
jle
xorb
or
cli
jae
pop
call
inc
lds
mov
cmp
dec
sub
int
sub
adc
std
jnp
lea
scas
fsub
xor
xor
or
cmp
mov
outsb
and
jecxz
push
xor
pusha
test
mov
sub
mov
push
jo
cli
les
gs
sub
adc
adc
loope
out
out
mov
dec
add
push
pop
fs
lret
lods
jecxz
cmp
xchg
adc
cltd
cmp
mov
or
adc
pop
lods
jge
mov
add
mov
sbb
flds
sub
xchg
ds
mov
data16
add
push
shll
add
xchg
clc
mov
loopne
xor
xor
cmpl
inc
aam
aaa
fdivrl
out
fisubrs
fdivs
pop
push
sarb
arpl
xchg
xor
mov
or
xor
insl
mov
bound
and
pop
bound
xchg
int3
sarb
enter
popl
aaa
mov
rorl
mov
and
pop
or
lret
lea
xchg
pop
in
pop
iret
fisubl
xchg
mov
mov
sar
xchg
push
and
addr16
adc
pop
push
xchg
loop
xor
mov
adc
addl
filds
lock
xor
popa
imul
fsubp
repnz
dec
sub
or
lahf
cmpsl
pop
jbe
sub
out
outsb
cmpsb
mov
je
dec
subb
pop
fistps
ror
mov
int3
movsl
cs
icebp
je
fcoml
out
inc
xor
test
dec
daa
adc
mov
and
out
mov
sub
dec
xor
jmp
loope
mov
test
inc
stc
fwait
dec
inc
dec
cmp
jbe
out
jbe
stc
jl
xchg
dec
jp
fwait
int
dec
iret
dec
pop
inc
push
mov
das
lea
push
and
ss
jge
or
fldt
xorl
jae
sete
mov
shll
pushf
pushf
push
or
xchg
push
xchg
or
inc
sbb
testl
mov
addr16
push
jl
jnp
dec
lods
xchg
xchg
xchg
shrb
lock
add
mov
pop
push
pop
dec
stc
ds
mov
mov
pop
shrl
adc
and
ffree
aas
je
ds
out
cli
in
scas
fwait
sbb
mov
test
sub
dec
push
mov
iret
and
outsl
add
fnstenv
or
mov
sbb
add
subl
push
dec
int
outsl
int3
aam
or
jecxz
cltd
sbbl
into
jnp
or
cmpsb
mov
xor
xchg
jg
pop
dec
das
test
bswap
pop
xchg
xchg
jnp
or
xchg
jb
push
arpl
cmp
jns
mov
aaa
mov
push
jl
xlat
lea
fidivrs
sarl
fistps
movsl
dec
or
inc
test
mov
and
sub
movhps
dec
imul
mov
sbb
adc
push
cmc
enter
and
loop
mov
out
shll
in
add
aad
mov
mov
jmp
sbb
ficoms
lcall
pop
xchg
sbb
inc
xor
aaa
mov
daa
pop
les
cli
lret
out
push
inc
sbb
and
pop
out
popa
movsl
and
jle
xchg
je
or
decb
mov
lods
fsub
cmp
push
test
lret
movsb
xor
or
pushf
rcrb
repz
mov
xchg
imul
leave
in
imul
add
lods
cmc
xchg
jns
scas
rcll
stos
fisttpl
and
cmp
test
push
push
push
sub
adc
outsb
cmpsb
arpl
test
test
movsl
ficoms
rclb
dec
lahf
xchg
ljmp
or
sahf
lret
loopne
add
imul
sbb
iret
inc
pop
inc
shr
jno
mov
nop
cs
nop
aas
pop
jmp
push
lret
imul
sar
mov
testl
adc
aam
mov
jmp
inc
sbb
xor
cmc
pop
inc
mov
cmpsb
daa
adc
jns
mov
stc
cmp
imul
cmc
mov
xor
sbb
mov
arpl
das
xchg
or
std
ds
and
mov
adc
fildll
es
mov
mov
mov
push
out
cmp
mov
xchg
sub
pop
repnz
and
into
inc
arpl
int3
pop
in
into
dec
ja
enter
repnz
sub
mov
cmpsl
lock
mov
mov
jg
lds
push
insl
fidivl
sti
in
das
jge
mov
test
pop
lret
xchg
mov
mov
rolb
scas
pop
adc
jl
pop
push
lret
or
data16
int
dec
push
push
dec
jno
xchg
xor
fcmovbe
cld
inc
cli
dec
pop
adc
dec
xchg
push
sbb
jl
fisubrl
fwait
cmovs
sub
jecxz
mov
les
push
movsb
mov
fnstcw
sbb
jne
fisubrl
jmp
push
iret
jne
xchg
imul
leave
dec
outsl
add
mov
call
shll
cmp
pop
mov
pop
mov
repnz
fistpl
out
sub
add
rcr
cwtl
or
mov
js
sub
mov
jg
lds
cmpl
aam
adc
add
cwtl
lods
jmp
adc
fstl
in
jbe
pop
cmp
jge
movl
repnz
sub
and
and
fidivl
pusha
mov
jne
jno
bound
push
test
xor
stc
out
psrlw
cli
push
push
inc
and
lcall
rolb
pop
mov
cs
mov
in
fs
push
add
shr
jno
out
mov
mov
dec
lcall
shl
xchg
lret
or
add
xor
fwait
mov
cmp
outsl
movsl
or
insl
or
inc
repz
into
in
and
daa
adcb
mov
pop
pop
sbb
aaa
xor
in
movsb
inc
push
xchg
xchg
je
lods
jns
sub
xchg
sbb
je
adc
lods
insl
enter
das
pop
xlat
mov
mov
pop
nop
je
mov
outsb
icebp
mov
mov
jae
dec
sarl
ljmp
add
addb
scas
stos
cs
addr16
movsb
out
hlt
xor
mov
inc
xor
sbb
sbb
dec
cmc
mov
mov
test
data16
sbb
dec
xor
mov
inc
sub
mov
cmc
jne
mov
push
std
push
xor
faddl
std
testl
jp
xor
dec
inc
test
cltd
in
xor
xchg
sbb
out
mov
mov
test
push
dec
push
mov
sbb
dec
lea
jle
popf
mov
es
cli
mov
jb
adc
and
daa
stc
pop
rol
ds
lods
lock
outsl
jo
in
push
jle
jae
dec
test
test
movsl
cmp
pop
jmp
xor
ss
lahf
xor
out
push
stos
mov
out
xor
xor
out
std
std
push
cmp
das
mov
push
cmpsl
popa
and
int
aad
mov
outsb
cmpsl
in
out
mov
inc
mov
sub
ss
nop
sub
aad
adc
push
int3
add
xor
push
lcall
mov
push
inc
enter
mov
push
mov
push
pop
dec
push
jg
and
or
and
shr
dec
push
sbb
call
fcomps
lods
inc
push
out
mov
out
jne
fnstenv
pop
lea
pop
xchg
js
cmc
add
adc
jge
jns
mov
cmp
push
or
lock
in
pusha
out
test
xchg
mov
dec
push
and
in
mov
cmp
ja
fcoms
dec
loop
add
stos
add
lods
out
outsl
imul
xlat
pop
cmp
cmp
ds
xchg
ret
ja
push
aam
dec
imul
leave
fstpt
push
push
pop
jp
rorb
xor
rcrl
insl
jle
jp
popa
movsl
ja
pushf
dec
lahf
sub
in
inc
push
add
leave
mov
pop
mov
sarl
flds
inc
sbb
mov
or
push
addl
mov
cmpsl
dec
add
imul
mov
imul
loop
or
sbb
or
stos
mov
cwtl
out
ja
icebp
mov
push
mov
xchg
sahf
cli
jmp
mov
insb
or
out
push
jmp
imul
mov
cmc
test
faddl
out
rep
mov
mov
xchg
dec
mov
dec
jg
gs
xor
push
orl
xchg
inc
xor
mov
sub
and
insb
hlt
sarb
jo
inc
imul
mov
sub
ror
adc
sub
addr16
inc
sub
push
sub
test
mov
sbb
out
notb
in
rcll
mov
xchg
rcl
scas
int
sti
ljmp
stos
jge
adc
decl
test
or
inc
insl
jae
xchg
imul
inc
adc
inc
and
adc
ja
ja
cld
std
pop
mov
fists
jo
sbb
in
xor
adc
insb
pop
adc
fucomip
push
add
push
dec
mov
xlat
clc
dec
leave
dec
push
cmc
imul
sub
cli
pusha
test
fbld
and
jno
xor
lods
lahf
pop
cmpsb
push
xchg
mov
lds
fldl
mov
ret
repnz
cmp
and
rclb
push
pop
clc
push
dec
inc
xor
int3
xor
push
std
repz
jmp
mov
and
jbe
scas
inc
movsl
adc
in
push
mov
pop
adc
push
mov
inc
sub
aad
ljmp
sub
int
sub
pop
mov
sbb
and
hlt
pop
xchg
std
mov
stos
inc
rclb
negl
push
or
xor
cs
pushf
and
out
and
xor
in
sub
fmuls
dec
jns
outsl
xor
aad
and
xchg
test
hlt
cmp
stc
sbb
mov
and
imul
dec
outsb
leave
or
pop
xlat
jno
paddb
cmp
mov
repnz
inc
xchg
and
and
xor
lcall
je
jbe
xchg
scas
fsubrs
jno
mov
xor
ret
inc
xor
lods
les
lret
mov
aam
aas
sub
fdivs
fsts
mov
add
jnp
fldt
mov
fbld
lret
dec
and
dec
mov
sbb
les
js
dec
push
or
imul
lods
xchg
aas
adc
std
out
xor
xchg
nop
nop
cltd
filds
xchg
push
imul
imul
xor
ss
jl
fcomp
popl
mov
cmp
jl
xchg
imul
leave
loop
in
sbb
mov
aaa
cmc
sbb
popa
test
int3
pop
mov
inc
jb
loopne
dec
icebp
xchg
sahf
jle
sti
dec
pop
fistpll
mov
add
dec
mov
es
xchg
mov
pop
popa
sbb
inc
add
insl
push
rcrl
das
jne,pn
jbe
pop
test
mov
outsb
hlt
fstps
cli
inc
dec
in
negb
or
lock
test
repnz
clc
mov
mov
pop
jo
add
inc
sbb
jae
lea
jmp
jecxz
inc
int3
push
xchg
sbb
out
or
pop
int
ja
cmp
out
mov
ret
dec
mov
bound
cltd
mov
xor
cmp
mov
and
flds
inc
test
cmp
cs
fidivl
jno
adcb
mov
push
enter
cmp
cmp
cmp
jo
sahf
stos
xor
push
lock
outsb
je
mov
dec
push
imul
add
aaa
lock
stc
stc
lods
daa
aaa
jmp
out
lds
ror
iret
movsl
cmpl
inc
xchg
pop
or
lock
test
popa
push
lcall
sbb
aas
jle
out
pop
jae
mov
cmp
outsl
mov
insl
mov
sti
fstpt
fcoml
mov
jne
pop
xor
fcomi
test
mov
ja
cmp
loopne
or
in
pop
cmp
stos
into
js
and
je
push
push
fcomps
xchg
stos
xchg
xor
lret
and
xchg
mov
inc
adc
popa
data16
cwtl
loope
sbb
shlb
xor
sbb
fcmovnu
les
xor
jb
loopne
decb
cmp
lret
repnz
sti
jg
outsb
mov
mov
xchg
testl
sub
jg
shlb
xor
popl
mov
adc
mov
cmc
push
cmp
xor
mov
test
jb
and
push
clc
sub
mov
cmpsl
pop
arpl
or
inc
dec
sub
lret
cld
into
dec
pop
pop
testb
push
bound
mulb
insl
js
push
xor
mov
js
jmp
inc
or
mov
data16
pop
adc
shll
in
lods
cmp
jmp
fldenv
gs
push
add
xor
dec
popl
add
mov
push
nop
jnp
mov
cmpb
sub
scas
ljmp
add
pop
fnstsw
fdivs
or
jae
mov
inc
or
and
push
lods
cmpsb
or
mov
cmp
add
xchg
aas
rol
mov
pushf
add
lea
aad
out
mov
inc
mov
or
test
mov
in
std
sub
int3
das
cwtl
xchg
fadd
ret
rorb
cmpsb
stos
pushf
movsb
shll
cmpsb
insb
cmp
scas
dec
dec
xchg
subb
mov
cmp
adc
pop
shlb
rclb
xchg
in
and
jno
pusha
insl
pop
ret
xchg
loopne
pop
cmpsb
jnp
lock
push
inc
icebp
daa
negl
stos
insb
push
add
in
sbb
dec
xchg
icebp
jb
ret
in
push
insb
js
popa
repz
mov
aad
inc
pushf
push
rolb
addr16
insl
push
pop
adc
pop
test
icebp
pop
mov
jle
pop
push
fadds
sbb
and
inc
sbb
test
cmp
aad
xchg
pop
xchg
daa
out
and
mov
mov
pop
inc
cmp
ss
iret
push
cmp
or
clc
out
lret
inc
sti
js
out
or
inc
arpl
sbb
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
andl
mov
ss
add
ss
add
das
inc
add
add
add
add
add
inc
add
inc
add
incl
inc
add
inc
aaa
inc
add
incl
add
add
.byte
scas
inc
loope
adc
fstpt
dec
inc
push
dec
inc
dec
xor
cs
insb
add
je
outsl
fs
gs
imul
add
aaa
cmp
cmp
cmp
cmp
add
add
add
push
mov
mov
nop
nop
mov
nop
nop
test
je
nop
nop
xor
nop
nop
dec
nop
nop
inc
nop
nop
jmp
pop
nop
nop
pop
pop
ret
nop
add
nop
nop
push
mov
mov
nop
nop
mov
nop
nop
sub
nop
nop
test
je
nop
nop
xor
nop
nop
dec
nop
nop
dec
nop
nop
jmp
nop
nop
pop
nop
nop
pop
nop
nop
pop
ret
add
push
mov
mov
nop
nop
mov
nop
nop
test
je
nop
nop
xor
nop
nop
dec
nop
nop
inc
nop
nop
jmp
pop
nop
nop
pop
pop
ret
nop
add
nop
nop
push
mov
mov
nop
nop
mov
nop
nop
sub
nop
nop
test
je
nop
nop
xor
nop
nop
dec
nop
nop
dec
nop
nop
jmp
nop
nop
pop
nop
nop
pop
nop
nop
pop
ret
add
push
mov
mov
nop
nop
mov
nop
nop
test
je
nop
nop
xor
nop
nop
dec
nop
nop
inc
nop
nop
jmp
pop
nop
nop
pop
pop
ret
nop
add
nop
nop
push
mov
mov
nop
nop
mov
nop
nop
sub
nop
nop
test
je
nop
nop
xor
nop
nop
dec
nop
nop
dec
nop
nop
jmp
nop
nop
pop
nop
nop
pop
nop
nop
pop
ret
add
push
mov
mov
nop
nop
mov
nop
nop
test
je
nop
nop
xor
nop
nop
dec
nop
nop
inc
nop
nop
jmp
pop
nop
nop
pop
pop
ret
nop
add
nop
nop
push
mov
mov
nop
nop
mov
nop
nop
sub
nop
nop
test
je
nop
nop
xor
nop
nop
dec
nop
nop
dec
nop
nop
jmp
nop
nop
pop
nop
nop
pop
nop
nop
pop
ret
add
push
mov
mov
nop
nop
mov
nop
nop
test
je
nop
nop
xor
nop
nop
dec
nop
nop
inc
nop
nop
jmp
pop
nop
nop
pop
pop
ret
nop
add
nop
nop
push
mov
mov
nop
nop
mov
nop
nop
sub
nop
nop
test
je
nop
nop
xor
nop
nop
dec
nop
nop
dec
nop
nop
jmp
nop
nop
pop
nop
nop
pop
nop
nop
pop
ret
add
push
mov
mov
nop
nop
mov
nop
nop
test
je
nop
nop
xor
nop
nop
dec
nop
nop
inc
nop
nop
jmp
pop
nop
nop
pop
pop
ret
nop
add
nop
nop
push
mov
mov
nop
nop
mov
nop
nop
sub
nop
nop
test
je
nop
nop
xor
nop
nop
dec
nop
nop
dec
nop
nop
jmp
nop
nop
pop
nop
nop
pop
nop
nop
pop
ret
add
push
mov
mov
nop
nop
mov
nop
nop
test
je
nop
nop
xor
nop
nop
dec
nop
nop
inc
nop
nop
jmp
pop
nop
nop
pop
pop
ret
nop
add
nop
nop
push
mov
mov
nop
nop
mov
nop
nop
sub
nop
nop
test
je
nop
nop
xor
nop
nop
dec
nop
nop
dec
nop
nop
jmp
nop
nop
pop
nop
nop
pop
nop
nop
pop
ret
add
push
mov
mov
nop
nop
mov
nop
nop
test
je
nop
nop
xor
nop
nop
dec
nop
nop
inc
nop
nop
jmp
pop
nop
nop
pop
pop
ret
nop
add
nop
nop
push
mov
mov
nop
nop
mov
nop
nop
sub
nop
nop
test
je
nop
nop
xor
nop
nop
dec
nop
nop
dec
nop
nop
jmp
nop
nop
pop
nop
nop
pop
nop
nop
pop
ret
add
push
mov
mov
nop
nop
mov
nop
nop
test
je
nop
nop
xor
nop
nop
dec
nop
nop
inc
nop
nop
jmp
pop
nop
nop
pop
pop
ret
nop
add
nop
nop
push
mov
mov
nop
nop
mov
nop
nop
sub
nop
nop
test
je
nop
nop
xor
nop
nop
dec
nop
nop
dec
nop
nop
jmp
nop
nop
pop
nop
nop
pop
nop
nop
pop
ret
add
push
mov
mov
nop
nop
mov
nop
nop
test
je
nop
nop
xor
nop
nop
dec
nop
nop
inc
nop
nop
jmp
pop
nop
nop
pop
pop
ret
nop
add
nop
nop
push
mov
mov
nop
nop
mov
nop
nop
sub
nop
nop
test
je
nop
nop
xor
nop
nop
dec
nop
nop
dec
nop
nop
jmp
nop
nop
pop
nop
nop
pop
nop
nop
pop
ret
add
push
mov
mov
nop
nop
mov
nop
nop
test
je
nop
nop
xor
nop
nop
dec
nop
nop
inc
nop
nop
jmp
pop
nop
nop
pop
pop
ret
nop
add
nop
nop
push
mov
mov
nop
nop
mov
nop
nop
sub
nop
nop
test
je
nop
nop
xor
nop
nop
dec
nop
nop
dec
nop
nop
jmp
nop
nop
pop
nop
nop
pop
nop
nop
pop
ret
add
push
mov
mov
nop
nop
mov
nop
nop
test
je
nop
nop
xor
nop
nop
dec
nop
nop
inc
nop
nop
jmp
pop
nop
nop
pop
pop
ret
nop
add
nop
nop
push
mov
mov
nop
nop
mov
nop
nop
sub
nop
nop
test
je
nop
nop
xor
nop
nop
dec
nop
nop
dec
nop
nop
jmp
nop
nop
pop
nop
nop
pop
nop
nop
pop
ret
add
push
mov
mov
nop
nop
mov
nop
nop
test
je
nop
nop
xor
nop
nop
dec
nop
nop
inc
nop
nop
jmp
pop
nop
nop
pop
pop
ret
nop
add
nop
nop
push
mov
mov
nop
nop
mov
nop
nop
sub
nop
nop
test
je
nop
nop
xor
nop
nop
dec
nop
nop
dec
nop
nop
jmp
nop
nop
pop
nop
nop
pop
nop
nop
pop
ret
add
push
mov
mov
nop
nop
mov
nop
nop
test
je
nop
nop
xor
nop
nop
dec
nop
nop
inc
nop
nop
jmp
pop
nop
nop
pop
pop
ret
nop
add
nop
nop
push
mov
mov
nop
nop
mov
nop
nop
sub
nop
nop
test
je
nop
nop
xor
nop
nop
dec
nop
nop
dec
nop
nop
jmp
nop
nop
pop
nop
nop
pop
nop
nop
pop
ret
add
push
mov
mov
nop
nop
mov
nop
nop
test
je
nop
nop
xor
nop
nop
dec
nop
nop
inc
nop
nop
jmp
pop
nop
nop
pop
pop
ret
nop
add
nop
nop
push
mov
mov
nop
nop
mov
nop
nop
sub
nop
nop
test
je
nop
nop
xor
nop
nop
dec
nop
nop
dec
nop
nop
jmp
nop
nop
pop
nop
nop
pop
nop
nop
pop
ret
add
push
mov
mov
nop
nop
mov
nop
nop
test
je
nop
nop
xor
nop
nop
dec
nop
nop
inc
nop
nop
jmp
pop
nop
nop
pop
pop
ret
nop
add
nop
nop
push
mov
mov
nop
nop
mov
nop
nop
sub
nop
nop
test
je
nop
nop
xor
nop
nop
dec
nop
nop
dec
nop
nop
jmp
nop
nop
pop
nop
nop
pop
nop
nop
pop
ret
add
push
mov
mov
nop
nop
mov
nop
nop
test
je
nop
nop
xor
nop
nop
dec
nop
nop
inc
nop
nop
jmp
pop
nop
nop
pop
pop
ret
nop
add
nop
nop
push
mov
mov
nop
nop
mov
nop
nop
sub
nop
nop
test
je
nop
nop
xor
nop
nop
dec
nop
nop
dec
nop
nop
jmp
nop
nop
pop
nop
nop
pop
nop
nop
pop
ret
add
push
mov
mov
nop
nop
mov
nop
nop
test
je
nop
nop
xor
nop
nop
dec
nop
nop
inc
nop
nop
jmp
pop
nop
nop
pop
pop
ret
nop
add
nop
nop
push
mov
mov
nop
nop
mov
nop
nop
sub
nop
nop
test
je
nop
nop
xor
nop
nop
dec
nop
nop
dec
nop
nop
jmp
nop
nop
pop
nop
nop
pop
nop
nop
pop
ret
add
push
mov
mov
nop
nop
mov
nop
nop
test
je
nop
nop
xor
nop
nop
dec
nop
nop
inc
nop
nop
jmp
pop
nop
nop
pop
pop
ret
nop
add
nop
nop
push
mov
mov
nop
nop
mov
nop
nop
sub
nop
nop
test
je
nop
nop
xor
nop
nop
dec
nop
nop
dec
nop
nop
jmp
nop
nop
pop
nop
nop
pop
nop
nop
pop
ret
add
push
mov
mov
nop
nop
mov
nop
nop
test
je
nop
nop
xor
nop
nop
dec
nop
nop
inc
nop
nop
jmp
pop
nop
nop
pop
pop
ret
nop
add
nop
nop
push
mov
mov
nop
nop
mov
nop
nop
sub
nop
nop
test
je
nop
nop
xor
nop
nop
dec
nop
nop
dec
nop
nop
jmp
nop
nop
pop
nop
nop
pop
nop
nop
pop
ret
add
push
mov
mov
nop
nop
mov
nop
nop
test
je
nop
nop
xor
nop
nop
dec
nop
nop
inc
nop
nop
jmp
pop
nop
nop
pop
pop
ret
nop
add
nop
nop
push
mov
mov
nop
nop
mov
nop
nop
sub
nop
nop
test
je
nop
nop
xor
nop
nop
dec
nop
nop
dec
nop
nop
jmp
nop
nop
pop
nop
nop
pop
nop
nop
pop
ret
add
push
mov
mov
nop
nop
mov
nop
nop
test
je
nop
nop
xor
nop
nop
dec
nop
nop
inc
nop
nop
jmp
pop
nop
nop
pop
pop
ret
nop
add
nop
nop
push
mov
mov
nop
nop
mov
nop
nop
sub
nop
nop
test
je
nop
nop
xor
nop
nop
dec
nop
nop
dec
nop
nop
jmp
nop
nop
pop
nop
nop
pop
nop
nop
pop
ret
add
push
mov
mov
nop
nop
mov
nop
nop
test
je
nop
nop
xor
nop
nop
dec
nop
nop
inc
nop
nop
jmp
pop
nop
nop
pop
pop
ret
nop
add
nop
nop
push
mov
mov
nop
nop
mov
nop
nop
sub
nop
nop
test
je
nop
nop
xor
nop
nop
dec
nop
nop
dec
nop
nop
jmp
nop
nop
pop
nop
nop
pop
nop
nop
pop
ret
add
push
mov
mov
nop
nop
mov
nop
nop
test
je
nop
nop
xor
nop
nop
dec
nop
nop
inc
nop
nop
jmp
pop
nop
nop
pop
pop
ret
nop
add
nop
nop
push
mov
mov
nop
nop
mov
nop
nop
sub
nop
nop
test
je
nop
nop
xor
nop
nop
dec
nop
nop
dec
nop
nop
jmp
nop
nop
pop
nop
nop
pop
nop
nop
pop
ret
add
push
mov
mov
nop
nop
mov
nop
nop
test
je
nop
nop
xor
nop
nop
dec
nop
nop
inc
nop
nop
jmp
pop
nop
nop
pop
pop
ret
nop
add
nop
nop
push
mov
mov
nop
nop
mov
nop
nop
sub
nop
nop
test
je
nop
nop
xor
nop
nop
dec
nop
nop
dec
nop
nop
jmp
nop
nop
pop
nop
nop
pop
nop
nop
pop
ret
add
push
mov
mov
nop
nop
mov
nop
nop
test
je
nop
nop
xor
nop
nop
dec
nop
nop
inc
nop
nop
jmp
pop
nop
nop
pop
pop
ret
nop
add
nop
nop
push
mov
mov
nop
nop
mov
nop
nop
sub
nop
nop
test
je
nop
nop
xor
nop
nop
dec
nop
nop
dec
nop
nop
jmp
nop
nop
pop
nop
nop
pop
nop
nop
pop
ret
add
push
mov
mov
nop
nop
mov
nop
nop
test
je
nop
nop
xor
nop
nop
dec
nop
nop
inc
nop
nop
jmp
pop
nop
nop
pop
pop
ret
nop
add
nop
nop
push
mov
mov
nop
nop
mov
nop
nop
sub
nop
nop
test
je
nop
nop
xor
nop
nop
dec
nop
nop
dec
nop
nop
jmp
nop
nop
pop
nop
nop
pop
nop
nop
pop
ret
add
push
mov
mov
nop
nop
mov
nop
nop
test
je
nop
nop
xor
nop
nop
dec
nop
nop
inc
nop
nop
jmp
pop
nop
nop
pop
pop
ret
nop
add
nop
nop
push
mov
mov
nop
nop
mov
nop
nop
sub
nop
nop
test
je
nop
nop
xor
nop
nop
dec
nop
nop
dec
nop
nop
jmp
nop
nop
pop
nop
nop
pop
nop
nop
pop
ret
add
push
mov
mov
nop
nop
mov
nop
nop
test
je
nop
nop
xor
nop
nop
dec
nop
nop
inc
nop
nop
jmp
pop
nop
nop
pop
pop
ret
nop
add
nop
nop
push
mov
mov
nop
nop
mov
nop
nop
sub
nop
nop
test
je
nop
nop
xor
nop
nop
dec
nop
nop
dec
nop
nop
jmp
nop
nop
pop
nop
nop
pop
nop
nop
pop
ret
add
add
aas
movsb
fistpll
add
add
add
add
jb
gs
xor
cs
insb
add
gs
je
push
jb
arpl
jae
add
fs
insb
cs
insb
add
push
outsb
insl
popa
jo
imul
arpl
outsb
add
imul
jae
dec
gs
outsl
jb
add
je
push
inc
outsl
outsb
je
js
add
popa
fs
jb
arpl
jae
gs
outsl
jb
add
je
push
inc
outsl
outsb
je
js
add
jae
insl
gs
push
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
imul
jb
add
mov
and
or
adc
add
cmp
movsb
shlb
lahf
sub
insb
dec
in
out
sub
adc
cmp
push
mov
mov
lods
rcr
jl
mov
test
pop
or
push
xchg
sbb
jns
cmpsb
or
shrl
std
das
mov
sbb
in
scas
loope
xchg
jle
push
nop
jl
cltd
jg
icebp
inc
cltd
mov
mov
repnz
push
cld
mov
imul
movsb
jle
xchg
hlt
je
or
pop
int
jno
dec
adc
jnp
pop
pop
ret
xor
mov
pusha
sub
jns
lret
fstpt
push
sbb
pusha
mov
sahf
insb
mov
mov
ja
xlat
daa
dec
xor
pusha
pop
pusha
push
repz
push
stos
bound
call
push
mov
stos
sub
int3
mov
call
push
mov
adc
mov
mov
test
je
ds
into
push
xchg
xchg
pop
iret
and
adcl
sub
mov
mov
data16
or
popa
xchg
test
jl
xor
test
mov
test
add
fmull
mov
lds
inc
hlt
addl
test
fwait
pop
sahf
inc
push
jmp
addr16
stos
shlb
push
fsubrs
cmpsl
setbe
or
outsb
in
jp
push
lock
sbb
add
data16
inc
sbbb
out
mov
test
pop
mov
fdivs
loopne
and
test
push
push
bound
aas
ss
sbb
xlat
shlb
dec
adc
rcl
ljmp
leave
jb
pop
jnp
cltd
sbb
aam
neg
call
jecxz
dec
jns
mov
push
rolb
test
inc
ret
pop
arpl
sbb
push
insb
ds
cmp
outsl
in
push
cmp
push
cld
insl
sub
xor
or
jecxz
std
dec
xor
pop
sub
data16
sbb
lret
rorb
enter
or
sarl
or
pusha
sbb
add
inc
and
pop
sti
clc
jmp
xor
fists
jne
adc
push
push
das
stos
push
add
xor
and
dec
jnp
push
sbb
ds
mov
cs
xchg
fldt
fcomip
test
aad
jle
xor
jae
dec
mov
pop
lret
mov
lock
mov
mov
dec
pop
rcl
sub
gs
clc
mov
dec
mov
nop
xchg
sti
dec
fucom
xor
movsb
inc
adc
call
lret
add
sahf
jle
mov
icebp
sub
fistl
jno
lods
ljmp
mov
loopne
scas
das
pop
cmp
mov
jne
sti
loop
sub
repnz
or
dec
sbb
iret
shrl
and
das
ja
push
mov
mov
int3
mov
mov
rep
sbb
dec
test
mov
adc
cmpl
lods
shlb
pop
push
add
jae
xchg
ja
sbb
and
ja
inc
push
iret
xor
int
mov
sbb
dec
jle
scas
sub
mov
and
loopne
push
fwait
ss
mov
arpl
cmpsb
fistps
inc
sarl
pop
fldenv
mov
subl
enter
jae
lret
mov
test
push
sbb
push
in
fwait
mov
add
mov
mov
push
imul
repnz
arpl
cs
test
pop
sub
lahf
test
push
test
jo
dec
inc
sub
es
mov
outsb
lods
jge
cmpsl
dec
mov
mov
jno
stos
in
call
lcall
sahf
mov
movsl
add
sbb
dec
or
adc
cmp
in
cwtl
push
aas
gs
inc
pop
in
imul
negl
cmc
xor
out
out
sub
lock
fisttpll
jo
jmp
push
add
imul
out
mov
cmp
jo
imul
push
add
pop
push
stos
sbb
pop
ds
scas
fidivrs
inc
jge
mov
fidivrl
mov
or
lock
sbb
pushl
or
mov
mov
pop
jp
and
stc
adc
jl
inc
xor
in
cmp
fcmovb
aaa
xor
mov
cmpsl
lcall
rorb
ds
enter
jne
cltd
int
loop
push
ljmp
mov
sbb
mov
mov
inc
outsl
mov
adc
and
mov
push
scas
mov
ficoms
or
mov
aas
iret
fcompl
jb
push
and
imul
fstpl
push
xchg
test
pop
fimull
je
lcall
cmp
jp
cli
sbb
or
ret
les
sbb
or
adc
fstl
mov
mov
sub
add
sahf
clc
fbstp
dec
xor
ja
sbbl
mov
cmp
movsl
and
in
out
repnz
sti
icebp
xchg
sub
mov
push
jo
jecxz
mov
jmp
xchg
out
ja
push
cmp
sub
sbb
andb
dec
cs
adc
ljmp
hlt
sub
div
cmp
cmp
pusha
jns
sbb
cmpsl
and
adc
imull
lods
jmp
pop
ret
ljmp
jnp
shll
jg
sub
mov
out
fnsave
ret
movsl
pop
insb
mov
add
into
out
cmp
out
sub
and
jne
fucomp
adc
int3
adc
xor
iret
arpl
stos
nop
pop
jae
cmp
sahf
aad
fisubrs
out
cmpsl
sub
pusha
stos
pop
stos
pushf
outsb
test
mov
push
mov
mov
mov
xor
inc
mov
sub
mov
push
fwait
cltd
mov
notl
lcall
xchg
pop
xchg
in
adc
mov
mov
mov
cmc
push
arpl
sbb
ret
sbbl
or
push
in
out
bnd
ljmp
jae
jl
fsts
pop
jecxz
fs
loopne
and
stos
stos
mov
rorb
cli
inc
hlt
inc
mov
push
sbb
and
inc
sahf
jns
fadd
dec
test
push
bound
iret
inc
lea
orl
ret
and
jg
je
imul
mov
push
add
sbb
add
andb
lea
ljmp
sbb
xchg
lock
inc
jle
icebp
in
pop
fstpt
and
fidivrs
out
lret
cmpsl
repnz
xor
test
clc
sbb
out
call
stos
cmpsl
imul
fmul
or
test
std
leave
sahf
push
push
rcr
jae
int
push
adc
pop
addr16
inc
jcxz
xor
jno,pt
clc
sub
out
ds
sub
sbb
pop
cmp
xchg
sbb
dec
divb
imul
imul
push
and
aam
hlt
and
mov
mov
scas
popa
add
idivb
push
inc
inc
and
je
and
mov
dec
scas
xchg
mov
rcr
hlt
jo
das
mov
mov
shrb
jg
test
xor
cmp
push
out
and
stos
and
sub
fiaddl
mov
bound
push
movsb
rorb
out
lea
dec
mov
mov
jl
into
stos
in
pop
aaa
rcrl
sub
xor
test
fldcw
dec
adc
idiv
leave
sbb
xor
es
jecxz
je
outsb
cmp
inc
pop
out
push
dec
cmc
or
xchg
mov
fsubrs
dec
mov
xchg
imul
xchg
xchg
sarb
adc
int3
xor
loope
push
dec
sub
sbb
hlt
pop
jl
sub
jo
daa
add
adc
sub
and
in
adc
dec
faddl
stc
pop
nopl
movsb
jns
inc
pop
outsb
mov
push
pop
xor
rcrb
fs
jnp
pusha
pushf
sub
call
arpl
ret
push
sahf
xor
add
dec
scas
adc
xchg
and
xchg
xor
and
and
mov
cltd
or
jb
sub
mov
sar
xchg
mov
bound
jge
lock
int3
out
mov
jge
daa
std
popf
ret
push
lea
repz
arpl
je
cs
stos
outsb
outsl
cmp
std
clc
hlt
pusha
fcoml
test
fucomp
mov
or
push
jnp
aaa
sub
insl
cmp
gs
add
rcr
or
add
xchg
mov
in
punpckhwd
lahf
jnp
pushf
jge
into
or
xchg
mov
mov
adc
mov
cmp
cmp
jns
adc
xchg
loop
subb
inc
push
int3
dec
jne
sbb
js,pn
inc
adc
push
xchg
mov
mov
sti
dec
sbb
imul
in
lret
mov
loope
pop
push
inc
inc
xchg
adc
outsb
in
or
sub
stos
aad
scas
fs
test
fimull
ret
in
push
cmpb
jnp
pusha
dec
pusha
add
cmp
mov
cmp
add
inc
ja
cld
xlat
xor
xorl
lock
mov
pop
add
push
mov
mov
popa
cs
mov
mov
out
je
ret
xchg
stc
push
je
mov
push
bnd
mov
es
test
sbb
test
xchg
pop
xchg
mov
inc
jo
mov
xchg
push
aad
dec
fiadds
leave
loope
or
dec
bound
jne
sbb
or
test
xor
les
pop
pop
call
and
outsb
sbb
fbld
mov
sbb
fdivr
push
cmp
into
loop
push
jg
dec
add
push
cli
addl
les
out
daa
mov
lcall
pusha
ret
mov
test
sub
lock
cmc
shrb
fdivl
xlat
sahf
out
arpl
cmp
xchg
ffree
push
xor
ret
out
lret
mov
mov
sbb
add
dec
cmp
jl
jl
jb
xchg
pop
rcrl
mov
push
in
mov
cld
or
jl
fadd
shrd
out
push
push
clc
out
mov
adc
mov
out
aad
les
push
into
mov
fnsave
lcall
cli
push
loopnew
pusha
inc
aaa
into
cmp
iret
cmc
cli
shll
ja
stos
sbb
mov
inc
aaa
mov
sarl
mov
aad
jae
mov
jnp
add
imul
mov
nop
mov
mov
outsb
ss
stos
dec
push
jns
xchg
mov
enter
out
clc
rcpps
lea
or
dec
rorb
cmp
push
inc
mov
lods
add
pop
mov
lcall
arpl
out
xchg
imulb
and
stos
add
movsl
movsb
shl
pushf
mov
push
fwait
push
adc
fs
loope
cmp
jmp
out
das
push
imull
add
pop
or
ja
test
mov
lods
out
fwait
xchg
in
cmp
nop
jmp
fnstenv
sub
cmp
add
ds
shrl
sub
lahf
pop
fwait
mov
pop
dec
cmc
mov
lods
sub
out
sbb
std
lods
mov
fwait
cli
xchg
in
shr
int3
push
cmp
sub
clc
sub
adc
add
push
pusha
jne
inc
push
xchg
testl
hlt
mov
lock
mov
sbb
xchg
sub
cmp
cmc
and
sti
pushfw
cmc
sbb
fsubl
sub
xor
std
push
mov
xor
add
ja
sub
ret
int3
stos
pop
xchg
lods
int3
push
pop
call
cmp
popf
aaa
xchg
stc
and
into
jnp
sti
fs
and
mov
mov
inc
cmp
fimuls
out
adc
scas
mov
std
sub
pop
or
inc
lcall
fisubrs
enter
idivl
sbb
ror
mov
push
fldl
pop
cmp
ds
mov
test
ljmp
adc
inc
outsl
cmp
arpl
fwait
rcrb
ja
scas
jo
dec
testb
pop
out
push
jb
pop
jge
scas
or
inc
inc
int3
loop
dec
push
shlb
scas
adc
loope
cmp
push
dec
mov
aas
outsl
subb
add
daa
jb
mov
adc
out
jns
mov
loope
mov
mov
xor
leave
mov
sbb
not
mov
stos
call
sbb
sarb
fimull
aad
ret
cmp
addr16
jl
stc
lea
mov
mov
sahf
idivl
mov
aad
pushf
inc
fldenv
sub
xchg
mov
jno
xchg
adc
in
jmp
mov
pop
fs
shrl
shll
push
rclb
inc
movsb
add
push
outsb
in
loopne
fistpl
dec
fs
pop
lahf
fists
mov
mov
or
mov
dec
and
jbe
lea
cltd
fwait
inc
outsl
or
sbb
fimull
fcomp
push
iret
jns
into
outsl
jle
int
mov
push
add
rorb
notb
and
and
cmpsb
xor
int3
push
bound
jne
xchg
ss
outsb
int3
jae
mov
dec
mov
dec
adc
jno
mov
xor
shl
inc
lcall
leave
add
test
loop
and
xor
and
add
jl
lret
mov
pushf
jbe
sarb
push
shl
inc
push
pusha
mov
inc
and
jbe
inc
test
pusha
jne
dec
dec
test
call
jp
stos
stc
dec
pop
ret
mov
ret
add
loope
imul
pop
cmpsb
sub
out
ret
dec
mov
loop
into
jecxz
push
out
ret
cmp
inc
inc
push
xor
sub
sub
sub
sub
push
xor
add
add
xor
push
jo
jb
jae,pt
jp
and
jp
outsl
data16
xor
dec
pop
push
dec
inc
push
inc
inc
sub
and
cmp
popaw
imul
gs
imul
daa
or
add
cs
cs
arpl
arpl
arpl
imul
cmp
das
ja
xor
gs
arpl
add
je
je
insl
dec
popa
insl
gs
and
popa
je
insl
sub
jae
and
jp
outsl
data16
sub
and
mov
add
add
add
add
inc
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
inc
add
add
inc
add
add
add
add
inc
add
add
inc
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
inc
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
inc
add
add
inc
add
add
add
add
inc
add
add
inc
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
fs
je
insl
inc
add
add
inc
fs
je
insl
push
add
fwait
add
imul
jae
add
scas
add
outsb
fs
je
insl
inc
add
add
je
je
insl
dec
popa
insl
gs
add
in
add
je
outsl
insl
insl
popa
outsb
fs
imul
dec
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
addb
gs
je
jb
jne
dec
outsb
outsw
inc
add
add
add
je
outsb
push
gs
js
gs
imul
gs
add
jmp
push
insb
gs
daa
add
addr16
popa
imul
cmp
pop
pop
jo
pop
outsb
jbe
jb
outsb
add
add
jo
pop
insw
outsl
fs
add
push
add
jae
je
popa
jo
pop
je
jo
add
add
jns
pop
arpl
imul
pop
imul
pop
outsl
outsb
gs
je
add
test
pop
jae
je
outsl
fs
adc
jb
add
popa
je
js
je
add
add
add
insb
jne
push
cmp
outsw
jo
outsb
add
add
jb
outsb
je
add
add
add
gs
jb
insl
popa
insb
insb
outsl
arpl
add
add
outsb
popa
insb
add
add
xchg
add
outsb
add
add
arpl
add
add
pop
add
gs
je
push
imul
inc
add
add
push
imul
outsl
arpl
add
add
popa
je
push
popa
addr16
add
and
inc
gs
gs
popa
addr16
add
add
fs
jne
jae
jb
add
add
fs
arpl
inc
add
add
jae
push
jne
je
gs
popa
add
add
add
imul
popa
jae
inc
js
add
inc
add
outsl
ja
imul
add
pop
add
outsb
jae
popa
je
dec
gs
popa
add
arpl
arpl
xor
fs
insb
add
push
add
imul
inc
outsl
outsb
je
outsl
insb
jae
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
push
dec
inc
dec
xor
cs
insb
add
add
sub
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
arpl
cs
insb
add
cmp
add
add
add
add
add
add
add
add
add
add
inc
push
xor
cs
insb
