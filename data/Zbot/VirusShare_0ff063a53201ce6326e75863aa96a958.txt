push
mov
sub
push
push
push
mov
mov
add
mov
mov
or
movzbl
mov
imul
sub
mov
mov
sub
sub
push
mov
or
sub
push
mov
and
sub
push
mov
sub
add
push
mov
imul
sub
push
mov
imul
sub
push
call
mov
test
je
mov
add
sub
push
push
push
mov
imul
push
mov
xor
mov
add
push
call
mov
imul
sub
mov
mov
sub
sub
push
mov
or
mov
add
push
push
mov
xor
imul
push
push
mov
add
push
mov
add
add
push
push
call
mov
xor
div
movzbl
mov
mov
mov
sub
mov
cmp
jne
push
push
push
call
mov
mov
and
imul
mov
mov
add
mov
mov
mov
mov
mov
xor
div
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shl
movzwl
mov
shl
movzwl
mov
xor
mov
sub
mov
mov
mov
movzbl
mov
xor
div
movzwl
movzbl
shr
mov
mov
xor
mov
sub
mov
mov
xor
xor
mov
mov
test
jne
push
push
call
mov
mov
or
movzbl
movzbl
sub
mov
mov
mov
mov
shl
mov
movzbl
xor
sub
push
movzbl
movzwl
imul
push
mov
and
push
mov
and
push
mov
imul
push
mov
movzbl
or
push
call
movzbl
mov
test
je
movzwl
imul
push
movzwl
push
movzbl
imul
push
movzwl
push
call
movzbl
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
and
mov
imul
movzbl
mov
movzwl
mov
mov
mov
and
mov
imul
mov
mov
or
mov
mov
imul
mov
mov
xor
mov
mov
mov
xor
div
movzbl
test
jne
movzbl
push
call
movzwl
mov
or
mov
mov
sub
mov
mov
movzbl
movzwl
mov
movzwl
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shl
movzwl
mov
or
xor
movzwl
mov
xor
div
mov
mov
imul
sub
mov
xor
mov
mov
mov
sub
add
mov
mov
mov
add
mov
mov
sub
sub
mov
add
mov
mov
or
movzwl
mov
xor
add
mov
mov
imul
sub
cmp
je
movb
mov
add
mov
movzbl
shr
mov
mov
movzbl
xor
mov
mov
movzbl
imul
add
cmp
jge
mov
mov
movzwl
or
movzwl
sub
mov
movzwl
movzwl
imul
mov
mov
add
mov
movzwl
movzwl
imul
mov
movzbl
mov
mov
mov
imul
mov
movzwl
or
sub
mov
add
mov
mov
movzwl
sub
mov
movzwl
or
add
mov
add
mov
mov
movzwl
imul
sub
mov
sub
mov
mov
mov
jmp
mov
mov
movzwl
shr
mov
mov
xor
movzwl
sub
mov
mov
xor
movzwl
or
mov
mov
shl
mov
mov
add
add
mov
movzbl
shl
mov
mov
shr
mov
mov
imul
add
mov
movzbl
shl
mov
mov
mov
mov
add
mov
movzwl
xor
add
sub
mov
mov
xor
and
mov
mov
movzwl
sub
sub
mov
movzbl
shl
mov
mov
add
mov
mov
add
mov
movzwl
or
add
mov
movzbl
mov
add
mov
mov
sub
sub
mov
movzwl
movzwl
sub
add
mov
add
mov
movzwl
movzwl
imul
mov
movzwl
or
add
mov
mov
and
movzwl
imul
mov
mov
or
add
mov
cmp
jne
mov
mov
movzbl
mov
movzbl
and
movzbl
imul
mov
movzbl
mov
xor
div
mov
movzbl
shl
mov
movzbl
movzbl
imul
add
mov
cmp
jne
mov
mov
mov
and
sub
mov
mov
xor
or
mov
mov
movzwl
add
add
mov
movzwl
xor
divl
mov
movzbl
mov
xor
div
mov
movzwl
shl
mov
mov
movzwl
sub
cmp
je
movw
movzwl
imul
movzwl
sub
mov
movzwl
mov
xor
div
mov
movzbl
shl
mov
mov
or
movzwl
or
mov
movzwl
movzbl
and
add
mov
sub
mov
movzwl
sub
mov
movzwl
add
add
mov
add
mov
mov
and
mov
jmp
movb
movzbl
imul
mov
movzwl
shl
mov
movzwl
or
mov
movzbl
imul
add
mov
movzbl
mov
mov
mov
or
mov
movzbl
movzbl
or
sub
mov
add
mov
movzbl
or
and
mov
movzbl
movzwl
imul
add
mov
add
mov
movzbl
mov
movzwl
movzbl
sub
add
mov
sub
mov
mov
imul
mov
jmp
mov
shr
mov
mov
and
add
mov
xor
mov
mov
movzwl
mov
imul
mov
mov
mov
and
mov
mov
sub
mov
mov
add
sub
mov
xor
mov
mov
movzwl
and
sub
mov
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
mov
add
mov
cmp
jne
push
call
mov
mov
imul
mov
mov
xor
xor
mov
mov
imul
mov
mov
xor
mov
mov
shl
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
movzwl
mov
xor
sub
mov
mov
shl
movzwl
mov
movzwl
mov
add
mov
mov
shr
mov
cmp
jne
push
push
push
call
mov
mov
sub
movzwl
mov
mov
mov
and
sub
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
movzbl
mov
and
movzwl
mov
and
movzbl
mov
shl
mov
mov
or
mov
sub
mov
mov
add
mov
mov
shl
mov
mov
movzbl
add
movzbl
mov
shr
mov
mov
xor
divl
movzbl
movzwl
imul
sub
mov
movzbl
mov
movzwl
sub
add
push
mov
sub
add
push
push
movzwl
xor
add
push
movzbl
or
add
push
mov
and
push
call
mov
mov
test
je
call
mov
or
sub
push
mov
movzbl
or
and
push
movzwl
imul
push
call
push
call
mov
shl
mov
test
jne
call
movzbl
movzbl
shl
mov
movzbl
shl
mov
mov
sub
movzbl
mov
mov
mov
xor
mov
imul
mov
movzbl
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
mov
movzbl
mov
and
and
movzbl
mov
sub
movzbl
mov
mov
mov
xor
div
movzbl
mov
sub
movzbl
mov
sub
movzbl
mov
movzbl
mov
imul
movzbl
cmp
jne
push
push
push
push
call
movzbl
mov
movzbl
mov
mov
mov
sub
mov
movzwl
movzbl
mov
add
add
push
mov
add
sub
push
push
mov
imul
add
push
mov
and
add
push
mov
and
add
push
call
mov
mov
test
je
push
mov
xor
push
movzwl
or
add
push
call
mov
shr
mov
mov
sub
push
call
mov
movzwl
and
or
mov
movzwl
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
mov
and
xor
movzwl
mov
mov
mov
xor
div
mov
mov
sub
push
mov
or
add
push
movzbl
sub
sub
push
mov
or
sub
push
mov
imul
sub
push
mov
movzbl
add
add
push
call
mov
test
je
mov
sub
push
movzbl
sub
push
movzbl
or
and
push
call
mov
or
mov
push
movzbl
push
movzbl
xor
push
call
movzbl
and
xor
mov
cmp
jne
pushl
push
push
push
call
mov
mov
and
add
mov
mov
mov
mov
movzbl
shl
mov
mov
imul
push
push
mov
movzbl
xor
sub
push
mov
movzbl
xor
sub
push
mov
sub
push
mov
or
add
push
call
movzwl
mov
test
je
mov
xor
mov
sub
push
mov
sub
push
mov
imul
imul
push
call
pushl
call
mov
or
mov
add
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shr
movzwl
mov
and
xor
movzbl
mov
xor
imul
mov
movzwl
imul
mov
mov
and
movzbl
imul
mov
mov
or
movzwl
add
mov
movzbl
shl
mov
movzbl
add
mov
mov
shl
mov
movzbl
mov
mov
test
jne
call
mov
mov
xor
movzwl
movzwl
xor
divl
movzbl
mov
mov
movzwl
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
sub
mov
mov
movzwl
mov
xor
xor
mov
mov
or
and
mov
mov
shl
mov
mov
movzwl
mov
movzwl
mov
shl
movzwl
mov
xor
div
mov
mov
xor
sub
movzwl
mov
shr
movzwl
cmp
jne
push
call
mov
mov
movzwl
mov
xor
div
movzwl
mov
xor
movzwl
mov
or
push
mov
and
push
mov
sub
add
push
mov
and
push
mov
or
sub
push
mov
add
push
call
movzwl
mov
test
je
call
mov
and
imul
push
call
mov
imul
add
push
mov
xor
push
call
mov
xor
mov
sub
push
mov
xor
push
call
mov
add
movzwl
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
movzbl
mov
or
mov
add
movzbl
mov
and
mov
imul
mov
test
jne
push
push
push
call
mov
mov
shl
movzbl
mov
xor
div
mov
mov
xor
mov
sub
mov
mov
movzbl
mov
or
add
push
mov
and
push
mov
and
sub
push
mov
sub
sub
push
mov
sub
sub
push
mov
xor
add
push
call
movzbl
mov
test
je
mov
sub
push
push
push
mov
imul
push
call
mov
shl
movzbl
call
mov
xor
movzbl
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shr
movzwl
mov
or
mov
imul
movzbl
mov
and
sub
push
mov
add
sub
push
mov
imul
push
push
mov
or
sub
push
mov
sub
sub
push
call
movzwl
mov
test
je
mov
add
sub
push
call
push
call
push
push
mov
add
push
push
push
push
push
push
call
mov
or
push
call
mov
movzbl
mov
add
mov
mov
xor
add
movzwl
mov
imul
add
movzbl
movzwl
imul
add
mov
mov
add
movzwl
mov
xor
xor
movzwl
mov
test
jne
push
call
movzwl
movzwl
shr
movzwl
mov
add
mov
mov
mov
mov
movzwl
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shr
movzbl
mov
shl
movzbl
mov
shr
mov
mov
mov
mov
xor
mov
mov
xor
sub
movzbl
mov
imul
push
mov
and
push
mov
imul
push
mov
xor
add
push
mov
and
sub
push
mov
or
add
push
call
mov
test
je
push
call
test
jne
pushl
call
movzbl
mov
shr
movzbl
mov
shr
movzbl
mov
shl
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
or
xor
movzbl
mov
mov
mov
imul
push
mov
xor
push
mov
sub
add
push
mov
xor
sub
push
mov
xor
push
mov
add
sub
push
call
mov
test
je
mov
xor
mov
sub
push
mov
and
mov
sub
push
call
mov
xor
add
push
mov
xor
push
mov
imul
add
push
push
call
mov
shr
mov
movl
mov
sub
mov
mov
xor
add
mov
xor
mov
mov
add
movzbl
mov
or
sub
mov
mov
mov
imul
add
mov
mov
sub
add
mov
mov
or
mov
add
mov
mov
sub
movzwl
sub
mov
mov
or
add
mov
sub
mov
mov
or
mov
mov
imul
mov
sub
mov
mov
add
mov
movzbl
or
add
mov
movzwl
mov
movzbl
xor
sub
cmp
je
movw
movzwl
mov
xor
div
mov
movzwl
sub
mov
movzwl
xor
mov
movzwl
imul
mov
mov
movzwl
and
add
mov
sub
mov
jmp
mov
and
mov
sub
mov
mov
xor
divl
mov
movzbl
add
sub
mov
mov
mov
add
mov
xor
sub
sub
mov
mov
xor
mov
mov
sub
sub
mov
mov
mov
add
mov
or
sub
sub
mov
movzwl
movzbl
xor
add
mov
mov
mov
sub
add
mov
mov
movzbl
add
add
mov
mov
mov
add
mov
xor
add
add
mov
movzwl
movzbl
sub
add
cmp
je
movw
movzwl
mov
movzwl
mov
movzwl
add
mov
movzwl
movzwl
xor
sub
mov
mov
add
movzwl
movzwl
or
add
add
mov
movzwl
mov
movzwl
movzbl
xor
sub
mov
movzwl
shr
mov
movzwl
movzwl
and
mov
movzbl
movzwl
movzbl
sub
cmp
je
movb
movzbl
shl
mov
mov
shl
mov
mov
and
movzbl
xor
mov
mov
shl
mov
shr
or
mov
movzbl
movzbl
or
mov
mov
movzbl
xor
add
mov
movzbl
xor
mov
add
mov
mov
and
add
mov
mov
movzbl
add
add
mov
add
mov
mov
movzbl
sub
mov
jmp
movzbl
xor
movzwl
sub
mov
mov
cmp
jne
movb
movzbl
xor
movzbl
sub
mov
movzbl
or
mov
movzbl
sub
mov
movzbl
or
sub
push
push
mov
movzbl
sub
sub
push
mov
movzbl
sub
sub
push
mov
movzbl
sub
sub
push
movzbl
add
sub
push
call
mov
mov
test
je
movzbl
push
movzbl
push
call
movzbl
sub
push
pushl
movzbl
and
movzbl
sub
push
movzbl
movzbl
or
push
call
mov
add
movzbl
sub
push
call
call
movzbl
mov
xor
div
mov
movzbl
add
push
movzbl
or
push
mov
movzbl
and
push
movzbl
movzbl
or
add
push
call
mov
mov
add
mov
movzbl
movzbl
xor
sub
mov
mov
sub
movzbl
and
add
mov
movzbl
movzbl
sub
sub
mov
mov
movzbl
movzbl
and
sub
mov
mov
add
movzbl
and
add
mov
movzbl
xor
mov
movzbl
add
sub
mov
add
mov
movzwl
mov
movzbl
xor
mov
mov
mov
mov
add
movzbl
sub
add
sub
mov
movzbl
movzbl
sub
sub
mov
sub
mov
mov
mov
add
mov
movzbl
shr
mov
movzwl
movzbl
add
sub
mov
xor
mov
movzbl
or
movzbl
and
mov
movzbl
movzbl
or
sub
push
mov
movzbl
xor
sub
push
movzbl
movzwl
and
sub
push
movzbl
movzwl
imul
add
push
call
mov
mov
add
mov
mov
movzbl
shl
mov
movzbl
movzbl
xor
sub
mov
add
mov
movzbl
mov
movzbl
movzwl
sub
sub
mov
sub
mov
movzwl
movzbl
xor
mov
jmp
movzbl
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
movzwl
mov
and
movzwl
mov
shl
movzwl
mov
add
mov
mov
imul
add
movzwl
mov
mov
imul
push
mov
sub
sub
push
mov
xor
push
mov
add
push
mov
sub
add
push
mov
xor
push
call
movzwl
mov
test
je
mov
and
imul
push
push
call
mov
and
sub
push
mov
imul
mov
sub
push
push
mov
or
push
push
call
mov
and
push
mov
xor
push
call
cmp
jne
push
push
push
push
call
movzwl
mov
xor
mov
mov
or
movzwl
mov
mov
shr
movzwl
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
movzbl
mov
shl
movzwl
mov
sub
movzwl
mov
shr
movzwl
mov
or
mov
sub
movzbl
cmp
jne
push
push
call
movzwl
mov
imul
mov
add
mov
mov
sub
movzwl
mov
movzbl
sub
mov
movzbl
shr
mov
movzbl
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
and
xor
movzbl
mov
xor
mov
sub
movzbl
mov
or
mov
mov
test
jne
push
push
movzwl
push
call
movzbl
mov
mov
movzwl
sub
add
push
movzwl
imul
add
push
push
movzwl
xor
sub
push
push
mov
imul
sub
push
call
movzwl
mov
test
je
push
movzwl
or
imul
push
call
mov
and
and
push
push
mov
sub
push
call
mov
movzwl
and
push
movzwl
or
push
call
movzwl
add
movzwl
add
push
movzwl
push
call
mov
movzwl
movzwl
mov
xor
div
mov
movzwl
or
mov
add
movzwl
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
or
mov
mov
movzbl
mov
xor
mov
mov
xor
sub
mov
movzwl
sub
mov
movzwl
or
mov
mov
sub
mov
mov
shl
mov
cmp
jne
pushl
push
pushl
call
mov
mov
mov
mov
add
mov
mov
movzwl
sub
mov
mov
mov
mov
movzbl
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
mov
and
mov
mov
and
mov
cmp
jne
push
push
push
call
mov
mov
or
mov
mov
and
mov
imul
mov
mov
or
mov
add
mov
mov
xor
div
mov
mov
movzwl
sub
mov
mov
mov
pop
pop
pop
mov
pop
ret
jmp
push
mov
sub
push
push
push
mov
mov
shl
movzwl
mov
and
movzwl
cmp
jne
push
push
call
movzwl
mov
xor
mov
mov
imul
mov
add
movzwl
mov
add
movzwl
movzbl
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
xor
movzwl
mov
or
xor
movzbl
mov
mov
xor
div
movzwl
mov
imul
movzwl
cmp
jne
push
push
push
call
movzbl
mov
add
mov
mov
and
movzbl
mov
movzwl
mov
xor
divl
movzbl
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
mov
mov
or
or
mov
mov
shr
mov
mov
movzbl
mov
shr
mov
movzwl
and
sub
movzbl
movzwl
movzwl
or
mov
movzwl
sub
mov
mov
movzwl
and
mov
mov
xor
div
mov
mov
xor
div
mov
cmp
jne
push
push
push
push
call
movzbl
mov
xor
div
mov
mov
mov
movzwl
mov
mov
mov
mov
movzbl
movzwl
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
movzbl
mov
shl
movzbl
mov
add
movzbl
mov
sub
movzwl
mov
mov
mov
and
movzbl
mov
mov
mov
add
mov
movzwl
and
or
mov
mov
or
xor
mov
mov
movzwl
imul
add
mov
cmp
jne
push
push
push
call
mov
mov
movzwl
xor
mov
mov
xor
divl
movzbl
mov
xor
divl
mov
movzwl
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shl
movzwl
mov
or
movzbl
mov
and
add
mov
mov
add
movzbl
mov
sub
movzwl
mov
add
mov
cmp
jne
push
push
push
call
movzwl
mov
or
sub
mov
mov
shr
movzbl
mov
shl
mov
mov
add
movzbl
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shr
movzbl
mov
movzbl
mov
movzbl
mov
shl
mov
mov
shr
mov
movzbl
xor
movzbl
mov
xor
mov
cmp
jne
movzbl
push
push
movzbl
push
push
call
mov
movzbl
add
mov
mov
add
movzbl
mov
xor
div
mov
mov
movzbl
add
mov
movzbl
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
sub
add
mov
mov
shr
mov
cmp
jne
push
push
call
mov
mov
xor
div
movzwl
mov
and
mov
sub
mov
mov
mov
mov
mov
movzwl
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shl
movzbl
mov
sub
movzbl
mov
xor
mov
cmpb
jne
push
push
push
push
call
mov
mov
shr
mov
mov
xor
mov
mov
shl
mov
mov
movzbl
movzwl
xor
add
movzbl
movzbl
pop
pop
pop
mov
pop
ret
jmp
push
mov
sub
push
push
push
mov
mov
and
or
mov
mov
shr
mov
mov
xor
or
movzwl
mov
sub
mov
cmp
jne
push
call
movzwl
mov
xor
xor
movzwl
mov
mov
mov
and
add
push
mov
sub
sub
push
mov
and
add
push
push
mov
add
sub
push
mov
imul
add
push
call
movzwl
mov
test
je
call
mov
xor
push
call
push
push
mov
and
or
push
call
mov
and
push
push
mov
and
mov
add
push
mov
xor
xor
push
call
mov
add
add
movzwl
mov
xor
div
mov
mov
or
sub
push
mov
sub
sub
push
mov
or
sub
push
mov
xor
add
push
mov
sub
sub
push
mov
and
sub
push
call
movzwl
mov
test
je
mov
or
push
mov
and
push
mov
xor
push
call
mov
and
xor
push
push
mov
imul
sub
push
push
call
mov
imul
push
mov
or
and
push
mov
add
add
push
call
mov
or
push
push
call
mov
or
push
call
mov
add
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shl
mov
mov
sub
mov
mov
or
add
mov
mov
shr
movzbl
mov
mov
cmpl
jne
call
movzbl
mov
mov
shr
mov
mov
xor
mov
imul
movzbl
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
mov
mov
or
mov
mov
imul
add
movzbl
cmp
jne
push
push
push
push
call
mov
mov
add
mov
mov
and
mov
sub
mov
mov
mov
shr
mov
mov
imul
add
push
mov
or
add
push
mov
movzwl
sub
sub
push
mov
movzwl
imul
sub
push
push
movzwl
add
sub
push
call
movzbl
mov
test
je
push
mov
imul
push
mov
and
push
call
mov
sub
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
movzwl
mov
mov
mov
xor
div
movzwl
mov
sub
movzbl
mov
movzbl
mov
or
movzbl
mov
and
or
mov
mov
xor
and
mov
mov
mov
mov
imul
sub
movzwl
mov
mov
mov
add
movzbl
cmp
jne
movzbl
push
push
call
movzwl
mov
and
mov
sub
movzbl
movzbl
shl
mov
movzbl
shl
mov
mov
movzwl
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
imul
mov
mov
mov
or
add
push
mov
add
sub
push
mov
xor
sub
push
mov
and
push
mov
imul
add
push
mov
xor
sub
push
call
mov
test
je
mov
xor
mov
sub
push
call
mov
shr
mov
mov
xor
or
mov
cmp
jne
push
call
mov
mov
shl
mov
mov
or
mov
movzbl
shr
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
imul
mov
add
movzwl
mov
mov
xor
mov
sub
mov
mov
xor
xor
mov
mov
xor
mov
mov
movzwl
cmp
jne
call
movzwl
mov
shr
mov
mov
add
mov
mov
add
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shl
movzbl
mov
shr
movzwl
mov
xor
mov
sub
mov
movzbl
xor
or
movzwl
mov
xor
add
mov
xor
mov
mov
xor
sub
mov
xor
mov
mov
mov
movzwl
movzbl
sub
add
mov
mov
mov
movzbl
imul
add
mov
mov
mov
sub
sub
cmp
je
mov
mov
movzwl
xor
movzwl
add
mov
movzwl
xor
mov
movzwl
movzwl
or
add
mov
movzbl
mov
mov
movzwl
movzwl
xor
sub
mov
add
mov
mov
imul
mov
sub
mov
movzbl
movzwl
add
add
push
movzwl
movzwl
imul
add
push
movzwl
movzwl
add
add
push
movzwl
movzbl
xor
sub
push
movzwl
movzbl
add
add
push
push
call
mov
mov
test
je
movzbl
sub
push
movzbl
movzwl
and
sub
push
call
movzwl
or
movzwl
xor
push
movzwl
push
movzwl
add
movzwl
add
push
movzwl
and
movzbl
add
push
call
movzbl
movzwl
or
sub
mov
add
mov
mov
mov
movzwl
movzbl
add
sub
mov
sub
mov
movzwl
movzwl
and
and
mov
jmp
movzwl
and
mov
add
mov
mov
movzbl
or
sub
mov
xor
mov
mov
mov
mov
movzbl
shl
mov
mov
movzbl
imul
add
push
mov
add
sub
push
movzbl
or
sub
push
mov
xor
sub
push
movzbl
movzbl
or
sub
push
mov
movzwl
xor
add
push
call
movzbl
mov
test
je
mov
or
movzbl
sub
push
call
push
movzbl
push
mov
xor
xor
push
movzbl
or
or
push
call
mov
mov
push
call
mov
xor
push
mov
movzwl
and
add
push
call
movzwl
or
sub
mov
mov
or
imul
push
call
movzbl
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
xor
movzbl
mov
or
and
mov
mov
imul
sub
mov
mov
and
imul
movzbl
mov
and
and
movzbl
mov
test
jne
push
push
push
call
mov
mov
and
imul
movzbl
mov
shl
mov
movzwl
or
mov
add
movzbl
mov
movzwl
and
or
movzbl
movzwl
sub
movzwl
add
mov
mov
mov
pop
pop
pop
mov
pop
ret
ret
push
mov
sub
push
push
push
mov
mov
shr
mov
mov
sub
movzbl
mov
add
mov
mov
and
mov
sub
mov
cmp
jne
push
pushl
pushl
call
mov
mov
and
sub
mov
movzwl
or
mov
mov
imul
mov
add
mov
mov
movzbl
mov
shr
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
mov
shl
mov
mov
shl
mov
mov
shr
mov
movzbl
and
add
mov
mov
or
add
mov
mov
imul
movzbl
sub
mov
mov
test
jne
movzbl
push
call
mov
mov
xor
div
mov
movzbl
and
mov
movzbl
and
push
push
mov
imul
push
movzbl
and
push
mov
and
push
mov
movzbl
add
sub
push
call
mov
test
je
push
movzbl
sub
add
push
push
call
mov
movzbl
imul
push
push
mov
and
movzbl
sub
push
movzbl
imul
sub
push
mov
and
movzbl
and
push
call
mov
or
mov
movzbl
or
push
movzbl
and
and
push
movzbl
imul
push
movzbl
or
and
push
call
mov
and
mov
movzbl
sub
movzbl
add
push
movzbl
imul
push
call
mov
imul
movzbl
sub
mov
movzbl
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
movzbl
mov
shr
movzbl
mov
movzbl
mov
movzbl
cmp
jne
push
push
push
call
movzbl
mov
mov
movzbl
shr
mov
mov
shl
mov
mov
movzbl
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
movzbl
mov
shl
movzbl
mov
xor
add
movzbl
mov
shr
movzwl
mov
shr
movzwl
mov
sub
add
movzwl
mov
movzbl
mov
xor
sub
mov
mov
shl
movzwl
mov
and
mov
mov
xor
add
movzbl
mov
sub
mov
cmp
jne
call
movzbl
mov
shr
movzwl
mov
shl
mov
movzbl
or
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
or
add
mov
mov
sub
mov
mov
add
mov
mov
and
mov
mov
imul
add
mov
mov
shr
mov
mov
and
mov
sub
mov
mov
mov
mov
shl
mov
cmp
jne
call
mov
mov
add
mov
mov
movzwl
and
mov
mov
shl
mov
mov
mov
mov
add
mov
movzwl
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
sub
mov
mov
add
sub
movzwl
mov
shl
mov
mov
mov
xor
div
movzwl
push
mov
imul
add
push
movzbl
imul
push
mov
xor
sub
push
mov
movzbl
sub
sub
push
mov
movzbl
add
push
call
mov
test
je
mov
sub
push
mov
or
and
push
push
call
test
jne
push
push
call
mov
movzbl
shl
movzwl
mov
shr
mov
movzbl
mov
xor
div
movzwl
movzbl
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
and
mov
sub
movzwl
mov
add
movzwl
mov
sub
movzbl
mov
add
movzbl
mov
movzwl
mov
imul
mov
mov
sub
mov
cmp
jne
push
call
movzwl
mov
xor
div
mov
mov
shl
mov
mov
sub
add
mov
movzwl
and
movzbl
movzwl
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
sub
mov
mov
xor
mov
mov
imul
mov
mov
and
mov
mov
sub
sub
mov
mov
mov
movzbl
and
imul
cmpb
jne
call
mov
mov
shl
mov
movzbl
shr
mov
mov
xor
mov
imul
mov
movzbl
shl
mov
cmp
jne
movzbl
push
call
mov
mov
mov
shl
mov
mov
add
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shl
mov
mov
xor
or
movzwl
mov
shl
mov
mov
mov
mov
imul
imul
mov
mov
xor
mov
mov
sub
movzwl
mov
or
mov
add
mov
mov
and
movzwl
imul
mov
mov
test
jne
movzwl
push
movzwl
push
movzwl
push
movzwl
push
call
mov
mov
movzwl
mov
shr
mov
mov
movzwl
movzbl
imul
movzbl
sub
mov
mov
xor
add
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
movzbl
mov
shl
movzwl
mov
and
xor
movzbl
mov
mov
mov
mov
sub
movzwl
mov
movzwl
cmp
jne
push
call
movzwl
mov
shl
mov
mov
xor
and
mov
mov
shl
mov
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
add
mov
mov
shl
movzwl
cmp
jne
call
mov
mov
xor
div
mov
mov
and
xor
mov
mov
xor
div
mov
mov
mov
xor
div
mov
movzbl
shl
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
movzwl
mov
sub
movzwl
mov
shl
mov
mov
shl
mov
mov
shl
mov
mov
mov
mov
movzbl
xor
or
mov
mov
mov
movzbl
xor
div
mov
mov
xor
div
mov
mov
movzbl
and
or
mov
mov
shr
mov
cmpb
jne
movzbl
push
movzbl
push
push
movzbl
push
call
mov
mov
xor
mov
sub
movzwl
movzbl
imul
movzwl
mov
xor
imul
mov
movzbl
shr
movzwl
mov
shl
movzwl
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
movzbl
mov
xor
mov
mov
shl
mov
mov
movzbl
mov
mov
mov
xor
mov
sub
mov
mov
and
xor
mov
mov
mov
test
jne
pushl
push
call
movzbl
mov
shl
mov
mov
mov
mov
add
mov
movzwl
mov
mov
movzwl
pop
pop
pop
mov
pop
ret
jmp
push
mov
sub
push
push
push
mov
mov
movzwl
mov
shl
mov
mov
movzbl
mov
test
jne
push
push
call
movzwl
mov
shl
movzbl
mov
add
mov
mov
movzbl
mov
or
sub
push
mov
or
push
mov
imul
push
mov
imul
push
mov
or
add
push
mov
xor
push
call
movzwl
mov
test
je
call
mov
xor
push
mov
and
push
mov
sub
push
push
mov
or
push
call
mov
xor
xor
push
push
push
call
call
mov
test
jne
push
push
push
push
call
movzbl
mov
mov
or
add
movzbl
mov
and
mov
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
or
mov
mov
imul
mov
add
movzwl
mov
imul
add
mov
mov
or
movzbl
sub
mov
movzbl
shl
mov
mov
xor
div
movzwl
mov
and
or
mov
mov
add
movzwl
mov
xor
add
push
movzwl
xor
sub
push
mov
add
add
push
mov
xor
sub
push
mov
movzwl
and
push
mov
and
sub
push
call
mov
mov
test
je
push
mov
movzbl
sub
add
push
push
call
mov
sub
push
push
call
mov
and
push
mov
imul
push
mov
or
mov
add
push
call
mov
xor
imul
movzwl
mov
or
mov
add
mov
mov
and
mov
imul
movzwl
cmpb
jne
movzwl
push
push
movzbl
push
push
call
mov
mov
sub
mov
movzbl
sub
mov
mov
add
mov
movzbl
xor
div
mov
mov
movzwl
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
movzbl
mov
shl
mov
mov
shr
mov
mov
movzbl
mov
mov
mov
shr
movzbl
test
jne
push
push
push
call
mov
mov
shl
mov
mov
add
sub
mov
movzbl
shr
mov
mov
xor
div
movzbl
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shl
mov
mov
imul
mov
mov
and
and
mov
mov
shr
mov
mov
shl
mov
mov
shr
mov
mov
and
sub
mov
mov
xor
mov
imul
mov
mov
mov
movzwl
sub
mov
cmp
jne
call
mov
mov
or
sub
mov
movzwl
add
mov
mov
mov
sub
mov
cmp
jne
push
movzwl
push
push
movzwl
push
call
mov
mov
shl
mov
movzwl
xor
mov
sub
mov
mov
imul
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
mov
shr
mov
mov
shr
movzwl
mov
add
add
push
mov
and
sub
push
push
mov
and
push
mov
imul
push
mov
imul
push
call
mov
test
je
mov
imul
push
call
mov
imul
mov
sub
push
mov
sub
push
mov
and
push
call
mov
xor
div
mov
push
call
push
call
mov
and
push
push
call
mov
and
mov
mov
sub
add
movzwl
mov
mov
sub
mov
cmp
jne
push
call
movzwl
mov
shl
mov
mov
xor
mov
mov
movzwl
movzwl
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shr
movzbl
mov
add
movzbl
mov
movzbl
mov
movzbl
mov
shl
mov
mov
xor
movzbl
mov
shl
mov
movzwl
movzwl
add
sub
mov
mov
sub
mov
movzwl
add
sub
movzbl
movzwl
mov
mov
test
jne
push
push
call
movzbl
mov
mov
xor
div
movzbl
mov
add
mov
mov
imul
movzwl
sub
mov
mov
or
movzwl
or
mov
movzwl
mov
pop
pop
pop
mov
pop
ret
xor
ret
push
mov
sub
push
push
push
mov
movzbl
mov
imul
sub
movzbl
mov
shl
mov
mov
add
sub
mov
mov
mov
mov
cmp
jne
push
call
movzbl
mov
sub
movzbl
mov
shl
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
push
push
mov
mov
shl
movzwl
mov
xor
add
mov
mov
movzwl
mov
shr
mov
mov
xor
div
movzwl
mov
add
sub
movzwl
cmp
jne
push
call
mov
mov
add
mov
mov
xor
movzwl
mov
movzwl
mov
xor
sub
mov
mov
pop
pop
pop
ret
push
mov
sub
push
push
push
mov
mov
imul
mov
add
movzwl
mov
or
and
movzwl
mov
imul
sub
movzwl
mov
mov
mov
shr
mov
mov
add
movzwl
movzbl
add
movzwl
cmpb
jne
movzbl
push
call
mov
movzbl
add
mov
mov
sub
movzwl
mov
xor
div
mov
mov
xor
add
push
movzwl
imul
add
push
movzwl
movzbl
add
add
push
mov
movzwl
add
sub
push
mov
imul
sub
push
mov
xor
sub
push
call
mov
test
je
push
push
movzbl
or
mov
sub
push
call
movzwl
or
mov
imul
push
movzwl
movzbl
xor
imul
push
movzbl
push
call
mov
movzwl
or
push
mov
movzbl
imul
push
movzbl
push
call
call
movzwl
push
movzwl
or
add
push
movzbl
xor
push
call
mov
and
movzwl
imul
movzwl
mov
shl
mov
mov
sub
movzwl
movzwl
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
movzbl
mov
and
mov
imul
mov
mov
add
add
mov
mov
shr
movzwl
mov
mov
mov
shr
mov
movzwl
xor
div
mov
mov
mov
mov
mov
mov
cmp
jne
call
mov
mov
movzbl
and
or
movzbl
mov
and
movzbl
mov
sub
mov
mov
xor
mov
add
mov
mov
shr
mov
push
movzbl
movzbl
and
push
movzbl
or
sub
push
movzbl
or
sub
push
movzbl
or
add
push
mov
imul
sub
push
call
mov
mov
test
je
pushl
movzbl
or
push
movzbl
or
movzbl
imul
push
call
movzbl
sub
movzwl
sub
push
pushl
pushl
call
movzbl
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
movzbl
mov
shl
movzbl
mov
shr
mov
mov
or
and
mov
mov
add
sub
mov
xor
mov
mov
add
mov
mov
xor
add
mov
xor
mov
mov
movzbl
xor
and
mov
mov
mov
mov
mov
mov
movzbl
imul
add
mov
mov
movzwl
xor
cmp
je
movl
mov
or
mov
mov
imul
mov
add
mov
mov
shr
mov
mov
or
sub
mov
movzbl
mov
mov
movzbl
imul
mov
add
mov
movzbl
imul
sub
mov
add
mov
movzbl
mov
mov
imul
add
mov
add
mov
mov
movzbl
sub
sub
mov
sub
mov
jmp
mov
movzbl
and
add
mov
xor
mov
mov
sub
mov
mov
mov
mov
movzbl
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shr
mov
mov
or
sub
mov
mov
sub
movzwl
mov
xor
mov
mov
xor
imul
mov
add
sub
mov
mov
mov
mov
shl
mov
mov
imul
sub
mov
xor
mov
mov
add
sub
mov
mov
mov
mov
or
sub
mov
mov
and
mov
mov
add
cmp
je
mov
mov
mov
mov
mov
mov
movzwl
and
movzwl
imul
mov
movzwl
shl
mov
mov
movzwl
sub
sub
push
movzwl
and
push
movzwl
sub
sub
push
mov
movzwl
imul
sub
push
mov
movzwl
or
sub
push
movzwl
movzwl
sub
sub
push
call
mov
mov
test
je
mov
xor
push
mov
or
xor
push
movzwl
movzwl
and
mov
sub
push
mov
sub
add
push
call
movzwl
xor
sub
mov
movzbl
movzbl
xor
mov
mov
mov
mov
movzbl
mov
mov
movzwl
or
sub
mov
movzbl
movzbl
xor
mov
mov
sub
mov
mov
sub
mov
mov
xor
mov
mov
add
mov
mov
shr
mov
jmp
mov
xor
mov
mov
sub
sub
mov
xor
mov
mov
xor
sub
mov
mov
mov
mov
imul
mov
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
xor
movzwl
mov
add
movzwl
mov
mov
xor
div
movzwl
cmp
jne
push
push
push
call
movzwl
mov
xor
mov
add
movzwl
mov
movzwl
mov
shr
mov
mov
sub
sub
movzwl
mov
add
movzwl
movzwl
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
movzbl
mov
sub
mov
mov
movzbl
mov
shr
mov
mov
sub
mov
mov
mov
cmpl
jne
push
push
pushl
call
mov
mov
shl
mov
mov
shl
mov
movzwl
shl
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
and
and
movzbl
mov
xor
movzbl
mov
movzbl
mov
add
sub
movzbl
mov
or
xor
mov
cmp
jne
push
push
push
movzbl
push
call
movzbl
mov
add
mov
mov
mov
xor
div
mov
mov
sub
movzwl
mov
movzbl
movzbl
shl
movzbl
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shl
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
movzbl
mov
shr
mov
mov
mov
mov
add
mov
movzbl
and
xor
mov
movzbl
xor
movzbl
movzbl
add
mov
cmpl
jne
movzbl
push
push
call
movzbl
mov
mov
and
mov
mov
imul
add
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
movzbl
mov
mov
mov
mov
cmp
jne
push
push
push
call
movzbl
mov
mov
mov
or
mov
mov
shr
mov
mov
xor
movzbl
movzwl
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shr
movzwl
mov
shl
movzbl
mov
and
movzwl
mov
add
movzbl
mov
shl
mov
movzwl
movzwl
mov
shr
mov
cmp
jne
movzwl
push
movzwl
push
call
mov
mov
xor
movzwl
mov
shl
movzwl
mov
sub
movzbl
movzwl
imul
mov
sub
mov
mov
shr
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
imul
sub
movzbl
mov
shl
movzwl
mov
add
movzwl
mov
or
movzwl
mov
mov
xor
div
movzwl
mov
mov
xor
div
movzwl
mov
or
add
movzwl
mov
shl
mov
mov
test
jne
push
movzbl
push
push
push
call
movzwl
mov
imul
mov
add
movzwl
mov
sub
movzwl
mov
sub
movzwl
mov
shr
mov
movzbl
xor
movzbl
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
mov
imul
mov
mov
add
movzwl
cmp
jne
push
call
movzwl
mov
mov
mov
add
movzwl
mov
mov
shl
mov
mov
shl
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
mov
mov
movzbl
mov
shl
mov
mov
add
movzbl
mov
shr
mov
mov
add
mov
cmp
jne
push
push
call
mov
movzwl
shr
mov
movzbl
xor
div
mov
mov
xor
mov
sub
mov
mov
and
movzwl
sub
mov
mov
movzbl
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shr
movzbl
push
mov
or
push
mov
add
push
mov
and
push
mov
imul
push
mov
and
push
call
movzbl
mov
test
je
mov
and
push
call
mov
imul
push
mov
or
and
push
push
mov
xor
push
mov
add
push
call
mov
sub
push
call
mov
or
push
call
mov
and
or
movzbl
mov
xor
and
movzbl
mov
imul
add
movzbl
mov
add
movzbl
mov
shr
movzbl
mov
imul
sub
push
mov
sub
sub
push
push
mov
or
sub
push
mov
or
sub
push
mov
and
push
call
movzbl
mov
test
je
mov
imul
push
push
mov
imul
sub
push
call
mov
or
or
push
mov
sub
push
mov
add
add
push
call
mov
movzbl
mov
and
mov
imul
movzbl
mov
mov
xor
div
movzbl
mov
xor
mov
imul
movzbl
mov
test
jne
call
movzbl
mov
shl
mov
mov
or
mov
add
movzbl
movzbl
movzbl
movzbl
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
xor
mov
add
mov
mov
and
movzwl
mov
shl
mov
cmp
jne
push
call
movzwl
mov
shl
mov
movzbl
and
movzwl
mov
mov
mov
xor
movzwl
mov
and
mov
add
mov
mov
test
jne
call
movzwl
mov
xor
div
movzwl
mov
shl
mov
mov
add
mov
mov
xor
xor
mov
mov
xor
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
mov
add
mov
mov
or
mov
mov
sub
movzbl
cmp
jne
push
push
push
call
mov
xor
mov
or
movzbl
mov
mov
mov
cmp
jne
call
movzbl
mov
and
mov
imul
mov
mov
shr
mov
mov
xor
add
mov
mov
shr
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
or
mov
mov
mov
xor
xor
movzbl
mov
xor
xor
mov
mov
xor
div
movzbl
mov
mov
mov
add
add
mov
mov
mov
mov
mov
movzbl
or
mov
cmp
jne
push
push
call
mov
movzbl
movzbl
mov
sub
movzbl
mov
add
mov
mov
add
mov
mov
and
mov
add
movzbl
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
xor
mov
imul
movzbl
mov
movzbl
mov
shl
movzbl
mov
sub
mov
mov
add
mov
mov
imul
add
mov
movzwl
shr
mov
mov
mov
mov
mov
test
jne
push
call
mov
mov
xor
div
movzbl
mov
movzwl
or
push
mov
xor
add
push
movzwl
imul
push
push
mov
movzwl
and
push
mov
xor
push
call
movzbl
mov
test
je
mov
movzwl
and
imul
push
call
push
movzbl
push
push
call
mov
sub
mov
mov
movzbl
mov
imul
mov
movzwl
sub
mov
movzbl
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
movzbl
mov
or
movzbl
mov
shl
movzwl
mov
or
mov
mov
shr
mov
mov
xor
div
mov
mov
test
jne
call
mov
movzwl
mov
movzbl
shl
mov
mov
shl
movzbl
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
xor
mov
mov
and
movzbl
mov
xor
div
mov
mov
test
jne
push
call
movzbl
mov
xor
div
mov
mov
shl
mov
mov
xor
div
mov
mov
shl
mov
mov
and
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
xor
mov
add
movzwl
mov
shr
movzbl
mov
mov
xor
div
mov
mov
mov
movzwl
sub
sub
mov
xor
mov
mov
shl
mov
movzwl
and
add
mov
xor
mov
movzwl
or
mov
mov
mov
mov
mov
mov
or
sub
mov
mov
movzbl
movzwl
and
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
or
add
mov
movzbl
mov
mov
mov
mov
mov
movzbl
or
add
mov
add
mov
mov
movzbl
and
sub
mov
add
mov
mov
add
add
mov
sub
mov
mov
add
mov
jmp
mov
mov
movzwl
or
add
mov
xor
mov
mov
add
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shr
movzwl
mov
xor
sub
push
mov
imul
sub
push
mov
sub
sub
push
push
mov
sub
add
push
mov
imul
sub
push
call
movzwl
mov
test
je
call
mov
xor
and
push
call
mov
imul
mov
sub
mov
mov
movzwl
mov
and
add
movzwl
mov
mov
xor
mov
mov
shr
mov
cmp
jne
call
mov
mov
shr
movzwl
mov
sub
add
push
mov
add
sub
push
mov
sub
sub
push
mov
and
push
mov
and
push
mov
xor
push
call
movzwl
mov
test
je
push
push
push
pushl
call
mov
xor
push
mov
imul
push
call
mov
add
add
mov
mov
add
mov
mov
sub
movzwl
mov
or
movzwl
mov
and
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
or
mov
imul
movzwl
mov
movzbl
mov
xor
add
movzwl
mov
test
jne
push
push
push
push
call
mov
mov
mov
mov
or
mov
imul
movzbl
mov
imul
movzwl
mov
add
movzwl
cmp
jne
push
call
movzwl
mov
shr
mov
mov
or
mov
sub
mov
mov
movzbl
or
mov
mov
pop
pop
pop
mov
pop
ret
push
push
push
mov
mov
or
movzwl
mov
add
movzwl
mov
add
movzwl
mov
mov
xor
div
movzwl
cmp
jne
push
push
push
call
movzwl
mov
mov
xor
div
movzwl
mov
add
movzwl
mov
movzbl
mov
shl
movzwl
mov
mov
pop
pop
pop
ret
push
mov
sub
push
push
push
mov
movzwl
mov
and
movzwl
mov
or
movzbl
mov
movzwl
mov
test
jne
push
push
push
call
movzwl
mov
mov
mov
shr
mov
movzbl
shl
movzbl
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shl
movzwl
mov
mov
xor
div
movzwl
mov
movzbl
mov
sub
movzbl
mov
shr
mov
movzbl
movzwl
mov
shl
mov
mov
test
jne
push
push
push
call
mov
mov
imul
mov
mov
and
and
movzbl
movzbl
or
movzbl
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
or
mov
mov
and
imul
mov
mov
add
mov
mov
cmp
jne
call
mov
mov
shr
movzbl
mov
and
mov
add
mov
mov
add
mov
mov
shr
mov
movzwl
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shr
mov
mov
xor
and
mov
mov
or
sub
mov
xor
mov
mov
or
mov
mov
xor
mov
mov
mov
movzbl
add
sub
mov
mov
mov
movzbl
movzwl
movzbl
and
sub
mov
movzbl
shr
mov
mov
imul
cmp
je
movl
mov
and
imul
mov
movzwl
shr
mov
movzwl
mov
movzbl
mov
mov
movzwl
mov
mov
movzbl
xor
add
mov
add
mov
movzbl
xor
movzwl
add
mov
movzwl
sub
add
add
mov
movzwl
imul
mov
mov
movzbl
and
add
mov
sub
mov
movzwl
shr
mov
jmp
movzbl
and
mov
sub
mov
movzbl
xor
add
mov
xor
mov
movzbl
xor
div
mov
mov
mov
mov
mov
shl
movzwl
movzbl
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
movzwl
mov
imul
mov
mov
imul
mov
add
mov
mov
or
imul
movzwl
mov
shr
movzwl
mov
movzwl
mov
sub
movzwl
cmp
jne
call
movzwl
mov
mov
mov
add
add
mov
mov
shl
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
xor
movzwl
mov
sub
movzwl
mov
sub
movzbl
mov
or
mov
sub
mov
mov
shl
mov
movzwl
shl
movzbl
cmp
jne
movzwl
push
push
push
call
movzbl
mov
shr
mov
mov
and
mov
movzwl
shr
movzbl
mov
pop
pop
pop
mov
pop
ret
jmp
mov
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
mov
push
call
pop
orl
orl
call
mov
mov
call
mov
mov
mov
mov
mov
call
cmp
jne
push
call
pop
call
push
push
call
mov
mov
lea
push
pushl
lea
push
lea
push
lea
push
call
push
push
call
add
mov
mov
mov
cmpb
jne
inc
mov
mov
cmp
je
cmp
jne
cmpb
jne
inc
mov
mov
cmp
je
cmp
jbe
mov
lea
push
call
testb
je
movzwl
jmp
cmpb
jbe
inc
mov
jmp
push
pop
push
push
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
push
push
call
pop
pop
ret
jge
and
and
sbb
aaa
fbld
test
addr16
pop
pop
pop
lcall
add
add
pop
mov
imul
or
ds
mov
arpl
sar
jge
lds
int3
out
jae
and
jmp
fcmovnu
jg
mov
xor
in
lods
outsl
xchg
ja
call
das
sahf
cmp
push
mov
lcall
push
add
stos
and
leave
xchg
mov
repz
or
negl
mov
or
adc
xchg
scas
inc
push
and
cwtl
fcmovnb
ljmp
sub
pop
push
out
imul
or
xchg
iret
xchg
pop
lahf
xchg
xchg
and
xchg
jb
int3
div
div
scas
inc
push
push
push
sub
sbb
push
pop
movsl
pop
test
xlat
sbb
xchg
lods
lods
test
in
ljmp
add
add
add
test
test
test
test
test
out
sbb
out
in
inc
inc
in
inc
movsl
push
or
insl
rcll
or
hlt
push
push
push
leave
mov
sbb
daa
out
fwait
popf
mov
movl
sbb
lahf
xchg
mov
jne
mov
dec
jne
icebp
repz
stos
xrelease
mov
pop
push
imul
and
in
scas
ss
sahf
jae
fwait
lea
leave
cld
pop
adc
mov
adcl
mov
sbb
scas
mov
call
sar
pop
call
es
arpl
jmp
sub
mov
inc
xor
dec
push
leave
dec
mov
lea
jg
div
insl
pop
sbb
pop
pop
sub
das
roll
jmp
inc
mov
ret
decl
jge
js
loopne
ja
lcall
dec
ljmp
push
aad
jg
and
mov
fld
movsb
fisubrs
iret
mov
cmp
lret
in
sbb
jmp
rcrl
pop
xor
out
push
test
fidivs
pop
mov
fs
mov
adcl
negl
jo
jp
cmp
mov
fldl
stos
fsubrs
jns
mov
xchg
aad
mov
xchg
inc
pop
inc
sbb
push
into
popf
add
jb
scas
cmp
gs
pop
js
xor
fs
jecxz
sub
enter
sahf
sbb
rorl
leave
lahf
lea
mov
gs
inc
ljmp
xchg
cmp
fdivrl
fcmove
outsb
mov
add
mov
arpl
push
adc
shl
sub
mov
jb
in
out
fldenv
nop
mov
xor
nop
fidivs
fdivl
cli
mov
pop
fistpl
jo
fcoml
iret
fcompl
aam
pop
mov
sub
xor
outsl
xor
push
mov
or
btc
in
cmpsb
in
jg
incb
rcll
push
dec
repz
or
xchg
mov
outsl
sbb
stos
cmpsl
fs
mov
in
push
cmp
data16
push
or
enter
lods
and
lcall
dec
dec
xor
popf
js
arpl
clc
add
adc
jbe
pop
or
xor
aad
shlb
iret
loop
rcrb
popf
popa
xor
mov
adc
imul
sub
dec
lock
into
ja
mov
out
ss
pop
loopne
ss
xchg
mov
mov
jns
movsl
rclb
cli
sub
sub
out
adc
dec
nop
mov
and
ficoms
xor
jecxz
dec
in
mov
mov
enter
enter
fsubrs
lock
or
dec
push
mov
outsb
cmc
push
cmpsl
jg
gs
xchg
and
icebp
iret
xchg
or
jne
sbb
xor
mov
push
mov
jno
fimuls
call
cld
sbb
das
or
mov
insb
imull
pushf
in
ret
aas
insb
hlt
mov
movsb
leave
push
cld
add
inc
sahf
daa
jl
enter
inc
sub
inc
pop
aam
test
faddp
push
into
adc
mov
or
dec
scas
and
gs
out
ljmp
daa
mov
out
mov
ds
and
mov
xchg
outsl
rcr
movsl
sbb
sub
or
sub
movsb
icebp
add
js
cmp
inc
ss
push
inc
fdivrs
pop
or
test
je
outsl
sti
jb
insw
dec
dec
loopne
dec
testb
jo
rcrl
out
mov
push
lods
ja
push
push
mov
fmul
mov
lret
mov
lret
fistpll
fldl
adc
ds
das
test
cli
fstp
jb
inc
mov
cwtl
add
mov
orb
inc
fsubrl
mov
pop
clc
xor
xor
xchg
aaa
out
out
cmpb
xchg
imul
jns
fwait
jae
mov
loope
int3
pusha
jbe
jae
fisubs
aaa
filds
jp
pop
or
aad
inc
int
lret
mov
pop
in
dec
or
aad
je
or
xchg
or
or
pop
xor
mov
push
stc
mov
inc
sbb
mov
jle
inc
jne
push
gs
arpl
or
int
mov
fs
mov
ss
jmp
jl
add
sbb
cmpsb
jp
enter
enter
or
fiaddl
sti
cmp
std
mov
xchg
adc
jns
add
jmp
mov
sbb
out
scas
rcrb
das
push
mov
mov
scas
mov
dec
prefetcht1
mov
xchg
imul
add
mov
es
lock
adc
test
xor
ss
test
rorl
sbb
xlat
test
add
hlt
add
mov
cmp
jecxz
mov
roll
and
xor
mov
and
mov
fiaddl
rol
ljmp
lcall
in
decb
fnstenv
inc
negb
shrl
push
xchg
lock
adc
stos
outsb
mov
mov
mov
mov
stc
ja
lods
in
inc
out
lret
jne
inc
cld
xchg
cmpsb
scas
mov
sub
push
jg
cmp
mov
jmp
sbb
stos
and
test
adc
and
fs
leavew
jno
xchg
movb
incl
out
pop
add
jno
cmpsb
adcl
adc
mov
jae
sahf
sub
mov
sbbl
sti
insl
lea
ljmp
fbstp
sbb
push
inc
mov
fildll
dec
subb
fucomp
xchg
inc
outsb
jne
sbb
mov
les
mov
xor
repz
dec
sub
push
xchg
jl
push
sub
mov
push
aad
dec
filds
dec
mov
jns
or
inc
sub
movsb
js
dec
xchg
mov
and
inc
rclb
outsb
xchg
aaa
mov
or
cli
xor
jns
pop
cld
push
add
adc
rcr
mov
mov
add
xchg
out
mov
pop
int3
rorl
call
je
repz
cltd
sub
cmp
addr16
pop
dec
cwtl
push
mov
or
xchg
push
fidivl
test
pop
mov
sbb
daa
xor
lds
mov
sub
js
mov
daa
and
ret
mov
sub
xor
inc
outsl
out
les
pop
out
rolb
mov
sbb
in
sub
adc
fildl
sbb
jnp
cmpsb
cmp
mov
orl
shl
xchg
inc
cmp
jns
arpl
jmp
mov
add
cmp
xchg
inc
cmp
xchg
bound
outsb
cmp
push
dec
cmp
fucom
push
insb
ja
filds
arpl
push
clc
push
xchg
into
pushf
addr16
mov
in
test
sahf
je
nop
clc
xor
xchg
mov
jns
les
aam
pop
xchg
mov
mov
mov
aaa
jne
cmc
jp
xchg
cld
xor
data16
aam
xor
xor
das
divl
sti
pop
and
sbb
inc
xor
mov
xor
sub
cwtl
loop
out
push
lahf
push
jge
ljmp
fnstenv
cmpsb
dec
in
xor
fwait
cmc
cmp
adc
cmp
outsb
dec
mov
outsl
sub
push
ljmp
mov
fisubrl
out
adc
lods
js
jne
jle
movsl
pop
idiv
loopne
xor
adc
jl
nop
pop
jnp
int
push
push
push
xchg
sub
stos
xor
aam
mov
pop
xor
cli
aam
pop
mov
sub
test
fnsave
cmp
cmp
loop
and
cmovo
push
popf
mov
inc
test
xchg
or
mov
sub
pushf
xor
pusha
shlb
scas
and
inc
dec
push
push
mov
push
xor
movsl
pop
or
cmc
xchg
fiadds
ss
pop
pusha
add
adc
mov
cmp
arpl
mov
outsl
push
xor
jae
fidivrl
jbe,pt
test
ja
push
inc
stc
mov
je
cmpsl
movsw
pop
repz
inc
cltd
push
cmpsb
lcall
xor
sti
cmpb
mov
aam
filds
adc
and
cmpsl
insb
adc
adc
mov
movsl
enter
test
or
mov
mov
push
xchg
adc
loope
sbb
jae
xor
jns
and
ja
push
aas
adc
mov
adc
out
push
mov
fucomp
sbb
or
and
inc
sti
out
mov
dec
cmpsl
adc
in
call
mov
clc
into
ret
mov
sarl
call
scas
jmp
lea
lods
jbe
outsl
dec
cs
dec
cmp
pusha
data16
cmpsl
sub
mov
setg
pop
xor
xor
xor
repnz
cmpsl
jle
lds
lahf
jl
push
jbe
mov
bound
and
pop
mov
adc
movsl
out
xchg
aas
mov
push
fdivr
dec
sahf
cld
in
lock
and
dec
cmpsb
xchg
scas
aaa
int
push
mov
jl
pop
mov
mov
stc
dec
jmp
adc
mov
int3
jb
mov
out
xor
aas
inc
test
or
mov
lock
mov
cld
sahf
xor
popf
xor
mov
adc
dec
or
inc
mov
stos
sbb
sbb
pop
repnz
loop
sub
adc
xchg
jge
stos
xor
stc
call
inc
stos
adc
jbe
adc
cwtl
add
out
out
out
popa
mov
incl
ds
mov
xchg
jl
xor
cmp
mov
jmp
int
es
fadds
jns
push
or
test
push
hlt
sbb
lods
jle
jmp
in
sub
jecxz
scas
xchg
repnz
or
mov
les
shlb
add
adcl
mov
lock
sub
roll
cld
mov
jbe
and
dec
cmpsb
pop
jns
subb
mov
sub
out
inc
pop
pop
sub
fwait
paddw
arpl
pop
sti
ret
nop
push
push
and
jmp
scas
mov
xchg
mov
push
sub
sub
jmp
rcll
jo
insb
inc
decl
mov
xchg
sar
xchg
or
jnp
pop
arpl
mov
add
shll
daa
aaa
movsb
xchg
pop
sub
pop
pop
pop
out
sarl
fstpl
aam
pop
and
pop
sub
pop
test
dec
ljmp
imul
dec
decb
imul
lea
mov
dec
pop
jo
fdivp
xchg
in
or
adc
loope
lea
pop
xor
loope
lods
or
sarb
or
lock
out
loope
insl
or
nop
sti
out
loope
or
out
loope
sub
sub
jbe
ret
shll
rcl
les
or
cli
test
mov
test
mov
pop
mov
inc
jmp
lds
test
and
xchg
or
xor
cmp
data16
aad
dec
push
mov
pop
cmp
xor
adc
aam
popa
inc
nop
test
clc
adc
add
hlt
loopne
mull
fisttpll
out
mov
cwtl
inc
out
or
pop
inc
xchg
jnp
push
pop
jle
add
ljmp
dec
ret
add
addr16
dec
je
adcl
shrb
dec
repz
cmc
scas
mov
fisttps
pop
ljmp
hlt
insb
add
scas
ja
or
pop
repz
jo
xlat
cmpsb
and
sarl
pop
in
call
mov
dec
xor
stos
jb
out
in
pop
mov
notb
repnz
and
inc
iret
fadds
sbb
jecxz
loope
mov
xor
mov
hlt
xor
or
lret
outsl
loope
inc
cmp
loopne
sub
and
scas
and
orb
push
aaa
fwait
jecxz
out
pop
sub
adc
xchg
jge
sub
xchg
sub
pop
pop
lcall
adc
test
cmpb
subl
or
or
lds
movsl
jbe
inc
test
lret
sbb
xchg
mov
out
inc
fstpt
je
xlat
sbb
inc
fwait
xchg
dec
stos
in
sub
mov
sbb
push
ret
dec
push
stos
mov
ror
add
aad
in
or
pop
adc
or
jbe
push
lcall
and
inc
lret
or
popf
sbb
stos
pop
stos
xchg
and
movsl
mulb
xor
cmp
dec
inc
push
or
loope
out
lret
cwtl
pop
adc
adc
out
add
dec
pop
dec
js
sub
sub
ss
inc
mov
je
pop
sbb
das
jns
sbb
sub
and
sub
aam
add
mov
mov
cmpsb
dec
fadds
aas
loope
lcall
add
loope
mov
cmpsb
popf
ficoms
mov
add
xchg
mov
sub
fnsave
insl
adc
repnz
clc
scas
in
lods
pusha
mov
cmpsl
popf
rorb
cmp
pop
ja
int
ret
out
fdivr
inc
fadds
bswap
lret
jge
or
shr
cmp
cmp
lcall
mov
xor
pop
sbb
mov
shr
sbb
call
rcll
cmp
push
push
cmp
out
sbb
push
enter
out
hlt
iret
dec
fstpt
inc
mov
push
shrl
jl
ret
sub
sbb
stos
sahf
lea
push
push
or
pop
xlat
lahf
jg
xchg
mov
push
lret
xchg
out
cmp
je
popa
mov
sbb
pop
mov
xor
int3
xor
jne
test
dec
inc
lret
push
sub
movsb
dec
push
aaa
jecxz
or
fidivrl
mov
lret
adcl
and
push
shrb
fmuls
cld
lea
xchg
dec
ss
movsb
enter
mov
inc
mov
testb
imul
sbb
ja
out
jno
fwait
jecxz
cmp
or
cmp
je
insl
add
in
fistpl
bound
aam
and
out
testl
aam
scas
cld
outsl
cmp
jns
sti
nop
mov
or
mov
jo
rcrb
mov
push
ja
jl
das
or
lret
xchg
sub
mov
sbbl
adc
fimuls
mov
sub
pop
mov
fwait
into
xor
inc
xchg
dec
sbb
fidivs
push
cmpsb
inc
push
loope
dec
mov
pusha
inc
cs
cs
mov
lods
je
ret
cltd
jle
lea
pop
cli
inc
add
pop
sub
add
outsl
rep
fsubp
cmp
add
xchg
popf
jbe
in
mov
add
dec
inc
jg
push
push
push
sbb
xchg
mov
mov
mov
outsl
pop
sbb
scas
add
hlt
ds
lret
mov
mov
popf
fldl
adc
jno
and
mov
sub
jne
adc
xor
andl
xchg
in
xchg
mov
fildll
sbb
cmpsl
lock
ljmp
incl
je
sub
mov
cltd
fwait
mov
pop
mov
pop
les
add
in
dec
mov
mov
popf
pop
cwtl
pop
and
stos
mov
bound
mov
push
push
icebp
test
out
mov
arpl
fcomps
xlat
sub
out
pop
ljmp
out
adc
outsl
fisubs
cmpb
testb
leave
fstl
jns
and
jne
hlt
outsl
mov
loope
hlt
pop
mov
mov
add
aas
cmp
jns
in
mov
shl
rcl
dec
mov
fdivs
xchg
sub
add
cmpsl
pop
mov
mov
jp
ficoms
jp
fmul
lock
push
cld
sti
aam
dec
xor
dec
xchg
xchg
inc
in
mov
mov
pop
rclb
cmp
sub
movsl
sbb
outsl
pop
divb
cmp
mov
and
sbb
es
mov
adc
test
push
decb
xchg
sub
and
lock
pop
mov
jbe
ret
sub
xchg
test
mov
cmp
mov
sub
imul
mov
mov
cmpsb
fisttps
mov
sarb
ljmp
mov
stc
js,pn
adc
inc
repz
push
cltd
fiaddl
aas
xchg
jb
shlb
sbb
dec
sbb
jbe
mov
add
or
mov
or
xchg
pop
cmp
jb
scas
xchg
scas
push
jmp
mov
sub
fwait
cmp
jno
and
stos
xor
nop
into
lods
fisubrs
dec
in
xor
xchg
cmp
push
das
or
fimull
xlat
cmpsl
addb
and
or
lds
xchg
mov
push
or
movsb
pop
scas
push
or
pop
cltd
lds
cwtl
addb
lods
xor
into
stc
inc
test
mov
enter
mov
add
and
cs
test
push
inc
arpl
mov
std
sub
pusha
in
out
or
iret
sarb
icebp
xor
stos
mov
repz
hlt
push
loope
mov
xchg
cli
out
leave
and
outsl
pusha
test
ljmp
add
xor
lret
jo
pushl
cs
xchg
inc
sub
daa
scas
adc
mov
xchg
inc
and
loop
insl
outsl
jb
data16
push
mov
push
pushf
daa
inc
rcrl
xchg
ret
xor
int
jle
les
stos
outsl
loop
mov
push
sub
pop
nop
fsts
push
mov
cld
xchg
js
fldcw
xchg
mov
ljmp
data16
push
sub
cmc
jp
xor
fdivl
jmp
xor
pushf
icebp
xor
inc
incb
sub
aam
repnz
mov
gs
adc
push
inc
mov
xchg
loopne
hlt
addr16
push
adc
stc
mov
movsl
xchg
dec
xor
movsb
push
dec
pop
jmp
out
lret
arpl
pop
insl
jge
inc
cmp
es
lods
mov
mov
jo
stc
cwtl
leave
and
inc
and
lock
xchg
dec
out
pminsw
test
ds
jecxz
or
mov
mov
mov
xor
popa
fisubrl
inc
das
push
les
mov
xor
xor
jge
push
pop
cmpsb
lock
jae
fwait
mov
sahf
mov
pop
sub
cltd
mov
repz
sub
sub
leave
cwtl
and
movsb
inc
sub
out
out
ret
daa
push
stos
cld
inc
fsubl
fimull
lea
loopne
sbb
lds
mov
stc
jnp
inc
xor
mov
ljmp
into
mov
and
xchg
lods
adc
mull
xor
out
test
lock
xchg
jnp
ljmp
test
pop
int3
mov
jno
in
xlat
jge
cli
sbb
cli
sub
mov
dec
xchg
mov
loop
add
sahf
lcall
mov
js
push
iret
lahf
cs
mov
sbb
push
push
jae
jmp
jg
jle
loop
adc
adc
mov
fldt
aam
int
mov
sbb
cmc
sahf
lcall
xor
mov
popa
out
lock
stc
rcr
push
cltd
cltd
jmp
xor
mov
xor
decb
sbb
test
clc
test
js
mov
jae
sub
mov
fistpl
inc
mov
jo
cld
jl
sub
jge
jge
loope
incl
bound
push
ret
nop
mov
rorl
cmp
mov
xor
mov
sbb
inc
adc
shll
adc
dec
jg
jg
subb
jmp
pop
jo
sub
jl
push
push
jl
aad
fiadds
scas
xchg
loop
cli
fcmovnb
test
mov
push
int
sahf
mov
and
mov
mov
call
pop
fildl
push
mov
shrl
in
sbb
scas
jp
lret
lock
xchg
mov
mov
jno
push
sbbb
sbb
jle
mov
mov
sub
mov
cmp
and
xchg
jne
push
fwait
sbb
jbe
in
in
shl
or
pop
roll
std
daa
es
pushf
jmp
out
scas
insb
inc
mov
pushfw
push
mov
and
dec
es
sub
insb
jae
addr16
imul
ja
out
pop
loop
lea
sub
inc
mov
sub
push
or
xchg
sub
mov
ret
mov
arpl
fnstenv
shrl
or
stc
xchg
dec
mov
stc
fisttpll
outsb
xchg
mul
or
mov
jp
leave
je
xchg
dec
hlt
pusha
fsubr
mov
jno
out
mov
incb
jne
out
sbb
imul
sub
dec
jns
cltd
dec
mov
pop
pop
adc
inc
pop
push
sbb
pop
rorb
gs
mov
sbb
jg
pop
subb
ljmp
pop
into
ss
mov
jne
mov
jl
fwait
das
xchg
mov
popf
fsubrl
mov
add
xor
in
leave
psrlq
adc
dec
jle
cli
in
mov
aad
daa
test
inc
sub
mov
inc
shll
pop
push
mov
outsb
push
pop
insb
mov
fwait
ljmp
cmpsb
aaa
mov
jo
sub
test
jno
ret
sub
jno
xor
cmpsl
pop
jae
js
and
adc
add
mov
sub
sub
aam
or
mov
adc
xchg
dec
daa
jne
add
dec
mov
ficomps
pushf
aam
and
sarb
shrb
call
lret
add
test
std
push
add
clc
jb
mov
inc
sub
std
lods
xchg
sar
push
lea
jne
ret
add
sarl
dec
inc
insl
mov
push
loope
add
test
testb
inc
lret
nop
dec
rolb
cmpsb
jecxz
xor
or
or
sbb
shll
sub
sbb
mov
addb
aas
vmread
inc
sbb
mov
stos
fistpll
movsb
mov
mov
adc
in
push
or
mov
cmp
hlt
dec
cwtl
sub
cmc
add
xchg
lock
adc
and
repnz
imul
ret
mov
xchg
mov
mov
push
int3
fistpll
and
jecxz
push
mov
or
insb
pop
iret
enter
fwait
mov
jnp
sbb
dec
and
cltd
jl
or
push
in
mov
stc
pop
dec
dec
std
sbb
adc
mov
sbb
cld
mov
dec
mov
or
xor
imul
add
pop
loop
adc
in
repnz
jne
and
out
aas
loope
mov
cs
dec
mov
cs
push
lea
aad
test
insb
mov
fmuls
mov
xchg
inc
dec
and
mov
inc
mov
mov
cwtl
int3
and
jge
cmpsb
jp
inc
fwait
lods
sub
bswap
out
adc
xchg
int
idivl
fidivrl
sahf
lcall
add
mov
xchg
or
jo
lock
dec
repnz
cmp
outsl
sub
out
and
sbb
mov
xor
inc
inc
lahf
inc
xchg
fbstp
imul
js
hlt
or
movb
sbb
xor
imul
clc
ret
lret
inc
lcall
cli
fldenv
enter
hlt
rcrb
and
or
iret
push
push
popf
fsubrl
nop
mov
mov
stos
inc
ds
aas
sar
dec
mov
cmp
aam
aaa
inc
jp
mov
lret
dec
test
push
ficomps
into
xor
fnstsw
jge
hlt
leave
xor
ss
pop
lcall
jno
or
mov
faddl
cltd
push
mov
sahf
in
push
int
lock
sub
mov
push
inc
mov
inc
add
imul
je
adc
negb
iret
jae
dec
iret
sti
and
mov
shlb
mov
sbb
sbb
xlat
cmc
cwtl
mov
cmpsb
push
jle
xor
mov
sbb
lcall
ret
ja
mov
int
pop
enter
stc
and
mov
leave
adc
sbb
ret
jnp
mov
jo
push
sbb
out
dec
xlat
dec
inc
push
nop
jle
loop
out
cmp
das
aam
fcom
sbb
push
inc
xchg
bound
dec
lods
jl
cli
xchg
sub
inc
pop
xchg
dec
bswap
or
pop
adc
lret
push
cmp
in
sarl
adc
lahf
add
leave
pop
mov
sbb
push
mov
mov
sahf
inc
mov
test
in
lods
xchg
outsl
daa
cmp
sub
dec
or
shrb
push
pop
repz
mov
stos
push
and
cs
adc
lahf
ljmp
lods
shll
push
fwait
adc
xchg
xlat
sub
dec
pop
pusha
adc
int
and
pop
or
and
lods
pop
xchg
dec
fstps
ret
dec
sub
or
mov
sarl
or
lcall
sbb
fimuls
and
bswap
adc
pop
jl
mov
cld
daa
jae
rcrl
inc
xchg
scas
test
ja
mov
mov
outsl
negl
test
jo
jo
sbb
and
push
inc
add
mov
adc
in
dec
inc
ds
iret
lret
xchg
cli
sbb
cmp
movsl
and
sub
into
pop
lret
mov
mov
icebp
pop
arpl
mov
or
movsl
pop
int3
es
lret
aaa
fisubl
mov
clc
int
aas
stc
push
xchg
push
xchg
xchg
xchg
aas
xchg
sbb
arpl
fldt
pop
daa
je
dec
push
pop
cmp
ds
popa
enter
shrl
inc
insb
dec
sbb
push
aas
push
and
sub
addb
ljmp
gs
es
push
outsl
adc
jl
dec
xchg
jnp
lcallw
sbb
cmp
mov
das
add
xor
je
or
mov
pop
jecxz
xchg
test
sub
popf
lods
mov
dec
xor
js
add
or
sub
cmp
pushf
cmp
xchg
and
push
outsb
das
cmp
mov
ds
xor
stos
stc
je
mov
pop
loop
es
jge
jns
out
mov
sub
push
mov
ss
ret
or
lcall
pop
dec
roll
jg
mov
loope
add
mov
push
ret
push
and
jnp
xchg
enter
and
adc
mov
andb
mov
pop
test
imul
pop
mov
js
push
lcall
mov
lods
jg
das
outsb
in
and
arpl
mov
sbbb
arpl
clc
xchg
sarb
imul
test
and
inc
repnz
dec
dec
or
icebp
sahf
inc
pushf
push
xchg
aas
ret
gs
faddl
jae
mulb
js
loopne
or
xor
mov
rep
add
les
fisubs
in
jnp
sbb
out
leave
mov
out
xchg
aas
xchg
pushf
cmpsl
fucom
push
lods
loop
adc
mov
jg
outsb
sbbl
insl
xchg
xchg
xchg
mov
jge
repz
js
stos
jp
cmc
or
dec
or
pop
jns
lcall
jmp
cmpsl
mov
push
icebp
test
xor
mov
popa
xor
mov
mov
mov
push
popl
jnp
add
testb
dec
clc
roll
mov
sub
push
or
xchg
lret
lock
mov
aad
push
into
xchg
daa
sahf
scas
dec
push
xchg
add
mov
paddsb
in
sarb
inc
add
cmp
push
faddl
jne
pop
mov
and
stos
repnz
adc
mov
sahf
xchg
jnp
inc
mov
int3
pop
test
mov
mov
std
andl
mov
cmp
rolb
dec
insb
mov
leave
in
jb
imul
in
mov
nop
and
sti
sub
sahf
and
fstpt
adc
inc
adc
dec
loopne
push
fisttpll
aam
mov
cmp
xchg
pop
sbbb
jne
fldenv
and
shll
inc
sahf
and
dec
sarb
cmpsl
adc
das
push
jecxz
add
insb
int
cld
aas
je
out
push
cmp
jecxz
cld
inc
andb
fwait
pop
mov
xchg
mov
sub
rcrl
es
cld
fsub
cmp
or
vmovddup
or
fsubrl
fwait
mov
xchg
je
shll
adc
fwait
jecxz
pushf
ja
out
inc
hlt
push
jae
out
cmpsl
jge
fimull
xchg
fsubr
lcall
insl
enter
and
xchg
mov
sbb
push
pushf
push
jg
mov
imul
lea
stos
jle
mov
imul
arpl
cmpsb
sbb
loopne
in
push
in
aaa
dec
test
mov
sahf
divb
pminsw
loop
stc
mov
cmp
in
stos
incb
out
rolb
pop
inc
or
insl
addr16
testb
cmpsl
jle
xor
push
ret
jp
adc
scas
ds
push
xor
or
test
test
in
test
sub
jno
adc
mov
addr16
jo
mov
inc
in
add
loope
xchg
dec
leave
sbb
xchg
jne
sbb
test
or
mov
insb
rcrl
repnz
es
cmc
xchg
xchg
dec
dec
add
ljmp
push
mov
mov
jge
push
cmp
lods
mov
or
and
icebp
popa
stos
mov
cmpsl
adc
push
mov
in
repnz
adc
push
ret
pop
aad
nop
enter
add
inc
sti
and
mov
adc
xchg
gs
inc
loop
sub
cmpb
cmpsl
scas
jg
and
lcall
inc
xor
rcrb
lods
sarl
mov
mov
push
mov
cmp
mov
lcall
jo
jae
mov
or
shrb
lods
mov
mov
dec
lock
pop
or
add
lahf
jno
mov
dec
xchg
into
adc
daa
into
add
test
repnz
test
add
xor
sbb
movsl
cmp
or
pushf
movsb
mov
outsb
repz
mov
cmp
pushf
inc
stos
pusha
insb
sbb
push
or
imul
inc
mov
repnz
pop
in
lods
cltd
fs
lds
stos
ss
aad
push
jns
mov
push
mov
inc
jno
adc
add
mov
cmpb
sbb
ljmp
adc
inc
fiadds
cld
jbe
sahf
and
scas
push
pop
sub
dec
xchg
sarb
in
cmp
test
das
movsl
and
jle
bound
cmpsl
sbb
shrl
aas
ret
or
push
int3
cs
pop
imulb
or
repz
in
mov
or
pop
cmpsb
je
pushf
mov
or
js
add
pop
or
xchg
fimull
loop
negl
sub
nop
dec
arpl
add
or
notl
lret
stos
jp
outsl
adc
sarb
jns
movsl
adc
idivb
push
xchg
xchg
jl
mov
fcoms
ficomps
nop
les
sub
popa
pop
bound
pop
int3
mov
std
fimuls
or
pusha
mov
lods
adc
sbbb
stc
mov
cli
and
insb
outsl
xlat
aam
ljmp
arpl
icebp
loopne
enter
icebp
xchg
sahf
xor
jmp
out
adc
push
lods
fisubl
mov
orb
and
scas
jbe
sub
pushf
add
pusha
repz
or
sbb
mov
lock
mov
lods
je
and
adc
pop
test
xchg
dec
lea
lcall
mov
xchg
xlat
mov
add
jg
lea
in
push
loop
add
mov
ret
mov
aam
das
cld
jecxz
insl
addl
jmp
and
pop
outsl
movsb
xchg
out
cmp
pop
or
or
cmp
inc
inc
mov
inc
add
imul
xor
ds
test
iret
or
mov
setle
pop
test
adc
add
mov
out
xor
cmp
cmp
sub
pop
adc
repz
fbld
leave
inc
icebp
cltd
inc
repnz
mov
fldl
sbbb
sarl
xchg
sbb
out
jnp
and
add
data16
inc
test
sub
aas
dec
or
bound
test
sub
icebp
add
push
stos
loope
jl
cmp
cmp
pusha
mov
shrb
and
jg
sbb
inc
daa
push
clc
jb
pop
xchg
inc
sub
xchg
cs
mov
push
adc
mov
ss
push
jno
dec
lret
sbb
jmp
sub
out
stc
cmp
inc
dec
mov
xchg
inc
xchg
and
xchg
dec
or
fwait
sarl
aaa
es
lret
test
adc
mov
push
cwtl
out
cltd
or
or
in
cltd
xchg
test
push
arpl
movsb
pop
or
arpl
mov
pusha
in
cli
adc
pop
jnp
sub
test
ret
ss
or
sbb
xlat
dec
xchg
outsb
mov
aad
and
leave
mov
pop
push
push
inc
push
mov
mov
das
mov
fwait
and
fcomp
mov
ret
movsb
das
fcmovnbe
dec
rorl
inc
addr16
pop
push
inc
mov
lea
stc
addr16
dec
imul
in
and
cmp
cwtl
psllw
sbb
js
inc
std
push
ret
cs
mov
vpmaxsb
xchg
loopne
sub
popa
mov
and
mov
test
fsubrl
lds
pop
popa
or
ss
inc
sbb
push
pushf
xor
xor
cmp
dec
push
sub
sti
xchg
into
or
lea
mov
movsb
sbb
dec
xchg
mov
fidivs
or
mov
cmpsb
gs
sbb
loopne
out
cltd
pop
in
gs
sarl
and
ja
pop
data16
ss
stos
pop
test
mov
xor
mov
jo
push
test
shlb
push
add
pushf
push
repnz
mov
fstps
sbb
dec
mov
nop
rorb
xor
push
push
into
test
jb
data16
pop
ljmp
add
mov
outsl
in
or
movsb
xchg
in
push
ss
add
enter
add
push
dec
daa
inc
je
jb
inc
cmp
push
sbb
scas
js
mov
stc
sbb
or
clc
je
and
sub
lock
mov
in
call
mov
push
bound
lcall
lret
movl
dec
xorb
pop
xor
jecxz
jmp
mull
push
pop
sub
imul
pop
orb
iret
cld
adc
dec
lea
inc
nop
push
mov
rolb
in
les
into
cmp
test
mov
mov
mov
xchg
stc
mov
and
fdivr
stos
add
and
jl
cltd
int
std
out
adc
xchg
ret
popf
cmp
mull
sub
mov
fmull
push
adc
mov
inc
add
in
dec
dec
xchg
cwtl
test
in
or
and
cld
jbe
jle
push
pushw
push
and
pop
add
aad
add
lcall
xchg
js
vcvtss2sd
in
clc
mull
negl
sbb
sbbb
dec
shlb
cli
inc
orl
lahf
push
out
rol
xchg
mov
cmp
jecxz
mov
cltd
sub
movsl
lods
mov
lcall
iret
and
femms
adc
jle
outsb
add
dec
cmp
push
push
sub
aaa
or
stos
push
and
mov
fstl
or
cmp
int3
js
xor
dec
ret
mov
cli
cld
add
sbb
push
cmp
mov
int
xor
xorl
mov
nop
in
lcall
xor
and
out
lods
adcb
pop
cmp
jae
fistpl
subl
out
in
xor
push
mov
mov
pop
mov
push
mov
shll
mov
js
mov
xchg
insb
xor
mov
pushf
add
pop
push
cld
es
push
dec
mov
iret
adc
inc
mov
les
inc
iret
scas
daa
jbe
loopne
add
ss
jle
dec
mov
addr16
pop
subl
cmpsb
out
adc
pop
jae
xor
gs
mov
mov
sub
mov
xor
cld
sbb
ficompl
iret
icebp
loopne
push
les
ret
or
and
dec
icebp
scas
gs
jp
mov
pop
roll
sbb
sub
sbb
xchg
sub
mov
cmp
adc
lods
pop
addr16
jle
test
adc
andl
fstpt
inc
mov
xor
pop
jp
stos
adc
pop
sbb
sub
lds
jb
or
pop
mov
in
sub
mov
ret
in
movsb
dec
push
out
sbb
loop
sub
sub
mov
adc
jl
orb
dec
xchg
sbb
push
dec
movsb
mov
mov
adc
sbb
loope
or
or
mov
imul
inc
les
xor
leave
in
sub
aaa
pop
in
push
pop
in
xchg
fdivs
push
popf
xor
add
cld
cltd
cmp
dec
xorb
inc
clc
adc
lahf
push
sub
loope
aad
lret
push
mov
cmp
loope
aam
repz
insl
in
popa
sbb
mov
ficompl
inc
mov
sub
cmp
sti
pop
insb
cs
test
fisubl
mov
stc
pusha
sbb
les
stos
out
jge
outsl
mov
test
nop
push
adc
or
out
test
fcoms
mov
adc
mov
xor
aaa
in
mov
push
test
fsubrl
xchg
fimuls
lea
fdivrp
mov
sbb
lds
cmovp
cmp
andl
clc
lahf
mov
xchg
cmp
mov
movsl
jge
subb
lock
push
mov
or
xor
adc
jno
and
sbb
adc
inc
jg
sub
jle
inc
ja
cmp
inc
jbe
sub
addr16
sbb
xor
dec
bound
add
and
push
xor
adc
push
jo
inc
and
cmp
insb
adc
mov
lds
push
addr16
popa
cmpsl
xchg
shrb
neg
roll
mov
xor
cmp
mov
sub
cmpsb
jno
cmp
pop
xchg
rorl
push
scas
inc
sub
and
ret
clc
pusha
lret
push
cs
pop
mov
int
sbbl
sub
loopne
leave
les
add
mov
mov
je
es
dec
lahf
dec
fcmovnb
sub
ljmp
push
ret
dec
in
andb
nop
cld
scas
mov
mov
jno
jge
mov
test
sub
xchg
pop
test
fimull
pop
pop
int3
xchg
or
lock
arpl
sub
xchg
jae
inc
loope
add
push
jns
dec
jmp
je
dec
ljmp
xchg
in
mov
inc
jg
sahf
jecxz
mov
inc
jle
popf
cld
mov
fs
adc
popa
pop
adc
lcall
stos
cltd
mov
sbb
addr16
sbb
pop
sbb
arpl
test
mov
inc
xor
int3
sub
xor
dec
xlat
lods
mov
aas
inc
pop
inc
aam
sbb
lea
jne
das
mov
cmp
out
jle
or
leave
bound
pop
ds
shl
outsb
cmp
ds
ret
push
add
mov
jecxz
push
push
aas
and
sbb
and
sbb
cs
jmp
push
adc
jmp
es
into
out
push
adc
and
push
das
dec
jecxz
test
push
pop
xorb
out
imul
cltd
pop
sub
fwait
pop
sub
popf
pop
sub
lahf
pop
sub
xchg
push
sub
xchg
push
sub
xchg
push
sub
xchg
push
sub
mov
popl
sub
lea
popl
dec
sub
addl
cmpl
js
iret
cmc
aaa
daa
cmpl
imul
mov
imul
mov
imul
mov
imul
mov
imul
test
imul
stos
push
std
sbb
xchg
push
insb
dec
in
cmp
pusha
leave
or
loopne
xor
mov
pop
jl
sbb
mov
ret
mov
out
push
xchg
out
push
sbb
cmpsl
mov
pop
pop
jecxz
or
loope
imul
pushf
jns
daa
int3
sbb
fwait
mov
addb
cmp
mov
int
enter
add
imul
insl
sub
or
std
sub
stos
sub
in
insb
clc
sub
hlt
fstpt
mov
mov
enter
rorl
ds
mov
rcrl
mov
jb
adc
or
aam
cmp
lods
ficomps
lret
add
push
cs
cmp
push
loop
add
loope
in
jns
lahf
mov
movsb
loope
jl
pusha
dec
repz
sti
push
and
dec
mov
sbb
outsb
pop
lret
cmpsl
imul
out
loope
fldenv
jecxz
dec
aad
xchg
adc
idivl
stc
es
push
push
es
bound
shr
cwtl
ljmp
jmp
fildl
xchg
ljmp
xchg
xlat
enter
pop
sub
imul
sub
cmp
jns
aaa
lcall
aaa
xchg
lret
push
or
mov
fimull
movsb
out
rcr
add
adc
scas
xchg
sub
lea
pusha
lds
push
add
jmp
int3
imul
pop
or
ja
jo
xchg
mov
push
lock
loope
dec
jno
push
lock
ja
push
lock
dec
jne
push
lock
jmp
dec
jnp
push
lock
jmp
push
lock
dec
jg
push
lock
dec
jge
push
lock
lret
outsb
inc
insb
push
lock
push
hlt
fnsave
enter
test
xchg
aam
test
mov
out
or
inc
jnp
das
lds
scas
sar
add
pop
cmp
mov
push
or
les
adc
aam
fcmovbe
imul
inc
in
push
pop
leave
nop
mov
lret
xchg
dec
push
pop
int
mov
fcompl
inc
rolb
dec
ret
xor
lds
das
scas
pop
mov
int
faddl
xchg
out
outsl
xchg
jo
mov
in
insl
xchg
jo
ja
rcll
dec
push
mov
rcll
dec
xor
mov
sarb
enter
stc
inc
cmpsb
dec
int
fmull
and
hlt
gs
push
xlat
or
jno
adc
push
ja
or
mov
stos
hlt
dec
ja
lods
outsb
aad
add
stos
hlt
scas
xchg
sbb
mov
pop
lods
xchg
sbb
orb
cwtl
and
outsl
into
sub
jl
mov
call
jmp
dec
adc
xchg
repz
pusha
rclb
arpl
push
xchg
push
xchg
pop
addr16
push
imul
mov
push
xchg
pop
adc
addr16
add
hlt
pusha
inc
fst
dec
xor
stc
mov
push
pop
adc
idiv
mov
cmc
cld
cld
ror
stos
lock
mov
mov
into
jle
add
dec
aaa
sub
jns
xor
cs
ja
push
dec
aaa
inc
pop
rol
mov
adcb
enter
je
jp
adc
ja
imul
cmp
jns
or
jb
add
adc
jl
or
jge
or
jle
lahf
pop
mov
movsl
pop
and
sti
sarb
add
aaa
mov
leave
mov
fcom
movsb
int
lods
dec
lock
or
jbe
icebp
stos
mov
xor
lret
hlt
sti
mov
rcrb
out
mov
add
int3
mov
dec
jmp
xor
aaa
xchg
mov
enter
push
repnz
cmc
mov
loopne
sti
stos
or
adc
lret
add
dec
ss
push
daa
pop
push
pop
test
mov
push
or
shr
sahf
out
sub
jne
fsubl
lods
mov
jl
add
mov
mov
scas
xor
stos
pop
mov
std
pop
test
out
dec
hlt
push
fisubl
mov
mov
cmp
loopne
ss
cs
xor
add
cmp
inc
xor
sub
int3
xlat
fisubrl
sbb
scas
mov
mov
sti
idivb
arpl
mul
out
cmp
jbe
jb
dec
sbb
jge
pushf
add
ss
jae
mov
push
mov
subb
jle
ljmp
das
jmp
das
arpl
jmp
sub
mov
das
jmp
and
jmp
daa
imul
clc
mov
aaa
and
mov
aaa
cmp
leave
les
bswap
mov
aaa
aas
jae
leave
rorb
ret
aaa
xor
leave
int3
xor
xor
xlat
mov
dec
lcall
mov
aam
das
mov
shlb
sub
cld
aam
and
push
push
lods
cmc
adc
mov
xor
inc
lds
add
lods
mov
or
ret
int3
mov
test
inc
sub
mov
fs
inc
sub
mov
push
ret
mov
push
les
and
mov
insb
pop
inc
and
mov
adc
addb
repz
stc
gs
sbb
gs
pop
imul
push
gs
adc
lcall
in
stc
sbb
notb
gs
pop
imul
push
gs
or
out
gs
or
loope
gs
or
gs
packssdw
in
push
gs
add
out
or
loop
push
imul
or
fstpt
sub
cmp
lods
xchg
jne
loop
cmp
lods
nop
jae
loop
sub
xor
lods
pushf
jg
loop
xor
lods
sahf
jge
loop
xor
lods
cwtl
jnp
loop
sub
lods
test
loop
sub
lods
xchg
loop
sub
lods
andb
int
sub
and
lods
mov
loop
cli
cwtl
pop
and
and
cltd
sti
fwait
pop
and
loop
jge
pushf
jecxz
gs
jg
pushf
in
push
gs
jno
pushf
out
or
loop
jae
pushf
jmp
jne
pushf
jmp
gs
ja
pushf
cmc
push
add
pushf
notl
pushf
icebp
adc
pushf
repz
pushf
std
push
add
pushf
lcall
pushf
stc
sbb
pushf
sti
sbb
pushf
test
loop
sbb
pushf
xchg
clc
sbb
pushf
andl
pushf
andl
cld
pop
sbb
adc
pushf
insb
gs
adc
pushf
mov
loop
adc
gs
pop
sbb
sub
pushf
xchg
je
ret
sbb
mov
adc
inc
lds
stos
and
pop
js
sahf
inc
js
jno
lcall
push
dec
pop
mov
es
jne
cmp
mov
sub
mov
outsb
test
std
sbb
cmpsb
sbb
mov
add
inc
in
push
and
adc
and
adc
bound
movsb
test
es
gs
pop
mov
lret
dec
mov
sub
mov
mov
testb
dec
jne
addr16
sub
outsb
shlb
jp
jne
xchg
in
out
aam
in
cltd
fsts
stos
loop
pop
pop
dec
std
and
clc
cli
fidivl
sub
movsl
mov
test
orb
pop
sub
inc
and
icebp
cmp
mov
and
sub
std
aas
xchg
sti
repnz
push
sub
mov
clc
inc
or
loope
movsb
jp
rcrl
xor
gs
inc
inc
mov
lods
gs
and
add
scas
fsubrs
lahf
pop
jmp
inc
push
mov
pop
or
jp
sbb
iret
jae
mov
mov
scas
loop
shrl
daa
cs
popf
stos
jbe
sbbl
es
jle
je
xchg
insl
stc
out
iret
jg
out
add
inc
pop
test
push
add
mov
xor
iret
inc
xchg
and
mov
sbb
jmp
xchg
divb
popa
sub
push
out
fmull
pop
push
clc
sub
sti
xor
outsl
mov
mov
movsl
in
arpl
and
inc
mov
add
xor
xchg
xor
js
sbb
popf
mov
xor
test
push
xchg
pop
mov
repz
adc
cmp
jb
mul
and
out
add
ljmp
sti
push
stc
pop
jecxz
push
in
inc
out
out
and
in
sbb
cld
or
sbb
lods
into
xor
inc
lret
xor
or
int3
jmp
mov
sti
sub
shl
dec
cmp
inc
jmp
jmp
sub
lcall
dec
ret
lret
dec
xchg
and
movb
dec
push
sahf
inc
xor
xchg
cs
call
pop
outsb
mov
xlat
mov
inc
or
add
or
cmp
cmp
call
lret
daa
loopne
and
aad
and
out
adc
pop
xchg
sub
aam
out
sub
pop
aam
xchg
inc
out
arpl
jmp
mov
mov
or
inc
push
pop
mov
sbb
push
mov
mov
in
roll
mov
dec
dec
xchg
inc
adc
pusha
mov
hlt
inc
mov
mov
or
xchg
pop
pop
pusha
sbb
les
cwtl
inc
pop
push
add
push
fnop
cmp
xchg
push
cmc
mov
fisubrs
js
sub
test
dec
mov
int3
je
adcl
ret
pop
sub
push
cmpsb
adc
inc
sub
lock
xor
xchg
int
push
xchg
shll
pop
out
daa
adc
mov
fistpl
sbbb
popf
dec
into
mov
out
xor
lcall
fistps
jle
mov
repz
dec
dec
add
test
inc
ljmp
je
in
ss
push
push
fldcw
mov
mov
sub
lea
into
inc
addr16
mov
add
es
ljmp
and
sbb
xor
xor
loopne
bound
repnz
aas
pop
int
pop
and
and
add
sahf
test
xor
xchg
xor
jo
sub
les
rorl
out
cmc
lock
call
popa
loop
mov
mov
mov
jae
or
push
mov
adc
pusha
aad
stos
add
xor
adcl
jnp
adc
xor
mov
mov
movsb
js
loope
mov
xor
cmp
sbb
lea
mov
das
loope
push
inc
mov
xor
xchg
jmp
add
push
aam
mov
mov
or
adcl
push
ss
icebp
xchg
cmp
cmp
cltd
jle
jg
cmpsb
mov
cmpsl
mov
and
add
icebp
loope
js
dec
xchg
ja
fwait
imul
mov
xor
mov
in
push
subl
mov
stos
cwtl
pop
jp
outsb
mov
adc
pop
cwtl
mov
adc
cwtl
aas
add
out
push
mov
mov
add
ret
sbb
pushf
dec
mov
cmp
jmp
xchg
mov
pushf
arpl
aaa
dec
movsb
add
push
shrb
fmul
test
adc
lcall
adc
cwtl
in
cs
or
xchg
adc
or
pop
lock
mov
add
push
xor
subb
popa
sti
loope
mov
fsubl
sub
out
pop
out
cwtl
push
cli
jns
push
mov
cmp
and
outsl
aad
addr16
adc
add
mov
jecxz
iret
scas
xor
or
out
adcl
xchg
and
cmpb
ret
push
scas
push
int3
jo
hlt
je
roll
in
adc
lret
mov
loop
adc
xor
aas
push
xchg
mov
jmp
repnz
rcr
inc
lret
stc
loope
fdivr
mov
inc
mov
inc
xorl
dec
stos
mov
cmpsb
dec
push
bound
jp
imul
jno
xchg
test
sub
or
ficoms
add
outsl
jbe
out
jge
push
dec
mov
mov
pop
adc
gs
dec
in
sbb
subb
cmp
mov
adc
out
addr16
add
sub
psubw
ss
adc
loop
cmpsl
shll
cmp
inc
push
push
cmpsb
out
adc
hlt
mov
in
shlb
mov
xor
cmp
popa
inc
jo
inc
xor
fwait
mov
dec
lods
xchg
das
mov
jecxz
ljmp
cli
pop
hlt
add
arpl
or
jns
push
rclb
loopne
es
sbbb
enter
push
fwait
aas
sub
lods
inc
cmp
or
jno
fidivrl
loope
sbbb
mov
out
rclb
jnp
mov
int3
fidivs
in
jp
pop
les
or
mov
mov
and
mov
mov
enter
daa
fcoms
add
lret
pop
mov
xchg
adc
sub
sbb
jne
icebp
fstpl
stos
ljmp
push
inc
xchg
fsubrs
and
xor
lods
push
sahf
xchg
repz
mov
jmp
and
mov
scas
inc
xor
mov
das
and
outsl
jb
insb
in
cmp
fsubrl
int3
jne
leave
test
add
aas
xor
cmp
cwtl
in
sbb
mov
xor
cmp
cmpsl
xor
test
lea
jns
mov
inc
lret
xchg
out
int
xchg
mov
push
ja
dec
and
jno
sub
popa
jo
cltd
mov
inc
fdivr
sbb
sbb
out
insb
jp
hlt
cmp
cmp
jne
fsubr
and
lods
add
pop
aas
xchg
xchg
cmp
and
lods
mov
and
loope
xchg
mov
inc
and
push
pop
jle
mov
inc
dec
int
stc
fildll
fdivp
sub
xlat
adc
out
cmp
push
repz
xor
out
addr16
in
bnd
lret
fwait
adc
inc
sbb
out
push
mov
xchg
mov
cmp
lods
mov
popa
ss
ljmp
add
sub
or
lcall
into
xchg
push
lahf
fwait
dec
pop
xor
fistl
mov
pushf
lea
sbb
inc
or
jl
jmp
and
repz
sbb
inc
or
psrld
shlb
loopne
dec
inc
movsl
lds
pop
subl
xchg
lcall
enter
cmp
push
pop
inc
inc
add
in
sbb
es
dec
push
adcl
mov
and
sbb
cmpsb
cmp
push
pop
stos
push
jge
or
or
out
push
shll
pop
cli
lods
add
aam
test
jne
mov
push
out
sbb
dec
xlat
aad
xchg
add
test
movsl
jne
fcmovu
jnp
dec
testl
lock
push
pop
xchg
dec
daa
jg
fldt
jecxz
mov
push
das
arpl
mov
push
mov
xor
aas
and
xchg
or
pop
jnp
lret
repz
adc
fldl
xor
push
rep
xchg
push
mov
lret
mov
inc
and
in
mov
or
ja
fsub
sub
and
or
dec
dec
mov
mov
pushf
push
cmpsb
jbe
inc
rcll
and
sub
shrl
fwait
imul
incb
or
cmc
inc
fstp
sbb
jbe
pop
insb
test
aad
cmp
cmpsb
pop
dec
stos
lods
or
lods
fisubs
push
daa
fsubs
lcall
and
insl
xchg
inc
ficompl
pop
mov
jl
mov
mov
out
push
clc
in
cmp
jo
mov
test
sub
mov
or
mov
pop
lods
lods
lods
pop
dec
add
dec
mov
push
fimull
dec
test
xchg
test
dec
imul
jg
mov
notl
mov
cwtl
mov
xorl
add
xlat
pusha
cmc
jne
pop
popa
loope
xchg
push
or
inc
fsubrl
pop
enter
leave
mov
sahf
jae
les
call
mov
jnp
dec
dec
dec
mov
jg
and
loope
pop
add
test
cmc
lea
dec
pop
adc
jne
cmc
cs
repz
test
mov
jb
std
dec
inc
mov
pop
test
mov
mov
xchg
push
mov
xor
dec
and
xlat
test
call
push
and
insb
addb
cwtl
and
sbb
jno
out
pop
mov
sbb
cli
mov
mov
jge
sbb
add
mov
sti
jp
ss
insl
jne
je
dec
or
cmp
xchg
xorl
pop
movsb
enter
adc
test
andb
inc
fldenv
cmc
mov
aas
rcll
xor
xchg
or
xchg
out
pop
repnz
mov
pop
and
test
adc
xor
jb
dec
pop
sti
icebp
sub
stos
daa
mov
lods
cmp
cwtl
stos
stc
in
xor
in
shll
mov
out
and
xor
cmp
mov
aad
outsl
icebp
sbbb
jmp
xlat
pop
push
xor
std
mov
adc
dec
jp
jmp
mov
aad
insb
lods
push
adc
inc
mov
pop
orb
jmp
sbbb
or
sub
leave
jge
sub
out
push
dec
mov
ret
sbb
sub
outsl
cmp
test
or
in
cmp
inc
cmp
idivb
adc
loopne
fcoms
orb
pop
fdivr
push
adc
or
mov
cmc
dec
dec
xchg
std
pop
mov
cmp
pop
and
popf
or
jl
sub
xor
insl
testl
jge
movsl
aaa
dec
adc
in
jne
push
sbb
lods
insb
add
jno
call
sub
and
je
out
dec
xor
pop
mov
xor
movsb
cmp
sub
sub
sub
mov
outsb
xchg
sbb
jle
out
pop
add
mov
push
or
ficomps
or
std
mov
fildll
ss
xchg
cmp
in
jnp
addr16
jecxz
iret
stos
inc
cmpsl
data16
mov
jecxz
mov
mov
fmul
mov
pop
popa
scas
fwait
inc
add
aad
cmpsl
pop
outsb
add
lret
ret
sbb
mov
mov
mov
or
mov
mov
pop
gs
pop
xchg
repz
scas
pop
add
fs
push
pop
or
lcall
ljmp
movsb
das
push
adc
xchg
mov
and
mov
sub
sub
clc
lea
sbb
sbb
enter
cmpsl
movsl
jbe
pop
cmp
test
jecxz
inc
in
push
scas
andps
jnp
jmp
sub
ljmp
mov
ret
sub
mov
inc
inc
xchg
stos
adcl
inc
out
and
inc
test
lcall
loop
int
add
xor
arpl
out
mov
mov
sbb
dec
cmp
sub
pusha
cmp
and
mov
mov
imul
int
xchg
cltd
adcl
das
jns
aam
pop
lds
mov
mov
dec
mov
stc
sub
repnz
sub
and
jecxz
shrl
and
scas
add
insb
mov
pop
xchg
push
mov
clc
xor
push
add
xor
lock
xchg
mov
fildl
pop
pop
push
inc
push
insb
test
out
in
hlt
or
and
mov
mov
jp
loopne
pusha
xor
adc
jmp
mov
call
shrb
cmpsb
pop
inc
and
pop
je
aam
mov
sbb
mov
lcall
jne
inc
data16
mov
test
out
adc
movsb
std
adc
fisttpll
scas
mov
rclb
dec
mov
push
lcall
ds
mov
pop
mov
test
fsubr
shlb
lods
xor
ret
mov
mov
lods
enter
adc
ds
inc
lea
cwtl
popf
push
fnstcw
popf
pop
hlt
inc
dec
shll
in
bound
cmpl
in
test
inc
mov
jno
stos
je
push
and
cmpl
and
or
repz
inc
aam
add
pop
sub
notl
popa
xor
lods
out
xor
pop
and
sub
loope
pusha
sub
mov
and
nop
idiv
push
out
lcall
outsb
adc
repz
rcll
hlt
mov
clc
push
push
lcall
mov
add
pushf
dec
and
mov
ret
jo
xor
lret
jns
sbb
cmp
pop
rorb
pop
lahf
cmp
and
dec
into
aad
fwait
cmp
xor
mov
xchg
dec
dec
adc
mov
cmp
aas
in
pop
push
sub
lcall
mov
add
mov
lods
mov
mov
or
jne
fadds
outsb
cmp
les
add
mov
jnp
xlat
fstps
xchg
sub
ret
xchg
int
addb
mov
rcrl
jmp
jg
addl
mov
not
xor
sub
xchg
dec
into
addr16
push
jne
mov
imul
cmp
test
int
lea
cmp
insl
rcr
mov
out
jne
jp
inc
in
push
setae
out
xchg
or
inc
mov
add
pop
xchg
pushf
dec
fcmovb
stos
cmpsl
mov
sub
push
out
outsb
ds
repz
pop
shll
mov
sub
xchg
jne
cld
push
xor
popa
dec
shl
xor
repz
insb
sbb
ds
pop
test
or
or
dec
push
lods
nop
in
hlt
add
add
mov
xor
or
xor
pop
push
pop
mov
adc
mov
sti
add
xor
test
cmp
fsub
ret
insl
scas
aad
inc
mov
push
popf
das
push
repz
repz
adc
and
test
xchg
sbb
jno
frndint
mov
mov
cmp
xchg
sub
mov
ja
inc
seta
mov
jns
push
movsl
nop
jmp
pop
call
nop
jae
fstpl
xor
sbb
stos
xchg
push
jle
shll
shrb
pop
das
ret
mov
or
inc
mov
xchg
ret
mov
cmp
cmp
mov
pop
out
sub
mov
jg
inc
or
inc
clc
cmpsl
stc
loopne
xchg
aad
push
test
lods
sbb
push
rcll
push
loope
dec
into
mov
movsl
push
mov
push
adc
movsl
or
popf
std
inc
and
repnz
lcall
je
jns
lahf
lahf
cltd
adcl
addb
aaa
mov
add
out
gs
lcall
pop
ret
call
jo
imul
filds
pop
push
push
sub
out
xor
rcll
jl
and
test
xorl
mov
add
test
push
mov
sub
mov
and
inc
fldl
negb
lods
lcall
xor
ret
dec
xchg
add
sahf
or
lahf
lods
sub
scas
push
mov
ds
adc
fcmovne
repnz
out
jae
daa
rep
push
mov
in
outsb
xorl
ja
push
mov
rcr
mov
in
mov
push
pop
and
andb
sub
or
mov
outsb
jl
iret
ffreep
in
in
icebp
pop
sbb
sbbb
sbb
inc
dec
aaa
arpl
xor
jle
adc
insl
repnz
inc
sahf
dec
xor
fsub
mov
loop
push
push
mov
mov
push
sbb
test
loop
or
adc
inc
pusha
or
mov
jp
cs
cmp
popf
adc
jb
inc
arpl
sahf
ss
xchg
mov
mov
xor
insl
and
aad
dec
sti
divb
lds
inc
addr16
mov
push
popf
mov
icebp
scas
inc
andb
mov
int
shrl
aad
gs
fldenv
sub
mov
xor
ljmp
dec
jg
pop
lcall
int
or
push
push
inc
sub
or
add
iret
repz
xchg
outsb
sub
jae
into
cmp
xor
jl
pop
adc
mov
ja,pt
adc
aaa
or
movsl
pop
xchg
lock
pop
fs
jb
ret
pusha
mov
push
popa
adc
xor
and
push
stos
add
adc
imul
mov
pushf
int
subb
out
jge
insl
inc
cli
jns
xor
inc
sub
es
mov
xchg
pop
les
sub
je
mov
sbbb
shlb
inc
js
push
icebp
mov
inc
cmc
xlat
iret
ljmp
dec
cmp
or
cld
lret
mov
inc
add
scas
test
push
cmpsl
ret
addr16
sub
ficomps
nop
inc
dec
pop
jb
out
pop
inc
jp
xchg
bound
scas
push
xchg
out
mov
push
push
xchg
jg
stos
sub
js
mov
call
sub
adc
pop
enter
push
fs
xor
mov
cli
pop
dec
mov
adc
fisttpll
shll
mov
sti
sbb
sbb
fstpl
jbe
cmp
pop
insb
push
push
lods
inc
mov
mov
iret
cmc
sbb
xor
pop
cmp
mov
std
ret
nop
add
mov
or
cmp
test
btc
icebp
rcrb
pop
in
cmp
push
jb
mov
les
push
out
daa
dec
push
mov
loopne
ror
mov
push
pop
cmp
jnp
adc
xchg
movsl
addb
and
std
pop
test
sahf
push
pushf
fs
fs
inc
scas
pop
add
hlt
cmp
and
sbb
add
jnp
mov
repz
cmp
mov
xchg
jnp
push
ret
stos
add
es
jg
add
xchg
dec
xor
movsb
addl
mov
mov
jns
jg
pusha
inc
cld
sahf
ljmp
imul
jmp
lahf
test
mov
jns
enter
dec
lods
or
push
imul
clc
cmp
into
pop
or
dec
cmpsb
push
ja
loopne
mov
leave
js
movsl
or
xchg
lds
xchg
push
movsl
in
mov
jl
stos
mov
ss
cmp
mov
pop
lret
xchg
dec
fidivl
mov
imul
imul
mov
ja
lret
pop
ss
loop
lock
pop
jns
stos
nop
sbb
push
cmpsl
cmp
or
and
and
jmp
decb
pop
jge
dec
mov
jne
icebp
xor
out
or
orb
adc
sub
shll
mov
cmp
adc
flds
insb
cld
scas
scas
mov
fcomi
xor
sub
insl
inc
pushf
lds
xchg
hlt
adc
scas
aaa
pop
adc
mov
adc
jg
ror
daa
hlt
xchg
mov
or
jae
push
insb
ds
lea
insb
push
pop
mov
adc
pop
mov
dec
dec
loop
stos
mov
mov
xchg
in
pushf
jne
out
into
inc
out
call
xor
int
stos
neg
loop
inc
sahf
out
test
cld
out
xchg
outsl
sub
sub
mov
imul
sbb
divb
xor
rorl
sbb
jne
mov
jl
mov
hlt
mov
das
mov
outsl
xchg
in
sarl
mov
pop
mov
and
leave
and
popa
add
adc
lret
ss
xchg
sarl
ja
pop
push
orl
insb
xor
inc
decb
lds
imul
int
fs
or
xchg
and
imul
xchg
adc
and
pop
hlt
cmpsl
push
sti
sub
stos
pop
movsb
sub
ja
fidivs
sub
jo
iret
nop
jne
fcomip
cmp
adc
jne
cmp
adc
adc
test
out
loope
ret
jle
mov
cmpsl
pop
xchg
jp
add
xchg
jmp
mov
xor
or
jmp
enter
daa
push
scas
in
leave
mov
mov
dec
mov
mov
fidivrs
sub
cmpsl
movsb
dec
sub
pop
push
jmp
stos
sti
xchg
jb
jmp
dec
in
jne
lahf
ja
test
push
daa
jno
jg
dec
mov
xchg
dec
jge
call
cmp
stos
inc
sbb
fs
lret
out
out
les
sbb
nop
jg
je
push
xchg
movsb
dec
call
mov
jnp
dec
add
insl
in
mov
out
push
not
imul
dec
cmp
lods
jg
and
dec
dec
xor
pop
pop
je
stos
lods
inc
lret
repz
loop
inc
and
outsb
jns
xchg
dec
sti
sub
sub
sbb
lock
clc
adc
add
mov
aas
cmp
gs
repz
insl
in
dec
mov
test
lret
adc
repnz
xchg
mov
cltd
lret
rcll
mov
clc
mov
cltd
pushf
push
std
mov
push
xlat
mov
push
inc
push
mov
xchg
mov
out
loopne
test
addr16
insl
mov
aaa
mov
int3
clc
mov
cwtl
daa
ds
xchg
cmp
out
mov
cmp
and
sbb
pop
xor
sahf
jmp
in
cmp
in
js
ja
sbb
outsb
jo
push
mov
push
mov
test
arpl
fs
xlat
add
or
test
xchg
cmp
adc
popa
adc
aad
pop
std
aas
mov
jb
fidivl
mov
loop
and
inc
mov
arpl
ffreep
jle
xbegin
mov
mov
jae
dec
aas
inc
jg
ret
and
or
adc
pop
add
out
ror
sub
lods
adc
pushf
nop
inc
mov
push
or
shrl
cwtl
cmp
inc
mov
pand
push
mov
jb
mov
adc
xchg
push
je
jns
pushf
xor
push
jo
pushf
jo
int
xchg
repz
sahf
add
push
loop
mov
mov
subb
outsl
add
addr16
xchg
or
cmp
sub
movd
xchg
sahf
xorb
xchg
cmp
mov
ja
dec
jle
fcmovne
adc
mov
push
pop
xor
aaa
xchg
adc
icebp
xor
test
shlb
mov
leave
jbe
mov
add
mov
es
or
movsb
ja
ficoml
add
or
jg
sub
stc
push
sbb
lret
subb
cmp
rcrb
sub
test
loop
insb
int
loopne
shl
dec
dec
adc
inc
xor
jp
out
enter
fmuls
jle
fldl
shlb
aad
out
subl
cmovnp
cltd
dec
add
jl
cmp
out
les
call
mov
jnp
test
add
cld
xchg
fistl
or
nop
or
dec
jle
sbb
cld
jg
mov
push
stc
and
adc
movb
xor
ljmp
rcll
or
pop
xchg
inc
jmp
subb
stos
xchg
push
repnz
leave
pop
mov
jo
adc
add
ljmp
bound
mov
sub
and
cmp
xchg
or
mov
mov
aad
sbb
cld
mov
into
mov
jno
and
mov
loope
cmpsb
enter
sbb
inc
mov
fstl
out
addr16
loope
push
and
sub
fcmove
and
leave
jge
xor
das
add
je
xlat
cmc
call
or
aas
cmp
mov
xor
decb
adcb
out
andl
sbb
subl
jno
push
dec
insb
and
adc
push
out
call
or
and
aad
dec
push
xchg
pop
scas
pusha
sbb
out
mov
cmc
stc
jno
cmpsl
inc
mov
outsb
stos
dec
adc
jg
out
cmp
cwtl
add
ret
dec
or
das
ja
jne
jmp
ljmp
lret
dec
cmc
push
fcmovnu
xchg
mov
inc
mov
nop
fmull
test
lahf
dec
or
mov
mov
cmp
push
sub
pop
dec
adc
jge
adc
cmp
dec
cmp
fsubrs
mov
rolb
jge
mov
sbb
cmpsl
cmp
test
hlt
mov
ret
sbb
sub
insb
dec
cmp
jb
lret
aaa
push
insb
xchg
lea
rcrl
shrb
fs
inc
dec
pop
jp
decl
mov
bsr
add
jp
mov
mov
ret
mov
movsb
loopne
enter
or
mov
mov
shlb
hlt
inc
scas
subb
xchg
and
iret
fisttps
cmp
test
das
push
int3
pop
sub
pop
je
sbb
xlat
pusha
sub
mov
sbb
dec
imul
cmp
push
leave
andl
fnsave
push
addb
dec
stc
push
nop
add
cld
adc
les
inc
jnp
or
insb
xrelease
or
lcall
fwait
inc
cmp
and
mov
xor
aaa
lcall
out
sub
xchg
pop
sbbb
mov
dec
mov
jae
jns
jnp
dec
imul
nop
inc
mov
add
jle
mov
cwtl
gs
xchg
ja
flds
cltd
pop
mov
cmp
xor
add
stos
lods
jbe
dec
cmp
jl
mov
outsb
arpl
iret
pushf
fmull
xorb
pushf
adc
push
and
ret
bound
push
test
jb
clc
ljmp
sbb
push
cli
insb
sbb
inc
xorb
jns
aam
popf
out
and
pop
mov
ss
mov
add
adc
push
mov
mov
mov
rcrl
cmc
dec
or
adc
or
pmuludq
inc
ljmp
adcl
adc
ds
testl
xchg
dec
mov
cmp
int3
sbb
pushf
sub
cs
insb
push
sti
jle
adc
add
jb
pop
dec
and
jmp
mov
adc
sbb
ja
cmp
pop
pop
cli
cmpsl
insb
push
mov
in
fsubrs
enter
sbb
js
add
mov
cmp
xchg
in
out
inc
inc
or
cltd
dec
jae
push
mov
int3
icebp
or
stos
add
ljmp
sub
scas
mov
mov
js
sahf
xor
bound
push
and
pop
mov
sbb
cmp
aam
mov
ret
movsl
inc
fnsave
jo
ret
fisttps
mov
mov
mov
out
sbb
rcrl
imul
adc
cwtl
xor
mov
cmpsb
lret
mov
cltd
dec
shld
fdivr
lock
iret
jb
sbb
push
or
add
pop
outsl
cmc
pop
xchg
mov
push
push
mov
pop
push
inc
fs
jnp
push
sub
sarb
pop
cld
subl
adc
lea
xor
sbb
push
inc
pop
and
push
inc
jl
mov
ret
inc
mov
jno
fwait
aaa
into
sub
sub
adc
pushf
pop
aas
xchg
dec
adcl
mov
test
push
outsl
test
insb
jg
add
and
fnstsw
xlat
test
repnz
addr16
rcll
push
dec
xchg
out
push
mov
imul
jmp
adc
test
rcr
inc
adc
or
loopne
jmp
fxsave
orl
mov
xchg
enter
fs
jne
push
inc
pusha
sbb
add
push
jmp
nop
sbbl
jbe
jnp
mov
push
jecxz,pn
stos
xor
jns
leave
adc
ss
add
push
xor
cmpsb
adc
clc
ljmp
push
mov
daa
jno
mov
mov
and
aas
xchg
jmp
push
jnp
add
jo
or
imul
repnz
cmc
sbb
or
add
push
cmp
push
sub
sub
cmp
inc
leave
pusha
lea
arpl
sub
stos
mov
fnstenv
and
mov
cmc
add
fisubl
sub
loope,pt
xchg
loope
icebp
gs
outsl
xchg
xchg
cmp
push
popa
int3
jno
shrb
add
mov
mov
out
mov
pop
mov
jns
mov
rol
movsbl
jbe
mov
sub
mov
flds
js
outsl
push
push
mov
cmovb
sbb
sbb
in
ja
aad
lahf
lahf
cltd
jl
push
dec
mov
das
jbe
aad
or
push
into
and
mov
xlat
aam
and
out
loop
loop
in
cmc
stos
push
add
push
loope
push
iret
in
jecxz
cli
mov
nop
jmp
or
lret
pop
mov
mov
sbb
stos
rorl
sub
xor
adc
jle
stc
sub
lea
fsubrs
jecxz
fisubl
ret
inc
adc
dec
ss
jae
fildl
movl
dec
xchg
xchg
jb
xlat
scas
lock
adc
inc
push
sbb
xchg
cmpb
jne
sbb
and
adc
lock
push
jl
jl
out
sti
pop
mov
int
pusha
push
in
xchg
das
pop
mov
add
std
or
mov
movsl
jl
mov
jp
jecxz
clc
sahf
adc
or
test
test
loop
xchg
roll
mov
jecxz
jno
mov
add
adc
cmp
xchg
add
inc
cmp
nopl
sub
leave
mov
dec
sbb
dec
ljmp
dec
pop
jnp
add
push
fwait
repnz
jnp
and
and
jae
push
or
data16
dec
pop
adc
iret
dec
xor
xchg
stc
push
enter
xor
sub
lods
sub
xchg
dec
addl
adc
pop
add
cld
push
hlt
sub
imul
gs
cmpsb
sub
add
jb
call
push
jle
adcb
push
outsl
call
fidivl
sbb
inc
shlb
insb
sbb
leave
mov
fwait
ss
leave
push
cmp
clc
inc
mov
call
stos
clc
loopne
and
int
jbe
ds
xchg
test
cmpsb
call
ret
jbe
add
or
popl
mov
lret
xor
jle
xchg
popa
or
inc
pop
stos
and
and
data16
out
ljmp
dec
jne
popa
clc
mov
mov
cmp
shlb
stos
scas
cmp
pop
jb
sarb
pop
mov
mov
out
pop
out
or
inc
mov
mov
sbb
popf
das
or
in
and
and
imulb
adc
pusha
mov
pop
enter
push
lret
pusha
fcmovne
or
and
fucomip
pop
xchg
push
push
out
test
dec
stc
sbb
xor
outsl
adc
mov
orl
jp
xor
jg
js
loope
mov
roll
mov
xor
pop
sarb
pushf
and
mov
clc
bnd
and
or
jle
mov
ret
jno
mov
test
js
stos
xor
cmc
and
adc
mov
add
repnz
fwait
mov
lods
cmp
mov
lods
pop
cmp
in
out
mov
jecxz
fadds
xor
jno
cmp
mov
enter
and
cmp
push
pop
cmp
mov
dec
sub
cmpsb
loop
repz
sub
pop
push
mov
rclb
std
mov
jge
push
push
cmpsb
jge
cmp
mov
bound
jecxz
mov
sub
lods
decb
movsl
outsb
out
iret
mov
sbb
pop
inc
mov
push
inc
sbb
mov
add
or
je
xor
or
sbb
add
mov
fadds
ss
scas
inc
or
test
mov
in
lods
push
incb
nop
xlat
dec
jp
sub
adcb
scas
or
inc
adc
pop
dec
fwait
add
vmovdqa
add
sub
pmaddwd
or
jg
rcll
pop
fildll
movsl
sbb
call
jmp
push
xchg
jp
loop
sarb
mov
sbb
or
or
roll
sub
inc
rcll
or
lock
subl
adc
out
iret
mov
dec
fwait
push
sbb
lcall
adc
xor
repnz
inc
mov
dec
cmpsb
lds
sarl
shll
add
mov
in
ss
mov
xchg
xchg
push
inc
xchg
je
loope,pt
bound
cmc
xor
mov
cltd
ss
jb
popw
mov
dec
jbe
and
mov
cmp
mov
mov
in
jns
ss
cmp
inc
shl
rorl
sbbb
add
shl
mov
leave
push
int
xor
jbe
mov
sub
mov
inc
sbbb
sbb
adc
in
enter
cmp
and
push
adc
arpl
push
inc
iret
stos
add
sub
jne
fwait
mov
dec
lods
cmp
stc
pop
pushf
popa
dec
fldl
and
lahf
xor
les
and
or
xchg
mov
test
adc
imul
iret
ret
mov
jecxz
das
mov
ret
adc
mov
xchg
pop
add
iret
sub
jge
inc
push
pushf
sub
push
repz
adc
push
xlat
inc
pop
pop
int
sub
pop
push
cmc
jmp
andb
mov
jp
xchg
mov
test
scas
add
adc
into
pop
inc
popl
fwait
jb
ret
adc
and
pushf
ja
ret
add
vrcpss
clc
adc
xchg
repz
cs
repnz
and
scas
in
lahf
in
scas
rclb
and
sbb
xchg
and
hlt
cmp
lahf
jnp
mov
in
or
jno
cmp
bound
mov
mov
sub
pushf
mov
jl
inc
test
out
jle
scas
scas
pop
sub
test
dec
outsl
mov
in
cmp
stc
cs
lea
inc
sub
xor
pop
push
lret
push
pop
rclb
xchg
in
out
mov
lahf
xchg
push
inc
test
addr16
fisubl
add
pop
iret
mov
add
cwtl
xor
push
movsb
jbe
iret
push
mov
insb
pop
es
cmp
pop
in
js
test
xorb
cmc
movb
adc
adc
add
sbb
adc
lea
jae
ss
mov
das
dec
mov
push
in
jno
cmp
sti
add
push
das
jl
popf
out
push
loopne
bound
cmp
inc
push
enter
jae
xor
js
jae
nop
mov
nop
dec
rorl
imul
adc
mov
mov
int
repz
fucomp
pop
inc
pushf
add
pop
sbb
sub
mov
sar
aaa
cmp
imul
or
int
sub
cld
xor
push
mov
mov
dec
ds
jge
fisttpl
cmp
stos
sub
adc
fisttpll
jns
pushf
jmp
jecxz
push
cmp
inc
pop
xor
adc
adc
inc
shl
or
cmpsl
fld
cmp
sbb
jns
add
stc
dec
add
jo
mov
test
add
loope
cltd
sub
adc
in
dec
mov
jge
adc
inc
shlb
adc
pushf
ja
std
daa
mov
cmp
rcr
pop
cltd
stos
movsb
inc
dec
sbb
xchg
test
aas
or
fs
jb
int
inc
out
aas
push
xchg
sbb
cli
popf
mov
insl
mov
cmpsl
push
cmpsb
dec
xchg
cli
stos
sbb
sbb
xor
test
test
sbb
push
repnz
inc
mov
or
and
inc
xchg
sub
js
dec
ret
mov
add
sbb
add
popa
sbb
icebp
imul
adc
jmp
ret
iret
inc
cwtl
sub
in
daa
fisubrl
lods
mov
xchg
inc
mov
push
mov
orb
test
movsb
and
jle
lret
jecxz
cmp
cwtl
lods
lret
cmp
popa
jp
ljmp
hlt
insl
pop
xor
xor
out
inc
iret
push
rorb
jg
or
adc
repnz
repnz
or
fisttps
add
jbe
sbb
xchg
test
aaa
test
into
dec
push
jns
or
pop
fildl
xchg
rcrl
mov
mov
mov
idivl
cmp
scas
mov
inc
out
and
or
cmc
xor
sahf
inc
mov
pop
fcmovnu
imul
inc
lds
lods
pop
add
daa
nop
pop
daa
call
jge
dec
pop
mov
sbb
mov
rcrb
xor
test
scas
jg
out
xor
sbbl
and
push
sbb
aas
jge
out
sbb
xor
jae
sub
pop
cmpb
sub
imul
fisubrs
movsl
notl
or
mov
movsb
call
inc
in
cmpsl
lretw
sub
shl
arpl
adc
loopne
out
pop
pop
sarl
retw
or
ret
test
add
and
sub
imul
imul
pop
xor
std
push
jecxz
jmp
jp
pop
or
push
imul
test
xchg
repz
lods
push
push
shlb
inc
mov
aad
cmp
dec
xor
in
ret
les
fnstenv
shl
dec
fdivs
xchg
jae
jmp
sbb
adc
fmull
rcrl
daa
xlat
pop
adc
popf
xchg
cmp
popf
sti
cmp
shlb
sbb
scas
insl
ficoms
adc
filds
pop
cltd
sub
outsb
pushf
cmpl
inc
subb
adc
mov
sub
es
sbb
mov
or
imul
out
jle
xor
and
sub
mov
popa
fisttpl
dec
push
lock
mov
cmpsl
mov
jne
aas
jnp
mov
sub
insb
test
adc
push
imul
mov
jno
pop
pushf
jmp
cmp
cmp
sbb
aaa
in
add
jns
push
hlt
mov
sub
mov
push
loop
fwait
or
jle
movsb
popf
xor
and
jp
rorb
adc
xor
pop
push
cmp
mov
push
mov
lods
incl
rcr
cmc
or
jbe
cmc
jl
repz
mov
loop
sbbl
adc
jmp
ret
loop
cwtl
cmc
xchg
inc
int3
push
inc
adc
js
jne
or
in
dec
xor
mov
inc
inc
lea
call
cmp
fcoms
and
icebp
mov
push
sbb
fs
and
lods
push
stos
jae
in
sub
sbb
adc
rcll
cmc
ret
cmp
clc
jns
sti
xchg
push
shlb
adc
pop
push
insb
fdivrl
mov
mov
ret
lahf
pop
mov
push
hlt
push
dec
jp
jb
hlt
fs
cltd
add
aam
fldl
ret
xorb
mov
cltd
pop
push
pop
aad
inc
sahf
aas
out
pop
in
pop
adc
rolb
adc
mov
jg
mov
jecxz
xchg
push
dec
nop
cwtl
sbb
stc
push
add
inc
mov
insb
bound
push
jbe
mov
in
jno
shlb
pusha
sbb
repz
stos
cmp
ja
pop
adcb
out
sub
sub
sti
in
cmpsl
push
jae
pop
xlat
mov
jb
bound
jl
add
mov
push
les
cmp
les
fwait
mov
lds
in
test
sahf
ss
adc
jp
mov
ljmp
mov
cmp
sub
shlb
bound
in
cmp
xlat
sbb
xor
add
sbb
add
clc
loope
int3
leave
dec
sbb
notl
lock
pop
stos
push
pop
ja
mov
in
or
fildl
lods
aam
push
sbb
ret
jns
aam
movsl
je
sbb
popa
sahf
dec
dec
jae
jae
ss
pop
clc
jo
dec
sub
shlb
das
addr16
xchg
fdivs
lods
es
jmp
aaa
sti
std
dec
xor
sub
pop
sub
mov
popf
in
nop
andl
ret
shrl
adc
pusha
mov
push
leave
fidivrs
fwait
dec
sbb
shlb
mov
pop
fbld
in
ret
push
cmpsb
pop
jecxz
jo
popf
fldenv
mov
fisttpll
inc
xor
into
gs
and
stc
arpl
pop
jbe
jge
jbe
sbb
pop
push
leave
clc
hlt
cld
push
repz
es
add
icebp
mov
mov
dec
push
jne
sub
out
addr16
outsb
fcmove
sbb
xor
xlat
mov
pop
cmp
daa
andb
std
xchg
mov
lret
mov
cs
push
or
in
fcoms
js
jecxz
add
sub
add
imulb
xor
movsl
stos
lret
cli
cmp
pop
xchg
aad
push
and
repnz
mov
mov
pop
mov
in
xchg
scas
mov
fwait
jo
fucomi
fiadds
jp
mov
rcll
xchg
orl
je
pop
push
in
mov
jbe
push
shll
and
jmp
pop
mov
insl
xchg
sbb
popa
adc
lret
std
add
pop
ds
lock
xor
adc
dec
aaa
lret
sub
push
test
fsubrs
and
xchg
cmpsl
fcomi
xor
jle
sbb
mov
js
je
inc
out
mov
fsubs
push
inc
outsl
std
lods
xchg
enter
inc
mov
push
lods
mov
push
push
out
lds
sub
ljmp
pop
xchg
xchg
push
mov
ret
mov
punpckldq
inc
adc
jmp
cmp
rcrb
ljmp
cmp
or
xor
mov
push
mov
and
ret
mov
jg
add
mov
or
dec
jno
dec
cmp
pop
aad
pop
pop
add
mov
pop
idivl
clc
cmpsb
jns
repz
or
sub
divb
notb
scas
sbb
fstl
push
push
mov
mov
fwait
xor
int3
mov
aas
int
xchg
or
popf
mov
sbb
outsl
test
jmp
push
add
addl
les
or
ret
out
sbb
aam
mov
pop
rcrb
jl
das
in
inc
fdivs
lret
sbb
rorb
ror
jp
or
imul
clc
addr16
add
or
adc
xor
and
push
sbb
jmp
sahf
xor
inc
cmp
push
pop
data16
and
out
adc
mov
repnz
mov
loop
inc
mov
pop
cld
xchg
lret
or
aaa
jae
rcrb
jno
mov
mov
jmp
push
mov
sub
imul
pop
in
push
cmp
push
mov
popf
test
fildl
notb
lods
jbe
xchg
imul
pop
jnp
movsl
or
jnp
add
push
inc
lods
dec
mov
test
mov
daa
dec
stc
adc
xor
jle
fildll
rcll
ror
and
outsb
mov
or
adcl
lcall
inc
push
and
dec
xlat
jnp
inc
lods
gs
jle
xor
mov
das
and
mov
mov
adc
cmp
js
adc
call
jne
les
add
pop
shll
cmp
mov
cmp
jg
dec
push
cli
jnp
xchg
adc
add
jns
add
cmp
mov
daa
pop
in
xor
divl
lods
in
cmp
pushf
insb
pop
push
ret
jp
mov
repnz
sbb
les
jno
cmpsl
clc
dec
cli
inc
xchg
pop
rcrl
mov
lahf
xchg
es
sarl
mov
cmp
sbb
xor
enter
pop
pop
dec
xor
mov
add
fnstenv
mov
mov
inc
fldl
lcall
ret
imul
mov
inc
cmp
inc
cmpsb
je
xchg
pop
jbe
mov
and
pop
dec
xor
jecxz
ret
xchg
jmp
sbb
cwtl
imul
dec
pushl
jmp
adc
push
xchg
cltd
test
fbstp
imul
cmpl
sub
fsubrl
out
and
add
sbbb
push
dec
push
repz
sbb
pushf
cs
add
pop
add
xchg
dec
mov
scas
incb
cmc
xchg
cmp
jae
add
dec
mov
repz
cmovo
outsb
jb
mov
hlt
cmp
lahf
xor
imul
cld
rol
dec
inc
cmp
cmpsb
xchg
shlb
push
mov
arpl
mov
fstpl
mov
imul
pop
lea
push
mov
setb
ficoml
ja
pop
dec
call
jle
hlt
imul
push
movsb
mov
push
test
inc
cltd
pop
lea
lea
sub
scas
ficomps
iret
cmp
and
icebp
js
shl
in
or
cmp
adc
mov
cltd
xor
adc
pop
int
mov
leave
jmp
das
pop
dec
dec
cltd
push
inc
nop
lcall
loopne
cmp
xchg
dec
adc
cmpsb
mov
push
mov
enter
insb
aam
jmp
pop
and
jne
add
int
push
test
adc
jp
sbb
sub
into
inc
push
clc
loopne
adc
sub
jbe
scas
fsts
test
sbb
or
and
jecxz
lods
inc
sbb
pop
pop
xchg
cs
adc
int3
icebp
int
lret
and
ficomps
js
dec
add
add
push
call
push
mov
pushf
jns
into
mov
jae
jecxz
cld
notb
cltd
jge
push
fbld
push
sub
mov
add
faddl
xlat
or
leave
hlt
mov
push
or
bswap
fiadds
stos
and
andb
iret
inc
push
push
mov
xchg
dec
xchg
cld
mov
leave
dec
inc
sub
sub
add
insl
xchg
push
pop
leave
cltd
dec
loope
loopne
mov
and
or
and
pop
pop
repz
sti
mov
fcompl
leave
jne
add
aad
jns
dec
mov
into
push
pushf
int
mov
jp
rcr
and
out
in
pop
test
outsb
cli
inc
and
pop
lret
aaa
aas
clc
sub
aaa
pusha
js
cmp
fsubrl
mov
movsb
add
inc
aas
lock
mov
fstpl
push
cmc
call
movsb
sbb
cmp
jp
xchg
xor
pop
jecxz
pop
sub
pop
fidivl
sti
popa
mov
mov
xchg
pop
int3
xchg
addr16
outsb
push
mov
adc
shl
imul
imul
ficoml
shrb
mov
mov
pop
lret
lcall
popf
cs
push
fadds
cwtl
outsl
out
aaa
js
aaa
push
out
dec
out
mov
ficomps
or
call
dec
xchg
inc
out
cmp
xor
mov
movsl
mov
jno
pushf
add
inc
iret
in
sub
orb
mov
or
repnz
lock
adcb
lahf
jmp
ret
inc
add
push
and
int
les
and
lea
adc
cmpsb
into
mov
es
hlt
lahf
mov
call
loope
xchg
dec
pop
call
mov
out
mov
inc
popf
xor
inc
movsl
imul
lds
xlat
dec
xorl
or
in
cmp
test
bound
cmp
int
mov
push
loop
lds
out
mov
fidivrl
pop
push
inc
rorl
inc
lret
inc
xlat
rcrb
rorl
mov
push
orb
pop
bound
inc
das
stos
ret
jmp
mov
jnp
bound
xchg
out
bound
push
inc
cmpsb
scas
and
sahf
les
stc
adc
fiaddl
rorl
lcall
lea
dec
dec
lret
cmp
clc
popa
out
data16
mov
add
xchg
cmp
sbb
cmp
mov
add
jle
mov
les
dec
sbb
or
jne
push
inc
mov
or
and
sbb
inc
cwtl
pushf
inc
pushl
insl
mov
mov
cmp
arpl
jl
js
pop
pop
mov
stc
jg
sub
and
aad
aam
pop
insb
push
addl
sbb
cmp
push
pop
adc
add
fistpl
xchg
roll
stos
push
scas
leave
mov
mov
lods
and
mov
mov
int3
push
stos
push
cmpsl
out
or
inc
dec
jbe
cmp
ds
xchg
and
lret
lods
in
repz
sbb
add
insl
cmc
lcall
outsb
scas
repnz
mov
mov
daa
jbe
and
dec
inc
xor
sahf
andb
rorl
mov
push
in
xchg
inc
fmulp
mov
fbld
fmull
dec
jb
aas
inc
rolb
mov
enter
sbb
sub
xor
sbb
or
adc
mov
mov
fisubs
mov
xchg
imul
sub
shl
ja
inc
cltd
mov
dec
ud0
call
stc
pop
mov
call
sbb
push
clc
cmp
dec
xchg
aad
pop
jno
push
mov
lds
std
cmp
mov
cmp
daa
add
je
filds
pop
dec
lock
shrb
data16
jp
fstps
or
push
sub
jmp
mov
fnstcw
lock
pop
inc
pcmpeqb
aaa
fmull
mov
sbb
jbe
xor
pop
xor
ds
leave
mov
rcrl
add
sbb
daa
push
adc
into
xor
ja
andl
outsb
cltd
mov
cmp
loope
test
inc
mov
or
xchg
mov
cld
sub
stos
mov
pusha
test
test
gs
mov
xchg
sbb
push
jge
push
loopne
frstor
mov
lahf
and
cmp
sti
aam
pop
imull
mov
pop
jae
es
dec
cmp
push
xchg
mov
inc
or
jo
xchg
sahf
out
das
add
popa
pop
sub
mov
dec
fst
pop
xchg
add
adc
outsb
stos
xlat
pop
push
inc
push
sbb
adc
or
cld
insb
inc
rclb
out
sbb
mov
fdivs
adc
pop
mov
dec
xor
push
fmull
jbe
cmp
mov
xlat
sub
data16
pop
test
jle
push
push
fdivrs
test
adc
ret
push
xlat
iret
xor
xchg
rorl
std
push
mov
cmp
xor
in
pop
xchg
es
mov
jo
cmpsb
in
mov
cli
inc
jecxz
push
jecxz
mov
fisubl
stos
push
add
add
lods
into
sti
loop
lcall
xchg
mov
pushf
push
ja
jb
mov
lahf
fsubrp
fcompl
dec
xor
setb
lods
repz
pop
inc
push
mov
lods
mov
jle
pop
push
into
jmp
shlw
cwtl
test
out
nop
push
or
jle,pt
cwtl
xchg
aam
pusha
mov
pop
loope
call
movsl
divb
repnz
xor
repnz
mov
fnstcw
add
or
leave
aad
leave
pop
sub
mov
fisubl
adc
xor
movsb
mov
into
inc
cmp
jge
adc
outsl
mov
daa
sbb
adc
xchg
xor
add
loope
sbbb
mov
jmp
push
mov
cld
mov
test
outsl
adc
dec
fistl
pusha
sahf
fdiv
inc
stc
fldcw
movsb
sbb
lret
outsb
test
jge
mov
aaa
sbb
push
mov
mov
shrl
daa
adc
mov
jp
addb
xorl
int3
inc
std
xlat
mov
inc
push
inc
sbb
ss
out
or
or
mov
sub
cld
lods
gs
std
mov
call
scas
inc
mov
sbb
xor
and
dec
sbb
push
daa
sbb
or
pop
data16
fstps
lret
cmp
push
push
cli
or
fnstenv
adc
sub
mov
push
inc
imul
cmp
sbb
sahf
cmpsl
inc
aam
in
test
and
push
cmpsb
scas
iret
pop
xor
adc
popa
or
aam
sub
hlt
paddq
sub
mov
sbb
xchg
aas
inc
lcall
pop
push
repnz
jmp
mov
pop
jnp
testl
popf
dec
inc
stc
sbb
or
cmp
cmp
push
cmp
push
test
loop
mov
out
pop
bound
hlt
add
jp
arpl
mov
push
xor
pop
sub
mulb
sbb
xchg
test
dec
dec
loope
js
inc
clc
aad
nop
mov
jnp
into
std
jno
push
push
jno
xor
push
mov
dec
jns
dec
inc
fwait
cmp
adc
sub
enter
cltd
shrb
mov
jmp
cltd
ja
mov
inc
mov
adcl
mov
sub
inc
ds
mov
mov
scas
test
dec
rcr
pop
mov
inc
ljmp
pop
cmpsl
fs
or
nop
xchg
je
fwait
dec
jne
jnp
mov
lret
mov
inc
dec
mov
inc
jo
sub
icebp
pop
repz
sti
loopne
push
ffreep
jle
sub
insl
jb
loope
outsb
and
fists
xchg
sbb
jnp
test
jo
sbb
dec
cmp
dec
test
fistps
lods
ficomps
cld
pop
xchg
sbb
dec
push
gs
pop
mov
nop
test
cld
xor
jo
call
nop
add
xchg
into
addr16
xchg
lea
iret
repz
shll
sbb
ljmp
incb
repnz
dec
cmp
mov
arpl
or
jns
ret
xor
add
mov
imul
or
xor
mov
pop
or
inc
mov
jno
test
pop
xor
sub
adc
fcoml
fstps
mov
jo,pt
jne
stc
push
xchg
xor
cmp
psllw
pop
icebp
or
pop
rol
push
cmpsl
mov
popa
icebp
fistpl
sub
or
or
sti
test
in
rcrl
xor
and
jbe
jne
inc
loopne
mov
xchg
push
pop
ret
jmp
popf
movsl
xor
repz
cmp
enter
shrl
mov
xlat
mov
jmp
js
test
or
and
sbb
lret
xchg
sub
push
daa
push
push
mov
mov
mov
mov
pop
vpcomub
call
hlt
pop
notb
pop
jecxz
stc
mov
loopne
mov
pop
lock
push
pop
mov
enter
or
jmp
xchg
lret
mov
cld
jl
inc
pop
sarl
bound
mov
push
mov
inc
jg
cltd
mov
lds
jecxz
popa
sti
sub
add
xlat
lret
sub
daa
jl
mov
aad
arpl
mov
and
cmp
sti
dec
xor
pop
mov
imul
jle
xchg
fcmovnu
jmp
sbbb
push
xchg
in
sbb
cld
push
sbb
fcomps
cmp
cmp
xor
sahf
and
mov
add
add
imul
jbe
inc
cmp
pop
dec
add
pop
aas
add
mov
adc
dec
jg
dec
xor
enter
or
sbb
mov
lods
push
ljmp
mov
pop
pop
mov
repnz
mov
lock
or
testl
push
pop
cmp
inc
enter
xor
out
shrl
cmp
cli
out
pusha
xchg
xor
push
dec
cmp
mov
nop
mov
fdivl
outsl
in
js
test
mov
xor
daa
sbb
xor
mov
mov
jne
sub
lds
data16
xchg
in
fmull
ret
insl
push
cwtl
jg
cmp
cs
pop
sarb
js
xor
adc
push
cltd
popa
jns
fnsave
cmpsb
imul
sub
xchg
dec
stc
rcrl
jnp
sbb
xor
das
and
add
test
jne
cmp
fcmovnbe
popw
lock
ret
repnz
pop
repnz
in
cmpsb
jb
cbtw
cmp
xor
push
lcall
sbb
ja
mov
sti
jp
adc
pushf
inc
and
jae
daa
mov
xor
imul
loope
cmp
pop
cmp
adc
shlb
jmp
push
test
xchg
xchg
fstpl
push
clc
xor
push
lahf
mov
xchg
sub
out
push
push
xor
mov
aaa
lcall
adc
arpl
std
xor
mov
cmpsb
mov
pop
xchg
data16
aam
inc
sbb
imul
ja
ret
adc
adc
arpl
daa
scas
aam
push
lret
push
lcall
cmp
insl
leave
rcr
out
es
sarl
sbb
dec
add
enter
pop
add
inc
int3
iret
out
insb
and
push
fmuls
or
aaa
vmread
icebp
rorl
icebp
sub
in
and
and
jbe
popa
sub
push
loopne
jne
out
jb
sub
vpandn
jo
mov
jl
and
nop
lret
jbe
std
dec
adc
mov
pusha
push
xchg
xor
leave
or
repnz
aas
pop
rorb
mov
lret
into
xchg
pop
lahf
in
out
in
xor
jno
add
call
mov
xchg
fs
sub
jmp
or
das
mov
cli
outsb
ss
repz
outsl
pop
add
repnz
cld
or
icebp
or
xor
lret
inc
je
in
test
xor
pop
addr16
inc
and
data16
je
jo
push
hlt
sarb
xchg
push
xchg
in
into
push
mov
call
in
out
sbb
dec
popf
in
mov
sti
and
dec
sbb
das
push
dec
inc
mov
daa
lahf
data16
and
imul
xchg
repz
repnz
or
bound
lds
mov
adc
dec
shlb
ds
aas
ljmp
bound
jne
fidivrs
mov
fisttpll
ret
xor
into
pop
sahf
popa
into
jg
push
loope
pop
and
in
cmp
js
pop
sbb
loope
mov
pop
mov
movsb
imul
and
scas
inc
push
idivl
mov
addl
or
push
push
inc
pop
jg
push
mov
test
stos
mov
pusha
jmp
or
arpl
inc
pop
cwtl
inc
mov
cmp
lret
xchg
out
repnz
and
jo
inc
cli
data16
cmp
outsl
xchg
das
dec
jge
outsb
jo
cmc
gs
pop
add
leave
pop
testb
adc
mov
popf
pop
sub
jo
push
fldt
icebp
scas
push
and
push
daa
mov
pop
jne
mov
mov
aad
fs
adc
adc
arpl
xor
xorl
jge
sub
pop
sub
fstps
lods
daa
fwait
aaa
aas
mov
pusha
xchg
and
or
lods
mov
mov
ret
loopne
xor
lahf
movsb
or
mov
cli
pop
sbb
fmull
cld
pushf
adc
push
test
out
add
testb
aaa
fsubrl
mov
mov
pop
push
xor
out
pop
and
adc
cld
dec
jle
and
dec
mov
out
mov
mov
or
push
lods
and
jns
stos
xchg
push
jno
pushf
jno
push
fildll
push
sbbb
mov
lcall
fwait
leave
pusha
frstor
repnz
test
sti
fmull
push
push
fs
scas
cld
pop
inc
lret
je
inc
mov
scas
sti
dec
jp
adc
and
mov
jb
fwait
and
repnz
mov
dec
xor
cmpsb
push
adc
fcoms
cmp
push
ret
xchg
sub
cmp
add
test
sahf
mov
lret
jle
jbe
adcl
leave
aad
adc
pop
pop
sbb
in
insb
arpl
xor
movsl
and
mov
cmpsl
sbb
pop
or
dec
mov
std
popa
sbb
ds
iret
pop
cmc
mov
push
jb
push
pop
or
pop
dec
cwtl
mov
incb
jecxz
mov
repnz
or
mov
ljmp
js
addb
js
jmp
inc
ficoms
lea
push
es
push
in
enter
into
rcr
outsb
sbb
xor
add
inc
lcall
in
push
std
cli
popf
mov
xchg
es
push
add
xchg
jne
int
sbb
sbb
lret
mov
add
xchg
arpl
or
xchg
cmp
in
fdivl
cs
xchg
insb
jg
mov
jnp
sub
sub
mov
mov
scas
or
dec
add
ficoml
cli
loope
xor
push
leave
inc
xchg
jns
ljmp
mov
and
daa
mov
iret
lahf
or
xlat
loopne
popa
push
push
test
addr16
nop
dec
mov
xchg
into
out
jne
lock
mov
daa
jge
adc
aad
fisubl
jb
sub
mov
mov
inc
stos
mov
cmp
lret
movaps
pop
add
out
repz
pop
dec
mov
sahf
in
shrl
jmp
jge
mov
mov
lods
ja
out
lods
add
rorl
jle
mov
add
push
mov
or
inc
addr16
jne
mov
cmp
loopne
xor
stos
mov
and
add
adc
pop
jg
pushf
mov
repz
aam
fs
fisubrs
sbb
popf
lods
sub
mov
int3
stos
pop
in
adcl
rcrl
mov
inc
lods
test
adc
fwait
sub
into
inc
adc
inc
hlt
ljmp
lret
inc
je
sti
jae
pushfw
and
inc
int3
pop
lcall
jg
imul
pusha
push
subb
scas
arpl
lods
jns
dec
cmc
mov
test
pop
dec
pop
mov
mov
dec
test
fstpl
scas
xchg
sbb
sub
fwait
xchg
lahf
mov
leave
cmp
sbb
scas
data16
and
popf
cmpsb
mov
insl
mov
inc
push
sarl
test
adc
dec
xor
mov
sbb
mov
scas
shlw
stos
mov
rcll
sarl
dec
cmp
add
icebp
jg
hlt
push
fs
pusha
adc
sbb
dec
js
and
out
adc
ja
loope
or
js
dec
add
jo
sub
imul
call
fs
cmc
mov
mov
sub
into
fcmovbe
outsb
jge
repz
or
mov
mov
dec
push
jne
orl
cld
test
imulb
cmpsl
mov
jge
popl
mov
ret
sub
dec
jne
out
lods
or
adc
sarb
push
xor
ljmp
cltd
lds
in
mov
test
pop
je
sbb
jmp
push
cmpsb
out
add
mov
mov
sbb
sbb
pushf
sub
rorl
fstl
in
or
cmpsb
jne
ljmp
shll
or
mov
iret
fwait
or
inc
inc
loope
cli
rcrb
scas
fisubrl
imul
push
dec
jg
lods
push
xchg
ficomps
shr
mov
inc
pop
sti
sub
clc
insl
hlt
or
hlt
stos
pop
sbb
jl
insb
shrb
sahf
dec
les
insl
addb
mov
int
stos
xchg
pop
js
aas
jge
movsb
fnstcw
pop
sub
cmc
cmp
push
dec
dec
pop
mov
pop
jg
push
roll
cmp
xor
aam
fidivrs
lds
sub
sbb
sub
loopne
cmpsb
push
push
addr16
shll
adc
imul
enter
jno
ret
daa
mov
out
mov
and
adc
cmp
movsl
jbe
adc
scas
mov
mov
leave
les
pop
sub
pop
and
sbb
inc
movb
or
fwait
adc
xor
mov
jg
outsb
std
pop
push
lcall
jnp
fiaddl
in
subl
add
hlt
int3
test
outsl
push
xchg
add
test
cmp
mov
out
add
jge
pop
aam
jne
aad
push
push
ret
jbe
lea
repnz
add
jno
shlb
bound
rcrb
push
fists
dec
imul
imul
jp
or
pop
fwait
inc
rcrb
into
add
lcall
xchg
cmp
cltd
jmp
frstor
sti
arpl
out
mov
cltd
cmp
mov
lods
repnz
xor
mov
fsubrl
aas
ljmp
mov
imul
or
push
hlt
gs
push
scas
mov
pop
cmp
lods
mov
imul
test
sbb
push
adc
xchg
jg
push
jecxz
push
xlat
xchg
test
movsl
popf
add
imul
test
inc
icebp
push
jp
push
out
jbe
add
xchg
insl
xchg
mov
jae
out
ljmp
mov
shlb
mov
jge
cwtl
push
test
cld
xor
pop
jg
into
mov
movsbl
inc
push
or
rcrl
test
inc
imull
aas
mov
mov
cmpsb
jb
xchg
jne
mov
sbb
jbe
loopne
dec
lock
and
and
shlb
sbb
lret
and
mulb
cmc
shr
jl
popf
pop
mov
sbb
jecxz
xacquire
push
dec
push
mov
or
dec
pop
sahf
xor
push
lahf
lods
movsb
xchg
lret
shll
adc
pop
pop
and
push
aad
incl
sub
and
ja
pop
mov
xorb
lahf
xchg
cli
xor
jle
cmp
pushf
lea
jne
jmp
loope
lret
adc
adc
test
jp
test
andl
mov
xchg
push
cwtl
scas
cmp
sbb
sbb
cs
ds
in
sbb
shlb
fadds
inc
enter
inc
and
dec
or
mov
xlat
push
popa
or
xchg
stc
mov
ljmp
sbb
or
outsl
inc
mov
mov
fstpt
in
adcb
das
or
jae
sub
pop
int3
sbb
mov
jp
addr16
lds
jmp
jns
cmp
jge
out
mov
xchg
jmp
repnz
push
xchg
xchg
loopne
dec
mov
test
xchg
loopne
ds
rcl
and
sti
stos
push
int
das
data16
cmc
mov
xor
mov
mov
sbb
movsl
arpl
repnz
loopne
test
add
outsl
fsubrl
sbb
dec
psrlq
aad
adc
xchg
lock
dec
mov
jecxz
insl
sub
fdivs
push
addl
hlt
push
leave
pop
mov
fwait
aad
and
stc
dec
roll
das
push
xor
cmpsb
sbb
cmpsb
and
sbb
push
push
mov
jg
xlat
out
imul
fcoml
lock
mov
xchg
test
sbb
mov
movsl
push
aam
mov
daa
loop
mov
dec
cli
mov
rol
mov
mov
jb
in
cmpsb
outsb
pop
movsb
enter
lcall
sub
outsl
mov
push
je
xor
test
stos
in
push
jp
std
xchg
rcll
je
mov
rclb
ss
inc
cld
mov
mov
jb
imul
add
sub
xchg
fcoml
out
inc
test
mov
cmp
jo
in
nop
push
xchg
insb
jo
xchg
mov
push
xor
fnstsw
mov
repnz
out
cmc
inc
bound
cmp
imul
mov
push
add
sbb
in
xor
adc
xor
sbb
loope
sub
dec
stc
cmc
out
dec
fsub
sahf
jmp
loope
cs
cs
or
je
out
enter
or
pop
imul
mov
pop
in
repz
push
fs
xchg
cli
xchg
xor
adc
push
cwtl
into
mov
cmp
enter
mov
xchg
aad
mov
jg
nop
scas
xor
call
cmp
int
imul
stos
xchg
add
movsb
addr16
sbb
inc
std
mov
mov
mov
insb
lea
and
add
xor
hlt
cld
inc
roll
dec
rol
shrl
xorb
sub
nopl
mov
jg
pop
cld
ja
add
xor
jns
std
pop
dec
xchg
dec
jg
inc
xor
jns
aam
cltd
xchg
test
mov
negb
repz
dec
cmp
faddl
or
push
cmp
mov
sbb
mov
js
mov
cmpsl
cld
pop
test
or
sub
adc
out
mov
rcl
repz
jl
lods
mov
jg
push
into
pop
int
xor
or
shll
lret
push
repz
dec
dec
in
mov
imul
movsl
and
pop
dec
sbb
jnp
dec
xchg
rclb
jecxz
loope
add
outsb
ret
pop
movsb
jbe
cmp
out
xchg
repnz
pop
outsb
lret
sub
sahf
push
notb
inc
sbb
test
neg
hlt
clc
fs
cli
test
push
jmp
aaa
cmpsl
xchg
jno
push
dec
and
test
mov
notb
and
popf
insl
jl
sub
xor
inc
cmp
xor
cwtl
scas
das
sbb
mov
or
push
jno
dec
jnp
push
xchg
in
add
jg
leave
mov
mov
mov
sbb
daa
shl
sbb
clc
inc
and
iret
xchg
ret
mov
hlt
mov
inc
mov
cmp
mov
inc
sti
pop
push
pop
test
andl
out
inc
pushf
rcll
dec
xlat
sbb
mov
out
pop
mov
repnz
add
in
mov
sub
pop
sbbl
jmp
test
mov
sahf
inc
sete
cmpsb
sub
sub
push
fiadds
dec
push
jp
enter
mov
add
ja
mov
push
inc
sub
insb
push
mov
mov
sbbb
incl
sbb
lahf
push
or
or
das
cltd
mov
mov
rorl
push
cwtl
push
in
xor
adc
imul
mov
xchg
lds
inc
xor
xchg
adc
dec
out
inc
xchg
mov
shll
jnp
ljmp
fistps
aas
push
lock
orb
xor
pop
jns
cmp
hlt
and
push
mov
loope
add
inc
push
or
push
sub
shl
bound
or
adc
pusha
loope
int
rol
mov
clc
mov
xlat
mov
or
popa
xchg
cwtl
dec
sbbb
imul
mov
aam
sub
mov
les
push
adc
xchg
lds
cli
mov
icebp
or
gs
or
inc
repnz
shll
test
stos
jnp
adc
in
popa
js
sub
xor
repz
mov
xchg
mov
jo
sti
and
pop
rorb
lods
push
imul
jp
test
repnz
bound
pop
cs
pop
mov
and
dec
icebp
insl
push
mov
leave
and
stc
mov
lods
inc
lahf
add
int
or
stos
lea
xor
xorl
mov
pop
aad
fsub
xor
sub
add
jecxz
cmp
pop
pop
je
dec
jo
inc
lock
mov
push
jle
jb
orb
sbb
ss
and
inc
ficoms
test
subb
mov
je
fistps
push
cli
pop
sbb
lahf
add
ss
je
dec
push
pushf
adc
xchg
lahf
mov
mov
jns
xchg
pusha
mov
in
xor
jmp
ja
xchg
add
addr16
fs
pop
scas
mov
int
mov
inc
int
push
ds
inc
test
out
mov
leave
inc
and
lods
out
out
sbb
push
sbb
es
ljmp
lret
push
daa
mov
jmp
fsts
into
lahf
imul
adc
in
mull
xor
jmp
xchg
lds
fwait
int3
pop
aam
sarl
mov
xchg
ss
mov
add
inc
pop
out
and
sbb
lods
subb
inc
call
cld
decl
rcll
popa
ret
jecxz
ja
dec
pop
mov
fldenv
fwait
sbbl
sahf
jp
movsl
lds
movl
shl
pop
or
jne
sub
test
std
out
ja
dec
xor
adc
jle
pop
dec
jbe
lds
cmp
out
cmp
inc
icebp
jnp
pop
jne
into
sarb
pop
subl
out
std
push
and
cld
movsb
scas
sti
jae
xor
popa
out
aaa
pushl
movd
das
push
or
adc
push
xchg
jp
data16
inc
lret
cmp
sub
adc
mov
mov
and
movsl
cli
inc
ret
ret
push
xor
push
orb
sar
aad
stos
push
leave
fwait
insb
xchg
xor
mov
xchg
jp
ret
pop
out
mov
add
xchg
scas
or
enter
fisttpl
dec
mov
mov
push
dec
mov
aad
sub
xchg
push
cltd
int
test
inc
sbb
mov
inc
add
or
cmp
leave
cmp
mov
dec
stc
and
sbb
cmpl
xchg
xchg
jae
jno
or
or
push
es
jl
gs
push
pop
orl
fisttps
cmpb
in
insl
jg
ds
jge,pt
xor
test
sti
mov
add
adc
jmp
fidivs
dec
inc
js
push
add
cmp
mov
push
mov
sub
add
popf
int3
cmc
popf
or
xor
imul
mov
and
push
xchg
mov
out
adc
push
mov
imul
repz
xchg
je
xor
ret
xor
imul
mov
mov
shlb
sub
pmaxub
mov
xchg
pop
push
add
fucomi
lods
xor
or
pusha
sub
in
dec
test
movsb
sbb
jbe
and
lock
ljmp
fwait
inc
movsb
jl
or
and
sti
jo
sarb
dec
mov
mov
out
mov
inc
sahf
dec
mov
xor
xchg
jnp
pop
sub
adc
sarb
mov
outsb
fdivrl
mov
jns
adc
shl
in
ret
pop
push
imul
fstl
movlps
rcll
test
or
int3
pop
cmp
call
stc
sbb
and
mov
mov
adc
aam
ss
xor
adc
xor
aam
or
push
mov
mov
outsl
nop
sbb
fxch
cltd
pusha
and
pminub
xor
or
sbb
les
cmp
cmpsb
adc
xchg
dec
fisubl
cli
cmp
pop
cmp
jp
mov
cmp
pop
sub
mov
lret
inc
icebp
xor
fiadds
fdivrl
cmpsb
call
lea
mov
insl
add
jne
test
lds
pop
pushf
aaa
data16
xchg
inc
fiadds
ja
aam
nop
lret
inc
xor
cltd
loopne
xlat
xchg
and
cltd
dec
das
mov
or
dec
cmc
inc
int3
loope
jae
adcl
int
or
or
push
cmc
sbb
cld
arpl
inc
int3
and
arpl
pop
push
iret
out
xor
mov
sub
daa
popa
in
hlt
mov
push
jmp
add
stc
and
mov
add
mov
nop
mov
mov
popf
inc
add
add
sub
xchg
loope
xchg
cmp
fsubl
iret
mov
inc
js
adc
inc
adc
in
lds
push
add
jno
fnsave
sbb
mov
int3
pop
jl
into
and
jnp
out
add
in
test
mov
sarl
mov
ds
jns
push
aas
push
out
sahf
and
cmpsl
scas
pop
adc
cmpsb
call
add
cmc
sbb
imulb
fiaddl
pop
inc
stos
les
inc
bound
mov
sbb
stos
dec
adc
xor
or
cmpsb
lahf
loope
std
jmp
divb
inc
mov
adcl
push
divb
add
sbb
fldcw
jle
scas
loop
adc
mov
lea
leave
and
push
and
jb
jle
mov
pop
fcoms
pop
aaa
fucomp
call
scas
jecxz
scas
inc
jmp
shrb
out
mov
or
mov
in
arpl
inc
ficoms
adc
xor
out
outsl
hlt
or
enter
gs
test
int
roll
and
inc
or
sahf
hlt
and
push
lret
mov
ja
push
or
mov
cwtl
or
sbb
out
jp
aad
adc
into
adc
sbbl
mov
loope
aas
and
pop
sarb
xor
xchg
ret
scas
mov
ret
leave
insb
xchg
push
stos
iret
ret
push
jb
les
and
test
inc
popa
cmp
popf
into
push
push
sbbb
add
gs
roll
or
mov
rcrb
or
jbe
dec
push
inc
cli
daa
sub
pop
xor
dec
scas
loopne
icebp
inc
mov
dec
movsl
sbb
xchg
fsubs
enter
jb
popa
xchg
inc
inc
lods
mov
mov
in
inc
fwait
nop
jge
mov
mov
movsb
mov
dec
pop
mov
pop
stos
cmp
lds
add
and
jl
or
or
and
sbb
sbb
mov
fwait
aad
aad
fdivl
mov
adc
inc
pop
stos
popf
or
ret
sbbl
jg
loopne
inc
enter
jnp
jo
dec
cmp
push
sub
push
rclb
lret
adc
xor
mov
and
int3
and
jl
rcr
jge
aas
adc
addr16
push
imul
fs
stos
push
in
inc
stos
xor
rorb
ja
mov
mov
popa
and
loop
gs
sarb
das
mov
mov
mov
icebp
adc
mov
cmp
xchg
subl
daa
jb
addb
sbb
cli
xchg
xor
in
push
and
es
bt
shll
pop
roll
movsl
pop
aaa
pusha
fidivs
clc
adc
dec
pop
xchg
adcl
popa
loope
or
push
xchg
sahf
int
jae
imul
xchg
push
mov
int3
add
adc
shll
cltd
jne
jno
jns
xor
push
jo
jbe
adc
lods
jae
or
mov
jbe
fmuls
pop
xchg
or
dec
push
test
iret
xchg
pop
enter
adc
dec
int3
fwait
aas
cmp
push
gs
inc
leave
ficomps
in
aas
inc
ret
cltd
in
aam
jp
xchg
ret
add
mulb
lret
lahf
mov
adc
fs
or
enter
pop
loop
outsl
xchg
int3
fimull
shll
imul
insl
fs
pop
loopne
mov
sbb
test
xchg
inc
sub
pop
aad
jl
dec
fs
movsb
pop
fisttps
and
aam
xchg
test
add
inc
lahf
jb
adc
or
les
daa
mov
shll
pushf
adc
out
dec
pop
ja
shld
ja
jno
out
mov
sbb
push
lcall
or
push
js
lods
clc
and
popa
fstpl
in
orl
mov
lret
mov
sbb
xor
or
jno
inc
push
add
inc
sub
and
out
cmp
pop
inc
pop
xchg
sbb
mov
sub
je
inc
jne,pn
stos
xor
sbb
sti
inc
loopne
cmp
and
mov
and
sub
popa
stos
cmpsb
xor
lods
leave
jp
sarb
fwait
sub
int3
es
sub
stos
pop
mov
pop
and
push
and
scas
inc
xlat
divb
movsb
adc
fisttpl
or
cld
movsb
jmp
mov
mov
in
jb
mov
divl
in
ret
imul
cmpsb
sbb
jne
adc
lret
inc
dec
or
pop
inc
sub
loopne
and
mov
xor
push
mov
daa
cwtl
imul
mov
addr16
stos
jno
test
fdivl
xor
xor
mov
cmpsl
adc
and
jns
pop
jecxz
popf
xor
insb
stos
test
js
jl
add
jp
sarb
inc
sbb
scas
and
rcll
in
shlb
mov
shr
lahf
sub
xor
inc
pop
movl
sbb
fcoms
sbb
pop
les
sub
push
pop
mov
push
jae
rcll
mov
inc
xlat
pop
jb
rclb
lods
mov
cmp
aam
rorl
lret
pop
sub
pop
mov
fwait
rorb
shlb
pop
mov
ds
js
loope
pop
dec
movsl
mov
dec
test
aam
mov
and
js
mov
xor
push
sub
ret
or
mov
push
lods
mov
icebp
out
sarl
push
jbe
jg
push
adc
jae
in
push
jle
and
int
cmpsb
clc
sbb
add
cmp
adc
lods
test
push
ret
rcrb
lahf
sahf
jp
fcmove
bound
test
lcall
push
hlt
outsl
sbb
bound
mov
popf
xor
fidivrl
sub
sbbl
mov
inc
jno
add
xor
jge
and
test
sbb
or
ret
stos
cmp
cmp
inc
xor
add
insb
push
lds
jb
ss
loopne
mov
test
push
xlat
mov
push
sbb
mov
dec
outsb
in
clc
xchg
inc
xor
test
inc
add
and
xor
ljmp
push
bound
out
sbb
stos
iret
testb
jp
out
lret
sub
pop
sub
dec
xchg
aam
cmpsl
cmp
jl
lret
aam
sub
ljmp
dec
pop
pop
jle
test
dec
or
cwtl
xlat
or
cmp
add
dec
adc
loop
jecxz
xchg
push
sub
aaa
js
pop
jne
loope
pop
or
or
or
dec
push
dec
mov
fnsave
jmp
pop
lret
pop
sub
std
ds
xchg
and
ja
outsl
mov
fsubl
xor
rclb
xchg
or
jne
imul
rcl
and
sbb
js
or
xor
or
test
nop
adc
popl
add
xchg
cmp
xchg
adc
jecxz
andb
cmp
lea
pop
ret
mov
ja
icebp
and
cmpl
sub
lret
add
sub
jnp
jnp
mov
jl
push
lock
cmp
add
scas
movsb
bound
or
cmpsb
add
adc
jmp
push
jge
scas
jne
pop
pushf
lcall
mov
pop
cmp
xor
push
sbb
jl
aam
hlt
inc
fistpl
mov
and
test
xor
inc
addl
popf
loopne
inc
push
outsl
xchg
enter
xchg
or
pop
add
imul
adc
loop
xor
inc
addr16
out
mov
fildll
cmp
sub
stos
mov
add
jbe
push
adc
call
mov
push
mov
or
rorl
test
data16
je
ret
subb
fs
jo
and
call
fisttpl
ficoms
addl
or
xor
pop
lods
rcrl
jno
jns
in
cmp
aad
mov
jge
dec
sbb
pop
cmp
xchg
pop
dec
popf
test
cmpsb
in
pushf
aaa
fcoms
xchg
push
pop
push
subl
jge
sub
ret
aaa
inc
lds
mov
lea
cmpb
orb
mov
xchg
dec
dec
imul
push
pop
mov
jns
push
aam
dec
xchg
cwtl
lcall
dec
in
sahf
in
loop
or
sbb
test
push
icebp
sub
xchg
push
push
cmp
push
cli
pop
sbb
cmpsb
fildll
into
addr16
fidivrl
push
outsl
adc
mov
fnsave
xchg
jecxz
test
mov
pop
outsb
xchg
aaa
jo
lods
cltd
sbb
jl
jb
adc
out
mov
and
repnz
xchg
mov
mov
cmp
lds
out
mov
xor
fs
adc
cmp
mov
fs
push
les
jae
inc
xchg
mov
and
xchg
fwait
dec
mov
fistps
mov
jns
jge
jne
inc
in
mov
daa
inc
lret
gs
sbb
nop
add
or
dec
xchg
and
rcll
jge
jg
out
je
push
and
xchg
es
addr16
stos
mov
sbb
mov
or
push
shlb
mov
adc
mov
lock
ficoms
addr16
lahf
cmc
and
insb
aaa
scas
lods
je,pt
or
stos
rcll
pop
xor
fsubrs
sub
lahf
rol
mov
pop
roll
aaa
push
or
out
stos
pop
pop
xchg
es
inc
and
test
inc
mov
imulb
sub
sti
ss
sbb
fmuls
xlat
cmp
or
cwtl
icebp
push
addb
aaa
enter
xor
mov
mov
ror
pop
ss
adc
mov
or
xlat
daa
dec
shlb
popa
mov
jo
shll
sahf
lock
xor
fwait
mov
cmpsl
pop
loope
ficoms
popf
inc
adcb
repnz
jne
inc
or
lret
cli
sub
fcomi
sub
int3
xor
flds
dec
push
shr
and
scas
mov
dec
test
jo
jp
jl
sub
orl
push
fwait
pop
mov
cltd
pop
cmp
movb
xor
cs
mov
mov
test
xchg
fstl
mov
fsts
rcl
je
inc
out
stos
movsl
stos
sub
adc
cmp
pop
inc
pop
or
ljmp
mov
sbb
push
jmp
cmpsl
lds
int
mov
jg
mov
pushf
xchg
xchg
hlt
xor
js
scas
inc
add
mov
sub
adc
xor
int
dec
sub
push
sub
scas
popa
addr16
js
mov
lods
rclb
arpl
lahf
fisttps
push
or
push
loope
sub
imulb
loopne
movsb
lcall
sub
cs
testb
xor
ja
in
mov
or
jge
xchg
ret
push
cmp
rol
mov
out
ret
int3
mov
mov
scas
adc
adc
inc
mov
in
test
fmull
filds
dec
push
mov
sub
pop
mov
cs
adc
dec
dec
push
jae
cld
or
cwtl
stc
mov
movsb
mov
pop
inc
popf
mov
cmp
push
repnz
inc
test
shlb
arpl
ja
lea
sub
vmovdqu
jo
jnp
push
cmp
orb
and
push
fildl
xchg
lcall
xchg
jno
ja
push
and
popa
xchg
cmp
jle
and
aas
rorb
clc
test
inc
fnstenv
push
out
lahf
xchg
lret
push
cltd
xchg
ss
pop
mov
adc
add
xor
add
add
std
out
lcall
cmpps
cltd
mov
sbb
icebp
fs
pop
mov
sbb
fsubs
push
mull
adc
out
cltd
dec
xchg
and
and
or
cld
or
imul
jnp
jg
out
adc
test
sbb
dec
cmp
scas
lret
inc
je
dec
out
cli
mov
xchg
std
popa
andb
aas
or
cwtl
lret
push
and
adc
mov
mov
push
daa
sbb
outsl
insl
cmp
inc
xor
fsubr
and
pusha
cmc
inc
inc
nop
fs
nop
movsl
jnp
mov
fs
jns
xchg
sub
add
add
cmp
pavgb
xor
cmc
fimuls
adc
imull
dec
sti
pushf
test
dec
jmp
fldenv
frstor
pop
ficompl
sbb
in
stos
jo
inc
ret
scas
testb
push
cmpsb
jne
lock
addr16
xor
sbb
lods
push
lahf
adc
push
push
and
mov
pop
mov
pop
subl
push
scas
mov
and
ja
movsb
stos
test
mov
dec
shrb
out
lahf
jns
push
pop
mov
minps
adc
mov
mov
out
xor
dec
or
into
shlb
rolb
mov
ljmp
inc
mov
in
push
fldcw
push
dec
dec
sub
popa
push
in
insl
repnz
pop
int3
inc
rorl
sbb
pop
loopne
paddw
or
in
mov
fbstp
pop
dec
lcall
mov
jecxz
leave
sbb
mov
dec
cltd
mov
in
outsb
insb
movsb
or
inc
and
fwait
enter
cli
pop
ret
negl
inc
ljmp
fidivrl
sub
lret
in
call
aas
push
cld
or
iret
iret
mov
rcrb
repz
dec
xchg
mov
popf
lods
sbb
inc
add
pop
fstl
push
and
std
adc
xchg
loopne
ror
test
pop
jo
je
pop
or
nop
or
inc
out
pop
push
sub
dec
stos
mov
or
popa
sbb
clc
inc
cmp
or
shrl
inc
fisubs
jb
xor
in
cld
lods
mov
dec
or
cmpsb
and
pop
mov
dec
lea
dec
jbe
dec
lds
ffreep
add
stos
cmp
adc
testl
in
bound
xchg
inc
pop
and
shlb
xchg
sbb
mov
jb
fsqrt
aam
and
in
daa
dec
testl
bound
aam
dec
push
sbb
sbb
push
jecxz
stos
repz
test
xchg
xchg
sbb
in
pop
test
push
jnp
mov
mov
push
enter
rcll
mov
dec
out
daa
mov
jmp
mov
pop
mov
pop
or
daa
cmp
jnp
jl
mov
in
sub
mov
xorl
add
fsub
popa
cmpsl
pop
out
mov
sub
adc
xchg
ret
mov
imul
add
dec
movsl
sahf
push
jecxz
aad
inc
inc
inc
or
iret
stos
in
sbb
popf
inc
jno
imul
xchg
aaa
andl
lock
fadd
out
xor
out
adc
inc
dec
out
xchg
ds
cwtl
adc
mov
in
add
in
sbb
aaa
push
inc
dec
sti
xchg
outsb
adcl
inc
push
fadd
jbe
movl
sub
jno
cmp
or
sbb
push
jno
aas
dec
test
imul
push
or
mov
mov
movsb
movsl
xor
loopne
mov
test
out
pop
dec
out
in
std
ja
enter
add
test
enter
enter
inc
add
push
loopne
push
fisubs
cld
or
and
mov
icebp
pop
rcll
movsl
or
xchg
je
sbb
stos
inc
shr
stc
mov
cltd
in
xchg
sahf
lret
test
xor
xor
pop
fisttps
lret
stc
xor
lods
dec
cltd
clc
das
mov
pop
fcmovnb
fisttps
push
cmc
cmp
loop
pop
mov
jl
pop
push
cmp
rcrl
lods
mov
xchg
ret
inc
inc
inc
int3
subl
sarl
sub
mov
xchg
sbb
bnd
add
add
cwtl
dec
dec
aaa
scas
inc
scas
or
dec
cs
int
fmull
out
aad
mov
subl
push
xchg
decl
ljmp
add
xchg
or
mov
sbb
shr
xchg
dec
mov
insl
add
in
mov
pop
mov
and
pop
leave
mov
addl
push
xor
jge
push
xor
imul
add
je
mov
xchg
in
aaa
jae
pop
test
dec
jmp
imul
pushf
imul
je
sbbl
mov
xor
movsl
push
mov
adc
mov
fimuls
icebp
int
roll
xchg
push
ja
loope
cmpl
cmpsb
jge
rol
shlb
or
push
mov
mov
enter
inc
in
lea
xchg
lea
filds
xor
adc
and
adc
in
test
and
outsb
sbb
stos
adc
jg
icebp
ss
pop
push
inc
lret
mov
gs
jecxz
test
push
btc
mov
push
jne
loop
cmp
fisubl
mov
fnstenv
out
inc
fwait
or
mov
repz
fs
cmpsl
insl
aad
push
gs
xlat
add
mov
jg
out
ffreep
inc
rcl
sub
xor
aas
sbb
movsl
jmp
call
fiadds
xor
xorb
jae
lret
pop
push
popf
push
mov
sbb
or
mov
pop
out
sbb
stos
jl
mov
add
das
mov
ret
fmulp
pop
dec
lock
cmp
sahf
adc
push
mov
xchg
lahf
js
addb
add
xor
movsl
insb
std
push
fistps
fucom
mov
popa
push
or
add
and
xchg
int
sub
pusha
in
das
add
jmp
or
inc
ja
sub
leave
add
aad
add
cmp
shl
xor
and
inc
mov
and
popa
mov
test
fcomi
pop
sub
xor
jecxz
daa
mov
in
loopne
and
or
repz
jnp
shlb
xchg
sub
int3
or
mov
xchg
fcomip
push
cs
cmpl
negl
in
jbe
pop
push
in
inc
iret
xchg
mov
pop
lods
fwait
mov
xchg
push
stc
enter
clc
jae
push
int3
aam
or
or
xchg
aaa
or
daa
jle
loope
pop
and
mov
xchg
mov
clc
sub
jle
adc
sub
pop
xor
xor
dec
testl
dec
jae
cmp
stc
outsl
cmp
sub
adc
dec
icebp
adc
pop
and
push
cwtl
push
fs
and
loopne
call
inc
sbb
mov
lret
stos
int
mov
xchg
les
push
ds
fwait
cmpsl
sbb
aaa
cmpsl
lcall
aaa
fiaddl
or
cwtl
dec
add
test
mov
mov
imul
dec
out
ja
xchg
inc
and
jb
data16
rol
gs
jecxz
loop
mov
cmp
pop
js
mov
xor
testb
negl
rorl
fidivl
stc
push
fcoml
jae
addr16
test
pop
add
adc
bound
inc
push
xor
flds
data16
fsts
or
mov
push
dec
sahf
jb
mov
in
js
dec
cmovb
add
testl
sbb
jbe
addr16
cvtps2pd
sub
ja
repz
faddl
aas
mov
inc
call
in
add
jg
cmp
or
cmp
addr16
call
xchg
hlt
sbb
or
jg
push
je
inc
and
inc
pavgw
iret
dec
adc
cli
fisubrl
sbb
and
mov
fmull
dec
jno
adc
jnp
add
fdivrs
jbe
gs
outsl
sbb
ljmp
nop
dec
mov
mov
mov
fucomp
sbb
cltd
aaa
dec
mov
inc
fbld
ret
mov
sub
add
movsl
lret
mov
cmp
icebp
fsubrl
clc
sub
sbb
mov
sub
sub
mov
sbb
push
dec
pop
cmc
lds
dec
ret
imul
pcmpeqw
xor
add
xchg
xchg
adc
xor
sahf
xchg
fs
cltd
movsb
fcomps
test
cmp
pop
sahf
jp
and
inc
xchg
xchg
push
cmpsb
out
bound
add
in
pop
xor
cmpsb
imul
das
mov
leave
stos
and
sub
mov
mov
lods
pop
mov
xor
sar
pop
mov
pop
imul
or
dec
adc
jns
xor
mov
arpl
shlb
cmp
adc
inc
push
and
push
sub
jne
ljmp
dec
jmp
push
sub
mov
mov
fldl
or
xor
mov
push
pop
fimuls
ds
movsl
ficomps
adc
pop
sbb
push
and
push
inc
lods
iret
fwait
xchg
out
or
jno
loop
xlat
xchg
pop
xchg
sub
lcall
frstor
lds
mov
mov
rorb
adc
jl
sub
fcoms
pop
mov
add
mov
cmp
repz
shl
adc
xchg
cmpsl
in
stc
pop
outsl
cmp
inc
sub
lods
jno
int
jge
add
dec
push
cli
xchg
enter
sub
jmp
push
jmp
mov
push
lret
mov
je
xchg
cltd
lcall
jno
lret
das
out
jmp
cmp
bound
cmpsb
outsb
dec
int
xchg
pop
std
je
cmp
inc
xchg
shlb
sahf
or
jle
mov
js
mov
dec
scas
pop
mov
notl
xor
jne
mull
std
mov
push
faddl
dec
sbbb
aad
aaa
inc
aas
inc
insl
push
out
or
das
sti
test
lret
test
outsl
inc
sti
jge
mov
dec
push
or
and
or
xor
cmpsb
divb
insb
xchg
insl
lret
testl
add
out
cwtl
lods
lcall
stc
clc
dec
and
pop
out
arpl
sub
mov
scas
mov
loopne
orl
pop
gs
cmpl
addb
xor
adcl
pop
movsl
mov
sbb
cmp
xchg
fcoml
sti
int3
insb
xacquire
or
fdivs
int3
loop
sub
mov
mov
icebp
jnp
decb
mov
fwait
cmp
repnz
fwait
xor
mov
jmp
xor
push
and
cltd
jnp
dec
das
sarl
je
xchg
into
ss
addr16
in
dec
ss
adc
cmp
inc
cmp
pop
ret
inc
mov
insb
icebp
sbb
inc
jne
fadds
xchg
pop
insl
lea
xor
dec
push
pushf
aaa
test
insb
int3
mov
push
addl
mov
test
jp
enter
jle
sub
adc
mov
stos
popa
pop
inc
enter
outsl
push
or
jg
dec
cmc
rcll
jl
adc
dec
xor
into
mov
int3
insl
scas
ficoms
unpcklps
adc
or
insb
inc
adcl
out
aam
mov
push
mov
aas
bnd
fiaddl
lock
xor
dec
add
adc
movsl
fmull
rclb
dec
xor
push
lcall
mov
mov
xlat
addr16
xchg
or
out
jbe
scas
jno
test
sahf
aad
xchg
int
pop
shlb
or
loope
cmp
adc
inc
mov
movsl
ljmp
lret
mov
out
cmpsl
mov
icebp
repnz
mov
xor
mov
push
cmp
out
in
cmp
inc
fldcw
cmp
repnz
mov
mov
daa
leave
jmp
dec
das
sbbl
aam
aad
xor
lea
add
cmpsb
pop
lret
ljmp
pop
test
ret
ss
jecxz
jae
cli
jae
xchg
xor
movsb
pop
mov
or
scas
or
rolb
push
popa
stc
sbbl
jmp
or
sbb
xchg
push
dec
repz
jg
sbb
icebp
add
or
movsl
pop
mov
cld
xorl
adc
gs
inc
sbb
bndstx
sub
inc
xlat
mov
lea
jge
sbb
scas
inc
jne
xor
inc
xchg
cmp
lret
aas
push
lds
cmpsb
stc
jg
xor
gs
xlat
andl
fdivrs
cld
loope
outsl
jmp
jg
xor
mov
pop
stos
mov
jp
mov
mov
lds
add
cmp
dec
adc
push
enter
mov
dec
lock
mov
jb
lret
outsb
push
fidivl
lods
in
mov
xchg
in
mov
push
bswap
popf
and
or
mov
pushf
mov
repnz
mov
adc
lahf
clc
mov
fdivs
loopne
and
aaa
sbb
aad
leave
or
fwait
ss
ret
or
mov
hlt
mov
in
xor
lahf
lock
pushf
pop
test
or
cld
out
cmp
mov
mov
mov
out
fidivrl
ret
ss
pop
movb
xor
push
xchg
inc
frstor
movsb
and
push
cmp
stos
and
mov
ret
sarb
gs
loope
fsts
movsb
cmc
sarb
xor
and
shlb
sub
and
push
xchg
loop
in
int3
fistpll
daa
cmp
inc
stc
push
in
sub
aas
inc
or
push
push
dec
test
andl
subl
cmp
xchg
pushf
sbbl
movsb
movsb
xchg
jg
insl
and
stc
stos
inc
popl
xchg
mov
push
imul
and
jecxz
leave
inc
mov
dec
out
push
pop
push
shrb
cs
je
leave
dec
mov
test
mov
add
jo
hlt
js
sbbb
mov
jne
push
imul
jo
adc
or
xchg
jecxz
sbb
adc
pop
and
pop
iret
pushf
out
cmp
cmp
in
push
nop
and
fistpl
je
daa
cmp
xor
mov
jg
stos
lret
adc
push
nop
dec
mov
cmc
and
popf
pavgw
sub
ds
clc
jg
mov
jmp
mov
add
notl
mov
int3
fidivs
pop
nop
dec
les
ret
jae
insb
jge
scas
cmp
stos
and
pushf
pop
mov
sub
xchg
mov
xchg
filds
into
addr16
jmp
inc
push
xchg
sbb
jae
les
ret
roll
jmp
dec
ret
or
jns
inc
xor
lcall
leave
adc
mov
jno
hlt
inc
pop
test
loop
or
iret
or
jecxz
dec
mov
movsb
ja
and
and
stos
lods
fs
iret
pop
pop
lahf
aad
ss
add
pusha
bound
adc
fs
in
fnstsw
gs
adc
mov
jle
movsl
push
lods
mov
push
or
fs
fisttpll
and
xchg
and
enter
pop
inc
pop
frstor
adc
cs
shlb
stos
testl
aad
addr16
gs
xchg
aas
pusha
push
inc
cwtl
icebp
adc
jecxz
shlb
dec
fidivrl
repnz
pop
icebp
cmpsl
cmp
jle
popf
dec
call
mov
addr16
xorb
dec
pop
lods
ljmp
imul
or
xor
sbb
sbb
cli
cmpsl
mov
mov
andl
push
loop
push
and
cltd
in
xchg
scas
int
test
mov
push
fwait
test
stos
addr16
lcall
jno
mov
adc
adc
xor
xor
mov
inc
mov
scas
or
mov
in
adc
pop
std
fisttpl
out
icebp
dec
into
xorb
fsts
cmp
dec
shrl
cmpsl
jge
mov
hlt
rcll
push
mov
fldenv
out
repnz
mov
aaa
xor
std
fdivr
mov
movsl
pop
aam
push
inc
pop
call
or
sub
outsl
push
mov
loopne
jge
aas
mov
push
sarb
push
mov
lret
and
pop
inc
pop
nop
pusha
mov
sbbl
hlt
je
pop
into
jne
aas
cmp
cmp
mov
mov
pop
dec
loopne
hlt
jle
inc
std
inc
adc
incb
inc
mov
lahf
adc
incb
adc
fists
jp
loope
mov
icebp
mov
test
repnz
stc
fs
xlat
xchg
jne
out
cmp
push
divl
mov
mov
addl
in
scas
push
sub
out
xor
pop
aas
adc
imul
shlb
mov
jmp
pop
cvtps2pi
mov
clc
in
cmpsl
or
dec
rorl
jl
pop
lahf
xor
dec
pop
pop
testb
arpl
subb
fwait
push
xchg
popw
mov
mov
mov
shrl
aam
dec
mov
cmpsl
das
pop
add
dec
and
xor
xchg
js
mov
shlb
or
repz
cmc
data16
out
test
sarb
fcmovu
push
dec
popa
xchg
imul
pop
push
pop
mov
mov
pop
mov
xlat
movsl
int
pop
scas
adc
out
hlt
cmp
or
add
add
scas
stos
jno
hlt
xor
add
sub
es
ficomps
imul
ror
add
movsb
cld
pop
or
stos
mov
je
dec
lods
mov
das
negl
jle
push
out
cld
push
cmp
xor
imul
int3
xor
mov
cltd
xchg
xchg
push
push
ljmp
cmp
and
mov
push
and
out
jnp
ret
scas
push
adcl
xchg
sbb
and
pop
mov
sbb
inc
mov
in
and
inc
in
ds
sub
daa
and
push
fsubl
push
repz
adc
in
adc
lea
lock
out
sbb
jbe
es
pop
inc
pop
dec
jle
push
push
flds
repnz
inc
sbb
fs
outsb
sbb
ret
sub
pop
and
mov
clc
fcoml
sahf
loope
push
or
pop
out
in
lock
add
and
push
sub
sbb
js
and
mov
jg
aad
test
inc
sbb
mov
fsubrl
movsl
cmc
enter
inc
roll
xor
fdivrl
cli
inc
loope
xor
cmp
cwtl
inc
addl
test
mov
popf
imul
xor
jp
xor
imul
and
push
stc
ja
loope
insl
mov
les
iret
xor
mov
push
cmpsb
inc
ljmp
push
out
mov
loopnew
daa
repnz
xchg
insl
lock
cmp
or
mov
insb
jmp
ret
mov
in
push
mov
jnp
daa
icebp
addr16
push
inc
xor
inc
out
xchg
xchg
rclb
cmp
lods
xor
adc
es
push
sahf
pop
mov
xchg
cltd
rcll
outsb
jo
adc
es
mov
adc
int3
lock
aad
movsb
lods
pop
pop
sti
adc
fwait
or
loop
test
mov
ljmp
sub
fcomip
adc
or
loope
jl
sbb
push
icebp
int3
pushf
test
xchg
mov
imul
jl
sub
sub
fsts
jg
cwtl
adc
int
aam
outsb
shr
and
je
dec
dec
add
or
adc
subb
stos
cmp
inc
jmp
outsl
push
scas
iret
pop
xchg
int3
test
arpl
inc
mov
testl
mov
xchg
pop
xor
sti
push
ds
movsb
mov
pop
outsb
aad
pop
lds
iret
mov
push
clc
push
call
popa
test
incb
jl
jle
pop
adc
sub
lock
sbb
movsb
xchg
enter
call
push
xor
fcoms
sbb
or
jle
push
push
or
cmc
mov
ret
cmp
fcom
and
push
mov
xchg
xchg
lds
aas
or
push
mov
les
sti
test
push
push
xchg
cs
sub
jle
xorl
or
mov
lods
jbe
mov
pop
cmp
daa
imul
jo
xorl
mov
test
jbe
cltd
fwait
jne
stos
leave
jp
sub
js
lods
jmp
ret
mov
std
clc
mull
jno
out
or
imul
add
jnp
mov
push
lahf
cmp
enter
mov
mov
or
xchg
sub
or
mov
or
sub
into
scas
in
outsb
mov
ss
pop
add
addr16
or
or
sbb
sbb
jne
call
cltd
pop
dec
es
int3
fistpl
jae
dec
sub
dec
pop
cmp
jnp
fidivrs
arpl
les
pop
popa
adc
inc
mov
dec
sub
in
into
sahf
lea
xchg
fdivrs
xchg
xchg
dec
aaa
daa
fnsave
sti
punpcklwd
mov
dec
jbe
fsts
sbb
pushf
adc
xchg
in
cmp
push
aaa
lods
dec
xchg
inc
jp
mov
testl
movsl
lods
sahf
add
mov
testb
xor
inc
push
es
inc
mov
js
popf
jmp
xorl
out
cli
cs
into
push
push
and
inc
stc
jmp
or
in
xchg
adc
loopne
fmulp
js
xor
jp
xor
mov
sbbl
xor
and
scas
adc
xor
mov
push
xchg
aam
in
test
and
xchg
push
adc
sub
fists
sub
and
mov
stos
shl
inc
or
out
or
popa
jp
mov
fadds
shlb
sbb
out
jge
cmc
fimuls
hlt
xor
fxch
mov
sbb
out
jecxz
mov
mov
pop
ftst
adcl
jl
ret
sbbb
mov
mov
daa
jnp
mov
aam
push
pop
test
out
hlt
or
les
add
dec
cmp
xor
rcrl
sbb
insl
dec
xlat
fcoml
clc
stc
jmp
xchg
insb
setno
popa
in
xor
inc
popa
int
cmpsb
das
fdivl
inc
push
inc
enter
movsb
sub
sbb
out
movsb
rcrl
lret
and
les
leave
inc
jno
jg,pn
pop
imul
jae
adc
xorb
sbb
ljmp
loopne
rcll
pushf
dec
cmp
scas
movsl
cld
add
ss
mov
dec
adc
mov
cmp
pop
imul
jmp
stc
stos
inc
pushf
xor
push
andb
movsb
mov
push
add
test
mov
jle
add
mov
mov
hlt
mov
xchg
jle
sub
cmp
into
cmpl
repz
fnstenv
je
test
xchg
and
mov
cmp
xor
das
fdivs
dec
cmc
xchg
sbb
mov
and
cmpsl
les
test
dec
sbb
cli
das
loop
or
pop
lea
shll
sbb
jo
mov
xor
sbb
stc
or
ja
xchg
xor
push
ja
lahf
push
cmp
cltd
adc
fcmovne
adc
dec
xorl
jecxz
mov
cli
add
pushf
pushf
arpl
ljmp
mov
out
outsl
imul
push
scas
or
inc
mov
dec
xchg
inc
pop
lcall
mulb
cmp
repnz
mov
scas
adc
xlat
sbb
pusha
push
ret
cwtl
insb
mov
xchg
or
jne
adcb
pusha
lods
je
insb
mov
mov
push
and
push
out
lea
movsl
lea
sbb
fs
sub
jb
je
or
and
jg
pop
mov
push
and
xchg
adc
sub
call
pop
repnz
cmc
jg
cmpsl
les
jmp
or
fwait
fs
int3
fidivrs
fisttps
negb
adc
insb
sbb
xor
jno
ja
cmpl
cmc
out
daa
dec
sub
sti
test
xchg
outsl
js
cmp
mov
sbb
shll
inc
mov
or
adc
xchg
pushf
in
add
hlt
and
cwtl
mov
loope
inc
dec
xchg
sti
inc
add
shlb
andl
or
mov
jb
pushf
es
dec
rcll
lods
loop
mov
lcall
mov
cwtl
and
test
and
inc
loop
stos
mov
push
daa
test
out
push
fld
jmp
mov
stos
cmp
stc
or
movsb
incl
jmp
or
inc
push
ja
mov
outsb
pop
int
int
jnp
lahf
and
jb
test
or
movsl
in
movsb
adc
popa
dec
sbb
pushf
pop
push
je
xchg
cmp
popa
jge
fimuls
add
inc
in
ficoml
test
cld
pop
or
xchg
push
fisttpl
cmpsl
jmp
outsl
pop
xor
out
ja
xor
ss
xor
jo
xchg
push
and
fadds
inc
xor
mov
femms
and
add
outsl
pop
jg
adc
gs
cmp
leave
iret
test
mov
sbb
arpl
cmp
and
xchg
xchg
xor
push
fstpl
fs
pop
push
arpl
cmpsb
jle
inc
cs
cwtl
sbb
push
ss
int3
mov
iret
mov
int
in
cli
insl
arpl
xchg
ror
pop
int3
aam
aad
mov
xchg
pop
lret
adc
dec
or
or
shl
cmp
add
jmp
int
add
popl
sub
mov
movl
or
adcl
or
mov
pop
ret
hlt
push
lods
cwtl
dec
jl
in
cmp
push
outsb
aas
lods
lods
std
dec
cmpsb
sub
das
jns
rcrb
sahf
and
add
call
jno
jmp
nop
mov
cmp
dec
cltd
out
jne
loope
dec
ds
cld
jp
and
sub
mov
jmp
adc
adc
push
add
push
mov
pop
push
shlb
xor
mov
test
push
popf
xor
lcall
fidivrl
daa
fldt
xor
mov
dec
js
es
sub
aaa
fwait
jge
sub
cmp
aaa
and
jg
neg
dec
pop
push
pusha
fbld
int3
popl
adc
aas
out
int3
jmp
pop
les
dec
pop
adc
lret
inc
cmpsl
mov
pop
fs
push
xlat
ds
xor
mov
adc
test
jge
js
ds
sub
push
leave
pop
fsubl
adc
or
adc
xor
or
sub
pop
js
imul
mov
cmp
sub
dec
mov
aam
bound
sub
dec
cmp
mov
outsb
test
mov
xchg
xor
in
loopne
xor
fbstp
pushf
pushl
gs
popf
or
push
inc
or
stos
mov
repnz
jbe
xchg
daa
jnp
pop
fisttpl
aad
clc
ffree
fdivl
bound
fs
loop
fsubl
sti
adc
mov
in
lds
cmpsb
mov
jle
lahf
dec
int
sub
jno
pop
pop
xchg
sbb
pop
xchg
sbb
mov
push
push
fisttps
jecxz
sbb
add
mov
imul
fists
fildll
jmp
mov
inc
pop
bound
enter
and
shld
sub
clc
or
and
sub
sub
push
jg
adc
push
movsl
popf
pop
mov
cs
jnp
add
mov
xchg
lcall
jge
pop
sbb
jle
call
inc
adc
pusha
js
xor
les
push
lds
xchg
call
add
jno
int3
xor
out
stos
sub
push
rclb
add
mov
fildll
loopne
sbb
mov
out
xor
jmp
pop
outsl
lock
adc
lcall
sub
sub
cmc
jno
clc
jo
cmp
xchg
push
mov
pop
inc
pop
fwait
mov
jno
mov
xor
mov
or
bnd
ljmp
aaa
jae
fnstenv
pop
repz
lods
sbb
cld
inc
das
aaa
mov
loope
popa
and
push
pop
adc
pushf
fcoml
ds
xchg
call
jb
ja
sbb
mov
push
clc
dec
dec
not
sti
shrl
push
loop
dec
fistpll
dec
cmp
rcl
cwtl
pop
aaa
inc
sbb
adc
inc
int
sbb
push
stos
xchg
pop
or
adc
jnp
out
ja
mov
stos
jae
sub
cmp
mov
popf
fwait
mov
enter
les
out
jl
mov
mov
sti
rcl
scas
loopne
or
mov
jno
push
test
sub
xchg
mov
cld
sbb
sbb
ljmp
pop
mov
das
pop
inc
jbe
adc
loope
popf
in
fmull
ja
out
fsubl
jns
into
leave
sbb
clc
xor
shrb
jae
inc
xchg
test
enter
sub
push
adc
xor
hlt
or
pusha
das
push
sub
repz
mov
mov
jecxz
add
pop
negb
outsb
or
inc
push
in
mov
xor
out
testb
andl
je
jo
add
mov
xchg
push
popa
aam
rolb
std
mov
rcrb
in
and
std
cli
xchg
mov
inc
mov
dec
add
fs
packsswb
sbb
or
shll
add
mov
inc
cmp
xchg
fisttps
imulb
mov
fistl
insb
dec
stos
jg
mov
sub
mov
mov
pop
add
and
cmp
or
jge
mov
pmaddwd
pmulhw
sub
outsl
mov
and
add
stos
mov
dec
xchg
insb
adc
mov
jge
inc
cmc
shll
outsl
xor
sbb
push
pusha
xchg
xchg
jp
sub
cwtl
mov
sti
outsb
cmpsb
or
testw
fcoms
outsl
jno
cmp
and
ret
dec
aas
pop
insl
in
sahf
mov
xor
mov
add
es
rcrl
lods
out
fwait
push
mov
pop
sarb
es
and
ja
fdivrl
inc
pop
mov
fcmove
in
add
insb
lds
pop
test
sub
mov
ja
movl
out
loope
or
cmpsb
aam
sbb
stos
sbb
shl
xchg
mov
rcr
aam
inc
sbb
inc
out
ret
ds
dec
aaa
inc
mov
cmpsl
shr
fidivrl
jne
add
add
data16
pop
add
mov
divb
sbb
add
cmp
outsb
sbb
inc
sbb
jae
add
cmp
inc
gs
imul
adc
fwait
gs
mov
movsl
ss
pop
xlat
into
imul
mov
scas
loope
inc
inc
mov
movsl
add
sahf
test
out
xchg
mov
jp
in
push
test
orl
jb
mov
push
inc
arpl
cmp
push
jp
pop
mov
xchg
lahf
inc
xchg
jb
ret
das
sbb
outsl
fisttpl
scas
aaa
push
les
xchg
cmp
push
pop
push
mov
popa
jp
sub
xor
clc
xchg
ljmp
and
dec
xchg
int
scas
jmp
rorl
shlb
xchg
xchg
fstps
js
lods
jb
pop
in
in
adc
loope
data16
lret
and
lahf
notl
adc
sbb
mov
adc
fld1
imulb
mov
loope
out
sub
mov
imul
or
outsl
in
pop
or
push
adc
test
call
sbb
flds
pop
cs
or
sub
mov
inc
test
dec
in
jge
ja
sub
hlt
ret
test
sub
repnz
popf
push
pop
jecxz
inc
lods
add
pop
jle
xchg
clc
ja
mov
fistps
add
cmp
cmp
cmpsl
mov
fwait
outsb
mov
cs
dec
out
and
lret
gs
in
jo
add
cltd
dec
cmp
cmp
jbe
and
imul
add
in
outsb
lds
fs
je
jb
jne
loope
shlb
adc
pop
mov
xorl
imul
aam
xchg
mov
pop
shrb
std
adc
lret
mov
pop
xor
shrb
in
jne
pop
or
scas
jbe
ljmp
je
adc
xchg
cmpsb
push
and
loop
shrb
mov
add
push
scas
pop
arpl
xor
push
data16
and
adcb
sbb
xchg
cmp
out
mov
call
inc
and
mov
ds
push
mov
outsb
cmovle
mov
jmp
cs
adc
imul
pop
test
xor
das
and
cmp
push
lds
rorb
or
push
test
lcall
imul
mov
jp
lcall
shlb
mov
pop
pop
scas
adc
rcrl
inc
sbb
popf
push
cmp
mov
andb
shlb
push
out
pop
xchg
aaa
fidivl
pop
add
pop
pop
daa
add
push
push
add
bnd
dec
add
in
je
cmpsl
xlat
sbb
mov
iret
inc
inc
aam
pop
or
aaa
addr16
xchg
test
jb
jae
add
add
lock
lret
movsb
dec
sub
xchg
xchg
jl
je
sarb
fisttpll
add
mov
mov
in
rcl
cmc
xchg
addr16
jae
push
js
lret
pusha
pop
dec
push
enter
jns
les
xchg
dec
push
rolb
mov
movsl
mov
mov
xchg
push
idivb
fnstenv
stos
mov
mov
add
es
test
int
jnp
sub
mov
pop
dec
mov
lcall
cmpsl
lock
jecxz
std
testb
push
call
adc
mov
inc
daa
fstl
outsl
dec
pop
mov
push
push
sahf
std
adcb
sbb
sub
push
movsb
out
scas
shl
shll
rorb
sbb
push
add
mov
pop
ss
aas
inc
test
lcall
fldl
or
and
pop
std
ljmp
mov
in
repz
es
fists
les
sub
inc
xchg
aam
sarl
jmp
clc
test
add
jo
jnp
ret
pushf
enter
jg
pop
in
gs
dec
add
pop
call
jle
dec
fwait
and
sbbl
and
mov
dec
and
ret
in
add
xchg
cmpsl
adc
rcrb
mov
adc
sbb
test
enter
xorl
test
popf
in
inc
roll
cmpsb
out
lock
cmpsl
aad
jne
xor
add
mov
xchg
jns
mov
divb
add
jo
mov
ficomps
daa
add
jno
push
jmp
xor
cwtl
xor
mov
mov
add
pop
xchg
out
push
in
repnz
add
xor
add
sbb
enter
inc
xchg
movsl
inc
xor
push
and
iret
pop
xor
pop
mov
ficoml
icebp
or
jle
xlat
sbb
add
outsl
ror
cmp
ljmp
stos
aam
dec
sbb
lret
cltd
fildl
outsb
mov
mov
movntq
or
sub
dec
loop
fwait
dec
lahf
out
insl
and
and
loopne
cmpsl
inc
les
mov
jns
inc
inc
and
divl
mov
data16
testb
cmp
inc
mov
sub
aaa
mov
add
xor
xor
jb
and
int
or
jg
shl
jae
adc
jb
test
jnp
lods
es
mov
jmp
daa
test
jmp
ss
into
mov
inc
adc
negb
cmpsb
divb
mov
push
sbb
call
pop
shl
sbbb
jbe
inc
xchg
sbb
xchg
push
sub
mov
sbb
mov
cld
dec
add
cmp
popa
jne
in
mov
push
xor
or
inc
inc
push
sti
or
xlat
and
notl
jge
icebp
ret
adc
sub
scas
and
ljmp
movsl
insl
inc
jle
mulb
pop
pop
ss
push
cmp
cli
inc
call
adc
aaa
dec
mov
stos
jo
leave
dec
and
add
mov
das
loop
insl
je
mov
or
xchg
out
jne
js
xor
fucomip
sbb
cli
xchg
push
mov
cmp
daa
or
sub
lret
jp
cs
mov
adcb
dec
cmp
fldl
mov
xor
out
or
jp
push
cmpsb
jp
fildl
daa
leave
jmp
daa
fs
lea
enter
leave
xchg
jp
or
movsl
movsb
xchg
mov
mov
ja
and
in
insb
outsl
mov
xor
pop
sub
inc
movsb
mov
xor
decb
insl
out
fidivrs
sub
dec
push
and
mov
adc
jo
notb
dec
subb
xorl
in
lahf
mov
jp
xchg
dec
fdiv
pop
decl
test
andl
gs
pop
aaa
mov
leave
or
and
xor
mov
mov
push
dec
xchg
push
jbe
ja
dec
pop
and
push
push
pop
rorb
ret
aas
dec
mov
out
in
jbe
lds
pushf
xor
adc
scas
test
mov
out
mov
cwtl
and
fs
movl
std
mov
mov
mov
push
add
jge
test
pop
mov
imul
xchg
and
xchg
shlb
ret
fstl
or
int3
pusha
adc
pminub
pusha
and
rol
push
jae
pop
or
fwait
repz
cld
jl
mov
call
les
mov
mov
jb
mov
mov
cmpb
pop
aas
loop
cmp
inc
lock
inc
pop
mov
push
and
out
add
jp
jnp
and
or
or
xchg
pop
cmpsb
jmp
nop
cmc
add
cld
add
loopne
push
push
mov
repnz
push
push
jne
push
inc
sbb
test
sbb
pop
hlt
iret
push
test
jge
mov
sbb
sbb
ss
inc
push
xor
mov
je
xor
xchg
rclb
xor
and
mov
mov
adc
js
fistpl
cs
and
dec
jbe
andb
in
push
cmpsl
or
add
ret
movsl
repz
enter
daa
subb
add
movsl
jns
ret
cwtl
jae
jns
and
cmp
movsl
testb
imul
clc
cmc
mov
jns
sub
daa
outsl
xchg
stos
subb
cmp
jecxz
jno
dec
mov
leave
mov
mov
jae
jns
jns
out
lds
std
lcall
add
inc
mov
mov
stc
outsl
insb
movl
sbb
daa
xlat
cmpsl
sub
xchg
inc
faddp
outsb
and
mov
pop
rclb
jmp
ret
jge
and
cli
push
decl
cmp
jo
mov
lock
testl
cmp
sub
roll
enter
ds
fmull
or
xchg
dec
sbb
inc
loope
jl
aaa
cmpsb
in
or
js
cmp
aas
dec
fstpl
xchg
adc
dec
add
jle
sahf
xchg
dec
sbb
and
je
cmc
cmp
loop
pusha
mov
les
mov
dec
add
xchg
or
mov
xor
xlat
mov
mov
lcall
in
mov
mov
repz
loopne
rcrb
mov
sbb
and
rcrl
dec
lea
stos
iret
push
or
stos
pop
mov
lds
jno
jnp
xor
or
xlat
test
lahf
xlat
cs
xchg
cs
lret
sarb
mov
in
push
scas
hlt
daa
fcos
pusha
insl
sub
insl
pop
stos
loopne
fnstcw
ja
dec
sub
pop
push
movsb
mov
imul
icebp
stos
pusha
push
or
cmc
dec
push
scas
cmp
xchg
es
cmp
jnp
fs
shll
ja
clc
hlt
insl
out
in
insl
cltd
xchg
add
ss
sub
in
or
add
loopne
mov
mov
mov
in
test
jmp
imulb
mov
lret
add
xchg
int
or
xor
sub
test
mov
mov
in
repz
xorl
call
sub
scas
incb
lock
jg
mov
xchg
xor
shrl
cmp
push
or
xchg
lock
enter
xchg
aaa
pushf
popa
lock
dec
insl
lds
fisubrs
outsl
xchg
mov
adc
cmpsl
adc
and
sbbb
mov
pop
push
iret
push
mov
jl
sub
sbb
xchg
in
lods
or
test
adc
adc
dec
sub
in
cmp
test
das
or
and
pop
push
xchg
bsf
xorb
dec
inc
lcall
and
mov
loope
mov
inc
imul
jnp
sbb
or
push
xchg
xchg
jp
mov
fdiv
xor
mov
sbb
mov
cs
sbbb
sub
jmp
mov
adc
add
leave
jns
add
xor
adc
mov
test
loop
in
push
push
lret
cwtl
pop
sub
adc
jbe
out
lcall
jg
cltd
cmc
mov
mov
fisubl
dec
aam
push
ja
ljmp
ja
jge
xchg
sbb
and
or
push
xor
or
aas
push
and
jns
mov
mov
jo
fs
mov
stos
jg
add
rcll
in
xchg
daa
in
hlt
nop
mov
jnp
add
cmp
add
fists
aas
js
mov
lret
mov
repnz
sub
xchg
mov
repnz
pop
insb
pop
xchg
addr16
out
xor
lret
lahf
out
inc
xor
adc
mov
bt
cltd
fisubl
sub
mov
sub
mov
decb
jbe
lea
dec
dec
inc
ret
sahf
ret
sub
ret
repz
cmpsl
pop
sarl
and
call
nop
test
xlat
fs
je
les
mov
movsl
push
sub
mov
fistpl
sti
push
mov
inc
sub
ds
ljmp
push
hlt
icebp
and
cld
in
js
mov
out
push
pinsrw
fistl
mov
iret
call
adc
sub
or
clc
push
shlb
push
jne
rcrb
xor
lods
in
test
mov
or
fisttpl
mov
shrb
fwait
dec
mov
into
pop
push
daa
loopne
xor
pop
sbb
cmp
sub
ret
mov
xchg
out
push
mov
cmp
and
loop
aas
inc
push
fstl
mov
or
jmp
mov
mov
jnp
mov
sahf
mov
arpl
mov
enter
add
imul
out
aaa
mov
into
nop
jbe
add
mov
and
mov
js
or
pop
push
and
or
jno
fiaddl
shll
rcl
or
scas
xchg
pushf
cmpsb
cmp
pop
gs
stos
jle
rcr
mov
in
addr16
cli
push
sbb
lock
fisttpll
or
out
xchg
das
aas
sbb
movsl
cmp
or
test
sarl
mov
xor
mov
sbbl
in
movsl
int
dec
pop
dec
rclb
icebp
dec
push
jb
or
cmp
fistpl
cs
test
mov
push
cltd
push
cmp
fidivrl
jmp
sub
pusha
pusha
and
aam
xchg
jbe,pt
xchg
in
or
cmp
ret
sahf
jle
jns
aaa
js
js
popf
adc
jecxz
mov
inc
sbb
push
sub
push
jnp
data16
lahf
xor
mov
or
in
cmp
aam
cmpsl
mov
movsl
inc
in
cld
outsl
int3
jne
ds
scas
out
mov
xchg
or
test
fwait
mov
inc
push
xor
mov
mov
in
fcomp
xor
call
mov
cs
ror
sub
pop
inc
fwait
sahf
cmp
inc
dec
cmpsb
sbb
dec
sbb
into
xor
scas
inc
lret
jmp
pop
inc
test
cwtl
xor
push
or
xor
jno
sbb
or
jae
nop
repnz
rclb
rcrl
pop
pop
cmp
xchg
flds
jo
and
shrb
test
sub
test
mov
xchg
xor
xchg
imulb
mov
insb
lds
cmp
sbb
cmp
mov
iret
dec
lahf
out
int
adc
cmp
or
test
add
jb
std
or
in
cmpsl
aad
mov
cmpsl
enter
add
and
inc
fidivs
adc
pop
add
cld
lods
jae
and
outsl
out
test
jno
fwait
movsb
mov
clc
mov
fiaddl
and
les
push
push
jb
shrl
sbb
or
rorb
lret
rcrl
mov
add
cmp
movsb
lods
ret
mov
push
inc
addr16
call
cmpb
ja
daa
les
scas
and
lods
rolb
popf
les
inc
repnz
mov
mov
pop
ret
inc
daa
push
sarb
leave
ret
add
pop
push
add
fs
push
sub
std
pushf
loopne
push
mov
jne
add
cli
and
mov
xor
faddp
fidivs
test
call
test
lock
pop
into
lock
mov
stos
sbb
cmp
dec
stos
mov
cmp
icebp
insb
fabs
jo
loope
out
negb
cld
sub
dec
ret
xlat
lock
sbb
das
les
bound
pusha
cld
lods
popf
xchg
add
data16
scas
rcrl
push
push
pop
pop
xchg
cmp
mov
jge
adc
data16
std
pop
movsb
adc
or
lret
xchg
in
inc
mov
push
iret
pop
imul
lods
in
xor
fidivs
insb
jae
jl
xchg
stc
mov
adc
ja
pop
ret
fsubs
loope
lds
jns
addb
sbbl
xlat
xchg
mov
stos
fisubs
dec
gs
add
or
adc
into
adc
push
cmc
jl
hlt
bound
mov
jmp
lcall
jecxz
push
test
std
pop
xor
rorl
dec
add
push
or
ljmp
xchg
xchg
add
xchg
les
sbb
test
lods
outsl
daa
aas
out
jl
aaa
xchg
ljmp
test
fcoml
xchg
sub
je
daa
sbb
or
rcrl
pop
lds
jne
cld
pop
out
and
xor
rorl
lcall
in
cs
int
jecxz
int3
stos
aaa
fwait
xchg
push
dec
xor
mov
push
mov
xchg
ss
shlb
int
scas
sbb
inc
daa
mov
add
ljmp
or
out
mov
and
push
outsl
mov
mov
dec
sarl
mov
in
jmp
xchg
inc
mov
push
dec
jecxz
pop
xor
rolb
cmp
fldl
gs
xor
mov
loop
adc
dec
pop
in
push
mov
or
mov
cmpsb
pop
push
push
cld
filds
mov
shr
out
ret
in
jecxz
insb
addr16
sbb
mov
pusha
int
insb
sahf
mov
bound
mov
add
xor
push
ja
shlb
mov
mov
xor
sub
mov
sub
lret
jle
or
test
push
push
push
inc
mov
xchg
aas
add
les
ret
adc
sbb
fisttps
pop
dec
adcb
idiv
stos
mov
imul
pusha
jge
inc
cli
inc
in
shl
call
sbb
test
and
aad
loopne
inc
movsl
dec
inc
ror
cmp
sub
jg
imul
inc
ja
sub
mov
xchg
push
cwtl
sahf
pop
out
pop
mov
xlat
mov
in
leave
jg
and
bnd
aas
aam
fldt
or
jge
int3
aaa
cmp
insb
lcall
sub
push
ret
out
push
xor
in
jp
xchg
div
dec
pop
xor
loop
cmp
pop
jnp
or
movnti
lea
cmp
pushf
and
or
push
int3
lock
xor
ds
xchg
jnp
push
add
loop
pop
mov
div
inc
pop
jecxz
xchg
mov
sarl
das
jmp
sti
cli
arpl
popa
arpl
xchg
ret
jno
xlat
mov
sub
jg
cmc
rcrb
jl
xchg
leave
push
add
dec
sub
mov
or
xchg
jecxz
jge
lcall
xor
pop
mov
lods
push
jnp
and
pop
std
jp
pop
jecxz
sbbb
rcll
or
mov
jp
mov
xchg
lret
mov
int
cs
pop
movsl
mov
daa
rorb
rol
sub
in
out
jg
xchg
inc
pop
push
inc
fisubrl
popa
adc
push
sub
ret
mov
lds
filds
push
repz
ss
xchg
and
gs
scas
xor
and
cld
push
inc
aas
or
inc
lods
inc
adc
xchg
cmpsl
out
pop
push
sbb
sbb
and
pop
mov
pushf
sbb
lds
mov
xor
push
xlat
add
sbb
fstps
sub
fstpt
sti
dec
cmp
sbb
dec
int
stc
pextrw
pop
mov
movsb
in
pop
mov
push
push
pushf
ret
xchg
mov
push
lahf
add
or
adc
mov
adc
cltd
add
cwtl
cmpb
push
xchg
mov
testb
add
mov
fnstenv
dec
pushl
shlb
stos
lea
fsubp
or
mov
aas
out
aam
or
scas
jge
push
test
in
sbb
ret
outsl
data16
xchg
xlat
mov
dec
ret
mov
dec
test
ljmp
mov
fs
mov
xor
inc
pop
inc
sbb
out
mov
xchg
cmpb
sarl
pop
and
shl
in
jb
lret
cmp
mov
dec
bswap
cld
cwtl
test
iret
stc
xchg
inc
mov
aad
movb
push
movaps
dec
jns
pop
adc
pop
or
and
mov
jp
bound
clc
insb
xchg
cmp
xor
popa
mov
int
xor
flds
rcr
in
ds
mov
cmp
mov
lahf
add
mov
or
add
addr16
or
xchg
dec
cmpsl
push
pushw
in
aad
pop
mov
sbb
int3
inc
rcrb
xchg
xor
mov
or
push
fadds
ds
insl
adc
xchg
sbb
mull
inc
mov
xchg
je
sahf
stos
push
mov
jp
adc
test
jg
sub
cwtl
shlb
cli
or
out
or
push
mov
call
add
fisttps
sbb
arpl
push
xor
sbb
push
jmp
jg
aad
fbstp
and
rol
sub
pop
iret
cld
mov
scas
lcall
xchg
in
pusha
mov
jae
daa
js
sbb
cmpsl
pop
int
daa
leave
hlt
outsb
in
icebp
cmp
dec
push
fnstenv
sbb
jecxz
enter
testl
push
pop
jnp
xor
pop
insl
ret
dec
inc
mov
cmpl
out
cmc
imul
pop
xor
mov
out
xor
daa
pop
rcr
push
mov
pop
fnstenv
sub
sub
std
jmp
cmpsb
cmc
mov
xchg
sub
outsw
add
sarb
arpl
test
gs
fucomi
xchg
and
jbe
jno
roll
jl
fistpll
mov
aad
daa
rcr
sbbb
mov
mov
data16
adc
mov
jbe
sub
cmpsb
sbb
jp
mov
sbb
dec
imul
pop
roll
inc
push
jae
xchg
mov
pop
jmp
lds
inc
stc
outsl
sbb
sbb
sbb
or
mov
pop
cmpsl
fisttpll
test
sbb
jne
push
fbstp
or
sub
test
cli
dec
aad
test
fmul
das
shll
sahf
aas
mov
daa
add
mov
adc
push
movsb
rol
les
xor
cmpsb
push
dec
and
lea
pop
mov
xchg
push
es
out
mov
mov
jmp
dec
iret
pushf
cmp
call
loope
mov
popf
idivb
in
fdivrs
mov
icebp
xchg
sahf
xchg
outsb
dec
mov
xchg
mov
push
out
xchg
aad
mov
mov
daa
negb
sub
fbld
jle
cltd
mov
js
jb
xchg
or
scas
add
or
jb
gs
mov
ds
fistpl
idiv
arpl
in
leave
fldl
shlb
fcomps
dec
xchg
cmp
and
jmp
mov
pop
xchg
pusha
enter
ljmp
push
push
loop
xchg
sub
push
lret
xor
mov
movsb
ss
pop
mov
ljmp
out
test
lret
sbb
jmp
mov
rorb
test
cs
push
and
mov
and
xchg
push
adcb
xor
jnp
xorl
aas
test
jnp
inc
pop
and
stos
scas
adc
sub
outsl
xchg
in
shl
add
inc
pusha
sti
lret
js
fwait
fwait
add
cmpsb
or
push
and
push
jns
dec
mov
in
lods
pop
ret
mov
dec
and
repz
push
inc
int3
pusha
mov
in
cmp
ja
mov
aad
test
ss
std
fstl
cmp
xor
pop
mov
out
daa
je
or
xor
in
scas
inc
out
ljmp
stos
test
xchg
cmp
in
sub
cmp
xor
loopne
xchg
fsincos
fdiv
cld
jb
rcrb
push
loop
mov
cld
gs
mov
fiadds
fs
adc
mov
cmc
mov
push
sbb
rol
pop
in
jns
js
sub
sbb
int
and
cld
aaa
or
xchg
out
int
adc
push
test
cmp
stos
jo
inc
mov
xor
call
or
popa
sbb
cmc
dec
shll
add
pshufw
mov
mov
loope
xchg
or
and
push
or
jp
pusha
dec
cmp
mov
inc
dec
sbb
push
arpl
in
popa
pop
int
and
mov
mov
mov
xchg
or
mov
rclb
mov
cs
dec
mov
and
daa
and
and
mov
add
cmp
fs
stos
jno
stos
mov
es
stos
je
pusha
jns
daa
loop
insb
xor
mov
and
fadds
ret
sarb
lea
mov
mov
in
lcall
xor
push
adc
call
inc
lea
mov
dec
xlat
xorl
stos
pop
sub
xor
push
out
or
int3
adc
add
sub
fcompl
mov
daa
mov
mov
roll
pusha
leave
and
scas
cwtl
js
lods
add
movsb
ss
inc
add
enter
cmpb
pop
in
adc
ret
dec
sub
sbb
add
mov
ds
add
test
jle
rorb
jg
jno
xor
sub
adc
bswap
lds
test
call
cmp
rol
cmp
rcll
fdivrs
xor
push
shrl
popf
andb
sbb
adc
mov
pusha
dec
movsb
mov
inc
mov
test
test
sti
std
jecxz
inc
into
leave
hlt
or
and
jmp
mov
insl
pop
stos
popa
bound
cmp
lcall
scas
arpl
cs
mov
std
jne
int
test
sub
mov
dec
ret
ret
insb
filds
loope
xor
idivl
inc
ret
sbb
and
push
cmp
pop
pop
xor
push
pop
aam
adc
push
roll
pop
add
stos
lods
mov
jae
pop
add
lds
out
hlt
lock
inc
mov
and
push
adc
jo
mull
repnz
and
shrl
or
mov
pop
enter
dec
inc
mov
push
hlt
popf
nop
cld
dec
sti
pop
dec
bound
fisttps
cmp
xor
and
call
jecxz
in
fsubr
inc
inc
push
mov
gs
hlt
jp
scas
dec
bnd
adc
jecxz
dec
xor
cmp
fmuls
add
pop
out
shrb
mov
add
fwait
inc
fildl
test
lock
test
aad
jmp
cs
int
lret
jecxz
sub
mov
cmpsb
loop
leave
mov
xor
sti
adc
and
rol
ss
stos
out
ret
mov
push
pop
push
fisttpl
push
fildl
mov
xorb
pop
and
and
in
flds
sbb
negb
repz
add
cmpsl
das
mov
sub
ret
push
decl
imul
sbb
dec
sahf
sbb
mov
out
addr16
ret
movsb
std
push
inc
fimull
gs
leave
inc
cwtl
je
mov
xchg
jnp
fs
mov
psubusb
jp
push
pusha
pop
fs
inc
mov
cmp
fnsave
inc
sub
push
and
sub
ret
xlat
cmp
lahf
test
push
inc
icebp
or
jmp
aas
jns
in
cmp
aaa
movsl
icebp
inc
rcll
cmp
xor
lahf
das
test
movsl
inc
fwait
and
divl
and
nop
push
add
sarb
push
mov
mov
jmp
int3
out
sub
insl
insl
bound
imul
outsl
or
adc
dec
pop
cmpsb
pop
in
mov
adc
int
mov
push
ficoms
cmp
iret
std
inc
pop
jp
pop
mov
mov
lea
cltd
je
aam
adc
adc
adc
jle
loope
mov
lcall
sarl
daa
xchg
mov
adc
jbe
les
leave
psubsw
xchg
test
mov
test
xorb
fdivrs
arpl
roll
pop
int3
xor
xor
or
jecxz
or
loope
das
fsubrs
mov
std
mov
addr16
pop
int3
iret
cltd
xchg
cmp
mov
cs
loopne
lods
adcb
add
dec
repz
fxch
stos
and
fmuls
cs
push
mov
cmp
push
es
or
push
xchg
xor
fdivrl
bnd
cmp
pop
iret
mov
inc
fcoml
cmpsb
into
or
mov
sbb
in
mov
add
sbb
and
arpl
sub
test
sub
je
out
xor
pop
push
cmp
repz
mov
jne
sub
std
pop
mov
outsb
inc
mov
imul
into
cwtl
push
pop
fmuls
test
mov
push
lret
and
stos
aaa
ficoml
mov
rcl
shr
push
xor
xor
push
sbb
ret
pop
mov
call
rcrl
aam
sub
push
fiaddl
imul
xor
in
loopne
xor
sbb
aad
pop
sub
outsb
lret
movsl
sahf
or
data16
outsl
xchg
pop
add
cld
test
sahf
scas
push
xchg
loopne
inc
mov
mov
push
pop
sarl
mov
sarb
sbb
sbbb
gs
or
stc
push
push
jne
adc
rorb
jge
mov
mov
subb
fs
ret
mov
loop
mov
push
popa
rclb
shll
pop
mov
loopne
enter
mov
jg
mull
inc
pop
scas
bound
std
sahf
cmpsl
outsl
push
inc
arpl
or
jecxz
jbe
xchg
mov
and
lret
adc
jo
mov
sub
sbb
mov
aaa
pop
dec
mov
dec
sub
xlat
pop
test
subl
jl
rorb
xchg
sti
out
lret
jo
xchg
mov
packsswb
sub
jecxz
mov
mov
xor
push
jl
fsts
sti
jg
or
out
and
aas
movl
sub
add
mov
sbb
enter
cltd
push
ds
dec
fwait
jae
push
add
cmpsl
push
pop
push
data16
imul
cwtl
or
ja
mov
ds
push
cmp
loop
sub
xor
mov
je
mov
lds
xor
cld
ja
xor
pop
outsl
ss
cmp
test
in
mov
cmp
inc
sub
loope
cmp
hlt
pop
iret
fs
test
ss
jne
push
aam
inc
lods
adc
sub
in
outsb
test
nop
pushf
or
adc
cmp
dec
and
in
jne
fs
xor
fcmovbe
rcrb
sub
out
pop
je
sbb
test
mov
bndstx
dec
scas
jae
testl
leave
add
imul
jo
lahf
sub
push
lahf
stc
jns
pop
cmp
adc
adc
and
fsubrl
jae
shll
push
jle
push
es
nop
rcll
xchg
xlat
and
mov
cmp
cltd
dec
fisubl
loope
adc
mov
mov
mov
fmull
repz
out
leave
cmpsl
or
rcr
jge
jae
mov
dec
loop
adcl
mov
cmp
scas
pop
lret
leave
inc
test
aam
fstps
popa
cs
ret
out
incl
mov
mov
and
sbb
mov
push
sub
and
xlat
hlt
cmpsb
push
adc
dec
xchg
sbbl
cmp
xchg
adc
popf
lds
int3
mov
or
add
ret
rolb
adc
fdivs
aam
arpl
dec
stos
out
stos
sbb
andb
inc
stos
pop
nop
sahf
enter
jne
enter
dec
dec
cld
stc
gs
sub
push
mov
repnz
clc
dec
loopnew
cli
inc
sarb
inc
jno
jae
xor
fiaddl
bound
movsl
sub
int
dec
mov
or
in
xchg
sub
adc
in
aam
add
adc
test
xchg
push
mov
adc
and
mov
jecxz
aas
aaa
and
jp
shrl
lahf
push
aas
outsl
and
popa
mov
out
adc
sub
fwait
and
mov
mov
cld
aas
sub
add
inc
inc
roll
adc
rcll
jae
fistps
popa
loopne
repz
in
lds
jb
popa
xor
icebp
lock
cli
push
jne
jae
orl
push
mov
ss
jmp
adc
std
je
sbb
or
jle
xchg
sub
cmp
mov
dec
bound
mov
lock
push
imul
leave
add
movsb
fnsave
xor
or
lret
jecxz
je
imul
add
inc
jmp
mov
inc
ja
inc
leave
mov
jns
insb
ljmp
adc
adc
or
das
imul
test
sbb
imul
dec
fwait
or
clc
lock
sbb
push
add
mov
push
jg
adc
cltd
arpl
sbb
jno
daa
enter
add
add
cmp
xchg
dec
xor
repnz
cs
lahf
stos
xchg
push
imul
cmpsb
sbb
lret
in
cs
push
test
mov
mov
push
sub
jl
cmp
fistps
and
jl
pop
xlat
std
inc
mov
fcomps
jo
jp
popa
fcmove
inc
and
mov
aaa
iret
push
ret
jp
pop
cli
mov
mov
xchg
jle
push
stos
pop
sti
inc
xor
cltd
xchg
jns
pop
cmpsl
jbe
jp
mov
pop
pop
mov
or
push
mov
out
loopw
cmpsl
xlat
cmp
icebp
popa
aam
fstpl
movsb
out
dec
mov
sbb
cltd
push
es
xor
lcall
adc
lds
cwtl
int
mov
cltd
inc
data16
xchg
ljmp
outsl
and
shll
adc
xchg
sbb
push
sub
and
or
jno
fstps
arpl
negl
cmp
push
mov
adc
cltd
mov
in
lods
mov
lahf
in
and
dec
fidivl
sbb
and
daa
xchg
jg
cmpsl
mov
xchg
insb
mov
sbb
pushf
lret
loope
mov
xchg
pop
mov
loopne
stc
push
stc
mov
jecxz
and
dec
cmp
push
out
sub
pop
mov
test
mov
aam
pop
mov
lods
xor
fwait
push
pop
mov
leave
mov
sub
jl
mov
push
adc
jo
push
fisubrs
sahf
xorb
pop
scas
fnstcw
jecxz
pop
ja
lret
movsl
push
fsubs
add
and
inc
xor
pop
loop
arpl
movsb
push
scas
push
push
fdivl
test
aam
in
cmp
loop
sub
jnp
imulb
cmp
das
pop
ja
pop
push
dec
movb
or
mov
stc
inc
test
push
test
bound
mov
test
jae
push
mov
ljmp
ja
pushf
cmp
out
mov
lock
xchg
pop
sub
sti
dec
inc
jb
and
test
xor
or
enter
aam
jmp
cmpsl
pop
sbb
adc
mov
push
arpl
sub
loopne
sbb
leave
jns
push
mov
add
mov
imul
fbstp
jae
int
bound
dec
insl
push
mov
sbb
bound
jl
dec
into
lret
sbb
push
mov
aaa
xor
pop
mov
int
out
cmp
fdivs
test
shl
xor
aaa
andb
mov
jne
mov
push
lock
cmp
pop
dec
sahf
or
lods
cmp
push
dec
ljmp
mov
dec
adc
jg
xor
mov
sbb
push
mov
fcompl
push
int3
push
mov
lea
dec
mov
jne
data16
int3
push
xchg
add
adc
test
addr16
pop
mov
clc
repz
shlb
xchg
xor
xor
aam
enter
jns
movsl
adc
jle
push
imul
sti
push
es
xor
adc
ja
jl
ja
lret
sub
adc
push
push
xchg
fidivs
sub
shlb
ljmp
stc
push
jo
loope
pushf
xor
jnp
push
pop
enter
nop
clc
jns
mov
das
ret
jg
mov
dec
cmp
fisubrs
adc
in
clc
or
sub
lds
lret
lret
cmp
xlat
nop
mov
cli
in
jle
clc
lock
and
jne
ljmp
adc
nop
cmp
add
repz
mov
cmp
iret
iret
ficomps
jge
movl
jge
mov
mov
inc
fcompl
and
push
dec
mov
out
jl
aas
clc
push
jg
push
insl
push
sub
je
jle
andb
sbb
iret
leave
into
stc
mov
aas
sub
pop
mov
movsb
sub
sbbb
loope
stos
loop
fdivrs
lods
push
call
lock
dec
pop
cmp
mov
push
xor
int
sbb
or
push
lahf
icebp
push
jge
mov
std
jg
dec
sub
sar
pop
call
push
cmp
addl
pop
inc
sbb
adc
lahf
gs
and
mov
scas
sub
leave
mov
fwait
xor
mov
jecxz
adc
int3
es
mov
rorb
stos
add
cmpsl
cmp
pop
or
jne
push
inc
sbb
add
lret
fildl
fcmovb
idiv
aad
dec
cmpsb
add
lret
mov
addr16
inc
adc
jmp
sti
jl
rorb
pop
fimull
mov
stos
jle
and
xor
push
shrb
mov
iret
push
cmc
dec
int3
test
ret
rcrl
out
ja
lcall
jne
imul
jmp
cwtl
lahf
mov
fildll
xchg
cmp
outsb
xor
xchg
fisttps
mov
inc
jne
mov
mov
outsl
mov
js
rcrb
dec
dec
cmp
daa
fadds
push
add
cltd
out
mov
jae
scas
mov
mov
push
push
pop
fsubs
popa
outsl
dec
gs
aaa
arpl
xor
pop
or
in
es
sbb
push
mov
loope
stos
push
stc
adc
scas
jmp
mov
mov
js
test
andb
and
fwait
pop
aaa
mov
sbb
add
jne
lret
int
mov
mov
dec
xorb
or
push
mov
jl
adc
icebp
icebp
movntps
enter
sbb
cmp
faddl
inc
scas
or
ss
xchg
movsl
dec
into
je
sub
adcl
push
int3
cmc
rolb
pop
cld
xchg
adc
push
and
xchg
fnsave
popa
scas
jo
data16
test
in
aad
jno
adc
lods
pop
nop
sub
and
pop
push
int
aam
mov
adc
inc
lods
mov
fcoms
jl
ficoms
dec
int3
arpl
cmp
push
pop
xor
jae
in
leave
jge
jne
xchg
mov
xchg
shrb
push
into
and
xor
adc
or
or
cmp
xchg
in
frstor
jns
or
inc
outsb
rclb
pop
bound
dec
outsb
mov
int
rclb
js
in
dec
adc
enter
inc
rcll
out
cmc
out
es
sub
jmp
sbb
mov
xor
test
push
and
xor
inc
out
push
es
addr16
xor
jmp
jo
fldl
jo
sub
ss
jnp
jne
mov
ret
test
out
pop
mov
add
arpl
clc
adc
mov
lret
mov
add
dec
cmp
sahf
push
sbb
cmp
cmp
jecxz
push
dec
jp
mov
xor
dec
mov
mov
jae
fnstsw
jnp
fwait
pop
push
xlat
ret
or
jbe
std
mov
mov
test
shlb
cmp
mov
push
bound
aad
into
or
test
cwtl
jmp
loop
negl
fsubrs
cmp
loop
in
xor
stos
push
fstps
sti
stc
adc
movsb
jb
push
inc
and
jae
jnp
jno
xor
or
fstps
fwait
ja
cmpsb
mov
jmp
loope
insw
loop
mov
ret
pusha
lods
lods
jmp
scas
movsl
push
cmp
lahf
fsubp
sahf
clc
or
bound
xchg
lds
loop
hlt
out
jmp
cmc
ss
sub
pop
mov
add
cmpsl
std
fs
rolb
andb
jbe
push
push
insb
out
inc
scas
pusha
mov
cmp
out
jmp
dec
jge
pop
insl
in
insb
dec
sbb
clc
popa
add
adc
and
inc
movsb
jmp
xor
out
xchg
add
push
mov
pushf
adc
sbb
mov
nop
inc
aaa
xorb
in
inc
jne
fmuls
fs
dec
loop
rcrl
scas
es
enter
ret
push
movsl
push
xchg
movsl
pop
sar
lock
jns
push
das
into
push
scas
or
int
in
jle
inc
scas
push
jne
ret
inc
call
into
add
mov
push
adc
sub
pop
testl
out
pop
dec
filds
jnp
data16
xor
or
jl
inc
mov
xchg
sbb
mov
xchg
pop
or
xchg
repz
sbbw
cs
cmpsl
aad
cmp
push
nop
add
mov
inc
jmp
inc
sti
pop
call
jne
js
xchg
sbbl
mov
into
add
and
rol
xor
fst
ret
add
sub
into
ljmp
js
mov
ss
or
lret
or
dec
pop
fnstenv
adc
dec
cmpsb
jbe
leave
push
push
sti
stos
gs
stos
ds
dec
aad
pop
fdivrp
xlat
mov
pop
shll
orb
mov
push
int
push
orl
les
or
xchg
mov
cs
or
dec
cmp
inc
repz
pop
jno
pop
repz
cld
add
pop
push
lcall
pop
push
in
mov
icebp
inc
dec
xchg
popf
jg
adc
popa
xor
jae
lods
rclb
jns
sbb
repz
stos
inc
jp
pusha
add
lock
daa
push
xchg
out
push
icebp
inc
dec
daa
aad
sub
lock
scas
sub
dec
mov
adc
cld
add
sbb
jge
fs
loope
ficomps
mov
and
in
and
into
xchg
stos
mov
cmpb
and
cmp
aas
pop
dec
sub
iret
fiadds
into
push
aam
loope
pop
rolb
clc
push
mov
mov
into
xor
int3
sbb
pusha
mov
clc
cmpl
push
rep
and
insl
inc
jle
xor
inc
cmp
js
outsb
sub
push
and
push
popf
popf
sbb
jle
movsbl
add
out
int3
fistps
pop
jecxz
or
test
sbb
pop
lahf
cmp
out
pop
sbb
sahf
and
mov
jp
arpl
cmpsb
fsubp
lret
adc
cmpsl
scas
setne
mov
push
pop
mov
push
fucomip
cli
insb
fs
add
dec
hlt
sub
incb
icebp
mov
add
or
inc
push
jnp
xchg
aam
jno
inc
or
shlb
fwait
or
fiadds
or
sbb
jg
inc
xor
fmuls
test
jl
add
push
sbb
push
inc
imul
pmaddwd
dec
int3
xchg
inc
pushf
mov
dec
add
adc
popa
sub
jmp
push
xchg
jmp
or
mov
lcall
mov
fisttpl
or
cli
xchg
push
dec
pop
shll
orb
ret
ret
mov
test
movsl
mov
push
add
inc
test
mov
jle
push
les
mov
out
nop
leave
or
call
aas
les
inc
lahf
adc
daa
cmp
stos
sbb
push
in
jg
in
pop
cmp
jl
test
movsl
sbb
add
inc
inc
stos
pop
inc
mov
data16
enter
scas
fstpl
xor
mov
lret
lcall
or
test
mov
inc
test
mov
cmp
mov
cmp
sti
dec
xor
pop
mov
jno
mov
rcr
subl
jecxz
into
inc
aaa
pop
mov
xlat
jge
dec
mov
or
pop
sub
mov
add
inc
enter
fisubs
lahf
sahf
lods
mov
sbb
push
fsts
xchg
dec
stos
lock
pop
xchg
sahf
pop
mov
icebp
in
xchg
daa
imul
loope
mov
aas
mov
sti
loop
aad
popa
loopne
test
jl
shlb
loop
cmc
fnstenv
xor
cmpsl
or
int3
mov
popf
dec
mov
inc
int
fnsave
ret
icebp
jl
sbb
adc
xchg
pop
js
xchg
mov
push
inc
aaa
add
stc
mov
nop
dec
or
inc
out
mov
stc
lcall
sub
pop
fistps
mov
fldl
inc
inc
sbb
or
mov
pop
mov
lock
hlt
adc
imul
cld
fwait
cmp
in
mov
fimuls
sbb
jno
inc
std
adc
rcrl
push
lcallw
test
add
cmpsb
rcrb
fld
pop
push
add
inc
push
cld
push
fwait
lock
and
inc
jl
lret
faddl
dec
cmpl
cmc
adc
in
add
in
cmpsb
lds
mov
enter
pop
inc
mov
cmp
bound
xor
imul
call
xchg
mov
jge
lret
gs
dec
jne
scas
xchg
xchg
inc
in
adc
shll
ja
xchg
mov
and
repnz
add
loope
xchg
outsl
movsb
lahf
loop
sub
loopne
push
push
loop
in
mov
push
rcr
fs
clc
sbb
cmp
and
dec
int3
std
inc
sar
cmp
stos
cmp
ljmp
push
movsl
xchg
jbe
add
scas
js
xchg
sarl
add
mov
mov
jge
dec
pop
das
in
push
sub
imul
pop
jp
sub
jne
fdivp
in
popa
adc
mov
cmp
jmp
jb
in
pushf
stc
and
js
aad
lea
and
mov
push
and
sub
and
jne
mov
dec
or
lods
fsubrl
ljmp
pop
rcrl
es
fs
xchg
pop
jno
xchg
mov
jg
inc
movl
stos
into
fisubs
jne
movsb
js
lret
mov
rclb
xchg
xlat
test
aas
sahf
pop
xchg
pop
adcb
mov
clc
cmp
fimuls
jmp
and
movsb
mov
repnz
notb
add
cmp
enter
xor
fisubrl
mov
fmuls
push
sbb
jg
lcall
cmp
mov
cmp
gs
fsubrs
xor
lahf
aaa
dec
pop
shl
fdivrl
mov
fisttpll
sbb
mov
loop
fldcw
inc
sbb
int3
je
mov
arpl
hlt
and
stos
mov
pop
and
movsb
pop
mov
and
enter
add
in
add
sbb
repnz
nop
add
mov
rcrb
in
or
xchg
push
push
mov
push
mov
cmp
fsubrs
pushf
inc
ds
das
divl
ljmp
fdivs
clc
dec
adc
cmpsb
aas
jp
or
clc
pextrw
imul
cmp
out
pop
fwait
xorb
adc
fbstp
sub
cmpsl
notb
push
idivb
daa
call
dec
popa
dec
cmpsb
mov
jbe,pn
aaa
and
out
lock
push
fs
sub
lock
jbe
clc
in
push
pop
sbb
xchg
das
cmpsb
dec
scas
popa
divl
jmp
popa
jo
inc
loopne
inc
xchg
out
add
and
mov
xchg
xchg
xchg
and
lea
test
popa
and
ret
pusha
adc
jge
ja
jnp
push
mov
sub
outsb
orb
rclb
ja
xchg
sbb
sbb
cmp
cltd
push
push
cmpsb
jne
cmp
rorl
dec
sbb
pushw
rcl
adc
mov
pop
sub
push
dec
xchg
out
daa
mov
add
mov
dec
inc
pushf
sbb
jmp
test
insb
addr16
and
cmp
pop
cmp
fldt
adc
inc
loop
sbb
decb
or
popa
add
push
push
fcmovne
into
in
dec
stc
xchg
sub
ss
ss
nop
andb
jnp
outsl
fldt
xor
xchg
mov
xor
sbb
leave
adc
imul
pop
and
or
jne
pop
int
xorl
xchg
jno
int
mov
dec
xchg
cmp
jne
pop
sbb
xchg
test
mov
jge
fsub
cmpb
mov
adc
es
push
sti
loop
fcoml
frstor
aaa
pop
cmpsl
inc
popa
jo
popa
add
jmp
xchg
movsl
sbb
es
lea
cmova
pop
mov
nop
jne
out
testl
jns
pop
popa
adc
add
sbb
push
add
adc
cmp
pop
iret
inc
aad
xor
movaps
inc
decl
test
jns
dec
and
sbb
std
and
fildl
lock
pop
pushf
psubq
bound
pop
mov
cmc
or
negb
inc
xchg
iret
adc
jg
outsb
and
hlt
popa
mov
jne
add
jnp
aas
ja
push
dec
push
stos
mov
adc
sub
subl
and
iret
mov
mov
sub
stc
or
mov
mov
loopne
sub
jge
mov
cmp
sbb
lahf
out
jnp
push
dec
mov
dec
rcl
mov
out
or
add
mov
cmp
xorb
or
mov
pop
add
fcompl
insl
and
pop
cli
rolb
push
stos
popa
loop
push
or
inc
sbbb
pop
xchg
repnz
or
das
lock
xor
das
decl
and
sbb
inc
cmp
jle
scas
mov
pop
sub
mov
ds
testl
outsl
xor
loope
andl
in
mov
mov
fldt
or
jo
xchg
sub
addr16
pusha
test
xchg
arpl
cmpb
arpl
sub
inc
std
jbe
mov
lcall
mov
lds
xor
mov
imull
or
xchg
push
cwtl
in
sbb
outsb
sub
push
mov
imul
das
cmpxchg8b
inc
sbb
or
das
sub
aad
inc
xchg
aam
es
or
outsl
iret
push
inc
xchg
dec
fiadds
rorb
xchg
dec
jmp
mov
out
shl
and
xchg
dec
xor
push
sahf
stos
fbstp
mov
data16
faddl
insb
sbb
loope
pop
testl
pop
in
jae
mov
lret
insl
clc
insb
pop
push
sub
add
mov
std
sbb
imul
jg
add
mov
mov
outsb
cmp
ljmp
pop
fs
leave
push
sbb
sub
dec
fiadds
add
cmp
sub
cmp
dec
push
popa
xchg
cmc
mov
lock
push
fstps
adc
cmp
fnstcw
xchg
movsl
sbb
mov
dec
mov
outsl
sbb
pop
das
popa
test
push
xchg
xchg
fsubrl
inc
in
outsb
mov
fstpt
jo
and
mov
nop
fwait
pop
inc
stos
push
in
mov
inc
sub
inc
sbb
fxch
sbb
sti
sub
mov
arpl
jo
jno
rorb
pop
sbb
pop
and
stc
jo
push
ja
mov
test
jns
inc
mov
dec
add
loop
shrb
es
je
mov
pop
xchg
pushf
fidivrl
push
inc
mov
adc
jmp
sub
or
adcb
test
call
repnz
push
add
fs
sbb
mov
sbb
cli
lds
sti
movsb
lret
sub
mov
imul
push
out
mov
cld
pop
out
sub
shll
movsb
push
mov
push
cltd
jb
cs
jge
sbb
nop
jb
jg
or
and
jle
push
cmpsb
sti
aad
nop
xor
add
mov
in
outsl
in
lret
inc
mov
sti
or
inc
adc
das
shlb
add
mov
push
lods
sub
sarl
xchg
fld
sbb
in
outsl
sbb
jo
cmp
rolb
sub
sti
fwait
subb
pop
and
inc
pop
clc
and
fs
dec
loope
pushaw
mov
cmp
xchg
cs
mov
adc
pop
jle
cwtl
jp,pn
and
lock
mov
lret
sbb
in
ja
ja
scas
imul
js
andl
stos
sub
lahf
aad
js
mov
jb
out
jbe
xchg
mov
fnstcw
ds
mov
hlt
pop
movsb
cmpsl
push
testb
pop
sbb
add
mov
cmpsb
js
push
scas
rorl
cltd
dec
sub
aam
data16
pop
cltd
mov
pop
ret
mov
fsubl
or
divl
add
mov
sub
inc
fcomps
jmp
call
cmpsl
ss
dec
or
lret
pop
int3
nop
movb
cmpl
pop
jbe
cli
xor
cli
push
inc
add
cli
bound
mov
outsb
push
stos
imul
std
rep
jle
cmp
hlt
outsl
out
xchg
jle
jo
addr16
cmp
push
or
leave
cmp
adc
sbb
adc
mov
aaa
cmc
mov
push
mov
addr16
cmpsl
cld
adc
les
mov
and
xor
push
arpl
cmpb
fwait
lahf
out
int
cli
jnp
ljmp
pop
mov
outsl
lock
jp
fsubrs
cmp
fadds
mov
xchg
inc
sbb
and
mov
dec
adc
lods
inc
cmpsb
sbb
jns
xor
out
ljmp
lods
jb
cmpsl
sbb
gs
or
outsb
adc
je
sub
out
dec
divb
add
sbbb
push
out
addr16
push
out
cmc
fdivs
adc
je
mov
repz
jle
and
add
jnp
dec
jle
mov
add
cmp
jle
inc
test
test
rclb
xor
fisttps
mov
fsts
dec
push
sub
rclb
cltd
int3
cmp
outsb
cmpsb
sub
out
mov
in
mov
add
imul
add
fwait
roll
leave
dec
mov
sbb
dec
adc
je
adc
test
push
xchg
mov
sub
scas
or
add
add
xchg
jns
in
sub
cmp
push
out
addr16
jge
ds
pop
daa
push
enter
cs
iret
outsl
mov
mov
mov
mov
call
inc
mov
pop
iret
aad
xor
dec
xor
dec
xchg
xor
sbb
jl
or
xchg
inc
lock
mov
adc
movsb
pop
lds
repnz
std
dec
insl
or
xchg
cmc
call
push
popa
cwtl
mov
pcmpgtd
repnz
jle
push
xchg
sbb
out
lret
pop
xchg
leave
add
data16
imul
sbb
push
push
test
std
das
mov
lret
andb
movsl
jb
mov
loope
orl
lret
and
outsb
xor
sbb
mov
loope
cltd
outsl
gs
sub
jecxz
ret
and
lret
or
pop
into
mov
out
out
pop
cmpsb
push
pop
cmp
fisttpl
sbb
push
or
jo
mov
adc
or
mov
insl
addb
sub
fincstp
daa
ja
or
rolb
mov
adc
cwtl
popf
dec
adc
mov
arpl
and
out
in
lahf
xchg
out
mov
mov
jecxz
xor
test
inc
dec
inc
adc
adc
ret
fstps
leave
mov
insl
mov
ds
mov
inc
cld
je
nop
mov
pop
jle
dec
ret
xchg
nop
xor
movsl
xlat
or
mov
lods
testl
repnz
jb
mov
pop
lret
sti
mov
in
or
mov
dec
sbb
push
lea
cmc
je
adc
movsb
push
scas
cmc
jns
jl
std
xchg
jge
jo
mov
add
popa
push
mov
pusha
mov
add
push
jnp
mov
cli
lahf
cmp
fwait
lods
xchg
dec
add
xchg
xchg
xor
cltd
test
dec
push
lret
jle
lcall
popa
leave
push
mov
rcrl
mov
js
addl
jbe
test
xchg
pop
out
jg
jge
xchg
inc
inc
dec
cmpsl
cld
push
test
clc
cltd
aaa
mov
inc
iret
cmp
pop
test
lret
aad
js
sub
push
dec
fsubl
not
fmull
dec
mov
mov
cld
pop
sub
xchg
lock
pop
rclb
stos
outsl
or
test
xor
push
loopne
pop
movsl
mov
out
shlb
ljmp
dec
int
push
jmp
or
fsubrl
cmp
xchg
lret
sub
mov
filds
and
adc
lds
add
push
shrl
push
mov
lret
popa
push
scas
pop
sbb
or
pop
push
popa
dec
icebp
mov
into
sbb
cmp
mov
pop
xchg
inc
inc
or
popf
xchg
inc
xchg
outsb
sbb
or
repnz
inc
xchg
out
ds
pushf
mov
jne
lea
sub
cmp
ret
cld
notb
and
add
call
iret
mov
das
mov
in
inc
popf
push
sbb
repz
repz
sti
stos
daa
mov
pop
in
cmpsb
ret
fcoml
mov
dec
lea
sbb
fldcw
gs
sar
test
jle
mov
xorl
popa
lock
test
pop
jmp
lcall
shlb
fsubrs
ljmp
and
pop
in
cmpl
add
cmp
imul
aad
jno
shrl
bsf
lahf
call
mov
jle
iret
add
inc
enter
push
cmp
or
int
mov
xorl
pop
adc
push
dec
mov
in
test
cmp
xchg
push
inc
pop
mov
xchg
test
pop
mov
mov
adc
in
mov
adc
cmp
cmp
in
fisubl
xor
mov
pop
les
sbb
xor
fs
divb
dec
mov
stc
dec
add
push
xorl
mov
arpl
dec
adc
jbe
cli
fmuls
pop
push
cmc
mov
int
adc
aam
mov
push
pop
lret
inc
sbb
dec
xchg
stc
xlat
jns
je
adc
and
mov
test
lds
call
sbbl
outsb
movsl
pop
xchg
push
sub
sti
jg
push
and
sub
addl
xchg
or
and
ret
cmc
and
mov
mov
mov
and
mov
shll
ss
push
jne
and
ja
test
mov
jmp
mov
pcmpeqw
or
xor
ljmp
inc
push
ja
notl
inc
sub
lock
fnstsw
divl
divl
stc
and
fdivs
loop
into
in
stos
pop
in
or
xchg
jbe
xchg
aam
sbb
jne
call
aaa
adc
pop
jne
ret
movsb
and
aaa
sub
outsl
ja
daa
mov
adcb
mov
mov
inc
add
stos
mov
fscale
ss
pop
movsb
mov
nop
fmuls
and
ja
add
mov
pop
pop
inc
mov
push
mov
pop
xchg
xchg
out
mov
iret
xchg
subb
movsb
mov
and
daa
imul
stc
mov
clc
jne
cmp
enter
stos
stc
les
inc
aad
das
adc
mov
push
loopne
jp
mov
rcrb
jmp
cli
push
push
jp
roll
scas
mov
pop
das
outsb
in
xor
inc
jp
fsubrl
pop
mov
das
das
out
push
xlat
loope
jnp
sbb
lock
lock
pop
cmp
stc
lods
push
pop
xchg
adc
in
lods
mov
je
inc
mov
nop
push
mov
pusha
clc
ljmp
inc
movsl
sahf
push
jne
daa
loopne
xor
cvtdq2ps
ss
mov
mov
mov
jmp
pop
mov
loope
pop
lret
mov
inc
dec
push
andb
push
jb
rcrl
loope
lea
and
xchg
jg
cld
pop
jecxz
sub
add
xlat
lods
imul
jb
xlat
mov
ret
ja
sub
ret
pop
negl
push
push
or
add
jnp
sub
lods
fdivl
popa
jbe
mov
push
jmp
into
.byte
.byte
and
push
push
add
cwtl
dec
add
pop
push
add
pop
dec
add
cmp
add
dec
add
repnz
add
xor
add
dec
add
cwtl
push
add
add
add
add
test
add
loop
add
mov
add
dec
add
rclb
jb
add
insb
dec
add
adc
add
dec
add
cmp
add
les
add
dec
add
xchg
add
add
push
push
add
dec
push
add
add
add
sahf
dec
add
test
add
inc
dec
add
inc
dec
add
sub
add
jbe
add
sbb
add
push
dec
add
mov
add
rorb
in
dec
add
cmp
add
dec
add
cmp
add
jbe
add
fmuls
add
dec
add
cli
dec
add
lods
dec
add
lock
add
dec
add
adc
add
sbb
add
dec
add
mov
dec
add
sub
add
add
mov
add
add
loopne
add
add
add
or
add
add
orb
mov
dec
add
rorb
loop
add
nop
dec
add
xchg
dec
add
add
add
dec
dec
add
loop
add
fmuls
add
dec
add
pop
dec
add
ret
add
add
call
dec
add
outsb
dec
add
scas
dec
add
xchg
dec
add
push
dec
add
xor
add
dec
add
sub
add
add
cld
dec
add
bound
add
dec
add
aam
add
fmuls
add
add
pushf
dec
add
clc
dec
add
push
dec
add
lock
add
jle
add
jb
add
adc
add
inc
dec
add
and
add
add
add
call
bound
clc
add
cmp
fsubp
inc
sub
jne
in
sub
and
mov
adc
dec
xchg
aas
pop
daa
inc
inc
ret
push
dec
ds
sub
enter
inc
jae
mov
into
sbb
stc
scas
pop
mov
out
lea
lods
inc
test
inc
cmc
mov
nop
testl
fadd
adc
sahf
stos
fwait
cwtl
push
cmc
and
xchg
pop
daa
cmpsb
std
fcompl
xchg
fmul
xchg
sub
cmp
popf
ret
movsl
insb
sub
or
test
fwait
test
xor
mov
test
aam
dec
kmovb
push
lock
int
cmpsb
das
mov
cmp
movsl
test
in
aam
daa
aam
ficoml
pusha
pushf
push
into
xchg
push
and
xchg
jl
xchg
dec
outsl
jl
lret
adc
pop
dec
fs
lahf
jnp
pop
xor
fistps
pop
mov
push
sbb
bound
out
lret
or
mov
or
lds
div
cmp
filds
outsb
mov
insl
fs
adc
xor
jae
add
mov
fildll
gs
and
aam
outsl
jg
pushf
or
fdivrp
lods
icebp
dec
add
out
push
mov
jno
push
out
cmp
cli
add
mov
jb
in
gs
jo
aam
test
xor
inc
sbb
pop
mov
insl
mov
sub
jo
dec
rorl
mov
loope
jae
dec
adc
in
mov
loope
add
jp
inc
lret
mov
dec
scas
jg
scas
pop
add
sbb
or
cmp
push
into
xor
mov
adc
add
cmp
dec
ss
inc
mov
jmp
mov
pop
mov
push
mov
push
pop
fucomi
push
out
cwtl
xchg
cmpsl
mov
orl
and
cmp
mov
pop
mov
sbb
bound
icebp
bound
inc
sub
subb
pop
mov
mov
xor
sub
dec
mov
ret
inc
add
shll
inc
mov
inc
outsb
sub
subl
repnz
je
jnp
les
mov
iret
test
adc
cmp
cmp
clc
add
call
lret
inc
enter
int
lcall
ss
sub
inc
inc
faddp
out
lret
ret
in
push
sbb
addr16
std
cmpsb
movsl
inc
push
je
in
imul
inc
aad
pop
inc
ret
addb
pop
lahf
sbb
enter
jns
loope
ss
adc
or
lds
imul
stos
lret
mov
xchg
popa
test
jns
test
jns
mov
ljmp
lods
fldt
cmc
insl
push
scas
jg
std
dec
adcb
dec
xchg
imul
sub
cmpl
pop
cs
js
jle,pn
xor
add
les
and
adc
xorb
xchg
pushf
jne
mov
mov
mov
aaa
sbb
test
orl
mov
dec
rcl
lret
lods
push
ret
mov
dec
push
adc
icebp
xchg
mov
push
sub
into
inc
or
mov
imul
mov
call
xor
iret
stos
jae
add
jne
xchg
leave
repz
jne
jmp
cmc
or
cmp
fs
icebp
and
movzbl
outsb
fs
xchg
jecxz
in
insb
out
sbb
push
clc
or
xor
hlt
push
fstpl
lods
loop
insb
sbb
sbbb
out
sbb
sbb
xchg
ds
mov
data16
scas
jno
jno
cwtl
int
push
inc
test
ljmp
cmc
mov
pop
mov
mov
out
sbb
jp
inc
pop
inc
cmc
and
jg
out
xor
stos
mov
push
lock
rcrb
push
les
aas
mov
push
dec
and
push
and
push
mov
inc
xor
mov
and
in
jns
loope
xor
jne
addr16
dec
xor
jo
pop
inc
push
lahf
addr16
jbe
and
movsb
jo
cli
and
out
jae
xchg
scas
iret
xchg
mov
scas
arpl
dec
loop
movsl
mov
xchg
cltd
or
mov
test
imul
inc
jl
loope
sub
cld
jb
ss
cmp
ror
scas
sbb
and
mov
pushf
jns
dec
orb
loop
adc
jb
and
adc
dec
sahf
add
imul
mov
sub
cmp
flds
xlat
or
testl
sbb
enter
cs
ret
cltd
pop
dec
andps
es
insb
mov
adcb
jmp
arpl
fsts
popa
xor
cmp
test
dec
sub
outsl
scas
enter
test
fdivl
jo
int3
mov
or
cld
sbb
mov
jne
mov
aad
pop
and
clc
movsb
hlt
loop
cmp
das
push
scas
pop
imul
jno
xor
mov
pusha
add
add
fisubrl
test
mov
mov
rcrl
mov
or
decl
ljmp
popf
ss
imull
insl
inc
mov
outsb
sub
scas
dec
or
and
inc
xchg
jge
clc
mov
test
in
movl
mov
repnz
bound
andl
cmpsl
sbb
std
inc
in
push
out
sbb
pop
push
lahf
scas
das
and
add
sahf
loop
lahf
xor
ds
add
xchg
push
es
or
pop
out
cmpsb
pusha
insb
lcall
cld
into
sbb
xchg
push
aam
cli
test
pusha
pop
test
rcr
and
push
cmp
cld
add
push
sub
lods
and
xchg
xchg
or
das
sbb
push
call
push
faddl
fstpl
in
ljmp
mov
xorl
add
adc
push
int
sahf
dec
in
les
xchg
fisubrl
loop
jmp
cltd
cmp
inc
ss
dec
mov
adc
fsts
notl
dec
out
insl
into
xor
ret
xchg
mov
inc
cmp
add
sbb
pop
loope
sbb
jns
pop
sub
sbb
or
push
mov
xchg
aam
sub
in
setbe
loopne
sbb
stos
xchg
sub
and
cmp
dec
mov
shr
inc
xchg
lret
sahf
fistl
mov
cmpsl
hlt
sbb
loopne
ljmp
lret
pop
xchg
pusha
in
sbb
lret
sti
sahf
shl
jg
xorb
mov
aad
pop
or
xor
out
out
sub
add
pop
jp
mov
jecxz
call
fadds
cmc
int3
cmc
xchg
bound
bound
loopne
push
imul
test
repz
pop
lea
xor
jle
test
ss
push
aad
insl
xchg
or
scas
xlat
mov
adc
cmp
mov
and
xchg
inc
mov
adc
mov
imulb
mov
dec
imul
in
cs
sub
imul
out
add
and
adc
adc
dec
jo
or
mov
fwait
aas
iret
insl
xchg
push
fwait
js
stos
jns
add
push
aaa
inc
or
leave
fidivl
fcmovb
push
sub
sbb
push
loope
lahf
jb
pushf
push
scas
enter
mov
out
mov
or
add
dec
mov
sbb
clc
dec
insl
or
mov
mov
push
ret
push
ret
mov
jge
adc
sbb
repz
add
xor
sbbb
out
cld
ret
sub
inc
aaa
lret
cmpsb
pop
pop
lcall
jecxz
ret
xor
pop
add
jno
mov
add
xchg
pop
push
clc
loope
mov
mov
iret
and
fstpl
bound
test
xchg
lock
vmovups
jle
mov
or
lock
std
cmpsb
pop
in
mov
outsl
mov
xor
jge
ja
cmc
test
sbb
add
and
dec
push
lods
add
call
addr16
dec
loope
pmaxub
clc
mov
gs
pop
adcl
lds
mov
jae
cwtl
cld
loopne
test
add
out
sub
arpl
inc
bound
mov
mov
xor
scas
pop
push
mov
inc
cmp
dec
js
cmpsl
dec
xor
lcall
out
aaa
xlat
sbb
adc
fdivrl
aam
and
and
mov
stc
sub
fcomp
stos
xchg
shlb
xchg
mov
mov
movsl
mov
pop
mov
sahf
push
add
mov
xor
and
sub
fs
data16
push
fwait
mov
pop
es
pop
xchg
dec
les
popa
cltd
lock
xor
push
arpl
cli
lret
sub
push
jle
cmp
ljmp
xchg
sbb
es
inc
je
adc
pop
pop
mov
inc
ret
adc
mov
sub
fsub
push
cmpsl
les
mov
add
jge
movsl
pcmpeqw
jnp
add
lcall
push
mov
cld
push
sub
subl
pop
stos
sbb
punpckhbw
push
push
nop
imul
dec
in
add
sahf
xor
out
xchg
mov
sarl
jg
jne
push
lcall
ja
inc
xor
popf
xor
sub
fwait
sbb
les
mov
xchg
inc
dec
outsb
jnp
shrb
cli
mov
xor
adc
arpl
aaa
add
mov
xchg
jb
aam
cmpb
add
sysret
sahf
add
or
cmp
push
inc
fadds
or
scas
push
sbb
cmpsl
dec
ret
js
iret
sbb
xor
aad
sti
push
ljmp
cmpsb
mov
nop
mov
fdivl
dec
test
lds
jb
xchg
jne
sbb
repz
ds
jp
lret
mov
enter
sbb
in
out
and
jnp
fiadds
inc
aaa
dec
push
filds
add
std
aas
cwtl
xor
clc
push
cld
orl
cs
jns
adc
add
add
cmp
jle
mov
test
clc
lret
sub
lods
shll
imul
test
repnz
push
xchg
xchg
sahf
arpl
mov
divb
mov
out
fs
adc
mov
movsb
add
and
xorl
pushf
sbb
pop
rcll
jmp
scas
fs
and
xor
scas
decl
add
ja
jmp
jp
or
push
nop
bound
test
fs
in
cmp
mov
or
xor
xor
cmp
adc
or
and
cmpsb
adc
cwtl
cmpsb
jmp
mov
and
adc
pop
xchg
in
rol
rcl
mov
xchg
xchg
orl
out
mov
pop
cmp
jbe
stos
lods
jecxz
adc
aam
jns
cltd
adc
imul
lock
push
leave
cltd
addr16
rcrb
cltd
jecxz
sbb
push
mov
and
imul
cmp
cltd
push
pusha
and
mov
add
lcall
idivl
mov
jae
or
cmpsl
push
frstor
test
lret
cmp
pushf
pop
scas
jge
leave
dec
push
iret
mov
int
in
inc
xor
pop
cmp
int
insb
je
test
pop
adc
xor
add
cmp
inc
jecxz
lods
int
nop
jle
sub
aad
pusha
sub
inc
push
arpl
inc
adc
notb
test
jp
enter
or
testb
cmpsl
mov
pop
and
insl
imul
pusha
test
cmp
pop
ret
cltd
daa
gs
sub
enter
push
fmul
jl
fdivl
xchg
push
push
or
addr16
xor
cwtl
cmp
sarb
or
clc
movsb
ret
xchg
sub
cmp
scas
jge
cmp
jnp
jnp
lcall
pop
iret
xor
or
mov
adc
add
jbe
xchg
xor
subl
je
call
out
xchg
and
mov
or
mov
or
jnp
pushf
sti
rep
lea
mov
jge
sbb
sbb
fs
pop
rclb
xchg
mov
fidivrl
xchg
inc
sbb
int
stc
cmc
xchg
cltd
lret
imull
rorb
call
inc
push
test
pop
mov
stos
fnstenv
das
repz
aam
xchg
jp
sub
sub
inc
pop
loop
mov
inc
sub
fs
jb
cmc
mov
filds
adc
and
and
xor
subl
cmp
vpavgb
push
sbb
scas
xchg
das
xchg
repnz
out
addr16
xor
shlb
push
cmp
and
mov
xchg
sarb
inc
bound
out
xlat
insl
das
movsb
lods
mov
xchg
mov
dec
mov
ss
mov
and
pop
mov
stos
mov
rorl
mov
jmp
out
add
mov
adc
dec
adc
aam
xor
fbld
fidivl
mov
jge
ljmp
cwtl
pop
daa
js
mov
loopne
test
mov
data16
cwtl
sub
fmulp
loopne
inc
jb
mov
shlb
js
jmp
leave
mov
mov
inc
dec
dec
popf
push
inc
xchg
mov
bound
int3
fadd
mov
out
push
out
xor
pushf
cmp
repz
inc
or
cmp
outsl
xchg
push
sbb
xchg
sbb
sub
lock
push
outsb
ret
and
icebp
movl
xchg
pop
dec
sub
popa
xchg
sub
push
lods
jbe
sbb
add
pop
and
jnp
pushf
leave
ja
mov
jmp
or
and
adc
cmp
push
enter
and
adc
les
lock
enter
sbbl
cmp
add
lea
lret
insl
mov
push
shlb
fdivl
lock
cld
lds
out
shrb
into
and
inc
icebp
mov
or
cmp
dec
jae
push
xchg
sbb
xchg
rolb
jae
inc
dec
sbb
jbe
lds
inc
sarb
mov
sbb
mov
xchg
subb
aas
movsl
mov
bound
cmpsl
loop
xor
lds
dec
pop
jp
out
jp
stc
xchg
mov
mov
scas
daa
dec
pop
xor
xchg
jp
mov
and
mov
push
mov
push
mov
push
leave
clc
and
sub
mov
inc
mov
dec
adc
push
or
xchg
jo
jg
push
push
jb
movsb
out
mov
icebp
dec
xchg
stos
std
sub
stos
cmp
test
xor
pop
ljmp
out
xchg
addr16
sarb
lods
das
xchg
or
pop
rolb
pop
fs
mov
ds
pop
pop
push
jge
sahf
push
adc
leave
popf
xchg
lret
enter
test
push
and
adc
push
orl
call
scas
fimull
dec
hlt
cmp
jbe
popf
push
xor
push
dec
dec
xchg
sbb
repz
dec
in
enter
push
in
mov
mov
or
inc
xchg
cmpsl
ja
push
cmp
lods
xchg
paddusw
sbb
lcall
mov
add
cmpsl
push
out
add
push
call
das
mov
push
stos
xor
inc
cld
call
sbb
fldt
pop
fwait
inc
push
xchg
cmp
ja
cmp
popa
fldt
push
sbb
add
stos
lea
inc
pop
pop
mov
cmpsb
mov
ficompl
loope
mov
jns
and
sbb
out
fimull
and
pop
rorl
sub
pop
into
popf
sbb
cmp
int
push
pop
fs
cmc
sbb
push
adc
je
ret
jp
pop
imul
ficoml
push
ds
sar
mov
add
fisubrs
mov
test
loopne
mov
push
addl
xor
arpl
cld
jmp
xchg
cwtl
cs
or
fstp
sub
push
dec
movb
pop
and
int3
adcb
filds
jecxz
and
or
push
loope
cld
push
jmp
lods
jge
test
cmc
inc
insb
sbb
out
push
fwait
or
lahf
inc
mov
loop
xchg
pushw
fisttpll
sarl
jo
fmull
and
psraw
addr16
js
and
mov
push
sbbb
outsb
jge
add
adc
jmp
xlat
and
decl
in
mov
rolb
jne
adc
clc
aaa
lea
pusha
and
jno
cwtl
push
out
fs
sbb
adc
lahf
cld
ret
int3
cmp
pop
or
sub
pop
leave
xor
mov
in
jl
add
push
mov
psubb
decl
aam
lods
or
push
sbb
add
out
ja
scas
mulb
pop
pushf
repnz
int
push
sub
mov
inc
aam
std
in
loop
aam
xor
jae
shll
add
dec
push
clc
adc
aas
cmpsb
dec
cmp
push
adc
setb
lret
iret
rcrb
mov
out
insb
mov
sbb
dec
rol
outsl
outsl
mov
ss
jb
or
andl
and
jb
aas
pusha
or
cmp
add
push
call
xor
imul
push
mov
pushl
rorb
mov
stos
lret
lods
fwait
cmp
push
dec
inc
jle
add
cmpl
aas
pushf
enter
mov
dec
hlt
test
daa
xchg
repz
insb
in
das
sub
push
movsb
imul
jae
fisubrl
std
repnz
sbb
xor
les
lretw
xchg
jo
xor
sub
jp
jl
fistl
mov
in
mov
inc
pushf
xchg
jecxz
shll
mov
adc
add
inc
je
sbb
insl
cltd
idivb
jb
xchg
xchg
push
not
shlb
dec
arpl
and
push
ror
mull
pop
movsb
in
pusha
enter
mov
sbb
mov
push
sub
or
aam
mov
pop
cld
repnz
jmpw
sbb
dec
adc
popf
jb
jle
pusha
push
or
cmp
push
test
fs
dec
outsb
cmp
in
jne
xchg
int3
fs
ja
adc
rolb
sbb
jmp
sbb
xlat
add
cmc
dec
sti
outsb
pop
loop
inc
mov
cld
popa
add
test
mov
pusha
cmp
shlb
loope
rorl
inc
je
jb
adc
nop
adc
add
mov
out
xchg
sbb
lret
inc
daa
push
sahf
sub
jle
aas
jmp
bound
sbb
jns
imul
push
adc
xchg
jns
lahf
push
loope
imul
lcall
ret
add
xchg
sahf
insb
xor
das
pop
faddl
int3
xchg
jne
outsb
ret
in
fs
jo
stos
and
jecxz
mul
push
push
fmuls
mov
lcall
pop
jnp
push
sahf
mov
mov
gs
scas
xor
jecxz
in
inc
movsl
push
sub
mov
xchg
ss
and
mov
mov
mov
aas
inc
rolb
mov
lods
inc
cmpsl
sbb
mov
jns
int3
cwtl
add
dec
fs
jo
and
dec
stc
movsl
push
outsl
sahf
aas
adc
imul
cwtl
cwtl
mov
pop
sbb
enter
in
aaa
push
iret
xor
je
mov
pop
movsb
cmp
push
shrb
or
outsb
mov
sbb
mov
loopne
mov
loope
xchg
scas
jbe
jmp
mov
je
js
mov
mov
sub
mov
cmpb
sbb
adc
gs
xchg
or
out
mov
xchg
xor
lods
fstps
popf
push
inc
adc
add
mov
in
in
adc
jg
jecxz
stos
cmc
andb
xor
push
inc
test
ja
movsb
in
jo
cmp
mov
dec
std
jl
fistl
cmp
push
and
adc
idivl
mov
movsl
jecxz
fimull
shll
and
mov
xor
push
xchg
mov
dec
push
mov
cltd
dec
lret
push
loopne
pusha
cs
shlb
cwtl
add
xchg
push
mov
fldenv
aad
add
fstl
xor
ret
and
es
lcall
inc
inc
cmc
iret
ror
ja
xchg
sub
dec
pushf
stc
mov
or
cmpsb
inc
aaa
pop
neg
pushf
inc
mov
mov
push
stos
fcomi
sarl
stos
jns
movsb
add
roll
sti
push
sub
fildl
mov
push
imul
jb
inc
test
cmpb
nop
lret
xor
cmp
lret
jno
movsb
sbb
sarl
test
mov
ret
and
sub
mov
pop
jno
push
mov
fsubs
pop
push
push
cwtl
movl
and
pop
mov
mov
inc
ret
loopne
pop
push
shl
inc
xor
int3
or
jnp
mulb
stos
ja
fmull
sub
divl
mov
lret
pop
cmpsb
xor
or
mov
sqrtps
out
mov
imul
mov
sti
jp
pop
pop
enter
jl
xor
xor
scas
jle
inc
push
mov
pop
fidivrs
mov
dec
ficoms
mov
or
fistps
inc
popf
fldl
xlat
gs
fsubrl
pop
xor
pop
push
xor
cmpsb
add
orb
cwtl
or
outsl
ret
inc
ficompl
movl
fisttpll
adc
sub
lcall
jo
mov
stos
xchg
adc
ja
cmpsb
dec
cltd
mov
lods
mov
inc
mov
and
adc
push
lods
jae
jmp
sub
or
lahf
inc
push
mov
dec
loope
cs
xor
subl
rclb
jnp
mov
insb
fcoms
stos
and
stos
dec
or
dec
jne
outsl
out
sub
dec
mov
jmp
pushf
xlat
push
and
xor
ds
cmp
std
xor
mov
aam
inc
add
adc
mov
cmpb
inc
out
in
aas
and
xor
jecxz
cmc
xor
jns
push
loope
add
jbe
ljmp
test
mov
jge
fwait
stc
leave
mov
xor
cld
inc
in
cmpl
shr
add
pop
xor
movsb
pusha
cmp
cmp
ficomps
xchg
loopne
mov
sbb
add
in
mov
test
sub
push
or
popf
outsb
das
dec
das
sub
cld
jne
adc
or
xchg
xchg
jecxz
pop
mov
imul
in
jo
mov
pop
cmp
sbb
mov
xchg
pushf
in
adc
sub
in
ds
cmc
sarl
adc
nop
dec
ja
ja
repz
jecxz
incb
lea
push
xor
sub
in
adc
cli
in
mov
in
test
jb
push
push
out
inc
xchg
jge
cwtl
jmp
fisttpl
gs
fldcw
pop
dec
movsl
aam
insb
aad
sub
mov
cltd
push
fwait
xchg
add
jl
and
mov
test
test
inc
push
dec
cmp
sub
and
pop
les
mov
xchg
scas
mov
lcall
addr16
xchg
jp
pop
insl
cld
mov
and
and
inc
movsl
rorl
fdivl
testl
xor
mov
aaa
sbb
sub
and
mov
pop
mov
aaa
sbb
and
adc
pop
pop
cmpsb
mov
or
int3
cmp
inc
or
idivb
push
mov
fisubrl
xchg
inc
test
stc
or
and
mov
sub
xchg
push
in
add
outsb
or
int3
lcall
inc
cmp
adc
mull
dec
and
or
ja
xlat
pop
sub
mov
inc
inc
repnz
and
aaa
mov
mov
sbb
push
inc
mov
or
fwait
xchg
fcmovbe
ret
pop
rcr
pop
add
lret
jns
shl
and
aas
jg
movsb
stos
aam
pusha
xchg
mov
add
fisubrl
or
mov
jnp
loope
inc
dec
aad
mov
sahf
jne
pop
sbb
cmp
dec
outsb
xchg
xchg
sti
sbb
hlt
je
push
inc
xchg
pop
test
pushf
jl
jne
dec
add
sahf
lcall
dec
mov
mov
rcll
mov
mov
or
xor
or
cli
push
stc
mov
cltd
push
jne
movsl
je
jp
jge
in
je
mov
stos
inc
sar
lret
fdivrp
fwait
int
lods
push
inc
xchg
aaa
les
mov
jmp
lods
scas
insb
cld
pop
and
dec
jne
xor
arpl
loop
das
data16
mov
stos
pop
mov
push
push
stos
cmc
sub
mov
lahf
call
adc
out
repnz
adc
jns
jae
inc
sbb
cmp
mov
scas
mov
sbb
test
pop
es
and
rcl
push
aaa
xor
jp
jne
lds
daa
outsb
roll
cmp
and
pop
xor
adc
mov
push
and
xchg
push
and
shll
inc
mov
mov
sub
shlb
insl
test
lods
sbb
push
push
lds
pop
xchg
pop
xchg
cld
cmp
incb
or
dec
pop
mov
ret
mov
cmp
in
dec
ds
lods
je
ret
js
out
testl
sub
je
dec
in
cmp
cli
cld
lea
or
push
xchg
scas
data16
test
je
sbb
or
dec
adc
pop
sub
mov
add
mov
in
shll
test
test
loope
mov
xchg
xor
mov
orl
add
pushf
dec
jecxz
in
add
inc
icebp
in
push
xchg
jns
cwtl
cmp
sub
pushf
xor
data16
push
aas
xchg
call
in
fdiv
mov
mov
aam
jae
and
xlat
jle
js
iret
pusha
pop
test
jge
arpl
loope
xor
imul
lahf
xor
sbb
pop
es
xchg
dec
and
testb
mov
push
lret
testl
data16
and
aas
stos
jbe
insl
pop
xchg
mov
je
aas
cmp
xorb
pop
roll
and
dec
push
and
iret
orl
fldt
test
xchg
xchg
shrb
ja
jnp
pop
test
popa
inc
xchg
push
dec
push
mov
adc
mov
rcll
and
inc
aad
xor
out
cmc
cld
ds
mov
cli
fbstp
aaa
loop
pop
adcb
addr16
adc
test
mov
sbb
add
inc
inc
cmpsb
cwtl
rcrb
ljmp
in
sbb
test
repnz
into
lcall
dec
gs
jns
push
jge
sbb
test
fsubs
nopl
cmpsb
jo
hlt
in
xchg
test
xor
push
xchg
jmp
sbb
cld
fs
push
pop
xor
or
sub
add
xchg
insl
incb
xchg
mov
mov
inc
hlt
out
fisubl
sbb
ds
jmp
popf
adc
jmp
je
mov
adc
scas
push
add
in
mov
mov
fisttpl
xchg
xor
imul
mov
cmpsl
dec
mulb
out
leave
lret
js
xchg
fs
das
push
fucom
dec
pusha
jns
sub
out
push
inc
fiaddl
inc
stc
imul
jbe
sub
cmc
notl
mov
lcall
fimull
sbb
sbb
xchg
dec
lods
cmp
jle
jne
add
mov
mov
mov
call
dec
pop
in
xor
jo
mov
icebp
xor
and
xor
ljmp
stos
gs
push
mov
rcrb
lcall
sub
out
aam
ss
inc
push
pop
xchg
movsl
in
mov
out
xchg
sbb
xor
push
xchg
jnp
cmpsb
daa
dec
push
test
mov
xchg
in
mov
daa
dec
pusha
daa
push
cltd
lcall
loopne
xchg
adcl
xchg
dec
mov
ret
sub
and
pop
or
push
and
cmp
push
out
fsts
sbb
jp
push
xchg
jns
pop
fidivl
ss
fcmovnbe
cmp
arpl
push
daa
movsb
sbbl
xchg
outsb
push
xchg
jno
dec
mov
pop
sub
jno
in
mov
cmc
add
cmp
mov
ret
add
or
arpl
shrl
add
or
add
dec
imul
ja
push
loop
popf
sub
push
scas
jo
ret
fdivl
xchg
xor
add
imul
or
mov
cmp
or
aad
jbe
fstl
dec
mov
jecxz
sbb
out
lret
insl
cmp
push
cld
dec
push
out
jae
repz
push
mov
sbb
push
repnz
mov
sbb
add
shl
cmp
sub
mov
inc
or
and
jbe
fwait
or
fcompl
mov
push
sbb
pop
mov
mov
adc
add
jecxz
mov
stos
add
or
dec
sar
sahf
sti
ds
sbb
xchg
shll
aam
sbb
mov
sbbl
pop
insl
jne
mov
fcoms
data16
mov
shlb
cmp
cmp
dec
push
sti
insb
inc
lds
lcall
popa
fidivrl
add
popa
push
ss
leave
sbbb
cld
sti
mov
inc
mov
jge
jg
add
mov
mov
xchg
dec
std
sti
xor
or
jae
gs
pushf
and
jo
scas
das
mov
sbb
pop
out
fmul
rcll
inc
xchg
dec
jge
add
into
movsl
mov
push
or
adc
movsb
inc
adc
adc
iret
and
inc
std
je
pop
andl
xchg
in
add
mov
and
cmpsl
mov
stc
dec
rcl
stos
and
jne
shlb
mov
rcll
jmp
scas
dec
xchg
out
shll
add
sbb
push
ret
fldenv
jl
push
lods
cmp
or
int
sbb
data16
xchg
inc
insb
imul
stos
push
xchg
mov
daa
push
cmc
ja
jge
mov
shrb
mov
inc
adc
sbb
int3
push
call
xchg
xchg
mov
xor
push
rcll
fdiv
sub
clc
test
fisubs
cmp
les
cs
jns
jno
sub
xchg
add
jge
sub
pop
xchg
mov
into
and
cltd
das
outsl
dec
or
dec
mov
jp
mov
mov
hlt
outsl
loope
adcb
mov
dec
cmpsb
push
and
dec
sbb
into
and
andl
loop
mov
mov
cltd
ret
push
lods
imul
pop
ljmp
out
or
and
cli
fidivrs
add
fdivp
mov
mov
pusha
and
cmp
iret
fsubl
sbb
pushf
and
mov
cmpsl
stos
mov
stc
adc
hlt
stos
dec
sub
or
cmpsb
das
es
and
in
mov
je
je
inc
movsl
push
popf
sbb
dec
sbb
enter
stc
mov
inc
cmc
addl
cli
call
sbbl
xor
dec
rolb
cmp
cmpsl
fs
hlt
ja
inc
and
loopne
xchg
jns
sub
sub
add
pushf
xchg
pop
pop
push
mov
aad
fwait
sahf
int3
stos
loopne
dec
mov
insb
fstl
sbb
std
jb
jecxz
pop
loop
ficomps
popa
ljmp
sbb
arpl
xor
pop
inc
out
addr16
push
fisubl
cwtl
mov
mov
ljmp
lods
xchg
jo
sarl
or
mov
mov
jno
stos
mov
sub
or
sti
adc
and
mov
pop
mov
cli
and
xchg
and
movsb
faddl
pop
enter
mov
lahf
into
push
sbbl
fiaddl
mov
imul
rolb
xchg
cmc
xchg
shl
lret
incb
push
int3
or
mov
and
outsb
xchg
mov
mov
lea
mov
shll
inc
add
repnz
xchg
addr16
ljmp
dec
loope
scas
add
shr
pop
test
jno
je
leave
add
inc
adc
ror
sub
push
mov
sti
popa
popa
test
adc
or
aam
or
les
icebp
cmpl
rcrl
push
cmp
cltd
fbld
lods
cmp
test
xchg
dec
xchg
sbb
or
in
out
popf
adc
mov
dec
or
repz
jmp
jb
lock
rol
push
cmp
loop
push
call
push
push
mov
leave
sub
popl
movsb
popl
mov
sbb
js
jmp
iret
sahf
push
stc
cmp
pop
cwtl
or
movsb
test
cmp
xchg
leave
dec
jle
or
xor
mov
les
and
cmp
lods
push
pop
xor
jne
pop
cmpsb
adc
iret
mov
icebp
lcall
cmp
sub
in
mov
stos
sub
test
into
lods
ffree
jno
sub
fists
fisubl
insl
and
sub
mov
sub
lret
in
push
push
fistps
push
test
fldl
orl
sbb
repnz
pop
mov
fwait
sahf
jge
addb
pusha
xor
xor
lea
cli
sub
fcomps
insl
ficoml
fmulp
pop
mov
cmp
push
dec
insb
jb
stos
mov
bnd
aas
shll
nop
fcmovu
arpl
sbbb
je
adc
aaa
bound
jl
inc
jne,pn
mov
pop
mov
pop
dec
mov
rcrl
mov
dec
out
pop
inc
push
pop
in
pop
mov
dec
fmul
pop
call
cmpsb
stc
sahf
cmpsb
and
dec
cmpsw
lahf
mov
jmp
xor
sbb
jo
rcll
push
sbb
push
lcall
add
fists
add
fdiv
mov
popa
out
sahf
popf
adc
iret
jecxz
push
cmp
lret
push
xchg
push
xchg
in
repnz
out
outsb
stc
jns
outsl
push
repz
lcall
push
push
aas
xchg
cld
das
jmp
insl
xor
fisttpl
add
movntq
sbb
mov
subb
pop
adc
les
out
in
rcl
scas
dec
inc
and
sti
cmpsb
out
sbb
sbb
cmp
mov
xor
sbb
cmp
stc
dec
rdrand
cld
sub
mov
push
iret
inc
loopne
push
rorl
ja
xchg
leave
push
inc
jle
out
ret
mov
imul
xchg
hlt
ss
pop
jge
lahf
and
xchg
xchg
aaa
mov
mov
les
xchg
inc
sbb
cmp
lea
movsb
jl
sbb
lods
mov
test
iret
out
imul
mov
sub
stc
or
call
xchg
andb
lcall
xchg
clc
jmp
xchg
leave
mov
push
sub
sbb
xchg
lds
aam
xchg
dec
addr16
lea
sti
in
leave
add
xlat
ret
lcall
loope
cmpsb
mov
repz
add
jne
shlb
jnp
dec
lods
ja
dec
lea
xchg
pop
cs
cmpsl
pop
pop
sarl
sbbb
test
iret
cmp
dec
pop
insb
fcoml
push
stc
std
ljmp
int
pop
jo
mov
cmp
into
push
in
test
dec
xlat
out
jae
adc
pop
ror
es
scas
xor
sbb
in
arpl
or
hlt
or
sbb
loop
pop
mov
dec
push
ja
test
xchg
int
jmp
repnz
cwtl
xor
movsb
mov
add
movsl
sub
ret
aaa
call
testb
xchg
cmc
scas
mov
into
and
arpl
xchg
mov
inc
imul
xchg
stc
fstl
out
and
shlb
fwait
ret
fcoml
popf
or
mov
mov
cmc
gs
hlt
stos
fdivrs
pop
xchg
pop
hlt
lea
sub
dec
repnz
pop
adc
rolb
push
test
pop
movsl
imull
inc
test
add
out
adc
stos
or
loopne
lock
xchg
sub
shrb
vcvttps2dq
mov
and
sbb
scas
fxch
cli
popa
push
xchg
mov
adc
fidivl
rorl
add
add
orb
daa
mov
cmp
daa
bound
xchg
jns
jle
daa
je
stos
int3
mov
inc
inc
mov
mov
sub
pop
cmc
aas
jecxz
and
inc
shl
icebp
pusha
add
xor
cmp
repnz
dec
insb
dec
mov
subl
sub
loop
cld
sbb
cmp
cmc
cmp
daa
punpcklwd
jne
xor
rcrb
enter
dec
cmc
xlat
insb
inc
ret
xchg
andb
pop
inc
movsl
nop
jge
xchg
xor
mov
jae
dec
test
inc
pop
and
ja
setl
dec
fiadds
adc
dec
repnz
leave
mov
rorb
fdivrs
sti
ficoml
add
sbb
dec
cmp
jno
adc
fs
add
repz
cs
sub
inc
pop
into
aad
cmc
dec
cwtl
jecxz
xor
mov
jne
cmpsl
andl
cmp
sbb
pxor
movsl
xchg
mov
add
mov
stos
std
stos
adc
into
roll
fldcw
stc
test
jp
inc
mov
aaa
into
out
bound
push
dec
push
dec
mov
fwait
int
dec
stos
test
rorl
popf
aad
and
gs
or
out
jns
inc
mov
dec
aad
lret
sbbb
adc
nop
jecxz
fisubrs
jnp
add
sbb
jl
ficoms
xlat
xor
dec
jbe
cld
mov
dec
dec
fimull
jg
sub
out
jns
jg
adc
sbb
jle
push
adc
xor
scas
xor
sub
sbb
inc
dec
xchg
adc
cltd
les
mov
in
stc
dec
ja
jb
gs
test
mov
xor
imul
and
mov
nop
sbb
inc
lods
and
cmp
jns
or
sub
cmp
imul
fwait
add
jbe
pop
inc
sbb
lahf
aaa
outsl
jnp
xor
jb
pop
shll
xchg
ret
lock
mov
popf
push
shll
jg
jg
jnp
and
fs
adcb
mov
int
mov
cmp
mov
stc
loope
in
adc
aad
or
dec
in
lea
or
pop
push
call
insb
cltd
or
cli
xchg
xor
scas
jno
jecxz
mov
daa
fildl
push
loop
imul
mov
ret
shll
jl
fsubrp
mov
ja
mov
mov
sub
adc
mov
loop
sbb
add
mov
sub
add
lret
mov
fs
pusha
mov
hlt
int3
pop
add
test
pop
add
mov
dec
fwait
sub
aaa
in
enter
repz
lock
jns
je
add
cld
push
jp
test
fwait
inc
cmp
and
je
adc
push
cwtl
pop
xchg
cmc
out
ds
jns
fwait
jmp
or
cmc
inc
testl
pusha
dec
mov
stos
into
lahf
addr16
popf
test
imul
cs
cmpsb
or
addl
lcall
dec
in
orb
mov
pop
icebp
outsl
out
out
push
sbb
mov
dec
sbb
mov
movsb
ja
push
jns
nop
or
jae
mov
mov
mov
ja
xchg
int
cmp
repnz
mov
popa
fisubs
sbb
dec
test
push
shrb
icebp
pop
dec
push
cmp
mov
mov
cmp
push
loop
push
mov
pusha
imul
and
push
sbb
out
sbb
hlt
test
lods
lods
xor
pushf
ja
push
aas
mov
push
stos
jne
enter
and
pop
loopne
enter
xchg
inc
movsb
mov
imul
fs
and
andb
mov
in
lcall
lret
jge
xchg
xor
loop
inc
ret
cmp
xor
into
jmp
and
movsb
jb
outsb
lods
mov
arpl
jg
std
arpl
rcl
push
cmc
sub
add
fxch
mov
cmpb
push
or
xchg
pop
nop
andb
pop
and
aam
in
cmc
jnp
or
and
mov
es
pop
inc
sbb
lret
or
mov
cmpl
shr
daa
imul
sub
xor
fdivs
mov
test
mov
loop
je
pop
out
jle
sub
das
aaa
jle
xor
adc
mov
mov
mov
xor
sbb
jo
fldcw
pop
call
sbb
cmp
fs
cwtl
sub
sub
out
dec
testb
mov
pop
inc
aam
xor
jbe
insl
push
imulb
xor
mov
inc
xor
mov
repz
mov
clc
mov
movsl
and
xchg
das
or
and
mov
outsl
fs
aad
sti
push
ds
sbb
pop
push
sbb
test
or
push
pop
data16
jmp
pop
setge
xchg
mov
push
add
fs
jg
pop
mov
inc
mov
or
stos
pusha
xchg
mov
lods
cltd
inc
xor
sbbl
ds
cli
add
aas
loopne
cmp
inc
ret
je
xor
xor
add
dec
sub
adc
sbb
scas
cmpsl
mov
scas
in
repz
xor
xchg
jecxz
dec
cmp
testl
xchg
inc
sahf
adc
das
repnz
sahf
mov
fadd
xchg
dec
jno
push
jo
pop
mov
mov
adc
ja
cwtl
xchg
int
xchg
jae
fsubl
push
dec
cld
lea
popf
aaa
inc
sbb
cli
lcall
push
orps
push
inc
inc
mov
pop
xorl
stos
or
daa
and
icebp
pmaxub
push
out
jns
push
or
iret
adc
rcrb
lcall
mov
inc
outsb
into
sub
mov
in
shrb
mov
jg
ds
dec
fucom
push
cmpb
cltd
adc
xor
int3
and
sub
push
mov
dec
push
cli
daa
lahf
mov
jbe
jb
jo
ja
sbb
dec
jmp
push
xchg
push
push
icebp
add
xchg
scas
xchg
dec
and
sbb
adc
aas
pop
outsb
xchg
fnstsw
in
lds
add
xchg
popf
and
jp
push
in
fiadds
lds
push
shll
shll
daa
shlb
inc
inc
xchg
sub
bswap
jno
aam
frstor
jmp
subb
rcrb
jge
scas
fists
hlt
push
pop
sub
cld
xor
jns
and
cmp
fcmove
push
mov
mov
xorb
mov
mov
xor
pop
lea
sbb
and
adc
inc
add
adc
addl
or
in
cwtl
call
mov
pop
std
arpl
sub
sbb
fdivs
add
jecxz
push
and
mov
cmp
and
xchg
movsb
lcall
insb
ds
rolb
out
lret
push
inc
add
loopne
and
mov
idivb
and
imul
or
cmpsb
add
adc
jb
ljmp
push
hlt
test
add
negb
pop
daa
outsb
mov
imul
test
ret
mov
and
fwait
call
cmpsb
adc
cltd
shlb
ret
xor
mov
xor
xchg
cmp
negb
subb
lds
jp
cmc
cmp
dec
jbe
add
shll
mov
xchg
jle
flds
cmpsb
and
inc
movsb
inc
jne
or
cmp
sub
sub
cmp
pop
jmp
sbb
aaa
dec
push
ljmp
xor
add
into
scas
mov
daa
push
arpl
mov
arpl
mov
xchg
mov
bound
add
pshufw
std
setg
mov
movsb
or
imul
shrl
xlat
sub
movsb
sub
insb
js
nop
xchg
adc
pop
pop
add
adc
fistps
es
and
fdivl
mov
sbb
jecxz
cmp
push
fstpt
fstpt
dec
les
lods
incb
dec
or
and
loopne
lods
aad
xlat
cmp
mov
fcomip
or
test
int
arpl
jmp
loopne
leave
clc
lea
outsl
sub
push
ja
enter
push
push
inc
or
daa
test
pop
ljmp
nop
bound
cmp
outsl
ret
ds
jns
cmp
mov
mov
shrb
mov
int3
ret
data16
jg
pop
loope
cwtl
add
cmpsl
iret
add
mov
testb
mov
testl
mov
inc
mov
cli
jmp
mov
push
pop
fxch
and
insb
or
mov
xchg
mov
push
and
pop
in
cld
lds
sbb
pop
mov
xor
xor
test
mov
lods
ja
push
mov
sub
jns
leave
rcr
sub
ja
addb
loope
xchg
aam
stc
cmp
pushf
in
pop
insl
paddsb
push
mov
fyl2x
adc
lcall
inc
nop
push
je
fadd
das
cmp
sarl
add
fwait
mov
ljmp
fnsave
xlat
in
dec
les
sbb
ss
push
lahf
lcall
jne
int
enter
pop
jo
mov
and
mov
sub
mov
mov
jns
xor
inc
pop
mov
loop
cli
enter
fistl
sahf
push
adc
es
js
insb
dec
fisubl
xchg
es
xor
xchg
cmpsl
add
cmp
push
in
or
imul
inc
mov
xchg
mov
and
lahf
push
pop
cmp
in
roll
mov
sahf
push
mov
mov
pushf
xchg
lock
push
cmpb
cld
in
add
lahf
movsl
test
ljmp
mov
push
pop
mov
pop
pop
push
xchg
mov
add
inc
pop
sub
jecxz
push
paddq
push
je
inc
loopne
jb
pop
pop
mov
testl
nop
lds
sub
out
sub
cwtl
pop
test
cmpsb
xor
pop
sbb
ss
mov
sub
xchg
test
cli
or
sahf
mov
js
xchg
xchg
add
sahf
cmpsl
dec
xchg
cld
mov
xchg
fldenv
xor
shrl
idivb
pop
or
xchg
xor
mov
inc
rorl
aas
out
popf
dec
pop
test
daa
sahf
xlat
mov
jg
push
dec
outsl
pushf
dec
jno
hlt
aas
test
fs
aad
lods
mov
not
test
jno
pop
mov
mov
dec
sbb
out
inc
add
push
jmp
dec
orl
pusha
sub
pop
pop
mov
mov
ja
sub
shlb
subl
add
daa
aaa
out
jne
imull
call
lea
das
frstor
xor
sbb
test
cld
pop
inc
pop
adc
aad
mov
fldt
jno
sub
scas
mov
dec
mov
mov
lods
pop
add
xor
and
mov
dec
adc
gs
pop
sbb
lock
jae
popf
push
and
shl
add
pop
cs
pop
outsl
mov
les
movsb
fdivl
insl
inc
out
call
imul
sbb
fadds
cmpl
jnp
cs
aas
xchg
xchg
orb
xchg
fldenv
mov
jl
nop
cmp
lret
jmp
xchg
fwait
pop
pop
ret
popa
out
insb
in
jne
xchg
push
cmpsl
sbb
add
fwait
test
mov
xor
push
in
test
mov
jbe
xchg
xchg
mov
xor
cld
setnp
sub
push
in
pop
out
and
xchg
movsl
shll
cmpsl
cmp
fcomp
jns
jl
ret
or
cmpsl
testb
mov
xchg
pop
xchg
fstl
les
sub
jnp
pushf
jbe
aas
inc
out
loopne
imul
jp
pusha
fisttpl
test
cmc
xor
xor
rolb
ds
lea
pop
and
testl
cmp
mov
nop
cmp
mov
xlat
les
loop
mov
fisttps
movsb
sbb
and
mov
cmp
mov
out
imul
popf
and
ljmp
outsb
xor
js
rcr
and
into
jno
mov
shlb
xchg
lods
push
hlt
push
ljmp
fwait
inc
rolb
pop
test
mov
pop
sarb
ss
rclb
dec
lret
cmp
jbe
xchg
push
mov
fwait
jb
ret
pusha
int3
or
stos
nop
pop
xchg
push
dec
sub
int3
popw
loop
idivl
stc
inc
add
inc
inc
cmpb
cmp
push
inc
sub
repz
dec
out
sub
adc
in
lock
sbb
inc
rcrb
mov
out
in
aaa
dec
xchg
aad
cmp
sub
and
jmp
add
pop
xor
pop
mov
push
jg
cmp
pop
pop
or
lds
inc
push
out
pop
dec
rcrl
shlb
jnp
inc
sub
add
aad
dec
push
sbb
cltd
inc
mov
adc
ficomps
cltd
ss
imul
xorl
mov
or
sbb
push
cmp
jnp
idiv
data16
jecxz
loopne
pushf
popa
flds
mov
mov
movsb
mov
loop
inc
push
pop
out
dec
addr16
xlat
and
das
movsb
stc
cmc
sub
js
mov
fwait
lods
adc
imul
cmp
popa
sub
xchg
aaa
sub
mov
xchg
test
psubw
sub
pop
mov
pop
push
fdiv
je
int3
add
outsl
test
sub
shl
in
dec
sets
dec
ss
adc
xor
jno
add
and
mov
loop
pop
sub
jl
push
sub
push
mov
jl
loope
mov
scas
cmp
inc
mov
lods
add
pop
loop
rolb
fimuls
pushf
cmp
leave
add
das
jle
insb
mov
pop
jp
sub
das
cmp
sbb
cmp
nop
sub
push
aam
xchg
inc
jg
push
ret
mov
sbb
mov
or
jge
cmpsb
inc
dec
cltd
clc
adc
cs
sbb
mov
adc
fcoml
xchg
mov
shll
je
roll
pop
jle
push
or
push
pop
sbbl
in
and
fiadds
stos
add
test
rcll
iret
mov
jmp
mov
add
repnz
add
inc
icebp
add
fbld
add
mov
jb
xor
repnz
xchg
arpl
pop
sub
inc
in
dec
and
pop
shlb
test
pop
ljmp
and
das
cli
es
pop
pop
mov
dec
sbb
adc
add
in
arpl
dec
fldt
mov
fsubl
scas
pop
add
push
int
fbstp
cmpsl
inc
mov
cld
sub
movsl
and
popf
clc
or
or
cwtl
adc
stos
sbb
jl
and
mov
and
mov
daa
mov
or
subl
cmp
stc
xor
and
adc
test
xchg
dec
mov
cmp
mov
add
push
lcall
push
loop
lcall
pusha
daa
add
imul
add
into
leave
inc
xchg
jnp
jecxz
xchg
xchg
and
pushl
inc
lods
test
rorl
jns
and
pop
pushf
dec
iret
aam
mov
out
filds
sbb
push
push
mov
jb
push
popf
pop
xchg
cmp
movsl
stos
push
pop
add
jg
bound
cmpsl
sbb
xchg
push
cltd
test
pop
adc
sub
add
add
dec
int
stos
ret
push
adc
loopne
lahf
out
iret
shrb
stc
nop
mov
aaa
jle
inc
mov
adc
movsl
mov
test
ja
mov
push
fwait
mov
mov
mov
ret
sbb
jmp
mov
aas
and
data16
pop
popa
pushf
es
rcrb
adc
outsb
jmp
idivb
aad
and
xchg
es
add
inc
mov
lcall
dec
cwtl
inc
mov
jl
lods
add
ret
add
add
insl
pop
je
mov
xchg
jg
clc
add
push
and
xchg
popa
sub
pop
cmc
sbb
dec
and
and
stos
les
test
bound
rclb
mov
nop
sub
xchg
mov
aas
adc
cltd
cmp
sbb
sarl
push
xchg
int
ljmp
rolb
or
fs
mov
and
mov
mov
inc
adc
fs
adc
out
insl
xor
jns
cmpb
ret
cmpsl
inc
and
ja
bound
fs
lret
and
add
xor
xchg
sub
data16
idivl
cmp
jp
shrb
push
pavgw
js
jne
dec
jo
cmpsl
jle
push
push
imul
mov
xlat
lret
xor
jbe
dec
cmpsb
sbb
sub
js
mov
mov
jne
adc
std
fmulp
dec
mov
inc
int3
int
mov
or
sbb
and
test
int
sbb
or
enter
out
cmp
adc
sub
mov
add
nop
and
jne
push
pop
push
jb
mov
push
cmp
adc
dec
mov
jle
xchg
in
sub
ss
xchg
fildll
test
fbld
push
xchg
pop
popa
cmp
loopne
lods
pop
xchg
pop
mov
bound
jnp
push
xchg
bnd
jo
mov
mov
out
inc
lock
pop
add
jbe
ret
out
dec
jbe
push
sub
test
jecxz
mov
push
sub
popa
push
roll
jno
sti
inc
fiadds
mov
fs
mov
das
out
push
and
daa
test
mov
rclb
or
push
and
sbb
pushf
adc
and
xchg
sub
mov
xor
lret
sub
in
cmp
lahf
popa
sbb
fidivs
xor
sti
out
cs
dec
mov
inc
pop
scas
adc
xchg
mov
push
sbb
data16
lods
stos
fcmovnb
shll
loope
movsb
pop
rclb
leave
pop
into
sbb
xchg
out
add
add
les
jns
push
ret
stos
mov
imul
adc
dec
pop
insb
mov
mov
dec
mov
orl
pop
mov
xor
fsubr
adc
mov
lea
mov
inc
in
imul
sub
xchg
and
fidivs
pop
xchg
and
mulb
out
inc
mov
adc
leave
xor
xchg
andb
fsubrl
ret
jbe
jecxz
mov
mov
adc
xchg
notb
test
push
xlat
mov
test
ljmp
rolb
imul
cmpb
or
pop
mov
xchg
sub
int3
and
imul
inc
nop
jg
jge
ss
jle
cs
rolb
inc
rol
stos
jg
mov
and
mov
fcoms
inc
ja
mov
adc
mov
inc
push
rcl
and
pop
and
rorb
in
sub
cmpsb
std
stc
adcl
adc
mov
loopne
dec
fisubl
cmp
push
inc
xor
add
fimull
add
les
pop
popf
jo
dec
mov
cmp
stc
ss
mov
sti
xor
loop
push
fs
cmp
cmp
arpl
cltd
sarl
clc
add
add
dec
pop
mov
mov
sub
ret
sbb
cmp
dec
int
dec
leave
mov
ds
cmp
inc
int3
dec
inc
push
or
mov
cmp
cmp
sub
push
and
sbb
adc
push
sbb
inc
mov
push
mov
pop
les
pop
lock
scas
fs
dec
dec
popf
pop
rorl
cmp
push
rcrl
out
cmp
add
or
xchg
jo
pusha
lahf
or
sbbl
orl
mov
das
rolb
xchg
jbe,pt
mov
jle
and
rol
inc
dec
cmc
movb
cwtl
int3
adc
scas
sbb
mov
in
mov
jmp
cmpsl
insb
je
mov
jns
data16
cmp
push
xchg
and
cli
gs
outsb
pop
in
jecxz
or
ja
sbb
dec
mov
pop
lahf
aad
push
xor
cmp
je
lds
push
pop
mov
cmp
fidivs
icebp
add
loop
xor
dec
arpl
xchg
xchg
mov
popf
mov
mov
cmpl
xor
loop
test
and
imul
cmp
push
dec
push
roll
stos
cmp
cmpsl
scas
add
pop
push
mov
mov
and
rclb
pushf
ret
imul
test
inc
mov
xor
movsl
in
hlt
push
mov
les
adc
int3
fidivrl
dec
cmpsb
mov
movsl
xchg
dec
sahf
xor
imul
std
sbb
outsb
xchg
imul
inc
dec
adc
inc
pop
ljmp
push
jmp
fiaddl
dec
sub
mov
aaa
ljmp
dec
or
jcxz
cmp
out
out
adcl
mov
adc
mov
ficompl
mov
mov
repnz
jge
dec
insl
mov
cmp
push
negl
shr
fbld
imul
xchg
shll
rorl
rcrb
mov
cli
inc
into
inc
xchg
jp
insl
mov
imul
pop
test
jmp
dec
je
inc
pop
shlb
jb
adc
ret
mov
sbb
js
and
mov
das
test
std
sbb
and
sahf
out
es
inc
add
test
shl
subb
adc
call
dec
or
inc
movsl
dec
repz
cmp
in
nop
mov
shrb
leave
jo
jns
jbe
mov
pop
mov
cmp
sbb
ficompl
push
idivb
sbb
and
xor
daa
test
xchg
push
adcb
xchg
aas
dec
insb
leave
or
jb
mov
shl
lods
fidivl
daa
leave
push
mov
mov
push
lret
sub
sub
xchg
shr
cld
mov
mov
fwait
add
mov
inc
test
jbe
xchg
aad
cltd
jl
push
mov
jb
idivl
stc
in
jge
out
insb
push
and
jae
mov
leave
xchg
sub
sbb
cs
call
pushf
sub
inc
std
xor
out
test
pop
sti
outsb
inc
jne
mov
dec
mov
push
push
jne
into
dec
sub
mov
push
mov
sbb
xchg
sub
imul
sarb
push
push
jae
jb
push
into
adc
add
test
int3
outsb
xlat
call
adc
mov
xchg
xchg
xchg
jno
inc
es
mov
inc
mov
lods
arpl
ljmp
push
inc
and
into
dec
lea
adc
push
clc
inc
mov
and
jecxz
lods
in
popa
icebp
sub
scas
cltd
dec
xchg
in
pusha
sbb
cmc
fidivs
add
fsubrl
push
add
dec
pop
xchg
sbb
arpl
iret
sub
icebp
xlat
inc
mov
mov
push
dec
addr16
inc
ss
inc
fcmovne
cltd
or
adc
xchg
subl
pop
inc
leave
xorl
ss
cmp
iret
push
es
sbb
cmpsl
push
stos
sbb
mov
mov
call
add
jge
cmp
stc
jo
xchg
sbb
lea
inc
sahf
push
ficoml
xchg
pop
outsl
mov
sub
cmpsb
push
cltd
out
mov
push
mov
adc
in
dec
inc
jbe
mov
inc
cltd
cmp
cmc
cmp
cmpsl
jmp
shl
js
cs
fmul
mov
aad
rol
push
popa
lcall
js
xor
int
mov
rorb
add
sti
mov
dec
push
lret
pop
xor
mov
out
ret
and
or
and
int3
sahf
mov
inc
xor
int3
xchg
rorb
dec
in
jg
jecxz
into
cmc
sbb
imul
mov
cmp
mov
pop
fsubrs
shlb
and
mov
or
movsl
sub
icebp
xchg
lcall
aas
sbbl
jnp
mov
aas
and
mov
rol
repz
xchg
mov
out
jecxz
xor
cmp
inc
jl
push
test
mov
mov
dec
mov
ljmp
fwait
stos
jnp
in
sub
xchg
loopne
in
adc
jle
mov
iret
and
dec
aas
fmull
insl
movb
loop
sar
divl
aam
or
xchg
stc
sarl
jg
pop
mov
mov
mov
cmpb
aas
sbb
in
addb
lcall
xchg
or
ja
dec
into
dec
cmp
mov
popa
jp
int3
jae
mov
xchg
lea
sbb
pop
cmc
scas
pushf
or
roll
daa
xchg
cmp
stc
xchg
inc
xchg
fcompl
es
inc
scas
sbb
xchg
lock
or
pop
sbb
movsl
out
cmp
lret
cwtl
rolb
or
loop
ds
out
divl
divb
jmp
and
dec
jle
imul
dec
pop
mov
out
lahf
bound
jmp
cmp
hlt
nop
mov
adc
sub
bound
dec
push
shlb
sbb
inc
stc
popa
movsb
imul
test
shll
int
into
jmp
aad
inc
xor
ss
ret
addb
add
imul
imul
sbb
mov
xchg
mov
sbb
jo
mov
scas
mov
sub
jecxz
inc
push
test
fnstcw
ds
and
sbb
lahf
adc
cld
data16
sub
out
outsl
xchg
pop
inc
je
sbb
in
js
stc
pushf
fdivrs
sbb
push
ljmp
ljmp
clc
push
or
mov
into
adc
jl
inc
js
jmp
arpl
mov
mov
pop
cmp
ret
add
adc
cmp
xchg
fcoml
aam
loope
mov
mov
xchg
pop
xchg
sub
dec
aaa
adc
fs
cmp
imul
and
adc
scas
mov
dec
js
aas
lret
push
aad
jbe
dec
mov
in
add
mov
xchg
pop
dec
push
fwait
loope
adc
orb
ja
sub
mov
sbb
jge
adc
dec
push
ljmp
lcall
fistpll
pop
and
mov
mov
dec
mov
add
orb
fdivl
add
aaa
or
lcall
sbb
cli
lret
adc
ja
mov
dec
rorl
stc
ret
xor
adc
in
push
adc
dec
call
push
jno
sub
out
dec
loope
icebp
mov
pop
mov
pop
and
sub
mov
cmp
mov
push
addr16
add
mov
add
int3
fwait
lods
lea
mov
mov
dec
int3
out
jae
lods
mov
subb
lods
or
jo
and
adc
mov
aaa
mov
icebp
insl
cs
xchg
mov
stc
xchg
sti
dec
and
shl
mov
mov
outsl
stos
sbb
aaa
pop
mov
adc
sub
ds
or
daa
mov
nop
jae
sbb
xlat
imul
mov
pop
out
adc
mov
cld
ss
sbb
fucomip
push
mov
or
test
imul
xlat
mov
test
cmp
or
lret
cmp
shlb
pop
aas
mov
in
cwtl
dec
xor
adc
push
inc
scas
jo
xchg
or
stos
xor
lret
data16
mov
dec
or
dec
add
xchg
xchg
std
lods
or
mov
fstpl
mov
mov
fstl
ror
xorl
and
cmp
fidivs
mov
std
jmp
insb
adc
mov
jle
xor
push
inc
dec
fstps
test
sbb
sbbl
xchg
sub
imul
lods
xchg
rorl
and
mov
mov
xchg
jo
repnz
and
ret
mov
fwait
and
sbbb
arpl
add
dec
fcomp
mov
aaa
ret
fisubrl
mov
sbb
movb
mov
aaa
push
pop
inc
dec
xchg
dec
mov
sbb
jnp
or
cli
out
in
dec
mov
dec
aas
adcl
pop
sub
arpl
fsubrs
push
mov
cmc
xor
aaa
mov
testb
shrl
add
shrb
mov
dec
ret
mov
imul
sub
sbb
jno
mov
scas
fs
call
xchg
push
mov
les
pop
sub
out
and
out
dec
ficompl
fdivl
xor
jno
outsl
in
mov
mov
fistl
iret
mov
push
push
mov
pop
xor
rcrl
arpl
aas
mov
fwait
push
lock
adc
inc
and
sbb
and
add
in
and
jp
int3
pusha
daa
fsts
rcrl
inc
ret
mov
dec
push
mov
leave
gs
pop
imull
pushf
jno
js
lahf
rol
lock
sub
cld
adc
sub
sbb
inc
xchg
ss
pop
lret
or
gs
mov
jno
fstpt
inc
popl
nop
dec
cmpsb
sti
sbb
pop
jmp
inc
add
jnp
xchg
in
rcrl
dec
cmp
cmpsl
lret
or
shlb
xor
lock
ja
repz
pop
sub
insl
aad
iret
xor
jecxz
scas
fstpt
mov
lea
addb
ja
and
maskmovq
divl
jmp
adc
outsl
bnd
mov
movsb
lds
btr
dec
fimull
jnp
sub
cld
mov
xchg
loop
pusha
ljmp
dec
adc
add
sbb
ret
hlt
mov
fwait
xlat
sbb
insl
clc
dec
mov
jecxz
lods
add
push
popa
in
nop
push
fidivs
loope
and
mov
ds
data16
push
shlb
pop
inc
mov
pop
dec
daa
adc
push
imul
cwtl
push
and
rolb
cmp
nop
jnp
xor
and
or
ret
mov
cmp
pop
cmp
mov
jbe
and
adc
imull
or
and
jnp
add
out
dec
pop
sarb
xchg
iret
sbb
mov
fs
sbb
xchg
mov
jg
das
fcoml
popf
or
stos
stos
mov
push
jl
sbb
cli
xchg
and
lcall
scas
adc
mov
mov
mov
jge
ljmp
shll
ljmp
insb
in
lock
inc
push
pop
push
vmovsd
push
xchg
bound
xor
push
divl
call
sub
xchg
cmp
mov
sub
jno
lcall
pop
jnp
daa
data16
sti
loopne
aam
mov
rcr
xor
and
xor
add
jnp
mov
into
pop
pop
inc
add
pop
sbb
sbb
adc
lahf
mov
cmovne
in
jae
mov
or
pusha
xchg
sbbb
aas
cmp
fadd
jmp
bswap
and
rcrl
stos
jmp
insl
mov
lcall
out
sub
lods
inc
or
xchg
mov
jmp
test
mov
es
xor
imul
jo
cld
xor
jle
int3
jbe
lahf
dec
push
das
ret
mov
adc
in
out
sbb
repnz
int
shl
test
add
jne
mov
mov
inc
stos
fistl
les
ss
adc
int3
mov
cld
pop
adc
inc
xor
xor
call
inc
out
pop
and
xchg
push
pop
outsb
pop
xchg
fs
dec
jle
mov
mov
jno
mov
cli
xchg
and
clc
dec
cld
cmpsl
inc
fildl
pop
fdivs
xor
aaa
jmp
mov
jno
pop
nop
add
cmp
fimull
pop
add
or
cs
add
dec
lds
mov
xchg
push
cmpsl
mov
xor
repz
js
xor
or
bswap
stos
cmp
hlt
mov
sub
pop
and
rorb
push
cmp
mov
mov
and
inc
pop
repnz
shlb
sub
and
push
xchg
lods
adc
sbb
mov
inc
adc
idivb
in
sub
mov
dec
les
je
jmp
clc
lds
addr16
mov
rorb
scas
mov
test
pop
push
mov
cld
es
push
cli
jl
or
inc
mov
sub
stos
cmp
cmc
test
ja
aad
or
or
xlat
push
mov
into
mov
shrb
popa
jbe
sub
sub
in
orl
xor
stos
push
sub
aad
sbb
sbb
shrl
pusha
insl
fs
cmp
imul
rcrl
mov
pushf
lds
sbb
cmp
xchg
inc
sub
sbb
imul
in
sbb
cmp
ret
cmpsb
push
cltd
xor
adc
jle
stc
dec
push
pop
js
ja
movsb
mov
mov
test
xor
adc
imul
pop
xchg
cld
mov
dec
xor
cltd
in
lds
cmp
leave
jle
sub
xor
push
xchg
jns
dec
cmc
cwtl
mov
loope
mov
jg
test
repnz
xor
repnz
pop
jb
cmpsb
jge
inc
and
loop
mov
inc
loope
or
mov
int
sub
mov
repz
add
pop
jp
and
stos
xor
adc
div
incl
int
rcll
adc
in
mov
dec
sahf
fisubrs
ret
push
das
mov
mov
push
push
inc
popf
inc
push
out
push
nop
lret
xor
pop
mov
pop
sub
popa
mov
ret
jns
push
dec
roll
mov
dec
xchg
mov
les
into
xor
push
lret
mov
mov
push
mov
int3
mov
aam
and
stos
push
cmp
xor
stc
xchg
outsl
les
inc
imull
sbb
jnp
add
or
fldl
cmpsb
div
aad
jl
sub
mov
test
daa
in
cmp
bound
jl
ret
adc
cmpsl
cmp
shrb
loop
jecxz
rorl
sbbb
lods
out
push
imul
repz
test
sahf
jg
sbbb
or
nop
sub
sbb
inc
sub
jnp
lock
mov
dec
push
sarb
add
aas
loope
xor
jo
aad
cmp
sbb
lock
sbb
xor
popf
bound
jle
add
adcl
sub
mov
repz
pop
daa
mov
push
xlat
icebp
out
mov
or
outsb
or
js
or
lods
mov
lds
loop
movsb
dec
xchg
das
jo
adc
nop
aas
mov
popf
push
shlb
mov
cmp
and
pop
ds
les
push
in
ret
sub
mov
sbb
push
stos
sti
jmp
xor
call
frstor
or
xor
xchg
mov
inc
stos
in
push
lcall
dec
addl
xchg
mov
add
aas
ja
das
gs
leave
push
inc
pop
mov
sahf
cli
dec
movsb
lods
rcrl
and
mov
int
rcrb
add
add
sbb
fiadds
shlb
fnstsw
sub
sbb
sbb
popf
and
cltd
popl
mov
and
cmp
mov
insb
cld
push
mov
ret
out
subb
aad
or
or
popa
inc
pop
out
insl
cld
int
mov
sub
divb
bound
scas
popa
out
cmc
popa
mov
and
sub
fistpll
shrb
arpl
jmp
adc
mov
test
dec
sub
fadds
out
into
pop
iret
sub
dec
adc
adc
add
xchg
inc
xchg
ffreep
cmp
aad
mov
mov
sub
cmpsl
outsb
fwait
xchg
adc
shll
into
xor
sub
jmp
cmp
dec
pop
jbe
test
cmpsl
cld
xchg
lea
test
mov
jmp
add
imul
add
push
pop
call
and
cwtl
test
loope
jbe
pop
dec
sbb
rclb
insl
out
push
testb
sbb
sbb
pop
push
mov
jns
je
mov
xchg
and
xor
mov
dec
push
add
out
adc
push
push
inc
and
inc
mov
or
adc
pushf
mov
fistl
xor
hlt
lds
xchg
sub
pop
flds
mov
xchg
and
lods
std
push
push
dec
aad
xchg
ficompl
or
xchg
or
leave
jle
loop
arpl
test
lret
sbb
inc
mov
leave
lret
jno
cmp
dec
xchg
adc
mov
sub
dec
or
inc
testl
push
jnp
fnstenv
imul
fadds
and
xchg
sbbl
popf
es
push
dec
pop
dec
mov
pop
inc
in
sahf
jge
xor
scas
adc
ljmp
movl
fldt
icebp
dec
rorl
int
push
and
cmp
mov
push
outsl
out
sub
cmc
jg
jb
mov
frstor
lea
mov
leave
jo
xchg
leave
pushf
add
fcmovne
bound
xchg
hlt
rorb
jnp
cwtl
mov
dec
mov
add
dec
or
jecxz
xchg
push
add
loopne
clc
rol
xor
fldcw
jecxz
xor
fsubrs
incl
imul
jb
cwtl
cltd
fldpi
into
mov
cld
or
divl
mov
add
jle
ja
lcall
ljmp
mov
enter
je
mov
test
sbb
leave
add
mov
adc
dec
cmpsb
mov
cmp
rclb
sub
dec
sub
xor
mov
mov
popf
mov
inc
sub
xchg
scas
pop
ja
sub
aad
inc
xchg
stos
push
and
pop
test
push
fsubl
sbb
jp
xor
pushf
mov
or
arpl
mov
pop
xchg
scas
sub
jnp
stos
adc
push
xchg
mov
stc
loopne
mov
jae
push
and
inc
and
jb
arpl
cmp
adc
daa
les
cmp
and
lret
mov
mov
add
or
test
inc
pushf
xchg
push
int3
adc
adc
ja
in
jnp
mov
mov
xchg
in
mov
xchg
fwait
mov
jne
cmp
xor
stos
js
mov
add
mov
jno
repz
das
cmp
mov
sub
rcrl
fidivrl
leave
dec
mov
cmpsl
daa
fistpll
les
movsb
and
es
xchg
inc
mov
les
jnp
mov
cmp
test
jecxz
fcmovb
xchg
popa
and
pop
out
lcall
pop
jecxz
mov
das
insl
enter
mov
lret
mov
sub
rcl
jno
mov
mov
inc
push
sbb
jmp
xchg
inc
out
ds
mov
jb
mov
xchg
mov
sbb
movsl
dec
lcall
sbb
jecxz
mov
push
fsubr
repz
add
push
push
pop
lcall
inc
push
test
mov
int
jno
dec
and
mov
xor
test
xor
insb
push
cmpl
pop
pop
leave
bndstx
sbb
inc
adc
add
mov
pop
movsl
dec
or
jl
xor
lea
inc
lcall
sub
pop
int3
test
lahf
dec
mov
mov
pop
ss
push
inc
mov
cmp
shlb
dec
add
pop
pop
fistps
jbe
xor
and
jmp
push
addr16
jae
out
cmp
lahf
arpl
mov
dec
inc
fildl
imul
testl
fcoms
jo
test
hlt
push
inc
xchg
fdivrs
mov
pop
movsl
mov
fs
idivb
popf
insb
test
adc
push
pop
fdivrs
mov
clc
stos
or
sub
stos
or
testb
jb
or
fisttps
lahf
xchg
jns
lods
aam
cs
and
sub
dec
sbb
aam
xchg
ja
cli
dec
push
stos
jl
pop
fs
push
xor
dec
test
push
mov
pop
xlat
sbb
leave
inc
mov
cmc
cmpsl
mov
popf
out
xor
pop
pop
mov
xlat
mov
cwtl
ror
mov
ds
jae
gs
xor
cmp
cmpb
push
adc
push
je
loope
fmuls
adc
subl
mov
popa
dec
lock
inc
xchg
jae
pop
sahf
arpl
in
and
jecxz
pop
sbbl
sub
xlat
iret
pop
jmp
outsb
jg
push
aaa
mov
lcall
pop
and
lods
jns
jecxz
gs
mov
sub
jne
lret
dec
addr16
xor
push
inc
mov
dec
pusha
ljmp
sarl
jnp
inc
mov
mov
add
sbb
hlt
imul
test
lcall
dec
ds
test
imul
int
or
push
sub
arpl
arpl
movsb
data16
xchg
pop
add
push
and
lods
jl
pushf
or
dec
inc
aaa
lods
es
fwait
js
jmp
cld
int
dec
int3
jb
imul
ret
push
xchg
cld
mov
cltd
add
mov
inc
adc
in
fmuls
push
pushf
sahf
cmpsb
aas
jbe
add
and
jb
ljmp
into
xor
mov
insb
movsb
rol
psraw
pop
iret
jecxz
fcoms
ss
loope
dec
dec
fadds
jmpw
fisubl
dec
sub
push
mov
jle
push
shrb
shrl
leave
movsb
jg
push
ret
adcl
mov
or
push
mov
adcb
scas
adc
jge
mov
inc
into
inc
adc
sbb
adcb
jmp
push
jnp
jl
je
xor
mov
push
sbb
mov
roll
push
lahf
ficomps
pop
dec
cmp
pusha
out
imul
jae
aam
push
mov
mov
enter
mov
mov
int3
lods
or
mov
cli
sub
shrl
jle
xchg
adc
pop
cmc
out
jle
ss
mov
dec
push
out
adc
inc
pop
dec
add
aam
add
xchg
jbe
pop
mov
adc
stos
movsl
test
sbb
cwtl
push
cmp
mov
dec
mov
pop
cs
movsl
ds
push
scas
ret
andb
add
xlat
dec
notb
mov
or
cmp
xchg
xor
in
push
fldt
insl
call
add
inc
xchg
in
mov
out
pushf
pop
add
and
xchg
push
stc
cmp
into
stc
push
inc
pushf
inc
popf
cmp
jl
jge
into
jo
adc
mov
xchg
jnp
lret
and
xor
add
cmp
sbb
dec
sub
sub
adc
mov
cmp
sub
add
inc
mov
xor
inc
std
mov
scas
ja
xchg
jge
jno
mov
in
scas
cmpsb
jbe
call
jne
jl
into
jne
xchg
jnp
push
lcall
inc
stos
push
dec
dec
mov
movsl
sbbb
lods
mov
std
mov
pop
icebp
xchg
shrb
in
add
pop
cmp
sti
jno
adc
in
xor
fwait
test
mov
add
filds
sarl
xchg
cli
push
add
ret
lahf
mov
loop
inc
call
mov
mov
imul
inc
fnstsw
push
cmpsb
xor
scas
dec
movsb
or
push
pushf
loope
inc
jns
sbb
test
mov
or
push
jecxz
adc
test
pop
aam
cmp
loopne
mov
mov
push
test
xor
pop
mov
outsb
add
daa
add
cmpsl
pop
jecxz
lea
call
mov
inc
xchg
fwait
adcb
adc
lahf
xchg
arpl
and
ret
ret
and
jb
sub
sub
or
out
popa
dec
jne
and
pusha
or
mov
iret
and
adc
sub
push
fs
mov
sbb
mov
rcll
push
mov
push
mov
mov
insb
sbb
mov
push
and
insl
fstpt
cmp
icebp
cmovp
jo
push
cld
or
test
out
pushl
sarb
mov
jle
add
jo
jb
icebp
mov
idivl
pop
loopne
push
cli
xor
bound
clc
ljmp
icebp
pop
aad
gs
mov
jnp
mul
enter
jp
mov
cmp
mov
cmpsl
dec
push
jbe
jae
clc
in
shll
sub
mov
sub
add
clc
push
xchg
adc
mov
bound
loop
lea
fistpl
inc
arpl
push
jmp
cmp
push
jle
xchg
pop
fcmovb
inc
xor
xor
roll
jp
and
div
dec
aad
iret
mov
cmpsl
bound
lock
scas
outsl
mov
sbb
lods
mov
popf
and
mov
and
or
repnz
push
jnp
pop
rorl
fdivr
push
and
sbb
leave
xchg
aas
or
test
leave
or
add
in
jge
xor
and
adc
sti
add
insb
xchg
in
ss
add
es
popl
jo
pop
push
loopne
adc
mov
lret
push
clc
dec
jle
jb
mov
xchg
xchg
push
daa
in
fs
or
fcoms
cmp
sti
int
sub
sbb
cmp
dec
data16
push
iret
push
push
les
inc
data16
arpl
sub
adcl
sub
icebp
cmp
mov
dec
adcb
adcb
nop
std
into
aam
jnp
inc
push
aad
mov
test
lods
mov
adc
jmp
sbb
rcrb
bound
mov
adc
push
jecxz
ljmp
push
sbb
xor
or
mov
insb
loopne
sub
inc
test
and
cmc
mov
xchg
jo
lods
jg
jno
cmp
fs
mov
jne
cmp
in
xchg
inc
xor
pop
xchg
dec
push
test
div
test
jecxz
pop
adc
push
inc
outsb
xchg
xchg
xchg
inc
sbb
jmp
iret
add
sti
mov
mov
in
ss
or
stos
pop
sbb
xchg
leave
aam
jne
mov
mov
and
xchg
pop
mov
push
pop
inc
loop
lret
mov
mov
repz
daa
dec
sbb
or
mov
or
xchg
mov
movsb
adc
push
loope
inc
mov
sub
xor
and
xchg
int3
fisttpl
outsl
loope
xor
lret
inc
cmp
pop
out
dec
lock
dec
pusha
inc
bound
sbb
cmp
stc
adc
xor
decl
adc
repnz
sbb
std
sub
outsb
xchg
lds
push
xchg
add
cmp
push
cs
test
sbb
and
jecxz
push
jae
mov
mov
xchg
iret
mov
and
inc
mov
data16
ror
adcl
push
stos
push
push
pop
cwtl
adc
cwtl
jns
cmp
xchg
fists
fcmovnb
xor
inc
sahf
lcall
add
jle
icebp
jb
lea
icebp
sub
lock
and
clc
lea
cmpsb
roll
jns
cltd
addr16
dec
sar
stc
or
jne
jb
push
xor
and
push
loope
shrl
inc
inc
das
pusha
imulb
xchg
test
in
clc
and
or
jae
scas
negb
add
sahf
data16
mull
mov
movsl
pop
push
filds
call
mov
ja
ficomps
push
outsb
fsts
outsl
push
cmp
or
xor
mov
test
stos
pop
push
pop
xchg
cmp
or
call
or
add
aam
or
push
daa
in
xorb
outsb
aaa
ljmp
repnz
and
test
and
xchg
inc
xor
int3
push
inc
int
mov
rcll
xor
scas
pop
add
mov
cmc
and
push
jmp
pop
stos
mov
mov
out
hlt
mov
mov
out
jg
xchg
outsb
mov
outsl
pop
pushf
jne
js
sarb
push
cmpsl
into
sbb
andl
test
into
rcrb
mov
outsl
push
sbb
insb
mov
lret
add
adc
in
outsl
scas
mov
fs
cmpsl
sbb
mov
dec
push
pop
jmp
sbb
cmc
xchg
and
std
lock
cmpsl
push
jge
xor
jne
int3
mov
push
push
cld
push
fcmovnb
data16
js
sbb
jmp
in
fsubrl
scas
dec
gs
faddp
add
inc
cli
popa
jb
mov
inc
rcr
xor
pushf
arpl
mov
cmpsl
lahf
bound
or
xorb
shll
out
mov
mov
rorb
jb
in
or
popf
or
mov
inc
movsb
js
inc
fs
jae
mull
lea
data16
push
inc
add
cld
scas
decb
cmp
xchg
leave
jnp
push
add
sub
push
outsl
adc
mov
xchg
outsb
pop
imul
push
rol
ljmp
xorl
ljmp
adc
popl
dec
or
dec
out
scas
or
mov
sbb
enter
cmp
mov
std
outsl
cmp
push
loopne
sbb
fistl
pop
add
nop
es
mov
adc
jne
cmpsl
ds
sahf
adc
adc
and
mov
lods
mov
adc
cwtl
je
jecxz
hlt
loopne
dec
jge
mov
fs
fidivs
and
loop
loopne
std
sbb
xchg
jbe
push
or
sti
sub
dec
insl
dec
lret
push
and
decb
int3
cmp
cltd
xor
fimuls
push
push
add
fdivrl
lahf
scas
ret
mov
push
jmp
or
sub
jg
stos
pop
xchg
bound
xchg
xchg
mov
inc
ds
aad
and
ja
push
mov
mov
jbe
jg
pop
push
cwtl
pop
push
lock
arpl
inc
mov
cmp
roll
leave
das
sub
push
sti
movsl
movsl
pop
into
aaa
les
or
mov
shrl
pushf
sbb
jle
mov
xchg
xor
mov
les
in
add
jecxz
push
enter
mov
outsl
addb
xor
call
sahf
insl
lods
jns
mov
loop
fidivrs
es
xor
inc
filds
mov
insl
lea
stos
add
cmp
push
inc
ja
jmp
mov
jle
xor
clc
adc
cmp
call
pop
adc
movsb
jle
ret
movsb
dec
jge
in
or
mov
sbb
testb
jg
dec
repnz
xchg
inc
cmp
idivl
lahf
adc
inc
nop
in
jp
inc
push
scas
sbb
sub
xor
cli
add
inc
pop
sub
fiaddl
inc
xor
xchg
cmp
cmp
ret
fwait
sub
aas
nopw
in
pop
or
into
inc
filds
lret
push
pop
ljmp
push
dec
imul
mov
shrl
and
push
adc
xor
lds
inc
xchg
call
scas
push
ljmp
lret
push
cld
jbe
sti
push
lock
jmp
push
xor
orb
inc
iret
cmp
push
cltd
sub
jmp
lea
xor
movsl
ja
mov
push
xchg
push
push
dec
mov
mov
testl
sbb
mov
jne
mov
fwait
dec
jne
dec
mov
rorb
pop
cs
dec
mov
adc
lods
cwtl
push
push
mov
pop
clc
fwait
add
lds
xchg
and
mov
imul
hlt
into
into
xorb
mov
hlt
out
negl
je
mov
sbbl
data16
and
aaa
mov
jo
fidivrl
out
ds
xchg
sub
es
in
cmp
xor
xor
xor
ret
jno
adc
lcall
push
loope
push
stos
dec
or
or
mov
xchg
test
cmp
ds
mov
call
mov
mov
cwtl
push
push
aad
inc
push
call
rcrl
in
insb
sahf
dec
dec
xor
loope
mov
lcall
add
je
out
pop
fidivl
jno
mov
test
in
mov
xchg
pop
in
repnz
int
shlb
jecxz
push
ds
push
cmp
push
pop
pop
and
stos
shlb
mov
cltd
jg
and
push
out
inc
add
scas
and
push
stc
or
mov
mov
mov
xchg
dec
leave
sbb
repz
and
popa
xor
xchg
les
hlt
addr16
pop
adc
xchg
and
cmpl
xchg
cmp
test
pop
scas
jmp
dec
pushf
nop
pop
add
add
mov
insb
movsb
sub
daa
mov
push
cmp
mov
cmp
jmp
mov
test
mov
lods
stos
push
out
adc
lock
test
test
ret
add
bound
mov
sti
cmp
inc
movsb
mov
nop
push
xchg
insl
adc
movsl
sbb
inc
and
and
mov
stc
or
leave
adc
bnd
stos
or
sbb
andb
jb
xchg
push
mov
daa
les
clc
cmc
sbb
out
adc
stc
xor
adc
arpl
stos
out
mov
shrb
out
jb
in
xchg
add
mov
cli
popa
push
inc
adc
sbbl
mov
out
out
add
and
jmp
loop
pop
mov
inc
test
mov
test
and
or
jge
pop
xor
add
sbb
mov
jle
pop
sbb
daa
arpl
push
sbb
clc
cld
loopne
inc
cmc
scas
idivl
imul
js
xor
mov
ss
dec
loop
gs
fcmove
shrl
cmp
iret
mov
cmp
test
mov
mov
push
jmp
dec
mov
cld
addr16
pusha
jno
loop
ret
jo
call
xadd
rcrb
mov
fidivrl
nop
pop
iret
fsubl
jnp
xchg
fs
out
hlt
or
and
push
cs
test
jno
and
shl
push
sbb
cmp
mov
sub
mov
sub
sbb
icebp
jne
adc
imul
aas
lcall
dec
fwait
and
mov
push
push
or
inc
int3
fsub
mov
inc
enter
sub
cmp
insl
fdivp
sbb
sub
jae
out
mov
fadd
sbb
push
inc
fwait
pop
enter
add
mov
jl
jle
into
div
adc
mov
idivl
imul
mov
sub
shll
push
adcl
cli
aaa
xor
pop
dec
ja
jg
cmpsl
in
mov
sti
aam
xor
cmp
sbb
mov
clc
fdivrs
push
mov
pop
daa
add
adc
ret
loope
fs
xor
dec
mov
add
add
pop
stos
fstps
cmp
mov
and
pop
pusha
sbb
js
cmp
pushf
sub
fcompl
ret
fcmovnu
dec
add
ficoms
out
jle
add
xlat
inc
in
jno
dec
mov
pop
fwait
jb
cli
rorb
adc
sub
adc
aad
push
and
and
lods
cs
andb
xor
movsb
dec
aam
mov
and
mov
xor
lods
mov
hlt
push
and
aam
adc
out
inc
lret
mov
xor
adc
jle
add
push
mov
xchg
icebp
pop
lahf
jnp
fildl
outsb
cmp
fists
jbe
out
push
or
xor
mov
subl
cld
push
mov
xor
dec
lock
ljmp
sbb
inc
adcb
loop
pop
mov
out
inc
cmpsb
movsl
test
and
cltd
mov
jns
mov
test
ja
mov
pop
sub
xchg
mov
das
rorl
divl
cld
sub
sub
jno
push
sbb
pop
inc
or
nop
lret
jp
xlat
xor
pop
or
out
mov
cmp
repnz
pop
inc
jge
xor
cmpsl
lds
ja
rorb
popa
cmp
push
pop
push
nop
xchg
popa
aas
xor
and
lea
ljmp
push
loop
mov
iret
push
sbb
std
jb
and
hlt
ds
das
movsb
xor
mov
add
push
lretw
lret
xor
push
xor
mov
insl
add
filds
out
mov
cvtps2pi
and
mov
or
push
xchg
cmpps
in
iret
inc
cmp
sub
push
add
dec
pop
test
jns
inc
dec
lret
and
sbb
push
push
das
or
and
ss
bound
dec
adc
or
ljmp
mov
mov
rcrl
sbb
dec
mov
out
lahf
inc
in
and
repz
lcall
pop
inc
popf
mov
adc
ja
xor
or
rorb
inc
add
xor
cmp
js
out
lret
mov
xchg
add
adc
subb
jge
add
mov
aam
popa
test
or
mov
dec
std
cmp
sub
push
das
sub
jb
cwtl
mov
in
outsl
loope
pop
das
sub
inc
int
sub
sahf
fnstenv
ss
sahf
and
jnp
stos
leave
pop
in
jmp
xor
mov
push
add
popa
ss
inc
push
gs
inc
sbb
test
pop
imul
cld
adcb
dec
hlt
dec
push
add
scas
test
mov
cmpsl
inc
sub
xor
push
sbb
repz
cltd
notb
xlat
xchg
mov
nop
in
enter
int3
jmp
rcrl
lds
addl
inc
stos
inc
mov
cmp
mov
jb
jbe,pt
cld
rorl
arpl
cmp
jbe
cmp
test
cmp
push
inc
ljmp
pop
sbb
scas
mov
loope
jbe
hlt
fwait
pushf
xor
cmpsb
in
mov
lock
in
inc
bound
add
and
out
cmp
lds
jl
dec
or
jp
fcomi
dec
push
cli
cmp
ss
scas
mov
decb
ficompl
cmpl
inc
and
mov
and
sub
fiadds
nopl
repz
and
fstpl
pop
in
mov
jg
int3
shll
push
int3
aad
xor
imul
cmp
popf
sbb
mov
nop
jle
cmp
push
divl
in
cmp
fadd
and
cmp
rcrl
test
push
out
jecxz
test
xor
cmp
mov
test
fstpl
push
add
pushf
pop
mov
lea
push
cmp
aam
stc
lahf
pop
or
mov
push
inc
xor
jmp
or
pop
xchg
out
in
inc
in
mul
lods
cld
cmp
bound
mov
lret
mov
push
inc
jo
mov
sets
mov
out
lcall
fcomps
push
loop
mov
cwtl
lea
aas
gs
push
ljmp
xorb
clc
mov
adc
jle
mov
dec
fdivs
sbb
and
ret
fcomps
inc
xor
jnp
out
push
shll
lcall
lahf
test
bound
std
sbb
adc
ret
aad
xchg
cmp
outsb
mov
xor
mov
jmp
stos
jle
jg
roll
xor
jno
icebp
lods
mov
inc
add
cli
cmp
aaa
jp
or
pop
pminub
lcall
out
xor
fmuls
test
lods
stos
into
faddl
jge
fs
mov
and
out
jae
test
mov
test
adc
push
xor
or
outsl
test
imulb
mov
stos
mov
mov
mov
jne
shll
stc
push
pushf
mov
and
punpckhwd
cmp
outsb
mov
inc
fnstenv
adc
je
push
add
pushf
sub
test
std
mov
addl
or
mov
and
mov
fisttpll
cmpl
mov
jnp
cld
in
and
jae
icebp
or
loope
dec
and
xchg
gs
mov
adc
and
aaa
fsubrp
inc
fildl
pop
test
int3
es
mov
mov
ss
fsubrl
stc
bound
adc
cmpsb
xchg
cmp
and
popf
sub
mov
mov
mov
fcompl
insb
or
dec
add
jg
cwtl
clc
inc
adc
cmp
test
xchg
or
adc
fistl
adc
nop
jno
mov
mov
test
jecxz
rcrb
pop
push
ret
mov
dec
aam
stos
cli
push
lods
xchg
mov
fbstp
pop
aas
movq
test
fstps
mov
shll
shll
and
sbb
xor
fstp
push
jo
sbb
push
mov
pop
aad
cmc
cwtl
ret
aas
aas
ss
jecxz
push
jne,pt
mov
cld
je
adc
fistpl
push
cmpb
dec
test
xchg
fdivs
pop
push
xchg
inc
and
cmp
daa
jge
loopne
mov
xor
rcll
daa
icebp
das
int3
fs
inc
ret
and
push
loope
inc
popl
push
iret
ret
sub
add
lea
pop
pop
test
pop
jne
fbld
push
sbb
dec
outsb
scas
xor
mov
xlat
leave
aaa
mov
int
add
inc
xor
adc
sbb
fcompl
xchg
sub
mov
xor
test
cltd
mov
idivb
or
cmp
das
out
aaa
rcrl
xor
pop
jno
cmc
test
sahf
mov
shrb
cmp
mull
es
or
pop
popa
mov
ds
mov
adc
enter
push
mov
outsl
mov
jmp
cmp
repnz
loopne
fadds
jns
fcoms
xchg
xchg
out
cmpl
orl
sbb
aas
add
hlt
aaa
push
push
rcrb
bound
lea
in
pop
dec
pop
or
mov
or
push
fists
loope
adc
add
add
mov
lahf
mov
mov
pushf
js
and
xor
aam
popa
je
mov
aad
imul
scas
fimull
int3
sub
jb
loope
mov
subb
leave
sarb
jle
mov
dec
imul
xlat
push
sarl
lea
sti
inc
bound
ss
jp
lcall
xchg
pop
adc
adc
fidivs
adcb
jns
adc
call
nop
pop
popf
and
jne
das
test
rol
add
mov
xchg
inc
xchg
das
inc
jnp
nop
jno
loopne
mov
jne
in
mov
mov
dec
lods
pop
adc
xor
sub
cmp
cmpsl
dec
mulb
sbb
mov
pop
lods
int
call
sar
jle
hlt
and
test
adc
cmp
mov
adc
addr16
movsb
gs
add
aaa
pushf
jb
inc
xchg
ss
out
std
fists
out
ficomps
mov
fiaddl
adc
jno
fstpt
stos
mov
pop
shll
ja
pop
mov
pop
mov
imul
mov
pop
shll
leave
cmp
add
xchg
dec
loopne
jbe
xor
call
imull
adc
gs
and
addr16
fcoml
xor
je
in
cld
inc
fnstcw
lahf
push
mov
insl
stc
inc
push
or
stos
cltd
addr16
or
inc
xor
and
and
inc
imull
popf
stos
sti
xchg
pop
and
mov
scas
lret
xchg
pop
pop
dec
dec
shll
jno
cwtl
add
ljmp
loope
bound
bnd
repz
and
shrl
or
lahf
rorl
filds
in
loope
loope
movsb
xchg
push
pop
clc
xchg
adc
inc
pop
loopne
dec
jo
ret
push
sbb
dec
mov
lock
dec
mov
pop
sub
into
rcrl
movsl
arpl
and
pop
ret
adc
inc
cmp
shrl
and
adc
push
pop
mov
mov
xchg
sub
in
xor
loopne
jbe
sbb
mov
mov
xchg
out
psrld
add
mov
ss
jno
loop
mov
and
jg
dec
mov
adc
leave
sbb
jmp
sbb
sbb
cwtl
pop
inc
ret
sahf
add
cli
add
jecxz
add
mov
sbb
sbb
out
pop
and
push
and
xor
not
jne
outsl
mov
popf
xchg
jnp
aam
jg
sbb
lds
pop
push
sbb
jns
jmp
xlat
sbb
aad
pop
dec
daa
cmp
xchg
dec
adcb
icebp
jle
testl
sbb
push
out
push
push
push
push
adc
push
aas
aad
aad
mov
lds
cmp
mov
xchg
out
xchg
cltd
sbb
add
pop
pushf
push
test
add
mov
mov
jbe
and
and
dec
fstpt
mov
imul
xchg
sub
xlat
or
pusha
jecxz
push
jbe
pop
fimuls
pop
dec
js
das
call
add
std
movsl
cmp
jbe
or
nop
fs
cmpsl
lds
cmc
adc
dec
xor
xchg
lahf
cmp
aam
mov
pop
ret
test
pop
mov
jmp
rorl
inc
fwait
cmp
mov
push
fs
and
inc
xchg
or
pop
imul
sub
mov
movsl
mov
fdivr
and
lods
data16
lret
or
test
jl
dec
mov
or
push
cmpsl
imul
or
inc
clc
inc
stos
inc
rolb
cmp
je
sbb
jbe
or
xchg
sub
xchg
xlat
stc
adc
sbb
clc
sub
int
cmp
cmpsl
stc
insb
cltd
inc
insl
jbe
mov
push
rcl
inc
fldt
xlat
ret
xchg
adc
xchg
jg
imul
imull
repz
icebp
push
flds
std
mov
fldenv
mov
inc
std
and
aas
out
mov
int3
sbb
mov
xor
or
cmp
mov
xchg
mov
pop
into
and
and
adc
cmp
inc
jge
cmp
es
ss
sbb
mov
hlt
mov
xorb
mov
pop
cmp
ret
and
push
movsb
ljmp
mov
push
int3
adc
loop
mov
js
test
inc
jg
push
daa
mov
push
cmp
notl
and
sbbl
xor
push
jle
xchg
mov
clc
int
sub
mov
sub
xchg
fwait
mov
xor
loopne
rcrl
mov
rclb
cmp
out
push
outsl
lcall
scas
ds
test
mov
jp
ljmp
xchg
mov
repz
dec
es
ljmp
cmp
cld
lea
pop
mov
push
or
jo
mov
mov
add
out
sbb
mov
aam
mov
int3
shlb
cmp
pop
jmp
cltd
ljmp
daa
movsb
mov
or
popf
sti
pop
add
cmpsb
mov
and
push
cltd
arpl
dec
std
adc
enter
out
rep
jae
stos
call
inc
int
or
subb
jg
inc
scas
ljmp
mov
test
bound
dec
cmpsb
cmp
mov
add
mov
pop
push
adc
mov
mov
push
cmp
lds
insb
mov
std
data16
xchg
movsb
jns
mov
sub
cmp
or
repz
push
mov
push
sbbl
popa
nop
mov
dec
push
cmpl
bound
sbb
sahf
popf
test
popf
ljmp
jne
jno
cli
sahf
inc
inc
mov
stos
arpl
imul
fldl
mov
cmc
movsb
sub
cmpb
xchg
mov
inc
in
lea
adc
in
lods
push
ret
mov
in
loopne
pop
xchg
test
sbb
mov
cmp
fldenv
in
add
subb
push
jg
jae
jbe
stc
add
sbb
or
and
xchg
cmc
in
cwtl
push
push
test
push
test
rcl
or
mov
shrb
mov
and
ja
xor
mov
mov
iret
mov
push
icebp
cwtl
push
or
je
and
and
and
iret
mov
mov
lret
cwtl
in
push
pop
cld
in
mov
mov
sbbl
repnz
jae
jecxz
inc
pop
aad
inc
adc
bnd
popw
sub
arpl
dec
pop
sub
clc
push
push
int
xor
dec
out
and
mov
sbb
or
xor
fmull
repnz
sub
filds
pop
xor
arpl
in
xchg
mov
cmp
out
stos
data16
out
pop
xchg
pop
pop
shl
pop
int3
ret
sti
push
test
jns
pop
sbb
into
xchg
adc
lret
pop
sub
fisttps
les
or
jmp
fsubl
aam
fstps
fstps
subb
add
imulb
mov
mov
es
not
cwtl
add
in
and
push
js
pushf
gs
fimull
es
test
xor
push
mov
daa
push
icebp
sub
pop
iret
nop
inc
test
cmp
push
jle
pop
insl
push
sbb
lock
adc
das
test
out
add
aad
sbb
inc
ljmp
and
in
shrl
sub
outsb
lret
fwait
ret
popl
lahf
push
pop
test
pop
xor
test
xor
xchg
jmp
sbb
stos
add
xor
mov
in
mov
pusha
push
mov
hlt
cmp
add
imul
mov
push
or
lods
adc
pop
loop
mov
leave
xchg
xchg
ss
push
loopne
vmread
das
and
mov
sub
sbb
mov
dec
xlat
push
pushf
ret
sub
sub
xor
je
and
inc
add
ficoms
xlat
or
mov
xchg
andnps
insb
mov
pop
pop
sti
jne
xchg
mov
fcoml
sub
lds
mov
hlt
test
xchg
push
push
mov
fimuls
sub
jle
inc
and
xchg
inc
outsb
jge
push
add
xchg
mov
jne,pn
data16
pop
lock
pop
mov
inc
xlat
xor
addr16
outsb
mov
dec
jnp
jbe
and
daa
sbb
in
inc
stos
jl
lret
testl
xor
pop
lock
mul
xchg
lahf
notb
mov
push
inc
in
out
enter
mov
sbb
xchg
adc
sub
inc
jae
xor
shlb
dec
add
cs
icebp
cmc
xor
inc
int
adc
push
sarl
ror
jns
clc
bound
and
pop
popa
mov
cli
xchg
jb
ficomps
xlat
pop
inc
imul
mov
enter
lock
pop
sub
push
imul
xchg
aad
or
sti
fdiv
out
movsb
jno
mov
pop
shl
inc
aaa
push
jge
adc
mov
xor
sub
frstor
in
in
cltd
xchg
jp
stc
mov
jge
dec
inc
xchg
hlt
inc
dec
pop
inc
roll
sub
imul
xchg
fistps
enter
xor
loopne
out
ret
dec
mov
out
cmp
pop
inc
aas
mov
ljmp
cmp
jo
divl
or
ljmp
shl
xor
inc
pop
xor
pop
mov
and
rcrb
inc
mov
ficomps
jns
add
sub
dec
xchg
and
int
jo
out
push
xchg
pop
imul
or
psrad
xchg
push
jb
inc
pop
xlat
sbb
lock
ljmp
ret
pop
into
ljmp
mov
shrb
mov
xor
push
mov
add
xor
mov
xor
stos
push
add
loope
psubw
fbld
cmp
shrl
or
ficompl
lea
icebp
xor
pop
xchg
cmp
je
cmpsl
int
adc
call
add
pop
dec
lret
insl
inc
pop
and
xor
xor
adc
jl
xchg
dec
push
dec
insl
lds
push
push
xor
loope
icebp
xchg
cwtl
push
push
cs
mov
adc
das
mov
lahf
or
enter
sub
xor
and
lds
scas
or
xor
lods
pop
ljmp
enter
in
repnz
add
dec
lock
jnp
cmp
fcmovnbe
mov
cmp
cmp
sarb
inc
out
insb
pusha
pop
andl
iret
andl
xchg
push
sbb
dec
repnz
xchg
decb
out
rcl
push
sahf
pop
push
stc
fsubl
push
xchg
dec
xchg
jnp
fs
loop
ret
add
loope
jbe
repnz
imul
adc
fcomps
mov
fisubl
int3
dec
filds
clc
inc
dec
fisttpl
into
pop
arpl
inc
test
out
shrb
fwait
adc
loop
pushf
mov
in
lret
cmp
ret
iret
enter
gs
rcrb
repz
mov
inc
popa
jle
in
add
jne
ja
test
lds
js
jnp
ja
in
dec
testb
call
pusha
mov
mov
mov
pop
sahf
push
xchg
ror
es
jne
pop
mov
fsubrl
sbb
push
add
in
fwait
push
dec
pop
push
out
xchg
xor
or
push
incl
bound
sbb
adc
dec
les
test
mov
out
daa
xchg
into
or
and
push
arpl
inc
cli
loopne
sbb
mov
jnp
pop
or
xor
sbb
or
out
rorb
aad
subl
js
aad
je
ret
push
pushf
mov
fiaddl
cmc
ret
out
loop
push
fidivs
sub
xor
push
jmp
sub
jge
fbld
xor
adc
dec
sti
xchg
ja
outsb
out
scas
mov
mov
dec
addr16
hlt
cmp
sbb
jg
je
xlat
iret
pop
shll
cmp
jecxz
push
lods
pop
pushf
xchg
fsts
aad
pop
jmp
push
inc
add
out
imul
mov
fisubrl
pop
push
inc
cltd
shrl
jb
dec
popf
xchg
xchg
jns
xor
mov
add
sti
nop
dec
gs
or
sarl
cmp
aam
inc
push
movsl
movsb
jno
out
testl
mov
xor
sub
inc
adc
push
fistps
jae
add
cmp
fistpl
push
pop
stos
sub
mov
imul
dec
outsl
lahf
jmp
push
pop
cmp
xchg
xor
pop
push
dec
adc
mov
pop
mov
lahf
cmp
push
mov
movsb
dec
das
cltd
movsb
jle
mov
dec
clc
adc
xor
repnz
jns
lock
xchg
lahf
popf
adc
shl
in
or
testb
test
ja
xchg
in
pop
out
into
push
rorl
fimuls
popf
into
in
xchg
jge
xchg
fnstsw
pop
xor
ss
dec
outsb
sub
cmp
jmp
mov
cltd
adc
movsl
jne
xchg
sbb
push
push
shlb
ret
lahf
outsb
test
mov
mov
imul
push
gs
or
xchg
stos
dec
pop
pop
or
xor
ret
jo
lds
repz
fisubrs
fiaddl
mov
insl
into
mov
into
hlt
leave
pop
adc
mov
xchg
xor
and
popf
pop
stos
xlat
es
mov
clc
xchg
mov
arpl
pop
inc
mov
push
mov
sbb
inc
push
aam
std
pusha
aas
mov
jns
cmp
mulb
sbb
pop
jl
cli
ljmp
mov
or
bound
out
adc
pop
lock
push
mov
pop
xchg
aaa
jnp
inc
pop
inc
sub
out
test
insl
or
scas
mov
call
xor
popf
hlt
dec
and
shll
pop
adcl
mov
push
iret
repz
scas
cmp
mov
inc
xchg
dec
shll
xor
add
cmp
lods
mov
ret
and
pop
mov
sbb
fldlg2
sbb
add
xor
sub
inc
subl
fisubrs
mov
int3
inc
fdivs
cmp
jo
stos
dec
lea
xchg
test
in
dec
inc
das
ss
sub
pop
pop
ljmp
jmp
sbb
imul
mov
hlt
mov
fistps
push
bound
mov
mov
in
jbe
mov
push
xor
jge
mov
enter
decl
push
push
enter
pop
cltd
push
xor
outsb
jle
pusha
inc
loopne
xor
enter
notl
cmp
jne
push
cmp
test
mov
mov
das
leave
jp
or
jo
test
js
repnz
dec
sub
xchg
fwait
imulb
ja
arpl
orl
outsb
dec
mov
xchg
xor
popf
sub
in
sub
scas
lret
cmpsb
das
push
jbe
fidivrl
sbb
repnz
scas
add
xchg
mov
inc
add
ss
push
mov
xor
movb
cmp
cwtl
mov
lret
jnp
pop
leave
jl
mov
jne
enter
sbb
xorl
fdivrs
test
stos
jg
push
dec
push
and
or
adc
mov
xchg
fidivs
aas
lods
or
sbb
popf
inc
sub
shl
scas
outsb
add
int
adc
int
and
into
jns
mov
sbb
fdivrs
std
mov
xchg
and
or
mov
and
push
dec
pop
xor
sub
cmc
pop
out
sub
sub
ljmp
mov
sbb
xchg
stos
xor
out
call
js
xor
xor
xor
add
filds
insb
cltd
dec
fdivs
mov
cmp
lods
cmp
xchg
mov
test
adc
mull
std
pop
aaa
push
dec
sub
insb
sar
sbb
push
sbb
cmp
cwtl
mov
or
divl
sbb
outsl
mov
mov
repz
push
movsb
inc
xlat
inc
test
mov
push
in
das
repnz
loop
ds
sub
dec
dec
dec
xlat
ficompl
fsubs
cmp
push
movb
es
in
cmpsl
jle
aad
push
mov
or
push
das
jle
mov
rorl
fs
mov
pop
shll
decb
fs
repz
and
pushf
lcall
iret
data16
decl
imul
push
pop
inc
lds
cmp
push
stc
outsb
lret
xor
mov
xor
int
lret
cmp
pop
mov
lcall
pop
subl
dec
scas
pushf
mov
call
cmpsl
dec
inc
adc
push
test
xchg
xor
cmpsb
stos
andb
addr16
call
adc
cld
sbb
out
cmp
mov
outsb
mov
jp
dec
dec
cs
jmp
into
inc
mov
xorb
in
je
movaps
and
std
data16
int
bound
mov
out
loope
ret
jbe
inc
ret
cmp
sub
push
lahf
aaa
cmp
pop
jbe
lock
mov
push
adc
mov
xor
out
mov
lea
or
mov
jns
pop
lret
in
sbb
sahf
cmp
jge
int
loopne
and
popa
xchg
add
adc
repz
push
jg
mov
fwait
cmpsl
insl
cmp
mov
xchg
xchg
mov
pop
pop
sub
mov
lahf
ds
and
jne
mov
inc
nop
repnz
pop
jl
pop
fmull
cmp
dec
jge
xlat
iret
imul
and
arpl
cmp
sbb
jp
out
mov
data16
sbbb
out
int
popa
fdivs
sti
inc
pushf
es
shrl
inc
out
aam
fists
fadds
loopne
cmp
push
cltd
test
mov
jne
sbb
xorb
dec
pop
add
pop
out
int3
lods
mov
jg
dec
in
jo
lret
jp
lahf
push
mov
popa
popa
inc
xor
in
or
jmp
mov
aaa
and
xchg
or
lods
scas
pop
sbb
fnstcw
xchg
xchg
fcmovnb
pop
pop
sarl
and
mov
loopne
sub
cltd
mov
inc
stos
test
sbb
inc
cmp
test
pop
push
aaa
add
mov
test
mov
sub
push
mov
jb
fldenv
les
xor
mov
fisttpl
daa
mov
mov
nop
mov
sbb
dec
addr16
xor
jg
clc
or
hlt
in
pop
mov
pop
and
insb
in
test
and
cmp
pop
jge
ss
hlt
push
lock
xchg
ret
test
and
push
fisttpl
ffree
mov
sub
sti
stc
xor
inc
out
sub
adc
aaa
out
pop
xlat
jge
push
call
mov
call
add
push
daa
jle
test
push
xor
adc
sbb
out
in
and
lahf
push
pop
dec
orb
jo
cwtl
lret
add
xchg
test
cltd
shll
inc
cmp
jo
jns
bound
xchg
or
jns
jle
stc
pop
mov
arpl
ljmp
aam
or
pop
pop
sub
jp
out
cli
in
xchg
stc
push
jae
inc
sbbl
dec
aas
mov
push
stos
cs
and
xlat
dec
les
daa
xchg
cmp
lahf
mov
inc
xchg
inc
push
inc
mov
jl
dec
dec
in
sbb
lods
sub
outsl
inc
lods
jmp
leave
popf
mov
into
cmp
mov
mov
mov
fdivs
mov
jecxz
out
or
int3
pop
mov
jl
shlb
pop
fists
in
mov
mov
xchg
ret
mov
mov
mov
lods
inc
mov
outsb
inc
xchg
cmp
push
push
pop
out
xchg
and
test
psrlq
xlat
dec
pop
aam
movsb
and
cmp
cmp
and
in
not
xor
pop
push
mov
daa
mov
mov
dec
mov
jg
fwait
push
mov
add
dec
or
arpl
xchg
inc
lea
ret
mov
mov
add
pop
jae
dec
add
push
cwtl
out
mov
stos
pop
mov
divb
xchg
ret
mov
aad
adc
mov
jg
mov
jnp
xor
fadds
gs
loopne
int3
xchg
ret
adc
int
scas
sub
mov
xchg
nop
inc
cmp
adc
pop
ret
sub
andl
subl
insb
fsubs
or
roll
pusha
js
in
xchg
movsl
int
out
aas
and
scas
and
jbe
nop
sbb
aaa
fstps
inc
fmulp
das
adcb
pop
push
into
mov
adc
push
sub
dec
fildl
popf
outsb
xlat
lods
test
in
fdivrs
cli
push
push
pop
mov
cld
ss
inc
repnz
lcall
jle
in
sub
mov
shll
cmp
cmova
cli
or
cld
repz
inc
pop
shll
push
dec
shl
xor
test
add
xchg
ljmp
sti
icebp
scas
arpl
xchg
ds
lods
scas
mov
cmc
mov
pop
inc
inc
fdiv
mov
mov
sub
mov
xchg
jle
pop
test
cltd
pop
adc
leave
push
push
sbb
into
test
mov
fidivrl
lock
jno
push
or
sarl
arpl
mov
fnstsw
mov
xorb
mov
cmovns
push
cmp
fidivrs
aas
pop
add
sub
dec
xchg
fstps
pop
fs
popa
icebp
mov
sub
inc
sbb
test
mov
dec
cmp
lods
loope
mov
repnz
xchg
test
inc
xor
mulb
ss
inc
xchg
pop
clc
iret
ja
mov
arpl
jmp
aad
lcall
inc
pop
mov
pop
mov
xor
dec
or
mov
jmp
loope
cwtl
pop
and
lods
cmpsb
jle
push
ror
rcrl
sti
ja
xor
test
hlt
xchg
hlt
outsl
xor
in
das
mov
jns
push
sub
int
rolb
mov
inc
jmp
sub
push
ja
je
inc
jmp
inc
push
push
insl
orl
int
repz
sarl
and
adc
jge
in
mov
push
push
xchg
mov
aas
ret
ds
add
and
icebp
lret
repnz
in
arpl
mov
mov
sbb
lret
std
cmp
in
std
xor
imul
hlt
sahf
xchg
stos
in
add
xchg
and
mov
sbb
lds
jle
bound
js
ret
xlat
cwtl
outsb
rolb
out
mov
xchg
addr16
jge
adc
cwtl
fdivrl
mov
inc
xor
mov
and
ret
mov
mov
stos
push
mov
adc
cmp
pop
ja
add
xchg
and
xorb
shll
push
aad
xlat
dec
xchg
push
or
pushf
fimuls
cmp
mov
ret
fisubs
in
repz
or
adc
fs
mulb
cmpb
dec
push
xchg
inc
in
sbb
sub
mov
out
fs
xchg
gs
movsl
adc
iret
into
mov
pmuludq
xor
lret
cmp
pop
push
scas
push
rorb
ja
in
add
loope
pop
es
inc
mov
int3
dec
iret
arpl
lret
dec
mov
lods
pop
xchg
test
push
pusha
mov
stc
sub
mov
or
push
inc
test
test
jg
out
dec
jecxz
popa
cmp
push
pop
repnz
ficomps
add
pop
insb
xor
mov
pop
cltd
dec
andb
push
popf
cli
inc
lret
popa
nop
xlat
cmc
push
pop
pop
jg
jnp
push
and
pop
sbbb
xchg
outsl
or
ljmp
andb
push
out
pop
mov
cmp
inc
pop
repnz
mov
xchg
fcoml
stos
xchg
jne
pop
or
and
dec
pop
roll
enter
aas
addb
or
dec
sarb
adcb
push
andl
mov
mov
lcall
loopne
pop
lea
pop
sbb
xchg
jp
loop
dec
push
xor
in
adc
es
xor
sub
cmp
push
lods
adc
mov
std
adc
test
jnp
inc
push
adc
iret
fldt
inc
sub
inc
mov
xchg
test
movsb
sub
pop
clc
imul
dec
pop
shrl
and
add
test
jae
lods
test
xchg
xor
mov
jb
mov
loope
xchg
movb
cmp
mov
rcr
sub
into
or
rcrl
push
jnp
jnp
push
add
in
out
and
scas
decl
xchg
shlb
push
jae
cmc
or
popa
mov
cwtl
loop
push
ja
mov
push
fcmovnu
inc
xchg
xchg
pop
cwtl
jb
rclb
jp
in
in
cmpsb
xchg
sahf
out
pop
insb
dec
fdivs
or
pop
mov
jo
lods
mov
gs
les
or
mov
xor
pushf
inc
mov
cli
or
shrl
std
ja
int3
pop
and
jg
sub
test
pop
cld
and
lret
aaa
mov
mov
outsl
cli
fdivrl
in
fidivs
call
pop
stc
orl
and
and
xor
pusha
lcall
popa
loop
je
daa
pushf
dec
sti
mov
dec
mov
in
ljmp
cwtl
push
xchg
xor
sub
inc
cld
and
mov
dec
repnz
out
mov
dec
ficoml
cmpsl
push
in
lret
lret
popf
mov
ljmp
repz
adcb
addl
jg
mov
inc
das
push
mov
pop
sbb
dec
data16
xchg
mov
popf
fyl2xp1
mov
push
popl
stos
jne
add
push
sub
adc
inc
mull
xchg
clc
adc
repnz
mov
mov
roll
rolb
fs
sti
xchg
xchg
inc
fldcw
mov
mov
push
push
lret
xor
xor
mov
mov
inc
fsubrs
mov
out
mov
iret
fisttpl
or
int
xchg
arpl
push
sbb
push
aaa
cmpb
iret
sbb
push
dec
inc
push
cmp
loopne
dec
mov
add
pusha
sub
dec
xchg
gs
rcr
icebp
mov
test
fadds
and
int3
imul
stos
ds
mov
sub
mov
das
adc
daa
xor
ljmp
push
pusha
sti
cld
jmp
dec
or
cmpsl
bnd
pop
arpl
fdivrs
data16
push
xchg
push
cwtl
cwtl
push
das
stos
mov
sbb
in
lcall
andb
sub
out
popf
inc
adc
or
jo
leave
and
pop
fadds
sahf
dec
mov
mov
cmpsl
scas
ds
shrl
xor
fcompl
jnp
pop
mov
or
xor
adc
pop
lret
add
ja
jnp
call
push
stos
inc
sbb
mov
addr16
mov
push
inc
lahf
jo
sbb
and
pop
pop
jne
push
enter
loope
lret
lock
or
cs
jne
icebp
jb
repz
push
sub
xchg
inc
fxch
pop
repz
jecxz
in
xchg
adc
rorb
and
xor
jge
mov
decl
lods
xlat
xchg
sbb
xor
adc
cld
or
popf
subb
mov
mov
stos
xchg
push
cs
xchg
sbb
lret
or
mov
into
push
scas
imul
insl
inc
shrl
cmc
in
cmpsl
repz
out
sub
movb
mov
xor
mov
shrl
insb
call
dec
hlt
pop
cmpsl
je
fs
lret
mov
out
rep
mov
dec
clc
stc
mov
or
aad
addr16
xor
push
movsl
add
popf
mov
push
loop
jecxz
jo
pop
adc
fcomps
stc
out
scas
ds
add
adc
add
shl
push
pop
jo
pop
jle
lret
pop
push
push
data16
add
ret
inc
cmp
ret
adc
mov
or
xor
mov
adc
fisubrl
loopne
jb
add
cmp
mov
sub
cmp
xchg
repnz
mov
imul
adc
test
lock
mov
in
lods
adc
pop
outsb
mov
stos
repnz
adc
mov
syscall
lods
rcr
inc
dec
in
add
es
fcmovnbe
mov
iret
fildl
in
bound
stos
xchg
and
and
sub
or
pop
adc
int
out
cmp
push
jp
adc
stos
repnz
out
or
dec
mov
cli
xor
pushf
pop
mov
fidivrs
inc
xor
testb
scas
push
dec
fiaddl
mov
loopne
fcompl
fisubl
mov
aaa
std
data16
pop
add
inc
lods
cmovne
cmp
test
test
add
imul
dec
fcmove
cs
sbbl
cltd
jmp
movsb
dec
cmp
fistps
xchg
push
fsubr
rclb
into
jno
xor
and
push
push
jae
pop
jmp
sbb
sbb
mov
mulb
cmp
fadds
xchg
pop
movsl
pushf
sub
mov
lods
mov
push
cs
jecxz
fdivs
mov
and
cmp
jbe
xor
shr
popf
pushf
push
in
and
mov
shl
pop
sti
sub
sub
add
subl
push
mov
nop
inc
lahf
sbb
addr16
pop
inc
sub
adc
imul
out
mov
test
out
jge
ficompl
negl
xor
push
push
add
leave
and
ret
jg
mov
sahf
flds
inc
push
cmc
fwait
or
aas
pop
push
std
ffreep
jbe
fwait
bound
insb
mov
fldcw
mov
aas
ss
pusha
sub
jns
sbb
out
fs
mov
inc
cmpl
inc
or
je
repz
xor
add
and
add
mov
sub
pusha
push
js
add
nop
imul
push
push
sub
push
xchg
xchg
and
jge
out
mov
cmc
out
jecxz
sbb
cmp
popa
out
fs
aaa
push
xchg
dec
aam
or
ds
jge
leave
pop
fbstp
sbb
mov
add
clc
jecxz
push
shrb
or
sub
aas
je
fwait
imull
add
cwtl
and
ja
dec
xchg
mov
and
mov
cs
fnstsw
movb
imul
or
es
inc
mov
shll
jl
dec
repnz
sub
into
xchg
shlb
jne
mov
cld
cmp
and
lea
lods
fucomi
movsl
or
stos
call
cs
ss
shlb
xchg
daa
in
cli
adc
movsl
ja
xchg
sub
inc
push
xor
mov
xchg
fistpll
imul
jg
jno
notb
fildl
loope
xchg
jns
jp
subb
mov
hlt
xchg
ret
fmul
sub
or
lods
pop
ljmp
cmp
push
xor
data16
out
jge
incl
idivl
fstl
cmpsb
nop
and
lds
push
mov
mov
aas
es
mov
add
sbb
shll
and
stc
adc
push
pop
xchg
flds
and
xchg
push
xor
fimull
sub
mov
out
mov
outsb
imul
cmp
les
out
mov
out
movb
adc
neg
in
push
cli
mov
movsbl
fstpl
insb
das
lods
adc
jae
test
mov
popa
inc
push
push
sbb
and
jnp
dec
lods
movsb
dec
push
stos
pop
test
outsl
or
sti
loope
fidivl
cld
push
adc
adc
inc
stos
jecxz
add
push
andl
mov
in
xor
shlb
mov
mov
rcll
jne
xchg
mov
scas
push
mulb
stos
inc
leave
xchg
es
mov
mov
xchg
arpl
out
ljmp
cmp
push
adc
imull
ds
adc
xchg
push
push
xchg
stos
jnp
xchg
mov
mov
and
aas
xlat
mov
int
fsubr
daa
or
loope
add
jb
lahf
and
nop
and
aaa
je
xchg
pop
outsl
sub
inc
std
pop
cmpsl
push
fdiv
push
mov
mov
sub
or
mov
dec
xchg
xor
iret
ss
notb
cmc
data16
cmp
and
outsb
inc
mov
lds
mov
xor
pop
adc
shll
test
and
in
sbb
mov
cmc
hlt
sbb
in
adc
iret
enter
shll
mov
lret
lcall
sub
scas
push
add
cmp
addr16
sub
push
push
jns
mov
pop
jbe
mov
xor
mov
fcoms
pop
adc
sbb
inc
lods
cld
outsb
lock
cmp
push
add
jl
cmc
shll
stos
inc
pop
test
ror
adc
dec
outsb
aaa
sub
and
xor
in
loopne
jmp
push
inc
stos
adc
push
pusha
push
aam
sub
xchg
dec
nop
pop
jecxz
fs
mov
jg
jmp
mov
in
push
sarb
xor
mov
xor
in
shlb
call
push
cs
mov
je
sahf
es
cmp
add
js
in
out
adc
bnd
inc
fadd
jne
aaa
enter
add
xor
iret
cmp
mov
divb
mov
in
cli
add
xor
js
mov
lods
xchg
das
sbb
lret
cltd
out
movsl
test
lcall
inc
arpl
cmp
adc
loopne
jle
int3
adc
jnp
repnz
lods
dec
or
int3
js
mov
stos
fcmovne
inc
mov
xchg
and
jno
jo
cmp
pushf
test
out
daa
push
lahf
outsl
mov
mov
push
adc
dec
xor
mov
dec
push
cld
sbb
out
push
daa
push
out
sbb
hlt
mov
mov
xor
dec
pop
cs
mov
out
bound
mov
scas
shl
mov
mov
sub
cld
lret
sbb
je
arpl
push
push
icebp
outsb
in
sub
ljmp
xlat
inc
mov
and
mov
pop
jecxz
pop
pop
inc
mov
sub
je
mov
es
sub
jp
push
mov
push
sub
arpl
jp
insl
out
pop
sbb
stc
cmp
xchg
cmpsl
rol
aam
push
inc
testl
in
xchg
lret
int
movl
shrb
xchg
test
in
rolb
rcll
jbe
sbb
lock
sarl
inc
push
adc
les
icebp
xor
fstpl
adc
fs
xor
cmp
in
and
xor
xchg
fistpll
pop
mov
push
adc
jecxz
fcmovb
das
adc
nop
adc
push
push
or
xchg
sbb
push
sbb
cli
mov
mov
jnp
adc
out
movsl
cld
pop
cli
push
mov
popa
mov
ds
sub
dec
repz
mov
and
subb
test
test
pop
fistps
in
fwait
imul
aas
push
add
xor
ret
flds
dec
mov
or
cltd
out
pxor
add
pop
fcomps
mov
mov
inc
xchg
xor
jbe
adc
int
jno
mov
mul
fwait
dec
repnz
inc
mov
sub
pop
inc
lahf
into
ss
out
inc
push
sbb
fwait
dec
out
popa
and
mov
xchg
xchg
and
mov
cmp
sti
mov
aam
mov
sub
xchg
adc
cli
aad
mov
jl
jo
mov
subl
dec
push
scas
inc
std
and
stos
repnz
idivb
je
fldcw
inc
fwait
inc
inc
lock
adcl
jo
xor
fmull
scas
jne
mov
mov
mov
push
jl
dec
outsb
arpl
out
fisttps
loop
push
mov
pop
imull
cmp
adcl
push
pushf
jecxz
aas
stos
mov
pushf
int3
sub
movw
es
inc
mov
dec
xchg
inc
sti
insl
xchg
bound
scas
mov
sbb
pop
ljmp
jno
test
sarb
inc
or
mov
int3
pop
arpl
aas
pop
ret
adcl
sahf
bound
mov
add
sbb
lret
es
cmp
test
push
aam
mov
cli
movsb
add
aas
outsl
addr16
and
fcmovbe
cmpsl
fldt
mov
paddusw
fldl
insb
out
movsb
mov
push
sub
adc
adc
mov
scas
sbb
pushl
iret
and
mov
pop
sbb
test
mov
aad
outsl
cmp
imul
and
inc
pusha
mov
lds
inc
aaa
lods
andl
inc
mov
in
enter
xor
and
xchg
pushf
xor
xchg
in
xorl
xchg
roll
mov
pop
adcl
movsb
bound
movsb
sysexit
inc
out
mov
mov
push
sbb
adc
out
xchg
and
sub
out
and
inc
push
cmp
pop
dec
mov
pushf
inc
cmp
inc
movsl
mov
xchg
jge
push
popa
xchg
and
fistl
pop
dec
icebp
and
aaa
mov
arpl
pop
into
xchg
sbb
daa
addr16
jns
push
inc
std
mov
mov
dec
je
mov
dec
fwait
gs
push
xlat
aam
mov
or
in
cmp
sahf
jecxz
lret
add
andb
jno
add
insb
xchg
call
pop
jge
pop
int
adc
cmp
adc
xor
xlat
sub
add
sub
pop
inc
xor
ja
cwtl
jmp
outsb
mov
fidivrs
dec
xchg
repnz
mov
xor
sub
stc
in
mov
mov
xchg
dec
movsl
fs
test
xor
rcrl
push
adc
lea
push
pop
clc
cli
mov
xlat
shll
lcall
xor
ljmp
cltd
sbb
in
jge
push
mov
fwait
dec
sti
iret
mov
int3
add
xchg
jp
or
cwtl
push
mov
mov
imul
iret
lret
jae
xchg
ss
test
sbb
inc
dec
aaa
sub
outsb
insl
inc
push
cli
test
sbb
inc
cmp
jg
push
ret
aas
adc
and
adc
lcall
add
push
and
mov
mov
pop
jo
push
movsl
out
mov
jg
pop
xor
mov
outsl
adc
popf
inc
ret
push
add
cmpsb
dec
out
cmpsl
add
mov
fwait
ret
push
sbb
rep
push
mov
dec
jge
lret
adc
mov
add
pop
xchg
dec
mov
push
inc
cs
adc
mov
pop
loopne
movsb
mov
fimuls
in
test
pop
jb
in
in
shlb
add
inc
mov
sub
jne
adc
idiv
push
inc
movl
sub
mov
je
push
repnz
scas
push
cwtl
xchg
mov
mov
imul
sbb
mov
out
mulb
jno
cmp
mov
adc
ret
popf
cli
test
push
rcll
and
xor
das
repnz
jnp
andb
in
xchg
inc
mov
mov
aad
lods
les
repnz
popa
insl
cmp
adc
daa
in
test
leave
push
stc
jge
cltd
and
push
mov
cld
sub
push
mov
xchg
inc
cmpsb
adc
sahf
and
xor
xlat
ret
add
jae
fiaddl
cs
mov
pop
pop
mov
fnsave
jg
or
inc
mov
jae
fs
out
sub
jecxz
mov
mov
mov
pusha
jp
shlb
xchg
fs
cmp
icebp
xchg
pop
idivl
repz
dec
fldl
inc
sbb
adc
or
push
sbb
in
ljmp
and
aaa
xor
sub
subl
les
jecxz
ret
mov
in
cmp
xchg
in
mov
aaa
jg
xchg
sahf
mov
ds
push
lea
scas
adcb
sbb
pushf
push
xchg
insl
xor
aam
fidivs
mov
fs
setne
add
mov
es
fwait
dec
fwait
push
pop
or
loopne
lods
dec
cmpsl
bound
fildl
sbb
popa
and
xbegin
movsb
jo
push
std
adc
pusha
jo
rcr
sbb
cmp
push
decl
push
inc
ret
cmpb
dec
mov
loope
out
push
je
jb
push
imul
fbld
sahf
inc
rorl
or
test
call
cmp
or
daa
shl
in
pop
lods
xchg
cmp
das
icebp
dec
adc
bound
fistl
sbb
dec
lds
std
pop
fwait
push
popa
iret
xchg
or
xchg
ret
roll
fmuls
adc
jmp
ret
cltd
js
cltd
sbb
adc
jns
popa
mov
push
imull
mov
jns
ss
movsl
inc
jmp
rcrl
xchg
stos
stos
jle
push
push
pop
aaa
cmc
cmp
cmove
cmp
dec
mov
cltd
adc
lret
call
cmp
mov
fiaddl
jle
test
fcmovbe
aad
or
scas
dec
jp
out
push
mov
or
adc
adc
xchg
or
subl
inc
fisubrl
and
movl
xor
dec
and
xor
popf
scas
mov
cld
mov
and
add
jbe
jecxz
or
scas
add
icebp
sbb
pop
int
dec
aaa
cmpsl
sub
xchg
fucomi
dec
jae
out
loopne
add
cmp
xor
cmp
in
mov
popa
icebp
push
or
xchg
sub
int
mov
test
repnz
jp
ficoms
fsubrl
jo
and
shrb
push
pop
popf
imulb
imul
cmp
adc
loop
les
xor
in
push
or
cmp
xchg
cld
and
ret
stc
std
daa
adc
adc
ret
imul
fists
push
enter
and
add
jae
mov
and
out
jge
in
pop
bound
push
cld
inc
out
les
scas
stc
aas
mov
inc
dec
into
mulb
les
jge
mov
sidtl
xchg
push
into
cld
xor
adc
das
xor
mov
xor
lods
and
enter
adc
jns
adc
std
jb
and
cmp
scas
lahf
pop
popa
mov
lcall
iret
inc
shrb
out
lock
xor
idivl
ja
ret
ds
sbb
call
lds
das
xchg
leave
xor
jnp
xchg
cs
outsb
sub
scas
sub
hlt
sub
clc
mov
ret
mov
and
test
mov
insb
and
adc
jmp
add
addb
or
cwtl
imul
xor
push
fldt
dec
add
jecxz
add
and
int
iret
mov
loope
and
fildll
dec
repnz
shl
std
stos
out
dec
shrb
dec
and
dec
enter
stos
mov
cmpsb
les
mov
mov
nop
add
into
into
sarb
out
repnz
sub
and
sarl
shlb
dec
xor
pop
mov
add
lods
xor
in
jbe
xor
mov
inc
xchg
mov
movsb
and
loope
cmp
jno
inc
stc
pushf
push
pop
es
push
movsb
movl
jecxz
daa
push
lods
loope
push
outsb
sub
cld
jae
iret
push
add
jbe
xor
jo
inc
out
inc
fdivs
cmp
frstor
add
xorb
sahf
xorl
mov
iret
arpl
sub
xor
adc
adc
push
mov
psubq
shlb
sbb
aam
pop
aad
mov
les
dec
lds
je
imul
inc
stos
fbstp
insl
out
push
aam
inc
test
cmp
lods
sahf
popf
inc
scas
xlat
test
xlat
push
push
sbb
or
lahf
adc
mov
fdivrl
lcall
aam
lods
cwtl
lock
sub
and
mov
adc
mov
xor
scas
mov
int
sbb
js
call
faddl
push
push
jbe
fisttpll
and
and
out
cwtl
push
jns
imul
pop
fs
push
lods
rcrl
xchg
jo
push
jns
adcl
int
pop
enter
or
out
sub
cltd
nop
clc
daa
inc
xchg
mov
mov
mov
xchg
pop
sbb
out
mov
pusha
fildl
and
push
or
mov
mov
push
jmp
addr16
fstpt
out
enter
scas
cmp
aam
lahf
leave
gs
jo
pop
sbbl
sub
mov
into
sub
pop
ror
popf
jl
push
inc
out
sar
cwtl
fdivs
outsl
mov
js
jecxz
xchg
xchg
stos
cmp
test
mov
push
mov
stos
ja
movl
popa
xor
in
enter
pop
xor
loope
mov
pushf
rclb
fwait
ret
es
sbb
and
stc
mov
xor
outsl
mov
mov
mov
sbb
jge
xchg
movsl
xor
xchg
push
fcomps
outsb
lods
test
enter
rcrb
cmp
imul
lock
es
inc
sub
scas
loope
or
fwait
and
test
es
mov
leave
mov
adc
js
insb
mov
popf
push
loope
mov
sbb
cmpsl
push
int
mov
push
out
lods
fmulp
sub
or
xor
fcmove
fdecstp
sbb
ret
pop
add
repz
fsubrs
push
ljmp
outsl
or
mov
or
pushf
cmp
pop
stos
xor
out
ss
and
cmp
jp
into
fisttpll
popf
inc
mov
adc
out
out
insl
sbb
jp
xor
out
jo
xchg
inc
or
aad
bnd
mov
imul
or
mov
stos
adc
mov
imul
dec
adc
inc
xchg
daa
pop
pop
divps
push
or
sarl
lcall
and
aas
jmp
mov
xchg
mov
mov
adc
mov
mov
xor
dec
or
sbb
rol
jb
negb
lods
pop
jecxz
sbb
dec
adc
push
stos
fwait
movsl
xchg
push
lock
cmpsl
sbb
push
inc
into
adc
sub
rcrb
push
jmp
vpaddq
sbb
lock
lock
pop
cmc
and
or
ret
xchg
stos
sti
ds
imul
pop
outsb
lahf
aam
sub
jb
or
dec
imulb
scas
pusha
das
loope
pop
mov
mov
jb
cs
push
int3
andl
push
pop
push
push
aam
jl
mov
or
adc
sbb
and
leave
orb
ljmp
je
cld
push
sbb
fwait
sub
shlb
hlt
inc
setge
scas
pop
mov
cmpsl
cmp
lahf
jne
push
icebp
sbb
jge
loop
xor
scas
mov
and
loope
xor
or
add
enter
lahf
int3
inc
inc
adc
sbb
cli
js
mov
cmc
aas
xor
pop
pop
xor
testb
xor
sarl
ret
jo
dec
push
push
mov
mov
into
pop
divb
fimuls
lret
aaa
in
lea
repnz
ror
sbb
int
outsb
rclb
jbe
dec
sub
cltd
repnz
icebp
incb
cmpsb
das
jbe
addr16
or
mov
cmp
int3
mov
cmpsb
shlb
sbb
nop
jecxz
out
movsb
mov
fdivrl
push
jo
aas
leave
bound
mov
inc
mov
push
cmp
cmp
dec
cltd
push
push
sbb
jns
shr
pop
pop
divps
ret
mov
outsl
cmp
add
mov
mov
sub
cmp
lcall
mov
mov
adc
call
test
push
adc
push
adc
int
adc
cs
hlt
popa
mov
jbe
aad
adc
gs
push
push
cwtl
jnp
pop
inc
scas
gs
dec
cmp
mov
cmp
lea
pop
mov
hlt
loope
repz
xor
xor
icebp
lea
insl
enter
insb
inc
movsb
jg
in
in
cltd
pop
rolb
cmpsb
and
in
cmp
jo
sbb
dec
in
into
cmp
out
inc
inc
popf
mov
xchg
push
or
xor
push
lret
xor
in
pop
inc
xchg
fadds
or
insb
push
mov
popf
in
orb
adc
sub
repz
or
adc
mov
fdivrl
adc
sub
rol
xor
sbb
stc
pop
mov
xor
cli
pop
jno
dec
mov
testb
add
fwait
ss
jg
inc
gs
xchg
xor
xor
pop
add
int3
dec
pop
sarl
fisttps
repnz
les
insb
cld
lds
mov
iret
test
mov
stos
imul
lock
stos
pop
push
je
cmp
jnp
std
add
lods
jne
ds
add
inc
pop
dec
pop
push
std
insl
int3
jo
jp
addr16
sti
sbb
popa
aaa
mov
cwtl
pop
and
push
mov
aaa
lcall
mov
sub
pop
repnz
xchg
fiadds
pop
pop
out
adc
push
mov
jge
push
fadds
call
dec
call
xor
push
mov
or
int
rcrl
sbb
or
call
ljmp
cmp
mov
iret
mov
push
and
es
sbb
jno
jg
pop
enter
or
repz
gs
notb
jp
test
push
ja
cmp
std
mov
pop
hlt
or
xchg
or
xchg
rol
decb
mov
mov
cmpsl
fbld
in
rcrl
rcrl
addr16
jb
es
cmc
pusha
push
cmp
aas
jbe
dec
fwait
push
lock
loop
fidivrs
push
mov
outsb
ljmp
mov
and
xchg
das
push
inc
insl
repnz
sbb
enter
adc
mov
gs
shll
fdivp
pop
clc
and
sub
test
jbe
fldl
lret
mov
es
in
or
out
add
inc
scas
push
inc
or
sbb
lret
cmp
xor
push
repnz
xor
daa
push
cltd
mov
andb
int3
popf
sbb
je
mov
aas
aaa
mov
cmpsl
sbb
scas
jge
xchg
into
test
test
or
repnz
scas
js
or
adc
push
add
je
xchg
mov
pusha
sub
and
repz
pop
inc
test
outsl
test
cmpb
adc
mov
shll
mov
repnz
fs
push
jp
pop
xor
cld
xchg
xchg
arpl
mov
jbe
pop
xchg
ja
outsb
fs
call
dec
mov
xchg
mov
ds
sbb
pop
lods
xchg
pop
lahf
clc
sub
pop
sarb
push
jmp
std
inc
pop
jbe
outsb
or
and
xor
roll
push
inc
scas
fnsave
rolb
cltd
mov
divl
jmp
lds
cld
repz
in
mov
hlt
push
ja
aam
cmc
imul
mov
dec
mov
aad
mov
fdivl
dec
xor
pop
adc
jmp
in
push
xchg
jnp
fidivs
sub
scas
out
mov
sub
mov
adc
lea
mov
ficomps
pop
lcall
outsl
addr16
push
mov
dec
and
test
xor
adc
jne
and
jmp
jne
push
pop
push
dec
or
js
repz
pop
adcl
call
xchg
das
stos
hlt
int3
sub
je
pop
mov
xchg
add
in
push
dec
outsl
mov
xor
mov
sbb
dec
xorl
movsb
xchg
or
mov
mov
mov
cmp
pop
in
sbb
pushfw
mov
loopne
aas
push
mov
clc
fidivs
push
int
sub
ja
dec
add
and
jge
xchg
jl
mov
addr16
fdivrs
out
cmp
mov
add
rclb
aam
sbbb
das
cwtl
aam
aas
hlt
jge
adc
pushf
jae
cmp
negl
loopne
loop
ret
cmp
in
fistps
mov
mov
pop
test
fwait
hlt
jg
add
xchg
jbe
cmp
add
rolb
xor
jns
dec
xchg
pop
sub
movb
jecxz
pop
ds
mov
test
jo
fmuls
bound
ret
cli
mov
test
insb
stos
push
es
push
popf
mov
ret
test
outsb
in
sbb
repnz
addr16
sbb
out
fists
mov
daa
scas
lock
mov
inc
pop
cli
xchg
lcall
push
cmc
insl
pop
fiadds
cmp
cmp
in
and
insb
addr16
fucom
or
insb
insl
std
fiadds
scas
cwtl
mov
dec
mov
clc
xchg
dec
jl
cld
and
je
mov
shlb
or
xchg
mov
mov
movsl
sarb
push
ret
outsl
data16
mov
mov
and
mov
in
jmp
dec
lea
fcmovnbe
xor
pop
inc
popa
test
mov
jne
jg
jecxz
mov
sub
je
stc
leave
or
push
int
insb
mov
push
pop
pop
inc
in
sbb
out
imul
push
sub
test
adc
mov
out
cmp
fimull
insb
push
test
sub
and
push
lahf
push
push
ss
cwtl
mov
aad
mov
addr16
push
inc
or
mov
push
push
mov
mov
cmpsl
in
mov
in
je
mov
and
jp
lret
fistl
lds
aas
out
insl
pop
and
sbb
outsl
mov
jl
jge
mov
or
mov
jnp
hlt
pop
xchg
pop
cmp
dec
add
pop
imul
or
push
cmp
cmp
xchg
sub
lods
ret
dec
add
jbe
out
ret
ja
add
mov
xor
xchg
mov
call
lock
mov
cltd
mov
in
mov
xor
lods
mov
xor
mov
sbb
add
rol
mov
lahf
inc
add
mov
outsl
in
cmp
lock
test
sbb
mov
in
ficoml
jle
cmc
jns
mov
inc
sahf
and
cmp
jne
or
icebp
lahf
test
mov
gs
mov
xchg
pop
add
lahf
push
xchg
mov
adc
nop
sbb
enter
cmpsb
push
ljmp
mov
negb
pop
flds
adc
push
or
repnz
push
cmp
sbb
mov
sub
mov
dec
cwtl
daa
cwtl
stos
outsb
xchg
jns
mov
push
loope
pop
data16
in
fs
mov
xlat
dec
pop
aam
lret
mov
xor
pop
push
and
jno
pop
xor
pop
mov
movsb
mov
int
and
jle
pop
cmpsl
adc
cmpb
inc
jo
orl
pop
pop
push
xchg
adc
mov
fisubrl
cmc
pop
dec
ljmp
push
pusha
scas
add
imul
adc
jns
pushf
mov
and
mov
enter
xchg
jb
fld
push
test
dec
jmp
mov
lcall
xor
lret
aas
dec
pusha
fiadds
fistpll
mov
xchg
adc
pusha
outsb
loope
lds
scas
pop
fst
sub
xor
mov
sbb
jl
inc
dec
pop
mov
lret
sub
sbb
push
notb
lods
fisubs
adc
push
call
cltd
adc
and
sub
inc
inc
adc
iret
xor
movsl
jle
sub
and
dec
xchg
jns
pop
push
enter
sub
jno,pn
adc
mov
je
mov
cmp
jo
pop
cltd
pop
loopw
lea
cmp
sahf
add
stos
pusha
test
jns
add
jns
cmp
cmc
dec
rcrb
inc
imul
enter
jmp
lcall
xor
fsubrl
cs
jae
adc
inc
jo
xor
dec
dec
cmp
or
dec
movsl
push
sub
imul
daa
repz
lds
mov
scas
adc
push
fcmovne
test
pop
jnp
mov
daa
das
in
xor
test
call
out
inc
mov
jmp
lods
cmp
mov
lock
ret
xchg
pusha
sub
cmp
or
jecxz
dec
stc
mov
shlb
adcb
and
pop
movsl
loop
pop
in
mov
mov
scas
ljmp
sahf
and
and
je
add
cwtl
ret
cwtl
insb
mov
fmulp
mov
lret
bound
daa
stos
enter
cmpb
into
mov
pop
rorb
adcb
andb
in
icebp
stc
cld
ds
xlat
std
cmp
test
aad
pop
andb
scas
scas
pop
adc
std
push
scas
repz
ss
add
pushf
in
fsubrs
inc
or
fnstenv
mov
and
jae
dec
lcall
sbb
pop
cltd
loope
sbb
add
mov
xchg
pop
fistpl
sub
push
sahf
aaa
jne
les
out
xor
enter
push
or
xor
mov
add
cli
testb
inc
pop
ficoml
cmpsb
and
lods
out
cmp
and
outsl
ret
out
adc
push
lds
repnz
pusha
rcrb
and
rorb
jl
fnsetpm(287
mov
dec
pop
loope
jbe
outsb
mov
pop
loop
cmp
inc
and
in
popf
mov
shll
call
pushf
enter
ja
adc
dec
sbb
mov
data16
test
mov
nop
push
fs
mov
and
fs
push
and
adc
add
ja
test
incl
lock
ret
inc
roll
das
sbb
das
jbe
or
xchg
sbb
push
rorl
or
orl
insb
pusha
jl
icebp
xchg
jae
and
or
test
pop
out
lock
orl
test
mov
test
mov
or
pop
add
lret
fs
mov
inc
pop
cmp
cmpsb
scas
jb,pt
or
or
imul
inc
scas
adc
les
adc
iret
clc
icebp
sbb
or
popf
fbld
sub
jae
xorb
lcall
jns
jne
stc
movsl
les
dec
out
je
inc
test
cmp
xchg
fiaddl
addr16
and
out
sbb
cmp
mov
or
mov
fisubrs
nop
add
fnstenv
mov
push
jmp
in
iret
stos
sub
call
sub
sbb
and
jne
sub
pop
push
test
xchg
mov
jno
xchg
lcall
xchg
leave
mov
ja
nop
inc
jl
cmp
fdivr
pop
icebp
call
push
js
mov
cwtl
push
mov
test
out
cmp
xor
xchg
outsl
out
xchg
ljmp
xor
out
and
or
adc
push
popf
repz
popa
sbb
jecxz
dec
adc
test
into
shlb
inc
pop
mov
jmp
stos
or
xor
movsb
jle
lret
push
lods
pop
xchg
and
clc
jp
or
cmp
cmp
add
jle
xor
sub
leave
or
cs
mov
loope
push
das
and
jcxz
or
mov
iret
or
adc
movsl
nop
fsubs
mov
stos
fxch
jmp
adc
lret
movsl
xor
lds
ret
inc
and
les
imul
rorb
out
cld
or
ret
mov
jge
and
dec
jb
dec
cmp
movsb
mov
add
sub
test
fwait
mov
popl
mov
inc
mov
sbb
rcll
add
cmp
in
lret
and
fistpl
test
jecxz
xchg
cmpsb
mov
idivl
mov
adcl
pop
bound
fisttpl
mov
iret
imul
xor
lods
pop
jg
sub
xchg
fsubrs
std
xor
xchg
pushf
pushf
pop
popa
lods
das
pop
gs
cmp
rorb
and
ficomps
mov
mov
add
out
das
jge
push
adc
outsb
test
mov
sbb
or
fwait
push
add
mov
ja
inc
xchg
in
cld
test
mov
stos
or
xor
outsb
icebp
test
push
adc
sub
icebp
lods
in
inc
mov
lods
sbb
scas
jle
push
add
cltd
adc
adc
data16
xchg
jo
int
lea
pop
xchg
and
rclb
test
aaa
or
push
test
nop
cld
cli
or
das
mov
enter
jl
dec
jle
cmp
stos
insb
inc
subb
or
imul
pop
mov
push
push
ds
cmp
aas
pop
push
xor
jge
fisttps
add
leave
sbbb
push
dec
shufps
jmp
and
outsb
mov
and
mov
mov
xor
inc
movsb
xchg
imul
xchg
lahf
je
stos
jno
vmaxps
std
add
lock
mov
mov
and
dec
lahf
ud1
sub
je
jp
sahf
inc
pushf
sbb
and
adc
or
mov
and
into
push
dec
mov
inc
push
jmp
mov
mov
pop
sub
push
out
notb
lods
jge
les
lods
movsl
icebp
push
mov
das
popa
sub
repz
in
cmp
mov
mov
sti
stos
andnps
xor
mov
lds
mov
out
push
jle
add
lcall
add
adc
scas
xor
daa
dec
jae
cld
dec
jnp
push
mov
cltd
icebp
mov
jns
andl
pusha
fwait
add
sti
iret
cmp
enter
mov
in
les
sbb
nop
sbb
fnsave
mov
loope
inc
test
setl
lods
in
pop
leave
aam
and
sub
je
cmp
push
and
insb
lret
xchg
dec
cwtl
mov
push
dec
push
movsb
mov
inc
jne
push
mov
and
dec
lret
or
sti
jno
in
aad
int3
dec
mov
fdivrl
int
imul
xor
pop
push
in
ret
mov
inc
pop
lcall
lods
jle
inc
jo
dec
sub
out
aam
out
xor
mov
jae
dec
cmp
in
enter
shll
lods
mov
jp
setns
js
pop
push
stos
mov
jp
mov
xchg
sti
jne
sbb
xor
push
or
push
out
sti
adc
and
cmpsb
xor
xor
xchg
repnz
insb
jl
dec
fists
adc
push
lahf
push
dec
add
cmpsl
xor
pop
ret
addr16
in
push
ficoms
mov
jbe
popf
outsl
mov
dec
mov
push
les
xchg
sub
aaa
ret
in
movsb
adc
call
aas
lea
aad
in
addr16
faddl
adc
aas
adc
jle
push
sar
mov
push
mov
leave
bound
cld
pushf
pop
aam
es
inc
fcomps
test
and
jecxz
mov
jno
add
mov
mov
es
jnp
xor
lods
xchg
pop
push
decb
jmp
cltd
mov
add
cmp
xchg
xor
or
bound
rcll
jg
fcmovnbe
fwait
jne
push
jmp
push
movb
jae
cmp
and
mov
movsb
shll
adc
push
lcall
xor
jns
pop
add
sti
lods
xor
mov
dec
lahf
dec
repz
rolb
call
fs
cmp
xlat
int
ds
xorl
xchg
insl
hlt
cmp
in
stos
and
ret
add
fdivrl
push
jge
lret
or
and
mov
sub
sahf
ljmp
das
nop
rol
xor
cmpsb
xchg
fisubrl
push
repnz
xchg
adc
arpl
xor
sub
or
adc
out
pop
sbb
cs
xorb
jo
stos
inc
ds
mov
pop
rcrb
bound
xchg
pushf
stos
jno
gs
sbb
scas
fisubrs
cmp
mov
pop
scas
lock
xchg
out
sub
movsb
xor
mov
xchg
fwait
add
xor
out
bound
popa
mov
and
leave
jno
push
inc
cmp
ss
addr16
outsl
add
fnsave
xchg
jae
sti
or
or
push
or
inc
lahf
int
mov
dec
or
fs
and
imul
dec
jmp
xor
lahf
xchg
loop
ja
cmp
xor
push
lcall
inc
jle
addr16
xor
jecxz
pushf
lds
jl
fstpt
cmpsb
fcoms
ficomps
add
in
mov
pop
pop
in
xor
movsl
rcll
add
xchg
inc
mov
mov
sbb
mov
idivl
sbb
ja
loop
nop
sbb
in
out
dec
call
insl
lahf
xlat
idiv
div
aas
loop
mov
sbb
orl
sub
mov
leave
fwait
imul
loope
arpl
daa
pop
jns
xchg
add
and
rep
xchg
jp
ret
dec
jecxz
pop
out
out
rcrl
and
in
cmc
nop
inc
cmp
add
pusha
inc
test
or
cmp
push
inc
icebp
jns
push
in
rorl
enter
inc
cmpsb
mov
add
into
aaa
xchg
sub
cmp
mov
nop
jmp
sub
mov
js
hlt
add
flds
cs
or
xlat
inc
dec
pushf
xchg
cwtl
sub
icebp
pop
inc
popa
nop
lret
and
pop
adc
frstor
ja
or
ja
xchg
imul
lock
cmpsb
into
jo
push
pop
inc
out
movsl
test
in
jo
push
xchg
in
mov
or
mov
xchg
pop
add
addr16
fnop
sbb
pop
push
mov
sahf
xchg
ljmp
aaa
cli
xchg
dec
push
sub
pop
adc
mov
push
data16
push
imul
sbb
push
enter
rcll
movsb
int3
mov
adc
mov
jp
mov
or
mov
push
jnp
push
es
adc
mov
inc
and
imul
js
xor
stc
jle
push
xchg
jmp
mov
out
cmpsl
aam
cli
pop
push
ficomps
jo
xchg
jle
gs
pusha
cmp
pop
jo
mov
aas
pop
mov
mov
xchg
push
sub
mov
sub
repz
test
push
mov
and
movsl
test
jnp
mov
inc
movsl
leave
cmp
adcb
shll
outsb
daa
sti
pop
lds
aam
sub
xor
js
cltd
shl
add
adc
lret
jecxz
lret
mov
xor
pop
sub
cmc
lcall
gs
imul
ljmp
shll
push
dec
cmpsb
pop
adc
pushf
cs
lock
andb
inc
fcompl
fmull
jmp
icebp
inc
pop
mov
cltd
ljmp
push
dec
add
xchg
xor
add
mov
addb
and
add
push
add
add
add
push
push
add
cwtl
dec
add
pop
push
add
pop
dec
add
cmp
add
dec
add
repnz
add
xor
add
dec
add
cwtl
push
add
add
add
add
test
add
loop
add
mov
add
dec
add
rclb
jb
add
insb
dec
add
adc
add
dec
add
cmp
add
les
add
dec
add
xchg
add
add
push
push
add
dec
push
add
add
add
sahf
dec
add
test
add
inc
dec
add
inc
dec
add
sub
add
jbe
add
sbb
add
push
dec
add
mov
add
rorb
in
dec
add
cmp
add
dec
add
cmp
add
jbe
add
fmuls
add
dec
add
cli
dec
add
lods
dec
add
lock
add
dec
add
adc
add
sbb
add
dec
add
mov
dec
add
sub
add
add
mov
add
add
loopne
add
add
add
or
add
add
orb
mov
dec
add
rorb
loop
add
nop
dec
add
xchg
dec
add
add
add
dec
dec
add
loop
add
fmuls
add
dec
add
pop
dec
add
ret
add
add
call
dec
add
outsb
dec
add
scas
dec
add
xchg
dec
add
push
dec
add
xor
add
dec
add
sub
add
add
cld
dec
add
bound
add
dec
add
aam
add
fmuls
add
add
pushf
dec
add
clc
dec
add
push
dec
add
lock
add
jle
add
jb
add
adc
add
inc
dec
add
and
add
add
add
add
popa
fs
imul
jns
push
jae
add
add
popa
jae
push
popa
jo
add
inc
gs
jae
jb
gs
jne
je
popa
outsb
addr16
inc
add
mov
dec
outsl
fs
gs
popa
outsb
fs
gs
add
dec
add
imul
inc
jb
je
arpl
push
arpl
outsb
inc
outsb
fs
jo
outsb
inc
outsl
jne
je
repnz
je
popa
imul
outsw
add
add
inc
popa
fs
jne
gs
gs
fs
je
add
leave
add
outsb
fs
imul
jne
gs
outsl
jne
je
outsl
imul
add
imul
gs
arpl
add
insb
add
je
jb
outsl
arpl
fs
outsb
arpl
insl
outsb
je
add
add
je
push
inc
data16
dec
popa
jae
add
add
je
jb
arpl
jae
data16
dec
popa
jae
add
sub
push
gs
outsl
arpl
push
imul
inc
fs
je
insl
push
add
testl
popa
insb
inc
fs
je
insl
push
add
cmp
inc
gs
outsl
arpl
gs
outsb
outsw
inc
add
ja
inc
gs
jne
jb
outsb
je
push
dec
add
push
add
insb
push
outsb
ja
outsb
add
push
gs
fs
outsl
outsb
jae
insb
gs
jne
jo
je
je
jb
bound
add
mov
popa
insb
push
imul
outsb
jae
outsl
jae
outsb
popa
insl
gs
outsl
inc
outsl
insl
jo
je
jb
popa
insl
gs
add
or
inc
gs
je
jb
jne
dec
outsb
outsw
inc
add
push
gs
popa
jo
push
popa
jb
insl
gs
jb
add
dec
outsl
arpl
gs
outsb
outsw
push
add
mov
insl
inc
popa
je
inc
outsl
jb
popa
je
push
add
push
add
insb
inc
imul
jns
mov
insl
dec
popa
outsb
addr16
addr16
jb
jne
dec
outsl
arpl
gs
add
push
jns
je
insl
inc
outsl
fs
popa
addr16
add
xchg
add
je
jne
jb
outsb
je
jb
arpl
jae
add
add
jb
gs
outsl
outsb
imul
imul
add
imul
insb
gs
outsb
jo
je
add
cmp
inc
gs
gs
jne
je
outsl
insl
insl
inc
outsl
outsb
imul
inc
push
dec
inc
dec
xor
cs
insb
add
nop
add
je
outsb
imul
pop
popa
fs
jae
pop
imul
add
gs
jb
jbe
add
pop
pop
jae
je
jae
jb
popa
je
gs
add
addb
pop
addr16
popa
imul
or
pop
insl
bound
jb
outsb
add
pop
ja
jae
imul
sub
pop
imul
jb
outsb
je
add
je
imul
popa
add
imul
arpl
inc
imul
pop
pop
jae
je
popa
jo
pop
je
jo
add
mov
imul
jb
jae
je
add
add
jo
je
push
add
js
imul
add
je
outsb
imul
jno
pop
insb
jae
popa
jb
push
pop
imul
js
ss
and
pop
imul
jo
popa
add
add
je
imul
pop
insl
bound
insl
jae
outsl
push
jae
add
add
popa
outsb
add
add
bound
outsl
insl
bound
adc
pop
gs
arpl
add
pop
add
je
bound
add
add
outsl
outsb
je
outsl
insb
data16
add
je
push
jae
jae
popa
outsb
data16
pop
addr16
push
pop
popa
arpl
insb
outsb
add
arpl
je
push
gs
add
movsl
add
insb
jne
push
add
jae
jb
jo
add
sub
pop
imul
insl
add
pop
jae
jb
jne
add
add
jo
pop
insw
outsl
fs
pop
add
jo
pop
arpl
insl
outsl
fs
mov
addr16
arpl
jb
add
outsb
jbe
add
add
jae
jo
outsb
add
add
gs
je
add
outsb
popa
insl
add
imul
popa
ja
insb
add
dec
push
push
inc
push
push
cs
insb
add
adc
dec
gs
popa
addr16
gs
and
push
popa
imul
jne
dec
fs
add
xlat
add
popa
jb
jb
jbe
add
add
je
arpl
jo
jns
add
add
insl
push
outsl
inc
push
add
insl
push
push
push
imul
and
push
gs
gs
outsl
popa
jb
push
je
je
add
xchg
dec
outsb
jne
je
insl
inc
jb
insl
push
outsl
imul
imul
popa
jae
push
add
jge
inc
gs
jns
inc
outsl
insb
outsl
jb
or
inc
imul
add
push
imul
add
pop
add
insb
insb
push
imul
outsl
arpl
or
inc
gs
arpl
insb
insb
dec
outsb
outsw
add
fs
gs
popa
addr16
add
jge
inc
gs
imul
js
inc
add
sbb
push
jb
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
push
imul
imul
push
gs
arpl
insb
insb
push
popa
outsb
add
dec
add
je
imul
js
dec
outsb
addr16
inc
add
sbb
inc
push
ja
jb
jne
push
add
sub
push
gs
jb
jo
add
jb
inc
imul
js
popa
jb
insl
push
add
inc
gs
dec
inc
inc
add
inc
add
je
imul
popa
arpl
outsb
je
add
add
je
imul
outsb
je
js
dec
gs
jo
add
iret
add
je
jb
jo
add
lret
add
jne
inc
gs
je
jo
push
add
inc
outsl
jo
inc
arpl
insb
gs
je
jb
popa
bound
add
inc
insb
outsl
jae
push
imul
popa
je
outsl
outsb
add
push
push
inc
push
xor
cs
insb
add
push
inc
popa
insb
outsb
fs
jb
outsb
outsw
inc
xchg
add
add
add
push
add
add
add
add
pusha
add
addb
add
add
add
add
addb
add
add
add
and
add
cmp
add
add
add
add
add
pop
add
addb
or
add
add
jo
add
mov
add
mov
add
add
add
add
add
addb
add
call
add
add
add
orb
add
sbb
add
add
add
add
add
xor
add
dec
add
addb
add
add
add
pusha
add
addb
add
js
add
nop
add
addb
add
add
add
add
add
add
addb
add
fadds
add
add
add
add
add
lock
addb
add
add
add
or
add
and
add
add
add
sbb
add
add
add
add
add
add
add
add
sbb
add
add
sbb
add
add
sbb
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
sbb
add
add
andb
push
mov
add
mov
mov
add
xor
add
jo
add
sub
add
mov
add
add
mov
add
xor
add
jo
add
add
add
add
add
mov
add
push
rolb
pusha
add
add
add
add
rolb
add
add
loopne
add
add
add
roll
cmpsb
add
add
roll
pop
add
add
les
add
add
mov
add
add
add
dec
add
add
imul
test
pop
cmpl
push
jbe
cmp
jae
lahf
rcrb
lcall
push
pop
sub
popa
je
mov
insb
push
test
rorb
jno
test
addr16
fsubrs
cs
rcrb
scas
jno
lock
xchg
and
out
mov
inc
xchg
pop
xchg
lods
inc
jg
jle
shlb
adc
mov
sbb
mov
cs
fistpl
push
mov
sbb
and
movntq
aam
int3
sub
jne
add
inc
jecxz
jo
or
or
or
cmpsl
lret
out
or
pop
or
stos
out
or
jge
out
out
out
cmp
mov
adc
xorb
mov
add
and
loop
adc
add
loop
notb
add
loopne
loop
push
adc
shl
stos
adc
mov
adc
xor
ljmp
dec
mov
testl
and
fnstsw
cmp
fidivrs
popf
in
fdivrl
cmp
xor
cmp
push
jle
popf
test
cmp
pop
popa
cmc
mov
pop
xchg
aam
inc
cmc
xchg
xchg
mov
cld
pop
repz
mov
sar
sbb
xor
sbb
adc
sbb
jae
sbb
push
jle
fbld
inc
xchg
jp
mov
das
nop
pop
adc
testb
adc
mov
mov
mov
adc
mov
scas
bound
pop
xchg
mov
into
add
cmp
mov
out
and
sbb
mov
push
jb
sbb
in
fiadds
shlb
rolb
data16
cmp
repnz
cmp
adc
cmp
loopne
xchg
push
cmp
loopne
out
push
cmp
movsb
loopne
jb
cmp
test
fsubs
dec
daa
movsl
and
stc
dec
dec
pop
movsl
add
cltd
xor
outsl
lds
and
in
and
out
scas
add
out
and
out
out
inc
add
cmp
add
fdivs
lods
imul
push
imul
or
imul
sub
imul
lret
jmp
cli
or
jl
or
pop
mov
imul
ficompl
lods
sub
lods
mov
dec
iret
lods
fwait
pushf
sub
push
lods
jnp
sub
mov
mov
repz
pop
xchg
push
repz
test
stc
cmp
or
out
ds
int
and
loopne
mov
dec
loopne
pop
lcall
push
fwait
das
mov
lret
insb
aam
sub
insb
hlt
fldcw
insb
adc
sub
insb
xor
sub
insb
push
jns
mov
pop
sub
push
aas
test
or
or
das
test
rcr
push
cmp
shl
in
push
cmp
pop
mov
cmp
add
out
push
shll
call
xchg
and
mov
pop
mov
adc
sbb
addl
clc
mov
xchg
xchg
aaa
jns
iret
pop
adc
mov
lea
cmp
in
push
mov
or
xor
mov
in
fistps
aas
sbb
and
inc
sub
cmp
dec
pop
mov
mov
flds
mov
jmp
pop
pop
mov
dec
dec
jge
aaa
sub
cmp
push
jmp
mov
gs
pop
cs
xchg
cmp
cmp
shl
std
pop
notl
fnstsw
ficomps
cmp
and
ss
insb
mov
pop
push
out
cwtl
mov
sub
or
int3
outsb
and
cmpl
inc
popa
or
fs
in
fidivs
rcl
repnz
xor
sbb
loopne
jle
mov
or
out
in
cld
dec
or
arpl
pop
jle
sub
cmpsl
mov
and
movsl
pushf
fwait
cmp
mov
jne
push
sti
xor
xchg
dec
scas
xor
xor
adc
lahf
mov
push
mov
out
mov
adc
or
and
mov
out
stos
pushf
push
pop
arpl
mov
lret
or
pop
mov
repz
push
sub
addb
dec
les
aad
add
sub
pop
fdiv
loop
sub
int
jae
sub
cmc
dec
repnz
xchg
gs
mov
in
dec
outsb
inc
jo
movsl
mov
mov
xchg
cld
pop
jae
sbb
adc
and
fstl
mov
cli
ror
insb
push
xor
xchg
ret
out
ret
fs
ja
inc
or
loopne
pop
test
or
out
fnstenv
fistpll
arpl
push
aad
shll
pop
xchg
cmp
icebp
je
ret
jecxz
fwait
lret
fcomp
pop
fcomps
sahf
fs
jne
pop
add
cmp
in
xor
outsl
fstps
sbb
insb
jge
addl
out
fistpll
jmp
cmp
addb
imul
pop
out
pusha
push
mov
mov
push
lods
cmc
push
sbb
or
lds
pop
add
push
mov
inc
jbe
enter
mov
test
sub
or
or
mov
aad
sub
xchg
dec
int
repz
or
popa
in
rcr
pop
cmp
mov
or
fsubr
lds
xor
pop
out
sub
hlt
lret
fists
dec
or
idivb
jnp
mov
addb
aaa
clc
sub
bound
cmp
inc
out
jle
cmp
mov
test
sub
mov
fistpll
pop
fsubp
lcall
adc
sub
mov
push
mov
adc
out
cltd
add
adc
int
insl
addr16
or
popa
bound
in
pop
andb
sahf
or
xor
stc
test
stos
aas
sbb
mov
dec
jmp
xchg
jge
jae
insl
cmpsb
outsl
xchg
sub
shrl
ret
or
pop
std
or
out
mov
les
sub
jae
mov
cwtl
xchg
lret
cltd
sub
test
shll
ret
mov
cltd
dec
pop
add
pop
push
ja
dec
xchg
mov
arpl
in
mov
int
ljmp
and
test
mov
sub
cs
sahf
cmp
sbb
xchg
stos
fadds
cmpsb
test
mov
cli
mov
rorb
xor
mov
jl
pop
mov
outsl
dec
push
mov
pop
adc
pop
out
out
in
mov
cmp
sar
sahf
xor
push
dec
mov
add
in
popf
xchg
int
int
cmp
dec
in
testl
addr16
dec
in
add
or
enterw
sub
pop
adc
push
mov
aaa
push
dec
pop
sbb
jecxz
xor
pop
nop
icebp
loope
cmp
popf
xchg
add
push
jl
pop
fcoms
fidivs
xchg
addr16
or
cltd
lods
lds
mov
mov
jmp
pop
cs
outsb
outsb
xchg
xchg
or
fyl2x
push
sub
pop
push
push
nop
or
add
test
jp
jecxz
inc
nop
lds
adc
push
xor
jge
pop
sub
ja
in
pushl
and
sub
clc
sbb
rcll
mov
outsl
xor
pop
lods
jnp
mov
addr16
xor
out
lcall
mov
jne
push
jbe
xchg
push
dec
out
es
sbb
pop
addr16
mov
mov
pushf
repz
and
add
jae
mov
adc
push
out
jae
mov
push
jecxz
movb
mov
add
mov
dec
inc
mull
cltd
cmpsl
popf
dec
lods
jno
mov
loop
mov
push
fs
fstps
jmp
xor
insl
add
and
mov
xlat
xor
pop
jo
jne
xchg
pop
mov
mov
pop
mov
loope
jle
mov
lret
xchg
addr16
or
hlt
cmp
jo
ret
nop
xchg
je
aam
negb
push
mov
mov
imul
filds
dec
xlat
sbb
aas
push
jmp
inc
aad
leave
xorb
mov
adc
mov
popa
fidivl
pop
ds
cmp
test
test
push
mov
ret
mov
nop
sub
cltd
push
push
push
dec
push
adc
mov
sbb
ja
mov
add
jge
outsl
loop
lahf
stos
leave
add
jle
jmp
dec
push
xchg
jmp
sarl
mov
in
testl
push
movb
and
cli
lcall
jnp
jno
sahf
push
mov
xchg
outsl
inc
add
or
push
dec
faddl
cmp
lcall
pop
cld
cmp
inc
dec
fsubs
sbb
jns
notb
test
jnp
sbb
mov
mov
lcall
xchg
inc
jmp
dec
les
ret
fistpl
adc
lret
out
xor
enter
pop
inc
loop
jl
dec
push
iret
divl
cli
aaa
mov
ficoml
mov
pushf
mov
ret
nop
adc
fcompl
mov
outsl
mov
add
mov
das
mov
dec
mov
push
sbb
xor
xchg
setg
adc
fs
add
mov
ja
sbb
push
mulb
int
stos
inc
leave
adc
push
xchg
xchg
xor
mov
sub
repz
or
dec
hlt
cmp
sub
movsl
scas
mov
inc
fists
pop
shlb
loope
adc
push
sub
or
mov
xor
ja
loop
notl
iret
add
push
jl
xchg
xchg
add
popa
dec
daa
push
scas
stos
cmp
mov
imul
jns
jg
cmpsb
roll
std
mov
mov
sbb
aas
sbb
arpl
sbb
test
in
pop
aaa
and
dec
xchg
add
mov
xchg
xchg
mov
or
dec
push
jns
movsl
xchg
xchg
clc
xor
sub
or
pushf
sub
dec
mov
pusha
std
scas
fdivrs
xor
inc
int3
mov
insb
mov
mov
jo
pusha
in
jns
jmp
sub
mov
dec
movsb
adc
mov
mov
es
clc
mov
ljmp
insb
aas
adc
sub
xchg
sbb
int3
adc
push
bound
pusha
pop
loopne
mov
mov
dec
push
repnz
movsl
pop
test
dec
sbb
or
mov
jge
lods
push
jecxz
pop
add
adc
addb
sbb
jge
pop
int
cltd
push
std
cltd
and
xor
outsl
aas
push
dec
lahf
add
push
or
jge
fimull
pop
sbb
inc
sub
sub
push
lds
popa
xchg
ja
pop
or
rol
aam
das
in
jne
dec
andb
push
ss
pop
or
sbb
inc
mov
psraw
ljmp
cmpsb
inc
mov
cli
add
std
push
cmc
shrb
and
inc
sub
push
movlhps
jns
fadd
sub
mov
rorb
cmp
pop
xor
jne
mov
xchg
xor
lret
cmc
int
sub
out
jmp
push
cmp
push
push
xor
adc
icebp
test
das
aas
js
sub
cli
dec
pop
xchg
or
push
dec
sti
xchg
in
movsb
test
cmpsl
mov
insb
lret
inc
imul
imul
push
sbbl
out
rclb
dec
and
or
sti
cmc
cltd
out
add
mov
sbb
mov
adc
out
out
sub
ljmp
or
mov
pusha
add
mov
mov
or
hlt
out
mov
xor
dec
loope
cmc
cmpsl
or
push
inc
in
enter
sub
test
or
xor
xchg
cmp
mov
add
sub
cmpsb
dec
cs
aas
out
add
daa
fsub
pop
ss
sqrtps
or
mov
repnz
sub
sbb
repnz
pop
outsb
push
pop
data16
cmp
cld
call
add
inc
test
pushf
rolb
sub
lods
hlt
mov
daa
push
jg
lods
mov
js
cmp
icebp
push
push
jl
neg
inc
cs
jae
and
popf
fstl
adc
fwait
int
imul
decl
inc
or
and
fcompl
daa
inc
out
lods
test
repz
cmp
mov
add
andb
push
xor
js
arpl
rol
adcb
push
push
jl
scas
jle
or
push
dec
popf
in
sbb
xor
adc
mov
ljmp
faddl
insl
push
pop
jne
mov
sub
inc
and
xchg
loop
hlt
mov
lods
loopne
xchg
fadd
js
ret
in
pop
fimull
jl
jle
jp
lods
mov
dec
imul
insl
enter
dec
xchg
ficoml
push
repnz
dec
or
into
pop
pusha
cmpsb
push
and
outsl
jbe
mov
or
icebp
xchg
inc
lret
negl
xchg
lods
test
ret
out
mov
xor
mov
mov
xchg
mov
jno
lret
arpl
mov
cmp
xor
shlb
xlat
xchg
mov
sbb
cwtl
mov
push
out
test
push
hlt
inc
pop
and
cwtl
cltd
adc
dec
pop
lcall
bound
sbb
xchg
hlt
aam
pop
lds
imul
xchg
xchg
enter
fwait
jo
testl
pop
mov
sbb
mov
inc
outsb
xchg
repz
cmc
dec
xchg
popf
sub
push
add
and
ja
xor
xchg
jg
loopne
jge
mov
stos
std
mov
jno
push
scas
mov
fsubrs
addr16
cmc
mov
sbb
adcl
iret
or
xchg
out
lret
pop
aas
xor
adc
ja
push
or
mov
mov
mov
inc
pop
adc
bound
add
aam
push
push
xchg
leave
lock
and
mov
jg
movsb
push
aad
insl
xor
lock
mov
jmp
data16
xchg
push
into
add
dec
push
stos
cli
popf
ret
mov
jb
cli
xchg
xchg
pop
dec
adc
lahf
into
and
sbb
inc
xorb
dec
adcl
loope
cmp
cli
adc
pop
jmp
mov
mov
sbb
jb
adc
add
mov
ja
out
jo
push
mov
mov
daa
movsl
adc
and
and
mov
stc
adc
stos
push
mul
mov
sbb
in
dec
xor
jb
xor
repnz
out
lock
sarl
dec
lret
fdivl
outsb
xchg
pushf
out
and
ss
push
ret
lahf
cli
adc
dec
inc
movsl
das
pop
imul
add
jg
pushf
daa
xchg
mov
inc
imul
pop
mov
movsb
or
add
mov
cli
pop
adc
jge
inc
jne
add
and
out
or
xchg
and
fmuls
rorb
addr16
xchg
call
aad
or
shll
mov
pushf
aaa
adc
lods
jbe
sbb
sbb
mov
sbb
fs
repnz
loop
sbb
xor
mov
jp
fstpl
popf
mov
pop
adc
stc
or
sar
mov
or
adc
test
daa
ss
xor
cmc
dec
das
clc
xchg
inc
in
mov
dec
mov
inc
and
je
xchg
and
adc
cmp
outsl
repnz
mov
imul
mov
les
dec
test
add
add
int3
mov
pop
add
push
add
repz
in
fildl
jmp
leave
cmpsb
adc
adc
xchg
adc
out
popf
outsb
cmp
xchg
fs
pop
gs
jnp
repz
adc
daa
inc
mull
test
shll
add
mov
pop
push
insl
pop
push
mov
dec
jbe
and
inc
fcompl
add
call
push
lock
dec
outsl
cmp
rcr
add
sbb
pop
lds
dec
cmp
aas
adc
sbb
hlt
pop
popf
push
lods
mov
push
lods
mov
orl
popa
loop
pop
cmp
push
push
mov
in
std
in
mov
or
aaa
adc
mov
mov
incl
movsl
jbe
pop
insb
lea
adcl
mov
insl
imul
and
iret
scas
fidivrl
xor
adc
out
jmp
out
fimuls
cmc
and
cmp
nop
cmpsb
jb
mov
xor
dec
sub
out
insl
xchg
pop
roll
inc
lret
mov
push
scas
imull
inc
pusha
pushf
lods
mov
insl
cs
inc
test
or
xchg
aas
and
push
cmp
ds
adc
cmp
pop
cmpb
xchg
dec
xor
push
lahf
notl
ret
jmp
sbb
adc
orb
mov
pusha
mov
add
mov
out
push
mov
push
mov
inc
xor
lock
std
push
pop
jb
popa
jecxz
lds
xchg
pop
aam
dec
fucom
push
mov
xchg
stc
add
mov
mov
cli
xchg
fdivl
push
es
mov
fisttps
aad
and
dec
jbe
xor
push
jbe
icebp
int3
lea
or
jne
mov
dec
inc
fnstenv
cmc
rol
std
or
fnsave
pop
mov
mov
pop
jno
fs
xor
es
cltd
rorb
out
movsl
leave
test
out
add
and
in
dec
adc
mov
iret
popa
jbe
cmpsb
push
jo
mov
mov
jmp
jb
roll
je
inc
add
arpl
add
mov
out
and
xchg
cld
or
dec
add
leave
jmp
or
jl
into
sbbb
mov
enter
jmp
add
nop
mov
jae
dec
add
cmp
mov
bound
fcomi
test
xchg
mov
jno
fs
mov
sbb
adc
in
mov
jo
icebp
sti
cmpsb
jl
push
movsb
xor
test
and
jmp
lret
in
sub
or
out
jecxz
jmp
subl
cmp
insb
push
hlt
push
mov
xor
lret
sub
pop
mov
inc
mov
push
add
mov
fmuls
sub
rcrl
insb
fidivrs
addr16
add
mov
ds
outsl
push
ss
mov
test
pushf
movsb
inc
jns
es
or
mov
mov
inc
xor
outsb
stc
fs
rclb
fmul
loopne
sub
add
stos
out
add
and
fdivl
jl
cmpsb
bound
mov
out
daa
insb
lods
push
inc
std
das
hlt
lcall
mov
and
xchg
inc
jge
lods
pop
outsl
fs
insb
ror
and
xchg
push
insl
push
sub
xchg
ss
push
cmp
and
repnz
xchg
cmp
loop
daa
inc
add
pop
test
jmp
dec
bound
mov
pop
mov
inc
fidivs
inc
add
sbb
push
jbe
ret
and
inc
xlat
xor
pop
fmuls
mov
btc
cmp
inc
mov
sub
addr16
pop
loope
cs
xchg
mov
cmpb
sub
adc
mov
into
fmuls
gs
mov
icebp
leave
push
daa
mov
addb
mov
jae
rorb
aaa
ret
jae
adc
pusha
stc
in
in
decl
pop
fwait
dec
std
in
mov
pop
enter
fistl
jns
bound
mov
jg
cli
or
cmp
pusha
movsl
lds
stos
cmp
movsb
mov
or
and
dec
lods
lods
fisubl
xorb
mov
and
xor
pop
in
lret
sbb
daa
jo
out
fldcw
aad
in
ljmp
cs
movsb
or
push
jmp
or
inc
pop
lahf
out
andb
and
es
sub
mov
push
les
or
adc
jmp
mov
sub
ss
xor
aaa
mov
xchg
add
addl
lock
fisttpl
pop
push
xorl
ja
rolb
mov
outsb
ljmp
mov
decb
outsl
lock
mov
stos
sbb
or
jae
pop
pop
fadds
xor
lret
fnsave
push
or
cmp
xchg
add
cmp
mov
daa
daa
pop
iret
push
cltd
out
dec
rcl
adc
fidivrl
lret
punpckhdq
add
dec
mov
jo
loopne
cmp
push
fnsave
loope
inc
outsb
jns
sub
pop
xchg
cld
xor
out
jae
fisubl
pop
inc
dec
add
cwtl
movsb
daa
psraw
cmp
mov
dec
subl
xor
lods
jge
scas
cmpsb
rcrl
lea
lret
push
stos
jb
cmp
ret
adc
ret
stos
mov
or
lds
inc
and
test
rorb
mull
cmp
cmp
pop
push
add
jnp
add
add
add
aas
add
jne
inc
add
add
add
dec
add
imul
add
and
add
add
push
add
sbb
sbb
jl
xor
add
sub
dec
add
add
add
add
xor
add
or
sub
add
push
add
dec
xchg
add
adc
push
dec
inc
xor
and
add
add
add
add
mov
sub
add
add
add
sbb
pusha
add
addb
nop
add
xor
add
add
add
pop
xchg
inc
dec
add
add
dec
add
add
add
add
push
add
add
add
add
jae
add
add
inc
add
add
xor
add
or
add
xchg
add
add
jns
pusha
add
add
or
add
add
pop
sub
add
add
add
push
and
add
add
add
add
xchg
add
add
mov
xor
add
sbbl
add
add
add
add
add
add
adc
add
add
add
add
dec
xorl
add
add
add
xchg
xchg
add
add
add
push
add
add
add
add
sbb
and
xor
add
add
mov
add
cmp
adc
add
jle
adc
add
add
sub
add
add
add
inc
add
push
add
add
add
jge
adc
add
add
sbb
add
dec
imul
add
add
add
add
xor
add
pop
push
add
add
or
add
pop
add
je
add
add
bound
add
insb
imul
jl
add
add
add
sub
add
mov
add
add
add
add
add
xchg
dec
adc
add
add
cmp
add
daa
add
js
add
sbb
add
addb
push
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
jns
add
add
add
xor
push
and
push
aaa
add
add
add
addb
add
or
dec
push
add
add
add
add
add
cmp
sbb
add
add
add
add
pop
add
add
or
sub
or
add
add
add
push
add
sbb
add
add
add
and
sub
add
adc
pusha
insl
add
jne
pop
daa
dec
jne
add
add
add
add
pop
add
add
push
adc
add
add
xor
add
add
ja
cmp
add
dec
pop
add
addl
add
pop
sub
add
inc
jno
add
add
add
pop
add
add
jae
add
cmp
add
add
arpl
dec
add
add
add
push
add
add
dec
add
dec
add
add
inc
add
add
add
push
add
xor
add
add
inc
add
xor
jo
imul
add
add
add
aaa
add
dec
add
add
cmp
push
add
jo
imul
add
jb
dec
add
add
push
add
pop
add
add
jo
imul
adc
je
add
inc
add
bound
imul
add
push
add
add
jo
xor
jbe
inc
add
push
add
push
add
jno
jp
cmp
insl
add
je
outsb
add
cmp
cmp
jae
or
add
xor
xor
bound
pop
add
jne
push
add
add
add
add
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
xchg
add
add
add
add
xor
cmp
xor
xor
inc
add
add
add
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
cmp
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
cmp
xor
jbe
push
add
ja
push
add
dec
add
inc
add
add
inc
add
jns
jb
bound
xor
add
js
add
add
add
add
add
insb
add
push
add
jb
jae
imul
add
add
xor
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
push
jns
xor
insl
add
ja
jb
xor
push
add
push
add
xor
dec
add
imul
pop
add
add
inc
add
dec
add
xor
add
add
add
adc
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
dec
add
add
dec
add
xor
pop
add
je
jb
add
push
add
inc
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
xchg
push
nop
add
pop
jno
add
add
add
outsl
add
add
adc
push
xchg
add
push
add
add
sbb
add
add
add
add
mov
sub
pop
add
jae
add
push
pop
add
push
pop
push
or
add
push
or
add
add
add
add
das
add
add
add
xchg
sub
cmp
