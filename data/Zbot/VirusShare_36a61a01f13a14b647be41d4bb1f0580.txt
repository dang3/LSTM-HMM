push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
push
push
push
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
push
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
pop
push
mov
sub
push
push
push
call
add
pop
mov
mov
push
pushl
pop
call
mov
pop
add
jmp
stos
stos
xor
mov
mov
pusha
call
add
push
mov
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
jmp
ret
cld
sub
lea
add
mov
mov
shl
sub
mov
mov
movl
mov
cmp
je
sub
sub
je
sub
lea
mov
sub
jb
mov
sub
ja
push
pop
jbe
mov
popf
push
decl
ret
add
pop
push
mov
sub
push
pushl
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
push
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
push
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
push
pushl
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
add
push
pop
sub
push
push
lea
push
lea
push
addl
lea
push
lea
push
pushl
decl
mov
add
call
sub
lea
sub
sub
mov
pop
mov
mov
lea
mov
push
mov
xorl
pop
sub
or
xor
add
push
mov
push
push
pop
push
pop
stos
shr
stos
shr
stos
shr
stos
pop
pop
addl
neg
clc
sbb
pushl
lea
lea
pop
repz
sub
cmp
jne
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
pushl
push
push
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
add
add
fsubl
add
adc
add
lret
add
and
add
and
add
add
mov
and
add
and
add
add
sub
add
scas
and
add
and
add
and
add
add
adc
add
sub
add
lock
add
add
add
add
push
and
add
and
add
add
cld
and
add
and
add
and
add
add
and
add
add
xchg
and
add
add
add
and
add
add
ds
add
add
add
add
mov
add
add
add
and
add
and
add
and
add
add
sbb
add
add
mov
add
add
add
add
and
add
add
add
add
mov
and
add
add
fsubl
add
adc
add
lret
add
and
add
and
add
add
mov
and
add
and
add
add
sub
add
scas
and
add
and
add
and
add
add
adc
add
sub
add
lock
add
add
add
add
push
and
add
and
add
add
cld
and
add
and
add
and
add
add
and
add
add
xchg
and
add
add
add
and
add
add
ds
add
add
add
add
mov
add
add
add
add
outsl
bound
inc
insb
popa
addr16
push
push
je
imul
inc
add
pop
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
gs
outsl
jbe
inc
imul
jns
add
test
inc
jb
popa
je
inc
jbe
outsb
je
add
ret
gs
jne
jb
outsb
je
jb
arpl
jae
xchg
add
je
jne
jb
outsb
je
push
add
call
inc
imul
bound
gs
add
aad
inc
imul
add
push
jb
jbe
je
push
jb
imul
inc
add
popa
je
inc
imul
jns
add
je
push
gs
popa
jae
inc
jb
outsl
jb
add
add
imul
jb
je
arpl
add
aas
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
inc
gs
je
dec
popa
outsb
fs
add
filds
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
insb
outsl
jae
dec
popa
outsb
fs
gs
add
je
imul
bound
gs
add
roll
dec
gs
jo
jb
add
movsl
add
je
gs
imul
rolb
insb
outsl
bound
dec
outsl
arpl
add
push
dec
inc
dec
xor
cs
insb
add
and
inc
js
jb
arpl
outsl
outsb
inc
add
pop
add
push
outsb
jb
imul
jb
gs
pop
add
addr16
imul
adc
inc
insb
insb
push
outsb
jb
imul
jb
gs
lods
add
gs
insb
inc
bound
je
add
gs
popa
insb
insb
outsl
arpl
sbb
inc
jb
addr16
jne
jb
inc
imul
push
je
inc
push
add
inc
gs
gs
imul
inc
jb
addr16
arpl
jo
inc
imul
jne
insb
imul
outsl
outsb
add
add
inc
jb
add
mov
push
push
gs
popa
addr16
outsl
js
add
push
dec
inc
dec
dec
xor
cs
insb
add
add
arpl
outsb
jbe
jb
inc
arpl
inc
arpl
jae
add
add
arpl
je
js
insb
imul
jb
gs
pop
add
arpl
outsb
jbe
jb
push
inc
push
outsl
inc
arpl
jae
add
or
inc
arpl
jb
gs
outsb
fs
jb
popa
jns
dec
push
dec
inc
push
push
inc
cs
insb
add
jae
push
push
popa
je
add
push
pop
push
dec
inc
dec
inc
cs
insb
add
ds
xchg
stc
std
lret
rolb
imul
ss
les
sub
push
mov
sbbb
xchg
xchg
adc
mov
mov
push
negl
test
in
cmp
xchg
and
lods
dec
lods
fisubrs
dec
jl
and
xchg
and
les
sbb
je
out
insl
jbe
adc
cmp
lods
stos
push
sub
imul
add
fsubrs
outsl
mov
add
scas
sub
aaa
arpl
sub
jb
inc
add
in
xchg
adc
add
sub
and
nop
insl
cmp
lcall
xchg
push
je
jo
popl
sbb
mov
loopne
movsl
les
dec
sti
xchg
xchg
xchg
test
jbe
xlat
outsb
push
ret
iret
movsb
ret
mov
jb
mov
sbb
dec
fcoml
pop
lds
adc
push
jne
dec
adc
scas
int
adc
sbb
add
cmp
cmpsl
add
ja
pop
fcmove
adc
test
and
pop
pop
leave
mov
dec
mov
fstl
mov
push
sub
xchg
incb
mov
and
push
dec
or
mov
idivl
push
adc
je
mov
mov
xor
sti
orl
xchg
lock
rcrl
nop
sbb
cwtl
clc
ljmp
and
icebp
jne
lcall
test
arpl
enter
xchg
das
dec
pop
pushf
xlat
es
gs
mov
xchg
rorb
xchg
push
lea
ret
lods
je
and
sbb
or
mov
adc
xlat
xchg
rolb
loop
dec
ds
cmp
insb
test
pop
add
add
add
add
xor
add
pop
add
add
add
add
add
jo
add
add
add
add
add
mov
add
mov
add
add
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
inc
add
test
add
clc
data16
test
add
mov
or
add
addl
add
mov
add
add
add
add
add
add
add
add
add
and
add
add
andb
add
imul
xchg
xchg
xchg
add
scas
lods
scas
xor
mov
mov
mov
mov
mov
mov
mov
mov
lods
stos
lods
mov
mov
fwait
pop
xchg
xchg
xchg
or
jle
jp
jl
lods
stos
lods
add
test
push
mov
mov
mov
les
into
int3
int3
rcl
in
rcl
shl
rcl
shl
into
into
int3
hlt
enter
leave
enter
mov
mov
mov
lods
lods
lea
cltd
cltd
and
jae
pop
add
add
add
add
add
add
add
add
add
add
add
add
mov
mov
and
mov
lret
rcl
sar
xlat
fdivr
xlat
fdivr
xlat
fdivr
aam
aam
iret
iret
iret
dec
into
int
aam
aad
rcl
sar
ret
vfmsub231pd
mov
iret
movsb
movsl
movsb
xchg
xchg
das
and
add
push
add
add
add
add
add
add
add
add
stos
stos
lods
add
scas
sbb
mov
jnp
mov
sar
mov
lret
call
iret
iret
aad
aam
xlat
call
xlat
call
aam
dec
into
int3
dec
into
int3
call
dec
int
mov
mov
mov
std
cmpsb
test
ljmp
pop
fs
or
add
aaa
add
add
add
pop
add
add
add
add
add
add
pop
pop
pop
add
inc
add
pop
add
push
or
inc
or
sbb
add
add
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
enter
int
call
rcl
call
call
fcomp
call
aad
dec
into
into
dec
lret
int3
into
int3
inc
mov
mov
mov
mov
test
test
mov
fwait
cltd
jmp
and
and
add
inc
add
add
add
add
add
and
add
push
add
add
add
add
pop
pop
pop
add
popa
or
push
bound
fs
sbb
push
sub
push
xor
aaa
cmp
cmp
and
adc
push
pop
pop
add
add
add
add
arpl
mov
or
mov
xlat
mov
mov
mov
sarl
leave
leave
dec
iret
iret
call
aad
call
aad
call
iret
sar
enter
inc
mov
mov
ljmp
movsb
movsb
sahf
sahf
popf
xchg
xchg
xchg
lcall
addl
add
add
add
cmp
add
das
add
add
add
add
add
adc
add
or
add
add
jo
jge
jl
jg
jle
jno
jno
arpl
mov
cmp
inc
mov
outsb
outsl
outsb
nop
arpl
pusha
inc
inc
inc
xor
add
add
add
add
mov
mov
inc
mov
mov
mov
mov
mov
mov
mov
dec
enter
leave
leave
dec
leave
leave
dec
leave
inc
ret
mov
mov
ljmp
movsb
movsl
lcall
xchg
xchg
xchg
xchg
xchg
cwtl
cwtl
xchg
fwait
fwait
cltd
in
addb
push
push
or
add
add
add
add
add
add
add
add
add
add
add
jo
outsl
add
pop
or
jp
nop
fcoms
test
jnp
jnp
jnp
jnp
outsl
jo
out
push
push
ret
jge
js
js
gs
inc
inc
cmp
pop
sbb
adc
prefetch
lods
stos
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
test
cmpsl
lcall
xchg
incl
addb
xchg
xchg
xchg
sahf
sahf
lahf
sti
mov
xchg
cwtl
mov
jns
jns
cs
das
add
add
add
add
add
add
add
add
add
add
mov
push
push
addl
in
mov
mov
addb
decb
mov
jle
jge
jb
jo
je
jae
jle
jle
test
jl
pushw
cmp
cmp
and
jle
cmp
mov
stos
test
sti
lods
lods
lods
lods
lods
lods
test
movsl
movsb
std
lcall
decl
jg
jp
jns
jl
jp
xchg
cwtl
movsb
movsb
movsl
scas
mov
sti
mov
mov
mov
mov
mov
scas
scas
stos
test
sbb
or
add
add
add
add
add
add
pop
pop
adc
mov
mov
xchg
nop
xchg
incl
xchg
mov
xchg
std
xchg
cwtl
xchg
stc
xchg
xchg
xchg
in
mov
or
addb
xchg
pop
push
femms
xor
inc
dec
insb
insb
insb
jl
xchg
leave
cltd
cltd
fistps
cltd
fwait
stc
std
mov
mov
xchg
mov
lea
cltd
jmp
lods
mov
mov
mov
mov
mov
std
mov
mov
movsb
movsb
movsl
addr16
jl
scas
cmpsl
stos
add
adc
cmpsl
scas
call
lcall
incl
mov
xchg
xchg
xchg
sahf
sahf
popf
std
movsb
mov
mov
in
nop
in
xchg
push
jne
push
cmovp
add
inc
or
or
daa
daa
es
dec
dec
dec
data16
jb
xchg
xchg
rclb
xchg
std
nop
decb
xchg
lcall
movsl
cmpsb
ljmp
cmpsl
lods
pushl
lahf
mov
mov
xchg
mov
mov
ljmp
lahf
adc
add
add
pop
adc
mov
jmp
sahf
xchg
fwait
decl
mov
call
nop
xchg
xchg
xchg
popf
sahf
popf
movsb
mov
stos
movsl
mov
xchg
fstpt
movsl
push
push
push
outsl
dec
dec
dec
popaw
pusha
bound
jae
mov
lahf
test
mov
lea
xchg
testl
mov
jmp
mov
mov
pop
mov
ss
mov
jbe
mov
movsl
mov
mov
stos
lods
mov
movsb
movsb
add
pop
pusha
adc
mov
ljmp
sahf
decl
nop
call
xchg
xchg
call
xchg
fwait
lcall
lahf
mov
movsb
std
mov
cwtl
lcall
xchg
xchg
les
cltd
lcall
lea
stc
xchg
test
std
xchg
jb
lcall
jmp
inc
jge
mov
jp
mov
jb
mov
insl
ljmp
adc
stos
or
ljmp
aas
jge
mov
mov
lods
pushf
movsl
movsb
movsl
and
add
add
mov
add
pop
adc
mov
lcall
xchg
xchg
call
lcall
sahf
mov
sahf
lcall
xchg
cwtl
call
xchg
xchg
call
xchg
fwait
cld
cwtl
xchg
sahf
stc
sahf
fwait
sahf
stc
sahf
xchg
pushf
cld
pushf
xchg
xchg
push
xchg
pop
jg
cwtl
dec
js
fwait
cmp
fwait
sub
popf
and
mov
push
jmp
ljmp
pcmpgtw
lods
adc
scas
adc
mov
imul
mov
insl
mov
fwait
scas
mov
scas
lods
scas
movsl
mov
movsb
add
add
add
add
mov
pop
pop
adc
mov
ljmp
pushf
call
popf
lcall
movsl
mov
jmp
xchg
xchg
decl
mov
decl
jbe
cltd
jb
cltd
arpl
call
sub
decl
adc
or
call
add
fwait
add
sahf
add
push
pushl
push
jo
mov
outsb
mov
and
mov
and
rolb
ret
mov
scas
lods
mov
mov
movsl
mov
add
add
add
pop
pop
adc
lods
mov
shlb
lcall
movsl
ljmp
cmpsb
cmpsb
ljmp
cmpsb
test
fwait
pushf
sahf
decl
pop
ja
mov
decl
arpl
mov
pusha
decl
or
push
incl
add
mov
pop
decl
add
lcall
ljmp
push
outsb
pushl
sub
mov
sub
inc
sub
sub
enter
xor
dec
scas
inc
mov
mov
mov
mov
movsl
add
push
push
adc
test
mov
sahf
lcall
stos
stos
test
ljmp
mov
lods
lods
scas
jmp
mov
mov
pop
incl
pop
push
incl
add
test
push
incl
push
decl
add
xchg
add
cltd
add
mov
add
scas
adc
mov
cmp
inc
cmp
dec
cmp
call
cmp
mov
rorb
dec
mov
std
mov
mov
mov
mov
mov
add
add
add
dec
dec
adc
mov
mov
mov
test
ljmp
mov
pushl
mov
mov
mov
stos
stos
lods
lcall
es
incl
adc
xchg
push
decl
or
test
push
incl
add
add
xchg
add
popf
add
mov
add
lods
add
mov
jo
ret
cmp
dec
inc
call
inc
mov
rorb
call
dec
xchg
fmuls
fimull
fisttpll
fsts
call
test
std
mov
mov
movsl
mov
sahf
or
add
add
add
add
dec
dec
adc
jl
mov
test
popf
ljmp
mov
pushl
mov
pushl
mov
mov
movsl
xchg
decl
popa
call
adc
pop
decl
push
decl
add
pushf
add
mov
add
stos
add
mov
gs
mov
dec
nop
call
push
cltd
call
push
lcall
push
pushf
fists
fistps
jmp
pop
mov
jmp
pop
mov
dec
mov
mov
jne
lahf
sahf
or
cwtl
xchg
cwtl
add
adc
ja
lahf
lcall
sahf
lcall
mov
mov
mov
mov
mov
mov
mov
ljmp
inc
jne
xchg
and
and
call
call
or
xchg
add
add
lcall
jmp
add
mov
fs
mov
xor
fldenv
fbld
jmp
bound
in
cmpsl
call
imul
faddl
mov
test
mov
mov
add
add
add
xchg
xchg
xchg
add
inc
inc
adc
jb
cltd
xchg
lcall
popf
sahf
ljmp
mov
pushl
mov
mov
mov
mov
jg
xchg
sub
lcall
call
sbb
pop
call
add
mov
add
stos
add
mov
pushw
adc
roll
fldt
jmp
outsl
stos
jmp
outsl
lods
call
jae
in
jae
in
jne
out
jbe
in
jne
in
jb
jmp
mov
mov
test
lcall
sahf
add
add
imul
mov
lcall
mov
mov
mov
mov
mov
mov
mov
movsl
lods
lcall
xor
mov
aaa
jae
mov
push
callw
add
sahf
add
add
stos
add
mov
arpl
mov
fs
mov
sbb
fistl
jmp
ja
jmp
jg
in
jg
in
cmpl
push
test
push
cmpl
call
mov
mov
stos
stos
cmpsl
popf
pushf
popf
daa
lahf
mov
lahf
add
add
add
add
ss
pop
pop
push
jne
jg
out
test
xchg
xchg
xchg
pushl
mov
mov
mov
inc
mov
lcall
cmp
inc
jle
movsl
inc
jg
movsb
cmp
fwait
pop
call
add
movsl
add
add
lods
add
mov
fs
mov
add
iret
and
mov
in
mov
push
mov
push
xchg
ret
xchg
ret
nop
xchg
push
xchg
push
pop
out
pop
fidivl
ret
clc
lods
lods
test
xor
popf
sahf
add
add
add
aas
add
xor
push
inc
dec
inc
jb
pop
dec
in
imul
mov
mov
mov
mov
mov
inc
ret
ret
mov
mov
jge
lcall
jg
stos
dec
test
movsb
xor
pusha
lcall
add
test
pop
ljmp
add
add
mov
add
mov
out
mov
out
xchg
ret
push
lcall
hlt
lcall
negb
cld
sahf
int
cld
lahf
into
cld
cwtl
leave
push
xchg
sar
mov
enter
mov
lahf
sahf
mov
add
add
add
xor
or
cmp
outsb
push
dec
dec
jecxz
pop
popa
decl
mov
mov
mov
sar
ret
inc
enter
mov
lahf
jmp
push
mov
scas
dec
xchg
mov
push
pop
lcall
add
add
mov
popa
mov
add
enter
rorb
jne
filds
out
mov
push
movsl
int3
push
movsl
into
push
cmpsl
into
cli
cmpsl
iret
cli
movsl
into
cli
test
cld
stos
sar
std
test
sar
negb
lret
dec
enter
mov
into
mov
xchg
xchg
add
lcall
xor
xor
daa
sub
or
bound
pop
xlat
je
jo
mov
sarl
mov
ret
ret
inc
mov
leave
enter
rol
mov
cmpsl
jmp
mov
lods
dec
xchg
mov
add
mov
add
mov
fs
mov
add
int3
add
fadds
jae
fists
jl
out
pop
cmpsl
push
lahf
leave
cld
scas
sar
cld
mov
sti
mov
cld
mov
std
mov
cld
mov
cld
mov
mov
pushl
sar
mull
call
leave
int3
mov
mov
sahf
mov
xchg
or
add
add
sbb
outsl
jo
mov
aam
jmp
fcomp
test
int3
int
lret
lret
lret
leave
lret
dec
lret
mov
scas
jmp
push
mov
lods
jle,pt
sahf
punpcklwd
mov
add
mov
arpl
mov
add
iret
add
fadds
jb
filds
jae
call
jno
cli
scas
aam
cld
mov
fcos
cld
mov
fcos
mov
fdivr
std
mov
fdivr
inc
mov
int3
call
leave
into
mov
mov
xchg
or
add
add
xor
add
pop
pop
pop
or
mov
pop
call
call
loope
fsubp
fucom
fdiv
fcomp
xlat
cli
xlat
xlat
std
int
sar
mov
push
ljmp
sub
mov
add
mov
arpl
mov
add
leave
add
aad
jae
faddl
ja
jecxz
jbe
in
xor
cli
mov
loope
inc
loopne
inc
loope
inc
fdivrp
inc
inc
loopne
std
leave
fdivrp
std
enter
fdivrp
dec
loopne
cld
mov
leave
fmul
sar
mov
mov
xchg
adc
add
add
std
add
incl
incb
repnz
testb
out
jmp
in
in
in
sub
in
out
dec
jmp
jmp
jmp
aad
jmp
mov
xchg
test
ja
movsl
push
jmp
add
mov
mov
add
int
insl
call
add
add
jmp
inc
fwait
sti
mov
in
cld
int3
loop
dec
in
dec
in
std
into
loop
dec
loope
std
into
loopne
std
shl
std
iret
loop
call
in
shl
sti
ret
out
mov
inc
ret
cmpsb
cmpsl
test
xchg
xchg
xchg
sbb
lcall
std
std
std
add
std
std
add
idiv
add
repnz
add
repz
push
out
repnz
in
lock
cmp
out
in
pop
fsubp
loope
mov
xchg
sti
mov
pop
pop
jmp
pusha
pushl
add
enter
roll
jo
fiaddl
jne
in
jp
jmp
jge
negl
cld
mov
cld
iret
in
cld
iret
in
call
call
std
shl
call
call
std
call
std
fucomi
fldl2t
shl
push
aad
in
leave
lret
lret
repz
xchg
xchg
and
xchg
xchg
add
std
cli
add
cld
stc
add
sti
clc
add
div
or
shlb
sarb
negb
add
cmpsl
add
scas
add
mov
add
leave
add
rolb
jb
fldl
jbe
out
js
out
sbb
sti
ret
fsubr
fucomi
std
fldpi
std
fucomp
fucomp
fucomi
jmp
jmp
fsubrp
fucomip
std
aam
push
ret
jmp
aam
dec
rcl
clc
stos
stos
lods
lods
xchg
xchg
xchg
jo,pn
jo
xchg
xchg
xchg
add
loopne
add
leave
sbb
lods
jnp
repnz
and
sahf
add
add
mov
mov
add
into
add
aam
jb
loopne
je
ljmp
cli
nop
std
shl
fsubrp
fsubr
fldpi
call
std
shl
cld
shl
sti
shl
push
into
fdivrp
clc
int
push
ret
in
mov
fcomp
fdivr
mov
mov
lcall
add
add
add
add
mov
subb
push
mov
add
mov
fs
mov
add
iret
add
add
loope
jns
ljmp
cli
cwtl
sti
enter
lret
loop
cli
idivl
aad
repnz
into
push
mov
int3
jmp
mov
iret
std
call
call
fnstsw
in
mov
mov
xchg
add
add
add
int3
int
mov
sarb
mov
add
test
pop
pushl
add
les
imul
rorl
jbe
fsts
ja
loop
cmp
dec
xchg
call
mov
call
mov
std
loopne
cld
fbstp
neg
mov
lret
fmul
iret
into
xlat
shl
xlat
fadd
out
loopne
in
out
test
out
out
popf
jmp
leave
leave
push
lods
lods
lods
adc
cmpsl
test
add
ret
mov
ret
ret
pop
mov
stos
aam
dec
jg
pushf
sbb
cmpsb
sbb
jb
mov
ja
mov
dec
xchg
les
stc
leave
gs
mov
out
mov
mov
enter
int
rol
int3
mov
int
mov
fcom
aam
fcmovnu
fnstenv
gs
in
out
out
jmp
cmc
hlt
sub
div
and
repnz
fcmovnu
or
mov
into
add
add
add
roll
mov
les
imul
mov
fwait
in
mov
sarb
stos
mov
ret
mov
cmpsl
enter
lret
ret
int
lret
jp
int3
shlb
iret
iret
push
rcl
rorb
fcom
inc
aam
aam
fcmovu
daa
fcomp
ficompl
fstl
fsub
loope
loope
jecxz
call
icebp
out
add
cli
testl
incl
incl
mov
mov
shrb
mov
mov
mov
scas
xchg
mov
mov
mov
mov
ret
push
rol
inc
rol
xor
int3
lret
daa
int3
rcl
and
rcrl
iret
aad
adc
aam
or
aam
aam
xlat
add
fstp
add
loopne
add
in
add
in
jmp
leave
aam
std
std
add
mov
add
ret
ret
mov
mov
mov
mov
push
rol
or
leave
movb
leave
movl
leave
aad
add
fcom
add
aam
aad
aam
aam
add
add
fildl
loop
fstp
loopne
in
out
icebp
lock
std
add
std
incl
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
sarb
ret
mov
mov
mov
ja
stos
test
and
add
add
add
add
add
add
add
add
mov
push
sarb
aam
iret
shr
aad
shl
aam
sar
into
into
into
cli
int3
lret
lret
stc
lret
hlt
mov
mov
iret
stos
lods
stos
fwait
xchg
xchg
xchg
dec
ds
aas
and
add
sbb
add
adc
add
push
add
add
addb
add
push
push
add
add
add
add
add
add
add
add
add
mov
mov
mov
leave
cld
ror
sar
aad
call
aad
dec
rcl
dec
into
iret
dec
int3
lret
mov
mov
cld
stos
lods
stos
icebp
cltd
cwtl
xchg
mov
or
or
add
add
add
add
add
add
add
add
add
add
jne
jne
jne
jne
gs
inc
dec
inc
cmp
sub
sub
ss
xor
dec
sub
inc
adc
sub
push
add
add
mov
mov
mov
mov
mov
mov
ret
dec
lret
lret
rcl
call
rcl
dec
int3
int3
inc
mov
mov
ljmp
sahf
popf
cwtl
xchg
cwtl
jmp
jno
xchg
adc
add
xor
add
add
add
add
jg
addb
jnp
test
jns
imul
movsb
push
push
push
stos
imul
push
pop
pop
cmp
aaa
cmp
outsl
jo
adc
mov
mov
ret
mov
mov
mov
mov
jmp
fwait
pushf
call
xchg
fwait
lcall
dec
dec
dec
dec
adc
adc
add
add
add
add
add
pop
cltd
fwait
lcall
xchg
cwtl
fcoml
addb
jl
jnp
js
js
jnp
jnp
jns
jns
jae
je
push
push
push
cmp
aaa
pushf
pushf
pushf
mov
scas
scas
repz
lods
scas
sti
scas
lods
scas
std
test
test
popf
pushf
sahf
call
xchg
call
mov
lods
jmp
scas
scas
leave
cmpsb
movsl
movsl
cltd
jae
je
adc
adc
add
add
add
add
outsb
outsl
outsl
pop
mov
loop
cltd
pushf
incl
mov
sti
xchg
xchg
xchg
lock
xchg
fimuls
mov
jp
and
inc
inc
inc
inc
dec
outsb
jo
orl
lcall
mov
call
popf
lahf
ljmp
stos
mov
mov
scas
mov
mov
mov
cmpsl
movsb
cmpsb
pop
addl
add
popa
pop
pop
or
lods
mov
cmpsb
sahf
mov
decl
call
sahf
mov
negl
jg
stos
push
push
push
jo
pop
pop
outsl
insl
outsb
outsl
xchg
subb
xchg
lock
mov
lcall
mov
mov
xchg
mov
push
mov
mov
mov
out
scas
lods
insl
stos
stos
stos
or
add
add
add
add
pop
or
mov
in
mov
xchg
call
xchg
lcall
cltd
lcall
sahf
sahf
cli
xchg
xchg
cwtl
jmp
xchg
mov
jecxz
orb
xchg
push
cld
xchg
pop
cmp
dec
jnp
mov
ss
mov
je
scas
pop
insl
ljmp
sbb
mov
mov
mov
jle
movsl
movsb
push
pop
pop
pop
or
mov
in
movsl
test
lcall
mov
mov
decl
addl
cld
xchg
pop
cmp
dec
js
nop
cmp
xchg
daa
call
lcall
punpckldq
test
sbb
mov
insb
pushl
pop
jno
mov
pop
mov
scas
scas
xchg
lahf
lahf
popf
adc
add
add
pusha
pop
pusha
or
stos
mov
stos
mov
lahf
ljmp
stos
test
lcall
pop
jns
mov
imul
sub
push
pop
incl
or
mov
push
decl
add
pushf
add
cmpsl
or
mov
jae
mov
das
jl
les
jle
enter
lret
xor
dec
pop
xchg
inc
stos
mov
mov
scas
movsb
test
cmpsl
sbb
add
add
pop
popa
popa
or
movsl
test
jmp
mov
pushl
mov
jmp
jb
mov
pop
decl
or
xchg
decl
add
xchg
add
sahf
add
add
mov
outsb
inc
cmp
rolb
call
inc
call
inc
xchg
flds
call
popa
lahf
inc
cmpsl
mov
mov
movsb
mov
add
add
add
popa
or
sahf
mov
ljmp
mov
pushl
mov
stos
lcall
pop
arpl
xchg
sbb
decl
or
push
call
pop
ljmp
add
mov
dec
nop
fsts
fcompl
ficomps
jmp
pop
mov
jmp
outsb
cmpsl
dec
cmpsl
mov
ret
cmpsb
xor
addl
dec
dec
dec
pop
jge
jnp
pushf
xchg
cwtl
jecxz
mov
scas
pushl
mov
mov
jmp
cs
lcall
and
call
pop
lcall
add
scas
add
push
push
fisubl
jmp
insb
test
out
lods
ljmp
out
jno
jmp
cmpsl
mov
shll
jg
add
add
add
dec
pop
outsb
outsb
insb
bound
cwtl
xchg
pushl
mov
mov
mov
jne
lcall
cmp
pushf
sub
lcall
add
mov
add
mov
fs
or
xchg
jmp
js
jmp
mov
push
xchg
cmc
xchg
fldcw
mov
push
fwait
cltd
fwait
add
sub
sub
push
push
dec
pop
gs
loopne
mov
mov
mov
mov
xchg
ljmp
sub
lcall
ljmp
add
mov
adc
jmp
pop
mov
push
xchg
ret
push
cltd
push
cwtl
clc
fwait
enter
lret
clc
xchg
jmp
stos
inc
mov
lods
popa
lahf
lahf
lahf
or
add
add
xor
inc
pop
pop
pop
pop
fisttpl
mov
mov
rol
inc
pushl
pop
xchg
stos
dec
cmp
and
mov
add
mov
mov
add
fsubs
cmp
hlt
mov
sar
stc
test
iret
sti
lods
sar
std
stos
sar
stc
cmpsb
int
out
inc
rol
stos
stos
stos
jne
popf
pushf
or
add
add
dec
push
dec
aaa
jae
jb
test
int3
into
out
into
int3
cmc
lret
sti
enter
mov
mov
popa
mov
stos
inc
jle
mov
add
mov
fs
add
iret
add
fiaddl
je
ljmp
sti
mov
cld
mov
cld
mov
sti
mov
xlat
sti
mov
jmp
rol
scas
lods
scas
mov
add
add
add
add
pop
or
aam
dec
loop
fsubp
loope
fadd
fcmovu
fcomp
out
shlb
cmpsl
jb,pn
movsl
pop
pop
ljmp
add
lret
call
add
or
repnz
mov
sti
ret
loopne
inc
loop
dec
dec
fdivrp
dec
std
lret
std
fdivr
out
mov
lret
divb
sahf
popf
sbb
add
add
incl
std
std
incb
jmp
in
sbb
in
in
xor
loop
loop
les
mov
mov
add
pushl
imul
fildl
je
call
insb
mov
std
fdivrp
sti
shl
call
out
std
shl
shl
xlat
out
fsubr
cld
aam
push
fcos
fcmovne
sar
mov
mov
and
add
add
std
add
std
incl
cld
cld
cld
pop
aam
push
mov
pop
xchg
lahf
or
pusha
pushl
add
rolb
outsl
fiadds
ja
in
and
cld
shl
std
fsubr
cld
xlat
out
cld
fsub
std
shl
push
jmp
rcl
sti
mov
popf
sahf
das
add
add
into
int3
int3
or
fs
mov
add
mov
add
roll
jno
loope
jns
in
xor
cli
int
cli
lret
fdivrp
test
bnd
repz
out
ret
aam
in
in
aam
in
shl
in
fucomp
enter
stos
stos
stos
das
std
incl
aad
push
mov
je
or
imul
pop
jae
lret
and
sub
lcall
mov
out
loop
lret
jmp
fnstsw
lret
sarb
in
fistpl
out
out
jns
rcl
dec
mov
add
add
mov
inc
scas
xchg
mov
ljmp
fidivrl
jle
rol
stos
mov
mov
ret
ror
rol
int
aad
int
rcl
iret
dec
fnstcw
fnstsw
loopne
jecxz
fisubs
jecxz
lock
in
jmp
fiaddl
std
add
add
add
std
incb
mov
mov
outsb
scas
mov
scas
mov
push
mov
mov
shrb
mov
pop
rol
adc
rcl
or
loopne
or
int
add
incb
std
std
add
add
add
into
into
pextrw
or
int3
int
add
incb
add
add
push
add
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
fwait
lcall
rol
mov
xchg
enter
enter
rol
mov
mov
scas
insb
stos
stos
stos
xor
je
add
add
add
add
add
add
add
add
add
add
add
add
stos
lods
stos
add
mov
enter
sar
aam
std
rcl
sar
iret
into
into
std
mov
mov
cmpsl
cmpsl
test
gs
sbb
add
add
add
add
add
add
add
add
jb
jae
data16
inc
inc
das
sub
inc
inc
and
add
add
mov
mov
cmpl
ret
dec
into
int3
call
aad
dec
iret
int
enter
mov
lods
jmp
mov
push
add
add
add
add
jae
je
xchg
adc
jo
ret
bound
outsb
insl
outsl
jb
popa
pusha
cmp
pusha
sbb
mov
in
mov
mov
mov
stos
lods
lcall
xchg
xchg
lcall
cltd
xchg
lds
jno
and
add
pop
add
add
jae
jae
pushf
xchg
lcall
test
clc
mov
or
addl
push
push
dec
inc
mov
pushf
into
mov
mov
xchg
decb
mov
pushf
pushf
fwait
ljmp
mov
in
mov
mov
xchg
xchg
xchg
aas
sub
push
add
add
xorb
lods
mov
test
mov
mov
xchg
xchg
xchg
cld
pushf
pushf
popf
cmc
cwtl
lcall
push
push
push
imul
jge
xchg
aam
lea
fwait
mov
pushl
xchg
mov
test
call
stos
stos
stos
add
add
add
test
test
xchg
xchg
xchg
lcall
lcall
cwtl
cltd
cltd
std
xchg
xchg
xchg
out
xchg
mov
loope
je
out
xchg
bound
std
pushf
inc
jne
movsl
cmp
scas
sub
pushl
sbb
aaa
jnp
mov
mov
imul
int3
add
xchg
pop
lods
movsb
stos
test
lahf
pushf
popf
jmp
cmpsb
call
push
decl
inc
jb
lea
imul
sbb
call
or
mov
sbb
mov
es
shrl
inc
ds
rcrl
subl
jae
push
movsb
popf
lahf
test
test
scas
mov
mov
mov
lahf
xchg
decl
or
xchg
push
decl
add
mov
adc
ret
dec
ds
roll
call
inc
mov
push
xchg
dec
lcall
mov
add
add
imul
cmpsb
lahf
mov
pushl
mov
ljmp
aaa
outsl
call
pop
pop
decl
add
mov
add
mov
push
xchg
fistpl
fistps
jmp
pusha
movsl
jmp
data16
call
fwait
mov
test
test
pop
add
add
popa
arpl
mov
fwait
cld
mov
scas
mov
mov
mov
popf
dec
jle
fwait
xor
cltd
and
xchg
or
mov
add
mov
xor
jmp
jl
out
jl
push
jle
ficompl
mov
and
add
add
dec
adc
addr16
mov
mov
mov
mov
ret
ret
mov
bound
lcall
add
pusha
pushl
or
fisttpl
in
lea
push
xchg
xchg
leave
stc
xchg
jmp
cmpsb
mov
movsb
movsl
sub
inc
aas
aas
adc
push
xchg
xchg
mov
inc
ret
inc
mov
xchg
ljmp
sbb
movsl
add
mov
gs
add
adc
in
insb
scas
push
cmpsl
into
stc
stos
iret
sti
lods
sar
std
scas
sar
lods
iret
jmp
leave
inc
mov
movsb
ds
incl
xor
xor
scas
mov
mov
mov
aad
fnop
rcl
out
lret
enter
xchg
jmp
add
ret
add
aam
jb
call
mov
std
mov
fdivr
std
ret
std
ret
cld
ret
out
mov
ret
in
cmpsl
test
add
add
add
jmp
or
jmp
in
outsb
fcomp
mov
add
mov
add
fiadds
push
cmp
cld
int
std
iret
in
std
shl
shl
shl
push
fdivr
aad
int3
in
lods
scas
scas
popa
addb
add
std
add
incl
int
shrl
sahf
sbb
stos
add
mov
add
jecxz
jp
hlt
push
movsl
cld
loop
call
std
aad
std
shl
sti
shl
push
xlat
fmul
shl
mov
mov
xchg
xchg
xchg
pop
ret
adc
mov
push
arpl
mov
or
cmp
out
mov
aam
jmp
mov
shl
out
aad
jmp
scas
fwait
fwait
add
mov
sahf
lods
xchg
dec
and
push
mov
ret
int3
lret
jbe
mov
fdivrs
lret
adc
int
fmul
rcrb
rcl
dec
in
loopne
call
out
out
sbb
sarb
cmp
movsb
lods
arpl
stos
mov
ret
mov
lds
int3
sbb
bswap
into
int3
or
aad
push
std
incl
jg
jg
std
std
add
add
add
roll
std
add
std
incl
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
xor
fwait
loope
int
mov
xchg
and
sbb
mov
xchg
cmp
lds
adc
lock
test
lret
ja
push
push
call
mov
fbstp
cmp
xor
push
add
loope
push
xchg
test
lret
sti
jge
loopne
sbb
rorl
incb
outsl
pop
icebp
mov
sarl
je
cmp
mov
dec
cltd
sbb
ja
mov
xchg
lahf
or
sbb
icebp
pusha
adc
inc
mov
pop
lock
add
in
mov
push
call
or
and
pop
mov
mov
cmpsl
ds
imul
add
mov
push
montmul
cmpsb
xchg
add
fiaddl
mov
sti
dec
loop
lcall
jg
pop
repnz
jns,pt
jo
movsl
cmp
xchg
xchg
les
pop
jns
mov
pop
fwait
loope
int
shrl
test
lods
xchg
adc
enter
sbb
aam
fsubrs
idiv
xchg
daa
push
lea
adc
out
pop
xor
dec
repnz
push
call
inc
mov
add
inc
mov
lods
inc
xchg
mov
mov
ficomps
adc
call
xchg
arpl
popf
pushf
test
mov
lods
and
cmp
pop
add
lret
push
in
pop
push
push
call
adc
outsb
add
sub
inc
fidivrl
stos
inc
or
pop
popf
or
cmp
out
lock
jle
adc
xor
arpl
mov
xor
push
fnstenv
xchg
pop
test
in
sbb
aad
das
sub
lcall
and
ror
aas
add
cmpsl
ds
pop
hlt
push
inc
lds
popa
clc
jns
cmpsl
mov
rol
pop
add
sahf
jl
jecxz
pop
popf
and
cwtl
stos
out
inc
mov
frstor
mov
decb
mov
push
popa
sub
pop
mov
mov
int
ljmp
es
xor
insb
negb
mov
dec
dec
out
ss
into
data16
push
in
mov
fidivl
or
cmpb
out
pushf
pop
sahf
int
insl
add
out
and
and
inc
fidivl
test
clc
les
pop
stos
in
push
pop
int3
in
cmp
fwait
push
mov
mov
adc
inc
xlat
cmc
xor
mov
pop
testb
lods
mov
jge
lcall
xor
sub
pop
push
inc
jp
push
lods
fsubrs
int
and
mov
out
lods
inc
push
or
popa
movsl
pop
xor
mov
call
call
dec
outsl
push
xor
popf
push
lea
mov
stos
inc
adc
inc
test
pop
xchg
dec
out
jl
sahf
xor
into
or
mov
popl
fdivs
stc
nop
loop
pop
test
sbb
pop
push
ss
cmp
jmp
mov
or
xlat
outsb
adc
daa
xorb
mov
inc
roll
int3
arpl
fdivs
enter
cmpl
or
scas
in
es
add
test
stc
ret
jbe
pop
test
adcb
lret
cld
aaa
sahf
xor
dec
mov
mov
ret
repz
bound
testb
lods
mov
jge
cwtl
aad
lret
push
mov
push
jmp
aas
jns
pop
lods
in
mov
mov
jg
jno
in
push
sbb
test
jbe
andl
add
push
cmp
sub
adc
arpl
je
inc
test
je
jns
or
cmpsl
test
inc
ficoms
je
mov
je
inc
test
jne
jecxz
or
push
movsl
scas
add
inc
jle
cmp
js
fildll
cwtl
das
cmpsl
sarl
dec
jmp
jno
pop
push
mov
xchg
leave
sub
movsb
cmc
and
popl
fsubrs
push
push
hlt
mov
stc
nop
inc
push
es
inc
ficoms
mov
add
lods
stos
inc
fiaddl
mov
xor
leave
pusha
sub
inc
fistl
cli
pop
imulb
add
mov
sub
mov
jnp
hlt
call
sbb
popa
clc
xor
xchg
sub
cwtl
sbb
aas
or
hlt
mov
mov
loope
jno
sbb
or
clc
jmp
aaa
into
pop
adc
inc
lret
adc
add
dec
loopne
sbb
xchg
sti
fiaddl
sahf
or
test
jge
mov
mov
fistpl
mov
cmp
shrb
fimull
ja
jmp
outsl
push
or
pop
jne
in
push
mov
xchg
sub
jb
adc
ror
hlt
mov
inc
int
jbe
cli
xchg
pop
mov
ds
inc
cmp
jno
es
fdivl
push
out
jns
cld
xchg
insl
mov
nop
in
test
icebp
xor
jb
sub
rorb
hlt
int3
js
add
ret
pop
inc
shrl
rorb
jp
adc
mov
add
adc
aad
add
sarb
hlt
mov
add
jle
hlt
pop
hlt
sub
sti
xchg
adc
pop
hlt
and
movl
cmp
or
fnstenv
sbb
stos
push
jecxz
dec
adc
adc
jns
sub
je
out
mov
add
lea
adc
xchg
inc
out
or
or
fs
inc
sbb
push
add
mov
adc
jbe
push
sarl
aaa
repz
jae
and
jecxz
fisubrl
or
mov
sti
sbb
lcall
xchg
sub
mov
mov
push
xor
mov
shl
add
arpl
push
mov
lods
xchg
push
test
int
stos
fs
fsts
mov
test
mov
ja
jne
pop
test
scas
inc
lahf
push
hlt
mov
xchg
stos
inc
ret
mov
jg
fidivs
mov
aad
jno
out
sub
repnz
mov
fsubrs
pop
das
movb
andb
xchg
mov
push
out
in
mul
jnp
adc
sbb
shr
xchg
cwtl
mov
jg
ljmp
cmp
pushf
xor
out
jbe
jmp
loope
cmp
xchg
insb
add
mov
out
mov
pop
add
pusha
divl
ljmp
and
dec
loopne
sti
mov
sub
out
xchg
mulb
es
stos
inc
ss
mov
xchg
sbb
jbe
pop
or
je
add
xor
push
out
adc
fnstenv
adc
mov
add
cltd
xor
into
gs
adcb
adc
je
loopne
test
or
mov
jne
push
lods
pop
lods
jmp
loope
sub
cmp
push
call
nop
stos
out
fisttpl
mov
mov
loope
sbb
shrb
popf
xor
mov
lret
loope
stos
xor
bound
jle
mov
jns
stos
xor
lret
aas
mov
jp
and
xor
push
cli
cmpl
dec
fsubrp
xchg
outsl
adc
shlb
or
mov
fsubl
add
mov
cmp
mov
leave
xchg
xor
shlb
addr16
pop
jo
add
push
push
push
pop
push
xchg
push
pop
test
mov
mov
inc
pop
sub
push
movsl
pop
dec
test
mov
fnstenv
cli
pop
xor
lods
std
push
shrb
sbb
cmc
mov
outsl
mov
mov
mov
aam
test
mov
movsl
cmp
rcrb
sbb
movsb
mov
ja
xor
xor
push
inc
pop
mov
dec
fs
shr
fstpt
jo
cs
out
push
ret
dec
jnp
and
sbb
gs
mov
sbb
fimuls
push
data16
pop
hlt
test
mov
mov
jns
imul
lahf
sub
shlb
mov
push
pop
pop
repnz
ficompl
mov
mov
sbb
jno
mov
mov
jle
fisubrl
jb
push
mov
les
jl
sbb
push
mov
das
mov
rorb
push
lahf
into
lds
mov
add
stos
in
mov
mov
or
sbb
lcall
imul
scas
push
out
test
stos
pop
loopne
insl
loop
je
fiadds
inc
inc
lret
add
and
into
outsl
es
gs
sbb
xor
ret
cld
test
and
rorl
out
inc
pop
jb
inc
mov
jns
xchg
fsubl
xchg
dec
push
into
push
cmp
subb
jl
repnz
loopne
add
loope
rcrb
inc
fdivl
les
sub
lret
and
pop
lret
sarl
push
lods
adcb
cmpsl
in
mov
push
jbe
mov
stos
xlat
cmp
pop
mov
push
dec
scas
ss
and
ss
sbb
cs
mov
sub
mov
add
dec
and
sbb
jg
repnz
sbb
sub
pop
ja
xchg
mov
fisubl
hlt
sub
and
stos
aas
mov
in
ret
imul
mov
inc
pop
addr16
dec
dec
inc
loopne
cmp
cmp
push
inc
les
dec
into
pop
test
jne
dec
and
hlt
push
pop
scas
xchg
add
or
push
fisttpl
test
out
add
jecxz
cmpsb
cmc
rorb
jecxz
lret
out
pop
xor
xchg
arpl
push
mov
test
out
xchg
xor
xchg
mov
bound
adc
cmpsl
mov
shll
int3
test
or
dec
and
cwtl
hlt
xor
pop
movsl
test
in
insl
xchg
dec
pop
push
xor
daa
cmpb
xor
sbb
sub
jge
sbbb
mov
sbbb
int
aad
addr16
out
mov
mov
icebp
dec
lcall
mov
aad
mov
sbb
call
jno
into
xor
mov
jo
mov
add
loop
mov
pop
cmp
mov
ljmp
sarb
pop
loopne
inc
out
jno
lret
gs
sbb
rorb
inc
sbb
cmp
lahf
imul
push
xor
adc
sbb
movsl
jo
xor
and
push
daa
cmp
fs
in
in
mov
xchg
cs
mov
popa
mov
cmp
imul
call
in
xchg
inc
jns
jnp
sub
aaa
mov
arpl
outsl
subl
dec
cmp
xor
lahf
dec
sarl
sub
jge
fbstp
sahf
add
iret
sar
mov
add
add
scas
cwtl
lahf
gs
lret
mov
jae
loope
inc
xlat
testl
jg
lea
jnp
scas
cltd
xor
mov
pop
scas
mov
or
enter
sub
sub
fwait
dec
fs
cmp
orb
adc
cs
fistpll
pop
mov
pop
lock
push
jg
orb
fistpll
movsb
sahf
xor
adc
mov
mov
or
fsubrs
call
add
add
or
nop
daa
idivl
xor
mov
scas
inc
xor
int
mov
add
test
sbbb
mov
or
sub
mov
nop
lock
fdivr
mov
fs
pop
sbb
sti
js
sbb
mov
aaa
into
iret
push
out
call
outsb
add
movsl
lods
mov
int
xchg
sti
test
sbb
fstpl
ret
mov
lret
das
ljmp
jnp
xor
inc
xchg
xchg
hlt
or
cmp
sbb
ret
pop
dec
in
and
popa
loope
fwait
pop
mov
xchg
ficoml
outsb
sti
hlt
sbb
cltd
xchg
icebp
cmp
mov
pop
icebp
inc
mov
ret
or
vmread
dec
loope
xchg
xchg
sub
cltd
stc
mov
out
xchg
ds
xchg
sub
pop
icebp
mov
dec
mov
fsub
js
adc
push
or
xchg
jnp
clc
mov
lret
sbb
sub
cwtl
xor
xor
mov
loope
cmpl
jno
mov
clc
scas
aas
xchg
sub
enter
sti
pop
mov
xor
and
in
cmp
jmp
imul
mov
dec
and
inc
mov
lret
add
js
jecxz
call
cs
pop
out
les
pmulhw
loop
in
addl
mov
and
inc
dec
aas
subb
sbb
dec
loope
ss
jno
js
mov
int3
xchg
sub
mov
rclb
aad
adc
jne
cmp
mov
out
test
adc
clc
movsl
das
fcoml
sub
shl
dec
in
stc
dec
loopne
push
insb
add
push
pop
sahf
xor
mov
jb
and
push
mov
xor
jo
mov
testl
out
and
lret
aaa
fstpt
jmp
jns
jo
lods
lahf
jmp
and
mov
lods
inc
inc
xlat
adc
mov
xor
pop
mov
pusha
testl
jle
push
jl
mov
loopne
inc
fidivl
loopne
clc
adc
jg,pt
pop
fs
cwtl
jbe
and
shl
out
stos
inc
iret
adc
or
leave
pusha
pop
cs
fdivrs
jle
xchg
pop
divb
add
adc
add
mov
mov
fldcw
mull
pop
lods
dec
jle
dec
int3
shrl
push
lock
mov
push
fnstenv
sbb
mov
fsubrs
test
roll
testb
nop
adc
push
cmp
or
pop
and
out
into
ret
pop
aas
sarb
pop
shlb
ds
cs
je
test
push
mov
mov
mov
cmpsl
shrl
mov
rorl
icebp
mov
aas
lods
cmp
shufps
movsb
sbb
int
pop
lea
add
imul
mov
sub
mov
test
cmp
push
push
lds
inc
xlat
sti
ja
jp
adc
not
movl
adc
aad
mov
push
cmp
inc
int3
xchg
mov
in
fidivl
push
cmp
push
clc
pop
test
mov
aad
or
sti
dec
xchg
sub
stc
les
pop
xor
mov
xchg
push
lods
inc
cld
mov
fbstp
cmp
shll
std
xchg
xchg
pop
dec
fbstp
or
std
loope
sub
leave
or
loopne
push
mov
jp
rcrl
and
jbe
sbb
xor
andb
out
mov
sahf
jmp
outsl
push
or
mov
sbbb
test
shll
push
fnstenv
sbb
sbb
test
and
push
inc
movl
xchg
cli
xchg
mov
aam
scas
testb
pop
aaa
into
push
adcb
adc
outsl
lret
aam
or
in
lea
xchg
sub
bound
addr16
scas
inc
push
nop
inc
fldenv
push
call
mov
jo
cmc
loopne
lods
push
adc
xor
inc
lret
mov
jmp
imul
sahf
dec
mov
pop
mov
inc
fisttpl
or
bound
jmp
or
ret
loopne
and
push
loop
inc
or
jne
add
jle
cld
xchg
pop
cwtl
adcb
jnp
mov
es
mov
movsl
xor
lret
lds
push
call
jne
adcb
sahf
add
out
add
mov
aad
aad
jae
outsb
pop
repz
adc
daa
or
jnp
adc
loopne
xor
cmp
pop
popa
clc
bound
orb
test
inc
cli
xor
loope
mov
out
jmp
pusha
out
push
insl
add
or
jg
fwait
lret
ficompl
mov
jmp
test
pop
or
mov
leave
pop
notb
mov
stc
faddl
adcb
leave
test
xor
mov
mov
push
push
hlt
out
xchg
stc
nop
cltd
jge
mov
mov
scas
int
cmp
add
xor
out
xor
lods
pushl
xor
jno
notl
aaa
and
test
lea
fdivs
xlat
outsb
push
mov
cmc
mov
add
jle
stos
nop
xor
enter
inc
mov
lret
pop
popf
outsb
add
push
out
and
xor
inc
pop
stos
inc
xchg
arpl
mov
mov
ds
loopne
jge
adc
dec
add
xchg
ret
mov
int3
mov
ja
inc
fmuls
mov
mov
sub
jge
sbb
push
xor
xchg
adc
test
mov
lods
pop
rolb
ret
in
adc
loopne
cmp
lcall
and
push
sbb
inc
js
sub
pop
cmc
test
mov
dec
ret
ret
imul
dec
in
lcall
sub
test
fdivrl
hlt
mov
inc
adc
call
movl
xchg
mov
rsqrtps
xchg
sub
or
sbb
or
ss
lock
push
jmp
orb
hlt
push
jb
in
sub
cmp
mov
imul
xor
xchg
sbb
jle
xor
mov
jl
pop
mov
adc
fcoml
xor
int3
cmc
call
inc
sbb
mov
gs
fs
rcrl
mov
test
loopne
cmp
adc
pop
idivl
push
in
gs
outsb
test
je
fcmovnb
cmc
mov
lret
jle
mov
cmp
into
gs
iret
pop
test
in
sub
jge
cmpsl
add
mov
lock
cmpsb
cmp
mulb
mov
sbbl
aad
inc
mov
xor
mov
test
out
push
sbb
aas
aad
aas
pop
pusha
inc
dec
hlt
jno
int3
arpl
roll
cwtl
shl
enter
mov
push
mov
shlb
out
repnz
imul
mov
jne
xchg
cltd
das
dec
out
xorb
ret
jb
push
and
mulb
push
adc
dec
arpl
nop
mov
and
mov
add
add
aaa
cli
pop
loop
mov
call
fldl
lods
sub
xor
add
lds
mov
je
stos
cmc
jo
daa
int
and
dec
mov
xor
inc
je
sbbb
sbb
sbb
cmc
add
lds
inc
xlat
sbb
imul
cmp
xor
shlb
iret
xchg
lea
mov
fs
push
or
ds
sub
and
add
stos
inc
out
mov
mov
fdiv
fiadds
daa
fidivl
test
inc
mov
add
and
imul
pop
testl
jl
xchg
push
daa
pop
xchg
inc
mov
adc
repz
sub
ror
ret
jae
xchg
push
dec
jnp
and
pop
icebp
ja
ljmp
outsl
sbb
out
xor
in
jbe
adc
call
cmp
jmp
jle
es
test
push
stc
push
mov
pushw
and
xchg
cmp
xchg
sarb
aaa
fdiv
jno
xor
cmpsb
gs
cmpsb
sbb
inc
lret
xchg
mov
pop
pop
cs
sbb
dec
xorb
add
bound
bound
sub
aaa
bound
sub
test
loope
dec
and
icebp
mov
adc
js
in
scas
push
fiadds
lahf
clc
lock
xchg
das
cmp
sbb
cmc
into
inc
pop
sub
shll
xchg
mov
jns
repz
lods
sbb
xor
or
mov
or
rolb
loop
cs
dec
mov
adc
push
and
insb
xchg
imul
pop
bound
leave
and
sbb
insb
dec
loopne
and
pop
adc
lret
orb
adc
lahf
cmp
les
jmp
inc
pop
mov
sub
sbb
imul
pop
xchg
or
mov
push
out
jae
cmp
sti
test
pusha
xchg
in
out
out
imul
mov
test
repnz
and
sub
fmul
cmc
or
push
mov
bound
sbb
filds
adc
push
cmp
dec
aam
pusha
lds
fidivl
out
std
cmpsb
out
pop
ja
xor
jp
imulb
inc
push
pop
cmp
mov
dec
cmc
shrb
cmpsl
or
or
std
pop
add
sub
adc
pushf
imul
cmp
test
pop
mov
stos
in
leave
sti
add
and
mov
pop
sub
mov
mov
dec
mov
mov
scas
jmp
mov
inc
push
lahf
popa
dec
adcl
cli
insl
daa
xorb
test
xor
test
inc
xchg
gs
jbe
repz
and
repz
negl
xorl
out
cmp
daa
imul
rorl
or
stos
mov
pushf
cmp
push
jmp
push
ljmp
aaa
stos
roll
lock
leave
sarb
ret
mul
nop
jb
decl
fisttps
cltd
ja
add
bound
pusha
and
xor
xlat
dec
push
in
daa
enter
loope
aaa
ja
push
scas
js
dec
stos
sub
jge
jnp
cltd
dec
xchg
adc
sub
pop
cld
je
mov
jnp
cmpsb
testl
mov
addl
jne
dec
and
xchg
cmp
mov
stos
clc
shrb
dec
add
adc
mov
mov
jo
std
add
mov
or
cmp
aaa
xor
or
cmp
sahf
dec
inc
clc
pop
sub
pop
scas
cmp
sub
fs
nop
jb
sub
cli
outsl
rcl
adc
in
loop
and
sbb
sbb
push
jp
loopne
inc
mov
xchg
int3
cmp
or
pop
xchg
or
es
fs
fidivrl
mov
cmp
and
add
lods
mov
mov
mov
xor
aam
adc
std
or
pop
ja
scas
test
and
cld
lock
adc
dec
adc
xlat
mov
inc
xchg
cmp
sti
or
or
xchg
and
test
xlat
insl
jmp
fisubs
and
dec
jl
xorl
push
mov
or
shll
decl
enter
pop
xchg
inc
in
clc
pop
adc
inc
lea
in
push
xorl
orl
lahf
or
scas
mov
fucomip
adc
inc
jne
jg
fsts
jge
xchg
ret
mov
pop
cli
xchg
xchg
push
or
cmp
scas
xchg
icebp
xchg
mov
call
adc
and
push
adc
out
fwait
std
cmc
insb
movsb
xlat
negb
stos
rclb
jbe
int
lods
or
pushf
arpl
scas
mov
bound
xchg
lds
and
adc
vpcmpeqw
jg
jmp
xchg
mov
fldcw
push
cwtl
mov
mov
in
scas
out
dec
jae
cmp
mov
clc
shlb
xchg
test
pushl
icebp
das
inc
or
add
push
out
xor
fnstcw
in
mov
ss
or
pop
and
cmp
adcl
cmpb
dec
jnp
or
shrl
ljmp
mov
cmp
ds
in
ret
jg
and
xchg
pop
add
mov
sub
push
jle
inc
stos
mov
pop
lahf
in
jnp
mov
or
pop
es
outsb
cwtl
lods
sub
xchg
mov
cmp
ret
jge,pn
mov
icebp
cli
fiaddl
in
daa
inc
jae
loopne
push
js
push
xor
nop
into
call
sbbb
push
cli
rclb
inc
xchg
outsb
pop
int
and
push
add
pop
ljmp
dec
in
cmp
mov
dec
das
bound
inc
and
sub
addr16
push
lods
cli
fbld
popa
out
daa
mov
push
test
mov
jle
mov
aam
aaa
adc
mov
xor
pop
cli
out
jbe
inc
cmp
jg
repz
mov
dec
rol
push
xchg
rorb
and
call
jnp
lret
popl
cmp
xchg
cmpsl
mov
jl
pop
push
or
ljmp
jmp
mov
push
ljmp
xor
inc
and
adcl
insb
or
sahf
xchg
shlb
aas
test
and
xor
jmp
imul
test
call
out
cmpl
test
cmp
repnz
push
mov
ds
dec
cmp
fnsave
lahf
sbb
xchg
stos
mov
mov
dec
roll
pop
sbb
dec
incl
push
or
mov
xor
rcll
dec
stos
inc
inc
xor
push
addb
mov
ja
jae
jae
xchg
push
sbb
add
aad
lock
jb
data16
lret
loope
jmp
movl
in
inc
adc
mov
and
xor
in
mov
pop
cmpsb
push
bound
iret
clc
mov
repnz
cmp
add
repnz
shll
sub
insb
push
mov
test
jge
adc
cmp
stc
xchg
xchg
pop
ffreep
pop
loopne
adc
lods
pop
xchg
inc
inc
or
and
mov
jno
xor
and
lea
jb
icebp
mov
fdivs
sahf
jne
es
jb
das
mov
std
xor
cmpsl
das
mov
cs
push
std
xor
push
insb
div
push
sbb
sbb
addr16
cmp
stc
std
sbb
pop
or
imul
leave
adc
out
in
faddp
adc
pop
movsb
and
dec
cld
ss
ret
dec
mov
xchg
ja
adc
std
fdivl
cmp
lock
cmp
sbb
adc
movsb
sub
pop
cs
or
out
xor
js
sub
sahf
inc
pop
fdivrl
repz
ret
adc
cmp
cmp
shrb
push
dec
sbb
scas
and
add
xor
and
xchg
addr16
shl
pusha
fwait
shll
jne
icebp
test
inc
push
sbbb
int
icebp
lret
iret
sbb
paddusw
shl
jmp
scas
stc
lcall
sub
dec
mov
outsb
insl
mov
push
popf
add
push
in
leave
and
mov
inc
inc
shlb
pop
add
fldenv
cmp
or
out
push
xor
inc
test
dec
cmp
sub
outsl
lret
inc
repnz
iret
aam
popf
bound
mov
bound
adc
xchg
mov
add
xchg
jae
cwtl
push
dec
aas
cmp
sbb
sbbb
xchg
movsb
cld
jns
or
xor
dec
test
loope
or
push
sub
fucomp
std
scas
mov
mov
mov
push
xchg
add
lahf
mov
sti
adc
bound
or
inc
push
bound
nop
cs
or
shll
aad
jb
mov
dec
jp
cmp
sub
pop
xchg
pop
inc
shll
jno
pop
adc
fcomp
mov
sbb
dec
scas
sub
xor
jmp
ficoml
imul
sti
jns
inc
sub
lret
mov
movl
mov
cmp
cld
clc
rcr
sete
lret
add
stos
stos
or
mov
fcmovnu
mov
add
jae
dec
imul
inc
push
arpl
mov
add
dec
pop
cmpb
pop
inc
push
push
pop
sub
sub
gs
nop
ret
ds
out
pop
repnz
sbb
fcmovnu
xchg
testb
cmc
push
test
loopne
dec
cmpsb
ret
push
jb
into
dec
pop
cmc
cmp
mov
push
ffreep
in
xchg
mov
test
cld
lahf
clc
mov
jbe
cmpsb
mov
insl
sub
push
icebp
ret
lds
or
hlt
mov
rcrb
mov
in
bound
rclb
xor
dec
fisttps
pop
mov
mov
ljmp
adc
mov
fldenv
add
cwtl
xor
pop
nop
scas
mov
dec
or
mov
cld
loop
add
cmp
cwtl
jne
leave
rorb
or
dec
fucomp
in
stc
sub
push
cmovp
jp
ja
inc
push
xchg
xor
mov
repnz
shrb
jo
jns
cmp
loopne
inc
mov
negb
gs
jbe
cli
or
pop
cwtl
dec
lret
shll
fistpll
pop
gs
mov
xchg
cmc
mov
push
fst
add
mov
add
sub
stc
fbld
pop
push
lret
dec
adc
adc
repz
fs
mov
push
dec
popa
ja
add
in
jp
pop
out
ror
cmp
es
push
add
and
cmp
add
iret
out
idivl
add
xchg
inc
out
push
add
pushf
cmp
xchg
mov
lret
sahf
arpl
or
in
adc
cmc
movsb
lahf
into
or
push
test
clc
mov
or
cmp
popf
xor
mov
mov
aaa
clc
shr
rorl
fistps
mov
adc
pop
dec
testb
sub
mov
dec
xchg
mov
adc
bound
pop
imul
push
jno
es
mov
push
clc
mov
lea
lea
mov
dec
and
hlt
es
sub
lahf
mov
aam
and
clc
xor
and
fidivrs
ret
mov
xor
and
push
cmc
mov
push
xchg
add
jnp
adc
fwait
cmp
out
cmc
gs
mov
adc
repnz
cmpsb
add
lret
adc
aam
push
mov
adc
loopne
jmp
jb
lret
push
xchg
sbb
insb
test
sub
test
in
cli
mov
stos
dec
xchg
stos
jecxz
movsb
lcall
inc
popa
mov
mov
test
in
xchg
testb
sbb
inc
jne
or
ljmp
cmpsl
loope
jo
mov
xchg
fstps
dec
mov
sbb
or
cltd
pop
and
dec
jae
push
sbb
sbb
mov
js
mov
sarb
dec
xchg
inc
in
jo
faddp
mov
jo
sub
popa
jp
fld
push
pop
les
rcr
fsubrs
out
test
adc
push
lea
neg
imul
push
jle
stc
cli
insl
mov
scas
mov
sub
xor
push
nop
jo
inc
mov
out
push
and
mov
jmp
es
pop
and
fdivrs
add
or
sti
movsl
ret
pop
cmp
dec
jns
cld
pop
jecxz
or
cmp
mov
mov
add
std
and
cmp
lret
faddl
scas
insl
bound
enter
lcall
movsl
mov
les
mov
icebp
push
popl
add
xchg
cmpsb
push
or
or
cmp
xor
inc
pushf
imul
jns
js
mov
shlb
mov
out
imul
cmp
inc
fcompl
popf
push
dec
jle
or
pop
sahf
inc
arpl
sbb
mov
test
orb
or
jne
push
push
and
sbb
jge
loopne
aam
rcll
stc
push
outsl
and
dec
nop
xchg
mov
stos
mov
jg
je
fldl
mov
das
pop
repz
repnz
xchg
mov
xor
test
nop
mov
insb
icebp
adc
and
and
push
xlat
add
mov
aas
xor
push
push
push
jnp
pushf
xchg
leave
ret
sub
or
jmp
arpl
push
icebp
aaa
push
loop
jb
mov
insl
dec
cltd
push
pop
testb
or
mov
imull
cmp
add
pop
ja
xchg
adc
pushf
inc
or
pop
push
jnp
ret
je
iret
cmp
mov
leave
or
push
jae
jl
fcoms
in
jmp
std
sub
pop
mov
stos
push
push
and
mov
cmp
nop
and
push
jae
jns
cmpsb
adc
outsl
gs
enter
rorl
mov
inc
pop
lret
jp
fldenv
scas
fs
testl
lea
movsl
add
jb
enter
or
xor
sub
movsl
arpl
sbb
adc
cmp
repz
xchg
es
sbb
inc
sbb
dec
mov
sarl
jle
mov
mov
adc
ret
cmp
adc
mov
setge
mov
adc
lahf
int
mov
out
xchg
not
fld1
outsb
mov
push
push
pop
jp
movsb
push
mov
inc
jne
in
push
mov
and
leave
aad
int
cmpsl
repz
xchg
push
mov
idiv
mov
xchg
fisttpl
jmp
mov
mov
ljmp
orl
add
xor
aad
aad
xchg
jae
mov
outsb
jge
imul
stos
cld
aam
sarb
ljmp
es
aaa
jl
and
or
sub
push
inc
test
mov
aaa
jnp
aad
in
cli
mov
pop
xchg
pusha
jge
movsb
add
xchg
inc
movhlps
fisttpl
ret
xor
push
sti
andb
data16
bound
inc
fildll
testb
outsl
cwtl
sub
mov
mov
test
ss
sub
mov
or
es
mov
orl
sti
jb
xlat
cmc
ficoml
inc
pusha
xchg
enter
hlt
add
in
xchg
rol
or
add
sbb
add
add
sub
sub
mov
sarb
ror
mov
fwait
iret
ds
ret
das
push
sbb
test
and
fimull
pop
jg
adc
cli
int3
sub
dec
sti
cmp
stc
int3
out
xor
xor
push
repz
cmc
mov
inc
dec
enter
out
int3
pushl
ds
insl
test
push
es
mov
outsb
mov
cmc
cmpsb
fistpll
popf
mov
frstor
fs
push
icebp
and
pusha
fadd
outsb
scas
scas
lods
mov
sahf
adc
and
fdivs
adc
xor
scas
pop
out
xchg
xor
leave
repnz
in
ffree
adc
sub
cmp
inc
mov
mov
cmp
mov
iret
ljmp
outsl
pop
fucomi
enter
cmp
daa
mov
shr
fidivl
cmp
jnp
mov
and
setns
movsl
pop
test
in
enter
sub
pop
cmp
mov
sbb
enter
jle
push
sbb
stos
mov
cmp
jbe
fcmovbe
cmp
mov
in
inc
scas
js
inc
lds
cmp
movsb
hlt
xchg
sub
mov
xchg
pop
push
into
sahf
repz
jno
sbb
sub
adc
xor
jmp
push
jnp
push
or
fistpll
sbb
add
pop
lea
push
out
sbb
sbb
pop
dec
pushf
sub
mov
mov
icebp
int3
add
push
pop
xor
and
push
xchg
mov
stos
xchg
sub
cmp
add
mov
sti
cmp
sbbb
jno
cli
mov
in
add
in
aam
cwtl
xor
sub
lds
push
mov
das
andl
and
cmp
das
pop
add
movsb
or
cmp
mov
in
repnz
pop
inc
jns
cmpsl
std
decl
pop
cmp
mov
shrb
scas
mov
pop
std
mov
and
lock
pop
add
xlat
add
rcll
inc
cmp
push
mov
mov
cmpb
outsb
insb
fs
sub
mov
mov
cmp
jecxz
cli
mov
mov
in
xchg
leave
cmp
adc
push
mov
imul
inc
add
ja
adc
ja
push
outsb
sub
lahf
out
inc
test
clc
adc
pop
adc
pusha
mov
mov
mov
negl
aas
adc
notl
sbb
sub
ret
mov
cwtl
add
popf
or
mov
cmp
sub
outsl
mov
test
mov
xchg
inc
movsb
sar
out
sti
leave
dec
push
xor
adc
inc
adc
pushf
scas
push
add
mov
mov
xchg
xor
mov
jl
ljmp
or
outsb
sbb
or
xchg
pop
inc
gs
mov
or
sbb
jp
loopne
mov
dec
mov
ds
and
and
dec
test
into
dec
sbb
cmp
adc
stc
popa
ljmp
inc
jo
int3
cmp
inc
insl
sub
xchg
push
sbb
shlb
les
inc
lret
inc
or
dec
xor
inc
jb
mov
pop
cli
xlat
test
pushf
push
cmp
cmpsb
mov
iret
lret
dec
int
mov
imul
movsb
or
mov
jo
push
dec
add
xchg
outsl
mov
push
xor
outsb
scas
add
push
dec
fs
xchg
push
mov
pop
outsb
out
rcrb
das
dec
inc
mov
dec
fwait
sbb
lret
out
xchg
mov
xor
enter
push
das
xor
push
mov
or
inc
idiv
adc
push
mov
fidivrs
test
jns
imul
leave
fisubs
cmpsl
mov
push
jmp
or
jl
test
mov
ljmp
outsl
bound
jns
xchg
in
fsts
mov
stc
xchg
jne
push
add
enter
push
xchg
inc
push
inc
dec
nop
cmpsb
das
lret
bnd
sti
jo
push
xchg
cmp
mov
add
and
out
jae
mov
xorl
xchg
xor
cmp
jae
imul
stos
jmp
stc
inc
adc
jp
imull
aam
jo
adc
push
sub
test
popa
inc
or
cmpsb
std
dec
sbb
cmp
cmp
push
lods
lods
cmp
iret
stos
lock
hlt
xchg
and
push
add
imul
push
mov
cli
inc
push
insb
int
jb
mov
sahf
fwait
into
mov
cmpsl
xor
clc
cmp
mov
push
addb
icebp
ret
xchg
or
mov
mov
mov
mov
mov
lret
add
pop
dec
sub
jbe
fistl
sub
cmp
inc
negb
dec
ret
push
sbb
stos
enter
push
jp
cmp
cmpsb
mov
in
fdivrl
and
jmp
mov
mov
add
into
sti
xchg
jl
cmpsl
sbb
cmp
insb
divb
mov
and
xor
ret
adc
movsl
xor
jnp
or
push
js
pushf
xchg
ljmp
insb
push
fisttps
in
test
cmpsb
inc
adcb
insb
cmp
push
mov
testl
add
add
xchg
xchg
xor
popf
lods
add
xchg
mov
sub
sub
in
inc
outsl
dec
out
data16
cmpb
mov
mov
shlb
xchg
movsb
mov
ss
adc
enter
cld
push
add
movsl
lock
imull
loopne
mov
loopne
pusha
iret
stos
in
fdivl
in
dec
cmpsl
int3
push
movsb
cli
dec
cmp
cwtl
stos
or
inc
shll
jo
adc
jg
inc
fs
fidivrl
ljmp
and
lods
into
jge
mov
das
mov
mov
fdivs
jno
and
pop
fcmovnu
ret
rclb
fldcw
xchg
push
ja
mov
or
addr16
mov
nop
adc
jle
dec
xchg
jne
or
mov
inc
cmp
movsb
adc
das
rol
mov
add
out
jno
mov
lcall
add
push
sbb
std
cmp
push
insl
add
xor
xchg
insl
add
std
mov
push
xor
cmp
dec
mov
sub
imul
aam
mov
xor
jle
push
dec
cld
aam
movsl
loop
leave
mov
or
add
aas
lret
insl
and
or
ds
sub
loopne
andb
lea
lret
ficompl
xchg
jmp
je
loope
arpl
jg
pushf
sub
loop
xchg
pop
cltd
add
lds
iret
stos
mov
adc
jo
and
mov
fisttps
pop
addr16
test
sub
push
pop
call
push
cli
mov
dec
sahf
mov
inc
lds
mov
outsb
lret
rolb
mov
stos
xchg
divl
or
les
push
clc
inc
and
mov
mov
fwait
and
mov
mull
xchg
and
mov
sbb
js
repz
jecxz
js
sub
sub
popa
cld
jns
movzbl
xchg
mov
and
sti
jl
jnp
dec
out
cmp
es
mov
push
sub
out
xchg
pop
xor
imul
push
jnp
xor
movsb
mov
adc
mov
adc
dec
pop
or
cmpsb
mov
lret
negb
xchg
fbstp
sub
test
cltd
popf
je
insb
pop
mov
imul
or
pop
push
lret
and
std
cmpsb
mov
jnp
fsubr
rolb
lahf
mov
repnz
cmpl
js
push
scas
dec
ja
and
push
les
aad
stc
in
shrb
shll
arpl
push
roll
in
cli
fdivp
xlat
stc
add
stc
or
jmp
pop
and
js
pop
out
cs
fsubs
icebp
ljmpw
hlt
mov
pusha
mov
in
xor
push
aas
enter
sti
inc
sbb
xchg
adc
add
jno
adc
mov
jno
mov
lret
jecxz
mov
es
mov
cmpsl
cmp
mov
inc
gs
add
inc
push
popf
xchg
xor
sbb
jno
or
dec
insl
add
pop
cmp
dec
dec
movsb
mov
pop
mov
inc
fcoms
cmpl
out
xor
pop
inc
js
cwtl
bound
dec
adc
fstp
fwait
mov
mov
stc
ficoms
or
dec
shl
xchg
jae
and
nop
or
sbb
test
pushf
adc
sbb
jns
fistl
icebp
insl
mov
fsubl
jg
lahf
jae
movsl
pop
mov
jne
mov
mov
mov
cmpsl
or
mov
mov
push
sahf
cmp
into
or
jp
dec
cmp
movsl
xor
cli
mov
mov
call
stos
inc
pop
adc
jle
orl
sub
arpl
call
and
popf
cmc
enter
mov
sbb
leave
hlt
out
mov
mov
sbb
mov
incb
push
push
adc
xchg
push
sub
mov
xchg
and
adc
fs
lods
add
add
enter
pop
scas
lret
sub
das
pop
int
cmp
call
cmp
adc
xchg
xchg
insl
out
lock
scas
cld
cmp
and
or
or
out
sub
lret
ds
mov
shll
lcall
push
mov
loopne
je
es
xchg
rcrl
and
xchg
imul
mov
out
adc
lods
out
in
pop
fwait
pop
jecxz
adc
or
or
rorl
rolb
test
adc
outsb
imul
fadd
or
or
xchg
sti
call
outsb
insb
dec
jae
das
mov
stos
sbb
jge
pop
push
sbb
mov
aam
cmp
push
xor
andb
dec
hlt
dec
call
and
mov
test
or
xor
bound
aad
repz
mov
jle
xor
ret
test
cmpsl
jp
iret
fsubl
dec
dec
lods
psraw
cmp
push
lcall
icebp
mov
imul
fildll
mov
add
cmp
mov
mov
cmc
pop
into
test
mov
or
cli
rclb
stc
dec
popf
call
in
ss
das
sarl
dec
add
mov
inc
push
xchg
test
dec
pushf
pop
xchg
sub
sbb
mov
stos
pop
pop
outsl
lods
add
movsl
add
mov
jae
test
mov
adc
jno
lahf
aas
jg
cs
mov
in
in
mov
push
or
mov
xchg
xor
inc
leave
dec
rcrb
mov
shl
push
into
dec
and
and
ret
dec
iret
sbb
cs
roll
fadd
mov
cs
subl
scas
xor
sub
das
out
or
mov
outsl
cwtl
xchg
test
loope
cld
jp
test
xchg
addr16
pop
dec
adc
dec
mov
or
xchg
inc
fs
and
cmpb
fdiv
mov
jecxz
xchg
dec
mov
ljmp
sti
adcb
je
les
mov
cmpsl
mov
and
adc
sub
push
mov
jb
sub
icebp
js
xchg
dec
inc
sbb
dec
mov
mov
roll
std
in
int
pop
inc
test
les
clts
xchg
lret
xor
lds
rclb
cmp
mov
inc
pop
in
or
pop
inc
enter
rcrb
pop
subl
cmpsb
mov
pop
jb
pop
stos
adc
push
cmp
xor
adc
fldcw
ja
cmp
lret
jge
test
rorl
or
lods
aam
pop
cld
xor
pop
lret
addr16
inc
fisubl
out
test
inc
popa
clc
je
or
adcb
rcl
popf
xor
testb
cmp
push
outsb
dec
gs
jns
fidivl
lcall
adc
mov
stos
addr16
mov
mov
fimull
call
addr16
pop
cmp
lods
insb
jg
sbb
shlb
loopne
es
pop
pop
xor
jns
jbe
test
addb
dec
sub
dec
into
gs
xor
mov
in
add
dec
out
out
mov
push
cmp
mov
test
lret
cld
frstor
push
push
les
das
jp
popa
jno
jge
sbbb
not
mov
scas
dec
sub
jae
push
fwait
jnp
cltd
lods
mov
pop
scas
decb
insl
add
pop
sub
push
popa
xchg
sub
jno
out
mov
inc
out
jno
cmc
pop
shrl
push
lea
pop
in
orl
mov
out
ljmp
mov
inc
push
inc
fldl
mov
and
out
sbbb
or
cmp
aaa
jp
popa
clc
mov
jg
fsubrp
fdivl
add
jae
mov
lods
int
in
loopne
cmpsl
sbb
mov
adc
ljmp
test
or
fidivrs
xor
push
dec
lock
rcrl
inc
fld
iret
imul
in
ret
sbb
ds
fbld
es
mov
push
popf
stc
shlb
mov
sbb
pop
inc
sub
repz
inc
ficompl
ror
cli
shlb
or
roll
adcb
callw
jne
subl
adc
inc
sub
adc
test
scas
rorl
or
lock
cli
xchg
mov
ret
cld
rorb
or
pop
repnz
sub
push
push
dec
jecxz
mov
mov
testl
mov
sbbb
sbb
jo
or
xor
les
mov
nop
jmp
stos
inc
fmuls
test
stc
insl
and
sub
mov
testb
jmp
add
cmpsb
cmp
int
ljmp
in
inc
fstl
cmp
shll
add
lret
mov
adc
and
rclb
std
sbb
outsl
push
adc
fidivs
xchg
jns
xchg
lret
lret
loop
out
in
lcall
cmp
fidivl
rcrb
xor
cs
mov
sub
jns
js
jge
jne
jle
ret
imul
shrb
cli
dec
sub
lcall
push
scas
mov
mov
rorb
push
cmp
out
test
push
mov
jbe
mov
stc
or
push
ljmp
push
popf
xorl
scas
movsb
iret
data16
iret
data16
pop
repnz
lcall
jbe
pop
mov
das
sahf
xor
cmp
ss
pop
push
movsl
test
jns
movsl
iret
data16
jmp
or
sbbl
sub
dec
in
ja
fidivs
shrl
rorl
adc
push
pop
inc
xlat
mov
scas
stos
lret
aad
pop
lock
mov
inc
push
push
and
mov
les
xor
and
pop
ja
sub
mov
les
out
dec
fists
and
sbbl
push
call
int
stos
inc
add
and
pop
cmp
scas
fs
inc
test
lret
cmc
loope
sbb
sub
dec
cmp
stos
data16
imull
lret
repz
aam
jb
push
pop
lock
das
mov
pop
jno
dec
stos
jp
mov
hlt
or
push
and
dec
lods
jge
push
cmpsb
into
cmp
clc
enter
sbb
inc
adc
in
dec
cli
xchg
popf
jo
mov
lret
push
in
repz
dec
dec
push
cld
xchg
mov
mov
mov
mov
dec
ds
cmp
mov
leave
lcall
cld
out
sti
xchg
cs
mov
dec
dec
jecxz
push
fs
mov
mov
jmp
in
sbbl
add
push
jnp
mov
sbbl
fsubr
cmp
adc
xor
daa
xor
sti
outsb
inc
dec
in
sti
xchg
mov
fldenv
jmp
in
and
dec
insb
jge
fwait
movsl
mov
test
fidivl
pop
pop
and
cmp
movsl
xorb
mov
fstpl
add
and
push
jmp
sbbb
leave
mov
dec
pop
adc
mov
std
xchg
pusha
jo
push
stos
xorb
neg
mov
rolb
xor
pusha
bound
xchg
adcl
out
loope
dec
in
add
shll
mov
orb
popa
loope
cmpsl
pop
clc
shlb
cmp
outsl
push
push
popf
xchg
sub
shr
xor
pop
repz
in
inc
adc
ja
dec
fbstp
push
in
rclb
inc
xlat
daa
out
sti
adc
shll
push
insb
xchg
leave
pusha
int
fdivl
out
sub
pop
outsb
add
jmp
sub
ljmp
aam
scas
add
enter
ds
push
jecxz
dec
js
fildll
iret
dec
loope
mov
jnp
dec
or
es
pop
stc
nop
mov
jle
out
fsubrs
pop
pushf
xor
add
pop
subb
jnp
add
aad
stc
std
xchg
cs
dec
out
dec
push
mov
scas
jl
fcompl
es
stc
sbb
cmpb
imul
cmp
sub
inc
or
pusha
xchg
sbb
mov
xor
and
push
mov
dec
data16
sub
lret
push
xchg
xchg
xor
jp
jecxz
loop
popa
and
jbe
push
dec
hlt
je
movsb
aas
popa
cltd
or
mov
sbb
or
cs
pop
cmpb
shlb
scas
out
dec
ficoml
pop
ljmp
outsb
idivl
fadds
adc
daa
mov
pop
or
stos
pop
outsl
mov
push
scas
cld
test
jge
adc
mov
sub
rcrb
mov
add
cwtl
push
cmpsl
movl
das
mov
push
les
cmp
addr16
fisttps
and
das
ficompl
push
inc
push
bnd
outsl
notl
test
iret
jp
pop
cmpsl
loope
push
and
pop
notl
adcb
adc
loopne
int
lods
adc
cltd
cmp
call
pushf
mov
or
or
shrl
fcoms
icebp
mov
mov
inc
in
lret
jg,pn
inc
cwtl
pop
pop
xlat
jb
loopne
in
mov
sbb
lahf
xor
xorl
dec
or
subb
mov
shr
leave
es
int
sbb
fnstenv
std
jge
xchg
in
lea
ret
or
imul
pop
bound
test
xlat
sub
cld
inc
shlb
pop
fisttpl
testb
push
and
div
push
push
out
push
inc
addb
cwtl
in
scas
dec
and
ficomps
adc
js
mov
push
inc
in
mov
mov
out
mov
or
and
mov
aam
enter
mov
inc
js
int
jl
jmp
out
lret
je
hlt
or
xor
cmpsb
inc
inc
pop
jnp
xchg
je
test
add
sub
inc
call
jg
subb
mov
push
pop
in
lods
and
inc
jmp
mov
xchg
adc
xor
inc
jns
mov
push
cmpsl
rcrb
aas
mov
in
outsb
scas
dec
stos
sub
jno
fistps
xchg
outsb
dec
ljmp
xchg
pop
jne
lods
jmp
out
hlt
cmpl
and
or
mov
xor
pop
mov
rcr
xorb
jecxz
xlat
mov
add
jle
loop
push
test
shrb
popf
movsb
jmp
add
sub
push
jae
cmp
ret
enter
mov
in
pop
fsubs
sub
shll
call
mov
jp
lret
add
push
xor
xchg
cmpl
stos
movsb
movsb
cmp
lret
loope
std
test
popf
push
dec
loop
jl
sbb
mov
ret
inc
lock
inc
inc
xor
jae
jnp
lcall
push
in
out
out
pop
psubsb
cmp
imul
ret
mov
fdivrl
rorl
cs
pusha
pop
rcrl
testb
aam
stos
add
es
push
push
push
mov
js
jmp
fmul
jbe
cld
stc
dec
in
push
mov
push
dec
jl
jge
mov
push
rol
in
test
icebp
cwtl
das
and
insb
add
ss
imul
xchg
push
jmp
mov
jb
pop
adc
nop
daa
popaw
and
inc
sarl
arpl
stc
cmp
adcb
cmp
lahf
imul
mov
fcomp
inc
fildl
daa
push
out
addr16
icebp
mov
mov
mov
ljmp
out
and
xor
stos
aaa
into
jp
test
xor
pop
jae
sbbl
mov
es
add
mov
adc
negl
sarl
xchg
cmp
pop
or
es
adc
mov
loopne
jl
sub
push
popf
arpl
push
test
sbb
sub
sbb
mov
mov
jmp
inc
jecxz
add
test
xchg
imul
imul
into
mull
dec
adc
mov
pop
xor
jnp
jl
ja
jp
lea
ret
push
add
mov
daa
sub
mov
ret
pop
hlt
adc
data16
hlt
xor
mov
out
aad
mov
incb
mov
or
push
or
fcom
push
jecxz
cmp
push
in
push
loope
mov
js
lods
inc
mov
lret
pop
sub
adc
jmp
inc
and
aad
or
sbb
sti
adc
scas
int
fidivrs
adc
jne
cli
cmp
stos
pop
lods
xor
in
mov
lock
lret
adc
fnsave
out
xor
test
pop
sti
pop
mov
dec
adc
ja
push
fs
repnz
in
ljmp
push
mov
es
jno
loopne
adc
jbe
aas
push
mov
pop
mov
fsub
jnp
pop
pop
hlt
nop
das
add
in
sbb
cmp
ds
pop
sbbl
pop
lods
les
jp
stos
icebp
inc
fldenv
int
adc
inc
pushf
xor
jns
inc
xchg
popf
xor
fs
xchg
jmp
rcrb
gs
call
or
cmp
cmpsb
cmp
loope
fistl
mov
jne
xor
mov
xchg
xchg
addl
addr16
sbb
aam
dec
out
inc
xor
jmp
push
jmp
lods
aam
cmc
scas
mov
outsl
js
ret
xlat
int
leave
sub
xor
das
sbb
push
movsl
push
xor
test
fldcw
mov
xor
jg
ret
imul
ret
cmp
sbb
sbb
hlt
adcb
cld
outsb
stos
cmp
and
cmp
stos
fadd
je
into
icebp
sbb
adc
jge
mov
pop
pop
add
nop
mov
popf
and
or
adc
sub
add
sti
rcrl
xchg
adc
orb
sub
push
dec
push
outsl
adc
es
notl
cmpsb
cmc
scas
push
sub
lock
mov
popa
mov
jbe
xchg
std
jl,pt
push
test
mov
jnp
scas
pusha
neg
sahf
add
xchg
cli
movsl
cmp
aad
xor
jne
mov
jl
jne
jae
call
xchg
or
lds
scas
scas
nop
add
sbb
cs
fbld
mov
scas
inc
mov
sbbl
fimuls
pcmpeqd
jl
insb
lods
inc
pop
jg
sbb
fldt
lds
fs
push
and
pusha
push
xchg
testl
dec
enter
mov
lods
cld
adc
inc
inc
incl
out
outsl
dec
fistps
mov
jbe
jecxz
adc
add
xor
pop
push
mov
lret
mov
push
mov
pop
divb
xor
nop
movsb
pop
clc
cmpsb
pop
movsl
xlat
daa
inc
fstl
test
in
inc
es
test
xchg
pop
mov
scas
xchg
and
and
and
mov
jbe
pop
imul
sub
adc
mov
popf
inc
sbbl
hlt
xchg
clc
test
and
pop
push
sbb
push
mov
mov
xor
mov
clc
inc
cmp
rolb
adc
outsl
add
push
mov
mov
inc
fnsave
push
cmp
js
test
sbb
out
and
pop
jp
ss
xchg
popa
clc
int
add
mov
mov
popf
cmpsb
xchg
inc
ffree
movsl
ss
lock
and
sbb
dec
xchg
cli
cwtl
and
ljmp
lea
push
imul
fnsave
fldl2e
orl
and
pop
push
addr16
into
push
jns
add
roll
push
dec
pop
sbb
orb
pop
push
aaa
into
bound
js
pop
adc
inc
insl
cmp
jp
cmp
dec
scas
mov
sbb
scas
and
and
inc
and
adcl
dec
in
mov
sti
out
sub
aas
jp
pop
insl
push
mov
outsb
arpl
lods
inc
push
jecxz
xor
test
lea
jg
movsl
and
stos
std
les
stos
movsl
cmp
dec
arpl
jns
clc
push
xchg
add
rcll
cmp
xor
test
jecxz
mov
flds
dec
and
mov
add
std
xchg
xor
cmp
test
lods
adc
cmpsb
pop
ja
dec
rolb
mov
je
sub
mov
aaa
js
sbb
ret
and
pop
sbb
pop
dec
pop
push
in
push
addr16
stc
xchg
xchg
cmp
add
add
scas
xor
mov
push
test
inc
fistl
shl
repz
je
push
sbb
xchg
and
cmp
in
test
push
fwait
xchg
pop
and
lock
push
out
add
inc
fmull
or
jns
aaa
push
jmp
mov
or
dec
pop
jnp
dec
les
popl
cli
loope
js
icebp
or
jg
push
mov
fldcw
jge
clc
jecxz
sub
sub
test
je
fbstp
sahf
and
push
insb
fidivs
inc
stc
jne
xchg
adc
out
xchg
mov
psubb
fdivl
call
iret
lea
in
pop
pop
adc
xchg
cmpb
or
xchg
mov
xchg
dec
fucomp
orb
outsl
push
insb
and
call
mov
jo
push
faddl
movsl
hlt
adc
stos
inc
aad
inc
fildl
stos
jecxz
in
gs
push
push
test
test
mov
ror
lds
mov
stc
outsw
pop
cmc
pop
nop
add
fwait
sti
fldenv
xor
adc
xor
inc
fsubr
pop
loope
cmp
jno
stos
xchg
push
and
jbe
lds
ret
fldenv
cli
sbbl
adc
popf
inc
bnd
in
mov
xor
lret
inc
sbb
ret
loop
inc
iret
fsubrs
outsb
test
add
mov
addr16
pop
inc
retw
insb
popa
clc
sahf
pushf
push
in
push
mov
sti
xchg
add
sub
lods
cmp
sbb
pusha
shrl
hlt
test
xchg
jnp
add
and
aaa
lods
lds
mov
stc
daa
lods
push
in
sbb
pusha
shrl
test
push
jmp
and
dec
loop
jle
push
call
lret
rcl
mov
and
and
pop
outsb
push
shrb
xchg
jbe
in
push
insb
lret
bound
jecxz
pop
sahf
push
jmp
stos
push
lret
les
mov
mull
lds
in
jnp
cli
stos
adc
add
repz
sbb
sub
xor
mov
mov
test
dec
push
mov
mov
repnz
pop
in
ds
or
out
xlat
push
add
mov
xlat
outsb
mov
iret
pop
hlt
mov
iret
aam
rcrb
lock
gs
sub
shrb
inc
add
cs
movsl
cmp
sub
inc
fldenv
ficomps
rorb
jl
adc
outsb
test
xor
mov
sub
pop
jle
jo
pushf
cwtl
gs
lret
loop
in
lcall
movsb
cmp
ret
pop
sahf
mov
inc
fcmove
mov
in
pop
push
cmp
inc
aas
sbbl
xchg
mov
in
in
pop
push
lock
fsubp
inc
fs
jno
pushf
xor
cltd
add
and
cmp
ret
mov
inc
fidivl
pop
sub
sbb
sbb
ret
ss
int3
arpl
fldcw
or
or
and
mov
lods
subb
and
dec
jecxz
and
mov
sub
sbbb
add
mov
movsb
add
sub
add
int3
push
imul
cmpsb
lahf
jbe
adc
or
add
inc
sub
push
divb
cmpsb
cmc
adc
addb
cli
xchg
fisubrl
mov
pop
sbb
nop
mov
ret
clc
mov
mov
insb
add
out
xchg
fldl2t
or
lods
inc
repnz
test
dec
jecxz
jns
subb
sbbb
mov
in
hlt
mov
cvttps2pi
aas
dec
jmp
bound
mov
ljmp
pop
hlt
mov
lods
inc
lea
dec
loop
inc
icebp
mov
cmp
test
fdivr
xchg
iret
xchg
and
sub
cli
xchg
mov
arpl
push
jmp
fwait
mov
sti
xchg
xchg
frstor
test
sub
or
xchg
jg
jecxz
cmpsl
jle
xorl
sbb
jne
cltd
sub
mov
pop
jbe
pop
test
ret
hlt
dec
loopne
inc
push
add
test
lods
repnz
lds
cmc
call
jecxz
dec
in
fdivl
gs
loop
add
xchg
xor
sbb
and
lds
push
in
sub
jae
jl
add
iret
xor
cmpsb
arpl
scas
inc
and
aad
inc
int
jne
dec
loop
xchg
jmp
leave
push
jp
xchg
or
fidivrl
sub
imul
dec
loop
dec
shrl
fisubrs
adc
mov
testb
sub
cs
jl
lret
lahf
dec
loope
sub
sbbb
sbb
cmp
stc
xchg
cmpsb
cmp
push
dec
in
call
push
jge
les
xchg
les
lods
inc
inc
loope
mov
arpl
cwtd
xor
push
lea
mov
fistpll
adc
rcll
dec
test
xor
push
test
sub
xchg
mov
movsl
scas
std
rcrl
sub
add
jbe
and
push
ret
mov
in
test
mov
clc
sub
iret
cltd
adc
lds
ljmp
jbe
jle
outsb
add
pop
push
or
pusha
outsl
lods
inc
mov
lret
cld
dec
out
cmp
out
test
sti
xchg
lods
popa
mov
xchg
mov
mov
mov
inc
fistl
aam
cmc
pop
insl
add
adc
pop
xchg
mov
inc
aaa
pop
mov
mov
add
cld
xchg
xor
cmp
lahf
test
lods
adc
pop
inc
fmull
sub
out
dec
lret
js,pt
mov
insl
add
rcrl
pop
mov
dec
and
sub
jae
orl
xchg
fucomi
test
and
andl
lds
movsb
pop
notb
int3
lret
sub
fwait
sbb
dec
stos
mov
mov
push
mov
fwait
xor
dec
loope
inc
xchg
cmp
test
lods
mov
fisubrs
sub
es
lret
fiaddl
cmp
std
rclb
inc
fcoml
out
push
popf
loopne
loop
jo
cmp
rcrl
adcb
in
mov
mov
mov
stc
mov
roll
pop
sub
pop
dec
mov
mov
lods
lret
lods
inc
cld
mov
shll
pop
dec
loop
and
xchg
outsl
in
andl
mov
cld
add
sub
out
outsl
lret
popa
push
out
push
int3
mov
notl
inc
fisttpll
push
in
push
gs
xchg
inc
pop
repnz
cmp
stos
sbb
mov
sbb
xchg
pop
dec
in
shlb
pushf
pop
testb
push
popf
dec
inc
dec
out
bound
xchg
inc
pusha
divl
mov
ds
pop
scas
inc
cmp
ds
dec
filds
lods
fbstp
jae
imul
sub
jbe
lods
mov
out
into
cld
aas
sub
inc
fsubrs
test
push
roll
out
xchg
or
sti
inc
lahf
ss
sub
jnp
cmp
rorl
iret
sub
push
jg
push
data16
mov
movsl
stc
cwtl
das
sub
sahf
xor
je
jmp
ljmp
out
mov
pop
imulb
roll
inc
clc
jne
adc
es
roll
sbb
enter
mov
es
lret
add
xchg
int3
dec
jecxz
and
xlat
ret
mov
hlt
adc
clc
sbb
mov
push
out
mov
out
sahf
pop
mov
pop
ljmp
scas
xor
pop
scas
inc
mov
pop
cmpsl
dec
fwait
pop
or
loopne
xor
pop
inc
pop
ja
lea
pop
gs
xchg
ficoml
outsl
push
and
mov
stos
push
sbbl
iret
scas
cmpsb
cmp
mov
inc
fnstsw
jmp
inc
fcoml
js
pop
mov
nop
stos
xchg
fadd
lods
inc
mov
and
mov
lret
cmpsl
ds
into
xlat
outsb
shl
jle
repnz
in
adcb
call
lds
sar
xchg
repz
xchg
sbb
adc
jns
jns
out
test
daa
mov
pop
loopne
sub
mov
and
inc
mov
push
movsl
testb
mov
cmc
arpl
in
mov
fidivrl
insl
add
hlt
mov
push
lret
mov
shlb
jne
cmp
and
sub
fwait
or
cmpsb
mov
and
jge
rorb
incb
orb
mov
mov
mov
inc
fisubrs
inc
loopne
jbe
insl
add
mov
adc
jge
adc
repnz
cmpsl
je,pt
push
call
shl
ljmp
pop
xchg
sub
inc
jo
jbe
sub
sarb
mov
fisubs
rcl
insb
ret
addr16
hlt
test
out
addr16
sbb
adc
addr16
xchg
cs
jmp
in
xor
sbb
xor
xchg
sub
pusha
test
ljmp
jnp
nop
daa
push
andb
mov
or
or
and
dec
jecxz
addb
mov
push
popf
mov
xchg
or
xor
push
pusha
inc
fcoml
jle
mov
lcall
ret
adc
scas
inc
testl
fdiv
mov
add
je
rclb
lds
push
out
mov
sbbb
cmpsb
lock
mov
xacquire
and
sti
xchg
icebp
dec
and
xchg
mov
leave
call
push
out
in
inc
fcomp
cmp
jle
lock
xchg
jecxz
adcb
adc
pop
test
pop
scas
add
cs
pusha
pop
sub
mov
aam
ja
inc
and
bound
adc
adc
pop
mov
push
mov
scas
stc
jnp
outsb
lods
cld
lahf
ss
lds
imul
or
push
imulb
mov
std
sbbl
les
mov
push
cld
mov
out
jns
jle
sti
es
cmc
incl
scas
dec
out
mov
lcall
loopne
shll
ret
adc
test
pop
subb
popf
shlb
mov
out
add
inc
jmp
jno
imul
pop
cmp
mov
mov
into
add
adc
pop
dec
in
jg
clc
outsl
cmpsl
jmp
dec
adc
mov
xor
inc
out
xchg
xchg
into
jne
dec
shrl
loope
add
cmp
stos
cmp
mov
fistl
mov
rorb
add
pop
lock
jmp
aas
fisttpl
jne
aam
rolb
data16
shll
bound
dec
ja
imul
push
fwait
hlt
mov
mov
jp
addb
mov
shlb
loop
push
mov
sbb
fdivl
jae
mov
or
pop
cld
ret
mov
cli
dec
mov
stos
daa
arpl
xchg
es
xchg
cltd
mov
aam
iret
push
inc
pushf
inc
push
adc
mov
shrb
flds
test
xor
pusha
shrl
fcoml
stos
into
mov
xlat
outsb
jle
adc
insl
push
mov
xorl
arpl
ds
push
testb
bound
into
inc
mov
lods
inc
div
xchg
sub
or
into
jns
xor
jae
stos
inc
cli
fwait
aam
int
aaa
into
jle
jae
pop
xchg
test
add
stos
jno
push
in
cmpsb
pushf
pop
out
int
mov
outsl
sbb
dec
out
xor
xor
popf
xor
shlb
mov
decb
and
dec
xchg
and
xchg
push
mov
or
cmp
jge
adc
into
aas
cmp
mov
dec
mov
push
mov
ss
fstpl
push
xchg
mov
xchg
pop
cmp
lods
jae
xor
int
aam
adc
movb
rclb
outsb
add
imul
es
mov
xchg
mov
xlat
and
or
aas
lods
cmp
loop
fnstenv
xor
pop
scas
pushf
push
mov
mov
je
or
jge
dec
pop
jno
cwtl
xchg
pusha
neg
fs
aad
cmp
sub
mov
sbb
rcrl
add
clc
push
sbb
rcrl
add
sbb
std
and
nop
xor
sbb
cmp
cmp
popa
mov
pusha
xchg
daa
je
out
popf
mov
cmp
shl
movsb
sahf
xchg
push
fstl
and
scas
inc
xchg
mov
mov
and
sbb
ja
cmp
shrb
push
cmp
sti
and
scas
daa
dec
pop
and
adc
outsl
sti
ss
dec
cmp
sbb
jecxz
addl
pop
sbb
cmpsb
pop
leave
popa
xor
cmp
add
sbb
sbb
jo
cmp
dec
mov
lds
mov
push
ret
sbb
sbb
cwtl
hlt
cmp
fisubs
cmp
mov
dec
mov
lcall
pop
rcrl
std
mov
and
add
int3
push
ljmp
and
push
subl
pusha
mov
mov
add
test
push
std
sub
and
lea
ds
leave
sub
popf
pop
pop
xchg
sub
cmpsb
rolb
mov
inc
xor
cmp
pop
dec
push
and
or
jl
sub
add
and
int3
imul
loop
add
lcall
jb
daa
lret
test
dec
push
cmp
in
cld
mov
repnz
mov
xor
popa
cmpl
mov
pop
icebp
add
test
es
pop
sub
sub
lods
int3
mov
gs
fbstp
xchg
es
fcmovbe
insb
or
lods
inc
cmpsl
sub
lret
cli
adcb
mov
ljmp
outsl
or
push
shll
bnd
add
enter
gs
lret
es
push
in
sbbb
jns
sbb
int3
mov
push
les
rcrl
fdivl
jae
outsl
mov
fcomip
lea
pop
xor
lea
adc
arpl
xor
lods
add
xor
push
mov
outsl
adc
lods
je
testb
test
lods
pop
mov
adc
fistps
pusha
shlb
mov
fs
out
and
or
mov
fstp
outsl
cmovo
lods
jno
testb
adcl
pop
mov
adc
mov
clc
loope
fwait
xor
adcb
jl
push
scas
push
sahf
clc
int
cld
jg
lds
dec
popf
xor
sbb
mov
mov
test
cmc
fnstenv
mov
testl
int3
gs
adcl
or
jo
sub
inc
ffree
pop
mov
stos
mov
imul
mov
adc
arpl
pushf
and
mov
leave
pop
or
inc
shl
orl
add
add
mov
movsl
jle
mov
cld
mov
dec
aam
rclb
push
ljmp
jno
jns
cld
xchg
call
or
mov
in
lods
inc
pop
pop
cmp
lea
bound
push
out
fists
jbe
xor
pop
sahf
pop
push
xchg
sub
cmpsl
mov
shlb
frstor
push
dec
out
test
mov
popf
xor
repz
and
mov
fbstp
fnstenv
cwtl
data16
leave
jl
mov
rclb
cmp
xor
pop
or
je
mov
paddsw
mov
cwtl
pop
jae
je
ret
shrb
or
aad
imul
mov
xor
cmp
mov
mov
out
and
dec
ss
cltd
push
dec
lods
lock
fnstsw
push
notb
test
pop
in
jnp
imull
or
mov
push
int3
sub
sbb
sub
inc
loopne
pop
cltd
loopne
dec
stos
cmove
dec
jg
mov
or
aaa
add
sbb
jo
sbbl
daa
push
sbb
rolb
movsl
xchg
inc
push
rcrl
adc
rcrl
sbb
inc
scas
lods
dec
push
movsl
lock
fidivl
adc
inc
loop
xchg
adc
xor
insb
add
test
shlb
fcoms
or
inc
xchg
xor
fs
pusha
call
or
jg
fsubrs
popf
mov
int
pop
scas
and
scas
incl
bswap
or
and
les
xchg
sub
aam
dec
or
outsb
add
sub
arpl
lea
push
jp
subb
or
mulb
sub
push
fxch
popa
or
lods
movsb
sub
jle
lds
leave
testb
pop
push
jmp
sub
sub
psubd
xor
popf
add
lods
in
adc
arpl
imul
add
sbb
sbb
pop
insl
mov
clc
out
ret
pop
add
adc
jns
push
mov
jo
dec
mov
pop
out
and
call
clc
mov
ljmp
cmp
out
add
push
in
jl
push
add
xor
mov
dec
pop
nop
xchg
mov
hlt
jbe
out
mov
xchg
cmp
int
daa
pop
sub
xchg
or
lahf
lret
cmp
shrl
xor
out
mov
push
hlt
dec
xchg
stos
and
into
add
in
add
fistpll
cltd
push
push
std
cs
stc
sub
dec
cmp
xchg
or
sub
sub
fisttpl
jne
js
push
fists
ss
pop
movsl
rcrb
mov
jmp
fs
dec
mov
inc
adc
add
rcrl
push
jg
sub
sub
mov
cmp
xlat
fsts
pop
cwtl
xor
xor
fucomi
xchg
mov
int3
cmp
xchg
loope
cmp
mov
inc
dec
arpl
push
pop
insb
sub
jl
mov
shlb
mov
sub
sbb
xchg
mov
subl
pop
fs
mov
std
push
xor
xchg
mov
jg
inc
loopne
mov
ljmp
mov
inc
xchg
xor
or
out
adc
or
cmp
stos
cmp
jl
pop
mov
sub
fdivl
fcompl
push
movsb
dec
lret
pop
dec
adc
fistps
inc
in
outsl
xor
inc
or
jo
jmp
in
add
data16
out
das
jl
negl
push
scas
xlat
mov
test
add
into
and
shl
sub
shll
int
fwait
and
lock
jae
jns
imul
xchg
aaa
ficomps
addl
adc
xor
outsb
sub
in
push
dec
in
shll
loopne
xchg
cs
pop
imul
ljmp
cmpb
xchg
push
lahf
pop
jecxz
out
iret
loope
clc
out
sbb
jns
enter
lcall
std
pop
es
dec
push
pop
inc
ficoms
sub
std
mov
jecxz
xchg
lock
in
scas
sub
inc
ret
sub
pop
ret
cmp
or
xchg
popf
gs
incb
cmpsb
and
cmc
jge
mov
out
imul
pop
and
fidivrs
aas
cmp
cli
xlat
jge
ret
loope
sub
xchg
outsb
shlb
dec
popf
adc
mov
out
repnz
fdivr
call
cmpsl
inc
xor
insl
inc
fwait
inc
dec
loope
enter
mov
pusha
xchg
pop
lret
mov
pop
inc
mov
cmpsb
cmp
pop
sarb
jl
stc
sub
sub
aaa
mov
mov
pusha
aad
cmp
movsl
out
mov
fwait
pop
test
insb
out
cli
xchg
inc
rcl
inc
adc
mov
test
cmp
jg
sbb
cmp
dec
dec
sub
sbb
imul
sub
cmp
rcrb
cwtl
xchg
add
cmpsb
sbb
repz
pop
mov
cmp
jmp
pop
sarl
and
hlt
pop
inc
push
add
xor
jbe
out
stos
xchg
jae
cmp
je
in
imul
pushf
cmp
xor
aaa
mov
dec
push
add
xor
jp
mov
fbstp
inc
sub
je
mov
mov
imul
call
fdivrl
daa
add
and
adc
dec
cwtl
movsl
xor
mov
sti
jecxz
push
jmp
cwtl
sbb
mov
daa
jae
sub
pop
fidivrl
pop
jmp
stos
cmpsb
and
mov
faddl
jo
sahf
and
inc
sub
lret
clc
jns
pavgb
sbb
push
fisttpll
imul
jmp
clc
pop
clc
sbb
inc
imul
ljmp
push
lret
shll
test
push
lods
inc
jg
adc
push
add
dec
add
mov
test
aaa
jle
push
add
bound
xchg
in
sbbl
add
push
cld
arpl
mov
testb
dec
adc
outsb
jmp
sbb
xchg
cmpsl
jne
push
cmp
pop
add
jbe
outsl
or
sub
jmp
call
cli
inc
or
and
gs
sub
pusha
nop
jp
sub
ret
shrb
push
jp
inc
cmp
dec
adc
jb
fisttps
sti
cmp
js
repnz
les
cmpsl
test
repnz
int
repnz
push
out
ljmp
in
ljmp
test
sbb
inc
push
pop
and
addr16
ljmp
addr16
adc
sbb
test
push
jecxz
push
lods
sbbb
aad
dec
jns
rcll
sbbl
xchg
adc
lds
cld
dec
cmpsl
pop
test
push
mov
popa
in
div
call
test
cmc
adc
mov
cmp
je
rolb
fwait
and
jne
fcoms
ret
pop
es
popa
clc
pop
mov
nop
and
cmp
pop
sub
mov
dec
enter
std
cli
sbb
or
mov
sahf
xchg
push
repnz
adc
jl
cltd
mov
in
mov
fbld
and
mov
out
xchg
or
push
adc
imul
xchg
stos
std
mov
mov
in
int
repz
jne
inc
frstor
sti
jmp
fsubp
shrb
xchg
dec
scas
xchg
pop
mov
xchg
insb
sub
sahf
mull
mov
lea
in
ds
push
clc
xchg
cmp
cmp
add
addr16
adc
fisttps
inc
fstp
adc
or
testb
inc
cmp
xchg
test
add
xor
mov
test
push
repnz
pop
and
icebp
mov
jecxz
xchg
mov
test
fcmove
ds
sti
adc
sub
pop
hlt
push
dec
xor
jle
jnp
mov
les
in
stc
mov
adc
inc
add
cmp
enter
pop
adc
jns
jl
add
add
push
push
in
push
outsb
pop
sbb
and
push
fnsave
cmp
sti
das
pop
cmp
dec
mov
scas
push
cltd
xchg
ret
inc
pop
or
push
sub
sahf
xor
jle
mov
imul
xrelease
inc
push
movsl
ja
push
lods
add
es
push
jmp
loope
jns
jmp
outsb
lret
jo
std
popl
es
loop
cmp
lods
inc
movsb
xor
lret
testl
xchg
or
cs
pop
mov
cmp
mov
inc
faddl
pop
out
add
cli
xchg
and
or
out
xchg
add
data16
lret
sub
or
and
pop
dec
inc
sbb
xor
push
inc
push
sub
push
inc
sti
cmc
xor
and
and
adc
int
outsb
std
xchg
lcall
jbe
push
inc
jecxz
cwtl
adc
mov
xchg
ficoml
cmpsb
ljmp
mov
jb
loopne
adc
lds
je
insb
rol
aad
mov
xor
mov
outsl
mov
mov
fcmovnb
mov
stc
adc
aaa
adcb
inc
mov
xor
int3
fnstsw
and
fidivl
inc
adc
mov
xor
xlat
push
lods
or
dec
in
sub
pop
cmp
jl
jmp
mov
fildll
and
fs
inc
cmpsl
test
jnp
enter
fadds
cltd
or
orb
mov
outsl
pop
sahf
mov
shll
bound
rol
add
ret
xchg
shrl
jno
ja
out
xchg
add
jo
lods
movsl
pop
repz
mov
fnsave
push
inc
fisttpl
sub
rcrl
xchg
sub
sub
sub
lret
inc
fisttpll
sub
outsb
sahf
scas
loopne
mov
popa
jbe
fwait
push
dec
jecxz
inc
push
jmp
fs
ja
in
repz
pop
cld
lret
jecxz
stc
sbb
adc
and
test
scas
xor
pop
lock
es
add
push
push
jmp
insl
mov
or
mov
inc
je
jge
lea
inc
inc
fdivs
in
sbbl
dec
rcrb
adc
aas
pop
mov
mov
push
rcll
or
cmpsb
ja
sbb
fwait
xor
fnstenv
adc
sub
mov
fistpll
iret
sarb
fidivl
jl
inc
scas
inc
adcb
imul
dec
pushf
repnz
xchg
push
mov
inc
xlat
out
mov
mov
pop
test
nop
jne
and
insl
arpl
mov
xchg
mov
mov
pop
and
test
dec
xor
clc
popl
stc
nop
test
push
mov
push
insb
sub
inc
xlat
adc
xor
mov
push
and
inc
or
fcompl
insb
dec
jnp
mov
pop
inc
lret
jle
push
jo
cmc
mov
es
pop
scas
sub
or
leave
sub
cltd
xor
pop
fidivs
jb
cmpsb
stos
jno
insl
arpl
push
ja
iret
data16
js
xor
jne
mov
sub
cmc
stos
loop
sbb
mov
mov
inc
fisubrl
iret
xchg
rcll
and
loop
jae
shll
icebp
cmc
rclb
jno
mov
push
mov
js
mov
xchg
xor
fs
test
and
les
jecxz
in
fcom
push
testb
pop
cltd
xor
or
or
cs
mov
jle
sbb
xchg
sub
aam
lahf
adc
mov
pop
repnz
adcl
mov
push
dec
loope
lahf
out
adc
das
mov
lds
mov
push
ljmp
fnsave
push
jmp
std
push
in
out
and
xchg
orl
fnsave
lret
bound
ss
inc
test
and
enter
push
int
dec
loopne
out
mov
loopne
push
ljmp
pop
cmc
dec
xchg
mov
add
daa
es
mov
push
popf
sub
ljmp
pop
daa
mov
pop
jno
popf
test
and
push
popf
cmc
iret
movsb
cmp
push
xchg
sub
test
in
mov
push
in
lods
pop
jle
test
enter
cmp
fs
push
rorl
add
in
aad
adc
jns
jns
aaa
into
mov
enter
lods
inc
mov
repz
mov
inc
fadds
push
lods
inc
inc
stos
aas
loopne
in
test
inc
fdivl
pop
xor
orl
xchg
sub
and
sbb
call
mov
sbbl
pop
insl
add
imul
into
push
pop
mov
add
pop
mov
fneni(8087
ja
and
xchg
movsb
push
popf
fidivs
adc
mov
dec
ds
pop
sbb
jnp
cmp
pop
sbb
push
jecxz
aad
popl
xchg
add
xchg
xchg
push
std
mov
push
popa
inc
mov
cmp
aaa
into
cmp
test
sub
ds
jg
std
adcb
pop
adc
popf
test
mov
sbb
testl
mov
fisubrs
sar
iret
or
fwait
jecxz
popa
clc
aad
adc
jne
mov
cmp
lea
popa
clc
lcall
mov
cmp
or
aad
xor
popa
push
ljmp
xor
xchg
pushf
mulb
xchg
xchg
pop
inc
test
add
lods
lret
insb
add
into
scas
inc
rclb
push
ret
hlt
sbb
in
jp
cmpsb
push
loop
js
dec
fbstp
push
movsl
or
mov
pushf
lock
das
xor
pop
mulb
push
cmpsl
ds
lret
icebp
gs
jecxz
lahf
inc
fcmove
ja
dec
imul
cld
aas
daa
mov
mov
in
scas
outsb
add
pop
inc
add
xor
inc
andl
into
pop
insb
xchg
sub
adcb
mov
addr16
inc
outsb
add
nop
or
nop
and
testl
mov
dec
inc
fimull
or
outsb
sbb
push
hlt
mov
loop
mov
and
xchg
test
push
loopne
adc
iret
inc
cmp
mov
inc
jg
adc
dec
add
repnz
inc
ficompl
out
test
cmpsl
sbbl
mov
cmpsl
lods
inc
or
mov
loopne
mov
adc
adc
in
fbstp
add
mov
in
adc
bound
icebp
mov
mov
das
sbb
inc
dec
push
mov
sbb
je
push
scas
testb
mov
shrl
sahf
sbb
mov
negl
sub
popf
jl
xlat
outsb
xor
mov
cmp
lea
rcr
jb
push
fnstenv
jl
sub
adc
cltd
xor
and
xchg
imul
out
sub
push
inc
testl
dec
scas
popf
xor
outsb
pop
popw
scas
fwait
cmp
repnz
mov
and
push
call
lods
mov
or
add
fistpll
rcl
and
es
icebp
out
jecxz
pop
inc
add
jg
repnz
adcl
xlat
outsb
or
mov
popf
insl
inc
inc
cmp
jnp
and
dec
arpl
push
inc
pop
sub
ss
mov
pop
jecxz
dec
loopne
cwtl
jne
leave
scas
jne
and
test
lret
xor
cltd
xor
repz
dec
loop
push
imul
dec
mov
push
out
dec
cli
xchg
jle
insl
aam
cmp
mov
push
sub
testb
out
push
dec
inc
lret
sub
push
dec
xor
jge
xchg
sbb
add
movsb
mov
in
cmpl
pop
out
enter
fucomip
or
loope
fcomps
ffree
push
movsl
xor
shr
ljmp
and
enter
lock
inc
fistl
inc
fcoml
jo
fdivs
sti
xchg
leave
scas
aas
das
jmp
in
mov
sub
push
adc
adc
insb
add
out
mull
int3
inc
sbb
roll
inc
lret
ret
mov
rclb
fs
cmp
fadd
outsl
sbb
pop
faddl
mov
and
loop
lds
mov
xchg
cmc
xchg
cmpsl
inc
mov
add
stc
dec
out
pop
cltd
xor
dec
ja
jge
scas
inc
mov
pop
fcomip
mov
jecxz
es
xchg
shrb
out
data16
fbstp
lods
inc
popf
inc
mov
jbe
shrl
sarl
lds
jp
mov
adc
xchg
ds
gs
call
cmp
ss
cwtl
das
test
hlt
mov
or
cmp
mov
stos
push
adc
das
test
push
in
push
icebp
mov
mov
sbb
test
cmp
stc
aas
shll
cmc
cmp
pop
jl
insl
pop
lcall
xchg
fidivl
xor
and
std
jle
pusha
mov
call
out
jne
add
hlt
mov
and
lahf
mov
and
leave
outsl
xor
shrb
setns
or
scas
inc
jp
inc
fldcw
jmp
addb
mov
testl
testb
sbb
jne
out
mov
push
jmp
aam
sub
jp
stos
in
cmp
insl
rorl
addr16
dec
fimuls
stos
outsb
lods
lret
sti
xor
adc
mov
cli
roll
pop
and
add
imul
pop
or
push
cwtl
push
xlat
mov
icebp
jle
mov
enter
imul
sti
cs
add
jae
outsl
mov
dec
cmpsl
jle
sbb
pop
fildll
les
jo
jb
jo
push
pop
and
cmp
mov
inc
out
pop
or
test
or
sbb
push
lret
jae
mov
lds
dec
outsb
jbe
push
add
nop
push
and
gs
inc
ret
je
unpcklps
and
out
sub
sbb
xchg
pop
or
sub
clc
and
fsubr
dec
out
stc
movsb
cmp
aad
repz
popf
xor
add
mov
jecxz
orb
jbe
nop
fwait
pop
hlt
or
out
xchg
fiadds
jmp
xchg
add
and
jg
fsubrs
lret
xor
dec
rcl
addr16
rclb
cs
pop
lock
hlt
adc
push
out
add
adc
fdivl
xor
scas
and
dec
in
in
lcall
ds
add
scas
jae
dec
in
imul
lods
in
inc
mov
lcall
sarb
sti
adc
sahf
cmpsb
mov
xchg
add
jns
fsubs
stc
jl
std
xchg
fistps
outsb
add
pusha
fiadds
jo
xor
sti
inc
push
loop
push
fs
lods
cmp
fs
push
call
incb
xchg
sub
iret
xchg
sub
cltd
or
lds
cltd
div
xor
int
cmp
dec
out
push
jmp
dec
aad
ljmp
and
push
imul
dec
mov
adc
adc
sti
xchg
in
adcl
dec
mov
dec
sub
push
xor
jns
leave
test
mov
fcmovb
aaa
jmp
pop
test
ror
fstps
add
mov
aas
add
pop
scas
leave
call
es
cld
addr16
std
push
mov
pop
push
dec
in
jnp
sub
das
iret
xor
scas
pop
push
movsl
cmp
jnp
int
cmp
push
out
cmp
sbb
popa
in
or
out
insl
add
ja
out
data16
xchg
push
in
mov
jnp
test
popa
out
push
xchg
mov
pushf
push
les
js
popf
inc
fmull
out
fsubs
dec
in
cli
jae
in
popf
xchg
sub
push
mov
dec
scas
popa
mov
inc
rol
push
jecxz
lods
inc
pop
add
dec
fwait
jge
inc
scas
mov
or
std
sub
lret
and
sub
inc
dec
add
adc
pop
test
jns
adc
add
jae
fnstenv
cmpsb
lods
inc
sbb
mov
jmp
or
xchg
cmp
mov
jmp
pop
push
dec
mov
xor
bound
aam
inc
lods
xchg
dec
shll
and
xor
pusha
les
loopne
and
into
dec
mov
cld
adc
stos
cmpb
mov
sbb
dec
dec
sarb
aad
ret
ljmp
adc
shll
or
inc
mov
lods
inc
xchg
lods
mov
and
mov
call
into
les
aaa
loope
test
add
pop
jb
call
dec
lods
jae
and
jae
lahf
mov
jae
sub
pop
pushf
shrl
call
outsb
ret
aas
mov
movsb
cmp
sbb
sahf
insl
add
ss
cli
xchg
xchg
mov
or
inc
clc
cmc
insb
fisubs
rcll
repz
or
int3
lea
out
xlat
outsb
into
xor
cmp
mov
out
ret
pop
rolb
fcoml
mov
into
or
ret
pop
push
sub
je
ret
pop
jl
sub
dec
pop
lock
jb
mov
cwtl
das
cli
and
lret
bound
insl
add
outsb
xchg
aaa
pop
repnz
leave
outsb
add
adc
repnz
adc
sub
push
in
movsb
dec
sti
xchg
jnp
je
pushf
jg
sub
out
xchg
dec
mov
add
ja
inc
test
lret
aad
icebp
mov
idivb
add
out
ds
cmp
fnstenv
fwait
jns
and
cwtl
das
or
cs
jns
pop
inc
xchg
mov
and
xchg
dec
inc
lret
bound
test
aaa
jae
sub
pop
mov
jb
nop
fidivl
mov
mov
imul
jbe
mov
jbe
cmp
data16
test
xchg
and
sbbl
popa
jae
jle
andb
fldl
jo
dec
popa
int
mov
inc
out
insl
mov
fdivp
mov
mov
outsl
push
stos
and
imul
mov
xchg
xchg
cmpsb
shl
cmc
mov
icebp
pop
repz
xchg
lock
sbb
ss
cmp
cmp
jg
and
mov
fs
std
pop
loope
xchg
push
adc
add
daa
lret
sub
lds
mov
and
pop
xchg
inc
ds
push
in
pop
xchg
jl
sub
pop
call
pushf
xor
iret
add
pop
or
jnp
test
mov
test
pop
pushf
xor
jae
lret
nop
in
es
testb
add
daa
sub
clc
fimull
jae
sti
xchg
push
jmp
pop
mov
shrl
xlat
mov
in
xchg
sub
movsb
jecxz
movb
cwtl
repz
jecxz
xor
leave
lods
repz
nop
xchg
sub
push
sbb
sahf
or
daa
mov
stos
sub
daa
mov
dec
cli
adc
xchg
call
xchg
icebp
mov
rcrl
mov
ja
je
xor
mov
lcall
clc
data16
pop
xchg
and
stos
xchg
ret
fmuls
or
xsha1
cmpsb
mov
push
in
or
mov
cmp
pop
scas
js
and
pop
lahf
push
xchg
loop
outsb
scas
jecxz
test
xchg
mov
fstpl
mov
enter
jp
mov
dec
xor
jnp
cmp
std
pushf
push
call
lea
das
jns,pt
jmp
mov
cwtl
das
loopne
cmp
sbb
sub
enter
jmp
cmc
stos
dec
loop
data16
push
leave
jb
mov
xchg
push
mov
in
lods
inc
loopne
push
jmp
push
sti
insl
add
ret
sub
shrl
xchg
rcrl
fsubrs
xor
push
sbb
testl
insl
shrb
mov
cs
sahf
ja
movsb
data16
mov
inc
out
dec
inc
ficomps
pushf
xor
mov
push
in
data16
scas
fbstp
inc
cmp
push
adc
cmp
cmpsl
push
pusha
idiv
mov
sbbl
push
jmp
cmp
ret
mov
in
test
sub
mov
dec
lods
lods
sbb
fmulp
loope
shlb
pop
jns
pop
imul
inc
aad
lret
push
push
inc
dec
cli
xchg
aas
sti
mov
mov
cs
sahf
das
rclb
inc
fstl
xchg
push
push
aas
adc
jo
sbb
pop
push
push
mov
adc
fsubrs
cltd
ret
enter
jmp
stc
push
sbb
icebp
mov
arpl
xchg
mov
sub
cs
leave
sbb
mov
fdivs
sbb
dec
test
sub
enter
jbe
adc
inc
dec
jne
dec
data16
fwait
xor
xchg
jne
push
out
test
jmp
bound
push
dec
jae
xorl
rcrb
icebp
or
nop
cmp
mov
sti
rclb
ds
repz
je
faddp
pop
adc
andl
dec
loopne
subb
fdivl
out
gs
inc
fnsave
testb
adc
je
xchg
xchg
add
jnp
mov
pop
mov
mov
dec
ret
cli
sub
fstpt
pop
mov
cmc
mov
in
mov
add
sbb
test
xchg
call
outsb
xchg
fdivrs
orl
scas
cs
sbb
scas
sub
or
fsubrl
fwait
loopne
out
pop
lods
xchg
popa
movsb
push
jl
cwtl
dec
aam
push
ret
js
repnz
imul
pusha
mov
fstl
mov
inc
pop
xor
arpl
mov
inc
fiaddl
dec
rorl
sbb
add
inc
jp
xchg
inc
inc
imul
jae
pop
sti
pop
aaa
dec
les
das
movb
or
lods
arpl
ss
inc
lds
sti
sub
push
sub
ret
bound
movsb
pusha
xor
aad
adcl
mov
ss
mov
sahf
movsl
aam
sbb
call
dec
int
jecxz
outsl
test
mov
repz
stc
lods
cmp
pushl
pop
sahf
mov
fidivl
jl
mov
sbbl
out
test
js
scas
cmpsb
add
mov
pusha
movsl
and
add
mov
repnz
xor
and
push
inc
loope
and
pop
scas
mov
adc
xchg
nop
daa
dec
add
push
xchg
dec
pusha
call
jb
sub
sti
xchg
jae
lds
roll
mov
loopne
ds
out
mov
xchg
xor
xor
jne
adc
and
out
push
or
mov
sti
push
lds
xor
leave
lret
lcall
sub
sbb
jo,pt
dec
sbb
mov
mov
ret
mov
ret
hlt
jno
fsubrs
xchg
push
out
sbb
or
mov
imul
pop
jp
lahf
inc
pop
loope
push
inc
jp
jae
mov
aaa
aaa
leave
pop
test
inc
add
ljmp
out
or
in
pop
ljmp
xor
call
cmp
mov
fcmovnbe
cmp
xchg
push
jmp
lea
or
pop
idivb
arpl
xor
or
gs
pop
xchg
fildll
shlb
enter
xor
das
pushf
xchg
mov
enter
aaa
imul
sbb
sbb
mov
in
test
push
shrl
dec
outsl
push
inc
jl
pop
outsl
lods
pop
mov
dec
jecxz
imulb
fwait
or
mov
xchg
jbe
sub
mov
orb
xchg
cmp
push
and
jae
ss
call
dec
aaa
sub
add
pushf
mov
or
cld
adc
bound
lds
inc
pushf
cwtl
dec
xor
lahf
push
pop
xchg
mov
ja
inc
or
gs
jp
nop
inc
aas
bound
inc
rcr
mov
int3
jle
inc
and
jb
add
subl
mov
mov
repz
cwtl
xor
jl
add
xor
add
les
or
roll
or
outsl
fnstenv
loopne
mov
add
xchg
or
xchg
dec
or
mov
repnz
and
cmpsl
and
mov
mov
mov
add
int3
mov
jae
push
rcll
out
into
cmp
mov
pop
mov
push
out
mov
cmp
into
mov
push
push
lods
in
fistpll
add
cli
cwtl
rcrl
mov
push
fsubl
adc
lods
sti
loopne
sub
js
jae
movsl
bnd
dec
mov
jl
push
cwtl
jge
adc
nop
daa
sti
mov
bound
lret
push
add
movsb
sub
push
and
pop
jmp
sbb
and
jmp
or
lods
xchg
cmp
test
jne
out
out
pop
pop
repz
scas
or
push
pcmpeqd
fisubs
and
lea
insl
add
lock
mov
mov
xchg
lds
rolb
inc
inc
jnp
scas
repz
mov
bound
mov
arpl
outsb
inc
jb
movsb
pop
jnp
xchg
inc
mov
mov
scas
fistps
push
stc
decl
or
add
mov
and
fidivl
lea
xchg
fs
out
xchg
sahf
inc
and
ss
mull
xor
mov
sbb
add
sti
and
arpl
aas
js
xchg
push
ja
jmp
loopne
lock
mov
outsb
add
xchg
roll
mov
inc
pop
jo
xor
insb
add
clc
imul
sub
mov
pushf
jno
inc
jecxz
lock
add
out
dec
sar
sbb
and
xlat
fisubrl
xor
adc
jmp
test
push
arpl
sub
jno
ss
add
in
inc
dec
roll
add
mov
lds
ret
sbb
inc
xor
rcrl
stc
in
sub
add
mov
adcl
xchg
jb
push
in
xchg
lds
popf
inc
mov
nop
popf
push
enter
cli
push
xor
jbe
cmp
sti
mov
mov
mov
int3
call
data16
and
cmp
rclb
xlat
outsb
sub
shll
ret
popw
inc
or
repz
dec
inc
xchg
cld
fcmovb
std
scas
pop
xor
fcoms
idivb
sbb
inc
out
mov
adc
xor
pop
iret
xchg
pop
cmp
movaps
pop
mov
mov
test
test
rcl
push
sub
sbbb
lods
js
out
mov
pop
push
dec
adc
inc
cwtl
pushf
inc
test
fstpl
add
bound
jne
mov
pop
xchg
idivb
or
lret
jle
lcall
xchg
cs
jle
mov
jae
or
push
shrb
pop
outsb
ljmp
dec
adc
dec
adc
xchg
cmpsb
test
inc
mov
mov
mov
fs
int3
xchg
repz
fstps
sbb
and
and
loop
popa
jge
insb
pushf
xchg
xlat
pop
scas
fildll
or
imul
outsb
mov
dec
mov
mov
push
or
test
add
cmp
cmp
add
sub
fadd
std
or
data16
inc
sbbb
test
cli
loope
mov
mov
es
int
stos
xor
icebp
mov
loopne
in
push
mov
cmpsl
push
fstpl
inc
jne
fs
jecxz
dec
push
movsl
jns
cmp
in
cltd
aaa
movsb
mov
inc
fiaddl
cmp
adc
adc
xchg
mov
call
lea
shlb
or
iret
xor
push
add
adc
pusha
lods
push
dec
loop
aam
jo
test
fbstp
push
xchg
jnp
ret
in
xor
jp
mov
xor
cmp
in
mov
push
int3
xor
pop
dec
push
inc
jg
adc
je
lret
xchg
insb
pop
push
inc
daa
sbb
into
mov
pop
or
orb
lock
mov
loopne
mov
xor
outsl
pop
out
mov
insl
mov
push
jnp
adc
push
inc
rcrl
lret
mov
sbb
fstpl
push
nop
ret
xor
sarl
sbb
out
sub
add
scas
inc
adc
mov
inc
mov
mov
cwtl
mov
inc
inc
lds
sub
test
jb
cmpb
outsb
inc
movsb
mov
mov
in
pop
arpl
push
aam
jmp
test
icebp
mov
push
loopne
jae
icebp
movsb
push
movsl
stos
mov
mul
int3
adc
xchg
xchg
lock
and
dec
aaa
stos
popa
sub
les
pop
out
xchg
lods
pop
push
push
jbe
xchg
fsubl
mov
pop
push
mov
inc
pop
imul
jge
mov
movsl
stc
inc
das
fs
add
lds
inc
mov
lods
jp
in
leave
xor
or
imul
xor
inc
add
or
ficompl
cmp
jnp
fnstenv
xchg
jne
leave
and
in
add
repz
mov
adc
cld
daa
push
lods
imul
mov
push
in
dec
mov
ja
fwait
jecxz
adc
stos
xor
adc
dec
mov
add
jo
mov
pop
test
add
lret
xor
movsl
add
sbb
ds
sub
sub
mov
mov
and
add
test
testl
sbb
je
or
jg
addr16
rcll
add
xchg
inc
popa
sahf
pop
or
scas
cmp
lods
mov
pusha
cwtl
inc
insb
add
inc
xlat
in
movsl
and
and
imul
fcomps
jae
push
jns
and
xor
mov
jge
addb
lods
xor
jp
repnz
loop
mov
outsb
out
gs
addr16
fdivrs
and
out
push
mov
ss
and
sub
jp
mov
mov
out
subl
adc
push
jmp
dec
sbb
jbe
jno,pn
cmp
push
jnp
adc
add
push
mov
dec
and
loopne
xor
cmp
ret
mov
lock
jmp
out
aam
ja
lds
ret
adc
aam
out
cs
orb
mov
cmpsl
push
mov
lods
or
mov
rcrl
cmp
sub
add
cltd
or
xor
jmp
mov
inc
sbb
fisttpl
stos
jae
pop
cmp
inc
inc
imul
mov
ret
subl
aad
push
pop
push
and
das
leave
push
xchg
movsl
cmpsb
push
inc
cmp
mov
andl
mov
add
stc
clc
mov
cmp
cmc
out
cmp
mov
jo
loopne
sub
jnp
dec
les
cmpsl
shlb
leave
mov
je
repnz
xor
mov
mov
in
bnd
aad
sub
mov
inc
mov
mov
bound
and
cmc
cwtl
popa
aam
ficompl
mov
psrld
out
test
or
mov
push
clc
popa
arpl
int3
jge
ljmp
adc
or
rcrb
xchg
sbb
mov
jns
pop
pop
enter
push
jo
daa
fcmovbe
pusha
push
popf
xchg
repz
jl
movsb
cmp
add
mov
ret
xchg
xchg
loopne
sbb
and
scas
gs
pop
add
int
mov
les
repnz
pop
fxch
das
cmc
dec
xchg
cli
arpl
and
cmp
and
enter
test
insl
loop
stc
mov
mov
rsm
jg
cmp
ljmp
lods
pop
or
mov
mov
sub
jns
dec
add
jbe
mov
leave
jnp
mov
pop
xchg
inc
pop
push
lret
subl
fstpt
push
aad
mov
mov
mov
fisttpl
shll
cli
daa
and
push
adc
or
mov
mov
je
lods
pushf
xor
and
add
adc
sub
hlt
ficompl
hlt
data16
sbb
movsb
jmp
add
xor
icebp
lea
mov
shl
shrb
xchg
out
fnsave
fs
mov
mov
mov
scas
aad
xor
in
imul
and
xchg
pop
mov
cmp
mov
imul
mov
arpl
xchg
fsubrs
and
imul
mov
push
movsl
mov
rep
scas
fwait
xor
ret
dec
fisubs
cmp
xor
lret
inc
jmp
movsl
mov
push
roll
mov
imul
cmp
adc
adcl
push
pop
push
mov
or
xlat
cmp
pop
pop
fwait
inc
push
sahf
sbb
push
movsl
lahf
dec
ljmp
divb
out
lods
loop
push
aam
in
mov
loopne
mov
xor
add
enter
pop
hlt
push
xor
je
cmp
push
movsb
inc
sbb
add
addb
jns,pn
ja
loopne
cmp
jo
dec
push
mov
mov
dec
xchg
add
sub
fmull
rcll
test
adc
loope
fwait
or
loope
jb
std
jb
cwtl
push
and
sub
xchg
mov
add
adc
xchg
add
mov
jb
xor
nop
divb
sbb
imul
hlt
cmpb
pop
jne
and
and
test
or
stc
and
ret
fsts
das
pop
not
clc
lret
das
daa
movsl
imul
scas
pusha
sbb
daa
mov
test
test
sbb
jcxz
mov
push
jb
pop
loopne
imull
icebp
mov
pop
cmc
cmp
push
lods
inc
jp
je
xlat
loopne
add
shr
jno
out
cmpsb
sbb
loop
push
in
loopne
test
in
les
or
push
int
ret
int
push
in
out
mov
rolb
clc
mov
pop
xor
jl
mov
repnz
mov
in
cmp
pop
popf
inc
mov
dec
lret
stos
stos
cmpsl
xchg
push
add
mov
pop
pop
pop
fwait
dec
push
imul
adc
dec
sub
and
pop
std
sahf
sbb
pusha
and
enter
mulb
lea
mov
cmp
add
test
loopne
in
mov
pop
not
mov
test
mov
popf
and
clc
push
mov
dec
mov
pop
cmp
adc
jae
pop
cmp
pop
push
or
and
pop
inc
pop
prefetcht1
xchg
push
ds
xor
add
ss
inc
ds
idivl
xor
mov
xchg
lods
dec
jnp
push
out
sub
lods
adc
xchg
cmp
and
imul
cmp
add
dec
inc
aaa
loope
xchg
adc
dec
shl
push
jno
ss
or
add
mov
mov
das
adc
test
xchg
stos
inc
mov
inc
cld
in
adc
mov
mov
mov
clc
lods
push
fcom
negl
sbb
arpl
xor
push
jle
lds
je
inc
or
cwtl
insl
mov
mov
cli
mov
pop
sub
dec
les
test
push
xor
jo
idivl
shlb
and
or
scas
hlt
adc
mov
insb
stos
mov
mov
stos
sysenter
jnp
or
pop
sub
pop
jp
dec
lods
jl
inc
ljmp
pusha
mov
xchg
cmp
insb
in
xchg
ja
xor
in
lock
sub
sbb
mov
repnz
rcrb
inc
daa
jge
repz
outsl
push
sub
ret
jle
push
sbb
mov
xor
clc
es
ret
adc
and
xor
jge
sbb
cs
or
popa
ds
ljmp
sar
add
or
push
xlat
repz
int3
jnp
paddsb
insl
lds
mov
lods
lea
or
add
pop
scas
mov
adc
inc
jecxz
ljmp
movsl
add
movsl
mov
push
mov
and
cmp
or
pop
mov
outsl
rol
leave
addr16
mov
jns
sbb
jecxz
pop
fadd
popf
xor
repnz
cmp
std
add
cmp
cltd
cmp
pop
sahf
jb
iret
dec
mov
jecxz
pop
ret
daa
nop
jecxz
out
ja
or
adc
stc
iret
test
aas
je
in
xlat
je
or
inc
pop
nop
mulb
repnz
call
scas
jo
int
dec
hlt
mov
or
jmp
mov
adc
les
aam
jmp
jb
stc
rol
inc
mov
mov
xor
adc
lock
imul
and
out
xor
jge
inc
xor
enter
das
insl
pop
lds
cmp
push
cmp
lods
inc
mul
fwait
inc
adc
rorl
xchg
dec
sbb
daa
fnstcw
jnp
mov
leave
dec
jecxz
sub
lcall
cmp
xchg
inc
inc
pop
idivb
jge
jo
jecxz
pop
jae
inc
xchg
insb
out
sahf
mov
add
push
pop
outsb
hlt
rcll
add
test
arpl
xor
lcall
scas
dec
mov
loop
jns
sub
adc
pop
fbstp
sub
cmp
adc
lock
inc
dec
lock
imul
xor
push
data16
pusha
inc
shrb
xor
idiv
aam
jno
ror
mov
xchg
add
jbe
or
loop
inc
arpl
imul
sub
inc
add
insb
mov
cld
push
std
xchg
adc
pop
jmp
or
xchg
mov
ret
fbld
sbb
add
lock
loope
lds
mov
loope
insl
fwait
inc
cmpsb
shrl
inc
jle
ds
sub
inc
cmpl
jns
push
cli
xchg
xchg
xor
mov
std
mov
test
stos
cmp
pop
adc
add
mov
pop
jecxz
add
xlat
and
mov
aas
pop
stos
jecxz
fnstsw
hlt
lods
incb
cwtl
das
into
jnp
add
mov
and
aam
gs
xchg
xchg
cmp
push
sbb
stc
add
call
icebp
cmpsl
in
cmp
daa
call
hlt
js
test
inc
rcrl
aas
sbb
pop
mov
push
adc
fdivrs
dec
or
call
cld
jnp
push
jmp
pop
lods
xchg
push
mov
dec
data16
pop
stos
lret
pop
add
aad
ja
lods
ds
int
cwtl
cmpsl
inc
adc
mov
jg
mov
in
aam
jl
push
ss
shlb
sub
mov
mov
loopne
xchg
repnz
dec
insb
cmpsb
std
nop
insl
inc
xchg
insl
cmc
popf
xor
xchg
arpl
sbb
push
cld
stos
inc
lret
test
mov
fwait
dec
in
cltd
loop
lcall
cmp
in
leave
lahf
addr16
lock
xor
lcall
adc
insb
or
popf
jns
lret
jno
cltd
test
aam
pop
ret
cmp
xlat
cmpsb
sbb
sub
lahf
js
cwtl
daa
mov
iret
xor
push
adc
or
mov
stc
cmp
notb
mov
test
and
push
and
pop
loope
clc
and
cld
popf
andb
es
ss
xor
pushf
add
repz
add
fs
lea
js
imul
hlt
jno
int
mulb
adc
cltd
push
xchg
push
cmc
data16
push
jo
sti
inc
pop
aaa
mov
hlt
cwtl
mov
xor
pop
pushf
jae
xor
cmp
mov
out
ljmp
jmp
pop
mov
ret
hlt
push
clc
dec
popa
push
sub
push
mov
lcall
fsubrl
cmp
pop
xor
sub
aas
pop
push
dec
push
ss
cmp
pop
fwait
xchg
and
or
adc
fldl
into
popa
and
or
sahf
xchg
call
jnp
or
insb
sub
nop
push
xchg
dec
out
ret
cmp
pop
jecxz
int3
fisubs
jg
ss
add
sub
addr16
xchg
mov
sub
fucomp
decl
mov
pop
xor
cmpsb
negb
scas
adc
cmpsl
clc
xchg
xor
dec
adc
or
int3
xor
jge
shl
iret
mov
push
push
pop
xor
int
ret
xchg
inc
inc
and
fldt
xchg
cltd
cli
mov
jmp
test
mov
pop
dec
bound
sub
push
scas
popl
push
pop
and
pop
cmp
test
push
in
pop
pop
imul
repnz
sbb
cmpsl
das
or
mov
ds
jno
cmpsb
push
xchg
pop
mov
in
add
inc
popa
xor
mov
ja
sbb
inc
inc
cli
xor
cmpsl
jle
aaa
cmp
xchg
imul
inc
inc
arpl
test
cwtl
mov
insl
mov
stos
out
fs
scas
in
jne
stos
fwait
mov
outsb
add
pusha
xor
jne
adc
out
movsb
sarl
jb
pusha
mov
cmp
mov
cmp
jecxz
imul
pop
mov
ja
cwtl
xchg
push
jle
lds
pop
shlb
sbb
pop
aas
pop
jae
mov
aam
js
and
cmp
jecxz
or
cmpsb
xchg
jns
push
mov
add
sub
or
push
fcompl
mov
jbe
fmuls
cmp
pusha
cmpb
loopne
sbb
mov
jb
aam
jmp
movsb
xchg
sub
inc
pop
jecxz
and
inc
push
lods
add
mov
sub
scas
popf
out
adc
iret
cmp
lcall
dec
inc
popf
push
dec
call
into
jno
mov
scas
push
or
mov
out
nop
das
xor
pop
jae
inc
dec
add
jae
and
xchg
mov
mov
cwtl
das
popf
rcr
jl
sti
cs
in
movsb
push
cmpsl
les
arpl
mov
sbb
ret
jno
cmpsl
loop
adc
xchg
mov
sti
mov
fmulp
add
insl
push
or
adc
roll
push
push
push
fildll
fs
pusha
pop
les
jmp
pop
int3
movsl
mov
aaa
das
jecxz
aad
mov
pop
ss
jge
add
out
sbb
pushf
std
xchg
dec
mov
mov
jo
mov
cmp
jle
mov
mov
push
aaa
leave
push
je
mov
mov
pop
xor
stos
sub
inc
mov
sub
std
orl
mov
sub
loop
cmpsb
into
imul
fsubr
int
test
jne
add
add
mov
pop
das
mov
in
push
add
imul
ds
sub
mov
lea
inc
xchg
jno
dec
repz
mov
sub
cmp
outsb
je
int
imul
repz
jbe
dec
jns
hlt
fcmovbe
repz
sarb
pop
fstpt
push
or
aas
push
inc
bound
xor
lahf
mov
in
sti
out
leave
mov
adc
lods
adc
xor
out
xor
inc
rorl
out
push
pop
in
imul
xchg
or
xchg
mov
fwait
or
daa
pop
xchg
js
cmp
loope
jecxz
std
sbb
leave
adc
push
pop
jecxz
mov
test
test
cmp
sub
jmp
mov
shlb
inc
mov
les
test
into
ficoml
push
jae
bound
dec
jle
in
mov
movl
iret
popw
test
xchg
mov
int
mov
loope
cld
xchg
fisubrl
or
les
xlat
ss
push
and
xchg
js
inc
mov
fwait
sbb
xchg
sahf
mov
ja
pop
sub
notl
clc
jg
sub
and
and
jo
ds
sub
test
inc
dec
call
in
clc
cmp
sub
imul
lcall
mov
sbb
jno
jge
jbe
jo
je
lock
dec
cmp
mov
adc
sub
push
hlt
push
mov
sbb
adc
jno
sarl
dec
notl
cltd
clc
push
in
sub
sbb
or
add
pop
xor
call
mov
sbb
cli
mov
rol
jmp
outsl
push
push
push
cmc
mov
push
mov
pop
mov
jno
jl
stc
pop
nop
sub
ja
cmp
rcll
mov
jo
lods
mov
sbb
push
test
mov
jmp
jge
xchg
sbb
aaa
movb
sbb
stc
push
aam
ss
test
fildl
cmc
lock
pusha
cmc
sbb
data16
adc
leave
aas
push
cli
or
addr16
popf
rsqrtps
addb
pop
ficoms
fbstp
push
jne
lock
xchg
or
and
daa
sbb
pop
ret
jo
in
pop
mov
popa
pop
out
lahf
daa
push
cmc
add
add
sbb
mov
jns
sahf
decl
call
arpl
or
in
or
adc
mov
cltd
mov
cmpsb
fs
push
sbb
pop
jmp
lret
mov
lods
jg
pushf
daa
mov
sub
or
ret
cmp
fwait
jmp
out
mov
or
fimuls
test
rorb
add
sub
push
mov
push
and
fs
mov
mov
push
and
lods
int
jecxz
xchg
mov
mov
xlat
mov
push
call
cmp
outsl
add
in
push
fnstsw
aas
jae
jo
pop
mov
nop
arpl
pop
pusha
cltd
add
jge
push
mov
lahf
adc
push
adcl
mov
and
fsubs
stos
test
fisubs
cmovle
mov
imul
sbb
push
fdiv
int3
mov
mov
inc
cli
adc
mov
sbb
daa
dec
push
mov
ret
fcmove
aas
jle
sbb
movhps
adc
mov
pop
popf
pop
xchg
push
inc
lds
lods
add
sbb
fucom
outsl
inc
xchg
ljmp
aaa
mov
sub
call
stos
es
repz
lods
mov
push
lods
inc
imul
lret
je
or
adc
repz
pop
pop
daa
negl
or
push
dec
stos
popf
add
pop
rcrl
ret
add
cmpsl
icebp
mov
dec
or
rcrl
cli
lret
rorb
dec
jnp
stos
push
js
shrl
mov
mov
lcall
cmpsb
sahf
test
and
scas
dec
inc
lret
xor
push
loop
jne
or
jg
fldcw
aad
cmp
std
repz
push
dec
lods
js
cmc
pop
fcomps
and
cmpsb
dec
outsb
aam
icebp
inc
lods
cltd
pop
or
mov
add
aad
xchg
test
ja
jns
js
dec
idiv
fisttpl
mov
push
imul
sub
dec
mov
jne
fcmovnb
ret
jb
mov
ljmp
hlt
dec
inc
pop
sarb
subl
nop
cmpsb
iret
dec
and
jl
dec
fdivs
push
fsubl
xor
call
cld
push
sbb
fisubs
leave
adcl
test
in
std
sahf
lock
dec
lea
jle
inc
je
mov
sti
xchg
int3
cmp
test
rcll
xchg
mov
mov
sbbb
dec
sub
mov
xchg
stos
or
arpl
jmp
lods
add
xor
push
push
push
xor
xchg
jne
mov
ja
sahf
out
fdivs
out
popa
lahf
sub
xchg
pop
lods
adc
sbb
sbb
add
out
and
jne
inc
cmpsl
xchg
cld
cmp
xchg
jl
pop
iret
or
and
mov
xorl
pushf
mov
ljmp
mov
mov
aam
ds
repnz
push
icebp
mov
cwtl
and
jmp
call
pop
xchg
lods
mov
fsubp
push
mov
or
sub
jecxz
cmp
xsha1
cmpsb
lret
shll
mov
popl
jns
dec
rcll
pop
inc
inc
xor
popa
pop
mulb
nop
or
clc
icebp
out
fstps
test
jns
cmp
xor
or
jecxz
cltd
and
push
ljmp
jno
out
aad
clc
inc
mov
in
xor
push
je
push
pusha
dec
in
xor
lods
loop
sbb
xchg
cld
dec
jecxz
sub
pop
mov
imul
mov
dec
call
or
cmpsl
push
in
mov
add
icebp
lods
inc
mov
fwait
and
int3
mov
add
inc
and
pusha
inc
flds
and
jno
pusha
sti
aam
dec
fdivrl
dec
xor
lcall
xor
and
xor
xchg
bound
fistpl
mov
popa
mov
cwtl
mov
push
lods
lock
ret
add
xor
test
xchg
loopne
neg
lea
rclb
dec
scas
add
mov
lea
mov
xor
mov
push
inc
mov
jge
aam
lock
lcall
inc
enter
or
dec
xlat
outsl
or
mov
lret
clc
sub
jns
loope
inc
xchg
test
add
jge
mov
add
sbb
cmp
jmp
dec
rolb
sub
cld
xor
inc
mov
cmp
aad
push
cmp
xor
sub
lds
adc
push
ss
pop
out
and
pop
mov
cli
movsb
and
adc
push
or
and
mov
xor
sbb
xor
insl
shl
xchg
mov
sub
divb
lock
std
jl
fdivl
pushf
dec
jmp
sti
es
jno
and
lock
fs
data16
ret
testl
lods
js
jnp
outsl
testl
push
mov
push
mov
jo
cli
fwait
bound
sbb
and
or
xlat
addb
or
dec
dec
jecxz
dec
mov
mov
mov
sbb
out
sub
or
xchg
jns
scas
pop
jmp
cld
scas
nop
outsl
in
test
mov
mov
scas
repnz
repz
dec
pop
push
inc
pushf
scas
addl
add
mov
jo
push
shl
mov
icebp
and
fdiv
dec
pop
dec
sahf
push
sbb
aas
cmpb
xorl
and
pop
test
inc
enter
lds
fisubrl
push
add
lret
jns
repnz
and
jge
popa
jno
mov
push
lcall
adc
pop
loopne
xor
jmp
je
in
xor
or
popa
lods
cmp
hlt
dec
xchg
imul
mov
es
xor
shlb
push
jns
xchg
repnz
cltd
and
xchg
jmp
mov
fs
sbb
xor
or
idivb
loop
push
roll
jg
cld
nop
daa
cs
into
cvtpi2ps
shl
pushf
lea
pop
sub
outsl
adc
scas
inc
insb
inc
clc
iret
mov
push
mov
imul
test
repz
lret
push
jp
or
mov
jg
push
xchg
adc
and
push
dec
jecxz
ficoms
inc
and
lods
jle
dec
xchg
mov
xor
cmpl
fcoms
cmp
pop
jecxz
scas
inc
inc
add
cmpsl
cvtpi2ps
fidivrl
dec
push
jg
call
pop
punpckhdq
cmp
stos
cmpsb
lea
lret
lods
sbb
mov
sub
into
mov
pusha
mov
or
push
lods
jno
fldl
mov
ss
lock
mov
jbe
pop
push
insb
mov
outsb
jno
push
in
gs
ficoml
and
ja
daa
cmpsl
push
add
cmpsl
sub
jb
ret
scas
in
and
sarb
mov
inc
mov
and
stos
mov
je
inc
pop
shll
js
sbb
daa
mov
ret
lods
inc
or
cs
xorl
pop
inc
shl
mov
int3
cmp
std
idiv
or
pop
fnsave
push
lahf
mov
mull
orb
cmp
push
xor
xor
icebp
adc
inc
bound
aas
xchg
dec
xchg
out
loope
or
test
mov
jl
add
fstpt
and
pop
dec
inc
xor
cmc
in
mov
push
push
sub
mov
sub
sub
push
int
test
fucom
addr16
movsb
fsubl
add
cmpsl
jae
test
test
dec
sti
scas
push
mov
sbb
pop
pop
test
fdivl
jp
cmp
sub
rcl
pop
pop
ss
fisubl
sbb
test
inc
xchg
cmpsb
mov
push
xor
test
sub
cmp
mov
int3
pop
push
add
and
testb
pop
adc
mov
ljmp
rcr
gs
cmp
lock
xchg
call
mov
ret
cld
sub
jnp
push
mov
adc
addr16
cltd
add
es
addr16
dec
push
out
pusha
xchg
fldl
bound
pop
jecxz
xorl
cmp
shrl
jge
in
fdiv
pusha
test
ss
arpl
or
mov
mov
aas
push
sub
push
xchg
rcrl
jmp
std
xchg
enter
aam
pop
jae
adc
xchg
jns
fsts
push
pop
les
mov
in
ja
cmpsl
mov
xchg
xchg
cs
bound
aas
rcr
jo
aas
cli
or
popa
mov
mov
adc
icebp
hlt
lods
insl
add
cld
iret
mov
dec
dec
pop
jle
and
pop
sub
test
sarb
fiaddl
pop
dec
popf
mov
sbb
mov
mov
pop
add
ret
addl
mov
lea
lds
sbb
push
insb
out
out
add
mov
add
aam
jo
insb
jle
popf
push
push
dec
mov
mov
bnd
mov
dec
enter
lcall
cmpsb
pop
adc
push
icebp
stc
insl
les
push
mov
mov
data16
adc
shr
xor
inc
mov
dec
imul
arpl
xor
mov
cmc
adc
mov
out
mov
mov
or
mov
sbb
or
add
xor
mov
popf
test
mov
mov
pop
lahf
xor
frstor
dec
out
sti
dec
lods
daa
mov
lods
mov
or
inc
cld
daa
mov
mov
imul
sub
dec
loope
in
sbb
leave
mov
hlt
icebp
xchg
mov
push
rclb
or
push
sub
pop
ror
sbb
sub
rcr
ret
repz
pop
repz
jne
arpl
aam
in
add
fldl
mov
and
fistpl
cmc
mov
mov
les
out
cmp
xlat
inc
sbb
movsb
xchg
out
and
mov
ljmp
adcb
xchg
je
sahf
and
and
xor
sbb
nop
shll
xchg
repnz
rcrb
xchg
arpl
aaa
push
ficoms
dec
xor
decl
aaa
push
jp
repz
repz
loopne
mov
adc
jbe
je
cwtl
das
ret
sti
in
push
push
mov
pop
lret
sbb
insb
lods
aas
loop
dec
inc
push
push
jl
in
push
popf
cmpsb
lea
or
icebp
pop
adc
dec
sahf
sahf
push
inc
out
leave
sbb
int3
xor
test
outsl
shll
adc
push
out
pop
push
sbb
popa
hlt
frstor
stos
jae
rorb
stc
icebp
xor
scas
hlt
addr16
mov
inc
ret
xor
fsub
adc
pop
inc
sub
jmp
fldcw
rcr
mov
push
dec
filds
scas
fs
lret
rcrl
dec
jb
mov
pop
iret
enter
lret
imul
or
mov
push
and
addr16
sbb
movsl
icebp
inc
sub
xor
or
pop
in
xchg
mov
pop
leave
and
push
test
mov
inc
mov
pop
xchg
cmp
outsl
sbb
fidivrs
adc
ljmp
shll
repnz
push
adc
arpl
movsl
cmp
pop
lcall
mov
xchg
sub
and
dec
leave
icebp
cmp
insl
js
sbb
in
lods
ss
lcall
sub
pop
inc
stc
pop
inc
mov
jae
fsubrs
nop
sub
jmp
push
les
clc
xor
pop
inc
push
mov
jbe
hlt
das
cmp
cmp
xlat
andb
inc
cltd
sub
test
sub
push
inc
cmp
dec
fbld
in
inc
sbb
ds
mov
and
inc
clc
cmp
and
cwtl
std
and
sti
nop
jbe
cli
mov
imulb
mov
mov
movsl
jns
shrl
popf
scas
push
rcl
repz
inc
push
lock
sbbl
fsub
xorb
dec
mov
lea
mov
es
scas
pop
xchg
loop
shrl
cmp
jb
xchg
push
xor
adc
mov
push
sti
out
jg
daa
fcmovb
cwtl
mov
imul
imul
int3
enter
sub
xchg
or
cmp
mov
xor
and
jge
mov
clc
push
js
shl
xchg
in
in
inc
pushf
xchg
shld
push
inc
sti
andl
mov
mov
ljmp
scas
pusha
mov
rcll
lods
jo
mov
pop
add
ds
fildll
adc
pop
int
imul
cli
ret
loop
lds
enter
dec
loope
pop
cmpsl
push
stos
cmp
mov
mov
inc
out
std
les
mov
pop
ret
inc
push
test
cmc
pop
leave
push
xlat
push
jb
iret
aam
jb
lds
adc
jno
lahf
xchg
in
or
pop
sub
es
imul
jl
xrelease
insb
xor
xor
or
fsts
adc
js
bound
std
pop
adc
lret
cmp
std
dec
mov
lret
iret
cmp
pop
mov
out
jns
push
xorl
jge
cmpsb
iret
sbb
loopne
add
lds
scas
mov
ja
mov
pop
cwtl
fcom
dec
xor
lret
push
addr16
jmp
stos
dec
pop
dec
mov
imul
in
jns
cs
adc
stos
sarb
xchg
mov
jg
loope
sbb
call
inc
addr16
cmpsb
sbb
or
loopne
aam
repz
xchg
mov
int3
dec
cs
in
adc
adc
mov
icebp
hlt
adc
xor
out
push
xor
mov
movsb
clc
jle
bound
jmp
pop
xchg
je
adc
xlat
ljmp
mov
es
out
ret
adc
adc
and
jp
add
fidivrl
adc
push
xchg
nop
push
fisttpll
test
cmpsl
mov
xchg
add
or
adcb
hlt
lret
addr16
adc
dec
inc
cwtl
repz
das
push
add
pop
xchg
add
sub
pop
cmp
xchg
cs
xchg
pop
repz
dec
aam
or
push
pop
fchs
lahf
ficoml
lret
subb
jb
cmp
addr16
pop
adc
fwait
xchg
jb
mov
or
jb
mov
pop
or
mov
inc
cld
push
fcompl
mov
cmp
cltd
and
sbb
test
test
scas
add
iret
lret
lret
add
lea
sbb
es
jge
mov
push
cmp
frstor
mov
push
sbb
fstl
es
aad
fs
jb
push
notb
mov
pop
leave
iret
jp
gs
pop
pminsw
or
or
outsb
add
xchg
in
push
mov
popl
or
outsb
sub
cmp
je
jns
cmp
xor
cmpsb
rep
add
in
inc
mov
push
iret
mov
or
xchg
lds
jecxz
mov
aam
es
inc
in
push
lods
push
das
jbe
pop
imul
add
into
ja
loope
add
xorb
movsl
mov
inc
push
jle
hlt
dec
sub
aas
leave
stc
cmp
mov
mov
inc
mov
xchg
adc
rcl
mov
lea
incb
outsl
loop
xchg
lods
pop
mov
mov
sub
cmp
jb
push
or
jmp
push
cmp
cld
stc
or
inc
inc
lods
mov
fdiv
sahf
scas
xor
outsl
shl
cmp
movsb
sub
xor
or
cmp
stc
nop
mov
ficoms
cmpsb
rcll
or
push
jno
insb
subb
mov
stos
mov
repz
or
dec
adc
dec
pop
xor
dec
mov
in
not
shl
mov
inc
mov
addb
cmc
mov
dec
call
jp
clc
inc
or
shrl
insb
pop
rorb
xlat
or
push
push
negb
pop
mov
sub
insb
add
jne
xor
inc
dec
cmp
lret
mov
rcrl
mov
or
nop
mov
int
xor
test
push
fadds
mov
mov
fstps
xchg
test
ja
scas
sub
leave
fnstsw
fistpl
nop
jle
push
jo
xchg
pop
cmc
les
inc
enter
xlat
std
mov
es
or
fisubrl
adc
repnz
popa
dec
xchg
sub
dec
mov
pusha
cld
sub
nop
add
sahf
popf
inc
movsb
addr16
js
ljmp
sub
adc
sti
xchg
cmp
fnsave
mov
xchg
fcompl
faddl
divb
lods
push
push
ljmp
inc
ds
add
into
adc
jne
mov
push
negl
js
jge
mov
mov
jbe
ds
test
les
lea
stos
arpl
adc
ror
sub
stos
aas
cli
inc
pushf
lret
cmpl
jecxz
jo
xchg
fmuls
mov
sarb
dec
or
adc
sar
and
aam
aas
test
fsubrl
cltd
xlat
cmp
add
test
daa
adc
fs
fsubrs
inc
faddl
je
lahf
mov
leave
adc
lret
andl
shr
aad
hlt
lret
outsl
adc
push
push
mov
popa
ret
add
loopne
add
push
andl
outsb
daa
inc
pop
jmp
pop
mov
outsl
or
sbb
pop
xchg
out
cmp
dec
fst
aas
sar
xor
xlat
mov
jo
push
or
adc
inc
mov
cmp
xchg
cltd
inc
fisttpl
mov
in
fucomip
cs
or
xchg
cmpsl
mov
ja
enter
mov
repnz
adc
add
mov
clc
sahf
xor
cmpsl
cmp
dec
pop
leave
and
pop
hlt
sbb
adc
xor
sbb
xor
fdivr
sub
pop
rcl
cmpsb
cmp
loop
inc
sbb
inc
je
mov
xchg
push
sti
dec
ret
push
sub
pushf
in
into
jbe
xor
push
or
outsb
push
push
fdivr
pushf
jecxz
dec
and
je
out
push
dec
bound
xor
scas
enter
into
inc
lods
inc
ja
cmp
mulb
sub
pop
or
add
daa
xchg
pop
scas
call
cmp
adc
push
xchg
jp
int
sahf
ss
inc
adc
push
fucompp
sbb
not
push
adc
pop
inc
xor
ljmp
andb
test
aas
cmp
jno
cmp
xchg
xchg
pop
outsb
sub
fidivs
inc
inc
movsb
and
out
mov
push
js
pop
das
jmp
mov
idiv
sub
cltd
cmpsb
cmp
adcl
pop
push
sub
mov
scas
mov
daa
rorl
cmp
sub
nop
orl
push
sbb
fwait
movsb
aas
add
dec
or
jl
ret
mov
pushf
ljmp
inc
ja
je
cmp
daa
inc
cmp
aad
push
xchg
add
jo
ja
adc
pop
movsl
into
pop
add
bound
shrb
pusha
icebp
mov
popa
inc
subb
mov
jns
sub
mov
scas
mov
xchg
call
cmpsl
sarl
lret
and
cmp
cmp
shll
or
sbbb
cmpsb
mov
adc
dec
inc
insb
data16
xor
push
test
fdivr
sbb
je
fidivs
xchg
sbb
fcompl
mov
sub
cwtl
dec
mov
imul
push
cmc
sub
shlb
cmc
sub
aas
mov
scas
out
adc
sbb
scas
mov
ret
mov
and
dec
lret
ljmp
paddw
int
dec
fdiv
pop
loop
out
je
popf
mov
push
adcb
and
pop
repz
xor
fcomps
cwtl
xchg
or
mov
sub
mov
lods
std
pandn
pop
rol
icebp
ja
and
push
cwtl
es
stos
loope
out
jno
add
xor
call
imul
orl
jge
mov
clc
push
jp
cmp
xchg
push
and
mov
out
jmp
sub
adc
in
lcall
sbb
cmp
or
jnp
sub
ja
pop
cli
shl
jno
sahf
mov
shl
testl
cwtl
mov
das
cmp
push
inc
stos
mov
pop
push
dec
jmp
pop
push
sub
dec
ss
imul
popf
mov
fisttpl
shlb
ret
xor
xchg
add
int3
pop
xor
imul
add
cwtl
cmp
ljmp
add
sbb
xchg
ja
push
or
jbe
fsubrl
insl
pop
call
outsl
repnz
gs
xchg
shrl
jnp
pop
inc
in
mov
data16
or
push
aam
add
int3
mov
insb
mov
arpl
clc
xor
xor
push
push
fincstp
mov
fndisi(8087
lds
push
mov
adc
push
mov
imul
test
gs
sbb
jbe
movsb
in
mov
das
lret
out
mov
push
adc
pop
lock
mov
cmp
rcrl
jns
jge
rcrl
nop
repz
mov
test
fdivrs
cwtl
shrb
insl
add
sahf
ja
ja
xchg
or
iret
rorb
cmp
outsb
jl
xchg
push
sub
mov
aam
enter
adcb
mov
xchg
sub
xchg
arpl
aas
pushf
sub
dec
nop
mov
sbb
fwait
bound
mov
test
bound
fbstp
pop
scas
in
cwtl
sub
mov
fs
mov
cmp
jns
sub
stc
push
fisttps
mov
xchg
shlb
lods
iret
data16
outsb
in
mov
cmp
mov
enter
in
cmp
mov
pop
xchg
mov
mov
pop
ds
ret
add
jecxz
adc
push
mov
xchg
sbb
shlb
jns
mov
mov
jp
pop
sub
push
jbe
and
push
inc
sub
ja
cmp
sbb
adc
ret
push
mov
es
rorb
push
xchg
cmp
adc
push
int3
lret
pop
dec
push
mov
mov
testb
outsb
int3
mov
sbb
pop
out
test
ja
xor
inc
fs
or
into
xor
mov
fs
adc
bound
call
jns
nop
test
adc
movsl
inc
xor
lret
sub
inc
cmp
mov
cmpsl
inc
fistpl
mov
mov
mov
xchg
scas
clc
dec
ffree
pop
pop
jecxz
jp
add
addl
call
std
xchg
addr16
sbb
cmc
or
mov
sbb
xor
push
sub
jp
mov
mov
jb
jmp
jnp
bound
int
xchg
pop
lods
or
ljmp
je
xchg
vfmadd231pd
nop
jb
lock
push
lods
lcall
jae
out
sub
jp
imul
mov
jns
push
or
adc
xchg
outsb
andl
cmc
int3
aas
in
mov
test
and
lret
outsb
jp
in
jbe
xor
pop
call
repnz
mov
push
cmpsl
or
aaa
inc
movb
mov
test
pop
rolb
sub
imul
xchg
loopne
ret
gs
test
pop
push
test
jae
out
sbb
or
popa
cltd
xor
xor
fs
pop
sbb
add
movsb
mov
pusha
cwtl
jno
cs
mov
cmp
icebp
push
movsl
add
xchg
lods
xchg
js
movsl
test
stos
mov
jl
and
ret
popf
mov
push
sbb
mov
je
adc
push
jne
and
out
cmpsb
int
cmp
imul
dec
imul
call
mov
mov
sti
icebp
lock
lock
or
lods
push
mov
push
add
stos
xor
sub
divb
sbb
outsb
cli
inc
loopne
cmpsb
in
mov
mov
adc
sub
dec
xor
mov
jge
xchg
outsl
and
pop
es
out
add
push
push
outsb
inc
in
das
pushf
xchg
fiadds
mov
mov
pop
dec
fsts
sbb
pop
icebp
js
arpl
xorb
adc
xor
daa
xchg
iret
mov
bound
gs
jne
aas
pop
out
stc
push
sub
fneni(8087
push
xchg
jp
cmp
inc
dec
popa
xor
mov
out
pop
lea
fidivs
mov
loopne
jne
sbb
mov
mov
test
cmp
shr
stos
inc
loopne
pop
mov
enter
jnp
and
jns
fildl
and
leave
stos
mov
cmp
ret
popf
xor
pop
js
jg
ds
cmpsb
and
jb
enter
xor
insl
xchg
or
outsl
pop
and
dec
cli
fcomip
sub
xchg
jae
mov
ds
aas
push
mov
test
movsb
pusha
es
jl
cmp
leave
lret
lret
mov
mov
cltd
nop
xor
dec
ret
sub
fwait
das
xor
cmpsl
cmc
sti
std
aam
pop
xchg
out
pushf
loopne
outsl
dec
test
lods
test
mov
in
xor
adcb
xchg
jo
mov
mov
ret
xor
daa
fs
mov
add
rcr
pop
ja
rorb
mov
mov
iret
ds
xor
mov
cmp
dec
jmp
ficoml
iret
ljmp
ja
clc
out
sub
push
pop
shll
cmpsb
repz
mov
mov
jo
pop
ret
lds
pop
or
dec
popa
mov
cmc
and
cltd
incb
cmpsb
les
cmp
mov
int
add
push
sub
ljmp
push
sub
sbb
cs
sahf
add
shrb
rcr
adc
and
cmpsb
into
les
add
xor
ja
xchg
inc
out
xor
cli
pushf
dec
lea
in
jo
fucomi
imul
sub
and
lret
rcrb
rcr
mov
lea
adc
stos
lahf
xor
shrb
shrl
icebp
fldenv
in
loopne
das
ret
sub
mov
mov
cmpsl
dec
push
shlb
stos
mov
adc
push
jne
pop
out
push
test
lock
test
pop
les
xchg
outsb
in
icebp
test
js
mov
mov
sarb
add
pusha
mov
shl
or
jg
ret
clc
jmp
pop
lcall
dec
imul
dec
pushf
in
add
mov
mov
daa
outsl
mov
pop
nop
daa
nop
daa
fsubr
xor
out
sbb
mov
sbb
cmp
pop
inc
lods
mov
xlat
fidivl
jb
ret
lcall
xor
ror
bnd
cmpsl
lods
sub
cmp
fadds
pop
into
mov
push
cmp
xchg
or
add
insl
imul
lds
arpl
inc
pop
pop
lahf
rclb
jl
in
mov
pop
cs
ja
jae
in
xchg
jle
xchg
mov
jae
fcmovb
cli
jmp
xor
es
xchg
pop
or
add
add
outsl
sbbl
jns
inc
and
add
push
loope
outsb
pushf
out
pop
cmp
xchg
or
dec
add
push
arpl
adc
rcrb
imul
divb
test
repnz
dec
call
sbb
hlt
adc
or
outsl
popf
cli
stos
shrb
loop
mov
jecxz
ds
decb
and
orl
pop
insl
dec
pop
lahf
jge
pop
mov
loopne
js
fistl
mov
ficompl
push
xchg
mov
das
outsl
pop
ljmp
call
setns
bnd
aas
push
lock
insb
cmpsb
imul
stos
mov
xchg
mov
js
cwtl
xchg
hlt
jl
aad
xor
arpl
push
jno
rolb
sub
push
mov
mov
mov
subl
loop
fimuls
jmp
push
sbb
outsl
repz
cmpl
cli
jmp
les
xlat
xchg
mov
dec
add
xchg
pop
adc
mov
mov
xchg
push
call
push
jp
pop
insb
xchg
fldt
pop
sbb
sbb
adc
pop
pop
das
inc
leave
pusha
cmp
cmpb
inc
dec
mov
mov
push
ljmp
adc
das
mov
push
jmp
mov
mov
insb
fbstp
sbb
inc
scas
les
popf
psrld
jns
xor
es
mov
mov
ss
fsubrs
jmp
sbb
pop
div
mov
cwtl
cld
cltd
jge
je
dec
cmpsb
adc
xchg
sbb
push
cltd
fsubl
fwait
pop
mov
fidivl
sahf
jno
cmp
into
dec
inc
pop
cmp
jo
sub
add
pop
dec
and
jbe
insb
enter
js
pop
orb
adc
jmp
sbb
and
pop
cmp
sub
les
mov
out
out
sub
sti
orl
jg
inc
lcall
jae
or
jp
es
sbb
mov
pop
scas
push
fldenv
fdivs
repnz
xchg
jnp
jnp
mov
mov
sub
pop
aam
stos
rcll
mov
mov
cmp
test
imul
push
jmp
xchg
gs
fnstsw
loope
insl
inc
jle
les
imulb
mov
lret
jae
inc
jge
aaa
sti
leave
sub
or
mov
and
jae
inc
addl
sub
dec
add
add
sahf
push
das
inc
jle
mov
mov
ljmp
ja
mov
pop
jp
stos
cmp
lret
out
es
stos
inc
ss
aam
inc
mov
and
loope
push
and
push
std
xchg
insl
fs
mov
sahf
in
orl
test
add
jno
jecxz
mov
push
xor
std
jg
jae
sbb
sub
sub
adc
add
std
arpl
stc
cmpsb
add
lock
test
adc
dec
outsl
imul
fdivrl
rclb
xchg
jl
mov
add
xor
adc
test
add
leave
les
divb
addl
mov
cmpsl
out
xchg
push
mov
jo
daa
pop
int3
les
test
push
enter
out
xlat
xchg
add
lods
shlb
call
cld
sbbb
clc
mov
shl
es
inc
dec
movsb
les
mov
aas
icebp
jle
cltd
arpl
adc
jmp
aaa
jle
stc
mov
sbb
test
int3
sub
jmp
jecxz
mov
or
and
lret
sub
mov
mov
inc
dec
inc
adc
xchg
jecxz
adc
leave
xor
je
add
sub
test
mov
mov
pop
mov
lock
test
cmp
pushf
divl
icebp
cs
pop
mov
dec
adcb
mov
and
fistps
xchg
sub
push
xchg
mov
stos
inc
cld
call
push
cmpsb
test
movl
jo
clc
push
fldcw
addr16
cli
cwtl
shr
mov
mov
lret
sub
fpatan
xor
mov
or
inc
fcoms
push
rol
mov
aad
int3
shrl
fnstenv
mov
or
loope,pt
xchg
jnp
jbe
sub
pop
in
push
and
or
jns
push
mov
icebp
xor
ljmp
mov
shrb
dec
sbb
scas
insl
add
mov
mov
outsl
movsl
stos
in
incl
lods
xchg
inc
sbb
mov
pusha
std
loope
mov
shll
ret
cs
mov
mov
adc
leave
ficompl
ja
cmp
lret
cmpsb
test
adc
fldenv
push
scas
push
lock
scas
je
filds
cli
xchg
scas
movsl
cmp
inc
and
dec
mov
stos
add
fnsave
int
stos
in
xchg
lahf
int
xchg
call
pop
cmp
daa
popw
jns
ret
cmp
scas
cwtl
into
cltd
lret
lret
jnp
popf
xchg
pushl
xlat
adc
inc
pop
xor
data16
xor
hlt
adc
push
pop
mov
sahf
out
sub
jmp
or
out
out
enter
hlt
mov
sub
add
mov
inc
stc
jb
mov
cmp
aaa
dec
and
outsb
mov
lods
pushf
cli
fisubs
push
xchg
cmp
mov
inc
call
xchg
inc
mov
fcomi
lea
cmp
mov
sti
imul
popf
push
inc
dec
inc
dec
leave
negb
insb
pop
pop
popa
clc
xor
roll
jb
mov
fdivrs
push
lahf
lret
dec
push
jle
jmp
and
and
hlt
dec
xchg
xor
mov
jnp
adc
addr16
aaa
out
sbb
jae
push
icebp
lcall
mov
jo
addr16
fdivs
fs
rclb
push
pop
hlt
mov
loopne
xchg
xchg
sub
in
inc
icebp
jle
inc
pop
adc
scas
jbe
dec
cmpsb
or
sub
and
mov
bound
inc
or
cmc
daa
push
sbbb
cmp
jae
mov
adc
std
clc
incl
dec
test
jge
fmul
fyl2xp1
test
popf
clc
or
jecxz
adc
cmp
std
push
inc
adc
add
iret
cmp
cld
or
sbb
fwait
pop
sbb
pushf
ret
push
push
das
out
dec
lea
pop
cltd
xchg
lahf
mov
cli
rol
sub
adc
cmp
out
insl
xchg
sub
in
dec
pushf
loopne
fldcw
enter
and
mov
mov
out
push
or
cmp
xchg
notb
mov
mov
jle
mov
xchg
add
pop
jne
mov
jne
inc
inc
inc
repz
inc
loope
imul
mov
shl
sbb
enter
mov
push
rep
mov
adc
ret
mov
rorb
xchg
cmp
aam
sbb
push
pop
fidivl
push
inc
dec
mov
cmp
shrl
shll
or
mov
out
fcom
ljmp
mov
into
xchg
sbb
fcmovb
out
cmp
mov
cmp
aam
insl
or
das
push
arpl
or
xchg
jo
inc
stc
rcrl
mov
fnsave
popa
or
jb
les
adcl
jo
jbe
test
popf
cmc
xorl
jle
sbbb
out
cmpsl
ret
outsb
add
and
jle
lret
cld
mov
jmp
dec
repnz
mov
cmp
iret
pop
dec
and
inc
iret
gs
mov
xchg
mov
cltd
mov
dec
push
mov
int
aaa
cmpsl
out
stc
jp
mov
or
out
lods
mov
shlb
fwait
ret
test
or
inc
orl
adc
jmp
mov
add
push
mov
icebp
orb
andl
inc
fdivrl
das
or
int
insb
neg
push
and
adc
add
lcall
js
and
jb
push
inc
mov
mov
insl
jmp
sub
lahf
dec
in
out
xor
sub
jge
test
xchg
cmovne
paddsb
mov
push
data16
fisubrs
fidivs
sbb
jp
test
enter
lret
cmp
mov
jmp
loope
push
clc
fwait
jg
sub
inc
loop
cs
push
jmp
in
pop
sbb
pop
or
or
inc
adc
pop
inc
gs
lods
push
lock
je
cltd
sbb
aas
pusha
push
add
es
add
insl
pop
add
arpl
mov
lods
adc
pop
aam
jo
insb
enter
mov
cli
adc
and
sbb
dec
data16
mov
add
gs
fwait
dec
stc
and
or
or
dec
in
mov
les
mov
add
add
cld
push
pop
ret
dec
fidivl
mov
test
nop
lods
jne
mov
jbe
jae
inc
daa
loope
out
jns
mov
fistpl
jns
jnp
mov
push
aas
push
js
and
lds
test
outsl
cmp
lcall
int
popf
cmp
rorb
add
push
jno
decl
pusha
mov
fists
rcll
js
mov
add
sbb
mov
arpl
xlat
jbe
push
sub
adc
and
sbb
aas
inc
loop
xor
scas
jecxz
stc
or
and
or
mov
jmp
push
pop
mov
stos
add
or
cmp
jo
out
int3
push
xchg
mov
bound
clc
push
jbe
test
pop
inc
lock
and
cld
push
inc
cmp
jae
subl
pushf
insb
xchg
mov
jg
stos
std
sub
push
xor
cmp
pop
cmpsb
clc
arpl
cmc
xchg
cs
out
leave
add
lea
push
or
ds
xchg
cmp
xor
push
dec
pop
ss
stos
push
dec
xchg
ror
xlat
mov
lret
jnp
mov
pop
fidivl
cwtl
mov
adc
leave
movsl
pop
ret
dec
mov
fsubs
dec
adc
xorb
gs
xor
adc
pop
mov
mov
bound
mov
push
rcl
mov
jne
test
into
sbb
mov
push
out
jecxz
aad
push
jg
add
mov
sub
mov
dec
push
fildl
mov
sbb
jo
bound
dec
sbb
push
sahf
std
lahf
cmpsl
jno
adc
dec
and
popa
lock
xor
in
ret
bound
xchg
mov
or
lret
pop
push
shrl
cmp
cmp
jecxz
iret
fs
or
add
add
mov
fidivrl
xchg
cmc
insl
cmc
es
mov
les
aaa
inc
test
cmp
adc
cwtl
aaa
xorl
orl
sbb
and
jge
mov
insl
add
xchg
jae
stos
cs
js
repnz
dec
add
jge
add
lcall
xor
dec
pop
notl
mov
push
out
outsb
sbb
mov
jb
pop
xchg
loope
inc
cld
inc
jg
inc
fldl
out
xchg
gs
cltd
loope
rol
outsl
pop
xor
ljmp
ja
mov
xchg
fnsave
mov
adcb
repnz
pop
pusha
test
xchg
jo
mov
mov
cmp
and
push
aaa
fidivs
inc
fldcw
fs
lds
out
fwait
sahf
sbb
inc
sbb
inc
cmp
testl
jnp
push
in
mov
sub
ss
mov
xor
out
push
sbb
inc
adc
bound
push
xchg
dec
rclb
les
mov
jmp
mov
fwait
xchg
repz
daa
fidivrs
sub
je
divl
ret
int
xchg
aam
push
xor
stos
std
pop
cmc
mov
pop
xor
addb
xchg
pop
stos
inc
cmpsl
into
xchg
mov
dec
popf
push
mov
enter
dec
jle
lock
imul
daa
shrb
xor
lret
mov
stos
add
inc
lods
les
mov
clc
dec
pop
repnz
mov
stc
test
shr
repz
cwtl
imul
mov
negl
into
adc
lods
mov
mov
cmc
pop
mull
and
push
pop
shl
iret
adc
shll
scas
and
pushf
shlb
jmp
loopne
push
daa
mov
sub
dec
push
popf
cmp
out
jp
fldenv
dec
jns
call
test
sahf
cmp
es
mov
mov
in
mov
fs
out
loopne
fcoml
and
int3
mov
xor
push
test
fcmovu
and
scas
xor
sub
jae
adc
jge
aaa
cmc
and
in
add
mov
inc
lcall
and
out
aas
cli
xchg
pop
xor
movsb
stos
arpl
jl
sahf
loop
or
adc
cltd
lods
aas
mov
lock
pop
addr16
cwtl
cmp
dec
jmp
xor
out
add
ds
or
push
lret
sbb
out
add
ds
outsl
jmp
xchg
stos
push
dec
mov
inc
pop
sub
lock
and
dec
xor
pop
cmp
mov
shrb
cltd
add
jne
lods
aam
pop
pop
mov
sub
adcb
pop
das
adc
flds
mov
stos
fldl
push
xor
imul
mulb
ret
dec
insl
clc
cld
cltd
cmp
jecxz
test
clc
daa
mov
push
imul
aas
dec
cmp
mov
sub
dec
mov
arpl
scas
mov
mov
xor
sbb
imul
jns
repz
inc
cmpsl
sbbb
bound
sub
fisubl
xchg
mov
stos
sub
mov
das
inc
mov
popa
inc
fistl
jge
sbb
dec
inc
shrl
mov
xchg
jne
push
mov
loop
dec
mov
sbb
ret
sahf
and
xor
aas
sbb
or
push
call
lods
repnz
jp
xlat
adc
inc
fisubs
aam
jne
in
and
pop
mov
outsb
sbb
mov
or
jns
inc
push
repnz
sub
xchg
ja
adc
mulb
dec
das
mov
pusha
outsb
jmp
add
fstpl
fidivs
mov
cmp
iret
das
inc
push
adc
cs
pop
xchg
lret
cld
repz
push
iret
push
cmpsl
inc
push
fidivrs
and
cli
mov
fiaddl
inc
add
adc
jge
das
or
dec
rcrl
sub
je
xchg
lea
loop
test
outsb
xchg
sub
xchg
cmp
insl
mov
cmp
push
in
mov
inc
rclb
sbb
sahf
mov
cmp
xlat
es
mov
push
faddp
stos
push
mov
movsb
stos
rorb
rclb
arpl
aad
and
aad
test
call
call
mov
or
push
popa
lea
popf
xor
imul
pushf
les
dec
dec
ljmp
mov
add
or
mov
aam
mov
xchg
aas
mov
pop
or
xchg
cmpsb
idivl
lret
popa
mov
aad
imull
mov
pop
addl
cmp
inc
xor
dec
dec
add
push
repnz
jg
dec
rcl
mov
out
test
push
jle
push
int
xor
mov
adc
test
icebp
sbb
orl
xor
aaa
fldenv
mov
add
hlt
mov
shlb
pusha
pop
xchg
add
negl
cmpsl
imul
push
lcall
jns
jecxz
popa
cli
jbe
add
jns
andb
jle
push
nop
cmpsl
cmp
lods
fistl
jle
push
adc
mov
add
inc
xchg
hlt
incb
push
and
mov
fisubl
jo
xlat
test
sub
mov
xlat
push
adc
push
andb
mov
push
out
sub
and
cwtl
das
pop
popf
pusha
negl
je
pop
pop
scas
pushf
pop
pop
jl
mov
add
mov
fidivs
sub
icebp
popl
fiadds
or
inc
leave
mov
adc
pop
and
xor
call
xchg
ss
adc
mov
push
outsb
jl
loope
xchg
out
adc
loopne
push
sti
mov
fldl
stc
nop
insl
das
bnd
shll
add
mov
jb
sub
jecxz
pop
push
rcll
add
push
stos
and
or
mov
mov
push
push
pop
push
sbb
pop
inc
sub
addr16
decl
dec
in
test
xor
out
mov
sbb
or
cs
or
fwait
inc
fwait
mov
mulb
inc
fcoms
pop
ljmp
inc
cmpsl
rcrb
movzbl
jne
cmp
shrb
sahf
daa
or
mov
test
and
push
push
xchg
fcoml
push
dec
fidivl
mov
add
mov
and
inc
xlat
shll
add
mov
sahf
ret
shrb
push
outsl
push
sub
repz
cmp
jge
pusha
pop
dec
pop
movsb
jge
push
xor
pop
gs
jne
mov
push
daa
or
mov
sub
cmp
icebp
jae
xor
pusha
negl
push
dec
loop
push
movsl
sbb
sub
aad
fwait
add
pop
add
fcmovnb
mov
in
shlb
xor
lret
add
cwtl
imul
iret
xchg
mov
andl
jnp
insb
inc
sarb
les
sbb
out
mov
and
jb
inc
je
or
pop
and
addr16
mov
or
jg
xchg
test
push
mov
mov
jecxz
and
xor
pop
xor
mov
hlt
repnz
in
negl
ret
sbb
and
mov
cmpb
xchg
xor
out
loope
mov
cmp
push
scas
cmp
pop
dec
jl
xchg
sub
add
inc
cmp
jecxz
cmp
jb
pusha
fwait
out
add
or
dec
jns
jbe
pop
cmc
push
lods
mov
jle
or
orl
ljmp
push
scas
cmpsb
lea
jp
xor
in
fucomi
lret
mov
cltd
test
fsubrl
mov
das
cltd
xchg
loopne
leave
es
popf
xchg
mov
pop
adc
add
push
xor
in
pop
out
pop
test
or
std
jbe
fdiv
out
push
mov
dec
push
push
or
mov
or
mov
xchg
and
push
int
or
or
inc
fsubrs
fistpl
add
xchg
hlt
push
imul
xchg
sahf
lods
fcompl
into
push
pusha
lcall
fdivrs
mov
sbb
adc
mov
sub
clc
aaa
dec
outsb
mov
xor
pushf
lock
fwait
jg
and
adc
cwtl
jle
sbb
scas
pop
dec
inc
mov
inc
xchg
sub
mov
ficomps
push
iret
inc
fidivs
lret
aas
loop
push
cli
jne
fdivrs
cmp
in
pop
psubusw
cmp
push
mov
xor
into
or
sbb
ss
repnz
cli
jmp
xlat
xor
das
fildl
inc
fbstp
test
sub
mov
dec
adc
mov
and
jbe
scas
jnp
lcall
das
or
cld
push
and
fidivs
bound
std
jno
or
call
ficomps
fwait
jmp
test
pop
outsb
inc
lods
daa
add
mov
insl
cld
sarl
lret
fists
das
or
icebp
ja
lods
mov
xor
nop
cmp
add
push
inc
test
jb
pop
push
cli
adc
js
sbb
adc
push
call
cmpsl
fcompl
adc
leave
cltd
test
mov
je
pop
push
pop
adc
les
mov
add
stos
jbe
daa
xchg
daa
stos
es
fisttpll
mov
jmp
imul
xor
lret
es
out
scas
push
xchg
inc
add
daa
mov
and
push
addr16
jle
std
cmp
rol
jecxz
dec
mov
xchg
leave
push
imul
inc
mov
xchg
mov
mov
mov
fsts
cmp
jae
push
lods
push
mov
pminub
popf
cmp
out
test
push
lret
sub
xchg
jbe
shrl
sbb
in
imul
sbbl
xor
jg
aad
inc
push
push
add
jns
mov
mov
cltd
mov
push
loop
je
sbb
call
mov
shrl
mov
outsl
loopne
push
xchg
lahf
xor
gs
movsl
and
fadds
push
call
stc
imul
dec
adc
and
jns
or
stos
outsl
jmp
hlt
dec
jbe
or
popf
sub
addr16
andl
mov
popf
inc
lods
inc
imul
dec
pop
loope
repnz
fcmovnu
rorb
rcrl
xlat
mov
or
pop
stos
inc
push
sub
xor
loopne
pop
daa
adc
xchg
in
outsl
lods
push
dec
call
inc
sub
cmpsl
pop
fstl
test
jmp
jnp
pop
into
movsl
sub
jl
iret
cmc
mov
xchg
aas
cmp
adc
or
adc
idivl
or
adc
add
mov
in
aam
test
lods
fbld
or
out
add
mov
push
test
js
ret
dec
xchg
pop
dec
push
sbb
fsubrl
pop
mov
sbb
sbb
mov
ret
or
inc
mov
call
add
pop
aaa
in
lods
inc
push
xor
lret
pop
lods
cmpl
jnp
adc
hlt
inc
jp
fwait
inc
je
mov
bound
and
pop
and
mov
xchg
clc
roll
adc
or
push
and
push
xorb
fdivs
out
and
test
pminub
stos
fldenv
sti
and
test
mov
or
xchg
adc
aas
jge
repnz
mov
fdivl
inc
pop
jle
int
mov
jmp
ret
xchg
imul
cld
mov
mov
lcall
fmull
jecxz
mov
loopne
dec
adc
stos
cwtl
rcrb
out
inc
fcoms
addb
mov
dec
dec
popa
or
and
push
adc
movsb
inc
push
mov
std
and
push
das
fildl
mov
orl
shll
inc
or
data16
sbb
mov
dec
mov
cmp
or
add
jg
jo
lods
sbb
adc
imul
push
mov
inc
dec
test
leave
add
pop
addr16
and
test
shll
fwait
mov
test
fs
in
lahf
add
je
cmpsl
sahf
orl
je
push
lods
leave
pushf
xorb
hlt
sub
frstor
gs
mov
movsb
xor
push
aad
mov
lock
inc
push
incb
xchg
xor
movsl
sbb
xchg
dec
jo
scas
movsb
rcrl
iret
sbb
adc
push
sbb
sbb
or
rcrl
add
sub
imul
jne
push
mov
add
cmp
sbb
sub
pop
imul
cmp
mov
into
push
inc
cmpsb
jp
subb
mov
testl
fiaddl
mov
mov
bnd
call
jo
adc
add
push
ljmp
call
sbb
stos
pop
movsb
sub
pop
lock
xor
xor
scas
inc
push
inc
int3
and
lods
scas
mov
das
adc
sahf
int
in
or
fs
scas
pushf
push
xchg
icebp
cmp
lods
push
mov
lds
rcrl
push
scas
sbb
int3
inc
pop
cmc
xor
dec
in
in
sub
adc
pop
enter
sahf
or
aad
and
in
add
jno,pn
andl
inc
xchg
xchg
cwtl
fcos
xchg
lret
adc
les
stc
mov
rorl
add
fsts
ret
push
cmp
push
add
push
sbb
mov
pusha
mov
mov
xor
or
dec
movb
pop
mov
adc
stos
cli
jecxz
pop
lahf
push
aad
int
out
push
mov
fisubrs
add
push
jg
xor
xchg
out
imul
mov
call
xor
inc
fs
lcall
cmp
iret
pop
jo
add
popa
clc
stc
aaa
jbe
push
push
data16
mov
jae
jne
inc
lds
repz
inc
xlat
repz
sbb
fwait
mov
and
cld
xchg
jbe
jmp
lret
unpckhps
out
push
mov
jnp
jp
aas
adc
cmc
sarl
mov
shlb
aad
xchg
lahf
es
insb
sub
in
mov
mov
xchg
out
sbb
mov
sbb
cld
push
push
loop
sbb
lods
ficoml
add
mov
outsl
mov
mov
and
lods
scas
mov
imul
sbbl
std
push
in
push
hlt
rcrb
scas
and
fld
xor
add
mov
mov
xor
xchg
popa
insb
in
adc
cmp
mov
mov
cmp
and
out
add
loop
mov
bound
and
push
scas
jbe
fwait
cmpsl
inc
sbb
fcmovb
notl
cmc
sti
das
mov
ds
test
and
jo
mov
sub
stc
sarl
subb
or
sub
lahf
pop
movsb
inc
push
clc
push
daa
dec
mov
test
stos
rol
repnz
adc
jg
ja
cmpsl
add
lcall
adc
and
lret
lcall
push
xchg
sarb
mov
js
sub
repz
ss
fsts
or
or
sub
insb
inc
sti
mov
inc
decl
cmp
adc
xchg
jge
mov
sti
fwait
popa
xor
cmp
mov
repz
mov
rcrl
mull
inc
mov
ds
xor
test
dec
jecxz
adc
xchg
ja
jge
fsubrl
fnstcw
sbb
shrb
push
push
inc
push
sub
mov
jge
fisubrs
lret
pop
sub
push
jno
inc
cmp
ret
fisubl
dec
sar
cli
cmpsl
mov
push
pop
push
mov
lds
mov
lea
add
adc
jl
insl
xchg
outsb
imul
xchg
iret
push
mov
insl
sti
xchg
add
in
cwtl
mov
sub
or
dec
dec
mov
jle
cmp
cmp
insb
loop
ja
pop
cmp
add
cmp
jg
inc
mov
pop
sahf
sarl
sahf
dec
stos
cmpsl
les
ss
stc
test
push
add
enter
and
stos
test
inc
cwtl
pusha
inc
or
movsb
jbe
mov
xchg
mov
mov
ret
adc
ss
xor
jns
lret
fistl
fwait
mov
loopne
stc
adc
cltd
jbe
xchg
xor
lock
or
in
adcl
add
arpl
mov
fldenv
or
push
shl
test
push
xor
pop
lock
rclb
lcall
push
lcall
push
push
xlat
nop
cmpsb
or
sbb
aas
scas
in
push
mov
adc
mov
pop
adc
loope
nop
pop
dec
and
scas
pop
fistps
in
lahf
adc
test
inc
xor
icebp
lock
adc
jle
test
ficoml
sub
sbbb
out
jl
lods
inc
lods
jb
mov
enter
dec
data16
ja
ret
shrb
cmpb
mov
push
in
xchg
pop
js
push
shlb
cmp
addr16
scas
cs
xchg
ret
or
vucomisd
push
int3
movsb
repnz
mov
adc
mov
mov
push
sbb
stos
jno
sar
jb
and
mov
adc
add
xchg
push
push
cmp
in
xor
sbb
adc
xchg
scas
arpl
cmp
mov
dec
cwtl
int
movsl
mov
and
cld
push
mov
lahf
push
addr16
in
lock
in
cmp
xor
lea
daa
jecxz
pop
insl
dec
call
xchg
loope
jl
or
cmp
aad
int
and
and
dec
and
push
and
int3
or
std
xor
cs
imul
jbe
pop
jno,pt
mov
dec
frstors
or
mov
jge
xor
push
pop
mov
mulb
mov
adc
xchg
mov
mov
mov
fistpl
mov
stc
leave
orb
jecxz
std
dec
fstl
cmpsl
sbb
pushf
pop
cwtl
gs
cmp
xchg
jmp
push
or
and
scas
push
ret
cld
xchg
push
les
or
imul
sub
pop
dec
dec
aaa
jns
stc
nop
rorb
mov
call
cmpl
flds
lcall
sarl
and
dec
mov
jl
or
in
mov
push
sti
xor
insb
jmp
sahf
or
dec
push
rolb
aaa
sub
mov
pop
push
fnstenv
cmp
testl
leave
or
cltd
testl
pop
xchg
movsl
mov
call
ljmp
punpckhdq
xlat
repnz
aad
pop
cmp
ret
or
xchg
stos
cmp
insb
mov
adc
repz
roll
lret
imull
xchg
icebp
aad
imull
arpl
int
lret
icebp
adc
mov
xchg
push
mov
lahf
adc
fdivrl
push
sbb
add
sahf
daa
lahf
xchg
push
jp
mov
cmp
sbb
xchg
outsb
lret
test
pop
mov
cmpsl
xchg
push
xchg
arpl
pop
or
cmp
lahf
mov
xchg
add
push
add
sti
or
in
sub
int
dec
scas
push
lcall
cld
mov
out
jmp
addl
stc
mov
outsl
imull
ret
ret
orl
test
jnp
mov
imulb
dec
incb
xchg
repz
test
cwtl
pop
orb
cmp
ret
jmp
aaa
mov
aam
orl
or
je
sbb
and
sahf
xchg
pop
fsubrs
sub
push
ljmp
inc
dec
pop
mov
xchg
ret
sbb
mov
xchg
cs
mov
xor
sub
notb
adc
pusha
ds
xor
fwait
jb
mov
mov
mov
jle
jecxz
stc
clc
dec
or
mov
xor
in
loop
sbb
stc
xor
cmp
hlt
and
xor
sarb
jns
je
mov
push
add
lds
mov
xor
or
push
test
cmp
inc
mov
cmc
int
push
mov
clc
dec
sub
push
decl
jb
cmp
pushf
or
aad
adc
idivb
and
aaa
mov
ja
cmp
bound
imul
cli
dec
iret
xchg
fdiv
data16
dec
sbb
inc
cmp
pop
mov
jae
dec
add
sahf
dec
pop
inc
jp,pn
pop
inc
push
cwtl
jmp
mov
sahf
jp
stc
dec
lret
loopne
mov
mov
mov
and
adc
mov
cmpsl
fiaddl
test
imul
push
sbbl
cmp
fimuls
mov
cmpsl
lods
adc
aaa
outsl
bswap
popl
test
adc
fnstenv
test
jne
jbe
push
pop
jns
sbb
push
adc
add
outsb
or
and
fs
iret
in
add
dec
cltd
sub
sti
insl
mov
out
pop
cld
xor
int3
jl
addr16
cs
aad
icebp
out
jle
arpl
push
mov
mov
cmp
insl
jnp
mov
adc
jp
pop
sub
fcmovne
xchg
lcall
test
pop
repnz
out
cs
xorl
mov
shrl
mov
rep
jo
lods
repnz
push
or
fildll
out
out
lcall
stos
mov
sub
push
gs
movb
rorl
insl
shlb
call
shrb
push
mov
mov
cwtl
or
add
xchg
and
addr16
gs
mov
jne
mov
lods
sbbb
shlb
call
cmp
add
out
push
dec
rcr
sub
je
rcrb
in
addr16
jno
cmp
jbe
ja
push
loop
cwtl
xchg
mov
dec
les
mov
fadds
fbstp
jo
sahf
mov
xor
gs
jmp
es
fxtract
cmp
movsb
sub
insl
xchg
xchg
inc
jmp
jbe
sbb
jge
daa
stc
push
dec
daa
mov
xlat
mov
and
insb
loopne
mov
or
js
jnp
lcall
mov
jno
add
hlt
cmpl
xchg
pop
cmp
lret
insb
sub
sahf
jae
dec
outsb
add
ret
test
jnp
fstps
cmp
jge
roll
mov
dec
outsl
dec
in
jns
cli
stc
dec
dec
andl
lds
dec
pop
scas
popf
xchg
lock
out
rcr
push
fdecstp
cmp
cmpsl
cli
pushf
scas
es
test
aam
inc
stc
xor
sbb
push
lods
leave
mov
leave
outsl
mov
shlb
gs
gs
ljmp
push
jne
lahf
and
sub
or
lea
xchg
sub
lods
add
test
push
imul
and
pop
or
inc
fs
dec
xchg
imul
insl
arpl
xor
cmc
or
mov
or
outsl
cld
inc
test
lods
pop
fsts
xchg
aaa
in
pop
xchg
outsb
xchg
inc
popa
hlt
mov
push
mov
loopne
call
pop
xchg
data16
orl
pop
jnp
gs
imul
push
aam
add
loope
mov
in
cltd
sarl
mov
mov
xchg
mov
inc
out
xchg
sub
pop
push
lahf
neg
loop
mov
lret
xchg
add
fsubr
testl
jp
leave
int
pop
pop
mov
and
or
ds
pop
jae
pusha
sub
sbb
xchg
cltd
push
lcall
mov
subl
and
out
push
lret
push
insb
aam
push
icebp
mov
orl
push
jl
mov
adc
sbb
and
cmpsl
ss
in
enter
xor
jmp
hlt
xor
repnz
aas
xchg
in
jae
pop
push
outsl
jecxz
aaa
push
ret
add
jg
or
mov
subl
sub
mov
mov
add
daa
test
xchg
inc
lock
push
xchg
dec
es
loope
fsub
mov
leave
roll
sbb
aam
movsb
mov
clc
sbb
mov
into
data16
fiadds
add
cmp
dec
pop
jle
cmc
test
fs
icebp
shll
ja
bnd
sub
jp
and
mov
testb
in
in
sub
sahf
imul
arpl
jge
mov
pop
dec
and
pop
jge
add
aam
inc
mov
nop
shrl
mov
mov
mov
xchg
sub
and
xchg
xchg
mov
xchg
scas
push
out
cltd
xor
mov
dec
imul
stos
subl
or
sbb
mov
inc
jbe
pop
push
mov
mov
push
jns
mov
arpl
add
les
js
pop
dec
sbb
mov
in
repz
test
dec
movsl
push
xor
cmp
and
cmpsl
mov
push
add
add
into
xchg
sub
and
cmp
xor
mov
mov
lret
rcl
imul
cld
sahf
xor
lahf
ret
aas
outsb
cmc
sar
hlt
out
mov
push
popf
jg
rcl
xor
mov
mov
dec
lods
stos
jnp
jne
xchg
pushf
xor
jl
cmpb
inc
addr16
sbb
pop
data16
cmp
shll
xor
pop
cpuid
or
cmp
xchg
ja
fnsave
dec
pop
jb
lods
inc
fnstenv
test
sti
lret
and
push
mov
mov
sub
aas
rorb
into
js
ljmp
pop
cmp
mov
dec
js
xchg
pop
popf
cltd
shrl
imul
mov
adc
fsubrl
adc
push
pop
adc
mov
je
mov
mov
mov
ja
jg
jns
add
pop
popf
push
ficoms
test
mov
lock
inc
mov
cmpsb
in
dec
fnstenv
adc
aas
push
outsb
cs
cwtl
das
mov
mov
jb
sub
xor
mov
xchg
cs
jae
and
sub
popa
clc
mov
call
xchg
or
cmp
mov
shlb
cmpl
std
cld
es
xchg
lods
add
xchg
enter
mov
adc
pop
mov
xor
sub
addr16
jnp
fstpl
add
sbb
adc
cwtl
pop
lahf
lds
push
out
jb,pt
pop
cmp
jmp
test
xlat
jae
xchg
sbb
aad
and
mov
test
test
pop
out
pop
das
xor
test
clc
outsb
or
or
xrelease
fwait
lods
outsb
mov
mov
insl
xor
inc
cmpsb
mov
mov
inc
lds
jbe
jle
xlat
mov
pop
mov
add
push
cltd
inc
sbb
pop
push
fbld
pusha
cmp
push
add
pusha
push
push
loopne
fsubrs
add
cmpsb
cmpsb
mov
xor
mov
je
and
out
inc
movsl
addr16
xchg
dec
cli
pop
clc
sahf
cmp
loopne
or
mov
and
mov
pop
jle
rcrl
lea
cmp
arpl
xchg
mov
icebp
jnp
or
stos
les
adc
int
test
popw
xor
pop
aam
andb
sbb
mov
mov
ds
sahf
lock
imul
aad
pop
xor
icebp
add
dec
mov
call
or
cli
es
mov
stos
addb
adc
imul
mov
jns
and
orb
outsb
pushf
stos
mov
adc
inc
xchg
ljmp
pop
in
cmpsb
fistl
std
aam
cld
push
sti
subl
push
and
outsb
mov
int
mov
outsb
mov
add
sbb
outsb
pop
stc
sbbb
in
hlt
xor
and
pop
jae
pop
pop
jg
or
fsubp
add
dec
jo
repz
jecxz
cmp
xor
sbb
pop
xor
jb
cli
aam
mov
dec
es
aam
enter
sub
jnp
adc
repz
mov
mov
repz
dec
mov
jbe
lock
movsb
dec
sbb
mov
xchg
jmp
and
mov
mov
pop
std
data16
cs
test
mov
jmp
popf
stc
lock
js
pop
stc
or
popf
int
inc
add
nop
mov
ret
sbb
mov
adcl
adc
out
push
xor
dec
int3
or
loop
daa
mov
pop
fldt
sarb
les
mov
jnp
jns
leave
mov
xchg
push
push
cltd
je
cmc
int
mov
dec
lret
push
jle
lret
lahf
pop
jo
rorl
add
mov
pusha
es
fnstcw
shll
pusha
xchg
lret
sub
adcb
sub
leave
hlt
cltd
and
lret
adc
cmpsl
lea
add
test
sbb
mov
adc
pusha
idivl
or
lds
mov
xor
or
cmp
out
cmp
xchg
pop
add
mov
jbe
mov
and
adcb
mov
mov
in
or
add
inc
repnz
inc
idiv
push
pop
sarb
bound
sub
push
mov
mov
push
mov
mov
sti
mov
or
subl
or
movsl
stc
es
add
sub
jae
mov
mov
push
xor
cmp
cld
mov
das
jle
sti
push
mov
or
addr16
adc
mov
mov
add
je
push
and
lret
push
jg
in
push
or
les
lahf
cmp
lret
mov
fcomip
push
sub
cmpsl
mov
loop
data16
mov
adc
xor
dec
push
sub
mov
dec
push
fsubrs
cli
cld
lcall
cmp
pop
push
pop
std
aad
outsb
sbbb
pushf
andl
fsubrs
jae
jecxz
shrb
mov
pop
enter
out
mov
pop
pop
jbe
pop
and
arpl
insb
xor
mov
mov
mov
divb
add
lds
add
out
dec
sbb
and
inc
jg
ljmp
or
add
jo
push
dec
jo
in
push
pop
sbb
subl
pop
sub
cmp
std
jl
push
push
pop
push
sahf
mov
xchg
in
rcr
shrb
sahf
sbb
mov
mov
xor
sahf
jle
fcomip
mov
es
imul
ljmp
jno
adc
int3
cmp
inc
fxch
ud0
pop
cmp
xor
iret
stos
enter
into
cmpl
cmp
adc
mov
cmp
xor
in
or
pop
in
inc
jmp
cmp
test
std
sub
jp
jns
pusha
cmpsb
xor
pop
xchg
pop
div
ret
pop
mov
add
jo
nop
loop
cmpsl
inc
or
lea
out
sub
jno
mov
lods
pop
test
pop
push
push
cwtl
stos
jae
jb
mov
pop
sbb
pusha
ret
sub
jo
test
inc
pop
cmp
fstl
pop
test
xchg
dec
popf
movsb
push
sahf
mov
jecxz
popa
sub
mov
push
mov
mov
test
pop
lret
lods
xlat
jno
mov
js
fstpl
lret
xchg
jbe
jmp
sarb
ds
popa
insl
fcoml
or
pusha
xor
mov
mov
mov
insl
add
das
push
cwtl
or
push
xlat
testb
lods
enter
into
rcll
out
xlat
xchg
clc
adc
pusha
jne
sbb
add
adc
fwait
push
inc
xor
jmp
push
in
sub
and
mov
sahf
data16
mov
test
iret
sbbb
andl
inc
sub
lret
add
push
dec
out
push
std
cwtl
dec
or
jle
scas
or
scas
icebp
sub
in
or
test
das
lcall
rcrl
pop
and
mov
out
adc
outsl
push
pop
xor
mov
clc
shrl
sub
je
in
inc
cmc
ss
inc
xchg
dec
add
push
out
and
aaa
decb
outsb
ds
pop
pusha
or
or
inc
mov
ret
sub
mov
out
into
or
push
xor
jmp
adc
mov
xchg
push
push
nop
cwtl
ds
or
in
fmuls
mov
add
cmp
push
jmp
imul
jmp
int3
mov
fs
inc
fcoms
pop
cmc
cli
notl
add
movsb
cmpsl
cmpl
repnz
cmpl
pop
lret
push
int3
out
sub
std
rcl
stos
and
jmp
jge
popl
fs
out
bound
jle
mov
std
xchg
movsb
push
mov
testl
add
pushw
mov
push
and
pushf
and
test
push
in
ret
jae
out
stos
dec
cld
sti
ja
mov
sbb
or
xlat
sub
pop
mov
fcom
imul
adc
imul
cltd
push
into
mov
test
or
loopne
test
jae
scas
mov
mov
cmp
and
arpl
popa
call
andb
inc
fneni(8087
xor
pop
aad
mov
fcomip
jg
sub
pop
stc
mov
mov
mov
cmc
xchg
hlt
inc
jp
cmpsb
push
orl
adc
aam
mov
fsubr
ja
test
mov
daa
outsl
push
fldl
pop
lahf
sub
loop
jg
sbb
cwtl
nop
lock
inc
mov
jbe
sub
pop
shl
cmpsl
mov
cs
nop
aas
rcrb
adcl
inc
or
cmp
jmp
nop
cmc
scas
pop
fnstenv
xor
fldt
add
cmp
inc
or
push
xor
popf
xor
xchg
sub
push
dec
negb
sub
fadds
xchg
jmp
enter
clc
cli
nop
daa
sub
lahf
scas
xchg
mov
adc
adc
mov
pusha
into
push
pop
jne
fwait
xor
push
add
add
mov
xor
bound
popf
or
stos
jecxz
fimull
xchg
iret
cmp
dec
mov
sbb
dec
aam
cld
int
cmc
xchg
loope
ret
xor
inc
scas
or
lds
cmpsb
xchg
and
mov
inc
ret
mov
adc
cli
loope
ret
mov
sub
sbb
cmp
push
lret
divw
pop
lea
mov
movsl
mov
rolb
lcall
stc
je
jne
sbb
jmp
sti
push
xchg
xchg
js
ds
dec
pushf
ljmp
fisubl
call
shlb
dec
jmp
pusha
mov
add
fmull
stos
test
xlat
sub
inc
imul
lcall
mov
test
lcall
sahf
clc
int
mov
xchg
xchg
shll
pop
xor
pop
jae
loopne
js
push
sahf
outsl
sub
stos
push
adc
mov
cld
sub
rolb
push
inc
dec
clc
jne
dec
add
je
cmpb
mov
cmc
insl
and
sti
inc
dec
pop
mov
leave
pop
outsl
pminsw
lahf
and
push
adc
scas
xchg
jnp
js
sbb
push
sub
cpuid
loope
aad
dec
pop
es
lods
and
jl
mov
jecxz
test
xchg
aas
cmp
out
jecxz
xchg
fcomps
mov
jb
push
dec
or
scas
jle
cmpsb
lahf
mov
cmp
add
jge
ja
dec
sub
mov
add
ds
xchg
sbb
enter
xchg
pop
out
pop
mov
pop
stc
cmp
sbb
mov
jno
int
xor
or
aas
sub
push
jmp
cmpsb
xorb
push
test
ds
xor
in
sbb
stos
in
or
mov
mov
fwait
xor
pop
sub
daa
and
cmpsb
or
inc
add
mov
xor
or
add
mov
lret
and
imull
push
mov
jb
xor
adc
ja
jecxz
dec
add
jmp
xor
mov
cs
add
enter
mov
mov
push
xchg
movsb
jg
mov
test
cmp
dec
bsf
pop
xor
xchg
pop
adc
pop
movsl
adc
dec
arpl
pop
fldl2t
jmp
ljmp
pop
cmc
push
movsb
imul
int
mov
and
and
jle
xor
mov
sbb
ret
rcll
imul
jecxz
fnstcw
pop
mov
jle
or
pop
scas
adc
mov
idivl
mov
push
loopne
andl
sahf
mov
push
cmp
mov
mov
push
jns
dec
aas
or
in
stos
sub
and
push
fsubl
ss
vmovss
add
xor
scas
pop
aaa
mov
imul
lods
inc
outsl
out
and
nop
lret
xlat
rcrl
push
or
scas
xlat
mov
inc
or
xchg
shlb
mov
outsb
jno
data16
nop
cwtl
xchg
fsubrl
pop
cmpb
xchg
rorb
and
adc
ss
xchg
loope,pt
sub
pop
pop
add
lret
xor
jne
and
cmp
lcall
negl
daa
or
sub
cld
aam
jnp
inc
call
push
daa
out
mov
pop
mov
pop
loop
mov
insb
rorl
cmp
fcoms
and
frndint
fmul
sub
cs
fistpll
rclb
cmpsl
add
inc
divl
fs
jmp
jmp
inc
xor
xor
mov
sub
aad
add
xlat
mov
fildll
mov
pop
push
inc
dec
sbb
lods
dec
jo
int3
push
loop
sbb
or
mov
rep
adc
lea
adc
pop
xchg
out
les
imul
cwtl
and
sbb
pop
ljmp
fisttpll
les
and
ficoms
dec
xor
jns
es
push
and
push
jbe
je
inc
sub
jmp
push
sub
out
or
cmp
andb
jmp
imul
sahf
mov
in
test
dec
adc
push
push
jmp
scas
and
jp
je
outsb
push
xchg
test
mov
jp
decl
mov
outsb
inc
inc
lods
add
int3
add
mov
popa
hlt
push
xlat
sub
jecxz
mov
test
inc
imul
ljmp
enter
sahf
outsl
rol
dec
pop
in
xchg
sub
loop
and
mov
loope
dec
in
repnz
shlb
leave
adcl
mov
mov
stos
aaa
jle
pusha
mov
mov
lret
jle
xchg
pop
scas
inc
add
jns
pop
fwait
inc
shlb
adc
dec
or
es
sbb
pop
stos
lds
xor
inc
jne
xchg
sub
cld
orl
ds
lahf
loope
ds
cmp
xor
popf
sti
hlt
jae
mov
and
into
shll
int
lock
mov
mov
test
mov
imul
sbb
xor
in
jecxz
rcrb
in
jle
je
iret
cmpl
mov
jmp
sub
js
or
lret
loopne
jb
xchg
mov
xor
and
shlb
test
loop
dec
add
int3
stos
stc
dec
popf
inc
xchg
ljmp
ss
shlb
das
clc
lea
or
and
add
les
pop
insl
or
outsl
sarl
cmp
into
mov
dec
test
into
leave
mov
push
in
xchg
rcll
fimull
fistl
pop
es
dec
stc
and
push
fisubl
fildl
mov
jb
cmc
fdivl
stos
pop
notl
ds
mov
jmp
and
rcrb
aaa
loope
mov
imul
push
lods
mov
add
or
pop
in
leave
mov
outsl
push
mov
jp
jne
push
and
adc
xor
iret
xchg
push
push
mov
pop
cmp
mov
aaa
adc
out
cwtl
sbb
mov
add
mov
push
ds
xchg
divl
sub
and
pusha
xchg
jp
icebp
stos
push
sub
fs
jno
pop
xor
adc
inc
jle
rcrl
or
lahf
or
sarb
rorb
xchg
and
xchg
sub
dec
adc
call
ja
fildll
out
divl
sub
xchg
add
sbb
xor
divl
and
lds
inc
ljmp
and
jno
add
fsubl
arpl
cmp
adc
ss
popa
test
shlb
in
test
test
out
incb
push
xchg
add
inc
sbb
out
test
popf
jo
insb
or
adc
push
or
outsl
and
ret
inc
sbb
jnp
mov
rcrb
jp
jno
pop
test
test
stos
push
xlat
clc
repnz
mov
bound
shrb
lret
xor
imul
or
lcall
mov
fnstenv
mov
lcall
imul
jp
loop
mov
lcall
xchg
test
mov
xor
sbb
in
add
inc
mov
xchg
jnp
cmp
mov
pop
jecxz
daa
adc
cmp
fidivs
out
mov
pop
lea
call
outsl
adc
push
out
std
lods
sbb
bound
out
mov
xchg
das
push
outsb
adc
jae
daa
gs
and
mov
or
xchg
jb
lods
addb
pushf
andl
mov
test
push
add
cld
or
popf
cli
scas
dec
xchg
sbb
jp
les
and
stc
sub
pop
sbb
sbb
mov
pop
mov
mov
dec
data16
scas
call
jle
dec
shlb
push
inc
add
dec
mov
sbb
imul
test
cmp
jecxz
mov
xor
mov
cld
inc
scas
push
xchg
test
in
inc
cld
out
and
fidivrl
mov
xchg
lds
movsl
mov
orb
lret
inc
in
pavgb
push
push
or
jae
out
inc
and
jnp
cmp
mov
inc
mov
xchg
or
call
jne
ljmp
cmp
jge
pop
cmp
push
or
xor
mov
orl
add
adc
adc
pop
jnp
js
cwtl
rcrb
test
hlt
mov
out
sarl
pushf
mov
ljmp
pop
cli
inc
or
repnz
lret
cld
repnz
xchg
mov
enter
fs
push
leave
mov
fs
movl
jo
mov
adc
int
add
xchg
sub
add
shrl
addr16
int
imul
aam
dec
dec
cmc
andb
sbb
jg
cmp
mov
mov
adc
enter
sub
in
dec
cltd
sti
jns
and
inc
cltd
push
sub
and
in
push
push
jle
sub
adc
and
cmp
sub
icebp
mov
sbb
push
cli
push
or
jmp
int
sub
dec
push
inc
push
pop
inc
push
ret
popa
and
xor
lret
cs
or
stos
jp
or
fldenv
or
or
and
mull
loopne
cmp
push
jle
push
pop
ret
ds
jnp
xor
pop
sahf
adcl
cs
or
push
mov
mov
push
ret
pop
lahf
push
sbbl
xor
adc
pop
pop
pop
adc
push
mov
arpl
movsl
xor
mov
mov
rorl
pusha
add
cmp
or
add
outsl
loop
sbb
push
in
sbbb
pop
jae
sbb
out
imul
sti
pop
lcall
insb
mov
les
lea
xchg
dec
pop
push
clc
mov
inc
pop
xchg
mov
xor
inc
push
mov
jne
mov
out
sbb
sub
xchg
push
push
ret
pop
xchg
or
adc
mov
nop
add
xchg
jle
cs
lret
jnp
jo
adc
xchg
dec
and
addr16
in
std
lret
jo
ljmp
jbe
xor
jg
pop
fs
daa
xor
mov
loope
shll
ljmp
ljmp
sub
xchg
cmp
repnz
xor
mov
add
mov
xor
mov
dec
loope
mov
push
sbb
repnz
into
pop
cmp
js
orl
mov
xchg
in
push
cld
aaa
jns
sub
add
mov
sbb
xchg
pop
loope
jp
popf
pop
ficoms
orl
xchg
push
mov
aad
and
inc
cmp
sub
lret
loopne
call
arpl
sbb
pop
imull
adc
add
insb
into
push
ret
sub
mov
adc
mov
fstpt
pop
cmpsl
mov
popa
adc
vmulpd
out
movsl
push
stos
es
dec
sub
lret
adc
push
aas
adc
call
andl
jecxz
sub
cli
sbb
sub
xchg
pop
not
sti
xchg
sub
jge
fldenv
idivb
sub
push
in
push
sbb
mov
stc
sbb
frstor
xchg
or
xor
mov
push
sub
enter
adc
push
es
jnp
inc
iret
and
xchg
sti
aaa
lods
mov
xchg
mov
adc
rcrb
xor
push
push
fucomp
jmp
inc
and
fldcw
mov
jge
jno
mov
nop
mov
mov
aaa
rcrb
repz
adc
ja
jp
mov
out
sub
push
std
enter
adc
sub
push
jmp
mov
push
jmp
pop
jbe
inc
cltd
out
nop
and
adc
stos
idivb
push
mov
pop
xor
mov
jl
stos
add
xchg
cmp
sub
push
jle
mov
and
orl
push
aaa
dec
ror
and
test
je
shr
repz
test
stos
sbb
outsl
mov
leave
adc
or
ss
mov
push
push
pop
pop
pop
ja
xor
mov
rclb
adc
xchg
pop
sub
cmpsl
xchg
lahf
pop
aas
mov
sbb
roll
add
cli
adc
jmp
jmp
ret
push
jb
mov
push
ftst
xor
cmp
push
cld
lret
out
push
iret
jb
lods
mov
adc
mov
dec
cmp
loopne
fidivrs
push
inc
mov
mov
dec
loopne
sub
test
xor
test
xchg
mov
cmp
sub
ljmp
push
fnstsw
jge
xchg
push
add
adc
mov
mov
aam
fs
scas
sbb
pop
sub
xchg
adc
or
jns
inc
and
jle
lods
pop
out
int3
dec
popf
lock
mov
sbbl
add
sbb
mov
sbb
push
mov
inc
xchg
lods
es
cmpb
jae
or
mov
mov
stos
pop
jbe
adc
clc
lret
in
jo
push
data16
fidivs
ja
push
mov
push
mov
xchg
fbld
rcrb
std
mov
xchg
mov
inc
enter
arpl
sbb
push
cmp
pop
ficoml
inc
jbe
lods
out
pop
mov
mov
inc
mov
js
cmpl
dec
add
push
jne
lds
sbb
mov
push
push
pop
xchg
out
add
mov
cmp
mov
cs
in
xor
mov
dec
dec
dec
rclb
or
rcl
sub
fdivrp
push
sbb
inc
sbb
cmp
xchg
pop
cwtl
xor
rolb
mov
mov
pop
movsl
in
mov
imul
fsubrl
mov
enter
xchg
xchg
xor
pop
int3
das
add
pusha
mov
xchg
lea
xchg
in
testl
lea
cld
xchg
mov
stos
outsb
add
xor
dec
cmp
sub
loopne
enter
mov
inc
cmc
mov
inc
into
mov
sarb
sbb
sub
popf
push
jge
clc
mov
mov
lret
aaa
mov
mov
mov
lcall
lahf
sub
xor
in
dec
mov
dec
loope
jecxz
dec
mov
pop
mov
add
out
sbb
sub
add
imul
sbb
cltd
cmp
pop
outsl
cli
pusha
cwtl
lret
lret
xchg
push
test
inc
fiaddl
cmpsl
mov
stc
popf
fnsave
jno
ja
sbbb
pop
outsb
xchg
popa
sbbl
mov
sub
icebp
push
pop
pop
addr16
jne
or
jns
jno
movsb
std
push
jl
test
jle
idivb
fdivrs
or
mov
scas
jmp
and
xlat
idivl
push
outsl
ja
orb
out
out
sti
pop
and
pop
inc
and
mov
pop
and
push
push
mov
pop
cltd
fistps
mov
xchg
pop
ret
mov
movsl
jecxz
inc
inc
push
repnz
and
fnstcw
mov
fldl2t
push
ja
wrmsr
shrl
pushf
xchg
or
arpl
aaa
aaa
mov
add
lods
inc
cmp
xlat
popf
xor
cld
mov
pop
iret
sub
or
push
stos
cs
cli
add
sub
push
cs
push
add
out
cld
scas
mul
aas
scas
fbstp
arpl
repz
sub
pop
icebp
nop
inc
jecxz
cmp
push
mulb
test
shrb
inc
push
cmc
jg
insl
sbb
sub
cmp
fs
movsl
add
add
stos
pop
andl
cmp
ret
and
sub
push
fsts
sub
jnp
mov
fidivs
insb
mov
scas
mov
pop
outsb
pop
je
inc
insb
shrl
mov
mov
inc
lea
inc
iret
lea
ja
xor
push
sahf
pop
xchg
sarb
negl
out
lea
xor
adc
lods
jo
mov
fs
or
xchg
popa
sub
adc
dec
loop
xchg
mov
test
lret
xlat
xchg
repz
push
fs
jo
shll
lock
pop
add
stc
gs
lret
jae
out
dec
add
cmpsl
push
frstor
sub
mov
iret
bound
insb
sbb
inc
add
push
dec
mov
rorl
cld
and
mov
scas
jmp
xchg
lock
cmp
outsl
aas
dec
push
inc
xor
into
and
aam
nop
dec
inc
adc
cmp
ss
push
aaa
sub
or
cmp
add
sbb
pop
mov
adc
pop
push
leave
pusha
insl
push
cmp
inc
xchg
icebp
push
sahf
xor
lret
or
int3
jmp
dec
pop
or
sbb
aam
inc
jmp
inc
pop
out
mov
rolb
mov
dec
push
lds
add
mov
xor
call
fs
cmc
hlt
mov
lahf
mov
outsb
ja
pop
xchg
sbb
int3
xlat
mov
push
cli
mov
and
mov
addl
pushf
je
int3
push
xor
ficompl
lret
xchg
pop
outsb
in
cmp
loop
shl
mov
mov
sub
jae
repnz
ja
or
repnz
push
orb
loope
pop
in
rcr
stc
fldl
sub
lahf
mov
shr
pop
adc
jp
cld
and
mov
jge
pop
add
sub
jbe
add
bt
push
ss
aaa
das
pop
cmp
mov
dec
cmpsb
push
jge
addr16
dec
ficoml
leave
push
xor
adcb
adc
fucom
jp
push
xchg
lods
lea
andl
adc
lods
jmp
jnp
popf
pop
pop
inc
mov
push
filds
cs
inc
data16
dec
out
je
or
cmpl
mov
mov
xor
push
cltd
dec
or
push
fisttps
addr16
arpl
xor
jmp
mov
out
xor
fists
pop
xchg
jmp
stc
cltd
mov
jno
adc
dec
xor
lcall
outsl
mov
adc
orb
pop
add
aaa
xchg
xor
stc
adc
fdivrl
lcall
push
sahf
lods
outsl
dec
sbb
pop
sbb
movsl
push
adc
into
das
aaa
iret
imul
dec
mov
out
in
pop
fidivs
push
aaa
pop
aam
fcmovb
inc
icebp
xchg
mul
mov
mov
jbe
cli
stos
mov
xchg
jbe
jg
mov
aad
std
out
das
rcll
adc
xchg
add
sti
or
add
or
nop
cld
addb
cwtl
adc
mov
mov
pop
insl
mov
fldl
out
xchg
cwtl
stos
movsb
inc
fdivr
dec
inc
lods
inc
jnp
in
rcl
out
sub
xor
and
lods
imul
dec
cmp
inc
lret
push
cld
inc
push
ljmp
lock
add
mull
bound
ror
push
inc
sti
or
mov
stos
pop
adc
xchg
sarl
test
ret
push
jo
dec
dec
pop
lahf
icebp
mov
xor
inc
jno
ja
stc
js
mov
mov
lret
clc
fidivl
out
cmpsl
imul
rcr
cmp
fcoms
adc
mov
push
sbb
data16
and
adc
dec
rcrb
outsb
outsl
dec
mov
hlt
inc
push
jle
movsl
and
mov
xchg
sub
mov
fiadds
xlat
mov
mov
in
arpl
jno
rorb
scas
cmp
adc
inc
dec
aaa
lods
sub
leave
mov
ss
test
fistps
daa
sbb
ds
jne
or
xchg
sub
jg
in
ret
add
es
aad
inc
sbb
xor
imul
ja
pop
hlt
jp
mov
mov
adcl
sbb
pop
or
rcll
jno
xlat
sub
or
cmc
push
cmp
sub
test
cmp
scas
pop
dec
ret
cmp
insb
mov
jecxz
aas
mov
imul
ret
lock
addr16
aaa
lods
push
sub
les
mov
push
adc
xor
dec
loop
push
mov
sub
xor
dec
xor
addr16
xchg
dec
dec
lret
bound
sbb
bound
ret
jb
sbb
pop
ss
xor
xchg
add
or
aam
adc
jno
repz
mov
adc
out
cmpl
add
dec
inc
xorl
pop
test
das
mov
outsl
mov
push
dec
es
aam
adc
and
xor
add
mov
or
lods
lret
dec
cmp
pop
ret
dec
rcrb
daa
jb
xchg
loopne
or
cs
pop
xor
pop
arpl
and
in
xchg
out
lea
xchg
sub
mov
int
inc
mov
adc
pop
xor
out
movsl
ja
js
mov
ljmp
mov
hlt
xchg
push
fcoms
test
adcb
jge
cmp
pop
nop
fimuls
mov
lret
mov
cld
std
mov
adc
orb
sbb
and
imul
lahf
js
std
imul
sahf
repz
in
ficompl
xchg
cltd
and
fdivrp
pop
push
lods
cld
test
xor
icebp
mov
xchg
push
inc
lahf
pop
mov
divl
cld
mov
or
nop
orl
cmpsb
pop
fistl
out
sub
or
add
lcall
cmp
cmp
mov
and
mov
fcmovbe
cmp
popa
and
std
jnp
fsubrl
xchg
xchg
add
and
notl
sbbb
jbe
es
pop
cltd
add
test
mov
xchg
negb
sbb
adc
aad
and
push
add
sbb
adc
in
cmp
sub
cmp
cs
fsubrs
and
in
sub
imul
pop
jbe
pop
dec
cmp
stos
cmp
mov
mov
les
filds
lods
addb
repnz
jo
pop
lcall
sub
imul
xor
movsl
cmp
mov
movsb
cmpb
lods
mov
jmp
dec
aam
mov
mov
sbb
in
imul
push
push
push
adc
mov
mov
daa
rcrb
mov
aad
dec
cli
push
jmp
insb
pushf
ror
xchg
pop
imul
loope
xor
mov
mov
test
xor
cmp
jae
xchg
pop
in
dec
icebp
add
xchg
into
xchg
call
icebp
mov
mov
sub
ret
or
push
cmp
mov
sub
ds
xchg
nop
sbb
outsb
shlb
push
jg
cmc
in
adc
jae
cld
push
rcrb
cwtl
xchg
mov
jge
mov
mov
fiaddl
inc
lods
nop
mov
push
push
dec
jns
jmp
and
xchg
imul
pop
mov
dec
or
sub
xchg
and
cmp
pop
loopne
divl
in
push
mov
xchg
cmp
dec
jge
es
stc
xchg
jle
jbe
or
jnp
xchg
outsb
call
fcomip
mov
mov
mov
lods
andb
cmpl
push
jne
repnz
cltd
test
xchg
fdivs
cs
popf
pop
out
aam
in
out
fldcw
cmp
jmp
pop
push
lods
into
xorl
push
cmp
push
ljmp
call
push
in
sbb
fucomi
repz
ret
sub
gs
test
push
aaa
ret
xchg
out
sub
cltd
pusha
and
xchg
add
ja
lods
bound
loope
jmp
mov
pop
mov
pushf
mov
repnz
iret
and
pop
dec
dec
and
sahf
mov
and
rcrb
cli
dec
adc
inc
lret
mov
xchg
mov
sti
rcl
rcrl
pop
mov
mov
in
push
pop
fimuls
jo
out
lahf
stos
dec
mov
jnp
or
int3
mov
arpl
call
lahf
cmp
shrl
cltd
push
repnz
dec
pop
mov
inc
icebp
jae
push
dec
xchg
iret
js
shlb
push
pushf
jl
mov
push
pushf
inc
push
mov
fbstp
aas
xchg
shlb
je
stc
lret
push
adc
dec
jnp
mov
in
cld
dec
flds
ds
inc
repz
jno
in
jae
mov
lock
sub
jl
xor
test
ljmp
std
movups
adc
mov
mov
pop
xchg
cmp
leave
or
aas
je
jecxz
imul
or
cli
dec
ss
jge
or
pop
or
push
cmp
dec
div
and
sar
mov
xchg
jne
stc
mov
or
mov
movsl
xchg
and
pop
cld
push
push
insb
push
sbb
xor
cmp
or
push
popf
nop
nop
insl
add
in
jns
daa
mov
lret
stos
cmp
dec
adc
loop
xchg
xchg
leave
jne
sbb
test
ja
andl
rep
xchg
lahf
inc
jno
jmp
cs
mov
inc
scas
popa
add
cwtl
jae
aaa
xchg
imull
mov
movsl
nop
and
cmp
inc
popf
push
in
test
test
scas
loope
fcomip
icebp
mov
sbb
ret
cmp
xor
enter
dec
fisubl
enter
ja
mov
mov
xchg
pop
call
sbbl
xor
ja
test
push
mov
and
jae
insb
and
popf
fwait
add
inc
pop
xor
insb
mov
xor
push
mov
repz
mov
movntps
int3
fucomp
mov
pushf
movsb
int
push
rorl
jno
leave
cmpsb
dec
dec
mov
iret
ret
mov
sub
and
jmp
divb
in
nop
shll
dec
negb
push
fldcw
mov
pusha
out
and
repz
push
rcrl
popa
xchg
xorl
push
cmpsl
fwait
sti
fdivs
sbb
adc
pop
rcll
in
push
sub
jns
and
repnz
and
into
cmp
add
repz
and
jb
test
xlat
cmpsb
or
xor
movsb
jg
ret
dec
or
dec
ja
fs
pop
xchg
inc
adc
movb
sarl
repz
fisubrl
addr16
cmp
stc
pop
fistpll
add
negb
add
mov
std
cld
mov
repz
cmp
in
add
adcb
push
jno
cmpsl
lret
lahf
sub
out
cs
jb
push
add
xlat
pushl
std
cltd
jecxz
jnp
mov
fstpl
clc
imul
mov
adc
cmpsl
xorb
mov
shlb
fs
adc
dec
cmp
imul
movsb
cmp
ret
xchg
dec
fildll
xchg
ss
inc
mov
es
adc
mov
push
insl
lret
cmc
and
jp
fs
xchg
or
mov
popa
cltd
pop
adc
rolb
fistpll
push
cmp
add
call
test
lcall
in
cwtl
or
sub
icebp
dec
frstor
cmp
mov
xchg
sbb
adcb
pop
jmp
xchg
in
inc
inc
inc
shl
cmp
leave
dec
pop
gs
hlt
cmpsb
mov
arpl
ja
out
test
js
adc
ljmp
fsub
popa
or
insl
and
aas
in
dec
sbb
sub
mov
inc
jae
push
out
cmp
cmpsl
enter
mov
jb
mov
push
cmpsb
cmp
push
pop
cmp
dec
adc
cmc
sub
daa
push
cmpsb
mov
push
inc
loop
fdivl
cmpsb
std
test
stos
lret
cld
lret
inc
movsl
ja
aas
sti
out
sbb
cwtl
sbb
cmpsb
mov
aad
addr16
cmp
add
cmp
jb
jns
or
popa
enter
je
mov
fisttpll
cld
xchg
sub
sbb
inc
cmp
testl
and
push
cmp
pop
pop
add
pusha
testl
adc
mov
inc
filds
cmp
hlt
mov
mov
pop
mov
push
popf
pop
les
shl
mov
sub
lods
aam
sbb
lret
xor
sahf
dec
pop
shld
ret
xchg
inc
inc
cmc
dec
add
jmp
testl
jno
xorl
cmc
xchg
aaa
sahf
push
movsl
cmp
push
add
xchg
mov
inc
pop
rcr
mov
mov
xor
sbb
je
mov
jle
adc
or
mov
pushf
pop
sbb
add
scas
in
fwait
or
mov
sbb
jmp
dec
out
pop
jle
movb
push
decl
lret
enter
testl
push
int
fdivrl
pop
push
lcall
add
test
iret
popf
lahf
xchg
insl
mov
push
hlt
pop
mov
adc
push
mov
jne
loop
loope
mov
clc
aas
test
dec
add
cmp
cmp
mov
jno
scas
and
adc
stos
cmpsl
jmp
stos
das
lahf
inc
dec
lock
fidivs
dec
sub
mov
push
stos
cmp
xor
add
roll
xchg
int3
out
mov
push
fbstp
pop
fxch
lea
push
in
push
push
out
test
or
pop
mov
int
arpl
hlt
lret
adc
ja
inc
outsb
test
int3
movsb
idivl
adc
adc
popa
out
add
cmc
cmp
lahf
mov
cmpsb
jne
fmulp
and
push
sub
test
mov
lods
or
testl
cmp
lds
popa
pop
scas
jbe
iret
sbb
mov
ja
and
dec
enter
test
mov
aam
sbb
jb
loop
aam
movsb
fcompl
fisttps
cmp
mov
fisttps
test
gs
adc
addl
loope
js
rolb
stc
andb
push
mov
mov
dec
das
inc
jg
and
rcrb
std
jo
pause
daa
sub
out
dec
scas
mov
bound
loopne
in
mov
add
mov
sarb
mov
aas
adc
and
pop
fiadds
xor
push
inc
data16
call
popf
incb
mov
jae
adc
fildll
sti
mov
sbb
dec
leave
popa
clc
cli
push
cmp
ds
jne
fmull
inc
mov
stos
mov
mov
inc
or
cld
inc
xlat
push
dec
ljmp
jmp
pop
cmpsl
or
adc
mov
std
cmpsb
xchg
push
mov
cmp
jbe
sbb
stos
fcoms
and
mov
dec
stc
sar
mov
sub
lcall
nop
xor
dec
pop
and
sbb
popf
dec
lock
ljmp
mov
push
xlat
les
dec
js
dec
sbb
popf
les
iret
xchg
insb
adc
pop
xor
push
test
add
and
push
ljmp
inc
cmpsl
lds
js
orl
sbb
mov
pop
cmp
fsubrs
xor
lret
mov
sti
stc
repz
in
jl
add
ret
mov
inc
jecxz
into
jae
sub
out
push
out
clc
paddw
ljmp
mov
insb
out
xor
and
ficomps
jl
scas
imul
fdivs
adc
pop
fcoms
test
or
jge,pt
arpl
js
mov
mov
cmp
sbb
add
and
adc
xchg
inc
jbe
out
sub
sbb
cltd
push
fwait
loop
out
and
sub
stos
jne
adcb
xchg
push
movsl
call
cmp
imul
dec
mov
ljmp
sub
ret
inc
sub
rep
pusha
ret
pop
pop
fucom
mov
les
sub
mull
test
lock
mov
imul
xor
std
push
push
leave
jnp
jg
add
pop
ret
outsl
and
outsb
rorl
cmpsl
in
insb
imulb
adc
jle
test
cwtl
enter
xor
ljmp
outsb
xchg
rorb
in
je
sti
movsl
cltd
push
fmul
rorl
mov
mov
loopne
gs
dec
in
xchg
in
insb
inc
pop
mov
jge
push
into
subl
inc
ljmp
pop
xor
jns
mov
jno
lret
cmpsb
in
arpl
fnstenv
fisttps
sbb
push
shrb
popa
and
data16
lock
rcl
daa
or
inc
cmp
and
fscale
or
stos
adc
jns
jl
ds
and
std
dec
and
xor
mov
shlb
jne
mov
jl
lcall
jl
lret
sbb
das
test
pushf
scas
iret
jnp
add
and
pop
mov
push
pusha
mov
add
ret
scas
rorl
pop
mov
ja
cmc
mov
rcrl
fbstp
outsl
cmpsl
negl
mov
add
shlb
mov
xchg
shl
cmpsl
mul
pop
or
js
shrb
sbb
inc
pushf
dec
push
push
std
lea
mov
sbb
cmp
int3
repnz
imul
inc
mov
popa
add
fisttpl
outsl
adc
xchg
xlat
inc
mov
mov
mov
dec
xchg
xchg
lock
in
push
fsubrp
mov
adc
inc
cmp
lods
mov
data16
xchg
jo
mov
lods
jo
push
dec
imul
add
mov
jo
add
sbb
pcmpeqb
popa
xor
call
cmp
mov
adc
push
fwait
pop
xchg
jb
pop
test
add
ret
outsb
jnp
icebp
sahf
cmp
repnz
and
kmovb
aaa
push
and
in
pop
pusha
jmp
scas
iret
inc
xor
fnsave
and
test
lret
mov
fwait
mov
les
pop
clc
dec
dec
movsl
popa
add
mov
add
imul
adc
cmc
inc
aaa
mov
mov
arpl
cmp
and
mov
pop
dec
jmp
mov
out
sub
clc
sahf
add
pop
loop
popf
lret
push
aas
sub
jo
push
lods
xor
jmp
push
and
pop
int3
push
fstpl
ss
scas
int
xchg
sbb
cs
insl
aam
out
sti
or
in
cmp
sub
xchg
ficompl
sbb
cli
sub
call
scas
mov
or
mov
lods
fstpl
enter
push
dec
es
push
adc
mov
test
sbb
in
stos
mov
cmp
jae
mov
stc
or
adcb
inc
add
popf
int
inc
inc
xlat
insb
out
popa
inc
push
shll
xchg
sub
xor
sub
cmp
sub
xor
and
push
fcomi
lock
dec
adc
rolb
cmpb
cli
cmp
mov
xor
push
push
push
inc
fisubrs
lods
sar
push
sti
shrb
jns
mov
imul
jg
sbb
popf
fiadds
mov
and
sub
push
sti
aad
xor
pop
mov
fsubp
jp
add
fisubs
bound
aad
cmp
imul
xchg
push
aas
mov
rorl
mov
mul
sub
sbbl
clc
lea
cmp
mov
hlt
dec
sbb
fcoml
xchg
dec
pop
loop
pop
xchg
push
punpcklbw
cmp
dec
push
mov
xchg
inc
mov
jge
cwtl
and
push
fadd
push
loopne
gs
out
push
and
subl
cld
std
pushl
push
or
xchg
rclb
and
sbb
stc
fldt
add
into
inc
frstor
int3
xchg
pxor
mov
mov
add
cmp
mov
ljmp
mov
sub
mov
mov
mov
pop
pop
insb
xor
pop
sub
dec
arpl
mov
loop
mov
or
shlb
loop
loop
int
pop
ljmp
cmpsl
fnstenv
iret
daa
outsl
jnp
lock
mov
cmp
cmp
add
xor
pop
inc
xchg
dec
mov
cmpsl
sub
nop
pop
imul
sbb
sbb
inc
push
push
jb
or
ffree
cltd
and
aad
jmp
sub
mov
add
lretw
cld
out
or
mov
push
cwtl
aaa
xchg
mov
jb
sub
in
add
fwait
imul
inc
or
cmp
addb
push
push
xor
call
mov
dec
repnz
addr16
movsb
cmp
hlt
sbb
popa
pop
sub
xchg
inc
out
xchg
lock
popf
lret
xchg
movsl
add
aaa
movsl
xor
xchg
test
adc
loopne
sub
lret
push
cli
stc
adc
ja
mov
jns
cmp
lods
sarb
cmp
xchg
iret
cmp
mov
pop
adc
ret
fisubrl
int
icebp
fcoms
cld
fisttps
pushf
cmp
cmpl
add
testl
insb
adc
mov
fucom
dec
jb
movsb
lret
outsb
xor
mov
sbb
dec
test
fisttpll
and
push
ret
outsl
ja
mov
mov
mov
xor
arpl
enter
jp
out
fst
ret
mov
loopne
add
fdivs
gs
adc
xchg
jne
out
mov
cmp
sbb
adc
mov
mov
sbb
dec
xor
lods
xchg
sub
mov
jo
xor
cltd
testl
add
imul
jmp
leave
sbb
or
cmp
mov
adc
mov
iret
xchg
nop
out
dec
and
jp
jbe
jo
fldl2t
lock
add
fistpl
test
pop
adc
stos
xor
fdivl
dec
out
pop
cmpb
hlt
sbb
mov
in
test
loop
jmp
push
mov
test
lret
cld
out
loope
std
lret
mov
and
pop
out
rorl
cmpsb
inc
sub
fdivs
cmp
dec
sahf
push
inc
mov
sbb
arpl
imul
stos
jle
repnz
mov
inc
movsb
std
jne
inc
popa
rclb
ja
xchg
sahf
stos
push
lds
add
sub
sahf
nop
imul
xor
movsb
push
pushf
rclb
jecxz
rep
add
sub
adc
jp
sbb
sub
into
sbb
cwtl
daa
mov
hlt
cmpsb
inc
push
cmp
insb
add
enter
xchg
xchg
push
or
push
sub
movsb
inc
gs
popf
stc
bound
dec
mov
stos
lea
cld
lret
xchg
push
lret
adc
mov
xchg
mov
jo
cmp
cmp
stc
data16
shl
pushf
cli
or
push
cmp
fs
pop
dec
mov
mov
fdiv
adc
adc
nop
pop
cwtl
xor
mov
push
jmp
push
hlt
aaa
jge
addb
xchg
lcall
loope
push
sbb
pop
cmp
popa
roll
sub
pop
push
out
inc
mov
je
sarb
iret
sub
cmc
sub
mov
rcll
inc
fldl
and
xor
xchg
hlt
mov
das
or
xchg
call
repz
mov
adc
arpl
xchg
ljmp
pop
popf
out
xchg
out
xchg
and
lods
mov
inc
enter
jne
push
inc
jmp
out
ror
data16
lret
mov
sbb
pop
mov
mov
aas
jle
xorb
imul
mov
dec
xor
incb
lods
lods
les
pop
scas
ljmp
loopne
mov
insb
mov
lds
into
imul
adc
fnstsw
sbb
in
aaa
andb
mov
sub
push
sbb
cmp
jbe
or
arpl
mov
pop
dec
and
dec
mov
sub
std
push
std
cmp
cmpsb
jmp
outsl
xchg
mov
repnz
xchg
movsb
xchg
mov
in
adc
xchg
xor
jne
push
std
cltd
imul
push
push
dec
cmp
movsb
sbb
add
mov
or
push
xorb
pop
repnz
cmp
fstps
cmp
test
ficompl
jmp
rorb
add
lahf
stos
xchg
je
mov
vpunpcklbw
cli
push
jo
divb
ret
mov
faddl
jmp
js
mov
fldt
in
xor
ds
mov
scas
mov
and
cmp
cmp
jbe
fbstp
sarl
lods
inc
scas
jns
jae
inc
sahf
mov
in
or
je
scas
xchg
clc
pop
in
int
ljmp
out
popa
les
xchg
aas
inc
pop
add
mov
xchg
cmp
jle
mov
mov
addr16
inc
test
dec
pop
fs
int
rcll
fucomi
sbb
mov
sbb
push
pop
out
inc
push
imul
bound
imull
xlat
mov
mov
mov
fwait
inc
fidivrl
adc
ret
outsl
enter
lds
aas
test
or
jle
fwait
mov
loopne
add
xchg
icebp
js
aas
fldl
insl
jp
cli
cmc
jmp
or
shl
cwtl
js
mov
cs
ret
js
sbb
push
xchg
inc
push
mov
ficompl
inc
jl
js
cmp
sub
jae
pop
cmp
jnp
enter
adc
sbb
xchg
in
lahf
hlt
push
sub
add
inc
fistpll
mov
pop
out
movsb
stc
test
out
jae
inc
loop
imul
insb
hlt
scas
mov
cwtl
fildll
xor
jne
call
jmp
jle
out
dec
ret
data16
repz
dec
sbb
cmp
add
cli
aad
shll
jo
dec
mov
adc
out
cli
or
pop
xchg
int3
notl
out
loop
jl
mov
adc
dec
mov
fs
push
push
push
xchg
mov
mov
sub
fwait
inc
inc
andb
sbb
das
faddl
jge
jb
xorb
cli
test
lret
jg
mov
push
sub
jae
rcll
rcl
xchg
inc
fcmovnb
popf
ret
imul
addl
push
or
mov
inc
inc
add
and
push
or
xor
or
push
or
or
mov
cltd
movsl
jge
xor
int3
xor
fnsave
mov
iret
es
mov
jns
xchg
cmp
cmp
mov
lahf
jbe
je
adc
jle
lods
mov
fwait
pop
cwtl
sti
daa
sahf
pop
mov
das
adc
cmc
mov
loope
inc
fstpl
in
xchg
push
out
inc
mov
mov
dec
dec
xor
mov
jnp
mov
adc
or
pushf
mov
aas
je
inc
loopne
sbb
rol
jge
insl
arpl
aaa
or
xorb
sub
into
pop
dec
cmpsb
add
mov
xor
mov
sti
je
push
dec
add
and
adc
mov
lods
aas
mov
movsb
mov
aad
pop
pop
loop
xor
stos
fcompl
xlat
adc
mov
jne
sub
mov
sbb
push
sub
cmp
daa
lcall
cltd
xor
loop
pop
mov
mov
clc
fmuls
cmp
add
pop
lds
dec
dec
scas
mov
out
repnz
mov
jne
insb
add
xchg
out
jmp
test
cmp
sti
out
inc
addr16
sarb
in
push
lock
repz
cli
stos
mov
gs
cmp
sbbb
lods
mov
push
pop
out
imul
aad
mov
sbb
sub
fdivrs
cli
inc
ret
sub
push
lea
mov
lcall
push
leave
sub
addr16
outsl
sbb
mov
pop
adc
ss
sub
mov
adc
cld
outsl
push
stc
sbb
movsl
sub
repnz
dec
fcoml
fwait
addr16
sub
orb
ss
xor
inc
cltd
pusha
mov
cwtl
dec
in
jne
mov
xchg
mov
or
andl
or
lea
pop
cmpsb
cmp
int3
gs
out
ret
ficoms
andl
loope
sbb
in
clc
stos
call
inc
cmpsb
mov
idivl
push
aaa
mov
pop
sub
mov
dec
sbb
dec
outsl
jno
jl
fdivs
pop
mov
jmp
mov
inc
sahf
movsb
pop
fsub
xor
dec
mov
test
cmp
push
jno
ss
in
pop
xlat
outsb
xchg
jmp
or
dec
adc
into
insb
sub
ret
sbb
adc
dec
jbe
popf
and
inc
rcrb
in
sbbl
xor
fcomps
scas
or
aad
popa
popf
ss
fmul
and
aas
inc
push
jno
cmpsl
out
sbb
test
lods
pop
and
jg
fldl
mov
push
lock
cmpsl
jo
pop
int3
ja
rcl
aaa
pop
mov
pop
cmp
mov
gs
out
stos
mov
xor
dec
cmp
lea
and
sub
dec
xchg
dec
lret
mov
jnp
test
dec
pop
imul
mov
hlt
subl
xchg
arpl
in
insb
add
mov
pop
lds
dec
jno
iret
push
mov
stos
out
notl
jecxz
cld
int3
xchg
hlt
dec
ret
xchg
or
out
daa
data16
ss
push
mov
ja
jo
mov
sbb
push
cmp
adc
and
inc
insl
shll
repnz
outsl
jecxz
xchg
add
xor
fxch
cmp
lods
cmp
dec
pushf
aaa
jge
call
pop
addr16
fnstcw
imull
adc
mov
inc
cmpsb
dec
ss
or
test
mov
jnp
pusha
sbb
out
shlb
cmpsl
mov
int
pushf
icebp
xchg
add
data16
popa
mov
cmp
and
jp
xchg
cwtl
fdivrs
mov
adc
je
pop
test
xchg
pop
xor
popa
or
jae
in
rolb
lds
jge
mov
mov
rclb
push
jle
ret
jle
sbb
add
mov
adc
xor
imul
fsubr
xchg
cs
sub
push
setle
and
lcall
sar
inc
mov
mov
fstpt
jg
cld
sahf
test
lret
flds
and
or
hlt
jbe
mov
sub
aam
lret
cmp
mov
scas
les
push
stc
test
addr16
mov
adc
in
test
inc
sub
xchg
mov
jge
pop
je
aas
xor
dec
outsl
shlb
push
mov
sti
lods
jmp
mov
outsb
das
rclb
es
movsb
sbb
xchg
cld
xchg
sub
sbb
in
mov
shl
fxch
pop
jnp
lods
insl
lret
adc
jl
fmul
push
popf
xchg
push
ror
push
and
imul
and
imul
add
add
pop
out
sub
xchg
cmp
dec
add
in
fwait
dec
add
mov
stc
pop
cmpsb
cmp
pop
cmp
pop
sub
push
sub
dec
loopne
dec
cli
loopne
cltd
push
cmpsl
jle
add
and
out
jecxz
aaa
add
imul
sub
push
testb
rcrb
frstpm(287
cli
mov
ja
sbb
ss
push
xchg
xor
clc
outsl
cli
mov
push
ss
dec
mov
and
cmp
inc
jnp
dec
filds
in
shlb
push
cmpsl
jg
push
mov
insb
pop
fistl
jge
or
xchg
divl
add
loop
enter
add
jae
lahf
lods
and
int3
loopne
fwait
xor
inc
mov
int3
fstps
dec
sub
cmp
enter
jbe
push
xor
push
call
xchg
jmp
pop
cmp
imul
popf
test
lret
addr16
int3
icebp
or
lret
sub
sbbb
jmp
mov
push
adc
ss
push
in
addps
stc
ds
nop
pop
cmp
inc
enter
push
cmp
push
jb
rep
mov
push
in
rorb
ja
aad
ja
fcoms
popf
push
stc
cmc
sbb
jbe
lahf
insl
hlt
sbb
jp
es
or
sub
aaa
or
pop
leave
push
ds
repz
and
jne
cmpsb
in
or
inc
sbb
add
scas
cmp
dec
in
into
popf
pop
enter
test
fbstp
test
into
fnstenv
push
dec
repnz
stos
inc
popf
cs
aas
addr16
cmpsb
adc
pop
jmp
addr16
icebp
push
into
pop
jo
data16
adc
mov
mov
mov
cmp
mov
pop
dec
sbb
sub
pop
jb
pushf
sub
icebp
jnp
sahf
jg
popf
inc
testl
cwtl
sbb
push
pop
adc
jnp
xlat
outsb
out
cmpsb
clc
sahf
dec
movsl
cmp
inc
arpl
lods
lret
daa
and
insb
fbld
int
inc
push
pop
inc
or
sar
mov
in
pushf
mov
inc
dec
js
repnz
popa
std
xchg
js
and
int3
fstp
in
orb
aad
call
fs
mov
cmp
mov
pop
in
jns
fisttpl
std
out
pop
leave
lea
fildl
cmp
arpl
mov
add
push
shl
lret
mov
fildll
pusha
dec
lcall
sbb
enter
pop
jmp
imul
scas
out
mov
push
data16
test
push
call
ret
mov
pop
testb
sbb
cmp
push
imul
sbb
xchg
cmp
inc
add
jne
mov
cmpsb
cmp
xchg
pop
out
ret
sarl
fdivl
jle
lods
cmpsl
jae
shl
inc
repz
sbb
jo
insl
inc
sbb
mov
push
mov
xor
pop
add
and
in
or
in
repz
shrb
les
inc
cmp
fistl
leave
xlat
sub
and
pop
sub
outsb
mov
ja
mov
test
add
inc
in
mov
or
cld
dec
or
leave
cmp
repnz
add
inc
fisubs
dec
out
cmc
pop
cmp
loop
push
jnp
mov
js
mov
popa
imul
arpl
leave
jo
adc
push
inc
ficoml
enter
fsubs
push
ss
dec
out
popf
hlt
pushf
imul
adc
aam
jmp
push
popf
int3
hlt
mov
shlb
add
rcll
or
dec
mov
xchg
pop
jmp
maxps
jnp
add
ljmp
xor
adc
lret
dec
sub
sub
inc
mov
rol
inc
clc
mov
incl
pop
sub
add
dec
std
shl
mov
fistpll
sbb
addb
nop
das
lret
pop
and
mov
jno,pn
push
inc
pop
scas
xchg
cmp
pop
push
adc
sbb
jo
dec
push
movsl
subb
stc
jp
pop
adc
cmp
lock
and
add
add
dec
out
mov
cmp
arpl
or
mov
idivl
sti
sbb
icebp
cltd
xchg
mulb
adc
jbe
jne
ss
mov
mov
cmpsl
sub
push
roll
jnp
scas
mov
sti
jle
dec
xor
leave
fistl
inc
cmpsl
aaa
icebp
add
jo
fcomi
int3
nop
stos
jbe
pusha
fildl
loop
fsubl
mov
testl
add
out
gs
aaa
repnz
in
cwtl
test
add
jecxz
jne
or
int
pop
sub
add
mov
xchg
data16
iret
jmp
mov
repnz
inc
inc
shrl
dec
mov
fcomps
inc
jl
inc
cli
mov
or
into
jl
add
sub
out
mov
inc
mov
adc
and
pop
mov
aam
add
mov
sbb
lret
mov
lcall
xchg
inc
fldenv
inc
push
inc
mov
mov
fstpt
xor
adc
cmp
xor
jmp
lret
mov
lock
aam
cmpsb
xchg
into
subl
sbb
jae
sbb
mov
stos
pop
mov
add
xchg
fwait
cmpsl
or
add
ret
decl
imul
repnz
xchg
mov
loop
stos
aam
cmp
roll
mov
add
sub
cmp
movsl
mov
jae
int
sub
dec
jno
and
fidivrl
sbbl
cmp
fcmovnb
in
insl
push
rcrb
insl
cld
and
sub
pop
mov
dec
arpl
rcll
sbb
inc
mov
pop
sbb
in
icebp
adc
repz
adc
add
icebp
out
out
cmpsb
push
mov
gs
xor
aaa
dec
sbb
sub
pop
sbb
mov
mov
ret
in
or
fwait
push
lcall
sub
rclb
vaddss
xchg
sub
xor
push
jle
dec
inc
mov
out
out
je
sbb
jl
cltd
xor
or
pop
cmc
je
daa
inc
add
lods
add
ss
jecxz
pop
inc
or
arpl
xchg
xor
xchg
mov
ficoms
push
dec
mov
mov
call
cmp
push
adc
jbe
aas
push
rol
cmp
cld
outsb
outsl
mov
push
jne
add
push
xor
cmp
das
pop
xchg
jno
testl
popf
sub
fists
push
lret
mov
std
sub
outsl
cmp
or
mov
or
xchg
mov
std
sbb
or
dec
lcall
mov
int
ds
cmp
in
xchg
push
pop
or
mov
call
fcomip
cmp
cmp
dec
out
nop
data16
add
xchg
adcl
xchg
inc
in
sbbb
pop
push
out
add
popf
adc
lcall
xor
popf
push
fcomip
lahf
sahf
cmp
and
ror
dec
and
pop
lods
mov
and
xchg
loopne
rol
xchg
dec
mov
out
push
inc
adc
outsl
sbbl
xor
jo
jnp
ja
aad
sbb
repnz
pop
lods
imul
sbb
bt
mov
jmp
jno
stc
in
nop
daa
inc
jecxz
lcall
push
cs
imulb
pop
in
mov
pop
adc
inc
fucomi
shl
mov
addr16
fsts
repnz
shll
dec
xchg
stc
jmp
movsb
ret
daa
stos
sbb
jne
inc
scas
cmp
shrl
pop
add
cmpsl
mov
cmp
or
lea
insb
push
lahf
popa
xchg
mov
jnp
cmc
mov
daa
mov
cmpsb
xor
xor
pushf
out
stos
jne
test
sub
push
jbe
xlat
int3
push
movsb
push
es
push
loope
sub
xor
std
lret
push
inc
mov
pop
sti
mov
or
mov
mov
movsl
pop
arpl
mov
mov
pop
lds
inc
push
xor
sbb
ja
into
inc
inc
adc
adc
mov
insb
mov
int
js
xor
setno
xlat
pop
lock
and
mov
gs
jns
roll
je
and
outsl
mov
aas
repz
cmpsl
xor
js
xchg
cmp
mov
fldt
xchg
in
stos
lcall
jecxz
push
aad
lret
pop
sbb
pop
inc
push
pop
xchg
lods
cmp
jmp
aaa
push
mov
jmp
pop
pusha
pop
xlat
push
mov
xor
fidivs
outsb
inc
xor
xchg
clc
out
and
lock
adc
sbb
test
and
push
cmp
cli
pop
fists
sti
stc
jns
mov
xchg
jge
mov
cmpl
jb
insb
add
leave
icebp
enter
mov
pop
push
fidivrs
into
jae
sub
test
mov
test
fs
outsb
cmp
mov
test
xor
mov
test
mov
ret
adc
insb
shll
lea
je
jl
adc
xchg
sbb
pop
cmp
shlb
dec
hlt
cmp
mov
pop
add
mov
cltd
dec
sub
or
ret
cmp
jecxz
mov
scas
cmp
push
xlat
adc
push
fsubs
out
or
mov
jge
add
enter
leave
out
sub
repnz
mov
adc
mov
in
dec
and
jecxz
mov
rcrl
cmp
jmp
sub
jo
push
je
daa
dec
mov
aas
mov
insl
xchg
fisttpll
insl
xor
push
sub
cli
xchg
sahf
fnstenv
mov
lods
pop
xor
cmc
and
mov
pop
lahf
push
add
lds
lcall
bound
es
or
nop
or
call
ret
mov
mov
fisttpll
jnp
mov
add
fldt
adc
stos
cmp
popa
push
stc
test
sub
xchg
shl
mov
popa
mov
rcll
or
cwtl
dec
ja
push
imul
loopne
push
loopne
aaa
mov
daa
push
repnz
ficompl
cltd
pusha
mov
int
jns
sbb
cld
adc
xchg
jae
fwait
mov
adc
cmc
push
sbb
add
ss
add
sub
inc
int
mov
frstor
leave
daa
mov
mov
xor
arpl
dec
shll
movsl
push
gs
cmp
push
pop
cmp
shll
xor
insl
jno
scas
push
repz
les
adc
sub
arpl
push
ljmp
inc
lods
mov
sbb
mov
movsb
lcall
and
or
bound
cmp
or
scas
aaa
dec
mov
push
and
js
and
xchg
push
repz
ret
mov
mov
xor
mov
sub
subb
add
scas
lret
xlat
sub
jbe
test
mov
incb
mov
mov
jl
loope
jmp
sbb
ljmp
stos
push
ud0
mov
mov
xlat
mov
mov
xor
dec
ja
lret
mov
add
add
outsb
stos
push
loop
test
pop
hlt
out
and
into
addl
sbb
adc
bound
push
pop
icebp
test
js
pop
inc
into
pusha
cli
jno
bound
xchg
mov
popf
and
iret
inc
ds
inc
push
adc
ljmp
je
rcll
push
inc
adc
adc
int
fs
sahf
push
subb
add
icebp
cs
jl
in
mov
push
jne
sub
mov
dec
cmpsb
aas
pop
insl
jbe
sahf
cmp
test
imul
lods
mov
out
test
jp
push
in
orl
daa
dec
push
mov
pusha
mov
sbbl
jecxz
ret
leave
pop
push
lods
fimuls
pop
ljmp
mov
fmuls
repnz
mov
movsl
cmp
movsl
jl
xchg
cmc
movsb
es
jle
in
es
data16
enter
ffreep
sbbb
sbb
cld
or
adc
pop
xchg
push
out
aaa
daa
clc
xchg
jmp
inc
xlat
popa
call
fcmove
outsb
sub
test
imul
loopne
adc
cmp
je
xchg
cmp
cmpsb
push
jae
sbb
xor
push
sbb
aas
inc
mov
pop
movsl
orb
test
and
into
sbb
fldenv
sub
stos
push
dec
push
xchg
jb
sub
inc
mov
mov
pop
loope
fcoms
push
inc
sub
pop
out
cltd
xor
loop
push
lahf
imulb
sti
test
out
cmp
repz
in
mov
clc
out
leave
xor
add
lds
dec
mov
int3
sti
inc
dec
mov
ucomiss
pop
fstpt
xor
test
imul
cmc
push
aas
lock
lock
jecxz
rcll
popa
add
in
adc
adc
stos
inc
sti
mov
inc
push
lret
cmp
lret
dec
jle
jg
sub
xor
sbb
inc
xchg
and
jo
xchg
insb
inc
les
imul
jb
jp
lods
inc
or
mov
stos
jge
sti
daa
xchg
xchg
pop
sbb
mov
mov
inc
adc
xor
cltd
cmpsb
repz
gs
outsl
pop
imul
hlt
add
iret
gs
gs
pop
lock
clc
scas
inc
adcb
jg
mov
stc
es
sub
xchg
cmp
es
not
aad
pop
test
fisubs
and
jmp
add
iret
push
sbb
rclb
sbb
inc
imul
cmp
cmp
mov
mov
mov
shl
mov
cs
mov
repz
xchg
lods
hlt
adc
in
sbb
inc
fwait
pop
cmp
pop
daa
sbb
data16
sahf
pop
les
pop
insb
inc
popa
and
jp
sbb
push
out
and
stc
or
int
jb
cmp
repnz
inc
notb
adc
fmull
mov
adc
jno
push
jne
std
ret
shlb
scas
mov
push
mov
aam
int
push
incl
mov
lret
inc
add
xorl
inc
arpl
xchg
xchg
jle
jecxz
lods
adc
jb
inc
mov
daa
and
rorb
mov
stos
nop
sub
mov
pop
pop
test
jge
aam
inc
cmp
enter
add
push
nop
dec
push
stos
xor
fyl2xp1
ja
sub
xchg
rorb
mov
mov
push
xchg
mov
cmp
in
les
out
dec
out
or
out
ja
cwtl
loop
sbb
repnz
fildll
sbb
sbb
adc
mov
rcll
mov
lods
and
pop
ret
popf
mov
dec
dec
mov
jg
rcll
dec
fwait
jnp
pop
mov
test
mov
push
mov
inc
pop
xchg
lds
push
stc
xchg
pop
imul
je,pn
mov
pop
fidivs
sti
mov
mov
pop
sub
out
div
in
ljmp
sbb
inc
lods
cmp
out
cmc
mov
inc
jb
adc
jb
and
sbb
movsl
lds
jl
mov
cmp
xchg
xor
mov
and
sti
cmc
mov
cmp
addr16
test
adc
daa
adc
js
loope
pop
push
cmp
test
fdivl
mov
arpl
adc
lds
sub
lahf
mov
shrl
lret
fs
aaa
into
jne
movsb
or
psubusw
mov
lahf
test
jns
cwtl
sub
inc
sahf
add
mov
outsl
pushf
sbb
mov
adc
ja
add
lret
push
fsubs
pop
rclb
mov
ret
jne
pushf
push
or
push
or
adc
data16
sbb
xchg
sbb
sub
loope,pt
cld
icebp
insb
mov
push
add
int3
xchg
lcall
std
mov
packssdw
cmpsb
cmp
mov
les
ds
lock
mov
and
jl
outsb
push
jo
add
inc
fnstsw
test
loopne
adc
jo
xor
ljmp
push
stc
or
xchg
dec
and
outsb
fcomps
lahf
xchg
mov
mov
rorl
cwtl
loopne
fs
adc
jnp
clc
mov
lods
ja
stos
sub
dec
xchg
adc
rcrl
mov
push
add
xor
mov
mov
xchg
or
push
nop
test
mov
inc
popa
and
loopne
nop
xchg
inc
movsl
dec
mov
or
cmovno
lods
mov
mov
jge
push
or
add
jbe
test
cmpsl
loop
pop
sub
nop
into
es
rorb
repnz
or
cmp
mov
push
inc
les
push
call
les
pop
insl
xor
fsubl
scas
in
cs
sbb
cmp
cmp
in
cmpsl
sbb
or
xor
inc
loop
push
or
push
xchg
cs
out
xchg
xchg
and
fists
add
cwtl
xchg
and
adc
pop
sbb
js
pop
rcll
pop
scas
push
pop
fbstp
or
std
cltd
sub
shll
cld
loopne
xor
movsb
mov
xchg
leave
out
mov
adc
bound
mov
ljmp
mov
pop
fwait
jge
inc
dec
mulb
inc
push
nop
cmc
ljmp
addr16
or
mov
xchg
adc
cwtl
nop
inc
out
stos
jae
jae
mov
and
and
or
and
mov
cmp
sub
shll
dec
push
stc
lcall
test
fs
sub
jns
movb
rcrb
movsb
adc
icebp
insb
mov
sub
or
cmp
imul
xlat
push
lea
jp
sbb
adc
inc
out
push
ljmp
fnstcw
fwait
or
test
pop
jnp
cmpb
test
rcrb
pop
inc
fnstcw
cmp
jne
mov
pop
xchg
jl
pop
jge
dec
aad
and
sub
sti
xchg
mov
xor
addl
push
mov
jne
cmp
and
insl
shlb
in
xlat
cmp
jecxz
lock
pop
ds
mov
repz
mov
ret
das
pop
jp
aaa
dec
jns
pusha
lret
mov
lock
into
fimull
cmpsl
or
pop
adc
les
test
and
test
push
push
mov
inc
mov
inc
faddp
cmp
lcall
push
stc
add
add
push
test
jg
sub
rolb
push
loop
loop
push
mov
std
rol
stos
shlb
add
repz
popa
dec
xchg
push
std
scas
divl
sub
lea
movsb
addr16
add
mov
pop
cmp
dec
push
je
aam
or
xor
imul
data16
add
adc
loop
mov
xchg
mov
out
pop
popa
enter
and
mov
rorl
insb
jb
lds
call
pop
ljmp
jle
sub
ror
in
jne
lcall
divl
push
sub
imul
cli
push
fnstenv
push
pop
repnz
dec
push
lcall
in
inc
cmp
ja
rol
rcrb
and
add
mov
in
stos
dec
int3
mov
xlat
fnstsw
jbe
mov
fidivl
adc
or
in
test
stos
mov
test
push
inc
or
ret
sbb
mov
es
pop
imul
jl
mov
aam
sbb
mov
mov
jl
in
sbb
fsubrs
cltd
mov
and
je
cmp
loop
js
mov
es
cmpl
jl
jp
lret
add
js
fldl
nop
lret
sbb
sarb
cli
test
scas
sbb
icebp
xor
pop
adc
jmp
xchg
out
bound
dec
push
dec
nop
daa
jnp
testb
xchg
xchg
push
dec
mov
mov
jnp
mov
js
push
xchg
add
je
loopne
mov
loope
and
divl
inc
fisttpl
sbb
pop
mov
push
xchg
mov
outsb
or
negb
pop
mov
ja
jmp
daa
and
sti
xchg
add
out
cmp
cmp
push
test
inc
push
popf
stos
arpl
jge,pn
jbe
pop
pop
iret
or
iret
fnsave
adc
mov
ror
mov
jecxz
sbb
cmp
lcall
pandn
push
push
jns
inc
std
xor
enter
adc
or
xlat
popl
mov
in
imul
sbb
mov
jge
mov
pop
mov
sbb
test
adc
mov
mov
jmp
and
ficoms
orl
out
push
xor
sub
pop
loope
lods
shr
shrl
fisubl
gs
push
mov
lahf
pop
pop
mov
pop
sub
int
adc
repz
adc
rep
loop
test
push
and
lret
cs
pop
insb
xor
hlt
ja
aas
out
jno
rol
sbb
popf
dec
jo
push
lods
mov
cmpsl
adc
lcall
push
mov
inc
xor
fisubrl
insl
cmp
js
fwait
mov
cmp
mov
mov
lods
lcall
mov
loope
push
notl
loope
outsb
lods
shlb
cli
outsl
and
mov
test
bound
sbb
rclb
or
ret
xchg
sbb
loope
mov
test
sbb
aad
mov
xor
leave
cli
std
in
add
sbb
dec
inc
imul
sub
call
xchg
or
mov
fimull
dec
inc
arpl
jmp
out
and
dec
inc
jle
loopne
mov
addr16
and
rclb
outsb
cmpsl
and
rolb
aad
lret
std
pop
out
mov
loopne
dec
sub
pop
pop
cmp
movb
iret
jno
push
loope
test
xor
mov
in
xchg
adc
divl
ds
jo
nop
pop
xchg
das
add
sub
imul
add
lcall
pop
mov
mov
out
push
in
lret
sub
sahf
push
adc
mov
out
mov
loopne
lahf
shrb
cmpl
dec
inc
inc
xor
das
in
and
data16
add
pop
mov
mov
out
shll
test
in
jns
ret
mov
testb
mov
push
mov
jle
imul
fistps
inc
adc
test
cmp
cmp
mov
dec
or
scas
xor
or
and
in
pop
add
stos
sbbl
insb
mov
mov
or
pusha
cmc
mov
pop
out
push
inc
cmpsb
movzbl
add
mov
mov
maskmovq
notl
scas
inc
fldcw
jbe
orb
pop
cwtl
mov
idivl
mov
cltd
inc
push
jb
xor
lods
or
lcall
leave
loope
and
and
xchg
mov
lea
adc
bnd
cltd
xor
or
gs
mov
in
fldenv
push
push
xchg
repnz
cld
xchg
sub
mov
loop
leave
movsl
cmp
inc
xor
xor
ja
imul
xchg
jae
push
mov
or
pop
out
and
inc
shl
adc
clc
mov
push
push
push
sub
add
call
fidivs
outsl
daa
push
xor
outsl
sti
inc
dec
mov
fisubrl
hlt
cmp
repnz
push
jno
mov
nop
lods
mov
cmp
cmp
ja
int3
pop
sub
cmp
pop
mov
rcr
inc
inc
fs
push
mov
push
iret
mov
mov
idivb
mov
rorb
push
dec
loop
addb
push
call
insl
pushf
pop
dec
sahf
mov
ret
sub
mov
fmulp
int
jb
jle
push
dec
test
shrl
fbstp
cmpsl
ret
in
sbb
xchg
hlt
adc
shll
pop
xchg
xor
sbb
mov
jae
popf
jo
jne
les
popf
sbb
aas
and
jae
inc
push
inc
aam
sbb
fstpt
mov
xchg
rclb
inc
fsub
add
clc
repz
je
popf
mov
add
jle
and
dec
push
nop
add
pop
or
push
inc
xor
mov
mov
xchg
rorl
pop
stc
ret
mov
xchg
push
sbb
shll
xchg
lcall
push
mov
inc
les
stc
scas
sub
fdivl
cld
sub
divl
mov
iret
cmc
mov
ret
dec
mov
sub
stos
push
add
bound
sbb
jl
lahf
testl
mov
jbe
xchg
rclb
lods
cmpsl
ja
nop
ficoms
pop
mov
mov
pop
add
rcrb
dec
and
adc
data16
push
push
sahf
or
out
stos
pop
cmp
push
add
xor
dec
mov
cmp
xor
dec
movsl
mov
outsl
add
test
dec
nop
in
mov
gs
jmp
jg
sbb
push
xor
jnp
xlat
movsl
rolb
add
lret
and
xchg
and
out
in
add
xchg
add
movsb
and
cmpb
xchg
sbb
and
adcl
add
jecxz
push
das
es
lods
std
add
cli
pop
lods
inc
mov
inc
pop
jecxz
insb
adc
push
pop
jbe
mov
pop
arpl
mov
adc
scas
outsl
dec
aaa
mov
and
cs
ficoml
in
adc
fsubrs
xchg
mov
inc
scas
or
push
pop
ret
imulb
push
sub
cs
inc
xchg
mov
sub
std
pop
sub
fsubrp
js
xchg
out
push
mov
notb
and
sub
arpl
cmovae
data16
jns
xlat
pushf
push
xchg
inc
sbb
mov
mov
cltd
scas
add
jae
and
inc
jg
cmpsb
into
pop
mov
cltd
and
inc
adc
popa
mov
notl
push
sbb
gs
cmp
inc
or
clc
addb
mov
inc
mov
iret
iret
jns
pusha
stos
push
test
sahf
mov
shlb
mov
lret
cmp
inc
push
aas
xadd
add
mov
mov
es
jae
fnsave
adc
sti
shlb
icebp
and
xor
jecxz
xchg
inc
or
sbb
dec
in
sub
adc
push
inc
or
jge
mov
rclb
dec
repnz
scas
jo
popa
out
cmpsl
lret
ss
mov
mov
sbbl
fiaddl
mov
pop
push
mov
daa
shll
jbe
in
jle
adc
ds
insl
inc
sbbl
xchg
jno
push
jmp
out
add
jl
nop
pop
pop
sbb
sub
push
imul
and
add
subl
sahf
fs
imul
add
aas
inc
fisttps
lret
aam
xchg
xchg
in
mov
inc
xchg
xchg
sub
mov
add
and
adc
or
je
xchg
cmpsl
adc
cmpsb
scas
inc
scas
popf
dec
popf
xor
cmpb
adc
xchg
sub
dec
adc
cmp
adc
in
pushf
push
fsubr
sbb
int3
push
and
jnp
iret
xor
cmp
in
mov
xchg
mov
insb
mov
std
mov
sbb
pop
add
xchg
mov
pop
push
repnz
bound
xor
xchg
push
and
sub
repnz
jbe
push
cwtl
push
inc
push
aaa
mov
enter
lahf
sbb
add
pop
lret
aaa
xor
lahf
mov
lock
xor
imul
mov
push
and
pop
loope
pop
cmp
xchg
push
loope
decl
adc
or
fisubs
aam
jg
les
xchg
clc
push
fwait
mov
div
movsb
pop
insl
xlat
lcall
cs
lods
adc
stos
dec
cmp
dec
dec
xchg
aaa
sub
dec
aam
rorb
das
dec
fidivs
fs
mov
inc
ficompl
and
or
sub
divl
insb
mov
inc
test
mov
out
dec
repz
push
dec
cltd
pushf
dec
jmp
dec
jmp
xchg
into
addl
je
outsb
cmpsb
mov
mov
push
jle
subb
lods
lds
out
jl
fbstp
popf
mov
cwtl
jae
and
dec
pushf
and
sub
mov
mov
cmp
test
xchg
sbb
mov
adc
jl
lods
add
rol
xchg
lea
nop
icebp
dec
fdivrs
cwtl
fcmove
leave
int3
cmpl
arpl
test
cmp
cmp
add
sbb
mov
lods
clc
pop
adc
jne
add
int
mov
movsl
aaa
pusha
pop
stos
shrl
loope
inc
pushf
and
rorb
mov
push
mov
adc
fcoml
sbb
or
xor
inc
fwait
lock
dec
inc
sbb
adc
sub
test
lods
pop
repnz
mov
adc
jo
fistps
mov
or
push
xchg
popf
lods
in
mov
jge
jae
pop
pop
or
cmpsl
pop
add
mov
jb
idivl
in
push
pop
lret
dec
in
ret
lods
dec
sub
jge
mov
adc
dec
pop
or
cmp
xorb
cmp
aas
xchg
mov
and
and
ds
cmp
push
jno
mov
inc
mov
dec
mov
out
mov
loopne
pusha
and
or
call
push
mov
mov
shlb
adc
iret
mov
pop
pop
jno
mov
outsl
outsl
shll
lds
push
lret
pop
cmp
scas
or
lea
loope
cmp
fsub
mov
mov
inc
cld
and
shlb
mov
ret
fdivrs
push
push
leave
lret
loopne
shr
or
pop
fdivp
cmp
mov
out
or
std
inc
enter
imul
into
mov
mov
addr16
adc
dec
or
push
push
jle
test
and
stos
cmp
pop
mov
aad
mov
or
jnp
cmp
jp
call
dec
xchg
xor
aas
je
outsl
inc
pushf
mov
cmc
sub
test
pop
mov
mov
je
cltd
call
aas
insl
aam
jge
xchg
mov
enter
or
lahf
inc
out
mov
cmp
aas
pusha
mov
rorb
scas
test
iret
dec
jmp
fdivrs
scas
mov
push
xlat
cmc
int3
std
inc
sbb
dec
popf
cmp
dec
dec
lret
cmp
lahf
sarl
jp
inc
mov
mov
adc
fsts
inc
mov
cli
jno
imul
inc
push
mov
mov
insb
or
mov
ljmp
mov
hlt
js
cmp
dec
ret
dec
jge
mov
jnp
push
lods
push
push
xor
or
inc
sub
inc
mov
stos
mov
or
push
js
shlb
mov
sub
out
pop
xchg
add
stos
inc
pop
fdivrl
jbe
mov
jecxz
inc
pusha
aaa
clc
xchg
fcmovnu
ds
push
sbb
mov
cmp
jmp
or
push
mov
stc
push
and
inc
arpl
enter
dec
pop
imul
pusha
or
rorb
sbb
inc
push
pushf
aam
int
or
add
jmp
xchg
add
push
xor
xchg
mov
jg
mull
jge
arpl
lret
push
lret
mov
insb
repnz
fcmovne
pop
rclb
out
push
add
add
mov
push
lcall
mov
jae
sub
icebp
loope
jle
push
arpl
xlat
jl
pop
xor
in
xor
push
jne
out
lahf
inc
into
cmpsl
repz
inc
mov
and
mov
lods
pop
mov
sbb
cli
xor
fwait
or
mov
ljmp
mov
testl
lret
stc
or
jge
add
out
ss
add
test
mov
mov
addr16
jae
lret
xchg
rorb
lret
jae
mov
mov
sub
pusha
enter
adc
push
mov
or
xlat
cmp
push
lahf
movsl
mov
push
popa
mov
ja
daa
test
dec
mov
jge
fucom
push
sahf
std
divl
jg
xchg
or
loop
nop
dec
push
or
das
es
shrb
dec
and
lcall
std
nopl
dec
or
test
dec
pop
or
aam
xchg
stos
adc
test
inc
outsl
cli
push
int
gs
add
shrl
repnz
push
mov
das
mov
movsb
dec
sti
xchg
cli
dec
or
mov
scas
jb
jg
lods
movsl
popa
test
mov
pop
fcomp
mov
jbe
and
cld
adc
in
out
push
test
mov
cmc
fs
jno
jo
daa
leave
xchg
push
cli
jg
inc
push
xor
cmpsl
and
jae
enter
lret
lods
mov
xchg
xchg
hlt
or
repz
test
popa
jmp
outsl
inc
cmpsl
jne,pt
xchg
sub
jmp
mov
sub
or
andl
cmp
imul
gs
jb
insb
mov
push
ret
pop
dec
jecxz
in
cli
icebp
sbb
push
jb
cld
push
mov
daa
lcall
adc
out
loope
popf
popl
add
sbb
imul
xor
lds
stos
push
cwtl
sbbl
add
adcb
std
imul
sbb
popf
add
in
das
add
sbb
stc
sub
xor
cmp
bound
cmp
xor
addr16
clc
cmpsb
ss
pop
repnz
insl
lret
loopne
daa
mov
adc
ss
loopne
jno
push
cs
sahf
lds
mov
mov
jle
std
xchg
or
sub
cmpsl
out
push
mov
rclb
clc
popa
es
xchg
or
or
insb
scas
sbb
mov
in
in
inc
xor
mov
pop
ds
add
push
pop
cmp
adc
cmp
mov
scas
lea
inc
cmp
sub
shll
dec
gs
mov
outsl
test
inc
xchg
mov
dec
cmp
and
mov
xor
mov
dec
inc
adc
out
or
rcrb
pop
cmp
nop
inc
push
ret
cmp
enter
or
pop
xchg
cmp
hlt
jmp
xorb
ss
movsb
leave
outsl
pop
mov
dec
imul
popf
dec
add
xlat
test
xlat
lcall
mov
mov
cmp
call
cmp
out
mov
add
lcall
jbe
in
ds
lods
dec
fwait
cmp
xchg
jmp
jno
cmp
jecxz
add
cmp
das
mov
cwtl
push
int3
sub
mov
rcrl
dec
and
jmp
cmpsb
cmpsb
jbe
insl
rorb
push
mov
jae
add
mulps
fcoms
push
cs
xor
mov
sarl
or
shl
imul
dec
mov
cmp
push
out
mov
ret
in
xchg
sub
or
mov
insb
jmp
repnz
and
loop
aad
fwait
in
test
adc
sub
sahf
sub
mov
inc
cmpsl
imul
test
sarl
jp
sub
cltd
sub
out
and
cmp
push
inc
std
outsl
jge
stos
push
fsubl
inc
pop
inc
jg
imul
adc
and
insb
cwtl
cwtl
subl
enter
cli
in
pusha
rcrb
movswl
movsl
mov
rorb
mull
sub
adc
push
je
mov
leave
mov
dec
subl
or
popa
or
sbb
outsl
iret
jo
sbb
xchg
aaa
into
enter
std
jmp
sbb
stos
cmp
mov
mov
push
outsl
cs
out
pop
sub
insl
je
jne
cmp
daa
xor
xchg
sbb
sub
enter
sarb
cwtl
and
loopne
je
inc
lods
sub
cmpsb
cmpsb
xchg
xor
scas
xor
ficomps
testb
insb
push
xchg
sub
fstpt
cmp
jg
aad
or
adcl
mov
sti
xchg
inc
pop
fs
pop
test
cwtl
aad
xchg
sbb
orb
xchg
push
shlb
mov
or
inc
jmp
adc
insl
clc
xor
jmp
mov
mov
push
push
pop
push
sub
add
ss
mov
sbb
and
xchg
stc
fildl
sbb
mov
lds
mov
dec
mov
int3
cmc
rorb
xchg
out
movsl
lds
sbb
sahf
lods
xchg
push
pop
mov
or
mov
fstpl
mov
movsl
cmp
das
iret
fs
inc
pop
push
cmp
xchg
out
popf
test
ror
test
sbb
ja
bound
sub
out
test
mov
and
pop
push
sbb
fistps
xor
ret
adc
jle
sbb
aas
xor
ficompl
dec
sbb
cmc
out
js
sub
lods
sbb
push
in
xor
rcll
jle
ss
in
lret
stc
cltd
mov
jg
in
adc
lcall
dec
scas
cltd
mov
adc
sbb
jbe
pop
cmp
inc
cld
ficoms
outsl
movsl
or
int3
clc
shlb
sarb
ss
in
aas
cmp
cltd
pop
cmp
shlb
xchg
dec
inc
iret
mov
ja
loop
test
aam
mov
xor
cli
mov
jae
push
adc
fidivrs
jg
into
push
mov
push
loop
loope
jne
clc
jp
add
out
imul
mov
inc
pop
rclb
in
sbb
add
scas
xorl
adc
jb
xor
imul
jge
mov
mov
cmp
pop
out
imul
add
adc
shll
out
dec
lock
lods
lods
addr16
addr16
mov
push
push
dec
and
xor
lods
aaa
scas
fsubrs
hlt
bnd
imul
sub
mov
ret
das
mov
cld
mov
sarb
sub
mov
gs
or
repnz
fnsave
push
jmp
fldt
adc
imul
and
xchg
xchg
mov
xchg
mov
cmp
shrl
in
mov
mov
push
dec
and
cmp
cmpsb
inc
sbb
imul
loopne
das
adc
dec
mov
ds
sub
fcoms
lock
pop
mov
jnp
icebp
cld
addr16
xchg
ja
movsb
cmp
loop
lret
es
hlt
xchg
int
popa
jbe
push
or
pop
icebp
xchg
mov
js
sbb
les
in
add
pop
flds
lret
mov
lods
push
test
imul
movsl
or
mov
js
imul
out
adc
mov
pop
sub
push
push
sub
popa
adc
stc
jg
imul
ret
or
cli
test
fnstenv
jo
sbbl
mov
mov
jo
mov
push
mov
imul
lods
cld
outsl
sbb
pop
add
sti
pop
cmp
jbe
cmp
dec
aaa
jbe
int3
xchg
add
mov
mov
inc
fcomps
jb
xchg
jno
cmp
outsb
inc
ret
xchg
mov
cltd
test
pop
sbb
jg
mov
add
popf
adc
es
cld
outsl
iret
lods
outsl
inc
bound
adc
repnz
addb
test
aaa
stos
add
mov
stos
or
imul
sbb
ret
sbb
add
scas
sub
xor
add
push
pop
sahf
addr16
jae
cmp
adc
and
call
enter
mov
mov
loop
movsb
fsubl
out
push
xor
in
jne
nop
jp
scas
cmc
mov
xchg
add
les
cli
pusha
push
dec
or
out
inc
adc
fdivl
lods
xchg
scas
add
lods
xor
xchg
outsb
fs
out
pop
or
cmp
scas
push
mov
out
lds
enter
aad
arpl
vmovupd
je
add
jp
adc
repz
fndisi(8087
adc
enter
or
fisttpl
mov
mov
xor
lret
insb
fistps
ss
or
sub
sub
jo
jg
dec
sbb
cwtl
inc
stos
sbb
mov
dec
in
push
aas
lock
or
fs
pop
adc
pop
movsl
sub
ljmp
fists
mov
push
inc
in
xchg
mov
pop
ds
adcl
rolb
lret
xchg
mov
stos
sub
inc
cltd
test
ret
out
test
or
fstpl
roll
cmpsl
pop
and
lds
fmuls
xlat
add
jb
xor
repnz
cltd
fisttps
mov
ljmp
fwait
cmp
scas
pop
sub
sahf
jo
xchg
and
notl
dec
lret
insb
mov
pop
insb
test
jbe
mov
adc
mov
add
cmp
adc
lret
cmp
dec
cwtl
dec
xchg
add
mov
adc
sub
pop
ljmp
icebp
jp
neg
inc
sbb
mov
xor
pushf
movsl
arpl
into
jnp
sub
sbb
and
bound
mov
fs
int3
jecxz
push
xlat
pushw
and
xor
mov
push
lret
add
icebp
xchg
add
push
out
repz
mov
push
xchg
adc
push
std
mov
adc
cli
cltd
fldcw
sub
cvtpi2ps
sbbb
cmova
pop
hlt
and
inc
fldl
mov
test
jmp
jo
pusha
inc
aaa
mov
cltd
mov
push
jae
test
pop
mov
pushf
pop
xor
test
popa
outsl
pop
mov
aam
mov
adc
fidivl
int3
inc
inc
add
xchg
dec
aam
imul
inc
rolb
dec
dec
scas
jns
aam
in
adc
aas
dec
mov
mov
or
cmpsb
xor
xchg
mov
sub
ljmp
inc
frstor
sub
dec
fsts
lret
imul
addl
cmp
add
xchg
sub
in
daa
rol
jb
movsl
xor
push
inc
mov
cmp
mov
lahf
push
test
dec
cmp
and
out
xor
mov
hlt
inc
and
jae
fnsave
es
fbld
xchg
sarb
into
mov
stc
push
dec
mov
out
mov
xchg
outsl
scas
adc
push
pusha
in
nop
shll
outsl
xchg
in
inc
cwtl
mov
sub
cld
xchg
mov
dec
mov
call
jnp
and
insb
addr16
or
js
mov
out
cmp
test
push
sub
add
xlat
outsb
pop
lods
mov
stc
jp
jb
fisttpll
addr16
andb
test
xchg
push
mov
popa
cli
cmp
push
pop
outsb
xchg
pop
iret
adc
mov
xchg
inc
pop
icebp
jge
fildl
loope
mov
push
dec
and
dec
in
lods
lods
cltd
fs
dec
out
xor
outsl
test
test
shr
xchg
adc
mov
or
push
mov
dec
cmp
jb
in
shrl
scas
and
shll
pop
fldenv
jns
daa
ret
cwtl
in
sahf
leave
jecxz
xchg
push
fs
inc
xchg
add
sbb
adc
je
cmp
test
push
out
fcom
loope
mov
dec
cmp
inc
out
mov
adc
popa
sbb
mov
fcmovne
fisubs
adc
mov
jb
jle
sbb
push
enter
aam
sub
sbb
or
cmp
ss
and
sub
andb
dec
shll
in
xchg
adc
std
lahf
mov
daa
pop
ja
insb
mov
sub
lods
push
repnz
mov
mov
aad
dec
dec
test
in
mov
iret
insb
je
adc
mov
push
neg
out
gs
cmp
sar
xchg
add
outsb
mov
rcll
bound
inc
mov
shrl
fnstsw
out
sub
dec
ljmp
pop
and
pop
loopne
push
sub
sti
shlb
cmp
dec
jb
pushf
imul
scas
daa
mov
test
mov
lret
das
rolb
jo
xor
inc
push
lea
fbstp
pop
daa
lret
test
cmp
cmp
dec
jecxz
pop
mov
dec
adc
repz
add
jge
imul
cmp
insl
jecxz
jnp
pop
insl
or
int
cwtl
stos
sub
push
lahf
ss
int3
popf
sub
jge
scas
mov
adc
scas
jb
leave
jmp
mov
js
xchg
inc
scas
cmpsb
push
mov
mov
out
and
incl
fisubrs
mov
mov
push
cltd
mov
dec
lds
out
popa
fcompl
mov
gs
int3
adc
push
dec
mov
arpl
and
inc
mov
jmp
cmp
and
mov
lock
je
outsl
inc
sti
push
icebp
insb
push
in
popf
fstl
jle
in
pushf
xchg
lahf
outsl
push
shrb
cmpsl
mov
adc
jno
mov
or
into
push
pushf
into
stos
or
packuswb
jns,pt
mov
out
pop
mov
lds
push
iret
mov
jmp
inc
dec
test
jg
insb
jecxz
stos
fadds
cmp
test
nop
xor
aad
aam
std
jno
fdivl
and
jge
fisubs
cmpsb
imul
ja,pn
lea
push
sbb
push
fisubrl
push
lock
mov
das
into
jp
ss
cmp
inc
lcall
out
adc
xchg
mov
pop
mov
push
add
cmp
lea
adc
call
sub
xor
clc
inc
add
dec
add
mov
sub
xchg
cwtl
xor
xlat
sar
push
repnz
push
inc
test
hlt
pop
int
cmp
jnp
adc
mov
mov
gs
inc
sub
sbb
push
out
jl
aaa
pop
aas
ss
inc
scas
cmp
icebp
mov
add
xchg
push
lret
bound
and
push
push
jp
mov
xchg
sub
leave
mov
dec
sbb
jl
adc
sahf
movl
int3
popf
cwtl
mov
out
pusha
adcb
ja
adc
mov
mov
xor
mov
fiaddl
cltd
ja
cltd
pop
xor
pop
ds
insb
mov
test
loope
lcall
in
test
outsb
mov
jns
aas
das
test
lds
ret
mov
xchg
push
testb
lret
aad
mov
stos
loope
pushf
out
gs
jbe
xor
cmp
or
pop
pop
dec
out
inc
cmpsb
rorb
dec
mov
mov
mov
xor
push
push
fsubs
dec
add
sbb
add
sub
insl
cmp
push
insb
orb
cmp
or
out
test
scas
ds
fcmovne
sub
pop
testb
test
and
xchg
pop
pushf
cs
push
mov
and
or
insb
pushf
cli
popf
ret
dec
xor
sub
insb
pop
dec
popf
gs
jp
je
xor
push
adc
clc
pop
lcall
mov
push
mov
fldl
repz
cli
mov
lcall
mulb
mov
cli
pop
push
jae
es
loope
xor
pop
add
inc
fucomi
jae
mov
mov
sbb
jmp
add
sti
adcl
test
push
call
sbb
iret
xchg
xchg
jecxz
enter
dec
add
rcl
xor
in
in
pop
pop
int
aad
stos
inc
cmc
notb
out
aam
lcall
pop
loope
inc
mov
ja
mov
fiadds
mov
mov
ss
out
mov
jns
iret
add
or
xchg
mov
adc
fs
dec
pushf
ja
in
orl
in
cmpsl
dec
xor
jnp
jb
js
nop
adc
mov
push
rorb
pop
sub
or
mov
andl
xor
mov
imul
dec
mov
inc
sub
into
sub
mov
test
adc
mov
mov
addr16
int
test
and
add
xor
cmp
lcall
lods
pop
neg
outsb
movsb
je
cmpsb
loope
sbb
xor
xchg
xchg
dec
jg
pop
jno
and
jbe
fchs
push
fucomi
jb
mov
dec
jne
xlat
scas
push
stos
cmp
push
je
scas
in
push
mov
inc
test
in
xor
xchg
ss
jge
ret
divl
sub
nop
mov
push
lcall
mov
loopne
jb
add
adc
xchg
bswap
sub
jecxz
cmpsl
hlt
loopne
xchg
adc
jae
test
lods
dec
push
push
rcrb
mov
xchg
repnz
cmp
add
sar
cwtl
pop
into
pop
pop
das
jb
sub
cmpsb
icebp
je
gs
out
and
or
dec
jp
imul
hlt
rcr
outsb
or
sahf
stos
rol
xor
pop
out
outsl
mov
int
cmp
add
mov
negl
lock
nop
dec
popa
gs
sahf
sbb
jno
cli
jmp
sbb
jo
xor
inc
outsb
push
mov
jae
int
rcrb
sahf
sbb
sub
xor
dec
out
je
test
adc
repnz
divb
lahf
test
adc
lods
xchg
sub
jae
sbb
test
jge
out
popf
imul
dec
out
jl
push
adc
sbb
and
jbe
and
mov
cmpsl
add
daa
cwtl
inc
push
out
xchg
adc
mov
sbb
inc
xorl
sahf
div
icebp
and
xchg
mov
sbb
fldt
mov
mov
sub
cmp
xchg
inc
dec
clc
nop
pop
mov
pop
inc
fmull
ljmp
es
dec
addb
jnp
push
add
push
inc
add
dec
dec
pop
nop
dec
mov
popa
sbb
adc
je
mov
enter
sub
push
jae
inc
sbb
shlb
je
dec
sub
aam
divb
cmpsl
nop
mov
jp
add
out
mov
jecxz
push
stc
sahf
xchg
pop
std
lret
lea
mov
into
cmp
mov
in
mov
in
dec
cwtl
push
push
or
ss
xor
push
mov
insb
mov
roll
aas
mov
add
test
mov
aas
sub
cmpsl
cmp
lcall
dec
mov
fldpi
fnsave
das
addr16
push
pop
scas
or
adc
repz
js
cmp
ljmp
lahf
out
adc
mov
adc
inc
inc
cmp
out
jno
in
inc
fmull
cmp
pop
addr16
cmpsb
mov
data16
popf
int
mov
test
xchg
pop
in
pop
jmp
mov
push
jo
movsl
cmp
idiv
aad
add
adc
sbb
xor
out
ja
hlt
add
mul
rep
loope
jo
lds
add
pop
cmpsl
aad
mov
and
or
ficoms
dec
pop
inc
andb
ret
cmc
mov
scas
mov
addr16
cmp
and
cmp
push
mov
test
clc
mov
aaa
ja
lret
out
fdivrs
rorb
call
scas
jno
aas
adc
imul
clc
cmp
dec
pop
cmp
xor
repz
test
jecxz
mov
add
movsl
jmp
or
hlt
mov
mov
int
cmp
mov
fs
jp
mov
xchg
adc
movsl
int3
leave
sub
push
mov
stos
jbe
insb
int
push
jb
scas
jnp
pop
ljmp
push
jmp
enter
xor
sbb
mov
or
lret
popa
sbb
inc
cld
lahf
fldl
and
iret
jb,pn
loop
push
aaa
dec
xchg
mov
add
mov
out
clc
inc
sbb
fisubrl
push
int3
shlb
arpl
xor
mov
cmc
popl
jge
mov
jb
test
call
fwait
pusha
dec
fs
sub
xor
shrb
or
mov
enter
arpl
iret
into
fidivs
in
and
je
iret
je
cmpsb
cmp
vlddqu
loopne
out
add
adc
fmull
stos
inc
inc
frstor
rcr
cmp
push
mov
lea
xchg
cmp
push
add
shrl
scas
push
and
fmuls
stos
pusha
neg
hlt
dec
cmc
adcb
or
jl
test
mov
mov
icebp
cmp
movsl
cld
cld
neg
je
dec
xchg
sub
fmull
add
inc
xlat
outsb
je
rorb
lahf
lret
sbbb
insl
out
jg
pop
decl
into
add
mov
xlat
xchg
mov
pop
dec
jecxz
jp
inc
jo
push
pop
xlat
fidivrl
outsl
pusha
rclb
xchg
or
inc
mov
pop
xchg
sub
mov
test
xchg
cwtl
rcrb
pop
jp
and
lcall
dec
or
das
or
add
sahf
inc
fdivl
shrb
mull
xchg
shll
les
test
iret
sub
popf
dec
push
loope
or
lret
in
in
jb
mov
scas
loop
sub
cmc
out
xchg
sub
sbb
pop
shrl
mov
lods
or
fwait
xor
lds
mov
mov
adcb
pushf
ret
call
and
loopne
and
mov
inc
ja
sbb
scas
jecxz
nop
mov
not
mov
addl
push
sbb
and
pop
pushf
sbb
fistpll
pop
sbb
cmp
ja
xlat
negl
pusha
dec
sbb
pop
mov
xchg
jo
nopl
test
pop
push
mov
outsl
imul
out
repnz
aad
mov
in
mov
mov
ret
pop
mov
sbb
ja
aaa
stos
mov
dec
adc
icebp
dec
call
out
lret
icebp
mov
jmp
push
insb
mov
or
shl
les
sarb
xor
test
aad
mov
sbb
jge
leave
scas
mov
pusha
dec
fidivrs
push
imul
pushf
xchg
push
sbb
or
push
pop
in
paddb
push
cmpsl
rcrl
jge
mov
jns
pop
lock
mov
ret
nop
cli
iret
ss
fnstenv
cli
std
jo
mov
mov
rcll
call
and
rcrb
cmp
jns
repz
arpl
scas
sub
push
pop
outsb
mov
dec
push
inc
rcrb
jp
aaa
stos
xchg
das
imul
cltd
leave
test
push
orl
xor
xchg
xor
add
mov
sub
test
sbbl
sbb
mov
mov
sti
test
loop
faddl
adc
sub
mov
mov
ss
xor
mov
fsts
xor
pop
icebp
ret
repz
add
lret
sub
xchg
fnstsw
sub
fbld
inc
jne
mov
repz
push
fsub
ds
cli
arpl
fidivs
xlat
mov
aas
push
js
sti
or
xchg
lret
push
xor
push
ljmp
jno
mov
outsb
add
cwtl
divl
sub
xchg
add
or
push
jecxz
sbb
dec
int
cmp
push
out
mov
adcl
icebp
adc
mov
xchg
jns
in
inc
cmpsl
inc
bound
into
mov
add
mov
arpl
fiaddl
or
stc
adc
int3
push
ds
jb
in
loope
and
xchg
js
popf
test
ja
jl
mov
add
cmp
ljmp
das
mov
dec
jbe
imul
xlat
sub
pop
jne
fiadds
inc
aaa
repnz
sub
mov
out
push
in
stos
and
inc
scas
pop
sub
outsb
enter
dec
push
adcb
js
xchg
sbb
mov
add
jbe
pop
daa
adc
jno
aaa
in
lds
int
cli
lret
fisubs
stos
movsb
pop
mov
in
dec
ds
dec
fistpll
std
xor
push
push
push
ret
ror
hlt
xor
bound
push
cmp
push
aas
fidivl
mov
push
ror
pop
loop
std
xchg
adc
aas
popa
cmpsb
dec
push
or
mov
cltd
pop
sbb
call
inc
in
bound
ret
loop
dec
fidivl
mov
pop
test
jge
dec
or
dec
lea
insl
cmp
les
dec
dec
push
cmp
pop
push
mov
outsl
in
mov
adc
mov
push
je
cld
mov
dec
pop
ljmp
mov
ss
sti
lods
sbb
inc
out
jbe
add
inc
mov
mov
xlat
out
xchg
cmpsl
xchg
loope
into
sub
popa
add
in
or
aas
dec
mov
cmp
sub
pop
jp
and
mov
les
or
mov
cmp
insb
xchg
ds
ret
inc
inc
insb
lods
mov
mov
push
ljmp
lods
sub
mov
mov
jmp
and
mov
fyl2xp1
je
pop
inc
push
sub
xor
outsl
inc
xor
les
sub
xor
enter
cmc
adc
sub
out
stos
popf
mov
ret
mov
jge
inc
mov
pop
in
fwait
xor
inc
ds
addr16
test
mov
ret
ljmp
fisubl
push
cmpsl
subl
cmp
and
mov
jne
pop
test
pusha
ret
lods
cmc
ja
xchg
sbb
ja
in
add
pusha
lods
call
cmc
std
cmp
mov
push
add
ss
sti
push
mov
std
cmp
fidivrl
and
scas
fdivl
out
out
xchg
fiaddl
add
icebp
dec
mov
dec
ret
fs
dec
lahf
test
sbb
xor
cmp
clc
xchg
out
sub
clc
jno
scas
xor
les
int
xchg
js
push
push
aas
fcoml
fldenv
and
fsubr
out
data16
or
subl
loope
or
fidivrs
mov
pusha
fwait
out
sbb
pop
lods
lret
sti
cld
std
loop
pop
arpl
or
mov
inc
jne
fistpll
xchg
jmp
int
iret
cmp
xlat
pop
int3
push
and
in
pop
mov
inc
rcll
int3
iret
arpl
subb
xchg
mov
push
cmpsl
lock
in
add
fnstcw
xor
jecxz
push
mov
stc
pop
jae
test
adc
cmpb
idivl
arpl
insl
mov
cmp
pop
sub
sub
add
imul
or
push
in
cmpsl
mov
clc
roll
pop
ret
mov
jnp
fnstenv
inc
sub
or
enter
adc
inc
out
pop
dec
jno
repnz
je
jns
fsubrp
sbb
faddp
ss
out
clc
sbbl
dec
aad
insb
pop
push
iret
jg
jbe
inc
sbb
mov
clc
lods
xchg
cs
les
inc
xchg
and
shlb
movsb
leave
pop
mov
mov
inc
adc
mov
pop
js
mov
loopne
dec
call
test
mov
stos
bound
subl
cmpl
or
mov
sbb
jae
jb
dec
sbb
aas
ret
jl
jp
call
int3
jmp
frstor
mov
popw
inc
fs
scas
data16
in
cmp
push
stc
nop
xlat
push
repz
and
lret
ret
cmp
sub
mov
or
mov
sub
sbbb
stos
or
inc
out
mov
sarl
jl
xor
ds
repz
sub
mov
imul
cmp
and
pop
ficoms
fs
sub
xchg
sbb
jp
push
stos
shr
rclb
cmpsb
sbb
mov
xchg
dec
dec
divl
in
pushf
add
arpl
call
bound
dec
jnp
mov
add
inc
sbb
and
adc
sbb
ds
jo
repz
mov
cwtl
das
and
and
movsb
outsl
mov
mov
adc
mov
or
mov
jbe
lods
mov
mov
aas
mov
shll
andl
mov
add
xchg
xchg
sbb
js
jae
les
lahf
inc
jb
addb
cmp
jmp
add
and
or
jae
cmpsl
dec
xor
dec
xor
sbb
push
lea
xlat
outsb
loope
xor
jge
loopne
dec
and
aaa
shrb
sub
mov
pop
cmc
testl
pop
sub
and
mov
imul
xor
inc
sub
dec
addr16
notl
lahf
jle
ficoms
adc
pushf
aas
inc
mov
sub
pavgb
pop
out
add
adc
leave
pop
call
repnz
xor
xchg
dec
flds
push
push
xor
and
xor
cmp
sub
pop
pop
dec
shrb
call
out
outsb
mov
cmp
test
ret
cmpsb
and
aas
push
dec
repnz
bound
sbb
cmp
std
mov
movsl
das
mov
jle
insb
shrl
mov
loopne
sub
int3
sahf
push
inc
jnp
insl
sahf
sbb
pop
mov
mov
pop
xchg
sahf
push
add
mov
inc
cld
dec
pop
in
xchg
insl
call
dec
mov
scas
and
cmpb
mov
xor
mov
mov
sbb
cld
push
mov
and
xchg
insl
jb
lahf
mov
js
hlt
adc
mov
enter
dec
jl
jg
xchg
test
adc
gs
lret
or
cmp
pop
dec
fists
sbb
dec
cmpsl
add
sbb
out
ret
es
insb
mov
movsb
or
push
and
sti
inc
ret
repz
aad
lcall
and
mov
inc
loop
and
scas
imul
and
dec
xchg
jge
add
dec
pop
and
jae
aas
push
jl
outsb
push
jns
insl
jg
adc
fsubrs
inc
fistpl
mov
push
sub
jmp
das
xor
imul
lods
and
or
jno
mov
push
cmp
inc
scas
and
jl
pop
adcl
daa
mov
xor
mov
xlat
aam
shl
xchg
stc
sub
cs
xchg
out
dec
xchg
xchg
in
cmp
ret
inc
push
je
andl
push
pop
subl
sbb
cmpsb
ljmp
pop
adc
shlb
xchg
inc
sahf
lret
and
dec
in
cmp
imul
insb
add
push
jecxz
mov
jno
dec
das
fmull
fwait
inc
cmp
in
jne
mov
pop
jmp
xchg
lret
xor
bound
cmp
ljmp
jns
fisubl
ret
xor
test
add
inc
adc
pop
imul
out
les
xchg
call
psubusb
push
adc
lret
out
test
adc
pop
shll
add
subl
aas
aad
shlb
in
pop
movsl
movb
dec
dec
mov
jl
subb
adc
or
push
insl
testb
hlt
adc
fldl
movsl
ljmp
inc
pop
rolb
bound
mov
xchg
or
adc
aad
fildl
mov
test
jp
pop
stos
adc
fnstenv
dec
jl
int
sub
jecxz
fs
push
or
jo
sbb
pushf
xor
or
aam
dec
cmp
push
adc
jge
imul
repz
cmp
cwtl
dec
mov
dec
pop
das
fisttps
cmc
push
cmp
add
arpl
mov
cmpsl
daa
cmp
xor
stc
fcomip
cmp
data16
sbb
xchg
jmp
cld
dec
nop
or
sbb
add
adc
jge
sahf
out
aam
dec
aad
push
adc
faddl
arpl
mov
jp
xchg
cmpsl
sbb
jo
push
fnstenv
data16
sbb
fldcw
push
out
cmovg
jmp
ss
xchg
jb
bound
xlat
mov
push
xchg
daa
push
inc
or
inc
dec
inc
out
sub
fcoms
xchg
mov
lds
xchg
inc
or
lcall
mov
mov
sub
idivb
shrb
mov
std
test
insb
add
dec
or
cmp
lcall
or
push
and
hlt
pop
fbstp
pop
fsubrl
xor
or
outsb
add
cli
std
cmp
dec
pop
test
cmp
mov
cmova
fcoms
fmull
ss
add
in
rcrb
jge
mov
cmpsb
mov
into
jae
add
frstor
pop
es
jbe
dec
in
std
jns
xor
aad
xchg
test
mul
sub
mov
adc
push
test
xor
inc
push
test
or
cmp
xor
loopne
sahf
and
mov
pop
je
outsl
lea
sub
inc
pop
dec
outsl
in
xchg
pusha
pop
xor
adc
lret
movl
and
jbe
jb
in
cmp
nop
loop
push
mov
ret
adc
push
and
test
movsl
inc
in
dec
jb
insl
shl
js
lds
mov
fistps
sbb
rorb
sub
mov
aam
pop
negw
je
mov
ja
aas
sub
pop
iret
ret
xchg
push
and
or
movsl
adc
mov
insl
lods
add
add
stos
repz
arpl
xor
cmp
xlat
cmp
pop
popf
xchg
in
stc
push
mov
inc
lcall
and
pop
push
scas
out
add
rclb
lahf
icebp
fs
addr16
in
xor
pusha
js
call
xor
aad
inc
jmp
mov
lahf
inc
mov
add
cli
shlb
inc
cld
or
mov
pop
push
scas
add
mov
jo
lret
mov
push
xchg
mov
xor
mov
add
fsts
mov
jg
add
cmp
dec
add
rcrb
sub
mov
inc
fdivl
add
iret
mov
jnp
xchg
mov
xchg
and
push
in
outsl
jmp
mov
push
pop
jno
mov
sbb
stc
pop
mov
xchg
shrl
in
add
ss
mov
mov
outsl
clc
jecxz
adc
xlat
cmp
ja
lea
insb
repnz
pcmpgtd
out
mov
fs
mov
aaa
xchg
lods
xchg
outsl
rorl
jne
iret
push
cs
push
add
and
loope
add
dec
aad
mov
xchg
mov
add
enter
cmp
loop,pt
or
or
sub
lods
pusha
lods
add
pop
outsl
enter
mov
ss
adc
cmp
enter
mov
adc
push
repnz
push
or
dec
inc
je
into
das
xor
sub
divb
xor
fsubl
lcall
fisubl
jp
pusha
sub
or
xchg
cmpsb
sub
lock
adc
push
jp
cwtl
imul
cmp
push
lods
cmp
int3
sub
mov
jne
dec
pop
shll
jae
pop
mov
ja
test
and
mov
pushf
rol
jmp
aam
pop
movsl
lds
adc
daa
mov
sub
jae
mov
push
add
xchg
xchg
sub
inc
ja
xor
xor
add
cli
fs
add
push
cmp
sbb
mov
dec
popa
fdivl
and
dec
push
test
dec
lds
mov
movsb
xchg
jmp
andb
loope
bound
addl
inc
imulb
inc
fnsaves
cli
ss
mov
daa
cmp
jnp
push
dec
andl
push
jno
cs
out
push
jo
push
pop
mov
xchg
std
inc
cld
mov
mov
push
sub
dec
dec
loopne
insb
enter
dec
out
arpl
sbb
push
fwait
xor
fstpt
out
xchg
sbb
ret
mov
push
mov
or
pop
xchg
sub
in
jo
subps
notb
test
popa
dec
loope
mov
call
cmp
imul
mov
es
inc
mov
out
jl
jmp
dec
add
scas
mov
push
jg
push
lea
cli
xchg
loope
jge
dec
mov
add
jmp
mov
imul
pop
inc
rcl
xlat
add
popa
test
xchg
push
jmp
imul
rorb
cmc
loop
sub
repz
dec
adc
sbb
les
fcomps
dec
jl
adc
in
out
lods
loope
pop
xor
jnp
sub
or
xor
cs
in
leave
mov
lds
cli
ror
sbb
pop
inc
mov
fimull
xor
mov
mov
jno
mov
cmpsl
push
stc
inc
dec
les
mov
ret
cmp
sub
add
je
push
lcall
pop
add
sub
mov
out
xchg
inc
scas
addr16
test
xchg
adc
cmp
addr16
push
sbbb
shlb
dec
add
sbb
mov
inc
push
out
cmp
loope
push
xchg
out
push
xor
or
hlt
xchg
ds
jmp
cmp
xchg
dec
aam
fildl
jp
jo
jns
inc
shrd
ljmp
xchg
outsl
pusha
flds
inc
cmp
pop
mov
xchg
push
xchg
adc
add
test
sub
lahf
mov
adc
fnstenv
imul
lock
lret
mov
stos
negb
jb
leave
int
inc
sub
data16
stos
fiaddl
dec
stc
xchg
imul
aas
fistpl
out
cmp
jecxz
add
or
xchg
jp
mov
inc
mov
mov
push
and
aaa
jae
or
mov
in
sbb
xchg
xchg
iret
cmpb
cmp
mov
cmp
mov
fstl
outsl
rorb
imul
adc
pop
ret
imul
xchg
mov
push
out
inc
or
cld
mov
xchg
loopne,pn
incl
xorb
les
sub
adc
dec
dec
in
test
call
movsw
call
stc
sub
aaa
mov
and
shl
cld
shll
cwtl
pushf
xor
mov
mov
addr16
add
sti
scas
lods
out
and
mov
and
push
test
popa
add
fstpt
aad
lea
test
xor
std
cmp
jbe
mov
or
scas
std
dec
pop
sbb
pop
xor
mov
xor
jae
fcmovb
pop
test
enter
push
mov
cld
and
cmp
mov
jbe
mov
adc
pop
jge
imul
push
shll
sub
pop
loope
mov
enter
inc
rcrb
fisubs
daa
cmp
test
or
fstpt
and
xchg
fsts
xor
sub
imull
daa
loopne
loop
mov
js
mov
andl
or
xchg
push
mov
enter
sub
cmp
add
arpl
cmpsl
mov
and
data16
sub
in
xchg
cmp
imul
sbb
pop
add
or
movsl
cmp
sub
in
push
fs
mov
xchg
mov
lock
outsl
xor
cs
sub
mov
push
xchg
inc
fdivl
nop
jae
pop
mov
jo
cmp
cltd
push
pop
in
xchg
rclb
fcmovnbe
sub
xchg
mov
and
pop
sbb
pusha
cmp
fdivs
ret
cli
loopne
xor
push
pop
clc
test
mov
jns
subb
in
or
push
push
mov
cmp
adc
xchg
cmp
shlb
dec
push
lock
xchg
test
popf
push
pop
stos
jns
xchg
loope
cli
jne
mov
mov
fsts
in
dec
outsb
cmp
pop
jecxz
ficomps
aam
mov
add
push
mov
pop
xchg
sub
jp
mov
enter
or
add
cwtl
in
std
mov
push
test
adc
lret
ja
idiv
enter
notl
mov
dec
call
mov
xchg
xchg
inc
jne
cmpsl
jno
push
cmp
in
roll
jb
pop
pop
fsubrl
popl
xchg
insb
cmp
arpl
rcll
insb
dec
and
mov
mov
adc
pop
xor
fildll
movsl
inc
xchg
sbbb
in
adc
adc
jns
in
into
push
in
das
stos
inc
clc
push
cmp
mov
cmp
stos
inc
aas
cs
jb
pop
shl
mov
pop
and
in
mov
ljmp
pusha
into
inc
sbb
dec
xor
pop
les
and
push
or
push
mov
push
fimull
sarl
pop
jne
fcomp
jb
dec
jns
stos
xlat
js
or
sbb
js
cld
lds
pop
add
es
imul
xor
jns
leave
push
cmp
ja
fists
addr16
repnz
fidivl
rcrl
cld
mov
ljmp
and
push
dec
lods
ljmp
cmp
call
dec
pusha
mov
jne
xor
and
test
jb
bound
and
aam
inc
cltd
dec
ljmp
data16
and
pop
fbstp
push
aaa
stc
mov
push
ss
gs
xor
pop
sbb
push
mov
test
sbbb
inc
sub
push
lcall
mov
mov
mov
dec
jp
int
popf
loope
iret
inc
lock
mov
aad
pop
mov
xor
cmp
mov
cmpsb
insl
mov
movsb
repz
int
popa
cmp
jg
cmp
adc
rcr
xor
sar
jno
fldt
xchg
pminub
push
out
mov
test
shll
stos
bound
pusha
jp
aaa
lea
je
or
push
loopne
aam
or
arpl
add
loopne
and
inc
repz
out
and
das
or
fstp
mov
or
inc
arpl
iret
mov
mov
adc
mov
xchg
arpl
cmc
push
jmp
mov
add
into
jb
jae
mov
fnstcw
test
and
inc
xlat
and
ret
fidivrs
mov
cmp
lret
js
cmpsb
lock
fdivrl
movsl
jmp
push
lea
mov
lret
dec
cmp
inc
xchg
scas
jno
xchg
mov
stos
jno
mov
mov
clc
ljmp
sbb
push
inc
and
stc
or
xor
dec
or
enter
cmp
mov
movsl
mov
fmull
jl
mov
push
movsl
mov
ljmp
aas
push
andb
push
sahf
push
ljmp
clc
incl
add
sahf
lods
sub
jb
insb
sub
stos
add
lock
mov
push
mov
xor
inc
clc
sbb
jge
jae
cli
jge
sub
xchg
jae
insb
fwait
push
or
addb
and
or
ss
add
and
pop
shrb
lods
mov
dec
push
es
mov
scas
xor
into
push
dec
in
jne
xlat
lret
imul
jle
rcl
idivb
sbb
mov
xchg
fsts
aam
aaa
ds
test
in
int3
pop
mov
xchg
add
add
movsb
xor
lods
dec
mov
stc
ljmp
mov
cmc
aam
aam
mov
jl
push
jno
popf
cwtl
testl
jg
xchg
jg
arpl
aaa
mov
push
in
and
cmp
push
mov
fistpll
add
lock
dec
movsb
or
pop
xor
pop
int
xchg
xlat
jmp
outsb
dec
cwtl
mov
stos
fdivr
fldenv
lods
addr16
mov
rcrb
cs
mov
mov
cld
push
sub
pop
jg
add
loope
adc
mov
sarb
jmp
push
sub
xor
sub
mov
divb
pushf
jge
sbb
push
jo
jg
jl
cmp
fmull
stos
and
or
and
sub
add
adc
ss
iret
nop
inc
pop
jo
inc
pop
xchg
movsb
mov
xchg
pushf
lock
cwtl
cwtl
adc
iret
mov
mov
inc
adc
sbb
and
js
in
out
int
cmp
push
sahf
cltd
dec
aam
cmp
dec
jo
jns
push
insl
mov
dec
mov
data16
lds
mov
sub
jmp
pop
aam
adc
fsubr
pusha
or
scas
xor
xchg
notb
imul
mov
fwait
push
mov
bound
mov
cmp
adc
mov
pushf
arpl
push
add
daa
jno
sub
ljmp
add
xchg
out
mov
cwtl
test
pop
leave
or
inc
ja
mov
dec
sbb
push
dec
test
fstp
dec
pop
sub
das
fnstsw
cmp
xor
adc
arpl
addr16
xchg
add
add
xchg
jecxz
add
adc
nop
loop
cbtw
das
inc
in
or
bound
fcmove
popa
xchg
in
movsl
push
mov
push
xchg
movsb
cs
adc
push
repz
cmp
push
clc
pop
sar
aaa
dec
aad
orl
xchg
sub
aas
sub
cltd
iret
add
sbb
xor
ljmp
cmp
pop
xchg
test
fists
sti
outsb
pop
inc
pop
enter
test
sbb
mov
jns
jecxz
pop
push
movsl
cmp
fld
aam
inc
daa
divb
std
inc
lods
fucomp
and
sbbb
call
push
loope
lahf
sub
pop
popf
ja
ds
sbb
push
push
sbb
enter
xchg
ljmp
sbb
jl
xchg
jne
lds
pop
jae
addr16
mov
out
loopne
enter
or
stos
push
inc
mov
inc
mov
shll
mov
push
adc
dec
insb
lods
mov
jmp
sub
fcompl
fucomi
sub
add
mov
push
je
xlat
movsl
aaa
push
in
adc
sub
fwait
mov
dec
or
xchg
dec
inc
or
mov
cmc
mov
ja
std
aam
pop
out
cld
test
cs
shlb
push
mov
xchg
xor
mov
outsb
cwtl
add
outsb
cmp
xchg
or
sub
jbe
and
lods
xchg
jge
inc
bound
dec
mov
mov
mov
insl
xor
lret
sbb
mov
shl
das
bnd
cmp
sbb
loopne
and
mov
divb
add
jne
shll
xchg
pop
es
shl
mov
mov
sbb
in
rclb
pop
cmc
mov
das
sbb
xor
pusha
sbb
jp
rorb
aam
andl
in
lea
sahf
repz
cmp
adc
push
and
addr16
es
popf
mov
cmp
cli
inc
inc
cltd
popa
daa
inc
mov
xlat
outsb
xchg
xor
out
cmp
mov
out
mov
data16
cmp
jp
sbb
imul
aas
loopne
dec
stc
fidivl
outsl
cmpsb
push
jge
cmpl
call
add
pop
jl
js
ss
pop
push
mov
fistps
mov
movsl
xor
xchg
mov
adc
loop
dec
pushf
and
xchg
aas
push
push
ljmp
icebp
data16
xchg
mov
cmp
xor
xor
xor
idivb
fwait
aaa
movsb
push
jbe
fs
fcomps
dec
or
mov
lods
mov
xorl
aam
sub
push
cli
pusha
mov
daa
in
and
push
xorl
pop
lret
out
rol
pusha
daa
shl
sbb
add
jbe
adc
sub
rcrb
dec
loopne
fucomp
inc
cmp
xor
sbb
push
xchg
add
xor
fcoml
test
push
lods
gs
aad
into
fldl2t
int3
sub
aam
jo
pop
push
xor
and
mov
adc
dec
out
data16
push
dec
insl
push
hlt
and
and
jle
ficoms
fisubl
popa
notl
or
shlb
test
sbbb
cmpsb
xor
push
mov
push
jecxz
in
or
insb
js
cmp
rcrl
ret
push
ds
lods
lcall
jg
mov
sahf
lock
push
inc
loope
xchg
fisubl
mov
jo
imull
push
rorb
mov
mov
daa
sahf
or
add
adcb
sub
inc
popa
jl
xchg
sub
int
cli
dec
jns
jl
out
test
lret
jg
mov
push
test
xchg
inc
sti
loop
pop
stos
popa
mov
stos
insl
out
ljmp
xor
xor
or
ror
leave
pop
sbb
shll
jbe
and
cmp
cltd
mov
call
out
jae
adc
adc
dec
dec
aaa
into
jge
xchg
sub
push
inc
fistl
cmp
fcomps
ds
jecxz
pop
aam
pop
pop
mov
sub
dec
push
jae
in
lock
push
adc
bound
xchg
sub
movsl
xchg
xlat
popf
xor
js
arpl
jne
les
cli
or
ja
addr16
pusha
push
jns
and
push
mov
negb
mov
jae
xor
jmp
arpl
loope
xchg
adc
mov
ffreep
mov
popf
add
enter
sbb
push
push
std
xchg
das
addr16
mov
adc
adc
or
nop
nop
xchg
mov
sbbb
lods
ret
pusha
in
mov
pusha
jns
xchg
cmpsl
clc
enter
and
pushf
xchg
xor
mov
bound
xchg
mov
pop
es
outsl
mov
test
xor
jmp
loopne
push
xor
sbb
dec
std
mov
xchg
mov
movl
or
push
test
jmp
push
jmp
and
mov
jo
dec
scas
dec
lret
xlat
jg
rcrb
fs
mov
icebp
jecxz
cltd
mov
std
sub
xchg
pop
cmpsb
xchg
lahf
arpl
imul
pop
insl
imul
inc
fcmovne
loop
insb
push
hlt
mov
pop
mov
testb
clc
or
leave
adc
xlat
addr16
pusha
cltd
inc
add
ljmp
scas
pop
jecxz
fistl
mov
fmul
stos
insl
or
insb
sbb
or
pop
mov
stos
or
out
in
push
movsl
lea
int
xchg
loope
es
data16
sarl
sub
xor
inc
sbb
xchg
popf
pop
sahf
pop
lcall
fidivrs
push
cs
fldcw
push
fldenv
and
clc
sub
push
lods
imul
dec
cmpsl
xchg
repz
jge
sub
ljmp
pushf
jg
pop
and
sarb
mov
mov
clc
mov
sub
push
sub
test
test
inc
vdivps
loope
pop
adc
in
ja
and
addb
imul
mov
insb
xor
xor
dec
sub
push
out
ficoml
ss
jbe
jl
mov
push
in
pop
outsl
push
mov
pushf
pop
add
repnz
mov
iret
nop
sub
fisttpll
insb
fbld
insl
and
aaa
dec
push
jmp
add
lahf
mov
fwait
mov
sub
dec
sbb
jo
and
or
std
cltd
xchg
jno
les
shrl
sar
aam
movsb
sub
hlt
movsl
xchg
mov
sub
imul
adc
sbb
stos
ficoms
addr16
bound
cmp
sbb
mov
push
jg
mov
xchg
pushl
popa
lods
xchg
push
call
lret
add
mov
mov
sub
adc
out
xchg
add
es
mov
test
xor
fnstsw
out
imul
outsl
sub
add
mov
lds
test
lret
cld
rcrb
sub
mov
scas
cwtl
add
pusha
ss
pop
shr
sbb
jns
arpl
mov
or
nop
xor
rcrb
push
jmp
out
movsl
cmp
cmpsb
cmp
add
inc
sti
ja
and
rclb
or
mov
shl
jb,pt
sbb
sbb
mov
push
pop
ficompl
pusha
jo
sti
sub
lcall
dec
aam
negb
xor
js
pop
sbb
sub
jge
decl
sarl
mov
jns
aam
out
pop
insb
xlat
mov
lea
jmp
mov
xchg
in
mov
mov
xchg
fcmovbe
xchg
pop
xchg
inc
out
lret
cmpsb
cmp
movsl
js
dec
xchg
pusha
notb
int3
fistpll
cmp
push
sbb
insb
shlb
mov
jne
push
lcall
cmp
into
mov
pop
out
rcl
lcall
jne
dec
sub
mov
adc
fisubrl
or
push
xlat
jmp
mov
mov
dec
sahf
imul
add
inc
mov
sub
fnsave
push
sbb
imul
pusha
add
clc
adc
mov
fidivl
lock
stos
push
clc
lret
pop
insb
mov
mov
inc
pop
cltd
inc
scas
mov
mov
les
dec
xchg
in
inc
repz
and
insl
pop
repnz
push
out
inc
adc
or
pusha
adcb
jecxz
push
xchg
jne
les
cmp
out
ds
test
int3
inc
or
mov
pop
push
pusha
pop
lret
repnz
es
iret
outsl
mov
push
xor
pop
adc
lods
leave
inc
pop
clc
test
data16
dec
mov
rclb
jnp
int3
lea
aad
pop
fistpl
adc
aaa
jg
in
js
loopne
pop
inc
lea
cltd
lret
mov
push
loopne
mov
scas
inc
cld
repnz
mov
jl
adc
add
rcl
pop
cmp
je
inc
in
and
xor
cmp
lea
aad
inc
xor
repz
pop
or
aam
gs
adc
jno
mov
pop
mov
sbb
in
pop
adc
mov
push
out
dec
cwtl
add
dec
cmp
loope
fcoms
add
xor
imulb
push
pusha
lds
push
fistpl
sbb
filds
xor
jmp
pop
out
pop
in
dec
jecxz
jge
ds
mov
js
pop
dec
pop
mov
bndstx
ret
fsubrp
inc
xor
testl
inc
test
mov
push
fld
jno
or
scas
out
xor
push
mov
cmp
mov
adc
lds
in
cmp
mov
mov
pop
fbld
notb
cld
push
or
or
mov
adc
icebp
jne
or
jle
mov
xchg
stc
out
xchg
sahf
push
mov
test
mov
test
xchg
jge
stos
and
pop
push
jbe
fsubp
jbe
dec
pop
sub
mov
add
mov
in
aas
cs
add
cmp
sub
and
and
lods
mov
gs
jle
test
add
sbb
adc
mov
or
inc
cmp
or
cmp
inc
push
xchg
in
inc
or
xor
or
icebp
insl
push
sub
and
scas
inc
fstp
pop
dec
fbld
mov
xor
pushf
inc
push
xchg
pop
les
jb
gs
outsl
or
adcb
cld
xor
fstl
leave
adcl
pop
outsb
cmp
decl
outsb
mov
addb
mov
insl
jb
aam
mov
test
mov
sbb
stos
bound
pop
mov
xor
pop
lcall
mov
xor
lahf
shrb
or
jo
jl
fidivrs
cmp
rolb
daa
and
push
std
fcompl
mov
adc
clc
lret
repnz
xor
mov
int
jg
psubb
xchg
call
push
xchg
clc
add
xor
mov
pushl
pop
cmp
lods
daa
mov
mov
xor
aad
outsb
pop
insb
arpl
xor
jecxz
xchg
xchg
movsl
sub
ss
mov
out
mov
mov
dec
ud1
xchg
fadds
add
or
push
jge
rcll
add
lea
add
loop
push
test
mov
cmp
inc
arpl
movsl
jb
lods
cmp
pop
jnp
xchg
inc
fcomps
cs
pop
adc
nop
mov
pop
out
mov
sbb
in
fs
mov
mov
jno
les
icebp
cmp
xchg
mov
scas
jge
cwtl
and
and
inc
sub
in
es
dec
sub
fimull
gs
and
jno
xlat
jnp
and
and
xor
adc
jl
mov
mov
stos
jle
dec
mov
mov
or
mov
daa
ljmp
jnp
xor
outsb
adc
pusha
addr16
xchg
shl
push
and
push
jmp
mov
sub
xor
mov
sbb
mov
stos
lcall
jl
add
shrd
pop
mov
dec
outsl
cmp
fdivrl
inc
and
pop
aam
mov
out
or
push
xchg
es
mov
and
pop
xchg
jo
stos
leave
jl
push
push
aad
cmpb
mov
inc
fistl
stos
and
repnz
xor
nop
xor
pop
adc
push
dec
ficoml
daa
mov
cmp
jno
adc
icebp
or
or
xchg
jl
stos
lcall
shlb
push
sub
jle
daa
repnz
jp
icebp
jle
pop
lods
loopne
mov
push
cmp
imul
mov
dec
mov
leave
adc
fsubrl
rclb
imul
pop
insl
sbb
adc
cmpsb
sti
mov
jp
push
jp
pop
or
shrb
in
stos
lcall
xor
std
cmpsl
inc
fildl
sbb
cmpsb
popa
jb
adc
int
arpl
or
sub
jno
fisubl
inc
mov
aaa
popa
add
les
mov
popl
scas
adcl
xchg
xor
sub
and
xchg
adc
mov
loop
sub
lahf
lret
data16
cld
mov
jns
mov
ss
mov
mov
nop
push
mov
push
fwait
sub
mov
xor
negl
xchg
xchg
jae
aaa
mov
sbb
mov
dec
or
outsb
or
test
fnsave
idiv
sti
dec
cld
adc
add
jmp
out
notl
sub
xor
scas
push
sub
cmpsb
or
hlt
pop
or
pop
cmpl
nop
mov
mov
push
mov
adc
pop
in
adc
testl
mov
enter
mov
int3
mov
push
xchg
dec
je
adc
rclb
aaa
vsqrtsd
add
inc
jbe
mov
cmp
and
push
mov
cmp
push
xchg
out
js
mov
ret
repz
add
adc
dec
cmp
popa
adc
mov
mov
add
and
push
ja
loopne
repz
and
xorl
xchg
decl
pop
add
xlat
mov
sub
and
xchg
sahf
mov
inc
scas
jp
push
xor
test
push
ret
lcall
jne
add
mov
push
mov
lea
xor
insb
mov
sti
mov
inc
rcr
mov
lcall
leave
jle
xor
jge
es
lods
out
xchg
idiv
cltd
pop
je
arpl
in
div
lock
and
call
outsb
call
loop
movl
ds
test
out
mov
or
push
mov
dec
outsl
cvtdq2ps
shrb
movsb
out
ja
int3
icebp
enter
inc
jbe
inc
xchg
int
scas
inc
push
in
add
mov
or
std
fdivl
and
pop
flds
push
push
cmp
jbe
fidivl
les
lret
pusha
rcll
imul
outsl
push
cmpl
fnstsw
push
out
pushf
sbb
arpl
scas
inc
int3
fsubr
inc
scas
mov
sub
sbbb
sub
add
clc
sub
mov
movsb
scas
test
push
sbb
inc
pop
mov
fistpll
ds
paddsw
clc
icebp
mov
mov
sub
shlb
dec
out
jae
and
xor
and
insl
hlt
xchg
add
repz
inc
in
inc
gs
xchg
xor
mov
mov
lea
outsb
xor
dec
mov
fstl
fidivl
jl
cmpsb
movsb
inc
ljmp
mov
inc
ret
test
movb
pusha
movsb
xchg
mov
fisttps
mov
ja
inc
fistl
push
hlt
mov
bound
outsb
nop
cmp
mov
inc
dec
outsb
mov
cmpsb
ret
cmp
fcompl
test
movsl
adc
cltd
into
sbb
push
add
shl
cs
sub
adc
inc
jbe
out
test
mov
push
xchg
xor
mov
pusha
mov
and
das
scas
inc
pusha
xor
jbe
mov
test
xor
mov
or
dec
inc
sti
ret
or
cmc
sbb
and
repnz
int3
arpl
jl
leave
pusha
cmp
cltd
stos
sub
xor
jae
jmp
pop
jo
adc
popa
cs
mov
fcomps
jp
or
mov
adc
jl
bound
sbb
inc
lea
icebp
dec
or
aas
add
lcall
leave
jecxz
jp
cmpsb
cltd
xchg
add
decl
ret
lcall
adc
mov
inc
inc
sti
fldenv
or
xor
pop
lahf
mov
or
rolb
or
mov
imul
nop
pop
mov
push
pop
cmp
xchg
repz
jg
pop
outsb
lds
mov
mov
int3
loopne
fadds
sti
outsb
cmpsb
cli
int3
xor
inc
icebp
in
sbbl
cmpsb
gs
scas
dec
in
mov
jb
lret
cmp
fcmovb
jnp
rorl
es
mov
mov
sbb
sbb
sub
push
or
insl
cwtl
mov
push
adc
sbb
shrl
stos
inc
shrl
out
pop
pop
adc
sbb
and
xor
sbb
xor
jge
pop
jg
movsb
cmp
iret
outsb
aas
xor
or
dec
inc
xchg
movsl
cmp
push
cmp
push
pop
adc
fwait
xchg
mov
pop
mov
push
loope
cmp
dec
add
int3
fsubs
clc
and
push
mov
jge
outsl
sbb
pop
cld
lret
std
jo
mov
shr
xor
adc
or
cld
push
push
outsb
fisubrs
aam
das
in
jo
stos
out
lahf
mov
mov
call
test
adc
rol
mov
mov
cwtl
iret
mov
out
jno
lcall
pop
jle
push
shlb
and
hlt
gs
jno
ficoms
loope
pop
popf
cmp
aam
xchg
and
negl
outsb
std
pop
inc
dec
sub
ds
jge
dec
mov
lea
ja
and
shrb
lea
mov
xor
push
shlb
xchg
xor
lret
data16
dec
pushw
pop
cld
or
jbe
imul
outsb
sbb
in
add
sub
or
mov
stc
lock
pop
lahf
xchg
adcb
sub
mov
repnz
idiv
mov
sub
fs
lds
testl
xchg
out
add
or
fstl
inc
sbb
mov
mov
cwtl
std
mov
jmp
jge
xchg
cmp
shlb
dec
and
ficoms
or
push
xchg
add
mov
addl
leave
mov
rol
sbb
push
jp
das
pop
jmp
nop
adc
rclb
sti
push
sbb
or
aad
test
sbb
les
xor
jecxz
xchg
sarb
std
pop
loop
das
pop
sahf
pushf
adc
popa
pop
outsb
test
mov
mov
add
stos
mov
push
jp
dec
out
add
mov
insl
adcb
mov
mov
sub
sub
xchg
adc
xchg
push
in
aad
mov
cmpsb
jg
lods
imul
in
jne
lods
mov
or
subb
cmpsb
cmpl
sub
lret
ljmp
call
or
mul
fs
xor
cmp
test
movsb
mov
push
mov
sbb
xchg
push
adc
jo
jl
jno
inc
mov
cmp
add
or
push
insl
push
xchg
cmp
push
jecxz
mov
rcrb
movsb
or
dec
shrl
outsb
out
cs
adc
es
adc
test
clc
mov
mov
in
jnp
add
fdivp
scas
cmovl
fld
push
cmp
dec
aas
fnstenv
xor
mov
jae
adc
xchg
adc
lock
pop
stos
stc
fidivl
insl
sub
push
hlt
insb
hlt
sbb
cmp
lods
xchg
mov
pop
dec
out
data16
mov
push
andb
hlt
jne
test
js
sbb
test
pop
sbb
dec
mov
adc
add
andb
fcmovu
jo
jnp
sub
sbb
testl
and
stc
jnp
inc
cmc
sbb
push
push
imul
xor
in
stos
sti
mov
push
and
shl
xchg
daa
xor
ficoms
mov
int
dec
test
decb
jle
add
in
sarl
push
les
leave
and
jnp
movsb
lods
mov
outsl
push
fcomi
rolb
cmp
in
movsb
inc
es
pop
dec
scas
dec
pop
mov
insl
and
js
push
adc
xorl
add
pop
mov
jmp
jne
push
mov
icebp
push
ret
int
dec
arpl
adc
andb
jbe
and
pushf
sub
or
push
int
test
or
sub
jl
aaa
adc
xlat
mov
dec
leave
js
pop
iret
arpl
pop
mov
fwait
mov
pop
scas
adc
xor
ja
push
xor
lahf
pop
mov
mov
lock
pop
loopne
enter
sbb
cmp
inc
dec
and
rcrl
jecxz
or
mov
push
dec
jle
cmc
js
gs
cmp
hlt
add
pushf
push
icebp
mov
inc
sti
sub
mov
dec
mov
push
sub
cmp
insb
add
lcall
xchg
xor
or
sarb
rorb
in
sbb
and
dec
cmp
sbb
mov
mov
xchg
out
loope
sub
and
je
fcoml
xchg
mov
push
pop
icebp
movsl
shll
lods
fcoms
mov
sti
outsb
movsl
pop
mov
loop
jecxz
or
leave
mov
push
dec
lahf
or
movsb
push
inc
push
out
mov
fcomi
aas
test
mov
shl
mov
sub
adc
rol
mov
jmp
fnstcw
subl
inc
loop
jo
xor
ss
sbb
mov
cmp
sbb
sbb
imul
sbbb
dec
jno
cltd
pusha
sti
dec
dec
loopne
xchg
test
insb
test
cmp
mov
add
ret
cmp
fidivs
call
lret
movsb
add
andl
sbb
orb
cmp
mov
mov
in
jl
outsb
adc
cmpsb
ds
lret
bound
gs
mov
ds
lock
int
shll
sub
xor
mov
stos
rorl
mov
icebp
loope
pushf
dec
pushf
mov
clc
xor
loop
stos
push
mov
rclb
and
sti
ret
push
cmc
jle
xor
scas
cmp
pop
mov
and
jle
dec
sahf
scas
xchg
xchg
mov
xor
out
aaa
into
out
or
fucomip
push
pop
stos
mov
fnsave
mov
fwait
xchg
add
imul
sbbl
pusha
mov
adc
xchg
ja
jmp
mov
jmp
add
mov
xor
pop
or
and
or
mov
shl
cmp
mulb
cltd
ret
mov
add
mov
push
ret
sbb
pop
mov
xchg
ds
lea
sbb
sbb
sbbb
cld
xor
pop
add
shlb
and
sti
pop
es
clc
mov
jb
gs
sarb
pusha
mov
cmp
test
sub
and
jne
mov
push
inc
leave
or
push
pop
sbb
incl
testb
pop
mov
pop
sub
aad
jge
js
sub
adc
icebp
fwait
ljmp
xchg
push
notl
adc
dec
cmp
push
sahf
clc
fnstcw
add
push
push
movsl
fwait
jno
xor
lds
mov
insb
dec
add
mov
cwtl
sbb
mov
jle
add
mov
jecxz
pop
jmp
out
scas
mov
fs
jno
inc
popa
roll
xchg
sti
sbb
ret
and
lock
pop
stos
scas
sbb
push
xor
dec
or
aas
inc
notl
mov
andb
rclb
ja
adc
flds
cltd
mov
ds
mov
filds
stos
inc
mov
dec
in
xor
and
out
jbe
cmpsb
test
flds
jo
push
jae
dec
aam
adc
mov
fsts
outsl
shl
loop
iret
add
push
jo
int3
loopne
jne
imul
aam
ja
je
mov
hlt
xor
and
mov
adc
inc
push
mov
fisttpl
mov
iret
fisttpl
out
sbb
mov
int
mov
fwait
test
add
je
sbb
pop
test
xchg
enter
jne
or
xorl
jo
push
lea
clc
sahf
sbb
cmpl
cli
mov
out
out
mov
xchg
jns
mov
dec
setge
andl
adc
xor
xor
fdivs
adc
mov
jb
and
into
inc
repz
lret
adc
mov
cmp
rcll
sbb
test
test
or
fdiv
mov
mov
pop
sub
jge
mov
popa
jns
arpl
mov
sbb
cs
dec
fsubl
or
sub
dec
add
sahf
icebp
sub
sbb
lret
orl
cld
mov
or
and
mov
inc
pop
sub
arpl
push
mov
mov
add
push
jb
and
mov
fwait
int
jb
mov
inc
aas
aad
rcll
and
int
fidivrs
fcoml
or
stos
lds
fs
pop
mov
rcrb
stos
and
fidivrl
lock
lock
push
cmpsl
sbb
add
in
add
outsb
shl
add
fwait
sbb
pop
xor
pop
jnp
fincstp
rcrl
into
sub
les
pop
mov
mov
sbb
or
fnstcw
xor
cwtl
pop
cmpb
mov
mov
fnsave
mov
push
insl
jbe
les
test
and
popa
mov
popa
sti
pop
pusha
inc
std
rcr
lcallw
hlt
cwtl
aad
lret
cmp
add
test
jbe
jne
das
push
xchg
dec
pop
lds
js
icebp
jge
cmpsl
mov
jg
xor
adc
xor
out
sbb
cmp
fcompl
test
pop
or
xor
xchg
mov
mov
aaa
jae
sub
popf
outsl
or
cs
xchg
sub
or
stos
xor
das
out
ja
cs
push
adc
mov
xor
in
cmp
mov
jns
push
or
xor
test
adc
jle
cmp
mov
les
mov
popa
jnp
add
movsl
movsl
and
in
adc
jnp
enter
lods
add
inc
popf
push
mov
add
cmp
out
cmp
sbb
dec
movsb
mov
or
xchg
loopne
out
add
pop
inc
aad
mov
jne
jmp
jp
dec
lods
and
insl
dec
pop
repnz
or
cmp
push
mov
rolb
cld
push
call
or
xlat
adc
jo
clc
sbbb
sub
xor
mov
aad
jecxz
dec
loopne
ret
mov
mov
sbb
jnp
fneni(8087
sub
jg
push
jb
lods
xchg
iret
xchg
sbb
add
xchg
xchg
or
inc
in
mov
and
inc
jmp
pop
adc
insl
sub
scas
inc
testl
push
cli
shrl
mov
mov
adc
xor
or
sbb
cs
jle
xchg
sti
ljmp
negb
add
jae
xchg
xchg
lret
adcl
cld
sbb
dec
mov
or
xchg
jnp
test
fstpl
jns
loope
xor
aas
dec
dec
mov
lret
mov
popf
pop
sti
xchg
add
mov
jp
pop
add
dec
dec
cmc
scas
mov
mov
cmp
mull
call
push
fcmovnbe
add
mov
mov
dec
push
sub
jno
roll
adc
ret
shrl
ret
mov
insl
add
daa
lods
fmuls
je
divb
aam
add
ror
popa
add
lea
cmc
jnp
add
mov
ja
out
dec
mov
imul
jns
movsb
xor
imul
out
mov
dec
insl
aam
pop
jbe
and
bound
lds
push
addr16
fcompl
mov
arpl
test
cmpsl
add
jmp
jbe
fistpll
mov
enter
mov
dec
ret
stos
jnp
loopne
or
adc
sbb
or
mov
push
mov
mov
cmp
fsubrs
lcall
je
xor
xchg
mov
mov
out
rorb
mov
jnp
add
mov
jecxz
lret
push
sarb
ret
cli
idivl
mov
ja
fadds
adc
je
hlt
lret
and
dec
inc
subb
sub
int
iret
scas
jmp
stos
and
out
test
jbe
push
sahf
xchg
and
xchg
jnp
xor
aaa
push
xchg
imul
mov
fmull
and
pop
adc
jg
mov
adc
ret
xlat
sbb
bound
xchg
jecxz
loop
jns
push
inc
sbb
sbb
xor
inc
lcall
and
xchg
pop
dec
test
imul
ret
pop
cmp
fidivs
test
inc
daa
push
mov
negl
ja
add
add
mov
call
pop
jnp
call
or
lods
pushf
pop
repz
fistpll
add
jle
xorl
aam
movsb
lret
ficoms
push
sysexit
popa
and
and
repnz
pmulhuw
or
adc
insb
cmp
lods
xchg
andl
bound
out
mov
xchg
dec
lret
scas
test
ljmp
leave
jbe
test
jmp
enter
cmc
cmpl
adc
cmp
cwtd
sti
jae
mov
lods
add
loopne
pop
aaa
or
dec
nop
test
popf
sub
adc
insl
cmpsb
fldl
or
les
or
or
ret
fiadds
jmp
test
rcrl
ss
dec
gs
ja
sbb
ret
pop
and
xchg
aaa
cmpsb
lods
pop
popa
mov
lcall
ja
pop
out
sbb
mov
sbb
cmp
mov
loope
mov
pop
cmp
dec
fisttpl
sbb
mov
es
adc
inc
repz
js
imul
imul
rorl
cltd
push
pop
loope
push
mov
pop
jmp
jmp
leave
xchg
je
sub
or
xor
mov
mull
jp
cmp
adc
fwait
xchg
pop
adc
cmp
in
lods
into
enter
lock
add
mov
jg
push
in
test
lods
flds
imul
daa
test
mov
lds
test
dec
push
cmp
cli
dec
push
in
dec
rcr
lods
lea
repnz
pop
xor
and
call
mov
sub
mov
insl
jbe
cmc
xor
aad
les
lods
mov
clc
outsb
add
and
rcl
sbb
pusha
dec
call
out
jo
test
pushf
jns
xor
mov
cmc
or
jg
push
jno
cwtl
mov
pop
repnz
js
inc
jns
and
jbe
inc
push
ficoml
cmp
into
fstpl
gs
mov
into
sahf
mov
inc
call
fisttps
imul
mov
xchg
aaa
cmp
add
movsb
jns
sub
ret
cmp
add
cmpsl
pop
sti
xor
enter
outsl
xchg
sub
sarl
pop
pop
pop
xor
mov
nop
test
add
mov
dec
jae
aad
scas
xchg
negb
mov
push
mov
xchg
addr16
xor
xlat
pop
aam
inc
out
loop
int
jae
lds
insl
jge
addr16
cmp
jo
out
in
adc
mov
movsb
gs
mov
push
xor
dec
bound
sbb
xchg
adcb
pushf
imull
inc
sub
jg
pop
in
test
mov
or
and
sub
out
xchg
sub
push
and
jg
sub
xchg
jo
ret
clc
lods
and
in
bound
fadd
cmp
lret
or
dec
and
gs
add
xor
enter
dec
icebp
mov
test
add
cmp
add
push
pusha
test
sbb
dec
cmp
dec
fimuls
inc
arpl
mov
int3
push
scas
xorb
and
xor
arpl
popl
setge
mov
loop
pop
pop
notb
mov
cmpsb
xchg
leave
add
sub
cwtl
test
psubsb
jp
sub
cmp
lds
xchg
and
fs
mov
leave
cmp
jbe
mov
push
stc
sub
add
stc
sub
icebp
movsl
push
ret
xor
fcmovbe
mov
cmp
fdivr
push
xlat
test
sbb
sbb
ret
ret
leave
imul
adc
out
fwait
sti
mov
xchg
dec
add
xor
adc
jg
inc
pop
clc
ljmp
mov
inc
sbb
pop
and
mov
outsl
daa
das
mov
fsubl
les
jecxz
adc
movl
mov
jb
mov
cmc
pop
lret
mov
clc
nop
mov
and
mov
iretw
sub
dec
xchg
pop
aam
or
das
enter
dec
leave
pop
pop
jg
stos
ljmp
pop
jns
push
subb
lods
adc
pop
imul
cmp
pop
push
adc
mov
lret
lret
dec
mov
adcl
enter
mov
push
or
lcall
mov
add
sub
dec
into
daa
mov
sub
xchg
xor
ss
pop
pop
repz
push
sbb
sub
pop
mov
sar
push
mov
popa
mov
int
ja
dec
test
xor
jecxz
aam
out
shll
aad
xor
push
loop
daa
jo
je
xor
movsl
repnz
and
insl
lsl
push
or
and
sub
jb
pop
ss
jl
mov
stc
fisttps
jae
pop
jo
cmp
adc
ds
and
cwtl
sub
mov
cld
and
jge
pop
dec
jle
add
jnp
push
pushf
in
ljmp
cmc
dec
enter
cmp
dec
loop
push
cmpsb
jp
repnz
and
sub
and
je
inc
sbb
mov
fcmovne
lock
inc
push
shlb
pop
mov
jmp
add
ficompl
mov
mov
pop
shll
mov
icebp
les
add
mov
cmc
and
lods
jno
adc
push
push
adc
sbb
xchg
mov
ljmp
iret
out
or
mov
sbb
out
repz
dec
outsl
push
jl
gs
push
adc
test
and
aad
repnz
mov
mov
jns
sbb
jmp
mov
outsl
xchg
and
adc
pop
shlb
mov
or
hlt
push
mov
loopne
insb
and
cmp
js
jl
dec
push
xor
adc
mov
push
jo
jno
adc
sahf
cmp
or
sub
adc
sahf
nop
jnp
and
std
pop
push
cmpsl
out
push
or
xchg
int
fsubs
addr16
lods
xorb
push
lea
xor
inc
mov
int
cmpsb
mov
inc
mov
sbb
xchg
in
stos
push
rorb
jmp
je
sub
sub
cmc
and
insb
sbbb
aas
jl
ret
pop
sbbl
sub
dec
fldcw
ret
pop
fldcw
ja
int3
movsl
fisttpll
add
sub
notl
test
push
movsl
lahf
in
jns
or
popf
push
jmp
lods
push
jo
out
dec
push
fidivl
mov
fists
push
dec
inc
fnstcw
popa
cmp
and
imul
or
and
adc
sub
popa
jno
dec
dec
mov
jb
inc
mov
iret
cmpsl
out
jnp
cld
addl
or
arpl
ror
lret
jp
into
jmp
nop
adc
or
or
adc
ja
add
int
push
mov
sub
xchg
xor
mov
andb
push
xchg
pop
inc
out
dec
dec
mov
add
pop
insl
and
sub
push
jno
add
sub
sahf
fnstsw
push
insl
pop
sbb
inc
pop
scas
clc
addr16
jecxz
iret
lahf
cltd
sub
xchg
rclb
cmpsl
aas
push
ficoml
ljmp
in
push
push
stc
xor
mov
mov
mov
xor
pop
mov
pop
fadd
or
xchg
push
sub
mov
xchg
fwait
stos
add
add
ja
in
mov
pop
loopne
enter
or
xchg
stos
xchg
jns
les
les
xchg
push
xlat
out
jae
and
or
cmp
cmpsl
aas
hlt
frstor
push
addl
cmpsl
test
pop
rorb
aas
push
mov
sub
loope
pop
mov
add
bound
decb
loopne
xchg
and
mov
ss
cmpsl
jmp
out
pop
lret
repz
or
aad
dec
imul
jg
aad
jnp
stc
test
sub
xchg
ficompl
aas
pop
repnz
dec
clc
fistpll
add
cli
popa
outsl
jge
loopne
enter
xor
fwait
push
push
xorb
addr16
mov
or
testl
inc
pop
cmp
in
dec
lahf
das
lret
mov
rol
jo
mov
gs
in
jp
jno
stos
sarb
pusha
inc
mov
pop
sbb
insb
dec
dec
vmovhps
pop
popa
outsb
enter
mov
sbb
stos
mov
mov
xor
xchg
test
bound
sbb
ffree
pushf
mov
xchg
sub
fnstenv
mov
mov
inc
fidivrl
xor
and
rcrl
sbb
xor
rorl
shll
es
gs
push
mov
jbe
and
dec
dec
jmp
cltd
shl
es
inc
and
mov
sbb
frstor
xor
jge
repz
dec
in
clc
dec
imul
xor
sub
jno
cs
outsl
mov
xchg
mov
mov
in
imul
scas
mov
mov
mov
mov
scas
test
inc
leave
cwtl
movsl
adc
and
je
and
jmp
shrw
iret
out
scas
mov
fsub
add
cwtl
daa
das
adc
mov
adc
scas
fadds
test
and
movsl
sub
dec
out
sub
jmp
sbb
inc
lods
cmp
imul
mov
hlt
adc
outsl
jnp
jmp
jmp
mov
pop
imul
push
mov
in
test
pop
data16
inc
sbb
ret
ret
mov
sbb
cmp
gs
xchg
ja
xchg
xchg
mov
and
pop
sbb
dec
jmp
jge
jp
loope
pop
ret
add
add
cld
lods
pop
jo
fld
aad
int3
inc
aas
repnz
sub
movsb
aad
gs
call
ficoms
and
pop
int
je
imulb
scas
into
scas
inc
mov
inc
xor
lret
jle
fbld
mov
movsl
and
aaa
imul
movsb
dec
mov
pop
fwait
in
cld
lcall
rcl
cltd
add
jp
scas
xchg
stc
push
aas
add
out
sbb
stc
adc
les
ds
or
add
minps
sbbb
mov
daa
mov
cli
fs
dec
xchg
mov
dec
loop
mov
add
jmp
repnz
add
int
sbb
mov
xor
cmpsb
loope
fmuls
jp
insl
push
leave
pusha
dec
sub
inc
inc
fimull
and
enter
adcb
repz
mov
out
lock
stc
notb
mov
testb
call
fnstsw
xor
adc
fldpi
inc
mov
inc
fsubs
add
inc
cmpb
bound
loop
cmp
xchg
cmp
push
rcll
mov
out
mov
xchg
adc
mov
push
mov
testb
in
sbbb
mov
xchg
cmc
arpl
fwait
and
int
cmp
push
dec
push
add
aam
and
lea
insl
gs
imul
sbbl
sbb
int3
pop
in
cmp
dec
xchg
cmc
rcll
loopne
lahf
xchg
mov
lods
mov
add
into
adc
sarb
das
mov
sub
cmp
shr
jecxz
pop
cmp
call
or
iret
scas
push
fisubrl
adc
das
xchg
xor
push
gs
sbb
xor
lret
jnp
push
pop
push
or
add
lock
adc
jp
pop
test
xchg
inc
andl
pop
mov
test
int3
andl
xlat
and
movsb
lea
test
cmp
mov
mov
mov
push
push
imul
sbb
cmp
shrl
push
push
add
push
xor
es
mov
mov
pop
and
xchg
xlat
jp
xor
cmp
pop
jmp
notb
push
outsb
loope
mov
sub
cmpl
imul
push
inc
je
loope
bound
outsl
jnp
or
xor
and
outsl
or
adc
mov
movsl
sub
adc
pop
mov
inc
repz
insb
in
push
mov
mov
add
xchg
xchg
sub
xchg
out
dec
cli
and
shll
inc
push
sbb
jle
pop
inc
orl
jl
add
sbb
xchg
mov
popf
xor
sbb
cmp
loope
scas
out
push
bndstx
mov
jg
mov
mov
testb
je
cmp
pop
cmp
aas
test
pushf
and
or
xchg
aaa
ficompl
test
cmpl
xlat
or
pop
fwait
scas
stos
dec
imul
xlat
mov
mov
mov
fwait
sub
dec
mov
mov
std
mov
inc
pop
pop
repnz
jmp
dec
pop
push
lahf
jb
inc
fsubp
rorl
mov
push
test
aas
loop
cmpsl
sub
movsb
fwait
sub
inc
cmpsl
fimull
xchg
add
jb
mov
lods
call
in
push
je
sti
rorb
mov
pop
int
sbbb
sub
sub
or
add
imul
cld
std
adc
sub
mov
cmc
in
adc
push
xchg
sti
or
cmp
cmp
xchg
xor
fnstcw
out
add
pop
fisubrl
push
mov
test
mov
pusha
idiv
setnp
dec
or
xlat
lods
cld
ud1
cmpsl
imul
cmp
mov
les
xlat
jno
dec
nop
mov
sub
fmul
sub
sub
int
push
xlat
insl
adc
push
inc
lea
or
inc
rcl
cmpsl
push
jne
jae
insb
mov
adc
in
mov
imul
fidivrs
stos
mov
mov
dec
sub
pop
ds
push
aaa
and
add
xchg
mov
mov
sbb
out
or
into
xor
push
push
cli
jg
sub
aad
ljmp
cmp
fdivl
mov
inc
push
leave
call
shlb
lods
inc
inc
loope
cs
mov
test
movsb
mov
rcr
mov
lock
ret
sbb
mov
movb
jl
mov
mov
mov
jno
leave
iret
ds
jbe
mov
daa
ja
sbb
leave
xchg
sbbl
mov
jbe
stc
aad
movsb
cld
std
or
dec
dec
subl
jp
arpl
aas
jne
or
cmp
cli
pop
shlb
and
fidivrs
pop
test
mov
fistl
cli
push
jge
stc
scas
sub
das
addr16
jae
mov
addr16
stos
sar
shll
jno
jbe
imul
fwait
lods
std
and
mov
test
add
inc
popa
or
inc
dec
dec
bound
cmp
ficomps
jp
enter
repz
mov
daa
mov
mov
xchg
jno
inc
movsl
mov
sub
mov
mov
scas
nop
pop
jns
test
lcall
pop
pusha
xchg
pop
rol
or
pop
aas
pop
pushf
icebp
ret
or
ss
dec
mov
pop
mov
mov
ret
pop
mov
mov
out
scas
stos
cmpsl
ds
in
cli
icebp
daa
inc
fstps
add
mov
call
imul
pop
xchg
mov
popa
jne
pusha
cmp
adc
out
out
ss
hlt
xor
outsb
ficoml
push
pop
shll
adc
adc
cltd
mov
dec
nop
ja
ret
test
sub
and
jg
scas
int3
lahf
shrl
xlat
ret
inc
mov
stc
dec
mov
jl
shll
or
sahf
add
pop
and
ret
jle
fcmovne
je
cmc
inc
inc
xchg
push
pushf
outsb
push
xor
sbb
fistps
adc
adc
pop
jnp
lret
or
into
mov
fsubrl
fwait
lcall
mov
out
sub
ds
lret
inc
xor
scas
xor
aam
aaa
popa
xor
popa
xchg
ljmp
addl
insb
insb
lock
movsl
xchg
aaa
pop
roll
mov
mov
inc
into
mov
add
mov
inc
jle
mov
shl
cmp
stos
movsl
and
popa
and
mov
in
jns
lock
sub
push
rcrl
mov
cmp
cli
and
sub
fs
pop
dec
sbbb
jae
sub
cmp
andb
push
jb
add
adcl
xor
or
pusha
lods
mov
push
xchg
sbb
mov
lahf
rcll
out
mov
push
repz
sbb
mov
add
hlt
leave
das
cmp
minps
xchg
aam
loope
enter
xchg
adc
adc
xchg
and
xchg
scas
pop
dec
into
mov
sbb
dec
sar
mov
aad
fbstp
fisttpll
add
imul
inc
xor
in
movsl
push
or
jle
cmp
nop
and
fwait
xchg
cmp
gs
sbb
jmp
sub
movsl
das
xlat
and
cwtl
jnp
sub
mov
pop
in
enter
mov
add
stos
mov
xlat
mov
inc
lret
mov
dec
loopne
pop
mov
mov
mov
adcl
lahf
lahf
push
add
test
inc
xlat
pop
stos
ja
adc
fisubl
jle
mov
cmp
inc
mov
pop
xor
mov
lods
fwait
add
mov
addr16
jg
pushf
cmp
flds
mov
xor
jle
xchg
js
out
fcmovb
pop
iret
xchg
mov
arpl
aaa
xchg
into
push
inc
jg
jp
sub
iret
mov
mov
mulb
mov
std
pop
jns
shll
sbb
mov
sub
sub
adc
mov
xorl
imul
jo
fmull
pop
ja
jg
ja
lahf
rolb
jl
sub
out
xchg
xor
or
and
mov
cld
xor
cmp
div
test
xchg
bound
pop
pusha
sti
iret
addb
insl
andb
push
rcrb
popf
add
inc
sub
bnd
jo
lods
outsl
add
jnp
shl
insl
out
and
and
cltd
shrb
mov
pop
mov
testb
sahf
sbb
in
andb
sub
repnz
aam
inc
xor
cmp
shrl
test
std
lret
pop
sub
and
addr16
inc
dec
mov
fbstp
leave
sarb
mov
lret
movsl
outsb
sbb
sbb
push
sub
daa
inc
cld
pushf
nop
jne
push
xchg
imul
add
cld
nop
xor
mov
xchg
mov
inc
xor
xor
cmpsb
in
pop
and
inc
fcmove
rcrl
or
add
sub
cmp
shrb
std
jb
daa
and
scas
jno
ja
outsb
sub
fsubl
popf
call
sbb
adc
repz
stc
jae
divb
push
or
rorb
push
in
fnsave
mov
mov
fcoml
dec
push
negl
loopne
bts
call
enter
ret
adc
stc
sbb
xlat
xlat
cmp
subl
adc
jge,pn
push
xchg
lcall
je
lret
das
xor
and
add
fdivl
xor
jg
sbb
dec
adc
in
hlt
loop
xlat
ds
mov
jecxz
lock
dec
mov
aad
test
mov
pop
loope
subb
or
mov
mov
push
ds
jbe
cmpb
sub
loop
or
jl
movsl
mov
fxch
out
repnz
lahf
cmp
xchg
mov
and
daa
ret
cmp
andb
scas
sbbb
adc
push
fwait
icebp
fcmove
pop
push
mov
ficoml
push
mov
or
push
and
test
jbe
mov
ja
push
sub
xchg
cld
stos
xchg
sahf
push
mov
in
xor
xor
fwait
sahf
fdiv
aaa
mov
push
call
adc
leave
mov
or
stos
out
mov
xchg
dec
loop
xor
out
cmp
adc
mov
fsubrl
jge
ljmp
xchg
xchg
andl
ss
pushf
ret
rcll
icebp
or
mov
out
mov
insl
jg
pop
sbb
gs
or
mov
push
jno
mov
inc
loopne
and
sbb
dec
push
dec
shl
jmp
aad
sahf
push
jle
movsb
shlb
loope
test
cmc
mov
mov
iret
movsb
stc
stos
push
push
pop
sbb
mov
pop
aas
jae
dec
mov
mov
les
lret
aas
pop
andl
push
mov
mov
test
xchg
lods
loope
push
xchg
aad
pop
xor
loope
xor
pmulhuw
mov
cmp
mov
jns
adcl
aam
arpl
push
insl
sahf
mov
dec
adc
mov
pop
mov
push
rclb
mov
mov
fistpll
stos
xor
in
ja
mov
inc
sbb
lds
out
cmpsl
sub
dec
mov
jl
mov
icebp
stos
loop
mov
inc
mov
mov
ret
dec
adc
sbb
insb
dec
and
cmp
insb
pushf
or
loop
pop
stc
icebp
adc
add
pusha
jl
mov
popf
leave
jae
in
jne
out
pop
cmc
mov
and
mov
mov
jge
jne
sahf
dec
fisttps
test
movsb
cmp
stos
and
shrb
xor
add
xor
divb
pop
jae
cmp
nop
aad
cld
fnsave
es
aaa
push
lret
xor
xor
outsb
sbb
or
mov
add
push
push
mov
cmp
je
ja
mov
fidivl
mov
cmp
mov
xchg
icebp
push
pop
jb
mulb
mov
pushf
repz
mov
sub
mov
cmp
sub
mov
mov
shrb
add
sub
addr16
sti
addr16
add
push
or
mov
std
ja
nop
test
pop
scas
xlat
sbb
iret
in
pusha
test
adc
jg
lods
sbb
sub
dec
mov
jno
sbb
inc
outsl
popl
mov
mov
pushf
outsl
sub
popf
imul
imul
aas
aam
fdivrl
mov
inc
ret
push
xchg
push
or
jl
dec
cmp
pusha
imul
add
imul
jno
jbe
loope
mov
push
out
jp
std
push
sub
loope
aam
push
fcmovnb
adc
fstpl
push
push
out
mov
jmp
fdivrl
lods
push
cmp
in
mov
add
call
loope
sbb
dec
push
lock
add
push
loope
jp
jmp
inc
inc
and
sti
je
dec
adc
and
icebp
xchg
dec
xor
jge
add
lods
jmp
into
cmp
sub
mov
or
loopne
in
cwtl
fstps
push
jb
xchg
cmp
ret
stos
fcoml
push
lods
lahf
or
int3
jg
sbb
or
das
ja
mov
adc
aad
loope
aad
jp
mov
test
repz
addr16
lahf
push
cs
jb
mov
in
jle
xchg
xor
add
lcall
popf
inc
clc
lea
je
cmpsl
xchg
ficoms
adc
cmp
cmp
test
xchg
mov
rcrl
int
in
mov
fwait
cmc
adc
mov
jo
test
shrl
push
push
out
xor
dec
xor
clc
lock
enter
lods
jg
fmulp
jae
lock
je
mov
mov
jle
movsb
push
lcall
xor
insb
push
ljmp
loope
ret
mov
in
inc
out
dec
loope
or
sub
insb
adc
and
push
je
fbstp
and
or
lock
incl
mov
jmp
mov
sbb
adc
sbb
add
inc
xchg
push
inc
and
fsubl
outsb
dec
sub
leave
aaa
and
fnstenv
xchg
sub
inc
mov
xor
jge
or
mov
rcr
out
stos
xchg
cli
sahf
pop
jae
xor
mov
in
fwait
rclb
jl
adc
scas
lds
jne
mov
into
pop
ja
jne
mov
cmp
mov
out
pop
addr16
mov
mov
insl
lret
pop
cmp
fstpl
sahf
mov
adc
cmp
rol
aad
andl
sub
jns
or
outsl
jnp
mov
push
push
xor
in
mov
in
dec
push
xor
mov
int
inc
or
push
pop
dec
mov
fsubr
ret
test
or
xchg
pop
mov
outsb
mov
mov
sbbb
xchg
ss
adc
sbbb
jecxz
es
lret
mov
pop
mov
popa
cs
rcl
mov
add
xor
icebp
and
jo
out
popa
shlb
imul
jge
mov
mov
inc
fcmovnbe
mov
out
inc
cmp
add
jbe
pop
mov
inc
adc
test
add
cmp
pop
or
orb
mov
fsubrp
inc
rclb
mov
mov
or
dec
cltd
or
adc
xlat
mov
mov
mov
mov
sbb
cwtl
mov
lods
fistpl
je
pop
mov
sahf
and
hlt
lods
inc
daa
push
ss
insb
mov
xchg
push
out
jmp
or
jbe
lret
test
shll
shlb
jg
adc
inc
dec
testb
fiadds
fstpt
sti
out
jb
adc
xor
rolb
imul
or
sbb
aad
pop
mov
xor
aad
dec
xor
popa
loope
mov
push
xlat
outsl
lds
sbbl
sbb
push
es
shl
cld
xchg
out
xchg
out
repz
dec
stos
bound
xchg
inc
xlat
mov
mov
mov
add
aaa
out
cmp
outsb
cmpsb
leave
repz
daa
outsl
sarb
test
rolb
lret
push
mov
pop
inc
les
mov
enter
pop
or
mov
mov
sbb
outsl
mov
jae
and
sub
mov
call
lret
or
es
sahf
test
shrl
push
xchg
mov
test
fs
mov
pop
push
xlat
mov
in
pop
inc
jbe
mov
cmp
mov
pop
ret
fwait
push
mov
pop
mov
in
shrb
push
push
in
pop
mov
dec
and
mov
push
sub
xchg
mov
mov
mov
sub
movsl
mov
push
ljmp
lret
repz
testb
cmp
ret
jns
fs
imul
pop
aad
rcr
in
loopne
ja
inc
jmp
repz
aas
sbb
inc
in
nop
inc
dec
shlb
add
ret
dec
cmpsl
hlt
push
pop
jne
sbb
and
inc
daa
or
xchg
mov
fstpl
mov
adc
ret
adc
inc
cld
push
pop
in
cld
xchg
out
rcll
adc
cs
mov
pop
out
scas
jp
or
add
xchg
push
inc
inc
insb
xchg
insb
adc
shll
add
jo
std
xchg
pushf
adc
jp
leave
sbb
mov
in
mov
or
or
outsl
xchg
cs
push
sbb
dec
frstor
rcrb
cmp
and
mov
or
lcall
pop
xchg
lret
push
push
push
sub
test
arpl
fcoms
addl
and
out
mov
and
sarl
dec
iret
fstpt
lcall
dec
mov
push
jne
rol
loopne
xchg
andb
mov
cmp
dec
pop
sub
lods
test
push
repz
pop
push
stos
inc
dec
in
sbb
mov
xlat
and
in
sub
dec
pop
or
popf
cmp
adc
stc
jns
push
sbbl
add
sbb
fsubrl
jp
jmp
or
imul
clc
js
orb
in
xor
fnsave
sti
jbe
and
stos
push
push
fmull
pop
cmp
nop
add
pop
stc
loopne
repz
rcrb
jg
pop
lea
xchg
addr16
mov
and
mov
mov
mov
push
movsb
pop
adc
lods
rorl
mov
adc
add
repnz
out
test
sarb
cmpsb
clc
dec
frstor
call
push
lods
and
jae
fdivr
xchg
xchg
mov
mov
or
sub
enter
ljmp
movsb
sarl
xchg
push
cmpsb
stc
nop
mov
pop
mov
xor
mov
rorl
fwait
push
xchg
sub
bsf
mov
dec
mov
and
fwait
sub
xor
mov
push
mov
jno
dec
loop
movb
repnz
add
pop
hlt
mov
adc
int3
or
pop
dec
into
enter
popa
and
mov
fildll
fsubrl
push
push
jmp
inc
jne
xlat
jb
xchg
push
subl
mov
rclb
fs
inc
popf
push
cltd
or
mov
xorb
sbb
loope
xchg
stc
fimuls
bound
sbb
jmp
pop
outsl
arpl
scas
je
scas
xchg
mov
movsb
loope
out
mov
mov
out
bound
adc
xchg
jl
add
sub
sbb
push
or
or
fists
mov
lea
xchg
ss
je
or
xchg
push
icebp
sar
inc
xor
sti
jbe
call
loope
in
loope
shl
ljmp
rorb
jp
cmp
js
les
jnp
lret
dec
fsincos
shlb
roll
repnz
lds
js
mov
dec
xlat
outsb
jle
mov
sysenter
lds
int
xor
mov
mov
push
pop
ret
cs
in
xor
hlt
pusha
std
jo
sahf
xor
cltd
in
bound
scas
ficomps
dec
popf
aam
iret
insl
adc
je
push
cmpsb
push
pop
adc
xchg
adc
push
inc
insb
dec
jo
jne
dec
loop
xchg
xor
push
inc
lds
fwait
les
notb
sub
loopne
nop
hlt
mov
pop
sub
cwtl
sbb
xchg
outsl
or
cmp
add
sarb
sub
xor
and
pop
repz
or
mov
ds
aas
jl
mov
push
insl
jle
das
lock
stos
mov
sbb
sub
sbb
cmc
sarb
testb
daa
lcall
pop
dec
data16
dec
in
scas
fiadds
dec
loop
es
sbb
adc
sahf
pop
ja
jb
mov
cmp
fsub
call
push
jge
fnsave
xchg
daa
aam
test
sbb
push
mov
add
iret
fistpl
mov
pop
jb
mov
das
rcpps
xchg
fmuls
jmp
fiaddl
push
cld
sub
and
cld
xchg
jg
cli
inc
pusha
push
push
and
pop
call
jecxz
into
dec
mov
and
sub
lods
mov
adc
cmpsl
std
mov
arpl
add
sar
xchg
xchg
into
sbb
fidivs
data16
ss
test
in
insl
push
add
xchg
xor
push
ror
int
xchg
mov
or
mov
mov
mov
push
mov
in
adc
fimull
ljmp
cbtw
das
pop
mov
mov
mov
insl
loopne
test
mov
cmpsl
pop
jb
sbb
loopne
stc
or
nop
sub
ljmp
jnp
enter
testb
mov
xchg
or
jns
mov
jns
dec
push
mov
dec
add
popf
sub
test
aam
add
xchg
adc
dec
imul
pushf
fadd
pop
push
outsb
ficoml
loope
pop
int
adc
jl
cmp
and
adcb
or
sbb
ds
arpl
cmc
add
pop
pop
lock
xchg
inc
movsl
ja
roll
xchg
arpl
jno
hlt
xchg
faddl
mov
add
outsb
add
or
pop
xchg
lods
in
push
mov
stos
pusha
leave
pop
and
or
jge
xor
jnp
pop
mov
int
or
out
cli
xchg
add
hlt
testl
cmp
imulb
and
ljmp
int3
pop
jae
punpckhwd
and
pop
ljmp
clc
xor
fildll
dec
in
cvtdq2ps
mov
rol
cmp
pop
add
stos
imul
test
ss
stos
sbb
jns
dec
icebp
dec
loope
out
aaa
stos
fstpt
push
push
push
movsl
and
push
jle
or
cmp
insl
inc
pop
ficompl
fcmovb
fimuls
loop
cmpsb
cwtl
sub
out
fs
add
test
mov
push
fidivrl
je
pop
xchg
out
adc
mov
or
fcomps
cmovns
xor
cld
push
mov
lock
out
and
add
jmp
lea
sbbl
out
sahf
xchg
rorb
cld
je
sbb
lahf
xor
fwait
push
fnsave
int
int3
in
test
pushf
push
mov
adc
js
out
test
jl
mov
cmp
inc
ret
lds
push
aas
mov
popf
fs
and
sub
gs
mov
or
mov
or
aas
adc
mov
es
sbb
int
mov
stc
test
and
into
out
mov
push
in
shl
pop
sub
mov
xor
mov
es
ja
or
aad
cmc
adc
jg
xor
dec
fsub
cs
in
jg
lea
sub
jmp
add
sbbb
and
ficomps
mov
mov
ljmp
sub
repz
and
pop
aaa
mov
out
add
push
sub
popa
stos
jle
dec
cs
jns
add
lods
xchg
iret
mov
daa
mov
loopne
sbb
cli
push
cmp
xchg
insl
dec
jns
iret
outsb
loope
and
xchg
jge
divb
int
inc
adc
and
cmp
sbb
jp
mov
dec
sahf
sbb
jnp
lods
inc
lods
fwait
jnp
hlt
fidivs
insl
add
scas
hlt
addr16
add
ds
inc
fxsave
jecxz
in
mov
std
cmp
mov
lcall
push
mov
mov
or
dec
and
incl
enter
loop
int
ret
mov
outsl
and
ret
popf
mov
mov
iret
ja
jle
shlb
jo
int
arpl
fsubrl
mov
cli
arpl
dec
pop
cmp
lea
mov
aam
dec
cmpb
add
xor
adc
mov
cmp
jp
mov
ds
sarl
ja
lods
das
sub
xchg
cmc
xchg
add
sti
dec
and
xorb
fisubs
or
jmp
daa
xchg
mov
inc
ss
xor
addr16
aaa
mov
cmp
ss
inc
adcb
ror
ss
rorb
inc
push
lea
or
stc
xor
mov
mov
sub
sub
xor
and
xchg
aaa
sbb
jp
dec
cmpsb
jb
cmpsl
inc
jns
cs
ljmp
or
jno
aam
imul
xchg
lock
pushf
adcl
mov
inc
stos
lret
leave
jl
sbbl
mov
mov
dec
js
xor
bound
cmpsl
sub
push
jle
lock
inc
cld
add
and
jae
xor
inc
scas
or
sub
les
fidivrs
iret
test
jnp
mov
leave
adc
jl
or
inc
push
ljmp
sub
jbe
mov
daa
jle
jno
popl
inc
not
xchg
out
add
mov
sub
mov
cmp
dec
insl
inc
jge
imul
sti
iret
stc
popf
rclb
sahf
xor
adc
adc
jl
pusha
fldt
je
loop
jae
ror
xchg
xchg
cmp
or
stc
mov
jns
mov
xor
inc
cmpsb
or
scas
enter
inc
dec
cmp
push
outsb
loope
xchg
mov
cmpsl
push
imul
xchg
jo
cli
into
adcb
and
cmc
xchg
jbe
sub
mov
sbb
shl
xor
lahf
and
sahf
xor
mov
pop
out
es
popf
stc
dec
stos
pop
call
pop
fpatan
mov
icebp
enter
je
es
sahf
lcall
aam
inc
dec
adc
jge
cmp
je
sarl
es
loopne
inc
neg
inc
aaa
mov
arpl
adc
cld
push
test
leave
jne
push
or
pop
adc
cli
test
or
inc
fmuls
xlat
scas
repz
jp
stos
jmp
pusha
mov
fists
pushf
xor
push
xlat
cmp
cmp
jecxz
loope,pt
or
xor
lods
jmp
push
in
mov
pop
clc
pop
xor
mov
fs
cmp
jmp
mulb
jo
sahf
out
or
and
divb
lods
sbb
das
add
dec
icebp
push
insl
and
leave
loope
js
adc
mov
ja
mov
subl
jno
inc
mov
pop
push
aas
lods
cpuid
pop
add
jecxz
gs
lock
subl
scas
shl
add
loop
sarl
or
pop
sbbl
sub
mov
sbbb
leave
negb
addl
sbb
ja
sub
sub
pop
adc
cmp
imul
cmp
jne
jne
pop
addr16
xchg
icebp
mov
icebp
mov
js
and
push
mov
shrl
push
pop
rorb
imul
andl
xchg
xchg
push
mov
mov
and
fwait
insl
aas
jbe
jnp
mov
and
dec
mov
bound
mov
sbb
pop
sti
inc
int3
shll
add
mov
jecxz
push
pop
scas
mov
inc
cli
mov
or
ja
es
push
popl
test
mov
pop
popf
fs
das
jns
cmp
je
fisttpl
std
add
ds
jle
adc
add
stc
imul
nop
jg
mov
ds
shrb
fdivp
adc
fmuls
fs
sub
ljmp
push
fimull
xchg
xchg
sub
cmp
xor
inc
pop
push
jg
or
dec
ss
jge
cmpsb
ljmp
pop
jns
mov
mov
movsl
mov
shrl
xor
bound
ljmp
mov
and
cmp
hlt
negl
xor
and
adc
je
enter
fldenv
jo
testb
ljmp
jge
inc
dec
adc
loop
inc
lret
dec
mov
mov
push
fsts
pop
mov
test
lret
xchg
inc
es
mov
loop
cmpsl
push
jo
mov
push
xor
jl
rcrl
in
push
std
pop
xor
xor
sbb
and
mov
pop
xor
inc
lcall
mov
xchg
mov
ret
cmp
insl
or
pop
dec
add
aad
enter
sar
jg
sub
jl
in
lret
pop
cmp
daa
outsl
testb
mov
pop
scas
iret
fwait
sub
adc
mov
mov
cltd
sti
jmp
mov
jbe
mov
pushf
sbb
dec
or
adc
inc
mov
mov
loopne
xlat
cmc
mov
jp
aas
adc
fistps
jne
in
pop
mov
ja
sub
push
ret
cld
imul
clc
or
movsl
or
mov
ds
out
in
cmp
in
aad
lret
add
and
ret
sub
rol
in
lds
dec
adc
dec
scas
push
push
xor
inc
xor
mov
iret
into
js
jmp
imul
cmp
addr16
adc
pop
mov
pusha
push
sahf
sub
add
bound
test
and
sbb
add
nop
insl
mov
xlat
push
lcall
jno
pop
sbb
stos
insl
mov
cmp
jnp
scas
out
outsb
mov
and
div
aam
sbb
xor
pop
inc
cltd
add
dec
lock
iret
outsl
xor
or
sti
mov
fs
add
and
inc
test
nop
sub
cld
js
insb
sub
jns
and
in
stos
idivl
mov
das
ss
loope
fnstenv
sub
imul
push
fwait
cmp
cltd
xor
mov
test
sbb
rclb
cmp
push
ret
mov
filds
adc
push
sub
cmp
cmpsb
cmp
popa
cmp
dec
scas
or
mov
cld
mov
sub
push
pop
lds
bound
pop
dec
jecxz
jle
xlat
jns
xchg
lods
sub
imul
loop
mov
addr16
lock
fnstcw
fs
sub
call
movsl
pop
mov
add
loope
test
outsb
adc
mov
and
dec
and
in
xor
jmp
sbb
add
dec
pop
dec
cmp
fldt
into
lock
shl
movsl
push
xlat
das
jmp
fpatan
xor
nop
mov
sub
lea
and
push
sbb
or
scas
cmp
adc
add
xchg
xlat
fdivs
leave
fs
sbb
mov
xlat
push
sub
leave
dec
into
ficomps
push
ja
imul
sahf
dec
inc
fnstsw
jl
jbe
adc
fs
mov
ror
fldl
mov
dec
mov
add
imul
in
push
lcall
repz
adc
les
adc
adc
shlb
movsl
push
cld
fwait
lds
inc
add
dec
adc
push
movnti
leave
imul
cmp
insb
cmp
mov
int
stos
mov
and
int3
push
js
call
mov
mov
inc
outsl
cwtl
xchg
cs
inc
in
js
imul
notb
loope
pusha
hlt
inc
inc
fs
rol
mov
ja
cwtl
sbb
add
and
in
ja
shrl
std
mov
push
and
adc
pop
fdiv
sarb
inc
sub
xchg
sahf
in
cmp
push
jg
mov
sti
or
cmc
out
inc
out
clc
xchg
sbb
insb
shrb
dec
cmp
push
mov
aaa
addb
cmp
fsubl
xchg
and
rolb
dec
in
xlat
imul
mov
cmpsb
push
xorl
nop
in
nop
mov
testl
int3
ret
adc
insb
pusha
ds
rcrb
xor
inc
fiaddl
dec
sbb
mov
repnz
xchg
push
testl
inc
push
cld
sbb
enter
insl
jns
dec
inc
push
imul
and
jo
test
sbbb
mov
xlat
add
fisubrs
pop
dec
insb
ds
fidivl
inc
inc
xchg
push
fiaddl
imul
dec
fcomip
cmp
data16
sub
rcrb
sbb
das
mov
decl
xor
push
cs
xchg
ret
loope
cltd
loope
mov
ret
sub
insb
jl
aad
shll
or
mov
xchg
cmp
jecxz
test
pop
jb
in
in
cmpsl
subb
sub
ds
rclb
or
cmp
fisubrs
test
cmp
js
imul
gs
call
out
mov
mov
xchg
mov
xor
add
mov
in
popf
or
fwait
sbb
shrl
loopne
mov
pop
stos
push
mov
pcmpgtb
inc
push
fisubrs
mov
insb
or
dec
add
out
push
fmuls
sti
push
mov
repz
cmpsl
sub
sbb
jo
out
xor
stc
rcl
and
adc
negl
movsl
adc
fs
sbb
clc
leave
jg
ds
jg
sbb
enter
or
call
jbe
mov
in
jno
out
jmp
cmpsb
js
nop
dec
or
aad
mull
cmp
std
hlt
lock
lahf
in
jnp
push
add
call
xor
cmp
and
lahf
jl
shrl
mov
imul
xor
mov
in
or
repz
rol
popa
enter
lahf
daa
jno
pop
rcr
std
dec
rclb
or
ljmp
out
fsubp
mov
outsb
adcb
shr
xchg
adc
inc
add
xchg
add
imul
pop
adc
jmp
repz
ja
leave
ss
jae
dec
int3
in
fninit
sbb
jge
sarl
in
and
or
and
or
and
mov
cmc
cmp
add
in
repnz
sbb
adc
sub
test
rol
mov
push
dec
mov
ja
ret
mov
sti
adc
pop
inc
fcom
hlt
loope
ret
xor
xchg
sub
cmp
and
cmpsb
xor
std
icebp
ds
and
cs
stc
xchg
cmp
add
push
pop
in
or
adc
cmc
popf
and
add
repz
leave
lahf
and
lret
icebp
inc
shlb
ret
out
das
sbb
xchg
out
sahf
mov
cmc
push
sbb
stos
push
jbe
mov
in
pop
rorb
jl
cmp
dec
cmp
push
xchg
shll
ret
pop
scas
and
push
into
shrb
inc
lahf
pusha
inc
jo
sub
inc
fisubrl
pop
adc
rcl
cmp
mov
mov
and
fimull
sub
adc
lods
mov
add
faddl
sti
sub
jnp
fcoml
xlat
xchg
or
pop
mov
pop
notb
int
inc
xlat
xor
jae
stc
enter
dec
icebp
adc
add
adc
inc
pop
dec
mov
sub
sub
dec
mov
jg
mov
icebp
fisubrs
or
add
jg
les
lret
pop
aam
iret
imul
lock
aad
int
sbb
dec
in
inc
clc
cltd
daa
mov
dec
mov
jl
test
mov
pushf
jl
call
add
inc
dec
or
push
push
cmp
in
add
jbe
and
mov
sub
fimuls
xchg
mov
sub
inc
rcrb
or
imul
jg
xor
xor
icebp
enter
jnp
rclb
ret
flds
mov
add
inc
and
xchg
stos
push
leave
pop
inc
jp
std
jo
leave
xor
jl
sahf
mov
sub
fistps
pop
fbld
lret
fsts
out
negb
inc
push
les
fwait
jno
jbe
mov
scas
inc
mov
fwait
push
out
add
subl
jno
or
push
cmp
daa
jge
repnz
pop
dec
nop
add
mov
push
sahf
loopne
movsl
icebp
ret
jmp
pop
xchg
in
or
xor
rcrl
testl
mov
gs
pusha
ja
inc
jne
jae
stc
popf
cli
mov
jmp
adc
mov
out
pushf
dec
loop
mov
test
lods
xor
fs
inc
fsubr
add
ficoml
mov
cmc
jne
loop
cs
xchg
mov
arpl
sbb
and
ljmp
mov
add
lock
out
clc
aam
jg
inc
movsl
jae
mov
js
jp
xchg
pushf
loop
in
dec
push
lock
pop
movsl
adc
and
popa
ja
lock
xchg
and
and
cwtl
sbb
jnp
in
add
mov
add
push
cltd
and
mov
sbb
clc
push
std
pop
ficomps
xchg
pop
mov
leave
sub
jle
stos
inc
adc
adc
test
mov
inc
cmp
sti
or
aam
adc
movsl
mov
out
add
sbb
or
inc
mov
cltd
pop
add
nop
push
pop
jbe
add
or
aas
cmp
xchg
adc
jnp
loop
out
mov
nop
jae
pop
sub
pop
and
fdivrs
and
arpl
jmp
dec
cmp
clc
leave
das
mov
xlat
mov
ret
test
aam
xor
rcr
repnz
cld
frstor
mov
push
shrb
or
adc
push
repz
repz
pop
xchg
in
pop
jp
scas
and
or
out
ja
fisubrs
cmp
repnz
pop
xor
cmpsb
jno
xchg
cmp
mov
xor
push
mov
push
scas
ljmp
pushf
jae
xor
cmpsb
xor
movsb
and
or
jl
inc
sub
xor
xchg
cmp
or
and
sahf
mov
pop
mov
adcb
ljmp
lock
ljmp
adc
fldcw
xlat
outsb
mov
sub
shrb
inc
inc
or
mov
cmp
lock
lahf
aaa
pop
shr
ja
sub
lret
xor
sub
test
in
ror
rorl
and
into
xchg
fidivs
mov
cld
fidivs
mov
iret
aaa
scas
jnp
call
mov
mov
cmpsl
pusha
sbb
test
or
les
aas
aas
lea
out
sbb
push
sbb
fmull
jns
int3
subl
out
xchg
ja
jle
dec
push
xor
test
imul
adc
mov
inc
xor
or
cmp
lock
add
scas
xor
stc
pop
in
nop
mov
inc
mov
adc
fbstp
outsb
cmpsl
mov
adc
stc
lea
xor
sub
push
out
loop
imul
jbe
or
mov
adc
fnsave
sub
fidivrl
call
cld
sbb
xor
mov
sub
jp
icebp
cmpsb
inc
mov
inc
in
adc
subb
push
syscall
or
ret
jge
pop
or
sub
pusha
sbbb
not
sbb
fstps
fmull
jb
or
jb
mov
mov
push
adc
mov
xor
ja
data16
inc
in
xchg
mov
push
mov
lret
mov
je
lret
cmp
mov
ja
dec
dec
push
leave
push
test
or
adc
imul
sub
cld
push
xor
test
and
popf
sub
sbb
push
xor
jbe
adc
sbb
rclb
and
jp
jae
or
nop
push
es
pop
shll
lock
mull
jmp
jns
jae
add
cmp
out
cmp
cmc
movsb
mov
inc
mov
subb
pop
cs
dec
add
fwait
jp
dec
jo
sub
in
inc
mov
xchg
ret
xchg
mov
pop
xchg
fidivs
pusha
mov
loope
cmp
add
pop
repz
icebp
xor
push
stc
cld
lcall
loopne
cltd
xor
jp
lds
call
push
adc
adc
jne
sbbb
out
cld
xchg
and
addr16
jp
mov
insl
pop
mov
std
xchg
push
xor
jnp
jnp
aas
and
jo
pop
dec
fisttps
outsl
add
add
rclb
aas
xchg
adc
push
mov
and
cmp
cmc
dec
dec
out
js
add
cmp
sbb
sbb
test
xlat
ljmp
mov
shlb
pop
ret
cltd
std
lds
mov
pop
cmpsl
aaa
or
mov
xor
mov
pop
sahf
icebp
or
adc
and
test
in
test
xchg
emms
lods
stos
lret
fldl
ret
outsl
push
ja
pop
dec
jl
mulb
inc
mov
lahf
cmp
andb
lahf
jne
nop
sub
add
sbb
scas
mov
arpl
outsl
pop
push
jbe
mov
nop
push
pop
and
push
mov
sbbb
rorl
inc
cli
xchg
xor
fnstsw
sub
push
xchg
leave
outsb
lods
push
iret
sbb
xchg
repz
adc
adc
inc
not
jae
movb
fimuls
stc
fimuls
pop
mov
pop
decb
adc
xlat
loopne
call
jmp
ds
xchg
scas
lods
mov
cmpsb
inc
sbbb
jmp
xchg
scas
mov
mov
inc
sub
pop
in
jmp
inc
mov
mov
test
test
lcall
cmpsb
hlt
or
mov
inc
aas
out
jno
mov
cmpsl
sub
jge
and
cmp
adc
dec
pop
ficoml
insb
test
mov
sahf
rol
jb
xor
cwtl
and
adc
orl
mov
sub
dec
decl
cwtl
ss
lret
mov
jle
sub
mov
mov
xchg
sub
repnz
in
xchg
push
clc
xlat
enter
popa
push
mov
push
mov
mov
fidivrl
mov
rolb
or
dec
cmp
mov
push
popl
ret
mov
popf
pop
data16
leave
cwtl
mov
out
mov
repz
mov
push
pop
xor
and
push
fmulp
mov
fists
adc
inc
push
cmp
add
outsl
xor
testb
sub
xchg
jnp
and
test
fs
gs
add
push
out
les
popa
sahf
popf
mov
stos
imul
inc
xchg
jo
loope
mov
and
xchg
jnp
and
in
jl
push
adc
or
ljmp
push
xlat
lret
cmc
mov
mov
negl
xchg
sbb
subl
adc
cli
aam
sub
sbb
notb
push
add
inc
xchg
sbb
jl
in
in
sbbl
mov
pop
mov
cltd
fists
xchg
inc
stos
push
testb
insl
mov
pop
sub
movsl
test
aas
mov
push
cld
shlb
fstl
lret
fnstenv
fcoms
pop
mov
or
inc
pusha
das
rclb
xor
icebp
jb
sbb
pop
ds
dec
movsl
inc
sbb
scas
hlt
cmpsb
ja
pop
outsb
notl
mov
daa
cmp
cmp
addb
leave
push
insb
lret
das
push
or
test
dec
cmp
pop
fucomp
mov
shl
fimuls
call
or
sub
je
ds
faddp
pop
adc
add
jno
adc
xchg
xor
jnp
cmpsl
mov
pop
es
out
pop
call
push
mov
out
call
cld
jbe
cmpsb
cmp
push
mov
xor
popf
xchg
xor
mov
sbb
sarl
cmp
call
xchg
or
out
stc
fisubrl
divl
xchg
cmp
adc
inc
mov
fbld
jno
adc
and
push
xor
lahf
iret
or
incb
cmc
arpl
dec
lahf
scas
movsb
sbb
in
lds
cmp
mov
fnsave
push
xor
out
inc
pop
imul
int
cs
dec
data16
cmp
push
loop
sub
xor
xchg
loop
popa
fcompl
push
jae
pop
push
push
pop
dec
int3
xchg
lcall
or
jae
nop
das
cli
sbb
sub
add
jle
int
mov
xchg
sub
pop
cli
mov
mov
pop
add
out
add
and
and
pop
inc
insb
pushl
imul
pop
dec
les
shll
ja
or
dec
sub
pop
dec
cmp
mov
mov
out
jnp
enter
data16
sub
test
sti
pop
addl
aad
push
or
ljmp
mov
cmpb
mov
lret
shll
adc
jne
or
add
pusha
cwtl
pop
jbe
les
iret
data16
sub
sub
adc
nop
aaa
pop
jle
mov
fs
rorb
test
sbb
lea
jge
pusha
and
mov
insl
push
jecxz
mov
mov
add
add
cmpsl
push
fnstenv
sbb
sub
imul
cmc
outsl
imulb
jl
adc
xlat
xlat
jns
dec
lcall
xchg
jg
cmc
insb
inc
push
lods
test
popf
mov
cmpsl
mov
cmp
and
mov
scas
adc
addr16
decb
in
jmp
jae
mov
rorb
and
mov
jmp
enter
dec
jmp
es
mov
cmp
loope
cmc
add
outsl
adc
push
mov
int3
or
test
push
in
cmp
inc
cmpsb
mov
jecxz
into
or
push
push
dec
pop
mov
mov
pop
repnz
fs
jecxz
xchg
scas
out
push
jmp
and
fsubrl
sbb
xchg
sbb
pop
inc
loop
imul
sbb
sahf
repnz
inc
push
cmpsb
push
dec
lret
jne
xchg
pusha
inc
dec
rcr
jecxz
cwtl
adc
bound
rclb
and
sbbb
inc
sub
fdivs
push
jl
lods
or
mov
or
jo
fstsw
and
rcrl
xchg
aam
loope
jle
aam
mov
outsb
jp
sub
jle
jmp
in
rorb
mov
out
xor
popa
cltd
fimull
xor
inc
pushf
xor
xlat
mov
add
dec
shl
dec
scas
mov
sub
adc
mov
mov
jp
cli
and
loopne
dec
mov
dec
rolb
aam
clc
adc
adc
inc
daa
push
xchg
nop
and
in
push
mov
sbb
xchg
jne
aaa
cmpsb
or
fmull
shrl
mov
mov
adc
mov
mov
sti
loop
subl
mov
lods
cwtl
pop
imulb
jg
sub
dec
jp
inc
mov
je
bswap
and
stos
cmc
push
mov
mov
mov
pop
mov
test
jp
cli
mov
fisubs
mov
int
scas
inc
pop
in
jmp
sub
sbb
xchg
dec
ja
pop
cmp
dec
daa
hlt
pop
cmp
push
ret
add
sub
push
int
cltd
int3
sbb
loope
mov
jmp
in
dec
out
lret
sbb
adc
int3
orl
xchg
enter
test
sti
push
insb
lahf
es
add
mov
aam
jns
mov
xchg
sbb
enter
ljmp
rorb
sbb
pusha
inc
loopne
divl
bound
mov
inc
fstpl
push
xchg
dec
rcll
cli
aaa
and
ss
les
mov
adc
jp
jns
aad
imul
cmpsl
in
mov
out
mov
sti
testb
outsl
into
xor
cmpsb
loope
jl
sub
nop
imul
pop
mov
loop
inc
fsubrp
dec
aam
pop
mov
ret
sti
mov
lret
aad
addl
add
push
lock
fistl
ret
mov
rorl
stc
or
lret
sbb
pusha
testl
sub
sbb
xor
cmp
dec
push
rcr
repnz
mov
outsb
sub
mov
jle
pop
sti
jbe
add
adcb
push
mov
fucomp
or
xchg
inc
or
std
jp
xor
xlat
pop
pop
xor
in
xchg
sbb
lret
dec
fst
and
clc
insl
sti
aad
imul
test
pop
ret
jmp
jbe
xchg
inc
ffreep
jb
movsl
js
in
in
ret
xchg
pop
std
mov
and
es
outsb
push
movsl
icebp
or
imul
scas
adc
cmp
es
ret
je
adc
fs
inc
sub
in
adc
jp
push
xchg
adcl
adc
daa
outsb
pop
add
es
aam
fiadds
and
lods
mov
jg
mov
jge
push
test
mov
addr16
jmp
sub
fnstenv
mov
scas
popa
jns
sbb
mov
ds
add
aaa
sub
add
mov
xchg
push
pop
and
aad
dec
jecxz
call
inc
test
jb
popf
push
sbb
or
mov
xchg
fimuls
mov
test
adc
mov
cmp
mov
xor
js
shlb
push
inc
dec
iret
pop
out
xchg
or
das
sbb
dec
dec
dec
mov
mov
cwtl
out
rol
sbb
xor
mov
mov
or
aam
cmpsb
push
or
or
js
int3
lock
push
jge
stc
scas
js
and
add
es
ret
cld
andb
rcr
movsb
jbe
cli
pop
icebp
jmp
mov
outsb
mov
pop
add
jp
sti
cmp
or
dec
mov
cmp
mov
xchg
in
out
rcll
iret
or
cs
mov
clc
aaa
xor
mov
lods
divl
adc
lods
inc
push
shll
ds
pop
pop
fwait
rol
shlb
ljmp
cmp
int3
ljmp
sbb
rclb
scas
sub
sbb
call
insb
call
xchg
dec
xlat
and
rcl
imul
mov
aaa
clc
out
movsl
sbb
mov
shlb
pop
cwtl
sub
dec
dec
cmp
sti
inc
jl
and
stos
lock
lcall
push
push
lods
and
inc
xor
aaa
in
inc
test
int
aaa
sbbl
hlt
inc
loop
and
xchg
sub
xchg
je
dec
data16
out
inc
inc
mov
int
mulb
cmp
repz
in
pop
push
dec
dec
and
popf
mov
pushf
les
icebp
push
jecxz
fwait
jno
gs
mov
stc
push
inc
jns
lock
sbb
andl
xchg
mov
sbb
push
adc
repnz
cmp
inc
or
cmp
sub
lea
inc
jns
push
loope
lcall
fnclex
jns
or
sbb
xchg
or
jae
fnstenv
sarb
inc
sbb
push
inc
pop
push
mov
rol
scas
scas
lret
mov
mov
sub
cmp
mov
iret
sbb
pop
sbb
jne
divl
push
sarl
orl
sbb
mov
dec
jnp
aad
sub
pop
pop
push
scas
adc
xor
and
push
dec
and
ss
adc
xchg
dec
push
daa
jl
es
nop
test
pusha
mov
mov
and
sbb
dec
xchg
mov
iret
xor
fsts
inc
dec
mov
pop
push
aad
cmpb
outsb
in
repnz
jae
mov
ret
add
xor
insb
sbb
jg
das
cmp
cmc
sub
pop
lcall
loopne
repnz
or
into
xlat
adc
cmc
jmp
gs
push
jno
fcmovbe
lahf
sbb
dec
xor
arpl
lcall
movsb
movsb
push
sub
mov
or
stos
mov
jo
mov
divl
test
xchg
aam
mov
scas
addr16
adc
cmc
cld
lcall
in
xadd
jl
sbb
push
fstpt
adc
mov
into
cmpsb
popa
mov
jno
push
fwait
dec
lcall
pop
mov
push
gs
in
xor
loopne
jb
cmpsb
cmp
mov
fnstenv
mov
jl
mov
les
andb
xchg
out
dec
outsb
les
dec
ljmp
push
daa
inc
clc
xor
jno
xor
xchg
out
push
mov
pop
insl
add
inc
xor
out
xchg
push
mov
fistps
shrb
cld
gs
incl
inc
loop
in
cmpsl
fstpl
fcompl
add
push
imul
mov
fs
daa
xchg
cwtl
jg
inc
loope
add
pop
sub
sub
dec
shrb
sbb
mov
outsb
sbb
mov
pushf
movsl
setp
sbb
pop
pushl
xor
and
test
push
imul
cltd
sbb
mov
leave
dec
jb
aad
push
adc
mov
mov
mov
push
loopne
jmp
cmpsb
lock
rolb
mov
lcall
mov
pop
adc
lcall
mov
dec
adc
lods
jp
xor
insl
cmpsb
mov
imul
push
je
out
push
xchg
fidivs
push
mov
scas
and
mov
mov
lret
pop
and
sub
out
cltd
in
out
icebp
adc
sbb
sahf
adc
xchg
sub
xchg
dec
push
outsl
popl
dec
xor
rcl
ret
iret
push
add
les
push
out
mov
jo
add
adc
pop
or
fstps
cltd
shrb
imul
cmp
fs
sub
xor
mov
push
out
out
je
fnsave
cmp
lods
in
pushf
push
nop
daa
inc
or
leave
sbb
outsb
sbb
mov
mov
pop
add
push
ja
cltd
pop
cmpsl
out
shll
out
fs
xchg
daa
xchg
mov
ret
xor
adc
scas
xchg
fbstp
fldt
mov
lcall
je
cmp
push
into
cmp
sub
cmpsl
cmpsb
and
jmp
es
sti
and
push
mov
sahf
out
pop
repnz
dec
jns
jl
adc
jb
xchg
add
bound
and
jns
xor
mov
add
add
daa
cmpsl
ss
fmul
and
fyl2xp1
notb
int
or
jmp
notl
dec
cltd
shlb
repz
cmp
sahf
arpl
fimull
sub
iret
xchg
and
push
mov
push
stos
call
imul
or
popf
pop
pop
clc
nop
mov
dec
loop
shr
xchg
push
fdivrs
and
enter
cmp
int
fildl
and
sbbl
scas
mov
jns
fcmovnu
pop
or
add
xor
adcl
loope
push
andl
cltd
hlt
dec
adc
xlat
push
xor
jnp
sub
test
sbb
imul
cmp
repz
movl
dec
mov
or
adcb
mov
lahf
jo
sub
jb
mov
sbb
jp
xchg
pop
mov
pop
icebp
lea
inc
fiaddl
cltd
out
mov
ret
and
mulb
les
fists
pop
ficompl
pop
mov
mov
jl
inc
inc
pushl
mov
add
adc
xchg
xchg
sub
jae
cmp
sti
stos
or
sbb
push
mov
dec
lods
cmc
push
pop
decl
lods
test
fidivrs
pop
leave
pushf
repz
mul
or
or
ret
pushl
stos
push
jne
dec
jecxz
fsubrl
inc
push
push
loope
in
enter
lds
das
jmp
xchg
dec
pop
int3
xchg
lds
or
push
cld
push
or
dec
int3
sub
cld
push
nop
mov
push
cltd
xchg
clc
icebp
sbb
lret
add
aaa
shll
inc
push
cmp
popa
mov
fcmovnbe
mov
mov
cmp
or
jge
push
mov
test
adc
cmp
dec
mov
cmpsb
nop
pop
xlat
shrl
mov
add
xchg
push
cltd
test
cmp
push
dec
push
test
dec
int3
and
mov
mov
xchg
mov
pop
aaa
inc
scas
sbb
push
or
stos
cmp
add
mov
xor
xchg
pop
mov
mov
pushf
inc
addl
test
add
jg
sbb
stos
imul
call
mov
ljmp
mov
cmc
aaa
addr16
data16
negb
test
nop
mov
loopne
pop
ss
add
jecxz
subb
lds
mul
movsl
andb
sub
ss
fists
mov
jmp
lods
jp
and
dec
push
outsl
mov
jl
dec
mov
nop
rcrb
xchg
cmp
push
cmp
fnstenv
shl
push
mov
and
jb
jge
pop
mov
dec
xor
shrl
cs
scas
cmp
call
dec
sbb
xchg
xor
push
mov
sti
out
hlt
mov
dec
dec
push
in
das
iret
and
ja
add
stc
xchg
imul
cwtl
cmpl
mov
fcoms
test
sbb
jl
mov
or
dec
sar
adcb
pop
hlt
xor
jne
inc
mov
icebp
gs
jg
es
dec
and
cmp
mov
ljmp
sub
push
aas
sbb
icebp
adc
or
mov
push
cmp
int
jle,pt
pop
xchg
ja
sub
xchg
cld
pop
cmp
repnz
pop
inc
cs
sub
clc
shlb
das
xlat
repz
sbb
outsl
pop
jge
imul
mov
rorl
sahf
mov
stc
sub
outsb
xor
sbb
test
xor
xchg
xchg
outsl
into
fsubrl
sbb
cmp
sahf
lds
lahf
subl
and
sbb
xlat
lahf
mov
mov
nopl
test
lods
aaa
dec
cmc
mov
mov
add
inc
sbb
push
jl
add
mov
fsubrs
rcrl
jg
jg
les
inc
dec
adc
movsl
lods
inc
mov
xor
inc
cmp
sbb
loopne
fists
mov
push
les
sub
cli
dec
flds
push
dec
in
adcl
fsts
cmp
ret
repnz
test
lods
in
and
test
inc
movsl
pop
mov
or
mov
mov
push
dec
fcoml
orb
inc
in
sahf
fld1
or
mov
cmp
pop
icebp
movsl
cmp
pop
out
push
push
out
inc
jl
dec
mov
ljmp
push
mov
inc
pop
push
mov
sbb
xchg
insb
out
xchg
data16
std
push
mov
fidivs
int3
cmc
gs
out
sub
ljmp
mov
pop
cmpl
shrl
lret
pop
fwait
cld
addr16
xor
sub
push
cli
adc
add
push
in
cmp
lea
pop
pop
jae
jmp
fimull
lods
ljmp
pop
mov
arpl
mov
nop
fwait
arpl
pop
pop
inc
add
xchg
sub
mov
mov
pop
adc
bound
aad
pushf
pop
xor
cs
adc
aas
lcall
gs
pop
push
xchg
mov
ss
jno
sahf
lods
stos
xchg
loopne
les
add
lods
push
dec
xchg
divb
lret
dec
pop
in
das
sbb
outsb
jo
xchg
imul
icebp
xchg
sbb
in
sub
or
inc
xor
out
repz
repz
push
sbb
mov
mov
or
jge
aad
movb
lock
sbb
lcall
inc
in
jb
jno
mov
xor
test
push
lret
hlt
lea
jae
in
hlt
outsb
jbe
xchg
jmp
lret
mov
lahf
stos
jae
mov
js
pop
and
sti
popa
mov
inc
pop
les
push
not
push
lret
cli
push
pop
xorb
shlb
jle
call
push
mov
xor
pop
insb
push
cmp
fistpl
lods
inc
jbe,pt
pop
xor
dec
pop
push
jbe
ja
xchg
push
xchg
data16
mov
pop
inc
cmp
or
lahf
jg
inc
inc
jecxz
fbstp
pop
mov
imul
dec
mov
out
in
mov
and
add
jbe
cld
addr16
or
int3
movsb
xchg
inc
xlat
sbbl
int
mov
dec
mov
outsl
fnstenv
push
enter
mov
mov
xor
loop
cmpsl
jecxz
sti
push
pushf
enter
pop
fnstenv
fisubrl
ficompl
xor
push
mov
out
shll
lahf
mov
repnz
sahf
and
insb
cld
lods
xchg
cmp
mov
mov
sti
xchg
inc
shlb
out
clc
fistpl
xor
sub
rol
mov
push
scas
std
cmp
pop
add
inc
sub
mov
lret
add
mov
cld
jb
fildll
jl
daa
jae
mov
shlb
popa
xor
in
mov
test
mov
mov
add
lods
xchg
test
mov
cmp
stos
adc
mov
dec
pushf
movsl
mov
sbb
iret
sub
and
int3
push
mov
jle
and
cmpsl
push
sub
cs
pop
jns
insb
pusha
lcall
mov
lods
and
pusha
or
sbb
ret
pop
lods
sub
pop
into
shr
das
push
sbb
data16
mov
jmp
out
loopne
xchg
lret
jge
fldcw
int3
xor
lods
inc
lcall
outsb
test
imul
pop
and
sti
std
ret
sbb
insl
dec
jnp
push
push
jmp
mov
mov
xor
cmpsl
daa
adc
roll
and
scas
fistpll
xor
sbb
pop
movsb
mov
mov
fs
clc
adc
aaa
jg
addr16
xchg
mov
xor
or
push
outsb
push
cmp
mov
test
and
ds
add
movsl
xor
push
mov
add
sub
jl
jbe
sarb
jle
es
out
insl
mov
pop
les
mov
fcomip
jg
gs
mov
cmp
sbb
sbb
cmp
lahf
cmp
out
shll
jbe
dec
pushf
cmp
add
push
aas
or
jbe
in
jle
mov
fs
mov
dec
mov
repz
or
xchg
sub
pop
das
push
mov
dec
pop
mov
push
ficomps
mov
outsl
jns
jge
rcl
jns
mov
dec
mov
out
mov
insb
rorb
add
inc
add
mov
data16
and
cmpsl
shrl
pop
jmp
add
xchg
in
push
sbbl
nop
loop,pt
daa
out
pop
xor
gs
sub
subl
inc
jne
daa
xor
ds
push
shl
popf
test
inc
loopne
adc
mov
add
movsl
pusha
mov
hlt
ret
jnp
mov
add
mull
popf
lock
jmp
loop
lahf
lods
ror
mov
rcrl
xchg
cld
inc
cmp
sub
adc
fcomip
sub
xor
fnstsw
push
adc
andl
icebp
sbb
cmp
aam
inc
jo
inc
loopne
hlt
pop
ss
push
mov
sbb
roll
dec
pop
lock
mov
outsb
js
fnstenv
lahf
mov
bound
sub
sbb
dec
xor
sub
pop
aaa
push
jne
jae
lret
and
jo
call
mov
push
inc
xchg
in
jne
fdivrs
or
lods
add
test
jmp
fnstsw
leave
test
mov
jo
jl
mov
xchg
sub
js
out
sub
add
inc
insb
xrelease
xlat
xchg
out
inc
mov
mov
push
int3
jae
inc
and
lret
out
dec
mov
in
add
xor
xor
mov
lods
bound
pop
fidivrs
cmc
test
mov
add
daa
mov
mov
push
aad
mov
xchg
fldl
lds
jbe
jp
xchg
scas
lcall
or
jmp
leave
mov
into
xchg
add
loopne
push
insl
iret
stos
shrl
addr16
inc
jecxz
pop
cmp
jle
out
inc
lock
lcall
xchg
xchg
lods
in
add
xor
or
sub
mov
sbb
mov
int3
cwtl
mov
cli
adc
inc
in
mov
mov
outsb
cmpsl
out
fcoml
mov
bndstx
rcl
ret
mov
xchg
das
in
pop
popf
sbb
mov
jae
sti
add
xlat
out
ret
push
lods
xor
mov
push
or
mov
add
jg
or
fs
mov
inc
mov
fadd
push
pop
mov
rcll
add
pop
addl
lds
movsb
rcl
or
in
cltd
outsl
mov
in
jl
sbb
xchg
ret
sub
adc
pop
jns
dec
addb
jno
push
add
arpl
xor
popa
mov
dec
aaa
push
shr
sbb
mov
pusha
jmp
and
inc
add
mov
insb
inc
xchg
out
mov
push
mov
xor
add
lea
mov
js
in
and
jb
cmp
sub
scas
push
mov
cmp
add
and
pusha
sub
mov
inc
dec
push
dec
dec
jbe
ss
cmp
adc
popw
mov
out
out
push
add
jp
inc
aaa
stos
xor
frstor
in
pop
in
jp
add
inc
pop
add
popf
leave
js
pop
test
testl
adc
into
pop
ljmp
clc
jge
sub
sbb
inc
inc
jbe
rolb
int3
arpl
cli
outsl
ret
mov
rcrb
insb
fists
cmp
adc
fwait
sbbb
and
adc
push
stos
mov
add
mov
xchg
fcoml
lods
add
aam
mov
dec
andl
mov
sub
cli
das
imul
adc
and
jo
inc
xlat
loope
stos
lret
pop
outsb
mov
mov
outsl
xorb
mov
push
mov
aaa
pop
cmp
imul
imul
xor
or
mov
adc
in
cs
orb
daa
imul
in
cmp
cmp
xchg
push
sbbb
das
xchg
mul
mov
stos
rorl
push
incl
out
inc
shl
mov
fists
int
in
mov
mov
rol
hlt
in
popa
mul
icebp
clc
orl
push
pop
pop
mov
scas
imul
bound
jecxz
shl
or
fistl
pop
out
cmc
push
jbe
mov
ja
dec
stos
mov
pushf
outsl
movsb
ds
mov
jae
sbb
xor
add
out
xchg
jl
adc
add
jmp
ja
jnp
fstp
push
mov
test
in
jle
dec
xchg
aas
ja
daa
cmp
push
in
xor
adc
in
mov
loopne
pop
mov
imul
cmp
xor
adc
inc
ja
jp
or
rcll
cmp
aaa
adc
mov
mov
inc
into
mov
cmp
ljmp
or
push
in
in
mov
dec
fisubrl
insb
adc
sti
inc
lea
cld
lock
stos
jmp
or
cmp
adc
xor
adc
mov
cmc
mov
std
dec
and
mov
xchg
pusha
clc
pop
xor
jg
repnz
mov
fstp
mov
or
out
pop
pop
adc
jg
cmp
lods
inc
push
fdivrs
int
lret
pop
cmp
pop
cmc
aam
fsubrl
push
mov
ret
out
push
and
pushf
cmovnp
xor
ffreep
pop
adc
jae
jbe
or
mov
xor
push
mov
cld
pop
out
cmp
mov
mov
cmp
fldl
add
dec
xchg
mov
sbb
lods
pop
imul
pop
test
iret
nop
stos
in
fnsave
or
or
cs
inc
jp
mov
stos
mov
add
inc
sbb
dec
insb
fistpl
add
inc
mov
mov
jle
jge
pop
scas
leave
dec
push
hlt
aas
int
pop
lods
xorb
inc
popf
int
and
aaa
popa
fsubl
jg
jmp
ljmp
push
repz
cmc
xor
xchg
outsl
push
dec
pop
adc
mov
addr16
push
xchg
mov
movsb
es
jbe
cmp
push
mov
lcall
sbb
and
or
jo
xchg
scas
inc
lock
dec
test
repnz
pop
or
dec
out
dec
xchg
fdivl
sub
imul
lret
jg
and
or
loop
loopne
pop
add
pop
insb
ds
data16
mov
movl
vandnps
hlt
mov
sub
sbb
sub
rcr
jno
xor
jp
call
jno
data16
xchg
popa
inc
das
scas
and
dec
loopne
ja
jecxz
pop
xchg
das
pop
nop
jb
out
jecxz
fcomps
leave
in
test
xor
lahf
mov
xor
aam
adc
stos
xchg
das
fucomp
lcall
stos
and
jp
xchg
mov
push
movsl
cmp
movsl
mov
adc
sub
xchg
cmp
loop
push
push
lods
inc
ss
scas
add
movl
jg
sbb
subb
movsl
shl
outsl
sbb
in
mov
add
daa
cmpsb
dec
push
shl
sub
mov
jbe
sub
scas
enter
and
pop
ret
in
pop
es
xor
gs
sub
add
pop
repz
inc
jg
decl
mov
fisubs
adc
rorl
iret
fdivl
js
push
cmc
mov
sbb
mov
sub
shll
pop
into
or
jns
push
fsubr
cmpsl
mov
rcrb
aaa
dec
in
cmpl
enter
mov
je
ja
mov
and
lcall
jbe
adc
lods
aaa
sbb
mov
lahf
jno
fidivs
jno
cli
stos
mov
mov
in
mov
xchg
mov
imul
test
cwtl
fnstsw
test
roll
sbb
or
testl
sarl
aaa
adc
popa
jg
xchg
ss
ljmp
xchg
mov
jno
insb
les
jp
jg
pop
fwait
test
in
mov
test
mov
adc
into
jge
loope
jnp
push
js
dec
iret
data16
jecxz
jbe
in
test
cwtl
mov
test
xor
or
and
insl
push
push
daa
outsl
sti
jne
jp
xchg
jns
std
and
cmp
mov
xchg
sbb
call
aad
pop
sub
dec
mov
add
or
cmc
stc
nop
mov
lock
loope
out
xchg
lahf
add
sbb
push
stos
mov
jnp
or
adc
outsl
mov
ret
mov
sbbb
or
and
fbld
and
mov
pushl
push
icebp
inc
lahf
adc
lds
jecxz
xchg
dec
mov
ja
in
lret
decb
and
adc
pop
add
cltd
scas
dec
sbb
dec
xchg
fisubrs
scas
iret
test
popf
repnz
fidivrl
pop
push
enter
je
jnp
add
mov
popf
lea
mov
or
jmp
dec
push
js
mov
push
shl
jbe
addl
imul
pop
jo
std
out
cs
mov
fadds
jg
push
ret
fimuls
sbb
and
lret
inc
dec
jmp
sbb
mov
cs
testl
xchg
dec
out
dec
mov
sarl
shrl
nop
jecxz
dec
xor
add
inc
push
mov
dec
pop
lods
imul
push
mov
shlb
xchg
mov
cmpsl
pop
cmovne
fidivrl
aam
pop
mov
push
out
mov
and
inc
inc
mov
add
out
hlt
mov
scas
call
cmp
adc
sub
cmpsl
ficoml
cmp
jecxz
xor
pop
fs
fsubrl
jge,pt
int
mov
loopne
int
pop
add
imul
jg
pop
icebp
cmc
mov
jnp
adc
lret
cmp
cld
inc
fdivrs
je
sub
aas
pop
call
jno
xor
dec
sbb
xor
movsl
in
orl
jno
push
or
mov
fistl
xchg
incl
and
in
jae
jg
sub
rorl
pop
arpl
mov
push
or
stos
cmpsl
ret
fmull
mov
sbb
out
data16
arpl
xchg
add
aad
and
or
bswap
xchg
sub
je
hlt
icebp
and
xor
std
mov
ja
xchg
fwait
sbb
ljmp
dec
jp
ret
xchg
sub
popf
insl
push
inc
push
xchg
mov
lods
mov
fbstp
inc
jl
loope
test
fisttps
out
inc
inc
imul
aaa
mov
popf
insb
or
sbb
push
fdivr
out
pop
loop
insb
scas
call
jb
jecxz
mov
jbe
adc
shll
pop
insb
and
add
mov
jae
rcl
mov
jle
pushf
inc
mov
pop
lahf
sbb
pop
push
inc
adc
lcall
mulb
data16
mov
cmp
ret
pop
push
jmp
xor
ret
jmp
jb
push
xor
cmp
xor
adcl
sti
push
sahf
mov
and
stc
cmpsl
and
ss
mulb
add
lods
adcb
mov
mov
or
lcall
lret
das
jmp
lds
js
out
add
pop
adc
xchg
outsl
push
stc
pop
xchg
mov
adcb
mov
sahf
push
mov
cmp
rcrl
adcl
int3
pushf
jg
aam
in
loop
jae
mov
lock
push
mov
fimull
sub
pop
jg
ret
dec
in
into
adc
pop
out
jae
sub
pop
fcomip
dec
xchg
xor
fiadds
jecxz
call
movsl
fwait
cmp
xchg
movsb
add
cmpsb
mov
ds
js
xchg
rcll
out
and
fisttpll
in
ret
je
inc
cltd
mov
jns
pop
pop
sbb
popa
push
sub
ss
cmp
xchg
sbbb
push
fdivrp
adc
or
scas
sub
divps
dec
dec
clc
xchg
jns
in
in
out
jnp
push
and
mov
pusha
mov
and
mov
fst
int3
and
out
mov
lahf
stos
cmp
jg
cmp
jl
sti
sti
jbe
popa
add
dec
fsubrs
rorb
pop
aaa
mov
mov
jge
dec
out
push
les
add
mov
es
insl
pop
aad
sub
clc
test
out
cmpsl
xor
push
sub
ret
push
add
sub
loope
lcall
push
jmp
lods
mov
stos
jmp
mov
xchg
sbb
mov
pop
or
aas
mov
xchg
arpl
enter
dec
popf
mov
iret
imul
imul
mull
lret
mov
pop
jmp
fbld
dec
xor
repz
push
xchg
inc
add
divl
sub
lahf
jae
sub
dec
test
fisttps
push
aam
push
fs
and
dec
stos
cmpsl
call
cltd
cmpb
mov
mov
lods
imul
jno
scas
imul
mov
sbb
dec
mov
xchg
insb
shrl
xor
dec
mov
test
arpl
cmpsb
std
mov
ljmp
pushf
shlb
insl
add
fs
mov
popa
cld
adc
loopne
mov
cli
adc
add
xchg
xor
and
movsl
jno
dec
insb
add
mov
push
icebp
movsl
jle
add
shr
cmp
gs
mov
cwtl
pusha
shlb
add
sbb
jne
popa
rolb
xchg
cmp
movsb
scas
int3
ficompl
xor
inc
test
imul
pop
adc
pop
rorl
je
lahf
movsl
xchg
je
adc
jo
lods
je
cmp
imul
xor
mov
push
cmp
pop
xchg
icebp
cmp
cmp
clc
add
sbb
mov
es
pushl
pop
out
pop
jns
stc
lea
loope
scas
xchg
inc
pop
inc
call
jp
mov
jle
push
add
add
mov
es
aad
aad
xor
add
leave
imulb
test
push
sub
ja
adc
jl
addl
xchg
fmuls
and
push
popa
icebp
insl
cmpsl
ja
push
xorl
pushf
sbb
add
fidivrl
pop
rclb
pop
dec
mov
popa
adc
es
ljmp
pop
mull
pop
cmp
push
dec
inc
adc
int
jae
imul
push
ds
or
cmc
cmp
bound
clc
dec
test
fsubrs
cmp
rclb
push
in
mov
jmp
mov
or
jl
xlat
nop
rclb
cmpsb
rclb
mov
dec
or
push
aam
in
mov
addl
mov
dec
and
cmpsb
aam
aam
imul
cmp
dec
loopne
sbb
mov
and
data16
pushf
rep
mov
xor
ja
push
sti
ret
xor
iret
or
or
dec
cltd
outsl
add
xor
jo
lods
mov
iret
popf
stos
daa
arpl
popa
jae
add
or
out
add
adc
xchg
aas
cmp
push
out
mov
les
imulb
mov
fidivrl
outsb
inc
adc
in
mov
fwait
adc
mov
not
mov
imul
dec
xchg
data16
insb
dec
xor
fwait
xchg
pop
testb
push
cmc
dec
push
ljmp
jno
mov
push
mov
push
cld
enter
les
clc
popa
add
bnd
or
xor
add
rclb
xor
por
sbb
sbbl
jg
shll
stos
mov
mov
sbb
mov
cmp
xlat
ret
rcrl
negl
jb
outsl
sti
ret
cmpsb
sti
test
movsl
xor
and
xlat
pushf
mov
and
sbb
add
xor
pop
xchg
cli
lea
lahf
or
test
int
mov
hlt
popa
add
jns
push
adc
mov
cli
inc
jmp
adc
test
mov
outsb
jbe
dec
fs
test
test
out
out
sub
sub
mov
scas
fmuls
stos
and
mov
leave
xor
pop
nop
ficoml
pusha
dec
call
test
outsl
jmp
fwait
mov
pop
arpl
adcl
loopne
push
adc
or
mov
in
sar
pop
fildl
or
js
sbb
and
xor
sub
rclb
lea
sub
sbb
ds
loopne
cmpsb
and
insl
inc
out
pushf
dec
imul
sub
sbb
data16
mov
cmp
hlt
cmpl
fidivs
movsb
mov
dec
lahf
ss
stos
sub
xor
and
lods
aaa
addr16
clc
push
sub
ret
in
sub
in
pop
jae
mov
mov
adc
pop
mov
jmp
xchg
cmp
pop
cwtl
call
cmp
cli
lret
stc
lret
sti
sbb
popa
ss
add
loope
sbb
cmpsb
dec
mov
stos
loop
push
into
push
dec
loop
push
jo
test
pop
out
dec
lea
in
jmp
jnp
jle
es
jne
mov
js
mov
pop
cwtl
mov
jg
adc
fs
mov
std
mov
shlb
add
xchg
aad
xlat
push
stos
xchg
add
dec
lds
fiaddl
negl
test
cmp
jae
pop
pushf
mov
dec
cmc
or
aad
mov
sbbl
inc
insl
dec
int
js
dec
push
cmp
or
or
dec
in
fcomps
shlb
addr16
mov
in
js
aad
ja
jp
lcall
mov
out
cmpsl
in
mov
sbb
pop
xchg
xlat
int
pop
paddw
in
sbbl
lods
pop
pop
lret
sti
jnp
mov
add
je
xchg
js
enter
ret
fists
push
mov
lcall
jae
pushf
inc
or
shrb
aad
and
js
mov
div
mov
cmp
es
lahf
and
iret
push
jmp
sbb
scas
xor
sbb
stc
pop
cmp
adc
push
lea
mov
hlt
sbb
pop
or
cli
pop
jmp
into
pop
or
or
lahf
pop
push
je
xorb
rcll
out
test
adc
push
shl
or
xlat
out
stc
mov
or
rcll
pop
insb
push
ror
push
xchg
mov
mov
loop
loope
or
dec
lahf
xchg
inc
pop
and
xchg
xorb
out
subl
dec
push
loop
insl
mov
xor
jg
bound
or
popf
daa
out
rcrl
xchg
jae
cmp
lods
xchg
sbb
test
sbb
stos
dec
add
int3
test
mov
mov
cmc
loopne
into
gs
addl
nop
fcomps
scas
outsl
sub
adc
call
dec
dec
fcmovnu
shl
insb
sub
ljmp
and
push
push
int
lods
sbb
mov
daa
lcall
adc
testb
imul
mov
lock
sub
jno
enter
push
les
jle
into
sbb
test
ds
les
mov
jne
jp
xor
jg
mov
insb
add
jns
shrl
rcrb
gs
fmull
fldenv
jmp
lods
sbb
xchg
mov
rcrb
daa
jp
xor
loop
cmpsl
mov
fimull
test
repnz
popa
fcompl
fwait
lods
jg
jnp
sub
loop
inc
fcmovnu
lods
adc
sub
or
mov
dec
insl
add
jle
mov
lret
and
btc
fs
stos
nop
lret
mov
fisttps
mov
aaa
outsl
xor
mov
mov
fsubrs
out
mov
sbb
pop
jmp
popf
popa
in
ret
and
cmp
lcall
jle
ds
mov
mov
and
xchg
in
push
push
cwtl
dec
test
sub
sbb
icebp
mov
mov
xor
pushf
jecxz
pop
lret
dec
or
push
jae
popa
icebp
enter
idivl
or
loope
movsb
mov
mov
movsl
das
rcll
negl
scas
dec
shlb
fmull
jp
pop
cmp
push
mov
jmp
jecxz
pop
aad
loop
add
xor
inc
iret
xor
cmp
mov
repz
insb
add
clc
test
das
ja
imul
out
mov
mov
movsl
dec
mov
pop
fistps
in
fistl
add
inc
insb
out
mov
lock
and
mov
imul
fldenv
push
cli
jbe
or
mov
clc
cli
sbb
out
xchg
shrl
dec
shrb
sbb
icebp
ret
mov
inc
clc
pop
sub
popa
jg
outsl
push
add
ret
adc
xchg
stos
add
and
mov
xchg
mov
xor
and
pop
inc
test
fldenv
push
jae
add
imulb
sub
jecxz
loop
aam
aaa
pop
imulb
cmp
cmp
pop
test
fdivr
xchg
sbb
xor
call
pop
push
pop
cwtl
ret
scas
clc
loope
mov
lahf
rcll
subb
fdivs
push
lahf
jle
pop
push
lahf
es
sub
imull
inc
inc
mov
ret
fidivl
ss
push
inc
sahf
orl
decb
aam
jno
pop
lret
sbb
adc
mov
xchg
mov
repnz
jnp
mov
gs
ja
mov
add
aas
pop
mov
push
push
ja
inc
dec
jmp
jno
pop
jge
fs
daa
testb
jo
mov
sbb
aad
fmuls
stc
clc
bndstx
and
xchg
les
aas
into
sbbb
mov
xor
pop
mov
or
das
mov
arpl
or
and
lcall
popa
mov
jg
ds
mov
inc
xor
sbb
push
scas
fwait
or
shrl
push
rcl
push
dec
loop
repz
ja,pt
xchg
and
cmpsb
push
adc
xlat
into
sub
outsb
outsb
xchg
sbb
pushf
cmpsl
and
cwtl
cmp
xorl
xlat
outsb
ss
dec
adc
jmp
jbe
sti
cmpsl
dec
xlat
repz
or
inc
push
sub
movsl
ret
sub
adc
daa
jno
pop
icebp
pop
stc
xor
faddl
mulb
sub
daa
dec
in
lock
mov
xor
inc
enter
hlt
in
das
es
mov
dec
into
mov
mov
lahf
mov
rorb
mov
push
add
ja
mov
lret
push
mov
aas
dec
pop
outsl
dec
mov
dec
stos
enter
cltd
push
fisttpll
sar
pop
insb
imul
xor
mov
cmp
mov
ret
inc
sahf
cmpps
loopne
lahf
inc
js
mov
push
push
cmp
adc
ret
mov
test
sbb
or
clc
push
jecxz
fcomps
xchg
mov
mov
jle
xor
pushf
and
mov
jbe
lret
cwtl
loope
push
in
push
cs
jmp
sbb
mov
jecxz
int3
mov
push
out
aam
sub
es
and
int3
pop
inc
inc
rcrb
cs
inc
in
cmp
sbb
xchg
notb
jbe
xchg
xor
leave
fsts
adc
and
in
lret
addl
gs
lahf
shrl
push
jno
push
test
xchg
lock
std
stc
ret
incl
xor
gs
inc
lods
imul
xchg
lret
sbb
inc
cmp
mov
adc
mov
in
mov
push
fwait
aad
sbb
mov
xor
pop
xchg
pop
jp
test
lods
mov
sbb
stc
lcall
gs
loopne
stos
cmovnp
inc
int3
mov
outsl
xor
push
shlb
pop
mulb
mov
pop
sub
sub
pushf
repnz
lahf
sub
mov
jecxz
jno
mov
jecxz
push
jl
aad
ds
loope
xchg
xchg
pop
dec
cmpsl
push
push
sahf
call
sbbb
stos
cmp
mov
test
scas
pop
sahf
mov
sub
and
or
cmp
xchg
stos
pop
call
and
mov
sbb
ja
movl
jl
cmp
fwait
test
jb
jne
popa
das
repnz
inc
fcomps
or
lods
or
pusha
or
cwtl
add
cltd
cmpsl
sub
fistpll
xor
sbb
xor
mov
cli
inc
loop
cwtl
inc
pop
inc
xor
and
dec
faddl
stc
nop
xlat
mov
pop
into
push
fwait
add
inc
mov
addr16
push
adc
xor
mov
fistps
andl
xor
shlb
nop
loope
dec
jb
dec
push
mov
cmp
xlat
loop
xchg
in
es
xor
jb
xor
cmpsb
xchg
movsb
mov
pop
dec
pop
cmp
loope
shll
jbe
test
pop
or
jecxz
xchg
cltd
xor
mov
je
sub
ror
jl
fnsave
jp
push
sub
pop
loope
mov
ret
mov
rcl
pop
test
push
mov
and
lret
jecxz
add
push
cmc
popa
and
push
push
lret
aaa
test
sub
cmp
lods
lock
xchg
mov
adc
cmp
jp
fwait
cli
jecxz
sbb
sub
ficoms
cmc
mov
leave
das
adc
sub
xor
pop
mov
and
lods
cli
mov
loop
pop
es
cmpsb
sub
hlt
sbb
cld
loope
push
push
dec
lds
cmpsb
cltd
insl
int
or
movsb
out
enter
int
lods
jg
inc
decb
sbb
clc
xchg
aad
inc
xchg
sarb
mov
sbb
fsubrp
adc
repz
xor
mov
int
decb
test
inc
test
cwtl
mov
enter
fstl
shr
mov
iret
mov
pop
loop
jmp
in
cmp
in
imul
lods
pop
cmc
xlat
jg
push
popf
addr16
stc
bound
inc
xchg
jns
lret
in
test
lods
mov
mov
lods
sbb
or
cltd
mov
push
xor
notl
mov
mov
mov
loop
hlt
cmp
xor
pop
or
in
pop
fwait
and
das
les
mov
ss
xor
insb
xchg
sarb
fldt
js
ljmp
addr16
pushf
ret
imul
cmc
pushf
and
or
inc
push
jae
pop
jl
leave
lods
jecxz
in
add
sahf
inc
add
rcll
sahf
mov
out
fimull
decb
sbb
push
je
lock
mov
cli
xchg
jnp
add
mov
adc
lods
mov
fidivl
out
cmp
popf
movsl
mov
mov
mov
outsl
inc
or
or
insl
notb
loope
jns
fst
pop
sub
jmp
lcall
fwait
scas
dec
nopl
ss
adc
or
mov
les
clc
mov
pop
testb
fbld
sbbb
jmp
cmp
aam
cmp
popf
xor
inc
xor
or
popf
adc
and
cmp
ja
push
in
sub
and
xchg
cmp
or
ret
fstpl
xor
push
xor
push
push
or
js
std
fidivl
xchg
rcrl
movsl
scas
mov
ss
gs
or
popa
sub
loope
inc
loopne
aas
add
call
testl
fcomi
jo
es
fcomps
mov
inc
bound
sbb
or
stc
in
dec
data16
mov
push
dec
mov
or
cmp
sub
sahf
scas
mov
fdivl
icebp
mov
lahf
mov
in
nop
mov
xchg
pop
jbe
fdivs
rclb
iret
imull
int
xchg
dec
cmpsl
add
pusha
push
or
not
sub
dec
adc
negb
lock
cld
inc
mov
fadd
and
jno
imul
adcl
xchg
ja
lds
loope
sbbb
cmp
dec
daa
movsb
jbe
cli
cltd
cwtl
lcall
sti
mov
stos
cli
push
aam
fisubs
ja
jmp
jns
jo
iret
mov
mov
or
add
xchg
lahf
jmp
pop
pop
addl
je
jecxz
rcll
push
pop
add
pop
xor
xchg
pop
jo
xchg
push
inc
pop
jns
frstor
fsubr
xchg
cs
inc
mov
mov
out
inc
stos
fmul
mov
loopne
dec
or
and
cmp
sbb
in
jle
scas
and
and
int
xchg
fists
mov
or
mov
push
lods
pop
mov
jo
mov
testb
dec
pop
inc
mov
push
loop
repz
xchg
es
pop
dec
mov
popf
loop
ja
adc
cmp
data16
sub
mov
jl
jb
cmpsb
in
push
cmpsb
stc
adc
jbe
xchg
inc
pop
aaa
stc
inc
sub
pop
rcl
adc
xor
xchg
or
xchg
iret
sub
movsb
inc
fs
mov
or
inc
inc
popa
xchg
stos
iret
fsubrl
push
fdiv
mov
pop
mov
inc
divl
arpl
mov
sub
addr16
and
mov
cmp
push
jnp
mov
jle
popa
push
imul
mov
test
inc
pop
push
out
cld
inc
jge
push
divb
jb
rorb
loopne
pop
sbbl
add
shlb
xor
lock
fcomps
outsb
jl
mov
inc
push
sub
cld
lret
bound
stc
leave
xchg
jl
ss
test
and
in
jecxz
fbld
xchg
mov
add
push
test
push
ss
mov
push
movd
and
loop
sbb
jae
test
pop
cli
fstps
mov
clc
pop
aad
lods
pop
ret
adc
inc
xchg
outsl
stc
je
or
xchg
sbb
data16
test
xchg
sub
adc
jns
test
lods
inc
sbbl
push
imul
cmp
addr16
xchg
sub
pop
movsb
popf
stc
mov
hlt
addr16
lea
mov
in
jno
std
mov
sub
push
andl
mov
jae
out
sub
fs
lcall
sbb
sub
mov
and
sub
xchg
aad
stos
pop
jl
mov
jo
repnz
xor
xchg
int
mov
mov
xchg
pop
ja
cmpsl
enter
bswap
cmp
sub
dec
js
jnp
aad
or
sti
push
jo
es
mov
jle
pop
jnp
sbb
imul
mov
fists
pop
sahf
icebp
jae
aas
pop
out
mov
mov
xor
push
movsl
mov
icebp
movsl
pushf
shll
sarb
loope
inc
pop
push
push
in
push
insb
shll
push
cmp
sbb
sub
or
dec
lret
lcall
jnp,pn
pusha
enter
pop
movsl
jle
adc
ret
int3
lret
mov
sbb
flds
add
loopne
xor
test
pop
mov
dec
inc
inc
push
xlat
sub
fistpll
mov
cmp
add
je
inc
xchg
out
lahf
fimuls
dec
inc
fldz
push
mov
ss
idivl
fiaddl
cmpsb
lock
xchg
lcall
addl
push
ljmp
lods
inc
aaa
cmp
adc
dec
arpl
sub
repnz
aas
clc
gs
jg
in
call
adc
add
cmp
pop
sbb
lret
cmpsl
jne
xchg
add
pop
xor
xchg
loop
and
mov
push
pop
mov
xchg
add
cmpsb
mov
jle
xchg
aas
add
and
lret
mov
pop
cmpsb
popf
push
popf
adc
push
imul
movsl
push
sub
insb
add
dec
pop
mov
shll
adc
add
mov
inc
fstpl
ss
xchg
adc
dec
xchg
xchg
test
imul
cmp
or
add
mov
fprem
nop
mov
inc
scas
pop
aam
adc
jle
popa
pusha
jg
xor
pop
and
jge
mov
cmpsb
out
add
mov
loopne
movsb
aam
push
mov
fcompl
inc
psubsw
in
cmp
mov
inc
or
jge
ds
shlb
add
ret
and
cli
leave
pop
nop
sub
push
stc
and
inc
lea
int
xor
aaa
into
lods
shlb
mov
mov
mov
cmp
cltd
sti
mov
mov
inc
fs
cmp
rcll
movsl
xor
xor
xchg
xor
cli
dec
out
int3
std
cmp
push
mov
mov
mov
mov
mov
aas
loope
mov
es
stc
push
test
lret
lret
test
push
inc
xor
push
mov
jo
mov
testb
dec
repz
test
ds
dec
das
insl
out
cmp
imul
jnp
jp
mov
fnsave
and
adc
lods
fcoml
dec
in
add
jne
jno
lods
mov
xor
dec
pusha
loopne
les
add
xchg
xchg
das
leave
xchg
xor
mov
or
shr
and
cli
fidivrs
push
pop
in
iret
cmp
notl
fidivrl
sub
mov
faddl
mov
cmp
cmp
sub
cmp
cmpsb
lock
lahf
inc
fxtract
cli
lret
lret
ficoms
pop
arpl
fwait
jle
lock
and
adc
jle
dec
sbbb
pop
dec
xchg
or
sub
in
pop
mov
ss
fsubr
and
lock
mov
xchg
fwait
xor
push
sbb
cmpsb
insl
inc
pusha
lahf
jo
stc
inc
outsb
loope
xchg
mov
mov
fisttpl
fstl
ds
adc
xchg
imul
adc
or
sbb
jns
add
xlat
insl
popa
cmpsb
adc
pop
xor
scas
arpl
and
or
fnstcw
mov
adc
int3
xchg
lret
adc
scas
shlb
ss
xor
scas
dec
repz
and
mov
dec
in
jbe
mov
out
into
loope
inc
ds
in
jmp
sbb
adc
push
lock
ffreep
nop
push
mov
imull
insb
mov
sahf
add
mov
lea
ja
cmp
inc
in
add
data16
push
cmp
cmp
ja
cwtl
and
xchg
pop
xchg
mov
mov
out
or
std
jge
cmpsl
or
add
arpl
mov
inc
data16
test
jecxz
out
mov
aad
enter
mov
adc
mov
out
jg
and
jns
add
push
dec
lods
xchg
das
add
repnz
or
lcall
adc
xor
shlb
inc
fimuls
mov
cmp
mov
jmp
lea
fnsave
jb
add
test
loope
push
loopne
fst
push
xchg
xchg
mov
pop
pop
fwait
mov
cmpsl
inc
mov
pop
cmovnp
sbb
and
sub
aaa
enter
pop
jae
mov
or
stc
lds
pop
negl
push
int3
outsb
mov
sahf
or
adc
pop
or
js
mov
fldenv
aaa
decl
pop
sbb
jg
push
js,pn
clc
fmull
cli
push
in
adc
repz
das
or
jp
add
bound
xor
sahf
arpl
sbb
rclb
shlb
inc
add
pop
test
jbe
lods
test
sub
test
aas
mov
lahf
sti
lret
lock
mov
push
out
jl
and
mov
bound
adc
popl
notl
and
mov
inc
dec
push
cmpsb
jge
loope
mov
sub
ret
add
stos
jmp
and
mov
push
clc
stos
mov
xchg
aam
out
mov
xchg
mov
into
mov
dec
in
cmpl
and
dec
dec
jae
rcrb
xchg
and
loopne
push
pushf
scas
loop
flds
in
orl
test
ficoml
or
or
in
dec
sub
pop
mov
and
cmp
ds
test
movsb
xchg
cld
lods
pop
clc
mov
sub
xor
out
not
ret
sbb
jecxz
inc
stos
mov
nop
arpl
icebp
adc
cmpsb
push
dec
in
enter
xchg
sub
push
jp
ljmp
std
lods
and
das
pop
jae
push
imulw
push
add
sbb
cld
push
arpl
xchg
push
in
inc
fstpl
fwait
xor
in
cmpsb
popa
jne
dec
pop
cwtd
jmp
sti
add
xor
pop
cwtl
jo
test
mov
daa
and
adc
in
pushf
lahf
xchg
jae
test
fcmovbe
push
jg
xor
les
and
push
pop
test
std
mov
jmp
sub
fsts
cmpl
mov
sub
pushf
movsb
xor
jmp
jge
sub
out
jb
in
daa
add
xchg
dec
jecxz
pop
repnz
cltd
pop
pop
pusha
xchg
add
xlat
cmp
sbb
in
xor
lret
loope
xchg
adc
dec
mov
dec
add
test
sbb
push
call
sahf
jle
cmp
and
js
fisttpl
sbb
jp
fxch
lods
and
sub
shrl
std
out
cmpsb
xor
cmp
jle
mov
xchg
cmc
mov
lods
xchg
lret
cwtl
cmp
cltd
call
mov
sbb
add
out
add
add
lods
mov
xor
jecxz
xchg
adc
fyl2x
inc
cltd
dec
inc
cwtl
fstps
push
iret
xchg
inc
adc
cli
cs
xchg
jno
fimull
mov
aaa
push
insb
add
jae
cmpsb
mov
dec
sub
es
nop
sub
jp
inc
mov
scas
inc
and
int
popf
push
mov
in
daa
push
aam
xor
mov
add
push
adc
sti
mov
movsb
push
int
rcrb
xchg
ja
leave
movsb
in
sbb
in
jmp
adcl
shlb
out
sti
inc
xor
xor
pop
stos
mov
je
stc
adc
mov
push
ret
jbe
or
sub
dec
push
pop
inc
lea
push
add
adc
das
pushl
xor
imul
or
xchg
inc
leave
mov
jl
stos
ljmp
insb
sub
or
jnp
adcl
lock
nop
ss
adc
inc
cmpsb
aaa
rclb
mov
mov
push
inc
pop
fnstsw
push
xchg
sub
xchg
out
adc
mov
xchg
and
cwtl
shll
sbb
xor
lahf
sub
loop
stos
ljmp
push
addr16
cwtl
das
or
pop
mov
movsl
add
jge
pop
mov
aas
imul
out
push
popa
das
ja
js
push
lcall
pusha
outsl
int
insl
lods
pop
xor
mov
into
xor
pop
into
rorb
add
jecxz
jmp
push
and
mov
adc
hlt
cmc
pop
and
mov
xchg
scas
lret
test
test
adc
lret
cs
pop
dec
repnz
ljmp
pop
sahf
icebp
push
xchg
adc
into
addr16
adc
pop
pop
push
xor
inc
lds
sbb
jns
sbb
cmp
dec
cmp
lds
or
sar
out
jns
jnp
stos
nop
leave
jns
jge
cmpsl
push
jne
out
adc
jg
nop
roll
shr
insb
add
xchg
into
addl
lods
cmp
clc
adc
and
sbb
aaa
mov
add
jnp
push
stos
pop
pop
sub
add
fcoml
pop
popf
movsl
pop
stos
cmp
and
popf
adc
repnz
dec
and
xor
mov
adc
adc
aaa
data16
insb
xor
or
sub
insl
cwtl
loope
push
hlt
movsl
mov
gs
popf
pop
clc
xchg
test
dec
inc
xlat
jge
mov
shr
hlt
ficoml
mov
add
pop
ss
jno
inc
gs
push
xchg
out
cs
cmp
insb
xchg
adcb
in
cmp
jns
cmp
mov
pop
lods
sbb
push
mov
push
adc
mov
cmp
dec
repnz
daa
xchg
inc
sbb
js
mov
xor
push
movsl
out
hlt
inc
fidivs
mov
lret
arpl
dec
cmpsb
cmp
push
xchg
les
popf
addr16
shrl
mov
and
lcall
fwait
pop
jo
mov
sti
cmpsb
sub
jb
cltd
pop
push
outsl
mov
inc
and
or
data16
dec
mov
cmpsl
in
dec
mov
shlb
rol
pop
add
popl
jl
imul
add
dec
fisttps
sub
fstps
add
jno
lea
pop
or
out
clc
sahf
pop
push
pop
fbld
pop
fidivrs
repz
enter
fsub
insl
fs
fcompl
add
mov
leave
into
mov
fldcw
dec
popa
mov
out
cmpsb
sbb
repz
ss
out
mov
mov
iret
sub
sub
mov
mov
adc
jg
xlat
clc
lahf
mov
out
bound
rol
sarl
mov
lea
dec
push
xor
dec
stos
jmp
xchg
js
fwait
sti
int
ljmp
rcr
jmp
mov
ficomps
sub
pop
ja
hlt
mov
jnp
xchg
cmpsb
in
adc
mov
addr16
cltd
pop
mov
sub
leave
adc
test
adc
rol
push
insl
andb
rcl
mov
mov
jmp
or
mov
cmpsb
test
nop
in
dec
pop
shlb
add
jb
inc
fsubs
stc
out
xchg
adc
in
pusha
cmp
aad
pop
ret
sarl
sbb
jbe
out
aad
xchg
jge
in
mov
pop
push
inc
cmp
incb
fwait
mov
in
and
fwait
shll
icebp
add
and
out
xchg
sub
sti
add
mov
jl
jl
out
or
pusha
push
jl
xor
push
lods
sub
fdivrs
addr16
insb
stc
shrb
imul
mov
mov
iret
rorl
in
dec
test
cmp
push
add
cmpsb
les
lea
stos
popf
or
lret
stos
xchg
mov
sub
xchg
pop
adc
scas
inc
cwtl
cmp
mov
cmpsl
jmp
inc
adc
arpl
call
dec
cmpsl
push
mov
or
jp
push
pop
into
xor
jge
repnz
mov
ds
lods
add
sub
or
mov
gs
bnd
pop
lock
cmpsb
cmpsl
adc
mov
in
outsb
ret
fdivl
mov
sahf
shrl
insb
ds
ja
jecxz
mov
jmp
mov
es
scas
fiadds
adc
pop
decb
stos
divb
push
insb
xor
mov
xor
scas
out
dec
mov
inc
aad
add
aam
leave
sub
pop
jno
jb
andb
mov
add
and
loop
leave
std
pop
jg
jmp
cwtl
call
or
xchg
jmp
jle
in
sub
mov
les
and
ja
aam
adc
mov
loope
inc
idivl
ficoms
add
sbb
andb
ja
mov
cmp
fdivs
sbb
sbb
imul
fidivl
adc
sbbl
ret
pop
jb,pt
xorb
jbe
inc
lds
fxch
mov
jle
push
insb
push
jbe
xor
push
addr16
enter
movsl
lods
dec
mov
data16
inc
pushf
mov
inc
pop
push
repz
ss
add
and
out
xchg
jl
ja
adc
push
leave
mov
outsl
lret
std
push
mov
push
std
notl
or
sti
out
push
fbstp
push
dec
pop
sbb
addr16
fadd
cmp
xchg
rol
divl
add
sub
ret
fucomip
in
cltd
push
mov
fwait
xor
pop
xchg
push
popa
mov
jg
adc
pop
out
and
add
pop
or
cmc
pop
mov
testl
jle
fiaddl
out
xchg
notb
ret
jae
imul
add
neg
ret
gs
cmp
insb
mov
xor
add
mov
lcall
test
add
jne
sub
add
fs
push
xchg
pop
xor
push
pop
scas
sti
jbe
mov
popf
push
loop
iret
add
cmp
mov
loope
das
stos
lahf
add
lods
jg
cmpsb
jns
dec
inc
push
lret
fistpl
push
xor
cmp
dec
xchg
pop
xchg
ljmp
jno
or
dec
mov
jecxz
sub
test
aaa
in
fcmovb
jmp
mov
cmpsb
ja
push
jmp
fisubrl
movl
shr
inc
divb
int
test
xchg
lods
xchg
or
sbb
lahf
pop
movsb
jge
gs
cmpsb
movsb
dec
add
lea
push
jle
fs
adc
in
inc
lea
std
jp
int
daa
aas
test
enter
enter
rorb
sbb
xchg
jge
mov
enter
pop
lods
sub
mov
jp
inc
sahf
jg
in
inc
into
jg
xchg
add
test
stos
jg
sbb
cmp
push
fistl
fisubs
das
outsb
sahf
jae
cmp
adc
cli
dec
xlat
lcall
mov
mov
shll
shlb
pop
xchg
push
jecxz
and
mov
cmp
addr16
mov
mov
pop
hlt
popf
pop
pop
scas
fwait
out
jnp
push
pop
or
xchg
push
cmp
out
inc
pop
inc
sbbb
fwait
push
jmp
cmpl
rorl
popa
xor
pop
scas
mov
inc
out
adc
into
inc
push
loopne
negb
cmp
stos
pop
cmpsl
sbb
mov
mov
cltd
lret
adc
add
loope
in
into
xchg
imul
or
sbb
xor
bswap
shlb
adc
jle
daa
fisubrl
test
pmulhuw
xchg
imul
andl
pushf
mov
jp
clc
mov
jg
jg
enter
fiadds
mov
adc
add
pop
mov
pop
mov
clc
push
or
mov
fdivs
or
mov
inc
sub
sbb
stc
ror
and
out
js
sti
xor
mov
stc
push
fisttpl
int
mov
xor
adc
clc
push
inc
mov
outsl
rol
fdivs
sbb
or
xchg
push
jnp
daa
jge
sbb
addb
sarb
dec
pop
mov
or
pop
les
adc
stos
cltd
jb
push
sub
mov
stc
pop
clc
push
mov
mov
movsl
enter
cltd
ficomps
out
inc
jle
add
push
inc
scas
call
imul
inc
hlt
jno
stc
punpckldq
xchg
sub
repz
pop
lcall
inc
mov
les
or
fldenv
bound
lret
jg
je
jp
push
ljmp
jno
sbb
mov
sarb
rorl
cwtl
cmpsb
push
sub
je
jno
subb
pop
test
loope
mov
sbb
jbe
mov
adc
xor
mov
jbe
xor
adc
cwtl
je
add
mov
mov
adc
xor
pop
js
cmp
mov
inc
dec
push
dec
push
mov
xor
leave
cmp
cltd
mov
pop
pusha
push
test
jbe
testb
dec
cmc
mov
dec
xchg
sub
lret
inc
mov
adc
cmp
cmp
cld
imul
fistpl
mov
mov
mov
pop
mov
and
stos
inc
fcomp
cmp
in
and
fcoml
js
xchg
pop
scas
mov
cwtl
xchg
int3
rol
xlat
mov
arpl
pop
inc
jp
div
sbbl
outsb
int3
sbb
decb
xor
cmp
pop
hlt
adc
or
pop
out
dec
pop
ljmp
push
in
cmp
scas
cmp
add
arpl
jmp
mov
xor
lret
pop
test
or
out
test
cmp
push
xchg
and
ja
sahf
dec
add
iret
xor
sbb
add
or
in
es
push
cmp
outsl
out
shl
push
add
xchg
inc
fwait
xor
add
mov
and
add
xor
or
pop
es
add
or
imul
lcall
popa
cmp
xchg
xchg
testl
in
scas
testb
add
cmpsb
cmp
cmp
cmp
movsb
sbb
jle
inc
pop
sti
xchg
pop
inc
fisttpll
mov
sbb
mov
push
xchg
test
call
hlt
std
sti
jo
adc
orb
ret
imul
sbb
inc
out
inc
addl
insb
add
push
out
test
push
mov
cmpsb
pop
sti
nop
loop
loop
sbb
pop
push
mov
hlt
roll
inc
clc
repz
es
orl
cltd
lahf
ds
insl
push
xchg
mov
ret
cmpsl
stc
cmp
sub
dec
fnstsw
ljmp
enter
dec
jmp
mov
lahf
jge
inc
push
jns
and
inc
dec
and
mov
popf
lods
mov
inc
inc
lret
mov
fisubl
jl,pn
pusha
inc
inc
clc
cmp
fwait
cmpsl
shl
adc
scas
dec
adc
jge
fwait
xchg
sbb
orb
add
pushw
mov
sub
pop
mov
sbb
out
dec
cmpsb
jbe
lahf
xchg
fdivl
sbb
imul
insb
push
enter
fsubrp
fldenv
shll
xlat
xor
push
or
xor
subl
jle
scas
inc
scas
and
inc
scas
inc
jns
enter
push
popa
cmp
dec
gs
xchg
dec
das
or
iret
cmp
pop
push
fcoml
or
cmpsl
cltd
push
or
movsl
xchg
imul
xchg
sbb
xor
icebp
loopne
rcrl
xchg
jl
scas
cs
sbb
push
xor
pop
mov
aam
jbe
cmc
iret
sahf
cmovge
sub
stc
dec
adc
popf
ret
jnp
lods
lds
mov
pop
sbb
daa
xchg
loope
aad
sti
xor
mov
and
mov
or
popf
fistl
lahf
mov
xchg
in
cwtl
arpl
inc
or
jno
xor
xchg
es
add
cmp
jo
imul
inc
jp
xchg
mov
xor
inc
cmp
cmp
pop
inc
ret
fnstenv
mov
fwait
out
jae
lret
mov
adc
mov
jae
sbb
push
popf
pop
cmp
sub
mov
fidivs
push
bound
pusha
adc
inc
cwtd
add
inc
xchg
faddp
loope
fdivs
pop
jge
aam
outsb
cmpb
mov
jmp
lea
movb
or
xor
push
sub
aas
stos
inc
jno
sbb
mov
mov
mov
cltd
frstor
push
sahf
leave
je
out
shlb
repnz
and
in
imull
dec
outsl
lcall
inc
fdivl
mov
jb
fs
inc
cmpsb
push
or
adcb
jne
clc
ja
jecxz
daa
lcall
das
out
and
mov
imul
xlat
outsb
int3
mov
mov
or
add
sub
iret
data16
arpl
and
loopne
and
pop
cmc
xchg
int
push
test
adc
in
xlat
lcall
dec
roll
sbb
shl
movsl
popf
jo
into
js
pushf
ds
insl
scas
and
testb
xchg
nop
insb
xorl
mov
fsubp
mov
lods
xor
mov
xchg
cmpsb
les
add
pop
test
and
and
inc
lea
imul
decl
test
bound
mov
mov
rclb
mov
test
cmp
or
add
xor
fsubrp
shrl
je
add
movsb
mov
mov
out
mov
test
mov
mov
int
inc
clc
jbe
push
out
inc
add
mov
test
mov
and
xchg
inc
cmp
add
popl
repnz
cmc
or
aam
mov
faddl
out
out
mov
pop
push
cmp
cmp
dec
out
push
sbb
dec
jge
fisubrl
test
mov
cmp
in
rcr
sarl
adc
test
adc
data16
into
out
push
decb
sbb
xchg
mov
xorb
inc
shrl
cltd
test
in
loopne
insb
outsb
mov
adc
xchg
sub
int
call
movsl
cld
push
inc
xor
iret
xchg
pop
inc
pop
nop
mov
inc
jl
cs
or
aaa
ss
mov
fidivrl
test
xchg
push
inc
inc
adc
sbb
in
jb
and
push
inc
push
cmp
inc
mov
test
aam
sbb
rolb
fsubrs
adc
sub
sub
inc
movl
sbb
aad
andb
sub
sahf
add
dec
pusha
in
cmp
test
and
subl
and
out
and
leave
push
outsl
cmp
movsb
jne
or
pop
mov
jmp
in
pslld
push
jg
xlat
stos
out
xchg
vcmppd
mov
mov
iret
out
shrl
call
arpl
outsl
xchg
add
popa
les
call
lretw
pushl
dec
fisttps
lods
xor
iret
xor
pop
cmp
arpl
sbb
call
sub
imul
je
pop
shrb
outsl
call
cmp
je
bndstx
in
js
push
sar
sti
mov
push
mov
repnz
jmp
xor
and
cmpsb
adc
sub
insl
fisttpll
fwait
jae
rorb
dec
adcl
jp
push
mov
and
mov
arpl
sbbl
push
cmc
jge
and
jp
rorb
push
stc
or
mov
sub
mov
into
sahf
push
movsb
jg
scas
mov
mov
lret
lock
rcll
push
ljmp
jno
mov
int
and
jno
jb
std
sti
xor
pop
mov
popf
lock
mov
aaa
sbb
sbb
and
cmp
aad
cmp
pop
ja
mov
pop
mov
mov
sbb
cmc
stos
xor
iret
jp
sbbb
cmp
jmp
ds
mov
out
and
inc
push
jge
test
fs
movsl
xchg
jl
shlb
mov
sub
jp
pop
ja
sub
imul
clc
pop
aas
pop
jmp
cmp
sbb
in
mov
notb
cmc
mov
rcl
pop
repnz
test
out
negl
out
pop
repz
int3
jp
push
in
and
ljmp
imul
push
jle
pop
sub
shll
mov
shld
cmp
jecxz
lea
xchg
pop
mov
lret
mov
add
pop
popf
or
aam
imul
shlb
sti
cmp
scas
xor
sbb
mov
mov
cmp
and
push
rolb
mov
jbe
xchg
and
sub
aam
mov
lods
add
and
movsl
mov
mov
dec
imul
add
pop
leave
loope
test
mov
rclb
lret
outsb
xchg
fisttpll
jle
cmp
out
jg
sti
sub
inc
mov
xchg
or
fsubrs
mov
ds
push
int3
mov
popf
push
push
test
jecxz
test
shrb
mov
mov
add
sub
xor
jle
xchg
mov
jns
lahf
and
pop
out
sub
push
fstl
add
cmpsl
popa
xchg
add
xchg
test
mov
psrld
xchg
mov
jmp
jo
out
out
xchg
addr16
sbb
xrelease
int
aaa
js
test
leave
add
mull
mov
inc
mov
mov
incb
mov
cld
cld
mov
add
xchg
mov
push
cwtl
pop
pop
cmp
nop
loope
cmpl
push
sbb
add
bound
sub
icebp
mov
pushf
jne
into
daa
adc
pop
jae
icebp
push
insl
inc
inc
repnz
hlt
ficompl
lods
mov
adc
popf
int3
aas
movd
and
push
fisubs
push
mov
jbe
inc
call
push
int
or
jb
dec
add
sbb
ljmp
jle
inc
imul
sarb
insb
popf
cmp
fsubs
aas
pop
pop
test
scas
and
inc
mov
inc
bound
into
aaa
std
xchg
test
sahf
pop
xchg
inc
stos
in
test
nop
out
xor
xchg
rorb
jmp
fisubl
into
int
jo
push
testl
mov
push
lahf
es
pusha
cmp
loopne
mov
in
test
mov
xchg
hlt
mov
dec
sbbb
pop
stos
mov
mov
andb
sub
dec
sahf
les
jmp
mov
pop
loopne
mov
aaa
fwait
scas
mov
loop
dec
gs
xchg
pop
out
ds
xchg
jp
push
fnstenv
xor
xlat
mov
mov
fisttps
sar
add
jnp
xchg
cmc
adc
xchg
mov
push
inc
rclb
movsb
inc
add
mov
xor
mov
fisttps
out
into
sub
jecxz
cmc
sti
cmpsb
sub
inc
fbstp
xchg
dec
jge
sub
adc
mov
jno
jle
ret
and
mov
inc
pusha
out
in
imul
inc
arpl
fcompl
les
dec
mov
inc
shll
aad
cs
es
sti
gs
lock
data16
popa
adc
sbb
adc
push
pop
jl
or
mov
lods
movsb
lcall
jo
hlt
sub
adc
or
xor
fs
lret
shl
subl
dec
es
scas
scas
add
orb
xor
test
push
xchg
inc
movl
mov
repnz
xor
insb
cmc
add
dec
or
mov
push
loopne
lret
push
shrb
decb
inc
mov
sbb
aas
or
pop
jg
mov
add
mov
pushf
xor
mov
jge
sub
out
mov
ja
insl
sbb
nop
mov
data16
inc
push
adc
mov
enter
in
push
mov
mov
loop
arpl
mov
or
push
iret
push
push
pop
lds
adc
cmpsb
mov
cltd
add
and
movsb
xchg
cs
jbe
inc
add
testl
ret
loop
fsubrs
xor
ss
inc
jns
in
cmp
pop
scas
popa
movsb
outsl
adc
repnz
dec
jl
jl
popf
pop
dec
adc
js
jo
jle
mov
and
iret
push
inc
bound
jp
std
jo
sbb
leave
dec
in
stos
sub
cs
jb
fildll
mov
enter
movsl
popl
mov
adc
mov
cmp
or
inc
ds
ficompl
gs
inc
and
mov
mov
push
insb
add
mov
sub
and
inc
or
xor
inc
push
xchg
and
test
add
sbb
repnz
rolb
pop
adc
movsb
push
stos
xchg
add
push
sbb
scas
bound
adc
int3
push
add
jmp
adc
mov
pop
icebp
scas
scas
loopne
int3
jno
outsb
mov
js
lcall
and
out
cmp
pop
mov
lret
lret
jl
xchg
into
enter
push
in
inc
fadds
push
inc
inc
lret
arpl
nop
jmp
shlw
push
xchg
dec
dec
pop
jne
cmp
filds
out
push
xchg
gs
test
mov
gs
std
dec
cmpsl
push
xorb
sub
fidivrl
and
arpl
mov
mov
adc
cmp
jmp
andb
xchg
lods
jne
sti
pop
enter
test
cmpsl
dec
cmp
jge
jecxz
dec
aam
rorl
push
fs
adc
sub
push
push
das
mov
fisttpll
jecxz
add
push
outsb
push
adc
mov
pop
repnz
mov
outsb
adc
xchg
mov
inc
arpl
sahf
jbe
mov
and
rorl
cli
xor
xchg
jmp
or
mov
or
xchg
into
js
jns
push
in
xor
and
push
je
inc
outsl
js
mov
daa
lret
and
fisubrs
das
adc
adc
test
pop
jge
cmp
sbb
jmp
mov
andl
and
popf
loopne
fildll
stos
push
je
lds
and
icebp
cmp
insb
inc
xor
dec
out
pushf
mov
out
fbstp
jae
dec
or
js
inc
out
js
addr16
xor
cli
cli
or
push
lret
rep
je
dec
and
jmp
xchg
mov
mov
test
xchg
sti
loopne
cmpsl
leave
es
inc
xchg
pop
mov
xchg
lret
test
lock
sbb
dec
scas
movsl
cmp
xchg
xchg
sbb
int
dec
push
lcall
aad
test
icebp
pop
aaa
imul
fists
mov
ds
adc
jne
fwait
sbb
sbb
jle
adc
xchg
outsb
or
mov
add
inc
jns
lahf
in
test
jecxz
add
das
push
mov
lds
lds
cli
xchg
rorl
mov
cmp
add
fbld
ret
push
lcall
movsb
loope
xchg
or
jns
jmp
inc
xchg
stos
add
ret
sti
ljmp
int
mov
jp
mov
add
jne
dec
adc
fs
clc
and
dec
dec
testl
push
leave
or
mov
negl
icebp
mov
cltd
xor
mov
sti
jns
dec
push
inc
cmpsl
adc
and
bound
push
inc
addr16
leave
fdivrl
dec
adc
add
mov
sub
imul
adcb
sbb
sbb
pop
sbb
outsl
mov
mov
loopne
sub
imul
out
testl
xchg
movsb
pop
pop
cmp
dec
hlt
cmp
mov
mov
jnp
sbb
in
cltd
xor
or
dec
lcall
jnp
jmp
push
sahf
inc
pop
out
fimull
push
mov
loopne
inc
test
sbbl
sbb
or
adc
imul
mov
and
jg
pushf
movsb
jbe
ss
adc
cmp
or
pop
mov
nop
inc
sti
dec
push
cmp
sbb
enter
js
imull
dec
or
std
or
push
push
divb
mov
ret
mov
test
pushf
sbb
lds
daa
inc
push
jle
xchg
xor
sbb
int
push
aaa
stos
cmp
push
jmp
mov
jb
test
stos
mov
mov
xor
and
mov
pop
das
out
push
push
setl
mov
insb
xlat
pop
mov
push
sub
pop
sub
cmp
test
add
adc
mov
jb
mov
push
push
ljmp
jno
jl
repz
pop
in
cmove
enter
push
push
sub
mov
jae
and
xor
push
or
leave
mov
xlat
push
das
icebp
xor
bound
mov
inc
adc
jnp
fists
test
adc
cs
xor
mov
filds
sub
std
lods
mov
xor
xor
insb
roll
mov
cmpsb
pop
jp
jecxz
add
test
xchg
pop
xor
nop
push
mov
sub
popa
std
pop
insb
jmp
lahf
pop
sti
mov
jnp
and
jne
nop
xor
cld
lcall
in
pop
pop
jle
out
inc
rclb
mov
mov
cmp
adc
out
pop
pop
out
cltd
xor
sub
aad
mov
jle
inc
mov
adc
jp
in
movsb
incb
mov
sub
jo
ds
ficoml
lret
filds
push
out
lcall
jp
xchg
cmp
mov
cmp
jo
push
or
pop
test
cmpsb
shll
mov
call
test
mov
out
add
addr16
inc
pop
scas
imul
fdivr
loope
pminub
cmpl
pop
idivb
mov
insb
pop
insl
jmp
mov
mov
stos
xlat
ret
mov
xchg
adc
dec
mov
push
pop
loopne
push
dec
ror
outsl
mov
mov
mov
das
jno
sbb
daa
dec
dec
negb
cs
rcl
and
pop
std
mov
insb
jl
out
pop
std
roll
insb
sub
add
imull
mov
lcall
adc
or
test
cmp
pop
movsl
in
out
sar
or
dec
loopne
sbb
xchg
inc
lahf
js
mov
in
inc
mov
or
and
push
adc
addr16
and
xor
mov
clc
rdmsr
jecxz
sbb
scas
mov
fnsave
xchg
jg
inc
sahf
xor
push
cli
es
xchg
inc
dec
arpl
pop
cmc
sbb
mov
mov
lods
insb
movsl
cwtl
push
divb
jle
adc
or
jp
and
inc
adc
or
jno
push
sbbb
fprem
push
test
cmc
int3
mov
ror
or
negl
outsl
jnp
sahf
or
lret
add
sub
incl
inc
and
cmp
pop
sub
out
insb
push
mov
adc
sbb
push
loope
ret
mov
call
sbb
popf
lcall
es
jge
jnp
cmp
cld
xchg
inc
fdivs
xchg
xchg
xchg
pop
rol
sub
mov
xlat
mov
aad
or
cwtl
shr
add
int3
jle
dec
inc
xchg
inc
les
push
repz
nopl
cmpsb
cmp
pop
xlat
sub
dec
aaa
or
mov
test
inc
push
push
shll
xchg
push
cmp
mov
pusha
fmulp
rcll
push
fisttpl
popf
pushf
enter
cmp
mov
cmpsl
mov
fldenv
xchg
adc
xor
in
lea
mov
adc
jne
pop
movsb
mov
idivl
rorl
pop
test
loopne
mulb
mov
mov
cmpsl
mov
push
add
sarl
lods
jp
out
fs
out
pop
out
lock
dec
out
jns
mov
mov
pop
repz
rorl
xor
or
push
cli
lea
je
test
push
mov
es
pop
cmp
jb
inc
and
xor
hlt
dec
jae
aad
jno
aam
in
lcall
int
xchg
jbe
cwtl
xor
jae
setne
xor
mov
lret
lret
and
mov
cmp
fnstcw
stos
cwtl
dec
push
scas
popa
addl
subl
and
mov
jp
adc
stos
popa
or
mov
data16
fildl
sub
pop
mov
fnstsw
pusha
mov
xchg
cmp
mov
adc
pop
fistps
mov
jns
cmp
mov
jmp
mov
xchg
jbe
loop
fldcw
js
jge
int3
pusha
fdivrl
add
push
je
ja
mov
add
push
xchg
addr16
mov
sbb
movsl
mov
jb
hlt
stos
daa
mov
or
mov
inc
mov
sahf
sbb
sbb
stc
dec
dec
fidivl
pop
out
jg
mov
fstpl
mov
pop
scas
sub
insb
add
push
into
pop
sbbb
sahf
rcll
out
xchg
fdivp
paddw
mov
sbb
enter
jns
arpl
inc
sbb
outsl
xor
loope
xchg
sbb
jns
lret
jo
xchg
fs
dec
out
inc
xor
test
incb
push
mov
and
xor
mulb
cmp
jge
lods
data16
pop
add
cmpsb
movl
aad
and
and
mov
jge
add
into
pop
xor
arpl
sbb
xchg
mulb
aam
pop
and
in
loopne
pop
cmp
sub
push
movsl
adc
idivb
xchg
or
push
inc
mov
mov
and
shr
in
mov
push
pusha
mov
cld
shrl
insl
ss
dec
loopne
xchg
and
add
adc
icebp
inc
out
lret
repz
xchg
add
push
dec
cmpsb
jae
fwait
cs
cs
sbb
push
imul
sub
incl
adc
in
loopne
ja
pop
rolb
cmc
pop
int3
repnz
xor
addr16
fs
or
adc
into
cli
sub
mov
mov
imul
dec
sub
divb
data16
fistl
subl
add
push
and
bound
scas
and
les
add
fmul
jmp
pop
les
cmc
test
scas
push
add
push
es
es
cmp
inc
xor
push
inc
rcrl
xor
movsb
repz
push
inc
dec
std
sbbb
enter
pop
adc
hlt
push
pop
out
mov
iret
inc
mov
cmp
xchg
jp
mov
fsubs
mov
or
scas
sbb
ds
inc
arpl
aad
gs
sub
iret
push
dec
ds
add
xlat
sbb
fdivrl
xor
fisttpl
push
lcall
push
cld
xlat
cmp
push
adc
sahf
popa
mov
int
popa
clc
ffreep
test
jle
adcb
popa
mov
mov
pop
inc
pusha
pop
test
stos
add
xlat
mov
adc
add
clc
push
push
ret
das
pextrw
jo
lret
in
cmp
test
mov
in
pusha
xchg
dec
push
nop
sti
mov
sbb
out
pop
adc
jae
sub
sbbl
or
nop
mov
out
subl
les
std
or
std
jl
fwait
enter
xchg
lea
pop
add
es
sti
pop
dec
lcall
pop
dec
std
repnz
and
aam
ss
loop
andl
adc
into
xchg
int
addb
sahf
dec
es
sbb
les
cmc
pop
and
call
out
and
xchg
inc
out
mov
ljmp
jg
mov
cmpsb
jge
in
jl
fndisi(8087
dec
mov
into
loopne
mov
loopne
fadd
xchg
bndstx
les
inc
push
pop
out
inc
xor
mov
push
mov
incb
mov
sahf
jg
cmp
xor
std
psubsb
push
fidivl
dec
jecxz
xorl
pop
mov
clc
popl
push
xor
shll
inc
jmp
movsl
bswap
pop
insb
xor
add
inc
xor
leave
pusha
inc
mov
mov
fs
fst
jb
mov
push
stos
jmp
dec
orb
cmp
jnp
ds
rcl
rcl
cli
push
mov
dec
push
sbb
fcom
icebp
inc
mov
pop
lahf
gs
mov
mov
and
in
in
sbb
stos
mov
aaa
mov
testl
sbb
andl
dec
push
adc
outsb
mov
xor
mov
cmp
outsb
mov
pop
arpl
inc
sub
shrb
push
mov
jecxz
and
and
xor
pop
dec
icebp
iret
jbe
jno
test
in
cmp
pop
sahf
mov
sahf
movsb
dec
xchg
dec
int3
arpl
shl
sub
xchg
mov
or
aaa
test
sbb
push
inc
sub
cltd
cmpsl
jg
add
fiadds
xlat
scas
cs
out
popa
jle
data16
pop
cwtl
xor
in
inc
in
pop
psubq
adc
and
es
gs
mov
sub
sbb
lds
pop
fucomi
cmp
ret
and
xchg
jb
inc
lret
sbb
into
stos
inc
popf
push
jmp
add
fstps
ficoms
lods
inc
pop
sbb
cmpsl
xor
push
pop
insl
jmp
cld
lds
xor
fidivl
push
xchg
sub
fnstenv
clc
and
andl
jl
lds
cmp
lcall
dec
mov
push
fwait
and
fs
or
fwait
or
push
push
imul
clc
or
mov
int3
daa
imull
loop
pop
ficomps
enter
xchg
adc
loop
xchg
xor
inc
fdivl
push
in
je
push
lea
add
mov
mov
loop
ret
lcall
ficompl
pop
mov
nop
loop
test
outsb
mov
jb
dec
sbb
add
cltd
mov
iret
mov
faddl
imul
inc
pop
push
ja
test
xchg
pop
push
mov
test
mov
mov
movsl
xor
or
sbb
mov
or
xchg
push
push
xchg
imull
pop
push
jle
outsl
mov
push
mov
pusha
sbb
mov
add
mov
inc
fnstenv
mov
hlt
cmp
pop
cmc
mov
add
pop
scas
rclb
js
out
cltd
xor
fcmovb
push
scas
xor
rcll
aam
mov
push
jb
in
sbbb
or
clc
dec
ds
inc
ss
pushf
lret
lret
mov
mov
das
xor
push
repnz
mov
xor
sti
popf
idiv
mov
push
out
negb
int3
pop
lret
cmp
jbe
push
or
enter
int
cs
movsb
std
mov
mov
lods
fdivl
or
sbb
pop
jne
gs
jae
push
adc
ret
js
addr16
adc
sbb
mov
test
and
adc
mov
cltd
mov
and
orl
test
jg
xor
mov
stos
dec
sbb
leave
sbb
outsl
movsb
or
pusha
fcmove
pop
xor
gs
push
mov
adcb
inc
insl
cld
pop
sahf
sub
mov
pop
and
cs
or
fidivl
or
jle
clc
jae
sbb
test
adc
pop
xchg
jl
mov
jae
aad
scas
or
sbb
mov
mov
dec
ljmp
pop
loopne
jbe
add
stos
inc
int3
inc
popf
mov
leave
test
jmp
enter
mulb
outsl
mov
xor
inc
out
adc
cmc
sub
or
mov
loope
movsl
and
xchg
adc
xchg
mov
loopne
stos
fisttpl
inc
and
mov
mov
out
inc
cmp
shlb
leave
add
mov
fsub
adc
aaa
sub
inc
scas
push
sbb
ljmp
jl
or
incb
lods
fwait
sub
mov
std
jle
pop
daa
int3
mov
adcb
or
push
movsl
jle
mov
dec
enter
shrl
movsl
es
sbb
xchg
adc
sbb
ret
js
sub
mov
dec
xchg
dec
xor
outsl
mov
pop
outsl
xchg
or
test
mov
xchg
dec
popa
mov
cmc
sub
sbb
aad
filds
movsb
mov
or
aas
lret
mov
sub
ficoms
pop
in
cmpsl
jg
aas
dec
and
and
jg
mov
aad
cmp
pop
scas
add
sahf
mov
shrb
push
lock
sti
aam
rcrl
xchg
fcoms
repnz
loopne
inc
pop
jno
insb
push
scas
sub
and
and
jae
fiaddl
clc
jg
inc
sar
inc
popa
fidivrs
cltd
aam
test
mov
jno
shlb
loopne
icebp
dec
dec
adc
arpl
ds
jg
jnp
and
mov
mov
lods
mov
dec
fucomp
add
iret
addb
sub
add
or
pop
cmpsb
ds
pop
push
mov
sub
fwait
xor
mov
cli
mov
fbstp
imul
imul
jns
out
stos
mov
js
mov
daa
xchg
mov
mov
daa
test
push
jns
mov
ljmp
cmc
mov
imul
push
mov
or
lock
inc
or
jmp
cmp
pop
sub
pop
push
dec
stos
dec
ficompl
jne
mov
movsl
lret
add
jno
pop
jno
mov
xor
cmp
outsb
dec
js
test
daa
mov
repnz
mov
fwait
das
jo
ficompl
push
cmp
shl
mov
xorb
daa
xchg
lcall
adc
pusha
mov
cmc
add
addr16
add
ljmp
adc
imul
in
ja
aad
jmp
roll
inc
mov
mov
mov
push
mov
mov
pop
sub
jo
dec
mov
mov
inc
fbld
sbb
xor
xchg
insl
ja
out
jge
xlat
clc
xchg
out
xchg
inc
ror
repnz
push
pushf
sbb
sbb
xor
cmp
outsl
loop
dec
aas
xchg
push
stc
loop
mov
andb
shll
jne
insl
push
fchs
adcb
cmp
pusha
jp
add
loope
adc
int
icebp
adc
mov
outsl
in
or
adc
aam
mov
pop
mov
or
cmc
popa
stos
lea
mov
mov
mov
sbb
xchg
add
mov
sahf
inc
loopne
push
push
call
mov
add
lea
fwait
in
andl
jle
loope
subb
mov
call
adc
cld
andb
sahf
pop
mov
mov
jnp
xor
imul
shr
xor
sub
jae
cmpsl
mov
pop
xchg
pop
and
or
pop
cmpsl
testb
push
mov
outsl
hlt
adc
imul
mov
dec
and
pop
subb
mov
cmp
cmp
cltd
std
pop
addr16
push
mov
push
dec
sbb
jno
xchg
stos
inc
es
out
orl
and
jecxz
scas
add
rcl
mov
out
loopne
shlb
mov
sbb
scas
stc
pop
stos
ror
aad
jb
sbb
fmul
cmp
repz
in
aam
loope
dec
cwtl
stos
js
stos
xchg
xorb
adc
rcrl
shr
jnp
cli
stos
mov
ret
or
shrb
iret
maskmovq
shlb
cmp
mov
je
pop
rol
sbb
pop
sub
rol
jb
mov
mov
jl
scas
out
mov
ss
loop
xchg
dec
lds
popa
add
pop
fidivs
mov
pop
ja
pop
into
pop
imulb
inc
jge
pop
mov
in
push
inc
add
xlat
cmp
gs
outsl
movsl
cmp
ds
sbb
jb
pop
sub
les
mov
sbb
and
les
sbb
cs
or
sub
mov
pusha
mov
xchg
xlat
dec
add
jl
lods
ds
mov
inc
and
pop
sbb
scas
dec
cmp
test
pop
mov
cmp
pop
ds
repnz
xor
cmp
insb
push
add
ret
adcl
and
lds
and
js
cmpsl
mov
adc
mov
into
jae
xor
clc
sub
cltd
sub
mov
lock
pop
lcall
dec
loopne
dec
outsb
rorb
sub
or
pushf
adc
jmp
cmp
imul
int
test
ja
xor
dec
rol
lock
xor
into
pop
ficoml
mov
xor
and
push
push
and
loop
out
ja
add
lret
mov
stos
dec
stos
pop
dec
mov
fwait
cmpsl
mov
insb
scas
clc
dec
sti
cmpsl
xchg
xchg
xor
xor
mov
mov
cmp
pop
sub
mov
dec
sarl
pop
mov
es
fisttpll
iret
inc
pop
or
and
push
push
daa
pop
repnz
inc
push
ja
cmp
xor
jecxz
dec
mov
add
sbb
out
test
fwait
or
test
xor
popf
xor
and
mov
pop
pop
js
fldenv
mov
and
in
xor
mov
lcall
sbb
insl
popa
or
aad
repnz
fmull
push
jnp
push
lods
and
inc
into
cs
push
in
fadd
pop
push
test
outsb
add
adc
mov
lods
sbb
and
jno
jbe
cld
xchg
movsb
js
icebp
jmp
fstps
insl
test
or
test
mov
xchg
push
mov
sbb
pop
hlt
ss
jnp
xor
mov
lds
js
std
mov
pop
in
arpl
imul
xlat
pop
sub
outsl
mov
pop
pop
xor
leave
mov
stos
cltd
and
js
das
pop
jo
cld
or
fst
and
add
add
outsb
in
pushf
std
inc
out
lahf
pop
push
testb
out
pop
les
mov
leave
outsb
outsl
pop
mov
lahf
inc
fcmovnbe
or
cmp
jl
adc
pushf
dec
test
jmp
mov
daa
mov
adc
imul
pop
sbb
jge
mov
lea
out
push
jp
pop
or
xor
scas
add
inc
mov
js
sub
push
out
scas
fwait
sub
in
adcl
add
cmpsl
xor
loop
enter
and
repnz
lahf
test
add
adc
pop
jo
lret
push
imul
add
mov
adcb
js
pushf
lds
xor
in
test
ja
enter
push
mov
stos
iret
lods
jp
jle
or
pop
cs
jp
sub
push
sub
dec
mov
pop
ss
push
clc
jnp
mov
mov
pop
push
movsl
mov
and
sbb
fldcw
mov
push
push
push
test
inc
fs
arpl
clc
bound
mov
mov
mov
push
sbb
out
sti
in
bnd
pop
icebp
mov
sbb
cltd
sub
push
cmp
fistps
cmp
pusha
testl
jle
jns
mov
icebp
stos
xchg
scas
mov
xlat
and
out
dec
add
cli
pop
fsubs
in
aas
movsb
clc
pushf
cli
fxch
mov
jmp
shrl
mov
lock
jecxz
mov
add
notl
cwtl
pop
movsl
leave
pusha
pop
insb
scas
out
or
adc
mov
inc
shll
xchg
mov
and
add
rclb
gs
call
cld
mov
call
dec
inc
gs
adc
push
sbbl
pop
out
jmp
xchg
sbb
out
outsb
movsb
and
cmp
faddl
shlb
xchg
sbb
xchg
aas
daa
or
aam
lcall
test
es
in
add
dec
stc
negl
sub
lcall
pop
out
pusha
sub
iret
add
push
push
sbb
scas
push
lret
outsl
cli
stc
cmp
push
cmpsb
jae
mov
sub
xchg
aas
dec
enter
ljmp
ljmp
int3
jne
popa
out
mov
push
mov
push
cmc
mov
and
adc
mov
repz
aam
jecxz
mov
mov
fidivrl
push
call
add
sahf
fbstp
push
loop
dec
jle
lock
xchg
in
ja
pop
clc
pop
cmpsl
imul
outsb
repnz
dec
aaa
mov
cmp
cmp
or
and
nop
lods
shrb
xor
jecxz
mov
dec
xor
aad
nop
or
jg
jnp
in
inc
and
cld
push
sahf
lret
arpl
aad
mov
sti
mov
rorb
jae
fidivl
int3
mov
push
lret
lret
cmpl
popf
add
lcall
loope
pop
push
mov
inc
push
xchg
dec
xor
jle
shrl
faddl
sbb
in
stos
push
xor
fwait
inc
popf
fstpt
out
add
loope
push
sub
inc
mov
and
adc
test
jl
rolb
cmp
pushf
xchg
sbb
or
mov
lds
out
in
sub
lds
shrb
xor
shr
inc
out
mov
cli
push
mov
inc
test
ljmp
ss
xor
pop
rorb
jmp
rcrb
rep
pop
lcall
loope
push
cs
inc
scas
lret
arpl
add
add
aas
add
add
xor
subl
insb
mov
sahf
add
cli
inc
mov
outsl
or
int3
push
pop
and
push
xchg
xchg
add
inc
mov
xchg
pop
dec
loopne
pushf
cmp
imul
scas
xor
cmp
outsb
aam
fnstcw
arpl
mov
addl
inc
push
rcrb
push
sub
jb
rcrb
pop
push
stc
mov
clc
push
xor
sahf
jl
nop
push
addr16
dec
inc
mov
dec
xor
sub
in
add
dec
add
test
add
addr16
pop
loopne
dec
cli
aam
inc
cmpsb
sbbl
sbb
push
cmp
inc
pop
and
fisttpl
adc
lods
mov
lods
js
fucomp
cmpsb
push
xchg
lods
push
movsl
mov
jb
sub
les
lret
sbb
stos
inc
cmp
sahf
fsubrs
pop
adc
inc
pop
jae
lahf
lea
xchg
out
and
cmp
clc
leave
clc
sti
addr16
dec
cltd
push
inc
mov
ficompl
mov
clc
push
loop
dec
cmp
out
test
jle
imul
adc
hlt
jecxz
btl
stos
test
js
push
ret
lock
pop
outsl
push
nop
sbb
mov
or
xor
mov
add
loopne
test
fcomi
andb
add
testl
cmpsb
mov
das
nop
xchg
aas
gs
jbe
xor
leave
mov
les
xchg
into
or
dec
xchg
insb
pop
pop
loop
out
mov
rorl
jnp
xchg
dec
pop
movsl
andb
fistpl
dec
mov
jo
adc
jl
hlt
dec
and
mov
inc
in
cs
or
ds
xor
mov
cmovg
pop
sahf
add
das
push
iret
sahf
mov
xchg
aam
mov
lods
jmp
xchg
out
mov
stos
adc
mov
sub
inc
add
rorl
push
sub
outsl
loope
cmp
mov
dec
ss
pusha
sub
inc
mov
stos
xlat
mov
lods
outsl
in
inc
testl
pop
cmp
cli
pop
imulb
adc
int3
lcall
xchg
fwait
sti
xchg
int3
int
jne
outsb
sbb
std
cmp
sahf
push
sbb
ds
jns
or
pop
imul
and
xor
pop
xchg
fwait
repnz
icebp
sti
dec
dec
push
fsubl
insb
adc
jns
xor
jns
shl
imul
lds
fcomp
push
sub
into
rep
popf
and
jno
lret
push
mov
push
loop
loop
jecxz
cmpsb
and
sbb
rcll
dec
push
pop
mov
mov
adc
cmpsb
pop
lret
lcall
pop
loope
xor
in
sbb
jle
or
push
mov
movsl
cld
stos
es
jne
ffreep
mov
mov
jne
pop
shlb
mov
jg
cld
adc
adc
into
gs
xchg
fwait
scas
and
pop
push
inc
adc
scas
xor
mov
nop
xor
std
dec
out
xchg
test
aad
push
cli
push
adc
in
movsb
out
mov
push
cmp
xchg
mov
ds
adcb
add
push
movsl
mov
or
sbb
adc
xchg
popf
cmpsb
jns
mov
in
sub
mov
sahf
pop
repz
sub
inc
lcall
push
int3
jg
mov
mov
or
mov
xor
out
sbbb
push
rorl
xchg
sub
push
notl
cmp
out
dec
out
sahf
adc
mov
push
add
lock
xor
rclb
sbb
cmpsb
les
push
mov
and
ffreep
pop
in
jmp
pop
mov
sub
dec
push
scas
jmp
leave
cmp
stos
dec
mov
test
rcrb
inc
fsubp
and
jecxz
inc
adc
jno
jns
dec
xlat
lock
stos
push
mov
mov
imul
dec
xchg
test
pop
pop
movsb
repnz
cs
jnp
mov
mov
hlt
jl
test
jmp
das
lcall
xchg
and
lret
xor
loop
jne
mov
ja
subb
out
or
ret
jae
es
cmp
in
out
fisttps
out
sub
adc
sub
movmskps
mov
stos
mov
adc
push
aas
sub
lret
or
xchg
xchg
and
mov
repnz
arpl
aaa
test
aad
js
insl
sbb
insl
mov
ret
mov
and
and
test
sbb
fucomp
fistl
cwtl
mov
fs
cwtl
sub
jb
dec
pop
jp
xor
fsubs
xchg
icebp
orl
inc
ret
idivb
jae
dec
sub
daa
or
mov
lods
xor
icebp
fld1
and
add
mov
frstor
aas
mov
fwait
or
lds
mov
inc
sbb
int
mov
mov
sbb
lds
rcll
gs
dec
cmc
ficomps
push
cmp
popf
xorb
stos
adc
inc
push
stc
inc
cmpsl
jle
fmulp
push
push
and
add
decl
aad
std
test
insb
leave
pop
out
mov
out
cs
and
test
push
mov
jg
lret
lods
or
mov
pop
pop
aam
mov
adc
or
in
sbb
lahf
out
or
sbb
jne
jo
jmp
ja
push
or
int3
sbb
jbe
push
clc
cltd
clc
pop
out
push
mov
mov
or
imul
dec
lods
cmpsb
imul
inc
cmc
mov
mov
rcrb
jle
fists
rcrl
fs
xor
ret
xchg
inc
test
adc
arpl
int3
sahf
push
scas
nop
add
and
sbb
sub
out
cli
ficomps
faddl
push
cwtl
mov
addr16
fisttpl
and
push
mov
rol
mov
iret
insb
loope
push
pushf
stos
jmp
out
movsl
icebp
and
dec
cwtl
cs
and
testl
fisubl
fisttpll
xchg
jl
push
mov
push
adc
inc
inc
test
insb
add
out
sub
movsb
pop
xorb
jns
jp
add
mov
lock
adc
mov
xor
das
push
mov
mov
and
jno
pop
ljmp
es
ds
add
xchg
mov
jae
fwait
sub
test
dec
push
jne
sbb
fidivs
idiv
inc
scas
xchg
subb
dec
add
cmp
ljmp
pop
mov
push
jl
je
mov
outsb
jne
sbb
rcr
jp
in
jge
out
out
jno
mov
jbe
movsb
xchg
daa
mov
test
jl
inc
imul
jg
and
jae
push
jecxz
inc
sbb
xchg
cmpsl
xchg
push
in
mov
out
insb
scas
inc
inc
sbb
in
movsb
stc
nop
into
dec
stos
incl
push
pushf
push
imul
iret
push
add
cmc
es
lods
push
pop
insb
and
xchg
sbb
daa
add
lods
repnz
es
ret
cmpb
sbb
sti
hlt
jne
jl
mov
jle
pop
xlat
sbb
lds
xorb
and
mov
stos
mov
dec
pop
pop
cltd
iret
loope
pop
movsl
ret
jecxz
ficoml
fstl
loop
jl
jno
mov
gs
out
push
mov
loope
in
mov
loop
and
inc
sarl
outsl
cmp
cltd
test
mov
inc
dec
pop
mov
sbb
mov
xchg
ja
lea
mov
and
push
test
mov
das
nop
pop
outsb
mov
push
ss
std
clc
sahf
xor
pushf
repz
dec
gs
lahf
mov
mov
lldt
dec
fldenv
jge
mov
mov
idivb
mov
xchg
aas
cwtl
repnz
inc
or
ret
and
or
and
iret
arpl
mov
mov
push
aad
jl
daa
es
fucom
mov
aad
popa
xor
push
mov
movsl
mul
jg
jnp
xchg
sub
cmp
hlt
dec
aaa
and
out
xchg
and
dec
loop
sbb
dec
inc
or
fists
std
or
ret
push
lret
mov
mov
sub
sbb
push
fldcw
or
pop
aam
imul
es
xchg
push
jb
mov
add
imul
les
cmp
out
push
sub
add
ficompl
lods
clc
movsb
sbb
inc
add
cmp
mov
pop
pushf
popf
hlt
adc
cli
pop
out
imul
outsl
sbb
mov
xchg
mov
push
pop
insl
cli
or
std
push
pop
push
jb
ja
shrb
pushf
pop
imul
inc
sbb
out
rcll
movsb
js
xor
sbb
and
xor
xchg
cmc
les
cmp
psadbw
sbb
xchg
cmpb
sub
ja
push
pop
xlat
or
push
and
hlt
mov
mov
mov
fwait
roll
sub
mov
add
iret
lods
add
or
mull
xor
and
sti
add
sub
ds
jge
roll
push
mov
pop
imul
mov
push
jmp
shl
insl
dec
pop
in
dec
adc
ljmp
imul
je
out
jecxz
or
xchg
mov
sbb
rcll
push
imul
rclb
arpl
sarl
fsubrl
lcall
xchg
dec
sub
and
sub
xchg
inc
xor
xchg
mov
xchg
xor
jo
inc
fidivl
mov
fldcw
sub
jae
sbb
mov
mov
mov
mov
adc
or
xor
clc
stos
mov
nop
sub
or
mov
inc
outsl
mov
cld
cmp
mov
addr16
mov
les
sbb
xor
and
inc
or
cmp
adc
sbb
int
and
push
stos
pushw
icebp
insb
subb
int
mov
push
sub
les
into
bound
inc
mov
arpl
push
push
stos
mov
cltd
enter
adc
out
fbld
ror
inc
testb
inc
lea
lock
hlt
and
xchg
cli
pop
sub
and
cld
push
sub
fst
inc
sub
cmp
ljmp
push
mov
ss
lcall
and
xchg
mov
mov
test
insb
call
call
push
stos
jp
mov
jle
push
lods
mov
loope
aam
lods
daa
inc
lret
add
out
pop
lds
scas
cmpl
mov
les
mov
mov
push
sbb
push
imul
stos
xchg
mov
inc
fldl
arpl
scas
sub
push
push
insb
add
mov
ret
xor
inc
or
movsb
sahf
lcall
mov
int
and
imul
mov
add
mov
outsl
sarb
imul
adc
jp
test
into
add
in
push
ret
sub
pop
data16
push
imulb
popa
rcrl
mov
cmpl
stos
cmp
sub
mov
or
push
test
pop
aaa
rorl
into
fs
adc
xchg
aas
jmp
out
arpl
inc
adc
clc
push
lret
xor
push
jne
push
pushw
add
rcl
les
sarb
push
push
mov
ljmp
sti
add
mov
data16
push
xchg
mov
sub
xchg
sub
push
adc
inc
sbb
sub
inc
loop
xchg
bound
sbb
push
and
divb
lcall
push
and
push
push
sub
mov
xchg
and
mov
xor
aam
add
fcoml
pop
ljmp
pushf
das
dec
xlat
int
mov
int3
arpl
jecxz
bound
push
and
push
outsl
adc
ss
sub
shll
dec
scas
icebp
scas
inc
dec
pushl
add
add
jns
xchg
and
xlat
dec
neg
dec
mov
lret
adc
imul
hlt
xchg
xchg
xchg
push
mov
mov
mov
fwait
insb
ret
adc
dec
dec
ret
jns
cmp
inc
xchg
add
lret
jno
push
mull
or
jnp
push
insl
cmpsb
xlat
sub
lcall
jmp
iret
mov
sbb
ja
or
fld
das
dec
push
add
mov
aaa
aad
add
mov
hlt
les
adc
pop
out
jae
pop
push
ret
lods
aas
shl
outsl
xchg
sub
pop
loopne
xlat
push
jns
inc
jno
xchg
bound
ja
inc
mov
ds
or
fxch
outsb
test
xor
lcall
cmc
loop
test
pop
inc
in
pusha
and
xchg
mov
jns
movsb
jge
sub
rclb
dec
xchg
in
test
inc
stc
ds
xchg
or
enter
lock
jge
adc
add
in
push
adc
adc
push
pop
aaa
aaa
sti
pop
sbb
lret
ds
outsb
or
stc
adc
sbb
repz
jl
lds
push
decl
jno
push
addr16
jae
jmp
aas
push
push
pop
pop
aad
jp
xor
lcall
outsb
das
or
insb
scas
loop
lock
sub
aaa
or
dec
rcrb
sub
mov
or
leave
es
inc
pusha
cmp
sub
scas
inc
dec
adc
cltd
test
fcomps
int3
arpl
subb
xor
jbe
adc
outsb
stos
jle
btr
clc
adc
xchg
sub
scas
mov
add
inc
push
or
xor
int3
xchg
or
mov
fisubrs
mov
fnstenv
push
arpl
mov
mov
xor
pop
xchg
inc
scas
repz
test
xchg
ds
in
cmc
push
out
push
jmp
pop
xchg
je
lds
jecxz
mov
test
push
adc
xor
enter
adc
dec
mov
dec
inc
add
mov
add
push
fdivrs
out
jle
sbb
outsl
sub
sahf
push
stos
test
mov
add
stos
mov
dec
movsl
pop
loope
enter
cmpsb
es
das
cs
pusha
and
cmp
push
cmpsb
mov
push
xchg
and
idivb
push
out
ret
rorb
scas
jb
mov
sbb
fnstsw
mov
push
mov
les
push
rorb
or
cmpsl
jl
adc
dec
cmp
scas
subl
outsb
lock
sahf
mov
popf
sbb
mov
popf
mov
lods
int3
out
ss
je
dec
lahf
das
jno
js
jl
sub
push
movsb
xchg
mov
pop
mov
jle
add
out
mov
pusha
movsl
xchg
rclb
mov
enter
cli
decl
hlt
enter
ljmp
int
pushf
pop
lods
push
jmp
je
in
mov
xor
je
mov
jnp
pop
or
hlt
lret
ja
xchg
dec
sbb
mov
popf
stc
aas
add
pop
inc
mov
negb
xor
add
fwait
xor
test
in
cmpb
test
in
repz
push
mov
adc
in
test
call
xor
jle
dec
mov
cld
cltd
dec
pop
dec
fwait
call
or
ficoml
jnp
icebp
out
xchg
daa
xchg
es
stc
lock
cmpsb
mov
movsl
sbb
cmc
inc
pop
daa
rcll
adc
pop
movsl
pop
fcom
xchg
rorl
mov
ss
outsl
es
pop
clc
mov
sub
pop
push
lahf
ss
pop
repz
fldenv
push
bound
xchg
jg
inc
insl
aam
jmp
faddl
or
dec
insb
inc
inc
dec
jnp
mulb
sbb
adc
sub
sbb
outsb
lea
mov
xchg
cmpsl
push
imul
mull
mov
pop
into
push
jbe
cmp
add
push
mov
shr
sub
or
negl
in
out
in
ljmp
dec
push
int3
fs
insl
xchg
adc
pop
cmp
and
out
xchg
dec
adc
and
dec
dec
pop
cs
imul
pop
aaa
stos
jmp
xor
call
lea
push
fsubrp
add
add
mov
lea
subl
das
push
and
jns
lcall
gs
leave
sti
or
fidivrs
jle
push
icebp
push
push
adc
faddl
mov
pushf
repz
sahf
outsl
rol
rclb
mov
lret
adc
bts
mov
lods
adc
mov
dec
std
and
or
sub
push
adc
je
stc
addb
in
test
push
mov
and
es
xor
xchg
mov
mov
push
loope
xchg
lods
jnp
in
pop
enter
fdiv
ficoms
add
lret
mov
data16
or
out
repz
jmp
fcompl
cs
xchg
add
inc
cmc
xor
test
xchg
sbb
inc
pushf
jnp
and
roll
nop
sbb
imul
mov
push
mov
fsubrl
aam
inc
aaa
into
or
ficoms
mov
hlt
push
dec
push
call
mov
pop
mov
test
push
out
and
push
je
jg
lods
cmp
pop
mov
and
imul
sbb
loope
inc
cld
pop
out
jbe
daa
jmp
cwtl
test
xchg
cmp
or
inc
nop
pop
mov
inc
cmp
aam
mov
das
sbbb
or
jns
mov
jmp
jle
and
cmp
movsl
icebp
push
hlt
sahf
mov
iret
xchg
jns
sbb
mov
pop
add
add
mov
adc
mov
js
test
imul
bound
cmpsb
push
sarb
add
pop
sbb
fwait
mov
inc
sbb
test
dec
dec
mov
loopne
das
inc
rclb
int3
inc
loope
in
outsl
jp
mov
pop
outsl
add
mov
pop
lret
fiadds
xchg
stos
inc
ret
inc
subl
cltd
hlt
mov
and
into
adc
scas
scas
mov
lret
jp
into
dec
iret
and
adc
or
popa
arpl
aam
xchg
out
inc
cmc
and
les
cli
mov
jge
dec
icebp
testb
mov
adc
inc
stos
shll
or
fistpl
dec
fsubl
test
ret
push
int3
fwait
in
pop
fsts
and
shr
lods
mov
push
xorl
pop
push
xchg
cmp
push
xchg
daa
dec
stc
push
adc
pusha
xor
inc
fnstenv
push
fucomi
mov
daa
jmp
fiadds
outsl
shl
cmp
xor
in
mov
fisubrl
imul
cmp
mov
mov
pop
repz
push
add
dec
cmp
sarb
pop
mov
es
iret
aaa
les
inc
movsb
insl
sub
dec
pop
outsl
hlt
js
pop
stos
xchg
shlb
and
cwtl
mov
sti
xor
dec
sarl
adcl
sub
mov
inc
adc
addr16
lea
or
popa
jecxz
xchg
adc
aaa
xlat
add
test
inc
mov
icebp
mov
dec
xor
ret
add
es
xlat
stos
sub
in
stos
cmpsl
xchg
cmp
lock
mov
mov
xlat
sbb
ds
mov
imull
xchg
ss
and
shrl
inc
pushf
ss
pop
mov
and
adc
mov
mov
aam
and
shrl
rorl
add
cmp
cmp
imul
dec
cmp
pop
outsl
sub
cmp
nop
shrl
mov
insl
mov
fcomip
or
in
jnp
subw
mov
inc
push
xchg
xchg
and
shrb
ret
xchg
sbb
push
and
scas
inc
fistpll
fs
movsl
jle
mov
jg
push
sub
mov
imul
mov
test
pop
repz
fcoms
and
lahf
and
dec
sub
sub
jg
movsb
add
pop
jecxz
push
xchg
addr16
cmpsb
or
nop
mov
aad
dec
pop
sub
in
fsubrs
nop
sub
out
dec
std
mov
das
insb
inc
xlat
repz
insl
lahf
pop
cmc
shl
xor
lods
cmc
movsl
js
ficompl
mov
mov
add
dec
movsb
adc
incl
outsl
jge
mov
addl
aaa
sti
mov
xor
stos
call
jne
ljmp
ds
ja
sbb
cld
push
push
ds
jmp
ret
andl
adc
rorb
pop
loop
daa
clc
movsb
cmp
sbb
xchg
xchg
nop
stos
in
lahf
in
mov
adc
xor
sbb
leave
mov
sub
mov
push
jae
pop
imul
aaa
add
call
scas
inc
ds
dec
or
fmulp
fs
mov
lret
add
sahf
inc
sub
mov
cmp
es
sahf
mov
mov
int
fidivrl
lods
push
jb
lret
mov
push
pop
nop
push
pop
xchg
add
cli
mov
ret
sbb
cmp
lcall
fnsave
mov
fs
rorl
dec
push
xchg
lcall
add
je
out
mov
mov
test
or
xlat
shll
je
cmc
sbb
test
jecxz
xor
cmp
fs
addr16
sub
fisttpll
and
call
sbb
mov
sbb
scas
dec
cmp
shrb
xor
pop
inc
leave
push
push
cmpsl
push
lea
xchg
cmc
mov
pop
mov
adc
pop
jae
shl
add
ret
cltd
push
xor
xor
enter
cmpsb
and
shrl
inc
lcall
rcr
jbe
shl
or
sub
and
test
xlat
outsb
mov
inc
cmc
mov
ljmp
mov
add
mov
leave
lock
gs
int3
inc
scas
push
call
mov
rorb
call
add
iret
adcb
dec
and
pop
repnz
nop
imul
stos
sub
pushf
sbb
iret
fs
inc
xchg
jge
rclb
mov
xchg
lret
je
dec
cmp
push
scas
inc
push
cld
js
imul
rorl
xchg
xlat
xor
popf
stos
jge
mov
xor
cwtl
call
cmp
add
fimuls
or
iret
lcall
out
icebp
inc
out
mov
push
pop
xor
mov
push
bound
aam
add
inc
mov
jae
jb
outsl
js
cltd
repz
and
adc
jae
mov
push
cltd
adc
sbb
sbbl
mov
icebp
popa
xchg
mov
mov
xor
hlt
mov
mov
data16
in
xchg
sub
jp
add
cmp
and
fmuls
pop
test
int
sub
fbstp
andl
gs
lods
test
xchg
popf
fcmovnb
in
stos
cmp
adc
fidivl
inc
mov
pop
mulps
adc
movsl
fsubl
pop
xchg
mov
pop
mov
popf
lods
pop
jmp
sbb
dec
and
mov
mov
add
cmp
in
mov
jl
sbb
pop
add
pop
and
leave
jle
sub
lock
jmp
test
in
push
dec
shll
pop
ja
aad
je
fs
js
mov
jbe
stos
and
cwtl
xchg
inc
sub
je
cmp
mov
mov
cmpsb
in
adc
enter
push
int3
jg
stos
stc
je
in
out
fidivl
hlt
idivb
into
subl
shlb
or
dec
xchg
sub
rcr
push
cmp
test
outsb
mov
fildll
dec
mov
inc
sub
jae
xor
mov
mov
xchg
jecxz
or
sbb
lahf
test
and
in
jmp
gs
add
inc
cmp
pop
icebp
or
popf
fisubrl
and
ret
in
add
mov
ret
pop
push
fwait
hlt
dec
xchg
sbb
outsl
jecxz
std
clc
inc
into
and
rcll
ficoms
push
mov
lods
and
test
add
jmp
fsubp
mov
testl
or
dec
mov
loop
inc
outsl
das
mov
je
mov
push
stc
push
pop
lcall
dec
push
pop
rorb
jle
loopew
mov
gs
jno
and
je
lds
cmpsb
idivb
mov
stos
inc
cmp
push
rcrb
shlb
and
cmp
jbe
fstl
aad
jl
add
lea
jecxz
mov
push
mov
fimuls
test
mov
dec
mov
mov
movsb
dec
cwtl
sub
andl
jae
dec
adc
mov
pop
mov
xor
cmp
or
push
test
sub
cmp
mov
push
loop
lods
pop
lret
mov
in
das
inc
xchg
icebp
clc
cmp
xchg
in
or
and
push
into
fcoml
ficoms
xor
js
mov
pop
out
add
lock
and
add
sub
stos
push
int3
or
lcall
cwtl
mov
sub
push
xchg
push
jae
xchg
lock
fidivl
add
loopne
out
sub
pop
push
dec
scas
inc
jnp
movsb
mov
push
mov
dec
jbe
mov
fmull
xchg
out
jne
adc
pop
lahf
jl
aaa
sub
push
lahf
aam
out
jp
scas
dec
cmp
mov
push
xchg
dec
mov
sbb
cmp
sbb
stos
xchg
aaa
dec
iret
lret
cld
lock
jns
dec
out
lcall
loop
movsb
jb
add
mov
das
cmc
mov
pop
cmp
cli
ds
mov
fsubrs
add
aad
cmpsl
dec
nop
jns
xor
mov
mov
push
nop
push
je
fpatan
out
and
jno
imulb
mov
inc
popf
mov
stc
into
mov
jbe
lods
pop
add
adc
mov
lret
aam
shll
mov
dec
mov
mov
arpl
xor
aam
jno
mov
add
push
movsl
adc
dec
xchg
ja
cmc
jl
daa
inc
xor
leave
push
pop
aad
mov
adc
mov
stc
fs
int
leave
pop
test
inc
pop
bound
movsl
adc
enter
dec
stc
cmpsl
call
mov
outsb
dec
lods
imul
dec
xchg
daa
outsb
mov
sub
push
pop
xchg
bound
mov
cli
push
lods
fdivrl
leave
xor
pop
mov
mov
rcrb
or
sbb
or
xchg
push
ss
jl
mov
loop
mov
out
inc
popa
and
push
sbb
leave
mov
ret
sbb
inc
sti
movsb
iret
pop
scas
mov
sbb
adc
sbb
pusha
dec
mov
call
adc
loope
jge
cli
jae
and
faddl
mov
jbe
das
jo
add
test
jmp
addl
rorl
nop
mov
test
mov
mov
sbb
dec
mov
pop
scas
insb
sbb
dec
sub
int
cmp
cmp
xor
mov
pop
and
lods
sbb
popf
mov
sbb
add
sarb
sub
pop
lahf
cmp
fnstsw
mov
fwait
sbb
cltd
inc
push
adc
cmp
in
test
cmp
ret
or
cmpsb
mov
xchg
in
push
inc
and
fwait
outsb
negl
stos
jecxz
shlb
ds
xchg
xchg
roll
sub
pop
push
mov
mov
ss
pop
mov
fisubrs
push
xchg
jge
call
and
and
mov
jle
mov
inc
repnz
cmp
cmc
das
cmp
sarb
pop
adc
mov
add
fcoms
bound
adc
sbb
pop
das
lret
insl
jg
sub
push
sarl
xchg
bound
lods
mov
pop
stc
scas
jp
shrl
lds
hlt
mul
pop
lcall
adc
lret
fdivl
xchg
stos
and
addb
into
xor
jmp
or
adc
and
cld
cwtl
jge
mov
es
ret
and
cltd
mov
sti
jbe
cli
pop
dec
dec
cld
cmc
pmulhw
inc
mov
push
ss
xchg
xor
orb
mov
xchg
push
jae
fdivl
xchg
mov
xlat
xchg
bound
adcl
adc
jo
jb
pop
mov
out
and
inc
adc
pop
pop
jp
stos
jmp
sbb
outsb
js
dec
test
push
shr
add
call
adc
call
cmp
jnp
sbb
scas
into
std
icebp
mov
mov
xor
push
fisttpll
mov
pop
icebp
mov
adc
jmp
shrl
hlt
lcall
ret
cmp
jbe
xchg
and
cltd
mov
lahf
data16
mov
mov
out
into
sbb
adc
cltd
dec
xor
sbb
ficomps
movsb
cmpsl
loopne
popf
and
in
jle
in
xor
mov
test
inc
cmpsl
sbb
pushf
or
xchg
sub
mov
and
inc
xor
cmp
mov
rsm
cmp
mov
mov
pushf
pop
fsubr
mov
nop
jmp
icebp
mov
and
fistpl
sti
adc
cli
fs
xchg
sbb
shlb
mov
xor
in
mov
imul
mov
jnp
mov
inc
xchg
xor
pop
mov
xchg
loop
cmp
mull
shll
fsub
stc
add
mov
pop
xchg
sub
lret
mov
cmp
movsb
insb
scas
lea
fistpll
daa
pop
out
pop
and
cmp
mov
pop
jnp
sub
xchg
push
or
mov
ss
adc
out
pop
mov
xor
mov
push
jae
and
orl
jle
xchg
aaa
dec
xor
and
orl
mov
ret
xor
out
sbb
das
ljmp
sbb
mov
cld
mov
pop
sub
insb
mov
sarl
sbb
adc
pop
movsb
jecxz
mov
ret
js
lret
imul
mov
push
subl
inc
add
jl
pusha
or
fstpt
mov
dec
adc
mov
dec
pop
adc
flds
fs
imul
fcmovnbe
pop
imul
add
lods
mov
sub
mov
ret
add
out
call
push
pop
hlt
xorl
aad
icebp
xchg
mov
test
cmp
test
jno
nop
sbbl
fadds
xchg
test
out
popa
js
stos
push
movsl
xchg
jno
ret
push
sub
or
mov
fbstp
int3
sbb
xchg
mov
pusha
aas
shrb
fimull
in
clc
push
mov
mov
test
rcr
les
cmp
inc
mov
dec
mov
in
and
test
test
stc
ljmp
mov
aad
jne
sbb
mov
fmulp
xchg
addr16
cmp
mov
fisttpll
call
fidivl
jb
lds
xor
xchg
add
add
sub
vmulss
pop
mov
sub
cmc
repz
xorb
adc
pushf
or
xor
shlb
mov
xor
inc
lahf
arpl
call
cmp
mov
repnz
mov
cmp
mov
pop
lahf
aaa
enter
add
dec
dec
pop
into
mov
or
test
les
push
sbb
jl
cmc
in
out
or
mov
push
outsl
test
dec
ret
icebp
data16
add
push
jnp
inc
lods
js
push
ret
push
adc
dec
or
and
jecxz
test
scas
fnstenv
out
ss
add
inc
cltd
xor
push
cli
cltd
or
mov
cmp
push
mov
call
jmp
and
rol
adc
dec
pop
outsb
cmpsl
sbb
jecxz
nop
lds
aaa
pop
adc
and
nop
push
je
adc
mov
loopne
jge
pop
hlt
mov
idivl
stc
mov
pop
mov
mov
call
aas
bt
lock
loop
lret
xor
inc
mov
call
ljmp
add
mov
inc
add
cmpsl
stc
adc
mov
xor
pop
ret
adc
push
add
cmpsb
stos
repz
or
les
push
xchg
out
mov
or
dec
stos
inc
jl
ja
aam
push
out
pop
mov
jg
int3
call
xchg
push
out
sti
nop
std
rolb
cmp
repnz
mov
push
add
pop
emms
add
push
dec
add
push
je
and
sti
xor
sarb
imul
fildl
lret
dec
jno
repz
fs
xchg
pop
not
in
sub
mov
jo
add
push
jbe
arpl
xor
inc
push
push
pop
scas
push
mov
mov
adc
mov
ret
scas
and
vfmsubpd
and
cltd
sbb
aaa
sub
stos
clc
paddusb
loopne
jbe
jle
pop
loope
xchg
idivl
mov
mov
push
push
je
dec
stos
test
pop
in
or
call
adc
jecxz
lock
cwtl
stos
hlt
push
sub
or
adc
push
mov
daa
push
cmp
scas
ret
in
in
dec
out
jae
sbb
push
mov
pop
fldl
cmpsb
inc
lcall
xor
es
mov
pop
dec
dec
aad
jo
push
xchg
cmp
mov
xchg
stos
fnstenv
lret
insb
out
into
xor
inc
lods
in
sub
inc
push
inc
push
xor
add
push
dec
clc
pusha
mov
das
jo
popa
bound
mov
jp
mov
push
sbb
pop
std
fptan
and
scas
out
jmp
dec
rolb
mov
stos
cltd
xor
push
sub
out
dec
mov
inc
test
inc
sbb
insl
xor
or
pop
cmp
scas
or
fidivl
iret
test
jnp
sbb
fisubl
das
sbb
mov
and
jmp
xor
dec
adc
sbb
popa
daa
rcl
mov
or
nop
adc
inc
lret
mov
lods
jnp
sahf
inc
or
movsb
mov
cmc
mov
mov
shll
shl
gs
ljmp
push
dec
cmpb
mov
jl
lods
mov
lcall
mov
out
orl
pop
ds
xor
ja
pop
movnti
lcall
jge
xor
jle
dec
mov
mov
mov
movsl
add
movsb
bound
pop
scas
pop
xchg
mov
mov
sub
je
add
push
movsl
jecxz
mov
mov
sub
push
pusha
mov
pop
mov
lahf
hlt
mov
or
adc
jno
lock
pop
push
pop
shll
cmpsb
and
out
cmpsl
sbb
arpl
add
cmp
mov
mov
cmpsl
les
lret
fsubrp
sbb
push
imul
push
lock
movsb
dec
adc
daa
jae
pop
xor
fidivs
inc
mov
pushf
icebp
xor
bound
cs
adc
loopne
mov
aad
sbb
inc
bound
lds
mov
ds
cmp
push
add
rorb
loope
je
sub
stos
sub
push
mov
test
or
mov
pop
sub
push
lock
sti
stc
test
dec
dec
out
mov
lods
hlt
mov
adc
mov
daa
jb
test
adc
repz
aas
mov
dec
dec
call
or
popa
sub
cli
xchg
fsubl
or
rcrl
cltd
notb
inc
cmp
inc
insl
sbb
and
push
jbe
imul
add
popa
das
cld
inc
adc
xchg
shrl
sbb
dec
push
outsl
xchg
ret
repz
cmpb
arpl
pop
xlat
adc
pop
jecxz
jb
rorl
xchg
cwtl
push
or
scas
shlb
dec
mov
sub
testl
xchg
dec
xchg
pop
lcall
push
or
and
pop
and
in
add
lret
icebp
mov
iret
pop
inc
inc
push
mov
sbb
mov
test
dec
adc
jl
lret
imulb
scas
inc
mov
add
mov
sti
sbb
dec
js
push
cmp
and
xchg
dec
pop
or
lcall
xlat
or
push
test
ret
mov
xor
add
dec
add
nop
push
lret
sub
loopne
mov
faddl
cmp
mov
scas
mov
fistpl
sbb
add
xor
push
lock
mov
je
in
shll
roll
xchg
jb
push
in
xor
sub
pop
ret
in
fadd
inc
mov
lds
jne
in
fisttpll
xchg
es
bound
iret
fistl
int3
mov
push
outsl
mov
call
jge
les
out
test
test
xor
js
js
addb
gs
int3
cmpsl
pop
cmp
sub
cmp
mov
not
aam
cmc
inc
fsubl
cmovo
pop
mov
jne
pusha
mov
and
aad
adc
mov
xor
and
fisubrs
xchg
sbb
ret
mov
int
popa
fsubrl
pop
sub
sub
mov
xlat
xor
inc
clc
negb
push
scas
jecxz
mov
cltd
scas
mov
dec
pop
loope
sti
fwait
sub
jmp
xchg
push
xorb
fldcw
adc
daa
pop
mov
cmp
vpsllw
lods
out
dec
inc
mov
cmp
lret
push
sub
cmc
shr
pop
add
mov
pop
ret
pop
inc
push
aad
mov
shlb
adc
mov
mov
inc
pop
stos
nop
movsl
int3
push
jge
adc
in
sbb
dec
lds
imul
call
fidivs
sbbl
mov
shrb
inc
je
cli
mov
lret
mov
popa
and
dec
idivl
lcall
movsl
cmp
mov
aaa
pop
xor
daa
mov
cs
inc
faddl
pop
outsb
cmpsl
push
stc
aas
xor
or
jno
dec
in
adc
imul
jae
movsb
push
into
mov
sub
mov
out
xor
ret
push
in
lods
push
in
fisttpll
jae
lods
sbb
lds
inc
sti
jnp
push
aas
pop
mov
jmp
into
push
in
pop
imul
movsb
mov
dec
push
mov
mov
movb
adc
stos
dec
xchg
scas
jbe
cmc
mov
jecxz
mov
jno
cmp
shl
les
xchg
imull
insb
add
fcmovbe
stc
adc
fsubr
enter
fiadds
and
push
mov
cmp
dec
push
mov
out
jecxz
mov
push
add
ds
faddp
sub
leave
jmp
mov
and
jmp
xor
andb
xlat
mov
pop
jmp
cltd
sub
rolb
sbb
cmp
or
enter
in
mov
lcall
xchg
pop
out
enter
and
mov
negl
and
push
sbb
or
mov
or
das
cmp
scas
fidivrs
js
jns
movsl
or
inc
jns
jns
stos
rorl
jecxz
loope
pop
adc
repnz
mov
and
dec
fisttps
mov
scas
inc
lahf
shlb
mov
testb
pushf
adc
mov
pop
xor
stos
loopne
sti
arpl
lock
mov
andl
imulb
and
rcrl
fcmovnb
pop
lods
addb
sub
out
std
xchg
jno
xchg
dec
xor
sbb
push
fists
int
adc
mov
addr16
leave
out
test
ds
outsl
cmp
jns
bound
dec
dec
leave
mov
and
mov
imulb
ret
push
xorb
loopne
adc
sbb
mov
add
pusha
loope
jne
adc
into
xchg
subl
cli
jne
shrl
or
sbb
add
mov
dec
mov
push
xchg
not
sbb
aad
push
and
imul
xchg
gs
lret
sti
or
leave
add
cmp
jmp
fldl
movsb
mov
or
inc
popa
mov
pop
sbb
ds
mov
sub
ret
jnp
cmp
sub
mov
and
ror
xchg
add
push
ljmp
cmp
add
stos
and
fsubrl
pop
mov
cmp
idivb
push
add
add
icebp
pop
adc
movsl
stos
dec
jmp
jae
pop
fmull
mov
lock
das
inc
in
xor
push
imul
adc
push
cmp
js
rcr
insl
pop
divl
jmp
shll
pop
cmp
mov
cmpb
add
push
push
jmp
push
out
mov
divb
cmpsb
mov
mov
pop
or
inc
inc
mov
xor
sub
aam
adcl
or
sbb
fidivl
add
cmpsl
andb
xchg
lcall
rorl
arpl
mov
jne
je
hlt
mov
cmc
jge
insb
lcall
lcall
or
aam
bound
push
movsb
das
mov
inc
cwtl
popf
add
bound
cmc
and
xor
in
test
sbb
testb
shrb
jge
push
mov
cli
sub
add
cmovle
xor
or
mov
mov
ret
ds
fiadds
dec
mov
and
fs
shll
or
jl
imulb
cmp
mov
or
xchg
xor
pop
jmp
out
outsb
mov
mov
and
jnp
mov
test
push
js
xchg
cmp
push
xor
pop
test
test
mov
xor
test
dec
add
aam
push
sbbb
sahf
loopne
jle
shll
sub
xor
lods
jne
test
sub
jmp
ss
mov
pop
test
les
stc
sbb
sub
xor
jge
pushf
adc
cmp
test
cs
adc
pop
lret
nop
pop
push
hlt
inc
xchg
addr16
xor
inc
std
mov
xor
pushf
mov
pop
mov
imul
js
sahf
ljmp
in
push
mov
enter
cmp
ret
sbb
or
loopne
add
fisubrl
jecxz
or
nop
lods
mov
or
fs
dec
fstpt
lods
dec
mov
test
xchg
repnz
push
add
cmpsl
test
out
ss
and
int
jmp
js
adc
ja
sbb
decb
sbb
inc
inc
stos
ljmp
cmp
fsubl
inc
js
sbb
stc
jp
jbe
xor
cmpsl
cmp
dec
je
jge
mov
icebp
cmp
int
sahf
mov
lret
jge
dec
mov
mov
xchg
scas
movb
jno
pop
pop
dec
mov
dec
enter
out
lea
div
pop
icebp
inc
sahf
or
xchg
jb
mov
jg
cltd
xor
inc
daa
bound
add
push
sub
xlat
and
jno
xor
mov
lods
pop
loope
nop
int
fidivrl
lret
inc
insb
mov
xor
xchg
dec
mov
jp
test
shr
icebp
leave
or
sti
push
pop
mov
xchg
cmpsb
inc
mov
cmp
out
addr16
outsl
inc
sbb
inc
cmpsl
fisttps
xor
test
add
decb
je
mov
mov
cmpsb
test
fdivs
cmc
pushf
arpl
dec
inc
mov
push
inc
jmp
test
cwtl
ds
dec
ficompl
inc
cmp
push
ljmp
jno
loopne
mov
stos
std
aam
nop
mov
out
loope
push
aam
repz
aam
movsb
push
fldenv
jne
and
popa
cmp
and
cmpsl
mov
cld
lcall
imul
xlat
rcrb
inc
add
sbb
mov
int3
ret
call
sbb
inc
gs
mov
ficoml
leave
es
jp
cmpsl
popf
flds
xchg
pop
sbb
cmpsl
not
scas
lods
insl
sub
stc
xlat
jbe
mov
and
adc
lock
inc
loop
nop
aam
sbb
add
mov
cmp
aas
cmpsl
cmp
pop
shr
repz
mov
cld
fsubrl
js
fstps
js,pn
pop
mov
je
loopne
xchg
push
push
sti
scas
dec
std
and
in
outsb
ds
pop
dec
mov
enter
mov
mov
jo
es
decl
mov
movsl
xor
cmc
movsl
push
jge
loope
adc
in
cmp
sub
test
das
test
jge
jnp
rclb
mov
aam
shl
ret
scas
mov
cmp
fcmovu
test
in
or
cmp
xorl
push
dec
dec
mov
push
les
dec
rcrl
arpl
lret
dec
fdiv
mov
cmp
jmp
fildl
cmpsl
pushf
sbb
int
andb
add
pop
repnz
jns
enter
fistpll
xchg
sti
scas
out
lock
inc
xchg
inc
and
adc
das
and
mov
lcall
loope
dec
sub
ja
out
mov
dec
pusha
or
xor
sbb
inc
popf
xor
cmpsb
in
fcoms
or
cli
ror
jbe
sbb
fidivl
mov
std
aad
pop
shr
call
in
mov
fsts
pop
addr16
mov
test
add
or
xchg
pop
push
or
sub
mov
cmpsl
cmp
sbb
inc
push
in
xor
cmc
xor
or
outsl
mov
add
mov
xor
xchg
mov
imul
or
test
sbb
jnp
cs
in
sarb
mov
arpl
push
jmp
push
outsl
jo
jge
inc
xchg
pop
or
lods
xchg
jg
pop
add
scas
jp
sbbl
xorl
rorb
test
cmp
imulb
cwtl
mov
fcoms
add
push
icebp
cmp
xor
js
xchg
and
rorb
push
dec
in
movsb
push
mov
jg
lahf
mov
push
xchg
push
push
mov
dec
imull
add
xchg
in
pushf
es
inc
mov
pop
testb
fldcw
jge
shll
outsb
mov
repz
sub
movsb
inc
scas
add
addr16
or
xchg
mov
lock
mov
fs
xchg
das
insl
dec
int
pop
negb
sbb
rorb
inc
mov
mov
inc
mov
mov
pop
ret
xor
sti
pop
test
sub
push
and
dec
push
std
inc
cmpsb
les
sub
fstpl
arpl
sbbb
movsb
lods
dec
out
mov
shrb
mov
and
add
pushf
push
pop
dec
and
pop
inc
scas
xor
lea
cmp
shrl
pop
push
push
int
sub
jl
cmc
inc
fcmovbe
rcll
adcl
inc
add
xchg
inc
call
mov
adc
inc
cmp
push
and
and
xor
cmc
insl
out
outsb
imul
or
mov
int
pop
insl
mov
shl
mov
jo
adc
ss
mov
dec
loop
cmpsl
insb
cmp
mov
repnz
or
mov
xchg
sbb
xor
xor
mov
fcomip
std
jl
push
xor
add
push
inc
add
bnd
stos
inc
int
dec
out
add
inc
int
mov
rol
decl
sub
pop
or
lahf
inc
test
movd
jo
push
or
sbb
jmp
mov
data16
aas
mov
xchg
inc
lcall
pop
inc
sub
jb
cmp
data16
std
inc
sbb
xchg
cmp
fwait
sbb
cmpsl
cld
jo
cmp
fcomp
cmp
out
clc
cwtl
mov
adc
sub
jae
pop
int3
pusha
mov
xchg
in
fistpll
mov
hlt
jns
cld
rcrb
jnp
mov
sbb
sub
stos
pop
enter
mov
mov
rclb
pop
xor
je
and
stos
lahf
fcompl
mov
pop
scas
push
call
movsl
aaa
xchg
lods
dec
dec
mov
jl
je
mov
mov
filds
aaa
in
orb
pop
ljmp
pushf
lds
push
pop
roll
dec
pop
xchg
pop
pushf
test
rcrl
pop
dec
loop
jg
jle
mov
push
dec
sbb
adc
pop
shl
movsl
incl
ss
dec
mov
pop
ds
movsl
pop
lret
xor
or
xchg
mov
pop
jg
nop
les
dec
pop
push
mov
outsl
or
pusha
sbb
gs
mov
cmovg
loopne
je
add
adc
mov
or
mov
jge
jae,pt
cld
lea
shrl
into
cmpb
xor
lahf
dec
cld
loope
sub
mov
add
sahf
add
sbbb
mov
sub
inc
out
mov
push
mov
leave
or
mov
xchg
lods
push
adc
ss
xor
pushf
jp
mov
fidivrl
or
dec
and
aad
mov
subl
out
ret
adc
bound
mov
inc
cmpsb
cmp
pop
jg
add
andl
test
test
out
pop
js
dec
mov
sub
sub
fidivrl
flds
in
mov
fsubp
daa
hlt
mov
xchg
arpl
push
mov
xorb
push
push
daa
lods
sti
inc
jb
stos
mov
fdivl
mov
dec
es
cmpsl
cmpsl
out
lret
dec
adcb
pop
lods
hlt
sub
cld
push
ret
subb
pop
xchg
mov
add
mov
sti
enter
mov
mov
push
sub
mov
aas
in
cmpb
movsb
imul
sbb
jne
or
pop
and
xchg
sbb
inc
mov
gs
ss
inc
and
jmp
fistpll
icebp
test
sbb
mov
movsb
les
xlat
mov
pop
jmp
mov
outsl
or
add
sbb
mov
and
add
mov
out
mov
jmp
lds
jne
fistpll
dec
pop
xchg
negl
sbb
out
xchg
cmp
xchg
xor
sub
leave
hlt
xchg
xlat
push
mov
mov
repz
pop
ret
decl
and
nop
mov
test
ds
jp
dec
inc
pop
clc
xor
sbb
cmp
xchg
bound
mov
addr16
pop
popa
into
nop
xor
flds
shrl
out
mov
push
sbb
jae
test
jle
nop
and
mov
add
lods
inc
lock
push
inc
imul
scas
pop
add
xor
mov
sbbl
sub
lcall
ret
sbb
ja
mov
cs
subl
xlat
arpl
pop
sbb
std
mov
testb
fidivl
out
sbb
dec
dec
aas
ss
ret
rcll
int3
mov
fidivrs
test
mov
test
lahf
rorb
daa
out
pop
loop
add
xor
dec
mov
xchg
and
mov
add
xchg
sub
adc
nop
mov
dec
rolb
je
mov
jmp
xchg
xlat
lret
cld
mov
pop
mov
dec
scas
ds
jno
mov
mov
push
cmp
ficoml
test
loop
arpl
push
sub
push
cmp
loop
add
or
dec
dec
or
lods
add
xor
lret
sbb
or
jecxz
sub
mov
jb
push
ficoml
negl
mov
rcrb
mov
repnz
call
cmp
adc
stos
ljmp
or
imul
mov
or
sbb
inc
mov
sbb
testl
outsb
std
pop
movsb
addr16
rorb
shll
out
inc
sarb
add
mov
or
push
adc
imul
sbb
ds
mov
mov
push
lret
loope
pop
fldt
std
push
repnz
cmp
out
lods
pop
xchg
ljmp
sub
pop
pop
mov
and
outsl
cmpsb
test
scas
leave
xor
add
jb
loop
push
clc
cmp
jle
jl
mov
mov
push
sbb
je
add
xlat
inc
test
stos
jp
das
adc
icebp
cmp
dec
or
bound
sbb
dec
testl
orb
ss
loope
sbb
jmp
out
jle
rcrb
decb
notb
sti
mov
mov
push
xlat
xor
sbb
daa
push
data16
pushf
push
adcb
fnstcw
push
push
jmp
and
jae
add
popa
shll
adc
or
mov
cli
cld
pop
cmc
mov
repnz
fldt
jmp
or
mov
cli
mov
ja
sbb
movsb
lock
rolb
pop
cmp
mov
sub
sub
cs
fistl
pushf
xor
jl
sahf
adc
sbb
ret
mov
jecxz
pop
test
dec
cmc
sub
pop
js
add
int
push
sbb
push
jp
push
insb
and
lods
int
dec
inc
push
cmpl
mov
mov
or
lahf
xor
inc
push
jl
jg
test
dec
dec
and
pop
js
shlb
dec
push
test
iret
cltd
mov
mov
lcall
inc
pop
lret
mov
sub
hlt
les
stos
repz
test
push
adc
repnz
cmp
test
and
push
dec
push
lret
fwait
xor
push
in
dec
xchg
fildl
iret
jnp
inc
mov
dec
mov
mov
xchg
arpl
movsl
add
pop
jno
jge
pushf
xchg
sub
testl
jne
xchg
push
movsl
pop
mov
jno
jg
dec
push
mov
xor
fnstcw
in
sbb
mov
inc
fdivrs
sahf
pop
movsl
mov
push
jle
sbb
pop
loope
ljmp
popa
out
cmpsl
mov
pop
lock
mov
loopne
ja
sub
stc
in
fnsave
nop
sub
mov
mov
mov
mov
inc
push
scas
or
in
inc
xor
xchg
sbbb
repnz
cmc
mov
push
inc
add
sub
subb
dec
std
lret
enter
enter
and
push
test
sbb
sahf
out
xor
ret
pop
loopne
dec
lods
adc
mov
cli
adc
sub
pop
icebp
data16
push
mov
hlt
dec
cmpsb
push
ret
cmp
aas
insl
pushf
jl
sbbl
popf
test
mov
cmpsb
add
daa
or
sub
imul
mov
mov
mov
cmp
jg
lea
jo
mov
add
sarl
fucompp
ja
fisubl
mov
gs
adc
adc
in
in
das
rcll
or
movsl
iret
stc
fistps
sbb
pop
int3
or
das
std
insb
cmp
push
push
mov
cld
mov
out
je
mov
cmp
fwait
jge
xchg
pop
inc
test
gs
push
cmp
mov
xchg
pop
adcb
pop
jno
call
faddl
add
popa
and
mov
int3
push
jg
sbb
xor
push
push
pop
repz
lea
into
nop
jnp
mov
out
dec
pop
inc
leave
add
mov
fwait
xor
push
stos
push
cwtl
pop
add
scas
out
pop
das
outsb
ss
rol
int3
jo
test
sti
xchg
fmuls
and
cmp
xchg
subb
cs
cli
jne
mov
and
test
mov
in
adc
jne
pop
idiv
cli
and
fld
xor
repnz
and
out
or
ret
and
stc
popf
push
push
mov
loope
jmp
mov
sub
mov
dec
sarb
sub
pop
jne
insb
scas
rcll
cwtl
mov
hlt
test
arpl
xor
sub
in
fs
cmp
nop
mov
fistl
lods
loop
push
cltd
mov
scas
jb
push
or
push
je
push
clc
jp
sahf
mov
push
out
cmp
and
xchg
mov
lea
fildll
popf
stc
ficomps
adc
jle
pop
in
push
lds
jb
cmp
sub
or
and
clc
push
dec
jae
je
shl
stos
lods
shl
ja
jae
cmp
in
mov
push
shr
jnp
pusha
xor
sbb
push
add
fstpl
mov
inc
dec
dec
add
mov
in
lahf
xor
jb
push
cmp
fwait
lea
sub
sub
xor
scas
in
inc
into
mov
mov
frstor
push
ret
imul
lds
mov
add
andl
sbb
movsl
lret
test
sub
inc
sbb
xchg
mov
mov
leave
mov
mov
lds
push
std
add
sub
or
and
jnp
pop
lods
xlat
pop
inc
les
fsubrp
sub
dec
test
loop
add
xlat
repz
cmpsb
jp
push
subb
or
ss
aad
mov
or
nop
and
test
cmpsl
imulb
std
jnp
mov
daa
jle
fcomi
jle
mov
xchg
pop
stos
push
mov
fisttps
lds
clc
xchg
lds
fwait
push
dec
xlat
ret
inc
xor
jbe
std
clc
cmpsl
addr16
fwait
pop
shl
push
push
jo
addr16
pop
lret
data16
mov
xchg
mov
outsb
jp
sahf
test
sub
js
push
lds
xor
inc
mov
in
mov
xor
lods
test
test
scas
orl
push
daa
mov
pop
xor
pop
lock
inc
ja
xchg
mov
jae
repnz
aaa
cmpl
xchg
scas
push
push
xchg
cmp
shrb
push
jle
shrb
mov
pop
jecxz
adcl
push
push
sbb
push
xchg
sbb
xchg
adc
mov
data16
lret
mov
pop
jns
dec
lahf
lcall
sbb
xor
clc
pop
mov
jle,pn
ret
xchg
in
mov
nop
lods
add
xchg
loope
xlat
push
and
clc
cmpsl
xchg
pop
mov
mov
pmaxub
pop
mov
fwait
lock
rorb
adc
sahf
pop
test
and
adc
or
mov
mov
in
insl
pushf
shlb
mov
sbb
lds
jp
stc
and
nop
jnp
pop
nop
dec
jne
fmuls
inc
into
xor
adc
add
es
movsb
mov
sarl
jne
bound
cmp
out
ret
mov
inc
outsb
fcos
xchg
add
xor
add
fs
jmp
add
test
stc
mov
cwtl
mov
mov
jns
filds
adc
mov
sbb
clc
mov
subb
add
dec
sahf
movsb
out
test
lcall
ret
stc
rorb
stos
iret
inc
aam
adc
lods
cmp
push
hlt
ret
add
out
cwtl
pop
jl
adc
mov
mov
lahf
insb
mov
dec
insl
fcomp
dec
or
cmp
pop
int
dec
inc
shrb
rcr
jl
icebp
dec
pushf
push
rcrl
shr
std
add
inc
or
jae
mov
mov
stos
pop
test
das
add
lods
jo
push
ljmp
cmpsb
call
mov
hlt
enter
lds
dec
adc
sub
xor
xchg
jecxz
inc
pop
out
mov
cmp
xchg
xlat
lret
lcall
stos
add
add
cmp
bound
and
sub
int3
inc
mov
dec
lods
or
xlat
jmp
adc
jmp
or
cmp
mov
push
ret
inc
push
jns
xor
cmp
stos
push
mov
xchg
inc
mov
aaa
xchg
cmp
mov
stos
cmp
adc
add
aam
inc
and
ja
fcoms
push
adc
pop
jmp
mov
inc
outsl
outsb
in
ret
mov
and
es
je
enter
jl
mov
test
adc
sbb
mov
cpuid
in
insb
call
idivl
popa
mov
iret
pop
rol
adc
dec
scas
rorb
enter
aas
stos
pop
lock
push
out
mov
rolb
and
xchg
dec
out
cmp
push
xor
in
das
xor
js
movsl
fcoms
jbe
call
mov
stos
fldt
ret
lret
mov
jne
icebp
push
out
cmp
jecxz
es
and
arpl
inc
cmpb
nop
in
addl
outsb
push
mov
es
enter
mov
pop
aad
lods
cmp
mov
add
cmpsl
sub
pop
mov
loopne
xor
add
xchg
das
mov
call
aas
mov
sub
pusha
and
cmp
inc
pop
out
dec
add
xlat
cmp
insb
sti
xor
lcall
jne
add
mov
push
xchg
nop
aaa
mov
mov
dec
test
dec
cmp
pop
movsb
rcrb
sahf
adc
and
hlt
sbb
push
jle
cmp
in
inc
or
lock
js
cmp
lret
nop
push
mov
pushf
mov
adc
out
xchg
stos
fidivl
leave
lret
fidivrl
loopne
xor
sbb
and
test
xchg
add
int3
das
and
mov
js
scas
out
mov
xor
lahf
adc
jge
push
scas
clc
out
outsb
incl
lahf
jbe
clc
sahf
int3
cmp
call
xchg
das
in
add
mov
mov
cmp
popf
rolb
mov
out
xchg
lds
jp
push
sub
lea
rep
inc
and
sbb
lret
cmp
data16
inc
mov
xor
add
bound
pxor
xchg
mov
adc
shll
in
out
in
cli
xchg
xor
push
sbb
mov
pop
xchg
cmp
cs
fldt
in
and
aaa
mov
cwtl
lock
push
inc
add
push
and
jmp
ljmp
insb
aas
cmp
decl
lahf
movb
clc
push
mov
sbb
dec
jmp
jg
or
out
mov
and
lret
addr16
ja
ret
aaa
sbb
outsl
std
insb
fidivs
push
pop
mov
mov
ret
popl
mov
mov
pushf
add
push
pop
aam
dec
cli
inc
popf
sar
cmp
sbb
cmp
push
out
cs
dec
dec
jp
jne
and
jecxz
xorl
je
xchg
cmp
xlat
pop
lahf
dec
rcll
cmpsb
jl
sbb
pop
mov
jg
pop
les
xor
ret
jp
push
fcomps
pusha
sub
shrl
inc
xlat
ja
or
pusha
cltd
inc
push
mov
xor
popa
xor
clc
clc
or
mov
push
xor
jmp
lret
loopne
nop
sub
dec
aad
and
lds
sbb
xor
pushf
jecxz
in
mov
fldcw
fcmovu
pop
push
mov
dec
xchg
es
leave
mov
mov
push
into
lret
bound
cs
repnz
mov
fwait
sub
fsts
decb
xor
imul
imul
in
jl
or
sarb
mov
loopne
push
iret
clc
iret
jnp
push
inc
in
jo
and
clc
lods
or
push
lods
add
mov
pop
ljmp
push
std
mov
push
xchg
ljmp
pop
mov
mov
cmpsl
push
dec
xor
sub
adc
xchg
iret
stos
inc
es
cmp
fistpll
orb
add
dec
popf
xchg
mov
aam
add
out
in
les
aaa
leave
push
imul
mov
in
cmp
sub
pop
sbb
cmp
mov
jp
lods
pop
insb
enter
in
in
cld
and
fbld
test
clc
xor
xchg
or
jo
xchg
out
loope
xlat
inc
cmp
sub
push
mov
sub
loopne
add
sti
mov
jle
jbe
xorl
popf
cld
xchg
lods
mov
insl
jmp
sub
push
add
sbb
je
popa
adc
inc
cmp
sbb
sarb
mov
mov
jle
sbbl
lods
sbb
hlt
iret
and
aaa
fcoml
xchg
and
mov
sub
decb
inc
pop
adc
cmp
je
xor
inc
lods
outsl
fidivrl
adc
outsb
dec
pushf
xor
mov
call
mov
fildll
mov
outsb
sbb
pop
dec
lock
mov
mov
push
push
icebp
adc
addr16
push
cs
aas
sbbl
pop
scas
sahf
jbe
bound
int
adc
jmp
pop
sub
fnsave
lea
pop
repnz
lret
rorl
add
repz
adc
js
sahf
lea
push
and
popf
daa
jae
pop
mov
aam
cmp
inc
inc
cmp
fcmovnb
movsb
or
je
cld
leave
dec
mov
mov
push
shl
mov
pushf
jne
sbb
mov
pop
jmp
sbb
movsb
imul
faddl
xchg
je
pop
stc
notb
icebp
jl
xchg
popf
stc
mov
add
lods
lret
in
je
aad
arpl
and
or
cld
or
imul
aad
cmp
dec
mov
cmp
pop
loop
insb
js
call
dec
stc
popf
in
add
adc
add
repz
movsb
iret
xorb
aad
jle
inc
inc
and
xchg
mov
mov
push
mov
fsubl
push
xchg
lods
push
jle
mov
dec
add
xor
js
add
dec
cmp
fucomi
out
add
push
outsb
stos
cs
pop
int3
cmc
cmp
imul
mov
shrl
push
push
lahf
shll
and
jle
stos
mov
adcb
rcrl
pop
insl
add
jno,pn
jno
mov
clc
lea
dec
cs
push
cmp
jg
and
nopl
lods
pushf
sub
inc
mov
out
pop
xor
jmp
ret
lock
pop
xchg
push
cli
cltd
sub
push
or
jno
dec
adc
out
xchg
ret
shll
pop
mov
mov
lret
lret
ror
arpl
jecxz
mov
in
and
les
xlat
into
gs
mov
push
loop
test
or
xchg
sub
ss
cmpsb
mov
ficoms
xor
out
orb
jmp
push
adcl
pop
mov
fiadds
add
bound
xchg
in
loop
aad
mov
jno
adc
xchg
inc
mov
out
mov
xchg
push
test
lret
out
mov
dec
and
int
outsb
pop
cmp
out
jecxz
mov
pusha
hlt
add
xchg
hlt
lret
jb
sbb
cmc
and
enter
clc
cs
sub
mov
or
dec
sti
out
mov
cwtl
pop
sbb
cmp
stc
popf
rcll
sbb
mov
lods
mov
rcr
xchg
fstps
dec
sub
insl
test
and
lret
push
add
js
add
ret
in
jo
push
in
jbe
adc
inc
lahf
sub
sbb
dec
adc
push
push
jnp
lea
sbb
cli
sahf
imul
xor
jle
mov
loopne
es
mov
push
imul
jecxz
xor
cmpsb
inc
sarb
pop
dec
pop
cmp
popf
mov
fs
cmpsl
xchg
adc
add
scas
dec
lods
jmp
jne
sarl
jo
cld
inc
out
inc
xor
adc
jne
out
dec
xchg
neg
outsl
into
mov
push
cwtl
mov
xchg
addl
lock
lret
jbe
and
cs
stos
and
push
ret
sbb
push
inc
xor
mov
dec
test
outsl
jbe
adc
out
mov
sarl
mov
orb
cmp
mov
mov
mov
in
std
nop
inc
jecxz
ljmp
push
mov
mov
js
lock
sbb
imulb
inc
cld
add
mov
cld
stos
fisubrl
or
sub
xchg
in
add
mov
cwtl
gs
pop
mov
add
pop
xor
sbb
int3
addr16
adc
or
mov
xchg
add
outsl
int
js
test
mov
sub
rclb
xor
inc
in
cmp
cmp
pop
cmp
inc
sbb
leave
jecxz
shrb
lahf
mov
xchg
pop
dec
mov
mov
sbb
pusha
pop
sbb
leave
pusha
dec
push
jb
xchg
sub
ja
cmp
test
movzbl
sub
or
lret
fidivs
and
leave
mov
push
scas
out
fucomi
das
dec
jnp
call
jmp
mov
scas
xchg
jecxz
dec
sbb
inc
ss
lods
xchg
jmp
xchg
inc
mov
or
xchg
xchg
in
or
shll
fcmovnu
mov
add
push
fsubs
mov
jbe
lods
and
mov
sub
jbe
adc
inc
jne
dec
adc
call
fisubrs
cwtl
pop
scas
xchg
push
adc
jbe
and
mov
mov
add
lret
add
lock
movsb
scas
lret
negb
pop
mov
shl
jle
dec
push
adc
scas
xor
xor
arpl
outsl
loop
add
sarb
imul
xchg
sahf
sar
not
pop
xor
imul
mov
mov
and
mov
into
rol
and
mov
stos
mov
xchg
jp
sbbb
loop
and
dec
adc
jb
loop
jmp
dec
and
pushf
push
out
cli
dec
pop
daa
push
jno
inc
out
push
ds
mov
push
sub
and
xor
testb
mov
ret
sub
jp
sbb
nop
cmp
lret
setge
cmp
out
add
inc
or
orb
add
xlat
icebp
scas
jle
sbb
fwait
cs
jo
icebp
subl
cmp
jbe
xor
xchg
aas
mov
mov
shll
xor
into
xlat
sub
jo
jbe
xchg
mov
call
push
pop
jo
mov
mov
mov
sbb
pop
jo
lea
out
fs
test
and
clc
pop
cmc
aad
cmp
sbb
dec
lret
loop
push
movsl
pop
push
lret
mov
shl
adc
add
mov
or
mov
inc
push
or
test
shr
mov
repnz
jne
ss
jns
inc
fucomi
add
and
imul
dec
or
out
ja
lock
cmc
lock
lcall
dec
pop
and
inc
loopne
xchg
mov
dec
gs
movsb
outsb
jmp
lret
loope
popf
inc
jmp
or
mov
pop
stos
mov
jbe
adc
aam
mov
js
xchg
pop
loop
fnstenv
stos
popf
dec
aad
fmull
ret
fwait
pop
adc
mov
inc
add
hlt
pop
shr
enter
lahf
in
std
pop
cmp
xchg
aas
out
push
and
mov
push
sbb
jnp
inc
mov
out
mov
mov
jno
push
sahf
loope
or
addb
lret
jbe
inc
push
push
aad
std
inc
adc
fildll
mov
imul
push
addb
xor
lcall
push
xchg
lods
mov
stos
jmp
pop
sub
adc
pop
xor
xor
repz
lahf
jl
xchg
jns
add
call
cwtl
add
arpl
mov
xchg
aad
cmpsb
push
addr16
adc
or
shlb
mov
pusha
jecxz
dec
push
inc
cmp
fwait
jno
call
fwait
dec
mov
push
insb
add
jecxz
cmp
loop
test
pusha
pop
jecxz
dec
push
jmp
cmp
push
outsb
sbb
ror
and
ljmp
sub
aaa
or
mov
xchg
sub
fnsave
mov
jbe
fs
stos
inc
and
xchg
push
mov
stos
ss
aaa
inc
jecxz
add
pop
jle
mov
ljmp
das
add
ret
shl
fmuls
pop
push
popa
ja
mov
push
cmpsl
xchg
or
stos
sti
mov
in
lock
popl
push
cld
daa
test
xor
mov
fbstp
out
xchg
shl
mov
sbb
loope
fnstenv
das
ficompl
adc
repnz
insb
ret
jno
jbe
loopne
dec
flds
adc
xor
std
lret
test
fmull
push
push
and
and
pop
xchg
lods
cmp
add
dec
xor
mov
or
mulb
and
lea
adc
dec
mov
shll
add
cltd
push
outsl
data16
pushf
insb
leave
test
mov
dec
mov
push
aad
shrb
xchg
mov
loope
dec
xchg
mov
aam
cmp
sbb
lcall
add
pop
mov
jecxz
dec
mov
inc
inc
ficomps
mov
mov
lret
cwtl
sub
mov
addr16
mov
dec
outsb
inc
pop
icebp
std
mov
xchg
test
fldt
mov
iret
out
lcall
out
pop
lcall
aad
out
mov
fidivrs
jno
push
or
mov
mov
push
icebp
xchg
mov
sbb
dec
cmp
aam
lods
shr
cld
or
les
mov
inc
pusha
cmp
pop
dec
pushf
lea
push
fcoms
adc
fimuls
xchg
push
xchg
iret
jno
in
sarb
repnz
adc
push
js
test
cmp
call
clc
shr
mov
jg
scas
xchg
mov
xchg
ss
repz
fs
and
aam
inc
mov
shrb
cld
inc
xchg
mov
xchg
insb
push
xor
or
lea
sub
stos
xchg
push
inc
clc
jl
out
es
mov
inc
stos
in
popl
and
jo
fsts
notl
and
fwait
cs
fdivs
aad
scas
clc
mov
ss
mov
fildll
xchg
cltd
lock
xchg
cmc
mov
movsbl
mov
ds
push
xor
jne
push
cmpsb
ret
push
fldt
aad
mov
loopne
sbb
sahf
dec
and
sbb
adc
xchg
xor
ljmp
mov
cmp
pop
test
outsb
mov
popa
jecxz
push
cmp
call
clc
xchg
lock
adc
ss
in
pop
fdivr
adc
imul
xor
stos
mov
pop
es
pop
lahf
adc
and
loopne
jbe
aaa
bound
xor
mov
sub
mov
sub
pop
sub
push
jmp
inc
call
test
lods
rcrb
push
sti
bound
popf
jg
mov
mov
and
jo
and
lods
mov
jo
sbbb
cltd
loop
iret
mov
sub
fadds
or
addr16
jnp
pop
lods
jae
test
push
stc
inc
push
sahf
mov
es
popf
mov
mov
insl
push
sbb
xchg
sarb
nop
sub
test
lret
clc
rol
xchg
lods
jmp
fbld
jle
xor
xor
arpl
add
inc
test
jb
push
cmpsb
adc
rorb
test
pop
shll
test
adc
stc
or
orl
xchg
in
in
nop
sbb
pushl
inc
lods
pop
movsl
mov
dec
pushf
bnd
mov
ljmp
lret
out
das
pop
mov
aam
and
test
mov
xchg
movsl
xchg
enter
stc
das
mov
mov
into
bound
adc
sarl
popa
push
mov
pop
cmpps
ja
lahf
or
or
lods
add
push
cld
inc
xchg
cmp
les
dec
dec
ljmp
ljmp
les
and
ja
ss
push
mov
xchg
insb
or
data16
push
arpl
enter
xchg
cwtl
call
pop
rcrl
clc
mov
frstor
cmp
sub
dec
mov
ss
and
cmp
dec
jbe
mov
pop
dec
data16
dec
add
enter
inc
cmpsl
add
insl
pusha
fistpl
in
push
lret
sarl
in
fucom
xor
push
addr16
mov
mov
mov
test
cmp
cmpsb
cs
xchg
push
and
andl
sub
adc
inc
jns
addr16
xor
jae
fistps
cli
fwait
popf
in
ficoml
jmp
lret
cmp
push
rclb
clc
inc
std
fldl
das
mov
xchg
scas
sub
push
add
cwtl
xchg
das
ss
jo
arpl
xchg
jl
dec
adc
mov
sub
dec
cmp
aam
or
sbb
lods
and
mov
fstps
lock
mov
ja
sbb
xor
xchg
and
push
out
jne
mov
and
jnp
mov
imull
or
hlt
sub
jle
push
lods
fstpt
mov
dec
stc
mov
in
sbb
dec
adc
ljmp
and
dec
ds
sub
adc
or
loop
je
scas
xchg
mov
jae
mov
mov
xchg
adc
sbb
mov
xchg
scas
dec
mov
sub
or
stos
cmp
add
testb
aas
daa
xchg
inc
mov
outsb
fwait
xor
filds
pop
mov
out
xor
popa
cli
repz
es
push
clc
lea
aas
mov
dec
lods
inc
jle
lahf
sbb
loopne
aam
or
xor
jae
add
xor
add
pop
loopne
jnp
push
pop
jmp
fst
cmc
sub
pop
aam
jne
insl
adc
pop
stos
clc
and
mov
cmpl
ja
lods
pop
pop
push
aam
call
ss
push
jmp
sub
push
inc
mov
push
in
and
dec
je
jl
xor
imul
push
pop
add
jl
iret
ds
sbb
incb
int3
cmp
into
pushw
cmp
mov
add
fimull
out
push
sbbl
arpl
xchg
fists
rol
sbb
dec
fs
xor
fidivrs
xchg
imul
nop
adcl
dec
testb
bound
adcl
ficompl
stos
mov
imul
mov
dec
loopne
ss
add
push
int
add
out
and
and
and
xor
aam
inc
sbb
pop
adc
mov
call
psrld
pop
aas
iret
pop
in
inc
xlat
push
push
stc
or
pop
insb
mov
mov
lods
js
cmpsl
ret
cltd
push
jg
inc
sub
cli
ljmp
or
sbb
jl
push
test
cwtl
movsl
out
js
xchg
mov
cmpsb
outsb
scas
outsb
push
andl
sbb
xchg
inc
fidivrs
rol
pop
data16
rorb
test
test
cs
loop
and
cld
lret
data16
adcl
adc
aad
xor
jle
and
shrb
clc
in
test
cmp
push
adc
imul
jl
cli
and
movsl
lock
lea
cmp
mov
adc
lods
lcall
fiaddl
sbb
outsb
pusha
cmp
mov
insb
inc
into
cmp
clc
mov
mov
leave
mov
test
addl
sti
imulb
pop
sahf
mov
ljmp
mov
cld
inc
sar
jle
dec
mov
mov
push
mov
ret
je
dec
cmpsb
mov
sbb
hlt
jge
sub
popa
je
callw
clc
xor
pop
xlat
add
test
jnp
addr16
dec
rclb
jge
bswap
cwtl
and
lret
jb
mov
test
fnsave
in
inc
lock
mov
aam
mov
jbe
int
push
sbb
test
lret
fwait
push
jno
xor
jmp
shlb
out
addr16
cwtl
inc
int3
into
shr
rep
addr16
out
adc
and
into
add
aaa
jb
jnp
push
push
mov
jo
orb
cmp
and
jae
popa
arpl
jne
mov
out
push
mov
push
sub
jne
int3
cmpsb
leave
pop
loopne
aad
insl
nop
cmp
in
fst
mov
subl
ja
jle
push
nop
and
filds
bound
jbe
stos
and
lods
mov
popa
mov
aaa
stos
pop
pop
lock
dec
hlt
cmp
jmp
decb
mov
fxch
jg
int3
push
jae
test
mov
push
mov
call
ja
xchg
out
popa
or
pop
mov
mov
push
adc
loop
xchg
sbb
push
pushf
sub
repz
xor
mov
or
fucomip
jno
mov
subps
push
out
out
jb
test
mov
loop
test
mov
mov
pop
sub
in
push
inc
gs
sbb
lock
pop
xchg
xchg
insb
mov
push
repz
and
fucomip
leave
push
jne
lret
inc
lahf
xor
fidivs
push
jmp
dec
outsl
mov
roll
call
incb
std
lahf
sub
mov
add
cmp
jmp
xchg
popf
stc
call
push
lcall
xchg
sub
scas
inc
xlat
outsl
pop
je
cmp
or
add
push
fildl
fcmovu
jmp
repz
pop
bnd
pop
pop
clc
jmp
loopne
push
out
popa
inc
jne
out
popa
mov
xchg
ret
or
cmc
mov
lods
in
out
add
aaa
stc
vprotw
dec
sbb
ds
fmuls
pop
cmp
mov
sahf
pop
jmp
loope
mov
cli
mov
mov
fnstsw
mov
mov
inc
xor
test
jne
pop
mov
push
mov
cmp
fidivs
repnz
mov
int3
imul
fwait
mov
pop
ret
mov
mov
pushf
push
xsha1
cmpsb
or
xchg
in
pop
and
ja
dec
push
out
test
mov
lock
mov
and
hlt
loopne
inc
mov
cmp
push
ret
ret
popa
idivl
push
lahf
int
dec
cpuid
pop
push
shrl
aas
dec
xchg
ds
xchg
arpl
loop
mov
bound
sub
fwait
jb
sbb
not
lahf
xor
inc
out
lods
sub
xor
inc
les
cltd
cld
dec
inc
pop
jae
mov
repnz
pop
jno
dec
pushf
inc
push
into
lods
jnp
fucomp
add
loop
cmpsb
cmp
sbb
pop
mov
xchg
sub
imul
jo
mov
inc
pop
outsb
sub
dec
fcom
pop
mov
inc
mov
xor
aaa
les
cmpsl
imul
fs
ret
pop
lahf
add
lods
mov
test
add
xor
lods
in
clc
pusha
push
adc
sub
push
mov
lcall
jge
in
mov
inc
pop
ljmp
mov
clc
popf
shrl
lret
jmp
xchg
imul
adcb
nop
adc
and
xor
lahf
ud0
and
cmp
xchg
add
cmp
mov
test
into
and
cli
xchg
push
mov
in
fwait
mov
mov
mov
mov
sbb
das
and
es
out
lds
push
mov
das
aad
ret
push
daa
js
sbb
out
pop
push
add
lods
cmp
push
jmp
dec
ljmp
dec
aam
push
dec
ffree
mul
xchg
dec
bound
out
pop
cmc
or
cmp
lods
jmp
rcrl
cmp
clc
int3
fisubrs
push
shrb
sbb
loopne
arpl
into
sahf
test
cmp
into
jno
daa
rcrl
hlt
jbe
test
lea
jge
push
inc
mov
je
xchg
xlat
addr16
shlb
fsubl
daa
sbbb
jno
mov
lret
jecxz
sub
jle
jle
mov
iret
cmp
cmp
inc
jb
lock
jg
inc
mov
popf
push
aad
icebp
insb
mov
out
pop
add
sahf
sub
push
mov
push
ss
sub
sub
xchg
imul
sub
ss
and
push
imul
or
mov
sub
loope
cmc
jle
or
dec
dec
push
or
adc
xor
mov
mov
xor
inc
mov
lock
aad
pop
rcl
mov
adc
loope
and
aad
lahf
push
xor
fs
dec
inc
aas
xchg
inc
mov
mov
in
call
xlat
mov
dec
cmpl
cmp
dec
es
aam
in
xorl
or
lcall
divl
test
adc
std
dec
ret
add
pop
inc
aad
movsl
push
fs
push
mov
ret
mov
sbb
iret
mov
mov
mov
jb
pop
cmpsl
adc
jle
out
fwait
xor
scas
adc
adc
mov
cmpsb
fwait
and
cmp
push
adc
les
xchg
scas
adc
fstpl
enter
pop
sbb
or
arpl
push
adc
jp
dec
adc
arpl
mov
shrb
faddp
shll
add
fwait
mov
mov
dec
insl
bound
lahf
imul
jnp
xchg
push
outsb
sbb
les
dec
pushf
mov
add
test
in
mov
mov
adc
dec
and
adc
clc
jo
notb
jge
push
insb
clc
ja
push
outsb
aam
and
mov
lock
cmpl
add
cli
inc
scas
and
inc
in
xchg
lret
and
pop
imul
fdivs
mov
es
jge
iretw
sbbl
mov
testw
push
outsl
sbb
push
aas
adc
les
jecxz
pop
jb
jg
cmp
add
insl
addr16
add
push
or
ret
imul
cs
push
cmp
lahf
sub
adc
sbb
movl
mov
stos
mov
pushf
jl
sbb
std
aad
cmp
jbe
jb
loope
cwtl
not
sarl
xor
in
cmp
fadd
jecxz
pusha
adcb
inc
mov
dec
jg
dec
pop
aas
cmpsb
push
sub
gs
dec
jmp
inc
test
test
pop
jmp
inc
xor
add
xchg
push
xor
pop
pop
sahf
mov
loopne
sbb
lds
dec
dec
jecxz
mov
push
out
ret
fisttps
or
jg
das
push
int3
ds
dec
push
jl
cmpsl
das
pop
movl
dec
xlat
ja
ss
gs
cmc
adc
dec
push
add
outsb
out
xchg
aam
aaa
into
cli
inc
pop
or
dec
pop
dec
push
popf
xor
loop
mov
ja
or
cmpsb
or
add
test
push
inc
cli
mov
adc
cmp
cmpsb
fst
mov
xchg
inc
int
ja
sbb
scas
xchg
mov
jnp
popa
clc
int
imul
pop
adcb
mov
jg
inc
and
shll
sbb
sbb
mov
icebp
insb
pop
loop
dec
sti
test
clc
cs
pop
cmp
lods
mov
adc
inc
fmuls
pop
repz
cmp
xchg
xchg
sbb
add
jno
jo
addl
and
fildll
cltd
adc
sub
cmp
stc
push
inc
movsb
jg
push
adc
mov
lcall
das
mov
int3
cs
lock
stc
imul
xchg
scas
push
pop
fistps
cmp
mov
push
xchg
nop
sbb
aaa
iret
into
xchg
pusha
cli
in
pushl
testb
cmp
insl
add
loopne
adc
nop
loopne
outsl
push
roll
pop
jb
mov
xchg
mov
add
cwtl
addr16
xchg
sub
jnp
lahf
nop
pop
dec
fisttpll
inc
pop
pop
mov
pop
mov
cld
sarb
sub
pop
adc
jecxz
repz
adc
mov
jbe
adc
jl
pop
mov
fisubl
scas
dec
ror
push
ljmp
jo
jecxz
shlb
dec
rep
xor
notb
dec
lcall
pop
push
int3
jg
testb
jmp
out
cltd
mov
add
mov
adc
test
xchg
mov
test
shrb
in
add
jp
sbb
out
sbb
mov
movsl
icebp
fisubrs
xchg
cs
out
int
jo
fimull
in
in
sub
outsb
add
or
or
jl
in
mov
push
push
roll
jl
pop
int3
jg
push
mov
and
sub
decb
inc
fistpl
cmpsb
add
lock
jmp
cld
lret
jno
dec
out
adcl
mov
mov
add
xor
dec
rolb
rcrb
adc
sub
loop
mov
dec
pop
push
lock
mov
xchg
sbbl
mov
push
shrb
push
ficoml
fsubrs
clc
pop
stos
repnz
or
push
xchg
pushf
or
jne
mov
cmpsl
jp
xor
fwait
nop
aad
out
out
jno
filds
xchg
fisubs
jnp
shrl
inc
lods
mov
fisubrl
leave
test
es
mov
cli
out
mov
in
insb
add
pop
jge
adc
mov
push
ficompl
outsl
push
sti
mov
add
and
mov
xchg
subl
js
cmp
and
and
movsl
pop
xor
mov
mov
inc
icebp
dec
cli
push
les
jb
push
ljmp
insb
sahf
or
mov
sarb
add
testb
push
jns
inc
cwtl
addr16
mov
cmp
rolb
sub
pop
mov
shl
mov
mov
push
xchg
icebp
add
adc
incl
popa
andl
lock
packssdw
xchg
push
add
cmp
jp
push
jnp
ret
pop
ret
push
inc
push
add
loop
mov
dec
mov
cmp
adc
mov
dec
inc
cmpsl
aaa
stos
dec
dec
cs
push
jbe
sub
jns
test
sbb
fmull
xchg
inc
add
or
out
push
adc
add
test
sub
xor
mov
lret
push
push
out
ret
imul
bound
es
pop
pop
jge
mov
in
je
bound
sbbl
and
inc
mov
rcrb
int3
fidivrs
lods
ss
aad
xchg
in
mov
popl
ljmp
movsb
addr16
in
mov
in
inc
push
push
jno
pop
stc
jg
mov
lods
inc
imul
jge
jns
push
lahf
xchg
mov
lcallw
push
push
jae
fucom
cmp
imul
mov
scas
sub
cmpsl
lahf
cltd
pop
mov
addr16
das
add
xchg
jb
rol
jecxz
cmpsb
movsb
cli
push
arpl
mov
mov
jnp
pop
and
mov
or
pop
popf
inc
xchg
inc
insl
lret
test
shll
andl
mov
shll
daa
mov
addr16
addr16
shl
mov
lds
scas
and
dec
fldl
fs
mov
adc
xchg
sahf
push
adc
jnp
ss
clc
ds
mov
addb
aad
xchg
scas
xchg
ret
jnp
pop
adc
stos
mov
stc
xchg
stos
shll
imulb
adc
xor
xchg
cld
mov
add
data16
pop
mov
push
fs
add
or
push
mov
shll
mov
cmp
jge,pt
fyl2x
out
pop
mov
add
lods
pop
jg
pop
bound
push
iret
sahf
xor
jecxz
mov
subb
xchg
int
or
outsl
aaa
sarb
les
xchg
ljmp
jp
arpl
inc
fidivs
dec
push
lods
cltd
and
push
inc
idivl
jae
rcrb
pusha
cmp
ss
sti
pop
sub
dec
sbb
mov
dec
bound
les
inc
mov
cmp
notl
xlat
pop
shrl
int3
movsb
lods
jle
in
add
pop
aam
adc
mov
mov
adc
mov
cmp
xor
mov
rorb
test
xor
push
lret
test
insb
popf
mov
push
and
push
add
mov
sub
xchg
mov
sub
or
js
data16
sbb
std
push
stc
aad
repnz
push
add
into
or
sbb
push
dec
inc
xchg
sub
out
pusha
test
out
mov
and
rol
mov
js
mov
pop
adc
mov
mov
fistps
ljmp
adc
add
pop
sub
addr16
sbb
add
jl
mov
shlb
enter
scas
or
shll
xor
pushl
adc
and
mov
and
mov
popl
and
loop
rol
mov
push
mov
lahf
into
std
xor
mov
out
and
push
sbb
cmpsb
ret
jecxz
mov
jge
add
testl
fs
rclb
inc
fs
fidivs
outsb
push
ret
ret
cld
xchg
hlt
loop
xchg
lcall
lahf
insl
repz
ss
clc
nop
into
sub
test
int
jnp
push
sbb
cmp
into
mov
js
lds
loopne
mov
mov
adc
insb
pop
stos
xchg
outsl
push
int
popa
sahf
push
rorl
xor
cmp
insl
js
insl
bound
pop
in
push
dec
xor
addb
pusha
shlb
pop
fisubs
stos
cmp
in
cmp
iret
add
dec
dec
jp
jl
pop
and
add
cmc
fmull
sarl
push
fwait
jl
pop
push
into
pop
push
out
test
insb
jle
subl
sahf
movsb
xchg
xor
cmp
daa
repz
lods
es
push
xor
outsb
cmp
out
push
jmp
push
add
xor
shl
out
pop
and
nop
clflush
dec
xor
fcmovb
sbb
sbb
fisubl
mov
jge
mov
mov
xchg
add
or
out
sub
leave
mov
hlt
mov
cld
scas
dec
lods
mov
in
into
enter
inc
popa
mov
pop
adc
nop
pop
inc
push
aad
adc
divb
enter
push
pop
int3
pop
mov
ss
sbb
xor
mov
inc
push
ljmp
clc
sub
inc
sarl
lret
xor
sub
inc
fisttpll
test
pop
pop
insb
mov
sar
leave
outsl
jns
sbb
inc
adc
and
rorl
lods
or
or
add
not
mov
push
and
xor
aam
pop
add
shrl
dec
or
mov
adc
mov
pushw
rorl
mov
xchg
ss
out
xor
mov
aam
add
jne
sub
mov
das
add
daa
mov
leave
cmp
sarl
daa
jl
adcl
add
clc
or
adc
out
and
fs
jge
inc
fucomi
ret
inc
ss
inc
in
mov
push
inc
test
int3
xchg
sbb
ret
loope
sub
repz
sbb
stc
xchg
daa
mov
outsb
jle
sbbl
xor
xchg
push
mov
cmp
lods
push
mov
xor
jle
std
cmp
loopne
sbb
test
aad
fwait
lret
and
outsb
daa
mov
pop
mov
and
fsubs
ja
dec
mov
push
test
ret
sbb
xor
das
rcr
jae
push
int
pop
loop
push
dec
xchg
pop
pop
add
shrl
testb
cmp
jmp
clc
jo
lods
mov
xor
in
cmp
push
rcll
clc
data16
icebp
mov
lcall
push
mov
mov
paddusb
pop
sti
adc
push
inc
aad
aaa
sbb
insl
test
in
add
repnz
sub
fidivs
fsubs
cltd
test
adc
mov
loopne
push
mov
std
fs
into
movsl
adc
fbstp
fs
push
test
pusha
adc
in
in
hlt
in
mov
mov
aad
jno
cmpsb
jg
out
add
cmp
repz
daa
jl
mov
imull
mov
je
jg
mov
mov
clc
shrb
ret
dec
xor
pusha
dec
xchg
and
pop
push
jge
jl
and
xor
jns
fnstenv
or
mov
sbb
sti
mov
insb
xchg
pop
mov
lret
sahf
jecxz
inc
enter
ss
movsb
jbe
push
xor
shl
xchg
and
fiadds
push
xchg
insb
xor
imul
xor
jns
xor
lods
mov
inc
sti
int3
pop
rcr
stos
mov
sahf
scas
out
xchg
repnz
sbb
push
bound
lsl
adc
add
jae
bound
dec
mov
jae
pop
xchg
xchg
ret
sti
mov
lock
adcl
cmp
push
lret
push
iret
push
test
adc
xchg
jae
pushf
xchg
adc
lcall
pop
lock
call
and
jbe
jb
or
outsb
mov
subb
mov
js
shlb
cmp
imul
mov
movsb
repnz
mov
mov
aad
jl
adc
pop
sub
mov
fists
stc
push
add
movsl
iret
dec
in
jnp
loopne
xor
pop
adc
ja
cmp
push
cmpsb
sub
fnstcw
jg
add
or
cmp
mov
jbe
repnz
insb
xchg
xchg
and
andb
add
add
cmp
out
stos
pop
push
ret
and
repz
or
dec
pop
int
loope
mov
push
int
inc
lock
push
out
inc
fcmovnbe
or
mov
jge
mov
or
pop
mov
inc
mov
dec
xchg
imull
mov
mov
pop
ret
arpl
aam
outsl
push
outsb
outsb
sbb
ret
cmpb
out
stos
sub
xor
jbe
push
inc
push
cwtl
aad
dec
cmp
jmp
or
lahf
mov
inc
push
popa
fisubl
aam
mov
out
loopne
xchg
add
aam
jl
xchg
jecxz
cld
inc
pop
repz
testb
add
scas
leave
mov
xor
stos
ljmp
rolb
xchg
mov
sub
mov
aas
push
fisubl
cs
int3
push
sbb
push
inc
mov
adc
lret
cld
xchg
mov
sahf
popf
jmp
mov
test
inc
mov
jno
das
pop
xchg
sbb
cmp
aas
jp
cs
cwtl
pop
loope
mov
js
pop
fsubs
adc
mov
out
cmp
adc
inc
out
out
aam
addl
mov
dec
pop
mov
in
stos
andb
daa
or
adc
lods
sbb
cltd
out
xchg
pop
push
in
push
cmp
jb
pushf
daa
mov
and
dec
and
sub
cmpsb
pop
and
aad
out
imul
es
andb
mov
imul
push
clc
ret
xorb
int3
add
xor
jae
and
pop
xor
sbb
dec
pop
and
imul
shll
cmp
sbb
cmp
mov
add
xchg
fwait
xor
fisttpll
cs
scas
imul
xchg
jle
xchg
jg
test
sbb
xchg
and
dec
push
insb
test
mov
push
addr16
andl
adc
mov
hlt
mov
arpl
fbstp
je
push
push
jge
test
addr16
sub
dec
cmp
sahf
sub
dec
add
and
push
cltd
and
jne
shlb
mov
sub
dec
sbb
imul
or
cmp
xor
mov
int
scas
and
push
cmp
mov
pop
cmp
cmp
jmp
and
test
aam
push
in
mov
or
sbb
ja
and
adcl
arpl
mov
inc
push
cld
push
jnp
jne
ss
or
daa
jnp
mov
clc
mov
pop
or
inc
push
ret
jbe
jae
adc
push
dec
addr16
and
cmp
xor
sub
int3
insb
pop
divb
out
popf
or
jge
add
or
push
inc
sub
xor
push
sti
into
je
ret
andb
xor
adc
xchg
xchg
scas
xor
jo
and
jo
jl
dec
lcall
jmp
sbb
jge
cltd
mov
add
dec
mov
jno
enter
ss
sbb
add
daa
test
jb
add
rcl
cmp
loopne
push
fnstenv
xchg
xor
pop
pop
push
xor
xchg
and
hlt
mov
pop
push
adc
mov
jbe
enter
mov
and
mov
push
cld
or
adc
push
jnp
jbe
dec
imul
in
lods
sub
push
jl
fs
sub
ret
dec
addl
jno
repz
fmulp
jne
test
adc
push
dec
scas
mov
inc
fwait
aad
and
aad
aam
add
stos
mov
loopne
ret
mov
call
imul
mov
or
scas
pop
dec
loope
sbb
mov
jg
push
adc
jecxz
ja
or
jbe
out
les
xlat
mov
data16
pop
adc
jnp
pusha
push
jno
xchg
outsb
repz
es
fs
cmp
test
sbb
jge
scas
scas
cmp
cmpsb
jns
scas
mov
sub
add
xor
lret
adc
mov
mov
xlat
loopne
mov
pop
adc
test
mov
cld
fwait
push
cmpsl
inc
popa
ret
mov
xchg
mov
into
adc
jle
jp
inc
jae
add
iret
push
iret
add
mov
mov
jge
and
aas
pop
cmpsl
adc
pop
daa
mov
mov
xor
push
jns
lock
adc
gs
mov
enter
sub
test
mov
xor
mov
aas
adc
push
mov
fcmove
test
mov
pop
mov
mov
mov
cmp
aad
add
jg
stos
jl
sbb
dec
or
fstpt
pusha
lret
sub
sti
xor
inc
mov
or
add
jb
sub
pusha
stos
cmp
fildl
ss
jp
pop
xchg
inc
mov
cmp
adc
in
and
stos
push
xor
adc
add
lds
rclb
push
or
jae
cmp
mov
add
out
les
push
sbb
push
loope
fstl
inc
pushf
inc
hlt
and
gs
aas
xor
xor
ret
f2xm1
sbb
aaa
sti
sbb
pushf
dec
mov
mov
jg
inc
ficoml
xor
out
adc
adc
popf
jne
push
mov
scas
jno
or
aas
enter
dec
fs
popa
outsl
cmc
imul
filds
insb
adc
cmp
cmp
testb
mov
xchg
into
push
mov
sub
xchg
xchg
cmp
add
jle
fadd
mov
adc
or
push
and
cltd
sub
mov
mov
xchg
ret
icebp
sahf
push
xchg
or
out
fwait
lods
sbb
push
in
dec
add
leave
pop
pushf
daa
arpl
or
add
inc
jge
and
and
add
mov
stc
test
fcmovne
das
lea
clc
inc
hlt
jp
aad
arpl
jge
pop
cmp
push
dec
ds
cmp
test
lret
pop
jno
xor
je
sbb
sbb
mov
inc
pop
xchg
push
insl
es
ret
pop
ror
insb
mull
pusha
fistpl
xor
push
and
out
cli
repnz
push
gs
push
cmp
lcall
and
or
movsl
aas
inc
out
cmpsl
cmpsb
loope
lock
int
iret
ja
sbb
add
push
cmp
sahf
daa
and
daa
lahf
decl
xor
fdivrl
cli
and
stc
sbb
jb
icebp
xchg
sub
and
push
fcomp
testl
dec
addb
jmp
out
mulb
and
adc
movsl
mov
adc
enter
call
lds
dec
jb
lret
test
cmp
bound
xchg
arpl
xchg
mov
arpl
mov
out
mov
inc
or
pusha
jl
adc
out
jns
aam
aad
and
sbb
add
push
je
pop
movsb
lea
popf
sub
dec
out
loop
cmpsb
mov
clc
pop
add
sbb
popa
mov
movsl
mov
loopne
push
mov
or
inc
out
insb
mov
xchg
inc
lahf
xor
mov
test
sti
dec
dec
cmp
das
and
clc
xchg
mov
sbb
testl
loope
lea
mov
lds
dec
and
mov
pop
dec
arpl
inc
fidivrs
push
fstpl
jmp
fwait
push
jnp
xor
jmp
aad
or
inc
cmp
or
pop
push
jae
fwait
push
add
les
mov
jl
fwait
xchg
ret
loope
pop
adc
mov
into
sti
fwait
shlb
jb
jns
aad
movb
xchg
into
and
cmp
popf
inc
inc
pop
cmpl
pop
adc
orb
arpl
jg
jge
jnp
rcrb
adcb
pop
and
jns
pop
imul
scas
test
jo
lret
sub
push
jbe
cmp
mov
pop
popf
or
lods
rcl
sub
jns
jnp
and
fstps
imul
out
cmpsl
inc
push
or
notl
test
pop
xchg
je
cmp
mov
sbb
cmp
shlb
and
xlat
aam
stos
jmp
sub
sub
push
cmp
add
sbb
jg
rcl
mov
mov
add
push
mov
bound
jb
push
imul
ljmp
xchg
imul
pop
adc
xchg
mov
pop
and
mov
cmp
pushf
clc
adcb
pop
mov
loope
call
jmp
mov
dec
or
pop
rorl
pop
pop
mov
xchg
cmp
xchg
lcall
cmp
cmp
je
mov
cmp
mov
cmp
insb
call
dec
pop
jae
fstps
dec
sub
xor
test
pushf
int
cld
push
xchg
inc
fdiv
nop
shl
or
shrl
dec
inc
push
je
add
push
jbe
xchg
mov
and
sub
cmpsb
out
sahf
testl
add
or
jmp
enter
mov
stos
cmp
pop
pushf
movsl
test
testb
popf
sub
fs
ljmp
push
xor
dec
sub
jp
orb
in
out
fwait
xchg
adcb
mov
arpl
int
jo
lock
push
dec
repnz
enter
imul
lret
xchg
rol
movb
pusha
fninit
stos
je
or
dec
loope
cmpb
fwait
cmp
idivb
sub
pop
adc
mov
or
mov
adcb
sbbb
cmp
jo
mov
data16
xchg
loop
jns
pushf
scas
aam
xor
ljmp
movsb
dec
scas
aam
jmp
and
aad
cltd
inc
xchg
mov
or
mov
cmp
aam
jns
dec
cmp
movsl
push
out
mov
jmp
push
cmpl
inc
push
jne
add
xchg
scas
dec
sbb
push
fnstcw
add
adc
ret
rclb
ficompl
add
pop
cmc
xchg
xor
les
jp
movsl
jnp
dec
inc
xlat
jp
cli
xchg
mov
jg
push
pop
or
pop
aas
adc
inc
jns
sahf
pusha
sahf
sub
imul
dec
cmc
and
push
adc
and
addr16
ret
push
push
jbe
mov
imul
xor
jns
in
cmc
mov
dec
adc
popf
dec
mov
jge
mov
xchg
lret
dec
popf
add
movsl
mov
lds
test
cmc
mov
lret
sub
and
push
mov
sbb
inc
andb
scas
fdivl
add
test
dec
dec
test
imulb
cmp
aam
stos
sbb
mov
out
dec
repz
inc
xor
into
popa
into
fildll
xchg
ret
cmp
adcb
add
into
jne
lock
push
ficoml
mov
adc
aas
ror
jl
jae
dec
adc
sahf
push
scas
nop
mov
decb
sub
test
xlat
inc
movsb
pop
mov
or
mov
sub
mov
dec
in
jbe
popa
xchg
jge
and
hlt
ss
into
cwtl
xchg
cmp
inc
imul
cmp
mov
pop
fsubr
cmp
inc
fcmovnb
cmpsb
aam
mov
sahf
repnz
xchg
outsl
adcb
loop
sti
xor
mov
push
mov
sahf
ss
adc
mulb
in
pop
jo
inc
jle
jg
adc
inc
mov
push
sub
xchg
xchg
mov
pop
aaa
arpl
in
and
and
xor
inc
adc
push
inc
sub
je
mov
cmp
mov
out
loop
shrl
fwait
inc
loope
mov
dec
fucomp
mov
ja
out
test
aad
ljmp
daa
fsubr
adc
inc
jns
sbb
in
or
mov
into
fstpt
inc
les
push
insl
outsb
mov
sbb
jae
pushf
mov
out
mov
xchg
nop
mov
insb
jge
adcl
aam
inc
adc
enter
icebp
mov
call
pop
mov
test
jbe
push
ret
push
jge
loopne
mov
test
mov
mov
jmp
push
adc
repnz
dec
lret
repz
or
arpl
int
pusha
rol
adc
test
and
sub
loopne
cmp
xor
popa
js
popa
std
push
inc
or
pop
mov
movsb
jp
jg
leave
fnop
mov
movsl
mov
and
add
sub
sub
xchg
cmpsl
pop
cmp
push
mov
add
lods
jmp
mov
inc
loop
ret
rcll
sub
dec
fbstp
push
jecxz
notb
sbb
lods
ret
loop
mov
mov
es
lret
jb
dec
cmp
mov
hlt
mov
xchg
mov
stos
ret
xchg
mov
in
outsl
push
add
ret
or
or
xchg
push
out
test
repz
mov
xchg
xchg
adc
inc
push
in
fcmovnu
push
push
pop
pop
jno
push
or
sbb
inc
scas
adc
inc
or
aam
hlt
mov
push
xchg
sub
clc
xchg
vxorps
adc
hlt
push
mov
shlb
jno
hlt
fs
aam
test
aaa
push
loope
dec
mov
push
icebp
cmp
test
fisubs
xchg
pop
lock
lcall
leave
or
xchg
push
pop
pushf
fdivl
fidivrs
in
mov
stc
and
cmp
mov
cwtl
adc
push
lahf
mov
mov
xlat
sub
add
xchg
ds
imul
mov
test
nop
test
jmp
in
imul
cli
shlb
aam
push
sbb
rcrl
sbb
jne
dec
cli
dec
sbb
push
ret
stos
adc
mov
jmp
dec
ja
sarb
dec
loop
xchg
mov
pop
push
or
loop
je
mov
sahf
fsubrp
push
fisttpl
or
and
mov
stos
xchg
sub
sahf
loope
adc
pop
dec
stos
mov
ja
jbe
iret
cmpsl
inc
std
or
out
mov
test
xchg
sbb
out
lcall
int
enter
lods
and
popf
cmpsl
dec
fnsave
push
adc
adc
mov
fidivrs
call
xor
sbbl
stos
fbld
xchg
pop
ret
lcall
jne
fistps
dec
js
mov
es
testb
int3
inc
bound
ja
into
insl
dec
xor
xchg
ret
jae
or
dec
and
jle
lret
js
jmp
push
xor
add
dec
adc
daa
push
push
sbb
lahf
adc
jo
lods
mov
sbb
mov
fidivl
mov
jle
loopne
jnp
inc
add
cld
les
lcall
sbb
xor
scas
adc
mov
jmp
xchg
inc
xchg
lods
and
push
mov
les
into
mov
lahf
int3
mov
mov
sti
nop
xchg
movl
jmp
stos
dec
loope
adc
aas
cmp
and
mov
pop
je
mov
mov
lods
add
push
sahf
mov
adc
scas
xchg
pop
push
insb
cmpsb
mov
xchg
mov
inc
ret
or
sub
xchg
mov
sti
cmpsl
jp
pop
out
mov
or
sub
test
mov
mov
push
imul
repnz
das
jecxz
fstps
and
jmp
push
or
xchg
imul
pop
cltd
flds
test
loop
pop
fwait
dec
pop
lret
xchg
jo
mov
fwait
sub
mov
sbbb
lahf
ds
mov
into
mov
mov
jns
xor
mov
or
dec
and
int
xor
pop
or
mov
pop
lret
addr16
add
in
sub
ja
xor
mov
mov
in
fistl
or
mov
jnp
pop
xchg
cmp
test
data16
inc
xchg
mov
adc
cmp
loopne
into
pushf
je
inc
and
xchg
sub
sub
mov
test
lret
xchg
shrb
dec
loop
ss
imulb
xor
inc
icebp
and
adc
xchg
lret
enter
sub
or
ss
cwtl
inc
mov
out
stos
and
insl
mov
or
fistl
sbb
or
in
cmp
mov
or
push
pop
pusha
xor
mov
mov
out
ds
xchg
sub
mov
stos
subb
or
sub
shrl
repz
adc
ljmp
jno
pop
and
insb
xchg
fisubl
je
lret
mov
mov
cmp
rol
andl
sbb
movsl
jp
fsubrs
arpl
call
cmp
pop
sbb
dec
dec
cmp
xor
dec
fdivl
jne
cmp
pop
xchg
sub
cltd
xor
cmp
repnz
cmp
shll
aam
xor
and
lds
mov
add
popa
sub
lret
cmc
pop
rcll
dec
fdivrp
or
ja
fisubrl
xchg
jne
lds
in
and
lret
daa
sarl
sub
dec
fnstenv
out
scas
loop
jbe
fwait
movsl
cmp
add
rorb
mov
or
mov
xor
outsl
pusha
mull
out
add
cmc
xor
add
add
cmp
or
fwait
es
jae
out
xor
cmc
xchg
dec
lds
in
je
out
test
add
imul
lret
mov
adc
xchg
add
testb
xchg
add
mov
cmp
lea
and
dec
adc
jg
mov
mov
out
fistps
lea
xor
xor
cmp
nop
shl
ret
pop
cmp
dec
xor
dec
ficoms
sbb
push
ss
les
loopne
mov
jo
sarl
add
leave
mov
or
dec
ds
push
loop
fs
in
add
sub
push
stos
dec
dec
addb
xor
dec
inc
loop
jns
jge
jnp
push
mov
testb
inc
in
xor
sti
pushf
cmp
xor
mov
mov
mov
out
test
pop
shlb
call
cmpsb
xor
pop
cmp
lds
stos
outsl
xchg
lea
test
out
sti
pop
xlat
decl
and
dec
mov
shl
in
add
jl
mov
sub
push
adcb
cli
mov
sub
mov
leave
outsl
out
inc
mov
cltd
in
fisttps
pop
call
sbb
xor
inc
mov
rcl
outsb
aas
push
xchg
xchg
mov
pushf
nop
mov
or
and
add
inc
push
add
xchg
pusha
ljmp
scas
add
jg
jbe
imul
adcl
cmc
jns
add
sub
xchg
fildl
mov
cld
and
cltd
jl
cwtl
sti
out
ja
test
mov
mov
aas
insl
sub
mov
sbbb
dec
sub
or
shll
insl
fs
sbb
hlt
mov
test
pop
js
cmpl
add
xor
js
xchg
test
ret
sub
cltd
outsl
idivb
xchg
jp
xchg
sub
insb
stos
aas
mov
faddp
mov
mov
int3
inc
dec
gs
xor
add
cmp
and
and
in
mov
jne
std
jb
in
cmc
out
lods
test
ja
mov
ret
mov
dec
jl
bound
test
cmc
push
dec
pop
nop
in
test
mov
add
jmp
dec
mov
lods
and
fcomp
jmp
es
pop
push
out
xchg
fs
jp
mov
dec
es
enter
mov
mov
inc
js
pushf
inc
inc
cltd
add
adc
pop
scas
out
cmp
cmc
jo
push
xor
cmp
imul
ljmp
dec
lds
paddq
dec
shl
insl
jmp
stos
pushf
push
das
xor
or
and
outsb
mov
inc
inc
inc
pop
out
fcompl
add
and
push
lea
outsb
test
dec
sbb
inc
stc
das
add
mov
xchg
jle
xchg
add
add
and
mov
lea
rcrb
cmp
repnz
pop
in
rclb
push
sub
pop
ret
test
mov
or
mov
addr16
mov
out
cmp
inc
or
scas
fsub
pop
jle
cli
xor
fsubrp
dec
inc
cmpsb
in
mov
pusha
stos
ret
out
sub
lods
and
loopne
xor
movsb
ret
fstp
xlat
inc
fmuls
mul
adcb
movsl
inc
dec
xchg
bnd
out
jnp
jg
fcmovnb
jno
mov
cmc
out
inc
push
mov
mov
aaa
or
push
pop
jnp
dec
mov
sub
xchg
push
ret
jmp
lock
or
cld
scas
jnp
ret
fidivrs
nop
add
pop
loop
dec
adc
push
out
rol
mov
dec
jmp
ja
cld
lahf
xchg
xor
fwait
or
cli
and
mov
adc
sub
jo
jno
mov
lret
cld
lds
sbb
and
clc
sub
leave
mov
jmp
repnz
xor
test
lahf
xor
mov
inc
movsl
cld
adc
inc
shr
jns
outsl
push
ficoml
inc
fsubrp
jae
adc
out
add
push
pop
test
leavew
push
jmp
mov
in
cltd
pop
xor
dec
rolb
and
adc
and
dec
push
inc
flds
test
fidivl
rolb
and
sbbb
inc
mov
mov
and
lahf
jmp
or
dec
roll
mov
jo
push
inc
jo
xor
es
cmp
es
push
rolb
out
fwait
dec
fstps
hlt
pusha
sysenter
pop
push
lcall
imul
sbb
mov
xchg
push
bound
adc
push
mov
in
popf
mov
pop
jno
or
sub
lods
ljmp
repnz
lock
cli
enter
rcl
outsb
stos
mov
popa
xor
shl
push
inc
push
sub
pop
imul
cmp
inc
cmpsb
pop
xchg
pop
lret
scas
add
dec
inc
inc
or
gs
aas
push
sbb
rorl
sub
sahf
dec
xchg
jl
xchg
ret
sbb
gs
imul
jae
push
add
imul
xor
mov
mov
jg
sub
fcoml
rcr
jb
jbe
adc
fnstcw
sub
outsb
loope
sarb
sub
lea
rcl
and
xchg
jo
lock
pop
xorb
std
addr16
out
xor
jno
sbb
mov
adc
mov
jmp
or
cs
inc
loop
dec
dec
fdivr
mov
inc
xchg
sub
jecxz
sbb
mov
int
mov
add
sbbl
dec
fnstenv
lock
call
and
mov
ret
js
and
sbb
dec
ret
shl
sub
xchg
sbb
in
jne
and
push
negl
ret
std
hlt
dec
cmpsb
push
jmp
and
inc
sub
je
inc
repnz
ljmp
andl
xchg
cmp
push
popa
ret
or
int3
popf
mov
imul
sub
xor
xchg
add
in
in
push
outsl
xchg
adc
adcl
mov
shr
and
jl
mov
iret
mov
push
mov
out
frstor
cmp
fadd
in
cli
shrl
or
shlb
or
int
inc
out
mov
dec
loop
out
out
cwtl
push
inc
enter
xor
cmpsb
mov
cld
lret
mov
mov
pop
add
sub
mov
sub
insb
inc
inc
shlb
mov
out
xor
rep
jo
cwtl
lret
dec
mov
gs
test
iret
push
adc
xorl
lret
std
cltd
xchg
sbb
mov
mov
mov
daa
fadds
xor
sbb
dec
dec
push
mov
fs
add
and
or
xlat
aam
sbb
std
scas
shr
sti
or
xor
xor
inc
js
fcompl
inc
xor
cmpsb
ja
and
adc
jno
sbb
and
jl
mov
das
push
cmp
call
ds
test
mov
int3
jb,pn
inc
sbb
in
adc
jmp
mov
int
xchg
or
decl
mov
inc
in
mov
xchg
ds
ret
mov
push
pop
popf
pop
pop
das
lret
sbb
mov
ljmp
push
and
mov
sar
inc
in
dec
and
adc
jno
dec
vandnpd
add
fidivrs
push
icebp
sbb
into
pop
lcall
xor
pop
std
xchg
aam
push
out
and
jl
dec
xacquire
xor
xchg
data16
push
mov
cmc
cmp
test
popf
jecxz
push
lcall
inc
inc
and
mov
out
jmp
xchg
push
lret
ss
in
jecxz
mov
xchg
sub
rcl
in
xchg
push
lock
inc
inc
dec
or
cmp
stc
xchg
shll
mov
dec
stc
jl
inc
inc
and
popa
stc
xchg
inc
movsl
jmp
sbbb
or
fninit
mov
inc
ficomps
std
fst
aaa
cmp
jge
aaa
cmp
lret
clc
fadds
popf
dec
fldcw
ds
pop
xor
mov
push
test
clc
mov
push
scas
arpl
xchg
inc
mov
loopne
jb
testl
mull
ljmp
repz
loopne
and
cld
sbb
sub
repnz
sbb
incb
add
xchg
insb
inc
aad
jmp
and
hlt
setb
out
clc
shr
test
adc
adc
adc
int3
adc
cmc
fs
mov
int
jle
pop
jmp
inc
mov
pop
inc
push
loope
std
xor
je
rol
jno
add
andb
rcll
ret
in
aam
pop
push
lods
insl
inc
mov
push
popa
pop
mov
fdivs
push
xchg
stc
add
pop
xchg
ret
in
out
jge
cld
dec
mov
mov
fsubrl
into
xchg
sub
cwtl
jbe
pop
adc
andl
xor
or
shlb
ss
mov
dec
fnstcw
decl
cs
or
dec
fdivrs
or
lds
push
mov
mov
and
inc
outsb
xor
pop
add
aaa
jae
pushf
in
test
pop
cmp
and
popa
lods
and
gs
cwtl
pop
sub
lods
dec
clc
adc
leave
xchg
mov
fs
pop
xchg
insb
xchg
add
stos
cmp
jp
and
nop
sub
xor
inc
fstl
jmp
mov
jnp
sahf
pop
jmp
adc
xchg
push
divb
jl
jb
pop
scas
orb
int3
jg
xchg
pusha
xchg
jae
adc
adc
andl
lcall
adc
mov
punpckhwd
dec
rcrb
inc
popa
arpl
mov
stos
ret
add
xor
mov
popa
push
mov
fisttps
inc
or
es
hlt
mov
inc
sbb
ja
outsb
lds
imul
ja
jo
jmp
xchg
adc
clc
adc
pusha
imull
cmpsl
sti
jb
add
fsubrl
cmp
lods
daa
cmp
addl
adc
and
dec
lds
shr
mov
fists
mov
mov
mov
lret
mov
cmp
jmp
lret
pop
sub
and
mov
push
aad
lahf
xlat
mov
fwait
push
inc
and
and
xor
mov
sub
loopne
and
aam
rcll
push
xor
add
dec
mov
mov
push
mov
jle
cmp
pop
pushf
icebp
sbb
pusha
scas
ds
nop
push
push
popf
ds
mov
push
mov
pop
xchg
mov
sub
mov
or
in
mov
loope
cs
push
inc
jmp
jle
lock
int3
jnp
jl
mov
push
adc
popa
mov
jae
andb
xchg
or
pop
adc
popf
sbb
jae
cmp
jne
cmp
jne
icebp
and
call
lahf
jbe
shll
xchg
aaa
mov
add
and
xchg
push
mov
clc
push
shll
mov
and
movsb
cmpsb
xchg
xchg
jno
cmp
xchg
sub
cmp
test
mov
xchg
and
mov
repnz
test
xor
es
cmpsb
xchg
xchg
xor
shrl
adc
or
mov
sbb
or
jo
or
imul
pop
nop
stos
test
sahf
clc
or
stc
or
notb
ucomiss
ss
hlt
cmp
cmp
bound
pop
loop
add
dec
sub
enter
mov
push
in
addl
adc
mov
add
jne
pop
imul
lret
adc
rolb
cwtl
pop
hlt
or
addr16
popf
sbb
mov
mov
repz
ja
out
mov
jmp
lcall
xchg
sub
scas
clc
aas
jmp
pop
jno
lret
mov
jnp
hlt
pop
insb
add
rcrl
rclb
fwait
xor
or
leave
pusha
pushf
xchg
inc
fadds
adc
push
sahf
mov
pop
sti
sub
pushf
xor
mov
jl
in
outsl
and
xchg
mov
jecxz
mov
arpl
mov
jnp
pop
push
movsb
jae
sbb
add
jae
rcrl
call
jo
adc
push
xor
mov
js
mov
sbb
or
sub
in
xchg
sub
push
cmp
scas
adc
int3
sbb
repnz
in
push
ror
int3
aas
shlb
popa
xor
xchg
out
cli
jbe
adc
push
shll
lcall
daa
add
movsb
jnp
pop
jbe
push
push
mov
lahf
mov
frstor
xchg
aaa
jle
dec
fstps
mov
mov
inc
iret
adcl
pop
mov
stos
stc
xor
sbb
pop
scas
aaa
or
gs
shlb
cs
mov
mov
or
scas
enter
add
repz
stos
divl
test
dec
push
push
imul
sbb
gs
jae
fstpt
jno
lea
jae
cwtl
ficoms
insl
test
int3
pop
jmp
xor
and
jmp
xlat
out
imul
push
xchg
jo
sub
and
mov
iret
gs
sub
inc
and
dec
sbb
mov
sub
into
push
adc
lods
sbb
mov
je
jp
int
cmc
mov
sti
and
dec
and
pop
pop
iret
inc
cmp
dec
cs
xchg
cmp
test
in
movsl
test
adc
xchg
pop
scas
imul
hlt
int
loopne
dec
push
mov
sarl
push
or
jae
lock
xor
pop
fmull
ss
clc
iret
mov
das
ss
dec
jecxz
int3
arpl
das
scas
mov
repz
mov
inc
ljmp
sbb
aas
shrl
mov
stos
arpl
aas
cld
mov
sub
pop
and
scas
xchg
push
jbe
cmp
les
and
outsl
aad
iret
dec
stos
idiv
lock
cmpsb
mov
adc
ss
popf
and
inc
push
add
jo
xchg
mov
sahf
imul
iret
popa
loop
lahf
test
xor
dec
mov
and
fdivs
push
inc
xlat
ret
icebp
ja
jle
cmpsb
dec
rcll
iret
mov
push
sub
cmpsl
arpl
sbb
mov
aaa
daa
cld
xlat
adc
scas
pop
xorb
xchg
js
dec
or
pushf
sbbb
loop
xor
dec
mov
cwtl
mov
xchg
popa
imul
out
lret
mov
or
mov
jl
inc
fisubrl
jb
dec
pop
sbb
xchg
ficompl
fisubrs
push
popf
xchg
sub
lock
pop
lods
pop
mov
dec
in
call
xor
dec
cmp
add
jbe
sti
xchg
xorb
mov
sbb
or
arpl
mov
cmp
mov
pop
cmc
mov
shll
or
xchg
jecxz
pop
xchg
add
sahf
dec
or
cmpsb
pushf
cmpb
push
stos
inc
push
sbb
mov
fwait
xchg
mov
jle
fisubrs
scas
sbb
clc
pop
pop
cmp
mov
pop
sub
out
decl
mov
rol
movsb
rorb
aad
mov
es
jo
lret
icebp
lcall
inc
or
imul
mov
dec
jb
mov
les
jle
addr16
outsb
inc
mov
mov
jo
pop
popl
cmp
aad
repnz
out
dec
popf
xlat
dec
inc
enter
and
mov
mov
cmp
push
loop
and
pusha
pop
mov
mov
lock
jnp
xor
xchg
incl
ret
and
inc
rol
in
sbb
mov
jo
or
dec
in
and
faddl
add
cmp
bound
loop
mov
movsb
in
test
in
mov
pop
sub
lret
jae
and
aam
dec
push
mov
jp
movsl
in
pushf
sub
pop
jmp
add
dec
dec
sbb
dec
lea
lea
jmp
xchg
test
lret
cli
dec
stos
out
mov
jne
lods
leave
addr16
call
les
xlat
xchg
add
addl
and
popa
jp
fisubrs
fs
out
adc
clc
pop
pop
in
dec
or
arpl
pop
out
inc
nop
cli
xchg
test
sbb
cmp
outsl
push
fisubrs
pop
imul
movsl
ds
lret
sub
imul
dec
xchg
push
lock
xor
lock
push
pop
repz
xchg
inc
test
clc
out
outsb
popa
ret
in
dec
subl
sub
mov
sbb
pop
rcrl
shlb
jge
and
arpl
inc
gs
xor
mov
hlt
movsb
fadd
addr16
add
jg
and
mov
or
cltd
xor
mov
dec
into
cmpsl
pop
ss
leave
or
mov
lret
pop
sbb
test
xor
enter
and
test
sub
enter
lds
pop
lret
test
js
loopne
nopl
ret
adc
inc
lret
in
mov
out
outsb
ret
dec
out
xchg
movsl
jo
sbb
int
fucomi
mov
lods
mov
outsb
addb
insb
mov
fistpl
decl
test
scas
int3
lret
mov
outsb
mov
xor
xor
jle
mov
lods
ret
outsl
pminub
inc
and
push
daa
popf
repz
add
lret
clc
or
iret
pop
sub
lea
shl
push
mov
test
jg
cmpl
cmc
enter
push
or
lahf
push
add
es
cmp
sar
xchg
add
out
push
aas
stos
hlt
addr16
mov
pop
mov
add
mov
sbb
dec
hlt
and
xor
test
mov
sbb
in
adc
xor
loopne
insb
adc
jmp
xor
daa
lods
inc
push
inc
cs
js
fcoml
push
jp
pop
lahf
pop
lahf
push
cmpsl
adc
push
mov
cli
sbb
inc
inc
adc
decb
mov
popa
clc
fcmovne
xchg
sub
cmp
dec
cmpsw
sub
add
in
daa
nop
cmp
test
loopne
sbb
stos
popa
push
push
scas
pop
rclb
in
jbe
sbb
pop
push
js
xor
mov
mov
loope
cmc
imul
xchg
lock
pop
cmc
adc
cmp
add
xchg
inc
pusha
in
jmp
scas
xor
stos
es
sbbb
jecxz
xchg
das
pop
cli
add
out
ds
insl
jge
jbe
sub
std
adc
aam
sub
pop
ret
enter
fistpl
jp
in
xor
cwtl
inc
push
inc
push
test
or
aam
out
sub
and
enter
sbb
in
rorl
shl
test
xchg
ljmp
mov
sub
icebp
sub
dec
call
inc
inc
call
pushf
cmp
rcll
pusha
fcomip
or
pop
mov
sub
out
loopne
xlat
and
ljmp
and
aad
cmp
pop
outsb
les
add
xchg
sub
out
dec
xlat
fwait
out
dec
repz
sarl
and
and
psrad
xor
push
lcall
jle
and
adc
pushl
mov
aad
adc
inc
add
and
fdivp
mov
mov
xchg
pushf
daa
int3
out
mov
and
aas
lea
mov
push
push
xor
adc
add
inc
pop
and
in
ja
mov
dec
sbb
dec
add
cmpsb
inc
int3
lret
cmp
add
push
dec
arpl
jp
lahf
ss
pop
mov
inc
inc
pop
push
data16
movsl
and
pop
data16
aas
mov
cmc
xlat
push
leave
les
sub
rep
dec
aas
or
pop
push
cltd
cmp
imul
pop
call
pop
cmp
mov
jns
xchg
popa
jmp
jmp
pop
punpckhdq
stos
xor
mov
mov
ljmp
call
in
xchg
xchg
sub
xchg
mov
inc
into
pop
push
sbb
or
fwait
loopne
aam
sbb
ljmp
push
aaa
divl
inc
cmp
jle
add
les
fsubrs
fidivl
mov
pusha
sbb
inc
push
addb
jecxz
jmp
cltd
xchg
das
shll
out
xchg
xor
stc
or
int
aam
das
call
faddl
lcall
xchg
inc
mov
cmpsl
xor
or
push
mov
jbe
dec
icebp
push
shr
das
ja
lahf
jl
popl
xchg
jb
adc
rolb
pmulhw
sub
mov
xchg
bound
jge
sbbl
mov
inc
inc
xchg
add
inc
push
jg
ljmp
int
sbb
fdivrl
adc
jnp
xlat
mov
stc
repnz
stc
nop
adc
sahf
or
jno
inc
jo
mov
and
in
je
in
aas
fists
mov
sbb
cmpsb
dec
jecxz
mov
fildll
dec
xchg
cmp
xor
lcall
mov
cli
or
sbb
test
lcall
aam
outsb
aas
stc
ret
fmuls
add
adc
aaa
mov
jecxz
insb
xchg
mov
popf
pop
jno
clc
ss
push
fs
or
lds
pop
pop
icebp
dec
add
out
jbe
roll
ret
ffreep
sahf
xchg
mov
sub
aad
dec
fisttpl
insb
add
inc
mov
pop
mov
nop
aaa
jp
sub
lcall
icebp
cwtl
xlat
sbb
int
jecxz
cmp
sub
mov
lea
shll
pushf
xor
mov
ret
sbb
out
fcoml
ds
mov
mov
inc
pop
xor
aad
mov
jno
push
xor
inc
in
das
mov
and
and
xchg
mov
mov
daa
cmp
xor
or
add
mov
fsubl
inc
mov
mov
movsl
sbb
push
mov
jb
sbb
lret
jbe
jle
push
call
vmovdqa
adc
loopne
xor
inc
add
add
push
inc
popf
xor
cwtl
lahf
or
mov
xor
sub
lock
xchg
outsb
or
dec
mov
test
cmc
or
cmpsl
fs
mov
jmp
cwtl
aam
inc
and
int3
arpl
inc
cld
lcall
in
fcmovnb
loopne
fistl
test
aad
xchg
mov
stc
pop
jp
fisubrl
mov
pop
push
jb
sbb
je
mov
rcrl
mov
adc
outsl
loope
pop
das
mov
call
je
popf
or
and
adc
dec
or
pop
push
loope
jg
mov
pop
test
mov
ds
adc
and
inc
inc
jno
sbbl
cltd
test
bnd
sub
testl
cli
sub
xchg
std
adc
lcall
inc
ds
imul
push
in
ljmp
jno
add
imul
inc
cmp
mov
pop
pop
sub
pusha
std
pop
lea
sar
clc
jg
dec
aam
popf
adc
in
popa
repnz
push
cmp
loop
cmpb
mov
je
mov
cmp
pop
lret
ja
pop
shl
mov
dec
push
xor
inc
pop
xchg
jne
ja
test
je
data16
ret
shll
les
mov
jmp
jnp
das
fisubrs
int
push
push
and
bswap
sub
repnz
xchg
into
testl
sti
xor
and
std
aad
pop
add
popa
xor
repz
outsb
iret
lret
int3
mov
or
jecxz
inc
pushf
cmpsl
popl
fucomp
sbb
jg
lods
cmp
sub
pop
nop
test
popa
lods
mov
dec
popa
xchg
sub
mov
gs
das
sbb
xlat
jns
lahf
sub
lret
iret
jb
lds
add
loope
and
jae
test
int3
sub
mov
sub
ret
fcomip
dec
jl
in
gs
xchg
dec
imul
mov
fxtract
sbb
adcb
cmp
push
stos
add
mov
aaa
cmp
pusha
dec
xchg
dec
add
mov
out
jg
pushf
mov
cmp
mov
pop
mov
add
arpl
andb
xlat
gs
jle
inc
sahf
imul
add
pushf
inc
pop
jl
xlat
push
test
dec
adc
cmp
lret
push
sahf
push
scas
xchg
loopne
or
ret
or
inc
xchg
inc
pop
out
int
lds
sarb
mov
add
add
sahf
xchg
outsl
inc
dec
movsb
jg
mov
imul
cmp
sub
sub
andb
pop
cltd
and
in
test
lahf
pop
syscall
test
mov
in
fs
imul
incb
sbb
jle
inc
lock
mov
call
lret
in
loopne
scas
and
jbe
aas
bound
loopne
inc
pop
pop
in
testb
cmp
jo
pop
and
pop
test
ret
fstpl
lcall
in
inc
in
mov
mov
movsl
fisubs
es
mov
xchg
notl
lods
rorl
jne
cli
cmpsb
data16
dec
xchg
jb
lahf
rorl
adc
div
mov
or
adc
and
repnz
imul
js
pop
jge
or
insb
cmpsb
and
addr16
mov
fisubs
jae
inc
push
dec
mov
xor
inc
pushf
cld
push
and
pop
sbbb
loopne
jbe
fwait
mov
movsb
mov
cmpsb
ja
jbe
pop
cmc
xor
mov
ror
sbb
cmp
add
pop
inc
add
enter
inc
push
jbe
sbb
xchg
sub
push
movsl
mov
adc
pop
xor
cli
rcr
push
cmpsb
jp
in
sub
mov
dec
out
lds
shl
mov
push
jecxz
cmp
lock
enter
bound
mov
aas
xlat
scas
test
mov
adc
pop
xor
sub
out
rcrl
lea
jb
inc
mov
and
push
jae
notl
mov
mov
aad
push
pop
test
pop
pop
lcall
dec
mov
in
enter
push
add
mov
or
sbb
pop
ret
xchg
pop
mov
and
dec
movsl
inc
sarl
cli
das
dec
pusha
popa
fldt
pop
sahf
xchg
test
dec
sub
scas
stc
or
inc
dec
push
jns
in
rol
leave
in
out
lds
cmpsb
imul
mov
pushf
sbb
call
sbb
xchg
lahf
mov
mov
fcomip
imul
mov
testb
dec
shrl
imul
ss
sub
lea
lret
enter
gs
sbb
xchg
cmp
mov
sti
mov
pop
shrb
cltd
es
cltd
xor
adc
xchg
stos
sbb
repnz
xor
jl
xor
add
shlb
out
cld
mov
pusha
scas
aam
shll
dec
inc
sbb
jg
fwait
cmp
or
sbb
imul
mov
jmp
pop
into
xchg
and
adc
bound
cmc
gs
sbb
jge
jns
data16
mov
aaa
negl
into
gs
sbb
add
sub
repz
out
aam
sti
adc
jno
push
push
sub
out
push
outsb
jge
and
cmp
mov
outsb
jne
adc
cmpsb
mov
ds
and
adc
vpcmpgtb
jmp
xchg
adc
out
hlt
cmp
outsl
xchg
push
repz
mov
jo
mov
mov
das
inc
pushl
or
dec
add
flds
mov
jl
into
fs
cmp
pusha
scas
push
mov
push
jb
xchg
shrb
out
out
push
sarb
push
mov
test
jle
arpl
xchg
popf
inc
stos
ljmp
cli
xor
add
nop
addr16
ret
fnstsw
rorl
insb
fsubrl
add
cs
push
aad
sbb
pushf
scas
xchg
xchg
popa
faddl
cmp
pop
movsl
dec
out
movsl
add
insl
add
stc
or
popf
dec
or
inc
mov
fcompl
fsubrl
imul
jne
pop
and
pop
mov
movsb
cmp
push
mov
mov
les
sbb
mov
mov
fwait
fs
sbb
sub
out
xchg
inc
sbb
inc
jge
mov
mov
rclb
push
test
xchg
imul
add
fisttps
das
aam
sbb
lcall
in
daa
das
scas
push
mov
pop
inc
inc
test
fsubs
hlt
ficomps
fcoml
test
jno
gs
mov
mov
inc
jo
in
insl
inc
inc
test
cmp
mov
adcb
and
bound
imul
jae
jns
push
adc
adc
in
inc
and
in
test
mulb
pop
cld
in
sbb
or
inc
mov
addr16
dec
inc
leave
insb
js
and
adc
inc
aas
cld
xor
repnz
call
clc
or
je
out
push
or
daa
lods
es
test
decb
lea
notb
mov
sbb
rorl
add
arpl
pop
xor
xchg
mov
xor
cmp
xchg
adc
aaa
stos
in
cld
sbb
int
sbb
sarl
or
fdivr
adc
fdiv
xor
ret
adc
xor
add
mov
sub
mov
ret
mov
inc
les
mov
rorl
adc
jne
xlat
dec
push
jne
subl
xchg
and
push
dec
cmp
push
sub
in
lret
mulb
sti
fidivl
cld
cmp
mov
sbb
call
and
push
movsl
xchg
arpl
and
call
push
jnp
les
ret
shrl
imul
loope
lods
test
inc
jb
lcall
mov
insb
sbb
fidivs
dec
or
mov
sbb
lahf
sub
sub
xchg
ret
dec
in
inc
mov
mov
adc
psrlw
sahf
mov
repz
lods
adc
daa
mov
out
cltd
hlt
mov
sub
data16
rolb
xor
js
cwtl
das
mov
int3
arpl
cmc
xlat
sub
fidivrl
subl
sbb
cmpsl
jle
pop
lock
rolb
xchg
xchg
cmc
aad
push
js
mov
ret
hlt
cmp
cmp
mov
mov
test
repz
dec
repz
add
aad
je
push
xor
or
fldl
pop
cmp
mul
mov
jmp
scas
push
add
jne
sbbl
test
ret
add
jns
xor
mov
dec
inc
push
push
sub
popa
and
lcall
loope
and
shlb
sub
sahf
mov
cmp
js
outsb
aas
sub
stos
or
or
xchg
mov
cmc
sbb
stc
popf
sbb
movsl
icebp
pop
xchg
xor
out
xchg
test
hlt
cmp
je
inc
jae
push
fwait
cmp
and
and
jl
ljmp
aad
inc
fs
movsb
or
or
popa
adcl
and
mov
into
dec
mov
jg
ja
fsub
jg
out
ljmp
add
repnz
xlat
cmp
outsl
xor
incl
lods
push
sahf
cmc
push
lret
jae
movsl
icebp
bound
and
addr16
mov
bound
add
fsubr
mov
aas
fwait
ja
xor
arpl
rcrb
push
cmc
mov
jbe
cmp
xchg
daa
fucomi
or
cmp
sbb
cmp
repz
sub
outsl
jmp
out
xor
jle
inc
xchg
ljmp
insl
in
add
mov
sbb
lock
fsubr
jns
int
inc
add
xchg
adc
hlt
pop
int
jl
pop
lret
stos
inc
xchg
sub
das
scas
or
fnstenv
lcall
popf
testl
adcb
inc
mov
nop
arpl
notb
das
jno
mov
arpl
pop
pop
shl
roll
pop
inc
mov
lods
jo
outsb
iret
cmp
std
jmp
mov
lock
js
popf
sub
mov
pop
iret
mov
sbb
and
sarb
mov
outsb
inc
mov
jmp
into
test
xchg
popa
xchg
cmp
fisubs
xor
stos
rcll
fdivl
test
jge
jo
mov
scas
pop
add
xor
push
push
cld
xchg
test
adc
cmp
dec
lahf
out
pop
dec
mov
movsl
repnz
lods
popa
or
mov
adc
adcl
test
cltd
js
xchg
add
loopne
inc
setp
mov
aam
test
fisttpll
imul
inc
out
mov
aaa
or
dec
dec
xchg
mov
mov
add
push
popf
out
leave
xchg
lock
aad
pop
maskmovq
mov
mov
mov
cld
js
xor
lcall
mov
lret
bound
pushf
outsb
lds
gs
push
dec
jecxz
cltd
or
ljmp
push
xor
ret
xchg
xchg
dec
dec
cmp
sahf
cmp
jmp
dec
sbb
push
dec
jg
push
add
jae
movsl
adc
jl
push
xor
inc
add
ljmp
int
mov
sub
mov
std
add
test
add
cmpsb
push
dec
loope
xlat
push
pop
pop
jl
cld
cwtl
mov
xchg
mov
push
or
sub
pinsrw
dec
dec
mov
das
hlt
add
cmp
xchg
xor
dec
inc
call
jg
mov
aas
xchg
inc
mov
inc
loop
push
movsl
int3
or
icebp
push
stc
mov
jecxz
sbb
jbe
out
xor
shrb
stos
mov
mov
adc
sahf
jge
cs
movsb
shlb
or
lds
mov
inc
and
add
addl
xchg
lret
xorb
in
and
mov
or
data16
cmp
stos
jmp
inc
and
pop
cwtl
es
sbb
sahf
scas
pop
adc
mov
push
lods
or
mov
enter
call
xor
fwait
and
mov
push
and
jne
cmc
js
aad
cld
sub
out
push
sti
pushl
aad
mov
les
adc
les
aad
ljmp
addr16
mov
les
adc
push
repnz
sti
repz
es
adc
pop
push
pop
add
cmp
in
lods
inc
scas
xor
fsubl
xor
das
jne
sbb
add
push
xor
test
pop
insl
xchg
jbe
xchg
mov
dec
icebp
add
movsl
das
lret
jb
add
add
in
imul
out
xor
cmp
adc
xor
fdivp
stos
jbe
lock
fistl
pop
xor
pop
xchg
into
fbstp
fsts
rorb
xor
sub
pop
mov
sub
lret
add
pop
xor
xor
rol
adc
push
stc
out
cmp
mov
sbb
or
jge
cmpsl
insb
mov
sub
lret
adc
jle
cmpsl
out
push
and
jo
vcomisd
jle
imul
push
arpl
cld
inc
push
fdivl
bound
xchg
cmp
bound
mov
insl
jge
and
push
pop
jbe
and
sahf
pop
cmp
call
stos
push
sbbb
xchg
sub
cmpsl
dec
adc
in
sbb
xor
clc
js
sbb
pop
icebp
jl
daa
mov
loopne
mov
je
loope
out
sbb
insl
mov
sub
lret
stc
add
lods
cli
mov
sub
pop
push
popf
lds
jno
out
cmpsl
icebp
dec
dec
cltd
jo
shrl
ds
outsb
out
sahf
sahf
mov
jp
loop
mov
inc
aas
jnp
pushw
push
ret
hlt
js
cmpsb
ds
aas
jecxz
dec
dec
mov
cs
js
push
dec
mov
andb
adc
push
test
jmp
or
jle
jl
and
jb
cmpl
jl
aaa
xchg
stos
adc
add
mov
int3
and
cli
stos
push
xchg
in
movsl
mov
aad
stc
pushf
xor
mov
int3
test
pop
fnstcw
std
adc
cmp
mov
fisttpll
add
movsl
push
out
push
pop
push
loope
div
dec
cmpsb
in
pushf
dec
pop
shrl
jg
jb
push
out
scas
and
sar
shlb
or
pop
aaa
xchg
jmp
shlb
and
es
dec
sahf
xor
dec
call
fisubrs
fdivr
jle
sbb
dec
dec
dec
rcll
jno
pop
js
popf
push
and
push
jb
cmpsb
dec
jmp
stc
nop
std
sbb
and
test
insb
js
dec
stos
ret
dec
mov
lret
aad
data16
add
push
or
mov
cmp
xlat
dec
shl
mov
and
sti
dec
cmp
xchg
loopne
push
mov
or
movsb
nop
add
jns
sbbl
dec
lcall
mov
stc
jmp
mov
adc
jns
fsubrs
ja
icebp
xor
cld
xchg
dec
in
mov
lret
and
push
mov
arpl
jge
or
xor
shr
xor
ret
cmp
ret
ja
adc
frstor
mov
movsb
ja
xor
xor
pop
mov
push
pushf
mov
jnp
stos
in
fst
push
mov
mov
jae
push
jg
je
lods
mov
jnp
js
push
orb
jle
pop
mov
push
aam
sbb
add
dec
lea
xor
push
lods
dec
ficompl
ficomps
das
testb
cmp
test
pop
cwtl
lods
mov
cmc
mov
sbb
inc
pop
inc
inc
inc
rcll
pop
les
pop
mov
mov
push
mov
xor
lret
xor
jecxz
pop
adc
add
cmc
cs
out
jnp
mov
outsb
xor
pop
fnstcw
pop
pop
add
sub
pop
cld
in
sub
pusha
and
in
sti
inc
popa
loopne
pushf
and
test
inc
js
mov
js,pn
add
pop
cli
mov
in
das
adc
rorl
mov
or
or
sbb
subb
add
in
shll
pop
repz
push
lret
adc
aad
ja
mov
push
cmp
insl
adc
orb
pop
lds
loopne
mov
les
addr16
jg
mov
loopne
popa
pushf
jae
pop
jl
into
inc
cli
dec
std
ss
sbb
or
lret
repz
lret
fdivl
js
cmp
pusha
adc
pop
add
pop
adc
xor
mov
clc
jp
sbb
xchg
adc
xchg
push
pop
or
pop
jbe
pop
icebp
scas
xchg
cmpsb
push
in
add
push
xor
sbbb
stos
mov
in
inc
xor
stc
cmp
xlat
dec
lret
repz
adc
mov
lcall
jo
jecxz
push
adc
xchg
mov
icebp
push
mov
inc
pop
jge
sbb
popf
jg
lods
jge
mov
cli
daa
sub
das
addr16
leave
lods
mov
cld
push
adc
imul
test
sti
testl
cmp
lcall
push
sub
int3
jecxz
daa
leave
std
or
jno
cmc
push
and
lods
fcmovnbe
pop
sahf
or
je
jns
je
pop
cmpsb
xchg
mov
jno
xor
mov
ja
ret
push
dec
fdivr
add
cmc
jns
mov
scas
fbld
jg
jle
ss
sub
inc
xchg
sub
cli
xchg
xchg
popf
mov
push
lahf
sbb
jno
cli
push
xor
inc
dec
lock
ret
cmp
jnp
jae
xchg
adc
filds
cmpsb
lea
cmpsb
mov
roll
push
xchg
jmp
cmp
jo
sti
or
mov
adc
jg
hlt
in
aam
sbb
lock
mov
sub
adc
iret
mov
push
cli
xlat
lods
jnp
add
push
xchg
push
ds
dec
pop
jg
mov
call
rcr
inc
mov
jne
adc
pop
mov
loope
jo
xlat
repz
mov
cs
mov
xchg
ficomps
negb
sbb
stos
push
cli
cmp
int3
or
cmc
imul
out
cmpsl
clc
xchg
push
jle
xor
sub
ret
sub
cmp
push
push
lea
mov
lahf
repz
rcl
push
mov
push
jmp
loope
jo
decb
dec
js
dec
ljmp
pop
mov
out
int3
in
sub
loope
dec
loopne
add
xchg
xor
sbb
int3
dec
test
fdiv
cwtl
stos
cmp
xor
push
fnstcw
pop
into
cmp
cli
adc
or
cmpsl
pop
or
cmp
jo
add
pop
mov
rolb
or
lret
or
data16
sub
dec
bound
push
dec
sbb
jl
shll
jo
pop
es
xor
pusha
jge
mov
bound
loopne
aam
pop
lret
les
mov
stos
bound
push
adc
ljmp
cld
pop
mov
xchg
cmpsl
mov
fildl
lods
cs
aas
adc
and
mov
ret
ds
mov
loopne
jmp
int
sub
xchg
mov
jne
cmc
cwtl
mov
xchg
mov
add
sub
inc
pop
or
lods
pop
or
xchg
stc
ss
add
xor
pop
test
rorb
push
add
mov
inc
popa
roll
add
out
sbb
rorl
fisttpl
fsub
jge
bound
dec
imul
adc
sub
or
in
aas
jns
movlps
adc
das
pop
lods
mov
insb
add
out
dec
push
sbbl
pop
jb
xchg
xchg
xchg
pop
imul
dec
lods
jbe
test
and
cltd
xchg
mov
jno
jae
xchg
push
rclb
cmpsb
fidivs
sbb
pop
scas
push
movsb
jbe
sbb
adc
imul
fidivl
sahf
jmp
jno
shlb
stc
sarl
push
push
stc
or
jae
dec
rcl
insb
jle
test
mov
pop
push
sbb
ja
or
sahf
shrl
dec
xor
addb
lods
in
cmp
xlat
aam
mov
stos
shrb
ljmp
out
sahf
clc
inc
ror
push
imul
mov
mov
inc
sub
xor
fstps
imul
je
sarb
loop
adc
sbb
add
loop
sbb
adc
xchg
sub
mov
test
jae
lock
orl
pop
inc
jp
test
addr16
rclb
and
aad
xor
cld
xchg
add
fnstsw
iret
push
mov
add
push
inc
aas
aam
mov
inc
clc
cmpb
lods
mov
data16
cwtl
sar
and
ss
xchg
jne
add
in
mov
mov
mov
mov
lock
ret
push
dec
push
mov
mov
stc
and
fnstcw
mov
and
inc
ficoms
das
stc
pop
xor
scas
mov
or
or
pop
mov
or
xchg
pop
jns
xor
stos
pop
pop
adc
ret
stos
sti
ja
shrb
lcall
ss
or
lret
fstl
sahf
aas
arpl
sahf
inc
loope
xchg
inc
jne
mov
orl
ret
mov
add
iret
cmp
mov
cmp
sbb
data16
pop
dec
or
adc
les
fsubr
or
in
mov
lods
dec
jecxz
jl
xchg
sub
push
mov
fwait
jnp
pop
lds
mov
pop
xor
cmpsl
cmp
mov
xchg
mov
adc
scas
mov
or
pop
jbe
xor
xchg
in
mov
cmpsl
ret
pop
outsb
jne
ret
cmp
rclb
loop
pop
inc
sbb
cli
movsb
test
insl
push
xchg
adc
inc
mov
jmp
stc
shlb
adc
dec
in
ret
into
add
xchg
cmp
hlt
es
or
mov
out
pop
xor
ret
rcrl
mov
addr16
sbb
xchg
jle
mov
scas
mov
cmpsl
mov
ss
jmp
es
jbe
cld
movsl
mov
inc
in
add
fwait
mov
popa
xor
and
adcl
fldcw
jecxz
ror
enter
stos
loope
fnstsw
popf
outsl
jno
in
insl
add
pop
mov
inc
mov
push
pop
ret
fnstsw
ds
push
dec
sbb
movsb
or
loope
loope
fbstp
aam
fs
mov
pop
cmp
testb
dec
sub
cli
xchg
lds
lods
dec
dec
xchg
add
test
popa
and
push
aas
shlb
pop
xor
add
push
std
inc
sbb
fcomip
fmul
push
nop
mov
jmp
and
mov
push
inc
push
das
inc
cmp
add
shlb
enter
adc
push
inc
gs
mov
mov
jb
mov
incl
shrb
add
sbb
mov
inc
call
or
dec
loope
sub
pop
ljmp
mov
out
sbb
inc
dec
jp
cmp
mov
dec
jns
les
cmpsl
mov
xor
pop
xchg
stos
fldcw
popa
inc
sub
and
inc
fmul
fsubr
jne
in
test
xchg
add
mov
fldcw
pop
mov
pop
fadd
fisubrs
dec
dec
add
cwtl
push
scas
dec
and
das
pop
xor
loopne
sub
in
xor
test
xchg
mov
fucomip
mov
sub
mov
jo
mov
int3
xor
jns
fimuls
inc
aas
in
test
aaa
fstl
mov
imul
into
pop
adc
movsb
leave
cs
cmp
jo
in
fldenv
mov
mov
xlat
push
leave
and
cli
repz
or
in
loopne
test
mov
fnstcw
scas
mov
shll
or
iret
flds
or
cmp
dec
adc
outsb
push
out
je
and
pop
stc
sti
xor
fs
push
pop
mov
add
nopl
xor
adc
push
imul
or
dec
xor
insl
mov
xor
movsl
inc
jmp
arpl
mov
aas
xchg
in
pop
lahf
fdivrl
dec
fcompl
lock
jle
lods
cmp
gs
inc
dec
shr
in
int3
ss
sbb
in
jbe
rol
data16
cwtl
out
mov
mov
iret
xlat
out
cmpb
xchg
push
loope
lea
data16
inc
negl
mov
push
inc
std
mov
cmpsb
push
and
stos
push
lods
push
xchg
rcll
sub
scas
inc
int3
push
mov
xchg
mov
fnstenv
xlat
mov
ret
fisubl
sub
mov
lds
jbe
adc
movsb
cwtl
das
dec
aam
xchg
add
or
addr16
out
inc
mov
add
inc
movb
aam
out
frstor
outsl
lea
cmpsl
loope
cmp
aas
jge
xchg
adc
push
mov
mov
rcrb
mov
mov
adc
xchg
stos
vpand
insl
push
fs
fiadds
rclb
int3
repnz
ret
jle
ret
in
lahf
jg
mov
or
xor
sbb
and
cmp
add
mov
shr
scas
sub
scas
inc
mov
hlt
adc
aad
fs
xor
rcr
test
pop
out
int
cmpsl
popa
out
jbe
and
jns
mov
mov
aas
adc
fists
push
icebp
imul
pop
cmp
addl
sbb
arpl
fs
dec
mov
pop
mov
pop
jecxz
scas
inc
pushf
jp
or
int
adc
jne
jecxz
adc
jnp
add
cmc
mov
lods
cmp
mov
xor
pop
pushw
cltd
xchg
mov
hlt
addr16
inc
clc
test
xchg
lret
xchg
mov
in
jnp
xchg
adc
adc
loope
js
cmp
lds
pop
jae
leave
cmp
add
loop
pusha
jb
push
inc
cmpsl
sbb
mov
rcll
mov
pop
push
jnp
test
mov
aad
sahf
jp
out
lock
call
adc
leave
cmp
cmc
push
imul
rclb
adc
jne
lahf
sub
lds
lret
stc
fdivl
insl
andl
xor
fnstenv
mov
cmp
adc
mov
adc
sbb
cwtl
lods
xor
xchg
sub
add
sub
ficoms
push
adc
out
repnz
push
sbb
push
or
mov
sub
xchg
add
sub
and
or
jne
inc
pop
or
mov
shll
pop
dec
adcb
mov
sub
mov
mov
adc
mov
mov
out
les
loope
scas
xchg
sub
aas
pop
mov
jmp
icebp
inc
mov
sti
jo
outsb
movsb
sbb
jae
push
repnz
out
push
iret
arpl
xor
fldl
add
call
sti
shl
loopne
test
std
push
fldl
in
aaa
ljmp
pushf
and
fs
cmp
sbb
not
mov
jle
cmpsb
pop
shrl
push
in
sbb
sub
clc
test
movsb
dec
push
and
out
and
sahf
fisubs
xor
inc
xor
fidivs
lock
cs
mov
aas
jne
xor
movsl
push
data16
mov
mov
inc
pop
lret
cmp
cmc
pop
rcrb
inc
or
in
sub
sub
mov
ret
stos
push
int
test
jo
shrb
xor
ja
int3
cltd
mov
aam
pop
lret
pop
dec
stc
movsb
push
inc
lea
pop
mov
sub
inc
in
cmp
sar
mov
divl
jmp
out
aad
mov
ficoml
in
stc
mov
inc
lea
inc
or
stos
lahf
shlb
dec
cmc
or
repnz
test
ss
push
sub
loopne
mov
cmp
fdivrl
pushf
cs
jae
in
in
lods
mov
iret
test
cmp
push
les
mov
gs
rorl
push
cmp
xchg
mov
mov
mov
push
out
pop
mov
pop
jmp
test
mov
dec
xlat
xchg
mov
mov
stos
adc
mov
ret
outsl
sub
xor
shrl
mov
scas
jg
lahf
enter
dec
jmp
push
lcall
or
dec
scas
and
test
iret
mov
fmulp
cmp
fiaddl
mov
mov
ret
add
lret
add
xchg
push
pop
lods
int3
adc
sbb
push
lods
lret
pop
mov
fs
in
jl
sbb
mov
cltd
xor
stos
lds
pop
test
inc
ret
sbb
adc
ja
inc
cli
test
repnz
xchg
es
aam
repz
jno
mov
adc
inc
mov
lea
cmp
inc
addl
or
in
jno
push
xchg
mov
sahf
pop
and
movsl
add
lds
shrl
loope
jp
pop
inc
es
mov
iret
shl
lods
hlt
sahf
clc
pop
sahf
or
rcrl
inc
and
out
cmc
lods
inc
rcll
cltd
insl
add
lock
mov
dec
enter
insb
mov
push
mov
dec
arpl
fcomip
sbb
enter
mov
mov
cmc
mov
vpmullw
pop
push
add
inc
sub
fnstsw
lods
clc
stc
lret
sub
inc
xchg
das
loop
sbb
cmp
inc
dec
faddl
jae
inc
dec
dec
cmpb
jmp
repnz
xchg
ret
dec
pop
into
in
xor
and
cmpsl
jb
jo
inc
inc
frstor
aam
inc
fisubrs
fsubrl
mov
or
dec
imul
mov
ret
clc
xor
mov
pop
loope
xchg
scas
push
sti
xchg
jo
xchg
pop
jne
mov
test
loop
mov
icebp
dec
add
pop
xor
or
dec
pop
enter
iret
sbb
cmovs
mov
lret
cmp
ss
jb
add
popa
inc
enter
sub
mov
jno
or
inc
loop
inc
nop
or
cmp
sbb
pop
iret
mov
mov
sbb
outsl
jmp
or
lock
add
add
xor
sbb
std
push
cmp
xor
std
pop
sub
sub
shrl
fsubl
mov
leave
add
add
in
or
aas
rolb
dec
rcrl
add
pop
cmp
and
sti
push
sti
mov
adc
mov
ret
inc
sbb
xor
sbbl
jns
dec
insb
lods
xchg
push
adc
lret
repz
arpl
nop
xchg
mov
fdivs
jo
and
imul
lss
cmp
movsl
iret
movsl
cwtl
sub
stos
push
mov
je
std
push
loop
mov
andl
fnsave
es
mov
mov
jp
dec
inc
out
xor
jmp
out
cmp
outsl
pop
inc
jb
aaa
mov
pop
mov
ret
cmp
cmp
inc
stc
push
insl
sub
aaa
pop
sub
sti
or
subps
sarl
sub
mov
jp
adcl
stos
cs
push
jmp
repz
das
fdiv
jb
adc
rolb
jns
mov
sti
jnp
cmc
insb
shld
and
ljmp
or
and
pop
pop
mov
sbb
dec
mov
mov
jl
jb
jb
jge
sbb
jno
cmp
out
jmp
loopne
movsb
and
out
out
stos
into
gs
sti
cmpsb
in
das
pop
enter
push
add
dec
cmpsb
jno
sbb
ret
ret
sbbl
push
xchg
test
test
adc
mov
lock
mov
mov
xchg
add
mov
cmpsl
in
sahf
fcompl
imul
popf
addr16
hlt
pop
aaa
mov
andl
pushf
sub
pop
lahf
inc
sub
pop
repnz
mov
pop
adc
and
mov
jnp
mov
jmp
mov
push
mov
fwait
push
std
cmp
xor
testl
inc
imul
cmp
fldcw
lret
jne
cltd
lods
add
sbbb
xchg
pop
cmc
shrb
lret
pushf
scas
add
sbb
mov
mov
lea
fisttps
jnp
pop
mov
stos
mov
jle
ja
test
inc
pop
xor
mov
inc
enter
aas
jmp
dec
inc
aad
popf
notl
mov
sub
data16
mov
mov
aam
fldl
xchg
xchg
int3
fdivp
mov
sbb
mov
mov
mov
outsb
push
bound
lea
cmp
cmpsb
lock
clc
movl
sbb
fidivrl
test
lcall
push
add
inc
pushf
adc
inc
jns
jno
xor
push
je
fcomps
fbld
enter
out
je
roll
jle
adc
push
or
insl
cld
xchg
pop
pop
dec
adc
cmp
sarl
push
stos
dec
pop
mov
xchg
jg
shrb
mov
cltd
inc
pop
mov
cmp
ds
dec
pushf
jmp
mov
pop
out
imul
cltd
cltd
hlt
mov
mov
ljmp
cmp
orl
icebp
popa
pop
add
dec
mov
adcb
das
cli
enter
aam
mov
cwtl
stc
in
pushf
sub
xchg
inc
adc
cmp
push
je
sub
mov
adc
fistpl
mov
shl
inc
push
dec
dec
mov
sub
cmp
pop
xchg
arpl
cmpsb
xor
shlb
mov
pop
jg
jp
and
pop
xchg
add
aam
xchg
sbb
leave
mov
pushf
or
int3
sub
or
popf
xchg
ror
outsl
mov
lahf
inc
test
inc
push
fsub
scas
outsl
out
cmpsl
faddl
fsubs
sbb
nop
invd
pusha
addb
out
inc
movsb
sarl
mov
sbb
mov
or
das
adc
ss
sbb
cmpsb
lahf
dec
pop
cld
push
scas
inc
dec
cmpl
push
xor
ljmp
add
push
jae
nop
std
push
xor
push
int3
and
cmp
stc
clc
add
ja
mov
loop
xlat
pop
mov
fsubrs
sti
test
data16
movl
mov
stc
adc
insb
mov
xor
xchg
add
pop
notb
in
mov
pop
inc
in
std
xchg
test
add
add
rcl
stos
xchg
insb
xor
lcall
out
jne
sub
daa
outsl
xchg
sti
mov
push
pop
in
push
lret
scas
sbb
and
adc
or
xchg
gs
cmpsb
sbb
adc
sub
pop
les
xchg
sbb
into
dec
add
cmpsl
xor
add
xchg
and
pop
and
pop
outsb
pop
or
std
dec
pop
cltd
popa
je
imul
push
loop
add
das
cmp
or
sbb
ja
in
pop
or
inc
inc
pop
out
ja
jecxz
ficoml
jp
cmp
out
xchg
pop
push
mov
outsl
inc
ret
hlt
testb
xchg
hlt
push
call
or
ljmp
stos
pop
jmp
mov
in
sahf
inc
lea
xor
sbb
popa
insl
cs
out
xchg
inc
out
popa
cwtl
icebp
out
test
jno
xor
pop
fiadds
es
cmpsl
xor
mov
xlat
fdivrp
or
and
stos
ret
dec
adc
jle
je
sub
sub
adc
cwtl
and
pop
sbb
mov
xor
rclb
sti
xchg
mov
fistpl
sub
out
test
ds
mov
and
cmp
fstpt
inc
insb
push
dec
fildl
mov
xchg
shlb
xchg
aam
fbld
sub
xor
scas
and
xorl
jb
pop
xchg
xor
sarb
ficoml
add
lds
mul
shll
pop
popf
adc
into
jge
mov
cltd
add
xor
mov
enter
sub
pop
aad
dec
dec
mov
or
rcrb
cmp
out
cld
shrb
idivl
cmp
out
mov
cmp
fnstenv
or
adc
and
jno
je
cli
push
sbb
ficoml
mov
mov
cmp
dec
stc
mov
jne
sub
movsl
fisubl
xor
sbb
imul
add
adc
and
decb
jmp
cmp
js
movsl
in
mov
sbbl
filds
fisubs
inc
push
lods
sti
ret
and
popf
out
mov
sbb
das
insb
shrb
std
mov
testl
ljmp
aad
shll
shrb
push
clc
inc
pusha
jl
lret
add
inc
pop
and
xchg
pop
jmp
cmc
ss
or
push
lcall
in
nop
cmpl
leave
das
inc
cs
lcall
push
inc
call
aad
daa
sbb
xor
imul
or
js
xchg
fdiv
mov
push
les
mov
push
test
shll
jns
jns
popf
xorb
xchg
adcl
ds
test
shlb
scas
out
sti
repz
adc
stos
mov
test
dec
dec
std
insl
or
inc
dec
and
out
push
inc
mov
jno
add
fwait
icebp
pop
jmp
inc
xor
pop
pushf
stos
iret
out
pop
push
or
call
clc
imul
orb
insb
frstor
andl
int
adc
andl
popa
dec
pop
fwait
xor
cs
lds
xor
insb
ljmp
fld
gs
pop
mov
add
mov
call
out
push
loope
cmpsl
adc
ja
imul
sub
jp
xlat
or
cs
movsl
xchg
lock
mov
add
inc
imul
pop
lcall
inc
fisttpll
out
inc
pop
xchg
pop
push
out
cmp
repz
cs
fs
sahf
vunpckhps
inc
dec
dec
sbb
fisttps
mov
movsl
js
adc
cld
xchg
movsl
xor
xchg
push
lea
push
pop
mov
jp
icebp
movsl
mov
jmp
pop
inc
pop
insb
dec
or
mov
shll
cmp
js
ds
mov
dec
mov
add
add
mov
into
andb
pop
in
std
cmp
cwtl
bound
inc
in
in
mov
loopne
ret
adc
add
sbb
aam
cli
push
inc
fsubrl
mov
xor
imul
push
iret
ss
fdivl
add
dec
inc
jno
out
lret
cmp
jmp
and
pop
sub
mov
loop
push
jmp
roll
mov
cli
or
pop
mov
movsb
cld
mov
scas
leave
xor
sub
cltd
sub
pop
fsubp
mov
inc
imul
sub
jo
inc
xorb
push
cmc
leave
pusha
call
pop
xchg
lea
sub
xchg
mov
jl
push
or
addr16
in
aam
lds
fidivs
sub
sbb
xchg
outsl
leave
jae
neg
stc
popa
lret
repz
sti
test
dec
in
mov
or
data16
jle
rcr
jns
mov
adc
sti
cmpb
pop
mov
clc
adc
imul
lea
and
es
lahf
jns
push
hlt
in
dec
inc
add
aaa
aas
xor
in
loope
pop
das
std
xor
cwtl
pop
scas
mov
daa
andl
shr
rolb
and
ret
icebp
movd
push
test
mov
cmp
pusha
fwait
mov
push
ja
inc
pop
mov
mov
adc
push
fstpl
add
lret
lods
jae
xor
push
pop
out
cld
mov
cwtl
stos
inc
iret
das
cli
jne
jo
dec
jbe
adc
out
fcmovbe
int
insb
inc
mov
sbb
add
imul
int
or
movzwl
or
cmpsl
jg
pop
inc
out
cld
mov
mov
inc
insl
fsubrs
mov
lret
stos
fxtract
inc
cwtl
jmp
mov
icebp
dec
fldenv
xor
push
push
repz
test
xchg
cmp
stc
mov
pusha
inc
add
mov
pop
cmp
addl
push
sub
rep
sbb
rorb
enter
out
xor
hlt
in
sub
pop
push
lock
xchg
pop
fimuls
xchg
in
loope
mov
js
test
movb
or
mov
sbb
xchg
into
fcmovnb
shll
cli
mov
cmpsb
jecxz
push
popf
popf
or
jno
stos
mov
cmpsl
jbe
int
fsubr
aad
push
adc
pusha
pusha
popa
lds
dec
or
adc
jne
shrl
jb
sbb
add
xchg
pop
add
xor
xor
test
out
iret
add
mov
lock
in
popa
das
cmp
jb
mov
mov
and
insl
xchg
mov
scas
and
lods
pop
stos
add
imul
mov
addr16
fstpt
and
adc
dec
cld
inc
or
test
sbbl
inc
stos
pop
cmp
sbbb
pop
mov
jo
sahf
scas
mov
outsl
ret
sub
icebp
dec
adc
out
push
imul
cmpsb
mul
mov
add
cmp
mov
lods
xchg
pop
add
sbb
nop
mov
call
gs
add
jns
xchg
mov
shl
mov
add
shl
pop
fadds
pop
loope
call
jl
xor
adc
add
or
adc
ds
int3
push
push
xor
movsl
icebp
sahf
push
cmpsb
jle
jne
and
hlt
mov
mov
mov
mov
movd
fstpl
divb
add
jecxz
into
gs
adc
test
repnz
cmp
insb
jnp
mov
add
imul
lret
sbb
xor
jecxz
insb
fadds
dec
mov
ret
sbb
bound
mov
or
push
es
into
clc
cmpsb
or
jnp
test
loope
mov
cli
push
pop
test
cmpsl
psrad
dec
shll
dec
sbb
lods
outsb
lods
mov
mov
jno
mov
inc
inc
add
xor
outsb
test
adc
jb
outsl
mov
xchg
jmp
fwait
gs
cs
repnz
pop
ds
pushf
ret
pop
dec
dec
sub
sub
andb
adc
pushl
jns
and
push
pop
mov
aad
add
fsubs
xlat
and
or
adc
fcoml
in
std
jne
xor
cmpsl
mov
push
in
mov
push
pushf
popa
mov
push
jge
aas
sub
push
sub
xor
push
mov
push
mov
sub
aad
jecxz
push
leave
jl
cmpsb
fcomps
lret
js
hlt
rcll
push
sbb
mov
jmp
and
popa
inc
adc
xor
mov
add
mov
subl
ror
inc
mov
xchg
fidivs
mov
sub
pop
inc
push
jnp
push
inc
add
pop
test
jge
mov
sbb
sub
mov
inc
sbb
testb
inc
fwait
jae
inc
xor
xor
and
sub
movsb
jg
stc
mov
lds
and
push
decb
std
and
sbb
mov
idiv
lret
jo
add
xchg
and
inc
push
out
dec
mov
jne
movsl
out
jmp
idivl
jae
fcomps
add
sub
scas
add
xchg
das
adc
push
pop
rcrb
aas
add
fsubrs
cmp
popl
or
jae
clc
mov
stc
and
mov
inc
push
lods
jae
repnz
xchg
iret
adc
sub
pop
movsb
xor
inc
cmp
inc
fcomps
mov
jmp
pop
inc
mov
mov
sbb
pop
mov
adc
xchg
iret
jecxz
push
mov
sub
aam
mov
mov
push
sub
pusha
fcomi
ja
xchg
test
jle
add
add
insb
dec
pop
sub
movsl
notb
pop
add
jno
fsubs
xchg
bnd
movsb
jae
xlat
add
stos
ficoml
repnz
in
mov
rclb
and
mov
mov
daa
aas
xchg
push
test
popa
add
xchg
xchg
and
imul
pop
mov
xchg
cltd
aad
xchg
mov
jbe
les
mov
pop
xlat
jecxz
int3
sbb
cmp
inc
popa
outsb
outsb
cmpsb
iret
pop
cwtl
daa
jnp
xor
xchg
test
dec
push
lea
mov
push
jge
cmp
inc
mov
and
sub
insl
dec
xchg
popa
ljmp
mov
xchg
cld
out
insl
ror
shll
imul
cs
mov
sbb
dec
inc
push
fwait
inc
push
push
pop
int
jo
push
mov
popf
test
xchg
bnd
jle
pop
mov
jecxz
mov
push
aam
ja
sub
je
ret
or
repnz
dec
push
xchg
imul
idiv
shll
pop
xchg
outsl
aas
adc
lcall
loopne
mov
test
add
cmp
popa
and
inc
enter
in
xor
divb
fmull
and
movsl
lretw
inc
lret
insl
loopne
loop
add
xor
adc
pop
push
jns
movsl
inc
in
icebp
adc
test
rorb
fcoms
xor
lret
xor
js
iret
fsubl
xchg
sbb
aam
and
loope
movsb
fwait
and
push
rorl
cmc
cmp
and
inc
enter
call
movsl
adc
inc
repz
mov
push
xchg
jno
mov
adc
mov
pop
out
jle
jae
pop
dec
fdecstp
jl
jnp,pt
mov
pop
push
shll
push
int3
test
push
ret
neg
in
or
jp
mov
das
aad
mov
jne
imul
xchg
xlat
cmp
in
xor
lock
push
negb
mov
inc
inc
add
mov
fisubs
pop
mov
clc
cmpsl
out
push
aas
push
sbb
add
sti
pop
adc
push
cmpb
xchg
shl
dec
add
leave
lcall
insb
xor
mov
test
aam
sbb
mov
loope
adc
add
adc
or
hlt
or
cmp
std
cs
fisttps
insb
scas
add
cmp
rclb
fistl
popa
lods
and
fxsave
lock
inc
sbb
add
lods
jg
sub
and
jbe
sbb
test
xchg
out
inc
lret
jbe
jno
arpl
divl
fdivrl
cmp
loop,pt
imul
mov
xchg
sub
sub
mov
xlat
and
sub
in
out
pop
jmp
ljmp
add
inc
stos
xchg
insl
xchg
sbb
enter
cmc
inc
adc
lock
gs
sarb
ss
movsb
cmp
xchg
and
ljmp
roll
ret
cmp
sbb
ljmp
push
or
sbb
push
roll
jmp
push
icebp
mov
or
outsb
jnp
or
es
lock
sbb
std
mov
mov
cs
pop
stc
movhlps
xchg
or
fcompl
nop
or
stos
mov
insb
jecxz
dec
cmp
in
cs
cmp
imul
test
pusha
out
outsb
and
in
mov
jg
pop
xchg
lock
loope
shl
or
adc
and
jle
loopne
mov
cmpsb
mov
hlt
and
xchg
jle
push
aas
into
pushf
data16
test
or
mov
adc
or
and
pop
fiadds
xchg
pop
out
lret
cltd
jecxz
pop
mov
stos
jbe
sub
jmp
pop
adc
pop
mov
or
jb
pop
jecxz
xchg
aad
lea
cli
xchg
xlat
mov
out
out
cld
out
dec
pop
pop
imul
mov
mov
mov
xor
dec
sbb
insl
push
cmp
enter
lock
nop
rcrb
rcrl
sbb
and
imul
jno
mov
mov
pop
fbstp
popa
mov
cmp
or
out
jns
mov
jo
test
mov
or
test
repnz
xchg
test
push
push
sbb
push
sbb
cmp
filds
mov
data16
adc
mov
dec
inc
push
mov
mov
jno
xlat
in
add
popl
cmpps
scas
rclb
insb
push
sub
inc
mov
xchg
mov
movsl
adc
daa
mov
dec
sub
jmp
cli
popf
mov
into
fwait
fisttpll
imul
inc
lea
jae
sbb
jo
clc
jae
sbb
ds
gs
data16
jae
xchg
push
jb
mov
gs
mov
cmp
std
cmc
mov
out
adc
xchg
lret
iret
repz
ds
ds
jmp
out
add
xor
or
cld
push
and
xor
je
xchg
jmp
jle
dec
cwtl
jge
pop
sbb
and
mov
xchg
divb
push
movsl
sbb
aas
adc
stc
test
jmp
or
icebp
inc
cltd
fwait
or
push
and
add
adc
repz
and
mov
shl
sub
cmp
repz
int
dec
pop
xchg
push
cli
or
mov
repnz
iret
and
push
pop
cmpsb
xorl
call
inc
jae
ret
jl
data16
stos
arpl
hlt
into
imul
mov
mov
arpl
sub
lods
and
cld
leave
popa
mov
fistps
or
jne
idivb
push
das
addr16
jg
frstor
imul
mov
cmp
xlat
pusha
addb
dec
mov
bound
adc
mov
lret
gs
inc
or
jo
add
lock
lock
shll
sahf
inc
sbb
and
sbb
decb
jge
ret
jno
loopne
xor
xchg
cmp
push
cmp
cmp
rorb
iret
ljmp
pop
add
sub
rcr
lods
cmp
cwtl
jmp
cmpb
mov
pop
out
into
gs
ds
in
test
mov
stc
xor
mov
sub
mov
clc
mov
fidivrl
int
lock
loopne
sarl
push
repnz
fisubrs
ret
in
loope
or
test
push
and
mov
adc
stc
int
fsts
test
jo
or
xchg
xor
ljmp
inc
enter
ds
pop
and
xor
push
jno
jo
ja
xchg
pusha
jge
pop
mov
int
add
inc
sub
ds
fs
sub
mov
add
xchg
dec
cmpb
cwtl
adc
push
jb
ror
or
sbb
dec
pop
sub
cmp
cmp
int3
add
pop
adc
sbbl
rorl
pushf
sub
pop
call
xchg
outsl
aad
leave
outsl
aad
call
in
daa
jo
mov
and
in
mov
push
fcomps
mov
add
sub
rcl
push
gs
dec
mov
cmp
stos
add
xchg
loope
mov
out
mov
sbb
xchg
jl
nop
sbb
sub
test
and
sti
lret
xchg
jns
fwait
lahf
clc
and
sti
mov
fwait
lahf
cmp
xchg
hlt
add
cmp
xchg
mov
ss
hlt
fsubr
ljmp
outsb
insb
test
push
bound
adc
jl
fwait
or
ljmp
cmpl
incb
sti
sub
pushf
sub
subl
scas
dec
call
push
xchg
mov
pop
in
out
jnp
fs
adc
pop
dec
mov
xchg
add
mov
scas
or
cmp
js,pn
pop
sub
lock
xchg
jno
sbb
enter
sbb
sbb
loopne
xchg
pop
dec
mov
ret
pop
sub
fdivr
inc
cs
mov
call
aaa
das
xor
mov
pop
cmpsl
adc
ljmp
aas
in
dec
je
pop
xor
jne
cmovae
jb
pop
jno
inc
ds
or
dec
hlt
push
ret
adc
subl
add
lods
lret
fbstp
les
testl
popaw
add
pop
push
or
and
mov
les
or
and
dec
popa
mov
inc
xlat
mov
dec
jne
imulb
jnp
add
jb
in
aaa
jmp
je
fisttpll
ror
rorl
push
xchg
push
or
lods
filds
mov
jno
jb
push
fistpll
push
scas
push
movsl
gs
sub
jo
rol
mov
jg
xor
inc
pop
push
jb
hlt
or
jmp
fldcw
sub
lcall
dec
leave
or
sub
call
mull
pop
out
inc
leave
mov
mov
mov
rcl
mov
mov
pop
push
rclb
lret
es
mov
scas
pop
ja
mov
ret
loop
push
adc
add
ret
cmp
adc
jp
inc
mov
mov
addr16
in
cwtl
pushf
cmp
jae
js
pop
lret
iret
fildl
adc
xchg
xor
sbb
pop
mov
scas
rcrl
das
mov
mov
xchg
add
push
subb
xchg
jae
ret
dec
js
sub
dec
adc
test
jnp
into
das
test
lea
or
xchg
ljmp
pop
mov
add
out
mov
dec
add
fdivrs
test
pop
mov
mov
enter
fisttpll
sub
mov
pop
jp
add
xchg
dec
loopne
cmpsb
insl
das
add
xchg
add
loope
mov
repz
dec
rep
out
add
sbb
and
in
xchg
fstpt
dec
out
shl
aaa
into
pusha
lahf
test
xor
xchg
push
test
jae
inc
aaa
stos
imulb
loopne
gs
xor
js
ss
mov
rclb
pop
cmpsb
clc
stc
adcb
push
lea
scas
lock
cmpsl
out
sub
pusha
sbb
mov
loopne
mov
xor
in
fsts
push
in
insb
sbb
push
rcl
fimuls
es
mov
or
inc
fxch
mov
pop
lret
pop
pop
std
sbb
fstpt
jp
lea
sub
jmp
in
sub
mov
shr
cmc
xchg
add
xlat
in
inc
lods
fsub
xor
dec
pop
mov
inc
and
inc
lret
mov
push
pop
cmp
in
sbb
cmp
cltd
dec
in
fsubrl
outsb
cli
pushf
mov
inc
mov
out
push
or
inc
push
dec
outsl
inc
call
ljmp
mov
inc
lock
dec
cmp
in
jo
sbb
mov
mov
rcr
cltd
inc
pop
dec
jl
ja
push
sbbb
or
mov
movsl
jp
xor
nop
pusha
scas
mov
inc
icebp
adcb
xorb
bound
mov
mov
sub
or
sbb
inc
inc
out
mov
jge
sbb
add
lret
xchg
int
jge
mov
and
lret
test
cmpsb
sub
pop
outsb
into
popa
mov
aam
test
loopne
dec
stos
adc
sub
leave
addb
dec
sahf
sahf
mov
dec
aas
sbb
mov
cli
gs
cmp
in
and
and
lret
daa
xchg
mov
jnp
and
jecxz
mov
inc
mov
in
test
adc
outsb
mov
rorl
mov
adc
push
pop
imul
and
vpunpckhbw
jecxz
iret
xchg
dec
and
into
enter
mov
or
sbb
inc
jle
pop
jo
pop
push
dec
vmptrld
hlt
imul
cmp
rol
jg
push
subb
jg
rorb
xor
dec
pop
dec
pop
fcom
pop
mov
or
mov
cwtl
out
ss
adc
arpl
out
mov
fs
xchg
adc
and
add
cmpsb
xchg
pop
jb
add
add
outsb
mov
sbb
xor
clc
enter
xchg
inc
cmp
inc
adc
sti
sub
mov
inc
and
popf
adcb
icebp
cmp
push
rcrl
es
outsb
or
mov
mov
pop
adcl
repz
mov
mov
jp
jge
fidivs
aas
pop
mov
dec
xlat
movntq
fisubrl
xchg
test
ret
adc
or
mov
mov
jmp
lock
pop
ja
xor
xchg
cmp
loope
insl
sbb
mov
test
adcb
ss
mov
in
pop
mov
cmp
movsb
sub
outsl
inc
mov
dec
rcrb
cmp
xchg
push
pop
arpl
daa
sbb
fldt
arpl
testb
ljmp
lea
cmp
jl
mov
mov
push
ljmp
push
adc
les
shll
data16
outsl
mov
cmp
mov
sbb
dec
sbb
or
aaa
adc
sbb
sub
arpl
sub
ss
inc
pop
cmp
mov
adc
pushf
dec
dec
cmpsb
neg
idivb
jns
loopne
jo
mov
pusha
xchg
imul
dec
inc
xchg
dec
scas
shl
aad
and
dec
mov
in
cwtl
fbstp
inc
lods
shr
pop
jbe
mov
and
sbb
ds
pop
repz
inc
adc
and
push
cmp
adc
sbb
mov
mov
cmp
add
mov
repz
cmp
repnz
mov
cmp
lods
add
sbb
xor
jp
iret
cld
mov
adc
stos
sbb
inc
out
cmp
inc
push
sbb
scas
pop
aaa
push
inc
push
jbe
call
mov
xlat
clc
mov
es
mov
push
inc
scas
cmp
inc
xchg
add
dec
nop
push
mov
pop
cltd
scas
movsl
popf
cmc
popf
adc
js
sub
push
in
cmpsl
aad
icebp
mov
mov
fnstenv
and
adc
pop
xchg
sub
daa
cmp
cltd
cs
and
dec
cwtl
or
cmp
xor
mov
sub
arpl
sbb
mov
lret
cld
popf
fs
cmp
mov
and
test
movl
fbstp
xlat
xor
jb
scas
inc
and
inc
int
xchg
push
stos
xchg
xlat
loope
or
push
faddl
movsl
scas
std
sub
mov
pop
sbb
xchg
out
pop
add
pop
xchg
ss
addr16
repz
sbb
mov
adc
in
lcall
inc
addr16
ljmp
aam
xchg
push
push
mov
test
es
mov
xor
cld
jnp
ss
shld
cmpsl
cli
pop
cltd
movsb
adc
or
sbb
scas
mov
test
dec
fwait
sti
je
or
test
cmp
xchg
cs
push
mov
ja
pop
cld
lea
and
mov
daa
sbb
add
xor
cmpsb
cmp
sub
pop
cli
je
psllq
mov
fisttps
loopne
fcmovu
mov
dec
insl
jbe
push
cmp
in
incb
or
mov
iret
xchg
add
lods
loope
sbb
mov
rol
shll
sub
add
outsb
ret
sub
cltd
sub
pushf
jmp
xor
xchg
call
lds
outsl
sub
or
jecxz
fcomi
mov
in
add
push
andl
rcrl
nop
pop
sbb
pop
jbe
pop
xchg
sbb
or
jnp
mov
or
lock
cmpsb
add
std
sub
jp
adc
add
jbe
sbb
and
mov
and
fdivrp
xchg
pusha
pop
hlt
add
add
jne
xlat
stc
test
js
sahf
aaa
jg
imul
fdivrs
pop
or
and
out
stos
push
and
aad
sub
test
arpl
dec
aaa
sti
mov
sub
scas
in
fistpl
fsubrp
ja
stos
call
inc
mov
mov
and
das
pop
cmpsl
mov
xorb
ljmp
sub
dec
loopne
dec
lcall
repz
nop
fisttpl
add
pop
scas
sub
into
xor
in
jmp
pcmpeqb
mov
mov
lret
push
xor
sub
and
lret
pop
lea
fidivs
mov
cmp
cmpsb
push
repz
fldt
shll
mov
fistpll
fisubs
pop
pop
mov
fwait
mov
xlat
mov
or
pop
xor
fnstsw
pxor
pop
and
fisttpll
jmp
and
shrb
mov
push
rcrl
std
iret
test
jb
roll
sar
jo
fisubl
dec
fs
xchg
lods
insl
sbb
push
mov
fisubl
test
adc
cmp
das
cmpsl
add
imul
cld
out
xchg
test
popl
mov
jl
shrb
sbb
ret
or
mov
rorl
xlat
and
mov
lock
mov
add
test
sarl
rolb
jns
pop
sub
sub
jb
pop
cmpsl
mov
aad
xlat
mov
insl
sub
dec
fstps
or
cmc
ja
and
push
xchg
dec
pop
dec
dec
mov
in
push
push
les
cmc
mov
icebp
jecxz
sub
add
jno
dec
sub
sbb
pop
enter
dec
dec
popf
insb
push
lahf
ss
pop
test
adc
popa
lods
sub
hlt
into
xchg
mov
sub
mov
mov
or
daa
inc
out
xchg
push
mov
push
adc
lods
mov
sbb
pop
cmp
test
cmp
sbb
xor
cmpsl
mov
or
cli
xchg
sbb
mov
push
outsb
xchg
sub
mov
ss
push
and
inc
insl
mov
fwait
xchg
xor
sub
inc
pop
lea
adc
test
push
mov
lret
jmp
and
out
insl
inc
push
les
xlat
push
pop
mov
test
rcrl
mov
sub
js
subb
leave
cmc
adc
xchg
push
adc
mov
sub
mov
repnz
and
xchg
scas
and
loop
in
or
popa
xchg
cmp
xor
mov
or
xor
rcrb
jp
fnstsw
rcrb
cmp
or
out
pop
dec
gs
hlt
mov
popf
adc
lahf
adc
xchg
or
push
scas
inc
cmp
fldenv
dec
pop
aas
sub
xchg
add
ja
inc
scas
push
adc
jb
pop
cwtl
lods
jecxz
fisttpl
inc
push
xchg
fiadds
push
jne
pop
xor
int3
pop
stos
jge
incb
inc
and
mov
xor
inc
call
icebp
mov
fldenv
rcr
sub
lahf
mov
push
addl
notl
dec
add
ds
out
mov
adc
nop
daa
and
adc
shrl
xor
push
leave
xchg
add
dec
mov
inc
or
out
push
sub
pop
inc
xor
mov
jecxz
xor
xor
dec
pop
imul
loope
xor
mov
add
lods
popa
xlat
in
outsl
adc
mov
fcmovb
lahf
and
shl
pop
rcll
mov
push
and
andl
in
mov
adc
cmp
push
in
mul
ret
shl
pop
je
aaa
cli
dec
shrb
push
or
sub
add
add
aas
data16
add
lret
cltd
xor
out
loope
xchg
mov
ret
lret
jnp
dec
in
pop
pop
cmp
xchg
cmpl
inc
lods
cs
outsb
sub
mov
les
xchg
cmp
das
mov
test
jo
xchg
test
int3
test
loop
cld
sub
inc
lcall
clc
cmp
addr16
sub
into
lret
cmp
jp
movsb
lea
adc
mov
call
test
mov
ja
repz
mov
fwait
jg
ljmp
inc
and
jg
xchg
mov
pushf
sub
outsl
fadd
loop
negl
pop
repnz
xchg
add
loope
into
popf
and
xor
ds
dec
test
inc
lret
push
sahf
nop
sbb
ja
in
mov
cmc
lods
movsb
pop
repz
mov
mull
decl
or
push
xchg
sub
cld
pop
insl
das
ret
into
xchg
xor
je,pn
hlt
cwtl
inc
cmpsl
leave
adc
mov
aam
out
adc
inc
fsubr
movsl
pushf
cli
lea
mov
mov
cmp
xchg
xchg
movsl
cmp
sub
cmp
stos
add
iret
sti
test
fisubrl
mov
mov
iret
push
aam
dec
std
icebp
sub
popf
xor
add
mov
or
fwait
and
sub
cmp
jecxz
mov
int3
mov
mov
cltd
add
cwtl
and
aas
adc
mov
rorl
push
fwait
jbe
inc
and
sti
inc
pop
dec
movsb
out
pusha
jl
cmp
cs
or
xor
mov
sbb
cmp
cmp
es
fldcw
out
incl
cmpsl
jbe
inc
stos
mov
ja
int3
dec
out
orps
out
add
cld
cmp
call
popf
jae
fcoml
fisubrs
js
rcrl
stc
mov
ljmp
cmpsb
daa
pop
das
dec
rcll
or
adc
sbb
js
adc
dec
sbb
pop
ret
xor
mov
pop
cmp
jg
ljmp
gs
inc
call
addr16
dec
out
popf
mov
mov
pop
pop
add
arpl
mov
mov
dec
repnz
adc
repz
sub
sbb
mov
aas
test
iret
sbb
xchg
and
scas
test
adc
adc
cmp
ret
add
cmp
outsb
push
shr
aas
mov
adc
loopne
push
sbb
mov
mov
fldt
or
mov
fwait
xor
ss
cmp
inc
fwait
sahf
pop
dec
mov
lods
sub
cmp
int
cmp
add
lret
add
add
jo
xchg
mov
xchg
or
mov
loopne
sbb
leave
cmp
addr16
cs
add
lods
inc
gs
lods
xchg
jno
push
out
adc
add
inc
das
hlt
cmp
push
pop
push
add
lods
mov
adc
push
mov
adc
loopne
jb
mov
test
dec
aaa
fs
mov
cmc
inc
add
sbb
mov
ficoml
fstpt
push
adc
push
lods
sub
or
jnp
fs
out
dec
test
add
or
xor
jns
cmp
jp
mov
cmc
mov
gs
cmp
jb
lret
push
xchg
stc
xchg
push
inc
fcoms
xor
ljmp
sub
push
addr16
xchg
cwtl
test
jbe
adc
push
imul
clc
pop
jo
test
aad
stc
rolb
xchg
add
pop
mov
xchg
scas
push
pusha
jns
adc
fwait
pop
stos
cli
and
sub
xchg
fwait
jne
xor
fwait
push
pop
sbb
shr
jp
pop
fnstcw
mov
mov
bound
fdivrl
lods
cltd
scas
pop
daa
push
mov
push
push
test
xor
inc
fwait
sub
movsb
sbb
js
imul
push
outsb
cmp
mov
out
mulb
sub
iret
push
cmp
cs
pop
push
mov
sahf
jle
sahf
lods
push
pushf
cli
loopne
adc
out
test
sahf
push
scas
xchg
mov
mov
mov
incl
push
dec
shl
add
mov
hlt
in
nop
cmp
dec
aaa
push
ja
or
jle
mov
fisubs
pop
pop
aaa
xor
xor
mov
mov
imul
pop
xchg
dec
fs
dec
lods
xor
sub
mov
into
rolb
mov
mov
ja
das
xor
and
pop
xchg
sub
hlt
ja
mov
inc
xor
pop
cmpsb
jge
jecxz
jl
add
int
mov
call
inc
jne
and
nop
and
jge
js
dec
push
cmp
dec
inc
dec
call
into
dec
aad
pop
xor
push
inc
icebp
mov
icebp
ds
shl
mov
sbb
xchg
leave
mov
mov
cltd
inc
out
mov
jge
insl
cmpsl
popa
pop
jae
jns
ds
inc
add
pop
push
lcall
xchg
sub
push
dec
addr16
int
or
imulb
in
outsl
push
add
in
ret
cli
and
out
dec
outsb
shrb
inc
out
sbb
outsl
add
and
cs
lods
add
sub
sub
and
mov
cmp
xor
pop
repz
hlt
loopne
loope
out
add
nop
sbb
or
inc
popa
fdivrs
xor
mulb
cmp
mov
lahf
clc
xor
stos
sbb
mov
push
ds
xchg
mov
add
sbb
or
inc
test
and
lea
mov
mov
shrl
mov
iret
add
lahf
ljmp
lods
clc
movsb
mov
xor
jle
jb
mov
push
pcmpeqb
jmp
jle
mov
sub
std
mov
lahf
jo
nop
cltd
std
repz
xchg
mov
mov
jp
in
loope
sbb
sub
stc
sub
pop
xor
mov
movsb
inc
xchg
inc
pusha
xor
add
and
or
or
xchg
xor
add
mov
dec
jne
mov
ficoms
sbb
ret
and
inc
jmp
push
mov
jne
jmp
and
sti
add
mov
jp
inc
out
jg
inc
inc
movsb
rorb
lcall
loop
mov
mov
ret
out
bound
push
repnz
jns
mov
jns
fists
inc
push
jae
xchg
popa
jmp
shll
js
xchg
jns
jp
sti
pop
stos
adc
inc
ljmp
cmp
adc
insb
pop
mov
call
je
sub
enter
inc
movsl
mov
push
adcl
rolb
mov
out
popf
shr
add
out
sbb
push
xor
xlat
mov
sbb
mov
outsl
inc
stos
fnstsw
icebp
add
push
sub
or
sahf
inc
jo
mov
out
and
test
push
repz
mov
lahf
jnp
sub
xor
pop
jge
inc
dec
cwtl
loop
decl
push
dec
mov
pop
dec
push
repz
mov
ljmp
adc
aad
cmpsb
stc
jbe
mov
ss
test
mov
in
dec
and
mov
push
popf
mov
xchg
outsl
mov
movsl
inc
jne
pop
sub
push
sbb
inc
or
or
cltd
cwtl
sub
fs
push
sbb
ror
sbb
lds
mov
movb
pop
aam
aam
fisubs
test
pop
out
nop
push
imul
data16
cwtl
shrb
mov
and
insl
add
inc
je
jae
dec
pop
std
xchg
xchg
push
push
and
mov
xlat
mov
sahf
call
sbb
lods
aas
js
lcall
sbb
insb
inc
pop
xchg
rol
lahf
add
xchg
mov
push
lock
lock
ljmp
lock
jl
gs
fwait
jo
adc
paddq
sbb
adc
ds
les
pop
cltd
lahf
cmp
arpl
and
jl
stos
add
lods
stos
and
out
jae
and
lret
cmp
and
popf
push
mov
cmp
jb
sbb
movsb
mov
fldl
pop
test
pop
sub
cmp
jp
push
dec
cmp
repz
sbb
jg
pop
lds
cmc
push
insl
sahf
or
inc
add
enter
in
dec
jnp
xlat
mov
shrl
pop
or
sub
shl
lahf
add
and
repnz
sbb
push
movsl
adc
stos
xchg
cmc
lods
mov
mov
push
leave
fnstenv
dec
in
clc
dec
sbb
lret
or
imul
mov
cmc
ss
test
aam
sahf
or
fidivs
and
mov
addr16
push
push
sub
or
inc
sbb
movd
mov
loop
repnz
stc
call
mov
cs
aas
jbe
or
mov
arpl
pop
lock
call
into
das
cmpb
push
ret
inc
adc
inc
adc
fucom
ret
sbb
jge
or
xor
daa
push
jg
add
clc
sahf
or
cs
je
sbb
dec
test
fld
mov
cmp
xlat
mov
mov
xchg
xchg
push
std
mov
pusha
pop
inc
repz
mov
mov
adc
rcl
sbb
pop
movsl
lds
js
mov
fisubl
add
jg
add
cmp
push
fcoml
or
inc
adc
mov
mov
jl
adc
push
loope
adc
loop
mov
lock
mov
push
xchg
in
ds
add
mov
push
scas
xchg
adc
push
aaa
sarl
inc
mov
fwait
xchg
stos
mov
mov
hlt
push
push
call
sub
cmp
jns
cmp
sbb
mov
cmp
stos
fwait
or
sbb
popf
jnp
imul
popf
fs
dec
stos
call
dec
scas
mov
aad
arpl
stc
es
pop
icebp
out
loop
call
out
ss
out
xor
aas
add
pop
pop
push
aas
int3
mov
loope
test
cmp
rcrl
cmp
loope
xor
sti
and
or
mov
sub
inc
inc
ja
lret
push
fdivrl
jo
loopne
loopne
cmp
arpl
cltd
out
or
jo
add
jge
push
cmpsl
ds
pop
je
gs
adc
dec
loop
shl
aas
and
rcr
pop
icebp
inc
push
inc
mov
pusha
jne
adc
adc
fsubs
imull
mov
jge
shll
jle
mov
jp
mov
or
test
ret
fsts
pop
pop
outsb
aad
ds
out
out
in
add
aad
faddl
jae
icebp
imull
sub
pop
sbb
in
lock
shlb
std
cs
dec
adc
mov
push
inc
je
or
lret
sti
inc
inc
pusha
cmp
rclb
cmp
icebp
xlat
adc
xchg
mov
mov
sub
in
mov
outsb
ret
je
roll
xlat
pushf
sbb
dec
mov
mov
cmp
add
pop
sbb
lahf
loopne
jb
lcall
inc
insb
push
jle
popa
sbb
xchg
push
jmp
dec
insl
mov
in
mov
into
cltd
sbb
mov
xlat
sub
sbb
insb
xchg
pop
call
dec
enter
adc
jo
in
adc
inc
mov
and
fsubs
xlat
add
pop
or
nop
mov
lahf
ss
enter
fwait
sub
maskmovq
testl
stos
into
out
jbe
inc
shrb
mov
push
pop
sub
aam
pop
cli
xchg
addr16
sbb
mov
mov
push
sbbl
pop
jb
pop
xor
cmpsl
mov
fiaddl
shlb
jge
sbb
ret
cmp
out
call
inc
pop
xchg
mov
pop
xor
fisubrl
pushf
mov
add
or
cmpsb
mov
inc
jl
dec
sub
lods
fldt
les
nop
insl
repz
sub
lcall
sub
xor
cmp
scas
rcrl
mov
mov
xchg
cmpsb
icebp
fmul
dec
fwait
jnp
xchg
sar
push
or
test
ja
mov
mov
jg
push
les
int
shlb
mov
clc
xchg
lcall
xor
pop
ja
push
push
jmp
imul
ud2
ret
sbbl
add
dec
ljmp
xor
flds
adc
pop
add
fldcw
cs
mov
mov
jnp
sahf
pop
xchg
in
dec
jnp
loop
lcall
adc
aam
pop
xlat
sbb
dec
clc
sbb
lods
sbbl
cpuid
pusha
out
cmpsb
cmp
dec
popa
icebp
out
mov
data16
notb
jo
popa
cmp
pusha
scas
or
mov
sahf
mov
inc
shrl
sub
mov
cmp
in
sub
jp
sbb
arpl
xchg
aas
es
and
xchg
js
scas
fnsave
dec
push
jb
test
jb
pop
and
cmp
sub
imul
inc
shlb
add
andb
outsb
fs
inc
loope
jo
shlb
icebp
inc
push
push
lds
xor
repnz
stos
jle
std
xor
pop
icebp
sti
pop
popf
sbb
xchg
ja
jge
imul
cmp
addr16
pop
xor
add
int3
out
mov
test
ret
xchg
add
sahf
lds
dec
or
cmp
jae
test
pop
push
ds
cmp
dec
aad
mov
outsl
mov
stos
ljmp
xlat
push
add
call
pop
outsl
add
addr16
aas
cltd
sbb
sbb
call
out
mov
movsl
add
shll
mov
les
push
mov
mov
and
cmp
fimuls
xchg
ret
cmpsb
loop
cwtl
addr16
mov
fiadds
fistps
jne
stc
subl
ret
pop
xor
sub
inc
das
cwtl
je
mov
mov
xchg
mov
push
scas
xor
call
or
mov
mov
subl
lea
xchg
lods
enter
lret
jmp
dec
iret
fstpt
movsb
jmp
pop
mov
jno
sub
jb
fnstenv
rcrl
cmp
loope
xchg
sahf
mov
nop
jmp
hlt
fstpl
scas
push
loope
mov
jmp
pop
or
lret
popf
add
popf
test
push
es
test
mov
mov
pop
cmpsl
fidivrl
jo
inc
lock
xchg
fistl
xchg
in
inc
mov
and
pop
push
push
add
arpl
fs
and
shll
mov
or
cmp
mov
adc
jne
aad
scas
cwtl
cmpsb
les
xchg
in
inc
fisttpll
lret
divl
outsl
es
inc
lods
jae
mov
imul
mov
jp
repnz
add
out
es
test
sub
std
scas
nop
fildll
repz
aas
adc
inc
fdivs
pusha
mov
mov
iret
je
popf
and
pop
mov
jno
jecxz
int
dec
sbb
mov
add
insl
mov
loop
repnz
mov
pop
xchg
xchg
mov
dec
mov
jo
dec
aad
jmp
mov
imulb
add
push
cld
xor
pop
aaa
adc
repz
or
pop
repnz
in
lcall
or
lcall
mov
jbe
mov
shll
inc
cli
xchg
pop
mov
xchg
fwait
sti
cltd
inc
in
mov
mov
dec
xchg
mov
out
adc
out
lahf
and
int
or
xchg
dec
mov
lahf
ret
aas
dec
cmc
push
lods
into
xchg
sub
mov
aas
imul
mov
and
inc
pop
js
sbb
ret
imul
arpl
int3
ja
aaa
sbb
or
dec
and
imul
mov
je
mov
insb
push
out
subl
in
adc
out
xlat
add
and
jno
aad
sbb
fisttpl
add
ret
cmc
or
sbb
pop
sbb
lahf
sub
mov
adcl
sbb
jns
lods
cmp
jge
jmp
xchg
aad
adc
cmp
sub
repnz
add
gs
push
xchg
popa
clc
jbe,pn
lock
cltd
add
xchg
js
xor
or
xchg
jl
dec
scas
xor
imul
add
sar
mov
jge
lahf
cwtl
mov
inc
mov
push
mov
xor
and
mov
push
mov
ficoml
mov
imull
cmp
jne
stc
popa
rolb
adc
sbb
pop
pop
int3
arpl
imull
sub
xor
ret
mov
test
dec
lods
incl
imulb
repnz
jb
mov
dec
add
cmp
cmp
js
lret
jns
xlat
adc
push
cs
mov
adc
test
and
cltd
std
and
loope
rcl
mov
jl
popa
daa
bound
pop
sbb
xor
in
mov
arpl
test
data16
leave
loope
or
sarl
fisubrl
mov
adc
mov
sahf
cmp
lds
pop
ret
pop
jecxz
dec
out
test
xchg
add
xor
cld
pop
mov
inc
insb
daa
xor
push
mov
incb
arpl
ss
mov
jns
lcall
add
aad
sti
dec
lods
xlat
mov
pop
cli
mov
aas
das
out
add
out
arpl
cli
mov
popf
daa
dec
cmpsl
scas
jle
sbb
mov
sbb
mov
xchg
sti
loop
int3
lahf
test
mov
pop
aad
out
pop
es
sub
mov
pop
out
cmpsb
scas
negl
mov
sub
in
push
sahf
dec
aad
mov
hlt
pop
cltd
push
test
xchg
add
push
pop
fstpt
clc
cmp
jb
ja
mov
mov
add
fidivl
dec
enter
mov
jb
enter
int
xor
push
out
xchg
shll
mov
fcmovnb
sbb
add
pop
repnz
xor
pop
fimuls
push
in
xchg
aam
add
sub
xor
cmp
lods
mov
pop
inc
dec
pop
mov
xor
xchg
lahf
call
lods
mov
jmp
inc
mov
xlat
mov
push
push
sbbl
mov
ja
ret
mov
pop
gs
adc
mov
xlat
lock
inc
fists
lcall
push
stos
daa
inc
dec
pop
les
nop
imul
scas
jp
call
faddl
sub
and
or
fildll
inc
dec
cmpsl
jmp
cmpsl
cld
mov
lods
ja
neg
sbb
mov
mov
and
and
xor
dec
insb
pushf
scas
sub
movsb
jne
pop
mov
pop
ret
cltd
cmp
sahf
dec
loopne
repnz
xchg
sbb
mov
aam
daa
pop
ret
mov
jg
dec
mov
outsl
push
xchg
sbb
xlat
cli
xchg
push
and
sbb
rcl
in
cmp
rcrb
adc
jbe
sub
movaps
test
dec
push
ljmp
xor
xorl
mov
inc
mov
jle
mov
insb
xchg
sbb
repz
outsb
in
adc
nop
push
pop
dec
je
jp
outsb
jne
jo
xchg
mov
push
jbe
dec
xchg
cmp
pop
fsubs
popa
clc
push
mov
mov
fistl
xchg
shrb
pop
mov
mov
jl
push
lods
test
inc
xor
outsl
repnz
or
jl
pop
push
xchg
jbe
cmp
cmpsb
cmp
xchg
ret
hlt
inc
jmp
das
cltd
loop
lret
push
inc
push
add
sub
lcall
jne
gs
fs
sub
cld
stos
mov
inc
add
mov
mov
mov
or
xchg
out
pop
dec
shrb
inc
outsl
imul
jns
cmp
and
imul
shrl
popa
cltd
leave
sbb
hlt
jp
js
iret
jb
adc
shr
cmp
mov
outsl
mov
pop
push
addr16
lods
mov
adc
test
std
or
xor
imul
fimuls
mov
lahf
push
jno
rcll
into
sbb
stos
sbb
cmc
cmp
push
in
daa
mov
pop
mov
dec
cli
icebp
shlb
test
ds
out
xchg
call
mov
add
pop
scas
ljmp
lock
dec
clc
mov
push
mov
jp
push
cwtl
dec
pop
clc
mov
mull
sbb
jbe
es
cmc
shlb
lahf
mov
movsb
inc
das
fisubrl
jmp
sbb
and
adc
lock
ret
sub
out
movsb
cmp
sub
insl
lea
jns
mov
jns
mov
insb
int3
xchg
shl
fiadds
mov
xchg
cmpsb
pop
aam
inc
mov
lret
adc
mov
int3
arpl
xchg
addr16
shll
mov
setbe
test
leave
push
push
arpl
mov
pop
test
and
push
inc
xlat
call
or
mov
mov
iret
hlt
das
jp
lock
cmp
cmp
xchg
popa
xlat
fs
pop
popl
or
and
sbb
sti
dec
and
fnsave
cwtl
xor
sahf
pop
jp
dec
in
push
out
or
rolb
loop
add
jmp
fwait
sbbl
mov
daa
push
xlat
mov
push
je
outsb
jl
and
adc
scas
mov
inc
push
popa
sbb
pop
add
arpl
add
xchg
adc
lret
adc
popa
jnp
dec
push
inc
in
out
dec
lret
jo
dec
into
cmp
jecxz
add
mov
adc
sbb
out
xor
call
stos
lods
push
inc
lret
xor
xchg
sahf
adc
cmp
xor
mov
cld
cmp
pop
add
adc
dec
dec
dec
push
sub
loop
arpl
jg
jb
ret
mov
xchg
lods
add
enter
movsb
ret
or
adc
mov
mov
loopne
mov
or
jg
pusha
fs
popa
jns
mov
push
daa
or
pop
stos
in
xchg
jg
dec
lea
out
cli
out
cmp
inc
jmp
aaa
inc
push
cli
xor
jno
cmp
inc
push
lahf
cmp
cmp
orb
dec
bound
daa
xorl
js
fiadds
xchg
and
mov
test
repz
xor
cmp
and
negl
sub
cmp
adc
insl
adcl
clc
sbbb
aas
push
dec
cmc
xor
addr16
dec
dec
cmp
rcrl
jb
dec
dec
aad
sub
cltd
adc
pop
cmp
fwait
cmpsl
adc
test
insl
sbb
xchg
add
sbb
and
pop
xchg
push
pushl
xor
outsb
add
and
jnp
popf
add
sub
mov
xor
mov
push
stc
leave
add
mov
addl
or
nop
dec
or
lret
cmpsb
sub
jnp
int
pop
cmp
pop
cmpsl
test
out
stc
out
loop
cmp
xchg
add
pop
in
or
out
jns
inc
in
jb
xchg
ja
scas
das
pop
cmpb
mov
popf
scas
mov
in
testb
hlt
or
in
push
dec
push
mov
sbb
arpl
cmp
cmpsb
mov
xchg
push
dec
add
and
cmpb
xchg
cmc
clc
stos
xor
aas
notb
outsl
add
loopne
pop
push
jno
hlt
sub
cmp
rcrl
pusha
cmp
stc
insl
inc
pop
add
adcb
xchg
imul
mov
test
fisubl
push
popa
pop
clc
movsb
inc
push
inc
out
mov
pop
icebp
mov
test
or
std
setno
mov
movsl
pop
aaa
pusha
fisttpll
push
roll
cmp
dec
jnp
cli
or
jmp
loope
jmp
repz
mov
mov
int3
lret
jp
lea
test
add
dec
pop
cmp
or
xchg
sahf
clc
dec
cltd
mov
movsb
inc
jns
lock
mov
lahf
notb
add
shrb
mov
pop
test
dec
loope
pop
jp
leave
rol
incb
rolb
mov
pusha
ss
movsl
xchg
aaa
pop
lcall
xor
mov
subl
dec
dec
aas
sub
xor
aad
add
icebp
or
fyl2x
imul
pop
jp
mov
sqrtps
shl
fwait
pop
lds
pop
mov
loop
inc
test
js
leave
ds
push
add
cmp
pusha
xchg
aas
notb
mov
adc
aaa
test
dec
ficoml
mov
lods
and
in
ret
imul
pop
lcall
push
in
es
fdivrp
scas
stc
push
mov
push
pop
jmp
mov
jb
inc
lods
xchg
jns
dec
int
in
fcmovbe
sub
das
pop
hlt
pop
popa
sbb
pop
xor
xchg
out
jnp
mov
and
jb,pn
sbb
loope
mov
cltd
mov
movsl
adc
aam
es
mov
xor
jmp
sbb
lret
in
mov
mov
inc
dec
pop
jne
and
dec
mov
add
adc
or
mov
lret
inc
mov
lds
dec
fsub
cltd
xor
sbb
cmp
cmpb
in
mov
js
mov
add
fs
lods
dec
xchg
cld
adc
mov
test
inc
pop
call
jns
ljmp
repnz
ret
fimuls
jbe
movsb
lods
in
mov
imul
push
mov
andl
sub
icebp
or
adc
add
insl
push
inc
testl
adc
xlat
aaa
ja
imul
xchg
adc
sbb
sbb
adc
ss
xchg
adc
add
jp
mov
push
sbb
nop
jle
daa
cmp
cmp
cmp
inc
pop
jge
mov
adc
hlt
inc
cmc
addr16
lret
xor
stos
popa
lock
jo
adc
mov
pop
shrl
sub
aad
bound
lahf
call
and
je
rcrl
jl
int
cs
mov
les
lret
andb
sbb
dec
imul
jo
xchg
daa
dec
arpl
mov
and
shll
lahf
mov
push
fwait
cmpsl
or
das
cmpsb
push
jbe
cltd
cmpsl
add
and
enter
dec
jmp
inc
xlat
push
xor
lods
std
pop
insb
cmpsb
jae
jmp
das
cmp
add
xorl
rorl
jbe
cmp
push
xor
and
movsl
sub
mov
mov
xchg
mov
hlt
stc
and
shl
decb
loope
adcb
test
xrelease
fstps
loop
cmp
inc
xchg
sahf
scas
into
pop
fs
add
insb
and
adc
fistpll
inc
rorl
enter
cmp
popf
mov
in
mov
flds
scas
sbb
popa
leave
les
or
pop
rcrl
push
pop
mov
call
pop
sub
stc
es
pop
mov
dec
push
inc
add
cli
lods
jl
pop
pop
repnz
lcall
in
aas
ljmp
das
jle
xor
inc
fwait
dec
sbb
pop
daa
fdivrl
scas
ret
js
dec
and
xchg
lret
out
ljmp
jp
stos
out
mov
repnz
out
push
rcrb
mov
lods
cmp
shl
into
test
add
pushf
push
mov
or
mov
loope
rclb
mov
ret
das
imul
dec
mov
mov
fldt
sub
cs
dec
pop
jmp
cli
sbb
sbbl
aas
push
lahf
sub
xor
mov
in
dec
out
push
xchg
hlt
sti
jns
and
dec
jo
sti
daa
rcl
in
fldenv
stc
ret
cld
mov
inc
out
dec
incl
adc
dec
shll
inc
pop
pop
ss
sahf
imul
fcompl
sbb
jo
and
xchg
je
inc
insb
mov
shll
or
aam
enter
call
adc
xor
mov
movsb
imul
jae
sbb
rcr
inc
dec
cmc
jae
loop
in
into
inc
sub
mov
aam
mov
stos
adc
or
flds
sbb
iret
imul
adc
adc
push
testb
roll
addr16
ret
mov
jae
lock
mov
or
adc
ljmp
mov
jb
stc
jbe
adc
addr16
adc
xchg
lcall
rclb
addr16
xchg
mov
sahf
sub
fs
pop
jl
in
repnz
or
mov
fiaddl
call
inc
jb
mov
ficoml
sub
sub
fwait
jno
mov
pop
dec
es
jbe
sahf
mov
andb
mov
mov
or
mov
leave
push
rclb
push
inc
or
lahf
mov
lock
xor
fsubr
inc
cmp
pop
sahf
fnsave
pop
sarb
xchg
add
rcrb
hlt
setns
jnp
cmp
xchg
movsb
add
lret
cmp
lods
mov
sahf
or
out
sub
mov
leave
mov
cmp
icebp
add
jns
std
lea
repnz
bound
sub
mov
insl
mov
sub
push
inc
fistl
jb
cmp
outsb
mov
lret
icebp
scas
cmp
fists
cmp
push
out
xchg
or
add
movzbl
adc
insl
and
xchg
sub
fisttpll
sub
inc
mov
je
lds
sbb
fildll
addr16
and
or
sub
cmp
loopne
push
rcrl
les
gs
dec
int3
ja
cltd
mov
push
jae
cmp
test
repnz
and
data16
and
ret
cmp
das
jg
adc
sti
or
xor
divb
and
and
and
xor
push
rclb
test
jb
fcoms
cmpsb
loope
push
call
std
nop
ljmp
jb
cmp
and
cmp
sbb
dec
push
out
sti
xchg
mov
mov
dec
stos
cmc
cmc
fnstenv
mov
mov
dec
js
out
and
push
push
jle
cmp
push
lahf
and
ds
imul
jnp
stos
movsl
add
test
mov
outsb
repnz
nop
jne
outsb
inc
push
pop
xchg
cmpsl
mov
fidivl
cmpsl
cmpb
mov
decl
das
push
outsb
popa
or
packssdw
push
popf
sub
dec
add
xchg
dec
sbb
mov
sub
shr
je
pop
and
addr16
les
cs
shrl
dec
xchg
mov
and
xchg
fidivrs
aaa
xchg
cmc
shll
sbb
mov
insl
sbb
mov
insb
jle
xlat
adc
lea
sbbl
xchg
mov
lock
sbbl
es
sbbl
xlat
cmp
or
mov
ljmp
lock
dec
cmp
mov
insl
sbb
repnz
xchg
push
mov
push
pushf
or
xlat
mov
pop
pop
imul
mov
mov
nop
jle
adc
or
aaa
es
lret
or
lahf
scas
and
movsl
inc
cmp
ret
rcrl
add
xor
pop
sbb
mov
mov
lahf
pop
hlt
inc
call
aaa
stos
loopne
mov
out
sbbl
pop
mov
pop
xor
inc
lods
push
mov
scas
add
out
push
mov
mov
psubsw
push
cmpb
fsubr
jno
imul
pop
scas
popf
add
pop
mov
and
sbb
sti
stos
inc
sub
xchg
iret
dec
out
lds
jecxz
mov
pop
or
imul
gs
sbb
bound
sbb
lret
cmp
data16
lods
imul
push
lock
and
push
cld
pop
rcll
add
jp
xor
mov
xchg
in
adc
fidivs
xor
inc
aas
fld
pushf
mov
push
mov
push
pop
add
in
cwtl
daa
les
xchg
sbb
test
pop
clc
loope
gs
int3
leave
inc
pop
add
fidivl
mov
pop
test
push
mov
lds
int3
mov
mov
pop
mov
std
cmp
pop
mov
call
daa
mov
jle
inc
fdivl
mov
xorl
push
or
andb
add
push
xor
ds
mov
mov
mov
out
mov
aam
sbb
daa
int
lds
movntq
out
xor
cmpsl
jl
add
push
xor
test
loopne
cmp
pop
cltd
pop
cmp
xor
mov
mov
adc
and
jne,pn
jb
cli
xor
sbb
rcrl
push
repz
cwtl
cltd
mov
push
cwtl
add
clc
in
adc
adc
mov
sbb
jno
insl
dec
dec
cmpsl
ret
aad
repz
mov
sbb
sub
pushf
ds
xchg
fmull
out
dec
aam
pusha
adc
xchg
arpl
cmpb
jne
mov
push
xchg
scas
jo
sbb
repnz
call
dec
push
jae
adc
pushf
xchg
mov
repz
bound
pop
je
xchg
arpl
dec
sbb
dec
test
mov
loop
jno
in
pop
outsb
clc
xor
int3
inc
popf
aad
lock
add
and
push
aaa
and
dec
xchg
pusha
stc
inc
es
dec
cmpsl
clc
test
adc
lret
loope
int
mov
cmc
daa
inc
mov
adc
or
add
sub
inc
push
mov
xor
cwtl
aad
push
repnz
mov
add
mov
push
imul
mov
or
jbe
movsb
mov
pushf
or
mov
push
rcrl
jno
and
or
mov
loopne
fldcw
jo
call
pop
fsubp
push
es
and
js
push
inc
cmp
push
incl
or
call
inc
xchg
add
mov
mov
sub
sahf
xor
inc
aas
mov
cmp
pop
dec
stos
nop
pop
cmc
roll
imul
xchg
bound
sbb
xchg
and
mov
ret
pop
fdiv
andl
popl
jbe
fs
out
jg
add
xor
push
sbb
add
mov
push
pop
lds
jno
repz
dec
es
jmp
cmpsb
cltd
xor
adc
mov
jle
inc
sub
dec
dec
sub
inc
aas
cli
sbb
jl
lock
add
xchg
or
or
adc
inc
xor
stos
cld
fsts
aam
inc
sbb
lahf
jp
scas
sbb
jnp
jno
mov
jl
notb
cmp
or
or
jg
push
in
cwtl
mov
pop
stos
dec
adc
lret
dec
xchg
cmp
pop
in
xchg
into
hlt
pop
sahf
adc
mov
ret
mov
add
sub
shl
ja
fs
xchg
adcb
sbb
xchg
movl
cmpsl
arpl
cmp
pop
imul
mov
lret
mov
sbb
jns
gs
imul
sub
xor
jne
sbb
repnz
mov
lods
adc
jmp
addr16
or
mov
in
call
nop
mov
adc
lret
scas
cmp
xlat
outsl
push
iret
data16
jb
bound
lahf
popl
fwait
out
jno
lods
negl
test
sub
add
ja
jnp
mov
sub
pop
sbb
cmp
and
loopne
jno
pop
jae
and
mov
xchg
sub
ds
xor
imul
xchg
cmp
cs
cs
sub
cmp
pushf
xor
xchg
sub
mov
mov
lahf
jb
pusha
popa
into
sbb
fldcw
jns
adc
inc
dec
mov
sbb
dec
mov
dec
pop
lcall
push
enter
sbb
jmp
pop
xor
ret
jnp
add
test
fsubl
mov
xor
and
lahf
scas
pop
roll
out
pusha
jns
xlat
lods
inc
or
test
push
push
pop
out
loop
sti
ret
cmp
nop
add
or
sbb
subl
scas
inc
push
lods
mov
enter
push
mov
jno
jo
sbb
sarl
jle
or
test
and
insl
in
ret
sbb
add
pop
aaa
dec
jg
mov
rol
fcoml
icebp
mov
mov
mov
and
fcomp
jo
or
mov
inc
lods
dec
push
dec
cli
mov
pop
call
test
push
scas
dec
stc
dec
data16
bound
bound
mov
pop
imul
xchg
sub
push
sbb
inc
sbb
mov
sub
mov
or
imul
or
jnp
cmp
call
btc
inc
daa
adc
sub
test
push
popa
in
dec
sbb
imul
xor
sbb
xchg
out
js
push
flds
jae
mov
xor
inc
xchg
xchg
mov
pusha
ljmp
and
xor
jmp
or
jmp
xchg
pop
test
add
mov
sti
iret
rcr
test
mov
rcrl
pop
mov
add
rorl
push
iret
lret
pop
add
xchg
mov
push
addr16
or
popa
mov
arpl
repnz
jp
int3
dec
js
hlt
sub
xor
and
xor
xchg
push
jecxz,pn
xchg
data16
adc
push
add
mov
popf
push
lret
lahf
cmp
in
popf
fwait
xor
mov
loope
sub
fstpl
and
dec
push
fs
inc
daa
push
pop
cmp
adc
mov
adc
xor
xor
xchg
test
mov
popf
xor
loopne
cmp
popa
mov
loop
lock
lahf
pshufw
mov
dec
mov
imul
test
cwtl
jp
in
pop
ret
and
daa
jg
iret
pop
int
sbb
test
cs
mov
mov
int
repnz
cs
pop
xchg
out
xor
xchg
add
stos
std
add
mov
push
jmp
int
cmpsl
fstpl
or
jns,pn
mov
push
lods
cld
stos
std
or
and
lret
icebp
add
mov
ret
dec
inc
fbld
dec
clc
push
mov
mov
aam
mov
xor
add
or
clc
or
lret
sti
mov
mov
sbb
xor
aam
sub
xor
cmp
sbb
pop
push
sahf
in
and
and
xor
xor
aas
lock
pop
adc
fsubrs
xchg
and
sub
in
sbb
in
stc
adc
mov
dec
mov
shlb
stos
sub
stos
insb
out
popf
imul
dec
inc
pushf
lods
jl
call
fists
sarb
loop
sub
mov
stos
mov
call
jnp
addr16
adc
fwait
inc
lret
std
dec
mov
jb
fstp
jmp
aam
imul
mov
jl
push
sub
daa
xchg
add
inc
ja
popa
subl
stos
sahf
sub
out
add
and
push
js
jns
cmp
mov
cmp
outsw
xor
mull
in
test
xchg
fmulp
aaa
xchg
adc
cwtl
or
inc
jl
mov
popa
mov
sub
push
push
dec
iret
data16
jno
inc
mov
iret
jl
mov
and
in
or
std
pop
dec
mov
outsb
lahf
mov
pop
and
mov
xor
cmp
fdivl
pusha
andb
and
dec
negl
lret
into
inc
scas
mov
fdivrs
lock
sahf
loopne
inc
lret
and
or
fidivrs
repz
inc
fdivrl
jle
data16
sti
outsl
mov
pop
mov
or
push
sti
push
es
adc
nop
cld
xchg
into
pop
push
adc
mov
cli
cli
xor
inc
adc
adc
cwtl
test
sarl
cmp
outsb
gs
lahf
lds
fidivs
rolb
or
mov
pop
into
outsb
sbb
mov
ss
lret
cmp
lahf
add
es
fidivs
sahf
add
xchg
mov
sbb
sub
idivb
jno
cmp
call
inc
cmp
sahf
imul
ss
pushf
outsl
imulb
add
pop
loope
cltd
jbe
xchg
add
xchg
and
fstpl
sbb
pop
push
lods
mov
inc
fisubrl
lods
inc
ljmp
hlt
lret
stos
pop
repnz
out
lods
jns
and
int
sub
inc
scas
inc
orl
ret
test
insl
sbb
jecxz
cmpsb
cmp
adc
popf
jbe
sbb
std
adc
adc
push
sub
mov
movsl
mov
cld
dec
xor
ffree
rclb
xchg
xchg
insl
repnz
in
sbb
loop
pop
pushf
pop
mov
ss
clc
out
sbb
into
bound
push
pop
adc
ret
dec
imul
jmp
jecxz
push
sub
std
add
xchg
je
lcall
lcall
sbbb
inc
out
jg
and
and
jnp
xchg
inc
push
addr16
loop
in
push
push
cmp
mov
jp
lods
in
push
mov
pop
lea
pop
inc
pop
push
mov
stos
mov
popf
pop
test
mov
xchg
pop
int3
arpl
lret
dec
aas
pop
mov
mov
adc
dec
movsl
mov
xchg
jmp
icebp
dec
mov
jb
sub
lea
cmp
out
cwtl
aam
xadd
loope
push
ss
add
stc
and
cmpsl
push
cmp
inc
cmp
push
out
xchg
add
out
or
mov
xchg
push
jmp
icebp
mov
cmpsl
addr16
or
cmp
inc
sub
mov
inc
in
push
inc
ja
into
add
fimull
mov
out
mov
or
and
fdivs
push
mov
loop
test
cmpsl
mov
fldt
in
pop
sbb
fs
push
cmp
and
popf
mov
aas
mov
push
cmc
xchg
lods
jmp
idivl
sub
dec
or
add
pop
or
pop
and
mov
jle
add
adc
gs
mov
pop
jmp
add
out
fucom
ja
and
test
shrl
addr16
lock
and
dec
xchg
sbb
call
or
inc
jbe
hlt
sbb
add
nop
mov
fistl
xor
adc
nop
daa
adc
iret
in
movsl
xor
pop
push
push
mov
orb
jecxz
inc
push
xor
cld
pop
dec
insl
dec
mov
jb
cmpsl
popf
lock
les
add
aam
hlt
xorl
mov
pop
fwait
xchg
dec
nop
mov
in
xor
in
push
je
test
add
stos
xchg
sub
lods
add
push
inc
sub
mov
addr16
int3
inc
pop
push
out
sti
nop
orl
push
cld
sti
clc
outsb
insl
jl
sbb
dec
lret
call
fildll
sub
out
cli
xchg
dec
shrb
and
xchg
or
mov
xlat
jno
into
jo
pop
jo
dec
push
scas
cld
jns
bound
add
push
push
imul
pop
mov
jbe
hlt
arpl
pop
push
test
mov
jl
int
inc
fstl
adc
sbb
add
arpl
pushf
sub
sarb
stos
inc
insl
icebp
xchg
inc
mov
leave
jecxz
sbb
dec
pushf
mov
rcrl
jae
leave
lods
es
cltd
stc
loop
movsb
mov
fisubrs
or
sbb
shll
pop
add
and
mov
cmp
jle
ficomps
loope
mov
in
out
scas
add
gs
mov
dec
cmp
mov
mov
test
scas
sbb
popf
and
mov
stos
mov
mov
cmpsb
sbb
loop
imul
mov
xchg
mov
mov
push
scas
out
adcl
inc
pop
test
xchg
jp
sbb
in
test
or
push
jmp
jp
inc
and
outsb
lret
cld
in
pop
sahf
mov
xchg
mov
mov
outsb
shlb
scas
cmp
cmc
jecxz
add
fcompp
outsl
ljmp
mov
cmc
push
pop
popa
notl
jmp
js
in
pop
sub
ret
hlt
xor
lock
mov
es
mov
jb
sbb
xor
inc
add
xor
cmc
xchg
xor
xchg
subl
jl
iret
mov
in
data16
xor
xchg
testb
xchg
push
mov
ljmp
push
jecxz
sub
test
ss
xor
sbbb
fstpt
nop
pop
xor
arpl
and
dec
sbb
jge
pxor
pop
fs
push
fcomp
sti
popa
lods
sub
pusha
roll
push
jne
enter
nop
cmp
negl
or
adc
add
in
adc
inc
or
add
int
and
push
clc
popl
cld
push
xlat
inc
movsl
add
ficoms
movsb
push
mov
pop
dec
inc
test
xorl
and
mov
hlt
aad
cmp
pop
pop
repnz
aam
sti
xchg
and
sbb
es
mov
gs
fbstp
mov
mov
jge
dec
pop
pop
decb
xchg
cmpsl
xchg
lcall
jmp
sub
roll
sbbb
mov
jg
cmp
popa
pop
mov
fwait
jb
or
in
stc
lods
cmp
add
mov
mov
into
push
inc
fcompl
or
cmp
cmp
jge
xor
bound
fistps
mov
fsubrs
scas
sahf
xor
jno
fs
sbb
push
pop
jg
mov
adc
pop
sbb
ss
insl
pavgb
out
jle
mov
inc
bound
xchg
jae
jae
cmp
out
add
inc
fldl
js
xor
aam
aas
les
ljmp
jne
pop
jmp
gs
sbb
sti
pop
xor
test
inc
enter
lock
lcall
scas
fadds
or
mov
cmp
test
decb
push
dec
loop
sarb
shlb
lea
test
dec
jg
and
or
loopne
cltd
xor
or
pop
mov
lods
mov
addr16
jp
test
ss
push
hlt
mov
stos
es
sti
adc
xor
and
xor
pop
sbb
shlb
mov
scas
jmp
push
pop
imul
filds
ds
push
outsb
inc
and
xchg
push
adc
pop
cmp
out
xor
pop
stos
cmp
xor
mov
adc
roll
inc
mov
push
xchg
inc
mov
std
add
les
inc
fs
xor
jno
mov
inc
push
adc
jge
imul
ss
dec
repz
std
into
shlb
fwait
insl
adc
lods
out
xor
and
mov
mov
shrb
dec
push
in
out
dec
and
add
mov
adcb
push
cmp
mov
test
pop
std
sbb
rorl
inc
mov
call
pop
fnstcw
ret
out
dec
mov
lock
cmp
sbb
inc
adc
cmp
popf
mov
int3
push
ffree
addr16
out
scas
fnstsw
pop
fnstenv
mov
mov
push
pop
push
je
mov
call
or
aaa
sahf
in
fwait
iret
pop
mov
mov
xchg
lods
icebp
in
inc
push
sbb
arpl
das
repnz
mov
cmpsl
outsl
mov
dec
mov
inc
in
cli
fisttpl
sbb
fisubrs
add
adc
mov
xchg
sub
xor
add
aaa
stos
inc
jne
mul
pop
fisttpll
shrb
js
mov
adc
leave
cwtl
stos
outsl
mov
pushf
imul
fidivrs
outsb
add
inc
pushf
mov
or
pusha
fisubs
arpl
or
pop
mull
lods
xchg
imul
test
mul
mov
cmp
aas
fidivs
cmpsb
mov
leave
mov
push
out
xor
jbe
mov
and
ja
mov
add
inc
or
or
lcall
das
in
push
aad
lds
sbb
jg
and
push
jecxz
sub
xor
imul
fdivrl
loop
xor
adc
mov
cwtl
add
or
hlt
and
cwtl
push
jp
cmp
in
sub
das
mov
mov
dec
pop
cltd
push
or
popl
out
loop
adc
inc
mov
mov
jb
imul
jge
andb
jp
inc
lods
std
insb
add
leave
mov
cmp
lods
xchg
lahf
ja
lods
cmp
inc
out
push
mov
je
pop
xor
pop
iret
mov
gs
mov
gs
push
and
jmp
or
dec
aam
loop
push
push
addr16
cmp
dec
inc
lods
and
call
das
xor
aad
xchg
nop
mov
sarl
cmp
xor
add
test
mov
pop
stc
decb
test
sahf
out
and
ss
jo
or
lds
cltd
loope
push
jmp
mov
arpl
cmpsl
les
inc
pop
mov
loop
das
fisttps
add
pop
jb
and
mov
xchg
and
push
lahf
inc
mov
cli
popa
out
stos
mov
loope
popa
scas
pop
sti
mov
hlt
inc
pusha
inc
add
dec
dec
dec
xchg
mov
push
ja
insb
jnp
lds
sbb
dec
shll
xorl
mov
jg
mov
clc
pop
push
lret
xor
jb
stos
cmp
sbb
mov
pop
insl
out
sahf
push
ret
sbb
mov
xchg
enter
cmp
aaa
cmp
out
enter
adc
mov
mov
enter
stos
sbb
stos
push
push
cmp
cli
pop
insl
loope
jg
sbbb
outsb
cmp
sbb
loop
push
mov
mov
scas
mov
push
xor
dec
pop
notl
mov
xchg
dec
pusha
or
mov
das
mov
test
inc
fldl
or
fs
repnz
mov
sbbl
dec
std
gs
movsb
jae
popa
cmp
popa
testl
dec
imulb
imul
mov
iret
frndint
adc
dec
xor
sti
lcall
and
pop
inc
inc
outsl
cs
jl
mov
repnz
into
jl
arpl
and
mov
mov
jge
sub
sahf
js
push
and
push
cltd
add
and
jge
xchg
mov
insl
cld
jg
out
orb
sahf
cmp
adc
mov
in
lods
cmp
inc
arpl
iret
ljmp
cmp
sahf
jmp
sbb
push
and
ret
push
inc
mov
mov
dec
push
inc
gs
jge
lds
fcmovne
outsb
lea
add
push
pushf
dec
enter
pop
hlt
scas
sbb
das
bswap
or
test
es
aaa
jb
fmull
push
mov
ret
js
mov
add
adc
sub
push
mov
xchg
fbstp
jne
in
push
mov
xchg
mov
mov
xchg
xor
pop
aaa
add
and
test
sbb
sarb
jle
mov
xchg
hlt
cld
cs
sbb
xor
pop
mov
movsb
cmp
orb
cmp
stc
imul
jbe
scas
mov
inc
jecxz
ja
push
lret
dec
iret
xor
enter
add
frstor
int3
ficomps
gs
and
sti
sarb
adc
sbb
push
je
sbb
loop
mov
inc
mov
inc
pushf
cmpsl
cltd
sub
jg
movsl
test
daa
sub
sbbb
push
movsl
pop
and
outsb
pop
jo
cltd
mov
mov
adc
and
pop
adc
lret
jno
inc
jno
pop
icebp
lcall
pop
push
shll
xor
std
pop
andb
dec
pop
push
pop
in
dec
lods
fbstp
jl
icebp
movsb
in
mov
dec
es
dec
andl
sub
js
clc
fmul
stc
mov
xchg
add
mov
xchg
cmp
push
jne
negl
mov
or
or
xchg
push
jmp
or
pop
rcrb
cmp
lds
ja
pop
cmp
shr
push
ffree
mov
add
shll
test
out
mov
les
sbb
lcall
sub
xchg
cltd
xor
fisttpl
and
out
and
arpl
jle,pt
les
fisttps
push
bound
sub
mov
aad
or
add
sti
jb
jg
std
xor
stc
aad
push
pop
xor
mov
dec
imul
mov
sbb
fcompl
nop
pop
inc
jo
jae
cmp
cmp
rcl
dec
loop
repnz
sahf
call
push
jo
pop
xchg
cli
adc
leave
xchg
sahf
pop
lods
pop
mov
xor
test
aad
cmp
mov
or
push
outsb
mov
int3
fs
xchg
mov
xor
jmp
test
sub
add
mov
mov
cmp
or
push
data16
in
jno
dec
push
jecxz
xor
xor
icebp
mov
loop
jle
mov
or
pusha
idivl
aad
and
pop
jle
jns
xor
add
sub
add
xlat
add
dec
mov
push
sub
mov
js
mov
add
push
int
popa
adc
mov
nop
mov
mov
dec
cld
fimuls
clc
rorl
cmc
mov
bound
adc
pushf
fnsave
sub
jmp
call
inc
dec
outsl
mov
ljmp
jg
ja
js,pt
stos
daa
xlat
push
insl
or
sar
pop
xor
dec
sub
xchg
sbb
mov
sub
aas
vfrczpd
xor
divl
sbb
or
cmp
mov
jge
or
dec
jmp
jge
inc
fisubl
ret
popa
clc
hlt
out
fwait
sub
rol
rcll
dec
lods
std
sub
xorb
mov
sti
lret
or
sub
lcall
mov
add
cmp
jl
pop
pop
imul
add
sahf
clc
xor
cwtl
adc
in
mov
fists
push
shll
and
jl
push
pop
and
sbb
mov
int
mov
repnz
jge
scas
mov
xorl
xor
es
push
std
inc
or
enter
lea
mov
xor
xor
or
xlat
jp
or
fldcw
xchg
add
adc
rclb
inc
ret
repz
aaa
cld
out
dec
aam
inc
lwpins
lods
sbb
or
xor
cmp
mov
adc
xchg
aas
inc
mov
call
mov
imul
addr16
movsb
mov
test
push
imul
jl
lock
sti
add
fldl
push
sub
in
arpl
gs
in
jb
cltd
mov
xchg
pop
sbb
ljmp
movsb
cmp
inc
xchg
pop
clc
xchg
cmp
notb
hlt
ficomps
fistl
mov
adc
cltd
mov
mov
xchg
push
sub
orb
stos
inc
xlat
stos
aam
adcb
mov
add
fs
jmp
hlt
iret
mov
inc
xor
cwtl
popf
enter
or
mov
add
cwtl
cmp
push
jne
push
inc
adc
dec
loop
inc
cmpsl
out
sub
out
testb
and
mov
je
push
out
out
aaa
push
xchg
movsl
inc
adc
xchg
push
lcall
pop
enter
pop
mov
xchg
push
test
ja
frstor
jg
gs
xor
bound
sbb
cmpsb
cmp
repnz
das
jae
and
test
fmuls
gs
ds
jo
test
pop
dec
mov
fistpl
jnp
mov
inc
and
cmp
jle
repz
clc
test
or
sub
iret
or
mov
scas
jnp
jae
jmp
jge
or
mov
pop
scas
inc
cmc
inc
ja
loop
ret
mov
lods
mov
out
or
xchg
insl
mov
dec
push
ss
jne
push
nop
shl
data16
cmp
xchg
in
xchg
push
out
rcl
mov
and
mov
js
and
clc
push
pop
popf
sub
into
jl
dec
out
push
dec
and
dec
push
dec
push
xchg
in
mov
and
sub
out
aam
xchg
cmp
lret
lock
adc
pop
jmp
and
pushf
dec
sar
push
sub
loope
xchg
mov
int3
adc
push
mov
leave
imul
mov
icebp
sbb
inc
test
popf
mov
fdivl
sbb
jnp
cwtl
cmp
negl
jns
push
mov
sti
adc
cmp
shll
testl
dec
dec
repnz
in
inc
xlat
sub
xor
lret
pop
mov
mov
jo
out
int
cmp
pop
cld
rorb
cmpsb
pop
out
ss
push
icebp
xor
jp
fwait
inc
test
or
gs
xchg
dec
mov
add
out
outsb
mov
sub
push
pop
out
pop
subl
pop
int3
inc
imul
mov
jg
ds
ja
mov
shrb
aam
sub
out
scas
dec
xchg
mov
dec
mov
imul
xchg
sti
dec
inc
and
pushf
cmp
loope
inc
pop
lahf
add
test
mov
jmp
clc
cmp
sub
leave
jo
sub
pop
xchg
sub
mov
mov
aam
dec
pushf
add
mov
mov
dec
icebp
paddq
insb
movsb
cmc
lahf
fcomi
jge
mov
jb
andl
lea
pop
out
or
sub
push
lcall
enter
push
jmp
popf
stos
repz
jge
scas
adc
mov
dec
call
add
movl
adc
daa
jp
cltd
mov
jg
or
or
dec
dec
pusha
jle
push
daa
rcll
fidivl
push
stc
lods
pusha
clc
cmp
mov
sub
repz
in
push
mov
dec
jecxz
je
pop
hlt
jne
add
inc
push
mov
xchg
and
fwait
add
ss
sub
dec
or
pop
dec
mov
cmp
out
in
pop
cmpsl
dec
push
cmp
daa
aad
ss
pop
scas
sub
jl
das
inc
xor
lret
and
jae
lahf
mov
andb
orl
jmp
fdivl
or
cmpsl
sbb
lock
loope
rclb
lods
add
gs
lods
mov
call
sub
pop
lahf
arpl
push
push
lret
js
mov
repnz
xor
jg
cmc
call
mov
pop
xor
or
mov
add
push
fwait
push
cmp
push
adc
mov
push
xchg
out
add
lods
insl
sub
inc
bound
xor
call
or
and
jne
pop
scas
dec
cwtl
push
cmpsb
inc
andl
xor
fldcw
or
fistl
sbb
mov
xor
adc
ss
sbb
adc
in
mov
push
mov
xchg
sub
jbe
mov
cltd
test
add
sub
scas
pop
or
jecxz
jnp
jecxz
iret
cmpsb
idivl
mov
ret
adc
cmp
fimuls
mov
push
mov
xchg
dec
push
push
arpl
aam
adc
loopne
shlb
enter
shr
int
jecxz
int
inc
popa
test
cs
movb
aad
mov
and
sbbl
xchg
lods
push
add
mov
mov
add
aam
mov
xlat
insb
stos
adc
push
or
lock
xor
cli
mov
inc
icebp
sarl
shr
loopne
js
or
cmp
imul
sti
mov
outsl
cmp
push
pop
pop
je
mov
and
cwtl
dec
adc
ret
mov
cs
mov
fwait
aad
int3
dec
mov
cmp
cwtl
and
xchg
mov
mov
outsb
ljmp
call
cmp
lock
cld
mov
std
test
push
mov
mov
clc
shrb
sarb
jae
pop
mov
arpl
fdivrl
mov
cmp
cmpsl
repnz
repz
js
sahf
movsb
out
inc
popa
mov
cmp
sub
bound
insl
icebp
pop
dec
lcall
or
and
inc
mov
lea
mov
add
lods
dec
xchg
pop
add
bound
and
jo
xlat
add
bound
mov
xor
aaa
into
cmc
aad
jmp
xchg
push
cld
inc
divl
sub
adc
lahf
es
clc
cmpsb
jmp
out
jmp
or
ret
rorl
dec
pushf
andl
movsb
cmp
imul
imul
mov
jp
shrl
stc
inc
lea
aaa
jb
sbbl
push
idivl
mov
leave
mov
and
cwtl
jp
ds
pop
jne
cmp
sub
cmp
fwait
pop
das
into
pop
es
testb
lods
inc
fiadds
lret
shrl
cmpsb
dec
add
es
pop
in
fmull
outsl
stc
clc
out
pop
xor
sbb
ljmp
xor
mov
push
sbb
mov
stos
repz
shlb
aas
fildll
cmp
push
lock
jmp
fldl
push
mov
dec
mov
cmc
gs
lock
mov
cli
jp
loope
ret
sub
enter
fwait
add
int
or
sub
lahf
inc
roll
mov
notl
or
imul
push
jl
push
fistl
xor
add
ret
push
jae
lea
push
popf
adc
into
xor
push
push
inc
dec
lret
ret
push
icebp
xchg
out
fwait
push
out
xchg
lret
mov
cmp
pop
mov
sub
ja
mov
add
jg
loopne
stos
call
lret
hlt
xor
loop
mov
push
int3
lret
xor
xchg
leave
gs
mov
add
sub
es
jae
jl
adcb
xchg
pop
cmp
lock
call
dec
insl
ret
fs
jno
ss
sbb
push
insb
xchg
ficomps
xor
cwtl
xor
cwtl
and
sbb
xor
cld
xor
mov
and
cmc
fsubr
mov
push
in
mov
push
std
lods
add
push
add
ret
loop
lret
mov
xor
xchg
pop
negb
aas
cltd
cmc
clc
inc
pop
hlt
je
jp
fwait
sbb
mov
mov
sbb
std
cmp
outsb
add
faddl
addr16
out
mov
lods
jl
jmp
or
andb
push
test
mov
in
xchg
xor
jle
shlb
in
mov
xlat
jbe
push
pusha
cli
ficompl
sbb
jp
stc
and
scas
ret
sbb
aad
add
inc
jmp
mov
xchg
test
mov
mov
aad
adc
sbbb
mov
pop
inc
jmp
jns
jo
jb
out
or
and
and
add
xor
sub
mulb
mov
xlat
or
rorl
xchg
jo
xor
jecxz
sub
jmp
mov
mov
cli
xchg
fisttps
adcb
loop
aam
and
mov
mov
adc
enter
data16
jb
mov
xor
cmp
in
add
test
sbb
rolb
or
shll
xchg
in
lds
xchg
jg
lea
daa
or
mov
jg
inc
jno
adcb
ds
jmp
addl
es
adc
sbb
popf
sub
mov
xor
or
enter
rol
pop
icebp
mov
pop
cmp
mov
cmp
mov
add
mov
push
outsb
test
ja
jb
add
std
adc
cmp
cmpsb
rcrb
lds
pop
test
fistpll
push
and
in
jl
mov
pop
mov
cltd
pop
repnz
mov
cmpsb
cltd
sbb
mov
push
add
mov
repnz
pusha
adc
pop
jae
cmp
rcrb
into
pusha
and
sbb
bound
jecxz
mul
bound
pop
nop
jl
out
push
sub
repnz
repz
insl
inc
dec
mov
stc
push
in
cwtl
out
andl
test
jecxz
shll
shl
fisubl
in
outsl
xor
add
cmp
adc
movsl
jmp
mov
add
mov
lods
imul
fiadds
mov
xor
fimull
gs
sbb
pop
stos
cmp
pop
cmpsl
jae
stc
xchg
or
cs
scas
repnz
in
inc
ss
push
mov
sub
jbe
ljmp
jns
adc
adc
popf
nop
and
sbb
mov
fcompl
mov
fdivr
inc
mov
clc
rolb
jecxz
mov
sub
clc
or
test
jecxz
inc
pop
or
push
js
mov
mov
outsl
nop
jecxz
je
mov
test
mov
dec
aaa
daa
fnstsw
mov
sbb
nop
negl
in
or
mov
xchg
add
clc
aad
adc
leave
jns
and
xchg
popf
mov
jp
mov
or
ficoml
js
mov
int
add
mov
mov
push
pop
dec
pop
call
and
sub
insb
and
sub
inc
xor
ret
insl
mov
mov
cs
imul
adc
jecxz
mov
pop
test
popf
mov
cmpsl
xchg
fld
mov
cwtl
mov
insb
out
mov
insl
jnp
push
addb
push
pop
fisttpll
mov
and
mov
out
cltd
adc
imul
mov
push
stos
in
je
jbe
cmp
mov
dec
in
es
psubsw
mov
sahf
mov
mov
in
mov
push
aas
push
sub
testb
inc
sub
adc
into
pop
outsl
subl
jb
enter
gs
fdivl
xor
or
nop
inc
mov
xchg
adc
push
repnz
sahf
lea
xchg
inc
push
ljmp
mov
jl
push
rcrb
lcall
lcall
cmp
aam
cmp
jae
mov
push
add
vpsrlq
dec
pop
fstpl
fcoml
mov
and
add
sbb
mov
add
or
cs
cs
add
test
fistpll
in
inc
mov
scas
cs
lods
shl
dec
out
or
cmpsb
cmp
movb
push
mov
pop
xlat
jmp
movsb
fidivs
push
and
repz
and
and
in
shrl
dec
ret
mov
push
sbb
xor
into
insl
rcr
mov
fs
out
sarl
mov
mov
das
add
cmp
push
pop
hlt
adcl
lcall
rcll
jo
ret
xlat
fisubrl
mov
pop
inc
jmp
dec
pop
pop
les
jle
xchg
mov
push
add
adc
rcll
arpl
stc
inc
mov
test
mov
push
pushf
int3
xor
jns
fnstsw
adc
fildll
push
insb
add
pop
icebp
jae
fidivrl
sbb
dec
cmp
pop
jb
sbb
lock
rol
pop
add
mov
xor
repz
push
sub
lahf
cmpsl
ds
or
popa
daa
pop
test
mov
test
les
test
mov
stc
nop
sub
sub
shlb
daa
adc
scas
ljmp
call
mov
inc
fcmovnbe
adc
nop
stos
loopne
adc
mov
mov
cwtl
into
sahf
pop
pop
out
imul
sahf
mov
into
sub
jl
clc
out
popf
or
lcall
mov
jmp
xor
outsb
mov
loope
in
cmp
mov
mov
enter
rcr
lahf
inc
mov
subb
lret
fsubrl
xor
add
pop
jmp
ds
inc
js
ret
xchg
push
ljmp
pop
mov
mov
je
pop
test
pop
pop
enter
pop
xchg
sbb
int3
pop
mov
insl
imull
in
inc
inc
sbb
xor
pop
pop
jmp
dec
jecxz
ds
sbb
les
add
sbb
adc
dec
xor
out
in
outsl
push
adc
jg
stc
cs
popa
mov
rclb
xchg
imul
lcall
adc
adc
pop
pop
xor
mov
push
test
shrb
lea
jmp
fistpl
loopne
lret
ljmp
aad
xchg
pop
fildl
jns
and
popw
inc
cwtl
int
cltd
test
push
mov
stc
push
lea
push
mov
fwait
jecxz
fnstsw
pop
call
pushf
ss
inc
cmpsb
push
insl
jne
pop
scas
pop
repnz
and
add
jp
add
rcrl
daa
mov
popf
out
xor
das
push
cltd
mov
push
jo
test
lods
mov
lret
push
aam
shll
jg
out
loope
mov
lcall
icebp
mov
mov
ror
inc
push
inc
mov
xchg
adc
test
pop
mov
cli
lea
dec
stos
mov
mov
jae
push
and
addr16
cmp
fs
in
pop
xchg
xor
inc
jb
cmpsl
mov
xor
mov
stc
into
popa
lods
cld
or
movsb
les
data16
adc
or
xor
bound
pop
jp
in
test
or
out
orb
xchg
cld
pop
cltd
inc
loop
and
fwait
push
and
and
mov
mov
mov
dec
xor
push
lods
in
lret
jge
notb
imul
out
test
xchg
or
push
or
push
cmp
mov
push
les
jb
cmpsl
sub
adc
add
daa
js
add
xchg
imul
inc
test
out
shl
mov
and
xchg
scas
mov
jbe
inc
cmp
test
jb
loope
cmp
test
and
rolb
test
jo
mov
push
sbb
mov
pusha
rorl
lock
hlt
out
xchg
aas
jecxz
jle
movsb
xor
dec
outsl
out
sub
sub
cmp
ja
and
pop
rcrb
inc
dec
sub
and
test
cwtl
in
js
lret
fcmovu
cmp
mov
cmp
pop
outsl
mov
dec
call
cmp
adc
fsubr
sub
xor
mov
mov
pop
leave
mov
mov
sbb
adc
add
rcrb
int3
xchg
cmp
mov
les
test
ds
lds
and
clc
or
xchg
stos
jge
or
jns,pn
xor
jb
ljmp
scas
cmp
and
mov
or
inc
es
cmpsb
imul
fmuls
and
push
or
popa
pusha
les
pop
mov
adc
pop
das
jecxz
add
jns
je
stc
push
push
push
push
xor
mov
inc
divl
adc
shrb
add
cmpsl
mov
xor
jmp
and
xor
mov
xor
mov
popa
add
jmp
fwait
leave
dec
ja
insb
or
test
in
addl
mov
mov
shrl
rcll
int
ja
cmp
add
pop
mov
mov
mov
xor
pop
pop
rolb
cmp
icebp
jmp
pop
iret
jbe
movsb
xchg
cmp
cmp
fmulp
mov
lods
jo
popf
add
sbb
push
cs
adc
mov
lret
dec
inc
cmp
mov
insb
mov
jl
sub
sub
dec
sbb
push
fdiv
stc
shl
mov
ds
xlat
movsb
pushf
repnz
or
aad
roll
mov
pop
imulb
dec
jge
sti
add
mov
dec
pop
mov
pop
les
adc
add
jns
and
negb
insb
idivl
sub
adc
and
outsl
push
ds
or
testb
xchg
js
lcall
or
ds
repz
push
or
into
mov
add
addr16
popf
orl
cmp
les
cmp
lods
daa
aam
mov
mov
sub
lods
cmp
xor
push
mov
mov
frstor
mov
push
mov
mov
loope
std
mov
adc
dec
int
loopne
test
insl
xor
in
lock
sbb
cwtl
push
pop
mov
stos
sbb
std
leave
int
stos
ljmp
inc
push
pop
jb
mov
mov
fnstsw
rorb
in
adc
jmp
aaa
inc
mov
insl
out
lahf
sub
dec
fnstcw
and
rclb
cmp
cli
adc
xchg
pop
pop
mov
cmpsb
stc
out
icebp
adc
mov
pushf
xor
movsb
mov
fldenv
jg
cmp
nop
mov
mov
cs
push
mov
pop
repnz
stos
adc
out
jbe
adc
into
in
add
xlat
xor
pushf
mov
test
cmp
pop
adc
jbe
push
jmp
popf
int3
notl
pop
or
pop
roll
mov
fstpl
call
fdivrs
xor
sbb
clc
int3
lret
mov
data16
mov
xor
aaa
push
jae
inc
rorb
push
outsl
mov
jns
push
shrl
xorb
cmp
je
nop
push
out
dec
icebp
mov
mov
pop
out
mov
inc
and
push
testb
xorb
repnz
sub
fs
and
inc
fst
movsl
nop
daa
sbb
inc
int3
sbb
adc
and
arpl
and
mov
mov
push
in
xorl
sub
sti
out
pop
adc
inc
rorl
popl
aam
lea
mov
mov
shrb
in
pusha
ja
sbb
aad
cmpl
mov
lds
notl
push
mov
mov
gs
xchg
in
mov
fnstenv
inc
xchg
iret
lcall
fucomp
sarb
ljmp
notb
mov
sbb
xchg
fwait
gs
insb
push
mov
add
cmp
or
test
and
fildll
hlt
repz
std
push
mov
aaa
stc
scas
dec
fiadds
dec
mov
mov
les
stos
dec
add
loopne
aad
and
mov
fwait
dec
das
jle
mov
or
ret
adc
mov
aad
lcall
shll
das
dec
adc
ja
outsl
stc
lea
mov
fisubl
mov
cmp
mov
cmp
xchg
cmpsb
cmc
inc
ret
std
notb
add
das
fildll
sub
add
and
jbe
sub
dec
add
rorb
and
sub
clc
bound
int
in
loopne
cmp
mov
jo
add
mov
iret
jns
arpl
aaa
pop
popf
xchg
mov
mov
jne
aas
pop
cmc
icebp
aam
xor
test
lea
lods
mov
popa
aas
jle
inc
fs
mov
inc
std
jmp
or
cmp
pushf
dec
cld
fisubl
call
leave
xchg
jnp
das
mov
jp
imul
mov
mov
jo
rcll
pop
xchg
mov
out
sbb
cwtl
mov
push
jnp
jge
repnz
sbb
cmpsl
lret
jmp
jbe
hlt
cmp
push
jb
push
mov
xorb
fwait
xor
outsb
jnp
lods
dec
mov
into
fbstp
ljmp
adc
push
inc
sbb
xor
dec
dec
sbb
xchg
aam
jns
or
lcall
stc
dec
xor
sbb
dec
and
and
lods
ljmp
dec
cmpsl
ds
and
sbb
sbb
movsb
cs
cmp
test
fcmovnb
mov
out
outsl
repz
mov
jo
fldt
xor
scas
sbb
pop
xchg
pop
pushf
inc
loopne
mov
rol
dec
enter
outsl
dec
add
sahf
jle
inc
and
fstpl
sbbl
repnz
lahf
ss
aam
es
jo
jle
ljmp
repnz
iret
mov
lahf
push
andl
iret
jecxz
rcrl
arpl
outsb
mov
jns
stc
and
jnp
repz
dec
cltd
sub
stos
mov
les
pop
repz
adc
mov
dec
inc
in
test
xchg
ljmp
mov
stos
mov
xchg
push
push
mulb
push
pusha
pusha
or
xchg
jp
inc
inc
ffree
mov
jp
clc
cli
xchg
cmp
out
test
mov
or
sub
jns
push
test
or
add
aam
mov
aaa
jbe
imul
mov
clc
mov
cmp
add
push
pop
add
or
cmp
loopne
sbb
outsw
in
jg
push
fwait
test
pop
mov
rorb
lods
xor
outsl
dec
insb
inc
jle
pop
aad
xor
call
lret
xchg
dec
pop
in
add
sub
xorl
mov
das
outsl
mov
std
test
or
or
add
das
in
ss
dec
mov
sahf
mov
pop
mov
push
lods
in
int
xchg
jge
ljmp
jl
int3
arpl
popf
in
jmp
jne
ds
imul
cmpsw
ds
mov
filds
inc
push
lret
fnstcw
and
mov
inc
popa
jnp
xchg
jno
movsb
pushl
popf
mov
divb
fbld
pop
add
stc
cmc
adc
jns
data16
ja
mov
enter
xor
or
dec
mov
inc
fsubs
dec
pop
mov
lret
mov
adc
test
cli
cwtl
test
xor
les
out
push
dec
loope
aam
cmpsl
jno
push
movsb
mull
setnp
and
stos
jae
cmc
das
mov
jnp
nop
inc
pop
sahf
enter
mov
sbbl
pop
jg
ret
loope
movsb
pushf
fldenv
ds
decl
sbbb
mov
inc
movsl
lods
imul
ja
cmp
mov
cli
inc
jns
cmp
fnsave
add
loope
mov
arpl
dec
inc
xor
cwtl
jmp
sbb
stc
leave
jmp
sbb
mov
push
stos
hlt
shrl
mov
adc
int3
push
sub
mov
inc
push
push
cltd
ja
imul
out
out
dec
pop
mov
enter
sbb
jb
clc
mov
aad
sbb
scas
std
in
cmp
push
ss
mov
xchg
jmp
push
movsl
jge
adc
iret
inc
cmp
jb
adc
roll
mov
test
push
push
mov
loop
sub
mov
jge
subb
push
sbb
gs
mov
dec
add
mov
mov
pop
push
add
imul
inc
cs
push
pop
lock
add
icebp
imul
cmp
add
stos
rcrb
add
mov
orb
in
rcl
inc
add
aaa
cli
jns
jg
mov
and
loopne
stos
jge
add
stc
jmp
adc
lods
or
dec
sub
clc
dec
adc
test
inc
pop
fcmovnb
push
imul
popa
clc
jg
aaa
mov
push
mov
in
das
or
mov
cmc
mov
xchg
or
adc
push
insb
or
popf
call
cmpsl
ds
pushf
mov
inc
shll
sarb
ljmp
jno
push
add
lahf
cmpl
popf
jne
mov
stos
pop
adc
fstl
pop
inc
loope
imul
add
cmpl
jg
fwait
or
mov
imul
and
jb
outsb
cmp
adc
adcb
cmp
ret
in
in
scas
out
outsl
divl
fcmovb
push
or
cmp
push
pop
imul
mov
push
add
out
push
lahf
adc
pop
cs
repz
negb
adc
enter
loopne
xor
rorb
xchg
call
mov
xor
push
push
imul
inc
fs
cmc
fnstenv
sahf
test
into
js
sbb
inc
add
shl
dec
loopne
bound
xor
jg
mov
stos
inc
mov
jge
xchg
lock
lret
adc
cs
push
inc
test
rcll
mov
test
fistps
cld
imul
imul
shl
mov
jmp
outsl
mov
xchg
out
dec
sahf
fiadds
jp
outsb
inc
cmpsb
ss
in
pop
hlt
iret
jnp
jb,pn
cmpsb
aaa
jne
loop
lret
xchg
mov
xchg
mov
jnp
ljmp
out
push
out
les
test
push
adc
fdivs
inc
mov
dec
push
daa
jecxz
dec
inc
xor
dec
jmp
aas
iret
inc
xchg
mov
mov
cmovs
cwtl
jns
sbbl
mov
mov
cmpsb
shl
mov
shl
out
mov
sub
rclb
enter
adc
ret
push
imul
scas
lret
add
mov
data16
mov
lods
and
mov
sar
xlat
loop,pn
fimull
cmpsb
sub
dec
test
outsl
insb
pop
pop
sahf
nop
xor
mov
push
jp
movsl
inc
fsub
add
mov
popl
sbb
mov
je
rorl
pop
cmpsl
or
lock
shlb
pop
sbb
inc
aam
push
mov
fisubrl
daa
sahf
pop
push
push
ljmp
jno
lcall
and
xor
push
mov
outsb
jl
or
push
das
leave
sub
iret
fwait
add
push
xchg
test
sub
jg
jo
add
mov
sbb
out
shlb
xor
push
cmp
imul
xor
movsb
mov
lret
cmp
push
sbb
adc
inc
decb
mov
push
cmp
or
mov
lods
ror
or
jb
xor
mov
mov
insl
fidivl
or
mov
mov
daa
sub
in
les
cmp
subb
notl
jbe
repz
lods
int
in
mov
in
sub
cs
and
jmp
mov
jl
int3
inc
xchg
lock
bound
sbb
sub
sub
clc
stc
pop
out
sub
jmp
rorl
aas
jge
mov
pop
jne
add
sbb
decl
pusha
cmc
mov
jg
aad
int3
mov
sahf
cwtl
jb
push
sub
jns
mov
cmc
sub
out
and
push
adcl
clc
adc
sbb
xchg
sub
inc
pop
push
or
arpl
popf
xor
std
daa
fcomps
sbb
fisubl
das
loopne
adc
aad
in
test
mov
xor
or
xchg
push
stc
xchg
pop
lea
fwait
and
mov
out
and
call
ja
fwait
sbb
dec
dec
ljmp
mov
pop
xchg
xor
mov
push
push
jno
xchg
sbb
les
pop
mov
clc
imul
mov
mov
mov
fadd
cmp
cwtl
stc
xchg
push
jb
dec
test
nop
daa
sbb
popa
clc
add
es
ficompl
andl
gs
jg
cmpsl
ret
movsl
push
shlb
cmp
inc
daa
outsb
out
adc
jl
pop
sar
dec
push
mov
mov
vpsubw
pop
and
pop
add
enter
xor
push
ss
clc
sbb
test
es
mov
dec
jle
push
hlt
stc
data16
adc
in
sbb
daa
or
mov
test
or
dec
data16
sub
movlps
mov
inc
xlat
stc
rcll
inc
int3
fld1
jbe
and
jo
mov
jge
cld
jae
cmpsb
out
jmp
fsubr
sbb
mov
xor
dec
xchg
push
fcompl
mov
js
lret
xchg
cmpsb
int
add
xor
or
movsl
cmp
jne
adc
movsb
lds
rcrl
mov
push
sbb
data16
mov
pop
xor
mov
icebp
mov
adc
test
adc
inc
push
in
imul
dec
pop
into
mov
lock
cmp
int
pushf
push
sbb
xchg
xor
dec
loop
dec
jno
jge
loope
pop
dec
or
xor
sub
notl
and
mov
mov
inc
insl
push
hlt
test
adc
lret
xchg
xchg
adc
addr16
and
mov
mov
adcl
push
mov
xlat
loop
mov
aad
jle
xlat
add
clc
sbb
cli
xchg
vcvtpd2dq
and
out
es
adc
imul
add
push
mov
cmp
mov
repnz
and
sbb
mov
sub
adc
scas
sahf
and
arpl
enter
dec
lods
aas
dec
pop
add
push
push
scas
lods
imul
loop
pop
xchg
or
dec
into
cmp
in
insb
out
fbld
cmc
in
xchg
push
stos
out
jp
ja
dec
or
pop
sbb
jnp
cmp
cwtl
cmp
cwtl
mov
cs
push
jle
push
mov
cmpsb
lea
cmp
sub
hlt
stos
inc
es
pop
jp
out
leave
pusha
and
cs
mov
imul
or
iret
stos
std
cmp
adc
sahf
mov
and
fs
leave
mov
sti
dec
data16
cltd
cmpsb
les
loopne
jp
ja
test
pop
mov
roll
xchg
push
cmc
and
imul
std
incl
mov
pop
cmpsb
or
outsb
aam
mov
sub
add
jns
and
mov
sub
pop
shl
bound
or
imul
push
js
fwait
daa
cli
adc
sub
adc
hlt
inc
cld
xchg
jae
adc
jg
sahf
push
inc
jg
ss
daa
push
push
icebp
data16
lcall
mov
jnp
fsts
outsl
aas
stc
mov
jb
insb
test
bndstx
sbb
sbb
testl
shll
pop
jle
std
add
cs
jge
leave
incb
test
push
inc
mov
mov
push
aas
xor
mov
pop
jp
daa
ss
xor
sbb
xorb
mov
xor
imulb
adc
inc
rcr
incl
imul
imul
scas
mov
into
daa
mov
pop
jne
mov
sub
and
mov
inc
pop
sbb
xsha256
cmpsb
push
das
imul
ds
outsl
movsl
fsubr
ror
shrl
nop
in
imul
popf
xor
stos
cmpxchg
inc
push
pop
push
loop
or
dec
clc
movsb
decb
sub
adc
xchg
adcb
pop
lea
flds
mov
sbb
cwtd
cmp
push
int
or
loop
es
aad
inc
push
dec
mov
mov
out
out
adc
cmp
jbe
out
in
jno
sub
xchg
ret
sti
clc
inc
pop
jae
sbb
mov
and
add
dec
jle
jmp
adc
jno
sti
xor
jns
mov
jae
into
imul
test
mov
notl
repz
out
pop
das
xor
repnz
aas
add
mov
and
test
fldcw
addr16
push
cltd
repz
cmp
int
lods
push
movsl
fiadds
mov
xor
enter
lcall
inc
and
cli
test
notb
adc
out
inc
xor
xor
loopne
cwtl
lcall
inc
pop
fpatan
mov
jle
or
cs
shr
shrl
mov
jb
bound
das
out
and
pop
divb
es
icebp
inc
xor
mov
and
ljmp
push
mov
push
fbld
push
cmp
and
xchg
mov
lret
and
dec
movsl
or
arpl
jo
and
data16
outsl
adc
xorps
xor
ja
mov
mov
lcall
sub
add
out
pop
icebp
lret
add
xchg
add
inc
xor
mov
mov
rorl
sti
adc
repnz
xor
or
inc
fisubl
sbb
repz
outsb
and
push
lds
sbb
out
sti
inc
xlat
adc
ret
pop
in
xor
daa
add
imul
sarb
add
sub
test
add
es
and
or
lea
jo
mov
daa
push
ss
dec
iret
data16
mov
jae
stos
add
add
sarl
add
jb
out
sub
in
adc
and
sbb
aaa
xchg
mov
sete
mov
push
mov
stc
cmp
push
xchg
xor
sahf
addb
addb
add
push
sbb
into
xor
add
fidivrl
leave
in
in
adcb
ret
inc
mov
pop
idivb
popf
push
fistpll
jge
loope
testl
and
aam
movsb
pusha
notb
add
enter
pop
ja
into
mov
shl
jle
push
fiaddl
mov
popa
mov
or
or
mov
xchg
pop
les
mov
fidivl
movl
pop
jmp
or
imul
xchg
mov
xchg
adc
push
test
call
sbb
jnp
adc
adc
sahf
dec
push
jle
adc
jg
push
xor
scas
lods
push
aas
xor
jo
inc
xchg
sbb
and
cmp
imul
jl
add
cmp
das
sbb
jecxz
pop
sahf
test
jg
repnz
popf
ss
addb
aas
stos
xchg
mov
sub
xor
stos
cmp
inc
inc
mov
andb
dec
lcall
push
out
push
scas
call
or
mov
sub
leave
push
pop
pop
cmpsb
cmp
subb
out
mov
std
sub
loop
mov
xchg
pusha
lret
dec
testb
mov
dec
fisttps
leave
adc
fs
add
test
dec
bound
iret
inc
add
in
add
lock
dec
jns
cmp
jno
xchg
cmp
loopne
aad
jmp
lcall
popa
clc
push
lret
imul
aas
int
cli
testl
mov
push
divb
mul
mov
jp
inc
jne
xor
push
cmpsb
fsqrt
mov
pop
xor
dec
xor
incl
mov
xchg
fucomip
xchg
rorl
pop
cltd
loop
pop
cmp
outsb
add
es
aas
fbld
mov
jecxz
jbe
sbb
inc
or
jne
movsl
inc
nop
mov
pop
pushf
mov
ja
cmpsl
pop
dec
test
xchg
test
fstpl
imul
cmp
jbe
sub
inc
mov
jns
stos
sub
inc
loop
cmp
mov
lcall
inc
hlt
adc
adc
stc
insl
xor
add
es
shlb
pop
aaa
fiaddl
jl
loope
mov
ret
sub
inc
cmpsl
ds
or
pushf
cmp
pop
stos
inc
mov
mov
insb
mov
mov
add
jae
aam
push
xor
lods
pop
sub
jg
pmaddwd
repz
mov
xchg
aaa
xchg
mov
mov
cwtl
andl
rol
pop
scas
add
mov
jg
pop
enter
repz
xorb
sub
dec
push
popf
mov
aad
repz
rcrb
inc
mov
xchg
insb
jb
add
fwait
mov
ret
fsts
pushf
xchg
je
les
push
inc
xchg
test
xchg
outsb
addr16
sbb
xlat
mov
xor
mov
scas
add
test
mov
leave
clc
xlat
xorb
mov
cmc
jnp
repnz
sbb
xchg
mov
test
fidivrl
add
scas
les
dec
cmc
ret
jge
dec
daa
in
call
stc
out
roll
ljmp
jno
pusha
push
xor
jmp
sbb
cwtl
mov
mov
sub
stos
adc
stos
mov
shrb
mov
and
mov
adc
pop
add
outsl
push
xor
pop
fs
loopne
pop
loop
cs
je
fidivs
xor
test
xchg
gs
push
jb
dec
mov
dec
add
aas
cmpb
leave
pop
aaa
add
lcall
cltd
rcl
repz
push
inc
test
mov
out
jl
pusha
lock
in
and
fs
cmp
ret
push
or
mov
dec
fidivrs
cwtl
or
push
je
sub
outsb
dec
test
icebp
or
dec
xor
daa
orb
aas
push
and
daa
inc
es
out
cmp
icebp
push
out
aam
mov
sbb
inc
insl
into
and
xor
adc
pop
arpl
dec
and
icebp
xchg
out
cltd
test
shlb
xchg
repnz
pop
jnp
into
adc
jmp
iret
and
pop
sbb
sbb
arpl
nop
sti
mov
cmp
fsubl
mov
in
add
iret
xor
jb
fmuls
push
shrb
lods
inc
pop
in
pusha
pop
addl
orb
or
cmp
pop
dec
xlat
xor
dec
movsb
rcll
add
fbstp
aaa
in
xor
das
add
sub
dec
mov
lret
int3
popf
mov
adc
lret
mov
mov
cmp
xchg
sbb
pop
push
frstor
mov
jbe
rcl
mov
movsb
xor
mov
fidivrl
pop
fadds
fdecstp
add
loope
xchg
and
push
push
mov
imul
dec
les
andb
sub
cmpsl
xchg
and
sub
pop
mov
test
inc
fcmovnbe
mov
jne
mov
stc
nop
mov
bound
mov
orb
pop
out
mov
testb
cmp
sub
push
leave
stos
rcr
repnz
dec
jbe
cs
pop
pusha
or
pop
mov
add
sti
pop
aas
in
iret
and
push
in
std
push
lock
ja
adc
sbb
push
enter
and
inc
inc
flds
and
pop
sti
int3
pop
sub
mov
adc
loope
movsb
aas
mov
popa
lds
fidivrs
mov
aam
push
jmp
aad
stos
lock
jb
inc
push
cmpsl
loop
int3
mov
orl
es
stc
scas
mov
sub
lods
pop
inc
push
inc
std
lods
shlb
int
inc
idiv
aas
lret
xchg
pop
xor
push
inc
dec
mov
xor
add
es
or
sbb
shl
les
sub
fwait
test
mov
inc
mov
rcrb
fdivrs
xor
dec
arpl
dec
insb
push
fiadds
mov
popf
subl
scas
addl
cmc
mov
test
jo
inc
mov
aas
dec
loope
pushl
sbb
cmp
repnz
push
adc
out
jns
push
lahf
push
push
sbb
xchg
sbb
lret
nop
std
ret
in
jg
xchg
sub
mov
loopne
mov
sti
mov
cmp
inc
fdiv
jno
aas
es
xchg
xchg
sbb
lods
mov
cltd
ror
cmp
jae
psubsb
mov
mov
push
ret
call
cmp
jg
lret
sarb
mov
popf
call
lods
mov
outsl
mov
pop
mov
scas
xchg
fsub
popf
inc
xchg
aas
lock
sub
int
in
inc
and
fcompl
rol
pop
repz
jmp
or
je
pop
imul
aaa
and
push
shl
sub
mov
xchg
jmp
into
je
or
adcb
sbb
jns
loope
or
test
dec
mov
lds
and
mov
repz
jns
mov
test
mov
aas
jge
clc
out
addl
mov
xchg
dec
pop
lods
jp
jbe
mov
cld
cmp
in
shll
dec
mov
mov
out
lds
inc
aas
fstl
addr16
adc
jecxz
mov
mov
in
jns
js
repz
mov
leave
inc
fcoms
repz
outsb
out
rcr
xchg
cli
xchg
dec
mov
push
fcomps
je
jmp
push
push
inc
sahf
mov
call
scas
jl
loope
adc
sub
repnz
repz
aad
mov
loope
xorl
pop
jmp
ss
out
test
inc
loopne
test
sbb
dec
or
lods
test
xor
mov
push
dec
inc
adc
sbb
enter
or
mov
mov
movsl
fnstsw
xor
fildll
mov
clc
jmp
std
enter
imulb
inc
sub
dec
xchg
test
movsl
cwtl
lret
inc
lods
cld
mov
repnz
dec
pusha
fsubrs
cmpsl
divb
nop
pop
sbb
ds
sti
testb
mov
into
loope
addr16
push
and
repz
aad
push
shl
fcmovbe
scas
inc
repz
in
fmuls
int
lret
sub
loop
inc
cmp
test
pop
add
jns
xor
mov
push
cltd
and
test
push
sub
dec
lea
or
adc
jle
cmp
les
idivb
sahf
mov
ret
adc
jecxz
sbb
addr16
cltd
aas
cmp
mov
dec
in
dec
jecxz
mov
mov
add
adc
popa
pushl
sub
xor
sar
xor
inc
mov
and
sbbl
push
lea
addr16
pop
jge
or
bnd
dec
les
push
add
jno
repnz
lds
stc
nop
dec
sahf
in
and
jle
setp
xchg
pop
mov
fstps
in
sahf
stos
int
shll
jmp
sbb
push
divb
aam
adc
lcall
adc
and
cmp
sbb
mov
mov
pop
pop
aam
xchg
repnz
mov
std
and
mov
or
shrb
rcrl
paddusb
lcall
xchg
jle
dec
outsb
mov
mov
or
cmp
sar
loopne
mov
adc
fxch
data16
jle
cmpsb
push
lds
insl
mov
push
sti
fstl
jge
dec
andb
mov
cltd
gs
mov
cmc
xorl
nop
bound
gs
cmp
xlat
lea
add
inc
out
pop
out
push
fdecstp
movsb
mov
xchg
pop
sub
icebp
movsl
bound
movsl
movsb
faddp
pop
push
jbe
jmp
rclb
test
add
xor
rcr
loopne
sbb
popa
jmp
pop
mov
add
scas
insl
mov
fisttps
adc
cmpsb
inc
pushf
ss
add
aad
pusha
idiv
inc
jmp
adc
or
adc
test
pop
cmc
jecxz
adc
inc
gs
lret
mov
jb
pop
lods
dec
loope
jp
sbb
xlat
outsb
xor
mov
push
ljmp
insl
insb
fistpl
mov
ds
loope
mov
jnp
or
pop
xchg
es
out
mov
mov
jmp
jmp
lods
xor
fldenv
ret
test
loop
xchg
xchg
aad
dec
cmpsb
sbb
inc
bound
int3
arpl
push
in
sub
shll
int
dec
scas
xchg
push
in
dec
cmpsb
sub
inc
gs
inc
into
bound
lods
dec
es
shll
into
jecxz
imul
in
push
inc
arpl
lret
addr16
iret
jmp
ret
shll
cmp
test
fmull
scas
out
fldenv
mov
out
mov
or
rcl
pop
in
mov
in
sub
fs
mov
mov
pop
pop
aaa
push
mov
outsb
pop
scas
jnp
or
mov
icebp
mov
sub
pusha
add
in
push
or
fsubs
add
test
mov
or
stos
pop
fmuls
dec
loopne
jo
lret
mov
or
push
lcall
sbb
jae
icebp
mov
xchg
jbe
push
daa
lret
js
test
ljmp
pop
xor
cmpsl
mov
pop
pop
not
or
bnd
ret
push
xor
test
pop
and
fcoms
out
xchg
sub
aam
cmc
sbb
dec
test
loop
mov
push
in
ret
and
lods
stos
test
imul
and
mov
mov
xchg
orl
out
ret
in
sbb
and
push
jno
ja
lock
cmp
add
push
xor
mov
mov
call
adc
nop
insb
jg
outsl
jl
jne
jge
popa
repz
inc
inc
lahf
outsb
cmp
pop
push
xor
int
lds
fsubl
hlt
sbb
push
dec
sbb
xlat
repz
dec
add
test
scas
repz
push
popf
inc
js
call
shll
inc
dec
sbb
and
cmp
mov
add
pop
movsb
pushl
repz
icebp
mov
jmp
mov
mov
push
or
xor
sub
cmp
sub
pop
data16
das
enter
sub
std
jns
movsl
or
or
inc
clc
lods
mov
jnp
lahf
inc
sbbl
xor
or
pop
inc
mov
aam
xor
cmc
cmpsb
cmp
ss
mov
vpsraw
outsb
int
sbb
imul
pushf
and
fisubl
pop
adc
or
mov
push
cmp
ss
fs
push
dec
jecxz
in
sbbb
cmp
cmp
xlat
pop
aam
popa
dec
gs
rclb
fnstenv
inc
push
push
mov
mov
das
mov
jmp
mov
je
add
decb
mov
mov
cmpsb
fistpll
mov
aas
dec
out
pop
xchg
iret
mov
leave
shr
jge
mov
push
inc
or
cli
fwait
lods
pop
and
mov
pop
sbb
jp
xor
xor
or
adc
jb
mov
lret
shrb
jge
xorb
mov
cmp
dec
shll
mov
lock
push
pop
icebp
dec
xchg
cld
xchg
or
js
loope
sbb
xor
aaa
into
and
inc
push
out
test
jg
lret
jnp
in
lock
push
or
jb
in
aad
lock
sti
or
sub
lock
jns
xchg
lods
aaa
in
bound
lods
mov
call
arpl
or
mov
xor
mov
or
arpl
mov
cmp
jnp
mov
cmpsb
stos
cmpb
mov
push
cli
or
movsl
xchg
push
xor
sub
std
aaa
stc
mov
xchg
cs
inc
lcall
and
jmp
inc
jmp
sbb
push
xchg
push
repnz
push
test
mov
cmpsb
das
lea
lcall
and
daa
std
jo
xor
pop
inc
pop
gs
push
lods
and
push
sbbb
add
cmp
in
cmpsl
sbb
dec
or
xor
sti
push
inc
lock
loop
push
sub
jns
ret
pushf
shrl
shll
montmul
cmpsb
inc
sbbl
add
icebp
pop
sub
xor
fwait
movsl
clc
call
test
sbb
xor
pop
in
daa
xchg
mov
faddl
sbb
ss
cmp
jnp
pop
and
xlat
adc
les
clc
cmp
mov
jmp
dec
mov
in
fbstp
out
adc
outsl
add
adc
mov
mov
jae
sbb
cmp
test
push
test
fsubrs
cmc
and
fisubs
std
adc
syscall
cli
add
mov
inc
stos
test
arpl
pusha
sarl
and
push
push
push
sbb
pop
mov
xchg
sbb
pop
cli
out
push
sub
adc
std
inc
push
dec
and
in
test
xchg
cmp
push
mov
jmp
mov
push
idivl
adc
and
inc
mov
imul
jbe
mov
pop
pop
pop
mov
cmp
jecxz
inc
bound
loop
into
test
lock
and
fs
fmuls
mov
das
push
add
rol
mov
mov
cmp
movzbl
cld
xchg
aad
inc
aaa
negb
mov
sarl
sub
lods
ret
pop
loope
test
loope
scas
adc
aas
add
xor
sub
in
scas
dec
fcomip
movsb
xchg
push
mov
jnp
or
mov
inc
test
sub
push
jl
pop
lods
scas
daa
push
int
jp
cmc
lods
mov
push
dec
jae
push
sbb
aad
arpl
pop
das
xchg
outsl
lret
das
mov
enter
jmp
stos
pop
dec
push
jle
lret
or
dec
dec
out
pop
ret
pop
mov
loope
scas
out
jge
sbb
sbb
push
in
mov
mov
dec
cmp
mov
xchg
insl
push
data16
pop
fcmovb
mov
push
imul
cmc
mov
arpl
dec
adc
cli
xchg
mov
add
dec
xchg
sbb
jo
inc
jbe
inc
in
or
daa
ljmp
fwait
xchg
push
nop
roll
mov
movsb
jne
push
jno
sbb
lret
cs
fldl
stos
jbe
jmp
out
pop
or
out
sbb
push
xor
int3
jg
dec
mov
mov
xchg
sti
pop
sub
out
loopne
rol
cmp
push
subl
stos
inc
mov
out
les
jmp
xchg
push
cmp
jecxz
icebp
lcall
data16
and
insb
sub
sahf
push
push
cltd
jb
enter
int
daa
inc
shrw
push
pop
iret
popf
lcall
insb
xchg
out
sub
ds
sub
xchg
xchg
out
pushf
and
jle
push
mov
scas
push
daa
xchg
pop
jo
pop
test
mov
pop
cli
adc
adc
and
cmpl
sub
sbbb
add
scas
xchg
ja
and
xchg
jl
in
push
add
push
adc
push
sub
sbb
or
jae
pop
pop
out
dec
xlat
dec
add
mov
jb
jg
or
push
aaa
jg
cmc
mov
orl
fisubs
daa
addb
cmp
jle
jnp
and
cmpl
int
icebp
push
push
add
cmp
jns
or
lods
pop
xor
scas
jmp
addb
addr16
xchg
sub
mov
mov
cmp
dec
mov
fwait
repnz
jmp
pop
xchg
mov
dec
xchg
stos
js
push
xchg
fadd
enter
xlat
repz
push
mov
std
mov
and
or
rclb
jbe
adc
sbb
jbe
mov
movsb
fnsave
pusha
inc
outsb
dec
dec
pop
fisubs
cmp
jns
stos
and
stos
pop
imul
mov
push
out
dec
cmp
sahf
mov
dec
inc
mov
jg
adc
jnp
pop
mov
jmp
jno
lods
scas
inc
fidivs
pop
mov
push
notb
out
sarl
dec
jle
ss
enter
xor
adc
int
adc
jle
pop
ret
test
inc
add
lock
das
mov
aaa
jne
xchg
in
nop
psrld
adc
fisttps
pushf
xchg
adc
fwait
ret
mov
inc
nop
and
push
xor
xchg
jb
inc
not
sbb
jo
xchg
jecxz
add
fisubrs
xchg
shlb
pop
lods
fisttpll
je
cmpsb
ror
out
lcall
inc
sub
xchg
cmpsb
dec
xor
enter
mov
sarl
cmc
dec
dec
jno
out
mov
add
sbbb
cmp
addr16
cmp
xchg
popa
and
aaa
add
pop
int3
outsl
popa
inc
lods
dec
pushl
dec
stos
sbbb
loop
ss
xchg
and
lahf
cmp
add
sti
mov
adc
and
insl
cs
cmp
jne
xor
cmp
cmp
pop
sbbl
pop
pop
test
xchg
outsb
or
aad
mov
inc
pop
mov
or
mov
loopne
shll
push
sbb
and
dec
jno
lahf
sub
lds
push
outsb
in
add
loope
ljmp
xlat
sub
or
inc
push
pop
mov
sbb
dec
int3
insl
jno
and
movsb
leave
push
fnsave
inc
lahf
xor
or
mov
adc
test
ja
out
dec
jbe
pop
xchg
imul
xlat
out
nop
mov
out
int3
pop
aaa
mov
xchg
inc
popf
push
mov
test
push
fisubrs
or
xor
cmpsb
shrl
shrl
ja
add
xchg
add
in
add
idivl
and
in
mov
jecxz
xor
loopne
xchg
jge
dec
dec
sbb
int
cmp
out
lret
lock
add
adc
in
pop
sar
out
jge
xchg
mov
push
and
adc
fwait
sbb
testb
dec
sbb
cs
adc
mov
das
sti
dec
push
pop
jge
dec
loop
pop
ret
es
or
lds
dec
dec
stos
pop
add
loop
fidivl
cltd
dec
mov
xor
sbb
enter
ss
test
ljmp
ljmp
daa
jg
dec
add
cs
popa
cmp
daa
icebp
call
dec
push
test
mov
xor
fbld
mov
sub
sbb
mov
lods
and
push
xchg
mov
push
mov
das
push
or
add
aas
adc
sub
pop
fwait
aas
jnp
adc
inc
xchg
outsl
push
sbb
cmp
cmp
pop
int3
stos
in
cld
scas
rcrb
cwtl
inc
fcoms
mov
jbe
pusha
fdivl
addl
pop
pshufw
jecxz
out
mov
dec
shl
jge
loope
mov
mov
mov
jecxz
mov
fldt
mov
fcom
imul
das
xchg
fsubrl
mov
in
mov
mov
adc
cmpsl
aam
aad
mov
jg
gs
mov
mov
dec
pop
and
pusha
xchg
xchg
fimull
je
xor
and
or
clc
xchg
mov
mov
scas
insb
lods
pop
xor
mov
mov
insl
aaa
jge
daa
or
mov
cld
add
mov
mov
cmp
unpcklps
aas
cmpsl
add
rorb
inc
dec
push
mov
incb
jns
inc
push
cmpsb
mov
lahf
repz
stos
rcl
test
or
testb
xchg
xor
lcall
lods
adc
scas
in
fldl
aam
ret
filds
xchg
les
ror
stos
mov
fwait
loopne
repnz
mov
cli
xor
cltd
outsl
mov
mov
push
out
push
in
dec
cli
scas
je
jne
dec
fidivrs
lds
push
clc
pop
lahf
test
into
repz
in
mov
adc
fcmove
fs
lods
fsubs
mov
xchg
or
pushl
add
cmp
mov
notb
shlb
pop
adc
lret
lds
stos
jg
stos
pop
xor
adc
cmp
imul
push
sub
shlb
sbb
jbe
loop
int3
call
into
xchg
mov
inc
push
hlt
add
xor
lods
std
pop
sub
xchg
pop
sub
sub
testb
fiadds
add
cmp
mov
jg
pusha
xchg
pop
shll
push
out
jb
lock
in
negb
ja
jp
cmp
lock
movsl
or
mov
loop
mov
push
mov
dec
les
repnz
lcall
lcall
out
mov
pop
jmp
xchg
aaa
stos
fisttpll
gs
aad
pop
pop
mov
outsl
daa
aam
lret
jbe
inc
pusha
mov
mov
ljmp
out
test
push
or
adcb
ret
sub
add
sbb
or
in
leave
rsm
or
outsb
inc
and
mov
push
outsl
movsb
inc
test
adc
jle
cmp
mov
add
aas
mov
out
fisubrl
mov
sub
lret
push
sub
and
add
fdivp
cmp
call
out
imul
repnz
dec
std
test
dec
xchg
pop
popf
call
jmp
inc
sbb
inc
or
aas
mov
dec
dec
out
add
cli
push
insb
or
mov
ret
pop
or
cltd
pop
lahf
addr16
jne
xor
fs
std
inc
xor
cld
inc
out
lcall
das
icebp
push
adc
test
inc
mov
sbb
lds
sti
cltd
sar
decl
mov
mov
xchg
popf
and
sbb
popa
sub
and
out
pop
sub
or
in
mov
fsubr
push
or
mov
cs
icebp
adc
leave
pushf
push
add
mov
sbb
mov
rcrb
inc
rorl
xor
push
lods
adc
mov
jle
int3
fnstcw
cld
xlat
rclb
idivb
or
cld
mov
fcomip
flds
ljmp
push
xchg
adc
ret
pusha
movsl
xchg
lret
cld
jbe
pushf
cmpsl
sbb
mov
cmpsl
movsb
sbb
gs
fsubrl
push
and
pushf
cwtl
mov
and
mov
xor
mov
pop
loop
fwait
mov
pop
inc
jecxz
das
mov
cmp
push
fcmovne
fdivr
inc
sarb
arpl
cwtl
sbb
cmp
cmp
les
test
je
sub
rcrb
fwait
jno
xchg
mov
sbb
xchg
jnp
xchg
aas
imul
xor
daa
or
push
cltd
sbb
movsb
aas
mov
mov
imul
negl
addr16
fsts
fadd
jnp
mov
and
xchg
ja
push
inc
and
mov
psubw
rcrl
je
fsts
stos
adc
push
or
xor
jg
dec
cmpsl
jmp
pop
addr16
out
sbb
add
lods
pop
call
adcl
js
add
jno
mov
push
mov
pop
out
jecxz
adc
mov
iret
add
add
aad
push
aad
and
mov
sti
or
test
mov
insl
xchg
adc
cli
aaa
add
addr16
lea
push
adc
adc
and
sub
sub
scas
jl
sbb
xchg
mull
push
mov
mov
push
inc
andb
adc
arpl
add
add
ds
mov
nop
mov
ss
ljmp
pop
in
jbe
je
jg
mov
add
es
loopne
cmp
std
lods
in
mov
mov
sbb
push
loopne
andl
pop
pop
inc
hlt
push
inc
cmp
aad
push
pop
and
mov
mov
pop
sub
lret
and
cld
aam
ljmp
lret
pop
ja
lds
mov
ret
shl
sbb
loop
imul
adc
icebp
movsl
and
out
lret
loope
int3
cmp
cmpsb
in
test
adc
dec
mov
dec
adc
ret
cmp
les
loopne
pop
push
arpl
into
add
aad
cmp
xor
push
pop
int3
fsts
inc
adc
in
movl
jecxz
js
imul
add
nop
icebp
dec
dec
sub
jl
mov
nop
xor
stc
mov
stos
dec
in
loopne
sbb
addl
dec
rcll
repnz
or
pop
scas
fdivr
outsb
jge
shrb
insl
push
adc
sbb
inc
pop
rcr
shlb
mov
repz
inc
dec
add
out
xchg
dec
pop
mov
cmp
ja
jo
lock
sti
lods
js
ljmp
push
ror
fdivl
pop
mov
aam
sbb
jne
out
subl
lahf
inc
fucomi
add
pop
scas
pop
mov
movsb
and
mov
loopew
dec
adc
push
sbb
mov
xor
popa
and
loope
mov
ret
outsl
inc
jb
pop
mov
mov
fistpl
iret
mov
mov
mov
xchg
and
stos
ret
add
xchg
inc
enter
adc
mov
imul
and
cltd
shr
jp
mov
or
mov
int
stos
rcrl
addl
xchg
insl
mov
mov
je
into
xchg
fcoml
xchg
popa
scas
inc
enter
dec
mov
cmpsb
aad
js
mov
sbb
pusha
test
jmp
in
xor
add
fdivl
loopne
jbe
inc
jecxz
in
xlat
and
pop
es
popa
call
xor
pop
jg
popf
push
sub
dec
pop
out
sbb
cmp
jge
jge
jle
xor
loope
leave
rcll
mov
addl
mov
or
push
into
push
cwtl
pop
dec
fsubl
js
test
in
xor
add
in
sti
xlat
pushf
pop
rol
adc
fiadds
jecxz
mov
scas
mov
jg
dec
mov
cld
or
movsl
mov
inc
push
into
ja
rol
jecxz
mov
loope
addr16
xchg
scas
jmp
stos
sbb
inc
and
lods
lods
testb
ja
xor
or
jbe
push
inc
pop
outsb
add
shrl
mov
mov
pmaddwd
push
pop
adc
sub
arpl
xchg
mov
push
xchg
ljmp
test
xchg
inc
es
lea
fnstenv
lret
cld
aas
jb
test
mov
sub
sahf
xchg
shl
jl
push
push
inc
jnp
or
mov
rcrl
jne
push
mov
shl
aad
pop
pop
cmp
int3
xchg
and
out
cmp
cmp
jecxz
jo
in
or
stc
sti
vpandn
test
nop
daa
stc
imul
sub
push
mov
inc
jae
ds
out
mov
lock
in
popa
cmc
push
nop
cmp
fistps
sbb
inc
or
loop
xor
mov
jge
mov
std
jge
sbb
int
xor
subl
xchg
xor
xchg
or
push
cmp
mov
outsb
dec
or
jmp
shlb
into
iret
cmp
xchg
push
lods
lea
stc
push
and
testl
test
inc
lcall
jb
rorl
or
xor
push
pop
ror
fdiv
out
cwtl
das
xchg
and
cmp
cmc
sub
sbb
sbb
into
or
inc
or
xchg
test
in
loope
cmc
dec
test
push
movsl
pop
mov
or
lcall
jne
cmp
xchg
lcall
ds
mov
dec
popf
sbb
mov
lods
pop
lock
fnstsw
lret
pop
xchg
fcomps
add
sbb
insl
cmp
push
in
push
fdiv
xchg
lock
mov
mov
punpckhdq
daa
xchg
in
push
xchg
mov
repz
add
xchg
aad
repnz
mov
call
pop
mov
mov
sub
inc
fcoms
test
add
pusha
nop
adc
dec
in
leave
and
cmp
add
push
subl
mov
iret
fisubrs
pop
and
pop
je
loop
jle
lds
pop
shll
jp
adcb
notb
pop
roll
jg
mov
ss
data16
inc
mull
jb
mov
push
shll
repz
add
lret
jbe
and
or
sarb
push
ss
std
push
sti
mov
pop
std
xchg
scas
push
repz
xchg
push
mov
lcall
lret
nop
xor
lret
push
jo
shrl
mov
lea
xchg
fistpl
lret
push
adc
push
xor
xor
pop
adc
add
jnp
mov
cmpsl
out
sub
movl
sub
jmp
cmp
pop
loope
jecxz
testb
jp
add
xchg
and
inc
push
out
xor
mov
add
dec
mov
ja
adc
jae
add
mov
cld
gs
jmp
xchg
fidivs
mov
jno
stos
imul
test
mov
insb
mov
imul
and
arpl
outsl
les
std
out
outsl
cli
jge
sub
jg
or
loop
sub
mov
jge
fcmovbe
or
fs
lods
mov
dec
push
inc
repz
mov
rcrb
pop
gs
js
aad
jb
sbb
fistps
das
roll
mov
push
sbb
shlb
jmp
sub
stc
jo
cmc
shr
repz
jns
adc
dec
imul
into
idivb
ret
pop
xchg
adc
pop
push
fldl2t
js
test
fnstsw
sub
sbb
fiadds
push
lahf
call
mov
rcll
inc
jnp
push
or
inc
into
add
sbb
rcl
test
shlb
inc
cli
mov
dec
pop
sbb
cld
scas
loopne
loope
loopne
mov
jne
bound
fimuls
mov
nop
push
mov
pop
iret
or
mov
test
ficoml
xor
pop
and
inc
mov
sbb
cmp
cmp
test
xchg
jl
fsubr
movsl
cs
iret
jne
and
lret
sub
inc
std
imul
push
ss
outsl
or
xor
cmp
jbe
in
dec
dec
sbb
imul
pop
out
je
cmp
jecxz
mov
scas
jecxz
mov
add
mov
lret
pop
test
cmpsb
cmp
lcall
xor
cwtl
dec
aam
repz
gs
ret
xchg
popa
pop
mov
add
push
mov
cmp
out
push
xchg
mov
pop
jne
rcll
pop
pop
xor
jge
cmp
inc
push
rolb
xchg
imul
insb
push
mov
and
into
push
inc
arpl
out
lock
cmp
mov
imull
sbb
fidivs
outsb
sub
imul
sar
orl
call
push
cltd
nop
stos
stos
push
fwait
xchg
cmc
stos
xchg
jmp
cmpsl
pop
lret
out
incl
mov
push
pop
insb
jmp
mov
in
fs
jb
idivb
inc
aaa
mov
sti
xchg
sbb
add
jle
outsb
aad
outsl
mov
cmp
push
mov
pop
sub
test
fisttpl
xchg
enter
mov
jge
xchg
shr
dec
mov
jnp
mov
mov
addr16
jp
js
push
pop
push
outsl
rcll
add
aaa
xor
sbb
aam
add
into
gs
push
data16
xchg
xchg
or
mov
xchg
add
inc
mov
sbb
sti
jne
and
mov
xchg
add
xchg
mov
dec
inc
cmp
mov
push
in
sar
push
popf
sub
and
pop
xchg
pop
repnz
and
and
add
xor
xor
or
add
cmp
loopne
sub
scas
xchg
jecxz
rcr
push
lock
test
sbb
repz
or
jne
jle
jnp
lahf
div
insb
mov
leave
fisubs
ret
fnstsw
sahf
and
or
insb
jg
mov
xchg
mov
push
jmp
imul
scas
stc
insb
ss
stos
add
ret
push
inc
sbb
in
or
pop
mov
mov
pop
cmc
dec
push
and
pop
je
lcall
insb
mov
dec
pop
jae
or
adc
push
inc
data16
jb
or
pop
sub
cmc
sbb
or
pop
les
pop
mov
in
out
ljmp
hlt
leave
pusha
out
dec
loopne
or
scas
daa
add
mov
cmp
pop
mov
pop
push
movsl
push
lret
cld
jno
push
and
ficoms
aaa
shrl
jae
or
daa
pop
mov
adc
insl
rol
jne
sahf
inc
fstpl
push
lods
push
xor
dec
jno
inc
fidivs
lret
popl
into
adc
xor
aam
jo
mov
stos
mov
mov
push
xchg
sub
fucomp
test
imul
cmpl
jb
and
scas
lds
popa
cmp
push
ficoms
ds
inc
inc
fdivs
inc
add
fisubrl
ljmp
jl
mov
dec
xor
cmp
sub
dec
inc
xlat
scas
pop
cmc
and
int
frstor
inc
mov
push
out
fsave
xchg
add
imul
in
dec
xchg
sub
push
and
pop
cmc
sbb
test
sbb
arpl
dec
out
imul
popf
movsb
insl
add
xchg
outsb
add
and
popl
movsb
push
lods
fsubrs
arpl
icebp
mov
cmpsl
xsha256
cmpsb
aad
mov
fs
and
push
aaa
jmp
imul
test
fadds
jle
movsb
cmp
add
lahf
lock
loop
cmp
imul
lds
push
in
and
inc
je
js
jmp
mov
fsubrs
ret
aad
repnz
or
inc
stos
sub
xchg
jmp
std
sbb
test
insb
repz
das
sub
sbb
movsb
stos
cmp
fadd
js
repz
das
or
xchg
cmp
inc
fstpl
pop
sbb
sti
outsb
scas
rcrl
ljmp
out
or
mov
rclb
pop
scas
repnz
ss
adc
popf
cltd
ja
movsl
xchg
mov
sbb
out
imul
repnz
jle
mov
aad
mov
or
sub
aad
test
pop
mov
lea
cwtl
ljmp
mov
cs
insl
mov
cli
mov
roll
xor
aaa
inc
push
xor
sbb
sbb
mov
or
ss
pop
repnz
cmp
inc
push
daa
mov
or
leave
pusha
inc
push
jnp
test
movsl
cmp
mov
in
orl
cld
test
cmp
add
pop
pop
hlt
dec
dec
jns
jle
mov
or
sbb
dec
dec
loope
sbb
mov
rcll
push
in
inc
dec
add
adc
pop
not
add
dec
outsl
push
jp
nop
daa
sbb
sbbl
jb
sub
sbb
ja
ret
lcall
sbbl
arpl
mov
in
xor
mov
or
inc
fdivrl
outsb
test
lret
incl
dec
jecxz
aaa
into
pop
ja
add
mov
test
lds
xor
aaa
clc
mov
stos
inc
popa
inc
dec
loopne
mov
xchg
loope
xor
fdivl
test
bound
test
dec
loopne
xor
xchg
xor
push
dec
out
mov
dec
loop
inc
xchg
sub
sub
rcll
jp
jge
fbstp
stos
cmp
ficoml
xchg
sub
subl
insb
dec
jb
adcb
xchg
ret
popf
stos
inc
rclb
and
cwtl
fdivl
mov
pop
repz
jns
mov
rcr
xor
nop
dec
push
in
jp
je
mov
pop
hlt
fbld
pop
xchg
dec
xor
jp
mov
fcmovu
gs
icebp
xchg
dec
int
jnp
lret
scas
daa
mov
xchg
dec
lret
bound
leave
mov
int
loope
test
xchg
aaa
cmpsl
ds
mov
jle
fs
sub
xor
mov
imul
lcall
xlat
mov
push
inc
fwait
daa
add
mov
rclb
cmp
pop
sbbb
popa
cmp
xchg
sub
dec
jecxz
iret
loope
mov
cltd
xor
enter
sarl
call
data16
in
push
add
cmpl
std
shll
testl
cmpsl
dec
loopne
push
dec
loope
inc
mov
ja
loopne
ret
test
or
push
outsb
add
jle
clc
lret
scas
inc
pop
pusha
notl
orl
frstor
cltd
push
shrl
xchg
outsb
add
mov
jb
test
insl
lahf
mov
jo
push
aad
mov
mov
outsl
popf
xor
hlt
test
dec
ret
outsb
push
dec
aad
jle
or
jecxz
stos
inc
imull
stc
nop
pop
cmp
shlb
pop
xchg
pop
icebp
and
rcrb
and
lods
xor
gs
cli
xchg
jg
sbb
fisttpll
jb
xlat
mov
les
jge
imul
add
add
sbb
sbb
movsb
fxam
jl
jnp
lock
lret
sti
fmull
pop
push
or
mov
cld
filds
lcall
xchg
sub
not
push
out
sub
pop
sbb
pop
dec
enter
fdivs
or
adc
movsl
inc
rorb
add
ss
sbb
int3
cmp
push
popf
add
sbb
rorb
outsb
add
or
and
les
fstpt
pop
lcall
xchg
inc
xlat
enter
stc
push
cmp
andb
pop
push
pushf
je
ror
clc
decl
mov
push
movsb
dec
jecxz
iret
lods
inc
incb
add
loop
pop
lods
js
loope
jl
idivl
sbb
push
inc
fldenv
sub
lock
insl
adc
pop
shlb
in
jg
mov
stos
loope
jo
arpl
pop
cmc
cmp
sub
mov
push
out
lods
je
fisubl
xchg
xor
stos
push
jp
mov
dec
loope
lods
sub
dec
cli
inc
pop
sub
mov
ret
and
cmc
pushf
add
into
push
ret
out
lcall
inc
ds
jae
jecxz
ljmp
mov
mov
adc
sub
mov
stc
nop
rorb
idivl
loope
mov
pusha
pusha
notl
mov
sbb
mov
fstl
cmpsl
or
xchg
sbb
pop
cmpsl
in
add
jle
jecxz
cli
fwait
xor
rcl
in
add
loopne
and
push
movsb
jp
jbe
pop
test
pop
cs
testl
jl
xchg
sub
shlb
jns
cmc
and
repnz
mov
jne
pop
scas
inc
xchg
push
enter
xchg
in
inc
fstpl
mov
adc
aas
mov
mov
mov
jbe
sbb
push
outsl
mov
jo
arpl
jle
sbb
jno
scas
mov
jge
out
mov
daa
cmpsl
pop
jecxz
inc
jns
mov
add
pop
leave
inc
ret
filds
mov
scas
je
mov
mov
test
dec
sub
pop
inc
imul
inc
or
mov
addr16
outsb
inc
andl
outsl
imul
das
mov
lods
imul
iret
mov
adc
jb
fistpl
repz
popf
sbb
sbb
int3
dec
jo
fwait
fwait
xor
shlb
push
jmp
and
pop
in
and
mov
movsl
cmp
pop
movsb
dec
xchg
mov
dec
dec
fistpll
pushf
nop
or
dec
les
mov
stc
sbb
xor
jmp
les
lret
dec
inc
int
divb
in
ficoms
lahf
sub
orl
sbb
shrl
ds
push
dec
ret
mov
loop
cmp
jl
jecxz
test
or
ljmp
aam
addl
and
addr16
cmp
cmp
xchg
push
xchg
sbb
fisttpl
int
fisubs
fdivl
ror
push
icebp
push
inc
mov
dec
pop
ret
cmp
leave
inc
mov
negl
aam
dec
filds
inc
into
jno
mov
fcoml
xchg
mov
fwait
js
or
dec
mov
push
imul
jp
aaa
jmp
sub
add
sti
xor
jmp
push
add
xchg
cmpsl
pop
adc
cmp
pop
pop
shrb
data16
lret
xor
ja
xchg
mov
bound
ret
pop
ret
sahf
mov
ja
sahf
lea
into
add
jmp
push
aad
inc
mov
icebp
sub
jge
mov
fwait
sbb
add
sahf
icebp
lea
ljmp
and
outsl
and
jg
or
jnp
pop
rcrb
xor
cltd
fs
lock
push
movsb
cmp
lock
cmp
cld
and
lret
addr16
adc
je
sub
movsl
and
movsb
rol
jge
out
ja
mov
icebp
dec
mov
js
dec
sar
cmp
lock
push
or
aaa
mov
dec
sub
adc
dec
adc
jmp
cmp
pop
leave
inc
cmp
mov
sbb
push
adc
fldcw
fisttps
into
inc
add
nop
xchg
shl
ffreep
sub
mov
fdivp
add
push
sbb
lea
xchg
sbb
sub
sahf
and
add
sub
dec
loopne
pop
push
enter
xlat
outsb
pop
xor
das
loope
ljmp
dec
jge
aas
adc
movsl
xor
mov
stc
and
add
dec
test
nop
jnp
jecxz
fs
or
inc
jp
cltd
mov
sub
mov
or
xchg
pop
in
outsb
xchg
jp
les
dec
dec
out
jecxz
dec
test
out
jbe,pt
pop
clc
insl
mov
pop
out
pusha
test
push
shll
jmp
nop
mov
xor
cmp
je
cli
ss
fidivl
xchg
call
jne
sahf
cld
and
mov
fbld
xlat
sub
pop
icebp
out
add
mov
dec
add
in
mov
lods
fidivrl
cmpl
pop
aam
xchg
jne
out
inc
stos
mov
rorl
jecxz
xlat
mov
add
or
out
loopne
icebp
popf
sahf
xor
adc
rcll
jbe
movsb
loopne
inc
shl
in
enter
repz
or
mov
mov
scas
pop
ljmp
push
cmp
cmp
and
inc
xchg
pop
or
or
push
xchg
icebp
sahf
xor
inc
and
popa
cmpsl
sgdtl
cwtl
fsubrs
das
xor
int
pop
mov
mov
pop
mov
mov
mov
dec
testl
lcall
push
jnp
loope
pop
pushf
mov
insl
xchg
mov
inc
xchg
cs
outsl
xchg
js
je
mov
pusha
movsb
pop
jns,pt
adc
insb
iret
fisttpll
sub
push
enter
cmp
mov
les
push
data16
pusha
popa
xlat
sarl
adcl
dec
or
pop
dec
push
stc
xor
mov
into
pop
es
push
sbb
sub
lds
sbb
int3
cmp
repz
jle
adc
div
sbb
pusha
out
rolb
std
xlat
jns
jb
les
leave
iret
shlb
fnstcw
fsts
andl
adc
addb
fdivl
mov
in
mov
cli
out
movl
add
daa
int
xor
gs
cmp
xlat
dec
add
xor
xchg
lea
inc
fldcw
push
adc
pop
xchg
mov
das
xor
jb
xor
pop
addl
sbb
mov
mov
push
pop
imul
outsb
sbb
mov
cmp
sub
adc
outsb
mov
ja
aad
insl
mov
outsb
scas
daa
cmp
xor
or
and
inc
ja
hlt
inc
push
xor
movsl
data16
pushf
mov
out
inc
adc
mov
or
inc
xchg
mov
pushf
js
xor
shlb
sub
cmp
mov
out
and
mov
out
adc
gs
jbe
imul
xor
xor
xchg
cmpb
notl
popf
rcrl
cmp
cld
pop
sahf
mov
or
test
je
xchg
sub
iret
inc
xchg
adc
xchg
out
inc
jl
in
xor
ss
outsl
mov
mov
xor
mov
popf
subb
xchg
cmp
mov
and
das
movb
and
sahf
pop
xchg
push
or
andl
or
sbb
xchg
mov
xchg
adc
hlt
and
dec
mov
cmp
insb
cmp
dec
xchg
fistl
inc
aaa
fcompl
push
mov
sub
mov
fimuls
pop
sbb
xchg
iret
mov
fistps
adc
inc
pop
mov
mov
sub
outsl
mov
xchg
jl
into
fs
imul
xor
jp
mov
lock
xor
and
js
std
inc
jo
jne
push
adc
sub
jl
in
jg
out
sbb
ds
inc
lea
cltd
inc
or
out
add
outsb
xchg
out
fistpll
fchs
ljmp
loop
js
or
mov
ret
xchg
jne
ja
and
insb
mov
imul
inc
leave
jge
push
scas
out
sub
jne
push
stc
xor
cs
lahf
xor
mov
push
add
sbb
xchg
mov
stos
repz
inc
mov
sbb
call
and
addb
jnp
pop
int3
xchg
fistl
mov
out
data16
pop
and
addr16
jg
dec
mov
popa
out
fmull
lds
jl
push
sub
jecxz
sub
push
adc
or
push
jle
les
lahf
rcrb
iret
xchg
stc
ss
xor
loopne
inc
mov
stc
push
inc
outsl
fidivs
dec
loop
popa
push
pushf
xor
addb
sub
push
fcomps
imul
mov
repnz
shll
inc
mov
inc
add
test
mov
pusha
icebp
cs
test
sbb
cmc
cltd
fdivs
pop
jne
test
out
aam
mov
and
adc
sbb
dec
mov
sbb
loope
in
xorl
aas
mov
add
jle
outsb
mov
out
imul
inc
dec
rorl
shrb
ds
insb
add
jbe
out
orl
int
push
mov
sbb
bound
and
push
sbb
pop
imul
pop
pop
mov
dec
repnz
mov
data16
sub
test
sti
jnp
fiadds
hlt
daa
into
xchg
repnz
dec
mov
shlb
into
pop
add
xor
out
xor
cmp
xor
adc
jle
fs
stc
and
and
andb
push
lret
mov
fnsave
fsts
jmp
lods
test
push
dec
mov
inc
xchg
imul
cmc
ss
lcall
test
push
mov
lret
inc
pop
lds
add
mov
fbstp
jno
xchg
movsb
cmp
or
jge
cmc
xor
ljmp
sbb
mov
mov
mov
fwait
movsl
into
scas
pusha
rorb
xchg
loopne
xchg
mov
add
push
cmpsl
sub
ljmp
cwtl
repz
bound
notl
jae
ret
in
fidivs
aam
loope
lea
add
or
or
pop
shrl
lahf
sub
mov
mov
popa
in
fmul
xor
pop
jl
and
mov
mov
imul
add
out
out
mov
mov
sbb
test
xor
aas
pop
xor
mov
cmpsb
cmp
or
in
xor
xor
imul
pop
lret
or
push
das
adc
jle
lods
cmp
dec
jecxz
pushf
gs
or
sarl
pop
subb
pop
aam
popa
mov
mov
fisubrs
icebp
lock
stc
les
pushl
push
dec
shll
or
shlb
rorb
add
repnz
mov
int3
icebp
sbbl
mov
hlt
mov
cmp
insb
add
popa
rcr
aas
ljmp
nop
pop
inc
movsl
arpl
sub
mov
lcall
icebp
js
rclb
pop
jmp
pop
rcr
cmp
shl
xchg
mov
adc
mov
in
call
fbstp
jns
mov
test
out
mov
fisttpl
lahf
test
js
test
lret
lock
jg
adc
lock
or
mov
sub
outsl
sbbl
scas
pmaxub
lret
mov
in
scas
mov
arpl
jmp
subb
dec
repz
scas
inc
mov
cli
mov
xor
push
mov
jmp
pusha
cmpsb
test
cmpsl
gs
jl
fimuls
dec
shrl
iret
inc
fimull
cmpsl
jbe
xchg
mov
call
insl
stos
imul
mov
sub
andl
leave
cmp
ret
xchg
xchg
sbb
cltd
dec
sub
xchg
iret
sub
pop
mov
outsb
and
cmp
pop
lret
fmull
inc
mov
xor
mov
aas
std
test
pop
fiadds
lds
dec
dec
lret
mov
mov
cwtl
xchg
adc
sbbb
ss
addb
mov
lds
dec
rcll
adc
lds
mov
jne
stos
xchg
inc
es
mov
repz
push
sub
scas
std
lahf
test
shrb
js
les
pop
lahf
fistl
pushf
in
xchg
jle
mov
cwtl
add
xchg
sub
and
repnz
jmp
pop
mov
repz
jecxz
jmp
mov
rorb
lcall
cmp
pop
out
lret
insl
push
fists
pop
rcrl
gs
mov
test
jecxz
lds
inc
addr16
xor
dec
data16
push
jecxz
test
inc
adc
stc
push
cwtl
mov
mov
push
mov
pop
call
mov
mov
push
in
mov
fidivrl
mov
pop
bound
jp
jno
xor
push
iret
shrl
iret
gs
sub
int3
fdivl
fcmovne
test
xchg
or
aas
icebp
lret
fwait
adc
xorb
negl
inc
xchg
testl
jl
add
xchg
sub
mov
outsb
or
idivb
lcall
lods
xchg
jnp
das
add
dec
xchg
mov
push
pop
mov
cmpsl
lcall
mov
jbe
aaa
push
mov
inc
ljmp
shlb
push
inc
into
push
aad
mov
dec
shll
stos
add
pop
hlt
inc
clc
xchg
push
mov
mov
ljmp
or
mov
les
add
test
repz
ficomps
inc
sarl
add
sub
ficompl
rclb
mov
enter
mov
clc
sbb
lds
and
or
jg
pop
aas
or
cmpl
jbe
pop
sbb
cmp
jns
xor
loopne
gs
inc
xor
repnz
dec
lods
outsl
outsl
icebp
pop
adc
xchg
in
call
jle
in
jnp
leave
or
push
xchg
fsubrl
pop
mov
aad
adc
test
popf
andb
mov
adc
je
std
inc
mov
push
mov
rclb
je
loop
xchg
lods
inc
adc
in
ja
push
jbe
cmp
jle
add
sbb
push
or
mov
jmp
mov
adc
in
xorl
cmp
jae
es
addl
push
mov
xor
insl
and
dec
xchg
sbb
and
push
shrb
je
ljmp
push
movsl
sbb
cld
sub
cltd
jl
push
aad
pop
xlat
outsb
gs
lahf
mov
cmc
daa
lds
or
jecxz
aam
cmp
ret
cmp
add
aam
sub
dec
insb
jp
inc
pop
and
push
int3
add
rorl
lea
ficompl
cli
xchg
jl
xchg
xor
lds
inc
into
scas
jno
or
cs
jecxz
orb
sub
jmp
mov
and
add
paddd
cld
adc
loopne
repnz
les
stos
cmc
mov
aas
in
or
adc
les
pushf
push
ficomps
lock
pop
add
clc
mov
mov
lods
sahf
mov
dec
dec
mov
addr16
pop
aas
mov
xlat
push
jns
hlt
inc
pushf
sub
out
cltd
pop
sahf
sub
push
rcrl
pop
mov
dec
nop
push
out
xlat
imul
in
push
shll
scas
comiss
shlb
pop
ljmp
pop
adc
imul
lret
int3
or
rcr
add
lock
jge
leave
movhlps
and
out
repnz
popf
xchg
adc
xchg
jnp
and
test
in
aaa
clc
mov
je
ds
stos
subl
sbb
cmp
aas
call
xchg
cmp
xchg
inc
ret
int
aas
insl
sub
jae
pop
cwtl
mov
mov
mov
in
imul
sub
movsl
mov
fnstsw
xor
jno
ss
pop
fs
cmp
sbb
inc
ret
fdivl
sub
cmp
mov
ljmp
xor
adc
bound
sahf
xchg
jns
cmp
mov
js
test
cld
push
mov
add
push
iret
and
sbb
fdivp
int
pop
repz
or
les
ds
mov
fiadds
xor
adc
dec
add
ss
mov
pop
mov
mov
pop
push
push
int
lcall
pop
cwtl
out
and
pop
xchg
sahf
push
or
mov
enter
cwtl
xchg
or
aaa
inc
popf
jle
iret
pusha
lret
lock
lret
pop
cld
sub
lret
int3
dec
shrb
je
loope
dec
in
mov
inc
leave
cld
cmpsb
pop
leave
enter
ljmp
je
cmpsb
xor
stos
fnstenv
int
mov
rorb
mov
cmpsl
ljmp
jmp
xchg
mov
fisubrl
push
xchg
shll
fsubr
push
mov
loop
cmp
cmp
push
push
lods
outsb
push
add
pop
sarb
xor
sub
bound
pop
and
bound
jae
dec
cmp
xchg
lea
push
imul
dec
pop
repz
iret
pop
iret
mov
push
inc
xchg
lods
inc
jo
push
mov
loop
dec
mov
cltd
push
cmpsl
push
mov
jne
and
test
push
outsl
cwtl
filds
jne
test
xchg
rorb
stos
mov
fwait
sbb
pop
mov
cmpsb
sbb
movl
cmp
in
cmp
mull
sbb
or
jns
sub
cmc
dec
mov
jo
mov
dec
add
cwtl
mov
add
xchg
and
mov
or
lods
cmp
pop
sbbb
fisttpll
push
lds
sub
inc
nop
popa
cltd
xor
mov
xorl
sbb
hlt
mov
pop
sub
scas
dec
dec
adc
dec
test
jnp
idivb
pushf
mov
and
add
test
clc
sub
mov
loope
nop
rcr
push
out
xchg
mov
scas
jno
decb
shrl
loop
out
aam
std
sub
fldt
shl
jbe
shlb
out
lahf
fs
and
push
out
inc
es
insl
sbb
movsl
pop
and
pop
jmp
add
dec
inc
fnstsw
xor
or
into
inc
sub
mov
cmp
push
xor
aaa
jg
ret
inc
pop
push
or
bound
jno
xor
inc
mov
ds
lods
dec
adc
nop
xchg
sbb
out
iret
lcall
out
pop
rorb
lcall
xor
movsb
cmp
and
sub
xor
xchg
lret
in
ret
ret
cmp
leave
sbb
popf
lahf
rcrb
adc
pop
xor
xchg
lods
push
in
or
cmc
daa
lods
xchg
mov
imul
inc
fcomp
sbb
jge
mov
lahf
xchg
or
sbb
stos
xchg
enter
ja
pop
inc
ficoms
push
into
push
sub
mov
xchg
sub
xor
lods
lea
xor
dec
shr
gs
mov
mov
dec
jecxz
pushw
adc
and
das
xor
and
or
das
mov
les
xchg
mov
test
imul
fcoml
mov
leave
imull
fimuls
cld
jnp
out
mov
add
sbb
fstpl
push
aaa
add
inc
enter
inc
int3
inc
dec
mov
test
xorb
outsb
mov
popf
mov
pop
adc
sbbl
ss
mov
or
mov
cmc
sbb
jecxz
cmp
in
fdivl
lret
inc
int
ss
inc
and
push
mov
das
cltd
shrb
arpl
inc
jg
push
push
pop
mov
add
mov
xor
push
leave
jg
cmpsl
jge
cs
les
push
lret
or
aaa
mov
aas
sbb
xor
clc
sub
in
cmp
imul
imull
jle
and
rcrl
sub
faddl
adc
mov
xor
push
mov
inc
or
adc
pop
pusha
loop
ds
ds
icebp
xor
jnp
out
jb
mov
fstpt
jl
dec
sub
mov
pop
and
jnp
mov
or
jno
imul
adcb
outsb
xchg
cmp
data16
xchg
test
sub
xor
xchg
outsb
cmp
xor
roll
or
hlt
pop
into
inc
sar
and
aaa
xor
mov
inc
mov
enter
mov
mov
mov
sub
test
and
jle
imul
mov
mov
fmul
push
jmp
call
push
xchg
jnp
or
add
inc
shlb
out
mov
mov
loopne
push
in
jbe
fisttpl
cmp
test
ret
adc
jg
sbb
leave
xor
js
out
orl
fs
push
jno
xchg
dec
jne
jg
inc
jg
mov
imul
or
mov
pushl
jns
fs
mov
sbb
xchg
inc
mov
insl
fists
pop
orl
mov
push
sub
sbb
mov
in
sti
sub
inc
stos
inc
jne
rorl
xchg
mov
sub
sub
dec
pop
out
push
pop
addl
dec
dec
dec
shlb
inc
mov
ja
adcb
es
cmpsl
mov
in
pop
mov
out
and
mov
xor
out
and
or
mov
sbb
cld
xchg
inc
outsl
jns
mov
ret
hlt
mov
iret
call
or
cmp
imul
repnz
scas
xchg
sub
push
adc
xor
xchg
push
shlb
mov
in
cmpsl
out
test
add
add
cli
or
sub
and
stos
test
fstpl
pop
xor
data16
and
jnp
inc
test
xor
xchg
inc
fld
cli
das
sub
dec
in
dec
push
out
jle
mov
popf
push
in
into
nop
cmp
shr
adc
jecxz
cld
adc
cwtl
das
xor
push
mov
mov
lock
test
xsha1
cmpsb
dec
cld
lock
leave
outsl
ret
enter
arpl
jo
lods
outsb
add
call
or
lods
inc
and
shll
iret
data16
sbb
enter
inc
pop
mov
in
stos
jecxz
fnstsw
mov
xor
add
push
stos
addl
adc
mov
fwait
xchg
inc
fwait
lret
andb
mov
and
or
pop
mov
negb
add
dec
cld
xchg
jle
mov
stos
ds
pop
ljmp
xor
cmp
shl
xchg
sub
repnz
adc
inc
iret
adc
das
add
hlt
into
add
fiaddl
or
mov
push
mov
ja
dec
sbb
iret
inc
lea
scas
std
inc
cwtl
mov
dec
pop
push
xor
push
mov
test
add
lret
sbb
dec
repnz
stos
in
test
arpl
jo
inc
clc
mov
xor
scas
jecxz
push
inc
add
mov
ds
or
and
bound
inc
lcall
clc
dec
aad
or
popa
popa
mov
inc
xchg
xchg
push
lods
bound
sub
fists
adcb
inc
add
pop
pop
movsl
loope
ficompl
jge
outsl
jmp
fldcw
scas
loope
incl
loop
mov
popa
outsb
lret
sbb
push
imul
aaa
jno
data16
add
xchg
xchg
xchg
and
lretw
mov
xor
leave
adc
cvttps2pi
jmp
and
jbe
mov
lcall
cmpl
mov
nop
fisubs
std
or
cmp
push
mov
sbb
jmp
hlt
sbb
aam
mov
outsb
xchg
xchg
repnz
ljmp
scas
outsl
pushl
pop
les
bound
cli
add
rclb
ret
mov
cmp
pop
adc
cwtl
out
mov
int
cmp
sbb
xor
stos
rcl
scas
mov
das
push
jmp
jo
rcll
call
dec
loope
rcl
mov
sub
mov
stc
xchg
push
enter
jnp
fwait
sub
xchg
imul
ljmp
orb
into
sahf
leave
pop
clc
sbb
lret
mov
aaa
or
pop
ja
xchg
push
sub
mov
out
push
out
cld
xchg
jae
daa
cmp
lret
mov
and
xchg
fbstp
cwtl
mul
bound
push
bnd
jb
xor
hlt
jns
ret
clc
test
arpl
xchg
repz
dec
jne
inc
jnp
sahf
sbb
mov
fimull
push
bnd
test
and
jne
in
orl
or
aam
stc
nop
or
push
lds
scas
shll
scas
inc
mov
pop
mov
ja
repnz
jmp
loop
add
cmc
orl
xchg
pop
or
insb
add
jo
sbb
push
in
das
mov
mov
aaa
ret
fsts
push
jmp
out
adcb
mov
cli
mov
pop
cld
pushf
test
push
movsb
and
add
add
or
aam
adc
ret
mov
aad
cltd
inc
xlat
or
pop
or
xor
enter
dec
jmp
addr16
mov
jl
call
icebp
lret
sub
push
imul
test
sbb
cmpsb
dec
mov
mov
lret
repnz
sbb
mov
stos
movsl
mov
push
sub
out
jl
xchg
fs
cmp
ret
xchg
inc
adc
xchg
and
fwait
leave
mov
push
lods
pop
out
std
mov
iret
mov
adc
push
xlat
ret
and
push
sub
mov
leave
mov
cltd
sbb
push
pop
xor
or
outsb
dec
push
xor
hlt
pop
pop
and
in
inc
or
repz
xchg
add
nop
out
ror
xchg
pusha
add
je
jb
lahf
xor
insl
dec
iret
imul
pop
aaa
xor
push
into
test
test
fwait
sub
mov
test
sub
push
enter
mov
lcall
jecxz
cmpsb
mov
mov
dec
clc
popa
push
lret
call
sti
push
rcrl
lret
arpl
mov
clc
popa
pop
fiadds
mov
push
aam
test
add
cmpsl
mov
lods
cwtl
dec
stc
popa
push
int3
dec
adc
xchg
lahf
das
pop
add
cmpsl
cmp
pushf
mov
pushf
sahf
sar
popa
outsb
into
jmp
jle
mov
lahf
mov
fdivrl
adc
pushf
nop
aaa
ret
lds
fcmovne
jo
out
out
jno
hlt
out
lcall
mull
mov
xchg
int3
dec
adc
call
inc
xchg
test
imul
adc
mov
push
dec
fdivrl
lret
adc
flds
or
out
mov
stos
ss
xchg
ds
push
pop
push
sub
push
mov
mov
mov
stc
data16
stos
xor
jg
mov
ss
dec
lret
pop
mov
stos
jno
xchg
add
xchg
ds
pop
push
sarl
std
movsl
add
jo
rcrb
push
push
test
fstsw
mov
pop
outsl
out
les
lea
cli
pop
fistpl
push
in
add
and
pop
mov
loope
push
add
sti
popa
out
and
dec
dec
cmp
aas
xchg
call
jmp
pop
stos
sub
sahf
bnd
mov
xchg
mov
shlb
push
orl
pop
or
in
sub
adc
lods
cs
inc
test
push
xor
lea
sub
bound
mov
xchg
div
lods
cmpsb
out
jno
stos
mov
add
dec
xchg
icebp
bound
or
insb
aaa
inc
push
cmc
ja
sub
adc
push
test
dec
lea
into
icebp
popa
int3
sub
xchg
sahf
lods
sub
test
stos
and
aas
lea
fcomip
bound
sub
push
popa
lods
sub
int3
stos
sbb
push
ja
mov
hlt
pop
push
xchg
ja
dec
xor
sub
ss
in
push
leave
mov
cld
push
xor
sub
lds
loope
xchg
push
push
rclb
bswap
mov
and
mov
xchg
lods
or
or
or
pushf
repz
mov
lock
cmp
cs
je
ljmp
xchg
aas
pusha
dec
or
leave
lea
jns
aad
inc
in
push
popa
jo
data16
lods
sub
inc
adc
sbb
lock
stc
adcb
insl
ljmp
lods
sub
xchg
inc
imul
lahf
lock
dec
int
add
enter
mov
jno
jge
stos
sub
arpl
dec
sti
into
mov
scas
mov
sub
call
cmc
dec
stos
sub
jmp
pop
push
add
xor
insl
add
loop
mov
push
xor
std
mov
cmp
addr16
insl
push
jl
mov
fmul
and
jnp
js
dec
push
inc
adc
sub
outsb
sarb
adcb
fwait
cmp
inc
inc
adc
inc
jg
rcrl
xor
dec
dec
mov
rcrl
xchg
lcall
dec
push
jecxz
mov
push
lcall
dec
pop
iret
int
test
adc
cmp
dec
inc
fdivrl
dec
in
sub
cli
pop
sahf
mov
dec
les
lock
pop
jl
cmp
mov
jbe
push
lods
xor
mov
jb
movsl
pop
fwait
dec
adc
mov
jnp
mov
dec
adc
inc
adc
and
mov
cmp
pop
jbe
les
dec
adc
pop
mov
adc
addr16
adc
sarb
jp
fsub
and
xor
push
inc
and
cltd
sub
je
sub
sub
jns
shlb
out
je
jne
dec
std
xchg
cmp
cltd
sub
outsl
xchg
lods
imul
hlt
jp
shl
out
aam
testb
mov
sub
in
sbb
je
ja
shrb
sbb
orb
lods
dec
sub
push
call
pop
add
or
fstpt
adc
or
loop
inc
daa
stos
jnp
insl
lock
jo
or
fcmovnb
mov
test
in
mov
mov
out
jno
jb
mov
nop
pop
lcall
les
mov
lock
push
or
negl
adc
jp
mov
pop
sub
cmp
test
sarb
cli
data16
outsl
icebp
lcall
nop
dec
xchg
mov
repnz
jge
ja
call
dec
test
test
int
push
mov
adc
xchg
mov
mov
xchg
cli
and
leave
dec
cmp
mov
stc
mov
cmp
cwtl
sbb
xchg
and
dec
pop
cmp
test
cmc
and
mov
mov
movsb
xor
stc
mov
test
fwait
mov
aad
loope
fsubrs
xchg
mov
jg
rclb
in
cld
pop
dec
sbb
stos
sbb
xor
xor
lcall
push
add
inc
adc
mov
push
jecxz
iret
rolb
and
adc
and
into
mov
xchg
inc
adc
jnp
dec
and
rcrb
loop
and
aas
adc
push
jne
add
mov
lahf
cmp
adc
into
fwait
stc
roll
mov
push
pop
bound
or
xor
scas
int3
test
test
adc
mov
gs
fcomps
lcall
xchg
fbstp
inc
cs
dec
mov
pop
sti
cs
pop
xor
andb
adc
cmp
bound
fwait
xor
nop
mov
into
push
rorl
addr16
mov
jl
or
inc
push
adc
js
lcall
pop
mov
stc
cltd
insb
mov
jmp
jo
aaa
jbe
in
movsl
arpl
or
fidivs
in
ficomps
lea
into
lea
rorb
xchg
in
imull
sti
pop
jb
and
sbb
add
fidivs
pop
mov
sbb
movsb
cmp
mov
jne
scas
lds
mov
push
sti
mov
pop
add
dec
cmp
push
jo
insl
jge
inc
or
fldl
jbe
push
cld
adc
sbb
inc
mov
out
xor
sarl
ficoms
outsb
out
lea
fisttps
adc
xor
insb
hlt
nop
and
movl
push
dec
adc
inc
in
adc
movb
fstl
push
mov
mov
fisttpl
mov
mov
sub
push
divl
pop
add
and
mov
push
gs
ljmp
or
movsb
sub
test
pop
add
mov
jnp
ss
repnz
or
pop
out
cmp
xchg
cmp
das
mov
xor
out
fsts
leave
dec
fs
or
push
rorb
pop
mov
inc
adc
push
aam
imul
nop
inc
out
adc
mov
push
dec
xor
dec
mov
repnz
xchg
pop
stc
imul
mov
aad
mov
xor
je
cmp
mov
mov
pop
cwtl
fistpll
test
je
push
in
addr16
test
add
imul
in
sbb
lcall
imul
fs
jo
push
data16
js
jp
aaa
cmc
int3
pop
cli
jmp
adc
idivb
pop
decl
popf
inc
or
pop
mov
pop
das
mov
daa
mov
test
jmp
push
dec
mov
mov
pop
jae
mov
rcrl
mov
std
pop
xchg
loopne
out
aam
push
das
cld
pop
shl
mov
mov
aaa
mov
js
and
mov
stos
in
jb
jb
sub
stos
xchg
cmp
and
mov
xor
ret
fistpll
dec
cmp
pop
push
mov
into
inc
mov
fldcw
adc
push
inc
ss
push
lahf
loop
loopne
ret
aad
call
divb
data16
and
pop
mov
pop
pop
pushl
add
in
fildl
or
stc
pop
pop
add
in
pop
mov
sbb
dec
sarl
inc
adc
mov
cwtl
add
and
ret
pop
es
call
adc
mov
push
mov
or
lea
jmp
insl
in
cmp
xor
mov
mov
pop
sbbb
nop
popf
loopne
jp
ret
mov
mov
mov
subb
repnz
adc
add
pop
inc
pusha
jmp
in
jno
outsb
xor
int
fsubs
orl
cmp
mov
mov
jbe
popa
cmp
loopne
pop
roll
aaa
in
stos
xor
repz
ja
sbb
mov
jl
aad
add
mov
test
adc
mov
dec
or
jns
inc
ficompl
fcomps
add
frstor
mov
xor
outsl
jecxz
mov
ret
mov
das
dec
out
jne
inc
repz
movsl
jbe
mov
cmc
es
std
mov
scas
push
es
jp
nop
cmp
push
lret
inc
dec
insb
out
lods
cltd
mov
pushf
test
mov
fxch
sti
mov
push
popf
mov
jmp
pop
fnstcw
xchg
cli
pusha
mov
mov
mov
mov
adc
dec
sarl
testl
xor
mov
inc
lea
std
pop
mov
push
or
dec
mov
mov
mov
sbb
xor
repnz
cwtl
ret
pop
testl
cltd
ds
jbe
sti
cltd
adc
sti
mov
stos
sub
lods
xor
pop
out
pop
std
mov
mov
call
jmp
xchg
pop
std
mov
shlb
mov
push
cmp
mov
fs
pop
dec
out
or
xchg
cmp
sub
sub
je
cmp
mov
fsubrs
add
mov
pop
insl
cs
dec
pop
add
sbb
mov
arpl
adc
in
mov
in
repz
xchg
inc
jmp
repnz
or
xchg
leave
mov
cmp
mov
mov
xchg
inc
roll
push
and
inc
adc
sub
jge
cvtps2pd
mov
sbb
test
lea
leave
in
out
sub
or
pushf
adcb
xlat
xorl
cmp
dec
fcoms
cmpsl
xchg
xchg
inc
test
mov
insb
ljmp
cld
pop
xchg
das
push
enter
push
dec
out
sbb
or
js
mov
stos
outsb
hlt
cld
pop
int3
xchg
push
icebp
enter
adc
mov
scas
dec
push
xchg
js
out
mov
jle
ja
push
outsl
adc
dec
push
mov
dec
test
pop
dec
xor
cmpsl
xchg
xchg
imul
sarb
fnstsw
adc
addr16
xchg
mov
cmp
inc
test
xchg
xchg
ret
xchg
jae
leave
stc
pop
add
sbb
mov
mov
mov
or
pop
add
and
test
add
bound
sub
arpl
push
sarb
loop
xchg
sub
nop
push
ret
or
sbb
mov
inc
test
mov
jmp
dec
pop
repz
cli
out
je
cmpsl
sti
and
cmp
shrb
fwait
lods
adc
mov
rol
mov
or
fwait
inc
adc
sub
inc
mov
andb
lods
cs
push
add
pop
idivl
xchg
xchg
fisttpll
mov
rcrb
dec
jg
push
negl
lcall
lods
loope
pop
adc
dec
adc
inc
in
cmc
and
jo
in
outsb
ljmp
dec
inc
jl
aad
xchg
fidivrl
fdivrs
call
sub
jns
xchg
cmp
imul
ds
xorb
jmp
jnp
jo
mov
mov
adc
out
loop
push
lret
out
add
jb
pushf
push
ret
ror
repz
mov
scas
xchg
cmp
and
mov
pop
loop
xchg
nop
jecxz
das
sub
in
cmp
dec
add
mov
dec
shl
mov
dec
insb
add
cmp
and
lcall
push
shlb
pop
sbbl
jno
out
mov
mov
cmp
ret
xchg
jecxz
or
mov
dec
and
xor
jl
jbe
xchg
fsubs
loope
push
sti
fs
xchg
rsqrtps
dec
xchg
or
pop
mov
in
jb
in
outsl
loop
xor
mov
mov
or
inc
or
jl
lahf
roll
dec
outsb
fnstsw
xchg
cmc
bound
sar
mov
test
push
or
insb
mov
out
jbe
push
sahf
inc
and
icebp
cmp
cmp
iret
subb
lcall
lahf
mov
fldl
adc
adc
lret
pop
mov
xchg
inc
push
mov
stos
sub
pusha
push
add
stc
xchg
inc
push
sub
stos
nop
inc
fadd
mov
test
bound
xchg
or
mov
icebp
mov
dec
ret
mov
jns
ret
bound
ret
daa
jbe
sbb
test
call
push
or
dec
inc
cmpsl
sub
enter
call
fiadds
cmc
jl
pushf
cmp
int
test
outsb
in
cmp
ljmp
dec
fnstsw
xor
or
pop
clc
das
es
int
cmp
andl
mov
cmp
adc
dec
es
or
cld
mov
shl
sahf
js
rorl
fcoms
dec
mov
shlb
test
xchg
ds
mov
pop
push
fisubs
icebp
pop
sub
inc
pop
push
cmp
xchg
call
mov
pop
push
add
lds
jmp
test
xchg
xor
add
pushf
cmp
cmp
sbb
jg
cmc
jmp
popf
faddl
in
push
cmp
fcom
adc
dec
enter
lcall
push
dec
stc
gs
je
test
mov
adc
dec
or
pop
call
pop
cmp
and
pusha
icebp
enter
jns
in
outsb
pop
sub
pop
jge
fsubrs
mov
sub
inc
and
xor
cmpsb
or
icebp
or
sbb
sarl
dec
xor
aas
xor
xor
daa
std
gs
out
or
ljmp
cs
pop
lret
xchg
jo
xchg
cmp
mov
mov
sbb
mov
mov
mov
mov
mov
and
sbb
roll
or
out
jne
and
pop
into
xor
clc
roll
repz
fwait
inc
repnz
cmc
out
in
dec
mov
stos
mov
sub
cmpsl
push
mov
pushf
fisubrs
jl
sub
mov
cmp
aaa
scas
aad
xor
mov
jg
std
outsb
jmp
push
orb
repz
jle
inc
fs
xor
stos
cmpb
mov
fbstp
jo
mov
xchg
adc
movsl
adc
cmp
movnti
or
cmp
std
sub
mov
add
jp
push
outsb
lock
sti
clc
push
lret
lds
jg
scas
sub
mov
imul
adc
dec
add
jg
mov
test
and
negb
inc
lea
fwait
inc
xchg
fisttpll
adc
mov
outsl
ljmp
loope
fcoms
sbb
popa
andb
ja
outsb
out
in
sbb
inc
xchg
inc
adc
imul
sub
mov
mov
cmp
lods
mov
in
outsb
dec
xor
mov
js
cmpsl
xor
addr16
data16
mov
push
inc
pop
xchg
clc
popa
xchg
cmp
jmp
inc
or
mov
sub
sbb
insl
fmuls
xchg
in
or
iret
daa
jmp
std
push
cmp
enter
repz
push
sti
mov
inc
or
inc
or
fdivr
orb
das
mov
inc
call
roll
daa
rorb
insb
jnp
add
jle
push
mov
cwtl
push
mov
idivl
repz
jns
jp
test
sarl
dec
push
shrb
popa
adc
push
pop
ja
mov
scas
das
add
add
test
mov
icebp
pop
add
negb
jne
hlt
lret
popa
cmp
adc
fadds
push
ret
out
jno
mov
hlt
int3
movsb
loope
lds
dec
adc
fadds
imul
dec
add
test
aad
sti
shll
out
mov
orl
imul
std
and
sub
and
imul
and
sbb
xchg
jo
aam
hlt
xor
inc
push
adc
dec
into
mov
aas
and
cld
or
push
loop
andb
insl
xchg
cmp
out
leave
xchg
aas
cmp
xchg
inc
pop
sub
xchg
dec
jns
mov
fidivrs
mov
inc
addb
jb
lret
xchg
pop
add
ss
iret
je
cmp
sahf
hlt
cli
pop
fmulp
repnz
jge
mov
lock
dec
adc
loope
pop
mov
xchg
xor
pop
fsubrs
test
mov
lret
sahf
xor
shr
xorb
xchg
mov
stos
ret
pop
rolb
lret
int
mov
lods
mov
push
sti
mov
sub
fidivl
dec
in
jae
xor
movsb
inc
in
ret
pop
push
sub
aas
push
cli
xor
shlb
inc
or
mov
cld
xchg
out
lea
ret
mov
push
jg
mov
cmpl
adc
imul
sbb
popl
push
sti
lods
xchg
and
repz
repz
in
dec
mov
testl
aam
ljmp
xor
hlt
rorb
mov
fwait
inc
mov
push
stc
jne
repnz
xor
jae
and
gs
add
push
adc
jns
movsl
repz
jbe
sub
cmp
es
nop
mull
leave
cmp
je
pushf
cmp
aas
sub
pop
sbb
mov
inc
outsl
out
mov
jge
or
cwtl
aaa
mov
test
loopne
loopne
xchg
inc
imul
sbb
clc
pop
cmp
aam
es
mov
es
and
aam
mov
test
lcall
aam
sti
ret
test
push
movsl
adc
pop
sbb
push
sti
out
aam
lret
hlt
aaa
cltd
mov
mov
fdivl
and
inc
out
test
or
stc
push
xchg
push
or
and
cmpsl
xor
sbb
xchg
inc
lds
dec
ja
xor
aas
lcall
outsb
nop
roll
out
cmp
enter
cmp
and
mov
scas
imul
mov
scas
pushf
aas
dec
add
cmp
aaa
cltd
cmpsb
repnz
push
mov
fiadds
inc
pop
adc
mov
sbb
or
mov
mov
mov
fidivrs
inc
cltd
xor
add
mov
stos
sti
pusha
cmp
faddl
and
cmp
push
jge
std
test
into
mov
push
cld
iret
fdivl
out
xor
nop
sbb
inc
dec
pop
test
popf
pop
ret
inc
or
push
push
std
pop
dec
pushf
aas
cmp
jmp
in
scas
xchg
ficompl
sbb
iret
xor
dec
and
jns
sahf
jg
xchg
push
adc
ja
outsb
repnz
sub
add
cmp
push
cld
dec
ss
cli
inc
fwait
push
sahf
mov
lods
sub
andb
or
mov
gs
mov
jle
data16
dec
or
pop
pop
cld
rcll
jno
insl
or
in
fidivrs
scas
sti
add
sahf
cmp
out
push
jns
lock
adcl
inc
jne
filds
pop
scas
push
je
js
mov
das
lahf
in
sub
cmovs
sbb
jg
negb
jo
jno
push
outsl
repz
mov
or
push
lods
xchg
jl
sarb
mov
inc
lods
push
imul
mov
sarb
cmp
and
mulb
xchg
cmp
repz
shl
cli
pop
mul
popf
cmp
and
popa
hlt
adc
adc
pushf
push
inc
adc
shll
daa
mov
mov
xchg
aas
scas
stos
dec
or
mov
push
out
dec
sahf
cmp
mov
and
daa
mov
test
push
mov
and
fcompl
xchg
inc
inc
addl
mov
push
sub
push
mov
mov
call
jo
mov
test
inc
or
xor
stc
arpl
mov
push
sti
push
les
pop
dec
iret
mov
test
adc
loop
testb
add
ficompl
shl
out
mov
push
rcr
mov
out
dec
add
aad
xchg
loop
lds
nop
xchg
xchg
mov
jb
mov
adc
push
mov
xchg
ds
or
mov
sub
repnz
pop
cmp
outsb
mov
pop
lret
push
mov
arpl
pop
ret
and
pop
xor
hlt
sub
dec
loopne
jo
fwait
push
iret
cmc
inc
xlat
js
in
cmp
repz
data16
xor
inc
mov
cmpsb
fdivrl
popa
mov
add
mov
mov
lcall
test
ret
xchg
cli
sub
pop
shrl
xchg
inc
lret
xlat
adc
pop
mov
mov
and
lock
aas
sub
jbe
outsl
cmp
ret
iret
cmp
mov
mov
test
ljmpw
dec
popf
xor
nop
cmp
pushf
push
mov
aad
pop
orb
push
roll
inc
lods
jne
xchg
or
and
mov
cmp
mov
data16
daa
out
mov
mov
and
fdivl
inc
mov
movsl
jnp
pop
cmp
cs
add
dec
nop
and
and
es
pop
icebp
adc
dec
in
or
rcrl
cmp
inc
dec
push
ret
or
mov
psubsw
fs
pop
loope
pop
dec
push
ret
mov
mov
xchg
inc
enter
push
pop
imul
cmp
pop
clc
popa
xor
fdivr
and
mov
ljmp
shrb
jnp
pop
mov
xlat
sbb
rcr
jno
je
sets
add
jns
aas
sahf
dec
outsl
push
add
xchg
jns
pop
inc
daa
mov
adcl
adc
adc
mov
adc
out
mov
daa
std
adcb
jecxz
dec
or
jmp
or
cmpsl
sbb
ret
mull
cld
cld
pop
cmp
lods
and
fidivrs
cmp
lea
mov
gs
aas
hlt
sahf
inc
mov
je
adc
orb
mov
nop
adc
loopne
ljmp
cmc
jle
jo
xlat
jns
data16
mov
int3
pop
in
addr16
mov
int3
outsb
in
jns
push
in
in
imul
mulb
xor
lret
movsb
push
lds
data16
inc
push
jb
mov
xchg
int3
fisubrl
loopne
adc
aad
sub
xchg
mov
add
leave
sahf
cmp
out
add
pushf
std
inc
bt
into
mov
fwait
aaa
movsb
mov
mov
nop
push
int3
pop
mov
xchg
aas
jge
jle
xchg
addr16
in
rorb
inc
inc
jle
movsb
mov
mov
and
dec
push
sub
add
fs
jns
mov
add
push
lea
das
dec
rcrb
imul
jecxz
sbb
cmpsb
cli
pop
add
ret
pop
lods
sub
mov
imul
insb
mov
adc
cmpsl
mov
cwtl
inc
or
inc
rcll
mov
insb
mov
cmc
int3
scas
stos
ss
sbb
inc
sub
mov
and
add
insl
sti
xchg
jns
lods
push
dec
mov
nop
dec
pop
imul
cmp
pop
mov
inc
adc
dec
or
sbb
mov
ret
xlat
sub
nop
scas
pusha
repz
int
rorb
pop
pushf
xchg
test
in
xchg
cli
out
xchg
adc
xchg
ror
arpl
cmp
and
fidivrs
int3
mov
iret
mov
pop
out
addr16
and
push
test
mov
fdivl
adc
mov
jecxz
xor
daa
int3
xchg
mov
data16
jne
add
les
jecxz
pop
cmp
adc
mov
inc
orb
sbb
pop
scas
and
mov
pop
mov
sub
mov
stos
push
ret
cmp
pop
add
pusha
jo
inc
ja
mov
outsb
dec
cmpsb
sub
jg
adc
xor
push
cld
gs
or
cmpsb
fstpl
fiaddl
rcll
and
xor
sahf
mov
scas
push
fistpll
es
jne
xor
xchg
push
and
and
cmp
mov
dec
or
outsw
and
cmc
in
mov
out
xor
mov
movsb
pop
lds
mov
fwait
aaa
sub
mov
jl
dec
or
push
pop
xor
push
sbb
arpl
mov
mov
fnstsw
xchg
gs
loope
pop
jge
inc
mov
out
imul
mov
dec
sahf
mov
lods
mov
in
mov
adc
bound
dec
loop
sti
xor
sub
or
in
psrlq
jnp
pop
je
or
sbb
pop
jmp
inc
cmp
add
mov
out
dec
sub
call
jnp
dec
and
xchg
aaa
mov
lods
add
in
bswap
cmp
insl
out
stos
and
xchg
in
out
addr16
sti
xor
sub
je
sbb
negb
mov
idiv
sub
cmpl
lods
xor
cmp
or
dec
sbb
aaa
insl
aaa
mov
sbb
dec
mov
mov
fldenv
cli
in
iret
mov
loope
ja
push
loope
jo
xchg
inc
xchg
outsb
xchg
inc
cmpsl
rorb
sbb
bound
ljmp
pop
sub
ficoml
frstor
or
xchg
es
gs
cmp
imul
movd
pop
shrl
sarb
sub
out
mov
mov
sub
jecxz
jmp
movsb
testb
mov
xchg
test
cmp
jne
notb
popf
or
and
and
cltd
cmp
lret
and
call
jno
adc
or
xchg
inc
dec
psubd
adc
lods
fucomi
outsl
or
scas
xor
dec
jg
loop
arpl
int
sbb
ja
int3
xchg
and
xor
jo
or
addr16
mov
repnz
or
cmp
sbb
inc
sub
xor
dec
pop
cmpsb
cmp
enter
push
jmp
in
outsl
and
lcall
in
std
pop
and
dec
xlat
aas
pop
repnz
cwtl
shrl
mov
sbbb
fs
jbe
push
dec
mov
adc
adc
xor
push
mov
lahf
mov
jbe
lahf
mov
lret
insb
xorl
xchg
xchg
repz
cmp
out
cmp
mov
pusha
mov
and
jge
stc
fimuls
lods
daa
inc
movb
ret
aas
mov
mov
add
sub
scas
sahf
cmp
repnz
fs
popl
fistpll
popf
out
adc
push
cli
xchg
inc
jns
testl
ret
mov
push
add
or
cs
xchg
cli
xchg
in
push
sub
scas
pop
cmp
ja
mov
mov
jmp
incl
xor
sub
push
hlt
adc
and
mov
stc
xor
rcrl
push
lds
test
cmp
das
xchg
sbb
call
notb
daa
or
cmp
jno
sbb
lods
dec
xchg
xor
or
shr
pop
push
xchg
add
addr16
sbb
xor
loop
pop
int
fcmovbe
xchg
cmp
or
mov
scas
fwait
stc
mov
lods
ss
jae
iret
or
fcomps
pop
or
ljmp
call
mov
mov
push
mov
scas
es
stos
xor
xor
sbbb
pop
mov
mov
test
mov
mov
scas
cmpsl
jns
cmp
mov
jbe
push
push
lods
add
push
sub
rcl
aam
jecxz
xor
pop
pop
add
lods
xor
xor
sub
lret
mov
or
sub
adc
shll
icebp
pop
fistl
jge
loop
inc
or
insb
outsl
push
cli
lock
ss
pop
gs
cmp
fmull
scas
arpl
fistps
adc
sbbb
outsl
cwtl
das
mov
ret
hlt
cmpsb
mov
insb
inc
stc
fdivl
imul
xchg
jle
adc
rorb
xor
aas
icebp
ss
popa
dec
in
inc
push
jmp
mov
add
xchg
jb
movl
nop
daa
sbb
inc
mov
scas
inc
insl
lods
pop
fisttps
out
xor
ljmp
xor
lahf
cmpsb
and
mov
inc
xlat
sub
inc
fisttpl
dec
pop
cmc
jl
stc
pop
popf
jl
iret
jge
pop
scas
lock
inc
mov
push
push
xchg
insl
leave
ja
jno
ljmp
std
cmp
pop
scas
dec
xor
shlb
mov
ret
push
ljmp
jb
inc
xchg
daa
lcall
inc
out
sub
pop
pop
bswap
fs
jg
jnp
jmp
xchg
rolb
cltd
add
and
cmp
aad
pop
inc
fisttpll
lods
fs
fstpl
jnp
dec
incb
xor
shll
adc
insl
inc
neg
jae
push
cli
xchg
jl
adc
into
or
ss
pusha
dec
out
inc
push
jmp
mov
add
xchg
jb
lds
nop
daa
sbb
inc
mov
scas
inc
imul
mov
loopne
adcl
xor
lahf
movsl
and
mov
inc
xlat
sub
inc
fisttpl
dec
pop
cmc
jnp
stc
pop
pushf
jl
into
jl
pop
scas
out
lcall
inc
mov
push
push
xchg
insl
enter
test
hlt
mov
lret
cld
cmp
test
dec
mov
mov
loopne
in
ret
repz
adc
or
mov
mov
nop
daa
cltd
fsubrs
inc
in
sub
pop
pop
push
int
inc
jle
jnp
popa
jmp
xchg
roll
cltd
add
and
cmp
aad
pop
inc
fisttpll
stos
fs
fcompl
jnp
dec
std
sbbb
insl
cltd
xor
shlb
aad
insl
inc
neg
jae
addr16
mov
mov
sbb
cmp
pop
dec
out
inc
push
jmp
mov
add
xchg
jb
les
and
in
daa
pop
pop
stos
inc
mov
scas
inc
push
enter
int3
arpl
fucomip
adcl
xor
lahf
arpl
mov
daa
xlat
inc
fisttpl
dec
pop
cmc
jp
stc
pop
fwait
jl
int
adcb
out
lcall
inc
mov
push
push
xchg
insl
jne
jno
call
clc
sti
cmp
test
dec
lea
mov
fisttps
adc
push
ljmp
jb
inc
test
daa
cwtl
xlat
test
or
pop
pop
or
in
scas
pusha
jmp
xchg
rolb
cltd
add
mov
push
sub
movsl
pop
inc
fisttpll
stos
fs
fistpl
jnp
dec
cld
sbbb
insb
cltd
xor
mov
mov
insl
inc
cmc
fdivl
data16
mov
mov
sbb
cmp
ss
pop
dec
out
aas
push
jmp
mov
add
xchg
jb
ret
add
push
push
stos
inc
mov
scas
inc
imul
out
das
fsubrp
adcl
xor
lahf
bound
es
es
inc
fildl
dec
pop
cmc
jns
stc
pop
lcall
lods
in
lcall
inc
mov
push
push
xchg
insl
je
jno
out
mov
enter
cmp
test
dec
mov
mov
fimuls
xadd
icebp
xor
adc
inc
orl
xchg
test
or
pop
pop
or
fs
jnp
pop
jmp
xchg
iret
add
in
and
ss
aad
push
inc
fisttpll
test
jnp
dec
sti
sbbb
imul
cmpb
push
rcll
insl
inc
hlt
fdivl
gs
mov
mov
sbb
cmp
ss
pop
dec
out
ds
jmp
scas
insl
add
nop
jb
ret
and
nop
daa
adc
ss
inc
push
mov
arpl
fucomp
orl
xor
lahf
popa
mov
es
and
inc
pop
cmc
js
stc
pop
cltd
jl
lret
jns
pop
stos
in
lcall
aas
mov
push
push
xchg
insl
les
jb
in
mov
stc
nop
stc
cmp
test
dec
mov
mov
fmull
or
cs
add
jae
inc
orl
aas
push
mov
pop
pop
or
gs
pop
in
adcl
or
push
add
shlb
mov
ret
pop
hlt
hlt
cmpsl
gs
fcoms
sbbl
imul
dec
out
lahf
mov
outsb
inc
repnz
cmc
mov
mov
stos
out
sbb
cmp
aaa
into
sbb
out
cmp
in
insl
lods
outsb
add
rolb
and
loope
sub
push
stos
inc
xchg
inc
cmpsw
leave
pusha
flds
out
sub
jmp
or
or
roll
inc
fsubs
roll
add
pop
divb
arpl
push
xchg
jge
leave
ja
sbb
lret
lahf
ss
cmp
mov
outsb
ret
jae
jecxz
mov
adc
dec
mov
enter
into
fimull
or
insl
add
pcmpeqb
inc
jg
and
shrb
inc
call
or
cmp
jl
pop
in
test
scas
or
dec
add
shll
inc
xlat
mov
rcrl
movsl
data16
adc
inc
testl
jl
mov
push
iret
or
fidivs
popa
testb
mov
stos
in
sbb
aaa
call
push
call
imul
or
loopne
sub
push
stos
inc
test
mov
movsl
leave
pusha
xlat
xchg
gs
orl
pushf
jge
or
iret
jg
mov
and
inc
fldl
inc
pop
divb
sti
push
xchg
jge
jbe
sbb
lret
cld
cmp
push
dec
mov
outsb
shlb
mov
sti
xchg
divb
stos
gs
sbb
mov
cmp
lcall
in
in
sub
pop
push
jne
inc
jge
and
shrb
dec
out
pop
push
or
cmp
jl
pop
out
test
scas
or
fistps
and
xor
xlat
sahf
push
dec
loopne
mov
addr16
aad
jge
inc
testb
xchg
dec
mov
push
ljmp
outsl
cmp
pop
testb
mov
stos
jecxz
sbb
xor
push
push
call
push
outsl
push
fisttpl
lea
fists
inc
xorb
dec
mov
iret
data16
out
sub
in
test
dec
add
mov
int
sub
scas
out
inc
fcomps
roll
add
divb
gs
push
xchg
jge
lds
sbb
leave
mov
push
imul
dec
mov
outsb
mov
fcomip
mov
ret
cld
xchg
cmc
xor
stos
arpl
sbb
mov
cmp
cltd
dec
out
mov
insl
add
or
mov
lods
pusha
xchg
sub
mov
dec
out
pop
push
pop
shrl
je
jl
pop
out
xchg
or
mov
xor
popf
push
dec
loopne
mov
addr16
aam
jge
inc
cmc
test
fs
xor
mov
push
jmp
or
outsl
cmp
fbstp
pop
testb
mov
stos
loop
sbb
xor
cmp
pop
push
push
call
imul
lea
dec
stos
inc
xorl
leave
pusha
aam
iret
data16
out
daa
fsubr
test
dec
add
mov
int3
jge
shrb
inc
fiadds
inc
pop
divb
gs
push
xchg
jge
les
cmpsb
in
xor
enter
cmp
push
dec
mov
outsb
mov
fdivp
mov
ret
hlt
xor
stos
bound
xor
mov
cmp
cwtl
aad
out
mov
insl
add
or
or
lods
pop
xchg
sub
mov
dec
in
enter
shrl
jae
jge
pop
out
xchg
stos
or
mov
imul
dec
dec
loopne
mov
addr16
rorb
jle
inc
repz
inc
mov
push
call
or
jo
in
fbstp
pop
testl
loope
sbb
xor
cmp
adc
ss
out
cmpsl
jo
mov
push
dec
lods
inc
subb
dec
popa
mov
iret
data16
call
test
dec
push
popf
jns
or
lret
jnp
shrb
fdivrp
ds
imull
data16
push
nop
jle
ret
sbb
mov
push
push
mov
outsl
mov
fdiv
lea
sar
repnz
adc
pusha
adc
inc
xorl
rcll
mov
outsb
add
cmp
mov
stos
pop
xchg
sub
lret
stos
inc
std
mov
dec
loop
leave
pusha
push
add
imul
les
movsl
ficoml
and
inc
sti
sub
sub
inc
fstps
mov
push
push
aas
icebp
xchg
xchg
inc
movsb
cmp
mov
pop
leave
pop
fidivl
ljmp
lea
push
lods
fists
xor
rcll
push
push
ljmp
jno
xlat
xchg
mov
ficoml
jle
mov
pop
lahf
lret
adc
mov
jmp
test
inc
pop
sahf
ja
or
pop
cwtl
and
shrl
dec
cmp
clc
insl
push
decb
jg
shlb
mov
les
push
popw
ret
xchg
jo
push
ja
mov
xchg
lock
sbb
lret
cmp
xchg
rcll
add
outsl
push
push
or
cmp
and
pop
xchg
sub
sti
scas
mov
loopne
lret
add
push
outsl
call
mov
cmpsl
fcoms
les
addr16
ficompl
mov
imul
cmp
pop
sahf
xor
jne
mov
pop
enter
aaa
jmp
stc
nop
mov
xchg
outsb
lods
pop
scas
fisttpll
xor
rclb
push
push
ljmp
jno
aad
ja
mov
ficoml
inc
jl
mov
pop
popf
lret
iret
adc
mov
jmp
xchg
inc
pop
sahf
jne
or
mov
stos
call
dec
loopne
cmp
imul
decl
jg
mov
fistps
cmp
xor
pop
dec
test
jo
push
js
fdiv
mov
mov
adc
mov
jge
lret
cmp
xchg
iret
push
call
out
outsl
push
push
or
cmp
cmpsb
pop
xchg
cs
stos
inc
stc
scas
mov
loopne
lret
add
imul
call
mov
cmpsl
adc
inc
stc
lds
gs
ficoml
mov
clc
call
or
pop
and
xor
jne
mov
pop
enter
xor
push
stc
nop
mov
xchg
insl
stos
pop
scas
fisttpl
xor
rcll
dec
push
ljmp
jno
roll
es
inc
jp
mov
pop
fwait
lret
int
shrb
out
jmp
xchg
es
movsl
push
xchg
and
ret
test
lret
dec
loope
cmp
imul
xchg
mov
les
push
bound
les
sbb
mov
loop
pushf
testl
pop
adc
mov
jnp
lret
cmp
call
in
jo
push
push
jp
cmp
and
mov
lods
inc
imull
bound
aam
xor
sahf
push
repnz
adc
inc
imull
lds
fs
fistl
mov
stc
out
push
int
sbbl
and
mov
cmp
loope
les
add
jae
out
jns
push
cli
xchg
mov
add
fimull
int
fistpll
adc
jmp
xor
bound
js
mov
nop
daa
and
inc
scas
inc
jns
mov
pop
lcall
scas
in
ljmp
inc
or
push
xchg
es
cmpsl
in
fistl
leave
dec
loope
aaa
stc
push
mov
push
mov
ret
hlt
das
mov
pop
inc
sbb
mov
loop
lcall
xchg
in
sub
lods
pop
push
pop
mov
jp
lret
stos
pusha
cmp
jmp
jecxz
jno
push
add
adc
jno
mov
les
dec
fcoml
int3
arpl
aam
das
imul
popf
push
repnz
mov
daa
mov
arpl
xchg
inc
dec
jecxz
mov
cli
out
push
lret
pop
sbbb
in
mov
push
pop
mov
cmp
loopne
les
add
je
in
jns
push
sti
xchg
xchg
add
aaa
into
sub
cmp
push
dec
push
in
jle
pop
icebp
pusha
lahf
jae
roll
xchg
sub
scas
inc
js
mov
pop
cltd
int
lret
jnp
imul
inc
or
push
xchg
daa
mov
movsl
in
fcoml
ss
sbb
dec
mov
push
sahf
fistpl
cmp
cs
pop
inc
sbb
jns
aam
nop
push
mov
pop
scas
pop
or
mov
jns
int3
stos
pop
cmp
ljmp
jb
dec
add
xor
nop
daa
mov
ret
scas
inc
cmc
test
dec
ficoml
int
dec
sti
aam
sub
dec
repnz
mov
sub
and
inc
fstl
mov
sti
in
push
leave
push
sbbl
ljmp
mov
mov
pop
ret
jne
jecxz
jns
push
cld
xchg
xchg
add
fmuls
cmp
sub
cmp
or
push
in
jge
pop
icebp
pop
sahf
je
sarb
cmpxchg
xchg
sub
rcll
inc
ja
mov
pop
cwtl
into
gs
imul
or
push
nop
sub
mov
lds
divb
sti
gs
push
dec
xchg
pop
pushf
fldenv
cmp
pop
adc
pop
inc
jg
jae
fs
xchg
sar
xchg
add
add
push
or
mov
ja
int
pop
ds
leave
push
jmp
scas
pop
repz
jae
dec
add
xor
sub
shrl
fcoms
gs
stc
aad
sub
sbbl
or
rorb
das
and
ficoms
mov
cld
jecxz
imul
add
sbb
call
mov
ds
stos
rclb
lds
fidivs
loop
jp
push
cld
xchg
test
sbb
mov
fidivrl
in
jnp
pop
repnz
pushf
je
into
jle
adc
rclb
inc
jne
mov
push
xchg
into
gs
stos
jmp
icebp
mov
cmp
mov
push
mov
mov
mov
les
xor
push
imul
test
and
mov
mov
pop
inc
jge
jae
arpl
jnp
sar
xchg
add
sbb
cmp
int
pop
aas
mov
push
jmp
lods
pop
hlt
ficomps
jae
dec
jnp
xor
sub
shrb
xlat
adc
gs
clc
aad
sub
sbbl
or
iret
or
sarb
inc
ficoms
mov
cld
loop
imul
add
sbb
cmp
stos
rclb
lds
fidivs
loope
jp
push
cld
xchg
xorl
movsb
sbb
mov
cmp
daa
fnstcw
in
jp
pop
repnz
fwait
je
int
jns
scas
out
xchg
sub
rcll
inc
je
mov
push
xchg
into
gs
ja
push
call
icebp
mov
cmp
mov
dec
lea
mov
mov
ret
dec
jecxz
xor
adc
sbbb
push
mov
ds
sub
pop
inc
jl
jae
in
xchg
iret
cli
xchg
add
sbb
cmp
movsl
pop
aas
mov
push
jmp
lods
pop
adc
mov
push
inc
sbb
dec
shrb
inc
adc
cmp
andb
xor
mov
bound
rcr
sbb
sti
call
dec
aad
es
repz
imul
xchg
or
scas
lcall
int3
inc
jne
inc
push
in
shl
xor
insb
int3
mov
out
stos
roll
jmp
lock
lds
mov
cmpsl
in
push
jb
sahf
sub
mov
out
xor
xchg
negb
test
adcb
outsb
cmp
ficompl
add
stos
outsb
lds
ljmp
and
mov
jmp
mov
add
decb
std
dec
clc
cmp
lods
fnstsw
imul
repz
in
cld
aam
pop
lret
adc
fisubl
pop
fidivrl
lcall
jg
in
push
mov
push
jae
pusha
insl
xchg
add
nop
jecxz
mov
divl
push
mov
jmp
adc
ret
dec
jo
leave
mov
enter
aaa
pop
mov
xchg
push
test
mov
xchg
dec
or
mov
aaa
das
jmp
or
mov
sbb
out
jecxz
xchg
test
add
js
scas
shrb
ss
mov
je
cmp
and
and
out
dec
dec
adc
cmp
pop
loop
loopne
hlt
add
fwait
pop
fdiv
adc
sti
pop
jne
call
orl
mov
push
ds
insb
xor
mov
js
mov
shll
popa
add
jmp
dec
jno
negl
stc
sub
fidivl
or
lods
push
loop
dec
or
shll
sldt
add
add
xor
add
add
and
test
add
add
and
add
add
and
test
add
add
sbb
add
add
and
mov
add
add
pop
sbb
mov
fs
fmull
call
sbb
scas
pop
add
js
out
popf
in
sbb
sarl
loope
cmp
jnp
add
cmp
lret
les
dec
xchg
cmp
or
pop
and
stos
std
addr16
pop
jmp
hlt
adc
je
and
xchg
sarl
fnstcw
ljmp
pop
cmp
xor
pushf
push
or
mov
adc
jmp
frstor
mov
aad
in
es
arpl
xor
pop
data16
into
cmpsb
idivl
sub
sbb
push
rorl
fwait
scas
out
fcompl
or
dec
enter
mov
xchg
fisttpl
outsb
jecxz
jnp
ds
je
adc
out
sbb
pushf
stos
sub
imul
mov
mov
iret
sub
rcrl
orb
inc
jne
adc
pop
cmp
lods
mov
stos
ss
loop
adc
in
sahf
movsl
test
xchg
lock
cltd
sahf
and
rclb
icebp
push
fs
xchg
cli
add
xchg
lret
pop
fidivl
enter
inc
fstpt
mov
sub
adc
movsb
sub
mov
mov
xor
and
mov
push
cmpsl
cmp
into
cmpsl
pop
xor
movsb
mov
mov
leave
dec
shlb
clc
jbe
dec
or
jmp
outsb
xchg
scas
popf
mov
inc
test
mov
and
sbb
sbb
pop
xchg
hlt
adc
dec
scas
dec
add
push
ljmp
or
outsl
or
mov
in
stos
pushl
or
add
ja
scas
std
or
push
shlb
aas
push
mov
push
cmp
pop
dec
jbe
mov
xor
jb
mov
cli
jbe
jle
jnp
imul
mov
in
cmpl
fcomps
jne
sub
push
pop
aad
jne
xchg
test
jne
mov
adc
sbb
add
lods
cli
fcoms
dec
jb
int3
xor
adc
out
ret
leave
fidivl
fisttpll
push
mov
ret
in
cltd
cld
pop
fnstenv
out
insb
stc
lea
fcom
jp
jb
leave
mov
jmp
xchg
pop
js
cmp
push
dec
push
incl
and
ret
insl
pop
or
inc
out
fwait
sti
jl
cmp
insl
dec
xor
outsl
shrb
mov
aam
sbb
xorl
cmpsl
scas
push
pop
hlt
lcall
rcrb
insl
mov
out
pop
cmp
test
addl
lods
incb
jbe
jo
test
dec
mov
stos
ss
pop
sbb
out
or
jns
mov
xor
fiadds
adc
dec
rcrl
or
xchg
nop
pop
inc
xor
mov
inc
loop
cmp
fidivl
hlt
icebp
adc
jmp
rclb
push
shr
in
inc
sub
shr
pop
xor
js
jno
jecxz
sub
sbb
inc
cmpsl
jno
into
adcl
sbb
adcl
sub
push
out
jecxz
adc
adc
add
fisubl
popf
into
mov
push
sbb
push
in
arpl
loope
loop
orb
push
cmp
hlt
icebp
adc
xor
stc
cmpsb
jns
cs
dec
pop
sub
ret
pushf
inc
xchg
out
jo
jbe
adc
xlat
sti
mov
cmp
loope
loop
repnz
push
testb
jns
rorl
push
xchg
push
xchg
mov
cwtl
sub
xlat
addr16
loope
xchg
push
aas
push
and
lcall
cli
push
mov
lods
add
mov
repnz
lret
icebp
adc
in
pushf
fsts
push
mov
jno
stos
aam
or
push
or
sub
add
mov
sub
aad
scas
sub
fdivrl
enter
ds
lret
mov
adc
bound
loop
jmp
mov
push
fistl
mov
sub
nop
cld
mov
push
push
fisubl
pushf
mov
cld
lods
bound
je
cld
mov
ss
imul
pop
mov
mov
jg
xchg
filds
shlb
adc
imul
xchg
ret
cwtl
lea
test
sbb
push
je
iret
pop
sub
mov
dec
pop
pop
sbb
jbe
outsb
test
add
xlat
dec
or
and
add
add
sbb
and
int
fistl
outsb
fwait
push
dec
mov
adc
aaa
lahf
out
inc
mov
or
fidivl
xor
mov
dec
les
jbe
sub
push
dec
gs
push
mov
lahf
mov
mov
xchg
aam
dec
or
mov
or
mov
enter
lahf
das
xor
sbb
es
in
sub
cld
sub
jg
sarl
ret
es
in
pop
and
decl
fildll
jae
mov
icebp
cwtl
lret
add
notb
loopne
jmp
popa
pusha
jne
inc
jecxz
out
bound
cmp
in
dec
sahf
arpl
inc
add
add
sbb
jg
call
lret
std
jne
xchg
sub
pop
out
scas
mov
cmp
idivb
in
pop
jb
and
je
loop
sub
insl
nop
xchg
xchg
lods
rcr
shlb
sub
cmp
mov
xchg
rorl
hlt
sub
dec
scas
cli
xlat
or
sub
stc
divl
xchg
testb
mov
js
out
mov
lcall
adc
cmp
sub
cwtl
fs
dec
call
add
arpl
pop
xchg
sbb
inc
gs
dec
push
or
rep
fbld
ljmp
jle
fdiv
leave
or
xlat
test
jnp
popf
icebp
jmp
xchg
insl
mov
lds
mov
mov
mov
xchg
mov
test
mov
andb
jecxz
test
inc
cmpl
and
hlt
and
imul
pop
push
mov
dec
das
sub
mov
daa
in
mov
hlt
