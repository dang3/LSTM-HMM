stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
ret
add
add
shlb
pop
add
call
add
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
ret
pop
push
mov
sub
push
pushl
pushl
call
add
pop
mov
mov
push
pushl
pop
call
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
ret
add
in
sub
push
push
pushl
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
jmp
ret
and
push
pop
sub
mov
mov
shl
xor
sub
mov
mov
movl
mov
cmp
je
sub
sub
je
sub
lea
mov
sub
je
mov
sub
jne
push
pop
je
popf
push
pushl
decl
ret
push
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
ret
add
in
sub
push
pushl
push
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
push
push
call
add
pop
mov
pop
ret
add
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
ret
add
in
sub
push
pushl
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
push
push
push
push
call
add
pop
mov
pop
ret
push
mov
sub
push
push
push
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
push
push
call
add
pop
mov
pop
ret
add
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
pushl
push
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
ret
add
add
in
sub
push
pushl
push
pushl
call
add
pop
mov
pop
ret
add
add
in
sub
push
pushl
push
push
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
ret
add
in
sub
push
push
push
call
add
pop
mov
pop
ret
add
push
mov
sub
push
pushl
push
push
push
call
add
pop
mov
pop
ret
add
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
pushl
pushl
call
add
pop
mov
pop
ret
add
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
ret
add
in
sub
push
pushl
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
push
push
call
add
pop
mov
pop
ret
add
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
ret
add
push
mov
sub
push
pushl
pushl
push
push
call
add
pop
mov
pop
ret
add
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
ret
push
mov
sub
push
push
push
pushl
pushl
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
ret
add
add
in
sub
push
push
pushl
push
push
call
add
pop
mov
pop
ret
add
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
ret
add
in
sub
push
push
push
push
call
add
pop
mov
pop
ret
add
in
sub
push
push
pushl
push
call
add
pop
mov
pop
ret
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
ret
add
push
mov
sub
push
push
push
push
push
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
ret
add
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
ret
add
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
ret
add
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
ret
add
push
mov
sub
push
push
push
call
add
pop
mov
pop
ret
add
push
mov
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
pop
ret
add
in
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
ret
add
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
ret
add
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
ret
add
in
sub
push
push
push
push
push
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
ret
add
add
in
sub
push
pushl
push
push
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
ret
add
push
add
push
pop
sub
push
push
lea
push
lea
push
addl
lea
push
lea
push
pushl
decl
mov
add
call
add
lea
sub
sub
mov
pop
mov
mov
mov
mov
push
mov
xorl
pop
sub
or
push
pop
test
je
add
mov
push
push
push
pop
push
pop
stos
shr
stos
shr
stos
shr
stos
pop
pop
subl
neg
clc
sbb
pushl
lea
lea
pop
repz
jmp
mov
pop
ret
add
add
in
sub
push
push
pushl
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
ret
add
add
in
sub
push
push
push
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
push
pushl
call
add
pop
mov
pop
ret
add
in
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
ret
add
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
ret
add
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
ret
add
in
sub
push
push
pushl
call
add
pop
mov
pop
ret
add
in
sub
push
push
push
pushl
pushl
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
ret
add
in
sub
push
pushl
push
call
add
pop
mov
pop
ret
add
in
sub
push
push
pushl
pushl
call
add
pop
mov
pop
ret
add
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
ret
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
pushl
push
push
call
add
pop
mov
pop
ret
add
push
mov
sub
push
pushl
pushl
push
pushl
call
add
pop
mov
pop
ret
add
in
sub
push
pushl
push
call
add
pop
mov
pop
ret
add
in
sub
push
push
pushl
call
add
pop
mov
pop
ret
add
in
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
pop
ret
add
in
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
pop
ret
add
in
sub
push
pushl
push
call
add
pop
mov
pop
ret
push
and
add
and
add
add
and
add
and
add
and
add
and
add
add
mov
add
mov
and
add
add
out
add
and
add
and
add
add
cli
and
add
and
add
add
add
and
add
and
add
add
and
add
and
add
and
add
add
and
add
and
add
add
add
add
push
and
add
and
add
and
add
add
add
add
add
add
adc
add
cmp
add
add
add
push
add
add
add
add
and
add
add
mov
add
add
add
add
add
nop
and
add
add
add
add
jle
add
movsb
and
add
and
add
and
add
add
and
add
and
add
and
add
and
add
add
mov
add
mov
and
add
add
out
add
and
add
and
add
add
cli
and
add
and
add
add
add
and
add
and
add
add
and
add
and
add
and
add
add
and
add
and
add
add
add
add
push
and
add
and
add
and
add
add
add
add
add
add
push
push
je
imul
inc
add
add
gs
outsl
jbe
inc
imul
jns
add
test
inc
jb
popa
je
inc
jbe
outsb
je
add
call
inc
imul
bound
gs
add
push
add
outsl
jae
dec
popa
outsb
fs
add
push
gs
imul
call
inc
imul
bound
gs
add
je
push
gs
popa
jae
inc
jb
outsl
jb
add
add
imul
outsb
je
outsl
insb
add
add
gs
outsl
insl
insl
inc
jb
popa
imul
xchg
add
je
jne
jb
outsb
je
push
add
pop
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
rolb
insb
outsl
bound
dec
outsl
arpl
add
add
outsb
fs
insb
outsl
jae
add
dec
outsl
arpl
inc
insb
popa
addr16
add
popa
je
inc
imul
jns
add
repnz
imul
jb
je
arpl
add
ret
gs
jne
jb
outsb
je
jb
arpl
jae
aas
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
push
jb
jbe
je
push
jb
imul
inc
add
add
popa
jo
jb
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
movl
outsl
insl
gs
jnp
inc
gs
imul
outsb
addr16
add
into
pop
dec
outsl
popa
fs
jne
jae
jb
add
push
imul
js
push
add
mov
dec
jae
imul
jae
popa
addr16
add
jae
push
gs
jne
jae
jb
outsl
jae
add
pop
dec
jae
imul
jnp
push
gs
outsl
arpl
add
sbb
ja
jo
imul
push
inc
insb
outsl
jae
inc
gs
je
jo
add
dec
gs
popa
addr16
add
mov
inc
imul
dec
gs
popa
addr16
add
pop
or
jae
dec
gs
popa
addr16
add
push
push
inc
push
xor
cs
insb
add
pop
add
je
popa
insl
gs
jns
jns
gs
add
or
inc
gs
gs
imul
inc
gs
fs
jae
inc
jns
popa
insl
gs
add
add
je
gs
jns
popa
insl
add
dec
push
push
push
dec
inc
dec
cs
insb
add
dec
jae
popa
je
push
push
inc
add
push
dec
push
push
dec
cs
insb
add
add
cs
vpshlb
lods
aas
add
mov
insl
push
dec
lock
pop
mov
idivb
rorl
mov
jmp
mov
add
xchg
and
icebp
int
cwtl
mov
adcl
jp
push
mov
lds
mov
sarl
fidivrs
bound
mov
push
jmp
insb
xor
xchg
pop
mov
push
sbb
fadd
aaa
cld
imul
or
xorb
xor
mov
into
mul
in
stos
add
mov
jns
xchg
aas
sbb
insb
xchg
mov
out
rcl
sarb
sub
test
cmpsb
iret
mov
scas
loope
push
or
inc
mov
comiss
dec
sub
dec
rorl
out
push
cmp
pusha
pop
icebp
inc
mov
and
jle
negl
mov
push
jg
pop
push
shlb
xor
loope
jle
gs
cmp
add
inc
xor
lret
leave
dec
loope
cmp
and
mov
cmp
fsts
xchg
add
mov
in
jge
aad
test
fadds
test
cmpsl
ss
push
mov
fucomip
fs
push
adcb
stos
in
sub
fmull
mov
mov
xchg
stos
pop
xorb
mov
jno
ds
shl
push
or
mov
ljmp
mov
or
push
pushf
pop
or
fnstsw
ljmp
data16
mov
cmpsl
fildll
jno
adc
mull
lcall
lret
mov
xor
pop
pop
pop
gs
sub
add
add
add
add
xor
add
decl
add
add
add
jo
add
add
add
add
add
mov
add
mov
add
add
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
or
add
add
add
or
add
adc
add
or
add
and
add
or
add
add
add
add
add
add
add
add
push
popa
add
test
add
clc
xchg
add
add
add
add
add
or
add
mov
add
sub
add
xor
add
sub
add
xor
add
pusha
add
add
add
add
add
add
add
add
imul
xchg
xchg
xchg
add
lods
scas
scas
xor
mov
mov
mov
mov
mov
mov
mov
mov
lods
lods
lods
mov
mov
lcall
jg
add
jnp
lods
lods
lods
add
test
mov
mov
mov
ret
lret
lret
leave
lret
int3
rcl
in
rcl
shl
ror
iret
hlt
int
int3
hlt
enter
leave
leave
out
mov
mov
mov
mov
lods
lods
lea
fwait
cltd
and
je
pop
add
add
add
add
add
add
add
add
add
add
add
add
mov
sahf
add
mov
mov
out
lret
rcl
sar
fcom
std
fdivr
fcom
aam
ror
iret
dec
int
aam
rcl
iret
inc
ret
mov
mov
scas
iret
mov
mov
and
add
push
add
add
add
add
add
add
add
add
lods
lods
stos
add
scas
lods
sbb
mov
jnp
mov
sar
leave
lret
iret
rcl
aad
aam
xlat
call
xlat
call
aam
dec
into
int
into
int3
int
aam
dec
into
int3
inc
mov
mov
ljmp
test
ljmp
push
or
or
add
aaa
add
add
add
pop
add
add
add
add
add
add
pop
push
push
add
dec
add
push
add
or
or
sbb
push
add
add
add
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
mov
call
rcl
fcom
call
xlat
xlat
call
dec
int3
int3
dec
lret
leave
dec
int3
into
inc
rol
mov
mov
jmp
mov
fwait
jmp
and
and
add
inc
add
add
add
add
add
and
add
push
add
add
add
add
pop
pop
pop
add
popa
or
push
imul
fs
cmp
sbb
sub
aaa
ss
cmp
cmp
and
and
push
push
push
pop
add
add
add
add
arpl
mov
mov
mov
mov
mov
mov
mov
mov
mov
rol
leave
enter
iret
call
aad
aam
dec
iret
iret
dec
enter
inc
ret
ret
mov
mov
ljmp
mov
pushf
cwtl
xchg
xchg
lcall
addb
add
inc
add
add
add
add
add
add
add
add
add
adc
add
or
add
add
jno
jg
jge
jg
jge
jo
jb
popa
popa
arpl
cmp
cmp
mov
outsl
outsl
outsl
nop
arpl
pusha
inc
inc
inc
xor
add
add
add
add
mov
mov
inc
mov
mov
mov
mov
mov
mov
mov
dec
mov
dec
lret
leave
dec
leave
inc
mov
mov
ljmp
mov
cltd
call
xchg
xchg
cwtl
xchg
cwtl
cltd
fwait
lcall
ds
push
add
xor
add
sub
add
and
add
sbb
add
adc
add
pop
outsl
outsb
outsl
add
pop
or
pusha
nop
lea
incb
jl
jp
jp
jo
outsb
out
addr16
fdivs
jne
jg
jg
jns
jns
arpl
fs
inc
inc
cmp
pop
sbb
adc
adc
stos
lods
stos
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
cmpsb
cmpsl
cmpsb
lcall
incl
test
xchg
xchg
xchg
lahf
sahf
mov
ficoms
xchg
jle
jns
pop
cs
add
add
add
add
add
add
add
add
add
add
mov
pop
push
addb
in
mov
mov
addl
mov
mov
jge
jo
jb
jae
je
jle
jle
addb
xchg
push
cmp
ss
jg
cmp
movsb
movsb
mov
icebp
lods
lods
stos
sti
lods
lods
stos
lods
lods
lods
test
test
std
lcall
incl
jge
js
jp
jnp
jp
xchg
cwtl
movsl
mov
mov
mov
mov
mov
mov
mov
lods
lods
stos
test
sbb
add
add
add
add
add
add
add
add
pop
pop
adc
movsb
cmpsb
out
scas
mov
xchg
nop
xchg
incl
test
std
xchg
xchg
xchg
std
xchg
xchg
cwtl
stc
xchg
xchg
xchg
in
mov
or
addl
mov
push
pop
push
femms
push
xor
inc
dec
insl
insl
insb
jl
xchg
leave
fwait
lcall
fwait
fwait
lcall
mov
decl
mov
lcall
cmpsb
movsl
ljmp
mov
mov
mov
mov
std
mov
mov
movsl
movsb
mov
or
add
add
pop
pop
adc
lods
call
fwait
xchg
cwtl
incl
test
decb
xchg
xchg
pushf
sahf
pushf
std
movsb
movsl
movsb
stc
mov
xchg
xchg
in
nop
nop
xchg
in
xchg
push
jne
or
add
inc
sub
es
dec
dec
dec
outsw
jo
test
xchg
xchg
rclb
xchg
xchg
std
mov
nop
call
mov
test
lods
test
pushl
cmpsb
scas
mov
xchg
stos
std
rolb
mov
mov
ljmp
sahf
adc
add
add
pop
pop
adc
mov
jmp
sahf
cwtl
fwait
decl
mov
decl
nop
xchg
xchg
xchg
sahf
sahf
popf
movsl
movsb
movsb
test
movsb
mov
fstpt
jnp
push
push
push
outsl
dec
dec
dec
pushaw
bound
jb
jne
jp
jge
test
mov
xchg
xchg
in
nop
xchg
testl
mov
jmp
mov
mov
pop
mov
aaa
jge
mov
jbe
mov
movsb
mov
mov
lods
lods
mov
movsl
movsl
add
pop
pop
adc
mov
ljmp
pushf
decl
xchg
call
xchg
xchg
call
cwtl
cltd
cltd
fwait
lcall
movsb
movsl
mov
stc
cwtl
cwtl
cltd
out
nop
xchg
mov
cwtl
aad
xchg
lcall
lea
stc
xchg
test
std
xchg
jb
lcall
jmp
inc
jge
mov
jp
mov
jb
mov
insl
ljmp
adc
stos
or
ljmp
inc
jle
mov
mov
lods
pushf
movsl
movsb
movsl
and
add
add
mov
add
pop
adc
mov
lcall
xchg
xchg
call
fwait
lcall
lahf
lahf
lcall
cltd
call
xchg
xchg
nop
xchg
nop
call
xchg
fwait
cld
cltd
cwtl
popf
stc
sahf
fwait
lahf
stc
mov
mov
xchg
insb
xchg
xchg
pop
jge
xchg
dec
jns
fwait
cmp
lcall
sahf
pop
jmp
ljmp
adc
lods
adc
scas
adc
mov
imul
adc
imul
aas
cmp
mov
scas
lods
scas
movsb
movsl
movsl
sub
mov
add
add
add
add
pop
pop
adc
mov
lcall
xchg
xchg
lcall
lahf
mov
jmp
mov
decl
mov
decl
js
fwait
jno
cltd
fs
xchg
dec
jnp
xchg
cmp
insb
decl
adc
xchg
or
call
add
lcall
ljmp
sbb
mov
outsl
pushl
sbb
je
mov
and
mov
inc
test
ret
mov
scas
scas
mov
sahf
lahf
mov
add
pop
pop
adc
lods
mov
shll
lcall
mov
jmp
test
ljmp
pushf
sahf
call
pop
jbe
mov
decl
sub
mov
pusha
decl
or
push
incl
add
mov
push
call
add
cltd
add
lahf
add
test
pushl
es
mov
sub
sub
ret
inc
sub
dec
das
cmp
cs
inc
mov
enter
sarb
lret
movsb
dec
mov
movsb
mov
add
add
add
push
push
adc
test
ljmp
sahf
jmp
stos
test
ljmp
mov
ljmp
mov
mov
mov
incl
or
incl
add
incl
add
addb
decl
add
add
xchg
add
lcall
jmp
adc
mov
aaa
cmp
aaa
cmp
cmp
dec
cmp
call
cmp
mov
rorl
dec
mov
std
mov
mov
movsl
mov
mov
add
dec
dec
adc
cmpsl
ljmp
sahf
ljmp
scas
scas
pushl
mov
pushl
mov
ljmp
ja
decl
push
decl
addps
xchg
push
incl
add
push
decl
pop
call
pop
jmp
add
stos
add
pushl
cmp
into
inc
mov
roll
call
dec
call
dec
xchg
call
dec
xchg
fisttpl
fisttpl
fistl
call
test
std
mov
mov
mov
mov
mov
add
add
add
dec
inc
adc
jl
movsb
sahf
mov
lcall
test
pushl
mov
pushl
mov
mov
mov
jmp
outsl
decl
sbb
nop
sbb
mov
pop
decl
or
add
popl
push
call
add
mov
add
stos
add
mov
fs
es
int3
dec
nop
call
push
cwtl
call
push
cltd
fistl
fstpl
fistps
fists
jmp
pop
mov
jmp
pop
mov
dec
mov
mov
test
cmpsl
jne
sahf
sahf
or
xchg
xchg
cwtl
add
inc
adc
ja
mov
mov
sahf
ljmp
mov
pushl
mov
mov
pushl
xchg
mov
call
and
call
call
or
xchg
add
xchg
add
fwait
add
mov
add
lods
add
mov
gs
mov
xor
call
pop
cltd
ficompl
jmp
bound
in
cmpsb
jmp
cmpsb
jmp
test
imul
fldl
ret
mov
cmpsb
cmpsb
mov
sahf
mov
add
add
add
inc
aas
adc
jb
cltd
xchg
lcall
fwait
popf
ljmp
mov
pushl
mov
mov
mov
mov
cmp
sub
lcall
call
sbb
pop
call
add
mov
add
stos
add
mov
pushl
adc
roll
frstor
jmp
outsb
lods
jmp
jo
jmp
jno
ljmp
jmp
mov
in
jne
out
jne
out
jae
jmp
mov
mov
cmpsb
cmpsl
lcall
sahf
add
add
insb
outsb
js
mov
lcall
mov
mov
mov
mov
mov
mov
mov
movsl
lods
lcall
xor
mov
cmp
xor
lcall
lcall
add
movsl
add
test
add
mov
gs
mov
sbb
ficoml
jmp
ja
ljmp
in
xorb
repnz
push
cmpl
ljmp
mov
test
pushf
daa
mov
mov
add
bound
add
aaa
cmp
pop
pop
push
jne
jle
out
test
xchg
xchg
xchg
pushl
mov
mov
inc
mov
ret
inc
mov
jmp
cmp
movsl
inc
jge
movsb
inc
jge
movsl
cmp
fwait
sbb
xchg
add
popf
add
add
stos
add
scas
add
mov
fs
mov
add
iret
and
mov
jmp
mov
push
sar
pop
push
pop
push
nop
nop
stc
xchg
clc
mov
out
pop
fnstenv
clc
stos
lods
test
xor
popf
add
add
add
inc
cmp
push
inc
dec
inc
jb
pop
dec
in
imul
xchg
pushl
mov
mov
inc
ret
ret
ret
inc
mov
jle
lcall
dec
cmp
dec
test
movsl
xor
cltd
adc
lcall
ljmp
add
mov
arpl
mov
add
movl
call
xchg
ret
push
cltd
enter
cltd
push
pushf
leave
push
fwait
enter
int3
sti
sahf
into
sti
popf
int3
cld
lcall
loopne
int3
dec
mov
rcrb
nop
add
add
add
ss
or
cmp
outsb
push
dec
dec
jecxz
pusha
pusha
call
mov
mov
mov
sar
ret
inc
leave
mov
mov
ljmp
xchg
movsl
sub
lcall
jmp
popa
pushl
add
roll
dec
add
rorb
jbe
loopne
xchg
out
mov
push
movsl
into
push
cmpsb
int3
stc
cmpsb
iret
sti
test
cld
movsl
into
sti
test
sar
cld
stos
sar
test
mov
dec
lret
mov
mov
mov
xchg
xchg
add
lcall
xor
sub
inc
inc
inc
bound
push
xlat
jae
jno
mov
sarb
mov
ret
vshufpd
leave
inc
rol
mov
cmpsb
jmp
push
mov
scas
dec
test
lahf
sbb
pop
jmp
add
mov
mov
add
int
insl
call
add
loopne
jnp
out
pop
cmpsl
push
popf
lret
lods
sar
cli
mov
cli
scas
sar
cli
mov
mov
mov
mov
std
mov
pushl
sar
mull
leave
lret
mov
mov
mov
xchg
xchg
or
add
add
xor
add
sbb
add
dec
dec
ss
jo
cltd
cltd
cwtl
rol
ret
fcom
xlat
jmp
fcom
test
int
dec
leave
lret
dec
leave
leave
dec
leave
lret
enter
mov
mov
scas
push
mov
stos
jg,pt
sahf
punpckldq
mov
add
mov
fs
mov
add
iret
add
xlat
add
loopne
je
jmp
jno
cli
lods
aam
mov
mov
fcos
cld
mov
xlat
mov
fdivr
std
rcr
std
mov
lret
jmp
mov
call
lret
mov
lahf
mov
or
add
add
xor
add
add
pop
or
enter
in
pop
out
call
test
in
leave
fsub
fsub
fcmovnu
fcomi
fcomp
fsqrt
aam
xlat
std
into
iret
iret
mov
push
ljmp
sub
mov
add
mov
popa
mov
add
lret
call
add
fildl
ja
in
jbe
out
das
xchg
push
mov
sti
mov
loopne
inc
loopne
inc
loopne
std
std
std
leave
std
enter
dec
std
leave
cld
mov
lret
lret
sar
mov
mov
xchg
adc
add
add
incb
incl
std
incl
repz
or
in
in
pop
in
out
in
sub
out
in
dec
call
ljmp
in
in
fsubr
les
xchg
test
js
movsb
adc
jmp
add
mov
fs
mov
add
int3
add
xlat
add
fiadds
js
jmp
inc
popf
cli
mov
jecxz
std
lret
dec
in
dec
in
std
int
dec
loop
std
into
loopne
call
loop
shl
std
shl
std
shl
sti
ret
out
mov
fdivr
ret
out
test
cmpsl
mov
xchg
cwtl
add
add
add
std
incl
incl
cmc
clc
clc
add
hlt
icebp
add
hlt
repz
out
lock
pop
in
repnz
cmp
out
in
pop
loopne
loop
mov
xchg
sti
lahf
and
lcall
add
lods
add
mov
fs
mov
add
add
flds
jbe
in
jp
in
push
jge
cmc
pop
stos
cli
mov
std
iret
in
std
shl
call
jmp
call
in
aad
std
xlat
out
call
call
fldl2e
fucomi
cld
shl
push
ret
jmp
rcr
dec
lret
stos
test
xchg
and
cwtl
cwtl
add
std
cli
add
testl
hlt
div
or
shll
mov
jb
negb
add
add
scas
add
mov
add
lret
call
add
fldl
jbe
out
js
in
sbb
sti
std
fld1
fucomi
std
fldl2e
std
fucomi
fucomp
fucomp
std
fucomp
std
loopne
jmp
in
std
fsubrp
shl
push
ret
aam
out
ror
iret
clc
lods
lods
lods
lods
xchg
xchg
xchg
jo,pn
outsb
add
add
add
loope
add
leave
lds
lods
jge
repnz
and
lahf
add
cmpsl
add
mov
mov
add
into
add
aad
jb
fiadds
je
jmp
sub
shl
std
fucomip
fucomp
fucomi
fldl2t
fsubr
std
aad
shl
sti
shl
cli
iret
loopne
stc
int
clc
int3
fdivr
cmc
ret
xlat
out
mov
fcos
xlat
xlat
sti
mov
mov
cltd
fwait
cltd
cmp
lcall
add
add
fcom
add
mov
sahf
jmp
sub
add
ljmp
add
add
lds
imul
add
add
loop
js
ljmp
cld
xchg
sti
leave
loopne
cli
int3
loop
cld
clc
mov
aad
repnz
sar
lock
into
call
mov
sar
jmp
vmaskmovdqu
fsub
cmc
fucomip
mov
mov
xchg
add
add
add
lret
add
shrl
loopne
ss
mov
add
mov
data16
mov
add
int3
push
jo
rorl
fistl
jns
loop
cmp
dec
xchg
jmp
scas
lret
mov
out
leave
std
loopne
cld
fildll
neg
mov
leave
ljmp
iret
iret
shl
aad
call
out
test
out
lock
jmp
lret
leave
push
stos
lods
lods
adc
cmpsb
cmpsb
cmpsb
add
ret
mov
lahf
stos
aam
dec
jg
sahf
sbb
test
insb
scas
and
ja
mov
inc
test
ret
push
mov
lret
test
mov
out
mov
mov
enter
int
ror
int
aam
shlb
xlat
rcl
jg
fcmovnu
jb
fsubp
gs
jecxz
out
call
xor
cmc
div
and
icebp
icebp
sbb
or
mov
int3
add
add
add
mov
roll
mov
test
pushf
cmc
mov
jne
ljmp
mov
sarb
test
mov
pushf
lret
mov
enter
int3
shlb
iret
rcll
rcl
dec
xlat
inc
rcl
aam
aam
fldenv
fcomp
fistpl
fneni(8087
ficoms
fsubp
loop
in
call
icebp
in
add
cli
testb
cld
add
std
incl
std
std
add
mov
shrb
mov
mov
mov
scas
xchg
mov
mov
mov
mov
rcll
lds
leave
xor
int3
leave
daa
int
shlb
rcl
rcrb
rcl
rcll
iret
aam
or
fcom
push
aam
fadds
add
add
jecxz
add
in
jmp
add
incl
mov
mov
add
ret
ret
les
mov
mov
mov
push
ret
or
enter
enter
leave
add
rolb
rcl
add
fcom
add
aad
aad
add
fchs
add
aam
add
loop
add
fsubp
add
in
add
icebp
icebp
add
std
incl
std
incb
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
ret
les
les
mov
mov
ja
test
dec
test
xchg
xchg
pop
add
add
add
add
add
add
mov
mov
mov
mov
mov
enter
iret
jmp
aad
cmc
aam
sar
into
iret
iret
cli
int3
int3
lret
stc
lret
hlt
mov
mov
iret
lods
lods
stos
fwait
xchg
xchg
xchg
dec
ds
add
add
add
add
add
add
add
jg
addb
inc
aas
add
push
push
add
add
add
add
add
add
add
add
add
mov
inc
mov
rol
enter
iret
iret
xlat
aad
call
call
iret
sar
into
int
dec
int3
lret
mov
mov
stos
icebp
xchg
cltd
cltd
mov
or
or
add
add
add
add
add
add
add
add
add
add
jae
jae
jne
jae
gs
dec
inc
inc
cmp
sub
sub
xor
dec
sub
inc
adc
sub
add
add
mov
mov
mov
mov
mov
mov
dec
int3
int3
call
rcl
call
rcl
dec
int3
lret
inc
mov
mov
mov
ljmp
lahf
popf
xchg
xchg
xchg
jmp
jno
xchg
adc
add
xor
add
add
add
add
addl
test
push
imul
imul
push
pop
pop
cmp
aaa
aaa
pop
jno
jno
scas
scas
mov
mov
mov
mov
mov
sar
mov
mov
mov
ljmp
lcall
xchg
xchg
xchg
fwait
lcall
dec
dec
dec
dec
movups
xor
add
and
add
adc
add
pop
lcall
pop
popf
xchg
lcall
addb
jge
jnp
jns
jns
jns
jns
jp
jns
je
je
push
push
push
cmp
aaa
sahf
pushf
pushf
mov
lods
scas
repz
lods
lods
sti
scas
scas
scas
std
cmpsl
test
popf
call
test
call
mov
lods
jmp
lods
scas
leave
movsl
cmpsb
cmpsb
cltd
jb
jae
adc
adc
add
add
add
add
insl
insl
outsb
pop
xchg
mov
lahf
cwtl
popf
incl
mov
sti
xchg
xchg
xchg
lock
nop
xchg
fimuls
mov
jp
pop
and
inc
inc
dec
outsb
outsl
jo
mov
xchg
cwtl
cltd
cwtl
repnz
xchg
xchg
std
mov
call
sahf
popf
ljmp
test
std
mov
scas
mov
mov
mov
cmpsl
movsb
movsl
pop
addl
add
pop
pusha
pop
or
scas
mov
cmpsl
sahf
movsl
decl
decl
xchg
xchg
std
popf
lahf
mov
negl
jg
stos
push
push
push
jo
push
pop
outsl
imul
jge
subl
xchg
lock
mov
lcall
mov
pushl
pop
mov
jnp
mov
scas
stos
insl
test
add
add
add
add
popa
or
mov
in
mov
xchg
call
cwtl
cwtl
call
cltd
cltd
lcall
cli
xchg
xchg
cwtl
jmp
xchg
xchg
aam
lea
out
xchg
jne
notb
pop
jg
popf
dec
jnp
movsl
inc
jp
scas
aaa
jbe
mov
je
mov
insl
ljmp
sbb
mov
scas
mov
scas
scas
scas
jle
mov
add
add
add
pusha
popa
pusha
or
mov
in
movsl
test
lcall
mov
mov
decl
addb
xchg
jae
cld
xchg
pusha
cmp
dec
js
xchg
cmp
xchg
sub
xchg
sbb
xchg
adc
mov
adc
imul
sbb
mov
jno
mov
and
rcrb
mov
lods
lods
xchg
lahf
popf
sahf
adc
add
add
pusha
pop
pusha
or
lods
mov
stos
mov
mov
ljmp
cmpsl
test
lcall
decl
sub
decl
adc
xchg
push
decl
add
xchg
add
pushf
add
cmpsl
or
pushl
sub
inc
das
jge
ret
xor
leave
das
jg
lret
dec
pop
xchg
inc
test
mov
test
add
add
add
add
pop
or
movsl
stos
in
mov
test
scas
scas
scas
pushl
mov
jmp
aas
jo
mov
pop
decl
or
test
push
call
add
mov
add
mov
insb
inc
aaa
cmp
inc
mov
rolb
aam
call
inc
nop
fimull
call
bound
stc
mov
mov
movsl
mov
incb
add
add
pusha
pop
pusha
or
lahf
mov
ljmp
mov
mov
mov
ljmp
push
jge
nop
pop
call
push
pop
decl
push
call
add
test
pusha
ljmp
and
iret
dec
xchg
call
pop
lcall
pop
sahf
jmp
pop
mov
fisubrs
int
mov
ret
cmpsb
xor
add
add
dec
pop
jl
jl
fwait
cwtl
cwtl
jecxz
mov
scas
pushl
mov
mov
lcall
cs
sub
call
push
pop
call
add
add
mov
mov
xor
jmp
insl
test
in
stos
jmp
jb
in
jno
jmp
test
std
mov
test
inc
addb
add
dec
pop
outsl
insl
insb
bound
cltd
xchg
ljmp
mov
mov
mov
jbe
lcall
cmp
pushf
sub
xchg
or
pop
jmp
add
mov
gs
or
xchg
jmp
jp
jmp
test
push
xchg
push
xchg
mov
cmpsb
cmpsb
push
lcall
add
sub
push
push
dec
pop
imul
mov
mov
mov
mov
ret
mov
pushf
jmp
inc
cmp
lcall
ljmp
add
mov
adc
mov
push
xchg
push
cltd
push
cltd
clc
fwait
lret
fwait
lret
xchg
stos
inc
mov
lods
popa
mov
add
add
inc
pop
pop
pop
pop
fisttpl
mov
mov
rol
ret
ret
mov
test
movsl
pop
xchg
lods
dec
cmp
and
add
ljmp
add
add
leave
add
fisubl
cmp
cmc
movsb
int3
push
test
cli
test
cli
stos
sar
std
stos
iret
lods
sar
stc
cmpsb
int
out
inc
rol
stos
stos
stos
jne
pushf
popf
or
add
add
dec
push
push
aaa
je
jb
test
int3
int3
out
iret
int
lret
lret
enter
enter
mov
bound
jmp
add
mov
fs
add
int
outsl
fildl
xchg
clc
xchg
sti
mov
cld
mov
fdivr
cld
mov
xlat
mov
sar
jmp
ret
mov
scas
mov
add
add
add
add
pop
or
rcl
dec
loope
jecxz
loopne
fistps
fcmovnu
xlat
xlat
out
shll
test
push
pop
ljmp
add
enter
add
jecxz
jp
repnz
mov
sti
inc
loopne
std
enter
enter
leave
loopne
dec
loope
sti
lock
leave
divb
pushf
sbb
add
add
std
incl
incb
jmp
out
sbb
in
jmp
ljmp
xchg
mov
mov
mov
add
mov
arpl
roll
dec
add
fldl
jbe
jmp
insb
mov
std
sti
iret
out
std
shl
call
in
call
out
std
out
std
fsub
std
aam
push
fcos
fcmove
sar
mov
mov
and
add
add
std
add
incl
cld
incb
aad
aam
mov
pop
mov
lahf
or
ljmp
add
add
roll
jno
fiadds
jbe
in
and
std
shl
fsubr
cld
fsub
cld
fsubr
sti
xlat
out
cld
xlat
out
std
aad
push
enter
iret
xlat
sti
mov
popf
lahf
das
add
add
int3
into
int3
or
bound
ljmp
addr16
add
aad
jb
loope
jns
out
xor
sti
int3
loop
cli
leave
loopne
cmc
fsin
hlt
aad
icebp
rcl
lock
out
aad
in
shl
jmp
aam
jecxz
fucomp
leave
mov
test
incb
aad
push
mov
jb
or
insb
inc
sbb
lret
and
sub
sti
ficoms
clc
jecxz
mov
out
in
lret
jmp
fdivrl
leave
sarl
jecxz
ficompl
out
call
rorl
mov
add
lods
stos
stos
add
xchg
mov
ljmp
fidivrl
jle
rol
stos
mov
mov
ret
nop
rol
enter
lret
insl
aad
iret
pop
rcl
rorl
fcomp
cmp
loopne
das
in
fisubs
loop
icebp
adc
in
in
or
std
std
add
add
add
std
incb
mov
mov
outsb
mov
stos
jns
mov
mov
mov
mov
xor
leave
enter
rcl
pop
mov
rcl
or
fnstsw
or
into
into
add
std
incl
std
incl
cltd
lcall
mov
or
int3
int
add
std
std
add
add
add
add
add
lock
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
fwait
fwait
lcall
rol
mov
enter
mov
mov
mov
insb
stos
stos
stos
xor
je
add
add
add
add
add
add
add
add
add
add
add
add
stos
stos
stos
add
mov
jmp
aad
aad
rcl
sar
into
int
std
vshufpd
mov
test
sbb
pop
add
add
add
add
add
add
add
add
jae
jno
addr16
das
cs
cs
inc
inc
inc
and
add
add
mov
mov
cmpl
dec
int
call
aam
dec
into
iret
inc
enter
mov
lods
jmp
mov
push
add
add
add
add
jae
je
test
adc
outsl
outsl
ret
popa
mov
data16
outsb
outsl
outsl
jb
pusha
popa
cmp
pop
sbb
mov
in
mov
mov
mov
stos
lods
lcall
xchg
xchg
lcall
cwtl
cltd
lds
jb
es
add
add
add
add
je
jae
popf
xchg
lcall
test
clc
mov
test
addb
push
push
push
inc
mov
popf
into
movsb
movsb
movsb
in
mov
xchg
xchg
decb
mov
ljmp
mov
in
mov
mov
xchg
xchg
xchg
aas
sub
sub
add
add
xorl
stos
mov
mov
lea
xchg
cld
sahf
sahf
popf
cmc
lcall
mov
push
push
imul
jge
lea
xchg
notl
mov
mov
fwait
pushl
jo
mov
scas
lods
push
stos
stos
lods
add
add
add
mov
mov
scas
cld
xchg
xchg
xchg
call
cltd
lcall
fwait
lcall
mov
loope
jbe
out
xchg
bound
std
fwait
inc
jne
cmpsb
cmp
lods
sub
pushl
sbb
mov
jl
mov
mov
imul
int3
add
xchg
pop
scas
movsl
lods
test
popf
sahf
popf
jmp
movsl
movsl
call
jle
mov
xchg
inc
je
mov
push
lea
pop
call
or
ljmp
and
mov
sub
les
mov
mov
subl
jae
push
mov
movsl
test
ljmp
mov
jmp
sub
adc
mov
push
incl
add
add
mov
adc
shll
lret
inc
mov
iret
inc
mov
inc
call
push
xchg
dec
cwtl
mov
mov
mov
movsl
movsb
movsl
push
add
add
push
push
test
lahf
movsb
cld
scas
lods
scas
pushl
mov
movsb
call
pop
arpl
pop
pop
decl
add
mov
add
mov
push
xchg
fcompl
fistps
jmp
pop
mov
call
lcall
test
cmpsb
pop
add
add
arpl
adc
popf
lcall
mov
mov
mov
fwait
dec
jge
pushf
xor
cwtl
and
call
add
stos
add
mov
xor
jmp
jl
push
jge
out
jg
ficompl
mov
mov
add
add
dec
adc
addr16
mov
mov
mov
mov
ret
mov
arpl
jmp
add
ljmp
add
or
fmull
out
lea
notb
stc
xchg
enter
inc
mov
cmpsb
sub
aas
inc
aas
adc
push
xchg
mov
mov
inc
mov
xchg
ljmp
pop
jmp
pushl
add
vmread
ljmp
stc
lods
iret
cld
scas
sar
sti
lods
sar
std
lods
iret
jmp
leave
inc
mov
movsl
ds
std
add
xor
scas
mov
mov
aad
mov
aam
rcl
out
lret
lret
mov
mov
jmp
add
add
aam
jae
call
pop
std
mov
fdivr
cld
rcr
inc
std
ret
out
mov
ret
in
test
dec
addb
add
in
jmp
call
call
in
fcmovu
mov
add
mov
add
add
push
cmp
cld
iret
out
shl
call
in
call
in
std
shl
push
rol
int
scas
lods
lods
popa
addl
add
std
std
add
incl
int
shrb
sahf
sbb
lods
add
mov
add
jecxz
jp
hlt
push
cmpsl
inc
loop
aad
aam
cld
aam
std
shl
sti
aam
push
fdivr
fcmovne
shl
mov
mov
xchg
xchg
xchg
pop
ret
adc
mov
add
mov
push
jne
fistps
cmp
insb
lods
cld
out
mov
shl
call
ror
out
shl
in
aam
jmp
fcmovu
scas
ret
vsqrtsd
add
add
sahf
stos
xchg
inc
and
ret
int3
int3
ja
mov
fdivrs
adc
int
fxch
iret
pop
fst
aad
in
loope
call
out
out
sbb
sarb
cmp
mov
scas
push
mov
mov
ret
mov
cs
mov
int
fisttps
int
int
aam
std
std
incb
addl
add
stos
std
add
rol
std
incl
std
incl
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
std
adc
xchg
sub
arpl
dec
mov
rcl
repz
rclb
icebp
mov
fidivs
push
cld
xchg
scas
mov
sbb
and
iret
push
pop
push
xchg
jae
cmc
movsb
mov
pop
in
jl
testl
lds
mov
jp
mov
add
inc
push
pop
mov
gs
xchg
mov
xor
call
or
cmp
adc
outsl
push
mov
lea
in
mov
push
add
jno
lret
xchg
icebp
mov
test
xsha256
cmpsb
push
std
push
popf
cmp
mov
mov
fsubrl
push
hlt
pusha
mull
inc
jle
js
movsl
cmp
cltd
pushf
xor
ret
pop
or
mov
js
inc
fsubrs
jge
xchg
scas
xchg
testb
out
stos
sbb
cmp
push
cmp
leave
push
pop
lock
mov
mov
bndstx
and
add
pop
test
ds
and
outsl
and
push
nop
inc
fcmove
jae
out
mov
sbb
dec
lods
jg
fists
mov
es
fldcw
mov
test
jmp
adc
aas
pushf
xor
push
lods
js
mov
lret
into
gs
xchg
out
push
out
mov
outsb
add
cmp
pop
mov
nop
pop
mov
push
mov
lahf
fnstsw
mov
int3
std
push
push
lds
stc
nop
shlb
dec
jecxz
adc
iret
inc
subb
fs
in
xchg
aad
pop
pop
mov
or
sub
sub
les
pop
mov
pop
dec
loope
mov
es
push
inc
xor
push
push
jmp
inc
movsb
cmp
jb
xchg
ret
notl
ja
dec
scas
insl
pusha
mov
ja
andl
push
clc
lahf
xchg
sub
sbb
mov
and
sti
xchg
mov
les
in
xor
mov
or
sub
jae
pop
sub
mov
dec
ffreep
or
mov
jecxz
std
adc
aaa
mov
add
mov
xor
xchg
sub
jbe
mov
mov
adc
in
inc
add
arpl
fsubr
orl
sub
lahf
pop
sti
jmp
sub
dec
or
add
stc
push
repz
fsubl
arpl
jbe
sahf
xor
leave
sbb
ss
cmp
stc
nop
hlt
nop
adc
stc
nop
adc
ss
scas
addr16
xor
or
ficoml
or
sub
mov
inc
in
es
into
gs
lods
inc
add
in
orl
mov
stos
ljmp
mov
std
push
inc
fldl
mov
inc
ret
stc
hlt
dec
mov
sbb
mov
ss
push
out
inc
cli
xchg
jae
fdivl
xchg
sbb
xchg
out
int
mov
scas
out
push
jmp
or
into
cmp
push
in
mov
nop
daa
shrd
fbstp
scas
inc
bound
xchg
sub
or
mov
mov
test
ljmp
sub
lahf
pop
cli
in
subl
mov
jle
inc
lahf
sub
push
icebp
inc
frstor
jae
sbb
lahf
ss
xchg
sbbb
sbb
aaa
sbb
jae
cmp
xchg
repnz
jae
adc
mov
loope
xchg
adc
into
xchg
xor
scas
push
mov
cmp
pop
inc
fimull
xchg
xor
sarl
mov
sub
rol
jns
pop
add
pop
xchg
insl
add
ret
hlt
mov
pop
jecxz
mov
push
jmp
xchg
shrl
ret
repz
repz
nop
sarl
xchg
das
js
pop
popl
lcall
jne
popf
cs
in
pop
mov
jbe
lds
int
push
pop
icebp
pop
mov
xchg
fbstp
and
push
call
scas
rcr
je
iret
in
std
sub
xor
int
push
jns
xor
iret
dec
in
ret
jecxz
cmc
sbb
push
inc
insb
push
lods
cltd
gs
xchg
mov
sbbb
adc
lret
rcrl
ja
cwtl
popa
fbstp
mov
std
xchg
in
ds
outsb
inc
mov
jne
cmc
mov
test
mov
and
stos
pop
push
daa
mov
add
je
dec
pop
push
in
mov
adc
lret
and
lods
inc
mov
jne
or
jo
dec
pop
shrl
cwtl
rcrl
mov
dec
dec
xor
test
sbb
or
jge
and
fisubl
es
dec
sub
jge
jns
rep
scas
inc
xchg
cs
dec
iret
data16
xchg
sub
lods
sub
scas
inc
push
mov
pop
scas
popa
cmp
push
rcrl
push
out
hlt
cmp
popf
xor
mov
cltd
xor
cmp
add
lds
clc
inc
mov
je
pop
mov
fwait
xor
dec
movsl
cmp
sbb
dec
stos
dec
in
fsubrl
push
inc
fiadds
and
adc
add
add
add
and
xchg
sub
sbb
sub
sti
test
sub
cmpsb
scas
rep
cmp
jns
mov
sub
out
cld
mov
fsubrl
jg
push
scas
or
mov
mov
leave
pusha
add
notb
mov
fs
outsb
jno
lahf
push
es
popl
cwtl
mov
outsb
dec
out
sbb
jl
fucomp
jg
push
out
xchg
xchg
sti
xchg
leave
jecxz
data16
jbe
add
xor
hlt
mov
pop
stc
nop
mov
push
cmp
iret
sbb
xchg
or
jne
sbb
mov
add
scas
push
call
xchg
icebp
pop
and
xor
into
in
jne
and
je
out
pop
sahf
sbb
adc
inc
and
mov
enter
push
ljmp
jp
xor
or
pushf
xor
push
aam
addb
push
xor
cld
sub
xor
xchg
mov
ss
dec
or
inc
fwait
aaa
into
shlb
add
icebp
push
in
es
xchg
sub
push
inc
xchg
scas
mov
fdiv
xchg
out
bound
mov
cltd
in
repnz
mov
loop
add
lahf
outsl
cmp
mov
loop
pop
fistpll
fsubrs
mov
push
jecxz
insl
and
mov
xor
in
popa
clc
and
popf
jnp
jecxz
cs
xchg
fdiv
shrl
inc
insl
jb
xor
sub
repz
icebp
jns
and
or
imul
jnp
aad
and
pop
cs
adc
es
sub
testl
dec
das
jl
fdivl
cmpsb
inc
xchg
sahf
xor
test
daa
mov
cmp
enter
lea
iret
adcl
out
pop
call
adcl
rcrb
scas
lea
cltd
jnp
add
gs
out
mov
and
sbb
jns
aaa
into
mov
fistpll
rorb
fsubrs
xor
dec
js
mov
fidivl
shrl
rolb
or
push
fidivs
ja
stos
movsb
jbe
rol
dec
mul
cmpsb
mov
dec
xor
lahf
gs
or
ret
xchg
lods
hlt
fnstenv
dec
dec
sub
xchg
xchg
cs
fisubrl
lds
bswap
gs
pop
testl
fcmovbe
les
std
inc
sub
jno
dec
stos
inc
addl
lock
or
adc
sub
mov
jge
ds
sahf
fsubr
iret
lret
sub
std
lock
and
fsubr
push
inc
push
and
mov
les
push
push
adc
testl
les
inc
ficoml
add
cmc
mov
data16
lea
scas
inc
loopne
inc
fmuls
push
xor
aaa
das
pop
negb
gs
sub
push
in
pop
out
aam
and
push
pop
push
xchg
stos
rorb
mov
cmpsl
sbb
dec
push
jns
nop
lods
iret
mov
je
push
push
lret
sti
leave
stc
nop
sti
sbb
jle
xor
lock
les
sbb
repnz
inc
lock
sub
cli
jl
insl
testl
xor
jle
or
mov
sti
push
sbb
mov
or
test
or
xchg
inc
mov
gs
movsl
jbe
mov
jbe
shrb
mov
stc
js
mov
dec
bound
add
repz
or
ds
and
jmp
xor
and
add
pop
xor
xchg
jne
leave
repz
mov
negb
mov
sbb
xchg
mov
gs
lahf
test
push
and
xchg
ret
int
cmpsl
mov
std
repnz
cltd
aam
js
xor
dec
cmp
fsubr
cmc
jbe
and
shll
lds
cld
push
mov
or
test
imul
scas
add
pushf
insb
dec
pop
mov
in
cmp
loop
xor
mov
jae
movsl
in
fstl
jg
dec
lahf
adc
push
mov
into
adcl
xchg
or
inc
je
sti
jle
lock
xor
jle
call
lahf
insl
adc
xor
imul
arpl
insl
inc
adc
loop
mov
mov
push
xchg
loope
ficoms
lea
in
sbb
rcl
push
mov
jbe
push
addr16
iret
sub
fisttpl
mov
mov
cmpsb
sbb
sub
int
cmp
popa
dec
sti
sar
jns
pop
movsl
int
push
jmp
push
inc
stos
and
stos
xor
xchg
dec
icebp
movsl
loope
mov
jbe
push
jne
loopne
lcall
sbb
or
nop
ds
sbb
mov
pop
push
test
pop
lods
cmpsl
push
mov
mov
or
cmp
stos
call
cmp
icebp
inc
sbb
jae
fnstcw
add
jb
push
popf
and
push
cmpsb
std
outsl
push
jne
lods
xchg
add
lcall
pop
jecxz
mov
adc
movsb
pop
popf
xor
push
arpl
xor
mov
xchg
rcrl
add
fidivrs
incl
mov
xchg
lcall
aas
cmp
scas
push
adc
jge
jmp
xor
repnz
adcl
cmp
in
data16
idiv
jb
pop
enter
and
xchg
fisubrl
cs
fwait
and
xor
push
dec
cmc
push
scas
loopne
mov
cmpsb
gs
or
xor
jno
ss
in
xlat
cli
data16
dec
jns
addb
mov
sbb
pop
xor
inc
fldcw
mov
sti
leave
int
add
adc
xor
adc
mov
rol
mov
call
jo
mov
push
out
or
xchg
add
push
mov
or
enter
inc
jmp
movsb
cmp
push
scas
or
mov
jo
sbbb
and
in
lods
inc
and
insl
add
dec
fidivs
ret
in
cld
xchg
ret
or
sbb
lods
cmp
iret
dec
xchg
push
in
xchg
rolb
jno
je
mov
and
sub
xor
and
push
call
out
mov
sbb
or
test
mov
mov
push
out
sar
lret
bound
sbb
inc
sub
adc
data16
push
std
pop
sahf
jnp,pt
sbb
fisubl
lret
mov
xor
popa
clc
stos
pop
shrl
ret
jg
cmp
pop
mov
outsb
lcall
mov
dec
loope
push
call
call
testl
imul
pop
lea
and
jp
pop
hlt
les
add
fdivrp
xchg
and
mov
sahf
dec
sbb
jae
test
roll
xchg
pop
mov
pop
out
pop
xlat
aad
mov
jbe
cwtl
loopne
mov
lahf
les
mov
aad
sub
jb
dec
dec
loop
jge
nop
xchg
ja
add
xchg
fiadds
ss
mull
jmp
arpl
or
nop
daa
aas
add
xchg
jns
mov
xor
sar
addl
or
gs
mov
lods
lea
int3
mov
stc
cmc
in
outsb
pop
pop
inc
fcomps
add
js
pop
divb
and
enter
std
loope
xor
push
dec
in
adc
add
fsubrs
fisttpll
lea
aad
stos
cld
xlat
outsb
in
push
xor
cmpsb
or
cltd
mov
int
mov
dec
outsl
push
mov
ret
cmp
dec
loope
fldcw
call
add
jle
dec
add
popf
inc
bound
mov
mov
leave
sub
in
inc
dec
loop
cmpsl
jnp
clc
xchg
imul
in
mov
inc
push
mov
cmp
cmp
pop
mov
int3
loop
pop
push
and
inc
pop
xor
lahf
outsb
push
mov
mov
cmp
in
jle
push
push
pop
repnz
das
pushf
xor
jb
adc
xchg
sarl
pop
test
shrl
inc
and
jne
add
pop
cmpsl
pop
mov
inc
push
jmp
jmp
aam
fiadds
repnz
push
mov
adc
idivl
das
xchg
int
jae
mov
ljmp
jge
lahf
sbb
mov
adc
jp
xor
mov
repz
fisttpll
and
jnp
fimull
add
cltd
xor
fidivl
ds
jbe
jl
js
pop
popf
addb
je
shlb
xchg
adc
hlt
xor
lds
pop
or
repnz
sub
jle
jns
pop
cwtl
dec
loopne
jbe
cs
out
push
mov
call
adc
jnp
push
movsb
cmp
add
add
stos
push
sub
ja
jge
leave
fsubrl
mov
stc
enter
and
adcb
dec
cmp
js
sahf
xor
or
jbe
pop
ror
popa
mov
shr
jg
mov
mov
fcoml
cmpsl
sbb
adc
push
inc
xlat
add
cmc
mov
push
sub
jl
cltd
inc
mov
xor
pop
cmpsb
cmp
daa
mov
pop
loope
pop
add
jecxz
fwait
sub
mov
mov
pop
mov
lret
pop
ds
cmp
jb
pop
repz
fdivrs
leave
outsb
js
ret
das
adc
testb
add
ja
movb
mov
xchg
mov
fs
add
sbb
add
cs
aas
xchg
nop
daa
gs
pop
out
mov
jbe
adc
arpl
xchg
mov
mov
ret
scas
sub
or
add
out
test
popa
clc
sub
mov
push
shrl
sbb
dec
fildll
lods
inc
xor
pop
lret
pop
test
outsb
mov
scas
jle
mov
and
aam
mov
stc
mov
repnz
fsubrs
out
and
cmpsl
aaa
pop
mov
mov
lods
inc
mov
fxch
bound
push
data16
nop
or
mov
mov
fsubs
fldcw
ret
dec
ss
push
insb
insb
add
jl
xchg
sbbl
mov
cmp
cmp
pop
daa
xchg
pop
repnz
inc
out
jns
das
outsl
repz
dec
mov
popf
sbb
mov
mov
aas
test
enter
dec
in
ss
inc
or
add
mov
int3
and
pop
xlat
inc
xlat
add
outsb
push
sub
popa
jg
mov
jl
sti
cmp
mov
adc
xor
cmp
push
lret
ret
ftst
xlat
outsb
add
imul
sub
mov
mov
dec
jnp
stos
bound
lds
dec
out
dec
out
adc
imul
lds
call
jno
sbb
add
icebp
sub
enter
stc
loope
loope
adc
incl
lds
xchg
mov
aam
cwtl
sti
fdivl
mov
xchg
in
sbb
aaa
add
jnp
adc
in
lods
xor
inc
push
cltd
xor
push
in
push
mov
dec
ds
add
data16
cwtl
adc
xorb
rcrb
es
dec
ds
fildl
push
out
xlat
push
stc
xchg
icebp
test
mov
mov
xor
inc
aas
mov
jbe
fcmovu
jno
in
test
daa
clc
jo
or
int3
lcall
sti
xor
repz
push
in
insl
sbb
cmp
jno
scas
cmp
es
scas
inc
xchg
int3
arpl
sahf
in
cmp
ljmp
sbb
dec
outsl
ss
popa
push
out
xchg
pmulhuw
push
stos
ret
jge
inc
push
loopne
xchg
test
arpl
fsubr
xor
pop
or
mov
daa
mov
cmp
inc
fcoml
popa
push
cli
inc
push
xchg
scas
cmp
mov
ret
pop
sbb
cmp
push
pop
lret
cmp
test
cmpsb
or
js
shl
lock
sub
dec
fildll
les
xchg
mov
test
jo
test
cltd
mov
cmp
fdivs
pop
sub
into
gs
fbstp
sahf
clc
pop
push
std
xchg
lcall
mov
lock
icebp
cmp
or
fs
andb
out
pop
stos
sbbb
jb
or
jnp
aaa
mov
fisubrl
dec
clc
fmul
arpl
adc
mov
movsb
adc
arpl
mov
ljmp
sbb
mov
test
mov
jae
inc
fsubl
iret
arpl
add
lret
bound
xchg
aam
lahf
ss
sbb
pop
jbe
mov
dec
arpl
or
es
fidivrl
sbbl
je
and
mov
mov
add
or
jo
sub
in
inc
nop
mov
fisubrl
adc
add
mov
fistl
test
fisubrs
pop
repz
sti
xchg
cs
addr16
xor
dec
adc
adc
mov
xchg
push
mov
test
cmp
cmp
jmp
push
in
fsubrl
xor
sbb
xchg
sub
ds
imulb
test
mov
mov
xor
add
jle
xor
testl
shrb
pop
pop
pop
and
mov
ds
or
mov
sti
cmp
lret
add
mov
dec
scas
sub
mov
push
iret
dec
jmp
jcxz
add
ds
cmp
pop
arpl
gs
lea
rcll
int3
xchg
mov
fistpl
mov
xchg
sbb
dec
les
dec
inc
test
cmp
sarb
sub
jnp
scas
movsb
or
xchg
popa
or
dec
aas
pop
and
or
aad
mov
pop
mov
inc
gs
addl
dec
mov
pusha
or
mov
sub
jbe
dec
imul
loopne
mov
jle
mov
inc
xor
aad
push
sub
adc
shlb
sbb
icebp
fisubs
aad
sti
testl
aaa
insb
mov
paddq
xchg
fcmovne
jmp
push
bound
xchg
mov
or
fs
pushf
je
arpl
push
mov
aad
sbb
test
mov
jl
dec
out
dec
push
mov
dec
inc
idivb
test
xorl
dec
stos
push
cs
inc
push
inc
xchg
sti
mov
sahf
aad
cmp
hlt
cmpsb
dec
xor
push
sub
loop
in
dec
test
and
fdivrl
out
outsl
push
mov
adc
lret
cmp
xchg
movsl
js
dec
jl
add
push
mov
mov
push
cmc
sahf
mov
stos
stc
fwait
xor
ficoml
mov
sub
test
sbb
addr16
jmp
bound
sub
stos
mov
repz
jl
out
or
nop
mov
push
xor
xor
ret
pusha
jecxz
out
not
int3
movb
rclb
xchg
pusha
mov
and
cmp
adc
add
cmp
lock
pushf
add
test
divb
push
sarb
shrl
inc
mov
ljmp
mov
repz
aaa
out
jg
mov
ret
pop
xchg
add
jnp
mov
stos
or
push
xor
mov
ja
mov
mov
shl
loop
lcall
xor
xchg
in
lods
mov
and
je
adc
test
insl
enter
pop
jle
negb
aam
dec
mov
and
xchg
mov
jp
mov
clc
xor
sbb
stos
mov
stc
ljmp
aad
ss
and
jns
jns
test
imull
clc
sub
xor
aaa
cli
pop
bound
popf
sbb
adc
bound
ljmp
outsb
test
sub
mov
pop
stc
jmp
cmp
idiv
adc
js
test
aaa
call
jmp
fld
out
mov
add
mov
cmc
sbb
aad
mov
xor
pop
jecxz
adc
mov
sarb
mov
mov
mov
pop
ss
in
jge
movsb
fdivrl
mov
adc
xor
into
cmpsl
aad
movsl
jns
cmp
shlb
push
mov
cwtl
push
stos
mov
push
inc
xchg
out
ljmp
sti
stc
cmp
loop
aam
cs
mov
in
out
mov
pop
xor
mov
jmp
sub
cmp
inc
add
ljmp
mull
xchg
jno
sbb
addr16
imul
cs
xchg
iret
imul
mov
or
out
fidivl
imul
ljmp
outsb
xchg
push
fs
les
fisubrl
stos
std
jl
push
dec
imul
xchg
pop
mov
dec
iret
or
fs
movsl
lret
sub
int3
scas
or
cmp
lea
data16
jbe
cmp
jnp
cmp
cwtl
fsts
mov
sub
sti
push
mov
out
pop
out
arpl
shll
dec
sub
mov
cmpsb
mov
leave
xor
sarb
aas
bound
aas
imul
cmpsb
data16
and
lds
push
mov
mov
push
mov
imul
cmpsb
or
ss
cmp
pop
jno
loopne
jns
dec
dec
push
push
and
mov
cmp
sub
adc
mov
shlb
sbb
xchg
std
inc
xor
dec
or
jecxz
and
jge
stos
test
mov
jmp
and
ret
or
sbb
mov
sub
xchg
or
ftst
xor
mov
lahf
cmp
xchg
les
push
ljmp
fmull
scas
dec
icebp
xchg
adc
mov
into
add
push
loop
jns
in
add
in
dec
aad
xor
loope
in
sarb
or
in
xchg
and
add
mov
jnp
push
lret
push
mov
xchg
push
sub
xor
push
or
divb
xchg
decl
jg
sub
gs
xor
lret
and
adc
je
push
aad
insb
lods
jo
mov
mov
test
mov
xchg
inc
mov
jl
cmp
and
cmp
mov
sub
cwtl
mov
sub
enter
mov
sub
pop
cld
bound
pop
sbb
fwait
adc
shll
inc
sbb
push
jnp
lds
out
je
ret
sbb
lcall
int3
andb
cmp
test
push
add
add
cmc
cs
dec
inc
fwait
sbb
mov
mov
sbb
xor
mov
sub
test
push
fs
and
pop
jno
insb
test
test
adc
aad
into
jns
adc
inc
jmp
test
and
inc
cmpsb
push
mov
pop
push
arpl
mov
mov
hlt
stos
pop
push
inc
add
shl
adc
jbe
mov
or
mov
add
mov
shrb
mov
xchg
jne
dec
jg
push
and
rorl
sub
data16
fsubs
mov
jne
outsb
mov
movaps
add
jbe
pop
or
mov
aaa
pop
cmpsb
sub
lods
jns
inc
xor
rol
mov
ret
sbb
mov
dec
pop
std
pop
jle
loope
push
imul
test
and
mov
pop
mov
cmp
dec
mov
jle
dec
and
dec
or
repz
andl
dec
sahf
aas
out
fstpt
inc
inc
movsl
jle
sub
jecxz
ret
fmuls
mov
jg
xor
inc
push
push
mov
push
ds
pop
cmp
inc
dec
mov
fbstp
sub
jnp
iret
add
sub
je
mov
andb
inc
push
lock
dec
fisubrs
pop
adc
repnz
daa
ret
dec
rsm
and
cmp
fidivl
lret
inc
call
out
mov
mov
shlb
pop
fwait
and
rcrl
sbb
es
push
mov
sub
bound
out
aaa
cmpsb
shr
jae
xchg
and
pop
sbb
mulb
add
out
jno
out
test
insl
call
adc
and
icebp
inc
pop
dec
push
rorb
in
cmp
push
jmp
sarb
sbb
mov
fisubl
fnsave
push
xor
mov
add
jg
adc
test
and
cmp
jne
les
fisubs
aam
xor
adc
jp
adc
call
fidivrs
insb
xchg
test
sbb
movsb
mov
sub
push
pop
rolb
mov
and
xorb
mov
mov
movsb
jae
into
stos
push
pop
push
sbb
sbb
jnp
pushl
mov
in
pop
into
fsubrs
pop
int
stos
push
rorl
pop
popa
cltd
stos
lahf
adc
out
xchg
dec
loop
and
jmp
mov
fcoms
enter
jp
dec
mov
fisttps
daa
add
out
cmp
hlt
push
mov
inc
dec
lahf
jbe
fbstp
push
pop
lock
or
pusha
xchg
insl
mov
push
or
test
sti
inc
sbb
out
test
jmp
pop
jae
rol
out
push
xor
cmp
sub
outsl
lret
inc
lock
xor
lret
mov
push
sahf
pop
lods
pop
jns
push
push
jb
dec
pop
insl
es
dec
inc
or
testl
les
cmp
loope
dec
cmp
mov
loop
mov
dec
stc
test
outsb
fwait
std
scas
sub
popf
rcl
jp,pn
lods
pop
push
xchg
jbe
mov
aaa
sub
sub
insb
jg
sahf
mov
in
cmpsl
jecxz,pt
jmp
push
aaa
das
fiadds
or
jne
add
adc
pop
sbb
sbb
push
jnp
push
ja
sub
test
mov
int3
test
cltd
in
nop
fdivp
or
mov
mov
add
pop
or
mov
lret
pusha
frstor
inc
lods
cmp
pop
imul
lcall
je
pop
dec
and
mov
adc
lods
xchg
sub
clc
cmp
sub
test
repz
sbb
lods
aam
add
or
sti
lods
aad
pop
fucom
sub
rcr
mov
mov
cmp
sbb
into
out
aad
rcrl
movsl
clc
cld
nop
mov
clc
outsb
and
mov
xchg
rcrb
mov
je
cs
cmpsb
mov
cld
stos
dec
in
add
mov
sbb
dec
es
aad
xchg
jmp
imul
lods
fstl
xchg
xchg
rcrb
lods
fwait
sub
stos
popf
jb
out
xor
inc
xchg
sbb
inc
adcb
rcrb
push
xchg
jns
pop
mov
push
sbb
mov
mov
cmp
mov
rorl
ja
cmp
mov
pop
adcb
mov
xchg
nop
cmp
pop
cmp
jns
ret
aam
push
mov
mov
xchg
add
add
sbb
clc
jae
or
jecxz
negb
inc
and
and
rcll
mov
ss
mov
lock
xchg
shlb
or
int
jb
dec
ss
mov
cmp
lods
aam
add
xor
pop
jns
inc
push
push
xchg
mov
ss
lods
in
lret
test
shr
xor
rol
mov
mov
lahf
mov
jl
xor
cmp
mov
mov
lcall
fstl
mov
arpl
pop
fwait
dec
xor
in
hlt
in
inc
gs
rcrl
lds
xchg
push
jl
xchg
fucompp
lcall
add
or
and
dec
and
fistl
loope
js
sbbl
cltd
rcrb
pop
xor
fadds
inc
pop
cmp
dec
imul
or
cwtl
push
mov
mov
sbb
subl
pop
fbstp
sbb
call
mov
xor
mov
mov
mov
sub
xlat
mov
loopne
push
flds
inc
xchg
dec
test
xchg
or
adc
push
icebp
inc
das
jnp
int3
pop
ljmp
popl
aad
lods
popf
push
fdivrp
inc
decb
inc
or
jae
sub
fs
xor
outsb
js
xor
push
lcall
or
scas
lock
mov
scas
push
push
das
pusha
push
andb
xchg
cmpl
ja
sub
das
sbb
sbbb
and
in
xchg
insb
cmpsb
mov
pop
add
xor
test
lahf
stos
inc
rcll
sub
push
xchg
int
mov
jne
cmp
ds
ljmp
push
lahf
push
out
icebp
inc
jbe
mov
pusha
ljmp
pop
movsb
adc
jbe
mov
movsb
pop
mov
push
fsubrl
ss
mov
dec
leave
movsl
int3
leave
shll
mov
jns
ret
daa
loop
cmp
imul
fcmovnu
clc
int3
jp
outsb
push
sub
stos
xor
lods
mov
xor
add
jg
cmpsb
push
mov
push
std
mov
mov
xchg
dec
faddl
in
pusha
aad
call
pop
shlb
shr
les
jmp
and
jnp
cmp
popf
lods
push
jle
add
stos
pop
jmp
cwtl
mov
sbb
adc
cmp
xchg
pop
popa
and
sbb
push
addr16
enter
ret
lcall
fstpt
inc
add
lds
mov
lock
cmpsb
adc
xchg
cmp
pop
aad
inc
in
xchg
jnp
call
inc
loope
cmp
aad
lahf
ret
insb
jnp
sahf
mov
ret
xor
push
jne
cmp
dec
or
or
adc
imul
jbe
pop
rcll
sub
outsl
dec
mov
mov
mov
outsl
and
mov
push
lahf
int
push
add
cmc
inc
jbe
stc
xchg
sub
cmpsl
mov
dec
int3
jg
jno
adc
jnp
lcall
mov
and
jl
sbb
jae
test
inc
sbb
mov
idivb
jo
fiaddl
add
push
xlat
orb
lods
in
in
mov
xchg
pop
adc
mov
sahf
fistl
test
xor
sbb
and
and
int
cmp
cmp
scas
sbbl
add
addr16
mov
mov
xor
mov
in
inc
not
lahf
and
outsl
push
xchg
inc
es
cmpsl
mov
imul
xor
int3
das
jns
sbb
lods
mov
arpl
or
sub
js
push
mov
or
out
pop
cli
inc
add
or
push
cwtl
mov
scas
push
pop
popl
push
jmp
mov
jl
rcll
vandpd
lds
mov
mov
adc
mov
and
sti
sbb
movsl
loopne
cmpsl
sbb
sub
jl
sahf
dec
adc
dec
icebp
roll
adc
sti
cmp
pushf
mov
push
test
and
inc
sub
vxorpd
jmp
imul
pop
insl
cwtl
repnz
mov
adc
ds
arpl
dec
nop
fldl
popa
popf
loope
xor
imul
cmp
aaa
fnstenv
call
addr16
jmp
or
cmp
jge
and
push
sub
pop
push
nop
inc
stos
pop
xor
dec
xchg
mov
adc
sub
mov
and
cmpsb
sahf
inc
movsb
xchg
jnp
mov
ret
mov
push
pop
cmp
test
xchg
xchg
or
mov
adc
lcall
or
out
jp
pop
and
sub
mov
mov
fdivl
sti
xlat
sub
data16
and
xor
movsb
sbb
out
iret
cwtl
adc
pop
mov
mov
mov
sub
xor
mov
test
adc
testl
add
addr16
xchg
sub
pop
mov
nop
shll
and
pop
sahf
pop
fadds
les
inc
je
fs
rclb
neg
call
int3
fwait
insl
or
xchg
push
imul
outsb
test
daa
pop
imull
jbe
inc
loopne
loop
mov
mov
xlat
paddq
xchg
test
xor
in
lahf
sub
jb
push
xchg
xchg
cmp
lcall
mov
fstpt
mov
cmp
inc
dec
pop
popa
xorl
aas
mov
das
jl
dec
push
push
mov
out
jp
jnp
push
inc
and
movsb
bound
sbb
sub
jae
nop
shrb
js
lret
sbb
in
ret
sbb
jne
lods
pop
xchg
loope
wbinvd
dec
mov
outsl
mov
frstor
mov
fstpt
inc
dec
movzwl
in
dec
adc
mov
or
mov
shlb
sub
mov
lods
mov
inc
movsl
into
dec
inc
jle
pop
sbb
push
sbb
jp
insl
mov
cmc
cwtl
test
mov
lret
out
fstpt
jmp
add
std
pop
outsl
and
jnp
mov
adc
xor
ret
add
push
add
mov
pop
mov
aam
stc
insb
adcl
fs
mov
cmp
cmp
sahf
jb
push
hlt
mov
xor
in
test
inc
cmp
shr
fstpl
dec
sbb
fistpl
sub
add
repnz
test
xchg
mov
orb
pop
fbld
add
mov
or
jnp
rep
lret
out
and
mov
pusha
call
repz
jbe
dec
mov
cmp
fnstsw
xor
add
and
pop
jo
cld
dec
cmp
push
push
push
mov
adc
sbb
loop
out
add
divl
es
xchg
rcrb
add
jge
and
adcl
fstpt
push
mov
or
push
or
enter
push
scas
cmp
cmp
movsl
inc
dec
sub
lcall
push
loop
add
ror
fldcw
in
testb
jecxz
dec
cmp
fisttps
repz
dec
xor
mov
movsb
adc
push
jno
cvttps2pi
xorl
sub
arpl
mov
jge
xor
aad
sub
mov
xchg
push
movsl
lcall
stc
je
orb
fs
xor
movsb
cmc
jnp
push
jae
movsl
mov
jo
or
mov
sub
mov
clc
movsl
jmp
mov
ret
xchg
pop
ss
icebp
pop
pushf
dec
movsl
test
adc
or
adcb
stc
push
and
mov
or
std
insl
les
or
dec
jne
ret
and
mov
push
shr
iret
hlt
xchg
add
hlt
test
je
sbbb
xchg
insb
mov
dec
imul
ret
aam
pushf
xchg
scas
adc
sahf
aaa
cmp
push
shll
or
lock
int3
adc
pop
lcall
sbb
push
mov
xlat
and
sub
stos
jecxz
scas
sbb
addr16
je
clc
mov
pop
lret
addl
jns
jno
jae
shll
jne
mov
cld
sahf
jecxz
subl
ja
add
fistps
fsubrs
mov
xchg
sbb
or
dec
stos
lock
sub
nop
sub
xor
sbb
xor
call
xchg
adc
in
dec
dec
jp
xchg
mov
mov
cltd
imul
adc
stos
dec
or
mov
sub
test
jle
es
mov
xor
fidivrl
cmp
push
imul
cltd
mov
scas
outsl
mov
cltd
sbb
stc
cmp
sub
add
mov
add
in
dec
insb
dec
and
outsb
insb
fldenv
pop
das
adc
dec
jo
pop
and
lret
mov
pop
fs
push
sbb
dec
cmp
jae
ljmp
jle
inc
push
push
aas
test
insb
rol
mov
aas
rep
inc
pop
adc
rolb
add
mov
scas
popf
push
or
int
or
gs
pop
cltd
mov
cmp
sub
xor
push
inc
pop
nop
clc
jnp
in
jne
jb
mov
mov
in
test
jmp
sar
and
fwait
jne
fwait
fwait
mov
js
jns
stos
fsubrs
ljmp
test
lods
notl
and
xor
push
pop
aaa
xchg
xchg
hlt
rolb
insl
add
call
daa
jecxz
inc
dec
and
jge
xor
fs
cmc
test
jmp
mov
sub
cmp
sub
sub
or
cmc
mov
pushf
negl
cmc
out
call
mov
cmp
test
out
daa
add
xor
lods
ret
mov
stos
add
iret
push
sbb
imul
pop
popa
lret
jns
cmpl
pop
adc
sub
loope
or
test
pusha
ljmp
push
cmpb
outsl
xchg
dec
and
xchg
pop
add
mov
leave
setbe
fsubs
cld
jecxz
out
outsl
inc
inc
test
xchg
scas
or
mov
repz
adc
jae
fldln2
mov
dec
addr16
jmp
push
mov
mov
fdivrl
push
loop
filds
mov
fs
pop
test
xor
lea
frstor
mov
inc
popa
cli
cld
icebp
or
lahf
push
div
sub
sarl
sub
repnz
pop
jnp
sbb
es
lret
push
add
mov
cs
xlat
lahf
xchg
xor
sub
cmp
mov
imul
icebp
test
and
jecxz
imulb
mov
xorl
arpl
xor
flds
enter
subb
daa
cmpsb
mov
es
ja
mov
test
inc
push
inc
cmp
xor
shll
cli
lock
dec
push
lock
adc
shrd
insl
aas
test
dec
pop
inc
push
cmpb
dec
add
mov
xchg
xorb
push
imul
stos
loop
push
and
rcrl
xlat
in
dec
jbe
ljmp
punpckhbw
xchg
adc
mov
loope
icebp
ds
lcall
and
pop
mov
cmp
and
push
adc
fbld
fwait
imul
ficoml
xor
fwait
jo
adcl
adc
xchg
insb
lods
adc
in
push
pop
jle
cmp
sti
cmc
in
push
arpl
cmp
ja
hlt
push
lock
adc
adc
xchg
xchg
cmp
subl
out
mov
and
dec
cmp
mov
fcoml
mov
pop
arpl
jle
mov
lods
ror
cmp
adc
and
or
jle
repz
fdivrl
adcb
jmp
in
int3
cs
into
adc
push
push
xor
cmpsb
stos
cmpsl
push
mov
and
dec
cli
fs
mov
jbe
cmpsb
jno
add
sarl
mov
push
div
subb
scas
mov
inc
cwtl
lea
inc
dec
je
xor
mov
mov
into
dec
icebp
lret
lock
mov
add
or
orb
pop
fisubrl
mov
push
fucomi
call
or
sbb
mov
ja
push
lods
or
popf
mov
jno
call
mov
cmp
shll
mov
inc
mov
fptan
fisubl
mov
dec
inc
js
sbb
cs
cmpsl
jnp
imul
sahf
repz
fnstenv
out
shll
test
and
inc
lcall
xchg
push
loope
shlb
sub
sarl
mov
mov
jle
nop
aam
cwtl
clc
leave
ss
mov
jle
cmp
inc
shl
inc
push
jmp
cltd
jmp
vpsllq
push
mov
test
bound
push
aam
sti
adc
icebp
pusha
insb
add
and
lods
mov
inc
cmp
push
push
lods
adc
scas
sub
iretw
pop
inc
lahf
xor
add
pop
pusha
clc
clc
fs
jge
lds
inc
and
mov
jp
or
add
pop
faddl
fadds
push
mov
sub
lea
stos
icebp
cltd
sbb
mov
or
cltd
loopne
mov
rcr
test
shlb
mov
insl
inc
dec
jle
inc
cmpsl
push
push
sub
and
mov
inc
es
rcr
sub
jne
sub
jmp
dec
xchg
fsubr
mov
hlt
lcall
cld
mov
punpckhdq
imul
lods
sub
adc
leave
fdivl
pop
ds
scas
roll
pop
push
bound
inc
insb
into
lret
jecxz
shrb
and
jbe
and
cwtl
jb
call
inc
into
scas
add
lcall
test
push
mov
xor
push
fistps
hlt
daa
movd
in
test
jp
mov
addr16
imul
xlat
out
movsl
arpl
xchg
or
sbb
icebp
dec
and
xchg
in
adc
sbb
xlat
dec
push
jecxz
fsubrl
mov
lret
cmpsb
out
cmpb
in
jno
sbb
lcall
ss
scas
nop
in
call
jecxz
loop
xor
mov
lcall
mov
or
movsl
inc
mov
inc
js
cmp
and
jno
add
call
fildl
div
jle
addb
xchg
xorl
and
syscall
add
imul
ss
dec
iret
sbb
divl
mov
xchg
insl
stos
hlt
sbb
pop
dec
andl
mov
popa
ljmp
jo
and
fdivrs
add
jb
sub
cmp
sti
popa
cltd
xchg
and
mov
cmpsb
lahf
int
add
jle
jmp
out
xchg
xchg
scas
mov
inc
adcb
lock
jl
mov
cmp
js
cwtl
fs
inc
jb
cli
xchg
push
outsl
aam
in
jp
shll
sbb
test
xor
decl
filds
cmp
cmp
test
mov
out
or
outsb
stc
out
sbb
inc
jg
add
push
out
sarl
loopne
clc
bound
inc
sub
out
sbb
iret
pop
push
adc
sub
mov
lods
cmp
cli
mov
std
movsb
insb
xchg
xchg
or
add
psubw
dec
mov
inc
add
or
test
lahf
bound
js
mov
xchg
push
jp
inc
js
push
push
and
jne
out
jmp
pop
mov
pusha
jb
and
cmp
mov
cmpl
jmp
xchg
mov
mov
pop
or
dec
lahf
push
cmp
xchg
jecxz
mov
adc
aad
or
xchg
out
push
fdivrl
mov
pop
sub
xor
pop
pushf
dec
push
or
insl
fcomps
cmp
leave
out
sbb
adc
pop
out
sub
xor
mov
push
out
mov
pop
dec
ds
add
stos
loopne
adc
pop
inc
xor
and
inc
pusha
lea
add
hlt
aam
mov
cmpsb
lea
add
data16
jno
stos
push
mov
imul
sub
pop
das
enter
stos
in
mov
adc
es
popf
pushf
dec
jl
aaa
mov
sar
aaa
sub
lods
mov
adc
lahf
dec
clc
cs
mov
push
dec
ret
js
enter
cmc
push
sbb
inc
and
push
cmpsb
pop
clc
xchg
dec
fsubr
jecxz
jmp
icebp
pop
push
out
push
jb
or
call
insl
push
xchg
pop
or
je
insb
daa
cmp
mov
and
adc
in
pop
mov
inc
lock
xor
inc
lds
sti
aas
movsl
jle
aad
lods
inc
imulb
popa
loope
lret
bound
jmp
or
pop
sahf
xchg
pop
sahf
and
es
sub
clc
jge
pop
notb
lahf
sbbl
push
mov
das
mov
fbstp
js
xor
insb
fs
add
mov
mov
ret
ret
pop
lock
dec
loopne
es
pusha
mov
jns
mov
frstor
dec
xchg
xor
pop
bound
jbe
pop
lock
xchg
or
mov
pop
lods
daa
mov
lods
incl
xor
push
out
call
sti
andb
or
test
aad
xchg
sub
mov
stc
dec
mov
bound
ja
insl
repnz
rorl
repnz
pop
scas
jb
xor
inc
xchg
sub
les
jecxz
in
jmp
mov
jb
imul
nop
daa
mov
addr16
int3
arpl
out
xchg
sub
mov
or
lahf
pop
stos
sub
fsubrl
es
jnp,pn
fldt
pusha
idiv
mov
js
push
hlt
mov
and
into
hlt
mov
cltd
cmpsb
cmp
inc
in
scas
sbb
ds
mov
test
mov
ss
aam
in
push
js
lea
loopne
pop
scas
cli
xchg
fdivrs
test
and
mov
incb
adc
adc
enter
xchg
jmp
dec
loop
xor
popa
outsb
psubb
mov
addl
jp
pop
add
cmp
xchg
add
es
fstps
es
mov
ficoml
add
cmp
pop
add
cmp
or
leave
cli
xchg
repz
pop
scas
loopne
pop
mov
add
push
cwtl
pop
or
jecxz
rclb
test
add
sarb
pop
mov
mov
test
cmp
fcomip
mov
test
push
enter
cli
xchg
xchg
cmpsb
cmp
xor
jnp
cmp
pop
inc
fiaddl
test
push
shl
enter
push
ljmp
mov
aas
fcomps
enter
jnp
pop
inc
in
jg
sbb
ficompl
add
and
pop
addb
jp
lea
fwait
loop
xchg
es
and
shlb
xchg
jnp
cmp
lret
pushf
jmp
in
dec
in
call
xor
jo
addr16
insb
xchg
imul
mov
lock
fldenv
mov
popa
and
add
rcrl
xchg
sub
push
adc
repz
jae
pop
lods
outsb
std
xchg
cwtl
into
movsb
cmp
mov
cmpsb
cmp
cmp
pop
xchg
sub
test
pop
repz
es
dec
sbb
fcomps
sub
and
jbe
push
inc
adc
jge
inc
fisubrs
or
xchg
mov
push
out
aad
lcall
mov
mov
fxam
jl
xor
jmp
pop
pop
and
test
pop
movsb
leave
inc
xlat
icebp
push
jmp
adc
dec
and
pop
insb
testl
loop
xchg
cs
xchg
and
adc
cmpsl
push
cmp
add
pop
mov
mov
jb
sti
lods
cmpsl
test
loopne
aaa
into
clc
add
cmp
lea
gs
sub
faddp
or
sub
sbb
dec
fbstp
mov
sahf
xchg
dec
loop
sarb
adc
ss
ljmp
mov
sub
jmp
xchg
adc
lahf
ss
xor
adc
xchg
pop
pop
mov
fldcw
mov
aaa
and
pop
push
mov
outsl
cmpsb
mov
hlt
in
scas
inc
add
cmp
aaa
and
lahf
pop
push
pushf
xor
mov
xor
decb
jo
dec
push
pop
icebp
lea
xchg
lods
popf
xor
mov
pop
in
clc
stos
inc
and
sbb
jnp
jg
sbbl
jecxz
xor
add
cmp
mov
imul
mov
inc
xlat
dec
loope
add
xor
pop
mov
test
scas
movsl
dec
iret
pop
hlt
idiv
pop
scas
sub
inc
fiaddl
call
xor
mov
dec
fists
ss
into
jo
stc
mov
popf
xor
jmp
ds
mov
xor
sub
mov
xor
fsubr
test
adc
aaa
xchg
jo
xchg
sub
mov
inc
ficoms
push
jmp
jno
popf
xor
xchg
pop
xchg
sti
xchg
fwait
and
jns
adc
test
xchg
and
mov
inc
fstl
aam
and
shrl
xchg
xchg
sub
je
dec
movsl
call
mov
dec
ja
cwtl
das
inc
cwtl
hlt
mov
shrb
repnz
in
adc
inc
xchg
sub
lret
popa
push
jmp
in
or
out
inc
fisubrl
insl
add
nop
inc
xlat
leave
bound
cltd
ljmp
lock
test
jbe
mov
inc
xchg
cmpsb
cmp
xchg
in
dec
adc
aam
push
mov
jg
push
sbb
or
and
and
stos
inc
jge
jns
fs
lcall
xchg
sub
cs
dec
enter
mov
cld
mov
enter
clc
xor
fwait
push
pop
mov
mov
ds
rcll
adc
xor
mov
cmpl
push
idivb
pushl
daa
push
andl
dec
movsl
inc
ja
mov
fistpl
loop
sub
add
mov
aaa
xor
insb
xchg
inc
in
andl
sbb
sbb
cmp
sub
mov
test
pushf
sub
and
push
je
dec
stos
jge
fwait
movsb
int
cli
lret
sbb
notb
das
mov
pushf
addr16
movsl
out
mov
fsubr
add
aam
add
outsl
popa
push
xchg
push
insb
stc
nop
mov
jle
jecxz
sahf
daa
xor
pop
scas
aaa
xchg
test
icebp
xchg
aad
iret
push
sub
and
and
fbld
dec
push
cmc
je
out
ja
pushf
andl
adc
cmp
test
pop
cmpsl
mov
fisubrl
aam
cli
or
pop
adc
sub
outsb
inc
imul
mov
leave
outsl
push
add
mov
cs
jecxz
xorl
mov
in
jmp
in
aas
pop
outsl
or
inc
push
mov
lret
mov
mov
sbb
jb
and
mov
push
je
test
mov
rcr
or
mov
add
aas
mov
jp
outsb
lods
inc
movsb
mov
loop
testl
adc
xchg
test
sub
add
loop
fisubrs
inc
movsl
push
lea
jns
shll
xchg
int3
sbb
movsl
dec
push
push
das
leave
jge
fstps
sbbl
mov
ret
add
jno
xor
sbb
arpl
lret
scas
add
pushl
cmp
fisubrs
mov
mov
jge
sub
jne
mov
decl
cmp
push
mov
dec
adc
push
mov
dec
cmc
test
adc
cli
inc
adc
push
mov
xchg
aam
lods
push
mov
fxch
jne
push
daa
leave
jb
call
or
lcall
shr
sub
mov
dec
icebp
push
mov
or
and
pop
gs
mov
and
adc
les
sub
push
fs
data16
pop
popf
scas
rolb
mov
xlat
or
dec
pop
cmp
xchg
ja
enter
sub
cmpsb
pop
sbb
jmp
test
testl
aaa
aam
pop
jecxz
push
sub
mov
push
aad
jnp
xor
std
addl
rcrb
xchg
sub
cmp
fisubrs
mov
cld
mov
mov
loopne
sbb
jno
andb
push
movsl
cmc
xchg
into
inc
fxch
pusha
or
ficomps
mov
sbb
adc
rcrl
mov
popa
ret
and
mov
out
addr16
cmpsb
pop
mov
cmp
and
pop
mov
les
lods
sbbl
insb
and
xor
mov
testb
push
fsubs
adc
popf
xor
dec
cli
xchg
jle
les
lahf
and
rcrb
mov
sub
and
js
jne
scas
inc
xor
push
dec
in
jmp
imul
cmp
insl
stc
mov
sub
cmpsl
ds
inc
pop
lods
lds
int3
arpl
jecxz
and
add
dec
xor
mov
dec
daa
mov
mov
inc
fld
rcrb
or
push
out
sbb
adcb
cmp
mov
les
mov
mov
adc
jecxz
jae
mov
sbb
adc
cld
lea
stos
inc
aas
out
pop
repz
jo
push
push
jb
call
cs
fld
pop
cld
lea
mov
sbb
sub
adc
ss
repz
lcall
cmpsl
mov
xchg
hlt
mov
and
inc
mov
xchg
xorb
add
lea
fstps
scas
inc
dec
cld
test
push
mov
rcr
test
or
xchg
iret
mov
adc
fbstp
cli
inc
ficomps
ja
adcb
sbb
sbb
hlt
sub
adc
xchg
sub
pop
mulb
mov
xchg
xorl
loopne
popf
xor
add
lea
xor
dec
add
adc
ss
or
das
lods
fmul
inc
out
jmp
pop
ret
das
add
arpl
loope
jnp
shll
fwait
xor
pushf
jmp
push
cmpb
out
jo
fdiv
push
adc
ret
hlt
cld
adc
cmc
mov
push
iret
cmp
cmp
xchg
lcall
clc
in
cmpsb
xor
mov
lahf
lret
out
js
jb
mov
in
mov
fiadds
sub
jp
inc
xlat
pop
fwait
jle
or
mov
in
test
dec
into
jmp
jge
jp
cmp
int3
pop
sbb
fisttps
cmp
fs
jmp
jge
xchg
in
add
add
and
lahf
adc
and
shrl
xchg
mov
fstps
xchg
int3
sub
das
pop
in
fbstp
jae
in
movsb
inc
fidivl
lds
scas
iret
sbb
andb
inc
xlat
fwait
inc
sub
je
mov
popa
leave
setp
inc
ljmp
xchg
cmp
pop
outsb
mov
cmp
mov
mov
insb
push
and
divb
mov
aad
push
cwtl
ficoml
enter
adc
dec
xchg
rol
xchg
push
lods
and
jp
sub
bts
ficompl
loopne
imul
aas
call
sub
loopne
cld
push
xorl
mov
pop
repz
mov
dec
cli
loope
adc
mov
inc
push
imul
add
stc
xlat
inc
mov
ret
push
aad
out
fdivrl
push
pop
fidivs
popf
je
dec
sbb
lret
int
fwait
push
xorb
push
icebp
rcll
aaa
orb
jns
enter
loope
mov
bound
shl
mov
sbb
mov
out
inc
loop
cltd
je
adc
push
xchg
cld
jle
add
mov
insb
pop
sbb
sarb
cmpl
arpl
scas
mov
jne
cmpsl
pop
xchg
test
xchg
out
lcall
dec
pop
popf
shll
mov
popf
xchg
mov
mov
xor
dec
sub
pop
cltd
loopne
cmp
mov
mul
adc
pop
test
clc
cmp
mov
pushf
dec
mov
psrad
adc
jns
mov
hlt
outsb
mov
test
pop
cld
shlb
jno
das
bound
divl
stos
inc
push
lahf
testl
sub
call
out
dec
clc
cmp
out
ret
sahf
mov
mov
pop
scas
push
inc
fildl
mov
mov
push
out
filds
paddb
out
daa
loopne
pop
out
lea
jb
push
movsl
in
dec
xlat
int
cmpsl
std
push
loope
mov
testb
mov
fsubrs
inc
xor
xor
pop
lock
inc
pop
lock
insb
mov
int3
pop
lock
dec
pushf
xor
pop
insl
dec
push
mov
inc
arpl
xchg
jae
jo
rcl
repz
or
lret
or
lods
xchg
dec
jno
cmp
inc
mov
xor
push
in
dec
xor
mov
aad
lret
lds
or
push
jb
inc
sbb
aad
mov
repnz
das
sub
lahf
add
or
pop
xor
nop
adc
inc
xchg
lock
mov
adc
add
fnsave
in
ss
icebp
mov
mov
push
arpl
xor
cmp
push
push
push
aad
sbbl
or
dec
cmp
cmp
adc
add
jae
mov
adc
cmp
xor
adc
fidivrl
xchg
insb
dec
push
inc
mov
pop
xchg
jmp
leave
bound
inc
fisubrl
fsubrl
iret
fdivs
pop
jae
jle
push
sub
hlt
xorb
mov
dec
loope
insb
movntq
mov
pop
push
test
mov
lods
movsb
int3
fbstp
into
mov
add
push
in
pop
xor
test
ret
cmc
pop
pop
repnz
sbb
inc
fdivr
gs
xchg
lcall
scas
out
shlb
out
insb
add
sbb
data16
arpl
dec
mov
mov
mov
mov
xchg
sub
mov
lret
cmp
adc
pop
pop
sahf
dec
push
jb
xchg
adc
xlat
out
or
dec
aas
in
or
xchg
jl
xchg
scas
repz
ror
arpl
or
push
jnp
xor
test
sub
aad
fidivs
mov
jb
sub
repnz
inc
adc
movl
and
pop
aaa
imul
aas
repnz
jecxz
sbb
xchg
sub
pop
lods
inc
push
out
leave
sbb
insb
fs
cmpsl
cmp
jecxz
scas
jmp
mov
dec
gs
jno
lea
mov
aad
mov
or
jae
xor
xor
xor
mov
rcl
insb
add
cwtl
das
pop
jb,pn
popa
fwait
int3
arpl
adc
es
mov
or
in
push
testb
in
aam
ffreep
xchg
sub
push
mov
xchg
pop
xor
dec
ret
fidivl
addr16
cwtl
test
push
sbb
repz
push
push
scas
inc
sub
inc
popf
loopne
adc
adc
or
in
cmpl
jnp
sub
pop
icebp
mov
lea
cmpl
lea
and
xchg
clc
repz
jl
lea
mov
stos
and
aaa
repz
pop
and
jae
test
popa
clc
mov
push
popf
jmp
add
jecxz
imul
test
loop
or
sbb
test
cwtl
and
or
pop
push
in
pop
daa
mov
cli
dec
stc
nop
lock
nop
jecxz
add
aaa
call
incl
cmp
xlat
outsb
in
js
jns
cli
imul
stc
adc
jmp
std
lods
inc
out
imul
ljmp
add
dec
and
cmp
inc
fdiv
pop
shrl
sbb
jp
jnp
sbb
test
xchg
outsl
adc
repnz
mov
pop
dec
push
pop
testb
stc
lcall
pushf
out
pushf
xor
adc
aad
inc
fistpl
mov
jp
lret
mov
rcrb
mov
and
and
pusha
notl
aam
jne
pop
add
mov
pop
repz
mov
outsl
insb
sti
inc
fldt
jo
ljmp
aad
gs
test
push
and
pop
inc
mov
arpl
inc
fcoml
pop
sub
stc
jne
rclb
add
sbb
in
cmp
and
add
iret
push
rcrl
test
sbb
adc
fs
sub
pop
mov
pop
shll
cli
sbb
test
fwait
push
andb
jmp
inc
fisttpl
and
stos
inc
nop
addb
mov
out
mov
pop
pop
sti
xchg
mov
mov
iret
into
lds
test
sub
pop
ret
daa
mov
mov
lret
std
sub
mov
inc
js
or
jns
xchg
outsl
add
mov
pusha
pop
lds
push
popf
push
cmpsb
cli
fadds
add
and
cmp
rorl
cmp
test
jns
jecxz
and
notb
sbb
pop
or
push
mov
out
les
cmp
cli
jp
xlat
outsb
sbb
pusha
sub
push
lock
sub
jle
imul
lret
out
cmp
dec
loop
cmp
pop
lods
ds
xorl
lods
pop
lcall
push
in
ret
adc
ds
bound
cmp
cmp
mov
push
mov
adc
inc
lods
inc
jb
dec
out
pushf
dec
loop
xlat
pop
enter
sbb
cmpsb
jle
mov
fs
fwait
insl
mov
shlb
arpl
lret
bound
xor
es
dec
adcb
jmp
jle
lods
xor
loop
scas
jnp
and
ja
xchg
in
mov
pop
fdivs
aaa
sub
or
jge
lret
rolb
add
xor
jno
fmuls
push
loop
lret
popf
xor
and
adcl
cld
das
orb
mov
movsl
pusha
notl
pop
mov
add
fimull
mov
jae
lods
inc
pop
adcl
je
sbb
iret
and
ficoml
lds
cwtl
das
mov
stc
xchg
leave
stc
mov
mov
mov
cli
mov
mov
jecxz
in
pop
icebp
inc
push
test
xchg
mov
out
mov
pop
loop
mov
fimuls
cli
ds
add
mov
xchg
xlat
mov
inc
fdivl
pusha
test
pop
jmp
cmp
mov
scas
dec
sbb
ja
mov
mov
rclb
rcrb
testb
inc
sub
pop
lock
pushf
mov
push
jmp
or
insl
pop
mov
xchg
lea
mov
fnsave
test
sub
or
mov
pop
scas
lods
sub
mov
add
xor
lods
inc
push
push
imul
test
leave
jmp
cmp
inc
les
outsl
sub
pushf
popf
fidivl
mov
clc
xchg
es
add
inc
push
mov
pop
mov
lea
mov
in
sbb
rcrl
or
loopne
adcl
xchg
jecxz
inc
adc
aaa
into
imul
cmpl
mov
and
sub
je
inc
fnsave
aam
sti
add
dec
sbbb
xor
cmp
xchg
ret
push
sbb
xchg
cs
pop
fsubrs
cmp
imul
adc
vmread
lret
testl
movsl
dec
push
ds
mov
scas
adc
mov
push
jno
std
mov
leave
add
adc
ds
in
add
mov
leave
xlat
outsb
sti
adc
faddl
lds
mov
pop
lcall
mul
sub
loopne,pt
pop
rcrl
mov
aam
test
pushf
sar
push
das
repnz
js
inc
fimuls
lret
dec
in
in
mov
push
mov
pop
mov
das
mov
mov
mov
dec
out
pop
lds
call
pop
adc
push
cmpsl
and
pop
xchg
iret
sbb
sbb
scas
inc
pop
pop
add
fildll
ret
cmc
add
adc
ret
push
add
pop
mov
push
jecxz
inc
faddl
or
idivb
pop
adc
enter
rorb
std
xchg
jl
push
ljmp
hlt
mov
js
loop
xchg
sub
loope
inc
shr
xor
pop
adc
lea
shll
mov
mov
pop
scas
loope
clc
or
or
pop
pop
scas
mov
sub
sub
mov
lods
fwait
adc
and
xchg
lahf
movups
jmp
add
xor
movsb
pop
pop
xor
mov
mov
movsb
aam
xlat
lcall
xor
mov
mov
or
dec
aam
es
xor
or
mov
sub
mov
xchg
sub
movl
inc
mov
into
mov
rcll
jl
loop
aaa
adc
pop
xchg
aaa
into
outsl
mov
shlb
pop
call
add
sub
ds
jns
cs
aas
sbb
hlt
fistpll
rcrb
enter
out
aad
pop
imulb
ret
clc
cmc
call
nop
daa
dec
jmp
mov
addr16
mov
loopne
rclb
aaa
into
test
pop
out
aas
mov
lahf
sub
xchg
movsb
mov
jle
fidivl
and
hlt
pop
mov
mov
jge
jns
push
out
mov
pop
cli
out
xor
adcb
nop
add
fdivs
jmp
repnz
and
cmp
leave
dec
inc
fidivrs
jmp
sbb
adc
adc
push
test
fwait
push
filds
adc
push
cmp
outsb
insb
push
jo
mov
rolb
sahf
add
xlat
popa
sub
rcll
aaa
into
test
aaa
into
add
xor
movsl
cmp
aad
lret
lds
fs
cmc
xor
in
pop
mov
adc
cmp
push
shrl
rol
fidivs
test
sbb
jge
clc
pop
xor
dec
adc
mov
fwait
sub
mov
leave
pop
icebp
cli
mov
inc
sti
pop
bnd
cltd
xor
int3
ds
lret
push
ljmp
and
les
push
jmp
xor
and
jge
push
jmp
cwtl
fs
mov
aam
imul
push
popa
clc
aas
daa
es
js
dec
jecxz
xchg
pop
hlt
mov
and
add
loope
sub
lock
push
mov
lret
loop
loop
or
dec
es
nop
ds
loope
mov
and
push
sub
ret
pop
movsl
inc
pop
hlt
jbe
arpl
jbe
cli
xchg
shlb
xchg
data16
popf
xor
ja
xor
cmp
ja
ds
lahf
fdivl
lcall
sub
outsl
push
inc
inc
sbb
js
or
xor
sbb
xor
fsubrs
nop
pushf
xor
int3
imul
jmp
rcrb
mov
fdivl
cs
mov
movsb
cmp
push
jmp
mov
push
pop
dec
xor
in
imul
sti
xchg
or
nop
daa
lods
and
int
cmp
scas
std
int
out
enter
and
xchg
adc
adc
or
mov
and
push
cmpsb
push
out
sbb
sub
adcb
mov
repnz
inc
fstp
sbb
ret
dec
out
enter
lret
bound
mov
push
popf
sub
or
dec
pop
mov
dec
arpl
sahf
or
pop
dec
pop
lods
and
pushf
xchg
sbbl
dec
stos
lods
inc
fnstsw
xchg
insb
cmc
dec
loop
lahf
mov
addl
mov
frstor
sub
daa
pop
call
andl
jle
xchg
testb
daa
cmpsl
inc
fcoml
push
lods
inc
andb
mov
stos
stos
inc
sbb
jbe,pn
mov
shrl
rol
sub
iret
add
ja
lret
bound
ja
pop
push
imul
mov
mov
lods
inc
or
xchg
dec
loop
cmpl
scas
imull
call
jmp
rcr
adc
inc
inc
psllw
mov
leave
in
test
sbb
mov
inc
fdivl
int
insl
sub
sahf
sbb
nop
mov
mov
int3
add
add
sbb
lea
mov
leave
mov
xchg
sub
jo
shll
adcl
subl
lahf
loope
int3
arpl
scas
imul
add
push
mov
inc
push
lods
inc
mov
push
xchg
mov
dec
in
cld
in
xchg
cs
mov
cmp
and
or
aam
dec
out
xchg
in
fisubl
cmp
imul
sbbl
sub
fsubrl
push
loope
dec
loope
in
in
jg
test
fimull
mov
push
mov
lret
das
pop
mov
rorl
cmpsb
ret
daa
inc
fcomps
clc
in
out
movsl
out
jne
int
sbb
sbb
mov
daa
mov
mov
sarb
mov
push
in
and
icebp
mov
daa
mov
sub
lret
scas
xor
loopne
clc
jge
xlat
cs
xor
repz
test
repz
ret
add
out
xchg
sub
ja
sbb
test
leave
out
mov
mov
mov
mov
mov
into
gs
xlat
outsb
cmp
imul
lahf
lcall
mov
movsl
mov
incb
stos
add
xor
xchg
cs
dec
xor
jle
adc
lret
ja
loope
inc
adc
movsb
cmp
sbbl
dec
fnsave
out
mov
push
movsl
fisttps
outsl
inc
cmp
push
and
mov
aad
clc
or
and
push
mov
add
mov
lds
imul
inc
fstl
pop
scas
ss
js
dec
fnstenv
movb
cmp
and
lods
outsb
lds
adc
loope
enter
add
fbld
mov
mov
mov
xchg
sbb
jg
adc
xchg
and
sub
outsw
mov
pop
cmpb
or
sub
shl
imul
aas
mov
out
stos
test
iret
inc
or
jg
mov
mov
mov
jg
std
xchg
mov
sbb
pop
sarl
das
filds
ds
inc
dec
ds
jno
pop
jmp
adc
ds
or
lock
adc
les
xor
adc
inc
push
mov
test
mov
mov
cli
xor
movl
add
add
out
test
push
pop
jns
clc
icebp
leave
imul
iret
xchg
divb
das
pop
sub
sbb
sub
testb
pop
fstpt
jo
clc
mov
xchg
mov
cwtl
scas
int3
mov
lahf
mov
popf
stc
jle
ljmp
ret
stc
repnz
sub
push
and
xor
inc
pop
fmuls
dec
inc
add
pop
pop
add
cld
push
outsb
jp
lea
loop
push
jae
jnp
dec
push
enter
cmp
pop
xor
push
or
xchg
ret
adc
dec
mov
push
lcall
in
mov
mov
mov
cwtl
sbb
int3
mov
push
mov
mov
inc
add
xor
flds
insl
xchg
or
test
jl
loop
icebp
jmp
cmc
aam
scas
jge
push
and
popa
insl
xchg
popf
les
pop
dec
pop
jp
push
xor
cmc
push
shrl
lds
ljmp
sbb
push
stos
mov
push
jmp
and
mov
dec
sbb
cmp
ss
sbb
push
pop
out
mov
mov
or
mov
xchg
sub
lods
fnsave
mov
addl
shlb
push
outsl
push
test
mov
and
dec
mov
inc
sub
leave
popa
in
cli
xchg
and
jmp
scas
je
pop
sahf
mov
and
jmp
incl
xor
jb
div
stos
inc
and
xchg
sub
leave
pusha
jne
mov
sahf
xchg
out
enter
icebp
jmp
out
xchg
and
or
cs
clc
lcall
adc
pop
jne
stos
je
xchg
adc
ficoml
xor
inc
sti
scas
inc
sub
dec
int
loop
lahf
mull
jns
es
adc
js
int3
lods
inc
call
int3
arpl
sbb
jae
test
adc
fistl
xor
inc
cld
scas
inc
arpl
xchg
dec
int3
movl
fidivs
adc
push
ljmp
jno
js
mov
stos
test
adc
sti
pushf
mov
and
sarl
test
out
rol
pop
clc
icebp
testb
inc
adc
je
add
mov
push
out
adc
inc
cmp
imul
or
jl
pop
ret
inc
icebp
adc
or
mov
adc
and
or
and
cld
test
shll
push
xor
ss
mov
test
shll
stc
fildl
jb
sub
push
push
pop
insb
add
mov
and
mov
inc
xor
push
pop
mov
loop
bound
add
cs
push
mov
push
and
pop
mov
pop
icebp
stos
hlt
pop
hlt
and
inc
jnp
js
xchg
cs
cltd
cltd
xor
jae
dec
movsl
in
mov
push
shrl
aas
aad
jno
repnz
mov
insl
adc
push
shrb
icebp
aaa
das
push
mov
mov
inc
stos
mov
mov
lods
outsl
lds
cmc
popf
fdivl
data16
mov
and
nop
sbb
outsl
int
addr16
cmpsl
ret
int
js
sbb
clc
sbb
or
fwait
mov
dec
stos
sub
inc
cmc
popf
jae
icebp
lret
adcb
mov
loope
inc
into
jnp,pn
movsb
xchg
cmp
and
inc
fldl
inc
mov
aad
jno
fst
and
jp
mov
sbb
call
aas
jge
cmp
scas
sub
add
in
cmc
inc
cld
mov
pop
mov
sbb
pop
sbb
dec
jge
cli
lods
insb
popa
negl
sarb
and
xor
push
mov
rcr
divl
popl
repnz
adc
cwtl
adc
ljmp
in
aas
add
xor
jae
scas
push
insl
add
mov
nop
sub
icebp
test
es
dec
mov
enter
aam
add
lea
or
test
sub
jo
xor
add
mov
pop
in
sub
dec
in
dec
fcomip
mov
or
cmpl
push
mov
dec
jae
jae
mov
rolb
movsb
shr
pop
mov
outsb
aaa
pushl
sbb
loop
fnsave
dec
add
lcall
out
and
mov
shrb
int
sub
adc
insl
cmp
insb
in
je
pop
mov
xchg
les
in
adc
push
pop
xchg
add
int3
xor
jmp
stos
dec
mov
mov
sbb
repz
roll
mov
enter
addr16
and
in
jg
cmp
dec
mov
scas
push
pushf
push
pop
cmc
mov
enter
adc
xchg
out
outsb
or
push
mov
pop
int
xchg
mov
aas
add
test
popf
add
adc
arpl
add
push
loopne
ret
inc
fidivrs
push
lock
xchg
push
sub
or
leave
sbb
insl
jmp
adc
rorl
daa
or
lock
inc
or
jp
call
sbb
xlat
push
out
or
stos
inc
inc
stos
jle
fmuls
sbb
ds
jno
jmp
jecxz
cmp
push
repnz
jae
xchg
inc
jge
mov
ret
movsb
add
xor
notb
int3
in
jae
repnz
xchg
adc
out
clc
arpl
xchg
add
dec
cmovge
jnp
insb
pop
movsl
sub
arpl
or
push
xor
xlat
pop
in
sbb
pop
sub
data16
fsub
push
pushfw
psrlw
jge
xor
fiadds
or
xchg
push
adc
sub
mov
aad
jp
mov
and
jmp
ss
test
loope
in
call
cmpl
xchg
dec
sub
rorb
jo
and
aas
mov
loope
mov
push
icebp
pop
inc
sub
insl
frstor
dec
sbb
in
or
mov
js
fcompl
adcl
arpl
xor
pop
test
in
decl
xchg
repz
sbb
xchg
push
xorl
push
jo
mov
adc
mov
les
loopne
adc
incb
lds
push
mov
inc
popa
out
xacquire
push
sahf
or
or
cmp
adc
pusha
push
fdivs
sbb
mov
stos
pop
push
addr16
jnp
jg
push
lret
in
imul
testl
cwtl
aas
pop
das
imul
rcrb
mov
pop
lds
fmul
and
lcall
sbb
fldl
sbb
fbstp
in
jnp
cmpsb
pop
loope
lods
dec
add
lds
mov
mov
sti
push
add
add
push
in
mov
insb
cmp
movsb
mov
xchg
out
push
adc
pop
xrelease
test
inc
mov
sbb
jl
xor
jmp
push
ficoms
loop
pop
and
jecxz
insb
cmp
jne
jb
fs
loopne
add
jmp
mov
sahf
aad
jo
ds
dec
jno
scas
or
cmp
xor
int
std
push
repnz
push
adc
xor
jno
xor
out
mov
mov
cmp
rclb
or
ss
jp
lea
sub
xor
or
sbb
jbe
repz
mov
jo
cmp
push
mov
mov
shld
xor
jmp
adc
addb
mov
jno
or
cmp
jle
in
insb
mov
adc
push
adc
shl
lret
fsts
fwait
cli
insb
push
xchg
aas
fnstsw
aad
add
xchg
push
mov
cmp
adc
push
adc
out
pop
bound
or
jecxz
lods
aam
push
dec
or
xchg
enter
insl
jmp
insb
ljmp
mov
jnp
sub
cmp
mov
mov
jl
inc
adc
fs
xchg
add
inc
push
push
pusha
mov
out
popa
sbbb
jg
jle
and
and
cmp
movsl
mov
or
push
lret
fisubrs
ret
cmp
fs
scas
ret
push
xor
jge
jl
mov
push
clc
push
sub
push
xchg
das
and
orb
inc
or
inc
or
mov
inc
sbb
pusha
ds
pop
or
pop
roll
orl
stos
cmpl
test
or
push
fs
hlt
sub
cmp
push
mov
mov
cmp
pop
xchg
cltd
cmp
dec
or
mov
mov
pusha
cwtl
sbb
lods
loope
out
lea
xchg
fsubl
pop
bound
cmpsb
fwait
lahf
popa
inc
jg
sbb
xchg
lret
lods
jns
add
mov
push
in
add
add
shlb
xor
movsl
aas
mov
dec
add
in
and
mov
imul
dec
cmp
stc
rolb
mov
pushf
cltd
push
jmp
out
js
and
inc
in
stos
mov
je
xor
or
shufps
fadd
pop
lret
lahf
adc
ss
pushf
shrl
pop
xchg
cmpsl
sub
pop
push
sbb
xor
and
sub
add
loope
mov
xchg
pop
out
sub
push
loope
xlat
xchg
push
leave
xlat
outsb
mov
ret
mov
sti
pop
addr16
mov
sub
cmp
cmc
bound
hlt
sbb
imul
add
fldenv
push
rorb
fs
or
das
add
out
into
cmp
fildll
loopne
and
pop
into
add
mov
repz
test
mov
test
add
into
fnstcw
and
subb
sar
pop
cmc
pop
cmc
mov
jb
rcrl
test
out
cmp
out
std
xchg
and
rcrl
sbb
mov
mov
cmp
mov
lods
push
lret
xchg
enter
jmp
in
inc
jb
push
stos
cs
pop
dec
mov
add
push
mov
sbb
ds
into
ljmp
xchg
cmc
sub
int3
sbb
cltd
fidivs
or
sub
lock
dec
jecxz
adc
inc
sbb
dec
arpl
xchg
outsb
mov
mov
shll
cmp
pop
inc
pop
ret
pop
lea
jnp
scas
loope
loopne
add
xor
mov
test
movsl
cmp
mov
hlt
loope
pop
icebp
sub
jl
xor
push
lcall
test
mov
and
insl
das
inc
shrb
push
hlt
mov
mov
push
movsl
sbb
xor
push
loop
sub
and
not
les
aad
xchg
aam
les
xchg
insl
mov
pop
mov
cmpsb
jge
mov
mov
mov
add
xchg
shrb
fwait
mov
iret
out
mov
dec
xlat
in
push
mov
adcb
xchg
add
adc
adc
push
mov
int3
out
in
push
call
adc
testl
add
pop
testl
pop
out
arpl
out
cmp
sbbl
scas
and
inc
add
xor
fcoml
mov
cli
in
jge
push
sbbb
negl
aaa
mov
push
jl
mov
outsb
iret
add
je
lock
mov
push
sti
xchg
xchg
stos
je
sbb
stc
aaa
into
sub
dec
out
dec
push
in
jge
insl
add
sahf
jae
rorb
xchg
sub
loope
inc
adc
inc
ja
pop
cbtw
int
cltd
mov
cmp
mov
lret
sti
sti
cmp
push
dec
dec
pop
bnd
add
xor
shlb
or
stc
aad
lea
jae
scas
cmpsb
cmp
mov
jne
loopne
mov
filds
rcl
cmpsl
ds
adc
add
mov
loope
pop
repnz
cmp
fwait
push
pop
repnz
xor
jb
inc
incb
pop
bound
cld
in
jp
subl
stc
push
test
mov
xchg
jns
ja
pop
push
pop
cmc
dec
inc
lock
out
cmp
das
push
mov
mov
pop
xchg
dec
jp
xor
int
lea
cmp
imul
xchg
ljmp
es
lret
in
xchg
mov
insl
add
push
fsubrs
insl
fbstp
and
lds
shl
pushf
xor
adc
rolb
aad
sbb
mov
stos
mov
nop
mov
fistpll
push
addr16
jecxz
add
cmp
arpl
or
dec
in
lods
cmp
fisubrl
cwtl
das
pushf
jge
mov
cs
test
dec
lea
adc
xchg
xor
stos
push
outsb
add
data16
lahf
loope
dec
mov
mov
rcll
cmp
xchg
pop
aas
cmc
mov
rcl
insl
mov
fsubs
fnsave
fidivs
or
mov
pop
or
test
out
pop
xor
mov
mov
sbb
lret
mov
jmp
push
pop
pop
repz
stc
push
mov
rolb
cltd
or
adc
fdivs
or
enter
mov
cmpsb
add
pop
repz
jb
mov
movsl
add
dec
in
es
cwtl
iret
jnp
adc
mov
mov
jae
mov
cmp
push
jno
shlb
or
cmc
iret
gs
repnz
daa
mov
shrl
xor
pop
or
mov
fistpll
mov
repnz
mov
imul
pop
or
or
ds
sub
pop
pushf
or
test
mov
push
ljmp
and
push
dec
loop
jbe
mov
cmp
jo
mov
cli
movmskps
sbb
dec
push
scas
jno
and
sbb
mov
push
and
xchg
std
pop
xor
gs
pushf
xor
jmp
ljmp
push
mov
mov
mov
sahf
mov
cmp
xor
push
adcb
and
aad
pop
cld
or
outsb
int
push
clc
sbb
lds
cmc
mov
mov
mov
push
or
cmp
das
stos
inc
pop
pop
int
dec
clc
dec
in
outsb
data16
pop
mov
fsubrs
subl
test
lods
cmpsb
pop
cmc
pop
dec
dec
in
cmp
test
lret
mov
fucomp
xchg
sarl
inc
xlat
loop
stos
inc
sti
add
jae
xchg
test
xchg
fsubrs
outsl
fidivs
sub
fwait
cmp
or
ret
insb
add
aad
add
scas
jg
fidivs
mov
xchg
xchg
enter
es
fistps
mov
lods
push
in
sbb
ds
mov
js
xorb
montmul
cmpsb
test
sub
shrl
cmp
imul
dec
out
or
xchg
jp
dec
loopne
fwait
xsha1
cmpsb
or
push
out
xchg
sub
in
test
cmp
mov
imul
mov
or
test
ja
ljmp
lds
sbb
adc
mov
mov
les
push
xlat
adcb
adc
adc
mov
fdiv
cmp
sub
xchg
lock
out
test
adc
dec
ljmp
adc
push
jl
test
pop
lock
fcompl
pop
pop
lock
loop
xchg
jne
xchg
sub
push
xchg
sub
fidivs
pop
mov
cmp
jle
dec
dec
in
lods
movsl
cmp
popa
enter
je
cmp
xchg
sub
xchg
stc
and
cmp
aam
insb
cmc
lods
pop
icebp
push
popf
pop
repnz
push
test
out
and
sub
aad
mov
dec
call
or
bound
repnz
pushf
and
cwtl
cs
mov
shrl
mov
push
call
vmovhps
fnstcw
int3
arpl
mov
mov
add
sbbl
pop
cmc
mov
ret
hlt
mov
xchg
sub
jns
mov
fistl
cmpsb
mov
jle
out
cmp
mov
sbbl
mov
sti
xor
and
es
sbb
push
jmp
in
add
dec
mov
xor
ficoms
scas
or
lea
sahf
sbb
mov
fists
add
popf
xor
jecxz
or
add
xchg
sub
cwtl
xor
or
mov
test
inc
testl
jge
ds
or
loope
push
adc
outsl
jno
inc
fisubs
adc
clc
lds
pop
sbb
lods
xchg
sub
arpl
scas
aas
data16
mov
lret
bound
in
add
xchg
sub
mov
mov
call
or
jp
mov
test
das
adc
cmc
rol
mov
cmp
mov
push
sub
mov
into
fadds
pop
jge
jp
jmp
pop
icebp
ss
jle
lock
lahf
xchg
sub
mov
sbb
xchg
sub
push
push
out
inc
fcomps
leave
clc
lds
dec
jecxz
aad
shl
std
mov
out
xchg
daa
orb
xchg
add
cmpsb
sbb
mov
mov
fnstcw
lret
pop
jmp
je
push
stos
std
rclb
mov
mov
scas
inc
cmpb
jmp
adc
stc
nop
inc
xor
mov
jg
xlat
imul
into
mov
mov
loope
popf
xor
add
je
inc
fisubrs
sub
lea
decb
xor
imul
mov
dec
in
shr
push
xlat
stc
sub
lret
fldcw
mov
jecxz
jl
push
lods
mov
dec
loop
daa
inc
fdivl
ljmp
jno
in
aad
out
add
pop
xchg
shrl
mov
push
adc
pop
xor
outsb
pop
cwtl
ljmp
dec
insb
add
jo
lea
inc
cmp
mov
mov
dec
gs
rcrl
lea
dec
mov
pop
shrb
jp
xor
mov
jae
lods
fdivl
pusha
pop
inc
sbb
pop
cltd
nop
repz
insl
insb
add
in
test
int3
insl
fistpl
imul
cld
les
sar
xchg
add
loop
adc
sbb
xchg
add
gs
xchg
pop
lcall
pop
test
test
lods
fdivl
push
inc
faddl
test
neg
push
or
push
in
xor
adc
push
jo
inc
mov
arpl
es
push
in
jle
jns
cmp
mov
cmpsl
nop
sub
in
popf
sub
lcall
adc
ja
lock
ret
xor
shll
in
in
lock
rorl
cmpsb
mov
in
adcl
in
jno
adc
sbb
ds
mov
mov
xchg
cmp
lea
or
jb
pop
lock
mov
fcoms
add
mov
jnp
sbb
int
cmp
adc
ss
enter
add
cwtl
jno
lahf
cmp
fwait
xor
in
clc
sbb
mov
movsb
movzwl
xor
aam
sbb
mov
inc
in
and
adc
sub
push
mov
rorb
sbb
iret
xchg
sbb
dec
xorb
or
pop
sub
sub
inc
mov
xchg
mov
mov
aaa
lret
cld
ret
cmp
data16
lcall
mov
mov
xlat
adc
and
fldcw
cmp
xor
xor
lds
adc
insl
pop
or
dec
dec
sub
xor
xor
stc
ljmp
sbb
popf
pop
out
adc
xor
mov
sbb
mov
sub
stos
jp
je
jbe
jb
dec
push
or
dec
es
out
es
cmpsb
jmp
repz
out
adc
lods
or
icebp
into
push
or
mov
lcall
xchg
cli
pusha
roll
sbb
shrb
dec
adc
clc
xor
mov
adc
push
jmp
mov
or
or
insb
mov
xchg
incl
pop
repnz
pop
mov
pop
push
mov
dec
pop
icebp
aas
arpl
xchg
pusha
jno
cmp
adc
xor
mov
inc
push
pop
rcll
mov
inc
ds
jb
into
fs
mov
pop
imul
cltd
and
dec
cmp
xchg
sub
and
push
jno
mov
les
lds
mov
hlt
and
mov
pop
scas
imul
es
mov
ds
call
xlat
outsb
jp
iret
data16
dec
std
dec
int
dec
push
cltd
xor
shl
jl
outsl
fbstp
push
nop
daa
lcall
inc
sbb
mov
movsl
movsl
scas
inc
sti
push
mov
sbb
inc
lods
loope
stc
out
int
dec
das
adc
push
push
popf
xchg
mov
xor
enter
inc
jmp
sbb
in
mov
pop
hlt
sbb
test
pop
sahf
nop
leave
xor
cli
mov
shll
push
fidivl
or
outsb
jl
jno
and
ja
lret
mov
and
xchg
xor
inc
cmpsl
adcb
loopne
out
out
enter
push
in
sbb
inc
fdivr
addl
pop
mov
stc
mov
shrb
arpl
les
arpl
popa
push
into
and
daa
cmp
mov
aaa
or
out
xchg
sub
jl
addl
nop
daa
ss
sahf
xor
inc
xchg
cli
xchg
add
outsl
push
test
mov
push
and
xor
dec
into
gs
jnp
imul
mov
dec
mov
add
cmp
lea
sbb
lds
in
push
movsb
int
pop
shrb
std
xchg
or
fdivl
in
push
xlat
bsr
ret
pop
sub
lds
mov
jb
mov
repz
in
test
adc
push
stos
cltd
out
pop
sbb
jmp
jge
cmpsl
movsl
cmp
lods
insl
add
adc
rolb
insb
add
lods
xor
push
in
mov
jge
push
jmp
cmpsb
shrl
fs
ficoml
nop
or
sti
dec
pslld
xlat
outsb
pop
jo
adc
mov
imul
fbstp
pusha
or
aas
in
insb
ret
jge
lcall
pusha
divl
jl
icebp
sub
xchg
pop
adc
fcmovb
out
daa
xlat
mov
es
bound
pop
cmc
xchg
inc
mov
xor
mov
jmp
imul
mov
sbb
cmp
jne
shrb
lcall
shrl
pushf
nop
daa
adc
call
rolb
in
mov
pop
repnz
sbb
jg
xlat
sbb
aad
push
movsl
enter
repnz
sub
mov
xchg
xor
repnz
lahf
dec
jecxz
fs
lock
push
mov
push
and
mov
push
call
push
push
outsl
push
fs
stc
jne
out
xchg
xchg
sbb
and
push
jb
cmp
pop
xchg
out
sub
cltd
xor
lds
dec
and
mov
pop
dec
cmp
imul
icebp
sbb
scas
inc
ljmp
inc
cmp
pop
mov
mov
mov
inc
fisttpl
shrb
rorb
stos
push
out
sti
inc
xchg
sub
sbb
lods
movsl
jg
sub
push
out
fbstp
adc
xchg
mov
xor
mov
xchg
add
pop
mov
mov
or
add
jb
jb
imul
mov
mov
fsubrl
pushf
or
stos
inc
cmpsb
sub
adc
mov
aam
ret
pop
sub
mov
js
dec
mov
sub
mov
xchg
stc
or
mov
sbb
jecxz
gs
add
xchg
mov
movsl
clc
dec
pop
lock
sbb
scas
ja
mov
out
sbb
cmp
iret
imul
pusha
mov
shrl
pop
repz
xor
gs
push
jmp
xor
and
pop
push
push
out
cmpb
hlt
shll
mov
add
push
call
jb
adc
scas
sbb
addr16
xchg
cmp
lea
sbb
ja
push
call
sub
adc
jnp
rcrl
ret
pop
iret
dec
loope
jle
pop
and
into
gs
repz
and
aam
pop
in
shrb
add
mov
daa
mov
stos
inc
pop
das
scas
inc
sahf
sub
sub
mov
push
pop
pop
lds
add
or
jp
imul
adcl
cmp
inc
cmc
mov
lret
sti
scas
sbb
and
aaa
into
ljmp
jns
push
imul
jmp
adc
pusha
imull
push
scas
inc
inc
fstps
mov
cld
std
xchg
out
jae
push
gs
xchg
cs
and
sub
mov
mov
cli
jne
sub
shrl
jg
xchg
mov
movsl
cmp
stc
jns
sub
cmp
xchg
insl
dec
mov
sbb
jo
outsb
mov
in
mov
scas
push
xchg
call
or
lods
xor
sub
es
cs
cmpb
in
rorb
cli
addr16
and
push
call
jo
jo
cmp
pop
mov
fcoms
xchg
inc
pushf
ljmp
xlat
shrl
hlt
in
sub
ja
cmc
popa
lds
inc
xor
outsb
inc
fisubl
fsubrs
repnz
xchg
loop
in
test
je
addr16
add
sub
add
sub
dec
push
mov
mov
negl
mov
xchg
repnz
push
ljmp
inc
fisttpl
addr16
sub
push
mov
dec
pop
cmc
inc
mov
mov
mov
or
dec
or
je
js
fs
inc
fsts
xchg
cwtl
sbb
fisttpl
lods
adc
and
outsb
add
int
xchg
sub
out
pop
icebp
pop
jmp
aas
sbb
ds
scas
into
mov
cwtl
add
jmp
hlt
mov
xor
test
aas
jns
mov
or
jecxz
popf
jbe
xchg
push
adc
arpl
scas
icebp
int3
mov
xchg
cmp
mov
jb
pop
scas
mov
jnp
jmp
rorb
inc
cmpsb
test
popa
push
mov
scas
shll
dec
jge
push
jb
dec
pop
and
jns
aaa
mov
mov
inc
leave
test
lret
sub
sub
loopne
call
ret
jae
mov
ljmp
jb
mov
xchg
mov
aam
arpl
shrl
test
push
mull
rclb
pushf
push
cmp
xchg
sbb
nop
jl
dec
lahf
pop
pop
les
xor
pop
jmp
dec
xor
dec
frstor
mov
jno
jp
sahf
xchg
movsl
ja
aam
inc
leave
ret
hlt
ljmp
push
lret
fsubs
mov
or
cmpb
jae
xchg
pop
movsl
or
jae
jo
cmpsb
cmp
icebp
jge
mov
loope
popf
out
push
mov
lret
jae
mov
stos
push
pop
int3
jo
pop
repz
pushf
pop
rcrl
bound
jne
cwtl
inc
fnsave
fucomi
inc
jb
pop
lods
jge
cmc
pusha
dec
in
push
push
mov
cwtl
out
lahf
ret
adc
jnp
shl
pop
add
add
sti
pop
mov
roll
adc
mov
repnz
stos
dec
mov
fistl
sti
fimull
adc
adc
pop
or
in
add
or
fs
int
divl
faddl
ja
lret
xchg
pop
lods
jle
negb
pusha
shrb
xor
in
test
pop
repz
cmp
sub
outsb
jmp
aas
mov
push
cli
aaa
mov
scas
mov
stc
jo
mov
add
xchg
inc
push
cld
arpl
sub
mov
dec
or
jno
pusha
sahf
das
ds
sbb
pushf
cmpb
lock
sahf
sbb
mov
sti
mov
fidivs
enter
adc
call
fnsave
xor
jecxz
mov
or
pop
aam
sti
call
mov
mov
repz
fnsave
pop
out
dec
dec
mov
lahf
mov
and
sbb
dec
shlb
cmp
mov
clc
or
lds
sub
jmp
inc
les
mov
lock
clc
and
addr16
mov
and
jb
popa
push
out
sbbl
cli
stc
add
ja
sbb
stos
dec
jae
mov
push
or
xor
sub
push
or
jbe
scas
push
jbe
test
insb
xor
xchg
test
push
cmp
clc
jg
and
in
sbb
mov
out
sbbb
in
push
pop
add
dec
dec
mov
cmp
insl
icebp
mov
rclb
iret
xlat
outsb
fsub
and
mov
xacquire
iret
push
out
add
jbe
adc
adc
andb
sbb
xchg
mov
lock
icebp
mov
out
movsb
mov
negb
les
test
clc
arpl
xlat
dec
lods
in
xor
int3
aaa
mov
dec
mov
out
in
lahf
jg
push
xchg
cmp
pop
pushf
dec
bound
shrl
std
xchg
sub
inc
mov
pop
jecxz
arpl
ficoml
addr16
dec
xchg
mov
fistpl
sbb
nop
repnz
mov
cld
rclb
rclb
inc
add
pushf
leave
int3
arpl
xchg
test
add
cmp
xchg
stos
iret
cmpsb
cmp
int
jge
out
cld
addr16
xor
dec
xchg
cltd
insb
cmpsb
clc
jecxz
jno
lret
outsl
jmp
or
ja
push
popf
jmp
fsts
mov
xchg
shlb
xor
add
mov
gs
cmp
mov
les
mov
into
gs
mov
mov
mov
pop
repz
rcrb
jg
xchg
push
adc
xchg
sti
mov
das
scas
add
mov
cmp
push
aam
jb
push
xor
iret
dec
movntps
lock
dec
xchg
xchg
outsl
push
ss
xchg
cmp
je
dec
loopne
sub
sub
jns
dec
in
lcall
lret
mov
movaps
dec
enter
nop
stos
add
fisubl
lahf
stos
hlt
xorl
or
mov
pop
lcall
insl
mov
sub
mov
fisubrl
sub
mov
xchg
mov
jae
aaa
sbb
dec
pop
jb
cli
mov
mov
inc
push
arpl
push
or
jb
pop
sahf
cmp
loopne
stos
mov
mov
addr16
or
pop
push
popf
in
js
xor
mov
movsl
pop
daa
addr16
push
dec
cld
insb
xor
jno
or
addr16
rorb
pop
cmp
xchg
cmp
jg
mov
mov
mov
mov
mov
mov
cld
pop
sub
cmp
jg
xchg
int3
leave
add
subl
cmc
mov
or
sti
inc
jne
mov
popf
pop
jne
cmp
mov
pop
dec
loopne
add
mov
mov
test
aam
push
xor
fwait
jno
sub
scas
movsl
out
jle
xor
rcrb
aad
xor
nop
push
andl
aam
xlat
mov
mov
and
lods
push
shl
pop
cmp
roll
je
cmp
pop
shrl
cmp
inc
push
push
call
imul
stos
xchg
mov
mov
mov
insl
sarl
cmpsl
push
jecxz
les
dec
adc
mov
xchg
sub
sahf
daa
into
gs
dec
insb
add
inc
jmp
and
mov
lock
ret
xchg
fwait
and
dec
pop
jecxz
rclb
add
cmp
cltd
jnp
pop
or
jle
cli
push
push
push
and
int3
xlat
cmp
cmp
pop
aas
mov
or
aam
pop
push
pop
and
lods
xor
pop
pop
push
je
cli
cmp
mov
imul
movsb
pop
add
es
and
sub
pop
in
mov
int
or
or
and
mov
and
sahf
ljmp
loope
jmp
aad
scas
movsb
leave
push
lods
out
sub
not
jl
pop
xchg
clc
cli
mov
sub
lsl
mov
in
add
xlat
int
dec
mov
mov
aam
ljmp
sub
sub
cwtl
out
xchg
int
daa
mov
pop
out
rolb
xchg
jb
cs
mov
je,pn
lahf
add
mov
add
popf
mov
cmpsl
pop
movsl
mov
fsubrl
mov
and
ljmp
dec
xchg
ret
and
in
dec
out
mov
push
ss
xchg
loopne
sahf
xchg
xor
enter
fsubr
arpl
pop
add
shll
adcb
jbe
mov
adcb
out
lret
jo
sub
sbb
sub
mov
jmp
test
add
addl
mov
mov
jg
inc
adc
push
movsb
cmp
cmpsb
or
enter
add
jg
dec
mov
mov
nop
add
popf
jne
outsl
shll
popa
and
pop
sahf
push
popf
ds
std
mov
adc
inc
cld
adc
les
ficompl
out
and
imul
sbb
cs
xlat
pop
or
cmpsl
stc
push
xor
jbe
jp
cmp
test
push
pop
stos
sub
rorb
xor
test
fldt
dec
aas
push
cs
outsl
push
or
das
push
jmp
jg
divl
sbb
pop
dec
or
xor
aam
jns
sub
pop
fbstp
xchg
test
int3
push
lret
or
icebp
mov
daa
add
lds
push
lahf
out
popf
mov
mov
or
xor
add
aas
xchg
mov
data16
xchg
orb
fwait
xchg
pop
cld
outsb
push
mov
jecxz
jbe
cmpsb
shll
jle
push
out
push
fdiv
sbb
js
lea
and
imul
shll
or
sbb
inc
xor
into
xchg
cltd
mov
ja
adc
add
or
xor
mov
dec
push
push
loopne
sbb
loope
fldpi
outsl
enter
adc
push
outsb
cmp
sbb
mov
mov
xchg
mov
imul
adc
cs
mov
jo
push
mov
cmp
imul
inc
fimuls
sub
adc
mov
and
or
sub
mov
adc
popf
and
shrb
dec
mov
ds
outsl
cmp
fsubrs
adc
fcoml
inc
fisttpll
data16
or
mov
outsl
or
movsb
xchg
xchg
shr
ljmp
cld
pop
imul
xchg
xor
shlb
enter
in
xchg
adcb
fistpl
mov
dec
in
pop
outsb
add
ljmp
insl
jge
test
inc
jb
xchg
sbb
in
lret
push
idivb
pushf
movsb
mov
sub
sbb
mov
or
sub
fimuls
push
popa
adc
lods
cwtl
pushf
data16
das
push
jne
xchg
gs
lock
adc
lea
xlat
push
sub
popa
jp
repz
jbe
xchg
jp
sbb
xorb
mov
or
lods
push
xchg
loope
xchg
and
adc
les
movsl
xor
test
cld
inc
jge
mov
dec
in
popa
les
shll
fmull
fsubs
xchg
mov
daa
test
ljmp
andb
xchg
and
push
shlb
fwait
jmp
xchg
xor
mov
loopne
xor
bound
ja
hlt
loop
movsb
pop
icebp
aad
rorb
jecxz
sbbl
in
shlb
icebp
das
lds
test
lret
mov
mov
push
or
add
pushf
xchg
xor
mov
mov
mov
mov
test
xchg
int3
push
jmp
cwtl
and
lahf
aas
mov
xchg
push
daa
scas
xchg
push
push
aam
push
mov
or
push
adc
loopne
pop
adc
loop
inc
add
icebp
xor
add
pop
ret
mov
aad
je
cmp
sbb
mov
add
mov
jmp
fcoms
fnstcw
repz
sub
outsl
lods
jnp
mov
xlat
pop
adc
inc
testl
and
cwtl
sbb
in
out
loop
pop
add
divb
sub
mov
fidivl
std
pop
pushf
mov
adc
dec
loop
xor
ljmp
fstl
sarl
mov
repnz
test
mov
xchg
addr16
sbb
dec
stos
pop
mov
mov
jnp
stos
sub
sub
ret
pop
inc
enter
add
in
pop
movsl
lcall
mov
push
call
nop
cld
jmp
mov
add
fsubl
dec
jl
scas
mov
movsl
bound
icebp
cli
aam
sqrtps
icebp
lds
lock
cmp
mov
sahf
dec
in
mov
mov
outsl
call
stc
dec
mov
mov
cmp
das
xchg
in
cmp
push
outsb
js
aad
push
in
dec
aas
aaa
push
cmc
cltd
nop
lahf
ss
lock
lods
pop
stc
into
sahf
cmpsl
sub
pop
pop
loop
cmc
cmp
aas
push
cmc
pop
pusha
mov
nop
adcb
mov
arpl
cmc
adc
push
andb
test
aaa
ljmp
jb
shrl
adc
sub
dec
loopne
dec
xor
insl
add
mov
scas
arpl
sahf
xchg
push
ret
add
js
push
push
rorl
mov
daa
push
loop
stos
scas
adcl
outsb
stc
mov
mov
ficoms
mov
idivb
cmp
push
sbb
flds
enter
xor
push
xor
cltd
gs
pop
lock
fbld
xchg
js
sub
or
js
mov
jmp
pop
adc
and
xchg
aaa
and
std
pop
ss
loopne
pop
cmp
sub
ss
inc
jmp
push
dec
ret
inc
pop
jo
jl
std
roll
out
jmp
jbe
or
or
xor
lock
pop
xchg
lcall
call
les
xchg
stos
push
mov
pushf
xorl
dec
leave
add
xchg
and
sti
fmuls
ffree
imul
ret
add
mov
and
mov
mov
lock
out
xchg
stos
mov
inc
scas
or
in
adc
out
xchg
cmpsl
int
pop
mov
out
pop
imul
sbb
add
push
pop
iret
lea
int3
jno
adc
push
pop
xrelease
xchg
sbb
repnz
xchg
test
imul
add
idiv
mov
cmp
das
call
sub
push
maskmovq
testl
adc
sub
and
fsubrs
imul
dec
jecxz
sbb
fmuls
aad
mov
lret
push
xchg
jae
pop
cmpsl
lea
mov
cmp
xlat
fs
mov
inc
sbb
mov
xor
xchg
xlat
fs
push
in
movsb
xchg
push
mov
pop
in
scas
adc
jns
sti
dec
sti
xchg
sbbl
push
stos
mov
bnd
and
or
rcrl
add
xchg
inc
and
popf
test
mov
out
notl
jne
mov
ret
cli
cli
pop
mov
lds
push
aaa
ds
jp
sbb
sub
and
inc
das
jp
inc
div
call
mov
mov
xchg
insl
sub
pop
mov
roll
lods
inc
enter
aam
pushf
dec
pop
jmp
add
mov
gs
mov
mov
mov
lret
iret
data16
imul
test
jge
pop
cmp
jmp
push
push
cmp
insb
add
lock
je
incl
js
push
or
xchg
push
mov
ljmp
cli
in
ficompl
mov
sbbb
mov
cmp
mov
mov
jbe
and
cmpl
xchg
les
dec
pop
fldl
xchg
and
out
fs
or
into
lcall
aam
sub
sbb
push
rcrl
shl
or
fdivs
test
and
stos
orb
psadbw
push
in
or
popf
and
add
xchg
mov
jb
xchg
mov
jae
icebp
imul
les
lret
flds
je
pushf
and
out
xchg
ljmp
in
mov
or
pop
mov
dec
cs
loope
xor
outsl
out
jno
lock
scas
sub
fcmovb
xor
imulb
add
imul
stos
popf
add
je
mov
shrl
mov
pop
pop
into
das
outsl
cmp
mov
mov
mov
fistpl
and
adc
jne
or
rclb
fmull
sub
lret
loope
mov
test
or
mov
mov
jno
roll
in
pop
pop
mov
outsb
pop
stos
lock
lea
jae
int3
sub
out
xchg
sbb
jns
push
mov
cmpl
movsb
xor
lds
jle
ss
lret
or
push
in
add
mov
dec
xchg
dec
inc
cmp
cli
jmp
cmp
call
sub
cmpb
mov
cmp
mov
mov
cmp
mov
imul
data16
inc
sbb
pop
je
jle
mov
filds
adc
cmp
xor
add
adc
mov
insb
cmp
jnp
push
mov
cmp
lret
pop
push
dec
mov
mov
mov
xlat
mov
popf
adc
mov
pop
xor
imul
fcmovne
lods
xor
xchg
fcoms
and
into
clc
add
jmp
pop
imul
lea
mov
mov
sub
mov
mov
sbb
les
addl
in
and
xchg
mov
arpl
leave
shrl
push
cwtl
lret
inc
xchg
in
jmp
in
pop
icebp
fs
xchg
adc
loop
xchg
outsb
add
je
xlat
sbb
pusha
stos
jl
mov
cmp
xchg
dec
pop
jnp
jp
or
jmp
push
inc
mov
js
or
sub
in
push
cmp
test
jge
xchg
loopne
jb
in
or
psllw
loope
xchg
imul
mov
cltd
dec
rcrl
cmp
mov
lret
jmp
push
loope
shrb
mov
lods
ljmp
jne
dec
push
xchg
test
ret
jbe
notb
int3
out
dec
into
xchg
sbb
sarb
test
imul
out
daa
jb
jnp
mov
insl
dec
in
out
mov
test
loop
loope
xchg
sub
inc
test
xchg
jl
sarl
imul
data16
pop
jl
pop
sub
push
jge
fwait
push
xor
jo
xor
push
jge
aaa
xor
fnstcw
push
cmp
leave
pusha
jo
outsl
xchg
add
mov
dec
sub
xor
pop
mov
push
cmp
pop
int
lea
fsubrl
and
and
in
fbstp
mov
or
cmp
pop
lret
inc
enter
faddl
outsl
mov
in
dec
enter
jg
sub
or
lcall
xor
mov
inc
loope
xchg
xor
cmc
repz
movsl
xchg
ficoml
jbe
icebp
jecxz
xor
shl
jecxz
popa
das
rcl
int
push
cmp
adc
xor
or
cmp
ljmp
jmp
mov
sbb
aas
pop
mov
ljmp
mov
mov
or
pop
fistpl
and
enter
jl
xor
ss
push
xlat
fucomi
divl
iret
iret
inc
ret
cld
xchg
in
fdivl
push
iret
pop
repnz
mov
enter
ret
jle
jno
fmuls
pop
cmp
aaa
into
jae
loopne
xchg
or
xchg
loop
sub
pop
add
mov
cmp
imul
mov
faddl
push
sub
dec
xchg
sub
add
mov
mov
rcl
fbstp
in
sub
out
xchg
sbb
mov
arpl
das
cmp
pushf
arpl
sub
sbb
aad
cmp
lods
into
mov
pop
sbb
mov
add
mov
scas
ffree
adc
mov
jl
sub
pop
fisubs
sub
fcmovu
repnz
rorb
ret
jmp
and
mov
lcall
inc
adc
lret
jbe
sub
std
jle
mov
add
jle
faddp
sahf
push
sub
dec
pop
je
jbe
int3
das
out
xchg
enter
xchg
sub
bound
and
adc
push
jmp
push
or
orl
rorl
xchg
sahf
mov
push
inc
jge
jo
mov
and
ss
aam
ljmp
repz
inc
data16
push
pushf
ljmp
pushf
cs
insb
orl
aad
jo
mov
lret
pop
jns
movsl
stos
cmp
std
aas
out
push
pop
adc
mov
cmpsl
imul
js
loopne
sub
xor
xchg
gs
dec
ficoms
lahf
pop
incb
and
sbb
xchg
xchg
mov
rcl
loop
les
outsb
mov
jge
shrl
jne
mov
sbb
cmp
ss
fiadds
mov
test
add
adc
call
mov
and
fs
lret
xchg
lea
cld
push
aas
dec
test
xchg
scas
clc
fcomps
test
in
mov
out
imul
cltd
mov
sahf
and
rcrb
fists
stos
xor
in
xchg
aaa
add
loop
cmpsb
out
sbb
movl
add
js
push
jbe
dec
pop
aam
push
sbb
pop
push
out
or
jg
fs
push
cmp
cmpsl
add
fst
outsl
add
ja
ds
or
jg
add
adc
add
cmpl
xor
mov
popa
xor
or
nop
sbb
mov
pop
pop
lret
ret
into
insl
movsl
mov
shlb
faddp
mov
jmp
enter
sub
sub
fdivp
mov
lret
fistps
aam
adc
int3
mov
hlt
sbb
out
sub
repnz
xorl
ret
lcall
or
jl
addr16
fsubl
dec
lods
sub
adc
loopne
mov
mov
cmp
cld
int3
fistps
jo
lock
xlat
xor
jbe
addb
cmp
mov
sbb
stos
sbb
add
fidivs
lcall
movsl
xchg
inc
cmp
xor
xlat
outsb
xchg
mov
cmc
pop
push
mov
popf
sub
and
in
ret
sub
and
stc
mov
in
jmp
mov
push
or
xchg
mov
xor
fstl
and
je
popf
stos
mov
and
jbe
imul
or
cmp
outsl
jge
cmp
or
out
add
lcall
mov
insb
sti
pop
lcall
stos
push
pushf
repnz
adc
cmp
outsl
aas
sarw
shll
pop
mov
gs
xchg
leave
adc
fldpi
sahf
pop
loopnew
xor
sbb
das
add
push
and
aas
cmp
jb
das
pop
les
in
dec
adc
in
aaa
lahf
inc
in
test
cmp
pop
leave
xor
je
xor
dec
cmp
sahf
fbstp
push
adcl
pop
and
push
imulb
mov
sbb
pushf
in
mov
sbb
pushl
ret
cmp
out
or
sbb
dec
and
stos
inc
add
into
cmpl
sbb
add
add
mov
int3
xor
lds
addr16
dec
in
lret
divb
jg
push
jg
push
sub
out
push
testb
ja
mov
test
andb
mov
mov
mov
xchg
dec
jo
mov
ficoml
pushf
lds
jg
sub
dec
dec
pop
nop
shlb
arpl
mov
pop
scas
out
nop
sbb
out
and
push
pop
hlt
lods
sub
push
mov
pop
xchg
in
pop
fidivs
or
mov
jns
lcall
cmpsb
mov
rorl
add
das
cmp
stos
pop
lock
ss
inc
cwtl
jl
push
mov
xlat
mov
xchg
adc
inc
popa
or
inc
sti
pop
ret
jne
stos
xor
bound
pop
mov
fistpl
mov
pop
add
bnd
stos
daa
lea
mov
add
insb
and
lods
xchg
or
mov
sbb
push
sub
mov
sub
mov
test
insl
sub
xchg
and
or
and
mov
mov
pop
das
inc
es
jp
xchg
mov
jno
pop
inc
fstpl
lock
decl
rol
lahf
sub
sbb
in
pushf
dec
pop
nop
daa
mov
hlt
jg
pop
scas
addb
lret
subl
jno
and
idivb
sub
mov
adc
inc
push
arpl
lcall
or
rorb
push
xor
push
daa
push
fistl
jl
xchg
stc
je
cmc
rorl
sub
add
mov
push
and
std
fistpl
pusha
iret
xchg
or
int
mov
inc
rcl
push
jmp
bound
jne
add
test
push
push
cmp
pop
dec
repz
outsl
cmpsb
cmp
xor
lcall
jne
pop
aam
inc
test
xchg
mov
cmpsl
int
mov
orl
jb
pop
cmp
adc
mov
mov
stos
mov
inc
dec
and
xchg
ret
jmp
xor
dec
push
inc
cmpsl
pop
outsl
xchg
mov
mov
pop
mov
fcompl
in
ds
rcr
sarl
push
in
fcmovnbe
push
xor
mov
rol
cwtl
add
cmp
pop
sub
punpcklbw
repz
shl
repnz
push
iret
pop
or
xchg
xchg
xchg
popa
cli
xor
inc
sub
inc
inc
sbb
jmp
out
sbb
or
mov
dec
insb
jl
rolb
jp
push
lods
aaa
outsb
adc
push
fidivs
or
rolb
repnz
pop
cmp
mov
cmpsb
lock
iret
sbb
out
push
scas
repz
and
dec
int3
xchg
jge
mov
addb
sbb
sti
aad
mov
das
rclb
shlb
clc
cmp
movsb
int3
dec
in
enter
andl
inc
push
arpl
jge
jnp
lea
fstl
sub
movsl
arpl
in
into
mov
cmpsl
pop
lret
jbe
in
jns
xchg
sbbb
pop
test
idiv
or
lcall
sti
inc
pop
xor
pop
adc
jmp
xchg
and
cmp
sti
lret
inc
push
mov
push
jo
stc
add
jmp
in
aam
in
shll
pop
pop
jl
cmp
fwait
stos
gs
and
bound
adc
lods
les
pop
lds
xchg
jge
pop
mov
xchg
std
xchg
push
ret
fs
rolb
xor
fnsave
decb
push
xchg
jge
cwtl
out
pop
sti
xchg
add
adc
jp
push
inc
ret
push
pop
shlb
pop
les
pop
roll
push
mov
test
mov
rol
mov
das
pop
repnz
jp
push
mov
ss
pop
cmc
sbb
jl,pt
jno
dec
lret
lcall
lcall
in
imul
xor
aad
test
cmp
mov
icebp
insb
out
lret
mov
imul
mov
dec
cmpsb
push
out
cmp
jb
frstor
add
lret
incl
mov
lods
clc
adc
mov
fimull
lods
lock
ss
adc
out
insb
sbb
fistpl
rcrb
stos
loopne
sbb
xor
push
xchg
xor
inc
fwait
dec
movsb
std
aam
jg
lods
pushf
push
push
sahf
jp
cmpsl
dec
adc
nop
jl
call
clc
jae
jge
outsb
cmpsb
mulb
shrl
jo
add
in
out
lret
jmp
xchg
lods
push
adc
pop
lds
inc
push
cmp
jmp
pusha
jge
popf
call
dec
mov
inc
cli
jmp
cmpsl
mov
sub
call
insb
xor
repz
mov
dec
arpl
call
dec
les
in
pop
jp
mov
xchg
cmpsl
jns
push
mov
loopne
outsb
stos
inc
mov
imul
out
push
lret
sub
adc
pop
jnp
clc
bound
push
sub
test
adc
mov
icebp
adc
and
cmp
and
in
xor
stos
std
inc
mov
test
push
scas
pushf
shl
fdivrl
push
call
inc
subl
and
jp
es
in
test
fnstenv
lret
sti
scas
ds
scas
rclb
and
scas
into
pop
div
cli
push
xchg
push
sahf
icebp
aas
xorl
lcall
pop
push
or
aad
lods
lods
call
mov
pop
cs
adc
mov
aaa
fwait
xor
dec
inc
push
push
aam
sub
cmpsl
mov
and
inc
shlb
scas
icebp
xchg
jbe
sub
mov
lea
inc
xor
pusha
notl
cs
mov
cmp
fadd
push
jnp
fsubrp
fsubs
dec
cwtl
insl
clc
mull
xor
lds
mov
add
outsl
xor
movsl
stc
xlat
out
je
jae
adc
sub
andb
xor
push
xchg
psadbw
mov
fiaddl
sahf
or
dec
pop
jmp
jns
test
mov
movsl
xchg
aas
add
ljmp
push
shl
rorl
lods
sbbl
movl
mov
fldenv
mov
dec
push
jo
dec
cmp
clc
sahf
ret
jp
sbbl
sbb
pop
js
cmp
cmp
mov
sbb
pop
sbb
scas
or
jb
je
and
nop
add
shrl
shll
jb
mov
loope
and
cmpsl
mov
sarb
das
incb
sbb
push
lods
jl
sahf
icebp
aam
and
inc
adc
mov
scas
push
push
rorl
mov
mov
xchg
lods
pop
pop
daa
or
xor
out
shrb
mov
push
adc
incl
push
xor
xor
xchg
sub
scas
sbb
mov
shr
sub
xor
inc
or
jns
popa
push
ljmp
jno
shlb
jg
leave
pusha
addr16
clc
aas
or
lea
or
jmp
loopne
in
and
mov
ljmp
aaa
adcb
mov
xor
add
cmp
shlb
in
out
add
add
adc
subb
or
hlt
aaa
xchg
test
cld
fnstenv
ja
in
js
mov
sbb
push
adc
mov
std
pop
into
jo
inc
fstpl
bound
sbb
sub
mov
ja
mov
mov
pop
cld
aas
ret
aas
cmp
jno
lds
adc
xor
jp
ds
mov
aad
iret
mov
shrl
fwait
adc
mov
pop
fwait
arpl
mov
or
push
mov
cltd
loopne
aas
push
int
and
jns
lock
fwait
dec
test
scas
test
bound
fsubl
je
sahf
sbb
mov
insb
and
imul
push
lds
mov
test
out
add
push
leave
fwait
and
mov
or
adcl
je
sahf
adcl
cs
xor
leave
xchg
std
ss
cmc
mov
lret
pop
add
icebp
movsl
subb
aas
out
orl
popa
push
mov
ljmp
dec
push
inc
mov
dec
cs
and
nop
adc
insb
cmpsl
mov
leave
fsts
lret
std
lods
loope
add
nop
cmp
test
xor
push
inc
sbb
inc
jne
enter
mov
adc
inc
jge
arpl
data16
int
pop
neg
xor
or
xchg
addl
sbb
push
mov
xor
xlat
inc
clc
popf
xchg
pusha
or
jno
jmp
jb
sub
inc
mov
and
inc
mov
dec
negb
or
jmp
inc
gs
mov
jl
cmp
outsb
jnp
and
dec
adc
sbb
fmul
jbe
cs
outsl
out
xor
mov
sti
fs
and
mov
sbb
inc
push
xlat
jbe
push
mov
sbbb
shl
mov
popa
mov
or
cmp
popf
xor
cmp
mov
pop
push
sub
lods
ret
sub
dec
dec
mov
lock
add
scas
aas
loopne
flds
xchg
insb
lea
cmp
dec
sub
push
insb
shrl
mov
xchg
cmp
sbb
or
xchg
mov
stc
cli
push
mov
sar
xchg
out
and
scas
mov
cmc
cmp
dec
clc
sbb
dec
dec
fabs
lret
push
ds
je
dec
sar
jns
sti
adc
jg
shrb
cmpsb
ja
mov
lods
dec
pop
lock
jae
aad
lock
add
dec
sbb
movsl
ss
jnp
cwtl
in
add
and
stos
jge
fcompl
mov
xchg
out
cld
les
sub
mov
stc
nop
add
subl
subl
xor
and
and
out
fldt
mov
sub
mov
ljmp
sarb
jnp
popa
lods
fld
pop
in
cmpsb
dec
xchg
dec
pop
dec
jge
dec
movsb
nop
pop
jg
jnp
jle
popf
dec
jmp
lahf
xchg
outsb
push
aas
test
bound
cmpsb
xchg
inc
cmpsb
mov
outsl
xor
adc
inc
dec
test
push
aam
mov
jb
push
push
jns,pt
jo
xchg
add
dec
js
int3
ficomps
fbld
lds
lds
mov
loope
inc
push
pusha
add
std
xor
cs
in
inc
or
lods
jl
dec
and
push
imul
mov
roll
aas
imul
into
pusha
mov
adc
push
out
shrl
push
scas
pop
dec
pusha
mov
dec
imul
or
push
dec
icebp
addb
stc
mov
jb
sub
lret
mov
cli
push
and
and
sub
cli
cmp
push
in
je
xchg
pushf
scas
add
inc
adc
mov
js
int3
cltd
add
ljmp
jmp
push
jae
lods
jmp
jne
mov
sbb
out
int3
fmul
das
or
in
arpl
xchg
mov
insl
ds
pop
mov
cmpsb
mov
in
jo
adcb
xchg
adc
jb
scas
mov
into
xor
pusha
and
rcrb
stc
clc
rorb
sbb
dec
pop
sbb
mov
fwait
xchg
dec
mov
cmp
mov
sahf
repnz
movsb
mov
push
mov
or
push
sbb
lods
push
add
add
jb
xor
lds
test
testl
sbb
pcmpeqb
inc
in
stos
inc
push
pop
subb
dec
push
mov
movsl
icebp
mov
mov
sub
daa
and
les
adc
inc
adc
push
arpl
or
and
sarl
loop
in
lcall
lret
js
jmp
out
cmp
ja
popf
shll
jns
push
sub
out
stc
pop
loopne
stc
inc
jg
add
pop
loope
popf
fs
leave
mov
fldl
ret
icebp
xlat
outsb
cmp
gs
arpl
mov
inc
in
sbbl
call
clc
pusha
mov
mov
jmp
and
popa
adc
das
jp
pop
adc
das
ret
cmpsl
std
jo
enter
mov
add
jae
cmp
mov
addr16
sbb
adc
push
fnstenv
psrlq
cmc
shl
lahf
pop
es
js
adc
sbb
jnp
inc
inc
or
aaa
pop
push
in
push
pop
cwtl
fsubp
mov
fwait
cmpsl
cmp
repz
cmp
mov
mov
sub
insl
lock
push
mov
xor
leave
jo
jl
sti
pop
mov
addr16
pop
scas
out
shlb
test
or
sbb
cmp
rep
pop
or
adc
pop
cmp
sbb
lods
sub
into
pop
int
in
jecxz
and
xchg
insb
out
enter
out
faddp
in
mov
mov
sbb
adc
sub
movl
out
ficompl
cs
sahf
jle
mov
mov
and
mov
imull
cltd
test
mov
shlb
push
out
inc
xchg
movsl
icebp
mov
inc
sbb
call
or
cmp
pop
fmulp
push
push
mov
ret
fdiv
xor
sti
xchg
sub
call
repz
push
adc
pop
ret
cmc
sub
jb
lods
in
adcl
jge
lock
push
int3
enter
in
push
rcr
xchg
adc
repnz
dec
push
mov
dec
mov
xor
push
outsl
push
mov
xor
push
jns
mov
and
push
and
cs
js
or
sti
sub
sub
ret
hlt
out
xchg
dec
pop
or
int
pop
and
inc
lea
cmp
fdivl
pop
arpl
or
rcrb
fmull
push
jge
sbb
icebp
xor
or
fwait
mov
dec
mov
fnstsw
dec
fs
push
cs
test
cmc
add
loop
xchg
or
fnstenv
jmp
stc
nop
sbb
inc
adc
sbb
sti
test
adc
ljmp
insb
scas
push
push
popf
in
or
test
clc
mov
fs
adcl
mov
jae
sub
ret
jecxz
test
pop
sub
ss
xchg
cmp
ret
fisttpl
loopne
movsb
pop
sub
sub
daa
arpl
add
mov
ja
sub
into
push
mov
mov
dec
mov
fsub
imul
sbb
mov
fdivl
inc
pop
pop
cmp
test
adc
adc
pop
movsb
pop
test
fldl
loop
fdivp
cmpb
cmp
xchg
imul
leave
mov
and
mov
fistl
stos
fsts
lods
popa
out
repnz
leave
push
cmp
insl
inc
shlb
aaa
xor
cld
push
jne
popf
popa
aas
pop
pop
jecxz
test
shlb
icebp
mov
sahf
andl
xor
in
push
push
and
and
or
cmp
sub
inc
push
lods
mov
sbb
or
data16
stos
jl
loope
sti
pusha
mov
xchg
lret
fdivs
and
call
push
pop
outsl
inc
popf
je
fistps
push
jge
bound
es
pop
xchg
inc
jle
xchg
sbb
pop
mov
fisttps
addl
mov
push
xlat
pop
jnp
sahf
icebp
mov
insb
test
ss
in
mov
or
xchg
into
lods
xchg
ds
mov
mov
mov
das
aad
fnstenv
pop
mov
lahf
mov
cmp
mov
cmp
sti
adc
movsb
jne
adc
mov
xchg
aad
mov
pusha
test
js
pop
lods
cmp
stos
inc
pushf
push
xchg
adc
inc
aas
mov
fcomps
lahf
aam
test
pop
xchg
sub
das
and
shlb
mov
cmp
mov
jne
jno
pop
push
cmp
adc
pop
mov
scas
ret
lahf
push
call
inc
or
enter
imul
dec
out
jb
daa
sarb
jl
push
mov
iret
jbe
xchg
inc
lahf
dec
cld
std
and
bound
and
inc
movl
jo
xor
or
mov
jo
adc
inc
orb
or
inc
dec
mov
shrl
xchg
fisttps
rcrb
repnz
push
sti
dec
xor
cmpsb
jecxz
mov
not
and
mov
pop
xchg
gs
pop
mov
fimuls
xor
sub
lock
xorb
and
subb
loopne
push
popf
xchg
xchg
cmp
popa
lods
add
or
int
imul
lock
int
inc
lret
mov
xor
in
iret
jb
shl
mov
test
in
adc
xchg
mov
lods
test
lret
fisttpll
cld
mov
push
ja
out
pop
mov
mov
inc
popf
add
jbe
loop
inc
int
cld
mov
xor
add
cli
sbb
in
incb
jae
out
xchg
movsb
repz
add
push
mov
es
xor
pop
hlt
push
dec
and
pusha
push
call
dec
lcall
ljmp
and
or
in
scas
inc
push
mov
jp
and
fwait
adc
inc
pop
mov
test
ds
stos
sbb
pop
repz
pop
mov
pop
outsb
aad
cs
mov
xchg
jl
mov
jle
cmp
int
xchg
mov
decl
pusha
mov
std
bound
cmp
jg
push
pop
lds
out
mov
iret
mov
dec
dec
nop
xor
mov
pop
movb
inc
jno
mov
fists
mov
or
scas
xchg
add
mov
andl
mov
sbb
pop
nop
pushf
and
and
inc
dec
pop
inc
clc
jne
incb
xchg
add
leave
pop
adc
pop
mov
int
sbb
mov
mov
aam
xor
inc
pop
sub
cwtl
xor
add
je
mov
lret
rcll
cwtl
inc
jge
shlb
cmp
sahf
loopne
mov
fldl
fstpl
in
inc
sbb
xchg
stc
out
sbb
xchg
ds
xchg
mov
push
jnp
mov
lcall
push
call
pushf
les
subb
adc
sbb
testb
adc
iret
aam
jg
adc
ret
rcr
repnz
jns
mov
mov
pop
loop
fninit
mov
int
sub
repnz
push
test
ljmp
or
dec
shll
clc
test
cltd
test
mov
insb
add
in
shld
mov
loopne
push
cmc
inc
cmp
imul
push
cmp
nop
lea
push
rcr
dec
pop
pusha
jl
sti
pop
mov
and
int3
je
sub
mov
jmp
sub
jmp
ljmp
adc
pusha
insb
push
pop
pop
and
jo
aas
mov
enter
out
stos
incl
or
clc
push
inc
fsts
add
jg
pop
data16
pop
mov
add
inc
gs
cs
and
jecxz
inc
mov
adc
mov
scas
test
loope
sahf
or
inc
es
jmp
jns
bound
mov
mov
mov
add
pop
sub
mov
mov
in
mov
xor
stos
sub
xor
or
inc
cmp
push
sub
mov
push
loope
sub
sub
xchg
mov
dec
mov
out
loopne
mov
ja
mov
mov
jecxz
dec
repnz
insl
jbe
and
add
cmp
loopne
fwait
pop
mov
sub
testb
sti
and
fwait
push
mov
dec
mov
stc
mov
adc
mov
and
inc
call
lcall
jecxz
pop
out
mov
ret
pusha
std
clc
cld
js
sub
jge
pop
sti
xchg
adc
and
push
xor
xor
mov
sahf
clc
imul
xor
test
pop
add
nop
or
ljmp
mov
clc
ljmp
rcll
lock
into
mov
loopne
les
test
aad
loopne
repz
add
mov
jge
cmp
xlat
pop
rcll
fidivs
lret
and
mov
stc
inc
jo
fstl
aad
je
add
push
and
insb
out
mov
shll
rcr
mov
in
cmp
rcrb
mov
mov
jo
testb
nop
out
dec
cmp
inc
adc
ja
and
push
xor
jg
gs
addb
xlat
ss
push
fidivrs
mov
add
incl
xor
imul
xor
dec
xchg
fisubs
fnsave
mov
lds
cli
pop
cmp
cmp
cmpsb
jns
xchg
cmc
jns
add
add
std
xor
cli
xchg
lret
inc
sub
arpl
out
mov
jbe
dec
lahf
shlb
test
lret
sti
ret
pop
stos
jnp
fisubl
push
jno
aaa
flds
ficomps
lret
daa
dec
mov
sti
inc
jg
jmp
in
xchg
test
mov
jb
add
jp
and
pop
xor
movsl
push
inc
aad
aas
out
fnsave
inc
fnstenv
pusha
hlt
pusha
stc
iret
push
stos
test
jle
cmpsb
out
addl
and
push
sarl
icebp
jmp
rcrb
cmp
add
mov
aaa
and
nop
pushf
jmp
mov
cmpsb
repz
push
add
out
imul
xchg
inc
inc
pop
andb
movsb
push
mov
push
jne
jo
shll
fildl
pop
scas
roll
enter
jno
push
fisubl
ljmp
jb
push
es
dec
aad
call
xchg
sub
xor
cs
mov
mov
in
sub
stc
fcmove
imul
inc
mov
sub
mov
dec
dec
test
sbb
push
push
je
dec
fisubrs
dec
fdivl
xlat
xchg
sub
xlat
mov
inc
xchg
inc
and
jge
push
movsl
scas
xchg
stos
xchg
or
repnz
sbb
or
add
push
mov
arpl
sub
pop
jo
ljmp
mov
pop
test
xchg
cmp
insl
sub
js
push
ljmp
jle
ja
cmp
enter
fs
loope
or
popa
push
fbld
push
lret
and
mov
dec
int
cmp
int
movl
into
cmp
or
dec
cmc
stc
sub
ljmp
out
xchg
add
pop
xchg
push
insl
out
dec
mov
ret
jae
fstpt
dec
xchg
bound
pop
jmp
inc
and
push
mov
mov
movntq
out
mov
gs
push
mov
js
call
out
mov
es
in
test
stos
or
je
push
jns
rolb
pushf
lahf
xor
into
xchg
mov
rorl
lods
lds
push
mov
jb
push
cmp
xorl
xor
cmp
scas
dec
lea
xchg
outsb
jno
ret
mov
in
lock
ret
ja
jp
in
insb
sarl
int
sbb
add
xor
cmpsl
dec
push
add
mov
out
mov
push
popl
sarb
lahf
xchg
loope
addr16
lock
mov
or
clc
mov
adc
pop
scas
inc
mov
dec
repz
in
xor
incl
or
adc
or
xchg
mov
fistpl
add
cmp
push
jo
insl
lret
push
sbb
mov
fisubl
dec
in
out
cmp
mov
and
jge
dec
arpl
pop
inc
xchg
push
xor
dec
or
jge
xchg
andb
incb
test
xchg
push
xor
lock
xchg
lods
inc
add
push
inc
mov
adc
adc
xor
add
cmp
mov
jae
cld
jl
and
test
out
push
mov
loopne
popf
test
add
xor
cmp
xor
sub
in
das
orl
or
or
push
cmc
in
jp
clc
mov
inc
enter
cmpsb
push
bnd
imul
cmp
xchg
jecxz
pop
adc
mov
fmull
sub
mov
sub
jecxz
hlt
jo
es
pop
push
adc
mov
ljmp
xor
mov
cmpsb
loope
cmpsl
imul
rorb
xor
add
lret
sub
fdivs
stc
cmpsl
lock
pop
xor
jecxz
loope
adc
xchg
and
inc
jg
inc
inc
mov
fwait
adcb
lods
outsb
adc
sbb
dec
in
jp
cmpsl
fs
out
lret
jae
int
dec
jl
and
outsb
mov
push
push
test
int3
repz
js
sub
scas
add
shl
mov
pop
int3
leave
mov
add
ret
jmp
mov
or
jle
mov
sub
cmp
ret
sub
out
cmp
sbbl
pop
dec
repz
push
inc
xor
xchg
push
mov
mov
push
cltd
jo
fstps
mov
and
loop
or
in
int3
dec
push
or
aaa
xor
mov
out
insl
adc
cld
enter
jb
js
data16
inc
dec
fisubl
mov
js
lret
test
dec
int
dec
stc
loope
mov
cmp
mov
bound
rcll
ja
stos
fcoms
adcl
lret
xor
loope
adc
fucomip
xchg
ja
popf
xor
aad
inc
sahf
pop
es
lcall
xchg
fcomps
inc
wrmsr
popa
cmp
jae
mov
repnz
fstpt
nop
jae
xlat
mov
adc
xor
sbb
pushf
imul
shll
pop
loop,pt
xor
loopne
mov
cmpsb
add
hlt
ret
xor
sbb
mov
mov
jmp
xor
jmp
gs
mov
pop
mov
mov
cmp
inc
mov
jns
stc
mov
ja
std
aam
sub
or
popf
mov
test
and
insl
xchg
callw
in
jge
mov
adc
mov
mov
movsl
and
ficoml
out
or
push
push
push
dec
and
sub
lods
lea
in
or
nop
enter
inc
dec
aaa
lret
jg
adc
mov
pop
ficomps
mov
cmp
cmp
jecxz
and
outsl
ret
shr
aad
cmp
dec
lock
xchg
jg
pop
imul
and
lds
shlb
dec
and
or
mov
fildll
and
or
inc
push
xor
btr
jb
fcmove
pop
shrl
in
and
lea
push
pop
mov
pop
cmp
leave
cmp
cli
fs
sbb
sub
adc
fs
sub
nop
inc
jecxz
test
pop
push
or
adc
outsb
mov
popf
aaa
sbbb
test
dec
fldl
dec
subb
add
mov
xor
cmp
fadd
int
push
pop
mov
jg
je
cs
jmp
mov
add
or
sbb
mov
cmp
rcrl
push
ret
pusha
fwait
loope
dec
orl
cli
push
push
nop
daa
test
lcall
cwtl
out
mov
xchg
insw
pop
xacquire
pop
adc
popf
in
push
push
mov
fwait
cmpsl
lcall
push
xchg
lock
dec
int3
cmp
js
ds
and
movsl
fnsave
mov
mov
or
cs
test
xchg
xchg
adc
inc
pop
js
sbb
push
jge
push
into
lcall
hlt
je
es
jno
test
call
jbe
test
sbb
push
movsb
vmovaps
lds
mov
daa
test
insl
mov
cmpl
enter
cmp
movsl
ds
cmp
inc
push
adc
xchg
push
xor
sbb
std
adc
push
cmp
push
or
sub
in
out
rep
dec
std
lock
loope
hlt
sarl
popa
mov
and
cwtl
call
cmp
jns
in
in
xor
js
mov
pop
add
clc
hlt
mov
push
push
pop
mov
cmpsb
mov
rcrl
pusha
int3
pushf
inc
movsb
test
lret
lahf
ss
mov
and
xor
add
xchg
push
cmp
xchg
mov
aaa
incb
movsb
inc
loope
adc
sub
push
xchg
fnsave
js
mov
lods
pop
popa
xor
int
pop
xchg
push
push
cs
js
adc
and
addr16
and
add
js
mov
and
jle
test
xor
xor
xchg
xchg
ret
cltd
cmp
mov
ret
cmp
pop
insb
sbbb
or
ja
dec
aas
aam
stos
mov
imul
not
add
mov
or
sahf
shlb
pop
jno
insb
mov
nop
mov
dec
outsb
sbb
or
mov
imul
jbe
xlat
and
ret
ss
aad
fldcw
aaa
stos
add
nop
cmp
stos
inc
pop
xchg
lcall
jle
cmpsl
cmp
aad
sarl
imul
fisubs
icebp
mov
pop
xsha256
cmpsb
nop
loop
ljmp
aam
mov
cli
cmp
push
push
xor
mov
sti
xor
push
negb
mov
jns
mov
rcr
mov
out
out
das
aam
adc
lds
sbb
mov
xchg
sub
enter
mov
mov
aam
jb
cmc
lds
or
jg
inc
movsb
mov
sbb
add
mov
mov
xchg
xchg
xchg
jo
mov
mov
in
add
xor
imulb
sarl
call
loope
repz
adc
in
sub
dec
fcomps
xchg
sbb
xor
rcll
sbb
int
jge
leave
inc
sub
mov
jb
sti
or
dec
dec
fldl
imul
mov
aad
cmp
mov
or
jo
je
add
mov
aam
mov
mov
jns
or
pop
mov
shld
mov
and
in
pop
je
dec
push
scas
cwtl
jmp
aaa
ljmp
arpl
out
jg
mov
fsubrl
add
es
jg
mov
in
ss
mov
mov
mov
adcb
jecxz
lahf
mov
lret
sahf
inc
fs
into
sbb
sbb
sub
cs
je
push
add
aad
mov
sbb
jg
jns
push
mov
push
ljmp
pop
imul
test
lods
push
push
clc
xchg
sbb
ret
jae
cmp
fs
cmp
ja
mov
dec
mov
cltd
push
repz
sbb
jae
xor
pop
jnp
repz
push
cmp
loopne
iret
inc
int
and
push
jne
js
inc
pushf
sarl
sbb
jmp
loopne
in
and
rorb
stos
cmp
divl
mov
push
and
enter
push
add
in
and
push
jg
dec
outsb
outsb
gs
cmp
sub
ficoml
test
bound
test
pop
lret
xor
adc
jne
daa
and
add
adc
cmpsl
stos
xor
call
or
mov
shl
push
and
or
sub
sbb
cld
outsl
pop
cmp
cli
lock
js
mov
loop
aas
fisttps
das
imul
in
rcrl
jne
fdivl
push
sub
es
adc
jge
mov
ret
into
shrl
mov
je
sbb
mov
inc
fwait
cltd
adc
mov
or
mov
mov
mov
add
jns
cmc
scas
sbb
jno
lods
mov
and
mov
ljmp
shll
mov
cmp
xor
call
mov
jae
mov
ret
aas
push
inc
out
mov
xchg
fs
lret
xchg
daa
call
mov
mov
pop
repnz
mov
stos
xchg
mov
nop
test
pop
scas
in
mov
ja
mov
testb
or
xor
ss
fst
xchg
mov
in
mov
sbb
pop
sahf
ja
xchg
dec
xchg
ficompl
loope
sbb
add
lcall
xor
jg
fstps
aaa
dec
xlat
mov
sbb
sub
aaa
xor
dec
pop
cmc
jp
cmpsl
inc
movsl
mov
push
jo
movsb
push
imulb
int
adc
pop
push
mov
mov
pop
ret
add
add
dec
stos
push
push
fs
imul
jns
sub
lcall
mov
dec
sbb
aad
fdiv
mov
int3
test
ljmp
inc
aaa
mov
in
mov
push
jecxz
gs
lret
out
insl
adc
inc
mov
cmp
sbb
sbb
cli
outsb
inc
sub
mov
rcr
in
push
mul
sub
inc
xchg
loop
pop
addr16
cmp
ljmp
mov
xlat
xor
cltd
or
cmp
rorb
pop
dec
clc
nop
xchg
repnz
mov
sbbl
xor
scas
es
daa
inc
inc
movsl
js
xchg
or
movb
mov
fs
mov
gs
jo
mov
int
mov
pop
push
xor
push
bound
adc
andl
shrb
jp
or
inc
testl
lds
push
mov
loop
jmp
jg
mov
cmp
or
mov
out
call
push
fistl
add
pop
inc
push
ret
decb
inc
in
adc
cltd
enter
int3
out
or
xor
sub
andl
cwtl
adc
repz
ljmp
cmp
xchg
sbb
mov
xchg
or
mov
push
lods
rol
out
pop
lock
stc
loopne
das
orl
mov
xor
sbb
cmp
fstl
lods
or
cli
test
sbb
push
mov
pop
jo
out
mov
jmp
shll
pop
and
lcall
add
sbbb
fwait
stc
jg
test
daa
adc
cltd
sahf
jp
sarb
fnsave
jecxz
push
cmpsb
sti
jp
mov
add
cwtl
enter
mov
or
sub
stc
and
sbb
dec
fcoml
scas
ljmp
pushl
imul
push
xchg
notb
adc
jae
insb
adc
xchg
jp
imul
out
andl
iret
inc
push
xor
jne
adc
or
pop
cmpb
loop
sub
lret
lods
mov
pusha
mov
fiadds
adc
shr
jp
xchg
das
stos
jg
mov
mov
aad
fisttpll
lods
js
lahf
sub
push
lret
in
jg
repz
fimuls
mov
xchg
jle
xchg
jo
and
ret
stos
add
hlt
dec
cmc
cmp
fdivl
dec
je
mov
enter
jl
mov
lret
adc
dec
dec
xchg
or
mov
push
idivl
pushf
jnp
mov
hlt
movl
ficoms
les
xlat
or
xchg
mov
pop
mov
cmp
gs
fsubrl
les
cmp
fcomp
and
mov
pop
dec
mov
sbbb
cmpsb
dec
popa
std
jo
in
sub
mov
addr16
sub
lret
cld
jne
mov
push
loopne
cmp
mov
adc
fld
fildl
out
ret
sub
bound
fsubrl
ss
add
jo
jge
gs
cs
inc
hlt
mov
out
ja
xchg
ds
lahf
div
loop
pushf
xchg
fisttpl
repz
aas
dec
pop
and
movsl
push
jae
push
sub
gs
add
sub
lea
xchg
cmp
jb
das
xchg
mov
insb
add
xchg
addr16
addl
jae
inc
gs
mov
mov
mov
push
dec
inc
xchg
cli
stos
les
fsubp
sub
sub
icebp
fsubrp
mov
popa
mov
push
jae
xor
push
pop
into
fstpt
jmp
rolb
ja
add
push
je,pn
cs
sub
sub
jne
mov
sbb
ja
cmp
cwtl
loop
add
sub
subl
add
or
jns
add
mov
inc
cmp
mov
pop
fidivs
mov
inc
mov
repnz
cltd
stos
cmpsb
arpl
push
stc
and
sub
fisubrl
fisubs
dec
and
lcall
pop
cs
insl
jecxz
xor
sub
jne
sub
sahf
sub
xchg
mov
adcb
dec
out
enter
test
jb
sar
fsubs
loop
mov
loop
lcall
cmp
pop
test
cmpsl
jg
rorb
jnp
push
jmp
mov
and
aam
lcall
sbb
daa
cli
cmp
addl
jbe
pop
dec
xor
cmc
jbe
imul
data16
cltd
test
lods
xchg
pop
or
nop
mov
popa
pop
rcrb
adc
jns
cmp
lods
push
xor
rcr
mov
xchg
jb
mov
cmp
dec
xchg
sub
jge
daa
int3
les
adc
push
xchg
jecxz
pop
idivb
add
pusha
int
mov
ret
jnp
fnstcw
dec
js
pusha
stos
sub
jno
iret
pushf
cli
leave
cmp
clc
pop
xorb
clc
jg
sub
pop
xchg
ds
bnd
fwait
ror
inc
aas
cmp
scas
shl
out
mov
les
fistl
fsubrp
jne
testl
repnz
push
adc
movsb
and
cmpsl
and
iret
sub
pop
cmp
pop
loopne
aas
out
lds
pop
push
inc
xor
popf
dec
imul
xchg
jno
jo
ds
jp
pop
mov
outsb
dec
shrb
inc
pop
or
sbb
push
mov
lods
cltd
pop
out
gs
ficompl
xchg
mov
pop
sahf
int
sbb
das
or
mov
xchg
lret
pop
dec
mov
inc
call
sti
sub
cmp
rcll
clc
dec
xor
subb
inc
push
jae
pop
mov
adc
fdivr
stos
cmp
mov
hlt
fsubrl
insl
clc
sub
mov
clc
and
add
das
lcall
ret
imul
sub
cwtl
stos
adc
xor
shrl
sub
lcall
shll
iret
pop
mov
les
xor
adc
andl
or
js
fwait
jae
xchg
popa
iret
into
adc
dec
or
sub
inc
lret
mov
loope
push
outsl
cmp
mov
sbb
xchg
clc
lods
dec
faddl
in
daa
cmp
dec
pop
pop
insl
pop
dec
loope
or
pop
dec
sbb
pop
mov
adc
adc
roll
cmpsl
popf
in
out
mov
idivb
inc
leave
pop
mov
rcrb
jnp
in
jmp
adc
shll
movsb
mov
fldt
in
fstl
cmp
insl
sbb
push
mov
xchg
xchg
add
in
test
outsl
pop
fcmovnbe
inc
pop
dec
in
js
mov
dec
mov
movsb
xor
jmp
add
adc
ror
xor
jns
adc
pop
insb
mov
loop
stc
push
scas
sbb
out
mov
mov
jg
xor
cmpsl
mov
andl
out
add
cmp
add
and
mov
and
adc
jge
mov
mov
ret
cmc
nop
cmp
mov
pop
roll
mov
repnz
xor
jns
mov
sub
or
inc
cmpsb
fcmovnb
xchg
cs
jp
cmp
jge
stc
popf
sub
je
ja
shlb
cld
xchg
dec
rcll
push
dec
sbb
fdivp
ja
push
stc
inc
xchg
ret
or
lods
lcall
push
jne
scas
mov
and
jno
push
mov
and
loop
nop
sub
lds
dec
jnp
shr
or
xchg
jno
hlt
cmp
inc
icebp
cvttps2pi
int
cs
sbb
enter
sbb
mov
loopne
cli
scas
inc
sub
out
fsts
mov
xchg
and
imul
and
cmc
lock
fbld
mov
bswap
inc
stos
ja
frstor
inc
xchg
fcomi
push
test
in
cmp
dec
jno
or
loopne
loopne
dec
pop
xor
pop
out
cmp
out
cli
mov
jge
repz
fwait
lods
loop
les
add
xchg
xchg
sarb
in
cmp
xchg
pop
add
xchg
mov
cld
xchg
js
mov
jbe
loope
push
fnsetpm(287
and
and
jno
testb
sub
leave
fdivs
pushf
or
mov
outsb
out
or
and
lahf
hlt
lock
jg
in
ja
pop
push
adc
shlb
mov
xchg
pusha
cmp
ret
int
cmp
mov
fimull
xchg
ret
out
std
jns
scas
inc
fcompl
push
sub
fdiv
mov
mov
mov
rorb
aam
jp
mov
lret
cld
inc
push
inc
stc
dec
stc
or
mov
sub
adc
std
mov
dec
push
cmp
add
mov
mov
push
sub
ds
xchg
sbb
inc
xor
orl
repnz
pop
and
sbb
cmp
lods
cmp
ss
jae
adc
stos
dec
mov
in
arpl
xor
push
imul
inc
popf
divb
inc
aam
xchg
jns
ret
add
std
popa
sub
xchg
sbb
jp
lock
mov
sub
sbb
and
xchg
jge
rol
pop
cmpsb
inc
jns
mov
pop
jle
mov
or
push
in
sub
inc
and
sub
and
vpunpcklbw
xor
scas
sti
dec
inc
fcom
sbb
xchg
je
jb
lahf
dec
frstor
add
push
mov
dec
mov
mov
mov
xchg
pop
dec
jp
out
sub
inc
pop
jne
pop
in
add
adc
jbe
pop
test
ret
mov
add
push
mov
daa
inc
and
adcl
fnstsw
arpl
mov
mov
leave
mov
movsl
push
out
loopne
loopne
cmp
jne
xlat
jnp
mov
cmp
cmp
mov
je
jo
mov
ret
mov
sti
or
lds
addl
dec
inc
fidivrs
xchg
fs
push
test
add
inc
dec
fidivl
aam
mov
push
mov
loopne
pop
lods
add
popf
jbe
xor
out
and
cwtl
out
in
les
pop
sahf
pop
inc
xchg
mov
add
xor
add
mov
imul
push
aaa
or
rclb
jle
and
bound
insb
rol
insb
xor
xor
dec
pop
adc
sbb
mov
push
or
ret
movsb
call
inc
testb
jecxz
mov
les
into
gs
add
in
test
pop
out
ffree
cmpl
jge
sbb
lcall
stc
adc
push
mov
in
repz
mov
rcrl
lds
popa
mov
jo
rcrb
mov
xor
or
jno
sbb
int
popa
pop
cmp
jg
scas
pop
shr
das
ficoml
idivb
rcrb
push
dec
cmp
pop
jmp
stos
push
out
out
flds
sub
pusha
add
sbb
scas
aaa
in
movsb
mov
fnstenv
notl
mov
fisubs
into
lods
mov
dec
loope
mov
sbb
inc
out
sbb
int
pop
fwait
jo
pop
push
into
sbb
sbb
inc
cwtl
lods
mov
add
xorb
xor
adc
sbb
add
mov
pop
out
push
mov
lock
mov
push
mov
mov
out
xlat
ljmp
icebp
in
xchg
inc
test
cwtl
ret
jg
hlt
arpl
rol
sbb
in
imul
or
lds
cmp
dec
mov
lds
dec
xchg
out
test
int
dec
jge
cmp
push
sbb
out
scas
mov
aad
sbb
and
push
cmp
jl
jp
mov
push
jg
cmp
arpl
sbb
dec
adc
pop
adc
insl
sbb
xor
mov
shlb
pop
push
int
cmp
rcl
mov
pop
idiv
shll
mov
sub
mov
sub
rcl
insb
into
sbb
mov
subb
inc
dec
loope
xchg
cmp
dec
dec
push
xor
cmp
nop
mov
lret
jnp
cmpsl
in
test
and
fmulp
icebp
shlb
movl
data16
lret
pop
outsb
push
lea
cmp
sub
shrl
pop
insl
xor
loop
inc
adc
xor
sbb
push
outsl
imul
push
daa
sbbl
or
sub
fprem
mov
cmp
arpl
cmp
sarb
inc
add
inc
lods
mov
je
movsl
adc
mov
bnd
or
pop
sub
inc
pusha
aas
pop
dec
and
push
push
loop
insb
push
outsb
in
aad
jp
adc
mov
xor
mov
fisttpll
inc
sti
rep
gs
jo
mov
movsl
ljmp
push
lock
pop
xchg
inc
mov
std
out
out
push
in
xchg
rclb
icebp
gs
in
cmp
imul
sbb
adc
push
lods
testl
pop
imul
test
insl
sarl
icebp
sub
addb
cmp
sub
hlt
aad
and
xchg
dec
sahf
sar
dec
sub
dec
shrb
pop
in
lods
jmp
jns
sbb
mov
test
xchg
sbb
dec
add
subb
xlat
je
ljmp
or
repnz
iret
sbb
or
sbbb
mov
xchg
dec
ljmp
mov
push
jge
iret
or
dec
xchg
cwtl
cli
movsb
push
mov
jno
imul
pop
repnz
xchg
in
inc
pop
insl
jae
bound
stos
mov
into
mov
cmp
inc
fwait
pop
xor
lret
leave
movsb
std
lds
xchg
out
insl
in
jo
in
mov
jl
addb
fwait
jo
andl
add
cmpsb
jl
insl
xchg
mov
mov
sub
pop
sub
add
es
dec
fldt
lods
mov
sub
sbb
test
mov
add
sub
les
nop
jnp
push
loope
mov
into
mov
and
xor
inc
mov
jne
pusha
test
leave
xor
sti
xor
push
je
adc
cli
aaa
push
mov
push
inc
and
fsubrs
repnz
fidivl
lock
mov
clc
scas
mov
add
or
sub
inc
xlat
bnd
pop
mov
in
sub
add
popa
mov
cmp
cmpsb
or
es
test
push
mov
mov
cmc
loope
add
movsb
test
stos
mov
lds
mov
js
sbb
sub
mov
loopne
jge
test
sahf
pop
icebp
pop
mov
mov
push
adc
cmpsb
pop
sahf
sub
repz
into
xchg
dec
pop
stc
cmp
fwait
cmp
and
bound
xchg
xchg
xor
ret
test
sub
out
adcb
rol
jbe
and
xchg
cmp
ret
pop
xor
inc
inc
and
fistpl
mov
or
xor
fcomps
popf
mov
inc
cli
jae
and
inc
jno
inc
out
bound
ja
xor
test
pop
iret
int3
pop
pminub
dec
cmp
mov
adc
out
bound
test
aas
mov
mov
fsubr
xor
test
and
sbb
clc
or
mov
push
mov
dec
pop
xchg
loop
ret
sub
mov
mov
test
andb
mov
xor
in
int
xchg
movsb
fmull
and
cld
pop
cmp
mov
cltd
mov
out
xor
cld
std
push
cwtl
int
jnp
nop
loop
dec
nop
daa
data16
dec
dec
movsl
inc
sub
xchg
adc
sub
fsubrl
stos
fdivl
std
movq
lods
dec
loopne
jg
gs
cmp
cli
push
and
aam
push
in
fucomip
add
test
xor
jbe
xor
xchg
adc
push
es
add
lds
inc
push
mov
add
inc
jl
mov
repz
mov
sbb
adc
jp
add
gs
fdivrp
xchg
xadd
je
adc
inc
addr16
test
cmp
out
fstpl
push
notl
call
mov
push
or
in
mov
xchg
stos
or
jbe
loop
mov
loope
repz
daa
cmpb
cltd
adc
mov
ljmp
jnp
shr
inc
jo
int
push
or
push
mov
in
sub
xchg
dec
push
clc
cltd
xchg
pop
xchg
lcall
and
loop
inc
or
repnz
in
jns
xchg
sub
mov
cmp
xlat
ret
pop
shrb
scas
adc
jmp
insb
mov
test
or
mov
test
out
test
aaa
cli
dec
out
int3
or
or
push
lahf
dec
fbstp
dec
mov
fs
inc
mov
cmp
cli
iret
shlb
mov
dec
lcall
inc
add
mov
loope
sbb
in
push
and
int
lock
popa
or
dec
fs
testb
aaa
jnp
hlt
jle
push
jp
movsb
xchg
jle
out
add
inc
dec
or
cmp
mov
dec
pop
push
jbe
mov
add
aad
and
push
rcr
push
jecxz
jnp
sbb
repz
mov
movsb
xor
jecxz
fidivrs
add
ret
rcr
imulb
sub
mov
incl
jo
lods
pop
sbb
pop
pusha
push
or
addb
sub
int
cli
mov
push
jae
jmp
jmp
clc
push
xor
mov
fsub
inc
xchg
bswap
in
inc
cmp
popf
xor
xchg
jmp
scas
cmpsb
mov
mov
lds
sbb
jle
sub
mov
push
scas
sub
add
outsl
dec
loope
es
scas
sub
loopne
jle
cwtl
sub
test
dec
movsl
lret
stos
jle
push
add
fdivrl
jg
sub
and
jae
fbld
mov
mov
int3
lret
adcb
ss
jae
hlt
rorl
movsl
shl
inc
out
arpl
xchg
sbb
cli
aam
push
cmp
mov
adc
pop
dec
pop
jb
hlt
pop
sbb
inc
dec
adc
leave
test
and
mov
push
push
pusha
mov
jg
sub
lcall
mov
in
inc
leave
outsb
fdivr
mov
jae
push
sti
and
sub
sub
jl
adc
adc
sbb
push
insb
cltd
lret
pop
icebp
jecxz
dec
adc
data16
imul
flds
add
mov
or
push
rclb
sub
clc
mov
inc
rcrb
cmp
in
sbb
mov
jbe
nop
stos
sbb
rorl
ret
cmpsl
adc
mov
mov
fdivrl
outsb
popf
out
std
xchg
dec
data16
int
rorl
cmp
mov
inc
test
cltd
frstor
cli
and
push
and
sub
jecxz
lds
pop
jg
lea
fldcw
fs
cmp
fsubrs
sub
test
and
jecxz
lods
inc
lds
push
xor
out
cmp
imul
loop,pt
pop
lahf
cli
pop
leave
jge
or
or
repz
movsb
in
cmp
leave
mov
out
mov
jle,pn
jo
add
push
cmpsl
clc
sahf
call
in
jno
lret
mov
push
jg
ja
sub
imul
or
data16
data16
fidivl
sbb
mov
jne
insl
and
les
pop
lahf
cli
inc
jecxz
or
sti
mov
fstpt
and
dec
lret
jne
jne
cmp
and
sub
pushf
loopne
push
pop
or
adc
push
lret
xchg
popf
orb
ja
and
or
andb
daa
xor
call
or
in
adc
and
in
xchg
paddb
mov
mov
push
sbb
pop
sbb
jb
fildll
sbb
pop
addr16
sbb
or
push
test
cli
xchg
xor
arpl
ret
push
add
inc
shl
sbb
push
scas
xchg
insl
nop
insb
sbb
add
fidivl
mov
mov
jecxz
pushf
loope
mov
mov
jp
aas
andb
inc
outsb
jp
xchg
insb
or
dec
lret
jl
pop
jg
leave
and
aad
adc
dec
mov
inc
jecxz
lock
fdivr
and
adc
dec
xor
jns
lahf
das
lret
mov
lret
stos
jecxz
cmp
inc
pop
jbe
sbb
jmp
lds
sub
sbb
out
fs
xchg
dec
mov
repnz
and
and
dec
out
push
out
test
mov
popf
cmpsl
out
pusha
inc
fistpll
xchg
cmc
inc
inc
lret
call
cmp
idivl
mov
lret
jle
imul
jnp
fwait
mov
lods
pop
imul
pushf
mov
cmpsl
scas
jecxz
loope
sarb
adc
add
ja
sti
fwait
sub
enter
jne
jne
pop
aaa
mov
xchg
push
push
test
xchg
bound
lock
push
xchg
idivl
dec
fdiv
imul
lret
andb
punpckhwd
mov
aas
cmp
repnz
pop
pusha
xchg
decl
sbb
sub
aad
xchg
sub
ljmp
xor
aas
push
mov
movsb
add
loop
repnz
call
cmp
dec
andl
pop
outsl
sbbl
xchg
jbe
mov
xchg
push
sbb
or
xchg
sub
cmp
fs
jns
popa
sub
sbb
xchg
mov
or
clc
aad
sub
add
and
rorl
xor
xor
push
mov
bswap
pop
addl
sti
mov
xor
popf
sarl
insl
aaa
sbb
insl
push
mov
add
jne
outsl
test
sub
nop
and
sub
jo
in
sbb
ret
mov
add
xor
shl
sbb
test
pop
lret
push
jo
insl
nop
push
jae
mov
mov
out
out
bound
int
jecxz
mov
loop
or
dec
jmp
rcrl
sub
idivb
fpatan
adc
out
fiadds
mov
and
outsb
jge
fimull
jg
mov
inc
fsts
dec
lods
mov
xlat
adc
mov
add
mov
mov
lret
xor
lret
sbb
outsl
mov
mov
dec
mov
cli
or
cmp
cs
and
xor
iret
mov
dec
and
mov
neg
es
movsl
icebp
inc
mov
mov
jbe
shl
test
insb
adc
push
fimuls
sbb
inc
popl
outsl
fldt
shlb
cmp
aaa
cmpsl
outsl
shlb
call
mov
dec
cmpsb
ret
inc
inc
jl
xchg
sahf
scas
mov
xor
movsl
rorb
jmp
mov
mov
mov
sbb
adc
add
shl
push
add
cmp
inc
lods
inc
js
xorb
lea
pop
jnp
push
pusha
xlat
stos
inc
jge
mov
out
mov
ja
or
xor
stos
out
mov
shll
add
shlb
dec
subl
nop
pop
dec
add
js
inc
loopne
jl
cmp
sub
xchg
adc
lea
add
std
lods
mov
push
int
or
dec
push
add
pop
cmp
dec
pop
and
cmpsb
js
shrb
test
mov
testl
das
push
jne
fwait
je
dec
cmp
push
cld
les
aad
mov
sbb
unpcklps
adc
inc
jg
inc
jg
mov
lcall
cwtl
pop
and
sub
pusha
mov
shll
add
testb
mov
cmpsl
cmp
xor
shlb
shrl
sbb
xor
mov
push
and
iret
or
js
jne
and
cmpsl
ret
adcl
sub
adc
int
outsl
daa
sub
cmp
cmp
mov
out
lods
xchg
push
adc
cmp
sbb
cwtl
mov
mov
les
mov
cmp
cmp
insb
mov
sahf
inc
fcomip
jg
lds
sbb
jecxz
push
xor
pop
out
and
mov
ja
or
stos
and
outsl
pop
scas
fwait
sbbb
shrl
scas
adc
fdivr
mov
mov
and
aam
fwait
and
and
pop
cmc
push
data16
inc
mov
hlt
inc
push
jnp
test
gs
pop
push
mov
add
rcrl
sbb
dec
aaa
popl
mov
test
incl
aaa
mov
mov
cwtl
pop
add
push
xchg
out
push
jns
or
adc
xchg
outsb
bound
xlat
aaa
inc
push
xchg
jnp
push
movsl
je
out
movsl
out
pop
js
jbe
orl
pop
mov
scas
xchg
mov
mov
out
addr16
pop
movsl
sub
les
xor
pop
shlb
jmp
mov
repnz
lret
add
push
jns
gs
ljmp
out
subl
mov
pop
mov
lods
inc
cmpsl
mov
add
std
fnstcw
xchg
push
push
ss
push
mov
adc
pushf
jmp
pop
lock
sub
dec
cmp
jecxz
inc
adc
out
lods
mov
jp
mov
add
dec
jg
scas
lods
stos
mov
add
sub
stos
ljmp
xchg
je
mov
std
mov
aas
xchg
stc
outsl
mov
daa
or
or
dec
push
inc
in
push
lock
inc
lahf
jo
add
adcl
adc
das
popf
and
sub
enter
pop
in
xor
test
adc
fdivrl
pop
ja
cli
sar
or
add
repz
shrl
sbb
mov
mov
push
leave
xchg
xor
jl
cmc
sub
pop
outsb
testb
imul
inc
push
mov
cli
ret
jb
dec
cli
xchg
insl
push
mov
in
xor
lock
sbb
adc
pop
pop
in
and
jnp
xlat
inc
sub
mov
adc
xorl
pop
dec
add
in
subl
push
fwait
test
cmpsl
lods
xchg
pushf
loope
xlat
and
and
bound
hlt
addr16
les
dec
fwait
ljmp
or
sarl
and
lahf
mov
fnsave
lods
mov
scas
xor
pop
out
push
jb
inc
pop
out
mov
jno
push
repz
jno
sbb
gs
fsubrs
movsl
adc
lods
rcr
cmp
inc
mov
sub
out
xchg
sbb
mov
add
mov
sub
rcll
outsl
imul
push
fwait
lods
add
jb
mov
testl
xchg
dec
mov
call
cld
mov
fists
inc
or
int
push
jbe
out
es
xchg
adc
je
in
nop
push
sbb
cmp
nop
add
rol
add
arpl
dec
jg
fnstsw
subl
and
push
fists
xchg
shll
mov
xchg
aam
out
fldt
cmovge
pop
xor
cmp
mov
arpl
lods
and
add
or
cmp
orb
cmp
or
sub
test
arpl
ficompl
aas
sbb
nop
test
repnz
std
jge
aad
dec
xchg
lods
mov
jo
loopne
add
xor
push
fdivl
sbb
inc
jl
or
xchg
push
or
imulb
enter
push
lods
dec
cmpsb
fbstp
enter
mov
push
sbb
ja
sbb
js
add
out
ljmp
mov
or
pop
test
mov
mov
stc
hlt
mov
mov
test
jbe
sub
dec
dec
cmp
movsb
int3
rcrl
sarb
addr16
lahf
cmpb
imul
cmpsb
sbb
sbbb
push
mov
mov
scas
lret
mov
xchg
in
pop
jo
loop
pop
loope
aaa
dec
shl
mov
xor
push
dec
rclb
in
iret
pop
pop
pop
cmc
sar
push
fsubl
mov
mov
fstpt
cmp
js
lea
push
sbb
dec
mov
push
dec
ljmp
imul
cmpsl
inc
or
or
test
mov
cld
fdivp
stos
xchg
or
out
push
jo
mov
jg
ja
push
or
popf
mov
and
pushf
or
mov
clc
insb
adc
rcl
psadbw
shr
jnp
call
mov
and
aaa
jbe
xchg
sahf
add
testl
and
loop
inc
loop
jg
ja
rcll
or
xchg
or
outsl
ror
pop
insb
loop
pushf
jg
fistpl
jnp
jl
gs
test
cs
loope
dec
adc
push
pop
xchg
int
adc
pop
sahf
xchg
mov
dec
cltd
leave
xchg
cmpsb
push
jle
cli
jge
sub
fldl
sub
stc
or
jmp
push
push
lcall
adc
push
add
adc
stc
pop
push
sub
iret
push
pop
arpl
into
sbb
jbe
or
int3
xor
sub
inc
out
inc
jae
lret
xor
push
leave
pop
imul
shrl
cmc
jbe
cmp
jp
in
mov
jb
pop
call
or
push
aas
in
dec
or
cmp
lods
mov
jo
mov
xor
fiadds
push
jmp
push
sub
sub
add
js
pop
inc
into
pop
loop
fisubrs
rcr
cmp
push
hlt
or
xchg
inc
test
pop
out
pop
xor
ret
push
mov
into
sbb
data16
dec
out
mov
cmp
subb
inc
rcrl
sbb
adc
pop
dec
call
fsubrs
loopne
lret
mov
nopl
push
sbbb
sbb
je
ja
jbe
mull
dec
imul
inc
lods
jmp
push
push
data16
shrl
pusha
mov
jno
aaa
daa
inc
in
xor
xor
mov
mov
fcomp
adc
pusha
dec
mov
cmp
jne
daa
sbb
pop
inc
js
aad
in
cmpsb
xor
mov
addl
mov
xor
jmp
loopne
dec
xor
mov
insb
in
sahf
jb
pop
nop
daa
xchg
jns
mov
out
testl
jl
sub
dec
push
ljmp
pushf
repz
mulb
jo
movsb
popa
add
pop
cmp
xor
cmp
fdivrl
lea
jns
leave
push
enter
mov
std
pop
add
add
movsb
or
adc
stos
push
mov
sub
pop
cmp
mov
cmp
inc
xchg
mov
pop
mov
xlat
pop
fldenv
push
dec
sub
scas
pop
test
outsb
push
aad
nop
shl
sbb
outsb
movsb
insb
rcrb
ret
add
out
je
cmpl
mov
popa
pop
cmp
sub
test
cmp
imul
mov
cmp
inc
fiadds
shll
adc
repnz
dec
mov
inc
mov
add
xor
outsb
shll
dec
jecxz
frstor
ret
test
scas
nop
mov
xor
test
lret
adc
push
jae
or
adc
mov
xor
lret
pop
sub
adc
popf
pop
or
push
cli
movsb
and
push
cwtl
jecxz
cltd
int
dec
xlat
jmp
iret
data16
dec
dec
pop
lahf
jb
faddp
cmp
jo
inc
int3
fsts
push
jno
aam
and
push
popa
clc
mov
lahf
add
aas
es
mov
outsl
ret
outsl
mov
jmp
mov
push
cmpsl
cmpsl
test
jae
push
dec
cmc
sub
pop
out
loop
mov
inc
add
fisubrs
or
jns
mov
pop
adc
mov
pop
inc
imul
data16
inc
push
and
xchg
sti
pop
sub
je
std
out
or
mov
xor
mov
jle
pop
filds
js
jb
or
mov
stos
xchg
test
movsl
das
sbb
testl
inc
add
inc
add
aas
dec
je
shlb
or
cld
inc
push
out
jno
arpl
jp
arpl
es
scas
jns
mov
in
xchg
cmp
clc
mov
xor
mov
xchg
movsl
sub
cmp
and
imul
orl
jl
sar
decl
xor
mov
lods
aaa
sahf
ss
pop
insl
and
mov
test
scas
je
mov
lea
into
sub
adc
mov
mov
lahf
in
adc
mov
loopne
stc
iret
add
mov
sbb
jo
push
std
dec
or
inc
fwait
xlat
cmp
fstp
cmpsb
xor
jb
mov
mov
push
in
ljmp
jl
or
out
and
pop
adc
repz
xor
je
loop
scas
sbb
into
mov
lods
inc
loope
mov
lock
insb
sub
lret
in
psllw
and
fsubs
dec
fmul
jg
ss
fidivrs
pop
sub
mov
jg
cmp
adcl
inc
movsb
push
movsl
aad
jno
mov
cmpsl
sbb
scas
inc
repnz
fs
adc
in
cmpb
pop
rcr
scas
sbb
int3
pushf
ss
pop
mov
loopne
mov
and
in
cmp
mov
int3
jg
pop
mov
mov
jnp
and
test
sbb
pusha
bound
das
ja
mov
leave
lss
cmp
sbb
inc
pop
jno
mov
iret
sbb
jle
sti
scas
js
lret
pop
rolb
rolb
mov
xor
add
jmp
rcl
test
pusha
pop
lock
ret
adc
push
fstpl
inc
mov
lods
out
fidivl
test
cltd
loop
mov
add
pop
and
icebp
insl
aam
mov
and
loopne
stc
call
repz
scas
push
sbb
jmp
push
xor
inc
sub
cld
inc
out
sub
test
sahf
ret
pop
mov
js
fdivrl
popf
cmp
dec
in
jp
aaa
pop
sub
inc
lahf
dec
mov
xor
fwait
mov
fstpt
in
adc
test
cltd
push
jl
outsb
add
loop
jne
or
es
mov
add
movsl
cmp
mov
xchg
fldt
mov
pusha
ljmp
mov
cltd
lahf
in
sub
loope
mov
xlat
scas
nop
mov
aaa
dec
and
jb
aaa
int
jp
xchg
mov
test
shrl
push
xchg
or
adc
lods
sub
and
adc
addr16
cs
push
repnz
cmp
pop
imul
mov
inc
push
daa
mov
je
inc
sbb
xchg
jge
xor
adc
sti
aad
int
pop
xor
out
cmc
mov
lret
and
inc
xchg
clc
and
inc
fcoml
ljmp
js
hlt
cmp
nop
jnp
in
add
cmpw
icebp
sub
push
and
push
scas
jle
loope
xor
add
mov
daa
movsb
push
or
outsb
lds
inc
dec
dec
icebp
in
sub
cmc
mov
popa
or
mov
xorl
push
pop
mov
xchg
lret
out
stc
clc
cmp
xor
and
mov
push
pop
addr16
shl
cmp
inc
popf
hlt
iret
pop
in
pop
adc
outsb
adc
pop
les
rcl
push
dec
or
jl
lahf
lods
mov
adc
and
icebp
iret
add
sti
xchg
mull
lods
and
xor
push
mov
inc
test
imul
and
inc
sub
jae
mov
enter
and
testb
scas
fnstcw
in
cli
fldt
xchg
bound
cld
sbb
xchg
push
mov
repnz
cmp
pushf
mov
movsb
jnp
push
push
jg
mov
add
ss
xchg
test
les
mov
adc
xor
inc
pop
push
mov
mov
pmulhw
ficoms
push
xor
cmp
out
xchg
daa
mov
loop
sub
ja
jnp
cld
roll
xchg
sub
cli
cmp
jle
test
andb
fadds
decl
ret
xor
aaa
push
mov
inc
jbe
add
gs
jg
push
mov
mov
inc
push
daa
cmp
aam
jne
arpl
mov
adc
adc
test
add
xchg
mov
cltd
in
cmp
lea
adc
jnp
inc
imulb
jbe
repz
ljmp
mov
cmp
xor
xor
add
pop
xchg
mov
pop
lea
fsub
movsl
or
sub
je
jno
fs
xchg
xchg
dec
scas
ret
xchg
cs
and
ficoml
test
shll
sub
mov
push
pop
push
cmpsb
aam
add
les
fnsave
inc
mov
mov
add
imul
mov
cld
push
cmp
cmp
adc
fbstp
sbb
mov
imul
test
ja
xchg
sub
lret
jp
mov
xchg
and
in
cmp
movsl
test
ss
scas
fidivrs
xlat
inc
fisttpll
pop
jge
or
push
mov
mov
xchg
leave
imul
xor
push
xchg
add
test
push
cmp
inc
popf
pop
mov
ja
and
pop
and
add
cli
out
or
mov
ljmp
jg
mov
clc
dec
stos
lret
mov
aas
ffreep
out
adc
rcl
and
stos
std
icebp
pop
cmpsb
and
push
lea
xor
arpl
out
les
filds
repnz
mov
jo
xchg
ret
jne
dec
out
iret
cmpsb
adc
sub
xor
dec
push
jae
sub
addr16
inc
scas
mov
out
xor
dec
adc
cmp
mov
fstpl
pop
mov
andl
inc
out
scas
mov
push
out
pop
out
mov
pop
out
stc
insb
ss
mov
lahf
mov
mov
push
jae
aam
repz
dec
mov
nop
and
fnsave
and
push
std
xchg
xor
out
mov
cmpsb
mov
nop
fnstcw
repnz
int
sub
scas
cmp
or
mov
sti
cld
movsl
sub
shr
sbb
ret
and
popa
das
movsl
inc
daa
into
xchg
or
insb
xchg
loop
mov
lcall
inc
mov
xchg
cmp
shrl
pop
sbb
mov
push
pop
stc
push
mov
jle
ret
inc
loopne
pop
jno
mov
in
pop
in
and
pop
mov
mov
arpl
and
ss
inc
sti
dec
push
orl
jp
dec
inc
ja
dec
int3
xchg
fsubr
loope
nop
lods
inc
ljmp
fisubs
xchg
int
jo
iret
out
and
cmp
jne
xchg
scas
push
and
mov
dec
jmp
test
stos
adc
cmpsl
stos
testb
sti
or
testl
add
push
xor
mov
int3
xchg
fs
mov
dec
sarl
sarb
sub
call
push
xbegin
add
ret
push
leave
int
cld
mov
stos
andb
push
mov
adc
divl
push
bound
add
mov
fs
stos
pop
mov
loope
adc
and
aas
cli
pop
out
lea
jle
xor
push
jl
stos
jae
popf
push
in
pop
jmp
adc
test
jle
les
push
pop
xchg
dec
xchg
adc
xchg
inc
stc
popf
lock
stc
push
push
repnz
imul
imul
mov
in
aam
xlat
sti
movsbl
push
push
jp
pop
mov
mov
push
aas
fdivrl
push
mov
ffree
popa
loopne
add
or
cmpsl
mov
gs
fdivr
cltd
test
lds
and
mov
xor
jno
sbb
shrb
xchg
testb
push
imul
inc
enter
pop
cmp
nop
sub
repnz
andl
sbb
push
dec
mov
cmpb
mov
mov
pop
pop
stc
fidivl
movsb
jb
xor
push
fwait
push
cwtl
xchg
daa
stc
jnp
lahf
pop
stos
aam
add
test
adc
inc
pop
lock
xchg
xor
mov
ret
mov
xor
xor
nop
dec
lods
ficompl
mov
into
data16
leave
int3
adc
mov
pop
ss
push
pop
adc
aaa
stos
out
dec
jecxz
pop
mov
jae
inc
sub
jg
and
sbb
or
rcll
sub
mov
cmp
cld
inc
aas
mov
scas
inc
adc
push
push
add
lcall
arpl
xchg
xchg
sub
cmp
insl
rcrl
mov
dec
repz
push
fcoml
adc
or
cs
push
mov
dec
add
sbb
adc
mov
pop
sub
sub
sub
pop
loopne
arpl
repz
push
mov
pop
and
push
lret
test
divb
aad
daa
enter
mov
mov
insb
jmp
or
arpl
xchg
movsb
sub
fsubl
xchg
bound
xchg
fistpl
inc
mov
mov
repz
mov
pop
ret
jo
mov
loope
cmc
dec
shr
sub
cmpsb
repz
xor
pop
outsb
stos
bound
jae
mov
lret
inc
data16
jno
in
xor
mov
fbstp
push
insb
or
cmp
pop
xchg
pop
call
lcall
cs
push
sbb
cmp
data16
test
jae
mov
orb
stos
add
push
pushf
in
xchg
xchg
mov
xchg
xchg
sub
pop
push
inc
repnz
jmp
insb
xchg
out
sbb
inc
xlat
sbb
push
mov
xor
or
shlb
outsb
add
jbe
mov
sahf
pop
push
inc
cmp
es
das
enter
xor
dec
test
aaa
idivb
out
mov
addr16
test
mov
shrl
ret
inc
sub
cmp
dec
xor
test
jns
test
inc
jae
push
jb
lret
xchg
test
js
jo
loope
lahf
mov
adc
inc
in
test
scas
push
and
mov
fcmovnu
enter
inc
fnsave
pop
dec
xor
sti
lcall
out
jl
dec
scas
das
outsb
add
dec
pop
or
call
int3
stos
scas
xchg
or
lret
in
mov
and
adc
add
dec
stc
adc
int3
enter
lret
add
jno
fsubrs
mov
lea
add
arpl
and
mov
sub
mov
fidivrl
popf
mov
jbe
in
adc
dec
cmp
pop
imul
rolb
xchg
pop
subb
mov
jl
adc
sub
push
jnp
repz
cltd
std
cli
lret
pop
xchg
sub
les
ficoms
ds
xor
jmp
aaa
lea
cli
xchg
mov
lret
faddl
mov
fistpl
mov
push
jmp
adc
stc
sub
gs
std
gs
nop
ret
repz
adc
popa
or
push
mov
xor
mov
add
pop
ja
sti
es
leave
test
popa
aas
insb
mov
add
mov
into
jnp
xor
xor
negb
inc
xor
lret
dec
data16
dec
xchg
fisubrs
movsl
ret
cmp
mov
dec
js
clc
adc
cmp
nop
das
dec
xchg
lcall
aam
fidivs
pop
test
fists
sub
jp
pop
mov
and
pop
fdivr
xchg
jp
insb
cmpsl
jmp
into
sub
sbb
pop
cmp
rcll
scas
add
outsl
xor
jbe
leave
cs
inc
sbb
dec
loope
pusha
js
push
iret
push
or
lods
ja
das
inc
out
jne
add
mov
in
add
int
repz
xlat
sbb
jo
shr
xchg
xchg
and
jl
out
sti
sbb
ficompl
dec
sbbb
sbb
or
bound
mov
adc
or
cmp
mov
inc
jmp
aaa
inc
fldt
or
out
arpl
test
arpl
sbb
inc
fisubs
fnstenv
pop
mov
jg
sbb
call
ret
ret
outsl
push
pop
imul
loop
xor
imul
push
and
fmul
mov
mulb
dec
push
xchg
lahf
add
addr16
scas
mov
cmp
rorb
jo
sbb
jo
lock
add
pop
testb
pop
add
mov
mov
xchg
dec
push
sub
outsl
sbb
daa
cld
les
jne
add
mov
jb
cmpsb
hlt
jnp
push
stc
push
testb
add
lock
dec
inc
xor
imul
outsl
test
dec
int
mov
pop
hlt
fst
mov
sti
push
push
pop
pop
lods
sub
shl
inc
test
mov
pop
dec
jae
mov
lea
sbb
jmp
pop
movntq
mov
cmpsb
sub
call
mov
mov
ss
dec
or
and
pop
orb
lds
add
jbe
outsb
push
addr16
cwtl
js
addr16
fldl
push
jo
jmp
mov
sub
int
scas
push
xchg
mov
jbe
das
mov
add
orb
js
inc
fiaddl
jmp
inc
push
lods
cwtl
cs
lock
scas
inc
shrl
sub
addb
cmc
popa
cmp
xchg
fimull
push
loop
jae
fs
data16
push
adc
iret
fdivs
lret
xlat
imul
cmc
mov
jo
int3
lret
push
in
mov
lahf
call
sbb
push
iret
dec
das
jle
sub
and
mov
test
xchg
ja
xor
js
jne
fstpl
jo
lock
or
les
testb
jge
in
add
fbstp
adc
daa
sti
mov
pop
ljmp
push
jne
mov
adc
aam
pop
outsb
and
cmpsl
sbb
int
cmpsl
int3
ficomps
dec
mov
push
pop
clc
adc
or
adc
nop
add
inc
ss
fs
cwtl
das
stos
ret
pop
int3
mov
std
jg
push
test
inc
mov
xor
movb
dec
gs
aaa
mov
inc
or
fwait
cmpsb
sbb
dec
mov
mov
stos
ss
frstor
cwtl
stos
arpl
fistpl
push
sub
aaa
dec
xchg
jg
movsb
jg
mov
call
das
mov
and
cmp
in
std
xchg
pop
or
out
xchg
into
addr16
push
or
mov
leave
cmp
sahf
cltd
adc
sbb
mov
adc
shl
push
ljmp
pusha
pop
inc
hlt
or
es
js
lods
sub
dec
rcl
jbe
lcall
and
push
data16
movsb
leave
pusha
push
and
fidivl
inc
stos
sub
mov
divb
lret
jae
shl
jae
push
cltd
in
cmp
pop
idiv
andl
xor
and
dec
out
ficoml
test
mov
push
or
push
mov
mov
xor
mov
cmp
in
jecxz
das
sbb
outsl
jl
add
or
jg
mov
ja
cmp
sbb
popa
fcoms
or
jno
cmc
dec
cmpsb
test
fimull
sbb
jns
mov
cmp
into
ficoml
popf
jmp
or
xchg
fadds
cmp
popf
dec
lock
inc
inc
aad
insb
shll
sbb
jmp
fbstp
dec
and
pop
push
and
je
cmp
push
dec
and
dec
das
jbe
cmp
xlat
int3
roll
cmpsb
sub
daa
in
inc
push
xor
or
mov
ficomps
fs
out
out
movsb
enter
push
cli
xchg
fmuls
xor
pop
cmp
int3
xor
mov
movl
in
xchg
lret
push
jb
cmp
sarb
pushl
mov
faddl
cmp
jne
mov
outsb
xchg
fidivrl
pop
lret
bound
rcl
mov
sbbb
mov
push
fsubrs
sbb
inc
nop
testb
jp
push
mov
mov
cmpsl
pusha
fwait
jge
jns
mov
test
add
and
insl
les
mov
mov
jecxz
jbe
xor
adcb
pop
jmp
or
into
inc
sub
adc
jo
mov
test
or
mov
sub
mov
jne
ljmp
dec
shll
jg
addr16
lds
idivl
cmpsl
in
jp
cltd
out
cmpsb
cltd
lods
jnp
stos
and
popa
outsl
stc
stc
mov
sbb
data16
movsb
cmp
xchg
inc
les
xlat
movsl
sub
aam
jle
in
lock
xchg
adc
mov
popf
in
iret
cwtl
xchg
pop
out
mov
bound
mov
cmpb
insl
dec
pop
sahf
mov
pushf
or
mov
outsb
cmp
or
fmul
or
pop
pop
inc
add
f2xm1
loop
rcl
add
clc
cmp
pop
lea
push
lods
mov
inc
add
movsb
xor
xchg
popf
xor
sarb
stos
jmp
sub
or
imul
dec
pop
das
std
xor
xchg
enter
inc
jmp
in
cmp
dec
inc
rcrb
jmp
aaa
ds
sub
mov
xlat
outsb
loope
add
mov
loope
push
aam
insb
fwait
std
int3
arpl
jmp
mov
push
jl
sbb
scas
dec
mov
dec
mov
rorl
or
inc
loope
xchg
nop
or
repz
nop
jae
push
jo
mov
adc
mov
or
stc
cmp
cwtl
pop
add
push
pop
jb
inc
xlat
mov
test
es
mov
imul
mov
xor
mov
push
mov
aad
ja
pusha
loopne
inc
sub
push
xor
aam
std
fdivl
mov
jnp
mov
sbb
stc
aas
shl
repnz
push
sub
dec
cmp
inc
mov
jb
cmp
xor
xchg
decl
dec
inc
sub
je
jp
lods
jno
lods
shlb
and
lea
test
push
xor
mov
movsl
insl
in
mov
fidivl
xlat
pop
jnp
pop
xchg
cmp
mov
xor
ss
mov
ds
nop
pop
leave
insl
add
jp
sbb
mov
pop
adc
lret
addr16
mov
stos
or
arpl
jb
cmp
mov
xor
pop
adc
aam
inc
stc
out
andb
loopne
jb
mov
int
or
dec
fisubs
mov
sub
and
dec
out
dec
mov
jnp
mov
jle
daa
pusha
or
daa
xor
mov
fistpl
sbb
pop
cmp
add
js
add
testl
cld
aaa
jge
imul
adc
inc
cmp
push
insb
addr16
pop
add
fwait
xor
idivl
aam
inc
pop
gs
xor
mov
mov
cmp
mov
mov
inc
xlat
fst
hlt
mov
add
mov
push
addb
cli
outsb
sub
add
std
sub
xor
dec
push
push
andl
scas
jmp
inc
test
ss
in
arpl
jbe
icebp
push
ret
push
add
aam
mov
pop
movsl
or
jne
bound
jbe
xor
xchg
mov
in
jp
or
ret
lods
xorb
sbbb
hlt
adc
sub
inc
insb
rorl
sub
cmp
fcmovb
fidivl
dec
push
or
sub
jecxz
add
jge
dec
sahf
cmc
faddl
out
or
mov
push
incb
mov
in
sub
xor
sbb
sub
rcr
insl
push
inc
les
ds
lea
sbb
xor
push
xor
clc
adc
xorl
cmp
pop
outsb
pop
jmp
fwait
and
or
daa
imul
das
mov
sub
pop
fsub
mov
push
jp
or
inc
aaa
add
cmp
dec
pop
xchg
sub
sub
in
lock
test
mov
xchg
popa
sbb
pusha
cmpsl
outsl
sub
jo
movsb
sub
pop
sub
aad
mov
push
mov
stc
adc
shl
out
jo
mov
je
inc
iret
xchg
pop
int3
fcomps
sub
pop
ja
pop
inc
insb
scas
mov
repnz
movsl
dec
inc
pop
cmpb
ret
adc
movsb
push
lcall
mov
loopne
rcrb
into
and
lcall
add
mov
dec
add
jmp
outsb
dec
cld
in
and
lods
rcr
int
add
lock
jbe
enter
call
push
or
icebp
sbb
jae
in
andb
shrb
loope
pushf
push
lea
mov
stos
sahf
rcl
test
xor
dec
mov
test
les
jo
es
add
push
xchg
imull
jae
inc
jmp
cmp
in
sahf
add
imul
jp
dec
int3
xor
push
fadds
jns
in
add
fsubrl
aam
cmp
cwtl
push
orl
fsubl
lcall
ja
inc
and
sbb
dec
aad
aam
sbbl
div
mov
mov
rorb
mov
sahf
hlt
mov
orb
mov
xchg
add
in
fsubrl
add
cwtl
sbb
add
mov
xchg
fcompl
xor
add
test
insl
mov
pop
rorb
jbe
es
mov
mov
out
in
pop
mov
int
adc
out
imul
lahf
xor
bound
add
lds
jmp
inc
pop
cmp
jae
fcomp
in
dec
adc
sti
dec
nop
das
inc
xchg
in
call
lock
fcmovnu
cmc
mov
lea
xchg
stos
mov
neg
mov
fadds
push
push
jl
xlat
test
loopne
lods
push
cs
mov
or
shlb
mov
push
jne
mov
out
test
jae
sub
dec
arpl
js
dec
lock
or
aaa
jne
sti
in
dec
out
inc
andb
cltd
xchg
inc
pop
push
addr16
dec
pop
mov
fs
dec
nop
cmp
cmp
movsl
sbb
push
test
sti
push
fwait
les
je
enter
sub
push
in
loopne
push
cmp
andl
mov
mov
gs
jno
std
data16
dec
lcall
rcrb
sub
and
mov
movsl
repz
dec
ss
ret
inc
test
xchg
mov
sub
pop
pop
xor
jnp,pt
or
cs
pop
stos
leave
orb
dec
fmuls
mov
or
in
js
les
sahf
add
mov
inc
aam
outsl
cmp
mov
inc
jmp
icebp
ret
xorb
js
icebp
test
notl
lods
cmp
int
scas
xor
xchg
xor
mov
cmp
adc
mov
dec
aas
cmc
pop
scas
mov
iret
sbb
ret
jp
popf
xor
movsl
xorb
jmp
js
pop
xchg
adc
mov
das
xchg
mov
lahf
std
xchg
or
fstpl
sbb
in
dec
mov
cltd
dec
rcrb
xchg
and
repnz
add
mov
dec
subb
and
jle
out
std
enter
cmpsl
test
or
mov
fwait
cmpsl
cs
pop
jae
pushf
push
sub
repnz
push
imul
adc
xchg
add
lock
xlat
leave
cmp
arpl
inc
ljmp
nop
gs
sti
cmp
mov
hlt
enter
imul
jnp
xchg
cmp
xchg
pop
push
mov
iret
stos
int3
add
int
sbb
pusha
cmp
jp
and
ret
pop
mov
stos
sbb
lds
hlt
mov
sarb
cltd
loop
std
push
repnz
xlat
ss
pop
xor
popf
dec
cmpsl
icebp
popa
repz
inc
jo
push
inc
icebp
xchg
enter
mov
sti
sub
push
out
leavew
addb
sbb
repnz
adc
xchg
sbb
mov
jbe
mov
adc
test
cltd
lock
push
xor
jp
dec
aad
cmp
pop
ljmp
push
or
push
mov
in
cwtl
xchg
mov
insb
jnp
pusha
leave
or
adc
push
inc
ds
divb
cld
mov
fs
mov
bound
lods
inc
sub
xor
flds
mov
orb
fwait
jno
iret
mov
mov
cld
xchg
insb
mov
mov
xchg
mov
fxch
inc
inc
js
jp
pusha
lcall
mov
inc
out
sbb
xchg
dec
inc
ss
dec
andb
pop
sub
filds
sub
inc
or
leave
in
jecxz
jmp
fcmovne
ds
sub
fdivr
cmp
cltd
pop
iret
fisubrl
jbe
outsl
cli
inc
stos
lods
jmp
leave
lea
and
mov
aaa
stc
popf
std
callw
xchg
jmp
xchg
xchg
outsb
aaa
andb
sbb
aas
rolb
insl
loopne
repz
inc
out
pop
jbe
cmp
insb
pop
movsb
nop
daa
out
aas
fsubr
std
or
fildll
bound
and
pop
xchg
xor
add
in
sbb
mov
stos
sti
mov
hlt
hlt
rolb
sub
repz
pop
jo
rcll
subb
jmp
mov
adc
inc
lock
jb
test
jno
lea
es
mov
stc
fwait
aad
sbb
pushf
dec
jmp
je
mov
mov
popa
add
push
adc
dec
insb
jne
pop
in
repz
xor
sbb
xchg
add
xchg
xchg
jge
iret
lds
xlat
cmp
jecxz
outsl
es
mov
inc
mov
lea
adc
clc
aas
inc
push
pop
pop
lcall
mov
cmpps
xchg
mov
dec
fsubrl
aas
jl
gs
in
mov
pusha
int3
jl
mov
mov
fs
dec
and
jno
pop
mov
xchg
sti
mov
sbb
or
jmp
sub
mov
out
mov
mov
es
push
fsubl
jb
jl
enter
leave
sbb
cmp
std
in
orb
or
aam
jb
incl
inc
pop
imul
sub
stc
sarl
dec
popf
mov
arpl
jle
insb
pop
imul
mov
push
inc
out
xchg
xor
movsl
inc
adc
aad
scas
das
mov
xor
es
loope
jmp
into
sahf
and
clc
popl
fs
sub
cmpsl
lret
and
jbe
xchg
and
or
mov
push
pop
mov
sbb
xchg
dec
pushf
mov
xchg
lods
lods
mov
jmp
mov
add
xor
cmc
xchg
dec
xor
cmpsl
or
mov
pop
sti
pop
shlb
mov
dec
xchg
jecxz
pop
sub
sbb
inc
cmp
add
add
jecxz
mov
stos
dec
or
xor
fnstsw
jno
mov
sbb
enter
sbb
pop
js
dec
ror
icebp
not
and
aad
ja
loope
popa
notl
or
ret
push
into
fdivl
ret
movsl
call
lock
or
lahf
ss
js
nop
gs
push
pusha
fnsave
into
add
inc
inc
std
xchg
lret
sbb
add
mov
dec
and
xchg
fbstp
mov
and
xchg
cmpsb
push
mov
push
mov
sub
call
adc
mov
scas
sbbl
push
sbb
xchg
inc
aam
inc
cmp
sbb
in
in
jl
mov
mov
je
mov
sbb
xchg
cmp
push
ret
test
dec
addr16
mov
add
es
lcall
adc
jo
loop
jae
fsubl
adc
mov
stc
jl
mov
sbb
add
sbb
push
hlt
dec
mov
pop
dec
dec
cmp
arpl
das
stc
inc
es
imul
sarl
push
clc
int
into
arpl
testl
jp
cmp
into
inc
and
stos
pop
add
xor
mov
push
jo
mov
pusha
mov
jb
mov
fisubs
data16
lcall
lret
push
cmpsb
sub
inc
cwtl
movsb
sub
adc
pop
or
out
in
in
popa
les
movsb
addr16
je
shl
movsl
xchg
cltd
xor
inc
xchg
test
mov
push
mov
sbb
mov
adc
mov
push
test
lock
dec
pop
add
call
mov
mov
repnz
scas
call
popl
mov
push
not
pop
int
xor
push
or
xor
xlat
jl
add
jae
add
or
repz
xchg
fnstcw
sub
push
aaa
rcpps
cmp
dec
hlt
cwtl
mov
push
lock
cmpsb
sub
dec
nop
les
cmc
mov
dec
lea
invd
cmpsl
sub
test
hlt
shrb
sahf
mov
lods
add
or
js
shll
js
clc
sub
jle
inc
jnp
mov
mov
aaa
in
je
int3
and
xchg
pop
aaa
fs
test
push
scas
fstps
sub
lods
xor
jge
xor
jle
lret
cld
xchg
out
dec
push
ljmp
lock
mov
add
inc
dec
notl
movsb
bound
repnz
int
aam
dec
mov
and
sti
rcl
popa
or
enter
ret
lret
jne
pop
addl
bound
fwait
xor
jo
clc
cmpsb
scas
stc
js
xlat
inc
lods
push
cmpsl
or
pusha
jp
push
dec
sbb
call
dec
adcl
dec
add
push
dec
cwtl
stos
adcl
inc
xor
leave
fstpt
in
pushf
loopne
enter
sti
sbb
push
movsl
loopne
xor
inc
test
aaa
sysenter
push
inc
push
sbb
push
mov
hlt
xchg
sub
fadd
jg
ret
cs
or
lods
mov
ss
es
mov
inc
and
jp
cld
xchg
lret
mov
and
jbe
leave
adc
xor
push
lret
movsl
and
xchg
push
push
stc
dec
or
cmpsb
les
xor
sti
push
das
aaa
imull
add
fdivs
loop
int
xchg
mov
sbb
jns
es
push
hlt
popa
ja
sbb
lahf
xchg
adc
push
ret
subl
push
cmpsl
cmp
or
push
xor
insb
inc
sbb
bound
hlt
popa
mov
dec
jecxz
jo
push
ds
push
fsubp
push
lret
pop
jo
mov
xchg
mov
jns
pop
mov
mulb
imul
cmpsl
test
jmp
lea
in
std
sahf
lahf
xor
cmp
cmpsb
inc
lods
aaa
inc
pop
pop
or
cmp
lods
push
xchg
push
sub
jecxz
mov
sarl
push
into
pusha
fninit
mov
push
je
popa
xchg
add
or
int3
pop
or
mov
push
sbb
or
jle
push
xchg
shrb
mov
or
repnz
in
sub
stos
inc
push
dec
xor
xlat
daa
enter
fwait
jne
pop
inc
out
sbb
in
imul
lahf
sub
pop
ret
dec
out
stos
pop
insl
sub
push
popf
std
push
xchg
dec
es
sbbl
scas
adc
jne
pop
push
rcrb
jno
icebp
mov
aam
gs
fs
inc
fwait
cmpsl
cmp
pop
jle
loop
dec
std
push
ljmp
xor
push
xchg
inc
mov
sbb
aad
mov
das
mov
jg
push
cmp
sub
push
test
mov
setno
mov
scas
sub
adc
jo
lret
ret
jle
push
aas
lods
pusha
int
stos
mov
gs
mov
inc
shll
jmp
enter
sbb
mov
fdivrs
lock
mov
sub
std
xchg
imul
iret
pop
push
fcmove
andl
insb
mov
cmc
push
cltd
repz
aaa
pusha
jne
and
std
mov
mov
and
inc
in
sbb
xor
and
loop
sbb
sub
dec
fstpt
aad
xor
jl
push
add
ss
fbstp
cmpb
cmp
clc
push
sbb
add
cmc
xor
dec
mov
mov
testb
orb
push
jp
mov
mov
inc
fucomp
mov
add
xor
mov
sbb
push
out
push
xor
aad
imull
and
hlt
inc
jbe
and
sub
mov
and
mov
mov
aas
xor
mov
add
mov
push
jmp
icebp
pop
jle
popf
imul
mov
inc
fwait
jl
add
mov
enter
pop
test
push
clc
jne
push
inc
scas
xchg
sbb
pop
movsl
daa
xchg
andl
jno
fdivl
cltd
imul
mov
fildl
sbb
add
mov
jno
mov
adc
nop
inc
pushf
mov
pusha
and
scas
les
mov
movsl
repz
jbe
montmul
mov
pusha
test
outsb
sbb
pop
xlat
repz
xchg
cmp
aam
sti
add
lret
repnz
push
jmp
test
sbb
int
pusha
popf
cmp
mov
jle
jnp
aam
and
push
inc
mov
int
loopne
and
xchg
mov
pop
jg
xchg
sub
testb
cmp
hlt
in
mov
cmpsl
push
push
push
lcall
sbb
pop
sub
xchg
sub
aam
mov
popf
jno
fldt
sahf
stos
cmpl
mov
cmp
jnp
jg
test
dec
xchg
lea
push
sbb
movsb
dec
stc
enter
hlt
mov
jae
jecxz
adc
aad
mov
icebp
movsb
jae
push
add
xchg
pop
mov
push
jno
lea
mov
loopne
or
leave
fdiv
xor
insb
or
or
imul
in
out
push
out
dec
lds
adc
cmpsl
pop
into
pop
pop
jns
insb
scas
sub
subb
ret
and
mov
fisubl
lcall
and
insb
inc
inc
data16
mov
mov
xchg
scas
clc
inc
push
movsl
rcrb
scas
rcr
loopne
movsl
test
sub
push
test
popa
sahf
mov
xor
mov
mov
into
lret
inc
and
rcr
cld
out
stos
leave
and
xchg
mov
cmpsb
jmp
xor
inc
sahf
rorb
adc
push
outsl
jg
pop
dec
sbb
iret
ss
pop
cmp
push
call
mov
jae
clc
add
cmpsb
cli
mov
rcll
dec
fs
or
imul
xor
lahf
push
js
ss
xorl
aad
pop
popa
jg
xchg
adc
sbb
aad
out
or
or
test
jp
mov
sub
je
jl
outsl
pop
andl
jne
push
test
or
mov
and
sti
push
xchg
cmpsl
mov
sbb
push
lods
mov
das
fucomi
rcll
add
mov
repnz
mov
pop
test
fsubs
movsb
shr
and
mov
movsl
addb
dec
mov
push
ss
mov
sarl
pop
dec
mov
out
mov
cltd
jp
adc
fadd
lcall
ret
or
les
arpl
jmp
outsl
push
inc
les
push
mulb
movsb
mov
call
fisubrl
lret
or
dec
jle
loopne
push
or
push
fistpll
or
test
aam
ljmp
in
jns
pop
scas
sbb
repz
jge
mov
mov
jns
movaps
inc
ljmp
pop
jo
add
mov
mov
lock
xchg
push
out
mov
push
cmp
sbb
and
mov
popa
cmp
cmp
add
rcrl
fwait
xor
lcall
adc
push
mov
mov
shl
in
add
add
movsl
out
lea
daa
cmp
push
push
test
add
aaa
in
movsl
add
mov
xor
filds
push
or
test
push
sarb
pop
aas
xor
aaa
or
push
jno
repnz
push
outsl
add
mov
sbb
sbb
cmpsl
out
cltd
imul
and
mov
gs
and
push
push
jg
adc
fisttpll
arpl
cwtl
fmul
leave
or
jns
push
popa
mov
adc
inc
dec
push
sbb
insb
sbb
mov
pop
dec
rcll
test
mov
test
lods
dec
mov
lret
push
imul
mov
adc
sub
int3
fists
add
lods
pop
xchg
dec
add
mov
clc
adc
pusha
add
lea
sti
cltd
pop
imul
sbbb
inc
jae
lock
imul
pop
push
iret
and
push
test
hlt
addr16
lret
es
fsubl
insb
lods
sub
mov
push
push
fwait
out
cmpsl
mov
lret
pop
cmp
nop
adc
stos
ret
push
lcall
stos
add
adc
sarb
shl
lea
xchg
pop
stc
adc
mov
pop
movsl
rorl
scas
mov
outsl
jg
push
sahf
nop
xchg
scas
xchg
into
fidivrs
inc
imul
faddl
dec
sbbl
xlat
add
hlt
jae
sbb
dec
pop
lcall
pop
mov
lretw
iret
es
aad
iret
insb
adc
cltd
stos
pop
jl
in
and
sub
inc
lods
in
dec
bound
leave
xchg
fidivl
popa
jmp
add
xchg
mov
cmp
add
or
scas
inc
mov
cli
cli
pushf
sub
cltd
js
outsl
daa
outsb
jge
xor
jge
or
xlat
in
xor
xchg
fimull
mov
dec
in
adc
inc
mov
fists
pop
ss
call
scas
jno
in
pop
loope
mov
ljmp
popf
fsubrs
cmpsl
sti
xchg
fnstcw
ret
sbb
inc
repnz
adc
xor
iret
mov
pusha
jmp
pop
jno
stc
jmp
sbb
iret
gs
inc
push
push
jmp
inc
jecxz
mov
cmp
call
out
mov
mov
in
lods
cli
xchg
sbb
ds
bound
or
cmc
lds
js
in
jge
je
cltd
lea
add
imul
xchg
insb
insl
fcoml
mov
out
or
lea
rol
xchg
les
push
js
bound
adc
or
jge
mov
nop/reserved
push
push
jae
mov
inc
xchg
or
mov
nop
sub
pushf
hlt
mov
xor
adc
mov
cmp
dec
mov
mov
inc
mov
test
push
popf
xchg
jae
int3
cs
imul
call
or
mov
xchg
scas
sub
adc
jle
sbb
repnz
mov
mov
dec
loope
jno
dec
jecxz
imul
ret
dec
xchg
or
xchg
or
leave
xor
jl
popa
and
int3
popaw
cld
mov
stos
sub
in
push
mov
stos
pop
test
mov
push
jl
les
jg
in
sub
dec
rorl
lock
ds
dec
xchg
adc
lcall
add
ds
lret
push
test
mov
addr16
lahf
mov
cli
inc
shrb
lods
sbb
mov
push
sbb
push
mov
dec
push
or
jb
loopne
pop
dec
add
xchg
fwait
dec
mov
adc
xchg
mov
fwait
mov
jo
mov
cli
inc
mov
lds
sahf
push
dec
out
jecxz
imul
dec
cmp
das
ss
xor
or
adcb
test
loop
pop
jl
aas
subl
push
jnp
scas
cmp
outsb
mov
loop,pt
and
fsubs
call
mov
ror
push
or
mov
addr16
push
mov
enter
hlt
ret
mov
dec
aas
cli
sbb
in
subb
sbb
cmp
loope
jnp
idivl
mov
movsl
jle
fmul
je
andb
dec
push
scas
or
mov
push
call
push
js
sub
mov
pop
fimuls
mov
jle
data16
and
aad
ret
pop
js
add
push
jle
test
repnz
sti
sbb
sub
add
push
stc
clc
xchg
sub
add
and
mov
and
inc
push
lods
mov
filds
sbb
push
or
push
sub
sub
aad
pop
sbb
repz
cmp
dec
outsb
pop
mov
xchg
daa
aad
test
into
gs
popf
scas
sub
ja
jge
iret
leave
push
jne
adc
dec
jbe
cmp
std
addb
mov
push
frstor
mov
mov
inc
popa
scas
testl
les
push
in
pop
xor
mov
fildl
mov
mov
inc
test
mov
sbb
cwtl
sti
dec
in
out
dec
icebp
clc
mov
divb
mov
pop
lret
bound
lods
jo
ror
cmc
mov
fcmove
mov
mov
int
aas
mov
test
inc
xchg
mov
mov
rcrb
rorb
pop
mov
and
or
pusha
lea
stos
cli
push
adc
or
sbb
pop
push
fildl
mov
add
add
in
mov
pop
dec
and
jp
fdivs
push
fwait
xchg
mov
xchg
sahf
gs
cmp
add
fmul
imul
jo
sti
or
cmp
out
shrb
imul
out
mov
pop
or
mov
rclb
mov
sahf
pop
mov
cmp
rcr
dec
mov
scas
jp
leave
fldt
dec
test
sub
cmp
insl
aam
rcrb
out
jnp
pop
mov
js
xor
or
mov
ret
nop
pop
and
cmp
xchg
imul
adc
jmp
je
mov
loope,pn
cmpb
mov
push
push
push
pushf
js
repz
clc
cmp
xor
je
dec
mov
push
sarl
mov
xor
imul
sub
int
adc
fmul
mov
dec
pop
outsl
pop
xor
mov
jo
cs
and
lods
adc
mov
inc
jge
mov
fldcw
sub
and
ret
rolb
ljmp
idivb
push
xlat
popf
and
lret
rcll
mov
aam
or
icebp
push
js
pmulhw
inc
ja
adc
mov
adc
fcoms
ja
div
out
sbb
mov
mov
stc
sub
inc
xor
pushl
test
pop
pushf
add
nop
mulb
lret
or
outsb
clc
adcb
pop
cld
inc
mov
inc
mov
mov
es
add
cmpsb
mov
pop
hlt
xchg
loope
arpl
dec
add
and
lds
lret
add
push
sub
pusha
fsubs
lea
test
sbb
cmp
in
mov
mov
xchg
xchg
imul
jge
xchg
jp
adcl
fbld
popa
dec
mov
arpl
and
push
mov
mov
sbb
and
mov
ret
jb
mov
lds
stos
in
lret
pop
repnz
pushf
daa
nop
shl
ds
cmp
lds
pop
clc
xlat
cwtl
sbb
leave
clc
mov
cmpsl
mov
cmp
js
push
sub
leave
icebp
xor
pushf
push
push
sahf
stc
push
divl
mov
into
loope
adc
test
jl
xor
das
add
pop
mov
xchg
ret
jg
inc
lods
out
sub
out
mov
pusha
xchg
lret
daa
testb
push
outsl
sub
dec
jmp
rcrl
jns
add
cld
shll
and
ds
popf
mov
mov
les
sub
sbb
mov
loop
fisubrs
rcrb
imul
dec
xchg
adc
test
mov
add
xor
push
dec
sub
add
xor
shrb
pop
push
push
sbb
jb
dec
cmp
daa
xor
test
lret
lods
cwtl
stos
adc
pop
jne
mov
rclb
jecxz
jns
out
mov
xor
sbb
ljmp
test
cmp
sbb
sub
sbb
adc
lds
cmp
push
ret
stos
sub
pop
lret
stos
jmp
lret
xchg
jg
add
iret
daa
fidivrs
add
hlt
push
jns
movsl
fldenv
pop
lds
pop
sti
sahf
add
decb
pop
push
sub
mov
add
lods
imul
cmp
lcall
adc
or
pop
pop
outsb
test
scas
mov
pop
lods
pop
outsb
fistpll
aas
into
jge
lret
cmp
mov
push
dec
mov
mov
aaa
and
sbb
fisttpl
int3
scas
stc
sub
sub
cmp
pop
bound
cwtl
inc
cmpl
mov
enter
mov
ss
leave
push
adc
mov
jmp
mov
or
inc
lahf
mov
popa
inc
outsb
mov
fcomi
hlt
cld
mov
push
mov
in
adc
pop
push
mov
or
out
sbb
push
pusha
inc
xchg
lret
cltd
std
push
das
xchg
mov
shll
push
mov
leave
es
ret
push
std
xchg
pusha
and
xchg
cmc
or
lock
lea
lea
xchg
fyl2xp1
sbb
inc
in
adc
daa
stc
int3
pop
mov
test
or
bound
sti
mov
xchg
sub
push
mov
imul
adc
jecxz
les
mov
push
scas
push
ds
fbstp
mov
lcall
loop
gs
add
mov
lds
imul
cs
lods
stc
jmp
mov
out
pop
loop
push
cmp
sub
mov
in
lret
inc
dec
lock
std
aas
mov
outsb
cmp
out
mov
sbb
xchg
scas
xchg
notl
mov
sub
pop
mov
js
in
divl
xchg
push
lahf
popf
rcrl
push
sbb
jae
sbb
popf
mov
fwait
push
cmp
insb
ss
xchg
pop
xchg
addl
push
mov
jne
pop
add
test
repz
and
fidivl
ljmp
sub
rol
notb
or
or
jmp
mov
inc
arpl
ljmp
xor
push
andl
push
lea
lret
add
or
les
test
mov
int
and
cmp
sub
adc
les
outsl
mov
mov
ja
sub
adc
aaa
pop
pop
lcall
pusha
fcmovu
adcl
pop
ret
loopne
mov
cs
mov
cmp
scas
xchg
pop
push
dec
arpl
cltd
and
cwtl
add
and
push
inc
das
adc
jb
jnp
into
enter
mov
mov
mov
popa
lret
or
jno
push
jne
pusha
mov
xchg
or
jnp
mov
pxor
adc
lock
js
lods
xchg
jae
xchg
sbb
xchg
mov
int3
jecxz
pop
stc
mov
fisttpll
repnz
sbb
rcl
xchg
pop
mov
push
dec
rcll
pop
imul
push
cmpsl
mov
or
rcll
cmc
xchg
sbb
jae
cltd
int3
push
add
test
repnz
mov
notb
cmp
sub
or
ret
leave
adc
test
and
cmp
bound
cld
data16
popa
push
pop
inc
loope
pop
call
outsl
movsl
inc
stos
outsb
test
or
and
call
mov
add
inc
dec
aas
movsb
jle
sahf
push
mov
or
push
jns
add
stc
inc
nop
sub
cmpsb
mov
fstps
xchg
sti
xchg
pop
sub
add
sub
push
out
lock
cwtl
int3
push
and
out
icebp
mov
or
fidivs
repz
inc
int
pop
inc
push
out
sub
pop
jg
mov
xor
add
lock
data16
jmp
mov
jne
pop
cli
lods
mov
scas
addb
std
inc
jmp
jmp
or
pusha
jl
push
mov
pushl
pusha
mov
cmp
adc
int3
add
fistps
pop
mov
dec
leave
outsl
sbb
pop
pusha
int3
inc
inc
jle
call
xchg
and
scas
in
pop
das
pop
dec
es
jnp
mov
cmpsl
fwait
enter
stc
adc
sbb
mov
je
cwtl
xchg
or
xchg
cmp
dec
and
adc
push
cs
rorl
sahf
fbld
mov
xorl
or
jg
dec
es
pop
mov
mov
xor
cmp
ret
sub
mov
pop
gs
or
or
dec
ljmp
aad
je
dec
add
dec
xor
addl
jns
sub
sbb
js
lods
stos
fidivrl
mov
adc
mov
adc
out
inc
push
dec
dec
cmp
jmp
jae
sarb
sub
mov
mov
orb
lcall
in
stos
lea
sbb
stos
arpl
sub
dec
cmp
ja
icebp
movsl
cmp
andl
adc
cltd
das
mov
dec
mov
jp
adc
enter
push
loop
nop
in
or
mov
mov
cwtl
add
pop
lret
pop
and
mov
cmp
mov
xchg
jnp
cmp
sbbl
idivb
inc
hlt
adc
pop
icebp
movsl
and
mov
lods
jl
pop
sub
mov
repz
je
sub
rol
shrb
jg
sub
mov
js
call
cs
les
int3
sbb
jno
push
mov
mov
jp
in
stos
cmp
and
mov
sub
iret
repnz
adc
lcall
in
jb
add
test
sti
xchg
subb
jnp
sub
jnp
cmp
aas
imul
cwtl
arpl
lcall
movsb
sti
xchg
fcomps
xchg
push
mov
push
je
ret
pushf
sub
stos
jmp
ret
insl
xlat
in
ret
add
scas
jne
dec
jno,pt
dec
loop
dec
sbbl
sub
outsb
pop
or
imul
ss
repnz
mov
out
mov
mov
xchg
jne
daa
jno
push
in
fmull
and
inc
lods
mov
inc
xchg
fidivs
lahf
xchg
sub
scas
mov
fbstp
sbb
cmpsl
jmp
jbe
xchg
loop
nop
cmp
lods
mov
inc
faddl
sub
in
adc
and
or
call
jecxz
lock
and
ja
jl
mov
pop
inc
sub
sub
mov
stos
and
xchg
mov
orl
cmp
jnp
test
movsl
mov
popf
lret
mov
pusha
iret
sub
inc
or
stos
push
mov
loope
dec
call
xchg
pop
ljmp
sub
xchg
cmp
pop
push
enter
mov
push
es
or
cwtl
stos
mov
jge
aam
add
jg
cmc
mov
enter
pop
mov
sbb
mov
xchg
out
mov
test
in
mov
lock
adc
sti
mov
lock
mov
adc
push
das
jmp
push
sub
xor
ror
fsubs
scas
out
sbb
sbb
jae
pop
jb
dec
or
jbe
and
inc
shl
adc
imul
ds
adc
or
pop
insb
stc
lcall
aam
cmp
movsl
adc
pop
ds
pop
cli
push
in
sub
fmull
inc
in
ljmp
mov
pop
mov
pushf
mov
popa
sahf
fs
push
leave
inc
mov
sbb
jns
in
jne
jle
and
jnp
ja
repnz
ljmp
adc
jge
std
pop
popa
mov
sti
cld
xchg
sub
sbb
sbb
dec
arpl
inc
notl
cmp
hlt
and
dec
std
mov
xor
sbb
addr16
insl
mov
mov
sar
add
xor
jge
adcb
adc
fdivl
fmuls
pop
test
mov
adc
test
sbbl
xor
mov
xchg
out
stc
repnz
sbb
fidivl
xchg
int3
cmp
gs
push
xorps
sbb
movsl
push
jb
and
ret
pop
and
ds
repnz
std
xchg
and
xchg
inc
out
inc
mov
xor
cld
inc
filds
adc
inc
popf
xchg
xor
inc
mov
mov
loop
push
inc
scas
cmpsl
jle
jl
inc
out
push
push
adc
out
pop
imul
mov
int3
dec
fs
dec
das
inc
inc
pusha
push
sub
inc
sub
mov
into
in
push
and
stc
out
xchg
ja
or
sub
inc
jle
outsb
into
shrb
xchg
pop
jl
mov
mov
dec
in
or
sbb
inc
sbb
jbe
mov
mov
mov
lret
pusha
xchg
fcompl
dec
xor
in
pusha
ret
subl
insb
iret
orb
cmp
in
add
stos
xchg
je
arpl
out
sub
xor
iret
fnstcw
inc
scas
outsb
jge
lret
mov
fists
test
addr16
movsb
je
lods
aas
scas
mov
les
stos
cmp
jb
jns
xchg
clc
pop
flds
xlat
std
pop
push
xor
fimuls
iret
mov
ret
call
stc
fmuls
or
mov
cmp
fldl
mov
pop
pushf
mov
or
mov
nop
adc
xor
loope
xchg
lahf
sahf
xor
in
xchg
xchg
dec
mov
push
stc
sub
shll
dec
dec
pop
mov
scas
fisubrs
lea
dec
jbe
sahf
xor
jmp
imul
add
cwtl
shr
push
mov
cmp
inc
inc
mov
push
jmp
xorb
or
jp
dec
push
stos
hlt
rclb
pop
pop
test
sub
scas
inc
out
or
push
cli
and
cmp
mov
xchg
inc
data16
and
pop
inc
jge
sbb
mov
aaa
out
or
loop
mov
cltd
and
loopne
arpl
and
arpl
xor
bound
scas
pop
aaa
pop
adc
les
cmp
jbe
dec
cmp
mov
xchg
loope
movsl
push
xor
lock
pop
xor
xchg
cwtl
cmp
and
ljmp
sbb
out
sbb
int3
filds
or
xchg
sahf
xchg
leave
and
fistl
xor
bswap
jle
mov
in
call
pushf
ss
mov
lds
lahf
inc
fcmovne
inc
arpl
xchg
mov
mov
popf
fstpt
pop
lods
cld
and
inc
dec
fnstenv
cmp
adc
inc
pop
cmp
ret
push
js
adc
lret
lods
das
in
adc
fnsave
sbb
test
fstpt
out
mov
dec
pop
fs
jle
js
lcall
gs
pop
aad
push
sbbb
sbbl
sub
inc
test
fstl
fidivrs
shlb
push
aas
sub
sub
sub
mov
shll
jecxz
inc
dec
pop
popa
leave
out
rcrb
mov
dec
inc
xchg
pop
and
es
orb
xlat
and
rcrl
inc
pop
lock
nop
in
fldenv
add
test
lea
add
inc
fs
out
jmp
jnp
xor
jmp
inc
or
inc
outsl
sbb
and
adcl
dec
insb
mov
push
outsl
sub
in
xchg
addr16
aad
arpl
out
push
imul
mov
cltd
sub
out
lock
add
gs
imul
xchg
shll
aas
call
jae
mov
sarb
in
ret
test
iret
sbb
push
js
jmp
aaa
lds
cmp
jns
and
sbb
ds
push
cwtl
loop
push
fwait
aad
test
jnp
push
mov
xor
cs
jmp
cmpsl
mov
lea
jne
loop
dec
xchg
mov
scas
push
push
hlt
bound
xchg
nop
scas
decb
pop
ss
xchg
dec
pop
popf
push
call
lcall
icebp
sub
jmp
pop
and
inc
jl
out
mov
sbb
int
ja
ds
add
sti
arpl
add
cmp
lea
les
outsb
sbb
push
mov
add
cld
test
lahf
stos
adc
jl
xchg
imul
lods
pop
xchg
push
fucomp
pushf
data16
mov
adc
add
and
fstl
push
test
xor
enter
nop
push
sbb
xor
jge
addr16
inc
cmpsl
push
dec
mov
jg
xchg
sub
cmp
mov
in
and
mov
adc
out
and
test
add
in
push
jg
push
es
ficomps
jnp
mov
clc
pop
in
out
fistl
mull
cmp
dec
and
or
jl
inc
sti
cmpsb
sub
in
sbb
cld
ficoml
dec
fcomip
jne
loopne
adc
int3
and
jge
ljmpw
imul
add
xorb
mov
mov
dec
loop
lock
lods
loope
mov
pop
sub
daa
repz
push
fcomps
xchg
test
cmpl
sbb
xor
or
xlat
daa
and
adc
pop
mov
cmc
mov
adc
iret
mov
in
cmp
lret
nop
movsl
bound
mov
dec
adc
push
std
sub
xor
loop
or
into
mov
ficomps
loopne
repnz
push
call
mov
outsb
int3
popa
outsb
cltd
push
popa
sbb
imul
jecxz
adc
push
mov
leave
mov
gs
clc
cwtl
cli
fsubs
jns
sub
mov
cld
mov
push
push
fs
push
mov
scas
popa
test
inc
shl
or
ljmp
adc
sti
mov
cmp
les
insb
add
int3
ret
mov
ljmp
cwtl
mov
shlb
push
data16
adc
inc
shrb
pop
ljmp
call
in
out
mov
out
dec
mov
jbe
addr16
inc
lods
adcl
mov
mov
mov
push
sbb
mov
sbb
mov
pop
mov
jecxz
popf
mov
mov
jmp
adc
sbb
push
fstpt
cmp
cmp
cmp
lret
sub
lds
xchg
call
cmp
push
pop
pusha
jg
inc
not
add
ljmp
xor
pop
and
mov
add
aaa
aaa
popa
int3
push
fsubrs
fmul
dec
decb
ret
xor
push
and
xor
pop
xchg
adc
inc
in
loope
xor
push
mov
pop
mov
mov
mov
push
in
dec
adc
rorl
xor
pop
mov
repnz
jp
lea
pop
mov
inc
mov
xor
jmp
push
inc
test
add
mov
adc
push
insb
xorb
cld
cmp
lock
nop
fs
in
pusha
and
sbb
and
mov
loop
je
xor
bound
call
mov
cld
and
rorb
notrack
adc
pop
inc
fildll
pop
fmull
pop
dec
push
fdivrp
push
mov
inc
xor
loop
aam
jno
inc
sbb
test
sub
add
lret
sub
mov
and
xor
mov
lret
mov
jo
inc
mov
dec
data16
inc
in
pusha
xor
jle
pop
negl
dec
add
sub
add
or
cmpsb
xor
aam
xchg
pop
js
add
xchg
push
in
in
cs
insb
lret
cmp
push
cli
adc
in
lret
or
or
mov
inc
dec
scas
pushl
adc
push
aaa
stos
lret
addr16
jb
xor
das
inc
stos
enterw
cmp
xor
pop
or
shrb
aaa
jne
inc
arpl
pop
adc
ja
xchg
sbbl
or
xchg
add
aaa
push
cmp
negl
repnz
jae
jge
out
dec
imul
addr16
in
jno
clc
add
sti
lret
mov
jge
aam
das
sarb
loope
cmp
cmp
sbb
pop
fs
and
adc
lods
push
cmp
cmp
push
mov
cmpsl
and
sbb
test
mov
outsb
inc
jne
push
mov
and
xchg
out
outsl
pushf
ljmp
adc
int3
int3
and
fs
dec
into
ljmp
sub
mov
imul
mov
push
fucomip
arpl
stc
xor
icebp
int3
stos
pop
pop
cmpsl
jno
adc
jl
imul
pop
sbb
pop
inc
mov
pop
les
inc
les
xchg
jbe
push
adc
lret
lock
push
cmc
dec
mov
ret
test
or
dec
stc
ds
in
jle
mov
xor
cmp
cmp
hlt
iret
xorb
sbb
mov
out
lea
adc
pop
test
ja
in
pusha
jecxz
add
cmpsl
inc
ss
pusha
mov
test
or
pop
stos
popa
push
add
orb
ret
mov
arpl
cmp
jae
lock
icebp
push
fisubrl
inc
das
sub
jg
scas
bound
push
pop
cmpsl
mull
push
sub
pop
mov
ja
sub
push
pop
xorb
int3
lret
xchg
stos
inc
pop
adc
mov
int3
lret
andb
imull
ret
mov
cmp
scas
insb
pop
ffreep
pop
leave
pusha
xchg
repnz
data16
rorb
jecxz
mov
mov
shr
loopne
hlt
pop
insb
mov
jbe
cmp
lods
jbe
mov
iret
push
inc
cmc
insb
int3
and
mov
xchg
jb
cld
or
xchg
cmp
je
sbb
and
mov
dec
mov
mov
ljmp
mov
addr16
popf
stos
fcmovbe
loopne
or
push
push
daa
xchg
xor
js
sub
movsl
push
jne
outsb
ret
cmp
sbb
js
fwait
sub
dec
mov
push
sbb
mov
das
sub
mov
mov
jae
fbstp
int3
in
sarb
jg
push
rolb
insb
int
push
lahf
lods
sub
sub
inc
jl
jge
sbb
jmp
pop
insb
ljmp
inc
xchg
and
les
aam
mov
outsl
int3
aaa
push
xchg
jge
sub
mov
call
aam
pop
sarb
ret
in
daa
sbb
outsl
shrd
test
sub
in
out
fldcw
clc
mov
test
add
clc
mov
and
sub
mov
clc
jns
push
sbb
test
jge
and
leave
scas
cmp
cmc
pop
hlt
push
mov
aas
aas
orl
push
cmc
les
add
hlt
lcall
xchg
aaa
sub
xchg
adc
pop
jns
mov
cmp
and
cmpsb
lahf
dec
or
loope
loope
lods
loope
test
leave
sbb
inc
gs
ja
cmp
call
mov
cmpsl
add
test
push
out
mov
pop
shl
cmp
test
cmp
or
sbbb
sub
mov
mov
sbb
push
adc
inc
sti
icebp
js
xor
or
sbb
stc
dec
cmp
mov
push
call
int
ja
mov
push
mov
nopl
xchg
pop
mov
orl
mov
inc
sbb
sbb
imul
push
test
mov
or
popf
pop
pop
dec
mov
jle
in
push
nop
sub
jo
sbb
imul
int
cmp
inc
test
adc
cmp
mov
pop
inc
data16
inc
inc
push
mov
xchg
sub
lcall
and
dec
xchg
popa
rcl
pop
mov
fdivl
fisttpl
xorb
jo
jne
stos
push
rcrb
loopne
pusha
dec
test
cmp
xchg
movsb
pop
pop
ljmp
lock
sarb
mov
mov
fcoml
loop
repz
pop
sub
mov
aad
addl
xor
sbb
adc
fdivs
push
loopne
sbb
mov
mov
nop
cmp
mov
scas
cmp
iret
jne
lea
mov
push
outsl
ljmp
mov
adc
fidivs
std
inc
xor
loope
xchg
jno
or
cwtl
mov
ljmp
xchg
jno
mov
mov
sbb
inc
das
sub
adc
stc
sub
lds
in
inc
aad
popl
orb
cmp
jle
jno
dec
test
dec
inc
mov
enter
jbe
lret
sbb
jg
addr16
stos
inc
movsb
int
xchg
call
loop
int3
sub
and
imul
mov
loopne
lods
adc
call
jle
cmpsb
movsb
mov
cmpsb
mov
add
mov
test
popf
cli
pusha
mov
push
sahf
adc
mov
mov
push
cmp
ds
jne
imul
repnz
into
dec
cli
push
xchg
xlat
cmp
pusha
xor
outsl
mov
push
stc
rclb
add
adc
mov
mov
or
pushf
repz
mov
and
lcall
aam
jns
mov
mov
inc
mov
in
xorb
rorl
lahf
jae
mov
pop
xchg
scas
fidivs
adc
push
xchg
jecxz
es
mov
push
and
aam
insb
fs
pop
jns
insb
aas
mov
rcr
mov
lahf
gs
insl
sbbb
pusha
mov
or
int
adc
and
stos
sub
aam
fnstsw
or
add
inc
int
pop
jmp
icebp
pop
imul
sub
mov
xor
lret
push
add
aaa
xor
inc
fcmove
pop
pop
ret
fadds
fmuls
jl
out
mov
in
cli
sbb
fisubrs
dec
adc
push
mov
orb
or
mov
arpl
lds
enter
mov
cmp
add
and
cmc
add
scas
sub
push
sarb
sbb
and
imul
aam
xchg
mov
cwtl
push
jbe
or
add
imul
fwait
hlt
pushf
sbb
jl
les
lret
adc
mov
in
xor
mov
dec
hlt
scas
sti
test
add
pop
das
mov
mov
sbb
dec
in
pushf
je
daa
loopne
inc
lcall
inc
shl
daa
xorl
jnp
cmp
fnstenv
dec
add
jle
jp
cld
dec
cli
or
inc
popa
jbe
test
jecxz
inc
sbb
lret
pop
mov
cmp
fbstp
insl
inc
push
and
test
fmuls
imulb
addr16
insl
aam
mov
bound
sbb
aam
push
push
orb
scas
ss
sub
push
sub
xchg
call
sbbb
lahf
in
mov
sbb
ljmp
rcll
inc
cmp
ljmp
jae
stos
ljmp
or
fs
sub
daa
add
sub
pop
adc
adc
mov
outsl
or
inc
gs
sub
bound
fists
push
mov
jmp
imul
sub
fwait
je
or
out
adc
cld
enter
pop
test
push
lods
cmc
push
mov
shr
outsb
loop
iret
cmp
mov
pop
pop
add
push
xor
xrelease
or
cwtl
es
mov
cmp
ss
dec
mov
cmp
and
pusha
pop
aas
rorl
sbb
shlb
in
and
and
out
xchg
popa
cmp
adc
js
icebp
adc
xor
sbb
ret
pop
mov
shr
sbb
mov
pop
lds
loope
not
popf
pminub
and
fistl
fs
out
push
outsl
outsb
enter
aas
adc
lret
cmpw
inc
in
incb
mov
outsb
push
jnp
cmpsl
sbb
pusha
jl
stos
mov
pop
out
push
enter
std
arpl
or
and
jge
xor
adc
rcrb
mov
andl
mov
popa
sti
out
jo
mov
sbb
mov
or
push
jle
inc
inc
sahf
fistpl
dec
movsl
es
or
fwait
jge
jmp
jecxz
jl
dec
mov
icebp
jecxz
pop
xchg
jge
push
pop
pusha
je
push
cmpsl
push
mov
ja
in
repz
sbb
sbb
dec
aaa
mov
pop
orb
repz
sub
bnd
jle
ja
cmp
icebp
fsubrs
or
xlat
push
lods
lret
aaa
xchg
push
mov
xchg
xor
orl
add
xchg
es
xchg
push
inc
xchg
sbb
lcall
pop
insl
shlb
addr16
out
xchg
pop
jp
or
je
mov
adc
sub
imul
mov
test
rorl
stos
pushf
inc
xchg
mov
or
jle
inc
in
icebp
jge
rol
pop
mov
hlt
xor
pop
stos
or
jmp
clc
and
js
insb
jmp
orl
jne
mov
lods
imul
repz
cmc
fwait
or
out
rcl
cmc
adc
mov
jo
insl
movsb
xchg
adc
jmp
ret
jno
or
mov
and
xchg
mov
scas
into
insl
invd
fnstsw
xchg
nop
sub
jne
cmp
inc
outsl
or
pop
mov
insb
pop
mov
mov
mov
jmp
out
pop
jae
frstor
cltd
mov
fnstsw
sbb
adc
push
addl
outsb
push
js
fucomp
xor
add
iret
mov
xorb
adc
and
ret
sub
sbb
mov
dec
stos
sbb
mov
dec
pusha
ss
loope
and
out
cmp
sbb
adcb
cmp
jno
cltd
mov
fcompl
jp
xchg
outsl
mov
fnstenv
into
jmp
pop
pop
leave
test
xlat
cltd
imul
pop
push
mov
jp
vmwrite
lods
addb
daa
or
cmp
sub
popf
sbb
adc
ja
xchg
xchg
sub
imul
push
xchg
pop
sub
mov
adc
mov
pop
cli
inc
push
jecxz
xor
addr16
dec
mov
sub
cltd
das
push
out
or
imul
dec
stc
sbb
xchg
bnd
mov
sbb
dec
dec
or
xor
outsl
push
movsb
bound
mov
int
jns
int3
cmc
mov
jg
pop
mov
add
shll
movsl
bound
push
push
psubd
jmp
cs
adc
jmp
and
incb
xchg
or
and
inc
sahf
movsb
push
inc
lea
or
mov
add
cmpsb
xlat
sub
push
ja
ds
into
adc
popf
in
mov
adc
addl
push
repz
insb
xor
loop
lea
xchg
in
lcall
mov
mov
arpl
stos
jmp
pop
popl
ljmp
call
inc
pop
dec
shl
call
and
mov
repz
jno
mov
pusha
ss
cmp
pop
scas
jne
xor
dec
inc
std
inc
dec
mov
fsubl
leave
and
sbb
je
jo
ret
mov
push
dec
sub
xchg
sbb
pushf
pushf
push
adc
lock
cmp
sbb
je
and
shll
cmp
insl
ds
aas
adc
sbb
sub
sahf
dec
frstor
jae
pop
push
cmpsb
cwtl
push
add
sbb
ret
mov
pushf
dec
stos
add
test
lahf
xchg
jo
insl
lcall
out
fsubrs
pop
xchg
adc
rcrb
cmpsl
sahf
and
dec
mov
sbb
sti
icebp
xchg
pop
push
adc
cmpsb
insl
loopne
fstl
cs
js
cli
mov
cmp
pop
cmc
hlt
into
push
push
xor
dec
shlb
fistpll
frstor
or
lret
dec
mul
fsubr
and
dec
loopne
inc
ss
outsb
mov
jae
mov
fucom
in
popa
rcll
add
mov
dec
outsl
sarl
ljmp
test
dec
xor
stos
cmp
jmp
arpl
insb
out
iret
xor
fisubrs
add
sbb
test
outsb
mov
cli
iret
hlt
xchg
inc
lahf
shrb
rcrb
out
iret
pop
sti
push
push
icebp
jne
int3
inc
stc
nop
jne
inc
mov
mov
repz
clc
pop
or
imul
or
lcall
stc
in
scas
xchg
ljmp
insl
mov
inc
iret
and
add
clc
movsl
dec
add
pop
imul
test
or
pop
mov
mov
insb
inc
cmp
rorb
jo
jbe
shll
dec
jns
jl
sub
push
add
add
rcrl
xor
push
mov
mov
mov
jmp
rcrb
pushl
or
icebp
dec
fldln2
std
fiaddl
int3
cmpsb
push
mov
scas
jbe
in
mov
xchg
xor
pop
dec
add
jmp
or
int
adc
sbb
fiaddl
cmp
and
lahf
mov
rcl
cmp
add
jbe
adc
or
adc
mov
notb
negb
mov
push
mov
roll
test
mov
and
mov
test
ja
daa
inc
jecxz
xchg
bound
bound
sub
jb
out
sub
popa
clc
sbb
jp
imul
sbb
mov
repnz
pop
and
and
loopne
enter
mov
add
sbb
adc
mov
mov
sbb
sbb
push
ds
ret
push
mov
je
rcrl
mov
test
add
push
and
popf
ljmp
mov
fdivl
and
jle
xor
dec
pop
aam
cwtl
xchg
inc
push
xchg
movsl
repz
xlat
add
push
mov
fcmovu
and
addb
mov
jle
adc
jo
rolb
popf
andl
push
movsl
and
add
mov
or
je
popw
imul
cmpsb
and
je
subb
mov
pop
push
adc
loop
cmpsl
dec
jnp
mov
fistl
xor
cli
repz
mov
jb
xchg
fidivl
dec
shll
jg
ds
sub
addr16
loope
and
xchg
lret
lock
push
pop
cmp
stc
test
xor
adc
xor
sub
mov
test
cwtl
enter
xor
push
jmp
inc
lods
sahf
fnstenv
push
add
xor
pop
aam
mov
mov
ds
cmc
punpckldq
das
add
xlat
std
sahf
andl
cmp
sub
push
hlt
in
aaa
pop
xlat
sarl
mov
xchg
jp
mov
std
cs
div
sahf
dec
pop
mov
xlat
shr
cltd
push
jge
es
mov
add
imul
cwtl
test
pop
fiaddl
pop
addr16
fdivrl
push
sbbl
pop
jne
jns
cmp
stos
test
push
add
in
icebp
cli
xchg
aaa
stos
lahf
imull
icebp
and
addr16
mov
or
push
not
pop
mov
jne
fsub
sub
dec
cmc
inc
out
out
loop
mov
and
mov
imul
or
mov
decl
sti
cltd
inc
xchg
data16
int
add
push
cli
testl
aas
test
jbe
cmpl
pop
loopne
sbb
lahf
loopne
mov
loop
inc
call
mov
jae
inc
and
arpl
arpl
ljmp
mov
and
imul
inc
insb
jno
dec
mov
sbb
rclb
icebp
xor
lret
gs
and
mov
aad
stc
mov
loopne
dec
push
inc
out
hlt
or
cmp
insb
in
pusha
enter
outsl
repz
cmp
clc
and
sub
pop
xchg
repz
scas
out
sub
icebp
shlb
scas
mov
cmp
push
fwait
sbb
and
sarl
xchg
jmp
lods
add
mov
iret
aad
or
jo
xchg
es
adc
fs
push
in
xor
and
xor
cltd
mov
out
sbb
outsb
in
push
mov
sbb
iret
jmp
fldenv
dec
mov
aas
dec
pop
shl
cmp
arpl
jb
mov
mov
mov
cmp
pop
lahf
ss
cmpsb
pop
loop
jae
adc
cs
jne
mov
mov
ret
repnz
sbb
sub
mov
push
hlt
jae
rcrb
cld
inc
dec
inc
loopne
inc
cmp
dec
xchg
or
xor
fucomip
sbb
inc
fs
js
fnsave
sbbl
insb
out
leave
and
add
add
mov
lds
xor
les
fistpll
or
lahf
jle
out
xchg
sbb
mov
cmp
pusha
cmp
push
add
xchg
je
pop
mov
idivb
ret
daa
adc
push
pop
xchg
xor
sahf
out
sub
sbb
sbb
shr
push
icebp
xchg
sub
or
and
mov
jg
in
out
or
jb
stc
inc
sbb
or
push
cmc
movsb
mov
push
ds
in
sub
mov
aaa
leave
jns
adc
add
mov
jge
inc
sub
jp
test
cmp
into
in
add
sbb
inc
testl
and
xchg
dec
mov
xchg
adc
mov
push
mov
dec
or
in
inc
sub
ljmp
ljmp
jns
mov
add
cmpl
dec
pop
sbb
pop
mov
dec
iret
jecxz
adc
cwtl
movsb
movsb
mov
jle
mov
or
cmp
out
aad
jno
add
adc
inc
out
pop
icebp
xor
push
or
xor
cmp
sbbl
dec
out
dec
dec
push
cmpsb
mov
call
movsl
bsf
cld
in
test
dec
add
repz
mov
xchg
adc
icebp
jl
and
lds
or
pop
pop
repnz
push
mov
add
xor
addr16
insl
rclb
jns
bound
mov
ret
jbe
loope
and
xchg
into
ds
pop
ja
mov
clc
cmpsl
aaa
mov
test
push
loope
rcrb
cmc
push
mov
jl
cmp
jge
loope
jmp
cmpsl
push
push
repz
jp
adc
jmp
jbe
lret
je
cmp
mov
or
rcrl
jno
sbb
sahf
lahf
inc
sub
jno
push
cmp
scas
insl
leave
mov
ds
lods
cltd
aas
and
add
das
add
sbb
data16
test
sub
mov
inc
dec
mov
xchg
xorl
sub
and
push
lret
mov
xchg
inc
popa
je
xor
or
daa
push
adc
inc
push
jno
xchg
mov
rcrl
mov
pusha
subb
and
mov
xchg
push
or
ljmp
adc
cmp
pop
insb
mov
fldl
cmp
sub
mov
jle
lods
push
pop
pop
movsb
fmul
cmp
push
call
xchg
xchg
addr16
add
dec
nop
cmp
in
popf
icebp
aaa
adc
jo
push
mov
lods
cltd
mov
mov
ss
xchg
scas
hlt
stos
pop
test
xor
insl
mov
in
jg
mov
in
jae
repz
and
stc
xchg
or
pop
lock
jns
lcall
gs
fbld
sub
inc
and
int
aaa
jbe
mov
daa
sub
ss
push
loopne
or
jge
xchg
in
cmpsb
cltd
lods
jae
fidivrs
xchg
pop
jo
repnz
push
std
lods
aaa
dec
out
mov
xlat
pop
pop
cmp
dec
shl
jl
aaa
mov
jnp
xchg
mov
lock
aam
xchg
inc
lahf
sti
test
sub
loop
adc
dec
mov
xor
push
inc
cltd
mov
xchg
xor
adcb
std
lahf
daa
rolb
pop
imul
xlat
outsb
mov
lahf
out
mov
cmc
xchg
and
xor
add
mov
aad
mov
mov
jmp
add
sub
pop
icebp
or
xchg
in
push
push
stc
cmp
insb
xor
push
xchg
loopne
mov
or
push
or
mov
push
fisttps
test
inc
or
rcll
test
jecxz
js
ss
xchg
jle
cmpl
pop
dec
add
mov
call
stc
jno
mov
mov
scas
xor
push
test
shlb
outsl
je
mov
bound
push
aad
andb
xor
ret
adc
jp
and
xor
inc
mov
rorb
mov
jb
out
mov
lahf
cs
pxor
jbe
fs
jmp
out
int3
jg
nop
shlb
inc
testb
adc
fidivl
outsl
push
notb
ja
push
test
paddusb
sub
aas
mov
dec
push
addr16
rcrl
and
mov
and
sub
pop
je
cmp
sbb
mov
dec
ret
repz
outsb
orl
xchg
push
out
push
push
or
bound
out
mov
sahf
outsl
inc
pop
push
mov
jno
lret
adc
pop
test
push
pop
pop
pop
mov
xchg
into
jg
lcall
stos
mov
lea
in
mov
movsb
push
shrl
fidivs
mov
and
dec
shr
fisubl
shlb
mov
aaa
out
or
add
in
sbb
fmuls
and
push
ret
insb
scas
xor
imul
jle
fisubrs
subb
sub
mov
push
call
xchg
cmp
cltd
std
std
inc
cmpsb
mov
jmp
push
aad
pop
or
or
xchg
xchg
or
xor
xchg
or
push
std
xor
ficomps
popf
xor
xorb
xor
sub
add
jge
cwtl
inc
inc
fdivrl
mov
xchg
mov
pop
mov
popa
xor
outsl
dec
pop
add
dec
xlat
xchg
sarb
les
inc
movsl
ret
loope
jp
mov
sbb
or
sbb
xchg
fadd
dec
add
js
sbb
cltd
or
mov
outsl
jae
std
fmull
test
push
jae
xchg
sub
dec
sub
xchg
cmp
dec
mov
fwait
dec
aam
xchg
mov
call
pop
iret
outsb
sarb
xlat
pop
add
loope
mov
in
into
sbbl
cmp
pop
outsb
sbb
cmpsb
andl
mov
dec
call
cmc
push
push
or
adc
sbb
outsb
mov
push
pop
mov
cmpsb
insl
sbb
inc
lock
and
rorb
sti
mov
mov
insl
pop
pop
shl
aas
sub
mov
cmp
push
pop
lahf
or
inc
sbb
in
add
popf
push
pop
add
pop
mov
jge
pop
inc
mov
mov
add
dec
cmc
adc
or
lods
popa
stos
mov
pop
lea
imul
call
and
mov
mov
aam
push
sahf
jne
jae
ss
push
or
push
sahf
jae
rcr
mov
xor
xchg
call
jle
movsl
xchg
sbb
mov
icebp
sbb
cmp
push
loop
sbbl
and
jo
or
cltd
pop
popl
test
jb
or
or
popl
out
xchg
mov
add
push
fdivrs
sub
sarb
lea
mov
hlt
xchg
call
pop
jnp
sub
pop
dec
xor
or
fildl
addr16
hlt
inc
push
and
push
hlt
dec
std
es
inc
test
add
vaddss
inc
mov
and
fmull
cmp
xchg
sbb
shrl
add
mov
icebp
jmp
and
test
shrb
mov
xchg
arpl
push
sti
xchg
mov
les
and
fcmovnu
add
lock
jo
mov
mov
hlt
in
nop
push
cmp
in
daa
push
or
out
les
sbb
jo
test
ds
inc
dec
add
push
loopne
xchg
aaa
mov
repz
mov
xor
mov
cld
outsl
mov
out
daa
mov
pop
test
jmp
cmp
pop
or
jge
fisubrs
pop
adc
imul
pop
leave
jno
mov
mov
lret
mov
cmc
std
and
xlat
cwtl
aas
add
jl
shrl
adc
jb
or
movsb
ret
mov
rclb
inc
sarl
lods
data16
gs
push
int3
fidivs
cmp
inc
loop
sbb
xchg
mov
ja
jne
ljmp
pop
std
sbb
enter
or
pop
adc
pslld
pop
aas
sbb
leave
lret
je
loopne
iret
push
pop
adc
mov
adc
and
loop
mov
mov
add
je
mov
and
test
test
inc
sub
mov
pcmpgtw
mov
andl
sub
and
pop
mov
xlat
mov
aam
popa
pushf
xor
dec
pop
ret
jg
mov
push
bound
jmp
addl
jle
das
adc
dec
scas
push
pop
popa
jbe
sbb
fwait
out
add
stos
sub
icebp
into
pop
jb
leave
mov
inc
push
out
imul
iret
subb
sbb
sbb
dec
and
inc
ror
jp
gs
out
loopne
jns
add
aad
fs
xchg
and
scas
mov
aam
mull
outsb
push
in
mov
cwtl
jbe
cmp
jecxz
out
pop
call
cmp
mov
sub
enter
inc
test
pcmpgtd
icebp
rolb
cmp
cs
mov
addr16
int3
leave
mov
add
mov
int
or
push
mov
push
lods
push
and
jle
imul
add
pop
push
cmp
lds
jo
clc
cmp
lret
sub
rclb
inc
cli
xchg
icebp
fsubrp
arpl
aaa
jne
cld
cmp
mov
mov
test
push
or
cmpsl
xor
mov
lret
push
pushf
cmpb
dec
testb
push
dec
and
add
adc
roll
iret
jne
xchg
xor
dec
pop
dec
gs
loop
xchg
and
jg
sbbb
enter
mov
push
lods
nop
stos
incl
stos
cmp
fwait
or
shl
ja
lock
rorl
lds
clc
xor
aaa
nop
aas
pusha
andl
ds
sahf
sti
jg
push
outsl
push
sub
jo
ret
adcl
loope
pop
xchg
das
dec
aad
bound
jno
cmp
out
ljmp
pop
in
mov
inc
out
cwtl
inc
mov
lcall
ret
xor
mov
sarb
jae
shrb
push
push
sti
or
mov
ret
out
movsb
jno
dec
push
daa
or
out
xor
lahf
xchg
xchg
push
fs
icebp
adcb
and
std
mov
rol
push
xchg
into
and
xor
divb
xor
test
dec
addr16
in
dec
call
mov
lds
and
jnp
add
cli
pushf
in
pop
fisubrl
cli
sar
out
scas
in
cmp
push
add
dec
sub
dec
add
ds
repz
incb
into
xchg
int3
arpl
scas
int3
or
insl
lret
in
pop
js
add
add
nop
aad
push
mov
cmp
sub
adc
mov
inc
ficoms
push
stc
xchg
test
sti
iret
sbb
aaa
cmpsl
xchg
sub
loop
sbb
shl
xor
daa
stos
pop
in
add
mov
fistpll
decb
sub
pop
adc
in
push
int3
data16
add
sub
pop
ja
out
add
iret
dec
mov
push
je
repz
xchg
mov
xchg
cli
ds
pop
jecxz
mov
mov
fsubrl
mov
loope
cmp
inc
notl
or
inc
adc
aaa
xchg
jle
add
aaa
jne
loop
mov
push
movsl
cmpsl
or
filds
inc
test
adc
enter
insb
jle
aas
dec
or
loop
sbb
xchg
xchg
into
add
add
movsl
xor
in
mov
gs
popf
lods
hlt
lret
in
addl
cmp
data16
shlb
mov
das
scas
mull
jp
mov
int
mov
xchg
dec
add
aas
jne
popa
iret
jnp
add
xchg
jg
pop
out
mov
into
mov
jecxz
dec
adc
addr16
negb
test
lock
mov
jp
out
repnz
jno
cmpsl
addr16
mov
sbb
int3
pusha
lods
fs
xchg
cmpsl
add
ds
stc
adc
pop
out
jg
mov
pop
mov
jnp
ficompl
stos
iret
ljmp
lods
or
clc
or
rcrb
mov
pop
movsl
icebp
inc
mov
imul
sbb
iret
jno
jae
pop
test
mov
pop
test
in
addr16
adc
jmp
daa
mov
mov
and
movsb
aas
push
mov
imul
fbstp
adc
ret
jp
ja
jb
cmp
aaa
jge
mov
push
push
xchg
orl
dec
sbb
int
adc
xor
mov
in
cmpsl
nop
lods
jle
js
scas
lea
mov
jl
fidivl
adc
scas
mov
clc
jg
aad
dec
mov
pushf
mov
jle
inc
inc
out
dec
cmc
jecxz
inc
sbb
jno
cwtl
pop
stos
cmp
mov
cmpsb
cmp
and
iret
test
sbb
cmp
mov
jg
test
loopne
pop
cmp
sahf
mov
cld
xlat
push
pop
insb
cmpb
pop
pop
mov
push
mov
lods
mov
aam
xchg
ja
xor
icebp
clc
ljmp
mov
ss
lds
gs
push
test
call
jmp
mov
jecxz
adc
leave
es
iret
pop
jl
rorb
fldcw
adc
jae
addr16
xchg
jl
add
pop
rolb
mov
push
mov
das
pop
push
mov
mov
das
jg
lods
inc
in
pop
push
pop
push
in
dec
inc
or
mov
push
stos
push
cmpsb
lds
test
mov
stos
cmpsl
aaa
enter
fsubrl
push
sbb
adc
lea
mov
ret
cmp
cmp
adc
or
push
add
mov
mov
ja
loop
mov
xchg
xor
cmp
rcrb
or
cs
rorl
outsb
int3
pop
xor
addr16
jl
mov
dec
cmp
dec
dec
inc
pop
lods
jp
cmp
adc
adc
dec
mov
std
dec
pop
fisttpll
cmp
jns
bound
push
sbb
pop
jmp
xor
cwtl
cmp
int
and
mov
dec
add
jnp
cmpsb
test
sbb
pushf
add
mov
sub
mov
cmp
push
sub
test
repnz
push
push
out
mov
outsl
int3
addr16
mov
mov
test
cmp
je
fnstcw
jne
das
repnz
push
lcall
push
mov
lahf
ss
jle
or
leave
arpl
mov
lods
cli
pop
push
inc
fnstsw
sbb
push
nop
mov
out
fs
jbe
enter
dec
fs
mov
ljmp
in
sbb
pop
pop
inc
xchg
xor
fs
rcrb
adc
sarl
jns
mov
cs
or
or
jl
mov
fs
fsts
xchg
aad
and
repz
imul
ret
imul
test
pop
jb
test
popa
enter
aam
mov
pop
fstps
mov
cmp
jne
fildl
cmp
sub
mov
adc
jmp
das
xor
xlat
dec
ss
ljmp
and
js
mov
jbe
test
xchg
add
fstl
fisubl
and
aam
mov
pop
out
jecxz
mov
xchg
cs
cli
inc
into
dec
mov
out
sbb
cli
jl
mov
mov
cmpsl
aas
out
sbb
sbb
adc
sbb
mov
mov
das
mov
subl
fistl
jae
xchg
mov
jae
ficoml
mov
cmp
adc
test
mov
push
cmp
hlt
cmp
fistpl
sub
insl
and
sahf
imul
les
enter
pop
out
fcompl
subb
imul
cmp
ficoms
push
in
pop
arpl
adc
popf
imul
fsubrp
ret
pop
jg
push
out
addr16
push
nop
sbb
mov
jl
daa
cmp
xchg
iret
fcmovb
insl
les
sub
and
push
jo
in
notl
mov
in
andl
push
lock
jmp
fsub
add
jne
mov
data16
and
and
daa
outsl
cmp
icebp
sbbl
mov
clc
test
mov
aas
push
inc
pop
aad
jns
dec
inc
stos
mov
push
inc
or
sub
arpl
ret
mov
repz
stc
insb
std
mov
or
lds
pop
aad
cmc
push
inc
cmp
nop
mov
je
dec
in
xchg
or
enter
sub
sbb
mov
jo
divl
push
jle
pusha
ror
pop
xchg
es
push
fidivrs
pop
mov
in
hlt
ds
and
imul
mov
scas
ficoml
and
pop
jne
mov
loopne
mov
push
inc
cmpsl
or
repz
mov
mov
loope
xchg
or
push
in
xchg
xor
and
fbstp
int
adc
hlt
xchg
or
sahf
subb
or
and
test
sbb
inc
std
das
icebp
gs
in
adc
dec
jmp
shll
rsqrtss
dec
ds
cli
jg
aaa
ljmp
popf
and
inc
sbb
and
dec
push
mov
xchg
inc
divb
or
in
cmc
scas
sahf
mov
ret
repz
sbb
ds
pop
cltd
push
pop
add
jecxz
fiadds
and
add
add
ds
pop
push
pop
aaa
dec
mov
ret
jl
stos
push
out
jne
fwait
das
or
inc
scas
popa
mov
ja
or
dec
dec
bound
scas
cs
mov
or
push
addr16
pop
in
int
adc
ret
rcrl
mov
cmp
mov
pop
test
inc
mov
push
sub
xchg
test
sub
sbb
push
nop
out
cmp
or
mov
dec
jae
call
cmp
dec
adc
cmp
out
pushf
inc
lahf
inc
pop
scas
out
int
inc
pusha
jmp
out
mov
adc
sarl
add
xor
xor
call
popa
add
lds
inc
push
fmull
xor
fmuls
push
jmp
incb
scas
cmc
mov
fs
xchg
sbb
sbbl
xor
subl
mov
xchg
push
jb
stc
mov
cmc
test
les
jg
loopne
lock
jl
dec
bound
push
or
push
stos
push
add
test
add
insl
add
int3
sbb
pop
in
sub
sub
push
vdivpd
int
repnz
push
test
mov
inc
pop
mov
lea
clts
fnstenv
mov
fwait
push
fisttpl
fisubrs
jae
out
test
addr16
orl
push
std
push
adc
rep
int3
fstpl
push
test
shr
leave
mov
fildll
fmull
jns
xlat
test
mov
mov
xchg
push
mov
pop
sub
mov
cmpsb
fldenv
aad
aas
cmp
push
in
jl
or
cld
mov
xchg
jp
pop
jae
call
mov
imul
movsb
imul
rolb
fimuls
and
fcoml
adc
cmp
stos
jp
sbb
cmp
scas
mov
out
xchg
mov
xor
hlt
jg
fildl
or
dec
cmpsb
dec
dec
jle
sbb
pop
pushf
pop
mov
pop
test
mov
icebp
pop
xor
mov
outsl
fildl
jl
cmp
hlt
enter
add
lcall
dec
sbb
mov
lret
maxps
lods
jmp
cs
fldl2t
or
xor
sbb
mov
aaa
or
dec
data16
scas
and
jge
aad
repz
xchg
mov
mov
mov
in
push
lock
sub
mov
dec
loopne
movsb
in
repz
lods
dec
dec
scas
ja
rol
inc
cmp
ljmp
ljmp
enter
jmp
jnp
stc
jne
popa
sti
punpckldq
mov
xchg
mov
ret
inc
sbb
xchg
sbb
mov
push
rcll
imul
dec
fidivs
cmc
dec
mov
push
sbb
xorl
push
out
leave
pusha
and
jl
lret
rorb
imul
fldt
into
enter
in
mov
insb
mov
mov
outsb
dec
in
sbb
xchg
adc
stos
sbb
sbbl
push
out
cmp
jle
xchg
xchg
sub
mov
fdivrp
cli
add
sbb
xorl
aaa
push
cwtl
jo
scas
out
in
mull
pop
add
xchg
lock
add
maskmovq
testl
out
mov
test
mov
movsb
in
mov
lret
push
sub
or
cmpxchg
icebp
push
fiaddl
fwait
mov
jae
fidivl
fsub
push
add
add
hlt
enter
fcompl
cmp
aad
in
fidivs
ja
cli
iret
fadd
in
addr16
push
dec
movsl
je
add
xor
sub
mov
ret
jo
shl
pusha
cmp
popf
scas
cmp
dec
mov
repz
mov
cmpsl
pusha
ret
dec
adc
addb
into
test
adc
jmp
dec
sbb
test
inc
arpl
add
je
xor
adc
les
jle
cmp
pop
dec
in
popa
pushf
and
testb
xchg
sbb
xchg
fldpi
mov
sub
mov
add
adc
rclb
inc
add
mov
inc
outsb
sbb
sub
mov
xchg
addr16
xchg
sbbb
cltd
sbb
mov
mov
sbbl
add
jg
xchg
lret
pop
and
repnz
cmp
call
jnp
outsb
fisubrl
ds
inc
sbb
repnz
data16
xchg
cmp
loopne
inc
inc
xlat
stc
add
jg
sbb
dec
aas
mov
pop
jnp
jbe
scas
movsl
jno
jle
mov
aaa
fincstp
test
andb
mov
sub
cld
add
mov
and
out
add
and
pusha
mov
pop
testb
inc
mov
ss
rcl
ljmp
arpl
pop
hlt
stos
or
stos
jo
push
call
push
aas
push
outsl
dec
mov
mov
pushf
jg
dec
cli
cmp
aam
mov
pushf
or
adc
sqrtps
jbe
fidivl
cs
cmc
inc
dec
lahf
dec
repz
cmp
outsb
pop
lret
sbb
loope
xor
push
call
stos
fs
psrld
imul
cmp
mov
add
inc
sbb
jns
mov
popf
sub
iret
in
cmp
lahf
cmp
adc
jb
pop
pushf
pusha
out
std
insb
stos
mov
mov
pusha
and
push
jecxz
test
add
and
lahf
cmp
xchg
in
xchg
pop
in
mov
sub
sub
mov
pop
cli
lcall
and
adc
insl
stc
and
int3
arpl
fldl
pop
mov
push
xchg
push
mov
jbe
jmp
pushf
dec
outsl
pop
popf
xor
sahf
jb
push
and
jmp
push
push
sbb
and
jp
roll
xchg
adc
imul
pop
lock
cmp
inc
fnstcw
add
inc
cmovae
or
inc
push
sbb
aad
movsl
and
cwtl
cmpl
add
jne
sahf
and
inc
cmpsl
leave
out
xchg
jnp
jmp
adc
mul
stos
aas
xor
jo
in
dec
pop
sub
ss
dec
in
xchg
insl
add
insb
add
add
or
lock
popa
popf
xor
mov
mov
cwtl
xchg
inc
mov
pop
rclb
pop
xor
sub
mov
add
jecxz
cmpb
mov
popf
fwait
sti
dec
pop
xlat
jl
enter
xor
dec
mov
sti
jmp
mov
ret
or
mov
mov
das
sbb
insl
stos
push
les
fsubrl
ret
pop
imulb
or
cmp
fstpl
mov
add
loop
push
and
xchg
add
scas
mov
ja
xchg
adc
mov
lea
test
push
cmpb
fldcw
jbe
mov
jl
inc
fidivrs
push
or
or
cmpsb
inc
subb
mov
mov
repz
leave
jp
add
int
add
stc
nop
jmp
into
mov
push
cmp
xchg
sub
add
out
in
cwtl
out
sub
jae
out
lea
sub
bound
fs
xchg
pop
jae
lahf
stos
lods
inc
xchg
cmp
xchg
dec
jbe
jg
je
shlb
push
addr16
mov
repz
dec
imul
mov
lock
cmp
cld
ficomps
ljmp
sub
xor
nop
lcall
sub
add
movsl
sti
shrl
testl
mov
dec
lcall
test
scas
mov
push
test
fisubl
mov
push
and
imul
jbe
dec
lods
test
cmc
or
cs
add
in
stos
push
out
sbb
and
xchg
sbb
push
popa
call
loopne
icebp
mov
adc
jns
jbe
lcall
lods
dec
ss
push
add
cmp
pop
insl
add
insl
mov
and
adc
xor
divl
dec
dec
call
in
int3
out
xlat
hlt
sbb
mov
ret
insb
pop
mov
sbb
cmp
sub
inc
push
sbb
jl
jecxz
dec
fnstenv
out
cli
xchg
mov
inc
inc
data16
xchg
outsl
dec
daa
sarb
iret
xchg
dec
in
add
insl
loope
cltd
sbbl
mov
fsub
shlb
mov
movsb
mov
mov
cmc
dec
daa
outsl
add
orb
mov
mov
rcr
fnstenv
mov
cmp
xor
jg
mov
inc
jne
pushf
xor
and
and
subb
nop
imul
in
jae
movsl
in
pushf
mov
into
dec
in
scas
mov
push
sbb
hlt
sbb
es
pop
cmpsl
je
mov
dec
sbb
mov
dec
mov
mov
or
scas
xor
mov
aaa
fildl
adc
sub
mov
fwait
mov
in
mov
adc
cmp
insl
mov
and
cmp
test
imul
sub
rcl
jnp
xchg
inc
lret
push
out
out
aam
xchg
or
or
xchg
xor
sub
dec
clc
cmc
push
hlt
jmp
int
into
jne
cmp
xchg
add
jno
insb
dec
loop
lods
je
mov
stos
out
push
loope
adc
mov
pop
xor
int
cmpsb
imul
sti
add
cld
push
push
and
push
je
xchg
xor
jns
and
and
adc
mov
fs
sub
sub
fcompl
mov
pop
out
inc
add
mov
jae
dec
js
inc
lds
lcall
cli
je
imul
mull
es
push
lret
pop
movsl
pop
fs
cmp
sub
inc
mull
sub
sbb
or
divl
mov
fsubs
jl
xor
or
ljmp
je
xor
test
xchg
push
jne
mov
ret
test
sub
imul
jecxz
sub
sbbb
aam
pop
pop
xor
mov
push
test
fidivl
fsubrl
cmp
inc
int3
lret
or
xor
push
je
xchg
inc
daa
outsl
adc
push
inc
lods
mov
mov
jae
push
mov
xchg
xchg
push
cld
sub
dec
jnp
jl
add
loope
xchg
xor
pop
aaa
mov
cmp
jp
pop
jb
imul
lahf
clc
loope
lcall
and
mov
jne
mov
adc
cmp
jne
mov
mov
jne
xchg
sar
rolb
es
inc
leave
shll
jno
mov
pop
push
mov
mov
sarl
fucom
aas
jle
jne
fs
filds
movsb
dec
sbb
lds
pop
and
push
cmpsl
pop
inc
arpl
jb
sub
cmp
and
or
mov
into
stc
mov
and
rcrb
or
insl
cmc
sub
cmp
scas
or
mov
dec
lcall
fnop
jmp
add
and
test
je
adc
inc
xor
pop
jnp
push
into
addl
xchg
lahf
mov
in
ljmp
push
mov
mov
push
mov
mull
lret
stos
xchg
fnstsw
testl
mov
or
pop
inc
stos
xlat
mov
addl
mov
mov
sti
xchg
adc
push
insl
push
xor
xor
push
lods
test
xchg
rorl
sbb
seto
mov
shlb
pop
movsl
in
mov
test
bound
out
fs
loopne
lahf
ret
sub
scas
mov
xor
jmp
fildll
ret
sbb
inc
xchg
std
mov
repnz
repnz
jl
push
push
cmc
int
into
or
fwait
jge
clc
mov
pop
add
add
mov
mov
les
sbb
xor
xor
call
xchg
cltd
imul
push
jo
dec
mov
cmp
sbb
sbbl
xor
pushf
std
mov
jae
in
adc
pop
imul
and
xor
sub
xor
das
push
jecxz
mov
icebp
or
push
cwtl
rcrb
xchg
popa
iret
lds
xor
adc
sub
test
push
mov
movsl
xor
lret
xor
and
push
cld
imul
cld
fistpll
xchg
xor
pop
mov
int
cwtl
xor
popf
sbb
push
test
pop
jo
cmpb
leave
jl
addr16
rcrb
loop
aad
rcr
sbb
fcoms
psubusb
cmpsl
aad
xor
lcall
inc
jbe
fsubs
inc
pop
cmp
stos
es
mov
cmp
test
popf
pop
in
xchg
adc
stos
inc
inc
neg
and
xor
cli
sub
jo
mov
pop
xchg
aas
arpl
subb
inc
cli
mov
repnz
lock
jmp
ficoms
mov
imul
xchg
mov
or
hlt
dec
add
pop
lcall
test
pop
ret
xor
stos
cld
or
mov
adc
stc
into
addb
leave
add
and
pushf
mov
insl
rclb
mov
or
sub
repz
mov
into
rcrl
addr16
std
cltd
or
or
push
dec
pusha
stos
das
aaa
loop
sub
sahf
adc
add
rep
mov
testl
sahf
xchg
jg
enter
aas
mov
ja
outsl
sub
dec
outsl
xchg
xchg
xor
and
sti
jns
xor
imul
lret
xlat
mov
push
cmp
ljmp
lea
jmp
out
mov
or
icebp
sbb
nop
call
cmp
lea
in
push
mov
sub
push
ret
popa
xchg
cs
push
jno
mov
movsl
stos
mov
loope
dec
dec
add
insb
enter
nop
pop
jo
pop
mov
or
mov
pushf
loopne
pop
jle
pop
loop
and
sbbl
cs
stc
test
movb
sub
ljmp
push
in
fbld
mov
imul
add
dec
xchg
xor
fnstcw
mov
jne
add
std
push
cld
xchg
cmpl
les
xchg
jo
pop
ss
dec
dec
out
cmc
test
xchg
dec
imul
inc
pop
cli
push
decl
inc
push
lods
fwait
data16
mov
adc
sub
stc
sub
add
or
mov
imul
cmpsl
test
aam
jnp
jle
push
mov
movsb
and
pushf
lods
and
scas
subb
cmpsl
fcoms
mov
mov
aam
ds
inc
rolb
and
call
pop
jecxz
and
adc
cmc
prefetch
popa
clc
addr16
pop
dec
pop
jg
xchg
xchg
sub
enter
adc
adc
cmp
aas
jmp
or
mov
pop
dec
loopne
lret
bound
movswl
xor
outsb
add
adc
testb
shl
pop
sub
xchg
xlat
jmp
movsb
sub
mov
jp
sub
xchg
mov
dec
pop
dec
pop
sbb
mov
fidivs
outsl
xor
popf
bound
mov
push
jecxz
sahf
hlt
add
mov
pop
ret
in
lock
stos
lods
xchg
dec
pop
inc
popf
xor
jl
lret
inc
in
push
es
lock
jge
scas
aas
addr16
push
jle
popa
jle
or
daa
jmp
mov
test
test
gs
xchg
out
push
xchg
cmp
outsb
mov
jb
add
sbb
stc
adc
jns
icebp
scas
aam
rorb
lods
pop
add
mov
jnp
imul
push
push
jnp
inc
jo
dec
push
stos
sbb
pop
mov
ds
insb
mov
js
push
cli
push
mov
arpl
xor
xchg
jo
lods
ss
mov
xor
push
data16
mov
ret
hlt
cwtl
cs
aad
jo
pop
or
and
call
repz
je
pop
scas
jnp
mov
sub
cmp
dec
push
addb
mov
pop
pop
push
call
or
xor
push
pop
repnz
add
pop
sbb
add
repz
sbb
iret
imul
xchg
mov
hlt
rolb
mov
add
fwait
fwait
inc
or
cmpb
dec
jecxz
pusha
or
ss
leave
addr16
stos
sbb
fs
xchg
mov
jle
and
fs
jl
jle
mov
xor
int3
mov
add
push
mov
mov
repz
sub
xchg
aas
clc
jle
popf
lahf
pusha
iret
test
ret
rorl
dec
fidivl
les
adc
cmc
into
pop
sub
push
ljmp
mov
fwait
popa
mov
jecxz
mov
push
mov
dec
mov
pop
dec
mov
movsb
data16
in
popf
xchg
ret
dec
dec
cltd
pop
aad
mov
shl
mov
daa
lcall
lea
xor
mov
cmc
arpl
es
cmp
add
pop
enter
push
dec
push
std
lods
cmp
fstpl
cmpsl
jle
sahf
mov
inc
mov
inc
pop
dec
xor
loop
call
ljmp
inc
adc
mov
xchg
xor
cmp
cmp
int3
aaa
dec
fistpll
inc
addr16
and
cmp
shlb
push
in
dec
out
jl
enter
call
xlat
or
int
pop
hlt
jecxz
pop
adc
subl
repz
sbb
mov
cmp
mov
imul
pop
loopne
mov
mov
ds
inc
pop
loopne
cmc
movsl
lods
enter
clc
aas
ret
push
sti
sub
rcrb
mov
inc
repz
lock
daa
dec
jb
add
xchg
aad
lds
dec
push
fists
bsf
loopne
pop
jmp
inc
sub
cmp
bound
sahf
scas
mov
ret
dec
xchg
cmp
fs
mov
inc
add
xchg
add
notb
cmp
add
push
les
push
std
mov
leave
hlt
xchg
mov
pop
cmp
dec
pop
and
adc
test
cmp
inc
jle
adc
push
movsb
pop
mov
mov
hlt
or
xchg
lea
test
sub
mov
dec
inc
sbb
bound
and
arpl
pop
fnstsw
mov
cmp
testb
subl
mov
jle
push
mov
adc
enter
sbb
dec
shll
push
xchg
in
data16
jbe
cmp
push
cmc
data16
fistpll
sti
inc
stos
xlat
jno
sub
mov
mov
cs
cli
push
pop
sub
daa
adc
loopne
enter
add
hlt
data16
adc
sub
pop
leave
sub
push
add
roll
adc
inc
inc
inc
sub
mov
cs
test
or
xchg
xor
jne
pop
in
lea
jno
jae
sarl
je
sub
cmpsl
xchg
sub
cmp
sbb
mov
cs
notb
adc
push
leave
jbe
lods
cmp
std
and
mov
adc
dec
push
cmpsb
sbb
and
pop
shrl
or
lock
push
cmp
push
fdivp
aaa
pop
mov
dec
arpl
pop
pop
sarl
dec
pusha
scas
cmp
xor
xchg
repnz
inc
xor
xor
lea
mov
mov
mov
lcall
jae
call
or
adc
mov
xchg
fisubrs
test
jecxz
sbb
sub
push
fcoms
or
jge
daa
cmp
pop
mov
mov
insl
dec
xlat
mov
fnstsw
insl
shll
movsb
cmp
gs
loop
dec
adc
lds
in
insb
add
cltd
xchg
in
out
js
jbe
xor
aad
dec
dec
pop
jne
xchg
ror
lret
imul
lea
test
pop
mov
and
aad
addl
mov
or
push
aad
add
neg
gs
jl
mov
adc
jle
lcall
sbb
sahf
dec
mov
cmp
fstps
pop
divb
sbb
sbb
popa
iret
dec
mov
cmc
lret
jns
and
xor
pop
jl
test
fsub
add
jmp
rcrl
cmp
cwtl
dec
scas
sbbl
adc
scas
mov
jns
fcompl
leave
xor
gs
xor
pushf
scas
push
push
inc
xlat
jno
mov
mov
cmc
in
jbe
pop
push
or
icebp
scas
call
imul
enter
fadds
jle
jno
inc
pop
sbb
cmp
imul
mov
js
rclb
pusha
adc
insb
stos
push
xchg
inc
ljmp
call
lods
daa
fiadds
iret
push
in
mov
pushf
pop
pop
jne
out
stos
xchg
fstpt
sbb
xlat
int3
mov
pop
xor
push
dec
adc
and
add
enter
mov
mov
dec
cmp
mov
xor
adc
testl
inc
aad
adc
and
fcomip
mov
mov
cmp
icebp
push
aaa
into
fldl
push
adc
jp
outsl
movsb
mov
mov
iret
loope
xchg
adc
mov
mov
scas
jmp
adc
sarb
inc
fs
outsl
cli
fidivs
loope
call
das
mov
pop
mov
dec
sub
cmp
jne
mov
js
xlat
outsb
jo
pop
imul
mov
inc
dec
mov
sbb
sbb
imul
mov
repnz
pusha
xor
jb
pop
in
lock
xor
xor
aaa
push
inc
fs
mov
jl
in
sbb
fcompl
lock
add
gs
push
push
dec
out
cmp
mov
inc
cmp
mov
mov
pop
cmp
loope
mov
pop
mov
mov
add
ja
fildll
into
gs
std
xchg
xchg
sbbl
mov
nop
pop
sbb
imul
sub
and
or
test
cld
sahf
xor
and
fwait
movsb
cmp
xlat
lret
in
pusha
push
and
sub
aad
pop
mov
arpl
stos
push
pop
movsl
test
jge
gs
jge
ljmp
repz
inc
je
jnp
jo
pop
nop
std
or
mov
jg
into
xor
xor
fldenv
faddl
pop
jmp
jecxz
cmp
mov
mov
rcrl
addb
stc
or
jbe
jecxz
cwtl
xchg
jge
cs
icebp
fildll
call
fdivrs
push
or
mov
pushf
test
sbb
xor
adc
and
rcll
aam
arpl
loopne
dec
sarl
xchg
pop
imul
pop
repz
add
cmp
jae
xchg
movsl
inc
and
and
dec
sahf
aam
roll
jbe
aam
mov
pop
sahf
add
dec
div
jne
mov
mov
ljmp
mov
sbb
mov
pop
lock
cld
lcall
in
pop
push
sub
into
jge
je
test
dec
repz
jae
out
test
jns
mov
nop
inc
mov
stos
dec
dec
das
jl
lock
and
lea
inc
hlt
jle
mov
adcl
fadds
shl
mov
sub
icebp
hlt
aaa
int
insb
test
sahf
mov
loope
aaa
jb
dec
xor
les
mov
add
aas
into
rorb
mov
mov
push
jo
cld
test
cs
fistl
sbb
adc
cmp
sub
mov
scas
js
and
pusha
daa
clc
or
movsl
sub
sub
xor
or
push
cmp
xor
xchg
push
sbbl
push
push
les
out
inc
out
je
sbb
push
pop
outsb
enter
sub
mov
sbb
mov
sub
cwtl
sbb
leave
call
movsb
cmpsl
cmpsl
cmpsl
add
mov
pop
frstor
mov
addr16
aad
dec
pop
scas
inc
add
push
fcomps
ja
repz
lret
add
subb
or
inc
mov
or
je
fadd
pop
or
cmp
mov
not
mov
xchg
jb
mov
mov
jo
ss
and
cmp
xor
jb
rorl
push
outsb
sarl
fsubrl
push
xchg
cmc
and
shrb
movsl
cmp
sub
ret
pop
mov
pop
loope
lea
pusha
sbb
push
lret
out
imul
filds
inc
xchg
sbb
imul
std
xchg
cli
mov
sbb
cmp
jmp
jl
daa
icebp
adc
enter
xor
loop
cwtl
adc
mov
stos
in
fidivl
data16
pop
jl
inc
cmp
dec
outsl
repz
cli
cmp
or
add
loop
in
out
ret
outsb
cld
pop
xor
cmc
repnz
movsb
ja
push
jl
jg
inc
fidivl
lods
inc
jl
xor
and
fcmovbe
idivl
cmp
test
scas
sub
push
dec
mulb
mov
std
insl
dec
mov
aaa
fsubrs
xchg
mov
pop
xor
sar
outsl
inc
pop
test
pop
loope
inc
stc
jle
inc
adc
jne
mov
xchg
sub
mov
std
andb
xchg
mov
outsb
push
sub
pop
mov
mov
fdivl
sbb
cli
inc
lods
push
pushf
xor
enter
clc
mov
loopne
out
xchg
arpl
imul
cs
mov
in
inc
add
fldl2t
je
insb
ljmp
dec
mov
clc
cltd
xchg
xor
popa
rclb
xchg
mov
add
popa
mov
dec
inc
les
loope
sub
stc
jno
jns
mov
bound
cmpsl
inc
scas
gs
sahf
test
das
sub
sbb
pop
aaa
into
dec
cld
stc
aas
cs
push
xlat
pusha
pop
inc
push
or
in
das
pop
loope
repz
dec
mov
dec
and
pop
sub
sub
or
das
mov
sbb
pop
pop
xchg
insb
xor
pushf
fwait
push
ljmp
std
idivb
imul
and
xor
out
xor
ss
add
popf
jle
add
repz
add
jb
xor
inc
les
mov
addr16
je
lds
pop
fwait
push
sbbl
popa
xchg
pushf
xor
pop
call
cwtl
lret
and
cli
push
mov
add
inc
ds
fwait
repnz
xchg
iret
cs
or
xchg
jp
repz
mov
lahf
pop
cmc
fnstenv
jl
mov
jp
ljmp
xchg
jnp
dec
mov
adcl
js
xchg
cmpsl
adc
push
test
insl
mov
mov
inc
stos
inc
and
inc
stos
cmpsl
ret
fistpl
int3
loopne
push
mov
cmp
add
cmc
movsl
ljmp
lock
cmp
push
imul
jae
lods
popl
test
scas
insb
sbb
or
outsl
cld
fcomi
cwtl
shrl
mov
cltd
and
aaa
or
push
in
push
imul
les
cmp
jecxz
iret
loope
pop
insb
push
out
test
into
mov
pop
adc
mov
jp
mov
sub
mov
mov
pusha
cs
pop
dec
stos
insl
cmp
sub
xor
int3
vpaddusb
push
int
pushf
mov
sub
pop
mov
shlb
add
or
or
mov
icebp
sub
fstps
les
inc
lods
repnz
lock
test
mov
inc
inc
pop
adc
cmp
mov
inc
dec
out
xchg
mov
mov
inc
adc
pop
cmp
mov
inc
rorl
jnp
push
cmp
lcall
adc
clc
sbb
xchg
xchg
sub
adc
sub
pop
ljmp
mov
sti
push
pop
lock
or
push
sub
icebp
mov
xchg
mov
add
pop
ljmp
add
inc
push
cltd
arpl
imul
ret
aaa
dec
imulb
mov
into
pop
data16
sti
xchg
lock
mov
div
test
jle
iret
jl
pop
ret
iret
lret
cltd
xchg
mov
aad
push
lret
xchg
daa
mov
xchg
push
fs
adc
mov
mov
jbe
mulb
cmc
cmc
stos
mov
cld
cwtl
or
enter
or
ja
push
sbb
push
push
inc
out
jbe
mov
jge
pushf
xor
xchg
fidivl
sub
jnp
stos
mov
stos
adc
pushf
and
xor
jmp
das
fdiv
xchg
jnp
ss
pop
gs
pop
dec
xor
test
pop
fmull
in
mov
jbe
roll
test
inc
jg
stos
sub
fidivs
inc
gs
xor
xchg
daa
cmp
cltd
cmc
push
rol
or
orl
lds
repz
call
cld
in
mov
nop
ss
stc
movsb
mov
jb
mov
insl
jns
xchg
sub
inc
push
mov
cmp
fwait
adc
and
xor
jae
jecxz
dec
sarb
loop
pop
outsl
xlat
xor
outsb
sbb
inc
popf
inc
sti
inc
lcall
push
in
jg
inc
nop
ljmp
out
cmpsl
adc
mov
mov
loopne
inc
pop
repz
lea
inc
xchg
jecxz
repz
jno
add
mov
xchg
push
xchg
xor
mov
add
stos
addr16
dec
mov
mov
or
into
in
jo
insb
test
or
lret
inc
xchg
inc
mov
lret
ret
cld
xor
je
les
mov
mov
push
imul
mov
imulb
outsb
rcrb
rcll
sbb
mov
jecxz
stc
lods
mov
ja
ret
xchg
cmpsb
inc
stc
inc
jne
push
sub
mov
xor
lea
inc
jl
pop
je
cmp
add
gs
xor
ljmp
ljmp
xor
nop
movsl
dec
mov
mul
dec
adc
aad
cli
or
loop
fcomps
pop
ljmp
and
andl
pop
mov
call
dec
addr16
bound
out
testl
add
pop
xor
push
mov
test
lods
pushf
repnz
inc
adc
jmp
mov
aad
jb
sarb
jnp
enter
mov
and
add
xor
lods
hlt
inc
popf
mov
shrl
add
imul
xchg
and
mov
mov
test
mov
push
rorb
or
fidivrl
popl
sbb
lahf
dec
fstpl
repz
adc
pop
dec
push
inc
sbbl
mov
cmpsl
cmp
sbb
cmp
rcl
push
mov
push
fcompl
pop
mov
leave
icebp
scas
jp
iret
data16
je
sub
out
mov
mulb
sarb
push
push
enter
pop
push
sbb
loop
jl
mov
subl
jge
fdivl
in
stos
in
inc
bound
arpl
xchg
sbb
pop
jp
xor
jge
insb
xor
subb
aaa
xchg
or
ret
add
sbb
icebp
mov
and
test
mov
lcall
inc
loopne
cmpsl
sbb
fsubs
fwait
push
mov
test
cmpsl
mov
sbb
jnp
shlb
and
bound
pop
imul
jl
jb
cmp
inc
adc
lret
dec
pop
jecxz
out
jl
cmpsb
pop
mov
cmp
lcall
mul
test
sub
pop
aas
inc
dec
ja
jne
add
xchg
add
scas
fstpl
loope
int
jecxz
add
dec
and
mov
adc
jg
lock
fstps
pop
sub
xchg
imul
add
sahf
mov
jle
fstps
sub
mov
repz
cmc
adc
jle
insb
mov
sbbb
mov
adc
test
pop
xor
adcl
cs
in
xor
imul
mov
fisubrs
sub
push
adc
insb
scas
imull
stos
fldcw
sahf
or
push
mov
fsubrs
push
sbb
mov
sbb
cld
xchg
cmp
sarl
xor
xor
and
jge
xchg
mov
or
add
shrl
subl
outsl
inc
pop
loope
xchg
push
pushf
mov
jno
cs
aam
mov
mov
pop
hlt
add
jne
out
divl
mov
mov
pop
orb
xchg
push
out
pop
aaa
jbe
jmp
jl
cmp
mov
jno
out
xchg
cmc
push
add
scas
mov
movsb
incl
sbb
inc
bound
out
mov
push
ljmp
ret
xchg
dec
imull
jl
push
int
fucomi
xchg
mov
out
divl
push
cmc
lret
cld
push
pushf
xor
jp
cmp
mov
mov
into
fidivs
cmpsb
ljmp
add
xchg
adc
mov
scas
or
cmp
add
mov
scas
xchg
jae
mov
ja
push
add
mov
mov
mov
adcl
dec
mov
jne
daa
jmp
inc
sbb
lret
lahf
fstp
in
dec
xor
das
or
movsl
xchg
xchg
cmpsl
fisttps
fsubl
int3
and
ret
int
inc
pop
mov
dec
lock
xchg
mov
shrl
mov
test
add
cmp
pop
inc
mov
pop
out
sbb
out
sbb
fnstenv
mov
cmp
mov
dec
out
lock
push
pop
bound
mov
jb
fsubrl
or
lcall
mov
int
mov
repz
and
into
enter
mov
and
jo
inc
test
js
cmpsb
xlat
lock
jne
and
lds
call
sub
sub
inc
rorb
arpl
mov
mov
push
xchg
sub
out
adc
mov
jge
popf
sbb
sbb
add
sbb
xlat
push
jp
stos
xor
mov
xor
xchg
aam
out
or
jnp
test
pushf
inc
pop
in
jecxz
adc
pop
cltd
cmp
pop
jae
movsb
out
fsubl
aas
jmp
or
xor
pop
cmp
mov
sbb
insl
js
fists
nop
mov
push
fcoml
cltd
inc
pop
lret
jae
test
in
sub
sbb
sti
fwait
mov
outsl
sarb
negl
sub
aad
inc
pop
shlb
push
cmp
repz
xor
es
or
popa
bound
test
rcll
add
in
ret
and
dec
loope
popa
stos
and
daa
cmp
sbb
pop
xor
jne
push
in
push
pop
push
jle
push
cmc
mov
fs
lret
sub
adc
or
pop
adc
rol
push
mov
pop
mov
push
loope
adc
push
sbb
aas
jno
data16
jnp
mov
outsl
pop
push
cld
loope
jg
cmp
push
cmp
adc
movsb
les
xor
pop
mov
jg
xor
and
mov
fmull
testl
jmp
sub
aam
mov
mov
xor
add
pop
loopne
insl
jb
repz
lods
test
js
out
cmp
xor
mov
cmp
iret
mov
and
popa
add
popf
js
push
int3
dec
pusha
and
or
xor
lret
adc
fucomip
loop
imul
or
stos
cli
jne
fisubrs
loop
das
rcr
sbb
adc
lahf
les
inc
pushf
add
jne
or
mov
fsubrl
mov
fsubr
and
fisttpl
mov
dec
xchg
in
and
out
jmp
loope
add
cltd
jl
mov
pop
popf
mov
ret
out
ret
fiadds
es
test
and
aas
mov
std
push
call
push
push
mov
fnstenv
pop
ss
movsb
adcb
sub
jne
lret
mov
sti
jnp
mov
out
divl
mov
mov
cltd
mov
stc
ljmp
adc
in
adc
pop
cmpsb
push
jp
mov
imulb
jle
es
movd
addb
cmpsl
cld
sbb
fidivs
cmp
jmp
and
mov
cwtl
inc
sbb
push
dec
loope
xchg
jp
add
push
nop
lcall
sbb
loop
insl
test
shr
movl
sahf
xor
xlat
jecxz
xchg
jl
mov
sub
add
dec
fnstenv
push
scas
jne
sub
rcr
in
iret
push
dec
push
pop
les
push
jb
mov
mov
iret
scas
std
jne
sbb
iret
mov
mov
std
dec
daa
shlb
mov
popa
out
out
add
ljmp
lea
dec
add
ret
lea
pop
int3
jg
mov
jecxz
ds
push
lods
and
ds
pushf
mov
adc
xchg
xor
subl
xchg
iret
dec
push
lea
and
sub
mov
pop
imul
jns
xor
dec
xchg
rorb
loop
jo
jge
shlb
inc
inc
nop
loop
xchg
adc
lret
aaa
add
imul
shr
test
adc
sbb
mov
stc
sbb
insl
add
in
xchg
icebp
and
jns
inc
aam
ja
mov
divl
fsubs
sub
inc
cmp
jg
int
pop
lahf
insb
sub
in
cwtl
sahf
add
inc
js
movsl
test
ret
pop
jl
dec
scas
jge
dec
xchg
cld
adc
sub
aas
les
fnstenv
jbe
mov
stos
shll
jbe
xchg
pop
sub
rcrl
ja
jl
test
lcall
xor
push
and
aaa
fisttpll
rclb
xor
addr16
mov
cwtl
jno
lods
lret
lahf
mov
mov
mov
sbb
pop
mov
mov
ret
sbb
clc
or
cmc
outsb
dec
adc
jns
jnp
ss
mov
inc
int3
jp
fsubrl
roll
sbb
xchg
sbb
aam
aam
cmc
push
hlt
fnstcw
adc
decb
aas
jmp
push
add
outsb
stos
inc
cltd
popl
repz
mov
xchg
les
iret
pusha
mov
movsl
imul
or
sub
and
inc
in
repz
add
jae
xchg
lods
sub
ds
lds
add
lahf
sahf
jle
sbb
sbb
test
xchg
movsb
dec
push
shrl
add
clc
out
xchg
add
xchg
dec
fwait
lods
test
lods
les
fisubrl
or
mov
add
shll
cmp
jno
pop
add
test
ja
jae
daa
out
and
nop
cmpsl
out
lock
cmp
sub
js
data16
in
jne
rcll
es
push
mov
lcall
subl
addr16
data16
lea
cs
gs
dec
or
pop
adc
shr
inc
out
add
bndstx
sub
cs
rcll
int
mov
mov
outsb
les
cs
ret
push
add
xchg
fs
xchg
or
xchg
mov
nop
pushf
xchg
mov
in
sbb
lahf
cwtl
mov
jno
std
and
mov
inc
jbe
call
mov
data16
hlt
pushf
ss
fbld
mov
sbb
jb
xchg
pop
lods
ja
fstpt
jmp
sbb
pop
xchg
gs
sbb
shrb
mov
cs
push
in
mov
rcrb
cltd
mov
cmp
shr
mov
pop
inc
xor
or
jno
mov
xor
test
lds
divb
push
inc
dec
sbb
test
push
test
jp
in
xor
ljmp
cmp
mov
xchg
enter
mov
pop
dec
pop
iret
push
test
mov
into
pop
add
in
orb
fcmovnu
test
movsl
cli
pushf
mov
dec
xlat
cld
insl
sahf
hlt
pop
pop
imul
push
int3
aam
mov
pop
iret
dec
add
jne
dec
mov
jne
jmp
stc
iret
jge
mov
fs
jns
cmp
stos
xchg
hlt
xlat
xchg
repz
or
mov
rorb
jo
mov
sbb
jns
test
mov
sub
or
push
and
out
mov
adc
xor
push
fstps
in
and
sub
arpl
sti
push
cltd
cmpsl
xlat
mov
rcll
xchg
push
arpl
and
or
ja
xchg
jmp
mov
push
psrlq
cmp
cwtl
add
jp
inc
ss
inc
jbe
push
stos
lock
sub
daa
mov
inc
cmp
leave
cmp
mov
xchg
sub
xchg
sub
mov
arpl
xlat
imul
xchg
push
dec
cltd
push
or
pop
sbb
nop
lds
std
jo
jl
push
mov
add
dec
xchg
hlt
pop
das
aas
add
es
cli
or
insb
imul
cmp
xchg
clc
fsubr
cmp
xchg
sti
adc
push
mov
and
mov
in
cmp
dec
dec
pop
call
mov
push
push
loop
into
jmp
js
pop
push
inc
adc
pop
cli
pop
mov
jnp
xor
in
push
or
add
imul
mov
fbstp
adc
outsb
test
fidivs
mov
jg
or
imulb
add
xchg
or
dec
adc
ss
dec
or
mov
push
or
nop
sbb
push
sub
cs
fcomip
into
push
pop
out
fisttpll
fwait
test
and
lock
cs
data16
addr16
mov
int3
ds
pop
test
sub
addb
repz
or
sub
pop
sub
sahf
daa
out
adc
rolb
outsb
or
xor
in
and
mov
daa
rolb
sbb
inc
into
gs
push
popf
or
movsl
sbb
pop
ja
inc
pop
sbb
ror
inc
mov
dec
dec
or
repnz
cld
and
adc
cmp
out
dec
push
fidivrl
adc
and
mov
mov
loop
lods
inc
mov
fucomp
lret
and
fsubr
je
pop
insl
scas
inc
lahf
adcb
aad
dec
and
addr16
call
xor
cld
pop
mov
lds
js
mov
xlat
inc
sub
mov
dec
arpl
decl
jno
push
and
dec
hlt
adc
add
fucomip
push
and
test
fdiv
in
leave
jbe
push
push
hlt
lods
cwtl
jno
cwtl
push
push
or
and
push
setne
push
or
dec
and
fsubr
mov
push
inc
sbb
and
sbb
jl
cmpsl
shll
pop
clc
xor
movsl
jmp
out
nop
add
mov
add
negb
mov
jnp
jb
and
jp
or
dec
fwait
stos
sbb
inc
adcl
mov
lock
cmp
jecxz
push
inc
mov
jle
into
cltd
pusha
or
shrl
je
pop
mov
xchg
insb
xor
xchg
jge
dec
xlat
popf
or
int
shlb
cmpsl
call
sbb
cli
jns
sub
pushf
sbb
adc
sub
adc
sbb
cmp
enter
or
fidivrl
fildl
or
loop
push
cld
mov
roll
and
lahf
ss
subl
mov
push
jo
loope
mov
setns
or
jno
sbb
sub
shr
insl
div
adc
cmp
cmp
pusha
jnp
pop
pop
stc
out
sub
mov
add
push
mov
jns
cmpsb
icebp
mov
repz
scas
imul
in
rolb
lcall
fs
in
dec
jecxz
jge
ss
inc
and
gs
add
cs
fwait
repz
jno
lds
fadds
imul
mov
mov
adc
xchg
jnp
xrelease
push
out
dec
out
ja
mov
jb
les
ljmp
out
loopne
mov
mov
lahf
mov
imul
sbb
call
sar
sahf
stos
stc
enter
or
lcall
push
or
or
mov
jle
loop
fwait
xor
gs
or
push
popf
and
lds
xchg
push
and
jmp
xor
lret
mov
cmp
push
scas
out
sti
pusha
jl
aas
lahf
stos
push
push
shrl
mov
ret
jne
js
cld
movsl
inc
push
call
clc
cs
sbbb
mov
cmpb
mov
jp
into
ret
fwait
cmp
ret
fs
cmp
fisubrl
hlt
push
lret
and
pop
add
inc
xchg
sub
jp
dec
xchg
mov
cmc
inc
test
frstor
or
xor
mov
test
inc
mov
dec
lret
je
int3
push
inc
inc
mov
cmp
clc
jl
xchg
cmp
pop
in
sub
adc
pop
repz
xor
or
and
fs
mov
jmp
sub
mov
mov
popf
xor
sub
outsl
dec
ljmp
xchg
dec
test
lods
dec
enter
xlat
jl
mov
inc
pop
mov
sbb
or
push
fisttpl
and
fnsave
add
fwait
cmp
adc
shll
push
mov
aas
jg
mov
mov
fiadds
xchg
adc
aam
inc
mov
mov
je
lods
xor
fisttps
es
into
push
sbb
jnp
movsb
pop
cmp
and
das
jns
push
sahf
and
xlat
mov
mov
addr16
push
iret
dec
in
mov
aas
cld
and
dec
inc
stc
inc
jbe
iret
push
lods
ja
test
mov
sbb
mov
dec
in
popa
dec
and
add
mov
in
imul
or
shlb
fisubrl
aas
loop
push
jle
sub
pop
lods
dec
aad
and
cmp
pop
mov
adc
adc
decb
cmpsb
xchg
cmp
add
lock
fs
push
mull
cmp
cwtl
jle
cmpsb
mov
aas
dec
and
jns
and
mov
or
inc
mov
dec
test
sbb
repnz
fdivrs
movsl
ret
jae
aad
int
mov
mov
js
pop
cmp
cmpsl
jbe
pop
pop
cmp
popf
sbb
add
xchg
add
or
adc
rorb
inc
inc
sbb
iret
push
sub
or
arpl
lods
jle
divb
fs
push
sbb
inc
dec
ficoms
sub
lods
mov
push
mov
mov
popf
add
mov
shl
add
das
cmpsb
sub
add
mov
in
mov
mov
cmp
pop
push
iret
fdivrs
rol
dec
mov
enter
shl
mov
mov
and
adc
or
out
fcomi
inc
mov
adc
mov
xor
ror
fstl
clc
and
and
aad
mov
les
push
rol
jnp
test
movsl
lds
cmp
ds
idivl
sarb
ljmp
xchg
xor
xchg
pop
sbb
pop
sbb
subl
test
or
loopne
sub
scas
xchg
arpl
cmp
std
hlt
arpl
mov
ja
stc
inc
mov
mov
daa
fs
pop
pop
jo
and
loopne
outsl
adc
adc
lret
ja
out
das
jo
xchg
push
adc
xor
or
jae
imul
imul
test
push
mov
out
pop
out
sbb
adc
dec
stc
shl
sbbb
push
in
test
pop
mov
mov
dec
inc
rcll
dec
in
ret
int3
xchg
movsb
pop
stc
pop
daa
bound
rcl
aam
fimull
int
rorl
mov
xor
jno
mov
sub
bound
adc
icebp
scas
cli
xchg
push
adc
or
sub
inc
push
fs
rcrl
outsl
cmp
shrb
cmpb
sbb
pop
xchg
sbb
inc
mov
loope
xchg
inc
sub
sub
mov
test
and
or
lcall
jbe
mov
jae
aas
or
sub
repz
lcall
lret
jne
data16
inc
push
jne
leave
fnstenv
and
je
xor
mov
mov
jecxz
insb
mov
or
mov
add
sbb
cwtl
pop
fs
jp
jb
add
mov
mov
or
add
pop
xor
out
loope
push
cmp
in
aas
fildll
lods
cmc
adc
xchg
jae
inc
sarb
in
ffree
sbb
cmp
lds
cwtl
mov
movl
jo
lds
pop
rcr
xlat
andl
ss
inc
sub
xor
sarb
pop
adc
jns
xor
enter
ficomps
and
icebp
sub
repnz
enter
push
inc
xor
mov
xor
mov
and
push
add
adc
or
out
add
jge
jle
or
lods
dec
imul
sbb
mov
ja
cmp
pop
lret
in
ret
ret
mov
ret
sbb
iret
out
mov
loopne
and
aad
mov
xor
jo
ror
stos
sbb
dec
loop
fildll
int
shlb
or
fstpt
test
adc
movsl
and
arpl
push
jne
and
lahf
jl
mov
fisttpll
lods
call
inc
jp
xchg
insl
lahf
xor
sbb
cld
push
pushf
fcmovne
push
orb
add
leave
ljmp
fbstp
fistl
and
add
xchg
leave
mov
addr16
ss
into
out
push
lds
mov
xchg
mov
mov
xchg
in
cmp
add
and
cmpl
xchg
daa
mov
adc
rcrb
mov
clc
cmp
daa
xchg
jl
jns
stc
push
push
cmpsl
sti
leave
sub
in
shrb
cmp
in
loopne
sub
ss
fsubrs
mov
mov
in
jg
adc
aam
insb
fmull
jno
rorb
inc
adc
mov
mov
pop
mulb
jge
sbb
pushf
xchg
push
dec
scas
pop
pusha
fwait
lods
lret
cmpb
mov
aaa
pop
push
test
pop
mov
in
repz
fdivl
sbb
dec
and
out
xor
lds
int3
adc
cmpsl
mov
jle
sub
adc
cmp
cmp
in
inc
sahf
cwtl
cmp
xchg
cmp
ljmp
jmp
call
popf
push
pop
sbb
inc
fwait
or
cmp
push
or
mov
fs
out
xor
mov
push
fwait
lahf
cmp
sub
data16
outsl
rclb
jo
sub
cmp
das
enter
jp
xor
mov
test
cmp
add
mov
push
add
nop
adc
lock
fcoml
std
inc
popf
adc
pop
iret
pop
outsb
arpl
mov
sarb
jne
dec
scas
int3
pop
sbb
sti
shrl
or
ret
or
scas
jge
or
sbb
lods
xor
popa
inc
jl
mov
stos
inc
mov
mov
push
outsb
or
fnsave
arpl
or
mov
add
mov
push
add
pushf
repz
adc
cltd
and
sbb
jle
xchg
and
sbb
xor
daa
idivl
jae
arpl
sbb
sbb
out
mov
jns
les
out
es
adc
mov
loop
adc
call
mov
lods
xchg
sub
jb
inc
cmp
jb
xor
cwtl
mov
add
xchg
into
pop
popf
sbb
ss
adc
mov
xchg
pusha
sub
loopnew
dec
add
dec
cmp
sub
mov
mov
bound
dec
sbbb
push
xchg
jmp
mov
popa
inc
pop
xchg
clc
dec
lret
and
sbb
push
xor
insl
arpl
ficoml
cmpsl
push
sub
clc
in
xchg
jge
les
jno
pop
test
sub
mov
scas
inc
mov
ror
rcrl
lret
xchg
adc
push
push
mov
loopne
test
jo
out
notb
div
pop
cmp
sub
xchg
hlt
cmp
xchg
add
les
loope
pop
xchg
push
pop
sbb
cmp
jns
lret
mov
cmc
mov
stc
sub
lods
push
pop
push
push
cli
mov
scas
inc
jns
out
test
pop
or
cld
inc
fsubrs
cmpsl
pop
fcmovnbe
mov
or
or
cmc
in
jnp
pop
icebp
push
pushf
sti
pop
test
in
pop
mov
mov
es
movsb
repnz
arpl
test
outsb
std
push
dec
jecxz,pt
into
add
and
jb
scas
test
cld
adc
inc
idivb
leave
test
push
jae
xchg
and
mov
sbb
add
shr
lods
and
icebp
int3
test
adc
cmpsl
fldt
dec
mov
cmp
subl
repnz
dec
fisttpll
mov
jnp
loopne
xor
fdivr
push
sti
das
inc
sti
pushf
xchg
fsubrs
inc
outsb
loop
in
cmpsl
rcrl
ja
mov
adc
movsl
pushf
jae
and
les
enter
add
ror
xor
xor
cmpb
mov
loop
shr
xchg
xlat
sbb
xlat
push
dec
movsl
pop
fdivrl
imul
in
sub
cmp
cltd
fstl
fwait
xor
fs
in
clc
xchg
outsb
loope
lahf
mov
mov
faddl
into
rclb
das
cs
inc
cwtl
inc
out
bound
sub
mov
cmpb
mov
roll
adc
je
aad
pop
adcl
dec
arpl
adc
xlat
cmp
xor
in
pop
jecxz
mov
int3
fs
scas
into
and
mov
mov
mov
mov
sbb
sbbb
mov
enter
lcall
adc
mov
mov
js
add
stos
out
imul
sbb
arpl
cmp
mov
hlt
ja
cmp
push
sub
imul
sbb
push
pop
sahf
xchg
jl
arpl
aad
push
call
out
adc
daa
shll
andb
aad
sub
fcomip
sahf
repnz
cmpsl
mov
popf
jg
iret
push
loop
mov
rol
dec
jle
fistpll
adc
xchg
dec
jo
imul
xchg
ja
call
jmp
stos
push
jo
outsl
sbb
or
loope
inc
inc
mov
rol
dec
pop
mov
mov
filds
ja
lret
je
mov
push
shrb
insb
mov
ss
sub
pop
imulb
scas
inc
mov
jo
push
push
fwait
lret
scas
cli
rcll
add
sbb
or
gs
icebp
mov
sbb
leave
cmpl
gs
sbb
bound
and
shl
or
jo
dec
aas
xchg
clc
jp
fstps
push
mov
push
les
xor
popf
rorb
mov
sarb
fwait
sti
cmp
cli
dec
xor
lock
xorb
jg
xor
scas
inc
loop
push
jmp
mov
outsb
jecxz
jb
cmp
call
pop
xchg
aas
mov
fcmovbe
inc
push
mov
push
mov
xchg
jmp
sbb
push
out
cmpsl
mov
fsubrl
xchg
jne
cmp
iret
fisttpl
int
mov
xchg
les
mov
inc
cmpsb
mov
clc
push
in
pop
les
mov
mov
pop
adc
jo
add
add
mov
mov
dec
in
std
push
cmp
pop
inc
xchg
inc
xlat
ret
push
sub
dec
mov
sti
xchg
mov
lahf
popf
orb
test
sub
sbb
stos
or
cmp
adc
adc
jns
aad
inc
or
xlat
rorb
pop
shrl
div
jp
or
jp
jmp
jne
xchg
dec
pop
mov
mov
jb
in
mov
xor
mov
push
aaa
jbe
int3
cs
or
hlt
inc
test
and
in
mov
push
xor
out
jne
sub
xor
in
xor
mov
leave
adc
push
inc
ljmp
cld
fidivrs
cmp
fucomi
mov
mov
negb
lcall
movsb
jge
enter
mov
jae
out
jecxz
call
lea
movsl
push
mov
xchg
cs
inc
fcmovnbe
lahf
movsl
repz
xlat
rep
leave
mov
push
or
mov
test
jle
lock
and
add
inc
jno
xchg
xchg
sub
out
lock
pop
nopl
int3
in
ljmp
jno
cmp
out
aaa
insb
dec
loopne
popa
cmp
mov
pop
adc
nop
pop
negb
mov
jae
mov
add
jg
fisubs
aas
rolb
fbld
add
mov
jmp
push
cltd
add
sbb
jb
iret
repnz
mov
cmp
aas
repnz
cltd
mov
mov
hlt
and
pop
fildll
dec
adc
pop
dec
enter
jae
inc
in
movsb
push
test
cmpsb
or
test
sub
or
fiadds
sbb
dec
in
stos
cli
lcall
xchg
ljmp
sub
clc
xor
in
sub
sbb
imul
add
mov
dec
and
add
mov
push
xor
daa
and
enter
pop
sub
and
jl
dec
push
lock
mov
stos
cmpsb
pusha
mov
sti
fildl
and
test
or
scas
sbb
xor
in
stos
mov
loop
fidivs
cmp
cmp
test
add
sbbb
ja
pop
je
pop
shl
mov
cwtl
pop
lods
outsb
cmp
mov
push
in
aas
sbb
rorl
rcrl
push
mov
inc
pop
scas
and
leave
xchg
push
mov
cmpsl
xor
sarb
pop
shrl
movsl
jb
mov
popa
cmpl
into
out
outsl
daa
and
lods
ljmp
mov
std
fucomip
xor
je
mov
imul
je
or
shrb
push
insb
ljmp
push
jne
dec
push
out
shll
arpl
pop
js
fisubl
dec
cmpsb
inc
scas
lods
pop
sahf
sub
xor
pop
jae
sub
mov
std
aad
imul
push
and
mov
mov
cmp
into
xor
adc
pop
es
mov
sub
mov
cmc
xor
cltd
std
aam
or
sbb
shl
cs
inc
mov
nop
ss
sbb
cmp
mov
sbb
sbb
shrl
cmp
xchg
sbb
lock
in
into
pusha
or
es
rol
mov
push
ret
pop
inc
pop
jecxz
cmc
and
mov
push
into
jne
mov
push
xchg
jo
lcall
cwtl
stos
pop
daa
push
je
pop
ja
mov
xor
insl
test
scas
mov
incb
aam
xor
cmp
scas
or
movsb
fsubrl
test
in
xchg
dec
lahf
sbb
insl
pop
lock
insl
and
or
and
insb
out
mov
out
dec
dec
in
push
imul
scas
mov
testb
or
mov
imul
movsb
jecxz
shrb
mov
cmpsl
mov
lea
mov
push
mov
dec
test
xor
sub
repz
and
dec
stos
fnstcw
mov
dec
or
out
ljmp
gs
repnz
jg
jmp
test
cmp
inc
mov
jecxz
jmp
aam
addl
orb
adc
cmc
lret
dec
in
dec
test
xchg
ljmp
adc
shl
push
mov
jb
push
jmp
dec
mov
jns
jns
push
stos
test
mov
int3
and
ret
gs
iret
pop
pop
scas
iret
mov
mov
dec
xchg
fistl
addb
imul
push
push
cmp
mov
pop
sub
mov
sbb
lea
cld
fwait
outsb
mov
rcl
repnz
lods
ret
mov
push
and
aaa
xchg
and
cmp
sub
sub
xchg
ja
jecxz
lds
mov
jmp
mov
xorl
popa
mov
nop
sbb
sbb
pop
cwtl
inc
and
inc
push
shll
dec
insl
cmp
cmp
inc
push
cwtl
inc
gs
fbstp
das
sbb
lock
into
in
add
aam
testb
jmp
gs
lcall
pusha
test
adc
push
cmpsb
les
sub
jl
push
ret
repnz
flds
bound
adc
fisttpll
or
push
xorb
push
gs
ficomps
repz
scas
and
xchg
cld
mov
std
cs
xchg
jg
icebp
lods
inc
inc
xor
sub
shr
lahf
invd
lahf
cmp
jb
mov
gs
vandnpd
cmp
rol
lock
lahf
test
rcll
push
push
push
cmp
push
sub
repnz
sub
pop
aaa
imulb
adc
clc
mov
or
popf
jg
divb
xchg
dec
cld
xlat
repz
lahf
ss
sarl
lods
mov
dec
and
dec
popf
test
jp
jns
mov
test
xchg
sbb
sbb
add
inc
sbb
inc
popf
jo
outsb
sbb
mov
jecxz
or
mov
out
adc
dec
pop
out
xor
aaa
stos
adc
pop
cmp
enter
out
xchg
arpl
scas
pop
mov
fldl
fisttpll
push
gs
pushf
cwtl
and
mov
pop
addl
mov
clc
or
arpl
push
popf
cmpsb
inc
jmp
stc
fs
push
pushf
sbb
mov
jbe
notb
mov
push
mov
faddl
dec
fbstp
arpl
out
mov
ljmp
jno
fcompl
cmpsb
and
iret
sbb
cld
repz
in
push
stos
jg
mov
push
mov
iret
loope
std
cmp
daa
mov
sbb
push
iret
pusha
subb
fstpt
jne,pn
or
loopne
and
aaa
dec
stos
inc
mov
dec
leave
test
mov
rcr
xor
and
insb
mov
lret
and
push
fadd
xchg
adc
movsl
sub
mov
and
scas
mov
mov
push
jae
ficompl
lds
xor
out
ds
push
sahf
sub
repnz
xor
call
or
fwait
pop
jmp
cli
mov
mov
push
lods
pop
mov
push
repnz
sbb
nop
mov
pop
test
cmp
or
inc
outsl
push
cmp
jne
pop
sahf
lods
scas
loopne
lahf
pushf
int3
jae
mov
imul
add
mov
mov
int3
inc
test
and
sti
and
mov
mov
mov
movl
xchg
jno
xor
lods
mov
movsl
lds
jno
lock
sub
in
fistpl
adc
sub
dec
ljmp
dec
or
nop
jnp
in
mov
pop
sti
cmp
loop
aam
inc
ret
and
pop
jae
iret
repz
mov
mov
aaa
push
push
out
cmpsl
mov
aas
adc
les
adc
lods
das
inc
notl
dec
fldenv
adc
push
mov
push
cld
mov
das
dec
pusha
dec
mov
mov
mov
cltd
push
shr
push
rcrb
inc
fcomip
out
das
pop
insb
insl
mov
out
push
out
jns
je
mov
test
repz
fs
mov
gs
inc
fs
shrb
mov
mov
divl
jno
imul
inc
loope
add
add
ljmp
mov
push
jno
adc
sbb
loop
fdivrl
xchg
stos
jbe
scas
sub
dec
xor
mov
mov
cmc
and
sub
push
pop
mov
rorb
sarl
insb
add
or
call
inc
xchg
sbb
in
adc
mov
into
in
adc
inc
loope
sub
xor
push
pop
addr16
test
cwtl
inc
sti
add
movq
mov
jg
pop
lret
shl
pop
loope
mov
orl
cmp
icebp
cmpsb
inc
gs
dec
insb
push
incb
xor
dec
lcall
or
inc
dec
icebp
jmp
push
out
sbb
ret
mov
icebp
ja
inc
sub
das
sbb
mov
jge
push
aam
fucomip
and
outsb
cmp
fmuls
push
sbb
repz
loope
popa
pushl
push
adc
mov
pop
mov
repz
int
hlt
cltd
pop
cmc
or
jnp
pop
outsl
add
pop
mov
or
add
xchg
and
lock
mov
lock
fcmovnb
aam
pop
sarl
or
mov
enter
inc
inc
cli
xchg
and
jge
cltd
test
mov
call
sub
lret
push
test
adc
stos
mov
pop
fldl2t
inc
add
dec
shrb
test
ljmp
jno
pop
sarb
jbe
push
test
jmp
cmp
movsb
repnz
sub
sub
negl
xchg
scas
dec
sbb
mov
nop
jb
mov
sbbb
imul
and
mov
lock
cwtl
jle
inc
add
jae
in
sbb
dec
sbb
jmp
push
push
ljmp
pusha
ret
ss
test
ja
dec
out
cmc
mov
mov
xlat
sub
lds
fwait
jb
xlat
repz
mov
push
mov
sarb
adc
adc
das
cmp
out
neg
jp
xchg
lods
stc
std
cltd
mov
scas
in
test
int
push
xor
cli
adc
fstpl
mov
insl
xchg
and
jnp
jae
in
sub
dec
inc
pop
pop
icebp
push
js
mov
cmp
push
jno
push
sub
shl
hlt
in
sub
ret
jns
sbb
movsl
adc
lods
push
jb
cmp
aas
or
in
sub
iret
mov
sub
pop
dec
out
fcompl
clc
or
clc
mov
fimull
mov
mov
pop
cmp
push
rcrl
shrl
adc
dec
dec
jbe
jmp
rcr
xchg
insb
cmp
dec
lock
lret
sub
daa
mov
jo
mov
jg
popf
mov
sub
xor
add
add
push
cwtl
ja
xchg
jge
mov
lea
mov
mov
mov
ficompl
addr16
adc
popa
clc
sub
into
xor
jp
push
test
pop
shlb
add
and
adcl
jbe
popl
mov
pop
in
orb
mov
adc
mov
nop
orb
negl
sub
lds
ret
cmc
js
dec
stos
cmp
cmp
lods
sbb
or
jecxz
dec
push
sbb
cmp
sub
mov
stc
cli
frstor
or
stos
jne
addr16
mov
mov
and
mov
xchg
outsb
add
movsl
cmc
cmp
xchg
mov
dec
xchg
leave
xchg
pop
cmp
inc
cltd
jl
and
bound
ljmp
imul
mov
aam
mov
int
pop
mov
xor
stc
push
fstps
add
cltd
cltd
outsl
test
jecxz
fdivs
sub
sbb
repnz
popa
clc
nop
jecxz
push
dec
call
xchg
in
ss
icebp
mov
pop
ja
xchg
inc
push
test
lods
inc
xchg
xchg
jmp
adc
dec
or
imul
mov
data16
fnsave
ficoms
ror
in
int
push
dec
pop
sub
repnz
fists
add
xor
movb
inc
lcall
divb
cwtl
push
cmpsb
mov
shll
inc
fldlg2
xchg
mov
mov
mov
nop
cli
xchg
cwtl
push
sbb
fwait
inc
addr16
jno
sarl
inc
dec
jo
dec
fimull
adc
rol
adc
cwtl
xchg
xrstors
pop
or
mov
xchg
call
lahf
sbb
ret
shrl
mov
mov
mov
pushf
out
push
aam
or
cwtl
mov
fstpl
mov
xor
gs
mov
adcb
jl
rcrb
enter
xchg
bound
xchg
xor
out
aaa
push
and
add
es
cmpsb
loope
jmp
test
mov
insb
add
mov
and
adcb
nop
ja
sub
inc
outsb
sub
and
xchg
int
out
rcr
push
fnstcw
dec
or
xor
push
xchg
std
test
jae
lock
inc
mov
icebp
lds
xchg
test
inc
mov
sub
sbb
andb
pop
lods
add
cmp
add
jmp
xorl
cmp
cmp
mov
adc
xorl
lods
mov
pop
mov
xchg
add
adc
enter
add
push
inc
lcall
jno
pop
adc
mov
bound
ret
out
pop
or
fnstenv
idiv
dec
rcr
lods
dec
fscale
iret
out
jmp
insb
sub
test
addr16
fdivrl
dec
lock
aaa
cmpsl
dec
mov
pop
ror
pop
dec
cli
sbbb
pop
cmp
jl
int3
xor
jl
mov
popf
idivl
iret
loop
jmp
pop
cmp
push
mov
inc
jno
loope
sbbl
dec
loopne
dec
hlt
adc
addr16
push
bound
push
push
fmull
mov
cmp
cmp
lods
imull
adc
push
mov
fbld
cli
push
mov
test
pop
jbe
addl
xchg
jge
lea
xor
fwait
out
out
inc
fnsave
pop
fs
nop
mov
xor
flds
shll
pusha
testl
je
ret
cmp
out
mov
in
es
push
add
mov
mov
repnz
add
shl
insl
sbb
jge
addr16
mov
push
iret
das
mov
pop
dec
jl
fimuls
aaa
dec
adc
movsb
testl
outsb
jge
insb
jno
sbb
les
aaa
jae
aad
ljmp
jb
cmpl
sbb
xchg
jo
and
jbe
ret
mov
pop
mov
mov
inc
loopne
fstpl
mov
sbb
outsb
daa
inc
dec
call
add
inc
or
cwtl
mov
xchg
lcall
pop
aad
push
shlb
sti
orb
cld
xorb
lock
adc
sbb
je
sbb
repz
push
imul
jo
adc
push
fidivrs
out
xor
scas
jns
xchg
rorl
push
imul
andl
loopne
pop
insb
mov
cs
mov
jae
push
pop
dec
loop
mov
jge
fmuls
cmpsb
dec
adc
int
sub
adc
inc
inc
mov
push
mov
test
and
adc
cmp
cltd
scas
mov
push
push
iret
fstpl
fsts
cmp
sbb
imul
bnd
dec
inc
pop
jnp
mov
sub
rclb
xchg
rolb
jne
gs
rorl
and
setge
pop
sbbb
stos
jbe
sbb
fisttps
pop
loopne
add
jge
addr16
mov
sbb
and
pop
push
icebp
xchg
lcall
dec
cltd
inc
aam
jo
in
dec
xor
dec
inc
out
gs
jnp
jbe
out
cwtl
nop
ss
mov
or
cmp
sbb
mov
xlat
sub
pop
jo
mov
insb
xor
xchg
xor
push
jmp
xor
xor
jb
or
lods
jo
fnstsw
lock
xorl
stos
repnz
sbb
outsb
ss
xchg
mov
mov
cmc
mov
shl
int3
fimuls
inc
rclb
xchg
scas
xchg
or
pop
pop
stos
orb
adc
mov
add
cmp
pop
and
jae
or
mov
push
mov
mov
lds
test
dec
lods
js
adc
jbe
add
sti
fwait
into
push
sub
add
cld
fidivs
sbb
in
push
std
xchg
dec
lret
lret
insl
sbb
mov
pop
cmp
xchg
insl
scas
out
sub
lahf
mov
nop
aaa
and
pop
lret
movzww
arpl
ret
cmp
aad
test
lods
jbe
sbb
pusha
jae
shrl
push
xchg
jecxz
xor
add
cmp
push
inc
dec
mov
cli
test
mov
push
jns
pandn
lret
push
jb
dec
push
push
adcl
sbb
icebp
jns
sti
and
dec
das
mov
add
xchg
xor
mov
aam
in
xchg
pop
xor
dec
cmp
xchg
out
nop
call
test
cmpsl
call
mov
inc
shlb
mov
in
mov
imul
movsl
clc
dec
pop
sub
inc
and
popf
xchg
adc
xor
pop
adc
ficoml
adc
cwtl
test
cli
jle
dec
mov
imul
ja
pop
addr16
sub
jge
cmp
ljmp
aad
cmp
frstor
cmpsb
iret
adc
test
leave
and
inc
push
fs
aas
mov
mul
pop
or
sub
lahf
ss
scas
pop
stos
ja
inc
data16
scas
mov
rclb
add
rcrl
movsb
jmp
stos
xorl
fistpll
add
das
jbe
jl
dec
mov
pop
scas
stos
es
icebp
adc
pusha
inc
cld
jae
lock
insb
fsubrl
pop
pushf
cli
clc
push
faddl
mov
mov
xcrypt-cfb
cmpsl
mov
sbb
lock
popf
jl
inc
dec
icebp
mov
cmp
add
nop
fneni(8087
lock
fbld
mov
stos
dec
pop
cwtl
ds
mov
mov
sti
jmp
pop
dec
lods
inc
jge
cmpl
pop
dec
movsl
orb
fstl
xchg
addr16
call
cmp
daa
jmp
adc
xorb
add
outsl
push
mov
movl
idivl
xor
dec
lock
repz
movl
pop
fwait
es
lods
mov
sub
mov
or
scas
xchg
push
or
sbb
sbb
aas
insl
mov
pop
mov
add
repnz
sti
scas
dec
enter
mov
stc
cmp
inc
fwait
xchg
loopne
push
or
mov
push
xchg
repnz
xchg
push
or
push
mov
lock
adc
add
sti
or
aam
pop
icebp
rol
clc
and
xor
test
insl
xor
iret
lock
cmp
and
rcll
xor
cltd
mov
or
or
cmp
es
clc
push
les
push
out
rorl
sbb
mov
icebp
fadd
clc
push
jp
mov
roll
mov
sub
jbe
mov
sbb
xor
mov
mov
xor
jo
mov
movsl
sbb
xor
icebp
ss
loope
cmp
mov
pusha
scas
cmp
out
adc
aad
and
pop
dec
in
xchg
xor
fldl
scas
fmulp
rol
addr16
loope
sti
loopne
imul
repnz
movsb
lds
push
adc
lcall
stos
lret
repz
jbe
pop
lods
dec
push
jo
ret
jmp
bound
and
adc
pop
in
aaa
imul
mov
clc
leave
push
push
test
sahf
or
sbb
arpl
jns
mov
test
lds
or
cmp
andb
or
pushf
push
test
cwtl
ja
mov
adc
popf
xchg
adc
shr
mov
loope
imul
dec
push
push
in
jg
dec
mov
out
gs
aad
push
jmp
test
mov
jo,pt
mov
push
jmp
cmp
fstpt
iret
cmp
inc
xor
inc
inc
sahf
out
mov
xchg
call
xor
sub
mov
dec
in
push
dec
lods
jnp
ja
lea
cwtl
sahf
and
test
push
imul
andb
stos
fdivrl
pop
out
ss
adc
in
push
stos
push
imul
mov
mov
outsb
mov
push
fs
insl
or
loopne
and
scas
stos
xchg
sub
lds
rolb
clc
addr16
dec
mov
insb
push
inc
popa
test
in
adc
mul
movsl
mov
pop
aas
imul
cmp
push
xor
adc
jg
push
int3
pop
ds
test
rol
jae
cmp
jno
and
cmpsl
mov
push
je
mov
mov
test
ja
xor
imul
inc
mov
shr
cmpb
sarl
push
mov
int
mov
sbbb
mov
pusha
sub
data16
js
icebp
je
adc
hlt
xchg
movsl
mov
jmp
dec
mov
mov
jmp
adc
push
pop
loopne
jnp
jecxz
aaa
popa
mov
outsl
addr16
add
cmpsl
or
pushf
dec
repz
mov
mov
insb
cli
lods
dec
in
punpckhwd
inc
bound
xchg
inc
out
bound
ja
lock
xchg
in
mov
lock
in
shrl
idiv
xchg
push
inc
sahf
test
push
jle
mov
cmp
ds
jns
loop
jmp
mov
sub
loopne
outsb
adc
xchg
jo
sub
sub
push
popf
push
cmpsl
shl
jnp
outsb
cs
idivl
add
das
xchg
mov
and
call
aaa
dec
outsb
inc
pusha
ss
inc
or
stos
ficomps
mov
add
gs
pop
in
mov
jno
loope
ljmp
loopne
cmpsb
jno
add
xor
mov
fwait
xor
test
lcall
cmp
xchg
outsb
inc
cs
jle
mov
or
sub
faddl
cmp
pop
mov
lods
in
xchg
cmp
sbb
sarl
push
dec
sub
xor
pop
jo
mov
push
pop
xchg
rclb
addl
sbb
inc
adc
mov
mov
dec
mov
cmp
into
pop
int3
scas
fildl
adc
fimuls
pushf
fmull
xchg
sbb
pushf
lahf
cmp
inc
mov
stos
shll
data16
jns
cld
adc
fdivs
push
jns
dec
inc
scas
jb
jp
lea
mov
popa
mov
pop
stos
jbe
stos
pop
out
addl
push
fsub
pop
rcl
add
arpl
mov
scas
into
sub
jge
hlt
pop
jae
shll
mov
xchg
mov
inc
pop
push
pushf
xchg
pop
xchg
ss
sti
hlt
pop
cmp
mov
jb
cmp
iret
imul
ds
gs
pop
sub
sub
sahf
xchg
jmp
jnp
cld
negb
xor
jmp
add
cmp
out
jns
pop
sahf
pop
sbb
int3
popa
call
push
scas
jge
jno
jbe
xor
pop
adc
emms
mov
movsb
mov
into
into
clc
cmpsl
repz
imul
ja
aam
mov
outsl
and
negl
test
lods
repnz
sub
int3
and
mov
add
pop
into
shll
xor
cmp
insb
stc
adc
pop
jb
ss
bound
cmp
fstpl
orl
stos
xlat
lods
xchg
mov
adc
test
rorb
icebp
rcl
std
sahf
nop
daa
rcll
inc
inc
std
xor
lahf
movsl
insb
rcrb
test
sub
xor
shrb
data16
mov
sbb
je
push
sub
scas
arpl
mov
inc
jne
sub
jle
pusha
pop
mov
adc
insl
data16
lcall
int3
fcmovbe
stos
inc
sbb
mov
enter
movsb
cmp
or
xchg
mov
inc
loopne
out
mov
add
jle
jmp
addr16
lahf
leave
into
lcall
cmc
xor
mov
cwtl
mov
mov
popa
mov
mov
xchg
pop
jnp
pop
mov
mov
pop
ja
rolb
sub
xchg
jle
dec
decl
rcrl
and
jbe
xchg
mov
xchg
sbb
scas
xchg
cmpsb
lock
sarl
jp
xchg
fdivl
stos
xchg
nop
aam
adc
call
cmp
repnz
mov
lahf
dec
push
cltd
push
mov
mov
repnz
and
rcll
fidivl
push
add
les
loopne
in
push
push
fadds
jmp
pushf
sub
mov
mov
xor
jns
in
and
push
shrl
mov
clc
adc
aas
pop
sbb
cmp
adc
jecxz
dec
ss
inc
cmp
and
xor
push
xchg
mov
fs
loope
mov
dec
int
xor
dec
xchg
mov
iret
mov
lahf
mov
add
inc
cli
and
subb
cmpsl
hlt
mov
mov
je
add
std
xchg
popf
add
jmp
movsb
jle
adc
adc
test
pushf
pop
mov
cmp
cmp
sti
cmc
cwtl
inc
push
std
loop
xor
sti
lods
ret
cld
dec
jmp
nop
stc
inc
std
push
notb
sub
shrl
inc
sub
jp
push
stos
push
cmpsb
sbb
les
movsb
outsb
push
cli
jnp
dec
sarl
aam
lock
sbb
out
popa
clc
cli
insb
add
sbb
xchg
push
test
repnz
sbb
ror
dec
and
test
vpmaxsw
push
add
mov
push
fwait
pusha
ss
lods
add
or
in
mov
imul
mov
mov
and
cld
mov
inc
inc
daa
data16
fcmovb
pop
or
mov
loop
pop
out
sub
xchg
inc
sahf
mov
cmp
mov
es
xor
movsb
addr16
popf
jl
inc
push
dec
enter
dec
or
jae
inc
push
sarb
into
sbb
test
in
fwait
imul
adc
icebp
cmpb
inc
cmp
sub
je
das
fimull
aas
fcomps
std
xchg
sub
clc
xchg
test
cmp
pop
xlat
pop
jo
add
repnz
std
cltd
or
dec
je
lahf
in
lret
mov
aas
jnp
outsb
mov
pusha
sahf
fcoms
in
jns
or
jecxz
cmp
and
push
lcall
divb
xor
aas
icebp
enter
pop
lods
ljmp
das
mov
jns
sub
mov
mov
jecxz
inc
sbb
mov
push
loope
arpl
push
test
push
jae
pop
lds
push
cmp
mov
push
mov
iret
loope
xchg
jecxz
mov
test
push
nop
jnp
and
pop
ljmp
loopne
xchg
cltd
cmp
cmp
ret
das
shr
push
sbb
mov
adc
mov
out
pop
jne
mov
fsubrl
pushf
dec
add
loopne
push
xchg
popf
jg
je
fidivs
jp
lea
int3
outsb
sub
jbe
aas
call
test
mov
stos
int3
sub
lret
push
xchg
scas
xchg
jbe
imul
fbstp
lds
dec
je
cmp
mov
lcall
les
or
adc
stos
cmc
xor
cmp
pop
xchg
mov
mov
mov
sbb
int
iret
notb
sub
loope
push
addr16
or
pop
mov
cmp
sbb
mov
push
mov
ret
out
je
mov
mov
xor
lock
into
gs
stos
movsl
ret
lock
pop
or
xchg
scas
and
or
sbb
into
jno
dec
or
pop
jns
daa
and
imul
and
mov
xor
add
inc
test
shrd
mov
mov
fsubrs
push
jle
pop
loop
mov
lea
clc
lldt
cmc
xchg
stc
mov
mov
sub
adc
adc
push
call
test
outsl
xor
repnz
jp
jns
add
fisttpl
repnz
or
jg
nop
mov
inc
out
jg
add
xlat
repnz
arpl
aad
out
mov
push
cmc
std
push
xorb
jnp
adc
lods
push
cmp
in
xor
jp
cmp
dec
push
mov
ret
leave
in
and
push
mov
jbe
pop
xchg
mov
sbb
pop
fs
inc
bound
nop
and
loopne
adc
add
pushf
mov
test
mov
movsb
shlb
mov
insl
mov
pop
mov
xchg
icebp
outsb
iret
or
mov
lds
in
in
jp
pop
cmp
aam
inc
fldt
xchg
out
popf
cmp
push
insl
cmpsl
mov
shrb
into
push
cmp
push
outsb
jbe
sarl
gs
popa
fadd
pop
and
sti
jmp
inc
loope
jne
jle
inc
pop
mov
adc
gs
sbb
popa
clc
pop
imul
inc
loope
test
hlt
fisubl
push
or
pop
sti
pop
mov
push
loope
mov
push
addl
fwait
mov
sub
mov
les
leave
movsl
dec
pop
push
ret
lods
jle
movsb
in
mov
imul
xor
movsb
cwtl
mov
jl
shrl
icebp
mov
jbe
fwait
mov
pop
jmp
adc
adcl
jno
pushf
cmc
or
mov
aas
inc
push
stos
aad
or
dec
jg
out
movsb
into
mov
xchg
sbb
scas
or
mov
repnz
inc
sti
or
ds
popa
sub
cmp
subl
xor
out
test
xor
arpl
xchg
fisttpl
dec
jmp
fstp
xchg
fdivrl
stos
pop
movsl
pop
push
jg
xchg
enter
mov
and
xchg
and
mov
cltd
sarb
leave
xor
push
sti
lods
sbb
inc
pop
cmc
mov
xlat
adc
push
or
inc
ss
scas
jbe
dec
pop
loopne
lods
es
mov
pop
mov
iret
mov
add
call
popa
mov
sti
or
xor
pop
jo
jns
std
mov
nop
xchg
sub
push
dec
add
negb
mov
enter
add
adc
or
inc
inc
push
xor
fdiv
loope
push
mov
jg
stc
out
lcall
lcall
xor
push
leave
cmp
call
jb
mov
xor
sbb
lds
sub
fstl
pinsrw
outsl
jo
adc
enter
subb
mov
fidivs
lods
mov
lds
subb
negb
or
push
push
pop
dec
decl
cmpsb
addr16
daa
cmc
mov
mov
sbb
test
movsb
fs
inc
hlt
mov
and
mov
jl
cmp
icebp
jg
pop
out
adc
xor
cs
push
or
add
sbb
mov
movsb
sti
std
insb
inc
adc
xlat
mov
mov
fwait
stos
xchg
pop
mov
adc
xchg
jne
lcall
sbb
cmp
pop
sub
jb
sub
pop
mov
and
pop
mov
mov
rcrl
rcrb
push
negl
cmc
test
dec
in
outsl
inc
fdivl
adc
fwait
lahf
mov
daa
pop
mov
popf
mov
inc
bound
mov
fs
add
sbb
push
test
jle
jl
sub
not
filds
push
sub
sarb
push
stos
mov
sub
pop
hlt
lods
test
jnp
cmp
test
jmp
lods
adc
mov
icebp
adc
in
das
cmp
jo
xor
shr
pop
movsl
loopne
dec
lea
sbb
int3
imul
aas
sbb
ret
jnp
or
sbb
xor
fidivl
push
int
movsl
cmpl
jb
mov
cmp
cmc
insl
outsb
repz
xchg
jo
cwtl
ret
lods
add
mov
fsubr
roll
stos
inc
jecxz
inc
sbb
push
fwait
std
gs
mov
xchg
jmp
cltd
sub
pushf
shlb
inc
bound
cld
outsl
mov
enter
aam
and
adc
mov
and
cmp
pop
js
dec
sub
insl
mov
outsb
loope
pop
add
aaa
faddp
sbb
push
cmp
test
xor
popf
shlb
push
adc
or
ja
popa
mov
mov
shlb
test
or
jnp
push
in
gs
dec
sbb
repnz
rclb
sbb
sbb
repz
cmp
pop
jmp
stos
lods
pop
repnz
mov
cmp
mov
test
fidivrl
fwait
or
stos
lret
repz
enter
sub
jl
xor
lret
ja
push
int
lock
andl
movsl
jo
mov
stos
mov
jo
mov
or
inc
mov
cmp
cwtl
xchg
scas
cwtl
pusha
je
xchg
push
notb
and
fdivrs
arpl
adc
shrl
ljmp
xchg
mov
scas
pop
lret
cmpsb
push
nop
sbb
js
push
pusha
xor
dec
stos
jb
xchg
in
mov
xchg
inc
add
inc
shlb
inc
push
cmpsb
fsubrl
sbb
stos
and
test
int3
leave
cmp
imul
test
inc
push
insl
xchg
call
sub
and
sahf
mov
sub
gs
enter
data16
and
and
xchg
scas
inc
jno
pop
es
sub
shrb
mov
leave
test
sahf
push
pop
and
mov
testl
das
ret
out
dec
movsl
rorb
jns
adc
or
outsb
rorb
imull
addl
lods
out
pushf
popf
data16
cmp
je
mov
pop
push
imul
stc
and
or
movsb
add
inc
and
in
inc
dec
jmp
pop
pop
push
and
sub
mov
pop
lock
xor
icebp
cmpsb
sahf
mov
pop
push
push
mov
stos
xchg
popf
cli
mov
xor
lea
mov
sub
xor
cmc
das
pop
mov
cmp
out
add
inc
sbb
sbb
std
mov
inc
push
imul
mov
push
aaa
ficoml
push
mov
out
int3
xlat
flds
into
lret
out
pop
add
jl
aam
lret
cmp
pushf
lea
and
mov
ljmp
movsb
jg
xchg
loop
sub
mov
loope
xchg
mov
cltd
test
roll
pop
hlt
aaa
inc
pop
push
es
test
scas
call
push
dec
in
sarl
fiaddl
or
lods
imul
popa
inc
fs
add
or
xchg
fiaddl
fiadds
pop
into
arpl
add
fucomip
dec
and
or
sbb
push
jnp
aaa
mov
pop
dec
lret
ljmp
jmp
lea
stos
xor
pusha
mov
sub
jns
jmp
pop
lcall
cmp
xchg
inc
inc
cmp
mov
les
js
or
imul
mov
pop
sarl
cltd
dec
gs
mov
lds
or
adc
stos
push
loopne
addr16
jp
mov
inc
aad
out
repz
test
pavgb
xor
loopne
mov
cmc
cmpsl
cmpsb
arpl
aam
repnz
pop
sub
pop
mov
xchg
xor
lds
mov
sub
stos
and
dec
xor
sbb
jg
test
cli
ss
icebp
mov
dec
sub
je
mov
xchg
divl
and
sub
pop
adc
loope
sub
aas
js
orb
jmp
dec
lahf
fidivs
mov
cld
sub
int
mov
lock
jo
push
insl
out
xchg
ret
push
mov
xchg
mov
dec
lret
mov
mov
test
repnz
sub
repnz
fwait
sahf
adc
leave
cmpsl
inc
icebp
rorb
jg
mov
push
in
clc
cli
add
mov
fsubrl
fdivl
mov
rorb
add
aas
mov
mov
imul
stc
cltd
popa
and
push
sbb
arpl
pop
or
mov
xor
xor
mov
inc
and
adc
pop
repz
add
lods
push
stos
mov
add
data16
cs
xor
pop
push
inc
xchg
sbb
aaa
loope
push
cli
repnz
jo
mov
data16
fwait
and
std
jbe
pop
insb
xchg
rolb
cltd
mov
lret
loop
xchg
adc
add
push
and
sbb
mov
aam
or
add
jbe
and
fwait
push
pop
mov
cmpsb
loope
jl
fisubrs
insl
pop
repnz
xchg
aaa
subl
addr16
shlb
xchg
sub
jae
and
fstpt
add
sti
bndldx
iretw
daa
enter
jmp
and
xor
push
mov
mov
jg
sahf
mov
dec
pop
cwtl
cmpsl
mov
lds
es
movsl
and
mov
sbb
add
mov
outsl
push
call
iret
push
xchg
add
aaa
into
push
push
xor
jl
testb
xchg
repz
mov
jnp
or
ja
push
vprotw
pop
and
repnz
into
enter
aam
test
cmc
mov
adc
pop
mov
xchg
mov
shrl
outsb
adc
scas
not
xchg
xchg
lods
add
fdivl
hlt
pop
jae
gs
mov
insb
testl
cmpsb
inc
lock
jge
push
push
pop
repnz
jne
sbb
out
xchg
adc
mov
mov
dec
bound
cmp
dec
or
adc
push
insb
adc
jmp
bound
inc
cmpsb
testb
xor
adc
es
ljmp
mov
xor
mov
sbb
pop
or
add
mov
imul
daa
lcall
push
push
cld
lcall
push
or
and
mov
dec
mov
mov
sbbl
sbb
sbb
or
cmp
push
xchg
cmp
adc
into
cli
ror
sub
aam
cmp
adc
popa
dec
aad
int3
xchg
sub
lods
pop
movsb
push
stc
enter
pop
sahf
int3
shrl
sub
cmp
rolb
mov
negl
or
repz
add
push
xchg
mov
sub
aaa
inc
in
mov
push
jg
add
gs
lret
aad
xchg
cld
xchg
push
mov
shll
idivb
mov
push
roll
mov
and
mov
cmp
adc
cmp
into
cmp
arpl
lock
dec
ja
jne
test
mov
repz
sub
popf
test
cmpsl
pop
in
add
jns
leave
enter
inc
fs
and
add
push
adc
fdivl
add
and
sti
pop
jmp
shrb
adc
jg
mov
adc
xchg
sbb
lret
or
jecxz
push
dec
sub
pusha
jl
xchg
push
addl
sub
mov
xor
sbb
sub
xchg
sub
add
test
rcrl
int3
lret
popf
lods
movsl
xchg
and
pop
and
adc
lods
sbbl
cmc
scas
mov
je
movsb
xchg
inc
or
adc
inc
popf
sub
adc
lods
cmp
bt
pop
cmpsb
icebp
adc
xchg
mov
add
xchg
sub
and
mov
pop
cmp
mov
clc
cwtl
fldt
dec
jno
mov
shlb
mov
push
in
cltd
das
lcall
push
out
inc
fsubrs
xchg
popa
jne
jmp
push
mov
add
xor
mov
mov
jl
popa
clc
or
imul
imul
ret
lock
dec
add
sti
pop
mov
lods
xorb
dec
xchg
xchg
or
mull
testl
push
nop
inc
mov
or
orl
mov
repz
add
aaa
aad
or
jno
add
sbb
lahf
jp
cmp
dec
mov
addb
insb
jmp
or
mov
pop
imul
mov
jnp
shll
insl
pushl
sbb
in
sub
mov
in
push
mov
fisubl
outsl
jae
out
test
ljmp
out
add
fnstsw
inc
pusha
xchg
jbe
outsb
stc
movsb
and
inc
push
cld
push
dec
or
fwait
jge
sahf
scas
mov
jecxz
add
xor
fmuls
test
push
cmp
stc
mov
aam
and
and
dec
push
mov
shlb
das
ds
bound
xchg
fsubl
mov
cmp
adc
mov
lods
sbb
push
xchg
cmp
imul
mov
cs
push
int
jg
adc
test
sbb
ljmp
jbe
sbb
jmp
xchg
and
mov
dec
xchg
cli
push
inc
ljmp
jne
add
xchg
xor
pop
repz
xchg
mov
pop
or
jno
and
fwait
pop
mov
arpl
aaa
outsb
pop
adc
push
push
icebp
mov
cmpsb
rol
adc
add
es
jbe
das
out
mov
xchg
or
imul
enter
test
daa
jne
lods
and
test
leave
test
daa
fwait
xor
enter
mov
icebp
sub
data16
aad
call
lds
pop
mov
es
mov
fisttpll
pop
adc
out
and
mov
add
les
movsl
das
cmp
pusha
in
push
sbb
add
lds
pusha
mov
fdivrs
cltd
daa
out
add
or
inc
rorl
and
iret
stos
jmp
jb
pop
insb
mov
movsb
push
cmp
xchg
iret
cmp
adc
mov
leave
clc
sarl
cld
outsl
aaa
scas
data16
fistps
mov
iret
push
fstpl
pusha
negl
mov
test
sbb
outsb
rorl
dec
loope
aas
insb
or
rep
pop
loope
cmp
pop
lcall
inc
pop
dec
and
jl
push
out
mov
sub
test
movsb
jnp
mov
loopw
outsl
jnp
cwtl
out
dec
clc
sub
dec
out
pop
inc
xor
push
int
xor
and
aaa
push
mov
add
aad
add
xchg
and
arpl
sti
fwait
push
or
pop
adc
or
push
lahf
push
dec
in
test
lock
mov
rol
call
mov
inc
cmp
addr16
iret
mov
mov
sarb
das
jmp
jae
or
cmp
flds
gs
jo
idiv
arpl
popa
pop
xchg
xor
push
das
int3
lret
mov
jmp
inc
pushf
shlb
or
dec
push
stc
movsl
jge
out
cmpsb
xor
mov
in
mov
ja
ficoms
dec
push
adc
xor
cmpsl
sbb
fisubl
xlat
lods
lds
js
std
sub
int3
pop
and
pusha
divl
bound
cmp
in
insl
or
sbb
xor
addb
sub
fldt
lds
es
add
and
adc
cmp
es
cltd
stos
pop
sbb
and
pop
xchg
out
test
icebp
cmp
out
pop
mov
sbb
jmp
pop
cmp
jg
mov
aaa
sbb
adc
sub
pusha
pop
push
sbb
cmc
xorb
ficompl
test
cmp
mov
jbe
lds
cld
fistpll
adc
add
stos
int
dec
dec
mov
cmc
push
push
loope
in
ss
fildll
repz
xchg
data16
add
mov
out
fucomi
xchg
xor
repnz
lds
jge
ss
mov
xchg
lret
shlb
cmc
push
movsb
add
ss
out
ljmp
cmp
jns
sbb
mov
sub
mov
lds
xchg
adc
js
clc
cwtl
sbb
ljmp
std
xor
pop
pop
mov
jbe
mov
repnz
and
test
ljmp
xor
movsl
push
xchg
cmp
imul
xchg
sub
add
cwtl
or
enter
dec
loopne
sub
inc
ds
hlt
mov
das
stc
in
sbb
cmp
hlt
pop
imul
add
out
push
arpl
xor
cmc
inc
add
lods
test
iret
das
shl
leave
pop
mov
sarl
sbb
pop
mov
adc
jmp
xor
sub
hlt
push
xor
xchg
jo
mov
fists
mov
or
mov
and
mov
push
das
pop
insb
jnp
mov
nop
or
imul
rclb
mov
lret
lret
pop
in
test
clc
js
xor
and
enter
push
or
testb
or
mov
out
dec
ds
jns
in
aam
fistl
sbb
dec
mov
mov
mov
mov
xchg
pop
jne
or
and
pop
fst
je
cwtl
clc
pmaxsw
movsb
mov
xchg
mov
mov
psrld
fidivrs
hlt
inc
mov
iret
xor
fcoms
cmp
je
pop
flds
and
xor
iret
mov
leave
lock
stos
add
jae
inc
mov
sti
fwait
lds
jmp
push
pop
lahf
mov
enter
das
cmp
je
xchg
out
pop
enter
pushf
fnstenv
cmp
add
xchg
sub
sti
shlb
adc
jo
imul
outsb
loopne
push
movzbl
outsb
icebp
sbb
mov
xor
adc
mov
xor
fwait
outsb
les
and
icebp
shrl
dec
mov
fldl
pop
and
nop
pop
jo
in
pop
xchg
test
fcoml
sbb
xchg
push
je
rcl
repnz
and
xchg
mov
popf
out
jne
adc
adc
pushf
jno
add
pop
out
cmp
dec
loop
sub
mov
test
lcall
sub
and
and
pop
into
add
das
lea
out
test
lret
and
push
icebp
dec
popf
xor
xchg
jno
addr16
push
xchg
sbb
mov
push
std
xchg
xchg
xchg
cltd
lcall
mov
and
or
inc
pop
push
sub
pop
pop
js
pop
push
mov
in
mov
ljmp
inc
popl
cltd
pushf
scas
inc
mov
sahf
ret
imul
outsl
push
je
ret
xchg
mov
dec
ret
movsb
mov
push
cltd
cltd
mov
and
scas
mov
ftst
iret
scas
and
push
fnstenv
aam
xlat
les
in
and
jno
sub
jne
stc
and
jg
mulb
ret
int3
and
fwait
cmp
inc
aaa
mov
imul
fbld
xor
jb
test
push
cmpsl
jmp
sti
xchg
xor
mov
xchg
stos
mov
shrb
cmpb
addr16
mov
add
repz
mov
mov
jae
jmp
cli
jne
cmc
and
ss
imul
xor
outsb
inc
push
jae
xorl
mov
mov
cmp
lods
mov
mov
xor
mov
cld
iret
scas
pop
jae
push
mov
xor
fwait
pop
cmp
push
imul
ficoml
mov
scas
into
lret
es
jmp
mov
jo
leave
inc
lret
mov
popa
jecxz
notl
aaa
inc
rol
inc
das
pushf
cli
inc
cmpl
ljmp
adc
add
and
imul
jbe
jns
fcoms
sti
sub
push
int3
dec
mov
cmp
fidivl
push
insl
ret
decl
in
dec
out
cmp
dec
int3
dec
loop
fwait
popf
and
xchg
imul
or
jle
test
or
xchg
add
sub
loopne
adc
sub
pop
xor
insl
rcrl
repz
xor
mov
in
pop
mov
int3
dec
mov
push
xchg
inc
fidivs
sub
mov
fidivrl
dec
mov
fsts
repz
jmp
test
adc
mov
adc
fwait
cmp
xchg
adc
inc
sbb
pop
xchg
xchg
int3
ret
repz
cltd
push
fwait
lahf
sbb
push
imul
mov
xchg
shlb
mov
jns
sbb
or
sub
pushf
fwait
cltd
stos
ljmp
pushf
cmp
mov
xlat
pop
lock
scas
ret
and
mov
test
jg
ret
or
outsl
mov
and
pop
or
push
mov
mov
loopne
cs
cli
push
sahf
lahf
push
nop
add
xchg
add
test
xchg
add
mov
adc
dec
inc
popf
repz
inc
push
daa
inc
mov
pop
and
mov
insb
jp
mov
out
jnp
pop
mov
test
rclb
mov
mov
movaps
mov
dec
je
dec
cmpl
cmp
or
into
push
pushf
jnp
push
pop
loopne
in
dec
fldcw
dec
push
loope
sbb
rorb
mov
or
inc
fdivs
lods
sub
fists
sti
movsb
jl
lock
lds
mov
in
test
sahf
xor
lcall
pop
mov
aad
mov
in
popa
xor
insb
xchg
jb
push
lds
mov
push
fstpl
fnstenv
lods
or
and
sub
adc
rclb
mov
loop
mov
sbb
cmp
test
sbb
std
push
and
sti
not
je
test
add
jne
sti
das
and
out
lcall
addr16
mov
adc
xchg
es
fwait
cmp
outsb
mov
mov
insb
jae
ret
rcll
push
pop
shrb
cld
cmp
test
xchg
mov
mov
lret
jno
in
or
pop
out
lcall
push
or
daa
rclb
jne
inc
test
out
orb
xor
jle
mov
jns
popf
or
inc
xchg
fidivrl
pop
sub
ss
sti
sbb
repz
imul
sub
sub
mov
call
std
lcall
fsts
frstor
mov
add
clc
outsl
xchg
mov
popf
or
sbb
xor
cld
lret
outsb
sub
push
pop
cmc
test
shll
inc
push
push
bound
stos
and
cli
push
mov
fnstenv
in
and
push
es
pushf
cli
das
or
mov
mov
jg
dec
cs
push
pop
jnp
xchg
stos
ja
imul
xchg
repnz
jns
add
add
sbb
push
lcall
sahf
mov
orb
mov
mov
add
mov
pop
out
cmp
lcall
test
push
xchg
jne
out
dec
fld
dec
ret
mov
fs
lret
push
ss
es
add
outsb
movsb
xor
xchg
sbb
mov
mov
cmp
sbb
push
push
fdivp
std
out
les
mov
xchg
mov
fidivrs
repz
mov
and
dec
loope
inc
cmp
sub
dec
add
jb
xchg
jecxz
shrb
pop
xor
enter
jns
cli
mov
xchg
inc
mov
test
mov
cmp
xchg
mov
mov
sub
scas
mov
mov
or
inc
push
cmp
fldenv
inc
stos
aam
mov
scas
xchg
sbb
js
or
int
dec
mov
loope
out
rcrl
aam
sub
xchg
mov
shrl
insb
andb
dec
sbb
mov
or
mov
movlps
incl
mov
outsb
clc
push
pop
xor
and
mov
lock
inc
rcrl
test
xchg
insb
adc
fidivl
xchg
adc
out
cli
repz
popa
xor
dec
mov
pusha
insl
or
test
or
pusha
xchg
mov
or
adc
push
pop
mov
imul
cs
lds
mov
jmp
dec
dec
mov
testb
mov
cwtl
mov
mov
push
test
xor
xchg
sub
xchg
scas
and
or
stos
adc
or
inc
sub
jo
movsb
pushf
xchg
stos
std
movsl
jbe
pop
adc
sub
daa
inc
pop
test
scas
xchg
adc
lds
xor
outsl
jge
jbe
xchg
fisubl
leave
add
mov
dec
xor
dec
rcr
or
push
lds
push
icebp
gs
out
sarl
mov
xchg
dec
lods
test
ja
xchg
sub
mov
scas
inc
sbb
push
push
lods
cmp
or
cmpsl
and
inc
inc
sbb
hlt
dec
incl
xchg
test
out
sti
pop
data16
add
popa
repz
sbb
into
scas
xchg
and
popf
scas
pop
into
in
jmpw
sahf
mov
push
sub
mov
cwtl
out
ret
xchg
dec
add
in
into
sbb
mov
or
xor
push
sbb
in
inc
in
fiadds
or
mov
int3
cltd
rcl
icebp
jae
clc
jae
cmpsb
xchg
sub
add
pop
jmp
cmp
xchg
and
stos
jmp
cwtl
fsts
add
xchg
pop
pop
in
stos
inc
dec
lock
dec
insl
data16
out
jle
push
mov
mov
daa
jae
clc
or
test
ret
add
mov
pop
jmp
cmp
pop
fwait
les
push
mov
loope
xchg
fadds
mov
cmp
sbb
in
adc
aam
outsl
mov
ret
mov
popa
jg
loop
scas
push
lahf
stc
popa
pop
push
rol
es
aad
mov
ja
mov
mov
int
mov
pop
jbe
or
pop
jg
jns
ret
fimuls
out
hlt
add
add
xchg
cwtl
testl
orl
dec
repnz
in
pusha
pop
sarb
sub
pop
lret
inc
aad
je
fbld
dec
mov
push
xor
mov
jb
icebp
popa
pop
pushf
xorb
insb
outsl
jns
pop
cltd
lcall
js
insb
add
repz
test
into
mov
lea
loopne
push
movsl
cmp
push
mov
mov
mov
and
test
in
fdivrs
sbb
in
leave
jns
jo
ljmp
inc
cmpsb
loopne
in
dec
je
cs
sub
adc
ret
push
xchg
ds
pop
inc
xchg
pop
lds
pop
rcll
imul
cmp
jecxz
fs
adc
inc
xchg
cmpsl
jbe
mov
mov
mov
shll
inc
jmp
push
shlb
jae
pop
xor
dec
add
aad
test
jnp
loopne
or
add
dec
sub
dec
pop
mov
jno
out
mov
repz
callw
fisttpl
sub
mov
pop
in
mov
sbb
mov
add
mov
lds
xchg
ja
xor
stos
loopne
fimuls
add
into
gs
das
fwait
pop
fdivs
les
pop
ret
clc
pop
jb
or
sbb
and
xchg
fsubs
and
rorb
ss
lds
jp
jbe
lods
dec
aam
js
inc
fsubr
jge
jecxz
or
cmp
jle
cwtl
repnz
pop
fistps
and
data16
jge
rclb
in
mov
xor
push
fucomp
cmc
ret
pop
adc
inc
in
jae
pop
loopne
orb
cmp
xchg
xchg
das
mov
lds
jge
pop
cmpsb
mov
xchg
loopne
out
ja
cmp
and
jmp
iret
cld
and
icebp
or
inc
push
fnstsw
push
jbe
sub
aam
aaa
dec
ja
add
jg
adc
lods
data16
mov
imul
ret
jb
sbb
shrl
outsb
rcrl
test
fwait
pop
movsb
int3
pusha
into
mov
jno
xor
pop
inc
fstpt
shll
sbb
in
scas
mov
sub
in
cmp
stos
shl
outsb
imul
cmp
inc
les
cmc
pop
addr16
dec
lods
jo
ret
ss
pusha
in
ret
jecxz
movsl
mov
testl
test
mov
push
ror
xchg
sub
rep
add
ret
mov
arpl
ss
or
pop
push
fcompl
xchg
or
dec
enter
fstps
mov
xchg
pop
dec
xchg
mov
dec
in
dec
aaa
or
dec
adc
mov
xchg
sbb
push
lahf
xchg
shrl
ds
pop
dec
pusha
adc
inc
jnp
mov
call
cmp
enter
test
inc
xchg
and
dec
push
insl
adc
vpsrld
push
add
push
inc
pop
adc
outsl
add
rclb
push
roll
pop
push
std
hlt
aaa
mov
rcrb
add
movsl
fsubrs
jg
adc
in
fs
pop
orb
cmp
dec
sahf
sarl
sub
pop
sbb
ss
xchg
dec
mov
xor
mov
and
movsl
lea
out
int
imul
jecxz
sbbb
dec
outsb
xor
add
cmpb
shl
imul
add
cmp
add
out
dec
pop
inc
adc
jge
lea
mov
orl
psraw
aas
sbb
mov
aad
outsb
pop
or
or
xor
je
dec
push
or
adc
dec
int
cli
pop
lcall
test
in
fprem1
and
pop
aad
or
int3
sbbl
cmp
mov
or
jl
inc
sbb
pop
adc
ds
popf
push
std
movsb
loop
and
jno
xchg
pop
jne
push
mov
xchg
mov
popf
sbb
add
push
mov
sbb
in
bndstx
or
jg
dec
xchg
cmpl
shll
mov
sbb
test
cmp
and
ljmp
inc
xchg
imul
lods
or
aam
lret
stos
insb
sbb
cmp
cmp
ljmp
in
push
push
pusha
repz
scas
ljmp
mov
cmp
faddp
ret
insb
stc
pop
in
jb
jge
pop
scas
aaa
addr16
nop
stos
mov
daa
out
fnstsw
fcoms
push
pop
push
push
jae
mov
adc
lahf
mov
push
sbb
cmp
mov
mov
adc
sbb
in
scas
dec
scas
add
pushaw
inc
push
dec
add
lea
sbb
testb
cmpsb
mov
pop
mov
push
in
nop
and
adc
mov
inc
data16
sub
push
daa
lret
bound
mov
popa
shll
mov
pop
add
lcall
dec
dec
xlat
imul
xchg
mov
sbb
call
xor
xchg
stos
out
pop
dec
and
pop
lock
mov
push
cs
and
mov
cltd
fucomip
leave
jnp
movsl
rcrl
adc
ljmp
xchg
pop
or
sbb
dec
test
push
push
aad
cwtl
das
lcall
cld
fidivrs
inc
mov
xor
fisubs
xor
jmp
hlt
dec
push
add
pushf
scas
and
cld
je
jo
or
test
adc
iret
scas
cmp
enter
dec
test
out
fdivp
cld
subl
fstpl
into
loop
or
repnz
arpl
cmpsl
rcrb
jmp
or
aas
dec
enter
scas
shrl
adcl
inc
movsl
aam
leave
mov
cwtl
pop
mov
cld
mov
ljmp
dec
es
sub
or
das
push
jl
mov
iret
pop
cmp
insl
mov
xchg
adc
enter
push
mov
js
sub
inc
dec
nop
ljmp
mov
fs
aam
ficompl
mov
jns
jecxz
rclb
test
loop
jecxz
stos
xor
sub
jp
cltd
cwtl
sbb
int
and
jmp
xor
sub
pop
push
or
enter
push
lds
ljmp
mov
adc
pop
push
push
notl
xor
xor
mov
sub
jg
repz
lret
out
lahf
out
sbb
jnp
icebp
sbb
rcll
dec
mov
data16
sub
jmp
add
mov
fstl
sub
cmp
or
pop
int3
lret
in
jne
mov
adc
nop
rcrb
push
hlt
ret
jp
pop
jns
in
or
inc
mov
cmp
in
mov
fldt
les
mov
pushf
sbb
and
xchg
dec
insb
lahf
aaa
mov
cmp
in
inc
rcrb
fcomps
ljmp
mov
stos
in
mov
cmpsl
push
push
std
outsl
push
mov
lahf
sbb
cmpsl
ret
mov
cwtl
xchg
jns
frstor
jnp
lods
jb
mov
pop
xchg
inc
push
push
movsb
addr16
or
arpl
scas
cwtl
cltd
push
mov
mov
ret
jl
repnz
cmp
das
arpl
outsb
sub
mov
inc
fidivs
xor
lds
ljmp
loope
jns
sub
stos
inc
repnz
nop
test
lcall
out
mov
scas
movsb
xchg
int3
nop
subb
pop
mov
ret
add
xchg
adc
loop
mov
imul
out
or
xchg
rcrb
pushf
test
cmp
jge
pusha
ret
push
in
hlt
cmpl
or
scas
add
ret
push
mov
sahf
int3
or
daa
mov
or
mov
xlat
icebp
imul
call
add
push
xchg
mov
or
inc
sbb
dec
je
and
adc
push
aaa
imul
lret
sbb
xchg
add
or
out
clc
dec
push
jl
push
out
mov
pop
mov
pop
xlat
insl
and
mov
xor
xchg
or
sub
pop
sbb
lcall
mov
sub
fdivrl
repz
ficoml
jo
add
mov
lods
sub
push
popf
jl
popf
not
sbb
add
insb
adc
lahf
insl
sbb
mov
lret
imul
mov
sbb
mov
push
idivb
adc
fdivrs
cwtl
insl
push
push
adc
cmc
jl
fbld
insb
aas
xchg
sbb
imul
jb
fbstp
xchg
lock
cmpl
daa
movsl
xchg
pop
popl
and
sbb
pop
out
xor
test
mov
mov
and
cmp
fsubr
mov
subl
push
xor
xchg
add
enter
roll
ds
xchg
dec
aam
push
jbe
dec
ds
mov
roll
dec
std
into
xor
aad
shrl
push
cmpsb
push
and
lcall
mov
push
cli
ret
sti
mov
fbstp
enter
and
mov
lods
mov
jb
cmp
xchg
dec
in
lea
sbb
inc
pop
pop
loop
cmp
ret
pop
aas
xchg
mov
xchg
xchg
and
dec
adc
out
xchg
inc
push
ss
mov
xchg
in
xchg
jmp
repz
iret
cmp
push
jne
int
xor
pushf
iret
jle
adc
mov
in
das
sub
lea
loope
rclb
imul
cs
imul
pushf
jbe
xchg
rolb
mov
enter
cltd
xchg
inc
mov
jmp
mov
sahf
sahf
aas
iret
daa
cli
inc
dec
pop
xor
loopne
mov
sti
je
and
mov
das
mov
adcl
fsubrl
popa
pop
mov
sbb
mov
push
dec
decl
cmp
sub
cmp
outsb
inc
out
jnp
outsl
adc
pop
sub
inc
fcmovb
pop
xchg
add
sar
xchg
repz
scas
divb
mov
lret
mov
scas
scas
mov
out
shrb
push
shrl
jmp
adc
pop
add
push
xchg
or
push
inc
jb,pn
sarl
leave
xor
add
push
cmpsb
inc
fs
pop
adcl
mov
out
popa
mov
and
push
in
jmp
sub
scas
loop
adc
ljmp
jmp
jl
jmp
lcall
lret
in
mov
push
lcall
popf
xor
aam
and
in
inc
cltd
cli
pop
or
loope
xchg
mov
into
pop
and
fsubl
adc
rcr
rcll
mov
jg
dec
shlb
addl
jns
xor
xor
xchg
lods
cmp
dec
jmp
mov
push
ljmp
outsl
ja
pop
sahf
testl
adc
es
push
lret
fidivrl
scas
enter
jns
out
mov
rcrl
fldl
jp
mov
mov
sti
in
popf
loop
int
hlt
mov
push
mov
mov
icebp
iret
and
jmp
je
mov
sub
inc
or
mov
xchg
ljmp
shlb
jle
lock
sbb
mov
and
imul
shlb
jno
push
pop
sbb
frstor
add
push
cmpsl
or
cs
mov
je
mov
leave
jg
cmp
jae
ja
pop
fcmovnbe
clc
arpl
push
xor
push
inc
sbb
or
in
adc
sahf
aaa
mov
and
sbb
stos
and
adc
jo
loope
out
fstpl
jne
pop
jns
lea
add
popf
in
orb
popa
clc
jae
imul
push
xchg
es
push
ja
xchg
pop
dec
loope
mov
addl
std
dec
sub
fstpl
and
pop
stc
adc
mov
cmc
add
lds
pop
or
mov
sbb
add
outsl
sbb
test
sub
pop
push
fimull
test
inc
or
cmc
popl
sub
xchg
roll
mov
nop
scas
gs
in
and
push
int
aas
iret
xchg
mov
mov
mov
dec
mov
imul
mov
fs
and
int
cmp
mov
mov
lods
pop
inc
cwtl
ret
insl
inc
pop
xchg
and
mov
les
fildll
inc
jo
mov
into
push
or
ret
jp
jns
outsb
mov
arpl
add
cmp
cmpsb
js
loope
roll
mov
dec
jb
lahf
mov
aad
xchg
test
mov
sbb
or
jp
repz
mov
lods
inc
sbb
mov
mov
je
cld
loopne
sti
fistl
adc
inc
inc
aaa
stc
push
or
outsl
push
and
inc
repz
std
pop
mov
aas
loop
dec
and
ror
xor
dec
cmpl
pop
or
push
adc
add
xchg
xchg
dec
and
xchg
adc
outsb
xchg
orb
mov
push
adc
pop
stc
adc
jae
inc
movsl
mov
leave
pusha
mov
insb
adc
gs
rcll
rolb
sub
add
addb
fdivrl
cmp
add
cmpsb
scas
push
loop
cmpsl
or
aad
out
pushf
arpl
cmp
mov
mov
xchg
push
jp
icebp
mov
sti
mov
cmp
push
sub
push
ljmp
jge
sbb
out
jg
aas
adc
out
and
and
test
xchg
fs
fistps
xor
sbb
mov
arpl
test
xchg
push
data16
xchg
pop
jp
dec
pop
cmovle
push
xor
push
xlat
lahf
sti
add
mov
stos
mov
je
shl
xchg
jp
in
inc
jmp
ds
jb
xchg
cmp
lret
insl
add
cmpsb
xchg
or
add
mov
loopne
out
fsubrp
ss
xchg
cmpsl
mov
sbb
call
or
sub
je
cmp
add
es
ret
pop
adc
mov
inc
loope
jb
cmp
movsl
mov
sub
out
arpl
push
or
cmp
insl
mov
mov
inc
cmp
dec
mov
aam
inc
arpl
or
cmpsb
outsl
stos
call
push
sbb
mov
les
sbb
add
pushf
movsl
les
test
push
jl
mov
inc
jns
inc
cmp
bound
stos
out
push
aad
xchg
dec
cmp
mov
push
lods
mov
jmp
sbb
hlt
xchg
xor
mov
cmp
popf
stc
frstor
cmp
repnz
xchg
pop
hlt
cli
shlb
inc
fldl
and
xlat
jo
mov
cmc
add
xlat
xorb
imul
imul
add
mov
cmp
cwtl
jl
mov
and
fadds
lret
std
subb
pusha
ficomps
out
ret
lds
jl
or
mov
mov
outsb
sarl
xor
inc
sbb
std
jg
push
imul
and
addl
fsubs
mov
xchg
cmpsl
fdiv
adcb
test
out
sti
and
daa
push
addr16
inc
insb
stos
add
ljmpw
inc
pop
pop
lcall
inc
push
jmp
push
das
jo
pushf
add
xchg
mov
dec
lret
and
cmp
mov
jb
or
pop
mov
test
xchg
sub
movsl
mov
sbb
mov
std
clc
xchg
sahf
lods
xchg
in
xchg
aam
out
mov
fidivrl
cmp
fsts
aaa
pusha
pop
js
adc
test
pop
add
jecxz
lret
inc
sbb
xchg
push
jae
mov
arpl
dec
movsb
push
sub
ret
addb
add
inc
pop
jb
lds
aam
sbb
nop
fiaddl
and
xor
ret
iret
sub
in
je
inc
sahf
adc
adc
fmull
dec
sbb
fldl
dec
inc
mov
pop
adc
rcrl
xor
mov
jge
out
scas
fistpll
aad
mov
rol
insb
fbstp
lret
or
sar
cs
loopne
dec
dec
mov
mov
jle
or
sarb
mov
xchg
testb
das
jbe
or
or
jae
and
dec
mov
es
popa
or
sub
inc
in
adcb
lahf
idiv
push
jne
mov
iret
cmp
mov
rorb
fstl
mov
ja
stos
mull
imul
dec
xor
push
inc
shr
add
pop
xor
mov
out
jb
push
popf
mov
mov
or
sub
fcomps
stos
xor
or
pop
sub
cmp
hlt
push
shll
popa
enter
sub
pusha
pop
cmc
xchg
pop
es
addr16
popa
fcoml
cmp
rcrb
rcrb
outsl
or
mov
sub
aad
pop
stos
ss
dec
cwtl
int3
mov
and
lock
push
inc
jecxz
inc
sub
pop
hlt
add
dec
pop
lods
and
sub
loop
cli
cmp
aam
sbb
ret
imul
aad
pushf
popf
imul
stc
je
push
shr
cmp
jp
cmp
lods
mov
inc
mull
popa
sbb
xchg
inc
bound
cld
adc
adc
cwtl
mov
enter
movsb
jnp
xchg
mov
and
sbb
out
or
insl
add
fldt
jp
addr16
cld
lock
fistpll
pop
jl
lods
xchg
cltd
aaa
lret
xor
ljmp
jb
lcall
push
cmc
pop
je
sub
addr16
shr
jb
int
push
daa
cwtl
push
popf
popa
les
xlat
ljmp
ss
add
push
xor
push
or
popf
iret
lods
pop
int
push
xchg
shr
mov
std
test
pop
or
mov
out
testb
xchg
sbb
loop
scas
sub
add
in
sub
and
mov
int
cld
xchg
stc
or
mov
lods
dec
fsubrs
jecxz
mov
sti
push
jb
cmp
cltd
insb
sub
and
push
subl
xor
sub
add
test
andb
lahf
jno
mov
lock
adc
shrl
inc
or
push
dec
rcrb
sub
push
stos
mov
imul
aam
mov
mov
push
shll
mov
daa
lock
mov
and
repnz
test
cmp
xchg
add
jecxz
or
rcr
push
es
sti
dec
cmpsl
shlb
mov
mov
ret
and
sub
add
decl
sub
popa
and
xchg
sbb
xor
dec
pop
movsb
mov
sbb
mov
pop
aad
adc
ret
insb
les
mov
imul
push
enter
ja
insl
mov
jb
and
pop
scas
cs
mov
or
fsubl
lea
mov
sbb
mov
inc
pop
out
mov
jp
out
jbe
lcall
cltd
mov
push
xchg
imul
pop
lock
xor
push
outsl
and
dec
add
sub
add
dec
push
mov
lret
and
imul
fisubrs
jg,pn
push
jo
loop
pop
adc
testb
imulb
cld
shr
sub
inc
mov
xor
sbbb
jbe
adcl
lea
movsl
lret
bound
cs
or
sub
or
rorb
rorl
mov
inc
jnp
cmpsb
sub
mov
enter
sbb
sub
into
lods
sti
fwait
xor
scas
call
xchg
dec
xchg
repnz
push
pop
ja
add
scas
mov
repz
sbb
nop
and
push
call
or
xor
push
jbe
fsubl
mov
and
mov
out
or
xor
daa
jns
shll
imul
add
lds
scas
dec
hlt
pop
js
mov
jp
and
dec
push
test
jnp,pn
aam
dec
mov
scas
sub
stos
inc
dec
shrb
mov
lahf
add
lds
rcrb
pushf
aad
adc
mov
jo
stos
xchg
adc
sub
add
dec
mov
or
mov
into
and
jmp
jge
insb
jb
dec
mov
push
add
lret
hlt
mov
add
jae
in
xorl
aaa
test
or
lods
inc
jp
pop
mov
push
xor
enter
out
push
mov
xchg
fildll
pop
xlat
inc
xlat
mov
pop
add
jno
mov
imul
movsl
in
bound
jle
inc
mov
hlt
pop
push
and
adc
out
xchg
push
std
cltd
fimull
popf
movsb
or
cmp
pop
fnstcw
stos
jnp
arpl
nop
jmp
xor
repnz
mov
dec
or
mov
call
push
rep
jmp
mov
lds
aad
xchg
pop
rcll
pop
repz
sbb
adc
inc
or
xor
into
jae
test
popa
push
add
rcr
jae
sub
rcrb
popa
pop
push
stos
jns
rolb
mov
xor
xor
push
sub
jbe
shlb
imul
cmpsl
add
pop
mov
push
jl
mov
sub
roll
repz
dec
leave
call
push
lods
mov
pop
incl
fwait
test
or
scas
jl
fdivrl
test
arpl
xor
xchg
mov
mov
imul
cmpsb
pushf
mov
xor
inc
and
push
fcmovu
inc
in
std
or
jns
enter
push
ret
fisttps
and
enter
jle
inc
mov
insl
add
xchg
xchg
aam
in
cmc
addb
sahf
ds
xchg
or
sbb
adc
sbb
and
das
sub
push
sub
jae
std
aam
push
adc
cmp
call
push
out
jns
xchg
stos
lahf
cltd
aaa
rorl
out
aas
cmp
popf
push
leave
into
lret
cmp
loop
push
outsb
or
sub
ret
xor
sahf
adc
sbbb
fnstsw
test
movsb
ja
jg
jns
sub
ljmp
sub
xchg
add
xchg
test
popf
or
cwtl
jecxz
cwtl
loope
jnp
mov
inc
fisttps
push
ja
mov
add
inc
clc
or
int
pop
dec
mov
dec
rcr
jbe
push
adc
dec
xor
lods
jne
ja
jl
xlat
test
add
cli
ficoms
jmp
inc
mov
shlb
pop
cmp
dec
mov
outsb
int
push
movaps
mov
or
ret
mov
cmc
dec
push
xchg
out
sbb
js
cmpsl
incb
lret
mov
addr16
lret
sbb
cli
sub
stos
daa
jecxz
ret
fcomps
ret
ret
lcall
sbb
and
stos
xor
std
adc
mov
stos
pop
jbe
mov
adc
popf
jbe
dec
dec
cmp
jl
call
cli
xchg
jnp
subl
shlb
pop
repz
cmpsb
fidivrs
sbbl
insl
add
or
subb
push
inc
mov
pop
lcall
loopne
int3
jl
fdivr
xchg
xchg
fnsave
pop
dec
jp
lods
adc
jle
mov
xchg
jns
jbe
add
sbb
enter
jo
push
lret
jp
in
jecxz
pop
jbe
mov
loopne
aas
aad
mov
daa
out
push
ljmp
pushf
xor
push
mov
loopne
mov
fisttps
popf
sub
iret
outsl
adcl
lahf
mov
dec
mov
pop
inc
repnz
into
rcrb
cli
cltd
int
mov
xchg
add
stos
gs
sbb
lret
mov
sahf
ficoms
mov
jnp
shll
stos
inc
jmp
push
pop
sbb
adcl
xchg
sub
jle
mov
clc
dec
add
xor
mov
push
loope
mov
lret
adc
push
mov
lahf
xchg
mov
das
out
clc
pop
fisttpl
sbb
cmp
xor
aaa
cmpsl
xor
dec
add
mov
imul
popf
test
dec
mov
sbb
mov
cld
jecxz
ret
icebp
mov
mov
jb
ret
or
mov
ret
pushf
rorb
aad
ja
in
paddusw
outsb
xor
jbe
xlat
mov
out
sub
lcall
inc
xchg
mov
and
sbb
cmp
lcall
inc
lret
sti
mov
out
sarb
fldcw
cmc
mov
mov
push
out
cmp
ds
lret
pop
pusha
mov
cmp
jno
daa
data16
sub
xchg
mov
push
sbb
sbb
dec
pop
lods
repz
cwtl
test
adc
addl
lds
fidivrs
mov
into
and
jle
sahf
dec
cmp
out
mov
out
push
mov
stc
repnz
decl
sbb
fsubrs
pop
push
popa
push
sahf
testb
pop
adc
adc
add
push
xchg
test
add
vorps
pop
dec
ljmp
lods
fisttps
add
cmpsb
lock
or
pop
adc
cmp
inc
loope
std
bound
test
sqrtps
cld
mov
mov
xchg
bound
cmp
loope
xor
push
xlat
cmp
mov
out
jno
lahf
mov
jle
rol
mov
and
sti
jge
ss
mov
sti
aad
fsubrs
xor
imull
dec
adc
stos
add
cmp
sahf
cwtl
shl
repz
mov
lods
adc
in
dec
repz
sbb
test
xchg
xor
xor
sbb
xchg
cmp
dec
fldcw
inc
cmc
stc
mov
sti
adc
sbbl
add
mov
mov
sbb
mov
mov
mov
jle
inc
xor
pop
mov
into
int
or
daa
adc
adc
adc
fldt
add
cmc
mov
loope
sbb
add
mov
fnstcw
jns
aaa
jmp
imul
xor
sub
sahf
pop
mov
add
scas
or
inc
fidivl
pop
or
mov
pop
outsb
push
mov
jbe
sbbl
in
cmc
dec
dec
and
addr16
mov
jns
out
dec
dec
pop
dec
adc
insl
nop
out
loope
mov
fs
sub
cwtl
popl
scas
mov
sub
in
sub
cmc
or
mov
out
js
mov
movsl
mov
repnz
lret
push
push
in
inc
test
dec
lret
jne
nop
xor
ljmp
gs
or
outsb
inc
dec
ret
mov
dec
and
fistl
cmc
hlt
cmp
sbb
push
push
ja
and
sti
aaa
popa
xor
stc
xchg
mov
cmp
mov
add
jmp
lcall
mov
subb
les
xor
cmpsb
popf
sub
rclb
ss
and
shlb
dec
push
fsubrl
mov
clc
mov
lret
pop
cmpsb
xchg
inc
in
cltd
jge
inc
dec
xchg
adc
lret
repnz
jle
sbb
cwtl
mov
jmp
shr
rclb
dec
dec
insb
icebp
lock
imul
cmp
dec
cld
inc
cmpsl
pop
mov
inc
fldl
sti
push
mov
fucom
sub
lret
and
adc
stc
xchg
arpl
xor
xchg
jl
mov
fsubrl
jecxz
jnp
cwtl
inc
insl
jge
out
enter
aam
jmp
jne
fwait
mov
inc
mov
or
jmp
data16
sbb
mov
loop
lods
inc
pusha
pop
rorl
out
cwtl
stos
das
cmp
adc
loope
fistpl
push
jbe
inc
aam
dec
dec
aaa
push
dec
jo
push
pop
ds
cltd
push
pop
out
scas
rcr
popl
jns
mov
dec
sbb
jge
loope
push
mov
cli
es
repz
stos
mov
mov
data16
insl
mov
ja
lret
xlat
or
std
lods
subl
data16
bound
in
into
xchg
leave
pop
sbb
das
or
cs
mov
xor
mov
out
mov
push
mov
imul
sbb
gs
mov
addr16
jo
mov
jp
xor
movsb
nop
pop
movsb
cmp
insl
aaa
push
insl
dec
inc
ljmp
jno
hlt
pushf
shrl
sbb
scas
sub
addr16
push
lcall
jecxz
mulb
jle
rclb
adc
dec
scas
sarl
fnstsw
lock
jle
out
scas
dec
ja
jnp
xorb
mov
int3
pusha
xchg
jle
push
mov
adc
inc
dec
xchg
sti
sar
aaa
int
xchg
sbb
jge
mov
and
fisubrs
push
mov
decl
and
stc
push
and
xlat
ret
cltd
test
dec
ret
and
mov
adc
pop
frstor
shl
inc
daa
xchg
stos
adc
push
iret
imul
insl
cmp
sbb
daa
mov
adc
addr16
test
ret
adc
lods
lret
loop
cltd
in
stos
call
add
daa
bound
imul
ret
mov
mov
fmulp
mov
lds
lahf
jno
mov
lret
clc
nop
int3
les
les
insl
add
adc
mov
fsts
rcll
lods
es
stos
imul
xchg
mov
cmp
fistl
aad
pop
scas
inc
sbb
arpl
jg
or
testl
iret
test
mov
and
dec
and
sti
out
cmp
stc
popf
inc
in
push
shrl
stos
pop
xchg
mov
pushf
mov
inc
xor
cmp
inc
pop
mov
pop
and
and
shl
pop
mov
xchg
dec
out
mov
enter
outsl
push
dec
aaa
push
shl
insb
dec
test
push
notl
cmp
fsubrp
fwait
bound
and
lea
inc
popf
xor
sub
or
sbb
push
sub
fdivr
jp
inc
cmc
add
add
push
stc
rclb
ret
mov
dec
out
movsl
or
push
test
nop
inc
lods
sarl
push
or
cmp
lret
repnz
jb
mov
cmp
lret
or
and
adc
xchg
inc
xchg
enterw
loopne
aad
popa
addr16
jg
mov
shr
mov
fists
xchg
pop
repz
mov
adc
ficoml
scas
inc
push
aas
stos
adc
das
divb
data16
ds
bound
bound
int3
leave
int
xchg
in
inc
loopne
adc
jg
pop
test
in
push
lock
fiaddl
mov
cmp
pushf
loope
mov
ret
cmp
test
fs
push
pop
popf
rcl
dec
xlat
int3
mov
jg
mov
imul
mov
popa
xchg
scas
aad
pop
xchg
dec
add
outsb
outsb
xchg
and
pop
mov
into
in
ljmp
lods
fimull
scas
pop
or
jp
inc
insl
xor
ss
add
pop
push
shrl
cwtl
icebp
dec
or
jb
decl
cmp
fcompl
lds
adc
lea
xor
sub
aaa
aaa
insb
pop
movsb
fisttps
repz
add
daa
filds
call
jbe
sahf
xor
pushf
mov
lahf
sub
adc
nop
fists
icebp
aad
add
lods
xor
push
and
js
cmpsb
mov
push
ficomps
jo
test
sarl
mov
jle
mulb
ret
nop
or
int3
push
inc
pop
mov
and
lret
mov
call
imul
ficomps
loopne
js
pop
mov
cmc
fstl
jae
lahf
sti
push
testb
or
call
push
insb
sbb
sti
lods
xchg
mov
fisttpll
jmp
test
fwait
mov
dec
pop
scas
divb
and
xor
cs
in
adc
or
xlat
mov
aaa
sbb
xchg
pop
rorb
cli
fwait
fs
scas
dec
mov
xchg
mov
cmp
mov
pop
pop
add
hlt
mov
sub
cmpsl
pop
push
fisubl
cmp
iret
outsb
pop
inc
sbb
cmp
rorw
insb
lock
test
test
cmp
pop
inc
nop
jns
leave
ret
xor
clc
lods
push
std
ja
subb
in
cmovnp
clc
jnp
mov
mov
in
cli
gs
out
mov
and
test
jno
fcmovnbe
aaa
into
pop
std
jl
pop
sub
test
sbb
mov
pop
push
jge
fisubrl
or
inc
jp
sbb
cmp
out
dec
rorl
sub
std
push
add
lds
sub
sbb
push
leave
cmp
push
pop
loop
stos
arpl
xchg
movsl
lret
test
adc
movsl
jl
cmp
inc
sub
and
xor
jnp
sbb
dec
pop
ds
jle
rclb
mov
add
test
pop
or
testl
sub
and
into
mov
inc
inc
out
lret
rcl
les
loope
aaa
mov
xsha1
cmpsb
or
adc
inc
fsts
sti
cmpb
adc
sub
dec
rcll
jl
fisubs
mov
xor
stos
mov
inc
insl
inc
repnz
hlt
push
out
jle
addr16
notl
or
out
cli
outsb
xchg
ret
sbb
push
mov
popa
and
mov
xchg
mov
dec
pop
sarb
mov
mov
les
pop
lods
add
and
adc
mov
in
cmp
jb
mov
lock
imul
jg
into
xchg
sub
cli
cmp
ljmp
pop
jmp
mov
inc
ja
inc
flds
int3
push
push
cltd
shll
pop
enter
scas
pop
movsb
das
pop
jb
int3
lcall
ss
pushf
mov
xchg
clc
or
adc
shrb
inc
enter
pop
imul
popa
cli
cmpsb
lret
xchg
sub
adc
push
add
in
fdivl
bound
iretw
cmpsl
sbb
add
rolb
xchg
gs
loop
jmp
test
sub
lret
xor
push
sbb
adcl
repz
test
fadds
cmpsb
adc
xor
add
inc
sub
push
mov
stc
enter
aas
push
je
push
orb
arpl
pusha
pop
pcmpeqd
jae
inc
out
jae
adc
or
or
mov
in
jbe
das
pop
dec
xor
push
lea
push
lods
mov
repz
movsb
or
dec
pop
push
mov
mov
das
ret
lcall
jne
shld
pop
sbb
dec
cmpsl
ja
and
das
adc
push
dec
imul
xor
mov
fxch
push
lcall
cwtl
sub
in
cmp
mov
lea
add
push
adc
repz
add
out
pop
mov
and
mov
lret
add
fs
sarb
lods
notb
fildll
jnp
xchg
adc
mov
lea
jo
push
repnz
mov
jp
icebp
aas
ret
or
push
jg
xor
pop
fstpt
repz
int
inc
mov
sub
popf
mov
push
aaa
into
fnstsw
pop
les
cmpsl
dec
sbb
aam
inc
in
ret
insb
mov
sbb
and
pop
mov
pop
subb
aam
out
inc
or
jb
push
insl
jg
mov
xor
sbb
loope
aaa
jne
outsl
cmp
iret
daa
js
in
adc
ret
fidivl
dec
pop
inc
fmul
sbb
ret
lret
sbb
lahf
mov
adc
stc
out
test
sbb
popa
or
xchg
push
loop
fnstcw
leave
dec
leave
pop
inc
push
cmc
mov
imul
shl
sti
mov
xor
out
shll
inc
cmpsl
into
lea
rolb
xor
mov
push
push
mov
insb
sub
mov
jno
fwait
pusha
or
out
dec
push
int
popl
gs
push
sub
or
mov
bound
jmp
and
std
sldt
pusha
xor
iret
dec
movsl
testb
adc
push
xlat
xor
adc
stc
push
sub
cwtl
das
adcb
movsb
in
inc
sbb
xor
lock
iret
and
out
cwtl
sbb
lea
ds
stos
nop
cmp
enter
gs
lods
jae
fcomip
enter
xchg
mov
arpl
aas
inc
xlat
test
dec
mov
test
mov
movsl
add
push
sub
mov
sbb
nop
data16
inc
cmc
add
dec
int3
pop
adc
arpl
int3
arpl
push
jo
rorl
cmpb
or
or
int3
arpl
dec
and
mov
test
out
test
pusha
sub
mov
xchg
fyl2x
jg
sub
cmp
andl
aas
ljmp
sub
lret
jp
gs
das
data16
mov
adc
push
jl
fs
jle
lcall
sbb
je
aaa
into
xor
adc
arpl
inc
mov
gs
and
js
dec
shlb
or
xchg
mov
mov
jl
inc
dec
and
dec
mov
sti
add
add
int3
xor
in
pop
cmpl
test
jle
dec
into
xchg
sub
addr16
lea
xchg
add
call
mov
push
cltd
xor
enter
daa
lock
push
lods
test
sub
imul
xor
mov
add
xor
test
mov
sbb
and
push
or
inc
mov
rolb
inc
into
jle
cmp
mov
sbb
push
mov
lods
repnz
cmp
mov
mov
pusha
sti
shll
jbe
shrb
popa
xchg
mov
ja
imul
inc
jecxz
push
icebp
iret
subl
popf
pop
mov
sbb
jge
stos
and
jb
mov
daa
mov
sub
push
mov
adc
mov
and
xchg
inc
test
popa
pop
arpl
outsb
fiaddl
mov
out
in
jno
roll
pop
lret
pop
jmp
xchg
imul
or
xchg
xor
pop
stos
sti
lahf
sub
and
cmp
into
les
jne
push
addl
sub
popa
mul
movb
mov
mov
or
arpl
sbb
xchg
mov
or
or
xor
adc
outsl
xor
test
mov
adc
adc
xor
mov
cmp
and
fnstenv
pop
cmpsb
push
imul
bound
ret
xchg
pop
or
into
into
or
ja
xchg
adc
jl
dec
test
mov
loop
xlat
lahf
sub
xor
jnp
mov
in
cwtl
rorl
fmuls
fnsave
add
shlb
and
je
stos
inc
xlat
sbb
lret
adc
lds
mov
lahf
ljmp
imul
cmp
fildl
push
repnz
call
pop
and
in
sti
sbb
pop
pop
dec
repz
in
test
add
clc
lret
mov
mov
mov
xlat
pop
pop
sti
sbb
cmp
rclb
out
pop
xor
cli
xchg
dec
adc
rclb
cmpl
adc
and
iret
in
icebp
outsb
pop
into
sbb
push
mov
ja
xor
dec
cmpl
loop
adc
adc
push
and
dec
mov
rcll
and
add
mov
push
outsb
push
rcll
cltd
cwtd
xor
les
popa
inc
loopne
cmp
fldcw
fnsave
ja
fsubrs
add
jns
in
push
arpl
push
outsb
sub
cmp
aas
movb
ret
jo
xchg
leave
fisttps
lcall
sub
int
push
xlat
mov
loope
push
jmp
xchg
cmpsb
cmp
push
mov
pop
dec
mov
in
ret
ds
sbbl
fisubrs
ret
xor
insb
in
push
dec
cmpl
test
pop
xor
out
js
daa
or
pop
test
sbb
shlb
cmp
mov
out
dec
stos
shrb
insl
jbe
mov
mov
adc
repz
std
dec
adc
dec
bound
sti
fwait
xchg
push
movsl
cmp
aam
jp
pop
ret
std
add
push
repz
mov
jb
lods
ljmp
cpuid
leave
lahf
cmp
clc
push
inc
cmp
test
mov
mov
mov
fimull
jbe
mov
sbb
ficomps
adc
je,pt
inc
stos
dec
sub
shll
cmpsb
mov
xchg
dec
test
xchg
xchg
push
cmp
dec
xchg
mov
sbb
rorl
jge
jne
cs
push
scas
and
dec
xor
mov
aaa
leavew
push
movsl
inc
fcmovnbe
xor
sub
fld
movsb
arpl
inc
adc
push
stos
fs
je
inc
stos
in
dec
xor
fbld
xor
inc
mov
push
hlt
mov
xor
in
inc
dec
mov
and
mov
jle
mov
rol
dec
add
fildll
cmpsl
out
mov
out
xchg
inc
pop
mov
xchg
orb
push
and
lods
jnp
popf
jmp
xchg
cmp
sbb
mov
cli
addr16
jmp
mov
or
pushf
sbb
add
mov
jnp
or
in
xor
stc
add
sub
daa
aaa
jne
shrl
or
mov
int
mov
xlat
xchg
cmc
ficoms
mov
rorl
pop
adc
mov
call
dec
push
jmp
scas
pop
leave
adc
sbbl
add
lahf
mov
es
movsl
push
sbb
test
or
cmpsl
ret
pop
sub
stos
cmp
inc
scas
pop
ret
cltd
xchg
jecxz
fprem
ss
mov
sbb
mov
rcrb
add
push
mov
xor
shlb
xchg
sar
lret
add
out
inc
fldenv
addl
loop
in
jge
jnp
jl
bound
scas
push
lcall
lea
xor
mov
pop
jns
mov
jae
test
jp
mov
lret
jge
push
je
call
cmpb
in
sub
inc
push
add
jmp
inc
pusha
insb
out
sbb
pop
add
dec
inc
mov
fwait
fucom
outsl
loop
inc
mov
push
rolb
decb
insl
sub
test
gs
daa
mov
pop
mov
mov
dec
push
mov
mov
jnp
lods
ds
sbb
sub
popf
scas
add
aad
add
or
cwtl
ljmp
dec
inc
out
imul
test
in
cmp
inc
enter
inc
cmpsl
das
enter
jp
or
fdivrl
cltd
fnstsw
mov
ret
mov
pop
test
mov
insb
inc
mov
int3
sub
jge
xor
dec
outsl
sarl
jbe
addr16
xchg
inc
bound
incl
fwait
xchg
jecxz
aaa
push
xchg
iret
fistl
mov
add
or
fstps
lea
or
pop
xor
mov
or
daa
push
leave
sub
popa
mov
push
insl
lods
call
mov
inc
pop
sahf
jae
das
xor
and
push
xor
scas
mov
seto
jnp
ret
testl
xchg
mov
jno
mov
add
ja
inc
daa
xchg
and
inc
dec
ret
pop
pop
sahf
clc
rol
adc
ss
call
rcrb
lock
call
hlt
pop
xor
xchg
lret
int
fwait
add
inc
sub
add
mov
pop
out
add
jge
icebp
out
push
popf
and
push
inc
mov
push
mov
mov
xor
or
repnz
sbb
push
jb
mov
hlt
and
sbb
adc
mov
adc
icebp
fsts
xchg
dec
stos
in
and
add
dec
sbb
xchg
xor
push
fstpt
das
testb
rcl
fmul
or
sub
shll
mov
jo
out
push
pop
or
xor
add
movsl
push
ljmp
cs
inc
fidivrl
jl
add
frstor
or
in
aas
lahf
js
inc
xlat
insb
add
addr16
pop
das
outsl
into
inc
pop
pop
fstpl
mov
cs
in
sbb
test
dec
dec
pop
fstpl
in
int
add
in
into
ja
lds
lret
push
xchg
cmp
adcb
and
push
jno
push
pop
in
xor
sbb
gs
out
mov
test
into
fimuls
pop
xlat
mov
push
stc
insb
dec
xor
inc
adcb
mov
les
adcb
cmp
xor
mov
xor
sub
not
pushf
das
mov
inc
fsts
xor
sub
dec
les
mov
daa
pop
adc
xchg
scas
testl
dec
cli
movsb
cmpsl
xlat
shl
imul
lds
popa
ficoml
push
cmp
or
outsb
nop
xchg
cmp
sbb
add
shrb
sahf
orb
fisttpl
add
adc
and
sahf
mov
push
xor
or
fisttpll
push
push
xlat
outsb
pop
scas
sub
push
sub
cld
and
outsl
jns
jb
xchg
out
pop
xor
mov
jge
jmp
add
hlt
and
push
or
mov
inc
loop
cmp
and
sbb
push
fimull
ficomps
fildll
fiaddl
mov
push
call
imulb
vmwrite
inc
stc
xchg
mov
sub
push
mov
movsb
xchg
out
cli
mov
cmp
inc
sub
stos
jecxz
jg
mov
loop
inc
push
mov
es
xchg
fcomi
dec
push
push
jl
dec
out
sbb
push
movsl
icebp
lret
cmp
jns
insl
in
or
pop
cmp
or
pop
lock
mov
jmp
lcall
xor
lds
push
jle
push
mov
lahf
cmp
dec
pop
in
jg
scas
or
fnstcw
insl
push
dec
test
ja
dec
inc
jno
scas
pop
inc
sub
dec
push
sarb
dec
mov
mov
fidivl
fs
jp
js
cmp
jg
mov
call
jne
test
xchg
add
mov
movsl
adcl
in
jle
push
pop
je
lret
sub
pop
in
imul
pop
lahf
cwtl
stos
xchg
hlt
mov
ret
in
bound
shll
sahf
fcomip
xchg
jnp
push
xor
iret
jnp
or
jge
dec
lcall
fsubs
jne
adc
cmp
ffree
pop
out
sub
inc
dec
pop
jne
dec
fists
cmp
out
sbb
aas
movsl
jle
fnsave
pop
test
xchg
cmpsb
cltd
mov
mov
cmpsb
xor
out
insl
xchg
mov
mov
adc
mov
pop
jb
cltd
lret
inc
xchg
adc
sub
sub
in
adc
or
mov
mov
pop
das
unpckhps
aas
lea
mov
or
or
fwait
sub
pop
std
xchg
stos
or
pop
mov
data16
stos
xchg
sbb
repnz
xor
mov
push
out
addr16
mov
ljmp
xor
andb
or
or
fcompl
sub
sbb
mov
pop
adc
cmp
jbe
sub
loope
xchg
mov
jns
imul
xchg
pop
jmp
sbb
jo
cmp
push
add
mov
jb
je
mov
rcl
mov
rcrb
or
mov
jl
bound
in
cmpsb
out
xchg
pop
and
jae
xor
mov
or
mov
xchg
adc
pop
xor
mov
sbb
xchg
push
rcrl
add
cmp
in
and
mov
jmp
outsl
jge
sti
and
aam
rcrl
loopne
stos
aad
sbb
fldcw
outsb
cld
loopne
and
divl
loopne
or
fnstenv
adc
shl
insb
or
jl
pop
and
fwait
or
in
sti
xchg
imul
and
and
es
outsl
sub
insb
aam
xchg
call
outsb
add
dec
dec
pop
sbb
jbe
ds
test
inc
or
xor
add
mov
or
cmpsb
inc
ja
repnz
push
jbe
add
push
or
out
out
inc
dec
xor
inc
mov
lds
imul
and
int3
fsubrp
aaa
dec
rcl
sbb
or
divb
push
mov
mov
mov
mov
push
xchg
mov
popl
pop
cmpsb
sub
cld
shl
cli
out
shr
sbb
add
pop
jns
mov
ja
in
jmp
add
mov
fs
inc
xchg
imul
jne
aam
ds
or
shlb
movsl
pop
mov
pop
out
mulb
xchg
lods
data16
mov
insl
sub
test
pop
std
jnp
push
imul
dec
or
jo
andb
dec
sub
out
lds
mov
pop
xrelease
dec
in
and
lret
lahf
ds
mulb
jb
jae
inc
addb
dec
hlt
mov
rorl
leave
mov
gs
rorl
arpl
pop
in
sahf
lret
xor
popfw
mov
add
mov
or
add
mov
shll
push
in
gs
jp
sarb
sub
repz
imul
negb
pop
pusha
inc
push
int
repz
int3
adc
or
inc
push
dec
push
mov
push
mov
xchg
js
rcr
cltd
sbb
fcmovnbe
addr16
inc
out
push
xchg
movsl
cmp
out
mov
push
mov
fmuls
xchg
mov
xor
sbb
out
inc
or
movsl
mov
ja
jnp
xchg
das
push
add
xchg
lods
andl
fisubrs
outsb
or
cmpsb
sbb
adc
jae
stc
jl
cmp
imull
fldenv
sbb
fdivrl
push
xchg
push
int
mov
in
lock
mov
or
adc
lret
inc
mov
push
clc
lds
mov
aad
add
xor
push
mov
jno
out
mov
lods
cmp
jg
rcrl
mov
std
mov
xor
adc
stos
aaa
push
sbb
pop
adcl
and
pop
stos
jns
repnz
stos
jae
inc
mov
sbb
scas
sti
jbe
push
or
push
sbb
dec
jne
inc
cmpsl
imul
out
cmpsb
jb
or
inc
clc
cmpsl
cwtl
mov
repnz
xchg
sbb
add
dec
pop
and
insb
or
pop
jp
xor
ja
test
mov
inc
pushf
test
aas
xor
lea
xchg
clc
fists
test
dec
addb
orb
mov
stos
shlb
sti
jne
test
jl
rcrb
xor
test
orl
mov
test
inc
mov
adc
shrl
aas
mov
ret
mov
sbb
adc
pop
pop
adc
inc
pop
cli
shrb
sbbl
ljmp
jp
fisubrs
push
jmp
andl
ret
into
adc
out
mov
and
daa
movsb
sti
shll
jnp
lods
xchg
xchg
xchg
jbe
lret
es
lea
shll
into
int3
fisttps
xor
out
mov
mov
jo
or
insb
sub
mov
jle
stos
push
inc
jne
icebp
nop
adc
aam
and
mov
push
out
int
add
or
xchg
in
xchg
cmp
xchg
jns
mov
call
scas
jae
cmp
or
iret
push
mov
push
jo
mov
enter
cwtl
mov
movb
adc
leave
inc
push
mov
jge
jno
mov
cltd
xchg
aad
ret
xchg
pop
pushf
or
sbb
lods
add
ja
adc
inc
or
add
cmp
pop
dec
outsl
shrl
lahf
ja
push
mov
xchg
mov
ss
sarb
sahf
jno
xor
lret
fsubrl
outsb
adc
pop
addr16
adc
mov
jno
pop
mov
inc
ror
sbb
jge
enter
push
fwait
daa
cmpsb
js
dec
and
cmp
xchg
cmp
lods
stos
fsub
xchg
pop
push
sub
ljmp
clc
ss
fs
push
pop
adc
xor
lea
push
xchg
outsl
push
mov
cmc
jnp
clc
mov
bound
mov
cld
nop
add
pusha
popa
sbb
inc
fwait
xor
or
mov
sbbl
mov
push
int
mov
in
mov
ret
and
es
test
xchg
inc
mov
orb
inc
addr16
repnz
or
inc
sub
adc
cmc
cld
push
and
mov
cmp
mov
add
lret
call
mov
pushf
mov
adc
shr
or
mov
sbbl
cmp
lock
and
or
stos
push
pop
pop
or
and
ret
xchg
orl
xchg
shr
int3
mov
jne
das
jge
mov
pop
dec
xor
fwait
push
fdivrl
xchg
xor
cmp
cmp
test
cmpsb
fwait
call
cli
imul
daa
pop
pop
pop
adc
jge
sbb
rcll
xor
mov
jle
out
sbbl
test
es
mov
mov
cwtl
out
popa
push
sbb
and
dec
sub
adc
jecxz
fucomp
xchg
pop
loop
nop
repnz
push
call
mov
jl
jg
or
push
icebp
inc
sub
int3
jno
int3
mov
sbb
dec
test
in
loop
sbb
stos
xlat
mov
subb
mov
aad
and
jge
icebp
enter
push
xchg
dec
pop
dec
mov
jne
sub
mov
mov
shrb
dec
out
xchg
jno
adc
mov
mov
into
xlat
adc
dec
inc
or
sub
xor
mov
pushf
outsl
daa
xchg
mov
pop
or
mov
fistps
cmp
fldenvs
into
andb
cld
insl
fmuls
ljmp
sbb
out
add
std
jo
lahf
mov
dec
xchg
adc
push
push
out
int3
sub
sbb
stos
or
sarl
movsb
push
dec
mov
mov
pop
insl
add
popa
sub
jbe
push
aad
sub
fists
pop
repnz
mov
andl
push
enter
pop
pop
mov
mov
xchg
mov
xor
mov
aas
and
pop
dec
out
xchg
lea
jmp
mov
mov
sub
adc
xor
stos
ljmp
sbb
rorl
push
daa
cmp
sbb
lea
cwtl
push
scas
jmp
or
mov
or
jne
or
jle
push
and
repnz
push
jp
fucomi
push
call
pop
lods
sahf
je
mov
mov
xchg
movsl
cmc
icebp
pop
aam
add
les
pop
add
mov
xor
cs
mov
sbb
jbe
iret
imul
jl
popa
cld
pushf
sub
and
jmp
adc
js
aas
and
lcall
push
test
mov
mov
cld
push
dec
outsl
pusha
jl
loope
leave
test
subl
sub
jl
sbb
push
jns
sbb
imul
push
pop
cmpsl
les
sub
bound
std
push
mov
inc
cmp
xchg
dec
fs
ja
leave
lods
xor
in
das
test
adc
or
ret
pop
jmp
inc
adc
lock
xlat
mov
popa
scas
sbb
fsubr
stos
xor
mov
cmpl
scas
inc
sub
std
scas
push
push
add
xor
fucomp
cmc
test
mov
inc
fs
notl
movsb
fdivs
icebp
add
sahf
pop
mull
sbb
mov
test
jo
and
sub
push
sbbb
xchg
or
dec
popa
and
cwtl
push
adc
ss
bound
aad
cmp
jge
mov
pop
insl
jg
and
push
lods
dec
mov
mov
pop
cmp
xchg
sub
push
fidivrl
cmp
xlat
cmpsb
mov
sub
lret
sbb
xlat
xchg
mov
jbe
aas
stos
outsl
loop
aad
xchg
pop
jnp
rclb
or
stos
sub
mov
das
lds
mov
jno
mov
add
insl
popf
cld
lds
xor
mov
jecxz
xchg
stc
test
fidivrs
pop
push
mov
in
lahf
jbe
mov
mov
mov
fdivs
mov
rclb
fldl
mov
mov
and
cwtl
adc
sarb
mov
xor
mulb
hlt
xchg
mov
adc
and
dec
std
fidivrs
add
fisttps
push
lods
add
aad
mov
inc
or
push
jno
mov
jbe
outsb
mov
lcall
call
mov
ss
xchg
push
sbb
les
xor
add
out
ret
jnp
mov
test
inc
pop
sub
mov
cmpsb
rolb
movsl
sub
sbb
mul
mov
jge
adc
cld
in
std
out
sbb
jae
cltd
movsb
pop
gs
jl
push
decb
jnp
les
fwait
and
xor
adc
popf
sub
and
addr16
mov
mov
mov
mov
data16
or
xchg
push
fldenv
jmp
dec
cmc
jmp
scas
jo
jne
adc
leave
clc
cld
data16
loopne
mov
ret
pop
cmp
and
dec
pop
clc
aad
lock
pop
lret
inc
adc
xchg
and
mov
add
imul
jb
insl
fs
jnp
shll
mov
fistl
or
dec
movsl
sub
push
jp
sub
popf
jp
dec
adc
daa
movsb
inc
and
pop
insb
jbe
xor
adc
jge
xor
orl
pop
andl
mov
sbb
push
dec
sub
movsl
jnp
lods
jo
mov
push
loop
mov
popa
push
inc
mov
dec
in
stc
je
stos
data16
xchg
or
xchg
xor
xor
inc
jb
adc
and
xchg
mov
call
pop
xor
mov
sbb
shrb
add
mov
dec
jae
idivb
xor
adc
xchg
dec
repnz
pop
jbe
jecxz
jmp
inc
adc
jle
sub
data16
rcrb
je
stos
bound
sbb
iret
fcomi
cmp
pop
hlt
push
mov
sbb
std
sahf
cmp
mov
or
mov
ss
inc
in
xor
add
cltd
imul
adc
mov
out
pop
mov
inc
outsb
jns
in
data16
adc
dec
in
out
bound
inc
imul
mov
cmp
popa
popa
cmp
outsl
jnp
sti
mov
jge
or
cltd
stc
out
xchg
test
dec
movsl
hlt
stc
push
jmp
pop
scas
adcb
jnp
adc
xchg
fistl
push
cmpsl
rclb
mov
cli
inc
adc
add
stos
and
jecxz
and
jg
loope
push
pop
clc
push
push
jmp
sbb
jo
mov
popa
insl
sub
sbb
jne
lods
insl
xchg
xchg
scas
lret
pop
mov
and
push
fadds
add
fwait
jb
jne
outsl
cmpl
and
test
jb
subb
sub
leave
scas
les
out
jmp
jmp
es
adc
inc
mov
test
dec
test
pop
ljmp
mov
scas
dec
adc
lea
xchg
inc
aad
sahf
mov
fisubl
add
jno
sahf
mov
push
sbb
mov
jecxz
mov
pop
shlb
fnstcw
pop
mov
lret
mov
and
sbb
jl
jle
es
cmp
out
cli
adc
push
in
cmp
outsl
push
and
jb
or
mov
dec
fs
sub
add
pop
in
push
sub
scas
xchg
mov
imul
loopne
mov
xchg
repz
std
pusha
call
xchg
outsb
lea
pushf
iret
xchg
stos
icebp
mov
pop
in
shlb
jmp
imul
arpl
stc
aam
jo
jecxz
call
dec
dec
outsl
pop
in
adc
imul
push
testb
scas
ds
xchg
inc
push
pop
lcall
popa
mov
les
int3
stos
subb
push
and
push
mov
push
lods
jmp
xor
scas
scas
cwtl
and
pop
rorb
mov
jbe
add
pop
inc
ret
in
sbb
gs
sbb
push
addr16
inc
add
cmp
mov
add
push
loope
imul
mov
mov
fildll
inc
jecxz
daa
lock
jno
ret
jg
mov
jecxz
push
mov
pusha
stos
mov
and
rcrl
xchg
popf
sub
push
xor
ljmp
jge
mov
test
inc
push
ss
fucomi
lea
lods
stos
and
cmp
cld
mov
ss
sarb
mov
rcrb
aad
fwait
loopne
xchg
es
orl
fucomp
xchg
dec
dec
out
fsubr
push
adc
push
cwtl
fiaddl
mov
fisubrs
xchg
icebp
inc
push
rep
hlt
mov
rolb
xchg
test
push
out
jmp
imul
mov
lock
pushf
mov
out
cmc
mov
fucomp
add
cli
test
inc
inc
repz
scas
imul
in
jmp
dec
xor
pop
mov
insb
and
jbe
daa
mov
movsl
mov
and
xor
rorb
inc
in
mov
or
push
ljmp
jno
daa
stos
je
push
stc
jne
sub
lea
add
sbb
cmp
xor
dec
loop
jns
mov
cmp
or
jg
mov
push
inc
sbb
push
xor
out
mov
sbb
adc
filds
in
xorl
and
or
push
push
test
in
dec
inc
xchg
frstor
movsl
int
into
sbb
je
cwtl
jle
mov
aam
filds
mov
pop
out
xchg
jns
cmp
mov
sar
ds
insb
fiadds
ret
push
insl
pop
pop
or
mov
add
jge
or
jge
or
lcall
mov
sbbl
inc
push
test
xor
lock
test
lock
jmp
movsl
mov
mov
jnp
nop
mov
xchg
mov
testb
aam
icebp
pop
dec
dec
xor
hlt
cltd
sbb
mov
fidivrs
ljmp
insb
jno
cwtl
or
fbld
aas
std
sti
push
cwtl
cltd
pusha
mov
es
or
lret
loopne
pop
cmovb
or
cmp
mov
aaa
mov
adc
jp
add
into
insl
icebp
inc
sbb
add
dec
add
fdivrl
shll
addb
addr16
stos
add
mov
sbbl
fisubs
outsl
das
sbb
nop
jg
rolb
orb
in
pop
jns
push
pop
mov
sarl
ficoms
mov
test
jbe
cmp
cmc
mov
stos
xchg
add
inc
testl
push
xchg
lods
mov
daa
outsl
xor
out
nop
adc
fimuls
add
pusha
pop
sbb
add
add
movsb
push
sbb
loop
mov
loope
jbe
fdivs
mov
adc
mov
addb
add
rorb
sbb
dec
fs
cmp
imulb
enter
mov
xor
lret
fildl
add
sbb
decl
lcall
dec
fldt
aad
add
daa
dec
pop
fidivs
push
xor
out
repz
into
cli
adc
mov
sbb
aaa
pop
lods
frndint
pop
fcoms
sahf
add
sbb
orl
adc
ret
sbb
jg
idivb
lea
test
mov
push
aas
mov
imul
push
adc
test
sub
das
sub
push
popf
inc
pusha
iret
aaa
insl
add
ret
mov
aaa
and
into
cld
xchg
fimuls
xchg
sbb
repnz
insl
roll
push
mov
orl
out
int3
daa
jns
inc
or
sub
pop
lock
and
ret
std
sar
xor
pop
aaa
lea
lret
shrl
dec
push
inc
loope
out
jb
movsl
aam
sub
out
lds
pop
repz
jp
repnz
push
jl
incl
loope
jnp
xor
pmuludq
test
push
lret
ret
xchg
lahf
daa
leave
in
pop
pop
cmpsb
sbb
pop
xchg
sub
pop
into
inc
loopne
xor
mov
push
mov
push
loopne
lods
ret
pop
add
aas
mov
cmp
sub
cmpsb
cmpsl
and
rol
lock
imul
sub
pop
inc
xor
xorb
xor
or
insb
stc
sbb
push
cli
sub
xor
popf
sub
repnz
mov
mov
idivl
jl
pop
pop
pop
into
rol
repnz
mov
mov
outsb
pop
dec
loope
stc
dec
int3
cmpsl
sbb
pop
xchg
cmpsl
add
mov
dec
or
mov
mov
push
roll
es
add
xchg
inc
stos
sbb
mov
dec
lods
pop
cmp
adc
test
pop
int
and
mov
add
int3
add
mov
mov
xlat
sbb
ds
cltd
dec
in
enter
mov
push
add
cmpl
xor
mov
mov
lret
icebp
dec
xor
mov
dec
rcr
aad
jno
lret
sti
lahf
jge
or
xor
push
mov
bound
jecxz
cltd
in
lret
mov
inc
popa
add
xor
lcall
loope
push
sub
mov
divb
or
adc
and
js
xor
push
push
in
test
xor
fistl
adc
push
mov
negb
test
xchg
fimuls
mov
cmp
stos
imul
mov
dec
cmpsb
lcall
mov
mov
sbb
out
lret
mov
jl
loop
inc
divl
nop
stos
xor
imul
ret
add
shlb
fcomps
cs
call
into
add
dec
jno
sub
aas
repz
aaa
sbb
inc
in
js
lds
inc
adc
mulb
pop
cmp
jle
adc
popf
xor
pop
mov
adc
ja
mov
push
sub
icebp
and
in
hlt
lods
xchg
aad
outsl
push
sub
movsl
mov
cmc
pop
addr16
decb
push
mov
and
fisttpl
dec
sbb
push
lcall
imul
or
jne
call
in
inc
pop
ds
cmpb
push
dec
shll
dec
in
xor
out
mov
test
lods
dec
pop
or
pop
les
mov
inc
mov
aad
add
popf
stc
push
test
mov
aam
rcl
pop
add
out
mov
pop
cmp
mov
cmpsb
pop
lcall
inc
fsubl
in
gs
shll
in
aaa
mov
enter
vpor
jp
fsubrs
gs
dec
mov
pop
sahf
lock
mov
int
mov
xorl
or
cwtl
mov
dec
inc
cmpsl
faddp
sub
fdivl
in
pop
call
cmp
rep
outsl
fcomps
or
xchg
ljmp
xchg
push
fbld
cmc
dec
adc
dec
hlt
loopne
push
xchg
insl
pop
test
sub
or
mov
add
out
test
or
fidivrs
adc
sub
mov
jmp
cmp
push
js
in
leave
lahf
out
loop
loopne
push
std
or
inc
jne
mov
cmpps
and
jno
jmp
mov
shlb
push
dec
pop
inc
cmp
and
cmpsb
or
pop
in
aad
je
pop
adc
lret
iret
sbb
sarb
imul
push
in
adc
mov
lds
ret
cmc
cmpsl
jg
inc
sub
je
inc
inc
cmp
mov
pushf
add
adc
adc
into
test
sti
xchg
or
sbb
and
mov
pop
and
inc
mov
dec
inc
negl
jmp
out
cmpsb
or
in
outsb
lds
test
dec
leave
cmp
add
shr
mov
pop
mov
ret
inc
clc
insl
sub
filds
dec
loope
mov
xchg
and
dec
xchg
or
jbe
adc
pop
fistpll
jae
enter
mov
loopne
cmp
pop
push
inc
xchg
pop
lds
jns
jo
loop
xchg
mov
push
push
pop
shrb
int3
xlat
and
iret
loop
add
jge
push
pop
lods
mov
rorl
cmpsb
add
cmp
jb
dec
cmp
sub
adc
int3
xor
call
or
mov
inc
test
loope
dec
xchg
mov
xor
push
or
dec
push
repnz
jo
push
das
testb
idiv
popf
daa
outsl
jg
gs
int
xchg
jmp
xor
and
fwait
jb
imul
lcall
dec
aad
pusha
push
inc
stos
std
cltd
xchg
or
subb
xor
lahf
rorl
xor
push
mov
mov
into
xor
cli
inc
ljmp
ret
xchg
sub
push
pop
shll
jg
mov
mov
xor
or
push
push
daa
mov
mov
call
pop
jmp
scas
fdivrl
adc
and
gs
xor
push
les
repnz
jns
aad
add
call
or
dec
xor
icebp
insb
sub
arpl
inc
dec
mov
out
clc
jmp
inc
test
sbb
addr16
fmull
test
sbb
mov
sti
icebp
mov
gs
ljmp
xrelease
and
cs
xchg
loope
mov
scas
lds
stos
pop
push
shr
test
fdivrl
test
insb
or
in
cmp
xor
fdivrp
pop
push
mov
mov
mov
mov
out
fs
pop
xlat
daa
push
lret
add
scas
movsb
xchg
ret
hlt
xor
in
push
fbstp
push
push
jb
in
lea
into
mov
shl
pop
jne
or
data16
push
xlat
xchg
mov
stc
push
mov
mov
iret
adc
xchg
dec
pop
mov
pop
sub
in
sub
or
sbb
movsb
in
dec
in
shlb
inc
mov
or
mov
pop
mov
das
loop
lret
leave
sub
pop
mov
jo
jp
mov
add
pop
insb
lods
shll
and
insl
rol
xor
loop
xchg
dec
xchg
pop
xchg
inc
dec
outsb
mov
push
xor
push
cmp
fidivl
dec
pop
mov
mov
pop
ds
cld
es
mov
push
hlt
test
xchg
sub
icebp
insb
dec
jecxz
sub
jle
imul
xlat
fidivrs
lcall
jmp
in
push
mov
in
jno
inc
ljmp
sarb
test
push
xchg
imul
imul
fnsave
mov
dec
mov
pop
mov
or
jmp
mov
jno
loop
or
mov
mov
ret
add
xchg
js
fwait
sti
popa
cmpsl
pop
aaa
xchg
xlat
cltd
sub
cmp
push
out
cmp
jge
or
mov
pushf
int3
dec
lret
mov
rorb
les
lea
add
stc
cmp
mov
in
pop
fyl2xp1
outsb
bound
repz
add
lods
mov
ficoml
xchg
pop
lock
dec
mov
into
inc
jo
mov
gs
jae
or
cs
arpl
loop
jp
jmp
fs
lods
out
xchg
xchg
lcall
rcll
sub
sbb
mov
mov
gs
and
ja
sbb
xor
xchg
stc
divl
fcoml
push
jae
out
jno
xchg
inc
mov
mov
mov
aaa
fcmovb
gs
xor
inc
into
jo
push
or
mov
repnz
or
mov
cmpsl
sbb
mov
jp
js
test
js
or
dec
or
adcb
xor
pop
add
jae
cmpsl
mov
dec
or
rorl
jnp
or
clc
mov
scas
fucomp
jg
stos
das
push
sbb
lret
jo
std
inc
ja
jne
daa
mov
scas
xlat
inc
fwait
jecxz
and
outsb
pop
dec
mov
pop
mov
lock
push
jmp
je
rcll
dec
mov
mov
lret
xchg
test
in
repnz
push
ret
popa
xor
ss
pop
mov
scas
xlat
jmp
inc
jae
inc
std
push
cwtl
or
and
push
dec
push
lcall
push
jb
adcb
movsl
test
push
mov
leave
bound
push
mov
stc
repnz
fsubp
jle
and
pusha
aad
fsub
jns
aaa
aas
arpl
jo
repz
int3
jle
shll
insl
cmp
sarl
ljmp
mulb
cmc
pusha
in
xchg
push
push
call
enter
jmp
or
cmp
and
addr16
aas
push
pop
adcb
ret
hlt
mov
mov
push
push
xchg
mov
movsl
test
jg
adc
push
test
sahf
in
stos
cltd
pop
mov
ja
fcompl
shrl
cmpsb
ficompl
iret
adc
lds
jp
in
stos
xchg
lods
jmp
test
in
aas
cmpsb
add
hlt
sub
insb
into
sub
negb
mov
fdivrs
repz
dec
sbb
xor
out
mov
push
sbb
icebp
dec
out
fwait
xchg
fbstp
enter
cmp
test
pop
adc
stos
pop
mov
movsl
and
ja
dec
inc
insb
add
add
insl
in
popf
stc
cmc
push
hlt
mov
adc
pop
les
popa
lods
sbb
push
mov
xor
pop
dec
add
jle
mov
cmpsb
mov
and
leave
ljmp
inc
rol
jno
cmp
fildll
mov
pop
cmp
cmp
bound
or
push
jmp
mov
sub
dec
adc
mov
int3
jns
dec
lahf
test
xchg
mov
js
dec
and
les
cltd
add
ficoml
and
gs
push
mov
xchg
and
stos
sbbl
or
hlt
inc
and
aas
jno
xlat
mov
adc
repz
dec
inc
xchg
js
mov
mov
xchg
mov
push
sbb
test
push
sti
mov
xlat
adcb
lcall
insl
mov
mov
rolb
test
adc
cld
pop
fnsave
sbb
aaa
into
pop
imul
fsubr
js
cmp
jecxz
push
iret
jl
pop
in
push
ss
cmp
and
test
aad
jno
dec
rolb
pop
psubusw
add
and
push
aaa
fadds
les
addr16
pop
test
mov
dec
xor
das
add
push
adc
psrad
dec
in
dec
andl
jl
mov
inc
xchg
and
pop
sub
int3
or
mov
dec
add
push
sbb
cmp
adc
lock
test
test
adc
sub
out
mov
pop
out
pop
mov
stc
sbb
push
lods
sub
xor
mov
push
mov
pop
dec
test
mov
pop
mov
add
mov
jp
cmp
in
and
leave
ret
pop
cli
xor
push
fs
fistl
lock
push
mov
jge
sbb
lahf
dec
push
add
jmp
or
and
jb
imul
out
out
leave
add
sti
xchg
inc
push
pop
rorb
cmp
dec
imul
test
pop
add
xchg
mov
sbb
and
push
xchg
ja
out
lods
pop
jns
inc
aad
arpl
mov
xor
imul
sbb
cld
shr
stc
or
inc
push
xor
mov
cmp
or
les
xchg
mov
shll
pop
jl
test
or
push
ss
adc
jnp
pop
lods
adc
pop
push
mov
aam
xchg
add
and
or
xchg
mov
push
outsb
lods
dec
testb
sbb
aaa
insb
pop
or
jnp
test
arpl
outsb
and
out
lcall
jle
rcll
stos
arpl
dec
movsb
test
lds
dec
mov
aam
sub
repz
adc
bound
fs
scas
arpl
stos
inc
xor
sbbb
or
cmpsb
outsl
cmc
dec
stos
pusha
imul
iret
xor
mov
data16
sub
scas
mov
mov
scas
jne
in
out
xor
push
scas
push
mov
xor
jae
out
outsb
xor
dec
lods
mov
xlat
sub
pop
aad
ja
mov
fistpl
pmulhuw
mov
out
fstpt
imul
scas
jne
loope
inc
pushf
xor
movsl
inc
and
xchg
mov
jg
sub
xchg
outsb
lock
mov
dec
cmc
dec
scas
mov
or
hlt
aad
sub
xchg
push
mov
out
inc
xorl
lret
and
pop
jne
test
cmpsl
jl
or
aas
pop
add
xchg
pop
mov
push
mov
cmpb
loop
ljmp
insl
sbb
add
and
push
call
lods
test
fdivl
xor
push
sub
mov
frstor
mov
mov
and
popa
push
cmp
scas
jns
mov
mov
mov
xor
outsl
std
xadd
insl
push
mov
pushf
jge
leave
xchg
jnp
sub
imul
sbb
pop
addr16
jmp
bnd
stc
mov
arpl
sbb
push
stos
jo
or
enter
daa
loopne
dec
movsb
cmp
scas
cmp
sub
xchg
filds
inc
mov
jecxz
mulb
mov
repz
push
jp
cmpsl
fnstsw
movsl
push
stos
mov
sub
pop
inc
jle
adc
sub
pushf
jne
test
aas
aam
cld
push
in
sbb
fdivl
ja
mov
push
push
mov
fdivl
roll
pop
mov
and
mov
jl
or
mov
paddw
bound
ss
mov
mov
push
mov
sbb
xor
shl
sti
lahf
pop
clc
movsb
fwait
push
xor
lds
inc
mov
lahf
or
out
bound
sub
arpl
mov
repnz
mov
cs
int
xchg
dec
aam
dec
xorl
sahf
xor
jmp
into
sarb
mov
jns
test
aam
pop
push
pop
adc
mov
lds
jg
cmp
dec
mov
mov
push
xor
sarl
fidivrs
rolb
sbb
arpl
lret
mov
lcall
adcl
push
rcrl
add
mov
insl
repz
in
test
sub
and
or
pusha
inc
pop
out
inc
fwait
push
aaa
mov
pop
fbld
mov
loop
sub
pop
mov
sub
sub
pop
js
mov
scas
jecxz
adc
pusha
mov
push
cwtl
push
pop
dec
sub
fnsave
xor
mov
adc
jo
mov
pop
mov
lods
inc
cmp
cmp
lods
test
psraw
in
cli
jg
in
mov
repz
jne
sbb
inc
and
jl
inc
scas
jo
and
inc
and
imul
sub
mov
dec
call
or
push
and
adc
sub
xchg
outsl
cwtl
adc
dec
out
push
lahf
mov
mov
aad
loope
xor
ret
xor
push
dec
out
out
sbb
into
dec
push
jmp
jae
adc
jae
cmp
pop
adc
cmpsl
or
jns
jmp
dec
pop
ljmp
inc
shlb
stc
lret
insb
filds
mov
insb
jl
aam
in
push
jg
adc
sbb
aas
test
divl
shlb
fcoms
mov
sbbb
cltd
popa
cmp
int3
inc
adc
in
sti
lods
inc
xchg
fcmovu
cli
test
fsubrs
jmp
mov
mov
mov
xlat
scas
sub
sub
mov
cmpsb
cmc
pop
mov
push
jo
mov
jne
mov
fwait
or
roll
mov
in
subb
cmc
adc
mov
adc
in
pop
mov
loop
cmpsb
mov
cmp
cmp
dec
and
pop
jb
mov
pop
cmpsl
dec
fidivl
mov
fdivrs
and
popf
mov
ret
fnstenv
or
loopne
sbb
bound
mov
les
bound
sti
pop
xchg
in
ljmp
cmpb
push
out
cmpsb
movsb
in
lods
dec
pusha
aad
xchg
insl
fidivl
loopne
sti
nop
cmpsb
in
inc
pop
enter
push
mov
push
jmp
mov
call
xor
insl
push
add
mov
rorb
jmp
loop
push
nop
insl
inc
fcomps
xchg
ljmp
adc
add
pop
mov
mov
mov
pop
jge
mov
xor
js
ja
call
or
pop
fwait
adc
loop
mov
js
mov
lahf
bound
jbe
sub
rorb
sti
popf
xchg
dec
inc
cltd
xchg
pop
popa
imul
out
inc
cltd
nop
or
jecxz
adc
jne
and
cmp
sbb
sub
xor
icebp
pop
inc
fsts
out
add
and
pusha
aas
inc
data16
popa
cmp
enter
mov
fcmovnb
test
sbb
mov
sbb
jno
lahf
sub
inc
lret
gs
cld
dec
ss
js
jge
in
lcall
lahf
and
stos
sbb
stos
inc
xchg
test
cmp
sarb
lahf
dec
lock
adc
int3
mov
cmc
push
andb
inc
xlat
cwtl
in
sbb
pop
mov
ljmp
push
or
or
adc
fists
push
fdivrl
inc
ret
xorb
cld
xchg
popf
push
out
xchg
mov
cmp
add
js
decb
cmpb
out
in
sahf
mov
mov
arpl
imul
test
pop
xor
mov
aad
fnstcw
pop
out
xchg
rclb
insb
dec
pop
movsb
jno
and
lea
outsb
ret
sbb
adc
repnz
lret
add
adc
pop
ror
xchg
sahf
mov
loopne
mov
and
dec
inc
gs
and
ret
out
int
mov
mov
cmc
xchg
fs
inc
xchg
xchg
push
ds
add
dec
xor
cmp
pop
inc
bound
mov
xor
js
fnstenv
or
iret
lds
rclb
lret
pop
hlt
cld
jne
insl
fs
sbb
test
mov
mov
jns
xchg
mov
push
lahf
lea
xchg
jle
fstpt
out
leave
mov
pop
push
les
push
sbb
push
cmp
pop
push
inc
lcall
mov
mov
mov
xchg
xor
fcomip
push
push
js
dec
popf
xchg
movsl
orb
cmpsl
out
push
sub
push
aas
and
into
mov
inc
fisttpl
mov
cmpsl
and
mov
push
les
and
movsl
ja
push
pop
mov
fnstcw
xor
pop
jecxz
pop
dec
rcll
xor
inc
inc
scas
nop
inc
pusha
push
pop
inc
call
pop
lds
push
sub
or
sbb
imul
fcoms
popa
sub
cli
test
push
fs
sbb
or
sbb
bound
cmc
pop
addl
loop
xchg
inc
sub
out
inc
repz
add
push
pop
cmp
mov
adc
cmpl
dec
or
push
mov
test
jge
jnp
fildll
add
sbb
mov
jnp
andb
mov
cld
inc
dec
incb
call
push
jp
test
pop
mov
js
out
mov
test
xchg
dec
into
jb
in
insb
out
jns
daa
inc
mov
mov
and
lds
clc
sahf
dec
div
in
popa
call
xor
cmp
shr
add
pop
xor
jmp
aad
cwtl
fmul
or
push
test
dec
nop
mov
push
inc
mov
popf
popa
mov
sbb
adc
aaa
fiaddl
pop
arpl
mov
loopne
shld
sub
xlat
mov
pop
iret
rcrl
lcall
and
or
adc
push
adc
bound
adc
out
mov
ja
sbb
pop
mov
cmp
cmpl
dec
lcall
and
ss
and
mov
push
cmp
fidivrl
pop
test
xor
pop
xchg
shrl
daa
jae
add
or
iret
clc
xchg
fnstsw
sti
and
je
stos
inc
pop
xchg
mov
push
inc
xchg
test
lods
ret
jno
lahf
clc
movsb
pop
adcl
into
adc
les
jge
pop
rorl
fiadds
jb
call
or
lret
sub
popa
xor
jbe
rcr
xchg
jne
stc
mov
mov
push
mov
popf
xor
or
add
push
lods
pop
mov
frstor
int3
mov
sbb
fmuls
cmpsb
or
icebp
adc
sahf
sub
mov
call
sub
ds
cwtl
fwait
daa
push
mov
mov
fistpl
call
test
and
sub
test
push
loopne
mov
addr16
sub
pop
push
out
test
gs
push
jns
mov
int3
test
sbb
test
cmp
sbb
pop
xor
dec
xchg
dec
mull
jl
outsb
jg
ljmp
add
dec
cwtl
sbb
shrl
mov
ss
icebp
xor
ljmp
fstpt
aaa
or
inc
mov
sbb
pop
push
pop
adc
fnstsw
mov
pop
out
sbbb
out
je
pop
fcmovu
test
or
mov
jp
inc
push
iret
movsb
mov
jnp
or
adc
and
jge
cmp
ja
enter
cvtpi2ps
imul
mov
pop
dec
repnz
repz
fs
sub
repz
and
jp
xchg
daa
subl
popa
sbb
movsl
stc
sbb
enter
mov
dec
mov
cmp
imul
lahf
mov
jno
add
shrl
mov
or
inc
xchg
icebp
sbb
js,pt
jno
sub
jbe
daa
mov
xchg
and
adcb
pop
mov
fwait
sarb
push
inc
lds
subb
sahf
push
imul
es
push
imul
sbb
cltd
cld
outsl
in
mov
in
jp
jo
jo
inc
js
je
inc
sbb
dec
test
or
mov
and
pop
flds
mov
ret
push
mov
jmp
push
mov
subl
mov
arpl
pop
out
popa
pop
xchg
hlt
hlt
lock
jg
std
and
jns
push
outsb
add
jno
scas
xchg
gs
jecxz
push
stc
sub
fwait
aas
fisubs
sbb
sbbl
jns
aam
sbbb
sahf
les
idiv
sub
pop
inc
mov
fs
sub
adc
mov
sbb
mov
ss
pop
adc
stc
into
sub
lods
mov
into
iret
add
xchg
pop
jns
in
mov
stos
adc
push
out
inc
cld
int
xor
loopne
mov
mov
aaa
dec
iret
or
adc
mov
inc
jae
clc
sub
cmp
sbb
pop
inc
fdiv
shlb
lcall
testb
fistpll
adc
fcomps
pop
xchg
sub
mov
es
in
or
test
sub
add
cmp
pusha
push
xor
jbe
push
mov
and
adc
or
into
push
jne
and
imul
mov
outsb
jo
lock
add
lret
and
inc
rorb
pop
sbb
test
jne
xchg
pop
movsl
jns
inc
cmc
jecxz
jp
fld
loopw
neg
pop
adc
xlat
jmp
ret
pop
push
mov
cmp
xchg
aad
fimuls
cwtl
sub
push
push
leave
mov
dec
pop
addr16
outsb
jl
cwtl
mov
cmp
pop
or
lds
insb
std
mov
xor
xchg
incl
faddl
adc
insl
add
out
nop
mov
fs
les
cmp
pushf
aas
mov
pop
fnstsw
lea
icebp
dec
repz
ljmp
xor
mov
or
stc
mov
movsl
enter
adc
xchg
clc
xchg
daa
mov
xchg
test
mov
sti
aaa
repz
sub
jmp
xchg
mov
mov
repz
pop
inc
mov
lcall
cli
fstpt
xor
pop
dec
cmp
mov
push
jmp
jmp
in
orl
fsubrs
push
pop
ljmp
mov
aaa
pop
xor
in
jl
cwtl
xor
xchg
dec
add
repnz
and
clc
and
out
mov
pop
psrlw
lods
shrb
cmp
inc
cltd
ja
lods
sub
adc
inc
jl
and
xor
ret
inc
pop
scas
mov
mov
bound
movsl
lds
mov
insb
lcall
lahf
jne
ja
sbb
stc
lock
cmpsl
push
pop
pushf
stc
adcl
lret
lcall
xlat
push
shl
jge
xchg
jo
fs
int3
adc
rorb
or
cmp
imul
je
add
jno
inc
out
cmp
sbb
lret
call
cmp
scas
inc
loopne
loope
filds
imul
push
aad
inc
push
cltd
and
sub
push
repnz
pop
out
loopw
lods
pop
or
xchg
sbb
fs
adc
mov
cmc
fs
dec
loope
div
push
sbb
fxch
aam
jle
test
jle
sub
pop
xchg
repnz
mov
aaa
cmpsl
pop
scas
pop
xchg
stos
push
test
sbb
fistpl
add
and
popa
fcompl
mov
mov
cmp
jmp
xor
scas
popf
or
mov
or
ret
jmp
insb
scas
xchg
or
pop
push
mov
and
or
pushf
dec
mov
loopne
xor
jnp
rclb
pop
lret
pop
mov
or
scas
mov
movsb
test
and
hlt
es
cld
lcall
clc
pop
dec
imul
fsts
adc
jmp
jno
sbb
push
ljmp
out
outsb
pop
mov
push
mov
test
sub
push
gs
lcall
icebp
lods
aaa
dec
sbb
cltd
cmc
notb
mov
and
and
in
aad
outsb
pop
stos
add
rcrl
rorb
mov
in
or
imul
in
push
xor
jge
inc
lock
out
lock
pop
fucomip
lods
push
rcr
push
cmp
mov
xor
popa
and
loopne
aaa
adc
enter
inc
test
push
pushf
adc
push
sub
lea
movsb
add
mov
or
mov
leave
pop
xor
mov
in
mov
arpl
mov
fisttpll
sti
loopne
add
sbb
mov
adc
mov
call
je
fldt
lock
mov
neg
jns
sbb
clc
adc
popf
sti
xor
lret
or
aam
cli
into
test
mov
mov
push
add
xor
lea
fbstp
pop
fdivrs
je
imul
leave
xlat
or
mov
pop
outsb
cmp
call
inc
fs
test
test
das
psrad
jns
cltd
and
dec
loop
pop
inc
xlat
das
negb
icebp
push
pop
in
inc
cltd
mov
mov
shll
xchg
dec
and
adc
pop
mov
inc
push
push
add
and
mov
mov
cmpsl
or
frstor
or
je
sbb
out
scas
pop
movsl
mov
push
add
mov
cmpsb
sub
xchg
scas
cmp
mov
ds
pusha
mov
iret
mov
mov
pop
lret
pop
push
sbb
int3
aad
jbe
sub
ja
dec
repz
cmp
cmc
cmp
pop
inc
out
je
dec
and
lds
stos
icebp
mov
lret
add
inc
push
inc
jecxz
dec
lcall
fs
xor
std
and
jg
jne
and
inc
in
or
pop
ss
push
mov
push
mov
sub
mov
xor
add
mov
adc
scas
dec
jecxz
stc
sbb
push
sbb
inc
loope
xchg
mov
roll
xor
jno
xchg
adc
orl
filds
and
scas
lahf
sub
dec
push
ljmp
js
lcall
mov
pop
xor
mov
pop
adc
mov
xor
ficomps
mull
pop
add
xchg
pop
mov
clc
xchg
pop
into
cmc
mov
rcrb
pop
enter
mov
out
xorl
pop
xchg
movsb
push
stos
out
aam
call
or
cmp
fadd
xor
xchg
pop
out
enter
clc
sti
mov
sub
js
and
cltd
or
les
aas
hlt
mov
fsub
rorb
scas
mov
ret
lea
pop
ds
aad
gs
cmpsl
lret
pop
xor
xor
repnz
aam
push
pop
and
popa
testl
or
mov
xchg
pop
sbb
cs
pop
jne
cmp
sahf
push
mulb
xor
add
mov
imul
lea
les
pop
mov
stc
and
cmp
or
pop
mov
cld
push
pop
inc
pop
adc
xor
xchg
dec
ljmp
jecxz
jl
aas
call
add
adc
fnstcw
pop
pusha
aaa
or
cmp
sub
jge
stc
call
or
mov
mov
xlat
mov
fs
int
mov
movsb
incl
mov
xchg
lret
lds
cmp
test
xchg
xor
push
bound
insl
mov
mov
mov
arpl
int3
cmp
mov
push
jmp
add
jb
and
cltd
cmp
xor
mov
adc
mov
or
out
cmpsl
mov
imul
loop
mov
pop
in
cmc
out
movsb
add
dec
pop
xchg
test
ficomps
sbb
imul
jbe
mov
movsb
dec
mov
mov
mov
and
int
es
xor
andb
ds
pop
ja
push
int3
fimuls
cwtl
out
out
cmp
fnstcw
iret
push
mov
mov
in
push
je
shrb
and
enter
dec
ja
push
in
fwait
out
les
mov
stos
stos
dec
hlt
sub
push
pop
xlat
mov
mov
jl
mov
add
mov
jge
xchg
shrb
jne
outsl
lret
addr16
addr16
in
mulb
fidivrl
out
aas
inc
xlat
push
js
std
cltd
out
xchg
cld
cltd
ja
clc
out
sbb
test
ficoms
daa
arpl
mov
dec
lea
cmp
icebp
and
imul
into
mov
add
fadd
repnz
stos
mov
pop
mov
pop
adc
ss
rorl
lret
dec
lods
inc
dec
cmp
pop
fldcw
lcall
lcall
sbb
pushf
adc
jl
aas
jns
cmc
jnp
imul
pusha
add
xchg
stos
xor
mov
sbb
sbb
fists
int3
fiadds
pop
dec
push
addr16
je
push
or
imul
xchg
mov
mov
lret
dec
jae
jle
roll
adcb
jle
sbb
or
in
movsl
cltd
stos
add
loop
jno
xchg
pop
mov
fsubs
inc
cli
clc
add
jne
pop
xor
aaa
mov
jne
out
mov
mov
cmpsl
fmull
sub
popf
inc
ret
mov
rcll
popf
shrb
ds
sbbl
std
xchg
and
shrb
les
mov
push
lock
pushf
inc
push
into
and
jb
adc
cld
aad
jne
mov
repnz
inc
adc
imul
mov
push
and
add
icebp
mov
mov
push
clc
adc
neg
imul
dec
xchg
insb
pop
lods
jmp
std
test
insl
add
call
sti
in
pop
and
scas
and
jb
xchg
scas
icebp
stc
push
lods
mov
test
jle
jle
or
mov
iret
cmpsb
mov
clc
dec
xchg
pop
xor
imulb
adc
jbe
sbb
scas
vpandn
data16
sbb
sti
loop
pop
jecxz
xlat
cmp
lcall
fbld
push
test
dec
inc
cmp
aad
or
sarb
addb
lea
lret
int
into
dec
cmp
push
mov
fs
inc
xchg
fwait
xchg
cmp
or
rcl
sbb
dec
mov
mov
xchg
aad
int
jbe
lret
adc
push
sbb
dec
filds
stc
fxch
mov
stos
push
test
xor
lret
adc
sahf
xor
bound
aas
lcall
inc
adc
insb
cmp
pushf
sub
push
outsb
jge
xchg
int
and
cwtl
cmp
mov
xor
aaa
mov
out
imul
inc
ljmp
pop
dec
mov
imul
xchg
movsl
nop
sub
dec
aaa
or
xchg
xor
cli
or
cmp
shr
aas
inc
out
jl
fsubrl
sub
push
mov
mov
fisubrl
jno
sub
cmp
loope
pushf
adc
aas
xchg
aam
fnstenv
jbe
dec
loop
aad
xchg
imull
dec
imul
mov
mov
inc
out
sti
pop
in
in
adc
arpl
stos
mov
adc
cwtl
sub
cltd
adc
jnp
xor
adc
loop
andb
pop
scas
int3
data16
mov
enter
sub
aaa
repz
lock
sub
mov
and
and
jg
and
cs
lcall
xchg
cmp
insl
hlt
aas
push
repnz
nop
imull
sbb
inc
popf
lock
xchg
jecxz
outsl
test
xchg
test
mov
adcb
jmp
push
mov
add
rol
pop
ja
mov
out
clc
mov
and
jae
or
cltd
data16
decb
add
mov
pop
cwtl
xor
dec
cmpsb
cltd
jp
sti
mov
mov
cwtl
fdivs
test
or
xchg
repz
ficompl
filds
inc
cwtl
lock
aad
xchg
pop
sub
popl
xchg
ret
in
jno
int3
pop
dec
jecxz
aaa
jg
mov
les
in
testb
out
push
stos
mov
nop
sbb
dec
jge
insl
sub
cmp
aad
xor
mov
push
les
mov
aam
mov
dec
pop
add
imul
stos
loopne
int
and
jo
or
repz
add
and
push
jns
adcl
jo
jmp
push
sbb
addr16
sti
inc
aas
mov
lock
ret
clc
dec
pop
loop
mov
pop
iret
add
ret
xor
xor
shrl
pop
cmc
cmc
xchg
ret
push
xchg
out
mov
pop
inc
enter
lcall
in
aas
and
mov
cmp
icebp
inc
xlat
popa
cmp
ss
fs
adc
add
pop
out
lret
xchg
int3
jae
fdiv
adc
stos
sub
cs
lods
inc
out
mov
sti
shlb
jae
mov
mov
in
hlt
shlb
loop
sub
loope
inc
scas
lock
gs
int
xchg
in
dec
scas
pushf
pop
insb
dec
popf
mov
popf
fs
int
out
cli
popa
subb
in
int3
pop
ret
pop
dec
rcll
push
jl
and
xchg
sub
loope
jnp
add
fstpt
or
pop
xchg
dec
cmpsb
sbb
bnd
adc
pop
sahf
adc
pushf
adc
dec
xor
aam
clc
outsl
lods
test
cld
loopne
inc
push
sbb
push
or
cmc
xchg
fldl
inc
dec
add
mov
fwait
outsb
cmp
shrl
lods
or
nop
out
sti
mov
inc
xchg
pop
scas
sbb
movsb
js
sub
cltd
imul
cwtl
jbe
in
jae
dec
xor
mov
aaa
loopne
pop
lahf
js
leave
pop
outsb
lret
aad
les
aas
lods
mov
ror
pop
sbb
dec
pop
xchg
loopne
out
loop
dec
adc
cltd
insb
cmp
push
enter
cltd
jmp
lock
test
xor
sarb
aam
leave
popf
xor
iret
pop
lahf
adc
mov
mov
xor
and
jae
adc
adc
cwtl
leave
aaa
js
outsb
sbb
or
pop
xchg
test
cmpsl
pop
out
jg
loop
rolb
add
js
inc
das
loopne
loopne
pop
mov
sbb
test
inc
nop
push
mov
ljmp
ja
test
sbb
mov
xorl
mov
scas
test
mov
cmp
into
jno
lcall
mov
mov
push
fadds
sub
idiv
xchg
sub
add
ret
sbb
sub
inc
js
jnp
lods
fstpl
sbb
lret
mov
in
std
adc
inc
fnsave
jb
popl
fisubs
or
mov
jae
test
dec
inc
and
jno
jbe
ja
sbb
pop
les
jle
in
or
cmc
mov
loopne
push
subb
imul
sub
xor
adc
xor
decb
xor
ds
jmp
sbbl
lcall
subl
cmp
stc
sub
aas
fsqrt
adcb
stos
cmp
dec
xchg
hlt
fwait
arpl
cmpsb
push
mov
or
mov
bound
loop
push
dec
mov
gs
jle
jmp
scas
outsl
jns
xor
mov
jecxz
push
xchg
and
xchg
jns
jge
and
mov
ret
nop
sbb
sti
pop
fidivs
pop
xor
push
pop
lock
and
mov
push
popf
sub
stos
out
mov
ja
rcrb
push
int3
int
pop
stos
and
mov
out
inc
rorl
repnz
mov
xchg
inc
fistps
dec
out
pushf
and
das
sbb
pop
outsl
add
adc
in
imul
push
cltd
movntq
out
scas
movsl
vshufps
decl
in
cmpsl
aaa
fdivl
cli
fmuls
rcll
lods
mov
mov
pop
or
lods
mov
dec
jl
xor
xchg
nop
jp
dec
cmpb
fs
push
pop
xchg
mov
fidivs
divl
clc
mov
sti
addl
mov
gs
or
xor
jp
push
mov
xorb
icebp
imul
lret
pop
ja
push
stc
pop
addr16
das
fdivs
pop
enter
sub
fstp
movsb
adc
jb
popa
shl
stos
sarl
aam
push
add
or
cmp
lea
add
cs
push
frstor
and
or
mov
sbb
xor
ds
andb
push
in
movsl
cld
or
lcall
ror
push
pusha
divl
sub
loopne
mov
pop
je
xorb
lds
pusha
testl
jle
insl
ret
xchg
push
shlb
dec
sahf
scas
jb
sbbb
cwtl
jbe
ret
ljmp
push
jne
fldl
mulb
movsl
xor
ret
xchg
mov
lea
cld
xchg
dec
lods
enter
mov
rcrb
pop
int
inc
adc
mov
movsb
pop
ja
add
adc
pop
mov
cmp
lret
mov
into
adc
sub
mov
ret
cld
jecxz
test
push
rorl
outsb
fldenv
pop
jecxz
dec
icebp
ljmp
mov
cmp
notb
das
lods
and
push
push
xlat
imul
cmpsb
rcr
rolb
or
jmp
mov
mov
sub
pop
add
adc
pop
in
popf
lock
jmp
or
mov
rcll
jo
faddl
or
hlt
push
jns
pop
jbe
lcall
shl
jecxz
sub
pop
pop
loopne
rol
push
stos
mov
ja
push
pop
lods
mov
pop
or
bound
iret
inc
mov
mov
ficompl
sub
xchg
cltd
mov
xchg
fimull
bound
into
mov
add
xor
jns
xor
mov
push
sbb
or
aaa
insl
scas
mov
nop
sbb
add
jne
fcompl
inc
pop
jbe
inc
push
cmp
xor
std
pushf
fiadds
pop
inc
fnstenv
pusha
xorb
shrl
push
jp
shrb
or
fsub
sub
and
dec
xor
sub
inc
push
fcoml
nop
cs
nop
daa
enter
int3
sar
jle
scas
mov
inc
jmp
adc
sub
cmp
pop
ljmp
push
aas
hlt
in
jge
sub
lcall
inc
and
out
std
lcall
loopne
and
outsl
add
pusha
mov
push
xchg
pushf
xor
xor
or
add
dec
mov
jle
test
daa
dec
fiaddl
cmp
scas
inc
loope
pop
lret
cmp
sahf
push
rclb
add
mov
xchg
xchg
loop
jle
insl
loopne
sbb
ja
das
cmp
adc
scas
inc
xor
out
cmp
dec
add
scas
stos
pop
icebp
mov
lea
push
jb
movsl
aam
jb
push
jbe
rcr
jle
jp
mov
mov
adc
push
shl
jg
pop
loope
push
mov
ret
sbb
mov
popf
jmp
mov
lahf
shrl
popf
mov
out
out
pop
insb
lock
dec
loope
cmc
movsb
dec
aad
jl
jo
sbb
inc
sbb
push
jae
ret
ret
lahf
ss
jmp
inc
pop
jns
dec
test
or
xchg
mov
scas
pop
dec
dec
aad
sbb
iret
add
jl
rcrl
or
js
ret
jno
dec
or
clc
test
cmp
mov
and
jmp
sub
lds
mov
mov
pop
loopne
rorl
ret
pop
cmp
mov
lods
cmp
jle
out
pop
sbb
mov
jle
sub
cmp
inc
pop
add
sbb
adc
rcll
inc
data16
test
sbb
pop
sbb
in
adc
insb
mov
lds
adc
mov
sub
js
and
jne
cmp
stos
ficompl
jae
xor
add
jmp
testl
fldenv
stc
fcomp
aad
inc
je
pop
cmpsb
gs
inc
xchg
add
or
insl
push
cmpsl
mov
pop
lods
add
in
mov
pop
vmwrite
mov
jecxz
hlt
dec
pop
aad
sbb
dec
cmp
clc
incb
push
pop
in
add
loopne
testl
in
inc
arpl
jo
xchg
lds
push
lods
iret
jnp
xchg
addr16
add
push
cmpsb
xor
popf
imull
push
stos
cmp
loopne
xor
push
ret
pop
mov
or
lret
add
inc
add
leave
je
in
lret
shll
and
or
sbb
fwait
push
jmp
and
mov
in
fsub
mov
arpl
pop
and
jae
cld
mov
dec
pop
test
jns
in
mov
pop
xor
sub
mov
push
dec
mov
ja
add
and
in
mov
jp
js
dec
repnz
inc
inc
sahf
jnp
inc
pop
adc
and
cmp
cli
push
dec
sbb
pcmpgtd
ljmp
jecxz
cli
insb
push
mov
mov
and
jle
lea
bound
lock
mov
xchg
aaa
or
xchg
pop
ja
cmp
xchg
xor
xchg
js
adc
inc
sub
int3
adcl
js
mov
clc
xchg
and
sbb
push
ja
mov
sub
rcrl
xor
pushf
cs
pop
daa
add
jo
fwait
enter
add
lea
jmp
fisubrl
xor
in
repnz
push
adc
pop
mov
push
clc
add
sub
cmp
mov
popf
cli
push
lcall
push
scas
sti
inc
das
inc
mov
push
xchg
daa
sahf
xchg
add
sahf
jge
dec
xchg
push
push
pop
push
push
out
rcll
inc
push
scas
mov
imul
xlat
pop
mov
jp
pop
or
mov
adc
inc
int
clc
addr16
imul
sub
pop
xchg
cmp
out
out
aas
lock
ljmp
pop
add
pop
scas
call
sti
xor
ret
add
jb
mov
test
mov
push
add
pop
sub
pop
mov
loopne
xor
mov
sub
pusha
movl
clc
dec
sarl
lret
push
and
mov
mov
xchg
je
icebp
ds
cltd
add
mov
test
cwtl
sti
jo
fdivl
pop
lcall
push
sbb
fcompl
sahf
xor
pop
outsb
mov
adcb
xchg
sub
xchg
mov
xchg
or
jns
movsl
dec
cmp
pop
inc
ficompl
mov
cmp
jo
and
rcrl
aad
lods
test
or
sti
pop
push
sbb
xor
out
adcb
test
xchg
imul
or
adc
inc
sub
iret
in
sub
testb
xchg
jns
sub
inc
nop
lea
hlt
stos
or
inc
clc
iret
cmpsl
mov
sbb
cld
addb
cmp
xor
in
cmp
inc
in
or
jnp
sarb
jg
pop
testb
cli
xchg
add
inc
pop
clc
test
pop
and
adc
xchg
out
cmc
pop
sbb
stos
fcmovu
mov
mov
jo
scas
es
gs
bound
or
ret
lret
add
cmp
mov
dec
icebp
pop
xchg
mov
in
add
mov
push
mov
mov
xor
jnp
mov
inc
fwait
ja
inc
addl
inc
push
sbb
rcll
out
adc
sbb
scas
out
outsb
jg
shlb
in
ret
cmp
mov
mov
fs
sub
push
mov
sub
mov
sbb
lret
push
push
mov
mov
sti
and
xchg
fsubl
mov
js
adc
movsb
lret
xlat
shrb
fsubrs
testl
aam
sub
or
sub
cmp
xchg
add
mov
in
in
sbb
mov
fs
ja
and
adc
test
je
cld
sarb
xchg
ja
push
mov
test
mov
jecxz
pop
inc
lock
fldenv
push
pusha
inc
xor
mov
sqrtps
dec
mov
movsb
out
out
inc
sti
dec
sbbl
push
cmp
js
xchg
sbb
ja
mov
cmc
xchg
push
adc
imul
or
mov
and
lea
cmp
pop
outsb
cmp
add
push
xchg
es
stos
jecxz
rcll
iret
push
mov
outsl
andl
out
xchg
bound
add
std
fdivs
int
push
adc
shrb
jb
cmc
aas
shl
mov
loopne
jb
shrb
xchg
mov
insl
fnsave
ret
push
jno
xchg
bound
jo
mov
in
sbb
push
sub
and
mov
and
in
in
inc
jmp
push
shl
jne
fdivrs
mov
stos
dec
sbb
fsubl
mov
and
dec
sbb
jp
mov
lret
shll
ret
call
xchg
xor
out
test
push
sbb
xor
repnz
sub
jecxz
pop
dec
movsb
dec
mov
out
dec
dec
jle
cwtl
add
cmp
jle
jns
add
xchg
fs
push
xor
cmc
in
sahf
cmc
and
push
mov
or
shlb
pusha
in
cmp
in
add
cwtl
stos
aaa
jle
mov
shr
ja
data16
ss
stc
cmpsb
clc
xchg
fists
xor
sarl
in
lcall
cmp
inc
loope
mov
out
insb
notl
std
adc
inc
inc
xchg
xor
pop
rorb
std
shlb
ja
arpl
lods
push
and
xchg
xchg
xor
push
lret
inc
mov
repnz
or
sarb
sbb
cmp
lea
jns
pop
jbe
sub
pop
outsb
adc
js
or
push
xchg
and
adc
xor
sbb
int
and
fisubrs
repz
fisubrl
test
pop
cmp
aad
out
pop
ja
les
sbb
jecxz
xchg
jp
cmpb
cmp
xor
repnz
mov
push
lcall
in
shlb
push
mov
dec
pop
sarb
int3
jmp
lds
aad
inc
jo
xor
int3
dec
rclb
into
xchg
imul
pop
push
mov
stos
push
or
movsb
cmp
sub
jl
inc
sbb
arpl
push
jae
movsb
jno
iret
mov
mov
lahf
or
jno
or
pop
xchg
add
orb
pop
imul
and
lahf
clc
add
dec
fldt
call
xlat
aaa
stc
out
inc
pop
dec
dec
add
mov
jo
nop
add
mov
in
mov
mov
mov
adc
call
sub
inc
xchg
arpl
testl
andl
rcrl
outsl
add
jb
dec
clc
cmp
inc
push
pop
mov
add
movsl
add
jne
clc
mov
inc
fisubrs
ljmp
inc
int3
inc
xor
mov
cs
mov
push
xor
call
insl
inc
imul
dec
mov
or
insl
insl
loop
dec
xchg
jmp
xchg
jns
out
sub
dec
shl
cs
pop
insl
cmp
adc
jecxz
ljmp
dec
mov
int3
aaa
cmp
lods
xlat
pop
ja
mov
add
mov
jo
jecxz
sti
xchg
sbb
adc
xor
jne
fwait
psadbw
mov
in
ret
aam
mov
rcll
sub
adc
outsb
cmpsb
iret
mov
lret
stc
ret
adc
xchg
test
push
add
leave
pop
adc
lods
fnstenv
pop
test
scas
and
xor
pmaddwd
xchg
xor
cmp
imul
push
out
xor
test
ss
cmpsb
shr
ficoml
jp
dec
sti
lahf
jbe
lods
add
leave
addr16
cltd
cwtl
scas
lcall
insl
jo
add
cmp
pop
clc
adc
xchg
movb
mov
jge
mov
addr16
js
pop
mov
xchg
cmpsl
push
bnd
mov
mov
fidivrs
dec
mov
rol
mov
sbb
xor
mov
mov
push
fldl
sahf
loopne
insb
lret
xchg
adc
mov
mov
out
xchg
xchg
mov
cld
xchg
jne
subl
fnsave
rclb
jbe
data16
sahf
clc
rclb
and
js
pop
or
repz
arpl
cmpsb
cmp
inc
cwtl
dec
xchg
and
jo
mov
pop
push
shrl
hlt
movsb
dec
pushf
repz
les
pop
cmp
std
test
sahf
add
push
test
enter
pop
push
mov
insb
push
sbb
shrb
adc
sub
imul
mov
sbb
dec
cmp
testb
cld
insb
dec
rcrl
aaa
push
mov
adc
or
sub
xlat
stos
adc
cmc
scas
pusha
sub
rorl
test
icebp
fsubl
mov
lret
out
imul
pop
lahf
pop
cltd
into
add
out
inc
mov
xchg
jbe
jne
mov
fcomps
inc
dec
scas
je
add
jne
imul
mov
inc
es
push
in
xor
fidivs
outsb
insb
jo
cli
xchg
jno
jecxz
subb
shll
cmp
push
inc
jmp
sbb
jo
xor
jmp
std
mov
cmp
mov
clc
sarb
cmp
mov
or
jg
xlat
sbb
ljmp
and
xchg
adc
sbbb
mov
shrl
outsl
insl
imul
sbb
shll
push
cmp
lods
jg
ds
sub
jmp
jns
test
fisubs
cwtl
cli
stos
inc
and
inc
shrl
enter
inc
fisubs
jb
repz
cli
or
xchg
ja
pop
outsb
sbb
mov
pop
pop
out
shl
cmp
shrl
daa
orb
insb
inc
pop
icebp
lcall
inc
pushf
loop
fucomi
mov
test
push
jae
sahf
inc
lea
jns
sbb
nop
lcall
sbb
sub
pop
repnz
mov
cmpsb
clc
sub
scas
push
inc
icebp
jne
or
mov
icebp
push
xor
push
shrl
sub
pop
sub
ret
sbb
mov
adc
mov
test
int
sar
cld
xchg
test
pop
add
fiaddl
xchg
sbb
lcall
or
imul
pop
mov
cwtl
mov
cld
pop
dec
sahf
xor
push
pop
pop
movb
mov
and
inc
ficompl
arpl
mov
pop
dec
loop
fsubr
cwtl
mov
mov
mov
ficomps
icebp
pop
in
pop
mov
cmp
xchg
mov
xchg
push
mov
pop
fbstp
pop
sub
cltd
mov
mov
sarb
sbbl
dec
out
imul
and
arpl
movsl
ljmp
rorb
mov
mov
inc
aad
pop
mov
xlat
pusha
dec
or
in
cmp
sub
popf
cmp
rol
sub
mov
push
fstps
dec
in
imul
sbb
cmp
mov
push
je
test
pushl
ljmp
cmpsb
push
insl
shr
cs
jp
sbb
jl
add
xor
cmp
sub
jmp
test
out
xor
arpl
lods
outsb
leave
xor
dec
addr16
pop
fdivr
je
clc
in
cmp
out
push
aaa
aad
mov
pop
mov
frstor
pushf
shl
sbb
cmp
cwtl
mov
mov
sbb
lods
sti
lea
stc
imul
xchg
xchg
add
dec
push
xchg
jg
add
mov
or
xor
repnz
data16
push
cmp
lret
scas
std
or
pop
or
sbb
aaa
popf
push
jne
dec
push
les
jp
pop
inc
push
jecxz
or
mov
inc
jae
xor
movlps
jb
inc
out
pop
mov
mov
cmp
lods
cmp
mov
mov
data16
cld
outsl
test
data16
dec
xchg
xchg
sub
cmp
mov
into
xor
mov
inc
pusha
mov
leave
int3
idivl
push
pop
sub
push
cld
cmp
and
mov
lods
lods
push
xchg
fs
dec
inc
mov
add
cmp
fbld
mov
dec
imul
pop
xchg
insl
aaa
push
les
jb
les
or
dec
fidivl
pop
shr
push
hlt
lret
sub
jg
aaa
dec
mov
test
shlb
stos
imul
pop
inc
adcl
push
incb
and
pop
dec
test
ljmp
popa
loope
test
stos
in
adc
or
ret
outsb
and
fnsave
xor
stc
clc
adc
cmpsl
and
pop
popf
jns
lods
fwait
xchg
fidivl
addr16
jbe
jne
jb
arpl
mov
je
test
push
pop
pushf
lods
and
mov
lods
fdivrl
ficoms
push
loopne
shlb
sti
mov
cmp
adc
sub
pop
add
jl
js
or
lcall
cmp
popa
dec
ss
or
and
out
lea
cmpb
fisttpll
pextrw
sahf
lods
divb
lahf
divl
mov
in
dec
inc
push
mov
repnz
out
insb
inc
aas
out
mov
xchg
xlat
and
pop
dec
loopne
mov
add
and
mov
aas
add
aas
push
adc
mov
arpl
push
shrb
add
xchg
mov
loope
push
pop
add
adc
add
inc
movsb
jns
or
fwait
lahf
pop
jno
aam
jo
icebp
sahf
or
sub
sub
rorl
idivb
cmpsl
hlt
mov
ror
arpl
test
sbb
xchg
jmp
jnp
pushf
cmp
add
repz
sub
mov
xchg
int
pop
sub
inc
aas
mov
mov
pmaxub
and
mov
mov
jnp
xchg
or
mov
clc
and
lods
sub
push
lods
inc
dec
shlb
sub
insl
decb
rcr
js
jecxz
pop
adc
icebp
mov
and
imul
inc
test
add
orl
enter
dec
rcl
cld
fadds
iret
data16
adc
movsb
fdiv
sarl
test
mov
call
push
aaa
mov
stc
sbb
cmp
cmpb
outsb
mov
adc
ja
data16
inc
arpl
jle
or
in
cmp
lds
aas
add
ds
in
xchg
mov
cmpl
fwait
rcll
xor
out
pushf
call
movsb
and
stc
clc
les
inc
divb
mov
js
int3
lret
addr16
mov
inc
xlat
cmp
imul
negb
mov
leave
test
cmp
rep
lea
cmp
inc
push
jo
sub
push
ss
inc
cmp
arpl
pushf
scas
ret
or
negb
inc
frndint
pop
dec
out
pop
sbb
imul
inc
push
outsb
dec
jno
test
test
arpl
adc
jo
pop
stos
rcl
sub
addb
sar
push
leave
shll
sbb
test
jo
mov
cmp
mov
ficomps
cmpsb
jo
in
in
sbb
sbbb
and
add
xor
mov
mov
add
sbb
and
fnsetpm(287
ret
push
lahf
push
pop
xor
test
loope
xor
ret
cwtl
or
loop
rcl
cwtl
sarb
inc
je
repz
jmp
push
fisubs
mov
push
or
ret
or
mov
test
fcos
xchg
scas
fisubl
fistl
xor
gs
mov
rcll
cmp
or
and
xchg
stos
and
pop
outsb
idivb
xchg
push
aas
sub
in
shl
enter
adc
dec
stos
mov
push
les
sub
and
int
adc
lock
sbb
out
xor
xor
mov
in
pop
adc
xchg
sbb
cli
cmpsb
aad
fcoms
mov
fistpll
call
dec
sub
ret
cs
add
or
mov
pop
in
mov
nop
or
fdivr
ret
ret
jbe
add
iret
jge
push
fld
cmpl
pop
cmc
test
add
aaa
pop
faddp
adc
inc
daa
jg
pop
lcall
cmp
sbb
rcl
loopne
or
and
mov
adc
fwait
adc
enter
rcrb
int
sub
pop
mov
and
jns
inc
mov
lock
shrw
fadd
pop
call
mov
sbb
xchg
sbb
fxch
sbb
insb
es
and
fsubl
cld
cmc
pop
xor
jmp
std
cltd
lahf
jbe
mov
neg
enter
lods
fisubs
repz
aas
scas
cmp
out
cmp
push
mov
sub
and
push
mov
inc
lret
out
ljmp
ds
negl
jge
push
pop
out
imul
lock
lods
aaa
and
or
lods
nop
imul
aaa
push
stos
std
lods
push
rclb
xchg
stos
inc
dec
push
inc
sbb
xor
stc
cltd
nop
adc
fs
ljmp
cmp
cmp
cltd
push
addb
hlt
cmp
loopne
sbb
sti
and
fdivl
mov
into
ja
or
push
fwait
lahf
xor
xchg
sbb
cld
sbb
jb
jbe
lahf
adc
enter
in
enter
loop
clc
inc
xchg
popa
iret
mov
or
iret
insb
insb
inc
sbb
and
mov
rol
movsl
subl
sbb
xor
cmp
cli
es
test
loope
sub
sub
mov
int
xchg
into
mov
sti
enterw
sbb
out
cmpsl
lock
pop
fiadds
fwait
or
add
xchg
outsb
aam
leave
and
rorl
test
lcall
sahf
push
cs
enter
stos
es
cltd
pop
lock
ss
mov
and
andl
imul
in
repnz
lods
fstpl
fdivl
or
mov
mov
and
cld
enter
sahf
push
mov
cs
sub
pop
repnz
inc
sub
mov
loope
bound
iret
scas
push
fiadds
mov
dec
adc
jns
mov
out
and
es
pop
sub
push
cli
lret
cld
loop
fstl
push
jb
lret
dec
pop
push
inc
mov
int3
mov
sbb
jle
mov
clc
test
jno
ds
popa
scas
fnsave
cwtl
scas
mov
xchg
popf
xor
test
mov
aas
test
sti
pop
clc
mov
shrb
add
jnp
push
sbb
jae
sub
sub
dec
daa
leave
loop
cmpsb
cmp
dec
mov
jae
xchg
ja
subb
jge
or
scas
test
mov
cli
mov
lret
gs
cld
imul
fdivp
push
jbe
sbb
cmp
sbb
jle
ret
dec
aam
dec
loope
push
ja
out
mov
shll
sub
add
pop
xor
mov
testl
and
mov
xchg
xchg
mov
subl
or
pop
push
mov
in
mov
loopne
or
jmp
mov
mov
das
movsl
lea
in
jecxz
and
mov
adc
dec
cmpsl
inc
int3
das
cli
enter
setae
mov
ja
ret
test
into
shll
mov
xchg
shrl
sub
ret
cs
ret
rcr
jo
or
sub
add
pop
repnz
lods
jl
jns
xchg
imul
jl
and
xchg
rcrb
test
mov
aam
jo
mov
pushf
mov
sarl
cmp
test
mov
dec
cltd
xor
repnz
dec
in
push
push
sbb
lods
inc
jl
rcrb
mov
push
add
jbe
loopne
fsubrs
fnstsw
mov
mov
and
adc
icebp
mov
jne
mov
mov
jne,pt
fwait
js
stos
push
aas
inc
test
mov
pop
scas
and
repnz
mov
movsl
test
adc
loopne
push
outsl
shll
loope
dec
lock
jae
mov
aaa
idivb
jmp
pop
outsb
arpl
scas
dec
add
mov
mov
push
nop
mov
inc
inc
int
or
shr
sbb
call
aam
lea
mov
or
js
int
inc
cltd
xchg
outsb
inc
bound
fsubrs
jbe
jae
or
xchg
movsl
pushf
repnz
jmp
jp
dec
arpl
jae
addl
inc
xor
std
and
jne
add
sbb
jns
pop
add
or
push
in
xchg
pop
shrl
pop
inc
movsl
ret
stos
lret
subb
cmp
add
stc
add
adc
shrl
loop
scas
pop
insl
sub
cwtl
addl
ja
and
jp
or
rcrb
cmp
pop
xor
sbb
sahf
xchg
sub
popa
xchg
mov
addr16
or
inc
or
add
mov
cmp
sarb
add
insb
mov
mov
lods
iret
lahf
xor
and
lcall
out
and
xor
call
xor
cmp
push
xlat
es
out
jno
add
sbb
add
nop
loop
mov
movsl
call
or
mov
add
in
pusha
sub
out
popf
mov
jno
out
xor
xchg
mov
das
dec
aam
mov
fsubs
js
into
ss
std
nop
stos
cli
ret
loop
jb
jg
dec
sbbl
enter
in
aad
stc
mov
cld
xchg
shlb
insl
pop
mov
icebp
mov
iret
imul
push
movsl
pop
dec
and
vcomisd
pop
pop
cmp
mov
aam
jno
mov
sub
lcall
fsub
add
add
xor
call
sarl
imul
dec
xlat
or
or
dec
inc
ja
adc
and
loop
inc
popa
jno
enter
adc
imul
sbb
loop
cmpsl
mov
cli
mov
adc
test
jae
cmp
xor
cmp
pop
dec
cmc
mov
pop
lods
jnp
repz
stos
shrb
ljmp
daa
mov
or
sbb
adc
out
push
push
inc
aaa
xchg
sbbl
mov
fadds
mov
shlb
in
inc
fisubs
push
mov
mov
gs
mov
or
jnp
xchg
sbb
jns
repz
jecxz
pushf
arpl
dec
cwtl
and
add
ja
daa
loop
sbb
jge
ffreep
jb
daa
test
jp
test
dec
push
sub
jns
xchg
dec
dec
dec
dec
fldl
daa
mov
aaa
mov
mov
shll
rcrl
xor
xor
ja
stc
test
or
addr16
inc
pop
lods
pop
and
cli
das
addr16
testl
push
mov
loopne
in
sub
test
inc
jl
out
sub
adc
adc
out
fs
inc
lock
mulps
iret
mov
sub
jb
inc
lods
mov
inc
mov
or
inc
dec
adc
push
stos
pusha
in
dec
shr
sti
test
stc
adc
mov
sbb
cmp
out
cs
cld
mov
xchg
pop
add
mov
ja
sbb
lret
sub
popf
lods
mov
mov
mov
mov
test
add
test
cmp
test
movsb
adc
cmp
mov
addr16
mov
test
call
xor
push
push
dec
pushf
pop
loopne
adc
rclb
popl
sarl
stos
loope
xchg
and
cld
cmc
cmpsb
mov
mov
leave
xorb
sbb
adc
push
mov
movsl
cmp
push
mov
dec
pop
or
cmp
pop
adc
dec
jg
cmpsl
mov
pushf
xor
sbbb
mov
xor
mov
mov
inc
mov
push
test
dec
lahf
xchg
or
ss
bound
adc
pop
add
jb
nop
push
pop
fisttpll
pop
in
nop
test
je
repnz
imul
xchg
repnz
pushf
lods
cltd
lret
inc
aaa
push
movsb
stos
xchg
insl
push
mov
shrb
or
aam
pop
add
add
pop
test
lret
xchg
jmp
stos
das
dec
mov
jbe
jne
aaa
into
or
outsb
mov
cmpsb
mov
sahf
add
es
icebp
mov
pop
movsb
and
pop
outsb
inc
sub
popf
or
push
lahf
inc
xchg
arpl
add
sub
scas
jae
adcl
xchg
outsl
add
test
xlat
and
sti
mov
jl
xor
test
fsts
mov
pop
insl
sbb
jp
aas
lods
subl
add
add
rclb
inc
dec
inc
into
mov
into
aas
test
push
inc
mov
mov
gs
pusha
aad
xchg
das
andb
xor
push
cmp
movsl
mov
sub
and
imul
insl
imul
popa
or
dec
lods
aas
ds
push
push
jno
lret
jp
shlb
in
add
aam
loop
test
arpl
adc
adcb
xchg
les
or
aam
test
pop
cli
cmp
aad
pop
scas
shlb
mov
add
add
mov
jecxz
push
push
js
adc
jns
sbb
jnp
insb
push
icebp
add
xchg
and
lds
xchg
pop
outsl
mov
cmp
mov
std
std
mov
movsl
cltd
je
mov
push
jecxz
or
dec
pusha
jg
jl
push
inc
out
inc
mov
add
out
jl
test
inc
lcall
cmpsl
mov
inc
dec
outsl
ds
mov
push
mov
ret
adc
xchg
scas
lea
inc
lea
inc
in
push
outsb
add
mov
mov
stos
mov
sbb
inc
sbb
in
sub
xchg
pop
push
out
js
sbb
enter
and
jmp
mov
pop
cmpsl
insb
add
sti
ret
sbb
mov
cwtl
pop
cmpsb
mov
mov
cmp
mov
movsb
mov
enter
icebp
mov
lahf
popa
test
cmpsb
bound
sub
pop
jns
and
iret
data16
ds
sbb
push
shrl
push
and
pop
dec
hlt
and
cli
loope
and
out
sbb
sbb
insl
movsl
dec
push
mov
xchg
inc
cwtl
adc
dec
inc
std
movsb
inc
aaa
in
fwait
or
test
mov
iret
xor
sbb
stc
jbe
popf
xor
out
or
adc
push
leave
cmc
push
mov
mov
adc
insb
aam
fwait
xor
xor
test
mov
out
mov
popa
adc
mov
dec
cltd
add
enter
int
inc
in
test
pop
adc
push
cwtl
sbb
sbb
cmpsl
mov
xlat
xor
or
outsb
mov
sbb
jmp
cltd
sub
dec
addr16
cwtl
outsl
movsb
cmp
mov
aam
inc
test
jns
lcall
ss
orb
mov
jo
rolb
jg
jne
mov
inc
xor
std
repnz
pop
dec
add
jg
jge
insb
cmp
lock
lcall
and
out
test
dec
ret
dec
pop
cmc
das
pop
repnz
repnz
mull
jns
aam
jge
xor
mov
mov
addr16
push
out
out
pop
push
fnstenv
shll
insb
fstp
les
mov
push
rolb
xchg
stos
and
inc
testb
mov
outsb
in
insl
xchg
mov
dec
dec
dec
aaa
movntq
out
jno
cmpsb
mov
xor
jns
nop
mov
xor
inc
cmp
jl
sub
test
mov
dec
fisubs
lret
inc
jmp
popa
cld
testb
cmp
int3
test
lret
jne
add
std
sbb
push
cmp
push
sub
daa
xchg
xor
xchg
jae
lods
enter
mov
push
xlat
int3
inc
daa
lods
mov
mov
andb
test
jp
push
jns
std
stos
jno
iret
dec
arpl
inc
lock
push
popf
mov
fs
addr16
shrb
sarb
jecxz
xchg
cs
mov
inc
lds
cmp
dec
pop
mov
push
jbe
mov
jb
push
test
je
in
push
repz
sahf
xor
xchg
cmpb
sarl
adc
mov
push
aad
hlt
jge
neg
mulb
fs
dec
jno
inc
popa
xchg
rolb
repz
adc
inc
inc
mov
dec
ljmp
xor
jecxz
lea
add
out
mov
insb
fcoms
pop
cmp
cli
jno
mov
xchg
or
sub
out
std
xor
inc
sti
movsb
jne
in
push
adc
call
mov
push
hlt
inc
push
cmp
and
add
adc
push
pop
cs
das
mov
outsb
jecxz
out
ret
xor
or
shl
xor
jle
int3
repnz
addl
js
frstor
mov
pop
jle
fisttpl
and
inc
inc
mov
jno
out
outsb
adc
jo
cli
pop
jg
fadds
gs
push
sbbl
repnz
jno
lret
mov
dec
jp
jge
inc
adc
mov
dec
sti
jno
pop
pop
std
xor
lods
scas
xchg
fs
mov
addr16
sarb
adc
pop
xchg
pushf
outsl
in
adc
ja
or
cmp
xchg
outsb
ja
mov
mov
out
xorl
cmp
fdivl
aad
xor
jne
jl
and
popf
pusha
into
iret
push
gs
int3
fs
sbb
sub
shr
pop
in
lods
mov
mov
int
rcll
mov
scas
inc
aas
fistpll
rcrb
cwtl
inc
pop
sub
out
jbe
cmp
bound
subb
lods
data16
and
mov
jle
sahf
sub
andb
and
xor
mov
ja
adc
xchg
mov
add
mov
xlat
testb
data16
inc
popf
push
ljmp
and
insb
lret
jg
adc
push
movb
outsl
xchg
mov
fs
push
cmpsb
sahf
jmp
cwtl
stos
cli
xor
daa
ljmp
pop
out
push
jp
sbb
cmpsl
fs
mov
jns
inc
jmp
stos
mov
sub
push
cs
je
sarb
pop
mov
insb
hlt
xchg
pop
leave
push
dec
xchg
mov
push
out
into
and
inc
pop
stos
sarb
add
lcall
mov
xchg
xor
jp
sbb
xlat
mov
stos
adc
pop
je
outsb
add
add
jp
sub
xchg
cs
cltd
xor
pop
mov
in
xor
pop
repnz
repnz
push
jns
fbld
fists
mov
inc
sbb
in
xor
lcall
xor
and
mov
mov
jmp
mov
mov
jae
mov
clc
int
add
jae
inc
xor
push
cli
cmp
sub
fimull
dec
cmp
cmp
sbb
sub
sbb
or
movsb
mov
xor
scas
pop
cli
inc
mov
adc
and
fnstcw
repnz
mov
movb
arpl
notl
pop
push
ljmp
ljmp
je
pop
lcall
and
cmp
mov
fsubs
aas
adc
repnz
add
adc
inc
and
imulb
iret
pop
fcomps
in
sbb
push
setg
lcall
cwtl
test
and
cmovno
jae
sbb
popa
andl
addps
mov
jmp
lea
stos
xchg
mov
stc
aaa
mov
dec
cmp
icebp
and
jns
addr16
jns
push
jecxz
push
int3
das
push
inc
dec
mov
out
dec
or
cli
or
rcrb
pop
in
js
xor
in
aad
pop
ret
mov
or
nop
mov
push
fldcw
das
inc
and
mov
and
inc
push
in
and
cmpsl
fildl
gs
addb
aad
xchg
imull
push
jge
cwtl
mov
into
and
or
push
loope
dec
fists
or
mulb
pop
lock
pop
scas
cmp
test
test
fmul
dec
stc
fnstenv
jmp
fiadds
pop
adc
rorl
subb
pop
cmp
stc
out
hlt
inc
xchg
cld
mov
clc
popa
inc
jp
lea
sub
sub
cmp
cld
jmp
push
push
or
aaa
push
jno
mov
sbb
stos
xchg
pop
push
and
mov
andl
mov
scas
aas
gs
test
xchg
fwait
cmp
lcall
xor
fildl
daa
pop
and
outsb
cmp
sub
push
lods
pusha
leave
les
mov
inc
clc
push
push
push
fisubrs
push
jp
push
insb
repz
jno
cmp
push
and
sbb
scas
and
inc
dec
jle
mov
push
mov
sub
dec
xor
xchg
orl
loopne
push
add
sub
mov
fisubrl
inc
movl
movsl
cmp
cmp
push
ret
mov
cmp
fcomi
nop
pop
inc
rol
mull
jge
mov
mov
bound
shlb
test
inc
xchg
sub
dec
popa
and
mov
jno
jb
jecxz
inc
or
push
dec
add
lcall
mov
jne
out
pop
push
sub
or
pop
cmpsl
and
xchg
es
sbb
inc
lds
xchg
add
pop
lahf
rcrb
cmp
jnp
pop
and
jg
xor
cmc
stos
shr
push
ret
pop
inc
testl
jg
aad
add
cmp
mov
pop
pop
pop
hlt
mov
inc
xchg
insb
clc
sahf
mov
xor
std
xor
es
jb
pop
mov
sbb
sti
shr
push
jo
ja
jge
insl
scas
inc
decb
ror
push
lret
loopne
push
outsl
loope
pop
repnz
jg
push
mov
push
jb
jne
sbb
xor
cmp
sub
jne
fcom
testb
sbbl
cs
cltd
fsubrs
pop
repz
lea
jnp
lcall
lahf
pop
addr16
mov
pop
mov
xor
cld
pop
ret
xchg
gs
and
in
dec
fidivrl
idivb
loop
push
adc
jp
ja
cmp
cmp
sbb
shl
nop
hlt
pop
or
dec
mov
fnstenv
sahf
test
and
shlb
repnz
popa
xchg
mov
repz
sti
ret
and
in
add
mov
inc
xor
aad
sti
ficomps
mov
push
lcall
pop
insl
jg
bound
inc
cmp
dec
adc
mov
xchg
sub
ds
and
cltd
iret
rolb
movb
mov
es
cmp
shrb
mov
push
stos
nop
xchg
in
sub
push
jmp
test
lret
push
mov
fnstsw
int3
shrb
mov
inc
and
jmp
pop
dec
cmp
pusha
or
cwtl
xor
fisttps
repz
mov
adc
out
push
in
aad
mov
icebp
lret
lock
xchg
jl
cmp
loopne
push
and
lret
fbstp
leave
movsl
cltd
cltd
inc
popf
sbb
mov
adc
aaa
inc
sub
or
or
cmpsb
add
cmp
jno
push
mov
enter
int3
xor
test
out
sti
lds
xchg
sub
movsl
dec
mov
shl
das
fmuls
xor
pop
xchg
adc
aaa
jbe
lods
jae
mov
jae
xor
clc
xchg
sbb
push
pop
out
inc
shlb
mov
adc
mov
cmp
nop
pop
xlat
cmp
xchg
jle
xchg
sub
sbb
xlat
out
insb
add
pushf
jb
ret
scas
push
xor
test
xchg
aam
adcb
add
loope
mov
cmc
das
addr16
xchg
jbe
sbb
xor
fbld
add
push
xchg
adcb
adc
mov
ss
pop
enter
ja
sub
adc
push
push
test
or
loope
mov
sbb
sarl
push
mov
shrl
std
fxtract
mov
mov
pop
fnstsw
pop
insl
add
sarl
xchg
sbb
push
aaa
shlb
imull
dec
sub
jns
int
sub
addr16
bound
arpl
mov
adc
ljmp
out
dec
xchg
push
out
xchg
jecxz
mov
loop
cld
out
sbb
sub
adc
iret
mov
xchg
andb
fcomi
addb
mov
pushf
loope
mov
sub
test
enter
out
sbb
xor
loopne
lock
xchg
fs
push
mov
mov
add
push
fdivl
popf
inc
scas
mov
fbstp
inc
je
xchg
inc
subb
arpl
push
pop
push
jl
cmp
xor
jns
push
icebp
sti
mov
int
ret
inc
and
fnstenv
xor
mov
dec
mov
sbbb
dec
mov
mov
or
outsb
add
xor
mov
mov
cli
pushf
loope
call
sbb
sbb
test
push
ss
cwtl
pop
orl
lahf
test
jmp
adc
lea
stos
xor
stc
add
push
xchg
and
std
add
addr16
and
into
sbb
lcall
lods
ljmp
ljmp
xchg
xchg
stos
int3
or
sub
fidivl
cmc
sub
fiadds
mov
std
mov
adc
or
imul
jno
jmp
xor
loope
test
inc
lods
mov
out
pop
shll
ret
push
xor
push
js
dec
fnclex
jo
mov
pop
lret
cltd
stos
adc
dec
clc
fiadds
lods
rorl
sbb
aad
aam
or
inc
or
mov
stos
push
inc
test
mov
push
adc
stc
pop
add
sub
push
push
adc
ret
std
dec
and
add
mov
imul
sub
xchg
sarl
jp
insl
dec
xor
mov
push
dec
fs
mov
cld
sub
insl
sub
arpl
test
cmp
xchg
enter
jne
push
adc
addr16
aad
dec
and
cltd
std
jecxz
or
sti
push
mov
push
fsts
rcrl
mov
ds
pusha
aad
pop
pop
sub
into
jmp
and
lahf
and
cmp
add
sbbl
fnstsw
test
ss
sub
into
aam
cltd
push
das
mov
mov
jp
mov
in
dec
fildll
xchg
mov
dec
xlat
cmp
cld
outsl
ret
sbb
incl
je
mov
fs
push
sbb
fsubl
and
scas
test
cmp
mov
jno
pop
hlt
cmp
xor
jb
mov
cld
adc
out
bound
pushf
pop
push
mov
mov
and
xchg
pop
adc
inc
jl
pop
scas
fcmovne
xchg
adc
mov
mov
sbb
inc
pop
push
push
dec
add
xor
xchg
flds
or
imul
hlt
addr16
jns
adc
int
mov
jecxz
ficoms
fdivrl
mov
lods
mov
push
insb
pop
push
cmpb
sbbl
daa
pop
xor
mov
mov
js
add
enter
add
sbb
pop
cmpsb
sbb
adc
adc
in
data16
dec
adc
cmp
and
add
mov
add
lds
ja
dec
repnz
test
pop
subl
pop
inc
subb
mov
add
xchg
mov
popa
mov
sub
mov
mov
cmp
inc
popa
xor
xchg
sub
out
xchg
mov
jecxz
dec
push
sub
xor
cmp
mov
shll
loope
lahf
out
cmpsb
sbb
into
lea
pusha
aam
sbb
jg
xor
pop
adc
lahf
lds
jno
int
ficoms
and
loop
test
fcomip
imul
and
mov
rorl
adc
add
jbe
in
dec
out
jns
out
popa
loop
cltd
sbb
ds
xchg
ja
test
adcb
sub
imul
in
inc
pop
lea
nop
cmp
jbe
lahf
mov
pushf
sub
push
stos
xchg
sahf
cmp
ds
inc
arpl
mov
loopne
mov
cmpsl
ds
inc
test
xchg
and
dec
add
pop
jae
or
cli
cmp
rorb
test
cmp
repz
xor
sbb
xchg
mov
sarl
push
or
jge
inc
movsl
push
sahf
mov
repz
idivl
mov
sbb
rolb
adc
xor
xor
repz
jb
sub
lock
inc
shl
push
mov
xorb
idivb
xchg
std
insl
mov
loopne
lods
lds
adc
and
add
mov
jge
loope
out
aad
mov
les
adc
adc
xchg
test
out
ja
mov
sub
xchg
cmpb
aas
pushf
scas
jo
push
sub
jbe
test
push
mov
mov
aad
cwtl
mov
pop
cmc
sub
jl
pop
outsb
data16
notl
inc
out
in
pushf
push
lock
in
gs
mov
xchg
dec
jge
in
xor
pop
fwait
cmpsl
mov
push
ss
popl
cwtl
shrb
dec
and
push
inc
push
sub
jl
jl
movsl
or
cmp
je
cltd
nop
push
int
andb
sbb
dec
and
dec
jg
lahf
sub
repz
adc
pop
lock
data16
outsl
test
sti
fs
mov
jae
lret
jne
adc
ja
out
cmpsb
lock
cmp
lcall
adc
les
cmp
enter
gs
sub
inc
cltd
inc
jno
sbb
bound
sbb
jnp
lahf
test
pop
ret
rcll
or
bound
sbb
jmp
pusha
and
mov
mov
jmp
into
enter
jl
cmpsl
jp
mov
in
add
mov
adc
fwait
leave
test
pop
cwtl
and
adc
push
pop
xchg
xchg
sub
stc
out
bound
popf
sub
dec
push
mov
push
dec
add
inc
neg
fldt
mov
pop
sub
cltd
push
jns
xor
mov
aam
in
pop
je
add
dec
mov
insl
push
jp
adc
aad
arpl
xor
push
dec
iret
fstpt
cmp
cmpb
and
gs
sahf
dec
cmp
jle
cmpsb
ret
push
cmpsb
dec
insl
sbb
mov
cmp
in
and
push
inc
push
sbb
int
push
inc
push
add
movsl
repz
mov
adc
pop
add
pop
idivb
pop
jno
ficoml
test
sbb
cmp
imull
sbb
fwait
iret
mov
sbb
les
mov
imul
jo
cmp
rclb
lea
outsl
and
rcrl
adc
or
mov
xchg
xchg
xor
cmp
xor
xlat
mov
jecxz
jno
stc
pop
inc
and
push
pushf
ret
daa
dec
pushf
fildll
mov
cwtl
ja
sahf
test
pop
je
nop
es
in
ss
loopne
leave
pop
dec
xor
sbb
jmp
sbb
fstpl
jno
in
mov
dec
mov
push
add
sarl
adc
dec
jp
cltd
lea
js
scas
and
dec
in
mov
clc
outsl
sbb
loopne
int3
add
fsts
fsubr
daa
stos
aad
int
add
xor
fcoml
test
push
mov
add
filds
popl
pop
lcall
mov
xor
movsb
add
dec
pop
cli
test
sub
ret
mov
jle
dec
enter
jp
inc
iret
or
cs
enter
das
das
in
or
sub
call
hlt
mov
fs
pop
lcall
jnp
pop
fwait
or
inc
loopne
sub
fdivp
into
jo
out
mov
jnp
mov
dec
adc
ja
mov
add
or
sub
push
ret
in
pusha
fprem1
xchg
mov
loope
add
and
add
pop
pop
adc
stos
cld
scas
mov
enter
xchg
in
sbb
imull
jge
adc
pop
movsl
imul
mov
fstpt
sar
fsubr
in
outsb
and
xor
sub
pushf
js
jg
sub
aas
xor
test
inc
xor
cmp
dec
cmpsl
ds
nop
jo
rcrb
and
xchg
push
pop
or
fs
add
cwtl
push
std
ja
xchg
fsts
cmc
mov
test
rol
xchg
nop
mov
jl
xchg
fwait
xchg
int3
pop
jp
dec
aam
pushf
mov
out
pop
arpl
les
ja
cli
int
aaa
adc
sbb
cmc
jecxz
and
mov
xchg
inc
out
sarb
aaa
jno
push
in
pop
inc
ficoml
ss
sub
bound
pinsrw
pop
shl
insl
repnz
shr
outsb
int3
movsb
push
roll
and
aas
pop
ds
adc
mov
int
lods
aas
addr16
aad
cmpsb
les
aaa
inc
mov
mov
xor
or
pop
add
clc
adc
add
mov
xchg
scas
mov
dec
sahf
cmp
xor
or
jns
cmpsb
and
jno
xor
aad
sbb
push
fistps
adc
add
inc
fimull
adcl
iret
fmulp
lret
push
imul
mov
jecxz
and
aad
loope
sbb
shll
mov
stos
sub
lock
mov
and
push
ftst
push
fistpll
inc
sbb
arpl
and
pushf
addr16
adc
out
xchg
arpl
pop
insb
fs
sbb
mov
dec
mov
cmc
push
mov
lahf
imul
int
mov
xchg
pop
cmc
lea
inc
int
dec
xchg
and
shll
pusha
inc
clc
add
daa
add
shr
in
push
jp
inc
aaa
cmp
imul
shl
pop
jno
shlb
mov
push
or
sarb
fsubs
movsb
sbbl
pop
push
pop
xor
aam
or
sub
mov
dec
xor
ret
push
movsl
jne
fldenv
scas
rcrl
pop
cwtl
das
ss
push
inc
fiaddl
sub
in
aad
insb
js
push
push
push
lods
push
mov
or
mov
les
adc
lods
shl
loope
inc
adc
cltd
cmpsl
arpl
addb
add
pop
jbe
aam
mov
pusha
test
xchg
gs
ja
out
xor
shlb
movsl
xchg
icebp
push
mov
xchg
or
mov
pop
pop
fsubrp
jle
mov
push
jnp
imul
xor
in
sub
aad
int
xor
icebp
pop
repz
jp
out
cmp
outsb
adc
xchg
pop
imul
sbb
and
cmp
negb
push
data16
into
fwait
xor
push
in
push
and
sub
dec
scas
mov
loopne
sub
int3
js
test
lock
mov
sbb
addl
mov
out
add
jp
sbb
push
gs
push
cwtl
jne
scas
xor
adc
sub
test
cwtl
pop
stos
cmp
data16
test
sub
leave
ss
dec
mov
push
sub
xlat
xchg
xchg
push
xlat
cmpsl
sar
or
insl
dec
es
popa
pop
push
sbb
sahf
insb
roll
inc
mov
pop
pop
ss
test
ja
mov
fs
push
in
jle
mov
sbb
sbb
inc
mov
stos
pop
in
adc
xchg
inc
mov
pop
out
add
add
mov
adc
ret
rcl
mov
loope
movsl
in
xchg
mov
repz
sub
mov
cld
jae
hlt
mov
push
sbbl
scas
cmp
sub
rcrb
loope
insb
out
bound
rep
add
mov
std
mov
fmull
or
into
mov
lret
adcb
cmc
mov
mov
mov
fdiv
push
pop
mov
in
xchg
shrl
insl
inc
sahf
jp
pop
mov
cmpsb
rorl
add
inc
dec
jg
cmc
iret
iret
mov
push
sub
fstp
fidivs
enter
pop
test
mov
and
add
in
dec
loop
loope
in
mull
push
aam
add
lea
and
xor
insl
test
data16
and
lret
stos
test
fpatan
push
out
stc
dec
inc
dec
cmp
aas
fisubrs
shl
mov
mov
and
cmp
inc
das
addr16
add
flds
stc
je
ljmp
fmuls
les
push
and
lock
xchg
call
inc
lods
pop
xorb
leave
dec
xchg
mov
ret
out
xchg
inc
into
xorl
push
in
xchg
pop
jne
pushf
mov
rcrl
mov
xor
sub
fisubrl
mov
jecxz
cmpsl
repz
test
fidivs
sub
int3
lea
or
xor
inc
jl
jle
inc
rcr
jb
and
pusha
add
adc
jmp
xor
lea
fistpll
rol
inc
jg
mov
out
fidivl
mov
mov
sahf
stc
rorb
out
jmp
outsb
or
sub
and
popf
sbb
inc
icebp
ds
sbb
sub
das
add
loopne
xchg
sbb
sbb
ljmp
add
mov
xor
roll
pop
pushf
test
rcll
sbb
addr16
int3
mov
mov
mov
xlat
addr16
cmp
jp
repz
bound
inc
or
arpl
lret
out
cmp
pop
adc
lret
mov
push
lods
jl
mov
mov
mov
add
mov
mov
xchg
xchg
mov
mov
jl
or
movsl
sbb
cmpsb
or
and
xorl
in
fsubp
mov
mov
xchg
lock
xor
push
pop
cs
fxch
sbb
ljmp
push
jp
inc
xor
cli
cld
fcmovnu
hlt
adc
inc
mov
cld
data16
fs
xlat
pop
xchg
xchg
xchg
dec
mov
add
adc
test
fs
cmp
iret
jge
ss
mov
insl
mov
fmulp
dec
xchg
ret
sbb
into
mov
cmp
imul
shr
or
or
dec
popa
pop
loop
cmpb
out
loope
cmc
das
jle
loop
rcrl
jbe
f2xm1
or
push
cld
push
cmp
out
xor
jg
leave
xor
push
push
fnstenv
in
inc
xor
xchg
mov
push
cmp
js
dec
test
out
gs
imul
sbb
enter
in
jp
repz
inc
fs
adc
lods
enter
je
cmp
push
sub
jae
push
insl
cltd
or
pop
dec
dec
sub
or
bound
mov
adc
add
xchg
js
ficompl
mov
cmp
loopne
adcl
mov
cmpsb
push
jns
jmp
je
sub
fbstp
mov
push
data16
lret
lret
and
in
push
mov
pop
scas
insb
jp
sbb
adc
repz
cmpsb
sbb
std
cmp
ret
ss
in
inc
stos
add
sub
lds
add
pop
mov
es
repnz
mov
movsl
xor
dec
inc
inc
fidivrl
sbb
dec
adc
insb
jle
cmpl
add
push
mov
jle
pop
push
out
rcrb
ret
push
popf
call
mov
daa
gs
ffree
mov
xor
test
inc
loop
add
mov
and
pop
divl
pushf
pop
inc
lods
adc
test
ljmp
mov
psllw
mov
repz
call
and
push
sbbl
fmul
and
sub
shrl
and
jae
mov
dec
jg
jne
jne
sahf
jmp
call
mov
jnp
imul
imul
sub
mov
cmp
mov
push
fsubs
loop
xchg
cmc
add
pop
lcall
loope
imul
cwtl
sti
xor
push
add
cmp
sbb
jns
mov
fcomp
push
shrb
mov
adc
sbb
jmp
pop
push
jnp
xchg
nop
mov
adc
sti
dec
pop
mov
sbb
ljmp
out
cmpsb
mov
loopne
jns
mov
cld
cmpsl
lods
push
icebp
dec
or
movsl
inc
bound
lods
stos
and
fwait
notb
stos
push
scas
je
loopne
js
pop
cwtl
popa
and
xchg
xchg
dec
in
jno
adc
sahf
daa
pop
push
ss
xor
cld
mov
add
and
pop
sbb
clc
cmp
sti
xor
jmp
fldt
test
mov
hlt
adc
jge
jb
imul
sub
xchg
jno
xchg
pop
cmp
pop
andb
stos
cltd
inc
divb
dec
sub
push
cmp
push
mov
or
xor
movsb
dec
push
add
add
pushf
es
sbb
jp
jmp
je
or
das
pop
xchg
push
lods
dec
jns
jl
loope
inc
push
jns
pop
stc
popf
outsl
movsb
add
addr16
out
jae
jae
or
movsl
fs
inc
sbb
inc
and
add
xor
int3
pushf
add
lcall
outsl
fwait
vpminub
jp
sarb
imul
jecxz
or
dec
shll
xchg
and
fadd
inc
or
in
sbb
pop
xor
push
mov
mov
mov
ds
sub
pushf
pop
jmp
pop
push
roll
mov
sub
or
adc
aam
rcrb
jno
push
outsb
mov
mov
inc
fs
push
xor
subl
div
jecxz
xor
es
dec
push
mov
test
inc
dec
pop
pop
and
mov
cmpsb
ret
aad
adc
pop
out
push
xor
and
test
push
adc
jns
or
xchg
pop
xor
sbb
imul
vmovups
pop
insl
sub
mov
jb
dec
ret
mov
or
iret
lret
mov
and
adc
dec
cs
sub
rcr
loope
fidivrl
in
in
pushf
cld
in
adc
pop
mov
aaa
adc
out
adc
mov
das
pop
sti
insl
push
inc
insl
fbstp
fmuls
out
push
imul
rcll
dec
or
ljmp
xor
stos
mov
leave
stos
mov
imul
jno
popf
push
mov
das
int
ret
pop
outsl
mov
dec
push
js
or
enter
rolb
push
lea
in
mov
sub
add
cmp
sti
jl
mov
inc
adc
and
mov
fdivrl
jp
xor
push
and
hlt
and
add
push
mov
xchg
std
inc
xchg
mov
in
push
sbb
andb
and
dec
cmp
testl
std
mov
xor
push
ss
adc
and
fildl
or
mov
mov
adc
push
pusha
or
dec
jne
and
sub
sub
mov
cltd
or
pop
or
pushf
inc
in
push
inc
lock
jae
mov
les
sarl
fs
and
out
nop
mov
mov
fucom
add
mov
adc
push
hlt
insl
mov
out
sub
lods
xlat
xor
lock
subl
cld
out
rorb
xchg
jmp
movsb
das
dec
js
data16
pop
lods
sub
pop
pop
cli
dec
js
jmp
mov
inc
imul
aaa
cmpsl
mov
sub
push
scas
push
subb
cmp
fs
mov
stos
in
add
sarb
add
fdivp
ja
cld
loop
aad
shlb
inc
add
pop
notl
aaa
jg
out
pop
in
jns
lea
sbb
push
mov
cmp
adc
jae
xchg
negl
icebp
jmp
adc
aas
cmp
lods
xchg
pop
mov
dec
or
mov
pushf
sub
inc
cmpsb
cmp
xlat
aad
mov
push
push
push
inc
ds
outsl
arpl
add
inc
fmuls
popa
push
lods
mov
fisubs
fwait
mov
jb
xor
pop
xchg
mov
pop
adcl
mov
xchg
negb
pop
and
mov
stc
das
int
add
add
mov
fwait
pop
mov
bswap
push
scas
andl
xor
xor
cs
pop
mov
and
cmp
scas
std
negb
mov
sub
add
shlb
jbe
mov
sahf
rcll
imul
mov
psrad
ret
mov
shlb
add
and
imul
mov
arpl
scas
jp
or
insl
in
sub
pop
push
pop
cmpsb
mov
ljmp
adc
xchg
xor
clc
fs
and
fdiv
mov
addr16
cltd
sbb
mov
fs
cltd
loope
enter
and
andb
push
or
jg
call
dec
iret
into
fnstcw
mov
push
imul
mov
pop
faddl
lods
loopne
and
fildl
sbbb
sbb
adc
aad
xchg
jl
mov
stc
addr16
push
shl
daa
xchg
ds
sub
jb
jae
insb
pop
fnstenv
cmp
idivl
aad
pop
sbb
add
inc
ljmp
loop
mov
and
xor
hlt
in
adc
xchg
sub
add
rorb
aas
mov
xchg
dec
add
test
nop
cmc
lods
xchg
out
and
shlb
in
jae
mov
mov
gs
cmc
jb
into
fcoml
sub
fwait
pop
lcall
sub
testb
inc
sub
xchg
add
popf
stc
nop
or
pop
cmpsb
cmp
je
add
cmp
bound
xchg
sti
add
sub
cs
push
movsl
cmp
adc
jl
flds
mov
mov
notb
cli
xchg
mov
sahf
cltd
std
xchg
push
mov
push
mov
dec
fmull
js
sahf
stos
shrb
ljmp
mov
call
std
xor
mov
fs
scas
mov
rol
pop
inc
jecxz
adc
filds
test
shrl
mov
push
jmp
popa
xchg
cli
mov
movaps
or
aad
scas
jae
aam
pop
scas
es
pop
sbb
fcompl
lods
stos
adcl
clc
insb
hlt
adc
mov
cmovns
and
lret
add
inc
dec
je
jbe
out
bound
pushf
xor
cwtl
js
clc
and
adc
lds
test
add
xor
pop
jno
lods
push
pop
xchg
adcb
xor
sbb
repnz
aas
push
pusha
mov
mov
jg
add
test
add
push
or
popa
and
add
sbb
lods
ljmp
inc
mov
jle
jecxz
push
mov
bound
jo
fnstsw
mov
mov
jbe
sbb
in
aas
stos
mov
xchg
xchg
mov
add
pop
mov
rcrb
fsub
inc
dec
and
insl
jnp
in
mov
js
push
xchg
and
lods
mov
pop
cmp
popf
decl
dec
mov
push
test
ja
sub
vpunpckldq
jmp
sub
ja
cmp
adc
and
and
bound
leave
sbb
aaa
dec
es
repz
js
insb
lret
mov
or
lods
sbb
notb
mov
dec
sbb
pop
fmuls
pop
mov
jnp
insl
ret
mov
fldt
mov
mov
pop
mov
out
movsl
and
in
mov
mov
fisttpll
mov
mov
jecxz
popa
or
fistpl
push
inc
daa
push
fwait
pop
in
call
outsb
cmp
push
stc
mov
xor
sbb
nop
pop
les
cmpsb
mov
push
mov
sbb
push
out
imul
xor
inc
and
sub
add
jecxz
repnz
pusha
fucomi
xchg
sbbb
imul
std
cs
aad
jnp
movsb
repnz
std
pop
inc
push
popa
lods
push
shlb
pusha
mov
stos
repnz
pop
call
movups
gs
mov
mov
cmp
add
aas
cltd
das
les
lods
inc
adc
scas
inc
jo
push
jmp
pop
cmpsb
incl
add
outsl
xor
sahf
loopne
xchg
cltd
mov
cmpsb
xor
pusha
testl
or
ds
stc
nop
xchg
mov
leave
push
fcmovbe
push
jbe
cmp
inc
cs
and
dec
stos
push
sbb
addr16
jge
imul
sahf
xchg
mov
call
rcrb
out
inc
scas
fsubp
lret
xchg
jmp
in
push
add
xchg
push
call
adc
loop
inc
fildl
addb
jae
jmp
mov
jl
shll
xchg
loop
or
and
shlb
add
in
sbb
ficomps
test
pusha
sarb
stos
fldt
ret
es
xchg
or
rclb
xor
push
in
push
xchg
sub
mov
mov
divl
int
inc
cwtl
pop
jecxz
and
cwtl
stc
test
inc
dec
loope
in
jae
ljmp
xor
mov
js
in
or
fstpt
jl
lret
mov
into
test
sarb
outsl
sbb
mov
int3
mov
lret
pop
imul
shl
sbb
out
mov
push
movups
sub
aad
jne
sbb
repnz
lock
adc
or
cmp
jno
ret
fsubl
pop
lds
pop
mulb
icebp
jge
jnp
add
test
andl
cltd
dec
pop
into
sub
and
js
std
xchg
pusha
sbb
sbb
pusha
aad
iret
mov
cmp
outsl
outsl
roll
das
pusha
push
add
call
push
mov
fcom
lock
mov
add
and
pop
insl
lret
jle
stos
inc
lock
jne
xchg
leave
cwtl
dec
fiadds
nop
push
push
clc
adc
push
xor
jbe
sbb
cmpsb
xchg
decl
imul
mov
lcall
sub
mov
xchg
sub
inc
js
fs
mov
mov
push
fdiv
mov
or
inc
fistpl
outsl
pop
aaa
mov
cmpsb
lret
adc
je
add
jb
ja
mov
out
popa
jecxz
pop
mov
nop
sub
in
xchg
shlb
aam
or
filds
bound
shll
pop
add
pushf
sbbl
cmp
jo
sbb
sub
lret
xor
jl
stos
clc
adc
fwait
push
loope
push
into
or
aad
pop
in
push
push
sti
mov
rcrl
or
xchg
imul
aam
sbb
adc
test
andb
push
imul
mov
lcall
clc
xchg
inc
dec
sub
or
dec
adc
jge
push
pop
ja
add
mov
and
mulb
pop
xchg
pop
rcrb
push
ficoms
in
jae
mov
call
mov
sub
sbb
xchg
movsl
inc
enter
in
inc
jae
xor
cmp
sub
popf
inc
pop
rcrl
into
daa
sbb
addr16
lods
adc
mov
fs
add
mov
xlat
jp
xchg
push
nop
pop
icebp
call
mov
fwait
push
cmpsl
cld
adc
loope
mov
mov
stos
sti
inc
sti
lock
jecxz
adc
imul
jecxz
mov
push
sub
push
mov
iret
and
dec
push
adc
enter
cmc
loope
fdivp
mov
test
fsubr
stc
push
xor
cwtl
aam
xlat
fstps
jle
mov
mov
jge
fnstsw
fists
stos
xchg
add
add
xchg
jp
cmp
ret
dec
push
mov
shlb
push
test
mov
gs
jl
adc
mov
mov
cmpsb
cmp
pushf
xchg
pop
pop
cmp
push
mov
divb
cmp
push
mov
cwtl
mov
fwait
push
xor
adc
and
xchg
or
jns
out
in
fcompl
rcrb
mov
jecxz
addr16
arpl
cmp
cmp
enter
jne
adc
fld
sub
sbb
and
imul
xor
aad
sbb
je
or
fiadds
mov
and
jo
inc
mov
dec
add
fs
and
jle
repnz
cmp
adcl
test
mov
incl
fidivrl
loope
icebp
mov
addr16
sbb
xorb
jno
fidivrs
or
int3
arpl
cmp
mov
lret
aaa
mov
test
daa
sbb
dec
dec
sub
mov
xchg
pop
cli
lcall
shlb
inc
jo
sub
inc
inc
fs
bswap
jae
loopne
dec
rclb
and
sbb
in
stos
mov
negl
pop
xor
xchg
push
and
mov
inc
out
mov
pushl
mov
shr
xor
mov
push
filds
sbb
sub
cmpb
mov
pop
enter
push
scas
xchg
push
inc
lahf
js
je
sbbl
xchg
push
bound
adc
out
jnp
cmp
dec
scas
xchg
mov
dec
mov
data16
mov
lock
adc
mov
jmp
mov
loopne
outsb
mov
jae
dec
fucomip
fwait
and
popf
test
xlat
or
cmpb
mov
lcall
sarl
popf
xlat
push
xchg
adc
scas
fiaddl
mov
insb
lret
xor
inc
xchg
stos
idivl
xor
xchg
push
pop
and
mov
adc
shl
lahf
mov
shrb
popf
push
and
shr
or
daa
cmp
adc
xor
jns
cmp
push
xchg
cmp
sub
add
not
or
mov
inc
and
ret
xlat
xor
mov
mov
xor
xchg
mov
repnz
aas
sub
and
ja
subl
dec
loop
and
and
fiaddl
iret
int3
loope
mov
into
xor
push
test
out
sbb
in
mov
jns
out
insb
sub
pop
pushf
jae
out
dec
pop
sbb
jbe
imul
pop
shl
add
daa
ficompl
xchg
fildl
mov
cld
pop
into
fiaddl
push
in
pop
pop
push
mov
neg
das
test
fisttpll
xchg
arpl
bnd
and
jge
mov
add
jns
cmpb
das
mov
mov
lock
imul
mov
mov
and
jp
out
mov
aad
rcrb
adc
addr16
insl
lret
pop
push
add
lods
cmp
fdivs
aam
mov
das
int
jmp
in
outsb
outsb
jle
xor
mov
and
xlat
inc
dec
mov
fsubrs
dec
in
sbbb
sti
repz
into
and
out
inc
shrl
push
stc
movsb
mov
rcrb
gs
jo
data16
or
mul
stos
fwait
test
clc
cmc
insb
popf
das
scas
adc
pop
xchg
and
mov
dec
in
es
hlt
lcall
pop
mov
dec
in
ja
andl
sub
push
jle
pop
xor
fdivs
lods
and
test
rorb
or
cmp
lea
push
stc
cmpsb
pop
ret
repnz
lret
or
and
xchg
jno
pop
scas
and
sub
mov
lcall
xchg
sub
loope
ret
call
or
dec
sti
rcr
mov
mov
pop
mov
cmc
mov
cmp
adc
lahf
mov
dec
stos
out
mov
push
mov
cmp
neg
inc
fisttpl
sbb
xchg
mov
ret
and
outsb
mov
sahf
and
mov
cmp
mov
dec
push
pop
xchg
push
test
push
mov
clc
mov
push
jl
rep
test
push
and
add
push
das
xchg
jp
sub
addb
lahf
pop
mov
xchg
addb
jecxz
push
xlat
cmp
push
add
cmp
js
jl
bound
mov
mov
cs
add
push
in
jb
insl
mov
jne
sahf
hlt
mov
pop
add
incb
and
popl
inc
push
stos
xlat
outsb
push
mov
pop
scas
mov
mov
in
pop
lret
divl
xchg
scas
xchg
enter
mov
dec
push
test
jl
xor
mov
sub
mov
ror
pop
jmp
fcoms
stos
jl
xor
or
pusha
inc
xchg
xchg
pop
jecxz
stos
jne
add
jg
jb
add
and
or
sbbb
shll
xchg
outsb
mov
dec
orb
jp
mov
lret
ja
pop
cmpb
gs
mov
hlt
jnp
adc
rol
mov
cmp
inc
fsubrs
or
mov
mov
jae
push
lock
add
stc
loopne
adc
inc
mull
sub
test
xor
sub
mov
das
test
ja
aam
das
incl
sub
push
in
jg
lds
mov
add
mov
lcall
sbb
jecxz
aad
dec
mov
mov
mov
inc
cli
in
sub
rcrl
mov
fucomip
sub
add
imul
loop
xchg
lods
sbb
push
fisubrl
xchg
mov
aad
mov
int3
imul
mov
cmp
pop
or
addr16
sub
jmp
mov
roll
jl
aaa
push
je
xchg
in
xor
loop
outsl
add
push
pop
xchg
add
fsubrs
xchg
cs
cld
jne
xor
mov
faddl
add
std
add
add
mov
lcall
lods
ljmp
popf
sub
vpsadbw
jno
jne
stos
dec
adc
in
repnz
mov
rolb
clc
jno
imul
test
sbb
and
inc
popl
add
sbb
loope
into
neg
sbb
cmp
inc
dec
cmp
shrl
fcoml
jmp
mov
pop
sbb
ret
pop
psllw
ja
pop
cltd
cld
inc
add
jae
push
or
in
mov
sarb
dec
icebp
sbb
ds
repnz
xchg
movl
add
sbb
pop
mov
cmp
loop
rcrl
mov
loopne
icebp
lret
imul
jo
orl
jl
sbb
shll
lret
cmp
cmp
ja
sub
loop
mov
pop
mov
lock
xchg
mov
inc
jns
call
cmp
adc
push
cmpsl
adc
loopne
pushl
in
shrb
inc
lods
lods
sbb
int3
jg
and
push
inc
loop
xchg
xor
or
xchg
stos
xchg
pop
mov
jle
les
lret
out
subl
test
add
or
cmp
mov
sbb
pop
lret
rcrb
mov
repz
icebp
frstor
push
shlb
cltd
or
pop
lods
inc
inc
xchg
xchg
repz
sbb
test
push
rorb
repnz
sbb
ret
iret
stos
xchg
into
clc
dec
add
sbbl
in
sub
lret
insl
jl
cmp
jge
and
mov
mov
imul
dec
addl
test
sub
xor
mov
mov
lahf
cmp
cld
xchg
jecxz
mov
movsb
mov
mov
jge
inc
fs
sahf
insb
jg
icebp
sbb
and
ficomps
jnp
popf
pop
call
and
mov
jb
sub
sbb
pop
leave
movsl
addr16
js
in
stos
mov
fistl
and
insb
push
jno
mov
js
mov
and
decl
outsl
lahf
mov
jecxz
sub
mov
xchg
arpl
jecxz
clc
cltd
movsl
xchg
or
mov
jno
push
cwtl
ljmp
xor
call
jno
sub
imulb
or
les
and
movsb
push
jmp
test
outsb
sub
bswap
cmp
sahf
cmpsb
or
shl
daa
cvtdq2ps
shll
add
cmpb
roll
in
ffree
call
mov
rolb
addr16
in
cwtl
ja
imul
insl
sbb
rorb
cmpsb
add
mov
fdivs
adc
inc
bound
push
xor
ret
jmp
cmp
push
outsl
sbb
pusha
dec
adc
push
out
xor
test
sub
jns
aam
cmp
cmc
fnsave
inc
cltd
mov
sti
flds
dec
or
ljmp
inc
lods
pop
push
es
icebp
lcall
int
inc
or
mov
push
dec
cmpb
pop
mul
stos
lods
je
ja
repz
mov
ret
cld
ror
or
ds
push
mov
pop
pop
insl
loope
sbb
jne
add
adc
fildl
add
mov
fcmovu
fidivrs
fs
adc
addl
cmc
rolb
mov
xchg
movsb
inc
stos
lea
cmc
xchg
mov
push
jns
lock
and
jo
jo
mov
sub
mov
xchg
test
jno
ret
sbb
lret
daa
add
scas
out
adc
mov
sub
jbe
jb
fs
jp
jge
jecxz
xchg
cltd
enter
mov
mov
jp
mov
sahf
cmp
sbb
mov
add
or
or
ljmp
out
aad
xor
xchg
icebp
mov
lret
out
call
or
out
xchg
mov
or
sbb
push
dec
pushf
iret
push
in
adc
mov
jecxz
mov
xchg
addr16
mov
fucom
in
mov
inc
pop
cld
movlps
pop
pop
xor
jl
jle
enter
add
jbe
mov
ret
dec
and
aam
adc
xchg
loopne
repz
int
mov
ret
pop
movsb
out
cmp
in
mov
call
dec
jne
rorl
call
cltd
inc
scas
loope
jecxz
gs
push
fbld
sbb
cltd
fidivrl
fnsave
pop
int
push
mov
xor
push
insb
inc
push
rcrb
movsb
js
dec
xor
cmp
jp
mov
jnp
int3
push
adcl
sub
ficoms
jge
cld
daa
push
fdivrl
stos
jns
or
mov
dec
mov
test
or
pop
aad
push
cmpsb
jg,pt
xor
test
or
imul
sbb
push
mov
shl
xor
test
imul
inc
sahf
imul
and
pop
out
pop
cmp
pop
pop
dec
dec
aad
jecxz
fidivl
cmp
fs
les
push
loop
test
aas
ret
inc
sub
xchg
xchg
imul
and
out
mov
lret
cld
jmp
in
xchg
sbb
cmp
cwtl
fbstp
and
dec
dec
xor
pop
xlat
fs
cmp
xor
scas
xchg
lahf
or
stc
movsb
xor
mov
clc
adc
mov
sub
cmp
dec
cli
adc
sti
in
mov
pusha
mov
pusha
daa
adc
fisubrl
dec
shll
lock
scas
mov
push
into
ja
or
lock
xor
pop
movsb
cmp
aad
roll
ret
mov
loopne
mulb
mov
xchg
int3
push
out
jg
adc
out
outsb
fwait
sub
pop
mov
pushf
popf
mov
push
stos
ret
or
sti
addr16
cwtl
popf
clc
jae
cmp
repnz
or
jne
inc
lcall
or
pop
xchg
push
jl
push
inc
mov
mov
cmpsl
mull
add
add
sbb
cmp
add
fisubs
mov
daa
sbb
cmp
dec
sub
cmp
fdivp
aas
mov
jle
aad
loopne
popa
push
jle
mov
and
xor
outsb
add
orl
ret
lahf
mov
mov
dec
cmp
fldcw
mov
inc
mov
popf
mov
push
cwtl
cli
in
mov
dec
jno
jge
mov
fwait
pop
pop
xor
inc
jmp
jecxz
mov
mov
or
ds
arpl
insw
or
xchg
pop
sahf
cmc
cmpsl
imul
ljmp
adc
push
adc
jge
adcl
add
dec
shlb
jb
xor
filds
and
inc
fstpt
lcall
mov
inc
sbb
sbb
popf
outsl
mov
movsb
add
mov
sub
popa
cmp
in
jg
mov
mov
push
mov
popf
das
xor
pop
or
sub
xor
push
rol
repz
jns
add
jno
jecxz
in
lcall
adc
sub
mov
test
repz
cs
mov
movsb
add
add
jae
stc
sbbl
lods
jge
adc
dec
lds
test
fcmovnb
fistpll
or
mov
or
mov
not
add
mov
jnp
jp
pop
fdivl
sub
call
xchg
mov
jle
lret
mov
pushf
pop
mov
push
loope
popa
adc
mov
dec
enter
out
cmp
inc
gs
aas
push
sub
dec
setno
fistl
push
fstps
mov
lock
mov
int
sar
clc
cmp
mov
in
test
fistps
subb
test
mov
test
jno
jae
rolb
xchg
pop
sahf
push
mov
jno
sub
jne
out
jl
jg
cs
pop
mov
test
lret
out
int
inc
out
add
add
sub
dec
insb
shl
popf
push
add
std
mov
ja
cmpsb
lock
mov
jns
push
call
clc
nop
mov
push
fs
adc
push
push
inc
pop
mov
imul
mov
mov
in
mov
pop
mov
sub
pop
movb
add
mov
fisttpl
pushf
xor
rclb
mov
inc
mov
mov
xchg
or
mov
fsub
jnp
nop
jae
adc
ss
mov
test
mov
cmp
cmpsb
hlt
outsb
push
cmpsb
outsl
add
mov
inc
and
jne
into
push
jg
in
pop
loopne
sar
or
pop
imul
stc
lods
pop
out
adc
rolb
push
xchg
sub
fdiv
xor
js
jne
mov
das
stos
jae
das
hlt
xor
out
adc
aas
push
dec
arpl
rcll
fisubl
fildl
pop
arpl
iret
and
pop
jle
dec
xchg
movsl
push
pop
movsb
mov
js
aam
outsb
and
pop
cmc
lods
sub
jp
test
sub
negl
sbb
repnz
sub
cwtl
out
ret
dec
loop
and
mov
jno,pn
pop
popa
xor
jg
cmpsl
push
sbb
xchg
cwtl
add
jmp
adc
cltd
mov
gs
movsl
mov
scas
push
mov
fisubs
mov
sbb
mov
dec
xor
mov
inc
icebp
in
dec
popw
rcr
cmc
testl
or
test
idiv
lods
inc
inc
sbb
sbb
decb
fcompl
add
inc
dec
adc
dec
mov
add
jge
inc
lods
inc
jae
scas
and
dec
jp
test
jo
sub
jg
in
ds
push
cs
pop
pop
jbe
inc
insl
test
insb
insl
jns
push
scas
xchg
adc
sahf
mov
test
out
incl
shlb
jae
xchg
ds
add
out
inc
pop
push
and
xchg
mov
inc
daa
inc
fnstenv
pop
out
dec
pusha
idiv
repz
hlt
lods
jge
sub
ja
mov
push
pushf
seto
dec
pop
enter
xchg
fdivrs
pop
adc
rorl
mul
lret
cld
stos
jge
repz
mov
test
jb
enter
popa
out
pop
adc
fldl
xor
mov
test
sub
inc
stc
mov
add
sti
xor
loope
and
push
pop
and
sub
std
stos
or
inc
loope
jno
and
sti
xchg
test
cmp
lret
sbb
cld
jg
test
xor
das
scas
jnp
lcall
addr16
lahf
xchg
popf
cwtl
mov
fldcw
sbb
inc
lods
bound
loopne
xchg
inc
movsb
cmp
pop
lods
sbb
fnstsw
ret
enter
pop
cmc
aad
testb
test
stos
dec
in
mov
add
jns
mov
int3
fsub
inc
addr16
fistl
and
dec
cld
or
push
jp
push
sub
lcall
cmp
mov
push
sbb
fisubrs
dec
gs
dec
mov
sub
or
pushf
daa
push
add
test
jle
call
into
xor
ja
scas
mov
enter
dec
fidivl
cmp
sbb
jp
lea
popf
jno
lahf
not
inc
cld
cmp
add
incb
and
adc
xchg
mov
jb
cmp
cmpb
add
lret
cmp
push
lods
nop
jbe
sub
xlat
cs
shr
push
sub
cmc
mov
lcall
data16
adc
jbe
daa
cmp
adc
inc
or
sti
jb
push
pushf
mov
sub
stc
pusha
push
notl
jae
hlt
dec
jmp
mov
pop
xor
and
xchg
test
pop
and
xchg
and
pop
lret
cmp
js
jg
pop
loope
filds
pop
mov
dec
les
push
inc
inc
vpunpckhqdq
lods
dec
fildll
fwait
or
popf
ret
adc
pop
cmp
xchg
aam
lahf
call
repz
cmp
addl
mov
in
out
push
and
cmc
roll
cmc
xchg
cs
rclb
sbb
and
dec
sbb
mov
imul
aam
popl
sbb
or
mov
test
mov
hlt
jle
dec
pop
cs
mov
cltd
xor
loopne
xchg
icebp
mov
adc
fdivs
inc
mov
mov
testl
dec
jnp
call
xchg
or
dec
gs
mov
lea
shr
cli
cmp
add
xor
mov
adc
adc
jmp
adc
add
jo
and
adc
mov
gs
jno
jb
fstpt
or
pop
cltd
lock
mov
int3
push
or
int3
jmp
mov
xchg
rcrb
inc
bound
pop
pop
in
jne
sub
hlt
stc
mov
xor
lret
lret
mov
mov
mov
ret
inc
lock
loop
inc
hlt
mov
pop
test
into
xchg
fmull
scas
inc
mov
push
and
int3
cs
pop
imul
lods
and
mov
repz
mov
pop
sarb
icebp
dec
push
or
cwtl
les
jmp
or
pusha
xchg
push
or
repz
outsb
lods
test
jno
sbb
xor
cmp
dec
into
add
adc
sbb
sbb
outsb
out
es
push
leave
sbb
es
cmp
imul
mov
jp
inc
nop
cmp
pop
loopne
xchg
orb
stc
aas
jl
stos
lods
pusha
stc
test
inc
adcl
mov
pop
addr16
leave
adc
in
adc
push
daa
fmul
outsl
mov
sub
pop
lahf
insb
fcoml
pop
cltd
xor
inc
pop
jno
push
in
mov
xor
or
int3
jg
cmpsl
xor
and
xor
hlt
mov
dec
aaa
sti
ja
test
cwtl
subb
xor
addb
fnstcw
aaa
adc
adc
rcll
or
sbb
es
mov
cli
popa
adc
dec
pop
out
and
ss
icebp
js
mov
mov
inc
adc
lcall
jmp
push
pop
and
test
shl
add
out
and
xchg
pop
mov
enter
push
add
into
std
vhaddpd
sbb
push
or
or
xor
pusha
mov
adc
jmp
push
fldcw
shll
jnp
mov
jmp
dec
ss
push
xlat
sub
imul
xchg
mov
insb
popf
or
adc
xor
arpl
ljmp
adc
mov
stos
or
cli
lcall
cwtl
mov
pop
js
or
sti
inc
adc
jp
add
xor
in
mov
adc
dec
xchg
mov
les
shrb
dec
dec
mov
adcb
insl
repz
xchg
mov
stc
imul
or
lock
in
push
push
int
fildll
int3
in
daa
jnp
test
dec
cltd
les
add
push
pop
inc
xlat
in
cmc
push
dec
in
xchg
mov
fldt
dec
lds
out
mov
cwtl
call
fbld
xor
cmp
xchg
sti
or
daa
mov
jmp
or
insl
sub
pop
fnstsw
inc
mov
lods
jecxz
pop
jbe
xor
pop
xchg
and
adc
add
xor
add
sub
ret
jnp
push
jns
mov
or
jae
aaa
mov
shlb
xchg
push
mov
lea
jno
stos
sub
add
rclb
mov
mov
dec
insl
mov
aad
mov
iret
data16
jne
les
fwait
add
xchg
sbb
arpl
ror
fiaddl
xor
andb
fnstsw
xchg
mov
mov
jnp
test
aam
je
out
dec
mov
inc
xchg
fists
sub
push
push
dec
sbb
lods
pop
ficoml
cmpsb
xchg
stos
div
add
adc
in
aaa
xlat
xor
or
adc
ss
or
ss
arpl
mov
movsl
fcomps
xchg
shlb
dec
inc
loop
xchg
dec
lahf
mov
xlat
push
fcmove
mov
sub
cmp
pop
adc
jae
push
cmc
adc
adc
ljmp
shll
cmpsl
std
pushl
bound
fiaddl
pop
mov
lods
bound
dec
xchg
or
insl
sarl
sbb
mov
mov
sbb
mov
inc
dec
pop
xchg
adc
dec
adc
repnz
ljmp
in
adc
movb
cli
mov
ss
push
sbb
jae
ret
in
aam
je
lahf
lret
xchg
sub
sbb
cli
cmp
cs
insb
das
mov
pslld
jp
mov
jno
adc
imul
int
leave
push
fmull
lret
test
outsl
ljmp
xor
pop
or
push
aad
xchg
adc
mov
mov
shrb
pop
pop
fisubrl
outsl
ret
add
loope
sbb
lock
mov
inc
imul
dec
popa
jmp
cmpsb
mov
repnz
test
loop
negb
push
rcrl
xor
dec
shr
dec
dec
mov
inc
mov
jo
mov
dec
mov
mov
dec
jge
imul
mov
mov
lret
fs
adc
cmpsl
pop
lret
jb
pop
icebp
push
into
in
inc
mov
add
es
loopne
aad
jb
inc
aam
jge
sbb
sbb
sub
leave
sbb
pop
mov
sbb
add
lods
pop
icebp
fstl
or
jns
pop
icebp
sbb
jl
fidivrl
add
mov
xchg
mov
cmpsb
cmp
xor
add
mov
in
push
pop
ljmp
outsb
push
stos
inc
jbe
inc
mov
push
fsubl
xor
std
or
inc
jnp
adc
jl
xor
cmp
mov
sub
mov
movsl
fs
add
or
ja
xchg
icebp
pandn
iret
pop
cmpsl
jbe
mov
cmp
sub
pusha
cltd
sub
shr
les
imul
pushf
mov
movl
xchg
cmp
xchg
push
lods
push
in
push
gs
push
xor
pop
fisttpll
add
dec
outsl
fucomi
jl
push
shlb
xorl
push
ss
stos
jmp
jno
add
mov
mov
mov
push
adc
lret
cmp
cmpsl
arpl
lea
out
dec
into
mov
sub
pushf
dec
lock
aaa
mov
jge
adc
bound
movsb
nop
out
or
mov
adc
pop
aam
xchg
repz
xor
aam
push
inc
xlat
jb
push
cmp
das
add
and
shll
inc
push
outsb
xchg
and
pop
imulb
fwait
bound
sbb
int3
jle
popf
pushf
fsts
addl
jo
push
dec
jl
cmp
addb
mov
fs
sbb
cli
jl
aaa
sbb
and
js
adc
hlt
sub
outsb
push
push
iret
and
push
cmp
movsl
add
jo
and
push
jnp
stos
lods
jle
dec
xlat
gs
and
mov
cs
mov
jle
mov
aaa
loop
in
adc
sahf
mov
push
call
push
mov
fcomps
pop
xlat
outsb
mov
mov
ret
test
clc
test
shl
test
bound
mov
iret
call
mov
mov
push
je
jno
f2xm1
xor
push
cwtl
jmp
sbb
xor
and
in
xor
aad
call
dec
sbb
leave
fsqrt
mov
jnp
jmp
xor
add
movsl
mov
icebp
insl
jl
sub
xchg
mov
dec
mov
movsl
sbb
in
test
push
lea
iret
pusha
clc
lock
in
push
xor
imul
adc
fadd
jl
cld
stc
adc
inc
stc
ret
loope
scas
cltd
push
std
lds
mov
into
int
add
xor
xchg
in
std
xchg
xor
xchg
jb
lret
std
jae
sub
dec
scas
test
sahf
jecxz
jne
ss
cmp
hlt
pop
jno
cltd
pop
or
mov
or
mov
lcall
lock
mov
mov
add
pop
sub
lret
out
in
mov
pop
add
xor
and
mov
dec
mov
pop
movb
cltd
clc
inc
mov
pop
cmp
fldl
adc
dec
sti
and
mov
adc
xor
sub
pushf
fildl
leave
test
pop
or
cltd
xor
push
flds
inc
sub
repnz
sbb
adcl
or
ret
andb
add
outsb
xor
pushw
adc
movb
mov
sbbb
sbb
int
movsb
cli
mov
test
fcmovnb
xchg
insb
add
push
jno
rol
pop
mov
stos
je
inc
movsl
cld
and
sbb
push
jmp
test
repnz
lret
sbb
fs
and
repz
or
ja
out
cwtl
sub
lds
xor
faddl
xor
int3
pop
imul
jmp
popf
decl
push
lock
sahf
aas
add
sahf
xor
testb
into
and
xor
mov
cmp
out
sahf
or
mov
fdivrs
imul
sbb
xor
lods
ja
arpl
mov
ss
sti
scas
incl
outsb
push
push
sbb
mov
imul
cltd
xchg
push
mov
jle
ljmp
cmc
push
adc
mov
sbb
sub
add
xchg
mov
sbb
dec
movsb
shlb
xor
xor
or
inc
add
mov
dec
adc
fucomip
pusha
stos
xor
jae
mov
leave
test
push
popf
inc
xlat
sbb
pop
mov
cmc
orb
ljmp
int
scas
mov
jno
push
add
jbe
cmc
int3
mov
rorb
and
sbb
or
mov
aam
pmaxub
dec
mov
gs
arpl
jae
dec
or
shrb
xchg
imul
testl
jae
addr16
xlat
mov
xchg
mov
in
cwtl
rorb
bound
sbb
rcrb
test
push
fucomi
xchg
outsl
and
adc
jg
into
adc
stos
inc
jae
push
ror
xor
sbb
ja
lods
dec
dec
xchg
ds
push
jmp
xor
repz
xor
xchg
leave
fnstenv
sub
sub
pop
xchg
mov
fsub
rcrl
cli
shr
rclb
lret
dec
mov
xor
sbb
fwait
sub
mov
loope
addr16
sbb
inc
data16
cmp
xchg
test
add
ret
jle
nop
xchg
dec
push
xor
pop
and
stc
data16
inc
push
push
idiv
mov
aas
loop
cs
sarl
add
repnz
push
mov
push
push
mov
inc
lret
xor
sub
arpl
out
lcall
repnz
add
test
and
mov
imul
mov
subb
sbb
inc
pop
pushf
fnstsw
push
repz
mov
pop
jle
ljmp
dec
mov
push
fisubl
shll
int3
cmp
pushf
in
add
int
ds
outsl
mov
scas
jmp
and
mov
pop
mov
lea
sbb
push
sbb
or
ljmp
repz
clc
mov
lret
jb
inc
out
movsl
aam
rclb
les
xor
pop
stc
cld
negb
cmp
mov
add
lods
sarl
inc
add
addr16
jmp
movsb
push
cltd
inc
mov
jg
inc
push
loopne
test
lret
loope
cmp
or
loopne
and
xor
ljmp
das
mov
push
test
lret
xchg
mov
or
push
add
inc
xchg
out
dec
mov
xchg
stos
mov
fbld
repnz
dec
mulb
roll
imul
ja
cmp
shl
push
repnz
mov
fcmovnb
xlat
push
or
in
insl
inc
cmp
xchg
push
fstpt
cli
mov
aam
rcll
lret
push
ljmp
imul
add
call
xchg
scas
jp
dec
jge
sbb
imul
mov
mov
fists
pop
or
into
insl
dec
sbb
push
dec
pop
cmp
sti
daa
mov
xchg
in
repnz
test
stc
sub
sbb
pop
push
inc
pushf
inc
xchg
mov
inc
cmp
cmp
lods
pop
add
fimull
nop
or
mov
xor
outsb
pushf
push
cli
jge,pn
xchg
jecxz
out
test
xor
sub
push
adc
push
mov
lds
inc
push
inc
jae
pop
dec
je
lock
imul
lock
cld
jns
lahf
inc
das
xchg
sahf
stos
lds
cltd
jb
addr16
clc
pushf
mov
mov
push
or
mov
fnsave
pop
jno
mov
pop
sub
shll
sbb
popf
push
lahf
add
aam
pop
cmp
mov
jne
jg
sub
out
das
cld
pandn
push
addr16
sbb
xchg
mov
fnstcw
test
pop
mov
mov
std
ret
bound
insl
or
mov
in
mov
flds
xchg
mov
leave
out
add
xor
shr
sub
mov
xor
jae
cli
xor
jle
scas
add
into
mov
in
lds
aas
call
sub
sbb
cmp
jmp
adc
push
mov
icebp
sub
add
negl
jle
xchg
sbb
sbb
dec
fcoml
or
addr16
xor
pop
outsb
fistps
hlt
xchg
imul
mov
cmc
lds
stos
adc
call
fwait
and
daa
push
push
scas
mov
push
fwait
push
fsubl
and
mov
and
push
cmp
test
push
pop
xor
sbb
mov
mov
out
jo
jbe
lds
in
mov
sbb
xchg
push
mov
jecxz
repz
jmp
jg
dec
mov
test
pop
aam
dec
or
ja
jne
dec
mull
or
pop
lret
and
mov
lea
lcall
mov
push
in
xor
insl
nop
cld
push
mov
aas
pop
push
cmp
jno
sbb
inc
jb
and
dec
cmp
in
jge
in
outsb
jge
sbb
mov
rcrb
imul
push
mov
push
or
icebp
mov
rorl
push
xchg
sbb
xlat
xchg
adc
and
sub
xchg
dec
in
cmp
dec
add
stos
das
push
add
cmp
inc
xor
jmp
fcmovbe
mov
add
adc
dec
and
jns
mov
adc
inc
loopne
xor
stc
ficomps
mov
sbb
mov
sub
out
jl
xchg
insb
clc
pop
dec
adc
and
popa
fadd
stc
push
rorl
sbb
push
push
and
int
dec
push
in
mov
xor
xchg
dec
sbb
mov
push
aas
inc
lahf
xor
push
cmpsl
inc
dec
insl
ret
aas
xchg
rorb
xchg
jge
test
leave
pop
sbb
popa
jbe
and
lods
push
xchg
andb
mov
popa
pop
fldcw
pushl
jae
dec
movsl
xchg
movsl
mov
pop
nop
sub
shlb
mov
dec
fsubs
lahf
lods
or
pop
lret
xor
jne
outsl
lods
push
mov
scas
push
sbb
jbe
mov
testb
jmp
fsubrl
sbb
xor
pop
mov
dec
mov
xchg
gs
lods
pop
imul
sub
inc
ja
addr16
dec
repnz
jecxz
xchg
push
mov
aad
loope
aad
lds
mov
rcrb
push
sub
cmp
mov
out
cwtl
stos
and
sub
lret
xor
mov
cltd
fucompp
fsubrs
stos
and
jmp
lock
ret
add
cs
jecxz
call
inc
mov
btsl
rcl
mov
sub
sbb
fistpll
ja
add
dec
outsl
mov
in
and
ljmp
sbbl
aam
faddl
lds
aas
hlt
testl
inc
ret
cmp
ds
cld
cltd
mov
push
pop
push
fnstenv
xor
rcll
test
fs
xchg
adc
cmc
adc
out
cli
pusha
mov
adc
cmp
pop
call
cs
fstps
lods
mov
mov
inc
ret
fimull
cmpsl
sbb
fsubrp
inc
mov
xchg
cs
fmul
dec
test
mov
out
mov
jns
mov
mov
les
inc
jecxz
mov
xor
push
fs
xchg
dec
push
jbe
cs
dec
loopne
or
xchg
push
sub
lcall
mov
cmp
pushf
mov
xchg
andl
add
movsl
jp
rcrb
fiadds
pop
out
test
mov
cmp
xchg
ds
adcl
lods
inc
scas
sub
outsb
push
dec
mov
dec
adc
mov
test
lds
mov
rorl
and
push
out
rorl
in
add
xchg
pop
mov
lds
js
out
clc
or
push
shlb
push
mov
cmp
mov
pop
mov
ds
adc
mov
push
and
cli
movsl
in
or
xlat
sar
or
clc
test
gs
xor
dec
cmc
adc
mov
push
mov
mov
fnsave
sub
cmp
jne
sti
ret
cmp
xor
xchg
xor
out
push
je
cld
arpl
sarb
inc
movb
jo
fidivl
aam
shlb
lds
ds
pop
repz
movsl
pop
jb
cli
jbe
rorl
mov
insl
xor
jg
xlat
lock
adc
rcrl
xor
mov
out
mov
or
adcb
adc
shrb
out
inc
call
lcall
pushf
je
into
test
mov
ja
inc
xlat
in
cltd
test
xchg
mov
jnp
in
test
movb
sbb
outsb
mov
aas
xor
and
subb
into
das
mov
sbbb
sub
cs
jmp
imul
cld
insb
xchg
das
lds
jle
pop
es
mov
cli
dec
popa
mov
int3
add
sub
or
add
cmp
dec
jmp
repnz
icebp
mov
pop
xchg
dec
dec
xchg
cmp
outsb
xchg
pop
mov
test
push
dec
arpl
cmp
fdivr
sub
xchg
mov
paddsb
cmp
or
push
or
adc
fsubl
mov
pop
sub
std
outsl
sbb
fists
dec
dec
ret
adc
fwait
or
xrelease
sub
sbb
mov
das
inc
xlat
add
dec
lret
and
dec
ficoms
pop
mov
je
mov
data16
mov
add
push
push
lahf
test
fstl
js
mov
xor
shlb
daa
loopne
adc
inc
xor
xor
stos
pop
inc
push
das
jb
addr16
xor
sbb
and
ror
mov
in
push
fxsave
mov
mov
inc
push
or
cmp
jns
xchg
repnz
adc
outsb
cmp
jbe
xor
sbb
orb
sbb
cltd
sub
xchg
pop
mov
mov
mov
add
fwait
fwait
and
out
add
cmp
dec
cmp
pop
jno
push
icebp
sbb
sbb
cmp
pop
push
decb
push
mov
sub
or
xchg
out
sub
out
push
dec
jno
xlat
testl
mov
mov
mov
aad
lods
mov
test
insl
jbe
in
das
pop
mov
in
jne
cwtl
dec
xor
in
push
ljmp
jmp
sub
xor
sub
add
push
dec
ret
mov
xlat
outsb
push
jae
out
stc
out
xchg
cld
leave
in
cmp
inc
or
sarl
lret
mov
sbb
mov
sbb
jecxz
incb
imul
sub
xchg
mov
jae
lea
sub
pop
addr16
mov
xchg
std
pop
mov
push
mov
push
loopne
stos
outsb
push
ds
mov
jl
ds
sbb
fnop
insb
sbb
sahf
icebp
pop
cmc
jb
jns
mov
movsl
sti
push
xchg
pop
sbb
mov
es
mov
push
dec
loop
testb
pop
leave
test
jbe
orl
jp
jle
dec
sbb
cmpsl
and
cmpb
sahf
fwait
sub
mov
shll
dec
mov
push
call
in
aas
dec
pop
mov
xchg
sub
push
cs
idivl
int3
sub
jl
fbld
cmc
push
in
es
xchg
das
xchg
mov
cmpsl
pop
dec
dec
int
std
fbld
pop
scas
outsb
iret
jmp
imull
xor
shrl
insb
inc
in
sub
mov
fsubr
sbb
test
dec
scas
jecxz
faddp
xor
rorl
enter
xor
into
notl
sahf
cmp
and
cld
pop
jg
mov
push
rclb
cmp
add
xchg
sub
inc
cmpsb
mov
adcl
ljmp
inc
mov
jno
push
sub
decb
loope
push
jmp
add
dec
rorb
ud1
mov
and
pop
mov
dec
and
sarb
test
xchg
cli
rorl
cmp
adc
outsb
imul
push
xor
andl
sbb
je
push
cmpsb
bound
xchg
push
arpl
mov
out
mov
divb
movsb
mov
pop
mov
push
pushf
stos
jmp
jmp
fwait
mov
adc
dec
enter
fmuls
test
cld
inc
dec
shll
dec
stc
cmp
jecxz
push
cli
sbb
das
mov
mov
adc
adc
fsubr
call
test
jno
xor
sbb
jbe
movsl
add
adc
adc
popf
pop
and
jne
sub
mov
mov
xorl
mov
sub
lret
sbb
inc
pop
int3
add
jge
mov
sahf
or
insl
lahf
stos
or
mov
sbbl
and
sti
cmpl
fsubl
dec
sub
cld
lcall
cwtl
das
adc
mov
ret
push
gs
mov
lret
jbe
imul
cltd
add
loope
call
fidivl
and
mov
popa
orl
jl
daa
xchg
pop
aaa
xchg
jno
inc
rol
xchg
iret
mov
fdivl
in
ja
repnz
jp
mov
jle
sbb
out
cmpsl
or
sarb
ficomps
fcmovnbe
lea
inc
dec
add
xlat
shlb
xchg
int
add
pop
jbe
rol
or
sub
dec
cmp
outsl
mov
out
jo
jecxz
sbb
je
inc
mov
mov
cmp
mov
sub
and
stos
pusha
and
imul
mov
fwait
arpl
fldenvs
add
pop
movsb
pop
scas
movsb
fistps
mov
mov
cmp
insb
jp
lds
cmp
fucomp
lock
incl
js
enter
rcrl
or
aas
mov
pop
jae
movsl
out
xlat
outsb
popf
addr16
hlt
push
xchg
jecxz
inc
add
jge
iret
fidivrl
mov
push
cltd
cmpsl
cwtl
sub
outsl
mov
xchg
mov
mov
or
add
mov
mov
ror
cli
xchg
sti
mov
sbb
and
jbe
jo
jnp
xchg
lods
imul
xchg
lock
movsb
adcl
cmp
pop
arpl
jl
popl
ja
popa
adc
push
sar
jp
pusha
popa
xchg
pop
aaa
cmp
adc
cli
fimuls
push
fidivrs
imul
or
outsl
daa
add
jle
mov
pop
outsb
movsb
mov
add
dec
and
jge
xchg
pop
pusha
inc
pop
xchg
aas
mov
push
out
iret
xor
xor
mov
nop
cmc
dec
setge
pushf
in
xchg
fistps
idivl
test
mov
mov
dec
scas
into
mov
fucom
mov
leave
fldenv
fnstenv
xor
jmp
sbb
mov
rcrl
inc
xlat
xchg
push
push
popa
cmp
or
inc
bound
mov
lcall
data16
es
in
js
repz
fnstcw
adc
sub
out
in
or
dec
sarl
fistps
mov
xchg
mov
sahf
scas
pop
pop
pop
jae
mov
cli
fdivs
jle
dec
pop
sbb
adc
or
xor
adc
mov
inc
pop
dec
test
cld
fldcw
cld
out
lods
inc
filds
stos
shrb
adc
stos
inc
icebp
stc
xchg
or
push
inc
cltd
decl
cmp
shlb
or
push
cmp
aam
mov
je
andl
cmc
push
fildll
pop
xchg
cmp
repz
into
and
mov
adc
xchg
bound
je
adc
ss
lock
lret
pop
ds
xchg
sub
stos
scas
mov
xchg
bound
fisubrs
test
fisttpl
movsb
int
data16
lret
lods
lds
cld
and
jle
gs
mov
sbb
stc
test
testb
int3
popf
addb
push
loopne
scas
mov
fiaddl
out
jecxz
mov
push
and
jge
aad
mov
xchg
test
mov
mov
xchg
mov
mov
push
vxorps
jne
popa
push
mov
mov
lods
inc
mov
add
ja
ret
add
mov
push
inc
mov
push
xor
loop
dec
dec
dec
sbb
jae
cmp
or
popf
or
mov
add
jnp
imul
cwtl
or
cmp
mov
fmull
or
test
dec
add
lcall
pushl
sti
mov
iret
mov
jo
add
and
jae
icebp
sbbl
out
push
dec
and
or
pop
stc
or
jp
cmp
dec
in
arpl
dec
loope
inc
stc
pop
loope
out
xor
das
loope
out
or
mov
ror
mov
loop
inc
xchg
shrl
xor
mov
push
xchg
cltd
or
pop
loop
outsb
sbb
fxch
pop
jle
loopne
gs
pop
pushf
xchg
jmp
lds
nop
insb
xchg
lea
ds
pop
sbb
and
xchg
xor
das
in
xor
leave
and
add
pop
scas
cmp
or
popf
lods
mov
fimull
mov
push
push
sub
and
jo
adc
fs
adc
dec
test
sar
jecxz
fildll
and
cmp
arpl
cmpsl
clc
mov
sbb
jae
ds
or
ret
insl
sub
loopne
inc
mov
stos
outsl
aas
push
xchg
add
in
jae
int
dec
lods
push
lock
dec
pop
out
cmp
repz
sbb
mov
aam
arpl
push
xor
rcl
sub
mov
popf
jnp
lret
subl
pop
mov
or
in
adc
movsb
mov
shrl
xchg
ret
mov
xor
arpl
fistpl
sub
lcall
subb
push
sub
int
fstpt
jg
int3
pop
inc
xlat
call
cmp
shrb
sbb
insl
cmc
and
dec
cmp
push
nop
stc
nop
push
or
mov
hlt
cld
and
aaa
sti
xchg
gs
js
int
cwtl
stos
mov
push
jecxz
iret
sub
bound
add
sbb
sub
cld
cmp
pop
add
sbb
dec
inc
iret
dec
std
cmp
ret
negb
mov
sub
jg
jle
inc
cs
jl
add
mov
mov
push
adc
push
int3
arpl
test
sbbb
cld
xor
filds
mov
mov
cmp
shrb
outsl
iret
stos
movsb
shll
lock
cmp
inc
mov
add
pop
push
jmp
xchg
mov
dec
into
addr16
xor
fidivrl
js
or
lret
sub
call
xor
mov
and
pop
testl
sbb
jo
add
ret
ret
imull
imul
repnz
ret
cmp
aaa
lahf
mov
pop
data16
adc
hlt
xchg
sub
bound
shrl
lahf
imul
mov
fmul
push
push
out
repz
enter
inc
jmp
rolb
and
pop
fstpl
jns
mov
mov
es
add
add
pop
and
imull
je
les
pop
call
fists
gs
cmp
pop
repnz
xchg
sub
addr16
pop
lods
fidivs
shrb
push
mov
jb
js
cs
mov
fcmovnu
pushl
xor
inc
sbb
pop
je
or
mov
inc
jg
outsb
divb
popf
add
push
xchg
cmp
leave
or
scas
arpl
jns
jp
sbb
add
push
xor
repz
repz
rcl
xchg
mov
and
cltd
jmp
or
dec
cmc
xchg
add
notb
stos
lret
and
jmp
dec
push
push
mov
push
cmp
outsl
sahf
int3
mov
fwait
movl
xor
add
cmpps
push
fdivrs
jmp
out
test
cltd
addr16
insl
lcall
addr16
push
out
jno
and
fdivl
iret
ss
sub
ret
dec
jae
jmp
fsubr
jno
test
pop
aaa
fxch
idivl
sti
cli
mov
fmulp
xor
sbb
daa
cmpsb
daa
or
js
pop
inc
pop
out
fdivrl
jbe
or
xchg
out
cmp
push
repz
mov
hlt
adc
adc
outsl
stc
clc
imul
dec
aam
movsl
mov
aam
xchg
sub
lret
loopne
push
lahf
push
movsb
data16
pop
je
popa
clc
xor
cli
cmp
aas
cli
sbb
lret
push
pop
jg
loope
notb
jb
out
fdivl
or
xchg
mov
test
in
lcall
imul
or
test
into
cmpsl
je
mov
insb
repnz
jle
push
mov
cmpsl
mov
cmp
inc
ss
jge
dec
ljmp
xorl
push
loope
dec
xchg
sbb
xchg
ret
call
or
pop
cmc
or
cmp
push
mov
in
pop
enter
sbbb
icebp
shld
jne
mov
sarl
cmp
mov
push
mov
mov
cld
scas
push
outsl
test
cmp
lds
mov
pop
mov
mov
cmpl
popl
mov
dec
and
imul
aam
pop
lods
sti
push
into
fidivrl
js
sahf
mov
pop
nop
nop
mov
push
inc
inc
je
fnstcw
dec
adc
jmp
fwait
adc
pop
cmpsl
cmc
adc
pop
pop
loope
cmp
push
dec
cwtl
les
lahf
loop
xchg
insl
dec
cmpsb
sbb
fsubrp
xor
pop
arpl
sub
adc
in
adc
sar
mov
dec
hlt
out
mov
dec
ljmp
sub
jns
aaa
cmpb
dec
mov
mov
or
leave
push
iret
call
notl
aam
cmp
mov
or
addr16
push
jno
mov
xchg
into
push
xchg
popa
jnp
add
jae
in
and
adc
test
testl
dec
rclb
xchg
ds
test
push
ret
movhps
loop
sub
push
inc
sbb
shr
repz
dec
loop
adc
pop
scas
subps
ljmp
push
imul
lahf
add
loopne
cs
cmp
push
add
movsl
jnp
call
aad
xchg
push
pusha
notb
xchg
stc
je
sub
aaa
cmpsl
jecxz
pop
push
dec
push
xchg
dec
mov
mov
pushl
arpl
push
cmp
inc
pop
imul
cs
and
add
pop
mov
in
dec
ret
adc
cmp
sbb
lret
sub
sub
fcompl
mov
cltd
in
fsubs
subb
adc
add
popa
xor
jno
push
or
adc
into
cwtl
adc
lret
jge
sub
xor
push
adc
fwait
pop
ds
pop
lahf
ja
nop
jbe
and
add
rdmsr
xchg
inc
pop
jmp
adc
test
mov
cwtl
xor
mov
lock
ret
imul
push
mov
stos
fmuls
rorb
mov
mov
mov
pop
add
in
mov
cmpb
repz
shrl
shlb
insl
pop
stos
es
hlt
or
pop
mov
add
lret
pushf
jg
int3
inc
mov
das
xlat
testl
xlat
jg
dec
neg
mov
xchg
sti
es
sbb
mov
ja
jnp
call
sbb
mov
out
cmc
int3
lret
cmpsl
psubw
pusha
hlt
dec
ljmp
lock
mov
xchg
sbb
je
push
mov
in
mov
adc
inc
mov
sub
arpl
nop
idivl
aad
lcall
fisubs
ret
pop
movsb
mov
lds
fistps
cld
adc
shll
insb
test
adc
adc
adc
mov
push
pop
fcom
pop
es
arpl
call
adc
iret
sbb
push
lds
cs
xor
inc
push
push
pusha
mov
mov
mov
inc
push
cld
xchg
cmc
cmp
adc
sbb
lret
stos
sbb
pop
scas
and
jmp
aaa
shl
test
pop
ljmp
pushf
out
outsb
cld
mov
data16
bound
mov
in
push
inc
sub
std
nop
rolb
shrl
sar
xor
repnz
call
stos
outsb
xor
cmp
mov
jo
les
pop
xchg
repz
or
sub
xchg
dec
das
pusha
mov
pusha
jns
cli
mov
subl
repz
cmpsl
add
jns
repz
ret
mov
aam
mov
cmp
mov
in
or
stos
xor
mov
gs
pop
mov
scas
add
add
repz
jo
in
outsb
sbb
ss
pop
sub
sub
xor
sbb
shll
cmp
or
sarl
push
pop
out
nop
sbb
or
and
xchg
idivb
aad
sub
popa
lods
sbbl
jp
int3
cs
sub
push
push
push
outsb
mov
cwtl
scas
ret
inc
jp
fdiv
pop
rorb
minps
hlt
xchg
cli
test
rorb
sti
rdmsr
leave
aas
or
mov
inc
cmc
cmp
out
xchg
sub
xchg
out
sti
xor
sub
push
push
lret
sbb
sbb
ds
lcall
cmp
test
es
jo
dec
push
mov
sub
dec
inc
les
test
popf
mov
out
les
adc
std
pop
mov
and
pop
aaa
dec
outsl
xchg
lods
addr16
out
push
pop
push
inc
jge
pop
mov
rorb
push
jecxz
sbb
hlt
out
aad
jecxz
ret
add
js
stos
pop
mov
imul
mov
icebp
sbb
push
outsl
sub
ret
add
lret
xor
push
imul
or
int3
mov
jle
repz
mov
xlat
into
xchg
mov
push
clc
shr
dec
cli
str
push
inc
lret
mov
mov
cmp
xlat
sub
fs
outsl
mov
mov
jle
fidivs
add
lock
mov
push
push
stos
imul
sti
xchg
mov
and
pop
in
std
roll
mov
insb
int
sbb
fcmovne
push
sbb
ror
notb
daa
scas
inc
inc
loop
inc
push
ret
cmp
pop
cmp
add
shlb
jnp
cmp
inc
sub
lds
jnp
out
data16
sub
sbbb
fsubrp
add
fcomps
jnp
push
or
dec
lahf
or
scas
jecxz
lret
mov
addb
inc
ss
test
bound
mov
je
mull
pushf
xor
mov
jbe
xor
xlat
outsb
mov
rcr
test
dec
inc
gs
adc
cmp
and
jl
sbbb
sub
sub
aaa
push
sarl
mov
lock
inc
xor
add
or
outsl
movsl
sahf
xor
mov
jecxz
jae
aam
mov
call
dec
push
cmc
mov
or
sarb
or
stos
cmp
add
fsubrs
lods
add
in
arpl
mov
fcompl
or
fidivs
inc
ljmp
jmp
fcmove
loop
sbb
lret
cmpsl
int3
sub
out
sti
sbb
lods
sbb
xor
fsubr
inc
push
mov
dec
or
add
pushf
sbb
int3
hlt
xchg
jnp
mov
push
dec
je
cmp
scas
lret
lret
in
cld
add
rcrb
or
inc
imul
in
mov
insb
sub
adc
popa
bound
sbb
mov
sbb
cwtl
pop
scas
inc
es
scas
ret
dec
div
pop
testl
orb
mov
and
dec
fmuls
cld
jns
xor
in
nop
rcll
jmp
mov
or
mov
push
xchg
xor
inc
stos
fistl
addr16
rcr
xor
mov
stos
push
mov
adc
lret
mov
sub
and
adc
xchg
aad
aam
xor
jo
test
mov
in
cmp
inc
push
ficoms
push
push
and
fdivl
push
adc
inc
mov
scas
mov
sahf
xor
popf
mov
in
pop
ret
and
mov
push
push
pop
cmp
adc
dec
xor
mov
das
subb
icebp
inc
imull
inc
adc
add
jmp
sbb
push
outsl
push
movsl
mov
sub
test
push
or
push
sub
imul
fxch
nop
mov
mov
cmp
lds
cmp
xchg
ljmp
push
inc
nop
mov
push
or
mov
loopne
mov
sti
jge
xor
sub
lret
popa
bound
stc
mov
add
fdiv
cmp
pop
push
jo
mov
sbb
sbb
dec
lea
sbb
jns
adc
and
fbstp
inc
movsl
mov
rorb
shll
adc
jp
add
add
add
xchg
and
sbb
stos
in
or
cmpsl
outsb
sarb
mov
pop
sub
dec
adc
jge
sbb
xchg
or
das
inc
cli
xchg
mov
push
inc
mov
loopne
test
dec
cld
add
mov
je
jp
pop
lods
jle
pop
lahf
jo
inc
xchg
rorl
push
pop
adc
ds
pop
and
pop
cmp
pop
push
sub
push
cmpsl
js
sahf
and
ret
int
out
dec
jmp
aam
xor
loope
pusha
or
dec
dec
shlb
pop
sbb
iret
push
fisubs
jbe
fbstp
mov
test
push
and
into
dec
and
ror
jl
inc
movsb
inc
mov
cmp
das
repnz
jns
push
rcrb
std
scas
adc
push
shll
outsb
sub
lahf
pop
fnstenv
fldt
test
div
pop
lcall
cmpsb
dec
cld
cmpsl
scas
ret
dec
pop
sbb
push
and
icebp
mov
lret
or
jge
push
fsts
je
dec
pop
aad
rorl
fnstcw
mov
pusha
xchg
outsl
clc
or
inc
testb
adc
inc
pop
mov
xchg
imul
mov
leave
test
lret
mov
test
dec
xchg
adc
nop
inc
pop
shrb
xchg
xchg
and
lock
push
pop
sbb
scas
inc
sub
outsl
jle
int
push
mov
cmpsl
clc
mov
faddl
push
pop
imul
mov
setns
push
mov
push
xor
mov
or
mov
cs
les
pushf
fisubl
ss
inc
inc
push
pusha
push
xor
sbb
mov
dec
dec
pop
sub
enter
test
aaa
or
lea
pop
or
data16
inc
orl
and
rolb
pushf
add
pop
decb
lret
loopne
bound
scas
xchg
sbbl
pusha
loope
pop
sbb
cmp
jno
data16
sbb
mov
fwait
test
fs
stc
cwtl
ret
aam
daa
arpl
fidivrs
mov
mov
insb
fists
dec
mov
adc
repnz
scas
lahf
cmp
andl
push
out
cld
mulb
das
out
pusha
xchg
add
stc
ja
xor
movsl
je
lret
movsl
into
jg
incl
fdivr
jecxz
mov
popa
icebp
mov
fwait
push
mov
adc
addr16
test
cwtl
jnp
jae
outsl
mov
fnsave
pushf
lahf
ss
std
out
pop
in
dec
mov
test
pop
nop
pop
pop
fsts
and
add
xchg
inc
sub
mov
push
mov
jge
jne
test
or
mov
and
xlat
loopne
in
test
outsl
push
or
add
leavew
testb
inc
sarl
stos
cmp
add
call
mov
pop
push
mov
mov
test
je
lea
xchg
jge
push
sbb
dec
stc
cltd
adc
leave
adc
sub
pop
sbb
scas
sub
or
stos
ret
mov
adc
push
scas
jns
pop
cmp
dec
lret
lret
push
sbb
or
xor
or
jns
lcall
in
cmp
clc
or
lods
adc
fwait
and
pop
jo
out
add
jo
test
fldcw
pop
mov
cmpb
jo
test
adc
sarb
into
lahf
mov
bound
fcom
pusha
ss
inc
add
hlt
hlt
stos
inc
in
pop
ds
cs
into
dec
into
xor
jp
movsb
dec
cmp
inc
ret
shr
inc
xchg
xor
aaa
fidivl
adc
clc
dec
and
negl
dec
gs
xchg
adc
sub
clc
pop
xchg
cmpsl
js
pop
ret
stos
out
stos
fadd
xlat
ret
ja
fdivl
pop
mov
dec
or
ret
and
jno
mov
adc
in
sub
adc
pop
adc
insl
jmp
jl
jl
mov
add
xchg
in
cmp
fwait
mov
push
push
loope
mov
push
sbb
xor
sbb
repz
cltd
dec
int3
leave
inc
cwtl
jno
adc
xchg
pusha
sub
mov
dec
inc
adc
and
push
push
sahf
or
mov
mov
lds
pop
call
or
push
fldcw
jp
ds
test
xlat
out
jge
push
jb
arpl
xchg
cmp
xor
mov
push
fstpt
aaa
iret
lret
pop
aad
lret
nop
or
arpl
xor
aas
pop
xchg
loope
aaa
xchg
xchg
test
mov
inc
filds
mov
xchg
pop
rol
subb
or
loop
add
pop
mov
mov
aas
inc
push
jns
inc
mov
push
jmp
sub
outsb
mov
pop
jl
push
xor
lea
mov
out
outsw
pop
or
aaa
push
std
in
jnp
cltd
jg
nop
mov
xlat
jo
pop
out
dec
push
addr16
push
div
movsl
push
push
out
cmpsl
adc
cltd
sbb
bnd
mov
xchg
mov
mov
shl
insl
inc
iret
int3
insb
or
gs
aam
sbb
outsb
jg
and
mov
push
imul
outsb
add
insl
or
call
xchg
mov
lods
stos
xchg
aad
movsb
les
mov
sub
or
adc
lods
or
push
data16
aas
test
add
inc
fiadds
and
and
shrl
jne
mov
divl
ror
push
in
andb
sar
jmp
sbb
xor
out
sub
into
dec
sbbb
xchg
push
dec
aad
or
out
loop
shll
mov
or
les
and
pop
pusha
outsb
addps
xchg
add
in
icebp
and
push
ds
or
inc
sbb
cmp
loop
adc
mov
push
push
js
dec
jno
imulb
lods
aas
adc
insb
cli
jno
xchg
cltd
mov
mov
jl
adc
movsb
popa
in
inc
fxch
fistps
in
jp
push
inc
adc
shrl
push
jle
repnz
insb
push
lret
add
stos
xor
xchg
sub
insl
enter
mov
mov
push
insb
lods
mov
mov
sti
add
loop
xchg
adc
jb
and
add
fidivrs
add
jl
push
aad
jmp
xor
pop
xchg
loope
int3
mov
fmuls
adc
sub
mov
cmp
dec
gs
cmp
sub
or
add
jbe
mov
stc
cmp
xchg
sub
jle
inc
lcall
adc
dec
dec
jp
or
test
xchg
jmp
leave
mov
int3
inc
cltd
pop
jge
mov
loopne
add
idivb
jecxz
out
leave
les
ljmp
push
mov
inc
dec
in
mov
jbe
jo
adc
xchg
mov
sahf
cmp
shr
aad
sahf
and
pop
repnz
sub
jge
test
lahf
pop
pop
dec
dec
lahf
mov
insl
loop
xchg
dec
aam
jle
into
pop
aad
xor
add
sub
or
sbb
sarb
mov
fwait
push
push
cmp
lcall
aas
mov
xchg
add
stos
mov
pop
jns
xchg
cmpsl
aas
std
cltd
icebp
jle
lcall
ljmpw
xor
cli
test
js
jbe
aaa
cmpsl
cmp
pop
dec
out
add
insb
jbe
xor
shlb
movb
dec
lock
or
mov
mov
fs
sub
ret
and
xor
jnp
cmp
pop
inc
mov
pop
mov
xchg
jns
push
push
fildl
sti
xor
xchg
dec
push
je
push
loope
push
mov
icebp
or
mov
icebp
les
cmc
mov
shll
loopne
daa
es
aam
sbb
pop
popf
pop
ja
adc
xchg
ja
jle
enter
jecxz
pushf
add
js
mov
daa
push
sub
inc
push
inc
ljmp
jecxz
dec
dec
loope
les
and
dec
dec
cmpsb
std
push
shrb
lret
and
mov
ja
jle
mov
es
es
jb
movsb
jns
xor
lock
insl
mov
test
xor
adc
test
xchg
add
shl
inc
jae
mov
mov
inc
lods
sbb
mov
lahf
sub
pop
xor
and
xlat
cmp
in
out
ja
aam
hlt
pusha
push
jns
aam
xchg
add
sbb
je
mov
mov
int3
jnp
push
inc
or
jae
inc
bound
shlb
inc
popf
cs
in
pop
mov
imul
shll
bound
jg
insb
fisubl
dec
lret
xlat
aad
ljmp
push
inc
mov
out
lods
aad
mov
js
dec
loopne
shlb
sub
sbb
xor
in
inc
leave
into
mov
pop
dec
shll
test
ret
push
enter
pop
jo
pop
outsl
jg
add
test
sahf
stos
sub
xlat
daa
add
addl
iret
mov
dec
out
sbb
adc
ds
cmc
push
jl
adc
mov
fnsave
sarl
aad
lret
ret
cwtl
mov
adc
and
daa
jecxz
push
or
pop
mov
shrb
mov
cmp
lret
sbb
stos
frstpm(287
testl
and
mov
incl
jne
mov
xor
std
scas
xorb
or
jmp
pop
lahf
daa
sub
daa
xchg
sbb
mov
into
lret
adc
or
aad
add
mov
in
push
cwtl
frstor
cmp
scas
insl
jne
jp
test
lods
cld
adc
clc
out
add
clc
dec
pop
stc
into
lret
stos
outsb
imulb
inc
push
pop
stc
test
lods
daa
jns
pop
shlb
addr16
dec
add
and
pusha
sub
out
enter
pop
xor
divb
syscall
std
xchg
push
dec
jle
cmpsl
hlt
and
mov
push
inc
xor
mov
and
pop
xchg
jno
and
sub
inc
icebp
dec
lcall
inc
cltd
mov
mov
ljmp
push
fsubs
in
lods
jno
cmp
scas
fnstenv
scas
cld
ja
cmp
pop
stc
frstor
cmp
lret
orl
cmp
outsb
test
out
mov
imul
dec
imul
test
or
sbb
sbb
ljmp
cmc
push
lret
push
inc
jge
jge
test
rclb
add
sbb
sbb
mov
pop
xor
mov
popf
scas
mov
ljmp
into
lea
lcall
into
rorb
mov
inc
and
mov
mov
es
fistpll
in
fmull
mov
add
loopne
negl
or
adc
cmc
cmp
and
mov
and
lods
push
pop
push
inc
adc
adc
xchg
test
out
insb
popa
push
xlat
lods
add
xor
xchg
xchg
jmp
mov
sti
cltd
aad
pop
cmpb
dec
or
bound
jae
addr16
dec
cmp
inc
and
adc
imul
cltd
das
repz
mov
and
dec
cmp
jecxz
sbb
add
shrb
jnp
xor
mov
and
cmpb
enter
push
je
push
sub
pop
nop
inc
jmp
pop
mov
testb
fnstcw
add
leave
int
add
or
out
dec
rcll
lea
adc
out
or
iret
mov
adc
repz
addr16
scas
inc
xlat
xchg
inc
or
cmpsl
add
xor
or
fildll
imul
push
cld
pcmpgtb
jp
loope
sbb
cmpsb
js
cwtl
fyl2xp1
popf
pop
and
xor
jmp
sub
xchg
lods
or
xor
pop
gs
adcl
and
repz
jbe
mov
xchg
inc
add
call
push
pusha
dec
push
rorl
mov
mov
repnz
in
add
xchg
jp
dec
out
mov
shll
sahf
pop
jne
sbb
mov
push
pop
ret
leave
cmpb
ljmp
jno
inc
pop
jo
aad
cltd
pop
popf
arpl
mov
ret
and
sbbl
inc
mov
sbb
hlt
inc
xchg
lea
push
rorb
cmpsl
sub
xlat
dec
fldt
jg
cmp
ja
rep
xorb
mov
push
cmp
insb
mov
mov
jl
bound
xchg
xchg
bound
jecxz
or
push
iret
rol
push
lock
test
add
xor
xchg
scas
insb
fxch
mov
addb
jns
test
mov
hlt
jg
add
in
jecxz
xor
xchg
add
imul
or
iret
addr16
scas
xchg
mov
gs
repz
inc
pop
cltd
es
push
ss
cmp
lods
sarb
scas
das
repnz
and
adc
out
inc
out
addl
push
dec
in
movsb
sahf
or
out
in
mov
stc
loopne
xchg
sbb
in
mov
fdivrl
les
or
sti
sti
mov
pop
daa
test
loope
xorl
xor
lret
pop
push
xlat
dec
int3
pop
mov
cmp
ret
scas
mov
outsb
add
push
daa
mov
pop
xlat
push
mov
repnz
xor
jmp
fstl
jmp
je
andb
push
add
inc
or
jns
cmc
nop
arpl
call
mov
mov
add
sub
lcall
inc
lock
fnstenv
bound
imul
adcb
jmp
fucomp
mov
xchg
ljmp
push
mov
jo
pop
jb
test
jl
push
lahf
mov
mov
xlat
ss
notl
mov
imul
fnstenv
out
popa
sbb
movsl
mov
sbbb
push
icebp
push
add
mov
xorb
ds
out
scas
popa
sub
push
bound
push
faddl
lret
into
pusha
int3
arpl
fnstenv
fdivrl
sar
les
inc
nop
daa
xor
out
outsl
in
test
ss
sub
cmp
xchg
sub
jmp
sahf
ficoml
int3
inc
dec
mov
data16
fcmovu
push
jp
inc
dec
insl
cmp
or
fstpl
push
dec
or
mov
xor
fisubl
pop
dec
ja
aas
int
jbe
in
xlat
outsb
loopne
lea
xor
pop
sahf
ret
cli
insl
push
add
sbb
hlt
mov
bswap
gs
pop
xor
add
je
cmp
ss
cwtl
das
push
icebp
out
xchg
adc
popa
clc
lods
xchg
shrl
jns
sti
insb
and
je
mov
std
sbb
add
mov
pusha
cli
add
jns
xor
aad
je
cmp
push
sbb
bound
lods
push
ljmp
sbb
fdivp
enter
or
dec
push
pushf
mov
clc
int
mov
arpl
jns
outsb
aaa
mov
mov
jb
clc
ds
sub
cmp
mov
mov
test
pop
cld
out
pushf
in
clc
cmp
imul
sub
mov
sub
shl
cmc
sbb
inc
xchg
jp
sbb
mov
push
rcll
push
das
stc
cmp
cmpsl
sbb
stos
push
cmc
orb
push
cmpsl
pop
pop
pop
mov
xchg
mov
fsubl
mov
mov
insb
lahf
out
pop
std
xchg
lods
sahf
or
add
push
jnp
test
fidivs
mov
and
loope
push
fnstcw
mov
cmp
aad
mov
jns
lea
add
xchg
pop
pop
jl
mov
fisubrs
sbb
in
sti
jne
sub
push
adc
popf
lahf
jge
aam
lea
movsb
and
push
stc
add
lock
cmp
por
gs
int
sbb
xor
push
jg
and
idivb
fildl
sti
xchg
mov
outsb
mov
add
jae
and
daa
jp
fidivl
enter
jbe
sbb
ja
xchg
testb
or
push
xchg
mov
cmc
sub
inc
es
lods
inc
mov
clc
fisubrl
insb
pop
dec
lea
mov
sbb
pop
dec
in
test
es
out
je
sub
xchg
jnp
mov
mov
or
loope
ret
lret
inc
out
sbb
inc
stc
imul
aaa
testb
pusha
les
divl
pop
mov
arpl
xlat
icebp
gs
jg
pushf
cmc
mov
adc
sbb
gs
aad
data16
bound
mov
pop
shl
sbb
jb
pop
scas
outsl
outsb
add
dec
lods
out
out
nop
and
push
push
std
mov
sub
xor
mov
lods
imul
fidivrl
cmc
push
popa
sahf
sbb
fldl
jl
mulb
adc
push
les
std
dec
mov
cmc
dec
rclb
sbb
push
jae
movsl
test
xor
mov
adc
xorb
or
sbb
push
pop
push
pop
arpl
daa
loope
xchg
testb
aaa
dec
push
jmp
mov
jo
pop
daa
push
mov
sbb
lret
xchg
push
test
xchg
inc
mov
fstpl
cli
add
add
filds
adc
dec
jp
jecxz
mov
jae
xor
xchg
pop
ds
filds
mull
mov
push
int3
or
sarl
in
fsubr
jo
sbb
jno
sub
jle
sub
clc
add
adc
or
rclb
mov
hlt
lock
insl
in
dec
dec
inc
and
cmp
pop
or
push
lret
mov
sahf
cs
outsl
push
push
popa
mov
out
or
popf
jg,pt
xchg
iret
dec
mov
push
sub
ret
xor
fdivl
or
pushl
cmp
jp
test
xchg
push
pop
jno
clc
loop
sub
loopne
sahf
movsl
cmp
adc
push
sub
xchg
jge
in
in
adc
shrl
js
or
icebp
icebp
mov
addb
mov
adc
dec
int
dec
pushw
adc
mov
mov
sbb
cli
cmpsb
ja
repz
movsb
cmp
inc
out
xchg
scas
in
adc
sbbb
and
out
stos
sahf
adc
aad
cmp
fsubrs
pop
push
xor
push
loopne
iret
push
ret
icebp
decb
sub
add
hlt
loopne
ljmp
adc
lods
adc
mov
mov
rolb
in
cmp
loope
sub
outsb
add
xor
test
xorl
mov
adc
imul
xor
xchg
push
and
sub
addl
sub
fnsave
dec
test
repnz
adc
push
sbb
cwtl
lcall
push
and
or
cmp
je
outsb
movsb
sub
mov
notb
fcmovnbe
insl
push
and
inc
jno
cmp
aam
in
in
ret
push
xchg
and
movsb
ffreep
imul
jbe
popa
sahf
adc
jp
loope
and
fs
xchg
pop
sahf
jbe
dec
adc
xchg
cmp
insb
cli
push
imul
testb
filds
xchg
add
fdivrp
das
pop
movsb
in
rcrb
xor
fiaddl
stos
mov
pop
ljmp
in
sbb
repnz
sbb
push
outsl
and
ss
ret
cli
sbb
fisubrs
or
ljmp
adc
mov
jne
imul
push
imul
and
cmp
jge
dec
int3
jge
cmc
dec
xor
repz
insl
test
xchg
adc
pop
push
or
pop
in
jbe
lret
rcr
push
loopne
fcoml
cmp
test
fiaddl
xorb
bound
lea
mov
sub
lock
scas
loop
mov
jle
stos
mov
xor
or
mov
sub
xlat
je
imul
mov
mov
sbb
dec
xchg
mov
push
cmp
cmc
dec
fildl
icebp
divb
movl
scas
add
scas
xor
sub
cmp
js
ret
test
mov
adcl
pop
cmp
fbstp
cmc
jmp
test
mov
test
bound
addr16
int
std
out
mov
lret
mov
sub
mov
js
dec
aam
sbb
push
jmp
cmpsl
dec
pop
es
stos
and
fcmovne
adc
into
add
in
pop
fsubr
lods
cmp
ret
arpl
addb
movsl
pop
xor
cs
add
aam
mov
push
push
sti
sbb
adcb
inc
ror
scas
mov
sbb
xchg
xor
xor
div
adc
xchg
sub
add
push
pop
mov
lds
lret
dec
enter
mov
jmp
bound
or
or
mov
out
std
add
sbb
push
inc
inc
sti
arpl
ds
adc
sbb
rol
mov
mov
into
enter
das
arpl
inc
mov
mov
rcrb
or
bound
es
adc
hlt
jb
cmp
cs
pop
cltd
mov
lods
inc
ds
dec
jo
mov
sbb
sbb
mov
lret
mov
xor
jnp
mov
gs
pushf
xor
fstpt
pusha
pop
xor
loop
in
divl
jmp
and
gs
pusha
insl
sbb
xchg
rorl
mov
sub
fcomip
or
pusha
and
dec
xor
adc
scas
cltd
test
lahf
jnp
outsl
lods
mov
ret
negl
adc
sub
addr16
scas
out
out
rcrb
mov
cltd
push
mov
mov
xor
mov
cli
and
sub
mov
lea
mov
or
and
test
mov
sbb
mov
pop
icebp
arpl
push
popf
sub
pushf
inc
mov
ja
fs
fidivl
add
pop
add
add
dec
adc
or
loopne
adc
jb
cmpsb
mov
dec
pop
add
fldl
hlt
addr16
repz
call
es
add
xchg
pop
dec
loopne
mov
mov
and
dec
push
scas
repnz
and
shll
jg
inc
mov
test
ljmp
add
ja
and
shll
sub
mov
push
xchg
mov
add
mov
cld
jge
push
sbb
xchg
insl
ja
pop
test
cmp
andl
out
jmp
sahf
mov
pop
out
mov
sbb
mov
mov
stos
mov
fidivl
rcr
mov
or
adc
sbb
sub
pop
cld
aaa
or
lcall
inc
outsb
stc
int
jae
adc
xor
insl
and
cmp
insl
stc
stc
out
jecxz
jbe
sbb
mov
jae
adc
jg
movsl
dec
sbb
ja
push
movsl
dec
cwtl
sub
ficoml
sysexit
scas
aaa
jno
push
inc
loope
adc
add
int3
pusha
mull
jb
mov
ret
pusha
aam
jmp
xor
or
mov
mov
sarb
add
in
cmpsl
rcl
sbb
pop
dec
mov
sub
xchg
out
test
lods
incb
or
in
cli
mov
lretw
movsl
mov
xlat
mov
outsb
out
test
in
cmpl
or
lods
cmc
pop
repnz
gs
loope
jge
lds
push
dec
fidivrl
outsb
out
leave
lahf
jp
aam
xchg
pop
pop
icebp
sub
mov
pop
jne
inc
jae
adc
test
cmp
mov
jo
aaa
into
mov
push
insb
jbe
or
dec
dec
mov
cmp
cmpl
lods
mov
repz
mov
out
icebp
arpl
inc
jne
inc
bound
mov
or
jecxz
fnsave
or
mov
mov
rcl
jo
idivl
shlb
jg
adc
pop
cmpsb
aaa
add
je
sti
adc
adc
or
das
outsb
lret
bound
dec
jmp
mov
fnstcw
dec
mov
mul
imul
jns
jg
jbe
or
in
loop
sub
mov
mov
jb
xor
jecxz
fisttpll
mov
cld
out
cmp
pop
cmp
or
sbbl
lods
shlb
rorl
out
lahf
clc
dec
nop
sub
push
loop
fists
fadds
sbb
mov
xor
lods
int3
jg
das
fsubrs
mov
testb
rorb
pop
push
jbe
cwtl
sbb
mov
ss
mov
rclb
daa
add
adc
pop
xor
pop
cltd
mov
mov
int
add
sbb
jo
lds
lock
out
adc
sbb
adc
cld
jl
jae
jmp
jne
lcall
in
xor
xchg
jno
hlt
nop
iret
adc
test
adc
bound
repz
pusha
fdivs
jmp
icebp
filds
shll
js
shlb
push
jno
iret
mov
shl
fidivrs
push
sbb
cs
int3
nop
daa
fsubs
adc
add
js
mov
insb
pop
stos
jl
out
lahf
scas
sbb
mov
das
shrb
dec
int
pop
js
dec
scas
lea
repz
or
mov
pop
sub
and
cld
mov
mov
xchg
mov
lcall
test
pop
repz
iret
add
jmp
in
or
in
sub
fwait
pop
cltd
sar
jg
mov
sbb
cs
in
outsl
ds
les
inc
enter
orl
xor
sub
das
fdivr
xlat
out
xchg
shlb
cmpsb
and
fwait
add
mov
ss
pusha
stc
mov
es
cwtl
xor
jecxz
stos
mov
and
jb
push
xor
test
sbb
push
pop
or
hlt
xlat
repz
sbb
cs
ds
pop
imul
addr16
les
lret
cld
pop
sub
fld
dec
in
pop
aaa
or
and
pop
negb
fnsave
xor
cmp
adc
std
movsb
dec
or
xchg
in
popf
add
lea
or
ficoml
mov
stc
mov
mov
hlt
lret
mov
pop
dec
jle
xchg
incb
dec
xchg
push
inc
pushf
popa
and
mov
aas
ficompl
jne
add
dec
test
out
out
cmp
adc
pop
mov
lahf
mov
out
ss
outsl
add
push
bound
xlat
test
adc
test
jno
out
aas
add
pop
scas
push
adc
addl
xor
sahf
shlb
rclb
out
test
test
inc
dec
xor
std
inc
sub
or
xor
movsb
cmp
fs
xchg
rcrl
sub
fs
mov
aaa
jno
cmp
adc
mov
popf
xchg
imul
aam
shrb
shll
repz
pop
mov
jne
mov
or
dec
loope
pop
xlat
out
iret
push
jae
cltd
test
punpckhwd
fmull
cmc
pop
adc
add
add
outsl
rorb
sarb
dec
rclw
insb
cmp
arpl
cmpb
or
xor
xor
dec
mov
jg
xchg
add
cmp
lods
imulb
mov
xchg
xchg
push
mov
fisubl
mov
jmp
xorl
xchg
sbb
je
mov
jge
ret
push
mov
pop
cmp
stc
mov
outsl
jge
and
jle
insl
add
and
push
addr16
cmc
mov
in
mov
idivl
sub
push
cmp
filds
jmp
rcrl
dec
fiadds
mov
or
mov
cmp
and
loope
popa
add
mov
out
xor
push
jge
divl
pop
std
dec
lcall
repnz
sub
or
sub
cmpsl
call
jmp
sub
pop
rorl
std
aas
std
cmp
xchg
mov
push
xor
jns
push
push
popa
or
add
je
rcll
incl
sbb
sbb
mov
rcrb
out
pop
mulb
cmpsl
fwait
jle
add
scas
fbstp
fldt
xor
scas
loopne
in
push
cmp
aaa
xor
stos
xor
andb
cmp
cmp
xchg
dec
sub
pusha
into
jl
rclb
in
cli
testb
loopne
aaa
call
sub
lods
movsb
inc
push
int
fimuls
hlt
enter
gs
push
idivl
in
xchg
rclb
hlt
jnp
and
stos
clc
push
popf
jmp
sbbb
negb
shlb
repnz
stc
mov
push
ljmp
cltd
fnstcw
int3
lods
add
xchg
sub
aaa
and
stos
cmp
sbb
inc
dec
adc
out
or
in
push
test
es
in
xchg
pop
sti
popa
cmp
sub
pop
mov
cli
lcall
xor
pop
jge
mov
les
lret
loope
push
ficomps
stos
pop
push
adc
cli
xor
push
jo
enter
sbb
jle
cmp
outsl
cmp
outsl
testb
inc
pusha
mull
jle
xchg
es
jbe
inc
cmp
stos
test
or
test
call
mov
repnz
jnp
pushf
jmp
movsl
shr
add
dec
mov
ja
push
insb
mov
sub
xchg
add
leave
push
dec
gs
mov
adc
cli
push
mov
xchg
pop
add
mov
cmpsl
mov
cmp
test
xchg
sub
ret
outsl
mov
mov
aad
cmp
inc
cli
cmp
out
test
imul
daa
js
jo
leave
xor
flds
loop
shrl
add
aaa
mov
add
jae
cmp
jmp
out
jge
xchg
mov
cmp
pop
js,pt
dec
dec
shrb
ret
mov
in
push
jne
jecxz
cmc
and
iret
jl
and
std
pop
int3
push
idiv
xlat
insb
enter
adc
lahf
shl
sti
in
cmpsb
sub
lret
mov
pop
sub
arpl
ror
xor
movsl
sub
cmp
push
cmp
push
sbbl
in
sub
insl
mov
scas
test
cs
ss
and
fimuls
pop
fcomi
ss
sub
and
inc
popa
in
pop
pop
in
test
inc
fidivl
into
xchg
mov
adc
sbbl
xchg
adc
and
cmp
xchg
fcmovb
jecxz
mov
xchg
xor
fwait
pop
out
int3
add
into
sbb
or
fbstp
xchg
mov
test
cmpl
mov
dec
mov
pop
sahf
or
sub
cmp
das
in
xor
in
mov
inc
xor
xchg
dec
call
mov
repz
sub
cwtl
pusha
imul
pop
mov
push
inc
push
in
jg
mov
push
mov
mov
dec
cs
data16
lcall
xchg
mov
jp,pn
dec
xchg
sub
ds
jns
sbb
mov
data16
jo
jmp
xchg
mov
subl
sub
add
cs
cmp
push
xor
or
cmp
add
pop
dec
xor
cmp
pop
outsl
daa
mov
mov
pop
and
out
xchg
push
inc
inc
fnsave
int3
xor
mov
fcos
pushf
pop
js
std
mov
mov
or
mov
js
push
imul
stc
cltd
in
mov
fistl
test
sbb
scas
mov
xchg
fdiv
jp
inc
imul
push
cmp
inc
addl
push
cli
xor
cmp
jnp
nop
and
add
notb
add
mov
xchg
xlat
xor
jle
lock
scas
xchg
mov
jbe
jg
repz
movsb
xor
jp
jns
aam
in
adcb
lods
jno
test
sbb
imul
cmpsl
or
add
adc
push
mov
mov
fisttps
scas
push
jno
push
hlt
shrb
jl
std
loopne
pop
push
lahf
insl
stos
xchg
iret
data16
cld
sbb
leave
sbb
arpl
popf
imul
movsb
jle
mull
fiaddl
enter
xsha1
cmpsb
dec
test
jg
lods
lods
mov
mov
adcb
add
inc
fstpl
aam
jp
sub
cli
xchg
hlt
lock
push
dec
adc
xor
in
push
ret
or
sub
outsl
rcll
pusha
jns
jbe
sbb
ds
push
pop
adc
lret
cld
and
stc
cmp
mov
sbb
cmpsl
xchg
mov
dec
and
jae
popa
add
arpl
push
xchg
ljmp
scas
in
les
xchg
fimuls
insl
sbb
jp
sub
jg
in
xchg
aad
hlt
std
mov
mov
add
xor
dec
jg
stc
enter
pop
pop
lea
jno
jae
sbb
movsl
das
xchg
adc
push
insb
sub
jns
cs
xchg
xor
imul
imul
fidivrs
sbb
dec
push
fsub
xchg
notl
shlb
mov
dec
add
inc
rorl
add
xchg
es
mov
cmp
lahf
scas
or
fwait
sub
pop
repnz
cmp
aaa
inc
jns
mov
les
pusha
insb
insb
shlb
pop
es
mov
adc
test
cli
mov
or
cmp
xchg
test
popf
fucomi
lret
je
inc
jbe
dec
dec
cmp
outsl
test
inc
fisubl
and
aaa
and
test
sbb
dec
push
insl
or
sub
fstpt
add
int3
push
scas
adc
aad
sbb
inc
loop
dec
dec
sbb
jge
fwait
fs
shl
cmpb
addb
clc
sahf
mov
ficomps
xchg
add
data16
test
xchg
push
cs
cmp
push
push
mov
sbb
pop
rolb
mov
iret
push
sub
daa
jecxz
or
fsubrs
inc
sbb
jle
jae
mov
leave
pusha
in
lahf
cld
dec
aam
pop
and
xchg
loopne
add
ljmp
and
or
inc
jg
adc
lds
aad
pop
add
imul
adc
push
jge
dec
dec
xor
roll
and
cmp
inc
pop
mov
pop
mov
xchg
dec
cmp
jo
cs
bound
dec
loop
pop
leave
arpl
mov
cli
add
jle
dec
rcrl
arpl
aad
nop
inc
lods
aaa
jmp
imul
in
mov
movsb
scas
mov
adc
sbbb
xor
pop
add
xchg
faddl
in
js
xor
bound
call
or
imul
idivb
js
in
imul
out
in
repz
or
or
test
mov
jnp
test
ret
sarl
mov
into
mov
adc
push
mov
cmpsb
mov
ds
mov
in
cmpb
enter
cmp
jg
add
fists
outsl
jno
adc
dec
int
bnd
iret
test
lret
sub
gs
jge
inc
xchg
scas
inc
adc
notl
sub
cli
in
xor
sub
mov
adcl
sbb
out
ss
xchg
sbb
aaa
mov
icebp
add
shll
dec
cwtl
mov
insl
sub
loop
mov
pop
add
std
xlat
cs
fists
lea
sub
out
xor
pop
jns
shrb
cmp
fnstenv
sarl
into
mov
cwtl
or
lods
dec
pop
jp
mov
outsb
push
lods
jg
pushf
orb
jne
lcall
lret
adc
push
mov
lods
clc
push
pop
fmuls
ficoml
xchg
icebp
cmp
out
jns
roll
xor
cmpsl
scas
mov
sub
xchg
cs
out
fdivp
sub
add
add
sub
or
lock
clc
lret
divl
cmp
out
add
setns
mov
int3
push
aam
rcrl
add
repz
movsb
xchg
insl
pop
pop
sub
inc
sub
pop
dec
leave
js
jg
sub
sbb
rcrl
icebp
nop
bnd
pop
jg
pop
adc
pusha
shlb
mov
lods
cmp
icebp
leave
movsb
mov
inc
das
adc
gs
repnz
and
dec
sahf
and
jb
aaa
pop
adc
mov
pusha
mov
icebp
lods
inc
jnp
ret
je
aad
imul
pop
mov
lret
stc
cmp
in
push
push
dec
push
int
dec
inc
cltd
std
scas
cmp
jl
icebp
mov
xchg
xchg
pusha
sti
or
dec
pop
xor
out
loopne
fwait
shll
pop
push
ds
fwait
div
jecxz
mov
jge
in
into
les
lds
mulb
lret
xchg
popa
mov
mov
out
mov
adc
mov
loope,pt
inc
or
loop
in
popf
pop
jae
das
jo
push
js
jle
test
xor
cltd
and
sub
xchg
and
mov
stos
pop
mov
mov
jnp
es
mov
and
outsb
xor
add
push
lods
fcoms
xor
cli
push
add
mov
xchg
fsubs
mov
add
jno
xlat
pop
pop
mov
mov
aad
push
ret
lods
jbe
test
out
sbb
inc
sbb
lds
add
jo
hlt
cmc
pop
mov
mov
xor
sti
sbb
cmpsl
and
cmpsb
int3
pop
hlt
push
mov
sbb
jp
das
test
outsb
lock
loope
outsl
rclb
cltd
leave
test
jae
stc
nop
sub
xor
push
ret
repz
cs
sub
imul
sub
inc
mov
out
jnp
stos
inc
out
fmull
movsb
out
xchg
xchg
pop
sarl
add
daa
push
popf
pop
cmpsb
into
sbb
movsb
jecxz
clc
insl
sub
push
cs
add
int3
xorl
push
repnz
add
dec
je
pop
cmp
call
pop
lds
pop
les
and
mov
sbb
sbb
push
sbb
loop
push
xor
test
test
rol
aas
rcrl
icebp
icebp
nop
pop
rolb
push
jmp
adc
out
sbb
dec
inc
mov
popa
aas
pop
pop
pop
adc
sbb
jae
mov
xor
mov
dec
mov
scas
aam
or
adc
aaa
push
dec
push
add
sbb
out
xchg
cwtl
jae
sbb
out
mov
inc
fimull
mov
adc
sub
jp
orb
add
xchg
sbb
outsl
xchg
fistpl
neg
std
daa
cmp
cld
outsb
ljmp
dec
cwtl
cmpsb
js
jo
out
xchg
push
xchg
lret
or
add
mov
insb
mov
pop
mov
test
test
inc
jge
jecxz
popf
fmul
lock
scas
dec
lahf
sbb
subb
sbb
cmpsl
mov
sbbb
jmp
std
insb
pop
sahf
pop
adc
and
sub
call
cmp
pusha
lret
lods
xor
pop
cmpsb
push
sbbb
mov
mov
pushf
and
jmp
iret
data16
fisttpll
mov
enter
rcrb
mov
je
push
cmpsb
imul
and
imul
bound
iret
sub
adc
sti
mov
mov
insl
xchg
push
out
test
int
cmc
jbe
aam
pop
or
adc
std
xlat
mov
shll
push
push
jae
ss
sbb
insb
lds
or
mov
inc
shll
cmp
jg
movsb
cmp
mov
cmp
in
les
add
gs
mov
pop
mov
xchg
data16
push
fs
outsl
ds
outsl
nop
test
mov
aad
js
mov
mov
push
push
out
push
inc
testb
fldl
mov
scas
sub
mov
xor
test
jno
push
or
sbb
sti
mov
ret
sbb
dec
fildll
scas
movsl
das
pushf
dec
movsl
cmp
mov
sbb
ret
xor
pop
ljmp
cmpsl
pusha
inc
pop
jb
mov
aam
mov
lret
pusha
inc
mov
mov
data16
xchg
push
adc
aam
or
lcall
popa
cmp
testb
in
movsl
mov
pop
fimull
sbb
aad
cmpsl
mov
fnstcw
pop
lock
fucom
sub
aad
aas
jb
pop
test
or
adc
jle
inc
loop
push
andb
jb
shlb
adc
mov
out
outsb
mov
inc
jg
in
out
movsb
and
out
int3
and
xchg
aaa
nop
enter
or
jge
pop
fdiv
and
push
jnp
in
jno
pop
sub
fadd
pop
sbbb
ficoms
mov
or
mov
in
mov
pushf
xor
lods
loopne
jb
mov
and
mov
xchg
dec
cmp
not
jl
and
aam
gs
jg
or
enter
push
aam
dec
es
rcll
mov
ljmp
mov
push
repz
push
aam
and
int
sbb
addb
cwtl
xchg
xchg
add
or
movsl
jnp
pusha
es
stos
add
jne
testb
je
loop
icebp
xchg
xchg
jns
mov
jns
pop
cmpsb
lock
int3
add
lret
insl
cwtl
pminsw
pusha
bound
fwait
ja
push
cs
jmp
das
es
pop
pusha
icebp
adc
mov
xchg
mov
mov
ret
adc
aaa
or
subb
cmp
xchg
iret
clc
sbb
pop
inc
pop
adc
and
push
dec
mov
insl
aad
or
push
mov
or
push
jnp
sub
sbb
int
pop
push
xor
xor
cli
test
cld
and
std
dec
loop
outsb
lods
rcll
xchg
sub
in
inc
cltd
sub
lcall
bound
mov
lret
sbb
or
movsl
cmp
cmp
jg
ret
fwait
scas
xlat
adc
jbe
das
sbb
mov
jle
inc
sbb
or
lea
inc
pop
mov
pusha
loopne
test
popa
icebp
fnsave
pop
out
dec
sbb
push
pop
frndint
call
ret
or
mov
loopne
add
xchg
xor
or
mov
jp
add
in
das
lds
or
test
popa
mov
vmovupd
add
xchg
test
cmp
push
mov
std
leave
mov
push
xchg
adc
jne
lahf
mov
fs
cmpsl
xchg
lahf
lea
jbe
xor
out
in
mov
rol
js
popa
xor
insl
or
cmp
pop
loopne
push
aaa
into
xchg
int3
sub
rcl
jbe
daa
sti
fidivs
std
or
sbb
clc
inc
cmc
xchg
mov
lret
into
testl
pop
dec
xchg
mov
sbb
push
sub
shr
pop
jae
jp
inc
sub
push
sub
cltd
out
gs
inc
in
add
jno
dec
loope
ret
jbe
jecxz
or
test
int3
scas
mov
fcomps
pop
mov
sub
cmp
push
dec
insb
push
jl
pop
call
lahf
lea
adc
jb
sub
loope
or
push
adc
hlt
les
cwtl
push
cmp
subl
frstor
push
loope
andb
jp
mov
pop
or
push
fnstcw
ret
jl
and
push
sahf
idiv
ret
sbb
ret
push
inc
and
stc
dec
in
and
not
add
xor
cli
adc
iret
es
cmc
cmp
pop
ret
xchg
push
sti
and
fimull
mov
pop
ss
outsl
mov
rcrl
mov
and
push
add
pop
test
add
mov
mov
push
aam
test
sbb
pop
outsl
mov
pop
mov
dec
ja
pop
jne
cmp
popa
inc
and
push
push
out
mov
fmull
dec
out
rclb
stc
pushf
enter
or
pop
cmp
pusha
fbstp
addr16
xchg
aas
std
adc
xor
arpl
xchg
mov
or
cmp
cmp
push
xor
divl
adc
sbb
ret
nop
push
pop
or
jge
call
mov
inc
pslld
les
pushf
es
dec
lea
fsubr
push
outsb
push
cli
scas
inc
sub
push
out
dec
int
fsts
adc
leave
jecxz
icebp
je
cmpsb
lcall
jg
loop
xor
pop
scas
mov
sbb
or
xor
inc
cmp
lret
mov
test
jno
xlat
jno
pop
rcll
lods
mov
iret
sbb
insb
nop
mov
inc
cmc
inc
dec
loop
aad
lret
push
jne
adc
jne,pn
inc
push
cltd
inc
lods
sgdtl
xchg
cltd
fldln2
inc
test
sub
xor
pop
leave
mov
cmpsl
sbb
js
dec
rorb
push
mov
mov
jns
push
xchg
data16
push
test
movsb
addr16
and
and
into
jecxz
mov
jo
jno
fdiv
push
sbb
call
sub
pop
xor
aam
push
pop
mov
sbb
aas
xchg
mov
cmp
jmp
or
push
push
lret
push
push
mov
scas
push
stos
push
ljmp
mov
insb
shrb
into
mov
loopne
roll
cmpsb
pop
lds
or
popf
cmp
mov
and
mov
adc
add
in
das
sbb
dec
aad
mov
jae
popa
or
add
or
push
lahf
idivb
popa
adc
inc
xchg
sub
in
xchg
and
jp
add
mov
inc
in
lcall
ljmp
out
xor
iret
and
xchg
xor
and
sub
int
push
aad
jns
and
sbb
adc
addr16
jp
push
mov
loope
adc
jnp
cmp
xlat
mov
pop
aaa
jnp
adc
scas
lahf
mov
jae
ds
fiaddl
cmc
and
jbe
cmp
jge
scas
mov
js
lcall
movsb
in
rcrb
sti
shlb
xchg
mov
iret
fldenv
scas
and
sub
aas
dec
fprem
add
sub
inc
fisubrs
enter
loopne
mov
int
inc
fs
sbb
hlt
mov
aad
insl
mov
xchg
aas
push
lahf
xchg
mov
mov
mov
or
adc
xchg
jns
aaa
scas
bound
iret
push
xor
mov
lods
jne
idivb
fstp
enter
std
int
xor
call
mov
dec
fcomps
xor
lret
xor
sbb
in
sub
insb
mov
aas
jg
inc
sub
dec
loop
leave
iret
sub
adc
mov
loop
xor
inc
inc
into
bnd
or
aad
xchg
sub
xchg
pop
rorb
jl
dec
sub
aas
dec
hlt
lea
xor
fyl2xp1
mov
sbb
rclb
cmp
clc
jmp
aaa
divl
popf
subb
mov
xchg
mov
adc
mov
leave
push
outsl
or
inc
xor
xchg
adc
fisttpl
jecxz
xor
lcall
scas
cmp
mov
and
jge
imul
mov
es
addr16
popf
adc
fcoms
lock
das
xor
outsl
sbb
jmp
sahf
adc
or
sarb
jbe
inc
fcomps
mov
push
dec
stos
nop
xor
inc
jne
test
jp
icebp
nop
and
test
bound
add
stos
call
scas
sahf
repnz
call
xchg
xor
fnstsw
rclb
xchg
sub
shrl
test
add
pop
push
pushf
xor
in
cltd
out
cmp
adc
into
jns
fwait
add
and
dec
in
insb
sub
xor
imul
adc
ja
test
loopne
mov
addr16
cmp
lahf
mov
ds
in
xorb
int
inc
cmp
out
push
out
fnstcw
sbb
je
ss
xor
pop
addr16
jp,pn
fists
outsl
mov
fs
push
xchg
adc
sub
jnp
test
sbb
jl
mov
sub
movsb
pop
mov
mov
scas
inc
add
popa
xor
clc
in
or
xchg
inc
sbb
xchg
out
mov
xchg
jo
lds
push
shl
add
daa
or
dec
cmp
push
loope
cli
jne
mov
daa
nop
pop
test
es
adc
ljmp
sbb
stos
add
and
mov
sbb
add
push
mov
add
inc
ja
dec
jmp
xchg
inc
in
fcompl
loop
xchg
pop
inc
into
fisubrs
push
fbld
inc
mov
push
sbb
push
ljmp
dec
icebp
nop
jg
ret
ds
das
xchg
dec
pop
pop
pop
shrl
repz
outsl
xor
jmp
mov
jae
and
inc
pop
push
js
cmpsw
xchg
and
movsb
mov
xchg
test
cmp
push
insb
jne
fsubrl
push
out
mov
push
xchg
ja
repz
cmc
cmp
pop
mov
jno
mov
iret
aam
lea
test
shll
ja
shl
jl
xchg
sub
popf
icebp
enter
js
push
cmovg
test
inc
fstpt
dec
mov
je
bound
jno
pop
int3
scas
cmp
xchg
insl
adcl
ret
ds
sub
pop
out
jp
arpl
das
dec
lea
divl
das
cmp
shlb
push
inc
jae
js
test
mov
and
adc
push
mov
lds
or
push
xchg
or
sbb
rcl
push
xchg
cmp
repz
aad
xor
push
int3
out
or
pop
xor
jbe
imul
and
shrl
xchg
addr16
pop
adc
adc
sbb
pushf
xor
xchg
push
fcomps
mov
movsl
xchg
sub
adc
inc
sbb
bnd
arpl
addr16
in
nop
repnz
jmp
pop
mov
je
cmp
outsb
dec
ret
hlt
imul
add
jle
mov
xchg
push
push
sub
mov
je
ficoml
repz
in
and
lods
pop
movsb
shlb
mov
pop
loop
lcall
or
test
daa
xor
adc
or
adc
ss
inc
mov
xchg
fbstp
scas
xchg
in
sub
clc
and
mov
push
testb
sbb
outsb
mov
data16
cltd
pop
dec
in
lahf
addb
addb
jge
push
and
es
lret
pop
dec
mov
push
les
cmp
cmp
and
push
lds
dec
inc
dec
jbe
mov
aad
add
fnstsw
out
push
jmp
adc
jae
mov
ret
mov
or
lds
push
lahf
mov
adc
mov
ficomps
jge
sbb
shll
loop
or
outsb
ss
fwait
jmp
or
mov
inc
xor
jne
mov
cld
or
jno
out
jp
jg
xchg
rolb
cwtl
add
lcall
sub
cmp
test
push
pop
jb
mov
jne
mov
add
test
loop
scas
sub
add
pop
sub
pop
inc
call
and
adc
nop
pextrw
jnp
xorl
nop
push
sbb
dec
and
out
xchg
xchg
icebp
dec
aam
mov
mov
pop
das
xor
add
mov
fucom
sbb
pop
sub
fndisi(8087
daa
or
rolb
jp
jno
sub
stc
push
fidivrl
pop
push
outsb
and
sahf
xor
test
mov
sti
inc
xor
aam
push
inc
inc
push
repnz
lahf
scas
mov
cltd
xor
shll
jno
mov
push
divl
mov
cmp
push
mov
dec
and
sahf
jns
sti
mov
aas
jmp
or
iret
jl
int
or
ret
fistpll
push
sbb
and
jge
ljmp
hlt
adc
les
subb
fsubrs
cmc
inc
sub
inc
lcall
dec
das
jo
fs
andl
inc
pop
repz
outsb
in
adc
das
ds
ret
pop
insl
sbb
pop
push
dec
sbb
mov
hlt
xor
mulb
sub
jmp
rcll
mov
sub
sub
mov
xchg
inc
iret
ss
sub
mull
or
xchg
test
pop
aas
mov
xor
in
xchg
mov
rcll
xor
out
push
sbb
push
repnz
mov
cmp
lcall
jb
and
pop
push
ja
clc
or
mov
sarl
inc
xchg
pop
xchg
les
pop
inc
out
hlt
sbb
gs
cmp
stc
sub
xchg
pop
xchg
sub
lds
pushw
dec
adcb
iret
adc
data16
pop
loopne
mov
jnp
imul
xchg
or
ret
pusha
sbb
insl
jecxz
jge
add
loopne
adc
scas
and
mov
shl
cmpsb
in
in
daa
leave
in
aad
cmp
sbb
inc
and
push
shrl
push
fwait
hlt
xchg
inc
lock
push
or
push
cwtl
insl
lock
xor
adc
jns
fistpll
je
jge
push
lahf
pop
add
push
push
les
mov
jecxz
lret
icebp
jb
push
movsb
mov
and
push
ljmp
cmp
enter
adc
and
std
cmc
sti
lret
xor
vandnpd
in
ds
test
cli
xchg
add
in
je
test
xchg
pushf
pushf
scas
int
dec
adc
mov
mov
mov
inc
lret
cmpb
nop
out
xlat
fwait
sub
inc
test
sbb
enter
adc
negb
pop
xchg
icebp
dec
cmp
adc
scas
inc
les
xor
dec
lcall
xchg
out
bound
rcll
add
daa
xchg
dec
popf
shrl
push
add
das
lret
test
add
adcl
or
and
sti
outsb
xor
jne
loope
and
cmp
pop
dec
mov
loopne
enter
ja
loope
mov
insb
fisubs
ss
adc
sub
sbb
jmp
scas
loop
adcl
aas
clc
pop
or
sbb
add
gs
fsts
xchg
ljmp
mov
mov
data16
insl
pop
push
stos
stos
xchg
lock
mov
xchg
mov
add
mov
fmulp
mov
mov
arpl
or
rorl
nop
sub
test
sub
push
lcall
in
inc
dec
out
mov
clc
push
add
jg
mov
xlat
jmp
mov
enter
sbb
cmp
mov
in
outsb
or
pop
cmp
in
sub
scas
sub
jno
mov
in
arpl
push
inc
cmp
js
sti
test
orl
pop
cltd
out
xchg
movsl
mov
cmp
add
adc
and
xor
mov
and
push
lods
jge
pop
or
sbb
ss
jo
lret
lret
icebp
mov
add
jge
add
lods
xchg
mov
notl
mov
push
insl
add
xor
or
or
and
fstl
faddl
and
lea
ljmp
mov
xchg
out
fnstsw
movzbl
imul
ljmp
jl
shlb
sub
add
inc
fidivl
inc
adc
adc
flds
data16
pop
jecxz
xchg
cltd
jne
lret
in
sub
push
pop
jmp
jbe
lret
push
jecxz
popa
push
pop
imul
les
adc
xor
loopne
mov
lods
movsl
mov
inc
in
into
aam
mov
sub
cmpb
dec
cmp
pop
xchg
jmp
aad
cmp
xchg
add
push
xor
jns
push
loop
adc
ljmp
dec
cmp
push
stc
xlat
inc
mov
push
xchg
ljmp
dec
and
out
push
push
and
jns
fldcw
sbb
inc
test
sbb
notrack
xor
pushf
scas
fbld
sub
sbb
jmp
lds
mov
movsl
xlat
inc
xor
mov
sti
xor
mov
jg
lret
pop
mov
repz
iret
stos
inc
xchg
fistpll
pop
hlt
push
cmc
lret
mov
ret
mov
and
daa
data16
nop
push
adc
pop
adcb
jnp
sbb
stos
xor
dec
pop
cmp
aas
xlat
dec
fimull
jns
jecxz
xor
in
aaa
jnp
fisubl
mov
outsb
xchg
movsb
mov
add
dec
cmp
sub
push
xor
imul
fistpll
out
fldt
sbb
scas
pop
loope
rorl
insl
pop
dec
mov
mov
xchg
adc
bound
jne
imulb
sbb
jns
inc
inc
dec
pusha
add
mov
ds
stos
inc
mov
sbbl
int3
leave
aad
push
loope
or
mov
dec
scas
add
iret
xchg
push
ds
int3
mov
arpl
cli
adcl
stos
cmp
jae
imul
or
das
add
jno
pop
xchg
out
inc
xorb
into
or
push
xor
out
fmuls
push
test
inc
je
adc
fdivrp
fwait
push
out
mov
mov
stos
pop
shlb
test
insl
adc
add
insl
mov
mov
ljmp
or
jno
mov
dec
jo
repz
mov
jle
cmovle
sbb
push
sbb
or
insb
gs
inc
and
inc
dec
cwtl
pop
insl
lret
or
loope
insb
sarl
jmp
rorl
es
clc
pop
enter
es
push
xchg
aad
and
cmp
sti
pushf
ficompl
pop
cmp
outsl
adc
push
dec
fsts
jp
xor
add
jae
mov
sbb
lock
or
jnp
xchg
loope
cmpsl
cltd
cmp
addb
xchg
push
jl
mov
scas
inc
sbb
xor
outsl
into
or
jecxz
addr16
jmp
in
dec
sbb
pop
xchg
adc
mov
xor
xchg
dec
sbb
mov
hlt
mov
stc
pop
out
xchg
mull
adc
in
pop
push
mov
cmpl
call
xor
or
dec
dec
cmpsl
lcall
popa
fsubs
repnz
stos
jg
pop
lret
cmpsl
pop
stos
aam
adc
divb
mulb
cmpps
xor
pop
je
push
mov
dec
out
stc
test
lret
lret
mov
int
cmp
test
and
fwait
inc
dec
stos
nop
xchg
inc
push
dec
aaa
neg
pop
fldt
dec
add
or
xor
xchg
xor
sbb
mov
inc
in
arpl
addr16
fucomip
test
xor
cmp
jno
and
inc
add
out
scas
and
adc
movsb
cmp
and
js
mov
cmp
or
or
iret
in
mov
mov
jg
inc
shll
loope
loop
add
fsubrl
inc
shlb
jle
xchg
pusha
sahf
xchg
adc
gs
inc
int3
mov
testl
call
cmp
jge
sti
jb
sub
or
lods
add
jle
mov
adc
mov
add
push
pop
sub
es
scas
push
rolb
iret
outsb
jp
lahf
call
sbb
in
daa
jns
mov
lds
loop
test
sub
repnz
inc
loope
aas
fs
outsl
jno
popa
addr16
jns
stc
pop
imul
mov
add
add
das
rorl
sahf
xor
stos
data16
adc
lret
xor
andb
add
sbb
loope
add
mov
cmp
mov
pop
mov
push
fcomps
mov
rolb
dec
mov
pop
jge
popf
xor
mov
iret
fbstp
sahf
cmp
out
mov
adc
or
push
shl
out
pop
and
lea
pushf
repz
xchg
dec
mov
xchg
sub
mov
push
aad
fs
scas
push
mov
xor
push
out
cmp
filds
or
movsl
loope
xlat
dec
out
cmp
xorl
pop
popl
xchg
fnstenv
dec
out
xchg
movsl
out
xchg
aas
sbb
add
or
movsb
and
pop
insl
sub
mov
mov
popl
cmpsl
andb
push
testb
sub
test
pusha
pop
mov
mov
iret
jnp
pop
nop
cld
mov
movsb
push
insl
cmp
movsl
pop
sahf
xchg
dec
das
xor
sub
jns
enter
xchg
test
push
lock
dec
ja
inc
pushf
xchg
dec
xor
xlat
jbe
cmp
outsb
sub
rcrl
fsubrs
aam
ja
cmp
sub
daa
push
push
add
fdivl
lret
movsb
inc
cwtl
gs
jge
daa
xchg
aaa
and
pop
outsl
cmp
xorb
into
fldenv
int3
fisubs
jg
jne
cld
jne
fimuls
notl
inc
mov
sub
fnstsw
decb
push
outsl
shrl
or
das
xchg
adc
clc
hlt
icebp
adc
lret
sub
cmp
incl
jg
out
lret
cld
iret
pop
test
int
jp
movsl
mov
adc
pop
iret
sub
push
arpl
jle
mov
addr16
js
iret
push
cmp
mov
enter
push
sarb
push
dec
add
xor
fnstsw
sub
enter
jne
mov
cmp
cmp
movsb
add
jae
fsubr
dec
mov
lret
adc
iret
jne
mov
adc
test
xchg
jmp
jns
lret
mov
ljmp
sti
adc
fnstcw
les
test
xlat
lahf
jo
xchg
jae
ja
jge
jae
pop
fisubrl
clc
lods
push
push
pop
imul
stos
jl
ficompl
notb
jae
addr16
int
xor
mov
cmpsb
movnti
sbb
jg
sub
mov
jns
add
in
sub
fwait
adcl
out
jmp
mov
xchg
cmpsl
ja
std
or
mov
movsb
outsb
sub
scas
add
mov
cmpsb
loop
mov
imul
push
pop
or
clc
xchg
and
shrb
mov
lock
push
ficoml
push
shrb
bound
pop
hlt
inc
aaa
add
sub
sub
dec
push
jmp
and
fmull
push
inc
xor
cmc
mov
push
out
stos
adc
int3
push
mov
push
xchg
gs
mov
mov
xlat
xchg
lahf
rolb
push
lods
sub
or
lret
cld
push
xchg
pop
mov
inc
and
sbb
mov
in
xchg
dec
mov
xchg
sbb
mov
mov
or
cs
nop
pusha
pushf
mov
pop
or
mov
pushf
int
movsb
or
jecxz
push
pop
imul
ret
call
inc
addr16
add
mov
mov
adc
sub
sub
sbb
dec
outsl
mov
xor
jns
xor
gs
std
cs
push
int3
mov
mov
pop
test
push
mov
or
pop
fucomip
jmp
add
cmpl
pop
rol
inc
add
mov
push
pusha
adc
pop
jne
shl
shrl
dec
cmp
jns
or
sahf
xchg
das
mov
shr
xor
shll
decb
dec
sbb
jl
test
mov
adc
mov
sub
pop
cltd
sbb
das
icebp
test
jg
inc
jecxz
adc
xchg
add
mov
add
arpl
jb
mov
outsb
adc
cmc
dec
nop
adc
or
iret
data16
mov
and
sbbl
lods
imul
push
xor
sbb
scas
pop
cmp
scas
or
add
ja
fstpl
xchg
mov
lods
mov
or
adc
outsl
das
inc
push
jno
push
cmc
pop
inc
jle
cmp
or
push
mov
out
mov
ja
test
enter
and
das
push
ret
and
push
jecxz
or
daa
adc
jg
arpl
pop
mov
xor
push
xor
inc
gs
inc
mov
aam
lret
or
lret
mov
xchg
icebp
pushf
mov
mov
loope
push
nop
dec
test
cmp
addl
adc
fmull
inc
xor
jmp
cmpsl
int
les
movsl
add
or
dec
push
pushf
outsl
adc
mov
jle
cmp
pop
sti
pop
movsl
aam
insl
xchg
mov
rcrb
or
pop
js
xchg
sbb
test
aad
insl
pop
cmc
pop
sbb
mov
movsb
pop
movsb
sub
rol
mov
fldt
dec
dec
aam
adc
xchg
adc
sbb
data16
stc
push
sbb
shrb
mov
push
cli
shlb
int
mov
test
call
and
mov
jbe
repz
sbb
pop
mov
imul
dec
lret
lret
loope
inc
mov
loopne
jo
sarl
pop
test
and
mov
scas
cmc
sub
fistl
push
je
cli
mov
call
loopne
mov
incb
and
pop
sti
cltd
cmc
sub
inc
fsubrs
cmp
nop
pop
fcoms
jl
repnz
dec
jb
jp
test
pop
js
lcall
inc
lret
in
jo
lods
notb
sbb
mov
shrl
dec
scas
pop
dec
loopne
jne
cmp
jp
inc
test
push
outsb
jle
outsl
xlat
cmc
test
xchg
scas
js
or
jge
or
hlt
or
mov
push
out
insb
loope
sub
daa
lds
push
or
inc
jns
adc
popa
popa
add
fildl
add
fisubl
out
jae
xchg
mov
mov
icebp
cltd
lds
mov
dec
add
dec
popl
call
pop
test
andb
mov
ret
les
or
push
jmp
les
cmp
dec
icebp
mov
cmc
fs
mov
or
jne
cmpsl
jle
bnd
mov
jp
dec
xchg
and
repnz
inc
call
xchg
sub
fwait
sbb
sub
incl
dec
mov
jne
notb
and
movsb
mov
add
addr16
mov
pop
ret
push
fldenv
leave
jno
lret
out
insb
mov
push
dec
shlb
sub
push
popf
jg
push
daa
push
out
fnstenv
testb
ret
push
pop
mov
xor
sarb
daa
stos
sub
into
pop
inc
pop
aaa
out
out
insl
lret
inc
push
add
push
mov
jecxz
fldl
and
rclb
inc
push
arpl
jmp
mov
mov
adc
lock
lock
xchg
ss
loopne
cmp
stos
rclb
sub
jp
or
cmp
sub
fdivrl
sub
sub
aad
push
jne
pop
jge
push
mov
mov
sahf
sbb
iret
pusha
or
sbb
push
add
and
jb
jo
hlt
adc
cmp
add
cltd
sbb
mov
clc
sbb
inc
add
mov
call
fnstcw
int3
dec
mov
mov
popf
stos
cld
inc
dec
adc
shrb
les
push
out
leave
add
xor
xor
fcomi
mov
cld
xor
mov
into
adc
leave
mov
aad
mov
push
inc
das
js
stos
mov
testl
sbb
mov
lods
idivl
gs
adc
loope
sub
mov
pop
lods
inc
push
mov
test
adc
push
push
shll
add
in
sbb
out
mov
es
fistl
push
inc
or
cmp
sub
inc
fcomps
mov
jecxz
pop
stos
hlt
mov
movsl
push
mov
or
out
push
das
test
add
xlat
push
mov
out
les
push
push
xchg
jg
mov
lret
add
pusha
cmpsl
clc
adc
or
and
cmc
addr16
rcr
xchg
sub
rcrb
mov
scas
out
inc
ret
stos
cltd
repz
cmp
mov
cmp
pop
jnp
sub
jbe
or
je
dec
cli
xchg
xor
push
sbb
ficoml
daa
inc
xor
jp
test
adc
clc
clc
aam
jp
sub
push
movsl
movsl
insb
testl
mov
and
fdiv
mov
rcrl
out
mov
loope
in
popf
push
test
jecxz
pop
in
adc
or
xor
push
in
movsb
jp
shlb
mov
push
and
jge
fcmovbe
sti
mov
stos
mov
dec
xchg
jle,pn
sahf
cli
push
mov
mov
movsb
nop
aam
pushf
insl
mov
mov
in
ds
push
lock
pop
add
popa
dec
add
pushf
in
sti
cmp
out
dec
adc
xlat
sub
in
decl
and
pop
push
scas
and
mov
dec
nop
out
pop
in
cwtl
mov
in
sti
sub
jp
cmc
or
adcb
loope
xor
popf
lods
push
bound
shr
adc
clc
adc
add
push
in
popf
fmull
sbb
or
push
jns
or
cmpsw
iret
xor
xor
jge
stos
ljmp
fisttpl
filds
or
xor
add
push
les
sub
and
sbb
cmp
pop
out
mov
adc
push
sahf
popa
or
inc
int3
mov
scas
push
mov
sub
mov
cmc
pop
and
inc
int
sbb
mov
sub
cmpsl
mov
test
ret
call
sbb
xchg
jg
mov
icebp
shlb
sbb
mov
push
scas
jp
icebp
mov
aaa
add
xchg
add
add
in
divl
lcall
hlt
mov
inc
pushf
ret
mov
fmuls
mov
cli
iret
ret
mov
inc
cli
or
shl
push
mov
xor
call
adc
aad
add
shl
pop
pop
push
or
das
movsl
test
push
js
jae
mov
bound
rolb
jecxz
lea
cmc
jns
roll
outsb
es
dec
jnp
outsl
ss
push
or
mov
mov
adc
cmp
mov
arpl
loop
and
test
dec
nop
adc
loop
mov
cmp
stos
xor
add
adc
xchg
pop
mov
out
push
xchg
add
or
push
sbb
add
add
mov
xchg
loopne
fsubrp
jle
jg
and
xchg
daa
push
orb
lock
aad
pop
or
mov
xor
not
js
mov
jge
mov
mov
and
test
sub
pushf
push
fwait
xlat
xchg
test
or
fwait
sbb
popf
in
movsb
push
cli
ljmp
mov
fidivrl
or
ret
daa
ljmp
push
mov
clc
addl
int
push
andl
or
xchg
and
int3
sarb
fisttpl
mov
and
jmp
cld
jp
loope
mov
enter
repz
loop
aaa
fidivl
pop
scas
pop
test
mov
ret
out
cmpsb
xor
adc
push
pop
xchg
mov
and
add
loope
xor
scas
jb
xchg
inc
fsubrl
xchg
pop
scas
add
push
jae
add
loope
push
cmpsb
nop
sti
imul
push
dec
xchg
adc
xor
fistpll
jge
mov
pop
mov
push
jmp
dec
imulb
mov
idivl
out
jle
stos
cmp
pop
jno
mov
xchg
dec
dec
inc
pop
pop
fdivs
push
cmp
jne
inc
loop
pop
cwtl
pop
gs
cmp
add
cmp
lcall
mov
adc
sub
mov
pop
sti
pop
jge
pop
and
push
inc
jbe
cmp
outsb
stos
mov
loopne
arpl
dec
into
mov
fsts
cmpsb
fidivl
mov
pop
adc
cmp
push
inc
mov
push
mov
out
jl
sbb
ds
leave
shr
sti
fwait
sbb
sub
xchg
cmpsb
adc
push
idivb
cmp
aam
xor
add
dec
fs
or
sbb
dec
push
sbb
pop
jecxz
sarb
cltd
repnz
test
pop
inc
shrl
fnsave
iret
push
fs
mov
jae
xlat
pop
xchg
dec
rcl
cmc
loop
xlat
sub
mov
loopne
fwait
xor
pop
jg
xor
mov
mov
orl
mov
jnp
pop
pop
sahf
repnz
lock
shlb
aam
lods
mov
je
mov
adc
or
addr16
inc
jl
insl
xor
cwtl
cs
mov
and
imul
cmpsl
pusha
aam
shll
xchg
push
pop
sbb
pop
sahf
dec
sbb
pop
into
stc
jl
ds
jne
insl
mov
pop
pop
fucom
cmp
push
pushf
in
sub
mov
insb
aam
or
xlat
adc
in
mov
xchg
nop
push
or
mov
aad
inc
ret
add
test
pop
outsl
inc
pop
pushf
dec
or
jo
sub
fsubrl
jnp
or
das
aas
dec
repnz
jno
pop
mov
and
or
cli
push
movsl
mov
mov
inc
imul
arpl
cmpsb
jb
popa
push
hlt
pop
cmp
les
subl
popa
adc
mov
cmp
xchg
sub
mov
jae
loop
clc
lods
mov
pop
fimuls
jecxz
loope
pop
jg
pop
jp
stos
push
or
push
movhlps
jl
pop
fisubl
movsb
test
xchg
mov
enter
and
addr16
out
push
js
mov
es
js
jecxz
je
mov
inc
fwait
out
inc
inc
rcrl
dec
cmc
mov
das
push
cmp
outsb
daa
pop
in
xchg
cmp
pop
mov
adc
addr16
scas
push
push
iret
push
das
mov
inc
cmp
push
outsb
xor
mov
xor
ficoms
insl
clc
inc
lcall
into
jl
mov
sbb
mov
fwait
push
mov
out
leave
jo
je
mov
enter
mov
mov
and
daa
cltd
sbb
mov
dec
shrb
nop
or
stos
xchg
jp
scas
inc
jp
insl
rol
jae
pop
shrl
sahf
flds
add
test
push
pop
cli
ret
jmp
pop
jle
push
shl
adc
or
negb
dec
les
sub
cmp
cmpsb
idiv
inc
mov
int3
adcb
xor
leave
mov
push
add
inc
ss
inc
fwait
sti
fwait
mov
sbb
les
add
mov
stos
imul
aas
dec
inc
mov
mov
xor
addr16
inc
xor
fs
das
cmp
push
pop
pop
add
repz
jl
call
adcl
sub
fdivl
xchg
cmp
dec
cmc
loop
jge
movsl
ds
fstpt
out
jnp
mov
ss
jmp
mov
or
lahf
lods
mov
jecxz
ja
imul
pop
test
jno
mov
clc
lret
stos
in
cmp
in
push
icebp
lcall
leave
mov
xchg
push
cmp
subb
loopne
fwait
int
arpl
mov
jmp
adc
cmpb
loope
push
jecxz
rcrl
dec
data16
cmpsb
xchg
lods
in
mov
push
jno
sbb
adc
mov
jmp
jbe
add
push
xchg
mov
in
mov
sarb
lcall
in
lds
mov
repnz
and
in
mov
in
jl
xchg
mov
aaa
cmp
pop
xchg
sarl
adc
push
lahf
xor
test
in
xor
dec
es
cwtl
mov
inc
movl
cltd
sbb
xchg
call
sbb
popa
dec
dec
aad
sub
outsb
lret
xlat
stos
inc
fsubl
mov
pusha
xchg
or
negl
clc
xchg
int3
fdivp
loope
arpl
test
mov
sbb
or
scas
scas
aaa
std
sub
inc
adc
cmp
mov
mov
arpl
lret
cmpsl
xchg
mov
roll
int3
dec
shll
loope
pop
pushf
or
pop
cmp
sbb
loop
filds
pop
ja
pusha
aaa
jns
cmpsl
jl
xchg
mov
cmp
jg
in
pop
mov
or
mov
mov
js
idivb
mov
add
outsl
push
mov
iret
stos
and
xchg
dec
rolb
cmpsl
push
sub
lods
sub
shr
or
data16
stc
add
or
xor
mov
lcall
push
cmp
aad
aaa
pop
mov
mov
dec
pop
adc
fdivrs
dec
fldl
jno
in
mov
mov
cmp
sbb
mov
cmp
push
xor
insb
fsub
push
test
cmc
mov
jb
lods
mov
lahf
scas
inc
insl
daa
sti
lret
fisttpll
stos
fdivrs
push
cmp
xchg
fwait
jo
imul
sbb
push
cmp
aad
stos
pusha
cld
stos
fiadds
out
inc
leave
push
fildl
and
inc
sub
cmpsl
int
xlat
push
sbb
in
cmp
ret
mov
sti
inc
cmp
addr16
jmp
pop
cmp
std
inc
mov
cmp
add
push
ss
mov
test
mov
repz
call
xchg
es
push
std
and
add
addb
xchg
aaa
inc
outsb
push
lahf
bound
aad
sarl
andl
mov
mov
out
dec
out
mov
mov
fs
movsl
push
in
pusha
jl
or
arpl
lock
inc
jno
outsb
mov
movsl
cmp
inc
cmp
dec
adc
and
sar
imul
fstpl
es
subl
push
xchg
das
sub
dec
scas
cmp
and
mov
pop
jl
xor
sbb
adc
fimull
jbe
arpl
xchg
pop
push
cmp
xchg
lock
fsubp
pop
lahf
stos
push
test
enter
cs
dec
pop
out
xchg
pop
popa
das
pop
adc
mov
mov
mov
push
aam
xor
imul
push
fcmovne
pop
sub
mov
pop
addr16
pop
adc
cmp
fnstcw
inc
pop
lea
rcrb
nop
dec
xchg
or
mov
fcomps
popa
test
xor
sbb
xchg
pushf
lods
imul
shrl
fidivl
jne
pop
mov
loopne
lds
loop
cmp
jnp
imul
mov
push
imul
and
or
mov
push
jp
xor
cmpsb
mov
sub
add
mov
pop
faddl
aam
popf
fstl
lret
and
rorl
sub
movsl
scas
sbb
into
jne
fcoml
jg
xchg
lods
movsb
mov
mov
pop
mov
pop
ret
add
add
lret
add
shrl
mov
xchg
rorl
sahf
dec
cmpsl
out
rolb
mov
popf
push
mov
jmp
mov
sub
push
in
fsubrs
lcall
lds
dec
mov
test
inc
mov
jmp
leave
or
je
pushf
scas
pushf
pop
mov
or
inc
cmp
or
test
adc
xchg
dec
pop
lock
lret
push
js
sbb
and
fsubrl
test
jae
mov
push
sbb
repnz
loope
xor
repnz
xchg
jl
xchg
xchg
test
mov
insb
pop
aaa
aad
mov
push
sti
xchg
je
stos
in
dec
and
sbb
jl
mov
jnp
iret
lds
adc
bound
xchg
sub
cld
pop
lds
in
jnp
in
push
cwtl
loope
or
aaa
sub
scas
roll
mov
gs
std
or
or
sbbl
imul
inc
aas
adc
push
fiaddl
push
xchg
dec
stc
shrb
xchg
shl
mov
cmp
jmp
mov
mov
gs
mov
and
lods
gs
addr16
dec
aaa
pop
pop
arpl
lret
and
jno
mov
dec
adc
lahf
or
cwtl
mov
xor
mov
xchg
not
add
insb
iret
add
bound
inc
imul
cmp
mov
aas
lea
movsb
call
outsl
add
xchg
jmp
push
imul
fbld
ret
pop
ljmp
mov
sbbl
jb
add
push
std
pop
mov
shr
stos
mov
push
call
addr16
dec
lret
jge
stos
stos
and
sub
lods
dec
mov
xor
dec
in
pop
shll
mov
mov
nop
pand
pusha
ss
pop
xchg
pop
icebp
dec
inc
int3
das
xchg
in
fstpt
imul
cmc
outsl
aad
sarb
pop
lods
outsb
lds
je
stos
jecxz
pushf
lock
cmp
mov
inc
cmp
std
std
rol
fcmovne
push
mov
lcall
sub
xor
dec
xchg
mov
mov
bound
jp
bound
clc
mov
dec
sub
pop
roll
push
push
jno
mov
xlat
cmpsl
mov
rcrb
ret
in
cwtl
xchg
les
lret
inc
scas
je
in
adc
loop
push
lods
sub
cmc
mov
adc
stc
adc
repnz
push
aas
mov
xor
lds
call
and
fldenv
pop
cmp
int3
in
clc
mov
dec
cmp
mov
mov
mov
std
pushf
shlb
mov
decl
aad
pop
xchg
movsl
outsb
add
push
gs
mov
push
test
sbb
adc
icebp
mov
sbb
pop
and
adc
outsl
lret
call
ss
jne
inc
std
inc
dec
stos
or
fimull
pop
mov
test
mov
stos
adc
cmpsl
cmp
sarl
mov
fstps
fsub
daa
filds
mov
inc
aas
push
cltd
sub
das
pop
aam
xor
adc
shr
std
jne
pop
and
into
inc
inc
jecxz
add
xorb
fisubl
data16
mov
sub
jecxz
or
or
addr16
fwait
shr
xchg
add
mov
mov
in
fsubr
cmp
pop
incl
outsb
aaa
adc
in
sub
nop
mov
and
sti
adc
mov
mov
out
xchg
popf
movsb
scas
subb
sbb
dec
popf
mov
clc
sub
ds
cmp
add
sub
sbbb
xchg
inc
xchg
cmpsl
sbb
and
cld
xlat
jmp
ds
in
pop
inc
and
cltd
movsb
mov
rcr
decl
in
cmp
pop
xchg
lcall
pop
sub
sarb
popf
loop
es
lea
pop
out
sub
jge
flds
sbb
mov
add
fs
dec
loope
int
jne
lcall
scas
rcrl
mov
or
jmp
or
xchg
repz
stc
fistps
jg
out
ljmp
xor
add
gs
int3
fiadds
lcall
cwtl
out
xor
fdiv
repz
push
ficoml
jns
scas
sbb
rclb
adc
inc
lret
mov
pop
xlat
shrb
out
push
stos
xor
and
dec
adc
out
inc
adc
jb
outsb
jo
inc
mov
je
addr16
cmp
sub
lret
push
mov
lret
sub
mov
push
pop
aaa
fsub
imul
cs
inc
and
add
insb
xor
xchg
pop
pop
xchg
cmpxchg
fdivrl
xchg
push
cmpsl
cmp
jo
addl
fcompl
inc
negl
cwtl
sti
xchg
pop
adc
or
out
sub
cmp
stc
cmp
xor
or
scas
cmp
and
lret
xor
addb
cmpsl
cmp
mov
or
dec
dec
cmpsb
arpl
pop
ljmp
mov
lods
ljmp
es
add
push
mov
fwait
repnz
xacquire
mov
std
sarb
mov
dec
stos
adcb
sar
jl
add
insb
cmpsl
mov
loopne
mov
cmp
push
les
clc
dec
add
subb
ror
sub
int
lret
pop
aam
jle
or
pop
sbb
fildl
das
cltd
push
popf
ljmp
fwait
push
aad
cltd
loopne
mov
rcrb
out
js
mov
cltd
ficompl
lds
inc
mov
jnp
push
insl
dec
sbb
bound
pushf
ja
arpl
inc
xchg
jo
lods
pop
push
xchg
adc
dec
fs
lahf
pop
sub
out
and
enter
lods
mov
loopne
xor
mov
leave
ss
inc
sub
push
jns
mov
sub
in
mov
test
call
ljmp
test
add
mov
and
sbb
pop
int3
mov
inc
xor
add
pop
mov
into
les
popa
mov
xor
fwait
cmp
sbb
outsl
adc
insb
scas
fldl
lret
movsl
imul
mov
adc
cli
inc
test
mov
shrl
lds
shll
and
ss
xchg
dec
leave
or
mov
sub
aam
lret
mov
sub
test
pushf
dec
shrl
inc
data16
pop
lock
push
dec
adc
aad
jl
and
je
xchg
mov
mov
mov
mov
shll
push
dec
int3
jo
sub
pop
repz
sub
push
jge
pop
pop
test
jmp
cmpb
and
je
popa
xor
repnz
pusha
test
fnstenv
sti
cli
cmp
mov
jne
aas
iret
popf
mov
test
jmp
adc
idivb
rolb
adc
jmp
lea
jns
dec
jmp
dec
dec
xchg
jg
pusha
mull
les
insb
adc
or
loopne
push
test
scas
je
cmp
adc
ss
inc
loopne
fimull
in
dec
pop
adc
push
sbb
adcb
or
test
es
ficompl
iret
sub
mov
push
insl
add
mov
out
sbb
and
inc
inc
push
dec
dec
into
and
insb
subl
dec
jnp
xlat
and
in
dec
jp
jecxz
sbb
jle
sarb
fiaddl
scas
cli
inc
loopne
lret
add
pop
repnz
stos
je
sub
and
adc
sub
scas
sbb
aaa
stc
mov
fisubrs
andb
sub
sbb
stos
cli
xchg
mov
shl
mov
adc
xchg
sub
sub
sahf
xor
add
pop
jb
lret
dec
sbb
and
popa
cmp
and
mov
je
lds
je
icebp
lock
inc
xor
in
in
xor
or
scas
ret
lods
add
xchg
rorl
movsl
in
mov
and
dec
divb
xor
aaa
xchg
gs
push
insb
sarl
xor
dec
test
cwtl
push
dec
jg
jge
pop
stos
ljmp
dec
dec
mov
dec
outsl
aam
xlat
pop
cmp
clc
sub
fiadds
dec
pusha
movsb
lcall
pop
dec
xor
test
mov
jp
and
clc
sahf
push
inc
scas
mov
xor
fwait
lock
jle
popf
scas
inc
mov
xor
hlt
mov
pop
cltd
clc
or
adc
adcb
dec
jo
loopne
test
cmpsb
ret
xchg
ljmp
mov
xchg
pop
aas
fcomps
cmpsl
push
lahf
ss
cs
sbb
int3
dec
or
mov
imul
sbb
clc
mov
mov
lods
pop
sti
mov
in
in
push
cltd
push
sub
mov
sti
push
rcrl
pop
xchg
xor
fwait
lret
mov
rcl
inc
aas
xor
adc
sbb
push
xchg
xchg
insl
enter
mov
add
mov
add
js
sbb
push
outsb
mov
mov
mov
lahf
aaa
ljmp
cli
dec
in
xor
dec
xchg
cmp
incl
adc
aaa
mov
jecxz
mov
clc
aas
dec
xor
pop
vrcpps
aaa
lds
ds
mov
cmp
xor
mov
pop
cmpsl
sbb
cmc
mov
sub
add
inc
add
sbb
inc
mov
notb
adc
lods
inc
mov
push
cmp
push
add
push
cmp
out
xchg
pop
adc
xchg
sub
lret
lret
sub
bnd
fldt
insb
mov
and
adc
cmp
fbstp
aad
and
enter
or
stos
xchg
push
hlt
pushf
in
dec
into
aad
lock
cld
aaa
mov
and
divps
xchg
jmp
jle
push
jns
rcrb
mov
mov
cltd
pop
pop
push
jl
subb
movsb
sbb
aad
adc
pop
cs
daa
inc
xchg
sub
addr16
fadds
popf
hlt
adc
adc
int3
pop
imul
cmp
movsb
jge
lods
out
push
repnz
and
repnz
pop
inc
and
mov
mov
mov
shrl
fwait
xchg
jge
pop
sbb
jle
mull
outsl
xor
add
fadds
das
inc
mov
sub
mov
add
aas
dec
sbb
adc
xchg
xor
pop
movsl
and
in
push
push
xchg
jnp
lods
gs
and
sub
adc
mov
mov
xor
cmp
push
lea
mov
call
lea
jle
imul
test
bnd
cmc
pop
sahf
out
lods
test
shlb
fisttps
xchg
in
imul
inc
fwait
pop
sbb
nop
mov
fldenv
mov
mov
aam
xchg
pop
jae
mov
cmp
es
or
enter
int3
sbb
dec
mov
dec
xchg
cmp
call
xchg
subl
int3
sub
dec
gs
cmc
xchg
mov
jle
inc
push
test
adc
int
cmp
adc
les
mov
sub
add
and
pop
jecxz
fs
bound
outsl
push
cmpsl
pop
lock
cli
popa
mov
lcall
movsl
jl
cmp
aas
in
mov
jno
push
in
sbb
dec
ss
dec
lcall
or
fldl2t
lret
jmp
sub
icebp
sbb
in
out
xchg
imul
add
pop
jb
pop
jge
stos
sub
fldcw
sahf
testl
sub
movsb
repnz
mov
cwtl
ljmp
push
push
jl
repnz
or
and
mov
lods
inc
nop
mov
mov
sbb
add
cld
xchg
popa
or
pop
mov
push
pusha
cmp
loop
xor
mov
dec
sub
repz
pop
insb
xchg
mov
lcall
push
out
int3
add
fdivrl
stos
pop
repnz
lods
push
ret
es
adc
push
lds
and
int3
cmpsl
jp
add
iret
xor
push
gs
ja
sub
push
jmp
movsl
das
mov
push
orb
fildl
pushf
arpl
popa
arpl
pop
out
and
xchg
jl
ds
jl
xchg
inc
xchg
sub
loope
pop
push
push
mov
inc
arpl
in
cmp
insb
add
testl
mov
add
adc
mov
addr16
pop
mov
mov
push
movsl
fldenv
scas
inc
mov
mov
popf
outsb
popf
mov
hlt
xor
scas
clc
incb
iret
sub
sub
cmp
pushf
jg
sahf
xor
pop
loopne
mov
jle
xchg
cmp
push
mov
cmpsl
sbb
mov
push
roll
insb
ret
insb
push
xchg
cmp
jns
insl
mov
lods
inc
mov
pusha
sbb
jo
mov
xor
movsl
in
inc
inc
cmpsb
std
or
xor
sahf
jnp
xchg
bound
dec
sbb
nop
mov
pusha
mov
movsl
jecxz
cmp
repnz
mov
inc
cmc
scas
in
fbstp
sarb
sub
jl
xor
scas
int
lahf
ja
add
sahf
sub
cmpsl
fisubrl
adc
or
jg
push
ljmp
jno
sti
ljmp
or
xor
sub
mov
and
adc
push
jbe
fnsave
push
pop
pop
cmp
lahf
mov
or
out
movsl
xor
jp
jg
rcrl
in
mov
and
push
cli
fmull
call
outsb
push
jle
fildl
mov
add
imul
push
inc
ret
in
or
pop
ret
int
pop
lahf
icebp
out
repz
ds
arpl
xlat
sbb
sbb
ljmp
mov
sbb
mov
iret
mov
das
insl
inc
xor
cmpsl
dec
and
xlat
dec
fadd
leave
mov
and
push
xlat
xchg
mov
dec
xlat
cmpsl
dec
cmc
jl
mov
les
lret
pop
mov
adc
dec
outsl
stos
pop
or
enter
ss
dec
mov
aad
inc
inc
lods
jge
repnz
adc
fimull
imul
imulb
jecxz
jp
push
sbb
mov
adc
pop
cmc
out
outsl
push
mov
call
inc
mov
imul
fsubr
stos
xchg
movsl
or
xor
mov
rcr
push
in
into
in
lahf
mov
aam
ja
or
push
pop
xor
cmp
lods
add
shr
clc
and
lret
insb
jle
popf
push
popf
std
mov
sub
jg
je
mov
push
xchg
js
dec
adc
int3
cmp
add
fdecstp
test
jg
mov
mov
adc
jmp
dec
adc
and
out
aam
lahf
aas
fimuls
or
in
leave
loopne
sbb
push
or
movsl
call
lret
mov
and
fidivl
pushf
divb
jle
push
lea
or
mov
ljmp
ja
lret
push
or
icebp
in
pop
divb
mov
es
or
mov
jns
xlat
jmp
imul
xchg
sbb
dec
lock
pop
lret
xor
jne
bound
outsb
jle
test
push
push
aas
cs
mov
ds
fisubrl
enter
stc
dec
sbb
or
pop
sub
out
scas
cmp
add
inc
cs
push
sbb
and
and
mov
outsl
out
lods
shl
popf
cmc
adc
pushf
xchg
lret
in
repz
pop
xchg
mov
das
jl
inc
ret
sub
mov
std
and
daa
insl
icebp
std
xchg
and
sbb
in
xchg
mov
or
adcl
pop
int3
lahf
sets
jne
and
and
mov
in
jl
sub
nop
and
stos
inc
push
inc
pop
loope
sti
mov
cld
daa
push
sahf
pop
int
push
int3
sub
bound
lea
shlb
les
insl
sahf
in
dec
mov
lds
cld
mov
mov
sub
hlt
mov
loop
add
outsl
mov
lods
incb
popl
inc
aaa
andl
jg
dec
mov
ret
pop
movb
cmc
push
out
imul
xchg
ficomps
dec
xor
mov
std
mov
push
out
leave
push
mov
insb
add
mov
and
and
jae
test
je
mov
xchg
sbb
push
jno
repz
call
mov
or
cs
inc
mov
mov
mov
lock
ds
in
jnp
xlat
ret
push
cs
loop
and
out
sbb
imul
or
add
jne
pushf
out
mov
pusha
add
test
stos
into
fdiv
inc
rcll
push
sarb
in
jb
sbb
fstpt
inc
add
iret
cltd
mov
stc
mov
push
sbbb
int
inc
mov
fwait
pop
fcompl
insl
mov
movl
mov
mov
bound
cmc
push
mov
pop
xchg
sti
push
cmpsb
mov
std
aaa
mov
ret
mov
cld
mov
jmp
bound
jge
gs
lret
shlb
movsl
popa
adc
call
ret
dec
and
mov
add
ss
sbb
mov
test
fcmovnbe
cli
inc
lret
sahf
mov
xchg
fldcw
addr16
mov
mov
inc
or
jb
mov
test
xchg
add
and
ds
test
imul
icebp
mov
data16
int3
xchg
fs
and
adc
sarl
jl
add
xchg
lods
cltd
jl
xchg
lahf
or
lods
mov
shll
pusha
and
test
cmpl
shrb
pop
mov
pop
mov
icebp
xor
push
jecxz
xchg
lds
push
popfw
or
sbb
jl
out
ja
push
jnp
fistl
nop
pop
pop
test
adcl
mov
xor
popa
jno
xchg
loop
loopne
add
push
aas
scas
xlat
rorl
daa
pop
outsb
or
or
or
out
sbb
dec
hlt
mov
aam
mov
inc
and
push
gs
jbe
lahf
aad
inc
add
fisttpll
pop
repz
mov
xchg
notl
adc
xchg
insl
lock
xor
std
jmp
cmp
in
stos
and
jno
and
xor
lcall
sbb
inc
cltd
imul
in
negl
sbb
das
out
mov
shrl
cld
stos
fcmovu
xorb
and
fldcw
in
imul
add
lods
jmp
xlat
push
jmp
jg
loope
xchg
aaa
int3
jnp
addl
in
rorl
outsl
jnp
fnsave
stos
loope
lds
dec
and
sbb
call
jle
lcall
or
out
add
sbb
adc
add
test
std
inc
pop
iret
pop
or
negb
xor
pop
cmp
int
dec
stos
std
out
jno
xchg
out
das
cmp
xchg
andb
in
sbb
lcall
lcall
outsl
adc
test
jl
and
fcmovnu
rolb
iret
std
leave
mov
jnp
cmpsl
jecxz
pushf
js
pop
jmp
mov
or
and
mov
movsb
ret
mov
cwtl
mov
mov
mov
scas
sbb
xor
gs
add
das
jae
sbb
es
mov
xchg
je
adc
jl
mov
lahf
xor
data16
addr16
ja
pop
adc
cmp
push
test
add
inc
lahf
lods
mov
adc
mov
jg
mov
add
sub
subl
icebp
sub
inc
mov
ljmp
call
push
andl
adc
rol
mov
mov
push
xchg
fnstenv
fwait
loopne
xlat
cmp
sub
sub
xor
add
cltd
dec
mov
out
pop
cmp
bound
fwait
mov
mov
test
mov
push
ljmp
mov
cmp
fiaddl
lods
or
ja
sbb
rorb
jle
stos
fadds
dec
inc
pop
in
inc
and
mov
outsb
gs
stos
lds
ret
je
ja
mov
sub
pop
dec
sub
movsb
repnz
rep
subb
clc
push
addl
dec
ret
dec
cli
pop
cli
aas
mov
inc
and
mov
loop
inc
sub
test
test
movsb
in
push
mov
lods
cli
mov
data16
out
xor
push
push
mov
pop
jnp
call
xor
push
loop
enter
lcall
dec
ss
add
loopne
cwtl
scas
daa
ja
movsb
inc
mov
xchg
jle
mov
mov
test
pop
arpl
mov
loopne
sub
ss
loop
ds
lods
nop
loop
repnz
lock
mov
xlat
test
dec
nop
jo
scas
call
enterw
cwtl
bound
jno
out
push
lea
andl
inc
subl
cmp
in
or
fs
adc
mov
js
loopne
adcb
pop
adc
cmp
sti
jl,pn
push
add
sub
mov
sub
cmc
mov
test
xchg
jne
lret
mov
mov
xchg
push
jae
fisubrs
mov
add
lcall
jnp
or
mov
lock
std
xor
outsb
in
repz
xchg
sub
arpl
cmp
dec
scas
mov
popf
lods
int
xor
icebp
adc
gs
repnz
leave
insl
sub
adc
out
dec
cmpsb
out
mov
jns
aam
inc
add
or
into
icebp
mov
movsb
cltd
mov
loop
cld
or
test
cwtl
fstpt
pop
jge
shrl
jno
cmpsb
push
pushf
ror
cmp
sbb
pushf
testb
pop
and
inc
fists
sbb
aad
hlt
mov
sub
mov
call
sbb
or
jl
cmp
sbb
xchg
sbb
sahf
mov
popf
mov
dec
stc
push
div
add
pushf
xchg
lods
mov
lcall
test
xchg
aaa
hlt
subl
aam
sub
sti
adc
jnp
add
push
inc
mov
aam
into
cwtl
addr16
pop
aam
out
andl
xchg
and
loopne
or
bnd
lods
in
push
jmp
cmp
and
mov
scas
mov
jbe
xchg
mov
cld
or
push
ficomps
ret
enter
sub
ret
ds
lahf
mov
push
data16
fwait
scas
xchg
cmpsl
sbb
mov
shlb
mov
jl
inc
sub
loopne
jle
jmp
push
fsubrs
adcl
cmc
stos
mov
loopne
out
mov
je
lret
pop
push
jecxz
inc
pop
push
cmp
and
ret
add
aaa
dec
scas
fcomps
jmp
mov
xor
push
jmp
test
hlt
sub
call
das
mov
dec
out
aam
dec
pushf
addw
adc
sbb
push
sahf
xor
xchg
cs
mov
scas
dec
nop
mov
xor
inc
orl
sbb
adc
pop
mov
pop
shlb
xor
inc
xchg
lods
ja
push
sarb
test
sbb
dec
lahf
pushl
rclb
xor
mov
inc
sti
out
rolb
pusha
int3
testl
jg
test
xchg
mov
sahf
stc
mov
ret
cltd
mov
out
mov
popa
adc
dec
push
jecxz
and
xor
mov
daa
xchg
pusha
inc
sub
add
pusha
mov
adc
mov
mov
clc
sub
ja
mov
cmp
mov
pop
icebp
pop
je
fisubl
js
xchg
pusha
fidivrl
imul
ficomps
and
lea
pop
sbb
and
sar
js
mov
mov
in
adc
into
testb
cld
enter
sbb
cltd
or
out
mov
push
repz
shlb
lcall
and
sbb
dec
dec
or
adc
mov
jg
mov
pop
dec
jecxz
pop
jg
aaa
jl
add
subl
test
add
loopne
mov
lods
sub
rcr
je
jo
jge
stc
rorl
or
sub
pop
push
je
cmp
mov
adc
in
sbb
adc
daa
mov
int3
sub
cmp
iret
cmpsl
out
jg
pop
mov
mov
sbb
mov
mov
hlt
and
adc
pop
sbb
mov
sub
iret
in
out
dec
ds
call
hlt
sahf
clc
sbb
push
pop
mov
es
push
fidivrl
or
lods
jae
sub
push
sbb
hlt
sarb
jp
daa
pop
inc
mov
add
mov
xor
call
sarl
out
movsb
sbb
es
test
jg
aas
add
pushf
addr16
cmpsb
mov
stos
push
dec
push
pop
inc
iret
fistl
ret
adc
fnsave
cli
shl
rclb
lret
jnp
or
inc
insl
aam
ret
jb
sbb
repnz
mov
adc
sub
adc
sti
dec
inc
mov
sbbb
in
sub
xchg
nop
repz
jecxz
sub
sbb
jge
sub
sbb
push
in
mov
cmp
mov
dec
sbb
jnp
push
in
iret
pop
out
and
cwtl
in
int3
inc
pop
idivb
xor
sub
outsl
jnp
dec
dec
sahf
repz
inc
pop
mov
int3
fdivrl
or
mov
or
inc
xlat
push
stos
aad
push
and
stos
inc
outsl
sbb
dec
or
mov
xchg
ljmp
push
outsl
push
and
mov
xorb
movsb
arpl
loope
into
cltd
jbe
insl
rcl
push
push
push
add
rdpmc
mov
push
test
adc
pop
dec
xor
mov
push
push
add
and
or
popa
cmp
mov
cld
ljmp
push
shll
mov
jns
or
cmp
cmp
jnp
pop
lods
add
push
rcll
fisubs
sti
pop
cltd
out
mov
pushw
adc
jle
insb
add
pop
sbb
add
mov
loopne
push
jne
out
cmpsl
int3
xchg
xchg
fisubs
sbb
pop
cmp
jae
inc
js
shrl
xchg
out
jg
hlt
xchg
adc
cmp
mov
dec
fcoml
mov
jo
sbb
adc
fistps
movsb
leave
icebp
aaa
adc
nop
dec
mov
subl
pop
stos
and
enter
dec
ja
ds
test
data16
inc
mov
lret
cwtl
popa
imul
test
xor
das
inc
not
fcoms
mov
and
loope
xor
mov
in
mov
aas
push
stc
xchg
cmpsb
std
inc
push
pop
addr16
bound
mov
gs
in
cmp
filds
and
or
int3
sub
ss
jmp
mov
test
jb
xchg
mov
cld
lret
cmp
mov
into
fxch
xor
cli
jbe
lret
push
sub
mov
loopne
dec
add
dec
in
xchg
movsb
enter
xchg
mov
cwtl
ds
jge
pop
jae
dec
add
lock
fmulp
sbb
sub
or
push
sub
loopne
sbb
repnz
mov
cs
inc
mov
scas
mov
mov
imul
popa
xor
jmp
dec
fmuls
pop
sbb
aam
cmpsl
adc
ret
push
jmp
mov
sub
adc
rcrb
fsts
mov
test
ss
in
jle
xchg
add
jb
sbb
add
addb
mov
push
cmp
testb
es
mov
cli
addr16
lahf
mov
aas
push
imul
jge
push
sbb
mov
push
mov
or
mov
or
cld
aas
cmp
mov
fimuls
mov
sub
movsb
mov
imul
mov
sub
clc
cmp
mov
dec
out
xlat
push
ljmp
je
adc
cld
cltd
pop
repnz
repz
es
jno
xchg
xor
mov
mov
mov
sub
mov
sub
cmp
dec
and
outsb
test
lret
jae
lock
bound
pop
mov
mov
js
inc
lods
xchg
xchg
inc
bound
push
outsl
test
and
addr16
mov
insl
push
sub
add
fsubp
outsb
mov
inc
cmp
cmp
call
sub
inc
pop
or
jnp
rcr
jae
imull
xchg
cli
xchg
movb
and
aam
scas
add
lods
ss
jno
push
sub
insl
adc
jmp
and
xchg
insb
shlb
bound
js
xrelease
push
xlat
outsb
jns
cmpsb
ds
and
cs
cmc
lods
inc
daa
mov
out
daa
adcl
subb
aaa
push
fbstp
aad
xchg
pushf
sub
minps
push
mov
stos
pop
ds
xorb
test
pop
cmc
xchg
dec
addr16
push
subb
mov
xlat
xor
jmp
pusha
push
ljmp
pushf
dec
and
and
es
or
dec
outsb
add
rcrl
push
fidivrs
stc
test
lret
jp
bound
bound
xchg
cltd
or
rolb
outsl
loop
cmpsl
pop
pop
aad
jl
pusha
scas
outsl
jbe
adc
jnp
sbb
aas
scas
mov
jp
es
adc
jp
mov
fsts
std
or
je
adc
dec
xchg
loope
pop
or
sub
loop
out
nop
jg
jb
add
add
aam
imul
pop
pop
jnp
lret
push
dec
dec
pop
add
dec
mov
push
or
lahf
mov
scas
subl
inc
and
mov
or
cmpsl
shll
cmpsb
ss
scas
jle
and
xorl
dec
fldenv
lcall
js
iret
popf
mov
pop
mov
movsb
ss
cwtl
push
sbb
ficoml
dec
and
pop
pop
mov
push
movsl
xor
les
in
pop
call
jnp
das
into
adc
fcoms
push
cli
insb
mov
sub
shl
scas
jne
jp
aas
xor
imul
out
sub
mov
dec
mov
loope
dec
push
enter
shlb
pop
jno
add
push
sarl
pushf
mov
fildl
test
loope
sahf
jmp
mov
lods
xchg
jbe
or
int
xor
out
jns
fsts
ficompl
ficomps
lea
popa
mov
sub
stos
inc
or
lods
push
insl
fchs
pop
adc
jo
hlt
and
xor
cmpb
mov
cwtl
popa
fs
inc
out
test
aaa
push
pop
xor
insb
mov
out
popf
fwait
stc
testl
xchg
roll
pop
mov
adc
mov
pop
mov
jg
cmp
sarb
jo
loop
repnz
mov
lods
mov
fisttpl
cmpsb
mov
stos
and
inc
xor
clc
xchg
mov
cmp
mov
sub
push
mov
adc
mov
cmc
or
popa
in
inc
dec
mov
add
fldl
jmp
mov
movsl
clc
or
sub
sarl
add
adc
lods
cwtl
movsb
out
inc
int3
xor
shlb
sub
popa
mov
fbld
jns
jbe
jbe
mov
mov
adc
sbb
or
imul
jno
lahf
dec
ss
mov
repnz
pushf
mov
sbb
xchg
lret
add
mov
xchg
mov
pop
repz
pusha
xchg
mov
pushf
xchg
aaa
mov
ss
cmpsl
or
fbstp
outsb
push
ret
in
pop
dec
or
sub
sbbb
sbb
add
aas
push
movl
ja
and
push
subb
mov
mov
inc
dec
insb
add
lea
push
iret
mov
add
int3
dec
inc
mov
rol
idivb
dec
pop
in
ret
roll
cmp
or
aas
in
icebp
mov
rolb
lcall
test
add
loopne
repz
push
inc
and
idivl
sbb
outsb
sub
add
xor
push
dec
and
pop
pop
pop
pop
negb
lods
jo
inc
push
inc
adc
cld
adc
mov
pop
mov
outsb
pop
dec
mov
fwait
testb
jns
adc
mov
xor
fstps
pop
pop
cmp
cmp
sbb
jo
clc
ja
cs
jp
das
jl
add
repnz
ds
mov
sub
in
je
aad
outsl
lods
das
push
jnp
push
js
mov
shrl
jp
mov
xlat
lret
dec
sbb
mov
jg
xchg
pop
cld
or
test
pop
gs
in
js
sbb
ljmp
pushf
test
daa
mov
mov
out
mov
pop
xor
addr16
push
je
fisubrl
push
js
pop
pop
sti
pop
inc
test
aam
cmp
mull
ds
jb
push
xor
inc
or
jmp
fcomp
or
mov
push
std
sbb
pusha
lret
xchg
js
lcall
dec
stos
jecxz
push
sbb
xchg
sbb
xor
idivl
sbbb
dec
dec
test
inc
cmp
jmp
jno
inc
call
popa
and
lahf
notl
je
pop
xchg
in
dec
ja
pop
lock
dec
dec
cwtl
std
or
and
cmp
and
lret
mov
sub
ds
adcb
pop
sub
bnd
aas
sbb
push
push
xchg
xor
mov
and
mov
enter
jae
rclb
push
sbb
mov
rclb
dec
dec
loop
mov
andl
lods
jl
xlat
repz
fdivs
push
out
push
ficoml
cmp
shll
mov
insb
sub
cwtl
pop
das
dec
sub
mov
push
mov
mul
xchg
sbb
es
mov
xchg
imul
unpckhps
sbb
ja
mov
test
dec
push
adc
cmpsb
pop
sub
cmp
pop
je
loope
rol
xchg
int
and
mul
push
xor
pop
test
push
or
xor
inc
inc
out
push
push
aad
adc
mov
pop
cmp
test
add
cwtl
test
cltd
stos
test
xchg
add
add
xchg
popa
or
imul
push
pop
mov
mov
shl
or
nop
push
shlb
insb
rolb
loopne
jnp
sub
sbb
stos
push
enter
cmp
loop
xor
daa
loop
fsubs
jne
insl
or
scas
clc
out
xchg
fidivl
or
cmp
sub
add
dec
in
add
mov
and
shrl
pop
xchg
push
mov
or
jnp
cmpsl
call
inc
repnz
pop
adc
insb
enter
mov
lcall
xor
scas
in
xchg
std
call
mov
dec
add
loop
sahf
cmpsb
dec
xchg
arpl
cmpsb
pop
aam
and
adc
insb
aaa
cmp
mov
xor
and
push
lahf
ljmp
inc
or
pop
lods
dec
push
sub
fdivrs
mov
out
add
movsl
test
pusha
and
inc
xchg
and
mov
adc
add
in
and
sti
cli
jb
aaa
and
bound
push
jmp
fdiv
ljmp
mov
loop
std
stos
inc
sbb
inc
fstl
xor
jbe
mov
lock
cld
and
sbb
jmp
or
mov
dec
daa
add
or
nop
mov
sbb
movsl
pop
dec
cmc
aas
dec
adc
jne
cmp
scas
adc
int3
jmp
ficompl
adc
adc
mov
out
dec
jno
adc
scas
out
add
jne
outsb
das
stos
push
roll
mov
cwtl
stos
loopne
adc
outsl
add
mov
mov
rcll
xchg
add
test
dec
test
mov
mov
popf
jo
lds
loope
stos
and
jp
int3
enter
add
and
pop
mov
inc
pop
addr16
and
push
xchg
cmp
mov
je
add
xchg
fs
movsb
cmp
or
ret
pop
loope
inc
add
xchg
xor
loopne
daa
fwait
add
js
jo
xor
inc
mov
add
loop
adc
push
ljmp
call
aas
ret
xlat
lock
in
lods
or
insb
jbe
mov
rorb
in
xchg
sub
sbb
inc
es
mulb
push
int
mov
inc
test
push
lcall
gs
pushf
mov
stos
jecxz,pt
xchg
lret
aad
jno
lds
aad
jmp
hlt
int
push
push
mull
jne
pop
int3
xor
inc
xor
jnp
sub
test
fs
mov
xchg
divb
outsb
rcrb
lds
push
cmp
cs
xor
fs
rcr
push
imul
test
lds
push
out
mov
xor
mov
push
scas
or
addb
out
sub
fildll
shl
daa
mov
iret
xor
mov
ret
aas
and
sbb
aad
fcompp
xchg
shrb
cli
mov
xchg
pop
push
js
push
lahf
xor
je
push
es
mov
add
fsubl
repz
jle
dec
mov
adc
mov
lahf
and
mov
inc
fsubs
lods
pop
inc
mov
lret
sti
cmp
dec
sub
dec
shlb
aam
push
popa
sahf
cmp
out
jg
mov
pop
jp
xchg
movsb
pop
cmc
cmp
leave
mov
push
insl
sbb
pop
movsb
stc
mov
lahf
or
push
push
xor
push
mov
cmc
das
cmc
rclb
lret
xlat
call
sbb
push
addb
cltd
loop
inc
push
or
push
cmp
jmp
loop
repz
stos
or
mov
movsb
sbb
jbe
pop
adc
js
test
dec
mov
inc
data16
stos
push
push
popa
lret
mov
push
fsubl
popa
mov
daa
stc
mov
mov
mov
mov
icebp
adc
lahf
frstor
push
incl
and
adc
fidivrs
xchg
xor
xor
pop
arpl
and
adcl
out
mov
cmp
sub
or
xchg
push
fmul
xlat
sub
jmp
aas
loopne
cli
jecxz
jecxz
ja
xor
pop
cli
pushf
jns
adc
int
cli
jae
sti
push
aas
dec
mov
dec
pop
mov
xchg
lock
inc
and
insl
ret
cmpsb
shl
jae
inc
jp
mov
repnz
outsl
jae
adc
or
sbb
js,pt
cs
movsb
cwtl
data16
jg
in
sarb
cmc
shll
inc
push
jnp
mov
and
xchg
push
js
fucomip
and
xor
mov
cmpl
ret
jns
xchg
out
mov
pop
dec
loop
mov
arpl
sahf
nop
pop
movsb
add
cmp
or
popa
cmc
or
enter
cld
inc
push
dec
loopne
arpl
or
nop
addr16
mov
pushf
push
ret
jg
push
outsb
mov
jns
pusha
add
pop
jne
mov
pop
in
sub
mov
shrb
mov
lahf
mov
test
int3
push
test
or
insb
pop
addr16
dec
out
in
sub
lock
icebp
xor
js
arpl
inc
pusha
dec
clc
pushf
not
cmp
jns
sub
sbb
int
mov
mov
nop
push
xor
arpl
ljmp
push
in
mov
test
icebp
or
inc
add
mov
pop
aam
sbb
or
std
roll
insl
adc
out
mov
fidivrl
dec
mov
je
pushf
out
fldcw
jno
adc
jb
push
inc
inc
lds
adc
cmc
popf
pop
xor
cmp
fwait
jo
and
mov
mov
xor
xsha1
cmpsb
dec
sub
sbb
mov
gs
insl
test
mov
sarb
adc
and
and
xchg
and
int
mov
push
fldl2t
orb
xor
lahf
das
repnz
add
sub
add
dec
in
pusha
aam
inc
add
jbe
popf
stc
loopne
xor
out
fdivs
dec
adc
movsb
insb
pop
cmp
mov
pop
in
sub
cmp
int3
dec
pop
sub
cwtl
imul
sahf
shlb
cs
pop
clc
sarl
pop
inc
fdiv
push
push
rol
xchg
imul
cmpb
sub
dec
fwait
xor
mov
mov
leave
jo
mov
jnp
stos
push
xchg
mov
sbb
adc
insb
aaa
out
push
xor
imul
out
add
into
addr16
jnp,pt
jo
ret
lcall
sbb
jmp
data16
fdivp
insl
push
mov
jge
int3
and
mov
cltd
call
jecxz
jecxz
sbb
sub
movsb
repnz
xchg
mov
int3
mov
mov
push
imul
and
or
mov
fwait
xchg
push
jb
dec
test
shl
out
pop
push
andl
adc
push
add
mov
add
jns
xor
outsb
xchg
xchg
decb
add
push
xchg
lret
iret
cltd
sub
mov
sti
cmp
add
in
push
bound
repnz
psrlq
sbb
int3
sub
inc
jg
fstl
iret
mov
pop
daa
push
inc
jno
jne
xor
scas
mov
xor
in
test
sbb
sbb
dec
pop
shll
and
push
aad
dec
testl
mov
outsb
outsl
into
inc
mov
dec
lods
inc
iret
sub
fbstp
add
mov
add
loop
sub
inc
add
cmp
fcmove
fisubl
jmp
xchg
mov
and
pop
into
sbb
xor
jmp
add
mov
loopne
hlt
sarl
mov
pop
fdivrs
sbb
add
mov
adc
or
sbb
pop
es
mov
dec
or
xchg
rcrl
dec
pop
je
js
lds
mov
popf
or
mov
sub
fistl
neg
dec
push
fdivl
mov
cmpsb
into
jns
jl
cmp
mov
jns
pop
push
inc
repnz
mov
out
stc
xchg
jns
cmp
mov
dec
scas
dec
and
or
lods
xchg
push
mov
jnp
or
xchg
js
fldcw
mov
arpl
inc
repz
je
clc
push
daa
and
loop
out
cld
add
data16
nop
mov
add
aad
sbb
in
cmp
sub
leave
push
fnsave
faddp
fimuls
fmull
les
movsb
addr16
dec
pop
cltd
or
pop
in
xchg
addr16
fwait
pushf
mov
cltd
adc
and
xor
js
repz
movsb
xor
add
fwait
repz
inc
mov
mov
fstpl
mov
lods
inc
jl
popa
jnp
jns
aaa
iret
pop
out
pop
mov
xchg
mov
ljmp
sbb
call
in
pop
push
mov
jg
mov
sti
xchg
add
int
jae
sbb
and
fidivl
dec
dec
xchg
outsl
inc
ja
push
mov
mov
in
push
aas
inc
adc
arpl
jmp
mov
std
test
or
and
std
mov
arpl
popf
inc
rol
repnz
sub
lcall
cs
push
hlt
pop
into
aam
shll
scas
fcmovu
pushf
mov
insb
stos
sub
sbbl
lods
dec
mov
push
xchg
pusha
in
push
lods
add
je
andb
mov
sub
mov
pop
xor
and
fldt
shlb
dec
push
push
push
sbbb
mov
jp,pn
popf
pop
lcall
iret
jne
arpl
ja
pop
scas
mov
les
call
push
push
inc
faddl
sub
dec
das
test
sub
fisttpl
mov
inc
insb
push
out
xchg
subl
inc
loope
popa
dec
pop
sbb
ss
mov
sbb
imul
sub
xchg
pop
adcl
lahf
cmp
push
fdivrl
inc
jb
jmp
dec
push
inc
mov
cmpsb
call
or
sbb
cli
or
mov
ja
jmp
inc
xchg
idivl
pop
out
mov
lds
push
inc
inc
add
nop
flds
out
mov
das
fidivl
daa
in
gs
outsl
add
sbbl
mov
cmp
push
xchg
mov
xchg
xchg
prefetchw
hlt
or
jl
aaa
scas
add
lahf
mov
lcall
xchg
jge
xor
movb
mov
cmp
push
cmpsl
mov
mov
lahf
and
mov
iret
aaa
jge
cwtl
jbe
lret
mov
ror
ret
imul
std
mov
or
and
hlt
push
cld
stc
popf
xor
testl
dec
jnp
pop
jmp
inc
bound
ja
sti
int3
pop
xchg
ss
push
jmp
push
add
scas
inc
dec
and
fldenv
lods
inc
addl
pop
inc
ror
pop
add
out
fdivrl
cmpsb
mov
add
cmp
pop
lcall
cwtl
fldt
xchg
or
and
je
jno
pop
lods
mov
adcl
out
xor
stos
add
jge
pop
aam
dec
xchg
mov
out
mov
mov
fwait
into
pop
jno
rorl
in
fistpl
out
lods
push
jecxz
cmp
adc
int3
sub
cmc
or
xchg
cmp
jl
rol
add
cwtl
scas
sbbb
xor
ss
jmp
push
in
push
iret
lock
outsl
push
mov
out
nop
int
adc
movsl
out
pop
lods
add
mov
mov
push
adc
add
pop
repnz
jp
mov
jnp
mov
sub
inc
mov
inc
pop
sbb
mov
jl
mov
fwait
cmp
ljmp
out
sub
outsb
jl
std
inc
fcompl
arpl
imul
ficoms
out
mov
sub
inc
sahf
xchg
jl
arpl
pop
int3
je
shrb
mov
lock
stos
pushf
jne
push
push
or
mov
arpl
inc
or
int
pop
sub
mov
cltd
mov
xchg
mov
jle
jl
fldl
pop
lcall
imul
pop
insb
sbb
loopne
inc
shll
aaa
adc
lret
test
inc
loope
mov
fisubs
push
sbb
into
andl
daa
inc
dec
fsubr
cmc
push
aad
shrb
loope
add
stos
push
lea
fidivl
xchg
je
mov
sbbl
shrb
sub
popf
xor
dec
stos
push
or
pop
jcxz
mov
lock
scas
aaa
and
mov
sub
push
inc
sub
es
leave
aad
je
adc
mov
push
mov
out
push
lcall
repnz
pop
ds
mov
mov
sbb
jo
clc
mov
adc
mov
xchg
cmp
add
cmp
inc
icebp
mov
clc
shr
sub
das
xchg
mov
push
sub
fwait
adc
repz
xchg
out
cld
pop
mov
aaa
mov
test
xchg
mov
sub
aad
pop
sbb
das
pop
inc
lret
push
testb
das
cmp
jecxz
dec
ljmp
sbb
cmp
mov
mov
das
cwtl
xor
ret
xchg
ret
jg
hlt
jns
sbb
mov
mov
jns
adc
mov
cmp
call
mov
pop
push
shl
and
leave
scas
subl
jns
mov
rcl
mov
pop
or
cmp
test
xchg
aam
xor
pop
xchg
mov
jg
ret
lock
and
push
push
in
roll
cmp
lock
or
pop
mov
ljmp
jle
dec
mov
addl
aas
mov
push
push
fiadds
das
aas
mov
ds
into
out
test
or
push
cmc
jbe
in
adc
cli
pop
lea
sub
test
inc
inc
mov
mov
add
adc
rorl
hlt
cltd
add
dec
mov
mov
xor
push
add
or
mov
mov
out
adcb
or
fcmovnbe
push
stos
sbb
cmp
mov
fcmovnbe
insb
or
das
mov
in
test
mov
out
and
std
and
mov
out
add
rorl
lock
pop
in
in
push
or
clc
mov
popa
and
cmpsl
sahf
xchg
mov
cmpsb
loop
out
mov
lds
jle
pop
cmpsl
ds
or
and
push
scas
repz
decb
and
adc
ds
pop
mov
cmp
lcall
mov
stos
divl
call
mov
sbb
shll
push
lods
adc
pop
xor
or
in
sub
out
pop
sub
mov
shl
pop
imul
cmp
dec
pop
add
push
lock
lock
adc
scas
js
adc
inc
mov
stc
shll
icebp
cwtl
mov
sub
cltd
lock
pusha
pop
mov
orl
jp
lahf
mov
rorl
inc
into
cmpsl
sarb
movl
ljmp
sub
mov
lret
bound
imulb
mov
add
test
mov
cmc
repz
cmp
mov
rolb
and
out
push
inc
cmp
cmc
adc
ret
or
mov
inc
data16
xor
xchg
jbe
inc
cmp
or
jle
xchg
xchg
inc
sbb
and
lcall
ret
dec
or
lods
add
cmp
jae
push
sbb
dec
ret
sbb
jb
xor
sbb
out
aaa
cmp
xor
test
ss
popa
cmpsb
lds
pop
cli
push
jmp
jp
rolb
pop
xor
sub
scas
fdivrl
scas
gs
test
into
iret
dec
pop
mov
dec
pop
lock
cmp
cltd
and
inc
fstpl
xchg
add
dec
enter
mov
adc
aas
les
rol
ret
xor
pop
adc
cmp
bnd
rcrb
imul
fxch
inc
pop
les
jmp
inc
xchg
movsl
pushl
xchg
mov
aam
mov
addr16
fcom
inc
outsb
test
adcb
mov
xchg
ss
and
mov
inc
xchg
stos
mov
bnd
hlt
adc
jg
push
and
sub
cwtl
pop
sbb
rcrb
cli
inc
out
xchg
or
or
popa
idivb
test
mov
xchg
jnp
cmpsb
lods
imul
aaa
mov
xchg
pusha
cld
xchg
cmp
pop
mov
stos
xchg
and
cmp
push
mov
xchg
xchg
sub
aad
mov
adc
mov
dec
fcomps
cmpb
mov
xor
mov
test
cwtl
in
stc
jmp
pusha
inc
leave
push
mov
jno
and
xor
dec
mov
jle
adc
push
popf
aaa
ljmp
popf
repz
or
loopne
add
jecxz
lods
cmpsb
cmp
shll
xchg
es
push
std
pop
and
stos
int3
stos
inc
jmp
push
into
mov
adc
out
xchg
fwait
movsl
fnsave
pop
cmpsb
cld
test
mov
out
les
cmp
sbb
mov
clc
mov
adc
ret
cmpsb
cmp
je
mov
push
clc
scas
cmpsl
add
fstps
pop
xchg
daa
outsb
clc
inc
add
aad
addr16
push
jmp
repnz
push
xor
add
js
out
gs
fwait
sbb
xchg
mov
loopne
push
loopne
cmp
mov
xchg
jbe
cmp
adc
pusha
inc
and
in
push
cs
and
lahf
das
aas
ss
addb
push
jp
fcoml
pop
divb
mov
pop
mov
or
inc
cmp
gs
imul
adc
das
mov
dec
in
jg
mov
xor
lret
cld
fdivl
lret
pop
clc
xchg
push
sbb
push
test
es
sub
mov
jns
imul
into
adc
rcrl
cmpsl
addb
nop
lcall
cmp
lret
test
jmp
outsl
mov
mov
lret
pop
repnz
ficomps
cmpsl
cs
sbb
cmc
xor
push
dec
in
mov
in
movsl
push
xlat
mov
rorl
add
xor
push
jno
ds
or
cmp
jle
aam
in
rcrl
or
daa
mov
pop
pop
lock
divl
cmc
dec
add
sahf
daa
mov
movsb
cmp
sub
mov
outsl
imull
xor
je
xlat
fmuls
or
adcb
insb
subb
shrb
roll
xor
xor
and
out
xor
iret
sbb
in
inc
jmp
and
pop
cmp
add
es
aam
pop
dec
pop
iret
lods
pop
hlt
jmp
push
nop
cmpl
sbb
mov
mov
sbb
nop
setl
dec
lods
movl
mov
fcmovnu
or
lahf
ja
xchg
mov
and
out
mov
adc
notl
mov
rol
pop
pop
push
gs
cmpsb
adc
cmp
add
push
jle
xchg
ret
and
or
iret
pop
mov
mov
mov
inc
ja
pop
push
sti
pop
jmp
ret
mov
out
pop
repz
notl
or
mov
outsl
roll
out
adc
ret
fisttpl
int
stc
out
fucomp
pop
sbb
aas
movsb
add
and
mov
sbb
jg
mov
stos
sub
dec
iret
dec
cwtl
xor
es
jnp
outsb
imul
in
stos
test
pop
call
sbb
movsb
inc
mov
loop
push
add
pop
mov
insl
mov
lahf
sbb
je
rcl
not
jle
lret
sahf
mov
sbb
push
dec
jg
sahf
scas
sbb
lret
sahf
in
cwtl
jecxz
and
sahf
xchg
push
ds
xchg
push
push
fstpl
or
ret
call
in
pop
dec
imulb
mov
xor
dec
jge
test
pop
dec
mov
out
pop
cld
les
push
mov
in
mov
insb
pop
push
jp
inc
jb
sub
shrb
inc
push
mov
inc
inc
mov
shlb
sub
sub
inc
cmp
sub
jno
mov
movsb
fidivs
or
inc
and
or
pop
jbe
push
das
bound
iret
lret
in
cmc
mov
mov
ret
inc
popa
jmp
ret
sbb
imul
pop
ret
add
fdivrs
jl
mov
mov
fs
std
sbb
js
sbb
leave
push
push
xchg
lcall
jb
add
lds
incl
inc
and
addr16
push
pushl
push
mov
test
xlat
outsb
mov
add
test
adc
dec
ret
mov
push
je
sbb
xorl
icebp
into
push
and
lret
push
scas
pop
ljmp
out
repnz
shrb
mov
xor
jno
lods
jle
pop
test
or
dec
mov
out
push
and
loope
push
jmp
push
sbb
dec
ffree
pop
mov
xchg
scas
outsl
sahf
and
sbb
or
es
cmp
arpl
repz
and
add
sbb
dec
and
shrb
rolb
add
mov
fldcw
xchg
movsl
jecxz
mov
and
rclb
mov
in
shl
js
clc
js
sub
nop
daa
sbb
mov
lock
pop
icebp
or
lret
jno
jge
insl
jge
mov
mov
lods
loope
xor
adc
les
scas
ja
mov
sbb
fisubrl
mov
push
xchg
xchg
cli
test
push
mov
pop
jno
push
ret
movsl
sub
aam
dec
pop
addr16
out
daa
xchg
cli
jge
into
loop
mov
and
fldt
out
test
and
into
sbb
add
mov
pop
xlat
push
lea
je
or
daa
mov
lods
in
stc
test
xor
mov
loopne
out
fmull
popa
and
mov
js
inc
xlat
rclb
dec
pop
sbb
jg
xor
xchg
or
push
fidivl
cmp
jb
bound
push
fs
cmpsb
js
inc
and
shl
add
push
pop
jae
rcrl
cmpsb
push
mov
xor
fsubrs
les
mov
nop
testl
jne
push
mov
stos
in
push
push
push
xor
aaa
mov
in
lcall
clc
cmp
dec
clc
xchg
scas
or
loope
scas
mov
sahf
shrb
pop
ds
out
inc
jnp
lds
movsb
into
and
jl
push
shrl
push
int3
aad
ljmp
adc
out
mov
cli
push
test
mov
ret
mov
sub
sbb
fwait
sbb
push
mov
fmul
mov
add
lret
push
enter
test
das
js
loop
push
sbb
jns
ja
ret
push
dec
lcall
insl
into
gs
inc
inc
ljmp
call
lock
add
aam
scas
ret
jo
int
aad
inc
int
psrlw
add
pop
repz
rcrl
movl
notb
mov
fnstcw
cmp
data16
in
dec
je
repz
xor
aas
les
mov
std
sub
push
xchg
mov
out
inc
sahf
xchg
lods
mov
push
mov
mov
sub
sub
or
dec
mov
xchg
fimull
test
pop
mov
inc
in
mov
lret
jne
mov
loopne
aas
pop
push
mov
outsl
sbbl
push
insl
lock
andl
or
das
shlb
add
addr16
or
bound
shlb
adc
xchg
pop
sbbb
mov
pop
sub
add
nop
call
or
mov
xchg
ds
arpl
push
or
or
push
or
std
or
shll
aad
int3
pop
movsl
jle
xlat
fwait
add
pop
fisttps
xchg
sub
loop
inc
popa
mov
dec
in
mov
mov
popw
mov
cmc
cmp
sbb
add
nop
daa
std
inc
aas
push
mov
clc
adc
jo
xchg
sub
jno
fs
mov
les
in
xchg
ret
mov
dec
aaa
data16
mov
or
push
dec
mov
fcomip
lods
aam
lods
add
pop
cmp
popf
movsb
adc
mov
fisttpl
mov
daa
mov
das
cmp
xchg
push
sbb
add
xchg
sub
mov
sbb
in
icebp
push
mov
sbbb
jb
jmp
push
sbb
decb
faddl
loope
push
arpl
ss
jle
arpl
add
out
dec
mov
jge
mov
ljmp
inc
fsts
popf
jp
cli
leave
daa
rol
sbb
fimull
cmp
mov
sahf
into
jns
pop
cs
ljmp
out
jb
dec
inc
fs
jg
fidivl
sub
jo
fbld
mov
mov
mov
lahf
mov
add
mov
test
hlt
or
fdiv
cmp
mov
mov
inc
lods
ljmp
pushf
adc
imul
insb
xchg
cli
movsl
mov
cld
or
jl
mov
out
or
jmp
fldt
dec
sbb
jecxz
adc
stc
pop
cltd
je
adc
xchg
add
or
pop
mov
test
sti
xchg
mov
jmp
lock
cmpsb
jo
sub
lea
jl
pop
cmpsl
push
aam
mov
lcall
ljmp
sub
mov
sub
inc
fstpt
iret
daa
sbb
dec
dec
push
mov
pop
mov
mov
enter
adc
hlt
pop
in
rcrb
sbb
push
sub
dec
inc
lock
add
das
push
jmp
fdivl
and
flds
inc
fnstenv
int
pop
addr16
clc
ljmp
push
cmp
push
sbb
test
popa
cmp
divb
arpl
cmp
jo
bound
std
xchg
xchg
dec
call
pop
fiadds
popl
xchg
mov
jnp
dec
and
xchg
xor
movsl
outsb
push
push
fnstcw
push
out
mov
jne
nop
add
mov
cmp
jnp
test
mov
jp
mov
cltd
aam
add
insb
xor
dec
std
mov
in
pop
add
cwtl
xchg
daa
icebp
inc
mov
test
into
cmp
push
test
cmp
popa
pop
ret
clc
xchg
jno
lock
lahf
sbb
rcrl
nop
outsb
out
mov
jo
jnp
decl
adcl
mov
lds
leave
imul
sbb
loop
mov
cmc
sub
mov
push
das
xchg
inc
jnp
clc
push
push
xchg
ss
leave
pop
cmp
dec
mov
andb
clc
nop
ret
or
cmp
clc
push
stos
movsb
pop
repnz
inc
push
inc
fisttpl
mov
andl
cmp
das
rclb
aam
xor
gs
sbb
add
and
inc
push
mov
jb
mov
sahf
mov
andl
insb
mov
dec
ljmp
fs
popf
ja
push
mov
push
nop
push
sub
sbb
lcall
add
adcb
xorb
mov
jae
stc
jbe
into
jmp
enter
and
std
xor
fsubr
inc
lret
stc
popa
jno
mov
ret
sbb
pop
fidivrl
sahf
clc
xor
jmp
sbbl
orb
jl
jp
clc
jmp
mov
mov
rclb
iret
and
inc
cmp
cmpsb
mov
fbld
dec
icebp
inc
ja
fstl
pop
daa
aam
jno
add
ss
mov
popa
leave
arpl
xor
cld
add
xlat
push
xchg
ja
jo
adc
fwait
add
mov
cmpsb
rcl
pop
nopl
cmpsl
xlat
sbb
outsl
dec
loop
idivl
pushf
stos
dec
arpl
jns
mov
stc
sbb
sub
add
movsl
or
aaa
mov
imul
js
pushf
aas
ds
mov
jg
daa
mov
dec
inc
sbb
scas
sti
jo
or
sbb
inc
or
pop
lea
lea
cwtl
ret
mov
pop
loopne
outsb
push
push
push
xor
in
inc
and
jne
movsl
push
daa
inc
scas
add
aaa
shll
scas
dec
dec
xchg
imul
outsl
fidivs
or
mov
andb
or
mov
mov
sbb
dec
adc
lods
adc
cmp
adc
iret
xchg
fwait
or
lock
ficompl
mov
fidivrs
leave
js
sub
inc
jmp
xor
or
mov
cli
shll
mov
imul
or
add
fadds
fwait
mov
fmuls
xor
filds
sub
adcb
enter
push
jo
ds
jp
mov
lock
stc
push
in
pop
xor
jnp
into
push
std
sbb
lret
std
scas
jno
or
pop
xchg
loopne
js
enter
sbb
push
jg
lret
sahf
movsb
aam
orl
jmp
out
sub
mov
dec
sbb
outsl
push
dec
pop
jge
in
sti
mov
sub
sahf
push
push
test
adc
pop
mov
xlat
div
mov
sub
sub
cltd
cld
fwait
xor
out
in
and
or
outsb
shlb
cmp
loop
xchg
dec
xchg
jge,pn
rolb
arpl
xchg
dec
in
in
and
inc
xlat
inc
and
jb
idivl
icebp
push
int3
push
jge
loope
mov
push
stos
sbb
jns
in
push
pop
cmp
mov
movsl
iret
dec
sbb
popa
stos
iret
loope
mov
add
jnp
out
dec
add
dec
arpl
mov
stc
inc
inc
pop
xchg
xchg
mov
xchg
repnz
test
pop
jnp
jp
jbe
cmp
in
mov
inc
xor
aam
fcmovne
imul
mov
fistl
xadd
je
push
cli
mov
ret
iret
mov
or
pop
pop
fcompl
aaa
and
sahf
push
pusha
popa
xor
cmp
push
pop
push
sbbb
das
scas
jne
sahf
xor
sbb
push
adcb
mov
jmp
cli
adc
push
inc
into
mov
and
push
xorb
add
leave
jbe
shr
icebp
xchg
or
pop
push
inc
pop
call
or
pop
cmp
mov
mov
repnz
or
inc
cmp
stc
add
push
pop
mov
fmull
xchg
imul
jge
test
push
adc
rol
pop
wrmsr
mov
jnp
jg
push
ds
push
lret
cld
xor
arpl
push
lods
aas
mov
inc
loopne
test
dec
enter
std
enter
or
and
jle
neg
inc
inc
cmpxchg
jmp
jecxz
inc
lds
push
mov
fs
pop
sub
mov
lcall
sbb
fisttpll
fnsave
xchg
jecxz
iret
and
mov
jb
or
mov
pop
xor
mov
dec
or
testl
jne
xor
cmp
pop
inc
sti
push
std
sub
negb
call
cs
jne
in
test
or
adc
je
push
shll
inc
sub
insl
lcall
sarl
pop
push
pop
fisttps
ds
push
sub
scas
mov
sbb
add
lar
sub
or
push
xchg
sub
mov
mov
pop
push
and
inc
and
inc
int3
xchg
dec
jg
shll
or
push
ret
jb
cli
shr
inc
push
fsubrl
xchg
gs
dec
arpl
out
das
sub
iret
dec
jnp
push
and
sbbl
and
xchg
and
jo
or
lds
xor
rolb
xchg
arpl
enter
les
sub
or
adc
sub
je
mov
jb
mov
testl
and
dec
aam
mov
fsubr
test
xchg
pop
loop
popf
or
or
shld
xlat
push
xchg
jmp
sub
pushf
mov
lret
hlt
sbb
mov
jmp
adc
data16
pop
pop
dec
jecxz
call
imul
int
push
int3
push
fsubr
ljmp
out
imul
in
cmpl
sbb
fwait
or
pop
lods
mov
fisubrs
dec
push
add
daa
stc
cmp
sub
mov
pop
push
push
add
mov
je
adc
dec
sarl
adc
cmp
sub
push
push
jb
shr
push
mov
das
pusha
fwait
add
and
sub
ljmp
pop
repz
shlb
mov
lds
dec
in
or
adc
sahf
es
push
jmp
and
scas
icebp
pushf
pop
mov
add
sub
mov
dec
lcall
dec
loope
stos
push
daa
aam
icebp
pop
shr
push
cwtl
loope
lea
mov
incl
jp
mov
cli
xchg
clc
or
dec
pop
stos
rol
mov
je
js
sbb
mov
out
push
ret
pop
cmp
push
inc
loopne
add
dec
mov
imul
add
push
cmp
xor
lret
les
or
das
push
gs
cmp
mov
or
mov
dec
mov
in
pop
mov
jo
loopne
pop
int
push
add
icebp
mov
and
inc
xor
xlat
out
push
test
int3
sbb
and
shll
jle
jnp
les
mov
imul
call
inc
inc
mov
lret
sub
pop
mov
xlat
mov
popf
xor
in
dec
cmp
and
into
int
or
in
dec
mov
push
ds
xchg
mov
mov
mov
mov
fnstsw
fcompl
dec
sub
arpl
data16
lods
ja
test
jge
adc
popa
in
lods
gs
stos
data16
push
xor
lcall
sub
dec
aad
adc
mov
or
ror
xor
pop
ljmp
jmp
test
lcall
cmp
pop
ljmp
pushf
cmpsl
negl
shlb
enter
fldl
loop
add
sbb
push
es
jo
inc
data16
daa
lock
cmp
xchg
xor
cltd
nop
inc
adc
jno
test
push
jae
std
shrb
shlb
loop
xchg
rcl
xchg
mov
mov
cmpsb
pop
ret
adc
sub
filds
dec
incb
lods
mov
fistpll
xchg
popf
push
ljmp
jno
push
mov
xchg
sub
outsl
jnp
push
sub
stos
mov
xchg
mov
insb
pop
notb
push
mov
jno
mov
int
and
rol
push
xchg
pop
push
in
or
cmc
aam
pop
in
jbe
rcl
cwtl
mov
push
dec
mov
cmp
mov
sub
shlb
push
pop
jp
out
mov
sub
fisttpll
js
sub
notb
xlat
and
test
mov
jecxz
jne
fidivrl
cmp
adc
ficompl
xchg
xor
and
mov
fiaddl
sti
mov
aas
out
pop
hlt
dec
addb
lock
movsl
pop
faddl
sarl
mov
bound
fisttpl
xlat
andl
fmull
jecxz
push
xor
sbbb
xchg
lods
jbe
pop
les
mov
inc
and
incl
ret
adc
fcmove
cmc
fdivs
stos
mov
in
nop
sbb
rorl
test
or
xor
cmp
mov
fildll
pop
jmp
mov
push
mul
dec
jecxz
or
std
cmp
push
stos
inc
dec
into
mov
add
jb
xor
rep
sar
repnz
add
arpl
sbb
dec
rolb
lret
pop
out
test
outsb
cmp
pop
les
mov
xchg
ds
add
cmp
fmuls
push
pop
push
mov
dec
enter
cmp
adc
push
or
sub
int
addr16
aaa
into
sub
pop
inc
push
inc
inc
test
sub
repnz
push
sbb
gs
xchg
lret
cmc
mov
insl
push
ja
xchg
push
cmc
adc
add
xchg
and
sbb
ficoml
push
mov
frstor
repz
inc
sahf
xor
inc
xor
sbb
dec
stos
pop
dec
inc
push
xchg
jb
mov
nop
dec
in
call
push
test
popf
xchg
or
cmp
arpl
enter
cs
inc
movsb
or
mov
mov
sub
jecxz
fstl
mov
mov
gs
mov
ds
cmpsl
pop
fdivl
mov
add
sub
testl
or
scas
fnsave
nop
push
sbb
cmpsb
push
lret
xchg
call
mov
gs
into
pop
cmpsl
lds
cwtl
and
xor
jp
out
ret
push
jmp
orl
mov
repz
or
cmpsl
mov
ret
hlt
adc
cmp
iret
out
dec
sbb
cmpsb
inc
int
iret
stos
imul
sub
arpl
dec
pop
dec
jno
jnp
in
sbb
sbbl
dec
gs
cmpsl
and
mull
push
lods
mov
mov
loop
xchg
jne
jmp
ja
jmp
andl
adc
xchg
sbb
xor
push
mov
inc
sbb
and
xor
mov
test
sub
iret
dec
out
ret
add
sub
shll
jecxz
cmp
xor
jg
jmp
cwtl
or
sbb
and
push
inc
dec
fnsave
call
ss
mov
push
cmpsl
scas
js
subb
or
mov
lods
inc
cmp
xor
sbb
mov
jle
inc
aam
mov
fwait
daa
loop
push
dec
adc
lret
sbbb
shl
idivl
jns
movsl
cmp
cmp
fcoml
cld
mov
sub
clc
mov
adc
dec
mov
hlt
daa
push
xchg
push
push
sti
mov
push
xchg
xor
test
nop
ss
clc
add
das
scas
cmp
and
scas
inc
mov
out
sbb
repz
xor
popfw
rcrb
std
add
inc
add
loop
jmp
dec
mov
cmp
cmpsb
es
test
int
ljmp
add
fistpl
clc
mov
push
gs
mov
sahf
and
mov
jne
cmp
and
in
rclb
and
or
aam
idivl
sbb
fbstp
jno
cmp
cwtl
rcl
imul
imul
cmp
inc
pop
daa
stc
cwtl
jle
dec
aaa
into
jl
movsl
pop
les
push
lock
pop
xchg
ja
and
decl
fdivrs
aad
cmc
scas
push
and
pop
outsb
and
sub
std
cld
xchg
out
popa
test
jbe
adc
lcall
jp
xor
adc
ret
xor
jle
imul
out
mov
mov
call
ror
cmpsl
pop
push
dec
lret
cmp
test
lods
inc
adc
std
es
jle
pushf
sahf
dec
sbb
mov
repnz
test
ret
icebp
loop
xchg
jmp
lret
jne
cmp
fisubl
rclb
add
sbb
fbstp
mov
pop
out
mov
ret
shll
mov
sub
dec
roll
stos
ljmp
scas
push
imul
js
ja
xchg
or
push
hlt
mov
loop
and
pop
cli
leave
shlb
rcr
stc
nop
or
arpl
xor
add
fsts
les
xor
lret
out
pop
sub
test
ja
adc
push
lret
movsb
mov
push
xchg
xor
pop
test
mov
mov
into
aas
xchg
ja
inc
jecxz
rcr
jnp
faddl
popa
pusha
cmp
ss
lock
inc
xchg
mov
pandn
fdivrp
ds
insl
fldl
insl
jae
mov
out
xchg
xchg
mov
push
insl
out
and
pushf
push
push
pop
scas
leave
jmp
xorb
mov
pusha
shlb
sbbb
xchg
jmp
clc
adc
and
cmpsl
lds
jne,pn
mov
out
cwtl
mov
pop
adcb
fcmovnbe
nop
stos
or
mov
mov
cmp
jne
dec
jns
loope
addl
dec
loopne
arpl
jmp
or
repz
std
movsb
bound
pop
cmc
rcll
call
or
dec
xchg
es
ss
loop
adc
lcall
lcall
stc
xchg
jmp
test
arpl
scas
and
push
scas
js
nop
adcb
xor
xor
and
fists
out
jle
jle
mov
int
stc
cmp
push
jbe
xchg
sahf
sbb
in
adcb
sbb
cs
test
jge
xchg
daa
cmc
pop
out
mov
stos
aaa
cmp
in
add
adc
les
mov
push
jne
push
fstpt
data16
adc
sti
push
hlt
xchg
or
adc
pop
sub
pop
and
push
iret
jmp
jle
icebp
xlat
push
lea
lods
mov
shlb
mov
mov
ds
jo
sbbl
pop
repz
lret
js
mov
push
in
sbb
repz
jbe
adc
pushf
push
cltd
dec
mov
adc
in
ss
xchg
cwtl
jb
test
aaa
sub
push
ret
enter
sarl
dec
add
scas
ljmp
or
adc
xchg
mov
push
mov
aam
cmpsb
shlb
sub
in
imul
mov
addr16
inc
mov
notb
mov
in
mov
xchg
adc
push
call
cli
cmp
inc
testb
pop
xlat
sbb
lea
fs
nop
daa
imul
stos
lock
mov
mov
shrl
and
mov
dec
negl
cmp
jo
cmp
pop
in
lret
ficomps
les
andl
mov
insl
cld
pusha
cmp
in
clc
jp
cmc
imulb
outsb
scas
aad
pop
pop
repz
fs
add
mov
ds
or
xor
ljmp
or
pop
pop
stos
pop
inc
aam
repz
sbb
mov
mov
dec
xchg
add
add
mov
es
outsl
mov
inc
xor
push
mov
mov
scas
push
sbb
add
into
cmp
mov
push
insb
mov
sar
mov
notl
mov
pop
arpl
outsb
lods
inc
mov
out
icebp
je
add
repz
popa
popf
fcomps
lcall
mov
repnz
sub
mov
cmp
pop
rclb
and
cmp
fbld
xor
cwtl
mov
mov
shll
mov
rcrb
sahf
dec
divl
inc
rorw
xor
rclb
gs
dec
pop
mov
dec
lahf
sub
push
mov
jb
push
add
test
inc
add
mov
or
jmp
pop
pop
and
pusha
aas
mov
imul
jae
push
xchg
xor
jo
fidivl
inc
fdivrs
cwtl
movsb
jp
pop
pop
ret
mov
rcr
iret
and
inc
fidivrs
jge
ljmp
pop
test
xchg
hlt
sbb
xchg
pop
and
lret
mov
shrb
cli
fmuls
jnp
pop
xchg
push
mov
jo
subl
and
mov
test
mov
xchg
push
das
inc
mov
sbb
and
cmp
cwtl
dec
push
dec
mov
fsubs
test
sub
push
sub
or
ss
cmpxchg
inc
scas
xor
adc
jl
shlb
aas
xchg
or
ds
lahf
jb
shrb
inc
mov
xchg
push
das
push
pop
jns
sbb
sub
lds
inc
jae
ja
dec
fnsetpm(287
xlat
into
pop
xor
sbb
push
jbe
mov
jae
mov
mov
insb
addr16
loope
test
add
pop
xrelease
push
lds
pop
test
bound
jns
fsubs
fbstp
pusha
mov
pop
not
xchg
ljmp
call
jo
inc
mov
pop
mov
mov
add
or
js
daa
xor
ret
or
rorl
hlt
xor
fstl
xor
or
push
fcmovnu
ja
sbb
rcrl
adc
mov
fcmovb
in
dec
fisubrl
jmp
dec
push
test
test
mov
clc
mov
xchg
cld
mov
es
inc
aam
pop
rcrb
call
or
mov
repz
sbb
cmp
loope
or
xor
fnstsw
hlt
stos
aas
fcoml
stc
sar
mov
out
or
popa
test
lea
or
loopne
pop
inc
push
push
xchg
pop
sahf
sahf
loopne
sbb
jnp
cmp
insb
jle
pop
scas
inc
dec
inc
inc
inc
in
call
int
lahf
pop
xor
divl
daa
aaa
cld
iret
imul
mov
rolb
mov
pop
or
lods
and
adc
ret
jg
jae
shrl
mov
adc
in
push
xchg
xchg
insb
imul
xchg
mov
push
mov
popl
bound
mov
outsb
mov
les
frstor
icebp
sub
pop
mov
jnp
sub
loope
outsl
dec
sub
imulb
mov
test
add
and
and
aam
fimuls
cmp
dec
jo
xchg
sub
sbb
scas
or
aad
dec
push
outsb
cld
sbb
mov
outsl
bound
xchg
mov
pop
idivb
or
pop
cmpsb
inc
and
int3
out
jne
xor
jge
mov
cmp
into
push
pusha
insl
mov
pop
ds
imulb
cs
ja
and
pop
mov
insb
jns
pop
jae
jae
aaa
xor
fidivrl
dec
test
cld
push
or
dec
testl
dec
push
lahf
sarb
addr16
icebp
es
jge
inc
test
sbb
mov
mov
or
ficoml
pop
mov
push
outsl
movsl
mov
cltd
mov
lahf
push
sbb
movsl
push
jl
bound
xlat
sub
inc
sub
pop
xchg
mov
loopne
mov
adc
fsubrs
fmuls
test
xchg
pop
push
mov
sub
pushf
and
inc
sahf
clc
jbe
or
stos
cmp
sbb
psllw
mov
pop
mov
mov
sbb
ds
jae
mov
push
fmul
enter
mov
ret
mov
cmc
mov
movsb
fisttpll
adc
in
xor
ds
test
adc
scas
mov
iret
jp
flds
popf
out
rcrb
mov
sbb
cmp
xchg
cli
lahf
cld
push
xchg
es
fidivrs
scas
mov
push
push
xor
notb
ss
fldt
repnz
call
lock
xchg
sub
cmpsb
bound
mov
gs
add
fimuls
das
fisubrl
ja
jb
adc
in
cmpb
xchg
insb
xor
jns
or
int
push
in
push
in
iret
data16
dec
arpl
jl
xchg
sub
adc
mov
sbb
gs
jle
pop
fwait
test
push
mov
out
sbb
gs
jo
mov
arpl
pushf
xchg
sti
pop
mov
iret
mov
xlat
and
leave
add
cmc
fistps
mov
mov
sub
sub
hlt
mov
in
shrb
jns
enter
fistl
scas
sbb
inc
ja
inc
push
mov
add
lret
sub
mov
and
jno
mov
push
dec
orb
ja
cwtl
das
push
add
ja
jmp
das
fimull
fiaddl
cmp
lea
push
lock
insl
pop
add
je
xor
or
insb
push
lods
pusha
or
jl
cmp
lret
jno
ss
adc
dec
inc
mov
sub
or
icebp
movsb
adc
imul
xchg
into
in
mov
dec
sti
imul
mov
cmp
pop
adc
rorl
in
test
out
xchg
subb
imul
mov
lahf
andb
xchg
or
popf
dec
mov
jge
test
out
rcll
adc
mov
adc
jns
pushf
stos
sbb
lock
roll
mov
mov
lds
cmp
bound
sbb
push
adc
in
scas
cltd
sub
incl
loope
nop
mov
push
sahf
gs
outsb
inc
dec
shlb
inc
inc
cmp
sbb
jbe
jb
fwait
bound
dec
sub
or
clc
dec
fisubrl
jmp
jg
pop
add
dec
jmp
sahf
out
push
mov
out
int
pusha
leave
inc
mov
leave
loope
cmp
cwtl
sub
push
mov
push
jne
and
jns
stc
jmp
bound
jbe
pop
imul
lcall
add
ljmp
paddd
scas
sub
aas
aad
push
test
cmp
sahf
push
repnz
ss
jmp
or
xor
add
sbb
push
xor
addr16
aam
outsl
dec
cmp
ljmp
sbb
pushf
jne
pop
pop
mov
push
lods
dec
out
das
test
push
scas
es
shlb
dec
and
pop
ss
pop
lock
scas
ja
push
negl
scas
js
iret
cltd
gs
sarb
mov
fnstcw
mov
pop
cmpsb
es
adc
je
dec
cmpsb
push
sbb
out
pop
cmp
insl
outsb
cmp
mov
or
out
ljmp
imul
popf
mov
cld
jecxz
cmc
or
ja
mov
lods
mov
popf
inc
jns
js
jno
sarl
mov
adc
sub
lds
fmulp
mov
jbe
call
add
add
stos
and
arpl
sub
adcl
call
and
das
xchg
scas
insb
or
mov
dec
cli
adc
dec
sub
pop
sbb
dec
lds
mov
xlat
test
popf
inc
or
enter
aad
je
out
gs
or
jp
arpl
jge
negl
pop
cmc
mov
aaa
or
mov
push
into
cmp
dec
sahf
icebp
sbb
and
rorl
popf
mov
cld
fcoml
outsl
daa
jns
pop
ret
mov
pusha
pop
cmpsb
test
cmp
mov
add
push
xchg
cmp
idivl
or
jno
inc
cmp
mov
test
xchg
sbb
lcall
sbb
lahf
push
xor
sub
jo
jp
decl
push
jns
das
shll
xchg
jg
sub
mov
pusha
pop
mov
fstps
xchg
in
cli
fs
stos
and
stos
negl
je
mov
push
xchg
imul
push
mov
insb
out
in
pusha
roll
sbb
xchg
sub
add
mov
fistpll
cmp
daa
dec
imul
xor
xchg
sub
mov
inc
pop
lods
scas
dec
dec
xorl
cmpsl
sahf
push
sub
daa
outsl
clc
cltd
inc
sbb
adc
mov
jno
mov
andl
xchg
popa
call
cmc
lret
inc
jge
iret
popa
jl
cmp
push
or
push
scas
or
inc
xlat
repnz
push
addr16
jne
push
std
ljmp
or
pop
cli
xchg
pushf
xlat
imul
pop
xchg
mov
cmc
rorb
hlt
push
mov
fsub
mov
lock
and
push
or
out
ja
icebp
or
fmul
xchg
maxpd
pop
mov
xlat
mov
cmpsb
cmp
testl
sub
mov
mov
push
pop
cmp
fwait
movsb
mov
mov
cmp
cltd
sbb
push
sbb
push
out
idivb
in
mov
imul
shrl
and
mov
int
std
clc
daa
mov
jne
inc
and
fidivl
dec
dec
jae
mov
lret
pop
mov
nop
pop
mov
cmp
or
cmpsb
loope
fisttpl
jl
inc
cld
sub
test
ljmp
lods
les
dec
push
xlat
pop
cld
xor
popa
insb
packssdw
lret
push
lahf
mov
mov
imul
bound
clc
out
xorl
movsl
or
mov
push
and
mov
jno
lods
fwait
xor
add
mov
jl
pop
mov
pop
ja
push
cs
xchg
jne
fildll
loop
jle
mov
addl
hlt
or
repnz
std
mov
xchg
mov
out
pop
lock
jo
and
xor
or
and
push
jl
gs
and
mov
xor
sbbl
movsl
shll
sub
fildl
mov
mov
xchg
div
repnz
out
jo
stos
cmp
jns
mov
ja
aas
repnz
inc
int3
test
jbe
je
xchg
sahf
xchg
inc
or
sti
and
shlb
add
mov
shll
int
fld
pop
add
int3
inc
loopne
loope
std
int
repnz
and
call
mov
pop
imul
test
xor
or
mov
sub
sub
inc
inc
test
add
andb
add
shl
and
jge
cmp
stc
mov
dec
mov
cmp
js
movsl
pop
xchg
and
arpl
aas
fimull
movl
adc
dec
in
dec
ret
mov
fdivrs
ret
dec
bound
scas
xchg
icebp
mov
lret
mov
cmc
xor
jp
pop
cmp
push
cmp
aas
fwait
out
dec
push
int
stc
adc
pop
pop
lock
ljmp
test
nop
ficomps
xchg
sub
and
pusha
sahf
inc
sub
je
repnz
dec
sbb
dec
outsb
hlt
push
sahf
push
movsl
cs
mov
ljmp
jb
dec
push
mov
outsb
testb
mov
cmp
subb
mov
ds
xchg
sbb
mov
out
hlt
out
inc
jle
jmp
add
shll
sahf
pop
sbb
mov
movsb
sub
pop
cs
je
jns
jbe
addb
testb
popf
dec
jecxz
es
mov
push
xchg
sub
sub
stos
dec
add
cmp
hlt
dec
mov
xlat
sbb
xor
or
icebp
cmp
or
dec
hlt
lods
cmp
add
mov
and
call
and
repz
loop
jmp
and
jbe
lea
inc
jb
lret
adc
mov
into
xchg
cwtl
nop
insb
andb
cmp
jnp
scas
push
sbb
jmp
lahf
sub
addr16
adc
lahf
sbb
cltd
or
xchg
sub
mov
mov
mov
add
out
and
pop
subl
loope
lods
xor
js
outsb
sti
pop
stc
nop
div
leave
popa
mov
pop
imul
adc
and
stc
push
in
sub
jae
mov
dec
js
inc
movd
mov
push
pop
dec
arpl
push
push
cmp
scas
in
roll
or
ss
cmp
frstor
lcall
enter
pop
mov
fs
xor
mov
sub
dec
or
in
insl
adc
xchg
add
xor
xchg
hlt
iret
adc
jne
lods
mov
push
mov
inc
adc
add
mov
call
sbb
cmp
out
stos
sbb
jno
mov
leave
call
orb
out
sub
test
jge
cmpsb
pop
push
fdivs
add
sub
shrl
mov
repnz
mov
icebp
xor
xchg
push
jl
xchg
scas
cmp
adc
gs
ds
mov
xchg
pop
mov
and
cmc
mov
mov
mov
add
clc
mov
mov
push
sbb
aas
inc
lret
sbb
in
pushf
fimull
mov
mov
sub
pop
imul
rol
jo
push
cltd
cmp
and
pop
loop
sub
jno
push
mov
push
outsb
push
mov
sub
cmp
js,pt
aaa
cli
lret
pop
outsb
std
sbb
lods
scas
xor
popa
lods
inc
inc
aam
jo
jecxz
aad
and
sahf
cld
xlat
dec
mov
xchg
into
cmc
fildl
sbb
xor
shr
adc
pop
xchg
push
and
fldl
clc
dec
bound
sbb
mov
iret
mov
inc
fs
jp
xor
xchg
or
inc
sub
or
sub
icebp
div
pop
repz
aad
in
dec
sbb
jp
lcall
les
rcll
xchg
push
hlt
mov
call
sbb
jle
loope
ret
adc
push
lods
cltd
cmpsb
in
je
stos
push
ja
cwtl
pop
rcrb
icebp
pushf
push
int
scas
jl
sub
sti
add
pop
inc
pusha
test
mov
pop
ja
pop
xchg
aad
mov
mov
popa
push
sub
into
sbb
icebp
dec
out
ds
mov
and
mov
xor
fidivrl
fisubl
add
xor
pop
shr
xchg
arpl
xchg
or
test
pop
outsb
jle
mov
xchg
or
mov
jp
das
jns
bound
or
scas
xchg
mov
xchg
rcr
or
mov
pop
mov
mov
fucomp
or
aad
movsb
into
bound
lahf
sti
mov
pop
inc
xchg
push
shl
rclb
js
sbb
int3
inc
xor
cwtl
sub
jmp
adc
sbb
scas
aas
cwtl
or
adc
shrb
rclb
pop
icebp
jg
stos
jo
jmp
cmpsb
pop
jbe
dec
jnp
cmp
sub
adc
cmp
insb
rcr
push
outsl
pop
fsubrl
add
stos
test
mov
ss
jbe
movb
and
jmp
mov
insl
and
insl
add
jnp
dec
mov
push
dec
lret
mov
xor
jle
outsb
or
or
push
pop
shrl
loope
adc
lds
out
jbe
push
das
sub
pop
pop
sub
adc
call
in
jno
in
mov
dec
in
stc
repz
cmp
push
dec
lea
push
jge
dec
fdivl
sub
pop
lods
jbe
cmp
dec
pop
div
and
jl
out
jp
xchg
rorb
into
fldt
aaa
adc
popa
clc
daa
adc
cld
adc
test
xor
dec
ss
jns
push
test
pop
lock
lea
jbe
jle
pushf
dec
loop
enter
sub
mov
or
push
call
sbb
in
shrl
add
pop
loop
mov
rcll
or
cld
xchg
mov
adc
repz
sarb
push
cmp
xchg
push
pushf
mov
movsl
mov
or
cmp
repnz
adc
lahf
pop
and
xor
dec
sub
cmpb
out
push
sbb
push
rcll
in
mov
jl
and
outsb
push
aam
pop
pop
cmp
mov
pop
jl
notb
sub
fcomip
lahf
jno
fsts
movsb
push
popa
add
or
popf
mov
loopne
xor
mov
xorb
add
sti
adc
stos
mov
cmp
loopne
adc
jns
jne
les
xor
dec
pop
xor
test
inc
test
push
cmpsl
add
fcomip
xchg
lds
sbbb
jle
in
fdivrl
inc
lods
sbb
cs
push
andb
outsb
add
loop
dec
cmp
stos
jne
sahf
lods
inc
lret
fisubrs
lret
lods
stos
clc
pop
ljmp
cs
pop
xor
push
mov
insl
jge
repnz
push
rorb
insl
add
jecxz
dec
ret
cmpsl
hlt
mov
dec
dec
jecxz
jg
jl
mov
push
clc
mov
in
ja
sub
pop
ss
push
out
pop
mov
out
pop
mov
cli
aas
mov
jg
pusha
subl
pop
cs
mov
mov
fst
mov
mov
and
and
mov
fcompl
dec
and
mov
fisttps
pop
shlb
dec
loop
aam
fs
cli
sub
rcrl
aam
cli
out
sti
sub
inc
fdivrl
imul
scas
lock
adcl
mov
hlt
insl
add
push
adc
stos
aad
pop
lret
mov
pop
dec
jb
les
push
adcb
jbe
xor
popf
lock
test
add
ds
pop
js
fdivs
or
jp
mov
push
mov
add
add
mov
push
push
mov
or
cld
sub
pop
xor
nop
cmp
sbb
jno
xor
push
sub
cmp
adc
pusha
test
test
jp
in
fbld
dec
mov
in
andl
mov
cmp
and
push
mov
lret
add
subb
xchg
and
fwait
mov
pushw
mov
ficoms
cli
fnsave
leave
xlat
sbb
hlt
test
loopne
imul
mov
popf
xchg
sub
sub
jne
ljmp
int3
dec
push
cmp
fwait
sub
add
out
in
adc
out
ss
divb
ret
incl
test
adc
sbb
push
lea
cs
ret
pop
mov
aaa
mov
xchg
mov
cmp
mov
adc
and
inc
add
mov
push
movb
imul
stos
cmp
mov
and
mov
mov
imul
jmp
mov
and
mov
sbb
aas
or
jo
leave
cs
pop
out
in
flds
daa
out
inc
aas
dec
inc
add
mov
jmp
adc
bound
pusha
inc
push
ret
or
sti
push
sub
jmp
mov
jp
and
insl
dec
cli
xchg
jg
mov
pop
sbb
mov
xchg
insl
mov
sbb
in
pop
xor
mov
repz
frstor
sub
pop
xor
adc
jnp
xchg
lahf
gs
jp
aaa
sbb
add
cltd
xor
mov
mov
xchg
adc
out
mov
dec
lea
inc
fimuls
mov
imul
shrb
push
inc
ret
stc
jmp
sub
xlat
push
mov
dec
popf
and
push
in
inc
sub
cmp
xlat
mov
js
xor
lock
xor
add
jnp
xor
sbb
jae
and
incl
add
jp
pop
insb
das
es
test
gs
mov
stc
sbb
test
dec
stc
lock
loop
ret
add
leave
stos
dec
fstl
jae
add
insl
mov
lahf
adc
jle
ss
jo
std
xchg
jmp
andb
mov
imul
enter
cmc
cmpsb
mov
sub
daa
push
imul
jle
not
push
mov
dec
mov
lea
or
loop
cmp
cmpl
ret
stc
loope
js
push
test
pop
jo
adc
cmpsb
mov
xor
sub
mov
xchg
nop
shll
ret
dec
rcl
shlb
or
mov
mov
sub
jmp
jne
lret
inc
in
bound
cmc
imul
push
mov
mov
or
mov
adc
jbe
mov
sbb
push
popf
jnp
and
lods
push
mov
lret
test
dec
cmpsl
movsl
rcr
pop
loop
jno
jge
cmpsb
fistps
inc
fldt
bound
sbb
sub
in
mov
cmp
xchg
add
and
or
push
sub
pop
sub
sbb
std
or
popf
xchg
int3
arpl
fucomi
orl
outsb
mov
out
cwtl
stos
jns
cwtl
sbb
and
js
imul
loopne
dec
push
adc
aam
mov
mov
adc
insb
imul
xchg
nop
outsl
add
sbb
out
insl
cmp
clc
negl
call
inc
sbb
and
xor
sub
xchg
mov
xlat
sbb
repnz
rcrb
xor
loopne
gs
add
inc
gs
outsl
in
sub
pop
sahf
and
mov
mov
orb
int
add
fucomp
jl
mov
bound
stos
mov
call
leave
push
ja
jmp
arpl
arpl
gs
add
xchg
int3
bound
jp
stos
mov
js
jl
fidivrl
sti
test
loope
repz
add
xchg
xor
push
mov
cmpsl
push
jecxz
mov
inc
add
in
pop
jecxz
ds
dec
pusha
gs
movsb
movsl
shll
shll
aaa
push
in
hlt
sbb
or
push
call
xchg
jne
out
mov
pop
out
out
sbb
leave
pop
es
jb
test
xchg
cs
imul
lahf
adc
xchg
rol
dec
fdivrl
cmp
cli
enter
jg
xlat
xor
rol
inc
mov
push
adc
inc
sbb
sbb
fidivl
mov
outsb
out
cld
mov
inc
mov
jne
inc
push
cmpsb
ja
ljmp
sbb
test
stos
in
pop
sbb
cmp
mov
les
pop
stos
sub
in
clc
adc
cltd
mov
ss
fists
mov
push
mov
and
and
aas
mov
cmp
int3
repz
mov
ss
stos
inc
sti
aas
jle
jo
enter
std
xchg
xchg
sub
sbb
add
mov
jl
sub
jb
cmp
adc
mov
inc
and
inc
jmp
push
into
xchg
idivl
bound
jnp
pop
inc
xchg
or
pop
fsubr
dec
fsubs
sbb
out
mov
push
shl
lahf
and
insl
mov
and
xor
sub
inc
add
push
repnz
pusha
fimuls
sbb
mov
and
jb
movsl
push
ljmp
cmp
test
mov
pop
addr16
inc
push
lret
dec
fs
sub
jnp
mov
xor
leave
pushf
mov
push
sahf
mov
pop
mov
stos
pusha
aam
sub
mov
jo
pushf
imul
or
shrb
inc
jne
lcall
shll
inc
pop
mov
scas
dec
movsl
sti
fs
in
jnp
add
mov
inc
ret
sbb
fisubrl
stos
int
mov
pushf
fidivl
xor
out
sub
shrb
mov
push
jno
sub
decl
inc
push
and
ljmp
inc
mov
push
frstor
movsl
mov
cmpsl
rcrb
jmp
sub
fisubl
mov
out
mov
cld
xor
or
ja
mov
pop
mov
sbb
cltd
push
sti
mov
mov
mov
mov
sbb
add
imul
shr
sti
xor
pop
gs
mov
lret
out
rcll
icebp
xchg
clc
mov
sbb
lret
mov
enter
stos
sbb
data16
jnp
xchg
inc
mov
pop
out
sub
fisubs
adc
sbb
stc
popf
add
ljmp
aas
cmp
jo
xor
xchg
mov
sbb
out
loopne
add
fdivrs
sbb
mov
cmpsb
mov
je
inc
iret
cmp
jne
push
jb
add
xchg
mov
add
xchg
push
mov
dec
xchg
xchg
or
inc
sub
pop
push
mov
xchg
lods
int
mov
fsub
jecxz
mov
cltd
and
cltd
std
mov
loope
outsb
push
inc
push
stos
mov
movsl
es
shr
mov
into
inc
fwait
test
dec
fucomip
movsb
mov
jecxz
icebp
jbe
pop
mov
xchg
mov
jg
pop
push
cltd
mov
inc
jbe
push
cmpsb
cld
xchg
fcoms
jmp
fcomps
jbe
iret
lods
and
push
roll
icebp
xchg
sub
cmc
fucomi
aad
scas
inc
xor
popf
or
push
jns
sub
out
mov
popw
dec
xlat
mov
fdivs
lods
pop
iret
fdivrp
test
in
rol
incb
clc
popl
aam
fsubrp
push
jmp
or
icebp
mov
cmp
jp
jns
test
inc
mov
mov
pushf
or
je
ret
xlat
sub
dec
mov
mov
jno
sub
dec
dec
jnp
ss
adc
out
mov
outsl
adc
stos
cltd
xor
test
ljmp
push
ds
nop
lcall
bound
shlb
and
pop
lahf
inc
mov
mov
mov
movsb
or
das
sub
push
jne
in
adc
dec
pop
test
adcb
sbb
sahf
xor
daa
enter
inc
cmp
out
popa
fsubrp
pop
sbb
push
and
xchg
xor
mov
scas
inc
cltd
pop
push
jge
imul
adc
imul
ss
ret
or
subb
popa
jg
and
push
les
and
shlb
fdivs
jne
adc
daa
leave
add
fldpi
imul
xorb
sar
mov
or
mov
fbld
ss
push
inc
data16
jns
xlat
inc
in
fisubrs
inc
push
cmpsb
jbe
jbe
push
fs
jmp
std
cmp
jmp
add
rclb
cmp
mov
cmp
sub
cmp
xchg
jmp
xor
mov
shrl
pop
and
call
cmp
arpl
sbb
push
pop
jae
sbb
ds
and
sub
loop
idivb
jne
lret
ret
cmp
outsb
daa
loopne
pop
sub
dec
sbb
out
and
fwait
adc
pusha
mov
js
cmp
mov
sahf
mov
cltd
imul
sub
or
sub
lcall
mov
adc
into
dec
sub
jl
imul
push
fistl
inc
popa
cmp
cltd
stos
ret
flds
stc
movsb
outsb
add
loop
mov
dec
dec
xchg
icebp
mov
mov
cmp
sub
or
cmpsl
ret
cmp
ljmp
aas
mov
imul
mov
cwtl
pop
hlt
ja
xor
pop
push
mov
jne
inc
pop
scas
push
inc
in
pop
outsb
push
ss
mov
sub
nop
pop
sbb
and
cmp
pop
mov
xchg
test
idivl
dec
outsb
pop
aas
xor
inc
or
aas
and
mov
rcll
and
mov
fwait
inc
stc
sub
mov
out
mov
or
and
nop
repz
pop
imull
mov
jecxz
jnp
iret
or
mov
int
notl
pop
push
fnsave
xchg
sub
push
dec
jae
mov
sbb
movsb
pop
jns
into
outsl
mov
fdivrs
in
rorl
dec
xlat
sub
pop
popf
xorps
out
cmp
or
test
and
shr
push
xor
sbbb
cmp
dec
adc
mov
xor
push
sub
ljmp
pop
sbb
sub
dec
sub
mov
jle
pop
inc
repnz
data16
xor
lds
loope
outsl
js
mov
lock
dec
int3
outsl
aaa
scas
add
mov
jmp
sub
shrb
stos
fstpt
mov
ja
aam
popf
mov
xchg
popa
mov
push
inc
aad
xor
cmp
dec
out
mov
push
add
inc
cmpsl
push
sahf
jmp
jb
lods
xchg
add
ret
test
pop
ret
aam
dec
push
in
jl
fs
pop
test
fadds
out
scas
nop
cmpsl
shrl
pusha
nop
fcoms
push
jbe
imul
cwtl
inc
outsl
rcrl
mov
stos
js
mov
mov
das
test
and
fiadds
jne
sbb
scas
mov
add
outsb
mov
fldenv
and
fwait
mov
sub
faddl
push
aas
push
and
push
xor
stos
jmp
sub
stc
pop
sahf
sub
lods
add
mov
mov
sub
les
fnstsw
pop
pop
into
mov
out
testb
cmp
push
pop
push
pop
repnz
xchg
out
fisttpll
iret
call
xchg
inc
fsubr
xchg
xrelease
adc
inc
decl
repz
lret
or
insl
movsl
ret
cmp
xchg
sub
mov
mov
xor
fmul
and
pop
pop
or
and
push
fmull
pop
insl
push
fldt
xchg
add
mov
push
xor
test
sbb
add
jl
add
dec
jecxz
stos
popf
mov
enter
sub
mov
cmp
xchg
mov
mov
cmpsb
nop
mov
mov
jns
cwtl
rclb
loop
push
fidivrs
cmp
movsl
cmpsl
dec
sbb
insb
dec
jne
mov
push
js
mov
subl
xlat
add
call
fwait
and
mov
stos
fs
cli
cmp
hlt
int3
aaa
and
dec
loopne
push
aad
add
ja
js
add
in
or
jle
push
adc
sub
cli
sarl
xchg
xor
xlat
mov
mov
cwtl
mov
movsl
lahf
cli
or
into
or
lret
paddusw
addr16
add
es
inc
fidivs
xor
and
stos
push
dec
push
push
xchg
scas
or
mov
data16
cs
add
popa
sbb
test
pop
insb
jmp
or
mov
sbb
mov
mov
jne
mov
mov
fdivrs
fcompl
or
mov
ret
in
push
dec
pop
stos
ret
cltd
mov
sbb
jne
addr16
xchg
mov
pushf
inc
jmp
fcoms
dec
cmp
cld
test
pop
insb
mov
sahf
jns
inc
add
xchg
push
cmpsl
mov
or
fistl
jb
dec
movsb
xor
fs
xchg
cs
call
xchg
cmpsl
mov
arpl
lret
xor
arpl
insl
shrb
int
movsl
lods
lret
shrb
adc
cmpsl
mov
and
or
aam
int3
mov
bound
cwtl
gs
das
ret
pushf
pushf
repz
mov
sub
mov
sti
cltd
mov
mov
movsl
jo
pop
mov
xchg
das
adc
lcall
xlat
imul
es
sub
icebp
xor
fnstenv
push
dec
iret
pop
data16
dec
inc
adc
ficomps
outsl
lock
je
lret
mov
cltd
sub
test
stos
or
inc
mov
loopne
sbb
mov
and
or
rorl
mov
push
mov
jmp
dec
sbb
mov
lret
stc
inc
cmpsl
and
push
dec
movsb
sub
inc
bound
mov
adc
stc
xchg
dec
xor
push
mov
loop
int
fisubl
mov
les
cmp
enter
loop
adc
rcrl
arpl
lret
mov
mov
and
and
shl
stc
xchg
dec
hlt
sti
inc
je
loop
int
rcrb
outsl
cmp
mov
jle
mov
adcb
fists
ja
push
int3
mov
or
jecxz
pop
dec
add
movsb
pop
pop
push
adc
cmpb
jle
xchg
fldl2t
mov
pop
mov
inc
cmpsb
notb
and
ror
xchg
or
lcall
or
shrl
movsl
cwtl
push
add
mov
xor
fwait
mov
jbe
and
jg
cmp
cmpsb
jmp
inc
in
mov
inc
aam
inc
or
and
mov
xchg
mov
or
mov
mov
dec
inc
inc
mov
pop
lret
flds
push
hlt
or
jbe
and
mov
out
sti
sub
push
mov
cmp
jecxz
dec
imul
stos
xchg
in
es
cwtl
cmp
mov
das
nop
inc
inc
aad
mov
ljmp
mov
fstpt
repnz
in
pop
push
loop
xchg
imul
fbstp
imul
inc
xor
out
rorl
stos
pop
icebp
scas
add
fisubl
xchg
pop
repz
ret
sarb
mov
imul
andl
add
cmp
testl
cltd
repz
push
sub
fidivrs
dec
lods
xor
ret
xor
sti
roll
xchg
ljmp
outsl
add
popl
mov
add
test
mov
dec
and
mov
insl
in
mov
push
mov
sbb
icebp
fadd
add
call
popf
lock
inc
lock
xor
dec
xor
ljmp
or
push
or
mov
pop
cmp
mov
cmp
push
jge
scas
in
xorb
gs
cmp
inc
xlat
cmp
jmp
div
pop
mov
mov
mov
push
nop
sahf
scas
inc
or
les
movsl
int3
arpl
inc
loop
inc
mov
and
pop
or
in
pop
mov
add
xor
fcoml
add
stos
test
ljmp
xor
test
call
push
add
xchg
popf
iret
imul
mov
arpl
add
xchg
aas
sahf
and
push
or
adc
push
jae
lret
xorb
mov
les
push
insb
sub
loope
sub
test
cmp
xchg
leave
jne
jmp
dec
bound
sbb
lds
int
dec
pop
stos
icebp
adc
fwait
inc
xor
xchg
mov
enter
add
adc
sbb
repz
lds
push
cltd
xchg
outsl
mov
or
mov
sub
fcoml
xchg
xchg
cs
scas
lret
xorb
into
sub
lcall
cwtl
jae
ffree
and
xlat
mov
orb
xchg
rcrl
insb
fisubs
push
call
add
lcall
shll
rcrl
out
add
rcrl
loopne
nop
imul
arpl
addr16
loop
hlt
dec
or
fcmove
fisttpll
mov
into
adc
popa
cld
test
and
fwait
out
and
pop
sahf
mov
sbb
mov
or
outsb
xchg
add
sbb
push
adcb
imul
jp
js
mov
pop
cld
mov
mov
loope
ss
daa
es
jle
popf
scas
add
xchg
daa
cli
mov
faddl
xchg
push
or
test
nop
mov
sub
pop
or
jae
fldenv
outsb
cmp
pop
mov
sbb
jmp
or
loope
add
mov
mov
sarb
mov
sub
sbbb
sub
sbb
movsl
insl
mov
dec
add
sbb
iret
jbe
mov
sub
sub
ljmp
jle
rcl
xchg
arpl
sub
imul
mov
leave
push
lods
repnz
fildll
ds
pop
scas
outsb
pop
repz
or
pop
mov
ljmp
push
inc
movsb
mov
popa
int
leave
js
pop
fcompl
in
inc
xchg
hlt
mov
jne
xlat
cmpsl
popf
jp
jg
cli
adc
daa
je
bound
or
push
mov
and
push
scas
adc
mov
mov
xor
jle
mov
push
in
sar
add
adc
add
adc
hlt
pop
and
sub
sub
mov
mov
pop
scas
inc
cmp
test
xor
popfw
push
add
jbe
ret
push
adc
sahf
stos
xchg
jbe
outsb
loope
sahf
fcmovu
addr16
mov
and
cmpl
hlt
xor
inc
mov
insl
add
lcall
scas
xor
pop
xor
mov
fnstenv
dec
xchg
jae
addl
adc
jbe
ja
insl
and
loope
mov
popf
push
sub
sub
adc
out
jg
popa
loope
popf
cmc
adc
sbb
fmuls
addr16
push
insl
sub
out
loopne
mov
fnstcw
mov
xor
lahf
or
popf
xor
lea
xor
mov
outsb
insb
leave
and
idivl
jle
sahf
stos
cmp
dec
xchg
nop
jae
lret
js
add
inc
push
pop
ja
mov
pop
in
mov
int3
pop
shrb
mov
hlt
jo
mov
jmp
and
shll
in
sub
push
mov
leave
sti
xchg
sti
push
jg
xor
sbb
insl
daa
mov
mov
jl
out
loopne
push
subl
mov
imul
dec
jno
push
pop
sbbb
mov
pop
cmpsb
daa
mov
xchg
push
dec
lret
adcb
test
mov
movsl
add
mov
and
cmpsl
mov
imull
pop
push
imul
push
jle
sti
cmp
into
jl
rcrl
sub
lods
sbb
in
cmp
adc
dec
das
lahf
int3
bound
dec
pop
jge
outsl
inc
in
and
mov
fisubrs
shrb
xchg
sbb
and
or
xchg
sub
adc
cmpb
push
es
xchg
pop
out
cmpsl
mov
adc
ss
sub
push
xor
ficoml
pop
insb
push
jmp
pop
sahf
icebp
es
mov
outsl
push
je
std
clc
fisttps
ljmp
dec
daa
test
pop
aas
push
les
je
loop
mov
push
dec
scas
cmp
ja
lahf
and
mov
cmp
aad
add
movsl
aas
xchg
scas
lret
sbb
in
sub
mov
daa
movsl
sbb
pop
inc
mov
dec
addr16
scas
sbb
test
xor
hlt
stc
aad
out
mov
aas
mov
mov
or
jl
pop
mov
push
lret
add
cpuid
and
pop
push
aad
sub
and
cmp
fbld
faddp
and
into
jl
shl
stos
dec
mov
xchg
dec
out
insb
sub
xor
out
cmp
jle
sbb
bound
sub
cmpsl
mov
mov
enter
add
xor
or
ret
inc
xorb
mov
popf
mov
loope
lret
xchg
bound
push
sbb
mov
incl
or
dec
pop
in
andl
movsb
dec
in
iret
jnp
sub
adc
add
or
push
cmpsl
lret
push
je
in
pop
mov
push
push
ffree
or
mov
addr16
or
cmp
push
or
daa
push
add
repz
and
adc
xor
in
inc
loope
fs
in
mov
lret
mov
jns
shll
jecxz
dec
shll
ficompl
aam
jbe
scas
mov
or
pop
pop
outsb
mov
fisubl
mov
and
mov
fmull
dec
push
lcall
adc
outsb
jg
mov
sub
xchg
je
loop
jns
lahf
jno
jmp
or
dec
or
lods
mov
cmp
scas
or
cmp
hlt
dec
cmc
lods
andl
mov
mov
call
sub
sub
bound
push
push
subl
lods
mulb
mov
and
xchg
imul
sahf
push
fs
loope
jae
cmp
jb
les
cltd
std
xchg
nop
sti
out
sub
sbb
fs
jmp
and
lock
jb
test
jg
lods
cmpsl
adc
into
adc
cmp
mov
and
stos
inc
cwtl
pop
push
mov
push
aad
mov
cwtl
jo
in
lret
push
jp
pop
rolb
stos
adc
insb
or
in
cltd
mov
mov
scas
cmp
xor
ss
rclb
iret
clc
lret
jp
mov
dec
out
ret
adc
pop
mov
add
dec
lea
mov
xor
xchg
lods
test
scas
cmp
mov
mov
out
jno
add
les
mov
push
ret
ret
mov
loop
dec
push
jbe
jle
pop
and
inc
lods
movsb
pushf
jo
into
xchg
cs
mov
call
mov
icebp
or
je
push
lahf
add
sub
xor
cmpsb
adc
xchg
add
xchg
ss
inc
outsb
negl
push
pop
fstpt
gs
mov
leave
pop
fdivr
mov
sub
repnz
repz
out
pop
lahf
icebp
xchg
mov
sub
adc
push
xchg
mov
push
sbb
sub
cmp
lahf
cmp
pop
in
adc
fwait
loop
inc
mov
ret
repz
jb
movsl
add
xchg
dec
fstps
insl
pop
scas
andb
imul
mov
cmc
pusha
pushf
rcll
mov
sar
pop
jmp
orl
lcall
push
jg
and
popa
mov
add
mov
push
adc
sbb
roll
jecxz
js
adc
lcall
sahf
pushf
cs
xchg
and
or
push
stos
mov
push
jl
arpl
xor
mov
fs
data16
fidivs
pushf
pusha
cmp
sub
xchg
iret
jge
push
shrl
mov
loopne
fists
nop
ffreep
push
mov
xor
dec
loope
sahf
mov
insb
fsubrs
mov
insl
in
fildll
adc
cmc
jnp
aas
pusha
push
gs
lcall
fistpl
add
popa
stos
ja
jle
inc
insl
mulb
mov
inc
jbe
cmp
test
pop
push
out
stc
cltd
arpl
xor
and
jge
inc
stos
xchg
stos
push
add
nop
adc
jg
dec
scas
addr16
sbb
lret
sbb
push
addr16
pop
cmc
sbb
jl,pt
sbb
dec
mov
lock
cmp
mov
xchg
jl
mov
movsb
hlt
scas
mov
mov
push
jb
icebp
mov
dec
jns
jbe
push
push
dec
loopne
mov
cmp
test
cmp
cmp
xlat
sub
aam
mov
iret
push
loop
sub
add
inc
int
xchg
push
ds
push
lods
adcl
sbb
fmull
insl
cmp
das
dec
cmpsl
movsl
mov
loopne
mov
gs
inc
xchg
jno
inc
ficoml
cmp
cmc
hlt
inc
mov
pushf
push
mov
in
and
sub
inc
push
inc
lret
xchg
push
push
inc
push
fiaddl
movb
fs
adc
inc
push
bswap
jecxz
fistl
xor
inc
sbb
sti
cltd
and
daa
dec
sbb
xor
insb
sub
fwait
movsb
mov
xor
mov
dec
mov
push
pop
fiadds
popf
scas
mov
push
out
popf
into
lods
inc
add
lret
xlat
xchg
cs
outsb
push
lds
lock
daa
cmc
xchg
scas
inc
les
push
jae
cs
mov
rclb
adc
jno
rorb
lcall
cmpsb
jg
xchg
insl
int3
mov
dec
rorb
icebp
jecxz
jno
jmp
rorb
in
test
in
stos
mov
xchg
lods
das
or
insl
fsubl
aas
repnz
sub
daa
stos
cld
in
test
pop
xlat
push
fwait
pop
add
mull
scas
cmpsl
jecxz
dec
dec
in
lds
imul
jno
pop
pop
push
pop
pushf
sub
dec
outsb
repnz
lahf
ds
movsl
inc
ficoms
stos
shll
dec
shlb
cmpsl
push
fs
push
xor
push
adc
addr16
pusha
stos
shll
aaa
nop
sbb
inc
mov
adcb
cmpsb
into
cmp
add
jp
ret
loop
mov
mov
jbe
popf
call
rclb
in
bound
xchg
push
or
aaa
out
scas
rcll
sbb
mov
lds
movsb
adc
mov
inc
fistpl
mov
bound
pop
stc
mov
insb
arpl
movsl
cmp
outsb
hlt
cld
and
pushf
outsl
adc
sbb
add
cltd
inc
add
cwtl
xor
outsl
xlat
and
sbb
int
int3
sbb
loope
scas
push
lods
pushf
lcall
mov
xchg
mov
stc
popa
lods
cmp
popa
mov
mov
add
mov
push
popa
leave
ss
pop
mov
lret
xchg
jo
mov
stos
mov
rorb
jp
cltd
imul
jge
dec
mov
push
cltd
sub
xchg
cs
push
mov
jb
cmp
fistl
subb
lcall
cmpsb
les
mov
inc
test
pusha
push
fcmovbe
testb
cmp
sub
pop
nop
add
test
lods
cs
jmp
xchg
sbb
outsl
or
mov
xor
addr16
xchg
sub
xchg
shl
mov
sub
lret
add
inc
xor
into
or
jno
movsl
push
push
out
loope
mov
rcrl
or
mov
clc
testb
icebp
mov
push
btsl
arpl
pop
cmp
jecxz
repz
xlat
mov
ss
and
and
lret
int3
push
dec
pop
scas
cmp
xchg
cmp
into
inc
inc
outsl
dec
sub
mov
pop
sarl
addr16
mov
in
outsb
cs
inc
rclb
cmp
jae
inc
adc
sub
test
bound
xor
inc
mov
lods
rcrb
call
fbld
stos
jmp
adc
sarl
xchg
std
hlt
adc
lahf
es
out
xchg
jb
in
jmp
lds
pop
or
fstpt
aad
lret
dec
sahf
pmulhuw
pop
idivl
jge
rcrb
sub
inc
cs
sti
and
stos
or
dec
pop
arpl
in
and
and
sub
pop
mov
test
nop
stos
testb
sbb
call
cmp
xchg
sbbl
dec
sub
push
pop
cmp
movsl
mov
mov
int3
sub
sbb
inc
popa
sub
lods
xchg
into
adc
xor
incl
sbb
sbb
or
in
shlb
and
push
icebp
jle
movsb
mov
iret
dec
xor
repz
lea
subl
mov
mov
loopne
cli
inc
fsubrl
inc
push
rclb
lods
xchg
arpl
lret
test
lock
pop
and
ss
pop
jg
shrl
fildll
pop
jg
dec
xor
cmp
pop
mov
subb
dec
jb
fldt
and
fisttpl
xorb
lcall
adc
mov
mov
repz
push
nop
addr16
into
inc
les
es
das
sbb
lods
mov
dec
iret
out
sub
push
bound
arpl
jecxz
mov
inc
pop
ljmp
pop
outsb
cli
ljmp
xchg
xor
mov
test
lods
fadds
arpl
cli
cli
pushf
ss
xchg
or
jge
push
popf
dec
add
jns
test
xor
mov
scas
sbb
mov
imul
int3
adc
jmp
js
outsl
daa
and
dec
fxch
dec
fisttpl
mov
enter
shll
into
jno
lock
push
insb
and
cs
xor
cli
ret
call
dec
fisubrl
loope
mov
inc
fnstcw
xchg
push
movsl
ret
flds
aam
test
lods
repz
dec
inc
mov
cwtl
pusha
mov
lahf
xor
in
call
push
pop
fucomi
or
jle
dec
mov
repnz
loopne
sub
sub
outsb
or
sbb
cli
test
add
mov
dec
hlt
jge
inc
push
xchg
sub
mov
jge
adc
pop
insb
shll
cmpsl
push
shl
movsb
or
in
mov
add
sbb
mov
ret
add
or
push
push
daa
fimull
iret
fidivl
dec
addr16
push
pop
out
mov
inc
pop
pop
imul
xchg
and
adc
pop
std
shlb
repnz
add
mov
decb
sub
push
adcl
repz
movsb
mov
call
iret
or
adc
and
pop
aad
scas
ret
clc
ss
sbb
sbb
cmp
cs
rcrb
ss
mov
inc
pop
popf
jg
aad
icebp
repnz
lods
stos
sbb
cmpsb
or
inc
pusha
out
lock
inc
into
negb
in
cmp
sub
out
out
in
divb
or
jne
int
mov
faddl
ret
lock
cmpsl
xchg
dec
rcrb
sub
dec
pop
or
inc
aam
test
and
jne
jb
insb
pop
adc
fdivl
pop
sahf
jb
cmp
popa
movsb
dec
pushf
pop
jnp
jmp
leave
inc
mov
arpl
fs
imul
iret
mov
push
in
sub
lahf
pop
add
fisubrl
aas
jno
dec
iret
fstpl
lods
dec
scas
jmp
mov
mov
pop
dec
or
lods
jbe
fmulp
fildl
in
xorps
and
jp
dec
jmp
mull
push
addr16
mov
loopne
inc
out
mov
lods
push
sti
cmpsb
ja
add
mov
fdivs
iret
test
pop
jbe
adc
adc
addr16
imul
push
mov
dec
shrl
clc
aaa
dec
xor
push
mov
xor
ss
jle
push
cmp
push
out
fisubl
popa
fdivs
mov
sub
into
jns
dec
lods
jmp
imul
adc
push
sub
or
scas
xchg
sub
pop
pusha
mov
cs
iret
fldt
sbb
and
sub
mov
ret
data16
xor
inc
push
push
test
shr
jo
scas
add
push
aam
and
hlt
xchg
rorl
lock
shll
inc
mov
fmuls
inc
and
add
mov
mov
lret
fsts
fnsave
jp
add
pop
sbb
subb
mov
rcrl
mov
xchg
xchg
fwait
and
mov
mov
or
call
adc
push
jmp
jle
out
xor
cmp
popf
inc
stos
and
popa
loop
mov
or
adc
fnstcw
xor
and
aaa
mov
dec
scas
push
inc
lea
sbb
jne
or
fwait
mov
push
and
in
push
or
dec
xchg
hlt
jecxz
jo
call
or
in
jmp
push
cmp
outsl
inc
pusha
lods
push
movsl
or
stos
adc
xchg
orb
pop
aas
cmp
test
scas
cmc
lea
int3
mov
scas
popa
icebp
fisubrl
stos
jae
pop
cmp
and
xchg
cli
xchg
stos
inc
cmp
idivb
mov
sub
add
lret
ret
jl
mov
dec
mov
les
or
test
test
jmp
insb
loope
lret
push
mov
test
mov
jb
movsb
das
cmp
in
pop
mov
js
xor
sbb
cs
ds
mov
lds
cs
xor
dec
les
stos
sub
fnsave
adc
ss
jo
je
cmp
add
ret
cltd
mov
jge
fadds
push
testl
dec
arpl
ds
lea
test
ja
mov
xchg
xchg
add
insb
shrl
mov
cwtl
insb
and
scas
push
ss
mov
aaa
inc
enter
test
or
sub
push
push
movsb
lods
clc
cltd
mov
xor
lds
iret
xchg
mov
scas
mov
add
sbb
decb
fldenvs
cmpsl
aam
inc
push
jb
dec
sbb
pop
mov
std
int3
add
cli
sbb
dec
pop
mov
mov
icebp
popf
push
and
cmp
add
sbb
pusha
xchg
mov
out
cmp
sbb
dec
cmpsb
and
mov
xchg
mov
leave
pop
add
add
dec
xor
xchg
inc
rolb
test
cmp
sub
add
stc
mov
and
sarl
sbb
mov
add
xor
adc
push
sahf
jmp
leave
pusha
lods
mov
dec
push
fidivl
daa
iret
gs
add
shlb
cwtl
jo
ret
xor
xchg
xchg
scas
push
xor
outsl
xor
call
inc
or
pop
pop
outsb
test
push
xor
mov
mov
movmskps
cmp
sbbl
lock
or
das
xor
sub
push
mov
lock
add
shlb
test
pop
adc
pop
xchg
inc
or
xorb
jp
mov
add
fsubl
icebp
jno
push
ds
fdivs
mov
outsl
pop
xlat
mov
mov
xchg
bound
xchg
insl
fisubl
pop
xchg
jb
int3
in
cmpsb
std
clc
or
jns
aaa
pop
aaa
bound
jecxz
pop
aam
lock
add
bound
mov
fcoml
and
imul
push
std
fisttpll
mov
fmull
inc
fwait
mov
adc
add
inc
xor
dec
jb
sub
or
xor
jns
fnsave
pop
cmpsb
out
xor
mov
mov
daa
or
mov
cmp
cmpsb
dec
dec
addb
or
adc
clc
ret
mov
jecxz
es
cli
xchg
or
cs
mov
fsubs
and
ss
dec
ds
push
mov
out
in
fldenv
fs
xor
cld
mov
or
push
mov
xchg
out
ror
pop
mov
ret
out
sbb
mov
in
mov
out
xchg
push
arpl
out
adc
enter
or
fildll
push
scas
inc
xchg
int3
fdiv
mov
jnp
shll
push
push
aad
mov
mov
cmc
dec
adc
inc
lret
jb
fisubrl
add
shll
test
add
insb
pop
push
push
das
adc
sub
jp
shll
sarb
jbe
adc
out
imul
popa
pop
or
push
sub
scas
cmp
roll
pusha
add
lret
xor
mov
test
clc
jae
inc
mov
jae
pop
push
lret
inc
push
xchg
repnz
outsl
idiv
rolb
jp
stc
nop
xlat
fiaddl
or
pop
bound
loop
dec
mov
jbe
push
xor
fstpt
pop
push
inc
push
in
js
jecxz
mov
fidivrl
pop
push
inc
xor
ss
aam
idivb
cmp
xor
ljmp
cmp
adc
subl
xor
mov
push
out
xor
movsl
fldenv
or
mov
push
nop
daa
mov
out
jle
adcb
lahf
jbe
xchg
lds
mov
xor
mov
les
insl
cwtl
aam
or
sahf
jle
mov
fistps
cmp
sub
fcomp
jne
enter
push
adc
mov
loope
xorl
sbb
fstl
insl
andb
cmp
and
inc
and
fsubrl
push
pop
xchg
add
adc
jecxz
cmp
push
push
mov
xchg
sub
push
das
movb
mov
into
sbb
pop
lea
xor
mov
aam
mov
ja
dec
rcll
add
add
push
cltd
xor
cs
pop
nop
mov
mov
mov
pop
rcrb
ret
push
sub
lock
ja
aaa
ss
gs
sahf
xchg
sub
mov
mov
popa
clc
pop
lds
stos
add
scas
inc
dec
and
enter
inc
pop
arpl
dec
ds
pop
in
aad
mov
adc
xor
inc
cli
sub
sub
mov
adc
nop
sbb
into
dec
mov
loop
push
in
sahf
cmp
cmp
fisubs
pop
lock
pop
repnz
ja
and
fcoms
mov
mul
inc
sti
xchg
jb
xor
imul
inc
add
xor
adc
js
imul
int3
and
and
xchg
adc
fldl
inc
fsubrp
data16
xchg
or
mov
test
mov
and
sub
jae
mov
xchg
mov
ficompl
scas
or
sub
pop
and
add
cmpsl
sub
notb
sahf
xor
adc
aaa
lds
xchg
xor
sbb
xor
in
test
mov
adcb
mov
and
and
push
movsl
and
pop
repz
sub
jae
jp
imul
pop
shr
loopne
sbb
aas
xchg
jno
les
xchg
sbb
ret
mov
pop
mov
adcl
es
mov
pop
pop
into
mov
add
ret
mov
cltd
rcrb
mov
nop
cwtl
push
out
mov
rcrl
lea
daa
mov
adcb
pop
dec
in
pop
ss
xchg
int3
arpl
cwtl
loopne
int
push
and
cwtl
cld
xchg
int
sbbb
pop
sub
mov
fs
cwtl
pop
xchg
sub
mov
mov
aam
jno
fcoml
daa
pop
sub
addr16
jnp
aaa
mov
into
lods
aam
push
add
sbb
push
sbb
rclb
jecxz
mov
ret
clc
adc
dec
inc
sbb
xchg
dec
arpl
xchg
mov
push
out
adc
inc
and
add
add
int
dec
adc
call
adc
or
aad
sbb
inc
frstor
mov
insl
sub
jge
dec
add
xor
pop
testb
mov
sbb
lcall
fdivrl
add
stc
nop
ss
pop
lock
jecxz
repnz
xor
add
and
inc
loop
inc
adc
cli
xchg
or
jns
cmp
fnstenv
jmp
and
inc
sbb
aad
shrl
add
inc
sbb
jle
fdivrs
or
sbb
lahf
dec
add
lods
xor
xchg
sub
lock
jge
dec
or
sahf
cmp
mov
push
or
mov
and
pop
icebp
sbb
or
ljmp
dec
arpl
sbb
and
or
sbb
dec
sti
jl
sub
call
imul
mov
xor
fstpt
iret
or
lds
and
test
add
sub
leave
pusha
stc
insl
das
xor
mov
clc
out
test
testb
cmp
insl
cmc
ss
rcrl
and
push
cmc
push
mov
ret
repz
insl
es
in
clc
inc
fbstp
hlt
mov
sub
mov
rclb
test
add
jo
push
push
jmp
pop
fnstenv
or
movsl
cmp
ja
dec
ljmp
adc
sbb
sbb
mov
dec
pop
mov
fidivl
or
rcrl
xor
sub
rep
cmp
idivb
or
inc
fistpl
push
push
mov
push
xchg
sub
cli
cld
xchg
sub
and
sbb
mov
jbe
stos
mov
dec
repnz
lea
ds
sub
xchg
sub
jae
pop
mov
insl
cmp
fcmovbe
xchg
out
xchg
pop
add
sub
jae
mov
fmul
fs
int
and
sti
xchg
addr16
int
je
sbb
int
fnsave
fwait
xor
das
sti
adc
mov
scas
mov
popa
js
aam
lds
sbb
fsubrs
iret
push
in
add
mov
mov
dec
xchg
xchg
enter
add
and
dec
add
lds
insl
add
sbb
inc
push
add
pop
icebp
add
xchg
sub
dec
add
jae
or
adc
inc
or
fildl
loop
adc
or
xchg
cmp
mov
adc
loopne
cmp
or
pop
push
jecxz
dec
adc
or
sahf
cmp
sbb
push
mov
and
cmp
add
pop
mov
push
jmp
xor
arpl
lea
mov
shrl
sub
pop
sbb
lods
inc
repz
mov
cld
sub
mull
adc
in
sar
xchg
add
es
push
test
mov
and
pop
iret
inc
xlat
cld
and
xor
push
jno
aas
cmpsl
ja
mov
repnz
adc
mov
dec
fnstenvs
outsl
cwtl
das
popf
mov
in
es
cmp
inc
pop
dec
pop
add
mov
push
ffreep
call
repnz
ljmp
test
movsb
xor
shll
pop
mulb
or
xchg
jne
shrl
xchg
dec
pusha
mov
stos
ret
and
inc
cmp
jo
sub
xchg
xchg
mov
enter
jmp
or
cmpsb
inc
aas
mov
xor
mov
loop
in
test
pop
in
cmp
jnp
gs
jne
mov
or
fcompp
movsl
mov
xor
push
in
pop
push
xchg
sub
mov
loop
nop
daa
add
jp
xor
cmp
pop
push
push
lods
cmpb
mov
mov
inc
add
sbbb
sub
pop
dec
test
jl
fdivl
popf
mov
test
cwtl
push
in
int
mov
in
add
pop
xor
pop
scas
pop
dec
lcall
mov
mov
and
mov
je
nop
daa
xchg
lock
mov
cmp
cli
mov
daa
dec
add
jns
jecxz
inc
mov
divb
daa
sub
ljmp
pop
jmp
cmp
ss
imul
and
pop
xlat
cmp
iret
js
dec
xchg
cs
fsubs
dec
dec
fcoms
pop
push
aad
pop
mov
movsb
out
inc
mov
popf
imul
stos
push
jnp
push
jmp
dec
mov
jnp
push
shrl
mov
cmc
mov
ja
inc
or
fidivrs
xchg
mov
cmp
adcl
clc
xchg
and
movsl
jge
sbb
jge
mov
sub
pop
dec
jl
aaa
inc
pusha
cmc
daa
gs
fisttpll
xor
gs
sti
mov
imul
sub
cmpb
iret
adc
sub
add
addl
aam
xor
pop
in
divb
push
pop
adc
mov
push
push
rcl
and
cmp
in
fbstp
push
outsb
mov
test
pop
out
mov
jle
jecxz
mov
mov
pop
les
cmc
mov
mov
sub
pop
std
mov
or
push
ret
xchg
jmp
inc
ret
and
mov
das
aad
xchg
aam
das
mov
lds
je
pop
rcl
lret
les
int
push
fists
sbb
inc
test
out
insb
mov
mov
popl
test
sub
popf
xor
xchg
call
outsb
mov
pop
ficompl
lock
repnz
les
mov
push
adc
mov
jecxz
mov
inc
inc
jns
push
push
sbb
cwtl
cmpsl
adc
add
arpl
movsb
xchg
lock
in
sub
bound
dec
xchg
xchg
data16
and
stos
inc
scas
mov
test
out
mov
sbb
shrb
jnp
repz
stos
mov
lcall
sti
out
inc
rcll
push
test
pop
ljmp
sbb
test
jle
jne
daa
push
or
push
inc
lds
shll
and
mov
divl
mov
xchg
rol
rorl
cmp
push
mov
cmp
mov
ficomps
add
jae
imul
xor
inc
mov
sbb
imulb
xor
jb
jnp
dec
je
imul
js
mov
out
mov
fisttpll
idiv
sub
push
les
sti
leave
push
shr
mov
pop
lcall
insl
popf
mov
xchg
jge
push
sbb
add
fadds
inc
pop
xor
rolb
and
je
pop
or
jmp
mov
dec
mov
mov
xchg
xchg
adc
js
arpl
cmp
jp
mov
xchg
lds
dec
loopne
xchg
mov
ss
orl
sbb
ds
fmul
xor
nop
loopne
lret
xchg
mov
adc
push
adc
jo
ret
pop
adc
jg
pusha
cmp
jecxz
jmp
or
push
stos
ja
sbb
mov
pushl
das
add
and
ja
xor
sbb
loop
jmp
roll
aaa
ficoml
or
cmc
scas
lahf
loop
and
and
bound
test
test
cmpsb
push
jb
insb
mov
out
in
xchg
lods
movb
rorl
lea
stc
cmpsb
cmp
pop
push
jmp
xor
pop
in
jnp
or
sub
adc
add
cli
cmp
or
jge
adc
ret
cmc
pop
in
pop
pop
mov
icebp
or
sbb
mov
or
xor
xchg
imulb
push
test
pop
test
pop
cmp
iret
sbb
push
icebp
cli
shlb
cmp
ror
fldcw
and
enter
es
inc
aam
imul
xor
mov
add
mov
andb
mov
dec
insb
jb
pusha
jo
adc
and
jg
fnstenv
mov
mov
aam
pop
lea
jnp
ret
movsl
push
mov
xor
sbb
adc
mov
nop
sti
jle
rolb
ds
scas
inc
fsubp
out
loop
fiaddl
test
cli
adc
mov
pop
iret
ret
jl
into
or
rolb
and
shlb
jo
mov
add
cmp
nop
jp
repz
das
outsl
mov
mov
incl
mov
ljmp
je
dec
roll
lods
inc
jns
cmp
push
popf
out
xor
outsl
or
mov
lret
bound
scas
push
or
nop
xchg
inc
mov
test
mov
insl
outsb
dec
mov
mov
clc
sub
aaa
sub
jae
or
icebp
mov
push
or
out
mov
xor
aaa
mov
ja
jg
aaa
aaa
mov
jne
cmp
stos
and
mov
cmc
jg
int3
lods
jg
shufps
mov
xchg
loope
in
mov
xor
ljmp
and
adc
shrl
mov
push
shll
repnz
sbb
adc
push
int3
and
add
test
mov
sub
sub
add
pop
iret
test
addr16
and
cmpl
adc
outsl
mov
and
xchg
mov
inc
mov
add
dec
loop
and
ss
ss
and
xchg
cltd
and
cld
cmp
fists
add
mov
jmp
nop
mov
test
arpl
pop
pop
mov
das
or
sub
inc
cmp
xor
push
jecxz
jle
les
add
daa
xchg
and
and
xchg
sbb
xchg
pop
in
push
scas
cmp
xchg
stc
aad
mov
neg
orb
aad
test
int3
adc
xchg
scas
push
adc
pop
int3
popf
mov
push
leave
or
dec
ret
inc
mov
push
adc
mov
hlt
and
ret
pop
jge
sbb
mov
out
icebp
sbb
out
lock
push
jne
gs
dec
mov
loope
dec
sbb
nop
xchg
xchg
mulb
push
int
mov
sub
jle
movsl
push
out
out
inc
shrb
dec
xchg
adc
mov
sti
mov
xchg
xchg
aam
push
push
in
shrb
test
jno
fists
cwtl
out
outsb
fildll
push
cs
out
popf
stos
jle
jno
loop
popf
cwtl
orl
sahf
outsl
add
jne
pop
xor
lret
inc
fwait
jge
jno
or
addr16
lret
cmp
push
aam
sbb
cmpsl
pop
sub
mov
cmp
mov
xor
pop
lret
cs
mov
push
pop
icebp
push
mov
xchg
pop
rclb
cmpsl
xchg
test
pop
cmpsb
jb
sbb
or
int
popa
hlt
sub
dec
sub
push
js
je
jae
in
cmp
mov
out
xor
lods
out
cmpsl
mov
lcall
jne
cwtl
push
sbb
lods
or
inc
scas
stc
lret
bound
sbb
cmp
jl
bound
inc
addr16
dec
loope
inc
stos
pop
cmp
mov
mov
jae
sub
jp
outsb
inc
rclb
and
xor
inc
jp
in
dec
xchg
jnp
inc
cmp
pop
insl
sahf
xor
xor
mov
aas
xor
mov
data16
test
sahf
xchg
js
ss
xor
fadds
or
cmp
mov
loopne
mov
popa
cmpsb
test
fldt
shl
dec
ret
shrb
sarb
jo
fdiv
sub
push
xchg
cmp
addr16
jmp
shrl
mov
loop
ja
push
in
or
xor
sub
cmp
jo
push
movsb
popf
cltd
push
sar
mov
sub
sub
xor
lock
orb
incb
fwait
jb
add
adc
push
lret
es
rclb
mov
cld
addr16
roll
jb
loop
mov
call
lds
fmuls
out
cli
icebp
lock
stos
push
or
cmpsl
add
js
push
lret
mov
insb
movsb
pop
fadds
sub
jecxz
or
lahf
mov
push
sahf
int3
mov
movsl
pop
ret
jle
mov
jp
mov
mov
lcallw
test
cmp
sub
outsl
mov
add
push
xor
jae
jp
xor
pusha
imul
push
cmp
sbb
dec
outsb
cmp
xchg
mov
gs
xchg
jle
xchg
jl
or
mov
ljmp
push
dec
push
rcll
sbbb
int3
clc
sub
dec
or
sub
and
sahf
push
js
insb
and
push
ja
inc
fidivl
les
fwait
push
sbb
xchg
clc
jmp
sbb
dec
out
push
push
inc
mov
stos
or
das
lahf
jecxz
sbb
stos
jae
sbb
pop
mov
sub
and
pop
out
cmpb
fiaddl
cli
and
jo
into
dec
xchg
fisttpl
pop
xor
lea
sbb
loopne
insl
rcr
sub
aad
ss
into
push
mov
out
mov
and
int3
mov
and
adc
out
aam
hlt
test
imul
fadd
inc
jmp
test
arpl
ret
fdivp
ljmp
call
lock
lret
aad
rcrl
fs
cmpsl
pop
sar
mov
cmc
mov
stos
data16
popf
xor
xchg
cs
in
sbb
jns
incl
negb
daa
push
cmp
imul
ficoml
mov
mov
push
mov
std
jb
dec
dec
xlat
inc
leave
out
mov
gs
lret
push
and
mov
add
xchg
ficoms
and
insb
mov
mov
push
mov
mov
das
in
inc
dec
push
cmp
nop
stos
xchg
cwtd
jmp
sub
jmp
jl
adc
pop
xchg
cwtl
js
sub
fmull
pushf
dec
in
lret
xor
subl
adc
and
fldl
inc
subb
scas
pop
mov
mov
loope
xchg
in
pushf
xor
jge
mov
fsts
adc
mov
repz
out
call
ja
inc
test
cmc
rdtsc
negl
sbb
dec
mov
ljmp
mov
out
mull
push
fdivrp
push
jmp
dec
adc
cmp
arpl
movsl
push
les
mov
cli
nop
pop
stc
mov
mov
movsl
xchg
push
adc
mov
adc
outsl
mov
repz
pop
mov
and
lahf
inc
jbe
pop
test
outsb
mov
lret
fsub
dec
loope
fsubp
sub
xor
xlat
dec
mov
or
add
pop
mov
lret
jg
mov
pop
incl
push
out
mov
repz
and
jb
cli
dec
inc
rolb
es
dec
xorl
and
bound
lcall
xchg
cmp
imul
jge
mov
sub
mov
pop
ret
jns
loopne
lods
dec
add
cmpsb
pop
pop
leave
pop
clc
push
shr
pop
inc
shll
inc
fucomi
dec
sub
cmp
mov
insl
adc
cmp
fwait
mov
addb
pop
mov
jmp
jae
cmp
push
int
data16
jbe
ss
cmpsl
add
adc
ret
xchg
int3
xlat
mov
xchg
ljmp
mov
in
xchg
xchg
cmp
ja
push
fisttps
pop
cmpsb
pop
xchg
mov
cmp
add
cmp
rol
out
mov
sub
sti
xchg
fsubrl
mov
mov
insb
add
cltd
aas
sbb
mov
jg
mov
in
xor
mov
out
gs
mov
out
outsl
mov
repz
ljmp
xlat
ljmp
fmul
or
in
insl
mov
mov
stc
hlt
shlb
loop
adc
test
jnp
test
cs
adc
mov
hlt
pop
rol
mov
inc
into
mov
ljmp
icebp
mov
icebp
sbb
and
adc
mov
pop
aam
sahf
lock
js
in
dec
xchg
jo
mov
push
jb
sarl
les
xor
test
int3
push
leave
sbb
sub
xlat
loop
xchg
clc
adc
mov
cli
cmp
shrb
adc
xchg
or
xor
cmp
dec
loopne
rcll
mov
imul
jmp
sub
dec
mov
push
nop
jge
cmp
add
jbe
filds
lcall
in
pop
enter
jge
movl
xor
and
and
or
arpl
aam
lahf
outsl
pop
ret
xor
mov
enter
add
subl
es
jge
mov
inc
adc
xchg
xchg
dec
ret
fidivl
jp
ja
xor
stos
mov
push
adc
or
int3
add
push
lret
jae
cmpl
rorb
mov
mov
fisubs
fidivrs
std
aaa
jmp
lock
lret
adc
push
pushl
rcrl
jnp
sarl
mov
lret
in
add
shl
nop
jge
repz
cmp
mov
dec
iret
int3
jecxz
call
iret
and
fsubrp
jge
mov
and
xchg
or
or
ds
mov
pop
sahf
adc
scas
out
cmp
mov
fnstcw
adc
dec
into
es
add
pop
xchg
push
call
dec
sub
jbe
insb
add
and
pop
sub
stos
nop
adc
loopne
mov
cs
imull
mov
or
push
sahf
or
lods
and
es
lcall
int
fsubl
lahf
loopne
enter
pop
out
pop
icebp
adc
mov
adc
sbb
cmp
jmp
pop
das
push
cli
mov
cmp
cmpsl
jg
xchg
popa
enter
sub
and
push
xor
mov
add
mov
cmp
jecxz
inc
mov
pop
mov
scas
data16
cwtl
mov
lcall
mov
arpl
imul
adc
pop
clc
mov
std
cli
rcl
push
lock
xlat
loopne
mov
aam
xor
lea
and
mov
div
repz
inc
cmp
pop
lret
fistpl
mov
dec
int3
xchg
data16
and
mov
push
mov
aad
cmp
cmp
pop
arpl
sbb
daa
scas
pop
xchg
sub
or
gs
int
and
test
cmp
mov
pop
sub
ret
inc
dec
lea
dec
mov
lret
cmpsl
pusha
popf
mov
stos
adcb
push
imul
xchg
test
fstpl
js
les
ja
ret
sbb
sbb
sbb
shr
fistl
fidivrs
rcl
dec
mov
repz
shll
cmpsb
pusha
enter
mov
ffree
dec
rol
xchg
fst
sub
add
es
aam
add
clc
js
xor
mov
test
adc
out
and
rcrb
jns
fcoml
loope,pt
and
hlt
out
cmp
mov
lods
mov
mulb
mov
shll
gs
or
push
cmc
push
ja
scas
popa
ret
or
lock
add
arpl
add
fwait
xor
sti
scas
cmc
mov
mov
stos
mov
or
or
mov
pop
pop
pop
mov
outsb
xchg
xor
dec
movsb
mov
sbb
out
dec
jecxz
jecxz
into
add
lock
stos
lock
add
and
pop
mov
mov
mov
xchg
in
lods
jns
sbb
in
pop
outsb
dec
and
push
and
dec
ja
mov
dec
xor
sub
scas
inc
mov
lods
mov
ljmp
xor
add
test
cwtl
in
jmp
mov
and
aam
das
xchg
jns
mov
movsb
loope
popf
gs
jno
cwtl
dec
stos
inc
cmp
pushf
xor
dec
mov
ljmp
adc
dec
push
negb
push
cmp
stc
xor
jmp
cld
leave
xor
xor
mov
xor
sbb
add
popf
gs
sub
pop
stos
test
or
out
sub
cmp
sahf
jb
mov
push
pop
or
lds
imul
out
jnp
loope
clc
mov
sahf
mov
adc
inc
les
call
cmp
xchg
jns
mov
sub
out
add
in
mov
and
xchg
movsb
pop
push
fnstcw
mov
adc
movb
mov
dec
aam
mov
daa
flds
inc
flds
inc
mov
push
jp
int3
aas
push
cmpsl
pop
jnp
or
pop
push
stos
imul
outsb
and
shrl
test
mov
popf
adc
pop
loope
push
xchg
and
mov
xchg
jle
sub
and
inc
mov
aad
pop
je
sub
inc
lahf
sub
jb
setne
lock
insl
int
mov
pop
out
xchg
iret
xchg
xchg
adc
xchg
insl
mov
iret
sub
fisubrl
ret
push
faddl
jecxz
pop
sahf
inc
mov
or
push
jl
das
cmp
dec
imul
pop
pop
push
xchg
push
jns
or
mov
dec
push
mov
sub
daa
push
dec
cmp
push
and
mov
cwtl
repz
xchg
out
xor
addr16
ljmp
and
cmpsb
jae
or
add
sbb
pop
push
clc
xor
pop
lock
and
dec
cmc
mov
stos
jb
cmp
rorb
in
adc
jnp
lahf
imul
js
pop
pop
mov
or
inc
xchg
jl
jo
cmp
movsb
cmp
rcll
mov
arpl
outsb
sahf
push
pop
mov
xchg
push
jns
dec
mov
scas
icebp
dec
popa
fwait
dec
cmpsb
push
mov
jp
pop
repnz
fwait
push
and
cmp
aaa
hlt
and
into
xchg
inc
fcoms
lock
adc
xchg
leave
pop
pop
fcmovbe
imul
mov
xchg
add
scas
popa
jns
jnp
pop
das
cltd
test
or
mov
out
iret
mov
jmp
enter
pop
lods
or
adc
in
xor
aam
dec
int3
mov
movsl
cmpb
insb
lods
pop
dec
mov
bnd
adc
scas
sub
cld
testb
sbb
mov
lahf
sbb
bswap
xchg
jl
mov
pop
and
rcrl
cmpsb
mov
popf
outsl
adcb
sbb
imul
sbb
fstpl
jae
fstpl
icebp
fisttps
push
jmp
subl
mov
or
push
sbb
int3
lods
cmp
test
inc
leave
lahf
repz
pop
inc
les
les
loop
xchg
movsb
push
add
push
out
and
pop
fiadds
jae
fisttpl
mov
mov
sbb
jo
ret
sbb
or
fdivl
les
dec
mov
jp
stos
gs
lahf
sub
and
nop
sub
popa
int
xchg
xor
lea
xor
stc
das
xorl
sub
insl
stos
or
lahf
ss
pop
jecxz
xchg
jecxz
jo
push
in
or
divl
ret
popf
test
and
into
gs
mov
fisubrs
out
aam
jne
decl
adc
gs
int
imul
test
mov
adc
xchg
lea
add
stos
push
xchg
in
scas
pop
icebp
mov
shlb
push
or
mov
and
std
add
call
out
mov
mov
mov
dec
mov
data16
fbld
insl
lahf
cmpsb
sti
adc
in
je
mov
notb
daa
mov
xor
daa
negb
sub
out
or
out
mov
aam
jp
scas
pop
icebp
push
ret
inc
data16
mov
stos
jne
repz
pop
mov
sbbl
shlb
sub
int
mov
lods
enter
imul
arpl
aaa
into
mov
movsl
cmp
push
in
pop
int3
ret
pop
sub
pop
pop
loop
push
jnp
sub
into
scas
inc
add
push
mov
and
fs
pop
cmp
andb
or
in
sbb
mov
inc
imul
popa
mov
xchg
mov
aam
out
sbbl
pop
repz
jno
xchg
pop
mov
mov
fnsave
mov
jge
mov
sub
dec
test
mov
mov
cmp
ja
push
jmp
cwtl
push
out
leave
add
pop
ss
mov
add
arpl
add
dec
sub
fwait
xor
mov
jge
pop
xor
outsl
gs
dec
scas
xchg
cmpb
add
push
and
addr16
cs
popf
pop
mov
addb
mov
jmp
stc
add
adcb
bound
inc
jge
imul
sbb
pop
loope
adc
jecxz
inc
adc
ss
roll
aas
mov
insb
mov
cwtl
mov
rclb
dec
xchg
sub
cld
sahf
push
mov
jo
jecxz
adc
or
call
jae
mov
ret
lea
std
in
adc
fistps
mov
mov
aad
inc
xor
dec
pop
and
hlt
scas
push
inc
insb
and
inc
lcall
lods
dec
shrl
sub
xor
int3
add
cmpsb
lods
test
and
fistps
ss
adc
sbb
push
in
xlat
lret
mov
roll
push
cltd
jae
xchg
stos
add
in
pop
lds
fmuls
dec
iret
mov
inc
lcall
xchg
popf
lods
sub
rorl
aad
jne
sbb
shl
inc
addr16
lret
xchg
push
repz
sti
call
jmp
jns
pop
push
dec
stos
pop
movsl
mov
lock
inc
arpl
repnz
mov
mov
xlat
mov
lahf
ds
mov
lahf
ljmp
scas
adc
mov
and
aas
jge
ss
dec
mov
pop
and
loope
test
jg
aas
adc
sbb
inc
xchg
loope
scas
add
jmp
addr16
addr16
movsb
mov
xchg
loopne
pushf
push
and
inc
cmp
stos
push
or
or
pcmpgtw
cmpsl
fisttpll
sub
sub
pop
std
nop
aam
xor
push
xchg
inc
les
std
rorb
jo
fwait
enter
cltd
out
jp
jbe
gs
sbb
add
or
xchg
sub
loopne
adc
pusha
negb
pop
adc
push
cmp
jno
test
cltd
mov
aad
movl
jmp
xor
mov
adc
or
pop
push
out
testb
imul
les
mov
cmp
dec
pushf
inc
xor
test
pop
mov
fs
enter
dec
out
push
add
push
into
daa
iret
jp
lcall
inc
movsl
jmp
add
jno
jmp
and
sbb
pop
fscale
xchg
outsb
shlb
aaa
xor
adcl
or
xchg
sbb
xchg
fldl
or
add
xor
insb
mov
push
jp
dec
mov
clc
fnstsw
or
jle
add
mov
inc
pop
hlt
xor
testl
pop
dec
mov
mov
into
mov
mulb
jae
adc
stos
inc
jne
pop
hlt
and
movb
fwait
pop
popf
xor
cmp
pusha
lods
out
scas
inc
loopne
iret
data16
cmp
hlt
bound
rclb
jp
dec
xchg
sub
xor
cmc
pusha
test
lods
xchg
cs
dec
inc
fidivrs
adcl
push
lods
mov
pop
dec
cmp
cmp
pop
pop
lock
aam
push
push
shll
daa
cltd
cmp
in
adc
cmpsl
jmp
sti
pop
call
icebp
inc
fsubs
sub
sbbl
lds
cmp
rcrb
into
mov
rolb
mov
mov
stos
adc
or
xchg
pop
pop
int
testl
and
fsubrs
xor
sub
xchg
jp
pusha
lods
mov
mov
sar
xor
imul
push
jl
rsqrtps
repnz
sub
or
pop
leave
nop
and
xlat
jle
xor
inc
or
insl
hlt
add
fcmovbe
push
xchg
add
dec
ret
and
jecxz
mov
cmp
add
adc
push
jg
setl
mov
and
xor
je
adc
add
inc
mov
fmull
fisttpll
and
pushf
inc
cmp
cmpsl
sub
sub
add
xchg
cmp
jecxz
mov
pop
das
mov
movsb
pushf
inc
dec
xor
or
ja
pop
les
addr16
sbb
xchg
cmp
daa
pushf
inc
dec
out
push
aam
mov
or
es
scas
xor
pop
sub
or
pop
cmpsb
sub
xchg
orb
orb
xor
gs
cmp
cs
cs
mov
mov
bound
jecxz
dec
rcrl
inc
or
push
test
sbb
xchg
xor
movsb
cs
lret
cmp
pop
add
arpl
push
xor
jb
fisttpl
sub
jg
ds
adc
jno
gs
dec
psrad
and
and
push
idivl
mov
dec
add
push
inc
or
fisubl
sub
aas
movsl
sub
mov
lret
ret
mov
pusha
inc
or
add
stos
push
or
scas
in
movsl
sub
stos
test
lea
mov
mov
cmp
and
mov
cmp
gs
xor
inc
adc
call
pop
mov
xor
cltd
cmp
aad
sub
fistpll
mov
sbb
jmp
xor
sahf
ds
push
cltd
aaa
inc
mov
adc
jbe
xor
out
xchg
aas
das
add
mov
aaa
sub
sti
scas
popf
cmp
outsb
out
jae
lea
imul
fldcw
stos
jno
lcall
outsb
repnz
dec
and
lret
rcll
iret
mov
xor
mov
test
imull
insb
in
cmp
mov
outsb
or
stos
test
shlb
sub
sub
insb
out
xor
jecxz
jle
or
fisubs
cmp
int
aad
sub
push
inc
mov
out
jmp
je
sbb
mov
mov
xchg
inc
aad
sub
mov
popf
cmp
dec
jecxz
pop
sub
outsb
mov
cltd
cmp
sub
lcall
mov
inc
mov
pop
gs
and
mov
roll
mov
mov
adc
jbe
xchg
push
pop
nop
mov
mov
imul
sub
inc
pmaxsw
sbb
push
inc
dec
repnz
lahf
imul
sub
jmp
xor
dec
pop
imulb
rolb
repnz
and
pusha
mov
xor
imul
and
inc
ss
data16
popf
push
ror
jmp
mov
pop
fs
cmpsb
xor
sub
mov
ja
adc
jo
cmc
fwait
add
mov
nop
in
data16
es
icebp
out
sub
mov
repnz
negl
and
cld
cmp
or
jnp
mov
fildl
cmp
xchg
jb
or
mov
push
imul
outsl
sub
add
imul
xchg
mov
cmpsl
jge
or
pop
mov
call
pop
incb
push
add
mov
mov
add
mulb
pusha
leave
lea
mov
jp,pt
aas
and
sbb
or
out
xchg
inc
fdivrp
fdivrs
add
mul
dec
or
aas
jp
mov
mov
je
jne
jnp
das
addr16
cmp
popf
mov
push
mov
ljmp
cmp
inc
jb
jae
cwtl
arpl
xor
aad
cwtl
and
lahf
iret
leave
dec
push
aaa
and
push
sub
idivl
adc
icebp
adc
inc
insb
hlt
fwait
ds
xor
inc
or
mov
loopne
mull
mov
sbb
xchg
in
or
fistl
cmp
movsb
sub
in
sbb
adc
jb
pop
add
leave
mov
fs
sti
pusha
cld
cmpsl
xchg
fwait
inc
scas
pusha
dec
adc
mov
aaa
pushf
mov
cmp
scas
pusha
gs
sbb
cmpsb
mov
cwtl
int3
mov
test
inc
or
rclb
in
dec
negb
adc
movsb
js
add
mov
cs
xchg
xor
mov
negl
fcmovbe
jns
inc
inc
or
jl
mov
add
mov
fwait
cmpsb
sub
and
aam
push
cmc
pop
test
pop
lret
ret
mov
add
or
scas
and
xor
and
or
pop
or
ret
rcrb
or
pop
mov
aaa
dec
sub
xlat
and
push
xchg
mov
inc
or
mov
sbb
push
adc
cs
popf
aas
movsl
cmp
cmp
mov
mov
sahf
call
jmp
lods
sbb
stos
xor
push
cmp
inc
sbb
mov
add
cpuid
or
and
sarb
scas
mov
dec
pop
divl
aad
pop
insl
jbe
push
dec
sub
adc
dec
outsb
out
sti
xor
out
jecxz
outsb
add
pop
cli
repz
in
xchg
ljmp
mov
leave
mov
scas
aad
and
pop
cli
mov
insl
out
in
test
leave
mov
fdivrl
mov
jbe
std
pop
hlt
insl
lods
cs
inc
adc
testb
jge
push
sbb
cmp
daa
xor
roll
mov
int
sahf
mov
mov
push
xchg
pushf
pop
std
jne
or
pop
outsl
test
mov
mov
pop
sti
icebp
xlat
js
adc
xchg
dec
pop
stc
xchg
int3
xchg
insb
jmp
push
add
pop
div
test
add
cmpsb
jbe
ret
jg
pop
in
push
pushf
pop
cld
roll
xor
inc
adc
mov
lea
and
out
pop
insb
ljmp
sbb
xchg
sahf
cs
inc
and
mov
cmp
fisubrs
rolb
jns
add
pop
fsubr
outsl
push
nop
push
neg
dec
fiadds
jae
push
sti
stos
fs
imul
or
mov
sub
jb
cmp
shrl
les
test
cmpsb
sub
int3
sub
pusha
xchg
jnp
jge
vsubps
mov
mov
out
movsb
loop
adc
mov
jmp
sarl
sub
mov
cmp
enter
sub
mov
push
mov
insb
cmc
inc
jo
cmpsb
sub
ss
sarl
jo
adc
jae
pushf
inc
push
iret
nop
xchg
cmp
sbb
xchg
and
pop
aam
mov
mov
scas
cltd
rclb
push
dec
or
out
inc
adc
and
inc
xchg
js
cmp
pop
mov
sahf
fidivl
movsb
push
out
adc
mov
sbb
xor
sub
aas
xchg
cmp
scas
cli
and
test
out
shrb
adc
repz
cli
incl
aam
xchg
aaa
jno
pop
pushl
test
fs
aad
out
pop
enter
enter
add
inc
pop
add
and
nop
mov
scas
mov
mov
push
roll
mov
fisubs
test
mov
cwtl
inc
dec
mov
and
mov
sub
inc
lea
cwtl
insb
jl
mov
mov
scas
sub
cmp
sbb
ret
jecxz
xchg
add
cltd
lret
mov
jb
push
leave
clc
push
jmp
in
or
outsl
pusha
repz
dec
adc
adcl
and
push
testl
jg
or
fs
inc
pop
nop
inc
push
lcall
sbb
lods
sbb
jge
out
hlt
mov
pusha
idivl
jge
imul
push
mov
scas
xor
add
filds
fmuls
pop
hlt
test
rcll
enter
outsb
lods
push
mov
lods
mov
mov
repz
mov
lods
mov
mov
mov
jp
and
jmp
lods
xor
pop
imul
push
dec
sub
nop
push
enter
sub
call
cmc
fidivrs
aam
mov
cmp
jp
push
mov
mov
lea
out
wrmsr
movsb
fs
rclb
dec
or
mov
cmp
or
mov
int
pop
cmp
mov
mov
mov
sbb
ss
insb
mulb
imul
jae
jb
or
pop
stc
pusha
add
pop
jp
pop
add
shll
xor
mov
mov
into
xchg
pop
roll
jmp
hlt
test
inc
inc
push
into
mov
fwait
mov
and
stc
in
and
test
cltd
inc
adc
adc
aaa
and
out
push
sbb
negl
dec
dec
adc
movsb
cmp
idiv
stos
xor
scas
xor
addl
fbstp
iret
xchg
or
in
outsl
inc
ret
ljmp
loopne
int
xor
call
sahf
dec
xchg
cmp
push
or
imul
es
mov
sbb
out
push
pop
clc
ret
push
sbb
filds
pop
roll
pushf
push
ja
nop
mov
mov
lock
adc
cwtl
pusha
jecxz
sahf
lret
jno
fdivs
out
je
bound
push
popf
lcall
xor
push
aad
std
xlat
xchg
add
pop
mov
outsb
ljmp
sbb
inc
adc
bnd
pop
mov
jg
fcoms
or
in
mov
jge
out
jnp
repz
xor
pop
js
and
xchg
mov
fistpll
decb
push
push
sub
inc
repz
mov
mov
bswap
add
pop
addr16
inc
jb
ss
lahf
xor
push
pushf
int
xor
sub
mov
call
jg
xchg
inc
sub
outsl
mov
fstpt
rcll
push
imul
es
pop
cmp
out
pop
cmp
inc
test
loop
ret
inc
xchg
ficomps
hlt
aaa
add
xor
fbstp
inc
outsl
push
jbe
and
mov
mov
test
sub
pop
ret
ret
stos
ss
cmp
cmp
iret
cmp
mov
nop
cmp
add
nop
sub
orb
sub
std
mov
fnstsw
imul
xchg
or
mov
mov
mov
out
daa
inc
call
mov
lcall
and
mov
cmp
lret
and
mov
adc
mov
inc
or
push
pusha
jo
adc
dec
out
imul
in
dec
xchg
fdivl
xchg
insl
call
push
orb
pop
pop
std
pop
in
loopne
je
icebp
xchg
imul
lret
aad
mov
and
pop
fdivrl
xor
and
es
push
cltd
lods
xor
mov
add
xchg
cmp
data16
in
jne
jbe
lea
rolb
cmp
sbb
loope
add
adc
add
cmp
mov
std
sub
enter
sahf
and
cmp
cmp
movsl
das
lahf
mov
jge
les
mov
inc
cmp
push
push
shl
adc
sub
and
mov
repz
js
aad
and
mov
sub
inc
in
mov
mov
movsb
and
xor
push
xor
inc
mov
clc
xchg
sub
dec
out
cmp
adc
mov
dec
jecxz
les
es
or
insl
push
mov
cmp
push
push
and
adc
lea
mov
jno
in
scas
insl
jmp
and
jo
mov
lods
xor
scas
cmp
lea
leave
pop
add
subb
push
repnz
push
outsl
lcall
jae
pushf
ds
rcll
dec
xchg
sbb
push
push
sti
inc
roll
in
sahf
cmp
repz
pop
imul
loope
lea
insb
movsl
fiadds
mov
jg
mov
pop
int
movsl
adc
or
mov
pop
xor
mov
cmc
pop
inc
fisubrs
leave
fldenv
add
push
jp
xchg
jp
sahf
ja
pop
add
push
or
push
sti
test
jne
lock
sti
sub
jp
jge
insl
out
subl
push
xlat
les
pusha
setb
cld
ja
mov
push
adc
jge
dec
orl
xchg
ss
stos
das
in
insb
cmp
daa
sub
mov
xchg
inc
fs
and
sti
jns
insb
aaa
out
cli
mov
jbe
lock
outsb
and
mov
dec
mov
xor
vmovlps
test
push
jge
aad
js
icebp
lock
aad
xchg
jle
rol
mov
and
pop
mov
scas
jnp
out
mov
dec
mulps
add
imul
or
fistpll
pop
mov
enter
inc
adc
cmp
daa
mov
xor
loop
cmpsl
jmp
push
inc
icebp
data16
repnz
pop
xchg
in
fsubs
push
pop
jl
push
scas
dec
fdivl
sarb
bound
inc
out
fmuls
fnsave
mov
push
ret
test
arpl
enter
cmp
test
jle
mov
mov
rcrl
push
cld
test
jbe
insl
sarl
push
push
hlt
pop
push
inc
push
dec
sahf
aaa
loope
lret
add
xor
push
adc
or
push
filds
movsb
xchg
aaa
fcmovb
stc
fs
scas
cwtl
inc
jae
orb
lahf
lret
mov
inc
test
aas
mov
repnz
cmp
mov
jbe
xorl
push
inc
out
cltd
inc
pop
lods
ret
lds
pop
stc
movsl
inc
jmp
into
inc
push
inc
push
ret
sarl
pusha
lock
gs
add
lret
mov
mov
int3
mov
iret
xchg
inc
adc
icebp
pushf
dec
and
pop
mov
or
out
flds
int3
dec
sti
aad
fstps
pop
add
js
mov
mov
bswap
or
pop
lds
movsl
outsb
bound
lods
cmp
loop
test
mov
jno
stc
stos
and
shl
stos
cs
test
cmp
xchg
and
xchg
sbb
mov
lods
push
shr
push
fwait
inc
jl
jge
mov
fwait
inc
or
bswap
test
pop
cli
shll
ljmp
pop
es
test
cmp
jle
xor
mull
les
jnp
mov
out
arpl
and
mov
pusha
cmc
jmp
testl
mov
cmp
inc
sti
cmpsb
sub
lret
test
cmp
leave
push
das
mov
sbb
inc
xchg
or
ret
adc
push
pop
add
pop
mov
iret
sbb
divl
adc
cmpsl
mov
into
nop
push
cwtl
aaa
pop
inc
rorl
or
fwait
rclb
out
inc
adc
insb
pop
pushf
rolb
mov
push
movsl
inc
fdivs
xchg
insl
cwtl
adc
jmp
aas
jnp
pop
js
sbb
add
push
and
in
push
mov
ja
inc
fnstenv
pop
xchg
mov
push
shlb
fwait
lahf
aas
andb
roll
ret
xchg
shll
fwait
cmp
sub
pop
push
icebp
jl
pop
aad
aam
orb
cmp
sub
push
add
mov
fbstp
aam
cmpsb
add
imulb
dec
popf
cmp
aaa
into
cmp
cmpsb
lcall
arpl
lahf
fnstenv
xchg
push
unpcklps
stos
call
sub
lret
and
cwtl
nop
xchg
pop
ret
and
stc
cmp
and
inc
out
pop
scas
pop
sahf
inc
and
int
icebp
sub
pusha
cmpsl
push
mov
lods
inc
or
push
xor
stc
mov
sbb
ret
or
xor
scas
sub
into
sarb
cld
adc
dec
jecxz
and
dec
or
cmp
fwait
scas
pop
jl
xor
dec
or
xchg
rol
mov
mov
jg
rorl
pop
sbb
cmpsb
push
adc
into
inc
mov
xchg
mov
fbstp
lret
dec
fistpl
fiadds
lods
cwtl
inc
dec
pop
faddl
pop
faddl
sti
out
jne
sbb
addb
arpl
adc
xchg
and
loopne
jecxz
cli
andb
call
sti
or
sbb
adc
xchg
add
shll
pextrw
popa
adc
lds
dec
adc
pop
mov
add
inc
test
pop
insl
cmc
fmuls
inc
or
or
lahf
inc
cmp
repz
mov
mov
inc
push
sarl
test
inc
shlb
xchg
sbb
push
notl
push
enter
mov
aam
clc
arpl
add
es
pop
mov
data16
inc
or
jne
xor
mov
pop
mov
and
mov
cs
jge
inc
inc
jp
xchg
cmpsb
sub
lret
lods
xor
cmp
push
push
mov
stos
xor
jl
std
add
xchg
cmp
clc
out
insl
xchg
cli
call
clc
xorb
insl
mov
mov
or
sub
imul
orb
rcr
pop
push
ja
popf
mov
rcrb
test
and
out
dec
pusha
mov
mov
scas
outsb
into
gs
sarb
roll
shlb
sbb
sarb
mov
mov
dec
pop
add
inc
jecxz
dec
imul
pop
mov
mov
cwtl
subb
in
dec
cmpsb
add
mov
mov
jp
jl
sub
lret
lea
jmp
push
lds
shl
mov
clc
in
stc
push
out
jl
pusha
adcb
cmp
jb
ret
cli
gs
pop
clc
stc
mov
out
out
hlt
push
rep
add
cmp
out
push
std
dec
clc
push
outsl
fwait
adc
lea
add
loop
xor
xchg
mov
jecxz
lds
xor
and
lea
fisubrs
scas
cmp
filds
or
jno
pop
adc
xor
into
nop
cmp
pop
add
and
pop
sbbb
add
adc
insl
mov
sar
jae
das
push
lock
int
loop
inc
das
scas
rcll
jmp
add
mov
lods
and
aam
mov
fucom
pop
adc
addr16
lea
jno
popf
shrl
sarb
mov
pop
or
mov
push
rorb
mov
pop
sti
cmp
sarb
and
push
aam
dec
pop
push
or
cmp
push
jno
neg
sub
and
inc
push
add
mov
mov
adc
dec
loop
mov
das
lret
lea
sbb
enter
stos
xchg
insb
lea
jge
xchg
mov
sbb
push
jg
inc
nop
dec
adc
xchg
outsl
jnp
call
std
xchg
cmp
sbbb
xor
and
aas
lods
pop
jmp
add
mov
mov
pop
enter
leave
adc
pushf
cmc
adc
subl
enter
repz
cmp
or
nop
and
insb
iret
int3
fdivrs
push
sbb
jb
out
xor
xor
sub
pop
sti
lahf
push
fs
xchg
sbbb
test
popf
xchg
jge
jnp
pop
int3
ja
adc
adc
ss
pop
add
and
cmp
int
mov
lods
jae
inc
lret
jp
je
and
addr16
lahf
fstpt
out
fsubl
mov
repnz
popa
ljmp
ljmp
cmc
mov
sub
orb
sbb
lret
xchg
jmp
sbb
es
push
cmp
lds
negl
arpl
popa
xchg
inc
das
mov
enter
fidivs
cltd
rolb
pop
inc
add
mov
int3
pop
ret
pop
add
loopne
xchg
cmpb
jge
xor
pushf
push
leave
xchg
mov
push
std
adc
pop
add
mov
cmp
rol
jecxz
push
push
mov
mov
enter
rolb
jo
movsb
xor
mov
rcrb
sbb
scas
sub
outsl
aaa
mov
pop
dec
cs
ds
xchg
jns
mov
nop
inc
push
jmp
in
insl
add
repz
mov
add
rcl
outsb
mov
cmpsl
mov
add
cmc
mov
daa
sub
imul
out
enter
mov
cmpsl
sub
mov
lods
sub
imul
dec
test
str
adc
loopne
inc
mov
fists
mov
mov
mov
out
outsl
mov
jae
fdivl
jmp
sbb
jmp
incl
scas
inc
dec
cltd
cmp
sahf
iret
mov
push
dec
or
cmpsb
sub
and
out
add
fnstsw
pop
xlat
xorb
adc
jnp
insb
jmp
dec
pop
adc
cmp
xor
or
pop
lret
ljmp
mov
addr16
mov
mov
icebp
shrl
mov
movsl
mov
insb
and
lahf
ss
xchg
cmp
in
adc
push
ret
lea
loop
imul
xchg
cmp
flds
fcoms
movsb
sub
mov
pop
cmp
xor
jecxz
aad
mov
or
add
iret
out
ja
mov
imul
push
jmp
jns
xchg
es
xchg
movntq
mov
ret
ds
adc
movsl
rolb
dec
adc
outsb
dec
inc
jmp
mov
int3
xchg
das
sbb
stos
loopne
mov
jbe
rcr
mov
imul
xchg
popa
out
mov
lods
mov
pop
cmp
sarb
scas
movsb
xor
fadds
les
mov
mov
insb
mov
roll
icebp
bound
dec
jb
imul
push
sbb
cmc
mov
test
adc
sbb
out
xchg
inc
mov
mov
push
jmp
lock
adc
xchg
jg
hlt
sub
mov
cmp
mov
pop
mov
xor
mov
sbb
dec
sarb
repz
or
dec
cwtl
dec
push
cwtl
xor
out
es
cmp
cmp
add
loop
mov
or
fwait
ds
xor
nop
add
xchg
jecxz
mov
mov
or
lds
dec
xchg
push
out
cwtl
les
ficoms
dec
adc
push
pop
add
sbb
mov
lods
das
in
aas
inc
or
aam
adc
inc
in
pop
fsqrt
fs
push
pop
add
push
cmp
lods
fdivr
pop
push
mov
cmp
stc
adc
int3
test
adcb
cmpsl
repz
es
lret
xchg
sbb
xchg
dec
int
add
adc
pop
and
stos
xor
xor
scas
je
movsb
sub
cmpsb
adc
dec
jmp
mov
add
jle
int3
xchg
add
sbb
fnstsw
cld
pop
outsl
dec
arpl
loopne
push
and
clc
pop
inc
cmp
mov
js
add
mov
jmp
cmpsb
mov
movsb
push
mov
mov
movsb
mov
insl
cmc
sub
cmpsb
push
ljmp
mov
fidivrl
pop
mov
in
fnstenv
xchg
xchg
sub
mull
sub
clc
pop
jnp
insl
hlt
sbb
push
xor
rolb
ja
add
sti
call
inc
or
shrl
lock
fsubrl
sub
lds
sub
pop
adc
xchg
cmp
mov
sub
sub
dec
std
push
movsl
outsl
add
les
xchg
adc
and
push
xor
push
les
and
outsl
mov
xchg
push
je
cmp
fstpt
xchg
xorb
lahf
xchg
inc
stos
add
jae
aaa
add
insb
sbb
outsb
in
imul
jno
fistps
pop
shrl
push
mull
xor
nop
clc
dec
sbb
adc
aas
lcall
adc
pop
imul
addl
data16
outsl
inc
out
aaa
je
fwait
imul
add
add
pop
cmc
pusha
popa
cmp
lahf
cmp
stos
sub
loope
dec
add
push
stos
pop
call
mov
sbb
out
cld
fs
movsl
sub
adc
test
add
push
jge
adc
xcrypt-ofb
cmpsl
sub
inc
xor
xor
sarl
xor
mov
mov
mov
ret
mov
xchg
inc
test
stos
daa
popf
push
push
aam
aas
lcall
push
leave
jmp
pusha
repz
cmp
insl
sbb
pop
clc
movl
loope
int
les
fdiv
fs
pop
mov
nop
ljmp
test
iret
arpl
cld
push
xor
in
xchg
dec
or
lds
shrl
sub
mov
sub
xor
cmpsl
aaa
push
jge
mov
cmp
leave
mov
ja
cmpsb
in
je
pop
mov
mov
out
dec
adc
jge
or
mov
inc
jle
xchg
and
xchg
and
pop
add
sbb
sbb
repnz
cs
loop
gs
xchg
jno
je
das
mov
push
jne
jno
push
in
lods
je
cmc
cmpb
mov
inc
sub
add
int3
push
push
cs
test
inc
cmp
cmp
out
dec
or
ret
lahf
and
mov
enter
push
add
daa
xchg
sbb
stos
rcrb
mov
mov
rol
sub
or
inc
rorb
fwait
adc
push
adc
pop
mov
movsb
or
cmpsl
and
testb
pushf
inc
in
out
dec
or
std
pop
std
rolb
es
or
insl
pop
push
xchg
fs
mov
sbbl
or
repz
test
pop
lret
xchg
pop
sahf
cld
adc
stos
ds
out
mov
aas
movsl
cmpb
shrl
add
push
out
xor
pop
scas
mov
out
push
add
mov
cmp
pop
pop
movsb
daa
pop
lea
mov
lods
jb
cld
sarb
movsb
sti
jmp
clc
shr
push
ret
cwtl
or
inc
int
int3
mov
adc
sahf
inc
icebp
xchg
and
and
enter
mov
jnp
xchg
push
xchg
mov
mov
xchg
repnz
xor
mov
xor
mov
mov
aam
add
mov
add
sbb
js
out
push
data16
shll
inc
fidivrl
pusha
jns
xchg
pop
loope
and
add
sbb
dec
psrlq
imul
popf
loope
xchg
and
xchg
inc
rcl
jmp
orl
orb
leave
xchg
cmp
adc
mov
cmp
pop
xchg
jge
mov
fwait
arpl
and
lods
xor
cmc
sarl
cld
push
dec
subl
insb
lahf
dec
adc
fstps
js
arpl
jb
mov
ss
mov
mov
adc
mov
fwait
xor
or
adc
push
popf
insb
divb
scas
xor
mov
pop
loop
and
adc
and
cwtl
inc
or
cmp
sarb
or
cld
pop
pop
bound
xchg
mov
inc
or
cld
or
push
hlt
cmpsl
xor
shl
push
in
daa
setnp
fdivs
or
inc
pop
pop
mov
xor
arpl
jns
iret
push
out
scas
add
stos
or
sub
mov
push
push
pop
sti
pop
addr16
mov
sbb
xchg
popa
cmp
jmp
frstor
insb
in
in
insb
in
sar
rcll
lret
cld
pop
lods
std
jge
jbe
jo
test
mov
sub
pop
into
adcb
pop
cmp
xchg
sbb
pop
cld
mov
nop
inc
leave
mov
mov
xlat
or
xor
mov
jp
adcl
jo
add
pop
push
add
hlt
arpl
pop
cmc
mov
dec
jno
dec
push
add
push
inc
push
push
ja
lds
cmp
cmp
lods
aas
push
dec
mov
in
sbb
push
dec
or
mov
mov
sbb
adc
outsb
icebp
lock
dec
or
fsubl
mov
mov
or
jns
push
mov
repz
or
jecxz
out
xor
cmpb
pop
add
sub
add
mov
int3
mov
inc
adc
lahf
xchg
sahf
inc
in
pop
add
movl
pop
addr16
mov
push
cmp
pmullw
push
lods
popa
lahf
inc
mov
lods
mov
mov
mov
sbb
sbbl
outsb
out
mov
in
mov
int3
popl
loopne
pusha
push
fnstsw
jbe
enter
aam
mov
adc
lahf
dec
adc
adc
lea
aam
adc
scas
icebp
add
mov
mov
xchg
inc
mov
xchg
jo
rorb
ror
xchg
add
and
into
cmpsb
xor
dec
adc
mov
pushf
xor
flds
mov
cs
xchg
ds
jnp
popa
inc
inc
loope
push
jge
cs
xor
xchg
out
cmp
movsb
cs
push
xchg
cmp
xchg
hlt
and
mov
movsl
sub
pushf
or
or
movsb
cmp
ds
jns
repnz
xchg
sub
movsb
cmp
mov
push
mov
addr16
fsubr
test
int3
xchg
das
or
pusha
pop
sbb
shll
dec
filds
pop
lock
and
js
dec
ja
sbb
lret
cld
mov
rcrl
shrl
jo
jbe
mov
out
sbb
inc
pop
lds
push
dec
jecxz
mov
push
fisttpll
push
decb
sub
push
cmpsb
cmp
in
les
push
shrb
mul
jns
pop
lock
push
movsl
ficomps
ret
xor
cmp
and
loope
inc
pop
icebp
jb
push
pextrw
sbb
sbb
cmp
dec
insb
popf
ret
shrb
lock
and
lock
inc
xchg
jbe
push
movsl
gs
sbb
enter
mov
cmp
sbb
dec
loope
cmp
out
insl
sub
pop
mov
sarb
scas
loope
sub
shll
addr16
pop
push
mov
addr16
fucomi
test
cs
pop
push
sbb
shll
dec
filds
ret
pop
lock
and
std
push
adc
test
test
xchg
sub
sti
mov
rcrl
shrl
outsl
fbstp
popa
icebp
mov
mov
cmpsb
in
sbb
inc
push
lds
addr16
cwtl
pop
dec
jecxz
mov
push
fmull
ja
cmp
pop
xchg
sub
push
cmpsb
cmp
in
les
add
loop
sub
xchg
lods
push
movsl
fstpl
sub
das
out
cmp
pop
push
dec
loope
inc
pop
icebp
jno
push
pinsrw
sbb
sbb
cmp
mov
imul
mov
loopne
xchg
inc
xchg
jne
push
movsl
fs
sbb
movl
dec
loope
cmp
insb
sub
pop
lea
mov
loopne
sub
shlb
and
pop
push
xchg
addr16
test
xchg
cld
sub
sbb
shll
dec
filds
ret
repz
push
adc
cmovbe
sbb
enter
mov
rcrl
shrl
outsb
fbstp
pusha
icebp
mov
mov
cmpsb
in
sbb
inc
add
cmp
xchg
push
dec
jecxz
mov
push
fisttpl
ja
cmp
mov
cs
xchg
sub
dec
cmpsb
cmp
jecxz
les
add
imul
pop
lock
stos
push
movsl
fcompl
sub
cs
cmp
push
push
dec
loope
aas
pop
icebp
jo
push
hlt
xchg
pop
dec
movsb
cmp
mov
push
ret
mov
imul
inc
xchg
je
push
movsl
arpl
sub
mov
cmp
sbb
dec
loope
cmp
imul
lcall
jbe
mov
fists
add
mov
gs
pop
push
xchg
addr16
fldz
test
leave
xchg
sti
sub
mov
dec
jle
shrl
dec
filds
rcrl
and
push
adc
inc
je
sbb
mov
dec
jmp
rcrl
shrl
insl
fbstp
pop
icebp
mov
mov
cmpsb
jecxz
sbb
inc
add
lds
push
dec
jecxz
mov
out
call
or
cmp
mov
sub
dec
cmpsb
cmp
loop
les
add
imul
inc
add
fistpl
sub
sub
dec
dec
loope
ds
icebp
outsl
mov
js
ret
sbb
push
inc
movsb
cmp
mov
imul
loopne
pop
fdivp
xchg
inc
xchg
jae
push
movsl
bound
ret
mov
cmp
pop
dec
loope
cmp
push
push
or
lods
ficoms
add
mov
fs
pop
push
test
addr16
loopne
cmpsb
fsubr
test
enter
sub
pop
sbb
shrl
dec
filds
rcrb
and
push
adc
inc
jae
sbb
mov
dec
ljmp
push
insb
fbstp
pop
icebp
mov
mov
cmpsb
loop
sbb
inc
add
lds
cmp
xchg
push
dec
jecxz
mov
out
out
push
ja
cmp
mov
sub
xchg
sub
dec
cmpsb
cmp
loope
les
add
imul
lock
test
push
mov
sti
sub
sub
cmp
sbb
dec
loope
cmp
push
xadd
xchg
adc
ss
push
mov
imul
inc
xchg
jb
push
movsl
popa
xchg
sbb
les
cmp
push
aad
loope
cmp
imul
jbe
mov
fstl
pushl
mov
bound
ret
pop
push
adc
mov
loope
movsl
out
test
call
pop
sbb
mov
jnp
shrl
mov
addr16
push
adc
inc
jno
sbb
arpl
cmp
mov
dec
call
or
imul
loopne
pushf
pop
repnz
scas
adc
inc
add
xor
rclb
mov
lock
imul
push
js
cmp
mov
sub
sub
jge
mov
fistps
shrl
icebp
jecxz
and
xchg
jne
fcoms
sub
aam
dec
dec
loop
cmp
insb
sahf
imul
mov
loope
adc
cmp
xor
dec
cbtw
ret
pop
lret
push
jmp
js
fcomi
mov
cs
pop
xchg
sbb
les
rorl
add
pop
lock
mov
mov
fcoml
cmp
das
mov
popa
pop
les
adc
mov
loop
movsb
aad
xchg
movb
imull
or
mov
jp
ret
cmp
loopne
mov
push
adc
xchg
xchg
ret
movsb
cmp
mov
dec
out
ret
pop
dec
pop
aad
cmp
js
pop
repz
adc
inc
ljmp
xor
rcll
mov
icebp
in
imul
push
jns
cmp
mov
sub
mov
jnp,pt
mov
fistps
imul
jecxz
and
xchg
cwtl
jae
adc
vucomisd
sub
cmp
jecxz
cmp
push
push
rorb
mov
and
xchg
adc
cmp
fs
les
test
push
jmp
jns
fyl2x
mov
aas
add
pop
xchg
push
mov
jle
les
rorl
add
pop
icebp
and
push
mov
mov
fistl
cmp
cs
pusha
sbb
shrb
jo
jns
aam
xchg
les
xchg
cmc
daa
push
movsl
pop
push
pop
mov
jns
ret
stos
push
dec
loope
mov
imul
jo,pt
push
mov
ret
movsl
cmp
mov
dec
in
les
add
loop
fwait
pop
repz
stos
adc
aas
std
das
cs
cmp
in
mov
repnz
imul
add
mov
es
cwtl
das
mov
jns,pt
mov
ficomps
aam
xor
jecxz
and
mov
cmpsb
adc
clc
lds
out
aam
dec
dec
jecxz
cmp
imul
mov
and
xchg
adc
jbe
mov
arpl
shrl
ljmp
or
add
pop
nop
push
mov
jge
les
rorb
add
imul
mov
ficoml
cmp
sub
les
adc
mov
loop
mov
ret
add
push
adc
sub
test
lret
sti
mov
imul
cmp
pop
cwtl
das
nop
ret
hlt
mov
dec
jecxz
les
add
insb
ss
repz
stos
adc
ds
das
sub
dec
dec
in
mov
repnz
imul
add
adc
xrelease
and
inc
cmpsl
js,pt
mov
fstpl
aam
xor
jecxz
pop
push
repnz
adc
ret
imull
lds
in
aam
dec
dec
jecxz
aaa
pop
repnz
mov
mov
fstl
cmp
bound
shrl
jmp
icebp
mov
cmp
pop
push
mov
jl
les
iret
dec
loop
xor
icebp
and
push
xchg
mov
fsts
cmp
sub
dec
pop
sbb
pop
dec
jg
imul
ret
repz
pop
mov
ja
ret
test
cmp
loope
mov
imul
cmp
xchg
mov
shll
loop
les
add
insb
xor
push
repz
test
pop
mov
sti
das
sub
cmp
in
mov
repnz
imul
add
xor
push
cwtl
das
mov
ja,pt
mov
fcompl
aam
das
in
jecxz
push
push
repnz
movsb
adc
ret
lds
in
aam
dec
dec
jecxz
ss
repnz
push
int
jns
mov
fcoml
cmp
popa
xchg
les
adc
mov
loop
sbb
icebp
mov
cmp
xchg
insl
sub
cmpsb
pop
mov
mov
jnp
les
dec
loop
xor
arpl
push
push
test
mov
mov
movsl
xlat
xchg
sub
stc
sub
dec
jge
imul
roll
repnz
movsl
push
adc
mov
jne
ret
cmpsb
gs
dec
loope
mov
repz
or
cmp
sahf
pop
cltd
xor
scas
mov
loope
les
add
insl
xor
loop
xchg
push
hlt
mov
test
test
cmp
xor
sub
aam
dec
dec
in
scas
pop
repnz
insb
add
add
xor
mov
and
das
xchg
jbe
mov
ficoml
aam
sub
dec
repnz
mov
and
and
inc
dec
jecxz
xor
push
lret
xchg
mov
fistpl
cmp
pusha
xchg
les
adc
jns
aad
mov
cmp
xchg
imul
cmpsl
pop
mov
mov
jp
lds
int
jecxz
xor
popa
pop
imul
cmpb
jb
and
cmpsl
ds
sub
dec
jnp
imul
rolb
icebp
and
movsl
push
adc
mov
movsb
fs
xchg
lds
divb
imul
cmp
push
pushf
pop
lcall
scas
mov
pop
inc
add
outsb
xor
jns
push
cmc
mov
cmpsl
adc
cmp
xor
sub
aam
dec
dec
out
lods
pop
repnz
jns
xor
mov
and
test
jbe
mov
fcoms
shrl
jmp
jl
dec
icebp
mov
add
rcll
sub
adc
dec
loop
xor
imul
mov
fistpl
cmp
cs
pusha
xchg
ret
pop
ret
adc
js
aad
mov
cmp
xchg
push
adc
mov
fnstsw
rorb
int
in
das
pop
lock
pop
insb
add
ja
mov
mov
movsb
aam
sub
test
clc
daa
mov
pop
sbb
pop
dec
jp
push
sahf
int
xchg
mov
push
movsl
push
adc
mov
mov
les
cmc
mov
cmc
out
imul
cmp
push
fwait
pop
fwait
xor
mov
pop
inc
add
outsl
xor
jns
push
testb
cmpsb
adc
xlat
pop
pop
mov
clc
xor
sub
aam
dec
push
out
lods
pop
repnz
adc
lock
and
test
inc
jne
mov
xlat
xchg
enter
shrl
ljmp
jle
add
outsb
lahf
xsha256
and
and
inc
xlat
adc
jne
pop
cmc
gs
imul
mov
ficompl
cmp
sub
ret
pop
ret
insl
mov
loope
adc
aaa
call
pop
mov
stos
fdivrl
rorb
cs
lock
push
insl
add
xorb
jno
and
lds
dec
pop
sbb
pop
dec
jns
push
popf
int3
out
xchg
mov
push
movsl
push
adc
mov
mov
ret
dec
loope
mov
mul
adc
jle
cmp
push
lcall
cmp
lods
mov
pop
inc
fsubrs
jns
push
testb
movsl
adc
pop
pop
mov
divl
leave
sub
aam
dec
push
out
lods
pop
repnz
jns
xor
mov
and
test
inc
je
mov
xlat
xchg
enter
shrl
jmp
icebp
mov
add
insl
lahf
xsha256
mov
mov
and
inc
xlat
adc
jne
pop
cmc
fs
imul
mov
xchg
sbb
lcall
sub
dec
pop
nop
ret
pop
ret
insl
mov
loope
adc
aaa
call
push
mov
test
lret
dec
in
cs
lock
sbb
ja
mov
mov
mov
les
dec
pop
pop
enter
shrl
push
jge
int3
out
xchg
mov
push
movsl
push
mov
inc
jno
ret
mov
ret
dec
loope
mov
mul
adc
jle
aaa
push
pushf
xor
stos
mov
pop
inc
fsubrs
jns
push
testb
movsb
adc
aad
pop
mov
divb
leave
daa
pop
cmp
out
lods
pop
repnz
jns
xor
mov
and
test
inc
jae
mov
xlat
xchg
enter
shrl
call
icebp
mov
add
insb
lahf
xsha256
lea
mov
and
inc
xlat
adc
jne
pop
cmc
arpl
jl
mov
xchg
sbb
lcall
sub
pop
ret
insl
mov
loope
adc
aaa
call
push
mov
test
cmp
or
cs
lock
sbb
add
xorb
outsl
mov
mov
ret
test
dec
pop
push
enter
shrl
imul
xchg
mov
push
movsl
push
push
and
mov
ret
dec
loope
mov
mul
adc
jle
ss
pushf
xor
stos
mov
pop
inc
std
fsubrs
jns
push
testb
mov
pop
mov
cmc
xor
es
cmp
out
lods
pop
repnz
jns
xor
mov
pop
push
xchg
test
inc
jb
mov
xlat
xchg
enter
shrl
out
jge
dec
icebp
mov
add
imul
mov
and
inc
xlat
adc
jne
pop
cmc
bound
jl
mov
xchg
sbb
lcall
sub
pop
ret
insl
scas
jecxz
js
shl
mov
aaa
call
push
mov
cmpsl
fdivrl
rorb
cs
lock
sbb
dec
xorb
outsb
mov
mov
ret
hlt
es
pop
adc
shrl
push
out
xchg
mov
push
movsl
push
or
sub
mov
ret
dec
loope
mov
mul
adc
jle
xor
push
pushf
xor
test
les
cld
fsubrs
jns
dec
testb
mov
pop
mov
hlt
xor
and
inc
push
out
lods
pop
repnz
jns
xor
mov
push
push
xchg
test
stos
inc
jno
mov
xlat
xchg
enter
shrl
out
jge
dec
icebp
mov
add
push
xsha256
mov
mov
and
inc
xlat
cmove
jne
pop
cmc
popa
xchg
imul
mov
xchg
sbb
lcall
sub
pop
ret
insl
scas
jecxz
js
shl
mov
aaa
call
push
mov
cmpsb
fdivrl
rorb
cs
lock
sbb
dec
xorb
insl
mov
lahf
rcll
inc
repz
pop
adc
pop
inc
jns
push
cltd
int3
out
xchg
mov
push
movsl
push
or
mov
mov
ret
dec
loope
mov
mul
adc
jle
xor
xchg
lcall
cmp
test
push
fimull
les
sti
fsubrs
jns
dec
testb
mov
pop
mov
repz
and
cmp
out
lods
pop
repnz
jns
xor
mov
sbb
ds
inc
jo
mov
xlat
xchg
enter
shrl
in
jge
dec
icebp
mov
add
imul
sub
xlat
push
inc
dec
loop
das
pop
cmc
pusha
xchg
imul
mov
xchg
sbb
lcall
sub
jno
xchg
sub
test
cmp
mov
or
adc
mov
and
pop
in
mov
out
adc
lods
ret
and
and
fdiv
mov
pop
jbe
lds
pusha
lea
xchg
scas
jg
movsl
lret
dec
insb
and
dec
sbb
push
push
jmp
mov
mov
mov
mov
or
fwait
pop
add
mov
jp
lcall
cmp
rcrb
dec
pusha
xchg
pop
aas
push
lcall
adc
add
add
ficompl
out
adc
jb
addl
mov
and
dec
rcll
iret
sbb
icebp
push
xchg
push
xor
and
xor
dec
out
scas
pop
fs
add
lcall
mov
mov
and
lcall
push
xor
int
add
shrl
imul
hlt
inc
mov
pop
outsl
pop
cmpxchg
scas
dec
mov
inc
pop
pushf
cmp
leave
loopne
inc
mov
inc
ret
addb
sbb
out
cs
mov
fwait
in
adc
pop
rol
arpl
lods
cwtl
mov
mov
adc
push
mov
sbb
mov
pop
sbb
inc
inc
ss
test
subl
das
mov
fistps
sbb
std
jmp
xor
fisubrs
push
and
popa
jbe
mov
sub
and
jne
pusha
lock
sti
aad
lret
int
imul
insb
clc
xor
imull
loopne
add
test
int
jmp
push
mov
insb
dec
pop
enter
repnz
jge
add
add
add
xor
add
add
add
add
and
add
add
add
add
sbb
add
add
add
add
lds
out
bound
mov
ja
lods
and
and
and
xchg
jp
fldcw
loope
push
orb
mov
loope
rcll
adc
aad
adc
outsl
xchg
rorb
insl
inc
insl
xchg
mov
inc
imul
cmp
sbb
or
cmpsb
mov
jnp
loopne
stos
xchg
jns
int3
cmpsl
pop
mov
psubb
push
cmp
or
cld
cmp
dec
ljmp
or
push
adc
addr16
sti
push
ss
andb
sbb
outsl
xor
aam
loopne
push
insb
xchg
push
test
xchg
insb
push
dec
or
loope
enter
jp
cmpb
jge
adc
cmp
mov
ljmp
je
or
mov
push
in
dec
sub
mov
sub
or
xor
lock
cli
inc
loope
pop
into
mov
add
push
sbb
dec
iret
mov
or
mov
stc
outsb
outsl
iret
xor
test
push
adc
add
mov
pop
pop
inc
inc
xor
stc
psadbw
lret
mov
divb
pusha
nop
lret
sub
jns
cmp
into
and
repz
clc
and
pop
mov
es
push
gs
sub
out
sahf
aaa
scas
pop
lds
dec
dec
add
lcall
jmp
dec
int3
pop
popa
push
outsb
push
mov
test
cmpsl
mov
test
scas
xor
pop
cmp
loope
xchg
test
cmc
lods
adc
add
xor
mov
mov
fbstp
mov
push
cmpsl
xor
and
pop
scas
enter
xchg
add
and
sub
insl
clc
add
ds
hlt
lcall
inc
pop
jp
imull
out
jl
adc
fstpt
jno
daa
push
out
leave
mov
sub
inc
into
cltd
mov
mov
shll
xlat
mov
stos
dec
in
dec
xchg
insl
push
aaa
add
lret
stc
xchg
int3
iret
mov
cwtl
dec
xchg
mov
xor
ret
mov
lret
hlt
or
aaa
out
mov
ss
lret
cmp
std
les
lret
ja
jmp
cltd
push
fldenv
out
adc
add
lds
lea
insl
sbb
std
jp
jmp
or
cmpsb
lock
stos
pop
lods
xchg
jo
notl
adc
stos
lea
jae
insb
shll
pop
incl
adc
in
out
mov
loopne
pop
and
push
icebp
xor
xor
aad
imulb
shrb
mov
ljmp
test
add
cmp
in
sbb
loop
push
mov
jmp
cmpsl
in
mov
call
nop
jno
mov
mov
dec
mov
dec
mov
mov
cmp
shll
aaa
orb
fbld
pop
les
inc
mov
mov
mov
sti
into
xor
std
icebp
jbe
xchg
cmp
je
cmp
fnstenv
adc
out
fidivs
test
cs
scas
mov
sub
mov
ljmp
daa
mov
cmp
daa
mov
push
cmpsl
xor
mov
movsl
cld
mov
ja
pop
mov
pop
mov
cli
out
cli
lock
mov
das
add
aam
das
pop
pusha
fcoms
sahf
bound
cmp
xchg
cli
and
fldl
dec
mov
cmp
mov
stos
xchg
dec
cmp
push
jo
jmp
cmp
pop
lods
lods
das
je
aad
rcrl
sub
daa
mov
xor
cmpsl
std
jl
add
mov
cmpb
mov
outsl
js
adc
test
pop
in
inc
ret
and
mov
sub
cmpsl
pop
icebp
int3
daa
lea
xor
cmp
inc
add
mov
mov
mov
jp
sub
xlat
cmpsl
xor
sahf
pop
mov
add
icebp
test
inc
push
js
adc
jo
jno
pop
or
iret
mov
push
mov
xlat
dec
scas
push
mov
lods
repz
inc
std
and
add
or
dec
sub
sbb
rorb
mov
pop
bound
cli
repz
xchg
add
cwtl
into
clc
jg
insb
sarb
sub
xor
dec
push
inc
mov
push
push
inc
repnz
pop
arpl
adc
psrld
xor
jns
mov
pop
insb
xchg
mov
out
shlb
jno
and
fdivl
lods
add
adc
iret
mov
jbe
mov
fst
in
lahf
daa
cmpsb
mov
pop
dec
fs
sub
mov
pusha
pop
and
sub
push
std
pop
xchg
sub
scas
lods
add
jno
gs
out
jne
arpl
xor
add
xchg
add
mov
mov
cmpsl
add
add
fs
mov
sti
lock
cmpsl
pop
fmulp
jns
test
testl
sub
inc
cld
insl
pop
movsl
bound
scas
xor
pop
mov
mov
push
mov
cli
int3
lods
mov
out
aam
lret
cli
jno
push
je
mov
xchg
fiadds
inc
or
mov
sub
sarl
pop
notb
pop
inc
sbb
lea
in
mov
sbb
xchg
mov
sub
inc
add
in
lahf
sbb
incl
cmp
enter
std
mov
lods
xchg
aad
les
inc
sti
pop
mov
mov
dec
push
or
mov
idivl
ret
lret
and
fnstcw
mov
out
out
rol
dec
es
sbb
dec
cmp
and
xor
xchg
mov
mov
push
fwait
inc
dec
popa
adc
out
sahf
push
inc
popa
addr16
ficomps
mov
pop
mov
jnp
negb
mov
mov
dec
cltd
jno
adc
mov
ljmp
int3
dec
call
movsb
sahf
pop
ljmp
jbe
push
mov
daa
fildll
xor
imul
stc
add
fcomp
cwtl
mov
push
std
and
into
cmpsl
lods
outsb
fnstcw
dec
int
cltd
xchg
xchg
addr16
pop
loope
xlat
sarb
jns
jge
popfw
outsb
ret
dec
add
dec
add
lahf
dec
add
mov
mov
lret
lods
add
lods
lret
stos
sub
push
icebp
sbb
cmp
aaa
roll
mov
dec
rcrb
pop
roll
jge
mov
loopne
push
adc
